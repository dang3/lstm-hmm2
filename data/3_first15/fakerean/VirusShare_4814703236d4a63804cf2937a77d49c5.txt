dec
repnz
sub
js
rcl
out
repnz
mov
xor
stos
inc
faddl
repnz
inc
jns
nop
stos
cmp
push
mov
push
lret
adc
test
sub
jns
fwait
stc
mov
dec
aam
test
ja
pushf
imul
mov
jno
je
andb
gs
fldcw
pop
mov
mov
push
push
notb
mov
sti
rcll
lret
out
je
pushf
xchg
mov
mov
inc
jo
pusha
push
test
test
clc
data16
lods
add
mov
push
cmpsl
ss
js
push
rclb
xlat
idivb
ja
ret
xchg
jnp
mov
mov
inc
jmp
push
xchg
imul
es
shl
add
adc
negb
mov
xchg
jp
cld
mov
cmp
add
lahf
std
mov
jp
loope
xor
in
in
mov
repz
imul
jne
test
pop
es
fs
aaa
cmp
lea
xchg
dec
cmp
or
jecxz
arpl
jmp
xor
lods
xor
leave
outsb
andb
and
mov
dec
push
mov
les
in
or
je
call
movsb
fstpt
faddl
pop
add
cld
rcll
sub
xor
lods
xor
sub
push
out
imul
add
mov
lds
lds
ds
test
in
mov
cmp
insb
repnz
pop
dec
lock
inc
mov
xchg
cmpsb
sub
add
stc
outsb
xor
outsb
ret
sar
mov
test
pop
lcall
data16
xor
xchg
add
test
mov
insl
in
inc
mov
mov
xchg
loopne
ret
jno
sub
out
mov
in
sub
mov
mov
mov
mov
xor
jecxz
and
fwait
shll
jecxz
sub
addl
rorb
dec
in
xor
jne
iret
lods
test
or
subl
das
mov
fimuls
inc
and
aaa
inc
ds
dec
xchg
rorl
enter
add
mov
daa
pop
dec
aas
imul
andb
push
cmp
andb
add
xchg
fwait
xchg
addl
xor
negb
jecxz
insb
clc
enter
negl
mov
dec
xor
loopne
mov
xchg
popf
out
xchg
repnz
cmc
jp
push
repnz
dec
inc
jae
mov
xor
sub
mov
cltd
aas
dec
cld
movsb
ja
ret
imul
lcall
push
pop
call
stc
add
or
aaa
lret
sub
sbb
mov
dec
lods
push
dec
mov
movsb
mov
inc
outsb
fs
mov
stos
test
sbbl
jmp
aaa
ja
jns
ror
pusha
push
imul
mov
mov
pop
cwtl
imulb
dec
dec
jecxz
push
add
xchg
sbb
aad
rclb
into
cld
stos
and
pop
int
in
shlb
add
dec
mov
mov
test
sete
loopne
xor
and
add
adc
pop
lock
mov
dec
ljmp
das
adc
cltd
scas
shlb
cmp
pop
push
cmp
in
in
dec
clc
int3
xchg
int
outsb
mov
in
jb
mov
mov
push
fs
push
fidivrs
dec
leave
dec
popf
push
and
fistpl
push
rorl
xlat
adc
push
push
ret
inc
fisubs
adc
xor
adc
and
and
jnp
mov
mov
in
fldenv
adc
xor
mov
scas
ret
pop
jno
adc
adc
and
in
mov
insb
mov
push
outsb
icebp
and
out
insb
mov
jnp
leave
dec
outsb
or
rcr
mov
movnti
popa
lret
xor
xchg
scas
jns
mov
lods
inc
and
pop
cltd
rcl
jecxz
sarl
test
inc
and
outsb
stos
ss
cltd
mov
xor
mov
and
push
sub
imul
pop
mov
and
jmp
xor
pop
mov
mov
dec
cmp
pop
mov
jmp
lods
into
and
punpckldq
and
shlb
test
xor
cmp
hlt
shll
push
adc
xorl
data16
xchg
loop
aaa
negl
pop
outsb
daa
aaa
sbb
sbb
cmp
insb
or
cld
jbe
in
sbb
outsb
sahf
push
and
mov
pushf
incl
repnz
fistpll
enter
jns
xor
lret
mov
cmp
jmp
dec
js
inc
mov
mov
and
push
pop
mov
aas
loop
inc
mov
aas
xor
and
ds
push
sbb
int
insb
lock
mov
mov
sbb
pusha
push
popa
xor
orb
es
ljmp
out
lods
pop
jmp
sbb
and
push
movl
int3
sarb
gs
xorl
dec
mov
inc
inc
mov
xchg
int3
rclb
dec
and
mov
lods
neg
pop
mov
pop
dec
bswap
pop
lahf
cmp
dec
test
icebp
lea
push
push
add
iret
push
movsb
inc
inc
loop
fs
hlt
scas
mov
inc
int
mov
js
out
cmp
pop
imul
jno
mov
arpl
into
loopne
mov
mov
push
xchg
add
and
mov
iret
test
std
cmp
and
test
testb
movsl
xchg
pop
mov
mov
mov
jb,pn
mov
jmp
or
adc
xorl
mov
test
xlat
std
pop
mov
loopne
xor
push
dec
addr16
add
mov
and
mov
aaa
lods
movsl
lods
pusha
or
fildl
loope
pop
dec
mov
hlt
in
stos
mov
jnp
lds
insb
js
xchg
or
ljmp
xlat
sbb
xor
outsb
test
xor
daa
inc
mov
cmc
stos
or
ret
iret
mov
insb
shrb
in
mov
daa
or
testl
mov
sbb
push
inc
ret
insl
inc
into
movsb
xor
jge
mov
cld
int3
push
loop
ja
push
dec
add
in
jns
dec
jle
notl
aam
mov
xchg
pusha
bound
push
push
lahf
inc
lods
divl
dec
insl
pop
jle
push
lcall
jo
flds
mov
mov
xor
inc
and
iret
scas
xor
les
pop
insl
xor
in
sbb
shl
pop
cmpsl
mov
fisttps
and
dec
sub
test
and
mov
pushf
cmp
test
and
mov
dec
dec
sub
xorl
mov
xchg
mov
xor
ffreep
sub
mov
cld
push
cltd
fsubs
jns
jnp
xor
xchg
pop
cmpsl
lahf
or
aaa
and
stc
mov
daa
aam
push
hlt
in
cwtl
movb
int
imul
xor
fdivl
inc
jg
jno
jae
addr16
pusha
inc
push
cmp
es
addb
sbb
and
dec
mov
mov
pop
outsl
add
mov
mov
les
aaa
sar
or
aas
add
mov
xor
push
clc
addr16
sbb
pop
cmc
mov
fstl
flds
pop
loop
push
test
stos
sbb
pop
xchg
mov
inc
mov
pop
in
mov
inc
sub
ret
inc
dec
pop
or
cwtl
ljmp
data16
mov
into
enter
es
outsb
imul
int3
in
pop
xlat
pop
mov
pop
mov
pusha
stos
clc
or
xor
arpl
pop
out
adc
dec
aam
inc
xchg
imul
nop
popf
shr
add
std
push
es
and
mov
add
fisubs
movsl
ja
cltd
test
push
sbb
addr16
jno
pop
or
es
popa
xor
sub
xchg
jmp
sub
cmp
rorb
pop
pop
pushf
push
push
pushf
cmp
mov
add
stos
int
fnsave
pop
sbb
scas
jb
mov
test
and
aad
cmp
cmp
shr
cmp
dec
cmpsb
push
lret
rep
jbe
mov
inc
sub
push
mov
jg
bound
dec
and
fists
decb
test
mov
lcall
xor
dec
push
stos
xor
jg
xor
dec
mov
or
or
add
ret
xor
sub
mov
adc
mov
adc
sbb
and
lahf
mov
loop
jmp
mov
hlt
icebp
sub
mov
dec
lods
mov
add
jg
and
pop
mov
jo
shlb
test
andb
cmp
jb
in
pcmpeqw
mov
lcall
adc
or
lcall
cmp
jae
daa
out
mov
test
push
fabs
xor
fld
push
dec
and
outsb
jge
and
ljmp
les
out
cltd
aam
xorb
pop
pushf
test
pop
mov
xchg
mov
xor
test
lret
xor
sub
rorb
mov
iret
mov
in
adc
dec
fildl
and
xor
jle
shll
sub
mov
popf
iret
pop
dec
scas
adc
xor
mov
lock
repnz
insl
push
jg
jecxz
pushf
stos
test
movsl
sub
adc
mov
out
clc
int3
repnz
movsb
popa
pop
push
inc
xor
in
mov
jmp
insl
or
jns
cmp
pop
and
outsb
aad
xchg
add
enter
lods
push
dec
jg
aaa
mov
popf
push
xor
add
cmpxchg
cmpb
imul
add
fnstenv
sub
jne
add
test
or
test
pop
sbbb
lret
gs
mov
in
xchg
stc
inc
mov
inc
cmp
jmp
test
mov
in
cmp
add
mov
and
add
nop
adc
pop
mov
adc
sbb
push
jb
nop
lea
xor
test
not
push
pop
add
ja
inc
adc
jbe
scas
dec
mov
xor
push
mov
cltd
das
data16
fsub
and
clc
dec
rclb
jge
daa
out
mov
sbbb
cmp
and
or
dec
cmp
mov
mov
push
cmp
rorb
sub
and
test
adc
jp
mov
in
fadd
xchg
pop
adc
mov
push
cmc
imul
or
xor
gs
push
cmp
test
adc
loopne
mov
push
xlat
mov
inc
xchg
mov
pop
mov
sbb
testb
mulb
and
and
adc
lcall
aad
cmpsl
fcoms
mov
lret
jmp
shll
and
push
leave
repnz
insb
adc
movaps
adc
push
cld
out
cld
mov
pop
cmpsb
loopne
or
pusha
jmp
lods
mov
fs
in
xchg
mov
xor
imul
sub
icebp
mov
push
jl
out
jo
inc
arpl
mov
ljmp
rcrb
stos
cld
js
xor
adc
pop
or
stos
iret
cmp
sbb
imul
pop
aad
rclb
cmc
cmp
je
imul
repz
stos
push
test
js
cmp
aam
or
and
dec
and
xchg
cmp
xchg
xchg
in
inc
and
jmp
icebp
loop
rcr
inc
bound
fdivl
sub
movsl
xlat
dec
jb
dec
mov
lcall
jp
pop
daa
jbe
and
adc
sbb
in
and
cmp
mov
int3
cltd
fwait
aaa
cmpsl
push
into
xchg
test
bound
enter
xchg
cli
mov
stos
call
inc
xor
inc
call
aad
sub
cwtl
xchg
sub
mov
adc
cltd
cmp
dec
push
test
cmp
sub
addr16
pop
mov
mov
push
xchg
inc
jle
stos
daa
pop
pop
mov
cmc
stos
ds
xchg
xor
sbb
rcr
stos
inc
movsl
ss
xor
jp
push
leave
jge
adc
subb
jnp
lahf
loopne
std
in
jbe
aad
movsb
int3
add
cmp
frstor
dec
insb
data16
push
test
and
pop
sbb
push
in
mov
pushf
dec
insl
loope
sub
test
jg
or
inc
cld
mov
cmp
xor
stos
xor
jmp
test
scas
daa
hlt
test
inc
pop
test
imul
int3
insb
xchg
adc
fadd
imul
and
dec
xor
inc
inc
push
fistl
jmp
jle
pop
out
mov
xor
pop
mov
add
mov
lock
sub
mov
arpl
pop
js
jecxz
outsb
fidivrs
and
mov
cmp
add
sbb
push
dec
xchg
adc
jne
jl
xchg
push
and
outsl
mov
in
push
mov
cmp
cmp
jecxz
shlb
push
lcall
scas
rcl
js
adc
sub
aad
test
clc
and
push
dec
mov
pop
push
push
adc
lock
xchg
jle
jp
test
ret
xchg
mov
or
ja
popa
cmp
jo
insl
dec
mov
idivb
sti
imulb
inc
popa
movsl
test
or
lret
call
addb
jg
inc
sub
pop
test
mov
mov
sbb
jmp
jle
xor
and
lcall
sub
lods
adc
scas
mov
or
mov
push
cli
push
lods
pop
pop
xor
and
mov
cmp
fwait
outsb
push
xchg
and
dec
adc
pop
test
sub
dec
mov
mov
sbb
pop
or
push
and
leave
sbb
mov
add
shll
mov
mov
cwtl
mov
aaa
adc
xchg
dec
push
test
xchg
nop
lahf
mov
orb
mov
mov
imul
rorl
stos
add
stos
push
outsl
xchg
clc
mov
roll
jp
cmp
sbb
mov
xor
nop
inc
fcoms
mov
cmpsl
sbb
cli
jae
aaa
pop
mov
push
sbb
es
jae
jae
cmp
es
fisttpl
cltd
pop
jae
stc
in
xchg
sysret
sub
pusha
mov
rcr
jg
stc
xchg
mov
jbe
add
mov
test
aad
adc
dec
fstpl
fcmovu
lods
pop
insl
popa
fwait
lahf
stos
xor
daa
cmp
std
ljmp
xchg
daa
inc
movsl
mov
xchg
push
inc
mov
pop
adc
lock
pop
js
ss
dec
cmp
fsubl
or
fiadds
pop
sbb
push
enter
xchg
lret
or
push
jb
out
inc
mov
xchg
mov
cmpsl
ss
inc
jb
pusha
cmp
movsl
shlb
les
xor
or
subb
addr16
test
fbld
jno
sbb
fsubl
ret
push
push
stc
or
mov
push
xlat
cltd
negl
insl
push
and
adcb
add
shl
xor
negl
outsb
xlat
jbe
xchg
mov
pop
pusha
mov
inc
mov
pop
aas
mov
popa
ret
inc
in
sub
cwtl
lock
out
push
into
fdivrl
lea
ja
adc
ds
pop
fidivs
jg
dec
arpl
ja
inc
xchg
pop
in
iret
mov
mov
sarb
movsb
sub
add
inc
fistps
stos
fstp
scas
or
jnp
or
sbb
arpl
cmpl
fstps
stos
test
mov
add
mov
jg
out
and
push
enter
push
insl
imul
popl
cmp
xchg
xor
cltd
inc
jl
and
arpl
into
mov
inc
addr16
push
and
hlt
mov
out
sub
mov
int3
or
test
dec
icebp
jmp
sub
arpl
call
mov
xchg
and
jecxz
mov
inc
lret
mov
inc
jmp
mov
lods
push
inc
xlat
stos
mov
sbb
cmpsb
pushl
xchg
nop
sti
mov
xchg
in
push
das
add
or
xchg
fadd
xor
sub
data16
scas
jg
outsl
dec
scas
ds
inc
dec
scas
push
arpl
rcrb
out
movsl
mov
loop
adc
mov
add
mov
gs
outsb
pop
cmp
cltd
cld
mov
mov
out
jno
pop
cmpsb
push
lret
out
mov
aam
fistps
mov
shll
out
roll
cmp
jne
mov
jne
add
ss
xchg
aad
cmp
repz
push
inc
insl
inc
data16
jno
and
fsubrl
movsl
lock
mov
btr
ror
je
std
std
lock
pop
mov
jp
jle
andb
addr16
bnd
mov
mov
ljmp
add
les
pop
dec
jg
mov
xlat
stc
adc
push
jae
psllw
or
xchg
adc
mov
dec
inc
push
or
push
lcall
scas
add
sbb
mov
inc
push
ss
mov
das
test
mov
popa
push
add
lcall
ret
sub
cmp
movsb
xchg
fcmovu
loop
or
popa
mov
sub
into
test
cs
or
push
xor
or
lcall
out
or
dec
jnp
gs
pop
into
lock
or
in
pop
add
js
pusha
inc
pop
cmp
mov
in
sub
cs
inc
lahf
sub
test
mov
jo
es
jo
pop
add
jl
dec
iret
mov
dec
jmp
test
xchg
mov
push
xlat
push
xor
inc
push
push
pop
adc
sbb
rcrb
push
ss
lods
mov
cld
pushl
mov
mov
cmpsl
xor
in
adc
adc
mov
mov
sbb
xchg
mov
test
nopl
add
scas
fst
mov
jecxz
push
cmpsb
test
push
mov
sbb
xchg
cmp
in
fistpl
and
ret
jp
and
ds
and
arpl
mov
jge
repz
std
repz
ja
add
xchg
and
outsb
out
pop
cmp
adc
imull
mov
dec
xlat
es
ret
icebp
into
ret
dec
push
stos
sub
mov
and
sub
popf
icebp
jmp
sub
stos
mov
outsl
leave
jnp
or
bound
push
js
inc
push
pushf
mov
loope
fucom
nop
addb
fnstenv
adc
popa
data16
stos
imul
es
add
mov
adc
outsb
jns
add
or
int3
sbb
and
xchg
xchg
out
sub
add
insl
dec
in
in
pop
mov
insb
xchg
jo
dec
je
fs
jnp
popa
or
cli
imull
ljmp
aas
shl
pop
adc
mov
add
mov
or
xchg
cmp
sub
bound
push
cs
stos
push
pop
mov
bound
insb
and
arpl
out
lret
in
push
jnp
jp
push
mov
jg
fucomip
hlt
xor
pop
sbb
dec
xor
mov
imulb
lods
inc
shlb
insb
bound
lods
ret
scas
jecxz
dec
sti
lret
es
inc
xchg
adc
outsb
dec
cwtd
dec
test
js
aam
repz
std
jo
dec
fmuls
and
add
shll
fmull
sub
add
mov
in
cld
jecxz
adc
js
and
ret
ja
xchg
repnz
shl
dec
cmp
xchg
jnp
pop
xor
dec
sub
mov
xchg
rolb
inc
mov
cmp
andb
and
mov
push
jge
outsl
dec
mov
lcall
pop
jl
cli
leave
inc
push
and
icebp
test
cmp
out
add
stos
lods
jb
jmp
pop
stc
je
jne
lahf
push
push
jmp
push
imul
or
je
mov
popf
pop
or
cmpsb
pop
icebp
add
in
bound
out
xlat
dec
adc
sub
jo
dec
mov
mov
dec
cmc
pop
movsb
outsb
jae
fsubs
cwtl
mov
sbb
cmp
sahf
nop
in
or
testl
nop
rolb
jge
cli
aas
notl
lcall
nop
movsl
push
inc
roll
mov
leave
cmp
imul
mov
loop
inc
loop
test
jmp
mov
ja
cmp
scas
cltd
test
arpl
add
cmpsb
cmp
xor
lds
inc
testb
sub
out
and
xchg
and
xor
cld
gs
cmp
cmp
bnd
divl
rcrl
cmp
sub
jne
clc
std
sub
jno
push
repnz
push
push
inc
lock
shl
mov
or
jne
jle
or
jle
mov
aam
pop
mov
adc
and
clc
gs
pop
ds
cli
jmp
bnd
inc
ret
in
scas
xor
or
cmc
mov
lods
popf
xchg
cwtl
test
xchg
fildl
ss
daa
dec
outsb
pop
add
ja
sbb
xchg
es
lds
shrl
imul
cltd
adc
out
cmp
cmp
mov
inc
push
test
pop
sarb
or
xchg
mov
enter
roll
out
lea
rolb
cmp
or
icebp
cmp
jmp
sub
imul
mov
mov
fwait
rcrl
lret
pop
dec
xchg
push
icebp
mov
cltd
mov
mov
pusha
cs
ret
jge
sub
mov
pop
mov
pop
cmpsb
les
int3
push
push
cmpsb
jp
dec
popf
stos
test
push
rcll
stos
pop
sbb
push
pop
out
into
and
fidivrs
add
out
movsl
fucomp
loopne
push
call
jnp
inc
pop
imul
sbb
xchg
push
jg
lcall
stc
pop
pop
pop
dec
sbb
std
sub
mov
or
xchg
outsl
sub
inc
push
and
jl
repnz
cmc
mov
mov
mov
addr16
sub
mov
mov
mov
shlb
dec
in
jge
into
aad
les
gs
flds
mov
dec
or
pop
loope
and
ja
insb
sar
cld
pop
arpl
xchg
add
sub
jl
inc
add
pop
xchg
inc
pop
push
adc
ja
cmc
xchg
bound
mov
popf
push
cwtl
loope
and
rolb
nop
sub
stos
gs
cmc
mov
lret
mov
pop
stos
rcl
adc
sub
mov
int3
inc
sbb
cmpsb
stos
dec
fdivr
or
push
inc
jns
es
jg
addb
cwtl
xchg
std
dec
out
sub
ss
jo
or
jecxz
and
test
and
sbb
dec
xchg
lret
and
test
pop
or
xchg
in
aam
mov
push
clc
ja
sbb
sarb
stos
mov
cmp
push
pop
hlt
fxch
sub
in
stos
or
jb
cltd
mov
in
pushf
fisubl
test
or
dec
aaa
jl
sub
cs
xlat
lahf
daa
fwait
xchg
pop
sub
and
cltd
out
and
sbb
cmpsb
pop
mov
mov
outsb
add
lret
fsubp
shrb
ja
add
fmul
mov
insb
enter
pusha
ffree
frstor
shll
insl
popa
sbb
movsb
mov
outsl
insl
xlat
adc
jmp
xorl
sub
sub
push
jae
mov
andb
adc
gs
pushf
hlt
mov
test
pop
and
push
divb
inc
or
mov
inc
imul
sub
fdivrs
mov
xchg
insl
add
mov
ficompl
sub
xor
push
shlb
mov
cmp
xchg
hlt
scas
dec
fwait
mov
inc
sahf
ja
add
xor
out
sbb
push
insb
loop
xorb
cmpb
sub
or
mov
mov
cmp
xchg
xchg
adc
fidivl
lods
cli
leave
dec
xor
test
or
sub
gs
push
sub
jmp
les
sti
ja
push
jae
sbb
lds
push
sahf
fbstp
scas
cmp
jle
cmc
dec
fsts
jmp
mov
stc
lods
push
mov
aas
lret
insl
popf
leave
jbe
fistps
stos
or
rcrl
pop
pushf
jo
loopne
jmp
push
repnz
mov
xchg
xchg
sub
pop
mov
aas
int
xchg
push
lret
inc
adc
ror
push
inc
mov
aaa
mov
mov
test
jo
inc
stos
adc
js
mov
push
lcall
xorb
mov
mov
mov
jp
das
and
ds
insl
dec
dec
imul
jae
pop
imul
xorl
xor
sub
inc
adc
inc
push
orb
xchg
aam
push
mov
mov
lcall
or
out
out
mov
xchg
je
ret
out
or
movb
xchg
pop
in
out
cmp
push
push
hlt
jb
aad
cmp
adc
sub
shlb
cmp
inc
fldcw
pop
cmpsl
adc
fdivs
adc
mov
mov
push
add
lret
mov
enter
cmp
dec
and
mov
xchg
imul
jno
loop
ret
hlt
popf
scas
push
inc
sub
in
push
out
mov
mov
add
ljmp
mulb
sbb
in
cmp
es
and
xlat
jns
cmp
adc
pop
addr16
lds
out
mov
lods
add
mov
cwtl
xor
inc
adc
aas
jo
sbb
jle
adc
pop
cmp
sbb
dec
shll
mov
idivb
mov
or
xchg
inc
std
outsl
mov
push
mov
and
sub
mov
cli
pop
push
jle
addr16
adc
fdivl
insl
sbb
fsts
push
sti
out
push
sti
and
sbb
mov
jbe
cld
dec
mov
sarl
pop
sub
jecxz
sti
push
and
jp
js
out
addb
mov
sub
pop
or
dec
insb
out
insb
in
or
sbb
fdivrs
lcall
insb
into
adc
or
orb
mov
cs
jns
repz
stc
adc
and
ret
jae
jp
sub
dec
les
push
dec
mov
cmp
push
sti
xchg
adc
pop
lret
int3
lds
pop
jo
dec
jns
enter
pextrw
mov
out
loope
mov
fwait
inc
xchg
adc
or
mov
inc
mov
aaa
or
jge
sbb
xor
js
add
cs
push
les
cld
fiadds
movsl
inc
fnstcw
mov
mov
bound
dec
sahf
std
and
ret
sbb
cltd
mov
leave
loope
into
dec
lahf
mov
lock
jl
push
outsl
xor
fbld
fnstenv
loop
xchg
mov
lea
cmp
mov
push
mov
mov
pusha
in
lods
mov
pop
dec
mov
data16
movsl
pop
jae
pushf
push
add
cmp
in
xor
lahf
add
jle
movsl
mov
mov
nop
subl
mov
std
loopne
rcrb
in
jno
pop
jge
rcr
xchg
sarl
outsl
inc
call
jno
xchg
shl
fistps
push
fisttps
push
or
in
push
xor
or
fstl
inc
nop
icebp
mov
mov
popf
test
adc
aaa
inc
fdivrl
outsl
mov
or
xor
xchg
adc
aad
test
in
adcb
cmp
add
fs
push
push
in
mov
adc
int
push
or
mov
jae
rol
movsl
repnz
push
insb
je
xchg
sahf
inc
mov
xor
dec
rorl
and
sub
lea
testb
xchg
and
out
lcall
cwtl
mov
push
xchg
outsl
cmp
dec
outsb
or
pop
pop
push
movsl
add
sub
cmp
xchg
gs
mov
loop
inc
sti
push
dec
xor
neg
and
sbb
or
cmpb
subl
fnsave
scas
mulb
into
push
rcl
out
sbb
das
lock
fistpl
ds
pop
inc
xor
call
cmp
adc
sbb
aam
dec
les
push
sbb
shl
out
mov
addr16
or
mov
popf
aad
pushf
xchg
adc
cld
dec
adc
inc
lods
xor
jno
lds
outsl
aaa
mov
cmovbe
inc
lods
shll
in
push
pop
lret
mov
fistpll
mov
mov
lods
xlat
lahf
mov
je
ds
sbbb
ds
mov
cmp
iret
fcmovnb
sub
jnp
mov
fistl
jo
add
sub
js
das
inc
jge
mov
mov
imul
mov
test
mov
es
pop
mov
jmp
push
mov
shrb
push
jge
dec
imul
je
fistpl
sbb
cltd
repnz
lcall
sbb
les
mov
sahf
mov
xchg
dec
leave
xchg
jge
aas
movsl
push
mov
aam
jle
add
ret
call
xchg
sbb
adc
pushf
in
jo
xchg
xor
sti
sbb
cmp
xchg
pop
cmc
mulb
sbb
cmp
cmpsl
jp
jae
inc
jo
xchg
addr16
push
loopne
sub
pop
flds
outsb
out
push
mov
mov
inc
or
inc
mov
test
mov
test
lahf
inc
cmp
repz
jp
inc
ds
jp
push
and
push
aaa
lret
jl
aas
xor
cmp
pop
inc
sbb
mov
sbb
xchg
xchg
push
jb
mov
push
insb
and
xorb
cmpsb
cmp
and
std
or
and
clc
inc
mov
movsb
es
cmp
xor
push
call
aas
xchg
or
cmpl
xchg
fwait
or
test
pop
dec
jl
daa
sub
dec
in
pop
dec
and
mov
popa
mov
xchg
les
filds
push
xor
adc
xchg
xchg
arpl
add
or
mov
or
push
je
mov
aaa
mov
dec
mov
cmpsb
sbb
jg
ja
fsubrs
cmp
jae
fwait
mov
imul
xorl
aaa
aaa
cmp
lret
xor
mov
jl
lahf
dec
je
jo
pshufw
imul
pusha
mov
dec
mov
js
add
xor
jae
mov
cmp
pop
fwait
xor
ja
pop
mov
outsb
mov
mov
mov
fwait
mov
daa
outsl
mov
dec
add
dec
mov
rcrl
xlat
sub
cmp
je
lret
xchg
fldl
test
test
jae
call
aas
and
xor
nop
or
lods
arpl
mov
jae
hlt
jge
popf
repnz
repz
test
fs
cmpsb
adc
lret
xorl
dec
mov
sub
sub
mov
push
outsl
mov
test
scas
push
test
mov
loop
pop
lods
div
mov
hlt
in
cmpsb
pop
enter
xchg
rclb
mov
out
icebp
xchg
xchg
push
sahf
mov
push
loop
or
stos
cmc
gs
lods
xchg
fwait
xor
aaa
in
xchg
daa
aad
dec
fwait
dec
cwtl
rcrb
mov
js
out
arpl
ror
stos
fs
int
jle
out
xchg
call
pop
je
mov
mov
out
sub
sub
xor
repnz
cmp
cwtl
sub
dec
dec
insb
jae
add
dec
call
cld
inc
arpl
push
mov
or
mov
xchg
ffree
pop
xor
pop
stos
mov
mov
lods
mov
pop
iret
pop
jg
fucomip
and
out
incb
es
xor
mov
inc
aaa
cmpsl
pushf
inc
test
add
pop
cltd
dec
xorb
fwait
inc
cmp
add
loope
mov
test
jns
call
leave
adc
xor
fwait
loopne
test
out
mov
scas
divb
or
push
cmp
leave
loopne
in
andb
sbb
dec
mov
add
mov
sbb
xchg
iret
ret
push
cmp
mov
cmp
or
mov
xor
push
aam
loop
dec
push
imul
testb
addr16
jmp
add
movsb
cmpsl
or
inc
and
or
push
push
pop
or
test
flds
inc
pop
xchg
pop
ds
pop
jecxz
mov
jbe
lret
sbb
scas
cmc
mov
add
lea
daa
mov
mov
mulb
test
inc
leave
je
jns
je
js
pextrw
pop
cmp
adc
cmc
dec
add
xor
stc
les
xchg
out
xor
cmp
ja
jbe
mov
setns
test
in
sub
negl
stos
or
mov
popl
adc
sbb
addr16
mov
orl
and
test
push
xor
pop
sbb
mov
aaa
repnz
and
or
pop
inc
in
pop
sub
movb
loop
pop
test
cmc
dec
or
jge
xchg
ss
mov
repz
fcmovnb
insb
jge
mov
xchg
scas
cmp
jmp
vzeroupper
add
in
adc
test
jmp
mov
fcomps
mov
dec
scas
inc
ds
jle
les
test
push
into
lods
jae
push
add
sub
dec
adc
aad
in
xchg
enter
mov
mov
xchg
call
das
and
adc
jge
inc
cmpb
xor
xchg
lods
loopne
and
push
dec
aam
cwtl
xchg
mov
cmp
or
inc
sbb
sub
loop
icebp
daa
stc
mov
pop
addr16
xchg
ffreep
xchg
adc
insl
ja
pop
push
jle
lds
movsb
cs
lock
dec
fisubs
jno
jb
mov
std
sarl
mov
push
inc
xchg
sti
and
movsb
stos
rorb
and
xchg
dec
dec
into
push
fcmovbe
sbbb
add
pop
mov
shlb
lret
adc
stc
push
push
push
pop
adc
jp
jecxz
mov
pop
sub
cmpsl
popf
xchg
orl
xchg
dec
add
das
in
pop
shll
cmp
fnstcw
pop
bound
cmp
lcall
fwait
mov
mov
cld
adc
dec
fcomi
dec
pop
dec
xchg
push
pop
and
xchg
mov
add
pop
inc
out
dec
sub
les
mov
mov
cmp
push
add
mov
lods
xchg
push
loop
inc
test
add
fistpl
mov
jns
or
adc
pop
push
bound
test
jne
push
jns
lods
test
pop
push
jnp
iret
aas
repz
hlt
sahf
inc
es
push
push
subb
jp
addb
rcrb
loop
icebp
jmp
ja
filds
push
sub
cmpsl
push
ret
filds
mov
pop
cld
ja
or
sti
dec
leave
movsb
add
sub
sarb
lret
inc
movsb
dec
outsb
add
out
sub
pop
sub
dec
lea
dec
out
pop
push
pop
adc
jno
out
push
inc
mov
enter
sub
dec
stos
sar
lret
je
lods
mov
repnz
cwtl
fisubs
push
jmp
push
add
aad
in
or
loopne
out
into
lds
js
sub
cmpsl
int
fwait
or
test
and
movsb
insb
push
jmp
dec
gs
dec
adc
outsb
xchg
push
loop
into
dec
dec
lea
xlat
xlat
ficoml
loopne
jg
xlat
lds
mov
push
cli
mov
mov
mov
clc
icebp
inc
les
xorl
jle
in
in
inc
popa
aad
jne
arpl
dec
push
pop
jbe
jp
inc
xchg
and
mov
call
je
fistps
and
xchg
xchg
sub
xor
lds
fs
aam
add
in
inc
scas
xchg
sarb
adc
cmp
ret
outsl
divl
gs
adc
or
les
shll
inc
add
push
daa
sbb
mov
inc
add
mov
arpl
sti
movl
mov
popa
adc
arpl
fcmovnu
adc
push
dec
pop
ja
adc
xor
std
nop
add
in
mov
xchg
sbb
out
xchg
lock
mov
cmpsb
out
adc
push
jnp
aam
mov
pop
xchg
mov
je
or
pop
lea
sbb
cmp
roll
movsl
out
jle
hlt
or
lcall
jp
cmp
lock
pop
clc
mov
adc
jae
dec
rcrb
push
inc
int3
stc
scas
mov
add
lock
ficoms
movsl
into
aaa
xchg
mov
add
std
bound
mov
mov
adc
mov
mov
dec
mov
push
mov
or
stc
mov
cltd
mov
lcall
cmpsl
jmp
es
adc
std
test
aam
stos
xchg
jp
stos
es
sbbb
ja
daa
or
adc
sbb
pop
dec
dec
xor
aas
pop
test
clc
in
mov
test
mov
pusha
sub
xchg
das
inc
jnp
out
notb
loope
jno
shll
dec
les
cmp
shrb
pop
xor
mov
add
mov
or
mov
xor
mov
mov
add
push
aam
lds
cmp
xchg
mov
pusha
xchg
cmc
jno
adc
addr16
xor
outsb
inc
insb
faddp
das
cmp
rorb
cmpsb
stos
out
xchg
inc
lcall
mov
fistpll
shll
jb
push
sbb
sbb
jbe
jns
rcrl
pop
loop
pop
jg
pop
rorb
add
repz
adcl
cmp
mov
pop
mov
iret
jne
push
xchg
outsb
rolb
lea
add
cmp
jge
popf
cmp
or
ret
add
imul
loopne
aas
mov
icebp
arpl
out
inc
cmp
xor
jmp
mov
pop
dec
xor
pop
fs
cwtl
outsb
int3
jbe
lds
popa
cmpl
push
fwait
daa
xchg
out
xchg
mov
out
dec
ret
and
dec
mov
jecxz
sub
aad
mov
sub
pop
out
inc
movl
jno
fistps
mov
in
mov
cmp
int
jns
mov
mov
cs
sub
sub
lcall
arpl
stos
jge
push
jp
in
mov
cli
enter
out
or
movsb
mov
insb
das
mov
push
js
hlt
shlb
mov
out
adc
and
xchg
lret
xor
cmpb
std
cwtl
inc
popa
out
xchg
cli
addr16
flds
pop
pop
daa
and
std
imul
sub
or
arpl
pop
mov
outsb
fucomp
mov
inc
sbb
iret
setl
mov
push
insl
xchg
idivb
loop
pop
xor
mov
jnp
push
and
sbb
test
idivl
inc
mov
stos
jg
xor
dec
mov
sub
add
add
rol
sub
or
push
mov
mov
out
nop
stos
mov
mov
daa
ret
cmp
into
lret
push
mov
sub
sahf
test
jb
xlat
in
mov
int3
cmp
or
adc
dec
arpl
out
and
roll
add
pushl
out
scas
popf
imul
or
loop
insl
js
lock
xor
cld
push
push
dec
mov
jecxz
and
fidivl
dec
ss
add
aaa
sub
lea
jecxz,pn
movsl
das
popf
xchg
pushf
mov
bound
dec
data16
push
mov
shr
ja
and
or
inc
cld
out
jb
mov
jbe
jp
dec
scas
xchg
push
push
andl
ja
pop
scas
and
fs
and
mov
mov
mov
pop
es
adc
add
mov
sub
xor
xchg
cwtl
push
or
aas
loop
mov
cs
xchg
ss
stos
and
pusha
jb
daa
or
or
popf
lds
jp
cmc
jb
mov
sahf
lods
sarb
sahf
sub
jmp
inc
pop
sub
add
ret
mov
repnz
ret
xchg
sti
push
jmp
int3
pop
jbe
fadds
adc
lret
ljmp
movsl
mov
fidivrs
dec
pusha
fdivr
dec
pop
repnz
xchg
mov
cli
mov
adc
inc
iret
mov
xchg
mov
cmp
pop
mov
and
push
mov
fcoms
mov
in
sbbb
sbb
mov
jl
cmp
test
clc
aaa
push
jmp
jne
push
jmp
xchg
out
adc
cld
ja
loop
sarl
inc
sub
dec
push
mov
or
inc
xchg
inc
test
imul
push
pop
imul
pop
dec
fsubl
mov
mov
mov
out
shrb
mov
add
mov
jns
sub
shll
inc
or
xchg
es
push
push
mov
mov
cmp
dec
adc
xchg
fisttpl
in
cmp
cmp
test
das
sarl
push
imul
xor
into
jge
mov
jno
xchg
pusha
push
sub
adc
mov
xchg
adc
xchg
mov
es
repnz
push
mov
xlat
cli
push
jb
out
cmp
fildll
cmpsb
outsb
pop
jp
xor
adc
das
cld
into
out
or
aad
xchg
xor
pop
jecxz
add
push
jl
dec
pop
pop
jle
inc
cmpsl
sbb
adc
cmp
cmp
lret
jmp
outsb
push
xor
loop
enter
jge
sbb
mov
stos
dec
jns
fwait
cmp
in
push
scas
push
in
add
xor
push
mov
pop
cwtl
insl
cli
test
arpl
sbbb
std
aam
cmp
fdivl
out
test
sub
push
sbb
int
sbb
mov
into
dec
pop
iret
test
cwtl
or
pop
mov
popf
mov
jle
imul
cmp
inc
lock
loope
shrl
fdivs
pop
dec
push
call
cli
pop
adc
adc
pop
mov
jns
mov
mov
jne
push
sbb
sahf
lock
stc
and
out
and
dec
xchg
adc
sahf
add
inc
sub
add
dec
icebp
stc
loop
repnz
pop
rclb
xchg
iret
stc
addb
or
adc
jb
sub
mov
in
aaa
js
decb
jmp
or
outsb
stos
mov
pop
mov
dec
outsl
xorb
stc
out
das
ja
mov
dec
adc
inc
leave
jne
fisttpl
cli
stc
or
cltd
out
lahf
movsl
imul
data16
mov
sub
mov
cmp
mov
ret
ss
popa
cwtl
mov
rclb
sarb
jne
lock
cmp
mov
xor
lock
ljmp
cld
mov
std
xor
mov
pushf
andb
mov
inc
sub
jmp
rcll
fistpl
jecxz
and
or
ret
enter
insb
pop
insb
insb
fisubs
and
iret
jl
and
filds
loope
scas
arpl
sub
mov
out
mov
cld
mov
pop
cmp
and
sti
lods
add
cmpb
pop
loop
test
shl
mov
mov
ss
gs
stos
cmp
push
scas
jbe
and
adc
fistl
stos
xchg
xchg
fcoms
jae
popf
aad
dec
push
or
fisubrl
in
xlat
dec
loop
dec
clc
dec
push
jecxz
mov
cmp
mov
outsl
push
adc
imul
add
iret
jbe
out
push
lcall
sub
repnz
movb
out
rcrl
pop
out
push
iret
jp
test
xchg
es
adc
insl
add
imul
cmp
mov
gs
cli
adc
imul
adc
jns
sahf
push
add
fs
mov
ja
or
push
negl
or
inc
xchg
or
call
xorl
sub
loop
push
repz
ret
ficoml
xchg
sbb
or
shl
mov
es
mov
das
sbb
xchg
pusha
mov
test
xchg
aad
adc
repz
mov
xor
mov
inc
cmp
cmp
addr16
fistpl
jl
shl
adc
ljmp
test
cmovle
add
ljmp
pmuludq
dec
sub
push
xchg
dec
js
push
jp
enter
push
in
adc
dec
scas
aad
faddl
leave
cmp
mov
mov
cmp
popf
stc
bound
stos
pop
jg
add
loope
xchg
dec
outsl
int
pusha
int
sub
fisubrs
jno
pop
jmp
adc
sbb
push
and
add
orps
fbstp
stos
rorl
ficompl
sub
fs
xchg
int3
rolb
imul
xor
push
and
adc
mov
in
xchg
ds
rcll
bound
test
pop
popa
lret
dec
dec
call
repnz
jo
aaa
lret
xchg
adc
inc
sbb
xchg
mov
lahf
inc
jae
call
inc
imul
mov
cltd
pop
ds
or
outsl
pop
or
mov
mull
mov
xorl
mov
pusha
cwtl
mov
repnz
sub
das
mov
jb
lret
fwait
out
rcrb
aas
insb
movsl
arpl
mov
daa
stos
pop
inc
mov
es
jecxz
loop
sahf
sbb
loopne
sbb
dec
mov
mov
xor
fwait
jne
hlt
dec
movsl
jae
push
mov
or
inc
sub
sbb
ret
mov
xor
iret
mov
movsl
shl
sub
push
cltd
insl
sti
outsl
icebp
jmp
mov
scas
lahf
leave
sbb
lods
cmp
dec
dec
aad
sbb
mov
dec
xlat
cmp
lahf
stos
jl
repz
mov
gs
add
mov
cmp
mov
sarl
push
dec
out
sti
std
rcr
mov
jae
jno
and
repnz
add
and
push
leave
sub
mov
add
pop
sbb
jns
rcll
rcll
inc
sbb
inc
jns
jo
xchg
je
xor
cmp
or
adc
mov
add
ret
sub
adc
out
mov
push
stc
mov
sub
dec
outsl
out
icebp
or
xchg
mov
mulps
sarl
lds
xchg
movsl
cmp
xor
scas
insl
cmp
je
mov
fadd
mov
add
faddl
and
dec
xchg
into
lock
fpatan
ja
sbb
inc
mov
jae
aas
xor
xchg
nopl
emms
push
sub
mov
je
dec
add
lea
test
fldt
cltd
xchg
push
mov
adc
pop
xchg
sahf
xchg
mov
sub
lock
loope
mov
adc
jo
jb
scas
int3
xor
xor
mov
pop
fwait
mov
pop
push
and
push
out
hlt
les
mov
mov
scas
lds
mov
scas
mov
loop
movsl
and
outsb
mov
outsb
test
sbb
movl
repnz
lret
or
loopne
out
jnp
xchg
xchg
mov
push
out
push
and
sti
xlat
mov
out
mov
inc
nop
add
fdiv
filds
fbld
ds
cli
adc
or
test
adc
xor
mov
pop
xchg
push
jno
enter
inc
lock
jmp
xchg
adc
test
mov
scas
jp
push
push
jbe
pop
or
jle
mov
mov
je
aas
in
nop
or
push
cwtl
scas
lcall
mov
sub
test
add
mov
or
shrl
enter
cmpsb
fisttps
sti
inc
data16
inc
lock
dec
aaa
sub
outsl
push
sbb
or
mov
ds
push
mov
in
cmpsl
push
xchg
jno
and
xchg
jmp
mov
lahf
pushf
xchg
inc
fimuls
int
mov
jnp
add
fcmovnbe
jae
int3
mov
lret
pop
pop
std
cld
sbb
inc
or
int3
rorl
xor
add
sar
cmp
in
jmp
in
rclb
mov
popf
inc
rcrb
inc
nop
lea
js
out
lods
fsubrs
pop
push
negb
jp
enter
inc
pop
mov
mov
pop
mov
out
mov
jb
adc
cli
and
aad
jo
in
add
lret
mov
xchg
addr16
rorl
fwait
mov
dec
sbb
jae
sarb
xorl
out
jg
xor
les
add
loopne
shrb
test
xor
dec
sbb
pop
xchg
dec
movsl
push
divl
pop
jge
xor
ja
shr
jbe
mov
shll
cmpsb
sbb
lahf
aad
rolb
setle
or
dec
dec
jecxz
sub
mov
mov
and
mov
jne,pn
mov
pushf
pop
mov
imul
fs
js
shll
and
out
test
aam
imul
int3
std
pusha
test
in
xor
or
xlat
push
or
jnp
lret
add
xchg
sub
mov
xor
bound
sub
push
mov
fisubrs
cmc
pop
shlb
xchg
jle
and
cmpsb
jp
sbb
sbb
xor
push
sbb
adc
inc
push
inc
fisttpll
push
shll
mov
test
adc
inc
ret
push
push
int3
pop
xchg
xor
cmp
clc
test
adc
andb
adc
repz
adc
or
mov
dec
ja
cmp
add
dec
inc
jg
lods
sub
mov
repnz
xchg
dec
push
jo
add
or
ljmp
outsl
ds
data16
mov
xchg
push
jno
enter
adc
xor
push
inc
jp
gs
mov
outsl
stc
loopne
jmp
in
in
mov
data16
and
les
lock
pop
call
pop
je
dec
mov
xchg
dec
loope
adc
xchg
ficoms
movsb
adc
jbe
imul
inc
inc
lret
lret
or
xchg
add
pop
xchg
loope
or
xlat
or
xor
jbe
jnp
fisubs
cli
dec
shll
int3
mov
sub
sub
fdivs
inc
stos
movsb
xchg
fs
cs
adc
push
popl
add
dec
pop
cmc
xchg
andl
pop
mov
or
call
sbb
sahf
jne
andb
xlat
iret
and
push
lret
out
jl
out
test
dec
cmc
pop
mov
add
fwait
arpl
out
xchg
push
in
lea
push
xor
mov
lcall
mov
cmp
xor
mov
icebp
fwait
adc
icebp
cmp
jnp
sub
dec
popf
cld
in
out
arpl
jno
leave
outsb
xchg
lods
gs
mov
dec
xchg
xchg
outsl
cmp
adc
test
mov
les
xchg
dec
cltd
test
and
pusha
fnsave
jmp
aad
sub
sub
push
lahf
jp
insb
dec
lods
in
leave
xor
adc
ljmp
adc
shll
sbb
sub
insb
repz
jmp
pushf
sbb
push
ss
repz
inc
fs
and
fimuls
and
and
adc
mov
jnp
sub
mov
or
je
adc
pop
push
repz
out
scas
fcomps
dec
enter
fdivs
add
sbb
ja
fcmovb
cmp
scas
jmp
inc
mov
mov
jmp
arpl
fmuls
into
adc
insb
mov
inc
test
push
xchg
shrl
pop
mov
xorb
push
rol
push
xchg
sbb
shl
cs
cmp
outsb
popa
int
adc
rclb
pop
push
dec
mov
push
ja
jo
sbb
mov
testb
lds
jg
sub
jmp
cltd
xlat
stc
add
ljmp
xchg
jns
inc
repnz
push
aas
mov
hlt
in
xlat
push
leave
pop
cltd
fbld
sbb
sbb
xlat
gs
xor
mov
int3
cli
lock
pop
pop
or
xchg
pop
jno
sub
mov
mov
out
ja
add
popf
inc
rcrb
jo
stos
imul
push
fcmovnu
pop
push
pop
shll
cmp
pop
test
mov
xchg
fistps
xor
dec
push
daa
mov
dec
jg
mov
cmp
inc
xchg
mov
rorl
pop
test
das
sub
std
and
daa
popa
popf
ja
mov
mov
pop
pop
or
cld
push
mov
mov
inc
push
rcrl
sbb
rclb
mov
outsl
push
fdivs
cmpl
cmpsb
jmp
addl
fs
cli
dec
jno
push
fsubrl
jle
ds
pop
xor
scas
inc
lea
lock
aad
nop
call
inc
cld
jae
push
mov
mov
fimuls
test
push
xorl
and
lods
adc
mov
je
in
mov
call
movsl
mov
mov
sbb
push
out
addr16
xchg
cmp
outsl
cmp
data16
fs
popa
or
or
mov
dec
push
ret
push
jns
mov
add
daa
test
aam
out
jno
mov
les
mov
ficompl
out
jmp
in
aad
ljmp
push
adc
aam
cmp
xchg
fs
out
inc
sub
cmp
pop
cmc
ficompl
call
arpl
popa
pop
icebp
loope
je
and
popa
bound
subb
in
fbstp
stc
mov
pop
xchg
sti
sbb
rcl
fucomi
insl
je
push
dec
adc
jno
mov
fimull
in
push
icebp
push
sar
lret
orb
xchg
add
fstps
fnstcw
out
inc
cs
pusha
aam
ds
mov
sbb
aas
in
xchg
mov
push
or
sti
stos
out
sarl
sbb
aas
iret
jge
adc
repnz
push
xor
fsubrl
fidivrl
cld
mov
inc
add
mov
loopne
rcrl
cmp
hlt
lret
dec
xor
imul
stos
in
call
inc
mov
mov
leave
cmp
jecxz
cmp
push
add
adc
sub
xor
mov
push
loopne
addb
jmp
or
sbb
and
pop
arpl
mov
sub
xchg
pop
divb
fldenv
and
push
dec
lods
insl
adc
xchg
stos
lods
in
imul
fwait
dec
xchg
dec
pop
jge
push
adcb
and
push
mov
lcall
pushf
pop
jge
lea
jbe
dec
test
test
dec
sub
add
pop
lret
das
jecxz
sub
jge
mov
mov
stc
test
in
testl
jno
test
push
inc
fistpll
xchg
ret
jnp
ja
shrl
test
mov
inc
jmp
inc
pop
std
dec
mov
clc
sbb
jmp
movsl
scas
scas
mov
gs
cli
inc
adc
push
xchg
sbb
push
jmp
cld
aas
xor
in
dec
jne
jno
inc
sbb
daa
mov
mull
push
in
rorb
in
icebp
cmpsb
imul
xchg
and
lahf
lea
and
jo
xor
stc
inc
or
dec
jmp
jns
push
mov
and
out
outsb
sbb
mov
mov
sti
test
lcall
and
cmc
loop
or
xchg
in
xor
xor
lods
testl
inc
adc
repz
testb
hlt
aam
jnp
mov
jo
push
add
xchg
insl
cmp
push
dec
jl
repz
cltd
add
jnp
xor
in
pop
in
mov
mov
xchg
shlb
inc
jb
add
aad
pusha
push
mov
jae
jae
add
into
das
lahf
stc
push
ret
xor
xor
adc
adcb
pop
fcomip
ds
popf
addl
and
mov
pop
ja
ja
pop
sahf
mov
shl
fbstp
lcall
inc
fsubp
stc
jbe
or
dec
xor
inc
js
dec
push
imul
mov
push
push
imul
into
add
or
arpl
mov
inc
xor
pop
xor
lahf
mov
mov
rolb
sub
mov
out
mov
jp
mov
outsb
add
pop
cmp
pop
dec
mov
daa
cmpb
daa
jmp
xor
ja
jb
push
bound
into
lds
bnd
xlat
and
sbb
aaa
cmp
movsb
aas
dec
iret
out
sbb
xor
repz
nop
cld
subl
sbb
push
xchg
dec
ror
inc
je
mov
sbb
mov
shll
cmpl
jecxz
cmpsb
mov
insb
dec
cmp
xchg
mov
sbb
sbb
cli
rcrb
cmc
and
pop
cld
addr16
sub
cmpsb
lcall
push
mov
xor
loopne
imul
das
xchg
xor
out
adc
lret
xor
jp
and
jae
jae
sbb
dec
jg
rorl
ficoms
cltd
mov
in
insl
pop
scas
add
mov
leave
test
psubd
push
xchg
xor
push
movsl
adc
xor
xor
clc
jno
inc
pop
cmp
dec
push
dec
push
xchg
sub
repz
int
jmp
sbb
popa
cmpsl
int
in
or
es
add
mov
adc
mov
iret
dec
and
jbe
js
rcrl
mulb
xor
add
arpl
daa
mov
dec
jnp
xor
push
inc
jno
add
mov
ficomps
lods
lock
loopne
pop
mov
or
pushf
fstp
scas
xchg
dec
stos
mov
mov
lea
lods
ret
mov
adc
lock
adc
sub
rclb
cmpsb
in
stos
push
jmp
cltd
in
cmpsl
xlat
dec
scas
dec
sub
test
push
insb
push
rolb
jbe
out
loopne
xchg
movsb
push
lcall
imul
sbbb
inc
fmul
push
scas
xlat
loop
jns
stc
cmp
inc
jnp
mov
subl
jmp
jae
sbb
out
fisubs
inc
std
movsb
fidivs
dec
movsb
insl
test
push
jle
dec
jb
out
mov
jmp
push
lock
pop
sbb
pop
or
shll
push
ret
jecxz
mov
xchg
add
push
insb
scas
dec
cmp
je
test
pop
shrb
or
and
xchg
stos
addb
lea
pop
xchg
cmp
dec
enter
imul
mov
jb
gs
xlat
in
ja
divl
push
insl
pushf
fdivl
sbb
test
pop
or
scas
outsb
js
sub
push
mov
stc
sbb
mov
xchg
mov
je
cmpsb
mov
dec
xchg
push
and
or
rolb
aaa
jmp
test
xchg
push
cld
out
aam
adc
add
xor
inc
xchg
xchg
icebp
shrb
mov
mov
push
sahf
in
adc
imul
mov
int3
mov
and
push
mov
dec
or
mov
sbb
fs
mov
imul
sub
loop
into
ss
mov
out
mov
cmpsl
rcrl
leave
lods
xlat
jns
pop
in
pop
insb
mov
icebp
xchg
cmp
mov
mov
aas
call
or
inc
mov
int3
das
aaa
or
push
add
push
js
lds
sub
aam
lcall
sub
adc
xchg
lds
jp
mov
arpl
aas
or
fucom
or
pop
sbb
add
inc
jmp
ja
or
fcoml
inc
mov
out
jno
sub
xchg
dec
loop
mov
lahf
and
cltd
xorl
pop
insl
jo
test
adc
sarb
outsl
mov
fbld
dec
and
dec
mov
jns,pt
arpl
repnz
pop
and
xchg
es
fstpl
xor
inc
pop
mov
loope
or
cli
loopne
xchg
inc
jnp
jno
out
pop
aad
xchg
jge
fisttpl
push
xor
inc
xchg
xchg
mov
cmp
ss
pop
or
adc
sbb
xchg
jg
jb
call
adc
imul
jge
scas
les
scas
mov
inc
test
scas
sarl
lods
fidivrs
adc
inc
int3
dec
test
loop
mov
data16
dec
lcall
adc
iret
repz
xlat
orl
or
shll
gs
pop
mov
lock
push
push
pop
dec
test
mov
dec
stc
movsb
adc
rep
sub
adc
xor
ja
adc
gs
test
mov
ljmp
xchg
imul
xchg
xchg
fmull
pop
cmpsl
jb
shlb
inc
pusha
cld
popf
jecxz
daa
int3
xor
cmp
cs
ss
sbb
sbb
sbb
loop
aaa
jg
cmc
pusha
mov
mov
dec
xor
cmp
in
push
xor
add
dec
mov
pop
add
nop
push
push
push
enter
adc
iret
xchg
adc
andl
pop
addr16
pop
jbe
ljmp
and
and
pop
ljmp
jne
cmova
iret
and
mov
insl
add
int
push
lock
push
push
xchg
inc
notb
inc
or
int3
repnz
arpl
sbb
xchg
xchg
or
pop
sub
push
sub
fildll
shrb
mov
imul
jne
out
negb
pop
mov
loopne
sbb
mov
jp
push
repz
push
bound
cmpsb
testb
pop
into
mov
inc
enter
fdivs
out
add
cmpsl
pop
or
and
test
mov
push
std
imul
pusha
xor
je
and
ss
sbb
push
dec
cmp
enter
clc
cmp
inc
mov
sahf
cltd
shlb
adc
cmp
cwtl
movb
mov
int
xlat
add
xchg
cmc
pusha
pushf
xchg
aaa
popa
add
js
jl
daa
test
arpl
jg
push
jae
mov
cmpsl
mov
ss
std
rorb
inc
jmp
dec
movsb
scas
sub
enter
and
in
cmc
mov
lock
xlat
sub
icebp
lret
sbb
mov
xchg
sar
popaw
dec
cmc
xor
inc
dec
imul
lret
insl
inc
push
mov
jl
das
fisttpll
sub
in
xchg
xchg
xchg
and
push
xor
rorb
xor
add
lahf
sub
fsubrl
divb
cmpsb
push
adc
mov
lcall
push
jnp
jecxz
aad
adc
cmpb
mov
dec
jmp
push
lock
jns
dec
fadds
into
loopne
repz
xchg
xor
xchg
fsubs
push
push
adc
xchg
in
outsb
adc
jle
mov
sbb
push
pop
mov
mov
fildll
mov
sub
lret
inc
pop
pop
sbb
xor
mov
cmp
andb
iret
lock
adc
rolb
gs
xchg
xchg
mov
push
call
mov
push
xor
mov
ret
pushf
sub
mov
rorl
stc
popf
push
mov
xor
or
inc
call
inc
cld
popa
nop
inc
xchg
jmp
out
or
jns
pop
stc
fstpl
pop
and
mov
es
ljmp
mov
adc
popl
lods
lds
mov
cwtl
aas
decl
pop
push
adc
inc
cmc
lahf
mov
cmp
mov
mov
or
inc
fildll
sub
mov
bound
mov
cmp
pop
or
jns
push
dec
mov
cltd
pop
fs
mov
ss
aam
push
mov
js
test
or
mov
mov
std
sbb
pop
cmp
mov
loopne
xchg
cmp
fisttpl
rcrb
repnz
sub
or
inc
mov
jns
sahf
jno
dec
ret
sahf
or
stos
dec
cmp
jmp
inc
pop
mov
pop
sbb
push
imul
mul
mov
fcmovnu
jns
addr16
and
loopne
jo
testb
out
sub
inc
lcall
daa
jmp
jg
mov
push
xor
and
out
cli
mov
jnp
mov
sbb
push
pop
inc
loop
pop
jle
mov
mov
in
aaa
adc
pop
cmp
sarl
adc
ljmp
lods
dec
mov
fsubrl
xchg
cmpsb
lret
adc
adc
pop
pop
ds
leave
imul
xor
and
xchg
aad
adc
fidivs
scas
pop
fidivrl
sbb
ficompl
fcomps
sbb
fnsave
mov
cmpsb
scas
lods
inc
fdiv
sbb
pop
sub
test
stos
fs
mov
pop
lds
jecxz
aam
cld
aas
outsl
sub
push
bnd
subl
stos
insl
or
sbb
ja
in
pop
sub
dec
nop
push
lret
imul
mov
test
lds
push
sub
pop
lods
push
aaa
mov
mov
xor
fcmove
xchg
ljmp
mov
imul
push
sbb
jecxz
mov
mov
je
iret
mov
xchg
hlt
mov
inc
test
leave
out
push
dec
sbb
sbb
bnd
in
pop
inc
xchg
into
adc
cld
ds
pop
push
fmull
adc
rolb
inc
jmp
cmp
push
sub
pop
inc
lds
test
inc
add
push
dec
shr
imul
stos
or
and
mov
pop
xchg
cmp
add
fcoms
lret
decl
pop
cmp
cmp
or
icebp
xor
sub
push
jge
fistl
mov
shrl
pushf
mov
out
mov
jecxz
pop
xchg
add
xsaveopt
jns
into
lret
add
repnz
mov
ja
in
movsl
sub
popw
jne
jmp
pop
pop
out
test
add
and
repz
xchg
movsb
sbb
or
and
dec
ja
cmp
add
inc
jg
pusha
sub
sub
and
out
adc
jl
cmp
pop
sbb
mov
cmp
xor
sbb
sbbl
ret
fcompl
ret
nop
dec
popa
ror
pop
sub
sbb
adc
and
pop
mov
xor
sub
inc
jp
mov
xchg
data16
xchg
and
mov
xorb
sub
stos
cld
sbbb
push
xor
mov
sub
pop
cld
xchg
add
popa
repnz
sbb
repnz
and
rcl
pusha
lret
sbb
pop
fs
imul
insl
bound
imul
js
adc
shlb
ficoms
imul
cmp
dec
inc
out
mov
je
fsubrs
faddl
inc
dec
mov
xlat
inc
add
pop
dec
ds
ror
xor
negl
inc
outsb
out
sbb
rcrl
jbe
fsubrl
test
dec
add
popa
adc
adc
inc
subl
push
jge
iret
and
sbb
add
lcall
push
push
add
xchg
jecxz
push
shl
sub
imul
jl
mov
jecxz
add
ljmp
ljmp
xchg
cmp
cld
push
out
mov
inc
and
daa
ud0
gs
xlat
clc
push
fcmovb
and
mov
push
pusha
aaa
xor
icebp
mov
cs
cmp
push
ljmp
popa
and
push
aad
mov
repz
std
rorl
inc
cmp
jmp
fcomps
outsw
dec
jbe
jg
fmull
out
mov
jne
mov
nop
push
mov
sub
jge
out
movb
rorl
and
pop
je
loopne
push
and
dec
xchg
shll
push
bound
imul
ss
es
iret
cltd
cs
mov
in
lcall
gs
nop
into
mov
cmp
mov
mov
in
das
scas
jno
fcmovb
adc
rolb
push
call
insl
xlat
shrl
mov
shll
fsub
out
push
test
in
fnstsw
mov
mov
jge
andl
adc
mov
dec
iret
fists
loop
sqrtps
cmpb
mov
xchg
push
jnp
jne
jo
add
mov
sbb
mov
pop
push
fidivl
push
jne
push
mov
cmp
push
jo
jb
sub
test
and
subl
jnp
cwtl
ja
mov
xchg
test
jb
fs
add
scas
and
pop
ficompl
or
les
or
js
pop
xor
sbb
popf
std
xchg
jo
dec
dec
xchg
cli
cmp
std
outsb
xchg
cltd
add
sbb
call
ficoml
push
ljmp
inc
mov
pop
mov
loop
push
movsb
cmp
mov
inc
dec
rorb
out
les
fcmovne
xchg
mov
adcb
sti
movsl
mov
das
subl
adc
cmpsl
and
out
and
enter
insb
outsl
jl
in
mov
inc
sti
repz
jne
mov
andl
push
xchg
adc
ds
jo
push
jecxz
push
data16
adc
les
sti
cwtl
insb
data16
fcmovnb
notl
ljmp
adc
cmp
fildl
jl
or
inc
pop
out
inc
pop
mov
out
int
scas
jno
and
sub
or
int3
mulw
js
mov
jne
jbe
stos
jmp
pop
ja
sbb
sub
add
movsl
jmp
fldl
int3
movd
inc
mov
js
mov
enter
jmp
jns
mov
aaa
pusha
addr16
cli
mov
fiadds
jge
xchg
std
mov
aas
popa
out
fadd
dec
inc
cmp
pop
add
adc
mov
mov
mov
jns
mov
shr
es
dec
arpl
aaa
inc
pop
testl
mov
loopne
les
inc
mov
cmp
lret
push
inc
push
inc
andl
ficoms
shrb
jle
and
divb
cmp
pusha
enter
test
mov
jge
push
in
jg
lret
xchg
push
daa
xchg
iret
add
fwait
jno
scas
cltd
rcr
daa
pop
cld
jns
or
int3
mov
das
add
xor
test
mov
inc
sbb
imull
cmp
push
inc
mov
sbb
mov
jmp
mov
bound
mov
jmp
push
fnstsw
xor
fdivp
cltd
out
inc
cltd
sub
cmpsl
js
lock
cmp
xchg
xor
mov
shrd
out
jno
push
push
xor
dec
call
ja
aas
lldt
cmc
lcall
jo
push
or
pop
xor
fstpt
mov
fistpl
push
aam
or
pop
pop
repz
adc
and
addr16
push
movsb
inc
xchg
adcl
test
inc
adc
dec
cmp
sbb
out
aaa
sbb
call
xchg
push
out
aad
es
fildll
jge
loop
inc
ret
push
fdivp
ja
fldt
mov
cltd
jmp
push
out
cmpsb
lgs
push
or
shll
shr
adc
sub
addr16
mov
ds
mov
in
xchg
pslld
out
push
pop
xchg
sub
or
mov
cltd
fwait
ljmp
mov
pop
rorb
sub
fwait
ja,pt
cmpsl
lods
cltd
andl
cmp
pusha
imul
cmp
test
mov
outsl
inc
mov
std
mov
ljmp
pop
sbb
add
push
lcall
mov
bound
movl
mov
mov
rcl
mov
dec
inc
push
imul
sbb
ljmp
xchg
adc
inc
xchg
sbb
mov
mov
xchg
cmp
insb
lods
outsb
lock
dec
es
fcomps
jecxz
mov
hlt
jns
lods
pushf
mov
mov
sbb
cmp
ds
cli
mov
inc
subb
in
cltd
xchg
push
int3
mov
or
and
cmp
aas
xor
cmp
xor
nop
xor
or
cmp
xchg
xor
or
add
push
aaa
das
scas
loopne
outsb
mov
and
arpl
inc
pop
sub
pop
scas
fiaddl
push
jo
hlt
out
pushf
fwait
or
and
insl
out
inc
jl
test
mull
jae
mov
or
sar
jmp
lock
jmp
out
jno
cmp
fcomps
jns
xchg
inc
cmpsb
in
mov
sub
mov
shll
roll
cmpsb
and
add
mov
shr
and
mov
test
xor
sbb
xor
ret
lcall
pop
jo
in
xor
loop
inc
and
jno
cmp
insb
popf
sub
xor
xor
mov
sub
mov
sbb
addr16
shl
mov
pop
push
jge,pn
mov
cltd
xchg
gs
add
sub
lods
aad
xor
or
ss
sahf
in
dec
mov
sub
sub
mov
cmpsl
add
enter
push
mov
add
mov
fidivrl
sub
fs
mov
jno
jb
data16
adc
lock
std
icebp
and
stos
mov
sbb
mov
repz
inc
pop
out
neg
jb
aas
dec
cmpsb
js
xchg
popa
ret
or
lret
in
cmpsl
test
nop
xchg
sti
inc
xor
and
dec
repnz
xchg
add
clc
mulps
xchg
and
and
loope
dec
push
mov
pop
icebp
pop
jmp
out
push
sbb
mov
pop
xor
popa
mov
cmp
outsb
mov
fs
daa
lock
std
sbb
incb
jo
push
fimuls
mov
cltd
jmp
sub
or
jns
insl
iret
xchg
pop
or
lock
mov
movsl
xchg
pop
stos
adc
aaa
in
sub
imul
es
out
inc
les
sub
dec
lods
xorb
sub
pop
insb
or
sub
push
test
push
outsl
mov
test
dec
jbe
insb
dec
jecxz
and
push
mov
inc
jmp
shr
jmp
dec
dec
out
sub
xor
rclb
xchg
sbb
int3
adc
js
mov
stos
cmp
jge
xchg
xchg
dec
mov
add
adc
and
and
fdiv
inc
call
mov
in
jno
adc
lret
enter
dec
push
inc
xchg
fildl
add
ret
loopne
pop
icebp
ret
push
stc
pop
ret
call
mov
mov
popa
xor
sahf
mov
cmp
pusha
sub
mov
mov
add
jle
arpl
pop
and
movsl
roll
dec
imulb
ds
cltd
inc
inc
cmp
jle
loope
outsb
cmp
jmp
mov
sub
push
fstp
outsb
adc
pop
push
push
sub
mov
in
mov
push
pop
mov
inc
lods
xchg
lods
out
in
inc
jb
sahf
leave
pop
inc
shl
xchg
sbb
cmp
ret
adc
pop
popf
xor
ds
aaa
imul
clc
pop
mov
pushf
repnz
sub
mov
cmp
inc
sbbb
xlat
add
xchg
mov
dec
or
ljmp
nop
xchg
lcall
insl
xor
aad
inc
sbb
lock
push
inc
fistpl
inc
jecxz
jae
and
xor
repnz
push
or
sti
aaa
pop
push
mov
test
jne
xchg
in
test
cltd
dec
aas
push
xor
xchg
fdivl
popa
mov
inc
fldl
ss
mov
inc
cltd
call
inc
and
dec
dec
jnp
mov
fdivrl
loopne
lcall
fldcw
cmp
shl
cmp
call
int
mov
xchg
cmp
and
dec
clc
sbb
xor
scas
xchg
xchg
movsl
dec
imul
push
jmp
push
hlt
shll
je
xor
rsqrtps
mov
jo
xlat
push
mov
xchg
push
mov
idivb
les
aad
test
fcmovnb
pop
xchg
jge
push
idivl
or
jo
sbb
cltd
in
notl
push
int
mov
jo
out
mov
out
push
jmp
mov
int
faddl
xchg
mov
imull
pop
jnp
das
rcll
push
sub
adc
push
in
inc
and
push
push
cmpsl
push
rorl
push
mov
sbb
push
adcl
cs
cs
test
rorb
sub
xchg
xor
sbbb
inc
das
cmpsb
push
xchg
add
movsl
aas
cmp
icebp
sbb
out
or
mov
pop
or
aaa
mov
adc
shll
mov
jmp
andb
fsub
push
xor
lods
and
out
int
nop
ret
jge
xchg
mov
cmp
pop
ja
cmp
jge
cmp
outsl
push
in
inc
addr16
mov
stc
hlt
jo
and
mov
push
nop
test
sub
cmp
pop
mov
insl
std
jmp
and
or
stos
cs
mov
popf
ficomps
in
ret
cmp
dec
pop
int
lods
cltd
push
jmp
sub
cld
lods
js
mov
cmp
cwtl
push
js
mov
jo
lock
cs
nop
shlb
sub
cmp
add
loop
push
gs
cmp
jbe
faddl
dec
iret
flds
sti
in
frstor
dec
lahf
pushf
mov
push
outsl
int
xor
enter
cmpsl
add
add
mov
cwtl
hlt
cmp
adc
xchg
xchg
in
mov
sub
fsubl
pop
push
mov
push
mov
pop
mov
dec
cmc
jle
sub
std
test
mov
pop
xchg
push
mov
pop
sbb
es
jecxz
pop
sbb
aam
icebp
lahf
mov
aam
pushl
xchg
pop
jae
jp
in
sti
in
and
cmp
push
dec
into
lahf
mov
mov
inc
shll
mov
jmp
jmp
lcall
add
add
sbb
dec
jo
lcall
dec
xchg
sarb
scas
js
pop
inc
subl
mov
ds
sub
jge
adc
push
jnp
nop
jae
ja
jb
mov
faddl
add
xchg
cmp
add
add
in
cmp
repnz
or
shrl
lods
in
xchg
and
std
movsb
xchg
pop
push
lea
je
incb
pop
cli
cld
and
inc
aas
xor
ds
pop
adc
mov
or
fidivrs
lahf
and
mov
jge
xchg
repnz
push
nop
insb
ret
ficoms
icebp
pop
flds
xor
out
test
mov
rcrl
pop
and
sub
popf
cmp
cmp
test
sub
xchg
lret
fnstenv
mov
repz
push
mov
push
out
jp
xchg
and
scas
inc
hlt
sahf
lret
ljmp
pop
inc
push
push
das
pop
sub
lods
xchg
pop
or
js
mov
xor
sbb
inc
mov
or
lds
mov
jmp
enter
xchg
aad
mov
or
lret
cli
in
mov
dec
stc
fsts
xchg
or
pop
loopne
call
data16
pop
pop
add
and
sti
mov
sub
inc
std
popa
jno
or
cmp
sub
xor
mov
inc
jnp
jl
idivl
mov
push
movsl
mov
sbbl
lods
es
pop
inc
mov
fists
adc
lock
mov
pop
enter
cmp
inc
lods
and
int3
xchg
inc
push
fsubl
mov
push
inc
outsb
outsb
shll
les
and
fimull
cmp
inc
ret
or
pop
fiaddl
dec
cmp
xor
out
movsb
aaa
jecxz
test
mov
mov
xor
inc
popa
hlt
imul
inc
loopne
sahf
rcll
stos
mov
sbb
cwtl
inc
test
shlb
notb
sbb
inc
jmp
cmp
jecxz
push
sti
lret
adc
cwtl
xchg
mov
hlt
dec
push
iret
pop
push
in
movsb
dec
lods
lahf
shll
pop
mov
push
test
or
dec
mov
mov
ljmp
ja
sbb
out
xlat
jmp
into
test
pushf
xchg
aas
out
fwait
xchg
leave
repnz
stos
dec
pop
stos
sub
das
rorb
push
movzbl
mov
cld
pop
cmp
out
nop
and
ja
push
out
mov
adc
je
repnz
add
or
call
dec
xchg
mov
lahf
in
je
sub
cwtl
fnstcw
inc
jb,pt
loope
sub
xchg
out
fiadds
mov
rorl
push
mov
leave
fisubrl
mov
dec
inc
mov
pop
out
ljmp
leave
ds
pop
aas
xlat
mov
mov
cmp
xchg
mov
cmc
subl
fidivrl
push
cltd
lret
mov
pushf
add
std
outsb
or
sbb
cmc
mov
push
or
adc
fimull
push
jo
push
fwait
and
xor
test
or
add
pop
mov
xchg
push
dec
cmpb
pop
addr16
addr16
in
sub
push
test
setno
pop
int3
rcrl
sub
inc
xchg
mov
ret
jnp
shll
mov
push
insl
aad
sub
push
cmp
in
les
sub
fdivrs
push
add
daa
xchg
mov
jns
ljmp
pop
nop
loop
rclb
pop
in
fdivrl
xchg
pop
js
sub
fs
ja
cmpsb
inc
add
add
inc
pop
inc
mov
cwtl
lcall
cmp
adc
sub
call
nop
hlt
add
add
aaa
xchg
xchg
int
fwait
jbe
stos
cmp
add
cmpsb
mov
push
out
out
cmpsl
pop
rcll
push
cltd
jo
cmp
mov
movsb
xchg
or
fcmovb
adc
pop
mov
ljmp
push
or
shlb
sub
cmpsl
clc
mov
xchg
dec
push
call
mov
data16
daa
mov
xor
nop
jl
in
movb
or
inc
sahf
xchg
stos
pop
or
daa
xor
and
sbb
mov
into
out
xor
in
insb
idivl
inc
push
dec
fimuls
bound
sti
adc
ja
fwait
add
sbb
lock
stc
cwtl
pushf
xchg
cltd
xchg
leave
popf
mov
test
and
sbb
ds
sbb
cmp
imul
dec
pop
je
scas
or
jmp
jnp
mov
stc
out
xchg
jp
inc
adc
aaa
cltd
push
mov
pop
lret
jnp
sub
leave
cmpsb
ret
push
test
xor
imul
cmp
outsl
ljmp
push
inc
and
test
sti
mov
cmp
sbb
imul
adc
test
sarb
dec
inc
sub
inc
rorl
lds
frstor
iret
push
push
sub
push
roll
enter
jl
mov
icebp
mov
aas
push
inc
std
mov
fisubrl
test
sahf
inc
xlat
pop
neg
fistps
cltd
popa
cmc
or
pop
cmp
or
push
cmp
imul
ret
mov
xchg
pushf
pop
subb
ror
lock
or
out
jbe
push
jne
cmpsl
incb
jecxz
add
jl
lcall
fnstenv
mov
jecxz
call
mov
cmp
add
pop
jnp
dec
push
lahf
jne
pop
xchg
cmp
push
cmpsb
loopne
add
mov
mov
mov
in
or
sub
sti
mov
pop
enter
fiadds
mov
xlat
push
test
pop
jle
xchg
push
lock
jo
fisubl
push
std
ljmp
jo
andl
mov
inc
sti
add
int
test
daa
ss
adc
mov
pop
inc
loop
aam
sub
cmp
mov
sub
movsb
rcl
icebp
push
mov
jge
mov
sbb
in
fimuls
push
adc
std
loop
adc
sub
shrb
sbbl
mov
push
int
cld
ret
data16
je
jb
rolb
enter
inc
test
or
shlb
rcll
jmp
clc
mov
pop
ds
pop
xchg
xchg
jne
inc
mov
ret
push
xorb
mov
dec
pop
xchg
out
lcall
fbstp
add
jnp
imul
aad
fnsave
jbe
xchg
cmp
cwtl
add
or
jne
fdivs
mov
and
ret
int3
sbb
jecxz
mov
xor
inc
lds
repnz
xchg
cli
cs
dec
or
icebp
mov
xchg
cwtl
testb
in
xchg
mov
jo
nop
mov
lock
dec
test
jmp
arpl
pop
leave
sub
adc
dec
fwait
xchg
outsl
jp
cmpsb
jg
push
push
scas
lret
cmp
add
lds
jno
dec
jb
jne
inc
mov
fistpll
gs
cmpsl
mov
outsb
fnstenv
dec
xchg
dec
testl
pop
jl
aad
aam
sub
cmpsb
loop
in
mov
fs
sub
mov
outsl
adc
mov
or
icebp
inc
pop
push
push
fdivrl
pop
jo
or
out
mov
add
push
rcr
inc
xor
mov
stos
adcb
test
pop
jp
cwtl
push
jl
push
pusha
inc
imul
lahf
dec
ror
mov
fcoms
movsl
mov
addr16
dec
mov
das
addb
das
decb
pop
repz
jmp
sbb
rcll
mov
mov
test
and
inc
add
push
fwait
push
mov
cli
pushf
push
mov
jg
std
jge
push
cmpsb
mov
push
jle
lret
jecxz
dec
sbb
jb
lock
mov
xchg
pop
scas
in
mov
jge
in
sbb
into
fs
iret
popf
jne
sbb
push
xor
outsl
out
push
insl
push
rcrb
xchg
dec
pop
lcall
ljmp
mov
testb
iret
movsb
add
mov
xor
pop
cmp
les
pop
icebp
adc
cmpsl
cwtl
xchg
mov
jmp
or
jmp
js
cmpsb
imul
fistpll
mov
xor
and
iret
shlb
cli
sbb
jns
jno
xchg
shll
lock
adc
or
dec
sbbb
repnz
mov
add
scas
popa
in
push
decl
jns
dec
aaa
jge
pop
lcall
push
test
sbbb
sbb
aam
pop
pop
mov
dec
mov
leave
movsb
fs
pop
loop
mov
fidivrl
and
pop
inc
lea
mov
xor
cmp
mov
out
cltd
jp
aaa
mov
std
push
push
xchg
int3
int3
push
pop
jg,pn
push
pop
cmp
cltd
mov
xlat
vmwrite
jmp
adc
jle
fadd
cmc
nop
push
push
loope
push
roll
add
scas
cmpsb
lar
sarb
xchg
pushf
arpl
sub
adc
push
jo
repnz
mov
push
dec
cmp
mov
int3
sub
orps
sahf
cmp
dec
out
mov
fadds
inc
mov
std
dec
push
push
jge
sub
scas
call
popa
lahf
adc
mov
dec
js
sbb
adc
sti
outsb
dec
sbb
pushf
mov
xchg
add
mov
xchg
pop
stos
addr16
jl
cmpsb
or
push
jle
icebp
aam
rorl
cs
sbb
loop
add
or
cli
pop
pop
push
insl
ret
mov
jae
xchg
ds
imul
out
mov
movsl
js
add
std
inc
inc
ret
pop
outsl
test
inc
and
loopne
add
adcb
dec
jg
pop
fmuls
ret
enter
dec
pop
mov
aas
sahf
mov
dec
and
xor
xchg
test
int3
mov
cmp
dec
and
xlat
push
mull
jle
xchg
xor
out
mov
sbb
push
and
stos
or
jae
jmp
mov
xor
stc
push
mov
pop
jle
add
cmp
mov
das
push
pop
jo
pusha
mov
cmp
lret
js
mov
out
jge
mov
inc
sub
cmp
subb
leave
and
cmp
xchg
jae
xchg
cmpsb
movsl
push
mov
repnz
mov
iret
mov
aad
mov
xchg
stc
stos
ds
jp
cli
mov
xorb
clc
lods
out
xor
dec
mov
loope
jle
fdivs
cwtl
insb
xchg
rorl
in
xor
pop
push
pminsw
cwtl
add
push
inc
push
pushf
cs
scas
sub
nop
push
pop
decb
std
sub
sub
jo
pusha
addr16
adc
sbb
movsl
pop
jb
push
mov
add
xchg
cmp
scas
aaa
lret
mov
lret
sbb
mov
xor
fs
pop
mov
add
mov
mov
imul
leave
repnz
and
fs
push
xchg
xor
lds
adc
dec
fmul
aaa
dec
jns
mov
jp
and
in
in
ror
inc
mov
xor
addb
xor
or
cltd
dec
test
or
add
xchg
mov
xchg
imul
push
sbb
xchg
mov
mov
sub
mov
cmc
or
adc
mov
out
iret
lahf
inc
jae
imul
mov
pop
mov
jb
mov
shrl
pop
int3
dec
andb
testb
bound
ret
fnstsw
in
adc
fstpl
sub
mov
pop
pop
sti
sahf
nop
call
push
inc
pop
je
lahf
xchg
inc
push
scas
jmp
loope
dec
in
cmpsl
lahf
pop
dec
repz
insb
jo
or
cwtl
jns
icebp
xchg
dec
mov
imul
lds
cli
xor
into
sub
lea
divl
push
mov
pushf
hlt
int
les
cmp
and
xor
adcl
dec
push
pushf
mov
lcall
cld
push
and
jnp
adcb
filds
xrelease
and
data16
sub
outsb
pop
leave
into
inc
repnz
in
mov
push
dec
mov
and
xor
lods
lcall
je
mov
xchg
aam
pusha
sbb
mov
push
mov
test
insl
in
scas
in
mov
cmpsl
in
pop
mov
add
mov
test
fisubs
mov
xor
cwtl
jge
mov
sub
les
push
fidivl
xchg
dec
roll
pop
jbe
dec
sbb
xchg
hlt
pop
mov
cltd
jg
xchg
ficoml
mov
dec
out
mov
sarl
jp
hlt
sub
icebp
push
lahf
ss
push
mov
xchg
dec
adc
repnz
imul
mov
into
test
push
and
sub
sub
pop
dec
cmp
lods
and
clc
mov
daa
dec
jmp
scas
pop
xchg
xor
mov
jo
test
inc
adc
inc
pop
lea
and
xor
popf
lds
mov
addl
aad
or
scas
adc
and
sub
or
lret
fdivrs
cli
nop
mov
imul
and
dec
and
shlb
imul
testl
sub
mov
push
into
mov
rolb
dec
cltd
sbb
jb
adc
push
pop
mov
mov
fadd
sub
sbb
mov
add
pop
fdivr
mov
adcl
jp
mov
add
mov
add
gs
aam
inc
clc
bnd
inc
mov
cmp
in
push
sarb
lcall
insb
sub
into
sub
out
xor
popa
movsb
ja
push
sub
jle
mov
mov
dec
bound
imul
stos
push
dec
sti
pop
fcmovne
jb
rcr
outsb
fsubp
jmp
ja
sub
fs
sub
cmp
mov
ss
ss
dec
dec
and
out
in
cmp
gs
push
ljmp
fdivl
mov
mov
test
push
movb
int
push
popl
and
sti
lods
push
ds
mov
xchg
lret
inc
or
mov
sbb
outsl
dec
sub
xor
es
pop
fsubrl
mov
fs
nop
repz
inc
xor
pop
add
scas
inc
aas
pop
inc
adcb
or
push
xchg
push
sahf
adc
je
icebp
sub
push
push
xor
push
xchg
adc
fwait
mov
mov
stc
dec
das
stos
lock
pop
in
cmpsb
icebp
jo
ret
dec
jg
sarl
xchg
das
rorl
lret
pushf
mov
outsb
pop
dec
addl
sub
cmp
in
inc
loope
cmpsb
lret
aam
xchg
movsl
subl
mov
test
je
std
add
or
jo
je
adc
add
or
enter
cld
xchg
cmc
fdivr
jnp
loop
xor
adc
popf
push
xchg
jecxz
xor
test
sub
xor
jg
or
push
aam
bnd
or
idivl
in
hlt
xor
xchg
daa
lock
daa
and
sub
push
lds
out
dec
das
cmpsb
aam
or
stos
and
iret
fistl
ret
jnp
hlt
dec
ret
fsubs
stos
test
cld
mov
ror
mov
cmpsb
cmpsl
dec
stos
sbb
xor
fstpt
pop
int
mov
xchg
and
push
mov
mov
xchg
cmpsl
sbb
or
fistpl
sub
cmp
cmp
stos
sbb
fnstcw
mov
pop
sarb
push
inc
jnp
jbe
fwait
or
adc
mov
push
jge
bound
rorl
fists
in
inc
jns
mov
add
dec
in
adc
cmc
call
scas
inc
aaa
xchg
fs
jmp
add
cwtl
out
push
pop
inc
mov
push
mov
repnz
or
push
jns
aas
sbb
xorl
mov
cmp
or
xor
out
ss
push
lret
push
cmpsl
enter
mov
push
sbb
pop
je
mov
push
sbb
lret
cs
mov
lret
sbb
ret
dec
sub
lock
or
xchg
and
dec
cwtl
and
pop
sub
sbb
dec
out
cmp
sub
out
insb
std
jmp
test
add
cmp
mov
inc
jecxz
shufps
cmpsl
nop
and
pop
addl
sti
in
aam
mov
push
inc
pop
cvttps2pi
push
mov
jp
lock
int3
sbb
cmp
outsb
pop
arpl
stos
repnz
push
fbstp
jle
out
sub
inc
add
jae
dec
xchg
cwtl
fnstsw
dec
outsb
cmp
jae
and
je
and
xor
hlt
inc
jg
pop
mov
xlat
mov
insl
testl
into
fildl
push
lods
inc
adc
subl
add
adc
cli
push
add
cltd
dec
cmp
mov
xor
push
cmc
andl
push
mov
cmp
pop
sub
lock
mov
xor
mov
aaa
cld
pushf
mov
mov
je
sbb
cmp
sahf
inc
cld
and
inc
jns
aad
outsb
in
test
movsl
decl
data16
mov
cltd
push
into
lods
lock
sbb
sub
mov
icebp
push
inc
loop
cs
fwait
imul
mov
pushf
mov
sbb
mov
jo
inc
test
pusha
mov
insl
lret
rcl
push
test
es
bswap
lods
daa
es
addb
push
stos
dec
pop
and
jmp
sbb
lods
cltd
adc
fstpt
test
push
arpl
push
jno
adc
insl
mov
add
cmpsl
or
fwait
dec
mov
pop
mov
cmp
ret
std
mov
push
adc
push
adc
orb
adc
imul
xlat
gs
and
jg
imul
mov
adc
hlt
push
inc
lret
ss
imulb
mov
jnp
push
iret
imul
dec
addb
add
mov
enter
subb
xor
inc
adc
scas
aam
pop
call
mov
jo
xor
sbb
loope
nop
jb
popw
adc
imul
cmpsb
or
or
mov
jle
fldln2
mov
dec
fistps
mov
pop
push
cmp
add
xor
mov
loop
inc
cmp
push
mov
bound
push
xor
sbb
test
dec
jmp
and
rol
cmc
rcrb
imull
lock
push
or
mov
and
sub
pinsrw
or
mov
jle
imul
pop
mov
shlb
push
mov
xchg
jb
sub
jbe
out
xchg
test
inc
adc
sbb
sbb
mov
stos
mov
outsl
jbe
jge
mov
cmp
xchg
push
xor
add
ja
xor
inc
stos
fimuls
imul
jmp
xchg
int3
lock
je
mov
xchg
sub
rol
fadd
xchg
pop
inc
xchg
push
or
jnp
iret
hlt
jo
push
xor
sub
add
xchg
pop
adc
call
ds
out
data16
movsb
ja
pop
lds
fidivrl
xor
jnp
xor
jmp
aad
dec
xor
jnp
cwtl
stos
pop
scas
mov
shll
sbb
hlt
mov
shrb
cmpsb
int3
push
inc
xchg
je
adc
add
movsl
push
pop
subl
pusha
pop
cmp
fistps
ds
push
cmp
aaa
lahf
mov
push
add
cmp
popf
add
icebp
daa
in
in
cmp
adc
mov
fwait
dec
pop
test
pop
mov
rclb
pop
je
sbb
adc
stc
pop
imul
inc
sub
mov
test
push
pop
cmp
add
outsl
jmp
jo
or
das
sahf
ljmp
repnz
sub
ds
clc
int
in
adc
insl
mov
jne
jge
push
xchg
sbb
and
mov
fistps
ds
outsb
pop
stos
sbb
cmc
xor
sahf
adc
ret
mov
xchg
loope
sub
cmc
int3
push
ljmp
pop
cwtl
pop
inc
mov
cwtl
jbe
pop
push
mov
rcll
pushf
mov
and
dec
and
aam
lret
mov
xchg
mov
out
dec
cmp
pop
aad
sub
and
out
mov
dec
adc
xor
sbb
imul
dec
insb
pop
ja
mov
jmp
clc
das
fmulp
shlb
xlat
dec
dec
lret
shll
fistl
pop
mov
imulb
mov
into
or
popa
sbb
and
inc
and
mov
lret
call
push
inc
sub
add
xor
xchg
icebp
mov
inc
xchg
jae
sub
fildll
inc
movsl
sub
fiadds
jg
jg
das
ret
pop
stos
xchg
mov
popf
ror
popa
pop
push
out
mov
lods
js
inc
cmp
mov
mov
pop
jle
adc
dec
repnz
inc
and
adc
and
dec
add
mov
jns
std
dec
adc
push
ret
sbb
sahf
cli
sbb
stos
xchg
call
pusha
xorl
shll
out
dec
loop
inc
imul
popa
cmpsb
jge
mov
cmp
add
test
fucomi
mov
push
mov
ljmp
mov
xor
lret
dec
sub
xor
jp
mov
push
sub
out
sub
ficomps
std
xchg
pop
int3
sub
sbb
and
loope
add
xor
sbb
xchg
push
xchg
lcall
xor
inc
mov
movsb
cmp
mov
inc
or
int3
int3
inc
jb
in
jecxz
mov
loopne
loop
jl
or
xchg
jge
loope
movsl
in
adc
std
pop
test
push
cmp
add
mov
jno
ja
xchg
repz
lret
inc
pop
inc
enter
mov
lock
dec
xchg
ljmp
cmc
sbb
fwait
pop
mov
pop
adc
cmc
adc
dec
xchg
mov
adc
sub
imul
push
mov
popf
xor
ljmp
xor
xor
js
loopne
mov
cmc
imul
stc
addr16
sbb
lcall
jb
jle
sub
push
aaa
loopne
mov
jmp
push
mov
shl
pop
xor
aam
out
mov
icebp
pop
mov
jb
in
ret
test
aam
sub
movsl
es
enter
dec
mov
mov
nop
pop
mov
fs
and
sub
iret
jmp
lea
in
nop
mov
pop
repnz
stos
jb
sbb
jl
in
mov
or
mov
or
jns
std
push
lret
sbb
jo
scas
mov
mov
cmp
into
ret
jmp
mov
insl
mov
je
add
in
fdivl
add
lock
push
dec
push
mov
inc
xchg
cmp
or
aam
faddl
jns
fildl
mov
mov
shrb
out
stos
out
repz
pop
enter
out
aaa
cwtl
jle
push
movsl
in
outsl
fsub
fstp
pop
sub
daa
call
sub
sub
xor
mov
jmp
mov
pop
dec
and
loopne
popa
lret
data16
dec
mov
sbb
inc
cmp
imul
xor
daa
pop
loope
mov
jp
or
sbb
mov
clc
mov
hlt
lods
jl
movsl
push
mov
clc
mov
sbb
mov
mov
testl
push
ss
pop
hlt
inc
std
jns
xor
fs
lcall
mov
das
mov
ljmp
xchg
loope
jo
push
xorl
bound
xor
lahf
cwtl
ss
aam
push
mov
shr
fiaddl
sbb
movsb
sub
inc
cltd
jge
jns
pop
cmc
mov
lret
fldt
dec
adc
jnp
ljmp
lock
scas
or
adc
stos
clc
cmp
push
sub
dec
xor
mov
dec
adc
pop
fsubrl
clc
inc
mov
pop
sub
sub
push
add
xchg
movl
dec
cld
nop
jmp
cwtl
insb
sub
adc
mov
cltd
gs
rolb
sti
mov
loop
nop
test
xor
jp
outsb
adc
xchg
into
sbb
mov
lcall
popa
fndisi(8087
ljmp
mov
inc
addr16
or
fcoml
xchg
ljmp
or
cld
mov
outsb
pop
mov
mov
pop
in
sbb
mov
xchg
fwait
xchg
ss
push
les
test
mov
pop
push
lahf
hlt
lret
add
inc
hlt
out
andl
mov
sub
cmp
sbb
andb
outsb
lcall
xor
cs
cs
lret
xlat
sub
cmpsb
loope
mov
inc
xchg
add
nop
fildll
xlat
or
movsb
mov
jbe
xlat
inc
in
sahf
repnz
fisubs
es
in
mov
leave
fldt
popf
mov
imul
sahf
stos
lret
iret
repz
xor
cltd
fistps
jge
cld
xor
rorb
cmp
popa
add
out
xor
push
sti
push
les
js
jle
aaa
mov
pusha
ds
leave
test
adc
push
adc
lods
jno
push
andb
mov
mov
hlt
xor
iret
inc
adc
mov
pop
mov
and
jle
jp
and
mov
je
in
or
leave
and
in
dec
jno
ret
test
pusha
lret
div
jne
jns
pop
imul
jnp
das
cld
cmp
rolb
imul
sbb
icebp
rcrl
out
daa
js
notb
sub
lods
cmp
stc
pop
pop
repz
xlat
in
out
jle
sub
inc
mov
decl
imul
mov
shll
pop
adc
fistps
xor
xchg
fisubs
out
push
sbb
push
or
cmp
sub
sub
fcom
sbb
adc
mov
jecxz
gs
pop
mov
xor
aad
sub
mov
jns
jb
xchg
sbb
stos
pop
je
stos
iret
test
sbbb
stos
and
aam
inc
insb
mov
pop
or
inc
mov
cld
cmovl
and
mov
pop
fs
sbb
push
ret
sub
adc
es
mov
push
jno
aad
pushf
dec
xor
mov
icebp
scas
cmc
mov
xor
xor
push
std
adc
cmpsl
add
sti
lret
insl
in
rcrb
fwait
enter
inc
adc
popf
add
cmc
jno
insl
inc
aaa
int
sub
inc
stos
push
ss
movsl
stos
popa
ljmp
push
sub
xor
lea
and
imul
lahf
xchg
pusha
xchg
adc
mov
cmp
aam
cmpsl
sbb
mov
fstpt
xchg
mov
jp
loope
insl
mov
jne
push
inc
xchg
jne,pn
add
fildl
int3
add
sbb
cmpsl
stc
movups
inc
jl
iret
sahf
sub
adc
pop
cwtl
mov
jle
inc
js
adc
cmpsl
out
data16
shr
movsl
sbb
jae
shrb
notl
push
in
arpl
stos
adc
xor
mov
stos
outsb
jg
cmp
fs
lock
sbb
lods
xor
or
out
mov
push
cmpsl
jecxz
xor
fneni(8087
pop
pop
pushf
sbb
sbb
imul
hlt
lods
jbe
popf
mov
sub
out
repnz
lret
add
pop
movsl
inc
or
inc
cld
fs
scas
sbb
outsb
int3
inc
mov
mov
push
in
and
hlt
inc
insb
ret
pop
cs
scas
push
aaa
sahf
or
sub
fcomps
mov
dec
fs
test
leave
lcall
mov
mov
push
add
scas
jb
push
sub
mov
push
pop
test
mov
ret
addr16
push
sub
mov
test
rcrl
add
xchg
insl
ljmp
daa
xchg
ret
sub
mov
ljmp
enter
inc
inc
aaa
cld
movsl
xchg
sbb
lret
mov
and
jecxz
pop
or
stos
movsb
sbb
jge
movsl
cmp
push
add
and
rorb
and
push
mov
stos
mov
inc
jmp
xchg
cld
and
js
jecxz
cwtl
mov
sbb
jne
mov
lea
ss
xchg
lods
in
ret
jae
call
mov
sub
jmp
xchg
adc
cli
xor
dec
dec
jne
mov
mov
sub
mov
xor
mov
push
mov
sti
mov
shrl
mov
in
je
ffreep
sbb
pop
das
jp
add
mov
and
jbe
rorl
dec
lcall
daa
add
pop
fidivs
inc
leave
popf
mov
sbb
leave
inc
repz
jmp
mov
icebp
shr
ret
jmp
ret
mov
out
in
inc
mov
cmp
sub
push
sbb
orl
mov
jge
aaa
push
shll
xchg
xchg
aam
push
xchg
mov
push
int
push
push
push
mov
xor
inc
push
pop
add
pop
insl
aam
push
jno
testb
pop
lods
fdivrl
lahf
mov
inc
mov
xchg
jmp
repz
loopne
add
out
pop
sbb
mov
bound
sbb
push
call
sub
sarb
inc
mov
xchg
jle
mov
push
mov
jmp
std
jnp
sub
adc
cmp
adc
test
dec
sbb
push
cmp
adc
mov
loope
cmp
mov
jecxz
mov
pop
jmp
sbb
mov
fs
shll
into
aaa
mov
jno
mov
inc
into
lcall
and
insb
iret
push
or
jb
mov
mov
inc
call
and
test
cmpsl
mov
push
xor
cld
loope
jecxz
push
jecxz
jns
nop
add
aad
rol
adc
mov
rcr
jae
out
or
jge
xchg
pop
inc
cli
or
jle
mov
jge
push
mov
adcb
sbb
hlt
mov
add
mov
test
dec
and
sahf
sahf
outsl
lds
jg
incl
subl
jbe
inc
and
pop
cli
movsb
aad
push
call
aad
adc
aas
or
mov
cmp
pushf
ret
jp
mov
jle
jp
das
int3
lahf
sub
push
mov
mov
mov
outsb
xchg
jmp
mov
lcall
fnsave
jno
addl
pop
fwait
lret
push
xchg
add
cmpsb
mov
and
stos
add
lret
inc
movsl
or
testb
sbb
cli
inc
add
jb
sub
enter
push
sub
cmp
dec
rclb
mov
loopne
inc
jb
dec
sarb
and
sub
notl
cmpb
ljmp
xlat
xchg
je
sub
or
or
imul
adc
mov
gs
jae
mov
mov
lret
movsl
jmp
jo
sbb
mov
cld
mov
pusha
cltd
ja
push
dec
call
arpl
mov
shrb
ds
adc
cmpsl
lea
in
arpl
and
xor
dec
int
idiv
fcmovne
cs
and
adc
scas
sahf
cld
test
insb
test
push
adc
int3
outsl
test
dec
ss
out
test
sub
in
xchg
rol
xchg
lcall
adc
push
ret
xor
sub
xor
xchg
lods
add
ds
mov
push
mov
daa
cmp
pop
mov
push
jne
in
jmp
pop
data16
fbstp
int
stc
sbb
pop
sub
jnp
sarl
cmp
js
leave
sbb
add
mov
insl
pop
or
lds
in
cmp
add
scas
xor
pop
pop
test
xchg
sbb
clc
sbb
mov
sahf
pop
push
aam
push
dec
imul
xchg
sbb
movsl
aas
loop
sbb
fisubrs
mov
jp
pop
mov
mov
pop
jne
dec
sahf
pop
mov
je
cmpl
repnz
imul
call
push
insl
jle
xchg
and
inc
mov
cli
addr16
sahf
test
jne
mov
mov
sbb
dec
stos
pop
jge
push
ret
fnstsw
nop
hlt
xchg
dec
dec
mov
add
mov
mov
in
dec
ret
out
cwtl
sbb
test
shlb
push
mov
dec
repnz
xchg
inc
in
sub
fsubs
into
movsl
cmpb
inc
test
cmp
and
pop
cmp
in
lock
sbb
cmp
aad
mov
or
stos
in
and
lahf
pop
cmpsl
cmpl
lret
mov
add
loope
loope
add
sbb
pop
push
insl
fistps
in
loop
cwtl
pop
xor
pop
pop
lock
movb
jecxz
lret
mov
cwtl
insb
aad
push
cltd
push
nop
mov
add
xchg
mov
push
imul
and
insb
mov
sarl
es
inc
fildll
jb
loop
dec
fdivrs
mov
mov
jns
idivb
inc
sub
lret
jle
sub
add
adc
jmp
xor
mov
clc
adc
pushf
cmp
int3
sub
pushf
shrb
dec
add
or
pop
leave
leave
pop
xlat
icebp
rcrl
xor
push
adc
out
xchg
mov
shrb
mov
pop
cmp
stos
pop
das
pop
fistpl
push
in
cmpsb
ret
mov
icebp
ja
and
jl
pop
mull
testb
or
aad
icebp
je
add
push
and
andb
pop
cld
mov
dec
leave
jle
xor
dec
ja
xchg
mov
sti
inc
and
daa
adc
dec
mov
ljmp
out
inc
sub
mov
sub
movsb
cmc
out
xchg
adc
dec
mov
fnstenv
jl
pop
dec
xchg
mov
add
out
dec
pop
repnz
in
adc
test
aas
test
cltd
and
add
jae
cltd
or
call
fwait
xor
or
subb
jnp
pop
ja
push
or
data16
jecxz
jbe
cmpsb
sub
jg
sub
mov
dec
jae
cld
xor
jnp
sub
and
pop
mov
out
inc
std
test
cmp
dec
xor
add
lods
or
jnp
dec
push
sti
fmull
clc
xor
cmpsl
lcall
and
xor
jb
jae
lahf
insl
sbbb
out
dec
xchg
push
pop
mov
push
or
sbb
cmp
push
jecxz
insb
pop
stc
clc
fisubl
popa
scas
lock
mov
adc
xchg
repnz
rclb
sbb
pop
mov
aad
dec
sbb
sahf
dec
out
sbb
stc
mov
add
xor
and
lea
hlt
inc
jbe
push
sub
stos
sbb
xor
int3
insl
mov
xchg
cmpsl
andb
sti
repz
jp
jl
pop
mov
and
scas
ret
push
mov
inc
bnd
sub
imul
ret
adc
inc
cmp
mov
xchg
jle
and
xchg
andb
jl
cs
les
or
or
arpl
ljmp
fisubrs
mov
lods
sub
popl
adc
jg
fisttps
jo
aad
sub
sub
les
cmp
outsb
aad
sbb
sub
jae
loope
aas
sbbl
dec
inc
inc
int3
subl
adc
movsb
cmp
insl
sub
shl
ret
sbb
adc
in
cs
pop
fsubrl
mov
mov
jecxz
mov
mov
jns
xor
popa
sahf
pop
fs
inc
pushf
pop
test
jns
mov
test
cmp
fldl
movsb
lods
imul
jp
lea
sarb
inc
lret
stos
sti
pop
sbb
push
push
test
clc
mov
outsb
int
mov
mov
mov
add
mov
or
sar
adcl
jo
scas
imul
mov
pop
fcmovnu
jnp
add
pop
pop
mov
stos
mov
ret
or
push
dec
add
popa
adc
sbb
in
testb
cli
mov
js
inc
xorb
add
dec
push
pop
and
loopne
mov
lret
rolb
loop
inc
ljmp
jge
ds
xchg
mov
roll
outsl
clc
scas
sub
dec
pop
cmp
push
xor
push
loope
dec
lock
jecxz
loopne
mov
test
sub
cmpsb
cwtl
in
icebp
push
repz
imul
iret
dec
call
call
packuswb
cmp
out
cld
pop
mov
pop
stos
in
mov
mov
inc
push
push
cmp
add
jnp
push
add
inc
cmp
lahf
cmp
inc
sub
sub
mov
pop
data16
and
orl
add
pop
dec
call
ror
mov
movsl
sub
popa
test
shl
xchg
leave
cs
cld
sti
fmull
shll
out
add
and
pushf
jl
jg
mov
mov
jne
pop
xor
or
adc
lock
or
cmp
mov
pop
xor
outsb
push
sbb
imul
das
test
scas
cld
jae
inc
push
test
pop
pop
pop
lods
out
cld
lods
pop
dec
jne
popa
add
push
flds
xchg
add
pushf
mov
push
xchg
fwait
out
push
std
pushf
roll
sub
fistl
shll
cmpb
or
mov
mov
and
xchg
jnp
xchg
std
stos
mov
mov
push
add
out
cmc
mov
in
xchg
aad
insb
cmp
xchg
mov
gs
xorb
pop
mov
arpl
loopne
xchg
ja
test
ss
mov
mov
push
lret
inc
inc
sarb
mov
pop
jg
xor
add
pop
mov
and
dec
stos
fmuls
xchg
or
xchg
or
lock
ret
mov
outsl
cli
push
dec
sbb
clc
test
mov
rorl
xchg
push
test
pop
add
addr16
cli
jnp
cmp
inc
pop
insl
mov
jnp
negb
sbb
nop
gs
std
inc
xor
pushf
adc
or
xlat
xor
movsl
add
inc
inc
jo
lds
push
int3
test
push
adc
push
movsl
cmp
xchg
adc
push
push
inc
inc
negb
ja
pop
push
mov
push
dec
mov
push
aas
imulb
inc
jnp
or
dec
mov
push
adc
ret
mov
mov
loopne
imull
lods
adc
inc
dec
cs
scas
shrb
cmp
and
mov
addb
fwait
mov
push
mov
and
sbb
push
xchg
arpl
dec
ret
fildll
pop
pop
fcoms
aaa
mov
js
lret
imul
push
and
mov
leave
scas
rcrl
jle
stos
gs
pusha
call
test
jecxz
and
xchg
fidivs
mov
repz
movzwl
insb
cld
inc
dec
lods
add
outsb
insl
stc
sbb
mov
sub
xchg
cmpsb
fstpl
mov
xlat
jnp
push
mov
cli
movsb
bound
dec
stos
xor
popf
outsl
pop
or
outsb
ss
jge
mov
xchg
je
aas
sub
repnz
mov
clc
cmpsl
in
or
jb
push
lahf
mov
addl
pop
es
test
out
in
into
push
dec
iret
nop
mov
sbb
jns
xor
daa
subb
cltd
cmpsb
data16
out
aam
testl
imul
pop
test
mov
push
sbb
sbb
sbb
sbb
lods
enter
xchg
fwait
es
lock
dec
and
or
sti
and
insl
cmpsl
push
sti
ror
sub
call
push
dec
popf
xchg
mov
or
and
idivb
and
repnz
push
pop
mov
mov
sub
imul
sti
add
test
pextrw
inc
jns
cwtl
ss
sub
sbb
jecxz
fldcw
int
inc
lods
mov
fdivl
nop
xchg
adc
stc
test
sbb
push
adc
popa
push
dec
mov
lods
popa
std
jg
push
cmp
xchg
jns
lea
pop
enter
out
jo
sar
inc
dec
or
cli
xor
insb
add
aaa
aaa
add
mov
gs
gs
add
jmp
mov
mov
bound
imul
adc
add
or
mov
and
leave
repnz
imul
push
ja
xlat
out
sbb
inc
pop
mov
inc
dec
jmp
in
push
jp
lret
dec
jbe
xor
into
adcl
inc
std
sub
cld
xchg
sbb
es
xchg
lea
iret
jne
pop
gs
jl
ret
popa
adc
dec
int3
sarl
das
lret
in
in
out
cmp
add
idivl
and
xor
enter
stos
adc
add
lret
fdivrp
lods
pop
aam
repz
dec
jecxz
pop
and
xchg
or
mov
inc
std
mov
bound
add
lcall
pushf
repnz
fbld
sti
loopne
xchg
xchg
sbbl
movsl
pusha
inc
ret
pop
insb
ds
shlb
dec
sub
mov
cs
test
xchg
jecxz
xor
pop
mov
cmp
mov
mov
cmp
jb
sub
pop
cmpl
push
xchg
push
dec
imul
adc
adc
jg
mov
cmc
pop
rolb
xchg
dec
sbb
mov
jbe
lret
insl
cwtl
and
jnp
xchg
into
xchg
pop
jae
add
mov
cmp
dec
mov
fldenv
bound
add
add
push
lret
mov
push
xchg
mov
jp
push
mov
xchg
aaa
xchg
push
inc
loop
mov
jmp
push
out
sbb
shll
mov
popf
insl
pop
xchg
fwait
orb
mov
xor
jl
push
les
jae
mov
lret
push
ret
imul
jecxz
insb
scas
and
iret
xor
insl
xor
fwait
push
loopne
sub
andl
into
xlat
lcall
or
sahf
sahf
cld
ja
dec
stos
fsts
pop
je
cmp
push
aas
push
adc
es
pop
sub
imull
sub
mov
in
popf
xor
icebp
dec
adc
sbb
jg
mov
dec
mov
icebp
outsb
rorl
adc
sub
aad
pop
addr16
adc
lods
push
lods
inc
je
mov
jge
xchg
mov
bound
ja
push
xchg
rolb
push
push
mov
ret
loop
cmp
and
imul
stc
iret
fs
adc
inc
and
stos
ljmp
test
mov
sti
xor
ja
repz
fstpt
aad
push
adc
push
push
pushf
and
push
dec
dec
mov
in
sbb
and
mov
or
sub
lret
mov
daa
and
ret
fisubrl
cltd
sub
clc
mov
xchg
outsb
pop
pushf
xchg
xor
mov
in
in
dec
xor
call
lock
inc
mov
push
rclb
xchg
scas
outsl
pop
xorb
dec
sti
in
jns
ljmp
push
adc
pusha
lods
push
pop
xchg
out
pop
pop
xor
insl
dec
mov
fistpll
inc
or
call
xchg
and
nop
jge
dec
mov
stos
cmp
pop
mov
mov
in
sub
aam
fs
inc
push
xchg
fldenv
sbb
adc
lret
pop
into
push
test
push
fldcw
aaa
mov
mov
ja
cs
out
cmp
pop
mov
xchg
iret
shlb
jmp
mov
dec
aaa
cmp
fs
pusha
stos
push
lret
mov
hlt
or
stos
das
or
mov
mov
mov
insl
xor
stc
pop
sub
test
std
xchg
insl
mov
in
icebp
jne
cmp
and
cs
bound
dec
fs
push
shll
push
inc
xor
pop
js
sub
push
jnp
xor
subb
lea
dec
scas
or
push
pop
xor
sbb
lods
jae
lds
lock
jle
out
dec
push
cmp
sbb
mull
sub
xor
fwait
movsb
int
xchg
dec
xor
dec
pop
cmc
stos
xor
in
call
xchg
xlat
cmc
rdmsr
sbb
mov
addl
ja
test
and
cltd
testl
push
jbe
into
cmp
xor
push
dec
jmp
cmp
and
add
pop
pop
add
inc
cmc
sarl
ror
scas
icebp
sub
jns
jno
dec
jmp
lock
lret
cmp
ss
pop
xchg
xchg
jae
adc
rcll
test
imul
add
mov
psadbw
adc
lcall
cmc
movsl
ljmp
incb
push
cs
xchg
adc
out
or
jmp
or
add
ret
dec
inc
mov
add
push
dec
shlb
mov
std
sbb
mull
fisubs
jno
es
fadds
cmp
mov
pop
sbb
mov
je
mov
mov
repz
cmp
aas
xchg
cmp
aam
mov
imull
lock
mov
int3
xchg
add
mov
dec
xchg
mov
cmpsl
arpl
scas
stos
jp
js
ret
and
jmp
add
jle
das
xchg
addr16
adc
out
adc
cmpsl
push
ds
jne
and
cwtl
shlb
xor
icebp
loop
leave
cmpsl
xor
cmp
mov
add
int3
sbb
filds
adc
jge
xor
pop
add
in
test
imul
aaa
es
mov
push
and
je
xchg
call
test
popf
mov
jecxz
sub
scas
push
cmp
fidivrs
jmp
jo
shr
or
cmp
or
jp
lods
shlb
nop
mov
pusha
fwait
jae
mov
xchg
adc
loope
adc
es
in
pop
shl
loope
dec
push
icebp
push
hlt
ficomps
sbb
lds
lret
add
cmp
mov
mov
adc
xchg
negl
dec
sbb
mov
mov
leave
std
mov
jle
pop
scas
lret
cmpsb
enter
test
dec
inc
adc
dec
movsb
mov
lods
pop
and
or
aam
jle
into
ss
and
insb
int
xor
mov
fnstenv
ret
xor
and
inc
jo
xor
and
test
rclb
mov
stos
test
push
popa
mov
jae
mov
shr
add
les
adc
js,pn
test
outsb
add
insl
aam
xor
push
and
outsb
mov
dec
mov
test
or
inc
ret
lea
mov
cmp
lds
jl
sahf
jg
jnp
add
mov
fucomip
jb
push
lds
and
arpl
sub
and
sub
aad
shrb
fwait
or
add
pushf
jns
aam
cwtl
xor
inc
mov
push
nop
mov
lahf
sbb
add
or
inc
jbe
mov
out
pop
pop
pop
push
mov
mov
out
jbe
dec
cmp
mov
jg
scas
sub
mov
push
mov
or
pop
add
dec
je
loope
fxch
push
sbb
dec
rcl
daa
push
and
sub
cmp
fisttpl
les
and
and
jg
int3
and
jne
ds
pop
andb
ds
lods
out
xchg
outsb
and
arpl
sti
in
jecxz
pop
fldcw
aad
push
popf
inc
movsl
adc
or
jne
mov
out
sub
lret
jle
loop
push
paddd
push
pop
xlat
xchg
rolb
push
sub
add
lock
rcrb
sub
mov
adc
sub
arpl
sarb
pop
adc
xchg
popf
pusha
adc
out
ficompl
cltd
jg
cmp
push
ljmp
out
jle
sarb
fs
xchg
lds
jmp
push
insb
enter
addr16
mov
jmp
adc
push
stos
movsb
mov
adc
cmp
push
mov
sbb
cmp
push
data16
add
pop
add
sbb
mov
int
pop
or
icebp
pop
or
pop
movsl
sub
sahf
pop
cmpsl
pop
mov
add
ds
mov
insl
push
stc
addr16
pop
shl
out
orb
fsubrp
loop
xorl
push
fistl
inc
push
push
sub
pop
cltd
sub
out
scas
sbbb
mov
imul
shll
pop
sahf
sbb
jmp
mov
pop
and
pop
stos
adc
dec
test
adc
lret
mov
imul
aas
dec
shrb
lods
cmpsl
jnp
pusha
call
int3
jnp
in
cmp
mov
add
das
aas
repz
and
mov
mov
mov
mov
pusha
fcmovnbe
ss
repz
in
sub
iret
fs
push
xchg
and
or
insb
pop
add
and
sbb
sbb
xor
fdivrs
mov
outsb
xor
dec
test
pop
inc
popf
loop
sub
out
cmp
scas
sub
xchg
adc
add
shlb
in
pop
movsb
icebp
jo
aas
push
sub
lret
out
xchg
add
in
int
aaa
jbe
push
jno
sbb
jg
mov
mov
and
dec
push
push
xchg
sub
std
or
xchg
fdiv
cmpb
cs
sub
ret
enter
jbe
ficomps
lods
mov
mov
outsb
push
out
cmpsl
dec
push
sub
mov
sarl
ds
mov
frstor
adc
addr16
enter
les
mov
in
pop
rorl
pop
or
outsb
push
out
icebp
fnstenv
test
outsl
push
mov
or
mov
arpl
js
or
loopne
arpl
mov
dec
rolb
xor
sub
mov
lods
into
test
enter
rcll
pop
dec
aas
sub
sbb
push
aaa
cmp
inc
pop
mov
cmp
pop
jg
addl
sbb
push
or
scas
jecxz
dec
push
cmp
add
ljmp
cmp
das
pavgb
in
xchg
push
mov
cwtl
dec
dec
adc
jo
cmp
inc
leavew
mov
lea
inc
jns
bound
xchg
lcall
sub
and
mov
pop
fstpt
jne
xchg
lds
setge
jo
subb
stc
pop
movsb
std
inc
xchg
xchg
adc
aam
and
loopne
mov
aas
insb
shrb
fprem1
rolb
adc
in
xchg
icebp
out
fmull
pop
xor
lods
mov
pop
pop
aaa
sti
rol
lcall
fcoml
adc
arpl
loop
xchg
scas
sti
sbb
shl
pushf
movsl
fidivrs
popf
mov
sub
ja
bound
xchg
jae
pop
ja
imul
pusha
fldcw
stos
jno
and
sub
push
cmp
and
xchg
rorb
adcl
and
sbb
inc
jmp
and
mov
inc
out
int3
jae
push
scas
shrl
mov
loop
mov
repz
mov
inc
xchg
inc
jnp
ffree
dec
mov
lcall
add
cmc
dec
in
jge
cmp
fcomps
lahf
scas
sub
clc
or
push
scas
lret
sbb
pop
pop
mov
sub
add
xor
shr
sbb
jne
stos
adc
loopne
rorb
mov
sbb
negl
mov
xchg
out
push
sti
jne
push
jmp
inc
pushl
orl
cltd
ss
adc
xor
jns
jno
imul
push
fsubrp
cld
loope
mov
sub
int3
mov
xlat
mov
in
stc
jmp
add
inc
mov
addr16
stos
insl
jl
pop
mov
cmpl
sahf
scas
shl
out
imul
or
jb
pop
dec
and
pop
push
jnp,pt
cltd
push
push
jno
in
push
rolb
mov
or
cli
andl
ljmp
repnz
and
or
xor
push
xor
xchg
movsb
mov
ret
std
pop
dec
xchg
add
sbb
mov
sub
mov
aam
cltd
pop
les
out
sub
sub
pop
jno
push
sbb
sahf
push
inc
lods
lahf
push
mov
mov
loop
test
cmp
or
iret
cmpsl
jno
dec
ja
and
inc
fcomps
and
sbb
call
sti
xchg
or
add
sbb
fwait
cs
adc
pop
ds
imul
inc
mov
or
shlb
js
inc
mov
lret
ret
negl
mov
fildl
andb
loop
mov
inc
xchg
mov
mov
rorl
xor
push
movsl
push
faddl
inc
aad
mov
je
rolb
test
ljmp
cltd
pop
dec
cmpsb
in
into
inc
and
pop
mov
repnz
add
orb
push
xchg
hlt
mov
cmp
icebp
pop
mov
dec
adc
mov
repz
rcrb
push
xor
icebp
pusha
inc
insb
sub
shll
icebp
pop
aas
dec
or
or
push
call
push
scas
xor
mov
adc
jg
out
cwtl
mov
pushf
adc
inc
sub
mov
jecxz
and
ret
xchg
pusha
dec
mov
push
mov
loop
mov
mov
ret
in
mov
sub
add
cld
les
ret
pop
int3
mov
mov
iret
out
add
aas
adc
mov
jb
shlb
pop
and
adc
add
push
mov
stos
ljmp
data16
int
sub
ja
mov
popf
ss
fildl
xchg
call
xchg
sub
je
js
inc
addr16
loop
cmp
insb
ficoms
mov
mov
popf
push
mov
adc
jecxz
cmp
xor
xor
pushf
mov
or
jno
stos
out
arpl
push
lods
mov
and
icebp
jnp
cvtps2pd
cmp
lock
fwait
mov
sahf
mov
cwtl
dec
scas
sarl
fistl
clc
inc
in
adc
mov
dec
shl
mov
lods
inc
add
push
xor
mov
ret
setnp
mov
in
mov
std
ljmp
jmp
push
and
push
push
mov
imul
sahf
loop
loopne
xchg
aad
arpl
pop
jbe
pop
sub
cmpsb
int3
and
pop
in
mov
xor
ljmp
jmp
fs
mov
jg
sahf
mov
cmp
mov
mov
pop
pop
adc
andl
fsubrl
repnz
cltd
add
inc
pushf
rolb
repnz
ss
cmpsb
sbbl
loope
pcmpeqw
sub
inc
and
jno
mov
pop
hlt
sti
jo
sub
in
cmpsl
test
subl
dec
push
inc
nopl
insb
add
loope
or
adc
push
sub
aas
dec
jb
test
pusha
or
loop
push
inc
inc
push
mov
cmp
frstor
xlat
add
pop
xor
rorb
shl
js
outsb
jp
sahf
aaa
lods
inc
mov
fcom
cwtl
sub
lea
and
xchg
push
adc
pop
shlb
mov
cmpsl
cmp
das
les
rclb
push
mov
xchg
pop
in
jno
cmc
mov
cmc
mov
or
mov
inc
xor
aaa
das
inc
jl
xlat
xor
sub
lock
jmp
jae
sub
lret
xor
mov
push
nop
insl
sub
push
mov
outsl
push
xadd
sahf
jmp
mov
add
mov
sub
lret
and
outsl
dec
push
inc
sbbl
sbb
jmp
call
cs
jmp
mov
hlt
mov
repz
and
aaa
adc
xchg
orb
bound
and
sub
lret
xlat
mov
sti
and
push
das
ret
in
push
jecxz
lcall
xchg
mov
fisttpl
out
loope
xchg
stc
lret
ja
ret
repz
mov
fwait
ja
call
fcomps
dec
dec
into
mov
xchg
jne
sbb
out
add
mov
or
xchg
aaa
jne
push
xor
addr16
imul
popf
repnz
sub
call
daa
insb
pop
pop
mov
mov
adc
push
jae
cmc
dec
add
mov
pop
fists
or
adc
shl
daa
xchg
sarb
push
subb
mov
mov
xchg
push
jae
data16
fs
pop
aam
lods
stos
adc
mov
push
dec
and
pop
ds
sub
into
mov
mov
adc
adc
into
jg
adc
out
test
sahf
mov
inc
sub
pop
icebp
data16
dec
lock
hlt
inc
enter
in
stos
lahf
movsl
and
mov
mov
in
and
aad
int
sti
mov
mov
inc
xchg
mov
mov
sbb
and
sub
mov
lret
inc
cmp
mov
push
cmpsb
push
icebp
imul
cs
aaa
xor
and
lea
lods
mov
sbb
je
inc
sbb
ss
in
cmp
mov
pop
and
adc
jb
mov
outsl
ds
stc
cmp
jae
lret
xor
roll
ljmp
mov
bound
pop
jbe
sbb
inc
sbb
test
cmpsl
int
lret
dec
or
push
fbstp
mov
mov
scas
nop
cmp
adc
mov
test
mov
sbb
push
cld
cmp
fmull
xor
mov
out
push
dec
or
add
mov
loop
out
setne
xchg
imul
cmp
cmp
inc
xchg
inc
andl
test
fidivs
and
push
mov
enter
push
mov
clc
push
imul
adc
or
stos
and
imul
fcom
push
clc
andl
cmp
jp
movsb
and
pop
bound
int
movsl
xor
test
loop
test
mov
testb
pop
adc
xchg
cmp
data16
and
cmpsl
fdivrs
sub
insb
cmp
dec
cld
push
loope
test
push
adc
mov
jmp
repnz
xor
js
pop
inc
ret
sub
dec
mov
data16
lcall
clc
mov
hlt
xchg
lahf
or
data16
pop
sub
adc
imul
sub
scas
and
js
sub
imulb
cmp
cltd
xchg
or
movsb
lcall
dec
loop
inc
out
mov
and
ljmp
out
daa
stc
hlt
mov
cltd
insl
test
test
aam
cmp
loopne
dec
or
jp
outsb
pop
ficompl
xchg
mov
in
push
and
jle
and
mov
outsl
pop
xchg
gs
test
dec
sarb
hlt
fs
stos
adcb
loope
jns
xor
sti
pop
test
mov
rorb
adc
nop
das
mov
pop
std
out
cmpsl
movsl
pop
into
sub
cli
out
in
jae
dec
fisttpll
mov
ret
rclb
scas
pop
js
xchg
sti
fnstsw
pop
arpl
in
pop
sarb
jo
mov
repz
cmp
push
shrl
sbb
pop
xor
outsb
lds
stos
idivl
and
xor
or
dec
adc
sub
shrb
inc
mov
mov
jns,pn
sbb
mov
fbstp
push
sbb
cwtl
and
push
push
xchg
pop
inc
xor
mov
xchg
cmpsl
out
sbb
jbe
pop
or
test
fadds
mov
cmp
push
daa
jnp
push
ljmp
je
ret
pushf
aas
push
shrl
dec
ds
xchg
sti
rclb
add
nop
mov
mov
ljmp
in
int
adc
sbb
lock
lds
mov
dec
movl
sub
aam
mov
mov
cmp
push
jbe
xchg
xor
std
call
jns
xor
push
or
inc
and
in
push
repz
cmp
adc
loope
cwtl
jns
pop
sbb
sbb
in
ja
nop
in
mov
and
fxch
dec
jmp
call
xchg
or
sarb
mov
pop
scas
mov
mov
push
ss
pop
mov
jl
xchg
mov
jge
addr16
lods
outsb
mull
fidivrs
push
xor
fstl
xchg
lret
xchg
push
mov
int3
ja
jno
lcall
sub
inc
xchg
lock
movsb
pop
adc
shrl
dec
jbe
xor
test
xchg
out
outsb
lods
xor
dec
cmc
loope
jle
lock
mov
push
jnp
mov
mov
push
pop
cmp
out
aam
jo
pop
aad
xchg
mov
adc
cmp
add
jmp
inc
mov
jmp
sub
nop
cmp
xor
xor
sbbb
or
dec
dec
test
cmp
sbb
fsubrs
cmp
adcb
je
sub
sbb
cmp
in
stos
repnz
loope
aam
lods
or
cmpsl
enter
js
add
aas
rclb
adc
out
pop
int3
movsl
fsubrs
jb
jmp
ficoml
clc
xchg
xor
out
jle
inc
pop
addr16
int
jo
movsb
xor
inc
cs
int
push
iret
xchg
xor
loopne
aad
ret
movsl
lret
jmp
adc
outsb
cmc
fistps
sbb
add
dec
popa
cmpsb
inc
bnd
push
cmp
add
jg
dec
mov
sbb
ljmp
pushf
lea
xchg
insl
jge
pushf
push
movsb
adc
sub
pop
stos
mov
cs
call
pop
mov
ret
and
fucomi
sahf
ret
jl
mov
out
out
xor
ds
sub
or
in
cmp
fbstp
pop
fstpl
aam
ljmp
test
and
std
pop
and
dec
lds
int3
inc
add
cmp
test
xor
faddl
imul
adc
pop
push
jb
add
push
into
pop
sarb
fwait
out
pop
mov
push
loop
jb
push
xchg
pcmpgtw
mov
dec
sbb
mov
xor
repz
call
das
cmp
loope
jnp
lcall
addr16
sahf
sbb
add
clc
pushf
mov
lea
mov
out
mov
cmp
xchg
or
cmp
stos
and
int
xchg
sti
mov
mov
dec
push
mov
movsb
iret
and
ds
or
subb
or
and
mov
dec
push
lock
shrb
xlat
mov
shl
insl
lods
or
outsl
and
or
leave
test
pop
stos
mov
lods
movsb
addr16
hlt
nop
mov
push
rcl
mov
or
cmpb
aaa
push
push
mov
jle
lds
imul
lret
mov
mov
in
adc
xchg
mov
push
mov
lcall
xlat
aam
scas
ds
in
cli
fsub
cltd
sbb
mov
dec
push
xor
lahf
mov
xor
outsl
test
mov
imul
sbb
push
fwait
or
sbb
inc
mov
into
inc
addr16
cmp
mov
or
dec
xchg
leave
or
rcl
jl
add
sbb
dec
xchg
cld
pop
xor
sbb
clts
xchg
repnz
inc
sbb
outsl
ret
in
shl
mov
repnz
ret
mov
cmp
dec
out
push
push
fdivl
cmp
stos
ret
inc
cmp
cmc
adc
mov
push
add
dec
mov
and
into
sub
cmp
cmc
dec
or
push
pop
leave
mov
xor
shl
outsl
inc
cmp
cli
add
xlat
jecxz
push
push
sbb
jmp
mov
rolb
es
xchg
loopne
mov
cli
test
push
push
in
push
mov
dec
pop
pop
notl
mov
xor
data16
fcomps
aaa
cmpsl
sti
xor
mov
out
inc
push
mov
mov
push
fstpt
aaa
inc
std
inc
stos
sbb
add
sbb
and
sbb
lret
cmp
xor
sbb
push
ret
in
inc
mov
pop
lods
push
shlb
cwtl
ds
jmp
xchg
movsl
cmc
fisubs
add
aad
inc
iret
or
and
pop
popa
ds
adc
dec
pop
icebp
cmpsb
or
inc
jns
iret
mov
in
pop
dec
adc
mov
push
push
loop
rcl
jnp
jmp
pop
in
lock
push
xor
pop
mov
add
lds
sub
cld
cmp
cmpsl
rcll
mov
mov
jnp
bnd
nop
pop
dec
mov
pusha
pusha
add
adc
mulb
jo
cli
daa
rcrb
push
clc
fst
push
push
das
push
jmp
out
in
adc
push
cltd
inc
push
sub
push
lods
daa
sbb
mov
ds
std
popl
sbb
cli
out
inc
jns
pop
lock
mov
and
push
push
inc
xchg
cwtl
mov
sbb
clc
xchg
fsubrl
or
test
jmp
adc
jge
pusha
xchg
int
in
std
out
xor
cmpsl
jg
xor
mov
sahf
in
jb
sbb
mov
dec
ja
mov
sbb
xchg
cmpsb
insb
inc
cmp
clc
aas
fldt
bound
in
pop
outsl
out
rolb
cmpb
lods
push
push
ret
xchg
jbe
jo
fldl
jns
sub
lcall
int3
lahf
ja
divl
pop
shll
add
push
das
mov
mov
into
sbb
imull
xlat
lret
jns
xchg
mov
push
cmc
pop
testb
mov
jbe
jecxz
fldt
mov
fwait
inc
mov
cmp
insl
out
sub
inc
pusha
xor
add
aad
loop
clc
outsl
sub
call
jecxz
call
cmp
cmpsb
push
arpl
jge
fdivs
push
or
ss
nop
loope
sub
nop
aad
ljmp
jne
xchg
ds
cmp
sub
imul
dec
outsl
icebp
sahf
fs
popa
jno
pop
rorb
mov
inc
sbb
fdivrs
mov
ja
xor
inc
cs
mov
pop
rol
in
shrb
pop
in
mov
int3
jp
mov
rcr
subl
mov
pminub
enter
addr16
push
jg
clc
sub
add
jle
adc
mov
lea
dec
rcrl
cli
mov
sub
addr16
mov
mov
arpl
inc
mov
and
dec
push
cmpsl
out
and
test
js
pushf
add
jmp
cwtl
sahf
pop
and
fistpl
cmpsb
sahf
mov
cmp
mov
lods
mov
sbb
mov
sahf
add
mov
fmuls
xor
or
mov
mov
les
out
push
std
mov
icebp
cmpsl
pop
dec
and
ss
cmpsb
out
xor
nop
nop
jecxz
cmp
xor
stc
ret
fisubrs
push
call
push
int
incl
test
inc
cmp
arpl
mov
rolb
or
sti
cmc
hlt
outsl
sarl
mov
cmp
and
subl
adcl
and
dec
mov
mov
les
je
xor
loope
pushf
cmp
mov
mov
popf
sub
in
negb
jb
lods
ficoml
mov
add
gs
push
fstl
inc
cld
imul
xor
test
jae
lcall
xchg
jbe
cmpsb
jno
and
jmp
cld
cld
and
pop
sbb
ljmp
sub
outsl
xchg
enter
or
and
rorl
ficomps
popa
push
mov
loope
jnp
push
mov
jecxz
inc
pushf
mov
xchg
test
stc
xor
mov
es
aad
insb
add
ss
inc
mov
out
push
decb
dec
adc
test
and
movsl
out
sarb
fcoms
add
push
mov
cmpsl
mov
jo
sub
loopne
pop
add
in
push
adc
xchg
hlt
mov
loop
int3
js
lock
out
sahf
sbb
cmp
or
fst
xchg
cmpb
adcl
fucomi
std
pop
loope,pt
mov
xchg
inc
imul
repnz
test
xchg
adc
push
das
enter
or
push
outsl
out
ja
icebp
mov
cmp
xchg
ljmp
push
and
or
xlat
fyl2xp1
mov
pop
bound
mov
add
icebp
mov
aad
push
leave
in
sbb
stos
out
jae
rorb
pop
pop
dec
sub
pop
xor
xor
sbb
in
adc
rorb
ja
es
mov
dec
insl
je
push
adc
pop
mov
add
xchg
call
bound
cwtl
shrl
lds
dec
aaa
add
pushf
loopne
lods
add
addb
ficomps
add
jae
andb
fisttpll
push
jo
sbb
mov
ret
insl
sub
cltd
inc
mov
push
stos
xlat
lret
dec
adc
xor
cs
stos
shll
mov
lods
mov
or
push
sub
push
add
cwtl
std
sub
in
mov
aaa
sbb
pusha
add
fisubrl
call
cltd
dec
sarl
idivb
xor
xor
and
bound
pop
in
or
sbb
fcoms
add
add
enter
mov
test
mov
aam
stc
test
dec
and
orl
sub
dec
push
subl
mov
and
scas
jae
in
loop
mov
add
add
inc
test
jns
aam
outsb
sbb
push
ret
and
pushf
sahf
lds
in
pop
dec
xchg
jae
adc
in
repz
adcl
pop
adc
mov
mov
pop
rcll
arpl
sub
dec
inc
mov
fcmove
ss
push
sbb
or
and
ja
lret
dec
scas
pop
push
and
cmpsb
outsl
hlt
into
mov
push
filds
inc
xchg
pop
push
andl
out
inc
ret
xor
daa
lahf
out
mov
aad
fwait
mov
ljmp
inc
int3
cmpsl
pop
pop
sbb
mov
icebp
test
imul
std
mov
mov
mov
in
inc
repz
stos
js
movsb
push
jge
decb
das
scas
push
push
insl
repnz
stc
xor
out
xor
fs
subb
jmp
mov
ja
pop
mov
das
mov
inc
mov
dec
cmp
sub
xchg
mov
mov
mov
and
mov
mov
dec
sub
adc
addr16
jnp
sub
les
test
cmp
in
jle
jl
cmp
and
mov
imul
pop
test
xchg
jae
shufps
imul
in
icebp
pop
adc
inc
shlb
rclb
inc
imul
call
inc
mov
mov
mov
fldt
sbb
movsl
xchg
mov
std
jae
or
ficomps
or
xor
xor
xor
dec
sub
mov
dec
in
in
mov
cld
in
test
cmp
arpl
jp
mov
test
test
popa
fisttps
rolb
mov
inc
fidivl
push
dec
mov
sub
xchg
outsl
repnz
mov
sbb
fwait
xchg
cmp
cmp
adc
and
push
outsb
out
divl
cmp
push
jl
stos
sti
and
fadds
test
fisttps
jo
pop
pop
pop
and
js
jnp
mov
pshufw
iret
and
adc
shrb
fmulp
xchg
pop
rcrb
jne
push
loop
push
sbbl
in
movsb
arpl
shl
pop
xchg
mov
nop
or
test
push
cmp
sbb
dec
pop
sub
cmpsl
or
dec
lahf
fwait
gs
cwtl
push
cmp
jmp
sbb
xchg
repnz
sbb
and
or
loop
pop
filds
clc
popf
sub
xchg
lea
adc
push
mov
dec
dec
cmp
jb
int
pop
lret
pushf
add
push
push
and
ficoms
xchg
adc
sub
mov
mov
xor
mov
jns
test
pop
inc
mov
mov
jmp
subl
jo
mov
or
lret
fldl
shufps
popf
or
mov
outsl
mov
xor
mov
jp
push
pop
arpl
imul
push
sbb
cld
test
adc
lds
mov
hlt
dec
enter
and
xor
scas
and
jl
movsl
add
aaa
inc
mov
imul
xor
lods
dec
out
add
mov
cltd
push
mov
pop
add
aad
int3
xchg
add
out
pop
pop
sbb
or
mov
mov
nop
cmp
mov
scas
jae
mov
ds
mov
test
or
dec
in
ret
dec
scas
adc
jae
out
arpl
sti
pop
mov
pop
in
das
psraw
jns
sbb
cli
cli
and
cld
xchg
jp
xchg
mov
cltd
aam
cld
jns
cmp
push
loope
test
jne
rorb
inc
flds
loopne
cmpsl
sub
add
test
dec
jle
imul
dec
fwait
xor
adc
cmpsb
dec
sbb
ret
mov
push
js
outsb
xor
push
dec
jbe
idivb
sub
ljmp
xchg
or
rcrb
xchg
int3
sbb
or
cmpb
aam
jnp
or
cmpsl
pop
inc
sahf
mov
jae
and
psubusb
push
pop
nop
into
push
ljmp
scas
and
clc
pusha
push
xor
out
inc
pop
mov
int3
inc
popa
inc
in
roll
insb
mov
jge
mov
xchg
xchg
btr
mov
test
nop
fs
pop
xchg
shrl
dec
jbe
jecxz
scas
aam
jmp
gs
inc
outsb
shll
xor
mov
lcall
sahf
idivl
jae
in
das
ret
test
ds
jns
sbb
push
cmp
fucomip
std
fs
mov
jbe
filds
outsb
hlt
jge
inc
mov
pop
mov
mov
xor
sbb
ds
xchg
in
jae
and
add
mov
into
xchg
inc
cmpsl
cwtl
mov
lock
lds
mov
or
outsb
push
xor
cmp
jbe
xor
dec
loope
mov
cmpsl
dec
decl
aad
call
jnp
popf
scas
fistpl
jmp
dec
add
adc
pop
ja
cmp
dec
push
ret
cmp
jg
mov
adc
xor
xchg
cmp
cmpsb
std
int
pop
cmp
adc
push
ret
push
xor
mov
stos
cwtl
jns
inc
or
push
cmp
lock
or
ds
pop
mov
and
movl
rclb
insb
or
mov
jmp
insl
or
mov
daa
cmp
notb
nop
xchg
pop
jle
ret
out
out
aas
shll
mov
jmp
jbe
subl
dec
jnp
pop
mov
test
sub
and
lea
push
xor
ficomps
ss
cmp
out
cld
ret
movsl
cmp
hlt
inc
mov
sbb
xchg
inc
sti
push
movups
fnstcw
jnp
hlt
ss
jnp,pt
subb
movsl
cmp
adc
aaa
jno
cs
push
aad
push
stc
jns
sti
mov
push
leave
aaa
out
or
fiadds
pop
in
add
pop
notl
and
adc
cmp
ja
out
add
xor
pushf
aaa
push
jb
xor
notb
cli
or
out
cs
data16
pop
and
imull
ds
push
xor
jle
mov
fwait
movsl
or
orb
or
cs
jbe
addr16
cmp
push
mov
sbb
inc
dec
adc
sub
push
cmp
fwait
pop
mov
scas
push
mov
sbb
xor
lahf
es
xchg
add
pop
loope
mov
jo
sub
inc
dec
movsl
pop
jae
push
je
hlt
pop
mov
xor
mov
mov
cltd
fs
insl
cmpb
pop
mov
pop
aam
sbb
mov
and
int
ret
xchg
xor
scas
arpl
fmull
movsl
jbe
adc
fistps
cmc
fstpt
pop
push
and
jecxz
pop
jo
movsb
jno
push
divb
sbb
movsl
xchg
adc
shll
cs
fdivl
and
push
lret
mov
adc
test
fisttps
xchg
push
icebp
stos
arpl
mov
cmp
pop
mov
add
adc
pop
mov
std
pop
jl
pop
out
pop
cmp
jecxz
rclb
scas
subb
out
out
adcb
andb
xor
jge
and
ret
repz
adc
out
mov
mov
incb
xchg
sarl
inc
in
dec
pop
sub
adc
aad
outsw
int
push
cmp
mov
jp
mov
dec
push
xlat
cmp
sbb
mov
clc
and
scas
pop
fmull
mov
out
inc
rcrb
into
mov
xchg
inc
dec
leave
cmpsb
jmp
scas
mov
sbb
jne
sti
pop
popf
mov
fmulp
inc
jns
stc
shrb
mov
xor
mov
add
xchg
jp
popf
sbbb
jne
dec
cld
sbbl
mov
js
jmp
push
shll
fidivrl
rolb
cmp
iret
icebp
mov
pushf
daa
shl
test
pop
cmpsl
jl
jnp
data16
jae
sbbb
imul
dec
xchg
stos
push
push
adc
hlt
stos
aam
cmp
stc
dec
lea
mov
imul
push
out
mov
in
inc
daa
ret
mov
inc
pop
movsb
jl
icebp
subb
int
ret
fsubs
cwtl
add
nop
cmc
fldcw
icebp
cmp
and
pop
gs
mov
pop
mov
cwtl
icebp
fucomi
jp
jmp
jge
push
in
adc
dec
xchg
adc
into
xor
adc
mov
out
repnz
orb
mov
pop
lret
fists
pop
sti
and
shrl
das
daa
scas
inc
pop
cld
xchg
inc
sub
sbb
xor
mov
fisubrs
ja
xchg
lock
aam
or
bound
jnp
cwtl
push
stc
mov
inc
jp
in
jb
std
fiaddl
in
leave
in
pop
cmp
push
imul
pop
mov
shll
push
sahf
add
or
or
ss
in
call
daa
mov
imul
arpl
mov
rol
push
push
ljmp
jmp
call
lods
jle
dec
sub
fistps
dec
popa
push
ljmp
stos
jns
into
mov
nop
inc
je
mov
js
xor
mov
aam
push
mov
loope
xor
add
jnp
cmp
shr
in
imull
lods
adcb
scas
addr16
leave
xchg
dec
cmp
or
or
stos
xchg
bound
cltd
push
mov
pop
into
jno
shll
sarb
or
xlat
fsubs
cmp
and
xchg
push
les
dec
cmc
mov
aaa
add
or
es
scas
mov
cmp
xor
adc
imul
mov
iret
xchg
sbb
test
or
sub
or
sarb
jl
pop
gs
cltd
jne
adc
popf
adc
mov
push
jl
mov
or
popa
repnz
xor
data16
xchg
sbb
mov
inc
leave
mov
sahf
leave
dec
xchg
adc
loope
rcrb
lock
loope
dec
arpl
mov
push
orl
dec
jae
push
pop
insl
jmp
loop
cmp
out
add
dec
mov
addr16
jecxz
std
add
inc
or
lods
xchg
cmp
sbb
pop
push
fcompl
ret
xor
jo
jo
ds
pop
fcomps
mov
adc
sahf
arpl
insl
mov
lret
fs
mov
mov
fcomp
xor
outsl
mov
xchg
sub
das
movsl
int3
ss
neg
ret
mov
repz
out
push
adc
mov
or
inc
int3
cmp
das
movsb
push
fs
aad
adc
les
cmp
in
mov
push
shll
pop
movsb
idivb
pushf
and
push
outsb
fcomi
and
repz
and
int3
icebp
outsl
cmp
repz
in
das
and
lcall
push
iret
cli
nop
mov
and
shrb
sub
xchg
aas
repnz
addl
ret
sahf
mov
add
jnp
int
hlt
aaa
dec
jnp
sub
es
sub
test
mov
xor
iret
sbb
push
repz
push
jns
lcall
pop
in
sub
mov
rol
mov
inc
pop
pop
popf
test
mulb
ljmp
jnp
adc
stc
clc
in
xor
push
mov
mov
daa
movb
jbe
sbb
icebp
lcall
sub
mov
add
mov
lds
cmpsl
jg
retw
adc
push
xchg
xor
pusha
stos
lds
mov
adc
xchg
movsb
js
and
out
fdivl
test
icebp
mov
xor
sub
fistps
cmp
xchg
adc
jp
xor
lods
or
sbb
xor
mov
add
xchg
lret
out
pop
icebp
movsb
jae
loopne
insl
inc
dec
xchg
push
addr16
or
fdivs
add
popa
lea
out
inc
jmp
dec
out
cltd
or
inc
jl
clc
cmp
dec
lock
ds
jle
in
int3
clc
pop
mov
push
sub
dec
sbb
or
fwait
mov
dec
or
and
loopne
jmp
clc
mov
dec
enter
mov
leave
aam
aad
aas
sub
add
fstps
hlt
pop
pop
jl
push
or
jg
das
jns
ret
test
xor
jb
cmp
push
xor
sahf
loop
sbb
adc
lea
ret
mov
cmp
mov
add
add
test
movsb
loop
jbe
repz
aam
lret
adc
xlat
push
testb
xlat
adc
pop
sbb
cwtl
xchg
lods
and
cli
xchg
popw
loope
xor
jge
add
pusha
test
jge
xor
xchg
push
dec
mov
jg
add
sub
repz
xchg
js
inc
test
test
mov
jo
pop
adc
xor
push
xchg
ss
dec
mov
inc
push
fcoms
mov
inc
ljmp
adc
sar
pop
jge
out
fst
pop
sbb
xchg
mov
inc
dec
jge
cmp
or
adc
jnp
mov
sbb
rclb
jbe
pop
nop
pusha
jp
mov
lock
inc
fcomi
push
adc
push
sbb
pop
mov
pop
inc
push
out
add
xor
int
xchg
jmp
pop
jmp
dec
inc
mov
cmp
int3
repz
inc
shlb
xor
push
push
cs
and
inc
add
mov
sub
add
pop
inc
add
fdivrs
cltd
mov
adc
or
stos
pop
test
jge
mov
jg
loopne
scas
rolb
mov
test
xor
mov
loop
add
mov
ss
mov
push
inc
mov
addr16
adc
bound
mov
pop
loopne
popa
or
aad
mov
cli
fldl2e
int
xchg
jbe
faddl
in
xor
mov
add
pop
in
sbb
mov
lods
xlat
mov
cmp
aaa
mov
arpl
push
add
sub
pop
xorb
jmp
aad
inc
push
xchg
sti
inc
push
lock
sbb
insl
jns
sbbl
mov
xchg
mov
mov
xchg
sarb
lret
xorl
push
clc
cltd
cmp
sahf
push
bound
enter
adc
push
je
mov
das
repz
enter
sub
subb
dec
shrl
ljmp
inc
dec
in
stos
sbb
mov
add
pop
mov
shlb
test
mov
dec
out
adc
mov
fstpt
push
mov
cmp
loop
mov
cmp
ja
cli
jl
mov
int3
jne
out
xchg
dec
add
jp
cmp
fldcw
jmp
xor
data16
ffree
int
aas
in
cmp
vmovntps
and
pop
mov
subl
movsl
enter
sbb
dec
sahf
mov
ficoml
test
lods
ja
mov
adc
outsl
popf
jae
inc
mov
xchg
xor
mov
loopne
sub
jg
das
cmp
mov
rcll
stos
push
mov
sahf
bound
mov
jl
lods
fidivs
dec
inc
push
lahf
imul
jmp
lahf
les
fcmovnbe
pop
jbe
inc
push
add
sti
jge
push
inc
sub
imul
rcrl
inc
pop
dec
sbb
repnz
stos
call
jecxz
mov
cmp
inc
add
adc
mov
out
sbb
test
movsb
insb
mov
jo
out
js
jmp
push
push
add
cld
out
pop
icebp
inc
dec
addr16
lods
pop
add
daa
imul
mov
std
inc
sti
sbb
jne
cmp
sbb
pop
and
mov
xchg
call
popf
mov
jle
rclb
shlb
imul
aas
andb
pop
sub
lds
or
arpl
sub
jo
inc
jbe
stos
pop
dec
rcll
ret
lods
outsl
out
xor
add
stos
jne
fwait
cmpsb
mov
dec
insb
mov
lods
nop
or
adc
mov
clc
and
mov
xchg
xchg
aaa
addr16
lret
pop
jmp
imul
mov
rcrl
in
mov
sahf
nop
or
sbbl
jo
sti
ja
mov
add
mov
inc
stos
in
neg
popa
push
mov
jg
mov
inc
nop
cli
sbb
push
lods
cs
mov
loope
aad
push
sbb
lods
jae
stos
scas
jg
movsb
xchg
or
sbb
pop
or
dec
pop
in
cli
cmp
cmpsl
dec
stc
loop
scas
push
test
sbb
shll
out
fldl2e
out
int3
push
lock
lods
pop
push
lahf
pop
jo
stc
mov
mov
sbb
div
adc
shr
xchg
ljmp
fstl
jp
push
and
pop
jae
fldt
sahf
cmpsl
cli
sub
mov
stos
pop
ljmp
sub
hlt
je
jecxz
dec
add
enter
sub
xchg
jo
rcrl
je
mov
push
js
icebp
sub
out
movsl
mov
push
stc
push
aaa
rcrl
jecxz
add
add
nop
inc
ljmp
cmp
subl
fistps
mov
push
inc
loope
add
int3
test
push
ss
lods
add
cmp
lret
pusha
test
inc
push
out
ror
ljmp
cmc
adc
decb
lods
ljmp
xor
fnstsw
mov
add
xor
push
push
sti
inc
mov
pushf
aam
cld
ja
out
pop
pop
dec
pop
mov
dec
dec
inc
fsts
and
push
adc
leave
in
pop
add
data16
cmp
ret
mov
hlt
adc
out
pusha
inc
inc
cld
mov
and
inc
mov
xchg
push
sub
dec
or
inc
jb
jns
push
dec
bound
add
cmpsl
push
rcll
mov
cmpl
and
pusha
cwtl
sbb
push
inc
xchg
clc
adc
testl
sahf
add
mov
jg
jbe
ret
xchg
or
dec
adc
inc
push
jb
leave
cmp
pop
test
push
inc
xor
pop
fiadds
dec
in
adc
adc
sub
cmp
dec
xchg
xor
lock
push
lret
push
adc
mov
scas
out
cli
movsb
mov
loope
inc
mov
mov
loop
xchg
mov
popa
inc
sbb
xor
xor
inc
sub
xchg
mov
inc
jmp
and
mov
push
inc
int3
repnz
jae
sbb
insl
int
jle
sarb
pop
sub
mov
mov
or
ret
leave
adc
push
xorl
mov
sub
popa
inc
inc
mov
loope
daa
lea
lea
iret
icebp
pop
fidivs
movsb
or
or
addr16
fs
push
xchg
stos
sub
push
imul
cmp
mov
xorb
sbb
notl
testl
add
repz
divl
mov
mov
adc
cmp
sbb
insl
push
or
push
in
int
das
lock
jb
ss
lods
xor
repnz
pusha
and
lods
and
pop
popf
xchg
mov
out
xchg
lret
add
cmp
mov
push
lret
fbld
sub
adc
pop
and
jae
icebp
popa
pop
int
icebp
mov
fiaddl
test
jecxz
cmp
jae
mov
xlat
aad
mov
dec
add
enter
sub
je
adc
mov
popf
cs
ja
ds
imul
repnz
dec
test
ja
int3
cld
insb
fadds
and
xchg
cwtl
and
sbbb
jne
jno
jae
xchg
mov
subb
ds
mov
adc
push
mov
xor
sti
cmp
cmpsl
lcall
jecxz
or
xchg
inc
ss
movaps
pop
pop
shll
scas
pop
cli
mov
mov
insb
jns
mov
dec
mov
repnz
mov
add
mov
push
into
cmp
pop
xor
mov
dec
pop
push
inc
in
lret
test
mov
push
imul
adc
sahf
clc
pop
and
lock
jecxz
ficoml
fcompl
sbb
xchg
jl
sbbb
clc
cmp
in
jb
xchg
lcall
enter
das
mov
imul
cli
lret
test
inc
dec
cld
mov
xor
mov
cmp
sub
push
orb
imul
and
mov
loopne
fldt
dec
cwtl
das
xor
jbe
xlat
push
or
or
push
sub
popa
mov
cmpl
out
mov
outsl
std
mov
or
xchg
xchg
and
adc
mov
out
icebp
incl
scas
adc
and
push
or
cmp
loope
adc
mov
push
xchg
clc
mov
movsl
fmull
push
xchg
sbb
dec
xor
pushf
adc
sub
mov
rep
loope
sarb
sbb
out
push
repz
push
js
sbb
jne
jns
stos
mov
and
mov
xchg
popf
test
cld
lods
push
or
sbb
xchg
enter
sti
mov
pop
ss
and
pop
push
orl
lds
jle
cmp
loopne
test
lock
mov
jg
rcrl
ljmp
mov
adc
cmpsb
test
cmpsb
movsb
ja
dec
inc
sbb
movsl
lock
fs
push
sahf
xor
dec
adc
call
cmp
cwtl
sub
out
inc
popl
and
xor
imul
ficoms
mov
sub
cmp
xchg
lock
aas
sbb
out
loopne
sbb
scas
mov
cltd
sahf
dec
adc
xchg
mov
movsl
in
add
hlt
icebp
and
addb
jns
sbb
scas
imul
lret
adc
stc
adc
mov
sub
outsl
or
xchg
pop
enter
sbb
loop
push
add
cwtl
sbb
sub
xchg
int3
jmp
pop
xor
add
lcall
mov
xchg
sbbb
add
xchg
jmp
mov
outsl
xchg
mov
mov
dec
jo
inc
mov
aam
xchg
stos
jno
adc
sub
cli
ja
dec
ror
pop
sub
inc
out
fadds
push
popa
jle
repnz
jmp
sbb
ret
xor
cld
lods
enter
adc
cmovno
insl
push
jecxz
mov
dec
dec
test
xchg
mov
clc
jne
mov
decl
cs
add
ret
hlt
test
and
or
adc
adc
adc
inc
xchg
aaa
jb
aaa
into
imul
mov
loop
shll
push
cmp
jmp
push
movsb
jp
sub
adc
pop
xor
xor
ret
mov
mov
mov
sub
xor
cli
addb
mov
jecxz
push
or
mov
sti
or
pop
aam
pop
xor
fwait
sbb
mov
stos
lret
scas
jnp
loopne
test
xchg
ds
sub
jmp
or
test
inc
rolb
addr16
pop
addr16
xchg
in
popf
mov
insl
sbb
jl
add
pusha
in
xor
push
mov
sti
enter
push
add
outsb
mov
popa
jb
and
push
int
icebp
scas
lahf
jbe
pop
add
lcall
mov
or
lret
in
lahf
dec
mov
clc
rcrb
adc
test
cmpl
cmp
dec
add
pop
xor
mov
jl
repz
xor
test
and
xchg
cmp
scas
rolb
in
mov
jl
pop
lahf
fs
add
mov
inc
xor
jmp
xchg
add
and
out
sarl
push
add
xor
sub
cmpsb
pushf
inc
imul
xchg
loopne
jmp
popf
dec
cmpsl
and
sub
arpl
repnz
adcl
sbb
mov
cwtl
fstpt
inc
out
lcall
aaa
stos
jmp
out
push
addr16
sti
loop
pop
out
rcrb
and
mov
jl
or
xchg
mov
mov
imul
and
popf
loop
dec
lods
mov
test
inc
sbbl
dec
out
push
push
jno
or
daa
in
outsl
push
test
inc
movsl
call
aad
dec
popw
inc
sbb
shlb
test
out
movsb
repnz
das
not
in
push
repnz
push
outsl
sbb
or
xor
call
addb
sbb
dec
in
aad
cmp
aad
lahf
inc
and
xor
jmp
addl
add
mov
addb
and
add
mov
out
dec
xchg
xchg
mov
int
fcmovne
movsl
cmp
add
dec
xlat
aad
aas
cltd
rclb
enter
jecxz
lods
and
xchg
jne
xchg
push
pop
pop
lcall
add
fbstp
sarl
lea
fisttpll
fwait
or
lods
pop
xchg
sbb
sbb
test
sub
test
mov
push
les
int
inc
fwait
sbb
jge
add
imul
loop
lcall
mov
mov
pop
icebp
inc
mov
push
jbe
mov
fcmovne
popf
mov
adc
outsl
xchg
jb
cmc
stos
mov
mov
outsl
dec
outsb
int
out
inc
mov
lds
test
and
xor
xorb
rorl
dec
pop
mov
sub
dec
lret
add
and
add
mov
cltd
mov
cmp
adc
jnp
xorl
push
rclb
cmp
cmc
jns
and
push
test
lock
ficomps
gs
fs
iret
ss
test
sbb
jge
ds
out
sar
je
xchg
sub
daa
push
scas
xor
rolb
into
jne
push
filds
adc
addr16
mov
or
mov
push
xor
das
add
loopne
ss
jle
and
lret
das
lea
add
adc
je
stc
jge
fcomip
adc
push
cwtl
ret
push
jbe
xchg
push
lea
in
imul
mov
lock
cmpsl
out
in
sub
mov
dec
les
and
cwtl
dec
inc
mov
xchg
xchg
mov
and
cmc
divb
test
xor
into
cmp
mov
mov
lea
mov
cmp
sbb
mov
lock
cmp
sub
adc
inc
xor
adc
ficompl
jb
push
mov
shll
inc
inc
sbb
fsubr
lret
cmp
test
xor
fs
xchg
in
mov
mov
ret
lahf
test
test
repz
xchg
std
ljmp
std
inc
in
or
fnsave
dec
iret
outsb
imull
dec
ret
sbbl
fsubrp
clc
xchg
test
push
add
into
out
shr
dec
dec
cmp
sub
ret
stos
jno
into
sub
and
and
sub
xchg
jnp
mov
jne
xlat
mov
popa
enter
cld
mov
jne
pop
cmp
pop
sbb
cmpsb
idivb
mov
loopne
sub
inc
cmc
push
jae
jg
inc
jns
enter
mov
movsb
in
repz
inc
pushf
cli
push
adc
mov
test
push
push
in
or
cmp
gs
movntps
stos
aad
cmp
outsl
jmp
sub
mov
je
xor
mov
jne
fstpl
xor
pop
fwait
ret
sub
dec
xor
push
cltd
push
lcall
jno
mov
pop
out
mov
push
sbb
sahf
sbb
push
jne
jle
jmp
xchg
fdivrp
aaa
stos
aas
sub
sub
iret
sbb
arpl
popa
out
mov
mov
popf
pop
xor
add
pushf
shrb
mov
inc
pop
fists
mov
ret
xchg
xchg
xchg
sub
cmc
jg
add
or
dec
mov
jae
add
jecxz
add
mov
shll
sub
lcall
jnp
xchg
inc
jae
adc
loopne
bound
push
inc
das
pop
or
je
lahf
ja
cltd
and
and
pushf
popf
dec
mov
jbe
sub
stos
stos
jae
mov
test
mov
pop
call
out
pop
push
cmpsb
push
data16
in
pop
inc
sub
pop
dec
or
xchg
and
push
daa
popa
sbb
cmp
movsl
in
gs
jbe
pushf
sbb
mov
cltd
xchg
test
mov
fisttps
push
and
je
fstpt
mov
loop
xchg
mov
scas
ds
xlat
mov
mov
mov
push
cmp
mov
fldenv
cld
push
cld
push
add
fisubs
nop
cmp
std
cwtl
fidivrs
push
into
xchg
cltd
inc
and
leave
add
cmp
inc
mov
fldl
out
push
pusha
jl
fisubl
xchg
cmc
data16
dec
pusha
cmp
sti
dec
ret
push
mov
pop
pop
arpl
fildl
filds
sub
and
adc
cwtl
ret
rcrl
call
mov
cmpsb
lea
sti
mull
jne
push
add
sub
cli
or
data16
dec
pop
xchg
test
mov
bnd
je
in
rcr
jnp
mov
les
outsb
icebp
fildll
pop
aaa
stos
push
dec
sbb
or
mov
jns
or
fstl
mov
pop
xor
int3
adc
jns
dec
mov
xlat
jmp
mov
xor
xchg
xchg
scas
arpl
pushf
and
insl
jns
xchg
loopne
add
and
dec
sbb
popl
push
idiv
loope
popa
and
mov
jle
ret
shlb
mov
push
push
inc
sub
in
stos
dec
jecxz
lds
cmp
xchg
data16
div
mov
mov
aaa
std
stc
add
cmpsb
pop
sbb
imul
arpl
cmpsl
loopne
mov
pop
push
fmull
loopne
flds
jmp
adc
mov
pop
mov
cltd
cld
gs
mov
leave
cld
sar
xor
rolb
xlat
cld
mov
xchg
mov
mov
mov
lea
sub
popa
les
test
subb
test
je
bswap
inc
and
inc
pop
push
adc
mov
pushf
dec
mov
test
mov
out
and
inc
iret
fbld
mov
sbb
enter
xlat
nop
mov
lea
add
bnd
mov
and
rol
pop
mov
aad
insb
mov
fisubs
push
jecxz
xor
mov
jne
loope
stc
cmp
add
aam
push
xor
pop
add
test
icebp
jo
lahf
xor
xchg
gs
ljmp
cmp
mov
xor
aam
sbb
leave
js
cmp
mov
inc
addr16
inc
std
loope
mov
inc
divl
insl
adc
ljmp
out
dec
sub
jne
loope
push
sbb
and
test
push
aaa
jle
inc
jnp
mov
ljmp
test
repz
je
xchg
fimull
shll
push
xor
outsl
and
xchg
jmp
add
mov
aas
or
jge
xor
xchg
push
push
and
xchg
mov
mov
cli
int3
and
es
and
pop
cmpsb
arpl
int
jbe
jo
cld
adc
mov
jp
lcall
mov
push
xchg
pop
jmp
hlt
rorl
xlat
leave
stc
push
cmpl
jae
mov
mov
aam
in
add
lcall
add
leave
dec
into
ljmp
frstor
shlb
adc
cmp
shrl
lds
call
mov
movsb
xchg
lret
cmp
movsl
xor
cld
and
or
into
rorl
sbbb
out
xchg
pop
fld
das
push
cmp
test
add
xchg
lea
jne
pop
add
in
mov
mov
data16
lahf
fdivrl
bound
lock
jp
mov
sub
in
jmp
add
pop
insl
cmp
ljmp
es
push
faddl
scas
mov
mov
fwait
and
inc
sbb
xchg
or
push
imul
addl
sbb
mov
fadd
mov
mov
jo
aam
sub
xchg
mov
dec
fists
ljmp
icebp
scas
inc
and
xchg
fnsave
jl
aaa
sub
xchg
xor
jl
inc
daa
inc
fldt
mov
adc
push
mov
call
pop
push
out
popf
insb
mov
aad
inc
ljmp
ret
mov
push
xorl
rcrl
push
mov
insb
pusha
mov
mov
xor
or
stos
or
lock
cltd
aam
mov
scas
jl
lock
aad
sub
pop
test
dec
scas
push
pop
dec
stos
clc
and
jecxz
das
call
arpl
and
dec
and
sub
mov
xor
cmp
pop
xchg
aam
cmpsb
jmp
outsl
fwait
enter
push
xchg
nop
lret
or
sbb
mov
mov
lcall
cmp
lret
int
repnz
inc
push
fwait
mov
dec
mov
sub
div
iret
or
mov
imul
push
sarl
dec
and
fwait
pop
jbe
and
or
sbb
iret
and
cmp
sub
or
mov
cmp
fwait
rcll
sbb
inc
mov
mov
in
or
pop
sub
sub
cmp
nop
nop
jae
das
call
xchg
pusha
inc
push
cmpsb
mov
das
pop
cli
pop
das
leave
sbb
pop
sub
mov
jb
sahf
and
in
idivl
cmp
fisubs
sub
and
push
out
cli
sbb
mov
les
cmc
dec
cli
sub
add
cmp
cs
enter
dec
sti
test
dec
dec
push
add
jecxz
testl
shlb
jmp
mov
push
icebp
sub
aad
sub
stos
insb
mov
jmp
push
aaa
cmpsl
fwait
xchg
push
out
mov
int
inc
xor
xchg
fdivrl
loopne
cltd
in
pop
rcrl
jne
pop
dec
mov
imul
ja
sbb
pop
cli
popf
inc
cli
rorb
xor
inc
aas
push
int3
mov
nop
xor
mov
out
adc
enter
fdiv
or
xchg
inc
dec
clc
jne
aas
and
adc
and
mov
into
mov
shll
cs
in
loop
into
cmc
mov
movsb
mov
sbb
add
jo
mov
scas
inc
xlat
push
lret
nop
mov
ds
jle
fidivrl
xchg
xchg
jne
adc
je
in
cmpb
pop
test
cmp
dec
cmp
mov
sbb
bound
mov
ror
pop
push
ds
mov
test
or
mov
add
data16
int
push
lcall
das
js
or
push
in
std
repnz
stc
gs
xchg
std
faddl
popa
pop
into
loope
xor
mov
add
or
js
lea
xor
xor
ds
inc
je
or
ljmp
insb
xchg
sbb
nop
mov
out
xchg
test
out
stc
stos
adcb
inc
push
rclb
or
adc
adc
in
push
sub
lcall
or
jle
xlat
pop
push
jmp
faddl
fldt
jl
les
xchg
out
mov
sbb
sbbb
xchg
pop
aaa
jnp
loope
mov
xchg
mov
dec
mov
push
pop
pop
mov
test
jo
sub
std
test
rcl
inc
out
sbb
jo
sarb
pop
mov
movsl
add
mov
mov
xor
fildl
mov
inc
push
enter
pop
mov
stos
test
cmpsb
pushf
imul
push
in
popa
dec
js
jno
push
dec
sbb
out
ret
mov
rcll
fsubs
sub
jl
test
pop
vmptrst
ja
add
inc
ficoms
adc
fldcw
stos
sbb
jno
cwtl
fsts
fcoms
push
jp
xor
ret
jne
cmpsb
sub
sbb
pop
in
insl
sub
pop
or
adc
popa
pop
sarl
stc
lds
dec
dec
xchg
hlt
sti
pop
jae
cmp
rorl
call
int
dec
insl
xchg
addb
sarb
popf
sbb
pop
mov
arpl
inc
or
push
and
adc
mov
nop
jae
pop
adc
call
push
dec
sub
inc
add
xchg
inc
inc
xor
mov
push
sub
js
sbb
test
mov
imul
sbb
popa
mov
pusha
arpl
out
mov
insl
push
add
loope
fistpl
mov
mov
stc
scas
int
insb
rorl
inc
mov
int3
inc
shr
fs
push
das
cld
in
push
outsb
outsl
daa
or
fidivrl
push
dec
pop
sbb
xchg
push
adc
cmpsl
jns
movsb
out
fcomp
and
stos
popf
xchg
jecxz
pop
test
mov
cmp
ja
xchg
or
jns
cmc
inc
and
cmp
and
adc
jecxz
ds
sti
inc
in
mov
inc
imul
mov
loop
sbb
jnp
xchg
sbb
scas
push
cmpsl
sbb
xlat
push
cmpsl
mov
addr16
negb
xchg
push
scas
enter
sub
add
es
jg
adc
lcall
push
popf
sub
repz
stos
and
xor
mov
fstl
inc
mov
stos
pop
mov
loope
dec
ds
and
dec
in
and
bnd
incl
flds
aad
std
adc
es
xor
outsb
negb
stos
mov
mov
cmp
sahf
mov
mov
imul
test
imul
arpl
jl
sub
jmp
xlat
dec
jb
mov
pop
xchg
cld
inc
es
mov
dec
fidivs
adc
enter
inc
and
mov
mov
inc
xor
cmp
lcall
push
ja
mov
jle
dec
push
icebp
mov
inc
imul
adc
neg
or
xchg
movb
xor
lods
fwait
mov
insl
add
dec
outsl
mov
cmp
inc
jle
mov
inc
or
mov
sbb
orl
das
in
push
push
movsl
add
cmc
lret
lds
retw
and
test
mov
or
mov
in
dec
jbe
decb
mov
add
or
es
lret
add
shl
ficoms
mov
jge
data16
stc
leave
mov
dec
adc
xor
pop
pop
nop
jp
mull
ljmp
xchg
push
mov
fs
in
pop
cmp
jle
add
icebp
out
cmp
lret
sti
xchg
enter
fsub
add
inc
mov
loope
ljmp
repnz
mov
in
pop
loopne
mov
xchg
data16
cltd
cmpsb
adcb
add
outsl
pop
dec
insl
test
roll
mov
and
dec
pop
rclb
mov
daa
and
mov
mov
les
aam
push
mov
mov
jle
das
les
and
fnsave
push
xchg
sub
dec
cltd
ss
inc
sub
mov
hlt
jb
aaa
jae
adc
inc
sahf
outsl
inc
xor
lret
out
mov
mov
aam
and
jno
int3
ja
pop
xlat
les
pop
jecxz
xor
adc
repz
mov
wrmsr
pop
xchg
scas
lock
mov
cmp
pop
cmp
ficompl
rcrb
push
jnp
sarl
pop
mov
adc
inc
fimull
xchg
or
loopne
aad
test
or
popf
dec
mov
sub
and
lods
repnz
mov
push
sub
mov
adc
pop
jo
add
lcall
inc
loopne
stos
test
push
push
inc
mov
xchg
dec
push
loop
ficompl
test
pminub
cmp
es
and
aad
and
bound
mov
in
add
add
mov
push
pop
shlb
test
scas
add
pop
push
dec
sti
xor
ja
add
mov
pop
iret
xlat
pop
aaa
mulb
inc
dec
xor
push
lahf
and
icebp
push
xchg
jno
xor
mov
std
xor
and
fdivl
inc
movsb
inc
adc
add
inc
mov
add
jbe
nop
cmp
pop
scas
out
pop
shl
push
or
sub
aad
sub
rolw
ss
xlat
push
mov
xor
mov
scas
add
in
sub
call
das
sub
out
xchg
mov
pop
mov
add
mov
enter
push
jmp
lret
jnp
cmp
jnp
mov
test
stos
mov
loope
int3
sub
pop
or
push
lret
pop
sub
jmp
rolb
inc
adc
jge
jl
pop
add
dec
mov
leave
pop
sub
dec
push
sub
clc
into
xchg
mov
imul
push
lea
dec
sub
out
mov
pop
icebp
lret
call
cmpsl
pop
mov
sub
imul
xchg
xor
cli
ficoms
test
jns
adc
hlt
xchg
sarl
or
adc
adc
lcall
add
xor
push
pop
push
mov
fidivl
inc
shrb
mov
cmp
or
aaa
sub
in
rolb
lret
test
imul
notl
ss
mov
fsubrs
inc
aas
pop
nop
ja
mov
repz
or
fldcw
mov
dec
aaa
or
fwait
jecxz
les
inc
popa
and
movsb
or
jnp
pop
test
mov
jg
aaa
xchg
or
or
jmp
je
enter
mov
test
dec
sub
push
jb
mov
mov
sarl
clc
add
mov
cld
add
pushf
mov
cmpsb
rolb
and
mov
jmp
fwait
out
xchg
std
jecxz
xchg
push
popa
or
and
jge
cltd
mov
mov
push
mov
scas
sub
mov
jl
jmp
xor
mov
lock
sub
stos
push
jae
cmp
jne
cwtl
adc
cmp
pop
mov
and
dec
xor
dec
imul
shrb
sub
int3
mov
lds
mull
psllq
aad
mov
out
lds
xchg
stos
gs
sub
inc
psubusb
mov
fst
test
mov
loopne
xor
test
mov
push
add
mov
or
inc
js
xchg
mov
push
loop
xchg
xchg
mov
cmp
dec
sahf
mov
adc
stc
cmp
xor
cltd
fsubrs
push
dec
aad
xor
xor
mov
clc
mov
cs
loope
xor
cs
cs
xor
xchg
testb
and
rcll
shrl
mov
cmp
in
cmpsb
xor
sbb
sahf
cmpsb
test
ficomps
jnp
cs
popa
in
pop
test
mov
xchg
dec
sub
jmp
and
lcall
getsec
or
movsb
enter
xor
orb
jmp
lds
pop
imul
cmp
and
ja
mov
stos
repnz
adc
aam
imul
fistps
and
fidivrl
xchg
mov
or
rcl
out
xor
sbb
pop
pop
stc
and
jne
xorps
stos
fimuls
repz
push
int
or
stc
cli
pop
adc
int3
inc
xor
sbb
lahf
inc
inc
push
lahf
pop
fldt
outsb
ljmp
movd
movsb
in
mov
shlb
out
sbb
xchg
inc
jo
pop
inc
or
loopne
pop
div
jbe
test
test
loopne
sbbl
xor
aam
cmp
aaa
push
xchg
sbb
inc
xor
cmp
nop
mov
es
mov
pop
adc
loopne
xchg
adc
mov
xlat
lahf
mov
movsb
and
popa
bnd
in
ficomps
mov
or
pop
loopne
dec
lds
inc
test
sbb
or
mov
enter
xchg
lds
pop
adc
lret
loop
inc
xchg
inc
add
xorl
icebp
push
sbb
or
and
mov
movsb
cli
call
push
xchg
add
in
and
xchg
inc
repz
or
or
insl
mov
cld
js,pn
jecxz
in
mov
and
subl
jb
jecxz
adc
aam
sarb
inc
cmc
pop
sbb
shll
dec
das
data16
mov
mov
bound
in
rolb
mov
or
nop
shl
cmpsb
xchg
loopne
cmp
popa
ds
jno
sarl
lret
lea
iret
or
pop
cmp
cli
cwtl
fistpll
cmpsl
sarb
rolb
push
out
mov
cmp
pop
cli
ss
jnp
cli
sbb
inc
fstl
pop
mov
push
jmp
jle
sub
ret
cmp
das
mov
sbb
scas
scas
jl
shll
jb
mov
and
pop
mov
jp
or
test
enter
popf
sub
mov
inc
dec
ret
addb
out
cmpsl
pop
movsb
inc
ror
pushf
inc
shrl
popa
jge
push
xchg
pop
insl
fcomip
leave
dec
xor
fidivrs
and
jp
cmp
jmp
test
popf
push
decb
ss
sbb
jle
js
in
push
outsl
out
dec
fistps
jge
mov
pop
shll
sti
test
fcoml
cmc
mov
lock
filds
mov
pop
test
cmp
push
jge
mov
neg
enter
cmpsb
mov
push
cltd
jns
adc
inc
mov
jbe
xor
mov
ffree
xchg
aam
dec
sub
negl
arpl
cmp
mov
loope
stc
or
call
pop
bound
mov
pop
pushf
dec
leave
jne
iret
fcomp
pop
mov
mov
mov
in
and
or
push
rcrl
mov
or
lods
dec
imul
rorb
pusha
lds
cwtl
mov
mov
inc
insb
jns
arpl
sbb
jle
add
xor
mov
stos
into
inc
add
mov
mov
lret
test
rcl
or
pop
add
sub
test
sub
insb
fsqrt
xor
in
dec
outsb
jno
inc
sub
cmpsb
cld
xlat
in
insb
aaa
push
leave
mov
and
movsl
mov
lods
jl
jle
mov
pushl
mov
push
push
jne
add
push
das
xlat
data16
jbe
mov
insb
loop
aam
mov
and
dec
xor
lods
cwtl
sub
and
mov
and
push
mov
jb
test
adcl
or
cmp
fldenv
inc
std
lahf
js
sbb
out
jns
imul
cwtl
cld
testl
xchg
clc
or
and
push
push
inc
mov
call
cwtl
xchg
fimuls
inc
pusha
push
sbb
mov
iret
inc
mov
iret
sub
sub
push
fs
negl
rcrl
cmp
loopne
stos
outsl
jmp
es
popl
xchg
dec
dec
xchg
xchg
ret
xor
decb
loopne
xor
into
cmc
mov
jne
add
jae
imul
jo
inc
or
mov
testb
mov
or
call
pop
mov
idivb
adc
scas
xchg
and
test
or
push
int
pop
pop
fwait
ret
and
push
push
inc
mov
cld
les
cmp
fistl
inc
fcomps
pop
roll
jo
in
out
add
bound
shll
into
and
enter
arpl
add
push
dec
add
or
arpl
jp
adc
sti
lret
jle
add
inc
dec
std
data16
adc
jb
add
out
roll
and
sbb
jp
cmc
jp
aam
ret
or
jb
lods
sti
lods
adc
xchg
cmp
mov
js
jle
xchg
mov
outsl
push
push
cmp
push
xchg
out
xor
cmc
sbb
std
adcb
add
imul
rcll
jns
sbb
xorb
sub
scas
test
jg
cs
sub
inc
dec
insl
sbb
pop
jb
stc
xlat
cmpb
cmp
adc
js
divl
aas
mov
fidivrs
mov
and
sti
jb
jns
rorb
xor
cld
push
xor
ja
add
push
push
jge
add
notb
xchg
out
adc
cmpl
jb
leave
push
or
pop
mov
out
add
arpl
jle
cmp
lods
pop
aam
stc
cmpsb
push
std
dec
int
add
bound
inc
scas
add
push
repnz
adc
js
in
mov
int3
pop
addr16
popf
mov
lds
or
cmp
push
fstp
fbstp
xor
data16
jne
fldt
or
push
push
jo
fdivs
and
scas
int3
outsl
cltd
mov
imul
jne
push
or
ja
add
subl
mov
or
mov
sti
adc
ss
cmp
mov
jecxz
sbb
xor
test
pop
xor
sbb
jg
xor
jns
inc
jb
or
pop
xchg
sti
cltd
jp
sbb
xor
jno
add
adc
rclb
cmp
jecxz
cltd
orb
xchg
out
enter
push
xor
push
mov
inc
pop
jecxz
mov
pop
xchg
or
clc
orb
fdivrs
dec
in
or
push
out
out
sub
add
leave
js
push
lds
aaa
xor
bswap
int
and
sub
je
in
cmp
mov
sar
adc
gs
inc
rolb
fs
out
icebp
sub
cmpsb
jp
push
sahf
orl
jp
mov
sar
hlt
adc
sbb
and
mov
inc
stos
pop
inc
mov
xor
popf
xchg
cs
imul
jno
or
fisubs
jne
es
push
jp
movd
loop
fwait
xlat
cmp
aad
xor
push
push
inc
mov
sbb
aam
mov
mov
pop
scas
or
dec
ja
sbb
mov
xor
push
test
add
or
and
cmp
sub
mov
fbstp
out
add
mov
pop
and
out
xchg
inc
mov
dec
in
out
ljmp
mov
pop
cli
xchg
mov
push
cmp
shrl
jno
dec
adc
fdivs
loopne
inc
jl
jmp
sbb
pop
dec
cmc
dec
lods
outsb
or
xchg
pop
jp
pop
les
cld
orl
ds
cmpsl
addr16
pop
add
scas
arpl
push
jmp
fcoms
movsb
sub
lcall
push
xchg
ret
pop
push
inc
int
popf
gs
add
dec
sub
fcompl
pusha
pop
jge
cmpsl
sbb
leave
add
mov
fdivrs
adc
jecxz
xor
jmp
mov
and
sbb
stos
jge
mov
aaa
dec
mov
je
push
movsl
pusha
imul
hlt
rol
xchg
lea
loopne
insl
loope
and
push
fs
adc
out
sub
cmp
out
sub
pop
ret
fcoms
movups
sub
inc
fists
mov
mov
aaa
pop
jo
int3
fwait
mov
xorb
call
movzbl
incl
jge
dec
xor
les
inc
popf
xor
sub
xchg
leave
push
stos
xchg
add
cmpl
fs
sarb
fsubrs
and
das
pop
cmp
stc
subl
sti
xchg
push
loopne
dec
scas
pop
adc
mov
aas
adc
clc
sub
add
int3
int3
mov
or
std
jl
stos
sbb
int
xchg
dec
ss
xchg
ss
push
mov
mov
mov
lea
das
fcmovb
jecxz
or
daa
sub
mov
gs
mov
inc
xor
sbb
inc
jb
adcl
fs
bound
and
int
pop
xchg
sub
ljmp
sub
sbb
sbb
xorb
cmp
loopne
cwtl
sub
enter
or
js
xorb
aam
mov
sub
dec
ljmp
lcall
cmp
sbbl
divl
fmul
or
dec
testb
lret
cmp
xchg
lock
adc
dec
pop
mov
repz
pushf
pop
enter
xlat
sub
and
xlat
adc
ret
lock
in
fcom
mov
push
aad
test
or
jmp
enter
iret
setge
icebp
aas
jmp
ljmp
fbstp
jno
je
addl
push
mov
inc
iret
push
sbb
cld
push
sub
pop
pop
lock
icebp
xchg
pop
lahf
sbb
or
imul
lahf
cltd
mov
clc
inc
mov
pop
mov
xchg
and
fidivrs
daa
insb
inc
mov
and
lcall
xor
in
push
es
lods
movsb
in
lds
pop
sar
pop
nop
jne
sub
adc
jg
int
or
std
jo
xchg
in
fidivs
mov
mov
and
ds
mov
sbb
fistl
movsb
or
xchg
js
or
shrb
mov
push
loop
outsb
out
pop
lahf
push
xorb
push
popa
cld
xor
sub
sub
stc
push
or
mov
fisttps
pusha
xchg
inc
mov
clc
sub
push
ja
in
ljmp
inc
and
cmpsl
add
jg
adc
xchg
adcb
call
pop
stc
out
cltd
sub
push
les
outsb
pusha
lock
mov
addr16
dec
sbb
mov
xchg
mov
nop
fs
nopl
loope
mov
mov
subl
and
lret
inc
pop
leave
cmpsb
popa
nop
movsb
xor
xchg
or
cmp
cmpsb
ret
test
js
je
scas
es
pop
add
in
mov
dec
xchg
lock
fwait
add
ficoms
addb
xchg
ss
pop
mov
cmp
das
push
dec
dec
stos
es
in
and
push
sub
iret
push
cmp
push
and
cld
fstl
sbb
sbb
or
test
fwait
scas
sbb
movsb
adc
imul
in
adc
cs
movb
faddl
push
ss
fldt
pop
popa
mov
outsl
jae
shl
pop
in
stc
enter
in
sub
add
jbe
pop
xchg
mov
repnz
jmp
xchg
or
test
movsb
rclb
in
push
inc
mov
in
xor
cwtl
jno
mov
sti
aas
push
mov
cld
adc
xchg
ss
inc
pushf
adc
scas
cmp
andl
ljmp
lret
add
xchg
dec
mov
fisttpll
pop
sub
push
mov
mov
cmpsb
mov
les
mov
sub
pop
jl
mov
mov
xchg
cltd
mov
inc
in
insl
bound
cltd
push
push
push
lea
dec
cmpsb
orb
cwtl
jecxz
shrl
mov
mov
popf
push
inc
test
test
icebp
mov
je
sub
pop
sub
mov
xor
pop
mov
sbb
stc
psllq
push
mov
adc
add
mov
fs
stc
pusha
fucomp
aad
cli
or
les
pop
int3
mov
int3
push
mov
mov
mov
fldt
mov
adc
pop
test
mov
mov
call
or
popa
repz
in
movsl
pop
repnz
dec
testb
addr16
pop
int
xchg
xor
daa
pop
rorl
cltd
and
push
cmp
into
jmp
push
xchg
scas
dec
mov
imul
mov
nop
adc
xor
fs
cld
negl
xor
lods
pop
sbb
call
pop
dec
jbe
jl
inc
icebp
or
adc
lods
mov
inc
lea
ja
lret
movsb
aad
xchg
dec
mov
adc
mov
imul
loope
hlt
daa
dec
out
pop
lahf
out
lcall
cmp
repnz
cwtl
xchg
fwait
xchg
movq
mov
or
push
xor
inc
push
xchg
jbe
cmp
push
nop
mov
nop
jo
inc
je
in
sub
test
mov
mov
js
adc
stos
inc
adc
loopne
sub
je
add
stos
add
cmpsl
mov
sub
sbb
sub
pop
das
dec
xor
push
push
sub
sbb
stos
mov
rolb
push
mov
or
dec
mov
jne
out
sbb
lods
add
mov
int3
scas
push
add
fiadds
xor
sbb
insb
jae
jmp
push
js
cmp
addr16
iret
or
add
pop
inc
cmp
scas
outsb
inc
cmc
fdiv
inc
cmpsb
pushf
jl
mov
push
jno
ds
scas
ret
pop
push
test
lock
cwtl
data16
push
or
xor
ffreep
xlat
push
scas
pushf
jl
rolb
insl
inc
jl
mov
aas
xchg
xchg
push
inc
outsl
xor
popa
xor
sub
clc
loopne
add
incb
jg
daa
ret
add
mov
lcall
js
jp
test
inc
dec
adc
or
testl
jae
mov
repnz
adc
jns
daa
sbb
incl
out
fdivrs
imul
push
insl
idivl
mov
es
lock
push
xor
xor
je
pop
out
daa
in
lret
mov
hlt
pop
into
ljmp
enter
ds
dec
push
pop
sub
sahf
mov
jp
lock
iret
xlat
adcl
js
mov
pop
cmp
mov
ret
subb
mov
bound
addr16
pop
adc
inc
push
or
mov
pushf
xor
push
mov
pop
loop
xor
punpckhbw
scas
ret
push
mov
dec
clc
inc
out
popa
dec
dec
aas
stos
enter
mov
sub
movsl
cltd
ficoml
movsl
sbb
ror
call
lods
mov
fildll
in
jl
and
jecxz
dec
push
or
in
add
shlb
dec
pop
dec
adcb
or
xor
test
pop
and
repnz
add
dec
punpckhwd
sub
pop
adc
mov
sbb
jmp
add
fsubrs
sbb
test
sbb
xchg
sub
je
lcall
xor
inc
push
pop
std
in
pop
stc
or
pop
adc
adc
add
sbb
fistpl
imul
and
aad
pop
mov
and
dec
dec
repz
jl
jno
test
fstl
clc
ss
and
fcoms
js
enter
decl
and
cld
lds
mov
adc
sbb
test
std
insb
scas
lret
shrb
jecxz
sti
jae
fcomp
mov
jnp
jge
jmp
mov
out
mov
mov
xchg
daa
cmp
and
xchg
pop
xchg
cmpsl
out
ss
dec
sub
xchg
cmp
add
cmp
push
pop
repnz
sub
outsl
push
xchg
mov
jne
cmp
nop
push
adcb
and
int3
dec
outsb
pusha
outsl
add
sbb
dec
jge
adc
push
sti
ja
sub
in
pop
cmp
push
add
fldcw
cli
daa
bound
loope
sub
lret
shr
scas
jge
jecxz
xor
sarb
int
hlt
imul
sbb
aas
mov
fadds
mov
sbb
aaa
ret
xor
mov
popf
int3
mov
xchg
mov
or
pop
call
jp
dec
push
push
jno
ficoml
leave
popf
fs
test
push
dec
cmp
lock
jge
mov
enter
adc
mov
aad
jo
pop
dec
push
push
xchg
mov
ret
sub
pushf
cld
inc
mov
mov
add
xchg
outsb
nop
inc
mov
je
fdivrl
mov
cmp
sbb
cmpsb
lret
dec
push
outsb
fstpl
out
rcl
mov
xchg
sub
jno
fs
xchg
shlb
insl
imul
ss
xchg
cld
sbb
xchg
repnz
or
fcoms
push
xlat
hlt
in
ret
push
es
ds
push
into
stos
scas
sub
mov
xchg
and
pop
inc
mov
mov
pop
lahf
add
push
mov
out
xchg
sbb
sbb
xor
sbb
sahf
xor
dec
xchg
cwtl
fadds
js
add
movsb
ds
xor
mov
xor
lahf
mov
push
and
pushf
xor
leave
or
pop
shrl
push
xchg
sbb
test
xchg
shrb
mov
xor
pop
enter
gs
pop
jp
cmp
fwait
mov
sti
icebp
enter
push
lret
mov
sbb
mov
lods
mov
or
pop
pop
lock
popa
push
cltd
push
repnz
std
or
push
mov
sbb
call
loop
gs
jecxz
out
dec
lods
popa
xor
add
cli
hlt
xor
test
jae
scas
test
cmpsl
or
call
es
rorb
mov
or
and
xor
loope
sub
push
or
sub
jecxz
jbe
add
mov
test
xorl
cmpsl
mov
fimull
test
cwtl
sub
ljmp
mov
sub
adc
xor
inc
or
test
mov
dec
mov
fstpl
push
and
nop
test
push
and
and
popa
push
hlt
stos
nop
jl
pushf
popf
mov
xor
shll
fnstsw
mov
sub
loopne
and
xor
jp
jo
cmp
inc
clc
cmpsb
mov
xchg
stos
mov
loop
movsb
push
mov
ljmp
addr16
divb
xor
mov
dec
mov
push
cmp
mov
adc
movsb
inc
rcrl
inc
mov
inc
fcoms
and
fwait
xor
ljmp
jecxz
ljmp
and
aas
jl
mov
add
notl
mov
push
rolb
scas
shl
mov
adc
hlt
mov
testb
std
cmpsb
cli
jecxz
stos
lods
sarl
ja
nop
insb
std
push
sti
mov
dec
icebp
push
adc
rcr
mov
clc
inc
enter
repz
loopne
mov
rcll
arpl
xor
or
pop
inc
fadd
cmp
mov
scas
xacquire
mov
sahf
pushf
stos
lahf
add
test
sbb
cmc
dec
and
mov
nop
addl
pop
or
adc
push
dec
das
inc
jbe
jp
xchg
and
mov
xor
push
or
pop
scas
pop
lds
pop
pop
in
daa
push
inc
add
mov
sbbb
fwait
inc
sarl
loopne
xchg
and
push
loop
push
push
add
pop
pusha
cli
sahf
fs
into
repnz
das
dec
pop
xchg
push
xor
insl
sbb
push
lods
iret
inc
stos
stos
mov
movsb
mov
cmpsb
jno
fstpl
scas
gs
and
pop
xchg
leave
mov
inc
outsl
mov
adc
cmp
inc
mov
push
jle
xor
mov
xlat
gs
jp
push
dec
lock
fisttpll
mov
push
shlb
sbbl
fbstp
aas
jmp
fistpl
and
dec
test
daa
mov
clc
inc
sbb
jae
xor
mov
lods
and
add
adc
mov
js
dec
mov
push
push
rcrb
pop
icebp
xor
cmpl
sbb
sbb
add
inc
into
mov
dec
cs
adc
ds
cmpsb
cmp
js
repnz
out
sbb
ljmp
mov
stos
dec
xchg
outsl
js
mov
int
leave
cmp
outsl
xchg
mov
jg
jne
cwtl
ds
push
pushf
mov
sub
inc
push
cmp
pop
roll
push
mov
insb
test
and
ds
call
jo
or
loopne
jp
add
cli
ret
fmul
pop
fmul
jb
leave
cmp
xor
into
sub
ja
xchg
sub
mov
sbb
insb
add
dec
repz
xchg
jge
daa
insl
jmp
pop
dec
dec
and
cmp
mov
mov
stos
nop
popl
cmp
scas
dec
sahf
popf
mov
mov
lods
pop
jmp
pop
fmul
push
lods
movsb
cltd
pop
aam
dec
addb
xor
lea
push
jo
mov
cmpsb
sbb
dec
rol
adc
and
repz
sub
es
or
pop
jl
sub
cmc
pop
add
jno
push
mov
mov
fcmovnbe
sbb
clc
push
push
push
jg
shrb
insl
sbb
cmp
mov
xchg
or
clc
xchg
sbb
mov
sub
dec
xlat
inc
sub
and
or
inc
imul
lret
ss
in
push
or
mov
mov
pop
sub
mov
lock
push
fcoml
push
les
cltd
outsb
xor
les
hlt
xor
mov
in
and
cli
dec
pushf
mov
sahf
pusha
fcmovb
icebp
sub
add
jbe
cmp
out
insl
loopne
cltd
xchg
mov
and
mov
pop
jle
jae
cmp
add
jns
jae
out
mov
and
mov
sub
into
ja
out
rcll
cmp
xchg
jbe
mov
scas
inc
sahf
mov
insb
shl
sub
cmp
fwait
das
subb
and
leave
mov
test
push
daa
pushl
int3
sbb
dec
mov
push
aaa
jmp
lret
pop
push
fstl
dec
mov
pop
sbb
jb
mov
sbb
adc
or
cmpsl
jecxz
add
fsubrp
mov
mov
pushf
cmp
pop
test
in
lods
aaa
cmpb
mov
outsb
push
xchg
loope
pop
lods
xchg
aas
in
pop
dec
sbb
adc
sbb
jb
inc
fld
int
xor
cmp
inc
shr
adc
shlb
adc
mov
xchg
pop
lahf
lds
jge
pop
sbb
jmp
scas
loop
dec
pop
cmp
daa
mov
cmp
mov
pop
xor
inc
mov
push
push
and
sub
test
sbb
cmpsb
sub
adc
xchg
cmp
test
enter
in
imul
clc
insl
pushf
mov
lahf
data16
popa
mov
cmpsl
push
out
sub
sbb
mov
jecxz
out
inc
aad
enter
jae
pusha
sub
mov
dec
pop
leave
fld
out
dec
in
add
mov
add
inc
sbb
mov
inc
cmpsb
in
addl
cmpl
adc
xchg
mov
push
int
push
xor
lods
mov
adc
xor
mov
into
xchg
dec
mov
cmp
jmp
dec
loop
xchg
push
push
lods
jle
lahf
xor
jg
lods
jbe
inc
sbb
push
sbb
jg
xchg
lcall
push
or
ret
popa
orb
inc
test
mov
mov
pop
shr
xchg
cld
fcomi
inc
cltd
xchg
fisubl
outsb
pop
jmp
mov
shl
cmp
mov
or
xor
xchg
popl
movsl
in
or
cmp
lods
or
popa
scas
push
imulb
aas
jae
cmp
jne
adc
loope
jns
pop
adc
add
dec
aas
addl
jle
ja
add
or
mov
fimuls
cmp
and
fcmovu
out
fnsave
xchg
insl
inc
add
jg
xor
data16
fcmove
nop
add
mov
mov
sub
pop
sbb
mov
xchg
cmp
insb
cmp
imul
or
sbb
leave
rcrl
out
mov
lds
cmp
add
subl
hlt
cmp
mov
jge
dec
sbb
dec
xchg
pusha
pop
mov
and
test
mov
aas
lcall
or
loop
sahf
aaa
ds
jle
adc
stos
xor
and
pop
add
js
add
clc
sahf
mov
sarl
sarl
dec
mov
or
fs
mov
fs
cli
mov
inc
and
add
mov
mov
cltd
pop
fnstcw
jae
mov
mov
daa
mov
jnp
jne
leave
mov
pop
cmp
mov
pop
fstpl
xchg
fs
adc
mov
and
sub
dec
jge
sarb
aaa
fiaddl
rorl
and
ret
ljmp
sub
push
pop
jle
add
push
jns
jge
lds
xchg
dec
cmp
iret
xor
std
xchg
jl
frstor
xor
call
sarl
cld
sti
popf
add
xor
pusha
scas
pushf
xchg
or
jp
inc
sbb
pusha
mov
pop
int
scas
sbb
popa
lcall
xor
adc
pop
mov
cmc
pop
out
or
daa
xchg
ljmp
jb
fstpl
gs
cmp
adc
jecxz
outsb
or
fwait
insl
lahf
outsb
mov
hlt
bound
sti
sub
sbb
test
add
das
mov
mov
pop
push
push
scas
mov
sub
outsl
lds
jno
sub
fucomip
mov
pushf
imul
sarb
lods
in
pop
fs
loope
sub
pop
cmp
lahf
mov
loopne
leave
push
in
mov
pop
mov
ljmp
cmp
in
xchg
imulb
pop
push
mov
xchg
xor
jle
lds
ret
xor
mov
sbb
pop
sub
adc
mov
mov
add
subb
cmp
sbb
enter
xor
lret
jns
push
xor
pop
xor
mov
jne
pop
add
in
sub
fiadds
ret
push
loope
push
aas
mov
popl
xchg
lock
cmp
cli
pop
push
es
pop
arpl
int3
and
inc
lea
mov
pusha
cmpsl
mov
jno
xor
sbb
sub
dec
or
ds
cs
xor
mov
xlat
ficompl
lods
fimuls
push
cli
inc
push
xor
test
inc
adc
fisubrs
adc
pop
stos
data16
or
cmpsb
mov
out
jo
cli
cmp
jo
fldt
push
push
mov
sbb
aaa
push
sbb
fcoms
shlb
mov
or
sbb
cmp
aam
push
dec
sarl
push
cmpsb
cmc
xchg
mov
inc
mov
jns
subb
inc
cmp
mov
ds
nop
mov
daa
inc
xor
arpl
jo
push
loop
xchg
ds
imul
dec
int3
jo
movsl
pop
imul
insb
mov
xchg
xor
jns
dec
test
rorb
sub
mov
xor
enter
clc
out
pop
dec
cmp
shll
push
mov
ret
vmread
stos
cltd
insl
dec
rcr
pop
adc
push
sub
jle
fstps
adcl
push
outsl
or
fwait
or
nop
mov
mov
push
push
ds
add
ds
repnz
leave
sub
icebp
in
lcall
xchg
mov
movl
push
pop
stc
push
or
mov
loope
add
in
pop
clc
push
pop
dec
loope
and
adc
je
stos
push
out
and
and
mov
pop
clc
pop
dec
out
ja
jae
inc
shrl
push
cmp
xlat
xor
mov
push
sbbl
in
jp
imul
lock
popa
adc
adc
jnp
repnz
dec
lret
lcall
jmp
test
in
test
or
repnz
stc
lock
sbb
mov
roll
movsb
aas
hlt
xchg
iret
xor
mov
test
push
push
test
add
mov
sub
or
cmp
dec
pop
outsl
push
ja
daa
imul
and
test
jae
in
iret
adc
loope
movsl
xor
pop
or
in
cmpsl
shrb
xor
andb
outsb
pop
inc
push
inc
fnstenv
mov
and
cltd
jg
or
mov
pushf
aas
xor
pop
or
imull
leave
pop
mov
pop
fcmovnbe
out
xor
mov
into
loope
jno
xchg
data16
mov
pop
mov
movsb
cmp
cmp
dec
inc
mov
jne
xchg
outsl
xlat
pop
lret
or
push
and
mov
mov
fistpl
cmp
lods
repz
pop
js
andl
test
lock
popa
ret
or
pushf
jo
or
and
jb
popfw
lcall
es
adc
ss
movsl
mov
pop
std
cmc
xchg
inc
xor
mov
cwtl
mov
jl
or
sbb
cmpsl
push
dec
test
add
jg
pop
aaa
roll
insb
sbbb
icebp
xor
xchg
stos
test
add
test
mov
imul
arpl
xor
es
mov
es
scas
imul
pop
sbb
mov
dec
jle
cmpsl
cli
push
mov
stc
das
adc
fwait
sbb
sti
fs
lea
js
mov
fwait
cmc
popf
sub
mov
xor
jb
cltd
jnp
cmpsb
sub
lret
idiv
imul
in
or
je
rorl
adc
push
or
sti
js
adc
cmp
xchg
outsl
push
pop
fwait
aam
pop
pop
je
sub
inc
pop
jg
inc
mov
inc
mov
es
pop
jmp
and
lret
xchg
cmp
sti
mov
adc
or
into
pop
and
cmp
ficomps
iret
aad
or
jbe
aam
cmp
dec
enter
jl
mov
push
and
imul
int
ljmp
adc
push
cmp
in
stos
add
lock
pop
pop
adc
inc
not
in
insl
sbb
scas
popl
test
mov
push
js
orb
lods
pop
pop
push
xorl
scas
mov
push
mov
xor
push
out
push
inc
cmp
repnz
movsb
lea
aad
pop
cmp
es
push
leave
leave
int
mov
mov
mov
pop
loope
jmp
icebp
insl
movsl
movb
mov
or
enter
or
jle
incl
hlt
and
xchg
mov
adc
ja
popf
jae
imul
or
cmp
inc
xchg
fnsave
pop
pop
cmp
xor
cmp
xchg
jecxz
iret
xchg
and
sub
shl
cmpsl
mov
mov
out
addr16
ja
test
or
xor
clc
outsb
out
or
loop
or
shl
insb
fldenv
fldl2e
aam
into
into
in
or
jb
pusha
fwait
outsb
cmp
cmc
jge
mov
popf
sti
push
movsl
jae
push
dec
cmpsb
fisubl
inc
cmp
pop
nop
pop
fwait
jns
sti
push
hlt
fsubp
fs
fwait
jne
jns
cmp
pop
aaa
cltd
gs
jmp
xchg
or
cmp
lds
aad
ret
lcall
ret
ds
outsb
lds
add
mov
mov
out
cmp
cs
cmp
pop
ljmp
cwtl
insb
leave
test
imul
lea
mov
clc
xor
xor
push
inc
in
sub
sub
ss
xchg
aad
test
xchg
and
push
sbb
xor
mov
push
xlat
mov
lods
aaa
ss
faddp
add
cwtl
xor
xchg
cmpsb
push
jg
es
pop
cmpb
mov
xor
cmp
sbb
cmpsl
popa
mov
mov
aaa
cmpsb
frstor
shlb
notb
dec
lea
movsl
or
ret
jae
mov
mov
xlat
xchg
xor
sarl
xor
in
mov
scas
ud1
leave
paddb
cmc
lea
ror
xchg
sub
xor
add
lods
pop
call
fisttpl
test
cs
aad
out
sbb
push
xchg
jne
pop
and
cld
imul
mov
movsl
rorl
in
pop
lock
jmp
rorb
lret
lds
add
int3
pop
rcr
aaa
push
push
inc
sbb
push
add
sbb
mov
adc
jo
insb
sub
cmc
add
in
mov
adc
imul
lret
inc
pop
jmp
cmp
fcomp
sarb
insl
and
xchg
jae
xor
lcall
pop
add
xor
xor
sti
cld
pop
js
and
nop
cmpsl
ret
jns
inc
cs
scas
shlb
jmp
rcr
xchg
in
dec
inc
push
pushl
jmp
mov
lahf
xchg
int3
adc
fs
mov
insl
fucomi
cld
ret
or
stos
adc
lods
pop
rorb
mov
mov
test
test
push
jl
add
sub
outsl
rcl
xchg
repz
in
ljmp
jae
mov
pop
mov
jae
dec
in
aas
mov
lods
out
add
mov
cmp
jne
pushf
rcll
sbb
js
add
push
or
xor
or
test
xor
fabs
andb
call
mov
mov
scas
movsb
xor
and
test
or
add
push
mov
pop
jne
inc
mov
sbb
xlat
sub
leave
loopne
mov
in
add
mov
rorl
mov
sbb
aaa
sub
add
cmp
lds
popa
dec
xchg
xor
push
lock
mov
xchg
jno
fwait
xchg
imul
jae
inc
dec
jg
mov
icebp
cmpsb
push
outsb
repnz
ret
les
mov
mov
popf
clc
stos
addl
jo
movsl
out
into
clc
gs
shlb
popf
add
mov
xlat
add
xor
call
das
aas
sub
adc
int
cmp
push
dec
mov
cmpsl
jne
cs
or
addl
dec
pushf
jecxz,pt
adc
cmp
js
mov
jge
insl
or
jnp
icebp
jo
or
jo
mov
mov
sbb
test
cmp
dec
clc
jb
sub
imul
xor
dec
push
mov
dec
dec
test
ret
mov
repnz
out
inc
test
sahf
sub
inc
sbb
sub
sahf
pushf
icebp
sbb
fisttpl
or
push
xor
mov
sub
sbb
mov
xor
xchg
out
add
jle
or
jbe
jae
aas
dec
je
lret
fistl
in
lock
sbb
aad
jb
imul
sub
ret
xchg
push
pop
out
bound
pop
cmpsb
cmp
jbe
xor
push
ficoms
scas
push
mov
test
movsb
mov
clc
xor
add
fstl
pop
mov
popa
fucomi
jb
adc
xchg
roll
iret
push
aad
ret
push
ds
mov
fldpi
js
jle
fidivs
ret
push
lock
pop
into
pop
std
cmp
sahf
sar
shrl
stos
jecxz
pop
push
sbb
into
mov
dec
test
es
jecxz
push
mov
aam
pop
add
mov
cmp
fcomps
mov
jb
add
cmp
adc
sub
inc
pop
xchg
aas
add
xor
mov
xchg
fisubl
dec
xlat
loopne
mov
xchg
and
and
mov
and
popa
add
pop
or
push
inc
mov
testb
inc
sub
and
cs
ret
mov
xchg
sbb
and
sbb
adcl
sbb
adc
shld
cmpsb
leave
movb
mul
movsl
cld
insb
je
cmp
xchg
ret
cmp
flds
jmp
arpl
loope
pushf
sbb
jl
cmp
in
and
outsb
lret
cmp
daa
push
add
loop
xor
mov
ja
inc
inc
dec
ljmp
cmp
int
dec
aaa
frstor
and
mov
iret
or
repnz
jnp
mov
loope
ja
add
out
dec
in
push
popf
dec
fldt
push
cld
pop
adc
in
push
xor
pop
in
or
js
sbb
repnz
sbb
sbb
sub
mov
rol
sub
fs
cwtl
and
xchg
mov
sbb
mov
mov
mov
int
sub
icebp
sbb
add
inc
inc
dec
or
loopne
iret
es
pop
dec
shll
in
xor
rorb
stos
scas
mov
or
mov
adc
pop
mov
xor
cmp
inc
pop
xchg
inc
and
aas
xchg
push
loopne
xchg
out
pop
or
andl
cmp
les
add
or
test
jbe
aas
jbe
or
sahf
push
sbb
jnp
xchg
cmp
out
stos
lahf
pop
lods
or
jl
adc
imul
enter
mov
adc
insl
scas
cmp
frstor
nop
jmp
xchg
in
rcrl
mov
add
test
add
push
push
mov
test
test
mov
jl
mov
add
dec
cltd
insb
mov
jbe
cmc
sti
cmp
xor
cmp
xchg
pop
push
test
cmpsb
mov
cmp
xor
pop
sub
insb
popf
lock
xor
aaa
shlb
dec
xchg
xlat
cld
out
mov
cmp
adc
push
jae
inc
and
clc
es
das
push
loop
es
orl
add
and
fisubs
jae
cmp
in
sbb
push
in
add
roll
push
mov
loopne
outsl
ficomps
mov
lahf
rcll
arpl
inc
mov
sub
rorb
cmp
push
dec
movsb
aaa
out
mov
lahf
sbb
adc
jb
add
gs
jno
lahf
mov
push
mov
pop
cmpsb
fisttps
ret
loope
add
scas
or
xor
push
nop
add
call
jge
mov
push
mov
sbb
pop
call
loopne
jb
mov
mov
je
lcall
das
adc
test
xor
enter
stos
dec
arpl
mov
movsb
imul
pop
lock
push
mov
jmp
mov
mov
cmovs
fmulp
mov
add
pop
mov
pop
movsb
icebp
cs
cld
ljmp
movsl
xchg
enter
clc
cmp
or
repnz
loop
repz
jmp
outsb
scas
jne
js
jmp
add
jae
fistpll
mov
std
sar
xchg
bound
imul
sbb
rcrb
xchg
mov
es
mov
inc
popa
cmp
mov
xchg
shlb
xchg
sar
sub
scas
cmpsb
xchg
and
sub
rcrb
xchg
and
fstl
cltd
mov
fs
or
lock
dec
or
add
push
adc
mov
pop
gs
cmp
addb
mov
add
ss
xchg
repz
dec
fnstenv
lods
movsb
mov
ret
loop
leave
jno
adc
add
adc
je
or
std
popa
pop
mov
dec
sub
and
outsl
mov
or
sub
cmc
test
adc
roll
push
sbb
in
out
insb
jne
adc
jmp
out
es
push
cmp
imul
xchg
or
inc
inc
push
or
scas
pop
sbb
sub
dec
repz
inc
addr16
ljmp
je
push
bound
xchg
out
xchg
inc
popl
movsb
les
shl
repnz
mov
inc
inc
test
push
int3
dec
push
in
sbb
xchg
pop
xchg
cmc
icebp
lock
or
and
jge
lahf
inc
dec
jl
push
dec
xchg
add
outsb
cltd
cwtl
push
in
movsl
mov
jmp
loope
insb
fnstenv
xchg
or
jmp
sti
cmp
fisubl
rcrb
jle
add
add
das
out
pop
mov
sub
incb
jp
movsl
loopne
mov
out
out
fistpll
insl
sub
scas
sbb
mov
jbe
fwait
mov
dec
jl
add
mov
add
pop
std
shlb
int3
pop
nop
mov
xor
mov
aaa
inc
jge
jns
lahf
dec
test
mov
mov
mov
mov
gs
int
lock
inc
push
rcrl
mov
xchg
scas
mov
cmp
sbb
enter
xorb
nop
lods
sbb
inc
adc
mov
push
fcompl
aaa
in
cmc
data16
sahf
ret
cmp
sbb
std
stos
pop
lods
negb
xor
xchg
dec
pushf
in
or
out
add
or
mov
je
jmp
imul
out
inc
add
fdivrl
lcall
inc
data16
in
jnp
fwait
mov
mov
cmpsb
in
cmpsb
imul
sbb
push
adc
lcall
stos
repnz
or
lea
mov
dec
mov
cmp
dec
lods
and
decl
push
cmp
stos
fwait
test
loop
push
xlat
nop
imul
xchg
mov
daa
jmp
xor
in
test
mov
sbb
dec
iret
inc
in
pop
cltd
lcall
jge
dec
movl
mov
data16
ret
in
lods
mov
dec
test
push
mov
cs
add
mov
das
jp
adc
rolb
adcl
xchg
loope
mov
int3
jp
sub
mov
pop
movsl
notl
pop
lds
mulb
jae
aaa
pushf
mov
sbb
clc
repnz
adc
popf
adc
mov
jne
adc
fucomi
test
sbb
jbe,pn
leave
jae
ljmp
sub
xchg
sbb
outsl
mov
push
xchg
aas
aam
mov
loopne
subl
fwait
lret
lret
mov
inc
stc
insb
fwait
jnp
icebp
dec
cmp
mov
jno
ret
mov
gs
es
filds
shrb
or
clc
test
xchg
test
ss
cmp
mov
cwtl
nop
sbb
aas
insl
lcall
imul
xchg
mov
mov
add
and
sbb
sub
out
push
addr16
mov
arpl
out
dec
popa
cmpsl
insb
sub
add
outsb
iret
sub
arpl
std
ljmp
je
rcrb
add
sbb
mov
loope
mov
mov
push
cmpsl
arpl
lock
rorl
shll
in
jns
js
dec
pop
mov
rcll
loop
and
mov
lods
sub
lods
test
fcmovnbe
jl
cmp
push
jo
repnz
or
pop
frstor
xchg
bound
mov
pop
stc
adc
int3
sbb
into
cmpsb
jnp
pop
sub
mov
pop
add
mov
ljmp
test
lock
stos
inc
mov
jecxz
testl
stos
aas
cwtl
cmp
dec
bnd
mov
bound
pop
int3
cmpsl
mov
or
sbb
and
mov
xchg
pop
push
xchg
push
aad
test
call
addl
call
aam
push
inc
in
dec
sub
roll
js
mov
sbb
or
adc
pop
test
jecxz
pcmpeqd
das
aas
testl
cwtl
sbb
mov
repnz
cmp
sbb
mov
loop
sub
sub
out
sub
clc
hlt
fwait
jecxz
mov
out
mov
mov
loop
push
sbb
sarl
or
pop
and
jb
xchg
stos
adc
jae
xorb
cwtl
inc
test
insl
pushf
es
xchg
or
stc
cmpsl
sub
arpl
add
dec
xor
out
pushf
int
cmc
lods
jecxz
push
pop
and
dec
popf
mov
adc
fs
mov
leave
shrd
test
hlt
push
push
notb
jge
fiaddl
or
incb
dec
movsl
cmc
jnp
push
pushf
insb
ljmp
je
adc
push
pop
pop
push
andb
add
fisubl
cmp
push
iret
fdivrs
cltd
and
sub
sarl
cmpsl
mov
in
imul
cmc
mov
inc
push
dec
outsl
dec
xchg
in
add
adc
pop
mov
sub
xchg
push
cld
popf
cmp
lods
sbb
xor
sbb
adc
inc
and
into
aas
inc
inc
and
call
shr
gs
lcall
jns
inc
mov
mov
or
fiadds
xchg
sahf
daa
xchg
int
push
lods
cli
test
ret
movsb
inc
and
jb
push
cld
push
dec
push
pop
jnp
loope
sbbl
test
push
and
pop
mov
add
dec
sub
iretw
cmp
in
out
pusha
lock
test
pop
mov
dec
mov
xchg
inc
pop
rol
shrl
sbb
in
push
jge
jle
push
push
add
lahf
dec
inc
lea
fdivl
lods
cmp
sub
imul
iret
jecxz
xchg
fbld
cmp
in
push
push
xor
dec
sub
push
jb
inc
sbb
mov
adc
out
inc
mov
lock
mov
dec
jp
add
insl
sub
aad
inc
pop
push
clc
fnstsw
repnz
mov
inc
jg
add
mov
jmp
pop
ljmp
xlat
aad
test
imul
mov
xor
shrb
cwtl
dec
and
scas
sbb
mov
mov
sbbl
jo
loope
test
push
ljmp
shrl
ret
pushw
push
mov
fists
pushf
sbb
sub
mov
mov
and
scas
addr16
cmc
mov
xchg
shlb
mov
push
popa
and
clc
mov
cmp
dec
movsl
das
movsb
mov
fstl
mov
pop
xor
rcrl
aad
mull
stc
cmp
hlt
aaa
cmp
lcall
imul
add
in
mov
dec
adc
outsl
fisttps
cmp
lahf
and
in
repnz
scas
mov
or
pop
push
das
jle
std
insb
sub
into
lods
inc
mov
lret
sub
push
andb
enter
mov
outsb
cmc
mov
stos
lods
xchg
add
xchg
adc
inc
ficompl
jge
inc
pop
scas
out
jae
add
shlb
pop
imul
lret
and
and
inc
in
mov
sahf
stos
xchg
inc
lret
in
push
loopne
cli
dec
xor
cmp
ret
iret
cmc
push
adc
repnz
mov
in
pop
xor
insb
into
add
lds
in
repnz
xchg
pop
xor
and
into
addl
and
data16
pop
je
pop
cs
js
pusha
xchg
mov
in
jecxz
push
dec
push
jne
sbb
fwait
sbb
mov
xor
mov
and
and
out
insl
aaa
movsl
movsl
jle
push
add
fisttpl
loope
jae
push
xchg
and
fwait
xlat
in
jle
pop
insb
or
mov
jbe
adc
add
sub
mov
ljmp
xor
gs
xor
jecxz
aam
jns
mov
bound
movsb
xchg
into
int
push
lock
lea
cmp
cmp
and
arpl
jnp
push
pop
in
dec
mov
or
inc
js
mov
mov
mov
test
jae
in
ljmp
enterw
pop
cmp
popa
jle
fnstsw
or
cli
jne
mov
daa
lret
arpl
mov
dec
lret
pushf
mov
fistps
push
shlb
repnz
and
xchg
popf
fbld
mov
mov
out
sarb
hlt
sahf
pop
push
adc
or
iret
imul
xchg
add
pushf
mov
iret
cmp
int
shl
cltd
cwtl
es
rorb
out
mov
arpl
lods
rolb
xor
cmpsb
lcall
lret
jns
sbb
mov
mov
jbe
outsl
dec
in
add
cmp
jle
mov
ljmp
scas
sahf
sti
push
sub
inc
push
cmc
jb
add
jg
and
aam
cmpsb
hlt
mov
stc
sub
xor
push
push
lods
xchg
jne
mov
jb
cmp
divl
stos
pop
mov
insb
mov
mov
lock
sarb
ss
movsl
mov
pop
stc
push
xchg
aaa
cmp
scas
push
out
rorb
popf
jnp
or
bound
adc
lcall
pop
xchg
jl
aad
into
data16
aad
pop
inc
cltd
mov
pop
sub
xchg
pop
xchg
sahf
mov
add
loop
and
loopne
push
mov
jne
enter
div
dec
rcrb
loopne
inc
iret
jae
xchg
xor
dec
adc
imul
mov
cwtl
sar
repz
aas
test
outsl
and
push
dec
pusha
push
mov
and
loop
sbb
xor
mov
popf
imul
xchg
loopne
jo
popf
xchg
push
mov
adc
dec
outsb
pop
mov
and
push
add
push
ss
sbbb
repnz
push
jge
call
jle
cmp
mov
js
or
dec
xlat
stc
incl
lahf
jo
mov
inc
test
jmp
gs
sbbl
push
xchg
mov
inc
adcb
push
out
lret
ret
add
jp
hlt
cmpsl
scas
jae
push
mov
adc
jb
sub
lret
incl
ret
popa
inc
add
push
loop
xchg
xchg
iret
movsb
cmp
add
push
icebp
mov
ret
dec
cmp
sub
pop
dec
test
js
jle
jb
pop
ret
aad
out
or
jg
push
notb
movnti
lahf
push
push
pop
xor
jecxz
mov
cmp
dec
faddl
rcll
jns
cmpsb
xchg
clc
std
jl
sbb
sub
push
adc
adc
mov
fstpt
sbb
mov
jecxz
out
stos
push
dec
fistpll
inc
mov
jg
push
loop
sbb
and
data16
cld
xor
mul
pusha
xchg
add
jae
loope
arpl
dec
add
rolb
mov
dec
gs
xchg
pop
scas
js
inc
pop
mov
ss
test
xor
jb
repz
pop
push
cwtl
jp
add
mov
or
test
aaa
sbb
mov
mov
push
dec
mov
push
shll
jbe
mov
mov
ljmp
inc
cmpsl
repz
adc
lock
cmp
xchg
jle
rorb
xor
xor
xchg
pop
fsub
repz
mov
scas
andl
ret
call
inc
mov
outsl
lea
lahf
js
popf
test
sbb
mov
repz
ljmp
add
bound
roll
jns
iret
lret
cs
pop
push
xchg
push
repz
cmpsb
in
movsl
imul
dec
push
cmpsl
jge
jb
mov
loopne
arpl
insb
fdivl
iret
cmp
lea
subl
mov
mov
add
dec
cmp
and
mov
in
stos
lock
pop
inc
ffreep
pop
test
lret
cmpsl
in
out
adc
add
test
popa
sbb
cltd
inc
mov
xchg
fstl
mov
in
outsb
dec
imul
repz
mov
add
jl
add
scas
testl
xor
and
popa
push
rorl
jae
inc
push
popa
out
sarb
or
push
add
stos
push
xor
shlb
imul
xchg
mulb
jo
fiadds
sahf
iret
sbb
xchg
and
sub
jge
mov
movsl
cwtl
fsubs
mov
mov
adc
xor
imul
std
mov
shll
mov
jmp
push
and
cmp
inc
xchg
sbb
add
out
xor
pop
xchg
jo
xlat
sahf
jne
adc
mov
push
mov
popf
sub
icebp
movsl
cmpsb
popa
mov
les
shl
repz
loop
adc
or
push
add
mov
in
inc
push
scas
xchg
xchg
xor
push
adc
and
mov
nop
mov
in
popf
add
xor
fdiv
lea
lcall
xchg
mov
jo
aam
push
dec
dec
ja
bound
roll
lods
pop
rol
pop
xor
mov
inc
repz
aad
rorb
xchg
es
xchg
repz
push
int
insl
cmpsl
adc
test
jmp
cmpsb
inc
das
iret
cmc
lods
mov
push
mov
movsl
sub
mov
stos
cmp
add
loop
je
or
push
mov
je
sti
adcl
arpl
popa
test
mov
mov
icebp
outsb
das
in
push
out
and
test
inc
lret
fwait
aaa
and
inc
inc
or
pusha
xchg
cmpsb
inc
stc
fdivr
cs
leave
xor
sub
jo
xor
pop
push
hlt
mov
lods
jo
pop
and
dec
cltd
mov
mov
rcll
pop
cmpsb
inc
lods
mov
sub
test
adc
xchg
dec
adc
popa
xorl
je
iret
pop
pushf
rol
out
out
dec
push
mov
scas
insb
and
out
outsb
lock
inc
shl
add
and
in
push
add
dec
cwtl
xor
mov
lea
push
ljmp
push
inc
shl
push
xchg
ret
lret
jne
jp
add
sahf
addr16
fisttpll
xor
mov
mov
pop
lods
sahf
pop
mov
ja
outsb
jl
pop
xor
outsb
pop
xor
lea
mov
imul
mov
imul
mov
cmp
or
mov
ret
inc
xor
inc
mov
or
jae
test
loopne
sbb
adc
stc
adc
in
bound
fs
adc
cltd
popa
aad
orl
pop
pop
repz
add
int
and
pop
clc
adc
and
cmp
xlat
aam
sbb
in
cmpsb
outsl
push
out
mov
cwtl
mov
roll
push
jae
xorl
cmp
mov
jae
push
fdivrl
lock
or
xchg
cmpsl
and
xor
xor
jle
xorl
mov
pop
inc
jne
push
and
popf
pop
pop
mov
ret
fwait
cli
pavgw
sub
xchg
mov
rorb
add
negb
sahf
cmp
stc
loopne
jne
inc
ds
jns
sbb
ret
inc
add
push
mov
adc
cmp
sub
lea
sbb
rorl
mov
push
adc
clc
adc
mov
outsb
cli
adc
or
adc
rcrl
rorl
xchg
hlt
fisubrs
cmp
add
mov
sbb
pop
mov
or
xor
outsb
loop
fisttpl
ds
add
lock
jb
and
mov
xor
mov
dec
repz
popf
push
add
adc
mov
movsl
mov
cmp
loop
mov
hlt
rcll
test
jle
xor
int
or
sub
idivb
mov
xchg
sarb
shrl
adc
enter
dec
xchg
jnp
das
adc
fdivs
lahf
dec
add
and
mov
mov
adc
dec
xor
cmp
call
sahf
leave
cmc
aaa
fdivrs
test
jbe
adc
test
push
push
mov
insb
pusha
mov
nop
fsubrl
jmp
add
int3
push
pop
xchg
pop
adc
les
sub
add
jp
xchg
addb
jmp
iret
add
adc
scas
arpl
jecxz
inc
fsubr
pop
push
fimuls
ret
inc
add
cmpsb
stos
movsl
adcb
cmc
int
sbb
test
sub
dec
xchg
out
or
jo
mov
push
ljmp
mov
xchg
push
mov
jnp
push
pop
jecxz
pusha
call
insb
mov
dec
out
jno
inc
xchg
sub
repz
test
dec
ficoml
sar
imul
mov
cs
sti
insb
or
out
adc
ja
mov
sahf
imul
sbb
ds
and
ret
xchg
loopne
jmp
xorb
ret
mov
mov
and
push
fadd
cmpsl
insb
pop
test
or
test
mov
movsl
fldl2e
push
hlt
cmpsb
rorb
xchg
and
icebp
xchg
push
mov
and
cmp
stc
jo
jmp
fisubrs
or
lahf
jg
mov
sub
adc
je
inc
inc
mov
cmp
test
test
adc
sar
sbb
shr
lret
divl
dec
rcrb
mov
inc
imul
sbb
lcall
xlat
iret
dec
jno
lods
sahf
cmpsb
jecxz
sub
in
xchg
sahf
outsb
lcall
jne
and
or
mov
and
insl
ds
cmp
repnz
leave
mov
mov
jnp
addb
roll
mov
fnstsw
xor
sbb
xchg
popf
sbb
jno
aas
arpl
div
hlt
jmp
xchg
les
add
jl
push
cs
loopnew
jge
sarl
das
ja
sub
cmp
mov
jae,pn
arpl
pop
lahf
push
cltd
cltd
popf
mov
das
or
jmp
lret
loop
out
test
je
fbld
repnz
ror
adc
jae
hlt
adc
lea
mov
movsl
add
hlt
lret
mov
sbb
test
or
cltd
in
in
adc
xchg
dec
jnp
adc
imul
cltd
lahf
cmp
inc
out
pop
fidivrs
insb
rorl
inc
cltd
jne
and
cmp
pop
xor
imul
loopne
mov
lea
or
mov
lea
rcrl
mov
push
pop
inc
ret
test
es
sti
jae
add
mov
rcll
pop
xchg
adc
stos
mov
mov
xchg
ret
shll
out
cmpsl
hlt
sbb
icebp
subl
sub
fst
test
xchg
xor
lods
push
in
addb
jge
cmc
lea
mov
pop
inc
out
inc
push
xor
ds
into
add
scas
and
inc
in
mov
mov
mov
ret
lcall
fs
add
fwait
dec
inc
into
subl
inc
fsts
lret
pop
lods
mov
add
jae,pn
push
ret
cmpsb
leave
pop
stos
mov
testl
mov
shrb
jne
cmpsb
pop
outsb
cmp
call
xchg
test
and
mov
sub
popf
cmp
or
out
mov
inc
sbb
lods
negb
xor
addr16
ret
jle
pushf
aaa
lods
cwtl
cmp
jg
jmp
dec
daa
add
adc
sbb
inc
dec
jge
fwait
jbe
dec
fdivrl
movzbl
push
in
loopne
je
adc
cmc
push
into
out
sbb
inc
pop
adcl
andb
addr16
mov
mov
stos
add
mov
xlat
adc
mov
push
ss
aad
mov
addr16
pop
fstpl
movsb
and
inc
sarl
mov
sahf
jge
jne
pop
hlt
mov
cmpsb
pop
and
adc
cmp
aad
jecxz
xor
cltd
ljmp
popa
xchg
loope
sahf
jb
xor
or
add
shl
jnp
fisttpll
fiaddl
xchg
mov
jne
pusha
jne
fdivrs
dec
xchg
movl
dec
inc
sbb
dec
jnp
push
pop
xchg
scas
stc
xor
mov
insl
mov
ss
ret
orb
xchg
push
mov
leave
int3
xchg
orb
lahf
loopne
daa
jne
les
fcomps
mov
mov
lcall
test
lock
inc
fdiv
std
lret
rcll
sbb
mov
add
pop
jl
cmp
pop
push
fdivp
xlat
ficoms
std
rorl
mov
or
xchg
call
js
nop
push
out
xchg
and
sbb
lock
mov
jnp
scas
inc
faddl
cmp
stc
dec
add
add
mov
into
sub
stos
icebp
add
sbb
es
xor
imul
xchg
xor
jge
clc
addr16
sahf
add
insb
adc
pop
xor
dec
mov
in
sbb
xchg
dec
jp
inc
outsl
lcall
es
cmpsb
ja
je
roll
scas
dec
dec
add
scas
sarb
lcall
in
push
insl
test
push
cmovl
iret
sbb
and
icebp
adc
movsb
fimull
mov
cmp
push
addb
mov
stos
icebp
xchg
popa
jns
push
movsb
leave
ret
int
in
out
xchg
stos
push
cmpsl
ds
sub
lea
push
push
add
xor
stc
mov
and
or
imul
aam
out
adc
sub
inc
pop
xchg
pop
adc
loop
je
or
jl
sti
mov
cwtl
popf
adc
ja
cmp
adcb
daa
pop
xchg
sahf
aaa
jno
out
jmp
mov
sub
aaa
mov
mov
jb
cwtl
inc
sti
cmpsb
cmc
or
imul
and
mov
pop
pop
pop
xlat
jo
sub
jne
mov
xchg
test
or
rclb
xchg
mov
rorb
push
cld
mov
jge
push
push
pop
or
xchg
in
xlat
inc
sub
cmp
jecxz
aad
jb
andb
lea
and
shl
incb
adc
dec
repnz
xchg
xor
add
out
mov
les
aam
cli
sub
call
mov
pop
int
mov
or
je
sbb
inc
out
lea
lds
add
fisttpl
jae
dec
or
mov
rol
lods
stos
outsl
in
je
sub
xchg
or
daa
dec
ss
dec
or
lds
mov
xchg
push
inc
fst
lods
lods
gs
pop
sub
sbb
mov
addb
or
jg
aaa
aad
fsubrl
cmp
and
xchg
std
inc
ret
cltd
fwait
icebp
xchg
adc
push
lret
cld
ss
mov
out
sbb
int
sub
lcall
mov
outsb
cmc
lea
xor
xlat
rcrb
clc
mov
loop
mov
call
rcll
dec
mov
aam
lds
mov
xor
lock
push
mov
push
mov
xchg
sbb
jnp
adc
pop
push
sbb
jne
in
out
lret
call
fiadds
push
xchg
arpl
pusha
pop
jle
jae
xor
inc
imul
or
cs
shr
add
shll
push
or
push
lret
push
inc
xchg
and
xchg
adc
cli
mov
cmpsl
lret
testl
in
shlb
mov
push
loope
lret
xor
xchg
pop
data16
sbb
xchg
jb
mov
mov
sub
push
and
loop
mov
adc
imul
add
and
fsubrl
loop
icebp
cli
xrstor
icebp
pop
into
ss
daa
ss
fstl
lret
clc
out
pop
mov
dec
push
adc
aaa
mov
push
push
cmc
jno
cmp
aaa
jmp
fldt
sbb
jge
std
cmpsl
fs
add
test
aas
inc
xchg
lods
jg
jns
or
push
cmp
ss
xlat
mov
arpl
mov
push
push
push
loope
lods
adc
mov
outsl
cltd
adc
push
scas
int3
xchg
adc
cmp
sub
pop
inc
xchg
cwtl
ret
lods
cmp
fisubs
gs
and
frstor
out
and
sarb
mulb
sub
lret
es
dec
xor
mov
mov
dec
inc
dec
rcll
xor
fimull
jle
mov
ljmp
and
adc
jb
cwtl
iret
dec
mov
xchg
ret
or
cmc
das
jo
jp
push
mov
clc
outsl
fcmove
push
xor
add
negl
xor
lret
leave
push
mov
lock
movl
adc
subl
xor
sbb
jae
out
sub
scas
sbb
add
add
xchg
iret
cmc
xchg
push
aam
pop
fwait
loopne
ret
or
add
mov
add
test
test
rcl
cmpsl
jg
sub
or
jnp
push
ret
outsb
mov
mov
adc
mov
roll
cmp
sti
or
sub
jbe
add
in
push
call
repnz
les
adc
dec
cmpsl
loop
lds
fnstenv
retw
jl
shrb
fisttpl
or
cwtl
jnp
daa
adc
gs
fildll
fwait
test
sub
test
aam
jecxz
test
repnz
cmpb
xchg
push
dec
dec
dec
add
repnz
inc
bound
ret
mov
shl
xchg
mov
fisttpll
add
in
xor
cs
mov
dec
or
dec
cld
cmp
stos
xchg
mov
decb
mov
or
jns
test
out
test
stos
roll
sbb
dec
test
imul
add
fs
dec
icebp
adc
cmpsl
xchg
in
test
mov
xlat
jl
dec
mov
xchg
push
sbb
orb
push
or
sbb
mov
cli
cmp
aad
fsub
mov
cld
adc
je
jge
icebp
scas
cmpb
cmp
jmp
sub
scas
jg
jge
push
jecxz
roll
movb
les
loope
or
pop
cmp
out
das
cltd
les
add
pop
xor
test
scas
je
add
push
cmp
inc
sbb
cmp
xor
stc
pusha
jecxz
sbb
sub
lods
inc
lds
jmp
cli
call
xchg
adc
fstps
je
xor
adc
insb
push
jp
xchg
jnp
xlat
push
pop
fildl
adc
daa
jmp
xor
pop
into
iret
add
movsl
xchg
mov
pop
mov
dec
int
std
cmp
xchg
ret
pop
dec
add
lahf
movsl
stc
iret
jo
rcll
push
popf
out
jle
add
cmp
insb
push
cli
sarb
adc
mov
icebp
or
mull
lds
or
sarb
shll
sub
daa
pop
fbld
cmpsb
and
jp
dec
cmpsl
push
arpl
or
stos
cmpsl
adc
call
pop
lea
ss
push
out
cmp
jnp
mov
ret
insl
js
aam
cld
dec
cmp
out
mov
push
js
sub
ret
cmpsl
xchg
jmp
stos
add
js
sbb
ret
jo
jbe
fwait
mov
cmp
push
shr
imul
jb
add
cmp
fidivrs
je
js
out
rol
mov
jmp
int
lods
movsl
shlb
xor
ret
jne
sbbb
pop
adc
mov
shlb
lock
dec
mov
out
icebp
test
sbb
fsubrs
sti
push
xorl
cmp
adc
push
xchg
mov
pushf
xor
mov
xor
jae
inc
pop
aad
ret
mov
or
pushf
bswap
stc
add
das
ljmp
arpl
loope
mov
jecxz
int
loopne
and
leave
pop
lods
iret
adc
push
jns
outsl
or
cs
repz
mov
pop
ret
movl
enter
mov
stos
int3
bound
hlt
repz
adc
push
lds
aas
scas
fldl
lock
push
inc
lock
xchg
sarb
dec
cwtl
mov
in
pop
outsb
add
adc
pop
jmp
pop
jmp
hlt
in
and
ja
ljmp
cwtl
jo
ja
outsl
or
mov
scas
dec
pop
icebp
xchg
ja
mov
and
push
mov
jnp
bound
inc
inc
sarb
sbb
and
stos
ret
and
inc
sbb
ljmp
ret
fiaddl
and
repz
ja
adc
pop
test
sub
mov
fs
pop
dec
in
mov
adcb
push
mov
enter
and
push
test
mov
push
inc
andb
pop
lods
sahf
mov
pop
mov
ret
addr16
cmc
jl
push
sbb
inc
push
push
test
pop
push
sbb
in
sbb
js
jnp
xchg
mov
hlt
fwait
les
add
arpl
in
ljmp
loopne
inc
adc
aad
pop
cmp
into
cmp
sbb
mov
sub
movsl
rcll
punpckldq
jge
cmp
arpl
add
xor
stos
push
jmp
stc
dec
push
sub
mov
cmp
cltd
aam
mov
push
jle
das
mov
pop
xor
mov
out
fsubrs
test
pop
pop
mov
inc
dec
ljmp
pop
jg
loope
or
pop
int
jecxz
flds
push
lea
push
loope
dec
and
xchg
and
mov
fisttpl
push
inc
add
jmp
mov
adc
data16
aas
das
adc
cmpsl
mov
cltd
xlat
dec
lds
test
rcrl
ret
repz
sub
in
xchg
xchg
sub
ja
or
das
dec
fstl
push
popa
mov
push
data16
rclb
push
pop
adc
xchg
std
pusha
and
lods
dec
pushf
dec
dec
mov
jmp
pop
daa
std
mov
cwtl
cmp
or
divb
cmp
dec
mov
add
dec
ljmp
lahf
xor
cmp
add
jmp
out
aad
enter
adc
jmp
jmp
fildll
aas
mov
faddl
enter
jae
add
cmp
in
and
mov
mov
orb
std
xchg
movsl
jbe
lds
cwtl
push
das
dec
out
test
loopne
call
push
hlt
xor
adc
jnp
mov
out
sbb
mulb
push
jg
adcl
pop
lds
data16
mov
sub
nop
icebp
mov
sub
jle
lods
dec
popf
xchg
sub
jno
adc
repz
out
adc
mov
rclb
cltd
fdivr
inc
fbstp
adc
test
mov
das
loop
call
push
jp
jns
xchg
lcall
mov
lret
in
adc
push
jmp
jae
nop
lds
movsb
mov
stc
mov
add
fcompl
cmp
pusha
test
jge
mov
shll
push
and
repnz
and
jmp
inc
add
lcall
mov
mov
lods
push
jbe
lods
inc
jno
inc
push
push
dec
add
push
into
out
mov
popa
sbb
add
adc
data16
inc
push
add
popf
or
or
test
jmp
daa
test
popa
js
jno
enter
ret
jge
push
sbb
push
mov
mov
sub
pop
jp
jns
mov
bound
stos
inc
in
jmp
int
cmp
ret
outsb
imul
or
mov
mov
mov
add
pop
ficoml
cld
sti
insl
jb
or
mov
jp
mov
dec
rcll
gs
gs
ficoms
xchg
cmc
test
dec
push
dec
and
mov
es
insl
test
jae
popf
add
cmp
xor
pop
fdivs
test
leave
jnp
add
test
jmpw
push
rclw
cmpb
inc
mov
lods
pop
stos
cmp
and
sahf
es
scas
push
inc
adc
fs
pop
mov
jbe
inc
repnz
clc
shrb
push
pop
es
mov
inc
scas
lods
pop
or
lcall
stos
mov
mov
inc
clc
ja
jp
push
jno
sbb
fidivrs
es
adc
clc
mov
mov
add
and
hlt
rclb
mov
in
imul
jle
push
fwait
pop
cmp
fildll
dec
loop
cs
dec
fsts
insl
mov
xchg
sbb
in
mov
imul
out
push
dec
pop
dec
jno
cltd
pmaxub
icebp
dec
push
subl
pop
push
add
dec
sub
adc
sub
sub
pop
cmpsb
push
jbe
into
mov
cmp
inc
xor
mov
mov
addr16
int
notb
jnp
out
jo
adc
lods
mov
std
lcall
mov
push
fwait
ds
mov
loope
sbb
mov
mov
cltd
sbb
xchg
sub
fbld
mov
lahf
pop
adc
add
into
adc
insb
mov
fcoml
xchg
enter
mov
out
jb
out
daa
pop
add
pop
jg
enter
push
mov
inc
mov
xor
std
clc
inc
push
pop
and
inc
in
adc
int
mov
fbstp
aam
jbe
jbe
and
es
hlt
notl
arpl
stc
pop
pop
movsb
loope
push
add
in
movsb
and
pop
sbb
aaa
mov
adc
jecxz
and
and
pop
ret
jo
dec
enter
xor
hlt
xchg
ljmp
add
scas
adc
jg
into
jne
push
or
nop
mov
loope
mov
aaa
lret
imul
push
dec
insb
test
ds
sti
nop
mov
inc
inc
fwait
lock
lods
jl
insl
insb
xor
rorl
pop
sbb
rcr
pop
xchg
pop
inc
subb
ret
push
mov
sub
inc
pop
stos
xchg
out
shlb
roll
nop
inc
xor
inc
fsts
mov
jmp
push
notl
enter
dec
add
dec
lcall
loope
ret
fistl
out
xor
cwtl
mov
es
mov
jp
cmp
jg
loopne
in
fildl
pop
inc
repz
xor
add
lock
loopne
in
jmp
adc
pusha
push
jecxz
enter
js
loop
jmp
sub
ret
jae
popf
and
lret
sbb
out
out
mov
cmp
addb
add
lret
out
mov
mov
pop
js
jecxz
push
push
leave
inc
pop
mov
sbb
in
push
xor
call
aam
out
leave
adc
fidivrs
mov
cmp
aad
fldl
in
xchg
movsl
stos
hlt
or
repnz
xchg
sbb
and
inc
insb
mov
pop
xchg
cld
test
add
adc
inc
mov
fmull
jp
and
aam
mul
pop
sbb
pop
movsb
pop
insl
subl
shll
xchg
aas
sbb
enter
inc
cli
mov
push
bound
roll
imul
push
call
cld
sti
or
fldt
push
es
inc
outsl
ret
imul
fiadds
cmp
mov
jl
shlb
cmp
mov
ljmp
inc
push
daa
pushf
mov
pop
repnz
imull
dec
pop
test
int3
xchg
xor
jle
cmp
pop
dec
rolb
mov
mov
jae
mov
imul
fldt
pop
or
test
add
or
aam
hlt
pop
leave
fs
cmp
adc
mov
mov
subb
sbb
dec
insb
clc
jb
cmpsl
shr
das
addb
cmp
mov
cmp
add
mov
aas
mov
jmp
inc
and
repnz
in
pop
fldcw
adcb
aad
xlat
insl
xchg
xchg
mov
or
or
add
aaa
imul
mov
ja
push
adc
jecxz
hlt
ret
mov
aam
sub
ret
frstor
cmp
sahf
mov
jecxz
imul
jmp
jmp
daa
dec
rcl
mov
pop
lods
adc
out
mov
dec
jne
rcrb
sahf
inc
or
cmpsb
jns
int3
add
loope
pop
subl
jg,pn
push
mov
push
cmp
adc
sbb
pusha
inc
xchg
fildl
xchg
js
add
stc
lret
pushl
cmp
das
jnp
push
in
mov
mov
data16
scas
and
stos
aad
pop
testl
nop
sub
cld
mov
rcrb
lcall
dec
aas
sbb
mov
cli
jno
pop
ret
xchg
cs
xchg
push
jmp
sub
int3
popa
inc
dec
fbld
push
xchg
cmp
pop
sahf
dec
popf
fucomip
or
in
cs
cltd
xchg
imul
jle
cmp
testb
je
jle
sbb
sub
repz
cmp
loopne
ss
lods
test
and
repz
aad
lahf
das
cmp
push
sub
fidivrl
inc
xchg
icebp
cmp
jno
cmp
shlb
adc
jo
fs
xchg
pop
lret
sbb
adc
xchg
fcompl
jmp
inc
lods
mov
aad
imull
xor
repz
out
arpl
rolb
xchg
sub
lret
add
xchg
mov
sbb
cmp
hlt
pop
les
push
fbstp
cmp
xorb
out
inc
pop
mov
jae
xchg
or
xor
or
dec
dec
in
das
in
mov
xor
pop
adc
lds
mov
neg
lcall
sub
xchg
sub
sub
jle
mov
dec
xchg
xor
pusha
jge
dec
pop
dec
jne
xor
mov
lds
lret
psrad
push
fs
xchg
jb
ffreep
cltd
xchg
jbe
into
clts
push
dec
shll
mull
push
andl
out
test
and
sbb
leave
clc
negb
mov
fbld
pop
fwait
xchg
out
cmc
mov
mov
xor
pop
movsl
insl
inc
fdivs
and
dec
aad
daa
pop
test
int3
xor
jns
div
lret
into
cmpsl
call
lret
dec
inc
lahf
lcall
mov
sti
pop
sahf
and
fcmovbe
cmp
jg
fmull
fdecstp
cmp
mov
clc
add
clc
cmpsl
popa
stos
dec
negb
push
cwtl
mov
mov
mov
mov
into
jne
movsb
sub
sub
xchg
bound
std
xchg
or
test
jl
sub
jne
rcrl
fisubrl
stos
inc
mul
xor
subl
cmpsl
push
xor
pusha
inc
arpl
push
insb
cmp
divb
push
faddl
icebp
push
or
mov
mov
pop
mov
jo
cltd
adcl
xor
inc
cs
mov
jne
fs
ret
adc
xchg
sub
ret
xchg
pop
or
mov
push
jl
xor
insl
outsl
jle
inc
jae
jp
xchg
jo
pop
lods
xchg
je
scas
adc
lcall
or
stc
adc
gs
cltd
negl
mov
add
sbb
fmul
xchg
jb
pop
in
aam
lahf
pop
sub
shrl
push
repz
fnstsw
jae
loopne
inc
stc
adc
les
xchg
or
push
les
push
and
xor
mov
nop
cmc
mov
dec
dec
inc
adc
test
lahf
stc
jl
dec
push
out
xor
push
mov
mov
push
dec
cs
jno
js
inc
out
lret
or
ret
push
mov
les
xchg
lea
sti
into
or
inc
dec
int
cmp
cmp
out
jmp
cld
sbb
sbb
or
xor
and
mov
jl
jmp
stos
mov
dec
in
xor
xchg
shl
mov
stos
jb
out
jl
jmp
test
lods
or
les
dec
add
daa
mov
sub
jae
dec
push
js
mov
dec
in
jno
cmp
mov
mov
ljmp
stc
call
sub
nop
cli
xchg
call
sbb
inc
icebp
dec
jle
or
xchg
mov
cmpsb
mov
shrb
inc
cmc
add
call
jle
pusha
xchg
xchg
imul
dec
adcb
xchg
mov
mov
pop
xor
mov
sub
es
mov
stc
xor
aam
adcl
psubd
int3
mov
loop
lcall
in
testb
cld
push
data16
push
movsl
adc
xor
cmp
jmp
mov
imul
push
or
pop
mov
inc
getsec
xlat
adc
sbb
and
push
adc
inc
and
sti
test
inc
jnp
sub
adc
push
mov
add
lret
cmp
out
cltd
pop
jl
in
cmp
scas
int
jl
lea
xor
xchg
lahf
mov
cmpsl
dec
or
out
rolb
inc
call
mov
testl
or
pop
push
int3
fisubl
mov
xchg
imul
mov
push
pop
sub
ja
mov
in
arpl
adc
aas
pop
push
or
cwtl
push
jle
pop
lock
lds
mov
loop
pop
shrb
and
adc
inc
add
push
ja
add
mov
dec
xor
ja
insl
inc
jp
xor
pop
movsb
inc
fsub
lea
adc
hlt
pop
lcall
ret
pop
or
inc
ja
push
sbb
xor
loopne
sbb
add
mov
clc
sbb
subb
push
dec
jae
inc
js
add
xchg
aas
out
jne
cmp
sub
cmp
jl
and
add
jne
lds
cmp
push
pop
test
leave
data16
and
cmc
hlt
sbb
push
add
mov
test
sbb
aaa
out
scas
lret
xchg
xchg
addb
jne
mov
inc
cmpsl
aam
arpl
jmp
mov
arpl
xor
pop
je
mov
lahf
jns
mov
cmovle
xchg
cmp
out
push
ja
adc
jp
cs
aam
push
push
rorb
fsubrs
mov
int3
imulb
mov
stos
cmpsl
sbb
movsb
fistpl
push
push
adc
and
dec
adc
outsl
lods
daa
movsb
mov
stc
dec
push
shlb
dec
jnp
gs
clc
mov
adc
gs
and
mov
cmp
std
or
hlt
adc
mov
stc
push
negl
lahf
cwtl
ja
mov
icebp
je
loope
stc
addr16
sub
add
jp
movsb
dec
xlat
movsl
fcoms
cwtl
scas
xlat
mov
fwait
push
popf
inc
sbbl
cli
inc
mov
sub
xor
dec
ljmp
ret
mov
jae
fistps
cmc
rcrb
das
in
lea
push
xor
or
or
insl
out
ss
pop
mov
loopne
insb
pop
xor
sub
lret
sub
les
popa
in
cmp
sbb
leave
or
mov
jno
pop
pusha
loop
mov
fiaddl
adc
xlat
adc
pop
stos
ret
jg
pop
jecxz
lods
pop
cmc
mov
cs
mov
sbb
jbe
adc
loop
cmpsl
jne
push
pop
pop
jo
ret
data16
stos
gs
sti
xchg
xlat
aaa
dec
add
and
inc
outsl
lret
ret
jo
xor
lock
jl
mov
mov
aam
stc
jmp
push
das
movsl
into
cmc
dec
dec
es
ror
gs
cmpl
cltd
mov
sub
daa
sub
add
jmp
xchg
sbb
cli
and
insl
nop
pop
add
int
cli
push
clc
push
xchg
dec
mov
enter
icebp
or
xchg
loope
insl
push
dec
mov
leave
testb
ljmp
or
gs
jle
stos
data16
imul
mov
stc
insb
ljmp
ds
push
sub
pop
xchg
pop
inc
std
stc
jge
fistpll
sub
add
mov
cmp
std
xchg
push
xchg
mov
int
push
jp
pusha
mov
fwait
xor
inc
adc
mov
pop
scas
jmp
pop
hsubpd
xchg
or
xor
rorb
mov
repz
and
inc
lahf
imul
or
scas
xchg
add
xlat
dec
xor
or
int3
add
pop
notb
addb
mov
arpl
pop
and
jno
sbb
jne
repz
fnstenv
mov
aaa
gs
jg
pop
jge
inc
jnp
sbb
sub
ret
jnp
in
xor
lret
mov
fsubp
enter
sub
xor
mov
sbb
mov
ret
fmulp
sub
pop
cmp
cmpsl
aaa
sbb
cs
shrb
decb
dec
adc
jp
repnz
leave
xchg
stc
dec
lock
xor
out
sub
outsl
sub
mov
test
in
out
sub
subb
jg
add
popa
in
jbe
or
xor
js
xchg
inc
pop
sbb
inc
rcr
add
andb
insb
cwtl
fsub
cmp
push
pop
jae
xchg
push
mov
sti
xor
cmp
jno
cmp
adc
orb
sbb
shll
lcall
outsl
dec
stos
not
addr16
mov
arpl
sar
test
xchg
mov
mov
mov
out
add
jb
pop
xor
jge
aad
inc
mov
inc
cs
inc
jae
jb
les
or
xlat
popa
cwtl
movsb
dec
mov
push
and
and
mov
adc
icebp
cmpsl
xchg
push
pop
or
push
pop
add
fs
mov
sarl
les
fcmove
out
cmp
ret
in
in
xchg
push
jg
int
lahf
insl
es
inc
add
sub
jbe
adc
inc
push
loope
dec
pop
or
sub
pop
sub
cmp
sub
add
adc
mov
sbb
stc
mov
lds
rcrl
mov
dec
rorb
push
dec
stos
out
test
mov
mov
jnp
insl
in
negl
jnp
bswap
rep
or
inc
add
loop
test
dec
gs
mov
pushf
push
cs
jno
pushf
insl
mov
xchg
or
lock
and
hlt
aas
cmp
pop
fcmovne
mov
jae
push
out
je
dec
not
mov
mov
xchg
or
add
in
adc
subl
pop
pop
mov
out
data16
adc
push
pop
push
sub
call
fs
fwait
push
je
lcall
in
mov
lret
mov
dec
mov
mov
jb
fwait
int3
cmpl
xchg
loope
push
inc
es
xor
xor
dec
test
fsubs
or
popf
pop
or
fwait
popa
lods
psrlq
jne
jb
nop
mov
mov
jecxz
out
cld
cld
fiadds
scas
push
fisttpl
pop
int3
lcall
fdivrl
mov
loopne
push
jle
add
addr16
pop
fwait
pop
rcr
jg
jmp
jbe
xor
mov
loope
mov
mov
or
loop
sahf
pusha
adc
lahf
mov
cwtl
push
test
dec
ljmp
jg
iret
popf
jge
pop
mov
repz
mov
xor
mov
pop
in
rcrl
rcll
push
sti
add
out
cmpb
out
push
insb
dec
jp
nop
or
jmp
insl
push
sahf
inc
mov
imul
dec
call
and
xchg
mov
xlat
fnstenv
xorb
ret
cmp
notl
push
bt
fisttps
daa
cmp
call
insl
das
push
bound
test
add
aas
test
sub
cld
rorb
dec
fs
outsb
sbb
in
xchg
xor
stos
push
mov
nop
push
pop
sub
jge
pop
nop
stos
mov
lcall
test
jmp
popf
cmpsb
jae
outsl
dec
int
mov
dec
add
jo
repz
popf
mov
jp
xor
loope
xor
inc
cmpsb
mov
bound
leave
dec
xor
mov
test
ds
pop
mov
xor
mov
xchg
ja
cmpsl
xor
sbb
mov
mov
in
in
sbb
fs
pop
mov
mov
push
jb
ret
in
mov
pop
call
pushl
js
inc
lock
sbb
cmp
fcomps
mov
ljmp
sub
mov
sub
cmp
dec
test
arpl
dec
sahf
cli
jl
pop
mov
sub
sub
sub
decl
inc
imul
xchg
sbb
mov
push
mov
sub
jge
push
cli
jge,pn
jb
jp
sbb
jno
push
mov
inc
xchg
jg
inc
je
clc
pop
arpl
sbb
stc
and
sub
aad
xchg
pop
popa
les
mov
push
mov
sbb
sub
ljmp
repnz
cmp
push
ffreep
sbb
lret
push
cmpsl
push
aaa
mov
dec
pop
andb
mov
xchg
incl
repnz
xchg
daa
mull
push
aas
test
mov
sub
push
dec
std
mov
inc
sbb
sub
adc
pop
sbb
adc
jae
cmovae
incb
addr16
ljmp
fistpl
mov
pop
inc
bound
out
mov
xchg
cs
test
inc
add
cmp
cmpsl
cmp
outsl
cli
jecxz
dec
sub
movsb
sbb
leave
sbb
dec
jg
flds
arpl
push
test
test
or
imul
int
notl
xor
daa
lret
fsubrs
enter
ret
out
in
pop
stos
repz
cs
pop
outsl
mov
loopne
dec
nop
andb
jmp
popf
aaa
adc
dec
int3
push
and
or
rcr
mov
lcall
pop
imul
pop
insl
fnstenv
jecxz
or
loope
cmp
sbb
dec
leave
dec
inc
inc
dec
pusha
mov
mov
pop
mov
jge
adc
iret
cvtdq2ps
xor
sarb
mov
icebp
mov
cmpsl
mov
bound
xchg
decl
and
xchg
mov
pop
jae
jle
jg
fcomp
fldl
push
dec
dec
or
idivb
int3
sub
or
jnp
mov
cmp
scas
bound
mov
scas
xor
out
fcmove
outsl
daa
inc
dec
loopne
push
iret
test
adc
mov
jae
pop
lods
rolb
xor
jmp
dec
cs
mov
loopne
ds
mov
in
mov
je,pn
mov
maxps
inc
mov
lcall
pop
push
fmul
int
dec
pop
mov
dec
pop
and
xchg
out
aad
jae
inc
add
cs
and
daa
std
mov
jmp
sarl
xlat
or
sub
pop
mov
push
sub
lret
ret
sub
int3
scas
pop
fmul
adc
xchg
mov
lds
pop
fdivl
mov
sub
sbb
int3
ds
and
xchg
xor
mov
jge
jg
repnz
dec
leave
std
nop
dec
adc
adc
dec
mov
sbbb
incl
stos
or
icebp
mov
adc
or
imul
addb
movsl
add
cmp
fsubs
icebp
gs
in
jno
ss
jmp
jmp
push
pop
out
popa
loope
cmpsl
cmp
mov
jno
sub
js
cld
dec
sbbb
aad
dec
adc
aam
dec
cmp
pop
mov
adc
push
imul
outsl
ret
push
inc
cmp
jno
lods
push
cmc
mov
lahf
xchg
xchg
dec
sub
xchg
fs
shlb
repz
pop
push
add
test
jg
cmc
xor
cmp
outsl
sbb
jp
sub
mov
jl
hlt
sbb
test
lds
adc
cmp
mov
jnp
je
xor
sti
sbb
xchg
adc
push
je
and
add
add
cmp
das
lods
and
cmp
into
or
add
push
lods
or
ret
mov
shrb
lock
popf
fucom
add
jl
call
add
cmpsb
and
lea
cld
or
inc
notl
push
in
stos
mov
add
xor
out
ret
rcrb
pop
xor
xor
or
dec
push
jns
dec
lret
xor
mov
jo
jp
int
stos
jne
mov
cmp
fwait
or
repz
inc
cmp
cld
std
jno
arpl
mov
repnz
jno
lods
or
jmp
jmp
in
mov
mov
cli
lea
add
xchg
pop
sub
icebp
push
in
daa
adc
insl
mov
xchg
jno
mov
les
mov
xchg
jmp
out
gs
repnz
mov
mov
push
jl
sub
push
xchg
je
sbb
aaa
push
stc
daa
addr16
push
mov
gs
jno
lret
int
sbb
fdivrp
jge
dec
test
mov
insb
mov
push
lahf
outsb
test
dec
xchg
cli
popf
inc
shll
add
ret
icebp
pop
stos
shrl
pop
in
add
jns
jle
jmp
les
data16
xchg
femms
sub
int
scas
and
mov
jle
mov
dec
dec
xor
jle
hlt
push
icebp
sub
xchg
repz
pushl
cli
jae
repnz
and
sub
mov
jl
add
dec
push
repz
add
bound
push
ds
imull
iret
cmpsl
pushf
sti
xor
and
addr16
jb
lods
pop
mov
fs
adc
stos
loope
mov
lret
inc
add
inc
and
mov
movups
orl
mov
lods
cmp
std
das
sub
adc
repz
out
jns
mov
insb
in
sub
mov
and
cltd
push
lock
jp
xchg
jae
and
mov
ret
xchg
popf
jbe
lahf
out
inc
negb
push
cmc
fbstp
push
or
pushf
jno
or
sub
and
jnp
mov
mov
frstor
sub
pop
in
or
loopne
stos
sbb
daa
push
and
imul
lods
xchg
les
sahf
je
je
add
clc
ja
std
pop
push
xchg
add
idiv
std
mov
shll
pop
pop
mov
movsb
daa
sub
arpl
lcall
subb
sti
sbb
sub
mov
stos
scas
jmp
fs
loop
out
iret
add
cli
popa
loop
jecxz
adcl
movsb
loope
in
and
mov
rcr
xchg
inc
or
or
aad
aam
xlat
fcompl
fidivs
cmpsl
inc
cmp
jecxz
pop
xchg
clc
loope
fwait
lret
xchg
cmp
inc
mov
xchg
clc
int3
nop
xchg
cs
pushf
or
out
aam
mov
mov
jl
sub
repnz
lret
push
dec
sbb
dec
sbb
mov
mov
rclb
in
inc
loop
inc
and
cmp
mov
faddl
mov
inc
cmp
pusha
xchg
mov
ja
fbstp
ret
push
push
jle
mov
push
lahf
push
lret
or
xlat
sbb
or
int3
int3
cmc
insb
dec
les
out
cmp
loopne
add
repz
push
mov
in
inc
push
or
in
xorb
loope
fidivs
sahf
pop
dec
in
jle
out
adc
xlat
add
xchg
mov
popf
or
insb
sub
leave
in
test
mov
ljmp
adc
sbb
ja
enter
ret
stc
adc
sbb
inc
pusha
or
ret
push
dec
shll
xchg
adc
pop
xchg
fcompl
out
sbb
dec
pop
imul
xor
push
push
fstl
iret
jb
enter
into
xchg
pop
inc
cmp
xchg
inc
hlt
cmp
test
mov
mov
mov
xor
jbe
fdiv
lcall
repnz
sbb
mov
or
test
sbb
nop
aad
sub
popa
sub
pop
push
fiadds
dec
scas
dec
push
inc
jg
int
sub
ret
mov
sar
jmp
fwait
decb
mov
pop
cmpsb
mov
inc
or
mov
and
in
aad
push
mov
push
push
push
stos
add
addr16
pop
int3
not
int3
pop
dec
nop
shll
popf
dec
cs
inc
pop
cmp
xchg
pop
lcall
imul
out
mov
jge
inc
adc
or
scas
outsb
stos
js
das
cmp
mov
mov
xchg
pop
mov
roll
in
sbb
and
cmpsl
stos
xlat
push
lods
add
outsl
pop
mov
jnp
inc
rcll
and
std
sub
or
leave
out
xor
xchg
cmp
add
ds
es
ret
insb
push
lods
and
pop
shl
sub
test
ret
addb
cmp
jecxz
popf
and
mov
les
add
inc
push
inc
jge
and
jecxz
sti
mov
pop
sbb
mov
ret
push
mov
je
sub
push
jne
pop
or
cmp
testl
call
mov
cs
pop
jnp
pop
lcall
leave
test
cs
imul
sbb
and
inc
pusha
pop
jo
fmul
xor
add
mov
rcrl
or
jg
imul
repnz
imul
lods
push
enter
cmpsb
or
lods
das
ds
mov
out
loope
sub
out
inc
mov
inc
addl
inc
mov
xchg
pop
pop
fimuls
xchg
push
ljmp
cmp
add
cltd
add
adc
stos
sahf
cmp
and
bound
or
rolb
aad
sbb
dec
or
push
adc
xchg
cmc
sbb
call
mov
and
aam
dec
pop
jno
data16
leave
enter
scas
xchg
dec
sbb
xor
sub
test
pop
adc
stc
repnz
orb
dec
inc
and
lds
cld
sbb
jl
cmp
insb
fmuls
mov
jl
sbb
push
fs
ret
mov
sub
push
repnz
popf
xchg
adc
fdivl
je
popa
lret
adc
pop
xlat
es
call
dec
popa
adc
or
jmp
aaa
mov
pop
es
dec
in
imul
adc
js
mov
scas
xchg
popa
add
xor
pop
sub
cmp
lods
inc
mov
jle
cmove
cmp
stos
adc
jmp
sti
dec
adc
and
inc
addr16
jp
push
rcrb
lea
sub
es
mov
xlat
cmpsb
inc
add
scas
ret
enter
inc
leave
cmp
rol
adc
idiv
fidivrs
fnsave
rcl
je
es
push
dec
jo
ret
sbbb
mov
inc
fnsetpm(287
lods
lret
mov
pop
gs
cmp
jg
in
fs
pushf
mov
ljmp
loope
roll
loope
sahf
pop
iret
test
lock
mov
enter
mov
adc
movsl
or
mov
mov
adc
mov
fnstenv
sarb
inc
mov
jnp
xchg
in
cmpsl
mov
mov
push
sub
mov
fistl
pop
push
inc
and
xor
mov
pushf
movl
sub
das
pop
jno
dec
imul
jns
dec
cld
lahf
sbb
jns
cmp
add
mov
repz
mov
and
shl
adc
addr16
pop
pop
hlt
fldcw
sbb
mov
jle
insl
lcall
or
inc
addr16
xchg
bound
sbb
lock
ja
fcmovne
sbb
sub
lret
xor
mov
jg
add
cmp
xchg
addr16
adc
repz
mov
mov
mov
loopne
jg
mov
cs
les
adc
out
pop
loopne
jmp
cmp
cmp
nop
xchg
mov
jle
scas
adc
jge
sub
and
ljmp
add
sub
cmpsl
jmp
clc
xor
sbb
aas
popf
push
push
rorl
jp
cltd
les
loopne
lds
jg
outsb
andl
int
daa
stos
add
sbb
mov
or
aaa
mov
stc
outsb
dec
repz
sti
jle
nop
and
xchg
pop
adc
cld
std
ss
idivl
jge
sub
in
xchg
rorl
mov
mov
fucomp
icebp
xlat
scas
xchg
inc
pop
icebp
sbb
sbb
sub
inc
in
or
jne,pn
inc
add
icebp
das
je
fadds
adc
jle
xorps
sarl
lods
cli
xchg
xchg
push
into
mov
push
xlat
clc
in
ss
insl
mov
aad
pop
adc
mov
les
push
repnz
jg
popa
sub
pop
mov
test
cltd
jns
stos
mov
push
sbb
pop
xchg
dec
leave
faddl
in
cmp
int
xchg
aas
pop
sti
into
arpl
jl
xchg
xchg
or
inc
dec
ficompl
shll
cmp
add
addl
les
mov
add
popa
iret
push
sub
mov
fcmovnb
test
pop
or
movhps
mov
xchg
push
scas
xchg
imul
xchg
call
pusha
aas
repz
mov
nop
push
mov
dec
cmp
pop
xchg
mov
pushf
pop
xchg
jl
sbb
fisubrl
gs
stos
pop
test
sbb
lods
and
cltd
fbstp
sbb
arpl
jl
mov
pop
popl
inc
xchg
pop
cld
cld
mov
mov
and
inc
push
dec
test
mov
out
mov
xchg
pop
xor
dec
jae
jmp
xchg
mov
xchg
mov
shll
sahf
aam
pop
jbe
inc
testl
scas
mov
fisttpll
je
lods
push
mov
sbb
mov
test
enter
jg
adc
dec
addr16
mov
inc
xor
push
stos
dec
dec
push
mov
mov
jge
insb
nop
sub
cltd
inc
imul
nop
in
dec
xor
xchg
sti
sub
loop
dec
lcall
cmc
fstps
inc
and
dec
add
in
jle
pop
sti
fildll
popa
scas
stc
in
dec
fstps
fmuls
mov
or
popa
test
push
mov
mov
orb
shr
ljmp
test
cmc
inc
stos
nop
dec
and
or
ds
int3
aaa
sarl
jbe
pusha
lods
shl
add
pop
jae
mov
mov
push
adc
mov
int
test
aaa
ds
pushf
orl
or
add
adc
jmp
lods
add
test
cld
cwtl
std
inc
mov
loope
arpl
int
sub
in
and
xchg
test
push
xor
adc
pusha
mov
and
push
mov
cmc
mov
adcl
dec
push
dec
je
adc
movsb
jns
jl
mov
out
sub
test
aam
imul
push
mov
dec
pop
lock
ss
pop
dec
mov
jecxz
pop
dec
xor
inc
push
inc
adcb
and
sub
cmp
pop
push
inc
call
adc
jne
popf
mov
bswap
add
test
push
and
mov
xor
adc
sub
movsl
dec
addr16
cltd
adcb
mov
sbb
mov
mov
aad
nop
test
cld
cmp
adc
adc
in
adc
pop
lea
pop
jp
cmpsb
outsb
cmp
call
cmpb
fcoml
cmp
sbb
fdiv
add
stos
mov
jae
outsb
cmc
daa
xchg
push
repnz
clc
lret
mov
fcmove
cmp
int
es
push
xor
push
jbe
int
mov
and
ja
sbb
cmp
rcll
push
sub
push
clc
clc
mov
stos
insb
test
xor
popf
lds
lock
jl
aad
xor
insl
or
aam
or
add
jbe
pop
jo
loopne
lods
pop
fldenv
cmpsl
nop
popf
out
xor
bound
xchg
testl
mov
andl
outsb
or
mov
insl
push
inc
mov
jmp
popa
push
push
scas
pop
gs
push
push
shl
imul
fcmovu
and
mov
outsl
mov
cmp
pop
sbb
std
sub
lods
iret
jno
push
jmp
or
xor
and
xor
ret
stos
inc
mov
or
mov
sarb
inc
lods
push
imul
xchg
mov
imul
push
bound
or
xchg
sahf
sbb
mov
movsbl
imul
divl
enter
cmp
out
xor
sbbl
add
into
es
inc
pop
xor
jp
mov
jmp
insb
ds
pushf
in
fucomip
pop
lahf
cmp
add
loop
and
lea
inc
jl
loop
ret
xchg
pusha
mov
add
sub
inc
sbb
push
out
and
cmp
xchg
lret
stos
push
or
arpl
jg
add
gs
mov
repnz
sbb
jge
test
add
sti
jne
sbb
and
add
aas
int
hlt
dec
xchg
cmp
sbb
test
aas
push
jl
push
cmp
and
test
sbb
int
sbb
scas
push
cmp
xchg
push
jae
or
rclb
in
aaa
push
sub
inc
pushf
mov
xor
xchg
inc
rorb
pop
sub
mov
xor
mov
cld
sbb
or
xchg
or
fstpt
pop
cmp
data16
sbb
jle
lret
pusha
daa
xor
out
inc
add
enter
sahf
test
sbb
mov
nop
pop
sahf
mov
and
xchg
mov
dec
xlat
push
out
cmp
shrb
inc
lods
gs
pop
lcall
int
dec
ret
adc
int3
pop
inc
push
lea
shr
stos
jbe
jne
pop
outsb
popa
mov
jo
and
adcb
int3
xchg
out
and
mov
mov
loope
mov
and
and
int3
mov
push
das
jno
jbe
xchg
inc
pop
sbb
mov
xor
push
sub
mov
shll
xor
lret
push
in
jg
xchg
mov
clc
and
sti
ror
pop
or
adcb
fs
xor
loopne
mov
jl
mov
shlb
outsl
int3
jmp
cs
ret
push
mov
sbb
adc
mov
lock
dec
mulb
data16
or
shl
in
xor
shlb
leave
loop
sbb
mov
in
dec
arpl
outsb
jl
push
bound
bnd
jnp
data16
out
sbb
mov
sahf
stos
test
mov
xchg
and
fsubrs
sub
inc
int3
dec
test
inc
jp
and
fwait
mov
divl
cld
je
mov
add
xor
jae
nop
out
push
sbb
fcoml
push
fstpt
imul
data16
dec
cmpsb
lahf
mov
xchg
mov
cmp
sub
divb
pop
out
or
push
fiadds
xor
scas
out
jge
push
push
sti
push
lret
dec
pop
pop
movsl
cmc
popf
scas
addr16
sub
cmp
pop
fcmovb
cmp
shrl
fwait
pop
insl
in
push
in
out
jecxz
icebp
adc
lds
sub
mov
lcall
lods
lcall
sbb
repz
fstps
cmpsl
pop
jge
pop
push
into
lahf
adc
sbb
es
or
jle
push
mov
adc
fldenv
sbbl
mov
jp
jnp
dec
lock
mov
mov
push
sub
into
shrb
popl
mov
xor
jl
std
dec
aaa
mov
in
cmp
pop
mov
sbb
fnsave
rorb
inc
mov
sub
repz
jae
std
rorb
cmp
jg
push
xchg
imul
dec
fwait
divb
and
cs
xor
dec
xor
dec
mov
test
jge
enter
sets
out
mov
sbbb
add
cmp
lock
lea
push
jecxz
pop
dec
stc
out
insb
sbb
mov
fcmove
cmp
insb
xchg
cmp
in
mov
inc
cmc
xor
xchg
movsl
fstps
sti
leave
pusha
or
inc
rcrb
cmp
out
jbe
sarl
bound
xchg
xchg
or
cli
out
push
cmc
jle
jge
mov
sub
pushf
cmc
xor
test
sbb
xchg
lods
adc
ss
dec
xor
mov
mov
out
add
ret
std
dec
out
adc
add
ret
ss
out
inc
ljmp
rclb
push
xor
sbb
mov
hlt
test
inc
sbb
jp
popa
pop
xor
lock
test
mov
pop
sub
bnd
xchg
testl
mov
paddsb
xchg
iret
sub
jo
xchg
fs
xor
fists
mov
cmp
jne
cmp
pushf
cmp
repz
adc
jb
cwtl
xchg
inc
pop
inc
stos
push
xchg
inc
jnp
inc
repnz
aas
sub
stc
mov
adc
ret
jae
jb
mov
and
mov
inc
pop
cmp
cwtl
lock
xchg
inc
mov
loope
jg
or
jbe
lret
mov
lahf
xor
push
stos
add
adc
sarl
fnstenv
push
dec
dec
sbbl
mov
sbb
mov
mov
xchg
repz
lahf
and
lds
mov
lods
test
sub
aas
stos
ljmp
repnz
pop
or
insb
ret
sahf
add
dec
xchg
lods
jmp
outsl
mov
cmc
stos
dec
bound
scas
fwait
and
xchg
mov
dec
push
push
inc
inc
out
xor
push
in
xor
in
mov
les
cli
repnz
pop
iret
pop
scas
jmp
ret
cmp
imul
mov
cmp
mov
add
and
fidivl
ljmp
pushw
pop
lods
lret
jl
cmp
jae
mov
test
sub
outsb
scas
movsl
loopne
add
xchg
hlt
pop
es
lea
jno
lock
sarl
nop
sbb
out
push
movsb
jmp
sub
mov
imul
push
das
popf
mov
in
adc
inc
mov
dec
push
xlat
push
mov
sbb
pop
sub
shrb
mov
sbb
jmp
mov
in
add
or
aad
mov
pop
insl
or
xor
cmp
xchg
fwait
pop
sahf
lcall
cmp
aam
mov
push
and
ret
dec
in
jne
dec
mov
push
push
xor
cmp
jnp
inc
xor
aad
or
cli
pop
dec
mov
or
pop
jne
add
xchg
mov
shr
pushf
mov
fiadds
ret
lock
sbb
or
ret
add
jle
loop
in
inc
nop
or
mov
jb
cmp
cmpb
mov
or
popa
js
xor
decb
insl
leave
push
push
jp
dec
or
cmpsl
cmc
cmc
push
inc
dec
jne
sub
aam
test
scas
fisubs
imul
mov
adc
outsb
out
jg
sub
in
pop
lret
mov
dec
inc
xchg
jo
cmp
rclb
sbb
test
test
in
mov
pushf
inc
cmp
xchg
cwtl
lods
lock
cmp
lods
push
mov
jae
out
das
aas
js
movsl
add
or
jae
mov
add
cmpsl
add
mov
es
fdivr
filds
clc
ret
lods
dec
dec
jne
dec
jecxz
andb
cwtl
adc
xor
aas
fwait
cltd
fistps
cmp
out
in
iret
out
aas
cmp
mov
jecxz
add
push
aad
js
stos
sbb
push
cmp
add
mov
into
cli
jb
rcll
idivb
lods
mov
pushf
loop
int3
dec
je
pop
andl
sub
loope
aad
sub
mov
fldl
mov
out
negl
jo
outsb
push
test
fldcw
inc
repz
mov
cmc
xor
cwtl
and
addr16
jo
xchg
sbb
call
cmp
adc
stos
mov
jmp
mov
outsb
or
out
mov
aas
gs
clc
adc
xchg
xor
rorb
shlb
fisubrs
cmpl
sub
test
sub
inc
add
in
cltd
xor
sbb
out
loop
adc
std
pop
sbb
scas
xchg
add
sub
mov
cltd
mov
xor
icebp
js
cli
mov
out
pushf
dec
lret
mov
or
jno
dec
and
pop
ret
push
std
enter
xchg
push
rolb
fldcw
les
mov
cmp
leave
xor
aas
lds
int
mov
repz
rcll
ja
push
insb
sbb
cmp
cmp
jns
mov
bnd
inc
stos
into
je
pop
add
fwait
adc
sar
cwtl
int3
push
add
xchg
stos
mov
adc
mov
mov
pushf
mov
in
push
push
adc
xlat
xor
sbb
push
jg
repnz
rolb
push
insl
popa
jno
mov
in
mov
or
cwtl
jmp
insl
stc
ret
popa
jae
lcall
push
push
ja
mov
ja
out
sub
retw
jbe
out
sub
lods
and
adc
mov
mov
add
int
shll
int3
push
nop
test
cld
daa
out
js
sub
add
jge
lahf
dec
sbb
xchg
inc
adc
ftst
pop
sbb
jb
cmpsb
adc
cmc
jne
or
xchg
mov
pop
ret
mov
xlat
inc
in
jns
or
iret
pushf
pop
mov
sbb
lea
inc
rcrb
fs
test
jno
cmp
sbb
mov
js
popf
push
and
jg
mov
jo
rclb
jnp
xor
addr16
insb
mov
push
rcll
shr
bound
adc
in
testl
test
fmuls
in
imul
dec
and
or
pop
or
jg
cmpsb
imul
scas
mov
stc
mov
je
enter
xchg
pop
scas
push
adc
cwtl
adc
lods
jno
enter
push
adc
sbb
xchg
jmp
fnstcw
lret
mov
mov
pop
xchg
sub
cs
inc
or
fistpl
lods
mov
loopne
pop
push
stos
out
lret
xchg
and
fnstcw
aam
clc
fnstsw
test
or
imul
and
test
cmpsl
push
xchg
mov
arpl
jo
xor
leave
mov
loopne
mov
or
inc
stc
cmp
push
jbe
jg
xchg
cli
and
push
push
sar
leave
push
rcrb
imul
ret
out
mov
add
mov
cmpsw
roll
cmpsb
jecxz
push
xor
cmpsb
add
cmp
lods
xor
and
hlt
mov
sub
shll
or
cmp
add
or
cmp
movsl
sbb
hlt
popl
jmp
pop
or
aas
hlt
cld
je
testl
xor
xchg
loopne
mov
lcall
shlb
and
jae
pop
xor
push
stos
ljmp
jle
jl
int
out
dec
lds
cmp
push
xchg
pop
push
imul
nop
loope
xor
push
fwait
sub
push
out
sub
lret
iret
xchg
mov
shrl
lret
mov
and
jmp
sti
loope
push
lret
pop
imul
inc
jp
inc
lds
xlat
or
repz
mov
lsl
sub
lahf
xlat
loop
inc
push
sbbl
rclb
pushf
sarl
xor
div
aaa
popa
lds
add
cmpb
mov
aas
jp
jo
jmp
and
pop
mov
push
insb
ja
cmp
into
rsm
dec
icebp
push
xchg
inc
repz
ret
mov
dec
jecxz
inc
daa
gs
sub
in
pop
xor
mov
jg
push
jo
js
jns
and
cmp
popf
or
pusha
mov
jp
or
dec
sub
push
rcll
mov
test
data16
aam
movsl
sub
or
andb
in
lds
das
loopne
adc
repz
jge
mov
and
ret
dec
das
jmp
loope
dec
imul
nop
shrb
xor
ret
xor
lock
sub
outsb
cmp
jmp
push
inc
clc
icebp
mov
movsb
pop
lret
dec
leave
in
clc
mov
stos
out
xchg
testb
popa
in
sbb
int3
ss
dec
jb
mov
pusha
test
jae
mov
xchg
dec
fistpl
or
sbb
cmpsl
jge
adc
add
jp
ret
pop
mov
insl
push
push
pop
pop
inc
jnp
imull
mov
jge
hlt
dec
inc
mov
fwait
divb
xchg
pop
mov
jecxz
xor
fistl
pop
or
push
les
dec
aas
jbe
xchg
out
inc
imul
out
jb
pop
ljmp
pop
nop
dec
mov
mov
out
js
cwtl
inc
xchg
push
mov
pop
in
in
jle
test
push
mov
fists
sti
push
and
pop
xlat
xor
aas
mov
sub
clc
jno
repnz
inc
adc
sub
mov
hlt
loop
imul
dec
mov
lea
jo
jp
out
out
lcall
insb
lcall
jb
sahf
nop
add
push
cwtl
ret
fs
fisttps
xor
sub
inc
and
adc
add
or
sahf
das
cmp
mov
out
pop
das
stos
call
or
mov
mov
aad
jnp
mov
jns
popa
sub
jmp
xor
aam
in
popf
out
add
mov
xchg
mov
sub
lds
pop
jns
fisttpl
rclb
mov
rcr
add
das
dec
int
stc
pop
sti
mov
data16
cltd
mov
aam
sbb
mov
and
lret
fildll
push
scas
lret
out
cld
loop
cmp
jle
lcall
scas
jp
adc
pop
inc
in
ss
add
lret
hlt
lock
movups
add
lcall
cld
add
pop
xchg
ljmp
mov
cmp
mov
sub
stos
mov
mov
push
fadds
mov
aad
push
ret
dec
repz
pusha
push
iret
push
jnp
sahf
mov
push
or
std
bnd
repnz
xor
into
inc
cmp
mov
sub
cmp
out
push
xchg
out
sbb
mov
or
inc
cld
pop
xchg
fs
pop
push
lcall
sbb
roll
pop
adc
xorl
adc
bound
pop
scas
mov
and
lcall
xchg
sub
shlb
repz
xchg
fidivs
pushf
shl
insl
dec
push
mov
sbb
lods
jg
mov
jmp
mov
insb
pop
xor
lea
movsb
out
cld
icebp
sarb
sub
sub
pop
js
pop
push
inc
imul
or
push
dec
cmp
pop
iret
les
sbb
mov
inc
dec
mov
pop
xor
jne
sub
mov
mov
subb
inc
daa
jo
mov
xor
and
mov
nop
loopne
hlt
adc
lock
out
xor
insl
pusha
cmpsl
sbb
or
cmp
call
xchg
mov
inc
xchg
ss
aaa
in
push
popa
push
scas
xchg
jle
clc
les
push
addb
scas
or
fadds
jmp
int3
rol
fwait
ljmp
jno
jnp
ss
jne
mov
or
inc
pop
cmp
mov
pop
dec
inc
or
jp
xchg
jne
clc
testb
push
jle
stc
sbb
bound
mov
outsb
adcb
jl
fwait
rcr
mov
mov
push
jge
lret
push
mov
cmc
ret
out
xchg
cmp
mov
shrl
outsl
push
xor
pop
xchg
loop
inc
mov
pop
lds
inc
xchg
push
icebp
fcmovnb
sbb
ror
and
rcrb
sub
aad
imul
iret
push
js
pop
or
shlb
or
cmp
cmp
andb
jbe
pushf
sbb
mov
sbb
mov
lds
inc
adc
mov
pop
imul
xor
loopne
xchg
push
cmpsl
dec
push
fisttpll
xchg
mov
mov
ss
dec
adc
scas
sbb
shrb
call
mov
fsubl
jne
jnp
ds
jb,pn
push
pushf
cmp
and
out
sbb
ret
mov
loopne
and
jp
inc
dec
xor
fwait
cmp
shll
lahf
sub
fsts
cmp
add
sub
add
add
cmp
outsb
jmp
fnsave
sbb
lahf
nop
push
dec
dec
movsb
mov
lahf
in
leave
and
jo
adc
xchg
or
or
repz
jg
xchg
sarl
push
je
insl
aas
cmp
cmc
scas
cmpb
lret
popf
mov
xchg
inc
sbb
into
pop
fisubs
outsb
xchg
int
pop
aam
push
iret
sbb
xorl
add
iret
sbb
test
aam
mov
adc
adc
adc
sbb
fcmovne
js
lods
dec
inc
repnz
ret
mov
repz
sbb
pop
xchg
sub
or
dec
das
jge
imul
sbb
push
push
or
add
ret
inc
in
jg
sub
mov
xlat
bound
outsb
cmc
fnstsw
jecxz
inc
cmp
push
stos
nop
push
lds
jnp
in
fcoml
sub
mov
sub
add
jae
test
popf
lods
or
sub
aaa
adc
or
and
in
mov
mov
cmp
negl
xchg
shrb
outsl
fnstsw
test
sbb
jle
jae
mov
adc
insb
int
push
popf
mov
pop
sub
pop
xchg
jns
outsb
inc
rclb
mov
or
sub
popl
push
push
mov
ss
xchg
pushf
roll
aam
mov
cmc
and
filds
int3
add
mov
add
xchg
mov
sbb
sub
idivl
cs
lock
popl
addl
stos
pop
je
push
pop
incl
fcompl
icebp
push
push
sub
ljmp
inc
out
ja
jg
aas
outsl
sahf
sbbl
jmp
inc
out
in
nop
cmc
jns
sbbb
adc
xchg
sahf
xchg
push
xchg
sti
fmul
or
inc
push
mov
fstpt
xor
mov
jmp
and
ja
mov
out
es
ja
inc
es
mov
pushf
and
sub
dec
mov
ret
loopne
xchg
push
ret
lret
test
jbe
pop
enter
mov
lret
in
push
xchg
not
mov
notb
cmp
testb
mov
pop
cmp
or
push
test
hlt
aas
lahf
mov
inc
xor
and
mov
movsb
into
sub
mov
and
popf
aaa
mov
sbb
jb
mov
ss
fidivrs
daa
sub
xchg
sub
sbb
xor
mov
cli
fiaddl
popa
std
mov
das
fcoml
xchg
jmp
jl
inc
repnz
mov
rcrb
jae
mov
sub
imul
pusha
or
fwait
mov
adc
frndint
pop
lea
cmp
dec
adc
imul
push
mov
mov
popf
inc
stc
cmp
das
adc
subb
mov
dec
lea
mov
shll
call
push
out
pop
dec
inc
mov
sub
ficompl
insl
lret
sar
or
lret
mov
js
xchg
popa
mov
data16
mov
jae
pop
pop
mov
into
repz
lods
jo
ds
repnz
xlat
hlt
int3
in
adc
insl
insb
outsb
daa
add
incl
pop
test
mov
imulb
int3
lret
mov
imul
push
hlt
or
outsb
xchg
fisttpl
in
fs
xchg
push
mov
mov
mov
or
xchg
mov
ja
xor
or
jmp
push
push
dec
mov
lock
scas
xor
xchg
sbb
pop
push
ficompl
inc
mov
jp
imulb
in
bnd
cmp
scas
dec
push
ja
and
sub
jns
sub
and
movsl
leave
sbb
xor
mov
rcrl
fisubl
cmc
lahf
es
pop
test
mov
outsb
clc
out
xor
jns
out
addb
popa
sbb
arpl
fsubrs
loope
xchg
pop
jl
in
inc
pop
mov
inc
inc
xlat
mov
add
rcrl
mov
hlt
rorl
pop
lret
rcll
xor
icebp
push
ja
test
xchg
and
test
clc
test
mov
popf
cltd
pop
hlt
add
lret
sbb
dec
add
ljmp
add
fs
movl
cmp
pop
mov
inc
cwtl
mov
movb
jne
mov
sbb
scas
or
dec
add
aad
xchg
dec
popa
inc
mov
push
dec
scas
shrb
ja
jl
jb
mov
sub
into
cmp
adc
divl
xor
insb
cmp
cmp
and
add
xchg
sbb
cld
dec
pop
dec
jns
pushf
iret
shll
fwait
bound
jns
sbb
inc
inc
inc
shlb
mov
adc
push
decb
sahf
mov
xor
arpl
mov
sbb
xchg
das
jae
pop
pop
call
jmp
inc
mov
add
lock
add
jno
mov
nop
xor
pushf
adc
divl
adc
sbb
fs
stos
icebp
xchg
mov
aas
push
or
mov
jge
inc
jno
pusha
push
repz
jl
lret
aaa
gs
push
or
jg
shrl
sbb
outsb
ret
mov
xchg
jmp
jmp
mov
adc
fbld
sahf
mov
xchg
sbb
and
test
mov
ljmp
rorb
lds
pop
cmpsl
in
repz
push
js
lret
call
test
cmpsl
pushf
in
mov
push
rol
fsubrs
and
testb
insb
cmc
inc
mov
in
loopne
push
xor
icebp
hlt
and
or
inc
loope
jb
sub
push
lret
mov
jb
cmp
jmp
pop
jae
jns
shll
lds
popa
xlat
in
jb
xchg
sbb
or
or
mov
mov
divb
inc
arpl
xor
mov
mov
pop
and
mov
jb
lods
jns
pop
hlt
or
out
inc
pusha
sub
pop
inc
or
xor
and
cli
leave
lret
mov
xchg
xchg
test
es
mov
xor
pop
nop
jno
push
rorb
push
mov
xor
jmp
clc
test
sti
push
addr16
inc
inc
outsb
inc
rclb
cmp
pop
addl
inc
imul
pop
jne
xchg
idivl
stos
or
sbbb
jl
notb
cmc
or
adc
adc
in
fs
stc
icebp
adc
push
sub
mov
sbb
sub
or
xor
popf
mov
add
cmpsl
scas
cmp
fsubl
shrb
pop
stos
sahf
pop
pop
mov
test
cld
movsb
lahf
mov
std
jo
stos
repnz
call
aaa
imulb
outsl
aad
fnstcw
out
jge
xchg
icebp
test
add
jne
out
inc
sub
daa
in
jbe
sbb
xor
cmp
sarl
mov
push
cmp
cwtl
jmp
int
cmp
test
pop
xchg
mov
sbb
test
push
sub
fdivs
pop
inc
mov
xchg
bound
mov
bound
xchg
push
fdivl
daa
xchg
xor
insl
andl
xchg
int
cmp
cmpsl
aaa
add
pusha
fistpll
jae
push
rcrb
data16
mov
enter
sbb
pop
cs
aam
rcrl
cwtl
xchg
xor
sbbl
push
or
and
and
mov
adc
fsubl
mov
xor
lods
jecxz
dec
push
test
ror
xor
or
push
mov
in
mov
aam
cltd
dec
or
jns
xor
adc
mov
es
push
aad
xrelease
iret
jmp
jg
cld
cltd
outsb
int
pop
popa
test
leave
mov
fsubrl
add
mov
mov
outsl
fstps
ljmp
mov
test
shlb
add
sub
js
fldenv
cli
inc
mov
iret
je
dec
insb
mov
dec
movsl
xor
hlt
das
jle
cli
inc
aad
jbe
data16
repz
pop
push
cmovns
scas
mov
jg
sbb
mov
xor
pop
fadd
sti
jge
lahf
xchg
cmp
mov
mov
cmpsb
movsb
repz
lock
out
ljmp
mov
xor
pusha
push
jno
lock
xchg
push
das
mov
femms
mov
fs
xor
scas
addr16
dec
jnp
jno
cmpsb
out
cli
cmpsb
xor
es
jl
inc
mov
rolb
mov
mov
leave
ljmp
lret
je
cli
ja
sbb
push
movsb
int3
dec
mov
push
dec
add
filds
ds
xor
xchg
rorb
dec
leave
out
adc
cmp
mov
ja
dec
sbb
mov
shlb
jge
mov
and
out
movsb
in
into
pusha
sbb
xchg
xchg
jo
nop
add
aaa
push
inc
sub
or
pop
repz
or
push
cmp
push
cmp
imul
shll
cwtl
rorl
shr
mov
dec
or
push
les
int3
repnz
scas
shlb
and
stos
stos
xchg
shl
mov
sub
lcall
sbb
pop
push
add
les
cli
ljmp
jle
ret
push
ja
mov
push
sub
test
mov
or
test
or
dec
in
jge
jle
outsl
sbb
in
pop
mov
mov
mov
call
sbb
mov
mov
mov
sbb
and
fldenv
iret
stos
dec
xor
fldcw
das
clc
insl
and
mov
in
sbb
sbb
sbb
pop
sti
xor
movsl
outsb
add
cmp
jne
pop
jge
pushf
add
xchg
and
mov
xor
scas
outsb
lds
adc
rcll
icebp
imul
mov
mov
dec
mov
inc
dec
xlat
scas
mov
cmpsb
jl
imul
mov
mov
sbb
mov
mov
cmp
adc
pop
cmc
sub
movsb
jle
data16
jne
and
cs
call
repz
adc
cli
mov
mov
lahf
scas
add
insl
js
sub
pop
mov
cmp
and
pusha
pop
adc
ljmp
lock
leave
pop
aad
and
pop
pop
nop
and
xchg
fs
pop
cmp
shll
sbbb
pop
sbb
popf
jnp
mov
rclb
addr16
jl
or
and
jo
insb
dec
outsb
jne
sti
popf
sti
or
pop
popf
int3
and
mov
orb
pop
daa
pop
xor
out
cli
imul
test
scas
out
cmovbe
popa
add
mov
sarb
cmp
mov
jp
call
push
sub
mov
adc
dec
sbb
sbb
sbb
jecxz
das
xor
sahf
add
xchg
cli
jmp
shll
fcompl
cmp
dec
cmpb
mov
jle
sbb
push
inc
popa
je
xor
mov
or
pop
in
xor
jge
xchg
addb
data16
jns
movsl
mov
pop
jae
dec
insl
sbb
mov
xor
push
stc
ret
and
mov
mov
add
fwait
and
jno
inc
stos
arpl
jo
fmul
xlat
fcomps
out
je
popa
fdivl
or
test
or
pushf
pop
xchg
mov
imul
enter
xor
popf
aad
mov
into
roll
xchg
test
out
dec
jnp
lcall
lret
add
ror
or
rorb
pop
popa
lahf
jmp
aaa
and
adc
mov
jle
xchg
or
std
inc
xchg
imul
fstps
xchg
pop
loope
addr16
jb
fidivs
repnz
jo
into
leave
stos
movsl
loope
cli
mov
adc
or
xor
push
xchg
nop
mov
sbb
lds
aaa
xor
repnz
loop
and
mov
repnz
push
fs
and
jmp
add
aam
pop
aad
xor
insb
addr16
pop
lds
or
jmp
push
add
mov
xchg
push
and
sbb
js
fsts
pop
rorb
push
lods
out
ja
inc
xor
mov
inc
pop
and
mov
pop
xchg
mov
lret
test
dec
mov
xchg
arpl
cmp
stc
shrl
jne
jg
dec
adc
mov
fstps
pop
call
scas
in
scas
test
loope
fs
pop
and
adc
push
cmpsl
cmpsl
nop
iret
daa
cmpl
inc
adc
pop
xor
inc
cmc
xchg
push
stc
fisubrl
nop
xchg
mov
cmp
jae
fistpl
and
xchg
pusha
sub
andl
push
icebp
icebp
mov
loopne
xor
adc
and
stc
mov
pop
cmp
adc
loope
push
lods
xor
xchg
ja
les
jae
push
xor
mov
loopne
push
dec
pop
fwait
das
mov
fs
movsb
or
iret
sti
test
pushf
mov
movsb
nop
dec
and
stos
scas
cmp
pop
enter
dec
xchg
add
jl
subl
add
mull
outsb
leave
xchg
mov
insb
inc
out
rcr
xor
sbb
cmp
push
dec
cmp
mov
pop
jo
loop
adc
cmp
mov
jae
fmul
jbe
jns
flds
sub
or
mov
incl
mov
xor
xor
cltd
pop
inc
cltd
aas
aad
out
scas
jae
sarl
mov
popa
xchg
sbb
jg
push
xor
fldenv
or
inc
jae
incb
add
fstpt
cmc
mov
out
fisubl
scas
sarb
jae
lret
fisubl
enter
int3
incl
mov
and
jnp
shrb
push
je
sti
stos
cmp
mov
pop
mov
imull
sbbl
and
into
insl
dec
sub
add
sbb
cmp
aad
fnsave
lock
jp
pop
in
xor
repz
leave
mov
mov
outsb
mov
mov
test
adc
fsub
dec
and
or
mov
sarl
ficoms
pop
notb
testb
loope
popa
mov
dec
lcall
ret
and
add
leave
into
popf
and
pop
addb
popf
push
cmp
enter
movb
movsl
ss
lea
pop
pop
test
inc
imull
pushf
insl
les
fdivrs
and
insl
sub
pop
mov
jbe
sub
sub
sub
adc
cli
inc
pop
fdivr
addr16
adc
insl
sahf
jae
mov
rolb
mov
inc
mov
jb
xchg
inc
add
lds
sbb
push
jge
xchg
mov
push
aam
mov
sub
jecxz
push
add
les
fwait
in
mov
orb
movsl
hlt
movsl
clc
or
addr16
xor
shll
cmc
inc
sbb
sti
push
and
stos
pop
push
loope
stc
stos
mov
cmp
movb
xor
dec
push
mov
mov
lea
adc
fucomi
jno
fstpl
mov
push
stos
mov
add
inc
scas
das
lea
push
inc
cmc
pop
clc
fidivl
cwtl
or
adc
mov
adcb
mov
repz
adc
loope
pop
pop
inc
and
insl
jae
rcl
fmulp
mov
cmp
jae
ret
mov
jno
stos
ljmp
mov
xor
je
gs
arpl
mov
ljmp
adc
sbb
mov
push
push
scas
inc
clc
jae
shrb
cmpl
dec
pop
and
sti
pop
xor
mov
test
mov
mov
fists
aas
sahf
scas
fstps
stos
clc
jg
lret
cmpsb
lcall
dec
loopne
push
mov
insb
dec
movlhps
pop
xchg
mov
lcall
notl
and
repnz
ja
cmp
mov
xor
add
mov
push
rclb
pop
inc
pop
xchg
xchg
sbb
sbb
mov
push
push
jmp
hlt
dec
mov
pop
cmp
push
pop
cmp
les
mov
fcmovb
roll
adc
xor
test
loop
cld
inc
bound
stos
shll
addr16
add
lds
sbb
shrb
mov
mov
inc
ja
shrb
pop
shlb
inc
cmc
cmpb
cmc
sub
int3
jno
add
pop
loope
mov
fwait
mov
mov
ss
cmc
addr16
and
adc
cmpsl
pop
sarl
add
push
movsb
fsub
push
filds
lret
jmp
aam
pop
pop
jmp
push
mov
mull
lcall
stc
mov
jmp
popf
out
pop
and
aad
pop
add
sub
add
mov
cli
push
repnz
in
cmp
pop
les
je
out
push
fistpll
pop
movl
xor
es
mov
push
data16
test
jbe
in
ljmp
decl
inc
ds
repnz
bound
insl
sbb
cmp
mov
sbb
jl
insl
fisttps
les
push
enter
adc
jp
out
ret
xor
xor
add
insb
mov
and
fstps
int3
xchg
mov
mov
movsb
lret
mov
xor
pop
mov
adc
in
push
cwtl
push
or
mov
in
sbb
aam
in
inc
stos
fwait
inc
mov
sbb
aaa
add
call
gs
and
cmp
inc
add
mov
mov
fbstp
rcrl
inc
add
jbe
sbb
pop
es
out
daa
in
fidivrs
push
in
push
std
into
adc
stos
jmp
push
gs
aas
ss
gs
test
xchg
xor
and
xchg
push
and
xchg
dec
push
ret
fidivl
sar
xor
lods
jnp
mov
pop
rclb
adc
push
pop
out
push
popf
xchg
sub
sbb
jns
push
lret
or
dec
jne
les
sbb
push
subb
enter
repnz
mov
mov
mov
insl
js
and
adc
jp
add
sub
adcb
xor
bound
push
imul
mov
inc
sbb
push
les
jmp
js
sub
xchg
cmp
xor
or
arpl
mov
jecxz
inc
jmp
shl
lret
jae
data16
lods
push
stos
test
repz
mov
shll
sahf
or
cwtl
mov
call
inc
cmp
and
jecxz
mov
daa
mov
push
mov
shlb
xchg
inc
nop
rolb
cmc
and
cmp
jns
xorl
mov
inc
lods
dec
call
sbb
in
jle
popa
lock
push
xchg
scas
push
nop
pop
sub
and
push
and
cmp
iret
or
andb
mov
pop
mov
mov
repnz
shlb
push
lods
mov
mov
shlb
leave
dec
sub
inc
lods
xchg
or
or
in
jge
inc
sub
into
daa
lret
mov
mov
fsubrl
sub
jmp
cmp
dec
push
into
sub
fistps
add
push
in
jmp
and
mov
mov
clc
lds
push
xchg
jle
leave
data16
sub
add
jb
cmp
fisttps
mov
pop
ret
xlat
fsubs
xchg
cmp
xchg
aam
shll
aam
test
into
sbb
jne
pop
inc
sub
inc
aas
pop
sbb
loope
movd
push
jno
mov
jne
bound
mov
mov
jecxz
mov
push
nop
xchg
adc
pop
imul
les
inc
mov
inc
jb
pushf
pop
mov
js
mov
add
test
xchg
sarb
push
cmp
jo
xchg
xor
call
fcompl
insb
push
xor
js
adc
ljmp
pop
add
jns
andl
pop
dec
leave
dec
mov
fwait
scas
sub
push
int3
rcr
jo
cltd
sbb
mov
or
add
mov
sbb
daa
pop
push
outsb
out
cmpsb
mov
xchg
aam
scas
add
call
mull
mov
mov
sbb
lds
mov
pop
or
xchg
and
lods
movsl
mov
or
insl
call
arpl
ret
mov
cs
push
in
iret
les
in
ret
mov
xchg
mov
xchg
and
popa
mov
lahf
loop
fs
mov
in
xlat
daa
in
cmp
jno
int
jne
cmp
movsb
mov
xlat
test
ja
or
idiv
push
imul
cmp
pop
not
adc
pop
jns
push
stc
lods
or
mov
xlat
lods
xchg
pop
jae
sti
mov
jns
cltd
imul
mov
scas
push
test
inc
sub
test
aam
pop
dec
out
int
fistps
jnp
scas
dec
int
mov
mov
movsl
sub
aad
pop
lods
mov
add
jmp
adc
sbb
sbbl
mov
push
xchg
inc
push
clc
jmp
daa
jbe
jg
push
pmulhuw
push
dec
addb
xchg
mov
pop
adc
insl
push
mov
jbe
fwait
pop
pop
scas
pop
inc
sahf
adc
adc
sbb
pushf
fisubl
jb
call
adc
dec
mov
jp
in
pop
lcall
or
adc
js
lahf
sti
arpl
subb
sbb
outsb
les
inc
mov
sub
into
cltd
push
rolb
jmp
xchg
push
sub
xchg
push
mov
pusha
scas
mov
push
mov
xor
sbb
mov
ret
inc
jbe
insb
aam
leave
cmpsl
add
je
jle
jb
cmovge
and
push
data16
pop
aaa
mov
nop
subl
xor
sub
sub
or
mov
xor
addr16
push
ficomps
add
cltd
xchg
loop
xor
jbe
xor
test
lock
or
gs
adc
xchg
enter
jb
jno
int3
xchg
into
sbb
movsb
popa
adc
cmpsl
movsb
popf
jnp
mov
mov
jmp
xor
les
les
jecxz
or
xchg
mov
inc
fsubl
push
jle
and
lahf
xchg
repz
or
out
lds
hlt
sub
test
pop
aad
js
jge
rcrl
push
scas
or
mov
pop
mov
xchg
dec
jg
mov
cmp
lods
jge
or
test
xor
and
xchg
mov
bound
sub
out
mov
mov
sub
pop
push
aam
add
push
pushf
sub
imul
aas
in
mov
mov
xchg
bound
sbb
and
js
fnsave
pop
xor
jnp
push
xchg
aad
xchg
sbb
or
test
adc
xor
push
cmpl
stos
and
insb
fneni(8087
shrb
sbb
fnsave
cli
out
add
xchg
out
xor
lock
shrl
inc
pushf
push
je
push
dec
mov
arpl
imul
cmc
aam
push
push
xchg
or
je
cmp
sub
in
lods
cmp
insb
imul
jp
or
dec
mov
cltd
in
add
popf
in
xchg
stos
xchg
sbb
and
loop
push
or
or
ret
jmp
shlb
mov
sbb
jge
aaa
les
xchg
push
fs
aas
daa
rcrl
jno
xchg
jmp
pop
test
popf
mov
adc
js
adc
call
sub
lock
or
xchg
and
sbb
idivb
push
fwait
xor
mov
and
js
mov
fildl
fcmovb
jmp
shll
pop
scas
adc
std
loop
xchg
icebp
push
iret
imul
cs
jne
lods
add
lret
adc
je
and
sub
inc
mov
mov
arpl
mov
dec
mov
cmc
xor
xchg
fs
cmpsb
mov
nop
test
lods
mov
std
inc
cmpsl
and
mov
pop
cmp
push
or
xchg
inc
inc
aad
xchg
push
scas
jbe
mov
fsubr
adc
ret
movsl
das
adc
shlb
xchg
add
and
dec
int3
push
lahf
mov
xor
mov
dec
in
insb
pop
stos
gs
fnstenv
ret
aam
push
daa
pop
lret
mov
lret
push
sbb
jb
add
popf
dec
xchg
mov
fxam
pusha
dec
dec
test
mov
cltd
mov
pop
add
jno
leave
mov
push
addb
shr
cmpsl
mov
addr16
mov
mov
mov
ficomps
aaa
mov
out
call
test
or
imul
out
shll
roll
cmp
mov
in
sub
in
jo
shrb
mov
loop
test
cltd
nop
or
loopne
into
fisubrl
adc
and
pop
jmp
out
xor
pop
inc
jb
fldl
push
into
hlt
push
scas
fistl
and
leave
shlb
add
adc
cmp
ja
xchg
and
mov
ret
jle
les
mov
inc
mov
inc
adc
lods
hlt
sub
mov
jge
mov
and
fisubs
push
inc
out
xchg
jp
cmp
xchg
push
jbe
ljmp
dec
push
or
inc
adc
pop
std
cmp
add
mov
jmp
inc
aaa
jnp
adc
lret
add
aad
sbb
aas
outsl
mov
jae
mov
xchg
daa
xchg
sbb
mov
movsb
mov
xor
in
mov
insb
aaa
mov
scas
mov
loopne
cli
jecxz
push
icebp
shlb
lds
enter
or
test
int3
test
lock
jae
sbb
pop
outsl
int
cmp
mov
mov
loopne
std
jle
shll
popa
sub
movsl
sub
pop
jne
std
or
fs
repz
int
addr16
or
sti
pop
pop
mov
sbb
cmp
sarb
and
xchg
dec
adc
xchg
in
rorl
mov
loopne
stos
push
ret
xor
hlt
or
mov
out
mov
loope
push
je
test
mov
mov
jge
int3
int3
cmp
dec
sub
xor
pop
mov
jecxz
fwait
adc
stos
sub
aad
aas
cmpsl
mov
xchg
fcomps
jecxz
xchg
mov
rcrb
loopne
add
repnz
jecxz
jnp
jmp
repnz
aaa
pop
movsl
mov
dec
popa
push
adc
push
int3
pop
stos
fisttpl
or
mov
mov
inc
jmp
out
fsubrl
pop
add
fsub
bound
daa
loope
aas
je
jecxz
ret
add
and
jbe
insb
aad
mov
and
mov
sti
or
cltd
cmp
xchg
sarl
mov
adc
ffree
clc
cmc
stos
push
mov
ja
jp
ret
mov
out
ss
lcall
jg
gs
arpl
lods
xchg
inc
xchg
jle
and
add
mov
jg
mov
enter
fidivl
std
mov
push
loope
ja
mov
lret
mov
jbe
rcrl
sub
pop
ljmp
cmpsb
mov
popa
loope
int3
mov
xor
cmp
fs
inc
sbb
in
icebp
mov
pop
test
push
inc
cmp
es
add
push
adc
test
xchg
xchg
dec
push
rorb
daa
sub
jb
enter
or
pop
push
dec
inc
and
sbb
xchg
pop
cmp
clc
out
adc
lret
adc
movsl
xchg
cltd
mov
popa
aam
jl,pn
cmpl
jb
or
sub
rcl
pop
mov
fcompl
push
or
ja
es
test
js
xchg
adc
lods
loopne
sbb
xor
andl
pop
and
popf
sbb
xchg
stos
and
imul
fsubp
xchg
inc
int3
pop
andb
sbb
cmpsl
out
mov
dec
adc
insb
popf
xchg
mov
push
xor
data16
mov
icebp
fsubrs
push
cld
ficoms
pop
push
faddl
push
test
mov
in
and
mov
or
outsb
ss
mov
je
insl
dec
mov
stc
js
int3
outsl
cmp
xchg
jg
dec
push
jmp
inc
xor
pushf
xor
cwtl
fs
in
sub
cltd
jg
dec
cs
adc
jno
and
add
dec
mov
dec
xchg
out
cld
loope
loopne
xor
xchg
fists
hlt
jg
fadds
inc
sbb
fwait
aas
das
xchg
mov
push
test
bound
je
outsb
aam
add
into
mov
mov
mov
xlat
add
cmp
jns
inc
lock
ds
adc
shll
pop
cli
incb
lock
mov
in
fcomps
xor
movsb
cmp
push
sub
xor
test
mov
mov
pop
incb
inc
push
or
and
icebp
daa
cwtl
mov
adc
mov
aad
loope
sti
loope
sub
sahf
sbb
xor
jne
dec
popa
xchg
jbe
mov
cmp
or
outsl
mov
not
push
mov
xor
jge
add
cli
and
mov
push
je
dec
frstor
and
pop
jle
sub
pop
icebp
cmp
or
pushf
jnp
test
xor
adc
jl
cs
daa
jg
mov
insl
nop
cmpsb
das
jne
sub
int3
lahf
or
pop
or
mov
sub
mov
xchg
xchg
dec
repz
add
mov
push
mov
int3
stc
mov
je
ds
sub
insl
sub
xchg
fs
pop
mov
test
add
xchg
test
cwtl
incb
in
pop
inc
fisubl
movsb
stos
lock
pop
divb
push
repnz
pop
shlb
mov
hlt
mov
daa
lahf
and
lret
dec
popf
add
xchg
inc
ss
fsubr
jl
lahf
or
or
adc
inc
ljmp
push
aad
ret
xor
pop
inc
in
rolb
xor
lahf
jle
movsl
pop
sub
or
cli
pop
push
jl
aas
ljmp
xchg
in
dec
mov
xchg
mov
lcall
mov
shlb
xchg
add
repz
add
mov
ds
lret
or
mov
movl
mov
shlb
inc
fs
push
push
cmp
rol
inc
mov
sbb
dec
adc
mov
sub
mov
mov
cmp
mov
dec
mov
push
jg
inc
mov
fstl
clc
test
sbb
fmull
sub
jne
jecxz
imul
outsl
or
shll
das
mov
inc
pop
mov
ret
ja
out
pushf
dec
movsl
leave
sahf
outsl
hlt
add
outsl
aad
in
inc
push
test
xchg
mov
ss
mov
int3
mov
in
or
out
addr16
dec
sub
xchg
lods
loope
push
ds
stos
add
ja
das
pusha
jecxz
cmpsl
lods
jecxz
popf
pop
cmp
cs
cmpsl
aam
adc
jle
ja
rcr
pop
push
cmp
mov
lods
jo
and
push
xor
sbb
mov
and
or
and
orl
inc
or
mov
dec
pop
je
jge
xchg
ja
or
and
sbb
mov
add
jmp
sub
pop
repz
ffree
divb
or
test
aam
lahf
imul
loope
and
in
push
push
es
adc
clc
sarl
cmp
mov
or
ds
fxam
aam
add
add
jo
or
cmp
leave
add
ret
lock
adc
cmp
or
ja
lret
jg
xor
xlat
lcall
jo
stc
sub
ds
inc
mov
xchg
iret
xor
rclb
sbb
pop
jg
sub
iret
in
dec
sahf
push
mov
push
fwait
push
push
fbstp
dec
ss
push
sub
push
xchg
lock
push
push
cli
lea
sbb
int
mov
dec
cmpsl
ja
mov
cmp
out
icebp
sub
push
aam
shl
fwait
mov
lods
sti
or
ljmp
fs
fimuls
scas
aam
dec
rolb
xchg
subb
pop
push
inc
pop
lods
pop
push
fsubs
lods
std
ds
or
jno
and
mov
cmp
jo
xor
mov
and
pop
mov
mov
scas
ss
in
aam
mov
sbb
adc
sub
into
cmpsb
mov
out
das
aad
adc
test
test
mov
mov
mov
cmp
and
push
sbb
clc
in
lret
sbb
mov
adc
mov
or
xor
fstpt
jb
je
iret
or
jp
or
pusha
jg
dec
ds
mov
inc
jne
push
mov
adc
imul
inc
mov
dec
test
nop
sbb
imull
mov
sahf
std
cmp
cwtl
and
pushf
inc
cs
negl
clc
mov
mov
mov
xchg
cmp
std
or
or
xlat
push
jo
pop
mov
mov
lcall
xchg
and
mov
or
fcoml
pop
mov
cwtl
pop
mov
xor
ret
out
adc
js
outsb
xchg
push
mov
pusha
shlb
in
repz
movsb
lgdtl
fs
push
sub
adc
mov
cmp
scas
mov
lds
jg
push
mov
xchg
pop
jmp
fadd
fwait
adc
cwtl
dec
jmp
loopne
push
int3
pop
data16
addr16
fsubr
sbb
icebp
sub
sahf
pop
divl
test
push
and
or
aaa
outsl
xchg
cmpsl
rorb
add
adc
xor
roll
pop
aam
push
mov
test
dec
out
sbb
movsb
aad
or
loope
test
das
xchg
mov
mov
xchg
sbb
aam
adc
add
or
mov
orl
lods
jo
fmuls
adc
mov
je
pop
mov
fadds
pop
lods
sbb
jae
jns
fisubl
mov
ficomps
dec
jns
or
lods
in
push
bnd
fadds
popf
add
sub
daa
push
push
push
jae
cmc
or
loop
xchg
lret
inc
sub
or
cmc
nop
out
es
rcl
clc
xlat
pop
dec
jg
cmc
push
inc
adc
in
das
out
add
mov
lret
ficomps
push
mov
cmpsb
jg
sbb
mov
jns
xchg
mov
shll
mov
pusha
sub
and
enter
xor
cmp
inc
mov
sahf
and
sbb
push
enter
push
inc
pusha
inc
jle
imulb
pop
mov
add
call
loop
push
adc
sbb
push
daa
shlb
stos
addb
js
lret
mov
or
jecxz
push
testb
test
dec
adc
xchg
loopne
outsb
dec
adcb
pop
mov
lea
mov
fld
shl
pop
cmpsb
nop
call
je
aaa
cmp
xchg
xchg
sub
xor
inc
test
push
jb
fwait
dec
xlat
sbb
push
sbb
pusha
out
outsl
cmpsb
std
das
enter
lods
sbb
mov
in
xor
dec
xchg
punpckhwd
pop
mov
xlat
sub
sahf
push
adcb
es
arpl
xor
int
mov
sub
das
push
sahf
dec
out
lret
xlat
daa
xlat
sbb
push
mov
dec
rcll
leave
loope
sbb
inc
xor
or
mov
xchg
sahf
movsl
cmc
pop
jg
jge
dec
out
push
stc
daa
and
popf
push
mov
cmp
jmp
sub
cmp
scas
ds
adc
insb
inc
repz
test
andb
inc
lret
sahf
and
adc
push
mov
dec
ds
ret
hlt
jl
add
xchg
stos
adc
loop,pt
imulb
push
dec
adc
xorl
nop
into
setle
or
fbstp
or
jns
lret
fcompl
jbe
jo
mov
mov
lea
jno
ja
mov
xor
adcb
fs
xchg
pop
shll
sbb
pop
push
scas
xor
fistpl
les
xchg
out
mov
jmp
jecxz
dec
js
int3
test
mov
xor
aad
cmp
inc
nop
popa
nop
inc
inc
cmpsl
mov
stc
andl
add
incl
mov
insl
insl
xchg
pop
movsl
rcrb
stos
jnp,pt
mov
pop
mov
xchg
ss
adcb
adc
sub
in
stos
and
aaa
stos
fistpl
dec
cmp
std
loop
push
or
adc
add
push
jmp
xor
xchg
mov
rcll
push
testb
dec
push
dec
push
mov
fstps
push
popf
mov
out
fs
sub
popf
popf
jecxz
iret
xor
pop
jp
mov
imulb
pop
cwtl
stos
xchg
mov
out
add
stos
or
xlat
inc
repnz
mov
mov
dec
outsb
mov
sahf
fists
sbb
add
cld
and
sti
mov
pop
dec
repz
outsb
mov
mov
ja
fadd
repnz
aam
and
rorb
repz
xchg
xchg
xor
jb
daa
int
and
adc
pop
les
lahf
das
sarb
insb
loope
inc
pusha
inc
and
pop
dec
mulb
repz
scas
popa
push
lret
jl
movsl
in
inc
and
imul
inc
xor
subb
loop,pt
ret
mov
sub
inc
cmp
mov
loop
popa
push
mov
fdivl
xchg
pop
pop
roll
mov
sbb
xchg
mov
mov
push
cltd
outsl
push
mov
push
cmc
idiv
add
int
divb
pop
int
in
fistpll
fstl
data16
je
xor
xor
orb
sub
in
es
decb
popa
aas
rcl
mov
inc
loopne
stos
ss
mov
fs
ja
jnp
push
or
mov
cmpsb
repnz
outsb
iret
je
fcomp
xchg
mov
cmc
mov
cmc
add
mov
and
push
push
ss
inc
cltd
sub
fabs
movl
fs
jnp
cwtl
in
cmpsl
test
out
in
xchg
xchg
loop
arpl
mov
jg
and
enter
sub
xchg
in
std
daa
jp
pop
pop
and
out
adc
jo
insb
div
fisubl
daa
std
dec
cmpsl
aad
clc
imul
les
cmp
push
jmp
dec
mov
cmp
outsl
dec
lcall
inc
js
fdivs
pop
mov
sbb
or
lahf
or
scas
ret
adc
mov
pop
fwait
inc
mov
xchg
push
roll
dec
andb
in
cwtl
test
and
push
lret
jb
sbbb
lods
xor
ja
lea
sbb
cli
xor
lds
pusha
sti
out
push
sbb
cmp
pop
stos
test
sbb
cmpsl
lret
scas
pop
cmp
xor
xchg
mov
lret
add
out
and
jmp
jnp
stc
xchg
mov
data16
adcb
insb
aaa
scas
stc
sbb
and
or
loope
ja
cmpsl
loopne
aam
xchg
daa
int
mov
and
shll
and
mov
sbb
mov
sbb
and
out
loopne
inc
shl
adc
fcompl
jg
mov
pop
bound
jae
or
repnz
scas
mov
xchg
mov
mov
test
bound
popf
repnz
mov
aad
ret
pop
stos
cmc
jne
clc
pop
jp
mov
or
pop
and
pop
cld
or
fucomi
push
sub
pusha
xor
bnd
loopne
adc
xor
dec
out
or
aaa
cmpsb
dec
aad
xchg
mov
in
call
out
leave
outsl
pop
test
pop
xchg
les
pop
and
hlt
adc
adc
lret
dec
dec
push
push
sbb
cmpsl
mov
add
mov
clc
sub
dec
imul
sub
cwtl
arpl
lahf
xchg
adc
outsb
adc
and
fistpl
aas
mov
imul
nop
lcall
addl
add
or
sbb
inc
testb
or
mov
shll
inc
or
sub
in
push
stos
xor
xor
xor
ljmp
fwait
lahf
cmp
iret
popa
lret
cld
sahf
in
cmpsb
add
pop
rcrb
jno
sbb
add
je
jge
cmpsl
inc
pop
rcrb
push
div
test
cmp
rolb
lret
rcrl
xlat
loopne
push
xor
ret
enter
dec
cli
fstl
imul
gs
dec
jmp
lods
fsubl
lret
fnstenv
push
and
out
pop
jns
lock
xchg
pop
je
sti
outsb
mov
js
dec
ljmp
jno
dec
push
in
push
dec
jnp
insl
jmp
push
xchg
outsl
adc
xchg
ret
mov
sbb
jmp
mov
imul
es
pop
aam
dec
or
jmp
icebp
arpl
lret
mov
in
inc
cmp
jno
sbb
sub
aas
mov
mov
adc
push
adcb
and
int
dec
ljmp
dec
sahf
mov
ljmp
cld
dec
jns
sbb
sarb
and
jg
xlat
mov
cmp
push
dec
adc
leave
mov
cmpsl
hlt
xor
pop
mov
mov
jl
out
js
jne
mov
out
sub
test
inc
fwait
mov
lea
sbb
daa
mov
sbb
dec
push
mov
inc
clc
sub
sub
rcl
mov
adc
mov
add
roll
sarl
jg
push
shll
or
mov
xchg
daa
aas
lret
xor
js
inc
dec
call
xor
xchg
xor
les
pop
cmp
or
mov
std
add
add
fdivrl
cmp
sbb
mov
add
cltd
sub
and
add
movsl
clc
add
push
xchg
es
pop
xchg
jp
and
xchg
repnz
xchg
out
mov
mov
out
dec
cmc
pop
mov
test
mov
mov
jmp
sarl
scas
es
imul
jbe
inc
test
nop
cmpsb
mov
fmulp
jae
cld
bts
xchg
adc
xlat
sbb
fs
lods
out
push
mov
sbb
xor
lret
push
push
or
or
mov
dec
xchg
push
ss
push
cwtl
add
std
push
inc
pop
std
lret
pop
mov
cmp
mov
pushf
jp
pop
jo
add
stos
add
dec
gs
repnz
movsb
push
pop
push
mov
adcb
shr
fildll
jno
push
inc
movsb
or
sti
mov
and
aas
ljmp
jne
xchg
cmpsl
addr16
test
dec
scas
mov
mov
add
xor
mov
inc
jge
or
shll
push
sahf
and
jg
inc
xchg
jno
xor
iret
jae
mov
cmpsl
jmp
and
dec
push
jcxz
inc
adc
xlat
cli
addr16
jb
push
pop
xchg
or
lcall
pop
mov
inc
xchg
or
in
push
call
adc
jnp
stc
dec
mov
mov
jae
loope
inc
push
xchg
dec
sbb
xchg
xchg
sub
popf
lock
mov
mov
sahf
xor
lock
stc
mov
xor
ljmp
stos
bound
adc
lods
jno
add
jmp
mov
fndisi(8087
lret
shll
push
xchg
mov
push
call
xor
xchg
mov
fs
popf
adc
cmp
stc
xor
lods
rclb
add
inc
cmp
std
je
pop
data16
mov
mov
or
outsb
lea
mov
add
jecxz
mov
nop
jg
mov
cmpsl
mov
je
sub
int3
push
jmp
push
push
lcall
jne
icebp
sahf
fyl2x
cmp
mov
shrl
pop
arpl
inc
ja
cmp
into
xchg
inc
or
or
add
push
or
or
arpl
add
adc
adc
stos
sbb
mov
dec
jg
movsw
inc
lods
lea
aas
test
in
inc
jb
enter
pop
mov
lds
mov
dec
scas
into
pop
cs
push
cmp
sbb
sbb
aas
pop
scas
push
sarb
in
fmull
out
add
mov
cmpsl
in
mov
xor
add
jbe
ljmp
in
xlat
xor
addr16
jl
out
cmp
iret
sbb
scas
insb
repnz
pop
call
int
roll
ja
mov
rcll
add
aad
aaa
or
mov
js
jp
jnp
aad
sbb
or
loope
push
nop
and
repz
dec
bound
js
ljmp
mov
cmp
icebp
bound
or
xchg
or
jns
mov
or
push
and
out
add
es
jp
movsl
mov
push
mov
fsts
add
xchg
inc
xor
and
aam
add
pop
push
add
pop
imul
inc
subl
jmp
pop
jmp
jbe
fucom
pop
mov
arpl
sarb
in
fcmovnu
loopne
daa
out
pop
mov
sub
xchg
push
outsl
out
add
inc
fucomip
mov
nop
movsl
push
xchg
hlt
cmp
fistps
xlat
lods
jno
dec
mov
cmp
add
sbb
test
push
mov
push
enter
fadds
sbb
sbbl
insl
pop
stos
aam
js
pop
sub
cmp
mov
push
sub
push
or
pop
mov
in
mov
xchg
sbb
xor
fadds
pop
and
les
out
pop
rcl
shl
frstor
insb
lea
imul
mov
shrl
mov
test
inc
cmpsl
jg
fwait
loop
ljmp
xchg
imul
insl
xor
inc
mov
lret
jae
pusha
xchg
mov
sahf
orb
fs
inc
ljmp
andb
lret
dec
test
add
hlt
inc
push
inc
add
mov
cli
pusha
xor
test
add
sbb
mov
js
fsubp
mov
fisubrs
pusha
fnstcw
hlt
out
mov
dec
dec
push
daa
neg
outsb
ret
lret
or
shl
mov
ljmp
andb
int
xor
push
and
push
scas
jp
out
cli
adc
add
aas
inc
pop
out
mov
push
cmp
cmp
cmp
int3
cmp
cmpsl
and
mov
cmpl
rcrl
clc
lahf
and
push
mov
arpl
je
mov
mov
jmp
rcll
or
lahf
daa
mov
ret
jmp
es
mov
mov
popa
lods
sbb
ljmp
fcmovnb
mov
loope
ds
clc
push
mov
mov
push
adc
daa
cmp
popf
sahf
aad
stos
sbb
out
int
std
fcmovnu
out
jbe
out
push
or
mov
mov
dec
push
ret
jp
jmp
jno
pop
push
sub
je
adc
cmpsl
adc
ror
cmp
jmp
mov
push
cltd
mov
std
or
call
jns
mov
mov
out
mov
jo
adc
arpl
mov
lret
xor
or
addl
test
dec
mov
rcl
insl
stos
leave
push
sti
in
stc
fstpt
or
movsb
iret
scas
movsb
inc
inc
rclb
out
test
fwait
push
pushf
popf
out
add
outsl
mov
sub
sub
mov
in
inc
mov
out
outsl
xchg
in
xor
mov
dec
movsl
sbb
adc
push
push
shrl
push
movsb
cmp
mov
data16
stos
xchg
cmc
fcoml
adc
jge
mov
mov
jge
mov
loop
adc
push
xchg
enter
in
cld
sbb
pop
lods
outsb
leave
shll
int3
cmpxchg
imul
dec
add
fstpt
sub
dec
and
mov
dec
imul
mov
adc
hlt
xor
sub
add
cmp
jne
lds
jle
pop
gs
mov
cld
movb
xchg
lcall
jle
arpl
mov
fadds
addb
mov
pushl
scas
mov
jno
add
iret
out
inc
scas
dec
sbb
inc
fsts
mov
mov
add
jns
mov
pop
sbb
xchg
arpl
mov
int
jbe
inc
in
xchg
imul
push
fistpll
imul
cmc
inc
mov
or
bound
lock
mov
adc
sahf
dec
sbb
icebp
call
shr
push
stos
sub
insb
sbb
lea
mov
int3
inc
lcall
fwait
mov
jne
push
and
and
adc
sahf
fld
mov
ds
and
xchg
cmp
lds
test
pop
int3
int3
loopne
jmp
cmp
mov
adc
mov
out
enter
fistps
and
sbb
data16
pop
push
inc
lret
jno
addr16
enter
mov
sub
jl
loopne
mov
and
in
int3
inc
ljmp
and
inc
stos
add
inc
adc
out
sti
pop
jecxz
mov
in
test
and
pop
sti
xor
dec
mov
stos
test
fs
mov
fildll
jb
dec
gs
fiaddl
dec
xor
sbb
fcomps
xor
into
aas
jmp
mov
push
gs
loope
push
sbb
jecxz
icebp
ja
sub
add
xor
jne
iret
outsl
jp
fildl
mov
cli
push
sbb
nop
ds
repnz
xchg
gs
dec
adc
mov
pop
scas
lret
mov
lds
jmp
roll
inc
jnp
in
jnp
loopne
xor
out
xchg
push
lahf
xchg
jecxz
adc
or
cwtl
pushf
scas
fistl
mov
test
sbb
or
or
int3
lds
sbb
into
out
cld
pushf
jecxz
push
wbinvd
add
stos
ror
sbb
cmp
lods
jg
sub
out
add
add
mov
rcll
test
ljmp
fwait
mov
sub
imul
xlat
adc
fwait
inc
sbb
cmp
cli
std
jo
add
cmpsl
aam
push
lock
xchg
mov
js
mov
out
and
mov
sub
sub
addl
mov
ret
cmp
sahf
jbe
mov
and
xor
bound
add
xor
jg
mov
pop
shll
add
pop
adc
lea
lds
inc
ret
inc
push
xchg
mov
out
ds
add
lea
pop
ds
mov
xchg
sbb
inc
out
jmp
cltd
xor
aas
adc
push
xchg
or
inc
stos
aad
push
jnp
jecxz
aaa
popf
rcll
cmp
jb
pop
cmp
mov
loope
outsl
out
out
cmp
adc
and
mov
mov
ret
add
add
dec
ret
test
hlt
mov
repnz
adcb
sarl
in
push
cmpsl
mov
daa
aam
in
gs
mov
lret
xor
pusha
and
xor
pop
iret
or
cmc
inc
adc
mov
cmp
fnstenv
sbb
add
jge
aas
jmp
scas
jge
sahf
scas
xchg
lret
into
cmp
loope
xchg
or
push
fidivrl
sbb
xchg
add
jmp
mov
adc
mov
fmull
lret
sbb
push
xchg
pop
mov
les
jecxz
pop
int
mov
mov
out
outsb
xchg
sub
subb
pop
sbbl
and
cmp
imul
xor
cmp
out
std
pop
xchg
cmc
pusha
or
arpl
push
cmc
inc
cmp
dec
decb
push
clc
nop
jmp
pop
lret
inc
mov
xor
imul
or
jp
in
mov
outsb
dec
inc
push
lahf
jmp
adc
outsb
loopne
addr16
loopne
push
jl
add
sbb
xchg
stos
push
subb
xchg
mov
sbb
dec
shrl
cs
cmpsb
repz
or
mov
inc
mov
shll
popf
sbb
push
arpl
sbb
mov
shrb
sti
adc
or
pop
mov
pop
mov
xor
mov
ljmp
fmul
xchg
lahf
std
jnp
mov
dec
add
jmp
test
hlt
adc
ret
xlat
scas
sbb
xchg
in
in
mov
bound
add
loop
push
out
movsl
mov
inc
adc
fs
jmp
cltd
adc
daa
or
popf
shrb
mov
sbb
mov
into
mov
es
test
aam
out
out
data16
and
mov
cld
push
pop
mov
mull
mov
call
call
xlat
pop
jno
pop
in
xchg
test
xchg
adc
and
sbb
cwtl
imul
mov
cs
push
in
mov
xchg
mov
call
std
push
sbb
mov
sub
pop
mov
or
push
call
xchg
test
gs
cli
jns
push
fmul
sub
dec
insb
rcll
mov
jg
scas
rcll
mov
insl
pop
adc
les
in
pop
lds
pop
fnstcw
std
mov
jnp
fildll
fsubl
xor
dec
push
xchg
sub
mov
push
imul
inc
or
icebp
jbe
or
mov
and
fcoms
dec
fiaddl
mov
jne
pmullw
test
xchg
dec
sarl
mov
push
cmp
lea
imul
out
outsl
sti
jno
scas
into
jge
mov
pop
add
mov
daa
roll
mov
mov
mov
pop
xchg
out
jns
sub
or
lock
int3
jmp
push
ror
test
mov
outsb
sbb
mov
fdivl
je
adc
cmpsb
test
pop
fs
pop
xchg
jecxz
push
adc
in
in
loop
or
sub
scas
mov
fisttpll
lcall
push
popf
repz
mov
inc
into
push
mov
adc
insb
mov
outsb
jnp
imul
loope
call
jg
loope
xchg
stos
mov
and
movsl
out
into
adc
loope
cmp
mov
mov
mov
out
xor
pop
hlt
cmpsb
lahf
dec
ljmp
mov
hlt
out
add
jp
fcomps
sti
in
push
cmp
lea
aad
cmp
push
adc
inc
inc
cmc
jae
dec
fcomp
mov
sar
and
rcl
cmpsb
push
mov
ficoml
in
xor
rcr
call
stos
adc
adc
das
push
pop
xor
adc
in
sub
ret
roll
wbinvd
dec
iret
push
cmc
int
mov
mov
and
dec
in
call
add
cmc
jle
daa
lods
lods
cmc
js
repnz
pushf
or
pusha
stos
jo
sub
cld
jbe
push
out
lcall
dec
cmp
sub
adc
repz
add
loop
idivl
xchg
lcall
mov
cli
cmp
jnp
iret
mov
mov
xlat
cmp
mov
sbb
in
scas
cmp
call
cmc
mov
and
and
cld
push
mov
out
lahf
push
xchg
lret
addl
shr
or
push
jo
inc
or
jae
roll
lret
inc
hlt
lods
or
imul
pop
hlt
push
in
hlt
adc
dec
ja
pushl
in
ret
dec
and
fs
rcll
sti
mov
xor
inc
mov
cli
pop
mov
test
pop
push
inc
adc
lock
jmp
rcrl
ficoms
addl
add
jmp
dec
mov
stos
cltd
cmp
lcall
andl
mov
jne
sti
sbb
mov
fwait
test
push
imul
popa
insl
stc
push
shl
in
mov
xchg
idivb
sub
mulb
or
jl
call
xchg
pushf
int3
jb
subb
jno
int
aad
xchg
add
jb
pop
sbb
ret
ljmp
fldcw
fdivl
inc
rcrb
insb
mov
lods
pushf
fistl
push
sahf
test
lds
in
jl
xchg
and
add
test
inc
lret
call
mov
int3
test
sbb
lret
or
inc
lock
push
xor
enter
pop
repnz
imul
popw
movsl
imul
lds
jge
sub
dec
sub
cmpsb
xchg
add
bound
mov
es
in
push
lahf
fmuls
mov
or
jnp
pusha
inc
imul
mov
adc
popf
sub
frstor
xor
lds
test
in
out
mov
test
pusha
dec
push
push
inc
pop
mov
and
int3
sbb
ja
mov
inc
mov
pop
and
jbe
fistpl
js
pop
jg
rcrb
and
rcrl
inc
xchg
cmpsb
inc
rorb
dec
bound
movsb
orl
fs
loop
repnz
cs
out
mov
xchg
mov
xchg
les
push
or
pop
and
movl
scas
repnz
add
jo
dec
arpl
add
mov
out
sbb
mov
fisttpl
aaa
ljmp
dec
insl
ret
js
js
lods
cmp
lods
pop
cld
dec
cmp
cmp
xor
rclb
dec
fcoms
cmp
js
cli
xor
fimuls
shr
or
jno
dec
or
scas
inc
pop
ret
into
js
idivl
stos
and
inc
mov
les
cmp
sub
scas
cmpl
and
inc
dec
aaa
cmp
out
aaa
inc
clc
sbb
xchg
mov
cs
scas
push
loopne
aad
sbb
mov
lock
cmp
out
hlt
mov
dec
sub
ret
pop
pop
pop
rclb
inc
push
and
ja
fwait
das
mov
in
test
mov
in
xchg
mov
pop
mov
inc
into
movsb
mov
in
mov
pushf
int3
aam
lods
addb
bound
cmp
pop
fcompl
cmp
mov
mov
and
xchg
sbb
mov
inc
adc
lods
lods
rcrl
pop
out
out
jg
dec
cmp
jle
inc
mov
popa
stos
mov
fcomps
sub
jl
daa
jnp
aaa
loopne
pop
add
cmpsb
xchg
pop
fmulp
out
setnp
in
adc
dec
inc
sub
pushf
divl
dec
add
push
push
sbb
shll
jno
or
inc
cmp
xor
and
loopne
mov
dec
and
imul
mov
add
stos
push
jp
ret
divl
sti
jge
cli
xor
outsl
orps
jb
adc
mov
sbb
adc
mov
repz
test
adc
push
mov
insl
xchg
addr16
sbb
lahf
popf
pop
rorb
leave
lahf
add
jle
jno
and
mov
jl
outsb
pop
add
stc
insl
pop
and
inc
aad
lcall
lret
xchg
out
or
sbb
push
xor
outsb
popa
cli
lret
inc
les
dec
adc
add
icebp
sub
loop
lods
adcb
sbb
mov
adc
xor
dec
int3
stos
pop
mov
fiadds
jae
pop
outsb
sub
push
mov
jbe
cld
test
or
out
loop
and
push
push
cli
or
scas
lds
cld
dec
push
stc
pop
jnp
fstpt
xor
sub
fwait
push
out
test
mov
pop
out
pop
outsb
fcoml
leave
mov
mov
pop
cmpsl
lock
ds
xchg
fsubl
mov
lods
fwait
ja
ds
ror
inc
xchg
add
test
push
inc
push
and
mov
ret
sbb
cltd
adc
adc
xchg
cld
sti
addr16
sbb
mov
or
cs
push
nop
sub
sub
loopne
mov
xchg
nop
pusha
pop
cli
sbb
inc
mov
add
cli
stos
imul
mov
or
xchg
divb
dec
inc
cmp
lds
or
jmp
stos
add
jle
shrb
leave
mov
les
mov
sahf
mov
testb
mov
icebp
mov
adc
or
and
adc
xor
sahf
ret
dec
sbb
daa
outsl
mov
mov
loope
mov
faddl
cmp
out
mov
cmpsl
shl
in
cwtl
mov
add
sub
pop
fistl
mov
fldcw
mov
sbb
sub
testb
and
pusha
adc
xchg
sbb
add
sbb
decb
xchg
lret
daa
adc
es
sahf
sub
lcall
js
sbb
arpl
negl
lea
adc
icebp
leave
clc
cwtl
inc
inc
cmp
bound
mov
js
mov
lret
inc
mov
loopne
stc
in
dec
adc
mov
ret
js
out
cmp
ret
idiv
rorb
fsts
insb
xchg
cmp
loop
mov
sbb
cmp
mov
fsubs
xchg
jle
bound
push
stos
fistps
or
sbb
les
sbb
mov
dec
jae
jl
test
add
xor
xchg
ja
add
mov
push
sub
push
daa
lahf
fnstcw
fistl
push
inc
mov
into
sub
fcmovnu
testb
notl
mov
mov
and
jo
pop
fwait
jg
icebp
lahf
rcrl
adc
jmp
sub
jge
lret
adc
add
jbe
add
fwait
dec
adc
lods
aam
in
dec
jecxz
xchg
popa
or
adc
dec
aam
clc
cmpsl
addr16
popa
pop
mov
add
scas
ffree
aas
mov
repnz
mov
sbb
or
popa
insb
dec
pop
jge
jno
or
jae
inc
push
out
sbb
movsl
lds
inc
out
push
andl
inc
push
push
xor
ds
sarb
inc
mov
outsl
xlat
mov
sub
jno
outsl
cmpsb
loope
fldcw
fsubrs
testl
pop
loop
cwtl
push
pop
cmp
dec
mov
adc
sub
mov
in
shll
mov
clc
mov
leave
bound
xor
and
scas
inc
cmp
movsl
loope
mov
cmpb
out
arpl
or
xor
fisubrs
dec
mov
add
jp
dec
xor
sub
call
adc
adc
cmp
add
sbb
lock
push
jmp
jne
ret
testb
jle
dec
and
adcl
jbe
xchg
add
imul
scas
xor
lds
push
lods
rorl
aad
jp
mov
add
adc
rclb
xchg
mov
jl
cmp
dec
das
lret
sub
sbb
jb
ja
xor
inc
and
pushf
push
fldenv
popf
int
leave
mov
dec
mov
mov
imul
and
in
lret
cmp
mov
es
sub
out
outsl
xchg
jo
mov
shlb
push
mov
sbb
hlt
pop
or
jno
jbe
stos
mov
fcompl
inc
mov
xchg
lods
dec
int
dec
mov
fidivrs
pop
adc
add
or
and
jl
and
lods
lret
push
out
dec
cmp
xchg
push
jne
outsb
inc
cli
pop
and
sahf
push
or
lahf
out
je
stc
cmp
push
ss
xor
xor
test
dec
enter
xchg
xchg
ficoms
push
sbb
leave
or
mov
or
fdivrp
lahf
xchg
sbb
jge
jp
pop
and
adc
mov
aam
xchg
loope
jle
fistpll
dec
push
push
mov
clc
xchg
out
cmpps
xchg
mov
adc
rclb
mov
xor
cltd
fldenv
movsl
scas
dec
insl
and
mov
adc
jmp
push
scas
mov
xchg
mov
stos
inc
pushf
push
mov
dec
cmp
pop
out
aaa
inc
or
ss
andb
scas
in
mov
mov
movsb
scas
sbb
cwtl
adc
in
repnz
sahf
lock
dec
sbb
insb
lcall
mov
ja
cmp
jne
push
mov
xchg
mov
jle
mov
lahf
add
ja
pop
cld
mov
cmp
or
mov
out
imul
sbb
xor
sub
ficoms
cmp
ss
insl
lahf
pop
fsubrl
push
pop
rol
out
pop
loop
jae
stos
pop
imul
std
insb
push
imul
sbb
sbb
popa
imul
push
pop
test
sbb
mov
outsl
imul
es
inc
icebp
or
pop
imul
dec
cmc
sub
push
sbb
in
sbb
and
xor
shll
inc
insl
fbld
sub
cmpsl
pop
jb
cmp
cmpsb
mov
and
and
outsb
mov
loopne
out
out
inc
int
add
push
push
jno
int3
call
xchg
jge
je
scas
lods
pop
mov
cmp
bound
fucomi
flds
xor
sub
mov
mov
mov
and
stc
and
add
xor
rolb
xlat
out
add
ds
mov
stc
xchg
jae
adc
xchg
xchg
adc
jle
mov
outsl
push
popa
repz
sbb
test
les
loope
arpl
or
insb
xchg
sub
frstor
jae
add
lahf
cmp
test
mov
nop
add
stos
in
std
xor
xor
in
mov
xor
les
xor
sub
lret
popf
mov
or
and
jmp
sti
shrb
sbb
jne
aas
xor
adc
popf
adc
inc
sub
cmpsb
mov
xchg
sub
sub
lcall
xor
adc
pop
jmp
lds
in
fucom
out
or
xchg
jmp
popf
leave
data16
adc
or
and
xor
cmp
test
inc
jo
push
loope
ja
rcl
loope
adc
and
leave
adc
movb
sbb
clc
fcomp
sub
cmp
mov
xor
xor
add
ljmp
loop
rclb
test
rorl
fcmovnu
popf
sub
lds
cmpsb
cmp
daa
inc
lahf
cmc
mov
out
imul
xor
pop
adc
push
in
sahf
mov
cmp
push
clc
inc
mov
xchg
dec
lods
mov
mov
cltd
push
mov
dec
pop
xchg
sbb
cli
adc
xor
test
pop
orl
jge
ret
fcompl
push
push
decb
orb
xchg
inc
fildl
xchg
pop
ds
imul
ss
push
push
mov
pop
ret
test
cmp
inc
dec
fnsave
sub
xor
addb
subb
push
add
cli
mov
das
cmpsb
mov
in
imul
call
icebp
jns
aam
ds
enter
push
xor
jb
pop
fisttpll
cmp
pop
jnp
imul
and
lods
aaa
and
enter
cmp
mov
push
push
test
mov
and
arpl
lock
rolb
jno
sub
push
mov
mov
jno
ret
xchg
jae
sbb
lods
sbb
test
lret
or
cmpsl
fdivrp
cld
imul
jne
xor
push
jp
xchg
lods
fmuls
test
test
mov
enter
mov
push
std
shrl
cmp
jae
or
out
dec
sub
xchg
adc
sahf
dec
pop
add
popf
cmpl
sarl
sahf
ljmp
sub
pushf
adc
rcrb
push
fisttpll
idivl
mov
iret
or
xchg
in
rcrb
or
or
or
aam
lret
insl
into
inc
subl
pop
sbb
subb
call
cmc
in
lret
xor
aad
mov
cmp
in
arpl
dec
into
icebp
dec
dec
mov
inc
hlt
test
inc
mov
cwtl
inc
aad
mov
jp
addr16
jae
mov
imul
mov
mov
sub
js
mov
mov
in
arpl
scas
jg
popa
les
push
addr16
xchg
inc
xlat
not
stos
pop
and
xchg
lret
out
lcall
movsl
jge
jb
and
pop
imul
mov
sbb
mov
xor
mov
lea
clc
std
int3
or
lret
sub
js
js
arpl
test
idivb
int
pop
cwtl
mov
jle
ficoms
in
outsb
or
add
add
jno
adc
push
push
sbb
hlt
inc
or
mov
jp
jl
ret
cmpsl
mov
inc
cli
lods
enter
dec
popa
fbstp
and
cmp
movsb
stos
rcl
dec
mov
pop
mov
aad
sar
xchg
mov
ljmp
cmp
pusha
outsb
push
stc
andb
hlt
cltd
mov
dec
aaa
adc
and
outsl
adc
call
cmp
repz
pop
and
cmp
mov
sub
aaa
sub
add
add
pop
movsb
addr16
mov
out
mov
jle
std
or
scas
xor
cmp
lods
in
lahf
in
lods
sbb
aam
iret
and
xchg
xchg
jmp
inc
adc
xorb
push
add
clc
pop
pop
movsb
inc
flds
inc
lahf
xchg
in
mov
inc
mov
test
iret
adc
hlt
mov
dec
sbb
aas
mov
adc
cmp
inc
push
mov
xor
faddl
sbb
int3
mov
push
aam
pop
pop
dec
pop
cmp
fdivs
mov
fcmovnbe
pop
jecxz
cs
xor
push
add
std
int
sub
and
pop
jg
cmc
push
add
sub
jno
test
push
loope
cmp
bnd
push
push
inc
jle
les
ficoml
mov
hlt
aas
cmp
loopne
inc
mov
pop
add
add
adc
js
stos
mov
inc
lea
jno
lahf
mov
addr16
xlat
loop
lods
mov
mov
mov
jne
push
sub
or
mull
pop
inc
bound
mov
mov
movsb
xor
cld
xchg
jl
mov
nop
je
clc
and
and
fstpl
mov
sar
lret
sbb
jne
add
jmp
imul
mov
test
clc
xor
sub
rcll
xchg
loopne
jmp
adc
and
outsl
and
dec
movsl
inc
fstl
push
mov
cs
xor
out
decl
xor
stc
mov
insl
insb
cltd
insb
aaa
js
inc
mov
gs
scas
shlb
dec
sub
lcall
push
and
imul
and
jle
push
and
bound
push
pop
loopne
adc
inc
aam
dec
mov
lahf
jle
arpl
dec
fisubrl
cs
xor
loopne
cld
ds
mov
aam
out
mov
mov
or
jp
push
sbb
cli
shlb
testl
outsl
push
sarb
std
xchg
js
out
push
mov
lret
jg
vpmaddwd
arpl
sarl
loop
std
xchg
mov
lcall
stos
movsl
movsb
sub
insb
aam
jne
mov
sbb
pop
pusha
rol
adc
mov
clc
popa
cmpsb
inc
out
jno
iret
fdivp
dec
push
push
loopne
insb
inc
mov
xchg
xor
lahf
lret
neg
or
addb
popf
aad
pusha
pop
sti
scas
and
outsl
add
mov
je
repz
and
add
mov
add
fldenv
leave
imul
loop
in
or
xchg
imul
fmuls
stos
es
std
push
push
cmp
pop
scas
data16
mov
pusha
aas
xchg
sti
in
mov
add
inc
dec
jb
push
mov
stc
scas
mov
hlt
das
mov
stos
cmpsb
sbb
iret
cmpsl
pusha
fsts
scas
jnp
or
pop
clc
ret
jmp
adc
cmp
and
push
xchg
iret
mov
in
lock
imul
lds
test
repz
jl
loop
das
mov
xor
rclb
or
pop
cmp
fsubp
adc
pop
shll
cwtl
fdivrp
adc
mov
ss
das
xchg
int3
pop
adc
jecxz
arpl
ja
test
rclb
fistl
pop
rorl
jno
sub
jge
cmp
jmp
dec
lock
push
jno
mov
sub
leave
cli
push
in
sbb
cmp
int3
mov
pop
mov
adc
mov
push
mov
jb
push
mov
inc
sahf
and
mov
sbb
xlat
outsl
je
add
les
jb
ret
fs
test
sbb
cmp
aad
xor
stos
inc
mov
jb
sub
cmovg
or
cmpsl
jne
cmp
jmp
dec
dec
int
xor
or
xlat
push
xchg
and
loopne
mov
and
xor
xchg
jnp
aas
push
icebp
or
pop
push
test
popl
stc
lds
and
pop
and
mov
repnz
fdivrl
outsb
pushf
xchg
add
lods
ret
call
lock
jae
mov
and
dec
sub
xchg
stc
or
and
sub
xchg
xchg
sti
fimull
test
stc
xchg
out
mov
inc
cmpsl
repnz
pop
shl
pop
inc
in
mov
out
push
mov
jb
push
loop
mov
mov
inc
xor
sbb
mov
push
lret
dec
in
repnz
pusha
shll
lcall
adc
inc
mov
add
mov
cmp
dec
xor
inc
jge
outsb
dec
adc
insl
in
data16
das
xor
mov
add
pusha
add
icebp
sub
and
icebp
es
test
std
repz
or
pop
push
imul
mov
mov
aad
repz
lcall
sbb
xlat
pushf
inc
push
in
sahf
test
stos
or
sub
imul
rcl
les
ds
movsb
mov
inc
fildl
sti
std
in
das
pop
loopne
xchg
mov
jns
repz
pop
ret
mov
pop
loop
cmpsb
rorl
shll
pop
sub
filds
cli
jo
loop
rcl
fisubrl
in
mov
mov
fadds
cli
pop
mov
push
out
dec
push
lods
pop
test
scas
jno
dec
fmull
pop
aad
movsb
push
mov
sti
lcall
pop
in
out
arpl
lret
dec
push
not
inc
inc
push
xchg
push
rol
pop
push
jecxz
pop
push
repz
aam
or
jp
js
pop
pop
dec
mov
daa
adc
mov
cmp
loope
out
mov
fbstp
loope
xor
xlat
shll
sbb
fbstp
mov
mov
mov
int
adc
les
iret
cmp
scas
mov
push
add
lock
into
adc
pop
add
pop
rclb
add
push
xchg
lds
push
pop
xchg
scas
pop
not
cmp
lods
loop
or
movl
push
mov
jp
hlt
gs
lea
jns
inc
mov
xor
iret
mov
sbb
xchg
push
aaa
shl
xor
sar
lea
fcomp
jo
imul
xchg
jle
jecxz
rcrl
mov
fmulp
pop
pop
dec
xchg
sti
fldenv
xor
push
jmp
fisubrs
cmp
cltd
pop
arpl
std
into
adc
data16
sahf
xchg
sbb
jb
xchg
test
outsb
inc
sub
pop
sub
repnz
out
push
ja
push
mov
lods
addl
cmpsb
cld
cwtl
dec
enter
sar
cmpl
push
and
add
fs
sbb
xchg
and
lcall
icebp
add
stos
sbb
jp
dec
sbb
pop
jmp
mov
lods
pushf
test
out
imul
lret
jno
or
mov
mov
inc
sarb
dec
pop
test
fs
sbb
hlt
push
adc
jmp
push
fwait
cmp
aaa
shrl
decl
sbb
cmpsb
xor
push
pusha
sbb
aas
int
nop
cmp
arpl
xchg
sub
sub
scas
ret
lahf
xchg
loopne
push
mov
in
int
pop
aam
sub
mov
cmp
movsb
adc
or
xchg
ss
cmc
in
sbb
adc
cmp
fnstenv
dec
adc
ja
stc
and
push
out
mov
sbb
and
in
xchg
adc
add
mov
iret
testl
push
jle
jae
mov
push
stos
data16
inc
jno
sbb
inc
mov
mov
dec
das
xchg
test
xchg
jo
cld
mov
jbe
imul
rclb
pop
outsb
das
mov
stos
xchg
cmp
lds
jle
sub
ficomps
cmpsb
adc
das
shll
mov
pusha
add
outsl
aam
xlat
mov
xchg
pop
mov
dec
adc
in
or
movsl
dec
sub
push
arpl
jge
or
adc
inc
mov
mov
in
dec
int3
cmp
pop
shlb
out
js
ljmp
int3
or
sbb
not
scas
sarl
loop
stos
adc
jmp
mov
dec
fcoml
and
xchg
and
jge
scas
aad
and
pusha
repz
mov
sahf
call
sbb
dec
iret
lret
lret
lret
and
xchg
cltd
lret
adcb
je
jne
nop
in
cmp
adc
insb
iret
mov
test
push
and
lcall
push
jno
dec
fs
pop
sbb
add
outsb
shl
push
mov
fndisi(8087
and
sub
dec
push
daa
sbb
add
or
push
fisubl
shrl
jp
gs
ss
adc
loope
jge
adc
rep
cmp
and
add
data16
mov
cmp
popf
mov
imul
inc
mov
outsl
in
pushf
mov
outsl
push
ret
and
pop
pop
testb
push
sub
xchg
adc
adc
adc
test
xor
jmp
pop
movsw
enter
or
aad
sbb
jp
dec
jp
sub
mov
loope
stos
or
cli
xchg
fs
std
sub
out
cmp
ret
push
jp
push
pop
fdivl
mov
push
dec
pop
je
push
xor
jo
ret
fimull
xchg
js
mov
test
xchg
push
clc
cmpsl
iret
jge
dec
jne
xchg
and
cmp
mov
or
jecxz
idivl
push
repz
mov
cs
mov
jae
push
lods
inc
or
imul
imul
xchg
pop
adc
xchg
sub
xchg
pop
add
test
xchg
mov
outsl
add
out
scas
addr16
cmpb
mov
ficompl
push
stc
imul
pusha
sbb
popa
adc
out
mov
bswap
in
xchg
iret
dec
jne
daa
push
jge
mov
cltd
loopne
xor
mov
lds
dec
push
cmp
and
mov
add
push
fnstsw
mov
leave
movsb
cwtl
sarl
cs
mov
repz
mov
lea
dec
jecxz
jne
add
dec
int3
into
aam
sarl
popf
mov
sub
and
cmpsb
pop
xchg
jle
sbb
mov
ss
flds
xor
mov
fcmovne
test
push
sub
xchg
ja
xlat
adc
dec
jmp
mov
jle
xchg
mov
test
push
push
popl
loop
nop
xor
xchg
das
test
mov
xchg
mov
lock
push
jne
push
and
push
push
inc
sarb
movsb
jmp
xor
adc
adc
sbb
sahf
pop
cmp
stc
roll
sbb
pop
pop
mov
jo
stc
mov
cmp
gs
cs
xchg
pop
aas
ss
adc
pop
jle
mov
or
sbb
jmp
lds
push
push
mov
xor
sbb
or
test
and
cs
lret
mov
xchg
jle
xor
mov
mov
ja
xchg
mov
mov
mov
out
xor
pusha
sub
ss
jbe
lret
mov
dec
xor
pop
dec
ret
test
sahf
shlb
int3
hlt
hlt
sbb
shll
loopne
cmpsl
pop
push
push
and
or
aas
xor
enter
dec
pop
inc
pop
cltd
lods
int3
sahf
cmp
mov
test
mov
ljmp
xchg
scas
mov
mov
sbb
mov
call
cmp
arpl
xchg
dec
lods
dec
inc
scas
lcall
and
imul
pop
pop
cwtl
aad
push
inc
jl
subb
mov
push
insl
cmpsb
xchg
pop
inc
push
mov
sub
inc
insb
cmp
jns
xor
rclb
add
lcall
imul
dec
adc
aas
mov
adc
sub
jno
int3
jo
lahf
or
push
test
mov
pop
cmp
jbe
mov
inc
das
pusha
sbb
or
cld
pop
loope
add
cs
lcall
lret
add
push
xor
add
outsb
sub
and
std
xchg
repz
sub
jmp
xor
jb
roll
repnz
push
sub
push
xchg
mov
divb
mov
dec
outsb
jbe
inc
sbb
inc
mov
aas
das
addr16
jbe
mov
mov
add
fsubp
mov
ja
pop
or
pop
mov
dec
arpl
popa
pop
pop
cld
das
cmp
jp
jge
lds
adc
dec
aam
cmp
nop
in
xor
mov
inc
sbb
cli
cli
inc
add
in
nop
xor
pop
sar
arpl
add
mov
test
jp
mov
sbb
jno
inc
outsl
ret
loopne
mov
push
fmul
ja
and
and
mov
ljmp
pop
addb
mov
sub
add
dec
iret
es
cmpsb
mov
test
shll
int3
pop
jne
push
bound
mov
cmp
filds
lds
jp
dec
inc
fbld
in
push
adc
lret
or
cltd
mov
cwtl
jae
test
mov
mov
sbb
divps
xchg
adc
xor
mov
pop
mov
ljmp
loope
mov
mov
mov
jle
adc
cmpl
or
ljmp
jl
or
xor
and
mov
mov
aad
pop
xor
in
shlb
pop
pop
clc
out
stc
aaa
in
add
jae
repz
push
into
push
dec
jb
cmp
jno
push
cmp
in
cmpsb
in
popf
insb
cmp
orb
and
and
or
enter
cmp
lock
push
decl
mov
dec
add
xchg
test
call
cmp
ja
jp
or
jb
ja
lock
and
pop
mov
mov
dec
sahf
and
xchg
je
into
inc
fstpt
cmpsb
mov
fcoms
scas
or
bound
shlb
sub
push
and
stos
cli
int
push
fwait
and
mov
in
and
cltd
lods
push
scas
add
jbe
int
cmpsb
add
xor
ljmp
in
xor
and
pop
add
sbb
test
cltd
cmp
sti
mov
shll
pop
push
pop
sub
jae
xor
addr16
fcompl
cmp
fs
push
in
int3
or
leave
aad
movsb
bound
mov
shr
xlat
xchg
test
mov
adc
neg
movsb
and
mov
pop
movsl
nop
bound
outsl
adcl
dec
jns
clc
loope
inc
mov
jno
imul
ljmp
iret
xor
lret
or
pusha
filds
cmp
sub
push
mov
push
enter
iret
cltd
cltd
je
sbb
pop
dec
test
xchg
jne
push
add
mov
outsb
ret
nop
aad
xchg
scas
dec
mov
pand
mov
inc
jbe
lahf
inc
and
bound
add
and
fldenv
sbb
mov
cmpsb
test
clc
inc
shll
push
push
add
push
jp
jo
sub
test
push
loope
js
push
jge
fildll
movsb
mov
and
mov
bound
ja
adc
push
jp
jae,pt
iret
push
mov
test
jbe
and
or
aad
inc
movl
ss
daa
ja
out
or
mov
pop
pop
dec
xor
dec
push
cmp
sbb
sbb
mov
inc
ds
inc
ficoml
rolb
pop
fwait
clc
popf
mov
je
xor
je
int3
sbb
and
jg
repz
test
mov
repz
popa
inc
adc
mov
sub
and
jbe
std
lahf
or
roll
xor
dec
or
into
inc
fucom
ret
aad
sbb
test
adc
test
mov
lds
mov
inc
dec
mov
in
or
ret
arpl
sbb
hlt
shlb
xchg
jbe
lahf
mov
add
std
outsl
mov
fmul
inc
daa
pop
add
addl
gs
mov
pop
inc
xlat
test
or
sub
cltd
mov
bound
push
adcb
dec
inc
cmp
popa
xor
cwtl
inc
std
push
adc
adc
insb
outsb
or
adcb
adc
hlt
push
push
arpl
push
and
orl
jl
mov
mov
dec
mov
es
cmp
mov
clc
enter
or
sub
dec
fisubs
sti
arpl
mov
jecxz
mov
cmp
xchg
incb
cs
mov
add
jecxz
mov
lock
out
jbe
xor
dec
push
xor
cmp
or
sbb
outsl
fs
mov
testl
gs
aam
or
and
inc
and
push
out
fsub
push
movsl
pop
push
imul
sub
dec
jae
xchg
xchg
ret
fldenv
mov
add
mov
gs
sub
or
push
sub
mov
push
mov
xor
bound
mov
sbb
ret
aad
push
mov
insb
xor
dec
orl
jo
xor
mov
lds
sub
fwait
out
push
mov
rorb
inc
xor
in
test
sarb
inc
iret
push
shr
push
dec
pop
push
psubb
push
fwait
add
test
xchg
addr16
pushf
cld
pop
ror
insb
adc
fstpl
rclb
int3
push
mov
or
adc
mov
sub
mov
ret
mov
sub
cs
xor
mov
cmp
inc
lret
test
adc
sbb
xorl
mov
jne
xor
lods
sbb
push
adcl
pusha
addr16
daa
xchg
mov
data16
mov
into
xchg
sarb
sbb
ljmp
pop
das
das
jb
jns
nop
ljmp
cmpb
pop
aam
inc
sbb
mov
hlt
dec
push
pop
bound
dec
sbb
jns
scas
and
push
repnz
test
jmp
sbb
enter
ficoml
xchg
push
cmp
repz
xor
sub
pop
rorb
jl
xor
pusha
ret
mov
mov
aam
sub
jl
jbe
inc
cli
gs
mov
jmp
dec
sub
cmp
jne
jecxz
inc
cmp
xor
inc
pushf
ss
xchg
add
fwait
inc
jmp
mov
lds
sarl
notl
add
mov
mov
adcb
mov
push
jmp
pop
pop
xchg
and
mov
les
sarl
inc
push
in
scas
pop
cmpsl
insl
mov
xor
ja
pop
fiaddl
cld
jns
sub
mov
fnstcw
xlat
frstor
or
push
fidivrs
mov
xchg
mov
icebp
test
scas
xchg
std
or
adc
dec
icebp
ss
and
and
mov
pop
inc
mov
ja
mov
xchg
in
fnsave
jg
rcrl
sub
imul
loop
ret
ja
lahf
popa
inc
iret
push
sti
icebp
sub
adc
mulb
xchg
or
and
loope
push
das
in
add
mov
dec
xorb
fildll
lds
call
fs
fmuls
inc
ljmp
in
std
mov
xorb
adc
adc
rcl
inc
arpl
jp
inc
jns
add
insl
arpl
mov
sbb
cmp
in
cmp
inc
out
xchg
movsb
pushf
xchg
pusha
in
push
pop
int
addr16
adc
mov
adc
sti
leave
cmp
popl
mov
jl
xor
sub
cwtl
jno
pop
rol
jmp
clc
sbb
xchg
sarl
xchg
xlat
in
jl
shlb
jnp
mov
mov
sbbl
mov
sahf
pop
push
mov
pop
lods
mov
xlat
jb
mov
ds
sbb
stos
mov
dec
pusha
sbb
loopne
es
jno
push
stc
test
xchg
sub
mov
cwtl
push
jl
and
push
push
mov
fidivrs
popf
dec
repnz
out
push
fstps
bound
mov
stc
fdivrl
add
loope
and
lock
dec
mov
push
sbb
push
rcll
push
test
aad
repnz
inc
test
out
repz
aas
es
fsubl
add
mov
mov
js
aaa
jne
loop
sub
loopne
insl
fidivrs
pop
xor
pop
mov
repz
hlt
pop
jle
mov
fldl
adc
mov
in
gs
sbb
call
andb
cmpsb
sub
mov
push
in
imul
cld
cmpb
jmp
negb
shl
ljmp
and
cltd
cmp
pop
and
or
mov
bound
cmp
popa
aam
xchg
pop
push
adc
or
stc
shll
xorb
test
bound
movsl
mov
sarl
scas
ja
inc
cmp
dec
fldenv
std
sti
call
sbb
adcl
mov
es
xor
inc
xchg
xor
sub
sti
jg
aam
xchg
mov
orb
pushf
sbb
add
cltd
ret
in
push
ret
fldenv
push
sbb
dec
popa
cmp
movl
mov
mov
push
push
xor
ret
mov
std
loopne
push
in
push
mov
insb
cmp
fstpl
in
push
pop
aaa
enter
ror
mov
mov
push
addr16
xchg
enter
pop
fcomps
mov
sbb
xchg
mov
mov
add
repz
mov
dec
mov
jnp
or
cmp
jle
adc
mov
lock
jns
subl
outsb
stos
imul
sahf
sti
lcall
cmpsb
xor
mov
mov
jnp
mov
daa
sbb
stos
ljmp
nop
add
sbb
jb
adc
lret
cmp
scas
sub
cmp
aad
popa
xchg
scas
repnz
lcall
inc
gs
pop
ja
jns
ja
jle
sbb
dec
mov
pop
fiadds
pop
stos
sbb
out
add
insl
push
jno
int
stc
sbb
test
cld
imull
mov
and
test
ror
insb
xor
lods
and
enter
lock
int3
mov
int3
cltd
or
cs
adc
mov
lds
push
imul
xchg
push
push
ljmp
push
pop
in
cmp
pop
xchg
aam
adc
inc
mov
cmp
xor
mov
sbb
fmuls
inc
pop
lds
jg
and
jl
mov
enter
aam
push
xor
jmp
scas
jne
sbb
test
loopne
pop
stc
shlb
pop
mov
lock
stos
sub
dec
orps
xor
pop
xchg
nop
pop
test
xchg
cmp
js
jecxz
add
fisubrs
repnz
pop
jbe
sti
outsb
pusha
pop
movsl
jb
test
mov
ret
and
push
fcmovnbe
jns
mov
ja
push
ficoml
int
fistl
xorb
lcall
add
movsb
fdivrl
mov
mov
out
xchg
add
jge
aas
ds
xor
clc
lods
sbb
bound
repnz
jge
fsubrs
imul
call
out
icebp
jmp
or
pop
adc
fidivl
jle
lcall
fs
in
hlt
sbb
enter
gs
fadd
shll
or
cmp
jg
mov
jle
cld
pop
ss
mov
std
and
add
mov
add
mov
loope
es
clc
ret
mov
cmp
cld
mov
pop
arpl
ret
ss
daa
lods
and
mov
mulb
fwait
mov
sub
add
scas
clc
outsl
add
lret
sbb
fwait
sti
fs
sub
jmp
in
test
sbb
mov
dec
out
cmp
mov
add
mov
xor
mov
dec
push
sahf
repz
out
adc
dec
or
cmpsl
pop
add
adc
sbb
repz
inc
imul
xor
xlat
adc
mov
data16
cmp
cmp
repz
push
inc
outsb
call
sbb
dec
push
mov
mov
scas
mov
arpl
mov
ljmp
mov
mov
pop
fisubs
std
adc
adc
xor
push
inc
jmp
fdivr
jge
pop
repnz
pop
stos
mov
inc
mov
repz
lods
push
pop
outsb
out
lods
cmp
les
pop
and
cwtl
arpl
out
or
mov
mov
rorl
fstl
xchg
xor
loopne
jbe
insb
add
dec
out
sub
stc
shrl
out
out
scas
mov
test
cmpsl
lods
inc
dec
xchg
xchg
pushf
shr
rcll
inc
or
out
mov
aad
movsb
mov
inc
rolb
fwait
cmpsb
ds
stc
jnp
fnstenv
xchg
std
cltd
mov
scas
adc
lea
mov
testb
mov
testb
shl
jne
sub
mov
jmp
iret
add
shl
xchg
call
push
jge
xlat
rcll
jno
sbb
jg
and
ljmp
imul
hlt
cmp
lret
adc
out
roll
mov
pop
push
inc
std
icebp
mov
adc
mov
and
fwait
enter
inc
loopne
mov
shrb
das
jp
fisubrl
lods
cmp
pop
in
out
std
or
subl
mov
enter
add
dec
repnz
mov
push
xchg
adcl
test
mov
cwtl
inc
fidivl
stos
lods
sbb
push
push
das
lea
mov
and
outsl
fstpl
or
lahf
pop
lret
push
pusha
jmp
pushf
ja
icebp
aad
shll
cltd
lds
mov
mov
jbe
das
xchg
sub
mov
mov
aad
enter
xchg
fidivrl
ljmp
lods
insl
sub
orl
andb
insl
fwait
and
fdiv
dec
add
xchg
adc
xor
mov
jo
mov
sub
xor
lcall
pop
cmp
stc
jne
jbe
stos
and
jb
push
cmp
pop
jo
jecxz
dec
mov
mov
adc
xchg
fadds
std
push
mov
mov
out
push
and
and
mov
cmpsl
es
or
aam
dec
cmc
sub
aad
arpl
push
mov
nop
inc
cmp
cs
cmp
mov
test
cmp
mov
xlat
fsts
sarl
add
xchg
daa
and
test
sub
aad
out
cmc
mov
mov
jno
or
mov
hlt
jecxz
arpl
mov
ret
add
pop
sbb
cmpsl
std
or
out
mov
lea
into
pop
jmp
jb
pop
jg
inc
cmp
pop
in
xchg
jl
ja
xor
mov
push
daa
push
shll
icebp
leave
push
sbb
add
ret
fmull
xor
dec
in
inc
xor
push
cmp
dec
jl
dec
adc
mov
addr16
xchg
add
lcall
in
stc
pushf
jnp
xchg
or
hlt
push
sub
sarb
mov
dec
mov
mov
inc
out
in
xchg
movsb
and
add
mov
and
push
inc
data16
stos
stos
int
fildl
ficomps
mov
shrb
inc
mov
xchg
dec
repz
xchg
lahf
cltd
fwait
sbb
lods
push
adc
and
cwtl
repnz
aad
add
pop
mov
push
ret
popf
out
mov
jp
sub
mov
push
movsl
lcall
les
cmp
ds
or
jmp
sbb
cwtl
vpsraw
adc
ds
fisubl
bound
stos
lahf
mov
xor
shl
push
pop
das
cmp
cmpsb
cmc
out
jnp
clc
cmp
sub
xor
cmp
loopne
push
test
mov
stos
push
mov
sbb
lock
mov
std
addr16
fwait
xor
xchg
out
int3
xchg
jmp
cltd
lcall
out
imul
repz
out
fs
pushf
sub
insb
into
cltd
push
and
stos
push
aaa
cmp
js
shlb
jg
stc
cmc
or
inc
mov
xor
cmp
cmp
rol
imul
push
in
jns
jl
in
mov
xchg
mov
mov
fldl
jecxz
pop
and
sub
xchg
xchg
sbbl
pop
cmc
cld
add
insb
inc
in
push
mov
sbb
mov
das
inc
fisttpl
and
xlat
insb
sbb
inc
xchg
fisubl
enter
or
into
mov
iret
enter
sarl
inc
bound
xchg
lea
sbb
mov
test
mov
jl
dec
pusha
mov
cmpsb
xchg
ja
fs
cli
test
imul
movsl
in
pusha
leave
xor
bound
push
sub
mov
push
aam
jno
push
push
and
loope
insl
popf
rcr
xor
repnz
inc
lea
jp
andb
cmp
inc
sar
repnz
jmp
imul
cld
xchg
cmovb
repnz
push
add
jecxz
sbb
jns
mov
jge
jg
ficomps
call
shrl
sbb
std
dec
add
push
stos
fisttps
dec
mov
pop
mov
jg
jne
inc
cmc
arpl
stc
sub
or
fs
test
cmpsb
add
clc
out
pop
fbstp
in
or
fdivrs
dec
sahf
xlat
mov
cmp
cmp
sub
or
push
shl
hlt
sub
jns
xchg
fldenv
lock
mov
lods
outsl
imul
sub
xchg
adc
add
pop
jne
push
push
jecxz
in
push
call
mov
pop
inc
je
lret
or
loope
or
mov
loop
test
sbb
rolb
cmpsl
xchg
mov
out
ficompl
lea
sub
ret
jecxz
leave
cmp
push
lret
inc
les
pop
imul
xor
jecxz
lea
int3
cmp
mov
inc
push
scas
add
sbb
div
es
adc
test
dec
call
push
ljmp
ds
jl
mov
outsb
push
add
mov
loop
out
in
loop
scas
pop
data16
pop
repnz
cmpsb
mov
mov
insb
push
sbb
or
cmpw
loop
jb
je
iret
mov
lock
xlat
iret
add
jbe
fsubs
sti
ljmp
nop
leave
mov
rcr
adc
in
cld
dec
and
and
or
ss
sbb
imul
inc
fimuls
mulb
outsl
out
iret
std
test
dec
imul
push
insl
mov
or
xorl
push
mov
out
lock
and
mov
or
adc
imull
add
push
adc
in
jge
das
xchg
sbb
aam
sbb
test
out
je
nop
mov
fwait
testl
iret
and
pop
cmp
popf
cmp
mov
bound
enter
inc
das
xchg
into
in
mov
inc
mov
and
push
dec
cmpsl
push
daa
out
je
adc
popf
shll
stos
lret
xor
cmp
xor
mov
pop
dec
jno
shr
ficomps
add
insl
adc
adc
add
xor
adc
adcl
dec
sub
pop
mov
mov
and
cld
mov
xchg
mov
mov
sahf
or
ds
mov
lahf
lods
push
testb
out
mov
mov
push
mov
sub
clc
add
iret
cmp
cwtl
adcb
mov
jae
mov
pushf
xorb
push
pop
or
xlat
dec
mov
cmp
push
sbb
mov
pop
loop
cli
push
sub
stos
xchg
sub
seto
and
cmp
sub
cmp
jle
and
data16
fldl
stc
pusha
arpl
je
cltd
popf
jno
inc
imul
cmp
decl
adc
add
shlb
mov
ffreep
in
xor
fisttpl
xor
sub
cmp
and
jge
fcmovnu
mov
mov
testl
out
movsl
pop
push
dec
xlat
sbb
cld
or
stos
daa
mov
repz
sub
or
andl
testl
mov
add
addb
xor
inc
push
pusha
cmp
sub
js
insl
cwtl
and
popa
jecxz
mov
pinsrw
cwtl
mov
cmpsb
iret
mov
push
inc
adc
movsb
jo
adc
sub
inc
add
xor
movsb
or
jae
test
in
xchg
pop
addb
insb
dec
inc
sbb
push
cld
push
sub
adc
jo
insl
rclb
ds
fs
call
sub
ljmp
sbb
jbe
in
adc
hlt
test
fmul
mov
mov
repnz
pop
mov
addr16
or
mul
and
addb
push
mov
xchg
mov
jbe
mov
xor
sahf
iret
mov
scas
mov
cmpsl
sub
fstl
add
xor
out
dec
push
push
sbb
in
inc
xchg
aas
inc
xchg
movsl
pusha
push
jb
outsb
xchg
loopne
je
xor
aas
jnp
dec
cmpsl
lret
sub
out
lods
mov
mov
dec
les
pop
jmp
jmp
repnz
sub
fisubrl
nop
adc
pushl
mov
pushf
pop
sub
or
ds
push
jmp
insw
movsl
cwtl
pop
mov
and
rolb
sub
jb
loopne
fcomps
mov
add
sbb
mov
or
cmp
xlat
mov
pop
add
dec
test
jmp
pop
adc
dec
movsl
cltd
mov
xchg
inc
jecxz
jbe
mov
rcll
adc
sub
xchg
or
inc
rcrl
jno
and
repnz
data16
mov
pop
shl
das
cltd
push
xor
in
lret
aad
je
mov
test
rclb
sbb
mov
pop
jno
and
punpcklbw
inc
out
and
adcb
sbb
xchg
pandn
les
dec
cli
nop
rep
jne
bound
push
loope
sahf
cmp
mov
loopne
xchg
xchg
mov
jmp
add
pop
push
cmp
push
aas
iret
jbe
jne
and
jp
mov
pop
fstl
cmp
jp
rcll
loop
xchg
mov
sbb
xchg
push
lock
xchg
jmp
lret
jl
cli
xchg
mov
mov
dec
adc
fsubr
sbb
adc
sar
inc
mov
and
sbb
adc
js
in
push
test
jge
idivl
push
add
mov
jae
aam
les
lea
pop
push
xchg
test
scas
sub
movsl
cmp
int3
dec
imul
iret
lahf
mov
cmpsb
frstor
jge
cwtl
repz
push
pop
data16
xchg
xor
call
add
imul
scas
or
cli
imul
sub
popa
mov
sti
push
mov
push
sub
and
and
cmc
mov
test
adc
or
popa
or
adc
pop
adc
shlb
sbb
xchg
lea
or
mov
movsl
inc
pop
sub
stos
sub
inc
lret
ljmp
dec
jae
push
imul
stos
pushf
cld
and
inc
inc
dec
jge
mov
icebp
cli
sarb
sub
add
pop
jmp
xchg
rorb
adc
cmp
jmp
dec
sub
int
push
shlb
lds
int3
jnp
pop
into
push
push
mov
inc
xchg
mov
mov
dec
sbbl
icebp
cmpsb
or
jecxz
xchg
loope
dec
loop
xor
xor
jae
jno
sub
dec
out
pop
cmp
add
xchg
sahf
jle
aaa
jno
sbb
into
sub
pop
sub
sub
enter
fisubl
cmc
lds
gs
je
sbb
sub
sub
fwait
cmp
cmp
leave
inc
cmpsb
add
mov
cmp
xchg
inc
push
jo
lock
dec
test
mov
push
addr16
xchg
push
jp
sbb
xor
cmp
mov
inc
mov
sbb
fistpl
int
test
sahf
add
or
fsubrl
fs
lods
gs
lcall
jns
cmp
ret
dec
xlat
pop
arpl
mov
add
test
idiv
fdivrl
addr16
stos
dec
adc
les
call
popa
loopne
push
ds
popf
pop
shll
jbe
aad
pop
fmulp
xlat
xchg
xchg
aaa
enter
mov
or
xchg
adc
fimull
jge
sahf
stos
pop
sbb
outsb
in
icebp
in
fs
push
insb
xchg
xor
test
aas
xchg
stos
test
inc
std
cmpsl
shlb
jb
mov
jmp
imul
dec
xor
pop
add
dec
xor
ds
fidivs
in
xchg
mov
sarl
lock
out
mov
add
jns
lea
adc
les
adc
or
dec
push
cmp
pop
mov
mov
ja
sar
adc
ret
mov
mull
ja
test
int3
jno
int3
xor
out
repnz
mov
sbb
push
add
and
cmpsl
xor
in
rcrl
in
or
sbb
into
adc
test
cs
mov
mov
sub
cld
cmp
xchg
mov
mov
mov
sub
xor
loop
dec
ret
cli
push
fistl
mov
push
dec
inc
xor
jle
push
xchg
pop
add
ljmp
push
aaa
fbstp
mov
mov
push
xor
push
jp
daa
js
hlt
cmp
mov
mov
lret
xchg
mov
and
adc
adc
push
rcll
sbb
je
scas
fs
sarl
xlat
cli
mov
call
mov
xchg
xor
ljmp
pop
pop
xor
pop
test
icebp
jg
mulb
fwait
lds
ret
stos
add
out
scas
xor
xor
mov
gs
or
in
jae
pop
or
mov
mov
ljmp
mov
fs
imulb
notb
inc
xchg
mov
incl
pop
cwtl
inc
loope
pop
mov
stos
flds
in
movsbl
pop
and
inc
jmp
jo
jmp
fdivl
sbb
shrb
rorb
push
add
rclb
clc
jl
int
jl
aad
or
xor
adc
sub
xchg
int
or
sti
jecxz
scas
xchg
or
mov
adc
mulb
fdivrl
pop
pusha
int3
das
ret
sbb
add
and
std
cmpsb
lods
imul
mov
test
in
mull
imul
dec
jecxz
jecxz
je
pop
mov
adc
dec
sahf
btcl
je
lods
inc
push
or
push
fidivrs
push
arpl
sti
test
mov
pinsrw
dec
push
push
push
subl
lcall
fsubrs
dec
and
mov
cmpl
sbbl
lea
fsubp
hlt
stos
outsl
daa
add
repnz
xlat
mov
fisttpll
fistpll
or
aaa
adc
rorl
mov
cmp
sub
in
xor
aas
push
cmpsl
mov
add
incl
mov
cmc
cmp
pop
push
in
jns
aad
mov
sbb
cmp
dec
push
imul
add
xor
push
mov
pop
pop
ss
cmp
mov
mov
std
xchg
jg
mov
pushf
xor
jle
mov
ds
adc
sbb
rolb
gs
sti
or
sub
xor
mov
jae
lcall
adc
adc
jl
inc
es
push
and
jae
ljmp
sbb
push
out
jecxz
pop
shlb
push
or
in
popa
lods
fwait
jl
xchg
mov
cmpsb
mov
jns
jbe
sbb
pop
jge
mov
sti
aaa
push
cwtl
add
xchg
int
sub
repnz
cld
xchg
fucom
popf
lods
push
shlb
inc
adc
repz
mov
xor
jle
sub
mov
mov
fidivrs
xor
and
xor
mov
xlat
add
xchg
jl
add
arpl
call
sbb
jno
sbb
cmp
aam
push
add
xlat
pop
push
in
rorl
mov
sbb
pop
pop
jnp
mov
int
sahf
and
mov
cmp
and
add
jno,pt
imul
fists
push
mov
loopne
xchg
popa
imul
xchg
jb
inc
jo
loop
or
aas
inc
je
sub
and
fdivl
mov
push
adc
addr16
cmpsb
les
insb
add
xchg
decb
cmpsl
xor
lret
popa
fsubrs
xchg
inc
insb
or
popf
hlt
inc
lods
jbe
in
repnz
prefetchwt1
es
cli
dec
les
lcall
dec
push
test
sbb
pushf
test
fidivrl
leave
insb
cltd
gs
aam
push
mov
out
push
mov
ret
mov
push
ret
pop
jno
loope
jg
imul
data16
rol
xor
mov
inc
aas
or
mov
mov
inc
outsb
sub
mov
sub
or
cmp
and
and
and
sbb
popf
mov
mov
sbb
notb
mov
lock
notl
lods
pop
int3
pop
xchg
xrelease
sti
and
adc
movsl
leave
sub
cld
sbb
adc
jns
or
xchg
pusha
xchg
xor
mov
imul
sbb
jno
sahf
roll
pop
and
add
and
xchg
jae
loopne
out
fs
test
jns
lods
xchg
fiadds
jne
cmp
movsl
ljmp
test
and
jmp
into
mov
scas
adcl
stos
fcoms
sbb
dec
and
push
sbb
out
inc
lock
pop
lea
sbb
sub
dec
xor
or
icebp
test
bound
pop
xor
sbb
jg
sbb
cmp
fbld
cmp
cmp
cmp
jb
and
lcall
mov
sub
les
loopne
cli
sbb
movsb
jbe
sub
in
mov
out
inc
lods
sbb
rcrb
push
and
loopne
aaa
push
cli
mov
sbb
test
lahf
pop
or
jno
adc
aad
test
ja
jecxz
mov
movsl
pop
stos
add
sbb
dec
scas
scas
xor
pop
and
loop
shl
pop
jbe
inc
in
lods
dec
cli
sahf
pop
stos
xor
repnz
push
scas
mov
push
aad
cmpsl
or
clc
iret
fsubl
outsl
pop
das
jp
cmp
inc
sub
flds
scas
adc
rorl
sub
pop
stc
pop
add
jg
hlt
pushf
or
push
fcmovnbe
into
fistpll
lcall
jl
mov
pop
xor
add
insl
adc
jno
push
sbb
push
and
xchg
mov
imul
adc
xor
jb
xor
test
in
cmp
mov
xchg
sub
dec
pop
lock
dec
jl
dec
dec
imul
daa
into
scas
xor
negb
mov
or
and
imull
das
ret
jne
or
adc
jnp
lahf
cmc
leave
movsb
lds
mov
dec
in
cmpsb
pop
and
mov
mov
fldcw
push
arpl
hlt
add
inc
push
jge
cmpsb
xchg
sub
aaa
add
sub
jmp
add
adc
lret
daa
adc
push
or
dec
cmp
pop
movb
enter
xchg
test
xor
push
loop
pop
cmp
sbb
cmpl
inc
adc
mov
adc
jnp
xchg
jecxz
sub
lock
les
or
fcoml
cltd
stc
jmp
into
sbb
add
mov
mov
lret
jb
scas
into
div
mov
sub
inc
insb
sub
dec
pop
pop
rclb
out
imul
dec
scas
push
lcall
jle
jae
sbb
mov
adc
bound
std
ror
orb
into
mov
or
mov
sbb
into
cmp
dec
cli
mov
adc
or
or
inc
and
clc
movsl
out
push
dec
sub
jnp
lahf
xchg
inc
xorl
push
cmp
lea
fwait
data16
pop
xor
rorl
xchg
cltd
mov
pop
sti
imul
and
pop
add
stos
xor
mov
das
jl
loope
or
xchg
fdivr
pop
sahf
dec
scas
loop
aas
dec
jmp
aaa
in
push
or
jle
shrl
setge
shll
push
scas
aad
pop
or
icebp
leave
sub
cmpsl
stos
int
xchg
sub
stos
shrb
shr
sbb
add
pop
mov
sti
test
adc
and
add
adcb
subl
mov
jg
mov
jnp
mov
ljmp
add
sbb
imul
orb
sahf
outsl
mov
in
pop
sahf
leave
lret
jecxz
cld
mov
jmp
push
cmpsl
sbb
imul
push
inc
add
fstl
aaa
and
adc
hlt
sahf
adc
xchg
dec
inc
mov
mov
ljmp
sbb
fldcw
jae
test
adc
xor
xlat
mov
or
mov
fs
cmp
jl
mov
mov
inc
in
stos
into
in
push
mov
call
pop
add
fdivrs
push
pushf
out
aam
jae
sti
cmp
xlat
les
lret
into
lds
jbe
fisubs
loope
in
repnz
mov
xchg
addr16
xor
or
sub
dec
insl
out
mov
testl
mov
cld
xor
dec
inc
popf
push
lock
ljmp
xchg
pop
in
rclb
nop
mov
pop
add
xor
hlt
adc
ret
rcrl
push
maskmovq
negl
add
sub
push
out
sbb
mov
and
xor
test
cltd
pop
mov
addr16
mov
xlat
dec
loope
imul
jae
sub
rclb
aam
jb
enter
ds
mov
stos
cmc
cmpsl
shll
sbb
dec
mov
mov
outsl
inc
jge
xchg
icebp
sarb
fistl
mov
lds
js
dec
bswap
push
and
cli
sti
lock
fimuls
scas
and
cmovbe
repnz
sub
sbb
push
cli
icebp
lret
rcl
xor
xchg
xchg
mov
add
and
or
std
add
and
gs
mov
das
mov
push
jl
add
lret
xchg
insl
aad
mov
fstl
or
dec
push
mov
jne
cmp
lahf
cmpsl
inc
pop
xor
pop
pop
sub
push
aas
pop
dec
lods
xor
jnp
push
or
lea
mov
jge
decb
daa
rorl
lret
popa
and
xlat
fsubrs
jo
sub
daa
mov
sub
bound
cmp
sbb
dec
pop
mov
sub
jecxz
aas
int3
mov
notl
outsl
sub
jne
sbb
ret
inc
cld
jge
ret
or
sub
inc
popa
xchg
gs
push
pop
dec
rolb
mov
testb
mov
xchg
in
addr16
jno
rcrb
mov
mov
or
dec
fs
rcrb
pop
jecxz
push
push
pop
rcrl
mov
mov
push
fcmove
and
pop
jecxz
out
xchg
popa
xchg
test
push
sbb
jne
inc
push
inc
mov
std
pop
pushf
or
sti
mulb
leave
test
xchg
jle
sbb
and
and
mov
js
mov
lahf
mov
inc
das
lret
mov
cmpsl
in
pop
test
negb
dec
jle
cmp
aam
push
sbb
jecxz
sub
cwtl
adc
mov
xchg
dec
orb
iret
ds
iret
push
mov
jmp
sub
dec
xchg
sbb
lcall
xchg
jo
push
cmp
mov
push
push
xor
arpl
in
add
sub
fs
inc
add
or
ja
call
int3
pop
adc
sbbl
xor
pusha
in
aad
mov
pusha
pop
fisttpl
jns
mov
outsl
insl
pop
mov
mov
xor
cmp
xchg
int
fwait
out
fdivs
ret
outsb
jmp
sbb
dec
or
cmp
mov
fmulp
rorl
inc
fistpll
dec
cmp
ja
sbb
and
jp
and
stc
scas
clc
aaa
push
addb
add
cmp
cmpb
pop
push
adc
jno
gs
imul
mov
test
inc
mov
mov
pop
inc
sub
sub
jecxz
mov
outsb
data16
pop
xor
mov
aam
push
cli
das
imul
jne
lret
sbb
or
jge
inc
cmp
daa
leave
incl
out
lods
mov
xchg
arpl
xor
rcrb
aam
cli
lods
xchg
cmp
mov
push
pop
int
dec
mov
xchg
xchg
cmc
mov
jl
aas
inc
dec
lods
mov
ret
jle
and
popa
negl
mov
outsl
add
mov
fimull
sbb
add
rcll
stc
add
mov
push
cli
sbb
stos
push
cld
je
dec
inc
mov
cli
out
call
cmpsb
push
scas
fbld
mov
inc
loopne,pn
mov
adc
xchg
and
sub
mov
outsl
lods
in
push
cltd
push
mov
ss
mov
in
pop
cmpsb
popf
insl
loope
imul
rcrb
adc
lret
xchg
hlt
daa
jnp
negl
jmp
insb
xchg
xlat
jle
lds
pushf
inc
xchg
addr16
insb
sti
scas
dec
int
insb
dec
orb
lcall
sub
sbb
or
xor
in
jae
inc
xchg
repz
insb
mov
int
pop
pop
and
and
add
lock
xchg
fistpl
jns
sub
shrl
je
mov
pop
sub
pusha
pushf
xor
xor
in
dec
dec
cli
jbe
and
dec
mov
lods
push
addr16
roll
mov
lcall
mov
or
cli
jo
jmp
in
imul
mov
call
xchg
inc
arpl
lahf
sarl
mov
and
push
dec
ss
xchg
sbb
xlat
aam
in
lcall
data16
and
mov
pop
test
jb
inc
fcoml
fisubs
cmc
ljmp
add
rcrb
call
inc
xor
dec
push
lret
sub
mov
icebp
jo,pn
rorl
jns
xchg
inc
inc
adc
inc
clc
rcrb
shrb
lahf
inc
push
xchg
pop
xchg
xlat
jb
or
and
xor
sbb
and
add
rcrb
xchg
cmp
xor
imul
into
sub
mov
sub
inc
xchg
std
in
fsubrp
cltd
test
fists
push
cmp
inc
cmpsb
push
popa
decb
mov
movsb
pop
sahf
sbb
inc
xchg
jmp
pop
fwait
in
xchg
mov
inc
sub
stos
pop
push
mov
cmp
in
mov
cmc
xor
jnp
jne
inc
ret
sub
fstps
push
mov
out
jne
mov
fimuls
inc
adc
dec
mov
xchg
sbb
gs
adc
mov
xchg
mov
or
lahf
mov
aas
hlt
insb
dec
push
push
cltd
das
xchg
pusha
daa
add
in
jp
cmp
and
mov
lahf
hlt
add
add
xor
jp
ret
imul
shrl
movsl
jl
adc
lret
ss
out
inc
mov
add
xor
fcoml
aas
mov
mov
or
dec
push
inc
sbb
cmpl
std
or
xchg
push
das
loope
push
cmp
jge
loopne
dec
dec
fsts
cmpsb
stos
sbb
sti
insb
lock
xchg
push
jnp
jmp
cmp
lods
xchg
mov
inc
stc
jge
popf
scas
shrl
adc
sbb
lahf
mov
sarl
bound
inc
jle
dec
fsts
dec
fs
and
jb
or
mov
cmpl
test
xor
js
repnz
and
gs
test
xlat
push
xor
repnz
push
xchg
loop
dec
dec
push
shll
push
push
and
ljmp
in
inc
roll
cld
or
pop
clc
mov
xchg
inc
in
orl
xchg
in
filds
mov
clc
cmp
and
jno
pop
adcl
jno
push
sbb
fwait
cld
out
fsubrl
mov
shll
push
test
or
jl
mov
out
lret
out
rorl
cmp
and
xor
cmc
mov
sbb
pop
lret
push
repnz
cmp
mov
sbb
dec
out
pop
add
xchg
mov
dec
movsb
pop
scas
jp
jns
sarl
push
cld
mov
mov
mov
movsl
out
stos
dec
int
push
mov
pushf
and
lods
jno
lcall
aad
andl
loopne
adc
lret
negb
cmp
mov
xchg
cmp
or
jnp
mov
jecxz
pop
cwtl
jl
fs
subl
test
mov
jbe
mov
jbe
dec
in
cmp
movsl
inc
jo
inc
idiv
add
xchg
sbbb
rcr
mov
sbb
push
cmp
jno
fisubrl
scas
sti
pushf
sbb
jle
and
outsb
jmp
push
lock
std
adc
adc
shll
or
ret
fisubrs
dec
push
cmp
lahf
test
sbb
lds
mov
testb
andb
flds
stos
out
xchg
into
sbb
lcall
mov
dec
or
fdivr
or
repz
cwtl
fistpll
jl
dec
xchg
sub
push
jnp
lret
outsb
in
loopne
imul
xchg
sub
int
jmp
mov
and
clc
adc
popa
xchg
mov
inc
js
dec
pop
mov
jbe
aam
mov
mov
sub
out
lods
dec
into
test
test
jp
push
aad
in
leave
xchg
pop
ss
cmpsl
ficoml
insl
cmp
mov
or
mov
fnsave
add
clc
andl
pop
insl
shrl
icebp
jnp
mov
mov
or
mov
inc
xlat
cmp
testl
xchg
mov
lods
xchg
inc
jb
subl
call
inc
jo
mov
jp
add
add
mul
xchg
ja
fstps
scas
mov
loop
pushf
push
mov
jns
inc
popf
sub
xchg
mov
lret
scas
jnp
mov
mov
mov
inc
lds
dec
add
push
lods
push
push
in
ljmp
sbb
dec
and
jnp
sbb
jl
daa
push
or
add
cmpsl
cmp
mov
jge
testl
icebp
or
test
mov
pop
rclb
outsl
pop
xor
jp
push
mov
adc
xor
sbb
pop
pop
call
cmpsl
add
in
and
mov
xor
lds
mov
repz
mov
ret
pop
sbb
stc
incb
pop
enter
ja
xor
mov
mov
es
push
jge
sub
xchg
imul
pop
push
adc
lods
inc
ret
pop
xchg
mov
add
jno
jno
in
in
sub
lahf
pop
dec
sub
movb
sbb
jmp
aas
pop
test
and
inc
push
lret
cli
inc
or
mov
xchg
nop
sbb
or
and
mov
lahf
jae
rorb
jmp
dec
pop
lcall
test
loopne
jg
das
bound
cmp
cmp
xor
push
push
cld
xchg
mov
xor
or
push
shlb
xchg
lret
pushf
cmp
fmuls
cmp
dec
adcb
mov
subl
cmpsl
xor
loope
int3
add
insb
sbb
mov
enter
push
test
xorb
neg
lret
xchg
cmc
fbld
cld
adcb
and
call
test
adc
subl
inc
and
jnp
cmpsl
push
shll
lcall
fistps
mov
mov
pushf
lahf
cwtl
xchg
cmpl
in
cmp
mov
pop
pop
pop
push
int3
sbb
jmp
xchg
nop
fcmovne
pop
js
dec
xor
fsubrp
test
stc
test
cli
fs
xchg
xor
scas
outsl
std
add
into
lahf
pop
or
in
enter
pushf
loope
sbbb
add
adc
fistpll
xchg
clc
out
int
loopne
jnp
movsl
and
dec
mov
fwait
push
pop
js
cmp
jle
sar
mov
mov
sbb
mov
add
clc
add
sbb
lds
jbe
push
aaa
data16
mov
sub
popa
jmp
arpl
mov
and
loopne
push
setl
in
push
fimuls
xchg
js
pop
jg
nop
rorl
cmp
jns
add
mov
stc
xchg
mov
adcb
lea
mov
sti
jno
mov
in
pop
sub
xchg
and
fcompl
cmp
rorl
fucom
jnp
xchg
push
jo
xchg
pop
sub
sbb
testb
dec
rcrb
testl
mov
mov
jmp
xchg
sub
ljmp
or
into
popa
cmp
and
movsl
mov
std
mov
mov
notl
lds
loop
out
or
in
cmp
repz
mov
mov
lods
mov
insb
out
jmp
loopne
adc
pusha
repnz
mov
flds
js
stos
ss
lret
dec
loope
ss
sub
pop
mov
popa
movsb
xlat
pop
sub
push
add
fld
lret
inc
push
cmc
outsl
mov
data16
cwtl
xorps
mov
rcrl
push
lcall
jbe
cmp
jge
mov
stos
sub
iret
repnz
idivl
push
pop
cld
imul
inc
inc
shll
inc
xlat
inc
sub
jo
cmp
stc
mov
dec
xchg
add
scas
inc
in
jg
mov
in
xor
sbb
in
sbb
repnz
cmp
pop
jecxz
shlb
mov
lods
cmp
shll
xchg
add
xchg
push
xchg
sub
cmp
mov
call
nop
cmp
test
stos
pop
xlat
es
ljmp
movsb
adc
test
lcall
push
inc
dec
dec
mov
das
jns
xorl
xlat
adc
lea
jl
call
lods
rcll
mov
push
aas
flds
lret
dec
sbb
loopne
and
in
cwtl
lret
rclb
inc
aaa
pop
xchg
scas
jg
lods
mov
mov
fisubl
fisubrs
mov
les
int3
inc
lods
lods
inc
rol
dec
xchg
adc
repz
xor
inc
push
out
pop
and
sbb
xor
pop
sahf
rcr
pusha
add
fwait
lahf
lock
push
mov
cs
push
es
ljmp
hlt
jno
add
or
loop
xor
shrl
enter
jge
call
sbb
fwait
inc
xor
xor
cmp
sahf
inc
pop
dec
cmp
pusha
lahf
imul
inc
rclb
test
push
ret
or
dec
fimull
in
in
mov
repnz
mov
jno
scas
lret
movsl
jno
sahf
int3
cli
mov
xchg
stc
or
and
outsl
cmp
push
sahf
jle
mov
push
std
jno
cs
push
adcb
xchg
lds
dec
xchg
cs
leave
jne
add
out
add
sub
and
and
data16
fbld
in
adc
xchg
xchg
adc
xor
xor
or
jle
mov
dec
icebp
pop
lods
mov
inc
push
mov
arpl
cmp
aad
push
and
bound
js
push
xor
imull
sub
mov
mov
fnstenv
mov
xchg
mov
nop
cmp
xor
add
xor
pushf
pop
mov
push
sbb
pop
jp
jp
fdiv
stos
fiadds
stos
xchg
imul
and
dec
fs
scas
push
jecxz
xor
add
imul
dec
xor
xchg
fidivl
xchg
pop
subl
js
mov
stos
add
movsb
sbb
idivb
mov
fadd
dec
lret
lahf
mov
mov
adc
and
push
lret
cmc
jp
dec
mov
push
push
mov
mov
in
pop
cmp
stos
fwait
mov
in
dec
lret
imul
jb
xchg
je,pt
sbb
sti
loopne
mov
mov
insb
add
cmpb
and
xor
pop
out
mov
mov
xchg
out
lcall
into
dec
push
add
imulb
dec
dec
repnz
mov
test
addr16
pop
rep
mov
out
ds
push
jge
inc
sub
pop
ja
mov
out
xorb
mov
test
or
jle
cmpb
add
or
dec
aas
fldz
aas
ret
clc
add
rclb
js
nop
subl
pop
mov
cltd
sbb
sbb
push
mov
bound
sarb
adc
push
test
push
fcmove
shll
fisubl
cmp
mov
inc
aam
cwtl
lock
insb
leave
hlt
pop
adc
shlb
aad
mov
sarb
or
jmp
cli
mov
aas
and
cli
icebp
pop
push
dec
xor
ret
pop
pop
inc
jbe
popa
test
addr16
add
subl
bound
jb
inc
dec
lods
ss
lock
addr16
mov
loopne
jecxz
rclb
jb
addb
sbb
out
mov
sahf
cld
popa
sbb
loop
push
fisubrl
cld
push
or
aam
pop
sub
in
xlat
jl
int3
cltd
push
push
in
xchg
cmpsb
mov
jmp
call
pop
test
or
in
dec
iret
cs
mov
cld
dec
scas
pop
dec
inc
lods
ja
imul
bound
in
xor
push
mov
push
aas
popl
xchg
mov
mov
cmp
ja
inc
arpl
pop
sbb
and
adc
adc
imul
adc
negl
mov
xorb
xchg
sbb
mov
pop
cli
adc
mov
stos
stc
mov
cld
repz
sbb
pop
into
xor
jno
repnz
ret
mov
scas
in
loope
ljmp
rol
adc
mov
lds
and
jno
pop
frstor
add
out
pop
gs
cmp
inc
push
sub
xchg
ds
lcall
cmp
js
rclb
fsts
shrl
cmpsb
or
fildl
jns
ljmp
sub
jg
divl
sub
mul
xchg
xchg
cmp
dec
xlat
add
adc
pop
xor
dec
aam
mov
sbb
mov
xor
pop
ss
stos
or
mov
cmp
cwtl
jecxz
or
jl
aad
jecxz
fcmovnbe
ljmp
jp
add
in
inc
rcrl
in
shlb
mov
rcr
icebp
aaa
stos
mov
push
movsl
jb
hlt
adc
out
test
jbe
sbb
daa
push
xchg
dec
push
icebp
and
cmp
mov
xchg
sub
or
ja
mov
inc
das
xchg
dec
mov
aas
push
push
fsubr
sahf
mov
lods
mov
ljmp
sub
jae
push
adc
mov
out
add
es
out
lahf
ret
arpl
fnstcw
adc
adc
lahf
ljmp
dec
sub
shl
lret
adc
ret
push
sahf
ret
and
ds
pop
and
imul
sub
push
inc
jg
call
xor
lahf
push
in
and
mov
scas
js
or
adc
sbb
or
test
mov
add
enter
xlat
jne
cmp
test
lcall
imulb
cli
dec
jg
loopne
jb
dec
rcrl
dec
jns
shlb
jae
mov
push
xor
dec
das
add
pop
arpl
add
jmp
push
ss
mov
mov
and
shl
pop
je
cs
dec
clc
push
int3
cmp
mov
cli
scas
cli
in
adc
movsl
dec
jns
pop
in
insb
mov
stos
inc
mov
mov
ss
insl
pop
filds
inc
fcomip
setl
movsb
jb
addl
mov
jo
addr16
push
xchg
rcr
mov
lret
adc
cmp
mov
lock
mov
out
decl
rcrl
loop
push
iret
cli
lea
mov
jecxz
xchg
push
dec
adcb
leave
sbb
loop
xor
jo
push
mov
add
sub
cmc
outsw
and
push
mov
ret
dec
jbe
cld
xor
sti
lock
test
jg
in
inc
outsb
dec
pop
fimuls
mov
sti
hlt
cmc
out
out
lahf
testb
mov
negb
inc
clc
dec
loop
mov
xchg
add
leave
dec
cli
iret
insl
mov
popf
test
push
or
or
fdivp
lods
fs
pop
jae
bound
frstor
leave
inc
adc
push
subb
adc
inc
addr16
aaa
es
pop
jo
inc
pop
les
lock
or
clc
cmp
jecxz
ja
popa
cmc
xor
clc
popf
out
cmp
cmp
sbb
cmpsl
negb
push
ret
mov
xchg
ja
lcall
mov
pop
loope
or
jge
fisubrs
int3
mov
popf
daa
dec
cmp
in
ja
or
rclb
pop
add
aaa
mov
enter
jo
int3
lahf
add
inc
xchg
ds
aam
rol
jp
int3
aam
mov
cmpsl
xor
adc
cs
iret
and
dec
pusha
bound
adc
jb
iret
cltd
push
mov
mov
out
cmc
inc
add
stc
xchg
mov
sub
adc
sub
lds
vcvtsd2ss
aas
lea
pop
test
sbb
flds
mov
mov
data16
rcr
andb
popf
sub
mov
js
cli
cli
adcb
dec
icebp
cmpsb
mov
dec
or
nop
pop
outsl
jns
inc
xchg
or
test
push
cmc
mov
adc
inc
shrb
pop
stos
mov
cmp
movswl
loop
loopne
lret
dec
mov
aaa
les
xchg
cld
cmp
es
insb
leave
xor
pop
pop
repnz
int
mov
lret
jae
aad
mov
push
cmp
test
sub
xchg
jp
push
ror
imul
fwait
popf
adc
mov
or
mov
repnz
pop
xchg
test
loopne
jne
sahf
pop
pop
xchg
and
outsb
inc
stc
ret
rclb
xchg
sbb
icebp
js
imull
loop
jbe
fxch
pop
jge
cmp
fsts
inc
int
and
scas
lock
sub
sahf
popa
xlat
xchg
sbb
shlb
insb
inc
int
insb
xchg
nop
jne
push
int3
mov
mov
insb
orb
cmpsl
mov
push
cmp
and
xchg
mov
loopne
je
mov
out
shl
push
subl
jne
and
add
popa
mov
cld
cwtl
pop
out
cmpsl
aad
mov
fcoml
movsl
sub
aaa
cltd
ds
or
popl
cmp
movsb
xlat
test
lret
jecxz
out
pop
sub
mov
inc
lret
pop
mov
inc
into
push
mov
fsubrs
mov
test
and
outsl
int
lret
sbbb
jmp
scas
enter
sub
push
xchg
cs
insb
stos
mulps
out
inc
arpl
inc
movsb
loopne
dec
sub
or
adc
xchg
jp
lahf
xor
jb
sbb
cmp
popf
clc
in
enter
mov
loopne
xchg
mov
inc
lock
inc
jns
cmp
decb
jno
or
fcmovnb
and
test
fucomi
cmp
lret
bound
call
data16
pop
imul
jb
jae
inc
fwait
test
jle
lock
aaa
rcll
jmp
mov
out
adc
aas
call
push
not
pusha
cmpl
hlt
dec
xor
or
sahf
inc
sti
push
sub
pop
mov
inc
sbb
fs
cld
shrl
fwait
repnz
aas
dec
aam
arpl
rolb
les
sbb
pop
sbb
push
sbb
mov
enter
jbe
inc
cmp
inc
pop
jle
jae
and
mov
cmpsb
jnp
pop
xor
fisubs
mov
aaa
sbb
mov
arpl
mov
dec
mov
lds
lods
lea
je
stc
pushf
and
repz
mov
jecxz
fwait
mov
arpl
hlt
in
xor
sbb
inc
jge
xor
push
xchg
arpl
ret
xor
icebp
cmc
xor
icebp
int
lods
push
pop
jae
fwait
mov
mov
jbe
and
in
lock
sbb
push
test
sub
shrl
add
xchg
jnp
sbb
fisttpll
inc
mov
lahf
add
mov
out
leave
ja
addb
mov
insb
mov
mov
add
lods
and
inc
out
test
sbb
cli
mov
and
in
dec
popa
xor
push
dec
rclb
mov
sub
clc
sub
repz
imul
out
ds
out
into
jl
lods
push
push
mov
les
cmp
lret
jp
aam
xor
adcl
jno
xchg
mov
hlt
cmp
sub
or
xchg
fnstenv
iret
ret
mov
repnz
jb
imul
jo
jno
xor
andl
mov
xchg
imul
mov
pop
jmp
push
frndint
loope
rolb
adc
add
mov
pusha
sub
cmp
imul
imul
stos
testb
hlt
sahf
jecxz
cmp
push
in
cs
js
or
adc
movaps
add
shll
jp
fcoms
pop
push
sub
repz
xor
in
add
lock
mov
cmp
push
lock
jb
fwait
mov
sub
pop
rcrl
mov
dec
negl
mov
mov
repnz
iret
pop
pusha
and
popf
nop
mov
icebp
addb
dec
rcll
scas
mov
popl
dec
cmpsl
test
cmc
or
add
rcrl
insl
sub
roll
in
lahf
jl
xchg
sbb
cwtl
jmp
fwait
mov
push
out
dec
icebp
mov
mov
call
and
fnsave
adc
jo
xchg
call
lcall
incl
lea
loop
cltd
sub
jp
inc
jmp
cmpsb
pop
mov
jg
in
insb
insb
xor
stos
sti
or
fisubl
push
mov
int3
mov
in
xchg
jecxz
aaa
add
mov
shr
cmp
sbbb
sbb
sbb
call
dec
dec
mov
xor
jno
mov
sbb
add
or
cmp
push
sar
stc
lods
scas
ds
xchg
pusha
pop
lods
int3
arpl
lea
or
in
comiss
lock
out
mov
clc
ror
mov
mov
push
in
fisubrs
dec
cmpsb
int3
and
mov
mov
leave
fildll
adc
add
es
jb
jecxz
push
sub
adc
jb
sbb
cli
cmp
xchg
inc
mov
push
lahf
xor
xorb
lea
int3
mov
inc
sub
ljmp
pop
subb
push
or
add
pusha
dec
in
ret
sub
orl
leave
xor
push
addr16
test
sub
inc
lahf
mov
xor
mov
inc
mov
xor
into
addb
push
scas
lock
loope
and
adc
lcall
and
add
test
jg
jo
sbb
sahf
dec
cmpsb
fisttps
adc
outsl
cmp
and
mov
sbb
sub
push
sub
mov
mov
push
mov
add
and
mov
imul
scas
inc
or
jle
mov
inc
push
push
adc
sahf
add
out
push
push
add
imull
pop
in
dec
fistps
scas
je
and
stos
int3
scas
pusha
dec
cltd
and
lock
repnz
popa
inc
cmp
and
and
cmp
sbb
push
mov
mov
shll
jmp
lods
sub
stc
call
push
and
iret
xchg
shll
mov
mov
jb
inc
mov
mov
xor
mov
fisubl
jl
ret
out
sub
push
imul
jb
in
sbb
aam
sbb
pop
scas
popf
lahf
xor
jo
mov
xchg
jno
fisubrs
xchg
cmpsl
mov
fdivl
pop
xchg
dec
cmp
pop
add
inc
pop
aad
mov
hlt
pop
insl
das
outsl
or
pusha
cmc
sub
sahf
jmp
dec
jo
mov
push
sub
test
fs
lods
xor
sub
ljmp
repnz
sub
shll
mov
out
mov
xor
rolb
in
leave
add
push
push
outsb
pop
mov
adcb
sahf
leave
lods
lret
stc
or
rcrl
xchg
lret
test
idiv
arpl
movsb
cld
fmul
xlat
sarb
pop
lret
and
outsb
and
pop
pop
jecxz
icebp
clc
and
gs
inc
push
mov
or
clc
mov
push
mov
dec
jmp
add
insl
ja
jmp
add
mov
xor
fdivs
sub
je
bound
mov
sbb
addr16
lds
pop
fsubs
fistpll
add
adc
jmp
cmp
rcr
mov
lahf
adc
ud0
xchg
cld
sub
sub
cmpsl
pop
ficompl
inc
pop
call
or
outsl
and
ret
pop
pushl
cs
add
mov
call
cmp
push
xchg
push
dec
stos
test
arpl
pop
mov
push
out
sub
mov
dec
cmp
xchg
jle
jbe
lock
subl
jecxz
fldt
add
adc
data16
pop
adc
inc
clc
jge
push
leave
sub
nop
int3
dec
lock
dec
adc
lret
mov
jnp
es
jno
ljmp
in
or
fnsave
scas
adc
cli
mov
lret
out
cmpsl
lret
adcb
cmp
dec
xlat
cmc
rol
adc
xchg
sub
inc
sub
rcrb
call
and
sbbl
mov
cmp
jae
xchg
in
outsb
or
sub
ja
jnp
xor
mov
xchg
out
xor
cmp
addl
mov
std
out
sbb
mov
xchg
in
fs
mov
das
cltd
rcr
and
pop
mov
lret
sbb
mov
mov
sub
les
cwtl
jnp
pop
inc
pop
test
test
loop
sub
pop
or
pop
push
jno
out
mov
jae
inc
or
repnz
dec
or
fsubl
or
mov
sbb
push
scas
add
cmp
cmpsb
sub
xor
dec
cs
push
rclb
and
inc
sarl
mov
adc
xchg
add
cmc
jo
xchg
data16
loopne
inc
aas
shrl
xor
sbbl
mull
xor
sti
and
das
xor
lret
jbe
roll
iret
test
aaa
pop
add
dec
push
out
inc
fstpt
ljmp
mov
andl
ret
fcoml
cmp
stc
inc
xor
sub
add
xor
push
jnp
push
ret
cmp
inc
cltd
mov
mov
in
popa
dec
clc
jns
out
mov
ret
mov
jns
dec
popa
pop
cmp
push
pop
scas
arpl
adc
std
das
mov
call
mov
adcb
rcrb
xchg
xchg
pop
push
lock
nop
mov
subl
jo
lahf
or
push
cmp
ret
test
xchg
add
xchg
insl
imul
push
or
in
pop
cmpb
pop
adc
cmpb
xlat
mov
xchg
add
mov
or
or
pop
arpl
and
add
inc
mov
pop
js
cmp
lea
nop
lds
mov
sub
cmpsl
mov
xchg
xchg
push
fadd
add
jp
or
sub
jmp
jmp
jecxz
adc
loopne
mov
pop
inc
fbld
or
mov
jge
mov
cmpb
mov
adcl
mov
ret
adc
fadds
lods
mov
fnstsw
inc
loop
cmc
add
adc
xchg
das
mov
mov
add
ret
js
lods
mov
mov
imul
jnp
mov
rorl
pushf
mov
addr16
sti
data16
xchg
dec
mov
adc
xor
stc
fldt
insl
lahf
sub
mov
shlb
sub
or
jl
inc
gs
icebp
cmp
sbb
mov
xor
je
ljmp
andl
dec
outsb
or
adc
cli
jne
pop
fisttpl
inc
aaa
dec
sub
and
testb
incl
xchg
dec
imul
lods
cmp
push
pop
mov
outsb
pop
adc
fstp
xchg
popl
stc
add
decl
cmp
test
shlb
cmp
push
fcomip
subl
lret
cmp
ret
or
popf
scas
shll
fnsave
out
loope
lods
std
fnsave
loopne
mov
inc
cs
push
ret
lret
cmp
xor
mov
mov
out
movsb
sbb
test
outsl
roll
in
xchg
cmp
outsb
jae
dec
push
scas
cmp
mov
dec
sbb
clc
test
dec
rcr
mov
insb
imul
adc
mov
sarb
push
test
cmp
add
lds
ficoms
aam
jbe
int3
lods
insb
adc
jle
xchg
inc
mulb
daa
divl
inc
pop
push
lahf
mov
adc
inc
popa
dec
mov
push
cli
stos
dec
lds
bound
xor
lea
mov
inc
out
inc
lahf
xchg
mov
fsubs
in
mov
xor
scas
push
sub
scas
cmpsb
xchg
jl
aam
pushf
hlt
add
adc
fisttpl
pop
mov
les
int3
xchg
in
push
cmp
jl
pop
nop
xor
mov
cs
test
jg
ja
das
test
xlat
dec
xor
mov
imul
adc
ljmp
ss
cmpsb
xor
sub
jns
inc
jb
inc
xor
clc
in
mov
jne
inc
lret
fs
fistl
adc
out
adc
add
mov
ret
int
int3
xchg
sbb
xor
or
aad
test
cmpsb
in
lds
mov
pop
aam
mov
add
inc
jne
xor
shl
xor
pop
sbb
sbb
mov
mov
ficompl
mov
imul
adc
mov
sahf
lcall
mov
dec
xchg
test
push
mov
mov
jnp
ljmp
and
sarb
mov
outsb
dec
fsubrp
and
mov
pop
mov
fs
fmuls
ja
sarl
rorb
mov
cli
movsl
pop
test
xchg
and
adc
dec
repz
dec
xor
in
lcall
push
fstpl
in
daa
push
and
loopne
shrb
dec
nop
bound
es
push
minps
pop
push
inc
push
cmp
or
pusha
jnp
cmpsb
std
pop
sbb
int
jns
or
xchg
fs
mov
inc
hlt
push
xlat
aad
pop
push
mov
loopne
movsb
test
push
inc
inc
cmp
sbb
mov
push
movsb
dec
inc
jno
mov
cmp
jnp
shlb
xor
sbb
test
rolb
jecxz
and
mov
sbb
xor
pop
dec
psubd
addb
or
hlt
hlt
sbb
sahf
mov
lahf
or
test
addl
mov
stos
pop
or
jno
out
adc
mov
mov
mov
sbb
jle
in
into
sbb
mov
pop
inc
rorb
adc
ret
lock
test
sub
aaa
out
leave
jbe
imul
and
mov
data16
subb
mov
inc
ret
jbe
fldt
and
sub
push
and
push
and
xor
mov
repnz
inc
fwait
jle
sbb
xchg
scas
and
mov
jnp
lret
mov
jb
mov
mov
pop
rorb
mov
jnp
mov
push
aad
sbb
in
rcl
push
fists
in
inc
mov
xor
cmc
inc
out
out
dec
cmp
pop
mov
fstps
push
into
hlt
sbb
inc
or
sub
add
hlt
ja
add
lret
fisubrl
mov
jb
jns
sub
jg
pop
sub
xchg
test
inc
stos
pop
fsin
mov
xchg
xorb
jmp
push
nop
push
jns
jle
push
lods
xor
and
ret
into
arpl
mov
mov
jo
xor
mov
adc
jmp
mov
bound
push
es
fisubrs
aas
ljmp
xor
out
cmp
pop
test
adc
inc
std
dec
in
push
test
mov
inc
pop
cmp
push
test
rcr
es
mov
cmp
push
xchg
pop
mov
shlb
out
enter
ja
sub
icebp
imul
push
sub
jecxz
xchg
mov
pusha
dec
mov
mov
sub
dec
imul
add
insb
je
into
ret
je
push
xlat
lock
cmp
pop
xchg
xlat
lock
sub
ljmp
mov
sahf
mov
int
fs
data16
pop
mov
ss
mov
fwait
sub
mov
pusha
addr16
mov
in
add
and
dec
mov
lods
dec
fcoms
mov
mov
es
sti
mov
xchg
rcll
cmp
dec
sti
pop
pop
jae
or
lret
mov
addr16
je
lods
ja
movsb
push
insb
mov
scas
pop
lea
sbb
shrl
outsl
insl
fwait
mov
sbb
in
lahf
popa
dec
xor
pop
cmc
sub
gs
in
test
popf
add
out
outsl
jle,pn
paddw
adcl
daa
inc
adc
leave
ds
or
std
sbb
jmp
push
xchg
test
jp,pn
pusha
push
int
jecxz
pop
ret
xor
dec
insb
mov
or
adc
jno
popf
repnz
mov
sarb
dec
adc
in
mov
sub
aaa
xchg
adc
je
nop
fcomps
add
inc
sub
repz
mov
popa
lea
cmpb
sub
adc
sbb
stc
scas
sub
xchg
xchg
mov
mov
jbe
or
arpl
mov
dec
sub
stc
popa
cmp
aam
mov
in
mov
out
xchg
mov
out
loope
negl
cmp
sub
and
and
aad
xchg
mov
sub
test
adc
out
stos
cmpsb
mov
fimull
arpl
adc
sahf
mov
sbb
xchg
add
aad
adc
sar
cmp
xchg
loope
pop
mov
sti
adc
or
test
inc
cmp
movsb
pop
pop
jo
pusha
ss
stos
xchg
pop
add
sti
xchg
jle
sbb
subb
call
dec
xlat
jmp
and
mov
jmp
out
adc
inc
push
inc
inc
cmp
lea
cs
out
dec
sub
xchg
repz
cmpsl
xchg
pop
fwait
sub
push
js
call
xchg
repz
pop
test
inc
cmpsl
mov
pop
jmp
xlat
rcrb
cld
pop
loop
mov
popf
mov
or
cwtl
sub
adc
mov
lds
ret
pop
bound
call
push
inc
adc
xchg
movl
and
inc
cmp
or
nop
mov
mov
xor
xchg
lcall
xchg
std
sub
cmp
sbb
pop
lret
ret
add
xchg
sti
pop
faddp
cmp
in
das
fsubr
out
ja
stc
push
loope
sbb
pop
mov
mov
lods
mov
call
and
rcll
aam
dec
mov
cmc
jge
dec
jbe
xor
and
cmp
or
outsb
cmp
inc
sahf
mov
mov
push
xchg
jle
xchg
push
jae
mov
sti
add
mov
loopne
push
ss
or
jecxz
cltd
nop
lds
clc
pop
mov
punpcklwd
cs
lcall
mov
insb
fwait
lret
and
out
adc
adc
inc
ljmp
mov
pushf
in
mov
or
push
test
lock
lock
pop
xor
rcrb
add
sahf
dec
adc
mov
dec
cmp
push
iret
jb
sbb
xor
pop
scas
push
cmp
sub
push
add
pop
insb
push
rol
rclb
imull
inc
add
lods
dec
lods
xorl
jns
xchg
and
jae
sbb
dec
inc
pushf
shll
adc
xchg
push
fs
push
pop
jno
fdiv
jg
das
loope
pop
in
xor
pop
mov
pop
push
stc
lret
pop
bound
and
sarb
sbb
mov
mul
cmpsl
push
jg
dec
xor
adc
cmc
sahf
bound
in
mov
and
mov
cld
mov
pop
xchg
add
movsl
or
es
stc
aaa
cmc
in
lea
fidivs
xchg
movsl
jmp
adc
imul
or
int
mov
mov
sub
push
imul
ret
push
push
pop
test
js
sub
pop
js
jne
ret
std
cwtl
sahf
jle
imul
mov
push
shll
outsl
adc
lds
fistps
ja
sbb
mov
sahf
iret
pop
mov
xchg
dec
dec
stos
mov
cmc
adc
cmpsl
lea
scas
push
mov
xchg
shrb
lods
out
inc
lock
fldenv
xor
movsl
mov
cli
aaa
cmp
mov
add
push
or
in
xlat
fmull
and
inc
repz
movsl
jne
jbe
sbb
in
sub
jne
and
mov
out
subl
aas
iret
jl
enter
out
into
inc
xchg
js
bound
aaa
sbb
mov
mov
imul
mov
pop
jo
cld
shll
xor
pop
bound
mov
mov
jp
hlt
push
popa
push
mov
enter
mov
lahf
dec
cmpl
jno
sbb
lret
inc
sub
sbb
dec
scas
push
leave
mov
xorb
cmp
mov
jle
push
cld
loopne
xchg
mov
js
add
dec
and
and
jnp
mov
aam
pop
pop
xor
mov
mov
fldt
cmc
xor
setbe
pop
xor
mov
sub
or
jnp
pop
popa
pop
xchg
mov
subl
jle
cmp
jne
push
dec
loope
cmp
addr16
out
mov
dec
imul
jecxz
xor
cs
adc
loope
rcll
lods
mov
sub
loop
xchg
cmp
int
leave
mov
mov
cmp
xchg
xchg
call
sbb
cmp
fidivs
sbb
pop
sbb
or
jle
add
aas
or
orb
test
call
add
scas
mov
sub
push
inc
repnz
push
pusha
adc
cmp
sub
push
mov
cld
xchg
pop
mov
push
push
jnp
in
or
mov
mov
add
pop
fdivs
mov
mov
sub
mov
out
es
pop
jne
jecxz
mov
rol
ret
ljmp
cmp
mov
es
hlt
les
gs
movsl
test
xchg
pop
pop
jmp
subb
mov
mov
add
je
js
dec
pusha
cmpsl
aam
fsts
fisttpl
adc
scas
adc
test
sub
std
push
lret
out
lret
pop
mov
inc
pop
jo
cmc
pop
or
divb
jbe
or
in
pushf
inc
jo
pushf
popf
icebp
push
insb
incl
or
mov
das
and
inc
sbb
mov
into
push
int
in
mov
shrb
cmc
scas
insb
cld
gs
cmp
loopne
pop
lret
enter
jge
sahf
xor
enter
rorl
clc
mov
xor
ss
fimull
sbb
imulb
mov
cmp
incl
cld
scas
sbb
mov
bound
inc
push
dec
add
lcall
daa
sub
add
pop
pop
cmp
push
sub
imul
dec
addr16
adc
sub
sub
or
ror
repnz
or
das
pop
mov
add
adc
dec
in
rorb
mov
lods
test
aaa
iret
int3
frstor
adc
jle
lcall
daa
mov
push
jae
dec
movsl
inc
and
scas
jg
add
sbb
rcpps
lea
and
pop
daa
gs
lret
mov
mov
cmp
jg
sub
mov
leave
xchg
sbb
and
pop
mov
jmp
or
jp
add
mov
xor
cs
cmp
and
sbbl
mov
xor
ss
test
out
lods
mov
adc
ss
sarb
pop
jmp
push
sbb
xchg
in
adc
mov
cmc
stos
pop
jne
cmp
push
adc
jmp
dec
cmpsb
add
out
sbbb
cwtl
and
mov
testb
xor
subl
xor
jno
jle
outsl
push
xchg
pop
push
ja
jb
popf
int3
popf
pushf
movsl
jno
nop
sub
outsb
xchg
lret
dec
inc
lret
xchg
pop
mov
mov
mov
loop
xchg
lods
cmpb
xchg
dec
call
arpl
xchg
ret
sahf
xchg
dec
xchg
cmp
pop
fyl2x
enter
dec
cmp
shll
mov
ja
mov
cmc
adc
jge
add
cld
jbe
lods
push
adc
mov
loop
add
pop
sub
and
fistps
ret
cmp
ja
push
outsl
outsb
mov
inc
loopne
insb
cltd
rcrb
rolb
pop
movsb
push
lret
push
inc
dec
fwait
test
mov
jne
ret
gs
mov
jae
push
sbb
lods
rcr
pop
insb
cli
out
adc
pop
mov
leave
jcxz
out
mov
push
enter
sar
scas
xchg
pop
mov
push
push
xor
insb
into
mov
mov
es
cvtdq2ps
xchg
lds
pop
aaa
sub
inc
dec
xor
add
call
sar
add
mov
in
xchg
in
mov
xchg
mov
jg
and
push
cmp
or
out
adc
xor
pushf
mov
and
in
xor
daa
out
cmc
rorb
fwait
lcall
sub
adc
mov
mov
adc
xchg
test
pop
adc
nop
imul
xchg
in
jge
inc
add
mov
xlat
repz
lds
ljmp
jmp
int
push
fcmovbe
or
inc
mov
push
loopne
adc
divps
adc
pop
pushf
lcall
cmpb
sbb
out
outsl
cmp
adcl
sarl
mov
pop
in
xchg
dec
jnp
push
xchg
dec
mov
fiaddl
mov
sub
sbbl
jle
ljmp
inc
arpl
lret
mov
ss
subb
xor
mov
xchg
dec
out
orl
call
pop
cmc
push
lret
imulb
xchg
insl
les
bound
dec
add
stos
push
lock
je
pushf
sbb
cmp
fisubrl
decl
mov
or
mov
loopne
cmp
scas
mov
lcall
xchg
js
aas
enter
sub
xlat
popf
mov
mov
dec
aaa
arpl
movsl
dec
sbb
mov
in
sbb
sub
roll
xchg
add
mov
push
repnz
sbb
mov
addl
iret
test
sbb
ficoms
mov
sub
mov
rorb
mov
and
ljmp
std
jnp
mov
sti
ljmp
sahf
push
xor
mov
call
add
cmp
xchg
mov
insb
xor
imul
mov
xor
aam
jle
add
dec
mov
xchg
sub
mov
cs
out
stos
std
ret
xorl
xlat
testb
xchg
sahf
test
aad
pop
stc
inc
ds
popa
leave
xchg
shrb
push
int
mov
dec
mov
lods
cmpsb
pop
mov
pop
and
lds
bound
or
lock
sbbl
mov
jle
jnp
push
leave
in
add
add
test
cs
mov
and
lcall
push
scas
sti
rorl
or
push
mov
cmp
lock
movsl
jbe
or
push
icebp
xchg
cmp
jg
xchg
gs
xor
ret
xchg
in
call
daa
jae
mov
mov
xor
int
xor
jne
sahf
repz
test
mov
cmp
adc
xor
adc
xor
inc
cmp
xchg
xchg
rorb
fldenv
cmp
lods
or
jae
call
push
add
pushf
add
mov
push
add
xor
adc
cltd
cmp
fwait
xor
add
in
jnp
push
and
insb
leave
and
inc
ds
shrl
mov
push
add
adc
ja
daa
icebp
cmp
or
pushf
inc
mov
dec
xchg
ja
mov
cmc
jns
in
jge
xor
scas
fidivl
fidivrl
jle
cli
cmp
sbb
cltd
dec
stos
inc
cmpsl
jne
push
fs
push
lods
mov
xor
mov
inc
mov
nop
rorl
fs
jb
icebp
pop
addr16
scas
mov
aas
daa
stos
enter
aaa
inc
lcall
fistps
jp
add
push
dec
pushl
sub
mov
adc
mov
mov
in
ficomps
hlt
and
int3
pop
mov
adc
push
push
dec
push
call
pusha
movsb
sbb
mov
sbb
mov
pop
cmp
cwtl
mov
int
mov
jp
dec
push
adc
fsubrl
jae
xor
scas
dec
loopne
in
rcrl
loop
cld
inc
std
push
ret
push
jo
push
jle
incb
fldt
lea
pop
aas
in
inc
fistl
imul
xchg
cmp
xor
gs
mov
mov
outsb
popa
mov
aam
xlat
or
xchg
pop
pop
rcr
movsb
scas
aam
mov
iret
inc
adc
enter
ficoms
hlt
add
mov
inc
add
rorb
pop
mov
or
jnp
test
leave
fmul
mov
mov
test
and
out
xchg
add
scas
sti
push
sbb
outsb
adc
pop
add
xchg
lahf
adc
inc
mov
cs
lret
cmp
call
imull
loope
sbb
sub
fstl
mov
xchg
cwtl
cmp
dec
adc
popf
mov
test
ja
test
movl
and
lea
clc
fldl
xchg
sub
mov
negb
xchg
cli
movsl
fwait
jbe
xchg
adc
lret
mov
inc
das
xor
sub
fstpl
inc
or
and
int
imul
xor
loop
or
or
movsb
pop
rcr
and
lret
loope
mov
jns
clc
mov
xchg
or
lods
loop
in
xor
dec
lock
mov
push
ret
lahf
pop
jb
xchg
nop
cmp
xlat
addr16
fbld
jmp
in
sbb
popa
in
mov
jnp
fisubs
imul
and
sub
repz
orl
inc
jle
adc
push
icebp
cli
arpl
inc
or
and
arpl
out
and
movsb
into
insb
lock
push
xchg
dec
or
sub
mov
jb
xorl
pop
mov
cli
adc
call
lret
add
inc
data16
les
incl
fucomip
enter
dec
dec
and
mov
aas
dec
jle
outsl
mov
in
push
das
jne
imul
lret
pop
sub
inc
adc
mov
mov
sub
or
xchg
int3
jbe
clc
dec
or
cmp
mov
dec
xchg
push
out
mov
in
mov
jecxz
inc
ljmp
repz
andb
call
xchg
pop
ficompl
xchg
cmp
inc
push
lock
insb
hlt
xchg
andb
xlat
jp
aam
outsb
aad
scas
lods
mov
insb
icebp
in
mov
data16
jo
dec
cmp
in
aas
pop
xchg
xchg
and
mov
dec
in
sti
pop
stos
lahf
dec
xchg
out
pushf
movsb
push
lds
scas
mov
shlb
xlat
adc
shlb
push
and
popf
push
pop
mov
rclb
jns
test
lock
push
xor
jg
or
push
push
jo
out
fldt
cmp
mov
inc
xchg
shrb
arpl
sti
mov
out
pop
jbe
jb
subl
cmp
dec
cmp
dec
imul
imul
test
sti
out
pop
mov
out
roll
insl
mov
ret
movsb
jno
jae
lock
hlt
add
outsb
xchg
int
cmc
mov
nop
aam
cli
out
xchg
inc
mov
outsl
jg
daa
lcall
es
mov
sbb
inc
mov
jne
iret
inc
pop
pushf
ret
or
mulb
lret
sub
xchg
and
inc
test
jno
mov
test
je
cmp
sbb
pop
sbb
inc
int
xchg
repz
lret
orb
testl
rol
insb
xlat
jmp
in
mov
inc
mov
push
mov
mov
flds
adc
in
stc
xor
sahf
xorl
popa
mov
jmp
mov
mov
mov
add
js
inc
int
scas
push
sbb
scas
xor
stos
push
dec
aaa
out
push
jge
pop
out
enter
leave
dec
repz
aas
je
inc
sbb
pop
insb
in
or
push
pop
xor
pop
sub
mov
sub
xor
scas
pusha
aad
adc
data16
sahf
mov
ja
or
add
xor
outsl
ret
pop
or
repz
inc
jg
mov
cwtl
push
les
mov
pop
dec
jne
iret
xlat
jo
addl
aas
scas
sti
imul
mov
scas
test
loopne
icebp
mov
push
in
push
ss
repz
orl
inc
push
adc
xchg
repnz
mov
sub
enter
in
pop
icebp
iret
push
sub
inc
rorl
bound
int
leave
cmpsl
aaa
cmp
cwtl
push
adc
mov
sub
inc
sub
sub
jne
js
push
sbb
mov
xchg
lcall
neg
sub
repnz
add
add
xor
mov
sbb
movsb
pop
lcall
stos
lods
je
repz
sub
in
inc
ss
mov
pop
mov
mov
and
or
std
fcmovnu
and
xchg
cmp
and
mov
pop
rorl
ret
das
push
fildl
mov
and
xchg
imul
or
inc
push
in
lret
shr
xor
mov
add
clc
int
xchg
shrl
shl
xor
imul
xchg
int
mov
cli
push
sti
add
xchg
pushf
xlat
dec
iret
fimull
adc
stc
mov
bound
add
mov
aad
xchg
add
adc
fldt
stos
adc
add
pop
sti
mov
scas
push
cmc
mov
xlat
mov
pop
jo
dec
ja
mov
jne
and
mov
sahf
lds
or
adc
imul
add
xchg
push
iret
insl
xor
cmp
ljmp
xor
pop
adc
cmc
repz
push
sbb
sti
dec
data16
sub
and
das
mov
subl
and
cmp
loope
xor
sbb
gs
pop
adc
push
dec
ja
mov
jo
fs
mov
xchg
pop
popf
movsl
xor
jl
aam
lods
lock
lds
sahf
sahf
xchg
xor
add
bound
repz
push
xor
push
lods
sarb
movsl
jno
cli
cmc
dec
mov
push
rorb
mov
mov
pop
push
inc
ss
mov
outsb
push
movsl
sbb
into
jo
popf
and
cmpsl
push
xor
push
sub
mov
mov
hlt
in
jno
xchg
inc
or
or
cmp
sbb
adc
add
cmpsl
cmp
add
movsl
mov
xchg
pop
aad
jl
pop
mov
daa
add
push
xchg
jns
cmp
mov
fistl
lds
sub
cli
and
cli
dec
push
xchg
xabort
cmp
lcall
imul
push
push
sub
jbe
sahf
add
jnp
cmc
push
bound
mull
or
pop
daa
jno
clc
scas
jmp
cwtl
nop
jg
gs
mov
dec
add
inc
loopne
xchg
lret
pusha
push
aam
fcomps
jp
and
rorb
loop
lret
sub
cwtl
lcall
in
bound
jp
sti
xchg
pop
nop
mov
das
iret
sbb
push
lahf
xchg
sub
lret
mov
sub
mov
sbb
loopne
adc
gs
inc
call
out
add
sti
icebp
mov
pop
cltd
cmp
gs
push
testl
mov
cmpsl
iret
jo
push
ss
dec
lret
jo
fldcw
cwtl
inc
fisubrl
xchg
sbb
repz
fimuls
decb
mov
xchg
lcall
push
dec
cs
dec
pop
add
dec
dec
push
sub
imul
mov
es
inc
jecxz
shll
addl
and
add
push
scas
adc
bound
mov
mov
sub
lds
cmp
jb
jne
lahf
scas
cs
and
xchg
mov
out
pop
add
add
icebp
mov
pop
mov
mov
xchg
idivl
mov
dec
sahf
push
not
fwait
xor
xor
mov
pop
bnd
jmp
xchg
pop
jp
and
push
push
popa
fwait
xchg
or
mov
pop
out
repnz
sbb
ss
and
xlat
xchg
mov
ret
ds
scas
insl
sar
fadd
mov
movsl
adc
addr16
rcr
gs
fists
mov
jae
mov
out
pop
sub
adc
clc
mov
int3
cltd
clc
subl
lods
in
push
jp
xchg
jl
jbe
in
jae
mov
ds
jecxz
ja
pushf
mov
inc
jge
fiadds
push
repz
ja
addr16
int
ret
mov
add
mov
fstpl
in
or
pusha
inc
aas
sub
or
push
inc
outsl
sar
and
cmp
inc
out
pop
jg
mov
ficoml
loope
xor
cmp
push
out
cmp
into
add
mov
or
pop
iret
add
jl
icebp
dec
jo
jl
jnp
or
lcall
push
pop
shll
iret
gs
jmp
add
xchg
inc
roll
fstpl
pop
sub
adc
lcall
fbld
stc
fmulp
mov
popa
rol
dec
lea
sbb
sbb
rcll
cmp
stc
push
inc
pop
sbb
ficoms
mov
push
scas
jns
cs
rorb
push
and
xor
outsb
mov
pop
xchg
xchg
push
fidivs
test
rolb
aas
jbe
movsl
jo
lods
in
pop
add
cld
dec
adc
sahf
mov
popf
inc
sub
mov
xor
popf
arpl
and
sahf
std
sub
pop
or
mov
push
push
pop
jg
ror
mov
dec
cs
xlat
push
mov
sub
cmpsb
dec
test
inc
and
cli
aad
and
std
mov
or
sbb
inc
ret
jge
mov
inc
out
lea
sbb
and
scas
jns
cmp
lds
in
push
mov
xchg
jo
xlat
jmp
shrb
lret
inc
in
aad
mov
cmc
lods
cs
mov
bound
lret
mov
sahf
imul
dec
xor
jle
cmp
cli
pop
adcl
mov
in
cmc
xor
or
orb
js
cli
stos
das
sub
fxam
pop
dec
cmp
pop
ja
jg
and
add
mov
pop
bound
popa
aaa
and
xchg
and
ljmp
xchg
add
adc
adc
mov
scas
test
addr16
sub
nop
iret
int3
jmp
shl
inc
sub
add
xor
mov
popf
mov
sahf
fiaddl
xchg
sub
dec
test
sub
imull
icebp
xchg
ljmp
imul
bound
and
rorb
or
inc
mull
clc
iret
lcall
mulps
mov
push
fisubl
daa
in
das
bound
mov
adc
iret
jp
mov
mov
pop
addl
lcall
mov
outsl
lcall
insb
mov
das
mulb
jmp
lods
mov
xorl
cmp
xchg
push
leave
push
stos
inc
lods
cmpsl
adc
aaa
sbb
and
sbb
pop
pop
lcall
aad
push
push
int3
call
cs
adc
pop
aas
pop
dec
xchg
ss
sbb
push
mov
jns
cmp
xchg
inc
add
jmp
mov
pop
ret
dec
stos
fstl
out
mov
mov
mov
sub
jp
inc
out
ret
fdiv
scas
aaa
xchg
jecxz
jp
scas
lret
jg
nop
sub
sti
mov
out
mov
addb
sbb
lock
sub
and
int
pop
adc
xchg
inc
sbb
fisubs
lock
cmp
pop
roll
insb
stc
xchg
fists
pop
sbb
xchg
mov
dec
push
jmp
out
push
and
sbb
or
test
ds
jne
dec
shlb
sub
leave
call
leave
cmpsb
pusha
and
mov
or
dec
shlb
dec
rorb
lret
push
stos
pop
jg
adc
dec
ja
jbe
mov
popa
jl
cmp
push
cld
add
lock
push
roll
pop
inc
inc
test
push
lcall
sarb
std
jmp
dec
mov
add
sbb
popf
sbb
push
lock
dec
pop
mov
cmp
mov
mov
pop
jae
out
and
xor
sub
les
jnp
add
je
xchg
sub
mov
fists
sti
lods
pop
push
pop
daa
xor
bound
jnp
in
imul
adc
xor
cli
inc
jb
and
ds
bound
les
fwait
out
idivb
jmp
pop
jbe
incl
and
stos
cwtl
jl
insl
repnz
sahf
mov
pop
loope
movsl
insb
adc
clc
and
fcomps
push
pop
jnp
pop
sub
fstl
mov
jmp
xor
adc
sbb
popf
xchg
and
fwait
inc
or
add
mov
fstps
adc
mov
enter
xchg
in
adc
pop
xor
shlb
inc
or
nop
cli
std
sahf
push
les
or
inc
xor
icebp
mov
push
js
fmull
addr16
ret
mov
xchg
aam
sbb
jmp
inc
enter
adc
pop
mov
or
and
pusha
sarb
movsb
scas
loopne
test
sub
mulb
repnz
lret
pop
pop
dec
insb
gs
scas
jl
add
xchg
inc
test
mov
jmp
jnp
and
icebp
cwtl
loope
hlt
fisubrl
jbe
in
sbb
xchg
jb
jo
cwtl
push
inc
jnp
inc
dec
add
lcall
sub
popf
sub
jmp
adc
mov
mov
mov
adc
xor
out
ljmp
arpl
arpl
mov
push
mov
xchg
pusha
les
push
movsb
pusha
aaa
mov
cmp
mov
call
push
jnp
push
adc
sbb
ret
movsb
jmp
ss
fildll
or
pop
sbb
add
sbb
cmpsb
gs
fstps
fimuls
aas
cmp
sbb
rcrb
mov
hlt
rcl
lea
rcrl
dec
pop
loopne
add
push
sub
inc
call
inc
test
xor
adc
arpl
int3
dec
fistpll
jp
aad
cld
sub
sbb
inc
mov
lret
jno
xchg
inc
mov
sar
mov
loope
cmp
or
loopne
es
xor
mov
mov
pushf
inc
xor
das
and
insb
jns
mov
push
inc
adc
popf
clc
sub
outsl
cli
xor
icebp
or
in
and
cltd
xchg
xchg
jle
mov
std
pop
lods
mov
ljmp
or
cli
push
iret
mov
call
sbb
inc
inc
lcall
mov
pop
cmp
out
dec
repz
sub
into
and
push
out
js
enter
sub
repnz
mov
adc
jae
popf
xchg
jne
popa
xchg
int3
dec
in
pushf
jp
sarb
or
adc
push
rol
xor
push
jge
cmc
retw
jb
jecxz
cmpsl
sub
sub
mov
jne
mov
sbb
pop
xor
pop
insb
cmp
test
inc
roll
aas
mov
repz
jle
push
and
cs
dec
movsb
mov
daa
hlt
pop
and
xchg
addr16
mov
repnz
insl
mov
loop
mov
jg
call
mov
mov
int3
repnz
fidivrs
mov
add
xchg
xor
mov
and
js
js
in
jecxz
aas
loop
mov
or
xor
int
sbb
push
fistpll
lods
jne
inc
loope
insl
and
dec
jp
arpl
mov
xchg
rcll
ljmp
mov
outsl
mov
or
scas
movsb
sbb
push
mov
cmp
dec
push
or
xor
mov
movsl
ret
adc
fwait
sbb
add
xchg
push
icebp
movups
jg
lret
sub
ret
jle
jge
inc
adc
out
andb
pop
jns
xchg
push
mov
jmp
inc
cli
and
nop
lock
imull
data16
and
mov
xchg
imul
sub
hlt
mov
insb
jmp
in
mov
repnz
adc
add
orb
mov
clc
sahf
sbb
ljmp
inc
es
lahf
pop
stos
lahf
add
mov
test
sbb
jle
mov
mov
mov
sub
enter
and
xor
xor
and
scas
sub
cld
xor
pop
std
lret
cltd
cmc
xor
popf
dec
jge
pop
xchg
je
test
pop
and
or
sbb
pop
fucom
popa
stos
dec
or
and
shrl
xor
sarb
scas
jg
out
and
inc
pusha
and
adc
jo
aam
inc
rolb
jle
dec
movsb
mov
pusha
sub
jecxz
xor
xor
fld
dec
xchg
ror
daa
add
inc
sbb
lods
div
and
movb
int
sub
mov
mov
test
push
nop
popa
ds
ja
sub
xchg
les
xchg
js
jmp
lcall
in
xor
and
test
orb
inc
adc
inc
das
in
cmc
cmc
dec
sbb
leave
rcrb
popf
cmc
mov
outsb
fucom
out
lret
je
mov
mov
sbb
inc
or
xchg
mov
and
sbb
sub
mov
lds
fwait
insw
jae
xchg
mov
jb
out
out
jmp
and
popa
or
sbb
jecxz
out
sbb
push
es
push
add
mov
sub
outsw
mov
adc
shrb
xchg
mov
leave
lds
bound
mov
aas
daa
cmp
data16
sbbb
lea
add
bound
stos
mov
popf
jns
in
adc
or
xor
in
inc
and
jecxz
imull
sar
push
xchg
sbb
dec
clc
mov
psubb
or
cltd
inc
xchg
add
divb
inc
enter
notb
jb
mov
ds
xchg
int
inc
cmp
sti
stc
inc
lea
insb
mov
lods
sbb
pusha
sub
movsb
jno
enter
push
push
int
xchg
bound
nop
jae
mov
es
or
movzwl
loop
jne
je
push
scas
movsl
push
jp
dec
cmp
fistpl
lahf
icebp
in
push
push
sbb
call
pop
sbb
popf
jp
stos
test
jne
aaa
outsb
out
sub
cmpb
addr16
hlt
sbb
mov
mov
inc
xchg
jg
adc
cwtl
int3
insb
cld
loopne
lret
imulb
mov
dec
jl
icebp
mov
cmp
dec
enter
lods
push
mov
je
cli
push
fnstcw
fmul
push
lods
or
nop
mov
mov
sbb
cmp
jno
jnp
xor
in
out
pushl
add
and
sbbb
popa
out
push
mov
loop
dec
hlt
imul
call
int
dec
rcrl
fiadds
inc
imul
testb
pushf
fldl
xor
xor
pop
nop
addr16
stc
mov
lock
sub
rcll
negb
mov
jle
rep
dec
aas
popa
and
sub
das
cmpsl
aaa
xchg
loope
push
sub
pop
test
mov
and
js
lea
and
pushf
xor
push
into
cmpsl
cli
jmp
adc
xor
adc
out
fs
addr16
shl
jecxz
cmovle
add
mov
pusha
push
sub
xchg
push
dec
mov
out
clc
mov
in
xor
jo
push
ret
rcr
hlt
adc
test
mov
inc
cltd
fistps
push
imul
jae
jmp
sub
push
push
into
inc
stos
pop
shll
aas
lret
shll
push
jecxz
jae
popf
and
mov
dec
std
das
ds
fisubs
adc
mov
lods
push
ljmp
inc
adc
repz
loop
scas
outsb
pusha
push
movsl
jbe
mov
out
ds
mov
data16
xchg
pop
mov
xchg
xchg
cmpsl
cmp
pop
dec
pop
adcl
xlat
xchg
je
cmp
leave
xlat
lcall
pop
insl
ficoms
xlat
cmpsl
in
lahf
mov
out
and
jge
mov
sub
jge
popa
into
jle
mov
test
rcrb
sbb
fstpt
fwait
sbb
leave
mov
mov
out
je
outsb
mov
inc
sahf
in
ret
lea
pop
movsb
popw
sbb
push
loopne
popa
out
add
aaa
popa
or
dec
adc
add
repnz
xchg
mov
adc
loop
mov
cmpl
fisubs
mov
test
into
push
mov
repz
loope
in
test
ds
xchg
xchg
xor
into
dec
ja
or
popf
cmpl
iret
gs
adc
sub
and
sarb
mov
clc
imul
popf
jmp
lods
aaa
mov
into
mov
push
mov
mov
inc
jne
xchg
daa
pop
xlat
lock
leave
imul
inc
inc
popf
movsl
sbb
mov
aaa
sub
xchg
ret
xchg
xor
xor
jns
xor
adc
lds
and
jnp
mov
cmpl
rorl
or
pop
cmpsb
push
mov
insl
xchg
pop
push
insb
repz
cld
fldcw
add
push
rolb
insl
adc
xchg
je
adc
outsl
jecxz
adc
mov
cld
push
ffree
mov
mov
add
mov
mov
aaa
xlat
notb
or
mov
push
add
pop
cld
pop
or
addl
loopne
test
add
cmp
mov
and
dec
mov
cmpsb
gs
pop
jb,pn
lods
lahf
fcomi
fxch
andb
inc
cmpsb
mov
ja
push
mov
sub
mov
nop
pushf
loope
dec
cmpl
jge
dec
gs
sbb
das
add
adc
fs
in
jne
outsb
and
dec
mov
mov
pop
add
test
lods
insl
call
mov
mov
or
and
loop
mov
push
loopne
stos
dec
jle
push
add
repnz
and
xchg
dec
data16
inc
lock
imul
mov
mov
mov
cmpsl
inc
mov
xor
adc
pop
jecxz
mov
inc
push
jb
xchg
imul
lock
ljmp
jmp
jns
cmp
mov
inc
pop
pop
in
jp
popa
test
jnp
sbb
pop
push
pushl
testl
fwait
sbb
pop
push
into
cmc
scas
mov
xchg
push
in
bound
dec
adc
cmp
cmp
sarb
stc
jbe
or
dec
mov
mov
test
pop
stc
jecxz
mov
mov
das
enter
sbb
pusha
lods
xchg
and
and
hlt
shll
fadds
adc
or
mov
or
or
sub
add
test
bndldx
addr16
dec
push
inc
aaa
fisttpl
test
dec
push
pushf
sarl
int
gs
mov
insb
inc
loop
adc
mov
mov
or
lret
inc
cmpl
xor
add
in
mov
inc
xchg
rcr
dec
mov
stos
mov
inc
mov
cmp
pop
dec
or
addl
push
sbb
push
ss
aad
aaa
out
sbb
push
xor
mov
mov
stos
in
jl
push
fdivp
dec
int3
daa
jno
ds
in
mov
jp
aam
mov
out
jno
mov
ss
test
push
test
shll
jge
stos
pop
stos
sbb
or
std
aad
cwtl
ljmp
mov
imul
push
rclb
pop
fnstsw
jecxz
push
xor
dec
inc
outsb
cmp
pop
imul
add
enter
test
adc
lods
add
lret
cmp
or
dec
arpl
insb
mov
sbb
and
in
mov
or
jne
inc
call
lcall
fcomps
jb
iret
hlt
xor
cmp
xor
add
rolb
pop
add
popf
mov
mov
pop
pop
out
andl
jbe
push
fmull
ffree
cs
cmp
orb
adc
out
mov
mov
pop
stos
das
mov
test
push
adc
stc
rcrl
aad
mov
xor
jnp
outsl
mov
scas
or
iret
mov
mov
sbb
mov
mov
popf
inc
sbb
scas
ja
jns
adc
or
mov
daa
fwait
insl
sti
cwtl
xor
cmp
xor
clc
or
imul
jnp
int3
or
dec
dec
mov
xor
dec
daa
fsubr
movsb
jno
sbbl
in
out
iret
sti
repz
push
test
insb
enter
sub
rorl
addl
mov
int
inc
jp
jnp
ret
loopne
sub
cmp
bnd
push
or
jne
scas
decl
jno
rorl
jl
sub
lock
or
cli
ds
pop
add
cld
or
push
adc
orl
cmpsb
pop
in
stos
and
add
popf
shl
mov
repz
lcall
mov
dec
arpl
adc
movsl
sub
or
jl
sub
dec
lret
mov
sarb
mov
std
inc
push
sub
pop
fdivs
jb
out
pop
xlat
aas
add
adc
dec
outsb
inc
mov
adc
data16
dec
xchg
mov
test
scas
pusha
push
ja
pushf
adc
pushf
mov
lahf
mov
sub
push
mov
mov
xor
mov
dec
fwait
jae
je
dec
jmp
bound
adc
sbb
mov
mov
cmp
dec
mov
adc
lret
cmp
add
aad
lea
pop
lret
in
add
mov
stos
adc
aam
mov
xchg
adc
ja
push
xor
xor
push
mov
and
inc
jecxz
xor
lret
push
bound
and
ret
mov
push
ljmp
int3
xchg
inc
repz
push
push
jmp
cmp
push
mov
daa
je
icebp
lds
aas
jo
fucomip
add
pop
jne
cltd
xchg
sub
add
test
and
xor
fstpl
shll
and
jle
jo
pop
rclb
scas
aas
ljmp
xor
lcall
or
add
push
mov
std
mov
pop
jmp
fs
cmpsw
iret
sar
or
adc
jp
mov
cmp
lock
mov
enter
dec
imulb
lea
daa
jg
cltd
roll
outsl
sbb
xor
repnz
lock
jl
cmp
inc
mov
outsb
jecxz
push
lret
pop
test
outsb
xchg
or
decb
mov
mov
or
pop
stos
push
add
jns
sub
hlt
movsl
inc
add
push
fildll
and
push
mov
xchg
leave
hlt
xor
jbe
cmp
jp
jae
pop
in
cld
sti
je
fisubrl
or
in
add
mov
out
inc
daa
jns
outsb
stos
lods
mov
shrl
push
adc
xor
sub
add
pop
mov
pop
add
fucomp
std
dec
cmp
ficoml
js
dec
inc
rep
dec
movsl
aas
outsb
cmc
jmp
or
xorl
xlat
add
inc
sbb
or
and
in
lds
fs
fdivs
add
or
pop
jbe
movsb
dec
jmp
arpl
jl
xchg
cli
repz
test
add
sub
ret
incl
mov
imul
ret
rcl
sbb
loop
movsl
shrl
xor
fs
lret
push
mov
js
ret
out
js
insl
sub
hlt
inc
out
jo
cltd
push
xorl
popa
jno
jnp
int
xor
cmp
mov
push
fdivrl
mov
lcall
repnz
sbbb
out
sub
lcall
lcall
ret
sub
imul
mov
faddl
mov
test
outsb
lea
cmpsl
cmc
sahf
mov
adc
dec
in
scas
push
and
in
rcr
lret
inc
xchg
cltd
push
xchg
jecxz
test
fs
and
xor
sub
add
pop
sbb
pusha
int3
cwtl
xchg
es
sbb
and
sahf
sbb
into
cmpl
test
rolb
inc
and
sbb
mov
mov
inc
cmpsl
lods
sbb
cmp
pop
xor
adc
mov
xor
mov
sub
mov
rcl
lret
mov
dec
int3
lds
add
xor
mov
push
inc
mov
out
aad
cmp
xchg
aam
pop
sarb
mov
inc
xchg
rorl
into
test
push
cmpsl
lret
inc
ds
sbb
cmpsb
pop
push
movsb
cmp
addl
lret
mov
adc
insb
les
cmp
es
adc
in
adc
fwait
jmp
inc
test
leave
dec
bound
jo
mov
push
lods
mov
xchg
jecxz
mov
iret
mov
insl
mov
sbb
cmpl
lret
xor
push
jp
sub
push
or
scas
das
pop
cli
jbe
xchg
pop
push
adc
add
stos
std
jne
pusha
shll
pop
push
dec
xchg
fxch
dec
push
cld
in
arpl
xchg
mov
xor
cmpsl
lret
fists
dec
or
mov
xorl
mov
in
mov
sti
into
jb
mov
xchg
outsb
sarl
push
scas
in
aam
mov
cmp
dec
pop
push
pop
aas
lahf
xchg
imul
xor
in
xor
mov
ja
sbb
inc
loopne
pop
push
cmp
pop
mov
pop
and
or
loope
xor
mov
js
jle
jg
dec
xchg
pop
mov
push
pop
rcrl
pushl
mov
icebp
xor
lock
sub
rorb
sub
adc
js
aaa
mov
or
imul
call
stos
mov
push
and
std
lock
jbe
jmp
sbbl
xchg
sbb
imul
push
mulb
nop
sub
shll
jns
pusha
inc
leave
ds
pop
and
jmp
js
cmp
js
popa
mov
fistps
mov
dec
iret
mov
jmp
stos
cli
hlt
andb
outsl
dec
cmp
push
push
mov
je
xor
test
sbb
aad
and
xchg
sub
add
icebp
sub
mov
inc
add
xchg
mov
pop
call
dec
lret
mov
daa
push
incl
push
fisubs
push
shl
mov
xor
js
popf
pop
loope
mov
sahf
pop
stos
dec
push
pop
pop
adc
push
aaa
inc
fwait
dec
xor
inc
dec
sbb
xlat
cmp
pop
in
jbe
das
test
sbb
adc
and
pop
lret
movsb
adc
and
out
mov
xor
pushf
jo
dec
popf
call
fstpt
and
ljmp
mov
and
sub
das
xchg
mov
inc
jbe
ficomps
imul
pop
and
cmp
shlb
sbb
int3
mov
adc
stos
pop
cs
pop
jmp
or
mov
repnz
fcomps
jo
xor
out
pmullw
sbb
push
fs
ret
pop
add
xor
inc
fdivrs
jmp
out
lret
lahf
add
pop
and
lds
pop
mov
pushf
xchg
sub
iret
mov
push
orb
shrb
jecxz
adc
cli
je
pop
dec
loope
int
pop
std
and
jecxz
cmpb
leave
inc
dec
adc
data16
popf
push
mov
push
mov
lcall
mov
cmp
mov
or
push
enter
aas
enter
push
imul
push
fdivrp
cmp
fs
push
cvtpi2ps
shlb
and
or
jnp
and
scas
push
incl
cmp
push
sub
les
iret
push
arpl
icebp
sbb
inc
cmpl
loop
cltd
fstl
loope
xlat
rol
ret
outsb
add
xchg
js
or
dec
insl
cmp
js
test
pop
dec
andb
or
or
lret
mov
pop
jo
adc
jo
xlat
xchg
std
or
adc
loope
ret
je
mov
sbb
mov
addr16
mov
pop
cs
stos
pop
pop
aam
xor
inc
or
enter
sti
std
dec
adc
adc
cwtl
mov
js
inc
jne
lret
mul
sahf
xor
clc
imul
dec
and
adc
mov
fnstsw
ds
inc
ljmp
scas
xchg
dec
xchg
int3
test
push
icebp
popa
add
in
push
xorl
xlat
call
xor
xchg
cltd
enter
in
cmpsb
adc
mov
inc
inc
mov
popf
or
aam
imul
dec
repnz
cmp
loopne
adc
xchg
pushf
cmpsl
add
test
mov
ds
jb
mov
fnsave
xchg
fistps
mov
loope
cmpsl
mov
test
addps
aas
fcmovnbe
mov
push
jo
inc
xlat
mov
mov
stos
in
inc
jo
dec
pusha
sahf
push
dec
add
cmp
mov
ret
lahf
mov
test
shlb
xor
dec
push
mov
outsb
inc
ror
mov
fistps
xchg
rcrl
jo
in
xchg
ret
jge
lcall
mov
dec
aad
aas
lds
aad
sub
imul
or
daa
mov
les
out
mov
popf
mov
jns
pushf
aaa
push
jbe
or
insl
hlt
js
adc
enter
dec
mov
cli
sbb
xchg
push
mov
leave
mov
sub
out
or
sub
arpl
es
lods
or
imul
pop
pop
jp
xchg
movsl
push
pop
xchg
xchg
inc
jnp
hlt
pop
retw
lds
std
lods
lcall
hlt
jl
das
aaa
pop
lret
mov
in
fsubrs
xor
xor
xchg
jns
out
cmp
jae
idivl
out
mov
adc
arpl
fs
sbb
das
mov
jge
mov
pushf
mov
mov
std
cld
mov
or
int
ja
cmp
shrl
jne
sahf
imul
sbb
fsubl
cmp
xchg
add
in
inc
fbstp
jo
jge
aaa
stos
add
jno
ja
jb
and
add
lcall
pop
dec
cmp
add
insl
dec
jmp
dec
push
jo
cmpsb
mov
push
daa
sar
push
sbb
movsb
dec
xchg
xchg
cltd
pop
test
mov
add
inc
es
jecxz
xor
mov
and
add
gs
jo
loopne
add
jp
xor
and
inc
addr16
cmpb
outsb
int3
mov
enter
lods
xlat
das
inc
sti
and
lahf
ficoml
and
out
xor
or
mov
sbb
iret
stos
push
fiaddl
mov
xchg
xor
mov
lods
mov
mov
fwait
sbb
test
gs
pop
mov
les
mov
enter
clc
mov
jbe
adc
mov
inc
jo
adc
pop
stc
push
cwtl
movq
pop
testb
inc
push
pop
outsl
mov
xlat
lret
cmp
jb
fs
adc
es
and
int
adcl
mov
shll
xor
xchg
sbb
mov
dec
mov
rclb
test
call
leave
lea
dec
leave
mov
mov
jmp
cmp
pop
dec
inc
jnp
mov
in
loop
out
fisubrl
jnp
in
fwait
hlt
push
aad
dec
push
fs
fsubl
mov
mov
fs
in
jg
mov
pushf
adcl
lods
and
mov
dec
popf
jmp
xchg
data16
iret
shl
fwait
int3
inc
push
js
mov
push
push
sti
das
dec
lret
mov
fdiv
add
xor
dec
sub
push
jmp
lock
inc
mov
dec
adc
sbb
daa
in
xor
pop
iret
mov
cltd
jnp
test
sub
ja
sti
orb
adc
loopne
inc
mov
cmp
or
xor
pop
arpl
dec
push
jl
adc
or
test
push
mov
mov
pop
loope
adc
push
dec
push
adc
lods
sub
ficompl
mov
insb
imul
or
fprem
and
mov
lods
mov
gs
jge
ret
rolb
call
or
loopne
stos
and
xor
les
ret
xor
aam
add
push
add
xchg
dec
jmp
cltd
xchg
dec
lret
cltd
and
or
mov
dec
adc
sbb
sub
or
insb
out
in
add
cli
and
scas
mull
or
and
shr
inc
cli
loope
lret
push
mov
dec
ret
fs
cltd
dec
fstps
cmp
jae
test
lcall
or
test
js
nop
imul
mov
jge
jge
daa
xchg
leave
stos
sbb
sbb
in
inc
jl
adc
cmp
daa
pop
repz
or
mov
movsl
xchg
adc
ret
fcoml
mov
cmpsb
inc
xor
inc
lahf
js
das
fstpl
pop
push
daa
push
or
lds
jnp
popa
enter
lret
jne
xchg
js
mov
fmul
pavgb
insl
gs
mov
adc
in
or
adc
dec
roll
js
jns
movsl
ljmp
mov
inc
fisubs
movsl
out
push
xchg
xchg
lods
inc
pop
sar
cwtl
jns
lcall
cmp
pop
sub
mov
mov
call
shrb
rolb
out
inc
and
sub
cltd
out
sub
and
pop
pop
lods
movsl
pop
mov
lods
scas
orb
sahf
and
jae
and
sbb
mov
mov
adc
mov
pop
das
add
test
mov
test
lret
inc
pusha
lds
push
xchg
and
outsb
xchg
shrl
sti
dec
push
jo
push
pop
int
or
mov
popa
repz
push
jge
out
or
pop
jg
mov
daa
ja
mov
popf
icebp
sbb
push
ja
cmp
jnp
add
push
testl
fcompl
and
sbb
mov
ret
jecxz
xor
nop
int
rcrb
lahf
lock
xchg
movsl
add
pop
jno
in
adc
mov
mov
dec
sbb
sti
daa
fnstcw
test
dec
sbb
ret
loope
clc
jp
in
test
sub
jnp
add
fwait
mov
push
xor
add
jl
cltd
mov
xor
mov
jl
xchg
subb
mov
lods
xor
inc
sub
adc
mov
cmp
mov
xchg
adc
mov
lods
test
sbb
sbb
imul
jbe
jg
jno
and
cmp
sbb
push
jne
adc
orl
mov
movsb
push
int
pop
popf
insb
sbb
and
push
pop
pop
rcr
sub
xor
cmp
xor
adc
push
mov
jo
das
xchg
push
sti
adc
mov
daa
and
adc
mov
mov
dec
scas
mov
ficoms
or
sbb
sub
shrl
outsb
jnp,pt
mov
cmc
call
xchg
mov
and
dec
push
insb
addps
loope
or
sbb
lods
aam
sub
dec
push
pop
cs
nop
jmp
cmpsl
icebp
test
in
dec
sahf
pop
enter
loope
inc
xchg
inc
sbb
cltd
test
stos
pop
cmp
or
out
mov
loop
push
subl
fmull
and
enter
sub
xchg
sub
and
dec
fnsetpm(287
cs
cmp
fadd
lods
push
inc
das
in
sub
mov
clc
hlt
rcll
loop
aaa
or
cmc
adc
dec
adc
pop
outsl
mov
lods
rcrb
sbb
cmp
or
mov
pushf
decb
fistpl
lods
ret
in
clc
aad
cmpl
cmpl
or
jno
lds
in
xor
sub
lret
xchg
jbe
cld
xor
inc
leave
pop
xchg
inc
mov
stos
mov
mov
mov
enter
fldl
pushf
pusha
test
int
std
test
arpl
stc
in
adc
jmp
inc
jge
call
mov
stc
cmp
dec
sub
adc
jo
or
mov
sbb
mov
ds
loope,pt
fsubrl
and
jp
clc
adc
cmp
lds
jp
push
cmpsl
sbb
ror
mov
pop
jns
hlt
jl
lcall
or
ss
leave
and
sahf
subb
or
add
or
xor
lods
into
idiv
gs
jne
ret
stc
jge
gs
ss
cltd
dec
jae
aam
repnz
mov
imul
fisubrs
dec
adc
xor
es
sbb
or
mov
fildll
enter
xchg
adc
mov
jge
repz
nop
dec
and
push
jp
pushl
sub
sub
mov
lods
push
xor
and
mov
ja
cmp
lock
out
lock
loopne
jge
cmp
sbb
mov
push
add
and
sahf
ret
sub
jmp
arpl
xchg
jno
loopne
xchg
shll
pop
push
xor
push
out
mov
mov
add
xor
mov
or
test
out
iret
mov
in
push
lcall
inc
mov
fisubl
nop
mov
imul
sbb
iret
das
jns
and
push
and
shrb
in
inc
cmp
jle
jne
fisttpll
push
mov
mov
adc
add
mov
aas
cmp
sub
jge
stos
adc
dec
test
movsb
mov
sub
fwait
xorb
repz
sbbb
cmp
push
mov
adc
and
jecxz
add
cmp
in
addl
jns
enter
jl
test
fs
xor
sub
les
mov
mov
ljmp
mov
mov
xlat
mov
mov
pop
pop
int3
sarl
and
add
aam
popa
mov
mov
pop
dec
mov
aam
sub
xchg
lods
iret
mov
aam
lret
insb
dec
xor
push
das
add
sub
stos
lods
mov
jmp
inc
jo
jns
pop
bnd
ljmp
clc
mov
pop
xchg
fdivrs
jecxz
call
les
cld
mov
nop
ss
pop
mov
out
in
push
sub
adc
js
inc
mov
sbb
and
pop
std
imull
dec
add
inc
data16
lods
fsubs
xlat
pop
cli
jle,pt
push
sbb
push
mov
cmp
fistpll
push
cmpb
in
outsl
incb
cmp
int3
mov
or
pushl
inc
rorb
or
push
daa
or
fisttpll
mov
jne
pusha
in
repz
rorl
loop
js
scas
shll
push
arpl
adc
or
popa
jno
inc
jns
loop
xchg
call
xchg
sarl
pusha
or
jbe,pt
lret
inc
int
inc
stos
imul
das
or
mov
aaa
std
mov
and
xchg
push
insl
adc
add
xchg
cmpsl
loop
adc
pop
mov
or
je,pt
push
arpl
pusha
add
cwtl
je
shrd
dec
push
shlb
and
mov
movsl
stos
popa
xor
dec
pop
int
clc
inc
mov
movsb
aaa
aad
imul
ss
ret
push
scas
mov
jno
pop
test
mov
gs
lods
aas
ret
sbb
jbe
pop
xlat
repnz
repnz
movsb
or
inc
cmp
daa
xorb
inc
loopne
mov
push
mov
push
add
sbb
aaa
test
insb
adc
lahf
jae
cli
and
ret
es
insl
inc
jl
xchg
call
sbb
pop
pop
js
sbbb
push
lock
test
icebp
mov
and
adc
sub
xchg
xorl
je
ja
cmp
and
or
pop
cwtd
lock
and
cvtps2pi
cmpsl
subl
mov
inc
movsl
ret
cmp
sbb
mov
push
enter
sbb
jno
add
add
xchg
jnp
es
and
popf
jmp
sbb
mov
and
xchg
pusha
xor
push
stc
mov
shl
cmc
jmp
pusha
daa
cmp
inc
mov
ljmp
in
jne
stc
fidivrs
xchg
jo
negb
or
xchg
push
adc
xchg
mov
cli
mov
dec
dec
movsl
rclb
pop
xchg
sub
or
adc
push
popf
inc
xorb
mov
mov
jmp
push
push
faddl
xlat
setg
mull
mov
sub
dec
xchg
aaa
fcoms
add
int3
push
jno
jge
repnz
jle
int
je
insl
adc
add
gs
xor
xchg
cmp
in
sar
leave
fadds
sbb
sbb
mov
setbe
adc
push
inc
insl
bound
push
insl
dec
test
rorb
fstpt
aad
adc
xchg
stos
fcmovu
int
enter
popa
jae
lods
or
mov
xchg
push
addl
aaa
shr
cs
xchg
mov
push
jl
push
repz
std
push
repnz
lret
insl
mov
xorl
ds
enter
push
xor
das
stc
cmp
push
mov
mov
out
mov
dec
loop
repnz
mov
push
lock
adcl
ror
ss
push
inc
data16
ja
aad
outsl
mov
xor
je
popf
push
jo
jle
std
cmp
pusha
jbe
jae
clc
sti
leave
in
fs
sub
cltd
testb
das
cli
stos
xor
mov
es
mov
ds
fnsave
xor
and
mov
sbb
hlt
ljmp
push
test
push
cli
pop
jmp
aas
fisttps
inc
loope
sub
mov
jle
clc
data16
mov
shlb
mov
lds
aaa
ret
das
hlt
xor
ss
sbb
push
add
dec
pop
add
sbb
jns
sub
aam
lret
jbe
jns
cld
inc
lcall
push
aam
xor
imul
fwait
jnp
inc
hlt
add
adc
mov
pop
xor
adc
pushf
cld
mov
and
jae
push
lods
lcall
push
ret
clc
lret
or
icebp
mov
pop
loopne
jb
mov
loop
xlat
iret
xchg
ss
ja
inc
mov
cmpl
iret
cmp
mov
shlb
push
xor
lods
fcmovnu
in
lret
or
out
sbb
pop
popa
xor
jle
mov
mov
mov
pop
fldl
mov
lock
mov
in
dec
out
icebp
int3
adc
imul
pop
mov
rorl
arpl
jge
xlat
lret
inc
xchg
dec
sub
pushf
repz
popf
pop
inc
dec
sbb
ss
ja
mov
push
fldcw
mov
shr
pop
jno
xchg
rorb
xchg
repnz
sbb
clc
cltd
pop
test
sbb
shr
testb
ret
sbb
sub
xor
push
lret
clc
insb
into
rcl
sbb
inc
fcoms
insl
adc
adc
loopne
cmp
rcr
dec
lahf
pop
out
add
je
movsl
push
pop
mov
sub
dec
jo
xor
js
mov
repnz
mov
jmp
jno
lea
add
fisubl
xor
push
jp
or
mov
cltd
xor
in
cmpsb
popa
leave
popa
add
aas
mov
jecxz
in
stos
jmp
xor
movsb
add
xchg
xchg
std
out
jecxz
popf
pop
iret
out
lds
jmp
add
mov
ljmp
clc
dec
xchg
xchg
je
scas
push
mov
mov
nop
lock
sub
adc
mov
add
xchg
adc
xor
int
add
mov
aam
lret
mov
lcall
adc
push
pushf
and
adc
xorb
fsubs
enter
adc
push
fs
jbe
roll
push
dec
sbbl
gs
push
xor
dec
xchg
clc
aaa
sub
js
out
pop
jl
lods
out
jge
push
repnz
adcb
shrl
sub
movl
pop
movl
jge
adc
sti
or
push
add
sbb
lods
cmpsb
mov
sub
js
add
popa
xchg
test
and
pusha
xor
inc
ljmp
hlt
fistps
xchg
test
mov
icebp
pop
sub
fistpl
mov
mov
sbb
push
es
popa
and
and
cmp
icebp
cmp
pop
push
cmpsb
lret
mov
xchg
psadbw
push
or
cmc
subb
fldt
fnstsw
xor
nop
jl
data16
or
and
pop
mov
nop
dec
jnp
lea
push
add
loop
mov
sub
cwtl
iret
cmc
xchg
shlb
or
pop
pop
loopne
add
leave
inc
pop
pusha
jbe
jecxz
mov
adc
sbb
or
mov
sbb
shrl
inc
test
xchg
mov
les
jno
and
andl
and
mov
call
sbb
dec
sbb
fwait
push
pop
mov
or
fsubrs
leave
ret
es
or
or
jnp
gs
cmp
subl
popf
stos
ja
popf
jg
aaa
xor
and
imul
aad
sbb
scas
jmp
cmp
out
mov
clc
jp
std
adc
adc
lods
outsl
pusha
jmp
or
ja
sbb
adc
aas
sbb
fcompl
push
hlt
adc
ror
cs
cmc
roll
nop
push
xor
movsb
pop
les
iret
mov
sbb
sti
and
cli
jl
cmp
divb
dec
xchg
push
and
test
dec
fmuls
mov
xchg
fcompl
fidivs
adc
mov
lcall
xchg
xchg
xchg
inc
mov
lret
stos
jne
inc
insl
lret
jle
ljmp
adc
gs
dec
lcall
iret
shll
mov
jg
cli
scas
push
pop
std
lcall
fs
pop
lock
in
inc
sbb
insl
lds
mov
mov
setne
movsb
daa
sbb
push
fwait
andl
test
jg
inc
inc
push
fsubs
fstp
sub
into
rolb
cmp
pop
test
movsl
data16
dec
loope
std
popf
push
pop
dec
mov
inc
mov
andb
add
rcll
idivl
imul
push
insb
sub
and
and
ljmp
jl
cmp
outsl
lock
sbb
cltd
enter
fsub
stos
cmpsl
sub
outsl
or
push
add
out
mov
mov
mov
jo
xchg
loope
adcl
adc
js
xor
mov
mov
push
jle
jae
lods
adc
ret
outsl
sub
jl
sbb
jg
shr
push
and
scas
addr16
mov
or
dec
pop
jecxz
xchg
jno
adc
add
enter
insl
jp
lret
jp
xchg
ss
aaa
and
addr16
mov
add
push
int3
das
sbb
loope
inc
aas
and
or
stos
or
mov
xlat
lock
arpl
out
xchg
fs
jno
mov
pop
arpl
and
mov
dec
idiv
cld
jle
aad
roll
cmp
scas
jp
or
pop
rcl
mov
push
cmp
jbe
rcr
push
std
das
les
out
or
xor
inc
pop
outsl
pop
scas
lahf
sbb
mov
cmc
fbld
or
jge
sahf
push
sbb
sti
dec
sbb
xor
out
mov
rcr
dec
lret
out
xor
repz
outsl
mov
int3
inc
ja
mov
movsl
inc
push
ret
imul
orl
cmpsl
test
or
cs
or
loop
movsb
in
out
xchg
test
pusha
aas
out
adc
mov
stos
cmc
xchg
loopne
xorl
adc
jo
sti
nop
test
fidivrs
testl
dec
ret
mov
cld
clc
ret
sbb
add
mov
jecxz
popa
lock
pusha
sbb
mov
mov
or
mov
push
sbb
test
push
xchg
test
xor
lds
fidivrl
adc
push
dec
lds
ljmp
lods
push
xchg
fwait
int
arpl
data16
inc
fldenv
adc
cld
dec
add
xor
ds
or
fidivrl
cmp
push
pop
pop
mov
into
pusha
stos
fldl
arpl
mov
out
cmp
mov
mov
scas
aaa
jge
rolb
sub
mov
mov
and
or
mov
mov
or
add
iret
aas
das
imul
pop
xor
inc
push
rcll
push
mov
int3
push
xchg
adc
push
pop
lods
pop
ret
int3
sub
es
or
out
leave
aas
repnz
add
push
out
cmp
fisttpll
nop
xlat
pop
push
pop
mov
jecxz
iret
xchg
imul
dec
rolb
xchg
scas
out
adc
cmpsb
movsl
adc
or
xlat
shl
cmp
mov
pop
int3
leave
push
adc
sub
scas
call
cli
sub
cmp
rcrb
in
repnz
mov
fs
sbb
cmp
push
rcll
cmp
jge
dec
pop
pop
mov
sub
mov
push
sbbb
and
adc
cmp
outsl
xchg
daa
jecxz
popl
xor
add
cli
adc
ficomps
rcll
add
mov
dec
popl
add
cld
and
fwait
rorl
jbe
xchg
loop
clc
repz
mov
xor
aam
js
andb
mov
pop
in
test
pop
cmp
jnp
out
mov
aam
cmpsl
inc
lock
pop
sbb
out
push
fcoml
mov
jle
sbb
mov
lcall
mov
dec
into
fnstsw
or
sbb
cltd
adc
push
in
lods
rcl
push
sub
push
enter
dec
dec
fnstsw
lret
mov
mov
mov
out
imul
push
ret
insb
mov
lret
pop
lea
or
mov
xchg
inc
fcoms
and
ss
xor
inc
mov
out
push
and
mov
jmp
inc
mov
jns
shrb
jns
testb
adc
add
xchg
mov
add
lods
scas
xor
loop
out
mov
sbb
and
mov
ror
lods
cmp
lea
andl
pusha
jp
add
fsubrp
lock
or
pop
jmp
push
cmp
push
in
fildll
dec
aad
and
cmp
fists
hlt
mov
dec
lcall
jecxz
cmp
movsl
imul
test
push
out
ret
sahf
push
outsb
sub
inc
fcoms
and
cmp
icebp
ret
add
popa
sub
por
sub
shrb
mov
xor
repz
push
sub
lcall
add
push
scas
xchg
jge
pop
push
xchg
mov
pop
xchg
mov
jb
movsl
aaa
jge
mov
and
lret
adc
mov
cmp
push
push
push
stos
testb
inc
arpl
rorl
outsb
cli
hlt
xor
incl
fwait
loop
sahf
bound
inc
jb
mov
push
and
push
lods
fwait
or
pop
fiaddl
and
gs
daa
adc
stos
xchg
ds
loopne
sbb
xchg
ja
jl
cltd
push
jbe
lds
movsl
mov
push
ja
imul
mov
inc
in
push
sbbl
scas
mov
dec
sub
repz
dec
sub
dec
repnz
lret
jmp
and
adc
lock
mov
cmp
ja
push
ret
mov
inc
push
jecxz
xchg
jo
sarb
js
cli
rcrb
pushf
ss
fwait
cmp
ss
mov
push
xor
stos
jne
pop
cmp
outsb
cmc
and
adc
cmp
std
iret
shlb
mov
and
dec
rol
popf
dec
dec
xor
push
repnz
dec
js
outsb
fwait
and
lret
inc
inc
push
pop
pop
out
mov
pushf
mov
lock
or
lods
in
loope
push
jge
imul
push
mov
inc
jnp
iret
jp
inc
xor
jp
jne
jecxz
cmpsl
incl
jl
mov
sarb
jae
jae
pushf
outsl
sbb
test
add
mov
test
std
fsubs
sub
jno
push
repz
lock
push
lcall
inc
stos
daa
xor
out
xchg
pop
in
imul
ds
inc
clc
shrb
fadds
scas
fwait
sub
add
jmp
lea
ja
push
cmc
daa
lret
stc
aad
push
add
jne
lock
xchg
dec
iret
lea
jecxz
int3
sbb
sahf
int3
pop
push
inc
dec
pop
adc
icebp
jg
lahf
cmp
adc
lods
xor
pushl
pop
loope
test
adc
in
sub
call
push
dec
aad
cmc
jge
jg
imul
aam
loopne
lods
imulb
mov
and
push
dec
addr16
mov
cmpsb
jp
pop
mov
mov
leave
cmp
iret
mov
jno
and
fldl
xchg
call
cmp
adc
aaa
pop
pop
mov
jecxz
cmp
cmpsb
and
add
xchg
add
shr
imul
add
mov
mov
jmp
jno
ja
cmpb
fistpl
inc
fstpt
pop
lds
add
xor
jg
pop
lret
inc
insl
pop
loopne
sub
jecxz
jno
cmp
xchg
pop
push
pushl
adc
into
inc
and
mov
ret
in
mov
xorl
cs
mov
push
mov
pop
pop
sbb
daa
xor
jae
xor
mov
lcall
cmpb
cmp
mov
mov
call
cmp
or
stos
push
push
xchg
mov
mov
in
pop
xchg
and
ds
cmp
dec
lcall
pop
es
punpckhbw
shlb
test
mov
repnz
xor
pop
and
imul
scas
test
inc
jo
gs
scas
ficoms
js
xchg
shll
mov
rorb
cwtl
data16
mov
rolb
inc
arpl
popf
add
or
xorb
repz
int
jl
pop
mov
dec
add
sbb
jae
mov
pop
in
lds
mov
mov
fucom
sahf
jp
bound
cld
mov
pusha
inc
popf
bound
push
in
es
lds
aaa
xchg
xchg
fwait
sbb
pop
movsl
mov
cmp
add
int3
mov
jle
add
scas
push
cmp
shr
dec
mov
scas
pop
ss
sbb
xchg
inc
ss
movsb
adc
stos
push
arpl
das
test
sub
shr
ljmp
push
fxch
insl
rcrl
mov
xchg
sub
ds
loopne
int
out
lea
out
pop
sbb
cmp
aam
adc
mov
hlt
and
out
add
or
mov
dec
ss
dec
icebp
mov
jmp
xchg
push
faddl
jecxz
push
mov
div
clc
push
dec
leave
mov
sbb
lods
leave
inc
test
scas
imul
sub
pop
push
xor
and
pop
cmp
rcll
jge
aas
adc
xor
xchg
xchg
jns
stos
into
sub
adc
decl
inc
mov
lock
pop
fnop
sbb
sub
mov
ret
mov
aaa
inc
addl
dec
cmpsl
add
add
mov
sbb
mov
and
les
out
mov
or
add
pop
pusha
adc
outsl
xor
js
orl
lea
pop
and
cmp
pop
imul
mov
inc
shlb
mov
jnp
or
or
or
subl
inc
cmpsb
aam
pop
out
ljmp
push
movsl
incl
push
adc
andl
adc
ret
mov
insl
sbb
cli
lock
cmp
hlt
dec
arpl
fadds
push
push
adc
adc
icebp
dec
aad
subb
clc
pop
call
fnstenv
lea
jge
add
outsb
ret
popf
aas
mov
lods
lcall
pop
push
aaa
clc
xchg
jae
mov
iret
sub
or
lods
sbb
sbb
push
push
sti
inc
fdivr
push
dec
in
out
shrb
std
filds
mov
or
add
or
mov
in
pusha
ficoms
ljmp
mov
cmpsb
xchg
addr16
clc
rolb
roll
sub
jo
ret
push
enter
lds
dec
and
dec
out
mov
xchg
je
lods
test
adc
xchg
sbb
mov
pop
sbb
xor
sub
outsl
je
mov
cmp
push
pop
jb
std
jb
fwait
and
mov
sbb
cwtl
fsts
mov
xor
hlt
xchg
xor
push
add
in
xchg
int3
mov
pop
mov
pop
leave
mov
xor
xchg
cmp
mov
add
adc
push
cmpsl
sub
popf
mov
jg
sub
and
mov
and
mov
cli
jg
jno
mov
sti
pop
sahf
jnp
mov
ds
movsl
jnp
sbb
jp
mov
jmp
lret
test
loop
cmp
cwtl
addr16
pop
jnp
jge
cmpsb
and
add
sub
sti
ja
pusha
adc
adc
push
dec
dec
push
es
push
divl
sarb
outsl
cmp
add
sarl
jge
pop
notb
lea
cmp
cmp
jbe
cld
push
mov
xor
sbb
pusha
divps
adc
cld
or
mov
push
aam
sti
xor
xchg
and
xchg
pop
xchg
lods
fs
lock
and
mov
decb
adcb
sbb
push
jl
lods
pop
outsb
sahf
lods
cmp
add
sub
sub
lds
push
mov
pop
repz
xchg
clc
xlat
leave
sbb
fisttpl
shl
sub
sbb
mov
adc
out
repnz
inc
and
and
int3
sbb
es
fwait
push
ficompl
mov
dec
lock
jge
mov
sub
push
xchg
dec
adc
subl
test
sbb
fwait
iret
fs
out
aaa
clc
sub
lds
mov
aad
imul
sbb
push
shl
arpl
iret
inc
mov
cmp
adc
mov
push
ljmp
cmp
data16
and
fimull
lcall
out
inc
into
mov
adc
loopne
dec
call
jl
sti
adc
dec
xorb
mov
icebp
sbb
lock
mov
or
aaa
or
push
mov
shrl
push
lods
sarb
jbe
imull
sub
xor
cwtl
add
div
cld
loop
inc
int3
imulb
add
lret
fcmovnu
cmpb
push
xchg
enter
sub
inc
push
xlat
into
lods
sbb
std
js
sbb
punpcklwd
sub
repnz
loopne
mov
mov
sti
or
testl
shll
jl
ds
out
or
and
pop
mov
xchg
jg
mov
jnp
sub
or
fisttpll
adc
addr16
and
stos
xor
or
andb
fdivr
cmpsl
mov
add
mov
loopne
pop
roll
pusha
pusha
mov
xchg
jnp
scas
push
call
pop
pminub
and
cmpl
mov
loope
push
lds
pop
jle
loop
push
inc
mov
std
sub
push
mov
insl
mov
jmp
sbb
xchg
arpl
add
pop
cmp
imul
mov
stos
jne
jecxz
notb
sbb
jae
adc
pop
xchg
fldcw
xchg
lea
inc
rcl
popa
std
or
mov
rcll
pop
pop
movsb
or
inc
es
ljmp
adc
mov
shlb
and
push
loope
in
insl
movsb
xchg
lock
std
push
pop
mov
cmpsb
sub
mov
mov
das
repz
dec
fmull
xchg
mov
je
repz
xchg
sub
sbb
xor
inc
out
mov
mov
xchg
punpcklbw
add
in
aas
push
jns
popa
mov
xor
cmp
dec
dec
insl
jno
add
xor
sub
xor
div
inc
pop
jecxz
loope
in
in
test
mov
in
and
adc
outsb
out
movsb
or
sub
popa
add
mov
cmp
data16
pop
lret
nop
daa
sub
roll
popa
nop
xchg
jb
cwtl
out
mov
cld
push
xchg
test
add
lret
dec
mov
je
jne
cmp
mov
push
push
mov
xchg
fimuls
aaa
rclb
fimull
repnz
dec
inc
bound
lds
mov
ret
lahf
lea
add
test
ds
adc
xor
std
mov
into
push
cmp
mov
je
data16
push
cmp
ret
inc
mov
jae
arpl
outsb
outsb
fcmove
xchg
ljmp
aam
xchg
cmpsl
push
aam
push
push
pop
fs
ljmp
fiadds
push
dec
filds
sbb
add
scas
pop
mulb
jnp
mov
mov
push
and
mov
adc
cld
fistps
pop
je
xchg
fwait
gs
mov
cli
call
jl
lock
out
fldt
mov
cmp
mov
jge
addl
inc
pushf
sbb
jns
adc
mov
pusha
les
movsl
mov
out
dec
push
pushf
nop
xchg
lcall
loopne
mov
decb
mov
inc
dec
pushf
data16
and
orb
mov
mov
sub
jbe
or
dec
mov
pop
jae
push
shlb
ljmp
mov
mov
push
in
pop
test
or
fidivrs
mov
or
jo
adc
jbe
fs
lret
jnp
push
dec
test
xchg
xchg
repz
dec
pop
or
xor
pushf
shrl
cs
push
movsb
loop
and
addr16
lret
mov
mov
sbb
inc
push
arpl
jno
xlat
mull
xor
and
ret
pop
scas
jle
out
sbb
or
aaa
push
std
loope
inc
push
sbb
scas
pop
sub
mov
adc
loopne
outsb
push
loope
xor
adcb
adc
mov
pop
sub
cltd
adc
mov
pop
fsubl
inc
xor
pushf
fs
test
fsubrp
mov
and
in
push
sub
and
in
cmp
arpl
xor
pushf
xor
sti
dec
cmc
aaa
or
imul
add
cmc
jbe
mov
cmp
jo
or
add
xor
outsl
std
andb
jl
mov
imul
in
mov
jl
cld
push
movsb
loopne
add
jmp
dec
fadds
inc
mov
cmc
clc
xchg
mov
stos
test
jb
repz
or
jg
xchg
adc
xor
clc
nop
out
sbb
push
aad
test
sbb
fiaddl
outsb
and
js
out
push
mov
mov
ss
fiadds
js
test
mov
dec
or
data16
mov
int
xchg
mov
lock
mov
ret
fs
ret
insb
cmp
push
and
fmul
xchg
mov
shr
pop
js
cmovg
cs
cld
mov
xlat
mov
xchg
and
arpl
jne
addr16
or
dec
or
sub
mov
mov
jns
rcr
xorb
and
cmp
xor
mov
cmp
dec
imul
pop
push
icebp
sbb
sbb
dec
test
sbbl
pop
mov
jnp
push
test
test
adc
fcompl
push
stc
pop
fcmovne
fidivrl
or
jo
or
subb
sbb
punpcklbw
mov
ficoms
mov
in
lods
dec
popf
dec
push
insl
loop
pushf
jnp
and
jno
mov
fcomi
jp
lret
push
jb
aam
sub
mov
sbb
int3
cmp
jns
xchg
loop
mov
into
scas
rclb
inc
dec
or
mov
subl
jmp
ja
adc
scas
mov
lahf
int3
push
push
sub
sbb
cmpb
and
xchg
jnp
out
mov
adc
rclb
lea
add
int
jb
lret
xchg
mov
pop
mov
mov
daa
stos
add
lea
lods
ret
cld
out
ffree
dec
loope
das
test
pop
adc
jbe
jnp
mov
pusha
nop
dec
in
jbe
shlb
fxch
mov
test
cmpb
sbb
mov
lds
pushf
out
inc
call
inc
xor
repz
fisubl
lods
push
std
lea
jnp
ss
inc
or
xor
or
jg
filds
jnp
into
jl
sbb
push
call
repnz
mov
std
pop
push
jo
mov
xchg
rolb
or
rcr
mov
mov
xchg
lret
push
or
and
dec
js
add
out
insl
out
push
repnz
test
subl
inc
dec
mov
ljmp
daa
insb
cli
aas
cmpsb
pop
mov
gs
jae
mov
out
or
cs
jg
roll
cmp
cmc
or
lods
fbstp
pusha
xchg
or
dec
ljmp
scas
out
nop
arpl
lds
inc
dec
movd
in
cld
fildl
rolb
pop
movsl
mov
fxch
push
cld
sub
mov
aaa
jae
mov
shll
lret
ret
mov
pop
xor
movsb
push
jg
and
mov
fsubs
dec
xor
push
test
add
pushf
jb
mov
pop
pop
cld
nop
xchg
lock
test
frstpm(287
jge
and
ror
in
jmp
mov
mov
ja
pop
jns
dec
mov
inc
ret
test
jne
cmpsb
pop
rorb
or
jecxz
jns
jne
lret
pop
rcrl
rorl
xor
xchg
aaa
mov
prefetch
test
inc
inc
repnz
dec
jb
ljmp
sbb
pop
pushf
fdivs
cli
pop
daa
dec
out
sti
pushf
mov
mov
or
cltd
cmpsl
xchg
ljmp
or
jg
iret
sbb
js
push
mov
testl
sub
or
insl
bound
js
xor
dec
rorl
inc
push
push
out
fsubl
lods
mov
divb
fisubrl
pushl
dec
fsubl
lcall
repz
dec
mov
shll
add
outsl
mov
xor
les
mov
fistpl
out
add
addr16
xchg
lcall
dec
sti
adcl
das
cs
and
lret
stos
add
inc
inc
in
dec
fdivs
xchg
adc
repz
add
ret
and
js
in
enter
outsl
mov
mov
dec
aas
bound
mov
stos
sub
call
pop
mov
mov
xabort
xchg
inc
lahf
mov
pop
inc
cmpsb
sbb
mov
xlat
xor
cmp
jo
dec
test
lcall
stos
cmp
xchg
andl
orb
dec
mov
jmp
sti
loop
stos
loopne
mov
sbb
xchg
jle
outsl
ror
cmc
mov
shll
mov
leave
stc
fwait
and
or
pop
sbb
or
rorl
ret
scas
adc
ljmp
fisttpll
sbb
pop
mov
cmp
pop
out
roll
cmp
arpl
xlat
jns
adc
enter
mov
shlb
sbb
rcll
into
movsl
pop
shr
dec
cmp
xor
dec
add
lahf
das
mov
mov
push
inc
jnp
shll
push
pop
cli
mov
loop
dec
jmp
fdivrs
ret
mov
push
mov
int
out
or
cli
or
int3
jne
loop
xor
dec
fs
and
pop
ret
cli
enter
and
xlat
repz
dec
lret
jb
dec
imul
cmp
mov
xor
ja
filds
pop
outsl
lock
jae
dec
imul
inc
repz
dec
aaa
imul
inc
inc
in
call
std
lds
pop
fs
push
pop
loopne
icebp
pop
movsb
or
ljmp
mov
xchg
add
xor
std
xor
call
adc
jne
lea
pop
shll
sbb
mov
or
dec
cmp
mov
dec
cld
cmpsl
not
daa
push
movsb
sahf
mov
bound
enter
add
xchg
mov
pop
movsb
hlt
stos
sub
jo
sti
lret
scas
out
cmpsb
jl
mov
addb
out
lock
push
mov
jne
bound
imul
cwtl
roll
pop
sbb
dec
sbb
mov
iret
and
in
dec
mov
lods
sbb
fcompl
pushl
push
dec
xor
sub
data16
sti
pop
or
push
pop
sbb
add
and
scas
push
mov
sbb
push
imul
push
dec
jmp
in
xchg
push
xor
stc
fcmovb
sbb
cmp
mov
pop
ret
leave
ja
sbb
rcll
rcll
movl
cmp
in
push
or
lds
addl
insb
mov
jge
add
iret
div
arpl
jb
dec
addr16
shll
popf
in
mov
pop
fisttpll
inc
dec
std
sahf
or
aam
or
addr16
xor
jp
addr16
imul
leave
cmpsl
pop
pop
ret
mov
ds
insl
jg
scas
orl
push
pop
and
adcl
fbstp
mov
addr16
or
mov
inc
loopne
je
mov
cli
mov
scas
cmpsb
sub
inc
push
push
test
mov
jge
xchg
stos
mov
insb
test
xor
push
hlt
inc
pop
adc
inc
inc
in
pop
popf
js
jle
insl
push
cmpsl
xorl
jns
mov
cmp
out
fisttpll
call
dec
cld
or
cmp
imulb
jl
mov
call
mov
adc
mov
push
fsubrs
adc
sub
mov
adc
sahf
jo
jmp
jo
mov
and
xor
jl
xor
js
repz
sbb
sbb
cmp
roll
inc
sub
sarb
or
push
jo
inc
fmuls
add
and
sbb
stos
ret
jo
mov
mov
add
mov
out
dec
adc
fsub
mov
cmc
gs
iret
test
imul
loope
pop
out
mov
cmp
sahf
push
push
sti
aam
or
jmp
fsubl
lods
out
loope
xchg
xchg
dec
sub
or
in
je
insl
add
popf
test
fistpll
push
aam
inc
inc
or
adc
dec
pop
jecxz
roll
es
sub
xchg
aas
pop
xor
dec
scas
imul
or
sbb
ss
xor
sub
and
icebp
sub
rcr
or
dec
addr16
adc
add
inc
pop
clc
jnp
mov
pop
mov
cltd
cld
mov
test
mov
hlt
shlb
or
or
mov
add
push
jg
int3
test
jmp
xor
in
push
shr
pushf
xor
ljmp
iret
lds
sbb
mov
jg
lods
clc
pop
mov
lods
je
ret
lock
or
test
xor
pop
jg
cs
cmp
int3
and
sbb
outsl
imul
pop
imul
xchg
rcll
mov
pop
cltd
cs
cmp
mov
mov
dec
fs
rclb
push
inc
pop
fbld
jae
or
sub
ds
inc
lods
clc
xchg
fildll
neg
incl
jge
bnd
pusha
imulb
jne
xlat
sbb
xlat
arpl
sub
xorl
xchg
jl
add
or
sti
xor
clc
inc
lahf
call
lcall
dec
clc
dec
icebp
int
pop
mov
xlat
jno
dec
push
js
mov
mov
es
sub
push
js
xor
test
push
pop
mov
cmpsl
ss
lahf
inc
mov
cli
je
jbe
jl
js
xor
pop
xchg
lahf
or
fsubl
push
sbb
pop
das
bound
scas
jb
ret
xchg
cmp
push
movsl
pop
mov
aaa
inc
out
int3
arpl
push
pop
je
jmp
mov
dec
push
and
cmp
cwtl
inc
jns
or
jl,pt
stos
flds
sbb
add
pop
sbb
cmp
shlb
fstl
icebp
push
mov
into
ljmp
je
ret
out
out
aad
pop
mov
cmp
fwait
mov
push
mov
lds
mov
scas
xchg
jge
outsl
mov
jmp
and
ds
dec
shr
cs
cmc
and
loop
push
jbe
jae
mov
jno
das
mov
gs
pop
aas
mov
neg
dec
mov
cli
dec
fnstsw
mov
cmp
mov
mov
fdivrl
fistpl
add
mov
lret
xor
inc
jne
rcrb
mov
adc
or
out
out
adc
mov
repnz
dec
nop
std
popa
bound
int
arpl
roll
mov
stos
iret
ss
sub
pop
ss
dec
pop
add
sbb
inc
jecxz
push
jg
insl
dec
ret
add
ja
xlat
loope
js
rcr
add
cwtl
stc
negl
dec
push
mov
cli
jecxz
jo
fimull
nop
popf
lds
mov
insl
fcoml
xor
les
mov
push
icebp
fs
xor
lock
shll
xor
push
movlps
dec
add
push
mov
insl
in
lock
ficoms
int3
push
or
mov
rorl
les
adc
fmull
fbstp
mov
ds
mov
jp
imul
iret
inc
outsb
popf
ss
push
add
push
outsb
push
mov
aam
repnz
cltd
or
ja
xchg
mov
inc
dec
push
pop
leave
fisttpl
mov
insb
ficompl
dec
fidivs
cli
ficoml
cli
loopne
pop
sub
sbb
xchg
xchg
mov
test
fmuls
cmp
daa
jecxz
push
push
cli
inc
filds
ljmp
loop
inc
jns
orl
add
out
rolb
or
lea
rclb
fsubrs
repz
mov
aas
or
adc
flds
fwait
dec
rolb
mov
dec
js
ljmp
cmp
dec
xor
js
enter
push
shlb
xor
jg
pusha
outsl
int
and
repz
scas
xchg
loopne
out
push
rolb
div
addr16
nop
push
jbe
ja
mov
rorl
mov
jl
jp
and
fdivs
jecxz
sbb
sub
faddl
out
or
and
bound
les
in
jmp
jl
test
mov
leave
adc
push
pop
mov
adc
push
pop
jo
stos
jns
clc
lcall
rorl
into
sti
dec
add
mov
xchg
mov
jl
aas
lret
sbb
xchg
xor
sub
add
stc
xor
nop
mov
rolb
pusha
syscall
out
arpl
pop
push
ret
xchg
mov
mov
repz
sub
mov
inc
notb
mov
stos
in
ja
testb
push
fcmovbe
sbb
cli
ja
mov
xor
lea
push
adc
pushf
ret
adc
hlt
mov
sbb
les
fsubrs
out
leave
sub
filds
int3
aaa
incl
rorl
mov
jmp
mov
stc
cmpsb
xorb
push
ljmp
adc
xchg
mov
rorb
adc
cld
insl
aad
cmpsl
sbb
ss
xchg
test
lret
pop
add
dec
sbb
mov
pushf
cltd
rorl
addr16
mov
test
jmp
fldl
arpl
mov
push
loop
addr16
lods
fdivr
lds
mov
cwtl
push
push
popfw
mov
cld
popa
mov
jp
mov
out
pop
add
xchg
lods
dec
adc
dec
xor
mov
mov
pop
cmp
push
test
pop
pop
cltd
aaa
pop
cld
aad
mov
not
sbb
xchg
xchg
or
cli
pop
das
movsl
dec
mov
or
and
jp
pop
add
shr
sbb
repnz
ret
push
icebp
add
cmp
mov
roll
pop
mov
or
push
dec
sub
cmpsb
and
nop
sub
lods
cmc
sbb
mov
daa
out
arpl
jl
mov
and
push
jnp
sub
mov
sub
stc
add
xchg
add
nop
test
outsl
mov
mov
fcmovne
arpl
addr16
in
jbe
push
aas
ss
or
testb
rolb
xchg
xor
pushf
pushl
mov
xor
lock
sbb
mov
sbb
push
testb
rolb
mov
or
add
mov
jmp
stos
int3
xor
cltd
jge
mov
mov
pop
inc
rcl
push
ja
shll
and
or
sub
or
xchg
mov
hlt
popl
xor
outsb
mov
scas
pop
inc
cmp
mov
or
das
in
mov
dec
and
aas
in
lods
in
lods
cmp
or
or
sbb
pop
mov
out
jnp
hlt
test
dec
or
cmp
pop
adc
gs
in
add
in
inc
aam
push
shrb
lock
sub
mov
sub
push
repz
rorb
dec
cmp
mov
imul
data16
pop
lret
add
sbb
jge
adc
push
xchg
sarl
cmp
cmpsb
imul
xor
test
leave
and
jns
out
cli
sbb
or
out
jmp
push
xchg
into
movsl
xchg
dec
jne
sbb
stos
push
sub
xchg
div
rorl
aam
mov
xchg
ficoms
pushf
mov
les
fildl
push
scas
imul
add
cmpsb
mov
ret
jb
cmp
inc
les
data16
mov
dec
jbe
xchg
add
popf
pop
test
cmp
and
push
mov
imul
mov
push
dec
ljmp
sub
test
ret
adc
outsb
popa
roll
adc
push
jecxz
lahf
test
in
or
mov
idivb
nop
cmp
xchg
fwait
or
mov
adc
cli
mov
sbb
inc
or
add
shl
adc
imul
adc
xchg
xchg
in
bound
xlat
mov
push
lret
daa
stos
mov
sbb
add
sub
add
xchg
lret
jg
ss
push
xor
mov
pop
or
xchg
ja
insl
mov
lods
jb
xchg
mov
xchg
mov
xlat
in
arpl
mov
shrb
jle
or
or
push
loopne
loop
xchg
xchg
mov
lock
mov
cmp
inc
popa
div
hlt
hlt
lret
bound
rolb
js
test
inc
xchg
faddl
mov
stos
cmp
insl
and
and
repnz
adc
std
pusha
orl
ret
or
mov
push
bound
repnz
outsl
lret
inc
loope
insl
pusha
ds
loopne
fldt
pop
lea
push
xor
dec
sbb
mov
iret
jle
jge
xor
outsb
dec
inc
clc
pop
in
push
mov
jns
add
movsb
sahf
fmulp
adc
add
add
push
popa
shll
sar
adc
sti
test
shlb
loop
sub
jo
xor
inc
imul
insb
fcomip
xor
sti
pushf
mov
push
push
insl
add
out
sbb
sub
xor
jns
cltd
mov
push
xchg
repz
inc
adc
shlb
or
pop
cmp
sbb
lods
inc
shlb
xor
lret
cmp
dec
scas
mov
mov
popf
sub
pop
sbb
jmp
mov
arpl
and
push
dec
xor
outsl
sti
scas
mov
and
or
or
aaa
repz
lds
enter
xor
lcall
cli
jecxz
daa
movsb
inc
add
push
in
sti
xchg
cmp
cmpsb
ret
dec
div
movsl
lds
mov
fildl
test
test
dec
pop
loopne
fadds
mov
sub
pop
rolb
cmp
jge
test
xchg
repz
xor
mov
dec
fcompl
mov
or
inc
in
mov
add
bswap
cmovnp
cld
push
push
inc
jb
stos
mov
mov
pushf
js
or
sub
or
inc
jg
lea
pop
ret
repnz
arpl
lds
mov
mov
daa
push
pop
test
mov
lock
repnz
add
daa
orb
and
ss
mov
add
daa
lods
pop
ret
mov
test
ds
mov
and
adc
xor
je
jns
repz
or
int3
insb
jae
jns
stos
mov
cs
clc
jl
inc
cs
push
jne
cmpsl
stos
jp
ficompl
xor
dec
cld
mov
sbb
mov
test
pop
sbb
mov
stc
adc
adc
add
push
jne
sahf
push
pop
mov
aad
in
fmuls
jae
jnp
addb
ret
mov
and
xchg
lods
or
ljmp
das
inc
inc
stos
dec
pop
cmc
aas
and
push
inc
adc
lods
adc
in
subl
add
pop
imul
inc
and
mov
gs
pop
pop
je
gs
ds
adc
cmp
inc
jg
mov
inc
and
lcall
ja
inc
pop
mov
jecxz
insb
sbb
in
mov
mov
cs
lahf
mov
repnz
cmp
sbb
je
jo
lret
xchg
lea
lret
sub
adc
mov
or
das
pushf
loop
mov
cltd
xchg
frstor
enter
sbb
lea
inc
adc
xchg
push
adc
out
loop
scas
stos
xchg
nop
cmpsb
push
sub
daa
push
clc
bound
push
pop
jnp
xchg
mov
in
loope
mov
mov
clc
stos
mov
adc
push
pusha
or
pushf
out
dec
add
cmpsb
scas
lods
xchg
cwtl
xchg
xor
mov
mov
sub
pop
lcall
cmpsb
sub
int
mov
xchg
xchg
jb
xor
scas
iret
or
aam
sub
sub
push
or
sti
in
in
adc
inc
jge
push
test
shll
fcomps
and
imul
shll
cmp
sub
lahf
or
add
cmp
cmp
mov
lods
in
cmp
mov
push
iret
in
aad
xchg
xchg
xchg
lret
mov
repz
sbb
jnp
outsb
es
lods
aad
dec
fbld
ja
add
loope
xor
push
test
inc
pop
or
je
testb
call
lret
or
std
jne
xor
daa
xorb
loope
repnz
xchg
mul
mov
and
pushf
xor
mov
pop
in
cmpsb
cmp
sti
adc
insb
xchg
sub
fst
push
xlat
ret
pop
ss
icebp
push
inc
xor
cwtl
pop
fistl
jg
addr16
and
les
mov
push
shrl
inc
ds
pusha
cltd
stos
mov
dec
hlt
xor
or
dec
ror
scas
sub
rcrl
sbb
loopne
lahf
cli
cmp
aaa
pop
leave
or
cs
cmp
gs
mov
dec
pop
outsl
jg
rorl
lahf
shll
cmp
cmp
fsubl
ret
jb
mov
ds
jge
pop
ret
out
leave
xchg
cltd
xor
inc
int3
mov
adc
cli
mov
andl
mov
mov
mov
xor
push
outsb
lcall
mov
in
jnp
aad
daa
cmp
mov
sar
push
cmp
adc
jns
std
mov
insl
loope
jbe
add
jecxz
sub
movsl
rclb
pop
jno
cmpsl
je
mov
int3
loop
cmc
ja
mov
adc
adc
and
andl
cmp
fldl
mov
mov
add
cmp
sbb
adc
xchg
push
lret
nop
pop
mov
adc
scas
push
push
mov
sbb
mov
xor
leave
sbb
in
jge
fnsave
jp
dec
pop
or
loop
aaa
andb
pushf
xchg
cmp
ret
xor
sub
pushf
push
xorb
and
cltd
imull
lret
jmp
xchg
adc
scas
lock
cmp
sahf
call
add
fmull
inc
out
add
push
pop
xor
pop
adc
and
pop
out
pop
js
mov
xor
dec
mov
jnp
push
mov
clc
mov
popa
xchg
inc
pop
dec
dec
mov
pop
adc
lahf
lods
icebp
sbb
dec
add
mov
jne
hlt
push
repnz
outsb
add
cld
addr16
cmpsb
rcll
cmpb
adc
outsl
pushf
sbb
cmpsb
mov
fidivl
stos
in
adc
mov
orl
and
or
push
jo
sub
dec
pop
fld1
sub
aam
mov
lahf
push
into
jmp
sub
add
and
push
pop
hlt
xchg
jge
imul
cli
in
sbb
fildll
inc
pop
pusha
xchg
scas
dec
out
adc
add
enter
rcll
lcall
lds
xchg
jae
in
pop
and
pop
adc
push
out
lahf
lock
imul
cmpsb
pop
xor
or
int3
pop
jae
iret
mov
andb
or
push
aam
lret
divb
lods
cmc
pop
push
or
fs
lret
clc
add
leave
pusha
test
imulb
xchg
fs
jp
test
jns
fs
pop
add
rcl
or
xor
or
dec
into
jp
xor
cmp
pop
push
test
ss
and
icebp
out
jo
inc
xchg
jmp
xor
jcxz
inc
movl
push
ds
and
add
inc
lock
cwtl
imulb
mull
xchg
pop
jne
mov
aad
mov
add
lret
decl
mov
xchg
movsb
test
adc
divb
jecxz
mov
in
inc
mov
add
cmp
sub
jl
cwtl
rcll
mov
xor
pop
fldenv
pop
adc
sub
lods
sub
or
mov
mov
pop
push
sub
add
push
daa
mov
mov
repnz
fisubs
sub
mov
xchg
adc
pop
loop
mov
in
rcl
cld
movsl
mov
pop
xor
inc
xor
cmp
into
loop
dec
jnp
and
imul
push
cmp
pop
mov
jae
cmp
xchg
or
cmpsb
push
rorb
dec
sbb
lcall
mov
mull
cwtl
insl
mov
or
dec
push
xor
jns
adc
fs
jg
sbb
out
cmp
fwait
leave
rcll
push
lea
mov
fs
sub
push
cmp
inc
pop
jne
and
push
mov
mov
adc
and
add
dec
rclb
jb
add
xlat
repnz
mov
outsb
jg
pushf
sbb
mov
jo
test
or
push
movsl
push
pop
scas
sub
int
or
mov
and
outsl
xorl
fldcw
inc
addr16
es
xor
jecxz
jecxz
push
repnz
jb
sbb
dec
lock
jmp
in
fidivrs
jp
pop
sbb
mov
sahf
test
shll
add
sbb
adc
and
ss
js
and
mov
adc
outsb
outsb
sub
xor
and
aam
inc
pushf
stc
shrb
mov
adc
fmuls
in
push
neg
gs
sub
mov
jae
add
xchg
mov
out
mov
xchg
adc
sub
adc
jb
add
jb
je
inc
cmp
pop
popa
push
or
fcomps
fcomp
mov
fisubrl
push
lea
mov
js
jne
jnp
test
stos
fisubl
packuswb
pop
loop
xchg
popf
ret
mov
mov
fimuls
jne
scas
inc
shrb
scas
xor
xchg
push
daa
movsl
mov
push
out
jge
mov
mov
fcomi
pop
sub
mov
sbb
iret
add
push
mov
and
dec
aaa
lahf
les
add
cwtl
dec
stos
push
bound
push
lret
jno
addr16
cmp
cmc
jp
dec
jge
mov
cli
rcl
mov
dec
pushw
add
cmp
in
lods
sbb
cmc
inc
push
pop
xchg
enter
jge
inc
jnp
mov
stos
nop
pandn
sbb
cmp
aad
test
jbe
jb
mov
xor
cmpsl
aas
outsb
leave
push
and
lods
jb
je
popa
sbb
push
pop
fsub
cmpsl
sahf
repnz
lret
cmp
and
jecxz
leave
dec
mov
adc
jnp
mov
sarl
sti
das
dec
add
and
pop
push
push
fldcw
add
stc
jns
inc
sbb
ret
push
cmp
cmc
std
addr16
imulb
adc
ja
cld
fdivr
mov
push
rcrb
and
ret
sub
lcall
inc
inc
cmp
add
mov
mov
repz
popf
out
cmpsl
gs
out
cli
mov
sti
mov
mov
loope
mov
mov
testb
sub
pop
out
mov
ret
lock
rcll
iret
test
push
xchg
stos
sbb
fsubs
and
and
lods
out
pop
loop
cmpsb
xor
fcmovnbe
jge
dec
push
jp
mov
in
shl
add
outsl
cmp
loope
and
fwait
and
cld
dec
imulb
lret
push
pop
sub
xor
repnz
xchg
test
jno
stos
ret
int3
xlat
out
xorl
cmp
rorl
inc
stc
scas
inc
jg
inc
ljmp
out
ss
iret
xor
sarl
in
outsb
cs
lods
mov
pusha
sbb
mov
aas
sarb
in
or
mov
cmp
add
out
insl
xchg
jecxz
sbb
sub
mov
xorb
lahf
mov
rcrb
sbb
aad
lcall
stc
movsb
pop
sbb
sub
inc
xor
sbb
adc
ret
sahf
icebp
jne
cmp
ss
sub
xor
jb
sub
pop
mov
mov
cli
mov
ss
push
in
push
outsb
repnz
nop
sbb
cmp
ja
fidivs
mov
mov
push
in
push
stos
xor
ficoml
popa
lods
sbb
cltd
int3
hlt
ret
fsubrs
stos
iret
push
imul
cld
adc
cmp
pop
pop
shr
mov
ds
sbb
mov
ror
fcmovne
cmp
outsb
jp
xor
cld
cmp
adc
xchg
iret
mov
mov
pop
rcr
call
mov
pop
mov
xchg
loopne
xor
xchg
sbb
pop
lock
mov
sbb
mov
or
cli
test
cmp
daa
push
and
add
cmp
and
push
and
lret
outsl
scas
dec
out
fnstsw
les
or
and
sbb
and
and
in
pusha
jecxz
mov
jns
push
and
pop
inc
cltd
fdivrs
adc
mov
shrb
mov
sbb
in
xchg
mov
mov
and
inc
pop
sbb
pop
fdivl
mov
fsubrp
mov
mov
jno
cs
enter
mov
aam
xlat
imul
and
in
lock
mov
add
pop
push
lcall
jmp
lea
jnp
jbe
or
les
jp
xchg
in
push
lock
or
lods
xchg
and
in
test
sbb
repz
mov
or
insl
push
jl
push
sub
jg
add
cmp
lods
inc
push
movsb
aaa
imul
jb
pop
loope
adc
in
cmpsb
je
shll
mov
js
pop
in
int3
mov
mov
popf
lret
sub
jmp
xchg
popa
cmp
repnz
inc
insl
sbb
enter
sbb
mov
fdivr
loop
jg
sub
jbe
lret
sub
pop
inc
push
sub
shlb
lret
addl
ror
and
dec
jle
outsl
mov
jl
scas
sbb
inc
cmp
les
cmc
jg
int3
mov
inc
fisubl
fcoms
mov
and
ret
dec
and
cwtl
add
dec
mov
ret
mov
movsb
add
add
or
dec
call
outsl
cmpsb
lahf
inc
scas
cli
sti
inc
jmp
lods
lds
lods
mov
mov
loope
cmp
xor
mov
shlb
jns
sbb
fs
cld
addb
mov
dec
ffreep
pop
shll
mov
xchg
cmp
xlat
jmp
sbb
lods
aaa
in
pusha
ds
mov
dec
jle
jp
hlt
cmc
popa
dec
insb
loope
out
sbb
in
stos
sub
mov
cmp
cmp
sub
pop
bound
add
aas
test
jge
dec
rcll
pop
lds
cli
sub
fcomi
cmp
mov
mov
gs
sahf
adc
jecxz
out
aam
and
push
fidivrl
pushf
xchg
pop
sbb
mov
cwtl
xchg
insl
outsl
insb
adc
lahf
cmp
xor
jnp
ss
imul
sti
jge
mov
push
mov
inc
ret
icebp
adc
das
repnz
push
pop
jae
fstpl
repnz
mov
push
fdivl
push
inc
imul
test
adc
popf
js
popa
push
xor
and
adc
and
test
sti
int
push
loop
aad
ret
inc
gs
jo
lret
roll
pop
sarw
fdivrp
sub
retw
rol
shlb
mov
or
jg
jge
call
lret
jo
mov
sub
mov
rclb
mov
rorb
jmp
clc
popa
xchg
mov
inc
je
jecxz
std
adc
add
xchg
add
mov
shlb
fidivl
call
xchg
and
test
and
bswap
xor
dec
lcall
test
in
jbe
dec
sub
inc
sub
stos
xchg
jmp
int
cmp
inc
pusha
dec
out
dec
inc
aaa
cld
mov
add
or
push
or
cli
mov
dec
mov
dec
dec
sbb
scas
inc
outsb
hlt
pop
or
leave
leave
cmpsl
out
fwait
push
stc
ss
ljmp
rcrl
mov
push
daa
clc
aaa
mov
pop
jo
pushl
jae
push
cmpl
adc
dec
out
sbb
cwtl
cltd
adcl
loopne
or
cmp
bound
mov
enter
jmp
xor
or
mov
das
enter
rorb
lret
out
pop
xchg
sbb
jns
mov
mov
mov
es
jae
jle
mov
jb
fsubrp
enter
ret
ja
xchg
pop
loop
cmpsb
and
outsb
cltd
push
sub
fdivs
out
popf
cmpsb
inc
inc
and
inc
int
cld
cmpl
push
jnp
sbb
xor
pop
aad
fbstp
dec
test
mov
fdivrs
push
add
xchg
fdivrl
fsubrs
fistps
not
adc
push
xchg
mov
rorl
pop
mov
pop
ljmp
dec
call
cmpb
cmpsb
cmp
xor
shr
fsubs
cmp
lds
lods
mov
mov
ja
push
jmp
mov
test
mov
xchg
jecxz
jns
aad
out
test
addr16
sbbl
cmp
movsl
jne
out
fs
jae
fmull
mov
lds
adcb
xchg
sub
add
ror
inc
ss
jecxz
sbb
pop
and
push
iret
lcall
pop
pop
mov
int3
jmp
imul
jb
pop
fcmove
xor
push
cmc
mov
dec
roll
jmp
mov
xor
jle
popl
ret
mov
jge
sbbb
adc
push
xchg
out
adc
cli
arpl
pusha
nop
cwtl
jl
push
cmc
mov
testb
les
cmp
repnz
xor
adc
pop
fdivrp
lea
mov
cs
mov
and
inc
bound
mov
std
adc
shrl
sarb
lods
call
dec
dec
push
aaa
lahf
mov
and
jmp
dec
sbb
push
jl
fs
sar
pushf
fildl
aaa
sbb
mov
fdivrl
insl
mov
jnp
test
test
xchg
pop
in
add
push
sarl
sub
hlt
add
es
jne
lods
mov
test
sbb
jecxz
das
faddl
call
lret
test
inc
pop
inc
dec
pop
jmp
jne
mov
cld
dec
imul
add
push
cs
test
sub
in
mov
jbe
inc
repz
aam
test
sti
fs
pop
inc
add
mov
dec
fidivrl
incb
cltd
xchg
push
scas
jg,pn
dec
jno
test
mov
xchg
push
stc
ficomps
mov
xchg
sbb
xchg
inc
cwtl
std
daa
aas
stos
iret
pop
adc
cld
sub
mov
push
pop
movsb
out
jnp
pop
or
jmp
mov
loope
mov
rcll
adc
xor
cwtl
xor
ja
data16
cmp
cwtl
and
js
ret
add
nop
sub
push
shl
fsubrl
add
outsb
xchg
pop
jp
inc
dec
adc
stos
fs
fdivr
mov
ret
cmp
ja
mov
add
notl
mov
xor
mov
jae
mov
nop
sub
and
sti
idivl
jae
mov
cmpsl
lock
add
mov
fsubrl
push
imul
dec
push
fsubrs
ss
and
imul
inc
or
sbb
int3
jge
sbbb
sub
and
xchg
and
sub
ljmp
in
mov
dec
jae
xor
call
icebp
jl
ror
mov
inc
dec
xor
adc
shrb
mov
sbb
push
cmp
aaa
sbb
shufps
push
jnp
loopne
dec
sub
sarl
les
fdivl
add
push
inc
test
clc
push
adc
inc
aad
push
mov
dec
iret
cmp
ror
xchg
popa
or
cmp
inc
cltd
fstpl
jns
and
test
and
daa
xchg
mov
cmc
clc
lcall
mov
mov
shl
scas
shr
cmp
incl
cwtl
jnp
movsb
addr16
sarl
mov
sbb
push
and
push
mov
mov
test
sub
shl
hlt
cmp
mov
xchg
fisubrs
cmp
and
pop
jmp
insl
std
insl
add
int
cltd
fsqrt
cmp
add
iret
push
or
cmp
jle
push
jbe
jmp
jns
icebp
adc
imul
ret
cs
xchg
ss
mov
jbe
inc
loope
push
xor
or
test
ljmp
std
mov
sbb
push
cmp
call
ss
pop
repnz
ds
lcall
xchg
jbe
push
sbb
lret
pop
outsb
mov
iret
ljmp
sub
fdivrs
and
jo
mov
stc
fisttps
out
mov
add
jne
scas
fsts
clc
out
xchg
inc
cmp
mov
gs
add
stos
loopne
sbb
xchg
cmpsb
xor
cmp
outsw
test
hlt
push
out
stos
xchg
dec
add
add
mov
or
in
mov
mov
inc
or
jno
popf
outsb
mov
mov
inc
out
add
sbb
lods
ds
add
add
inc
imul
scas
push
ret
loopne
aam
xor
movsl
inc
cwtl
and
insl
mov
push
mov
mov
test
xor
push
add
add
inc
jecxz
mov
push
sub
pop
mov
or
fistl
push
pop
sub
popa
popf
out
sbb
mov
mov
ret
dec
mov
jmp
jle
dec
in
enter
shrb
mov
sub
mov
int
adc
pop
aam
add
jae
cmp
mov
iret
jg
popa
and
add
and
xchg
jge
jle
adc
sbb
dec
adc
adc
add
mov
ret
jl
arpl
idiv
pop
je
fwait
and
daa
leave
xchg
sahf
loope
cmp
mov
cltd
mov
sub
sbb
aad
and
ja
fucomp
push
jle,pn
mov
cmc
ds
popa
dec
add
and
and
and
jmp
inc
out
out
rorb
cmp
bound
jg
sbb
stos
stos
mov
pop
fadds
push
daa
jbe
cltd
idivb
jnp
or
add
push
pop
xchg
xor
pop
popf
repz
dec
jo
or
mov
test
xor
addr16
mov
dec
int3
int
and
xorb
or
dec
adc
imul
jmp
cmp
imul
outsl
out
movsb
jae
adc
out
add
out
or
cmpsb
mov
pop
loope
std
fwait
pusha
cmp
cmp
js
das
fnstsw
push
or
fcoms
or
jmp
adc
addr16
test
lret
cli
or
loopne
adc
fnsave
pop
push
cmc
addr16
lods
stc
movsb
inc
adc
data16
mov
mov
and
inc
pushf
pop
fisttpll
pop
out
dec
fiadds
add
push
jnp
cli
fcmovnbe
pop
or
jmp
inc
dec
or
push
fisubrs
scas
add
xchg
adc
repz
xchg
out
fcompp
test
dec
aaa
xchg
iret
or
lcall
je
movsl
push
pop
push
pop
inc
mov
fidivrs
sti
in
cs
inc
lea
xchg
daa
and
push
test
gs
scas
inc
data16
mov
cltd
mov
inc
das
sbbb
pop
jo
mov
cmp
push
pop
test
sub
imul
sbb
pop
arpl
inc
xor
stc
mov
xor
pop
xchg
leave
outsb
push
mov
jns
fildl
aaa
adc
adc
insl
dec
lods
sarl
mov
dec
ret
dec
rorb
jp
xor
out
popa
ljmp
sub
movsl
xchg
jno
inc
loope
ss
test
std
mov
aam
dec
and
or
push
mov
xchg
lock
addr16
jns
imul
lock
inc
sub
je
popf
enter
pop
mov
dec
imul
jp
adc
fstps
arpl
or
or
push
cmp
jo
mov
in
xchg
sbb
adc
mov
rclb
push
scas
cmp
mov
add
ret
push
sub
outsl
dec
insl
fxch
hlt
stc
insl
lret
sub
mov
inc
mov
or
and
ds
notl
mov
cmpsb
inc
mov
xchg
leave
inc
push
pusha
dec
int3
cmpsb
inc
xchg
add
popf
add
add
adc
jl
out
mov
push
jnp
cmpsb
inc
in
mov
fwait
mov
les
lcall
mov
outsl
mov
aam
sbb
mov
jb
imul
inc
push
stos
inc
jmp
sub
jbe
xchg
cmp
daa
scas
dec
pop
pop
pop
testb
loop
cmp
pop
ret
cmc
in
sub
dec
sub
fdivrs
loop
inc
pop
adc
ficomps
mov
lret
sti
ja
xchg
stc
lds
shrl
daa
mov
les
jae
enter
nop
lods
mov
mov
popa
pop
cmp
sbb
cmpsl
fildl
cmp
adc
int3
mov
push
mov
fistps
xchg
or
adc
mov
adc
addr16
repz
xchg
jnp
lds
cmc
fidivl
repnz
lods
push
mov
cwtl
mov
xorl
test
mov
mov
addr16
inc
ret
cmp
scas
not
mov
popa
push
pop
push
shlb
scas
adc
icebp
pop
sub
and
int3
imul
pop
mov
mov
pop
mov
sub
dec
popf
cmp
pop
ret
loope
xchg
pusha
adc
dec
loope
mov
and
xchg
lret
aaa
adc
xor
sbb
mov
test
sarb
mov
icebp
roll
lods
jno
fists
xchg
and
fnstcw
jb
lcall
add
add
cmp
scas
and
lcall
sbb
pushf
inc
out
fisubl
fsubl
fldln2
lcall
jl
cmp
mov
fucomi
int
pop
mov
out
cmp
cli
sti
mov
jl
shr
push
imul
mov
shr
in
mov
ss
xchg
xchg
mov
lcall
test
push
out
jae
jae
xchg
lret
and
xchg
xchg
xor
add
clc
inc
into
pop
test
xor
ds
push
pop
pop
es
jnp
sbb
bound
pop
out
jmp
sub
pop
and
mov
repz
fists
jp
add
dec
cmpsb
mov
in
mov
outsb
jnp
push
xchg
sub
iret
adc
out
ret
repz
repnz
mov
stos
je
push
cld
enter
aas
testl
sub
pop
pop
sub
mov
mov
jl
repnz
fistl
inc
mov
sbbb
cmp
cmp
in
scas
add
daa
call
fadds
leave
ss
cmp
and
std
repz
loop
cmp
repz
cmp
aam
lods
mov
and
mov
xor
cmp
push
fstl
inc
lock
cs
dec
mov
push
inc
dec
inc
or
cmpsl
into
stos
add
es
divb
loop
outsl
leave
das
enter
sub
dec
sbb
nop
dec
push
xchg
xchg
inc
nop
jge
scas
shl
add
ss
int
aam
pushf
dec
ss
test
std
or
out
les
hlt
pusha
xor
loopne
ljmp
stos
push
jle
cmpsb
sbb
das
ror
dec
loop
je
js
sub
sbb
into
xchg
pop
adc
add
mov
rcl
push
push
shlb
loopne
dec
mov
xchg
imul
jp
fcoml
adc
mov
repz
push
int3
mov
iret
leave
jge
mov
test
outsb
xor
sbb
ss
clc
inc
mov
xchg
cmpsl
pop
inc
in
inc
dec
in
pushf
jne
int3
mov
xchg
mov
js
nop
int
stos
rcl
aaa
dec
push
dec
push
add
pop
jl
or
fwait
repz
push
add
lahf
lret
ds
pop
sbb
xor
test
jmp
or
pop
inc
jae
push
pop
mov
fnstcw
div
inc
test
sub
data16
fistps
pop
or
dec
shrd
js
push
roll
fistl
push
leave
adc
aaa
scas
dec
test
out
les
xchg
or
mov
movsl
jbe
inc
int
and
fisubrs
jmp
fisubs
push
hlt
mov
push
xlat
lock
dec
repz
push
loope
adc
pushf
xor
cwtl
mov
popf
dec
pushf
sub
cmc
stc
inc
xchg
jle
xchg
outsl
cld
jle
cmpsb
jae
add
dec
lods
in
in
cltd
xlat
loope
dec
cmpsb
add
pop
xchg
into
test
inc
jnp
inc
lods
test
loop
pop
rcl
ret
sub
movsb
dec
jl
xchg
push
push
pusha
loop
inc
pop
xchg
xchg
not
repnz
inc
adc
outsl
pushf
jmp
sbbb
jae
imul
data16
enter
dec
xchg
shrl
loopne
sub
les
inc
fwait
mov
imulb
mov
and
mov
mov
mov
cltd
cmp
imul
out
int3
shlb
jnp
mov
shl
fdivr
fwait
test
ret
push
xchg
push
mov
ret
cmc
xchg
pop
pop
mov
sarb
scas
mov
das
aaa
mov
addr16
pusha
lret
dec
data16
out
popa
loop
xchg
mov
add
sarl
inc
and
add
pushf
push
adc
cmp
add
pop
imul
leave
outsb
and
in
jbe
cmp
jp
jl
pusha
or
and
in
pop
inc
fisttpll
cmp
int
mov
ficompl
aam
push
jp
or
jne
fisttps
nop
int
jne
push
sbb
mov
dec
dec
jns
insl
ficoml
jmp
jmp
aam
divb
or
add
add
fldt
call
idivl
daa
repnz
lcall
mov
push
pop
or
sbb
into
mov
pop
lret
pop
mov
popf
or
mov
movsb
sahf
lea
and
test
inc
xchg
inc
jno
sbb
adc
scas
imul
rcrb
shlb
add
mov
mov
nop
outsl
sarb
sbb
dec
ja
repz
gs
xlat
ss
sbb
mov
loope
add
int
cli
cld
xchg
dec
arpl
sub
leave
repz
cli
pushf
sub
push
jbe
je
inc
mov
fsincos
mov
pop
sbb
inc
push
xchg
dec
enter
lret
jle
or
pop
shll
cmpsl
sbb
xchg
pop
fstpl
loop
outsb
outsl
daa
push
pop
jp
sub
dec
push
mov
pop
lods
push
aas
into
int
out
dec
hlt
rorb
cmpsl
fildll
out
sbb
outsb
lds
gs
mov
fstl
xchg
insl
adc
jp
add
and
test
lret
jecxz
sbb
cmp
mov
pop
mov
movsl
dec
test
shrb
push
call
ret
aad
xor
idivl
xor
aaa
cld
es
xchg
repnz
insb
push
stos
das
loopne
inc
xlat
xor
xchg
jae
adc
jb
jmp
push
iret
pop
cmp
inc
shr
shlb
es
jmp
lcall
push
in
push
push
ja
inc
mov
push
int3
and
popf
xor
sub
fs
mov
xchg
inc
sub
ret
mov
pop
aad
mov
sub
or
inc
push
test
mov
jae
xor
xlat
cld
pop
or
or
outsl
movups
and
icebp
xor
mov
adc
xchg
sbb
adc
mov
jmp
add
cld
scas
adc
dec
mov
mov
push
mov
lods
add
out
pop
rcrl
out
inc
pop
outsb
xchg
out
xchg
pop
push
sbb
adc
mov
fstpt
daa
xchg
out
and
or
imul
sub
or
push
inc
dec
movsb
sub
mov
insb
pop
cmp
push
pop
cmp
outsb
xor
test
jne
popa
cmp
inc
lcall
sbb
mov
dec
fiadds
or
cmp
in
rolb
sbb
dec
jg
mov
mov
loopne
lods
das
movsb
sbb
mov
aas
cmp
adc
and
popa
mov
sar
icebp
push
add
mov
lods
inc
lret
lock
repz
or
jnp
test
in
rolb
adc
movsb
ds
mov
pop
lret
in
jmp
mov
rclb
aaa
add
gs
call
es
stos
pop
hlt
pop
movsb
test
in
xchg
popa
mov
add
jno
xor
xor
and
pop
mov
sarb
pop
push
cld
aaa
mov
sarb
and
int
push
and
pushf
int
and
mov
xlat
xchg
shll
stc
out
cmc
inc
push
pop
mov
xchg
shlb
notl
inc
lcall
jnp
hlt
in
in
and
add
sub
dec
pop
enter
es
lea
jne
roll
loopne
sbb
mov
shll
xchg
ljmp
jnp
imul
pop
jp
xchg
ficoms
dec
sbb
push
or
aad
scas
mov
fldt
dec
sub
jle
mov
out
rolb
es
push
shl
adc
xchg
pop
repz
add
sub
das
or
popa
cmp
sub
jecxz
cli
int3
nop
jns
flds
dec
adc
dec
bound
mov
or
dec
mov
stos
lock
and
lds
pop
mov
iret
push
repnz
call
inc
cmc
test
push
pop
mov
adc
cmpsb
data16
sbb
mov
cld
movb
add
pop
lret
aaa
push
mov
push
dec
mov
ret
add
lcall
loope
test
out
cmc
dec
lock
jns
mov
push
mov
nop
push
int
in
mov
lods
cmovne
mov
dec
cmp
mov
test
stos
inc
sbb
xchg
lods
add
sbb
mov
imul
loop
lret
leave
sub
push
stos
or
mov
add
sbb
push
cmpsb
pop
jno
les
sub
inc
insb
xchg
xor
push
add
xchg
push
and
sub
cs
mov
int3
in
enter
pop
mov
int3
mov
test
lret
sub
scas
or
cld
jl
lcall
in
inc
pop
bound
and
sub
mov
jle
push
cmpsb
imul
mov
cmc
jo
daa
jae
addr16
ret
xlat
rcll
aad
mov
pop
xor
jmp
xor
add
andb
dec
daa
adc
push
les
dec
add
push
sub
jl
nop
sahf
mov
int
stc
fisttpll
aas
adc
popf
jmp
jne
xor
and
ret
adc
enter
dec
sbb
add
pop
add
jge
pop
popa
inc
loopne
sub
push
cmp
lods
cmpsl
inc
bound
pop
adc
pop
negb
cmp
mov
pop
adc
ljmp
cmp
shlb
adc
and
std
nop
addr16
mov
repnz
iret
repnz
icebp
xor
add
in
xlat
sub
xchg
mov
dec
es
pop
push
test
or
sahf
or
das
out
insl
add
xchg
je
pusha
sub
into
icebp
pop
cmp
ret
les
or
mov
xchg
idivb
sub
jmp
mov
sbb
daa
rcll
pop
dec
lcall
or
add
insb
xchg
pop
pop
les
or
dec
ja
rcr
pop
fistpl
add
hlt
dec
ja
and
call
aaa
push
push
push
adc
or
adc
sub
jnp
and
js
sarl
ret
lds
jo
jg
pop
cmp
pop
or
fiadds
xor
jne
fsubs
shrb
outsb
dec
cmp
pavgw
out
jl
filds
mov
mov
xchg
lahf
popa
enter
mov
adc
mov
jmp
mov
push
mov
push
lcall
pop
int3
mov
xor
sbb
mov
idivb
xlat
cmp
cmp
ret
mov
nop
jle
push
sbb
loope
insb
loope
fildl
dec
shlb
jg
clc
jl
aaa
add
adc
jmp
cs
mov
cmp
push
test
push
or
ja
inc
in
int
dec
in
popa
insb
pop
pop
lret
aaa
add
inc
inc
xor
mov
jne
mov
add
push
xchg
cmp
lock
outsb
push
lret
jno
inc
insb
out
or
and
xchg
loopne
pop
push
xor
aaa
cld
mov
pop
shlb
push
psrld
popa
les
ret
je
ds
cmp
push
push
xor
cmpsb
hlt
lock
stos
les
pop
mov
test
fwait
sbb
test
movsl
dec
push
aam
shll
repnz
int3
pop
xchg
ror
cltd
and
popa
inc
ret
scas
sbb
fs
std
lds
inc
xor
stos
test
jnp
repnz
inc
imul
aad
rorl
daa
leave
ret
add
sbb
pop
push
sub
call
imull
pop
add
dec
inc
mov
xchg
out
and
gs
daa
jbe
mov
adc
and
repz
push
cltd
push
mov
add
jne
leave
dec
mov
data16
sub
cmpl
dec
iret
pop
test
xchg
or
cltd
mov
add
and
pop
cltd
sub
sub
push
push
imul
pop
data16
or
mov
cmp
jle
push
xor
push
pop
sarb
lods
push
in
xchg
sub
bound
push
cmc
cmp
cmpsb
pop
mov
or
getsec
lds
cmpsb
icebp
push
in
jnp
or
push
cs
loop
cmp
xor
jge
and
add
vunpcklps
and
or
arpl
and
pushf
notb
sbb
les
and
cmp
lods
repz
jb
in
lret
xchg
bound
cmpl
shrl
enter
daa
jae
jecxz
aad
pop
ds
js
jecxz
mov
insl
and
dec
dec
sub
je
pop
mov
xchg
ljmp
enter
outsl
xor
pop
xlat
call
lcall
mov
mov
jnp
test
sbb
push
or
shl
lea
loop
loop
xchg
push
push
out
xchg
out
mov
adc
aad
dec
adc
bound
ds
or
mov
stc
leave
cmc
adc
dec
push
mov
sbb
xor
or
xor
xor
shl
xchg
xchg
call
add
fsts
dec
dec
cld
mov
cmp
addr16
adc
outsl
mov
pop
cwtl
push
cmpl
or
dec
adc
std
dec
inc
inc
xchg
shrl
mov
leave
in
arpl
sub
or
and
push
imul
fstp
out
leave
sub
dec
push
lret
pop
ja
mov
and
mov
xor
inc
and
cmp
repnz
jae
mov
fxch
in
popa
mov
mov
mov
sti
jbe
inc
pop
pop
xchg
popf
push
inc
cmpsl
xchg
pop
std
or
addr16
pop
std
adc
or
sti
mov
pop
rorb
enter
mov
and
mov
pop
dec
out
or
fstl
lahf
push
pop
iret
mov
mov
sbb
pop
cmp
adc
jle
lahf
fs
pop
addb
or
scas
sbb
in
shr
nop
lea
inc
popa
or
xchg
loopne
sbb
adc
call
mov
mov
pop
xorb
aad
inc
js
outsl
push
xor
sbb
xor
mov
arpl
stos
xchg
adc
fstps
jae
dec
or
mov
shlb
out
add
and
jge
push
les
fwait
sub
sahf
pop
inc
fld
cmpsl
mov
sbb
cmp
mov
pop
enter
sub
std
aam
sbb
outsl
jmp
inc
push
dec
push
adc
fwait
pop
lods
mov
jns
cs
rorb
testb
xchg
fidivs
rcl
incb
mov
xchg
iret
add
les
adc
or
push
or
and
or
cmpsl
cmpsb
aas
jmp
into
data16
adc
jns
adc
ret
mov
cmp
sar
dec
add
mov
lret
hlt
ret
insb
jl
test
mov
rcrl
push
std
inc
rcrb
mov
imul
scas
add
stos
dec
imul
mov
jae
rorl
sub
test
sbb
stc
sbb
pop
fsubrs
aaa
jmp
jg
add
xchg
js
scas
stos
cmp
out
push
repz
sub
loop
xor
jl
dec
mov
fdivl
fsubl
fistpll
cmp
rcr
iret
sbbl
into
movsb
xor
mov
movsl
movsb
or
mov
nop
mov
enter
inc
sbb
dec
or
repnz
cmpsb
xchg
mov
xor
xorl
jmp
mov
sarb
mov
pop
fmul
mov
lock
xchg
xor
and
imul
and
repz
xor
dec
movsl
adc
out
jb
mov
sub
xor
lret
jmp
rorb
jbe
popf
push
mov
jmp
das
inc
cltd
add
or
fldcw
jp
cs
push
imul
std
jle
pop
call
lret
add
adc
pop
movsb
sbb
push
hlt
dec
into
fisubs
mov
add
and
xchg
outsl
and
aad
movsb
int3
fmull
push
mov
rol
hlt
imul
mov
jno
adc
mov
pusha
inc
cmc
arpl
pop
inc
dec
mov
ficomps
adc
jno
jns
cmpl
and
jmp
ss
xor
or
int3
sbb
sarl
mov
rcr
mov
scas
js
insb
dec
out
lcall
popa
jle
out
cmp
ljmp
or
ficoml
add
cmp
pop
adc
mov
scas
setle
dec
clc
sti
subl
sub
popa
mov
lahf
rcl
insl
sbb
imul
pop
mov
cmp
or
lds
add
stos
jl
into
mov
mov
daa
pcmpgtd
pop
dec
push
jbe
jp
mov
adc
add
shl
shr
mov
adc
je
and
xchg
or
cmp
in
das
cmp
and
pop
xorl
arpl
int3
dec
clc
mov
pop
roll
rolb
shlb
dec
ja
lds
loopne
lds
mov
push
sbb
push
xchg
lret
cwtl
inc
mov
xor
cmp
and
es
pop
ret
jge
ds
aaa
mov
ret
jge
jg
movsb
mov
imul
jle
aam
insb
aad
lods
push
loope
es
data16
xchg
mov
mov
push
ss
mov
cmc
xchg
mov
lea
mov
dec
popa
std
add
xchg
push
xchg
stos
movsl
dec
pop
sbbl
dec
scas
and
xchg
lock
sbb
cmp
fidivrs
inc
scas
lock
mov
cmp
push
jb,pn
stos
cs
cmc
aad
in
pop
out
mov
cmp
sbb
push
iret
inc
ret
pusha
aas
outsb
sub
mov
push
mov
in
jmp
jno
loope
data16
lahf
in
push
lea
jns
pop
mov
leave
sub
adc
aas
adc
xchg
dec
stc
pop
rcrl
xlat
arpl
fcomip
addb
pop
or
mov
mov
rcrl
rcrl
or
push
loop
pop
and
inc
pop
mov
xchg
adcl
fstpt
outsb
je
xchg
and
iret
dec
push
movsb
loope
jle
xchg
xchg
fincstp
or
pusha
test
movsl
mov
cmpsb
stos
mov
cwtl
pushf
pop
pop
repz
cmp
test
mov
int3
pop
jae
idivb
insb
es
test
or
jnp
xorb
push
data16
xchg
sbb
in
das
mov
in
lcall
inc
mov
xchg
pop
loope
push
fdivrs
cmp
cmp
ljmp
pop
and
je
mov
mov
inc
inc
adc
std
fs
xchg
fs
lcall
repnz
add
bound
pop
push
icebp
ss
push
das
inc
cmp
hlt
mov
xchg
and
mov
lret
jno
aaa
cmp
jns
scas
mov
xor
mov
aad
sbb
int3
lret
lret
sbb
movsl
mov
mov
xchg
mov
adc
push
or
lret
xchg
sub
mov
lcall
faddl
cmpsw
out
pop
or
shrb
cmp
mov
jecxz
xor
xor
xor
pop
or
inc
adc
ljmp
mov
lock
scas
divl
aam
dec
dec
push
and
push
sub
pop
pushf
push
lock
mov
iret
mov
leave
sbb
cmp
sbb
icebp
mov
cmp
xchg
lods
mull
adc
inc
adc
sahf
inc
in
jne
cld
fisttps
xor
dec
mov
jbe
mov
mov
xor
popa
cmp
int
pop
jle
out
push
dec
jl
test
pop
add
scas
fisttps
jo
ja
je
pop
mov
orl
push
fstpt
and
or
fstpl
mov
gs
sbbl
mov
jmp
std
outsl
cmp
push
cmp
ficoml
mov
int3
out
pop
add
and
daa
fstps
std
roll
pop
add
subl
dec
fisubs
adc
scas
push
sbb
mov
rorb
push
adc
push
dec
and
sub
shll
fcoms
loopne
pushf
pusha
adc
push
outsl
fsubl
scas
or
lea
outsb
mov
je
mov
int3
mov
out
cmp
loop
jnp
test
mov
out
imul
mov
xor
sub
lret
pop
sbb
jae
push
add
orl
test
inc
xchg
icebp
int3
aaa
mov
dec
pop
cmp
scas
mov
pop
push
sub
xchg
adc
pop
dec
negb
data16
repnz
push
add
dec
es
shll
and
ds
mov
jmp
adc
push
mov
jnp
imul
lock
push
fnstcw
mov
scas
imul
mov
pusha
mov
roll
jne
lret
stos
gs
cmp
fnstcw
mov
bound
insb
jne
xchg
mov
dec
pop
dec
inc
dec
mov
and
test
and
mov
xchg
adc
jp
pop
sub
pop
scas
sub
icebp
out
lea
add
xchg
inc
sbbb
xor
add
push
pushl
adc
bound
stos
push
pop
xor
sub
flds
ret
insb
pop
movsb
jle
mov
jmp
fistps
sub
jae
and
mov
mov
sub
testl
lods
xor
pop
dec
and
mov
fnstcw
or
push
dec
sti
arpl
add
gs
leave
test
mov
fsubr
lds
mov
cmp
pop
out
xchg
jge,pt
ljmp
hlt
shrb
pusha
loope
jl
push
aas
js
stos
adc
mov
lods
pop
arpl
adc
sub
pop
repz
xor
test
xchg
js
ss
xchg
fadds
lods
lods
fs
mov
jecxz
add
jge
rcrb
dec
mov
pop
lret
or
mov
mov
jmp
sub
mov
pop
mov
push
cmp
mov
movb
cmp
jecxz
enter
subl
inc
leave
int3
sub
dec
lock
cld
push
jl
js
daa
cmpsb
xchg
and
out
xchg
jae
out
dec
xor
cltd
aam
push
push
fldenv
push
xor
insl
ja
mov
xor
int3
lods
cmpsl
push
or
jne
pop
xlat
sarb
test
icebp
imul
fidivl
sub
cs
or
lea
aad
mov
bnd
fwait
leave
arpl
pop
push
sbb
mov
test
sub
call
jo
cwtl
xchg
jp
addl
inc
xchg
mov
cmp
dec
push
test
lods
or
sub
out
sbb
push
adcb
pop
cmc
scas
mov
nop
pop
es
push
rorb
add
jl
inc
sbb
ret
jmp
cmp
aas
xchg
cld
mov
mov
xor
sbb
sub
in
cltd
sub
dec
push
sbb
ss
jo
add
pop
sub
sub
cmp
jmp
movsbl
mov
push
inc
clc
or
mov
jecxz
test
push
je
lahf
lea
outsb
ds
cltd
cmp
ret
cmp
inc
lret
shlb
movsb
gs
in
test
adc
sbb
lret
cmp
jbe
mov
out
popf
push
push
das
inc
jp
adc
xor
icebp
push
adc
mov
xchg
fdivp
push
lahf
lock
jp
mov
cwtl
ret
push
int
push
add
loope
push
stc
sbb
cmp
xchg
jne
hlt
and
fsubs
pop
lock
movsb
mov
loop
inc
or
cmp
cld
aas
pop
push
scas
xchg
sahf
mov
dec
cmp
adc
imul
insb
ljmp
cs
gs
push
add
popa
jae
fstpl
jp
test
je
dec
movsl
ret
insl
jp
pop
mov
dec
aam
sbbl
push
stos
push
movsl
cmp
mov
jne
ret
add
mov
movsl
pushf
gs
pop
les
pop
dec
push
subb
cmp
mov
cld
xor
stc
fimuls
fmull
ja
sub
mov
fstps
xchg
mov
into
fs
mov
cmp
jo
outsb
arpl
out
xchg
into
lahf
add
testl
mov
xor
je
popf
repnz
xchg
xchg
pop
mov
cmp
cmpsb
pop
popf
pop
mov
in
and
cmp
inc
and
mov
imul
repnz
imul
push
add
mov
loopne
pop
pop
sub
mov
fucomp
out
subb
xchg
dec
insb
popf
mov
fs
aam
cmpsb
pop
push
pushf
scas
sbb
mov
pop
add
xor
popf
jo
les
mov
mov
scas
sbb
xor
mov
add
add
mov
mov
xor
xchg
test
jb
pop
mov
mov
rcrl
movsb
cld
add
aas
aas
mov
ljmp
dec
loop
dec
int3
stc
push
std
sub
inc
push
pushf
mov
das
adc
out
jg
fnstenv
add
pop
insb
sub
aam
mov
inc
xor
shl
cld
hlt
fstpt
adc
jmpw
pop
int
jl
cmp
lock
lods
std
bswap
mov
movsb
aaa
mov
sub
aam
lret
das
fxch
lret
js
add
cmp
or
insl
sub
mov
je
pop
adc
add
mov
push
movsl
and
or
jo
repz
jo
or
adc
popf
push
daa
pop
aaa
jecxz
shll
ljmp
xchg
jae
std
cmp
adc
das
xor
test
pop
mov
gs
lods
negb
pop
mov
subb
inc
dec
cli
xchg
es
pusha
mov
stos
imul
nop
dec
cmp
jbe
pop
cmp
xchg
ret
sub
and
inc
int
sbb
inc
xor
mov
mov
sub
rol
inc
lret
scas
fisubrs
mov
stc
jno
shll
ud2
lret
fnstsw
push
push
idivb
aas
sbb
inc
xlat
cmc
ljmp
push
rep
fiadds
mov
lcall
test
and
aas
test
cld
test
mov
shlb
dec
out
push
cwtl
dec
daa
jnp
call
mov
push
and
jecxz
jmp
lea
outsb
arpl
div
add
xor
cmp
xchg
jnp
dec
push
sub
cmpsb
jae
cmp
dec
or
ljmp
add
inc
mov
bound
aam
adcl
jb
pop
lock
enter
adc
and
jl
sbb
add
repnz
inc
inc
rolb
rcl
pop
enter
xor
and
hlt
fdivrp
leave
mov
aam
sub
xor
out
insl
cmp
shl
addr16
mov
sbb
mov
data16
filds
pop
int3
in
sub
cmc
stos
or
mov
sub
pop
lds
xchg
sbb
and
hlt
inc
std
dec
iret
scas
xchg
push
xchg
call
jno
mov
inc
jnp
inc
push
rcrb
add
lret
mov
lcall
je
adc
inc
mov
rcll
idivb
sbb
and
out
sbb
cmpsb
xor
jg
push
xorl
aam
push
cmp
pop
or
outsb
sub
fwait
sub
test
mov
lods
push
ljmp
pop
insb
fwait
push
add
push
fisttps
outsb
push
pop
fsts
or
mov
or
add
push
and
push
lock
xchg
or
xchg
xchg
enter
adc
pop
leave
dec
ds
pushf
popf
rorl
mov
dec
xchg
incl
pushf
sti
or
loop
cwtl
xlat
jp
pusha
add
and
insl
popf
data16
shrl
rolb
mov
mov
mov
jb
ficomps
inc
fsts
push
cmp
popa
sub
mov
adc
cmpsb
jmp
popf
xchg
jae
test
inc
adc
xlat
rorl
mov
mov
dec
loope
inc
insb
in
dec
out
and
das
xchg
inc
cmpb
xorb
jle
rcll
je
imul
mov
sub
lods
and
sti
xor
add
imul
sbb
xchg
lea
fs
sbb
inc
push
cmpl
ret
arpl
js
icebp
and
sahf
int3
stos
imulb
mov
adc
mov
add
into
mulb
in
mov
jl
loopne
shlb
cmp
cmc
pop
xor
shlb
repnz
jecxz
sub
and
out
inc
aam
iret
outsl
mov
mov
add
or
and
aam
adc
in
push
rcl
hlt
xor
pop
je
shrb
lea
in
lods
int
lods
mov
push
ljmp
xchg
and
orb
cmp
aas
aas
lds
jns
test
test
sbb
loop
xchg
test
add
addr16
pop
lret
cmp
data16
lock
jl
push
insl
movq
lret
movsb
lock
fidivl
cmc
in
bound
je
fwait
cmp
jbe
inc
push
enter
testb
test
insb
jp
cltd
cmp
pop
mov
mov
fwait
mov
jno
hlt
sbb
or
mov
or
xchg
and
pop
cmp
cltd
pop
insl
sub
ret
stos
je
stos
das
or
inc
not
mov
push
int3
dec
aaa
jp
pop
sub
mov
pop
mov
lret
repz
cwtl
or
mov
lods
xorb
sub
sbb
fwait
insb
outsb
add
aad
cmpsb
adc
xchg
add
pop
or
mov
jns
xchg
cmp
inc
xchg
cmp
push
sahf
sbb
mov
jns
nopl
clc
loopne
std
mov
inc
jne
js
sub
fwait
dec
xor
movsl
push
sub
scas
addr16
packuswb
loope
sbb
inc
ret
push
mov
test
adc
gs
mov
pop
sbb
and
inc
es
sub
and
pop
adc
cmpsl
test
inc
callw
fdivrl
push
adc
jnp
es
aaa
sarb
push
or
mov
insb
jp
and
pusha
fimuls
data16
hlt
out
mov
in
int3
popa
addr16
xchg
jbe
mov
loop
popa
cs
dec
fidivrl
mov
cmp
inc
rolb
dec
mov
push
notl
push
rcrl
sti
add
xchg
scas
xchg
dec
lahf
mov
test
inc
ret
movsl
sub
fisttps
rcrl
mov
xchg
pop
cs
lds
popa
inc
cli
cmp
inc
pop
pop
push
jno
xor
lahf
hlt
xor
rolb
es
add
insl
insl
xchg
sub
inc
lret
cmp
xchg
mov
mov
sbb
test
lret
jp
sbb
mov
pop
mov
rcrb
or
adc
inc
lods
push
je
cld
fs
jnp
les
or
or
jp
or
inc
mov
mov
sbb
into
pusha
mov
inc
push
pop
xor
mov
imul
pop
mov
gs
or
ljmp
mov
cmpsl
fistl
push
mov
addr16
push
jl
sbb
mov
fwait
add
ss
pusha
and
cld
sbb
cld
popa
fwait
sahf
jb
push
xor
and
xor
insl
in
aad
arpl
fwait
aad
push
mov
mov
adc
stos
xor
xchg
outsl
ret
jecxz
xchg
pusha
mov
neg
pop
add
or
ss
clc
mov
addl
push
mov
sbb
mov
jg
stc
ljmp
mov
inc
lock
jge
pop
cmp
loop
xchg
adc
mov
inc
cmpsb
outsb
dec
aaa
or
pop
xchg
mov
lahf
popf
sub
fs
pop
adc
rolb
bound
stos
cld
push
mov
lea
mov
cmp
pop
adc
jecxz
fidivs
xor
not
add
xor
xchg
and
rclb
rclb
push
mov
push
repnz
unpckhps
adc
les
add
xor
daa
cmpsb
pop
or
jmp
and
pop
and
sub
das
mov
pop
test
ljmp
lret
sub
arpl
in
sbb
bound
dec
std
out
adcb
inc
dec
fidivs
jle
push
jmp
ror
cmp
adc
mov
test
aaa
adc
jp
lock
loop
aad
or
sbb
jmp
mov
sbb
popl
adc
adc
xchg
mov
fdivrl
pop
push
cmpb
add
pop
fucomp
popl
mov
xchg
inc
inc
roll
sbb
cwtl
ret
cmp
dec
sahf
dec
mov
pop
pushf
dec
sub
aaa
mov
push
mov
lods
jecxz
adc
sbb
sub
and
mov
sub
and
lea
lock
jge
dec
mov
sub
rcrl
dec
inc
lret
dec
cli
ljmp
aas
sub
out
add
xchg
leave
dec
gs
pop
mov
or
call
enter
mov
enter
push
sbb
addb
mov
sbb
xchg
test
xchg
test
push
xlat
or
pop
stos
xor
jl
mov
out
subl
mov
repnz
call
cltd
divl
sbb
lock
push
lods
cmp
daa
mov
xor
sbb
bound
or
in
call
je
or
cmpsl
dec
leave
dec
loope
cwtl
xor
cltd
sbb
cmpsl
out
push
fs
out
cmpsb
outsb
mov
loop
inc
ffree
out
dec
nop
cmp
dec
addr16
or
lea
mov
filds
sub
hlt
test
dec
iret
push
lret
adc
adc
lcall
fwait
push
shl
mov
pop
push
dec
mov
gs
lret
scas
sbb
jb
repnz
ljmp
jnp
mov
call
and
push
cmp
mov
pop
fnstcw
adc
inc
fisubs
test
or
lea
pop
mov
jb
jb
dec
inc
cwtl
jb
or
ret
aaa
mov
add
push
stos
sub
loop
outsb
imul
pop
scas
push
sub
and
lods
push
add
dec
aas
xor
pop
rorl
hlt
inc
lret
xchg
mov
xchg
or
add
mov
xchg
test
adc
insl
rcl
pushf
mov
out
mov
add
stos
testl
adc
mov
and
fstps
mov
inc
adc
xchg
cmp
xchg
pop
ja
insb
add
faddl
mov
or
lret
cmpsb
cli
test
jo
mov
leave
ret
mov
outsb
xor
mov
mov
xchg
popf
ljmp
pusha
add
xchg
push
fs
or
adc
push
andb
push
xchg
jbe
jo
sub
test
lret
imul
js
mov
ficompl
pushf
mov
idivl
std
and
mov
imul
mov
dec
insb
mov
and
cli
js
fsubl
mov
xchg
jp
or
lods
pusha
bound
pop
std
cltd
and
push
bound
clc
and
imul
mov
jle
mov
jns
xchg
fldcw
std
stc
and
jns
mul
pop
cmp
push
pop
repnz
imul
aam
pushf
jno
lea
loopne
jle
inc
pop
lret
xchg
data16
xor
inc
cmp
xchg
rol
outsb
mov
loopne
xchg
sbb
test
xchg
nop
gs
aam
sti
fdivl
popf
jns
or
xor
mov
pop
das
jle
lcall
int3
jecxz
loopne
fmul
rcrb
aas
inc
mov
adc
leave
fxch
cmp
dec
add
leave
nop
add
test
fwait
cs
addr16
roll
adc
push
mov
adc
clc
xchg
sub
adc
or
insb
arpl
test
adc
or
call
scas
adc
cmc
jl
stos
jge
jo
pushw
movsb
xor
push
dec
shl
imull
xor
cmpsl
fwait
invd
sbb
jne
push
fnstcw
imul
mov
cmp
push
scas
pop
dec
dec
scas
jnp
scas
mov
sub
into
sbbl
dec
jo
loopne
xchg
jbe
pop
or
jbe
lods
sub
inc
mov
jl
jo
mov
xor
sub
adc
jp
lods
loope
sub
in
out
jb
xchg
repnz
pop
xchg
das
div
insb
xor
mov
and
and
mov
add
add
imul
cwtl
push
les
lds
mov
push
push
jl
sbb
xor
fcomps
sub
mov
clc
in
lcall
lods
scas
and
xor
dec
out
popf
add
mov
ret
or
cli
das
mov
es
jg
xor
out
cwtl
gs
mov
inc
addl
fdivrl
cld
popa
nop
in
sbb
jae
mov
jne
xchg
rolb
lods
pop
dec
push
add
jl
sub
or
cmpl
insb
push
std
dec
addr16
scas
gs
loopne
ds
inc
shl
cwtl
inc
fbld
xchg
mov
fnstcw
xchg
into
jo
or
mov
arpl
mov
push
in
or
and
popa
inc
nop
pop
aaa
jecxz
sbb
push
sub
lock
pop
push
hlt
fmulp
cld
sub
cmp
xor
loopne
ja
inc
daa
pop
push
lds
mov
mov
shlb
sbb
jns
cs
mov
das
jecxz
in
mov
aam
dec
mov
adc
arpl
dec
popf
iret
cs
imulb
adc
push
adc
cs
xchg
add
pushf
subb
push
scas
inc
fstps
add
subl
and
repz
cmp
mov
popf
enter
inc
jb
adc
dec
pop
add
push
loop
insb
sti
cmc
jl
push
inc
cmc
cmpsb
cmp
xor
xchg
mov
push
adc
mov
pop
pushf
jg
or
or
xor
lahf
sbb
sbb
inc
mov
cmp
je
das
outsl
test
popf
dec
sub
lahf
popa
mov
add
lret
mov
lods
xchg
jecxz
jne
or
jg
roll
sbb
cwtl
mov
out
shlb
cmpl
shl
loope,pn
jb
in
dec
std
or
movsb
fstp
dec
aam
inc
dec
clc
cmp
xchg
int3
fdivrl
ja
iret
test
dec
jb
sbb
adc
xchg
inc
add
mov
lahf
dec
dec
ret
fnstenv
shlb
ret
out
inc
fidivl
sub
mov
sbb
pushf
xchg
xchg
das
jnp
add
inc
dec
imul
fcoms
popa
mov
rorl
mov
inc
pop
ljmp
adc
push
xchg
scas
or
loope
ficoms
sbb
adc
and
xor
pop
xchg
loopne
popa
in
pusha
imul
jg
inc
jmp
outsb
xor
sub
negl
jle
sbb
addl
jg
arpl
ret
sbb
mov
test
cmp
aaa
mov
push
imul
xchg
or
mov
cld
adc
sbb
in
adc
fstl
sbb
mov
aad
mov
xchg
je
stos
shrl
jle
add
js
add
dec
sub
hlt
ss
sub
in
int3
test
and
data16
add
sbb
xchg
aas
and
cmp
stc
test
inc
sbb
cmp
lahf
sarl
jb
push
inc
fistpl
cld
and
movsl
mov
cmp
test
mov
sub
add
and
sub
xchg
jmp
ret
xchg
and
cmp
fnstenv
insl
inc
repnz
outsl
jg
mov
fadd
outsl
xchg
cli
mov
mov
or
adc
jle
nop
push
xor
jnp
ficomps
xchg
lahf
jecxz
add
cmp
mov
dec
push
pop
jecxz
gs
cmpsb
and
mov
es
xchg
mov
dec
nop
lret
mov
adc
sbb
out
cli
xor
mov
mov
sub
stos
jg
jns
mov
sub
mov
cmp
sbb
out
xlat
pop
mov
mov
cmp
mov
stos
adc
popa
test
adc
mov
dec
jp
jl
loop
lcall
pop
mov
jnp
cmp
aam
ja
or
scas
or
pop
and
jno
inc
adc
fwait
es
scas
fnstenv
cmpsb
pop
stos
xor
cmpsl
push
cmpb
orl
div
mov
insb
mov
and
movsl
or
cmc
mov
ret
mov
pop
pop
or
pop
rcr
add
cmp
push
std
and
jae
add
ds
xchg
cmp
mov
add
jmp
std
emms
out
push
pop
data16
mov
aaa
int
in
fidivl
out
dec
jb
xor
jns
cmp
pop
inc
leave
lock
movsl
xor
push
cmp
push
rcl
inc
stos
into
jo
ficomps
shlb
leave
cmp
dec
xor
mov
push
lahf
cmp
sub
inc
repnz
mov
stos
mov
or
jge
insb
lods
out
stos
pop
test
shll
xor
add
sbbb
pop
cmp
xchg
jbe
testb
xor
mov
js
cwtl
stos
push
xor
lret
mov
int
call
imul
nop
rorl
mov
add
lea
punpcklwd
push
sbb
icebp
and
push
clc
pop
xchg
incl
xor
pop
lcall
cmp
lea
jle
andl
cmp
addr16
sub
or
rolb
mov
and
int3
cwtl
mov
leave
adc
dec
inc
fdivs
adc
imul
stos
cltd
lahf
inc
subl
dec
testl
aad
les
rorb
xchg
ja
mov
test
in
mov
insl
and
add
mov
insl
mov
jle
rorb
or
je
fstpt
fwait
sbb
xchg
pop
data16
pusha
mov
or
out
sub
testb
xchg
es
xor
adc
clc
popf
icebp
add
loopne
dec
pop
test
repnz
xor
pop
or
mov
pop
add
movsb
pop
les
mov
loopne
fildl
out
and
and
dec
inc
popf
mov
test
les
jbe
iret
jnp
cs
cli
or
call
movsb
sbb
add
mov
cmc
sub
lods
mov
outsb
pop
sarb
sbb
adc
jle
divb
test
mov
jge
fwait
lret
xchg
sub
jmp
fistl
xchg
fwait
dec
and
or
jle
outsl
mov
fimull
pop
in
add
mov
mov
cli
cmp
sbbb
sub
dec
enter
jle
repnz
adc
fnsave
sub
out
mov
scas
arpl
incb
stc
test
pop
lds
js
cmpsl
push
cmpsb
popf
or
test
in
jne
xchg
jge
push
mov
int3
jmp
addr16
mov
es
inc
call
jno
and
sbb
cli
pop
ret
cmpsb
std
push
and
scas
add
and
notb
mov
push
std
into
test
fs
or
movsb
push
aaa
daa
stos
dec
sbb
lods
xor
out
adc
and
mov
stos
adcb
into
jge
lods
pop
pop
push
adc
push
dec
mov
movsl
stos
jno
in
sbbl
push
lods
stc
adc
in
pop
jp
lret
in
xchg
pop
fnstcw
test
dec
push
or
rcl
mov
and
dec
xor
sub
push
mov
clc
xor
xorl
cmp
pop
jecxz
and
imul
orl
stos
out
sub
lods
push
scas
push
xchg
in
mov
add
xchg
inc
insl
in
jmp
dec
pxor
std
or
out
sbb
lea
ficoms
cmc
int3
mov
lret
loop
cld
stos
and
scas
mov
je
lds
rcll
ficoml
ret
mov
fnstsw
sbb
inc
insb
int3
into
or
mov
and
inc
jecxz
sub
cmp
jge,pn
fpatan
xchg
cmp
inc
stc
data16
cmpsl
stos
aaa
lods
mov
and
lahf
cwtl
or
loop
mov
fdivrs
add
lods
cmpsl
sub
or
xchg
mov
hlt
fidivs
daa
popa
pop
push
movsl
roll
add
add
ret
popa
loopne
lods
filds
outsl
xor
pop
adc
xchg
out
mov
mov
xor
mov
cmpsb
cmp
push
and
or
push
out
loopne
mov
mov
inc
jle
out
jle
xchg
mov
loop
fmul
xor
sbb
jp
dec
jl
lods
pop
lock
lea
js
or
sub
rcl
stos
mov
jl
fsubrs
sahf
mov
push
fistpll
aam
or
dec
xchg
sub
repz
push
test
test
adc
push
ficompl
push
mov
sub
or
add
add
push
jecxz
scas
cmp
or
dec
adc
push
or
adc
add
xlat
mov
xor
xchg
ja
xchg
fwait
jb
add
mov
xor
ljmp
and
popf
loopne
stc
jae
xchg
icebp
call
cmpsb
movsb
sub
testl
in
inc
xor
sbb
test
or
sub
outsb
mov
daa
dec
ss
dec
jge
cmp
scas
orb
fwait
adc
push
into
cmp
pop
push
add
fimull
dec
fcomps
add
dec
inc
lods
dec
and
xchg
pop
push
jno
shlb
adc
sbbb
fwait
jne
sub
aas
ror
repnz
xchg
adc
outsb
mov
fdivrl
sbb
push
cltd
fdivl
sbb
mov
jmp
push
in
dec
mov
cmp
xor
lret
jmp
dec
mov
lods
test
xor
imul
dec
sub
popa
jo
mov
stos
movsl
subl
or
xor
loopne
repnz
popf
insb
mov
jge,pt
loop
stc
adc
insb
sbb
inc
push
pop
mov
pusha
mov
lods
mov
and
add
movb
in
rorb
mov
arpl
mov
rcrl
fadds
push
cmpsb
fistpl
fptan
or
push
nop
jecxz
loope
jnp
imul
inc
je
cmp
scas
inc
mov
cmp
daa
adc
adc
cmp
jmp
push
popa
xor
sub
fs
dec
dec
in
jmp
xchg
xor
jno
scas
test
cmpsb
dec
xchg
xchg
jmp
inc
insl
cwtl
push
and
lcall
dec
pop
mov
jbe
cmp
xchg
jle
cmp
xchg
adc
sub
xchg
mov
test
add
sbb
mov
jae
xchg
pusha
int
sub
rcrl
mov
out
ljmp
lcall
std
xchg
mov
cmpsb
jo
dec
lods
cmp
jb
pop
loopne
daa
pushf
cli
negb
movsl
sar
das
ret
and
lock
lods
sbb
xlat
add
dec
mov
push
call
inc
mov
int
bound
mov
fstps
ljmp
xchg
testl
push
loopne
notl
sub
rcrb
or
cmp
dec
lcall
mov
loopne
cmp
add
jne
ds
fimuls
in
scas
mov
rol
and
lock
sub
stc
and
negb
int
fisubrl
or
bound
add
popf
stos
outsb
gs
pop
outsb
or
addb
mov
and
push
adc
sub
sbb
out
mov
inc
push
daa
jo
mov
xor
inc
nop
or
jne
jp
mov
dec
sbb
push
fcomps
call
popa
shl
xlat
jno
loop
cli
cltd
sbb
push
pop
leave
cmp
jb
lret
popa
in
out
dec
out
mov
jb
ror
push
je
sbb
push
dec
xor
sub
dec
ja
xor
shrb
scas
cltd
xchg
sub
mov
rorb
adc
daa
in
ret
sub
lds
jne
stos
add
adcb
add
pusha
dec
out
cmpsl
sbb
jge
or
pop
sub
imul
jp
test
fwait
lods
lahf
test
lods
add
es
in
pop
sbb
xchg
popf
push
xchg
or
pop
jne
sti
sbb
addl
or
fidivl
stos
xor
int3
fucom
mov
ret
stos
stos
push
fst
pop
stos
or
sub
dec
dec
shll
mov
inc
aad
push
cmp
test
cltd
loopne
inc
mov
frstor
stos
sub
hlt
scas
sub
jb
mov
in
in
push
pop
test
outsb
es
clc
cmp
out
pop
inc
fsub
scas
test
dec
daa
pop
sub
jno
mov
repz
test
loopne
mov
int3
push
mov
push
repnz
nop
lret
mov
mov
outsb
push
adc
sbbb
add
test
fs
adc
test
test
mov
dec
mov
les
aam
fnstenv
imul
jae
xchg
inc
mov
cmp
push
out
mov
movsb
adc
xchg
dec
push
sti
mov
and
cs
shlb
dec
outsb
loop
iret
out
and
mov
aam
popf
mov
daa
and
in
bound
mov
popf
nop
lds
movsl
iret
jnp
cmp
xchg
adc
sub
das
or
xchg
inc
add
lret
mov
stos
sub
je
cmc
push
insb
js
mov
inc
pusha
scas
stc
dec
cmp
xchg
push
arpl
negl
mov
insb
in
add
mov
insl
insl
mov
fistl
dec
icebp
inc
or
mov
jb
pop
or
pop
dec
orb
es
sahf
sub
fadds
push
dec
push
in
mov
sti
and
and
lret
repz
sbb
movsb
lds
mov
shrl
inc
fdivs
stc
std
add
movb
cmp
or
push
sbb
mov
rcr
inc
xchg
push
test
xor
xchg
xor
call
cmp
test
test
mov
andl
bound
daa
sub
xor
sahf
cmpsl
nop
test
cld
sbb
out
push
lock
cltd
mov
sbb
mov
xchg
dec
jl
add
xor
jno
add
dec
mov
mov
push
dec
iret
sub
in
pop
mov
jno
jle
xor
push
push
imul
ss
sbb
mov
aas
or
bound
aam
or
std
fnstsw
icebp
mov
sti
outsb
or
push
xchg
ljmp
jg
gs
cli
jmp
cmp
cmp
test
mov
xlat
lds
add
imulb
lds
leave
dec
pop
add
cli
mov
xchg
repnz
mov
leave
out
cmpsl
test
cmp
xchg
pop
dec
js
dec
sub
or
xchg
xor
fdecstp
sub
sbb
daa
aas
xor
sbb
cmp
cmpsb
adc
xchg
loop
sub
adc
push
repnz
fwait
push
cwtl
lret
jecxz
repz
test
out
stos
dec
mov
jl
sub
push
insb
fnstenv
xchg
xor
and
in
pushf
stos
xchg
pop
push
sbb
fisubs
pop
xlat
sbb
pop
xchg
sub
and
mov
aam
add
xchg
daa
ret
jp
rclb
loope
mov
jns
cs
cmp
inc
xchg
inc
jge
xchg
jnp
pop
outsb
cmp
mov
fsubp
push
cmp
outsl
xchg
hlt
movsl
mov
mov
outsl
cmp
pop
out
mov
sahf
inc
cmpsb
xchg
fwait
sbb
push
scas
test
cmpsl
jbe
shlb
jo
sub
dec
test
aad
scas
fldenv
das
fsubrl
pop
pop
mov
arpl
xor
movsb
jb
cmp
lret
xchg
cs
cwtl
mov
mov
lahf
push
mov
roll
pop
stos
lea
adc
dec
nop
lods
popa
dec
pop
jmp
fists
fistl
mov
aam
pop
mov
lret
pop
cld
mulb
sub
clc
jo
mov
lock
adc
pop
jbe
ljmp
outsl
mov
pop
mov
push
push
cmp
mov
mov
pop
aam
mov
and
sbb
mov
cmp
repnz
pusha
jne
sub
cld
jp
xchg
arpl
in
inc
jge
leave
push
mov
andb
sahf
pop
adc
jb
sbb
out
loop
popa
dec
jp
mov
dec
mov
lds
test
push
cmpsb
cmpsb
fiadds
and
sub
adcb
xor
and
jmp
cmp
jbe
bound
sbb
imul
and
lretw
inc
adc
xor
adc
pop
inc
cmc
fiadds
jo
mov
fbld
fildl
test
ja
sub
outsb
push
jecxz
cltd
clc
adc
push
insb
neg
sub
je
pop
test
into
xor
push
leave
and
daa
shlb
push
add
pop
adc
sahf
fisubs
mov
sub
mov
dec
inc
movsl
xor
xchg
push
ljmp
and
out
mov
mov
jne
in
insb
fwait
mov
repz
add
push
pop
stos
jp
popa
rorb
push
mov
cmp
fmuls
fcoms
or
in
stos
ret
js
scas
dec
mov
adcb
sub
pop
pop
sub
addr16
stos
mov
mov
sbb
int3
mov
push
popa
call
or
in
testb
inc
adc
aaa
mov
testl
cmp
loopne
addb
ret
mov
cltd
cmc
cwtl
cmc
push
into
icebp
out
mov
subl
jmp
xor
sub
jb
fdivrs
lds
movsl
int
dec
rolw
push
scas
push
es
jp
or
stc
test
xorl
incl
sbbl
bound
adc
addr16
ljmp
fists
dec
sub
cmc
pop
paddusw
pop
inc
mov
lahf
in
pop
push
roll
sahf
pusha
mov
xchg
inc
jmp
cmp
or
jo
jb
punpckldq
or
loopne
pop
call
std
and
outsl
fxch
lods
jl
xorl
cmp
and
cmp
lea
or
sbb
xchg
push
bound
addr16
lret
mov
sub
inc
xorb
fcomip
imul
sub
rolb
or
cwtl
inc
and
fstps
and
push
or
add
ljmp
mov
adc
loopne
adc
lods
lea
loop
and
addl
popf
int
fbld
pop
push
aas
inc
in
iret
sub
cmp
imul
mov
push
sbb
pop
test
rorb
or
mov
pop
jb
lcall
jp
pushw
dec
cmp
fs
ficompl
push
arpl
sbb
leave
aas
mov
in
cmpsb
sbb
loop
ds
stc
jns
adc
mov
mov
mov
push
mov
inc
sbb
mov
jge
pop
clc
imul
pop
and
jge
sub
lods
add
fcomip
sub
xor
xor
xchg
cs
fisttpll
jg
out
fwait
mov
xlat
fldt
dec
pmaxub
mov
insb
mov
fimuls
test
jbe
test
add
ja
int
xchg
xchg
int3
pop
push
bound
dec
movq
pop
js
adc
push
inc
pusha
in
test
out
push
fwait
imul
out
dec
test
test
add
jae
push
or
sar
dec
push
popa
inc
xchg
cmp
test
xor
sbb
pop
int
sub
push
mov
xor
ret
xchg
mov
sub
dec
ds
cmpsl
fsub
mov
jge
xor
inc
stc
fdivr
test
add
push
movsl
cmpb
push
das
into
xchg
imul
fisttpll
lret
pslld
jne
cmc
stc
int3
mov
lahf
jno
mov
call
ret
cmpsb
xchg
xor
pusha
lds
loopne
movsl
jae
daa
mov
subl
xchg
xchg
mov
fbstp
cli
rcrb
or
fiadds
mov
data16
xchg
xlat
sub
adc
push
adc
push
jns
inc
insb
test
scas
xchg
or
stos
les
arpl
bound
int3
or
mov
push
in
xchg
mov
lea
jp
mov
and
cmp
add
loop
imul
inc
sbb
mov
lret
push
or
rcrb
mov
jge
inc
cmpsl
ja
mov
jae
hlt
push
pop
or
lea
cmpb
daa
adc
int
pop
ja
mov
arpl
cmp
jnp
mov
loopne
push
push
xchg
cwtl
pop
dec
or
insl
sbb
in
cmp
cld
lahf
ss
cmp
sbb
in
enter
pop
test
mov
imul
or
in
pop
sub
js
sbb
inc
push
xchg
pop
or
ret
push
rcl
aad
pop
stos
int
out
inc
mov
adc
test
pop
shrb
shlb
pop
mov
mov
std
repz
mov
es
test
mov
adc
popa
ljmp
test
xorb
push
jg
inc
ss
adc
dec
adc
arpl
pop
jp
out
iret
imul
jns
mov
jne
xchg
inc
mov
pop
dec
in
xchg
popa
push
add
es
pushf
add
lds
or
gs
ljmp
xchg
inc
mov
cwtl
xchg
push
xor
lock
sbb
dec
ds
movsl
out
adc
in
add
popa
jne
and
mov
aam
cmpsl
ret
jmp
out
aas
je
lds
add
inc
xchg
cld
pop
mov
mov
add
and
xchg
pushl
inc
mov
mov
sbb
push
je
mov
mov
jae
in
cltd
xor
and
sub
cmp
dec
jno
xorb
scas
cmp
cwtl
xor
mov
shr
jle
fcom
les
mov
cmp
dec
and
into
jge
push
aas
out
mov
add
mov
shlb
jge
jge
int
push
push
out
add
dec
gs
lahf
sbb
jb
std
add
xor
add
xchg
xor
push
jno
aaa
lea
lock
inc
jae
sbb
out
es
jge
mov
icebp
jmp
sbb
inc
fldenv
xchg
cmp
jl
loopne
xchg
cltd
and
pushf
cltd
cli
cltd
cmpb
jb
ret
arpl
push
sbb
rcrb
mov
daa
leave
mov
adc
mov
pop
andb
movsl
inc
ds
mov
jmp
mov
sub
jae
pusha
jns
popf
ret
daa
fucomp
adc
xlat
jle
add
and
out
fmuls
dec
xchg
sbb
mov
fwait
push
lcall
les
pop
flds
pop
jl
test
jmp
cli
jbe
and
ss
adc
push
pop
pop
dec
cmpsb
cmp
push
ss
xchg
in
mov
fs
cmp
bound
inc
jno
add
inc
pop
mov
lcall
sti
gs
ffree
ljmp
cmpsl
push
lds
push
cmpb
imul
jno
pop
dec
movsl
or
subl
or
in
or
lods
subb
sub
jo
mov
xchg
or
xchg
iret
pop
stos
jae
fdiv
mov
and
xor
ret
imul
inc
loop
adc
inc
add
iret
pop
mov
mov
int3
mov
sar
cmpl
dec
pop
mov
mov
pop
lcall
adc
shlb
jecxz
lcall
cmp
addl
cld
sub
andl
shlb
sbb
scas
inc
les
dec
outsb
pminub
rol
xchg
sahf
cltd
bound
sbb
test
testb
bound
inc
fisttpll
add
dec
push
call
sbb
ja
add
xchg
push
jae
addr16
ret
xchg
sbb
sbbl
jno
aaa
push
inc
pushf
insb
stos
test
fldt
jae
adc
outsl
xchg
ss
flds
push
cmp
mov
pop
ljmp
xchg
divl
rorb
push
mov
fldcw
or
aad
mov
das
into
dec
pop
fidivrs
daa
xor
flds
loop
xlat
sbb
imul
inc
dec
popl
mov
mov
and
dec
ficompl
insl
mov
sub
pushf
sub
imul
sub
jo
xchg
inc
xchg
loope
lahf
std
mov
imul
add
jle
out
sub
mov
rorl
cmp
pop
nop
inc
or
aas
roll
lret
je
or
mov
mov
xchg
popf
cmpsb
jo
cmc
add
mov
sbb
ds
or
sub
adc
cmpsl
sarb
cwtl
orl
xchg
mov
and
loop
pop
mov
mov
jo
shrl
ljmp
add
mov
cwtl
pop
xchg
push
pop
cmpsb
push
add
stos
or
popf
insl
das
imul
shl
mov
lcall
push
add
jl
repz
aam
lock
fstl
mov
sub
add
and
xlat
arpl
aas
lds
imul
xlat
gs
adc
fsubs
jne
xor
mov
test
cmp
sbb
dec
loop
sbb
nop
cmp
test
dec
stc
jp
mov
popa
ljmp
popa
xor
push
jns
mov
lret
mov
in
dec
fisubrs
outsb
xor
sbb
ja
adc
das
add
push
icebp
xchg
push
push
pop
loopne
add
aas
aas
mov
repz
cld
lds
cli
pop
sbb
and
call
aas
pushf
lcall
shl
clc
cmp
ss
outsb
xchg
cmp
movsb
or
lods
mov
jle
cli
adc
xor
pop
shl
test
loopne
dec
xchg
or
add
push
or
lahf
add
cmpl
push
and
das
lahf
sub
scas
testb
scas
and
ss
icebp
pop
ss
call
sub
mov
in
repz
push
sub
push
xor
mov
sti
push
pushf
mov
outsb
jge
and
or
cltd
lods
lods
fwait
jae
sub
sub
mov
leave
xor
ljmp
cmp
cld
dec
fistpll
cmp
adc
shll
loopne
jae
aaa
js
bound
inc
dec
adc
loopne
or
jb
xor
imull
shl
fnsave
stos
outsb
pop
cmpsb
jp
pop
inc
mov
xor
add
xor
mov
pop
cs
mov
cwtl
pop
jg
lods
or
shl
sub
or
push
fisubl
or
shlb
inc
xchg
xchg
in
sti
xchg
gs
cs
xchg
mov
dec
fcompl
stos
daa
mov
jnp
mov
jle
push
shrl
shr
mov
xchg
cmp
js
dec
test
lds
outsl
cmp
pushl
jp
js
sub
daa
jbe
jg
mov
addr16
gs
mov
out
or
test
push
imul
push
push
repnz
loope
pop
mov
xor
fsubl
mov
sbb
aad
fdivp
jne
cli
pushf
jmp
ds
xchg
out
outsl
xorb
loopne
dec
negb
dec
mov
aam
cmp
loope
ja
lret
out
jne
cmp
dec
cld
inc
pop
fcoms
and
mov
push
and
pop
ja
cmp
out
mov
xchg
dec
mov
or
shll
cmpsl
adc
and
dec
push
cld
cmpb
mov
push
cmc
loope
ret
mov
out
sbb
or
pusha
mov
jo
sbb
out
lcall
ds
mov
cmp
adc
imulb
loope
fcoml
mov
push
sbb
ss
jnp
into
inc
mov
bound
or
cs
and
jbe
leave
js
fistps
lea
fwait
outsb
inc
adc
adc
rcrb
xchg
inc
lea
dec
mov
pop
mov
mov
lock
jecxz
mov
inc
mov
test
xor
bound
in
push
scas
aad
cltd
out
sti
sbb
sbb
lret
out
es
arpl
and
popf
or
das
xchg
inc
shll
pop
cmpsb
inc
cmp
ffree
mov
out
mov
test
adc
jp
inc
mov
mov
and
adc
into
aaa
lods
jbe
pop
shll
and
push
push
jmp
xorl
enter
mov
adc
rcr
imul
daa
roll
movsb
stos
ret
xchg
inc
cwtl
shrl
push
adc
push
aaa
adc
ds
lahf
xor
add
dec
inc
std
ud0
loop
push
lcall
and
add
mov
push
in
cltd
stos
cmpsb
dec
in
ret
push
pop
mov
adc
notl
sub
cmp
jge
mov
sar
xor
out
and
adc
adc
xchg
leave
lea
loope
out
das
pop
mov
enter
lock
fsubs
mov
cltd
dec
inc
jae
mov
and
mov
and
cmp
negl
das
mov
fmull
jbe
jns
inc
dec
iret
insl
sub
cwtl
add
scas
pop
push
mov
aaa
sub
iret
inc
inc
mov
cmpsb
lds
orl
dec
repnz
inc
cmp
lret
lcall
add
sub
in
cs
mov
xchg
insl
pop
insb
cmp
sub
insb
mov
jp
pusha
ja
mov
push
push
cmpsb
jmp
fistps
jg
adc
xchg
mov
xchg
iret
mov
int
push
dec
aad
mov
cmp
in
xor
ja
xchg
xlat
pop
insb
add
pop
pop
mov
arpl
inc
inc
popf
rorl
ljmp
in
loop
lcall
outsb
lcall
jle
jbe
sub
test
mov
jmp
rcrb
push
clc
repnz
ret
cwtl
sbb
adc
pop
xchg
jp
xor
push
mov
jle
mul
mov
insb
cmpsl
sub
lock
imul
or
lcall
push
xchg
popf
cwtl
push
jnp
int3
int3
es
ja
loope
xchg
sub
repnz
cmp
xor
and
mov
bndstx
xchg
mov
pop
cmpl
adc
sbb
xor
add
nop
lahf
pop
fdiv
stc
sub
shrb
jne
cmpsl
adc
and
inc
sbbl
sbb
sbb
into
mov
mov
mov
mov
push
popf
xchg
jne
xor
and
fs
inc
sbb
mov
pop
testl
in
mov
jb
push
fisubl
xor
push
cmp
arpl
shlb
pop
xchg
mov
idiv
loope
pop
and
push
jp
jbe
cmp
xchg
fistl
and
push
enter
sub
push
fistpl
mulb
outsb
push
leave
inc
dec
sub
mov
pop
pushf
inc
mov
scas
pop
sti
pusha
and
fsubrs
nop
leave
orb
nop
pop
fsubs
inc
jne
dec
loope
fadds
out
es
flds
mov
mov
jbe
jecxz
pusha
in
cs
sub
sub
ss
sub
loope
dec
into
leave
mov
imul
ds
in
sbb
mov
cmc
jae
xchg
clc
jno
push
outsl
loop
push
jmp
xchg
dec
lret
mov
and
xorb
mov
je
mov
out
push
scas
cmc
gs
pop
leave
jmp
dec
sbb
insb
mov
fidivrs
hlt
int3
sub
xor
test
scas
in
movb
imul
out
ret
cmp
dec
add
jmp
mov
ljmp
lea
popaw
jno
repnz
push
cmpb
push
sbb
xchg
in
jl
je
dec
popf
es
jnp
shll
cmpsl
mov
inc
in
repnz
test
fmuls
or
fcomps
add
pop
cltd
mov
sbb
xchg
ljmp
int
mov
xor
mov
pushf
mov
data16
mov
sub
jl
ret
loope
enter
movsb
xor
mov
jg
push
and
repz
sub
push
mov
stc
adc
flds
inc
rorl
mov
lea
enter
imul
addr16
xchg
dec
inc
shll
outsb
rcrb
int3
repnz
rolb
mov
sbb
pushf
or
jbe
cmp
mov
fidivrs
sub
jnp
mov
es
mov
jp
mov
aaa
adc
cld
and
fs
cmp
mov
mov
das
push
je
mov
test
cld
dec
jg
inc
push
ds
xchg
mov
ljmp
fcoms
test
in
roll
rclb
ret
je
dec
cld
cmp
lret
add
cmc
mov
popa
cmp
clc
sbb
popa
mov
adc
clc
xchg
inc
ja
lea
jmp
sub
mov
add
cmpsl
pop
mov
stos
jmp
nop
sub
mov
xchg
cmp
or
add
imul
out
insl
sbb
sarb
icebp
xchg
jle
lea
xchg
out
xchg
out
into
mov
dec
test
jp
mov
mov
jae
rcr
loope
les
jle
and
adcl
in
mov
xchg
dec
jne
lods
js
xchg
rorl
addr16
aaa
pop
cmc
scas
xchg
gs
jae
mov
mov
mov
inc
addb
mov
in
add
movb
andb
ret
sahf
jmp
mov
adc
mov
out
cmp
and
mov
inc
sbb
cwtl
xor
push
test
addr16
pop
imul
stos
and
loope
mov
jge
notl
fsts
pusha
adc
arpl
jecxz
jle
and
movsb
fs
pusha
orb
loop
pop
mov
add
xchg
push
pop
xor
subl
or
out
lea
cmp
mulb
aam
sbb
fs
dec
and
add
adc
add
loop
es
in
or
test
mov
cmovb
jnp
push
xor
imul
mov
gs
das
cmp
lahf
sbb
scas
gs
and
lcall
mov
push
cmp
push
popa
mov
movsl
bound
divb
xor
das
push
cmp
jl
inc
sti
sub
lods
inc
fwait
push
ss
adc
hlt
sbb
push
push
mov
andnps
mov
lock
cmc
mov
imul
pusha
ljmp
cmc
aam
lret
mov
lods
roll
popa
pop
adc
mov
push
enter
xor
lods
sbb
mov
dec
add
lock
jmp
enter
dec
dec
in
lods
mov
add
dec
sbb
pusha
jl
jo
in
and
mov
push
mov
repnz
das
jo
xchg
push
nop
inc
fdivs
loope
mov
mov
mov
ja
scas
fistps
push
and
pushf
or
mov
mov
fs
jg
popf
jmp
jmp
cmp
idivl
int
jmp
mov
push
xchg
mov
inc
pop
pop
pop
push
stos
mov
pushf
sarl
jns
cmp
fst
jp
mov
loope
mov
inc
fwait
lods
jp
lret
in
inc
and
and
arpl
jbe
inc
std
scas
sub
fs
or
adc
and
out
dec
or
leave
xchg
xor
popa
fld
fwait
pop
jmp
dec
dec
add
mov
push
jle
jl
or
xchg
cltd
add
ds
cmp
sbb
cli
jnp
inc
movsb
push
xchg
mov
mov
je
pop
sti
pop
leave
sbb
cmpsb
xor
push
push
push
xor
cmc
add
pop
pushf
add
dec
mov
mov
and
in
jle
cwtl
cmpsb
lods
xor
pop
movsl
hlt
lods
mov
lds
adc
cmp
inc
cmp
sub
loop
add
je
or
lcall
push
call
cmp
ja
sar
add
ja
jp
ljmp
sub
into
xor
sbb
mov
xor
jne
sar
cli
test
mov
xchg
test
dec
shlb
js
mov
jecxz
or
dec
repz
mov
mov
mov
fld
das
sub
mov
cmp
rclb
ljmp
jbe
call
cmpsl
test
dec
xchg
dec
jbe
cli
int
adc
jg
rcrl
orl
jp
fisttpl
mov
mov
and
xchg
jle
cmc
push
sub
mov
and
mov
inc
enter
sub
dec
push
idivb
mov
xor
lock
scas
pop
xor
inc
test
dec
xor
ds
inc
outsl
xchg
push
xor
stos
sbb
cmp
inc
add
aam
xor
clc
or
mov
fmul
sbb
xor
repnz
push
push
sar
into
mov
push
mov
je
sbbl
or
adc
and
cmp
in
mov
ret
outsl
aam
mov
jle
fs
jecxz
ret
or
jle
inc
fidivs
xor
mov
pop
popf
sahf
xchg
lock
cmc
mov
fwait
and
xor
adc
pop
mov
fdivl
and
repz
ss
iret
xchg
pop
jne
lds
pop
sub
pop
data16
mov
cwtl
out
xchg
clc
push
in
push
cmp
xchg
out
mul
lret
inc
pop
sahf
mov
fwait
pop
jmp
jmp
insb
sub
mov
mov
mov
sbb
enter
jp
bound
into
ret
pop
cmp
adc
dec
rcl
rcll
jge
jge
loope
aaa
mov
ret
cmpsl
not
std
fnstsw
test
mov
xchg
and
push
lcall
dec
inc
pop
xchg
in
jge
cmp
push
andl
clc
lret
pop
jmp
movsb
push
jnp
xchg
sub
pop
loopne
dec
insb
pop
push
mov
fldl2e
loope
sub
xchg
in
cmp
adc
inc
imul
push
sub
or
add
call
daa
mov
or
gs
frstor
sbb
and
iret
lds
data16
xor
xchg
jb
xor
in
adc
mov
out
popf
shrb
lret
xchg
pop
mov
lea
push
mov
orb
and
in
outsb
stc
dec
test
out
flds
stos
popa
sub
xor
sub
add
ja
pushf
icebp
lahf
push
movsb
adc
pop
cs
aas
mov
out
mov
jecxz
adc
aam
in
xor
sbb
pop
sbb
loop
out
aaa
std
and
push
fisttpl
jno
arpl
pop
and
mov
push
daa
push
dec
sub
mov
insb
test
out
daa
clc
daa
mov
sub
loop
xlat
out
popa
out
pop
vhsubpd
mov
and
call
adc
fs
mov
or
cmpsl
sub
inc
sub
ret
rcll
mov
cli
fwait
imul
mov
fildll
xchg
int
jg
js
hlt
jge
scas
adc
push
repz
mov
or
icebp
daa
icebp
mov
pop
pop
insl
dec
cmpsb
ds
aaa
ss
subb
incb
xorl
jns
movsb
pop
cld
dec
mov
xlat
mov
out
mov
fidivl
xor
mov
rcll
xor
cmp
scas
push
mov
xchg
push
jns
jo
pop
scas
cs
lret
or
and
test
mov
and
adc
adc
mov
lret
cli
mov
mov
mov
imul
sub
aam
jno
mov
and
dec
jl
or
int3
adc
jno
call
test
sbb
xchg
or
iret
repnz
fwait
xchg
lods
pop
jnp
lds
add
enter
iret
mov
sub
mov
and
enter
scas
or
pshufw
add
movb
add
dec
mov
into
xor
int3
mov
mov
repz
js
push
add
or
xor
pusha
mov
js
pop
jb
imul
xor
std
jmp
pop
mov
fstpt
subps
fs
insl
rcrl
pop
test
fcompl
dec
int3
dec
pop
popa
sub
mov
in
es
and
push
insb
and
icebp
xchg
lahf
and
sbb
xchg
rcll
cmp
insl
push
xor
je
push
mov
scas
adc
and
stc
mov
imul
sarb
mov
lcall
xchg
xor
or
pop
pop
jne
inc
mov
mov
nop
les
mov
and
out
or
and
xlat
out
jnp
xchg
jb
sahf
pop
fxch
add
lea
pop
cmpsl
dec
sub
aam
test
push
inc
push
mov
movsl
mov
fwait
xchg
aam
test
dec
jbe
mov
fdivr
push
fsubrs
clc
in
xchg
in
sub
jnp
mov
cld
push
xchg
sbb
cld
fstpt
cmp
and
add
xor
cmp
icebp
sbb
ret
dec
imul
sub
and
pop
mov
ficoms
adc
std
push
aas
rolb
jno
jp
aam
lock
sub
jnp
jecxz
fdivrs
loopne
xlat
cmp
and
xor
aam
xor
out
add
push
cwtl
mov
andl
daa
movsl
jge
adc
fwait
xchg
mov
cli
subl
nop
shrb
pop
arpl
and
cwtl
xorb
in
pop
pop
ja
adc
cmp
ret
mov
bound
or
shrb
shll
push
movsb
fnstcw
inc
cmpsl
sti
mov
pop
lahf
out
add
cld
add
sbb
add
push
and
loop
and
ret
scas
lahf
adc
push
cmpsb
stos
cmp
pop
subb
fdivs
ret
pop
mov
jbe
sub
mov
cmpsl
and
dec
icebp
add
fs
ret
sbb
cmp
addr16
dec
pop
sbbb
xchg
inc
lds
outsb
sub
icebp
inc
xor
cmp
aam
scas
insb
ds
jnp
push
sbb
lret
jp
insl
sub
add
fisubrs
test
insb
in
sub
popa
and
xchg
inc
sbb
fnstcw
pushf
push
mov
sti
pop
mov
cmc
xchg
pop
or
mov
inc
ss
ja
mov
mov
movsl
fidivs
xchg
jbe
mov
xchg
out
lret
icebp
fs
clc
lea
mov
dec
and
push
cmpsb
push
in
fldl
sub
jnp
and
xor
shrl
mov
xchg
fsubs
stos
cltd
cs
pushf
adc
test
rorb
lods
out
xor
sub
gs
int
ljmp
lahf
push
lcall
fwait
je
sbb
xchg
inc
imul
fisubrl
idiv
xchg
int3
leave
icebp
and
inc
fistpll
jne
aam
movsb
ss
ja
repz
dec
add
pop
pop
xchg
mov
xor
inc
shrb
mov
xor
ds
ja
aaa
mov
inc
cmp
and
loope
lock
dec
cmp
dec
inc
cmpl
dec
mov
loope
add
loope
lahf
mov
stc
dec
cmp
mov
fnstsw
cltd
fisttpl
cmp
xlat
daa
in
cmpsl
sarl
mov
mov
sbb
adc
or
cmp
outsb
sbb
sub
pop
inc
sub
cmc
push
inc
shl
addb
mov
cmp
fucom
cs
push
or
push
dec
sub
ja
mov
adc
movsl
ss
aad
mov
cmp
je
cs
js
jo
mov
mov
adc
jle
mov
inc
jmp
jae
andps
in
popa
or
mov
into
inc
add
punpckhdq
xchg
mov
in
scas
adc
jle
xchg
sbb
test
loop
popa
rcrl
push
lods
loope
inc
mov
push
or
aam
in
and
mov
insl
outsb
cltd
mov
adc
jno
push
jnp
or
inc
cmp
or
push
dec
test
adc
jne
xlat
xchg
stos
mov
sub
push
aas
push
push
sub
adc
repz
add
xchg
dec
or
push
lea
or
or
adc
sahf
fsubs
clc
jbe
lcall
push
ss
imul
add
in
std
sbb
sti
andl
aam
adc
add
call
cmp
mov
adc
out
int
in
mov
push
addl
adc
scas
and
push
out
mov
popf
fcmovu
iret
jnp
mov
mov
cld
add
and
ja
push
fcoml
and
cmp
cs
xchg
outsb
pop
cmpsb
ret
mov
cmpsl
loop
ljmp
cmpsl
inc
add
xchg
adc
jmp
sbb
mov
faddl
mov
or
out
or
mov
xor
fiadds
mov
andb
or
lds
shlb
stos
xor
andb
inc
cmp
into
out
rol
imul
lds
sbb
mov
cvtdq2ps
addr16
pop
push
pushf
or
mov
gs
push
xchg
loope
xor
or
mov
test
push
xchg
ja
push
jg
and
inc
shll
insl
xchg
jg
pop
das
inc
orb
sub
int3
cmp
and
test
push
jl
incb
cmp
loopne
pop
sbb
add
sub
mov
std
lahf
mov
or
push
daa
fwait
outsl
shrb
mov
xchg
inc
js
sbb
stos
fmulp
faddl
aas
xchg
xchg
outsb
neg
call
les
fildl
mov
inc
sub
data16
lock
mov
mov
es
xchg
jo
xchg
cmp
xor
sets
mov
xor
js
scas
push
push
in
dec
add
dec
inc
jne
add
jnp
les
mov
mov
sbb
mov
dec
sbb
pop
gs
push
and
mov
lods
fucom
movsl
add
fisttps
ret
mov
xchg
xchg
jmp
cmp
fcmovne
jnp
into
pop
adc
repnz
stc
clc
and
mov
icebp
hlt
or
pop
mov
stos
jl
sub
addr16
stos
popf
xor
cmp
leave
sbb
sahf
jne
pop
lock
scas
sub
mov
gs
pushf
orb
xor
push
pusha
sbb
ss
je
push
mov
lret
in
jns
pop
int
iret
jns
gs
in
ret
imulb
dec
cwtl
sub
mov
notb
loope
repnz
popa
sahf
jle
fidivl
mov
fcoms
out
aaa
cmpsb
fwait
pop
pop
adc
outsl
adc
sub
sub
push
imul
popf
and
in
mov
inc
popa
jo
lcall
xlat
xchg
lods
mov
std
sub
test
jnp
xchg
jae
das
test
aad
loope
or
mov
jb
scas
push
gs
call
mov
jmp
push
xor
iret
xchg
jle
pop
out
cs
sbb
rorb
jmp
pop
dec
jae
sub
mov
pop
cwtl
xor
out
add
mov
sub
sub
pushf
aam
push
in
addr16
cmp
decl
pop
mov
test
jno
mulb
add
shlb
sbb
loope
add
sbb
inc
pop
xchg
arpl
clc
push
add
test
sub
cmp
push
aaa
movntq
out
or
leave
sbb
dec
sar
pop
push
adc
adc
adc
das
cld
jbe
push
lret
dec
mov
mov
dec
int3
sbb
movq
int
lcall
sub
leave
push
lock
addr16
mov
fcoml
sahf
test
mov
imul
sbb
mov
and
outsb
sub
fwait
or
mov
in
cmpsb
xchg
push
insb
mov
sahf
into
push
dec
loop
dec
and
xlat
jbe
aad
adc
stos
ss
dec
mov
movsl
inc
mov
adc
bound
pop
and
jl
inc
scas
bound
mov
rcrb
hlt
push
data16
jns
mov
jno
mov
cmpsb
jecxz
ja
lods
fnsave
and
pop
mov
mov
js
bound
movsb
popf
push
sub
repnz
pushf
sub
aad
mov
pop
mov
push
aad
xchg
rorb
test
pop
daa
jnp
adc
push
xchg
push
stc
push
mov
enter
hlt
mov
dec
sahf
sbb
xchg
cli
dec
inc
dec
inc
divb
enter
adc
icebp
loop
cmp
cmpsb
mov
mov
shlb
jnp
add
daa
pop
stos
jo
ret
add
mull
adc
stc
mov
mov
lds
xor
mov
aas
mov
pop
sub
dec
int3
stos
fisttpl
adc
xchg
mov
xorl
out
jge
aad
sub
jbe
sbb
ja
add
lret
shll
out
repz
sarl
mov
sub
movsb
jecxz
sar
cmpsb
lret
push
xchg
loop
xor
pop
ja
jmp
lock
and
jecxz
add
push
sbb
xor
lret
xchg
or
jg
adc
mov
scas
mov
sub
or
lods
mov
cmpsb
adc
je
or
enter
popa
iret
loop
clc
xchg
xchg
or
mov
xchg
mov
loope
cld
jb
add
std
inc
dec
sub
fdivl
push
sbb
hlt
push
jecxz
cmpsl
fdivs
sti
ss
cmc
imul
mov
call
sub
push
cmp
insb
sub
xor
mov
mov
int
mov
imul
add
jnp
or
cli
dec
xor
dec
add
pusha
xor
dec
mov
mov
bound
cs
movsb
and
mov
fxch
shrl
stos
adc
push
aad
add
mov
cld
xor
pop
mov
test
add
sub
and
jae
sub
and
add
inc
jp
pop
sti
add
push
add
mov
and
popf
shrb
add
lahf
into
out
lods
xchg
bound
lahf
out
xchg
mov
sub
and
pop
aas
mov
into
popf
pop
cwtl
sub
js
enter
aad
outsb
xchg
in
jbe
push
mov
mov
rclb
fisttpl
add
fmul
fcomip
add
push
cld
ret
xor
addb
xor
icebp
cmpb
jae
test
and
sarl
xor
sbb
sahf
sbb
cld
leave
loope
push
cmp
ss
mov
xor
jp
and
or
ret
cmp
mov
call
cmp
sub
push
enter
sub
inc
dec
cs
add
rcrb
add
pop
and
scas
jge
sub
inc
mov
mov
rorb
adc
push
int
xchg
iret
mov
sbb
lods
dec
mov
enter
aas
and
mov
mov
xor
aaa
dec
lcall
adc
dec
iret
repz
xor
sbb
sub
rcrb
sahf
mov
xchg
shl
cmpsl
and
jp
lds
cmp
lock
adc
clc
inc
sbb
pop
pop
mov
lret
mov
xor
lods
sbb
push
push
es
pushf
and
mov
pop
ds
pop
pop
mov
es
dec
jmp
adc
jae
jo
lret
dec
add
in
fcomps
int3
push
mov
inc
out
jmp
in
push
out
aaa
ficoml
fsts
mov
sbb
sub
or
movsb
push
ficompl
and
lds
mov
sub
subb
mov
and
je
imul
out
fisubrl
cmp
dec
sbb
pop
sbb
push
jp
add
cmpsb
fcoms
mov
out
xor
mov
movsl
jg
in
push
sub
adc
mov
mov
movsl
leave
push
xor
dec
shrb
stos
mov
std
cltd
cld
push
add
sbbl
sbb
or
inc
outsb
lret
add
icebp
dec
inc
into
arpl
mov
es
test
jmp
fldcw
out
loope
sub
ja
lods
loop
push
pop
notrack
ror
mov
mov
sahf
pop
xor
jmp
into
roll
lret
bound
sub
push
js
xor
mov
dec
movl
mov
sub
inc
or
add
into
push
call
and
add
test
cltd
dec
sbb
dec
cli
rcrb
lcall
add
xchg
cmp
mov
mov
cmp
clc
imul
dec
js
jecxz
pop
push
mov
ljmp
cld
sub
mov
std
xor
inc
jns
xorl
inc
stc
inc
cmp
mov
mov
int
aaa
jmp
adc
sbb
testl
dec
divps
jne
and
sbb
pop
add
jne
std
ja
sbb
and
gs
jp
adc
pop
rorl
xchg
pop
dec
icebp
pusha
addr16
lea
es
in
popf
insl
push
es
sahf
inc
dec
push
sbb
std
cmc
cwtl
mov
and
cmp
mov
mov
scas
es
xchg
sahf
pusha
mov
enter
jb
stc
ja
sbb
pop
movsl
adc
popa
xor
cmp
cmp
cli
stos
sbb
pop
pop
mov
jmp
pop
inc
cld
mov
mov
aaa
outsb
fsubrp
push
outsl
lods
adc
out
sarl
std
xchg
sbbl
pop
je
push
call
cmc
mov
test
xor
mov
and
out
in
add
jge
push
call
test
sbb
mov
xor
jo
jns
xlat
adc
jg
popf
addl
inc
jge
jecxz
push
sbb
insb
inc
adc
bnd
fstps
nop
jge
xchg
aad
mov
or
addl
lret
push
aam
stos
jp
adc
cmp
push
jne
testl
ret
lret
in
adcb
xchg
push
imul
scas
add
into
je
fdivr
jae
add
cmp
not
dec
mov
shrb
addb
fcom
mov
xlat
xchg
cmpsb
xor
movsl
jl
std
outsl
lods
adc
push
dec
lret
push
ljmp
dec
pushf
mov
in
pop
sti
hlt
jp
mov
cli
rol
lods
fldenv
sub
xchg
fbstp
fistpll
es
pop
push
inc
mov
lahf
dec
aam
jno
mov
pushf
jbe
xlat
jnp
sub
ss
lods
mov
push
sub
cmpsb
nop
sbb
out
mov
movsb
popa
cmpsb
les
cmpb
aas
movsb
fistpl
popa
subb
daa
dec
inc
or
cmp
stos
popa
loope
bound
xchg
int
arpl
sbb
xor
test
push
jmp
xchg
cmp
cltd
or
pop
cmp
mov
clc
xor
daa
gs
cmp
pushf
adc
pop
lahf
mov
jge
popf
add
mov
dec
cli
adc
pop
xchg
into
or
cld
stc
push
inc
xchg
inc
adc
sbb
pop
cmpsb
aad
pop
out
dec
in
inc
xor
xor
lret
fidivrl
call
orb
aaa
das
test
add
adcb
lahf
cld
push
repz
iret
cmp
add
xor
outsb
pop
ljmp
adc
pop
mov
mov
aas
test
das
mov
sbb
push
jae
xchg
mov
or
mov
popf
xchg
mov
jl
fildll
mov
mov
outsl
mov
scas
xchg
gs
insb
aam
inc
xchg
sahf
xchg
xchg
xor
xorl
push
ljmp
cmp
sbb
std
fsubr
xor
orl
or
les
fnstcw
dec
inc
pop
imul
cmpsl
xchg
sbb
dec
and
adc
sbb
rcl
cmp
fsubrl
mov
outsb
inc
xor
daa
dec
xchg
pop
xchg
inc
cmp
xor
xor
cs
pop
jno
daa
dec
lods
cmp
shll
loope
call
sbb
mov
pop
xchg
push
lret
in
or
dec
hlt
ret
jle
ret
insl
loope
shll
dec
push
in
xchg
push
insl
pop
call
or
dec
aaa
pop
pushf
pop
ja
cmp
test
jle
xchg
pop
fcomp
hlt
setae
or
adc
insb
mov
pop
imul
xor
push
mov
pop
dec
je
xor
pop
out
inc
test
ds
or
cwtl
mov
mov
or
mov
sbb
pushf
imul
add
xor
mov
adc
jmp
mov
addr16
jge
pop
jne
lahf
subl
je
cs
out
ds
push
mov
out
mov
pop
gs
cs
movsb
adc
fistl
sti
add
mov
mov
mov
ret
mov
or
mov
and
pop
imul
push
cli
movsb
idivl
xchg
stos
jecxz
lock
dec
add
add
pop
stos
adc
jnp
mov
adc
andb
dec
and
mov
jb
mov
pop
add
mov
aaa
es
ja
xchg
jns
fmulp
sbb
pusha
outsl
or
fidivrs
bound
gs
pop
roll
in
sub
mov
mov
mov
das
jae
inc
in
imul
or
hlt
sub
pop
daa
fldt
and
movsb
mov
cmpb
mov
ret
cmp
adcl
jge
std
ds
lret
rorb
jno
xor
mov
push
std
xor
mov
pop
les
int
out
out
pop
aam
out
mov
xchg
xor
push
mov
jp
xchg
or
jmp
arpl
loop
int
ret
xchg
fnstcw
and
out
out
insl
por
bound
sbb
mov
test
add
cmp
jge
aam
push
ret
push
xchg
imul
adc
push
jmp
outsl
xor
movsl
lods
stos
daa
mov
popa
divl
sbb
lcall
andb
inc
test
out
ss
and
orb
scas
sub
mov
cmp
mov
add
lea
xrelease
push
mov
inc
mov
push
xor
push
sbb
in
movsb
lret
test
mov
add
jno
xor
xor
mov
sub
cs
push
iret
gs
icebp
hlt
add
add
sub
clc
cmp
movsb
scas
inc
out
adc
sub
xor
cmp
rclb
lret
mov
fbstp
sbb
mov
sub
jp
mov
inc
add
int3
sub
dec
ljmp
lret
mov
int3
out
xchg
dec
fs
or
sahf
shrl
xlat
lret
shll
pop
xlat
and
cs
jg
push
pop
out
in
push
out
in
sub
lahf
inc
pinsrw
test
mov
jmp
mov
sti
pop
dec
jae
jae
lcall
mov
adc
test
push
insb
push
mov
fs
fwait
pop
lret
cld
sub
mov
loope
idivl
mov
push
mov
lret
xorl
sbb
sbb
movsl
fldt
dec
pop
mov
dec
pop
add
ret
push
mov
mov
fsts
test
pusha
in
xchg
push
jle
sbb
push
loop
adc
aas
xor
shlb
jmp
sub
insl
and
lock
outsb
mov
stos
and
adc
clc
lahf
lcall
test
adc
into
cli
in
xor
xchg
fwait
fwait
add
jmp
jge
mov
adc
nop
pop
jnp
outsl
repz
cmp
orl
je
or
sub
aas
mov
aas
mov
stos
jge
clc
fisttpl
ljmp
inc
or
sbb
stos
mov
js
cmpsb
dec
cmp
incb
jl
dec
das
stos
call
or
jbe
and
jne
fmul
push
jnp
inc
adc
cmp
arpl
add
ja
jg
loopne
pop
cmpsl
ds
sbb
xchg
jecxz
inc
xchg
daa
mov
jo
adc
add
adc
sahf
push
int
ret
in
daa
mov
out
add
pause
adc
ljmp
lds
pop
stos
pushf
iret
cmpsb
push
movsl
loop
xchg
pop
dec
mov
add
push
xor
insl
repz
mull
xor
xor
cmp
out
push
shll
jg
add
nop
fdivr
jmp
aas
orl
xor
inc
in
or
push
cmp
std
out
lock
xchg
push
mov
stos
sbb
fcmovu
data16
test
or
jp
std
je
sub
pop
testb
inc
jecxz
lea
xchg
pop
xor
movnti
stos
jl
add
inc
and
outsb
push
mov
or
adc
dec
add
daa
push
add
push
adc
or
adc
cs
sub
xor
repnz
push
xchg
pmulhw
scas
sbb
lods
mov
mov
adc
movsw
jnp
lret
mov
xchg
mov
pop
sbb
xlat
adc
jne
popa
xor
dec
lea
xor
sub
mov
int
inc
add
xchg
aam
pop
leave
sbb
out
enter
mov
lea
mov
cld
ds
push
inc
push
sbb
rorl
lods
mov
lret
nop
ficompl
fistpll
xchg
and
mov
mov
jno
stos
in
mov
push
aam
lock
iret
and
push
add
mov
int3
add
sub
inc
mov
shll
sub
out
sbb
mov
lods
movsb
daa
fldt
fidivl
push
sub
inc
mov
xor
push
mov
ret
insb
inc
push
and
and
pop
out
or
sbb
xchg
dec
jbe
fldl
mov
bnd
inc
mov
mov
push
inc
bound
mov
xchg
js
ja
mov
call
add
push
xor
bound
sbb
jns
lcall
mov
gs
lock
mull
jmp
sub
inc
aam
jle
lahf
fcomps
dec
mov
xor
jbe
cmc
pushf
cli
mov
mov
insb
insb
cld
fxam
outsl
sti
test
mov
cmp
fdivrl
push
push
and
xchg
in
js
pop
dec
clc
popf
stc
cmc
xchg
movsb
pop
enter
jmp
push
mov
mov
shrb
inc
scas
sbb
mov
sahf
mov
js
ret
mov
xor
inc
fcomps
add
mov
mov
sub
rep
or
lock
call
cmp
pop
cmc
repz
mov
xchg
mov
jo
cli
out
push
add
mov
not
loop
cmp
mov
inc
sbb
mov
ss
jmp
mov
ss
dec
sub
pop
aaa
ds
fsubrs
fchs
mov
scas
or
xor
in
repz
outsb
fsub
rcr
fcmovne
jae
jnp
aas
movsb
dec
add
cld
cmp
inc
out
in
sub
push
or
movl
cmp
jo
dec
inc
push
inc
mov
test
cmp
rcll
adcb
push
push
xorl
xor
pop
in
sub
leave
cmp
sbb
jp
stos
into
jne
cld
xchg
jg
scas
dec
mov
jne
mov
xchg
push
in
inc
add
push
or
ds
lcall
lcall
cmp
xchg
jecxz
jnp
stc
xchg
dec
int3
jo
adc
jl
daa
in
imul
push
jb,pn
js
lret
imul
xchg
xchg
and
test
mov
jmp
leave
push
in
ret
pop
int3
pop
push
lods
scas
jnp
ret
jb
mov
cs
mov
xor
or
in
cmpsb
cs
or
stc
pop
mov
mov
insl
insl
pop
sahf
push
xchg
jp
xchg
dec
subl
fnsetpm(287
sbb
shl
jbe
adc
sub
cmpb
jne
stos
adc
mov
fisubs
ja
mov
inc
lcall
cltd
push
cs
cmp
xchg
cmp
mov
inc
and
stos
lcall
jp
xor
jno
movsb
mov
cmp
lcall
fstl
dec
and
cmp
mov
test
insb
mov
adc
xlat
imul
push
mov
push
sarl
insl
lcall
mov
xchg
orb
cmp
adc
loopne
leave
daa
adc
xchg
sub
movsl
mov
std
movsb
clc
dec
and
hlt
outsl
mov
cmc
add
mov
sub
jl,pt
idivb
jbe
fbstp
jae
mov
ret
ss
ja
xchg
mov
test
repnz
fwait
stc
or
clc
cs
les
adc
or
scas
popa
jns
imul
sbb
inc
sti
dec
inc
jg
bound
fwait
dec
add
icebp
dec
pusha
mov
gs
ss
jbe
jne
cli
adc
aaa
inc
int3
leave
push
inc
dec
sub
dec
aas
js
sti
cmp
cmp
loop
mov
push
repz
or
sub
xchg
loope
rolb
jb
sti
in
orb
js
and
lret
rol
std
add
lock
xchg
test
repnz
or
jbe
js
fisttps
out
mull
test
roll
xchg
adc
aam
sarb
adc
sahf
aad
sbb
sbb
lods
nop
lret
data16
fcoml
lahf
int
xor
das
add
std
push
in
pop
mov
iret
jmp
jo
mov
lret
in
push
push
mov
insl
and
cmpsl
push
cmp
mov
mov
mov
xor
dec
push
aas
cmpsb
adc
adc
ds
fnsave
nop
cld
dec
jmp
adcl
dec
fidivrl
out
and
push
inc
nop
jbe
icebp
iret
add
jnp
dec
idivb
incb
es
lcall
push
rcrb
mov
mov
jl
orl
xchg
sbb
daa
pop
push
stc
cmp
xchg
add
les
pop
mov
sub
xor
outsb
cmpb
sub
aaa
aad
sub
push
int3
outsl
cmp
push
seta
fsubl
js
inc
jp
test
in
push
or
jnp
push
cmc
pop
mov
mov
sbb
fwait
negb
inc
sarb
dec
lret
dec
ljmp
xor
scas
pushf
or
int3
movsb
inc
mov
pop
jle
repz
rolb
xchg
lret
cltd
leave
jno
push
dec
mov
mov
mov
xchg
inc
mov
push
fnsave
sbb
insb
arpl
ret
push
mov
sub
or
mov
sub
inc
ljmp
popf
lods
iret
xlat
jl
leave
mov
adc
add
push
mov
adc
or
inc
push
or
mov
in
ret
mov
and
js
out
xor
insb
adc
aas
push
pop
inc
pusha
and
xor
pop
stos
mov
dec
pop
mov
and
aas
int3
push
jmp
ja
ficoml
push
xor
aaa
and
sub
imul
fldcw
or
cmp
jns
xlat
sbbl
das
insl
mov
push
cli
mov
adc
cs
pop
pop
mov
sbb
and
xor
cmpsl
scas
xor
mov
xchg
pop
or
or
pushf
ds
insl
stc
cld
sbb
insb
mov
or
jno
inc
mov
aam
das
push
mov
push
and
test
fcoms
ds
out
jnp
leave
xor
das
or
lret
cli
xchg
lret
inc
cld
data16
sub
lahf
out
mov
mov
lret
dec
lret
jo
pushf
push
jo
dec
cmpsb
inc
test
mov
mov
inc
sbb
xchg
or
adc
and
dec
push
cmp
fwait
xlat
dec
mov
pop
rorb
das
jl
fnstcw
push
mov
cmp
lret
xchg
nop
xlat
rol
add
test
jg
scas
mov
fnstcw
inc
cld
adc
xor
ret
inc
daa
jg
dec
xor
jb
out
mov
in
cmc
fdivl
lds
popa
mov
inc
cmpsl
pop
arpl
and
pop
sbb
jne
xor
mov
fcmovu
es
mov
add
pop
fldcw
rcl
xor
mov
jmp
or
gs
ja
repnz
push
cmp
test
loopne
mov
jo
adc
pusha
mov
push
ret
inc
xlat
movsl
push
gs
lods
in
or
jno
fs
and
mov
lret
mov
mov
repz
push
fsub
sub
mov
push
popf
repnz
sub
push
or
cmc
nop
pop
test
test
scas
pop
pushw
cmp
mov
sar
mov
add
pop
fnstsw
cmp
js
mov
fwait
sbb
mov
mov
enter
and
ljmp
cltd
int
cli
inc
lahf
pop
andb
aam
mov
sbbb
jno
loopne
mov
es
lock
mov
push
cmp
xchg
cmp
mov
int3
mov
adc
divl
and
out
sub
lea
hlt
stos
cmp
pop
cmp
add
loop
fnstsw
cmc
and
scas
rol
lea
movsb
mov
sub
lret
mov
sub
es
pop
push
push
push
in
mov
inc
cmp
inc
or
mov
mov
add
inc
dec
jno
xorl
cltd
adc
dec
into
in
add
cmp
pop
fisubs
in
mov
or
mov
iret
mov
pcmpgtd
push
dec
push
fsts
xor
xor
push
sarl
add
cmp
out
fsubl
cmc
pop
mov
lods
or
mov
adc
push
lods
and
in
ja
adc
insl
int3
pushl
jmp
xchg
sbb
lret
pop
cmp
daa
jnp
jecxz
jb
xchg
std
sbb
mov
scas
sub
daa
jae
cs
nop
iret
mov
dec
orl
pop
pusha
lret
test
cmp
scas
push
pop
movsb
cli
cmc
stos
outsb
and
loope
sahf
mov
push
push
jns
outsl
into
add
mov
fsubl
xor
or
rcr
mov
scas
mov
fdivrl
xlat
fnsave
xchg
std
pusha
cwtl
int3
sub
gs
inc
aad
popf
jmp
adc
jmp
push
shl
mov
xlat
fst
dec
sbb
lret
xor
mov
mov
cmp
pop
pop
std
jg
inc
fcoms
into
test
fcom
xor
push
adc
cmpsb
cmp
dec
mov
icebp
movsb
sbb
in
mov
and
cld
aad
sbb
dec
jbe
lcall
mov
rcrb
cmc
push
and
out
and
lods
pop
leave
mov
dec
icebp
mov
jne
shl
cld
lahf
stos
or
lret
imul
daa
ret
adcl
cmc
or
xchg
jl
pop
sbb
mov
mov
inc
or
cmp
fstl
cmp
pop
fs
cmp
iret
orl
outsl
add
js
outsb
and
loope
sbb
rol
in
jbe
addr16
adc
push
les
arpl
mov
adc
or
aaa
mov
pop
ljmp
mov
cmpsb
shll
jg
mov
pop
scas
cmpl
cmp
mov
mov
inc
mov
add
orb
jle
mov
and
mov
into
dec
inc
hlt
mov
push
pop
xchg
inc
lock
or
or
ds
adc
inc
sub
insl
xchg
pop
shrb
sub
ja
xor
mov
add
arpl
adc
sbb
jl
or
enter
adc
jp
pop
out
cld
sbb
insl
call
jne
mov
cmp
xorl
jbe
adc
jae
arpl
dec
mov
cmpsb
pop
bound
imul
jecxz
add
mov
fnstsw
shrl
mov
xchg
out
aam
fs
adc
jbe
push
mov
or
cmpsb
dec
jns
sbb
xchg
inc
push
sbbb
inc
loope
xor
pop
pop
mov
xchg
xor
pusha
ret
adc
lret
jnp
push
jo
dec
inc
stc
cmp
in
jae
xor
call
mov
pop
popa
fdivr
cli
mov
cli
mov
pop
xchg
ficoml
out
push
inc
loope
ror
mov
add
jl
mov
inc
ret
pop
rcr
push
cmp
xchg
hlt
inc
adcb
adc
lret
outsb
iret
mov
hlt
adc
jle
jo
mov
xor
iret
push
xchg
cwtl
xchg
sub
inc
lret
and
dec
std
or
in
pop
in
ret
cld
pusha
mov
push
or
data16
xchg
cmp
jge
es
fisubs
or
mov
adc
cld
cmpsb
popf
or
pop
cmpsl
sbb
jbe
scas
cli
cmc
mov
mov
subl
enter
sub
add
and
pop
dec
adc
fwait
std
mov
mov
lret
aam
push
sub
dec
ds
lret
out
shr
addr16
push
decb
xchg
and
mov
xchg
push
xor
push
scas
xchg
lds
push
inc
jg
xlat
std
pop
dec
mov
mov
jns
dec
aad
xchg
mov
lret
pop
dec
in
lea
scas
and
icebp
cltd
pop
sahf
hlt
shll
stos
lock
mov
jnp
test
jo
rcrl
je
stc
lret
inc
imul
add
adc
sub
cltd
mov
sbb
xor
mov
fdivrl
outsl
mov
xchg
mov
or
sbb
push
sar
mov
adc
cwtl
xchg
int
test
push
stos
add
lcall
out
shr
imul
inc
mov
or
mov
sub
sbb
stos
xchg
ret
clc
stos
sub
icebp
cmp
enter
jb
mov
mov
loopne
cmpsl
and
pop
xchg
std
out
cmp
iret
mov
ficoms
mov
call
movsl
adc
mov
aam
cmpsl
mov
test
or
cli
repz
std
jnp
pop
fcomps
xchg
loopne
jecxz
iret
je
adc
sub
jle
call
cmp
ss
mov
sti
jnp
cmc
std
cli
pusha
aaa
les
test
jecxz
xchg
mov
repz
mov
pop
jg
or
fistpll
outsl
xor
fdivrp
ja
dec
jg
movsb
outsb
pop
and
je
xchg
stos
dec
add
push
repz
scas
lods
mov
fildll
movsl
or
pop
jp
jb
mov
xchg
sbb
jnp
dec
call
js
adc
push
or
add
fildll
inc
aas
pop
mov
push
pop
mov
sbbl
negl
jl
sahf
cmp
je
clc
sbb
xchg
dec
adc
jno
jno
pop
stc
outsl
pop
movsl
xchg
mov
shrl
jl
out
add
loopne
xchg
inc
aaa
ret
pop
pusha
adcl
push
rorb
cli
pop
push
repz
mov
xchg
dec
xor
fadds
pop
roll
lea
es
imul
std
gs
add
jne
sbb
addl
aam
xor
mov
adc
cmpsl
lds
pop
fistpll
jmp
in
pop
test
and
lods
dec
mov
mov
push
fidivl
mov
ret
sub
push
adc
aaa
js
adc
jecxz
xor
adc
jmp
std
dec
jo
dec
dec
add
sbb
cltd
or
lods
sub
outsl
xorb
mov
sub
inc
sub
cli
jmp
das
shlb
inc
mov
loope
lahf
add
cmp
pop
mov
sub
and
mov
sbb
dec
outsl
inc
loop
xchg
lods
mov
aad
loopne
fs
xchg
pushl
xchg
cmp
addr16
push
lahf
xor
aas
mov
or
xor
push
jnp
sub
cmpsl
dec
insb
inc
push
scas
and
cmpsb
sub
loope
sbb
insl
scas
jecxz
test
imul
stos
add
scas
lret
jae
out
les
jnp
push
inc
or
shlb
fdivr
fistl
clc
mov
mov
in
xchg
cmc
mov
cmp
subb
loop
rclb
mov
das
jbe
adc
std
mov
pop
mov
mov
int3
xor
mov
adc
xchg
mov
shrb
call
push
cmp
sbb
aad
imul
adc
push
into
scas
jae
int
test
andl
std
or
pop
cmp
js
push
adcl
pushf
mov
push
aad
mov
cld
cmpsb
in
and
push
lds
stos
lahf
fisubrs
lods
cmpsb
fdivrl
stos
push
out
scas
mov
push
pop
pusha
cmp
mov
sbb
movsl
jbe
sbb
dec
push
bound
ds
sub
sub
mov
inc
dec
mov
jl
adc
xor
stc
ja
mov
mov
mov
fdivl
mov
std
fdivrs
stos
add
faddp
mov
imul
or
ds
or
cmp
mov
dec
add
cmp
cltd
push
jl
pushf
adc
xchg
jnp
pushf
mov
xor
pusha
cmp
call
and
sti
xchg
imul
mov
push
push
mov
push
adc
outsb
mov
data16
out
lcall
and
dec
mov
jae
pop
leave
lahf
pop
in
stos
imul
mov
fistpl
ja
ds
or
push
adc
xor
scas
pop
fildl
xchg
mov
out
das
call
pop
test
mov
clc
loop
or
stc
xor
jecxz
test
psllq
mov
mov
cmp
orb
cmp
pop
mov
cs
into
rcrb
push
lcall
mov
push
outsb
loopne
gs
scas
mov
fnsetpm(287
addr16
inc
push
stos
adc
fs
xchg
andb
es
das
cmp
or
popa
test
shl
cmc
in
push
jns
test
sbb
mov
cmp
fwait
xchg
or
popf
aad
push
pop
add
push
inc
dec
lea
pop
jmp
cld
bswap
mov
xchg
fwait
aaa
ljmp
shrb
jg
aad
out
adc
lods
pop
cmp
mov
ret
enter
int3
js
out
push
aam
add
push
lods
sahf
or
pushf
dec
incl
xchg
adc
out
fwait
popf
jno
jp
aad
in
jecxz
ljmp
push
mov
jp
in
push
cs
mov
adc
inc
std
mov
ljmp
push
sub
call
sti
inc
mov
add
js
cmp
sbb
xor
mov
repz
sub
xchg
cmpsl
loop
neg
mov
push
jne
out
test
sub
outsb
adc
stos
cs
out
mov
aas
lea
mov
push
cmpsl
mov
xchg
push
pop
xchg
call
pushf
in
mov
xchg
insl
add
sub
repz
data16
jnp
and
jnp
adc
ja
inc
lcall
call
lahf
jp
sar
lahf
flds
mov
lret
mov
in
out
inc
mov
pop
testb
jae
mov
xchg
mov
es
sbb
xlat
cmp
jp
mov
mov
in
test
adc
stos
adc
fdivl
inc
sbb
mov
bnd
scas
push
cmp
or
loopne
inc
incb
shlb
cmp
jl
xorl
shl
add
subl
pushf
sarb
fidivs
jle
lea
fsubrp
stos
mov
loope
mov
filds
incb
ret
adc
mov
ljmp
mov
jne
gs
jp
movsb
mov
sbb
sar
es
and
adc
mov
das
dec
xor
js
ljmp
test
out
adc
mov
push
and
aas
xchg
sub
ret
push
adc
mov
adc
sub
lret
subl
mov
inc
call
sbb
sub
inc
mov
sbb
push
scas
push
mov
loopne
in
lret
push
ja
js
addr16
sub
aad
inc
es
sub
out
imul
aam
add
stc
push
ljmp
and
cli
add
loope
mov
int3
sub
repnz
mov
lods
xor
dec
fstpl
and
add
cmp
xchg
cmpsb
bound
xorl
dec
cmp
cmpl
cmc
pop
and
mov
test
sub
adc
adc
pop
es
imul
aam
or
das
and
and
or
es
test
inc
mov
sub
imul
lock
cmp
sbb
in
mov
add
jb
push
mov
xchg
mov
ljmp
xor
cmp
repz
rol
fwait
push
shlb
add
sub
sub
mov
or
ss
mov
jb
xchg
xchg
mov
inc
sub
push
popf
pushf
ss
pop
lea
js
std
scas
cmp
mov
inc
and
loopne
sub
inc
adc
call
jne
outsl
scas
pop
setae
mulb
mov
pushf
jg
dec
sbb
nop
mov
push
lret
pop
pop
stc
addr16
inc
fld
insb
js
inc
mov
lock
fistps
cwtl
xchg
jae
xor
push
mov
popf
mov
jnp
aas
es
cltd
loopne
movsb
repz
cmp
sbb
push
pop
dec
cmpsl
xor
xchg
xchg
pop
bound
and
lods
jg
pop
push
jae
cmp
push
pop
pop
addr16
push
scas
dec
jecxz
xchg
popa
in
dec
inc
int3
subl
and
pop
dec
or
inc
adcb
sub
xor
inc
cmpl
std
cmpsl
aam
xchg
cmp
lahf
cmp
scas
add
daa
mov
in
xor
mov
pop
into
dec
mov
adc
or
and
loopne
sub
dec
jmp
out
cmpb
xchg
and
dec
push
stos
and
outsb
cmpsb
btsl
icebp
cs
dec
jmp
xchg
iret
popa
es
xchg
sub
mov
sbb
push
cmpsb
mov
or
cmp
in
or
data16
add
add
and
dec
or
pop
nop
and
pusha
fbstp
jge
mov
inc
pop
xchg
fsubr
js
dec
in
imul
imul
mov
add
lods
inc
xchg
daa
andb
insb
idivb
test
and
mov
adc
sbb
mov
test
lods
gs
mov
and
xchg
mov
movsl
pop
clc
popa
or
in
stos
cmp
dec
data16
mov
mov
repz
add
jb
adc
sub
mov
ficoml
inc
mov
cmp
xor
rol
adc
addl
mov
dec
clc
das
pop
lahf
jns
and
repz
sbbl
pop
loop
test
and
cwtl
pop
jns
out
jl
jnp
mov
je
movlps
jne
cli
lret
mov
es
sub
mov
ja
imul
out
adc
cmp
or
pop
stos
add
xchg
xchg
stc
xor
call
mov
js
cmc
mov
outsl
and
mov
rdmsr
xchg
in
xor
aam
mov
pop
push
insb
inc
cmp
push
cmp
subb
cmp
adc
pop
xchg
xchg
jns
das
ret
jp
jne
les
mov
movaps
pop
pop
test
in
dec
jbe
mov
std
sub
rolb
loop
cmpb
int3
pop
add
inc
arpl
loope
and
dec
dec
dec
dec
sub
addl
test
xchg
jmp
in
jg
jnp
aam
cmp
push
out
inc
imul
push
jmp
shll
cs
dec
addr16
mov
and
jo
ds
mov
mov
loop
outsb
pusha
repz
sbb
adc
movsb
aas
xor
js
js
lods
inc
scas
lret
test
mov
lods
lods
xorl
xchg
sarb
and
aas
mov
popf
popf
out
scas
mov
sbb
lret
push
lock
dec
mov
xlat
mov
push
sub
and
inc
pushf
and
xchg
xchg
lea
int
fstpl
lea
jp
ret
lret
pop
xchg
push
movsb
test
or
push
mov
das
lods
mov
movsl
enter
push
push
cmpsb
call
cltd
ret
shll
fnstsw
adc
sbb
dec
stos
mov
test
js
ds
add
je
insb
out
sti
nop
hlt
shlb
ds
push
sbb
in
ljmp
jmp
and
push
xchg
lea
and
outsb
das
cs
xlat
arpl
cmp
bound
addr16
push
stos
outsb
mov
adc
jg,pt
and
inc
jae
jno
and
negl
out
rcll
ljmp
iret
xor
dec
or
push
out
add
adc
jno
sti
ds
xor
pop
mov
dec
or
fdivrp
ret
loopne
mov
insb
jno
adc
jmp
xor
fimull
add
xor
jbe
out
add
jl
stos
dec
dec
push
outsb
push
or
ja
or
pop
cmp
or
adc
push
ss
mov
ret
in
add
cmpsb
push
xchg
shlb
ds
mov
and
mov
iret
rol
inc
out
sbb
fidivrl
mov
xor
add
cmc
xchg
add
fidivrl
cmp
in
in
jg
adc
inc
ljmp
fbstp
xor
dec
or
sbb
or
sbb
mov
xchg
inc
dec
clc
add
mov
or
jb
xchg
loopne
idiv
sub
cld
adc
aam
ljmp
int
jae
pop
cld
dec
test
aaa
es
push
pop
stos
lret
std
dec
fs
and
jp
cmp
mov
jl
xor
shl
xor
and
sahf
imul
xchg
cmp
out
fstps
mov
imul
push
neg
sbbb
mov
inc
out
mov
cmp
popa
and
movsb
jno
popa
pop
or
add
inc
ljmp
dec
sahf
ret
jno
pop
inc
sub
xor
ds
fcmove
jg
scas
loop
loopne
or
out
inc
push
in
cmp
jl
je
sub
movsb
imul
pushf
iret
pop
jo
imulb
jge
push
cwtl
push
movsb
cmc
fstps
xchg
push
cld
outsl
in
nopl
test
push
in
xor
adc
lret
jp
add
test
sahf
mov
or
dec
lret
movsl
jae
push
inc
aas
in
fdivr
jle
inc
insl
mov
adc
jae
inc
pop
pop
sahf
push
lock
out
outsb
imul
mov
sub
lods
shll
inc
mov
mov
jns
insl
cmc
cld
lods
stos
enter
arpl
and
xchg
enter
pop
sahf
or
arpl
fsubs
sub
adc
jae
je
ss
lret
xchg
mov
mov
jmp
fs
iret
mov
adc
xchg
fistpl
pop
xchg
mull
ret
imul
imul
aas
test
repz
jl
in
push
mov
out
inc
sbb
cmpsb
ret
out
popa
fisubs
gs
mov
rorb
daa
daa
cmp
mov
inc
inc
mov
clc
jnp
fwait
add
popf
xor
jmp
aas
pop
imulb
sub
jbe
add
das
pusha
inc
icebp
inc
mov
mov
fs
mov
rcll
ret
dec
and
sbb
pop
aaa
push
test
nop
and
movsl
dec
cmp
xchg
jo
or
add
je
dec
cltd
mov
jnp
idiv
dec
data16
into
mov
dec
inc
inc
jecxz
inc
mov
add
movsb
xchg
xor
sub
daa
test
xor
rcll
cmpsl
aad
adcl
loop
sahf
daa
ja
mov
iret
mov
cmp
dec
imul
and
jo
nop
add
call
jl
jae
mov
lcall
xor
ljmp
pop
fsubs
pop
and
in
jl
repnz
mov
mov
fwait
mov
js
repz
and
lahf
out
jne
jg
add
jmp
mov
clc
add
xchg
adc
and
jb
das
jae
aam
ljmp
xor
fmuls
cli
bound
mov
jmp
mov
repnz
test
cmpb
push
dec
jb
mov
sub
xchg
jmp
leave
test
call
loop
inc
aad
bound
jne
rcrl
lds
cmpsb
cmp
ds
sti
clc
enter
out
xor
sahf
or
push
adc
mov
and
add
sbb
cwtl
out
lods
insb
in
or
push
fldl
arpl
ss
adc
popa
mov
or
sub
fldenv
les
push
xor
jge
cmp
notb
aam
pop
pop
mov
shlb
cmpsl
xchg
jae
ja
cmp
mov
sub
lods
sbb
xor
in
repz
iret
icebp
out
loopne
pop
fistps
je
hlt
sbb
lahf
mov
imull
fistpl
jl
stos
jle
pop
add
xor
push
and
jmp
ret
push
rcr
mov
popf
cltd
stos
xor
cmc
push
inc
and
pop
fistpl
sahf
lock
xchg
mov
pop
adc
adc
call
test
paddq
cmp
mov
fimull
in
and
loope
scas
xchg
loope
icebp
add
xchg
sbb
sub
jge
clc
mov
leave
addl
loope
ds
data16
shll
js
movsl
pop
sarl
mov
aaa
push
push
dec
jecxz
cmp
adc
mov
std
pushf
aam
mov
cmp
cwtl
call
mov
shrb
jecxz
lds
mov
sub
adc
test
roll
cmpsl
lods
mov
push
repz
jne
fcoml
shlb
enter
cmpsb
mov
hlt
inc
dec
cmpsl
jne
cwtl
das
outsb
jne
lock
and
and
mov
cmc
data16
adc
jb
repz
xor
aad
pop
jle
mov
push
push
stos
sub
aaa
aas
jno
jl
pop
jg
mov
push
mov
pusha
and
loopne
xlat
int3
or
or
xor
pop
fs
lods
fiaddl
lods
jae
adc
testb
push
loope
push
aas
mov
jnp
movl
test
pop
icebp
sbb
mov
xor
imul
cltd
dec
xchg
cmp
jl
sbb
test
cwtl
pop
ds
int
inc
clc
mov
int
jns
in
std
sub
sbb
cmp
jg
lock
mov
fcomp
enter
pop
xor
sbb
call
adc
adc
mov
dec
add
cmpb
push
or
scas
jg
jnp
xchg
daa
rol
mov
ret
add
sub
mov
mov
or
and
mov
insb
cld
cmc
icebp
jne
cmp
ret
adc
es
imul
or
mov
loop
xchg
cld
imul
aam
jnp
dec
mov
ret
sbb
jmp
and
cmc
cmp
cmpl
or
outsb
test
adc
dec
push
out
bound
leave
imul
jnp
std
aas
xchg
push
fs
cmp
sub
push
loop
mov
and
lods
push
pop
in
adc
frstor
mov
jg
lea
cld
sbb
sub
es
pop
xor
adc
xor
dec
pop
daa
jbe
popa
jb
cmpsl
pop
into
add
or
cmp
test
ret
xchg
das
dec
cmp
cmc
ljmp
adc
es
cli
jnp
aaa
push
in
lret
rcr
or
sbb
fcomps
cmpsl
or
out
in
iret
pop
jno
add
xchg
pop
jle
cmp
ljmp
fcoml
insl
mov
pop
in
sbb
and
mov
ficomps
aam
pop
lods
and
adc
xchg
xchg
push
mov
cltd
add
mov
je
imul
mov
mov
inc
loopne
sbbl
cmp
cmpsl
dec
popf
mov
mov
lods
cltd
or
lahf
lahf
pop
cmpsb
cltd
mov
push
insb
pop
js
xor
or
jle
add
repz
in
or
in
jmp
and
xchg
scas
and
or
in
clc
or
inc
js
lcall
ret
sti
sbb
js
neg
inc
inc
pushf
insb
mov
rolb
imul
mov
cmp
jo
xchg
pop
mov
cmpsl
cli
cli
xchg
outsl
cmc
test
jbe
bound
sub
shrb
pop
movsl
push
insl
sbb
xor
fidivl
push
sub
cmp
rorl
clc
adc
dec
fnstcw
bsf
adc
xchg
in
xlat
or
in
mov
scas
mov
ljmp
inc
sub
cld
cmc
aaa
je
inc
push
adc
sub
aas
inc
arpl
mov
adc
inc
push
scas
mov
jo
add
lcall
adc
fidivrs
out
int
pop
repz
bound
pop
dec
or
push
jp
mov
rcll
popa
je
jl
fsubrs
add
pop
test
lock
fidivrs
xchg
icebp
inc
leave
dec
rorb
popa
jns
inc
in
dec
xchg
dec
or
mov
das
push
or
daa
add
adc
ret
stos
into
leave
or
cmpsl
xor
jecxz
xor
pop
int3
xchg
mov
movsb
pop
push
mov
mov
sarl
enter
sub
je
fs
inc
sbb
lods
xchg
push
xlat
sarl
and
push
pop
sub
xchg
mov
xlat
xchg
cltd
xchg
mov
mov
add
mov
sti
dec
pop
jge
mov
jecxz
xchg
mov
dec
mov
push
imulb
fdiv
add
dec
sbb
inc
inc
sahf
sbb
dec
shrb
or
cmp
mov
imul
sbb
fwait
pop
aas
xchg
lods
inc
mov
pop
out
or
rorb
xlat
nop
rcl
xchg
lret
test
mov
sub
fcompl
or
cmp
pop
xchg
and
lret
dec
scas
push
mov
addl
add
jno
xor
cmpsl
xchg
lcall
mov
mov
push
lds
mov
xor
pusha
jne
push
adc
jno
repz
insl
lods
jl
xchg
popa
lahf
sbb
sub
cwtl
lcall
js
xor
xor
push
scas
mov
dec
push
imul
mov
imul
hlt
cmp
pop
mov
enter
lods
and
dec
xor
xor
lds
mov
lahf
add
add
addl
xchg
mov
push
push
movsl
jo
outsl
ds
mov
iret
ret
clc
icebp
push
mov
lea
mov
scas
std
adc
inc
cltd
and
ret
cmp
inc
or
in
jp
xchg
hlt
push
iret
add
or
xchg
ret
sub
cmp
and
les
lret
push
pop
fnstenv
add
mov
sbb
pop
inc
jle
or
movsb
rcr
xlat
mov
sahf
sbb
dec
xchg
xchg
mov
push
sub
in
loop
add
pop
xchg
cltd
dec
ret
push
scas
cmpsb
jo
push
stc
adcl
xor
mov
xor
inc
mov
add
xor
push
in
inc
or
pop
push
js
cwtl
hlt
bound
stos
add
arpl
cmp
test
insl
push
vcvtpd2dq
mov
cmp
xor
out
mov
repz
mov
adc
xchg
pop
in
mov
pushf
aad
aas
imul
std
pusha
popa
movsl
loope
aas
mov
xchg
sub
test
loopne
inc
xor
loop
insb
cmp
xchg
and
fsub
inc
dec
or
add
iret
cmc
cmp
je
dec
ja
jle
into
xchg
inc
sub
jg
xor
imul
stos
js
mov
jg
test
inc
nop
sub
cs
or
jne
repz
lcall
adc
push
mov
call
push
dec
movsl
dec
cmc
lcall
cmc
test
icebp
xor
cmp
sub
jns
int3
out
loopne
nop
lahf
rclb
mov
stos
and
out
cmp
mov
dec
mov
mov
enter
rorb
cli
int3
jno
hlt
push
out
xor
push
xor
sub
lods
mov
add
push
cltd
pop
add
xchg
int
xchg
and
push
push
ljmp
jo
mov
aas
sbb
jge
add
mov
repnz
and
pop
xor
call
mov
dec
mov
data16
jne
mov
ds
fsubs
int
popa
xor
push
adc
mov
dec
sub
mov
xor
stos
aam
sbb
inc
mov
mov
push
sbb
leave
sbb
xor
bound
mov
ss
xor
push
sub
scas
filds
sbbl
sub
dec
pop
cmp
fcompl
arpl
cli
adc
mov
xchg
jg
jg
lahf
add
inc
xlat
or
cmpsb
xchg
xchg
hlt
addr16
cmpsl
xchg
push
notb
fsubrl
sbb
and
dec
cmp
lods
pop
shll
xorl
mov
adc
pusha
lahf
dec
arpl
enter
dec
sub
cmp
popf
pop
add
inc
ljmp
adc
mov
or
mov
xchg
add
mov
fnstenv
imul
xchg
pop
push
mov
xlat
push
mov
lock
and
dec
lret
dec
rclb
es
pop
inc
stos
and
mov
push
pop
pop
aam
cvtps2pi
adc
push
test
cwtl
or
out
sbb
dec
cli
test
bound
bound
fwait
pop
mov
inc
mov
jnp
inc
test
aas
decl
aaa
test
push
push
popf
decb
add
cwtl
push
sbbl
out
push
push
jmp
sub
xlat
fwait
sbb
fadd
aaa
push
out
push
xlat
in
lcall
fs
jae
fisubrs
mov
adc
into
jns
push
das
cmp
cmp
xchg
mov
ja
ss
outsb
push
push
mov
sub
and
fcompl
aaa
stos
sarb
jne
cmpl
dec
pop
cld
cld
mov
out
daa
dec
jnp
sbb
jo
mov
adc
icebp
inc
rcll
ja
movsl
pop
arpl
jbe
pusha
call
jp
sti
push
insl
mov
pop
cmpb
inc
xchg
add
push
and
outsl
je
dec
xchg
and
sbb
adc
xor
jmp
sub
scas
sar
pop
cmp
mov
push
push
xor
pusha
ds
xchg
lods
dec
cs
jnp
data16
scas
ljmp
add
add
dec
stc
sub
jmp
inc
aaa
jmp
push
int
loop
jb
ds
or
cmp
outsb
repnz
dec
sub
push
push
xchg
dec
dec
pop
iret
adc
inc
mov
inc
cmp
cmc
cld
stos
cmpsl
xlat
call
adc
push
sub
jg
popa
mov
adc
es
mov
mov
cmp
push
jae
pop
mov
stos
push
sub
add
ffreep
adc
add
and
fcoml
lds
mov
jns
movsl
cs
cld
xor
movsl
jae
inc
xchg
xor
adcl
lcall
out
inc
xchg
sub
push
out
jge
jge
inc
inc
or
outsl
inc
mov
mov
xchg
pushf
out
push
pushf
int
jno
loope
out
std
out
cld
sub
cmp
mov
or
loopne
popa
adc
sub
dec
pushf
pop
in
sbb
mov
dec
push
pop
pusha
mov
fldcw
mov
xlat
adc
repnz
sub
cmp
pop
sub
pop
fstpt
test
pop
xor
shlb
packuswb
pop
or
pop
jns
dec
stos
roll
and
or
mov
sbb
inc
out
imul
dec
sarl
leave
mov
fdivr
in
fs
popf
in
add
mov
inc
xchg
addr16
ret
rolb
mov
cli
lret
shll
fnsave
cmp
xchg
in
insb
scas
cmc
dec
xchg
sub
mov
inc
in
xchg
add
mov
mov
mov
shll
pusha
and
daa
mov
mov
sahf
pop
imul
jne
jno
push
cmpsl
cli
das
cmp
leave
in
xchg
mov
sub
adc
and
cli
cmp
xchg
and
push
mov
xchg
addr16
das
sahf
insb
lahf
mov
inc
xorb
mov
scas
jecxz
xchg
inc
nop
jbe
aas
cmp
sub
setnp
insb
jg
xor
mov
adc
mov
test
cmp
xorl
fldt
iret
jne
jle
fcmove
pop
outsl
mov
loopne
jl
sbb
clc
pand
jae
or
stc
leave
ficoml
in
inc
pop
add
test
clc
jbe
stos
push
cwtl
sbbl
cmpb
stos
mov
cmpl
jno
lock
inc
sar
and
cld
push
movsl
insl
or
mov
add
dec
or
cmp
rorb
insl
sub
cwtl
rorl
push
jmp
aas
clc
cmp
push
sbb
mov
pop
cmp
pop
icebp
dec
decb
lret
mov
clc
jne
mov
rcl
jmp
call
dec
pop
loope
and
jbe
lcall
xor
or
or
mov
test
stos
sbbb
shll
fdivp
aam
ret
movb
scas
sbb
fisttpl
mov
pop
and
pop
lret
out
pop
sahf
dec
mov
lock
das
divb
xchg
sub
cmpsl
js
dec
iret
mov
out
pusha
pop
gs
loopne
inc
das
fldl
aaa
pop
mov
add
jg
jb
mov
dec
ret
cltd
es
mov
jbe
sub
or
out
pop
xor
cmp
push
adc
mov
test
jns
and
scas
dec
push
cmpsb
and
sub
mov
popf
jne
add
xor
mov
dec
lods
mov
and
jle
xor
cmp
shlb
mov
out
mov
mov
leave
sub
mov
out
push
sbb
out
clc
mov
data16
inc
scas
jge
jp
fwait
les
xor
into
ss
loopne
mov
les
cmpsb
ficoms
or
fadds
mov
scas
roll
jle
aad
xor
out
movsl
dec
xlat
jp
fsub
push
ret
loop
dec
jmp
xchg
mov
inc
xor
dec
outsl
jnp
add
adc
repz
xor
pusha
sbb
mov
push
push
shl
retw
inc
dec
push
add
mov
push
sub
mov
out
das
add
dec
pusha
fmull
mov
dec
sbb
pop
es
add
and
mov
and
rcrl
sub
adc
sub
out
cltd
hlt
sbb
dec
push
cmpb
jg
mov
pop
and
xchg
xchg
nop
es
cmp
cmp
insl
in
popfw
mov
push
decb
enter
call
jmp
stos
adcb
jge
xchg
xor
mov
stos
adc
xchg
ffree
out
ss
lock
mov
test
movsl
lds
je
fildl
pop
call
jae
push
mov
testl
cmp
jge
insb
jg
push
push
movsb
mov
hlt
push
out
and
ret
aas
xchg
inc
incl
sub
pop
arpl
or
arpl
xorb
mov
and
xorb
and
pop
pop
int
je
popf
imul
jge
sbb
jecxz
dec
mov
xorl
cmp
dec
test
jno
fsubrl
movsl
push
imul
and
clc
sub
add
fisubrs
xchg
repz
pop
cld
fbstp
or
inc
loop
push
push
mov
sub
les
inc
xchg
cli
movsb
dec
xlat
dec
xchg
mov
sub
push
arpl
aaa
jecxz
push
xchg
ja
pushf
fs
pop
pop
roll
lcall
mov
dec
out
mov
mov
faddp
push
sbb
and
dec
rcrl
cmp
sbbb
clc
jecxz
in
adc
sub
pop
add
out
sub
popa
sbb
fisubl
rcrl
insl
pop
mov
and
out
in
outsb
mov
xchg
sbb
dec
adc
mov
and
mov
dec
jg
lods
mov
test
shlb
mov
lods
mov
inc
aaa
mov
mov
addl
lods
repz
in
mov
jmp
sub
cld
adc
fnsave
push
and
pop
pcmpgtb
int
mov
out
mov
or
outsl
rcll
sbb
dec
imul
mov
xchg
lcall
push
add
xchg
jl
push
xor
dec
xor
xorl
addr16
repz
popf
inc
test
nop
mov
xlat
xor
xlat
sbb
pusha
push
fcomi
sbb
mov
movsb
and
sbb
popa
es
aad
pop
pop
mov
ja
jno
xchg
test
jns
es
mov
enter
popa
in
in
les
mov
andb
call
shl
jge
add
stos
pop
sbb
adc
out
insb
jge
sti
andl
add
push
adc
push
push
mov
mov
inc
xor
add
cltd
out
and
add
sbb
sbb
cmp
push
loop
es
pop
add
and
out
fcomp
lock
lods
pop
enter
mov
sub
test
rorb
and
and
out
iret
lret
cmp
out
subb
mov
fs
sbb
or
loope
xor
in
popa
pop
or
cmpsb
ret
dec
sub
sub
sub
outsb
dec
fwait
pop
lock
cmp
pusha
and
adc
dec
pushf
pop
or
and
mov
inc
aaa
cmp
cmp
and
jns
xchg
in
add
loope
cli
mov
pop
fldenv
xor
inc
clc
into
orb
xchg
xor
data16
in
inc
lods
xor
or
jnp
cmp
adc
xor
rolb
repnz
pop
fdivs
mov
and
ret
pushf
idivb
stc
pop
sti
testl
cmpsl
jl
inc
add
fisubs
mov
imul
test
in
fcomip
clc
pop
jnp
stos
push
aaa
cmpb
dec
les
xor
or
je
in
or
inc
xor
sub
mov
fistpll
adc
mov
cltd
test
in
inc
xor
cmpl
int
mov
xchg
push
insl
ja
mov
pop
inc
push
aaa
push
cmp
int3
inc
fwait
push
andb
sahf
mov
leave
cmp
fimuls
stos
scas
lods
fsubr
ficomps
adc
jmp
push
pop
aas
jg
xchg
adc
ds
mov
push
mov
jl
pop
cli
push
std
pop
mov
push
mov
outsl
xor
xor
mov
mov
adc
ljmp
push
mov
mov
mov
insb
inc
sub
rol
ja
cmpsb
insl
mov
mov
mov
dec
rcll
jae
xchg
pop
mov
and
push
jne
or
outsl
or
cmpl
and
xchg
push
mov
mov
ret
hlt
cmp
fs
add
jbe
mov
nop
sbb
shrb
jl
int3
in
push
cltd
mov
pop
dec
fidivrs
gs
dec
adc
xchg
xchg
dec
push
dec
cmp
sub
adc
push
mov
mov
sub
out
ret
stos
jge
or
dec
push
lahf
inc
push
ficomps
into
push
nop
push
mov
div
je
push
fcomps
or
cwtl
stos
imul
push
imul
add
xchg
testl
jno,pn
shl
sub
pop
pop
mov
xchg
fs
ret
push
sbb
and
cld
add
fldcw
and
repnz
xchg
dec
mov
mov
jne
in
nop
pusha
mov
test
mov
adc
incl
push
jle
cs
pop
movsb
pop
jae
xchg
mov
enter
jae
push
pop
imul
leave
sbb
mov
or
sbb
ret
push
mov
fstl
packssdw
mov
std
fnstcw
bound
add
adc
testl
pop
xor
nop
jne
jle
mov
fs
add
enter
jnp
lods
bound
pop
jns
push
push
fsubl
push
bound
mov
fstp
jo
dec
dec
movsb
call
jo
and
sbb
out
pop
or
minps
and
and
pusha
test
add
out
outsb
xor
pop
sbb
aaa
aaa
push
or
jmp
pop
shr
test
xchg
dec
lss
jp,pt
push
xor
je
sbb
cmp
inc
lods
inc
and
inc
pop
jp
ss
mov
call
xchg
int
mov
stc
push
lahf
or
insl
xlat
rcrl
jmp
jnp
add
adc
pusha
cmp
pop
insb
in
xor
xchg
jle
mov
shrl
leave
or
inc
jecxz
popa
mov
rcr
ret
push
icebp
sub
shrd
fsts
add
mov
jno
lods
add
inc
dec
stos
clc
push
mov
pop
movsb
xor
mov
mov
fstps
shlb
mov
jmp
and
xchg
out
jmp
fcmovne
data16
mov
aad
or
dec
lahf
shrb
mov
cmp
lea
das
mov
pop
sbb
je
jmp
pop
in
jge,pn
shll
gs
out
mov
je
enter
ljmp
xchg
int3
push
pop
ja
std
movsl
jecxz
popa
and
aad
aaa
or
xor
adc
fsubr
push
outsl
stos
push
scas
add
sbbb
jnp
into
sti
add
pop
mov
mov
arpl
into
inc
push
in
pushf
gs
mov
xchg
sbb
scas
adc
stos
jp
add
mov
js
shrl
push
in
rorb
bound
add
into
jne
cmp
mov
dec
sub
jp
jo
lds
jp
or
sub
xchg
fistpl
in
mov
das
lods
test
pusha
jg
cltd
adc
push
pushf
rcll
jg
push
insl
repz
push
mov
shll
jnp
es
or
cmp
pop
sub
jno
iret
pop
fwait
js
and
orl
mov
jno
or
jmp
sub
sar
mov
sbb
outsl
mov
and
and
rorb
jnp
jmp
imul
adc
notl
push
lret
inc
les
pop
incb
outsl
shr
iret
mov
sti
mov
call
aad
or
or
inc
mov
in
pop
push
pop
out
xor
cmp
mov
iret
inc
ljmp
xorl
int3
and
pop
or
xchg
ljmp
shlb
jb
xchg
push
jb
icebp
and
dec
sbb
fs
test
test
sub
push
cmp
pop
jae
mov
jb
jmp
mov
fbld
jae
fs
push
lea
scas
sub
xor
jecxz
shrb
mov
outsl
fisubrs
cwtl
fisubrs
or
mov
dec
aam
aam
movsb
sub
das
mov
or
das
add
cmp
insb
jo
xchg
outsl
or
in
icebp
xor
pop
in
and
xor
mov
xorl
sbb
out
inc
cwtl
or
test
out
aad
push
stos
popa
test
push
jp
sbbb
lock
dec
or
movsl
data16
cli
dec
sbb
ds
push
mov
testl
jle
pop
scas
rcrl
jns
movsb
lret
jne
or
repz
inc
xlat
pop
sbb
pop
sahf
mov
add
into
pop
add
notb
push
cmp
movb
cmpsl
test
mov
in
jge
lods
xor
inc
add
and
lcall
dec
movb
outsl
sbb
lret
shrb
mov
cmp
loope
clc
sti
mov
notl
inc
or
pop
jno
sub
icebp
nop
stc
in
shlb
out
stos
add
cmp
cmp
lods
loope
fnstenv
mov
insl
or
cmp
jmp
push
mov
xor
add
rcrl
popl
test
jl
fcmovne
outsb
lret
mov
out
or
pop
and
bound
fstpt
sti
ds
out
add
jecxz
imul
xchg
mov
ja
xor
daa
xchg
xchg
xchg
insb
inc
pusha
mov
xorb
push
mov
repnz
mov
subb
or
mov
jle
adc
stc
dec
cs
das
scas
mov
sbb
add
leave
idivb
jmp
jne
sbb
mov
and
push
mov
push
cmp
and
push
sarb
adc
cltd
push
jne
scas
or
xchg
xor
aad
and
stos
xchg
cmc
in
dec
ficompl
sub
jo
xor
outsb
xor
add
addr16
cmp
push
dec
jbe
bound
mov
sti
rorb
fucomp
mov
xlat
ljmp
scas
mov
xor
enter
ror
sub
iret
xlat
push
push
or
xor
hlt
inc
fisttps
fldcw
mov
orb
addr16
icebp
inc
or
mov
add
add
aaa
add
fdivrl
lock
sub
int3
js
shll
cmp
stc
xor
lret
ss
cmp
daa
enter
jl
mov
jo
pop
jns
test
iret
xor
mov
jb
cmpb
jns
dec
pop
mov
mov
pop
pop
mov
mov
jmp
cmp
notb
sbb
ljmp
dec
fwait
mov
cmpsl
xlat
shll
es
sbb
pop
jmp
test
arpl
bound
mov
ret
adc
les
fmuls
loope
movsl
and
pop
or
addr16
shll
stos
loop
scas
jae
jbe
pop
xchg
inc
lahf
cmp
mov
icebp
push
scas
mov
add
or
les
ds
mov
lret
jb
or
sub
or
pusha
je
jle
cmpsb
jbe
jle
adc
xchg
sub
out
add
cs
inc
aas
inc
inc
and
cmp
loop
pop
mov
push
in
sbb
or
sub
mov
pop
adc
xlat
inc
lret
lret
cmp
mov
insl
push
popf
jecxz
mov
inc
jbe
push
je
adc
pusha
out
and
dec
xchg
in
mov
stos
and
pushl
fs
repz
and
fldcw
lds
dec
fdiv
fdivr
les
out
sarb
inc
ret
xchg
dec
pusha
add
dec
ljmp
fsubs
xchg
pop
add
pop
insb
ret
and
sub
pop
xor
jecxz
fs
mov
mov
xchg
and
addl
pop
mov
ror
lcall
bound
ret
mov
in
and
pop
es
out
ds
mov
test
adc
pop
ja
clc
and
cmc
into
xchg
fwait
gs
shrb
mov
xchg
push
jl
ficoml
movsb
das
cmpsb
dec
mov
ss
and
daa
mov
gs
dec
es
jne
mov
sti
xor
add
mov
sub
fildl
inc
lcall
xor
mov
or
fdivrl
push
push
jmp
and
xor
and
push
push
frstor
outsl
hlt
dec
imul
xor
les
hlt
out
dec
lea
or
sub
fisubrs
sub
add
dec
cwtl
movsb
daa
xlat
ljmp
mov
fwait
scas
clc
inc
or
pop
aam
xchg
sub
mov
jmp
or
cmp
lea
mov
roll
mov
scas
gs
lret
inc
popl
inc
or
frstpm(287
add
aam
sbb
vmread
xorb
inc
pushf
xchg
sbb
mov
in
test
iret
inc
shll
dec
gs
int3
xchg
cli
push
inc
sbb
push
xor
push
inc
mov
add
cmp
sahf
add
inc
sti
sbb
cld
lea
fidivs
xor
clc
iret
jb
lret
push
cwtl
xchg
int3
insb
fiaddl
add
mov
aad
mov
add
adc
movl
or
add
rcr
out
sbb
int
lds
lods
mov
out
lret
out
dec
test
xor
cmp
jb
fs
mov
imul
push
arpl
fmulp
je
bound
and
dec
in
cmp
mov
jmp
sub
and
jmp
dec
outsl
mov
nop
inc
jmp
test
fnstcw
xchg
adc
add
adc
xlat
shr
and
cwtl
jae
das
je
mov
dec
add
xchg
int3
cs
inc
inc
add
jno
lret
sahf
ja
pop
inc
imul
lahf
dec
inc
and
jnp
and
leave
xchg
dec
in
dec
sbb
mov
sbb
adc
popa
stc
sub
push
cmc
out
xchg
bound
pop
outsb
add
in
das
aam
jl
xchg
jl
ret
enter
lret
das
or
mov
adc
pushf
add
pop
sbb
push
xor
test
xor
push
jae
or
out
iret
mov
pop
loope
add
push
aas
inc
stos
aas
std
push
arpl
insb
jns
stc
sbb
in
hlt
add
jg
lods
sub
imul
cli
out
dec
std
clc
jmp
test
shrl
fidivl
jl
jge
movb
and
in
movsb
ret
cmp
push
adc
mov
pusha
iret
mov
jmp
mov
test
into
loopne
iret
mov
mov
adc
adc
addr16
cmc
inc
test
shufps
pushl
push
pop
mov
or
les
mov
insb
bound
and
out
test
gs
jae
aam
test
jmp
loope
orb
fisubrs
jne
mov
push
ret
fimull
mov
push
lcall
xchg
push
daa
cmpsl
or
stos
xor
xchg
loope
in
jge
insb
idivb
mov
mov
sub
dec
aaa
jg
insl
mov
cmp
test
sub
aaa
loop
push
mov
je
cmp
bnd
dec
push
fs
repnz
jne
mov
inc
mov
in
xor
push
lods
adc
dec
cmp
scas
xlat
inc
pop
dec
inc
loope
cltd
and
stos
inc
jl
cmp
stc
shll
cmp
outsl
dec
in
es
ja
push
imul
jge
sbb
out
fs
push
addb
js
mov
inc
std
fildl
cmpsl
ss
imul
inc
rorb
or
aad
cmp
fwait
jbe
popa
loopne
push
lahf
cmpsb
mov
aas
sbb
inc
es
test
fidivl
movsl
fwait
movsb
lret
xchg
fisttpll
jmp
lock
dec
push
add
addl
fcoms
mov
clc
jmp
es
mul
popf
movsl
mov
and
faddl
fistl
out
cli
adc
jbe,pt
cmp
aaa
inc
inc
loop
sahf
inc
mov
lods
mov
dec
cwtl
out
add
xlat
pop
pop
leave
adc
jp
imul
je
inc
mov
fistl
cmp
push
inc
jecxz
fucomi
add
sbb
push
loopne
lahf
enter
gs
mov
mov
sbb
or
jne
jle
jge
sar
orl
mov
addr16
jo
clc
push
and
add
mov
lods
aam
or
and
out
jmp
dec
xor
pusha
inc
xor
unpcklps
movsb
fidivrs
gs
pusha
jns
lcall
or
sub
dec
or
js
pop
cltd
inc
in
dec
jl
cmp
jmp
mov
add
push
push
mov
clc
pusha
arpl
pop
dec
jnp
mov
xor
mov
andl
sbb
sbbl
inc
xorl
mov
jo
in
js
nop
pop
daa
test
sbb
subb
cmp
inc
inc
push
sahf
faddp
cli
add
loopne
testl
dec
dec
test
pop
fists
sarw
aaa
xor
ret
pop
lcall
mov
sub
push
pop
fwait
mov
mov
ljmp
pop
mov
imul
dec
pop
lods
push
out
mov
adc
fisttps
fimuls
mov
sub
aad
sbbl
jbe
sbb
cmp
and
int3
scas
xor
push
shrl
mov
dec
push
mov
js
fs
cmpsl
rorl
loopne
loope
dec
aad
js
or
xor
es
adc
cli
mov
ret
jnp
xor
jb
ja
insl
xor
adc
mov
inc
xor
popa
shll
mov
shlb
xorl
dec
std
bound
xlat
xor
iret
dec
xor
jl
push
in
lds
mov
mov
inc
mov
roll
cmpsl
fldcw
or
jmp
adc
dec
push
cmp
xorl
inc
lahf
outsb
int3
lea
dec
add
cld
aad
pop
add
ljmp
lcall
nop
or
xchg
lahf
in
and
mov
add
rolb
add
outsl
push
ds
arpl
and
pop
loopne
adc
add
cmp
mov
dec
imul
sahf
loop
adc
jp
sbb
pop
repz
clc
sub
shll
aad
scas
mov
lods
popa
adc
mov
call
dec
jecxz
sub
or
jns
std
sbb
aam
push
jbe
sbb
and
sbb
loop
test
xor
ja
loope
roll
data16
mov
adc
pop
fisubrl
or
mov
or
aad
mov
int3
ret
sbb
scas
lret
jns
loop
cmp
testb
scas
jns
push
push
inc
ret
sbb
dec
jns
inc
mov
mov
or
out
jge
insl
test
push
aaa
pop
repnz
mov
in
enter
xchg
mov
xor
lahf
push
cmp
cmp
addr16
cli
fwait
aam
loope
arpl
subl
mov
movsl
lret
fidivrs
out
cltd
pop
inc
xor
adc
pop
clc
sub
push
rcr
decb
xchg
cld
test
push
xor
push
jmp
push
or
inc
xchg
mov
ljmp
in
jp
jae
out
lret
int
cld
std
add
jns
pop
xor
insb
fcmovnbe
dec
rcll
inc
adcl
mov
push
jle
pop
scas
dec
popf
pop
shrl
mov
jle
xor
add
and
mov
in
sti
inc
dec
pop
sub
mov
scas
dec
adc
mov
add
mov
insl
cltd
out
bound
bound
cs
mov
addr16
pop
sahf
inc
pop
mov
xlat
jge
mov
iret
cli
pop
sbb
rcll
xor
pop
pop
push
in
push
lcall
iret
jns
mov
push
xchg
mov
add
xchg
jae
adc
outsb
xchg
loope
jecxz
repz
pop
rcrl
outsb
inc
mov
sub
sub
jge
xchg
mov
dec
xchg
inc
push
inc
push
outsl
adc
test
sarb
insb
aad
enter
or
fs
hlt
jb
int3
sbb
subl
dec
je
push
in
add
jne
push
fcoml
mov
sub
cltd
cmc
push
pushf
dec
les
adcb
movsb
pop
mov
dec
lds
adcl
xor
jge
rol
mov
lea
fiaddl
cmc
and
ret
jp
es
mov
ds
jbe
mov
cmpsl
inc
movsl
stos
int
xor
repnz
xchg
lds
mov
pop
popl
add
mulb
mov
in
into
arpl
fcompl
mov
imul
aad
bound
adc
or
xchg
pop
mov
push
mov
mov
xor
cmp
int
jb
sarb
out
in
mov
in
inc
in
out
sbb
stos
jne
cmp
int
aaa
mov
and
movsb
sar
push
inc
ficomps
inc
ds
or
out
ja
xlat
and
in
bound
adc
ljmp
cli
push
imul
adc
iret
or
test
mov
ds
dec
sbb
out
cmp
out
rorb
cli
out
subb
xor
push
cmp
mov
mov
pop
out
or
xor
xor
fcmovnb
loope
jge
les
cmp
or
out
hlt
xchg
call
and
fs
jle,pn
or
dec
sbb
cmp
inc
pop
dec
adc
insb
jl
mov
mov
sbb
sbbl
mov
dec
cmp
xchg
cmc
hlt
testl
xchg
sub
inc
leave
xor
and
jns
push
cmp
lock
and
inc
sub
xchg
mov
push
and
cli
push
stc
push
fbld
xchg
or
xchg
jae
fucomi
dec
scas
lahf
adc
out
push
ds
insb
popa
mov
mov
lock
leave
dec
or
fwait
xchg
sahf
rorl
mov
outsl
jo
cmp
lahf
push
pop
loop
mov
jmp
subb
test
stc
les
insb
push
pop
addb
mov
or
jge
jle
xchg
pop
lcall
sahf
xor
pop
jp
add
fsubl
and
inc
add
jp
icebp
cld
loopne
push
sbb
xchg
mov
dec
mov
fbld
dec
fldt
mov
test
in
and
xchg
mov
xchg
xor
les
push
out
inc
paddsw
jle
fildll
iret
sbb
adc
in
pushf
cli
popf
ret
test
mov
xorb
testb
test
stos
or
out
ljmp
cmc
sti
loop
sbb
mov
xlat
les
and
mov
ds
adc
add
mov
pop
jno
shlb
arpl
stc
inc
mov
pop
int
aam
int
mov
mov
fisubrs
mov
dec
leave
rcrl
cmp
fwait
mulb
xchg
push
and
sbb
call
call
pushf
aam
lods
add
mov
int
repnz
sub
iret
jle
or
fwait
dec
fisubrl
ficoms
stos
dec
leave
movsl
adc
sti
fisubl
int3
adc
js
xchg
jno
xor
into
faddl
adc
and
mov
arpl
jo
or
mov
in
nop
mov
inc
fistpl
jg
mov
adc
pop
push
inc
fcmovbe
add
imul
je
stc
aaa
ds
add
push
xor
rcll
icebp
inc
sbb
clc
ja
mov
dec
add
cmpsb
bound
adc
enter
inc
and
mov
ljmp
xchg
stos
push
sti
xchg
inc
loop
push
aas
das
sbb
sti
sub
loop
test
pop
les
or
and
lds
leave
pop
dec
inc
jo
fidivs
arpl
cmp
mov
pop
movsl
adc
pop
xchg
adc
hlt
dec
fisubrs
std
int
bound
jg
xchg
xchg
mov
or
dec
dec
mov
push
mov
mov
or
stos
add
sti
fistpl
mov
icebp
stos
leave
add
xor
bound
xchg
cmpsb
mov
nop
pop
push
push
sbb
jnp
dec
xor
rorb
xlat
das
ret
cmpsl
sub
push
outsb
mov
std
arpl
andl
aad
gs
jns
icebp
sbb
popa
cmp
mov
cmp
les
mov
sbb
dec
mov
or
in
push
aaa
dec
xchg
cli
leave
mov
es
adc
pushf
push
xorl
pop
daa
fildll
call
out
cmpl
mov
dec
dec
adc
xchg
fcmovu
or
jp
add
adc
fs
inc
test
cmp
pusha
fmul
repnz
push
fistps
cmpsb
fadd
stc
scas
add
mov
mov
push
mov
sbb
add
push
add
jmp
mov
mov
stos
and
fmuls
xchg
fildll
mov
subb
insb
pop
movsb
in
cmp
sub
dec
scas
stos
cmpl
inc
xor
xchg
xchg
outsb
xchg
imulb
leave
fcomip
arpl
out
lret
jns
lock
mov
out
push
negl
xor
xor
pop
je
dec
push
es
std
mov
js
jle
cmp
lods
push
jecxz
fiaddl
fwait
sub
push
xchg
outsl
mov
pop
cmpsb
pop
jge
add
insl
mov
sbb
int3
jecxz
hlt
inc
loopne
jns
clc
adc
push
jns
dec
aam
addr16
jl
inc
pop
dec
test
clc
cwtl
push
lahf
jne
aas
jbe
mov
push
lahf
mov
cmpsl
jb
xor
cmp
and
pop
xchg
outsl
mov
sti
mov
je
out
iret
mov
stos
daa
inc
leave
icebp
fcomi
xor
gs
sub
loop
lret
loop
repnz
das
mov
xchg
push
bound
jle
sahf
jns
push
cld
out
adc
pop
xor
stc
test
add
les
iret
or
sub
les
outsl
int
test
mov
daa
mov
jbe
push
mov
and
xchg
mov
dec
pop
cmp
dec
andb
inc
mov
xchg
jg
add
mov
outsb
pusha
sahf
in
mov
sub
mov
mov
lea
jge
mov
into
hlt
ret
cmp
scas
mov
cld
lea
and
and
das
push
jnp
mov
sbb
out
inc
pop
jmp
test
je
scas
testb
ljmp
jnp
xor
mov
xor
mov
lock
sbb
add
cmp
or
aam
dec
repz
imul
mov
daa
dec
sbb
adc
jg
stc
xchg
test
xchg
jbe
sti
xchg
je
shl
js
push
jge
inc
loop
xor
cmpsl
mov
inc
sahf
mov
insl
sbbl
int
or
jmp
nop
mov
adc
mov
jge
push
inc
pusha
or
sub
jmp
pop
lret
outsb
mov
or
and
gs
cltd
cmpsb
scas
add
add
mov
test
out
cld
push
cld
mov
cmpsb
lret
leave
fcoms
jbe
out
out
shll
out
outsl
mov
add
and
or
imul
cmp
or
lods
sbb
ss
bound
mov
mov
xchg
pop
and
dec
in
icebp
aas
inc
push
popa
ror
xchg
xchg
fidivs
push
mov
loop
movsl
fists
push
sbb
inc
leave
in
add
or
mov
das
shrl
adc
ja
das
and
aad
imul
arpl
mov
xor
adc
into
mov
nop
mov
jno
cmp
outsb
loop
loop
and
rorl
dec
xor
mov
mov
pop
loope
out
push
cmp
lock
pop
xor
mov
or
rorl
pop
adc
mov
scas
cmp
cwtd
cmp
fwait
xor
cli
jp
xchg
xchg
movsl
movsb
je
xor
fildl
mov
adc
ds
pop
mov
icebp
add
icebp
jmp
hlt
mov
pop
insl
mov
sbb
pop
pop
inc
push
and
adc
fldl
addr16
push
ds
jb
popf
xchg
xchg
sbb
lods
mov
decb
stos
and
dec
adc
xor
dec
fmull
jb
in
xor
gs
lds
and
xchg
xor
and
inc
cmp
frstor
xchg
dec
stc
mov
mov
sub
fdivrs
je
sub
adc
scas
ja
pop
fistps
iret
or
aad
dec
movsb
xlat
cmp
into
push
dec
movsl
into
shll
or
lea
push
out
pop
jne
jmp
outsb
sahf
movsb
add
test
pop
push
rclb
pop
imul
lds
fdecstp
dec
popf
ds
xor
push
adc
push
hlt
mov
xor
sub
adc
cmp
lea
fnsave
xor
sub
cmp
xchg
add
adc
cmp
test
jnp
sbb
iret
and
jae
jns
scas
xor
jnp
dec
jb
in
jae
outsl
aas
pop
or
daa
jmp
ret
jbe
aaa
ficompl
sub
outsb
adc
loopne
mov
lock
and
pop
movsl
andb
clc
sub
vcvtpd2psy
popa
cmp
mov
inc
push
and
cltd
push
add
pop
adc
ficompl
sbb
adc
daa
xchg
decl
pop
roll
push
pop
int
or
cmp
into
stos
pop
repz
stos
adc
dec
mov
rcr
and
pop
aad
jl
sti
inc
loope
push
jbe
adc
fsubl
lods
cmp
push
push
mov
cmpsl
arpl
lock
add
cmp
or
ljmp
sbb
sbb
xor
adc
test
add
mov
cmp
jp
inc
jbe
sbb
jae
fstpt
setns
inc
xor
adc
or
fildll
cmp
iret
scas
jmp
lds
popfw
add
cmp
in
test
xchg
movsl
add
or
lods
or
mov
pop
jae
jbe
loopne
cs
xor
data16
movsl
cmpsl
incl
inc
jo
sub
push
lea
jl
std
lret
sbb
jecxz
xor
xor
pop
cltd
cmp
ljmp
dec
cmpsl
sub
mov
aas
push
lahf
sub
cltd
push
and
mov
shll
fisubl
sub
lahf
popl
pop
inc
pop
lods
mov
shl
leave
fucomip
mov
int
cmp
cli
adc
xchg
or
popf
inc
mov
roll
adc
gs
ret
or
lret
jmp
sub
rcrl
mov
xchg
push
aad
bound
test
lds
mov
and
lahf
shlb
or
jg
sbb
out
xchg
insb
ja
jae
out
jo
sbb
cwtl
pop
or
aad
popa
dec
mov
or
das
mov
adc
fisttpll
sub
jp
fldl
sub
mov
call
mov
addr16
aas
movl
push
daa
rolb
dec
iret
bound
dec
jno
cmpsl
and
mov
leave
xor
xor
mov
jmp
xchg
xor
xchg
sub
jo
icebp
les
fidivrs
dec
mov
out
sub
ret
loopne
or
push
xor
xchg
leave
inc
cmpsl
sbb
xchg
sbb
or
pop
fnstcw
mov
in
mov
outsl
xchg
daa
lret
jo
pop
in
jo
push
in
push
pusha
cmp
sarb
cs
fbld
imul
lahf
cwtl
add
sub
inc
movsl
test
cvtdq2ps
push
push
add
aaa
call
inc
fimuls
xchg
stos
outsl
xchg
into
cmc
adc
mov
dec
cli
mov
sub
jmp
dec
out
int3
mov
add
add
sahf
adc
mov
jne
adc
scas
push
nop
dec
mov
mov
jg
sbb
adc
cmp
or
cmp
or
pop
and
pop
adc
mov
subb
mov
add
sbb
lret
insl
imul
push
xor
stos
lds
mov
dec
in
mov
jbe
mov
mov
xchg
push
and
mov
rorb
xchg
and
clc
clc
aaa
mov
je
xchg
clc
movsl
pushl
adc
add
ss
out
loope
cmc
mov
int
imul
lds
cwtl
sub
sub
jnp
jmp
jecxz
sarb
jg
push
or
inc
loope
mov
call
cld
cltd
sbb
dec
pusha
imul
cmp
scas
aaa
sbb
mov
xlat
ret
push
clc
std
adc
jecxz
mov
inc
adc
mov
push
xchg
cmpsb
xchg
mov
cmp
cmp
cmp
mov
lret
outsb
mov
pop
mov
and
inc
mov
add
jmp
fdiv
aas
cmpsl
jp
pop
mov
testl
iret
clc
hlt
cmc
sti
daa
mov
aad
and
inc
inc
mov
idiv
jg
lret
cmp
cmp
jp
jne
test
sbb
xlat
adc
negl
mov
data16
sbb
cmc
es
mov
dec
push
mov
unpckhps
xchg
ror
fcoml
push
cmp
sub
mov
inc
push
sub
or
xchg
jo
fstpt
or
rcrl
stos
add
mov
push
mov
xchg
movsl
jno
pusha
arpl
cmc
sahf
int
xchg
add
mov
ficomps
aaa
dec
in
mov
pushf
ss
fsts
clc
mov
xor
cltd
mov
das
pop
sbb
das
mov
and
pop
push
sub
inc
daa
pop
cmp
aad
lcall
das
pop
out
mov
xor
sub
push
ds
push
je
sbb
sbbb
sub
pop
lods
fmuls
repnz
lcall
and
dec
push
test
rorl
lods
push
dec
scas
and
mov
pop
sbb
xchg
js
jecxz
adc
inc
pusha
loope
mov
test
addl
jbe
xor
xchg
jmp
mov
das
push
ret
lods
sbb
lods
dec
push
out
hlt
insl
popa
scas
dec
andl
iret
mov
insb
sbb
inc
mov
jbe
addr16
mov
and
jle
mov
aam
imul
ja
repz
ja
mov
xor
std
divl
out
negl
shl
mov
mov
ds
inc
in
ret
lds
mul
cmpsl
ds
scas
ljmp
out
dec
push
in
out
mov
fcom
movsb
push
test
hlt
sub
pop
cmp
cwtl
sub
dec
xchg
clc
jecxz
sahf
js
adc
popa
mov
fdiv
fsub
stos
addr16
mov
mov
shr
ss
sar
jle
loopne
clc
out
addr16
cmpb
nop
rorl
fs
rolb
outsb
in
pop
add
lds
mov
push
mov
mov
imul
and
mov
xchg
arpl
jp
xchg
dec
mov
imul
xchg
sub
cmp
stc
cmc
jb
loop
push
inc
hlt
ret
rep
cmp
inc
jns
mov
dec
adc
sub
enter
xchg
scas
insl
lret
cmc
shlb
in
jle
test
sub
scas
hlt
mov
xchg
jle
and
movsb
test
push
je
jmp
dec
or
jbe
fdivs
jp
mov
fldcw
movsb
ljmp
jl
sbb
mov
stos
push
mov
or
dec
lock
adc
and
dec
jno
sarl
getsec
xor
push
icebp
xchg
inc
dec
jl
xchg
add
mov
fstpl
test
or
cmp
arpl
lcall
das
sub
pop
cmp
sub
stos
dec
xor
jo
adc
jo
jl
stos
sub
fcomp
out
xchg
adc
xchg
xchg
push
fcoms
jbe
ss
cwtl
lret
ss
daa
lods
add
leave
sbbl
mov
fmul
out
clc
in
pushf
xor
or
je
pop
mov
lods
xor
mov
adc
int3
das
lahf
jo
pop
push
lret
sbb
mov
aas
in
nop
jge
sbb
pop
sbb
movsl
add
inc
adc
jno
jo
dec
mov
pusha
xchg
push
fldenv
ljmp
out
pand
mov
shl
in
sahf
mov
jge
in
inc
xchg
jns,pn
sti
lret
mov
xor
mov
pop
xchg
add
sbb
inc
fmul
movl
mov
mov
adc
mov
cli
inc
mov
mov
xchg
and
mov
jae
ret
subl
pusha
xor
shlb
mov
sahf
and
cmc
fnstenv
fists
and
dec
pop
adc
pop
mov
hlt
mov
pushf
in
push
xchg
sbb
arpl
addr16
fdivrl
xchg
pusha
adc
adc
pusha
mov
and
imul
mov
jge
dec
sub
mov
add
adcl
jp
pop
orb
lods
push
xchg
hlt
mov
sub
cltd
xor
notl
xchg
adc
movsb
into
ljmp
add
xchg
inc
std
sub
inc
inc
mov
adc
dec
fs
aad
dec
pop
push
jmp
insb
mov
sbb
imul
lret
test
sti
insl
fnstsw
mov
ret
or
push
pop
mov
adc
mov
rorb
mov
cmp
and
sbb
mov
push
dec
mov
ljmp
or
add
loopne
mov
mov
pop
sahf
cwtl
xor
arpl
sub
divl
jne
inc
add
cmp
jb
xor
scas
mov
test
fidivl
mov
mov
jbe
dec
imul
ja
repnz
fidivl
cmpsb
xchg
sbb
lcall
jl
in
hlt
lods
xchg
cmp
pop
test
xor
cmp
inc
xchg
stc
sub
or
lock
bound
inc
repnz
push
in
xchg
outsl
gs
insl
divl
mov
cmp
add
xchg
adc
xchg
inc
fs
lock
enter
xchg
mov
and
divb
jmp
das
add
mov
inc
ret
and
repnz
adcl
repnz
mov
fwait
cwtl
lret
or
rcrb
mov
push
xchg
mov
stos
pop
or
cs
mov
loop
inc
enter
pop
pushf
sub
es
ss
int
adc
pop
cmpsl
sbb
movsl
cmp
xor
inc
jbe
xchg
xchg
mov
cmpsb
popf
push
out
xchg
ret
arpl
lods
mov
dec
jne
push
and
cld
inc
test
shll
and
movsl
aam
aas
add
xchg
shl
fs
movsl
andl
insl
add
mov
inc
dec
ret
lret
add
out
xchg
fiadds
mov
cmp
xchg
out
dec
ror
mov
cwtl
pop
xchg
xchg
mov
outsl
mov
and
jl
mov
lret
loop
push
jnp
fwait
jae
cli
jmp
sbb
jo
cmp
inc
add
cwtl
or
sbb
jp
popf
out
int3
popf
ja
out
in
and
and
sarb
out
push
or
js
jmp
push
loope
into
leave
xchg
insl
mov
out
ss
xor
pop
mov
add
add
add
mov
andl
int
mov
fwait
push
xorb
lret
cmp
lcall
lock
fwait
inc
mov
pop
and
xor
mov
sub
xor
out
sbb
hlt
hlt
inc
mov
sbb
test
cmp
jp
es
jno
dec
in
xlat
bound
and
mov
mov
inc
in
pop
fildl
fdiv
fisttps
and
out
mov
das
ss
je
shlb
cmpsb
xchg
jp
sbb
mov
inc
out
inc
push
and
ljmp
cld
fsubp
mov
mov
mov
jne
mov
data16
pop
dec
xchg
xchg
sti
sti
jne
inc
test
add
les
push
push
jnp
xchg
dec
pop
xor
ja
mov
ja
jae
and
jecxz
cwtl
sub
loop
js
pop
stc
mov
loopne
or
jmp
jecxz
rcr
or
js
pop
xchg
out
mov
mov
fadds
ss
jns
mov
cmp
xchg
stos
mov
mov
mov
scas
test
mov
iret
addl
or
cwtl
mov
push
pop
add
clc
ret
pop
jb
scas
shll
pop
jg
push
insl
mov
mov
or
dec
xchg
adc
pop
pop
xor
xchg
cmp
mov
jecxz
sar
mov
mov
fs
adc
in
add
daa
mov
cmp
sahf
cmpsl
lea
movsb
sti
inc
xor
adc
mov
aam
dec
and
xchg
testb
push
imul
push
xchg
scas
shrb
pop
adc
fiadds
cltd
pusha
mov
cwtl
out
popf
repz
bswap
gs
jb
out
cs
mov
jne
repz
outsb
out
insb
lods
inc
adc
lcall
scas
mov
mov
mov
aad
jnp
pop
jo
in
add
pop
dec
leave
xchg
test
scas
pop
mov
mov
xchg
lods
mov
pop
mov
ficomps
xchg
ret
sbb
test
push
push
and
aaa
cs
mov
rorl
outsb
and
pop
xchg
enter
xchg
sub
sbb
fnstenv
inc
jle
scas
or
jae
jb
sbb
jg
std
mov
rclb
and
pop
xor
add
aad
or
jp
push
push
repz
mov
jmp
test
lds
rcrl
push
push
mov
jecxz
cmpsb
icebp
insb
dec
xor
daa
and
mov
or
push
push
mov
shll
mov
jbe
and
push
mov
out
outsb
pusha
iret
jbe
sub
jmp
jb
mov
test
test
insl
insl
fidivl
adc
sbbl
pop
test
mov
into
pop
mov
loope
dec
and
sahf
stos
stc
and
fldcw
dec
jle
in
lds
gs
jne
or
inc
ja
pop
std
add
notb
ss
repnz
push
inc
lods
push
push
xor
pusha
lds
mov
jb
lea
fdivl
imul
enter
ljmp
inc
jmp
mov
cmpsl
andb
andl
jbe
sbb
jb
sub
mov
mov
adc
sub
imul
mov
and
adc
lahf
out
cmp
cmp
jp
imul
popf
scas
sub
idivl
sbb
leave
scas
xlat
ret
inc
and
adc
leave
pop
mov
in
sbb
add
sbb
loope
sub
clc
aam
in
sbb
das
icebp
and
ret
inc
pop
cmc
inc
cli
jb
push
iret
mov
lcall
mov
push
test
lahf
aam
xchg
scas
loop
xchg
loop
popf
push
leave
arpl
pop
sti
shll
fldenv
jnp
xchg
push
mov
pop
pop
aad
xchg
or
jmp
addr16
mov
jae
cmp
add
mov
pop
cld
add
push
dec
mov
mov
test
fldcw
sub
xchg
fisubrl
in
sbb
xchg
sub
repnz
stos
test
notb
cmc
subb
ja
iret
jle
mov
cmp
adc
dec
loop
aad
mov
divb
cmp
mov
adc
pop
push
loopne
or
ja
scas
fldt
xor
popa
gs
mov
jge,pt
std
jg
mov
das
mov
mov
fsub
jnp
jecxz
mov
outsl
mov
test
clc
int3
dec
jo
stos
add
lcall
stc
sarb
mov
mov
stc
das
lods
xchg
xor
or
rorl
xor
and
mov
shll
sub
stc
mov
push
mov
cmp
and
dec
sbb
aas
mov
fnsave
nop
mov
xchg
rclb
xorl
add
fldt
aaa
dec
jnp
dec
in
inc
sbb
and
cmp
int3
xor
fidivrs
outsb
lahf
and
ror
nop
leave
add
mov
and
lret
push
push
sub
cmc
cmp
jg
aam
js
push
movsb
add
add
and
cmp
pop
fnstsw
dec
push
fsincos
sti
call
pusha
xor
mov
xor
aas
movsb
mov
push
in
out
sbb
jl
aam
test
daa
test
jno
loope
sbb
das
int
arpl
inc
adc
scas
stos
pop
dec
movsb
outsb
lock
idiv
ficoms
cmpsl
cmp
and
stos
aam
jmp
inc
cld
inc
sub
xor
pop
pop
cmp
ret
movsb
icebp
shrb
mov
in
clc
xchg
popf
sbb
and
cmp
idiv
pop
testb
push
inc
leave
mov
inc
pop
and
in
push
insb
pop
lock
ficoml
ljmp
stc
pop
inc
adc
in
setne
outsb
bound
jnp
pop
sbb
cmpsb
fldl
lcall
mov
pop
inc
shlb
lcall
and
or
adc
adc
pusha
ret
and
cmp
xchg
pop
mov
bnd
loop
cld
mov
std
jle
nop
pop
sbb
sbb
sbb
in
mov
mov
mov
cli
sbb
xchg
add
jae
xlat
pop
outsb
outsl
enter
rolb
or
dec
push
adc
mov
cltd
aad
fbstp
ja
aad
xchg
cmp
imul
mov
sub
psubusb
or
imul
pop
mov
out
sub
inc
sbb
out
cwtl
in
fisubs
sub
and
stos
fs
stos
mov
mov
les
dec
jmp
enter
add
mov
mov
pushfw
pop
jmp
stos
jp
add
mov
fwait
xchg
loope
adc
inc
cwtl
ljmp
lock
inc
sahf
out
sbb
test
xchg
adc
scas
stc
mov
icebp
cwtl
push
mov
pop
push
test
inc
mov
push
pop
add
cmp
roll
and
sub
outsl
lds
jge
ret
sbb
xchg
out
xorb
mov
inc
out
pop
inc
das
sbb
aam
notl
or
mov
push
xchg
adc
out
rcll
loop
xor
cmp
sub
popf
insl
xchg
fsubrl
sti
scas
jae
test
cmp
xor
into
aam
add
divl
and
adcl
rcr
in
push
jo
insl
push
xchg
inc
adc
fcmovnu
sub
dec
pop
pop
test
xlat
ds
loop
mov
pop
dec
movsl
gs
cmp
es
jne
cmp
jmp
mov
mov
lcall
cmpl
push
dec
es
mov
adc
sahf
daa
ss
inc
cmpsl
repnz
xor
mov
out
jnp
fadd
and
push
add
pop
fistl
mov
shrl
cmpsl
and
sub
ret
mov
out
imul
mov
mov
mov
push
les
pop
in
les
add
or
cmpsl
adc
repz
push
xor
call
dec
jmp
ja
pop
stc
push
add
cmp
sub
out
jmp
mov
dec
jle
out
mov
jo
mov
fwait
in
pop
push
cmovl
arpl
adcl
and
add
sub
cmc
decb
ret
or
shll
and
mov
xchg
outsb
inc
gs
and
jo
push
add
mov
or
xchg
movsl
ljmp
pop
jle
fsubrs
cmp
xchg
iret
ficoml
fwait
fs
pop
pop
lahf
xchg
jge
movsl
in
rcl
pop
sbb
arpl
divl
pop
out
pop
push
jecxz
into
das
cmp
mov
inc
out
mov
outsl
cwtl
xchg
in
outsl
push
pushf
mov
sub
pop
cmp
sub
inc
movsb
shrl
icebp
jecxz
jecxz
rclb
push
ds
cmp
mov
pop
inc
mov
mov
adc
inc
cmpb
ret
test
jns
in
test
addr16
lret
adc
icebp
sbb
mov
or
cmp
inc
js
adcb
xor
sub
lods
test
xchg
dec
and
cmp
cmp
popa
push
fs
mov
ljmp
enter
inc
pop
pop
mov
jb
add
adc
sar
js
rol
xchg
xor
scas
pop
push
add
mov
mov
cld
mov
add
pop
mov
clc
fucom
cmp
cli
pop
scas
aad
jns
repz
pop
push
or
and
xchg
in
movsb
hlt
inc
sti
inc
pop
popa
mov
movsl
mov
mov
xlat
adc
xchg
and
push
fcmove
out
in
mov
jnp
dec
sub
adc
sub
adc
adc
gs
add
out
andb
dec
loop
cmpsb
insl
sub
enter
inc
test
xlat
inc
cmp
cmp
test
lret
cmp
pop
sub
xor
lea
xor
test
adc
je
test
xchg
jnp
dec
test
data16
mov
adc
jp
mov
add
add
sbb
faddl
stos
jbe
orl
daa
je
sub
bound
sub
push
fdiv
mov
adc
jo
add
rcr
sub
mov
aaa
lret
jp
rol
xor
push
mov
repz
pop
out
iret
inc
aam
rorb
or
dec
push
sbb
xor
mov
sbb
inc
inc
ja
nop
mov
cmp
cmp
fimuls
repnz
out
jge
xor
jo
loopne
mov
xlat
mov
jne
inc
jg
lahf
or
sti
test
sbb
cmp
outsl
leave
repnz
jge
jmp
mov
sbb
scas
loop
shrl
rorl
sarb
repnz
int3
push
jne
mov
jmp
sarl
stos
lods
ja
sub
nop
xchg
jo
aaa
add
lret
add
addr16
jo
adc
mov
mov
mov
push
sub
fyl2x
xchg
pop
push
clc
jge
add
shrb
pop
insb
arpl
xchg
mov
lods
cmpb
sbbb
mov
inc
dec
jnp
dec
les
pop
jg
pop
jne
roll
lds
outsl
sub
xchg
mov
sbb
icebp
jl
mov
movsl
mov
pop
popa
push
pusha
les
loope
push
cs
test
repnz
adc
in
rcll
jg
aas
jne
aas
add
mov
loope
pop
dec
repz
outsl
rorl
inc
cmp
xchg
leave
out
cmp
mov
mov
sub
jecxz
sti
mov
push
inc
in
mov
gs
scas
jmp
fcmovnb
fadds
xchg
out
push
les
push
jae
mov
fcoms
enter
test
je
xor
pop
inc
adc
mov
jp
andl
movsl
sub
mov
mov
movsl
movsl
xchg
in
dec
jb
insb
loop
push
and
iret
and
pop
inc
pushf
roll
int3
ret
pop
repnz
aad
std
nop
int
stos
push
loope
mov
scas
push
jbe
daa
insl
cli
mov
je
xchg
lds
fwait
int3
iret
add
call
jb
push
jle
sbb
pop
pop
call
sub
in
mov
scas
push
adc
or
push
sahf
jnp
and
test
mov
pop
outsl
les
jge
jp,pt
sahf
mul
mov
aaa
mov
repz
push
jge
mov
loope
inc
pop
in
sarb
add
mov
hlt
push
frstor
stos
fwait
in
ret
rcll
cmpsb
jae
clc
push
xor
sbb
add
or
add
imul
mov
mov
fistps
push
push
jno
outsb
xchg
jbe
es
inc
popa
lods
and
dec
rolb
dec
fisttpl
jp
ret
dec
dec
mov
mov
lret
xchg
jno
fs
adc
ja
mov
mov
push
jne
addr16
mov
shl
test
negb
dec
mov
maskmovq
mov
pop
scas
mov
mov
xchg
call
xchg
gs
pop
int3
dec
and
in
push
dec
and
ret
dec
pop
push
repz
jmp
fstl
or
xchg
pop
and
rcrl
push
jmp
adc
lds
insb
lock
imul
cld
or
fwait
mov
or
adc
fcoml
jp,pt
bound
add
cmp
xchg
add
loope
fs
add
sbb
push
push
pusha
xchg
push
arpl
add
cmp
push
xchg
arpl
pop
xchg
add
jge
xor
inc
stos
sbb
or
sub
mov
ja,pn
mov
pop
ja
jmp
inc
test
rclb
ret
fwait
xor
aas
xor
mov
aaa
js
adc
mov
sbb
mov
imul
movsl
push
pop
mov
mov
aaa
cld
push
cmc
into
shrb
mov
pop
cmpsb
jo
adc
std
outsl
jg
mov
and
ficompl
call
xchg
cmc
std
fidivrs
push
cmc
lcall
sub
inc
push
mov
cmc
push
sub
movsl
pop
movsb
out
les
cmc
xchg
and
das
xor
xor
inc
and
mov
rorl
mov
push
test
mov
movsb
fistps
push
push
stos
iret
xor
jb
test
jle
call
lahf
ret
xor
push
sbb
aad
aas
or
scas
adc
sub
add
inc
dec
cmpb
dec
pop
add
popa
pop
jecxz
stos
xchg
dec
xchg
subl
movsl
testl
call
popf
and
imull
cld
fmulp
int
outsb
fadd
stc
test
lcall
cmpsl
bnd
mov
xchg
sbb
stc
push
cmp
test
icebp
xor
pop
lret
sub
inc
in
cltd
cmp
jge
or
jbe
cmp
insb
xchg
xlat
push
or
cmpsb
call
insb
ljmp
ds
xlat
cli
adc
mov
and
pop
xchg
fnstcw
sbbb
leave
pop
push
pop
jle
sbb
sbb
mov
xchg
sbb
lret
mov
adc
adc
ds
popf
int
shl
scas
jns
inc
cmp
in
std
mov
push
mov
sub
pop
fildl
hlt
aaa
pop
add
rol
dec
stc
or
sti
pop
pop
push
pop
stos
insb
lods
and
cmp
rcll
dec
mov
ret
pop
leave
add
mov
rolb
cmpsb
and
aam
xchg
sti
dec
cmp
ficompl
xchg
cs
adc
addl
pushf
mov
xchg
lods
jge
xchg
mov
inc
adc
xchg
mov
fildl
repnz
dec
push
mov
xchg
lds
loope
dec
je
popa
xor
push
dec
xchg
cmpsl
shlb
jns
adc
xchg
pop
dec
mov
pusha
in
pmaxsw
sbb
negb
jle
adc
je
sbb
test
cli
mov
cmpb
dec
push
hlt
or
cmp
mov
sbb
mov
test
mov
popl
fs
out
hlt
sbb
cld
or
jmp
dec
pop
inc
sub
pop
jnp
pop
xchg
xor
mov
jp
or
push
or
lods
leave
or
pusha
xchg
ja
in
dec
push
call
cltd
dec
cltd
loope
xchg
sbb
int3
pop
insl
movsb
pop
inc
shlb
jae
sbb
das
cmp
jo
xchg
dec
mov
movsl
mov
fsubrs
xor
mov
cs
test
sahf
loop
xchg
mov
mov
ja
dec
lock
push
pop
push
xor
xchg
fmull
dec
icebp
cwtl
or
inc
repnz
cmc
xchg
mov
push
call
test
rcrl
pop
xorl
xchg
xchg
outsl
adc
imul
ficomps
ficomps
ja
jg
adc
dec
lret
les
inc
push
push
sub
scas
nop
push
cld
lods
mov
mov
cmp
or
out
fimull
lahf
jle
jg
insl
cs
scas
dec
dec
ljmp
movsl
fs
insl
xchg
mov
dec
xlat
dec
jnp
btc
enter
sub
sub
mov
push
dec
out
fsubrl
dec
test
or
add
pop
cmp
mov
or
mov
xchg
ds
scas
loopne
dec
jge
xchg
sbb
leave
pop
jge
repnz
lret
divps
lahf
mov
cltd
gs
fwait
pop
testb
jmp
aaa
lret
push
sahf
in
jmp
push
negl
mov
or
add
movsb
xchg
inc
or
insb
pop
hlt
mov
xchg
inc
dec
lret
fidivrs
xchg
push
lds
mov
repnz
jp
or
xchg
mov
xchg
or
xlat
int3
jne
lds
or
or
xchg
sahf
sti
inc
xor
inc
enter
mov
sbb
or
cwtl
mov
xchg
mov
push
sbb
insb
fs
ret
jge
or
jnp
dec
fmull
ja
mov
iret
adc
movsl
cmpsl
movl
sbb
push
adc
popa
outsb
je
popl
lea
div
and
inc
je
sub
outsb
in
mov
mov
ljmp
arpl
xlat
and
cltd
out
mov
inc
popa
movsl
addr16
inc
jg
lea
dec
inc
test
add
mov
stos
sub
or
adc
in
push
and
cmp
mov
movsb
or
dec
mov
mov
in
push
xchg
loop
add
lahf
push
call
enter
icebp
lds
jmp
in
cmc
pop
push
imull
popa
jmp
mov
std
inc
sbb
mov
mov
or
dec
test
testb
pop
ja
faddl
fsubrp
cmp
sub
xchg
push
or
aaa
in
mov
sub
js
add
sub
push
push
outsl
push
mov
inc
sbb
xchg
movsb
mov
fmull
in
loopne
imul
call
dec
push
jno
jl
loope
adc
sbb
repz
clc
adc
cmpsb
ret
in
and
mov
out
into
xchg
mov
lock
sahf
and
adc
pop
jb
add
pop
sbb
mov
mov
orb
adc
movsb
fsub
dec
mov
or
mov
jo
mov
sub
inc
das
mov
lahf
pusha
jge
dec
arpl
enter
pop
push
test
push
mov
add
dec
lret
dec
push
jmp
xchg
fdivrp
dec
jmp
ret
sti
outsb
inc
hlt
mov
adc
iret
fucomp
add
sub
xchg
dec
jle
lods
pushf
xchg
and
test
xchg
pop
sti
lea
stos
jnp
test
and
xor
inc
or
sub
push
fwait
mov
push
aam
mov
fbstp
inc
stc
xchg
mov
in
int
loope
stos
jne
out
xor
adc
lods
paddsb
xchg
xor
jmp
rcrl
and
cs
or
dec
add
mov
sbb
mov
out
les
push
sbb
pop
movsl
es
adc
lret
mov
ror
bound
pop
loope
jno
add
xor
xchg
mov
xor
xor
dec
movsb
or
int
in
and
int
cmp
mov
sub
xor
out
dec
mov
push
pop
mov
push
mov
sub
push
movsl
cmpsl
mov
inc
or
cwtl
fs
adc
inc
pop
push
inc
inc
std
neg
mov
mov
outsb
mov
bound
mov
les
pop
mov
mov
and
aas
xor
pop
add
mov
jo
in
xchg
ds
xor
add
push
dec
mov
push
xchg
ss
inc
fcoms
out
and
fwait
mov
nop
les
or
mov
push
adc
dec
push
into
push
inc
test
push
sub
mov
inc
add
sub
ss
gs
add
inc
fimuls
pusha
test
ret
jmp
inc
pop
mov
outsl
outsl
inc
movsb
cmpsl
push
mov
push
and
clc
mov
lret
mov
inc
xchg
fiaddl
outsl
mov
mov
fstpt
push
jbe,pt
insl
cltd
sti
lds
in
arpl
and
arpl
mov
cs
add
in
inc
pop
mov
mov
xchg
lret
push
push
je
mov
ficomps
hlt
and
jnp
fst
or
enter
in
test
icebp
dec
xchg
mov
aaa
test
cmpl
lock
add
movsl
xor
lods
push
sarl
and
and
cmp
notl
idiv
push
stc
clc
pop
gs
dec
std
xchg
jle
mov
push
fdivs
inc
fsts
cwtl
push
mov
cli
leave
jmp
sub
and
sub
inc
or
lret
outsb
rolb
xchg
out
mov
adc
test
fcmovne
add
lcall
addl
mov
incl
loope
cmp
fs
and
and
xchg
into
jb,pn
dec
mov
out
sub
aam
add
add
mov
push
mov
gs
cs
xchg
jo
xchg
adc
je
xchg
dec
int3
call
stos
and
test
in
arpl
mov
inc
andl
xor
out
fisubrs
sbb
aas
lds
add
push
mov
std
add
mov
mov
inc
mov
ret
push
add
jp
mov
pop
pusha
mov
cltd
sub
pop
mov
dec
cmp
mov
gs
movsb
xor
outsl
and
xchg
adcb
loopne
roll
add
in
out
mov
mov
test
leave
adc
dec
add
int
ret
pop
sub
fldz
mov
fwait
lods
scas
sub
mov
sarl
push
jg
mov
popf
sahf
sub
dec
mov
inc
or
fstpl
sti
icebp
mov
adc
push
sbb
cltd
mov
fbld
mov
test
xchg
jge
sub
popf
movsb
dec
inc
enter
jmp
bound
add
enter
cmpsl
pop
add
roll
inc
pop
and
jp
cmp
adc
enter
sub
dec
int
and
subb
ret
out
mov
std
adc
lcall
enter
cmp
mov
jnp
fdivl
adc
xlat
dec
loop
mov
mov
or
mov
xchg
pushf
stc
shrb
cmp
js
outsl
aaa
mov
mov
stc
mov
pop
shl
mov
int3
jno
jg
push
test
sub
pop
arpl
xchg
ljmp
int
mov
sahf
pop
mov
lahf
cmp
jg
pop
scas
jle
je
jecxz
ljmp
xchg
push
stos
mov
sub
lret
mov
stos
popa
mov
mov
xchg
test
mov
out
icebp
aas
aaa
and
cmpsb
shlb
cs
xchg
push
pop
cld
dec
int
add
lods
sbb
out
xchg
pop
add
mov
or
fs
cs
jb
fcmove
dec
add
pop
lahf
push
dec
adc
adc
repz
xor
fs
pop
lahf
add
popf
fstp
nop
insl
mov
sub
fmul
in
xchg
adc
dec
cs
loope
mov
test
jae
fldcw
mov
mov
es
xchg
cltd
inc
fld
ljmp
hlt
cmp
and
mov
frstor
outsb
daa
dec
iret
pop
add
pop
sbb
adcl
je
mov
lret
lds
and
mov
es
jb
jo
dec
jmp
push
cs
stos
cmp
lods
mov
lock
push
jo
movsl
loop
sbb
jo
outsl
mov
jns
imul
sub
pop
int
mov
jp
imull
push
jmp
and
xor
mov
lods
int
call
stos
xchg
scas
fistpl
testl
mov
in
dec
sbb
in
mov
mov
or
bound
add
in
jp
cmc
cltd
push
cmpl
dec
jb
clc
jne
into
lret
dec
jno
lahf
popa
popf
mov
sub
mov
fisubrs
mov
pop
add
mov
sub
scas
jno
inc
test
in
push
jbe
pop
int3
jmp
divb
iret
ljmp
test
sub
lret
pop
mov
loope
sbb
sub
dec
cmp
jne
dec
shl
and
addr16
imul
lods
fwait
jbe
jb
pop
cwtl
jmp
fwait
arpl
ss
je
lea
mov
daa
add
xchg
and
repnz
or
mov
loop
fidivrs
push
sbb
lds
jmp
mov
andb
adc
push
fistpl
aas
clc
dec
jmp
dec
lcall
adc
jge
aam
imul
jno
jne
in
mov
nop
test
adc
push
add
xchg
xor
icebp
pop
ret
inc
mov
jae
jle
mov
in
out
pop
xchg
push
fs
push
scas
mov
sbb
mov
and
call
lret
jp,pn
into
add
lock
frstor
push
movsl
inc
lods
adc
stos
mov
std
idivb
xchg
insl
adc
rolb
pusha
enter
xor
pop
jg
dec
and
int
test
jae
orb
popf
loope
mov
jp
cmp
and
or
pop
mov
in
sub
dec
mov
shr
add
mov
add
mov
mov
pop
mov
out
aas
fildl
and
js
andb
dec
sub
lds
in
inc
ret
mov
and
xchg
jg
push
mov
jmp
dec
pop
popl
push
ss
sbb
popa
dec
mov
in
or
sub
sub
and
push
call
push
dec
cltd
sbb
cmpl
gs
movsb
outsl
mov
cld
fidivrl
in
add
icebp
loop
and
loop
mov
es
mov
xchg
jo
or
nop
popf
xchg
inc
sub
push
mov
int3
hlt
inc
das
cmc
or
loopne
or
je
in
inc
sbb
cmp
adc
in
fwait
sub
mov
mov
xchg
aad
jb
outsl
fistpl
sub
add
adc
xor
lahf
test
jg
jle
xor
and
push
xor
pop
cmp
fldcw
mov
push
sub
pop
sub
cmp
lahf
pop
cmc
push
loope
test
push
cmp
xlat
adc
fcoms
push
mov
ds
lahf
ss
lods
mov
shll
xlat
jo
shlb
or
imul
pushf
inc
aad
loope
mov
aam
push
jg
loop
fs
mov
fisttps
notb
ret
pop
xor
js
imul
js
and
test
xlat
call
jp
push
inc
scas
test
jo
daa
mov
xor
stc
cmp
push
insl
lea
cmp
sahf
insl
addr16
xor
jno
cmpsb
int
inc
roll
imul
movsb
xchg
push
push
lret
sahf
dec
pop
outsl
cmpsb
mov
pop
scas
mov
inc
sub
dec
sub
inc
loope
dec
or
cmpb
pop
xchg
xor
sbb
into
and
push
pop
imul
daa
ds
xor
mov
jns
sbb
pop
enter
sub
addr16
call
push
roll
pop
cltd
mov
lahf
mov
jmp
and
in
test
outsl
imul
cmp
imul
xchg
mov
jge
adc
movsb
mov
dec
adcb
and
pop
mov
sub
mov
addr16
sub
loopne
dec
lock
sub
dec
mov
cmp
inc
in
push
fidivrs
sub
add
push
xlat
out
mov
push
and
mov
aad
jmp
or
dec
ds
rorl
xor
ss
pop
mov
cmc
mov
xchg
jecxz
xor
mov
jmp
bound
std
fidivl
test
sub
pop
sbb
or
pop
es
sbb
test
mov
data16
movsb
cmpl
test
pop
adc
xor
pop
ljmp
fs
jb
fists
repnz
lods
sbb
shr
push
adc
push
cwtl
jl
repz
push
xor
xor
mov
inc
jl
mov
jbe
and
push
into
insb
mov
mov
loopne
clc
inc
imul
mov
hlt
cmp
lods
jl
mov
push
xor
jl
dec
dec
jl
add
pushw
jns
pop
jle
xor
xor
repz
mov
lock
adc
int3
jg
lea
mov
xchg
jae
xchg
nop
push
aas
lret
ret
jo
lcall
cwtl
mov
dec
xchg
lea
sub
pop
lahf
mov
pop
stos
movb
out
push
and
lds
inc
test
popa
daa
cmpsb
jmp
flds
dec
jmp
dec
jne
in
ljmp
lea
hlt
and
cli
mov
out
sbb
call
in
pop
mov
sar
and
jb
or
cmp
adc
and
mov
pop
jnp
popa
jmp
into
fnsave
xorl
jl
addl
mov
adc
in
imulb
testl
cmpb
and
rcll
rcrl
imul
das
jecxz
add
icebp
push
roll
cmp
loopne
loope
fisttpll
popa
in
fcmovbe
into
or
pop
pop
inc
sarb
lock
pop
or
jno
push
inc
cld
cmpsl
mov
and
test
aaa
sahf
imul
push
dec
ljmp
push
test
aam
dec
lock
inc
push
push
mov
xchg
out
cmpsl
or
xor
pop
popa
idivl
sarl
std
sahf
sbb
mov
pop
mov
jp
into
xchg
jnp
lcall
popl
std
cltd
mov
mov
in
loop
mov
mov
das
or
jno
xor
sbb
lret
daa
inc
sub
cltd
pop
fs
sbb
mov
or
push
jge
push
xchg
xor
mov
fiadds
jnp
dec
mov
fildl
push
dec
mov
stos
pop
fidivs
xor
add
lret
scas
dec
adc
inc
std
xor
clc
into
xor
inc
daa
dec
push
mov
inc
pop
fimull
push
inc
mov
add
inc
sub
add
scas
jge
stos
rcl
stc
pop
adc
sbb
lock
adc
call
dec
push
aam
shr
ret
ljmp
sbb
push
icebp
jp
mov
mov
enter
ret
sub
fstpt
sbb
or
inc
push
jp
jne
xchg
xchg
jne,pn
dec
dec
fildll
test
sbb
xchg
and
jo
in
mov
dec
or
dec
and
xchg
lods
test
ja
arpl
jne,pt
dec
mov
ret
enter
jnp
xlat
inc
arpl
icebp
sti
jge
loop
xchg
es
adc
mov
hlt
inc
mov
mov
or
jno
movsl
xchg
scas
xlat
je,pt
data16
popf
push
cmp
and
mov
adc
dec
shrb
or
stos
arpl
mov
pop
and
roll
bound
sbb
stos
lcall
push
arpl
xchg
adc
loope
xor
sti
testb
or
mov
les
xchg
add
dec
dec
inc
push
loopne
mov
aas
cmpsl
cltd
lret
add
adc
and
mov
mov
std
mov
stos
ja
aas
leave
jg
mov
jno
push
jmp
push
sbb
push
sub
jmp
test
push
stos
cmpsb
int
sub
sub
in
mov
pop
inc
inc
int3
fsubl
orb
idiv
mov
lods
or
sbb
loopne
rep
add
adc
iret
mov
cli
sbb
pop
ljmp
sbb
addr16
sub
mov
or
add
lock
mov
inc
pop
pop
aad
popa
jle
sbb
outsb
daa
cmpsl
push
push
leave
mov
inc
sahf
mov
cmc
das
cmc
xchg
xchg
xchg
in
leave
xchg
fstps
test
mov
pushf
sub
cli
dec
mov
loope
leave
mov
filds
mov
mov
jle
push
pop
cli
mov
dec
pusha
pop
imulb
mov
lock
pop
lock
dec
in
push
mov
loope
adc
pop
addr16
int3
push
repz
out
mov
icebp
mov
mov
out
fnstsw
adc
insl
dec
mov
dec
mov
add
imul
mov
xchg
mov
xor
inc
pop
or
xor
rcr
lahf
pop
xor
jmp
stos
out
mov
in
aam
clc
xor
mov
xchg
and
in
dec
mov
mov
pop
add
cmpsb
imul
xlat
or
aad
jb
push
mov
dec
inc
pop
lcall
jno
scas
shll
lods
inc
mov
loop
push
adc
sub
int
std
adc
mov
mov
dec
je
or
ljmp
es
sar
in
adc
sbb
sub
sbb
pop
inc
mov
pop
pop
xor
xchg
push
push
lock
hlt
jo
sbb
mov
fildll
imul
jns
cli
and
sbb
inc
mov
ret
dec
cmpsl
enter
inc
dec
es
adc
sbb
aaa
loope
pushf
leave
ljmp
dec
inc
fs
repz
xor
jne
repz
xchg
or
mov
lret
inc
jp
sar
outsl
mov
lahf
dec
inc
sub
aas
lret
add
negb
nop
mov
orb
loopne
lidtl
push
jb
xorb
repz
stc
mull
push
addps
jge
in
lret
pop
mov
mov
add
insb
jmp
ljmp
add
inc
push
xchg
xchg
or
ret
jbe
push
and
incl
into
mov
movsl
add
xor
pop
nop
sub
mov
hlt
inc
pop
mov
xor
adc
cmp
cmc
fmuls
adc
stos
push
jbe
fadds
inc
mov
mov
insb
mov
mov
lds
xchg
repz
out
dec
js
xchg
sub
divb
push
jb
int3
jecxz
stos
xor
into
mov
movsb
adc
loope
jno
nop
aad
daa
scas
jmp
mov
adc
repz
cltd
jns
pushf
adc
mov
daa
repnz
js
adc
jb
cmp
sti
cmpsl
outsl
mov
or
pop
sub
pop
add
sub
in
repnz
std
ror
scas
push
mov
add
movsl
mov
xchg
or
outsl
aaa
movsb
or
movsl
leavew
iret
pop
cmp
mov
ja
add
enter
xchg
xchg
mov
lcall
push
xor
bnd
mov
addl
mov
movsb
mov
lds
test
in
imul
jnp
movsl
xor
scas
stc
fs
jno
adc
xchg
roll
lcall
cli
fs
mov
fldl
pop
lods
or
mov
shll
mov
jne
shr
sbb
pushf
repnz
mov
dec
mov
cmp
sbb
pushf
leave
bound
adc
xchg
mov
int
mov
push
fmulp
stc
push
in
cli
push
pop
mov
imul
fdivrp
ja
outsb
rcll
into
out
cmp
gs
sub
lds
mov
mov
mov
and
loop
push
jo
inc
sti
xchg
pushf
pop
jge
mov
in
movb
data16
xchg
mov
test
or
adc
rorb
xor
pop
aaa
inc
repz
sub
shll
mov
jns
mov
shrl
inc
cmp
mov
into
out
gs
cwtl
test
movsb
jmp
aam
pop
add
rep
pop
and
and
pop
int
lcall
xchg
sub
xor
popf
fwait
arpl
inc
adc
ret
jnp
test
adc
pop
push
jle
ja
js
scas
xchg
add
lahf
xor
inc
xchg
out
push
inc
fcmovb
jnp
and
lahf
out
test
or
xchg
adc
jnp
sub
mov
sbb
ljmp
mov
push
add
jbe
mov
mov
mov
scas
testl
sub
fcoms
xor
fcmovnb
hlt
push
loopne
mov
aam
pop
mov
push
lods
or
push
xlat
sbb
dec
sbb
inc
mov
sti
xor
push
shr
mov
ss
push
into
dec
cld
cltd
jae
aaa
aad
cmc
cmp
add
pop
mov
aad
fildl
dec
imul
cmpsl
sbb
and
in
out
call
cli
sbb
popf
in
push
not
mov
repnz
movl
mov
xchg
jae
mov
outsb
scas
bound
insl
andb
fsub
loopne
pop
add
jge
push
cmp
movsb
je
sbb
dec
dec
lcall
outsb
stc
or
push
inc
es
cltd
cwtl
xchg
sub
sbb
adcl
aaa
out
cwtl
mov
fildll
push
mov
and
push
mov
in
or
outsb
cld
mov
fstl
loopne
cmp
cld
sbb
cwtl
adc
inc
xor
out
ljmp
cld
dec
out
pop
in
add
push
imul
sti
cli
or
mov
jp
xor
dec
loop
call
mov
mov
mov
fcomi
pop
aas
in
adc
les
lret
out
or
push
push
bound
pop
cmpsb
push
lock
idiv
lods
bound
shll
mov
mov
jge
nop
xor
mov
push
jo
int
xor
rorb
xchg
test
pop
fildll
cli
jb
repnz
fs
inc
enter
movb
dec
divl
fmull
lods
pop
jne
add
std
dec
and
stc
leave
stos
jecxz
jp
inc
repnz
jg
xor
add
mov
jecxz
jae
adc
sub
mov
rorb
sbb
aaa
popa
pop
and
insb
pop
mov
sbb
lret
cli
sarl
mov
test
mov
das
ja
cmp
test
in
jo
dec
mov
mov
xchg
xchg
mov
cmp
addr16
addr16
mov
jb
pop
add
add
pop
dec
adc
pop
and
pop
xlat
xchg
nop
jne
data16
cmp
push
mov
loope
loope
sub
pop
test
ficoml
cmp
dec
mov
mov
bnd
stc
mov
test
call
xor
pusha
mov
xchg
sub
in
xchg
push
shll
fdivs
int
popf
cld
sbb
ljmp
repz
jg
push
loope
pop
lock
dec
test
push
cld
adc
clc
lea
push
mov
clc
pop
jecxz
test
and
hlt
inc
inc
gs
xor
xchg
mov
lret
je
cmp
push
mov
jb
icebp
out
push
arpl
xor
lcall
scas
dec
rorl
out
loop
push
pop
adc
jg
sub
out
cmpsb
roll
pop
jle
xchg
and
ja
mov
mov
or
sub
pop
fdivl
mov
jno
and
jo
push
fidivs
inc
push
je
into
sub
popl
lock
or
xchg
adc
into
jl
fisubrs
xchg
ret
mov
stos
insl
jnp
mov
int3
mov
imul
add
into
mov
ljmp
mov
int
jnp
or
aas
cli
sub
sbb
mov
push
outsb
lea
mov
sti
add
or
fidivrl
xor
dec
sbb
xchg
xlat
sub
pushf
xchg
xchg
repnz
jb
cwtl
pop
nop
ds
xor
pushf
ds
hlt
pop
mov
push
xor
mov
testl
fsubr
xchg
xchg
ljmp
insl
mov
jge
xchg
push
lahf
sub
adc
mov
dec
ret
in
pop
sbb
in
and
pop
xor
shll
jge
pusha
test
push
outsb
lods
bound
imul
jo
mov
mov
idiv
or
lahf
mov
cmpsb
mov
imul
adc
loop
jl
inc
repnz
shrb
adc
repnz
scas
ret
mov
shlb
dec
sbb
sahf
out
or
push
std
in
and
les
mov
add
pop
andb
mov
insl
dec
adc
pop
insb
pop
leave
fidivrs
fmull
ret
jmp
je
mov
movsb
cmp
inc
in
gs
pop
push
inc
mov
xchg
ja
sarb
adc
pop
xor
pushf
push
lcall
xchg
rcl
icebp
and
arpl
xor
rorb
fwait
sbb
dec
lods
outsb
leave
fs
cltd
pushf
mov
aas
mull
popf
dec
push
xor
aaa
mov
mov
inc
cmp
movq
orl
sbb
adc
xchg
das
mov
xor
jl
xchg
jae
das
jmp
imul
adcl
adc
adc
inc
lahf
ret
int3
pop
stos
in
jmp
xchg
cmp
and
rorb
mov
lret
cmp
insb
mov
or
pop
sub
sbb
fcmovnbe
mov
and
shll
hlt
push
xchg
xchg
xchg
cmp
out
movsb
inc
test
jo
mov
pop
jg
dec
xchg
in
fcoml
xchg
out
out
scas
imul
adc
popf
xor
ss
xlat
cmpsb
out
in
mov
lods
xlat
xorl
rcll
es
rclb
mov
jge
adc
negb
mov
jmp
loope
roll
out
add
cmp
mov
pop
push
add
inc
sbb
pushf
stc
and
imul
sub
fmull
pop
scas
sti
mov
dec
sti
das
adc
cmp
rcll
cmp
pop
bound
adc
mov
push
mov
push
in
mov
insl
fs
stc
lret
out
aaa
nop
xchg
sbb
inc
cltd
fldcw
mov
dec
push
push
cs
imul
inc
cmp
repnz
in
sbb
pop
mov
push
mov
jno
xchg
lods
outsl
or
ljmp
dec
outsb
ret
icebp
stc
stc
fwait
push
lcall
cli
outsl
push
in
pop
sub
push
fcmove
std
in
js
sbb
add
out
fwait
lods
pop
mov
stos
jnp
dec
cmpsl
cmp
sbb
sti
cld
xor
adc
sub
xchg
pop
ret
mov
jmp
call
mov
jb
sbb
fcmovu
rcll
jl
dec
aas
cmpsl
movsb
jl
mov
xor
sahf
mov
inc
ds
xor
in
adc
or
out
je
shl
dec
xchg
pop
xchg
adc
sub
adc
gs
pop
inc
mov
dec
xor
negb
push
inc
sub
sti
sub
in
dec
cld
add
xchg
out
fcomp
cmc
aas
cmp
scas
pop
insb
jnp
testb
lahf
pop
add
shll
jecxz
cld
mov
in
push
mov
dec
and
and
jo
and
mov
pop
xor
xor
getsec
adc
clc
sub
test
shl
in
sub
int3
jb
cmpsl
and
jnp
in
jmp
xchg
jns
dec
ss
dec
and
ja
cmpsb
jp
rol
mov
movsb
sub
popa
outsl
call
or
sbbl
aaa
ds
mov
aas
loop
sti
fcomip
cmp
daa
cmp
addb
ret
sarb
inc
cld
inc
lods
add
lret
or
or
pop
inc
pop
ret
mov
mov
mov
test
fucomp
sbb
push
imul
push
rcrb
int
jle
mov
movsb
icebp
mov
lahf
xchg
and
sub
mov
add
pop
mov
cmp
popf
imul
push
in
ret
xchg
ret
xchg
test
jae
scas
mov
xor
sub
jno
imulb
push
mov
and
mov
xor
and
inc
pop
fists
inc
sarb
mov
jno
adc
repz
mov
or
enter
push
movq
jge
push
lods
dec
push
adc
xor
in
adc
ret
gs
dec
mov
and
outsb
push
mov
xchg
pop
stos
cmp
lahf
adc
clc
lea
xor
add
es
call
icebp
imul
in
pop
dec
mov
loopne
mov
cmp
filds
mov
jb
push
fwait
adc
push
inc
sarb
sub
push
into
ret
mov
lret
call
mov
cmc
pop
in
mov
xchg
cli
ss
pop
push
cmc
repnz
fwait
ret
cmp
sub
mov
push
out
out
cltd
les
andb
jle
sbb
loopne
adc
dec
pop
xchg
cs
mov
ret
ret
cs
loopne
xchg
imul
cmc
xor
vrcpss
out
inc
dec
mov
jmp
fidivrl
pop
cmc
mov
mov
je
test
sub
jnp
pop
cs
popf
and
lods
roll
xchg
cmp
bound
pop
nop
incb
adc
add
push
push
lods
cmpsb
adc
lahf
inc
fs
ja
and
add
jnp
in
fiaddl
cmpsb
push
jb
stc
fnstsw
lahf
mov
fimuls
aad
shrl
push
ja
xchg
and
ss
stc
mov
xor
fwait
jg
lds
imul
sub
nop
xor
scas
and
adc
or
cmpsb
fucomp
repz
int
dec
jl
push
out
lods
push
mov
scas
out
out
adc
jmp
mov
pop
push
inc
fs
push
dec
or
outsl
cs
jmp
loope
jo
cmp
xor
in
cmp
mov
lret
mov
imul
pop
daa
xchg
cmp
test
sarl
aaa
push
xchg
mov
adc
stc
clc
insl
pop
dec
jae
xchg
addb
daa
sbb
push
sub
call
fchs
outsb
clc
adc
adc
mov
mov
jl
sahf
aas
mov
rcll
mov
dec
ds
aam
push
push
nop
fnsave
sub
or
or
add
adc
cs
cmp
icebp
in
fisubrs
mov
lahf
out
jne
cmp
mov
add
out
add
add
nop
out
jb
popa
pop
outsl
cli
hlt
shrb
inc
add
mov
hlt
and
movl
mov
push
cs
cmp
push
pop
wrmsr
mov
cmp
dec
add
mov
or
adc
sub
dec
sahf
sbb
add
pop
popf
mov
dec
and
movsb
jl
iret
dec
jg
sbbb
in
xchg
xor
bound
pushf
sbbb
adc
test
cmp
mov
mov
dec
mov
or
pop
idivb
sbb
ss
aaa
and
dec
shll
xchg
mov
xor
adc
aam
fwait
cli
js
hlt
es
xor
adcb
or
rcll
mov
adc
les
js
gs
mov
cmp
mov
aas
into
mov
xchg
out
out
sub
xadd
les
lods
pop
adc
mov
jp
roll
mov
cs
pop
cld
jle
mov
mov
mov
xor
inc
mov
insl
aaa
loope
cmovbe
pop
sub
mov
sub
jbe
or
enter
inc
or
adc
mov
lds
ljmp
cmp
cmpsl
pop
lret
add
mov
adc
dec
push
sbb
or
sbb
in
mov
mov
stos
add
and
das
inc
jp
adc
inc
xchg
push
sub
stos
and
push
dec
inc
sti
sbb
dec
jge
add
inc
popf
test
jno
jae
xor
pushw
das
sub
add
xor
sub
sub
xor
mov
mov
repz
out
in
loop
sub
out
dec
repnz
add
inc
out
push
in
out
test
and
pop
jbe
imul
add
int3
or
mov
sub
jae
push
aam
xor
push
test
lock
test
lods
cmp
inc
dec
lock
xor
add
insl
cmp
rcl
add
hlt
sub
nop
test
aam
imul
lods
ret
cmp
jmp
sbb
jmp
mov
jmp
mov
or
and
scas
pushf
mov
aas
and
andl
out
pop
and
popw
add
dec
inc
cmc
cmp
dec
cltd
xchg
xchg
cmp
xor
loope
movsb
roll
dec
sbb
jne
xchg
iret
popw
xorb
add
dec
aas
dec
mov
aas
xchg
lock
or
pop
repz
pop
sbb
sbb
in
negb
in
dec
loopne
sbb
sbb
subl
mov
jmp
cmc
pushf
lea
mov
sub
incb
outsl
call
jns
int3
jecxz
mov
std
mov
es
test
pop
and
lock
pop
into
lcall
jmp
jno
or
dec
cmc
mov
sub
scas
mov
pop
int3
pop
or
or
sbb
mov
mov
filds
sti
lds
in
ja
or
lcall
test
mov
negl
push
shlb
mov
aam
inc
or
mov
pop
inc
mov
stc
inc
or
jmp
stos
imul
sbb
pop
mov
stc
cmc
mov
scas
mov
jmp
int3
sbb
andl
jp
into
addb
fsubr
aam
push
je
jmp
daa
sub
sti
enter
pushf
gs
std
adc
repz
jl
cli
push
je
xor
jp
sar
icebp
push
mov
cs
mov
adcl
sub
arpl
test
xchg
mov
cmp
lahf
cmp
mov
fldcw
adc
popf
add
dec
insb
shrl
repz
hlt
mov
cmc
adc
aad
push
adc
ss
loopne
add
add
addr16
dec
pop
push
or
push
cwtl
lds
out
dec
les
and
ja
addr16
test
mov
andb
pop
popa
cli
pop
mov
cmc
daa
inc
xor
push
aam
cmp
mov
mov
pop
push
popa
stos
in
shlb
les
pop
movsl
arpl
and
ret
je
iret
out
sahf
clc
sub
mov
or
xchg
addr16
repnz
xchg
mov
fsub
lods
and
cmp
lods
xchg
mov
sahf
xor
mov
cld
sbb
add
in
xor
pop
nop
shlb
pop
sbb
daa
ljmp
jo
pop
xchg
loop
sub
adc
ja,pt
mov
jae
add
pop
into
mov
pushf
jo
ljmp
mov
jmp
or
repnz
sub
add
int
sub
out
or
subl
sbb
cmp
add
arpl
mov
dec
sub
mov
sbb
push
adc
ret
dec
sub
pop
add
loop
add
into
inc
movsb
dec
mov
test
mov
pop
sbb
jmp
mov
leave
rcll
xchg
lcall
inc
push
jnp
lods
add
insb
inc
adc
jg
xchg
inc
push
inc
aam
mov
pop
push
bound
xchg
push
jno
fs
sbb
pop
adcb
ret
xchg
dec
stos
lcall
and
jg
mov
sbb
pop
sub
mov
insb
inc
or
sbb
or
int3
xor
sbb
mov
arpl
fisubs
in
psrad
aad
jmp
jmp
repz
roll
dec
push
arpl
add
movsl
pop
push
sub
std
or
or
out
daa
jp
sub
daa
cmp
mov
mov
insb
mov
sub
mov
fsubr
xor
int3
in
sbb
and
cmp
arpl
jns
mov
js
leave
jne
cltd
ret
jge
je
and
dec
data16
out
push
hlt
int
add
sub
push
fstpt
push
iret
or
sar
xor
jbe
das
fcmovnu
lret
pop
scas
mov
test
pop
mov
cmpsb
lret
push
mov
adc
adc
cmp
dec
int3
fidivrs
adc
sahf
adc
sbb
dec
or
lret
add
and
pop
or
push
mov
leave
les
mov
inc
pop
jb
fsubrs
movl
dec
cmpsl
sub
jns
pop
xchg
and
repz
push
push
or
roll
jns
jecxz
inc
mov
out
mov
inc
add
push
mov
fs
push
inc
leave
arpl
clc
inc
outsb
mov
sahf
push
pop
mov
xor
mov
lods
popa
adc
sub
jp
movsl
insl
pop
cmpsb
jge
push
cs
dec
and
xor
xchg
cwtl
dec
push
jge
push
lahf
dec
adc
pop
cmp
jb
jle
cmc
lret
inc
notb
pop
addr16
out
push
ret
dec
or
jbe
xor
push
dec
fs
dec
sbb
xor
out
sti
sbb
cmpsl
fiadds
movsb
adc
xchg
or
clc
repnz
outsb
pop
test
in
sub
push
push
adc
lahf
outsl
ds
xor
iret
imul
scas
or
jmp
rolb
mov
inc
mov
stc
mov
out
stos
shrb
in
inc
ljmp
pusha
pop
add
mov
lods
scas
and
sub
push
jecxz
test
or
mov
mov
out
popf
adc
mov
jno
fs
dec
lea
insb
jb
sbb
popa
mov
sub
aad
xchg
stc
xor
pop
sti
inc
ljmp
enter
scas
pop
pop
adc
dec
repnz
leave
dec
mov
outsb
xor
popa
pushf
sbb
add
es
test
sub
add
int
adc
and
cmp
sbb
arpl
inc
dec
sete
int
popa
push
mov
adc
hlt
or
sti
mov
mov
jecxz
ss
pop
out
bound
outsl
xchg
sub
stos
inc
jmp
enter
insb
pusha
imul
mov
and
test
mov
jns
aad
cmp
fnsave
push
pop
out
push
adc
in
or
mov
dec
mov
cmp
push
xchg
push
andb
test
imul
jle
push
fcompl
test
pushf
hlt
sub
andb
out
scas
mov
mov
repz
popa
std
aam
xchg
cmpsb
mov
push
mov
pop
inc
fdivrl
ljmp
or
movsb
cmpl
pop
test
or
enter
test
cli
fs
jo
add
push
ret
pop
mov
adc
aas
mov
mov
pop
or
loop
das
lods
xor
jb
jge
jp
pop
repz
sbb
stos
push
xchg
sbbl
sbb
daa
cmpsl
enter
push
or
or
pop
jno
scas
xor
repnz
scas
xchg
je
inc
mov
push
shrb
movsl
add
lahf
pop
decb
xchg
mov
call
mov
pop
shr
inc
insl
jns
fwait
stos
xor
fmull
and
sbb
fdivl
loopne
iret
stc
and
inc
scas
imulb
mov
cmp
lods
cwtl
movl
jno
push
xor
in
imul
mov
out
lret
cmp
pop
dec
int3
addr16
insb
loope
mov
icebp
mov
or
pop
and
mov
int3
adc
xchg
push
scas
das
cld
mov
cmp
push
pop
mov
cmpsb
bound
and
dec
inc
jbe
dec
push
sub
mov
dec
ljmp
inc
push
sub
add
mov
loop
push
scas
xor
xchg
lret
cltd
mov
ds
dec
push
push
xchg
adc
inc
jge
jno
mov
lock
and
sahf
insb
mov
sbb
dec
jg
sbb
xchg
imul
and
push
sub
sub
mov
jge
cmp
push
movsb
push
into
daa
jb
xor
and
or
add
cmpsb
aas
inc
scas
dec
pushf
mov
cmpl
insb
repz
mov
fsts
mov
push
div
jg
sub
scas
mov
mov
outsl
mov
push
pusha
test
dec
sbb
inc
or
cmpb
mov
mov
xchg
add
cmpsl
and
cmp
roll
jo
push
or
add
mov
or
adc
lret
pop
lcall
inc
cmpsl
sub
push
out
ja
or
jecxz
and
xchg
dec
and
lods
out
xor
sub
mov
and
pop
aas
ljmp
shll
je
mov
jne
push
and
jne
adc
fs
sbb
push
inc
fdivl
dec
loopne
inc
xchg
std
mov
popf
lock
inc
shrl
pop
aam
popf
ret
jno
je
mulb
jb
mov
add
rcl
pop
pushf
and
fcomps
sub
sub
add
imul
cmp
adc
pop
push
push
or
bound
fwait
imul
push
loopne
or
jno
pusha
pop
xor
aam
xchg
and
lds
and
hlt
jle
inc
push
pop
test
aad
leave
xor
je
das
scas
jmp
loope
mov
pop
xor
mov
lock
mov
or
mov
and
mov
cld
fsubs
in
loope
adc
add
sub
mov
and
sti
outsl
cmc
out
pop
lret
outsb
inc
ret
in
dec
lods
call
pop
mov
push
jle
fwait
sti
das
mov
xor
inc
mov
outsl
outsl
sbb
shl
sbb
arpl
pop
or
jmp
addr16
enter
movaps
push
mov
ljmp
sbb
in
pop
mov
push
cmp
jo
movsb
or
adc
mov
mov
ja
icebp
push
leave
cld
cmc
push
sub
insb
ret
pop
fsubrl
mov
jnp
data16
movsb
aaa
push
cmp
clc
and
or
mov
sbb
pop
out
and
or
mov
inc
mov
sti
mov
ret
inc
inc
aam
fs
mov
mov
jl
outsl
aaa
jo
loope
push
sbb
inc
cld
idiv
aas
or
lahf
out
enter
add
cmp
jl
pop
dec
inc
js
enter
xor
cwtl
xchg
mov
mov
popf
push
mov
adc
jg
xchg
fldcw
jmp
cmp
inc
cmp
popa
inc
jbe
int
jmp
or
and
jecxz
mov
pop
push
push
jp
sub
inc
sbb
dec
roll
mov
test
sub
cmpsl
sbb
fidivrs
mov
stos
enter
in
sub
je
and
pop
outsb
std
mov
dec
push
add
xchg
cmpsb
dec
loope
mov
pushf
sbb
pop
scas
stc
hlt
mov
and
mov
jae
mov
jns
pop
popa
test
cld
pop
ret
mov
cmpsl
jne
jge
sub
xor
arpl
adc
xorb
sbb
adc
and
xor
add
push
jmp
mov
mov
dec
in
and
cmp
pop
test
mov
sub
cli
iret
inc
imull
inc
push
fidivs
add
adc
rcl
mov
jle
aas
or
sub
scas
aad
fmuls
and
mov
icebp
ss
ss
loopne
pusha
and
loopne
xchg
mov
sbb
aam
int
jmp
dec
pop
shll
scas
jb
pop
and
repnz
loopne
mov
int3
and
push
loopne
add
cs
pop
adc
iret
sbb
rorb
sub
out
push
pop
and
jmp
inc
dec
mov
mov
fcomps
jae
mov
lds
loopne
push
xchg
lret
stc
or
push
dec
fwait
lods
loope
shrl
mov
mov
lret
jmp
inc
dec
jmp
mov
add
sub
jns
into
sbb
and
sbb
and
ret
push
xchg
dec
sbb
push
sbb
ljmp
jg
cld
push
movsb
subb
cld
cmpsl
lahf
jmp
sub
outsl
jp
or
xchg
cmp
xchg
out
mov
fdivrl
mov
ljmp
adc
and
add
aaa
xchg
xchg
rcrl
iret
shlb
andl
mov
push
jo
or
inc
orb
call
mov
xor
int3
lret
mov
cmc
pop
pop
and
movsl
pop
mov
or
mov
jge
stos
cmp
and
out
push
sbb
lds
bound
or
std
ds
in
movsl
add
cmp
inc
dec
popf
enter
ret
adc
add
rcrl
psubd
push
or
lcall
imul
andps
scas
ja
aas
cltd
mov
cmpsl
int
pop
pop
cli
mov
enter
addr16
ret
in
xchg
cmpsb
dec
and
scas
adc
loopne
mov
and
in
mov
gs
icebp
pop
les
mov
int3
adc
jge
mov
adc
inc
rcrl
mov
cmc
cmpsl
fnstsw
inc
sbb
mov
test
arpl
mov
inc
ds
sbb
xor
pop
mov
xchg
jmp
jp
divl
sub
int
add
mov
aam
pop
sub
mov
aaa
ja,pt
in
loopne
mov
or
gs
das
pop
or
push
sti
adc
jns
icebp
movsl
out
gs
lds
ret
sti
outsb
cltd
dec
lods
imul
push
iret
adc
jmp
jge
mov
jle
rcrb
aaa
jmp
stos
inc
lods
push
mov
cwtl
fcmovnu
xchg
dec
pop
inc
ss
aas
fyl2x
addb
push
imul
scas
sbb
add
fwait
push
sbb
insl
adc
push
jecxz
pop
xorb
enter
std
idivb
test
push
loope
inc
sbb
shlb
fistpll
xchg
mov
cmc
add
test
push
pop
add
and
push
xor
sub
xchg
push
fnstenv
das
out
xor
add
push
test
arpl
pop
push
and
cs
jp
adc
mov
add
add
cmp
out
fnstsw
dec
mov
ret
cwtl
cmp
cld
jbe
xchg
cmp
mov
movsl
fcomip
and
ds
out
mov
or
pop
lret
rclb
or
sbb
idivb
and
inc
mov
inc
in
jl
add
jo
and
mov
cli
loopne
xor
xchg
cli
mov
xchg
std
jbe
ret
imul
cmpsb
popf
dec
fisttpl
mov
pop
hlt
xchg
insb
or
fisttpl
addl
dec
and
stos
and
loope
inc
imul
nop
mov
lea
and
fdivs
sub
ja
popf
jl
lds
into
jecxz
jno
imul
aaa
mov
test
or
xor
test
push
jae
push
xchg
movsl
popa
sbb
clc
inc
mov
or
jne
push
cli
push
jg
sub
jne
xchg
lret
dec
aad
insl
jbe
outsb
inc
sarb
mov
movsb
aas
arpl
es
mov
sub
mov
test
icebp
inc
pusha
stos
mov
dec
dec
sbb
mov
sub
mov
mov
popf
and
nop
jnp
insb
push
frstor
divl
nop
aad
dec
add
or
outsb
sub
cmp
push
sbb
mov
push
push
xchg
stos
ja
aas
or
and
frstor
push
out
hlt
push
scas
das
int
pushf
mov
adc
roll
arpl
pop
call
leave
test
adc
sbbb
lock
loopne
mov
adc
jo
lahf
add
ja
mov
xor
mov
mov
jne
movl
mov
inc
and
or
stos
sbb
sahf
mov
lahf
in
negb
inc
mov
stos
jp
sbb
mov
jmp
jne
fs
and
out
negb
cmp
jns
dec
aam
loopew,pt
dec
jmp
xor
dec
clc
or
mov
adc
shrb
punpckhbw
inc
sbb
mov
jne
mov
jg
add
xchg
pop
lahf
mov
jecxz
in
divb
arpl
imul
loopne
aas
loop
cmp
xor
insl
fsubrs
pop
insb
hlt
in
cmp
fwait
nop
xor
xchg
lods
xchg
movnti
sahf
test
add
pop
fsub
or
outsb
add
bnd
mov
jge
cli
ret
stc
imul
sub
popf
stos
or
roll
pop
ljmp
testb
movsl
std
enter
in
aad
test
inc
cmp
xor
inc
ds
xchg
jnp,pn
jmp
xchg
movsl
fwait
rcll
fisttpl
xchg
test
or
push
pusha
cltd
je
adc
mov
in
xor
test
mov
aaa
or
mov
dec
or
dec
test
sbb
adc
dec
add
scas
fmuls
sarb
ret
adc
mull
xchg
outsl
stos
or
jbe
inc
pusha
jl
adc
adc
add
mov
sbb
les
and
xchg
add
xchg
jl
xchg
fidivrl
gs
jecxz
in
push
xor
push
mov
xchg
adc
jns
gs
jns
or
aaa
sub
sbb
add
mov
popa
cmc
ucomiss
pop
xor
mov
and
pop
loope
dec
pop
pop
mov
bound
and
and
inc
sub
pop
push
sub
jnp
int3
aas
jns
icebp
mov
mov
xor
sahf
repz
xor
je
mov
pop
jns
mov
clc
test
pushf
test
push
add
xchg
fnstcw
and
fstl
jge
test
cmpsb
push
jno
adc
dec
inc
xchg
xor
xor
jae
or
into
xchg
sub
leave
sti
inc
test
aam
ret
adc
push
dec
iret
inc
ret
push
ficompl
in
sub
enter
call
cmp
jne
dec
or
mov
dec
pop
ret
or
jl
xchg
mov
or
int
mov
and
xchg
cmp
add
sub
inc
fsubr
fmul
pop
subl
ljmp
adcb
mov
pop
mov
mov
and
arpl
push
call
jmp
daa
cmpsl
imul
mov
inc
enter
lock
push
fsts
shl
das
cmovbe
ret
mov
xor
sbb
xor
jb
sub
lock
dec
lahf
fs
aaa
mov
cwtl
insb
icebp
cmp
insl
mov
and
pop
xchg
xchg
xchg
hlt
and
mov
fwait
lahf
int
mov
rcrb
js
mov
or
jecxz
pop
fidivl
sbb
mov
xor
dec
adc
aaa
in
push
mov
imul
jnp
or
ss
mov
adc
sub
pop
out
dec
xlat
mov
push
and
mov
pushf
repnz
mov
call
push
xorb
popl
inc
mov
and
aas
in
sub
push
in
adcb
mov
leave
mov
xor
loop
movsb
mov
mull
scas
sbb
cmp
xchg
inc
mov
sbbb
jge
sbb
popf
out
mov
or
push
xlat
push
es
test
sbb
ret
ss
stos
das
movsl
out
mov
xlat
popf
fisubl
xor
mov
sub
pop
mov
mov
test
mov
push
fistpll
icebp
adcl
dec
movsl
inc
mov
mov
mov
lock
mov
cli
lock
subb
mov
stos
pop
or
mov
icebp
mov
cmpsl
pop
ja
dec
rorl
mov
mov
icebp
addl
out
sbb
xchg
outsl
in
sub
push
fstps
add
pop
pusha
add
aad
loope
into
jnp
xchg
sbb
mov
push
fistl
push
dec
push
push
cmp
iret
mov
jl
jb
lahf
mov
cmp
fdivr
pop
jmp
es
mov
in
lret
enter
out
gs
je
decl
loope
fcmovu
loop
adc
loop
insb
stos
cmp
je
mov
pop
push
and
aaa
adc
jns
mov
push
mov
in
rcrb
xchg
mov
ret
das
testb
dec
andb
arpl
fs
pop
in
sbb
inc
xchg
repnz
hlt
sti
out
add
or
jns
lret
dec
mov
adcl
inc
lret
pusha
cmp
pop
mov
decb
loop
mov
lret
dec
jnp
leave
or
push
xlat
cmpsl
inc
ljmp
lret
inc
push
data16
push
jno
sbb
repz
fstpl
pushf
sbb
nop
jb
mov
lods
lods
clc
int3
and
add
repnz
sbb
stos
mov
pop
push
mov
jnp
mov
mov
mov
sahf
pop
mov
aam
sub
mov
sbb
lahf
nop
cld
cmp
mov
shll
or
cmp
fistpl
inc
and
add
aam
es
rclb
fnsave
jbe
cmp
pop
adc
mov
ljmp
adc
pusha
jl
loopne
push
sub
push
ljmp
lods
xorb
out
jg
jg
sbb
insl
and
nop
rorl
shll
xchg
mov
xchg
je
mov
mov
fldpi
sub
and
push
xlat
cltd
subl
xor
repnz
cli
xor
push
mov
ficompl
mov
lret
pop
ljmp
add
xchg
xor
xor
jbe
out
sbb
sub
xor
xchg
fstl
enter
add
jb
jae
ret
xchg
sbb
sti
add
lret
ror
inc
mov
nop
dec
add
int3
out
scas
shlb
stos
mov
or
mov
or
imul
out
jmp
jge
nop
adc
or
popa
sbb
xchg
lret
sub
sbb
adc
out
push
leave
push
fbstp
jl
arpl
push
in
rcl
scas
xchg
stos
enter
jne
jo
jno
jnp
cltd
gs
pop
inc
rcl
daa
sahf
cmp
pusha
xchg
outsl
stc
inc
cmp
adc
push
mov
xor
js
movsl
add
rcll
or
jno
outsb
iret
pop
ffree
add
push
adc
mov
jg
ja
dec
mov
or
data16
ret
mov
adc
cld
call
mov
push
xchg
jl
cmpsb
test
aam
inc
jl
mov
jo
sub
pcmpeqw
sub
mov
loope
mov
jge
push
sub
dec
push
adc
fwait
add
add
lahf
mov
bnd
jp
xchg
jl
into
mov
jae
jne
sub
push
lret
mov
xor
mov
aas
out
sub
cmp
int
js
xor
and
call
mov
sub
out
sbb
aad
and
push
jle
ret
add
imul
into
pop
dec
xlat
or
xor
xchg
mov
xchg
xlat
or
in
mov
das
sahf
inc
cmp
add
adc
jmp
jg
push
add
cmpsb
jecxz
and
cmp
mov
arpl
push
testl
push
imul
popf
xchg
add
mov
adc
mov
adc
fildl
mov
pushf
adc
xchg
xor
loope
mov
inc
ret
jg
insl
enter
mov
out
adc
nop
pop
push
mov
shrb
scas
andb
enter
dec
jo
cmc
out
mov
xchg
fsubrl
mov
mov
popa
das
rclb
xor
scas
std
or
test
shlb
and
cmp
xchg
adc
enter
lock
into
outsb
mov
aaa
lods
insl
or
movsb
push
jo
cld
xchg
mov
lds
mov
les
sar
mov
mov
mov
adc
jle
jne
cmpl
scas
cli
xor
lret
in
je
repz
out
add
mov
mov
jmp
scas
cmpsl
sub
inc
jmp
insl
mov
xor
push
ficoms
add
and
test
lods
adc
adc
imul
xor
leave
adc
jb
daa
sbb
adc
mov
or
add
negl
dec
sbb
cmp
daa
cmp
imul
call
nop
cmp
mov
inc
cmp
stc
sub
ljmp
aam
lahf
push
out
jbe
sahf
mov
jle
xlat
jb
leave
lods
std
stos
ljmp
or
cmovp
and
mov
in
or
shr
mov
push
and
jb
mov
xchg
mov
dec
test
or
jecxz
mov
and
mov
stos
fisttpl
les
test
rcrl
xchg
push
jno
ror
bound
imul
loope
lahf
ret
mov
movsb
shl
pop
out
jle
data16
jl
jb
mov
dec
mov
mov
pop
outsb
mov
sub
aad
lods
test
dec
loopne
sbb
xchg
rdpmc
adc
movsb
xchg
sub
rcrb
in
xchg
fcoml
fs
lcall
ja
inc
outsb
xchg
call
xlat
fidivs
jne
mov
xlat
dec
je
daa
rcl
sarb
sub
enter
or
and
repz
ja
shll
xchg
pushf
inc
ds
dec
add
popf
addr16
and
pop
pop
fstp
sub
loopne
add
or
xor
jo
test
cmp
lcall
push
cmpsl
test
jnp
dec
jp
adc
outsb
jg
pop
subb
sbb
push
mov
dec
insl
in
cmp
icebp
call
out
mov
xchg
sbb
dec
mov
and
mov
jb
iret
push
decb
lods
jo
rep
loope
stos
inc
stos
sbb
mov
push
dec
cmp
rorb
arpl
loop
lretw
call
pop
lcall
xchg
mov
lds
shrl
lahf
mov
adc
cmpsb
sbb
in
js
jns
stos
push
mov
jmp
or
in
mov
xchg
int
fldcw
shr
imul
cld
test
add
cwtl
addr16
ss
push
cmp
imul
push
pop
xchg
mov
imul
fidivs
testb
test
mov
jmp
adc
adc
aas
mov
mov
dec
xacquire
fisttpl
movsl
data16
lds
out
push
mov
pop
xchg
lahf
xlat
xchg
mov
fcmovnb
cmp
or
xchg
movsl
dec
bound
and
jae
mov
sub
add
ffree
pusha
cmc
fmull
push
mov
or
nop
fwait
or
pop
js
push
and
test
out
push
rclb
pop
push
jb
add
cmp
out
mov
icebp
dec
test
mov
loope
or
sub
pop
cmpsl
in
sti
out
jae
hlt
popa
repnz
jo
pop
ret
lods
test
in
fidivl
mull
je
shl
xchg
xchg
cmpsl
mov
lret
push
sbb
adc
inc
popw
jno
cmp
pop
fs
cmpsl
mov
mov
xor
xor
add
or
cmp
sbbl
les
movsl
dec
lahf
lea
pop
jae
adc
mov
add
push
aaa
jg
in
xchg
inc
ja
xorb
push
daa
mov
sub
xor
fisubrl
mov
push
sub
and
push
loop
cmp
in
loopne
dec
dec
mov
push
movsl
mov
icebp
insb
fsubr
lret
cmpsl
and
inc
xchg
jp
push
imul
or
push
imul
xabort
sbbb
outsl
sti
jmp
aad
fnstenv
jl
pop
andl
jo
js
dec
rol
test
pushl
sbb
int3
adc
add
jg
rcrb
add
sub
xor
xchg
pusha
add
push
pop
test
sbb
cli
cwtl
xchg
mov
or
jno
test
xchg
into
pop
jb
xlat
adc
jmp
adcb
mov
adc
scas
dec
cmp
test
loopne
aam
mov
mov
sbb
shl
push
imul
in
or
mov
jb
inc
push
je
jmp
stos
cltd
mov
cmpl
push
and
dec
imul
add
push
and
pop
dec
pop
mov
add
int3
ss
cmpl
inc
es
call
imul
and
clc
fxch
lret
lret
out
or
mov
repz
and
xchg
pop
shr
js
push
xchg
or
cmp
push
dec
js
pop
test
fs
pop
jle
sub
stos
lods
inc
scas
inc
adc
pop
jno
cmpsl
fidivs
ret
dec
xchg
push
arpl
adc
sahf
xchg
fbld
hlt
pop
clc
arpl
and
push
dec
in
jle
mov
push
mov
add
mov
dec
sub
mov
vmwrite
sub
jl
push
mov
xor
and
cmc
cmp
out
mov
lods
mov
adc
mov
pop
imul
repz
jle
mov
xor
mov
adc
lods
adc
lea
dec
es
scas
pushf
das
mov
xor
lds
insl
imul
or
pop
or
mov
xor
mov
mov
inc
test
int
cmp
sbb
inc
sbb
test
and
dec
mov
outsl
in
cld
jl
xchg
dec
jae
jbe
or
inc
nop
outsb
sbb
jne
jl
leave
ljmp
and
add
addr16
and
push
das
mov
jmp
test
inc
fcom
lcall
xchg
dec
and
les
mov
fdivrl
pushf
loop
loop
out
into
push
dec
sub
rcrl
or
jbe
cmp
movsl
dec
adc
jnp
dec
dec
jbe
mov
pop
add
cmpw
jno
mov
daa
subb
test
lea
mov
inc
lea
stos
push
shll
loope
mov
nop
mov
push
fmul
mov
lcall
popa
lock
jne
add
dec
dec
inc
hlt
scas
mov
cmpsl
repz
cmp
inc
jg
call
inc
je
in
es
aam
lahf
xchg
mov
sbb
into
mov
dec
dec
jge
popf
mov
es
xlat
shrb
sbb
xchg
test
ficoml
mov
mov
ds
scas
mov
xchg
cmc
cmp
cwtl
jns
sub
mov
es
je
shll
xchg
repnz
mov
sbb
dec
pop
fsubl
out
lea
add
cld
lcall
mov
pop
adc
xchg
les
mov
aad
adc
js
rclb
cs
sbb
sub
repnz
fnsave
ds
inc
aad
and
cmp
leave
cli
xchg
xlat
cmp
lret
jne
add
stos
int
xor
outsl
shl
xchg
mov
xor
es
je
xlat
insb
mov
out
xor
mov
cmp
lods
xor
insb
loope
repz
loop
fildl
push
ss
cmp
mov
or
mov
mov
loop
pop
je
xchg
movsl
pop
adc
rcl
int3
xchg
pusha
std
ret
mov
ds
gs
cmpsl
in
push
sub
inc
mov
mov
std
jno
mov
pop
jmp
jle
notl
pop
inc
pop
jb
lcall
add
shll
pop
loopne
repnz
pusha
mov
rclb
and
insl
sbb
fistpl
xlat
mov
cmpsb
ja
sub
add
inc
std
pushf
negl
aad
jecxz
loope
mov
ret
dec
sub
stos
leave
bound
adc
cmp
adc
rcrl
cmp
cld
xchg
in
in
nop
dec
sbb
xor
fdivrs
add
cwtl
out
int
xchg
cmpsb
sbb
cmpsb
sub
mov
loopne
rolb
xchg
xor
sbb
sub
div
test
push
add
dec
loop
not
or
mov
jnp
les
std
inc
fldcw
pop
xchg
data16
xchg
lock
sbb
dec
ss
push
fstl
push
mov
add
rolb
leave
out
mov
xlat
imul
imul
mov
xchg
fiadds
sbb
sub
and
repnz
push
mov
dec
js
lods
add
push
div
xstore-rng
cmpsl
subl
mov
jp
push
inc
mov
sub
sub
and
push
or
mov
das
mov
push
xchg
xlat
mov
ret
ss
sbb
sbb
test
hlt
xor
mov
jg
mov
mov
jno
pop
cmp
lds
loopw
cmpsb
pop
and
ds
shll
mov
pop
xlat
pop
negb
push
xchg
cs
xor
lods
pop
out
dec
push
xchg
rcll
out
inc
popf
xchg
fdivrs
mov
cmpsl
sub
lods
fs
sti
sbb
dec
or
inc
aaa
imul
and
dec
rorl
inc
jp
arpl
cmpsl
jns
sbb
lret
sti
int
push
les
pop
jbe
imulb
mov
pop
cmpsl
aas
xor
adc
jo
imul
std
adc
clc
jl
lret
xor
add
xchg
insl
stc
scas
sarl
popa
push
mov
or
pusha
lock
in
mov
and
repnz
cmp
inc
mov
jl
rcr
dec
xorl
or
sbb
iret
out
sub
sti
pushf
testb
or
fimull
pushf
lds
lds
scas
ljmp
push
ja
and
jmp
jnp
fisubl
arpl
stc
jns
data16
inc
flds
sub
push
clc
je
test
movsb
cld
popa
xor
popa
adc
sbb
pop
outsl
int
mov
cmp
fwait
mov
cmp
fs
lret
adc
add
nop
outsl
and
mov
xchg
add
clc
cmp
stos
cwtl
jo
les
stos
mov
mov
cs
pushf
xchg
lds
or
sub
and
ljmp
int
inc
repz
cltd
xchg
in
inc
cmp
sub
push
jbe
dec
jg
aam
loope
sub
push
jle
fimuls
or
jo
nop
mov
and
cwtl
jo
mov
fwait
xor
mov
xchg
push
or
inc
stos
mov
jo
mov
or
addr16
push
sbb
and
dec
nop
mov
xchg
int3
aas
lcall
daa
xor
inc
dec
clc
into
fisubrs
mov
aas
insb
test
insb
mov
fs
push
ret
pop
adc
and
or
fiadds
adc
add
inc
ljmp
jae,pn
xchg
pop
sub
inc
jo
insl
rcr
sbbl
out
outsb
loopne
xchg
dec
outsb
adc
cmp
aas
pop
inc
push
and
stc
sbb
loope
push
push
mov
jnp
xor
fildll
xchg
iret
mov
enter
cmp
add
inc
mov
loope
es
or
jecxz
or
adc
sahf
lds
rcll
loop
stc
jp
mov
std
mov
dec
inc
lret
in
adc
push
push
push
ja
pop
pop
cmpsl
movsb
jle
jbe
stos
call
mov
mov
fbld
into
sbb
push
in
aad
out
mov
jle
outsl
add
mov
mov
mov
push
inc
fstpt
sub
inc
jp
pusha
pop
nop
mov
cli
fcomp
mov
mov
test
mov
push
lret
inc
or
clc
jecxz
dec
js
mov
into
sub
add
lret
imul
inc
les
mov
xchg
adc
test
ficomps
xor
sub
dec
sub
mov
xchg
xchg
popa
jecxz
mov
pusha
in
or
rcrb
xchg
ficoml
and
shrb
ret
out
loop
inc
adc
xchg
add
push
xchg
repnz
pop
sbb
jg
mov
add
jae
push
xor
ds
enter
ds
enter
lret
fdivr
je
pop
sub
sbb
fcoms
jg
mov
mov
cmpsl
roll
or
and
inc
aas
sbb
out
pushf
cs
dec
jle
jae
jno
inc
pop
mov
sahf
push
addr16
inc
mov
dec
test
mov
dec
sub
lret
pop
test
and
and
nop
sub
add
add
lods
or
incl
pushl
cmpsl
xchg
or
xor
or
icebp
mov
das
jle
jno
xor
sub
dec
sbb
ret
lret
fidivs
stos
sbb
stos
mov
outsb
or
and
mov
cli
adc
xorl
xchg
mov
dec
das
mov
xor
shr
jl
push
mov
xchg
mov
pushf
popa
and
subb
rcll
fadd
add
cmp
je
jmp
jns
mov
pop
je
fimuls
pop
pop
mov
jg
jge
dec
xchg
ror
scas
mov
inc
ret
or
sub
xlat
cmpsl
xchg
hlt
adc
hlt
fisubrl
dec
or
dec
cld
dec
push
repnz
aaa
xchg
xor
adcb
xchg
ja
data16
mov
jnp
pop
and
xchg
insl
fs
ret
cmp
add
cmp
xchg
inc
mov
fisubs
xchg
rorb
mov
xor
jle,pn
inc
push
lret
and
add
jp
lea
loop
out
add
mov
add
jp
hlt
movups
mov
mov
stc
xchg
cmp
in
insb
jp
pusha
loope
pusha
rcl
loop
pop
push
jp
inc
test
or
ds
pushf
inc
fsubrs
imul
fs
outsl
popa
sar
mov
stc
push
repz
pop
movsb
adc
sbb
and
hlt
jo
dec
shll
push
pop
shrl
cmp
mov
pop
mov
jge
pop
push
lods
adc
jne
inc
sarb
fmull
cltd
and
in
inc
sub
xor
mov
jmp
stos
imul
cmpsb
adc
insl
pop
or
nop
testb
mov
push
jp
sbb
test
dec
arpl
jb
push
jp
loope
cmp
and
xorps
and
filds
test
and
mov
jg
scas
add
xchg
mov
jne
inc
leave
and
pop
mov
dec
xor
lea
xor
out
and
xchg
add
xchg
frstor
push
incl
loop
or
mov
or
or
lea
dec
cmp
imul
cs
add
and
repz
das
push
fdivrl
push
filds
repnz
push
addr16
insl
mov
push
fwait
rcl
pop
add
mov
repz
cmc
sub
bound
pusha
sbbl
adc
testl
jo
mov
mov
iret
adc
sub
fsts
or
xchg
push
xchg
pop
dec
out
sub
iret
cs
inc
ss
dec
loop
lds
sbb
adc
repnz
repz
and
push
daa
xchg
push
or
fwait
mov
mov
mov
or
imul
jl
xor
cmp
in
jne
data16
lds
out
shrl
push
or
push
push
mov
pop
adc
test
shlb
popa
sbb
jecxz
jo
inc
addl
dec
sbb
sbb
xchg
sub
mov
enter
and
mov
inc
add
xor
dec
mov
mov
add
cmp
push
sub
ljmp
lds
sbb
push
inc
pusha
out
pop
loop
call
sti
xchg
es
cmp
jmp
cmpl
mov
into
add
adc
imul
and
and
lods
lds
adc
push
sar
stc
js
sbb
icebp
int3
mov
mov
hlt
mov
jle
and
pop
mov
aaa
lahf
or
ja
mov
xchg
movsb
inc
cmp
dec
push
dec
ficomps
lods
jns
push
jne
xchg
hlt
cmp
mov
dec
push
ds
xor
cmc
bound
push
flds
xchg
xor
addr16
xor
std
xchg
lods
je
mov
test
add
jmp
xchg
pop
pop
lods
jb
or
mov
xchg
jg
or
imul
adc
xor
imulb
push
sbb
inc
sti
inc
dec
add
mov
fildl
dec
cmp
rclb
push
rolb
nop
ds
jge
add
loop
out
loop
cmp
ret
lret
mov
add
or
jnp
lock
jl
push
dec
sbb
push
aas
dec
lahf
les
sub
les
inc
or
jbe
jnp
jns
cmpsl
fcomip
or
or
xchg
mov
pop
daa
mov
xlat
cmp
scas
in
negb
jb
sarl
dec
push
test
iret
mov
lret
sbb
pop
hlt
push
mov
stos
je
mov
mov
jg
faddp
or
sub
inc
lcall
aas
inc
cmp
fwait
pop
loopne
nop
pop
xchg
sub
or
mov
insb
pop
jg
std
imulb
xchg
ficompl
push
mov
add
movb
hlt
imul
sub
lea
out
idivb
aad
adc
mov
filds
dec
jp
out
cld
xchg
loope
clc
js
or
pop
fwait
call
cmc
cmpsl
dec
and
icebp
insl
nop
je
pop
lret
push
sbb
ret
addr16
cmp
dec
dec
out
adc
push
stos
lea
nop
stc
int3
int
dec
cld
mov
push
mov
cli
or
jp
pop
mov
insl
cs
insb
stos
loop
insl
mov
mov
and
dec
fwait
push
lcall
scas
lcall
imul
mov
jge
fnstenv
je
add
lret
cmp
mov
pop
xlat
iret
cli
adc
jg
jne
dec
gs
pop
imul
icebp
addb
lret
std
mov
jmp
inc
iret
add
inc
fimull
decl
pushf
jg
popa
mov
mov
sahf
fsubrl
lea
adc
lret
ljmp
clc
add
in
sbb
ret
sbbl
lock
mov
add
popf
movsb
and
xchg
jle
inc
jmp
mov
mov
sub
mov
fistpl
and
jo
loope
mov
sub
sbb
xor
idivl
mov
jae
or
sahf
rolb
sub
xchg
outsl
fiaddl
dec
fbstp
stc
and
xchg
aas
pop
dec
test
es
cmc
cwtl
xchg
out
ja
xor
stc
jno
and
push
sti
mov
dec
pop
leave
adcb
roll
cwtl
int3
sbb
add
mov
hlt
sub
test
push
or
fildll
inc
fdiv
pusha
sbb
xchg
adc
fwait
dec
sbb
dec
mov
and
cmpb
dec
hlt
cmpsl
push
sub
inc
cltd
dec
scas
cmp
addr16
iret
lods
test
test
loopne
inc
jbe
or
cmpsb
scas
inc
adc
cmpsb
sti
mov
das
call
cmp
jle
jp
pop
sub
fsub
inc
jp
lds
out
pop
out
push
fdivrs
and
je
mov
push
add
xchg
add
pop
stos
cmc
pushf
repz
mov
jmp
lods
mov
lock
xor
push
jp
mov
push
clc
mov
stc
sub
out
push
cld
push
cmp
push
mov
mov
aaa
aaa
pop
cmp
and
sbbl
or
jb
mov
jne
mov
mov
jb
mov
gs
pop
int3
sub
popa
sub
lock
aam
mov
sub
cmp
jmp
cmc
add
lock
imul
repnz
mov
xchg
nop
sub
daa
push
push
iret
loope
test
shrl
mov
rcrb
sarl
jb
incl
rol
andb
mov
or
adc
pop
loope
pop
cmp
xchg
aam
xchg
push
or
insl
inc
xchg
pop
jmp
gs
rcrb
stc
mov
sub
shl
hlt
rclb
cmp
mov
mov
daa
arpl
or
aas
nop
mov
aam
insl
pop
adc
stos
lret
add
mov
mov
sahf
pop
mov
lock
add
jnp
in
in
xor
mov
rol
rcrb
fs
fsubs
and
mov
orl
push
inc
and
xchg
into
sbb
and
cmpl
lret
pop
inc
inc
dec
adc
sarb
cmp
mov
movsb
addl
dec
adc
cwtl
and
jno
imul
movsl
mov
inc
adc
int3
daa
or
adc
add
das
mov
push
sbb
add
mov
push
nop
and
or
adc
fsubl
or
push
scas
inc
test
scas
pop
add
add
xchg
in
outsb
cltd
loop
xchg
add
sub
adc
pop
scas
test
fwait
shrb
addl
mov
or
shrl
jle
dec
add
jno
mov
in
int3
lahf
ret
dec
lret
xor
jmp
push
mov
addl
aas
sub
push
in
aas
sbb
out
fistpll
cld
int
int
sub
push
daa
sub
push
mov
fcomi
idivl
lods
adcl
mov
je
sub
or
arpl
xchg
xlat
jmp
jmp
xor
pop
push
lds
inc
fcmovbe
iret
stos
ret
nop
adc
mov
in
and
sub
sahf
leave
cmc
stos
mov
push
std
adc
lcall
and
and
adc
inc
jmp
popf
mov
push
inc
iret
call
icebp
lds
add
inc
dec
pop
xchg
cmp
popa
repz
shrl
icebp
pop
icebp
out
loopne
and
loopne
push
es
and
mov
push
cwtl
test
stos
clc
pop
inc
in
adc
xchg
add
and
jecxz
adc
push
aad
xchg
lea
mov
stos
sbb
shl
inc
mov
jmp
pop
mov
xor
adc
psrlq
xchg
push
lods
dec
les
xchg
out
arpl
jne
or
and
loopne
movsb
ret
test
and
and
inc
test
fisttps
test
and
mov
aad
sbb
lock
aas
movsb
pop
add
out
xor
inc
std
and
movsb
test
ljmp
lods
dec
dec
inc
xchg
push
xchg
xchg
fnstcw
dec
add
add
mov
int
xchg
dec
mov
lret
je
loopne
jmp
push
jge,pt
adc
push
xor
movsl
pop
sub
in
fidivs
sahf
notl
cwtl
bound
sub
pop
mov
sub
rcrl
hlt
clc
xchg
imul
cs
stos
nop
adc
mov
dec
dec
xor
pop
xchg
dec
idivl
xor
in
in
push
fxch
mov
imul
add
pop
int
cmp
or
mov
nop
pop
hlt
xor
std
fistpll
mov
mov
es
ljmp
xor
push
mov
push
jecxz
popa
punpckhdq
std
inc
dec
out
repnz
dec
cmc
rorl
push
cmpsb
ficoms
test
fbld
test
sbb
lahf
loop
jle
hlt
int3
out
jg
dec
lds
xchg
sub
stos
int3
mov
xor
jle
mov
pop
nop
ror
aam
fxch
xchg
fidivrs
cwtl
inc
sbb
jge
ljmp
in
imul
ja
jl
enter
xchg
sub
call
clc
jecxz
and
pop
pop
jg
mov
cmp
sub
xor
leave
pop
test
jge
call
jb
mov
sub
sbb
je
xlat
mov
mov
fidivrl
daa
sub
mov
push
mov
or
xchg
or
daa
hlt
mov
jo
aad
lods
cs
sub
cmp
subl
das
mov
mov
add
notb
int
adc
push
adc
sub
ret
shl
call
adc
fs
loopne
ds
lcall
sbb
fdivrl
dec
mov
loope
sub
or
test
andl
mov
jg
cs
and
aaa
outsl
shlb
lods
test
je
cs
ret
push
xor
push
mov
data16
add
pushf
and
sahf
mov
pop
cs
pop
in
mov
int3
je
cmpsl
pop
repz
push
fs
jmp
setns
xor
push
clc
lods
or
shlb
out
jecxz
movsl
into
insl
call
cmp
and
lods
lret
push
adc
into
cltd
jmp
jne
out
fwait
push
push
enter
dec
mov
adc
mov
jle
test
xlat
mov
push
das
ds
mov
cld
aaa
dec
push
fs
into
jbe
cmpl
cmpb
pop
std
xchg
les
dec
or
bnd
jl
jb
data16
sti
pop
loope
pop
or
and
mov
dec
dec
movsl
imul
mov
inc
xchg
addr16
loopne
cmp
out
shl
pop
gs
lret
and
test
push
sahf
das
stos
sbb
xchg
jecxz
pop
sbb
gs
icebp
push
repz
inc
jb
sub
mov
scas
mov
sahf
mov
xchg
loopne
adc
inc
dec
shr
out
cmp
mov
adc
push
dec
add
mov
sub
ljmp
or
imul
jl
js
xor
loop
mov
aas
jg
adc
mov
fdivs
xchg
dec
int
iret
inc
shl
and
sbb
leave
mov
fistpll
cmp
adc
push
and
out
aas
mov
and
sub
cmp
add
and
daa
sbb
inc
repz
cmpsl
in
mov
sub
fstpt
test
mov
add
mov
test
imulb
pop
push
adc
mov
das
pop
jmp
mov
push
xchg
dec
sbb
xlat
jl
in
jle
sti
jb
mov
sub
ss
push
ljmp
push
testl
inc
sub
rep
fsubrl
cltd
and
leave
pop
jns
rcl
xchg
lock
es
xor
rcr
lds
dec
sbb
jbe
daa
pop
cmp
sub
mov
jae
dec
jnp
scas
push
hlt
push
or
push
je
out
daa
lock
sahf
pop
icebp
pop
dec
push
add
xor
aad
dec
xchg
mov
daa
sbb
push
repz
xchg
xor
loop
pop
arpl
jnp
test
inc
jb
daa
add
sub
lock
lret
sub
out
push
imul
inc
ljmp
push
loopne
jnp
adc
and
jb
jne
and
mov
insl
pop
stos
cltd
pop
loopne
bnd
push
dec
cwtl
leave
add
or
add
addl
xor
loope
adc
mov
jge
xor
cmc
loopne
pop
cwtl
lds
je
cmp
jns
push
pusha
mov
mov
sub
into
fstpt
mov
popa
lcall
imul
sbb
mov
pop
xchg
add
gs
or
sbb
lods
mov
mov
loope
cmpsl
cwtl
rcrl
dec
mov
cmp
lock
sub
cmp
addr16
loopne
std
lock
or
in
sub
mov
xor
push
pop
std
cmpsb
xchg
or
mov
in
pop
or
lcall
popa
pop
dec
lret
aaa
sub
or
mov
mov
mov
mov
jae
xorl
mov
jno
xor
mov
jae
or
sub
mov
lds
clc
outsb
out
mov
or
fnstenv
in
icebp
call
cmp
stos
outsb
fistps
in
jns
cltd
sbb
jnp
notl
xchg
ja
lods
int
pop
xor
jg
je
mov
sbbb
fwait
jl
into
lock
flds
pop
aas
jmp
mov
fwait
xor
aas
adc
sbb
jl
xor
or
push
add
dec
and
jge
dec
xor
adc
les
add
mov
push
lret
pop
cmc
pop
sub
mov
xchg
ljmp
cltd
lock
or
iret
loopne
lahf
test
pop
fnstsw
enter
pop
sbb
lds
inc
and
out
jp
inc
div
mov
pop
mov
insl
or
shl
mov
jo
js
stos
cmp
ret
xchg
in
cmp
add
hlt
or
sbb
fyl2xp1
pop
fisubrl
mov
pop
data16
aam
jb
fwait
loopne
stos
testl
mov
outsl
cli
fsubrp
cmp
clc
hlt
shlb
leave
out
push
sub
push
roll
add
cmp
dec
jle
fcompl
xor
mulb
mov
adc
inc
adc
xchg
into
enter
jns
jns
rcll
insb
addl
movsl
repnz
in
fnsave
out
cmp
cmp
inc
enter
cmp
js
dec
adc
sahf
mov
das
sahf
lret
jecxz
pop
mov
jmp
in
aam
and
leave
testl
paddd
test
or
dec
sbb
xchg
xor
jmp
add
or
pop
sub
int3
xchg
adc
das
fmull
push
inc
cmp
out
es
mov
sub
je,pt
in
in
xchg
lock
pop
loope
dec
pop
in
dec
sub
enter
mov
add
push
das
lods
in
js
sub
xchg
xchg
lods
incb
dec
mov
pop
dec
pfrcp
sbbb
or
xchg
mov
sahf
cmp
cmp
imull
test
dec
cmpsb
adcb
xor
cli
push
inc
pop
or
pop
adc
cwtl
push
lcall
or
in
jle
push
xchg
lcall
adc
fstl
dec
mov
int3
pushf
cs
jo
mov
xchg
sub
pop
sahf
nop
jo
pop
out
sysexit
xor
xor
pop
pop
inc
push
imul
mov
xor
lock
jp
sub
fsub
inc
leave
and
jns
sbb
stos
flds
sti
aam
iret
out
fcmovbe
add
scas
jge
rorb
mov
lods
data16
xchg
fbld
lret
jl
mov
jp
sti
ja
lock
iret
notl
mov
jmp
or
cwtl
jns
movl
test
in
call
les
dec
arpl
rol
aam
cmp
fidivrs
jbe
pop
dec
xchg
add
dec
or
cmpsl
mov
mov
adc
lds
push
push
mov
pop
pop
cmp
rcll
ficomps
xchg
jge
insb
ds
cmpsb
mov
fcmovu
je
sub
ja
add
pop
or
aam
pusha
adc
mov
or
mov
call
clc
imul
pop
mov
call
arpl
mov
cmp
out
insl
cwtl
xlat
popa
repz
mov
imul
sbb
sti
cld
mov
jle
orb
test
mov
sarb
in
ret
or
inc
mov
or
outsb
nop
iret
mov
call
mov
int
pop
fnstenv
sbb
inc
bound
js
out
adc
ret
nop
mov
jmp
testl
punpckhbw
enter
rcll
idivb
cli
jnp
enter
sbb
pop
in
into
xchg
fxch
inc
mov
jo
pushf
add
jge
pop
ljmp
call
pop
mov
mov
jl
enter
pop
dec
cmpsb
xor
or
or
xchg
mov
add
orl
lea
movsl
mov
jne
std
loope
jnp
es
mov
movsl
adcl
repnz
out
daa
xchg
push
push
fsubs
mov
cld
pop
mov
out
xchg
insl
repz
imul
xchg
test
subb
jnp
mov
enter
aas
dec
imull
addr16
pop
xchg
ret
lods
push
mov
or
add
cmpsb
lock
inc
mov
popl
xor
jb
lret
ficompl
sub
inc
jnp
dec
das
cmp
andb
xor
cmp
aad
stos
xlat
mov
jnp
fistps
arpl
push
xlat
xchg
mov
mov
lahf
cs
test
add
loop
fcmove
dec
dec
inc
mov
pop
jb
mov
addr16
ljmp
add
scas
pop
sub
xchg
xor
arpl
insb
nop
in
lret
repz
mov
or
mov
xor
mov
xchg
lret
repnz
movsl
es
movsb
add
mov
mov
dec
adc
popa
jne
sbb
mov
js
mov
subb
out
fs
imul
or
mov
into
hlt
mov
out
pop
hlt
push
adc
insl
xchg
pop
lahf
movsl
cmp
mov
jae
mov
xchg
lods
popf
jno
jecxz
mov
dec
fistps
sbb
cmp
into
adc
mov
xchg
in
sbbl
out
jmp
test
and
mov
in
and
jl
mov
std
inc
dec
add
lock
ds
jmp
dec
jp
stos
xor
add
sbb
xchg
xchg
dec
pushf
cmp
ljmp
insl
mov
ror
jge
sbb
and
add
mov
vaddps
cmpsb
cmp
sub
or
and
mov
loop
xchg
jb
push
aas
insl
js
mov
out
in
adc
push
sbb
lock
test
dec
lods
push
or
and
xorl
push
dec
adc
cltd
sbb
jb
cmp
ret
repz
loop
mov
push
push
iret
sbb
sbb
and
nop
pusha
popf
sbb
aad
push
stos
ljmp
add
daa
push
jne
leave
sub
es
idivl
nop
cwtl
xchg
adc
and
sub
test
in
insb
adc
xor
push
mov
or
loopne
sbb
jl
rcll
xchg
sbb
movsb
out
mov
fsubrl
add
testb
lock
lahf
inc
or
inc
frstor
fwait
iret
shr
je
test
mov
stos
aad
cltd
sub
xor
add
jp
dec
dec
repz
aam
jo
jp
or
shrl
in
sub
test
push
jecxz
aad
loopne
in
jp
sbb
in
dec
jb
and
dec
xchg
xchg
push
int
std
jle
xlat
mov
fimull
mov
add
int
mov
out
push
adc
aas
mov
mov
add
mov
sub
mov
stc
add
pop
cmpsb
js
or
test
dec
sub
adc
iret
inc
or
jae
sbb
arpl
idivl
cvtps2pi
sub
or
sbb
mov
loopne
arpl
nop
mov
and
and
pushf
arpl
jp
pop
mov
jge
push
shll
pop
aam
mov
cmc
ret
cmpsl
hlt
jno
outsl
pop
jne
and
xlat
jmp
push
bnd
pop
pop
or
fldl
mov
pop
add
out
insb
cld
fildll
push
in
lret
xchg
cmc
and
or
xor
mov
jecxz
mov
cmp
out
pushf
jbe
lods
stos
and
aad
call
sub
fcompp
in
shrl
ds
mov
push
and
ss
cmp
lahf
inc
outsb
loop
jae
data16
enter
sub
aaa
in
cmpsl
adc
and
xchg
sbb
sbb
fistpl
aad
dec
push
hlt
cmpsb
jnp
out
test
das
jle
mov
mov
mov
push
lods
push
sub
lea
mov
cmc
insl
inc
sub
pop
and
push
pop
movsb
pop
xor
stos
addr16
jg
dec
scas
or
je
push
addr16
inc
sarb
xlat
fdivrp
div
movsb
jne
and
out
add
mov
out
call
jecxz
lahf
cmp
jbe
mov
adc
loop,pn
mull
movsl
shll
inc
jb
lods
add
cwtl
or
addr16
push
fidivs
int3
mov
es
pop
add
pop
mov
xor
out
pop
push
add
jg
fistpll
jg
nop
xchg
xchg
lock
cmpsb
and
fnstenv
es
das
fnstenv
dec
inc
xchg
cmpsl
mov
es
adc
outsb
sarb
xchg
xor
xchg
dec
push
cmp
aam
inc
xchg
lods
or
mov
cmp
data16
fmuls
xor
mov
sbb
or
inc
jno
push
aas
mov
dec
sbb
inc
test
jo
jbe
inc
push
inc
jno
mov
mov
jmp
xchg
pop
xchg
mov
mov
mov
adc
repnz
loope
mov
sub
xchg
xchg
fildl
adcb
add
jmp
cmp
cs
ud0
mov
cmp
popa
or
jmp
inc
rorb
stos
les
or
fwait
in
mov
mov
cmc
stos
xchg
push
nop
scas
or
addr16
rcrl
insl
imul
aad
movsl
sub
adc
jns
outsl
arpl
xchg
sub
test
inc
aaa
mov
clc
dec
test
out
mov
nop
mov
insb
fwait
inc
incb
jge
jno
sub
loop
xor
xor
roll
clc
mov
clc
jmp
or
mov
inc
jnp
mov
popf
push
movsb
sub
dec
jl
sbb
mov
mov
jecxz
loope
sub
xchg
and
stos
aas
ljmp
mov
mov
adc
frstor
faddp
sbb
and
aam
lret
out
mov
enter
cltd
in
xor
dec
dec
push
int
ret
add
cltd
add
fcmovnb
call
push
shr
mov
cmp
mov
mov
lock
and
cmp
adc
add
inc
loopne
inc
nop
pop
stos
popa
xchg
lcall
mov
sub
mov
add
shr
xchg
ds
imul
repz
imul
lcall
mov
push
sbb
adc
mov
repz
inc
jp
push
test
into
lods
push
je
mov
inc
mov
loopne
icebp
push
pusha
push
mov
outsb
jb
mov
dec
pop
sbb
xchg
lahf
test
cmp
mov
cs
in
icebp
lahf
or
and
lret
jle
or
push
mov
pop
jno
push
inc
shlb
fs
rcrl
lock
ljmp
mov
inc
add
test
repnz
mov
pop
fwait
push
and
or
xor
mull
je
xor
js
outsl
es
cmpsb
js
or
adc
jg
jg
add
fdivs
loope
negl
int3
fcoml
hlt
imul
and
repnz
mov
fsubs
mov
cmp
out
push
mov
or
push
and
or
cmp
sbb
push
push
das
out
sbb
cmp
xor
mov
push
movsl
jecxz
lods
bound
pop
inc
daa
push
jecxz
sub
lods
cltd
cmp
xchg
mov
hlt
push
push
popf
cmpsb
dec
aas
push
xlat
shl
ret
sahf
stc
subb
sbb
jge
inc
ds
shlb
out
ror
push
mov
bound
jne
rol
cmp
dec
sub
add
decl
or
je
cld
out
cwtl
pop
sub
clc
adc
inc
sti
out
dec
jle
dec
inc
lods
mov
imul
adc
dec
mov
sbb
xchg
call
pop
adc
and
mov
inc
ss
pusha
mov
or
mov
stc
mov
mov
test
xor
pop
lods
sti
mov
daa
and
out
add
int3
and
jl
orl
in
pop
push
dec
sub
hlt
nop
lret
sbb
imul
sbb
stos
add
in
aas
sub
mov
outsb
and
mov
cld
mov
push
lret
jge
cli
mov
mov
push
sub
pop
mov
sub
aad
pop
push
add
fstpl
mov
lahf
xor
push
jbe
xchg
ficoms
mov
cmpsl
xchg
stc
or
cmc
mov
jp
sti
pop
pusha
and
mov
sub
pcmpeqd
or
xorl
adc
pop
out
adcb
aas
jns
enter
aam
call
scas
das
dec
mov
jbe
and
or
and
xchg
or
call
insl
push
and
xor
mov
decb
mov
add
add
dec
cmp
ficompl
mov
pop
incb
inc
push
fs
xchg
test
ret
push
testb
and
and
cltd
sbb
adc
xchg
adc
inc
sub
adc
into
cmpsb
cli
aas
repz
out
outsl
repnz
imul
jae
stc
leave
add
inc
rorl
into
cmp
xchg
jg
xchg
pusha
sbb
xchg
pop
fcomps
inc
cmp
fwait
or
outsw
sahf
or
adc
int
inc
daa
jecxz
push
jae
lods
test
dec
push
mov
cmpb
adc
das
stos
fldenv
push
imul
loop
mov
pop
jne
loopne
call
xchg
int3
jmp
das
xor
mov
ss
dec
gs
sub
add
jae
js
adc
sahf
jmp
stc
mov
mov
mov
adc
or
inc
in
push
mov
pop
adc
or
je
repnz
or
cwtl
push
mov
movsl
push
shlb
sub
xor
lds
adc
adc
call
ret
mov
jge
adc
lahf
xchg
dec
aam
xchg
mov
or
and
cmp
sbb
cwtl
std
rorl
pop
dec
jg
in
sbb
pop
and
or
fistpll
rcrl
add
push
xor
stc
fcomi
xor
xchg
dec
and
clc
xor
cmp
imul
xchg
dec
repnz
jmp
outsl
push
neg
in
add
into
lret
adc
lret
pop
sti
cld
aam
dec
mov
cmp
add
and
pop
hlt
decb
negb
push
fldcw
xchg
cltd
mov
and
daa
add
sub
repz
ss
imul
jns
popf
scas
nop
imul
mov
test
in
les
adc
push
mov
cmp
jno
frstor
repnz
movsb
xchg
imul
movsb
stc
sbb
enter
ret
and
pop
test
xor
imul
xlat
mov
jbe
cld
or
out
push
lds
imul
mov
enter
dec
jns
movsl
sbb
xor
ja
cmp
and
and
add
cmc
mov
leave
cmp
sbb
ljmp
or
in
mov
mov
pop
cwtl
adc
push
jne
and
cltd
pop
or
cmpsb
shr
lret
and
mov
repnz
mov
out
mov
mov
call
mov
push
inc
nop
sbb
push
add
nop
addr16
lods
mov
movl
add
and
out
pushf
mov
pop
push
loopne
pushw
jle
pop
enter
mov
mov
jb
mov
pop
stos
test
les
pop
cltd
jae
add
ret
cmpsl
imul
dec
imul
sub
inc
inc
fisubrl
ret
jo
sub
leave
lahf
mov
push
and
mov
pop
mov
xchg
fwait
insb
mov
dec
jl
in
sub
jno
repnz
cmpsb
add
sub
movsb
or
jmp
hlt
xchg
mov
cmp
fdivrs
and
iret
sub
cmp
pop
pop
mov
sub
lea
mov
lahf
push
add
ds
fiaddl
loop
jo
or
xchg
inc
and
shlb
js
or
jo
cmp
ljmp
xchg
adc
jns
mov
mov
add
out
xchg
fimuls
mov
imul
sub
xor
cli
xor
hlt
adcl
pop
loopne
rol
outsb
stos
std
fidivl
bound
pop
jb
jecxz
ss
jbe,pn
and
mov
into
subb
pop
mov
int
adc
lods
test
mov
mov
setge
inc
mov
test
loop
xchg
lret
clc
ja
cmp
add
dec
lea
add
mov
mov
notb
pop
insb
stc
dec
frstor
dec
movsb
repz
or
insb
std
cmp
pusha
loop
mov
in
out
jge
xor
adcb
jmp
inc
jnp
xor
xchg
repnz
jb
mov
lret
xor
ljmp
push
xchg
xor
mov
xchg
pop
mov
dec
outsl
inc
pop
jle
nop
dec
imul
push
or
out
in
sbb
push
in
rcrl
mov
enter
push
lret
pop
dec
sub
dec
add
pop
fildl
enter
fmuls
push
loope
sub
mov
add
out
push
xchg
enter
into
sub
hlt
xor
adc
dec
push
es
aad
mov
outsl
and
stc
inc
inc
xchg
jo
cld
data16
xchg
pop
sbb
mov
mov
fdivl
ficoms
lods
aad
mov
add
or
aaa
sub
add
mov
in
jne
pop
xchg
adc
adc
pop
mov
je
test
jo
dec
jg
imul
push
inc
movsb
fisubs
in
cld
lock
sarl
xor
fcompl
jl
mov
or
fldl
pop
dec
xchg
cwtl
xchg
aad
push
sub
jle
dec
push
cli
or
lock
cwtl
call
outsl
mov
gs
hlt
add
cmpsl
insl
and
imulb
or
mov
popa
nop
leave
inc
lahf
mov
xchg
test
aam
mov
div
pop
pop
in
fwait
mov
add
mov
pop
inc
scas
cmp
cmp
lock
cwtl
stos
dec
lods
cmp
lock
in
xchg
sub
lods
lods
push
nop
mov
and
sbb
adc
xlat
lcall
add
std
jecxz
pop
inc
sbb
pusha
pop
push
push
lea
mov
push
repz
lods
ljmp
shl
fdiv
addr16
inc
lods
inc
pop
jmp
lcall
je
mov
xchg
mov
fdivs
hlt
in
mov
xchg
push
aad
dec
push
or
iret
aaa
stos
xchg
adc
and
jecxz
mov
sbb
inc
repz
je
and
orl
lcall
stos
inc
dec
mov
lods
stos
jbe
and
mov
popw
and
jecxz
loop
xor
ret
in
sti
cltd
inc
jo
les
fadds
push
mov
or
dec
dec
inc
cmp
test
jg
sbb
pushf
xlat
arpl
bound
loopne
cld
jmp
jne
lock
sti
cmp
fdivs
add
mov
pop
addr16
mov
add
mov
xchg
daa
lcall
sti
mov
lcall
hlt
fildll
pop
sub
push
clc
mov
fists
jg
int
xlat
mov
mov
popa
imul
add
adc
les
out
fstl
pop
insb
lret
pop
mov
adc
faddl
stos
mov
and
cmpb
jbe
inc
pop
pop
pushf
cmp
inc
in
fxch
adc
not
jne
pop
cwtl
inc
dec
int
mov
or
test
mov
cwtl
popa
outsb
ret
push
mov
cmp
andb
fisubl
mov
jns
mov
dec
and
ja
mov
and
int3
mov
pop
jmp
mov
adc
jge
lea
pop
xchg
negb
loope
ss
cmpsb
divb
add
adc
mov
xor
adcl
sbb
add
cmpsl
aam
insl
mov
xor
xor
aam
mov
add
fisttpl
shlb
in
dec
xchg
xlat
xchg
jmp
leave
sahf
sbb
sbb
clc
inc
add
arpl
adc
scas
jl
inc
jge
ret
push
add
xchg
movsl
imul
mov
lret
pop
fcomi
ljmp
pop
leave
int
movsl
mov
push
jecxz
xchg
sbb
jnp
xor
lret
pxor
xchg
jle
rorb
js
repz
push
jnp
cld
xor
pop
dec
sub
ret
jp
lds
sbb
mov
lods
pushf
pop
lods
inc
fldcw
inc
cwtl
dec
ss
and
inc
cld
mov
repz
das
pop
push
cli
scas
sbb
dec
push
stc
mov
or
and
mov
mov
jnp
gs
addr16
aas
jge
push
insb
icebp
pushf
xor
push
mov
js
std
dec
add
int
adc
cmpsb
rcll
pop
sub
out
js
jo
sbb
cmpb
jp
adc
cmp
repz
mov
jge
sti
sub
icebp
std
mov
pop
mov
mov
std
or
sahf
nop
mov
sub
sbb
xchg
lret
mov
stos
lcall
jmp
loopne
jecxz
xor
dec
mulb
bound
fwait
sahf
sub
fcoms
cmp
cmp
dec
xor
mov
xchg
mov
mov
lret
xchg
and
dec
xchg
adc
aas
mov
bound
ljmp
cs
cmc
mov
push
jb
mov
es
loopne
pop
daa
insl
imul
push
push
les
sub
js
mov
clc
jne
jne
ror
mov
mov
pop
mov
das
jge
in
nop
cwtl
outsb
outsl
sbb
icebp
pop
sbb
push
loopne
and
xchg
outsl
loopne
sbbl
repnz
test
and
fisubl
imul
ficomps
movsb
and
lods
lret
and
adc
rol
mov
dec
inc
fwait
xor
mov
ss
mov
pop
aas
xchg
aas
sar
push
push
mov
push
or
rcr
sarb
ffree
adc
movsb
mov
cmpsl
add
js
das
jmp
loop
sub
cmpsl
or
push
popa
rolb
mov
dec
mov
xor
push
iret
ret
imul
popf
ja
mov
mov
pop
enter
and
cs
inc
mov
lret
xchg
or
mov
outsl
imul
pop
push
adc
jbe
cmp
xor
in
adc
lods
mov
xor
je
pop
jmp
enter
aad
xchg
insb
push
lea
inc
sbb
mov
cmp
repnz
push
outsb
xchg
jp
adc
sarl
add
mov
and
jp
mov
in
movsb
sti
sub
pushl
fistps
push
jmp
or
mov
popf
mov
lahf
test
push
into
pop
jg
cmp
leave
mov
xchg
test
dec
mov
add
fisttps
std
add
push
jne
not
stos
cltd
mov
data16
sbb
push
sub
lcall
or
dec
es
adc
and
test
sar
push
dec
aaa
and
in
out
loop
xor
mov
inc
shlb
push
ja
push
jbe
push
and
shll
and
movsb
daa
push
gs
fs
pop
shl
cld
and
adc
shlb
xor
shl
mov
movsb
sbb
inc
mov
adcl
mov
pop
inc
andl
mov
sbb
and
adc
nop
ja
push
lea
sbbb
mov
push
add
sub
mov
pop
pop
cmpsb
scas
movsb
fsub
shlb
adc
flds
mov
add
mov
pop
ss
push
loop
je
movsl
loop
insl
jge
sub
adc
jns
mull
mov
mov
xor
call
push
xchg
ret
in
rclb
xor
or
test
arpl
sbb
addr16
sbb
sbb
dec
mov
shll
jge
or
xchg
sub
ss
into
push
sbb
cmc
mov
fidivl
dec
test
add
dec
xchg
jg
mov
or
fwait
inc
xchg
call
iret
push
test
call
cltd
dec
dec
pushf
pop
xchg
push
daa
mov
push
ror
pop
dec
insb
aaa
xchg
sbb
jp
pop
or
fiaddl
bound
dec
repz
loopne
lret
imul
scas
sub
loop
clc
ror
fnsave
fistl
dec
fs
jmp
ret
xchg
sub
outsb
sbb
decl
in
push
cmpsl
or
stos
jp
xchg
lahf
lcall
addb
out
pop
adc
inc
repz
xor
cmpsl
adc
xor
xchg
pusha
jne
stos
inc
js
mov
sub
jbe
and
loopne
test
gs
sbb
nop
dec
mov
adc
mov
push
call
mov
xchg
jl
test
lock
dec
fcomps
jbe
test
icebp
xchg
shl
xor
in
jecxz
inc
jne
into
fcoml
cmp
mov
dec
fcmovne
pop
in
and
fnstcw
push
cmp
sbb
cmp
add
xor
js
mov
xchg
out
jo
cmp
ret
aaa
movsl
shrl
xor
popf
xchg
arpl
sub
inc
xor
jg
adc
adc
out
jl
call
pop
push
adc
cld
shrl
mov
or
out
cmp
push
sub
sub
pop
movsl
movsl
cmp
leave
bound
xor
in
cmc
inc
xchg
movsb
pop
les
insl
xorb
push
mov
xor
divl
push
addr16
inc
aaa
mov
out
cmp
pop
add
push
dec
mov
std
adc
jne
or
cld
imul
mov
xchg
pop
pop
dec
cmp
rcr
jne
adc
je
fmuls
sbb
pop
int
inc
xor
mov
add
testb
scas
loop
in
mov
sbb
inc
xchg
stos
pop
stc
cmpsl
negb
pushf
add
leave
adc
fildll
and
fdivl
aad
loop
mov
pop
or
sbb
lods
test
movsb
popa
jno
cmp
movsb
outsb
enter
sub
xchg
popa
fmuls
pusha
scas
iret
movsl
mov
sti
jae
sub
mov
mov
cmp
sarb
pusha
test
sahf
das
aam
jbe
jne
scas
jl
rcrb
subl
mov
inc
push
cmpsb
mov
mov
movsl
lret
jp
div
cmpsl
sub
into
or
mov
mov
rcr
pop
push
sbb
pop
xchg
adc
sub
out
mov
xchg
movsb
inc
mov
mov
push
xor
dec
and
cmp
push
into
adc
jne
popa
mov
lahf
mov
inc
iret
fmulp
mull
jmp
or
subl
and
adc
imul
iret
test
lcall
inc
fdiv
mov
inc
mov
incl
popf
icebp
and
pop
adc
std
hlt
test
nop
enter
and
pop
push
scas
call
mov
push
subb
mov
pop
rorl
jae
icebp
imul
outsl
mov
leave
test
jge
jne
jno
fidivl
test
out
cmp
addb
pop
sbb
jno
lock
xchg
inc
mov
xchg
dec
insb
aas
in
test
ss
in
xor
nop
fdiv
sahf
cmp
dec
xchg
mov
inc
pop
lret
frstor
ljmp
push
lea
out
push
mov
lods
pop
cmp
test
fs
subl
lcall
jne
out
in
mov
xor
cmp
int3
sbb
inc
push
pop
hlt
mov
add
jl
sbb
in
inc
and
xor
fs
jle
jecxz
je
cmp
cwtl
es
jne
mov
imul
xchg
xor
mov
and
push
push
mov
cltd
add
je
push
inc
test
mov
push
lds
add
xor
xchg
cmp
fidivrs
or
lcall
push
xlat
fwait
push
out
and
mov
cs
xor
sub
mov
xchg
sub
jnp
addr16
inc
push
sub
dec
ret
shl
les
ja
pushf
jmp
mov
add
lock
cs
rclb
pop
xor
xchg
mov
daa
leave
adc
ss
int
cwtl
scas
sub
sahf
cs
in
pop
dec
dec
adcb
push
pop
adc
and
adc
fwait
xchg
inc
test
pop
imul
pusha
scas
lcall
jbe
dec
frstor
or
sub
negb
in
insl
push
push
dec
ficomps
jecxz
or
enter
and
mov
jne
mov
sub
lcall
xchg
xchg
mov
and
sahf
mov
sbb
sub
mov
jne
add
fs
mov
jbe
aaa
push
or
mov
mov
cmp
xor
popf
mov
jo
add
cmp
pop
or
jecxz
xor
gs
mov
push
mov
add
pusha
xor
enter
add
in
es
add
push
outsl
jbe
ret
aad
orl
sub
out
adc
add
mov
jmp
aad
inc
lret
push
addr16
sub
xlat
call
movsb
mov
jae
iret
jge
push
add
push
inc
leave
xlat
test
dec
cmp
jle
jae
pop
pop
xchg
inc
inc
and
int3
push
mov
sub
mov
jo
out
push
mov
icebp
int
sub
imul
add
loop
pop
je
dec
inc
sub
test
insl
adc
pop
hlt
fadds
pop
add
lret
jbe
lcall
inc
mov
inc
lcall
lods
jb
jmp
lods
cwtl
adc
js
jmp
movzwl
add
movsb
sbb
sahf
sub
in
inc
xchg
mov
pop
std
jb
cmpsl
add
adc
cmpsb
and
jecxz
scas
iret
mov
bound
jns
incl
cmp
das
lea
mov
xchg
lret
push
adc
mov
imul
mov
out
in
mov
fs
jne
cli
jp
fwait
xchg
test
and
mov
push
jb
jne
mov
xchg
popa
jne
xchg
mov
xchg
xor
dec
in
movsl
adc
and
cmp
dec
add
hlt
xchg
cs
imul
mov
jns
es
add
sbb
add
mov
enter
inc
adc
scas
insl
or
and
cmpsl
sarb
dec
out
inc
cmc
fdivl
mov
pop
xchg
cmp
popfw
jmp
fnstcw
cli
sbb
and
inc
push
shr
dec
cmp
test
and
mov
add
adc
sub
loope
jo
mov
ret
repz
inc
and
sub
fsubr
jns
xor
popf
push
pushf
inc
lock
mov
adc
int3
rolb
stos
xchg
xor
xchg
lods
and
xchg
aad
cmpsb
push
rorl
cmp
orb
mov
fldt
dec
idivl
rcrb
ds
outsl
bound
test
int
or
lahf
repz
adc
arpl
dec
mov
out
xor
mov
test
push
sub
lock
ret
mov
fistps
and
mov
mov
xorl
fistpll
std
int3
xlat
pop
iret
mov
into
xor
mov
ret
xchg
push
inc
mov
psubusb
out
jno
call
adc
xlat
dec
mov
sahf
rorb
sub
sbb
pop
inc
mov
mov
dec
jae
push
mov
push
clc
push
insb
push
push
sar
and
aad
and
sahf
test
xor
faddl
jns
adc
inc
js
in
jl
jge
xor
jne
pop
add
aas
push
shlb
into
pop
pushf
mov
out
cld
je
dec
cmp
add
jl
addr16
sti
and
or
test
xchg
es
inc
outsl
mov
std
xchg
dec
add
push
adc
std
repnz
leave
js
mov
inc
rolb
xchg
jae
insb
fs
fs
and
cmp
xor
mov
adc
imul
lret
imul
adc
rcrb
inc
out
fwait
sub
ret
mov
pop
addb
ret
fs
lods
fs
xor
pop
ds
jno
std
rol
push
fs
add
outsl
ja
dec
jge
cli
test
xchg
jecxz
jno
into
jmp
mov
lock
icebp
lods
sub
pop
sahf
or
jmp
jno
xchg
add
jp
add
sub
mov
mov
and
mov
aas
sub
mov
test
xor
test
xchg
sub
and
std
mov
bound
imul
mov
clc
sbb
arpl
stos
jne
push
adc
fidivl
mov
push
push
leave
aam
loope
or
and
inc
pop
stos
cwtl
mov
movb
pop
push
cmpsb
and
rcr
fsubs
xor
loopne
jae
xchg
adc
xor
adc
add
movsl
xor
mov
jno
in
xchg
in
push
mov
cwtl
lahf
int3
sahf
ja
pop
mov
in
xor
xchg
popa
insb
xchg
mov
and
push
pop
xchg
push
pop
out
cmpsb
adc
xchg
pop
sarl
sbb
vmovaps
test
outsl
mov
inc
stos
or
mov
add
lea
ret
mov
repz
dec
aas
xchg
sahf
mov
push
test
shll
jl
ror
inc
mov
or
pop
cmp
mov
in
mov
jle
cmpsb
mov
xorl
xrelease
out
ret
jecxz
jbe
pop
mov
popa
jne
sti
inc
add
xlat
xor
sbb
ljmp
sub
loop
mov
jle
xor
and
inc
popa
mov
jno
orb
push
xchg
fldcw
mov
sti
jge
cwtl
jo
outsl
mov
add
das
fwait
mov
mov
pushf
mov
test
movsl
loop
add
add
lcall
adcb
mov
jae
xor
fldl
and
subb
mov
xchg
cmp
adc
pop
dec
lret
mov
cmp
ss
pushf
mov
out
lods
arpl
lods
pushw
xlat
xor
or
std
fdiv
sub
scas
les
popa
fs
pop
cwtl
push
cmp
or
sub
pop
bound
es
adcl
dec
popa
cli
and
movsb
fs
mov
les
aaa
cmp
or
into
and
add
adc
sub
enter
sub
out
int3
test
cmp
cmp
aas
pop
sub
add
add
cld
jl,pt
xor
jp
cs
es
bound
inc
and
filds
sub
jecxz
imul
sub
sbb
loop
je
iret
mov
sbb
dec
cmpsl
dec
and
dec
rcrb
repz
mov
adc
mov
add
adc
testb
loop
push
dec
shlb
jns
movsb
push
inc
mov
out
je
add
iret
hlt
cltd
xlat
popf
aam
ja
aas
pop
push
popa
sub
jmp
xor
movntq
mov
ds
stos
in
push
add
inc
cmpsb
xabort
push
cmp
les
sti
dec
lcall
xor
fidivrs
out
mov
test
cmpsb
mov
fimuls
cmp
cmp
adc
pop
dec
inc
jne
mov
push
and
adc
sbb
lds
push
daa
daa
xor
add
outsb
and
aas
add
adc
xchg
out
in
jae
lods
fneni(8087
adc
imul
in
cmp
inc
shrb
mov
shl
dec
lret
sub
repz
mov
push
mov
cli
data16
jnp
into
ret
mov
std
icebp
ret
pop
sbb
mov
ds
insb
mov
lahf
adc
popa
out
stc
sbb
jmp
mov
fs
sbb
pinsrw
out
dec
jb
adc
pop
mov
adc
ja
lock
inc
sbb
out
adc
xor
bound
push
push
aaa
adc
xchg
ljmp
je
outsb
hlt
mov
pop
imul
xor
adc
aas
popf
add
xchg
shll
pop
lret
lret
mov
or
push
add
xchg
insb
rorl
test
jecxz
sub
fmull
cmp
movsb
in
cli
movsb
and
fildll
nop
lods
and
rcll
fldl
sbb
xor
and
gs
jmp
jo
lret
loopne
into
pop
fbstp
add
cmp
sub
in
jp
mov
add
daa
mov
call
cmp
loope
add
push
jmp
xor
mov
fldcw
jl
dec
cli
neg
sbb
sbb
int
rolb
test
mov
sti
in
dec
arpl
xchg
inc
dec
outsb
stos
lret
pop
cltd
mov
push
mov
mov
pop
pop
xchg
jbe
inc
repz
clc
outsb
sar
dec
jno
movsb
mov
movsl
adc
lret
jge
pop
sub
inc
pop
adc
sbb
leave
jno
lods
jecxz
sti
inc
sbb
test
fcoms
jl
add
sbb
mov
jecxz
lock
and
jnp
push
and
fisttps
or
mov
call
pop
adc
push
lods
cld
fisttps
sbb
mov
das
data16
sarb
fdivrl
push
outsl
xchg
ss
dec
shr
cmp
clc
pop
lock
jbe
adc
mov
lcall
adc
mov
rorl
pop
lods
sbb
in
in
xor
dec
cltd
je
or
dec
je
push
repnz
scas
sub
pop
sbb
fdivrl
fsts
inc
push
fwait
sti
test
pop
jnp
shll
addps
xchg
sbb
aam
push
push
movsl
fnsave
movsb
jnp
jecxz
adc
aaa
or
sub
movsl
aaa
cmp
dec
sbb
jbe
shlb
mov
ss
test
adc
lods
pop
or
test
push
xchg
pop
sub
rcll
pop
adc
jo
je
sbb
xor
adc
insb
filds
cmpl
out
mov
sti
xchg
or
divb
pop
rcrl
andl
dec
mov
inc
and
inc
push
lea
clc
cli
xchg
mov
in
cmpsl
mov
sub
xor
add
scas
or
fstpl
xor
inc
push
fwait
sub
xchg
mov
int3
fldl
dec
mov
outsl
mov
insb
and
lret
lds
dec
xor
flds
mull
push
xchg
clc
sub
jo
ljmp
mov
sti
iret
iret
inc
xor
std
into
mov
mov
push
mov
into
xor
fnsave
push
aam
xchg
mov
lret
subl
mov
adc
add
rcrb
repnz
icebp
sti
outsb
in
out
or
call
cs
cld
mov
insl
xchg
pop
dec
sbb
and
jnp
test
cltd
imul
movb
lods
insb
clc
jp
sub
mov
lods
inc
faddl
jae
roll
pushl
push
fcoms
mov
mov
mov
adc
add
in
aam
lds
pop
mov
subb
pushf
lods
out
mov
jne
int
cmpsl
shlb
nop
popa
inc
movsb
aas
jno
loope
dec
scas
lods
rcrb
sarb
arpl
mov
pop
xor
sahf
nop
out
mov
sub
pusha
xchg
or
push
inc
jp
or
or
int3
mov
sbb
xchg
jo
sub
mov
repnz
daa
ds
adc
stc
and
out
pushf
scas
clc
dec
js
call
pop
stos
pop
mov
scas
lds
dec
enter
push
xor
je
les
and
or
mov
mov
and
faddl
jb
xlat
pop
aaa
sahf
dec
pop
mov
aad
xor
jecxz
mov
sbbb
cmp
cmpsl
js
outsl
xchg
pop
aam
push
xchg
decb
addb
insl
jecxz
jns
mov
daa
push
cmp
dec
loop
or
hlt
cwtl
jb
andl
mov
enter
icebp
add
fisubrl
test
push
fst
aam
mov
orl
pop
cmp
sub
cmp
inc
ficompl
into
sarl
adc
outsl
add
rcrb
mov
lret
shll
add
add
mov
sub
sub
add
pop
cltd
jae
js
sbb
mov
lcall
mov
dec
lret
and
pushl
adc
jae
insb
xchg
into
mov
and
fistpll
pop
pop
lahf
push
int
jle
lret
xchg
and
movsl
and
jmp
out
jmp
mov
xor
scas
insl
push
ljmp
pop
aad
push
push
js
test
test
jae
test
pushf
push
movsb
das
sti
out
popl
imul
dec
sub
insb
bound
loope
fadds
lea
cmp
mov
ret
cmpb
xor
sbb
jb
pop
jmp
or
pop
fdivp
xorl
sbb
in
mov
pop
xchg
fwait
xchg
cmp
or
mov
aaa
imul
xchg
jnp
dec
imul
cmp
mov
adc
lock
aaa
lret
jne
adc
test
jne
inc
into
xchg
xchg
in
clc
push
test
jmp
push
arpl
stc
fs
data16
lcall
sti
sub
mov
adc
jbe
cld
icebp
not
pop
adc
gs
jb
xchg
aaa
cmpsl
xor
call
pusha
dec
fldt
mov
jmp
sbb
int3
int
push
into
jne
dec
or
and
and
addr16
xorb
shl
pop
out
out
stc
std
dec
mov
mov
test
imul
inc
fisubs
lret
in
xor
lret
out
loop
dec
jb
add
pop
push
adc
insl
inc
orl
mov
push
leave
or
sub
xchg
mov
jmp
push
jecxz
adc
loop
and
and
push
mulb
inc
mov
repz
aas
cmp
scas
out
push
pop
xchg
inc
pop
xchg
repz
mov
mov
sbb
add
lret
jle
pop
add
adc
in
xor
xchg
insl
jns
mov
sub
mov
push
sub
xor
xlat
dec
int3
adc
pop
pop
aam
inc
icebp
lret
repnz
loope
pop
sub
scas
dec
push
or
outsb
lcall
xorl
out
gs
icebp
fists
jmp
sbb
cmp
loopne
andl
pop
out
push
fdivr
cltd
or
push
xor
stos
scas
arpl
add
inc
js
repnz
das
stc
lcall
ljmp
pop
pop
push
les
or
les
mov
xchg
sbbb
add
sarb
or
popf
aad
jle
das
rcr
adc
xchg
mov
mov
insl
push
xorl
aas
mov
stc
rcrb
lret
mov
bnd
push
and
loopne
std
sbb
add
and
rcr
in
out
sub
mov
xchg
dec
fsub
into
adc
sub
hlt
mov
and
nop
xchg
inc
fs
nop
cs
test
clc
cmp
aaa
jae
clc
je
pop
into
mul
je
cmp
stc
lods
rcrl
xchg
mov
aas
xchg
jg
rcr
test
or
dec
xchg
adc
jns
enter
adc
sbb
push
dec
sub
pop
push
arpl
jns
rcl
popf
mov
xlat
fldt
push
sub
lods
cmpl
push
cld
jne
int3
dec
fwait
mov
lods
adcl
or
jns
fwait
add
mov
sti
pop
std
mov
jbe
loope
test
xchg
test
dec
mov
mov
jbe
and
ja
xchg
dec
decb
addr16
enter
mov
cmc
cmp
aad
jmp
xchg
shlb
xchg
mov
sub
rorl
mov
std
sarl
xor
xorb
cmp
push
or
inc
jno
sub
movsl
adc
pushf
push
cmpsb
test
cmpsl
sti
mov
adc
aas
cltd
cltd
xchg
mov
add
adc
frstor
push
jns
adc
jge
fsubrl
ja
clc
inc
clc
shlb
lret
ja
lods
dec
add
test
adc
mov
xchg
andb
xor
dec
and
dec
pop
ret
stos
xchg
data16
jg
addr16
xor
jo
loopne
int3
imul
ja
je
pop
xchg
int
test
inc
fbstp
or
dec
lds
xor
js
and
xchg
push
pop
xchg
out
imul
enter
pop
jmp
cmp
pop
inc
jg
add
adcl
cmp
pop
or
mov
inc
xor
mov
vmwrite
push
insb
pop
ror
dec
movsl
sbbl
sbb
push
out
out
pop
cmp
jae
fwait
out
sbb
int
jo
xchg
sbb
mov
xlat
push
sbb
inc
lock
adc
sbb
shrl
ljmp
and
push
addl
xor
pop
aad
stos
xchg
ss
sub
pop
jle
jl
push
mov
into
pushl
mov
icebp
jmp
or
xchg
inc
push
mov
or
xor
idivl
xor
inc
hlt
addr16
test
sbb
cmpsb
incb
out
xor
ds
dec
jae
insb
lahf
fisubl
xchg
lcall
test
fimuls
lret
pop
rcll
mov
leave
pop
data16
popa
mov
adc
jge
mov
lods
es
jmp
dec
and
loope
cld
xor
repnz
mov
xor
adc
sub
jns
sub
jmp
inc
adc
addb
inc
cwtl
xchg
mov
lods
hlt
adc
scas
out
ss
inc
xchg
pop
cli
jg
repz
xor
pop
imul
mov
pop
pop
arpl
testl
and
mulb
jle
mov
add
cmp
jg
jno
hlt
leave
sbb
arpl
outsb
js
scas
test
cld
mov
cli
mov
cmpsl
inc
cmp
xlat
pop
lret
sbb
je
andb
inc
or
push
stc
sahf
inc
add
add
mov
fmull
push
sbb
imul
out
rcr
test
test
cmp
inc
inc
idivl
fdivp
or
push
mov
cmp
fisubrl
sbb
pusha
decb
and
mov
pushf
xchg
aaa
jno
outsl
jecxz
mov
rorb
adc
iret
xchg
mov
into
adc
push
subb
sbb
je
adc
fists
push
xchg
nop
push
push
dec
cmc
sbbl
mov
add
cmc
in
jns
cmp
mov
dec
and
in
ds
inc
pop
xchg
mov
fidivrl
cmpsl
xchg
out
frstor
stos
or
cmp
popf
inc
sti
jp
je
imul
xlat
in
lock
shrl
decl
sbb
iret
imul
dec
add
dec
pop
ljmp
movl
addr16
std
movsb
lahf
inc
xchg
xchg
push
jecxz
test
and
push
mov
enter
inc
shll
sbb
pop
lret
or
out
xlat
jmp
and
push
addr16
pop
scas
enter
rcrb
cmpsb
insb
or
insl
repnz
dec
sub
inc
push
xor
lret
mov
stc
jecxz
into
lcall
movntq
movsl
fisubs
dec
pop
and
test
xchg
and
fisubs
xor
movsb
dec
jne
jmp
aam
cmpb
aam
test
cld
adc
push
mov
in
into
popf
pusha
sbb
sub
mov
jp
pop
sbb
or
fisttpll
ss
push
mov
jp
arpl
lret
sti
aas
or
sbb
and
repnz
sbb
data16
adc
xchg
cmp
je
add
aad
inc
cmp
clc
add
pop
clc
shl
in
adc
imul
mull
test
cmpl
ret
xchg
mov
add
sbb
pop
mov
dec
into
sbb
fildll
adc
lods
scas
test
in
inc
add
mov
ret
xchg
aad
icebp
movsb
das
jmp
sbb
xchg
fidivl
das
cmpsb
inc
fistpll
sbb
push
pushl
lret
mov
adc
fidivl
adc
push
int3
inc
sti
shl
in
fildll
xchg
and
addb
and
jns
lods
into
push
xchg
ds
out
rcrb
pop
add
gs
xor
dec
mov
in
les
cs
jb
int3
imul
xchg
je
ja
fxch
jae
jno
push
in
hlt
inc
push
fldenv
aad
int3
sub
cltd
iret
loop
fldcw
cld
push
push
aaa
repz
loopne
mov
je
push
iret
cli
ss
inc
test
ljmp
xor
dec
test
mov
add
aaa
mov
fbld
fwait
test
cmp
cmp
push
mov
adc
jbe
sub
and
pop
push
repz
testl
jg
jl
mov
shr
xchg
adc
dec
pop
in
aam
daa
inc
pop
fldt
hlt
outsl
icebp
or
adc
in
xor
out
nop
mov
sti
fwait
sahf
cmp
pusha
jmp
pushf
mov
mov
test
push
inc
mov
fnstenv
pop
rcr
cmp
movsl
cld
sub
pop
cmpsl
lock
test
and
sub
mov
and
enter
xchg
or
sbb
or
aam
std
sbb
in
jbe
add
push
jo
cmpl
loop
inc
dec
xchg
ret
dec
push
pop
mov
pop
dec
and
and
mov
pop
xor
subps
jl
mov
and
cmp
pop
lret
shll
xlat
mov
lahf
adc
push
sar
add
mov
xrelease
fdivl
lahf
shll
and
sti
inc
ret
test
loop
testb
ljmp
dec
push
mov
or
pop
dec
xchg
movsb
cmp
ja
test
enter
inc
mov
lahf
test
jg
sub
cmc
mov
out
push
fisubs
add
jge
jmp
subl
lcall
inc
push
rorb
push
mov
push
scas
cmpsb
jne
push
pop
jb
or
out
into
call
ss
xchg
push
mov
jmp
push
repz
mov
icebp
pop
cld
dec
sub
jle
invd
xchg
imul
push
dec
lahf
sbb
lret
subb
loope
fwait
loopne
add
nop
xor
mov
loop
push
xlat
imul
jnp
xchg
dec
xchg
inc
cmpsl
and
das
add
outsl
dec
push
cmp
fwait
mov
adc
fs
es
rclb
cmp
pop
loope
rcr
xor
divl
xor
test
or
rorb
outsl
stos
lds
or
or
inc
xor
mov
xchg
stos
les
xchg
mov
aaa
out
les
data16
mov
ja
fwait
ljmp
mov
mov
jg
sbb
sbbb
lea
add
mov
enter
jle
or
jge
fwait
aas
cmp
mov
fsubr
jae
mov
hlt
cmp
movsb
das
push
data16
mov
inc
push
fucomi
xor
and
dec
aad
imul
shlb
and
push
test
xchg
mov
mov
rorl
inc
js
pop
ds
imul
orb
ljmp
pop
ret
imul
adc
mov
out
hlt
js
adc
push
mov
push
mov
into
cmpsl
popf
jnp
sahf
jl
adc
push
les
data16
lcall
push
rorb
xchg
imul
lret
loope
scas
inc
mov
add
mov
mov
loope
pop
icebp
stos
and
push
adc
add
aam
ja
repz
sub
loopne
mov
mov
int
jmp
bound
test
jg
dec
xchg
pop
dec
in
jne
push
sub
test
cmp
pushf
xchg
cld
clc
push
dec
xchg
dec
push
fdivr
dec
pusha
arpl
je
mov
xchg
loopne
in
loope
mov
sbb
mov
in
pop
dec
movsb
sub
pusha
sub
in
clc
sbb
pop
dec
xchg
inc
adc
gs
push
add
mov
xchg
mov
and
ja
int3
movsl
pop
lahf
lds
addr16
cwtl
rcrl
pushw
iret
mov
fildl
inc
mov
push
inc
je
outsb
jecxz
aam
sbb
orb
cmpsl
leave
in
lods
sar
sbb
sbb
jg
ret
sub
dec
es
add
incl
ret
jbe
iret
mov
mov
mov
fistpll
xchg
pop
or
xor
lret
mov
movsb
add
lahf
xor
aaa
sbb
xor
test
inc
imul
adc
inc
mov
or
mov
out
les
cs
mov
addl
push
ljmp
stc
or
call
lods
adc
test
push
nop
xor
sbb
mov
sub
push
pop
jnp
nop
gs
push
pop
xor
lods
ja
or
cmp
shlb
sub
test
pop
out
xchg
mov
cmpsl
mov
sbb
xchg
add
push
xchg
test
dec
add
xor
adc
fwait
enter
sbb
push
inc
dec
mov
push
gs
mov
movsb
or
cltd
sub
std
orb
sbbl
sti
fcomi
xchg
inc
out
push
sti
cmp
cmp
lock
jle
mov
enter
mov
xchg
sbb
push
leave
test
xchg
xchg
pop
push
fstpl
sbb
mov
add
cmp
in
popf
popf
in
int3
fs
jmp
pop
lock
xlat
inc
movb
ret
mov
test
and
rcll
jl
dec
arpl
pop
mov
jecxz
xchg
jl
add
xchg
jae
jp
push
scas
lret
rcrb
sub
imul
jmp
mov
ljmp
mov
sub
pop
cmp
and
push
mov
cmp
jg
sbb
xchg
xor
clc
xorl
scas
rorb
mov
xorb
push
xchg
add
mov
imul
xor
popl
xor
aaa
enter
dec
dec
add
mov
inc
ret
xchg
out
js
lds
jns
xor
mov
pop
and
ss
int
scas
in
fisubl
push
js
addb
sbb
cmp
std
mov
pop
test
popa
jle
in
add
jns
and
arpl
aad
ss
ss
push
mov
xchg
pushf
flds
int
fxch
push
and
push
js
int
mov
lcall
sbb
rorb
in
jp
repnz
mov
or
jbe
or
jb
xor
pushf
and
mov
jmp
rep
push
clc
and
mov
push
rol
popa
mov
mov
int3
subl
xchg
lcall
mov
js
pushf
out
ret
int
add
add
arpl
scas
addr16
jne
shl
adc
jne
cmpsl
aaa
lcall
fcomps
push
stc
push
inc
jmp
pop
lods
iret
sub
mov
sahf
ljmp
mov
add
loope
adc
inc
lret
cltd
inc
xchg
jp
gs
or
rcl
cmp
pop
stos
or
mov
cmp
jge
nop
inc
test
imul
xor
call
adc
mov
lcall
and
inc
xchg
bound
pushaw
add
scas
jb
stos
int
push
adc
hlt
jae
mov
add
mov
das
add
lret
subl
pop
jl
notb
add
aaa
adc
gs
pop
pop
in
movsl
out
mov
jecxz
out
int3
push
sbb
loopne
test
sub
lods
jno
dec
call
cmpsl
lods
pop
out
or
mov
mov
lods
popf
push
jge
popa
mov
sub
mov
leave
dec
push
jo
inc
sbbb
cmpsl
stos
inc
scas
jbe
testb
push
lahf
outsl
dec
fdivl
lods
xchg
jge
mov
mov
inc
or
or
lods
das
jo
loopne
pop
jg
cmp
pushf
ds
stos
pusha
sub
adc
repz
lret
cld
faddl
adc
in
iret
pusha
inc
movsl
push
enter
jmp
stc
std
and
imul
movsb
out
cli
lds
lods
sub
ss
in
test
jae
jno
jbe
pop
xchg
pusha
frstor
and
les
lods
hlt
sbb
jo
jg
lods
mov
and
mov
mov
in
loop
mov
inc
lret
push
mov
rcrl
or
dec
xchg
xor
inc
xchg
cmpl
iret
popa
cmpsb
addr16
out
mov
in
cltd
out
or
xchg
insb
aam
sahf
out
or
std
ficompl
cltd
sbb
in
cwtl
dec
push
adc
push
inc
xor
pop
arpl
lds
jae
icebp
pop
outsl
sub
pop
es
push
test
incl
fidivs
stos
jp
lods
sbb
out
and
stos
cld
sub
jle
or
mov
mul
jp
cli
xchg
js
dec
pop
jl
sub
cmp
cmp
sbb
cmp
cmpsl
movsb
rorl
push
mov
popf
icebp
jl
movb
inc
mov
adc
cmpsl
xor
fidivl
pusha
mov
ja
push
leave
adc
js
in
jo
lods
xchg
sub
mov
data16
or
adc
dec
cmpsl
jae
repnz
cmp
lods
ret
mov
or
mov
jcxz
in
sbb
inc
daa
jmp
jnp
cmp
xchg
add
cli
dec
test
inc
popf
push
mov
insb
stos
into
cli
enter
stc
testb
jae
cmp
jl
and
mov
xchg
xchg
test
mov
outsb
roll
out
mov
mov
fbstp
inc
icebp
outsl
das
icebp
jg
gs
int3
lret
dec
in
jl
add
and
loopne
imul
repz
loope
sub
out
data16
mov
addr16
andb
test
cmp
sub
mov
iret
stos
call
outsb
jo
stos
outsl
rorb
dec
cmp
push
leave
lock
imul
xchg
ret
push
or
lret
jno
rcr
lahf
fistpll
adc
pop
jbe
sbb
xchg
sahf
cmp
popf
mov
mov
jno
jb
inc
loopne
iret
mov
out
inc
pushf
xor
daa
jmp
movsl
fistl
xchg
icebp
or
in
xor
insl
ud1
cltd
stos
jae
pop
inc
mov
sti
lea
ret
mov
in
cli
pop
xor
ret
out
test
sbb
and
jb
lret
fcomp
fsubl
adc
scas
mov
sbbb
pop
aad
jo
imul
push
scas
cmp
mov
orl
fisubrs
setbe
cld
test
adc
dec
lds
test
dec
cmp
fcom
aaa
insl
push
rcrb
arpl
and
fs
sbb
inc
inc
ja
add
mov
data16
in
pop
dec
fcmove
sub
or
and
das
int3
sarl
inc
lret
testl
xchg
dec
pop
inc
les
lret
mov
and
cwtl
lds
add
in
mov
or
les
mov
xor
xchg
test
and
subb
cmpsb
push
mov
mov
xchg
enter
data16
cmp
adc
add
or
mov
fwait
adc
out
fmuls
fsubrs
lret
test
sti
dec
inc
xchg
push
lahf
jmp
push
cmc
pop
inc
sub
rclb
andl
and
or
adc
repz
imul
xor
mov
xchg
sarb
push
xchg
xor
movb
out
jg
or
mov
pusha
stc
jge
das
mov
imul
dec
out
pushf
xchg
fucomi
mov
push
shrl
push
jge
jo
aam
dec
loopne
rep
or
flds
pop
lea
xor
xchg
or
sbb
inc
lods
shll
mov
cmpsb
pusha
pusha
jle
cmp
movsb
stos
les
js
inc
ret
xchg
dec
sbb
out
stc
mov
inc
movsl
add
sbb
or
subl
push
lock
jne
div
out
and
cmc
fsubrs
cmc
or
xor
cli
jl
pop
or
fdiv
mov
sub
sti
pop
and
mov
sub
add
dec
test
test
xor
pop
mov
std
cs
adc
sti
filds
mov
xchg
rep
shrb
scas
mov
lds
cmpsl
dec
shl
repz
lods
cmpsb
dec
push
cwtl
stos
loope
push
notb
xchg
js
mov
das
xchg
repz
cwtl
push
push
mov
scas
cmpsb
mov
in
int
adc
push
ds
cmp
pop
movsl
jl
mov
lahf
or
stos
jp
push
subl
aad
out
or
pushf
popa
mov
in
dec
cmpsl
ret
rolb
jb
cwtl
int3
mov
adc
adc
push
fisubrs
jle
xchg
mov
inc
mov
imul
push
adcl
dec
loopne
stc
faddp
or
push
loop
and
icebp
push
jae
inc
es
pop
ret
mov
mov
mov
in
in
jae
jo
lcall
je
out
cld
mov
test
shrl
lods
sarl
lcall
lods
fimull
xchg
xor
mov
int3
frstor
ljmp
push
lcall
ret
add
or
mov
loope
or
add
mov
sub
icebp
xlat
xchg
les
mov
and
stc
int
lahf
stos
push
cmp
push
clc
fdivrp
jo
mov
das
int
out
fisttps
notl
xchg
or
daa
xchg
and
stos
out
sbb
jl
mov
test
and
popf
jmp
pop
sub
test
pop
ret
cli
jno
jo
mov
aaa
daa
pop
movsb
sbb
rcll
test
and
pushf
call
mov
adc
jmp
inc
fcmovb
fbstp
push
push
popa
icebp
cmpsb
fisttps
lea
mov
fchs
pushf
shll
mov
outsb
jg
fimull
lret
cmp
fldt
jno
inc
adc
orb
mov
shl
dec
push
pop
jno
sbb
cltd
add
test
push
ja
or
or
jg
popa
inc
mov
sar
cmp
int3
cli
loop
test
jne
mov
jmp
add
mov
rcr
mov
push
cs
dec
ds
arpl
clc
and
and
adc
sbb
loop
lds
test
adc
stos
adc
push
lods
push
mov
imul
jle
xor
ds
mov
cmpsl
adc
stc
dec
fdivs
stos
dec
mov
rclb
mov
divl
call
imul
add
pop
mov
pusha
mov
jnp
dec
popf
lret
aaa
mov
xor
mov
xor
xlat
fnstenv
adc
int3
imul
rcll
xchg
das
clc
ljmp
pop
adc
loopne
popa
in
and
mov
fisubs
jecxz
leave
mov
and
jo
in
xor
or
ss
out
cld
repz
sbb
sar
and
mov
sbb
dec
inc
mov
aad
cmp
pop
dec
push
push
mov
xor
xchg
enter
mov
mov
repz
push
cwtd
jns
sub
pusha
jge
or
inc
mov
stc
pop
mov
fimull
jns
bound
movsb
shlb
jle
mov
fldl
ret
sub
das
mov
clc
adc
cli
jae
dec
inc
fwait
pushf
xchg
dec
xor
fcomp
sbb
jecxz
jge
cmc
daa
and
sub
mov
mov
dec
sub
adc
push
sub
cmp
cld
mov
pop
xor
jnp
jp
lcall
test
out
lcall
nop
pop
pop
in
test
sbb
out
or
movsl
ja
leave
sbb
jmp
lret
cmp
inc
mov
add
xlat
leave
and
mov
aad
mov
xor
xor
push
mov
movsb
je
sbb
addr16
movsl
loopne
cltd
and
add
inc
jo
mov
incb
push
cmp
ss
ss
mov
shll
daa
lds
movb
mov
into
outsb
ja
call
mov
mov
out
imul
fists
call
ret
sahf
sti
aaa
jae
hlt
cli
nop
push
dec
mov
test
movsb
pop
ret
imul
lcall
lahf
lahf
dec
mov
xchg
jae
and
mov
adc
mov
mov
lret
mov
repnz
push
xchg
sar
push
or
xorb
inc
mov
add
jp
mov
arpl
bound
into
inc
jo
sub
loopne
outsl
divb
rol
enter
pcmpeqw
scas
inc
inc
ja
test
clc
jae
int3
daa
mov
xchg
jmp
call
int
push
pop
adc
adc
popf
jle
push
push
push
add
and
push
ss
jmp
or
add
sbb
jne
dec
mov
push
imul
mov
out
dec
sarb
cmp
hlt
gs
dec
aam
adc
ljmp
pop
cs
in
jle
shl
maskmovq
imull
call
mov
arpl
test
mov
pop
push
push
stos
xor
sbb
xchg
jns
mov
inc
mov
out
adc
icebp
sub
ja,pn
xchg
mov
pop
xchg
popf
movsl
jecxz
mov
and
cld
sar
mov
into
ds
mov
in
daa
into
jecxz
les
cmp
jg
cs
aas
mov
pushf
xchg
jae
push
cmp
push
dec
in
mov
inc
jb
cld
cmp
lock
daa
loop
negl
jbe
xchg
mov
jno
pushf
dec
xlat
inc
and
xchg
pop
js
hlt
pusha
cmp
mov
cld
lock
xchg
xor
imul
pop
test
or
pop
ficoms
sbb
bound
dec
or
scas
push
or
into
sub
in
jb
mov
sti
inc
clc
push
mov
cmc
mov
or
incl
sbb
pop
jae
rcrb
push
call
fs
les
or
fmull
popf
sahf
jnp
icebp
js
ljmp
sbb
add
cmp
xchg
imul
push
cltd
mov
rcl
leave
xor
lods
sub
gs
ljmp
xor
add
adc
mov
sbb
lret
popa
stos
push
mov
imull
cli
cld
jae
int3
xor
leave
out
ror
jns
mov
pop
mov
loopne
out
xchg
mov
imul
and
pop
inc
popf
sbb
cmp
jb
addr16
or
dec
rorb
jge
sbb
mov
mov
jl
xchg
repnz
pop
pop
out
mov
inc
ja
scas
cmp
mov
negl
mov
mov
adc
out
dec
imul
jge
xor
imul
or
cmp
fwait
sbbb
cld
mov
and
scas
aad
adc
mov
cmc
mov
xor
pop
in
loope
test
jecxz
cmp
jg
or
test
or
xor
jno
in
add
imul
add
js
cmp
das
insl
lds
add
int
ljmp
mov
cmp
cld
sbb
ret
add
dec
stos
insl
test
push
stos
ret
ret
xlat
paddb
mov
xchg
pop
cmpb
xorb
push
jg,pt
fbstp
in
xchg
pop
push
xor
je
int
mov
std
sub
pusha
inc
lods
mov
and
dec
loop
leave
cld
sahf
fsubs
sbb
in
aad
das
xchg
xor
adc
arpl
nop
pop
je
inc
sbb
cmp
cmp
aas
add
outsb
mov
dec
jle
pushf
cmp
mov
xor
mov
inc
push
inc
jmp
mov
in
xor
ror
shlb
mov
dec
push
dec
and
pop
ret
cmp
std
aam
mov
xchg
fsts
test
sbb
imul
jg
inc
or
sbb
subl
mov
xchg
daa
ret
jae
adc
cmpsl
mov
fstl
cltd
pop
sbb
xlat
fsts
outsb
cld
inc
pop
ss
ljmp
divl
call
cmp
ss
enter
pop
call
sbb
clc
mov
ret
rcrb
iret
dec
mov
push
popl
mov
adcb
dec
shr
ds
adc
cmp
mov
mov
mov
test
data16
inc
xchg
fdivrl
ja
in
xchg
andl
mov
mov
icebp
add
dec
les
sti
cmp
inc
stc
movsl
mov
push
and
inc
adc
loopne
icebp
jmp
adc
popa
mov
cmp
rol
push
out
sbb
inc
test
fisttpll
ja
inc
enter
arpl
sbb
jmp
js
pushf
hlt
andl
fs
mov
jmp
jae
call
mov
stos
aam
pop
mov
mov
cmp
jp
or
outsl
add
jecxz
insb
mov
push
mov
aas
out
xor
enter
push
or
mov
or
mov
sti
cmp
or
cli
pop
or
js
mov
mov
jge
stos
out
sub
jno
cwtl
push
shrl
xor
pop
dec
mov
lds
aaa
lahf
sub
ret
test
repz
ja
aam
jmp
pop
xor
add
pop
push
pushf
mov
mov
adc
add
xchg
repnz
arpl
sbb
pop
dec
xchg
aas
jecxz
xchg
xchg
and
add
lods
sbb
or
aam
test
outsb
push
xchg
shlb
dec
je
out
int3
iret
sahf
or
fldt
jg
inc
pushw
mov
push
outsl
movsl
push
add
sub
pop
push
cmp
inc
inc
cmp
sbb
sub
push
push
xlat
dec
mov
dec
in
out
mov
xchg
popa
outsl
push
addr16
push
out
cmp
push
insb
arpl
xchg
push
mov
sub
cmp
add
sbb
mov
inc
xchg
loope
sarb
jmp
addb
ljmp
xchg
ja
orl
add
fisttps
sub
cmp
sti
push
pop
idivb
cld
push
incb
add
test
inc
outsl
lods
daa
dec
cmpl
int
std
mov
sbbb
test
pusha
push
mov
push
call
inc
rcll
hlt
mov
repz
ret
ds
sub
or
pop
and
in
push
lcall
imul
or
xchg
add
adc
xor
xor
inc
in
jb
cli
imul
cmp
xchg
mov
add
cmpsl
test
mov
stos
mov
in
dec
jae
cld
inc
inc
mov
adc
dec
mov
daa
stc
push
xor
faddp
leave
and
sub
push
mov
cmpsb
pushf
pop
test
nop
lods
test
push
xchg
test
and
add
std
mov
pop
pminsw
test
mov
outsl
repnz
roll
jecxz
imul
das
pop
xor
int3
pop
in
ret
mov
sub
mov
mov
ds
std
fs
dec
stos
subl
push
mov
adc
mov
sbb
test
dec
les
inc
mov
data16
pop
cmp
insl
into
mov
jbe
out
add
adc
dec
mov
rol
jmp
lahf
cmpsb
dec
jg
call
adcl
int3
fs
test
fistl
xchg
clc
mov
adc
stos
out
imul
mov
mov
shrl
pop
mov
adc
sbb
mov
cmp
stc
cmp
mov
pop
inc
flds
insb
jecxz
rcll
push
ljmp
xchg
adc
inc
cmc
in
fcompl
lret
push
ret
fldl
aam
mov
pop
and
divl
dec
shlb
jg
add
mov
insb
jo
test
sbb
in
mov
imul
lcall
jns
adc
dec
loope
inc
cmp
adc
jbe
outsl
add
sbb
jo
out
mov
add
xchg
test
sbb
outsb
fst
xor
and
cmp
xor
xor
cmpsb
cwtl
fnsave
xchg
imulb
cmp
popf
inc
stos
mov
jmp
add
lret
das
push
push
xchg
cmp
insl
mov
push
lock
or
lods
inc
test
push
dec
or
leave
les
mov
fisubl
jae
jge
jl
jae
fsubr
lea
or
les
je
or
xchg
lcall
lcall
lock
mov
aam
test
in
mov
mov
mov
popa
lock
sbb
jge
xor
fwait
lock
jae
dec
xchg
inc
ljmp
hlt
cmp
lcall
rolb
ds
insl
ljmp
jne
pop
lahf
add
icebp
clc
fcmovnbe
fldcw
add
btrl
and
mov
or
shrl
fcomps
dec
in
add
lcall
outsb
jbe
stos
shlb
dec
xchg
inc
cmpsb
mov
mov
fs
mov
mov
mov
push
iret
stc
push
leave
ljmp
in
lahf
out
and
or
repz
ja
push
and
dec
addr16
es
add
sub
inc
push
mov
xchg
hlt
xorb
and
std
je
movsb
es
sbb
es
dec
out
xchg
aad
adc
xor
insb
negb
mov
mov
fcoml
lret
fldt
sub
loope
ja
inc
test
jb
dec
stc
push
sahf
jle
mov
xchg
pop
xchg
adc
add
sbb
inc
xor
inc
imul
and
xor
loopne
add
xchg
arpl
xchg
pop
pop
fstps
mov
lock
test
shlb
pop
aad
pusha
jno
out
pop
xor
sbb
mov
inc
jmp
add
aaa
push
push
addb
jns
leave
pop
icebp
push
inc
pop
push
pop
int3
inc
inc
cmpsl
std
push
and
ja
sbb
xchg
jno
popa
aad
daa
mov
movsb
lods
dec
lahf
adc
pop
adc
push
sahf
mov
xchg
or
bswap
xor
cmp
pop
imul
jnp
dec
les
jae
jmp
push
xor
movsl
push
pop
mov
jbe
jp
dec
mov
clc
push
or
roll
dec
es
pop
mov
inc
xor
ret
sub
mov
lods
inc
rcrb
mov
mov
test
push
mov
pusha
mov
lahf
gs
lea
outsb
xchg
je
add
pop
mov
or
into
sbb
mov
movsb
pop
inc
and
jns
push
cmp
mov
or
inc
and
cmp
js
test
aad
sub
jle
pop
lcall
imul
push
cmc
mov
dec
test
js
inc
fwait
stos
stos
mov
inc
insl
popf
xchg
cmp
add
mov
xchg
ds
mov
push
int3
pushf
in
inc
sbb
iret
std
test
sbb
in
lret
sbbb
pop
outsb
lea
outsl
fildll
mov
loop
push
jae
lahf
mov
mov
cwtl
dec
jns
js
or
pop
ja
insl
aad
iret
pushf
jnp
cmc
scas
repz
cmp
pop
imul
lds
scas
jno
mov
inc
out
mov
inc
data16
aaa
xchg
xchg
fwait
push
jle
xor
je
dec
jecxz
cmpsl
dec
test
push
mull
mov
ret
aas
and
movsb
jnp
mov
jns
movsb
inc
adc
das
add
xlat
mov
test
gs
xor
lea
gs
ret
add
mov
dec
pop
in
mov
arpl
xchg
dec
push
jge
inc
or
cs
pop
mov
dec
shll
outsl
ss
add
ss
gs
sbb
lret
loope
movsb
bound
inc
sbb
aam
lods
pop
outsl
cmc
xor
push
stos
scas
stos
sub
mov
addr16
in
and
sub
inc
adc
cmp
dec
or
mov
or
sarl
ret
pushf
push
mov
push
mov
add
inc
arpl
testb
mov
mull
rcrb
push
cmp
push
cmpsl
dec
dec
out
push
lea
mov
inc
ljmp
adc
daa
and
mov
rcl
dec
daa
lock
out
pop
push
sub
lods
aad
aaa
shll
xor
icebp
push
mov
aam
pushf
mov
push
sub
mov
jecxz
xchg
enter
cpuid
dec
adc
mov
or
cmp
orb
or
pop
mov
fwait
and
clc
mov
ljmp
mov
mov
cmpsl
orl
mov
fsubl
sbb
shl
int
mov
ret
pop
fxch
rorb
mov
cltd
and
adc
bound
bound
or
mov
fsubrs
xlat
popf
xchg
pop
mov
fstpt
inc
popa
fcmovnbe
aas
test
bound
push
fdivrs
xor
fs
inc
inc
leave
add
pop
xchg
jmp
push
sub
push
sbbb
jno
hlt
orl
out
mov
je,pn
xchg
push
xor
sbb
mov
push
aam
pop
jge
imul
test
dec
insb
cwtl
cs
rclb
jo
and
fsubl
mov
push
jae
call
and
cmp
fdivrl
mov
sbb
arpl
push
in
bound
push
test
pop
jmp
mov
jge
or
pop
iret
movsb
add
jp
xor
xchg
and
fcomip
mov
mov
aaa
lret
adc
add
and
cmp
and
ror
push
xchg
push
mov
fwait
loopne
cmp
jne
push
or
push
insl
mov
into
inc
test
and
jp
pusha
jns
push
ds
inc
stos
sbb
sti
bound
cmc
orb
mov
jae
mov
jb,pt
mov
mov
arpl
out
dec
jae
mov
cmp
mov
mov
out
sbb
cli
push
push
pop
cld
repz
add
test
dec
fcoms
out
jl
ljmp
or
adcl
lcall
in
sbb
mov
pop
xor
inc
sbb
fists
ss
jecxz
imul
aaa
pop
push
jno
ljmp
aad
cld
lret
add
jecxz
ficompl
ret
scas
mov
lcall
dec
fs
iret
sbb
loopne
imul
insl
inc
mov
mov
mov
mov
push
adc
dec
jmp
jp
dec
xor
sub
cmp
subl
inc
nop
jo
aaa
push
lds
out
popf
xchg
bound
jl
loop
hlt
jecxz
insl
jle
les
out
sbb
jle
je
cmp
inc
cmp
mov
mov
jo
xchg
jbe
adc
sbb
dec
jbe,pt
leave
imul
repnz
dec
cmc
ret
add
in
insl
call
mov
add
outsb
mov
mov
pop
jno
fstpl
mov
inc
and
sbb
add
int3
add
xor
pop
stos
sbb
cmp
subl
cmp
inc
aad
cld
push
cmp
and
test
or
xchg
enter
imul
sub
daa
jle
cmovo
hlt
les
mov
das
push
or
test
dec
pop
fildll
mov
js
gs
stc
fnstenv
lods
xor
push
and
add
mov
loope
insb
cli
mov
cwtl
or
lods
jne
std
push
sbb
inc
movsl
int3
jecxz
push
sbb
sbb
cltd
push
mov
test
je
or
push
jno
sub
jg
dec
mov
rorl
outsb
xchg
fadds
subl
jae
cmp
sbb
fstpt
push
fcompl
xchg
pop
pop
cli
inc
scas
cmpsb
jg
shrl
pushl
add
insb
xor
fisttpl
test
loopne,pn
mov
fadds
xlat
push
and
dec
jb
add
test
add
mov
inc
lcall
scas
sbb
std
pop
sbb
filds
int
es
mov
rolb
jge
cltd
nop
xor
cmp
aas
int
sub
pop
mov
adc
ss
fisttps
adc
sbb
add
fwait
ret
cmp
add
add
loope
cltd
outsl
push
mov
dec
imul
adc
test
repnz
test
and
dec
sbb
repz
ret
mov
jae
into
and
in
addr16
in
cmp
pop
cwtl
outsl
mov
incb
mov
test
stc
enter
icebp
sbb
mov
dec
sbb
addl
and
mov
movups
aas
out
mov
jo
pop
push
loope
cs
adc
jae
ret
aad
inc
push
rcrb
addr16
mov
fdiv
mov
leave
push
outsl
cs
sbb
sbb
ja
mov
xchg
xor
push
loop
movsb
stc
arpl
cmp
rol
imul
xchg
pop
out
loopne
dec
popa
xchg
jae
mov
jle
outsl
insl
icebp
xorl
xchg
cmp
or
jmp
popa
outsl
adc
jmp
cwtl
aam
inc
mov
adc
fistps
inc
out
fstps
jmp
push
outsb
scas
mov
jo
cmc
jbe
stos
or
pop
mov
or
mov
int
pop
ret
in
imul
mov
dec
shrl
daa
pop
cwtl
push
cld
jge
fimuls
or
jo
mov
clc
push
sub
insb
call
jmp
mov
mov
mov
lods
sahf
add
es
mov
sub
outsb
sbb
push
fwait
add
add
sbb
lock
cmp
call
xor
ljmp
pop
fs
cmp
pop
stc
add
out
cs
fxsave
ret
addr16
sub
mov
mov
dec
push
in
leave
ficompl
cli
movsl
mov
and
mov
lods
push
xor
push
in
movsb
ret
inc
rolb
icebp
add
mov
push
mov
sahf
and
mov
jl
aas
and
add
push
or
je
xchg
je
ret
outsb
inc
push
scas
mov
add
dec
lea
mov
addr16
mov
mov
and
pusha
mov
idivl
adc
mov
orb
mov
nop
mov
push
test
outsl
dec
xchg
push
sbb
cmpsl
lahf
icebp
jmp
insb
call
test
mul
sbb
and
xchg
and
les
jae
cmp
dec
add
mov
inc
lahf
fs
pop
jns
lock
stos
pop
jecxz
cli
dec
or
test
loopne
push
stc
jae
call
sbb
and
cmp
mov
arpl
icebp
or
daa
mov
js
adc
fs
sahf
aaa
mov
inc
cmpsl
fcompl
pop
loopne
jl
sub
fldl
xchg
gs
into
mov
je
mov
jmp
pushf
fmull
fsubl
in
lods
xor
loope
mov
fcoms
cmpsl
popf
xchg
filds
scas
adc
jno
out
and
jne
loopne
orl
and
test
movsb
jo
inc
jecxz
pushf
or
rclb
ret
xchg
fwait
jmp
nop
pop
jns
ret
fwait
cmc
and
test
je
shl
push
rorb
loope
and
hlt
in
push
jnp
jbe
push
push
lret
cltd
or
dec
clc
adc
roll
inc
scas
mov
adc
inc
lds
mov
popf
cmp
xchg
out
xor
and
pop
bound
inc
xchg
adc
icebp
ds
push
call
in
shlb
or
push
lea
aad
sbb
adc
outsl
cli
add
or
cmp
cmp
cmc
mov
xchg
in
cmpsl
mov
fcompl
mov
mov
mov
mov
xchg
or
push
sbb
ret
push
pusha
daa
mov
inc
push
bound
xchg
pop
mov
adc
mov
rorb
ljmp
repnz
test
sbb
push
test
or
xor
adc
insl
xor
insb
loopne
xchg
sub
stc
jp
pop
out
ret
mov
aam
rcrb
jns
cmpsl
cmp
scas
sub
loope
adc
mov
cs
jl
cmpsb
mov
xor
rcrl
loopne
divl
scas
xor
mov
push
scas
sbb
rclb
into
movsb
sbb
jbe
add
xor
push
jl
push
in
fisubrs
mov
fbld
lret
jg
dec
push
int
fldl
fsubl
mov
lea
mov
lea
adc
and
loope
dec
mov
test
gs
inc
clc
imul
test
jecxz
test
int3
xchg
and
xchg
push
js
data16
rcrb
fidivrs
cmc
sub
es
push
ss
mov
mov
aam
mov
push
pop
sub
jg
dec
popf
clc
cmp
movsb
sbb
fdivrs
in
arpl
push
mov
call
xchg
aad
scas
fidivl
push
scas
movsb
fwait
in
or
mov
cmpl
popa
xchg
stc
insb
mov
push
pop
sbb
stos
mov
fimuls
pop
jle
fldt
sbb
sub
adc
push
test
dec
inc
mov
hlt
lds
xor
in
mov
mov
in
invd
push
notl
push
popa
inc
test
jmp
fsubrl
mov
mov
inc
cs
enter
mov
or
loop
dec
paddb
int3
dec
mov
lds
mov
icebp
sbb
mov
mov
fistpl
rclb
push
into
add
subl
xchg
mov
int3
adc
adc
fsubrl
scas
aam
icebp
adc
mov
sub
hlt
adc
xchg
fnstsw
inc
push
sbb
fisubrl
aam
popf
jo
xchg
out
das
stos
or
dec
test
hlt
ret
pop
or
je
push
add
daa
jae
pop
cmp
stos
adc
mov
adc
lret
jmp
shl
aam
fnstenv
arpl
dec
cmp
pop
rorl
sbb
lret
push
sti
xrelease
test
dec
ret
iret
push
ss
or
xor
jo
cmpsb
pop
arpl
xchg
pop
or
pop
sbb
xor
xchg
or
sub
or
or
jbe
pop
or
push
push
lds
sbb
sahf
add
popf
xor
mov
fistpll
repz
push
ja
repz
mov
imul
lds
jmp
pop
into
mov
mov
mov
cmp
mov
imul
inc
push
cmpl
jo
mov
xor
cmp
pop
jno
add
dec
ret
mov
inc
push
jmp
xchg
jne
insb
sarb
adc
inc
xchg
xor
lea
push
pushf
and
pop
or
call
rcrb
mov
mov
cmpsb
lea
pop
negb
sub
mov
jp
mov
lcall
fsubr
test
jne
mov
repnz
rdmsr
xor
prefetcht0
push
sub
push
mov
inc
jg
lea
sbb
sub
cmp
loop
jp
sbb
sub
imul
xor
lea
mov
add
loope
out
fcmovnb
mov
pop
popf
in
xor
loope
and
fisubrs
scas
mov
mov
jl
push
pop
mov
loopne
mov
test
xchg
ret
shl
jg
xchg
mov
cmc
dec
pop
jg
sub
fstl
sbb
lret
out
push
outsb
mov
in
addr16
cmp
leave
push
data16
pop
out
inc
cltd
cmp
or
repz
repnz
add
push
inc
push
push
add
mov
testb
xorl
ja
imul
xchg
mov
dec
or
les
jg
and
lods
pop
or
ret
pop
les
and
ds
es
sbb
sub
imul
daa
inc
cmp
mov
iret
mov
mov
cmp
mov
xchg
mov
mov
loope
cmp
pop
inc
fisubrl
in
faddl
jge
sub
sub
jae
jmp
and
mov
loope
adc
repnz
lret
out
divb
push
aam
dec
insb
push
repnz
outsb
lods
jp
jge
cmpl
stos
sbb
movsl
cmc
sub
cmp
lahf
mov
ret
inc
mov
ret
daa
sub
jne
push
push
sub
and
stos
fdivrs
xor
scas
add
inc
jle
jge
mov
insb
or
mov
fcoms
fldl
repz
pop
jecxz
das
or
xchg
sub
pop
repz
pop
sahf
and
and
inc
xlat
jae
popa
pop
pop
into
je
lahf
jno
or
lea
fsubrs
dec
xlat
xor
pop
or
adc
lahf
fcomip
add
push
xlat
popa
je
mov
pop
lds
cwtl
aas
nop
pop
sub
fildl
jge
pop
scas
imul
add
jecxz
jge
pushl
aaa
ficoml
ljmp
xchg
test
imulb
mov
ja
rorb
jmp
jecxz
sub
xlat
cmp
and
mov
mov
movsb
jg
jle
imul
mov
fwait
mov
cmp
ficompl
add
punpckhbw
std
cmpsl
push
fwait
cs
add
push
cmpsl
insl
ret
rcrb
mov
xchg
or
mov
pop
fyl2x
fadds
sub
jno
test
inc
pop
sub
push
stos
das
add
outsb
push
adc
roll
imul
adc
pop
dec
dec
push
std
iret
jg
lds
in
inc
ss
je
movsl
cmpsl
loopne
js
mov
mov
and
dec
in
sub
xor
shll
orl
rorl
aad
daa
ror
mov
push
mov
sbb
sub
and
rcl
rcrl
mov
lahf
daa
sub
fiadds
pop
out
add
data16
push
fistps
add
fcmovbe
cltd
push
sub
rcrl
adc
popf
inc
lcall
inc
sahf
shlb
xchg
pop
adc
xor
sbbb
adc
and
xchg
scas
incl
xor
loopne
jae
push
lret
pushl
mov
bound
mov
dec
push
xor
dec
ss
cmp
lock
push
aas
push
xchg
iret
daa
bound
repz
jne
mov
inc
and
sub
repz
push
fwait
xchg
mov
dec
outsb
scas
lods
insb
leave
push
and
jns
test
or
push
pop
add
enter
sbb
sahf
mov
sbb
xchg
scas
xchg
bound
and
loopne
fsubs
shll
dec
and
rcrl
mov
repz
adc
repz
inc
dec
add
xor
mov
cmp
test
mov
jle
mov
fldt
push
cs
or
xor
lock
mov
lds
lret
lock
mov
testl
cmp
mov
dec
shlb
fdivs
dec
jg
lds
shl
xor
push
scas
das
mov
aam
mov
push
cld
jmp
push
dec
mov
mov
and
sbb
scas
pop
dec
push
in
cmp
cld
mov
psubb
push
sbb
ret
mov
jge
inc
movsb
mov
and
dec
push
pop
nop
xchg
mov
mov
xchg
test
pushf
xchg
mull
in
scas
les
rclb
jecxz
sbb
jne
push
jae
lcall
ljmp
gs
je
add
das
dec
int3
mov
enterw
sub
je
repnz
mov
adc
and
xchg
push
rolb
push
push
int
mov
out
sbb
cwtl
mov
insl
sub
fistl
mov
and
repz
mov
xchg
dec
nop
xlat
mov
dec
test
cmpsl
pop
mov
popl
sbb
pop
mov
iret
cwtl
mov
mov
divl
mov
out
scas
arpl
push
pop
sub
push
pushf
push
pusha
inc
cli
or
shl
push
out
mov
insl
dec
and
xor
adc
sar
lcall
adc
dec
push
inc
scas
pushf
movsl
call
scas
sub
mov
jae
icebp
outsb
lret
nop
movsl
out
mov
and
cmp
xchg
aaa
cmp
iret
insb
adc
and
jno
add
daa
jl
psadbw
lcall
xor
test
fwait
stos
jecxz
std
sahf
dec
mov
pop
in
mov
adc
xor
cmp
mov
xchg
adc
or
push
xchg
jae
dec
mov
fs
mov
jbe
and
pusha
or
mov
cmp
inc
cmpsw
stos
cmp
or
fadd
test
jnp
cs
sub
sbb
inc
es
jle
inc
sub
xchg
mov
rcrl
jns
testb
aas
mov
out
leave
sbb
or
or
pop
xor
jmp
xchg
mov
jne
insl
adcb
mov
xor
pop
out
cmc
cmc
loop
sarl
lret
pushf
divl
mov
ja
out
mov
dec
sub
add
or
mov
inc
push
sbb
dec
imulb
test
and
sub
or
mov
in
sbb
popa
in
cltd
sub
in
dec
mov
movsl
dec
pop
xor
push
loope
mov
adc
mov
repz
xor
lds
hlt
je
imul
imul
pop
jne
fisttpl
iret
mov
loope
pop
jo
jb
sbb
std
mov
push
daa
and
push
push
ss
push
andl
adc
push
mov
fwait
js
lcall
ret
aaa
inc
xchg
sbb
loope
ds
jb
jns
push
xchg
aad
cmpsl
pop
lret
into
cmp
add
xlat
xorb
cltd
adc
jbe
sbb
push
movl
or
rcl
dec
call
nop
jmp
mov
les
add
push
inc
scas
in
mov
add
dec
mov
xor
ljmp
out
jl
sub
jne
out
leave
inc
int3
add
pop
xchg
xor
or
pop
dec
test
lds
sbb
imul
add
cmc
adc
sub
or
add
adc
and
addr16
sub
mov
cmp
cli
cmc
mov
cmp
jmp
repz
insl
add
jge
cmp
sbb
fstps
jns
lea
or
adc
call
loop
fisttpl
test
push
ret
cmp
aas
repnz
push
sub
cmp
or
out
test
dec
xor
mov
loop
inc
cmp
je
push
stos
loopne
adc
iret
pop
fldl
test
or
bound
jmp
ficomps
sbb
icebp
scas
je
test
iret
push
xor
fsub
add
sbb
dec
push
stos
scas
int
hlt
or
or
call
xor
cmp
fwait
pop
jge
adc
mov
dec
cmp
in
jg
mov
ficoms
stos
scas
add
and
jne
add
jne
ret
pop
outsl
jb
out
cmp
jbe
movsl
or
mov
iret
cmp
dec
sub
sarl
test
xor
fcmovu
mov
dec
shrl
fld1
gs
push
sahf
lret
sbb
mov
loope
je
cmp
test
adc
addr16
insl
fst
pop
push
mov
xchg
fbstp
sbb
mov
and
icebp
imulb
aad
cmpsb
xchg
daa
stos
push
push
mov
dec
xchg
pusha
lods
push
or
pop
mov
addr16
fdivs
les
jae
movsb
sub
inc
test
mov
test
jge
addr16
movsb
xor
pop
mov
mov
mov
imul
add
xor
addb
addr16
mov
mov
out
push
out
scas
movsb
out
pushf
lahf
fisttpll
mov
push
aaa
xor
sbb
fwait
pop
cmp
jmp
pop
js
mov
or
in
insb
loopne
cld
stos
jnp
or
test
cld
xlat
sbb
fs
xchg
movsl
int3
dec
and
dec
dec
xor
inc
shufps
das
mov
sub
xor
out
pop
ljmp
fadd
fimuls
mov
pop
popa
xchg
cld
and
mov
or
dec
cmpsb
push
imull
dec
pop
mov
pushf
shlb
push
add
iret
mov
inc
int3
test
fisubs
inc
sub
pusha
xlat
shlb
arpl
movsb
mov
sbb
dec
lods
pop
js
sbb
xlat
addl
pop
mov
push
dec
das
cmp
mov
ret
jns
cld
sub
mov
ljmpw
and
arpl
mov
push
mov
jb
pushf
add
fcoms
pop
in
rclb
and
daa
xchg
fwait
sub
es
pop
mov
jae
add
callw
push
sub
bts
sbbb
fiaddl
iret
xchg
fadds
addb
test
mov
pop
loop
sbb
repz
std
in
nop
test
or
test
roll
xchg
mov
adc
mov
loopw
mov
es
inc
xchg
cmp
or
push
jno
ds
ja
enter
sub
ret
popl
std
lcall
jmp
adc
lcall
pop
cmc
int
sub
int
scas
dec
push
and
xchg
xchg
movsl
rorl
imul
andb
push
sbb
lret
and
push
fmulp
sbb
int
leave
ret
cmp
hlt
push
hlt
cwtl
cmp
adc
xchg
xchg
or
push
es
jne
jbe
jle
push
fldt
jae
mov
dec
pop
push
mov
push
cmp
xchg
shll
or
inc
cltd
fildll
adc
mov
push
adc
movsl
aad
sub
cmp
inc
gs
fadd
in
cltd
dec
ret
bound
dec
push
jmp
repnz
adc
cwtl
dec
add
cld
xchg
loopne
fs
sub
dec
and
and
outsb
out
or
mov
std
sub
enter
test
or
in
ljmp
jns
cli
mov
ret
push
stos
and
pusha
and
popa
xchg
pop
sbb
aam
fldl
mov
adc
dec
dec
mov
lahf
cmp
or
cld
mov
jb
ret
sub
sbb
lret
cmc
or
lret
andl
fucomip
out
or
sbb
ljmp
popa
push
stos
fistl
js
inc
in
push
lcall
mov
adc
pop
xchg
add
dec
mov
xor
outsl
xchg
shlb
mov
sub
or
lret
pop
add
xor
add
pusha
aaa
test
xor
xchg
fidivl
sub
sbb
les
jmp
inc
pop
adc
movsl
ret
xor
mov
add
das
add
loope
bswap
loopne
cmp
cs
add
dec
or
cmc
xor
jmp
ss
add
clc
jp
fcom
fcoms
mov
add
test
jbe
mov
jp
in
mov
xor
mov
imul
pop
mov
sub
sub
int3
subl
test
mov
daa
addr16
lcall
das
pop
movsl
push
pop
adc
jle
or
inc
xor
hlt
cmp
outsb
ret
into
sub
pushf
mov
jmp
ja
test
add
insb
mov
scas
sub
pushf
popa
and
hlt
xchg
xchg
cli
mov
lahf
or
aas
lods
out
push
pop
loop
xchg
out
arpl
add
mov
cmp
in
call
xor
gs
add
mov
pop
pop
cmp
je
cmpsb
dec
add
je
in
leave
sbb
cmc
or
fs
into
adc
xchg
or
test
sti
mov
ficompl
push
pop
les
fstpt
inc
jne
jns
outsl
ret
std
mov
das
add
movl
add
sbb
in
imul
test
xchg
stos
mov
dec
adc
mov
andl
push
aam
and
push
aaa
nop
add
fnstsw
incb
sub
stc
push
inc
push
and
jp
adc
jle
outsl
lea
cwtl
loope
xor
and
data16
div
clc
sub
aad
lahf
loop,pn
mov
pop
inc
push
fwait
lret
cmp
adc
pop
jno
in
push
pop
data16
add
xchg
or
cs
ljmp
add
xor
jno
sbb
insb
shlb
jg
jle
xor
stc
mov
pop
xor
es
pop
out
pop
dec
mov
mov
ret
pop
stos
dec
pop
and
stos
mov
lds
or
add
and
aad
sub
movsl
in
repz
sbb
sbb
repnz
mov
sub
cmp
lahf
cmp
jne
dec
repnz
jle
sub
cmp
adc
jbe
adcb
int3
jecxz
cmpl
mov
sahf
xor
sbb
scas
cmp
loope
ljmp
mov
cmp
and
idivl
movb
movsl
dec
movsb
mov
mov
out
add
testl
cmp
sub
jmp
sub
cmp
insb
jl
cs
sub
jbe
mov
pushf
in
insb
addb
loop
test
sbb
rcrb
aam
cwtl
out
push
and
mov
icebp
ret
les
scas
push
mov
adcl
sbb
iret
push
xchg
mov
mov
cmp
lcall
test
jge
fs
lcall
faddp
pop
enter
shlb
pop
fldt
mov
out
cmp
repnz
lock
mov
and
lahf
pop
cmp
xlat
pop
adc
loop
test
insl
rcll
adc
ljmp
ja
or
sbb
or
mov
mov
or
sahf
insb
or
ret
imul
inc
jle
mov
stc
inc
sub
stos
lahf
sbb
xor
pusha
jb
mov
ret
jge
psllw
sub
insl
inc
pop
clc
test
sub
xor
stos
lret
nop
loope
jb
cltd
inc
pop
test
sub
sbb
or
lods
dec
mov
adc
add
or
out
out
addl
push
xchg
dec
iret
mov
push
ljmp
push
in
jne
pop
push
sbb
aad
es
push
mov
cmp
xchg
pop
inc
push
data16
jge
inc
xchg
fiadds
je
dec
jmp
inc
or
pop
adc
cli
pop
and
xor
push
int
loope
xor
lods
es
pop
movsl
pop
in
repz
pop
push
mov
fs
sub
jl
dec
scas
cmp
sub
xchg
push
loope
xchg
imul
fwait
ljmp
mov
test
out
sub
jle
jno
dec
mov
adc
mov
adc
fcmovu
mov
mov
dec
ss
ret
aad
ficomps
jno
daa
lock
mov
lods
int3
cmp
pop
sbb
xchg
push
xorl
in
lret
jae
aas
add
dec
jnp
scas
push
mov
fcomps
int3
fs
mov
into
mov
add
mov
add
push
xlat
cmp
aam
cmp
pop
push
adc
repnz
stc
add
std
hlt
add
mov
enter
adc
adc
fiaddl
mov
inc
or
insb
or
push
data16
cmp
mov
mov
iret
das
cmp
ret
rcrb
rol
inc
pop
psubw
jmp
cwtl
out
jbe
and
xchg
mov
xchg
jmp
ss
rol
pushf
and
dec
mov
cwtl
mov
aaa
cs
cmpsl
cmpsl
pusha
div
loop
test
cmp
repnz
push
push
mov
decb
jg
inc
lahf
add
lahf
or
cmp
pop
or
sub
out
adc
ja
aaa
mov
in
pop
test
inc
ljmp
fisttpll
mov
adc
aam
mov
lods
ja
jmp
pop
sbb
pushf
dec
daa
rclb
add
push
test
adc
cwtl
fldcw
mov
pop
repnz
jae
je
dec
or
fdivrl
mov
mov
bnd
insl
xchg
sbb
cmpsb
fdivs
mov
push
push
fiadds
test
in
subl
xor
cmp
fadd
jae
push
cs
xor
repnz
arpl
push
pushf
mov
or
jecxz
js
xchg
ret
stos
mov
inc
outsb
mov
rorb
pop
pop
fmuls
push
call
ds
mov
cmp
mov
xchg
loopne
sbb
mov
xchg
mov
movsl
lahf
test
push
mov
jmp
stos
cmp
dec
jns
sbb
xchg
dec
sbb
shrb
sbb
std
dec
cmp
or
scas
fisubs
xchg
dec
and
psllw
stos
add
adc
or
out
xchg
mov
jb
pop
lods
inc
ret
inc
xor
insl
xchg
icebp
adc
pop
movsb
push
imul
cmpb
fcomps
sahf
lcall
jge
xchg
sub
jmp
inc
sub
sub
stc
repnz
mov
sbb
enter
and
inc
add
stos
cld
adc
hlt
mov
divps
adc
mov
outsl
ss
imul
les
test
and
aaa
push
mov
xchg
addr16
aam
add
sbb
nop
xor
ror
jge
xchg
hlt
ja
pushf
xchg
aas
xlat
ljmp
pop
xchg
mov
testb
nop
mov
movsl
addr16
loop
test
orb
std
loope
mov
loope
stos
out
push
es
js
bound
dec
scas
push
mov
cwtl
int3
and
inc
sbb
mov
mov
std
pop
xchg
pop
cmpsb
dec
sbb
movsb
add
loop
push
mov
and
cmc
mov
daa
pop
mov
pop
inc
xor
or
ljmp
imul
inc
sti
sbb
icebp
push
test
xchg
add
stos
fucom
je
pop
xor
dec
add
push
push
nop
push
xchg
mov
jecxz
aad
imul
cld
pushf
mov
das
and
and
xchg
jo
decb
lret
lds
arpl
adc
xchg
pop
push
fsubl
pop
fstl
mov
and
aam
jl
pop
test
and
insl
jae
ret
adc
addps
pushf
gs
daa
xchg
loope
xor
mov
dec
sub
jg
sbb
xchg
es
and
test
pop
ret
sti
std
adc
lock
test
cmp
mov
inc
pop
jns
mov
lock
loopne
lods
jge
mov
adcl
repnz
xchg
pushf
push
jnp
cmp
shrl
mov
jno
les
rolb
imul
gs
inc
mov
leave
push
inc
into
jnp
js
inc
stos
cltd
fwait
iret
adcb
and
cmpsl
cmp
add
xchg
sbb
pop
std
outsb
cmp
jge
or
add
jge
and
out
inc
insb
add
sub
sbb
sbb
movsl
sub
push
cmp
mov
lock
test
pop
test
aas
icebp
hlt
ljmp
sub
sub
push
mov
adc
mov
mov
and
dec
adc
lret
jbe
cmp
shlb
fneni(8087
and
mov
pop
hlt
jae
lret
mov
jg
mov
aaa
scas
loop
js
ss
bound
sub
stc
cli
lret
xlat
cmp
push
push
cmp
das
out
js
cmp
jg
sarb
push
stc
push
clc
sahf
mov
fistps
mov
mov
movsl
push
fdivl
out
test
adc
call
clc
jmp
pop
ss
aad
push
inc
push
mov
push
sub
mov
ror
pop
popf
mov
pop
mov
sub
xchg
aam
push
and
cmp
jg
stc
and
shlb
test
cbtw
pop
fprem
or
js
mov
jbe
iret
jbe
mov
aad
movd
inc
dec
in
jmp
pusha
cli
jmp
mov
or
adc
daa
xlat
mov
ror
or
repnz
lcall
pop
or
adc
cmp
mov
adc
or
jnp
push
out
fldcw
sbb
mov
mov
xchg
or
jmp
jae
mull
adc
lcall
hlt
lods
movsl
sbb
and
scas
orb
jle
sub
xorl
movsl
ljmp
xor
pop
sub
cmc
xor
ljmp
ds
sub
or
mov
and
xorb
lahf
mov
and
inc
xor
addr16
test
xchg
jns
push
shll
daa
das
pop
cmpsb
fisubrl
dec
insb
dec
mov
in
sbb
stc
aad
xchg
dec
and
mov
pop
icebp
and
mov
xor
jns
xor
pop
cmp
fsubr
emms
js
inc
mov
pop
jl
xlat
jbe
or
aaa
dec
std
dec
sti
pop
cmovne
or
into
pop
push
push
dec
adc
xchg
mov
add
roll
mov
cmp
mov
imul
out
repnz
mov
cmp
adcl
sbb
outsl
mov
dec
and
jne
shll
hlt
bound
jmp
into
add
jmp
ss
mov
lcall
icebp
ror
add
or
pop
mov
adc
sbb
add
xor
jge
lea
jle
mov
adc
jnp
jge
pop
pop
rcl
cmpsl
jmp
sbb
mov
mov
inc
xchg
cld
in
arpl
add
xchg
das
inc
mov
xlat
sar
or
cmp
bound
mov
jp
in
insl
pop
sub
xchg
sub
sidtl
aad
cs
sub
pop
sub
jno
push
scas
sarb
pop
and
sub
adc
sbb
or
lcall
test
addr16
int
add
sub
sbb
leave
rcrb
mov
xor
stos
enter
xor
xchg
addr16
lahf
test
ss
add
fsts
cmp
xor
push
scas
jns
out
or
call
jo
popf
adc
fisttpl
cmp
mov
ret
mov
or
sbb
or
xor
fwait
dec
inc
out
push
movsl
mov
divb
pop
push
movsl
lds
pop
hlt
cli
mov
gs
insb
cmc
int3
jg
mov
fimull
cltd
jb
mov
repnz
or
pushf
mov
test
es
mov
xchg
or
sub
xor
and
clc
and
test
add
inc
test
pop
std
ss
dec
and
inc
pushf
pop
push
pop
iret
push
lret
or
mov
push
call
and
mov
neg
add
mov
mov
arpl
pop
dec
or
mov
mov
sbbb
inc
loope
ja
or
lcall
sbb
aad
dec
ljmp
lret
fld
adc
insb
sbb
jle
mov
mov
jle
cli
and
shrb
lcall
mov
dec
fistpll
out
inc
mov
sbb
arpl
idivl
pop
je
sub
mov
sub
dec
jbe
out
inc
jmp
add
mov
mov
gs
maxps
mov
test
fimuls
movsl
dec
inc
jae
cli
inc
repnz
in
xchg
popa
jb
cltd
cmp
inc
mov
out
sub
pop
es
decl
xor
cwtl
jmp
sbb
leave
ja
lods
fidivrl
inc
repz
push
fcmovnbe
mov
aad
mov
fsubrs
cmpsl
sahf
shrl
movsb
jl
sbb
jecxz
out
pop
les
inc
xchg
mov
out
adc
test
int3
add
or
jo
test
jl
andl
inc
jl
leave
xor
adc
out
ret
mov
outsb
jno
int
lds
jno
js
cmc
repz
dec
jle
popf
jns
adc
push
addr16
mov
lea
fs
mov
hlt
les
sub
jae
xor
jbe
mov
or
mov
aas
shrb
xor
out
out
stc
imul
dec
inc
xor
cmp
jp
cltd
or
or
mov
cmp
scas
loop
lcall
adc
lahf
scas
sbb
xchg
stos
movsl
push
ret
loopne
rorl
pop
mov
sub
sub
sti
pop
sbb
xor
add
cli
popa
movsb
mov
jb
jge
sub
mov
lds
xor
lahf
movsb
cli
adc
mov
psubq
mov
pop
dec
pop
mov
ret
jmp
mov
push
sbb
add
shll
mov
fldt
or
mov
adc
lahf
js
imul
xchg
mov
lcall
adc
es
andl
mov
aas
in
xchg
inc
push
enter
sbb
shlb
push
mov
push
xchg
xchg
dec
lods
inc
push
dec
xor
xchg
fdivl
out
adc
roll
add
lock
cmc
outsl
insl
push
shrl
rolb
sti
out
into
inc
mov
icebp
push
jno
jbe
pop
push
in
lret
adc
push
push
mov
out
inc
in
push
add
jg
pop
adc
pop
adc
inc
test
jg
mov
fistps
cmpl
jno
push
loope
inc
jmp
push
add
ret
sbb
movsl
fldcw
push
enter
popa
pop
fsubl
mov
aad
lods
nop
sbb
xor
cmp
pop
imul
lods
pop
xor
sbb
sub
scas
adc
cmpsl
leave
adc
pop
mov
mov
das
lea
push
mov
dec
shll
push
cmp
jns
sbb
lea
sbb
dec
or
and
mov
cmp
orb
push
inc
sbb
sbb
jl
adc
sub
pop
sti
jne
or
cld
scas
pushf
sbb
and
jbe
outsb
push
ds
testb
xchg
jl
aad
test
inc
cltd
mov
dec
test
setg
cmp
pop
mov
xchg
orb
mov
cmpsb
out
mov
stc
es
icebp
cmp
mov
jmp
and
and
jle
inc
mov
mov
outsb
jno
mov
loopne
push
dec
xchg
loope
jmp
add
xor
movsl
cmp
lcall
ror
adc
xchg
arpl
daa
lcall
into
test
leave
xchg
mov
and
clc
xor
xor
inc
arpl
fisubrs
pop
outsb
mov
mov
adc
mov
jmp
sub
int
jle
mov
add
adc
cmpsb
es
add
cmc
bswap
or
repz
jo
pop
pop
push
jg
or
or
sub
divl
lret
mov
add
jp
mov
in
and
push
ljmp
add
sbb
lds
pop
aas
repz
xor
fdivp
sbb
mov
sbb
dec
cld
xchg
shrl
clc
dec
mov
sbb
ljmp
mov
repz
and
push
mov
in
mov
cs
sub
push
sub
insl
test
js
iret
iret
jp
andb
test
jbe
stc
ret
arpl
test
mov
and
mov
xchg
xchg
mov
cs
push
adc
and
and
ror
push
push
mov
mov
and
ljmp
shr
mov
cmp
adc
insl
pusha
pushf
into
cmpsl
and
into
cmp
cmp
mov
cmpsl
adc
pop
pop
stos
in
mov
icebp
cmp
sbb
and
xchg
mov
mov
dec
dec
xlat
adc
insb
repnz
adc
orb
in
roll
push
add
cwtl
lret
cmp
adc
out
das
inc
clc
inc
mov
jb
xchg
stos
ja
xchg
pop
sub
and
filds
out
mov
adc
mov
mov
fucomi
cmp
sbb
fistps
movsl
pop
arpl
test
sbb
test
adc
loop
mov
pop
inc
repnz
fistpl
sti
loope
inc
mov
cmp
sahf
cmp
in
push
lret
ljmp
push
mov
mov
cmpsl
jmp
mov
popa
xchg
ljmp
je
jge
adc
loop
add
shrl
ret
out
test
stos
out
stos
xor
icebp
int
push
mov
ljmp
fcomp
lret
push
loop
sbb
cmpsl
incb
data16
test
inc
leave
outsb
js
bound
mov
add
shlb
arpl
out
mov
xchg
outsl
mov
pusha
adc
mov
jo
adc
pop
lods
jp
dec
or
push
pop
push
clc
mov
cmp
or
dec
jae
out
ret
mov
sbb
adc
push
or
cmp
subl
pop
sbb
xlat
cmpl
mov
lock
or
cmpsb
push
inc
out
dec
movsl
in
mov
rcrb
clc
fwait
and
adc
lods
cmp
sahf
shll
or
and
sub
pop
cmpsl
mov
adc
shrl
and
sub
xchg
push
mov
lock
mov
mov
mov
mov
arpl
mov
scas
repnz
aaa
std
pop
fisubrs
test
add
add
bound
mov
shl
loope
insl
sub
cmp
sarb
or
pusha
add
push
mov
xchg
cli
mov
mov
add
loopne
xorb
or
sbb
pop
jbe
mov
pop
rclb
pop
pop
or
int3
loop
call
dec
and
mov
push
aad
nop
push
cld
out
add
xchg
scas
pop
or
mov
or
xor
sub
add
sub
notb
cmp
push
xchg
and
xor
pop
addr16
pop
pop
jle
cmp
imul
int3
push
rorb
lock
jl
push
add
daa
pusha
imul
lock
adc
pop
test
push
xchg
lret
mov
push
sbb
imul
in
cmpsb
lds
arpl
mov
ds
or
xor
dec
insl
xor
pop
push
rcrb
jno
dec
fwait
inc
ret
mov
scas
sub
push
popa
xchg
ss
enter
dec
mov
mov
cmpsb
add
rep
mov
xchg
rorb
das
inc
add
cmp
mov
aaa
lods
adc
pusha
out
mov
xchg
fcoms
clc
cmp
xchg
sbb
xchg
add
jno
sub
shlb
and
pcmpeqd
adc
pusha
cmp
movsl
lret
lahf
popf
inc
rclb
jae
push
sbb
dec
inc
in
xlat
fisubl
nop
inc
daa
js
idivl
add
cmpsl
ds
ret
addb
adc
xchg
lods
jge
mov
inc
mov
les
sub
and
incl
in
jl
or
int
jns
xor
pop
pop
data16
xor
fdivs
enter
jae
xorl
mov
cmpb
jno
test
sub
stos
adc
and
repz
cli
xor
inc
xor
sbb
mov
cmpl
stos
lahf
in
jae
nop
jbe
push
sub
jno
jo
dec
jl
jne
mov
add
jno
push
xchg
sbb
push
push
imul
xor
push
bnd
dec
mov
pop
jmp
pusha
sbb
ret
jl
aas
ss
outsl
adc
test
cmp
push
lcall
jnp
stos
shrl
inc
sbb
and
sbb
push
insl
mov
xchg
push
cmp
sub
cs
jmp
push
mov
xchg
mov
jmp
call
dec
loop
pop
cmp
dec
sti
movsl
push
push
jbe
and
imul
sbb
nop
xchg
jge
or
lock
pop
pop
movsb
cmc
clc
subl
jbe
mov
sub
aas
aam
mov
push
xchg
inc
dec
push
jno
test
dec
inc
mov
mov
das
xchg
imulb
nop
in
dec
or
nop
dec
add
pop
fcomp
adc
xchg
mov
jo
movsl
inc
shrb
ret
push
pop
sub
xchg
into
adc
mov
xchg
mov
cs
sbb
sahf
push
ss
xchg
loop
and
cld
lret
subb
adc
shr
xor
mov
lea
fbld
adc
es
sub
xor
mov
fbstp
test
xchg
ljmp
into
push
mov
or
push
js
out
xchg
mov
adc
push
cmp
sti
scas
addr16
mov
push
mov
sbb
mov
xchg
inc
js
stos
xor
and
lods
sbb
mov
xlat
jne
and
jecxz
les
es
pop
repz
notb
add
sbbl
push
mov
push
inc
mov
sbb
mov
nop
sub
push
pop
jno
popf
push
pop
and
insb
inc
cmc
mov
leave
push
dec
sbb
fs
scas
mov
int
into
hlt
dec
or
sub
pop
lds
mov
out
fcomps
cmp
aad
mov
mov
jnp
adc
fcoml
inc
mov
orb
inc
hlt
jo
mov
sub
inc
jge
jl
mov
arpl
sub
mov
lahf
pop
dec
test
push
add
ficompl
mov
mov
scas
dec
jp
inc
dec
mov
mov
inc
sbb
loopne
repnz
js
lods
dec
pop
inc
pop
or
xor
mov
push
in
das
mov
insb
arpl
es
call
sbb
push
stos
jae
sub
cmp
shrb
and
jmp
data16
cs
pop
popf
jmp
or
jecxz
divl
test
cmp
jg
mov
sub
add
ret
pop
dec
shlb
into
adc
inc
jne
fsubl
cmp
jns
lcall
sbb
call
cmp
icebp
mov
xlat
push
jno
cmpsb
sub
jg
fistps
popf
add
jne
mov
lea
subb
stos
dec
lock
int
mov
sbb
cmp
adc
add
mov
pop
dec
and
loopne
mov
and
jmp
jmp
ja
cs
or
push
js
xchg
cli
cmp
and
cmpsb
push
int
mov
aas
movsb
hlt
out
adc
outsl
jge
jae
addr16
mov
ljmp
gs
imul
or
sbb
xchg
push
mov
cmp
lret
sub
adc
mov
push
pop
movsl
xchg
mov
popa
ja
jle,pt
and
inc
enter
cmp
xor
clc
add
lods
or
cmpb
lret
insl
mov
aas
and
cli
out
stc
inc
adc
adc
inc
xor
xchg
or
cmpsb
and
dec
test
sub
ja
add
aad
xor
inc
lods
cmpsl
xchg
sbb
sti
cmpsb
mov
adc
pushf
or
mov
sbb
mov
js
xlat
or
adc
jl
rclb
push
dec
or
jbe
jmp
fwait
push
testl
test
pop
shrb
inc
sbbb
iret
and
xor
movsl
or
mov
cltd
pushf
sahf
rcrl
xchg
mov
mov
push
imul
xchg
add
incl
dec
xor
fcmove
push
ljmp
jecxz
xchg
jp
mov
pop
aam
and
outsb
in
popa
cmpb
push
cmp
shll
jno
arpl
mov
ret
sub
lret
mov
jmp
push
sub
in
push
popl
mov
ds
clc
mov
test
xor
adc
mov
das
adc
mov
xlat
in
in
push
jmp
fnstcw
in
mov
jbe
xor
dec
popf
pop
jl
inc
mov
add
call
pop
out
or
pop
jne
dec
outsb
icebp
cld
aad
or
or
scas
jae
insl
scas
adc
pop
pop
sub
adc
and
scas
mov
dec
sbbl
popa
inc
sarl
jl
ljmp
call
icebp
jbe
xlat
push
pop
mov
fmull
call
cmpsb
in
mov
test
je
movl
jno
xchg
mov
mov
call
test
xor
jb
cltd
loop
or
push
mov
jae
in
xor
imull
pop
pushf
popa
jnp
xchg
pop
or
push
dec
loope
idiv
fs
add
test
sbb
add
popa
add
lock
or
inc
mov
shl
out
popa
sahf
jae
out
jns
aaa
mov
insb
ja
mov
cmp
js
or
mov
jns
stos
rcl
or
mov
movsl
mov
or
mov
movsb
int3
test
mov
adc
xor
outsb
xchg
iret
movsb
mov
nop
daa
das
xor
daa
loopne
xlat
mov
jg
fwait
cli
mov
dec
out
enter
leave
and
push
add
int
test
lret
mov
cld
nopl
dec
push
or
sub
in
add
jle
xchg
xor
push
mov
mov
mov
scas
mov
insb
je
xchg
mov
or
bound
repz
enter
out
jno
jae
sub
enter
mov
jl
fcompl
out
jbe
mov
cmpsb
rcrl
push
push
dec
mov
lock
cmp
xlat
cmpsb
fldcw
or
jg
fidivrs
loope
lock
nop
cmpsb
in
xor
jno
fnstcw
mov
jnp
out
mov
sub
mov
mov
insb
dec
outsl
nop
out
fstl
add
jno
jno
test
sub
cwtl
fnsave
mov
les
sbb
add
cwtl
mov
xor
ficompl
lcall
dec
je
mov
adc
jns
es
push
daa
ljmp
sbb
test
push
push
test
arpl
sbb
mov
cld
test
pop
or
cli
sub
cmp
aas
xor
and
test
repz
inc
cltd
loope
dec
int3
pop
nop
out
pop
mov
adc
gs
out
or
enter
movb
sbb
mov
movsb
push
sbb
xor
inc
pop
test
insb
mov
popf
push
js
mov
lds
mov
sub
in
stos
pop
xor
xor
je
cmp
in
mov
and
mov
jp
sub
loopne
loopne
iret
sub
push
adc
pop
ja
lahf
js
pop
jl
sbb
push
or
sti
mov
call
ret
out
and
cmp
jae
pop
cmpsl
or
lret
aas
in
add
xchg
cmp
sbb
mov
cmc
inc
adc
popf
adc
std
nop
loopne
dec
adc
stos
mov
ds
and
je
jmp
inc
mov
mov
pop
jg
outsb
mov
stos
xor
lea
lcall
push
pop
push
cmpsb
nop
or
cmp
inc
add
dec
dec
int3
sbb
jb
add
sub
adc
addps
cmp
inc
hlt
scas
ss
mov
sbb
test
ja
xlat
cmp
jne
add
xchg
sub
ss
xchg
mov
andb
and
pop
lahf
hlt
or
xor
leave
add
sar
out
mov
scas
aam
push
push
fwait
xchg
stos
jne
cmpsl
cmp
sub
push
or
or
dec
ja
nop
jmp
adc
xchg
ficompl
sub
sub
fisttpll
adc
shrl
push
dec
inc
adc
cmpsl
jl
push
enter
fildll
test
cwtl
pop
cmp
andb
insb
les
push
dec
lahf
lods
pop
out
adc
sbb
xchg
lahf
xor
mov
movsb
movsb
push
in
inc
push
insb
and
ja
loope
insl
cmp
mov
adc
cltd
fstpl
imul
outsb
mov
orl
cltd
push
inc
insb
dec
fsubp
xor
sti
insb
movsb
in
push
bound
jae
sub
lahf
cmp
sti
xchg
shlb
sbb
cwtl
das
dec
icebp
lahf
addr16
mov
cltd
popf
pop
shl
mov
sbb
or
lret
push
cmp
ret
pop
std
call
lret
popa
or
and
cmp
xlat
subb
int3
ret
das
xchg
push
dec
mov
add
dec
rorl
cmp
or
iret
jae
fwait
dec
inc
in
fdivs
lea
adc
rol
sub
sub
daa
rolb
add
mov
adc
jecxz
pusha
mov
mov
pop
mov
scas
rcrl
jnp
mov
push
mov
mov
or
movsl
ffree
mov
mov
add
mov
nop
shld
and
cmc
rcr
ret
jb
lods
jle
jae
pop
int
int
fldl
sub
mov
cld
mov
xchg
lods
cmp
and
cmpsl
fadds
push
jge
sub
hlt
jb
ret
lahf
imul
imul
dec
ss
movsb
lods
lods
xchg
lcall
insb
in
mov
xchg
adc
imul
lcall
icebp
adc
lea
aas
hlt
pop
push
aam
xor
sbb
jns
int3
xchg
adc
xor
out
mov
cmp
and
dec
or
dec
out
or
jmp
sti
push
sbbb
inc
and
popa
enter
mov
repz
popa
mov
xchg
in
cmp
std
xchg
push
inc
mov
xor
push
mov
in
push
nop
arpl
dec
and
xchg
mov
inc
mov
jp
push
xchg
xchg
inc
or
push
bound
data16
in
jl
add
icebp
aad
aam
stos
cmpsb
stos
and
pop
cmp
xor
fwait
movntq
and
fimull
dec
and
stos
lds
push
or
in
fdivs
mov
mov
inc
pop
and
jnp
ja
cwtl
dec
int
lcall
arpl
cmpsb
fstps
movsl
jl
pop
pop
jle
pop
lret
dec
or
mov
mul
fstpt
sbb
shlb
lret
inc
adc
pop
add
mov
fcomps
ret
xchg
pusha
stc
in
sbb
push
mov
pop
out
out
adcl
push
cmpsl
inc
stos
mov
dec
mov
and
das
push
scas
cmp
out
iret
add
cmp
stc
lock
mov
clc
scas
imul
mov
ret
mov
es
mov
inc
or
pop
xchg
sti
push
mov
int3
xlat
into
sbb
jae
fisttps
arpl
fcomps
pop
push
in
and
adc
aas
lea
xor
inc
cmpsl
pop
scas
cmp
add
or
dec
addr16
mov
lret
addr16
jne
int3
push
inc
dec
xchg
daa
loope
pop
or
enter
movsb
lcall
pop
aad
or
aam
lcall
add
jae
cld
popf
adc
in
xchg
les
pop
enter
mov
test
and
fidivl
pusha
push
jge
cmp
push
pop
cltd
fildl
push
mov
div
sti
and
fcomp
mov
pop
rclb
mov
adc
repnz
push
mov
xor
pusha
sbb
fsts
das
push
popa
mov
inc
mov
dec
mov
les
and
pop
rolb
frstor
ss
pop
or
dec
xor
pop
or
inc
insb
sub
or
lods
xchg
push
ss
xor
out
mov
or
shlb
dec
shrb
fisttpll
xor
in
in
in
aam
xchg
mov
insl
call
dec
mov
add
mov
xchg
jno
call
pop
xchg
xchg
xchg
es
movsb
in
fisubs
jl
movsb
cmp
arpl
movsl
adc
jbe
int
sbb
loop
sbb
lcall
scas
lea
ret
add
cmpsb
or
push
xchg
imul
pop
roll
push
mov
push
sarl
and
adc
rorl
out
cmp
ss
dec
mov
xor
adc
mov
testl
mov
push
sbb
xor
jnp
fildl
stos
and
jl
and
sbb
add
dec
loope
stc
jb
test
mov
mov
adc
shll
xchg
mov
popa
mov
icebp
mov
test
lock
movl
jae
bsf
add
jo
dec
or
jbe
frstor
stos
xchg
push
fsubrl
cwtl
lods
in
shlb
sub
inc
addr16
inc
cmpsb
xchg
pop
xchg
mov
pop
mov
sbb
pop
inc
sub
cmpsl
sub
lds
and
mov
mov
ja
dec
add
sub
cmp
int
sub
mov
push
call
or
rorb
shlb
cmpsb
lds
and
mov
xchg
add
out
push
iret
add
mov
jg
sbb
rcrl
xor
cmpsl
hlt
mov
pop
inc
les
es
scas
xchg
and
or
push
cmp
lahf
jne
jecxz
pop
mov
scas
out
mov
test
xchg
lahf
pop
push
sti
mov
and
xor
fwait
jnp
sarb
inc
test
ds
and
xchg
fwait
test
cmp
iret
xchg
lahf
xchg
nop
or
roll
rcrl
mov
je
mov
sub
out
dec
sbbl
ret
fcmovnbe
out
clc
lods
in
push
and
add
push
sti
cmp
and
pop
mov
sbb
cmpsl
mov
out
inc
inc
sub
inc
push
rcrb
mov
mov
add
xchg
mov
bound
mov
mov
sbb
jnp
repnz
mov
mov
aam
push
pop
cmp
lahf
mov
int
mov
pop
jae
cmp
cmp
addl
and
ss
sub
lock
cltd
mov
mov
ret
cmpsl
mov
or
mov
jl
push
and
mov
cmpsb
pop
xlat
jecxz
scas
inc
push
mov
xchg
popf
ficoms
test
test
aam
lahf
ds
divb
bound
pop
mov
xchg
push
scas
adc
test
lcall
add
out
sbb
add
lcall
adc
fbld
fwait
je
sti
mov
adc
dec
lods
lcall
mov
mov
ds
xor
pop
into
into
adc
nop
pop
pop
mov
hlt
add
mov
mov
sub
js
iret
or
js
rorb
jge
pop
decb
sub
mov
pop
int3
pop
cwtl
inc
test
aas
ljmp
or
mov
es
xlat
shlb
pop
and
xor
pop
mov
add
sbb
inc
cmp
or
shr
in
js
clc
fcompl
push
shll
cld
nop
mov
jl,pn
lret
gs
or
movsb
and
sbb
fildl
or
dec
je
xor
adc
repz
call
jle
adc
jl
lea
call
jmp
push
lea
inc
mov
std
sub
cmp
pop
ja
push
sbb
push
or
repnz
jle
scas
xchg
test
stc
insl
movb
js
and
outsb
push
ja
mov
sub
aaa
xchg
outsb
and
mov
iret
sbb
adc
out
push
xchg
lock
sbb
cmpw
mov
jb
dec
pop
dec
ret
xchg
lret
mov
add
ficomps
out
les
cmp
mov
mov
and
stos
rorb
outsl
sub
xor
cmp
fisubs
cmpsb
pop
fdivr
lret
fld
shll
mov
xchg
popa
dec
dec
roll
mov
adc
imul
rol
adcl
mov
add
stos
mov
mov
sahf
mov
shrl
lds
adc
fcmovbe
daa
test
and
pop
inc
insl
outsl
scas
rcl
or
lods
roll
pop
sbb
cld
fs
pop
xchg
add
leave
int3
pop
fidivs
ljmp
rcll
imul
ret
push
repnz
add
lds
mov
push
sub
sub
sub
jb
sub
sub
aad
xor
shl
xor
xor
xor
movsb
xchg
inc
dec
dec
andb
das
sbb
addr16
cmp
int3
js
negb
fwait
insl
aam
cmpsl
das
pop
mov
imul
negb
push
aas
and
push
bound
push
push
ljmp
add
stos
push
clc
clc
mov
ds
cmc
aam
xchg
clc
bound
cs
adc
sbb
fs
imul
fisttpll
mov
andl
add
adcl
bound
jns
and
push
jmp
scas
push
in
loop
lret
mov
mov
mov
pop
mov
push
mov
ja
das
xchg
or
adcl
add
mov
and
and
stc
out
ficomps
lahf
push
and
stos
pop
mov
pop
adcl
lret
ds
xlat
enter
inc
mov
jmp
into
mov
lods
mov
mov
xor
icebp
sbb
lahf
movb
sub
fadds
in
add
add
mov
outsl
inc
aas
and
dec
stos
pop
movsl
inc
mov
lahf
add
and
pop
sahf
fcomps
and
and
adc
movsl
xchg
jo
and
in
adc
inc
mov
xchg
frstor
sbb
mov
cmp
mov
pusha
jmp
out
mov
aam
and
jae
xor
and
pop
lahf
jp
test
jnp
adc
test
out
jmp
imul
jle
fwait
cmc
cmp
mov
adc
dec
dec
dec
mov
aam
imul
idivl
mov
lcall
jl
loopnew
cmp
dec
xchg
pop
rcrl
les
popa
xchg
xchg
ds
jne
mov
call
adc
repz
arpl
jle
jb
mov
and
mov
pushf
mov
mov
pop
ficompl
add
xchg
dec
adc
mov
push
aam
add
mov
stos
call
and
or
fisttpll
fs
dec
aam
fwait
int3
icebp
pop
sti
aas
sahf
adc
xor
cli
leave
es
lahf
leave
mov
icebp
rcll
leave
nop
xor
shlb
js
dec
stos
mov
or
pop
add
dec
insl
add
push
jbe
pop
es
mov
incb
or
cmpl
jl
or
add
cmpl
pop
popa
cmp
sub
sbb
cltd
in
test
out
or
lock
jns
call
out
std
mov
stc
push
movsb
icebp
test
dec
mov
ljmp
aad
es
push
mov
cmpsb
iret
in
ds
inc
repz
mov
or
mov
int
jecxz
mov
push
inc
loope
and
js
insl
arpl
std
lea
jg
or
cmpsl
pop
movsl
jl
fidivl
nop
and
xchg
pop
out
outsl
mov
adc
loopne
outsb
lods
mov
aaa
fisttps
enter
adc
mov
pop
mov
cld
xor
inc
mov
cmp
pop
mov
pop
das
mov
cmpsb
xchg
mov
repz
fs
sti
out
test
mov
or
in
mov
fstl
fistpl
nop
xchg
adc
add
inc
push
outsb
ljmp
cmp
jb
into
fmull
push
mov
ss
fstpl
mov
add
mov
icebp
mov
incl
dec
mov
stc
fcomp
push
scas
xor
shll
mov
jae
aaa
add
xor
mov
lods
or
rcrl
cmp
scas
push
cs
dec
sbb
lret
fsts
testb
sbb
pusha
inc
movsl
mov
mov
ss
mov
aas
sub
mov
jno
xchg
and
stos
and
jmp
mov
sbb
or
inc
pop
add
pop
cmpsb
imul
sub
je
adc
fs
call
inc
xlat
outsl
cmp
fdivl
clc
xchg
push
cmp
mov
iret
rcrb
clc
sti
mov
int3
xor
enter
mov
ficomps
jno
rcl
or
or
mulb
lahf
sub
cld
pusha
jne
and
push
cmp
sahf
movsb
cmc
fs
sbbb
test
xor
scas
jge
clc
xlat
jns
xlat
and
xchg
arpl
sbb
push
aam
clc
mov
rcrl
int3
ja
jae
mov
mov
loop
xchg
cmp
dec
xchg
jno
xor
inc
pop
sub
pop
sahf
pusha
ss
push
inc
jge
outsb
push
scas
aad
sbb
insl
mov
jne
test
ljmp
pop
jb
fildll
jne
xchg
lret
pop
fstl
pop
es
ret
aas
test
daa
outsl
pop
fnsave
testb
loope
jae
jnp
repnz
fbstp
test
outsl
and
mov
fisttpl
xor
sahf
imul
add
icebp
cmp
fwait
sub
xor
call
mov
arpl
icebp
inc
or
lock
stos
jg
repz
stos
mov
cmp
xor
cld
lret
mov
xor
cmp
cmp
or
xchg
outsb
mov
xor
push
icebp
cmp
sub
pop
mov
test
stc
pop
push
mov
push
dec
stos
jmp
mov
iret
and
mov
push
daa
popf
mov
stc
jo
leave
adc
dec
mov
mov
jb
mov
and
xor
inc
stos
aam
andb
aad
push
cmp
scas
jmp
jne
orb
add
shlb
push
mov
mov
adc
push
jmp
outsb
insl
mov
andl
int
sub
and
adc
inc
fisubs
aas
pusha
dec
cld
cmpsl
push
inc
rcl
jbe
jnp
mov
inc
add
scas
xor
rcl
sub
sbb
sub
sbb
cmp
cs
leave
inc
jle
in
pop
out
adc
adc
cmp
jecxz
lret
out
and
mov
mov
xor
lods
or
enter
cmpsb
mov
xor
test
addr16
and
cmp
push
in
clc
lret
xor
in
and
adc
xor
aas
adc
test
cmp
popf
mov
imul
xchg
std
dec
push
and
sahf
mov
fcmovnbe
hlt
xchg
daa
jmp
push
das
jnp
xor
into
or
ds
mov
aas
sarb
aas
cld
test
jb
pop
push
jmp
mov
push
ja
xor
push
and
adcb
dec
mov
sub
pop
out
push
imul
stc
les
mov
dec
and
pop
mov
lea
test
fcmovnu
jbe
cli
bound
fsubs
sub
loop
xchg
jg
jl
fldcw
add
or
jp
jl
xchg
shlb
fmull
ret
int3
push
sub
popf
xor
mov
mov
mov
test
jno
outsb
mov
cmpsl
mov
jl
cs
mov
push
movsl
fistps
lock
adc
push
nop
cli
jns
daa
cwtl
cmp
fadds
divps
movsb
imulb
out
adc
mov
imul
clc
adcl
inc
sub
cmpsb
outsl
jb
jae
pop
mov
xor
inc
jo
loope
out
insl
pushf
mov
add
mov
cmp
or
xorb
inc
ficoml
aam
cmpsb
daa
mov
xchg
mov
xor
cltd
push
inc
std
call
xchg
into
jecxz
pop
enter
xor
push
lcall
cmpsl
add
orb
sub
clc
add
xor
int
nop
jmp
sarb
rcl
daa
cmp
fbstp
sti
and
popf
out
or
xchg
adc
xlat
xchg
push
xor
cmp
lds
inc
pmuludq
jmp
sub
bound
movsb
pop
dec
cmpsl
jmp
pop
push
je
adc
pusha
les
mov
cmp
pop
xchg
cmp
dec
mov
cmp
sbb
in
push
leave
ret
pop
adc
jle
push
data16
cmp
inc
bnd
pop
push
xchg
cmp
xor
jae
and
shlb
paddb
lds
sub
push
in
xor
cmp
cmc
cmp
cmpsb
je
lret
icebp
jle
sbb
cmp
jmp
repz
jp
aas
test
outsl
push
push
add
dec
dec
dec
icebp
or
ficompl
mov
jge
call
out
xlat
pop
jbe
push
push
bound
sub
fldcw
sub
pushf
aam
call
push
push
mov
push
out
add
fnstenv
sub
mov
xchg
add
daa
popa
in
in
sub
icebp
xlat
das
outsl
jmp
lock
aad
inc
jecxz
test
mov
xchg
sar
push
inc
mov
sbb
test
fstl
cltd
adc
cmp
mov
mov
xor
xchg
jbe
or
outsb
sbb
in
loop
mov
fsubrs
push
cmpsb
test
test
in
test
and
and
stc
add
push
xor
inc
out
lea
shrb
xorl
das
fmull
js
scas
cmp
iret
outsl
adc
cli
gs
xchg
adc
xchg
adc
in
or
rcrl
jg
rol
push
or
ficoml
scas
sub
mov
sub
outsb
sbb
sbb
fmuls
fldt
popa
fldt
popa
fadd
shlb
scas
mov
cwtl
daa
cmp
cli
push
testl
pop
ds
pop
test
mov
mov
or
or
sbb
pop
scas
jbe
fstl
jnp
mov
xchg
jmp
lret
popa
inc
jecxz
gs
push
push
insl
xor
rorl
add
sbb
sub
dec
jbe
popf
or
ljmp
cmpsl
sbb
pop
xor
bound
push
sub
sbb
xchg
mov
nop
inc
aas
iret
inc
enter
jno,pt
inc
fstl
inc
cli
jge
inc
xor
lods
mov
xchg
xor
jmp
rclb
fisubrl
mov
adc
call
inc
into
dec
out
and
mov
cmp
xor
jl
dec
mov
adcl
mov
sub
daa
pop
push
dec
inc
push
hlt
iret
add
xchg
dec
sbb
rcrl
add
push
and
arpl
sub
neg
mov
inc
push
jne
xorl
xlat
add
add
xor
imul
adc
mov
jecxz
jle
ficomps
cs
jle
adcb
push
inc
pushf
popf
and
xlat
push
out
test
or
repnz
out
call
ds
push
movsl
mov
push
testl
dec
shrb
les
arpl
mov
pop
adc
sbb
je
mov
sbb
fs
sarb
je
dec
vaddsd
jno
mov
outsl
xchg
ret
add
xchg
ljmp
adc
js
jno
ss
lods
sub
rcl
cmp
add
mov
or
dec
popa
in
or
ja
jno
cmc
clc
xchg
out
mov
test
popf
call
rclb
mov
enter
mov
mov
cmp
hlt
ficoml
das
pushf
movsb
or
lods
movups
xor
gs
xchg
rol
das
push
push
mov
mov
adc
in
inc
insb
repnz
inc
out
fwait
es
pop
mov
arpl
jae
outsl
int3
adc
xor
icebp
shll
cmp
pop
add
jl
and
pop
dec
inc
aad
sbb
jl
dec
shll
mov
or
movsl
add
adc
push
sahf
aaa
mov
xchg
inc
sub
dec
lret
shll
push
lret
and
mov
aam
sbb
arpl
inc
rcll
lahf
mov
lock
jecxz
inc
adc
jb
sub
xchg
lret
test
adc
mov
push
popa
inc
sbb
or
mov
jp
xchg
or
add
es
aam
push
push
jno
test
out
loop
add
or
push
add
cmp
daa
mov
mov
shll
out
icebp
pop
sub
cmpl
mov
shlb
lods
xlat
testl
lds
jne
icebp
pop
popa
push
xchg
rcrl
rorl
xchg
dec
xchg
cmp
pop
andb
adc
adc
ss
cmp
pop
shrb
dec
jp
sub
lds
test
mov
std
xchg
pop
xor
fldl
push
in
mov
dec
movsl
pusha
push
mov
icebp
xchg
jl
lock
or
sub
mov
or
jno
jmp
inc
sbb
xchg
orb
pushf
mov
pop
insb
jge
cmc
repnz
mov
push
adc
or
mov
das
inc
cmp
push
movsl
mov
or
dec
mov
xor
xlat
adc
enter
sti
shrb
pop
or
sahf
lret
add
push
adc
adc
lcall
scas
sbb
iret
adc
jl
mov
cmp
repz
fisttpl
clc
sahf
ja
popa
cltd
insl
pop
jae
sbb
xlat
inc
xor
sbb
cmp
or
pop
mov
imul
or
cmp
mov
jo
jbe
iret
inc
psubusw
xlat
mov
mov
push
stos
aad
jae
aad
out
adc
cmc
lea
ret
mov
fildll
and
jmp
movsl
je
dec
fs
aam
idivl
mov
dec
dec
add
mov
sub
test
cmp
in
sahf
insb
pop
fs
xchg
xchg
out
and
daa
cmpsl
mov
cwtl
xchg
add
push
out
ja
cmc
dec
push
dec
addr16
or
fsubrp
mov
mov
std
add
icebp
in
sub
cmc
pop
popf
mov
mov
mov
dec
movsb
mov
cmp
das
inc
jl
lods
add
stos
mov
ror
loop
dec
mov
test
or
adc
arpl
int
jo
les
enter
lods
gs
pop
rorb
bound
repnz
sub
fsubrl
mov
in
sub
lret
or
xchg
pop
les
jge
imul
lds
loop
xor
pushf
sub
push
add
cmp
jae
add
insl
push
add
imul
fs
cmp
testb
dec
mov
cld
das
fstl
loopne
add
outsl
fstpt
xor
push
ljmp
push
lret
rorb
dec
popa
sbb
out
adc
lock
int3
loope
add
mov
mov
cmp
imul
push
or
std
cli
jge
dec
in
into
cs
scas
sar
idivl
cmp
mov
sub
jo
or
loope
lea
mov
mov
pop
shlb
xchg
push
mov
add
pop
inc
jno
mov
loope
and
xor
or
leave
mov
inc
das
sbbb
or
loopne
hlt
sub
rcll
leave
fstpt
aam
xchg
xor
and
out
sar
mov
mov
xchg
adc
xlat
pop
scas
add
sub
add
stos
icebp
pop
push
leave
push
push
gs
cvtdq2ps
inc
push
psllw
fwait
cmpsl
or
sub
and
push
xorb
in
clc
jbe
cwtl
js
aad
clc
sahf
pop
icebp
outsl
lret
xchg
jecxz
outsl
jbe
adc
adc
sub
repnz
xor
sbb
jo
out
rorb
lea
shlb
xor
sbb
loopne
adc
or
push
scas
ja
enter
mov
cmpsb
into
lds
fmuls
or
call
inc
xchg
and
std
inc
in
cmpsl
push
jae
jecxz
fists
adc
and
xor
mov
pop
cwtl
ficomps
or
popf
pusha
add
sbb
sub
adc
sbb
dec
xchg
icebp
popa
cltd
lods
mov
fstpl
jp
mov
adc
mov
sub
insl
jns
cmpxchg
cltd
inc
jmp
test
or
add
outsb
add
cmpsl
mov
cs
repz
mov
cmp
or
inc
adc
sbb
push
dec
js
das
mov
xchg
or
sysret
inc
sbb
int
pop
jl
or
sub
mov
xor
lahf
add
sbb
pop
ret
sar
clc
push
mov
push
jo
pop
jo
and
adc
gs
std
or
sub
imul
arpl
addl
adc
push
out
inc
push
sbb
mov
or
adc
ret
outsb
push
sub
xor
mov
fcoml
sbb
sub
idivl
cmp
cli
cld
lods
test
cmc
cwtl
xlat
sar
inc
and
add
xor
push
mov
sbb
sub
cmp
adc
or
lret
or
mov
xor
pop
lds
js
xlat
sub
xor
mov
aaa
add
inc
movsb
clc
popa
and
adc
mov
in
das
test
xor
xchg
shl
in
or
rcll
xchg
das
lahf
adc
xor
decb
sti
sbb
cli
cmovne
repz
mov
aaa
bound
jno
sub
inc
cmp
xchg
add
lea
mov
jb
stos
pop
rcrb
in
movsl
fxam
xchg
neg
nop
cmp
jnp
push
lds
pop
xchg
inc
and
xor
jmp
cmpsl
push
fstl
xor
xor
aaa
outsl
xor
inc
fs
fiaddl
js
push
and
push
or
or
cwtl
sahf
mov
and
push
scas
and
or
ljmp
in
lods
sbb
pop
loop
aas
stos
cmpb
cmp
cltd
jp
sub
lret
test
loope
mov
adc
pop
test
xor
inc
fucomip
dec
add
xchg
mov
sub
mov
loop
scas
cmpsb
xor
scas
xor
mov
xchg
fmul
jne
imul
jecxz
cmp
mov
cmp
fsincos
aaa
push
xor
js
fbstp
sahf
xchg
jno
sub
mov
das
inc
enter
in
jle
dec
add
gs
inc
mulb
inc
test
mov
bound
enter
cmovne
xchg
ror
push
push
icebp
mov
popf
outsl
adc
popl
xchg
jg
test
inc
ret
and
loop
xor
cmpsb
lcall
add
push
add
mov
stos
xorb
fcoms
std
stos
in
xor
mov
aaa
cmp
adcl
test
adc
xor
jl
cmpsl
fnsave
imul
sti
xchg
movl
int
and
cmp
lods
push
loopne
mov
push
test
sbb
nop
jp
pop
test
lret
ficoml
test
rcr
arpl
in
pusha
incl
jns
mov
add
cmp
and
fildl
lock
sbb
enter
xor
loopne
lods
mov
mov
mov
aad
mov
test
xchg
mov
jno
in
mov
sahf
stos
mov
fisubs
clc
ficomps
stc
inc
lods
in
loop
sub
aaa
mov
ss
xor
fnstcw
lods
sub
xchg
sbb
jmp
lret
loope
dec
ds
sbb
pop
ja
fstpt
mov
dec
lahf
addr16
xchg
dec
ror
jmp
mov
mov
cmpsb
lods
adc
mov
dec
lret
daa
dec
push
xchg
in
mov
or
sarb
inc
adc
aas
cld
inc
dec
add
lock
xorl
lret
push
stos
cld
test
mov
ret
cli
sbb
lret
imul
insl
jg
rolb
stos
mov
inc
and
lcall
cmpb
movsb
pushf
std
sar
add
push
inc
fisubs
loopne
xor
adc
add
mul
shrl
jle
popa
scas
mov
fisttpll
bound
cmpb
popa
sbb
add
bnd
mov
jo
pop
and
jno
jo
lahf
rcr
push
mov
fwait
xlat
rcr
sti
imul
adc
pop
out
or
adc
in
into
enter
mov
lea
lds
outsl
mov
ss
nop
fistpll
mov
jmp
fstp
nop
filds
sbb
pop
inc
test
add
ljmp
loopne
or
movsl
dec
cmp
xor
sbb
mov
sbbb
and
fidivrl
cmc
test
mov
and
das
jbe
push
data16
jg
rorl
into
adc
sbb
cmp
cmp
mov
shrl
pop
out
and
std
shr
arpl
dec
mov
ret
pop
inc
and
icebp
out
mov
icebp
scas
pop
push
ljmp
push
es
and
mov
loop
sub
cli
cld
pop
loope
out
mov
andb
or
dec
test
xchg
inc
or
xor
and
jne
shlb
push
lret
leave
pop
and
and
out
push
cmpsl
pop
cltd
jnp
push
jle
mov
sti
lahf
cmpsl
fimull
insb
loopne
or
dec
pushf
loopne
adc
mov
inc
inc
loope
pushf
jno
fwait
outsl
pushl
xchg
mov
pop
test
mov
adc
jg
adc
or
cld
js
add
xchg
out
xchg
lea
and
icebp
ret
xchg
lahf
nop
inc
add
pusha
cmp
sahf
in
xor
hlt
cmp
dec
push
fs
xor
idivl
addr16
push
aas
cmp
lret
dec
rcll
adc
rcrl
xchg
mov
push
cmp
movsb
pop
mov
or
sti
dec
xchg
cmp
in
adc
sbb
mov
lea
sbb
addr16
ljmp
xor
or
cmp
xchg
fisubrl
lds
mov
dec
orl
pop
sbb
xlat
test
aas
pop
xchg
test
jae
fs
roll
cmpsl
aad
stos
int
in
fistpl
xor
and
test
dec
pop
pusha
xchg
out
fsub
and
jo
lea
pop
jp
dec
insl
movsb
movsl
or
fisubs
fisubl
iret
jnp
jne
mov
xchg
mov
push
data16
sahf
clc
repz
mov
push
les
push
sub
daa
xchg
lahf
das
std
ljmp
pop
xchg
stos
je
lea
js
pop
adc
jge
addr16
lcall
call
mov
jmp
enter
test
mov
jno
xchg
cmp
mov
fisubrs
jo
mov
sbb
xchg
xchg
adc
stos
sub
mov
or
jp
mov
dec
mov
in
stos
push
lahf
pop
xor
push
mov
dec
mov
addr16
lods
inc
movl
xorl
mov
ror
sti
pop
xchg
push
mov
jg
loope
iret
xlat
js
jbe
fdivs
fstpl
add
or
and
fcompl
out
repz
pop
inc
push
xor
data16
aaa
bound
adc
push
stc
jbe
xor
xchg
xor
or
jecxz
dec
in
mov
ret
xorl
decb
subb
icebp
dec
sbb
stos
call
push
cmpsb
fimull
sub
iret
pop
insb
cmpb
out
int3
cli
push
mov
call
xor
pop
inc
inc
adc
lcall
dec
imul
in
inc
or
push
jmp
push
cmc
or
jge
sub
adc
inc
clc
or
shr
xor
xchg
movsb
aad
ds
repz
out
or
leave
je
cmp
mov
test
and
cmp
nop
cld
rorb
adcl
popf
mov
mov
pushf
andl
xchg
inc
les
jae
mov
loopne
mov
fcomps
sbb
dec
test
das
pop
jne
mov
imul
or
dec
movsb
push
and
cmpsl
int
mov
dec
xlat
mov
stos
pop
int
mov
das
jno
mov
push
iret
xor
loope
dec
out
and
push
mov
jbe
push
movsl
sbb
xchg
and
sbb
lret
jle
mov
shll
insl
in
cmc
fwait
in
mov
and
xor
jo
lret
xchg
cmp
jae
in
test
addr16
cmc
in
sub
int
imul
stc
hlt
or
cmp
jl
arpl
cmp
sbb
clc
ret
arpl
dec
adc
or
adc
mov
inc
test
pop
je
mov
bound
outsb
ficompl
and
shll
inc
jle
and
cli
cltd
mov
jb
in
outsb
jne
pop
sahf
xchg
testb
jno
xor
mov
arpl
data16
lea
push
mov
daa
inc
xlat
dec
adc
or
dec
adcb
adc
pop
inc
divl
xor
dec
jb
ret
loopne
dec
insl
orb
mov
lret
shrb
mov
xchg
pop
popa
out
rolb
arpl
es
in
ja
xor
dec
mov
jl
loope
out
cmp
jmp
pop
inc
or
push
dec
in
fisttps
sahf
jae
gs
or
jp
shrb
neg
sbb
shrl
cmp
ds
cwtl
push
scas
int
es
fsubl
sbb
dec
loope
and
inc
jo
stos
and
std
lahf
inc
sub
loopne
fstp
pop
jno
cmpsb
or
repz
xor
jp
adc
jae
push
pop
ss
out
cmp
mov
xchg
lcall
or
mov
xchg
sarl
or
dec
je
push
and
push
mov
pop
sbb
push
cltd
stos
cmp
test
push
fbstp
loope
jg
mov
push
cmp
pop
shl
pop
push
rcr
out
mov
push
mov
or
add
stos
out
lret
test
jg
sub
add
sub
mov
int
add
or
xor
mul
icebp
jns
loopne
or
add
cld
cmpsb
mov
xchg
cmp
cmp
sub
shrl
push
stos
add
adc
and
adc
inc
in
add
ss
lret
mov
stc
dec
ret
and
dec
jo
inc
fidivrl
call
pusha
aas
jmp
sti
dec
adc
pop
xorl
popf
lahf
push
lcall
bound
fs
fstl
dec
lcall
repz
scas
stos
test
cmpb
dec
cwtl
inc
jge
enter
sub
cmp
push
aam
pop
jbe
mov
push
ljmp
inc
add
stc
mov
inc
pop
inc
nop
mov
inc
push
xchg
pop
shrl
sub
lret
dec
fisubl
jo
sub
je
aas
pop
ja
mov
adc
mov
mov
scas
pop
daa
fwait
enter
mov
jmp
mov
push
mov
test
test
lods
push
adc
popf
movsl
fwait
repz
sub
jecxz
imul
push
int
ffreep
and
int3
testb
fs
das
loopne
add
lret
and
and
pop
insl
mov
adc
xchg
mov
push
ror
push
xchg
mov
sarl
adc
int3
adc
js
in
jp,pt
xchg
scas
adc
sbb
jnp
stc
repz
xchg
or
add
sarb
mov
pop
cmp
pusha
imul
dec
stos
lcall
pop
enter
jb
fnstsw
dec
test
lods
addr16
push
push
mov
sub
xor
filds
es
js
cmc
movsb
clc
in
jge
mul
xor
lcall
dec
jl
jbe
scas
jnp
outsb
lds
pop
scas
test
outsl
sbb
sbb
dec
insb
and
pop
outsl
push
jl
jecxz
lock
jmp
pop
fisubs
fs
jno
push
lret
adc
xor
pop
and
es
leave
xchg
and
or
sbb
add
sub
lock
sbb
mov
push
lds
push
test
sub
es
insb
jno
adc
push
jns
stc
jbe
mov
int3
mov
sub
enter
and
pushf
mov
mov
out
dec
mov
scas
jo
fisubl
cmpsb
jo
xchg
hlt
testb
gs
in
es
dec
mov
stos
push
test
or
jo
cmp
push
jg
cmpl
rcll
mov
mov
mul
mov
mov
xchg
cwtl
in
lahf
mov
mov
mov
push
inc
or
not
xor
or
mov
in
je
xchg
push
push
mov
sbb
in
sahf
ret
lcall
inc
rolb
mov
int3
mov
mull
cmc
push
pusha
cmp
jmp
adc
fistl
pop
jle
shlb
pop
outsb
std
lret
or
iret
fldl
or
xor
cltd
adc
pop
push
test
or
rcrb
enter
in
jno
mov
data16
outsl
es
sbb
add
nop
mov
and
mov
enter
ja
xchg
daa
mov
fwait
data16
push
cmpsb
mov
xchg
and
in
sub
jnp
out
fcmove
call
inc
test
push
and
push
cwtl
mov
lret
incl
lods
and
pop
xchg
cwtl
jge
mov
movsb
popa
scas
cmc
daa
pushf
and
aam
jmp
and
loope,pn
frstor
xchg
pop
sbb
pop
lods
or
mov
ljmp
jno
loopne
xchg
inc
repnz
push
inc
xchg
sbb
popf
jp
dec
dec
adc
xchg
shlb
loop
lcall
adc
mov
and
jge
mov
outsl
clc
mov
lret
fsubs
cli
call
fisubrs
insb
aam
imul
and
sbb
mov
frstor
cmp
loope
cwtl
push
jo
lea
in
fsubl
inc
jnp
add
mov
jmp
pop
scas
pop
fsts
inc
mov
dec
jo
xchg
or
hlt
lods
add
sbb
sub
cmp
fsubrs
out
mov
mov
sub
inc
mov
push
outsl
push
popl
lock
imul
mov
or
shll
in
in
add
or
sarb
sti
lcall
mov
es
rcrl
leave
out
shll
sbbb
xor
and
outsb
mov
int3
shrl
push
ror
push
xchg
xlat
mov
jbe
hlt
repnz
mov
outsl
incl
and
jl
cmp
in
jo
jg
jmp
ja
lea
fldl
int
js
xor
lds
loope
dec
or
sub
inc
stc
pop
dec
mov
pop
mov
movb
call
in
stc
daa
sub
pop
pop
popf
mov
nop
jecxz
jg
mov
scas
pop
test
mov
xor
add
hlt
pop
je
mov
jno
xchg
jl
iret
sahf
xchg
fisubrs
out
and
fdivs
pop
and
sub
push
mov
cli
cwtl
xchg
pop
mov
jl
pop
addl
lahf
adc
jle
add
cmp
mov
ja
imul
jge
pop
sub
popf
dec
mov
ljmp
shll
loop
mov
cs
mov
and
into
test
mov
push
idivb
xchg
stc
push
add
pushf
flds
scas
leave
dec
pop
sbb
push
mov
mov
sarl
test
rclb
mov
inc
jo
sbb
subb
pop
dec
icebp
dec
das
mov
pop
or
dec
cmp
and
add
jns
enter
pop
push
jnp
pop
inc
leave
dec
out
repz
push
adc
mov
push
sbb
cmp
iret
pop
fstps
mov
lds
mov
and
cs
je
std
mov
mov
sub
sub
or
jnp
add
loopne
fwait
lret
push
aam
loop
scas
icebp
and
adc
sbb
int
stos
mov
jle
enter
mov
test
in
jmp
mov
test
adc
popf
adc
outsl
and
jo
mov
neg
push
xor
rclb
cmpsb
addr16
cmp
add
dec
add
aam
pop
sbb
sub
push
sub
jns
cmc
adc
outsb
cmp
and
sub
in
xchg
add
mov
arpl
cmp
dec
sub
cmp
ss
pop
cmp
inc
inc
inc
insl
jg
pop
adcb
cmp
fiaddl
mov
je
mov
shl
mov
mov
test
mov
sarl
adc
inc
loope
movsb
mulb
sti
xorb
lcall
das
shrl
fdivrs
xchg
in
stc
mov
mov
repnz
adc
sbb
jle
mov
lcall
leave
jne
nop
icebp
call
and
fsubr
lock
sbb
aad
dec
imul
mov
insb
jecxz
push
setb
outsb
incl
or
xchg
out
lret
negl
cli
push
xor
fcomps
popa
pop
fisubs
loopne
lahf
push
add
imul
test
movsl
ret
jle
gs
jns
adc
inc
mov
jge
orl
imul
inc
cmp
mov
test
call
add
dec
sbb
adc
mov
in
hlt
data16
mov
push
or
push
lcall
mulb
not
in
mov
enter
sti
adc
out
lock
push
push
repz
xor
lods
aaa
ret
cli
adc
mov
jno
cmp
lcall
in
fdivrl
lods
test
inc
outsl
push
sti
and
mov
jg
insb
imul
push
inc
aad
jl
out
jb
sbb
sbb
sbb
fstl
adc
inc
mov
lock
jno
push
jae
movsl
mov
cmc
leave
adc
les
out
dec
cmp
sbb
jo
jo
xor
fsubs
mov
xor
dec
dec
mov
pop
add
xchg
dec
jge
dec
adc
add
and
aas
cs
mov
dec
das
xchg
loopne
add
xchg
mov
movsl
jbe
adcl
rolb
shlb
mov
mov
sub
cmp
out
xor
cmp
lods
cmpsb
adc
push
lahf
in
lcall
xor
xor
sbb
movsl
shll
inc
pop
js
lret
add
outsb
xchg
mov
sbb
pushl
cwtl
mov
data16
and
pop
inc
xchg
adc
jmp
adc
add
sub
lods
inc
and
dec
test
xor
add
add
xor
mov
sub
clc
inc
or
repz
lea
mov
pop
cmp
pop
mov
das
add
inc
xlat
mov
xor
push
pop
loope
test
and
int
cmp
scas
dec
mov
dec
in
dec
faddl
fldt
and
ljmp
loop
push
frstor
mov
gs
or
cmp
mov
sub
xchg
cmpsl
comisd
es
icebp
in
xlat
inc
stos
sbb
jbe
push
inc
into
enter
add
aad
out
push
in
mov
mov
jmp
sbb
daa
push
dec
add
shll
pop
add
test
shrb
push
sarb
test
mov
repnz
bound
div
and
pop
push
cmp
cmc
inc
jmp
pop
adc
pushl
cltd
roll
mov
ffreep
sbb
sbb
xchg
inc
out
data16
xor
xlat
rorb
dec
test
subb
add
adcb
pop
inc
sbb
scas
les
pop
cwtl
sbb
jle
dec
jecxz
inc
push
lods
notl
mov
movsb
lcall
leave
mov
push
dec
cmp
rol
out
outsl
or
xlat
rcrl
jae
dec
inc
mov
fistps
jno
inc
fisubs
dec
imul
out
mov
dec
les
dec
jb
lea
loope
pop
aaa
out
mov
rcrb
pusha
mov
ljmp
stc
loop
in
repnz
sbb
fdivr
je
cmp
test
dec
sub
sti
mov
push
int3
mov
sbbb
add
jb
in
adc
dec
ja
rcrb
adc
pop
rcll
inc
cltd
popa
out
insl
cmp
adc
and
mov
outsb
jge
jge
outsl
xchg
xchg
arpl
ja
mov
push
push
ret
push
mov
xchg
dec
gs
xchg
pop
dec
jbe
sar
data16
add
add
cmp
jmp
dec
andl
movsl
mov
inc
or
test
aaa
les
dec
pop
jge
iret
cmp
dec
push
leave
push
mov
push
cltd
push
pusha
or
push
pop
mov
ret
cmpsb
in
push
std
enter
mov
outsb
lahf
mov
mov
add
push
sbb
fsubs
mov
clc
out
repz
pop
addl
or
pop
imul
add
add
or
hlt
mov
cmp
popa
dec
insb
or
jbe
mov
lea
adc
jg
sbb
popf
jge
popa
add
pop
pop
orl
mov
adc
cmp
ss
adc
jg
out
xor
xor
sbb
cmp
adc
stos
push
scas
ror
cmp
imul
inc
mov
pop
enter
jecxz
or
jmp
mov
lods
fnstenv
jns
adc
push
pop
clc
sub
mov
pop
test
scas
sbb
push
dec
lcall
and
jmp
repnz
mov
loopne
lods
mov
sub
sarl
sbb
sub
fldenv
jge
cltd
sub
rclb
xchg
xchg
mov
stos
mov
call
pop
jno
int3
add
in
push
sti
dec
mov
movsb
and
mov
js
jns
sar
fcmovu
xchg
push
push
xor
xor
leave
bound
dec
inc
inc
cmp
and
pop
mov
inc
xchg
dec
lcall
xchg
inc
sarb
outsl
lcall
adc
xor
into
cli
ret
pop
in
das
adc
adc
mov
add
or
mull
jmp
pop
aad
aaa
mov
call
call
adc
jb
clc
incl
dec
shl
jnp
mov
lret
pop
in
popf
in
push
insb
pop
test
inc
add
sub
out
jmp
cmp
inc
fwait
stos
stos
cmp
fwait
inc
inc
xor
insb
jge
and
adc
and
push
jo
or
sbb
aad
movsl
sub
ficompl
fmul
shrb
pop
add
push
daa
cmp
std
hlt
mov
rorb
push
imul
push
test
test
insb
jmp
push
js
loope
out
mov
inc
jbe
pop
sbb
jnp
adc
sbb
rclb
mulb
xchg
adc
std
pop
or
sbb
int
or
cltd
les
insl
fsts
push
dec
repz
sahf
xchg
mov
ret
add
sub
imul
ret
push
stos
into
mov
xchg
sbb
jge
mov
mov
pop
in
cmpsb
test
push
dec
dec
test
shll
mov
nop
arpl
inc
mov
dec
ficomps
out
pop
repz
popf
push
adc
jae,pn
inc
test
lods
sbb
lds
lds
xor
mov
push
incl
sahf
mov
inc
xchg
add
push
ret
adc
stos
ret
arpl
cmpsb
dec
mov
lahf
mov
es
loope
inc
aaa
dec
bound
lret
push
inc
jbe
ljmp
mov
and
inc
xor
mov
popa
fistps
out
fisubrl
mov
pop
je
cmp
jo
stos
pop
lret
imul
jbe
mov
lds
mov
scas
and
pop
mov
inc
adc
add
inc
fildll
ds
xchg
dec
inc
inc
sub
sub
mov
xor
imul
inc
inc
add
icebp
and
into
fistpl
lea
mov
pop
aas
mov
mov
sub
add
inc
push
andb
push
cmp
pop
les
ss
lret
mov
xchg
and
sbb
mov
sub
lcall
inc
rcll
dec
shlb
xchg
aam
int3
popa
sbb
repnz
pop
gs
push
or
jg
mov
sub
pop
outsl
call
test
shr
and
mov
add
sub
mov
dec
jbe
popf
adc
outsl
jnp
mov
mov
cmc
sbb
push
mov
sub
jmp
ljmp
mov
xor
dec
pushf
push
jecxz
fwait
test
cltd
rcrl
test
sahf
in
insb
arpl
mov
in
shlb
adc
xchg
stc
dec
imull
jl
inc
test
mov
xorl
lock
or
lds
inc
mov
add
leave
jmp
push
fstpt
out
call
mov
mov
sbb
mov
test
jnp
jl
push
xchg
and
xchg
loope
test
test
xchg
dec
adc
hlt
push
adc
xchg
out
adcl
xor
xchg
push
stos
mov
dec
sbb
adc
sub
insb
pop
icebp
xor
in
cmp
ret
cli
filds
lahf
addl
add
dec
ret
les
and
dec
pop
mov
xlat
cmp
in
cli
sub
mov
scas
mov
fistps
pop
mov
xlat
mov
stos
sbb
rcl
fidivs
dec
adc
std
jo
aam
sbb
add
das
sbb
notb
hlt
fisttps
inc
mov
int3
aad
ds
dec
in
jae
shlb
pop
inc
cmpsb
xorb
xchg
inc
lea
mov
inc
pusha
cmp
pop
popa
push
mov
cmc
xor
push
xorb
jle
cmpsl
test
lods
leave
cld
int3
add
cmp
in
dec
and
and
stos
add
out
loop
repnz
and
lret
dec
mov
fisubrl
fisttpl
test
jle
xchg
into
out
gs
dec
das
adc
fstps
sbb
xchg
sub
cmp
testl
jle
mov
loope
push
jbe
mull
push
or
adc
and
fsubs
call
dec
and
fidivs
in
js
mov
xor
mov
lods
xchg
outsl
into
mov
aaa
jl
les
testl
out
add
and
mov
arpl
mov
cli
and
adc
into
loop
roll
ljmp
xor
in
mov
sbb
pop
mov
sub
cld
mov
add
adc
xor
add
inc
cmp
out
cmp
fdivr
jle
cld
scas
sub
mov
fcomp
iret
fcmovne
ss
fsts
hlt
sbb
mov
cmc
dec
lods
xchg
xlat
push
xor
lret
cmc
mov
inc
imul
inc
mov
push
stos
push
push
sbb
in
xchg
rclb
je
out
xchg
pop
sbb
mov
dec
add
dec
pusha
xchg
pop
add
inc
xchg
cmpsb
cwtl
inc
pop
ret
push
inc
cmpl
add
shl
ret
scas
pop
xchg
inc
jb
mov
adc
addb
fists
jo
rclb
inc
cmp
test
mov
lret
sub
xor
das
or
out
push
int3
sbb
sbb
jne
insl
cmp
mov
loopne
fisttps
fmulp
push
repz
push
mov
jecxz
mov
mov
sti
in
push
outsb
mov
push
push
rcll
pop
jecxz
adc
cltd
add
dec
pop
fisubrs
out
or
xchg
mov
cmpsl
mov
or
lods
ret
dec
repz
inc
or
cmp
mov
xor
addr16
jae
in
mov
adc
fisttpl
push
icebp
push
fcompl
inc
sbb
mov
push
push
std
pop
or
rcrb
icebp
lock
aam
out
stc
addr16
outsb
dec
push
call
add
imul
xor
das
scas
inc
iret
xchg
inc
inc
jmp
sbb
aas
sbb
imul
push
sub
push
fmuls
cmp
loopne
test
mov
pop
imul
pop
or
fs
sbb
mov
fnstenv
cmp
es
jns
insl
and
xor
je
jecxz
sub
test
pop
add
adc
movsl
pop
jmp
cmp
outsb
mov
inc
mov
push
mov
cwtl
cmpsl
jp
out
wrmsr
xchg
mov
ret
inc
jo
rcrb
int3
sbbb
out
sub
movsb
lods
jge
pop
imul
jbe
aad
jl
inc
je
les
xor
push
mov
aas
push
sti
adc
pop
mov
loop
out
out
roll
aad
clc
inc
fwait
lahf
dec
push
sub
cmpsb
inc
cmpsl
or
ds
cmc
jns
jmp
js
mov
test
outsl
faddl
test
out
out
daa
pop
and
jnp
ljmp
aam
popl
xchg
mov
sbb
rorb
div
inc
cli
ds
sahf
cmpsl
pop
add
ljmp
xor
xchg
idivb
sti
iret
aad
dec
mov
xlat
mov
adc
xchg
dec
cmc
push
jo
jns
gs
aad
popf
xchg
rcll
cmp
inc
or
rep
loop
or
sub
mov
call
out
jo
or
icebp
shr
into
sti
add
sub
test
pop
push
jmp
dec
sbb
adc
sbb
xchg
out
inc
sbb
call
ss
mov
xor
pop
inc
sbb
mul
fldl
js
pop
fadd
imull
rol
mov
je
jecxz
cmp
pop
rolb
xchg
cmp
mov
shll
mov
popa
call
cld
pushf
sub
inc
gs
lea
cmp
xor
dec
sarb
lea
adc
add
pop
jle
jnp
sub
insl
dec
cmp
lods
leave
cmovno
addb
adc
dec
dec
out
push
mulb
add
movsb
mov
pusha
jmp
jmp
enter
mov
push
idiv
je
into
xor
or
flds
dec
sbb
pop
ss
and
adc
gs
mov
das
rorl
aas
sub
pop
rcrl
adc
call
xchg
sbb
pop
dec
mov
push
push
aaa
mov
jnp
mov
mov
lahf
cwtl
aam
push
inc
fcomip
xor
imul
jns
inc
inc
out
mov
pop
push
inc
mov
push
inc
adc
cmp
loopne
mov
shl
add
jo
pop
add
xchg
pop
dec
xchg
push
inc
lea
cli
fildll
addr16
mov
std
jmp
pop
mov
mov
lahf
xacquire
add
or
push
xchg
add
pop
push
fiadds
pop
mov
cmc
or
ret
js
dec
mov
jno
test
xor
divb
xchg
cmp
sub
xchg
gs
jp
cmp
xor
divl
rclb
test
hlt
add
dec
idivb
sbb
mov
testl
dec
xchg
push
add
jno
jle
mov
jge
jge
out
or
popa
jg
jne
adcb
fisttpll
push
push
out
outsb
sub
pushf
jp
pushf
sbb
inc
aam
addb
jb
inc
into
test
insb
mov
sarl
ret
arpl
jl
cli
fistps
test
in
mov
sbb
mov
push
sahf
cwtl
fnstsw
sub
mov
cli
stos
mov
out
mov
cmpsb
push
jecxz
notl
iret
mov
adcb
mul
mull
jl
les
scas
into
inc
test
scas
lret
and
pop
frndint
mov
test
in
stos
sub
sub
mov
fiadds
insl
in
adc
jns
inc
insb
loope
lret
es
clc
pusha
and
inc
ljmp
xor
shlb
cmpsl
nop
pop
and
test
pop
mov
inc
test
ret
inc
insl
and
cmp
sbb
hlt
leave
test
or
or
jg
pop
sarl
push
lods
mov
repz
and
lods
mov
inc
test
std
add
fst
shlb
cmpsl
lcall
mov
jne
test
cmp
fsubl
imul
scas
in
mov
dec
sbb
clc
push
out
or
ljmp
jl
hlt
divb
shll
xchg
pop
cmp
jae
push
in
and
xor
lahf
imul
out
adc
lahf
movsl
add
int
mov
dec
sbbl
lret
mov
add
mov
inc
and
imull
mov
scas
or
mov
ljmp
or
inc
into
jno
pop
pop
inc
adc
cmp
das
fs
inc
enter
sub
rcrb
insl
jp
sub
adc
addl
in
dec
sbb
clc
scas
mov
add
mov
les
clc
dec
rclb
loop
mov
outsl
mov
and
mov
js
mov
cmova
sbb
dec
insl
loop
mov
hlt
loop
paddw
gs
stos
xchg
test
xlat
inc
adc
shll
pop
mov
mov
scas
pop
cmp
stc
mov
idivb
sub
sahf
add
les
sbb
cmp
xchg
sub
out
test
cmp
jmp
std
cmpsb
pop
xor
int
mov
int
cmpsl
xchg
dec
les
lcall
add
inc
pop
loope
shll
lret
push
iret
mov
lret
std
scas
mov
adc
data16
cltd
fiadds
jns
mov
mov
jbe
jo
adc
jecxz
outsb
iret
fwait
mov
pusha
inc
pushf
sbb
or
jecxz
mov
mulb
jnp
pushf
cmpsb
lods
dec
mov
data16
rcl
push
mov
jl
dec
sub
cli
xor
add
sarb
lret
pop
stc
add
ja
push
insl
adc
insb
inc
and
sub
les
inc
add
shrl
inc
call
inc
sub
adc
mov
movsb
add
jbe
add
inc
jno
ja
xor
std
dec
mov
pop
xlat
test
xchg
ss
push
sbb
sbb
sbb
mov
int
or
mov
xor
mov
out
cmp
popf
in
mov
mov
imul
rclb
cmpsl
lds
jno
adc
jo
jb
pop
fdivrl
mov
mov
les
cltd
dec
cld
xlat
fldl2e
jo
jge
fs
das
dec
aas
imul
mov
in
mov
aam
jge
mov
mov
inc
xor
xor
lret
outsl
fsubr
aam
sub
adc
push
jmp
arpl
cmp
sub
mov
lret
loop
mov
negl
mov
pcmpgtd
xchg
mov
and
leave
pop
add
fwait
daa
cmp
inc
mov
stos
adc
and
stc
popa
add
push
imul
loopne
and
mov
or
bound
jb
cli
fstpt
push
repnz
push
in
sbb
sub
lods
push
das
mov
loop
xor
pop
mov
mov
xor
jecxz
mov
test
iret
cltd
shrl
lds
mov
jg
lahf
push
std
bound
bnd
popf
leave
imul
mov
jno
push
sub
aaa
pmovmskb
int3
xor
int
jmp
xor
sub
in
cs
loopne
loope
clc
out
and
dec
in
pop
cmc
js
mov
aam
add
add
xchg
and
shl
cmp
or
inc
xor
cmp
lods
mov
jne
inc
xor
jmp
jge
mov
jl
dec
jnp
outsb
arpl
xor
mov
clc
adc
loopne
inc
jb
aad
xchg
mov
sqrtps
pop
movsb
movl
xor
jae
cmp
sub
std
jo
inc
test
pop
loopne
sbbl
dec
mov
push
mov
mov
enter
loope
leave
fs
rcrb
filds
int
xchg
sub
mov
in
or
sarl
shll
sub
sbb
mov
cltd
fwait
pop
adc
sbb
pop
data16
push
fiaddl
xchg
sub
sub
xor
jno
sbb
dec
sarb
and
sub
inc
out
sub
inc
int
xlat
lods
out
or
sbb
popf
movsl
scas
lcall
fdivr
dec
push
xchg
data16
lds
leave
shrl
ljmp
jecxz
jecxz
xor
lcall
adc
fildl
gs
fcomi
xor
es
adc
ret
das
mov
xor
dec
js
insb
stos
rolb
sub
xchg
cmp
in
outsb
cli
adc
nop
lods
push
sub
jl
icebp
ss
in
jge
add
hlt
adc
rclb
mov
cmp
cmp
xchg
mov
inc
sub
add
mov
cmp
adc
xor
jp
movsb
bound
lahf
cmpsl
sub
push
shll
in
mov
stos
lahf
lret
inc
pusha
shll
hlt
mov
mov
fnstcw
xchg
out
cs
add
lret
out
sub
jno
loop
cwtl
out
and
imul
mov
and
dec
inc
cs
ljmp
lahf
mov
push
push
jne
dec
insl
cmp
mov
jbe
into
inc
and
jle
pop
adc
add
adc
mov
push
and
push
inc
mov
bound
das
mov
xor
xor
data16
inc
sbb
jp
es
pop
pusha
out
sbb
add
pop
inc
adc
cmp
mov
ja
mov
jne
and
push
push
std
mov
push
or
cmp
mov
arpl
cmp
jecxz
cmc
lea
ja
and
ljmp
xchg
inc
cmpsb
jb
mov
mov
pop
mov
aam
push
fbld
jnp
xchg
inc
jmp
pop
xor
fildl
popf
add
leave
outsl
das
mov
mov
daa
add
jg
jb
push
outsl
test
fimull
xchg
subl
and
xor
leave
int
adc
shll
negl
out
test
and
das
jo
sub
cmp
mov
sub
dec
jmp
push
mov
mov
add
mov
rol
cmp
and
daa
loopne
lds
or
repnz
and
ja
cmc
xlat
rcrl
dec
outsl
out
lahf
shrb
scas
jb
mov
cmc
add
push
cmp
bound
daa
mov
jp
fistl
push
push
xchg
ret
cmp
aas
les
icebp
bound
outsl
jge
out
popa
xorb
insl
test
mov
xchg
dec
idivb
or
loop
jno
lret
std
out
bound
dec
pop
pop
cmp
xchg
mov
pop
push
je
loop
js
test
inc
and
popf
sti
test
jne
pop
cmp
lea
adcl
add
scas
roll
pslld
fsubrp
out
lds
int3
cltd
pop
jl
and
out
xchg
aaa
sbb
clc
repnz
cmp
movsb
sahf
xor
aad
mov
je
inc
inc
sub
xchg
test
clc
xchg
scas
mov
repnz
dec
jecxz
shll
lods
es
cmp
or
outsl
pop
leave
popf
leave
or
inc
jno
push
mov
or
repz
inc
mov
mov
and
pop
mov
push
jg
arpl
pop
mov
mov
pop
jmp
push
fwait
jb
push
je
push
popf
cmpsl
data16
scas
fs
inc
lock
mov
pop
jae
test
xlat
fstpt
add
lods
add
sbbl
inc
mov
stos
jb
test
push
std
cwtl
xlat
outsl
sub
in
movsl
mov
aas
xchg
ds
rorb
jae
scas
jp
cmp
cltd
out
pop
hlt
adc
xchg
cmp
push
push
sar
mov
pop
or
cmp
inc
adc
cmp
add
xchg
dec
xor
xchg
jno
mov
pop
xchg
cwtl
lahf
rorb
xor
fwait
adc
add
xchg
bound
adc
pushf
xor
and
jno
rorl
movsl
pminsw
or
xor
out
mov
adcb
dec
cmp
in
mov
lea
gs
call
insl
lahf
sbb
dec
xlat
test
sub
pop
jbe
out
test
add
or
push
or
xchg
aas
mov
maskmovq
testl
scas
jl
stos
push
pop
mov
sbb
fimull
incl
inc
inc
and
jg
add
outsb
fbld
pop
push
mov
cmp
add
pop
aam
insl
mov
inc
loopne
add
or
xchg
das
xor
cwtl
and
mov
outsl
jne
in
sar
push
push
xchg
pop
lods
mov
sub
loop
das
iret
mov
ret
pusha
in
mov
sbb
xchg
scas
cwtl
movsl
sti
mov
rcll
mov
das
sti
adc
push
mov
and
scas
hlt
sbb
xchg
test
ds
dec
add
or
mov
push
in
insb
inc
test
or
jae
pop
stos
cmp
fdivl
test
das
sub
lret
test
pop
cmpsb
push
sahf
xchg
sub
sub
fstpt
mov
jecxz
addr16
cmpsb
ret
rep
inc
repnz
aaa
xchg
das
sahf
repnz
dec
mov
pop
test
pop
pop
std
aam
pop
lods
cld
sbb
jmp
xchg
ret
push
movsb
in
jbe
bound
add
subb
ret
aas
push
jo
rorb
xor
sahf
jecxz
and
jb
lods
lret
in
mov
mov
cmpsb
pusha
fdivrl
sub
icebp
cmp
xchg
push
aam
pop
lahf
add
gs
xor
mov
or
sti
aad
adc
cli
sub
add
iret
push
adc
jns
mov
and
mov
mov
insl
stos
sbb
leave
xor
mov
out
repnz
xor
jl
imul
inc
xor
adc
iret
xlat
je
in
sub
add
mov
adc
fwait
jp
call
jl
iret
xchg
xchg
les
loopne
pop
into
and
es
bswap
loop
repnz
push
das
addl
test
daa
jnp
jp
fdiv
or
mov
xchg
push
ss
adc
sbb
and
fdivl
jae
add
pop
dec
xor
int3
mov
sub
and
push
dec
in
pop
or
imul
fcoms
sub
jnp
pop
inc
mov
inc
or
and
imul
lret
das
sbb
inc
test
in
dec
lea
cwtl
dec
insb
xor
jnp
ret
sbb
addr16
mov
mov
daa
jns
mov
adc
test
movsl
pop
and
out
sub
pop
ffree
repnz
test
or
and
frstor
popa
adc
pushw
cmp
push
es
popf
nop
jmp
lea
cmpsl
outsb
dec
and
arpl
adc
mov
movsb
push
test
mov
or
xor
dec
lods
jl
or
xorl
jnp
fsubrp
pop
or
jnp
sub
and
xchg
push
shr
test
dec
popa
ss
xor
rorb
into
fidivrs
inc
lea
jns
mov
inc
in
add
add
xchg
xor
scas
addb
int
mov
xchg
mov
shr
call
andl
lock
arpl
push
jne
add
adc
jg
jno
fdivs
cmpsl
loopne
or
jg
mov
lahf
aas
add
jecxz
push
sbb
sbb
cmp
stos
or
jnp
lret
cmp
das
or
add
stos
int
cmc
data16
and
pusha
aad
rcll
jp
inc
dec
jb
sbb
jle
push
mov
movsl
sti
fimuls
or
pop
movsl
aam
scas
mov
xor
mov
lret
ja
sub
jne
dec
les
out
mov
cs
pop
mov
xchg
inc
and
and
pop
mov
or
add
push
xchg
daa
out
test
jp
adc
call
xor
stos
jns
sub
mov
jbe
movsl
jno
push
mov
or
jg
in
or
incl
sti
mov
mov
and
push
or
add
enter
sbb
add
or
cli
jnp
xor
inc
jge
mov
mov
mov
sahf
bound
push
popl
sahf
push
test
cwtl
jbe
fwait
andl
fcomps
cmp
push
pop
jmp
pop
addr16
rolb
mov
cld
add
xchg
sbb
xor
mov
mov
aad
cmp
lods
stos
std
enter
hlt
cmpsb
lea
sub
shlb
imulb
xchg
clc
test
jecxz
and
mov
aaa
out
xor
jge
inc
xchg
iret
mov
jne
hlt
fdivl
gs
pop
aas
das
pop
mov
lods
jbe
xchg
mov
mov
test
xor
or
movl
sbb
enter
aad
cmpsl
sub
scas
and
lcall
dec
negl
sbb
xor
bnd
and
mov
idivb
leave
mov
jmp
inc
orl
inc
filds
decb
testl
mov
mov
push
pop
mov
sti
jno
loop
dec
mov
pop
sbb
fldt
aas
adc
or
hlt
ror
out
loopne
adc
push
enter
leave
xor
lea
stos
sub
popa
mov
dec
xchg
loope
adc
ret
push
call
mov
pop
lods
shlb
xor
movsb
sbb
or
xor
enter
push
bound
inc
ret
mov
les
jno
cmc
mov
fbld
bound
push
ljmp
sbb
test
adc
cmp
fcmovnu
out
cmp
jmp
mov
popa
mov
movsb
test
sti
adc
xor
jne
xchg
ljmp
mov
jb
aas
mov
jb
jl
push
cmpsl
subb
hlt
icebp
sti
xchg
pop
rclb
pushf
pop
inc
repz
adc
jge
or
sti
std
pop
lret
ds
sub
push
cmp
out
and
inc
test
data16
in
sahf
lcall
fsubrs
nop
jge
inc
test
xchg
push
mov
fwait
jg
jecxz
ficoms
cmp
adc
lods
pop
or
adc
test
dec
sbb
mov
data16
cmc
cmp
enter
xor
subl
add
cmp
mov
adc
popf
pop
sahf
mulb
fs
jbe
fidivrl
movsb
aaa
and
push
cmp
das
adc
and
daa
bnd
les
xchg
inc
jnp
call
sti
add
xchg
mov
sbb
std
adc
int3
mov
mov
ljmp
cwtl
add
jecxz
orl
mov
xchg
mov
std
cld
pop
jno
xor
mov
fs
add
stc
lahf
pop
cmpsb
jno
push
movsb
xor
pop
rep
push
or
sbb
mov
imul
lahf
mov
jecxz
or
rorb
pop
aad
loope
aad
out
mov
dec
mov
test
push
popf
mov
or
push
sarl
icebp
jecxz
test
add
ret
std
jecxz
inc
add
imul
enter
nop
add
in
fidivrl
mov
sbb
call
and
mov
pop
mov
xchg
mov
lods
ficoml
mov
incb
jbe
pop
ret
rcrl
mov
and
icebp
xchg
xchg
test
lock
sub
bound
popa
push
shl
sbb
adc
xchg
cmp
pop
pop
mov
jae
rolb
adc
sbb
out
lea
push
xor
adc
jg
gs
mov
mov
and
mov
xchg
sbb
and
into
push
jp
add
loopne
mov
inc
pusha
pop
aam
stos
ret
popa
shrb
stos
in
and
pop
fmul
or
or
arpl
rclb
or
mov
inc
gs
inc
frstor
xchg
xchg
mov
fstps
lods
xor
jge,pn
int
ds
ret
pop
insl
push
aam
movsl
rcrl
jbe
pop
xchg
sbb
mov
push
push
push
lea
andl
or
and
int
add
pop
rcl
ds
sti
iret
jg
and
inc
popa
loop
in
out
mov
idiv
mov
dec
in
pop
push
stos
aam
push
jne
sub
pop
movsl
push
xor
xor
je
adc
and
and
fmulp
imul
add
subb
lock
inc
fcmovbe
push
sub
mov
in
jge
out
mov
sub
into
into
mov
hlt
mov
jns,pt
pop
dec
sub
push
mov
bswap
leave
jle
ds
popa
xlat
pop
outsl
rcrl
adc
into
es
lret
int3
into
std
pop
push
push
mov
ds
cld
cmpsl
xorb
adc
jg
push
rol
das
imull
pop
inc
dec
in
xchg
js
ljmp
or
or
pop
ret
mov
fnsave
jb
xchg
mov
call
sbb
sub
aas
pop
in
mov
dec
shrl
in
in
filds
jl
movsl
xlat
iret
sub
mov
test
imul
adc
cmp
cmp
subb
fnstcw
push
pushw
pop
inc
jl
out
test
cmp
sarb
push
lcall
fcoms
lea
push
mov
ret
push
fstl
xor
pop
mov
cmp
add
sbb
jp
mov
jp
int3
inc
cwtl
push
mov
mov
leave
mov
in
sbb
pop
lahf
in
jg
cmpsl
sub
arpl
push
mov
mov
cmp
pop
stos
sbb
popf
push
jmp
push
shll
inc
cli
pop
mov
stc
inc
fadd
jbe
gs
aad
mov
pop
push
jmp
subb
xchg
jle
mov
cmpsb
test
sub
add
test
repnz
mov
add
dec
add
and
pusha
dec
faddl
xchg
ret
mov
je
push
bound
aad
scas
cmpsb
xor
and
push
fwait
lahf
inc
lods
ret
int
loope
jmp
and
cli
in
jl
loope
pop
inc
push
xchg
cmp
arpl
jecxz
add
adc
mov
mov
mov
repz
fs
lcall
dec
insb
jno
imul
lods
sbb
ljmp
sbb
sub
repnz
mov
call
test
dec
mov
adc
xchg
out
xchg
pushf
icebp
or
jb
cmp
pusha
add
mov
add
in
adc
cmp
arpl
in
mov
mov
in
lds
addb
push
in
iret
mov
dec
outsb
lds
push
jecxz
xlat
push
mov
push
fs
mov
jl
sub
push
cmp
mov
bound
mov
xor
fistpll
dec
fdivrl
test
sub
jecxz
repnz
stos
es
jo
popa
into
push
sbb
ja
fcoms
hlt
mov
mov
popa
inc
cli
push
xchg
shr
mov
jnp
dec
repz
dec
fdivr
dec
and
jo
test
test
out
and
rcrl
and
or
jno
cmpsb
aam
inc
and
jo
imul
jg
test
fcompl
xchg
jl
dec
sub
dec
sub
sub
dec
shrl
sbb
mov
push
sub
or
out
sbb
cmp
jo
sbb
div
lock
mov
cltd
push
dec
mov
pushf
add
lahf
fsts
in
sahf
roll
ss
mov
sub
test
lret
bnd
in
int
pop
lret
fwait
rol
adc
out
sbb
mov
jecxz
repnz
data16
dec
lret
in
ss
std
or
out
insl
lahf
dec
mov
cmp
push
add
push
xor
in
aaa
mov
sbb
push
repz
push
or
rorb
sub
ljmp
out
cmp
sbb
xor
cmp
mov
inc
divb
fbld
movb
std
enter
mov
out
mov
mov
fcmovnb
cltd
mov
dec
into
mov
pop
xchg
sbb
add
xlat
scas
or
movb
push
fwait
in
repz
daa
xchg
lea
data16
in
iret
or
nop
test
and
test
ret
jmp
xor
loop
aas
and
pusha
mov
push
in
cs
or
andl
cmp
out
push
xchg
js
popa
cli
xchg
and
das
lds
fists
popa
repz
mov
dec
ja
pop
and
movsb
mov
inc
lahf
cmp
adcb
vrsqrtps
fwait
jmp
cli
ja
dec
std
cmpsb
or
aas
adc
aam
addr16
sbb
adc
jne
outsl
ljmp
push
sub
jno
mull
mov
inc
dec
mov
push
xor
jecxz
icebp
addl
rorl
mov
aaa
pop
insb
push
push
fiadds
cld
ja
insb
repz
rolb
je
dec
jl
bound
cld
dec
mov
inc
jmp
les
push
xlat
push
pop
push
lret
adc
inc
mov
lret
aas
bound
orb
loope
ljmp
arpl
inc
bound
jns
sbb
and
xor
nop
sub
jae
inc
mov
clc
out
ret
loope
je
repz
adc
fwait
dec
scas
dec
in
js
push
add
pop
jns
cmc
add
in
jnp
or
mov
mov
scas
es
push
movsl
inc
aad
cmpsl
inc
sbb
repz
cli
imul
and
and
mov
xor
into
cmp
mov
add
pushf
ljmp
fadd
ljmp
cmp
xor
mov
into
dec
pop
lea
dec
loopne
sub
fldt
ret
push
sbb
push
data16
aas
icebp
std
aaa
xor
mov
aaa
in
je
popa
adc
lahf
lcall
inc
pop
stos
andb
movsl
pop
stc
jmp
aam
stc
xchg
std
vphaddwd
shrl
ret
cmc
shlb
mov
ljmp
call
cmp
mov
cs
leave
xor
int
cmpsl
mov
mov
test
in
add
cmpb
outsb
jmp
cmpsb
fistpl
enter
pop
sbb
xchg
pop
push
sti
loope
ljmp
mov
cli
dec
jb
add
xchg
xor
out
dec
mov
dec
mov
mov
jg
inc
sbb
add
cmc
iret
mov
out
scas
mov
jnp
ret
pop
dec
ja
mov
rcll
push
fldenv
xor
addb
sbb
mov
sbb
push
pop
mov
push
test
js
stc
aad
pop
cli
sbb
shll
mov
rorb
adc
jge
mov
sbb
bound
loop
fadds
cld
xor
out
jle
out
shrl
push
cmc
jb
and
lea
sub
repz
outsl
pop
cmpsb
sub
xor
aaa
out
cmp
pop
add
add
scas
mov
pop
inc
pop
and
sbb
dec
pop
sub
pusha
lock
mov
dec
lea
push
and
dec
adc
jne
out
fs
icebp
sub
sub
test
jns
pop
fadds
mov
inc
mov
mov
clc
out
cmovge
repnz
and
cmp
adc
les
or
mov
cmc
or
faddl
repz
fxch
test
mov
outsl
data16
arpl
xor
pop
cmpl
idivb
clc
out
shrb
std
xchg
xchg
cmp
sti
mov
scas
mov
in
les
push
push
addb
mov
xchg
push
dec
sbb
popf
daa
rcll
jbe
lret
sbb
insb
lods
outsl
je
push
push
fs
test
mov
push
stc
mov
lret
cltd
mov
xchg
or
and
cltd
loop
mov
pop
stos
inc
push
jle
cmp
push
sahf
daa
loopne,pn
fcom
push
movsb
pop
add
push
inc
ret
imul
dec
repz
mov
xchg
or
cmp
leave
bound
push
mov
sub
in
xchg
sub
adc
jle
call
and
ss
sahf
jg
sbb
icebp
cmp
xchg
add
out
cmpsl
mov
mov
addr16
cmp
sub
cmp
outsl
mov
shrl
fs
jmp
out
stos
stc
decb
repz
cmpsl
inc
sub
insl
mov
and
jmp
adc
cs
pop
mov
mov
jecxz
jp
jns
jo
xchg
xor
mov
fsubl
jns
cmp
sub
shl
mov
je
sub
pop
out
xchg
in
stc
aam
ret
sbb
or
lods
mov
jge
scas
jge
movsb
fidivs
jl
arpl
lret
sub
imul
and
jae
ja
xchg
test
imul
xchg
ja
push
xchg
xlat
fsubrl
xor
cmpsb
addr16
adcb
cmp
out
or
cmp
pop
js
or
sbb
lahf
dec
inc
xor
out
xor
mov
sbb
fdivl
pop
sahf
or
daa
sbb
sbb
out
and
scas
cld
pop
xlat
sbb
idiv
push
sub
jge
sbb
mov
add
aad
add
dec
sti
lock
jns
lods
orl
mov
inc
sbb
push
shld
leave
inc
cli
jl
push
cld
sti
jg
loope
pop
pop
ret
pop
pop
mov
lahf
jge
sbb
nop
incb
push
mov
into
and
jb
cmp
loop
les
into
push
jo
mov
pop
leave
insb
push
add
dec
or
sub
add
in
sub
pop
pusha
add
sbb
fidivrl
outsl
pop
xor
jp
ds
stos
rcll
subb
cmp
outsl
fwait
add
mov
clc
jo
xor
mov
mov
aam
xor
imul
xor
ljmpw
jbe
jbe
icebp
lahf
jne
nop
mov
sub
xor
adc
out
es
mov
dec
jl
aad
push
push
push
add
cmp
pushl
scas
push
or
jne
or
dec
push
xchg
dec
arpl
adc
rcrl
movsb
stos
pop
sub
xchg
push
shlb
sub
sbb
lods
xchg
stos
gs
test
enter
mov
js
call
pop
mov
test
xchg
jmp
lds
cmp
xor
addr16
sub
les
mov
push
jne
push
xor
jecxz
movsb
jbe
mov
cmp
cmp
jmp
push
pop
icebp
xchg
inc
push
stc
xchg
push
mov
movsb
cmp
pop
rclb
adc
iret
out
out
mov
pop
fst
addl
mov
add
inc
ror
addr16
fldl
jo
fstp
and
pop
lcall
pop
repz
push
push
popa
outsb
or
sti
xchg
ret
mov
rcrb
pop
nop
pop
mov
add
jne
mov
or
dec
push
lods
pop
pop
or
insb
xchg
sbb
adc
das
push
mov
dec
or
clc
cmp
icebp
mov
or
dec
mov
sub
or
add
imul
inc
out
sub
imul
popa
mov
push
int
repz
push
dec
or
jb
push
and
inc
lods
sbbb
xor
or
rcrb
jne
mov
xchg
inc
cmpsl
xlat
mov
addr16
loope
rol
bound
xor
jecxz
sub
mov
sub
pmulhuw
insb
xor
dec
pushf
pop
jle
fwait
pushf
or
xchg
fdivs
dec
and
stos
inc
mov
jl
lret
inc
mov
sub
xor
adc
enter
mov
add
mov
xlat
xchg
sbb
addb
daa
mov
inc
adc
cmpsl
rcll
fidivs
pop
fisttps
push
inc
lret
aam
adc
adc
push
ret
or
imul
cmc
xlat
clc
xor
aas
iret
daa
test
add
fs
movsl
mov
sahf
push
ror
repnz
jg
xchg
jb
cs
aad
bts
lret
jg
hlt
cmc
fwait
mov
in
mov
daa
fisttpll
fldcw
mov
loope
jae
lret
ss
sahf
inc
xor
xchg
pushf
pop
and
mov
dec
cwtl
pushl
pusha
pop
push
jns
fsts
bound
xchg
aad
mov
mov
outsl
not
lahf
aam
xor
test
mov
pop
mov
sbb
and
inc
jmp
mov
call
and
cmp
and
nop
lea
or
paddq
iret
mov
push
ret
sub
loop
push
inc
or
push
pmaxsw
sbb
mov
test
jne
je
pop
repz
inc
push
push
incb
je
xor
xor
pop
mov
daa
fs
push
mov
xchg
push
dec
scas
js
loop
out
addl
jg
scas
adc
in
cld
dec
fisubrs
mov
cmpb
incb
gs
mov
notb
inc
mov
sbb
adc
jg
aas
xor
sbb
lds
dec
pop
or
cwtl
mov
inc
inc
and
jge
aam
iret
pop
xor
mov
das
pop
mov
subb
inc
call
into
pop
ljmp
pop
ret
subl
adc
sbb
mov
rcrl
out
rcr
xchg
das
int
cmpsl
xor
js
sub
push
xchg
jmp
and
jl
stos
lcall
pop
xchg
dec
add
add
xor
mov
inc
in
das
push
cli
cltd
out
test
xchg
loopne
sub
test
mov
aas
jo
dec
jo
xor
lods
cwtl
stos
das
mov
stos
jne
xchg
mov
pusha
idivl
sbb
mov
es
mov
std
and
pop
cwtl
sub
cmp
mov
push
dec
mov
outsb
sbb
call
mov
dec
repnz
mov
sub
out
mov
cs
push
out
scas
mov
sub
or
xor
fildll
adc
cmp
mov
hlt
xchg
sbb
jne
cmpsl
dec
jns
jl
mov
jne
cmp
push
icebp
pusha
test
push
sbb
and
mov
orb
popf
xlat
ret
xchg
adc
cmp
jg
jns
mov
aam
sti
test
ja
mov
outsb
cli
addr16
cld
leave
inc
cmp
push
mov
xor
jl
mov
mov
das
dec
lds
cli
cltd
push
fmuls
icebp
das
add
xor
ja
inc
cli
sub
pop
push
into
mov
pushw
pop
and
ljmp
adc
out
jne
sti
rcrl
push
popfw
fdivrl
aam
mov
push
cmc
mov
xor
xor
and
ljmp
insb
jnp
fstpt
mov
jle
pop
xchg
jp
js
lods
pop
enter
stos
ds
cmp
lock
cwtl
sar
mov
or
adc
jae
mov
push
or
rclb
shl
out
jae
push
mov
adc
movsb
into
test
xor
mov
js
aam
mov
push
push
mov
ficoms
ja
scas
loopne
jmp
icebp
or
out
mov
xchg
addr16
jmp
inc
enter
pop
xor
pop
movsl
and
add
aas
mov
push
ret
addb
lds
aad
add
gs
decl
mov
cmp
xchg
sub
ret
enter
std
inc
push
rorb
jae
out
testl
in
push
insl
inc
fs
inc
out
ror
mov
cmp
cli
movsb
fsubl
sbb
and
cli
cmpsl
push
adc
xchg
ret
inc
fisubs
inc
adc
dec
arpl
pop
pop
mov
push
mov
or
mov
popf
dec
in
mov
mov
inc
cmpsb
mov
add
jne
idiv
adc
outsb
and
aaa
arpl
nop
mov
mov
mov
sbb
xchg
mov
mov
fwait
add
cmp
pop
loop
inc
jge
out
rcl
sbb
sub
and
mov
mov
inc
int
inc
pop
adc
rcrl
shlb
imul
in
lds
imul
sub
xor
outsl
xchg
out
or
cld
jns
cmpsl
xor
mov
jmp
pushf
clc
scas
out
data16
ret
cwtl
int
insb
es
fwait
cmp
sahf
iret
sti
xchg
popf
xchg
insb
jnp
ljmp
cmp
lret
dec
adc
popa
mov
adc
cmp
iret
cli
inc
imul
jl
sub
mov
repz
inc
icebp
arpl
and
xchg
out
ret
xchg
in
mov
jg
fimull
bnd
test
sub
and
mov
xlat
sbb
in
xchg
sub
adc
lea
mov
mov
dec
addr16
xchg
sbbb
or
jge
mov
add
test
or
jge
jmp
xor
das
sahf
rorl
pop
out
cmpsb
sub
cmp
stos
lds
fiadds
cmp
lods
sti
int
inc
sbb
ret
arpl
push
pushf
sbb
inc
dec
add
popf
rol
pop
xchg
jns
and
mov
and
push
enter
inc
xor
adc
mov
clc
subl
xchg
jb
je
xor
repz
jp
xchg
lcall
dec
mov
fdiv
push
pop
mov
cld
lds
sahf
mov
les
or
xor
pop
sub
pop
test
test
jmp
xor
sbb
mov
addl
inc
xor
mov
sub
pop
lods
mov
outsl
lds
xchg
insl
sahf
mov
xchg
adc
jns
cld
dec
divl
cwtl
fimuls
jne
ljmp
repnz
addr16
icebp
test
jle
test
cmp
fsubs
hlt
sbb
cmp
cmp
jbe
sub
fbld
popa
sbb
sbb
xorl
scas
lcall
push
jae
into
mov
xor
popa
aam
or
xor
xchg
cmpsb
jg
jle
aaa
mov
adc
call
cmp
cmpsl
pusha
inc
int3
xchg
sub
inc
dec
orb
cmpsb
push
pop
sbb
gs
jo
call
ror
push
jmp
testb
inc
mov
sahf
and
mov
das
pop
fsubs
lods
push
rorb
cmp
sahf
orl
cmpsl
ret
push
mov
xchg
pop
sub
mov
sub
fsubrs
pop
pop
test
arpl
xchg
call
mov
jne
xchg
lods
inc
and
xor
fildl
cmp
mov
testl
cwtl
jmp
loop
pop
dec
jp
sbb
test
xchg
rolb
sbb
mov
aaa
aad
lret
fnstcw
cmp
ret
push
stc
mov
pop
enter
jle
icebp
cmp
xchg
aad
push
push
je
frstor
movsl
test
xor
add
xor
sub
xchg
xor
and
lcall
adc
jne
aas
dec
hlt
in
xchg
sub
clc
stos
in
push
dec
xor
pop
lcall
fsts
imull
and
mov
bound
outsl
bnd
inc
push
jno
in
fwait
mov
sub
jno
or
psubsb
mov
jb
adc
dec
sub
call
xchg
mov
loopne
push
adc
out
and
sub
cmp
repz
stc
ds
push
fcompl
mov
gs
dec
les
pop
and
jecxz
test
addr16
test
ret
and
add
pop
sbb
bound
pop
es
and
aam
dec
mov
scas
negl
ret
out
ss
std
and
pop
scas
das
pop
sub
pop
data16
test
sbb
in
call
ja
dec
sbb
jbe
bound
cltd
dec
dec
and
lret
and
jno
mov
fistl
loopne
add
dec
push
sahf
mov
leave
jno
pop
pusha
stos
add
pop
je
jo
ficoms
pop
sbb
loop
jnp
or
and
hlt
in
pop
int
pop
push
aad
mov
jnp
fsubrp
lahf
inc
cmpsb
insb
loope
pop
mov
loope
mov
rorb
lods
pusha
test
mov
pushf
icebp
insl
sub
int
jmp
push
addr16
pop
out
pop
rclb
shrl
mov
ret
jg
ljmp
outsb
adc
cs
mov
jl,pt
push
xlat
or
nop
ret
aas
pop
shrb
xorb
sahf
out
jmp
cmp
shr
in
push
mov
outsl
cmp
pop
test
sar
inc
loope
jmp
cld
mov
add
fst
jne
sub
pusha
lcall
cmpsl
xor
filds
mov
lahf
cli
mov
xor
das
jnp
pop
cmc
sbb
pushf
inc
push
cs
mov
inc
test
add
dec
arpl
jmp
inc
and
test
mov
lea
jmp
adc
ljmp
adc
imul
mov
jle
sbb
jb
test
xchg
mov
testl
andl
adcl
mov
or
or
enter
mov
push
mov
xchg
dec
cmp
push
hlt
add
mov
test
xchg
into
dec
pop
test
in
in
subb
addb
gs
das
push
dec
jle
push
fmuls
scas
xchg
in
dec
pop
xchg
mov
addr16
aas
or
xchg
fldenv
lret
push
sub
aas
into
lret
cmc
icebp
sub
test
movsb
scas
frstor
xchg
daa
icebp
dec
add
push
lods
adc
adcl
adc
xchg
icebp
or
push
mul
push
mov
xchg
push
jmp
daa
rcrl
push
addr16
push
xor
out
nop
jle
mov
cmp
xchg
notb
or
fisubrl
cld
mov
mov
repz
pushf
dec
arpl
push
add
sbb
mov
fs
jae
sub
adc
mov
mov
mov
jg
mov
fcompl
lods
xchg
je
xor
jnp
std
ds
add
loope
loope
popf
xor
sub
inc
mov
es
sbb
xchg
shrl
dec
mov
jb
or
out
in
test
fwait
sbb
sub
pop
data16
xchg
jecxz
mov
or
push
and
dec
decb
stos
xchg
subl
daa
sbb
dec
adc
pusha
cmp
subb
mov
xor
add
das
mov
repz
add
aaa
inc
scas
cmpb
stos
aam
test
sbb
fcmovu
inc
mov
ljmp
sub
inc
cmp
xchg
in
cltd
cmpsl
test
cltd
mov
cmpsb
pop
imul
inc
pop
popf
out
jle
popf
push
daa
inc
dec
loop
clc
push
out
sub
xor
fstps
mov
out
mov
bound
push
int
xor
xchg
and
shll
xor
movsb
adc
xor
test
and
ds
dec
shrl
int3
mov
add
ror
stc
lcall
or
push
xchg
clc
cmpsb
cmp
push
jo
inc
cwtl
cmpb
repnz
fxtract
cmpsb
adc
xchg
xchg
jg
xor
enter
outsb
rorb
jmp
sub
push
pop
add
push
adcb
jnp
push
mov
test
or
mov
xor
ljmp
lods
clc
icebp
jno
mov
stos
jbe
pop
adc
adc
add
outsb
sarb
mov
insb
mov
inc
push
mov
jb
adc
xchg
push
ss
repz
fwait
sbb
sub
das
mov
repnz
mov
mov
repnz
inc
mov
and
push
fildl
bound
enter
inc
xchg
mov
ja
fsubr
in
punpckhwd
fistl
daa
push
insb
inc
rcrb
ffree
xor
jb
imul
push
mov
int
mov
ss
ljmp
xchg
loope
mov
stos
les
or
outsb
sbbb
scas
loopne
rcrb
mov
test
mov
sub
int3
dec
and
and
sub
jmp
xchg
fiaddl
inc
mov
cmp
mov
push
mov
adc
scas
pop
and
lcall
aam
pop
mov
mov
mov
scas
jae
adc
xchg
push
test
mov
cld
cli
imul
out
insl
jbe
iret
sub
fs
pop
push
sbb
pusha
adcl
stc
orl
mov
xor
mov
xor
sbb
ret
inc
xchg
fldl
sti
int
pop
xchg
rorb
pusha
push
sbb
mov
push
into
shrb
mov
or
mov
xchg
imul
pause
or
mov
jp
cmp
push
mov
jae
xor
push
pop
jae
in
in
push
test
push
push
in
and
into
lret
fiadds
and
pop
popf
mov
popl
xor
cmp
push
out
stc
inc
dec
popf
xlat
and
mov
sub
add
jmp
out
add
std
adc
das
icebp
dec
pop
mov
outsl
cmp
dec
push
hlt
enter
push
sbb
jmp
jb
sbb
fisttpl
imul
xchg
outsl
jbe
push
push
xchg
push
aad
cltd
enter
push
gs
cmp
sti
out
add
jl
xorb
add
mov
ficomps
mov
rcll
decl
mov
mov
and
imul
xchg
pop
push
adc
cld
xorl
xor
js
mov
and
cld
lahf
lea
jg
xchg
sbb
aaa
push
pop
push
add
dec
pop
cmp
mov
xor
ja
mov
lds
ret
cs
fstl
and
xchg
movsb
xor
cmp
mov
mov
add
out
mov
cmp
dec
push
ret
xchg
dec
mov
pop
xor
cmovne
movsb
adc
xor
push
pop
imul
bound
xchg
mov
rclb
add
repz
push
jno
roll
or
or
out
pop
and
hlt
xlat
jge
aad
notl
cwtl
lds
xchg
outsb
dec
dec
lret
sub
cmp
sub
dec
push
sbb
sub
lods
imull
or
rol
jg
es
lods
data16
pop
sti
ret
jmp
sbb
shrb
pop
decb
adc
push
scas
mov
cmp
jge
sub
pop
or
out
push
dec
and
inc
and
sub
inc
mov
inc
leave
jg
and
mov
js
mov
and
add
jnp
xchg
xchg
xor
xchg
loopne
in
popf
imulb
mov
lods
popf
arpl
lods
inc
mov
hlt
fs
push
mov
sbb
pop
in
cli
mov
adc
shlb
iret
aad
and
and
sahf
rcll
in
mov
loopne
mov
cmc
addl
dec
shll
popa
imul
js
dec
cwtl
mov
push
test
aaa
test
movsb
adc
dec
jecxz
fbld
pop
lods
lret
push
js
xchg
lods
rorb
test
lock
add
mov
add
pop
add
sub
mov
int3
or
popf
add
lcallw
shl
dec
sub
jle
fstp
mov
adc
push
xor
xor
pop
notb
js
cltd
jg
jmp
incl
mov
ds
mov
imul
mov
jle
insl
in
out
add
xchg
andl
cs
inc
mov
mov
in
lahf
sub
xchg
fiadds
fdivrl
fstpt
dec
jno
adc
xchg
gs
negl
pop
fcompl
fdivrs
mov
shrl
mov
loopne
cmp
enter
push
inc
cmpsb
pop
rclb
jb
mov
sahf
jp
jmp
or
mov
pusha
xchg
or
popf
and
call
mov
sti
hlt
aas
cmp
xchg
repz
sahf
cli
dec
cmp
xchg
repnz
xor
fs
dec
push
lods
push
xchg
pop
lods
sub
sbb
xchg
mov
call
jo
sbb
test
xchg
cli
in
ja
shll
clc
mov
add
mov
mov
fisubrl
cld
adc
je
fimuls
arpl
std
rcl
mov
xchg
and
dec
and
adc
fisubrs
dec
xchg
xor
inc
fsubl
loope
jg
enter
mov
outsb
ja
dec
xor
xor
stos
popf
std
fwait
add
cmp
sub
je
sbb
sub
iret
inc
and
daa
jnp
add
jae
sub
orl
dec
test
dec
push
mov
fnsave
jecxz
mov
xor
jo
xchg
sub
xchg
arpl
mov
push
fwait
mov
push
jp
stos
adc
mov
aas
iret
dec
dec
mov
push
lcall
push
and
inc
frstor
in
mov
lret
lret
cmp
enter
pushf
pop
and
and
repz
add
aas
loopne
cmpl
cmpsl
js
and
and
inc
stos
lahf
jmp
xchg
push
mov
xor
cmp
sbb
xchg
in
es
into
mov
lock
inc
sub
sbb
pop
fldt
pop
aam
sbb
repnz
push
and
jbe
or
popa
cmpsb
mov
mov
mov
or
dec
mov
arpl
inc
aaa
xchg
sbbb
jl
sbb
repz
sbb
ret
add
notb
xor
popa
mov
mov
xor
mov
aaa
jmp
movsb
rcll
mov
add
add
clc
push
or
lock
cmp
dec
loope
jg
push
add
push
push
jae
jmp
mov
pop
push
movsb
and
jno
ljmp
mov
pop
sub
mov
pop
outsl
inc
call
xchg
cmp
leave
imul
scas
sbb
lret
jecxz
dec
xchg
daa
inc
pop
cmc
mov
add
dec
push
sub
js
sub
cs
xor
sbb
sbb
scas
lahf
jge
jp
inc
or
test
and
imul
int
push
loope
cmpsb
mov
out
xchg
pop
add
push
push
mov
mov
ficoml
adc
xor
sub
push
sub
add
push
xchg
scas
xchg
and
adcl
je
aaa
stos
rorb
adc
cltd
sbb
dec
jns
xchg
hlt
mov
imul
arpl
push
xchg
sbb
inc
jge
fnstcw
lret
sub
and
jge
addr16
jno
mov
mov
adc
notl
cmp
shlb
in
adc
lret
or
loopne
dec
insb
cmp
repnz
push
js
jo
cmpsb
inc
sbb
cmovl
roll
sti
mov
and
adc
js
xchg
loopne
dec
movsl
pushf
stos
xchg
or
sbb
call
adc
in
mov
jl
xor
mov
daa
mov
fsubs
adc
mov
sarb
mov
cli
adc
or
add
cmp
les
cltd
and
mov
cmp
mov
and
mov
jp
cmpsb
jno
and
movsb
mov
xor
mov
mov
jnp
push
stos
push
xchg
mov
pop
mov
adc
repnz
mov
fsubl
adc
cmpl
out
loopne
gs
enter
push
in
sub
loop
into
sub
cmp
push
cltd
push
call
add
mov
jno
jmp
cmp
pusha
iret
jge
or
or
fistl
mov
mov
adc
push
push
sbb
inc
fsubs
cmp
push
test
roll
xlat
nop
mov
mov
pop
adc
shrb
pop
or
mov
fwait
in
mov
mov
or
mov
mov
icebp
mov
in
lock
push
push
push
or
jmp
jns
imul
xchg
inc
ret
mov
sub
sub
jno
sbb
fcoms
cltd
lods
xchg
mov
dec
mov
push
sub
xchg
push
shld
mov
ficoms
mov
sti
movsb
mov
adc
push
adc
in
mov
mov
xor
fldenv
loopne
fnstcw
xor
outsl
lds
and
loopne
dec
int3
xchg
stos
inc
xchg
push
add
dec
jl
inc
jb
mov
clc
adc
add
sub
lods
xchg
shll
ja
pop
shrb
push
mov
cmp
jbe
mov
cmp
outsb
jmp
sbb
js
add
ds
jge
aam
in
rcrb
int3
and
mov
sbbb
lock
mov
mov
mov
mov
sarl
or
inc
sub
or
iret
cmp
inc
xor
push
leave
cmp
inc
mov
sub
jmp
jge
popf
xchg
in
jbe
and
js
lret
ret
lods
fcomps
mov
xchg
movsb
mov
jecxz
cmc
ja
mov
aam
pop
in
pop
les
daa
cltd
pushf
cltd
rolb
movsl
inc
mov
add
in
sub
push
mov
test
test
pop
shrl
into
mov
pop
addr16
das
jno
cmp
jl,pt
test
push
outsl
out
mov
mov
popa
dec
adc
mov
cmpsb
mov
and
push
push
xchg
movsb
add
loope
dec
cmpsb
divl
push
mov
mov
cmp
mov
mov
pop
sbb
xchg
out
or
sub
lcall
outsb
or
in
aam
roll
int3
jne
in
repz
lret
push
sbb
ja
into
push
and
mov
int
shrl
jmp
sarb
std
cmpsl
call
mov
mov
stc
or
rcll
fwait
shrl
ds
adc
sub
xchg
or
push
mov
cltd
movsb
push
push
idivb
paddusb
popa
shl
repz
pushf
insb
push
fsubr
jns
xlat
mov
decl
push
sub
mov
or
cs
push
jmp
xor
pop
test
push
mov
xchg
or
mov
adc
les
lahf
pop
movsb
xchg
or
sub
insb
jmp
fwait
loope
and
sahf
and
adcl
les
ret
and
or
mov
push
lret
pop
or
pop
mov
pop
gs
xchg
lcall
sti
imul
decl
test
or
lahf
cmp
lret
sahf
jecxz
dec
int
and
ss
mov
hlt
xchg
stos
hlt
subl
inc
test
stc
xchg
rol
adc
fistps
pop
dec
jns
mov
addr16
leave
fchs
lahf
jnp
lcall
fwait
jg
cld
repz
lahf
mov
add
mov
pop
inc
cmp
lds
mov
in
cmp
push
push
ds
and
adc
or
jp
stos
mov
in
jae
lock
imul
test
fcoml
sub
ret
fwait
insb
pop
jnp
notl
dec
gs
sbb
mov
bswap
les
enter
les
js
addl
cmpsb
cs
ljmp
adc
lea
or
js
cmp
cmp
sbb
push
faddl
enter
fdivl
insb
in
in
negl
iret
inc
inc
test
sti
sbb
lock
test
stc
sbb
pcmpgtw
out
mov
or
dec
xor
pop
jb
movsb
in
imul
or
mov
sub
jae
and
cmc
ss
push
daa
out
lds
ss
mov
push
push
push
repz
int
push
cltd
in
jno
pop
int
and
xchg
xchg
mov
jg
cmp
adc
or
push
dec
lret
mov
inc
out
or
dec
jp
add
aad
subl
xchg
jge
sub
lret
mov
mov
fs
in
pop
pop
fdiv
or
cmpsl
andl
xor
and
jb
gs
mov
cmpsb
movsb
loop
mov
or
shl
mov
push
push
adc
scas
fsts
sar
cmp
lds
xchg
pop
lahf
lods
sbbb
add
add
jge
pop
stc
popf
insb
je
jbe
test
addl
insb
sbb
dec
xor
inc
xchg
lcall
dec
jae
mov
cmp
adc
push
lds
leave
lret
pop
and
imul
jno
call
ss
repz
lods
movb
xchg
les
push
nop
add
shlb
ret
sub
sahf
xchg
cmp
clc
leave
jmp
dec
arpl
pop
xor
jns
jns
jb
jne
orl
jle
ficoml
sub
xor
aaa
jns
pop
ds
adc
sahf
movsl
push
lds
rcrb
cmpsb
jb
ss
push
adc
sub
cld
pusha
rcll
jle
and
cmp
rorl
mov
lret
fidivrs
cmp
pop
push
pop
lret
push
cmpsl
adc
shll
andb
test
fisubs
data16
or
lcall
adc
out
sahf
mov
cmpsb
rcll
out
sbb
sub
test
or
in
jge
subl
sahf
mov
push
leave
jecxz
mov
bound
xchg
add
js
in
lds
outsl
xchg
cmp
ret
push
add
jns
mov
xor
adc
and
lcall
stos
xor
int3
js
in
jne
js
sbb
cltd
mov
roll
xchg
movsl
xchg
mov
cmpb
xchg
mov
jae
ds
js
dec
cmp
mov
cmpsb
aaa
mov
in
pop
sarb
imul
or
cmpsb
insl
mov
hlt
ljmp
daa
adc
mov
stc
xor
mov
jb
cmpb
fbstp
pop
pop
xor
repnz
push
and
mov
dec
in
std
jae
mov
outsb
jae
or
pop
pop
pop
fidivrl
cmp
int
and
mov
lret
add
jl
es
call
pop
jne
jmp
xor
aas
add
push
jo
pushf
adc
js
repnz
push
in
mov
inc
jns
ret
jmp
leave
sarb
xor
dec
dec
cmc
pop
xchg
test
pushf
pop
je
and
mov
cli
mov
out
jae
call
enter
dec
sub
pop
fsubrl
in
pop
call
xor
jb
xor
lret
push
push
xchg
push
xchg
sbb
imul
or
pop
fimuls
lcall
push
and
inc
pop
rol
push
cmpsl
jge
mov
adc
adc
mov
cmp
ret
mov
sahf
add
insl
push
mov
add
pop
add
sbb
dec
out
push
sub
dec
adc
into
imul
mov
add
mov
cmp
and
pop
dec
in
pop
imul
xchg
or
jle
push
pop
shl
into
add
sti
or
in
add
movsl
std
jge
lret
icebp
mov
andl
inc
aad
jge
ds
xlat
add
insl
int
or
xchg
cmp
push
and
loop
rcrl
lret
mov
inc
push
lahf
cltd
sbbb
xor
and
aaa
and
inc
sbb
mov
lock
cmp
sbb
pop
fidivrl
call
cltd
sub
lret
xor
adc
sbb
fldcw
or
push
mov
jle
pushw
sbb
ret
push
push
add
mov
lret
dec
je
pop
push
aam
push
into
adc
out
or
adc
mov
scas
pushl
or
xor
inc
mov
xchg
cmp
pop
out
add
mov
addr16
rolb
push
ret
lods
fwait
xchg
imul
pop
cmp
out
lcall
test
lds
inc
insb
sub
adc
push
fbld
leave
movsb
lds
mov
aaa
rcrb
scas
or
jle
es
dec
push
mov
cs
and
fcompl
mov
pop
pop
fistl
sub
push
pop
cmp
mov
fmul
incl
mov
scas
push
mov
cwtl
outsl
jnp
jmp
mov
jecxz
inc
sbb
hlt
cwtl
loopne
xchg
cmp
lods
push
mov
arpl
daa
jmp
repz
fldcw
push
sbb
lds
aad
dec
mov
xor
add
jne
imul
je
leave
or
idivl
mov
xor
subb
mov
lahf
cli
add
and
push
sub
fld1
sub
adc
cmovg
adc
movsb
sub
sbb
and
sahf
add
cmp
lock
and
cmpsb
xchg
pop
mov
xor
add
xchg
add
dec
ljmp
inc
jge
sbb
fidivrl
js
rol
cmp
shll
lock
sub
mov
add
test
leave
hlt
div
mov
pop
scas
loope
pusha
sub
cltd
mov
sub
popf
call
jo
insl
icebp
mov
leave
sbb
mov
iret
xchg
leave
popf
arpl
mov
aam
iret
outsl
adcl
pop
into
in
test
arpl
lods
mov
shlb
mov
pop
cli
lahf
or
bound
xchg
or
repnz
stos
shrb
mov
aas
adc
jge
mov
out
mov
or
ret
xorl
adc
xor
fs
scas
pop
roll
repnz
cmc
pop
idivb
xchg
imul
call
push
jg
push
imul
xor
outsl
push
jns
xlat
outsl
add
pop
sbb
leave
fdivl
lcall
push
cmp
sub
inc
pop
add
jmp
and
aad
cmp
inc
xor
movsb
pusha
hlt
pushf
inc
rcr
lcall
arpl
dec
add
and
fs
stos
mov
fwait
push
inc
inc
test
dec
jo
xor
out
inc
insl
mov
repz
cmpsl
and
movb
mov
mov
loope
cmp
or
push
add
xor
fidivrs
lods
push
mov
ret
js
pushf
push
mov
and
lcall
adc
cmp
js
pushf
mov
test
call
adc
pop
out
dec
js
sbb
rcll
sti
add
cmc
hlt
and
ljmp
outsl
ret
mov
enter
stos
add
shr
in
sub
jns
out
mov
dec
mov
jl
cltd
dec
sbb
adc
iret
mul
add
mov
cmpsl
pop
nop
rcll
out
jle
mov
cltd
xor
sub
or
js
and
cmpsb
fsts
jbe
std
pop
movsb
push
sbb
fists
jo
cmpsl
mov
mov
subb
mov
es
hlt
add
xchg
out
test
mov
add
scas
jmp
sahf
cmp
test
dec
push
popf
or
mov
mov
inc
arpl
in
add
cmp
and
mov
or
cmp
pop
pop
insb
mov
xor
iret
insb
inc
add
cmp
popa
in
or
inc
stos
mov
cmc
xor
repz
mov
cmpsb
cmp
push
icebp
push
or
test
stos
dec
sbb
cmc
fcmovb
lcall
stc
mov
loope
out
ss
sub
inc
stos
xorb
or
aad
cmp
test
test
imul
ficomps
ljmp
in
int
pop
push
clc
mov
repnz
mov
mov
repz
pusha
flds
imul
mov
adc
or
gs
pop
mov
outsl
into
stc
sbb
scas
mov
int3
sub
push
aam
pop
orb
negb
push
sub
cmc
lret
movsb
fistpll
idivl
nop
stc
inc
inc
push
ret
xchg
ficompl
das
jae
bound
push
aas
lahf
cmpsb
imul
xchg
mov
pop
mov
mov
or
push
repnz
sbb
shrl
sub
xor
xor
add
ja
xchg
daa
push
adcl
adc
inc
pop
sub
mov
jno
mov
stos
dec
jnp
mov
jg
repnz
xchg
shrl
push
ret
pop
icebp
out
push
dec
adc
je
pop
or
cld
adc
cltd
loop
jg
add
jmp
addr16
xor
xchg
int
sub
lea
push
aaa
mov
xor
das
test
pop
in
rclb
and
pusha
pop
rclb
faddl
mov
pop
and
pop
jb
daa
adc
inc
lret
fs
pop
scas
sub
mov
scas
out
or
stc
daa
sbb
adc
inc
cwtl
sbb
xor
mov
shll
add
sub
or
enter
in
ljmp
xchg
and
xor
das
pop
mov
pop
lret
aam
sahf
ss
ss
test
push
shr
adc
fsubrl
mov
pop
cld
cltd
icebp
fisubs
shlb
pop
jecxz
sbb
push
mov
iret
inc
sti
outsb
into
insl
inc
xchg
mov
shl
and
loopne
test
out
dec
mov
div
sahf
add
shlb
mov
cmp
mov
into
test
and
pop
icebp
inc
mov
dec
stos
daa
xor
insl
sub
and
fnsetpm(287
xchg
rorl
and
mov
jp
or
inc
xlat
cli
je
mov
mov
fwait
jns
out
ss
push
hlt
sbb
call
pushf
int
subb
mov
cmpb
std
int3
jbe
test
divb
nop
sub
imul
dec
arpl
sbb
fidivrs
pop
cmp
fisubl
into
jg
sub
or
popl
lds
loope
stos
mov
xchg
pop
out
jae
mov
push
lds
xor
cltd
fidivrs
fisttpl
jp
sbb
inc
jnp
and
mov
subb
insb
cli
lea
adc
cmpsb
imul
jge
lahf
sbb
ror
aad
push
xrelease
jne
mov
ret
xchg
lea
sbb
lock
lret
push
inc
outsl
pop
arpl
orl
nopl
or
aaa
lods
pop
sti
xchg
imul
jg
out
aas
xchg
out
cltd
mov
jns
sbb
pop
out
shll
pushf
push
inc
scas
xchg
add
sub
xchg
or
cmpsb
mov
cs
and
insl
adc
sub
sbb
js
cmc
jb
aad
loop
lods
aam
int
pushf
push
repz
jae
movsb
or
jae
mov
dec
mov
jno
stos
inc
cmp
movsb
sbb
loopne
and
ja
imul
ret
out
and
aaa
sbb
fcomps
scas
or
push
sub
in
dec
call
into
imul
ffreep
jl
pop
jle
test
jecxz
push
mov
mov
jne
mov
inc
nop
arpl
sahf
xchg
in
sbb
jmp
enter
data16
cmp
dec
mov
nop
cmpsl
sti
lret
lock
les
push
push
jge
inc
fildl
out
sbb
sub
push
ljmp
arpl
cmpsl
movsl
xor
int3
cltd
sbb
push
inc
test
bound
insl
and
cmp
pop
adc
dec
and
ret
pop
push
dec
repz
inc
in
fcmovb
cs
in
loopne
outsb
lahf
xchg
insb
aam
out
cmp
jb
xor
andl
movsl
das
rorl
mov
push
jmp
xchg
shll
pop
pop
jge
mov
fistl
adc
fstps
sbb
clc
jno
call
das
or
pop
mov
sub
inc
fsubrs
in
pushf
cwtl
iret
data16
clc
sbb
fisubrl
pop
xchg
dec
mov
xchg
xchg
push
cmpsl
mov
sbb
jp
push
test
cli
dec
test
and
mov
pop
icebp
jp
jl
lods
fsub
cltd
mov
mov
test
in
xor
pop
jecxz
lahf
jg
lcall
mov
xchg
lret
test
dec
ret
out
pop
sub
rdtsc
sahf
in
jbe
jne
cmpb
cld
adc
fidivs
jle
push
pop
xlat
shrb
hlt
sbb
stos
inc
mov
jbe
fcompl
xchg
cmp
arpl
stos
jmp
test
xchg
popf
jnp
iret
inc
mov
mov
dec
sar
pop
sbb
push
sti
imul
std
fidivrl
mov
push
cld
inc
movsl
lods
adc
enter
add
xor
ficoml
push
dec
ja
xor
inc
dec
add
xchg
leave
xchg
inc
frstor
lret
js
xchg
test
pop
pop
mull
mov
or
jg
imul
popf
arpl
mov
dec
adc
xor
fcoml
ss
xchg
mov
stos
mov
add
cmpb
cmpl
cmpl
jecxz
fs
mov
imul
in
movl
jle
push
adc
sbb
filds
cwtl
lret
dec
sub
fnsave
lock
cmp
jno
sbb
roll
lods
pop
loopne
dec
mov
dec
mov
inc
sahf
and
addr16
in
mov
inc
fldl
jae
ds
test
add
lahf
mov
outsb
jp
popf
lret
rdpmc
sub
xchg
call
xchg
or
add
aas
pushf
je
push
add
mov
jge
pop
movsb
cmp
mov
enter
xchg
xchg
test
add
mov
gs
cli
push
add
mov
aas
mov
push
xchg
and
push
fldcw
aas
int3
cmp
cwtl
mov
jno
inc
ss
xor
je
fnstenv
mov
repnz
hlt
ljmp
jb
mov
loopne
ja
sbb
cld
xor
mov
jmp
or
das
not
ret
mov
loop
aaa
xchg
ljmp
push
rcll
sub
int
cld
cmpsb
push
sbb
add
sub
xchg
leave
mov
jae
les
mov
cmp
xor
js
xor
add
adc
sahf
iret
sub
pusha
mov
and
test
cmp
hlt
dec
cmpsb
cmp
mov
pop
jns
lods
icebp
jb
xor
mov
push
mov
jmp
xchg
ss
inc
das
mov
push
add
das
popf
imul
inc
hlt
jbe
mov
insl
sbb
jmp
stc
xor
jo
test
pop
inc
in
pop
test
andl
in
imul
push
add
inc
jns
push
insb
pop
jp
out
sbb
add
pop
mov
cltd
pusha
dec
adc
or
in
bound
pushf
cmp
pop
pop
nop
xlat
fidivl
insb
jo
cmp
mov
sbb
mull
xor
push
mov
cmp
lea
outsl
mov
sti
cld
inc
mov
pop
mov
pusha
lods
mov
cld
mov
mov
mov
mov
movsb
enter
mov
scas
rcrb
lahf
push
or
out
rcrb
ja
aam
push
cmp
mov
into
mov
ds
pop
cmp
xchg
lahf
dec
test
jge
out
fwait
xchg
repnz
xor
lds
adc
cmp
sbbl
push
adc
jno
movsl
jns
push
pop
jmp
xchg
outsl
push
out
call
and
rorl
lret
jo
sub
ret
scas
push
movsl
inc
popa
loop
sub
sbb
mov
jmp
mov
dec
sbb
jmp
mov
sub
xchg
inc
dec
cmpsl
cli
mov
jbe
xlat
and
nop
pushf
xor
lret
dec
xchg
mov
adc
loopne
es
pop
into
push
cmc
xor
cmpsb
outsb
mov
gs
out
pushaw
xchg
cmp
popf
outsl
sti
mov
mov
fsubrl
jmp
sar
pushf
repz
daa
inc
xchg
jnp
loope
xchg
aam
cmpsb
inc
sbb
jne
iret
push
cmp
sub
fs
cltd
sbb
fwait
add
out
test
ret
movsl
push
sbb
xchg
cmc
xchg
imul
adc
fildll
inc
push
xchg
xchg
ret
sbb
pop
imul
js
ret
or
sbb
mov
or
cmp
mov
sahf
dec
cmpsl
mov
push
imul
fsubp
push
sbb
sbb
cmpl
jnp
pop
xor
push
jmp
or
jecxz
sbb
imul
ret
mov
mov
fcmovnbe
out
dec
insl
in
pop
frstor
pop
cmp
push
inc
adc
mov
push
fiaddl
sub
pop
cmp
dec
add
dec
sub
dec
push
fbstp
mov
cltd
fcompl
scas
or
mov
divl
stc
xorb
loop
cmp
dec
shlb
cs
mov
jb
mov
lcall
push
pop
and
mov
std
pop
xchg
ret
addr16
lea
cmp
adc
push
add
in
xor
sub
push
sbb
xor
dec
sub
jle
add
aaa
add
popf
dec
fcmovbe
and
insl
xchg
xchg
xchg
subl
fiadds
sti
shll
sbb
cli
dec
rcrl
ljmp
enter
gs
xor
pop
push
pop
xor
mov
sub
bound
adc
clc
mov
or
aaa
mov
rorl
psrlq
xchg
inc
cmp
popf
adc
jae
outsl
out
lds
out
scas
aam
inc
stos
xlat
xchg
cwtl
dec
dec
inc
adc
push
les
pop
mov
adcl
aam
sbbb
cmc
mov
imul
push
or
push
cwtl
call
cli
cmc
mov
insl
lahf
push
or
movsb
and
inc
or
mov
nop
out
mov
push
cmpsl
sbb
mov
std
or
shrl
out
mov
jecxz
scas
jg
popf
push
inc
lock
pop
out
mov
cmpsb
push
add
ret
dec
pop
out
icebp
dec
mov
jl
inc
inc
jl
dec
jecxz
aaa
loop
jo
jnp
insl
mov
fcmovbe
mov
xor
sbb
mov
int
adc
mov
and
pop
sbb
inc
addr16
stos
fucomp
ds
xlat
jae
ret
addr16
movsb
xor
mov
inc
fnstsw
cwtl
xchg
and
dec
lcall
stos
dec
jge
jg
adc
and
out
outsl
icebp
cmp
scas
stos
mov
jnp
jo
aas
mov
in
push
inc
fcomps
adc
out
jl
dec
decb
mov
stc
fiadds
inc
div
dec
mov
cmpsl
loope
mov
call
lea
mov
adc
jl
mov
jo
push
mov
dec
adc
xor
sti
jp
mov
cmc
mov
push
jmp
imul
aam
dec
fidivs
sub
test
data16
fistl
pop
pop
fcmovbe
jecxz
inc
cwtl
and
sahf
fwait
add
imul
inc
cmpsl
mov
jmp
xor
jne
push
and
and
jne
xchg
xchg
dec
mov
sub
xor
aas
pop
mov
adc
enter
push
cmp
cmp
xchg
adc
xor
push
push
mov
dec
in
xchg
ja
shl
dec
lods
cwtl
or
arpl
sbb
adc
cmp
ss
cmp
into
lea
outsb
icebp
daa
mov
fdivrs
cltd
bound
pusha
push
sbb
mov
movsl
sbbb
inc
dec
add
add
icebp
sub
dec
dec
add
jnp
cmp
out
fistpll
lcall
cwtl
xchg
mov
xor
pop
adc
jmp
test
int
jno
test
push
or
test
push
pop
shrl
pop
jecxz
cmc
xor
cmc
insl
sbbb
ror
lahf
leave
xor
out
adc
or
int3
rol
loop
in
sahf
cmp
scas
shll
sti
and
cmp
pop
dec
ret
inc
sub
jle
icebp
fdivrs
lret
inc
dec
cmp
into
pop
clc
sub
lock
and
mov
divl
dec
pusha
xor
push
outsl
sbb
xor
push
fbld
imul
jle
xchg
pushf
pop
mov
cmp
out
mov
lcall
push
mov
or
dec
aas
cmpsb
movsl
adc
mov
fcmove
mov
or
xor
adc
dec
fwait
stos
mov
loopne
pop
fucomi
aam
push
mov
scas
ret
cmp
lock
jmp
jle
cwtl
aam
push
movsb
mov
cmp
mov
adcb
or
sbb
pop
mov
sub
and
push
mov
loopne
std
mov
pop
adc
aad
and
mov
out
lahf
inc
outsb
or
push
sbb
ret
dec
decl
out
imul
mov
cmp
and
or
mov
add
out
xchg
lods
jo
in
xor
cmp
cltd
ds
add
mov
popa
arpl
adc
movsl
and
dec
mov
jae
std
sub
jno
xchg
ss
xchg
mov
jnp
test
mov
mov
sbb
mov
mov
stc
xchg
push
cli
fcomi
or
jecxz
bound
lock
repz
mov
fnstcw
pop
push
mov
inc
jne
jbe
pop
mov
or
jmp
shll
ror
ret
jne
mov
sub
xchg
pop
loop
enter
sarl
mov
rolb
sti
jge
mov
lods
lcall
jecxz
cld
ret
dec
inc
mov
lods
invd
adc
out
andl
addr16
add
data16
or
push
push
or
push
inc
adc
fcoml
cwtl
cmp
and
cmc
ljmp
in
jge
xchg
outsl
jp
cmpsb
loope
shll
add
mov
sub
mov
mov
mov
es
and
ljmp
adc
test
mov
mov
pop
xor
push
fisubs
inc
testb
mov
add
sub
mov
push
shl
pop
or
push
repnz
and
add
mov
loop
test
lods
cmp
push
loop
loop
movsl
xchg
add
jmp
scas
lods
fidivs
dec
rcll
mov
push
movl
popf
xchg
mov
lods
push
dec
dec
rorb
cmpsb
cmp
clc
mov
lcall
lahf
jecxz
out
ret
repz
sub
xor
dec
test
out
repnz
mov
out
dec
jecxz
mov
int
lret
pop
mov
scas
mov
call
addb
xchg
call
leave
cli
mov
xor
movsl
push
repnz
sub
adc
stos
mov
rcrb
lods
xor
adc
jge
shlb
add
xor
dec
mov
and
lods
test
or
in
cmp
dec
sbb
sub
xor
adc
push
adc
mov
insb
shrl
and
xchg
lret
addr16
aaa
test
pushf
dec
jo
lock
in
in
or
xor
lahf
mov
jo
repnz
jae
add
rclb
testl
xchg
xchg
mov
int
and
ficoml
mov
lock
aaa
test
add
jge
imul
shlb
fsubs
mov
test
add
add
mov
jl
roll
jecxz
xor
add
push
lcall
cs
adc
dec
in
leave
cmp
mov
jne
cmp
ficomps
xlat
lock
stos
xchg
pop
and
fisubl
or
jo
or
mov
add
es
and
out
xchg
nop
iret
inc
sahf
add
movsb
add
outsl
pop
scas
push
add
sub
into
scas
mov
or
jecxz
fcmovbe
mov
fwait
mov
adc
xchg
arpl
add
shrb
scas
aas
adcb
dec
andb
test
lods
push
push
and
stc
xchg
aad
cli
add
das
lea
imul
mov
jmp
sub
pushl
adc
add
adc
dec
or
sbb
mov
mov
mov
add
lods
negb
or
jb
ljmp
test
mov
jb
gs
push
cltd
bound
push
cwtl
mov
stc
pop
repnz
pop
aas
lods
xchg
mov
xchg
and
fs
outsl
ret
cs
leave
sti
scas
and
or
ret
pop
leave
push
mov
pop
adc
push
outsl
xchg
mov
jno
mov
xor
in
cmp
lret
pop
mov
add
bound
xchg
push
cmp
lcall
mov
xchg
push
ja
enter
cltd
push
cltd
mov
jmp
sbb
jecxz
lahf
sbb
insl
dec
loope
mov
mov
cwtl
aad
and
xchg
push
inc
stc
lcall
mov
mov
jnp
es
inc
cwtl
shll
sbb
sahf
dec
rcl
ss
into
adc
test
pop
cmp
jnp,pt
mov
popf
mov
int
addr16
or
xchg
pop
jp
mov
scas
in
aad
xor
sbb
xchg
addr16
popf
loopne
cmp
fstpt
mov
jns
mov
or
push
push
mov
imull
or
fistpl
add
mov
cmp
mov
dec
gs
adc
sub
adc
jmp
sbb
xchg
jmp
dec
aam
rolb
test
push
xor
sub
sbb
adc
cmpsl
fstl
mov
notl
fwait
xor
add
jb
loope
xorb
es
mov
lds
pop
pop
inc
movsl
dec
in
loop
inc
std
out
lea
rolb
es
dec
dec
leave
call
fldt
movsl
popf
ja
rolb
xchg
dec
and
xchg
pop
call
sti
in
or
cmp
sbb
xorb
dec
test
rol
shll
push
icebp
adc
push
mov
mov
fwait
dec
jecxz
fldlg2
push
out
ret
and
pop
icebp
xor
inc
sub
les
push
arpl
sbb
mov
pop
stc
loop
mov
xchg
test
jnp
sbb
jp
push
and
fmull
inc
mov
xchg
ja
scas
sbb
cmp
jge
and
int
inc
dec
push
mov
shrl
jl
cmp
jnp
mov
or
pop
mov
clc
popf
fisubs
jmp
mov
sti
mov
mov
imul
jbe
push
cwtl
mov
jo
sub
xchg
xchg
sti
imul
sbb
jg
mov
sbb
jle,pn
xchg
neg
push
iret
fcomp
add
pop
orb
xchg
inc
jbe
rolb
test
bound
xchg
xor
cmp
mov
pop
push
and
popa
xor
sub
lods
stos
das
pushf
and
fdivs
pop
push
jo
cwtl
push
xor
loope
jecxz
lcall
gs
loop
test
fildll
ds
or
insb
mov
sbbb
xchg
fstl
scas
adc
and
loopne
sub
repz
pop
scas
cmp
out
adc
mov
mov
xchg
or
mov
push
add
push
jle
dec
repnz
and
dec
mov
xchg
js
pushf
inc
add
and
lock
out
in
pusha
cmpsb
push
sbb
pushf
nop
lods
jge
mov
xchg
test
ja
iret
mov
out
add
jns
in
mov
test
jbe
push
iret
mov
sahf
push
inc
inc
mov
jg
repnz
imul
stos
dec
sbb
repnz
push
aaa
inc
mov
mov
aam
xchg
ret
in
dec
mov
pop
loop
rclb
jbe
lds
push
sbb
and
and
mov
push
push
fldenv
lods
mov
and
movl
inc
mov
dec
fisubs
push
pop
aad
stc
adc
xor
jbe
fs
cmpsb
pop
loop
into
mov
stos
stos
sub
or
push
mov
std
loope
and
sbbl
mov
mov
out
jnp
ljmp
lods
jns
xor
jl
repnz
jecxz
cld
cmp
lods
adc
test
dec
dec
mov
rclb
or
std
addr16
test
or
sub
sub
add
push
shll
movsl
inc
jo
cmp
sarl
ud0
lds
push
cmp
xchg
mov
call
cmp
mov
xor
lret
call
lock
jge
rolb
and
in
inc
pop
add
std
fdivrp
add
popl
cmp
sub
add
push
add
ja
cmpsl
pop
add
in
push
push
xor
sub
pop
addr16
add
or
push
ljmp
in
pop
push
ja
pop
fs
dec
clc
fsts
jno
shrb
sahf
xchg
adc
xlat
xor
adc
push
dec
adc
jp
sahf
adc
aad
stc
push
clc
fsub
push
mov
aaa
imul
mov
jmp
aas
push
dec
mov
cs
gs
aam
cmpsl
sub
hlt
or
test
inc
mov
sbb
push
out
sub
mov
sub
loopne
scas
or
mov
sahf
mov
subb
cwtl
aad
jo
outsb
pushf
repnz
filds
cld
inc
or
mov
cmp
clc
cmp
roll
lods
lock
cmp
or
lock
adc
jmp
out
mov
sbb
sub
stc
je
mov
std
mov
les
sub
xchg
hlt
sub
or
fs
and
pop
insb
outsb
pop
lahf
mov
clc
stos
and
das
xor
lea
xchg
xor
icebp
dec
inc
jns
call
xlat
inc
inc
dec
add
repnz
pop
xchg
insb
push
stc
rcl
out
cmp
cs
xchg
dec
rorl
test
cmpsl
js
fldenv
sbb
loopne
std
test
xor
mov
test
cmpsl
sub
iret
pushf
add
sub
cltd
out
sub
mov
sub
insl
sbb
xor
scas
pop
inc
sub
and
jns
mov
test
xchg
addb
imul
rcr
push
jle
xor
push
insl
and
fidivs
mov
hlt
dec
aaa
xchg
fstpt
inc
mov
imul
push
mov
jnp
mov
es
inc
xor
inc
incl
push
cld
xchg
cmp
mov
sub
push
jge
or
les
mov
insl
test
jmp
lock
ficoml
jo
push
jo
jns
mov
mov
xor
in
push
adc
and
fistl
enter
dec
jle
ret
pop
push
dec
rcrl
movsb
mov
inc
adc
xchg
mov
scas
fisubs
fiadds
pop
jae
and
add
dec
xor
ja
pushf
scas
mov
fsubrp
jl
jmp
lret
xor
xor
adc
mov
fldenv
adc
mov
or
xchg
sbb
xchg
lds
sbb
mov
fwait
inc
loope
rcll
sbb
sub
xor
mov
loope
ud1
lret
cld
jecxz
xchg
xchg
stos
xorb
adc
xlat
roll
mov
repnz
fsts
pop
mov
imul
test
xchg
mov
inc
sbb
ljmp
or
lock
mov
cmpsb
jge
jmp
cltd
je
ficomps
mov
xchg
loopne
mov
imul
xor
lcall
inc
dec
inc
cmp
mov
xchg
fwait
movsl
mov
xlat
cld
xchg
dec
and
clc
imul
clc
and
mov
das
rcrl
cmp
mov
add
or
orb
jo
repz
dec
orl
cmpsl
jl
dec
arpl
dec
popa
insb
push
mov
and
mov
scas
test
loope
faddp
stos
sub
push
cmp
outsb
sbb
add
xor
cwtl
in
repz
sbb
addr16
or
push
imul
push
jae
xchg
push
stc
jmp
lods
lret
xchg
aad
ret
mov
aaa
jp
inc
shl
xchg
sub
jg
dec
ja
cmp
dec
dec
xchg
loope
out
jmp
and
adc
insb
jge
and
pop
sbb
sbb
pop
push
adc
repz
pusha
xchg
and
push
jnp
adc
inc
jmp
lahf
add
clc
push
push
pop
xor
sbb
loop
jne
les
and
push
inc
add
inc
shr
rcrl
jb
ljmp
int3
jns
add
icebp
adc
cs
adc
pop
addr16
pop
inc
and
jle
clc
add
call
pop
rcrl
sub
inc
sbb
add
adc
sub
cli
add
ja
fistpl
mov
jecxz
gs
xchg
test
lods
and
or
mov
movsl
into
cltd
dec
aam
pop
mov
add
lds
cmp
xchg
insb
xchg
add
pop
sahf
scas
ror
mov
mov
mov
out
pop
fisttpl
sbb
and
testb
lock
nop
mov
test
inc
imul
rorl
cmp
inc
xor
icebp
cmp
scas
xchg
mov
test
jle
out
xchg
repz
sbb
inc
xchg
sbb
adc
in
loopne
mov
xchg
or
fwait
pusha
jl
mov
int3
outsb
loop
leave
push
sub
mov
decb
arpl
pop
xchg
push
enter
pop
das
stos
leave
jb
and
sub
xor
and
in
cltd
rorb
test
mov
pop
stos
dec
cmp
cli
lret
out
inc
rolb
pop
cli
mov
jo
mov
jo
push
inc
mov
scas
dec
sub
leave
push
mov
fdivs
jnp
cmp
fwait
and
bound
loop
rcrb
clc
in
rcrb
mov
je
cmp
sbb
jecxz
aaa
and
sub
imull
sbb
xchg
pop
inc
repnz
test
mov
sub
xchg
bnd
in
iret
das
jge
or
and
or
out
push
add
les
mov
mov
inc
or
inc
sub
jge
arpl
dec
mov
popf
roll
add
mov
xor
mov
out
cmpsl
fstpl
mov
sub
mov
test
jg
cmp
mov
push
rclb
pop
arpl
cld
insl
xor
cld
mov
test
jne
lds
idiv
adc
xor
jo
mov
insb
mov
repz
mull
push
int3
dec
fidivrl
pop
pop
int3
ret
pop
out
push
js
sahf
stos
pusha
xchg
call
sahf
xchg
scas
hlt
pop
cmp
pop
dec
mulb
fistpl
mov
stos
mov
and
stos
mov
addr16
repnz
andb
out
or
clc
mov
add
or
adc
scas
jb
out
dec
ja
rcr
inc
cmp
adc
ss
cmpsl
xor
sub
pop
mov
cmp
adc
test
es
aad
int3
adc
js
and
sbbb
mov
mov
mov
and
sbb
shll
fcoml
and
sub
push
data16
or
xorb
cmp
dec
test
bound
fdiv
sbb
mov
fwait
outsl
pop
dec
dec
cs
and
arpl
push
fidivs
jnp
mov
jmp
hlt
xchg
mov
mov
int3
fcompl
jb
cmpsl
adc
add
test
and
push
lock
or
sub
call
xchg
gs
arpl
cmc
enter
mov
push
outsl
int3
sbb
xchg
xchg
movsb
push
jle
xor
xchg
pop
jp
and
lahf
inc
lcall
popa
je
out
mov
add
jns
xor
stos
adc
jmp
and
dec
xor
mov
jg
int3
add
xchg
dec
cmp
fcmove
movsb
fidivl
xchg
subl
outsb
cld
pop
aad
fstpl
scas
mov
dec
xchg
mov
mulb
push
xlat
xchg
xchg
sbb
mov
sahf
mov
xchg
stc
and
and
mov
daa
cmp
in
push
mov
ja
imul
movsb
shl
cmp
mov
pop
push
or
daa
and
inc
rcll
inc
add
lret
std
icebp
inc
movsb
or
push
out
fdivl
push
les
ja
mov
cmp
mul
xchg
xor
push
popa
inc
mov
cmp
ret
aam
test
fnsave
mov
test
fcom
movsl
sbb
add
mov
cmp
and
out
add
jmp
xchg
cmpb
push
push
push
icebp
das
loop
lcall
xchg
xchg
push
popf
cli
out
dec
cs
repz
inc
lea
into
mov
arpl
ljmp
pop
adc
sti
adc
and
xchg
jae
pop
xor
scas
sbb
xor
test
cmovno
stos
dec
mov
mov
lcall
sbb
or
loopne
xor
jno
push
leave
mov
lea
jno
std
mov
mov
jl
and
mov
jmp
inc
push
mov
xchg
push
mov
pop
pop
sbb
out
fistps
lods
jno
das
leave
lods
fstps
cli
mov
add
push
mov
test
insb
jmp
mov
and
insb
scas
dec
push
daa
dec
ja
sbb
push
push
inc
mov
jecxz
es
cs
mov
ljmp
hlt
clc
clc
push
jae
sub
pop
scas
or
movsb
cltd
nop
xchg
cmp
imulb
or
fsubs
aam
stc
cld
inc
imul
scas
sti
cmpsb
xor
mov
or
cmpsl
mov
xchg
mov
sub
popf
inc
xor
into
repnz
test
mov
xchg
xchg
daa
xlat
sbb
cmp
sub
inc
inc
mov
js
sbb
pusha
mov
or
stos
lea
imul
push
js
insb
mov
enter
stos
and
xor
ret
sub
test
xchg
mov
pop
aam
and
loop
ret
or
leave
sbb
mov
mov
out
dec
mov
pop
and
mov
pop
repnz
cmp
andl
mov
jg
out
inc
lods
mov
and
stc
push
dec
ljmp
pop
fbld
push
mov
std
loope
idivb
push
aam
pop
mov
es
sbb
or
pop
pop
or
loop
ficomps
mov
and
xlat
mov
out
add
lret
in
lret
out
sbb
ficompl
js
filds
push
dec
push
add
cmp
in
sub
adc
cli
fdivl
in
imul
cmpsl
enter
xor
cmp
adc
inc
ljmp
sub
out
loop
stc
sub
outsb
push
pop
sbb
sti
mov
frstor
jnp
or
cmpsb
lds
dec
mov
mov
out
imul
test
jae
inc
cmp
shl
xor
fiaddl
push
pop
aam
sbb
gs
popa
xor
and
imul
jl
scas
mov
xlat
pop
cwtl
sub
mov
jl
cmp
pop
cmp
incb
pop
sub
xchg
add
aas
cmp
and
adc
add
sahf
and
xchg
nop
repnz
mov
adc
mov
and
cld
pop
lods
inc
push
fdivr
jnp
addr16
sub
mov
cmpsb
mov
lods
pop
ffreep
fcmovnu
shlb
lods
adc
mov
pop
push
shll
out
and
xor
pop
ret
or
loopne
sti
repnz
add
adc
shrb
mov
imul
out
xor
mov
xor
cmp
outsl
pop
arpl
adc
xchg
scas
mov
ds
lods
outsl
xchg
movsb
testl
ds
mov
pushaw
mov
ret
add
sbb
or
mov
and
ficompl
bound
pushf
mov
xchg
dec
mov
jg
shr
adc
es
pop
cltd
push
sbb
lahf
or
push
in
xor
rcll
or
cmpsb
decb
test
dec
insb
loope
cltd
fldt
scas
sarb
xchg
adc
push
mov
arpl
push
cmpsb
sti
popf
sbb
mov
scas
inc
jb
int
fdivrp
dec
and
add
mov
inc
xchg
sarl
movsb
and
add
test
les
out
loop
test
add
inc
mov
ret
xchg
and
xor
stc
fsub
popa
test
lods
and
fiadds
dec
pop
mov
cmp
dec
pop
cli
xor
sub
mov
aam
and
test
xchg
ljmp
xor
inc
pop
jl
mov
sbb
mov
cli
pop
xor
and
sbb
clc
or
out
pop
cld
mov
sbb
push
int3
movsb
push
pop
add
push
outsl
divb
and
add
xor
aad
or
xor
aad
mov
fucom
lea
jnp
sbb
sbbl
pop
iret
mov
fcmovnbe
inc
cmpsl
jbe
jge
lock
mov
mov
sbb
sub
out
jl
mov
sbb
jbe
inc
jnp
repz
adc
pop
pop
push
sbb
sub
out
sbb
pop
out
out
fdivl
fiaddl
pop
lods
inc
inc
lahf
dec
out
cmp
adcb
push
sub
push
ss
fnstenv
in
inc
push
in
cmp
pop
mov
je
daa
adc
ja
lcall
cltd
out
jmp
add
cmp
movsb
sti
jb
add
outsb
rclb
es
out
aam
mov
mov
mov
dec
js
test
add
addr16
scas
jge
adc
add
lods
imul
jb
out
test
negl
sub
popa
popa
pop
xchg
cmp
test
dec
push
andb
lret
dec
ja
fisubs
cwtl
dec
iret
push
push
insl
imul
sarb
add
push
jmp
ja
add
push
mov
test
scas
idivb
inc
lods
mov
arpl
fdivr
mov
jno
fisubl
lds
int
testl
mov
jg
and
ds
lock
mov
andb
cld
je
nop
fadds
push
out
inc
xor
addl
inc
pop
push
insl
lock
fbstp
pop
outsl
stc
sub
cmc
and
insl
sub
stos
cld
stc
aaa
and
lock
xchg
add
jno
out
xor
mov
mov
xchg
xor
lret
push
and
add
mov
xor
add
inc
aas
frstor
and
das
iret
xchg
pusha
dec
add
jp
jb
pop
sub
cmp
out
ret
jbe
push
sub
hlt
mov
inc
sub
cmp
xor
lret
dec
ret
test
je
and
pop
add
push
or
nop
shlb
es
rolb
sbb
jecxz
jbe
cli
rorl
and
add
xor
into
lods
jecxz
ret
mov
xchg
stos
hlt
cmp
dec
push
cmp
dec
daa
ror
dec
sbb
add
das
jbe
stc
mov
cli
cmp
pop
or
insl
loope
cld
push
mov
ss
and
hlt
fdivrs
mov
push
out
mov
xchg
add
inc
or
and
dec
or
data16
int3
mov
bound
inc
push
pop
cmp
jmp
mov
je
ficomps
mov
mov
ds
xor
mov
dec
je
mov
in
cld
xabort
movzwl
jne
dec
dec
xchg
frstor
imul
sarb
pop
lock
ret
cmp
std
mov
push
fcoms
clc
inc
in
test
xor
jmp
mov
negb
mov
cmp
stos
out
lds
sub
cmpsb
filds
lds
cmp
loop
sarl
adcl
pop
ljmp
mov
divl
clc
mov
or
mov
hlt
mov
inc
subb
fmuls
rclb
or
test
inc
pop
jmp
rcrb
dec
pop
mov
das
insb
fs
xor
add
cwtl
add
loop
sub
iret
push
or
xor
mov
out
pop
adc
lahf
xchg
data16
ja
mov
pop
pop
stos
xlat
xchg
mov
testl
lcall
rcrl
jmp
notl
push
pop
and
xor
sbb
loope
adc
stc
aaa
jae
cs
mov
cmp
stos
int3
pushf
push
adc
pop
inc
inc
cmpsb
or
mov
mov
xchg
jno
inc
dec
sub
daa
aaa
jl
xchg
sahf
scas
aas
jne
add
loopne
movsb
test
mov
pushf
and
mov
or
rcrl
xor
enter
push
loop
mov
xchg
js
pop
or
nop
lcall
xchg
dec
xor
mov
in
and
mov
xchg
ficoml
mov
push
leave
jne
mov
mov
test
xchg
mov
sahf
pop
dec
jo
push
mov
sbb
fcmovnb
lret
inc
ret
mov
push
cmp
lods
inc
push
push
sub
fwait
iret
mov
jmp
int3
mov
mov
add
daa
and
std
int
or
decl
cmpsl
fistps
add
inc
add
push
scas
nop
pop
jns
aaa
and
mov
jmp
cltd
xchg
out
sbb
xchg
inc
xchg
mov
rorl
jl
pop
dec
mov
and
push
dec
sub
iret
fimull
addr16
rclb
mov
lods
jecxz
fsub
daa
xor
jmp
clc
mov
pop
jp
cmp
fsubs
shlb
push
clc
mov
shlb
add
pushf
sub
xor
pop
mov
cld
add
jmp
pop
jge
out
push
dec
in
push
xor
les
dec
push
in
imul
cmpsb
mov
je
fdiv
js
stc
mov
and
je
jb
fcompl
lret
sbb
js
add
je
imul
or
fmulp
insb
inc
enter
and
ja
cs
mov
popf
pop
jl
iret
sbb
mov
xor
adcb
fs
scas
movsb
inc
inc
mov
or
aas
roll
xchg
sti
lods
imul
dec
pop
test
push
inc
xchg
mov
jg
add
rcrl
xor
inc
out
daa
mov
mov
adcb
xchg
xchg
ret
sub
loopne
xor
mov
pop
loope
or
test
ret
leave
stos
inc
jmp
test
mov
add
ret
out
in
xchg
nop
jecxz
mov
xchg
sarl
xchg
inc
leave
aaa
mov
push
mov
out
shlb
dec
movsl
xor
mov
or
leave
inc
inc
sbb
xor
popa
xchg
push
fldenv
imul
push
cmp
push
sbb
pop
dec
mov
dec
mov
fidivl
into
pop
push
jle
das
xor
bound
mov
repnz
sahf
sub
xor
xchg
xchg
enter
ret
push
add
lcall
out
stc
add
push
mov
aad
jnp
cmp
add
dec
xchg
and
popf
mov
in
ficoms
mov
mov
in
jne
jo
sbb
call
jp
pop
frstor
decl
lock
jbe
out
or
mov
jnp
fs
icebp
jne
in
push
aas
mov
sub
aas
pushf
ljmp
pop
xchg
incl
mov
jbe
push
jo
adc
jbe
sub
pop
packssdw
inc
pop
mov
jne
negb
verw
pop
xchg
leave
fwait
imulb
mov
das
stc
pop
aad
sbb
sbb
std
and
and
fxch
cmp
cmp
inc
negl
out
mov
fwait
pop
xchg
sbb
dec
in
in
jo
cmp
push
pushf
leave
out
inc
ss
out
stos
adc
cli
in
ror
in
pop
scas
dec
fstpt
daa
hlt
stos
repnz
cmpsl
lea
ret
push
inc
repz
or
dec
sub
cmp
mov
movsb
jo
sub
or
shlb
jb
iret
jp
xchg
adc
dec
dec
adc
lcall
cs
pop
int
xor
in
pop
cmpsb
in
pusha
pusha
cmp
mov
leave
mov
or
mov
outsl
jno
div
push
push
mov
aad
addr16
fcmovne
out
ljmp
faddp
std
ds
mov
mov
lds
sbb
inc
xchg
pushf
push
pop
mov
in
mov
lahf
or
inc
or
or
xor
int3
push
imul
mov
mov
ljmp
fsub
push
jmp
in
aaa
xchg
jnp
xchg
push
in
mov
test
cmpsl
push
fnstcw
roll
aad
jo
neg
pop
mov
jp
sub
mov
add
push
ds
pop
and
nop
cmpsl
push
ja
adc
push
shrb
pop
xor
jmp
lods
stos
mov
fidivl
mov
lgs
sub
popl
mov
repz
fidivrs
hlt
outsb
mov
or
push
xor
movsl
push
cmp
mov
mov
cli
popf
outsl
rcrb
fadds
and
lret
cmp
ja
out
mov
imul
push
mov
push
sbb
pop
or
and
mov
adc
rol
inc
shl
sahf
rcrb
imul
mov
and
dec
shrl
xchg
repz
cmp
movsb
outsl
aad
pop
insl
or
hlt
int3
ds
xchg
xlat
cmc
and
mov
sti
push
sti
fcoml
enter
adc
adc
cmp
pop
cmpsl
scas
loope
pop
js
pop
es
ret
sub
or
sbb
data16
push
addr16
sub
inc
nop
cli
rcrb
in
ficoms
push
push
out
fwait
lods
fwait
pop
bound
add
leave
repnz
dec
std
aad
jae
or
adc
xchg
push
insl
arpl
ficoml
adc
fcompl
gs
xor
test
jae
push
addl
inc
cli
lea
in
cmpsb
push
jge
mov
fldenv
into
cmpsb
sub
adc
inc
sbb
shrb
xchg
dec
jle
push
sub
jnp
arpl
dec
fucomp
test
outsl
aaa
jbe
inc
out
stos
push
jmp
fidivs
pop
adc
xor
pop
and
dec
mov
jge
inc
lock
sub
inc
repnz
or
jmp
and
jecxz
or
sti
scas
xchg
or
cmp
xchg
repnz
lcall
ljmp
mov
lea
outsb
inc
xchg
push
cwtl
mov
jmp
sub
orl
test
mov
xchg
test
je
pop
mov
rorb
lahf
mov
xchg
roll
cld
cwtl
je
inc
add
leave
push
pop
ljmp
ss
xchg
pop
and
adc
pop
fisttpl
mov
test
cli
dec
inc
and
in
ror
cld
jecxz
js
movsb
mov
aas
movsl
sbb
lock
add
mov
out
pop
iret
or
jle
or
fistpll
push
lods
mov
jmp
xor
sub
jae
dec
repnz
xchg
mov
idiv
leave
in
nop
mov
movsb
push
insl
mov
cmpsl
and
movsl
in
cltd
mov
jmp
mov
test
inc
je
lret
add
pop
push
mov
std
jb
sub
negl
in
popa
and
add
pop
dec
into
lock
or
mov
aaa
and
insb
outsl
push
pop
inc
pop
adcl
lahf
xrelease
fbld
mov
shl
dec
jg
sub
mov
mov
hlt
push
push
fdivl
mov
pop
add
jp
push
aam
fisttps
ja
daa
loope
sbb
lret
mov
mov
xchg
test
sbb
inc
cmp
inc
in
leave
xchg
imul
push
fdivrl
mov
movb
and
btc
xor
pop
pop
pop
cld
fwait
ljmp
cmp
test
dec
clc
and
mov
rol
inc
daa
scas
inc
jle
add
daa
jp
jecxz
xchg
scas
mov
pusha
cmpsl
inc
aam
mov
in
js
fdivs
fwait
xchg
cmpsb
in
daa
out
pushf
and
dec
in
cli
xorb
cwtl
loop
cmp
lock
out
loope
jle
lret
lcall
inc
mov
repnz
stos
add
adc
cmpsl
lods
movsb
pushf
or
jge
mov
mov
jmp
cmp
aas
jb
xor
lea
xor
pop
gs
pop
mov
dec
dec
cmp
push
out
mov
sti
xchg
xchg
test
ds
xlat
in
jg
push
or
pop
fcomps
fldenv
js
arpl
add
add
xchg
fs
ja
test
cltd
jecxz
or
and
sub
in
or
jb
scas
fidivrs
pop
je
jns
ss
stc
out
mov
lds
sbb
xchg
xchg
lcall
mov
mov
cmp
mov
movsl
mov
jecxz
repz
xlat
sti
fstp
or
add
pop
js
sbb
mov
mov
mov
dec
fcomi
mov
push
mov
sti
and
pop
ret
xor
sbb
mov
fadds
sarb
insl
rolb
mov
out
adcb
mov
fwait
rolb
in
sub
filds
or
push
and
ljmp
xor
mov
out
jg
jmp
jbe
daa
dec
mov
in
and
loope
adc
aam
cmp
rorl
pop
xchg
ret
push
push
imul
shlb
decb
lahf
xor
dec
or
lret
xor
xor
cmp
fbld
add
dec
mov
jmp
mov
mov
xchg
test
jge
push
fdivl
or
mov
jbe
and
adcl
lds
subb
dec
and
adc
jb
out
scas
xchg
push
shll
pop
and
mov
jl
scas
sbb
dec
pop
or
jmp
xchg
jae
mov
mov
mov
in
mov
cwtl
call
jg
fcomip
mov
jo
fs
test
cmp
inc
adc
dec
cs
inc
adc
xor
or
fstl
test
cli
or
loop,pn
and
lds
outsl
or
and
cmp
jecxz
aas
mov
fldcw
shl
push
cmpsb
movsl
lock
push
ljmp
mov
cwtl
cmp
mov
fwait
fsubrp
aas
mov
mov
xchg
int
adc
loope
stos
movsb
jns
rclb
xchg
cli
jecxz
call
and
out
adc
insl
jo
dec
xor
aam
lock
mov
arpl
fsts
adc
mov
mov
sub
shll
dec
pop
imulb
movb
mov
rcrl
addr16
jl
mov
arpl
testl
in
jbe
pop
mull
fists
and
lock
bound
test
adc
int
iret
cmp
inc
rcrb
jns
cmp
xlat
mov
xchg
icebp
pushl
and
dec
adc
cmpsb
lahf
in
repnz
iret
xchg
mov
gs
lock
fstpt
js
pop
shlb
xchg
add
sbbl
cmp
fcomps
outsl
pop
sub
sbb
in
mov
sti
stc
nop
lahf
dec
dec
dec
mov
lahf
int
jp
or
mov
push
mov
and
in
in
outsl
pop
jmp
push
or
push
imul
cld
pop
mov
jno
jo
lock
int3
sbb
rorb
push
xchg
rol
jle
push
cmp
adc
scas
and
popf
loopne
pop
dec
pusha
pop
xchg
ret
ret
inc
lea
sbb
xor
dec
rolb
jae
rolb
jl
mov
ds
fwait
and
sub
jecxz
out
or
push
cmp
xchg
xor
imul
mov
jg
pop
and
in
insb
and
fnsave
mov
movsl
imul
and
sub
test
jge
adc
xchg
cmp
mov
pop
insb
call
dec
cwtl
aaa
aaa
push
dec
stos
jnp
cmpsb
imul
out
stos
xlat
jecxz
int
jo
push
loope
ficoml
mov
neg
ds
xchg
mov
scas
adc
xor
aaa
call
mov
mov
sub
lahf
sbb
adc
jle
dec
mov
mov
fdivp
or
add
in
push
push
fstpl
or
insl
xor
sbb
cmpsl
mov
xor
mov
mov
ss
loopne
mov
mov
or
mov
adc
scas
lds
cmpsb
sub
cmp
inc
shl
cmp
mov
les
dec
sar
lea
sti
or
test
adc
repz
notb
push
or
jp
in
test
add
mov
ror
jge
sbb
xor
aas
mov
nopl
fldt
stc
cmpsl
leave
mov
xchg
sub
cmp
sbb
movsb
imul
adc
leave
pop
lock
mov
inc
rclb
loope
and
inc
insl
bound
call
ja
dec
add
movsl
or
adc
stc
pop
in
shll
insl
dec
popf
cmp
js
adc
or
or
inc
cmp
pop
cwtl
mov
adcb
mov
mov
pop
out
pop
fcomps
lds
jae
mov
stos
or
mov
mov
cltd
repnz
cmp
imul
inc
cmp
sbb
sub
mov
js
or
jo
xchg
das
int
inc
lods
out
adc
sub
sub
add
rolb
xchg
lcall
inc
and
dec
and
sbb
cld
or
or
sti
and
xor
jmp
pop
and
popa
or
cmp
sbb
ss
dec
jno
cltd
jle
lock
lcall
sahf
paddq
push
pop
ja
mov
in
sbbl
jmp
fcoml
cli
mov
mov
iret
or
mov
mov
shlb
mov
cld
mov
mov
mov
sbb
push
and
dec
jle
rorb
cltd
cmpsl
adc
adc
add
xrelease
push
xor
add
out
and
mov
push
cmp
inc
stc
out
in
mov
flds
jl
jl
insb
dec
aas
and
mov
loopne
pop
enter
or
test
pop
out
mov
int
pusha
out
mov
add
jne
push
sbb
jns
dec
outsb
test
xchg
sub
mov
dec
mov
lock
sbb
cmp
sub
pop
and
sbb
stos
and
jbe
js
flds
addr16
nop
sti
pop
dec
adc
std
sub
and
xor
int3
ret
pop
jge
xchg
push
mov
pop
addr16
mov
outsl
fwait
cs
ss
fbld
push
test
lods
ja
cmpsb
addr16
pop
mov
rclb
movsl
fnstenv
dec
clc
jne
cmp
jbe
mov
xchg
add
mov
mov
mov
sub
jbe
mov
stos
cmp
rcll
cmc
adc
bound
pusha
andl
cwtl
das
outsb
popf
or
hlt
stc
ja
add
inc
scas
fs
in
add
out
xor
mov
mov
cltd
jno
mov
arpl
jns
xchg
adc
cmp
in
cmp
fucomi
push
inc
aam
jae
adc
nop
popf
fldcw
cmpl
popf
sub
in
pop
push
or
xchg
inc
add
jp
push
push
mov
ja
loop
scas
les
movsb
mov
sbbb
add
push
idiv
mov
ds
iret
loop
pop
sub
loopne
loopne
or
jg
and
mov
ret
add
jp
xchg
ljmp
fcoml
mov
xchg
icebp
lds
add
imul
mov
daa
movsb
mov
xchg
push
add
push
push
ja
cmp
mov
and
pop
push
dec
icebp
xor
jae
push
and
lahf
jmp
lahf
into
call
repz
add
xor
push
test
jno
cmp
jns
imul
inc
cmp
and
dec
sub
pop
push
inc
cmp
outsb
rcrl
mov
mov
jae
mov
lea
mov
cmpsb
fnstenv
fwait
inc
test
enter
in
mov
sbb
mov
stos
pop
out
in
rorl
rep
das
andb
rcrb
mov
xchg
add
in
xor
mov
shl
jnp
xor
mov
shll
lcall
in
push
push
leave
fidivrl
je
test
dec
sub
xchg
xchg
imul
int3
test
cmp
ret
jge
push
sbb
lret
add
outsb
movsl
pop
pop
clc
fldenv
nop
and
pushl
cmp
add
push
add
adc
shr
sahf
pop
scas
ss
outsl
pop
and
in
clc
shlb
stos
mov
repz
shr
xchg
push
stos
mov
push
fcmove
lret
push
add
or
mov
dec
lea
movsl
push
pop
or
sub
test
or
popf
andl
aas
dec
aam
jg
cli
gs
fsts
mov
bound
shrl
add
inc
or
mov
fidivs
jno
jne
dec
loop
orl
sub
enter
dec
mov
shll
dec
xchg
jle
and
mov
out
lret
sub
jns
mov
lock
jbe
int
pop
nop
repnz
cmp
mov
push
sbb
aad
mov
lds
push
outsl
push
fistl
push
test
dec
dec
lret
cmp
sahf
inc
inc
rorb
arpl
in
loope
lea
lret
dec
mov
xchg
imul
fidivl
cltd
pop
inc
pop
les
xor
leave
mov
data16
rorl
aaa
sbb
ljmp
or
push
test
subl
adc
rcr
fnstcw
pop
lret
jl
jp
test
mov
popa
or
push
std
cmp
jnp
out
dec
adc
cmp
add
shrd
and
lcall
sub
ffreep
adc
loopne
cli
jno
ss
mov
jmp
stos
add
dec
mov
mov
xor
jne
lock
fdivrs
repz
mov
adc
mov
sub
lcall
jns
or
sbb
test
cmpsb
mov
aas
xor
loope
pop
pop
dec
inc
or
lods
or
cmpsb
add
cmp
mov
stos
push
in
scas
movsb
or
fcomip
insl
mov
cli
and
movsl
pop
int
push
pop
orb
or
bound
xor
jbe
out
fisubrl
iret
out
pop
popf
cmc
sbbb
and
and
xchg
add
nop
add
je
data16
mov
imul
mov
in
popf
les
add
adc
sarl
repnz
out
icebp
fsubrs
mov
pop
lcall
sar
xlat
and
xchg
jne
enter
insb
xchg
insl
scas
xor
push
daa
dec
cmpsl
loop
xor
lock
std
loop
test
outsl
mov
add
jae
shl
imul
scas
lcall
divl
enter
inc
sub
sbb
mov
push
neg
mov
cmp
jle
mov
fadds
add
inc
pop
jbe
mov
mov
movsb
jo
sub
inc
mov
mov
cs
loopne
or
mov
shl
xchg
push
push
daa
sub
movsb
int
jo
xchg
andb
xchg
pop
cmpsb
scas
add
hlt
aaa
sub
sahf
cmpsb
sub
jno
pop
sti
stos
sbb
loopne
fimuls
call
push
push
negl
aad
pop
nop
movsb
add
lret
jnp
notb
out
push
xor
and
outsl
aam
xor
mov
add
mov
dec
sub
mov
adc
mov
jo
push
mov
push
fbstp
mov
mov
mov
mov
ja
mov
lods
leave
pop
jl
mov
inc
jb
mov
and
cmpsl
sbb
or
xor
lahf
cmp
cli
cmc
shll
push
pop
out
push
cmpsl
xchg
aad
cmpsb
jecxz
aam
mov
inc
xchg
sbbl
cmpxchg
leave
and
jmp
mov
and
imul
mov
inc
mov
xchg
imull
pop
sbb
addr16
in
popf
stos
jmp
faddp
cli
xor
push
out
add
rcrl
xchg
fsub
sbb
cli
push
and
or
insl
dec
into
fistpll
addl
adc
cmp
lock
lock
in
dec
xchg
enter
or
jnp
dec
xor
add
jb
sub
inc
mov
add
adc
roll
push
push
aas
gs
je,pt
add
push
test
mov
add
insl
lods
pushf
inc
dec
out
xchg
and
mov
mov
add
cltd
aam
cmp
mov
fwait
jl
incl
ja
adcl
fstl
mov
xchg
dec
xlat
aam
jns
inc
ljmp
mov
dec
ljmp
ja
sarb
xchg
dec
mov
xchg
sahf
or
cmp
ffree
sahf
cld
lret
push
dec
pop
jb
mov
fistpl
addr16
bnd
jle
repz
cmc
xor
insl
movsl
and
fisttpl
cmp
std
fiadds
push
movsl
xchg
cs
enter
cs
fcom
jle
add
std
popa
fwait
jno
jp
fisubrl
add
test
popf
into
cmpsl
xchg
inc
pop
loopne
xor
sbb
cltd
jge
out
enter
push
fwait
sub
xchg
sbb
xchg
pop
inc
and
inc
adc
icebp
stc
adcl
in
cmpsl
out
into
xchg
push
lahf
movsl
std
cmovl
fimuls
das
or
insb
dec
xor
enter
stos
sbb
dec
xor
js
cmp
inc
xor
shl
add
mov
mov
pop
lock
cmp
mov
fld
gs
xlat
lock
sub
imul
ret
cli
addr16
or
mov
or
or
jns
testb
sub
jne
out
jecxz
testb
or
aas
in
jne
mov
out
inc
lcall
shlb
jae
inc
out
xor
fldenv
shll
inc
jnp
jnp
sbb
mov
pop
pushf
dec
adc
adc
dec
jle
std
cmpsl
pop
or
push
pop
insl
jo
xchg
cmp
push
out
lahf
dec
decl
sub
sbb
inc
aas
loope
std
lea
jne
scas
sub
sbb
icebp
aam
mov
arpl
push
and
cmpl
ror
cld
dec
lock
jl
dec
mov
shrb
in
pop
repnz
and
mov
and
sahf
jno
push
mov
mov
push
jnp
and
std
std
imul
add
mov
stc
bound
sbb
push
xchg
fwait
arpl
jo
pop
mov
or
and
mov
fs
hlt
push
and
push
loopne
xor
cmp
inc
ficoml
sbb
ret
pop
mov
mov
outsl
push
test
stc
orb
call
sub
into
xchg
int3
jl
cwtl
cmp
hlt
mov
mov
imul
sub
push
sti
jmp
pop
jo
data16
nop
loopne
dec
sbb
pop
sbb
xor
adc
addb
icebp
test
pushf
dec
outsb
cmp
or
or
pop
test
push
addr16
mov
lret
xor
mov
inc
aam
mov
dec
jp
les
dec
xor
int3
sbb
daa
dec
push
movsl
dec
ret
ds
popa
rcl
outsb
shrb
jmp
pop
cmpl
repnz
sbb
sbb
dec
movsl
lret
aam
sub
popa
mov
dec
cld
aas
lods
mov
sub
mov
aam
xchg
lock
pop
bound
pop
pop
mov
pop
or
jnp
pop
inc
pop
or
dec
or
push
popf
adc
or
pop
lods
incb
add
pop
jnp
lea
iret
outsl
frstor
rcrb
bound
call
push
daa
xor
xchg
xlat
mov
shll
je
outsb
xchg
adc
test
stos
sbb
pushf
mov
adc
mov
mov
test
std
jne
xlat
pop
out
cmp
add
inc
or
cmp
add
in
or
xchg
jmp
lcall
fcomps
fldl
repnz
test
xor
jno
cmpb
out
lds
daa
jnp
cli
cmpsb
orl
adc
push
pop
fists
xorl
mov
loop
xchg
mov
cmp
in
addr16
pop
aaa
neg
mov
push
mov
fnstenv
cld
mov
into
inc
pushf
jmp
stc
cmp
inc
xor
jp
cld
cwtl
or
scas
roll
jp
or
ret
mov
push
cmp
jnp
xor
inc
icebp
dec
test
enter
xchg
push
fists
add
imul
lret
mov
inc
mov
int3
mov
scas
mov
hlt
lods
jmp
loop
add
les
mov
jecxz
int3
inc
mov
mov
adc
rorl
add
pop
add
xchg
push
ja
outsb
jne
jp
cmp
xor
inc
loop
sub
dec
add
mov
imul
std
sbb
inc
into
inc
mov
adc
test
int3
push
stc
xchg
sub
scas
shlb
int3
in
cmp
xlat
popf
pop
pushaw
and
lock
lods
jbe
out
or
adc
daa
jl
daa
push
outsb
inc
adc
jle
aam
mov
aam
ds
shrb
sbb
fsts
sti
xor
dec
inc
sub
jo
sub
mov
aad
jno
push
lcall
sahf
into
sti
push
dec
sti
mov
popf
clc
jo
cmc
adc
push
xlat
jecxz
ret
push
cmp
xchg
inc
mov
je
imul
mov
xchg
lods
fiadds
and
lret
dec
add
jmp
stos
int3
mov
outsl
insl
std
adc
add
mov
sti
lods
sub
push
and
pop
pop
sbb
lcall
pop
cmp
xchg
jae
in
shll
imul
mov
pushaw
scas
sbb
pop
fldcw
jge
outsl
inc
mov
insb
ss
mov
sub
outsb
mov
idiv
sbb
xchg
sarb
movsl
xchg
cs
push
shrb
pop
push
xchg
or
pop
out
jg
subl
ljmp
xor
add
jae
push
sti
cmp
pusha
fisubrl
sub
aas
hlt
mov
push
int
insb
cld
call
cmp
inc
leave
xor
jb
filds
out
lret
nop
mov
cmp
adc
sbb
jmp
outsl
adc
cmp
dec
nop
stos
scas
adc
insb
and
outsl
pop
popa
clc
insb
js
mov
daa
sub
xlat
cli
jnp
dec
push
cli
jno
out
popa
sbb
pusha
es
testb
jle
sbb
xchg
jmp
stc
ficompl
and
or
lods
rclb
jns
js
push
int3
push
icebp
in
movsb
cmp
nop
mov
inc
add
sub
xchg
or
les
rolb
es
dec
or
push
add
loopne
leave
dec
mov
dec
add
sahf
outsl
incl
sahf
xor
dec
pop
movsl
dec
cmpsl
pop
mov
aas
and
xchg
push
jo
cmc
popa
movsl
mov
sbb
xchg
mulb
fxch
in
sbb
dec
js
popf
test
cltd
and
fmul
ret
jmp
adc
pusha
sbb
dec
fucomi
hlt
scas
scas
daa
inc
testb
dec
cld
pop
lods
fldcw
push
mov
cmpsb
or
and
jne
das
rolb
xor
pop
inc
fldcw
les
sub
out
inc
jp
jecxz
popa
mov
cwtl
or
data16
arpl
push
sbb
push
pop
jno
push
push
outsl
ds
enter
push
stos
incb
push
or
mov
xchg
cmp
cmpsb
add
pop
add
sub
nop
cmp
fmuls
pop
sub
pop
aam
fsubs
dec
jle
mov
test
adc
or
lret
jne
stos
pop
movsl
mov
pop
and
pop
add
js
sub
ret
jne
push
xchg
in
dec
sub
pop
add
out
jae
test
in
jmp
cmp
notb
inc
daa
cmc
adc
push
inc
mov
push
sub
dec
pop
arpl
mov
mov
and
cmovg
sbb
sbb
cmp
int
push
fcmovnbe
es
dec
dec
jecxz
push
int
lret
adc
pusha
int3
adc
mov
scas
add
cmp
xchg
or
loopne
fbld
dec
mov
outsl
neg
jmp
insl
nopl
or
das
mov
jnp
sar
jge
inc
inc
jg
adc
mov
addb
bound
sub
repz
mov
fisubrl
out
jbe
push
icebp
js
adc
and
add
das
cli
push
aaa
pop
pop
loop
jmp
sub
jns
arpl
inc
rolb
leave
or
inc
je
outsb
jns
movsl
sub
dec
mov
or
daa
lock
inc
enter
bound
imul
mov
adc
fdivrs
xchg
adc
das
pushf
filds
inc
pop
arpl
inc
mov
ja
mov
cmpsl
jmp
popl
or
jmp
es
in
push
repz
gs
filds
stc
xchg
push
les
clc
test
adc
ds
call
les
push
and
and
bound
js
xchg
mov
in
jecxz
lock
sarl
cmp
fwait
mov
jge
das
adc
addr16
xlat
jle
cmp
add
fimuls
cmc
mov
out
shl
jns
xor
mov
or
mov
test
push
fwait
dec
pop
and
sbb
jo
cmp
or
outsl
pop
adc
ret
loope
lock
imul
adc
jecxz
pop
movsl
dec
into
push
lods
inc
rcr
clc
inc
xchg
mov
cmpsb
into
stos
pop
sbb
inc
int3
loope,pt
scas
andb
push
sub
dec
outsl
or
repnz
dec
subl
nop
adc
xchg
outsb
bound
nop
mov
mov
mov
daa
mov
dec
adc
imul
fldt
inc
int
add
insl
mov
add
pop
adc
fiadds
xchg
loope
mov
xchg
pop
jg
sahf
fwait
lods
adc
inc
mov
sbb
cmpsb
sub
mov
xor
mov
mov
add
dec
aaa
add
cmc
add
loope
jnp
out
lret
xchg
in
lods
sub
jle
mov
jmp
sub
adc
xor
xor
int
add
int
loop
fnstenv
pop
outsl
and
push
inc
adc
xchg
xor
push
arpl
bound
jb
ljmp
inc
fimuls
scas
repnz
fs
mov
inc
xchg
scas
dec
mov
dec
fisttpll
jg
pop
pop
inc
sbb
in
daa
dec
or
inc
inc
es
cli
insb
divb
mov
mov
pop
dec
push
fiadds
xchg
add
jb
and
cmp
jecxz
xor
and
cmpb
mov
loopne
out
dec
outsb
dec
mov
and
xchg
push
stos
fstpt
inc
pop
push
and
xchg
adc
mov
loope
jle
loopne
xor
mov
mov
mov
xorl
mov
add
mov
dec
sub
or
xor
cmpsb
adc
xchg
push
sbb
sbb
sbb
call
leave
xchg
mov
jo
sahf
inc
leave
addb
sbb
jl
push
jnp
subb
leave
push
adc
jmp
pushl
xchg
or
hlt
push
dec
in
pop
xor
stos
cmp
iret
es
popf
and
test
jmp
sbb
push
xor
add
pop
cld
pop
fisubs
pushf
push
popl
dec
mov
adc
imul
mov
in
fwait
mov
sub
insl
xor
jmp
pushf
aam
cmp
testb
clc
sti
mov
cwtl
in
pop
mov
fdivrp
xor
adc
ds
mov
xchg
mov
js
inc
inc
fwait
call
nop
movsb
arpl
call
push
in
mov
cmp
mov
dec
mov
dec
fisttps
lds
dec
cli
movaps
inc
mov
adc
inc
mov
shl
push
and
or
and
in
jl
pop
leave
lea
pop
cmpsb
push
jmp
sbb
hlt
mov
inc
cmpsl
dec
push
idiv
mov
imul
mov
mov
mov
ja
sbb
cmp
nop
cmp
das
hlt
xor
dec
in
add
fisubs
push
and
sbb
int
jnp
mov
ficoms
add
imul
int3
pop
cmc
rcrl
add
xchg
jns
push
and
pop
sub
in
sub
jecxz
arpl
jle
cmp
cli
pushf
add
gs
inc
jae
add
mov
lahf
mov
in
mov
sbb
lret
inc
cld
sahf
ficompl
xchg
or
dec
out
jne
and
inc
test
sbbl
mov
int
mov
dec
loopne
mov
adc
pop
pop
fs
xor
es
lret
dec
inc
and
fstpl
adc
mov
jno
into
cmp
xchg
fst
test
dec
cs
xchg
jae
mov
jne
mov
sti
xchg
and
jg
jb
sub
ret
mov
sbb
mov
loopne
push
or
push
imul
int
dec
out
js
mov
xor
sub
dec
dec
jle
dec
mov
nop
mov
mov
cmp
stc
xchg
aad
xor
push
aam
lcall
int3
pop
xchg
push
pop
lret
movsb
testb
sbb
push
lods
inc
lcall
jnp
cmp
lock
and
jmp
leave
xchg
repnz
lock
icebp
fmuls
jb
ds
lods
mov
ret
mov
dec
dec
ret
push
cmp
jmp
loop
mov
and
add
aaa
rcl
ficoms
sbb
jbe
sub
adc
and
fstpl
lods
xor
cmpb
mov
enter
fs
pop
lcall
mov
iret
jmp
fidivrs
aad
iret
fwait
iret
sbb
pop
pop
outsl
pop
add
imul
adc
mov
add
pop
loopne
ljmp
cs
movsb
mov
pop
jbe
stc
ds
dec
ficoml
mov
adc
fsts
pusha
mov
jbe
in
or
sub
ficompl
int
je
fdivrs
pop
sbb
sbb
dec
jg
popf
insb
cmp
fcomps
sbb
cmp
dec
xchg
xchg
arpl
scas
cmp
andb
jno
jle
out
cmp
jbe
sub
xchg
shrl
ret
xchg
ljmp
push
mov
xor
les
dec
sti
test
into
cmpsb
dec
ss
das
aam
notb
mov
add
dec
jno
xchg
test
fs
pop
fcmovnbe
push
mov
pop
pop
push
xor
sub
pushf
popl
jg
xchg
jns
daa
cmc
mov
mov
das
inc
daa
xor
sarl
mov
dec
xchg
ds
aam
push
hlt
sbb
dec
xchg
push
aaa
jmp
aam
jbe
cmp
mov
inc
push
push
in
sub
std
add
sub
push
mov
adc
or
shrb
xor
aam
in
xchg
lods
cs
cmp
lret
and
and
xor
mov
test
aad
sub
jo
dec
out
or
adc
lods
pusha
mov
xor
mov
sbb
imul
add
adcl
cmp
ja
dec
roll
xchg
repnz
sti
jne
ret
pop
mov
hlt
jo
inc
inc
add
arpl
cmpsl
scas
dec
dec
mov
int
sbb
mov
lahf
add
adc
dec
lock
mov
mov
lahf
mov
mov
jne
xchg
fwait
or
sarl
mov
sub
jne
lock
xor
push
or
mov
push
jnp
dec
xor
mov
push
pop
pushf
sub
dec
addr16
and
mulb
jp
or
stc
mov
lods
aam
cmc
xchg
nop
sub
cmp
sub
or
insb
mov
inc
shlb
stos
loope
mov
jecxz
push
lds
das
mov
ljmp
xchg
clc
jg
dec
into
add
scas
adc
push
and
jno
adc
sub
sti
rorb
popa
sbb
add
push
dec
xlat
lahf
into
lods
std
je
pop
lea
mov
pop
add
pushf
loope
movsl
js
and
fwait
jne
mov
mov
orb
outsl
out
adc
mov
add
sbb
sub
jnp
push
pusha
pusha
cmp
mov
cmp
loopne
loope
push
fidivs
sbb
mov
lea
and
fsubs
cltd
js
out
add
mov
jl
push
leave
mov
jg
ret
or
aam
cmp
lds
inc
outsb
fisubs
movl
xchg
scas
pop
loopne
jle
flds
lahf
jns
dec
es
push
mov
jbe
bound
sahf
aas
insl
cmpsl
out
xor
dec
xor
lds
mov
and
les
sub
mov
mov
mov
and
push
adc
jmp
dec
cmp
inc
adc
or
hlt
jno
test
or
push
add
loopne
es
ret
adc
jmp
or
push
xchg
cld
xchg
test
iret
iret
repz
mov
dec
jb
dec
popa
lock
mov
ljmp
clc
pop
lret
push
dec
loope
stos
icebp
mov
xchg
pop
into
jo
leave
fs
push
inc
push
ja
fs
pop
inc
sub
cltd
pusha
aas
mov
negl
mov
jl
cmp
sbb
cld
pop
sti
jle
ror
push
push
adc
es
fildl
jge
shlb
imul
adc
pop
jp
int
outsl
xor
jnp
jle
xor
inc
mov
dec
out
mov
adc
xchg
imul
pushf
ss
lahf
inc
lods
sbb
lahf
mov
fs
fidivl
pop
cs
icebp
pop
jmp
fildl
mov
mov
mov
xchg
setle
test
aaa
bound
cs
jns
sbb
dec
fcoml
xlat
add
int
sahf
xor
xor
fdiv
clc
jmp
aaa
shlb
sub
pop
cs
push
hlt
ret
hlt
xchg
lret
ret
add
out
out
xlat
push
xor
movsl
push
jle
movsb
push
mov
cmp
adc
adc
and
xchg
jae
mov
adc
or
std
and
outsl
mov
pop
xor
mov
pop
fbstp
cmp
gs
mov
shlb
jp
sub
adc
lock
out
add
mov
fstpl
mov
sarb
pop
add
out
cmp
cli
lcall
pop
ret
jge
ret
sbb
sbb
popf
mov
xchg
fdivs
loopne
pop
pop
cltd
out
xchg
lea
movsb
imul
sarb
insl
pushf
cmc
aaa
sbb
or
lods
je
jbe
cmpsl
repnz
xchg
ror
push
addr16
jge
mov
mov
cmp
leave
mov
loopne
bound
xor
out
cmpsl
xor
fs
test
jb
out
cmp
adc
popf
cmpsl
push
cs
repz
cmpsb
in
xchg
adc
fdivrl
inc
adc
or
mov
push
pop
pop
fists
and
sbb
xchg
ds
mov
dec
test
mov
xor
int
or
jp
xor
mov
add
pop
shlb
mov
cwtl
out
sbb
inc
daa
fnsave
jle
scas
jb
xor
adcl
sub
dec
mov
lea
icebp
out
dec
xor
je
push
xchg
mov
and
cld
dec
aaa
stc
pop
pop
mov
lods
sub
pop
sub
roll
fidivrs
add
push
in
jmp
mov
jge
outsb
inc
stos
bound
cmpb
fwait
sub
lcall
in
lock
stos
cli
fistpll
sub
cmpsl
xlat
ja
adc
sbb
in
push
sbbb
sbb
lahf
mov
push
outsl
xor
movl
sti
cmpb
das
repnz
jp
stc
aad
loopne
mov
sbb
in
mov
lcall
fstpt
repnz
leave
je
ss
rcrl
xor
bound
lret
movsl
push
test
cli
add
mul
sbb
dec
ret
mov
mov
cmpsl
int
repz
mov
idivb
jo
add
shrb
outsb
fwait
aad
popa
pushf
ljmp
pop
cmpsb
cli
sub
movsl
mov
aaa
mov
fwait
mov
fstpt
rclb
outsl
nop
call
aas
jg
push
adcl
test
pop
pop
dec
es
jae
xchg
push
lahf
xor
push
jno
add
xchg
mov
xor
les
or
jb
push
fcomps
push
mov
lret
jg
insl
cmp
pop
adc
dec
ljmp
sbb
outsl
out
outsl
mov
adc
movsl
in
sub
push
jnp
xor
aam
cmpsb
and
xchg
outsl
iret
loopne
pop
ror
fisttpll
push
lret
fwait
ja
dec
cli
clc
pushf
aad
xlat
mov
testb
ljmp
xlat
loope
inc
sbb
and
mov
adc
dec
adc
cmpb
out
dec
imul
fstpt
stos
std
mov
outsb
sbb
adc
arpl
les
jmp
loopne
and
repz
cmpsl
pushf
shl
mov
inc
mov
pop
aam
push
ret
aad
mov
mov
sub
mov
dec
lods
fadd
add
out
mov
ret
loope
les
push
cwtl
sbb
data16
jg
addb
xchg
ret
cmp
rclb
mov
enter
dec
divb
sbb
push
pop
inc
sub
cmp
push
fcmovbe
mov
add
mov
scas
outsl
fidivrs
shr
cmc
xchg
mov
in
mov
dec
mov
push
xorl
sbbl
fwait
jge
lret
cmpsb
movsl
fsubl
cmp
mov
mov
or
mov
in
dec
out
loope
out
push
mov
sub
xchg
adc
cmp
mov
xor
out
xchg
and
dec
mov
jl
aad
lcall
out
mov
cmp
test
or
lods
ret
stc
sub
jmp
ja
iret
push
gs
lahf
in
mov
adc
add
jae
mov
dec
les
scas
mov
gs
bound
xchg
popf
inc
mov
inc
test
mov
xchg
mov
and
ret
addl
fsubr
adc
imul
dec
sahf
movsb
repz
mov
xor
xchg
in
add
fildll
pusha
dec
iret
mov
scas
xchg
xor
mov
dec
adc
jg
dec
push
rclb
sbb
stos
mov
mov
fldt
add
pop
xchg
insb
xor
mov
ficomps
sbb
in
mov
arpl
or
mov
sub
stc
jp
fstpt
sbb
js
js
es
inc
pop
clc
std
dec
inc
xchg
mov
xlat
andl
je
loopne
cmp
mov
test
adc
jl
add
shlb
in
iret
out
sub
pop
lock
inc
cmpsb
inc
dec
add
jle
pop
iret
incl
sahf
mov
push
testb
jecxz
iret
outsl
shrb
in
pop
repnz
sub
cmpsb
fs
push
cwtl
mov
mov
jno
test
js
push
push
sahf
lds
mov
jmp
das
or
stos
cwtl
xchg
in
iret
cmpb
adc
dec
out
push
ret
lea
xor
loopne
add
lds
xchg
lcall
in
rcrl
ss
pop
fmul
cmp
negb
pop
cli
xor
pop
movsl
fidivrl
jnp
mov
dec
test
or
jmp
cmpsl
mov
push
leave
das
mov
pop
mov
pop
les
fs
imul
loopne
adc
pop
cmp
pop
popl
adc
test
xor
xchg
pop
push
sbb
push
nop
sub
cld
inc
mov
lret
push
inc
cmp
lcall
dec
push
xchg
leave
mov
sub
jae
test
inc
enter
mov
dec
cmpsl
mov
cwtl
push
vmread
sub
dec
mov
fsubs
js
or
std
ret
lock
cmp
pop
sbb
std
jae
call
aaa
icebp
sub
fidivrl
lock
sbb
pop
cmp
clc
stos
jmp
jne
test
inc
add
jb
int3
shl
jbe
incl
mov
fcom
insl
or
lock
add
mov
ss
es
aas
lret
rorb
cmc
dec
lods
mov
ficomps
cwtl
fmul
insb
pop
fbstp
sub
and
sti
fdivs
mov
repnz
lods
test
jno
daa
pop
pop
jg
mov
push
das
xchg
mov
pop
ss
jmp
sbb
jmp
sarl
xchg
xchg
cmp
mov
mov
popf
xchg
mov
call
or
inc
jo
rcll
pushf
test
pop
xchg
in
cs
cmp
pop
cmp
imul
add
daa
or
dec
std
dec
shlb
or
jne
add
mov
cmp
mov
pushf
ret
inc
sti
in
sbb
sti
call
test
int
jge
aam
andl
daa
stos
jnp
mov
mov
pushf
in
mov
scas
or
into
pop
and
les
das
fsubrl
dec
popf
cmp
or
cmp
push
sub
jmp
insb
and
cwtl
dec
mov
in
pop
cmpb
mov
imul
inc
sbb
push
dec
rorl
xchg
jnp
mov
sbb
sub
lea
jecxz
int
out
repnz
pop
mov
lods
int
paddb
sub
adc
loopne
mov
movsl
xor
js
lds
or
inc
gs
mov
hlt
jo
add
scas
into
int3
mov
mov
xchg
adc
and
fimuls
and
ja
jnp
dec
and
into
xchg
sub
and
sti
pop
std
sbb
fiaddl
orl
push
movsb
fadds
into
test
loope
push
cmp
nop
mov
inc
push
mov
dec
inc
leave
in
pushf
les
xor
mov
cwtl
jmp
jle
dec
js
sbb
rcrb
xor
lahf
stos
data16
lds
or
sub
and
jbe
and
xor
cld
and
cli
or
sbb
dec
mov
adc
fs
arpl
rcrl
sbb
lods
push
lea
sub
jge
jmp
inc
test
into
xchg
das
jb
inc
loopne
jg
jbe
in
dec
mov
and
push
out
or
jno
xor
test
loopne
cltd
cli
and
add
cmp
ficomps
icebp
xchg
fs
dec
aas
je
pop
pop
mov
icebp
jge
test
andb
fcoml
cmc
mov
xchg
xchg
movsl
out
call
and
arpl
mov
icebp
movsb
fisttpll
pushf
out
shll
or
push
arpl
add
cmpsl
dec
xchg
sub
or
scas
test
pxor
push
stos
or
test
repz
scas
xor
jp
pop
hlt
test
pop
sub
repz
sub
in
std
imul
shlb
jb
cmpb
xor
jg
and
rorb
lret
push
jmp
or
and
incl
mov
sbb
xchg
push
cmpsb
pop
iret
push
inc
clc
stos
je
fwait
mov
inc
pop
repnz
or
ja
bound
push
add
pop
fs
in
inc
fdivrl
xchg
lret
rolb
push
sbb
insb
ss
inc
inc
adc
lret
or
dec
cmpsb
aad
lods
loope
inc
fwait
sbb
in
jmp
aam
add
jae
inc
shr
outsl
xchg
loop
adc
push
add
cmp
sub
jne
adc
cmp
mov
vmulpd
rolb
inc
or
in
or
pop
rcrb
idiv
enter
xor
mov
inc
mov
ljmp
mov
bound
and
push
push
in
cmp
daa
jmp
adc
mov
jle
out
in
test
je
lret
enter
fbld
xor
xrelease
sbb
jle
sub
dec
aaa
mov
dec
jg
daa
cmp
pop
push
inc
rcrl
xchg
dec
aaa
sbb
fs
push
call
jmp
mov
mov
insb
add
jg
xor
dec
adc
testl
call
call
lock
jp
jp
mov
inc
filds
inc
in
xchg
mov
push
aam
cltd
mov
cmp
sub
jmp
popa
or
cs
mov
pop
jp
push
or
sub
add
mov
add
mov
sti
add
mov
fwait
lds
inc
repnz
xor
outsl
push
xor
push
xor
pop
out
push
sahf
push
sub
orb
jbe
inc
addr16
cmpsb
aad
mov
sti
popf
pushf
push
xchg
jp
jns
hlt
jp
pushf
jnp
enter
fucomp
xchg
and
stc
mov
and
or
xchg
iret
lds
out
incb
sub
dec
addr16
outsl
or
iret
call
sbb
lods
jae
jbe
sbb
fsubs
jae
jmp
aas
mov
aad
js
push
add
out
add
dec
dec
addr16
addl
notb
pop
pop
and
sbb
cwtl
shrb
ds
movsl
dec
jne
addb
inc
fstps
pop
cwtl
mov
gs
ffree
xlat
das
adcl
mov
adc
out
test
pop
sub
xsha256
cmpsb
xlat
pop
mov
cmp
into
adc
andb
outsl
sbb
dec
inc
cmp
xchg
sbb
dec
ret
fs
jae
test
popa
ret
out
testl
idivl
aad
stos
dec
adc
mov
andl
dec
into
pop
insl
stc
hlt
xor
xor
xlat
add
setnp
mov
loop
stos
push
aas
mov
cmp
cli
lahf
fsts
xlat
data16
pushf
lea
mov
arpl
sub
dec
adc
pop
outsb
inc
inc
es
sub
xchg
dec
xchg
leave
in
nop
je
mov
cmp
ja
std
jno
xchg
mov
fdivrp
jecxz
scas
bound
jle
mov
stos
aaa
test
lods
adc
push
cmc
mov
outsb
rcr
sub
lret
push
mov
lcall
adc
sahf
xor
loope
clc
or
push
daa
mov
xchg
ds
aad
inc
fs
dec
icebp
test
fimuls
lcall
cmp
adc
cmpl
jmp
mov
daa
in
adc
loop
fdivp
jp
sub
bound
sub
lret
push
mov
neg
lret
mov
jp
sti
je
and
xor
in
rcrb
popa
daa
aas
daa
out
sub
push
in
rolb
movsl
jecxz
dec
rcll
mov
js
aas
je
insl
add
mov
mov
mov
mov
ja
sub
mov
lea
pop
xchg
mov
in
adc
jge
sub
stos
xor
add
popf
int
cltd
cmpsl
roll
inc
cmc
mov
lret
pop
add
mov
pushl
in
loopne
pushf
add
cwtl
lahf
outsb
in
lods
notb
fstpt
ret
jne
cmc
loop
push
ljmp
pop
cli
fistpl
xlat
popf
sbb
mov
into
push
cmp
aad
aas
inc
jae
shlb
sub
push
in
mov
sbb
cld
lea
imul
push
sahf
xlat
mov
xchg
fstl
mov
inc
adc
je
add
mov
inc
pop
sub
xchg
pop
in
jecxz
in
xchg
fmul
push
rol
out
mov
sahf
inc
xchg
rcll
sub
les
and
add
dec
ret
add
pop
sbb
maxps
jecxz
xlat
xchg
mov
scas
dec
inc
and
shll
shl
jno
cmp
subb
xchg
sub
nop
inc
scas
mov
es
lahf
xchg
pop
wbinvd
mov
lods
adc
clc
sbb
sub
adc
sbb
xchg
mov
fprem
cmp
lods
xor
dec
xor
out
add
pop
push
les
loop
js
int3
pop
imul
das
push
mov
push
adc
sbb
dec
add
out
insb
mov
and
mov
addr16
or
inc
push
lahf
in
in
mov
rcll
scas
jbe
arpl
test
fidivrs
inc
loopne
in
dec
mov
xchg
push
bound
dec
mov
inc
std
loopne
jge
inc
mov
pop
mov
jb
mov
fbld
out
rcrb
insb
pop
imul
jl
div
stc
in
outsl
stos
mov
cmp
add
cld
add
xor
repz
or
push
add
cld
sti
pop
pusha
das
fdivl
jge
cmp
push
mov
or
add
rorl
repnz
mov
out
xchg
adc
int
push
xchg
hlt
cwtl
cli
fs
sbb
and
mov
pop
cmp
sub
cld
mov
pop
mov
cld
iret
add
das
bound
adc
sub
lret
jnp
jbe
mov
pop
adc
sub
dec
cmp
in
jmp
jbe
or
cmp
mov
movsb
sbb
sbb
lahf
jnp
push
xor
shrb
push
repnz
insl
es
mov
xchg
mov
adc
mov
in
or
aaa
jg
bound
rclb
lock
shll
xchg
iret
lcall
lret
call
sub
in
iret
addb
or
mov
or
rcrl
cs
mov
add
pop
aad
add
lret
jp
fsubrs
mov
icebp
sub
jg
mov
loope
sub
loope
jl
outsl
xchg
stos
or
sub
jg
add
mov
insl
aam
scas
or
pop
icebp
cltd
loope
dec
shlb
ljmp
in
mov
dec
sub
cmp
sub
rclb
adcl
mov
mov
inc
pop
andb
ss
mov
int
jne
or
clc
test
paddw
shl
cmc
jg
xor
addl
dec
adc
fdivrp
pop
ds
rcrl
int
ret
aas
movsl
fstpt
cmp
fxtract
dec
push
mov
jo
xchg
mov
add
mov
test
cs
push
add
sbb
dec
add
push
push
sbb
insl
fs
mov
je
cwtl
aas
add
bound
scas
aas
sbb
or
or
push
imul
es
arpl
popf
mov
es
js
mov
push
xor
out
push
jl
popa
phaddd
sbb
mov
mov
gs
je
ja
aam
sbb
add
in
int
xchg
gs
pop
fsts
sahf
xor
lcall
test
adc
call
jge
jle,pt
fdivrp
pop
inc
mov
shrl
and
pop
loop
shrl
mov
hlt
push
xor
int
test
fbld
fcmovnb
and
and
cmp
enter
pop
cs
push
rclb
jb
incb
icebp
pusha
mov
mov
sahf
add
js
xchg
xchg
jae
inc
dec
add
filds
stos
mov
movsl
pop
jl
xor
push
sarb
sub
add
cmp
in
iret
sub
mov
into
add
jge
test
xlat
sub
xchg
sbb
dec
shrl
dec
dec
lods
js
cmc
ret
mov
mull
nop
cwtl
adc
push
xchg
jecxz
xor
push
in
out
xlat
scas
sahf
xchg
mov
jae
into
mov
sti
jno
leave
inc
mov
fldt
aaa
pop
add
or
or
push
scas
jbe
scas
in
sti
ret
push
xor
orb
xchg
mov
jno
fistpl
jg
insl
dec
ja
ret
jl
xchg
sub
mov
xchg
add
clc
cld
mov
and
xor
and
insl
and
push
mov
cmp
push
sub
inc
jns
xor
icebp
xor
cmp
ret
mov
rcrb
xor
aad
xchg
sub
mov
les
enter
dec
xchg
loope
fadd
test
jo
push
roll
stos
dec
inc
out
sub
ljmp
dec
or
cmpsb
popa
mov
add
iret
stos
dec
mov
mov
repnz
and
push
rcrl
jl
cld
mov
pushf
addb
insb
sbb
std
and
scas
sub
sbb
fucomip
pop
sbb
fisubrl
mov
jno
cmp
dec
cmp
or
cmp
lods
mov
mov
ljmp
icebp
out
aam
int3
xor
jo
mov
cs
cmp
mov
cwtl
cmp
stos
mov
fnstenv
int3
stos
xor
fwait
cs
mov
and
sahf
cmp
jnp
cmp
out
jae
add
or
addr16
mov
lret
add
lods
mov
xor
xchg
pop
inc
bound
sti
xor
stos
fisubrs
push
test
mov
lahf
sub
fwait
iret
xchg
cli
pop
sub
insb
mov
mov
push
jbe
test
adc
mov
adc
pop
push
imull
insb
rcr
or
pusha
mov
jnp
fsubrs
mov
add
xor
pushl
addb
or
jns
shrb
loop
in
jne
sub
jecxz
lret
sbb
xchg
dec
bnd
pop
or
mov
add
pop
adc
sbb
scas
in
stc
aam
push
xchg
inc
xor
js
mov
add
mov
add
mov
std
mov
jg
and
cmp
mov
and
sahf
addl
idivl
cmc
mov
sub
sbb
mov
sbb
jmp
inc
mov
or
xchg
xlat
insb
mov
jmp
out
xlat
mov
imul
dec
lds
dec
fsubs
iret
push
jmp
test
jo
xor
adc
cmp
push
scas
xor
clc
hlt
data16
dec
ja
cmp
and
packuswb
inc
js
scas
pop
jmp
pushf
xlat
ret
jl
cmpsl
fldln2
clc
lods
in
xchg
pop
in
daa
xor
adc
mov
rclb
jo
pop
cwtl
push
out
jp
in
mov
add
and
aaa
pop
das
or
sub
jle
rcll
movsl
repz
mov
cmpsl
pop
cmp
pop
loope
pop
out
out
xorb
add
call
jecxz
imul
mov
fcomp
or
xor
out
pop
xlat
idivb
jge
mov
sarl
loopne
dec
shrd
inc
fisubl
mov
mov
cli
pop
lods
push
push
jo
mov
loop
daa
mov
mov
mov
inc
mov
stc
insl
imul
cmc
nop
and
sbb
outsb
mov
addb
add
stos
addr16
or
jge
enter
aaa
insl
pop
sub
dec
andl
inc
sti
sub
call
pop
push
rclb
push
test
mov
xor
dec
sti
rolb
dec
pop
and
mov
adc
jns
lock
lcall
pop
mov
inc
pop
repnz
xor
not
push
pop
or
mov
sbb
sbb
lret
fsubrl
lcall
cmc
cld
test
mov
out
out
push
push
into
cltd
and
sbb
pop
dec
enter
dec
decb
cwtl
cmp
fiaddl
sbb
sar
jnp
dec
xchg
sti
xor
cmp
pop
xchg
mov
stos
and
out
lea
loop
fucomp
add
loope
pop
or
mov
xor
or
push
cwtl
ljmp
clc
out
sbbl
xchg
sub
and
and
mov
mov
lds
sahf
int3
fnstsw
sbb
adc
jb
cmpsl
xor
cwtl
not
mov
lods
insl
lods
lret
arpl
inc
jl
jae
out
fidivrs
ret
adc
and
inc
cmp
sbb
lods
ret
fldl
call
sbbb
insl
or
mov
adc
add
inc
adc
adc
mov
jg
pop
mov
pop
outsb
adc
loop
xchg
add
pop
push
and
jge
addr16
inc
out
sbb
lods
mov
je
jge
or
jnp
and
mov
xor
cmp
das
cmpsb
or
popa
in
mov
lock
js
jl
push
out
outsb
cmpsb
test
mov
test
jecxz
jle
xchg
jnp
jno
daa
sbb
hlt
pop
fsubp
incb
nop
jo
xor
xchg
pushf
insb
push
add
mov
fwait
mov
xchg
or
mov
adc
mov
subl
fs
data16
mov
rcrl
push
dec
scas
dec
push
xchg
int3
popf
mov
sub
mov
and
adcl
jecxz
test
in
ds
test
or
fstpt
ss
fs
cmp
pop
fisttpl
aas
into
cmpsl
adc
int
jbe
mov
add
and
push
fldcw
aas
cmp
xchg
push
or
lret
das
sub
cmp
mov
jae
adc
das
push
mov
inc
nop
gs
xchg
jno
rclb
into
jp
mov
lock
int
inc
push
and
xchg
sti
cmp
imul
call
mov
mov
or
adc
adcl
mov
aad
dec
pop
divl
and
pop
stc
sbb
sti
jmp
ret
insl
rcl
and
pushf
dec
xor
lods
inc
mov
sti
dec
adc
movsl
mov
movsl
lea
int
int3
hlt
aam
inc
addr16
inc
aas
sar
push
lods
adc
or
jae
xor
mov
shrl
and
stos
xor
roll
push
fcompl
arpl
adc
add
in
lahf
adc
cmc
cs
push
or
inc
fld
sbb
andl
and
iret
cmp
xor
inc
test
rclb
fistpl
push
imul
pop
das
popa
pop
add
daa
cwtl
jno
dec
push
inc
or
inc
out
xor
push
cmp
sbb
std
xchg
pop
push
adc
inc
sub
in
add
ret
mov
push
and
add
shrl
fs
jg
sub
xchg
rcl
pop
cmp
loop
fucomip
push
sub
shll
cwtl
inc
test
gs
loopne
adc
std
and
dec
test
pop
es
and
sub
sbb
mov
push
sbb
sbb
jnp
popf
mov
jp
aad
insb
inc
jp
fistpl
adc
sbb
pop
pop
cmp
jmp
pop
int
stos
les
lock
mov
mov
and
int3
out
sbb
xchg
push
ja
pushaw
nop
test
cmp
test
cmp
push
loopne
jp
push
mov
add
cwtl
push
insl
push
push
add
outsb
dec
pop
inc
insl
inc
int
dec
add
lds
cmp
aaa
pusha
add
pusha
inc
pop
lahf
hlt
out
or
imul
bound
pop
inc
mov
inc
mov
pop
adc
add
sub
push
lods
xor
push
in
adc
les
in
lea
cmp
dec
or
ficoml
and
std
jno
sub
dec
dec
fisubrl
loop
xchg
mov
fdiv
dec
test
xor
in
sub
mov
inc
adc
cld
and
inc
pop
pop
or
xor
mov
pop
cmp
adc
jns
jbe
leave
mov
mov
pushf
bound
xorb
mov
mov
cmc
dec
loopne
jecxz
mov
mov
sbb
cmp
inc
test
xchg
movsl
push
xchg
mov
fmuls
mov
cmp
movsl
das
xor
and
sbb
sub
pop
sbb
and
loope
and
lahf
popf
sarb
xchg
aad
sub
push
xchg
cwtl
lods
cmpsl
rorl
imul
cmpsl
xor
or
stos
lods
push
mov
push
out
in
stc
xor
sbb
ret
aaa
not
sbb
bound
cmp
les
imul
dec
jecxz
sbb
into
daa
push
out
out
or
scas
sub
bound
imul
out
and
push
jmp
lahf
adc
cmp
jae
outsb
dec
xchg
out
or
mov
ret
mov
outsl
jp
xchg
divb
mov
xchg
push
fidivs
pop
add
test
in
mov
int
and
loopne
push
dec
sbb
dec
jmp
push
sub
into
sub
jne
fistpll
bound
or
repz
insl
lea
xor
jecxz
mov
lods
dec
shrb
pop
jnp
inc
jne
push
not
xchg
xor
xchg
sub
leave
xor
fists
jmp
insb
mov
lods
xor
test
out
sbb
inc
xchg
mov
fsubrp
bound
cmc
adc
pop
dec
dec
cmc
or
jmp
fidivs
or
stc
dec
xchg
inc
icebp
or
repz
lret
fistps
xor
shlb
and
jo
lret
lret
ljmp
mov
outsb
fstps
mov
mov
addr16
xchg
fs
mov
jp
call
daa
sbb
cmc
sbb
dec
ret
lahf
cmp
sub
dec
or
inc
add
pop
push
push
mov
and
xchg
ja
sbb
lock
push
mov
sbb
movsl
in
clc
test
push
aaa
pop
pop
dec
cmp
xor
dec
lret
sbb
outsb
xchg
xor
aas
mov
ljmp
fcomps
mov
sbb
pop
test
xor
inc
movsl
xor
in
jb
mov
nop
scas
into
or
adc
jns
out
jb
out
xchg
pop
pop
cmp
add
sbb
lods
mov
fwait
jge
cmc
cmp
aaa
test
in
std
cmp
test
stos
xchg
add
loope
and
xchg
mov
pop
mov
jbe
lods
pop
mov
and
outsl
adc
sub
jle
std
outsl
test
push
inc
imul
cmpsb
adc
in
fwait
mov
push
nop
mov
add
jge
pop
out
mov
fistl
lods
out
fwait
dec
lock
popf
outsl
mov
cs
jle
outsl
xchg
add
add
sahf
jl
inc
fisubrs
adcb
movsb
sbb
push
xor
nop
into
sbb
cltd
sub
or
jg
out
jbe
xor
add
lock
xchg
lock
xchg
mov
xchg
rcrb
cld
aaa
ss
jo
scas
cmp
repz
rcr
test
sarl
sub
xchg
add
das
or
jp
mov
in
sub
mov
and
pop
sub
sbb
outsl
jge
jae
pop
sbb
pop
add
xchg
pushf
outsl
stc
jge,pt
adc
and
sbbb
gs
clc
outsl
jge
imul
sub
loopne
addr16
sub
dec
in
test
scas
out
out
nop
out
add
sbb
pop
pop
push
dec
xchg
test
aad
push
push
xchg
inc
jae
sub
movsl
add
mov
test
cli
outsl
stc
mov
mov
adc
push
cmp
ljmp
inc
lcall
lods
inc
xchg
movsb
call
pop
dec
jmp
jecxz
and
jl
or
cmp
mov
fisttpll
xchg
fistpl
scas
cmp
sub
addl
loop
sbb
shll
sub
adc
push
mov
scas
push
adc
cmc
lret
xchg
mov
pop
adc
loop
and
imull
push
inc
sub
jo
loope
je
outsl
test
or
mov
xor
and
fidivs
pop
mov
imul
xchg
cmpsb
lahf
inc
cmp
mov
outsl
in
repz
sub
push
cmc
pop
in
jp
scas
sbb
xor
cmc
loopne
add
andl
leave
inc
mov
push
repz
mov
mov
in
mov
lods
cmp
mov
jg
mov
inc
sub
xchg
push
xchg
shrl
xchg
cmp
add
inc
sbb
fwait
jle
mov
pop
and
jle
push
std
addr16
mov
insb
loopne
or
mov
jne
mov
xorl
add
mov
mov
test
and
jge
int
out
jl
xor
sbb
lods
push
fildl
je
test
movsb
jbe
rolb
out
dec
inc
jne
jo
pop
xchg
push
inc
lock
inc
dec
lods
dec
rclb
xlat
loopne
faddl
jmp
clc
jge
push
insb
daa
dec
stc
or
in
mov
jb
or
xchg
cmp
or
cltd
xor
roll
test
popa
xor
and
out
addb
sbb
adc
xchg
mov
lcall
imul
mov
mov
fnstcw
or
pop
rorl
in
xchg
iret
movsl
push
adc
nop
dec
leave
pop
fldenv
clc
sarl
sub
xchg
mov
stc
loopne
negb
mov
lock
jp
rcr
jmp
or
shl
fsts
dec
xor
hlt
add
ds
adc
rcll
cmp
jle
jmp
lods
js
adc
lock
int3
fmuls
movl
notl
adc
subb
dec
xor
fs
cmp
lret
pop
cli
lock
inc
retw
hlt
out
cmp
push
inc
nop
cmp
es
daa
jo
test
stos
in
hlt
cmc
adc
rcrl
cltd
push
xlat
cli
and
dec
hlt
scas
dec
mov
or
mov
stos
dec
sbb
mov
push
mov
mov
clc
or
clc
in
sub
ret
push
inc
adc
nop
pushf
push
jle
js
fwait
push
aaa
push
fildl
pop
mov
mov
pop
jecxz
cmp
out
aad
sub
inc
das
mov
out
cltd
rcrb
sbb
repz
inc
inc
xchg
xchg
fcompl
cmpsb
push
lcall
adc
nop
fucomp
aam
dec
dec
stos
ret
or
adc
das
icebp
dec
inc
sbb
fcmovbe
aad
repz
repz
push
pop
mov
mov
arpl
das
jl
std
stc
pop
mov
push
and
push
push
into
add
setns
add
mov
lock
xchg
loopne
mov
stc
and
sub
adc
fsubrl
inc
shrb
fisubrs
jae
cmp
sbb
pop
inc
dec
mov
dec
cmp
mov
subl
gs
cmp
divb
ret
ret
jae
jbe
jne
jmp
mov
ja,pn
aas
add
jmp
cmp
jae
xchg
cmp
jecxz
sarb
scas
jle
jno
pop
in
cmpsb
add
jb
into
in
push
dec
add
or
dec
xchg
sbb
orb
add
outsb
jo
rolb
adc
cli
imul
loop
or
cmc
or
sub
in
xor
xchg
or
mov
decb
sbb
sub
mov
inc
cmp
or
mov
mov
js
cld
lods
xor
repnz
xchg
push
mov
pop
pop
leave
adc
cmp
xchg
ds
pop
inc
cmp
movsb
fisttps
cmp
les
jae
popa
add
adc
cmpsl
loop
loopne
pushf
in
push
cli
rolb
adcb
out
xchg
pop
and
pop
insl
pop
cld
insl
shll
popf
sbb
popf
ja
cmpsb
mov
and
call
or
cmp
push
xor
out
add
bound
xchg
xchg
sub
loopne
es
jae
outsb
aas
fmul
stos
test
je
push
inc
popa
push
fwait
pusha
out
pop
mov
popf
icebp
data16
inc
cmpsl
dec
test
sbb
dec
or
pop
pop
insb
adc
imul
mov
stos
and
not
push
adc
jecxz
mov
or
call
in
add
test
mov
mov
mov
outsb
imul
sub
jg
dec
incb
test
icebp
pop
leave
cmp
jge
lds
fucomp
adc
pop
addr16
add
mov
call
mov
popa
bound
and
xlat
int
outsl
fsubrl
xorl
scas
bound
jg
int3
ficoml
fcmovne
lea
dec
jp
mov
das
sub
sti
popf
loope
ja
pushf
xchg
shrb
cmpsb
rclb
mov
dec
mov
aam
pushf
sub
dec
imul
test
cmpl
mov
repz
test
xor
fbld
negl
popf
sub
pop
mov
test
test
icebp
xor
addb
mov
sub
inc
sbbb
xor
inc
out
inc
jmp
cmp
push
sbb
sbb
loopne
cmpsl
pop
xchg
shl
push
rolb
sub
sbb
int3
outsl
xchg
fnstsw
mov
jmp
cld
scas
icebp
xchg
dec
aam
movsl
mov
repz
add
add
xchg
xlat
jnp
fistps
mov
push
cmpsb
sub
jae
and
and
sbb
je
imul
pushf
add
bound
icebp
adc
notl
xor
test
inc
sub
or
ljmp
dec
iret
xor
pop
xchg
or
add
imul
js
and
daa
mov
bswap
adc
or
xor
ljmp
fs
jbe
pop
cmp
or
mov
shll
int
inc
lods
pop
jns
mov
icebp
adc
test
add
inc
negl
js
xchg
lret
mov
adc
xor
and
insb
es
push
sbb
insb
pop
outsb
push
cmp
dec
cmp
mov
test
sbb
adc
stos
int
adc
adc
inc
mov
into
jne
loop
loopne
lea
icebp
add
dec
aad
jno
jnp
iret
out
jge
mov
sub
inc
lret
sti
pop
lods
push
mov
and
dec
lahf
test
xor
fmull
push
jbe
and
mov
cld
leave
inc
cmc
add
arpl
fmull
mov
rcl
jge
fwait
mov
sub
insl
mov
sbb
adc
and
popa
jno
xchg
pop
xor
pop
mov
sub
jmp
inc
and
inc
fstpt
pop
cmp
ds
mov
jb
aas
repz
xchg
jecxz
lret
sub
in
pop
xor
inc
int3
sbb
addr16
or
rcl
jge
dec
push
iret
cmc
pop
fxch
mov
lods
sub
jae
pop
ds
and
enter
jbe
ret
jg
sti
std
xchg
pop
add
push
push
push
enter
sbb
into
out
sub
pop
cltd
dec
pop
jecxz
jb
test
lret
adc
orl
pop
inc
pop
sub
jae
repnz
inc
jbe
call
outsb
int3
cwtl
ds
push
sbb
scas
mov
inc
sar
mulb
jl
sbb
sahf
lcall
adc
sbb
or
jno
lret
xchg
adc
clc
nop
repz
test
xor
into
int
sbb
jno
rorb
test
push
enter
in
push
in
lret
repz
insb
xor
outsb
test
cmpsb
mov
mov
inc
addr16
push
jnp
std
add
mov
dec
jecxz
mov
push
xchg
mov
adc
inc
scas
imul
cwtl
add
call
cmp
cs
or
ret
test
mov
cmp
into
mov
or
aam
in
cmp
jb
aad
out
icebp
or
pop
jmp
int3
arpl
movl
imul
rsm
or
xchg
aaa
pop
subb
pop
pop
movsb
jb
sub
inc
mov
loopne
mov
cmp
repnz
dec
xor
jno
pop
sub
int
scas
fcoms
aam
gs
lret
sub
in
pop
jo
and
adc
jecxz
fwait
or
sub
paddb
fidivs
aad
cmp
push
sbb
ret
psubusw
ret
dec
xor
enter
xor
in
sbb
movsl
push
ss
mov
out
pusha
inc
bound
dec
mov
sub
push
xchg
call
sbb
cmpsl
test
push
lods
sbb
jo
inc
pop
sub
test
or
lcall
push
mov
cmpsb
das
cs
aaa
pop
sub
sbb
sbb
or
vpmaxub
fwait
ljmp
pop
jle
xor
js
pop
mov
mov
xchg
pushf
scas
iret
test
test
xlat
or
out
adc
movsb
out
lods
rcll
in
mov
pusha
jecxz
jle
loope
lods
movsb
in
add
je
rcr
mov
rcr
imulb
pushf
mov
shll
fidivs
fstpl
dec
adc
sub
cmpsb
ds
aam
sarb
aas
add
gs
mov
jecxz
mov
jle
sbb
push
sbb
lret
pop
dec
sub
jb
inc
sbb
xor
out
test
out
mov
fbstp
pop
fmul
int
push
enter
fdivs
push
sbb
movsl
data16
or
stos
fcomp
addr16
out
dec
sbb
out
ds
mov
lds
stos
mov
sub
or
mov
imul
xor
icebp
and
inc
inc
adc
adc
ret
jecxz
jmp
decb
mov
sbb
adc
imul
std
push
and
icebp
dec
addr16
push
dec
stos
inc
or
xor
in
lret
sahf
bound
xchg
mov
es
cmpsb
ffreep
in
and
dec
out
testl
push
stos
push
test
xor
and
outsl
dec
and
mov
cmp
fcom
call
sub
inc
out
das
cli
ljmp
sub
cld
loopne
shll
pop
mov
aas
pop
negl
mov
push
daa
int
dec
arpl
adc
cld
lds
adc
pop
imul
dec
out
stc
jmp
popa
sbb
add
and
push
cli
inc
leave
daa
in
test
pushf
mov
movsl
mov
mov
cli
lret
in
in
ficomps
lahf
or
test
sbb
xor
je
rcrb
int
mov
imul
stc
or
mov
fdivrs
jae
jb
or
stos
es
sbb
scas
loopne
sub
jge
into
fcmovnbe
mov
lds
enter
faddl
dec
inc
mov
inc
iret
jge
mov
mov
lock
scas
cmpsb
mov
jne
scas
pop
dec
ja
mov
xor
inc
xchg
sub
sub
push
aad
xor
stc
add
mov
enter
jne
mov
loopne
jae
xlat
addr16
inc
lret
xchg
je
pushf
ret
leave
outsb
fstps
dec
stc
movsb
jbe
cmp
and
sub
and
push
jb
push
cmc
in
jmp
imulb
pusha
fisttpl
or
add
jns
sub
lret
and
insl
lea
xor
mov
icebp
mov
fisubrs
mov
shll
cli
mov
aad
roll
lods
cs
push
cld
outsl
arpl
push
or
ret
in
into
int3
mov
ret
shrb
xchg
and
pusha
inc
jb
mov
imul
cmpsb
arpl
gs
mov
jns
mov
cmp
pop
mov
adc
aam
jge
mov
fcoml
shlb
mov
xor
dec
cmpsl
add
aad
icebp
in
xchg
push
nop
cmpl
or
sub
shlb
mov
add
mov
lds
popa
mov
shlb
mov
jl
jbe
dec
inc
loope
xchg
ficompl
lods
push
pop
mov
addr16
mul
xchg
cmp
lret
sbb
sub
insb
test
dec
and
icebp
pop
jnp
into
xchg
jp
or
cmpsl
inc
sub
ret
in
hlt
rcrl
mov
xor
out
or
mov
cmove
lcall
fisubs
push
pop
mov
adc
popl
test
data16
xor
xacquire
xlat
sbb
popa
inc
jnp
cmp
adc
mov
mov
lret
cltd
add
and
jg
jecxz
cwtl
jl
daa
dec
xchg
test
sarb
xchg
aam
cwtl
fcmovb
test
outsl
hlt
and
mov
ja
jl
call
sub
pushf
dec
xor
insb
pop
add
cmp
faddp
cmp
dec
insb
loop
iret
cwtl
jns
js
mov
sbb
xlat
loop
jl
out
sti
lock
stos
icebp
ss
or
movsb
jnp
hlt
or
inc
bnd
cmp
mov
adc
hlt
xor
xor
bound
or
adcl
sti
out
aaa
lods
scas
fldt
sti
stos
and
and
stos
add
imul
inc
les
aaa
in
sbb
push
mov
jmp
lcall
orb
int3
cmpsb
cmp
mov
pop
xchg
inc
xchg
daa
bound
inc
inc
and
mov
lahf
leave
push
movsl
adc
mov
sbb
add
pop
test
xor
and
and
jp
insb
mov
iret
mov
sbb
das
or
cmp
test
pop
mov
dec
xchg
fdivrs
and
dec
xchg
mov
xor
rcl
je
push
lods
lret
scas
test
inc
sub
stc
pop
lret
call
nop
aaa
pop
pop
sbb
imul
xor
jle
jns
jnp
test
pop
mov
xchg
movsl
mov
icebp
out
call
sbb
insb
dec
bound
pop
or
sbb
xor
cmpb
icebp
into
jae
into
mov
imul
movsl
out
in
xorb
or
cmp
fsts
or
inc
cmp
roll
in
lret
inc
cmc
mov
cs
mov
aaa
ljmp
jne
das
cmp
ljmp
jno
push
inc
and
nop
push
lock
mov
sar
cmp
fdivrs
inc
xor
add
aaa
mov
repz
clc
jae
loopne
out
mov
dec
je
mov
setb
jo
add
dec
out
ret
sbb
adc
test
scas
imull
int
clc
shlb
inc
dec
outsb
aam
insl
les
mov
push
mov
mov
pop
fisttpl
and
jae
hlt
xor
ret
nop
in
das
in
sub
aas
jbe
jl
cmp
insb
xor
fwait
sub
popa
sti
mov
repnz
cwtl
int
xchg
rcll
mov
push
dec
push
cmp
ret
icebp
push
lods
dec
adc
push
adc
jbe
call
mov
lret
std
ljmp
mov
jl
mov
push
mov
inc
xchg
scas
insl
shlb
nop
ss
scas
test
mov
loope
mov
fwait
sti
push
fsubs
addl
add
sub
fdivrp
jo
adc
pop
call
outsl
ja
popf
xor
mov
dec
aam
ret
dec
in
cli
das
lock
sbb
rorb
mov
cmpsb
stos
arpl
sbb
mov
fsubrl
mov
scas
pop
lahf
mov
aad
stos
mov
mov
lods
scas
std
hlt
out
out
xchg
pop
cmp
aad
or
into
cmpl
and
leave
sub
pop
mov
mov
add
xchg
imul
insl
aaa
and
aaa
call
xchg
jbe
mov
cli
cmpsl
fcoms
sahf
arpl
mov
imul
dec
hlt
inc
mov
pop
xor
or
out
pop
movsb
std
cmpsl
jnp
mov
push
sub
repz
sbbl
es
jle
push
mov
xchg
test
mov
or
add
mov
notb
and
cmp
fs
mov
lcall
shl
mov
sahf
mov
and
int3
negl
test
push
jmp
push
xchg
icebp
popa
lahf
les
aas
adc
call
lods
xorl
loop
adc
adc
pop
imul
lcall
loop
sbb
ljmp
jb
push
in
cmp
xor
add
and
not
or
mov
shlb
les
xor
aam
mov
mov
jecxz
xor
in
sub
movl
mov
xlat
mov
daa
push
shr
lock
cmp
subb
popa
dec
rcll
pop
xor
enter
loopne
adc
fiadds
imul
in
mov
xchg
loop
lods
cmpb
mov
js
mov
stos
mov
jle
cld
fmuls
push
ss
dec
cmp
adc
pushf
ffreep
xlat
xchg
sti
xchg
push
dec
cmp
mov
stos
and
shl
mov
imul
cmp
leave
repz
mov
ljmp
and
pop
xchg
adc
jg
lds
xchg
mov
ljmp
jl
add
int3
jmp
mov
shrb
xorl
adc
sub
adc
aas
out
in
xchg
and
mov
rclb
add
repnz
mov
adc
pop
rorl
mov
in
xchg
fs
test
aas
sub
cmpsl
cmp
stos
pop
sub
aad
jecxz
mov
pop
inc
or
or
mov
loope
das
sahf
fmul
inc
insl
shl
stos
ret
out
xor
cmp
cmpsl
inc
mov
and
mov
rcrb
out
dec
xchg
lret
adc
pop
cltd
insl
adc
mov
cmpsb
inc
mov
aas
adc
add
and
mov
pop
in
dec
adc
sub
ficomps
cmpsl
mov
stc
sub
into
jae
xchg
rolb
imul
je
push
popf
pop
jmp
scas
lds
icebp
insb
jne
or
rolb
fidivrs
or
dec
out
jge
leave
addr16
mov
push
sbb
add
mov
jae
xchg
push
loope
xor
adc
push
mov
inc
scas
call
push
into
test
repnz
imul
adc
mov
mov
bound
mov
fs
mov
stc
movsb
popf
and
repnz
sub
dec
pop
adc
and
rol
clc
sub
push
xchg
aas
hlt
jl
pop
idivb
lahf
dec
lahf
scas
enter
cli
adc
test
iret
mov
loop
test
lret
orb
dec
mov
decb
jne
fs
xchg
out
and
lea
mov
popf
and
push
je
int
inc
or
js
or
inc
aas
cmp
jg
sub
flds
cmp
out
push
mov
sbb
jmp
dec
mov
sub
jne
or
push
and
cltd
lds
popa
into
jo
loop
dec
je
cmpsb
imul
enter
xchg
mov
sar
call
scas
sbb
jnp
mov
idivb
push
idivl
enter
sbb
jno
mov
cmp
ret
out
xlat
push
dec
insl
push
xchg
cmp
push
lea
imul
dec
repnz
pop
cltd
dec
mov
rorb
jo
movsb
fs
or
push
push
in
ds
pop
aad
pop
or
jmp
stc
sbbl
cwtl
adc
adc
cmp
sbb
jne
and
and
in
lahf
mov
lods
insl
xchg
pop
mov
sbb
std
jo
dec
xchg
pop
int
cmp
lock
movsb
leave
arpl
shll
arpl
lods
push
xor
std
dec
outsl
jno
jp
rorb
cmp
dec
cmp
scas
sub
int
lock
jno
test
jmp
enter
in
repnz
pop
cmp
cmpsb
rdpmc
repnz
mov
out
push
bound
dec
jge
test
mov
pushf
into
test
inc
rcrl
cli
loope
je
clc
in
mov
icebp
add
orl
dec
xchg
jbe
push
adc
sti
ret
add
jle
paddw
inc
out
cmp
mov
sub
les
insb
es
sub
adc
int
xchg
jae
inc
arpl
or
xchg
sub
add
lret
mov
and
or
adc
and
cmp
dec
js
daa
push
stos
hlt
fwait
xchg
stc
popa
das
clc
sub
sub
imull
insb
mov
dec
out
imul
or
dec
push
dec
inc
jl
test
push
sub
or
stos
sub
outsl
mov
fidivrs
push
cmp
adc
daa
push
rorl
pushf
pop
gs
loop
stc
inc
out
lods
inc
lea
sbb
aad
clc
pushf
aad
cmpsl
cmp
cltd
sahf
jle
test
jle
sub
mov
push
cwtl
xchg
ja
xchg
bound
jp
maxps
push
pop
cmpsb
jbe
jns
lods
cmpsb
movsl
mov
xchg
fistpll
cwtl
ljmp
addr16
pushf
jmp
lcall
or
and
into
add
inc
pop
jp
push
in
iret
mov
dec
rclb
fldcw
js
or
dec
test
pop
rcl
fisttps
xlat
ficomps
nop
mov
add
pusha
inc
movaps
pop
mov
cs
push
mov
daa
jp
arpl
loope
mov
lods
addl
mov
or
fstpt
xchg
inc
fldl
nop
lret
xor
add
repnz
gs
jecxz
dec
ret
sbb
out
jl
sub
and
mov
aam
pop
sbb
out
mov
fbld
mov
daa
adc
popa
pushf
jns
dec
imul
shl
rol
xor
insb
xor
xchg
cmp
in
lock
adc
lcall
jmp
jg
xor
and
imul
mov
bound
xchg
test
fmull
cmp
sbb
mov
arpl
and
movl
int
push
and
fldcw
and
pop
mov
sar
rorl
inc
xchg
hlt
jne
inc
mov
int
lret
pop
in
aas
fmuls
test
int3
lods
pop
vminpd
daa
sbbl
push
into
and
cld
in
xor
mov
mov
ss
sti
sub
adcl
xchg
dec
inc
mov
jbe
sub
mov
sarl
lret
rcr
mov
dec
in
jmp
and
shll
ja
pushf
cmp
jl
fidivs
repz
push
test
arpl
sub
jle
call
and
jge
ljmp
cmp
popa
add
pop
mov
test
inc
testl
mov
int3
out
fdivrs
daa
pop
or
dec
pusha
ljmp
cli
test
xor
aad
adc
xor
inc
or
in
mov
lods
or
in
mov
outsl
roll
enter
dec
dec
adc
out
in
inc
lcall
and
adc
add
jmp
test
aad
mov
jle
shl
out
adc
mov
xchg
pop
jecxz
incl
testb
cltd
in
pop
jecxz
push
stos
and
incl
into
sbb
sub
out
mov
sub
outsb
repnz
mov
sbb
cli
xor
pop
xlat
xchg
mov
cmpsb
dec
xchg
xchg
popa
jae
test
mov
mov
jg
cmp
cmp
xrelease
inc
movsb
sub
loope
scas
push
dec
jbe
xchg
bound
leave
pop
repz
js
sti
popf
mov
mov
imul
xor
es
subb
sbb
sbb
lahf
fdivl
adc
push
xor
in
imul
dec
mov
movsb
mov
cmp
cmpsl
and
xor
push
mov
mov
push
mov
sub
arpl
xor
jb
popf
dec
mov
pusha
sub
xchg
xchg
ret
jbe
repnz
decl
addr16
xchg
mov
int3
test
idivb
cmp
sub
fs
hlt
xchg
in
push
fisubs
test
and
add
mov
mov
adc
insl
pop
orl
lahf
mov
and
push
lret
mov
repz
movl
xor
fcoms
pop
jp
mov
iret
xor
jmp
sub
mov
dec
inc
push
sub
shr
inc
cmp
imul
sub
ret
aam
or
push
repz
mov
cwtl
xchg
dec
in
out
out
jl
and
push
cmpsb
test
and
jp
pushf
and
xorl
or
xchg
mov
wrmsr
pop
push
xchg
or
dec
sub
iret
mov
or
xor
inc
pop
add
dec
mov
and
cmpsb
loope
movsl
sbb
add
push
or
mov
xor
scas
sub
pop
jnp
pop
add
repz
nop
in
dec
mov
sahf
pop
inc
cli
jo
stos
dec
mov
ds
lret
cmp
cmp
mov
inc
xor
inc
iret
push
pop
pop
outsb
mov
and
xchg
mov
rcrl
loop
cmp
shrl
outsl
xor
adc
and
leave
jae
cld
adc
inc
and
fildll
cmp
imul
mov
out
dec
lock
ret
stos
aaa
push
sub
jne
add
addl
pushf
jo
sbb
dec
pusha
push
dec
testb
sub
pop
lock
cmp
add
cmp
dec
mov
sti
insl
fdivrs
int
in
repz
and
std
inc
pop
pop
dec
sub
push
aad
out
lcall
gs
sub
rorl
aam
sub
xchg
sbb
xor
xor
ljmp
push
pusha
push
adc
dec
loopne
in
adc
loop
ss
in
pop
cmp
xor
out
dec
hlt
add
fiadds
int
bswap
cmp
out
mov
out
sbb
lds
adc
dec
daa
sbb
and
aam
push
mov
ret
outsb
xor
dec
dec
pop
iret
mov
mov
not
jge
repz
mov
adc
sbb
sbb
aaa
outsb
ret
sub
daa
xchg
roll
jp
mov
pop
xor
pop
fdivr
adc
in
mov
and
ja
push
or
icebp
mov
addr16
and
negb
test
inc
jb
dec
sti
sub
test
mov
int
xor
jns
hlt
pusha
lret
xchg
cmpsb
das
das
sub
aam
lret
adc
jmp
ret
jg
test
xchg
vpcmpgtw
test
ret
push
mov
pusha
fcomp
ja
mov
adc
stc
jle
addr16
insl
cmp
jo
sub
sub
das
gs
ret
in
or
or
roll
jmp
pop
enter
dec
jge
daa
rcrb
test
je
icebp
dec
out
inc
popf
ret
push
cmp
shlb
cmpsl
push
xchg
lods
aaa
adc
ret
loope
or
popa
pop
pushf
sub
push
adc
xor
jne
and
sahf
sub
and
into
adc
call
mov
mov
sbb
rep
xchg
pop
push
cs
sbb
das
stos
push
and
jbe
jno
loop
lahf
inc
sar
adc
ffree
iret
mov
call
inc
cmpsb
dec
inc
test
rcll
inc
inc
aaa
push
mov
repnz
cmp
adc
daa
jmp
mov
and
iret
sbb
test
mov
fs
sbb
mov
mov
push
into
cmpsl
stos
xor
out
jecxz
and
add
ret
mov
xor
adc
dec
out
das
sbbb
cmpsb
rorl
dec
leave
xor
int3
mov
enter
out
rorb
movsb
push
js
les
cmpl
into
ljmp
dec
jle
or
data16
mov
daa
jmp
test
les
ljmp
push
dec
and
push
mov
mov
lcall
inc
sbb
jl
jecxz
scas
aaa
pusha
xchg
xchg
ja
fwait
mov
int
inc
cwtl
lock
scas
cmp
and
lahf
scas
roll
mov
pop
ret
dec
enter
frstor
xchg
pushf
lret
mov
sbb
inc
call
pop
mov
push
dec
pop
push
mov
inc
shrl
fwait
xor
ljmp
cmp
bound
push
fwait
nop
mov
cld
lods
rcl
and
jnp
aam
fcompl
dec
jne
and
pop
push
lcall
mov
stc
inc
out
sub
int
dec
mov
mov
mov
sbb
cld
mov
andl
sahf
pushf
arpl
xor
mov
notl
stos
imulb
in
push
pushf
jp
in
into
sbb
pushf
and
lods
popw
daa
xchg
mov
or
xor
outsb
std
sbb
das
pop
outsb
adc
ffreep
vmovhps
xchg
movsl
sahf
sbb
jns
or
sub
inc
mov
inc
mov
inc
pop
cld
enter
lods
test
adc
xchg
enter
push
sub
and
outsb
cmp
loop
and
test
add
arpl
or
or
xchg
or
sahf
cmpl
ss
pusha
add
cmpb
xor
adc
test
push
stos
addb
lods
lret
cmp
or
add
or
outsb
and
xchg
push
out
xlat
xor
jg
push
inc
add
data16
in
mov
dec
sbb
xchg
fdiv
cmp
mov
adcl
adc
xlat
jns
pop
pop
mov
lahf
mov
jl
leave
repnz
jmp
and
mov
scas
add
lcall
add
lret
bound
sbb
push
jo
fidivrs
scas
pop
mov
xchg
loopne
push
mov
mul
pusha
les
jg
cltd
pop
addr16
inc
das
cmpsl
stc
sbb
pushf
rclb
jo
imul
xchg
fsubl
orb
jge
into
sub
pop
aad
cmova
jns
scas
sahf
out
arpl
jp
mov
pop
in
sbb
movsb
add
test
sub
xchg
sbb
push
sub
leave
sbb
cmp
jae
pop
in
movsl
in
adc
insb
fidivl
dec
push
push
cld
jmp
sub
sbb
popa
aaa
cmp
or
and
inc
ficoml
or
mov
js
and
in
mov
nop
cmp
cs
cs
stos
std
loopne
mov
pop
cs
jge
mov
int
pop
dec
stos
test
mov
aas
xor
in
cwtl
pop
sbb
arpl
mov
js
sub
enter
xchg
test
or
xor
fistl
mov
fwait
inc
addr16
adc
inc
insl
and
jmp
aam
push
sub
sbb
bound
sub
mov
rclb
cmpsb
mov
mov
bound
mov
pop
and
push
mov
lcall
hlt
imul
cltd
xor
int
insb
dec
dec
pop
xor
jae
pusha
xlat
addl
xor
and
dec
pop
lds
sbb
inc
cwtl
out
mov
lea
out
lret
movsb
cltd
pop
stc
xor
jg
out
mov
push
jl
dec
and
pop
imul
clc
or
scas
out
bound
sub
sub
mov
adc
push
inc
push
aad
lret
and
or
leave
inc
mov
rolb
xor
in
lahf
idivl
inc
lret
add
into
pop
arpl
pop
push
cltd
shrb
fisubs
xchg
aam
jle
pop
add
aad
movhps
nop
test
jg
out
pop
je
dec
or
arpl
mov
bnd
loop
jo
mov
and
or
and
cmc
std
out
out
sbb
sbb
mov
xchg
ljmp
add
xor
fcmovu
outsl
xchg
push
std
in
jo
outsl
mov
mov
into
ret
jge
xor
jbe
aad
jge
add
sahf
push
in
decb
cli
lods
mov
lods
jg
xchg
mov
cmp
aam
fucomp
xchg
stos
in
mov
push
fistpll
sbb
rcll
lods
mov
jmp
lcall
mov
les
jne
int
mov
or
sbb
shll
shrb
pop
stc
jmp
xor
xor
cmp
add
fs
push
nop
icebp
repz
fbld
andl
mov
repz
adc
fdivrs
clc
das
repnz
push
xor
shll
call
pop
int
pop
inc
mov
stos
pop
fidivs
mov
sub
outsb
adc
ret
out
leave
scas
push
adc
push
call
sub
cmp
daa
cmc
jbe
sbb
adc
fnstcw
loope
cmp
cmp
jmp
je
ret
adc
fcompl
test
in
xchg
jl
pop
push
in
adc
xchg
mov
xor
lods
lcall
enter
mov
xlat
inc
mov
jmp
aam
inc
inc
stc
and
fs
in
xchg
pop
data16
andl
pop
cmpsb
icebp
push
lods
insb
shll
or
jl
dec
mov
lret
les
adc
test
bound
adc
aaa
data16
sub
mov
and
cwtl
out
in
les
or
sub
fbld
xor
scas
sub
inc
fstpl
push
out
mov
arpl
dec
data16
data16
mov
add
sbb
add
push
ror
in
call
loopne
pop
fidivrs
sub
sub
das
mov
push
addl
or
bound
mov
lods
sub
test
xchg
mov
dec
sbb
dec
bound
sbb
dec
xchg
add
mov
popa
fdivrs
xor
fisubl
cs
push
jg
jp
imul
cmp
je
inc
pop
xchg
loope
gs
dec
xor
ret
or
jecxz
mov
into
push
shll
xchg
adc
adc
pusha
mov
xor
rcrl
in
lods
loope
push
mov
dec
push
sub
pop
cmpsl
outsl
xchg
loop
repnz
xor
xor
dec
push
inc
enter
inc
loopne
pusha
sbb
pop
aas
aam
addb
push
xlat
fcompl
shl
imul
or
inc
loopne
dec
jno
les
mov
fadds
scas
dec
fisubrl
daa
xchg
pop
cli
xor
fcmovnbe
mov
cli
call
sub
cld
arpl
jb
fldenv
mov
js
xor
add
dec
aas
cltd
cmc
xchg
sbb
arpl
sub
out
push
movsb
push
jmp
push
andl
pop
mov
in
mov
mov
push
je
or
rcll
out
les
lods
inc
fidivrl
xor
add
adc
repz
jl
pop
adc
mov
test
test
mov
inc
arpl
sahf
xorl
andb
xor
and
dec
fimull
add
sbb
jge
int3
scas
cmp
es
outsb
mov
sbb
sub
aam
fdivl
ja
je
mov
cmpsb
or
jne
xor
xchg
dec
xor
cmp
pusha
es
add
ja
xorb
jge
mov
int
test
call
dec
and
push
pop
inc
jg
push
xor
xlat
pop
icebp
sbb
jg
push
push
fisubs
fiadds
int3
jne
sbb
jno
popa
cmc
or
loop
jg
adc
mov
jp
test
pop
add
mov
push
or
ja
push
jg
xor
int
jge
cmc
mov
sbb
movsb
test
imul
stos
pop
adcl
lock
shr
sub
aaa
mov
fcomps
mov
pushl
fsts
pop
call
push
cli
test
sub
dec
mov
cmp
clc
pop
pusha
lcall
mov
push
adc
inc
push
push
and
inc
push
cld
call
testl
cmp
push
push
cmp
add
test
out
cmp
icebp
pop
dec
sub
adc
xlat
ja
into
cmp
pushf
pop
cmp
sub
adcl
cmpsl
pop
or
or
jne
imull
lret
pop
push
push
test
xchg
aam
fldl
dec
rcll
or
mov
inc
fsubl
push
push
movsb
inc
cmp
outsb
ljmp
mov
sub
jl
xor
jl
aam
adc
ret
testb
in
jl
or
rcrl
adc
push
sbb
hlt
mov
mov
pop
ljmp
pop
jecxz
ret
mov
cld
adc
jns
mov
cmpsl
jbe
push
push
decb
adc
sbb
js
nop
inc
cmpsl
fistpll
lods
mov
sub
jo
popf
lds
shll
out
sub
dec
mov
movsb
shll
stc
sub
mov
mov
mov
push
xor
pop
aas
mov
movsb
icebp
jmp
mov
cmp
adc
insl
cmpsl
das
arpl
mov
enter
mov
neg
adc
out
xchg
cmpsl
dec
cmp
ss
loopne
inc
xchg
jg
data16
loop
outsb
scas
jo
jecxz
lea
push
iret
fstps
inc
adcb
adc
mov
fstps
jnp
pushf
jp
jge
pop
sub
stos
push
incl
int
sub
std
iret
push
sbb
add
aas
inc
push
dec
imul
insl
dec
inc
xor
sub
push
test
or
jl
mov
mov
mov
fwait
add
adc
loope
orl
mov
scas
and
js
fimull
lahf
ja
xlat
out
fists
dec
test
add
push
lahf
dec
jl
imul
pop
loop
or
xchg
shl
xchg
push
jns
stos
inc
leave
lods
in
or
lcall
bound
dec
stos
jmp
xor
adc
cmp
repz
movb
clc
stos
insb
mov
add
or
jns
std
dec
icebp
cmp
dec
mov
push
push
add
or
mov
xchg
mov
sub
sbb
adc
call
ds
add
xor
aaa
mov
sub
jno
push
enter
stos
or
push
fdivs
mov
js
and
dec
testl
sbb
mov
add
pop
xchg
and
stos
bound
jmp
push
jge
mov
add
pop
xchg
out
minps
jo
sbb
test
cmpsl
and
pusha
sarl
sarl
in
lock
adc
and
sbbb
hlt
or
mov
or
add
inc
mov
cs
fcomi
cmpsb
adc
xor
inc
push
cld
fs
pushf
mov
xchg
inc
or
jp
negb
test
inc
out
inc
xlat
jbe
or
in
sub
xlat
xchg
sub
push
mov
mov
adc
sbbb
mov
xor
sbb
mov
or
adc
std
jmp
jbe
inc
nop
jl
push
jb
movsb
sbb
sti
mov
pop
call
xor
inc
rorb
mov
es
and
sub
loope
sahf
xor
fsubrs
sub
nop
dec
mov
jae
popa
imulb
mov
sub
push
gs
push
xor
xor
mov
mov
sub
cmp
lret
fwait
push
add
loop
adc
subl
fcoms
adc
fucom
xchg
adc
shl
aad
aad
jbe
inc
or
jp
enter
mov
popa
out
jecxz
inc
xchg
jg
dec
push
sub
push
mov
mov
jge
push
ret
loope
je
mov
cmp
aam
xor
repz
cmp
mov
or
jnp
subl
mov
fwait
mov
into
push
or
orl
ret
inc
push
mov
loopne
fsub
jb
sub
movsb
push
ret
inc
or
leave
nop
adc
mov
dec
leave
inc
fwait
lea
sahf
inc
dec
pop
adc
cmp
mov
sub
aad
cmpsb
adc
lcall
mov
lock
pop
sarb
mulb
xchg
in
xlat
nop
jecxz
clc
cmpsl
adcb
xchg
punpckhwd
mov
push
mov
xor
push
push
mov
les
nop
jmp
jmp
js
and
outsb
sub
aaa
jns
aaa
scas
xor
cs
xchg
lods
mov
or
fs
xor
xor
arpl
pop
sub
add
inc
dec
mov
fstpl
rcl
enter
mov
outsb
popf
or
jnp
shr
mov
fs
dec
inc
dec
mov
add
fs
adc
test
xrelease
jmp
aam
adc
xor
aas
idivl
int3
push
mov
pop
loopne,pt
jg
jg
adc
inc
test
xchg
mov
scas
adc
sar
jle
in
mov
mov
outsb
push
jl
mov
cmp
aad
mov
pop
rcrb
adc
mov
testb
jmp
dec
pusha
sbb
and
mov
jp
sub
into
icebp
shrb
in
add
lret
int3
test
xor
rcrb
pop
es
jns
mov
fs
lds
cmp
push
imulb
in
das
js
xchg
xchg
hlt
cmp
loopne
icebp
lock
jmp
mulb
xchg
xor
mov
sbb
leave
mov
fwait
loopne
jl
aam
fiaddl
aam
out
jnp
add
mov
adc
insb
adc
lods
inc
mov
push
sub
gs
push
adc
jb
icebp
lahf
mov
xor
sbb
adc
out
cmp
or
rcll
jecxz
pop
movsl
test
mov
out
ret
sub
sahf
sub
in
fstpl
out
xor
jno
gs
mov
fwait
gs
rorl
popa
mov
sahf
das
imul
jne
lods
jne
leave
mov
sub
lea
rclb
dec
lcall
shll
pop
out
push
pop
in
mov
sbb
leave
movsb
and
cmp
mov
in
aaa
or
nop
test
out
push
imul
rcrl
dec
cmc
fsub
aas
repz
jb
mov
jecxz
repz
mov
ret
in
in
leave
push
jo
mov
adc
es
ds
mov
pop
mov
aam
push
xchg
mov
jg
scas
dec
fstps
gs
fmulp
bound
in
jge
out
xchg
and
xor
and
add
int
push
insl
pusha
in
sub
in
loopne
xlat
aas
or
je
fsubl
push
arpl
fistpl
xchg
inc
jp
inc
push
xchg
add
push
xchg
ja
cmp
stc
mov
dec
push
ds
jg
mov
jns
cmp
mov
in
push
mov
cwtl
or
sti
xor
and
ret
ficoms
jns
adc
mov
mov
imul
cmpsl
test
out
mov
int
clc
sbb
jl
sub
aad
dec
xlat
cld
mov
in
das
inc
mov
cwtl
int3
mov
loope
pop
popa
inc
sbb
xchg
fisubrs
cli
fsubr
jmp
lock
sub
sti
jge
out
jge
in
scas
pop
xorb
mov
stos
jnp
outsb
inc
cld
int
xor
cmp
jge
jnp
test
sar
out
cmp
adc
dec
lret
mov
loope
add
pminub
aad
xlat
sti
mov
mov
jns
popf
jmp
sub
test
or
cwtl
repnz
fcoml
jae
cli
jbe
lock
sbb
call
jne
imul
lds
sub
pop
subb
lret
ds
mov
mov
outsb
dec
scas
fisttpll
cwtl
insl
das
scas
xchg
xlat
mov
test
daa
adc
mov
fildl
sbbl
xor
pop
lret
call
or
mov
xor
xchg
out
jmp
xor
imul
pop
dec
push
xchg
xchg
sub
mov
mov
lods
cmp
jl
cmp
pop
xor
int
push
das
pop
aas
ss
scas
outsb
pop
inc
mov
dec
mov
mov
pop
adc
xchg
sbb
mov
sbb
push
jp
xchg
xor
inc
lds
sbb
sbb
push
cmp
pop
stos
clc
lret
aas
dec
adc
cmp
mov
sub
in
or
mov
xor
das
adc
ds
sarl
and
sbb
inc
pop
pop
xlat
jne
xchg
adc
pop
pop
or
test
sub
in
aam
jle
xor
dec
add
pop
jb
xor
fwait
insb
mov
test
jecxz
mov
xchg
push
add
dec
mov
inc
mov
dec
inc
pop
cmp
xchg
repz
outsl
loop
jnp
fildl
mov
or
xchg
int
int3
andl
in
sahf
inc
pop
negl
test
andb
and
rcrb
in
push
cli
sbb
cmp
or
cmpsb
sbb
incb
jns
test
jns
mov
hlt
ret
add
dec
sbb
clc
hlt
xor
pop
xchg
test
and
ss
subb
xor
sub
in
inc
xor
jns
mov
out
mov
insl
push
je
pusha
sub
pushf
jle
jnp
outsb
outsb
jne
movsl
mov
cli
mov
mov
push
adc
jo
adc
js
xchg
les
fcomip
cmpsl
cmpsb
popa
sbb
std
xor
jbe
pop
dec
xlat
cmp
jb
adc
movsl
lock
mov
mov
cwtl
push
sub
and
cwtl
fnsetpm(287
push
push
loope
mov
test
mov
cmp
imulb
shll
outsb
leave
push
xor
sub
jg
sahf
jb
in
ljmp
xchg
sahf
jns
pop
dec
jo
dec
test
test
cmpl
frstor
sub
push
decl
and
and
fidivrs
stc
or
sti
jns
jno
xchg
xchg
or
xlat
fisubrl
inc
cmp
and
xor
pop
movb
adc
dec
pop
fs
sbb
cmp
cltd
daa
jo
push
dec
or
adc
in
mov
movsl
mov
stos
adc
xor
shr
xchg
sub
push
push
bound
jno
mov
mov
std
std
into
popf
dec
aam
xor
leave
cmp
iret
fistl
jl
cs
adc
repnz
sub
adc
xor
mov
mov
pop
movsl
int3
int
cmpsl
daa
inc
add
test
arpl
fcmovnu
movb
outsb
cmp
xor
fwait
sti
repz
aas
loop
das
mov
cmc
lret
jae
cmp
lahf
sarl
mov
rcrb
jle
mov
ss
sub
mov
std
inc
adc
dec
maxps
jmp
test
mov
fwait
aas
in
and
bound
add
add
das
jno
js
jmp
mov
sarb
outsb
les
pop
sbb
pop
cmp
ficoml
lods
ja
leave
lahf
fs
dec
and
jne
test
sub
xlat
iret
sbb
call
cltd
mov
popf
inc
aad
fidivl
adc
jecxz
jb
xchg
push
xor
push
std
stos
pop
push
jle
adc
repnz
leave
sbb
inc
or
test
shrl
cmpsl
in
push
lret
outsb
leave
pop
in
xchg
fsubrp
pop
movsl
jo
xlat
test
xchg
enter
stc
ja
imul
ss
adc
cmpsb
cmp
jmp
fxtract
inc
stos
jmp
push
in
pushf
fadd
xchg
nop
sub
les
jbe
out
adcb
test
push
xor
push
test
cli
insb
sub
adc
rcrl
scas
dec
cltd
lock
cs
push
testl
ret
jmp
pop
xchg
aam
stc
sahf
jo
popf
pop
js
pop
mov
in
push
xchg
cmpsb
in
fldenv
and
loopne
loope
mov
mov
push
or
jp
xchg
pop
and
movb
sbbl
pop
repnz
sub
add
adc
inc
inc
test
jno
and
in
mov
and
cli
xchg
cltd
sbb
and
iret
jmp
mov
dec
xchg
mov
sbb
or
adc
mov
mov
sub
mov
jle
aam
jne
mov
dec
push
jecxz
adc
sbb
movsl
movsl
push
jl
add
pop
hlt
dec
add
xchg
aam
out
out
mov
push
aam
mov
xchg
repz
rcll
adc
mov
sahf
mov
mov
inc
mov
xchg
inc
cmp
jo
cmpsb
icebp
fdivs
sub
pop
insl
mov
out
inc
sub
jb
gs
jnp
sbb
aam
mov
push
sahf
imul
mov
mov
js
add
cli
outsl
fildll
insb
loopne
jbe
fisttpll
rcrb
fnsave
inc
fs
pop
insl
inc
xchg
inc
std
sub
ja
std
stc
data16
stos
sbb
outsl
scas
jno
dec
jne
pop
int
iret
popa
pop
jg
inc
fcmovb
insb
test
ficoml
mov
neg
int
lahf
dec
fstpl
fidivrs
fcmovu
cld
insb
inc
cmpsb
mov
inc
sti
jecxz
call
bound
or
push
cmpsl
out
imul
out
adc
sub
clc
mov
xchg
push
fistpll
rcrb
dec
int
adcl
pop
or
mov
jns
rcl
lret
mov
push
out
inc
mov
push
rclb
push
lret
add
andb
sti
add
and
add
es
sbb
call
and
outsb
movsl
push
jecxz
xor
lcall
and
scas
int
jo
movhps
mov
stos
sub
aam
sub
or
inc
mov
push
adc
movsl
inc
lahf
out
mov
or
mov
neg
or
dec
jg
add
orl
das
out
fdivl
adc
lods
sarl
fadds
pop
push
push
jl
sbb
mov
lret
push
adc
adc
repz
mov
xlat
sbb
inc
insl
daa
ja
bound
test
call
sub
mov
aas
cwtl
arpl
inc
pop
pop
fidivs
popa
sarb
mov
mov
push
aaa
test
mov
xchg
push
and
mov
or
and
push
push
aaa
movsl
jmp
adc
cwtl
movsl
mov
shll
sbb
mov
mov
enter
sbb
movsl
rorl
cmpsl
adc
arpl
push
add
addr16
jbe
mov
lods
jmp
enter
mov
lret
cs
mov
mov
imul
pop
addr16
pop
mov
rcrl
idivb
sahf
leave
pushl
es
fmuls
out
mov
popa
sub
sbb
lret
into
fwait
sbb
int3
repz
into
mov
inc
xor
inc
jle
js,pn
call
add
or
stos
loopne
dec
pushf
push
mov
jmp
clc
insl
xchg
xor
push
iret
dec
push
xchg
sti
popf
xor
cmc
sbb
pop
xchg
adc
mov
sub
jp
repz
fadd
fstpt
jge
push
sbb
add
ficoml
ret
pop
shl
out
cmp
pop
pop
movsb
rorl
push
push
and
popf
lods
push
sbb
pop
xchg
in
test
and
clc
xchg
xchg
scas
push
mov
loopne
mov
add
mov
imul
sub
iret
add
pop
fimuls
andb
jbe
sub
jbe
cs
daa
xchg
xor
loop
jb
shll
mov
loopne
fisttps
aas
jo
inc
icebp
inc
jns
inc
cmpsl
cmc
orb
cltd
loopne
adcb
in
pop
add
fidivrs
add
rcl
jl
mov
and
rol
xchg
push
mov
push
mov
push
pop
int
xchg
roll
xor
arpl
sub
sbb
and
cltd
push
fwait
push
push
pop
aad
test
sahf
mov
push
xorb
pop
loope
rcrb
loope
fwait
aam
jbe
adc
rcll
mov
nop
cli
cwtl
cmc
popf
je
add
jecxz
fimull
pop
sarl
sub
in
push
popa
dec
or
repnz
mov
cmp
insb
jle
clc
iret
cmp
pop
mov
pop
aad
pusha
mov
inc
mov
es
icebp
mov
cmc
dec
insl
or
ss
jo
pop
cmp
push
icebp
repz
push
pop
xchg
pushf
mov
sub
mov
out
out
xlat
jnp
and
hlt
aas
mov
enter
jle
sbb
jne
pop
mov
daa
cld
inc
nop
adc
lret
jb
xchg
rorb
pushf
jo
js
movsb
jbe
stos
aaa
lcall
sub
or
jecxz
std
out
or
scas
mov
lret
xchg
imul
or
pop
push
mov
daa
mov
jno
outsb
mov
lret
mov
test
addr16
cmp
jne
cmp
ss
pop
cmp
sub
orps
cmp
insl
or
jge
and
pop
xchg
sti
inc
and
mov
or
bound
mov
mov
cld
cmpsb
pop
push
pop
adc
pusha
xor
lea
xor
je
scas
lods
mov
loopne
sub
jl
cmpsl
xchg
sub
cmpsb
fbld
jl
sub
push
lea
dec
fldz
sbb
out
mov
repz
stc
sub
cs
cmp
xchg
dec
adcl
xchg
repnz
cmc
mov
sbb
jb
outsb
sbb
shl
iret
sub
jp
xor
repnz
inc
popf
push
cmp
loopne
add
in
inc
xor
pop
mov
jno
repz
shrb
sub
daa
in
out
cli
outsl
push
fisubs
jbe
cmp
stos
stos
mov
pop
lock
shlb
cs
fdivrl
sub
push
mov
dec
sbb
mov
push
aad
cli
mov
xor
xchg
and
shll
lahf
out
imul
sub
jg
adc
jbe
clc
sbb
aaa
sahf
and
add
mov
incl
or
mov
sub
cli
cli
fimuls
fwait
enter
mov
arpl
jns
leave
mov
scas
xlat
mov
jp
ret
push
dec
push
mov
push
pop
push
aas
subl
shlb
or
xorl
xchg
sbb
and
mov
arpl
mov
rol
add
mov
fwait
test
jecxz
cmp
push
jnp
clc
add
mov
outsl
mov
pop
iret
and
dec
fcmovnu
scas
and
sub
pop
test
xor
sbb
or
push
or
ret
mov
push
sahf
xor
sub
stos
push
mov
adc
xor
repz
mov
dec
aam
mov
mov
pop
cmpsl
xor
stc
xor
fbld
es
fs
xor
incb
dec
ljmp
shlb
dec
xchg
pusha
cmpsl
sbbb
movsl
jnp
pop
pop
sub
in
aas
pushf
inc
pop
cmp
fwait
xchg
adc
sti
adc
clc
xor
push
in
cmp
add
repnz
mov
mov
and
sbb
iret
sbb
ss
call
in
dec
mov
jecxz
out
lock
dec
add
sbb
es
ss
aaa
in
test
dec
xchg
mov
dec
xchg
fs
sar
ficoml
mov
out
jae
push
dec
lcall
in
and
sub
xchg
into
fwait
dec
add
dec
in
or
fadd
les
adc
push
push
mov
daa
mov
jecxz
lea
imulb
or
xchg
clc
add
decl
mov
enter
lahf
ret
push
mov
or
cmp
lods
cmpsb
fdivl
int
bound
inc
mov
inc
xchg
jbe
push
pop
aas
mov
cmpsl
in
sbb
je
and
dec
cmp
cmpsl
xchg
push
call
sahf
std
push
orb
fs
dec
cmc
das
dec
push
arpl
popf
insb
cmpsb
xchg
insl
push
push
cltd
dec
idiv
sbb
loopne
push
inc
xor
lea
xchg
int3
sub
es
cltd
cmpsb
ficomps
sub
and
js
scas
cli
into
and
adc
cmpsb
adc
adc
push
push
call
movsl
push
ds
sbb
ss
mov
jge
xchg
scas
in
lods
fwait
testl
scas
cmp
test
push
jae
fidivl
or
lds
int
dec
in
sbb
pop
test
sbbl
popa
lea
lea
fsts
in
bound
popf
mov
mov
mov
iret
addr16
pop
or
sbb
mov
jno
mov
rorl
es
mov
es
outsl
cwtl
insl
adc
and
scas
ds
or
mov
lahf
jmp
ljmp
imul
fs
xor
mov
xchg
shl
cmp
xlat
pop
and
pop
das
bound
test
dec
xchg
push
cmp
or
lahf
lcall
jmp
dec
and
iret
pop
cmp
sub
inc
lods
push
xor
std
popa
push
inc
dec
lahf
icebp
xchg
jae
pop
test
mov
stos
xlat
cmc
mov
fwait
sub
xor
sub
imul
inc
adc
inc
xchg
js
fsubrs
adc
ret
addr16
fcmovnu
test
pop
push
adc
ss
add
push
mov
pop
sub
je
dec
cltd
dec
sub
dec
add
and
ljmp
lods
sbb
cmp
push
subb
addr16
cld
inc
loopne
idivl
arpl
das
xor
imul
inc
js
jnp
push
jb
stc
sbb
gs
insb
faddl
mov
es
inc
les
fsubrp
ss
push
pushf
stos
out
push
inc
fdivl
insl
cmp
cs
repnz
add
pop
dec
add
or
mov
imul
cmp
cmc
bnd
xchg
js
push
dec
movl
adc
pop
lds
xchg
lods
mov
insb
fbstp
test
xchg
std
pop
mov
loope
sub
cmp
sub
leave
adc
int3
bound
jp
xchg
pop
aaa
and
xchg
imul
dec
xchg
adc
inc
cmp
mov
push
lods
push
pop
jb
clc
or
mov
cmp
cs
adc
pop
in
or
inc
repz
outsb
stc
jp
pop
sti
movsl
jno
lock
imul
jb
addb
fdivrl
cld
js
xchg
or
and
mov
mov
rcll
mov
fiadds
and
xchg
mov
inc
dec
jno
scas
loope
js
fprem1
add
test
jmp
push
fnstsw
in
push
mov
or
jo
ds
xor
rcr
xchg
loopne
ss
mov
jnp
orl
xor
int3
cmp
fisttps
icebp
mov
rorl
jo
sti
test
in
push
push
mov
inc
inc
mov
mov
jb
sbb
xor
mov
cs
call
imul
push
or
jb
push
std
rsm
jp
fwait
ljmp
int
cmp
mov
cltd
lretw
pop
movsl
and
cmc
lds
jo
pop
sbb
ja
dec
int3
mov
daa
xor
in
in
jne
fstpt
pop
in
and
aaa
dec
mov
add
inc
jle
adc
push
subl
in
cmpsl
shlb
inc
jl
loopne
orl
sub
mov
sbb
mov
cltd
pop
lcall
sbb
adc
movsb
mov
push
push
ss
rorb
and
sar
mov
cmp
sbb
mov
mov
repz
roll
cmp
xchg
int
add
xor
dec
dec
rcr
dec
subb
ret
cmp
nop
push
xchg
push
loop
js
cmpsl
and
es
imul
push
sub
fcmove
sbb
xor
pusha
and
test
movsl
cmpsl
jns
jle
mov
and
sub
orl
cmp
mov
jp
aas
dec
fwait
stos
in
dec
int3
xor
push
aaa
loop
xchg
cmp
test
dec
bnd
cld
pop
ret
add
xchg
fbstp
cwtl
daa
cli
mov
pop
repnz
jl
lret
or
out
in
mov
popa
test
insl
dec
xor
lahf
push
repnz
mov
sbb
adc
jl
shl
adc
fdivrl
inc
dec
outsb
or
inc
mov
fbld
sub
cwtl
fbld
aad
pop
sub
rcrl
shlb
add
jnp
test
inc
mov
and
mov
lret
lret
paddusw
jg
mov
fildll
ds
pop
and
sbb
mov
jle
inc
push
pop
mov
sbb
dec
mov
xchg
jecxz
add
scas
outsb
dec
call
test
repz
sbb
xchg
movsl
jbe
xchg
scas
push
mov
and
push
adc
pop
xor
cwtl
loope
stos
repnz
xor
fwait
jg
inc
sbb
ret
mov
inc
inc
add
sub
lods
or
fsub
mov
lock
test
dec
rolb
adc
push
pop
cs
mov
mov
cmp
divl
leave
aam
dec
jge
xor
adc
and
mov
mov
xor
aas
int
jle
cs
inc
repz
jae
mov
mov
repnz
rolb
mov
push
stos
xor
fwait
sub
cmp
mov
imul
push
fs
mov
add
pusha
add
and
add
jl
xchg
fadds
js,pt
mov
scas
mul
jmp
push
push
inc
je
xchg
orl
dec
push
sti
out
lods
push
add
xchg
dec
cmp
xchg
cmp
xor
test
out
bound
fwait
dec
pop
sbb
mov
js
dec
into
pop
jbe
add
cmp
cs
mov
lea
mov
pop
dec
repz
in
ja
inc
xchg
xchg
pusha
mov
pandn
nop
mov
xor
movsl
pop
push
cs
xor
push
xor
mov
push
pop
push
scas
repnz
jae
jl
ret
dec
fldl
mov
jg
subb
jbe
leave
incb
sbb
stc
push
std
mov
jl
xor
fistl
dec
xchg
mov
out
nop
pop
addr16
fidivs
mov
lock
mov
inc
cwtl
jge
push
shll
hlt
mov
inc
push
push
sahf
lahf
push
rcrl
out
leave
mov
aam
mov
pop
cmc
or
push
and
dec
mov
dec
pop
test
sub
pop
xchg
aam
mov
jo
pushf
pop
movsb
fidivrs
fwait
in
pop
sti
inc
add
das
pop
cli
and
mov
sub
incl
sub
ficoml
push
sbb
addb
jne
xchg
pop
daa
fs
sbb
inc
dec
or
adc
ja
and
popf
lret
testl
hlt
dec
cmp
mov
in
stos
sub
jl
add
xchg
in
enter
sti
lret
decl
mov
cli
ficoml
or
and
popa
add
leave
ret
xor
push
fst
fstpl
and
scas
cmp
stos
xor
jb
fs
or
xor
loopne
insl
mov
lcall
or
adc
jp
mov
lock
jnp
xchg
cmp
push
add
xchg
movq
mov
arpl
jecxz
pop
leave
outsl
or
jo
rcrb
dec
inc
xchg
gs
aad
sti
xchg
icebp
jns
enter
subb
lret
jl
pop
sub
in
mov
ljmp
xor
and
leave
in
lods
insb
and
jecxz,pt
sti
ljmp
outsl
aad
jae
dec
add
shlb
pop
das
repnz
inc
push
lods
movsl
and
inc
mov
sbb
movq
enter
les
lcall
mov
in
lods
rolb
lock
es
mov
incb
mov
das
call
fxch
dec
daa
jmp
or
cwtl
pop
dec
mov
push
jns
adc
xor
push
add
and
jl
cmp
in
xchg
xchg
pop
and
inc
jb
std
dec
sti
fldl
mov
imul
clc
xor
cmp
notb
mov
lock
rol
mov
inc
sbb
insl
xchg
cmpsb
in
mov
cmp
stos
mov
mov
xor
mov
data16
stos
out
adcl
rorb
sub
mov
stc
mov
and
xchg
pop
jge
fcomps
add
bound
jp
inc
push
dec
xor
push
inc
jmp
xlat
sarl
xchg
xor
dec
xlat
jp
jae
sti
pop
inc
ficompl
jl
daa
popl
insl
outsb
dec
push
inc
cmp
mov
cwtl
pop
cmpsb
inc
jmp
lods
ja
fdiv
pop
cwtl
sub
sbb
adc
or
jne
sti
sbb
pop
mov
into
mov
cmp
in
leave
hlt
mov
jb
mov
loopne
rdtsc
lret
cli
dec
pop
ss
mov
adc
clc
inc
imul
stos
repz
sbb
ss
adc
popa
xchg
movaps
pop
pop
icebp
fs
cld
stc
jmp
cs
pop
mov
movsl
fmulp
inc
dec
repz
pop
cmpsl
sub
xlat
xchg
sahf
cmp
aas
cltd
nop
dec
stos
or
mov
cwtl
mov
iret
dec
fildl
imul
push
jnp
in
aad
xchg
xchg
cli
push
ja
fldl
mov
cs
test
sub
xchg
cmpsl
jmp
ds
xor
cmc
jo
inc
dec
ss
add
cmp
pop
sub
xchg
xchg
pop
jl
mov
ja
xchg
pop
scas
ljmp
out
dec
aam
loopne
in
fsts
and
call
sti
add
jne
leave
cmp
and
stc
inc
scas
pop
fwait
adc
inc
jns,pt
mov
gs
lahf
sub
pop
cmp
jp
xchg
lock
test
push
data16
loop
cmpsb
call
ds
insl
inc
or
arpl
jns
or
test
lods
ret
mov
ss
sarl
stc
out
mov
adc
xor
rclb
inc
pop
jecxz
clc
sbb
std
ret
mov
inc
sbb
out
dec
das
sbb
sbb
aam
shrl
or
mov
mov
hlt
xchg
jg
mov
in
stos
cmpsl
cli
sbb
adc
cmpsl
lret
sti
and
push
nop
mov
mov
pop
xchg
push
sarl
outsb
sbb
das
mov
in
ret
xchg
popf
rclb
or
movsl
outsl
lret
inc
lahf
add
add
stos
sbb
pusha
cmp
add
mov
push
xchg
in
sti
and
pop
xor
push
cwtl
dec
inc
fwait
imull
data16
xchg
or
push
xor
je
hlt
iret
shlb
xlat
pop
xchg
loop
outsb
into
xchg
jle
or
shl
add
xor
cmp
mov
pusha
dec
pop
ret
mov
pop
out
push
xchg
push
mov
scas
es
mov
cmpsb
xor
add
inc
adc
loopne
or
cmp
jnp
fistps
cltd
mov
sub
popf
push
cmpsb
popf
cltd
add
je
xor
xchg
lods
lret
movsb
lea
popf
stc
dec
test
inc
mov
call
add
pop
sahf
inc
mov
push
cmpsb
or
ljmp
jns
mov
decl
je
inc
into
add
push
pop
mov
cmp
clc
pop
add
dec
pushf
push
call
dec
push
addb
lods
pop
add
int3
mov
pop
cmpsl
loop
xorb
jge
push
add
mov
xchg
test
movsb
or
push
cs
fnstcw
inc
loope
push
into
mov
push
les
jp
fisttpl
dec
mov
lea
cmp
pop
mov
push
in
pop
cs
call
mov
js
in
adc
add
popf
cmpb
stc
lods
scas
ss
mov
test
ret
dec
out
jge
popa
sarl
push
push
jecxz
mov
pop
stos
cmp
xor
mov
divb
or
jae
andl
movsb
cmp
leave
ljmp
fdivrp
pop
lret
inc
xlat
in
jo
jp
mov
add
mov
xchg
loop
dec
mov
outsb
or
jg
inc
jl
repnz
enter
rclb
adc
gs
mov
rcrb
repz
xchg
aaa
ror
mov
ljmp
in
pop
lcall
outsl
shll
call
cmp
mov
mov
int
shrl
dec
xor
mov
lock
xor
sbb
mov
mov
dec
sbb
dec
cmc
ret
add
js
std
repnz
hlt
add
cs
insb
popf
cmp
push
fstl
bnd
xor
push
adc
imul
inc
pop
shl
test
lret
xchg
mov
pop
test
lea
mov
fimull
mov
jg
arpl
popf
test
xchg
xor
sti
pop
stos
push
loope
negl
sbb
mov
inc
xchg
bound
cmpb
add
call
push
inc
cs
sub
pop
cltd
xlat
add
inc
lea
push
lahf
es
mov
jmp
fcmove
xchg
and
insl
in
lods
xchg
push
loope
dec
sti
out
scas
scas
sub
gs
and
cmp
lods
sub
enter
pushf
scas
sub
lds
loop
or
scas
xchg
dec
cltd
dec
cmp
iret
mov
xorps
mov
cmp
cmc
out
and
scas
push
lcall
dec
inc
gs
lock
lods
fcmovu
add
bound
sbb
inc
test
mov
pop
cmp
movsl
int
nop
int3
out
sub
lock
mov
dec
je
arpl
mov
ljmp
cmpsl
sbb
das
lods
and
addr16
adc
push
imul
scas
stos
sbb
cmpsb
cs
jno
sub
int
mov
and
les
mov
mov
outsb
fbstp
add
inc
ljmp
test
xchg
or
ljmp
mov
arpl
mov
ds
lds
test
negl
mov
outsl
fcompl
mov
ficomps
out
mov
enter
imul
lods
pop
jae
mov
or
add
aam
ret
arpl
in
adc
sub
xchg
dec
stos
test
test
test
fwait
std
pop
sub
cwtl
and
xor
shrl
ficoms
cmp
sbb
xchg
in
mov
shll
mov
xor
pop
xchg
test
push
test
out
outsb
mov
loop
push
and
test
iret
mov
lret
xlat
bound
xor
in
fisubrs
push
addr16
jmp
daa
dec
sbbl
cmpsl
add
out
lahf
or
into
stos
sbb
mull
test
xchg
in
mov
and
arpl
push
add
pusha
inc
dec
faddl
enter
cmp
incl
xor
popf
mov
or
or
push
ret
adc
in
dec
cmp
mov
fcmovb
mov
mov
mov
daa
mov
mov
push
loopne
sbb
mov
in
and
gs
mov
inc
mov
shrb
and
dec
xor
lcall
push
in
sbb
adc
mov
mov
scas
cmc
cwtl
test
inc
pop
scas
pop
lcall
lock
sub
daa
addl
xlat
fidivs
out
orb
sub
push
shlb
inc
arpl
and
popa
fisubl
cmp
arpl
mov
mov
ret
leave
mov
push
fldt
cmp
mov
imul
jne
rorb
xor
into
jbe
aas
xlat
arpl
cmp
pop
repz
and
test
fnsave
cwtl
mov
dec
jb
popa
je
shrb
sub
pop
xchg
and
xor
fbld
into
push
dec
or
and
ret
imulb
scas
fs
shr
pop
fwait
mov
or
jg
mov
lcall
jns
bound
lret
popa
mov
repnz
pop
inc
push
incb
xor
sub
outsl
loopne
hlt
xchg
or
jae
push
jle
mov
add
mov
negb
add
insl
add
popl
fldenv
loope
xor
push
cli
es
jmp
stos
pop
mov
mov
sub
dec
inc
jl
dec
push
movsl
repz
das
cltd
inc
rorl
mov
sbb
fwait
leave
sar
and
mov
fcoms
mov
insb
push
orb
mov
inc
xchg
icebp
pop
jp
push
inc
cmp
ja
std
push
sbb
call
je
lods
loopne
outsb
mov
or
out
dec
dec
push
and
xchg
lcall
mov
dec
or
scas
fstp
stc
cwtl
push
lock
pop
lret
arpl
loop
fsub
dec
xor
popf
xlat
cmp
cwtl
repz
imul
mov
pop
mov
mov
jge
xor
pop
mov
mov
sbb
xor
nop
aam
inc
imul
mov
ret
cmp
rcrb
aaa
jne
shr
push
or
push
lds
mov
mov
pop
sub
xor
addr16
dec
lret
movsl
push
xlat
and
dec
sub
js
and
jb
es
into
mov
bound
adc
xor
pop
mov
cmp
dec
xor
mov
or
rol
lahf
add
jp
das
imul
jne
xchg
cmp
push
add
aad
pushf
cli
lock
pop
shr
clc
call
sub
out
sbb
int
adc
dec
mov
cwtl
out
outsl
xor
cli
jae
and
aam
dec
idivb
outsb
gs
sub
clc
arpl
add
iret
repnz
negl
fisttps
int
sub
xchg
push
inc
lock
push
inc
or
mov
repnz
jl
int
xchg
cltd
fstl
mov
inc
je
mov
mov
dec
fwait
mov
and
popa
and
js
jmp
push
mov
out
and
das
repnz
or
jae
inc
jo
and
ds
pop
mov
inc
inc
lea
mov
cmc
je
roll
ret
insl
xchg
jne
loope
or
cmp
stos
mov
bound
lds
and
movsb
bound
sbbb
or
mov
add
insb
push
gs
scas
aad
mov
inc
fucomp
dec
jg
pop
pop
mov
push
add
mov
push
stc
les
sub
rcr
insb
ftst
fmuls
inc
daa
xchg
sub
not
call
scas
or
jle
test
inc
mov
pop
and
adc
mov
addb
pop
roll
mov
mov
adc
xor
pop
arpl
jmp
jae
aas
dec
scas
cwtl
or
xor
cmc
xor
in
sahf
lahf
mov
pop
or
inc
pop
stc
cmp
push
sbb
inc
aam
xchg
insl
xorb
in
daa
outsl
ds
cmpl
data16
leave
pop
lea
mov
and
pop
sub
xor
sub
rcr
jb
push
sti
push
mov
insl
mov
jb
xchg
imul
jne
dec
or
cli
mov
test
push
add
and
lahf
mov
sub
repnz
lcall
jo
inc
aad
mov
jbe
xchg
ljmp
test
test
imul
out
ficompl
stos
xchg
js
mov
mov
lods
push
shlb
ret
ds
mov
and
mov
mov
lret
lds
cmp
mov
in
stos
xchg
cmpsl
ret
rcll
jno
sbbl
ficoml
loopne
and
lret
lods
mov
enter
cmp
jo
icebp
cmp
xchg
adc
sbb
xor
fnsave
lods
xor
loopne
ret
fwait
or
movsb
fmul
stc
jb
push
loop
or
outsb
fisttpll
add
mov
ds
cli
repz
dec
push
repnz
xor
pop
jnp
mov
inc
inc
out
mov
cmp
sub
sub
dec
bound
sbb
into
jbe
jecxz
push
shl
test
ljmp
mov
or
jecxz
push
mov
push
fildll
sub
dec
ficompl
pop
or
jecxz
mov
pushf
sub
out
popa
shr
jnp
loopne
jbe
out
hlt
cmc
mov
mov
pand
xor
mov
insb
ja
push
and
aaa
xchg
cmp
xor
mov
arpl
jne
mov
jno
pop
add
outsb
aaa
mov
add
mov
lahf
sub
repz
or
add
aas
lock
imul
popl
sbb
mov
jo
out
js
pop
lcall
sub
outsl
lret
dec
je
adc
cmp
dec
xchg
xchg
fistpl
idivl
pop
fbld
leave
inc
pop
ret
ret
std
push
xchg
repz
insb
sub
cltd
jbe
lods
lretw
shlb
stos
or
test
xchg
or
pop
shl
lock
stc
dec
das
lcall
sbb
or
and
stos
and
repz
add
ss
or
in
and
add
movsl
leave
rcl
insb
xchg
test
adc
mov
nop
scas
adc
test
mov
xor
lcall
mov
sbb
pop
and
jmp
mov
sub
dec
cmp
fsub
and
push
lret
fdiv
lret
mov
stos
int
or
xor
cmpb
and
imul
add
repnz
jp
into
mov
repnz
cmpsb
jl
daa
js
sbb
cmpsb
fidivl
sub
outsl
ret
mov
movsb
adc
cmp
sti
loop
ficompl
test
xchg
inc
call
inc
sahf
lret
in
push
lds
inc
pop
inc
push
roll
push
push
scas
add
test
loop
pop
dec
test
jmp
adc
cs
fadd
jmp
in
and
push
jne,pt
pop
outsb
inc
mov
and
or
je
hlt
scas
dec
js
or
sub
scas
cld
xchg
clc
icebp
inc
push
jo
jnp
push
shlb
adc
xchg
xor
push
mov
sbb
xchg
arpl
lods
sub
call
cmpsl
movsb
cmpsl
popf
mov
rol
cmpsb
mov
fdivl
sbb
scas
pop
mov
mov
pop
adc
dec
xchg
mov
incl
and
or
ficoml
mov
xchg
xor
dec
loop
aad
jg
mov
cmpsl
dec
dec
push
mov
and
push
add
dec
or
aas
fildll
dec
out
das
mov
sarl
shrb
cltd
pop
xchg
add
add
lods
pop
test
add
dec
out
pusha
pushf
mov
cmpsl
jg
adcl
pushf
jl
pop
je
lret
xchg
lret
dec
xchg
push
xchg
mov
dec
enter
mov
add
xchg
das
out
sar
call
test
mov
bound
xchg
rol
enter
movsl
fnstenv
and
mov
repz
adc
mov
icebp
adc
mov
insb
insb
das
mov
fisubrl
sub
sub
xchg
rcrl
test
mov
ja
adc
mov
lahf
or
sbb
mov
cli
sarb
test
adc
jbe
dec
cmp
sar
shrl
or
enter
int
les
dec
mov
sbb
lods
push
lret
out
stos
fs
jecxz
pop
test
push
imul
shl
and
and
stos
inc
clc
pop
sbb
dec
pop
xor
add
xor
in
sbb
adc
outsb
xlat
mov
outsl
sbb
aad
cli
lds
dec
inc
and
push
fdivl
jp
stos
mov
adc
adc
repz
add
push
jnp
push
shlb
jecxz
add
add
lods
and
shrb
xor
or
in
loop
out
xorl
mov
pushl
or
push
mov
rclb
inc
inc
sahf
add
mov
jp
sbb
fs
clc
out
adc
mov
stc
mov
mov
int
sub
push
or
pop
aam
or
jae
leave
or
js
cmp
pop
push
jle
mov
sbb
pause
mov
movsb
xchg
pop
stos
out
stos
aam
mov
into
lock
push
daa
jne
imul
sbb
or
int
jb
adcb
popf
push
jo
outsl
movsl
adc
aad
or
dec
jb
dec
hlt
xor
scas
mov
sbb
cmp
mov
push
loopne
push
xor
push
sub
inc
sub
out
push
jecxz
into
orl
mov
sahf
add
jae
loopne
int
sahf
es
pusha
jb
jg
outsb
lret
adc
add
cmpsl
mov
sbb
stc
jmp
lahf
sub
popa
popf
sbb
test
pop
cmp
mov
es
jmp
push
pop
rorb
sub
pop
repz
or
lea
lret
sub
push
iret
inc
repnz
pop
mov
daa
adc
lcall
cmp
dec
or
test
inc
or
outsb
ljmp
ret
cmpsl
xchg
pop
lahf
push
mov
push
popa
sub
je
xlat
mov
mov
aas
add
cmp
xor
mov
xor
sbb
sub
push
addb
push
mov
test
cld
sbb
lea
and
rol
xchg
mov
sub
dec
cmpsl
adc
lret
gs
jno
sbb
push
in
xor
xor
std
ss
sub
aas
xor
or
inc
insl
in
into
adc
and
lods
int
imul
rorl
movsb
cli
data16
inc
cld
jnp
sub
sub
arpl
cmp
mov
sub
inc
pop
nop
aas
jns
mov
fwait
int3
sti
hlt
std
mov
pushf
jno
bnd
sub
pop
addl
pop
cmp
stc
adc
pusha
flds
and
cmp
sub
dec
cmp
jae
push
test
lock
or
xchg
xor
inc
or
push
xor
popa
cld
cli
xchg
lret
mov
stc
mov
and
outsl
cmp
mov
sahf
push
dec
pop
push
pop
sbbb
cmp
jns
push
cmpsb
cli
jns
bt
push
sar
scas
or
nop
lret
lods
test
js
jp
xchg
out
in
add
addr16
je
out
bound
pop
pop
movsb
pop
js
loop
scas
lods
and
mov
rcrl
pop
push
mov
or
in
lods
clc
sbb
inc
pop
xchg
mov
outsl
out
fdivl
ret
fstpt
push
es
arpl
into
adc
iret
or
mov
inc
pop
out
pop
lret
cltd
bound
sub
jnp
jns
icebp
in
cmc
or
je
jg
xor
cmc
cltd
stc
mov
flds
fnstenv
cmp
sub
xchg
sbb
jl
lret
add
cmp
cmp
nop
test
addr16
in
outsl
mov
jae
rclb
sbb
mov
stc
dec
cwtl
repz
push
mov
repz
inc
sbb
inc
sub
push
outsl
adc
out
cmpsl
and
out
or
xor
xchg
aas
inc
pusha
out
xchg
adc
data16
mov
pop
xor
or
pop
adcl
jmp
sbb
loopne
mov
iret
mov
xorb
mov
daa
or
lods
negb
cmp
fsubl
les
loope
nop
shll
pop
cmp
jne
add
pop
outsb
sbb
scas
gs
mov
imul
jg
imul
xor
xchg
or
outsl
mov
test
sbb
or
rcll
incl
pop
loopne
cmp
into
and
mov
dec
out
stos
push
movsb
sti
int
push
in
jbe
cs
scas
lret
mov
or
add
shr
push
and
iret
adc
lds
xchg
loopne
mov
pop
in
cs
xor
int3
push
xlat
add
lret
pop
mov
push
push
dec
mov
push
ret
push
xlat
out
ss
or
pop
xchg
and
pop
test
or
daa
popf
mov
arpl
mov
and
or
ds
rcl
insb
outsb
cmp
rclb
push
jae
xlat
sbb
nop
jae
jno
dec
cmp
jg
xor
cmp
mov
xchg
or
mov
xor
idiv
or
dec
rcl
push
rcl
lahf
pop
push
jbe
or
xchg
mov
fsubl
sub
cmp
jle
repnz
shrl
and
jge
xor
jmp
sbb
loope
out
ret
mov
icebp
ja
lods
inc
mov
cmpsb
mov
push
out
or
iret
sbb
cld
icebp
repnz
mov
in
and
out
pop
orb
mov
cwtl
nop
mov
fnclex
je
mov
push
jo
in
je
loopne
cs
out
xchg
icebp
jge
sub
test
mov
repz
test
adc
add
loopne
clc
loopne
jns
loope
jl
cmp
mov
mov
inc
loope
jb
test
adc
add
div
mov
out
mov
and
sub
sbb
fstl
lcall
xchg
push
sahf
popf
scas
in
add
loopne
mov
jnp
mov
sbb
inc
add
out
cli
int3
mov
call
xor
jns
mov
out
cmpsb
pop
push
out
mov
mov
sub
mov
jmp
dec
push
rcr
aaa
mov
mov
andl
clc
mov
sbb
lret
out
sbb
and
add
push
sbb
stos
out
or
xor
cwtl
xor
dec
cmp
out
dec
mov
inc
pop
xchg
adc
repz
inc
cmp
sbb
cli
test
pop
or
mov
cmp
push
das
sbb
inc
xor
shl
insl
nop
imul
push
pusha
lret
enter
sbbl
ds
in
adc
ret
mov
push
pop
and
stos
je
addr16
or
hlt
sub
ljmp
cltd
into
inc
push
mov
rcr
nop
mov
hlt
and
test
pop
xchg
dec
pop
mov
sub
fsts
mov
jo
push
popa
or
cmc
cmpsb
and
jns
lahf
and
sbb
mov
xchg
or
push
lds
ds
push
test
ljmp
testl
aad
cs
push
jg
xor
mov
int
sti
test
push
sub
stos
sahf
pop
sub
and
cli
arpl
pop
xor
inc
sbb
test
andb
inc
xchg
sub
inc
out
jae
xor
jno
xchg
pop
mov
test
jnp
and
xor
lea
mov
mov
in
and
inc
lds
addr16
mov
loop
std
cmpsl
ds
xchg
pop
mov
fs
int3
ja
sub
lds
ljmp
mov
loopne
lea
mov
cmpsb
insb
pop
loopne
lock
ljmp
test
dec
rcll
push
jnp
dec
popf
xor
je
push
loope
jecxz
cmp
fstps
jno
mov
in
push
inc
inc
stos
iret
inc
cld
inc
xor
adc
mov
repnz
inc
mov
pushf
mov
inc
popa
jmp
and
sub
mov
jno
in
push
push
lods
jge
test
cltd
mov
fidivrl
cmp
std
cli
jae
mov
fwait
xor
adc
cmp
fcomip
mov
sbb
or
xor
adc
dec
outsl
cs
xchg
popa
dec
push
icebp
ret
mov
sbb
jnp
jbe
mov
into
cmp
add
add
in
jg
jecxz
push
adc
add
sti
popa
adc
stos
xor
pop
pop
sub
adc
std
fld
xor
add
cmp
aaa
mov
sti
add
dec
jb
fldl
cmove
mov
and
iret
cli
mov
mov
push
cmpb
in
repz
mulb
rorl
inc
xchg
cmc
ljmp
mov
or
mov
aaa
lea
lea
out
pop
enter
sbb
jnp
cltd
mov
int
lcall
cli
insb
fcomps
xchg
jl
imul
ja
jbe
stos
or
in
movsl
xor
mov
inc
pop
movsl
push
cmp
repz
inc
andb
xor
adc
ret
cmpsb
mov
mov
daa
iret
lds
dec
mov
or
add
xchg
es
cli
dec
aad
jno
push
add
jnp
nop
lcall
mov
push
in
jmp
inc
xlat
fsts
inc
sub
pop
inc
icebp
mov
inc
jae
cmp
adc
lock
cmp
out
sbb
jo
lret
aad
mov
pushaw
shll
cmp
add
adc
xor
lods
les
pop
jb
lret
mov
adc
mov
mov
hlt
orb
push
push
or
push
inc
int
or
aam
push
int
ljmp
sti
pop
dec
imulb
dec
cmp
xchg
jne
rcrb
dec
sbb
or
jae
inc
pushf
and
xchg
or
push
xchg
call
ret
scas
mov
repnz
sbbl
dec
jnp
fdivs
add
fs
fsubs
jge
enter
mov
dec
hlt
dec
pop
and
sub
movsl
cmc
rcrb
shl
push
in
sbb
xor
fs
nop
sub
cmpsl
inc
out
nop
fcomip
xchg
pop
nop
or
mov
mov
xchg
mov
mov
fadd
sbb
xchg
in
or
jmp
mov
lods
pop
jle
pop
jp
push
and
mov
movsl
add
xor
dec
push
jnp
add
sbb
lock
inc
xor
add
mov
xor
out
mov
cmp
js
repz
es
adc
in
sub
mov
xchg
popa
rcr
inc
push
jge
sbb
add
ret
sub
xor
mov
mov
cltd
mov
inc
jle
pop
fiaddl
loopne
stos
data16
ds
sub
loope
lock
addr16
inc
or
aas
jge
push
push
sbb
push
mov
insl
add
andb
pusha
adc
dec
loope
dec
mov
push
pop
lods
inc
stc
cmp
or
daa
dec
dec
push
dec
jmp
inc
aad
mov
push
add
cmp
imul
sbb
inc
jl
cli
mov
dec
or
test
lods
sbb
fists
cmp
fisttpl
sahf
roll
js
out
je
or
test
push
out
xor
adc
loope
pop
int3
fildl
inc
adc
mov
scas
xchg
sti
jne
arpl
mov
rolb
mov
popf
dec
fcomps
mov
in
mov
xchg
xor
adc
xor
xchg
xor
sub
pusha
cwtl
add
mov
adc
mov
jb
inc
int3
jl
jmp
into
cmpl
fcomps
pop
lahf
outsl
repnz
cmp
xchg
jnp
sahf
mov
sbbl
mov
and
mov
testl
sbb
les
adc
sbbl
mov
ret
jp
lea
lret
lods
cmp
fisubrs
sar
pop
je
repnz
and
inc
outsb
std
lahf
jmp
mov
fadds
sub
adc
cmpsl
xchg
mov
push
adc
mov
mov
jne
dec
add
cmc
nop
push
inc
adc
pop
inc
ret
aaa
clc
enter
xor
dec
bswap
shrl
xlat
repz
aad
dec
movsl
adc
jno
enter
jge
pushf
jnp
hlt
fistps
and
mov
cmpsl
pop
sub
bound
aaa
jbe
shrb
dec
jmp
mov
rcrl
push
shlb
in
outsl
cmpsl
notb
adc
aas
cld
es
gs
psadbw
mov
lcall
ficoml
fs
mov
stc
sbb
dec
jnp
push
clc
and
fcompl
mov
jo
pushf
call
imul
vpunpcklbw
aaa
addl
pop
dec
adc
mov
xchg
dec
imul
aas
sub
xchg
insb
in
adc
lock
mov
cld
push
pop
xor
sub
inc
ljmp
repz
mov
das
les
inc
lahf
xchg
inc
xlat
shrb
jecxz
xchg
cmc
mov
ror
xor
fldt
ljmp
pop
fisubs
pop
pcmpgtd
pop
adc
xor
int3
jb
cld
mov
movsb
or
std
push
xchg
sbb
cld
jle
data16
hlt
pushl
rcrb
push
sbb
icebp
pop
daa
mov
sub
pop
insl
mov
inc
add
xor
jg
sahf
add
in
mov
adc
fisttpll
jmp
inc
popf
jecxz
testb
sub
cmp
ds
pop
stos
mov
repnz
or
sbb
push
cmp
les
nop
sbb
cmp
push
cmc
push
dec
daa
cmp
in
es
mov
lahf
push
shrl
xlat
mov
imul
sbb
push
insb
flds
iret
push
and
mov
leave
out
mov
dec
sub
es
std
daa
xadd
nop
cld
or
dec
mov
cmc
and
cwtl
rcll
or
pop
imul
out
dec
mov
mov
iret
out
jb
hlt
push
js
inc
xor
sti
jg
inc
xor
jmp
fstps
sub
test
bound
xchg
xchg
int3
jb
dec
push
cmpsl
add
mov
add
imul
idivb
movsb
cmp
lcall
arpl
sahf
adc
jle
aad
push
popf
sahf
xor
setae
pop
xchg
rclb
or
arpl
outsl
sbb
mov
pop
aaa
data16
xchg
mov
daa
pop
popf
cmpb
ljmp
out
add
xchg
jl
shr
fcmovnu
das
cmc
jecxz
sub
mov
pop
rorb
dec
fs
and
adc
fmuls
arpl
jg
daa
mov
xchg
xchg
and
shl
xor
or
add
or
inc
mov
outsb
push
lds
pusha
popf
mov
pop
push
sti
mov
mov
pop
mov
dec
test
cltd
push
and
push
sbb
or
int
pop
nop
sbb
add
mov
xor
iret
sbb
daa
jns
push
xchg
test
movsb
fbld
push
fcoml
pop
ljmp
xchg
mov
mov
insb
loope
sahf
sub
and
xchg
mov
or
push
mov
vmwrite
rcrl
popa
bound
or
and
cmp
cmp
daa
mov
jp
jb
repz
push
dec
xchg
pop
bound
xor
pop
mov
cmp
fisubl
subb
mov
lods
mov
and
jbe
aas
pop
jno
insl
dec
cmp
cmc
clc
or
cmp
sub
ret
jne
inc
sub
pop
inc
push
inc
cs
loopne
ja
xchg
cs
pop
pop
cmp
mov
mov
push
bound
jbe
cmpsb
stos
mov
lock
xorb
sti
xchg
xchg
mov
movb
loopne
jne
mov
es
pop
mov
pop
decb
mov
shl
sub
dec
add
sarl
xchg
test
insl
push
ds
jne
jle
and
cld
mov
cs
js,pn
push
lret
arpl
pop
loop
mov
stos
daa
shrb
les
ret
push
rolb
outsb
scas
jp
dec
pusha
xchg
lea
mov
lods
xchg
lahf
int
daa
mov
jbe
cmp
inc
xchg
cmp
insb
xchg
andl
adc
cld
js
sub
lret
push
loopne
jbe
mov
pop
scas
mov
adc
sbb
or
test
ror
mov
cmp
shl
loop
cmpsl
popa
cli
data16
and
xor
xor
insw
push
add
mov
mov
xlat
aam
dec
jge
inc
test
aas
imul
dec
xor
outsb
xchg
daa
adc
int3
inc
adc
test
jns
jp
adc
gs
push
cmp
sub
punpckldq
or
std
adc
dec
lds
mov
pop
cmp
dec
test
inc
lds
in
andb
loopne
pop
leave
xorl
or
and
lds
das
clc
push
ja
jmp
scas
nop
vpaddusw
xor
out
shl
movsl
insb
das
fmul
pop
mov
push
xor
jl
or
mull
aad
add
pop
pop
ret
dec
or
in
shll
fmul
pop
add
repnz
ds
shrl
roll
js
int3
outsl
movsl
into
or
inc
pop
testb
xchg
lock
test
lahf
pop
inc
or
data16
int
outsb
jns
cmpsb
adc
inc
mov
les
int
sub
xchg
xor
repnz
adc
aaa
orl
popa
xchg
pop
or
push
adc
cmp
inc
or
daa
cltd
mov
sbb
sub
shrb
sbb
loope
jne
insl
cmp
pushf
fcomps
pop
adc
aad
pop
add
jge
sub
in
inc
inc
scas
pop
sub
pop
inc
cmp
push
xlat
jne
sbb
jb
test
jae
jne
in
stc
or
pusha
add
pop
xchg
push
lcall
fiadds
out
cli
xchg
sbb
pop
sbbb
pop
repz
arpl
pop
xchg
in
cmp
nop
cli
adc
pop
aaa
in
mov
jae
dec
sbb
and
mov
xor
mov
inc
pop
std
loope
xchg
movaps
mov
pop
jge
inc
cmp
fs
sub
dec
out
pop
inc
mov
enter
shl
fnstenv
mov
adc
pop
loop
cs
pop
dec
pop
idivl
movsl
add
mov
pop
jle
gs
xor
repnz
hlt
mov
dec
movsl
or
ljmp
mov
mov
xor
out
in
add
cmpl
dec
mov
clc
adc
xchg
pop
sub
dec
add
dec
sub
or
push
xchg
insl
sbb
push
mov
aad
jbe
add
roll
sbbl
andl
insb
fsubs
out
xor
inc
lcall
in
cmp
push
xchg
shrb
shrb
out
test
mov
mov
mov
mov
fidivrs
sbb
sbb
inc
push
pusha
push
cmp
fdivrs
pop
mov
subb
push
dec
cmp
enter
lea
inc
mov
and
orb
cmp
dec
das
and
xor
dec
inc
add
pop
cmp
enter
dec
arpl
enter
push
adc
or
xor
daa
dec
iret
ljmp
fdiv
mov
mov
pop
mov
fistl
nop
arpl
sub
inc
add
push
outsl
dec
mov
pop
jno
cmp
dec
stc
xor
aam
imull
push
jg
sar
and
xor
adc
aaa
mov
lods
jg
push
aas
lds
lea
or
mov
arpl
loop
add
mov
mov
sub
pop
inc
push
ret
sbb
repz
fldenv
loopne
das
cmpsb
pop
das
repnz
jno
cmp
xchg
aaa
popa
dec
mov
insl
jl
jp
fbld
iret
adc
ret
pop
adc
jl
testb
cltd
in
scas
cmp
pop
xchg
mov
movsl
jle
inc
testl
push
jecxz
adc
loop,pt
xor
jno
in
popa
add
pop
inc
lock
je
dec
lret
dec
ss
push
xchg
xor
xor
pop
xor
mov
jns
inc
mov
insb
pop
adc
mov
or
or
mov
sar
add
push
test
arpl
pusha
out
xchg
or
mov
arpl
xor
fwait
out
and
xor
aam
in
insb
add
sbb
push
pushf
inc
mov
dec
int
test
mov
hlt
popf
movsb
loop
cld
fnstcw
es
adc
insl
push
mov
outsb
pop
inc
xor
test
dec
xor
sysret
cld
jecxz
pop
dec
adc
insb
mov
enter
cmc
sbb
lret
je
push
sar
stos
adc
xchg
ret
fisubrs
fld
or
mov
loope
adc
and
mov
lods
ljmp
mov
imul
aaa
data16
pop
cmp
mov
adc
mov
mov
pop
inc
and
es
popf
jbe
fadd
pop
cmpsl
mov
fcomps
mov
fsts
call
mov
mov
inc
scas
and
lds
adc
divl
sub
das
test
imul
cld
call
cli
push
push
sbb
sub
loop
in
fisttpl
dec
lahf
xchg
loope
cmpl
mov
out
adc
sbb
stc
push
aam
cli
out
loopne
dec
pop
sahf
push
repnz
fs
inc
repz
mov
stc
stos
mov
pop
mov
je
movsl
jne
lods
and
test
fimull
incl
ret
sahf
xchg
in
dec
sbb
mov
aad
loope
call
inc
lea
insb
mov
mov
cld
mov
pop
rep
and
pusha
outsb
jmp
push
lock
outsb
orb
mov
loopne
sarl
clc
outsl
shll
cmp
in
jae
stc
mov
dec
jne
ljmp
pop
mov
mov
mov
iret
adc
mov
cmpsl
mov
test
add
pop
xchg
inc
jbe
and
das
sub
jbe
movsb
adc
mov
or
and
aam
fldcw
je
cmp
mov
sbb
cltd
repz
out
jne
ss
cwtl
arpl
sbb
and
xchg
adc
sub
and
insb
jo
jmp
pop
sbb
cmpsl
mov
cmp
mull
mov
out
ficompl
jnp
xor
jne
pop
sbb
cmpsl
lock
notl
aas
ftst
rcl
je
inc
mov
jae
push
fs
lea
stos
inc
jns
movsl
mov
in
fwait
pop
mov
imul
sbb
ret
mov
mov
push
ja
imul
push
repnz
push
push
fcomp
sbb
sub
repnz
popa
push
cmpsl
and
mov
xor
pop
cmp
stos
sbb
mov
inc
subb
xchg
pop
test
sbb
ss
sbb
mov
push
pusha
stc
xchg
outsl
pop
add
mov
inc
loope
jmp
lods
and
adc
xchg
adc
mov
lret
sbb
jo
add
or
cmp
idivl
jl
insl
mov
dec
mov
xor
scas
jmp
test
fprem1
jns
outsb
in
xchg
aaa
xor
jbe,pt
push
mov
std
test
xor
add
shrl
dec
push
push
mov
leave
mov
push
jne
mov
adc
dec
mov
leave
dec
insb
pop
adc
ljmp
test
add
iret
out
out
sbb
sti
xchg
popa
leave
jecxz
mov
data16
dec
imul
mov
jnp
std
xorb
mov
mov
movsb
loope
inc
dec
gs
out
add
gs
pop
pop
pop
jo
sub
adc
cwtl
jno
rcrb
mov
movsl
lcall
sub
sbb
mov
jmp
xchg
xchg
test
add
and
loopne
jne
mull
pop
filds
lret
fs
decl
outsb
push
mov
sub
add
icebp
xor
pop
push
stc
sti
cwtl
clc
ja
or
or
cmc
sub
jnp
jo
int
cmp
sbb
jg
mov
xlat
push
mov
xor
and
int
jo
out
or
xchg
imul
sub
sti
dec
shrl
insl
imul
jmp
movsb
or
cmp
ficomps
cmp
adc
mov
sbb
aad
or
in
aam
mov
or
dec
sti
outsb
xchg
cltd
aas
repnz
or
lock
popf
jnp
mov
push
jmp
mov
ja
push
or
xchg
aam
and
mov
sub
pop
mov
pop
cwtl
cmp
add
test
js
mov
pop
xchg
rcrb
mov
adc
dec
xchg
jbe
fildl
jbe
in
mov
je
mov
ljmp
push
mov
aas
push
and
cmc
dec
loop
jle
sbb
ljmp
dec
dec
rcrb
int3
inc
sbb
es
pop
or
dec
sti
movsl
jl
mov
sbb
sub
mov
pop
sbb
sub
or
mov
cld
xchg
adcl
jl
fcoms
mov
mov
loop
icebp
sahf
repnz
es
inc
ret
pop
movsb
pop
or
shll
fstsw
jmp
dec
aam
scas
inc
push
mov
loop
int
inc
test
out
movlps
std
dec
std
mov
lcall
lock
and
mov
add
cmp
xchg
xchg
test
xchg
sub
cmp
dec
mov
hlt
fcoml
mov
std
ljmp
add
cmp
dec
in
mov
xchg
rolb
nop
dec
loope
adc
pop
mov
adc
test
icebp
pusha
sbb
in
lahf
pop
out
aaa
cmp
adc
loop
in
stos
xor
bound
iret
aas
and
jbe
addr16
mov
dec
aam
sub
adc
scas
pop
movsl
fildl
mov
mov
into
stc
repnz
call
cmpsl
aad
pushl
repnz
popa
notb
int3
je
in
testl
iret
aaa
mov
inc
flds
loopne
mov
push
or
jl
pop
adc
cltd
lea
sub
test
add
fprem1
xchg
jb
xchg
mov
cmp
jbe
lods
jbe
or
lret
pushf
sti
sbb
add
lea
jb
and
push
add
in
test
pop
movsl
addr16
or
jae
dec
mov
mov
clc
jns
jl
es
cmp
mov
data16
negl
and
les
psubusb
inc
ret
or
rcrl
or
imul
ret
push
jo
in
pop
int3
mov
lods
notb
aam
sti
idivb
stos
das
push
shl
ds
add
mov
ficoml
and
pop
jbe
scas
es
insl
mov
lahf
shl
stos
mov
rcrl
outsb
mov
sub
imul
pop
mov
mov
clc
inc
sbb
mov
ja
mov
mov
mov
xchg
cli
aaa
sub
dec
mov
sbb
mov
lcall
aaa
mov
cli
pextrw
cltd
jo
int3
scas
cmpsb
dec
or
or
lret
js
sub
mov
cli
xchg
inc
jae
jmp
ret
push
pop
lock
mov
btl
ljmp
mulb
out
and
jecxz
xchg
in
js
sbb
pop
push
jle
push
add
mov
inc
mov
mov
and
jbe
push
add
sub
cmc
xor
xchg
pop
dec
jmp
lds
xlat
repz
int
sub
lea
xor
inc
sti
add
cmp
pop
add
clc
cwtl
or
mov
jbe
adc
pop
add
imul
daa
mov
test
xor
iret
dec
iret
iret
hlt
cmp
es
scas
xchg
js
cmpsl
push
mov
xchg
adc
cmp
in
mov
in
inc
add
add
sahf
andl
sbb
cltd
cli
or
inc
insb
cmpsb
dec
hlt
mov
imul
outsl
dec
rclb
add
mov
inc
pop
sbb
adc
add
and
pop
and
jne
int
popf
and
idivl
sbb
cwtl
mov
cwtl
aas
cmp
call
mov
in
sahf
aad
cmpsb
call
int3
push
ja
push
setp
sbb
mov
dec
push
add
negl
dec
inc
sub
pop
enter
ret
sbb
inc
xor
push
xchg
mov
pop
cmpsl
repz
cmp
repnz
pop
nop
popf
push
mov
pop
or
sub
or
lret
and
pop
cwtl
push
xchg
add
xor
cmp
fimull
sbb
cmpl
push
sbb
inc
shll
pop
divl
cs
cmp
pop
cmpsb
pop
push
imul
popa
loop
mov
jns
aam
mov
inc
out
dec
mov
rclb
add
addr16
in
inc
ljmp
out
fsubrs
out
subb
cmp
lock
dec
pop
pop
mov
and
mov
nop
cmc
xor
jp
mov
mov
jo
mov
adc
test
or
pusha
mov
inc
lods
and
popf
sbbl
sti
pop
sub
clc
das
inc
xor
cmc
lcall
subb
test
fstpl
mov
loope
stos
aad
aas
frstor
shrl
loopne
mov
nop
pop
xlat
aas
leave
and
nop
sub
push
jae
les
lcall
sub
fwait
and
fidivrl
popa
rcrl
mov
cli
shl
sti
repnz
out
in
sub
and
test
data16
int3
leave
cli
popf
adc
aam
loop
sub
push
cmp
lods
orl
in
xchg
out
rep
daa
adc
fistpll
jns
and
sti
xchg
cmp
insl
sub
adc
xchg
fnstsw
inc
sbb
xor
mov
xchg
inc
std
lahf
insl
imulb
pop
jbe
cmp
inc
imul
sub
inc
std
push
or
jle
adc
ds
push
in
insb
int
pop
fsubrp
aam
aas
js
iret
mov
inc
cli
jl
icebp
rcrl
jo
shrb
inc
mov
loope
fildll
cmp
dec
dec
sbb
icebp
lea
sub
mov
repz
sbb
or
sbb
femms
push
pusha
fildl
and
mov
imul
mov
push
push
jns
cmc
inc
inc
xor
xchg
psubsb
and
push
cld
in
jge
pop
add
mov
popa
xchg
cld
popa
adc
jno
mov
jp
xchg
jge
and
mov
lods
test
insl
adc
imul
cli
mov
mov
sbb
dec
stc
sbb
iret
imul
adc
xor
or
fcomi
jl
popa
popa
lock
mov
loop
sti
daa
adc
test
test
sub
repz
stos
bound
pop
lcall
pop
or
test
mov
push
inc
int3
sub
insb
orl
inc
call
movsb
pop
imul
std
lret
sub
push
fadd
adc
inc
sbb
xchg
inc
mov
xchg
jb
pop
aas
fdiv
fidivrs
xchg
and
cmp
stc
stc
sub
sub
out
fldl
pop
sub
sub
or
inc
iret
call
div
jecxz
dec
push
sub
mov
mov
push
lds
gs
or
aas
sub
inc
mov
ljmp
mov
int
insb
adc
push
fs
push
add
dec
jge
and
icebp
fsubr
cld
and
or
sti
jg
sti
cltd
xorb
in
fdivs
jo
push
inc
fcompl
xor
sbb
enter
sbb
roll
popl
jge
out
mov
jbe
xchg
lret
push
inc
push
xor
fidivl
pop
aad
xchg
inc
mov
les
mov
adc
lahf
mov
mov
pushf
ds
sbb
cltd
shrb
xor
and
outsl
cwtl
pop
out
mov
popf
bound
push
and
jo
shll
outsl
js
adc
adc
sub
lods
lods
dec
out
xor
fsubrs
mov
test
xchg
push
enter
sub
mov
push
sahf
sbb
es
fildl
out
pusha
stc
rcll
dec
fwait
je
fimull
inc
inc
push
je
rolb
xchg
shll
leave
rcrl
dec
test
out
xchg
fs
mov
into
sar
sub
ss
adc
ret
inc
mov
sbb
scas
repz
test
inc
and
sahf
repz
fsubrl
inc
push
daa
popf
xchg
lds
adc
add
ds
lea
movsb
push
xlat
lds
mov
mov
aaa
cli
and
ja
fldenv
sub
in
push
pushf
das
fnstcw
push
and
test
xchg
les
add
lods
sub
outsl
push
xchg
mov
fisubl
aam
sub
mov
fwait
test
aad
sbb
dec
les
das
roll
xchg
sub
repz
inc
ret
or
or
int
ss
les
testl
test
leave
mov
xor
std
mov
mov
arpl
icebp
cmp
jb
xchg
call
pop
inc
daa
cmpb
mov
sub
mov
sub
dec
jg
fwait
sbb
out
mov
mov
xor
push
notb
out
icebp
lfs
xchg
lods
dec
sbb
inc
cmpsb
loop
and
pop
test
out
add
icebp
xor
jl
push
das
mov
mov
in
cmp
dec
movaps
sub
mov
sub
adc
mov
shl
mov
popa
push
sub
jg
adc
popa
fs
fildll
jb
inc
mov
or
sbb
scas
sub
or
mov
sub
sbb
push
inc
lock
lds
loop
xchg
push
mov
fldcw
mov
cwtl
lock
insl
jecxz
jo
movsb
fsts
push
lea
in
arpl
dec
add
aaa
pop
cmp
xchg
lcall
dec
addr16
xchg
cmp
sbb
ljmp
cli
add
sahf
addb
jne
or
ret
adc
shrb
fs
fiadds
mov
mov
mov
inc
pushf
and
pop
cmp
sbb
stos
dec
shlb
lods
aam
pop
rdmsr
mov
pop
test
out
adc
insl
imulb
shlb
and
dec
test
and
faddl
mov
pop
sub
repz
ror
or
add
in
notl
push
push
push
sbb
lcall
inc
sbb
nop
lret
mov
aaa
mov
aam
and
or
xor
pop
inc
fwait
outsl
jbe
pop
add
push
sub
cmp
add
flds
push
pop
sbb
mov
outsl
jbe
dec
and
add
cmp
lods
daa
or
insb
and
cmc
int
daa
adc
dec
outsb
xchg
dec
js
lods
xor
inc
mov
pop
pop
adc
lock
push
push
das
add
loopne
push
sub
inc
and
cmp
push
sub
sbb
loope
scas
ret
push
jle
pop
fistpl
rorb
mov
icebp
stos
outsl
sub
jno
loopne
mov
mov
aas
push
cmpsb
insl
es
insl
sbb
mov
in
sub
inc
xchg
jp
inc
pop
jmp
cmp
popf
push
sbb
adc
stc
add
addb
test
jnp
popa
pop
mov
out
outsl
jbe
or
cmc
data16
je
into
inc
mov
ficoms
orb
mov
mov
mov
sbb
mov
dec
push
leave
jp
fs
pop
aaa
shll
sub
jo
sub
bound
xor
sub
inc
sub
sahf
dec
mov
stos
mov
int
out
out
data16
and
aad
mov
roll
xor
sbb
mov
dec
xchg
push
xchg
aam
fisttpl
push
jbe,pt
xor
lds
gs
out
in
cmpsb
push
loop
dec
or
test
sbb
enter
stc
push
aam
and
stos
mov
jns
and
shll
jno
mov
out
and
adc
test
inc
cmp
jmp
or
add
adc
into
mov
cmpsl
cmp
fwait
jp
pusha
scas
sbb
pop
mov
and
adc
gs
or
xchg
push
mov
xor
les
xchg
sahf
sub
lahf
or
jge
insl
pop
sub
mov
mov
mov
pop
movb
cmp
jge
jnp
dec
in
push
cmpsl
push
aam
add
loopne
or
into
push
and
pop
rol
call
or
int
mov
fs
mov
jg
pop
dec
lahf
push
out
push
ret
jecxz
mov
mov
or
in
mov
push
mov
xchg
pop
mov
cmpsl
pop
lcall
pop
add
mov
jbe
sahf
push
test
mov
ret
jnp
xor
mov
cmpsl
pop
std
push
fs
dec
mov
push
xchg
jns
mov
mov
add
pop
jge
xor
cmp
xchg
mov
add
in
jp
cld
xor
xchg
mov
rcl
inc
or
int3
push
test
mov
jmp
dec
xchg
inc
pop
cmp
popa
out
lods
xchg
pop
in
loop
movb
xor
cwtl
fsubl
adc
xor
fwait
lret
loop
std
clc
sbb
dec
insb
mov
out
sbb
xchg
pop
fidivrl
mov
dec
sub
inc
cmp
or
push
js
add
mov
leave
fcmovu
push
mov
mov
xchg
scas
jo
scas
out
sbb
jbe
stc
push
sub
stos
add
xchg
ret
sti
aam
push
jmp
dec
fdivrp
aad
aam
dec
mov
push
xorl
add
ss
pop
cwtl
lods
cwtl
cmp
sub
jb
repz
mov
push
popf
pop
out
push
sbb
push
sub
push
jno
and
lahf
stos
add
or
mov
in
jmp
out
fwait
fs
mov
stc
and
mov
inc
jb
ss
mov
pop
movsb
aaa
pop
je
cmp
dec
ljmp
into
insb
inc
ljmp
test
jb
pop
subb
repz
or
dec
mov
adcb
dec
ds
or
lds
addr16
pusha
loop
xchg
jecxz
jae
sbb
jmp
das
mov
pop
pop
mov
and
xchg
scas
pushf
out
lahf
incl
sub
ffree
outsb
test
sbb
mov
pop
mov
adc
iret
in
nop
aad
push
cld
cmp
mov
pusha
mov
or
out
mov
addr16
mov
push
fs
xor
mov
stc
jp
jge
call
mov
cmp
cmpsb
fucomip
inc
les
pop
sbb
rclb
push
push
setl
dec
jns
xor
je
or
jnp
xlat
mov
mov
mov
xchg
rclb
mov
repz
pop
xor
xchg
xchg
mov
dec
out
push
inc
pop
adc
or
test
jbe
mov
cltd
mov
ljmp
lcall
cmp
pop
jle,pt
fcoml
call
call
adc
jmp
add
hlt
int
jne
leave
addr16
ret
fstps
sub
push
xor
lcall
sub
cmp
inc
inc
sbb
jg
int3
push
stos
fwait
sbb
push
mov
or
add
mov
int3
int
push
enter
and
into
jne
mov
mov
rolb
shrl
je
outsl
cmc
imul
mov
xchg
push
fcoml
ss
xor
mov
mov
cwtl
jae
iret
mov
xor
jmp
add
je
gs
sti
jo
push
xchg
xor
cli
cmc
aam
stos
dec
inc
inc
mov
xorl
inc
sub
dec
sbb
add
popf
dec
out
dec
cmp
or
addb
inc
mov
mov
mov
cmpsb
clc
mull
jae
sti
fimuls
sub
testb
lods
loopne
inc
bound
mov
in
xchg
lret
ret
sub
xchg
jbe,pt
sub
out
pop
push
jno
cltd
xorl
jge
xor
add
nop
xor
adc
sbb
std
add
int
xchg
sbb
sbb
and
adc
ds
in
rcr
flds
mov
xchg
test
adc
mov
bound
into
aad
mov
dec
sbbb
je
mov
movsl
add
addr16
mov
jg
das
and
mov
push
or
sub
jo
and
add
inc
add
cmp
pop
dec
mov
imul
xchg
fidivrs
rorb
fs
mov
shll
sub
cltd
mov
and
sbb
mov
inc
pusha
or
jbe
mov
jo
out
or
push
lahf
adc
xchg
jbe
sti
or
clc
stc
dec
addb
cmp
push
fninit
sbbb
test
mov
stc
test
pushf
mov
test
decb
xchg
inc
cs
jp
data16
dec
cmp
mov
push
rol
out
or
xor
test
jne
mov
rclb
aam
xchg
stos
fidivs
push
clc
xchg
pop
fnstenv
outsl
jecxz,pn
sbb
sbb
or
iret
dec
sub
and
adc
lock
sub
push
lret
lret
aad
or
or
sub
fucomi
xchg
aas
push
add
ret
and
pop
mov
cmp
stos
lods
inc
add
jnp
pop
mov
mov
aad
push
push
dec
push
jne
clc
outsl
push
adc
stos
ljmp
push
xor
add
sub
jb
xchg
std
fiadds
lock
nopl
dec
mov
test
sbb
push
inc
lcall
daa
xor
push
lds
jno
adc
test
inc
xor
lods
in
adc
ret
xor
mov
xor
lds
push
decl
iret
jns
repz
dec
pop
ss
stos
jne
mov
popf
add
sarb
mov
lods
shrb
fsubrl
cs
fstpl
mov
insl
jle
jmp
fdivrp
adc
out
mov
std
mov
jno
push
hlt
ret
and
dec
push
inc
test
cmpsb
mov
add
insb
imul
outsb
xchg
pusha
push
into
repz
mov
in
in
dec
lds
imul
scas
dec
push
mov
scas
add
push
pop
ds
adc
mov
loopne
or
orl
imul
xor
in
and
addr16
js
pusha
mov
arpl
cmpsb
shlb
dec
cmp
sub
mov
xchg
jnp
mov
mov
jbe
sbbl
ja
mov
xor
shll
cmp
sbb
sub
cs
xchg
jne
mov
lock
cmp
mov
cmc
xor
stos
or
rcr
addr16
xchg
lret
mov
lea
or
dec
cmpsl
rcrb
pop
clc
and
out
jbe
lret
mov
inc
adc
mov
cmp
test
fwait
repz
hlt
mov
cmpsb
enter
ja
test
sbb
test
movsl
adc
es
cmp
jae
or
iret
sahf
or
xor
out
cmpsl
jnp
stos
ja
sub
jns
xchg
loopne
orb
incb
and
dec
ror
pop
mov
push
les
enter
mov
pop
stc
xor
in
push
aaa
mov
pop
push
mov
loop
iret
fsubrs
add
xchg
sbb
pop
push
adc
add
cmp
insb
cmp
mov
xchg
mull
lods
jmp
pop
jns
out
jb
sarb
fildll
test
push
pop
mov
push
mov
ja
es
rorl
int3
iret
in
sbb
stos
repnz
dec
xor
dec
mov
lds
lods
test
sbb
push
stc
daa
cmpsb
hlt
xchg
popf
jbe
das
rcl
outsb
and
loopne
out
les
pop
mov
pop
outsl
cmp
add
popf
scas
fidivs
mov
xor
fdivl
pop
or
push
iret
call
std
nop
sbb
addr16
push
push
loope
mul
mov
sub
sbb
rorb
icebp
xchg
xchg
xor
out
dec
aaa
pop
inc
xchg
call
jns
stos
cli
arpl
sbb
fs
out
jae
das
outsb
sub
xchg
push
fucomip
adc
dec
dec
leave
sbb
lods
xchg
sahf
and
pop
mov
mov
int3
ja
inc
xchg
xor
push
sub
dec
pop
xor
or
sub
ss
imul
dec
and
test
arpl
adc
sbb
lock
lret
adc
hlt
dec
sti
xorl
cmpsb
sbb
inc
js
cs
sbb
mov
fistpll
addr16
dec
push
push
jle
dec
sarb
and
sbb
repnz
adcl
pop
mov
push
jbe
hlt
dec
inc
fisttpll
inc
sub
xor
in
xchg
cmp
mov
sub
fcmovnb
mov
vmwrite
dec
sti
lahf
pop
add
ret
pop
xchg
push
push
jecxz
cs
lcall
enter
aas
je
outsb
aas
dec
imul
sub
aad
cmc
pop
mov
push
iret
xchg
and
in
push
xchg
clc
jne
ret
adc
sbb
sbb
and
and
pop
add
cmp
hlt
mov
movsb
popf
imul
cmp
pop
imul
mov
enter
push
mov
fisttpll
lds
sub
mov
dec
repz
jecxz
or
repz
mov
inc
jno
xor
xor
movsl
stc
iret
and
xor
mov
ret
dec
jae
fistpll
xchg
cmp
mov
adc
adc
mov
adc
push
fstps
das
pop
jbe
out
sbb
add
int3
adc
aad
aad
mov
rcrl
popa
push
mov
orl
icebp
add
xor
stos
div
insl
push
mov
add
mov
cmp
cmpsl
insb
sbb
mov
test
sti
fucomip
cld
call
add
mov
stos
gs
pop
insb
adc
mov
insl
cmp
and
test
aam
or
jo
mov
xchg
xor
add
ret
sbb
call
mov
ret
into
loop
jle
je
sahf
scas
out
test
cmovle
dec
lea
inc
mov
push
mov
sub
stc
in
icebp
out
add
adc
push
jae
adcb
jne
jg
xchg
jge
add
pop
nop
xchg
imull
je
and
fs
jl
push
fwait
iret
add
sub
leave
hlt
lds
jle
popf
mov
jp
jb
cli
xor
jne
sub
in
out
push
cwtl
das
mov
mov
pop
fstps
sti
jecxz
jns
mov
pop
nop
outsl
push
pop
xlat
enter
adc
mov
int3
adcl
cmp
jae
xchg
int
shl
lahf
call
push
scas
call
nop
jp
popa
push
int
sub
pop
cmpsb
pop
sub
xchg
jmp
jb
pop
paddb
cmp
imull
jg
dec
shll
fwait
cmp
scas
ja
and
push
outsb
in
jle
pop
mov
add
mov
and
lcall
rclb
test
pop
add
mov
dec
jp
cmpsl
pop
test
cmp
cs
push
inc
ds
nop
ds
dec
and
xor
pop
ret
lock
mov
in
add
cmp
int
mov
scas
outsl
sahf
push
andl
les
std
adc
scas
mov
mov
loope
cmp
subb
mov
cmc
cltd
xor
push
push
rclb
fcmovne
in
lcall
mov
adc
aam
sbb
idivl
test
inc
shll
ret
lds
repnz
pop
fldl
lods
mov
mov
pop
int3
inc
and
stos
fdivr
mov
push
sub
js
lret
test
jle
xchg
mov
push
pop
lret
mov
rcrb
xlat
push
cmc
out
mov
sbb
lahf
or
xor
push
loop
mov
dec
cmp
lret
jno
cld
dec
aaa
je
in
dec
les
ffree
adc
sbb
ret
iret
mov
xchg
pop
daa
jb
jbe
xchg
add
inc
mov
xchg
or
movsl
jae
sub
adc
scas
adc
push
cmp
inc
cmpsb
sbb
adc
sub
in
or
ror
pop
push
and
push
fcom
jmp
add
dec
adc
leave
jg
xchg
mov
sub
and
pop
ja
inc
hlt
pop
sbb
fcmovbe
pop
out
add
mov
jg
pop
in
cs
sub
sbb
mov
sbb
adc
jle
bound
mov
fmull
cli
mov
imul
fnstsw
in
xchg
mov
jmp
loop
movsl
ds
sti
icebp
mov
jmp
in
negb
repnz
addl
daa
or
dec
sub
xchg
mov
push
push
insl
or
xor
xchg
push
xchg
dec
mov
jo
xor
rorl
xchg
sub
andb
lahf
xor
jp
adc
add
pop
sahf
xor
mov
imul
push
je
or
int
mov
loope
xchg
inc
iret
popa
icebp
mov
pop
dec
pusha
inc
inc
leave
cmc
repz
cld
mov
test
outsb
mov
test
and
enter
xor
mov
jg
popa
dec
mov
pop
out
sub
mov
insb
pushf
mov
sarl
test
aaa
sub
push
je
arpl
xchg
daa
pop
cmp
ds
add
mov
sub
add
mov
rolb
xor
arpl
push
cltd
sub
in
jmp
lret
inc
into
adc
adc
imul
adc
cmp
adc
int
popa
inc
das
mov
sahf
das
lods
xchg
movsb
les
pop
push
repnz
pop
sub
hlt
or
mov
mov
dec
nop
lahf
inc
stos
rcrl
mov
add
sbb
push
sub
mov
enter
sbb
in
cmpsb
shrl
fstps
adc
rcll
jmp
dec
push
in
xchg
inc
fs
mov
lcall
hlt
fdivr
cld
pop
shll
cmp
bound
xchg
sbb
lds
pop
cmpsl
test
push
lahf
out
inc
loop
dec
out
mov
and
jmp
fldt
inc
lds
sub
testb
leave
mov
mov
jecxz
mov
and
jmp
jne
aas
push
xorb
xchg
imul
fcmovnu
jg
cwtl
repnz
popa
cmp
in
sbb
push
mov
dec
aas
ljmp
ja
mov
aad
push
dec
mov
and
pop
push
or
hlt
lcall
outsb
mov
sub
ret
mov
repnz
in
data16
adc
push
fstpt
imul
xor
pop
mov
push
icebp
jge
fisttps
mov
aam
push
add
test
dec
and
les
and
mov
pop
inc
in
adc
and
push
sub
sti
mov
aad
loope
fs
lcall
jne
pop
aaa
or
or
mov
sarl
out
lds
lock
push
and
cmp
ficomps
rcrl
push
fists
sub
call
xor
pop
cwtl
bnd
dec
adc
stc
es
arpl
fcomi
adc
cmpsb
pop
clts
push
mov
rcrl
push
mov
ss
outsl
dec
jae
and
jge
jge
je
fisubs
xchg
mov
xor
pop
inc
aaa
hlt
cmp
xchg
xchg
lea
loope
pop
mov
add
inc
xor
sub
push
jb
mov
ds
mov
cmp
xchg
xor
fldl
push
pop
adc
add
mov
call
shlb
mov
mov
imul
sbb
js
ss
loopne
shll
enter
mov
lds
lahf
andl
lret
and
aas
cvtdq2ps
add
sbb
push
ds
push
push
loope
jecxz
inc
sbb
repnz
shr
outsl
xor
fiadds
pop
test
sbb
into
jge
fldenv
add
mov
xor
pop
xor
std
pop
outsb
pop
cmp
jecxz
mull
loopne
imul
aam
loope
sarb
shr
imul
add
pop
test
mov
adc
push
push
add
fidivrl
pop
xchg
xor
jno
add
repz
xor
repz
jb
int3
mov
mov
stc
sub
subl
cmp
dec
andl
push
add
pop
push
dec
jp
push
adc
pop
test
lahf
pop
out
mov
dec
jecxz
xchg
jb
jmp
adc
in
mov
cwtl
add
mov
stc
lds
push
out
sbb
fisttpll
outsb
daa
xchg
and
adc
jae
sbb
loop
rcrl
insl
push
fists
int
mov
sub
out
adc
mov
xchg
scas
adc
sbb
adc
icebp
fidivrs
mov
xchg
in
out
xchg
mov
cmp
push
lods
cmp
pop
push
jnp
stc
hlt
sbb
or
xchg
sarb
add
sarl
mov
hlt
jmp
ja
lret
hlt
popf
daa
xchg
xchg
cmpsb
push
mov
sbb
jno
dec
mov
add
cmp
dec
outsl
addl
lea
shll
inc
outsb
jmp
push
test
sti
mov
pop
in
xchg
dec
fidivs
lret
xor
and
fnsave
fadds
sahf
jecxz
jno
adc
flds
clc
mov
pop
test
fwait
or
pop
shrb
cmpsl
shll
js
out
mov
in
adc
inc
das
je
mov
push
sti
ret
les
cmp
fidivrl
mov
rclb
ror
xlat
jmp
fimuls
repz
pop
imul
xchg
sahf
test
jae
mov
in
sti
sub
test
mov
sub
cltd
xchg
aam
popf
icebp
push
iret
fidivl
sub
add
out
inc
push
insl
in
icebp
aaa
das
mov
jge
xchg
scas
cld
pop
sub
mov
push
divb
add
xchg
addl
push
stos
test
stc
xor
ja
out
cld
pop
add
testl
test
cmpxchg
add
dec
push
in
mov
mov
lret
jg
ss
inc
xchg
enter
and
int
mov
pop
and
es
pusha
mov
adc
push
jl
push
repz
sub
add
pop
sbb
xor
jb
lock
call
mov
popf
inc
cmpsb
mov
xchg
scas
mov
je
push
pop
push
loopew
outsb
dec
mulb
push
lcall
mov
dec
mov
mov
xchg
push
test
int
loopne
cltd
mov
and
iret
frstor
outsl
roll
rcll
or
out
jl
jg
mov
jo
mov
push
test
ret
mov
into
jl
inc
loopne
inc
xor
lret
cmp
shll
sbb
and
and
mov
nop
xor
dec
js
adc
pop
sar
xchg
pop
pop
dec
ret
jb
adc
scas
outsb
pop
ss
cmpl
rolb
faddl
mov
shlb
ja
add
and
add
pop
mov
mov
and
push
in
cmp
jae
push
jo
lret
mov
mov
andb
inc
mov
xor
mov
cmp
hlt
xor
dec
ja
cli
dec
pop
xor
and
ret
mov
dec
jnp
lret
es
or
dec
movsl
xor
mov
add
sub
push
mov
inc
mov
ret
push
xchg
push
push
adc
mov
insl
cmp
jne
or
ds
cmp
mov
pushf
dec
fstps
push
test
and
adc
jle
popf
pop
add
push
push
sbb
and
std
daa
jbe
inc
sub
stos
aas
je
sub
jnp
inc
mov
dec
insl
jl
ljmp
xchg
sbb
insb
xlat
pop
lcall
aas
je
sub
push
jle
mov
frstor
mov
or
xor
sbb
dec
insb
iret
fsubr
mov
push
shl
orl
sbb
mov
mov
mov
mov
sbb
in
mov
aad
testl
inc
ss
inc
scas
ret
aaa
jl
loop
das
inc
jmp
fnstenv
mov
xor
incl
leave
mov
and
mov
shll
cmp
lea
stc
inc
ror
movsb
jne
jbe
push
dec
fldcw
pop
xor
pop
mov
aam
shlb
mov
rcr
ret
xchg
call
lods
jp
mov
inc
mov
arpl
mov
jmp
addl
jle
imul
andl
jo
int
sbb
clc
mov
das
cmp
inc
stos
leave
push
xchg
js
in
cwtl
stc
sbb
js
les
aam
jmp
subl
mov
inc
mull
jne
xchg
xchg
je
ss
adc
lds
rorb
iret
stc
pop
fisubrl
push
cmp
stos
mov
cwtl
adc
clc
into
xchg
std
pop
push
cli
out
sti
hlt
pop
push
jno
enter
adc
movb
fcmovnb
jno
outsb
mov
pop
cmc
cmp
inc
pushf
jmp
data16
jle
ret
fimuls
inc
push
movsb
mov
ljmp
push
cmp
sbb
xor
sti
cmc
ja
ret
pushf
out
jge
cmpsl
repz
push
and
cmp
add
or
mov
xchg
or
cmp
pop
push
sbb
mov
pop
inc
sbb
xchg
imull
js
ret
adc
lock
imul
jbe,pn
rcrb
fdivl
add
int3
roll
xor
xor
xchg
push
and
das
inc
int
leave
int
adc
mov
xor
jmp
add
mov
leave
add
sub
test
in
je
adcl
shl
enter
sbb
push
jg
jp
sub
mov
mov
test
outsl
jnp
xchg
mov
sub
mov
fdivs
cs
lcall
cmpsb
fmuls
mov
push
jmp
cmpsl
sbb
push
fcoms
jae
stos
or
or
push
mov
jl
fmull
pop
repz
mov
mov
jg
fstpl
cwtl
sub
cmpsb
in
add
xchg
fistpll
inc
sub
icebp
xor
and
xchg
inc
jmp
pushf
leave
in
mov
leave
push
and
xor
add
inc
call
loope
adc
loope
adc
ficomps
xchg
shl
pop
cmp
fcoml
pop
imul
mov
mov
dec
jnp
xor
popf
push
mov
mov
fisubrl
sahf
mov
jae
rol
outsl
mov
push
xor
das
or
push
xor
sbb
xchg
pop
test
xchg
and
jp
or
fbstp
xor
cmp
mov
ja
ds
dec
fs
sub
add
fwait
push
sbb
dec
xchg
jmp
out
pop
lods
pusha
iret
dec
xchg
clc
test
outsb
inc
mov
cmp
add
push
fistpl
and
push
pop
data16
cmpsl
aad
xchg
cmp
rcrl
into
fmull
add
sub
imul
mov
into
ffreep
popa
add
arpl
cltd
repz
adc
sbb
ret
das
das
fbstp
jno
daa
bound
jne
in
xchg
inc
xor
or
mov
push
scas
lret
and
pop
add
pusha
inc
sub
mov
push
cli
repnz
lret
dec
jg
mov
scas
adc
fidivs
jae
and
out
jle
cli
mov
fldcw
jp
or
and
mov
sub
insl
fwait
pop
push
add
dec
jp
mov
sar
outsb
aam
std
pop
movsb
pop
pop
fstl
push
loopne
leave
sub
sub
dec
ret
imul
mov
popf
xor
push
dec
je
out
lea
movl
xchg
test
mov
mov
dec
icebp
daa
fwait
lea
imull
inc
jb
test
test
lods
xchg
fst
pop
popa
inc
xor
or
sbb
dec
mov
push
pop
or
fldenv
jne
jmp
push
xchg
js
lods
popf
aas
lock
mov
inc
call
push
lock
mov
mov
mov
xchg
rolb
mov
bound
dec
lods
jno
mov
mov
dec
inc
ja
popa
and
shrl
mov
test
enter
and
mov
adc
or
scas
dec
iret
dec
adc
xor
in
adc
sub
dec
xchg
mov
add
stos
dec
ja
fnstenv
fwait
insl
outsl
or
bound
mov
call
loop
inc
push
pop
sub
test
mov
push
test
fs
repnz
adc
or
jp
push
mov
shll
mov
jno
lret
setb
mov
cmp
in
lcall
adc
add
clc
cmp
je
xchg
wrmsr
shrl
mov
inc
daa
sarb
dec
jne
je
cmc
mov
jg
mov
sarl
jmp
stos
popf
xchg
push
push
test
fidivs
mov
jl
mov
int3
xchg
dec
sarl
jecxz
mov
cmp
fnstenv
rcrb
inc
test
cmp
inc
jge
mov
push
sbb
outsl
outsl
inc
pop
ljmp
daa
xor
test
repnz
mov
sub
pop
xchg
stos
and
mov
out
jle
ret
mul
cmc
rolb
jae
cmc
cmp
and
shlb
icebp
hlt
mov
rorb
out
or
popa
cmpsb
and
cmp
xorl
dec
mov
push
les
jg
sbb
mov
decb
adc
das
mov
sub
outsb
xchg
push
icebp
out
mov
mov
fadd
lds
loop
xor
lcall
insb
ljmp
dec
mov
in
movsb
push
jbe
fildll
mov
xor
jb
shr
pop
iret
imul
je
ljmp
and
pop
sub
je
in
nop
mov
test
test
mov
mov
aaa
mov
packssdw
mov
test
cmpsb
gs
mov
xor
outsl
sbb
fimull
sub
jb
inc
push
outsl
pusha
jge
ljmp
mov
ret
push
scas
cmp
and
sbb
imul
ja
fldcw
fs
roll
cmp
adc
sbb
cmp
xor
mov
outsl
pop
sahf
sub
cld
outsl
mov
dec
push
xor
mov
inc
jnp
bound
sub
ret
cmp
mov
mov
out
popa
adc
ss
pop
inc
mov
cmpsl
xor
shlb
and
mov
fwait
cmp
mov
pusha
adc
mov
jns
sub
xchg
pop
mov
pushf
data16
daa
mov
push
rcrb
mov
in
sbb
bound
ret
pop
xchg
jmp
fstpl
pop
xchg
ret
repz
sahf
imul
inc
aas
xchg
jecxz
dec
inc
das
aad
cmpsb
xchg
sub
push
inc
mov
mov
pop
cltd
loop
mov
jns
iret
lret
sub
pop
and
jle
pushf
dec
mov
outsb
test
lods
in
inc
hlt
adc
in
rol
gs
outsl
or
add
inc
test
push
scas
dec
out
pop
ja
adc
out
pop
nop
lea
inc
leave
cmp
in
mov
adc
lds
cmp
dec
jnp
lods
mov
xchg
jmp
iret
addl
repnz
sbb
clc
mov
sahf
dec
sti
or
inc
dec
xor
test
pop
dec
movsl
dec
test
lretw
push
and
mov
popl
mov
push
pop
cmp
fdivl
lock
xor
push
mov
js
cli
inc
lods
mov
xchg
test
xchg
shll
imul
je
sti
xor
push
or
out
jo
jp
in
and
sbb
cmp
push
fxtract
jns
xor
push
cs
or
out
ljmp
loop
sbb
lret
das
imul
add
push
jge
add
mov
inc
fwait
jecxz
rcrb
or
dec
sbb
sbb
pop
inc
xor
add
xchg
lds
pop
movsb
mov
popa
push
pop
mov
mov
xchg
push
mov
dec
add
jae
jge
imul
jnp
rorl
xchg
pop
bound
jmp
push
out
mov
jo
adc
mov
sahf
push
xchg
inc
ds
jle
sub
and
sub
aaa
or
and
pushf
cmpsb
leave
pushf
lock
xor
lcall
jne
stc
xchg
push
cmp
jbe
mov
mov
add
or
jb
outsb
addr16
aaa
fidivrs
jne
sub
jl
test
inc
jge
daa
cmpsl
shlb
jo
xchg
pop
popa
jecxz
inc
fists
and
or
enter
add
xchg
in
mov
inc
xlat
push
xchg
sub
push
cmpsl
jmp
hlt
jle
jp
jl
xchg
insl
cwtl
adc
cs
mov
fs
cltd
popa
mov
cmp
decl
in
ljmp
fsubl
add
aas
data16
stos
jnp
div
scas
repnz
stos
mov
je
pushf
imul
add
fdivrs
mov
lock
xchg
jne
sub
in
jg
movsl
lea
or
stc
jo
adc
mov
addr16
lahf
into
les
sub
push
sub
cli
loop
mov
lods
nop
ret
pop
dec
dec
xor
std
push
mov
fistpl
jbe
hlt
in
data16
push
and
fidivl
imul
or
xchg
dec
and
push
repz
repnz
mov
scas
rorl
xor
loope
cltd
test
not
pusha
sbb
jae
add
pushf
fcomps
adc
sub
lods
cmc
lcall
rcrl
jecxz
sbb
jle
scas
data16
push
in
cli
sbb
mov
xchg
cld
ret
mov
sarl
ja
popf
mov
adc
add
sbb
ret
ss
xchg
mov
bswap
adc
nop
push
cld
outsb
pusha
dec
mov
dec
pop
adc
stos
cltd
add
faddl
mov
xchg
nop
call
dec
xchg
pushf
inc
add
call
inc
aam
inc
pop
mov
jbe
cmp
push
out
jg
sbb
lret
into
in
xchg
adc
scas
sti
dec
mov
out
lods
sub
dec
mov
fsts
jmp
dec
mov
push
fsub
ja
xor
lods
iret
fbld
or
or
pop
adc
push
ret
rcl
push
dec
xor
imul
mov
gs
cmp
mov
shrb
dec
decb
sub
jbe
int
call
inc
cltd
mov
push
cmp
adc
repz
imul
fs
mov
sbb
divb
addb
outsb
es
cli
add
jnp
sbb
pop
xor
aad
mov
filds
mov
arpl
or
sbb
mov
ret
std
lahf
cli
cmpsb
fwait
sub
test
add
jno
out
mov
das
xor
mov
sbb
xchg
adc
jo
jb
pusha
mov
cmp
lods
js
mov
add
sbb
movsl
pop
testb
mov
imul
cmp
xor
jb
setno
or
aas
sub
pop
stos
jbe
pop
cs
xbegin
xor
rol
mov
popa
loop
mov
mov
movsl
outsl
int3
pop
aaa
pop
leave
movsbl
sbb
imul
mov
sbb
bound
adc
in
das
adc
test
push
jecxz
ret
xchg
jecxz
add
xor
xchg
pusha
popf
xchg
dec
mov
cmpl
fistps
dec
nop
or
and
cmp
outsl
in
xor
mov
movsb
outsb
ljmp
jns
jmp
das
push
lock
in
cmp
mov
aad
sub
cmp
lea
dec
jo
daa
repnz
mov
aad
lods
frstor
arpl
test
outsl
mov
fwait
dec
nop
adc
dec
into
jecxz
xchg
dec
dec
sub
daa
adc
push
push
notl
xor
mov
ret
icebp
inc
insl
enter
sbb
sbb
cld
dec
jnp
fistl
push
loop
loopne
sbb
jmp
test
or
sub
mov
dec
mov
mov
mov
dec
add
in
jp
clc
xchg
mov
push
pop
flds
in
cmpsb
add
test
push
roll
stos
mov
mov
mov
rcl
sub
mov
hlt
mov
lds
and
xor
adc
jbe
sub
into
fwait
ja
xchg
jge
cmc
or
outsl
push
xchg
out
test
adc
scas
test
and
cmpxchg
fwait
jecxz
xchg
jmp
push
mov
inc
mov
mov
sti
or
push
lret
and
jb
cmp
pop
push
out
dec
pop
orl
or
int
inc
add
jp
mov
aam
jmp
xchg
pop
shll
out
int
pushf
lock
jecxz
mov
cltd
xor
sbb
dec
sub
js
mov
inc
jl
or
and
add
mov
mull
mov
pop
dec
jno
dec
std
imul
mov
sahf
test
frstpm(287
fisubrl
pop
int3
sub
ret
push
mov
outsb
dec
mov
mov
sbb
stc
outsl
into
push
dec
out
mov
imul
fdivl
je
icebp
and
lret
sbbb
js
repnz
outsb
cmp
mov
jle
push
lret
inc
push
dec
ss
xor
out
or
flds
xchg
jno
jo
call
fisttps
insl
notl
jo
test
adcl
es
and
fiadds
mov
out
push
orl
movsb
test
lret
xchg
jns
bound
pop
push
cmp
cmpsl
and
mov
insl
add
scas
or
jle
clc
je
sbb
and
pop
xor
xor
xor
jg
mov
jno
inc
inc
jmp
call
push
and
pop
cmp
mov
fisubs
adc
push
sub
cpuid
mov
sub
or
jg
bound
call
and
push
cmpsb
xor
int
aad
sub
dec
jns
push
ror
dec
add
inc
rorb
sbb
or
stos
add
and
dec
ficoml
sbb
and
stos
fstps
fs
test
fisubrl
imul
fwait
mov
sti
jecxz
xor
dec
jo
dec
cmpsb
inc
pop
fndisi(8087
add
push
jb
push
xchg
mov
push
mov
jb
insb
jne
cmp
mov
mov
rorb
hlt
lret
jmp
lahf
into
dec
jo
inc
pusha
movsl
out
ss
and
sbb
push
shrl
inc
xor
dec
cmp
sbb
repnz
mov
lahf
jns
test
mov
add
loope
push
ds
xchg
cmp
jbe
lods
cmp
adc
xchg
ffree
add
inc
pop
movsl
lds
popa
cmp
sarb
jg
sub
adc
outsb
in
inc
loope
xchg
stos
push
mov
adc
daa
xchg
bnd
sbb
das
sti
sbb
test
ss
add
loope
outsb
lods
cwtl
mov
mov
movsb
aas
or
pop
scas
je
dec
inc
sbb
test
les
leave
dec
sbb
ud2
pushf
cld
lds
inc
cmp
cmpsl
fiadds
lret
cmp
dec
mov
or
pop
adc
dec
lahf
das
shl
cld
rorb
xlat
dec
or
mov
mov
mov
cmpl
js
int
insb
sarl
aad
cmp
mov
push
aam
push
mov
jecxz
sbb
push
cltd
mov
out
sbb
call
adc
xchg
js
test
test
ljmp
out
int3
cmp
xchg
insb
in
aam
sbb
mov
mov
xchg
aad
int
pop
dec
jae
call
lods
jg
mov
enter
or
lds
lea
sbb
lods
das
jns
push
filds
mov
fsubr
jb
jns
ds
xchg
mov
inc
cwtl
clc
xchg
mulb
bound
and
push
mov
push
fstps
popf
adc
cmp
xchg
pop
add
int
arpl
push
xchg
cmp
data16
filds
loopne
xchg
out
into
hlt
shrb
pop
lret
add
es
xchg
dec
shll
inc
sub
adc
inc
cwtl
int3
lods
loope
xor
lahf
loopne
pop
xor
out
loopne
push
mov
pop
inc
push
fbstp
sbb
adc
lcall
add
pop
call
jns
push
pop
mov
addr16
jbe
stos
inc
stos
cmp
dec
pop
adc
inc
clc
cld
mov
enter
ficoml
cmp
das
test
push
sbb
adc
popa
scas
rorb
movsb
aaa
and
cmpl
in
push
inc
scas
jg
inc
jmp
inc
hlt
pop
xchg
dec
out
lods
add
aad
push
mov
inc
mov
and
daa
loop
xor
push
adc
fstp
adc
ja
in
das
push
ficoml
outsb
mov
lea
das
inc
push
mov
lods
mov
lahf
dec
push
cmp
pop
clc
movsb
and
out
mov
repz
mov
push
push
push
fldenv
std
daa
adc
shl
repz
out
scas
cmc
mov
inc
dec
shl
xor
imul
aad
cmpsb
je
es
into
popa
pop
mov
adc
push
pop
mov
inc
addr16
add
jecxz
rcll
ja
pop
sbb
in
ret
pop
fs
inc
int
dec
jo
mov
shll
jmp
lcall
push
popf
popf
leave
out
mov
imul
add
pop
add
or
push
insb
stc
out
cmp
push
pushf
xchg
insb
pop
jbe
shl
cltd
or
adc
aaa
mov
sbb
int3
xchg
sahf
cmp
popf
enter
shrb
add
push
pop
test
test
or
ja
jle
aaa
cli
dec
xorl
les
mov
xor
adc
xor
mov
and
and
nop
mov
xor
bound
aaa
jmp
fisubs
add
pop
pop
push
loop
int3
cmp
and
fwait
mov
out
cmp
popa
mov
incb
pushf
push
and
loope
int3
rcll
push
pop
xchg
inc
push
sub
jns
fimuls
call
pop
pop
leave
repz
xor
and
push
and
xchg
sti
sub
test
push
jo
push
pop
xchg
dec
dec
iret
push
or
imul
ljmp
insb
mov
inc
arpl
std
jecxz
push
jo
cmpsb
push
mov
shll
jns
sbb
shll
stos
iret
sub
mov
mov
push
xchg
imul
outsb
xor
aad
in
dec
aaa
cmpsb
sbbl
adc
cmpl
outsb
dec
cwtl
pop
jge
mov
cli
popl
pop
pop
jg
outsl
rorl
ja
les
jecxz,pt
mov
insb
inc
xchg
outsb
mov
mov
insb
daa
scas
push
jge
pop
cmp
sbb
sarb
dec
cli
mov
ds
cmp
xor
repnz
cmp
jp,pn
add
and
hlt
mov
test
in
mov
mov
aad
jecxz
cmp
mov
and
dec
js
sub
sbb
inc
or
fwait
push
ffree
fs
ret
sbb
sub
or
or
dec
push
insb
ja
insl
mov
xchg
sub
fwait
stos
daa
adc
repz
mov
sbb
cmpsl
and
push
adc
scas
or
xor
mov
mov
loopne
xchg
or
pop
shrb
movl
pop
ljmp
push
jb
mov
cmp
lea
js
vpsubq
mov
adc
sub
je
outsb
push
lds
and
fwait
lcall
cmp
loope
rcrb
push
cltd
jno
fstp
in
inc
jp
mov
mov
push
xor
lcall
fsubrs
nop
push
sbb
add
xor
leave
andb
sub
insb
std
and
loopne
test
aam
insl
adc
pop
stc
inc
sahf
add
push
test
pop
daa
cmp
aaa
and
loopne
mov
ljmp
lcall
stc
test
pop
xlat
ret
stos
inc
mov
cld
pop
push
or
jae
jg
clc
flds
scas
hlt
dec
dec
add
cwtl
cmp
push
das
jmp
inc
leave
cmp
adcl
sbb
jae
subl
pop
lret
adc
cld
leave
aaa
rcrl
mov
jne
inc
or
mov
dec
xchg
sub
ljmp
adc
mov
in
pop
repz
pop
jnp
in
clc
test
jp
inc
call
adc
nop
std
adc
pop
stos
jb
jecxz
adc
cmp
adc
xor
pop
lods
loop
mov
sbb
sub
jle
int
mov
pop
push
repnz
mov
iret
push
sbb
jl
push
mov
jge
test
jb
or
addr16
lods
dec
mov
pop
shlb
cmpsb
push
pushf
or
add
bound
fs
add
push
dec
pop
mul
cmpsl
or
sbb
cs
and
in
gs
sarl
sbbb
dec
movsb
pop
lds
lock
push
jle
push
mov
mov
dec
test
mov
nop
popf
or
mov
cltd
pop
out
hlt
mul
nop
insl
sub
and
xchg
int3
dec
jge
sbb
xchg
mov
adcb
scas
xlat
and
adcb
test
outsl
inc
clc
jbe
and
into
int
dec
jo
adc
jmp
orl
lock
in
cs
mov
dec
and
push
xchg
dec
inc
es
loop
push
or
inc
stc
mov
mov
aaa
arpl
pop
jbe
sti
int3
jb
mov
dec
mov
icebp
mov
jno
decl
dec
dec
lea
lds
jl
jbe
lods
mov
ljmp
das
loop
insb
shlb
mov
jp
test
adc
xchg
popf
sbb
sub
popa
in
loopne
push
inc
mov
dec
or
add
pop
mov
cwtl
inc
pop
or
fwait
addb
mov
int
lea
out
sub
in
cs
mov
int
jge
addr16
es
in
popa
shrb
lods
ja
inc
xor
mov
mov
popf
inc
mov
adc
mov
xchg
pop
adcb
jno
and
mov
out
test
and
je
pushf
inc
fcomip
cmp
jge
xchg
add
sub
pop
jge
push
xor
mov
xor
push
test
sbb
mov
jp
xchg
flds
mov
shrb
testl
dec
pop
dec
push
les
jp
xchg
scas
or
pop
cmp
sub
dec
dec
jl
jl
lret
and
xchg
fnstenv
fisttpll
scas
lret
add
and
insb
inc
mov
add
cs
mov
nop
sbb
cmp
lcall
ljmp
shrl
inc
mov
clc
insb
xchg
out
fwait
cmp
xor
pushf
test
aas
out
ljmp
xor
push
mov
test
in
decl
test
dec
cmp
jp
and
fdivrs
aas
leave
add
lock
stos
mov
and
xlat
out
nop
sbb
xor
std
inc
cli
sub
lds
int3
mov
mov
jp
popa
push
add
sahf
out
cmp
xor
dec
pop
std
and
iret
push
fcmovnbe
ficoms
cmc
mov
fs
cmpsl
orb
stc
in
adc
or
cmpsb
sbb
nop
lret
stos
add
test
stc
sub
lods
sbbb
inc
jge
and
scas
into
addr16
test
push
sub
loopne
mov
xchg
mov
cmpsl
mov
lods
js
pop
cmc
loope
cwtl
clc
rcrl
inc
push
enter
and
mov
loop
xchg
or
push
mov
lods
sbb
mov
bnd
out
sbb
mov
or
or
add
out
dec
sbb
xor
inc
xchg
pop
adc
push
jbe
mov
cmp
repnz
mov
dec
pop
out
sti
sbb
sbb
je
jo
arpl
into
cld
pop
jne
xchg
sub
or
inc
es
shl
pushf
das
insb
push
das
fdivrl
inc
movsb
cmpsb
push
clc
scas
adc
jmp
test
popa
rcl
mulb
jecxz
shlb
movsl
sub
test
cld
xor
adc
mov
psubusb
inc
adc
cwtl
iret
mov
mov
xchg
jmp
cltd
sub
mov
imul
and
xor
mull
push
add
pop
lea
push
xor
lea
enter
out
test
cmp
and
mov
rcll
imul
or
out
and
xchg
mov
cmp
outsb
orl
cmpsb
add
andl
cmp
in
xchg
cltd
push
es
mov
add
xchg
add
je
mov
push
arpl
fdivrl
movsb
rol
xor
push
andb
xchg
rcl
mov
push
frstor
stos
xchg
sahf
pop
mov
pop
dec
sbb
cmpsl
testl
pop
mov
cwtl
pop
and
inc
jle
cmp
aad
test
call
add
xor
js
mov
insb
test
fs
sbb
pop
frstor
add
push
popa
shrb
xchg
pop
jnp
mov
fucomi
push
inc
out
divb
aad
shlb
dec
inc
pop
repnz
outsl
push
lret
jnp
bound
push
sbb
insb
cmp
hlt
push
sbb
rorl
dec
fnstenv
int
jg
jns
loope
imul
sbb
ret
and
jg
adc
pushf
push
mov
nop
sbb
sahf
rolb
sbb
data16
mov
dec
push
cs
mov
lods
sbbb
icebp
cmp
mov
fsubl
add
cltd
arpl
iret
push
movsl
cmp
mov
cltd
cmp
adc
ret
movsl
jne
roll
push
add
les
and
push
dec
aad
inc
adc
xchg
push
hlt
clc
jno
and
push
popa
out
cmp
ficoms
sub
lea
mov
mov
mov
scas
xchg
and
repnz
dec
cmp
arpl
scas
cmc
jle
jns
jmp
and
and
enter
stos
mov
sbb
push
arpl
test
lahf
push
sbb
pop
jo
xlat
lcall
inc
mov
sbbb
mov
in
mov
test
xor
and
push
ret
pop
popf
fsubl
les
cwtd
xor
mov
or
and
pop
sti
mov
movsl
inc
xchg
lahf
xor
mov
push
out
add
jmp
xchg
hlt
xor
hlt
mov
pop
jb
add
lods
xchg
cmp
adc
jecxz
push
push
add
xor
mov
movsb
jp
push
adc
cmpsl
mov
rcll
dec
and
cli
mov
sbb
mov
test
sub
add
jo
xchg
jecxz
test
pop
in
daa
leave
add
fnstenv
je
mov
sub
out
sub
test
mov
mov
xor
adc
addr16
cmp
xchg
test
ja
dec
call
mov
xor
sub
push
sbb
inc
std
dec
ror
jne
shl
mov
out
sbb
pop
and
adc
imul
xlat
std
dec
jp
std
push
int3
sahf
test
inc
pop
enter
pcmpgtb
lcall
imul
enter
les
xchg
sbb
lods
adc
mov
mov
pop
mov
icebp
jp
sub
retw
adc
data16
ja
add
push
rcl
adc
sub
loop
inc
js
js
inc
out
xlat
adc
cmp
inc
fbld
scas
lahf
push
loop
lret
push
pushf
stos
mov
push
ret
mov
sahf
jecxz
popa
push
mov
mov
push
aad
push
fisubs
bound
mov
int3
insl
popf
mov
scas
movsl
sbb
ja
and
addb
push
fstpt
mov
pop
inc
je
in
test
out
pop
and
push
in
mov
mov
mov
dec
fldl
push
mov
jnp
sub
fstl
mov
sub
dec
dec
ljmp
mov
cmpsb
lods
pop
pop
jle
or
inc
mov
pop
sti
data16
cwtl
cmp
es
in
jo
or
mov
pop
mov
scas
cltd
mov
std
add
flds
mov
stc
fidivrl
mov
xchg
dec
mov
iret
pop
ja
test
and
scas
ja
mov
and
jg
stos
std
add
cld
xor
call
push
repz
stc
aam
out
mov
push
jbe
jno
xchg
fnstcw
aaa
scas
fldcw
leave
ja
dec
bound
and
lea
jmp
mov
jnp
std
add
into
and
cmp
scas
out
inc
repz
sbb
lods
sub
xor
pop
psubusb
adc
xchg
int
and
jp
pop
jl
mov
push
mov
pusha
adc
adc
pushf
sarl
lods
outsb
xlat
lret
sbb
xchg
pop
xor
cltd
insl
push
cld
cmp
test
mov
add
loopne
fwait
loop
mulb
andb
push
add
xor
outsl
and
xchg
adc
sti
mov
popf
add
nop
in
pop
andl
push
loopne
in
jle
mov
loopne
loopne
mov
cltd
dec
mov
gs
mov
js
mov
mov
cmp
sbb
fisttpll
sbb
add
outsb
cmp
insb
test
test
xor
fs
and
sub
sub
fdivrl
aas
jo
je
repnz
cmp
dec
push
movb
data16
test
movsb
inc
adc
mov
clc
xchg
dec
test
mov
jb
add
jle
cmp
test
cwtl
ljmp
outsl
lcall
or
xor
lds
and
or
jle
jmp
xchg
sbb
movl
sub
xor
sbb
mov
dec
mov
sub
mov
pop
xorb
iret
push
or
and
icebp
mov
xchg
pusha
pushf
lahf
push
pop
add
mov
mov
jmp
add
jne
sbb
jns
push
push
enter
aad
cmpsl
mov
inc
int3
cmp
adc
and
std
in
popa
pushf
jg
jge
push
mov
mov
inc
daa
and
in
xchg
call
mov
cmp
push
aas
cmpsl
mov
rclb
add
jno
bound
jo
mov
out
sarl
icebp
mov
pop
jmp
das
repnz
pop
xchg
mov
and
mov
xor
outsb
jp
mov
or
mov
rcll
mov
sub
out
in
out
jge
mov
enter
jbe
into
inc
cwtl
iret
loope
imul
inc
xor
call
cwtl
inc
xchg
sub
pop
inc
lret
in
pop
testb
lods
rcrb
add
insb
in
pop
call
pop
cmpsl
sti
sbb
adc
stos
push
xchg
shl
adc
pop
or
testb
lret
xchg
jns
orl
dec
pushf
mov
or
js
jno
je
negl
cmp
rol
lds
add
mov
movsl
or
stos
cmc
cli
scas
out
xor
mov
es
cld
pop
cmp
jo
stos
mov
scas
icebp
or
dec
mov
aas
scas
and
into
dec
xchg
popa
data16
cli
fnsave
incb
and
xchg
push
inc
rcr
mov
lea
dec
aad
enter
or
adc
loope
je
lock
loope
push
jns
jae
or
aad
xor
inc
add
je
in
xor
sti
mov
test
in
rcll
in
inc
aad
mov
lahf
mov
dec
xlat
int
das
push
push
add
or
pop
dec
mull
fsin
test
cwtl
jns
inc
or
xor
adc
dec
cmp
imul
js
push
cmc
out
ljmp
push
in
inc
ljmp
jmp
clc
push
xchg
pop
fnstsw
lds
mov
out
jecxz
cmp
push
outsl
mov
inc
mov
pop
bound
enter
or
dec
std
xchg
jle
ss
mov
pop
sub
outsl
fists
push
cmp
nop
or
xor
mov
push
cmp
movsb
pop
push
add
sub
adc
dec
clc
shlb
mov
cmp
adc
mov
adc
mov
mov
xlat
mov
movsb
adc
mov
bound
jg
xor
pmullw
xor
xchg
cs
jbe
test
and
add
in
or
divl
xchg
js
insl
sub
popa
mov
fldenv
sbb
addl
movsl
adc
lock
outsl
xchg
test
mov
addr16
adc
mov
mov
cli
imul
mov
je
add
push
test
lods
mov
fnstsw
ss
cwtl
cmp
jecxz
mov
push
mov
add
jnp
xchg
mov
dec
packssdw
or
xor
fsts
cmpsl
aad
andb
fwait
jb
rorb
cmpsb
inc
xchg
add
push
mov
outsl
xchg
test
testb
jnp
jbe
ret
jno
xor
jb
xchg
rorb
test
xor
lret
fwait
mov
js
or
adc
bound
jl
lds
inc
ret
jno
scas
pusha
mov
call
and
scas
or
test
mov
pop
pop
push
jns
sbb
push
and
inc
scas
or
fsts
out
jmp
negl
sbb
and
outsl
int
ss
cmp
mov
or
add
aaa
inc
and
jg
sti
scas
sub
push
or
mov
inc
loope
sub
fucomi
cmpsb
out
cmc
or
mov
and
adc
arpl
pop
add
sahf
aaa
jecxz
mov
imul
cmpsl
sub
outsl
addr16
xchg
into
popf
movsw
ror
sub
sahf
adc
mov
dec
and
arpl
sub
sbb
push
sub
jl
mov
stos
sub
aaa
gs
pop
cmpl
cmp
xchg
les
mov
pop
lret
cmp
dec
sub
add
add
in
xchg
mov
int3
jmp
jecxz
dec
mov
idivb
rorl
jle
pushf
mov
out
sub
fistpll
inc
aaa
push
dec
pusha
xchg
daa
shrb
ret
cmp
jns
repnz
mov
sub
lods
mov
test
xchg
sub
mov
pop
mov
sub
mov
ja
push
cmp
repnz
idiv
leave
mov
out
pop
lods
test
in
pop
movsb
loope
cltd
leave
mov
lcall
int3
inc
jb
icebp
mov
lret
mov
arpl
pop
hlt
pop
jl
push
dec
lret
js
cmc
aam
sti
fsts
push
jb
sbb
xor
fstpl
xor
repnz
lret
test
ret
fucomp
and
add
fs
scas
lret
lret
push
int
out
mov
xchg
shll
push
lret
divb
xchg
sub
mov
popf
insb
xchg
cltd
ds
mov
ljmp
sub
cmp
ss
shll
fbstp
pop
adc
xchg
xchg
xor
loopne
dec
stos
add
cmp
fs
pop
fsubrl
es
inc
push
ret
shrl
sbb
pusha
adcl
inc
pop
xor
mov
sbb
addr16
adc
addl
inc
fidivrs
sub
ficompl
fsin
push
mov
dec
push
push
xchg
mov
data16
mov
pushf
sub
push
cmp
int
enter
cwtl
cltd
pop
outsb
mov
mov
fs
sahf
ret
mov
inc
lret
lcall
les
cmc
popf
in
lock
ret
ret
stos
dec
adc
lcall
sti
int3
arpl
or
popa
mov
sti
inc
xor
add
in
data16
je
add
test
jp
loop
or
test
xor
adc
aas
notl
inc
pushf
xor
xchg
sub
pusha
dec
add
add
sahf
push
jns
pop
stos
andl
dec
jle
lds
clc
in
xchg
jecxz
int3
jns
jnp
jge
jnp
cmp
adc
push
ret
popf
inc
or
push
mov
dec
test
cmc
in
push
popa
mov
int
inc
les
scas
je
scas
dec
push
inc
lock
hlt
fsubl
sub
repz
pop
xchg
push
jns
lods
je
mov
xor
iret
inc
xorb
push
shll
rclb
cltd
mov
aaa
dec
icebp
iret
sarb
adc
in
inc
sub
sub
sbb
ljmp
js
out
repnz
ret
sub
cmp
mov
push
xlat
or
movsb
aad
aaa
aam
inc
bsf
mov
es
aad
jo
inc
mov
les
mov
out
shll
xchg
adc
add
inc
mov
jbe
cltd
lds
loop
inc
add
mov
xor
and
fdivrl
scas
out
ljmp
jae
movsl
mov
dec
sbb
push
push
xchg
inc
gs
cmpl
shrb
lcall
pop
add
fsubs
ja
stos
mov
movsb
mov
insb
jb
mov
xchg
sbb
xchg
push
xlat
adc
pop
fcomps
inc
push
int3
in
cs
jno
push
mov
jo
ret
bound
adc
test
jmp
insb
daa
adc
jns
fisttpl
pushf
push
mov
std
mov
sub
mov
jp
fstpt
fstpl
test
mov
mov
push
repz
jle
leave
insb
les
cltd
sti
cmpsb
ds
sbb
insb
orl
lcall
cmp
les
mov
xchg
idivl
cvtpi2ps
sti
dec
cld
std
test
fnstsw
rcrb
ss
shlb
pop
pop
mov
push
fimull
out
inc
mov
xchg
mov
mov
std
cmpsl
and
rolb
lds
push
ja
xchg
or
int
in
add
fcompl
sbb
clc
inc
pop
imul
cli
lock
outsb
jl
imul
fistpl
xchg
in
adc
lods
pop
cmp
mov
scas
mov
jno
inc
mov
enter
push
xor
cmp
or
and
and
and
jno
sub
mov
mov
inc
fs
cmp
cltd
js
sbb
pusha
sbb
jg
in
xchg
aas
fadd
mov
jne
jb
dec
add
mov
rcrl
mov
fildl
xchg
insl
dec
push
pop
test
mov
pop
jnp
imul
pushf
add
add
jmp
pushf
cmpsl
jbe
xchg
ds
xorl
icebp
push
xor
std
jno
repz
fcompl
jne
cmp
insb
push
jbe
clc
dec
clc
insb
xlat
mov
inc
sbb
out
lcall
das
xor
xor
add
stos
cld
sub
xchg
jnp
jg
cmp
sub
mov
adcb
ljmp
mov
repz
in
jnp
mov
jge
shll
lock
cmp
xchg
mov
mov
inc
shl
fmulp
inc
hlt
add
imul
iret
xor
mov
cmp
movsl
lahf
add
stc
sub
out
add
jl
push
out
ret
jle
mov
jecxz
negl
sbb
fwait
sub
jo
lea
call
movsb
push
out
inc
xchg
addl
jg,pn
and
into
mov
sbb
push
mov
rcrl
adc
mov
lahf
iret
mov
adc
mov
push
push
pop
das
std
adc
push
push
out
cwtl
stos
movl
mov
xchg
cmp
sbb
ss
sub
fwait
pusha
icebp
xchg
movsb
jl
js,pt
mov
shr
fs
out
mov
lmsw
call
mov
xchg
stos
xchg
and
cli
je
in
lcall
sub
and
shlb
fs
sub
or
fldt
aas
clc
xor
addr16
ds
dec
int3
cmpsb
mov
in
in
pop
cs
push
shll
pop
xor
movsl
mov
arpl
sbb
inc
loope
fwait
inc
scas
sub
adc
cmpb
mov
call
sub
in
leave
adc
jno
xchg
sbb
vcvtdq2ps
jmp
push
jmp
add
xchg
nop
cld
imul
mov
scas
movsl
flds
jmp
push
add
ljmp
push
pusha
aam
imul
iret
out
ret
leave
mov
outsb
pushf
dec
dec
loopne
xor
pop
adc
mov
icebp
push
xor
add
scas
push
imul
push
mov
not
cmpsl
adc
add
outsl
in
into
outsl
cmp
sub
or
shll
js
jns
repnz
xor
lods
hlt
mov
ljmp
sahf
add
push
js
and
rorl
out
jno
loopne
sbb
arpl
or
loop
inc
loope
faddl
xor
js
jne
outsb
inc
inc
sti
gs
adc
stos
add
adc
push
es
pusha
dec
or
icebp
cs
stos
sbb
cld
rolb
pusha
push
dec
ljmp
repnz
iret
and
fwait
or
mov
push
imul
cmp
xorb
mov
cltd
cld
cmp
dec
cmc
dec
cld
add
fdivrs
in
fbstp
pop
incb
and
je
insl
ret
mov
rorb
std
push
mov
and
cmp
and
test
out
pop
lret
sub
adcb
fildll
enter
aaa
inc
jno
not
cmp
dec
xorb
xchg
dec
insl
rcrl
bound
ret
into
push
loop
in
jle
mov
jae
pop
xchg
jne
mov
mov
inc
popf
scas
and
sbb
outsb
or
data16
push
mov
dec
cmpsb
adc
out
cmp
xor
movsl
push
xchg
jle
jg
add
adc
or
ficomps
add
sbb
sbb
out
ret
fistpll
mov
cs
dec
or
cli
adc
or
imul
xor
in
xchg
fsubl
mov
mov
out
pop
sbb
fldenv
pop
xchg
adc
xor
mov
xchg
fcmovnu
sbb
repnz
xchg
lahf
mov
loop
xorb
addr16
cmp
stos
adcb
cmp
mov
push
sahf
leave
clc
mov
mov
in
outsl
scas
aam
mov
ret
cmp
cld
rcrl
sub
sbb
addr16
push
jp
dec
sahf
mov
and
and
adc
ljmp
mov
pusha
cmp
cmp
imul
or
push
stos
out
mov
aam
sub
aam
jno
loopne
mov
imul
sbb
pop
out
push
aad
popa
mov
bound
hlt
dec
test
adc
and
fcmovnbe
xchg
scas
frstor
sub
enter
pop
xor
ja
dec
mov
cmp
mov
jmp
out
xlat
fmull
ficoml
movl
pop
lds
mov
add
dec
rcll
mov
xor
mov
mov
shll
leave
cld
cmp
rcrl
mov
fcomps
cmp
loopne
fisubs
test
mov
sbb
lds
ret
ds
xchg
xor
adc
or
and
in
cld
les
mov
das
mov
nop
cmpsl
orb
mov
fnsave
cltd
sub
dec
sahf
ret
fidivl
mov
fstp
icebp
dec
loope
sub
and
notl
repnz
xchg
icebp
pop
sub
insb
jb
push
mov
in
mov
and
mov
dec
mov
arpl
xchg
jp
stos
mov
nop
push
mov
stos
lods
mov
mov
mov
jge
push
xchg
mov
shlb
call
inc
stos
jecxz
stc
or
jg
test
sub
push
data16
dec
push
cmp
lock
pop
test
or
inc
pushf
out
xor
repz
mov
jbe
fstp
ljmp
sub
orb
nop
and
repz
sbb
adc
jle
xchg
rcll
in
das
dec
inc
je
adc
stos
xchg
fildll
imul
daa
jle
popf
inc
imul
cmc
inc
jmp
sub
popa
jg
pop
repnz
mov
shlb
lods
or
mov
dec
cs
push
ds
negb
adc
push
ret
cwtl
fildl
xor
xchg
inc
push
imulb
mov
lea
leave
inc
test
sub
inc
pop
jnp
mul
pop
dec
stos
lahf
adc
insl
add
aaa
out
in
scas
adcb
into
mov
push
cmp
inc
sahf
dec
aas
mov
jl
dec
out
push
out
int3
fcmovnu
pop
insb
ja
fmuls
xor
mov
inc
test
repz
dec
dec
add
mov
mov
decb
mov
in
adc
call
add
je
pop
dec
imul
sbb
mov
mov
xchg
mov
xor
and
bound
add
iret
cmp
cmp
lret
mov
icebp
lret
loopne
adc
mov
lret
push
xchg
xchg
or
push
fdiv
xchg
mov
shrl
add
and
ljmp
adc
out
ficoml
mov
cmp
sar
sbb
dec
mov
mov
insb
in
push
xor
jns
pop
aad
mov
movsl
push
in
xlat
push
xchg
jns
gs
test
push
pop
xor
xchg
push
pop
inc
or
fwait
outsl
add
xor
mov
dec
sbb
divb
jmp
in
and
ds
pop
inc
sub
sub
xor
push
test
dec
mov
mov
jne
mov
test
mov
xor
arpl
push
movsl
push
sbbl
cmp
scas
lock
cs
jns
aas
or
rcr
jge
mov
je
fwait
in
jns
or
inc
js
mov
inc
pop
cs
pushf
pop
daa
js
int
push
sbb
mov
popa
sbb
xchg
aaa
js
aaa
aaa
jnp
es
pop
jg,pn
mov
mov
fisubrl
pop
push
sahf
movb
lock
rcll
in
js
pop
push
scas
inc
test
pushf
cmp
xchg
test
mov
aaa
inc
jecxz
cmp
shl
sub
out
loop
subb
xlat
dec
or
pop
imul
mov
nop
int
stos
fldt
inc
hlt
mov
add
mov
test
sub
xchg
jns
sbb
out
push
lock
pop
or
gs
add
add
cwtl
mov
not
xchg
leave
rcll
jb
xchg
xor
xor
repz
xor
leave
mov
lock
les
sbb
aas
rep
fsubrl
or
xchg
and
pop
mov
xchg
addr16
ljmp
add
xchg
aaa
aaa
or
fcmove
pop
push
mov
push
popa
loop
loope
orl
test
in
cmp
sahf
daa
sub
test
mov
push
in
xor
adc
mov
mov
insl
icebp
mov
mov
jb
int
iret
lods
movsb
pop
aaa
mov
std
les
jbe
push
fcomps
insl
inc
js
mov
pop
sbb
mov
push
dec
and
pop
xchg
jge
xor
out
subb
ljmp
mov
and
scas
pop
inc
stos
outsl
aas
aam
jg
test
sti
adc
lock
or
xor
addr16
lcall
mov
push
lds
sbb
push
jns
sub
add
xor
ss
movsl
mov
cmc
out
xor
jle
sbb
sub
bound
andl
or
loop
loopne
mov
loopne
and
xchg
movb
cwtl
bound
mov
cmpsb
icebp
adc
movl
je
leave
scas
pop
dec
fs
outsl
mov
inc
jnp
jecxz
mov
or
or
lock
or
roll
jno
lea
insl
cmpsl
ret
mov
popf
adc
and
in
stos
popa
movsb
out
add
sbb
mov
repz
lock
jge
insb
xor
sub
or
mov
loop
adc
and
lret
push
outsb
dec
adc
incb
lds
xchg
cmc
out
adc
imul
enter
ds
pop
repnz
stos
lea
in
out
xchg
lret
cltd
leave
popa
mov
pushf
sbb
cmp
xlat
scas
dec
loop
shr
add
push
into
iret
arpl
test
mov
sub
shr
sbb
sub
lea
push
frstor
cmp
outsl
inc
lds
jl
std
xchg
mov
xchg
ret
inc
and
std
loope
in
inc
je
add
and
cs
mov
sub
pop
pushf
ds
and
test
hlt
or
repz
sbb
loop
add
imul
mov
adc
or
out
mov
lea
lods
sub
adc
outsb
adc
xchg
push
sarb
pop
add
in
cwtl
adc
mov
pop
imull
ds
aam
add
mov
ja
aas
sub
jl
outsb
mov
inc
int
std
dec
ret
lcall
movsl
push
lods
and
and
xor
xchg
sbb
xchg
xchg
add
hlt
jmp
mov
mov
mov
out
clc
outsb
inc
inc
fidivl
adc
fdivrp
lods
cmp
jae
dec
cmp
xor
inc
incb
cmp
pop
shlb
nop
or
sbbl
add
adc
jnp
data16
sub
out
aad
cmp
or
js
and
cmp
mov
nop
push
repz
in
insl
in
scas
fisttps
dec
mov
and
cmc
loopne
add
fnsave
jae
mov
jne
es
cmpsl
daa
shll
pushf
jle
insb
out
sbb
sub
arpl
sbb
cmp
dec
sub
or
jp
or
mov
xor
repz
stc
daa
das
add
dec
mov
add
clc
les
cmpsl
cmovp
xchg
data16
in
fistl
add
cmp
cmp
adc
and
cmpsl
sub
sub
fistpll
or
jbe
push
mov
mov
inc
dec
out
sub
pop
test
loop
repnz
xor
push
daa
mov
push
mov
dec
mov
fs
int
lcall
fcomps
rcl
mov
imul
adc
ret
repz
inc
xlat
dec
cmp
inc
xchg
fstpl
fsts
cltd
lcall
jge
and
pushf
mov
push
out
xor
nop
adc
push
mov
push
inc
aam
fidivl
ficoms
clc
mov
test
adc
popa
sub
loop
incl
add
jae
aas
pop
sub
inc
mov
scas
dec
test
flds
xlat
xchg
cmp
call
nop
adc
adc
or
out
mov
inc
cmp
testl
mov
inc
mov
cmp
dec
adc
sub
bswap
mov
sbb
inc
adc
sub
push
lock
push
jge
ja
adc
push
outsl
jmp
int
movsb
ljmp
pushl
imul
in
loope
icebp
dec
adc
xchg
mov
pop
sahf
xchg
in
test
mov
imull
sub
and
inc
and
jmp
cmp
ljmp
xor
push
hlt
cwtl
xchg
mov
mov
jmp
ret
mov
lret
adc
inc
mov
xchg
inc
mov
sarl
out
imul
ds
lods
add
pop
iret
ds
fwait
imul
ret
mov
mov
add
sbb
cmp
ja
xor
pop
insb
lahf
cli
jnp
mov
jae
dec
test
xchg
pop
sub
jl
mov
and
sub
xlat
pop
jo
leave
sbb
lods
cmpsb
lret
clc
push
xchg
jno
adc
insb
push
add
or
sbb
push
icebp
push
mov
enter
int
xchg
cwtl
cmp
pusha
inc
pushf
push
stos
mov
and
arpl
mov
addr16
jbe
add
push
push
xchg
sbb
dec
push
pop
lock
sar
push
enter
cmp
xchg
add
push
pushf
mov
dec
mov
fst
es
rorl
lret
inc
gs
sbbb
addr16
imul
or
decb
aam
xchg
das
movsb
mov
pop
int
andl
hlt
lods
mulb
or
pop
cmpsb
mov
adc
orl
sbbl
insl
js
mov
into
les
add
jae
fnstsw
rolb
clc
jb,pt
inc
lret
jp
inc
xchg
popa
add
es
js
sub
xchg
aam
xor
cltd
pop
sbb
cmp
cmpsl
in
fwait
adc
inc
dec
or
leave
shl
rcr
push
lods
mov
insb
test
fabs
divb
and
xorw
sub
cld
dec
mov
test
xlat
sub
fs
xchg
es
std
in
and
lcall
mov
jne
adcb
mov
mov
fidivrl
jb
and
add
add
xchg
into
pop
aam
outsb
xchg
sub
add
popf
xor
push
add
pop
stos
leave
lret
scas
mov
mov
or
movsb
int3
add
testb
imulb
xchg
dec
xchg
mov
out
cmc
je
mov
push
pop
fdiv
das
adc
ret
mov
cmp
outsb
icebp
popf
mov
mov
dec
stos
sbb
mov
clc
dec
scas
pop
adc
cmc
aad
cmc
jle
nop
cli
xor
sub
icebp
and
mov
sub
mov
mov
aas
jo
enter
adc
jle
dec
stos
enter
outsb
mov
push
mov
fidivs
js
adc
mov
push
xchg
pop
call
pop
imul
fdivr
enter
aad
add
aaa
mov
mov
jbe
add
or
add
mov
jbe
mov
xchg
lea
outsb
in
outsl
cmp
inc
push
push
cmp
pop
gs
movsl
popf
sbb
fldl
add
adc
int3
cld
add
cmp
in
pushf
mov
add
sbb
std
cltd
pop
or
outsb
xlat
push
ret
enter
es
lock
std
into
push
lcall
in
les
sub
loop
nop
and
pop
rcrl
aas
push
adc
pop
xchg
or
test
pop
or
xchg
popa
out
test
push
pop
pop
incb
cli
or
movsl
sbb
inc
adc
pop
mov
cmp
pop
xchg
pop
pop
ret
in
repz
jb
inc
dec
rorl
arpl
cmp
cmp
cmp
xchg
lcall
sbb
sub
lahf
push
mov
sbb
pop
add
nop
shrl
xor
sub
leave
int3
mov
xchg
inc
test
inc
mov
and
push
shlb
sbb
ja
fucomp
xchg
mov
xor
mov
sbb
loope
out
rclb
mov
inc
stos
xchg
mov
inc
mov
add
pop
aad
pop
jbe
cmp
sbb
pop
xor
fs
mov
add
cmovs
iret
imul
dec
jb
stc
mov
aam
pop
ss
add
lret
hlt
scas
fstp
mov
sarb
popf
sub
pop
xor
and
sbb
push
cmp
sub
lods
push
insl
out
movsb
pop
pshufw
xor
and
lods
cli
mov
shr
dec
shrb
mov
pop
cli
fwait
xchg
mov
jmp
cs
and
mov
and
ja
push
jp
dec
testl
pop
adc
jge
lock
stos
in
fidivrs
inc
mov
ret
aas
push
pop
popa
push
sub
ds
push
lds
add
ljmp
and
xor
mov
ljmp
mov
push
rorl
je
cmp
mul
jle
ja
movsb
std
leave
sti
pusha
cli
out
adc
push
mov
jg
mov
lea
push
dec
dec
in
mov
aam
imul
xor
ss
ss
mov
test
ja
pop
mov
cs
scas
mov
ds
adc
loope
imul
out
mov
pop
rorb
fildll
dec
imul
dec
sbb
sahf
dec
or
jns
mov
jbe
mov
xlat
mov
dec
pop
dec
cltd
test
adc
leave
movsb
cmp
sarl
xchg
scas
scas
test
push
cli
out
repnz
push
ja
and
nop
mov
loope
dec
sti
add
addr16
rcrl
test
aaa
insl
jecxz
mull
jge
cmp
movsl
fdiv
or
xchg
clc
xchg
fstpt
or
iret
vphaddubd
rorl
in
adc
addr16
fistpl
xchg
movsl
loop
in
es
xchg
andl
mov
inc
inc
mov
and
mov
xor
xchg
pop
mov
inc
out
xor
movb
aad
jmp
adc
mov
jle
stc
fists
mov
add
fldenv
sub
fmull
ret
negl
or
mov
xchg
aad
sub
fs
out
cmpb
jle
xchg
mov
pop
ds
mov
cld
add
jae
mov
insb
xchg
sbb
int3
cmp
gs
mov
mov
out
repnz
sub
cwtl
sbb
mov
cmc
dec
xor
sub
sub
hlt
loope
adc
es
cmp
out
into
mov
test
fdivrl
mov
mov
mov
outsl
cmp
cmp
sub
dec
popa
test
cmp
aaa
int
mov
fnstcw
lret
test
push
add
mov
pop
insb
sbb
adc
cmp
mov
data16
cmpsb
ljmp
adc
xor
mov
mov
or
loope
xchg
sahf
dec
addr16
mov
and
and
mov
into
jae
mov
sahf
xor
jmp
cmp
mov
js
add
pop
popf
dec
sub
sbb
cld
inc
push
or
sub
mov
jo
xor
imul
fisttpll
orb
test
lds
lods
adc
mov
inc
inc
mov
daa
frstor
rcll
daa
ficompl
pop
cmp
mov
aaa
jmp
insb
andb
lock
ret
xor
sbb
sub
jg
dec
insb
test
mov
inc
cmp
cmp
int
jo
movsb
aas
stos
orb
shrd
add
lds
adc
xorl
inc
sub
cmpsb
mov
pop
push
nop
inc
adc
in
je
insb
aam
ret
aad
sbb
cmp
adc
pop
mov
push
pop
outsl
adc
inc
and
mov
mov
mov
jg
popa
cmpsl
addr16
jnp
jg
xchg
jg
dec
pop
push
xor
in
mov
fisubrl
sbb
mov
jnp
and
fsubrs
push
mov
mov
dec
xlat
sbb
fidivrs
mov
jne
jae
in
iret
push
inc
jg
mov
dec
scas
jo
and
data16
bound
push
sub
push
cmp
shrb
stc
jae
imull
outsl
adc
xor
mov
and
fs
pop
loopne
pop
cmp
jno
jb
in
push
or
mov
mov
inc
es
lret
push
das
ret
inc
or
lret
mov
vandnpd
lea
mov
out
and
lea
mov
imul
in
das
test
add
fistpl
xchg
sbb
dec
pushl
ss
push
xchg
inc
aas
cld
or
jns
mov
shr
mov
imul
nop
popa
and
jmp
mov
mov
cmc
shrl
daa
mov
lock
test
adc
mov
or
push
add
les
rorl
pop
xorb
aam
in
ret
pop
pushl
sahf
mov
testb
xor
test
ret
add
data16
das
add
inc
jnp
out
jno
sub
outsl
add
je
nop
jge
fsts
pop
jns
jne
std
jns
cmc
adc
addr16
xchg
mov
and
das
popf
jle
push
push
out
jae
and
xor
icebp
push
add
mov
mov
cmpsb
inc
mov
into
test
out
pushaw
add
cld
and
dec
aam
inc
mov
sahf
dec
das
add
inc
pop
fisubs
dec
fwait
adc
xchg
js
or
rcrb
popf
clc
add
sbb
jno
std
cmp
dec
push
xchg
sub
mov
and
cltd
xchg
stos
push
push
out
mov
xchg
out
or
mov
js
xchg
mov
ret
loopne,pn
pop
test
push
lods
jnp
jle
icebp
xor
jb
and
fsubrl
dec
rorl
sbb
xchg
mov
imul
adc
arpl
iret
pop
cmpsl
jb
jo
pop
xchg
shlb
and
pop
or
pop
int
or
js
xor
shrb
dec
inc
mov
movsl
sub
lods
cmp
insl
pop
mull
lods
test
bound
xchg
lret
pop
enter
pop
push
pop
dec
ds
insb
xor
scas
fcomp
addb
mov
cld
lahf
stc
lods
aad
jg
sbbl
pop
jle
rolb
out
ss
and
shlb
inc
push
or
repnz
pop
push
mov
lods
je
bswap
mov
mov
test
jg
stos
lock
loop
lret
notl
fucomi
leave
inc
jae
icebp
in
fnsetpm(287
or
rcr
mov
sub
mov
sbb
shll
aam
mov
loopne
xchg
pop
out
outsl
sahf
mov
cmp
cli
fcoms
jns
fildl
jmp
insl
mov
into
je
rcrb
pop
jbe
pop
jle
cmp
ss
lcall
shrd
out
dec
pop
and
mov
outsb
xchg
fstps
pop
adc
pop
gs
inc
mov
dec
iret
jg
sti
lret
int
out
mulb
inc
mov
mov
pushaw
push
pop
adc
cmpsl
add
or
cmpsb
not
and
jno
inc
push
or
rorl
scas
andl
fs
xchg
jle
cmp
int3
cld
fpatan
orb
js
jne
jne
xor
push
push
mov
inc
stos
push
push
mov
lods
and
and
loopne
lret
xchg
std
mov
mov
stos
mov
push
sub
ret
aad
cmp
lea
sbb
or
jb
imull
and
fnstenv
dec
cmp
sub
dec
je
mov
ds
addr16
xchg
je
cmpsl
cwtl
ds
in
pop
mov
loopne
and
mov
jmp
mov
pop
js
add
dec
sub
mov
mov
filds
int
lds
out
popa
les
or
gs
xor
xchg
pushf
xor
sti
or
les
mov
cmp
cmpl
or
or
pushf
mov
and
sub
push
rorl
aam
divb
push
stc
mov
rolb
mov
xor
or
and
lods
sti
adc
add
aad
andl
sub
cmovno
xchg
jb
sarl
mov
leave
sbb
adc
pop
aaa
mov
mov
add
jle
inc
aas
jge
xor
pushf
cmp
pop
cwtl
into
xor
jbe
loope
rcll
fisubrl
movb
outsl
aad
ss
jns
imul
mov
adcl
add
push
lods
add
mov
cmp
inc
sarl
push
in
xor
mov
jno
push
or
ja
jle
sub
and
or
loope
ret
add
add
scas
nop
les
push
or
pop
sbb
cmp
movsl
and
push
lahf
ja
sbb
lods
push
iret
sahf
insb
cmpsl
out
iret
and
outsl
inc
aad
jo
sub
mov
aaa
pop
mov
inc
ret
mov
or
and
sbb
mov
repz
adc
out
lods
mov
inc
aad
aam
mov
insb
xchg
stos
pop
cs
mov
dec
fisttpll
xchg
sub
sub
or
enter
mov
jno
inc
les
or
bound
adc
lret
ljmp
lret
lods
lcall
insl
jge
mov
sbb
pusha
imul
pusha
push
xchg
sbb
movsb
pusha
shld
xchg
je
or
mov
mov
fsubrs
adcl
cmpl
sarb
daa
in
dec
fcmovu
in
inc
lahf
stos
call
pop
push
push
dec
in
fisubl
cmc
iret
dec
movsl
test
and
sahf
insb
adc
jne
jne
shr
cmpsb
lret
ucomiss
pop
pusha
loopne
pop
fiadds
lds
pop
loop
scas
mov
outsb
test
mov
jge
xor
gs
jae
es
sbb
push
fwait
push
loopne
outsl
or
lds
stos
push
ss
or
cmp
jb
jecxz
fsubp
fs
lret
scas
or
inc
xor
pop
loop
pop
js
stos
pop
xchg
xchg
mov
dec
ret
adc
test
fcomps
cmpsb
cmp
leave
and
bound
lea
pop
xchg
shr
mov
pushf
mov
xor
or
mov
push
aas
outsb
push
arpl
push
push
jo
push
adc
mov
dec
lret
test
das
cmp
cmp
rorb
dec
out
sbb
rcr
mov
xchg
xchg
push
es
cmp
mov
cltd
test
sbb
cmpsl
sbb
ljmp
pop
test
and
loopne
addr16
sub
dec
lahf
dec
popa
jae
jmp
std
xchg
inc
jb
jb
in
mov
xor
fiadds
mov
out
in
jl
lahf
cmpsl
jno
and
leave
sbb
adc
mov
and
insl
addr16
popf
cmp
adc
jb
jns
jle
lfs
shrl
dec
fdivrl
repz
pop
je
push
mov
sbb
jp
mov
in
fstl
scas
stos
mov
ja
outsb
xchg
pop
sub
arpl
je
in
sbb
cmp
sub
dec
and
andb
mov
push
xchg
shrb
adc
aad
push
inc
ja
inc
push
xor
pusha
mov
out
xchg
cs
lods
sub
outsl
js
jle
xchg
pop
sahf
aad
imul
jno
es
sub
jns
adc
push
xor
sbb
add
sub
out
addl
cmp
call
scas
push
pop
mov
sbb
cwtl
loop
shr
insb
mov
iret
jae
flds
call
ljmp
out
rolb
mov
pop
ljmp
daa
insl
add
jge
outsl
nop
fstps
shrl
addl
xor
or
jle,pt
dec
pop
mov
sbb
mov
sbb
mov
pop
or
cli
bnd
mov
jp
pop
cmp
ja
xor
std
or
cmpsb
in
aad
mov
push
push
scas
xor
cltd
adc
loopne
cmpsb
jg
aaa
imul
jne
mov
push
jns
adc
xchg
repnz
fldl
jle
rolb
fldl
dec
sub
mov
outsb
int3
clc
addl
dec
testl
call
test
out
call
imul
mov
data16
inc
cmp
shlb
aas
fisubrl
xchg
inc
frstor
in
mov
sahf
inc
scas
jb
stc
stos
add
insb
xor
xchg
dec
add
sub
push
subl
test
xchg
popf
xchg
clc
aad
and
icebp
xchg
aad
or
cmpsl
cmpsl
insl
xchg
jg
arpl
into
pop
cmp
adc
push
int
dec
mov
mov
sti
inc
scas
push
lods
pop
xor
fildl
lret
mov
popf
mov
mov
xchg
xchg
es
outsl
dec
enter
ficomps
push
xchg
xchg
movsb
int3
inc
insb
xchg
sbb
mov
jl
and
jge
mov
ret
pop
daa
sbb
xchg
push
fidivl
jl
push
pop
mov
pop
xor
mov
mov
cltd
jge
jmp
cli
cltd
sbb
mov
in
repnz
ss
cltd
add
pop
into
call
js
les
mov
cmp
pop
or
ds
imul
dec
or
out
test
in
jo
insl
mov
xchg
add
popf
and
xor
xchg
decl
mov
lods
out
xchg
jns
mov
movsl
iret
out
stos
loop
fildll
das
imul
loop
or
lahf
dec
add
dec
ss
jns
dec
stc
jl
jp
daa
mov
repz
movq
fisttpl
loope
int
out
xchg
arpl
pop
out
pop
fsubrl
push
fimuls
push
jae
pusha
adc
sbb
add
lea
out
jnp
mov
inc
loop
aaa
pop
jle
cwtl
pushf
mov
push
cs
cmpsl
cmpsb
mov
sbb
std
rorb
dec
outsb
pusha
jbe
inc
loope
or
mov
lea
out
xchg
sub
ds
jl
fstps
insb
sbb
or
cs
pop
pop
push
sti
push
pop
in
inc
outsb
inc
xor
dec
and
inc
into
mov
cmp
inc
addb
shrl
xchg
popf
adc
mov
push
inc
xor
fcmove
stc
shlb
pop
lret
inc
scas
cli
in
clc
sbb
fisttpll
or
xchg
mov
mov
clc
push
mov
cmp
cmp
xor
cli
stos
jge
xor
ljmp
jg
fldl
and
xchg
loopne
inc
pop
stc
insb
xchg
cmp
pop
xchg
and
outsb
fs
adc
xor
ror
dec
ficoms
fmulp
loopne
aad
push
mov
sbbl
adc
jno
addr16
adc
xlat
xchg
arpl
sbb
inc
cmp
imul
repz
mov
mov
dec
sub
int
fildll
rol
orl
into
xor
out
cmp
pop
cmp
aad
mov
les
sbb
test
jge
sub
mov
test
out
ss
lds
or
outsb
push
pushl
mov
mov
mov
mov
addr16
sub
shlb
out
mov
fbstp
popf
mov
data16
insl
fucom
dec
sti
push
in
ret
imul
aad
or
das
cmp
pop
dec
push
fs
inc
pop
pop
daa
icebp
and
cmp
inc
divl
std
jle
cmp
test
insb
das
cmp
cmp
pusha
lds
mov
push
inc
push
inc
fs
cmp
push
push
mov
pop
or
enter
cmp
in
in
mov
fidivrl
call
fs
insl
jp
repnz
sbbl
sub
daa
adc
pop
mov
xchg
xor
mov
mov
lock
into
int
sbb
mov
sub
mov
push
xchg
outsb
adc
cwtl
lods
or
mov
cld
adc
jnp
test
lods
mov
insl
dec
mov
popf
pop
and
lea
lods
sbb
sub
jge
sub
popf
fiadds
aas
sti
repz
ds
frstor
mov
mov
and
xchg
shrb
or
jo
mov
out
sbb
aaa
out
mov
sbb
inc
aad
imul
stos
iret
mov
fs
loope
imul
add
inc
iret
or
push
mov
mov
push
test
jns
cmp
lahf
stos
jecxz
jne
aad
test
cltd
movsb
fildl
aam
cmp
sbb
in
cmp
es
lea
or
stos
in
pop
mov
dec
fmuls
sub
cwtl
mov
sahf
sub
add
cs
icebp
icebp
pop
shll
xchg
pushf
sahf
dec
or
adc
pop
daa
mov
sbb
cli
push
int3
xlat
imul
add
popa
add
mov
dec
rorb
inc
adc
pop
xor
jl
mov
or
push
mov
inc
sub
movsl
mov
sarl
push
dec
mov
jno
push
mov
enter
subl
cli
cmp
fadd
std
push
iret
aaa
jne
and
inc
cmpsl
xchg
aas
mov
sub
mov
mov
sahf
icebp
cmp
xchg
daa
ret
lods
lods
push
test
inc
faddl
pop
js
xchg
jg
jge
dec
sub
jmp
lahf
pop
movsl
rclb
sub
popa
xchg
dec
xchg
or
rcr
mov
add
xchg
mov
aaa
mulw
jle
mov
mov
cmp
fwait
hlt
test
loope
dec
cmp
lea
or
push
mov
jae
test
test
movsl
aad
mov
sub
out
testl
mov
les
mov
and
bound
lock
fs
jl
leave
pop
pop
lahf
lcall
add
jnp
std
lods
mov
xchg
imul
outsl
bound
cmc
call
xchg
jle
and
ret
mov
cmc
inc
cli
jge
cs
pop
cmp
pusha
jb
lcall
jne
mov
popf
nop
jmp
jecxz
cmc
pop
fnstcw
jge
fbstp
adc
xchg
mov
sub
movsb
dec
sbb
aaa
fstpt
loop
out
imul
add
sub
xlat
push
push
ret
popf
jp
fcomps
aaa
std
push
push
js
xor
add
dec
jge
lret
sbb
mov
mov
sub
pop
push
js
inc
sahf
cmc
push
push
pushl
inc
cmp
adc
mov
xchg
mov
insl
sbb
adc
in
inc
mov
mov
sti
scas
adc
testl
push
insb
xchg
fldl
xchg
fs
cmp
push
mov
mov
popf
push
fistl
xor
mov
paddsb
fwait
push
stos
fyl2x
out
mov
and
imul
test
je,pt
mov
sub
push
sti
roll
insl
add
cmpb
idivl
or
ret
imul
rolb
rolb
jge
xchg
lcall
lret
arpl
hlt
loope
es
mov
inc
adc
rorb
mov
push
enter
dec
lea
xor
call
pushf
repz
add
stos
ds
pop
int
sub
rorl
out
inc
add
xchg
cmp
sub
in
test
pop
cwtl
mov
pushf
not
ret
cltd
decb
add
pushf
or
pop
add
js
dec
push
adcl
adc
xor
or
cmp
push
inc
aas
push
and
ss
mov
movsb
cmpsb
xor
cltd
push
subb
add
push
and
xor
sbb
xlat
stc
and
mov
aad
imul
sbb
lds
adc
cmc
jge
ja
lret
push
sbb
stos
push
mov
icebp
cmc
sub
clc
cmpsl
mov
inc
scas
movsl
addl
push
mov
push
jmp
dec
dec
mov
mov
mov
data16
fs
adc
mov
sbb
mov
rcll
mov
sti
pop
js
jnp
in
repnz
mov
jmp
and
fnstsw
add
mov
pop
arpl
jl
jo
adc
cmp
insb
dec
pop
pop
or
inc
rcrl
daa
and
testl
xchg
push
inc
rcll
nop
aaa
jns
int3
std
shrb
cmp
pop
add
stc
add
imul
cmp
lret
or
lahf
dec
xchg
dec
xchg
mov
imul
imul
xor
dec
rolb
mov
inc
dec
faddl
jl
adc
mov
sub
jns
mov
dec
rol
add
jnp
out
hlt
push
cmpsb
lea
ret
into
xchg
xchg
mov
xor
pop
movsl
mov
cmp
cmpsl
sbb
cmc
sbb
jp
test
sahf
lret
aas
or
cmpsl
or
dec
mov
fimuls
sbb
dec
cmp
dec
data16
xchg
hlt
pop
cmp
cmp
sub
test
das
mov
sbbl
and
sar
scas
cs
les
push
or
subb
mov
mov
mov
scas
mov
mov
shlb
sbb
out
adc
dec
dec
adc
fnstenv
xchg
outsb
xchg
mov
dec
dec
jge
add
cmp
stos
cld
mov
add
ret
sbb
movsb
or
lds
xchg
addr16
mov
jecxz
into
mov
popf
icebp
test
pushf
xor
enter
or
cwtl
int
pop
test
and
insb
xor
lods
test
lods
add
mov
mov
repnz
inc
cmp
shll
mov
cmp
aas
rcrl
jo
xor
jb
cmc
cmp
lods
cwtl
es
pop
enter
push
inc
cmpsb
je
mov
push
and
jge
xor
mov
sbb
push
xchg
js
jne
in
sbb
andl
cmpsb
jge
pop
test
test
pop
sub
mov
adc
nop
cltd
insb
mov
mov
add
xor
cmp
aad
push
mov
jno
jp
ret
lods
leave
lea
in
mov
mov
int
or
dec
sub
mov
lcall
aam
sub
or
jb
test
dec
push
xorl
sbb
je
je
sbb
clc
loop
lcall
mov
nop
ret
test
pop
out
adc
mov
int
xchg
dec
clc
pop
dec
sbb
push
mov
mov
sub
jae
int3
pop
pop
lock
sbbb
pop
repz
xor
idivl
xchg
xor
sub
xchg
cltd
dec
in
or
pushf
xchg
sbb
stc
push
stos
fmull
scas
mov
fdivs
cld
add
mov
adc
jno
loope
cwtl
pop
mov
rcrl
jns
daa
fucom
sbb
aas
call
adc
push
lock
fisubl
sub
pop
insl
mov
push
lods
jo
sub
dec
mov
mov
pusha
shll
mov
push
outsb
je
fimuls
int
gs
ds
sbb
jnp
pop
gs
in
and
ret
icebp
or
jae
dec
or
pop
shlb
pop
xchg
shll
popf
and
fstl
dec
imull
mov
push
add
mov
int3
cmpsl
icebp
pop
daa
enter
fmull
jge
mov
inc
cwtl
lods
xor
xor
mov
or
es
cmpsl
push
jne
shl
jmp
into
enter
ret
mov
xchg
mov
cmc
int
jmp
stos
or
xchg
fstl
scas
xlat
xorl
push
and
fstps
push
testb
stos
int3
sbb
jg
or
outsl
mov
mov
stc
mov
jp
pop
sbbl
dec
lock
xor
test
mov
ljmp
and
or
fwait
outsb
inc
scas
orb
sar
icebp
enter
pop
jne
data16
loop
stos
in
rcrl
mov
jge
pop
cmp
loopne
push
cmp
lods
jne
repz
jno
adc
lods
inc
or
rcr
mov
xor
fwait
push
add
mov
stos
xchg
xchg
into
clc
push
cli
adc
sub
cmp
cs
mov
inc
mov
cli
or
mov
orb
fistpl
std
pop
add
imul
mov
xor
fiaddl
shlb
dec
std
fdivr
pushf
mov
xchg
jno
jge
iret
sub
inc
mov
inc
inc
xchg
sub
lods
cmp
mov
or
movsl
imul
xor
stos
sbb
mov
ja
daa
cmp
lcall
cmpsb
push
sub
loopne
rcl
mov
inc
mov
in
mov
adc
aaa
push
cltd
pop
mov
mov
mov
push
xchg
cli
pop
xchg
cli
sbb
jl
dec
sub
insb
push
mov
cwtl
push
dec
pop
clc
xchg
xchg
dec
shl
jb
testb
cli
repnz
rolb
mov
rcll
sub
es
adc
sbb
cmp
lcall
lret
inc
push
testb
test
lods
and
push
sti
cwtl
pop
add
xor
xchg
adc
xor
mov
loopne
sub
cmpsb
pop
sbb
test
adc
imul
xchg
out
push
testb
cmp
jns
mov
push
cmp
lret
pop
es
mov
loope
stc
mov
andb
jo
mov
movsb
mov
sub
loopne
dec
dec
out
icebp
xor
adc
data16
mov
mov
jecxz
bound
negl
ja
pop
dec
lahf
in
loop
sub
cmpsb
xchg
bswap
scas
arpl
pushf
rolb
or
jmp
jbe
cmc
sub
ss
cmpsb
ret
xor
out
xor
inc
xchg
mov
jecxz
or
addr16
lea
xchg
cwtl
jbe
leave
and
insb
jl
popf
in
cmp
daa
push
lods
aam
lcall
xchg
js
pop
lahf
loopne
cli
sbb
mov
inc
stos
aas
test
out
test
cmp
addr16
in
loopne
fsubl
out
jge
xor
lret
or
dec
or
dec
lds
cmp
sbb
sti
lahf
xor
in
xchg
lret
push
xor
mov
jge
lea
js
and
aaa
dec
nop
ror
pop
out
stos
add
mov
inc
dec
fdivrs
rcr
xchg
mov
sub
icebp
sub
cmpsb
in
push
xchg
mov
fcos
or
mov
sub
pop
push
dec
test
sbbl
push
wbinvd
daa
popa
or
addr16
jp
hlt
mov
push
loopne
sub
shlb
dec
stos
scas
cwtl
xlat
xchg
push
jp
stos
add
sarl
sbb
test
adc
mov
addr16
mov
scas
inc
sbb
sar
loope
jp
add
fwait
subl
jb
loop
or
insb
or
sarl
mov
out
dec
bnd
and
sbb
push
pushf
inc
cmc
dec
or
jle
mov
aad
adc
or
xor
mov
dec
pusha
dec
fs
inc
dec
dec
imul
xor
ja
ljmp
scas
fistpll
fwait
push
mov
sub
movsb
jl
stc
mov
sti
fwait
cmp
ja
lods
xchg
add
add
jle
lds
push
js
jge
mov
imul
imulb
test
ljmp
fisttpl
mov
push
dec
cld
mov
mov
mov
xlat
clc
inc
mov
add
repnz
cmc
test
xor
add
push
gs
jecxz
inc
hlt
cltd
add
mov
and
push
test
shrb
rorl
lea
pop
mov
dec
ret
lahf
mov
aas
jno
or
loope
jl
shl
testl
mov
loopne
cmpl
loopne
push
inc
lods
adc
cmc
int
int
leave
xchg
clc
push
out
mov
movsl
iret
mov
iret
divl
test
mov
call
les
dec
xchg
xchg
pop
popf
faddl
jge
sub
in
push
pop
fistpll
mov
mov
imul
xchg
sub
leave
fnsave
add
jge
sub
add
mov
addl
pusha
jmp
mov
scas
test
test
adc
or
test
sbb
jne
out
cld
sbb
mov
clc
inc
outsb
xchg
pop
dec
fdiv
pop
testb
inc
aas
jecxz
out
add
push
push
pop
cld
mov
cltd
lcall
shll
fwait
ja
cmp
fsubrl
cmp
movsb
nop
popa
mov
push
adc
pusha
push
cmp
outsb
mov
mov
dec
sub
inc
xor
rcrl
adc
mov
adc
aad
sub
jno
in
or
push
enter
aam
cmp
stc
mov
mov
add
lods
lahf
cmp
mov
mov
jno
test
sub
aam
jl
lods
sub
cmp
test
mov
push
xor
out
add
lret
cmc
call
test
ror
dec
daa
mov
ja
stc
xor
iret
sbb
push
lea
xor
push
mov
jo
movsb
jno
es
sub
add
xor
sub
cmpsb
xor
mov
outsb
rol
push
pop
jbe
push
pushf
pop
scas
scas
ss
cmp
rclb
lahf
xchg
and
sahf
or
in
shl
inc
ljmp
and
outsb
add
and
add
mov
cs
movsb
add
and
adc
inc
push
mov
ss
add
pop
insb
inc
jo
fwait
sti
imul
stos
and
xor
fmuls
mov
xor
jg
shll
outsb
mov
sbb
test
add
mov
imul
mov
sar
fisubrl
call
insb
sub
aad
insl
in
mov
repnz
mov
sti
pop
and
aas
sub
or
lds
lahf
aad
clc
cmc
inc
jecxz
mov
mov
lea
pop
jl
fdivl
aaa
inc
imul
test
cmp
sub
out
adc
push
popa
fs
sahf
jle
sti
fiaddl
cmp
rorl
inc
bound
data16
icebp
mov
add
cmc
in
imulb
or
fldenv
test
adc
dec
inc
mov
insb
add
sarb
stc
lret
lds
pop
insl
ljmp
sub
mov
out
jmp
hlt
xchg
dec
stos
cwtl
jl
cld
jg
das
cmp
lahf
lahf
shll
daa
jge
test
popa
jbe
popa
sahf
subl
sbb
dec
mov
out
lea
mov
jmp
pop
jnp
cs
loop
aas
inc
lahf
and
sbb
pop
popa
inc
pop
jmp
std
nop
outsl
sbb
push
inc
sub
test
dec
and
pop
dec
bound
call
outsl
mov
hlt
mov
les
fst
pushf
xor
push
test
ret
lcall
dec
lret
cmp
xchg
xchg
orb
pop
jo
cltd
pop
out
push
push
adc
cmc
jns
mov
icebp
pop
sbb
lods
outsb
cwtl
and
pushl
cmp
cwtl
mov
out
jo
or
movsl
out
inc
push
scas
and
and
sub
mov
mov
fwait
and
jne
mov
les
loope
mov
scas
test
lods
shl
fucomip
int3
sub
inc
xor
lret
stos
jmp
xor
mov
int
int3
aas
add
add
es
dec
sub
in
xor
and
sub
xchg
jmp
lods
fsubp
call
cmp
or
mov
cltd
or
cmp
dec
or
mov
push
mov
xchg
cld
mov
arpl
insl
dec
imul
mov
xchg
into
test
ret
pop
dec
jbe
and
jae
xchg
imul
in
fiaddl
and
gs
leave
mov
test
push
add
ja,pn
push
push
arpl
jae
flds
inc
dec
and
jl
stc
addr16
int
les
push
push
test
sub
test
decl
inc
xor
insl
xchg
out
cmp
daa
cmpsl
je
out
add
into
lahf
cmpsl
jo
ljmp
inc
ljmp
es
xchg
bound
pop
out
cmp
inc
notl
rcrl
add
pop
inc
mov
decb
sub
repnz
xor
add
sbb
arpl
dec
jl
fcompl
mov
xorb
xor
add
add
and
lods
rolb
jae
mov
sub
lahf
arpl
shl
mov
scas
xchg
jno
imul
loopne
mov
mov
push
sbb
and
sub
pusha
mov
jmp
sub
and
je
jae
notl
inc
fs
imul
push
add
jg
adc
push
adc
mov
mov
mov
nop
fcomps
sarb
test
pop
cmp
bound
pushf
xor
cld
test
push
push
pop
push
add
lret
stc
int
fwait
sbb
push
pop
adc
xchg
jns
xor
es
or
and
cmpsb
push
xchg
insb
jno
cmp
stos
loopne
loopne
outsl
mov
lea
mov
adc
out
xchg
jp
lods
dec
icebp
rcl
call
inc
insl
dec
insb
rcl
pop
lock
mov
push
in
lcall
mov
adc
mov
inc
pop
insl
bound
repnz
sbb
adc
inc
out
pushf
dec
adc
imul
movswl
ja
push
popa
test
mov
aas
incl
sbb
inc
hlt
js
jmp
mov
xchg
out
jg
stos
push
decb
dec
rcl
shrb
mov
testb
test
dec
jmp
jp
mov
fldl
mov
mov
fwait
movsb
add
mov
int
fucom
aam
mov
cmp
cmpsl
ret
adc
sub
cli
and
sub
pop
les
gs
fwait
loope
in
xor
mov
adc
mov
fisubl
daa
jbe
sbb
mov
cs
add
mov
imul
add
mov
mov
stc
mov
cmp
mov
lds
inc
pop
xor
pushf
adc
bound
lret
popa
out
push
aad
mov
xor
outsl
sub
iret
into
push
mov
jge
jecxz
popa
adc
push
movsb
mov
mov
cmpsl
sub
inc
testb
xchg
ret
imul
hlt
fucom
inc
aam
mov
repz
cmp
ror
imul
lahf
mull
and
lret
in
pop
sub
mov
lods
mov
out
lcall
mov
mov
into
and
dec
xchg
and
dec
mov
dec
faddl
iret
aam
leave
insl
in
pop
and
pop
cmp
dec
je
sub
dec
mov
mov
lods
int3
outsb
jno
add
sti
loopne
shlb
fdivs
jle
pop
and
mov
xor
add
cmp
push
mov
jno
daa
jbe
xchg
adc
cmp
aad
sarb
fucom
in
lret
stc
or
jno
es
dec
mov
insb
ret
jne
fldl
and
dec
js
mov
sub
jle
cmc
repnz
in
mov
pop
dec
mov
imul
mov
out
xor
dec
mov
sub
outsl
pop
out
ljmp
cmpsb
stos
loop
xchg
aad
push
add
sarb
xchg
repnz
and
loope
lods
pop
pusha
mov
sahf
das
xchg
cmc
mov
mov
int
aas
in
sarl
mov
cmpsb
mov
cmpsb
and
pop
xchg
test
stos
push
outsb
sub
push
inc
imul
pop
std
add
mov
lret
out
mov
sti
mov
lock
cli
sub
inc
lods
push
rcl
sub
loope
bound
jmp
xchg
mov
or
popf
lcall
std
mov
and
inc
inc
mov
nop
push
enter
push
and
adcb
in
pushf
lods
or
inc
jmp
inc
aas
in
adc
rcl
cmc
gs
cld
lcall
add
test
add
mov
xchg
mov
lcall
or
cmp
and
int
pusha
mov
cmp
inc
ds
ss
sti
dec
lds
pop
divb
push
or
inc
add
push
mov
jmp
inc
scas
add
cmp
out
aam
mov
sub
jae
pusha
inc
mov
sarl
loopne
xor
sub
sub
sub
adc
scas
push
pushf
mov
fistpl
jns
mov
push
cwtl
sbb
jne
add
mov
dec
out
ds
syscall
pop
sub
dec
out
jg
or
fdivrl
cltd
inc
js
jmp
xchg
xrelease
and
fs
loopne
jbe
sub
test
and
push
addb
fmuls
push
adc
inc
add
ss
cmp
stos
xchg
js
push
mov
orl
cmp
sbb
inc
das
daa
mov
cmp
ficomps
mov
push
push
test
adc
lods
aad
jmp
std
addr16
cmp
sti
mov
stos
inc
xor
lods
or
test
movsl
lock
aaa
or
js
adc
and
pop
push
inc
fisttpl
and
sub
sbb
xor
mov
sub
mov
mov
js
shrl
icebp
ja
jecxz
add
sbb
fldl2e
fdivs
fcomps
push
rolb
ret
daa
aas
es
jns
out
cmp
push
and
pop
les
hlt
testl
dec
inc
clc
sbb
mull
fdiv
pop
js
outsb
sarl
mov
or
push
jno
loope
cs
pop
fmuls
clc
shrb
inc
test
pop
sub
test
push
xchg
sub
add
xor
xchg
add
stos
lods
fldenv
popa
cmp
sub
ljmp
or
jbe
call
jle
push
into
rcrb
push
ret
mov
push
push
push
adc
or
pop
je
movsl
sub
jmp
dec
loop
dec
push
into
adc
mov
shl
pop
jge
xchg
mov
add
repz
or
testb
inc
mov
jno
stos
test
or
push
lret
cmp
cmc
push
or
repnz
fmuls
shl
adc
sbb
test
push
adc
ds
sub
int
scas
add
mov
jp
cli
out
loop
add
sbb
sar
jge
lret
xlat
adc
fs
xor
addr16
mov
add
sbb
pushf
lods
push
sub
mov
push
jg
sub
push
dec
vaddss
dec
mov
outsl
sub
lods
and
fbld
xchg
aam
push
inc
sub
pop
pop
stos
and
lret
mov
dec
mov
dec
jne
std
fmull
cli
mov
lock
and
inc
lock
cmp
mov
imul
cmp
nop
das
push
pop
xchg
jp
js
fwait
xchg
popl
ja
sub
std
mov
push
cmp
push
sbb
fmull
loop
das
push
cld
mov
jge
add
xchg
dec
mov
idivl
add
push
pop
leave
jb
stos
in
xorl
xor
movsl
jle
lret
adc
es
je
and
adc
fisttps
adc
gs
jno
jns
xor
outsb
mov
inc
out
mov
cmpsl
iret
ljmp
outsl
subl
push
jb
popf
mov
push
jo
xchg
xchg
ret
pop
pop
mov
cmp
adc
inc
adc
mov
stc
push
pop
dec
mov
and
push
and
loop
xchg
in
test
mov
sbbl
or
ret
mov
pushf
push
xchg
xor
iret
push
shr
or
push
repz
lcall
mov
cmpl
jge
dec
das
mov
xor
push
lret
lret
sub
pop
jno
mov
push
ds
or
cwtl
xchg
mov
out
movsb
xchg
mov
and
scas
fisubs
fbstp
jns
push
out
mov
fiadds
mov
adc
push
xchg
pop
mov
fsts
in
mov
xor
mov
push
add
je
mulb
cwtl
iret
cmp
int3
loope
sub
lock
xchg
in
sub
lret
mov
pop
stos
loope
sbb
fwait
pop
cwtl
lcall
cmc
repnz
jl
lret
jmp
dec
dec
cmp
mov
xlat
faddl
test
jnp
mov
push
sub
call
dec
dec
cmp
fabs
sub
fistpl
je
dec
aad
fwait
aaa
xchg
popa
lea
stos
sbb
jb
jp
mov
popa
xchg
xchg
nop
push
pop
fcoms
xchg
dec
dec
mov
or
outsl
mov
add
sub
and
lds
jno
xor
jo
pusha
adc
dec
cmp
pop
andb
jmp
mov
cmpsl
fs
notl
outsl
pop
shlb
roll
add
fiadds
rol
xchg
es
jns
cltd
mov
push
mov
cwtl
insb
rcrb
sarl
jg
xchg
int
and
and
push
in
scas
adc
popf
pop
rcll
sbb
adc
out
jno
int3
out
addl
sbb
in
iret
lods
jmp
mov
enter
and
fmuls
mov
cmp
dec
xor
mov
out
pop
xchg
push
jle
and
test
ljmp
sub
push
ror
xor
and
cmp
xor
and
jne
sub
in
ss
mov
or
adc
leave
dec
xor
add
scas
repz
mov
stc
cmpsb
inc
pop
insl
testb
es
lods
fldcw
push
mov
fistpl
and
movsl
xchg
fadds
sarl
mov
insb
sahf
out
mov
cmp
xchg
fisubrl
rcrl
jmp
dec
xlat
cmp
ret
inc
pushf
enter
mov
fiadds
imul
pop
jno
xor
shl
fcomps
add
dec
sarb
and
ja
lahf
outsl
fucomip
sbb
cmp
mov
icebp
inc
movsb
cmp
sbb
daa
xor
push
in
xor
outsl
fwait
clc
ja
std
scas
imul
outsl
pusha
and
test
xor
test
dec
mov
xlat
sbb
adc
mov
lods
clc
xchg
fisttpl
jns
mov
lds
repnz
inc
and
mov
pop
js
inc
sbb
push
popf
and
adc
push
xor
xchg
test
jbe
lahf
jle
jb
cmp
cmp
jo
aam
push
xor
pop
shrb
xor
imul
ret
jae
jmp
rclb
cld
sbb
xchg
fidivrl
mov
jp
fwait
jne
in
ljmp
push
dec
inc
xlat
arpl
mov
pop
push
jg
sbb
dec
sub
lods
mov
jno
sub
mov
jne
imul
or
je
xchg
xor
add
in
xchg
fidivrl
dec
push
jg
dec
mov
push
aaa
js,pt
in
ret
mov
xchg
rorl
pop
xchg
je
cmp
stc
inc
aaa
fcomi
fnstcw
aaa
push
inc
dec
mov
mov
arpl
cs
add
jp
jns
sub
pop
and
in
outsb
xchg
mov
push
js
aas
insl
xsaves
sbb
out
frstor
jp
xchg
mov
xor
out
cmp
dec
mov
push
mov
pop
popf
out
push
cmp
push
mov
enter
jmp
movsl
xor
xchg
ret
adc
sub
lret
pop
push
xor
mov
cld
fimull
enter
xlat
test
mov
dec
or
mov
cmp
imul
rcrl
dec
fwait
out
mov
test
push
jne
fadd
or
shrb
xor
sbb
pop
xchg
loopne
xchg
dec
in
mov
mov
xchg
sbb
loop
test
out
lods
sub
int
jno
push
lret
and
or
pop
mov
cmpsb
mov
push
es
dec
pop
rcll
and
push
clc
std
xlat
adc
mov
xor
imull
mov
sbb
fildl
add
xchg
rcll
xchg
dec
mov
scas
in
stos
int3
cmp
into
push
call
std
sbbb
ljmp
sarl
sub
and
sub
sbb
jbe
bound
xchg
xor
ret
pop
out
sub
daa
add
mov
insb
sbb
les
in
push
iret
push
lret
mov
dec
inc
test
mov
sti
mov
addr16
sbb
iret
adc
mov
xor
mov
out
clc
jo
push
addr16
sub
jns
aad
mov
nop
roll
scas
mov
and
aaa
xor
push
fs
sbb
scas
dec
daa
xor
mov
pop
jle
aad
pop
shlb
cltd
jmp
call
xor
cmp
sub
jmp
cmpsl
je
jle
loope
sub
ret
fmul
mov
pop
imul
sbb
ss
mov
les
xchg
xorl
call
sub
je
je
pop
push
add
add
insb
mov
es
mov
sbb
aaa
xchg
xlat
stos
cli
loopne
dec
inc
jge
mov
rcrb
and
jne
pop
or
cmpsl
push
repnz
sub
push
pusha
mov
sub
ret
fisttpll
movsl
popa
xlat
out
out
mov
pop
pop
mov
movsb
mulb
push
and
mov
mov
push
inc
cmp
outsb
pop
mov
add
or
andb
adc
mov
jle
popa
shr
or
or
bound
dec
pop
cwtl
dec
fisttpll
pop
mov
mov
sbb
xchg
cld
add
adc
dec
fdivl
push
lods
enter
nop
int3
lods
mov
fwait
icebp
add
call
lret
mov
jb
push
xor
in
aad
imul
jl
cwtl
iret
fbstp
pop
out
sub
dec
xchg
jnp
pop
cmp
shrb
xchg
lret
xchg
xchg
popa
pop
jmp
int3
add
arpl
repnz
mov
js
js
xlat
jp
lods
fildll
cltd
addl
subb
iret
outsl
adc
enter
scas
fnstcw
sub
xchg
push
push
xor
test
mov
ja
js
inc
int
cmc
pop
int3
xchg
cmp
mov
inc
jb
cmc
and
frstor
mov
jl
xchg
lods
xchg
sar
out
dec
jle
ss
xlat
aas
leave
push
push
les
pushf
shll
sbb
inc
andl
add
jge
and
out
mov
and
xorb
cmp
pop
hlt
movsl
push
dec
mov
push
jp
call
lods
dec
dec
sbb
mov
aad
addl
ds
mov
rcll
shrl
loopne
pop
push
sub
scas
rorl
cs
cmp
jmp
lret
cwtl
stc
repnz
out
push
mov
pop
cmc
lods
pop
xor
xchg
pop
mov
movsb
clc
pop
mov
cmp
jge
in
mov
test
mov
outsb
dec
cmp
sahf
fistps
ss
call
add
aaa
fs
out
mov
pop
cli
jns
cmp
adc
lds
mov
add
je
cmp
lret
adc
cmpsl
push
sahf
insb
dec
mov
shlb
and
sti
js
xchg
sbb
pop
xor
cmp
outsl
je
in
jmp
jno
sbbl
push
out
adcb
and
ss
lret
out
mov
es
push
xchg
lea
lret
std
cmp
roll
inc
imulb
int
jbe
es
jl
enter
fildl
or
jne
cltd
icebp
sub
and
ljmp
dec
cmpsl
movsl
bound
movsb
adc
ds
mov
dec
jge
xchg
push
jmp
pop
fisubl
cmc
loop
imul
popa
ret
push
xchg
mov
mov
sbb
out
ret
sub
sbb
insl
fsubr
pop
jns
mov
jno
inc
insl
clc
and
pop
xchg
or
jae
jbe
jecxz
adc
pop
aaa
dec
sub
ret
push
fucomip
cmp
dec
or
add
std
push
ds
loop
in
sub
add
or
cmpsl
subb
je
fs
xchg
xchg
cmpsl
push
test
jbe
mov
pop
stos
cmp
fs
loopne
xor
in
xchg
repnz
push
dec
inc
jp
inc
xor
add
fs
sub
les
call
mov
dec
icebp
fsubrs
mov
or
mov
vdivps
xor
cli
dec
sub
pop
sbb
mov
jecxz
jmp
dec
dec
mov
xchg
inc
decb
pop
shrb
aam
addr16
mov
xor
std
sub
imul
xchg
push
movsb
out
mov
push
dec
sti
sub
or
stos
rorl
out
test
aam
rcll
test
push
adc
jns
lock
push
les
scas
lds
fistpl
sub
push
stos
sub
mov
sahf
mov
mov
jns
sbb
cmp
pop
or
xchg
int
repz
lahf
int
adc
icebp
push
mov
or
adc
lods
cld
jmp
mov
sbb
xchg
nop
mov
mov
pop
call
sub
outsb
sbb
push
bound
dec
push
lods
cs
aas
sbb
push
in
pop
add
cmp
push
jae
mov
mov
fiaddl
rorl
mov
rcrl
mov
xorl
pop
fldl
ja
or
fcmovnu
jno
xor
xor
lretw
shlb
cmp
idivb
and
pop
cmp
and
or
iret
push
push
lea
enter
dec
shrl
lret
dec
xor
add
shlb
or
cmp
or
nop
jmp
sub
mov
pop
sub
nop
or
fldl
jl
pusha
mov
pop
mov
and
aaa
push
lret
lahf
xor
in
sahf
aaa
shlb
cmp
inc
or
add
dec
xstore-rng
cmpsl
andb
ret
jge
mov
ljmp
jmp
outsb
insb
pushf
jno
loopne
aaa
add
and
hlt
lret
or
shll
mov
ret
cltd
push
mov
mov
mov
mov
adc
or
stc
mov
push
xlat
enter
iret
add
cmp
ret
fstpt
xchg
adc
rorl
sub
js
test
inc
shlb
jmp
in
lahf
cmp
fnstcw
inc
int
or
iret
push
fucomip
xchg
or
mov
int3
daa
out
pop
cltd
push
cmp
and
fsubrl
sbb
fadds
insb
push
std
xchg
mov
hlt
or
fsub
fcmovnb
ss
cmc
sub
cwtl
aad
xchg
sub
add
outsl
push
inc
push
pop
pop
in
pop
ret
push
and
xor
fisttps
aaa
inc
or
scas
stos
and
xlat
aas
push
jmp
mov
mov
rcll
push
movsb
inc
jmp
jg
xchg
mov
inc
xor
test
inc
mov
in
sbb
sub
jo
ljmp
or
adc
push
mov
cld
push
repnz
lret
mov
fisttpll
icebp
stos
inc
mov
setl
push
sahf
enter
adc
sub
and
xchg
xchg
scas
mov
out
popf
ret
push
or
loope
stos
sbb
adc
cmc
inc
loop
ss
xchg
nop
pop
jnp
inc
cmc
out
adc
mov
xchg
xor
add
sbb
rcll
and
jg
mov
ljmp
div
pusha
das
rclb
sub
sahf
icebp
xchg
stc
and
pop
add
push
icebp
mov
pop
inc
xchg
ret
sub
xchg
push
dec
push
repnz
jns
inc
sub
pop
adc
hlt
or
dec
or
adcl
jno
sub
cmc
xchg
mov
fmull
sti
clc
dec
dec
jbe
or
jne
adc
fdivr
aad
and
mov
push
movsl
jnp
add
sbb
iret
dec
pop
icebp
int3
out
mov
push
mov
inc
adcb
outsb
push
add
lods
and
push
dec
repnz
popa
sarl
sub
push
fdivrl
int3
push
dec
shll
lea
xor
addr16
mov
or
mov
sbb
sti
or
dec
mov
pop
mov
sarl
sti
mov
stos
adc
sub
xor
push
fimuls
mov
in
mov
fsubrs
jl
int
into
add
push
adc
mov
out
fxch
mov
adc
push
mov
test
add
aam
push
mov
mov
nop
dec
mov
loopne,pt
shl
xchg
sbb
adc
add
sbbl
and
in
cld
cmpsb
imul
pop
or
ljmp
lcall
test
and
or
adc
cmc
cs
xchg
cmp
je
jb
movsl
out
dec
mov
lahf
popa
push
stos
into
and
in
xor
sub
push
push
jmp
pop
pop
adc
pop
dec
sub
cmp
mov
adc
insl
test
lahf
sbb
mov
icebp
xchg
cmp
mov
ret
fidivrl
mov
pop
sbbb
and
inc
sbb
xchg
repnz
sbb
lret
cwtl
movsb
mov
aaa
insb
mov
lods
jmp
test
test
lds
and
push
xor
jp
filds
jmp
jle
sub
pop
adc
rcr
jecxz
pop
and
sahf
lea
sti
xchg
dec
addb
add
out
pop
int3
das
add
or
clc
rep
jns
inc
push
out
lock
out
fisttpll
sub
addr16
lret
mov
clc
mov
xchg
add
xchg
add
mov
sbb
insb
lret
dec
push
adc
mov
push
adc
sbb
jg
push
std
jno
scas
scas
into
test
jno
jo
pop
push
mov
xor
test
std
repz
hlt
dec
add
jnp
adc
fnsave
mov
pop
mov
xchg
iret
xor
sbb
cmp
xchg
dec
aam
ret
jecxz
loop
jge
sub
pop
shl
jns
arpl
and
jecxz
cmp
lcall
mov
cmp
xor
fcoml
lods
pop
jne
add
xor
cmc
sbb
pop
lock
xor
cs
pop
out
aad
sbb
into
mov
out
pop
dec
out
xor
ja
lahf
and
cmpsb
lock
call
cmp
cli
rcll
rcr
or
rclb
movsb
cwtl
enter
inc
push
inc
sbb
mov
cmpsl
xchg
das
jp
xchg
je
test
shl
xchg
movsb
cmp
stos
lahf
xor
loopne
cmp
cwtl
jecxz
push
inc
popa
fistpll
repnz
popf
scas
aaa
pop
in
out
mov
rcl
mov
lods
ret
aam
inc
call
jae
pop
decl
call
es
mov
lods
sahf
fdecstp
push
cmpsl
xor
sbb
mov
lret
lret
out
fimull
adc
insb
sahf
mov
and
xchg
mov
ret
or
add
jo
jne
jmp
rolb
lock
cmp
xlat
push
push
push
lock
outsl
mov
insl
popf
xor
cltd
dec
adc
sub
push
push
jle
push
lret
add
xor
scas
sbb
jl
pop
sub
push
hlt
jno
adc
pop
dec
push
loopne
mov
and
cmpsl
and
xor
sub
or
int3
jns
push
or
mov
and
test
mov
incl
std
cmc
sub
enter
sbb
clc
sahf
mov
mov
xchg
pop
and
insb
lock
mov
jb
lock
xchg
lcall
mov
push
sbb
adc
call
mov
outsb
ret
repnz
test
pop
mov
cwtl
mov
jbe
scas
lds
repz
test
lods
lea
push
add
push
mov
mov
aas
in
push
mov
roll
push
mov
sti
clc
xchg
sbb
insl
push
dec
das
lock
mov
mov
jb
popa
scas
enter
xor
sub
leave
push
les
orl
fstpl
mov
sbb
insb
hlt
je
test
rol
cmp
xor
loop
jg
add
hlt
arpl
push
xchg
pusha
int
les
add
cld
push
or
xchg
lahf
stos
cli
int3
out
filds
mov
mov
ljmp
popa
dec
cs
add
adc
mov
rcrl
es
shl
xor
aaa
fldl
int3
es
mov
push
xor
sbb
es
push
adc
push
sbb
fisttps
addr16
std
jns
aad
nop
mov
shlb
add
mov
jo
repz
pop
pop
and
jbe
scas
ret
ret
push
popf
mov
test
mov
adc
jne
cmpsl
pop
jns
test
hlt
or
jmp
dec
mov
push
bound
adcb
jns
xchg
data16
and
mov
mov
cmpsb
fstpt
test
jns
dec
and
stos
out
or
jecxz
jecxz
dec
push
fs
outsb
jb
jns
mov
pop
lock
adc
cmpsb
or
cli
adc
push
xchg
andl
cmp
pop
lods
aaa
out
push
pop
jne
sbb
stc
and
iret
test
fwait
repnz
stc
pushf
mov
lods
in
fs
daa
mov
push
pop
ret
inc
mov
imul
shll
scas
xor
loope
add
leave
jno
mov
in
in
xor
mov
dec
pop
call
or
shll
test
loop
ficoms
xchg
dec
jle
loopne
push
jmp
mov
dec
jbe
std
hlt
jae
aaa
fmul
and
cld
pop
movsb
cmp
or
mov
cs
popa
or
pop
outsb
loope
mov
or
xchg
xchg
loop
mov
aas
adc
mov
cmp
insb
jmp
jl
pop
sub
aam
cli
and
add
sub
mov
or
xor
cmp
inc
mov
rcr
mov
pushf
arpl
fnstsw
xor
mov
add
xchg
xchg
outsb
je
sahf
cmp
push
inc
aam
popa
call
xor
pop
add
mov
or
test
pop
data16
fcmovnbe
nop
and
or
push
test
scas
fldcw
or
pop
insl
sub
ret
mov
mov
mov
pop
dec
jg
dec
pop
repz
sar
jne
sbb
push
orl
scas
jns
mov
mov
lock
xchg
call
pop
add
xor
adc
shlb
cmp
sbb
repz
hlt
sub
jp
loopne,pn
mov
push
xadd
movsb
pop
adc
jmp
rolb
jnp
xchg
dec
sbb
sti
cmp
popa
loopne
insl
sbb
pop
movsb
addl
js
dec
mov
leave
adc
imul
add
shrb
enter
notb
push
add
into
test
leave
enter
int
sub
mov
mov
push
outsb
ja
mov
in
xorl
sti
dec
inc
mov
sbb
push
pop
roll
cltd
shll
mov
js
out
addr16
stos
mov
mov
sbb
iret
or
andb
add
rcll
xor
and
mov
lret
aam
jns
jne
xor
xchg
or
flds
mov
xor
cmc
es
in
cwtl
push
push
data16
and
cs
or
fwait
jnp
loopne
iret
cwtl
icebp
xor
sub
lds
fucom
cwtl
lret
testl
and
fs
imull
lret
cmpsl
call
push
dec
mov
and
jno
into
mov
outsb
mov
into
and
xor
or
mov
jle
cmp
xor
inc
shll
lods
nop
push
fbld
cmpsb
rep
xchg
jo
push
mov
andl
add
pop
int3
sub
insb
mov
sar
ret
pop
jnp
insb
jle
scas
inc
mov
addr16
sti
mov
pop
dec
int3
scas
repnz
loopne
loopne
cmpsb
es
inc
sub
out
mov
dec
and
mov
add
cs
pop
das
adc
imul
outsb
pop
xchg
xlat
loop
insl
jmp
popa
push
push
mov
test
enter
mov
or
mov
fistps
lods
pop
outsl
jl
or
cmp
adc
cmpsb
loopne
jb
ss
insb
and
and
sub
repnz
test
jecxz
xchg
pusha
mov
nop
jns
cli
jns
cmc
xchg
and
dec
or
dec
mov
out
mov
jns
es
sub
pop
add
add
dec
mov
ds
arpl
pop
inc
loopne
arpl
sub
ror
add
add
cmp
and
sub
fwait
mov
push
fnstenv
jecxz
sub
sub
pop
pop
iret
adc
out
mov
arpl
cmpl
adc
and
cmpsb
sti
into
jmp
fs
xor
lret
cmp
sub
pop
fisubrl
fnstenv
xchg
nop
mov
adc
jnp
test
cmp
sub
and
fildl
cmp
daa
or
movb
push
xchg
jp
cmp
or
sub
sarl
fwait
or
and
iret
xor
xor
shrd
xchg
pop
xor
pusha
cs
in
lcall
div
jnp
in
bound
cmpsl
xchg
mov
xor
jb
loopne
mov
mov
call
mov
daa
push
jmp
flds
cli
push
cwtl
xchg
sub
xor
and
xor
jge
fsubrl
mov
and
xchg
cmp
inc
xchg
loop
jne
cmp
addb
push
das
cltd
jns
stc
mov
adc
sbb
jnp
outsl
shrb
push
aaa
xor
fsts
call
mov
dec
xor
arpl
jle
cmp
mov
jp
enter
out
cmp
xchg
ret
push
push
adc
sub
scas
cli
mov
movb
sbb
popf
ds
or
cmp
loopne
mov
stc
pop
ret
icebp
repnz
iret
inc
andb
ljmp
stos
mov
pop
sub
or
pop
aaa
adc
aaa
push
pop
push
idivb
sbb
xchg
dec
push
out
mov
xchg
cmp
pop
add
or
push
xchg
adc
adc
or
sub
and
push
std
xlat
sbb
cwtl
into
hlt
mov
mov
xchg
and
imul
and
pushf
push
jl
mov
js
adc
imul
cmp
in
lahf
in
jnp
jmp
insb
loopne
test
lret
pop
sahf
ret
rcll
pop
inc
xchg
pop
adc
and
inc
cmpb
ljmp
mov
notb
popf
test
pop
add
loopne
loopne
in
outsl
mov
imul
jns
ljmp
mov
sub
dec
jg
mov
xchg
jl
and
out
adc
addb
ucomiss
cmp
jmp
jb
jo
adc
adc
shl
in
xlat
int
or
loop
push
mov
ss
popl
imulb
xchg
into
gs
xchg
lret
out
push
add
lods
loop
lods
insl
cs
mov
pop
lods
cmp
mov
and
imul
call
mov
push
sub
ret
jae
pop
arpl
ja
push
mov
jge
or
movsb
icebp
adc
jl
cwtl
pop
and
or
das
in
jns
mov
daa
mov
mov
push
fsubrs
cmp
addr16
cmp
out
mov
sbb
rol
jb
insb
push
aam
out
or
ret
mov
pop
or
pop
repz
or
sahf
adc
add
push
and
adc
or
das
dec
xor
inc
pop
int
out
sub
mov
loopne
popf
mov
sub
jl
stc
push
mov
jnp
sub
loope
jnp
faddl
inc
shrb
sbb
mov
cmp
push
inc
jmp
push
int3
and
mov
and
push
test
pop
mov
mov
aas
cmp
xchg
and
jo
ss
jnp
pushf
pop
rcrb
dec
adc
fldt
insb
lahf
lock
rorl
xor
mov
into
pop
idivl
hlt
jl
clc
das
stos
iret
xchg
mov
push
inc
ss
xchg
imul
daa
jl
daa
movsb
sbb
lahf
or
adcl
roll
popa
mov
or
mov
imul
aas
mov
cmp
mov
mov
xor
in
test
testl
push
cmp
test
test
scas
cwtl
enter
iretw
test
jge
cmpsb
dec
adc
push
xchg
lods
sbb
js
dec
pop
inc
jge
cli
test
stos
ja
scas
fimuls
enter
fmulp
and
popa
int
dec
push
pop
dec
test
pop
js
mov
mov
and
mov
mov
inc
xor
lea
cmc
int3
fwait
test
cmp
xor
adc
popf
push
dec
jne
rolb
adc
mov
mov
hlt
xor
push
mov
fs
xlat
push
mov
add
adc
daa
pop
cmp
ror
or
imul
xchg
jle
and
jae
lcall
call
jno
inc
popf
pushl
or
pop
cmp
in
inc
movsl
add
push
inc
nop
or
push
in
lahf
repz
adc
lret
jmp
fwait
jno
pushf
shrl
dec
pop
cmp
inc
jbe
outsl
lahf
jle
sub
xchg
dec
shlb
xor
dec
loope
mov
fbld
out
mov
mov
std
or
fsubs
pop
and
pop
ret
stos
stc
jnp
push
test
cmp
sbb
cs
arpl
fsubrs
sub
decb
shr
popa
subb
sub
push
add
jecxz
leave
xchg
lcall
outsl
xchg
mov
mov
adc
xor
lret
popf
lods
imul
icebp
popa
sub
or
loope
ret
fists
lods
xchg
gs
xor
test
pop
xor
aaa
or
movsbl
jno
aaa
fcomps
enter
mov
std
cmp
data16
out
inc
adc
outsl
mov
cmp
cmp
mov
inc
inc
movsl
add
dec
gs
dec
std
lret
test
test
out
idiv
pop
cs
and
xchg
cmpb
nop
mov
aas
addr16
hlt
mov
call
lods
cmp
mov
arpl
adc
mov
cmp
scas
fisttpl
fnstcw
mov
int
add
or
cmp
enter
aad
les
push
jp
add
push
push
add
inc
stc
push
mov
cmp
popa
jae
cltd
test
mov
dec
jge
mov
je
or
mov
push
jns
scas
mov
cli
pop
inc
hlt
lods
xor
lret
fsts
and
stos
adc
inc
insl
push
ljmp
pop
pop
cmp
fwait
cmp
subb
mov
movsb
ret
in
js
xchg
hlt
jg
jbe
mov
cmp
push
in
sbbl
or
mov
xchg
mov
rorl
pop
xor
dec
sbb
push
cli
mov
add
add
enter
pop
and
add
loope
sub
lahf
pop
inc
jo
push
pushf
or
mov
xchg
sub
clc
jbe
bound
pushf
shl
nop
adc
mov
lahf
jl
mov
leave
sub
scas
mov
push
shl
sbb
xor
mov
subl
ljmp
shrb
call
jmp
sbb
aaa
add
cmpsb
arpl
xchg
cmp
ret
inc
pop
les
mov
pop
out
repnz
pop
movlps
std
or
pop
or
pop
out
sub
sbb
sbb
in
stc
fidivl
enter
addr16
sbb
add
inc
inc
xor
ss
lret
mov
fs
jae
cmp
or
test
dec
sbb
ss
xor
push
subl
aam
insb
adc
jmp
faddl
dec
sbb
lock
and
int3
lahf
js
mov
mov
flds
repnz
sbb
lea
ja
push
lcall
in
lea
hlt
mov
push
xchg
movsl
scas
mov
out
arpl
xchg
loop
test
addr16
push
ds
mov
push
je
mov
dec
xchg
add
dec
leave
or
outsb
or
pop
fbld
xchg
xor
dec
outsb
xchg
mov
das
mov
inc
cs
mov
lods
sbb
sarb
mov
pushl
xchg
mov
ja
out
das
sbb
pusha
into
add
cld
jge
pop
mov
jns
pushf
add
mulb
loop
cltd
test
and
pop
testl
repz
lcall
cmp
xor
push
popf
pop
jo
push
call
ret
or
push
add
lahf
adc
pop
mov
dec
repz
leave
mov
jg
dec
xor
pop
add
icebp
jno
iret
push
cmp
scas
in
stos
push
popf
sbb
mov
inc
adc
adc
xor
add
push
stc
sarl
idivl
arpl
ret
pop
mov
rcll
push
pusha
or
and
cld
xchg
test
jb
lods
cmp
js
cmpsb
or
sbb
pushl
cmp
inc
movsb
or
xor
cmpsb
leave
dec
xlat
cmp
xor
jg
add
sub
pop
dec
xor
fcmovb
jg
fildll
mov
fimull
nop
add
mov
mov
pop
pop
push
xor
xor
jg
pushf
cld
ret
int3
jb
sbb
mov
xchg
sarl
mov
adc
mov
dec
or
xlat
push
mov
je
or
imul
inc
inc
lret
push
mov
push
jl
xchg
mov
fstpt
data16
push
jle
ss
mov
cli
dec
dec
sub
test
fadd
cmpsl
andb
mov
and
xor
sbb
scas
xchg
mov
xor
cmpsb
stos
loopne
pop
pusha
cmp
jae
jge
mov
fwait
cmp
sbb
add
push
cld
inc
xor
insb
pop
jne
jb
mov
ljmp
jae
lcall
rol
mov
cmpsb
rol
sbb
out
ljmp
rcll
ss
test
xchg
jns
pop
in
mov
fcmovb
imul
out
mov
mov
push
sbb
out
pop
gs
repz
loopne
inc
data16
dec
lret
and
pushl
dec
dec
pop
jecxz
pop
aaa
lret
test
mov
es
jmp
int
xor
cmp
and
loope
loop
pusha
cli
ret
adc
cmp
adc
xchg
lds
ss
cmpsl
and
sbb
js
jp
mov
sub
inc
sub
addb
sbb
pop
mov
xor
ror
insl
push
push
pop
bound
jb
push
xchg
or
or
sub
and
insl
rcl
pop
sub
mov
push
sarl
nop
xor
xor
pop
lret
andb
js
out
or
add
cmpsl
dec
sub
mov
bound
pop
push
cmp
stos
std
outsb
xor
xorl
fwait
adc
inc
stc
push
mov
jl
mov
je
mov
cli
or
aad
xchg
adc
in
loopne
push
out
inc
adc
je
push
inc
pop
test
add
and
mov
jp
stos
adc
das
fs
xor
cmp
push
xchg
xor
enter
popa
dec
add
test
aas
scas
dec
mov
insl
fs
push
xor
inc
sbb
dec
mov
adc
dec
dec
pop
mov
xchg
and
jle
jp
gs
cld
jo
iret
push
mov
int3
and
push
mov
dec
pop
into
enter
mov
popa
or
imul
sbb
in
jns
xlat
fmull
inc
mov
in
fwait
test
xor
popa
fistps
hlt
pop
cmc
mov
dec
lods
xor
out
imul
xchg
aaa
push
sub
loopne
mov
imul
lods
repz
cli
cmp
push
lahf
daa
movsl
sub
push
mov
test
mov
dec
sbb
xor
mov
adc
pop
ret
je
xchg
out
pushf
cld
push
lret
mov
lds
inc
push
and
xor
mov
popf
dec
into
std
icebp
jg
sbb
ljmp
jo
pop
jnp
sbb
push
jmp
sub
inc
jns
ja
mov
pop
adc
fiadds
stos
repz
cltd
adc
arpl
cmp
jmp
call
dec
push
out
mov
xchg
mov
sub
dec
add
pop
push
cwtl
cmp
xor
iret
pusha
out
call
mov
jnp
int
cld
test
cmp
mov
call
loopne
push
cmp
dec
xlat
ret
testb
loopne
adc
sbb
push
in
mov
push
pop
fwait
inc
gs
int3
xchg
and
mov
movsl
std
popf
mov
aaa
and
pop
sysexit
xchg
mov
test
lea
sub
push
mov
and
outsb
xchg
jl
mov
push
push
aas
clc
push
dec
sub
pop
fs
lds
pop
ret
lahf
cmp
sbb
mov
notl
push
cmp
inc
in
js
xchg
test
xchg
in
and
out
shl
xor
pop
pop
adc
jae
outsb
sbb
scas
stos
fistpll
jl
in
mov
and
das
mov
enter
fwait
mov
add
or
push
dec
pop
adc
xor
xor
push
mov
pop
sub
popa
out
and
and
mov
in
pop
sbb
add
jb
rcrl
mov
outsl
iret
mov
outsl
aad
mov
shll
jg
andb
mov
mov
pop
fimull
pop
adc
push
inc
and
push
add
dec
imul
fisubl
pop
sub
push
fstp
jmp
ds
push
dec
mov
ret
dec
xor
sti
jb
lret
sub
dec
jecxz
popf
mov
pop
xor
jns
lods
fcmovnb
adc
call
insl
mov
pop
jecxz
push
xchg
daa
xchg
rclb
mov
add
sarl
aam
adc
mov
iret
mov
push
out
inc
dec
add
inc
and
and
cmpsb
into
outsb
push
shrb
mov
mov
jae
hlt
repnz
mov
inc
fisttpl
std
jno
mov
cs
cmpsb
inc
out
fdivl
adc
mov
push
aas
xlat
jmp
test
leave
aad
in
and
mov
lods
cmp
xchg
in
fwait
mov
subl
or
std
movsl
pusha
adc
mov
jns
insb
lods
loopne
mov
jnp
xchg
in
aam
faddl
repnz
outsb
popa
pop
loope
push
add
lret
and
inc
sarb
xor
inc
push
dec
or
cmc
xchg
outsl
test
cmp
mov
cmp
mov
ss
loope
sub
cltd
rol
mov
or
fimuls
push
and
adc
sbb
jnp
es
int
lcall
sub
into
ss
sahf
stos
rcrl
mov
or
out
popf
push
pusha
mov
sbb
mov
sarb
mov
pop
mov
lds
leave
clc
inc
ja
rcll
lds
mov
out
mov
sahf
dec
shl
dec
popa
popf
xchg
or
std
repnz
lcall
jl
sbb
sbb
test
xchg
scas
leave
xor
lods
movsb
stc
scas
and
mov
dec
out
or
in
xor
push
mov
pop
cmp
pop
pop
push
pop
cs
sub
mov
mov
adc
sub
push
inc
test
cmp
pop
orl
sbb
add
xchg
cwtl
fildl
push
or
cmp
mov
in
aam
aaa
add
add
adc
sub
push
push
enter
sub
add
dec
mov
mov
out
and
jmp
lods
movsl
add
test
push
jecxz
inc
inc
add
call
repz
test
fwait
lahf
cmp
ss
push
pop
mov
enter
xor
sub
inc
xchg
sub
jge
xor
push
cmp
stc
mov
ret
stos
mov
mov
inc
add
sbb
cmp
repz
out
mov
push
std
cli
inc
jb
imul
iret
mov
push
repnz
loope
mov
mov
inc
cmp
sub
std
mov
mov
shlb
or
scas
popf
psubusw
idiv
adc
jmp
dec
sbb
ss
stos
pusha
xchg
inc
mov
xorb
outsb
in
bound
ret
mov
xchg
add
testl
dec
mov
sbbl
pop
jno
jmp
ret
loope
fmuls
jmp
aaa
pop
test
aas
arpl
sub
xor
imul
pop
into
push
xor
mov
gs
scas
cltd
comiss
insb
stc
sbb
add
xchg
xchg
pop
adc
lds
mov
imul
jp
push
xchg
gs
ja
cltd
lret
dec
xor
push
imul
push
iret
repnz
adc
cmpsl
jbe
cld
mov
loopne
out
lret
ficompl
jnp
mov
jmp
stos
out
fcmovnb
out
addr16
cltd
mov
or
imul
pushf
xchg
pop
fildl
cltd
loop
mov
jae
clc
scas
std
jmp
int3
sti
bound
or
sahf
or
lea
punpckldq
cmp
ljmp
lret
pushw
dec
sub
adc
xlat
in
mov
fbstp
lods
fists
scas
dec
and
roll
lods
stos
mov
cs
imulb
cmp
popf
outsb
mov
dec
repnz
jo
and
imul
shlb
jo
dec
in
enter
xchg
iret
pop
cs
sub
and
ret
bound
jg
xchg
cmp
xor
ljmp
cmp
loop
sbb
aam
mov
xchg
push
jle
in
imul
adc
in
ja
inc
inc
outsl
pusha
add
enter
lret
cld
or
xor
inc
inc
jo
jmp
test
mov
push
jge
icebp
xor
cmp
inc
pop
inc
mov
mov
xor
cwtl
out
push
popa
cwtl
mov
aad
lods
xlat
jl
insl
jge
cmp
xor
sub
adc
lds
shrl
imul
mov
arpl
or
lods
adc
pop
xchg
and
iret
pushf
mov
enter
cmc
in
jae
ret
or
adc
push
sub
push
adcb
test
push
jl
jle
push
inc
inc
push
mov
sbb
inc
push
lea
mov
ljmp
icebp
daa
out
jmp
aad
lcall
mov
cmp
mov
mov
add
imul
adc
inc
loope
das
sub
push
pop
push
jmp
lds
ret
or
in
shlb
push
fimull
mov
in
and
cltd
rcr
jns
xor
dec
rcll
jge
push
jp
or
xchg
and
xor
pop
out
bound
sbb
iret
xor
mov
adc
or
sahf
mov
pushf
mov
out
clc
ror
push
xchg
inc
data16
jmp
dec
fs
outsl
push
popa
mov
rcll
and
shl
arpl
xor
pop
gs
jae
jbe
xor
push
js
sbb
das
imul
imul
pusha
add
ret
xlat
loope
jbe
js
mov
outsl
adc
xor
shll
mov
sub
fidivs
mov
mov
xchg
arpl
test
rcr
xchg
xchg
int3
loop
dec
mov
das
cmpsb
xor
gs
push
sbbl
push
frstor
shrl
pop
in
fcoml
cmpsl
dec
nop
testb
andb
stos
daa
adc
pop
movsb
lahf
adc
repnz
dec
lods
push
xor
dec
out
mov
mov
mov
fwait
push
adc
xlat
ret
sbb
xor
call
mov
stc
fimuls
ljmp
mov
adcb
or
and
mov
adc
pop
xchg
sarl
jbe
or
ja
sbb
ja
push
push
fisubrs
pop
and
inc
mov
movsl
and
sub
mov
outsb
xacquire
mov
mov
ljmp
out
mov
in
les
and
mov
leave
mov
jo
cmc
in
mov
xlat
cmp
leave
les
mov
add
cld
and
pop
ret
jmp
xchg
adcl
popl
in
mov
mov
and
sub
dec
pop
test
adc
mov
cli
mov
hlt
push
xchg
lock
pop
ds
enter
xchg
movsl
dec
add
cld
icebp
pop
hlt
pop
cmp
mov
aam
insl
xchg
and
movl
clc
xchg
inc
mov
addr16
lods
adc
pop
mov
sbb
es
movb
adc
subb
mov
xchg
mov
cltd
hlt
clc
push
sub
int
xchg
sar
mov
imul
mov
popa
cmpsl
push
adc
mov
jle
jbe
imul
stos
inc
imulb
push
aas
mov
frstor
lods
es
dec
inc
ljmp
popa
dec
pop
imul
stos
adc
xlat
jne
fwait
xor
add
rcrb
adc
subb
and
xchg
sub
add
jmp
mov
sub
xchg
dec
enter
mov
fwait
pop
sbb
loope
mov
mov
int
repnz
adc
iret
mov
mov
xchg
bound
cmp
cmp
mull
in
inc
outsb
cmpsb
imul
dec
cmp
ret
ljmp
pop
lock
scas
xor
jb
leave
out
cmc
xlat
fisttps
cli
adc
mov
mov
jb
jg
cmc
loope
les
cmp
pushl
and
test
test
lahf
stc
mov
loop
imul
or
decb
dec
pop
adc
inc
subb
bound
icebp
repz
fimull
pop
aas
xchg
jecxz
mov
cld
test
mov
jnp
mov
fcmovnu
iret
in
pop
clc
fwait
cmp
sbb
mov
test
leave
faddp
test
mov
cmp
gs
je
pusha
into
mov
push
shlb
xlat
fadd
enter
sbb
dec
fucomi
stos
add
sti
addl
fucomip
jno
xor
inc
xchg
cs
mov
and
lcall
jp
inc
test
testl
add
xchg
and
dec
das
sarl
push
stos
in
and
hlt
into
pop
mov
or
add
mov
pop
jnp
mulb
cs
scas
mov
xchg
lea
sbb
add
lods
lret
in
push
repz
sub
cld
inc
add
lret
add
cmc
mov
mov
int3
cmp
mov
jnp
mov
clc
outsb
leave
jl
out
sub
dec
jne
inc
lret
leave
icebp
push
movsl
call
outsl
out
out
adc
jae
inc
sbbl
ret
cld
push
and
outsl
push
cmp
shl
dec
mov
rcl
mov
mov
outsl
ja
dec
aam
stos
and
jns
jne
inc
mov
sbb
imul
sbb
ret
pop
insl
mov
test
mov
sbb
into
xchg
xchg
mov
xchg
sbb
out
inc
mov
xor
xchg
mov
stos
jo
inc
mov
rcll
ja
outsl
jge
lret
jb
repnz
inc
xchg
xor
jecxz
xchg
rorb
xchg
xchg
push
jbe
pop
insl
mov
popa
jmp
or
mov
cld
arpl
pop
dec
xchg
add
xchg
push
cmpb
sbb
insb
test
jl
pop
and
and
jnp
fisubrl
es
xor
rcl
mov
xor
cld
notl
cmpsb
mov
int
push
cmpsl
stos
pop
mov
mov
push
loopne
adc
dec
add
inc
pop
inc
or
je
testb
mov
inc
mov
in
scas
sbb
jmp
arpl
jbe
inc
inc
fmulp
push
in
push
cmp
sti
jne
mov
sub
ljmp
cli
sti
and
into
lret
insl
cmpsb
dec
js
lock
mov
int3
repz
lahf
mov
loope
fildl
pop
enter
testb
call
mov
xor
sub
and
push
jno
cmp
inc
movsb
mov
adc
sub
movsl
jge
or
mov
std
push
les
mov
lds
sbb
xor
imul
data16
and
enter
loop
cmp
xchg
lock
addr16
push
pop
ss
inc
int3
icebp
pop
js
pop
or
push
stc
les
aas
fsubl
and
or
ret
fildl
icebp
cmc
in
sbb
or
dec
clc
ds
sub
jge
call
orl
xlat
les
aam
fnsave
mov
cmp
sub
jp
jne
out
xchg
in
sbb
mov
sbb
in
clc
mov
jae
fcomp
add
mov
popf
repz
jmp
and
dec
pusha
std
mov
sbb
sbb
push
sbb
adc
outsb
test
cwtl
and
mov
jp
push
sub
mov
mov
enter
xchg
lods
fnstsw
pushf
test
cwtl
pop
mov
pop
rclb
imul
dec
inc
push
movsb
setge
mov
pop
movsb
sbb
mov
inc
in
pop
scas
ret
scas
sub
sub
add
adc
mov
ss
mov
lcall
repz
loopne
cmp
js
mov
dec
ret
mov
lahf
or
push
mov
pop
or
mov
cli
push
jp
push
mov
and
sbb
push
mov
lahf
inc
mov
inc
subb
mov
ret
pusha
dec
and
mov
lahf
arpl
inc
std
push
sbbl
clc
lock
movsl
or
jmp
into
or
insl
clc
js
or
pop
or
inc
adc
push
adc
rclb
lcall
push
jge
jle
jne
fstpt
fistl
cmp
push
push
fcmovnu
mov
bound
clc
call
xor
xor
in
daa
scas
xchg
and
xchg
negl
jle
add
push
bound
das
insl
add
mov
mov
int
xor
iret
shrl
aas
adc
cwtl
lahf
loope
mov
xchg
aam
daa
jb
or
andb
out
les
pusha
sahf
mov
pusha
jo
les
sarl
fmull
int3
mov
iret
arpl
cmc
out
int3
mov
call
orb
inc
ljmp
push
and
mov
insb
movsb
push
xchg
push
cmp
daa
les
divl
xor
loopne
jno
pop
pusha
adc
ljmp
mov
and
aad
testl
je
fldenv
repz
divb
dec
fld
push
lahf
leave
push
cmc
ret
pop
shl
fsts
loope
adc
mov
pop
or
sub
lret
dec
jb
jecxz
lcall
adc
testl
adc
push
call
aaa
int
and
sbb
fstl
dec
in
xor
dec
sbbb
outsb
or
cs
dec
pop
call
movsl
xchg
mov
clc
sub
xor
fsubrs
lods
cmp
ljmp
data16
push
mov
daa
add
sahf
pop
pop
movsb
mov
lahf
outsl
ljmp
loop
jle
mov
push
out
cmpsb
mov
add
and
sub
add
mov
push
cmc
or
cmpsb
and
pop
sbb
aas
sbb
arpl
mov
mov
mov
ret
sbb
pop
lods
in
inc
pop
inc
xchg
cli
int3
fldt
bound
nop
nop
adc
add
add
rclb
jns
sub
dec
mov
mov
add
fistpll
stc
inc
or
cmp
fsts
mov
sub
stos
dec
sbb
xlat
sbb
cwtl
inc
fsubrl
movsl
sbb
insl
pop
sahf
cwtl
mov
rolb
and
loopne
jno
xor
xchg
mov
insb
outsb
push
sbb
inc
xchg
iret
xchg
xchg
mov
movsb
nop
mov
sbb
jl
mov
inc
divl
add
jl
mov
idivl
aad
jno
add
mov
adc
sbb
mov
add
sbbb
or
out
pop
pop
dec
dec
fimull
xchg
mov
xor
scas
jge
loope
pop
push
popf
sub
test
mov
add
out
add
xor
ret
adc
mov
dec
aas
out
bound
test
lods
mov
cwtl
sbb
jb
adc
mov
mov
or
rol
or
cltd
jg
sub
jne
shll
jp
imul
xlat
jge
lds
adc
rol
pop
daa
cmp
or
cld
outsb
es
cmp
leave
movb
mov
push
lods
aas
les
loopne
jb
push
xlat
xor
or
xchg
and
ret
stos
imul
out
sub
arpl
pop
sub
outsb
sub
inc
mov
inc
loop
addr16
data16
imul
aas
mov
push
ficoms
pop
inc
cmc
or
call
pop
imul
sub
jmp
add
mov
and
aas
ljmp
jmp
aam
sarb
xor
sbb
lcall
mov
jle
and
push
jns
mov
pusha
jno
mov
mov
out
int3
jbe
xchg
xchg
pushf
mov
xchg
inc
add
movsb
push
ljmp
sahf
sbb
lcall
sbb
scas
sub
mov
lods
fisubrs
sub
xor
test
outsl
lods
and
gs
cli
inc
adc
and
inc
stos
sbb
bound
or
mov
xorl
shrb
sbb
xchg
pop
xchg
push
push
dec
aad
jnp
cmp
mov
adc
out
xor
and
push
pop
subb
je
test
dec
call
jge
sub
dec
push
or
sti
or
shrl
cmp
mov
movsl
xchg
push
pop
fnsave
and
push
add
aam
mov
adc
and
hlt
aam
mov
jle
in
inc
stos
loopne
sub
adc
cs
add
mov
lahf
cmp
lds
jmp
ret
push
dec
loopne
leave
sbb
mov
xchg
push
add
pop
lods
jne
dec
cmp
pushf
push
imul
pop
add
scas
sbb
and
fs
or
jp
add
add
xlat
cmpsl
cmp
lods
fildl
sub
fwait
arpl
mov
stc
in
insb
xlat
push
cmc
cmp
out
jmp
add
popl
sub
jne
jb
xchg
sub
ret
mov
lds
iret
xchg
ja
repnz
mov
test
fwait
mov
orb
data16
sahf
mov
int3
xchg
sti
adc
mov
repz
and
xor
inc
clc
clc
loopne
aaa
psubusb
int3
std
pop
rorl
push
add
pop
ds
lds
leave
fwait
jnp
hlt
rorb
cld
cwtl
push
cmc
rcr
xor
rorl
pop
in
jae
pop
mov
ret
pop
test
enter
sbb
jb
push
push
into
or
scas
lock
sub
stos
imul
aam
inc
mov
inc
sbb
in
fstl
lea
push
sahf
movb
add
lods
jmp
jno
ds
arpl
cs
dec
xchg
hlt
mov
outsb
inc
xlat
xchg
jge
cs
sbb
dec
fs
sub
ja
or
arpl
push
or
fstpt
out
lods
enter
test
xchg
dec
xchg
imul
lds
cmp
xor
or
mov
shll
sbb
sub
push
cmpsb
sub
daa
je
out
adc
jg
arpl
sub
hlt
insl
ja
mov
jno
shrb
and
fwait
pop
leave
add
mov
test
mov
sub
pushf
incl
and
in
xchg
xor
dec
repz
ljmp
push
nop
dec
push
cld
sbb
mov
pop
mov
rcrb
stos
repz
pop
push
addb
and
shlb
out
mov
test
jo
cmpsb
lret
mov
mov
dec
xor
jl
jle
loop
inc
mov
sbb
xchg
adcl
mov
scas
movsl
dec
inc
dec
lods
inc
dec
test
xchg
lahf
lods
les
movsl
sub
scas
sarl
mov
shlb
mov
es
movsl
or
cld
movl
sub
pushf
mov
sbb
mov
stos
or
cmp
jecxz
int
imul
jl
les
sti
inc
jl
popf
sbb
inc
or
inc
lahf
aad
movsb
repz
push
adc
jae
insl
andb
ret
jo
mov
scas
je
test
pop
adc
mov
ss
mov
stos
js
imul
fwait
cmpsb
in
imul
fbld
mov
cmp
test
pop
mov
das
or
mov
lods
test
mov
in
movsb
xor
push
cs
mov
mov
jb
push
addr16
fisttps
mov
sbb
movsb
aaa
cld
ss
xchg
pop
push
mov
es
insl
loopne
fistl
mov
push
ljmp
pop
loope
inc
dec
ja
inc
jb
xor
xor
adc
enter
xchg
les
repz
dec
fisubrl
aas
roll
mov
xor
les
inc
lock
pop
push
cmovb
add
insl
subl
scas
xor
inc
jmp
je
stos
mov
movsl
ret
push
lret
and
push
jecxz
jbe
cmp
sahf
or
sub
seta
push
fs
and
ret
aas
dec
movsl
out
adc
lea
xchg
sbb
add
ds
add
add
ja
int3
imul
push
int
adc
sbb
mov
dec
ljmp
inc
shlb
push
mov
aad
sbb
jno
sahf
or
sub
je
xor
das
mov
pop
loope
inc
mov
pop
imul
lea
pusha
fs
push
adc
leave
push
insb
enter
pop
inc
and
orl
push
or
leave
xor
shlb
push
xor
cmp
aad
cmp
mov
sbb
xchg
js
mov
cmpb
lret
cld
shll
pop
call
outsb
add
xor
mov
add
int
mov
mov
flds
mov
aas
pop
and
and
mov
cmp
pusha
or
popf
cmc
daa
or
test
cmp
dec
fs
aaa
jp
push
in
movsb
insl
mov
mov
ljmp
adc
add
mov
cs
sahf
call
ja
dec
dec
fs
stos
push
sarb
pop
cmp
loop
add
shrb
stc
mov
movsl
adc
jmp
aaa
jge
movsb
push
mov
das
cmp
sahf
pop
mov
mov
xchg
sub
enter
xchg
and
enter
pusha
and
ja
and
jnp
sub
enter
das
repz
fdivrl
xor
cltd
cmpsb
sub
cmp
outsb
mov
testb
xor
aam
cld
cmp
int
xlat
fimull
dec
jp
xor
adc
movsb
mov
mov
arpl
jae
xor
dec
and
scas
data16
sarb
aam
inc
rorl
in
sahf
add
fistpll
sahf
jge
adc
mov
xchg
and
inc
add
fucom
addr16
xchg
lods
mov
jb
add
int
lcall
push
stos
pop
enter
xchg
sub
adc
xchg
lock
push
mov
push
jg
les
subb
ret
pop
sbb
lods
arpl
js
pop
lods
aas
cli
mov
xchg
add
inc
xchg
push
push
daa
orl
loope
jae
lods
adc
xchg
add
mov
loope
jecxz
push
test
cltd
xor
and
adc
rorl
mov
push
adc
mov
ror
jecxz
arpl
ja
out
cli
cmp
outsb
mov
mov
lret
fdivrp
dec
add
dec
mov
adc
in
jb
ljmp
or
loope
subb
dec
andb
push
fistps
jns
loopne
push
mov
pop
fbstp
cmp
stos
in
sub
ss
sahf
lcall
rcrl
cli
popf
xchg
pop
jb
js
sub
cmp
ja
stos
fcoms
enter
cmpsl
mov
pop
jl
ljmp
mov
mov
les
mov
jne
sbb
pop
xchg
dec
add
cmp
pusha
in
inc
mov
movq
cwtl
test
in
out
mov
dec
dec
jl
roll
out
pusha
aam
xchg
push
shrb
xchg
inc
cld
and
mov
cli
or
inc
and
jecxz
mov
inc
mov
cmp
in
dec
mov
inc
add
andb
cltd
iret
dec
lret
cs
out
pushl
dec
rorb
add
jg
cmp
inc
and
xor
add
xchg
fistps
push
div
mov
jnp
in
out
cli
stc
lock
and
pop
and
mov
pop
adc
pop
jle
cld
subb
pop
ret
or
or
adc
mov
dec
loopne
cltd
test
fists
mov
xor
mov
in
int
repnz
imul
int3
shl
sub
and
sub
jbe
xchg
pop
dec
mov
movsb
test
dec
imul
inc
mov
push
aam
arpl
out
fcoms
sbb
cwtl
pop
or
iret
mov
outsb
jbe
jl
hlt
xchg
daa
and
sbb
add
ds
push
xor
pop
mov
dec
dec
push
out
sbb
sarl
sub
test
lds
inc
pop
and
dec
pop
fwait
iret
nop
std
incb
repnz
test
xchg
imul
mov
sbb
rolb
xor
mov
call
roll
dec
sub
jp
push
fucomip
inc
das
dec
stc
mov
push
sbb
pop
sbb
lds
mov
adc
inc
outsl
test
xor
sahf
mov
mov
stc
arpl
rcrb
imul
dec
mov
jne
mov
sbb
clc
xor
push
push
ret
sbb
jmp
fbstp
outsb
cmp
fimull
out
in
call
divl
add
mov
sahf
decb
mov
push
or
cmp
data16
add
pusha
sti
sub
adc
out
pop
push
ret
mov
dec
jae
dec
xor
mov
add
shrb
nop
addr16
pop
lret
lock
and
test
and
xchg
xchg
repz
in
dec
pusha
xchg
lahf
fcoms
mov
in
xchg
js
adc
xlat
mov
das
mov
fstp
cwtl
insb
pop
jge
dec
xchg
cmp
mov
push
dec
rolb
arpl
outsb
xchg
push
dec
divb
dec
and
push
in
loop
scas
dec
or
movsl
scas
xor
outsl
loopne
mov
mov
outsl
jno
sub
jecxz
daa
xchg
cmp
push
cmp
xor
pop
xor
stc
adc
imul
sub
adcb
xchg
ret
shll
fmuls
aad
mov
adc
sub
dec
xchg
sub
xor
loopne
dec
fwait
mov
ja
ss
outsl
addb
out
xor
das
dec
inc
cli
push
cmp
fwait
jg
pushf
cmp
dec
scas
cmp
aam
lds
mov
cs
sub
enter
or
sub
xchg
lock
fdivs
dec
pop
mov
sarl
aas
inc
adc
popa
popf
icebp
or
pop
cmp
push
adc
fidivrs
cwtl
inc
or
lret
ficomps
lret
pmovmskb
pushf
enter
sub
push
orl
lret
dec
sahf
cmp
out
repnz
inc
pusha
pop
fcoms
sbb
mov
std
mov
pop
iret
test
or
dec
jg
push
mov
or
je
ja
popl
dec
jmp
int3
nop
lcall
push
inc
cmpsl
add
out
ret
xchg
jl
das
or
sti
add
mov
rcrl
sbb
and
push
jle
mov
push
sbb
push
mov
in
repz
adc
adc
jmp
xor
push
sahf
jl
out
dec
clc
xchg
lea
dec
pop
and
sbb
in
aas
jp
notb
dec
push
sarl
add
leave
fstl
mov
ret
xor
jne
rol
adc
into
mull
and
jns
sub
jo
mov
xor
rcrb
push
mov
sub
mov
nop
stc
cmp
stos
fistpl
add
iret
xor
dec
imul
mov
pop
fisttps
adc
stc
ror
imul
mov
add
jae
xor
push
out
scas
icebp
sti
fistpl
sub
dec
and
and
xchg
mov
and
xor
push
popa
outsw
stos
cmp
mov
xchg
jno
out
jno
imul
or
cli
sbb
je
fcmovne
in
add
imul
mov
and
test
bound
jmp
out
fwait
daa
xchg
addr16
pop
push
cmp
pushf
call
notl
dec
jge
xchg
xchg
xchg
cmp
and
mov
dec
loopne
sub
sbb
jne
xchg
int3
rcl
sub
clc
fistps
mov
jmp
mov
mov
mov
iret
js
jl
test
mov
mov
mov
lret
gs
aaa
test
lods
jnp
lds
ljmp
imul
das
icebp
push
fcoml
push
lret
fnsave
ror
push
aad
call
test
and
ljmp
fiadds
loope
dec
pushf
out
sbb
out
movsl
push
pop
cld
mov
pop
xchg
or
rclb
dec
imulb
jnp
in
dec
jl
jge
call
mov
inc
adc
dec
and
sti
ljmp
xor
mov
test
test
inc
xor
leave
mov
call
movsb
cmp
xchg
sahf
xchg
bnd
das
or
xor
xchg
rcrb
inc
push
and
je
mov
out
ret
nop
pop
jnp
cmp
push
aaa
dec
cltd
push
andb
lea
xchg
or
sbb
rolb
les
shl
fwait
es
imul
xchg
pusha
in
dec
add
mov
cltd
repnz
cmp
pop
mov
sbb
repz
inc
push
lea
or
jb
nop
dec
into
sbb
mov
das
push
xchg
add
out
lret
fisttpl
int3
or
lahf
dec
rcrb
xlat
rorl
ficoms
scas
sahf
fwait
xchg
and
xor
mov
clc
sub
pop
jle
push
out
xor
inc
sbb
stc
cmp
jmp
sub
cmp
fmull
push
adc
test
mov
les
lahf
test
lea
sub
sub
cmp
push
pusha
pop
movsl
xorb
jae
xor
in
into
sub
dec
rcrb
out
dec
pop
cs
shlb
cmp
adc
dec
push
jb
add
xchg
dec
sub
pop
lock
ret
adc
mov
les
dec
scas
adc
subl
jmp
push
jge
pop
mov
inc
jae
push
pop
jge
jb
lcall
push
push
repz
and
fucompp
ffree
out
xor
jl
je
mov
jno
and
push
ljmp
or
mov
movlps
in
and
push
lretw
sbb
lea
xlat
sub
xor
push
cmpsb
fildl
inc
or
jno
lret
out
lret
dec
jp
sbb
cmpsl
loop
cld
cwtl
mov
insl
scas
mov
push
inc
enter
jg
out
mov
scas
mov
or
cmp
and
xchg
cld
mov
mov
sbb
call
mov
imul
mov
loop
xor
mov
jmp
addr16
cmc
in
push
ljmp
aam
aad
fidivs
mov
jbe
enter
mov
add
mov
cmpb
push
repz
insl
into
push
adc
out
push
test
adc
xchg
pusha
mov
pop
mov
xor
insl
aad
popf
loope
lods
cmpsb
cmp
mov
inc
fdivl
adc
loopne
sbb
decl
pushf
imul
jne
and
pop
mov
sub
mov
push
rolb
push
mov
dec
jmp
addr16
dec
or
xor
push
pop
cmc
insb
mov
or
jge
dec
aaa
or
sbb
sti
sti
aaa
int3
or
add
insb
mov
and
jge
mov
aad
cli
fwait
cltd
mov
cmp
push
mov
dec
cld
mov
ljmp
pop
dec
mov
fwait
inc
movsb
push
xor
loopne
bound
adcl
mov
into
mov
cwtl
dec
loopne
dec
push
xchg
hlt
sbb
jle
cli
sbb
fwait
lods
out
adc
xor
insl
cmp
sbb
into
gs
xchg
in
dec
popa
enter
in
bound
or
ss
mov
lret
je
push
xchg
icebp
xchg
iret
int3
scas
push
in
mov
lea
int3
cs
test
fdivs
pop
scas
loope
sub
push
aas
xor
jp
lret
sbb
cmp
add
outsb
pop
sbb
pushf
or
test
jl
loope
cmpb
rcrb
mov
fs
jle
and
stos
xchg
in
ss
pop
mov
and
ljmp
lahf
icebp
addl
das
mov
fmull
outsb
push
je
mov
in
and
in
add
ja
sbb
scas
sarl
xorl
popf
mov
stos
mov
push
mov
mov
mov
loopne
pop
js
mov
mov
data16
sbb
pop
jno
xlat
adc
nop
push
lea
movsb
pop
jle
lods
mov
jge
fcomp
testb
rorb
scas
xor
lret
pop
sbb
inc
push
rcrl
sbb
inc
xchg
pop
sub
bound
outsl
mov
mov
out
incl
xchg
mov
xchg
add
push
cli
stos
test
xorb
pop
jmp
push
fs
lods
scas
push
fxch
sbb
jmp
xor
lods
add
mov
mov
pop
jge
and
pop
mov
imul
pop
jno
push
mov
pop
mov
imul
cmp
pop
mov
inc
out
test
or
pop
scas
pop
push
nop
fwait
leave
hlt
xor
sub
pushf
fcomps
sub
or
loope
push
insb
fildll
mov
xchg
cmpsl
cltd
adc
push
mov
mov
sbb
dec
cli
rclb
sti
in
daa
xchg
iret
sub
dec
test
jle
fld
out
popa
cltd
adc
cli
add
push
cmp
pop
icebp
xor
xor
sar
mov
inc
stos
add
aaa
sub
int3
shrb
jcxz
mov
test
out
loopne
fldt
lret
pop
pop
lods
cld
cmp
or
ss
andb
das
dec
out
adc
lahf
dec
ret
dec
lahf
inc
mov
push
add
mov
into
aaa
mov
sbb
jecxz
xchg
add
stc
push
mov
lcall
cwtl
mov
outsl
test
fstl
rcl
pop
push
ficomps
leave
cmc
push
dec
test
roll
pop
inc
pop
inc
inc
movsl
jo
mov
imull
mov
stos
sbb
test
call
test
mov
mov
sub
mov
add
pop
mov
sbb
mov
or
std
lea
sar
push
mov
shlb
xchg
cltd
mov
push
xchg
mov
xor
call
jmp
jo
cli
shll
popa
rcrl
xchg
adc
aaa
pop
mov
stos
ret
mov
shrb
mov
pop
scas
movsb
dec
xchg
and
add
pop
repz
dec
cmp
jo
pop
and
push
ss
and
fnstcw
pop
mov
ror
cli
push
pop
jbe
mov
aaa
mov
adc
dec
pop
inc
xor
push
adc
mov
insb
popf
lret
push
mov
mov
rcrl
cmp
mov
rclb
push
sub
test
push
and
jns
push
ds
nop
rcrl
fldt
std
mov
mov
mov
test
mov
popf
and
mov
inc
loope
js
mov
std
and
push
jecxz
mov
dec
lea
mov
aad
sub
repnz
push
cmp
push
inc
out
out
mov
into
ret
imul
imul
adc
xchg
and
inc
icebp
jl
out
sbb
or
jnp
mov
rcl
cmp
push
movsl
adc
stc
adc
cltd
cmp
jae
mov
dec
dec
mov
cld
dec
xchg
sbb
adc
xchg
mov
dec
xchg
lret
roll
es
stos
sti
push
sysret
xor
pop
cs
rcrl
mov
mov
jg
mov
cmp
cmp
push
cmp
je
pushf
std
cmc
cmp
inc
sbb
jg
pop
sbb
mov
lcall
add
push
push
test
int3
xor
sub
aam
scas
xlat
xchg
orl
mov
es
sub
xor
icebp
pop
dec
push
mov
sbb
fdivs
sti
lahf
dec
fwait
mov
sub
xchg
sbb
out
inc
fwait
lock
or
push
xchg
adc
stc
push
cmp
lods
push
xchg
int3
movsl
rorb
mov
icebp
addr16
idivl
fsubl
jno
fdivl
in
xor
test
iret
xor
mov
sub
or
roll
cs
mov
xor
int3
ficoml
xchg
bound
lcall
addr16
shll
lcall
ret
mov
push
icebp
test
arpl
cmp
dec
inc
or
xchg
cmpb
xchg
sbb
sbb
jle
mov
pop
dec
xlat
push
les
mov
push
in
mov
cld
lahf
inc
mov
mov
xchg
jne
cltd
in
mov
shrl
cltd
jp
insb
pop
jmp
jbe
pop
jae
aaa
and
adc
jno
es
adc
mov
movsb
mov
hlt
xchg
out
mov
loopne
enter
push
mov
mulb
inc
mov
ret
dec
or
mov
ljmp
pop
addl
testb
stc
sahf
inc
gs
jo
mov
sub
pop
aad
hlt
mov
or
ret
loop
push
ficomps
fwait
sbbl
imul
adc
xor
data16
xchg
pop
inc
lcall
xchg
enter
jno
stc
data16
xor
mov
leave
pop
dec
aas
into
int3
lods
xor
ljmp
jl
call
mov
int3
dec
inc
dec
lods
fadds
pusha
lock
or
and
out
cmpsl
scas
adc
hlt
arpl
ss
pop
xchg
push
xchg
push
je
shlb
xchg
adc
dec
inc
dec
in
in
sub
lea
cld
inc
fbstp
mov
cmpb
xchg
inc
push
jg
mov
mov
stos
aad
roll
adc
dec
mov
mov
xchg
scas
js
xor
or
call
outsb
push
out
xchg
ret
mov
inc
xchg
in
mov
sbb
loop
test
les
sarl
sub
and
loopne
inc
test
or
ss
mov
out
sti
lock
loopne
pusha
shrb
add
lock
stc
in
repnz
fmuls
push
jb
enter
dec
sub
xchg
jns
sysenter
push
inc
or
or
sbb
xchg
movsb
in
jmp
clc
in
sbb
ror
sbb
lods
jne
test
push
fstps
fstl
mov
fimuls
dec
cmp
pushw
mov
lock
lahf
lret
jns
xchg
cltd
das
pop
and
push
mov
jns
pop
or
movsb
test
pusha
jne
movsb
push
pop
xchg
mov
iret
ja
xchg
push
imull
jmp
btr
inc
xchg
add
add
add
test
lods
push
fdivrl
jb
popa
cmpsl
dec
cmp
mov
xchg
mov
and
imul
mov
loop
mov
leave
xlat
orl
inc
pusha
icebp
repnz
jb
cmp
ret
ret
aas
pop
and
decb
add
jp
stc
or
lods
shrl
fmull
in
sbbb
pop
ret
jno
pop
in
js
sbb
out
pop
scas
jmp
sbb
divl
sub
test
movsb
mov
scas
je
push
mov
out
je
mov
xor
mov
popa
mulb
in
nop
inc
shl
dec
and
in
je
adc
data16
cmp
xor
mov
iret
int3
out
mov
adc
jmp
test
test
xor
mov
xlat
mov
mov
clc
ss
rorb
cld
dec
and
lods
into
pop
or
pop
in
inc
shrl
aas
lods
fsubrp
cmpsb
imul
pop
les
aam
fidivrl
jmp
fsubs
fldcw
outsb
cmp
out
mov
ss
mov
int3
lret
add
stos
xor
mov
dec
sti
sub
hlt
add
or
cld
mov
loope
movsl
push
sti
fimuls
mov
enter
jmp
mov
outsl
cmp
enter
push
mov
into
jl
xchg
pop
mov
push
test
inc
and
dec
in
shll
jmp
sahf
pushf
push
xchg
mov
inc
mov
imul
movsb
xchg
mov
sbb
add
and
mov
push
jp
add
insl
imul
or
shlb
push
mov
mov
stos
testb
xor
dec
mov
xchg
out
dec
and
xor
xor
pop
mov
addr16
cmp
dec
imulb
icebp
lock
mov
jp
aaa
imul
aaa
xchg
push
or
scas
inc
test
dec
cmp
dec
fmul
shll
seta
adc
cmp
outsl
adc
dec
repz
cs
cli
adc
imul
cmp
subl
rcrb
dec
inc
xchg
sub
icebp
dec
ja
sbb
xchg
and
cmp
repz
mov
lods
lahf
pop
inc
lds
xor
mov
lds
mov
cmpsb
in
test
stos
adc
gs
or
mov
lods
ret
dec
cs
and
movl
cmpsb
or
stos
sub
hlt
mov
pop
negb
out
es
into
icebp
out
jmp
push
pop
in
mov
or
mov
in
out
lods
stc
out
loope
dec
aam
sub
lcall
adc
repz
cs
adc
xchg
mov
xchg
sbbb
shr
inc
clc
push
in
test
adc
mov
std
dec
push
ret
mov
inc
mov
je
xor
loope
mov
fwait
jno
out
movsb
xchg
aas
mov
hlt
mulb
loope
mov
cmp
mov
pushf
test
and
jl
mov
in
xor
sub
scas
sbbb
movsl
mov
pop
popa
fwait
mov
sbb
dec
dec
ss
sub
test
mov
lcall
je
or
arpl
stos
inc
cmp
movsl
and
adc
or
add
pcmpgtd
sbb
push
jge
pushf
mull
xchg
pusha
test
mov
popa
jb
imul
leave
scas
xor
loope
rclb
call
pushf
addr16
and
dec
push
mov
out
mov
push
movsl
hlt
ss
xorl
and
stos
lock
adc
mov
jecxz
xor
test
fisubl
stos
je
dec
cmpsb
imul
jo
dec
daa
dec
jg
xchg
leave
pop
ret
sub
sbb
in
lcall
movsb
lods
jbe
jp
bound
pop
fmul
xchg
pop
mov
and
out
mov
fildll
adc
je
push
mov
shll
call
jp
xchg
inc
mov
add
push
or
xor
lods
mov
xor
shl
je
ja
mov
add
ljmp
add
lret
adc
lret
mov
xor
sub
flds
lret
inc
loop
push
mov
xor
mov
rorl
xor
add
fidivrl
push
adc
sbb
xchg
mov
fdivl
jl
dec
lcall
es
icebp
pop
dec
dec
push
mov
jnp
aas
push
fwait
push
xor
xchg
sbb
dec
mov
cmc
adc
cmp
add
leave
jmp
cld
test
call
stc
ss
and
shrb
adc
adc
fistpl
lock
inc
add
movsl
adc
adc
pusha
inc
jnp
loope
in
in
or
and
or
cli
lea
packuswb
aad
dec
cmp
pusha
add
add
jae
aad
mov
and
das
mov
add
mov
dec
aad
test
and
pusha
repnz
push
sbb
movsb
inc
repnz
ja
dec
xor
or
or
add
adc
fs
dec
mov
push
sbb
insb
outsb
or
jnp
mov
lahf
inc
mov
add
js
pushf
pop
xor
iret
sub
in
mov
jb
jbe,pt
inc
clc
xchg
ficoml
mov
push
movsb
js
dec
and
insb
movsb
mov
test
in
dec
or
dec
xchg
mov
jnp
sub
mov
insl
movsl
or
pop
movsb
popa
mov
lret
cmpsb
lods
sub
imul
lea
stos
les
sbb
cmp
xchg
push
mov
sub
adc
outsl
aaa
stos
xor
inc
push
pop
mov
imul
inc
cmp
cmpsl
inc
hlt
mov
mov
add
jg
and
call
push
in
call
psubd
push
shll
ljmp
and
mov
in
add
dec
mov
sub
cwtl
xor
dec
cltd
fsts
into
mov
out
jbe
mov
add
andl
pop
les
and
add
sbb
lds
or
jns
or
jge
xor
negb
loopne
cmpsb
sbb
sbb
sub
xor
es
movsl
mov
aam
mov
das
mov
dec
jl
xchg
lods
std
dec
sub
popa
push
movsb
dec
and
and
xor
sarl
pop
mov
pushf
lret
jl
shll
aas
xchg
mov
sbb
mov
nop
fimuls
filds
lods
in
push
idivl
hlt
adc
stos
les
lods
rolb
sub
pop
dec
push
popf
inc
dec
dec
sub
popa
dec
sbb
inc
int
adc
add
enter
jb
cmp
enter
or
inc
jge
iret
notl
jmp
adc
int3
stos
add
insb
fwait
popf
adc
xchg
stos
cmp
bound
dec
sahf
aad
pop
insb
in
das
mov
jp
mov
sub
jo
repz
jo
stc
sub
loopne
push
jno
mov
mov
mov
mov
xchg
sbb
cmpsb
adc
jle
cmpsl
out
in
pop
push
xor
adc
mov
call
subb
or
or
out
arpl
lcall
cmp
stc
and
sub
repz
dec
push
into
jp
adc
stos
adc
mov
ret
cld
shll
int3
int
inc
jne
je
sbb
leave
sbb
add
ffreep
out
pushaw
push
movsl
bnd
xchg
in
sub
call
xor
leave
inc
fcmovnb
jbe
addr16
shl
imul
in
jl
es
and
mov
icebp
mull
mov
fsub
icebp
mov
dec
pop
jmp
fisubrl
jo
js
jne
and
sahf
dec
in
out
jl
sub
cmp
and
pusha
cmp
aaa
lret
and
and
mov
jo
cmp
xor
out
jp
pop
leave
push
mov
add
addr16
repnz
mov
push
mov
out
mov
inc
mov
mov
xor
mov
iret
lods
rcrb
leave
movsb
rclb
insb
loop
rep
call
inc
iret
in
sahf
add
push
aad
sahf
inc
ss
mov
stc
cwtl
movsl
pop
cmpsl
scas
ret
jbe
xor
dec
jmp
enter
pop
in
sahf
lahf
dec
sub
stos
pop
mov
lcall
fdivs
mov
jne
mov
jp
or
push
ja
rcl
push
and
shll
out
cmp
outsb
jg
push
nop
or
std
push
lods
inc
xchg
fdiv
daa
dec
mov
loop
movsb
scas
jp
dec
cmp
aas
mov
pushf
ds
stos
cmp
sbb
inc
pop
mov
pop
outsl
aas
pusha
xchg
pop
test
in
push
adcb
sub
imul
pop
mov
sbb
cld
loop
push
sbb
ljmp
shrl
push
cmp
inc
inc
dec
inc
data16
xchg
movsl
push
adc
jno
add
add
ljmp
out
push
lea
mov
sub
cmp
sahf
clc
aam
lods
rolb
mov
imul
subb
pop
mov
sarb
jbe
push
jecxz
adc
adcb
adcb
je
push
cmp
daa
fistpll
enter
fisttpll
imull
push
cmpsl
push
cwtl
inc
faddl
lret
das
add
inc
mov
xor
pop
push
dec
mov
das
movsb
in
mov
lods
loopne
dec
lods
fcompl
lea
push
xor
dec
addps
cltd
in
addr16
fs
xorl
dec
loope
mov
mov
out
sub
mov
cmp
jnp
push
aam
mov
mov
jecxz
pop
jbe
test
loopne
mov
inc
les
imul
mov
or
pop
mov
fstps
lock
push
xchg
int3
and
jg
pop
dec
sbb
int3
add
inc
push
aam
sbb
sub
popa
dec
scas
sub
push
push
lret
test
insl
sbb
or
pushf
outsl
push
xchg
mov
js
data16
gs
into
out
nop
imul
cmp
call
rolb
stos
loop
test
int3
mov
into
not
fsqrt
cli
xor
dec
xchg
jae
iret
daa
push
sbb
mov
and
or
push
icebp
sbb
lcall
mov
adc
sbb
inc
iret
add
dec
inc
dec
push
mov
stos
xchg
std
push
mov
loop
ja
xor
adc
clc
and
inc
outsl
es
stos
inc
pop
call
push
push
rorb
je
push
das
les
xor
xchg
cwtl
inc
jb
dec
sarb
leave
adc
xor
in
iret
mov
jge
mov
push
daa
les
sub
sub
cs
dec
shl
jae
pop
sbb
hlt
lret
pop
cmc
lock
mov
adc
xor
jno
jo
adc
sub
cmpsl
data16
jo
xlat
outsb
fwait
xlat
in
mov
push
jmp
out
sbb
daa
pop
cmp
enter
fstpl
inc
push
mov
cmp
bound
push
int
aad
insl
cmp
mov
cld
mov
or
insl
enter
hlt
mov
mov
icebp
lds
in
jo
lock
mov
jmp
imul
pop
ss
cmpsb
div
andb
mov
mov
pop
loopne
add
fs
les
loop
leave
xchg
mov
pop
int
loope
out
sbb
jecxz
test
ret
xchg
leave
ret
xor
pop
xor
data16
fstpt
shll
fmulp
push
fcmovne
push
in
jecxz
or
scas
pop
mov
in
or
sbb
scas
xchg
popf
movsl
cmpsb
movsb
test
push
mov
push
jge
psubw
xchg
stos
out
imul
add
data16
jle
in
mov
sbb
data16
push
xchg
push
sbb
and
shl
push
cmpsb
mov
jo
push
dec
jp
adc
je
xorb
addr16
dec
lcall
and
shrb
int
loop
pop
mov
sbb
inc
jmp
das
dec
pop
mov
mov
mov
lahf
outsb
aam
adc
das
mov
in
gs
or
stc
mov
adc
ja
jns
mov
or
lods
lahf
into
jnp
ss
les
push
out
mov
and
cmp
ljmp
sbb
popa
xchg
sub
pcmpgtb
sub
bound
cli
lahf
arpl
popa
xor
pop
leave
popa
shlb
pop
adc
js
sub
and
mov
stos
je
pop
inc
shl
and
pop
inc
mov
scas
sub
scas
or
adc
stos
sbb
xor
and
lret
mov
fdivs
mov
aad
and
sub
imul
into
fdivr
mov
popf
mov
out
push
or
adc
inc
dec
jp
mov
or
cmp
cmp
mov
cltd
adc
pop
or
adcl
xchg
ja
movsb
xor
fnsave
stos
add
push
pop
mov
adc
jne
test
data16
int3
and
fsqrt
js
out
imul
fxch
movsb
clc
and
xlat
lods
cmp
and
in
lahf
push
data16
popf
addb
imul
cmovbe
or
mov
sub
rcrl
ja
mov
mov
push
and
push
or
sbb
mov
cmpsl
sub
and
cli
cmp
hlt
push
ss
and
ficompl
fwait
int
popa
xor
rclb
jl
lods
je
sbb
mov
push
aas
in
mov
loopne
sub
out
jecxz
jns
xor
push
sti
sub
pop
popa
jl
mov
loop
sub
and
jmp
mov
dec
push
jb
add
aad
inc
and
out
in
loopne
je
insl
ljmp
ret
mov
pop
scas
stos
aad
push
popa
rorb
jl
sar
adc
or
inc
jecxz
adc
cmp
mov
popa
lock
xor
jno
xchg
ja
push
loop
jmp
dec
xor
cli
or
inc
in
mov
dec
lret
rcl
std
xor
imul
push
addr16
xor
iret
mov
incl
mov
push
push
jecxz
or
xor
mov
push
jnp
insb
cmpsb
sub
loope
xor
mov
add
sub
pop
loope
lret
sbb
outsb
mov
xor
and
aad
imull
cmp
lea
jbe
popa
cmp
pushf
ror
popf
push
xchg
fs
into
stos
xor
jno
out
jge
sub
lds
pop
mov
xchg
sub
push
inc
adc
pop
test
add
push
inc
sbb
cmp
inc
dec
ljmp
rolb
cwtd
pop
aam
out
push
xchg
fimull
and
aad
push
cmp
cli
fldl
std
pop
adc
shll
sub
out
test
mov
xchg
adc
in
mov
jge
subl
adc
jp
push
bound
and
xchg
dec
mov
ja
int
repnz
jecxz
into
fs
jg
sbb
or
aad
mov
inc
movsl
stos
call
insl
loope
sbb
clc
mov
mov
mov
sarb
and
pop
sub
pop
sti
outsl
in
xorps
adc
cmp
movsb
call
inc
test
pop
jl
push
jnp
les
push
push
fbld
dec
cmp
sbb
push
and
lret
sbb
bound
sub
mov
sbb
lret
daa
jecxz
in
jmp
pop
xor
imull
insl
or
mov
sahf
popa
cmc
in
in
arpl
xchg
jo
adc
mov
pop
mov
xchg
xchg
fldl
jecxz
push
dec
inc
lods
push
mov
clc
arpl
arpl
repnz
stos
iret
adc
inc
aam
or
cltd
icebp
std
insl
loope
jb
sbb
stos
cmpsb
icebp
dec
lods
push
fisubs
imull
shrb
push
dec
xor
mov
repnz
sbb
inc
enter
shlb
jnp
push
scas
mov
dec
push
rorl
loopne
into
push
mov
or
cmp
jle
dec
dec
sbb
cwtl
dec
jbe
inc
int3
aam
and
out
imul
mov
add
pop
movl
ret
lahf
add
push
push
jge
ja
jge
test
inc
daa
jmp
lods
sub
ss
fisttps
imul
leave
fwait
lret
and
add
push
xchg
sub
popf
fsubrs
enter
xchg
fiaddl
popa
js
or
cmc
inc
js
repnz
cmp
es
push
xchg
fdivl
xchg
aaa
xchg
push
mov
cmp
lahf
out
jns
lods
mov
shrb
sub
in
add
xor
sbb
push
pop
adc
xchg
jo
push
lds
out
shrl
dec
loop
stos
adc
push
mov
into
pop
sbb
xor
xchg
test
mov
cmpsb
movsb
inc
mov
stos
aam
into
mov
mov
addb
inc
sti
pop
cmpsl
lods
inc
cmp
xor
adcl
pop
je
fildll
and
cmp
mov
cmp
mov
xchg
pushf
sub
adc
outsw
int3
cmp
movsb
sarb
outsb
addr16
dec
rcll
mov
mov
add
lds
outsb
push
mov
inc
in
jmp
imul
mov
inc
imulb
jno
popf
cmpsb
pop
push
ja
xchg
dec
xor
adc
gs
aad
mov
and
ja
imul
pushf
dec
ficoml
in
into
lods
jno
std
jl
mov
push
imul
cmpsb
daa
sahf
clc
push
mov
lods
nop
dec
in
repz
xchg
jns
xor
nop
enter
out
lahf
inc
inc
xchg
pop
jns
je
andb
scas
xor
xchg
pop
pop
cwtl
add
xorb
stc
inc
daa
mov
adc
pop
imul
jb
jno
dec
andl
cmpsl
push
aad
xor
sti
dec
push
or
clc
popf
addb
sarb
push
cmc
xchg
mov
pop
mov
dec
and
dec
pushf
mov
js
movsb
hlt
dec
pushf
std
mov
popf
push
test
fimull
gs
mov
jmp
inc
cltd
push
jp
mov
mov
jmp
xchg
cli
sbb
pop
cmovs
stos
push
mov
or
sbb
lret
test
fs
lahf
and
cmpsl
scas
add
cld
imul
dec
xchg
adc
dec
js
mov
movsb
out
mov
movsl
jns
mov
add
push
xor
push
jl
or
xor
inc
ja
out
inc
mov
jl
scas
hlt
jle
inc
faddl
rorl
es
add
in
cmp
mov
iret
push
lcall
leave
movhlps
and
jg
push
mov
repz
mov
movsl
fs
pop
cli
mov
outsl
ljmp
jae
pop
dec
call
lcall
cmp
sub
lahf
sbb
inc
jae
xor
add
or
repnz
xor
xchg
or
jmp
inc
inc
mov
int
notl
sahf
adc
jo
mov
adc
movsb
pop
inc
pop
add
test
ljmp
xchg
push
pop
mov
in
add
xchg
mov
bound
dec
or
sbb
fldt
mov
cmp
adc
dec
data16
adc
out
rcl
xchg
frstor
lds
and
adc
mov
imul
loopne
mov
sub
aam
mov
lock
repnz
insb
mov
or
or
adc
push
add
movsl
cmpsb
pop
dec
daa
out
cmpl
stos
adc
loop
fistl
mov
xchg
out
dec
cltd
pop
cli
xchg
fwait
sbb
jo
cmp
out
in
add
out
sbb
push
out
outsb
mov
add
xchg
push
mov
pop
mov
push
fdivp
gs
add
jbe
jle
sti
cmp
cmp
mov
ss
jg
or
sbb
adc
imul
pop
repnz
insl
cmpsl
leave
and
rcll
push
inc
jecxz
push
jae
add
test
out
and
ljmp
or
sbb
push
cmp
cli
pop
mov
shll
pusha
imul
fwait
sbb
call
dec
int3
jle
xor
mov
nop
dec
cmp
mov
cmpsb
loopne
xchg
xor
fucomp
push
pop
repnz
lahf
pop
xor
xor
add
sbb
scas
xor
adc
in
popf
xchg
sbb
sahf
es
jp
jne
jns
scas
cs
add
addl
addr16
sbb
sbb
cltd
add
cld
cmc
cmp
sbb
cmp
int3
ja
arpl
xchg
add
jnp
xchg
mov
push
push
imul
cmpsl
adc
out
imul
jns
inc
das
cmp
pusha
xchg
lret
stos
pusha
fsubrl
cmp
out
adcb
iret
jge
xor
cmpsb
inc
popf
add
sub
dec
and
loopne
shlb
or
pop
jp
or
mov
pop
or
jbe
push
dec
leave
das
mov
add
jle
lahf
test
cmp
xor
outsl
ja
nop
cmp
int3
ret
hlt
nop
loopne
and
bound
lret
cmp
mov
enter
lock
mov
push
cmp
and
dec
leave
repz
cs
xor
xchg
jle
aas
mov
cmpsb
addl
scas
hlt
sbb
sbb
in
std
inc
inc
iret
cs
mov
cmp
sbb
add
aas
dec
jmp
scas
cmp
imul
in
icebp
ds
in
movsl
add
add
stos
mov
sbb
je
mov
sarb
lock
shll
xchg
xor
pop
lret
pop
jecxz
pushl
jp
ss
jmp
out
xchg
pusha
iret
fmuls
iret
mov
std
and
popf
in
jecxz
adc
nop
lcall
inc
mov
addb
push
mov
sub
popa
sbb
push
sti
js
inc
stos
addl
sbb
sub
push
cmp
pusha
cmp
inc
push
out
jp
pop
out
jae
aas
sub
rolb
sbb
iret
sbb
das
int
adc
aas
inc
imull
ud0
pop
pop
xchg
in
mov
test
data16
pop
scas
inc
js
sti
add
and
lret
jb
push
fcmovb
inc
push
sub
fcmovnbe
rcrl
xchg
pop
shrl
dec
or
int3
lods
aad
pop
or
lock
std
pushf
cmp
xchg
jne
fnstenv
cmp
or
mov
add
sbb
xor
addl
push
mov
and
jnp
sbb
adc
ss
cs
aas
adc
xchg
mov
add
sbbb
jo
push
and
xorb
fstl
or
das
adc
mov
pop
pusha
jle
sub
pop
fcompl
or
mov
scas
sbb
jg
out
sbbl
daa
mov
adc
xlat
movsb
shlb
push
mov
lret
pop
pop
out
rcrl
dec
xor
mulb
jmp
test
fwait
inc
fdivs
adc
stos
adc
xor
sub
pop
imul
scas
aad
test
fmuls
jge
imul
ss
push
enter
xor
rcrb
xor
imul
in
test
sti
lods
in
rolb
xchg
sbb
enter
jnp
dec
mov
push
xchg
dec
ror
jb
aad
test
mov
sbb
mov
out
cmp
mov
ret
xchg
movsl
fdivl
push
lret
jmp
jnp,pt
mov
push
ret
ss
mov
inc
jo
test
bsr
sub
in
js
push
xchg
xchg
mov
shl
ret
test
hlt
lock
lods
sub
jg
lock
pop
cmc
inc
movsl
in
outsb
sub
mov
adc
ret
sub
cs
cwtl
adc
aad
cmp
rol
gs
aas
mov
clc
adc
lret
jge
test
xchg
jo
mov
shll
popf
lahf
xor
into
push
jbe
push
leave
scas
fbstp
pop
jl
les
xlat
cmp
lods
sbb
or
inc
xor
mov
vandnps
mov
pop
pop
jmp
and
lret
icebp
in
mov
cmp
lods
adc
add
xchg
ds
cwtl
icebp
pop
mov
les
xchg
out
outsb
fistpll
testb
mov
aaa
notb
xlat
jne
outsb
shr
xchg
dec
fs
cmpsl
mov
mov
push
adc
mov
sub
rolb
sbb
push
popa
adc
lea
je
dec
je
pushf
in
add
cmp
adc
add
in
or
dec
call
adc
lock
dec
and
hlt
lcall
inc
pop
or
add
nop
jns
sbb
sub
push
out
mov
pop
dec
jl
sbb
pop
and
mov
and
lahf
aas
pushf
imul
or
fucomip
neg
dec
punpckhwd
pop
pop
scas
sbb
mov
xchg
repnz
incl
cmp
repz
add
sbb
bound
cmp
mov
mov
daa
mov
in
push
cld
test
ja
and
cmc
xchg
cli
sti
imul
clc
adc
dec
lcall
stos
iret
loope
mov
stos
pop
ss
pop
out
and
dec
push
sbb
xorl
add
add
jnp
roll
divl
call
inc
loopne
into
dec
lea
stc
and
ds
sub
std
or
mov
xlat
aam
arpl
movsb
xchg
sbb
push
rcl
add
mov
or
mov
je
xor
jecxz
adc
iret
sbb
sub
sub
sub
pop
pusha
rcll
xchg
sti
mov
sbb
inc
dec
push
das
mov
add
inc
push
push
stos
stos
pop
iret
jmp
add
push
xor
dec
fs
or
imul
mov
inc
inc
push
xchg
sub
out
add
mov
fdivrl
pusha
xchg
mov
sub
lods
mov
sub
and
push
jle
lret
in
in
mov
sbb
adc
and
dec
lcall
push
roll
fbld
test
jge
das
int3
std
fcoml
pop
adc
cmp
jg
and
sub
in
jbe
sub
pop
fwait
dec
call
push
jmp
add
outsl
movsl
mov
dec
insb
lcall
cmpsb
imul
daa
cltd
repz
inc
sbb
add
fmuls
fsubrl
movsl
jge
xchg
stc
mov
sbb
out
insb
jae
aas
jmp
jnp
xchg
pop
rcrb
stos
mov
or
cmc
cmc
fnsave
mov
pushf
jo
xchg
cmp
or
inc
test
js
xlat
jne
xchg
xor
xchg
mov
or
mov
fs
push
lcall
insb
cmp
cli
xlat
and
rorb
add
neg
dec
jns
cwtl
xchg
xchg
mov
imul
pushf
push
jge
testb
sub
arpl
add
outsb
lea
jno
or
mov
or
aam
mov
hlt
push
lahf
gs
test
in
jg
shl
add
adc
loopne
std
outsl
add
add
xor
fisubl
loopne
and
ljmp
fcmovnbe
popa
lock
and
roll
xchg
xor
idiv
sbb
subl
mov
popa
cmpsb
stos
or
fidivrs
stos
sub
scas
test
fisttps
fwait
sub
add
xchg
xchg
loope
jmp
out
push
pop
or
test
pushf
lahf
int3
das
sub
mov
push
cmpl
jmp
pop
adc
xchg
inc
and
mov
or
dec
out
inc
ljmp
test
and
mov
or
cld
fisubrs
and
jg
pop
mov
mov
into
cli
into
add
fistps
lods
fists
jno
push
pop
ficoms
sbb
mov
mull
dec
inc
mov
and
xchg
lea
jecxz
imul
fiaddl
jge
sbb
cmc
int3
inc
fucomip
fnstcw
dec
data16
or
insl
sbb
dec
aad
or
pusha
adc
or
push
inc
adc
fldt
lcall
push
and
mov
jmp
test
test
cmpsb
out
fdivl
pop
xor
out
jnp
mov
jbe
mov
jnp
dec
mov
inc
jns
arpl
outsb
mov
imul
cmpsl
in
pop
jecxz
mov
mov
dec
cld
das
dec
pop
popa
xchg
loop
fdivrs
mov
jo
mov
dec
bound
xchg
addb
test
outsb
xchg
fldenv
sbb
in
jl
cmpsb
lret
mov
mov
rorl
sbb
mov
int3
repnz
out
cwtl
xchg
mov
mov
jns
fstpt
and
jmp
fwait
mov
into
rcrl
xlat
ret
rcll
test
sbbl
mov
jge
repz
mov
insb
cmp
lea
jmp
push
std
movsl
shlb
std
in
fwait
pusha
add
mov
push
stos
sub
fs
pop
int
int3
jmp
in
adcb
and
xchg
dec
jnp
xor
test
push
jnp
int
mov
std
in
aaa
dec
mov
imul
or
mov
mov
add
mov
jbe
ljmpw
jmp
stos
leave
cmp
jno
inc
aaa
mov
cmp
filds
fcoms
mov
push
xchg
inc
jae
out
testl
add
cli
sbb
or
stos
xchg
fidivrs
mov
pop
mov
sbb
pop
lods
mov
jmp
ficoml
cmp
dec
adc
shl
mov
push
jg
mov
insb
int3
or
jbe
sub
cmp
and
mov
lds
sbb
mov
enter
mov
imul
adc
jmp
loopne
popf
mov
sbb
mov
popf
mov
rorl
jp
mov
sub
js
jmp
xlat
xchg
aas
push
mov
fcoml
test
movsl
mov
sarb
repz
leave
negb
mov
cmc
mov
scas
lods
pop
pop
lcall
mov
jb
inc
ficoml
sbb
repnz
push
loopne
fwait
jns
gs
and
sbb
xchg
push
fidivrl
subl
add
inc
and
dec
jecxz
xchg
filds
jg
data16
loopne
add
ljmp
dec
push
imul
fiaddl
ret
sub
mov
sub
xor
and
aad
adc
adc
rol
mov
jg
jg
sub
shlb
push
imul
jb
push
out
jno
ljmp
mov
cmpsl
orb
pop
mov
lcall
add
es
sti
fisubl
mov
push
mov
jb
pop
mov
cltd
cwtl
xchg
iret
xor
xchg
add
jle
jbe
into
cli
cmp
xchg
popf
ret
lock
mov
cmp
sti
lock
and
stos
adc
xchg
and
push
or
push
sub
jmp
call
push
mov
movsb
clc
in
shlb
into
inc
adcb
jp
mov
lcall
stos
test
das
iret
xor
xchg
fs
out
cmp
mov
adc
rdmsr
sub
andb
push
icebp
fs
loopne
jne
inc
mov
cmpsl
xchg
and
in
mov
daa
mov
fcoms
ret
adc
test
jnp
xchg
push
jecxz
xchg
loop
loope
test
xchg
je
pop
fildll
in
rcrb
ljmp
dec
sub
rclb
nop
add
cmpsl
jmp
test
jne
loopne
int
mov
movsb
mov
add
jbe
imul
loope
inc
mov
fisttps
mov
shl
pop
pop
mov
adc
lret
xor
inc
pop
movsl
push
scas
or
add
and
xlat
jo
gs
fldl
push
std
data16
cs
xchg
lock
hlt
repz
or
test
loop
rcrb
or
sub
lods
rolb
outsl
mov
clc
mov
jge
jl
sub
dec
mov
jmp
and
scas
arpl
in
test
jecxz
add
divl
inc
test
shrb
sub
push
out
adc
xchg
test
int3
imull
pop
shlb
jle
lahf
das
ja
out
jnp
inc
xor
adc
insl
pop
leave
mov
push
push
xor
add
add
pushf
ja
in
push
push
in
inc
mov
decl
pop
and
aas
cltd
pop
cmp
xor
xchg
test
adc
push
movsb
inc
dec
or
inc
jo
mov
inc
push
outsl
adc
adc
mov
repz
jnp
push
pop
push
in
enter
push
mov
jmp
ss
test
push
lret
xchg
mov
fstpl
out
scas
cmp
imul
cli
push
stc
cltd
dec
ja
sub
in
push
xchg
mov
adc
aad
lods
mov
fisttpl
ret
js
stos
pop
es
sbb
shlb
mov
xor
push
orb
sub
test
pop
in
jecxz
in
dec
and
fcomps
adcb
js
adc
push
sub
iret
mov
aaa
sub
and
jno
ja
mov
loop
gs
inc
stos
xchg
in
dec
cmpl
xchg
ds
pop
jg
in
sub
dec
ficoms
das
xlat
cmp
jns
call
ja
and
call
shll
sbb
push
mov
cmp
repnz
dec
sbb
out
sahf
ds
das
frstor
xor
out
stc
xchg
cmp
mov
repnz
cmpsb
jb
adc
adc
xor
in
fldcw
lods
push
and
cmp
cs
mov
inc
fwait
enter
pop
subl
rolb
fcoml
jb
push
cmp
sub
imul
outsl
in
in
out
filds
test
call
sti
mov
mov
add
xchg
sbb
jne
or
inc
sub
mov
cmp
cmp
rcrb
xchg
in
popf
adc
jo
xor
xor
jae
xchg
in
mov
xor
lock
xchg
call
mov
lret
pop
or
test
scas
push
sbb
jmp
xlat
filds
jns
test
test
xchg
push
lahf
mov
jg
data16
jp
cmp
shl
pop
aam
sbb
andl
out
insl
xlat
and
add
and
xor
jmp
or
push
push
adcb
call
xchg
cmp
repz
scas
push
clc
lds
ja
jns
mov
jb
stos
cwtl
out
cmp
mov
xor
jl
cmp
and
cld
push
mov
pop
movsl
sub
pop
xchg
in
pop
iret
gs
and
aas
cmc
in
out
inc
xchg
cwtl
xchg
test
add
mov
jp
push
lods
sbb
addr16
fs
iret
int3
mov
sbb
cmp
das
mov
aaa
push
add
adc
in
add
sbb
inc
xchg
jmp
and
or
lcall
adc
mov
push
outsl
imul
push
inc
pop
jne
pop
pop
jne
or
cmp
popf
ja
xchg
pop
mov
add
lods
dec
or
jo
xor
adc
jbe
push
loope
dec
out
mov
and
shrl
push
jl
cmp
inc
js
inc
xchg
xor
mov
das
xor
lret
mov
arpl
pop
xchg
mov
cmp
fwait
jmp
dec
shlb
inc
push
pop
pop
adcl
mov
cmp
bound
loop
jo
sub
imul
aam
pop
pop
or
sub
sub
xor
mov
dec
mov
fisttpll
lock
cmp
lcall
push
ja
addl
pop
test
or
ficompl
mov
jge
sbb
loope
nop
add
xor
fdivr
inc
fxch
push
jle
aad
jnp
popa
mov
loop
push
lahf
and
adc
cmp
jno
push
mov
cmp
xchg
js
xchg
pop
jle
jb
cli
pop
add
fs
popf
enter
into
sbb
outsl
jge
in
jg
movsl
mov
mov
loopne
jae
mov
hlt
shlb
cmp
or
cmp
or
sub
test
loop
jae
adc
lea
pop
aaa
mov
loop
lret
lahf
int
fs
mov
movsb
out
or
jl
adc
xchg
cmpsb
pop
loope
ljmp
movsb
sub
filds
pop
xor
pop
dec
pop
es
popf
push
lea
mov
pop
cltd
or
test
enter
adc
pusha
inc
adc
dec
push
test
or
mul
mov
sbb
movsl
jbe
sub
pusha
mov
test
cli
ret
mov
mov
sbb
xor
and
out
inc
je
test
mov
movsl
cltd
call
es
fisubs
xchg
or
aas
cld
sub
xor
test
fs
leave
pushf
outsl
jb
add
sub
subl
lock
gs
pop
mov
pusha
rclb
lock
outsl
mov
ds
mov
pop
out
xchg
mov
sarl
xchg
aas
dec
jns
mov
sbb
loopne
or
jo
add
pop
jae
sbb
loop
dec
ret
mov
lret
push
test
loopne
xor
leave
sub
pop
out
jnp
repnz
cli
xor
xor
clc
mov
iret
dec
dec
sbb
stos
lods
shll
sahf
ljmp
pop
mov
stos
pop
xor
dec
shll
fsub
xor
inc
sub
cmp
loop
and
xchg
push
adc
xchg
in
push
mov
daa
ret
loopne
adc
js
pop
add
ljmp
adc
cmp
pop
mov
in
mov
fnstsw
jl
xchg
dec
jno
enter
fdivrl
nop
xor
lret
clc
daa
add
sbb
xor
cmp
xor
outsl
ljmp
mov
sbb
push
movaps
shrb
mov
mov
xchg
shlb
or
fstpt
pop
movsb
out
out
mov
cld
test
addr16
dec
sub
jno
popa
daa
mov
pop
dec
sbb
fldcw
mov
mov
add
ljmp
je
sub
cmp
pusha
sarb
sbb
adc
cmp
fwait
lods
filds
idivl
mov
cmp
fdivrl
adc
test
add
cmp
hlt
mov
in
lock
or
mov
xchg
dec
int3
sbb
xor
fidivs
lahf
subb
or
out
inc
mov
jnp
mov
cwtd
jns
xor
push
in
rolb
sbb
jg
lea
fsubrl
fidivs
jecxz
mull
xor
xchg
jae
pop
add
jg
mov
inc
xchg
cmp
shlb
mov
xchg
fisubrs
fs
jmp
pop
popa
call
sbb
je
dec
in
dec
int3
aam
fwait
int
daa
jmp
insb
dec
loop
andb
mov
test
fcmovb
push
cmp
cwtl
sarb
sbb
push
mov
cmp
fadd
imul
xchg
loope
fs
lea
call
inc
mov
mov
push
jle
sub
inc
jmp
push
stos
sub
fdivrl
fsubp
jp
mov
test
lea
ljmp
xchg
cmp
dec
dec
pop
mov
pop
push
rcpps
rol
xchg
fwait
mov
and
sub
inc
ja
add
or
xlat
rcll
push
cs
sub
pop
mov
mov
in
sbb
es
loopne
rol
sbb
xchg
daa
pop
sahf
lds
cmp
ret
leave
mov
roll
mov
ds
xchg
int
in
scas
out
sub
xor
sahf
inc
sub
lret
inc
or
inc
rcll
popa
xchg
inc
data16
jnp
popa
push
sub
in
jbe
repnz
pop
nop
mov
sahf
ja
add
aad
adc
bound
add
dec
xchg
adc
mov
repz
fimuls
outsb
lods
sti
mul
cmpsb
xchg
inc
push
ds
xor
push
jp
sbb
in
out
push
pop
iret
xchg
aam
mov
xorb
aad
imul
sbb
cmpsl
lock
jne
test
aaa
cmp
mov
xchg
notl
mov
loopne
sahf
mov
and
dec
add
mov
add
cltd
lret
sub
int3
pop
sbb
std
mov
shlb
dec
sub
push
cmp
movsl
sbb
fstpl
jmp
pushf
add
daa
mov
rcrl
or
je
fnstcw
push
lahf
mov
xchg
test
xor
jecxz
stos
mov
mov
jne
les
insb
xchg
sti
cmp
adc
or
shrl
or
inc
dec
and
adc
int3
dec
mov
mov
push
jnp
or
jnp
mov
adc
jae
inc
pusha
insb
repnz
or
push
scas
shrl
cmp
stos
xchg
jg
adc
sti
outsl
mov
cmpsb
jge
popf
jo
push
xchg
jle
mov
mov
jecxz
sbb
sub
cmpsl
addr16
xchg
push
bound
or
arpl
pop
aaa
dec
clc
aad
jp
int3
cld
pop
add
inc
lock
adc
push
pop
sub
mov
sbb
inc
or
mov
outsb
jle
in
jge
mov
xchg
add
xchg
adc
mov
or
insb
addb
xchg
inc
sti
jp
sbbl
int3
into
mov
and
mov
adc
ret
insb
add
cmp
jecxz
gs
or
cltd
imull
popl
orb
sbb
mov
xchg
add
push
xor
mov
sub
add
in
pop
xchg
jo
shl
aaa
push
dec
xor
jo
in
int3
movsl
fildl
ret
sub
push
fiaddl
push
cs
shl
xor
or
pop
mov
repnz
xchg
pusha
sbb
cmp
cmpsl
or
mov
jmp
sbb
and
and
and
call
ficomps
pop
enter
mov
jp
and
push
mov
cmpsl
sub
lock
adc
sbb
dec
xchg
mov
mov
jne
cltd
jo
fcmovnb
popf
mov
ja
cmp
cwtl
mov
pushf
in
scas
cwtl
mov
fisttpll
out
decl
adc
loopne
cld
and
jns
sbbl
mov
mov
std
in
dec
push
pop
mov
push
adc
add
inc
insb
call
dec
jns
fdivl
mov
push
imul
test
dec
mov
cmp
dec
cltd
out
rep
mov
movsb
push
pop
test
push
or
loopne
sahf
jge
fs
cmp
and
in
adc
clc
mov
jp
sub
lahf
out
xchg
les
inc
mov
pop
jne
mov
cmp
mov
stc
and
sub
lcall
xchg
out
nop
adc
out
scas
setbe
xor
mov
xchg
xor
test
add
inc
data16
dec
test
faddl
push
sub
mov
push
xor
lods
nop
fs
dec
mov
hlt
pop
sub
les
push
xchg
push
ret
fs
pop
xor
pop
imul
xor
jecxz
and
xchg
ss
or
pop
out
mov
xor
xor
push
inc
add
outsl
cmc
inc
cmp
jmp
mov
push
lahf
pop
cmp
leave
sub
fnstsw
adc
lds
mov
int
lds
mov
repnz
push
es
lods
and
int3
mov
jecxz
adcb
mov
or
mov
test
push
cmc
push
repnz
pop
pop
dec
sbbl
inc
xchg
cmpsl
mov
dec
xlat
mov
rorb
sti
pusha
gs
mov
and
daa
pop
pop
lret
pushf
xor
push
inc
into
je
push
pop
sbb
cmp
xchg
test
fimuls
jne
repz
sub
popf
addr16
jns
and
adc
test
sbb
mov
mov
fs
aad
fs
in
addb
popa
jne
sbb
add
push
dec
aad
push
jbe
imul
fwait
ret
pop
sbb
and
call
dec
fnstsw
stos
loopne
shrl
fs
xor
xchg
jbe
dec
stc
mov
addr16
in
sti
push
stos
daa
push
mov
mov
sbbl
decl
js
mov
add
xchg
imul
dec
pop
lret
shrl
jns
cmp
in
cmpsb
cmpsb
in
js
push
into
jo
cwtl
xor
inc
jmp
mov
push
pop
movsl
jnp
sbb
fistpl
sahf
jge
and
xor
add
jecxz
pop
mov
push
mov
lods
xchg
mov
xchg
and
aad
sbb
lock
fcomps
add
or
cmc
in
ficoms
mov
sub
std
pop
leave
pop
lock
bound
adc
clc
lret
in
lcall
mov
push
and
xchg
int
or
imul
sub
mov
loop
pusha
test
mov
cmc
pop
data16
push
mov
push
in
shr
dec
lret
pop
stc
sbb
xchg
test
jne
xor
in
pop
aam
lahf
cmc
xor
or
lret
xchg
mov
shll
shll
dec
test
rol
mov
daa
sub
add
mov
push
pop
and
push
jne
jns
aad
mov
pop
in
xchg
out
push
daa
pop
jecxz
sub
hlt
bound
push
sub
mov
lahf
mov
fcoml
sbb
lcall
cmp
dec
adc
mov
in
push
int
inc
mov
mov
add
repnz
repz
sub
loopne
and
adc
mov
aaa
xor
fadd
dec
jge
aaa
xchg
fs
imul
inc
lahf
mov
jge
lock
rdseed
mov
cmpsb
adc
mov
mov
xor
movsb
aam
inc
or
cmp
mov
mov
mov
or
test
xor
xchg
lock
out
jns
int3
sbb
cs
sub
xchg
push
push
and
xchg
addl
push
sbb
mov
push
fisubl
xchg
and
pop
or
lcall
cmp
push
imul
addr16
in
sahf
movsl
cmpsb
push
popf
inc
sub
sub
xchg
sbb
test
cwtl
ja
mov
pop
mov
add
adc
add
cmp
mov
add
fst
push
dec
hlt
jg
ret
xchg
jle
ja
sbb
cs
add
inc
sub
push
jmp
cmp
sub
fdivrp
pop
adc
jmp
or
mov
push
xor
in
push
popf
lock
adc
int
andl
out
lret
inc
cmpsl
jecxz
push
add
add
call
lret
mov
out
test
jmp
cld
out
rcrl
fstps
outsl
cmp
jne
and
int3
nop
xchg
jp
rcrb
xchg
jl
data16
clc
sahf
mov
push
fisttpll
xor
push
mov
test
sub
rorb
iret
jle
movsl
rcrl
insl
stc
jmp
mov
inc
icebp
dec
inc
sub
mov
sahf
add
nop
push
mov
in
adc
xor
lods
int
dec
pop
popf
push
sti
pop
mov
cmp
add
xor
and
cmp
cmp
rcrb
jne
jmp
arpl
clc
adc
dec
cwtl
add
idivl
or
je
pop
cwtl
or
or
add
sbbl
testl
or
lods
sbb
in
push
repz
or
xor
sahf
jg
xor
iret
call
leave
aad
or
pop
rcrb
xlat
lock
scas
or
jle
jge
adc
cwtl
jae
into
in
aaa
in
jae
inc
push
data16
lret
mov
test
pop
movsl
call
xchg
mov
jle
lahf
add
fists
ss
addr16
rcl
mov
fwait
or
jl
loop
fld
or
ljmp
gs
lahf
mov
fdivr
popf
test
call
or
shl
fwait
aaa
pop
mov
aas
lahf
and
ja
mov
fistps
sub
mov
enter
mov
cmpsb
mull
sbb
pop
test
sbb
inc
hlt
or
or
cmp
jle
push
push
add
and
sub
testl
loopne
je
aam
sahf
sub
pop
jbe
or
push
loopne
inc
jbe
pop
xchg
stc
xor
les
aad
xchg
scas
ficompl
insl
testb
cmpps
ljmp
sbb
push
push
outsb
scas
xchg
push
popa
fstpl
jae
pushf
cmp
movsl
out
call
lret
adc
push
clc
or
mov
sub
lcall
lret
dec
jecxz
inc
xor
cmpb
mov
sbb
pop
lods
jbe
cld
push
cmp
pusha
arpl
push
push
adcb
test
lret
iret
inc
and
loope
dec
insb
adc
mov
mov
in
mov
push
cmp
popf
sti
mov
pop
jnp
fcoms
outsb
jl
repnz
xchg
movntps
fidivl
imul
aaa
xchg
sub
jno
xchg
xchg
adc
xorb
sub
out
lea
addr16
mov
test
and
scas
icebp
push
outsl
push
pop
roll
jmp
imul
xlat
cmpsb
mov
fstpt
adc
repz
roll
dec
mov
shll
xor
out
in
into
cli
loopne
lods
and
or
loopne
sbbl
loopne
in
mov
mov
ret
jl
dec
iret
and
out
mov
dec
pop
in
jecxz
stos
into
xor
xor
imul
jl
pop
mov
mov
xor
mov
pop
pop
mov
addr16
or
hlt
jno
push
dec
insl
lret
movsl
push
adc
shlb
pop
cmp
or
mov
mov
cmp
call
xor
cwtl
mov
cmpsl
negl
mov
sbb
jg
in
fdivrl
fcmovu
push
jb
or
mov
mov
xchg
pop
out
loop
push
pusha
jnp
push
xor
cmp
test
or
or
sbb
or
fdivrl
cwtl
jns
jle
mov
iret
inc
mov
rcll
mov
adc
add
adc
and
push
fs
xchg
xor
out
xlat
jmp
mov
and
enter
dec
scas
scas
push
adc
dec
jo
bound
sub
push
mov
cld
sub
loope
mov
add
jecxz
pop
fs
jo
cmpb
inc
enter
ret
call
shrl
icebp
cmp
movsl
fstl
cmpsb
dec
lea
adc
shlb
test
fcoms
pop
mov
xchg
push
push
sbb
sbb
lahf
rcrl
pop
xchg
pop
in
sarl
fstpt
pop
push
in
or
clc
jne
mov
sub
jmp
loopne
into
scas
sar
daa
xchg
adc
pop
ficoms
mov
lods
adc
xor
test
dec
fidivrl
pop
sub
out
or
push
jae
lcall
or
addr16
loop
movsb
loop
int
call
int
xchg
insl
fcmovu
mov
xchg
sarb
hlt
arpl
sbb
push
insl
jmp
test
xor
sbb
lahf
mov
mov
leave
xchg
icebp
test
pop
fidivrs
xchg
fsubrp
repnz
push
setno
push
jle
out
orb
or
xchg
xor
xchg
fs
out
shrb
pop
jbe
jb
cmp
enter
mov
and
mov
cmp
sbb
icebp
aas
bound
shll
pop
dec
fldenv
mov
mov
not
cmpsb
ss
jno
mov
in
shll
cmpsb
ja
imul
and
mov
mov
cmp
mov
adc
jne
rorl
ja
int3
in
data16
inc
adc
je
cmpl
sbb
adc
mov
icebp
sub
pusha
lds
cmp
sbb
push
dec
mov
jbe
jl
dec
loopne
add
pop
push
xor
mov
mov
mov
add
gs
inc
push
lcall
aam
out
repnz
or
pop
imul
mov
enter
push
into
ljmp
push
bnd
inc
in
jns
push
call
jecxz
incl
cmp
pop
lahf
push
push
divb
icebp
cwtl
subl
fs
fcoms
std
sbb
int
pop
mov
sub
inc
rcrl
movsb
inc
jns
mov
pop
mov
psrad
and
sub
pop
sub
bound
and
fidivs
sbb
cltd
adc
sahf
int
cmpsl
mov
jne
scas
xor
pop
xchg
js
dec
and
xor
adc
lods
int
sbb
inc
scas
mov
mov
pop
mov
xchg
xlat
test
or
sub
sbb
shrb
and
sbb
fistl
ljmp
xchg
xor
mov
cmp
out
enter
adc
dec
and
cmpsb
cmp
fsub
mov
cltd
push
xor
add
test
adc
mov
or
push
mov
sbb
sbbl
xchg
jae
dec
sbb
repz
cmp
cmp
or
mov
fadd
jne
loop
adc
icebp
int
push
pop
fadds
hlt
ror
push
movmskps
jno
and
les
mov
and
or
push
mov
push
mov
pop
mov
xchg
mov
xchg
lea
shl
lea
cmp
adc
cmp
inc
and
cmpsl
loopne
negb
popf
mov
clc
aas
jle
mov
cmp
cli
lcall
fs
les
fmull
cmp
icebp
jno
push
clc
mov
push
sub
sub
test
les
mov
sbb
pop
add
in
pop
shlb
sbb
jne
pushf
loopne
dec
add
aaa
adc
jo
and
ss
shll
outsl
add
call
or
mov
xchg
dec
xor
adc
xor
jae
daa
jno
push
xchg
cwtl
ret
or
mov
mov
clc
outsl
outsl
fmuls
aam
sahf
cld
pusha
and
cmc
sub
mov
and
fs
inc
cmp
fldt
xlat
maskmovq
negl
jb
loope
movsl
adc
icebp
in
mov
lret
jmp
lods
ficoms
dec
mull
aaa
inc
mov
and
push
pop
xor
addr16
mov
lods
test
ds
xor
cmp
mov
fsubrl
movsl
fmuls
or
into
mov
add
dec
mov
mov
mov
adc
pushw
adcb
outsl
pop
or
jecxz
xor
and
mov
cmp
aad
outsl
fwait
pusha
adc
mov
or
cmp
adc
shrl
lret
xor
in
aam
shlb
sub
pop
lea
cmp
lock
pop
test
daa
push
xchg
js
iret
stos
sbb
lret
push
xchg
xchg
lret
sub
and
push
sbb
lcall
fdivl
jae
or
sub
xor
mov
jle
test
movsl
xor
lea
xlat
add
push
dec
dec
loopne
dec
imul
pop
inc
shl
mov
out
push
sahf
mov
inc
outsb
cmpsb
icebp
es
into
sti
jno
jbe
and
mov
and
decb
adc
cmp
bound
add
xchg
xchg
pop
jo
xchg
in
lcall
shrl
sub
imul
decb
cli
jbe
adc
js
fmuls
dec
dec
push
jae
ret
sub
adc
sub
sub
lret
jne
xor
push
je
fbld
in
inc
loopne
sub
imul
out
shl
mov
mov
fs
fs
scas
jns
mov
push
dec
stc
lahf
repnz
push
iret
in
mov
push
or
inc
pop
sbb
mov
jno
cmp
inc
mov
add
mov
cmp
jmp
sub
mov
dec
sbb
mov
pop
dec
inc
loope
inc
aas
push
push
loope
lods
adc
pop
xor
lcall
inc
dec
je
mov
pushf
adc
andl
out
aad
out
ret
pop
xorb
imul
sub
cltd
mov
flds
dec
aas
lcall
cmp
loopne
bound
or
push
mov
push
nop
adc
stos
es
rcr
loop
cli
outsl
jecxz
dec
xor
sub
mov
add
push
std
insl
pop
jno
inc
sub
jo
scas
lahf
adc
push
daa
adc
popa
out
aad
repz
repnz
mov
push
aam
add
and
clc
pushl
push
mov
lock
loop
lahf
int
rcrb
jno
subb
or
xchg
lods
ja
mov
icebp
pop
cmovs
std
daa
and
cld
and
mov
icebp
xor
push
adc
inc
pop
repz
jl
cmp
pop
bound
inc
shrl
xor
adc
mov
mov
in
lds
or
idivl
jns
add
popa
enter
xorb
movsl
loop
pop
jge
out
pop
mov
enter
and
pop
xchg
inc
mov
aam
adc
cli
sbb
movsb
add
les
or
or
movsl
sub
loope
lahf
add
addr16
cmp
sub
jge
jnp
aam
bound
mov
jo
loopne
cmp
loope
stos
sbb
sub
and
mov
xchg
adc
jno
cld
popa
ljmp
insl
les
mov
pop
testb
mov
out
xorl
or
ja
dec
lea
out
imul
mov
aaa
movsl
add
adc
mov
mov
fs
or
sbb
icebp
pop
cs
in
mov
sub
popf
xchg
mov
outsl
jg
jo
mov
xor
xor
add
addr16
pop
js
cltd
fsubrl
insb
ret
lods
sub
adc
push
ss
mull
lret
data16
in
dec
inc
les
jb
xor
out
and
cmp
push
imull
mov
pushf
les
cmpsb
mov
sbb
xchg
enter
lock
or
xlat
push
aad
jg
add
dec
jecxz
fldt
adc
xor
mov
sahf
jmp
jbe
push
add
dec
das
insb
clc
pop
sbb
inc
cmpsb
iret
mov
mov
pop
scas
sbb
dec
jl
es
pop
xor
sub
xor
pop
mov
xchg
inc
push
out
push
sbb
push
jg
scas
lods
xchg
xor
loop
nop
popl
movb
mov
mov
jp
pop
mov
mov
cmp
in
jp
mov
fwait
cltd
pop
sbb
scas
or
cmp
enter
nop
mov
xchg
push
ljmp
pop
push
loop
popa
popl
or
push
mov
cmp
sub
data16
pusha
or
scas
sbb
mov
mov
mov
in
inc
test
ret
pop
popa
js
dec
cmc
daa
inc
sub
push
loopne
inc
pop
xor
xor
sub
loopne
mov
pop
xorb
xchg
xor
data16
xchg
mov
cs
dec
iret
idivb
add
jp
jle
popf
inc
mov
add
cmc
mov
mov
or
in
popf
xor
mov
cmp
mov
jne
jo
bound
push
pop
stos
ror
mov
adc
sbb
xchg
aam
xor
jne
push
fwait
aaa
xor
enter
cltd
out
fcomps
push
aad
jecxz
repz
out
mov
jl
xor
mov
jno
call
or
jp
out
mov
in
xlat
ljmp
adc
int3
mov
cmp
cmpsl
push
xchg
mov
mov
dec
add
sbb
dec
or
in
cmp
sbb
xlat
xchg
sbb
push
lds
xor
dec
repnz
dec
or
pop
icebp
and
lret
iret
dec
and
pop
and
lsl
xchg
push
loopne
push
mov
push
dec
mov
ljmp
lock
mov
icebp
stos
iret
in
jp
je
add
mov
add
mov
in
mov
cmpsl
rcrb
pop
int3
cwtl
cmp
lret
aad
xlat
adc
out
xchg
and
jge,pt
mov
addr16
xor
int
call
sub
ja
xchg
fwait
sub
cmp
in
loop
push
roll
add
adc
xlat
sub
cmp
pop
setns
mov
negb
aas
jg
test
mov
in
out
sbb
jl
push
adc
int3
add
sub
addr16
xchg
sub
scas
xlat
mov
jb
pop
mov
fs
insb
or
stos
cmc
in
xchg
ret
jl
jbe
notl
and
or
dec
cmpsb
push
in
popf
mov
jns
jle
cwtl
imul
push
lret
aad
aaa
sbb
pop
adcl
push
stos
loopne
test
in
sub
push
in
mov
sbb
push
pop
sub
popl
scas
pop
xlat
push
pusha
mov
cltd
push
test
cmp
fldcw
sbb
xchg
cmp
xchg
inc
and
pop
sbb
cld
dec
pop
repz
stos
jnp
mov
inc
pushf
xor
ljmp
loop
push
aaa
jae
xor
movsl
cmpsb
xchg
popf
push
sarl
cmp
pop
xchg
cltd
or
jae
leave
jge
test
stos
xor
aam
lods
outsb
mov
enter
push
add
jnp
loop
mov
es
mov
mov
sbb
imul
adc
loop
pop
xchg
sub
repnz
sarb
jns
xchg
scas
std
nop
push
or
scas
movsl
jne
xlat
enter
sub
xor
fldcw
cli
pop
incl
mov
cmp
fcoms
aas
xor
jnp
es
add
in
out
and
push
hlt
and
inc
aam
xor
sub
cmpsl
mov
not
push
jo
sub
lock
fs
dec
outsl
push
cmpsl
lock
inc
and
push
xor
or
out
or
xchg
sub
rcrb
cmp
push
loop
mov
loop
stos
enter
scas
int3
arpl
repz
and
jb
inc
outsl
cltd
leave
sbb
mov
mov
decl
pop
mov
ds
xchg
hlt
inc
rcr
cmp
pusha
fwait
xor
ret
sub
xor
fs
pop
xor
sbb
lret
std
je
sbb
mov
fcoms
cli
fstpl
iret
fsubs
int
test
test
lret
push
xchg
imull
popa
lret
pop
and
clc
inc
shlb
add
sahf
and
fildl
sub
pusha
es
stc
sub
inc
loopne
mov
push
stc
xor
test
mov
inc
sahf
loope
adc
jg
jbe
mov
dec
jle
gs
ljmp
xchg
imul
rorl
sti
or
push
adc
testl
jo
sbb
movsl
sub
aad
dec
or
je
cld
pop
shlb
mov
xchg
pop
xchg
and
int3
lods
or
add
jmp
lret
and
jnp
loopne
inc
scas
mov
mov
sbb
dec
hlt
xchg
cmp
push
adc
dec
icebp
clc
std
out
fmull
jecxz
mov
movb
add
les
insb
dec
loopne
fnstsw
aam
cmpsb
xor
jae
rcll
push
or
xor
xchg
pushl
or
push
add
hlt
dec
rorl
dec
rcrb
enter
dec
js
jnp
test
sub
cld
outsb
add
dec
jbe
hlt
sbb
and
jb
inc
inc
aaa
xchg
cltd
xor
or
sub
fcmovne
fidivl
rolb
mov
in
mov
roll
lods
sub
fwait
dec
scas
inc
lods
inc
aam
negl
les
repz
lods
daa
fnsave
dec
dec
in
push
lret
lock
pop
xlat
loope
in
xchg
mov
scas
rclb
mov
insb
mov
dec
xchg
scas
outsb
dec
fmuls
repz
std
outsl
and
cmpsl
lods
mov
and
xchg
cmc
roll
clc
stc
rclb
xchg
ljmp
inc
xchg
sar
sub
stos
or
sub
clc
inc
sub
jnp
jns
xor
test
jle
and
and
mov
add
fimuls
jp
aam
je
xchg
jp
adc
sahf
sarb
loopne
dec
or
or
sarb
test
push
xchg
mov
inc
out
ret
scas
bswap
mov
lea
fadd
fmuls
loop
push
out
xor
cmp
jns
lahf
dec
sub
stc
pop
pop
ds
out
lahf
dec
mov
outsl
ljmp
cmc
or
mov
cmp
sbb
not
jg
sub
lret
mov
loopne
add
sbbb
adc
repz
and
loop
addps
add
sbb
dec
ljmp
mov
push
mov
xchg
sar
xor
pop
cmp
loopne
std
xchg
les
lcall
rclb
inc
int3
sbb
add
xor
cli
notl
sub
addr16
bound
and
ljmp
arpl
inc
inc
sub
adc
cmp
sub
addb
dec
lods
jl
or
mov
xchg
shrl
push
mov
arpl
mov
add
dec
addr16
cmp
pop
out
dec
mov
sbb
test
jno
jae
lods
mov
dec
scas
adc
fdivrl
lret
lcall
sub
add
testl
jne
insb
pop
fldt
sbb
mov
xor
pop
cmp
adc
and
and
outsb
adc
pop
aaa
sbbb
and
in
or
movsl
out
outsl
dec
not
pop
xor
push
imul
cmp
js
shll
mov
sbb
push
xor
inc
mov
dec
jg
sub
sub
xchg
rclb
sub
mov
add
in
pop
add
mov
mov
aad
ret
cmp
xor
sub
insl
lret
popf
push
push
lret
rol
xrelease
sub
sbb
testb
mov
inc
lret
test
push
mov
fs
lret
sbb
mov
and
xor
mov
add
inc
lret
adc
out
or
imul
mov
jmp
xchg
mov
sti
xchg
jns
roll
adc
pop
adcl
sub
mov
icebp
stc
dec
pusha
loopne
arpl
mov
movl
into
lea
pop
sub
mov
sub
pop
outsb
cmp
mov
test
xorb
pmullw
repz
lods
dec
inc
sub
fmuls
insb
sub
lds
xchg
loopne
pop
and
sarb
out
xor
imul
add
xchg
xor
push
add
lock
mov
mov
out
sbb
pop
scas
negb
and
ds
mov
sub
fstps
int3
sar
and
movsl
adc
js
pushf
lock
mov
mov
filds
insl
pushf
outsb
jg
hlt
jmp
pop
xchg
jae
mov
jnp
frstor
js
sbb
out
mov
jae
std
mov
fsubrl
test
or
scas
inc
mov
pop
fcom
mov
jae
les
mov
push
mov
sub
sub
hlt
xchg
and
add
mov
lcall
push
test
push
nop
pusha
adc
push
cmp
mov
mov
sbb
repz
iret
lret
addr16
xchg
or
ret
mov
xor
sbb
shrb
mov
loop
inc
roll
pop
pop
mov
rclb
inc
sbb
dec
aaa
popf
jne
decl
xchg
mov
adc
mov
rcrb
cmp
rorb
insl
add
mov
shlb
adc
lret
fnstcw
test
pop
incl
and
fwait
mov
push
ret
add
or
and
push
ficoms
loop
mov
inc
lds
ret
inc
popf
fdivrl
xchg
jecxz
push
jp
fsubl
movb
push
fidivs
fs
push
mov
pop
scas
rcr
inc
lret
aam
add
jne
test
or
test
shlb
out
and
sub
and
pop
fwait
inc
push
repz
ret
mov
jl
cmpb
cli
adc
xlat
in
std
mov
pushf
sub
fsubs
out
xchg
add
arpl
icebp
xor
pop
pop
pop
repnz
das
add
cmp
fdivl
inc
out
adc
xlat
inc
adc
andb
push
movsb
push
cmp
dec
arpl
lods
mov
in
mov
push
push
push
enter
hlt
mov
xorl
sarl
int3
add
je
lock
or
push
pminsw
push
in
xor
xchg
jecxz
pop
imul
mov
pop
test
xchg
jle
aam
or
add
mov
outsl
mov
mov
incb
mov
pop
xor
movsb
jle
inc
test
add
sub
push
push
jbe
notl
movsl
es
xchg
mov
std
pop
lret
push
std
mov
or
and
mov
imul
fwait
xchg
xchg
xchg
and
testb
ret
rcll
cltd
call
pop
and
or
pop
sbb
shrl
push
lods
addl
repnz
sbb
int3
xor
jns
mov
and
lods
xor
jmp
lahf
mov
cltd
ljmp
in
iret
pop
inc
shlb
out
mov
pop
push
pop
nop
lret
jo
popf
mov
cs
pop
xchg
xor
call
cmp
jecxz
lock
push
and
sub
dec
movsl
mov
push
icebp
dec
jbe
push
jb
lods
out
add
sbb
stos
pop
aas
or
inc
jae
push
push
je
sub
sbb
add
lret
imul
jecxz
in
pusha
enter
xchg
jecxz
rolb
ret
cld
jne
scas
sarl
inc
push
iret
addr16
aas
shll
mov
adc
inc
stc
pushf
fs
sub
mov
out
or
fnsave
add
lahf
mov
pop
movsl
adc
sbb
pop
int3
xor
loopne
mov
jl
adc
cwtl
add
jns
push
sbb
cmpsb
sub
push
mov
loopne
jns
fcompl
cltd
mov
or
xchg
cmp
mov
sub
js
sar
shr
imul
sbb
sbb
dec
adc
iret
cltd
inc
aaa
xchg
push
fwait
adc
mov
add
pop
sbb
mov
xor
aad
fidivrl
sub
push
cwtl
or
stos
push
movups
jge
repz
adc
mov
inc
push
repnz
push
enter
push
call
dec
ljmp
dec
addr16
faddl
xchg
adc
ret
movsl
aaa
subb
iret
pop
shl
push
inc
sahf
dec
call
into
pop
and
aad
pop
add
cmpsb
arpl
frstor
data16
pop
jb
cli
rcl
inc
leave
clc
fldcw
in
mov
mov
fisubrl
leave
lock
sub
sbb
xorl
sahf
mov
cmp
fidivl
pop
incl
call
int3
outsb
call
rcll
sbb
in
add
mov
xchg
pop
repnz
jp
hlt
mov
adc
jmp
fbstp
popf
lods
dec
mov
jae
jge
jmp
jg
sub
cmpsl
out
jnp
push
int
cmc
lret
jno
ds
imul
je
jle
jle
cld
mov
mov
hlt
jge
adc
mov
xchg
jg
ljmp
jmp
push
icebp
scas
out
lea
cmc
mov
push
imul
ds
cmp
into
in
sbb
jno
push
xor
pop
xor
jg
je
mov
pop
in
push
bound
popf
adc
push
and
lret
xlat
pop
std
xor
loopne
fstps
mov
ja
pushf
jmp
xor
push
pop
out
outsl
push
add
movsb
ljmp
pop
or
into
mov
jne
pop
dec
mov
mov
gs
mov
stc
in
popa
mov
jnp
les
cmp
xor
adc
cmp
mov
or
scas
pop
add
and
mov
push
cmp
xchg
mov
push
aam
adc
fcomip
push
jle
push
jae
sti
fs
jno
push
cmpsl
ljmp
enter
setl
mov
sbb
inc
pop
aas
xor
and
mov
movsb
in
orl
mov
enter
push
pop
in
and
sbb
dec
ficomps
mov
mov
rorl
inc
mov
xchg
pop
or
data16
movsl
subl
xorb
or
inc
jae
lds
mov
push
pop
push
gs
jge
dec
mov
ja
push
and
shlb
adc
xchg
sti
popf
or
outsb
push
add
js
ljmp
mov
nop
xor
or
and
mov
and
mov
xor
lds
xor
add
push
xchg
icebp
xor
int
mov
mov
jmp
mov
jns
adc
inc
pop
or
or
jl
rorb
gs
push
out
mov
push
xchg
mov
push
andb
stc
sbb
push
and
pop
fisttpll
sbb
adc
dec
xchg
loope
xor
push
inc
mov
in
dec
cwtl
outsb
frstor
sahf
lods
xchg
pushf
cmp
xchg
inc
bound
and
inc
or
ss
mov
lods
inc
cmp
cmp
xchg
scas
jp
push
dec
mov
pushf
or
mov
fisubl
cmp
mov
pop
inc
das
or
inc
sar
jne
ja
push
in
mov
dec
stos
int
xlat
rcr
mov
xorb
or
popa
movsb
push
jecxz
fldl
bswap
mov
push
xchg
not
test
mov
xchg
mov
pop
leave
dec
dec
mov
xor
push
push
dec
mov
in
sbb
dec
and
push
xchg
mov
push
inc
aad
adc
roll
divb
fsubr
leave
sbb
movsb
outsl
mov
js
jo
sbb
pop
sbb
pop
sub
push
push
mov
popf
jge
jns
sti
push
out
ficoms
mov
jb
cmp
ljmp
aam
addb
xor
movsb
push
repnz
in
pop
and
movsl
scas
sbb
ret
lret
fstps
and
cltd
dec
jne
insl
movsb
mov
movsb
inc
negb
push
addr16
dec
imul
mov
decl
push
mov
push
mov
shlb
xchg
jecxz
or
pushf
lods
lods
imul
and
sub
pop
push
xor
cmp
pop
xor
mov
sub
xchg
dec
imulb
sub
arpl
jo
lret
dec
into
dec
in
and
das
clc
mov
cmovae
jmp
mov
push
popa
mov
outsb
cld
xchg
fwait
jnp
fbstp
adc
fs
cmpsl
leave
lods
mov
mov
jle
and
fcomip
popf
lahf
in
sbb
mov
mov
xor
sahf
mov
inc
insb
inc
fdivs
insb
adc
or
fisttps
lret
adc
sbb
filds
jbe
scas
xchg
sub
sbb
and
push
mov
adc
dec
inc
push
popf
mov
in
adc
pop
jge
or
xchg
xor
shrb
into
add
dec
add
push
popf
jge
ret
sarb
adc
jmp
hlt
int3
testb
ret
push
adc
aad
leave
dec
push
lret
rep
or
or
sbb
dec
cmp
and
into
xor
lods
lds
xchg
jns
daa
mov
fadds
sub
rcl
inc
and
jo
mov
xchg
jge
dec
dec
ret
inc
mov
enter
mov
test
aas
cmp
clc
add
mov
push
xchg
push
push
and
outsl
rcrl
xchg
mov
mov
rcrb
ficompl
cld
xchg
mov
shrb
jno
cmpsl
mov
test
xor
mov
inc
sub
and
insl
sub
push
mov
mov
fsubrl
ljmp
pop
adc
jge
cwtl
cld
das
hlt
add
insl
dec
xchg
mov
adc
scas
add
nop
testl
repz
push
insl
or
inc
out
inc
das
mov
mov
pop
sti
mov
inc
lods
dec
testl
inc
cli
push
add
mov
mov
inc
push
mov
xchg
mov
jl
jp
adc
cwtl
in
lea
push
incl
call
xor
aam
inc
jmp
std
repnz
xchg
xor
fprem1
mov
inc
out
add
jecxz
cmc
test
mov
dec
lret
push
aas
fisttps
push
stos
and
stos
sbb
stos
lods
insl
cld
fimull
jne
add
fists
cmp
xorb
pop
sub
mov
push
adc
add
xchg
and
pop
cmp
rcll
or
mov
push
jle
sbb
cwtl
clc
ja
int
leave
mov
jne
pop
inc
mov
xchg
or
lock
lret
mov
xchg
loopne
orb
xchg
mov
cwtl
xchg
out
stos
fldt
fsubrs
mov
inc
push
push
ja
add
in
xor
lock
sbbl
adc
mov
idivl
pushf
insb
push
mov
bound
cld
mov
add
mov
inc
push
dec
xlat
in
sbb
iret
js
mov
xchg
aaa
dec
pop
mov
stos
fs
sub
rcll
push
mov
push
dec
jl
nop
inc
out
mov
pop
mov
add
ljmp
fisubs
cld
out
dec
sbb
adc
cmp
mov
lock
mov
adc
add
pop
mov
mov
dec
add
or
test
mov
outsb
pop
out
insb
cmp
xchg
cmpsb
hlt
cmp
push
rorl
pop
dec
inc
lods
dec
or
imul
cld
ret
pop
adc
aaa
fchs
popf
cwtl
dec
xchg
pop
test
inc
xchg
scas
lods
sub
sbbb
mov
test
push
out
addr16
roll
fst
jb
stos
lods
stc
pop
ljmp
inc
outsl
push
stos
push
or
repz
mov
cmp
rcll
clc
push
cld
daa
xchg
cwtl
cltd
sub
mov
xor
jbe
push
jb
nop
push
mulb
rep
std
adc
cmp
push
clc
xor
push
sahf
and
repnz
fistl
outsb
sbb
movsl
jmp
add
test
mov
rcrb
sub
mov
cmpsb
and
jne
jl
mov
sahf
inc
dec
adc
xor
xor
inc
jecxz
cli
sbb
imul
xchg
orl
andl
into
pusha
pop
xorb
out
mov
add
icebp
dec
push
lods
pop
nop
xor
adc
and
pusha
pop
mov
inc
ffree
lock
outsl
insl
push
sub
cltd
inc
dec
sti
pop
xor
mov
orl
enter
pop
cli
movl
cmpsl
jbe
ss
cmp
add
out
shr
cmpsb
add
lds
cmp
sbb
bound
imull
mov
int3
mov
pop
jo
jle
cmp
ss
jb
jb
sub
mov
outsb
scas
adc
cmc
stos
mov
or
mov
adc
popf
insb
mov
mov
ljmp
xorl
popa
and
clc
add
jmp
mov
ljmp
pop
mov
mov
clc
pop
mov
scas
push
sub
mov
mov
mov
orb
pop
jne
mov
movsb
insb
out
daa
pop
imul
pop
call
pop
outsl
es
loopne
clc
or
dec
mov
std
cmpsb
ret
jnp
fcompl
jo
sub
jb
jecxz
dec
jp
adc
es
dec
lods
pop
push
and
addr16
mov
mov
das
clc
cli
mov
sti
cmp
ja
push
pop
jo
inc
mov
shl
out
add
mov
lock
out
sub
out
std
add
and
ja
or
pop
loop
mov
test
sub
in
sub
push
jmp
pop
xchg
mov
mov
and
fdivr
icebp
mov
inc
test
jl
movsb
imul
dec
nop
mov
pop
mov
ficomps
test
pop
pop
sti
pop
xor
repnz
xor
jle
int3
leave
aam
fwait
or
mov
lock
inc
push
pop
sahf
jb
xor
or
sbb
das
cli
push
dec
lock
ss
lods
pushf
and
mov
scas
andl
aad
sti
inc
orb
testl
pop
pop
or
pusha
sub
btc
outsl
or
inc
inc
sti
adc
pop
jae
outsl
inc
pusha
push
or
test
nop
add
mov
or
inc
nop
sti
out
or
outsl
aas
fisttps
adc
mov
lock
out
jmp
push
mov
add
daa
jb
lret
dec
out
insl
out
nopl
lcall
xchg
repz
jl
inc
push
imull
and
cmc
pop
out
jmp
sti
xchg
cmp
mov
jg
lods
jno
adc
mov
test
cld
stos
inc
repnz
cmp
sub
add
jb
push
jp
ds
xlat
imul
xor
out
add
mov
icebp
test
arpl
in
cmp
inc
dec
cmp
cmp
cmp
test
addb
pop
orb
mov
or
sbb
sbb
out
out
sbb
arpl
cmp
pop
stos
xchg
mov
insl
inc
mov
pop
daa
xchg
imul
fdivs
repnz
in
mov
lret
pop
movsb
gs
loopne
stc
mov
sub
mov
push
or
push
popf
dec
cmp
andb
mov
mov
adc
adc
jge
pop
inc
iret
stos
cmp
pop
sub
out
xor
pop
and
xchg
cmp
xor
inc
cmpsl
pushl
or
ret
jge
dec
jne
sti
popa
lds
fcompl
dec
imul
fstpl
mov
outsb
cld
pop
flds
cmp
jecxz
rolb
mov
push
push
and
cmp
insb
and
add
mov
sub
push
mov
loop
mov
push
xchg
jl
pcmpeqd
jae
push
out
or
ss
fs
jle
hlt
fistps
notb
add
lcall
push
mov
adc
je
adcl
shll
int3
adc
dec
gs
pop
or
std
jmp
sub
sub
adc
mov
ljmp
cmc
inc
mov
pop
add
js
or
adc
in
stos
xorl
fadds
pop
pop
fisttpl
in
ss
repnz
cmp
jno
cld
setl
add
sub
fwait
pop
jecxz
and
dec
subb
dec
aaa
push
fnsave
or
dec
xchg
cwtl
pop
pop
mov
pop
cmp
push
bound
jbe
inc
adc
js
sbb
aad
pop
push
pop
cmpsl
repz
icebp
cmp
sbb
ds
fisttpll
in
adc
clc
orb
mov
jp
pop
push
fists
push
pop
mov
clc
dec
inc
testb
lret
js
enter
mov
mov
push
or
push
aas
push
mov
fs
adc
icebp
popf
mov
push
pop
cld
iret
jne
lret
addr16
pop
cmp
mov
test
and
roll
sbb
mov
addr16
in
push
mov
mov
inc
test
mov
sbb
into
adc
fdivl
adc
xchg
int3
jo
mov
mov
sarb
in
cmp
sahf
lcall
xchg
lahf
decb
mov
xchg
lds
in
gs
jns
or
sbb
lahf
push
cmp
and
pop
inc
in
out
mulb
pop
clc
mov
mov
jbe
icebp
sbb
and
sbb
inc
sub
sub
test
movsl
pop
aas
sub
pop
push
loopne,pt
insb
push
mov
fwait
inc
imul
aam
sub
idivl
pop
sbb
jg
mov
dec
jb
shlb
xchg
mov
adc
fstl
sub
stos
call
sbb
dec
testl
mov
das
adc
xor
pop
pushf
dec
push
movntps
pop
cmp
add
loopne
popa
pop
pushf
inc
adc
pop
cmp
fsts
repz
push
xchg
out
inc
sbb
lods
out
ljmp
out
cmpsl
sar
mov
mov
outsb
cmpb
jb
je
scas
int
cmpsl
movsl
shll
xchg
push
jl
popa
dec
lods
fistl
pushf
sbb
push
aaa
rcll
add
jl
rcll
ret
and
jb
pop
or
mov
les
and
sbb
xor
xor
jnp
pop
insl
jns
inc
mov
or
sub
pushf
xlat
mov
xchg
fwait
or
arpl
popf
push
imul
and
mov
sbb
dec
adc
sub
lock
shrl
scas
jl
cmpsb
jp
inc
lds
cmc
stos
cmpsl
icebp
sub
lock
daa
mov
adc
cmovo
or
xor
sub
xchg
push
mov
sbb
out
popf
iret
add
fstpt
adc
lahf
lcall
cmp
mov
jge
mov
cwtl
insl
lahf
int3
sbb
movsb
test
call
clc
xor
aas
add
cmp
aas
aad
shll
or
mov
sarb
outsl
hlt
add
add
pop
sub
aas
test
leave
insb
sub
in
out
jg
pop
popf
mov
orl
jnp
inc
lahf
fisubrl
repnz
aas
sub
lret
and
push
cmc
jecxz
sub
xchg
mov
ret
ja
jnp
inc
rol
dec
lahf
out
or
xchg
ja
mov
dec
push
out
mov
jecxz
shrb
cmpsl
cmp
push
jle
sub
stc
jp
movsl
sti
loop
add
pop
outsb
dec
loopne,pt
subl
sti
inc
es
add
jne
push
jb
lea
push
sbb
sub
lods
mov
xchg
je
inc
add
fwait
pop
lret
mov
stos
adcb
test
inc
mov
xchg
arpl
push
orb
stc
ljmp
imul
jl
daa
sahf
xlat
addr16
mov
fiadds
sub
xor
add
inc
sub
or
mov
adc
lcall
sub
fwait
add
push
movsl
mov
fsubl
mov
in
and
test
push
scas
es
xor
push
pop
adc
xchg
cmp
xchg
push
pop
sti
shr
gs
pop
dec
pop
bound
filds
daa
mov
xchg
ret
inc
divl
in
int3
add
test
pop
ret
imul
xor
jnp
movsb
movsb
adc
dec
lds
sti
daa
cmp
jge
rcrb
std
into
scas
cltd
fwait
inc
aas
repnz
repz
or
data16
xchg
shll
mov
xchg
fildll
je
inc
mov
cwtl
push
daa
push
cmpsb
xchg
and
inc
xchg
add
inc
mov
or
mov
test
lods
push
dec
push
rorb
cld
pop
sbb
inc
dec
push
out
je
adc
mov
lcall
xchg
ret
fisubs
js
shlb
push
pushf
sbbl
dec
int
cmp
and
sti
icebp
dec
pop
mov
xor
das
push
and
pop
push
test
ss
adcl
push
into
fidivrl
inc
sub
xor
mov
into
je
inc
in
push
push
jg
out
sub
mov
movsb
sbb
cmp
or
and
sbb
add
fisubs
xor
enter
ret
lret
mov
xor
rcll
imul
fxch
inc
dec
arpl
les
movl
sub
mov
cwtl
gs
push
aas
push
adc
mov
jl
mov
xchg
mov
ret
add
enter
out
pop
out
and
xchg
mov
cli
jp
fcomi
jmp
popf
pop
mov
sbb
mov
and
in
pop
push
js
jnp
lahf
leave
cmp
cmp
lods
dec
inc
fsubl
lahf
add
jae
lock
icebp
pop
adc
push
cli
aam
jne
test
ret
dec
dec
push
fmuls
jno
pop
jns
movsl
pushf
sub
cmp
jge
add
sbb
jne
out
pop
das
push
lahf
xchg
nop
addl
neg
insb
push
mov
pusha
outsl
push
push
adc
and
dec
dec
mov
ret
std
push
push
mov
or
mov
lahf
mov
ror
jne
fisttpl
mov
add
xchg
lahf
mull
imul
xlat
adc
and
xchg
or
mov
outsb
xor
pop
push
std
cltd
inc
hlt
je
repnz
jge
arpl
enter
or
jecxz
nop
pop
invd
mov
std
and
adc
mov
sub
push
test
xchg
cs
push
push
mov
lock
sub
nop
lods
aad
or
fistpll
add
pop
ljmp
adc
cmpsl
or
pusha
cmp
pushf
repnz
inc
and
mov
push
adc
adc
and
and
sahf
in
ret
pop
and
imul
cmp
jnp
mov
inc
mov
adc
flds
sbb
dec
pop
dec
lahf
shlb
pop
subb
jp
fbld
ja
js
push
mov
leave
pop
dec
mov
ljmp
add
cmpsb
clc
lds
mov
inc
imul
mov
insl
loopne
out
push
pusha
js
movsl
inc
adc
sub
xchg
adc
jo
aam
cli
iret
xchg
xor
cmp
adc
jbe
xor
aam
xchg
and
addr16
xchg
xor
adc
jnp
pop
test
sahf
or
lods
xchg
push
mov
inc
dec
push
scas
in
mov
cmpsl
testb
loope
jmp
fmul
pop
pop
scas
cld
clc
mov
push
outsl
jmp
jbe
divl
mov
sub
jg
xchg
testb
jecxz
jmp
ds
xor
jb
nop
scas
jmp
jl
and
and
jg
fildl
dec
out
jmp
fildll
and
lcall
mov
int3
xor
iret
xchg
test
cwtl
jle
mov
std
mov
ret
mov
cli
fwait
mov
push
push
sbb
mov
mov
rcr
jne
daa
and
dec
or
leave
or
stos
pop
sbb
in
test
les
ret
test
xor
or
sbbb
xchg
and
outsb
rolb
pop
stc
lds
or
aas
pusha
push
xorl
pop
pusha
adc
mov
fldenv
pop
xchg
lret
fimuls
sub
push
push
outsl
jmp
cmpsb
cli
sbb
cmp
xchg
push
lret
xor
inc
cmpsb
mov
sub
jl
xorb
add
mov
sbb
ret
ficoml
mov
push
add
xchg
pop
in
pop
ficomps
dec
stos
jp
jmp
sub
cmpsb
aam
mov
sbb
adcl
decb
and
lahf
sub
inc
or
jmp
xchg
mov
adc
jmp
pop
mov
lahf
outsb
sub
int
stos
xor
pop
sbb
adc
daa
mov
rol
push
mov
movsb
adc
pop
or
andb
xor
fstl
push
in
sbb
arpl
mov
dec
cmpsl
aas
mov
mov
clc
in
loope
adc
ret
add
adc
mov
scas
inc
cmp
jl
xchg
dec
mov
scas
loope
in
jecxz
pop
fs
pop
cmc
scas
sub
jo
lods
push
rcrl
cmpsl
dec
scas
imul
push
sbb
or
push
pop
add
out
sti
lea
lds
add
xor
push
dec
push
icebp
mov
cmp
dec
and
lret
adc
test
cmp
pop
adc
jmp
adc
or
imul
cmp
sbb
mull
loope
mulb
inc
and
add
pop
push
addr16
ret
dec
cmp
jl
les
inc
push
dec
fisubl
and
dec
pushf
mov
jno
jae
out
orb
jno
out
and
andl
int
lds
or
leave
push
idivl
xor
xchg
dec
push
mov
push
push
xor
pop
xor
out
jbe
popl
adc
add
popa
add
adc
dec
cs
lret
ret
int
dec
jmp
roll
dec
and
or
test
test
xchg
ret
or
aaa
leave
daa
jno
jge
pop
movsl
aaa
jae
mov
mov
loopne
arpl
sti
iret
cmp
add
mov
sbb
or
jnp
subl
andb
pop
inc
insl
pop
cld
in
pop
dec
and
pop
cmp
lock
cmp
inc
xor
insb
push
mov
mov
ja
js
dec
fdivrs
cld
push
insb
push
push
ljmp
std
pop
jle
mov
sbb
hlt
push
shlb
adc
xor
mov
mov
sub
arpl
sub
dec
cwtl
aad
sbb
out
sub
and
lahf
jne
xchg
out
ja
std
shrl
out
jnp
cmpsl
and
sub
mov
aam
add
lret
fs
movsb
xchg
pop
jae
nop
xchg
cmp
aam
push
mov
loopne
cltd
out
repz
repz
in
nop
add
sub
xchg
jb
mov
dec
fistl
and
mov
push
xchg
xchg
pop
dec
mov
addb
aad
push
push
std
fwait
insl
cli
cmp
lods
std
lods
out
lods
mov
pop
push
add
mov
xchg
mov
xor
lea
mov
xor
int
dec
xor
xor
xchg
test
xlat
lret
idivl
nop
pushl
scas
add
pushf
and
movsb
mov
in
pushl
mov
jae
and
inc
pop
mov
xchg
mov
test
inc
out
push
sub
mov
test
clc
imul
and
adc
mov
dec
adc
insl
scas
jmp
test
fsts
or
push
pusha
dec
loopne
xor
fistl
imul
sbb
sbb
popf
dec
mov
cmpl
iret
xlat
enter
pop
cs
mov
sarl
mov
push
stc
sub
fisttpll
adc
ret
add
and
inc
insb
incl
mov
clc
mov
jne
adc
aaa
daa
ret
mov
mov
mov
mov
mov
stos
repz
xor
fisubrl
adcb
mov
inc
cltd
mov
shlb
je
mov
divb
sbb
pop
mov
imul
mov
daa
lahf
cwtl
sbbb
je
jge,pt
divps
lock
cmp
xchg
pop
jg
mov
sbb
aaa
xchg
test
test
mov
cmpsl
in
nop
je
push
and
cs
adc
sub
sub
fwait
sub
aaa
std
pop
push
adc
dec
add
xchg
xlat
xorl
pop
addr16
add
inc
pop
jge
pop
mov
dec
loop
sbb
mov
lea
adc
add
js
or
dec
xor
sub
xor
xchg
sub
inc
adcb
mov
shrb
or
cld
loopne
jmp
int
imul
fwait
pop
mov
push
sub
out
js
jp
inc
daa
rcr
ss
daa
lock
js
adc
cmpsl
lds
add
leave
mov
sbb
nop
push
sarb
inc
and
xchg
mull
das
shrl
lret
sub
and
jbe
jbe
and
divl
ror
mov
inc
out
jge
subl
lods
lcall
mov
stc
mov
mov
leave
scas
pop
pop
inc
xchg
jns
and
fdivr
cwtl
je
cmp
inc
les
or
inc
das
push
push
sahf
or
lret
mov
scas
jg
jl
push
sub
cmp
xchg
icebp
fildll
fwait
or
stc
dec
jo
xchg
cwtl
fstpl
cltd
lret
cmc
out
dec
adc
cmp
push
daa
call
or
xchg
sbb
mov
rcl
jl
push
jnp
xor
push
mov
dec
fsubs
fcos
push
sub
imul
pop
push
ret
in
rolb
out
les
imull
fstps
data16
sub
in
test
and
push
dec
pop
aam
cltd
dec
pop
inc
add
incl
mov
fnstsw
ret
mov
dec
int
aam
and
mov
xor
rorb
or
loopne
xchg
test
add
sbb
roll
enter
pushf
or
pop
xchg
lcall
jno
and
pusha
lcallw
leave
add
jecxz
lahf
fmulp
xchg
or
cmpsl
hlt
jge
mov
jmp
add
cltd
xchg
popf
mov
cmp
mov
scas
jo
jge
fdivl
aaa
xor
mov
inc
dec
in
xor
cmp
mov
jge
push
nop
xchg
add
sbb
ror
jmp
mov
sub
jb
xor
jne
sub
icebp
sbbl
push
pushf
das
xor
and
sub
dec
fldenv
sti
lods
insl
dec
or
mov
fsts
cltd
lret
fnstenv
lahf
mov
push
jo
sahf
scas
stos
wrmsr
inc
mov
xchg
push
enter
idivb
push
xchg
mov
jne
pusha
inc
pop
add
dec
movhps
insl
sub
imul
mov
in
cmp
dec
pop
jle
fsub
fidivs
inc
clc
ja
push
and
ljmp
je
inc
mov
lods
cmp
lcall
sbb
dec
imul
mov
pusha
sahf
inc
leave
cld
pop
arpl
dec
push
sbb
movsb
cmp
jo
out
hlt
pop
gs
sub
jp
hlt
stos
and
cmpsl
ljmp
femms
test
xchg
mov
dec
xlat
cld
xchg
xchg
jnp
adc
adc
inc
inc
cmp
divl
add
imul
pop
ja
and
addr16
adc
push
scas
jecxz
shrl
fisubrl
pop
lods
add
shll
lret
sbb
sbb
clc
js
jae
xchg
pop
mov
sub
std
dec
call
push
hlt
push
dec
mov
jle
pop
test
cmp
rcll
jno
xor
loopne
and
cltd
pop
cmp
jecxz
data16
cmpsb
xor
xchg
cmpsl
scas
xor
sub
fwait
rcl
fisttps
cmpsl
dec
lea
mov
movsb
jmp
xchg
cmp
jae
inc
fcoml
lahf
lock
sbb
push
cmp
sub
xchg
movb
and
push
and
push
out
bnd
xor
aad
lret
aaa
dec
dec
lret
mov
push
pop
out
mov
inc
push
subl
or
cs
cmp
cmc
ljmp
lock
xor
mov
inc
fdivr
cwtl
lret
jnp
push
xchg
mov
arpl
push
js
mov
add
scas
and
cwtl
xlat
loop
call
test
push
stc
push
adc
xchg
pushf
dec
jo
incl
mov
pop
sahf
les
mov
test
into
and
cmpb
jmp
lcall
xchg
mov
cmp
dec
add
enter
into
dec
mov
clc
or
pop
dec
sub
cwtl
inc
adc
lcall
lahf
cmp
inc
cmp
adc
je
push
sbb
pop
sbb
mov
aam
iret
es
jb
aaa
fsub
add
and
les
popl
insb
mov
insb
rorl
jge
or
jecxz
stos
pop
repz
push
lds
ja
or
aaa
mov
or
aad
repz
movsb
and
inc
cld
and
jo
add
add
push
xor
test
jae
xor
dec
mov
or
xchg
imul
push
inc
movsb
out
jecxz
xor
and
rcr
sub
aam
add
sub
pop
enter
inc
int3
out
dec
jo
xchg
pop
push
loop
mov
sbb
sbb
sbb
inc
mov
jo
jns
lcall
mov
imull
sahf
add
mov
xchg
pop
xor
fsts
ja
xchg
lret
mov
icebp
lock
jne
mov
pop
aaa
or
adc
setl
inc
inc
lret
notl
adc
sti
cmp
les
loop
adc
cmpsb
pop
and
popa
call
sbb
and
dec
js
and
loopne
leave
mov
xchg
mov
test
rorl
adc
fbld
das
lahf
mov
push
aam
test
jae
stc
ficoml
pop
xchg
cmp
adc
adc
fsub
mov
fidivrs
mov
jae,pn
mov
cmpl
enter
adc
arpl
mov
adc
add
push
push
xchg
or
inc
aam
ds
pop
test
icebp
cmp
aas
hlt
push
push
adc
xchg
fcomp
push
movsl
xor
popa
and
push
int
aad
scas
out
call
mov
lcall
pop
xor
or
jo
test
int3
inc
mov
jbe
jb
add
pusha
push
icebp
int3
adc
xor
push
aad
aad
call
gs
pop
les
ja
das
xor
mov
shl
lret
adc
icebp
mov
xchg
mov
fwait
loope
sub
push
int3
mov
in
xchg
dec
test
out
jmp
outsb
test
jp
movsb
dec
std
out
call
loop
lret
out
ss
pusha
test
push
mov
fsubs
jp
mov
rcll
jae
add
or
sbb
jle
rcrl
adc
add
pop
mov
cld
js
cmpsb
push
aas
daa
xchg
shlb
jge
ror
cld
mov
mov
cltd
arpl
adc
cmp
push
fldt
addr16
repz
adc
sti
sbb
mov
mov
lods
add
add
xor
fisubl
out
mov
dec
adc
sarb
cmp
mov
std
mov
xor
sbb
dec
push
les
dec
and
lock
dec
xchg
mov
ret
out
lods
sbbl
pusha
xor
xlat
data16
sub
outsb
rcll
aad
loope
sub
in
xchg
sbbl
ret
stc
inc
sub
inc
insb
push
mov
in
adc
outsb
lds
repz
jle
cli
bound
lods
add
or
or
sahf
je
js
xor
punpckldq
pop
data16
dec
mov
jnp
sub
stos
push
fistl
in
enter
ret
insb
dec
sbb
rcl
in
cmpsb
pop
ds
add
in
test
dec
movq
lret
jp
xchg
addr16
ret
pop
lock
add
jp
mov
or
push
das
ljmp
popl
fwait
pop
or
mov
pop
or
cs
repz
daa
jmp
dec
mov
jo
xchg
mov
aaa
stos
gs
adcl
mov
dec
call
push
mov
aad
jl
in
lret
inc
or
pushf
movsb
add
pop
add
push
inc
push
leave
push
add
sub
aad
inc
inc
inc
aas
insl
dec
jl
cmp
insb
aam
sysenter
adc
clc
cld
push
out
outsl
arpl
mov
shrb
mov
sarl
dec
and
imul
jne
jae
lret
fld
dec
xchg
ja,pt
aaa
jnp
sub
and
pop
mov
pcmpgtb
xor
out
mov
jno
adc
cwtl
lahf
push
es
mov
jns
orb
xchg
inc
inc
popa
popf
notb
enter
sub
xchg
xor
mov
pop
sahf
add
cmpsl
ret
jg
arpl
scas
push
cmp
rcrb
push
xor
push
lahf
lcall
push
pop
lcall
repnz
mov
es
or
rcrb
pop
xchg
pop
insl
mov
fistpl
in
in
inc
jmp
add
inc
jns
add
lahf
bound
sub
lahf
mov
jp
popf
dec
mov
arpl
scas
and
clc
out
mov
mov
sub
ja
lock
xchg
enter
imul
sbb
out
sbb
lock
mov
mov
ficomps
push
dec
fldl
and
shr
jle
xchg
mov
mov
jb
call
ds
push
xor
pop
and
out
outsb
ret
mov
xor
inc
mov
cmp
xor
into
test
movsb
push
inc
iret
inc
cmp
sbb
pop
mov
mov
inc
lahf
or
mov
pop
dec
sbb
popw
pop
push
rclb
imul
xchg
fs
pusha
pusha
aad
in
iret
or
mov
push
mov
sarl
bound
inc
inc
mov
arpl
pop
xor
push
pusha
idivb
addl
je
int3
fisubrl
add
hlt
cmpsl
mov
add
cmp
inc
int3
in
mov
cwtl
jmp
mov
or
es
popf
fucomip
xor
in
pusha
jns
add
mov
aam
je
sbb
ficoms
sub
daa
cmp
aas
mov
call
xchg
adc
int3
xchg
outsl
mov
clc
push
aaa
or
roll
ja
daa
xor
sub
push
bound
jecxz
xchg
ds
and
mov
or
push
addr16
aad
dec
stos
aaa
mulb
adc
inc
rolb
ds
or
xor
popa
ds
push
jb
test
sub
adc
inc
sub
push
aad
movsl
sbb
movsl
stos
stos
cli
pushf
xchg
nop
pop
je
push
push
xor
outsb
les
rcrb
pop
dec
orl
dec
das
xchg
add
mov
adc
mov
sub
das
scas
sti
repnz
mov
imul
cmp
cli
push
rcr
je
mov
fwait
push
nop
fimull
or
jnp
mov
repnz
add
hlt
out
test
lret
jg
dec
and
andb
and
xchg
daa
lret
mov
adc
cmpsl
jge
adc
sbb
icebp
pop
xor
jecxz
xchg
xchg
inc
clc
inc
push
mov
cmp
push
push
rorl
mov
sbb
sub
sarb
pop
xchg
or
repz
jbe
xor
pop
cmc
jae
mov
xor
push
mov
inc
dec
xchg
int
inc
jbe
mov
stos
in
ss
jmp
jge
jp
mov
test
xchg
insl
hlt
shll
and
out
orb
in
mov
add
jp
xchg
inc
or
adc
add
jmp
int3
insl
loope
mov
mov
out
mov
fbstp
jecxz
sbb
jmp
int3
test
cmc
sbb
add
lcall
mov
call
mov
out
rcrb
out
loop
xchg
dec
jae
inc
pusha
dec
cld
add
or
jbe
or
std
sub
stos
mov
bound
int3
and
cmpsl
in
mov
fmull
ja
mov
mov
ret
dec
imul
xchg
outsb
std
sar
popa
xchg
inc
nop
pusha
test
ds
movsl
pop
arpl
xlat
out
jle
adc
mov
hlt
dec
stc
and
jecxz
mov
test
xchg
addr16
scas
adc
push
and
pop
in
xchg
add
pop
dec
jle
js
inc
lods
sub
insl
incl
or
or
pop
adc
orb
sub
pop
jae
test
js
push
mov
cs
bound
lret
loope
stos
int
xor
cmpsl
push
fstl
outsl
xor
es
into
out
pop
sub
push
inc
pop
setne
xchg
xchg
sbb
mov
and
jae
xchg
sti
push
mov
mov
push
cltd
fidivl
js
jnp
cs
and
repz
daa
cmp
aaa
sub
sub
out
fwait
jp
test
imul
mov
xchg
fwait
int
mov
push
push
mov
push
dec
mov
inc
cmc
jnp
dec
std
icebp
aas
mov
mov
andl
test
dec
outsb
repz
xor
mov
jo
sub
popf
je
adcl
dec
adc
fs
leave
push
dec
inc
std
xor
into
popa
cmp
jbe
inc
mov
pushf
dec
inc
out
arpl
lea
jle
fiadds
mov
push
lahf
add
sahf
movsl
test
lea
add
fnstsw
jecxz
xchg
stos
add
cmpl
add
jnp
mov
xchg
sub
repz
int3
sub
xor
cmpl
or
sub
mov
cmpsb
xchg
and
shll
xor
sub
mov
jge
xor
jno
dec
cmp
cmp
push
xchg
popf
lods
dec
test
imul
fcoms
ret
jmp
testb
mov
xchg
fcoms
addr16
pop
shr
out
movl
xlat
or
imul
aas
sub
xor
fnstcw
js
push
arpl
pop
outsb
ljmp
fisubs
lahf
pop
iret
jp
mov
dec
les
mov
push
adc
cltd
xor
add
mov
pushl
sub
out
jecxz
sbb
jns
mov
dec
inc
ss
mov
nop
outsl
call
mov
cmp
add
xor
ljmp
enter
orl
mov
std
scas
cld
fbld
ret
pop
mov
mov
or
int
nop
out
dec
cmc
mov
fistpl
fldl
or
lock
cmp
mov
ds
pop
daa
mov
les
jmp
test
or
and
jp
jmp
aam
xadd
test
popa
repz
js
pop
add
stos
fisttpll
rcrl
cld
les
xor
shrb
mov
mov
insb
std
pop
jge
and
lret
lods
jg
mov
and
sub
lret
or
or
adcl
ljmp
leave
pop
pop
outsl
aaa
imul
xchg
lret
test
sbb
cmp
inc
jmp
push
test
cld
or
insl
shlb
shlb
mov
adc
std
pop
out
push
stos
aad
jns
jl
inc
cltd
int
sbb
cmp
leave
enter
icebp
cmp
inc
arpl
add
frstor
sub
js
pop
pop
andb
or
xchg
and
dec
mov
dec
jae
xchg
dec
fs
iret
pop
push
das
dec
pop
jbe
push
sbbl
stos
mov
push
es
cs
mov
pop
mov
mov
outsb
ret
inc
xor
add
lcall
adc
stos
sti
xchg
arpl
mov
scas
xchg
in
or
and
js
out
bswap
mov
shll
in
push
loope
adc
jge
icebp
lcall
pop
pop
mov
adc
lods
pop
out
adc
lret
mov
push
add
xchg
js
notl
cmp
insb
push
bound
cmc
loop
mov
xchg
xchg
ret
adc
ds
ret
inc
xor
mov
pop
lahf
ret
in
push
inc
inc
push
ss
mov
call
enter
repnz
mov
inc
sub
movsl
lret
imul
test
testb
sub
shlb
aad
push
xchg
add
in
cmp
mov
inc
sub
jecxz
scas
out
inc
sbb
fnstcw
push
sub
sub
outsb
inc
outsl
lds
fwait
sub
mov
test
sub
aad
call
xor
adc
lods
inc
push
jbe
or
pop
adc
scas
dec
outsb
xor
je
add
jmp
xor
sub
scas
xchg
ss
out
in
cltd
mov
mov
push
fcmovu
aad
movsl
imul
xchg
xchg
lods
push
sub
outsb
ret
js
mov
fnstsw
push
push
dec
push
jmp
dec
inc
aas
push
cmpsl
push
sbb
mov
push
addr16
and
pushf
pop
mov
loop
or
popf
cli
into
add
jo
adc
test
ss
das
aad
das
pop
clc
pop
push
mov
push
aam
stos
mov
enter
cmp
pop
imul
adc
push
cmpsb
sbb
nop
mov
ljmp
cmp
cwtl
pop
in
push
mov
ffreep
jle
jp
clc
mov
mov
popa
jo
pop
and
mov
and
mov
mov
in
aaa
ret
cld
aaa
imul
push
jnp
or
fcmovnb
dec
sbb
mov
xchg
enter
popa
ss
push
jb
fisubrs
pop
inc
jg
fmull
mov
cltd
andb
sub
cld
jg
fcmovnbe
add
lahf
push
jb
or
cmpsb
mov
leave
or
scas
ret
inc
shrl
sbb
scas
ja
adc
cmp
inc
jle
jp
lret
mov
xorb
xor
cwtl
call
add
jecxz
mov
nop
lods
push
fiaddl
inc
mov
in
outsb
dec
fimull
test
mov
sub
mov
shrb
mov
xor
outsl
mov
xor
sub
ror
xor
test
dec
enter
loopne
es
fucomi
int
pop
mov
push
out
fidivrl
jle
dec
mov
negb
stos
mov
mov
and
ja
sarl
and
cmpsb
xchg
mov
mov
in
out
movsl
or
or
int
fistpl
test
dec
lods
rcrl
add
and
mov
cmp
mov
jl
sar
lahf
jecxz
pop
adc
mov
ds
push
sbb
cwtl
lea
cld
mov
pop
test
out
sub
in
loop
sahf
xchg
jbe
sti
nop
cmc
pop
in
mov
push
mov
adc
mov
mov
adc
dec
mov
insl
cld
adc
faddp
pop
add
es
mov
push
dec
push
call
xchg
in
push
into
cmpb
xchg
aaa
inc
mov
outsl
or
inc
jo
push
add
xor
xor
jle
insb
gs
pop
scas
add
lcall
mov
jg
fcmovnb
or
roll
pop
mov
sbb
out
xchg
addr16
loopne
pop
xor
or
ret
adc
xor
rol
in
mov
lods
imul
test
add
out
mov
mov
test
loope
outsb
out
mov
sarl
cld
jns
and
jp
lock
adc
sbb
xchg
mov
loop
and
mov
jae
sbb
push
mov
icebp
mov
xchg
bound
imul
sub
dec
xchg
jge
xor
fildl
out
arpl
in
cmpsl
fbstp
add
stos
mov
stos
cmp
sbb
shll
pop
cmp
gs
and
sbb
fiaddl
int3
lcall
adc
das
cmp
add
jecxz
pop
adc
enter
popf
addr16
sarb
xor
xlat
pop
xchg
addr16
mov
or
lret
push
imul
dec
sar
xchg
jne
xchg
inc
sbb
fs
cwtl
dec
mov
lahf
imul
rorl
sub
jno
or
addr16
jo
call
in
cltd
xchg
mov
mov
out
sub
scas
or
mov
test
mov
cmpsb
sub
cmpsl
sbb
jg
ja
add
dec
lcall
repnz
dec
xchg
cmp
dec
cmp
fidivrl
bound
add
je
add
ja
jo
sub
mov
mov
mov
and
cmp
rcll
sbb
cli
and
pushf
testl
push
lret
inc
mov
inc
icebp
cltd
out
fcoml
into
lds
in
push
js
jmp
mov
ret
jo
test
pop
mov
dec
sub
jb
orl
sahf
or
nop
addr16
mov
movsl
pop
lahf
insl
push
pop
jge
pop
mov
xchg
std
repz
adc
popa
sub
sbb
add
fwait
mull
fbld
enter
lea
idivl
sbb
pop
jmp
or
jge
je
dec
mov
out
jb
outsb
adc
jbe
aad
int
mov
cmpsb
or
je
cmp
sti
movsl
adc
adc
xchg
cmp
xchg
xor
mov
outsb
clc
mov
push
test
popa
popf
imul
adc
rcrb
pop
jbe
fisttpl
inc
testl
inc
pop
aam
mov
mov
pusha
inc
in
shlb
iret
push
push
jl
sub
sub
mov
push
push
pushl
lret
jo
sub
mov
gs
sub
hlt
mov
ss
dec
cmp
and
dec
jmp
sub
lcall
xor
test
popa
sub
push
pop
jne
dec
aad
aad
dec
ffree
cmc
mov
adc
faddl
mov
loop
sub
lret
push
cmp
jecxz
lret
hlt
pop
out
push
xchg
outsb
jg
mov
jo
outsl
push
sarb
arpl
cmp
int3
lcall
daa
sbb
adc
dec
lea
je
sbb
aam
loop
clc
fimull
pop
std
icebp
cmp
inc
mov
pusha
sbb
cmpsb
mov
sbb
pop
loopne
pushw
jbe
mov
scas
inc
jno
sbb
and
orl
subb
push
sub
inc
and
test
xlat
mov
push
lret
push
cmp
sahf
lock
cmp
insb
cmpsl
testl
cmovno
gs
aaa
out
ret
shll
rolb
adc
pop
insb
rcrb
adc
idivl
icebp
mov
jecxz
jp
aaa
sbb
mov
out
fisubrl
cmp
loopne
and
les
adcb
insl
sub
sti
mov
pop
xchg
jmp
popf
and
cmpl
mov
out
add
int3
sarb
push
or
mov
ret
flds
das
push
add
push
sub
leave
push
cmp
dec
movsl
ljmp
push
in
cmc
mov
dec
fisubrl
movsb
jnp
loopne
dec
lods
sbb
lods
cmpsl
mov
sub
and
sub
daa
ret
jb
mov
xor
jnp
mov
ja
sub
mov
out
decb
outsl
daa
mov
icebp
push
mov
add
push
or
aas
or
cmp
icebp
jecxz
push
icebp
sbb
push
bswap
add
ja
das
fucomip
stos
ds
dec
inc
jmp
popa
mov
xchg
mov
sub
mov
and
or
test
arpl
daa
ss
fdivl
popf
adc
sbb
pushf
imul
cs
leave
or
mov
cmp
ficoml
sub
dec
das
lret
inc
sub
adc
push
mov
sbb
sub
scas
pusha
push
das
out
adc
jl
push
xor
pop
cmpsl
sub
push
cli
fnstsw
sbb
clc
jecxz
lret
loopne
divl
in
stc
mov
mov
xor
ja
sar
cld
loopne
int3
dec
xchg
aaa
jbe
cmpsb
ret
test
ljmp
jmp
fiadds
xor
jle
bound
jmp
loop
jae
mov
mov
sbb
mov
add
in
sub
and
sbb
jp
and
add
cli
jecxz
lret
dec
or
les
lock
lea
xchg
test
scas
jbe
and
mov
aad
in
xor
adc
inc
test
inc
pop
repnz
ja
push
out
dec
dec
fcomi
cmpsb
aaa
insl
into
icebp
adc
add
xchg
lods
std
stos
push
sarw
gs
mov
jnp
repnz
xor
clc
mov
imul
jge
outsb
add
mov
lea
ror
cmp
jl
stos
dec
mov
and
cli
ror
or
jno
hlt
fwait
mull
dec
cmp
sbb
push
sub
mov
xlat
movsl
imul
dec
or
sahf
add
popf
out
adc
or
fucomi
inc
push
mov
mov
fdivrl
daa
aam
pop
mov
insl
mov
xor
xorb
fucomi
sub
enter
pop
xchg
cmp
add
mov
xchg
cltd
test
cmp
and
pop
addr16
punpcklwd
nop
test
and
xlat
jl
adc
sbb
lea
inc
inc
subb
dec
mov
xor
mov
pop
dec
push
cwtl
jg
push
xchg
fnstsw
mov
aam
push
sub
mov
mov
add
arpl
je
cmp
dec
sub
sahf
mov
sbb
inc
and
loop
xor
push
dec
sbb
ss
and
jnp
fxch
mov
sub
jns
roll
je
cmp
loope
mov
ds
push
mov
and
popf
push
data16
test
decl
mov
sbb
imul
bound
push
xchg
sbb
add
and
xchg
sarb
mov
mov
jle
lahf
xchg
mulb
mov
mov
lock
add
xchg
dec
sbb
mov
or
mov
out
lea
jo
loope
and
xor
les
jmp
dec
xchg
jle
mov
push
mov
and
mov
movsl
sub
xor
gs
sub
hlt
xchg
loopne
testl
jmp
scas
faddl
cs
jmp
mov
pop
mov
xchg
aam
xorl
jnp
test
xor
lret
xchg
aad
ret
insb
and
pop
mov
adc
xchg
sub
bound
cmp
fsubr
pandn
sub
cmp
repnz
inc
or
mov
pop
movsl
mov
fsubs
mov
cld
ror
pop
scas
insl
pop
sbb
dec
sbb
lret
mov
in
repz
inc
fmulp
enter
dec
popa
divl
lds
out
cmp
xlat
pop
sub
pop
cmp
xchg
push
das
mov
dec
or
sub
js
or
dec
jnp
iret
into
test
out
ljmp
pop
shrb
pop
adc
jp
cld
pushf
jo
adc
sub
lahf
mov
add
ret
cwtl
jb
out
ss
inc
jns
xchg
push
jae
jmp
add
sbb
dec
or
sub
mov
jo
xor
fdivrl
pop
inc
mov
scas
imul
fadd
in
and
adc
mov
movsb
sahf
in
mov
pop
cmp
dec
dec
jmp
dec
sub
cmp
cmp
jns
stc
popa
push
pop
jns
pop
or
fs
fdivs
movsl
sbb
in
xor
add
push
lock
mov
leave
jg
popa
mov
jnp
in
sbb
fs
sbb
int
movsb
ljmp
sbb
add
mov
and
emms
sub
mov
xor
insl
orb
addr16
stos
add
clc
push
xchg
sub
xorb
inc
scas
fldl
sub
push
shl
cmp
xor
lret
adc
sbb
mov
sbb
mov
pushf
clc
add
and
xor
and
mov
and
xchg
clc
rorb
outsl
mov
mov
and
pop
add
dec
sub
mov
xchg
fsub
mov
fwait
bound
out
in
push
sub
lods
sbb
or
sbb
orl
xchg
jmp
fsubrs
and
popa
push
cld
fstpl
and
mov
stc
and
xlat
rorl
and
jp
xchg
mov
jbe
insl
scas
cmp
xlat
mov
cmp
out
mov
cmova
sub
les
and
fdiv
test
mov
add
mov
ret
aad
popa
clc
pop
push
cs
mov
xchg
enter
fs
test
jp
cmp
dec
xor
push
jns
comiss
pop
aaa
jp
cmp
inc
add
jecxz
loop
fdivrs
test
sbb
pop
jns
lahf
mov
push
xor
mov
mov
jp
ja
mov
sub
xchg
pop
inc
inc
sti
jecxz
clc
dec
loop
or
test
pop
push
cmpsb
push
cmp
push
out
push
mov
mov
xor
ds
lret
in
push
icebp
mov
mov
lock
iret
addb
sub
js
sub
gs
daa
std
jo
mov
mov
lcall
repnz
push
inc
sarl
hlt
in
pop
mov
adc
fucomip
cmp
icebp
mov
and
inc
test
xor
mov
mov
and
int3
das
sbb
hlt
out
das
fsts
xor
mov
jl
lea
or
testl
push
fsubrl
or
fs
inc
mov
jne
aaa
sub
jg
pop
mov
std
mov
or
fs
test
jl
jb
aaa
rorb
dec
iret
movsb
cmc
or
mov
pop
cmp
fdivrs
cwtl
bound
int3
imul
push
or
js
fwait
clc
lahf
in
add
mov
mov
sbb
ds
imul
sti
sbb
aaa
aas
sbb
aad
adc
lods
cld
lock
xor
in
push
and
cmp
xchg
in
adc
sbb
xchg
mov
fs
ret
aad
jbe
imul
loop
jecxz
in
movsb
sub
jae
pop
mov
mov
int3
jl
and
lds
pop
add
jne
lock
popf
fldenv
adc
jge
lret
cmpsb
sbb
jo
and
popa
les
sub
addr16
sar
incl
pop
xor
jne
add
fs
sbb
icebp
xchg
sbb
xchg
push
cwtl
or
insb
sbb
cwtl
xchg
mov
push
inc
and
xlat
lock
clc
bound
jecxz
mov
in
bound
mov
add
push
mov
cmp
adc
mov
push
jmp
lock
jmp
cli
inc
sub
push
mov
mov
pop
xor
cmc
xchg
push
or
jl
push
mov
int
push
scas
and
cmpsl
stos
jg
xchg
xor
imul
mov
jge
out
sbb
icebp
jge
jbe
cmp
pop
push
mov
roll
loope
popf
fbld
sub
or
push
aad
sbb
mov
sub
xor
scas
daa
icebp
mov
das
lods
mov
popa
rorl
pop
outsb
popa
and
in
mov
mov
or
les
iret
adcl
jns
mov
test
sub
fiaddl
out
pop
push
test
pop
mov
rclb
jp
iret
and
setae
negl
xor
out
sbb
loopew
push
fcoms
jmp
add
mov
adc
fstpl
shrb
into
sbb
push
push
pop
mov
addb
aad
jae
push
icebp
rcll
lahf
movsl
mov
out
dec
adcl
dec
cmc
lds
ss
cmp
leave
test
stos
pop
pop
jle
cmpsl
or
cmp
or
pop
mov
cmp
xchg
sbb
add
xchg
fucomip
inc
cmp
sbb
jge
sti
jecxz
in
leave
rorb
stc
cmp
mov
or
push
cmpsb
stc
mov
and
cmp
jge,pt
and
fstps
pop
loop
xchg
jle
add
lahf
jmp
jp
mov
ds
into
daa
sbb
inc
xchg
int3
add
repz
mov
and
push
test
das
jbe
mov
lods
sbb
cmc
and
je
jo
stos
lahf
movsb
icebp
or
and
sbb
push
insb
cltd
stc
sbb
push
or
mov
outsl
stos
dec
mov
push
push
popf
pop
push
inc
jmp
es
push
xchg
push
gs
lods
sbb
rcrl
jg
in
xchg
sub
data16
int3
or
imul
jmp
cmp
mov
add
movsl
fdivrs
adc
sbb
test
lret
push
imul
jmp
adc
leave
add
roll
or
leave
mov
pop
out
call
xor
or
xchg
leave
dec
test
sbb
jns
js
loopne
lea
stc
nop
jp
xchg
push
insb
aad
cmp
jne
cld
pop
dec
fwait
sbbb
stos
fbld
popa
pop
aad
mov
sub
mulb
mov
mov
shr
test
or
pop
into
call
es
sbb
outsb
movsl
adc
pop
xor
add
lock
jae
push
mov
or
inc
inc
enter
pop
test
jbe
jno
int
repz
or
pop
add
push
and
call
add
sub
insb
imul
aaa
movsb
push
out
add
repz
push
pop
scas
sahf
test
xor
or
test
xor
pop
jg
arpl
ret
pushf
xchg
mov
xchg
mov
mov
and
push
or
mov
cmp
xchg
stc
leave
inc
mov
fs
and
xchg
dec
and
test
mov
push
jle
ret
orb
roll
or
inc
ret
andb
xchg
jae
jle
fcompl
sbb
inc
je
mulb
adc
rorl
test
mov
and
mov
ficoms
sub
das
xor
mov
movsl
push
sbb
mov
std
pop
jb
nop
lds
and
pusha
pop
notl
lcall
pop
adc
or
loop
pop
xlat
loop
nop
enter
or
ja
push
xchg
xor
jg
xchg
mov
jo
aas
jbe
push
mov
xchg
xchg
aas
je
scas
push
push
shll
inc
push
add
lret
pandn
pop
xor
ss
pop
aad
repz
aam
pushf
loop
adc
push
cwtl
fimuls
sti
sbb
pop
out
bound
xchg
and
inc
cmc
inc
shr
adc
lods
fdivrl
adc
push
dec
jmp
inc
and
pop
or
and
test
test
movsl
inc
pop
iret
inc
adc
popa
das
mov
repz
loope
or
cmp
add
mov
je
pop
push
lret
sub
loopne
cs
mov
outsb
mov
and
insl
push
fwait
hlt
mov
enter
xchg
sbb
push
cmpsb
in
aaa
out
gs
sub
mov
fstps
mov
mov
lret
sbb
and
cltd
rol
mov
iret
mov
lea
xchg
cwtl
inc
xor
sahf
mov
popf
sbb
mov
test
xor
notb
mov
xchg
push
jge
or
sub
xchg
add
imull
lds
dec
in
outsl
mov
outsb
xchg
or
mov
adc
es
fldenv
jb
pop
add
dec
mov
add
pop
iret
rep
leave
out
xchg
xor
lea
mov
adc
pop
movsb
jno
push
pop
xchg
mov
rclb
inc
xor
jns
mov
push
mov
mov
fwait
jp
shlb
sbb
push
sub
in
push
cmp
out
mov
sbb
pop
lods
sbb
adc
daa
mov
add
and
or
iret
out
into
lods
fcmovb
leave
inc
clc
dec
insb
and
xchg
popf
pop
aam
mov
or
scas
mov
rolb
add
mov
jecxz
lahf
ljmp
mov
mov
xor
pop
ror
scas
sbb
pop
sub
pop
mov
sbb
test
sti
sbb
adc
pop
pop
notb
les
pusha
lods
enter
pop
cltd
es
shrb
cwtl
shl
lea
mov
mov
mov
pop
dec
lret
jne
jb
ret
pop
jle
jno
jae
xchg
mov
shlb
mov
fiaddl
mov
imul
ffreep
jne
mov
push
orl
test
in
sbb
cmp
xchg
push
cmc
xchg
inc
jmp
icebp
daa
sub
pop
xchg
fs
add
mov
pop
push
adc
inc
inc
pop
push
mov
jno
ret
ds
out
xchg
jae
popa
xchg
std
hlt
fcomp
sub
add
enter
add
or
mov
dec
pop
mov
ss
aad
ljmp
push
push
in
and
out
xchg
sbb
xchg
lahf
dec
aas
ljmp
mov
jmp
mov
xor
or
cmpsb
popf
sbb
xchg
addb
adc
xchg
mov
lea
jle
xor
scas
push
pop
mov
rolb
cmp
jge
push
mov
pusha
call
insl
push
ds
jae
jmp
mov
cmc
xor
fsubs
push
popf
scas
xor
stos
push
and
cli
roll
inc
mov
xchg
adc
push
mov
dec
lcall
test
imul
mov
js
ret
xchg
lea
hlt
cs
xlat
cwtl
dec
ljmp
rolb
loopne
and
js
icebp
out
dec
stos
xchg
outsl
push
movzbl
int
jge
sbb
rcrl
adc
or
dec
sub
dec
testl
or
rolb
mov
and
sbb
cmp
mov
mov
aas
add
sub
cmpb
int3
dec
cmp
inc
mov
aam
sub
and
lahf
cmc
push
jmp
pop
insb
mov
ja
mov
or
or
sbb
and
and
lea
sub
mov
mov
dec
mov
mov
flds
shll
xor
mov
pop
repnz
leave
fucom
clc
sub
dec
fcmovne
xchg
xchg
std
mov
inc
std
orl
xchg
pop
clc
sbb
jge
push
lcall
cld
adc
push
lock
subb
sarb
mov
sub
ret
shll
mov
push
imul
sbb
in
aad
rcll
lods
insl
lods
mov
movsl
in
subl
outsl
adc
pop
inc
push
push
xchg
pop
inc
cmc
in
mov
or
cmp
bound
hlt
mov
rclb
mov
bound
aas
pop
pusha
sbb
jbe
jg
addr16
rcrl
or
adc
lret
or
sub
adcb
fadd
test
xchg
or
xchg
outsb
ficomps
sub
sbb
adcl
jg
xchg
mov
inc
adc
pop
repz
fadd
mov
push
data16
scas
rcl
or
cmpsb
outsl
icebp
mov
into
add
adc
mov
int
int3
flds
sub
mov
pusha
dec
fcmovu
insl
adc
sbb
adc
stos
je
cli
fldenv
pop
pop
cld
mov
cmp
cmp
mov
jmp
cmpsl
fldt
pop
lea
xor
fisttpl
mov
loope
pop
loope
jg
pop
int
outsb
mov
pop
cli
shr
sub
cmpsb
into
sarb
inc
mov
imull
add
dec
jecxz
sub
sub
jbe
xchg
es
dec
pop
xor
mov
push
add
xor
dec
filds
cmp
push
cli
xchg
mov
or
xchg
aad
pop
and
pop
std
and
jl
dec
xchg
clc
movsb
xchg
sbb
cli
push
sbb
or
out
or
subps
lods
fimull
jne
leave
adc
and
fadd
jecxz
cmc
or
mov
inc
jne
daa
aam
and
pop
pop
inc
in
sarb
dec
inc
ret
call
addr16
xor
sti
add
cmp
adcb
cmp
push
sahf
je
outsb
arpl
cmp
popa
jmp
mov
or
lds
repnz
jle
pop
aad
loopne
aam
aad
jo
jb
arpl
aas
or
call
in
sub
pusha
xchg
cli
pushf
sbb
mov
inc
add
lret
add
icebp
mov
lea
jl
cmpsl
inc
cmp
into
sub
iret
jmp
mov
xchg
push
aam
push
mov
iret
push
jno
icebp
pop
push
push
aad
xchg
stc
aaa
mov
daa
pop
repnz
int
nop
pop
std
jl
pop
push
loopne
sub
rclb
inc
add
int
inc
outsl
jge
repz
cwtl
add
movsb
dec
in
stos
or
int
sbbb
add
xchg
outsl
and
into
xorb
insl
jmp
xchg
jmp
rorb
ficomps
fstl
dec
out
repz
xlat
jp
mov
pushf
js
shlb
dec
in
inc
scas
cmpsb
mov
ficomps
idivl
jmp
loopne
ljmp
jns
inc
out
inc
or
rcrb
jae
mov
insl
neg
outsb
cmp
lret
test
push
data16
xor
outsb
fs
dec
or
movsl
scas
cmp
data16
out
test
shrb
xor
rorl
and
add
popf
test
clc
loopne
add
int3
in
sahf
cwtl
push
ret
lcall
push
inc
mov
pop
mov
jg
push
add
inc
pop
je
lret
mov
scas
adc
and
mov
iret
adc
int
xor
mov
in
dec
in
xchg
pop
pop
out
jo
test
seta
xlat
je
clc
jecxz
cwtl
lds
xor
mov
pop
xchg
push
lret
jl
filds
leave
stc
push
lret
cli
ljmp
cmp
xor
add
test
adc
out
add
out
xchg
outsl
popf
cmpsl
mov
shrl
or
mov
adc
or
aad
aaa
pop
fildl
shr
or
inc
in
push
xor
bnd
cmp
cmc
lock
roll
xchg
sub
out
testw
dec
xor
out
or
ret
addr16
pop
je
inc
enter
push
stos
sbb
push
aaa
jp
fimuls
xor
imull
lret
cmp
add
fs
jecxz
push
nop
cmpsl
fistpll
lods
in
inc
std
dec
push
out
pop
shl
dec
push
or
jbe
xorb
dec
mov
daa
add
outsl
nopl
sbb
shlb
inc
xor
push
push
enter
jno
and
jb
das
mov
sti
cmp
test
loope
push
scas
pushf
add
call
add
sbb
fsubrl
dec
push
movsl
pop
sub
add
std
sbb
sub
cmc
pop
out
hlt
pop
add
out
nop
push
repz
adcl
ret
mov
inc
mov
loope
insl
pop
ror
je
fs
xchg
daa
sub
sub
push
addr16
mov
enter
and
and
dec
xchg
pop
les
push
sahf
iret
mov
repz
adc
pop
into
into
es
les
test
mov
divl
xchg
mov
push
push
lds
add
pop
popa
xor
xor
repz
pop
pop
test
xchg
xchg
xlat
or
mov
mov
pop
dec
mov
pop
sub
std
dec
jae
push
sub
lds
lea
cmp
xchg
andb
pop
mov
xchg
dec
xor
xor
push
adc
or
out
adc
mov
mov
cld
cmp
fisttps
push
xchg
pop
das
lret
lock
sub
sub
fcmovb
push
dec
pop
icebp
xor
cmc
adc
popf
mov
sub
push
dec
stos
push
fistps
movsl
and
data16
or
or
mov
mov
jno
xor
fists
rorl
aad
ror
xchg
fwait
sbb
aaa
mov
vmwrite
sbb
mov
pop
out
cmp
adc
fcoms
cmc
aam
ss
movsl
cmp
sbb
iret
pusha
cmp
and
cmpsl
rolb
push
lea
sub
mov
mov
pusha
mov
inc
push
mov
dec
out
outsl
or
push
jle
fnstcw
out
outsl
fildl
rorl
cmp
cmp
sub
jo
testl
scas
pop
sub
push
xchg
in
enter
cmp
push
jg
inc
jp
and
daa
mov
in
jae
cmpsb
aam
pop
adc
xchg
call
sub
int
std
mov
scas
mov
scas
dec
movsb
xchg
mov
enter
sbb
inc
and
dec
movsb
dec
sbb
in
mov
cmp
add
addr16
push
popf
das
lcall
fcmovnb
adc
sub
inc
add
xor
fnstenv
es
pop
sub
leave
sub
or
gs
or
mov
bound
cli
in
xor
sti
std
in
arpl
inc
lods
and
imul
mov
or
imul
lahf
inc
pop
nopl
dec
clc
add
stos
fcompl
repz
push
std
mov
push
dec
repnz
arpl
push
stos
in
icebp
movsl
xchg
mov
sbb
sub
data16
add
jns
sarl
adc
pushf
test
cmp
outsl
orb
mov
in
mov
ret
imul
push
sub
fdiv
sti
lock
scas
test
ljmp
dec
nop
sbb
push
idivl
jbe
mov
xchg
aas
mov
jle
popw
mov
inc
mov
inc
mov
lods
inc
push
sti
jle
xor
add
and
pop
mov
mov
scas
dec
fsqrt
bound
rorl
jmp
mov
push
jnp
jecxz
aam
xor
xchg
jge
mov
std
fs
pushf
repnz
sbb
jno
jg
les
in
int3
out
call
lods
sub
mov
cmp
push
add
adc
sbb
push
push
call
push
shll
mov
out
dec
xchg
sbb
test
ret
xor
cmp
outsl
or
and
mov
and
outsb
cmpsb
test
and
int3
xor
ljmp
mov
cmp
pusha
jns
mov
stc
xchg
mov
repz
addr16
inc
sub
popa
pop
outsl
jl
sub
lea
cli
mov
test
lret
popa
daa
cmc
or
push
lret
adcl
mul
add
add
mov
cmp
xchg
hlt
xorb
rcr
hlt
sbb
les
pop
jb
pop
out
mov
jns
pop
mov
pushf
xchg
mov
cmp
call
outsl
xchg
cmp
int3
push
or
repnz
mov
jnp
je
ja
aad
push
dec
dec
loopne
inc
insw
jecxz
filds
cmp
jecxz
cli
sahf
lret
cli
movsb
xor
ja
test
mov
xchg
popa
lea
out
jmp
adc
cmpsb
pop
imul
mov
mov
iret
lahf
or
in
xor
mov
mov
add
rclb
cmc
or
sbb
sub
cmpsb
js
add
imul
mov
scas
shrb
sbb
cltd
mov
xchg
mov
or
dec
cmp
nop
js
push
into
icebp
int3
add
aad
fbld
test
inc
mov
hlt
and
xchg
push
and
mov
leave
sarb
inc
repz
test
jmp
add
sub
testb
add
or
mov
or
add
jecxz
outsb
mov
push
pop
imulb
add
or
adc
fimull
ja
ds
fcomp
ret
inc
imul
inc
into
push
leave
aam
and
adc
dec
inc
pop
jle
mov
cld
jae
std
xchg
imul
lahf
pop
push
call
pusha
in
push
mov
insl
arpl
sahf
inc
cmp
fmuls
pop
in
jo
notb
aam
push
call
test
push
addb
int3
xchg
and
std
stc
mov
jmp
jge
xchg
pop
adc
imul
roll
movsb
stos
or
lods
or
dec
jns
ja
mov
bound
or
ret
rcr
adc
pushf
loop
hlt
or
popa
ss
jns
jp
cmp
add
ja
inc
mov
cs
pop
sbb
or
jno
add
xor
pop
daa
or
pop
fisubrl
call
push
dec
ja
insb
icebp
pop
clc
in
sbb
lret
jmp
les
cmpsl
add
dec
insb
aas
movsl
jg
les
xchg
shll
adc
sub
cs
mov
pushf
push
adc
mov
fwait
mov
fmull
cli
std
icebp
mov
test
add
jo
mov
or
aaa
xchg
sahf
jb
push
pop
insl
shrl
mov
lcall
jp
aam
jge
ss
dec
sub
xor
shll
sbb
mov
push
lods
add
enter
xlat
and
sub
cmp
fwait
sbb
xchg
xchg
cmp
mov
push
orb
pop
mov
insl
cmpsb
sub
test
adc
dec
gs
xor
stc
sub
adc
add
roll
loope
loope
das
push
subb
pop
arpl
xor
mov
pop
call
aas
dec
fists
bound
addb
sub
insl
stos
jecxz
loopne
push
jg
rcll
psrad
stos
stc
or
xor
cmp
jae
jo
mov
loope
loope
dec
repnz
and
push
jae
cmc
loop
stos
xchg
lods
cwtl
xchg
jl
xchg
add
bound
inc
pop
lea
mov
cmp
mov
or
mov
fcmovnbe
push
das
subb
out
mov
mov
fmull
add
or
sbb
jae
aam
sahf
fwait
push
xchg
rcll
into
sarl
sub
sbb
mov
dec
popa
mov
cmp
inc
cs
pusha
aad
pop
rorl
dec
je
rorl
ds
adc
push
xchg
or
ror
cmp
add
and
sub
mov
pop
mov
sbb
lds
out
iret
mov
imul
outsb
cmp
cmp
xorl
jl
filds
cmpsl
sub
mov
xor
lock
cmp
les
dec
xor
lahf
in
mov
push
stos
xchg
push
popf
push
leave
dec
mov
hlt
orl
mov
add
or
ss
push
sub
ret
icebp
xchg
sbb
lds
push
push
mov
pop
or
imul
push
mov
or
xor
add
shrl
lret
ret
insb
mov
jno
and
jne
cwtl
mov
add
jnp
lahf
data16
idivl
jne
imul
fistpll
sarl
and
ret
or
dec
imul
stos
call
inc
cmp
sbbl
fptan
dec
int3
lcall
mov
lock
push
jmp
cmp
inc
fnstsw
call
and
mov
add
nop
out
les
and
jmp
sbb
inc
arpl
daa
jle
xchg
pop
dec
or
and
test
inc
pop
dec
repnz
xchg
mov
cs
lock
xor
fmull
fnsave
add
cmc
pop
xor
or
es
cli
pop
cmp
test
xor
cmp
ljmp
icebp
popf
std
fisttpl
mov
cmpsl
inc
push
movsb
sahf
sbb
and
mov
inc
lret
jle
adc
push
push
push
mov
scas
js
imul
fwait
aad
es
iret
sahf
repnz
pop
cmp
cmpsb
in
popa
push
xchg
jb
fcoms
jle
in
cmpsl
imul
dec
mov
loope
mov
mov
mov
or
xorl
inc
dec
inc
stos
or
add
fs
push
cmc
mov
xchg
push
pop
pushf
cmp
ljmp
xchg
xchg
xchg
sbb
push
or
pop
cmovs
pop
push
add
dec
jo
or
jbe
jnp
sub
or
sbb
cmc
push
sub
sbb
stos
push
pushw
imul
mov
mov
movd
enter
and
cmpsl
sbb
out
sbb
pop
ret
insl
xchg
and
mov
push
lret
inc
xor
fnsave
js
pop
sbb
pusha
gs
dec
aaa
arpl
mov
xor
movsl
hlt
push
pop
das
popa
xor
mov
lret
lcall
xor
push
sub
pushf
sub
cmp
int
inc
and
cld
mov
inc
stos
cmc
loop
addr16
xchg
js
jg
sbb
xor
outsl
mov
lcall
push
lods
es
mov
or
mov
cmp
cmp
stos
ljmp
lods
fidivl
shlb
cmp
pop
ret
test
sub
repnz
push
and
inc
lods
fwait
ds
xchg
cld
in
inc
pop
mov
inc
mov
sar
or
sbb
test
or
or
push
mov
pushf
and
mov
out
mov
adc
fidivs
adc
xorb
mov
into
shrb
dec
push
mov
lods
jo
cmpsl
xor
stc
js
sbb
shll
xchg
dec
sbbb
jl
ja
sbb
jle
pop
enter
loop
dec
mov
mov
adc
xchg
mov
nop
inc
dec
dec
push
lods
aam
adc
insl
jge
jae
push
xchg
mov
sbb
push
xchg
or
div
pop
inc
subl
outsb
pop
jae
sub
xchg
dec
dec
out
hlt
xor
ret
shl
jp
mov
insb
push
or
jae
push
lcall
push
xor
pushf
int3
shl
test
mov
pop
rorb
ja
out
sti
fs
fstpt
mov
pop
xchg
ret
inc
dec
adc
test
mov
fisttpl
lcall
mov
psllw
out
push
inc
push
push
js
loopne
and
rcr
fists
dec
fwait
hlt
pop
das
loop
outsb
aas
cmp
aam
push
pop
pop
cld
fcmovnu
push
enter
je
mov
dec
xchg
or
loop
dec
cld
movsb
cwtl
cltd
dec
into
xor
aam
enter
js
cmp
test
mov
mov
mov
cmp
loope
xchg
sbb
pop
orl
lock
cmp
div
jno
iret
or
mov
mov
addr16
sbb
shll
fucom
shlb
or
test
push
mov
adc
cli
sub
sub
push
xor
enter
jg
ljmp
arpl
cmp
push
cmp
scas
divb
cli
lds
xlat
jo
mov
mov
ret
test
dec
cs
sub
push
inc
sub
gs
int
xor
push
loop
pusha
and
dec
push
cmp
mov
push
cmp
pop
mov
int3
inc
movsb
mov
pop
fstps
cmc
add
sub
inc
inc
lea
mov
dec
lea
add
inc
xor
inc
cmp
jb
xor
mov
mov
mov
inc
imul
mov
inc
dec
inc
dec
inc
inc
inc
add
add
mov
add
cmp
jb
dec
xor
dec
inc
inc
sub
mov
inc
mov
dec
movzwl
dec
sub
xor
imul
mov
xor
lea
pop
mov
mov
test
jbe
dec
add
dec
movzbl
add
add
dec
dec
sub
imul
add
dec
dec
or
mov
mov
inc
sub
lea
inc
imul
dec
and
or
imul
mov
mov
add
movzbl
xor
add
mov
imul
and
dec
movzbl
mov
mov
lea
mov
mov
mov
mov
add
inc
mov
add
inc
inc
lea
dec
imul
dec
jne
add
mov
sub
mov
mov
imul
inc
dec
inc
mov
imul
inc
mov
mov
inc
lea
sub
mov
mov
dec
inc
mov
imul
mov
test
jbe
lea
mov
dec
inc
xor
mov
and
sub
mov
add
dec
movzwl
dec
mov
imul
inc
movswl
mov
add
add
add
dec
and
inc
mov
mov
imul
inc
movzbl
inc
imul
add
lea
inc
and
imul
jmp
mov
mov
mov
mov
movswl
inc
inc
movzwl
inc
lea
mov
mov
mov
add
mov
add
add
lea
movswl
lea
sub
inc
movzbl
sub
dec
pop
ret
push
or
mov
lea
lea
inc
mov
add
lea
sub
sub
inc
dec
sub
mov
imul
mov
dec
dec
inc
imul
and
and
mov
imul
inc
inc
dec
mov
mov
sub
push
add
inc
push
mov
or
sub
mov
lea
call
call
and
cmp
je
call
call
mov
mov
call
call
call
sub
mov
inc
add
mov
inc
lea
movzwl
sub
pop
dec
ret
push
movswl
mov
dec
add
push
sub
mov
add
mov
dec
push
lea
push
lea
push
add
xor
xor
dec
or
call
sub
dec
mov
push
dec
lea
xor
lea
mov
inc
mov
or
inc
mov
mov
mov
test
je
lea
dec
imul
xor
add
mov
inc
xor
or
mov
and
add
mov
mov
lea
add
jmp
inc
mov
imul
mov
movzbl
inc
mov
mov
dec
mov
mov
mov
dec
movzbl
dec
mov
add
dec
imul
and
inc
add
movzbl
inc
mov
xor
mov
movswl
inc
dec
dec
mov
movsbl
mov
mov
lea
and
lea
mov
dec
jne
mov
mov
add
sub
pop
mov
dec
pop
or
dec
pop
mov
movswl
mov
mov
or
inc
dec
imul
and
sub
sub
add
ret
push
lea
inc
mov
inc
or
or
mov
mov
push
push
push
push
imul
mov
dec
push
mov
mov
mov
lea
movsbl
inc
dec
dec
inc
mov
sub
push
movzbl
mov
xor
lea
mov
push
imul
mov
push
dec
mov
pushl
lea
call
inc
add
movzwl
lea
inc
inc
add
mov
lea
pop
ret
lea
repnz
lea
mov
add
sub
jmp
mov
mov
dec
dec
inc
sub
inc
lea
inc
dec
pop
pop
ret
push
add
add
and
add
inc
add
add
imul
inc
inc
mov
dec
mov
dec
lea
movzbl
sub
lea
lea
inc
dec
imul
lea
or
imul
pop
ret
sub
and
mov
inc
mov
mov
add
lea
mov
movsbl
imul
mov
lea
mov
xor
mov
lea
mov
lea
dec
inc
add
or
sub
sub
inc
or
cmp
jb
mov
push
lea
mov
push
sub
imul
push
mov
mov
push
movzwl
lea
dec
dec
inc
and
mov
add
lea
inc
pop
add
movzwl
xor
movzbl
imul
xor
xor
inc
xor
sub
mov
push
add
movsbl
xor
dec
mov
add
mov
sub
or
movzbl
inc
and
movswl
movzbl
add
or
add
inc
lea
movzbl
add
inc
inc
inc
lea
jmp
or
adc
add
adc
add
jo
add
add
jmp
inc
add
test
add
adc
cmp
add
cmp
inc
add
iret
add
dec
popa
dec
add
add
add
les
lea
lea
push
mov
movsbl
mov
imul
mov
dec
mov
add
and
mov
add
mov
mov
mov
call
add
inc
sub
dec
mov
inc
sub
sub
mov
mov
sub
or
lea
mov
mov
movzbl
movzbl
dec
lea
dec
sub
or
and
inc
call
xor
lea
movzwl
and
call
imul
lea
add
sub
call
inc
push
add
imul
lea
mov
mov
call
dec
lea
mov
movzbl
lea
add
call
add
pop
add
add
movzbl
add
add
pop
mov
inc
pop
and
mov
dec
add
pop
lea
mov
add
imul
mov
mov
inc
and
pop
add
mov
pop
inc
inc
mov
movzwl
lea
call
inc
imul
mov
sub
ret
mov
imul
push
lea
inc
push
dec
sub
push
mov
add
push
mov
mov
push
lea
dec
mov
add
inc
push
ret
push
sub
add
sub
lea
inc
mov
add
add
movzbl
or
sub
or
movswl
xor
sub
inc
lea
inc
mov
add
dec
jmp
mov
in
fdivrl
out
movsl
test
dec
mov
mov
mov
and
adc
mov
lret
insb
js
jb
xchg
mov
mov
push
js
adc
adc
xor
mov
push
arpl
mov
sub
jp
mov
lods
inc
mov
or
inc
mov
movsl
mov
xlat
jmp
inc
ja
mov
pop
out
enter
mov
bound
inc
cld
push
pop
pop
or
cmp
sbb
mov
and
pop
imul
lret
es
push
sub
mov
inc
push
sbb
sub
test
outsb
xchg
xchg
ds
ljmp
leave
das
mov
push
push
mov
mov
xor
cwtl
mov
daa
dec
cmpsl
pop
mov
mov
cmp
arpl
jbe
jns
aaa
in
and
push
clc
stos
arpl
or
jne
or
push
jnp
insb
pop
shr
jmp
fsubp
push
das
shlb
xchg
xor
push
or
cmpsb
jns
insl
call
scas
cld
aad
rcll
fists
in
dec
sahf
jo
xor
mov
movsb
rorb
lcall
adc
movsb
xor
in
cs
cmpsb
movsb
adc
dec
mov
imul
xchg
adc
pop
mov
rorl
adc
inc
sbb
sbb
repnz
push
jo
out
lods
xchg
popf
lock
push
aad
clc
adc
imull
jp
xor
add
pop
and
and
inc
sbb
out
xchg
xor
insl
rolb
jns
push
dec
push
je
orb
daa
xchg
out
inc
xchg
int
xchg
mov
leave
call
gs
adcl
or
mov
ret
movsb
jecxz
and
jmp
sub
and
inc
dec
call
xor
and
daa
jne
push
into
fcmovnu
mov
fdivrp
pop
adc
mov
xlat
pop
cmp
dec
dec
lahf
test
sti
add
mov
mov
nop
leave
adc
loope
or
add
loopne
sbb
stos
inc
xchg
aas
and
dec
mov
ljmp
mov
add
dec
mov
add
sahf
data16
sub
sar
push
mov
push
in
lcall
inc
pop
xor
jbe
in
ss
add
inc
push
in
inc
popa
jbe
mov
aam
and
popf
stc
sub
arpl
arpl
pusha
into
mov
data16
pop
inc
xchg
lea
lods
xor
repnz
push
xor
dec
arpl
shrb
or
mov
lcall
sub
sbb
mov
mov
push
aad
je
xlat
xor
shll
test
cmp
and
xchg
push
ljmp
mov
sar
pop
negl
rcrb
out
mov
divb
fcomip
mov
mov
sub
repnz
subb
push
out
icebp
xchg
int
xchg
dec
les
pop
sbb
enter
mov
cmc
sbb
jno
les
lea
loope
xchg
adc
and
jmp
adc
iret
sti
out
inc
cmp
jecxz
imul
sbb
sub
sub
dec
ret
psubb
add
or
mov
mov
mov
les
fdivp
clc
cmp
movsb
sub
jne
push
mov
leave
loopne
in
lods
or
mov
sub
push
mov
cmp
leave
es
mov
lahf
outsl
adc
sbb
popa
inc
xor
out
aaa
ret
fwait
lds
sub
mov
loope
outsl
clc
insl
cs
xchg
shlb
cmc
push
dec
sub
adc
je
xchg
mov
hlt
adc
rsm
ret
stos
rclb
mov
sti
cmp
ja
pshufw
or
repnz
sti
aam
inc
sbb
add
pop
sub
add
or
push
mov
xor
dec
xchg
nop
sti
mov
push
cltd
addl
and
cmp
les
pop
pop
sub
xchg
popa
addr16
inc
jmp
xor
pop
mov
inc
imul
test
movsl
sti
fistps
dec
inc
lods
call
adc
mov
sbb
adc
sbb
push
loope
in
pop
into
push
sbb
bound
lret
xlat
imul
sti
mov
mov
sub
and
ret
jb
push
lret
imul
push
rcll
cmp
fnsaves
js
imulb
adcl
add
xchg
insb
add
pusha
outsb
push
mov
or
mov
pop
icebp
cmp
scas
ss
cmp
push
dec
lods
sbb
cmp
adc
lret
repz
loopne
and
or
je
ret
xchg
push
iret
aas
daa
mov
mov
loope
xor
lds
pop
lock
call
mov
jne
fstpl
pop
movntq
or
mov
mov
inc
push
push
xchg
out
enter
sub
dec
les
loop
loop
enter
stos
loopne
xchg
stc
push
and
stos
enter
insb
dec
or
int3
xchg
ret
push
scas
sbb
lock
outsl
leave
dec
je
pop
xor
xor
push
ret
mov
test
inc
ss
lcall
das
jmp
sub
jp
pop
jns
loopne
mov
lahf
fsubrp
pop
into
or
lods
pop
leave
rep
xchg
mov
fs
scas
pop
mov
cmpsb
pop
jne
lods
add
jnp
fisttpl
rcrl
push
mov
and
insb
int3
adc
ret
mov
aam
mov
cltd
movsb
mov
mov
mov
inc
lea
test
shl
pusha
push
adc
in
out
loope
insb
mov
mov
stos
outsb
stos
cmp
or
ror
cmp
dec
xor
or
cld
sub
jno
mov
fcmovnb
in
jo
and
jge
std
popf
dec
fwait
arpl
loopne
loop
jns
push
pop
call
cmp
pop
push
es
ljmp
and
popa
jl
cmc
pusha
jmp
mov
inc
rcrl
lcall
ja
and
xchg
mov
jnp
movsl
lds
mov
fidivl
loopne
fsub
dec
jne
movsl
jo
movb
xor
dec
mov
dec
add
cmpsb
add
mov
insl
inc
inc
cli
pop
nop
loope
fcmovbe
or
jbe
mov
nop
push
pop
aam
mov
loope
adc
and
clc
push
dec
add
adc
stos
mov
push
jbe
dec
mov
aaa
sub
aam
inc
je
push
shr
and
in
out
int3
push
add
push
pop
nop
scas
fsts
gs
mov
sub
test
mov
stos
movsl
fwait
mov
mov
add
sbb
add
inc
jmp
loope
mov
scas
out
es
les
mov
pusha
xor
mov
sbb
outsb
adc
out
mov
xchg
int3
mov
xlat
sbb
cmp
lret
loopne
inc
xchg
jbe
pop
outsb
xchg
mov
das
xchg
sub
inc
lds
out
insb
fstpt
inc
sub
and
les
cmc
sub
mov
pop
mov
loopne
jg
pop
jb
movsb
sbb
inc
mov
popf
push
inc
mov
dec
stos
clc
xchg
push
leave
enter
cmpsl
test
mov
mov
ja
test
je
push
and
fwait
adc
lock
rorl
or
loope
adc
mov
mov
int
xor
repz
scas
fs
inc
cltd
dec
subb
enter
inc
lahf
push
sbb
ret
and
ljmp
pop
mov
popf
and
ljmp
sbb
lods
adc
aas
add
push
push
mov
mov
inc
inc
add
pop
sbb
and
repnz
pop
jno
shlb
jae
mov
lds
cltd
or
sar
cwtl
lcall
hlt
mov
sbb
sbb
cltd
inc
clc
and
inc
and
inc
rcrb
add
and
adc
jb
test
add
iret
mov
movl
sub
ljmp
pop
stos
mov
jne
inc
lahf
in
repz
jns
mov
push
cmp
cmpsl
dec
jo
push
mov
cmp
jno
pop
or
dec
xchg
ja
push
mov
add
mov
fs
and
aad
push
adc
mov
mov
loope
lret
lcall
xor
cvtpi2ps
sti
mov
xor
mov
inc
pushf
sbb
mov
add
cmp
or
movsl
in
mov
ret
leave
scas
pop
push
dec
fmuls
pop
jp
mov
cmp
out
xchg
out
cmp
imul
jbe
and
test
in
sbb
adcb
or
push
popa
pop
movsl
jns
insl
cld
subb
pop
add
xchg
idivb
mov
insb
add
fcoml
inc
push
stos
xor
jns
test
or
mov
rorl
mov
iret
sarl
and
sbb
xchg
inc
cmpsb
mov
loopne
add
test
cmp
cltd
out
fwait
or
dec
or
icebp
leave
aam
das
pop
add
stc
adc
and
out
fisubl
lahf
test
aaa
sub
mov
pop
xor
outsb
movl
ret
dec
cmp
mov
pop
cwtl
daa
popf
int3
xchg
sub
jmp
stos
sti
fs
mov
aam
mov
ja
inc
xor
or
fcoml
mov
mov
inc
int
aaa
mov
push
dec
sub
and
xchg
mov
dec
insb
icebp
push
arpl
in
scas
out
imulb
pop
mov
sub
and
ret
js
jbe
pop
dec
repz
mov
cmp
and
cmpsl
jne
mov
xchg
out
jecxz
jl
lock
mov
ret
cmpsb
insl
mov
js
xchg
and
push
dec
dec
cs
mov
jge
add
jecxz
outsl
nop
test
int
mov
adc
popa
push
cmp
in
insb
cmp
inc
aad
shl
loope
js
out
xlat
jo
cmpl
mov
rcrl
mov
pop
and
scas
rorl
std
and
xchg
in
divl
push
push
mov
mov
push
shrb
cld
lds
xchg
js
add
sahf
xchg
sbb
sbb
shl
cmp
adc
ja
and
or
or
pop
sbb
or
sbb
adc
jecxz
adc
insb
popa
and
adc
dec
mov
in
jl
fldl
jle
mov
aas
xchg
xchg
jge
ss
add
or
loop
push
notb
xor
dec
idivl
js
xor
popa
cwtl
shlb
popa
xor
add
pusha
ljmp
jle
sub
jo
xchg
fwait
mov
andl
out
imul
lods
sbb
lret
sar
xchg
mov
or
shl
test
inc
std
ds
ret
inc
pop
jl
hlt
out
sarb
jmp
call
mov
gs
rcll
test
mov
popf
mov
sub
dec
frstor
aaa
fsubl
out
mov
push
jbe
les
adc
mov
or
shrb
jne
loopne
push
mov
mov
rcrb
and
sti
mul
enter
cmp
dec
jo
push
mov
pop
sti
sub
push
push
out
push
fistpll
into
shll
aad
scas
adc
inc
lea
or
mov
enter
pop
fwait
data16
roll
cmpsl
test
sarb
gs
sbb
push
scas
or
out
xchg
mov
mov
dec
dec
cli
dec
sbb
jge
pop
out
call
jae
xlat
filds
into
mov
scas
outsb
mov
in
ficompl
stos
sti
pop
data16
mov
add
jg
mov
push
stos
pop
popl
add
pop
pop
inc
sahf
jp
push
xchg
addr16
mov
or
cmc
cli
leave
mov
add
mov
js
pop
lds
xchg
idivb
jae
ljmp
nop
sbb
cs
je
add
or
gs
fstl
repz
mov
sbb
mov
stos
mov
pop
outsl
dec
dec
dec
sbb
mov
out
and
mov
insb
dec
xor
jg
call
or
xor
fildl
add
ret
mov
in
hlt
xchg
adc
sbb
sub
lcall
test
into
adcl
and
cmp
enter
subl
mov
jns
mov
stos
xchg
and
xor
jae
push
adc
aam
mov
mov
rorb
sbb
jns
or
int
mov
cmpsl
jb
lds
push
pop
es
aad
ja
adc
popa
mov
imulb
dec
jmp
jne
push
jae
mulb
inc
mov
xchg
jecxz
imul
les
cmp
sti
movsl
jl
sbb
insb
ss
mov
or
imull
mov
mov
mov
out
add
in
aaa
and
cwtl
js
mov
pop
sub
sub
jbe
mov
mov
insb
imul
fistpl
push
scas
mov
mov
mov
jb
mov
pop
jnp
xor
negl
stos
stos
insl
xor
xchg
popa
cmp
rclb
aas
mov
bound
call
sbbl
inc
lahf
jo
xchg
hlt
popa
ret
rorb
fdivl
fstp
and
lret
jnp
rcrb
pop
mulb
repnz
mov
cmp
xor
jg
mov
imul
jmp
xchg
jnp
dec
mov
push
mul
in
push
arpl
lds
pop
leave
xor
data16
stc
jo
test
shlb
lds
pop
and
test
out
imul
test
fcom
push
test
cmpb
std
ss
mov
lret
bound
xor
mov
cmp
xchg
mov
push
xchg
test
rcll
dec
cmp
test
stos
in
mov
cwtl
shr
arpl
sbb
out
inc
insl
mov
sahf
jge
out
and
xor
or
test
jno
ja
lret
jo
idivb
mov
fcmovnb
ja
mov
cmpsl
push
push
lret
jb
je
and
sbb
pop
xchg
mov
cmp
repnz
push
jle
sbb
js
gs
aas
xchg
loopne
paddusw
sbb
cmp
sbb
fs
aas
popf
push
push
loope
mov
jb
dec
fstl
adc
inc
lods
mov
xchg
push
xor
fdivr
ret
push
inc
aas
lock
add
pop
cmpsb
and
mov
dec
jl
jo
clc
or
cmp
inc
les
dec
iret
cmp
in
lret
aam
stc
xor
and
cld
sbb
and
mov
xor
lock
xchg
jge
out
aas
daa
lcall
jo
pop
jl
sarl
scas
pusha
jp
sub
leave
repnz
mov
sbb
inc
icebp
bound
mov
out
pop
cmp
xor
mov
cmp
adc
and
lds
stos
mov
sbb
addb
ljmp
jae
iret
sub
arpl
mov
sub
fs
stos
cmp
outsb
dec
ljmp
jnp
sahf
data16
aas
fbstp
inc
roll
scas
inc
in
adc
cmpsl
push
inc
and
pop
test
xchg
or
addr16
popa
clc
stc
dec
add
dec
inc
dec
fstps
inc
add
rcrl
xlat
push
lea
cmp
adc
enter
or
ficompl
idiv
and
rorl
push
sbb
xor
imul
lods
xchg
pushf
stos
xorl
test
ret
lea
pop
cwtl
push
sub
or
mov
rcpps
dec
subl
sub
in
insl
pop
and
mov
and
int3
mov
push
inc
orb
in
cmc
mov
inc
mov
sub
add
mov
cmp
cltd
rol
aas
add
rcrb
or
xchg
fcmovb
xchg
decl
lea
xor
sti
enter
clc
loop
xchg
cmp
shrb
pusha
add
loope
adc
sub
push
mov
stos
mov
pop
sbb
push
lcall
mov
sbb
pop
xor
not
jg
repz
ljmp
cmp
fidivs
xor
cwtl
cmp
movsl
icebp
pop
mov
in
inc
das
pop
adc
gs
mov
push
inc
xchg
lods
mov
popf
data16
hlt
sub
add
mov
jns
imul
xor
jmp
repnz
sub
xor
push
aad
je
sbb
xchg
xchg
jno
call
mov
ret
jbe
inc
sbb
cmp
repz
xor
pop
mov
push
jle
push
or
push
popf
mov
inc
rolb
cmp
aam
in
movsb
mov
mov
and
stc
enter
jg
cmc
dec
popa
pushf
cld
pop
jecxz
push
xor
push
pop
mov
out
into
push
sbb
mov
or
stc
idivl
jecxz
pop
or
jg
addr16
xor
loope
jp
and
sbb
add
stos
movsb
ret
pop
push
fnstcw
es
ja
xchg
dec
aam
subb
sarb
or
jbe
mov
rorb
imul
cmp
mov
adc
das
scas
js
add
mov
aad
stc
into
lcall
or
jmp
aaa
lcall
sub
and
sarl
in
cld
pop
dec
out
stc
lds
mov
mov
cld
test
jnp
outsb
pop
lea
and
mov
or
mov
pusha
sub
inc
sbb
cs
cs
jmp
je
mov
adc
adc
test
xchg
sbb
nop
fwait
arpl
mov
mov
outsb
or
in
inc
add
dec
popa
fcoml
xchg
push
mov
repz
fsub
xchg
outsl
mov
clc
popf
fcmovnb
mov
jl
mov
shll
jmp
xchg
sub
paddw
dec
test
mov
ja
fcmove
or
in
shlb
cli
fidivs
inc
jbe
push
stc
inc
sahf
stos
mov
xchg
in
or
lahf
add
lock
mov
test
jmp
adc
mov
mov
in
repz
sbb
mov
jl
scas
outsb
jb
adc
or
fsubrs
bound
dec
aaa
cmp
int
cmp
mov
les
aas
aas
mov
dec
push
xchg
jo
int3
mov
iret
loopne
outsb
push
jmp
xor
clc
dec
mov
push
mov
sbb
push
dec
aam
sbb
cmpsb
mov
push
sahf
les
decb
pusha
mov
incb
or
je
sbb
push
pushf
adc
push
cmp
cwtl
or
inc
fisubs
mov
clc
pop
mov
fldt
test
push
pop
imul
out
cmp
enter
sbb
popa
repz
lcall
cmpsl
mov
xor
or
sbb
stos
ss
mov
out
xorl
mov
or
shrb
mov
jno
xchg
ret
sbb
lret
fldenv
push
pop
arpl
pop
das
std
test
xchg
loope
repz
aad
dec
mov
pop
fimull
add
enter
sub
aas
jo
fchs
adc
mov
hlt
pop
movsb
pop
popa
rcrb
rorl
cld
push
push
stc
mov
ja
movsl
icebp
adc
xchg
push
and
inc
les
test
aaa
sbb
gs
popa
iret
dec
gs
inc
mov
notb
in
push
jnp
add
xor
mov
add
inc
cltd
pop
fists
mov
cltd
iret
ja
test
hlt
test
fidivrl
lods
stos
xchg
mov
sbb
mov
fmuls
xchg
fists
out
js
add
fldz
lock
mov
outsl
mov
mov
xor
inc
adc
xor
fst
addr16
mov
clc
inc
fsub
cwtl
iret
mov
sbb
jb
cmp
jmp
jo
cmp
xchg
push
or
cmp
sub
test
pop
jge
inc
icebp
int3
mov
ja
sbb
je
adc
setp
mov
aas
scas
out
ljmp
push
add
cmp
dec
or
ds
movsl
in
ja
sub
cmpsb
push
enter
xor
gs
inc
stos
push
push
or
mov
cltd
lcall
pop
mov
pop
sub
ljmp
test
pop
test
cmp
out
jnp
mov
in
pop
cmp
add
add
dec
test
cmpl
mov
gs
testl
ja
cld
pop
jmp
insl
mov
pop
mov
mov
mov
pop
push
mov
xor
xchg
inc
cwtl
sub
addb
xlat
cmp
loope
fwait
pmulhuw
adc
pop
mov
std
mov
pop
xchg
add
and
mov
sub
mov
push
loop
xor
fs
sub
cld
insb
mov
add
fwait
ss
mov
dec
stc
dec
pusha
inc
decb
pop
idivl
insb
mov
jl
mov
mov
or
push
pop
xchg
mov
or
shll
dec
push
mov
or
fnstcw
sub
ss
cli
idivl
in
rcll
mov
mov
inc
xor
cmp
or
ret
sbb
aaa
jnp
les
shl
lcall
jne
xlat
lcall
pop
iret
or
jne
and
mov
add
clc
mov
xor
cs
cmp
fwait
lcall
fwait
subb
lret
sub
add
and
outsb
sbb
dec
xchg
jecxz
mov
test
xlat
push
lret
xor
insl
out
lcall
mov
outsb
imul
xchg
cmpl
cmpsl
dec
pop
imul
aas
push
outsl
cli
sahf
dec
rorb
lcall
lret
inc
out
jb
jo
push
cmp
frstor
in
repz
mov
push
xchg
in
mov
jnp
sub
out
or
or
orl
jge
xor
jg
dec
fnstsw
movsl
cld
sub
xchg
fmulp
cmc
mov
cmp
nop
fldenv
rcll
xchg
popa
mov
add
xchg
test
jge
mov
inc
sbb
in
adcb
inc
lret
loope
jb
push
stos
jnp
dec
jg
in
fimull
sbb
lea
repnz
flds
shrb
adc
jge
jmp
push
sub
ja
jbe
cmp
sbb
add
popa
out
adcb
mov
cmp
repnz
test
sub
dec
jl
jge
cmp
fisttpll
cmpsb
fdivrs
shrl
jp
std
in
sub
in
dec
sub
inc
sub
das
loopne
lea
dec
shlb
jle
fisubl
int
jl
les
xor
jmp
mov
enter
sbb
sub
mov
sbb
pop
push
cld
lahf
xorl
adc
scas
mov
mov
sbb
sbb
xchg
mov
mov
inc
sbb
jp
inc
shl
and
sbb
cmp
std
or
sbb
mov
popf
mov
mov
cmp
fldenv
dec
adc
sti
jae
push
sbb
ds
xor
and
negb
adc
add
sbb
bound
or
jle
cmp
rcrb
xchg
sbb
add
stos
fimuls
lods
cli
inc
ret
mov
andb
addr16
mov
or
fidivs
rcl
sar
call
cmp
jae
cs
in
pop
mov
mov
jg
xor
inc
jb
stos
icebp
mov
push
lahf
out
push
mov
inc
cs
jmp
push
rorl
aaa
je
cltd
arpl
mov
repnz
jb
xor
stc
push
xchg
hlt
daa
sub
lock
jae
add
or
in
hlt
dec
cmp
push
shl
dec
cmp
into
outsl
push
cmp
out
inc
ret
jae
add
pop
or
stc
call
shlb
leave
xchg
push
adc
bound
push
int
loope
int3
jmp
xchg
xchg
lcall
mov
mov
ljmp
pop
dec
jb
xor
mov
dec
scas
loope
pop
xor
jne
aaa
lret
push
orl
and
call
push
repnz
int3
jge
cmp
lods
arpl
jb
dec
dec
jg
mov
pop
aaa
bound
dec
xchg
aam
inc
shr
push
fcmovbe
gs
clc
push
mov
push
lds
push
mov
sub
ret
cmc
push
inc
jae
test
add
sbb
ss
jecxz
ja
cmpsl
aad
mov
scas
jmp
adc
xlat
xor
mov
nop
cmp
xor
in
kandnb
in
dec
fdivs
sbb
adc
dec
pop
add
lods
dec
roll
add
pop
lods
imul
inc
out
movsl
or
call
xor
stos
add
lret
pop
sbb
lahf
push
push
loope
jmp
mov
push
addb
mov
imul
fsubs
cmp
mov
mov
xchg
dec
dec
stos
jns
sahf
or
sub
and
mov
sbb
or
push
mov
xlat
jae
dec
sti
into
insb
ljmp
aaa
cmc
test
adc
push
inc
bound
scas
movsl
shlb
pop
mov
sub
lods
add
dec
cmc
and
adc
jbe
pop
aas
xchg
mov
icebp
jb
xchg
mov
mov
test
add
add
ret
data16
in
dec
pop
int
sahf
sbb
cs
popf
mov
pop
aad
pop
mov
dec
cmp
push
je
dec
xor
lea
mov
das
fstpl
xor
in
xchg
push
cmp
rcrb
jo
mov
fwait
and
stos
lahf
inc
cltd
mov
dec
jb
test
cmpsb
xor
push
scas
add
cmp
test
int3
test
xor
div
xchg
mov
fstl
jp
test
pop
aaa
ja
jne
adc
push
faddp
cld
aas
scas
sbb
test
test
sbb
outsb
sbb
icebp
xchg
jg
fstps
push
xorl
mov
out
mov
test
pop
adc
imul
adc
bound
pop
sbb
ja
stos
pushf
es
mov
inc
stos
arpl
lea
sbb
xor
mov
cwtl
js
adcl
adc
push
rcrl
mov
into
jp
bound
sahf
test
jecxz
scas
sti
or
leave
pop
push
fwait
ret
cld
mov
jmp
push
dec
mov
sti
outsb
and
jle
sbb
cmc
and
ja
shl
popf
jge
pushf
fs
push
cltd
push
frstor
push
mov
xchg
ja
push
mov
push
bound
int
adc
lea
imul
in
pushf
xchg
or
lahf
in
mov
mov
lods
mov
into
push
sbb
jl
fst
imul
in
adc
out
xchg
jge
filds
arpl
aam
test
popa
and
gs
and
add
adc
sbb
cmp
insl
dec
cmpsl
xchg
lret
push
sub
jo
push
enter
aas
loop
cmpsl
andb
call
pop
aad
xchg
pusha
ds
cmp
add
ja
filds
lret
or
pop
cmc
jmp
jp
fprem1
in
sti
pop
stos
mov
fucom
iret
sbb
in
xchg
ret
imul
add
idiv
adc
xor
les
cmp
xchg
imul
jp
or
cltd
sahf
outsb
push
jp
scas
leave
loop
pop
in
insl
test
and
push
cmpsl
dec
jo
sbb
adc
loopne
cmp
loopne
adc
dec
inc
cmp
push
int3
sub
mov
adc
mov
jno
mov
nop
popf
or
dec
scas
js
or
in
ljmp
in
xchg
xor
syscall
clc
mov
loopne
pop
mov
inc
sub
shr
mov
inc
sub
or
push
ja
mov
sbb
push
jge
iret
enter
outsb
out
test
dec
jge
out
xchg
dec
xor
mov
add
inc
add
ljmp
cld
lret
mov
jmp
bound
jo
pop
lods
out
adc
jb
adc
repnz
loope
movsl
popa
aaa
mov
addr16
movsb
jp
fcom
fistps
or
es
pop
outsb
pop
dec
ja
ljmp
jae
ret
mov
add
inc
xor
loopne
add
push
cld
test
sub
adc
cs
cmp
pop
ret
pop
push
enter
xchg
pop
push
sbb
shlb
insl
add
clc
mov
stos
bound
jae
pop
and
ja
imul
sarl
push
filds
sub
shrl
inc
and
add
or
mov
ja
jg
fisttpl
ret
push
or
jno
icebp
dec
cs
out
or
ret
pusha
mov
icebp
cwtl
xchg
andl
mov
int3
out
ret
xor
cmp
pop
cli
adc
mov
jmp
es
adc
xor
fwait
sti
sbb
mov
xchg
pop
movsb
jle
lds
popf
push
cmpsb
movsl
inc
cs
sbb
ja
ret
cltd
and
add
pop
int3
out
nop
xor
test
jb
sbb
shl
cmpsl
add
dec
or
push
icebp
add
aad
mov
je
iret
add
jl
cmpsl
push
mov
ljmp
fwait
fwait
dec
or
lods
loope
mov
out
in
es
inc
out
dec
xor
imul
jg
cmc
les
out
nop
adc
sahf
jge
push
sbb
mov
rorb
dec
std
lret
mov
cmp
loop
orl
ret
xor
loop
adc
pop
inc
jl
lds
add
sbb
test
push
rorb
push
out
sbb
xlat
dec
sbb
xor
adc
xchg
push
inc
jne
and
cmp
dec
mov
je
lahf
leave
rcrb
pop
popf
mov
push
jb
jo
adc
and
mov
insb
loop
aas
cmp
adc
fiadds
adc
mov
stos
lahf
mov
test
sbb
xor
shll
sbb
jg
fwait
xchg
cld
pusha
push
xchg
pop
mov
cmpsl
mov
sarl
dec
into
mov
inc
dec
sbb
jp
jp
cwtl
mov
pop
cmc
mov
fst
dec
insb
ret
mov
fsubrl
adc
jno
mov
stc
xchg
in
in
push
pop
add
push
cmpsl
xchg
fdivl
jmp
jl,pn
inc
lods
cmp
lods
push
ja
add
rcll
sub
mov
loop
push
insb
sarl
mov
daa
mov
cwtl
out
and
test
dec
add
repz
dec
fucom
out
cmp
mov
add
addb
jnp
mov
roll
stos
jecxz
and
sbb
mov
lods
loope
call
fldcw
mov
xor
insb
roll
push
sbb
jbe
mov
fisttps
inc
pop
ret
jecxz
and
ja
cwtl
aam
in
rcl
je
jmp
fsubrl
out
shlb
in
outsl
add
stos
mov
and
das
mov
pop
inc
orb
dec
pop
sub
push
pop
pop
mov
xchg
and
bswap
andb
push
repnz
lahf
adc
cmp
xor
int
pushf
pop
xchg
clc
and
mov
rorb
arpl
jo
mov
test
scas
jg
test
popa
mov
cli
mov
sub
loope
popa
xor
xchg
and
or
outsl
je
sub
test
cmp
stos
ret
xorl
mov
mov
push
cmpsl
cmp
sub
jae
xchg
sbb
jnp
daa
inc
push
movsl
shlb
sbb
mov
inc
inc
sti
push
pop
sub
daa
jbe
cmpb
je
les
or
fimuls
int
pop
lcall
inc
inc
xor
jmp
mov
pop
sub
stos
lods
hlt
fistps
repnz
imulb
mov
adc
mov
sub
ljmp
fnstsw
cmp
sub
push
push
fsubl
add
mov
inc
jge
aaa
mov
add
adc
fld
xor
arpl
or
xor
jle
mov
les
push
sub
fimuls
sub
and
pop
jb
in
push
syscall
jne
xor
outsb
xchg
outsl
sti
das
sbb
xchg
dec
out
sub
push
adc
lcall
add
aam
pop
shrb
or
push
subb
out
xor
pusha
pop
in
adc
nop
cmp
pop
xor
aam
sbb
lea
mov
emms
rcrb
mov
out
or
jno
xlat
test
xchg
inc
mov
lea
imul
rol
pop
loope
test
fcmovnu
sbb
and
scas
cmp
roll
je
xchg
pop
arpl
fucomi
mov
or
out
cmp
pop
pushf
pop
adc
dec
push
movups
rcrl
add
push
push
dec
xchg
dec
or
sbb
jns
add
push
inc
mov
and
aam
js
pop
xchg
mov
iret
dec
jle
sahf
inc
or
sbb
shrl
leave
cli
sbb
or
fs
nop
jae
cltd
lock
addb
ja
pushf
jb
fildll
dec
lock
push
fcomps
fists
adc
xor
mov
add
inc
add
push
mov
sub
dec
mov
lret
and
imul
std
sbb
add
hlt
jg
mov
jbe
movsb
je
iret
push
push
fsub
push
je
jno
das
jnp
dec
jmp
into
movsl
cli
mov
rcrl
pop
rclb
push
and
js
dec
push
test
lods
cmpsl
movsl
mov
or
movsb
lods
xorb
ss
inc
inc
fistl
out
push
jno
popf
movsb
adc
mov
dec
pop
call
xor
pop
in
jge
daa
jne
jns
inc
mov
hlt
out
sahf
inc
dec
jle
stos
cmp
mov
jl
outsl
mov
lock
xor
mov
es
jp
stos
pop
repnz
and
xchg
fistl
sarb
ficoms
pop
mov
jno
sbb
insb
pop
in
add
or
int3
sbb
movsb
fwait
call
adc
xchg
sub
add
sbb
les
mov
aad
mov
test
lds
cwtl
call
jge
movsb
dec
mov
lret
mov
stos
cmp
into
jnp
test
daa
push
sbb
cld
mov
shlb
sub
icebp
xor
add
mov
cmp
scas
pushf
out
gs
jmp
jno
pop
and
pushf
xchg
dec
mov
in
aas
aaa
rolb
push
std
add
add
outsl
inc
sti
int3
mov
lea
push
mov
mov
fstl
xchg
fcmovnu
fbstp
cmpsb
add
leave
inc
and
lret
mov
mov
or
cld
mov
mov
aas
aas
incb
dec
ljmp
mov
in
insl
xchg
aas
cmp
or
leave
test
loopne
in
movsb
nop
dec
cmp
inc
sub
sub
gs
getsec
inc
mov
push
xchg
cli
lea
repnz
hlt
or
adc
sbb
jno
push
sbbb
ffree
push
push
je
lods
pop
xchg
loopne
and
and
or
mov
mov
and
nop
cld
inc
mov
outsl
fisttpll
and
test
pop
jbe
and
sbb
cmp
icebp
cmpsl
inc
out
in
dec
rorl
lea
pusha
movsb
add
mov
mov
lcall
rcrl
cs
loop
cli
lahf
mov
fwait
cmp
insl
inc
xchg
iret
test
adc
dec
mov
push
push
test
mov
repnz
not
push
out
or
lods
cmp
sub
add
xor
das
lea
in
icebp
sub
jb
xlat
mov
loopne
lods
mov
mov
shr
sahf
iret
mov
jno
adc
fdivp
xor
dec
dec
sub
pop
shlb
jo
cmpsl
andnps
mov
outsl
mov
insl
in
fistpl
sbb
push
out
and
xchg
add
sti
xchg
xchg
movsb
lret
adc
push
fstpl
fsubs
push
cmp
mov
add
scas
cmp
test
dec
xchg
cmpsb
lock
rclb
mov
test
adc
jb
jbe
cmp
push
sbb
clc
sbb
xlat
adc
sbb
pop
mov
inc
dec
sbb
bound
addr16
pop
loop
inc
sub
out
adc
cmc
xchg
lods
fimull
ds
loop
loopne
fistpl
lea
add
dec
cwtl
ficoml
xlat
mov
jge
loope
xor
add
jo
cwtl
mov
mov
daa
mov
mov
fcmovbe
mov
shlb
xchg
or
sub
inc
mulb
insl
popf
das
cmpsl
adc
scas
jecxz
js
push
ret
daa
xchg
out
cmp
imul
mov
test
outsl
xchg
mov
subl
inc
lahf
mov
xor
adc
push
sub
push
cmpl
ljmp
sbb
push
add
test
push
pop
pop
mov
scas
incl
dec
pop
sbb
loopne
jbe
xchg
xchg
or
jbe
xor
leave
cli
cmp
loope
jno
pusha
imul
adc
arpl
push
dec
jmp
pop
pop
mov
js
ds
arpl
mov
sbb
sti
sarl
icebp
dec
cmc
stc
cld
mov
cltd
push
xchg
jl
jne
cld
in
and
das
xor
push
mov
xor
rorl
adc
in
movsl
xchg
sar
mov
adc
jmp
mov
xor
cmp
push
sbb
xor
dec
add
cmp
dec
jbe
ror
pop
xchg
pop
cmp
fisttps
mov
mov
divb
roll
push
insb
aad
mov
outsl
sub
pcmpeqd
call
in
sbb
xchg
arpl
xlat
aas
mov
addl
sbb
mov
jl
rolb
int
xor
mov
push
xchg
rcll
mov
lods
loope
in
gs
negl
adc
adc
pop
or
push
faddl
std
add
sahf
in
ficomps
cmp
mov
jbe
out
dec
or
ret
divb
sub
push
cmpsb
sub
fsubr
mov
cmp
int
cld
notl
mov
add
dec
inc
fwait
test
fwait
pop
jp
jne
movsl
nop
xor
add
mov
enter
ret
in
push
inc
int
sub
inc
orb
cmp
pop
pop
pop
pop
andb
int
pop
testb
rorb
sarl
aaa
mov
push
cmp
cltd
ja
shlb
lahf
and
sbb
movsl
cmp
and
stos
jne
repz
push
push
pusha
cmp
dec
movsb
inc
or
inc
fcoml
scas
inc
cmp
xchg
daa
mov
pop
jmp
pop
pushf
dec
in
push
fwait
ljmp
insb
jo
dec
int
ret
adc
add
adc
dec
pop
sti
out
fisttpl
mov
jl
mov
inc
icebp
cmp
vcvtsd2si
and
push
cmpsb
aas
add
fwait
popf
add
and
ret
push
jmp
jb
into
sbb
push
push
insl
scas
std
sbb
outsb
not
cmpsl
mov
pop
push
pushf
xor
jecxz
xchg
sbb
push
mov
mov
push
xor
jae
test
aaa
pop
xchg
loop
and
aam
shrl
pop
pop
adc
lods
insb
int3
gs
pop
iret
insb
sti
add
mov
scas
lret
adc
imull
arpl
inc
mov
push
fdivrl
sahf
inc
sub
out
enter
filds
inc
cmp
xor
push
jmp
lret
push
inc
insb
sbb
pop
cmp
pop
jmp
cmp
je
mov
push
sahf
fisubs
movsl
ds
pop
aas
xchg
cmp
or
addr16
mov
loope
inc
mov
mov
cmc
and
push
cmp
rol
lea
rcrl
push
and
fnstcw
pop
mov
xchg
push
insl
cs
rclb
dec
mov
pop
xlat
add
or
popa
es
in
mov
test
mov
mov
loop
std
sahf
stc
outsb
dec
mov
inc
jne
pop
dec
mov
dec
pop
loop
aam
lods
and
int
int
ljmp
data16
jae
dec
add
jmp
or
mov
lcall
ss
fs
in
out
insl
cmp
movsb
dec
xchg
jns
push
jnp
jnp
adc
loop
jecxz
test
xchg
mov
pop
pusha
in
jp
in
loopne
ucomiss
popa
addr16
adc
repnz
sbb
jnp
in
imul
sbbb
jmp
imul
pusha
jno
js
xor
pop
cltd
mov
gs
and
push
inc
in
jl
fdivs
bound
and
fwait
mov
ja
push
outsb
inc
mov
lds
popa
stc
cltd
outsl
out
add
movsb
and
ds
add
pushf
loope
mov
add
sbb
ret
aas
xor
sbbb
into
sub
aam
in
aas
sub
repz
or
xlat
int
inc
rcrl
dec
movsb
addl
add
ret
jnp
icebp
in
pusha
jecxz
push
sub
adc
ja
lds
movsl
pop
xor
in
in
movsb
movsb
xor
shl
pushw
xor
std
aad
cli
ret
lcall
loopne
cld
lret
je
sbb
imul
cmp
mov
popa
add
or
mov
fimuls
cmp
icebp
pop
mov
cmp
mov
and
add
inc
dec
xchg
hlt
cld
xchg
loope
repz
outsb
and
stos
dec
or
mov
repz
pushf
lods
in
fistps
xlat
jle
into
and
fwait
xchg
call
aad
dec
std
sahf
lock
cmp
and
sub
in
stos
or
jg
xor
andb
and
xchg
outsb
pop
aas
test
pop
mov
insb
adc
and
sbb
bound
stc
out
lret
cmp
das
fmul
sub
cmp
insb
sub
rcl
sbb
lock
stc
lods
push
or
lcall
icebp
sbb
add
and
sti
movsl
aaa
jbe
and
lods
lret
andb
int3
out
addr16
je
div
out
add
pop
sbb
sbb
les
sbb
cmpsl
cmc
mov
push
cmpsb
jno
jo
ja
imul
push
jne
sti
pop
fcoml
out
in
fdivp
lret
cltd
je
sub
xor
imul
inc
mov
or
movnti
jbe
dec
repz
shll
incb
or
push
sbb
push
call
outsl
jge
lret
dec
test
mov
iret
cmc
outsl
xchg
inc
scas
sahf
adc
or
movsl
loop
pop
stc
jp
fsubrs
sub
arpl
push
test
jns
mov
je
xchg
stos
cwtl
add
shll
add
inc
jmp
jns
or
ror
mwait
aad
insb
add
cmp
dec
icebp
xchg
addb
out
out
cmp
cli
push
sbb
in
imul
xor
cltd
les
stos
mov
jmp
mov
icebp
cmp
std
mov
mov
pop
sub
xor
stos
xor
jb
nop
hlt
rcl
fnsave
inc
aad
out
pop
aad
xchg
add
outsl
and
mov
lods
lcall
add
pop
jo
or
hlt
push
test
add
xchg
ret
jbe
jg
push
stc
inc
jo
outsl
xchg
idivl
dec
mov
push
sub
inc
scas
adc
test
cld
scas
pop
enter
sub
cmp
test
jb
pop
push
insl
aam
sub
fstl
les
stos
cltd
fisttpll
xor
cwtl
dec
mov
mov
pop
add
inc
cmpsl
ret
loop
pushf
jae
loope
lods
jae
inc
test
dec
cli
addr16
repnz
in
mov
push
pop
mov
push
sub
inc
mov
xor
mov
mov
xor
out
les
js
add
fistl
xor
or
mov
fistpll
pop
cmpsb
popf
mov
sub
mov
les
pop
or
lods
jns
inc
mov
mov
xor
push
or
insl
in
inc
aaa
xor
movb
out
pushf
shrl
xchg
sahf
lret
mov
cmp
rcrb
test
xor
pop
and
sahf
inc
sbb
jae
cmp
rcl
arpl
pop
inc
test
and
jp
add
jns
out
mov
dec
test
std
outsb
and
negb
out
inc
push
sub
mov
jbe
adc
pop
sub
repz
fucomip
push
loopne
dec
aam
xchg
aas
pop
push
inc
push
test
out
push
add
jb
inc
sbb
push
mov
mov
sbb
jmp
out
inc
lret
imul
cli
inc
shll
aad
sahf
xor
into
mov
lods
jl
jb
add
scas
sub
inc
inc
pop
pop
incl
mul
jmp
xchg
sarl
xor
sahf
push
xlat
mov
cmp
lock
cmp
jbe
adc
out
je
dec
lea
jmp
xor
inc
add
mov
fadds
inc
push
out
jns
cmp
scas
in
jmp
sub
adc
lods
xlat
push
jl
scas
mov
sbb
aas
icebp
int
add
and
mov
xorl
cltd
outsb
fiadds
cmpsl
into
push
inc
cmp
mov
outsl
aaa
test
sub
test
mov
sub
data16
iret
ljmp
push
sub
or
and
push
mov
cmpl
xor
dec
in
xchg
cwtl
push
incb
jge
movsl
pop
bound
or
int
jo
jnp
adc
xor
mov
mov
insb
mov
jg
push
dec
fstp
inc
paddw
sbb
mov
and
pop
push
neg
mov
inc
push
into
dec
or
call
cld
push
jge
adc
adc
jmp
fsubrs
hlt
inc
loopne
sbb
test
std
xchg
xchg
adc
aaa
pushf
or
lea
incl
xor
push
push
je
pop
mov
jle
mov
push
js
sbb
xorl
sti
push
xchg
lock
pop
sbb
vmread
fstl
add
jb
das
and
add
lahf
sar
pop
mov
dec
shll
cs
fdivrs
or
jecxz
mov
cmpsb
cmp
sub
sbb
and
das
daa
std
pop
sti
xchg
sbb
fsubrs
mov
push
adcl
inc
xchg
insb
jl
mov
call
shlb
fwait
add
inc
lcall
xchg
cmp
jge
dec
inc
gs
cli
cmp
sbb
stc
or
dec
pop
pushf
sub
lods
cmp
mov
ljmp
mov
mov
add
aaa
mov
icebp
dec
cwtl
mov
jbe
das
add
aaa
push
jp
xor
inc
icebp
movsl
rorl
xchg
pop
jmp
ss
push
sti
shrb
mov
js
adc
push
lds
cmp
sar
imul
jae
filds
insb
mov
and
push
les
pshufw
outsl
jb
add
insb
ss
lock
mov
inc
insb
mov
xchg
lcall
xor
rcrl
mov
mov
push
fistl
mov
lret
push
aad
dec
mov
jo
les
shlb
mov
push
mov
mov
je
sbb
sbbl
mov
movsl
xor
jle
into
mov
fmuls
stc
addl
popa
rcll
dec
in
es
push
jle
insb
outsb
aaa
out
jbe
push
mov
adc
sub
enter
ja
xchg
xchg
inc
push
mov
fcoms
mov
push
jo
nop
inc
add
sub
push
movsl
into
pushf
xchg
fisubs
fiaddl
jo
mov
inc
inc
or
sarb
inc
mov
sub
insb
clc
push
sbb
dec
aaa
sar
pop
das
add
stc
addl
mov
pop
push
adc
pop
inc
test
and
add
addr16
bound
stos
inc
dec
scas
clc
jp
and
in
adc
testl
xchg
adc
pop
fldt
mov
or
jno
inc
push
pop
add
push
repnz
mov
outsl
mov
push
add
or
sbb
sbb
push
aad
jns
add
cs
out
addr16
fildll
xchg
ficomps
add
ss
orb
fwait
add
pop
in
push
sub
xor
inc
in
loopne
jne
xor
dec
add
fnsave
insl
inc
and
pop
mov
cli
push
lahf
or
or
mov
cli
dec
mov
xchg
push
lret
loope
adc
mov
imull
pop
jp
hlt
movsl
andb
and
and
stc
or
mov
push
lds
add
ss
push
loop
sub
sub
mov
sbb
xchg
mov
push
cmp
jb
xorl
fisttpl
outsb
pushf
cld
add
push
jge
cwtl
jnp
push
popa
mov
cld
jg
shrb
add
aam
aad
rcr
xor
push
es
stos
sbb
push
test
push
dec
loopne
fstpl
dec
lret
lahf
push
into
das
stos
inc
or
push
pop
mov
mov
xchg
lods
add
sbb
hlt
or
sti
lcall
cs
xor
enter
xchg
rcrl
call
lret
jmp
ja
leave
lock
and
cli
inc
mov
pushf
xor
push
cmc
dec
fucomi
aad
fldl
pop
add
or
xchg
ja
cmp
in
mov
jns
data16
jo
adc
adc
adc
popf
cwtl
cmp
sub
andl
jo
mov
inc
aas
sarl
xor
xchg
mov
jne
cltd
add
popa
lcall
stos
js
push
iret
push
mov
repz
xor
mov
fsts
stos
std
mov
pusha
repz
es
or
fstpt
divb
mov
bound
shlb
jno
out
lock
icebp
mov
inc
sbb
dec
and
cmpl
dec
in
stc
in
bound
mov
rcrb
outsb
repnz
jp
sub
lretw
xchg
mov
popf
ja
push
xor
test
pop
mov
xor
out
in
adc
stc
fdivl
movsl
mov
outsl
jg
fbstp
rcll
pusha
fs
roll
xor
dec
and
jne
cmp
lods
cmpsb
movsl
rcll
mov
mov
cmp
mov
or
cs
rorb
push
nop
sub
insb
and
mov
clc
add
mov
in
dec
adc
repnz
out
test
xorb
cwtl
dec
push
nop
loope
shll
das
daa
jno
push
es
mov
std
clc
ja
dec
jae
in
stc
push
xor
xchg
aad
add
or
add
mov
cmp
sub
mov
push
xlat
jbe
dec
nop
sub
fildll
mov
xchg
push
in
cli
jnp
lds
xor
xchg
mov
push
ret
mov
mov
sar
out
sti
addr16
scas
jl
mov
mov
mov
jmp
cmp
push
push
loope
es
int3
inc
scas
rcll
push
dec
nop
or
addr16
addr16
repz
mov
xor
push
pop
mov
or
ss
jecxz
cmp
inc
int
aas
lds
std
add
loop
mov
in
jg
mov
fsts
stc
mov
inc
cltd
js
fidivrs
daa
sarl
jb
xor
mov
mov
sbb
arpl
test
cmp
mov
pop
cmp
loopne
js
cwtl
dec
insb
sbb
lcall
or
subl
inc
or
sbb
stos
push
sbb
add
pop
mov
dec
mov
test
jnp
fyl2xp1
dec
push
and
ret
mov
insl
lahf
sbb
enter
mov
repz
popa
inc
fists
into
jge
idivb
inc
cmpsb
adc
lret
idivl
nop
rolb
and
mov
xlat
out
mov
bound
push
mov
sub
mov
jmp
ss
pop
jb
add
ret
mov
jmp
xchg
mov
std
jmp
std
and
jle
sub
ficompl
das
mulb
sahf
mov
aam
ret
cmpsb
mov
out
movsb
test
push
pop
hlt
les
jp
repz
mov
or
add
mov
stos
into
mov
ror
aam
cmp
adc
add
add
jl
sub
jae
push
pop
pop
sbb
mov
push
cmpsl
cmp
repz
cs
push
mov
cli
mov
jl
movsl
sub
ss
xor
outsl
fincstp
sbb
mov
lods
mov
cmp
sti
mov
cwtl
push
negl
stos
subb
pop
cmpsb
outsb
cmp
in
mov
sarb
jle
and
popa
fstpl
adc
iret
scas
add
sub
mov
or
xor
mov
addb
fnstcw
mov
clc
add
nop
fistl
fsubs
fdiv
inc
mov
cmp
push
jae
and
inc
jge
movsb
cmpsl
insl
and
insl
or
mov
mov
inc
cli
fildll
and
ss
pop
and
test
dec
jns
pop
sti
cmp
stc
scas
adcb
mov
stc
cmp
dec
bswap
and
rclb
cmpsb
mov
or
btc
fcompl
xchg
insb
ret
inc
std
push
rorb
pusha
fildl
cmp
mov
pop
xchg
xor
ja
lret
loop
pop
push
push
or
loopne
leave
roll
push
inc
ret
xchg
or
and
leave
test
dec
mov
or
xor
pop
icebp
jge
test
push
rcl
sub
stos
testl
movsb
loopne
sub
sub
out
jp
mov
bnd
xor
jb
movsl
pop
cmpsl
aam
pop
or
fs
xchg
std
sbb
cli
gs
adc
mov
idivb
mov
out
nopl
test
popf
or
cli
jl
nop
xor
xchg
jnp
lcall
or
pop
fs
outsb
lods
test
gs
mov
repz
push
adc
xchg
addl
inc
clc
stc
aam
mov
ret
in
add
xor
pop
sbb
lods
stos
loop
pop
imul
push
jge
mov
out
xor
out
cltd
mov
pop
cmpb
mov
addr16
jecxz
dec
or
cmp
leave
sbb
jg
call
mov
jl
pop
loop
out
adc
mov
je
pop
std
cmpsb
push
mov
loopne
mov
push
call
pushf
fstl
pop
lcall
setnp
adc
ret
mov
push
pop
mov
je
or
out
push
sti
scas
ficomps
sbb
mov
sti
popf
xor
pop
inc
xchg
dec
shlb
dec
insl
and
addr16
xchg
loope
dec
jo
sbb
fidivrl
and
jecxz
es
xchg
mov
rolb
call
lds
sbb
test
iret
aaa
gs
fstps
clc
push
xchg
add
xchg
incl
pop
push
loopne
data16
xchg
mov
sub
adc
jo
adc
jbe
push
in
mov
add
and
jne
adc
bound
add
xchg
loope
or
fbld
inc
pusha
mov
adc
push
loop
mov
mov
adc
cmp
cmp
jl
mov
arpl
add
filds
rolb
mov
lea
divl
xor
fdivr
pop
and
imul
xchg
mov
hlt
das
sbb
in
xchg
pop
jge
jo
adc
xchg
rcl
cmpsl
into
pop
push
add
call
inc
adc
shll
subl
cmp
mov
mov
int3
jnp
sar
test
fdivrs
cltd
or
leave
mov
cmp
sub
adc
call
pop
add
loop
xor
push
sbb
dec
or
jae
popa
jns
xchg
inc
cltd
aad
aad
stos
inc
dec
fdivrl
cmp
bound
pop
std
and
push
sbb
push
das
or
sub
jnp
clc
scas
inc
pop
shl
pop
sub
arpl
clc
dec
cmp
js
adc
mov
pusha
sahf
push
xor
xor
shlb
adc
xor
lea
xchg
or
cs
sbb
loopne
ja
mov
iret
icebp
xchg
mov
xor
add
mov
idivb
repz
cmp
inc
out
push
push
adcb
aam
xlat
mov
leave
add
sub
sub
loope
sub
sbb
bts
add
xchg
adc
and
hlt
sbb
xchg
jae
and
in
add
ret
ja
leave
or
fsts
cmpb
sbb
mov
sbb
gs
add
cwtl
test
push
lds
dec
mov
mull
das
cmpsb
out
orb
int
pop
cmp
sahf
mov
pop
pop
shl
stc
cmp
arpl
inc
insb
mov
lds
mov
or
lds
push
jb
aam
push
inc
call
push
mov
nop
not
lcall
pop
scas
sub
xchg
dec
ds
jbe
dec
mov
loop
lods
add
loopne
movups
test
dec
cmp
enter
cmpsb
xlat
cwtl
rcl
push
loop
cmp
cmp
mov
jno
lahf
pop
add
xchg
sbbl
or
and
pop
lcall
xchg
dec
jb
adc
xor
jmp
js
das
mov
iret
shr
add
mov
push
pop
fisubrl
push
fxch
ds
in
adc
jp
hlt
or
inc
sub
push
data16
scas
jbe
lcall
or
mov
popa
cmp
mov
mov
and
adcb
cld
sub
xor
into
ret
pop
jns
mov
mov
repnz
in
daa
inc
lea
sub
imul
outsb
or
push
or
and
movsl
in
dec
test
sub
jmp
sarl
mov
outsl
lea
push
inc
add
mov
popf
sub
repnz
call
popa
cltd
mov
jb
sub
inc
pushf
neg
ss
lods
xorl
clc
lock
test
jle
outsl
ja
fisttpll
jmp
or
mov
idiv
and
push
aaa
aaa
mov
sbb
jp
cmp
ret
pop
adc
sahf
mov
rorb
stos
pop
js
push
insb
fs
in
xchg
xchg
mulb
inc
jne
leave
es
or
cmpsl
lods
or
and
out
loope
jg
test
insb
popa
mov
repz
popf
out
scas
inc
cmc
push
insl
movsl
mov
repz
pop
dec
lods
xchg
inc
push
jno
rol
in
mov
mov
inc
hlt
outsl
test
fldt
cmpsb
ljmp
clc
mov
sar
mov
jo
or
sbb
fbld
ror
and
rcl
scas
mov
xchg
mov
addr16
dec
lahf
mov
pop
dec
push
mov
mov
jno
jl
sub
jo
pushf
mov
dec
lret
mov
jnp
sti
adc
lret
addr16
mov
cmp
xor
mov
lds
pop
rclb
sti
mov
push
rcll
sub
sub
fs
mov
sub
iret
pop
es
out
xchg
push
push
dec
mov
movsb
jne
mov
sarb
jb
xchg
mov
xchg
push
inc
jp
jg
lock
and
clc
js
xor
ret
rol
lds
fistps
and
fcomi
and
fiaddl
pop
dec
xlat
lahf
sbb
inc
vpsubsb
sub
jo
movaps
adc
jno
scas
mul
inc
leave
pop
test
dec
sub
popa
mov
rorl
xor
imul
jo
or
lods
mov
jg
xor
sbb
pusha
xlat
stos
rclb
popf
lds
mov
xchg
loope
sbb
push
mov
dec
xor
xor
dec
test
les
imul
pushl
xchg
aad
add
ret
leave
pop
mov
mov
push
dec
xor
addr16
popf
testl
in
xor
dec
imul
lcall
or
pop
out
cmc
inc
jo
xchg
lock
call
add
pop
push
daa
adcl
or
icebp
mov
int
test
hlt
fsubrl
fdivl
test
out
inc
std
cmp
adc
xchg
mov
xor
pause
hlt
sbb
ficoms
lret
je
sbb
and
xchg
jl
out
jp
xchg
stc
push
popf
mov
jp
jo
fcmovnb
or
mov
flds
in
push
hlt
fisttpl
sub
paddusw
dec
std
lea
inc
xor
jle
fwait
incl
jge
xor
fnstsw
xor
mov
mov
adc
push
pop
cmc
loop
outsb
in
fildll
popl
fnsave
idivb
mov
sub
and
lea
sarl
out
jge
xor
pop
cwtl
jle
mov
cmp
cmp
popf
cmp
push
or
cli
leave
movsb
lcall
push
imul
popf
test
inc
xor
cmp
pop
into
fldl
das
push
test
lahf
sub
enter
pop
in
cltd
mov
or
movsb
push
ret
imul
push
and
jg
add
cs
mov
xor
mov
xlat
rcll
arpl
pop
loopne
hlt
fisttps
cmpsl
add
loope
cmpsb
pop
orb
push
fdiv
xchg
mov
aad
loope
dec
dec
lcall
js
xchg
out
adc
sar
xchg
sti
xor
cmpb
mov
aas
and
jo
dec
stos
negl
ret
sbb
leave
in
fnstsw
rorl
fwait
cmp
sub
push
iret
lods
jbe
push
stos
into
fisubl
push
call
jl
push
dec
ret
movsl
sub
sub
push
iret
jo
hlt
test
dec
pop
adc
jmp
imul
andb
repz
das
mov
push
pop
sbb
cmp
imul
outsb
mov
lea
popa
inc
and
sub
es
cli
inc
das
pop
lret
or
or
and
das
enter
imul
leave
lods
icebp
inc
mov
pushf
movsl
adcb
mov
xchg
jl
adc
mov
rol
repnz
sub
push
sbb
mov
repnz
mov
popf
jl
xchg
adc
push
or
cmp
cmp
addr16
int
arpl
or
dec
loop
cmp
push
dec
mov
loop
aaa
test
jae
dec
jmp
push
fcoml
mov
and
lret
jg
cltd
jmp
repnz
negb
in
clc
push
ds
mov
inc
mov
adc
popf
mov
lret
push
out
out
push
addb
sub
xor
ss
int
imul
adc
dec
xor
fwait
int3
pop
adc
jbe
in
ret
es
leave
js
sarl
inc
jl
cmp
xchg
fldcw
sub
mov
aaa
insl
shr
mov
out
push
jns
gs
dec
xchg
pushf
inc
test
dec
adc
xor
cmp
jns
xor
gs
or
pop
cmp
fnstsw
popf
pop
into
test
ds
pop
mov
js
cmp
pop
and
sbb
inc
sbb
cmp
cli
mov
pop
mov
lcall
ja
xchg
stc
cmp
inc
clc
xchg
mov
and
roll
inc
mov
les
push
mov
mov
es
leave
sbb
mov
aad
repz
aas
pop
lcall
or
mov
sbbl
jb
in
xchg
adc
push
cs
inc
and
pop
push
push
jno
stos
subb
leave
lret
sahf
add
push
inc
mov
lret
xchg
xchg
inc
cmpsb
inc
into
das
iret
lods
and
jb
lods
mov
dec
mov
mov
out
mov
fimuls
push
scas
xchg
lea
xlat
push
push
fcmove
iret
outsl
push
andl
lcall
mov
push
iret
loope
sub
pop
std
adc
in
jmp
fadd
es
push
int3
adc
mov
in
das
fcmovu
add
or
inc
inc
cwtl
sbbl
xor
pop
cmp
fwait
xchg
and
loop
rdmsr
pop
push
mov
cld
inc
cmpsb
icebp
add
aad
mov
adc
inc
cld
data16
popa
cmp
adc
insl
clc
int3
cmp
int3
add
add
ja
es
pop
fnstcw
or
xorl
pop
mov
std
test
xchg
dec
cmp
sbb
push
cltd
call
punpckhwd
mov
add
sahf
lods
in
mov
xchg
xor
sbb
mov
sub
cmp
push
fs
and
icebp
addl
dec
mov
pop
ljmp
dec
cmp
test
ljmp
fldenv
pop
je
xor
and
dec
pop
xchg
mov
rclb
out
into
loope
pop
stos
lret
mov
push
xor
dec
mov
icebp
ljmp
sbb
shl
dec
ss
or
xor
or
sbb
aad
jge
sbb
popf
shll
push
fsubl
pop
lds
mov
mov
jle
mov
filds
movsb
dec
mov
mov
cltd
lret
jns
aad
push
push
cmpsl
mov
push
cmp
inc
jns
jmp
fdivrl
cmp
xor
enter
adc
cltd
or
sahf
mov
xor
fnsave
cwtl
rorl
or
jns
mov
mov
out
enter
mov
movsb
jns
mov
mov
rcr
enter
jb
daa
lret
xor
pop
cmc
ds
lcall
push
push
jbe
mov
sub
out
gs
mov
jns
test
sbb
orb
in
mov
jmp
in
add
mov
lods
rcl
xchg
cmp
xchg
faddl
leave
pop
popf
scas
fnstsw
xchg
out
cld
mov
push
lods
movsb
ret
pusha
mov
fcomi
mov
cmp
aaa
das
xor
fsubrl
mov
pushf
lret
mov
int3
inc
hlt
mov
jg
sbb
cmpsb
xchg
adc
sbb
out
lock
push
ret
inc
jae
pop
sub
xor
imul
xchg
xor
mov
cmp
enter
inc
pusha
xchg
rolb
iret
jbe
scas
and
out
mov
sbb
ret
cmp
das
ja
stos
lcall
jnp
insb
xchg
push
insl
fwait
jns
add
icebp
ds
adc
or
ret
jo
cmp
sub
sbb
push
sub
mov
mov
loopne
stc
test
out
imul
bound
mov
nop
stc
mov
dec
or
mov
jb
adc
gs
mov
out
jecxz
and
xchg
fbld
pop
iret
xchg
mov
aaa
push
fidivs
push
cli
xchg
sbb
call
mov
loope
jae
xor
inc
arpl
adcb
insb
icebp
mov
arpl
sti
push
mov
jae
sub
xchg
popf
aad
mov
iret
mov
pop
or
jnp
and
fs
pop
insl
inc
and
push
mov
jge
xchg
pop
loop
inc
lds
outsb
sbb
andb
xor
inc
imul
jne
or
scas
pop
or
sbb
jl
jns
arpl
push
dec
lcall
test
fcom
pop
and
das
cld
add
js
test
pop
inc
das
pop
mov
or
cmp
cli
add
xor
and
stos
in
pop
jl
jb
imul
jge
ds
adc
pop
jb
imul
adc
gs
or
outsl
adc
cltd
inc
sub
xchg
pop
mov
and
adcb
adc
fwait
sbb
arpl
pop
inc
and
mov
in
jge
add
ljmp
xor
mov
dec
jmp
addr16
icebp
cmp
jne
mov
and
je
scas
scas
push
jecxz
inc
xchg
shlb
subl
fldcw
or
pop
jb
inc
in
add
jl
clc
data16
and
mov
mov
lahf
dec
cmp
push
imul
mov
push
dec
out
aad
push
addr16
or
xchg
push
and
insl
sahf
jae
xor
sbb
ss
adc
clc
adc
push
jae
scas
cmpsl
jle
jne
jmp
cmp
dec
mov
xor
ds
push
in
sbb
mov
push
or
stos
js
mov
mov
loop
jmp
out
or
xor
mov
mov
jo
leave
and
mov
or
inc
jnp
jmp
xor
and
dec
jb
jo
jb
push
adc
mov
lahf
xor
stc
jge
aad
hlt
mov
jae
sbb
in
fwait
adc
or
clc
add
rcr
xchg
in
xor
xlat
or
pop
sub
negb
rorb
fistpl
jnp
lcall
cmp
mov
jo
push
movsl
fbld
sub
sub
call
push
jl
into
mov
jg
or
bound
into
repnz
ret
lods
fists
jne
sbb
mov
sbb
lret
test
mov
out
dec
call
or
push
cmpsb
nop
sahf
daa
sti
cwtl
es
out
iret
fwait
push
and
dec
ds
ljmp
sti
scas
push
scas
movsl
in
into
xor
jno
ret
adc
int
mov
addl
or
ficompl
jge
stos
dec
or
stc
decb
aad
xchg
cmc
adc
jl
loopne
and
hlt
mov
mov
insl
mov
mov
cli
and
mov
and
mov
cli
int
mov
fbld
daa
ret
mov
roll
shll
push
into
jno
aaa
fmul
sbb
or
lock
inc
popa
mov
sbb
dec
jne
xor
ror
sarb
rol
in
lds
repnz
loope
cltd
lods
push
or
mov
dec
mov
mov
rcll
insl
and
daa
out
mov
or
and
dec
iret
jp
push
or
cs
imul
xchg
fs
repnz
jns
rcrl
mov
jnp
adc
insb
jo
in
dec
aam
xor
mov
xor
cwtl
and
hlt
testl
cwtl
fwait
insl
mov
xor
fcmovne
mov
or
xlat
idivl
ret
sbb
pop
sub
xchg
imul
jl
sbb
sbb
cmp
push
and
popa
std
mov
enter
or
cli
mov
prefetchw
lret
pushf
dec
push
mov
test
pop
xchg
cmp
add
mov
inc
mov
push
out
arpl
aaa
pop
and
in
mov
xchg
clc
int3
adc
xor
aad
push
sbb
arpl
push
lahf
cmp
insb
mov
cmp
and
mov
aad
mov
aad
push
out
arpl
fdivrs
scas
jbe
jae
mov
push
std
dec
inc
adc
arpl
dec
mov
stos
fistps
es
push
adc
and
cmpsl
fbstp
lea
in
mov
mov
cmp
add
cmp
loop
ret
aad
notb
mov
adc
adc
cmpsb
cltd
mov
sbb
outsb
mov
fistpl
mov
mov
inc
pushl
mov
or
rcll
call
jp
in
cltd
sbb
test
cmp
push
sub
pushf
movsl
sub
adc
dec
lcall
es
xor
jmp
test
lock
jg
push
imul
xlat
faddp
cli
mov
js
in
mov
mov
inc
ja
sbb
rcrl
inc
lahf
loope
arpl
dec
test
or
fdivl
cmp
into
addb
dec
xlat
ret
fsubp
fildl
jns
lret
xor
mov
cltd
cmc
and
pop
repnz
lcall
imul
nop
jecxz
xchg
in
lods
mov
fidivs
jmp
loope
jge
inc
sarb
mov
loop
mov
lahf
mov
out
bnd
pop
dec
movsb
cmp
rol
mov
jp
fisttps
int3
mov
int
mov
call
jnp
rdtsc
mov
outsl
or
add
aam
cmp
es
xor
jecxz
inc
fmul
in
mov
mov
lods
adc
pop
mov
jno
xchg
and
scas
fwait
adc
test
pushf
pop
or
mov
inc
mov
add
push
cmpsb
mov
mov
shll
push
rcrl
popa
and
loopne
inc
mul
sub
fildll
mov
mov
or
pusha
das
lahf
ljmp
mov
add
pusha
inc
call
adc
lods
dec
jb
sub
jo
xor
xchg
sbb
inc
sub
lahf
call
insb
push
addr16
outsb
mov
cmp
sti
ret
xchg
cmpsl
mov
or
adc
jb
xchg
sbb
cmc
fiadds
push
cld
inc
xchg
sti
push
or
xchg
lea
pop
je
test
jecxz
clc
cld
cmp
and
sub
inc
mov
or
pop
popf
inc
xchg
jp
inc
cs
fcoml
and
cmp
add
pushf
sub
or
fldcw
push
push
popf
sbb
loope
daa
popf
xchg
or
inc
jo
cmpsl
cmp
mov
ficomps
rorb
cs
ljmp
jecxz
pop
jno
test
pop
rolb
xchg
add
sub
fdivrs
fists
push
lds
movsl
addl
stos
data16
bound
in
mov
in
shl
popa
adc
or
and
fistpll
nop
mov
cli
addr16
xchg
mov
mov
xor
pop
lcall
ret
sti
loop
scas
xor
fcomi
sarb
push
cmc
mov
cmp
in
push
and
out
loop
mov
shll
jp
testl
dec
push
dec
fcoml
outsl
adc
leave
fs
sbb
test
pop
and
fsubl
cmpl
xchg
fwait
and
mov
adc
ja
mov
jl
rol
and
cmc
add
int3
inc
dec
and
pop
out
inc
jmp
jg
cmp
enter
adc
sub
repz
adcb
jmp
pop
and
dec
int
sub
sub
xor
sbb
jnp
mov
clc
in
push
or
orb
lods
pop
or
data16
stc
xor
cmpsl
addl
aad
ficoms
popf
outsb
testl
ja
pop
cmp
adc
lahf
ret
outsl
clc
lds
dec
testl
fcom
repz
lea
std
popf
adc
jns
jl
sbb
repz
dec
cmp
fidivrs
sub
out
lret
push
pop
negb
orl
mov
addb
pop
shll
sarl
repnz
out
pop
pusha
jmp
shlb
mov
adc
pop
rcrb
mov
mov
in
cmc
push
pop
xlat
adc
fsub
outsl
sbbb
in
das
jns
das
jns
mov
lret
cs
sub
faddl
add
sub
test
pop
push
call
mov
es
add
mov
inc
dec
xchg
push
dec
pop
scas
int3
xchg
sar
cli
aam
fimull
clc
pop
dec
and
or
push
lret
movsb
add
call
push
lahf
cmp
jns
jmp
test
pop
in
and
inc
incb
and
pop
dec
stos
cmp
and
addr16
iret
daa
daa
sbb
test
dec
loope
mov
sub
cmp
call
mov
je
sub
ja
push
das
loopne
setg
in
dec
inc
push
xchg
sbb
sahf
sbb
aad
insb
add
lret
mov
xchg
rclb
mov
loopne
jne
sbb
push
fsts
movsl
xor
dec
les
loop
lcall
test
nop
inc
aad
lods
sbb
pop
push
pop
push
mov
xor
pop
ja
mov
jb
call
daa
mov
jle
into
push
dec
lcall
notl
mov
mov
pop
sub
xchg
inc
jb
mov
fidivrl
fisubrl
cmc
pop
das
add
aad
repnz
xchg
mov
mov
mov
mov
cwtl
scas
xchg
stc
nop
test
imul
cmp
arpl
push
gs
orb
xchg
ja
int3
rcll
push
inc
jmp
dec
lret
adc
std
stc
inc
ljmp
fstpt
xor
pop
pop
pop
pusha
pop
imul
xchg
imul
cs
add
pop
or
jge
mov
cmp
xor
rcll
pop
pop
test
or
jnp
or
push
fdivl
jbe
sbb
daa
lods
push
and
cltd
cmp
dec
out
or
cltd
rol
mov
pop
mov
or
pop
mov
shrb
movsb
aaa
clc
xchg
and
xchg
idivb
mov
js
cmp
sub
sahf
in
loop
and
insl
xchg
xchg
repz
jmp
xor
xor
jp
xorl
addr16
adc
push
call
and
push
inc
mov
repz
and
sub
std
dec
jp
enter
mov
lret
jbe
or
fmuls
mov
cmp
and
scas
int3
cmp
cs
pop
jle
dec
or
jns
jg
adc
push
stc
stc
loopne
adc
and
hlt
adc
fsts
inc
xor
notb
and
push
lret
pop
or
fistps
out
loop
add
sub
movsb
xlat
fsubrl
std
fs
dec
sbb
rol
inc
sub
dec
das
pusha
jne
movsb
repnz
cmpsl
pusha
jb
and
ret
xor
call
adc
call
push
int3
push
and
sar
leave
jmp
das
add
adc
repz
sbb
dec
in
scas
xchg
mov
aaa
pop
xchg
pop
jbe
sub
xor
repnz
xchg
fidivrs
gs
ffree
je
xor
stos
lock
cmpsw
pop
adc
pop
mov
jl
jg
inc
sub
or
push
inc
fcmovnb
ss
js
dec
jo
and
inc
adc
cmp
addl
nop
jl
leave
pop
sub
test
adc
out
sbb
jg
jb
sub
mov
fwait
inc
inc
jae
mov
adc
add
imul
mov
popa
mov
les
cmp
outsb
add
fnsave
movsb
inc
lods
sub
xchg
cmpsl
jae
fimuls
push
lret
jl
call
aad
loope
sti
inc
add
jg
mov
mov
sbb
sbb
push
cmp
mov
mov
flds
or
jp
idivb
adc
cli
mov
xchg
jg
xchg
test
cltd
xor
lods
sarl
call
push
dec
sahf
mov
fs
test
xor
jg
in
movsb
add
iret
and
dec
pop
nop
sahf
roll
inc
xor
and
loopne
push
adc
sbb
xor
jo
gs
inc
adc
sub
or
bound
int3
mov
or
cmp
and
xchg
gs
push
xchg
shlb
and
lea
adc
sbbb
into
loope
sub
aam
dec
insl
movsb
stos
lods
cli
shlb
or
dec
clc
push
mov
aad
push
add
mov
add
sbb
out
pop
arpl
das
sub
in
and
rolb
dec
lea
in
mov
push
shll
push
imul
xchg
movsw
mov
lds
dec
pop
cmc
enter
dec
js
add
lcall
adc
or
sub
aad
sbb
nop
scas
roll
nop
mov
sbb
gs
xchg
push
das
sarl
mov
fcmove
dec
sti
mov
repz
out
cwtl
out
jbe
lret
js
push
mov
mov
leave
sbb
bound
sahf
mov
cmpsl
mov
in
cltd
clc
pop
divb
fnstenv
lret
fbstp
or
push
and
scas
and
mov
push
call
xor
adc
xchg
and
fstpt
aam
mov
fwait
imul
sbb
fwait
leave
notl
fstl
lds
dec
mov
or
cwtl
mov
in
icebp
adc
decl
xchg
iret
cs
xorl
jns
and
cmp
int3
mov
sub
xor
push
xchg
push
cmpsb
loop
sub
dec
xchg
jo
arpl
jb
inc
fwait
int
push
dec
xor
aas
jp
dec
or
fcmovne
or
in
add
and
sarl
lods
or
and
scas
jae
sbb
cmc
xor
or
fbstp
cmp
jb
cmpsb
cmp
or
mov
sahf
pop
xchg
ljmp
cmp
xchg
and
fucomip
adc
shrl
mov
xchg
inc
xor
dec
loop
cmpsb
dec
and
lods
cli
push
sbb
movl
hlt
cmp
loop
xor
mov
je
sub
aam
cmpsb
jg
push
lods
test
xchg
or
ret
jbe
sbb
in
insb
imul
rclb
paddsw
ret
cwtl
lea
cmc
scas
dec
inc
test
pop
jns
inc
in
lds
jne
frstors
xchg
cmp
pop
std
push
or
in
out
std
or
dec
adc
cwtl
jecxz
iret
test
or
push
add
jae
test
dec
dec
add
mov
fdivrl
cmpsl
add
std
test
cmpsl
cmc
mov
stc
mov
and
or
dec
or
insb
ja
mov
out
sbb
sbb
movsb
mov
cmc
bnd
adc
xor
shlb
jo
cmc
fistl
outsl
pop
movsb
jnp
stos
jmp
faddl
push
scas
inc
inc
loopne
mov
bound
fimuls
inc
pop
sbb
fnstenv
adc
lret
dec
out
lcall
outsl
dec
pop
mov
ficoml
jo
cmp
rorb
aam
andl
je
dec
and
push
mov
loop
cmpsl
popf
ficompl
adc
addr16
dec
mov
add
std
cld
sub
mov
ds
add
pop
dec
pop
rorl
dec
lcall
push
cli
movsl
into
sbb
push
fmul
cmc
adc
mov
das
in
nop
js
add
hlt
shl
aaa
jmp
sbb
loop
or
les
push
lret
lods
cmp
pop
xlat
pop
mov
mov
lret
aad
and
mov
ja
gs
jl
mov
cmp
test
jge
lcall
cld
roll
inc
aaa
add
rcrl
call
mov
mov
shl
and
rcl
in
cld
inc
lahf
push
stos
int
scas
inc
or
push
or
xchg
addr16
xorb
push
jae
push
ss
adc
fbstp
or
inc
mov
movb
fwait
sbb
push
insb
jp
jns
inc
xorl
jle
cmp
icebp
jbe
and
jno
xchg
cmp
imul
cmp
fmuls
nop
jecxz
lds
push
pusha
fsubs
xor
outsl
js
call
and
cmpsb
fsubs
shrl
mov
repz
jo
inc
cmp
and
cmpsl
pop
xchg
push
add
stc
pushf
bnd
mov
cmpsl
cmp
adc
stc
lahf
jns
roll
fdivs
xchg
rorl
push
xchg
lods
scas
fwait
sbb
shlb
rol
adc
mov
xchg
aas
or
jmp
lea
sbb
inc
iret
fadds
jge
jne
cmp
sbb
adc
popf
xor
stos
les
test
jp
add
mov
cmp
loope
stc
shl
lcall
push
inc
jmp
mov
adc
xorb
sti
pop
lret
dec
xor
push
daa
inc
lods
idivb
int3
pop
add
and
sbb
xor
jmp
ja
test
jle
xchg
mov
in
jns
jo
mov
and
mov
adc
cs
arpl
fs
mov
xchg
xor
bound
icebp
test
add
push
cmp
lods
into
or
test
sahf
sti
jns
hlt
jns
insb
imul
dec
hlt
mov
pusha
ljmp
sbb
dec
fbld
movb
repnz
pop
sbb
or
dec
iret
mov
push
addr16
xchg
or
mov
js
xchg
push
repz
mov
and
in
pop
dec
adc
push
cmp
pop
mov
pop
add
stos
in
test
aaa
mov
adc
pop
xor
xlat
or
sub
fldcw
xlat
ljmp
cmp
std
adc
inc
repz
and
rcrl
sub
inc
sub
lret
pop
xchg
dec
negb
shrb
push
mov
inc
aam
bnd
popa
xor
cli
or
roll
faddl
ja
inc
mov
pand
sub
enter
out
iret
clc
loop
iret
lock
nop
mov
pushf
fldl
pop
mov
cmp
mov
mov
fdivl
pop
sub
xchg
cmp
ret
xchg
inc
mov
inc
imul
lret
pushf
ljmp
add
int
push
lods
pop
add
and
movsl
jle
ljmp
mov
sahf
insb
or
sbb
add
lcall
out
and
dec
call
hlt
int3
int3
std
loopne
stos
sbb
pop
fs
add
fnsave
xchg
pop
jo
jns
mov
inc
loopne
in
xchg
adc
jecxz
shrb
scas
repnz
xchg
mov
ss
gs
daa
adc
nop
repnz
or
xchg
mov
loop
jg
leave
enter
cs
icebp
dec
pushf
inc
push
in
pop
sbb
pushw
mov
sub
xor
inc
sbbl
or
scas
cmp
bound
lahf
das
loope
sub
imul
sub
stos
xchg
out
xor
dec
push
xor
sub
pop
adc
data16
sahf
inc
xchg
rcrl
mov
add
lods
cmp
scas
xor
and
ret
mov
popf
repz
mov
or
int3
mov
mov
icebp
and
ljmp
mov
cmpsb
add
dec
mov
jo
xchg
data16
in
inc
popl
or
jge
push
sub
xacquire
sbb
mov
push
rolb
adc
outsb
lahf
adc
test
cmpsl
imul
pop
inc
pop
repz
mov
stos
dec
jecxz
cmp
incb
push
and
push
ds
dec
rorl
push
addl
and
dec
sbb
nop
dec
scas
xchg
xchg
mov
push
adc
dec
cmp
sbb
xchg
dec
push
pop
test
cmp
lret
or
jne
push
scas
add
push
xchg
xchg
sub
mov
push
divb
pop
sub
enter
and
ss
and
test
mov
enter
in
xor
sti
in
movsb
les
sbb
in
add
xchg
sbb
push
jo
dec
loope
jg
jmp
xor
inc
sub
jecxz
popf
cmp
imul
push
mov
int3
xor
lods
out
jo
push
sub
popl
xor
loopne
pop
scas
pop
xor
in
out
sub
mov
mov
or
or
ss
testb
xchg
cmpsl
mov
dec
popa
mov
enter
das
fildl
sbb
sub
testl
fs
loope
aaa
mov
imul
lahf
cltd
jp
mov
mov
cmc
mov
sub
inc
sarb
pop
fidivrs
fimull
sub
jle
test
mov
jbe
mov
insl
mov
or
or
pusha
in
leave
cmp
ret
lahf
ljmp
xor
imul
aad
mov
lds
mov
push
and
repnz
jne
mov
arpl
insl
mov
cmp
cmpsl
dec
shll
jae
sbb
mov
jecxz
jbe
dec
int
out
fisubrs
sbb
or
aas
mov
shlb
cmp
in
out
cmp
sbb
mov
inc
sti
add
dec
cwtl
fwait
xchg
das
push
and
rolb
pusha
push
mov
inc
pop
mov
ss
mov
ds
add
jle
mov
mov
cmp
fiaddl
pop
dec
push
xchg
movsb
sbb
cmpsl
imul
mov
aaa
lret
addr16
insl
repz
mov
mov
leave
jno
and
inc
je
sahf
jnp
aaa
jecxz
bnd
mov
outsl
les
xor
adc
ljmp
stos
inc
scas
pop
sbb
mov
sbbb
mov
cmpsb
in
adc
mov
iret
mov
xchg
xor
popf
xchg
sbb
clc
jp
mov
in
sarb
rorb
incb
xor
add
addl
movsb
dec
add
insb
sub
mov
add
shlb
xchg
xor
sbb
inc
mov
jl
mov
gs
pop
xchg
lret
enter
fiadds
jmp
cltd
jecxz
movl
sbb
incl
sbb
testb
pop
test
test
enter
in
loop
xor
jb
dec
aad
jns
roll
lock
es
or
inc
add
mov
inc
outsb
push
mov
xor
adc
nop
js
scas
cmp
stos
inc
mov
xor
xor
or
or
in
hlt
aas
mov
ds
mov
inc
dec
push
cmpsl
and
inc
fisubs
aad
enter
movb
pop
jp
push
and
mov
dec
add
ja
addr16
shrb
iret
sahf
out
and
jecxz
add
repz
arpl
add
push
mov
pushf
gs
dec
xor
inc
testb
sub
add
mov
pextrw
mov
loope
test
push
xorl
mov
dec
out
mov
lods
movl
push
jg
mov
mov
ljmp
push
and
xor
rolb
sbb
popf
jp
fmul
inc
js
mov
sbb
hlt
push
adc
repz
xor
and
sbb
add
aas
insl
int3
lods
xchg
shlb
lret
inc
mov
push
xchg
idiv
insb
sbbl
dec
imul
stos
sbb
shll
push
push
out
sbb
jmp
sbb
or
mov
or
xchg
lock
mov
jl
lahf
in
add
xlat
xchg
cmpl
js
adc
inc
adcl
loope
sbb
inc
and
imul
push
je
jmp
pop
pop
fisttpl
mov
scas
jb
xor
sbb
mov
xor
popa
dec
fsub
or
call
aad
xchg
ss
add
cltd
std
jbe
and
xor
mov
jecxz
mov
sub
into
pop
hlt
in
cli
push
cmp
and
outsb
stos
orl
mov
push
mov
das
xchg
xchg
stc
rcrb
pop
sbb
aam
push
push
lea
xor
xchg
je
mov
movsl
jle
mov
movsl
loopne
cmp
pop
pop
repz
add
and
lret
mov
pop
xor
and
call
xchg
mov
imul
stc
mov
pop
cmpsb
fcoml
pop
es
mov
sub
in
dec
xchg
or
stos
xor
repnz
add
pop
dec
lahf
jns
cmp
add
xchg
sahf
sbb
and
xchg
aaa
adc
shrb
cltd
fidivs
pop
xor
or
xchg
jbe
xchg
xor
sub
push
leave
jmp
mov
lret
movsb
mov
insl
add
adc
push
lret
inc
int3
and
out
in
mov
and
mov
orb
or
pop
xlat
inc
sahf
pop
rolb
aad
add
loopne
push
push
or
sub
cmp
inc
lret
aad
dec
sbb
dec
imul
flds
adc
stos
rclb
or
daa
iret
adc
pop
aas
or
in
mov
stos
sti
inc
in
pop
mov
setp
jo
stos
std
pop
xchg
das
repz
out
test
test
sub
lret
pusha
in
jg
lea
push
mov
adc
lret
xchg
shrb
loop
dec
movsl
xor
loopw
push
bound
outsl
jbe
stos
jo
inc
aad
mov
icebp
out
sbb
pop
ret
je
jecxz
and
inc
jae
mov
and
sbb
aaa
dec
and
ret
add
inc
cltd
insb
adc
mov
lcall
sub
mov
stc
test
sahf
sbb
and
in
mov
sub
sti
data16
xchg
shll
pusha
xlat
push
fmull
scas
paddsw
sar
and
cli
call
dec
push
imul
and
mov
cmp
push
rcrb
xchg
add
inc
arpl
daa
push
fldenv
or
ficomps
je
out
mov
jle
or
pop
mov
xchg
nop
ss
jb
sbb
mov
push
jno
mov
scas
cmpsl
sub
popa
pop
push
sub
lds
test
mov
jle
push
ja
dec
or
sti
aam
xchg
gs
mov
push
mov
aad
das
sub
dec
scas
pop
or
cmp
negb
inc
push
pop
out
jl
ss
sub
sub
adc
sbb
inc
movsb
rcl
cmpsl
push
and
addb
neg
movsb
inc
or
adc
imul
and
lcall
inc
rcl
cmp
test
hlt
imul
push
xor
subb
cld
mov
cs
add
xchg
lret
dec
aad
xor
ljmp
jmp
jne
mov
ljmp
popa
mov
xchg
out
stos
ljmp
jno
xchg
jae
and
fnstsw
inc
and
and
add
stos
arpl
pop
xchg
push
jle
and
lods
fmuls
out
pop
xchg
inc
shlb
aam
and
clc
pop
sub
repnz
int
das
xor
stos
inc
pop
jl
xchg
fnstcw
loope
cmp
inc
and
mov
mov
push
jne
movsb
jmp
test
mov
sub
notl
sbbb
fbstp
inc
and
push
inc
jmp
sub
sbb
aas
xchg
dec
arpl
sub
arpl
test
dec
or
or
fldt
mov
sub
mov
cmpsl
js
push
pop
dec
int
push
jmp
cmp
fists
jno
pop
add
insl
imul
and
pop
jge
jmp
fst
loop
scas
jnp
ret
mov
inc
push
pop
pop
inc
xorl
in
mov
dec
stc
cld
push
insb
pop
sarb
mov
inc
movsb
leave
mov
lock
idivl
rorb
or
cli
push
xor
aaa
add
push
scas
movsl
jbe
rol
add
movsb
push
mov
sub
mov
ja
sub
cmp
cltd
adc
and
repz
mov
pop
xor
and
popa
inc
jb
enter
push
jnp
orb
jns
icebp
xchg
scas
jae
subps
push
push
xor
int
pop
movsl
test
in
lods
mov
clc
xchg
daa
xchg
lock
mov
mov
lods
fidivrs
inc
jbe
or
dec
jge
mov
loopne
cs
loop
mov
mov
rclb
fisubs
xor
hlt
or
std
mov
dec
js
jl
fdivrs
gs
cmpsl
push
jno
and
xlat
and
pop
mov
add
test
gs
inc
push
gs
jns
jbe
clc
insb
inc
push
leave
pop
mov
mov
aad
rorb
test
mov
pop
mov
jp
inc
pop
sar
stos
test
fdivrl
lahf
mov
dec
out
jne
sarl
push
in
addl
add
add
mov
out
jnp
dec
iret
mov
sub
adc
in
lahf
inc
adc
pop
pop
rcrb
or
mov
pop
loope
mov
mov
fldl2e
mov
mov
lds
int3
jns
inc
pushf
mov
mov
sbb
jbe
cmp
shlb
inc
cltd
pop
jle
sbb
lret
mov
test
popa
mov
ljmp
push
jmp
in
into
fisubl
mov
mov
push
sbb
sub
mov
adc
daa
lock
pop
cmp
imul
cmpsb
rorl
fwait
mov
xchg
mov
adc
xorl
mov
xchg
sub
xor
add
jmp
stos
jo
into
pop
lods
cmc
push
xchg
xor
push
outsb
mov
jmp
xor
xchg
sub
pop
loopne
das
clc
and
mov
loopne
testl
push
push
fwait
push
fistpll
imul
and
mov
mov
and
xor
xor
jae
std
sub
int
sahf
dec
or
xor
sbb
popa
push
not
mov
mov
jo
imul
pop
mov
adc
add
mov
in
imul
jne
jo
xchg
ret
repz
testl
leave
les
js
subl
xchg
in
fbstp
pusha
out
das
scas
xor
daa
in
fwait
sbb
cmpsl
movsl
dec
rorb
xor
cmpsb
sbb
pop
lods
cmp
test
icebp
xor
sub
scas
xchg
jg
mov
inc
inc
cwtl
ja
std
add
inc
and
in
lea
imul
in
add
mov
jg
inc
jns
loopne
arpl
cmpsb
inc
adc
imul
jge
pop
and
mov
or
stos
mov
ja
mov
mov
mov
test
sbb
mov
dec
sub
js
aad
or
push
testb
xchg
xor
or
lret
add
and
pop
xor
mov
cmp
mov
push
comiss
mov
xor
leave
imul
sub
int
shl
ljmp
push
xchg
mov
fistpll
jne
es
loopne
mov
cltd
ret
loopne
aam
stos
fadds
jo
cmpsb
hlt
scas
insl
pop
jae
in
xchg
xor
xchg
cmp
mov
flds
adc
jl
xor
mov
jmp
jb
adc
call
adcb
xor
jle
cli
xor
scas
cmpsl
int3
out
rorl
scas
in
jns
xchg
jns
push
ret
test
add
ss
dec
pop
fwait
enter
push
xchg
sub
inc
cmp
out
aas
popa
pop
ficompl
mov
mov
sarl
scas
and
fimull
mov
mov
loop
stc
push
jecxz
add
and
add
cmp
xchg
mov
fsubrp
jmp
push
shrl
pop
mov
js
inc
add
mov
mov
or
and
or
std
push
mov
fmull
inc
mov
mov
pop
adc
inc
fwait
push
in
ljmp
or
pop
adc
inc
dec
repz
insb
xor
push
stc
fstl
addr16
mov
popa
pop
add
lret
push
mov
adc
sarl
lea
inc
or
mov
or
fistpl
sbb
cmp
inc
movsl
jo
mov
lcall
cwtl
inc
xor
push
scas
dec
sbb
int3
dec
lcall
mov
dec
mov
lcall
lcall
loopne
and
xchg
gs
loopne
mov
adc
adc
sbb
arpl
and
cli
daa
cmp
adc
in
daa
cmp
pop
sub
mov
fnstsw
jmp
clc
sbb
or
fiadds
int3
mov
rcrb
pop
scas
pop
inc
or
dec
mov
push
sub
imul
ficoms
xor
push
add
mov
pop
inc
xchg
and
jl
fwait
mov
in
dec
cmp
cs
and
je
fxch
movsl
mov
aaa
sahf
out
dec
and
pop
std
std
hlt
cmp
cltd
adc
sti
and
cmp
js
mov
dec
xor
and
lret
pop
adc
cmp
mov
mov
adc
aam
mov
scas
shrl
cmp
xor
xlat
fdivl
pop
xor
ret
stos
dec
cwtl
sbbb
out
and
or
loope
or
in
pushf
dec
leave
push
push
fmuls
sub
push
dec
jno
dec
stos
lret
cmc
cli
cmp
dec
pop
mov
clc
int3
jmp
adc
idiv
or
mov
push
icebp
pop
je
mov
and
rcr
pushf
repnz
andb
adc
mov
orl
popa
pop
mov
mov
pop
pop
mov
or
je
mov
cld
jl
jne
pand
stc
and
pop
xor
xchg
inc
add
xor
sub
pushf
and
fildl
jle
cmpsb
mov
lahf
pop
jo
in
dec
mov
dec
or
shrl
add
xlat
testb
int3
jp
sub
adc
lahf
sub
xchg
jnp
jb
lret
jno
pmullw
sti
movl
cltd
in
jp
mov
fimull
push
mov
push
fcomip
push
cwtl
std
loop
xor
or
cld
push
jbe
cld
ret
fstpt
icebp
sbb
xor
sbb
add
sbb
push
scas
popf
mov
push
cwtl
fildl
scas
ja
test
inc
inc
add
rorl
mov
lods
or
or
and
or
int
lcall
pop
xchg
dec
sbb
and
xchg
ljmp
adc
pop
inc
cmp
ret
js
mov
dec
fsubrs
or
and
jae
enter
fwait
inc
lock
cwtl
and
cmpl
pop
pop
iret
dec
jnp
jp
jns
in
fadds
dec
cmp
adc
test
jg
bound
std
sbb
add
arpl
ds
fdivrs
bndstx
pushf
mov
inc
mov
push
adc
xchg
and
xchg
push
aas
loope
sbb
popa
cmp
push
outsl
cmp
in
ret
dec
loopne
pushf
and
or
cmp
nop
gs
je
push
push
cmp
sbb
fistpll
das
sti
push
sbb
int3
adc
mov
mov
test
xchg
hlt
jb
inc
popf
add
fistl
sbb
cmpsb
lahf
stos
mov
sbb
mov
inc
pop
nop
xchg
pop
mov
inc
lret
xchg
orb
sbb
mov
fsubrs
and
cmp
mov
jbe
sbb
sbb
mov
rol
xor
and
rclb
in
loopne
or
mov
mov
xchg
xor
pop
pop
and
jns
shlb
cmp
push
aaa
paddsb
stos
dec
jp
inc
icebp
add
mov
mov
sbb
aam
loopne
cmpb
cmp
cmp
fcomip
mov
dec
popa
scas
fwait
imull
inc
or
pop
lock
fisubrl
cmp
je
sti
xchg
dec
and
daa
pop
dec
cmp
add
xchg
scas
bound
dec
nop
inc
jb
mov
and
repnz
sti
add
jl
adc
pop
add
sbb
xchg
jae
mov
xor
mov
mov
mov
lret
movsl
stos
ja
aam
test
bound
in
and
out
sub
iret
ja
adc
sbb
mov
rcr
aad
inc
adc
mov
cli
pushf
hlt
add
pushf
sbb
ret
int
outsl
loop
data16
aas
cmp
xchg
jl
fidivrs
jns
out
fstps
ret
cmpsl
test
scas
pop
enter
movsb
mov
je
aaa
insb
or
sbb
add
or
in
lahf
gs
jns
jnp
push
jb
or
push
cmpsb
stos
fidivrl
lret
jmp
and
pop
and
sbb
jmp
sub
inc
imul
test
mov
imul
lret
addr16
mov
xchg
adc
out
shll
pop
incl
xor
and
jno
xlat
push
pop
ret
gs
lcall
imulb
push
adc
pop
jae
inc
inc
mov
aas
jmp
add
jle
jge
sub
aaa
mov
bound
cltd
xor
adc
add
test
push
ret
fstps
dec
xlat
push
push
daa
pop
ret
das
mov
jae
jnp
test
pop
cmp
pop
rcll
lock
dec
aad
adc
sarb
and
scas
in
leave
ljmp
lea
dec
lock
jl
inc
jge,pn
mov
push
mov
in
int
and
das
cmovo
dec
ret
rorb
push
add
pop
jae
sub
xchg
push
mov
sub
cmp
cwtl
push
rcrl
daa
mov
into
sti
int3
cmp
fistpl
orl
xchg
fbstp
push
pushf
adc
sbb
add
xchg
mov
lret
cmpsb
inc
xor
aaa
push
or
cmp
xor
lret
xchg
std
inc
inc
inc
add
in
movl
pop
and
cmpsb
jmp
push
shrl
sub
xor
out
xcrypt-ecb
cmpsl
mov
xlat
les
push
out
xor
stos
aad
mov
and
in
inc
cmpb
push
cmp
inc
je
mov
jae
cmp
mov
mov
aas
xlat
stos
icebp
push
pusha
in
mov
fcoms
mov
push
popa
mov
les
add
adc
pop
fcompl
fidivrl
aad
inc
cmpsb
dec
bnd
lods
push
nop
xor
mov
int
mov
pusha
jae,pt
in
jb
xchg
test
xor
cli
xchg
sub
mov
and
stc
insl
frstor
and
push
adc
push
push
jne
out
cmp
js
mov
cwtl
xchg
call
xor
push
icebp
das
jecxz
pop
or
ret
push
scas
out
lods
pop
es
fsubrs
mov
dec
pop
mov
mov
jmp
mov
addr16
xor
or
cmpsb
enter
mov
mov
cmp
and
jecxz
pop
xorb
lea
iret
push
shrl
xor
aam
lock
sahf
push
stos
cltd
add
daa
push
cmp
cmpsl
in
imul
mov
inc
aaa
iret
cmp
pusha
push
rorb
icebp
popa
lahf
enter
hlt
das
cld
pop
inc
rolb
ret
int
mov
imul
out
lea
js
insl
cmc
adc
scas
add
dec
jns
jae
xchg
pop
mov
out
mov
xchg
dec
enter
or
cmpsb
int
push
xor
imul
mov
insb
jns
jbe
sub
in
push
daa
mov
xor
mov
shlb
mov
loopne
data16
dec
cmc
xchg
stc
dec
dec
testl
adc
mov
and
mov
int3
test
jl
inc
cwtl
outsb
data16
mov
ja
test
pop
jnp
sub
ds
adc
and
inc
adc
loope
jle
nop
cmp
pop
xchg
cmp
xor
movsb
push
sbb
adc
inc
xor
dec
mov
fisubrs
or
xlat
ja
gs
icebp
inc
and
incl
mov
push
xor
cmc
pop
ja
pop
pusha
and
dec
jle
incb
pop
push
xor
mov
sbb
lret
lea
mov
pop
repnz
push
adc
inc
repnz
lock
or
xchg
cmp
gs
cmpsb
inc
movsb
loop
xchg
es
fiaddl
iret
push
popa
lea
pop
push
lahf
dec
dec
mov
inc
push
adc
lods
push
xor
out
rcrl
mov
test
mov
mov
cld
inc
inc
cs
jmp
mov
inc
lea
daa
aas
push
pushf
pop
xor
rcll
ficoms
into
dec
xchg
cli
sbb
stos
lcallw
inc
nop
mov
sbb
xchg
pop
aam
xor
les
dec
nop
push
pop
icebp
sub
ja
cmp
int
sahf
add
clc
int
xchg
scas
xchg
cmc
fcompp
les
push
inc
push
inc
ljmp
push
push
sti
xor
xor
sbb
divb
jnp
sbb
fcomi
int3
push
lods
dec
loop
add
fsincos
adc
lods
xchg
imul
dec
add
lea
ja
jns
js
jle
jno
pusha
and
pop
add
pusha
inc
scas
sbb
int
pop
cmp
lds
sub
pop
iret
pop
dec
and
xchg
pop
pusha
ds
outsb
sbb
xchg
sub
cld
mov
push
pusha
lods
sub
enter
shll
aam
into
les
lock
je
test
push
std
add
fnstsw
in
enter
or
ret
popf
clc
xor
jns
inc
sub
inc
add
xor
stos
adc
ret
lds
hlt
sarl
sub
sbb
adcl
or
out
movsb
test
jo
icebp
pusha
lea
inc
movsl
mov
in
or
inc
cmpsl
jno
xor
sbb
rorl
xor
divb
xor
mov
adc
lcall
dec
test
xchg
adcb
mov
sbbb
pop
subb
jecxz
push
lret
adc
dec
dec
test
xchg
ret
aaa
or
pop
cmp
jo
ret
mov
push
stc
mov
lret
and
lds
xchg
push
cmp
repz
sub
mov
repz
inc
xor
add
inc
ja
pop
imul
mov
pushf
ret
popa
test
cld
iret
xorb
push
movsl
pop
sub
loop
or
sub
push
xchg
and
popa
lret
imul
hlt
sub
xchg
sub
mov
mov
mov
je
xchg
add
out
adc
cmp
test
ds
std
push
mov
mov
int
call
test
adc
mov
dec
int
test
into
or
movsl
lahf
ljmp
add
std
and
out
shlb
push
pop
push
push
imul
cwtl
mov
aam
fstps
cmpl
in
insb
sub
sub
bound
mov
adc
inc
daa
daa
sbb
push
push
inc
frstor
xchg
jae
pop
aas
cmpl
sbb
xor
dec
addl
push
and
scas
or
stos
mov
inc
dec
jmp
call
xorl
call
xor
push
sbb
out
rclb
fsubr
movsb
rorb
lea
add
cmp
jg
cmpsb
fildll
cmc
mov
inc
sbb
sbb
gs
sbb
mov
cltd
push
or
or
lods
test
lock
out
xor
mov
mov
cmp
jecxz
and
xchg
sbb
bound
cmpsl
imul
jbe
and
repnz
stos
mov
xlat
rep
inc
movsb
add
lret
xchg
add
mov
sbb
in
adc
sbb
in
sarl
mov
cmpsb
stos
cmp
dec
movsb
iret
outsb
mov
xlat
lret
ret
push
and
cmp
xchg
rcr
inc
mov
mov
add
lods
push
pop
mov
gs
sbbl
jge
stc
cld
loopne
roll
cwtl
sti
testb
jb
push
adc
scas
add
or
jns
insb
dec
scas
sbb
lods
cli
stc
mov
fwait
in
leave
add
push
xchg
pop
xchg
sbb
xchg
lret
mov
sub
outsb
add
lods
fwait
sbb
xchg
rol
sub
dec
insl
outsl
sub
addb
stc
outsb
dec
cld
js
mov
inc
dec
fwait
push
pop
mov
cwtl
xor
jl
jmp
leave
data16
movsl
aaa
mov
je
popf
stos
pop
addr16
sub
scas
ss
ret
mov
aas
fidivs
xor
jns
sub
loope
test
out
dec
movsb
xchg
int
jecxz
mov
imul
rcl
mov
lcall
jmp
int3
push
and
loopne
test
int
jae
sbb
dec
cmpsl
mov
sub
pop
cs
cld
test
push
das
sbb
and
sub
stos
pusha
andl
jp
lret
mov
pushf
pop
testl
jecxz
xchg
inc
shll
enter
popa
mov
xor
mov
int3
outsl
push
pop
pushf
and
jae
and
pop
pop
mov
add
js
out
pop
cmpsl
mov
into
pop
xchg
jecxz
iret
dec
xchg
sbb
rcrb
in
mov
jns
mov
fcomps
out
and
sbb
xchg
lcall
into
rolb
icebp
ret
cmp
or
cwtl
sub
cmp
subb
movsb
push
add
clc
or
mov
imul
out
stos
cmp
sbb
xchg
sahf
xchg
or
mov
pushf
jmp
cmp
xchg
cltd
pop
movsb
ja
das
mov
xchg
cmc
jecxz
ss
lds
mov
lock
xor
push
rcrl
movsl
lds
cmc
cmp
cmovbe
xlat
ret
adc
xor
std
aas
ljmp
in
fstps
pop
jb
aas
mov
aas
mov
addr16
add
or
scas
push
int
push
dec
adc
test
xchg
fistps
push
ret
sar
loope
sbbl
add
ja
cmp
xor
or
and
mov
push
nopl
notl
cwtl
stos
stc
insb
sti
iret
push
jecxz
test
shlb
push
cmpsl
xchg
cmp
fimull
jl
inc
sub
sub
mov
jb
sub
xor
out
mov
dec
xchg
sbb
roll
mov
jmp
mov
aaa
mov
mov
adcl
popa
in
jg
fdivrs
or
in
out
fistpl
lcall
add
xorb
xchg
test
jae
and
jecxz
jne
mov
fs
add
mov
xor
mov
adc
jb
je
js
cltd
lock
jno
dec
push
mov
jnp
xor
leave
mov
adc
mov
mov
cmpb
int3
and
scas
mov
xor
jle
mov
cmp
mov
sbb
addb
xor
mov
inc
lea
jae
sub
cmp
out
or
pop
inc
into
and
jl
cmp
cmc
dec
and
jmp
insb
push
or
aas
jmp
test
xchg
sbb
addl
or
cmpsl
imul
jl
sarl
mov
sbb
inc
inc
mov
test
xchg
loop
popa
ds
es
nop
xor
inc
pop
mov
test
into
jle
iret
leave
lods
leave
cmpsb
cmpsb
jb,pn
inc
cltd
fnsave
insl
movsl
adc
lahf
inc
into
mov
hlt
cmp
push
sub
hlt
nop
sarl
mul
rclb
cmc
or
adc
lods
sbb
and
jne,pt
mov
dec
in
mov
and
adc
cmp
dec
jp
xchg
xor
mov
in
inc
sbb
fwait
cmpps
add
enter
insl
inc
daa
pop
ds
push
dec
xchg
cmp
loop
xchg
rcl
dec
aas
mov
add
fsts
stos
mov
xchg
lock
push
ljmp
test
arpl
jb
fiadds
or
pop
repnz
adc
and
jmp
sbb
cmp
sub
mov
sub
test
push
inc
mov
jne
and
xor
shr
bound
sub
lock
fcomps
repnz
push
cmpsb
pushf
shrl
or
mov
push
enterw
movb
int
or
cwtl
lock
inc
lret
jmp
pop
ret
imul
mov
push
lcall
es
mov
xor
pop
xchg
xchg
fnstcw
xor
fst
test
mov
sbb
fnstenv
popf
pop
test
daa
dec
ja
or
scas
lret
imul
iret
popf
in
lds
push
push
ja
mov
cmp
shr
fsubrl
dec
mov
and
sub
mov
mov
aas
ret
push
inc
out
xchg
mov
mov
push
mov
je
and
mov
clc
cs
clc
in
push
and
pop
sub
mov
scas
icebp
repnz
repz
add
and
cmp
je
push
sbb
shrl
xchg
inc
mov
ror
fiaddl
jecxz
das
mov
or
mov
add
sub
pop
lods
dec
scas
mov
loopne
jl
adc
ja
dec
push
fwait
insl
jb
shll
cmovno
mov
jnp
je
mov
push
test
mov
js
pop
lods
mov
xchg
iret
push
addr16
loop
lds
add
xchg
or
adc
mov
pop
jbe
test
lock
mov
push
ret
lds
das
pop
push
fidivs
jb
mov
push
cmp
cld
jbe
repnz
lods
add
cmp
push
aaa
add
pop
in
inc
mov
addl
orl
repz
outsb
test
repz
pushl
lock
xchg
xchg
inc
imul
aam
dec
aaa
inc
bound
dec
xor
test
movsl
or
cmp
fisttpll
orl
andb
cmp
int3
add
out
lods
or
fwait
pushf
cld
leave
dec
test
mov
jns
cwtl
jmp
ljmp
int3
adc
icebp
cmpsl
mov
cmp
sbb
jae
inc
sbb
mov
push
and
arpl
sub
rclb
cmp
movsb
push
aad
inc
inc
test
push
sbb
cli
push
xlat
push
in
stos
sahf
stos
and
lcall
sub
pop
inc
mov
push
dec
std
mov
xor
cmp
push
pop
or
in
dec
jae
sbb
lret
repz
xor
icebp
mov
or
subl
sbb
adc
push
fcompl
sbbl
iret
ret
stc
pop
and
mov
fdivrs
push
pushw
lods
test
push
loop
xor
adc
jbe
loopne
test
xor
ret
push
sub
je
add
and
xor
cmp
fwait
mov
inc
movsl
cmp
rclb
mov
je
fmull
pop
or
mov
or
jne
sbb
pop
and
out
pop
lods
daa
push
movsb
fstpl
pushf
insl
cmp
call
add
stos
push
xor
xchg
cmp
jns
add
sub
xchg
lods
add
xrelease
inc
adc
scas
leave
cmp
sbb
es
mov
jmp
push
stc
xor
or
cld
fldl
mov
add
mov
xchg
sub
mov
mov
lahf
out
adc
xlat
mov
jmp
jns
jb
mov
push
dec
gs
outsb
cmp
jb
mov
and
fsubs
mov
aaa
out
imul
push
ss
sbb
aaa
les
pop
outsb
or
push
xchg
pop
or
pop
call
fcmovb
fnstsw
xor
mov
mov
out
mov
mull
pop
shlb
jle
xchg
mov
outsl
fisubrl
ja
fisubrs
sbb
sbb
inc
sarl
sub
dec
fxch
loop
notl
mov
pop
bound
adcl
jae
xor
lods
add
push
push
xor
mov
push
add
pop
movsb
fsubp
int
jns
push
ljmp
sub
mov
pop
mov
outsl
mov
xchg
imul
mov
dec
sahf
push
add
sbb
out
loope
pop
inc
clc
cli
aaa
je
stos
sub
mov
test
popa
or
fldcw
dec
mulb
mov
lcall
cmpb
pop
add
sbb
sub
or
repz
jbe
lock
loopne
sub
push
imul
daa
pop
aad
addr16
mov
pop
mov
rcll
mov
mov
and
fsubr
ret
cwtl
sub
cli
popf
scas
nop
pusha
adc
cwtl
sbb
sub
je
cli
adc
sbb
cli
xchg
push
mov
adc
loop
cltd
dec
jg
cmp
cmp
imull
sbb
rcll
or
idiv
repnz
inc
fldt
out
aaa
xor
mov
and
pop
push
loopne
fisttpll
fdivp
add
imul
testl
sar
std
lock
clc
leave
stos
jecxz
in
insb
xlat
js
rcll
xor
or
in
cmp
and
js
leave
adc
ja
mov
lret
lds
loop
mov
out
or
add
daa
in
pop
pop
mov
cmc
and
stc
mov
test
jge
clc
lds
adc
mov
mov
lods
xor
push
xchg
testb
ret
lcall
scas
nop
push
lret
mov
and
movsl
arpl
mov
or
xor
dec
pop
ds
test
icebp
adc
adc
jne
repnz
sub
cmp
pusha
adc
arpl
icebp
cmp
clc
test
loopne
xlat
xchg
pop
jb
xchg
rorl
pop
push
xchg
stc
sub
scas
repnz
sub
push
dec
inc
clc
call
and
popa
pop
and
test
mov
xor
sarb
jno
pop
xchg
das
das
jmp
mov
mov
mov
iret
inc
test
cmp
mov
iret
cmp
fldcw
mov
mov
add
mov
out
fstps
stc
in
repz
cmp
sbb
push
test
xchg
inc
shll
inc
es
add
imul
outsb
jl
nop
xchg
jg
in
mov
adc
pushf
mov
mov
push
mov
xchg
std
loop
outsb
lcall
out
cltd
cltd
sub
insl
push
rorl
gs
shll
xor
movsl
fstl
or
insl
xchg
mov
and
pop
sbb
xor
xchg
pop
bnd
pop
xor
ljmp
xor
out
cmp
mov
adc
add
xor
inc
fidivl
push
push
mov
ss
jno
mov
inc
xchg
or
add
push
lret
lret
popa
sbbb
imul
mov
mov
mov
mov
sahf
movsl
test
jne
and
test
mov
lcall
stos
push
xor
push
pop
xchg
pusha
aas
push
add
mov
in
sti
mov
jg
es
enter
inc
inc
stos
sub
cmpsl
mov
aaa
popf
ljmp
xlat
mov
mov
sbb
sbb
inc
adc
jp
aas
xchg
aas
mov
andl
mov
mov
xor
popa
xor
test
adc
divps
jbe
or
push
jl
into
or
loop
mov
ja
icebp
adc
into
xor
mov
xchg
ror
test
fmul
cmc
lret
imul
mov
int
outsb
xchg
aas
xchg
loop
insl
and
mov
mov
push
fwait
push
mov
inc
adc
xchg
shrb
decb
popa
jbe
push
sarl
ret
or
lret
loope
or
cmpsb
mov
cmpsb
pop
sub
mov
in
push
mov
xor
jbe
cmp
sbbl
and
lods
xchg
jno
es
mov
xor
or
outsb
dec
jecxz
lods
cmp
or
jbe
sarb
nop
jmp
sub
fchs
jb
fdivs
rorl
mov
mov
fadds
pop
push
push
sarb
sub
pop
inc
push
or
sti
aam
cmpl
les
xchg
xchg
scas
pusha
es
test
cwtl
or
mov
mov
stos
push
inc
mov
xor
rolb
adc
inc
xchg
sbb
bound
cmp
stos
mov
ljmp
ss
push
xor
cltd
cmp
inc
fwait
sub
outsl
sbb
aad
ljmp
inc
incl
dec
pop
push
xchg
int3
test
lds
push
adc
sbb
popa
jns
pushf
std
faddl
iret
sub
test
dec
mov
mov
and
inc
lods
dec
sub
sub
mov
mov
adc
sahf
dec
or
jo
adc
jns
and
fmull
dec
arpl
bound
ficomps
int3
xor
incb
jmp
test
adc
pop
cmpb
out
inc
mov
jle,pn
outsb
movsb
cmp
add
push
jns
stos
mov
jecxz
sbb
bnd
aaa
cmpsb
push
push
xor
cmp
into
enter
dec
cltd
sub
pop
cmp
arpl
jg
sub
lcall
rcll
ds
cmc
repnz
add
jecxz
lock
mov
or
jo
xlat
in
clc
lock
mull
pop
es
mov
push
push
hlt
jb
ja
push
jns
xchg
inc
leave
je
lahf
cmp
fs
in
popa
lods
inc
pop
data16
outsb
leave
imul
cmc
out
adc
ljmp
or
cwtl
push
sub
scas
inc
popa
pop
mov
pop
insb
test
loop
out
jae
js
popf
adc
ss
pop
scas
cmpsl
fnstenv
xor
dec
pop
adc
jnp
cmp
hlt
sub
dec
insl
mov
unpcklps
iret
aaa
std
pop
lods
fistpl
or
xchg
mov
sub
bound
aad
add
sub
mov
xchg
mov
xchg
aas
add
inc
gs
dec
push
xor
fs
mov
fstps
dec
adc
mov
sti
push
ja
adc
fsts
xchg
sub
mov
scas
gs
cmp
pop
jl
sti
mov
outsb
andl
xchg
cli
fsubs
imul
mov
mov
repz
data16
fsubs
js
cwtl
fsubl
loop
loope
mov
add
test
fs
lcall
mov
fidivl
sub
xchg
lea
orl
clc
mov
jmp
aam
int
ret
xchg
insl
ret
in
inc
lcall
sahf
xchg
jno
cwtl
test
fildll
jae
hlt
in
push
add
xchg
cmc
lret
iret
cvttps2pi
inc
add
dec
jle
mov
sbbb
mov
push
add
mov
push
test
pop
mov
out
xor
sbb
mov
icebp
cmp
fiadds
jns
mov
sahf
cmp
add
jl
inc
lock
out
mov
roll
aad
adc
call
icebp
push
jns
out
pop
scas
pop
test
scas
adc
xchg
jp
dec
lods
nop
nop
out
sub
inc
dec
push
xor
xchg
jae
ss
adc
les
mov
lret
adc
jl
sub
add
adc
jo
push
loopne
add
std
or
int3
orb
xchg
and
icebp
inc
and
xor
rcll
dec
dec
cmp
or
push
mov
stc
mov
dec
nop
sbb
inc
push
xor
pop
sbb
lret
std
or
lret
pop
push
mov
xor
repz
cmpsl
xchg
jae
push
sub
sbb
and
add
jp
pop
xor
inc
mov
xchg
xor
cli
arpl
lret
cltd
push
pop
or
sbb
adc
in
jp
testl
inc
iret
movsl
jg
sub
scas
add
mov
xor
xor
gs
je
ja
cmp
xchg
rorl
stos
sub
hlt
xchg
cli
mov
subb
ss
mov
add
fnstcw
adc
les
xlat
cmc
das
jge
mov
test
inc
popa
orb
bnd
xor
mov
xchg
movsb
jo
add
or
pop
add
data16
subl
mov
movsb
sub
repz
int3
xchg
daa
lret
pop
cltd
fimull
push
gs
fisubs
push
mov
sbb
gs
mov
xchg
insb
adc
xchg
jbe
jle
imul
jge
dec
mov
inc
pusha
mov
sub
and
pop
das
cld
and
jge
ds
js
pop
cmpsb
adc
lret
xchg
lea
mov
lock
dec
and
xchg
das
cmpsb
jnp
cli
add
fcomi
lcall
cmp
popf
nop
cmc
and
lcall
pop
ds
cmp
int3
data16
pop
pop
cmp
fs
mov
adc
sarb
test
sarl
mov
ds
mov
mov
test
test
rolb
in
cmpsb
lret
inc
xchg
pop
outsl
test
rcl
out
imul
lods
inc
int3
cmp
mov
icebp
jns
lea
xor
pop
pop
das
xor
cmp
adc
das
xchg
xor
popa
and
mov
cmp
xchg
shll
mov
push
add
xorb
aam
mov
cmpsb
jmp
xchg
and
lret
sub
dec
aas
push
inc
mov
sub
js
add
fildll
test
mov
sub
pop
cwtl
lock
arpl
cmpb
loop
jmp
inc
mov
add
jl
dec
data16
dec
and
call
cld
bound
es
mov
mov
jecxz
bound
jo
adcb
pop
out
das
jg
mov
loopne
clc
cs
fcoml
dec
lret
jl
add
test
pop
sub
mov
xchg
outsl
inc
subb
pop
inc
add
rorl
sbb
out
jb
mov
scas
mov
sub
call
or
mov
push
mov
xchg
aad
adc
loope
clc
ffreep
xchg
es
xlat
xor
repnz
and
xor
imul
test
jmp
pop
or
cmpsl
cmp
testb
mov
inc
sub
inc
jns
call
dec
mov
mov
xchg
lods
add
repz
jg
rcl
cltd
out
mov
push
idivl
inc
rolb
inc
mov
jmp
dec
imul
push
mov
aas
add
aaa
jnp
mov
cmpsb
xor
lods
jge
loop
arpl
push
dec
pop
mov
push
or
xor
outsb
popf
push
add
dec
sahf
rol
xor
dec
stos
mov
test
cli
nop
les
fildl
ds
mov
sub
xlat
and
push
int
aaa
adc
test
lock
out
out
cmp
maskmovq
divl
bound
sbb
mov
or
jnp
aas
test
or
mov
bound
roll
inc
stos
xlat
sarl
ss
mov
outsb
in
pop
stc
inc
popf
adcl
bound
ja
xchg
mov
xchg
cmpsl
ja,pt
mov
mov
das
in
sub
arpl
loop
mov
pop
test
cld
fcoms
xchg
dec
adc
lret
stc
call
mov
add
bound
loop
testl
aam
xchg
xorb
mov
or
xchg
les
xchg
ss
fidivrl
cmpsl
ss
dec
push
push
in
push
cli
cmpsb
and
mov
mov
in
xor
push
lods
loopne
xchg
mov
iret
test
jmp
jbe
sub
sub
or
xor
sarl
sbb
xchg
lret
pop
gs
imul
mov
lcall
dec
clc
and
les
repnz
mov
das
mov
test
fsubrs
sub
sti
adc
push
leave
out
mov
int3
icebp
xchg
ret
arpl
ljmp
push
xchg
jae
call
ret
cwtl
int
movsb
inc
ss
ss
dec
inc
rcll
fidivl
push
cmp
dec
dec
cmp
pop
mov
loope
xchg
mov
dec
push
adc
hlt
push
and
insl
push
aam
jo
pop
xchg
add
adc
pop
mov
xchg
mov
and
sub
pop
test
jg
popf
into
mov
imul
inc
cmpsb
divb
cmovl
xchg
ret
cmc
dec
rorl
mov
cltd
sub
cmpsl
bound
adcb
in
pusha
jmp
movsb
or
push
loopne
inc
inc
ljmp
or
js
cmpsl
jge
xchg
shr
pop
push
cmc
clc
sbb
add
loop
mov
cmp
aaa
clc
aas
mov
mov
dec
jle
inc
add
mov
mov
shlb
jl
pop
push
mov
aam
adc
mov
mov
pop
fisubl
std
sub
pushf
mov
jae
push
inc
ret
mov
or
adc
push
mov
jle
es
or
das
add
xchg
dec
or
pop
lret
sahf
movsb
xchg
mov
cmp
loope
rcrl
sbb
add
cmc
test
xchg
mov
inc
out
xchg
push
jecxz
xchg
push
inc
mov
xchg
or
mov
cmp
pop
and
lret
xchg
add
test
sbb
fstl
scas
arpl
and
loope
sbb
imul
and
shl
lcall
scas
and
psubsb
push
xor
dec
inc
inc
popf
or
lock
sti
mov
cmp
or
mov
inc
loop
popf
call
jbe
dec
inc
cmp
mov
pop
or
inc
imul
andl
repz
cmpsb
pop
xchg
sub
mov
xchg
fs
sub
mov
and
xor
or
push
inc
or
ret
mov
push
push
mov
fdivrl
fisttps
xchg
xchg
cwtl
add
repz
stos
lock
xchg
sahf
mov
jg
cmp
push
cltd
push
pop
rcrl
push
js
loopne
int
jnp
mov
xchg
push
xor
adc
sbb
out
pop
mov
pop
lcall
test
xchg
dec
sub
push
popa
add
hlt
scas
pop
mov
mov
jecxz
sbb
mov
xchg
xlat
les
jns
mov
xchg
cli
mov
ret
or
and
leave
sbb
adc
xchg
jl
mov
push
adc
xor
push
jae
imul
xchg
inc
jae
mov
shr
cs
test
into
adc
inc
sbb
fcmovne
or
dec
daa
test
sbb
pop
cltd
cs
nop
mov
and
iret
sub
cs
fstpl
test
cmp
movsb
push
push
out
call
pop
cltd
repnz
shlb
jne
add
mov
inc
rol
mov
jecxz
test
lahf
sub
and
push
xchg
jp
push
out
out
hlt
fdivr
enter
sbb
lret
jae
stc
jbe
pop
inc
jo
adc
loope
cmp
fwait
and
mov
cmp
icebp
and
pop
aad
hlt
jo
pop
dec
outsb
repz
add
push
push
dec
xor
xor
out
out
roll
shll
mov
mov
fs
out
mov
test
adc
sub
sbb
and
or
push
mov
push
iret
or
rcll
sbb
jg
fcmovne
rcrb
clc
movsb
push
icebp
iret
cmp
jne
jmp
enter
aad
inc
sbb
inc
and
xchg
stos
jns
in
repz
mov
push
daa
xchg
cmp
jecxz
lret
outsb
inc
sbb
call
xchg
mov
leave
mov
aaa
sub
pushf
pop
mov
imul
push
mov
dec
outsl
xchg
mov
imul
or
dec
inc
in
lds
xchg
xchg
popf
lcall
mov
lret
sub
pop
mov
push
int3
xchg
pop
iret
mov
sub
stos
mov
in
movsl
push
fnstsw
aad
cmp
mov
adc
out
add
loop
test
incl
pop
pop
mov
in
or
in
inc
sbb
decl
out
push
mov
or
sbb
call
mov
jne
sbb
sub
mov
xlat
dec
adc
ljmp
pop
sub
insl
jnp
lahf
cmp
push
arpl
decl
jl
or
popa
pushf
mov
mov
cltd
sub
popa
pop
daa
mov
inc
insb
daa
push
in
push
ret
pop
cmp
lea
mov
xchg
sbb
aas
dec
add
lret
push
movsb
xchg
dec
or
dec
dec
cs
cmc
ja
int3
arpl
imul
xchg
adc
pop
jle
mov
jne
fcoml
pop
push
iret
dec
gs
pop
mov
icebp
adc
push
or
les
daa
int
jl
adc
and
mov
xlat
mov
out
mov
add
popa
inc
pop
jo
push
nop
inc
lods
cmp
or
loopne
and
xchg
xchg
sahf
pusha
adc
lret
xor
xchg
xlat
insl
cmp
test
clc
mov
pushf
aam
pop
mov
mov
xchg
xchg
add
ljmp
icebp
sbb
jg
imul
push
cmp
insl
add
add
test
xchg
icebp
aaa
xorl
dec
in
and
push
pop
cmp
or
or
ljmp
imull
dec
dec
imul
push
icebp
shlb
mov
outsl
jge
addl
xchg
iret
ljmp
shr
out
in
or
shll
lods
cmp
imul
cmc
mov
popa
shl
inc
add
mov
lods
lahf
fucomp
ficomps
in
cld
cmp
sahf
fstpt
adc
inc
test
js
mov
sub
dec
iret
das
popa
mov
push
add
test
pop
xor
cltd
pop
xchg
xchg
jmp
daa
imul
pop
jmp
adc
xchg
inc
adc
outsl
and
inc
pop
imul
stc
mov
pop
imul
inc
addr16
mov
push
xchg
imul
xorl
sti
cmpsb
subb
insl
mov
dec
and
outsb
cltd
jg
enter
push
in
insb
cmpsl
add
xchg
mov
dec
cmc
pop
fcomps
xchg
mov
sbb
negl
cld
cltd
cwtd
inc
mov
js
push
sbb
cwtl
xchg
mov
leave
adc
pop
ret
mov
push
inc
and
in
pop
cmpsl
or
xchg
sbb
inc
insl
jo
jmp
mov
or
shll
dec
stos
stc
or
je
std
or
mov
shrb
inc
mov
ret
dec
imul
mov
push
daa
cli
xchg
xchg
or
mov
iret
cli
in
add
and
cli
addl
lock
lds
xchg
jg
and
mov
aas
mov
and
pusha
dec
adc
mov
pop
inc
add
pop
lds
insl
or
mov
aad
out
jp
xchg
outsb
gs
aaa
scas
dec
shll
outsb
xor
add
adc
sub
fdiv
inc
addl
sbb
lds
jbe
cltd
shl
jl
mov
movsb
fisttpll
push
jno
lods
popf
aad
jns
mov
mov
cmpb
stos
xchg
xor
pusha
aaa
inc
mov
sti
mov
adc
movsb
or
xchg
xlat
ret
dec
jmp
mov
sti
jg
lds
cmp
push
jmp
add
adc
xor
aas
fiaddl
jnp
mov
fcoms
imul
add
and
mov
xor
sbb
loopne
testl
int3
call
rorl
inc
sbb
inc
mov
cmc
les
adc
add
lock
mov
cmc
cmp
dec
xor
push
insb
cmp
rclb
mov
scas
mov
jns
mov
gs
and
dec
jp
adcl
mov
adc
cli
daa
pushf
test
pop
dec
adc
add
or
lods
in
in
xor
jno
pop
dec
pop
movl
call
lods
sub
push
lret
jbe
mov
std
jl
jo
push
js
ss
orl
sub
push
popa
fldcw
or
sub
push
js
push
or
iret
dec
adc
pushf
fsubl
or
dec
in
clc
outsb
inc
xor
leave
imul
fildll
fisubs
add
andb
pop
mov
sbb
sub
mov
add
add
dec
and
adc
jle
add
jae
adc
pop
in
leave
ja
out
jmp
inc
sub
test
cli
sbb
push
xchg
push
rcl
fnstenv
in
into
sub
and
test
or
out
adc
dec
lods
push
add
and
xlat
scas
or
mov
jbe
es
inc
adc
sbb
mov
lahf
cmpsb
mov
cs
aas
clc
scas
lock
mov
xor
mov
mov
mov
jle
mov
mov
push
je
sbb
sbb
data16
int
mov
mov
movsl
mov
inc
cwtl
out
mov
and
inc
sbb
jmp
push
cwtl
scas
mov
iret
jle
das
in
loope
xchg
mov
dec
push
lret
ds
shl
cmp
push
dec
sbb
mov
mov
or
jmp
sahf
pushf
adc
out
out
sbb
stos
mov
insb
movsl
rcrb
xor
mov
aas
das
add
mov
sbb
lret
aad
outsb
movsl
adc
jl
sub
xchg
lcall
mov
cmc
bound
pop
inc
pop
mov
mov
cmpsb
sbb
lods
xor
pop
imull
push
popf
rcrb
loopew
shll
cmpsl
mov
sub
clc
popa
pop
rep
aam
sbb
push
mov
insb
and
mov
das
test
jl
inc
cld
xor
frstor
out
and
pop
cmp
jae
pop
inc
mov
pop
xlat
ret
shlb
subl
adc
shl
jecxz
aam
mov
sbb
add
int
xchg
cmp
pop
iret
dec
cmp
scas
outsl
and
xor
outsb
imull
xorb
out
adc
aam
int
cli
sub
lock
rcrb
out
sub
sti
mov
leave
adc
mov
pusha
xor
sahf
jnp
jg
cwtl
mov
fs
or
and
inc
in
and
mov
lret
lock
dec
pop
and
ja
cmp
outsl
icebp
pop
mov
test
fimuls
and
jecxz
xchg
pop
inc
loop
or
addr16
sbb
xlat
call
insb
or
mov
mov
dec
arpl
inc
sub
sub
or
sub
popa
fldt
shr
jb
xchg
push
or
xor
sbb
jo
dec
call
cmp
in
ret
movsb
stc
cmpl
mov
pop
pop
fld
daa
or
jnp
jge
fdivs
pop
adc
roll
addps
xchg
lock
out
and
xor
inc
mov
test
push
adc
mov
lds
sub
popa
push
into
sub
stos
lcall
leave
mov
pop
inc
mov
inc
cmp
call
pop
add
ret
mov
cmpb
mov
daa
inc
cmp
call
leave
movl
inc
xor
icebp
push
push
push
inc
sti
data16
mov
jp
mov
lds
push
aas
push
mov
and
les
jo
jae
push
cld
sub
or
add
pop
shrb
push
dec
jo
cmpsl
out
add
gs
popf
mov
aam
push
mov
out
scas
pusha
mov
cmp
cli
or
jmp
inc
dec
mov
sbb
dec
sbb
sub
nop
jp
pop
or
dec
and
testb
aad
pop
addr16
fcoml
setne
or
jnp
movsb
fdivs
gs
or
push
repz
movd
aaa
sub
mov
out
test
and
out
and
roll
xor
movsb
jae
fimuls
dec
mov
mov
push
icebp
mov
sti
lahf
test
out
shll
into
rcrl
inc
outsl
dec
xor
out
stos
fdivl
test
dec
sbb
mov
iret
mov
inc
or
push
cmp
fwait
and
xchg
jecxz
movsl
mov
cli
and
inc
inc
nop
js
jno
ror
pop
lods
js
repz
jmp
ja
lret
push
iret
xor
cmp
add
jns
rclb
fsubrs
sahf
mov
data16
lods
jb
les
std
mov
xor
and
pop
ret
sarb
xor
inc
cmpsl
mov
or
ja
jg
add
mov
mov
xorb
or
sbb
mov
adc
data16
or
aam
out
xor
ror
in
or
jg
xchg
dec
stos
xchg
aaa
jge
btr
adc
fucomi
mov
test
xchg
pop
int
jo
lahf
mov
dec
jns
sbb
pop
add
cmpsb
bndstx
xchg
mov
xor
cmp
fdivrl
jbe
xchg
add
test
sbb
fcomps
lods
cwtl
sub
js
clc
dec
es
or
enter
std
jmp
or
ret
scas
jnp
test
lret
mov
aam
bnd
ret
les
flds
ret
mov
mov
push
lods
cmpsl
adc
mov
and
cmp
and
jl
loopne
jmp
push
bound
in
sbb
les
in
lret
mov
push
mov
or
lret
push
cmpsb
stos
inc
lods
sub
sub
jnp
sub
sarb
or
out
and
pushf
scas
cmc
xlat
push
pop
mov
push
mov
pop
push
inc
addr16
push
sbb
in
outsl
rcl
test
push
lcall
mov
insb
pop
or
rol
jns
subl
in
push
arpl
fiaddl
inc
in
dec
sar
out
mov
xor
cmc
das
pop
push
push
pusha
pop
lret
gs
leave
push
dec
jb
xchg
ret
outsb
nop
pop
cmp
cmp
scas
mov
inc
and
ljmp
jne
sbb
add
or
sub
ss
mov
js
je
pop
cld
into
inc
adc
out
popf
dec
add
lea
or
pop
scas
bound
pop
xor
push
push
shlb
push
cmp
jae
je
out
xor
popa
leave
mov
mov
xor
out
jo
loope
dec
cmpsl
jne
mov
loop
aam
outsl
jl
popf
paddw
pusha
clc
testl
inc
push
inc
pop
mov
inc
lret
add
xor
xchg
out
decl
out
push
and
lods
pop
mov
insl
test
dec
xchg
jns
ljmp
and
loopne
jl
xchg
mov
sahf
xor
rcl
adc
imul
cmp
popfw
out
xor
cmp
pop
inc
repz
jo
imul
xchg
xchg
mov
in
add
fsubs
adc
add
lods
testl
shll
aaa
mov
cmpsl
daa
mov
scas
addr16
push
push
cmp
imulb
out
pusha
jmp
mov
mov
pause
testl
fisubrs
or
sbb
mov
mov
in
xchg
xor
push
pop
or
adc
jecxz
push
nop
jne
inc
sub
iret
cmp
sbb
push
lods
ret
sbb
cli
enter
pop
and
test
test
mov
rcll
les
inc
ret
xchg
jp
in
mov
jecxz
mov
repnz
push
pop
inc
nop
lods
nop
cmp
movsb
push
daa
les
jne
push
push
jno
mov
cmp
or
push
scas
push
lods
leave
mov
push
mov
shlb
jne
pop
outsb
push
ffreep
jp
aad
xlat
ss
repnz
stc
push
push
pop
dec
test
bound
adc
xchg
cmp
imul
inc
jl
jg
das
lahf
mov
and
mov
rorl
leave
stos
xchg
jge
xor
pop
inc
push
push
loopne
mov
in
movsl
sbb
rolb
rcr
stos
jne
add
lret
sub
mov
cltd
mov
pusha
incb
mov
cmp
in
inc
or
push
mov
dec
cli
or
fcmovbe
test
testl
ror
jmp
xchg
add
and
icebp
dec
adc
and
sahf
add
cwtl
or
mov
loopne
xor
fldcw
pop
loop
scas
xchg
inc
popf
in
fbstp
aas
inc
push
lret
jecxz
aaa
enter
jae
lods
int
mov
out
ret
es
mov
fbld
stos
test
in
orl
cmp
mov
lret
xchg
xchg
into
add
jl
dec
dec
mov
out
add
fcmovb
xchg
daa
adc
push
xchg
cmp
bswap
pop
scas
add
popa
aaa
flds
push
mov
call
js
push
subl
push
daa
add
xchg
sbb
sub
shrl
jg
cmc
orl
mov
test
das
xor
jmp
fcmovbe
int
mov
fimuls
inc
dec
imul
cmp
imul
loope
fxch
xlat
mov
xlat
pop
or
mov
xchg
in
push
pop
pop
lods
push
mov
jne
popf
push
mov
mov
xchg
jp
pop
xor
pop
fs
mov
inc
movsb
adc
fwait
pushf
mov
push
cmp
cli
mov
ss
out
jns
xchg
push
mov
push
sbb
imul
into
mov
mov
pushw
cs
loopne
mov
mov
fsts
adc
jne
sub
scas
pusha
push
mov
jmp
sahf
jns
and
jne
lds
shlb
fildll
test
ljmp
jle
xor
stos
mov
cmc
test
and
push
jbe
fs
repnz
out
cmp
rcrb
notl
lcall
push
mov
ja
mov
nop
repz
insl
aaa
push
and
sub
scas
rorl
push
mov
sbb
je
xchg
mov
shrl
incb
mov
icebp
lock
ja
xor
pop
pshufw
aad
testl
mov
mov
push
adc
loop
mov
ds
and
lcall
pop
ret
test
ljmp
sahf
rorb
dec
das
inc
in
pop
mov
jge
pop
jns
fistpll
xor
pop
cmc
xchg
xor
cmp
mov
popa
jne
adc
js
add
jmp
inc
push
xchg
mov
dec
sbb
push
test
dec
mov
icebp
jo
das
loope
lret
xchg
mov
fildl
stos
sub
shll
xor
xchg
jnp
in
and
jp
aas
scas
js
int3
and
pop
lret
mov
cmp
push
arpl
push
inc
push
sbb
fnstenv
ret
lds
mov
pop
push
xchg
pushf
adc
xchg
cmp
mov
mov
mov
imul
add
nop
xor
xchg
push
push
push
fcomi
push
mov
andl
shufps
push
lahf
jmp
and
sub
jle
push
sub
cmpb
add
pop
pop
ds
mov
iret
in
pop
or
or
leave
xchg
jmp
adc
lahf
les
nop
imul
ret
daa
in
cmp
rcll
jmp
mov
jecxz
scas
icebp
inc
iret
mov
adc
mov
jecxz,pn
ds
insb
pop
inc
insl
xchg
or
sub
cltd
sbb
cmp
push
pop
jge
xor
jg
dec
xor
outsb
xchg
xor
and
sti
add
add
rolb
mov
ljmp
stos
xor
adc
lea
lret
mov
rorb
dec
loop
jae
xor
jge
pop
mov
mov
sbb
aaa
test
test
cmc
sarl
loopne
icebp
adc
mull
add
adc
lods
jl
sti
push
jmp
je
dec
dec
loope
mov
test
sub
stc
or
add
or
rcll
xchg
sub
pop
movl
push
inc
in
fdivrs
jmp
dec
ljmp
xchg
mov
fdivrs
outsl
dec
dec
xchg
add
loopne
adc
sbb
add
cltd
aas
dec
dec
pop
jge
pop
pop
fmul
int
dec
mov
sbb
neg
pusha
and
mov
jecxz
cmpsl
sbb
xlat
ret
movsl
push
sub
add
pop
cmpsb
cmpsl
add
ret
mov
data16
jmp
jbe
push
orl
std
mov
dec
xchg
js
xchg
xchg
shr
or
test
clc
scas
or
xor
fists
popf
pop
loopne
mov
push
jae
pushf
jl
lcall
push
movsl
mov
adc
int3
adc
mov
lds
push
sbb
test
inc
ret
mov
aam
adc
dec
mov
ret
jb
xor
mov
and
sub
mov
and
xor
or
mov
xor
and
je
jns
ret
int
out
fstps
xchg
add
lds
xor
subb
push
push
out
inc
cs
mov
cmp
into
nop
subl
add
rolb
add
dec
mov
inc
fdecstp
out
scas
xor
ja
adc
push
mov
jae
mov
dec
mov
pusha
mov
cmpsl
in
fwait
fwait
sub
jge
pop
push
mov
or
xor
xchg
mov
cmp
clc
xchg
lock
mov
out
mov
ficoms
push
fists
sbb
rolb
push
jmp
cmp
jo
cmpsb
in
data16
hlt
fnstsw
jmp
fidivrs
in
push
mov
int3
jge
aaa
lds
cmp
pop
sub
rorb
push
scas
jmp
mov
stc
mov
in
mov
insb
fimull
add
jmp
xor
pop
dec
fadds
sub
cli
imul
cvtpi2ps
pop
aad
xor
outsb
xor
dec
ret
or
mov
mov
jmp
push
push
test
int
mov
push
in
cmp
jg
call
mov
fwait
jae
inc
push
dec
pop
lods
dec
out
mov
mov
mov
mov
push
les
mov
pushf
cmp
mov
push
testl
pop
popa
jo
shlb
inc
jnp
scas
push
lds
sbb
push
mov
ds
out
dec
adc
mov
cmp
sbb
sbb
mov
adc
insl
pop
add
inc
dec
fwait
lock
cmp
ret
fsubr
in
or
imul
scas
jo
js
roll
icebp
xchg
mov
ja
jl
mov
sub
sub
cmp
jo
sub
inc
cmpsl
addb
sbb
adc
mov
bnd
push
arpl
in
push
push
pop
xor
aaa
dec
push
cld
cmpsb
jno
mov
out
cmp
or
xchg
movsb
std
das
and
xchg
sbb
xor
shlb
shl
jb
and
dec
dec
add
mov
dec
pop
sub
push
cmp
jns
les
mov
mov
bnd
jmp
arpl
xlat
nop
xor
out
int
cmp
ljmp
jbe
mov
sti
pop
dec
xor
sahf
out
or
ffree
pop
lret
in
cmp
adc
cs
jl
xor
add
mov
icebp
mov
xchg
mov
mov
or
clc
cmp
adcb
push
adc
clc
in
push
test
inc
aad
jp
inc
push
lods
pop
popf
pop
pop
sbbb
andl
insb
mov
sbb
fistl
cli
enter
or
mov
test
loope
mov
xchg
in
sub
jl
lahf
jno
outsl
out
mov
mov
jg
add
aad
adc
push
jecxz
stos
shll
into
push
test
push
jne
sbb
pop
fadds
sub
rcrb
push
outsl
mov
mov
add
dec
jne
xor
enter
push
jb
pop
pusha
mov
push
sub
leave
or
hlt
loop
shr
cmp
pop
call
movsb
arpl
scas
stos
lods
aaa
das
iret
sti
sub
pop
xor
sub
mov
jl
pop
stos
daa
loopne
inc
jle
incb
fisubrs
fidivs
repnz
pop
nop
sbb
sbb
pop
and
push
sub
xor
sub
clc
jp
cmp
mov
out
scas
iret
pusha
push
insl
mov
mov
fwait
cli
and
mov
adcb
mov
pop
xor
xchg
xor
mov
divl
call
push
in
mov
adc
divl
sbb
clc
es
fmull
xchg
ret
xlat
addl
std
mov
or
mov
imul
test
cs
xchg
push
imul
ja
push
dec
lcall
inc
stos
jl
dec
xchg
dec
icebp
push
xchg
mov
daa
jle
stc
aas
jbe
sub
cwtl
mov
imul
popf
xor
xorl
inc
dec
test
push
add
out
movb
pushf
imul
mov
arpl
xlat
mov
xor
call
dec
cmp
push
dec
jne
dec
aad
movsl
push
cmpsb
inc
lea
sub
test
leave
adc
cltd
mov
inc
xor
out
fs
jecxz
xchg
push
cmp
jae
icebp
cmp
jae
gs
xchg
dec
add
inc
out
jae
push
lock
imul
xchg
imulb
cmp
push
xor
in
ds
push
test
lods
dec
adc
sti
fcomps
stc
test
fs
or
sbb
in
es
stc
in
cmp
cmp
cmp
push
sub
inc
cli
xchg
stos
les
push
sub
iret
test
mov
pop
ja
push
aaa
call
ret
lret
ljmp
xchg
sub
icebp
add
popf
pop
or
in
pop
sub
das
mov
inc
sahf
push
dec
js
mov
pusha
jg
mov
xchg
or
out
inc
ret
setg
dec
stos
sbb
cwtl
jb
in
dec
sub
stos
gs
sub
jo
xchg
lea
out
idivb
xor
sub
push
xchg
push
inc
int
outsb
hlt
movsl
cmc
push
fwait
xchg
sarb
movsb
mov
xchg
jne
aam
int3
aad
mov
enter
mov
inc
xchg
daa
add
out
loopne
mov
mov
push
xchg
rclb
jae
and
xchg
es
or
add
test
mov
push
dec
xor
mov
cli
xchg
pop
cmpsb
inc
mov
jne
xor
push
lods
dec
stc
xchg
std
hlt
idivl
jae
out
xchg
or
das
pop
iret
ss
pop
incb
lret
inc
mov
dec
adc
dec
movl
fcoms
incl
cli
cmpsb
arpl
shlb
imul
mov
out
std
sti
stc
sbb
fcoml
outsl
loopne
pop
cltd
out
cmp
pop
fsubl
mov
in
out
adc
iret
cmovnp
xlat
jmp
lahf
xor
lret
loop
mov
xchg
daa
push
mov
pop
enter
outsl
push
adc
test
mov
mov
xchg
push
mov
int3
cmp
mov
push
jg
add
insw
pop
add
mov
mov
xchg
pop
xchg
stc
scas
adcb
stos
xlat
pop
loopne
aam
jnp
push
jb
push
mov
clc
data16
cmc
stc
pop
out
arpl
ret
std
pushf
rcll
arpl
jns
xor
pushl
mov
mov
lods
pop
hlt
and
cmp
repnz
leave
cli
jl
mov
fadd
lahf
or
xor
cli
call
imul
fwait
dec
popa
rclb
stc
clc
inc
int3
cmp
pop
dec
out
shlb
mov
xchg
mov
out
insl
into
daa
xor
push
inc
jg
and
jnp
mov
sti
sub
xor
and
insl
push
mov
mull
repz
or
cmc
cli
xchg
push
outsb
mov
dec
stos
adc
fcmovnbe
fiaddl
ficoms
test
xchg
pop
mov
mov
fnstcw
cmp
lret
push
adc
adc
or
dec
mov
lahf
sub
loop
adc
outsl
stc
add
xchg
call
xlat
jl
mov
sbb
mov
fwait
unpcklps
leave
inc
leave
pop
or
add
xchg
test
arpl
std
xor
dec
mov
in
jecxz
dec
js
icebp
inc
dec
or
loopne
orb
cmp
mov
and
out
fadds
arpl
mov
test
into
push
mov
and
or
xchg
popa
in
lock
adc
mov
jnp
or
dec
dec
adc
cmp
pop
icebp
dec
cli
adc
adc
in
ljmp
sub
pushf
cmp
dec
fimuls
dec
pop
inc
xchg
xchg
fldcw
loopne
mov
push
ret
inc
inc
push
sub
repz
mov
jg
pop
stc
test
loope
imul
mov
ja
mov
add
and
in
scas
dec
pop
fcoms
mov
xchg
popf
cwtl
out
jmp
adc
add
mov
int
dec
mov
popl
xor
or
cli
arpl
push
inc
adc
in
int
jecxz
or
dec
ret
outsl
jle
mov
out
or
mov
xchg
int
xor
mov
jns
cmp
sub
sub
jg
mov
sub
mov
push
pop
addr16
cltd
xchg
or
popf
jle
mov
xchg
inc
and
push
sbb
sti
sub
mov
dec
sbb
lar
sti
add
leave
popa
jmp
ja
or
sub
sub
loop
mov
sar
gs
sbb
push
push
dec
or
sbb
imul
mov
push
dec
adc
adc
dec
push
scas
adc
test
and
and
data16
shll
add
movsl
std
das
push
inc
mov
xor
call
sbb
adc
push
mov
jno
inc
pushf
add
sbb
in
mov
jp
inc
out
xchg
ds
cmovl
mov
jnp
lods
pushf
lret
jbe
xor
jmp
jne
call
lahf
pop
push
es
push
rolb
cltd
lock
jmp
dec
insl
cmc
sub
xchg
sbb
sbb
mov
pop
mov
stos
push
lcall
inc
cltd
mov
out
stc
setle
test
or
and
cltd
sbb
push
mov
ds
outsl
pop
pop
mov
fld
test
aas
lret
loop
sbb
arpl
push
pop
into
subl
std
push
scas
pop
pop
dec
orl
pop
jecxz
push
mov
call
and
inc
mov
in
and
imul
lcall
dec
xchg
out
pusha
inc
mov
stos
pushf
loope
cmp
cmpsl
jbe
test
mov
cmp
ror
out
dec
add
jo
inc
inc
xchg
jle
jl
int3
xchg
jo
sbb
movsb
mov
mov
pop
pop
hlt
push
mov
adc
cli
inc
rclb
push
adc
cwtl
inc
rcll
js
lret
cmp
jg
int
add
xchg
out
inc
ror
push
lcall
repnz
add
shrl
arpl
je
lock
or
out
add
scas
cltd
orl
lret
xchg
mov
mov
icebp
adc
aaa
dec
cmp
fwait
xchg
adc
stos
adc
cmpsl
inc
lret
pop
pop
pop
jo
jp
test
xlat
jb
xor
cmovge
data16
cmpsb
arpl
pop
cmp
cmp
ds
push
mov
outsl
fnstenv
jns
or
ja
adc
mov
nop
sub
cmp
sbb
adc
jmp
inc
aad
jle
adc
adc
push
dec
jno
fimull
imul
fwait
xchg
jae
in
outsl
shlb
sub
mov
in
lcall
adc
xchg
hlt
push
pop
push
add
inc
lods
shl
lds
loop
jo
dec
insb
mov
popa
push
adc
add
cwtl
ret
mov
pop
pop
lea
xchg
sbb
in
loop
mov
out
xorl
int
mov
repnz
mov
and
push
sbb
shr
fs
sbb
sbb
push
add
mov
push
dec
dec
jns
daa
stos
mov
call
lock
int3
mov
mov
cmp
jecxz
push
push
jge
sub
xlat
adc
test
mov
cmp
aaa
push
mov
inc
dec
popf
daa
sub
ficompl
add
sbb
push
icebp
lods
push
mov
ds
pop
jp
and
inc
inc
pop
pusha
pop
cmc
stc
dec
inc
push
imul
sti
rcl
add
pop
out
inc
jp
fcomi
test
icebp
jmp
mov
rorb
xor
fsubrs
imul
cmpsb
mov
ds
jecxz
jns
lcall
sbb
loop
sarb
or
mov
jb
mov
cwtl
ja
cmpb
push
or
xor
cld
mov
cmpsb
test
jl
mov
lea
cmp
lret
or
pop
or
aam
std
addr16
lcall
xchg
mov
inc
adc
sbb
ljmp
outsl
ljmp
pop
pusha
sbb
cltd
inc
inc
and
jbe
mov
ret
cmp
and
jnp
xchg
jl
jp
add
dec
jecxz
jl
lcall
pop
sbb
das
call
pop
jnp
scas
bound
frstor
mov
lock
push
cmp
add
jecxz
sbb
xchg
popf
test
pop
jb
add
mov
movsb
in
gs
insl
mov
dec
push
lcall
movd
push
jmp
mov
fiaddl
pop
mov
shl
xchg
lcall
outsl
andb
or
in
pop
pop
mov
cmp
test
inc
icebp
or
test
repz
dec
jp
and
leave
dec
push
cmp
rcl
fnsave
xchg
es
in
xchg
dec
out
jns
cmpl
jge
mov
pop
mov
pop
sbb
loop
mov
cmp
and
imul
fidivs
insl
sub
loope
mov
pop
sub
ja
jbe
mov
mov
mov
out
xchg
fcmovu
shrl
push
lods
rclb
mov
push
in
pop
test
cld
add
cli
in
cli
cmp
pop
mov
rorl
xchg
jle
mov
add
add
sbb
ljmp
mov
or
fcoms
mov
pop
push
lahf
ret
cs
je
pop
loope
pop
push
mov
out
inc
outsl
mov
mov
stc
pop
aaa
lds
mov
or
mov
xlat
stos
or
jp
lds
icebp
gs
daa
or
out
adc
cld
aas
out
stc
xor
shlb
xchg
addr16
and
push
mov
fldt
lret
fcomip
push
jbe
fildll
cmp
mov
push
jae
sbb
adc
cvtps2pi
dec
stos
movsb
jnp
cli
pop
lahf
lock
inc
sbb
aaa
push
repnz
addr16
cmp
inc
lret
jae
pop
or
int
xor
aad
add
in
add
inc
jp
jae
fwait
cmc
xor
lret
insl
and
ss
aas
jp
lds
inc
enter
lret
push
lods
ret
scas
and
repnz
test
cmc
sub
inc
mov
sub
xor
in
insl
xchg
push
mulb
imul
lods
sub
rcrb
push
es
sub
mov
dec
inc
lret
and
xchg
adc
push
popf
xor
lcall
jnp
pop
mov
and
mov
mov
lret
sar
jno
push
loopne
dec
ja
mov
stos
or
xchg
sub
roll
daa
and
fsubrl
and
into
push
mov
push
xor
inc
aad
fnstcw
cmpsl
inc
pop
fwait
add
shrl
inc
push
or
popa
mov
jg
orb
cli
dec
out
cmpsb
sahf
rcrl
jb
mov
je
imul
shll
xchg
sbb
adc
dec
mulb
nop
xlat
or
mov
stc
cli
jns
dec
pushf
mov
push
mov
mov
in
dec
xchg
sbb
gs
sbbb
outsb
jbe
and
xor
mov
adc
sub
sarb
or
rcrl
inc
scas
dec
daa
mov
xchg
sub
cmp
cmpb
xchg
repz
mov
jns
jmp
outsl
jne
jno
sbb
fistps
shl
sbb
cs
test
subl
mov
mov
xor
mov
pop
xor
mov
xor
fldt
xor
shrb
es
adc
in
lahf
enter
jnp
enter
xchg
ret
mov
or
pop
inc
outsl
mov
jns
iret
mov
add
push
std
sahf
inc
sub
adc
ffreep
dec
loopne
mov
pcmpeqd
pop
sbb
fwait
imul
lsl
cs
or
int3
lds
negl
push
mov
aas
xchg
dec
loopne
shlb
aas
jmp
sbb
pop
jmp
lahf
add
inc
or
fs
sub
mov
sub
dec
int3
inc
lcall
clc
jae
mov
jbe
mov
push
xchg
sahf
dec
mov
ret
jg
and
stos
into
repnz
dec
jbe
gs
jp
stos
dec
mov
loope
add
sub
push
stc
sbb
or
inc
scas
loopne
pop
sahf
xlat
sbb
pop
dec
ljmp
fimuls
pop
in
ror
cwtl
gs
add
or
push
lret
push
test
pop
shlb
stc
into
mov
lahf
push
das
mov
mov
ds
sub
cmp
sbb
test
ficoms
push
es
pop
cmp
mov
cmp
testb
mov
pop
adc
pop
int3
and
je
sbb
mov
cmpsb
sbb
movsl
scas
lahf
push
jo
pop
jl
std
lcall
int
pushf
xor
movsl
inc
pop
sub
and
imul
daa
cmc
xlat
hlt
xorb
cmp
pop
jl
mov
dec
pop
les
in
jg
mov
pop
pop
stos
pop
call
je
pop
imul
push
dec
out
or
lcall
ret
daa
int3
jbe
rorl
fcmovbe
nop
xor
movsl
int
mov
cmp
ss
insb
inc
xchg
aam
or
cmp
cmp
std
xor
sub
sub
mov
scas
mov
sbb
lds
pop
test
inc
mov
hlt
dec
sub
sub
fbstp
sub
sub
lock
push
mov
pop
stos
push
jg
nop
adc
pop
roll
xchg
fimull
cs
xor
lock
adc
mull
push
jb
push
ret
int
call
aaa
adc
cltd
mov
jge
mov
in
mov
repz
push
add
popa
jns
in
nop
lea
pop
cltd
aam
call
xchg
add
movsl
bound
movsb
xor
jbe
fwait
mov
je
and
andl
pop
sar
jl
xor
sbb
xor
outsl
push
or
push
lock
cmpsl
pushf
or
jg
jae
bound
jecxz
push
negb
or
call
loope
leave
lock
xor
cmpsl
jmp
pop
lret
jle
mov
test
ror
push
and
cmpsb
adc
and
xchg
lods
fucompp
stos
xlat
inc
stos
and
int3
sbb
pop
lods
push
imul
and
daa
mov
out
sbb
push
mov
xchg
and
xor
mov
add
icebp
pusha
add
inc
xchg
push
cmc
loope
lcall
ret
cmp
std
sahf
les
ffree
std
bound
scas
or
movsl
addb
inc
ss
mov
ds
inc
mov
inc
inc
lods
xchg
das
int3
adc
push
mov
adcb
lods
into
pop
push
ja
cmp
inc
pop
dec
lret
mov
mov
inc
jbe
imul
mov
outsl
push
int3
mov
sub
sbb
mov
push
jp
cmc
cltd
xchg
lock
daa
mov
sbb
lret
ja
jns
jno
fwait
movsl
test
mov
test
mov
repnz
scas
stos
and
inc
outsb
xor
fucom
ljmp
pusha
xchg
clc
cld
jnp
inc
and
push
pushf
lods
jae
sbb
sub
fnstenv
pop
nop
inc
jns
xlat
push
mov
popf
and
pop
lods
push
dec
jbe
jecxz
icebp
and
push
in
in
insl
xor
popa
dec
and
mov
test
out
cmp
enter
mov
icebp
mov
leave
punpckhbw
inc
pop
sub
jp
in
adcl
pop
pop
leave
pushf
das
rorl
lret
call
addr16
xchg
adc
add
test
movsl
push
cli
mov
fistl
pushl
in
push
sub
icebp
movsl
jae
pop
xlat
aas
adc
push
inc
mov
and
mov
inc
std
and
gs
adc
adcb
ljmp
xor
data16
inc
test
into
rclb
fwait
inc
inc
roll
cmp
stos
adc
lock
pop
mov
fiadds
lock
ret
adc
add
add
xor
push
hlt
int
xor
in
sbb
test
and
pop
lea
sbb
std
cltd
pop
imul
jns
lea
pop
cld
loopne
js
cmp
push
lds
or
sti
arpl
inc
sti
cmpsb
lock
out
sbb
xor
scas
mov
pop
jae
sub
bound
sbb
jns
clc
pop
aam
jle
push
dec
lods
jne
addr16
orb
dec
inc
loope
push
push
and
loopne,pn
push
rcrb
pop
cmpsl
aaa
ljmp
movsl
pop
stos
mov
out
xor
mov
fcompl
inc
add
or
mov
mov
sbb
test
mov
mov
mov
sub
pop
or
movb
push
inc
push
cmpsl
hlt
subl
cltd
xchg
jge
push
lahf
adc
test
lea
adc
leave
icebp
adc
mov
loopne
adc
and
popa
pop
call
sahf
pop
fnstcw
sub
adcl
outsl
mul
sub
jne
rolb
xor
rcrb
popl
daa
xor
jns
sti
add
cli
xor
sar
in
dec
lea
pop
cmp
es
dec
add
jmp
lods
mov
jg
jecxz
loopne
sbb
mov
inc
jae
and
fidivs
pusha
mov
in
rolb
in
subb
push
ds
into
std
mov
out
or
orb
mulb
shll
sbb
stos
push
enter
mov
ljmp
out
jns
add
dec
jnp
sub
popf
sbb
cld
pop
mov
adc
adc
enter
call
test
scas
adc
sbb
mov
xor
and
inc
mov
in
stos
jl
pop
push
sbb
sub
cli
iret
int
gs
test
cmpsb
jbe
mull
add
mov
mov
sbb
mov
lahf
gs
add
dec
incb
dec
ja
push
cmpsl
or
repz
lock
mov
es
sbb
xchg
fisubs
ss
cmpsl
sub
or
xchg
in
nop
sbb
sbb
lahf
out
push
pop
lret
loope
push
jl
lret
mov
jecxz
jno
xchg
std
dec
cmp
lock
pop
adc
sub
ljmp
pop
pop
mov
mov
hlt
add
lret
or
jp
xchg
fcmovnbe
cmpsb
and
scas
xchg
daa
and
jg
test
fsubp
lret
leave
lret
scas
pop
sub
out
mov
mov
or
dec
mov
inc
push
mov
mov
cs
add
mov
shll
aas
or
push
jp
pop
sarb
clc
dec
out
rorb
out
ror
adc
fimull
cmp
xchg
pop
nop
add
push
or
call
lahf
sbb
icebp
clc
add
mov
dec
cmp
dec
lock
lods
and
pop
push
sbb
pop
jge
or
aaa
movsb
ds
enter
ljmp
imul
cli
mov
mov
cmpsl
jne
js
popa
pop
js
stos
lods
hlt
enter
lcall
mov
rcl
sbb
cltd
andb
mov
sub
test
fs
push
or
lds
aaa
cmp
adc
adc
int3
lods
mov
or
xlat
mov
jnp
out
frstor
inc
insb
dec
lds
adc
inc
pop
ja
or
jne
test
push
xchg
arpl
inc
pop
pop
enter
mov
xlat
sub
testl
push
shll
dec
cmp
pop
mov
jecxz
loopne
push
in
inc
pop
jge
add
rcrb
add
mov
sti
aaa
push
daa
jle
xchg
add
loop
insl
imul
dec
rcrb
das
outsl
mov
xchg
sbb
adc
out
roll
and
mov
sbb
cwtl
adc
jo
add
out
push
add
adc
xchg
in
lret
pop
in
rcr
dec
loopne
pushf
and
pusha
mov
cwtl
jmp
mov
aad
aad
into
arpl
adc
pop
sbb
test
in
mov
ret
iret
call
or
mov
mov
mov
jnp
dec
hlt
adc
mov
sbb
clc
jne
imul
push
ljmp
testb
pop
fldl
add
or
cld
push
jle
mov
iret
lahf
arpl
pop
icebp
imul
aaa
jle
lods
call
jle
mov
int
shrl
arpl
into
dec
mov
lods
push
lcall
cmp
inc
pop
pop
jne
out
scas
adc
je
dec
pushf
popa
pop
sub
out
notl
push
push
dec
flds
ret
mov
aas
mov
sbb
int
ss
mov
cmp
iret
stos
mov
sub
addr16
push
xlat
test
ljmp
and
xor
mov
mov
sarl
shrl
mov
stc
jle
ja
lods
in
lcall
shl
cmpsb
mov
xor
out
fwait
test
jge
pop
mov
adc
and
cmp
movsb
dec
jmp
mov
jecxz
inc
adc
and
mov
popf
icebp
sub
xor
out
insl
adcl
mov
push
aaa
cmpsl
shlb
jne
add
ret
mov
repz
and
repz
shl
push
jmp
and
sbb
adc
fnstsw
je
or
push
jbe
push
sbb
jg
out
fcompl
ret
mov
sub
adc
in
xchg
aam
and
add
imul
add
popf
lret
cmp
mov
inc
push
imul
push
adc
add
jp
xlat
dec
jno
inc
mov
test
inc
push
fldenv
es
sbb
mov
xlat
xor
sbb
dec
and
shlb
sub
xor
das
testl
mov
push
pop
js
jmp
insl
jecxz
xchg
sub
sahf
pop
rolb
or
jp
movsb
add
inc
call
rclb
jb
sbb
cli
cld
icebp
xchg
in
popf
int3
add
dec
jne
and
cmp
mov
outsb
and
iret
xor
loop
daa
mov
adc
data16
cmp
add
incb
and
lods
lret
jge
jg
fiadds
leave
push
repnz
sahf
shll
adc
push
or
jecxz
das
lret
addb
stos
lret
mov
insb
or
pop
or
sub
adc
mov
adc
cmp
sub
cmp
icebp
jb
mov
insb
movsl
inc
sbb
pop
push
cmp
ret
sbb
add
addr16
dec
mov
xchg
adc
push
out
stc
mull
dec
das
cmp
lret
cld
rorl
pop
int3
rep
jg
pushf
arpl
cmp
xor
and
jno
push
pop
inc
pop
fidivrl
push
leave
push
sub
jo
xor
mov
cs
mov
adc
xor
aam
xchg
movsl
out
xchg
mov
push
dec
divl
add
xchg
pop
jmp
int3
test
xchg
xchg
outsb
sbb
mov
dec
dec
jb
adc
sbbl
cwtl
enter
addr16
add
xchg
adc
pusha
xor
inc
or
pop
fdivrl
scas
test
jecxz
mov
or
popf
outsl
mov
xlat
push
mov
iret
xorb
pop
rcrb
aaa
ljmp
add
rolb
cmpsw
pop
and
subl
add
add
mov
dec
lret
xchg
sti
xor
mov
divb
adc
fwait
stos
jp
and
mov
fidivrs
cmp
mov
in
stc
mov
mov
in
push
push
xchg
xchg
pmullw
lods
icebp
popf
mov
mov
imul
aam
ss
sbb
pop
push
aad
lahf
mov
mov
dec
les
repnz
prefetcht1
stc
dec
cmc
ja
mov
xor
ret
imul
and
inc
mov
aam
jl
push
sbb
std
std
cltd
movsl
pusha
mov
sti
xchg
cmp
in
movsl
and
in
loopne
gs
dec
aam
dec
cli
enter
outsl
ret
and
push
popa
dec
xor
sti
mov
cmp
and
movsl
dec
arpl
xchg
cmc
lcall
sbb
mov
sub
std
clc
pop
adc
test
xor
lods
xorb
mov
lods
int3
cmp
dec
cmpsl
out
dec
mov
inc
sbb
mov
mov
fcomps
sub
outsl
lahf
cmpb
mov
call
roll
hlt
add
rcrl
pusha
jno
rclb
push
mov
push
mov
adc
stos
inc
add
jge
mov
jb
sbb
retw
push
adc
inc
adc
cmp
dec
fstpt
jo
xlat
add
addr16
adc
imul
sbb
push
push
push
pop
and
cmpsb
xor
cld
mov
xchg
int3
jnp
or
or
dec
cmp
aad
mov
dec
pop
je
mov
in
dec
shr
adc
cmp
add
cmpsb
cmp
xchg
or
adc
cltd
addr16
and
insl
out
inc
js
jmp
adc
jle
sub
movsb
hlt
lods
xlat
mov
cmp
push
fnstsw
xor
sub
cmpsb
xor
jp
sbb
test
sbb
int
in
shrb
sbb
jne
das
jp
int
or
outsl
fwait
in
shlb
pop
fwait
lahf
pop
das
rcr
je
push
xchg
dec
xlat
push
adc
xor
outsl
filds
inc
jb
test
movsl
push
mov
fsubr
cmp
xchg
fimull
pop
shlb
mov
fisttpl
sbb
adc
jo
aas
outsb
xor
dec
test
jb
in
mov
sub
adc
inc
push
stc
and
js
daa
popa
int
lahf
aam
and
add
jae
adc
xor
mov
or
jae
adc
cmpsb
aad
sti
jecxz
jns
jbe
decl
out
cmpsb
fidivl
cmc
mov
mov
cmp
lods
pop
mov
dec
dec
add
add
cmpsl
sbb
push
mov
in
mov
add
cmp
and
sbb
negb
cmpsb
sbb
cmp
aas
lods
push
pop
sbb
sbb
xchg
into
pop
lods
or
mov
add
shr
pop
mov
or
jo
sub
mov
sub
repnz
pop
sub
fmuls
popa
mov
insl
aam
inc
iret
bnd
test
icebp
adc
dec
sub
sbb
xor
mov
outsl
idivb
mov
and
aam
and
add
das
pop
sub
cmpsl
mov
mov
cmp
icebp
arpl
sub
fidivl
adc
mov
shrl
ror
push
mov
lea
pop
cli
xchg
mov
lds
mov
or
mov
and
mov
dec
push
pop
aas
mov
xchg
test
inc
xor
pop
push
pop
or
mov
call
ds
mov
aad
std
addr16
mov
mov
or
out
ss
cmp
push
aam
adc
push
movsb
call
dec
adc
ja
adc
mov
rcrl
add
mov
or
pop
das
pop
fldcw
adc
sbb
iret
pushf
adc
std
mov
xchg
and
pop
and
dec
push
sbb
scas
ss
jne
sbb
pop
rcll
cmpsb
jmp
fs
sahf
mov
add
mov
cmp
adc
mov
mov
mov
in
bound
adc
push
xchg
lret
insb
jbe
pop
ret
adc
xor
into
xchg
sub
jns
add
push
mov
call
jmp
push
sub
cld
movlps
mov
fnstsw
popa
popa
outsl
sub
push
xchg
mov
jns
push
mov
dec
mov
xchg
sub
dec
repnz
test
mov
mov
cltd
xor
lds
icebp
mov
push
dec
add
mov
sbb
js
into
cmp
xor
and
loopne
inc
pop
or
xchg
lahf
dec
js
shlb
ret
int3
orb
imull
gs
loop
arpl
es
mov
hlt
pop
fisttps
adc
mov
out
cs
cmp
and
in
int
scas
mov
push
jl
and
aaa
inc
sub
or
push
jns
mov
cld
icebp
cmc
inc
dec
xchg
cld
leave
aaa
adc
add
int
inc
pop
lock
mov
pop
testb
pushl
popa
daa
sbb
ficoml
push
mov
cltd
test
xchg
fisubs
jno
scas
jb
dec
cmp
or
pcmpgtb
sub
mov
ret
xchg
aam
fcomps
int
nop
in
sub
xchg
ss
xchg
mov
enter
xor
adc
ret
pop
xchg
sub
adc
dec
cli
lahf
push
sbb
mov
xchg
jg
scas
fs
faddp
dec
cmp
loopne
inc
scas
pop
jo
add
pushf
push
jne
add
push
insl
imul
or
sbb
push
movsl
and
mov
or
cmp
pusha
adc
imul
sbb
jae
push
les
lock
cmp
jge
nop
or
adc
or
adc
and
popf
test
mov
pop
and
test
lods
iret
jae
jge
adc
and
push
out
and
adc
and
sub
add
cmp
insl
push
ds
test
sub
aas
nop
sti
xor
scas
fists
mov
gs
adc
cmp
cmpl
fistps
push
subb
or
or
je
dec
push
jle
xchg
lahf
dec
test
iret
es
lock
xchg
arpl
pushl
shr
cs
jbe
add
out
xchg
push
shlb
scas
sti
repz
in
jmp
lcall
xor
es
or
scas
lcall
jbe
ret
mov
hlt
outsl
movsb
ds
adc
repz
xchg
aad
mov
and
xor
jo
push
sub
jne
adc
fmul
mov
adc
nop
sub
shlb
addr16
push
push
sti
mov
add
test
fwait
nop
sub
insl
in
pop
orb
sub
test
enter
adc
pusha
and
dec
jl
mov
add
mov
imull
xchg
loop
cmpsb
sub
push
jns
sarb
dec
inc
xor
sbb
fwait
in
mov
test
lahf
xchg
stos
mov
sub
bound
mov
adc
adc
cmp
pop
test
hlt
sbb
lods
push
outsl
lahf
in
xchg
push
jl
shlb
idiv
dec
jne
mov
and
jns
ljmp
cmp
aad
mov
or
es
outsb
cmp
daa
pop
push
les
out
clc
pushf
push
push
pop
xchg
hlt
mov
outsl
fld
sbb
into
sahf
addr16
sub
std
imul
ljmp
add
mov
es
push
inc
push
sub
mov
repnz
sub
test
jle
test
xchg
movl
xor
call
sbb
hlt
jb
push
xchg
push
test
fcmovb
cmp
enter
xor
and
dec
fs
inc
add
pusha
or
adc
lods
aam
jl
ret
inc
mov
pusha
jecxz
jbe
or
mov
pop
lock
jp
push
ds
lods
cmpsb
addr16
jbe
inc
mov
clc
inc
daa
shl
mov
push
and
pop
mov
jmp
xchg
xor
add
mov
dec
push
mov
addr16
ficoml
popa
or
imul
pop
sahf
sbb
ds
sub
xor
adc
imul
sarl
sbb
ret
or
adc
inc
mov
jno
pushf
outsl
cmpsb
jp
inc
filds
and
pop
xchg
adc
das
fwait
mov
sbb
mov
jno
je
leave
adc
hlt
ret
addb
inc
in
xchg
xor
fiaddl
jp
stos
pop
cmpsb
push
adc
hlt
cwtl
inc
insb
arpl
xor
sbb
sub
push
sub
cmp
or
adc
iret
pop
stc
add
scas
xchg
jmp
mov
call
sub
pop
ljmp
adc
sub
repz
inc
ret
test
ljmp
jl
fcmovnb
gs
mov
shll
shll
jge
cwtl
test
adc
scas
in
mov
addr16
pop
dec
push
bnd
and
adc
cld
inc
mov
pop
adc
add
roll
sbb
or
out
pop
jno
cs
shlb
scas
sbb
sbb
testl
int3
jno
xchg
push
in
aas
int3
idivl
sub
dec
xchg
popf
loopnew
pop
das
add
pop
push
dec
mov
jle
filds
lods
or
dec
push
sbb
add
das
dec
addr16
and
int
pop
pushl
lret
add
aaa
movsl
ja
jl
mov
into
xor
sub
in
fwait
sbb
bswap
jns
shl
hlt
in
pushf
jmp
and
sar
insl
xor
rorl
lret
adc
sbb
xchg
sub
xor
push
push
pop
stos
add
jno
sbb
test
xchg
sbb
xchg
cmp
negb
inc
push
sbb
or
js
sbb
imull
jp
mov
jp
add
lods
loope
daa
push
fnstcw
scas
pop
test
mov
out
dec
stos
pop
icebp
add
nop
add
add
jae
mov
mov
ljmp
push
jp
or
pop
lahf
mov
hlt
les
testl
lea
jbe
cli
or
xor
xchg
lods
pop
fidivs
test
shrb
mov
enter
xlat
fistpl
ds
sub
jge
jmp
loope
mov
dec
out
bnd
nop
dec
es
xchg
jp
jp
leave
xchg
push
cmovl
rolb
fs
sub
xor
ds
out
dec
pushf
adc
push
dec
in
aas
push
cmpsb
mov
inc
cmpsl
adc
adc
lock
int
jne
clc
dec
jno
mov
jle
xor
enter
dec
cmp
fsubs
dec
fs
push
movsb
lea
out
addr16
ss
fwait
pop
jbe
mov
fadds
dec
ret
adc
arpl
push
ret
out
jb
mov
ja
pop
jae
pusha
shlb
insl
push
daa
cli
lret
loopne
shr
mov
inc
or
out
sbb
xchg
movsb
sbb
insl
jbe
rcrl
jbe
data16
mov
ds
fsubs
test
cmpsl
or
insb
lods
push
mov
mov
hlt
mov
leave
or
or
fisttpll
jecxz
andl
mov
mov
jno
or
add
in
in
jne
test
fnstcw
negb
dec
mov
rol
jne
insl
call
rcrb
inc
adc
dec
movsb
sub
inc
add
or
subb
icebp
cwtl
das
xchg
cld
sti
mov
shl
inc
enter
in
subl
in
dec
jecxz
int3
shll
sbb
dec
xor
mov
pop
pop
lcall
cltd
test
arpl
mov
sub
les
cmp
aaa
cmpsl
mov
mov
and
subl
xchg
mov
jae
sahf
lcall
out
ret
xor
loope
mov
sbb
outsl
and
xchg
ja
test
rclb
aad
push
loope
enter
imul
insb
ret
xchg
pop
call
enter
or
xchg
js
cmpsb
xor
mov
aaa
repz
jno
js
mov
add
lods
fstl
fidivs
push
pop
jmp
xchg
leave
or
imul
push
dec
adc
pop
ror
inc
and
mov
cmpsl
jo
inc
shl
ret
jns
sbb
cmpsl
sub
scas
xchg
and
std
mov
cmp
cli
repnz
rcll
jge
push
movsb
inc
pop
xor
lret
xlat
mov
or
and
call
pop
ljmp
test
push
lcall
pop
movsl
lcall
repz
repz
mov
aas
mov
inc
dec
aas
jg
cmp
sub
icebp
adc
sub
fimuls
inc
aam
pop
mov
cmp
icebp
pop
cmc
popa
lock
dec
add
pop
adc
jo
adc
push
out
inc
test
inc
lods
call
insl
pop
sbb
es
enter
arpl
mov
out
loope
dec
push
fistps
xchg
xchg
mov
pop
arpl
arpl
dec
lea
fsub
cli
ja
test
jg
push
dec
inc
stc
das
punpcklbw
push
xchg
pushf
mov
psrad
push
lock
xchg
jo
push
sbb
inc
mov
pusha
pop
sbb
fildl
xor
testl
stos
lods
imul
sti
pop
dec
adc
push
mov
pushf
xchg
adc
int
mov
push
inc
push
add
pop
cld
dec
and
xchg
out
xchg
jne
in
pop
jne
and
jle
dec
mov
add
aas
jae
push
or
daa
pop
xlat
arpl
jp
xor
in
loopne
add
pop
notb
pop
js
jl
lcall
pop
sbb
mov
repz
cld
xchg
fsubl
repz
stos
inc
outsb
cwtl
inc
cld
xlat
movsb
addr16
cmp
in
jbe
sub
lahf
push
or
add
test
pushf
iret
mov
add
ffree
movsb
lahf
add
cmp
leave
xor
insb
cmpsb
mov
xor
movsb
adc
ds
xchg
sbb
scas
movsb
shrl
and
cmp
and
sbb
repz
pop
out
fadds
stc
push
inc
enter
cmp
movsw
aad
stos
mov
push
push
cmp
xchg
test
xor
lods
push
outsl
clc
fnstenv
les
imul
adc
lods
xlat
lahf
xor
dec
mov
pop
fwait
jo
xchg
inc
sbb
icebp
sti
cli
ds
dec
ror
pop
ds
xchg
sbb
sahf
cwtl
xlat
push
mov
ret
loopne
mov
add
insl
push
push
dec
addr16
and
pop
addr16
fidivrs
test
sub
and
lock
stos
fdivrl
push
fsubs
lds
sti
sbb
mov
xchg
push
jle
jo
sbb
ret
stc
jecxz
inc
icebp
imul
movsb
lret
cld
leave
bound
jae
jg
out
jns
adc
ds
xor
stos
xor
rcr
push
mov
cmp
and
mov
and
pop
xchg
lock
dec
jge
add
jae
push
push
add
outsl
scas
lret
pop
or
or
pop
push
ja
jne
mov
sub
sbb
cld
xor
lods
pop
inc
mov
and
test
iret
jnp
fldt
lods
mov
pop
push
or
inc
fucomip
and
insl
cld
and
xchg
sbb
sbb
imul
aad
sub
in
dec
pop
out
ret
mov
std
xchg
data16
push
cmp
xor
sub
mov
xchg
scas
xchg
fisttps
movsl
add
sub
cmpsl
cmpl
stos
pop
mov
loope
fidivrl
pop
enter
mov
daa
mov
mov
fsubl
jge
popa
divl
scas
or
mov
fwait
pusha
pop
dec
mov
stos
enter
pop
out
pop
test
add
add
sahf
or
clc
sar
mov
pop
out
movsl
insl
ds
cmp
ret
test
out
inc
js
cmp
scas
fsubrl
lock
xor
adc
and
hlt
sbb
or
adc
push
mov
nop
push
and
mull
xchg
inc
sbb
mov
pop
adc
leave
jb
xchg
scas
fsubs
push
lahf
xorl
mov
xchg
push
dec
aas
mov
dec
and
jbe
ljmp
shl
fwait
pop
fistpll
xchg
pop
push
sbb
out
shll
test
mov
xchg
xchg
xchg
or
push
add
jbe
loopne
sbb
insb
ret
jle
push
aaa
push
mov
scas
xchg
mov
push
mov
inc
jmp
imul
cmpsb
movsb
xchg
sti
cmpsl
mov
pushf
mov
jb
aad
popf
sti
pop
sub
and
lret
xchg
std
test
xor
popf
test
cmp
jecxz
mov
mov
repnz
gs
rclb
mov
push
mov
push
and
std
fwait
pop
js
mov
inc
data16
les
test
mov
add
xchg
mulb
mov
add
rcll
ret
sub
addr16
cmp
shr
mov
sub
loope
loopne
inc
notl
fmull
pop
jle
adc
xlat
sbb
sub
rorb
sub
xor
push
js
daa
jl
imul
test
popl
and
out
stos
jbe
adc
mov
pop
into
inc
jge
jg
popf
aam
sub
and
addr16
test
and
cmp
dec
push
testl
out
pop
pop
mull
mov
lock
mov
adc
push
mov
test
mov
xchg
pop
icebp
iret
jo
lcall
fstl
and
lea
or
rcl
movsb
call
fcos
inc
jl
xor
and
add
adc
push
cli
mov
sub
add
and
xor
adc
in
mov
dec
adc
push
mov
ror
push
lcall
mov
data16
pop
sarl
adc
pop
fbstp
or
data16
cmp
sub
jno
out
repnz
outsl
fwait
in
inc
lahf
into
addr16
in
lret
xor
ljmp
adc
inc
shlb
outsl
pop
rclb
pop
insl
jmp
pop
mov
xchg
adc
adc
inc
insb
xchg
jle
lea
outsl
cmc
je
inc
xor
imulb
cmp
add
cmpsb
out
lods
push
int3
or
out
jge
jge
mov
pop
mov
pop
mov
pop
lds
jbe
inc
mov
sbb
into
in
mov
in
aaa
not
and
fs
sbb
cltd
jmp
xchg
sub
mov
jb
and
hlt
mov
xor
movsb
in
xchg
call
jmp
aam
ja
or
int
rclb
das
xorl
mov
ret
outsl
sub
mov
jl
adc
cmpsb
xchg
xor
gs
xor
xor
push
rcrl
xor
lds
push
xchg
add
inc
mov
loopne
mov
dec
negl
fsts
stos
jbe
unpcklps
add
mov
outsb
lds
cmpsb
adc
mov
dec
enter
xor
push
sub
cwtl
lahf
aad
push
in
lahf
and
imul
pop
push
and
cmp
pushf
xchg
cmp
xchg
je
fcoms
fdivr
and
push
mov
loope
mov
jmp
jns
les
ror
lret
and
shlb
xchg
stc
pop
pop
push
jmp
adc
mov
stos
dec
movsb
je
pop
inc
je
lea
fnstenv
push
out
jmp
sub
mov
sub
shl
mov
les
pushf
adc
test
es
xor
jbe
and
mov
pop
push
mov
shrl
into
cli
and
mov
je
xchg
dec
bound
gs
mov
stos
add
add
adc
stc
xchg
cmpsb
jno
fimuls
icebp
icebp
repz
inc
aam
outsl
mov
out
lahf
fs
rcrl
mov
mov
shrb
addb
and
ja
jnp
lock
repz
imul
mov
cld
pop
cmp
inc
inc
jmp
in
ret
jmp
lret
and
sub
dec
push
addr16
adc
out
cmp
add
clc
daa
cmpsl
les
cmpsb
stc
scas
inc
fs
jb
sahf
andb
or
sub
fldcw
and
cmp
inc
into
sarl
lods
sar
ret
push
sbb
loopne
inc
xchg
test
cld
sub
imul
mov
mov
ja
pushl
daa
sti
adc
ljmp
popa
arpl
add
push
cli
iret
jno
aas
in
pop
xor
cmp
push
jo
or
fwait
int3
loope
ljmp
lods
or
mov
outsl
leave
cld
sbb
fnstcw
push
ret
mov
push
imul
or
fwait
dec
add
mov
cmp
push
out
cwtl
daa
cli
pushf
xchg
jo
mov
jno
mov
inc
sbb
push
in
mov
mov
push
mov
popf
scas
inc
mov
sbb
sub
sub
pop
sbb
movb
shll
xchg
addr16
jmp
cmp
xchg
test
mov
mov
popa
or
loope
xlat
cmc
inc
insb
xor
sub
mov
shl
fwait
mul
jns
mov
or
fistpll
push
or
jle
and
dec
lea
xchg
jb
notl
and
test
dec
mov
xchg
mov
and
lds
mov
pop
sub
in
push
mov
notl
cmpsb
mov
or
xchg
or
pop
vmovdqa
mov
and
xchg
into
repnz
xchg
sub
sti
xor
cmp
jno
popl
and
push
dec
imul
dec
or
mov
jp
js
pop
inc
or
pop
lea
out
hlt
ror
inc
mov
lret
sub
add
add
push
repz
sbb
cmp
jg
ss
hlt
test
popa
rcll
push
jo
fnstsw
fs
dec
mov
dec
mov
cld
inc
or
fs
sti
ret
xchg
sbb
in
js
adc
xor
jecxz
push
sub
in
jp
mov
fs
stos
ret
and
in
daa
scas
es
aas
scas
dec
int
repz
stos
adc
inc
adc
jno
leave
test
sarl
dec
push
or
jge
cmc
aas
pop
js
sub
imul
popa
adc
push
pop
cmpsb
lret
rclb
clc
jno
dec
in
cld
data16
loope
mov
mov
push
xchg
mov
in
in
xor
pop
xchg
pushf
arpl
push
push
out
cmp
rcrl
leave
sarl
mov
sbb
imul
fstl
fs
xchg
or
ja
setns
sbb
mov
rolb
in
and
xchg
je
or
xor
jns
mov
sub
mov
data16
mov
movsb
sub
fsubrs
adc
adc
mov
fcmove
movsl
adc
and
push
push
fldl
mov
clc
int
cmp
lret
loope
test
fcmovnbe
mov
jmp
dec
and
mov
pop
inc
cli
adc
dec
sbb
in
xor
adc
add
mov
push
or
mov
fisubs
fwait
add
data16
push
ljmp
and
mov
in
scas
dec
shll
pop
std
inc
fsub
lret
jns
push
mov
and
mov
sbb
bound
push
lret
in
dec
xor
mov
xchg
jmp
cmp
lahf
out
std
pop
xchg
jno
fxch
add
push
std
imul
dec
sub
movsl
imulb
xchg
imul
sbb
inc
jge
sti
cmp
test
cwtl
jmp
dec
andl
lret
jne
ss
mov
in
jbe
ss
dec
in
out
mov
push
jmp
xchg
inc
xchg
cmp
pop
xchg
add
js
jle
jne
pushf
cmpsl
or
daa
adc
aad
and
loope
add
pushf
adc
loopne
mov
dec
pop
iret
xor
cmpsl
cwtl
faddl
sub
aam
jmp
inc
jo
sbb
xor
pop
sahf
cs
adc
adc
test
out
add
in
hlt
daa
int3
aaa
cmp
inc
or
jae
xchg
adc
shl
mov
push
rolb
daa
xchg
imul
out
pushf
test
andb
push
xchg
sbb
aam
ret
idivl
mov
subl
jle
jge
add
daa
push
mov
and
jno
jne
sti
lahf
lea
xor
add
jbe,pt
add
xlat
xor
mov
pop
sub
jmp
mov
sbb
ds
std
jne
mov
sbb
xchg
push
mov
and
adc
add
or
push
loopne
mov
cmpsl
cmpl
sub
insb
pop
push
or
ret
xor
loopne
mov
imul
add
add
out
aam
lahf
bound
adc
lock
push
into
andl
rcrl
mov
sbb
out
fwait
ja
sub
insb
rolb
mov
mov
push
es
fwait
dec
int
xchg
push
inc
xor
push
adc
pop
jo
scas
lods
pop
mov
leave
icebp
adc
inc
iret
fnsave
push
jae
ja
sub
data16
push
push
adc
cmpsb
js
fcomps
adc
insl
and
das
icebp
fsts
icebp
push
aas
cmp
pop
loop
pop
mov
xor
jg
xchg
imulb
and
jae
sub
fstpl
cmp
inc
pop
lea
mov
sahf
cmpl
insl
push
fwait
dec
add
pop
xlat
data16
cmp
stos
jb
xchg
xor
aaa
push
push
push
rcrl
loop
shlb
push
xor
shll
rcrb
aam
andl
cmp
aad
dec
push
dec
and
xchg
mov
cld
mov
mov
into
sbb
mov
hlt
dec
in
mov
mov
add
lods
aas
je
jne
or
mov
daa
shll
daa
adcl
jnp
inc
push
mov
imul
mov
jbe
lods
pop
popa
xor
and
inc
lret
rcrb
jmp
mov
out
ficomps
call
bound
xchg
pushf
test
dec
push
cmp
aas
rol
lahf
aam
xor
rclb
mov
mov
inc
sub
pop
or
sbb
data16
js
popf
test
pop
cmpsl
pop
and
or
xor
in
mov
mov
inc
shrl
jl
mov
idivl
fwait
mov
outsl
and
xor
xor
scas
xor
test
adc
mov
je
jno
mov
icebp
add
insl
js
push
cld
pop
repnz
cmpb
sbb
or
ss
jae
jp
call
jb
testb
inc
mov
loope
sbb
test
pop
cli
jecxz
jo
fisttpl
inc
sbb
sub
xchg
adc
push
sub
xchg
test
add
or
loop
arpl
popf
popa
aad
test
pop
std
dec
pop
inc
mov
xchg
add
cwtl
rolb
cmp
cmpsl
adc
cli
ljmp
daa
sub
or
xor
sbb
xor
orl
cmp
mov
ljmp
jg
lods
pop
jg
cmp
test
sub
rorl
dec
repz
push
ret
pop
inc
adc
dec
out
subl
imul
mov
or
add
inc
and
xor
sti
loop
popf
fldcw
pop
ss
dec
push
mov
pop
call
jnp
mov
and
xchg
into
subl
jp
cmp
out
adc
push
stc
sbb
pop
test
inc
out
shll
test
cmpsl
ffreep
in
das
movsb
mov
pop
mov
add
xor
adc
insb
movsb
inc
inc
aam
jp
lds
sbb
cmp
shlb
ret
jns
out
popf
xlat
insl
lds
outsl
and
or
inc
xchg
das
mov
or
into
inc
inc
ret
in
insb
pop
xor
mov
push
pop
imul
faddl
sub
push
push
xor
push
loopne
and
cwtl
mov
push
dec
cmpsb
test
bnd
jnp
mov
push
sub
movb
lcall
mov
xchg
nop
jne
push
out
or
cltd
dec
insb
or
jmp
aam
leave
fld
mov
push
scas
nop
loop
inc
mov
ja
daa
insl
scas
pop
leave
dec
fcompl
xchg
sbb
sbb
rorl
mov
sub
mov
movsl
mov
fstps
jnp
dec
ret
imul
imul
mov
mov
pop
movsl
mov
jecxz
cwtl
xor
jno
adc
in
out
sub
mov
test
mov
stc
fisttpll
fnstcw
enter
hlt
fisttps
add
push
push
mov
fwait
and
adc
inc
xchg
lock
lret
sub
sub
sub
xchg
insl
popa
xchg
popf
add
mov
xchg
call
push
xchg
cld
and
lods
or
bound
popa
dec
in
mov
mov
inc
xor
out
mov
pop
jae
xor
rclb
xchg
pop
sahf
mov
mov
dec
clc
mov
add
outsb
xor
aaa
mov
push
push
ror
jo
divb
mov
dec
faddl
mov
mov
push
inc
pop
sub
adc
stos
aaa
leave
leave
mov
pop
popa
test
enter
ret
out
ss
cmp
adc
xchg
fldl
addr16
xor
xor
push
jecxz
xlat
dec
mov
push
and
test
inc
inc
inc
fisubl
lock
xchg
fisttpl
repnz
addr16
pop
mov
mov
shr
jg
adc
sbb
pop
leave
mov
in
jle
mov
insl
cmp
scas
jmp
in
ds
addr16
and
xchg
mov
fldcw
in
sbb
fs
sub
or
lahf
lds
push
and
and
jb
std
stos
ljmp
push
xchg
pop
test
inc
mov
out
sbbb
pusha
xor
pop
add
jbe
xchg
adc
out
pop
and
mov
dec
push
mov
dec
int3
cmc
icebp
imul
push
sub
iret
jbe
idivb
scas
aam
lods
push
dec
ljmp
sbb
jb
xchg
add
hlt
inc
mov
dec
mov
mov
lret
nop
mov
pop
dec
add
fistpll
mov
mov
and
scas
push
repz
jno
jno
lret
and
out
jnp
add
pop
outsb
sbb
jns
dec
call
adc
je
push
push
aaa
fsub
js
sbb
push
call
sub
in
data16
lods
dec
mov
push
mov
mov
push
adc
mov
scas
pop
loopne
pop
jo
pop
or
jnp
sbb
imul
dec
into
mov
test
mov
or
inc
das
lds
movsb
movsb
adc
shl
adc
lds
pop
pop
mov
dec
push
out
push
or
std
aad
movsb
imul
cwtl
jns
rorb
adc
lods
in
or
mov
pop
test
adc
fcompl
std
sub
div
int3
xchg
xor
insb
sub
inc
aam
out
xchg
or
sbb
ret
cmpsl
idivl
sbb
adc
stos
das
ret
xchg
rclb
sbb
push
xchg
stc
into
out
lret
mov
or
inc
push
cmpsb
sub
mov
jle
outsl
adcl
mov
jae
imul
sub
mov
sbb
add
in
pop
stos
mov
pop
cwtl
sahf
icebp
out
inc
push
jg
dec
gs
int
mov
ds
jg
xchg
sbb
loope
dec
add
mov
aam
icebp
cmp
or
cmp
ret
rcll
dec
call
loopne
add
pop
popf
pushf
pop
gs
lret
adc
ds
cli
push
test
xchg
test
scas
testl
ja
xchg
in
lea
jge
bound
xchg
pop
lods
iret
out
out
cmp
lret
fwait
dec
dec
mov
jo
and
mov
pop
cli
sub
imul
push
jle
out
xchg
lret
in
insl
cmc
subl
es
subb
cwtl
data16
out
and
sti
cmpsl
nop
movsl
arpl
sub
xor
and
rorb
adc
push
add
fchs
push
xchg
sbb
xchg
jno
lods
add
aad
lds
pop
ljmp
inc
cmp
es
push
or
push
push
push
ss
sbb
outsb
jns
fsts
cmpsl
inc
stc
sbb
insl
add
jb
ds
sbb
insb
in
mov
cmp
out
or
aaa
jecxz
lods
fs
subb
sub
ds
into
daa
push
mov
push
adc
pop
popa
addr16
nop
mov
sbb
xor
fs
popf
pop
pop
std
cwtl
jl
dec
jle
subb
out
push
inc
jle
cltd
sbb
sub
mov
repz
sub
daa
arpl
mov
test
and
mov
loope
or
xchg
mov
fisttpll
adc
adc
and
into
xchg
and
jae
fnstcw
dec
stos
cmp
adc
ficompl
pop
lahf
sub
and
ss
addr16
loope
xchg
mov
dec
in
cwtl
push
mov
call
dec
shll
sbb
pop
outsb
mov
sbb
sbb
mov
pop
mov
pop
mov
in
sahf
test
jle
test
and
je
lahf
push
js
jnp
sar
mov
in
clc
cmp
mov
or
lret
xor
cmc
into
hlt
cs
outsl
sub
push
inc
and
repnz
stos
into
pop
mov
test
cltd
fisubrl
cli
jge
mov
int3
leave
movsb
xor
ds
jp
adc
fistl
jae
mov
and
jg
mov
popa
lahf
jmp
inc
mov
cmp
stc
jg
add
data16
stos
mov
add
fmul
pop
jb
outsl
lea
adc
int
stc
scas
cmp
out
dec
and
fistps
insb
xor
rcll
mov
ja
add
mov
push
inc
mov
sub
push
rcr
subl
inc
push
dec
xor
push
fldl
dec
loope
nop
mov
jle
lds
loopne
subl
mov
fcomi
sub
lcall
ret
mov
xor
repz
mov
ficomps
incl
popa
xor
mov
fildll
test
cltd
jne
sub
mov
cmc
cmp
mov
jo
call
mov
out
push
add
fldt
repz
je
xchg
loopne
daa
insb
xchg
cmp
xlat
fs
int3
popf
insb
mov
inc
insb
clc
mov
jl
mov
out
test
jge
ficompl
fisubrs
mov
aam
sahf
out
call
or
repnz
jge
and
xor
push
inc
jecxz
pop
fisttpll
mov
popa
pusha
dec
mov
cmp
push
adc
cmp
adc
pop
jb
add
cmc
subb
pop
fsubrl
ljmp
cmc
pushf
pop
test
jl
inc
addl
lods
int3
sar
mov
cltd
bsr
into
push
dec
push
nop
pop
std
nop
aaa
outsl
insb
out
xchg
adc
testb
pop
push
aas
add
lds
daa
adc
fidivrl
sub
mov
sub
push
lret
aam
test
jmp
inc
cmp
loop
mov
hlt
int3
mov
sbb
pop
out
or
cmp
mov
cmp
cli
out
int
xlat
movsb
stc
dec
loope
lock
enter
or
xchg
enter
adc
jne
in
mov
test
cmp
das
or
mull
icebp
das
scas
pop
pop
adc
inc
repz
test
test
add
jmp
add
std
pop
stos
loop
js
cwtl
cmc
and
mov
xor
ret
cld
push
in
repnz
sub
inc
jg
xor
sbb
xlat
aas
cs
sti
inc
xchg
xchg
pop
cwtl
and
pop
call
and
dec
cmp
push
and
jnp
addr16
push
dec
movsb
incb
ja
sbb
and
fwait
push
pushf
mov
adc
hlt
int3
xor
es
shl
int3
gs
jl
mov
stos
lret
pusha
int3
gs
stc
hlt
and
mov
lret
shr
xchg
in
push
add
aaa
sbb
test
psubusw
stos
sub
jns
inc
clc
movsl
pop
jl
sbb
or
inc
sub
hlt
add
and
xchg
in
fildl
fadd
push
xchg
or
hlt
sbb
pop
cmp
dec
or
les
xchg
call
lods
test
insl
stos
aaa
imul
pop
mov
or
push
push
pop
inc
pop
bound
movb
fildll
gs
les
jle
iret
xor
add
push
lret
mov
in
out
rcpps
mov
das
lret
icebp
shl
mov
out
mov
push
or
data16
jecxz
loope
loope
insb
push
push
roll
dec
push
jl
movsl
and
add
ret
fiaddl
loop
scas
inc
repz
insl
cmpsl
pop
jp
jg
inc
je
outsb
out
push
sbb
das
flds
push
sbb
fistpl
lahf
sbb
mov
cmp
insl
test
xor
fadd
xor
movsl
movsb
pop
cmp
jns
xchg
cwtl
jne
or
inc
xlat
adc
xchg
jmp
inc
fstl
jle,pt
cs
xchg
scas
mov
sbb
mov
pop
andb
fst
mov
rcll
dec
xchg
aam
lds
push
sub
mov
outsb
pop
shl
jge
aaa
repz
or
add
fildl
out
sub
in
loopne
outsb
loope
xor
lahf
sbb
xchg
dec
repnz
dec
push
inc
cmp
popa
js
mull
mov
inc
cld
imul
std
icebp
adc
mov
fwait
jo
mov
pop
scas
adc
aas
mov
test
lret
fisttpll
ss
incl
pop
loopne
or
sbb
and
in
mov
rclb
cmpsl
pop
sar
xor
jl
xor
pop
ret
pop
pop
lea
scas
adcl
outsb
jno
xchg
loope
adc
test
jnp
mov
nop
aaa
mov
in
dec
shlb
pop
mov
xor
jle
adc
iret
lods
repz
xchg
add
dec
and
cltd
movsb
out
cmp
jbe
or
jae
addl
dec
std
jle
push
je
inc
xlat
push
cmp
mov
push
jge
pop
out
adc
bsr
xor
ja
fstpl
dec
inc
insb
ja
sahf
push
or
cmp
lds
out
aas
nop
jmp
jl
loop
insb
pop
insl
arpl
in
cmpsl
or
push
xor
mov
ret
aaa
pop
aam
or
adc
dec
inc
dec
cmp
mov
incb
jecxz
cmc
int3
ja
dec
mov
cmpsl
mov
or
xchg
sub
lret
pop
stos
adc
mov
sbb
in
lret
dec
clc
loope
cltd
in
xchg
xchg
subb
xchg
sub
xor
rcll
inc
jmp
dec
inc
cmp
inc
jp,pt
out
push
lret
add
mov
in
jmp
test
data16
mov
pop
add
test
mov
push
movsb
mov
js
cmp
iret
das
fiadds
jb
sub
xor
icebp
mov
mov
jmp
adcb
shll
pushf
mov
mov
stos
push
je
sbb
mov
dec
cmp
fwait
dec
jge
cmp
arpl
pop
add
adc
jno
adc
sub
push
cmp
inc
je
adc
and
push
out
jmp
clc
iret
cmc
cltd
sub
cld
test
inc
dec
dec
cmpsb
xor
cmp
mov
fidivrl
fsubr
ds
adc
popf
xor
cwtl
repz
push
lret
into
or
mov
dec
flds
pop
sub
xchg
hlt
nop
pop
int
add
or
adc
test
sbb
xlat
push
adc
xchg
xor
mov
adc
xchg
in
cmp
repnz
push
cmp
push
fadds
mov
fwait
loop
into
inc
mov
cs
pop
adc
insl
icebp
popa
lods
popf
mov
cmp
loopne
cmp
xor
jns
jns
mov
shll
lods
ja
cwtl
add
iret
fldcw
js
add
popf
enter
outsb
iret
cmpsl
jno
shrl
lea
test
mov
push
jmp
out
cmc
push
xchg
xlat
insl
les
les
or
int3
pop
sbb
leave
dec
int
jp
cmp
cmp
test
test
add
xor
in
int
mov
into
mov
pop
outsb
insb
inc
mov
xor
test
xorl
lods
pop
and
xor
jns
das
mov
cmpsl
mov
cwtl
mov
sub
sbb
jne
sub
push
in
or
dec
push
jecxz
movsl
addr16
test
xchg
lods
fisttpll
adc
sub
xchg
pop
addr16
or
jp
xor
sti
push
dec
xor
xor
ss
sbb
scas
mov
pop
inc
sbb
out
jl
aad
mov
cli
and
clc
ljmp
popa
pop
jg
fdivs
add
mov
adc
sbb
fnstcw
sbb
pop
ret
add
loope
mov
xor
cmp
insl
push
jnp
mov
jle
or
pop
push
repz
mov
jo
fimuls
pop
pushf
inc
pop
testb
cmp
pop
daa
shrl
and
push
les
int
popf
stos
mov
jnp
ljmp
test
in
and
lahf
cmp
aaa
sarb
dec
imul
in
mov
icebp
cmp
mov
mov
mov
iret
sub
add
or
dec
push
cmp
jbe
add
scas
out
inc
aam
push
inc
out
and
sti
je
cmp
xor
xor
xor
pop
jecxz
dec
sub
sbb
sbb
icebp
cmpsl
in
push
jne
add
bnd
adc
cltd
cmp
sub
imul
int
pop
dec
adc
push
or
push
movsb
je
enter
out
cmpsl
xchg
mov
popa
int
jae
jae
push
jbe
cmc
jp
bound
sbb
ds
out
lret
and
fidivrl
mov
cmp
mov
les
bound
shlb
xchg
repnz
ds
jge
into
gs
adc
dec
ds
shr
jmp
loop
push
or
mov
frstor
push
popa
xlat
adc
lret
int3
pop
jge
ljmp
add
sar
jp
js
pop
jge
push
int
sub
jo
push
or
jbe
or
fs
lods
mov
andb
ss
daa
or
aad
jmp
outsl
pop
cmp
inc
cltd
pop
xchg
int
addr16
lods
rcl
outsb
lcall
test
addr16
in
xorl
mov
sti
dec
loope
sahf
mov
pop
lret
hlt
insl
add
push
jmp
sbb
mov
int3
sbb
inc
lock
stos
scas
int3
les
mov
adc
ljmp
in
mov
iret
mov
fstp
loopne
pop
adc
cmp
shlb
movsb
adc
mov
jbe
add
repnz
fdivrs
lods
mov
les
xchg
shrl
dec
sahf
rcrb
sbb
enter
or
add
mov
sub
xchg
int
mov
cltd
xor
cmp
int
je
icebp
das
movsb
push
cmp
fs
or
sbb
hlt
repz
mov
std
push
push
out
push
pop
popa
push
push
add
fistl
aas
adc
fwait
int3
hlt
or
jbe
gs
lds
lret
or
test
gs
sub
add
adc
bound
cmpsb
and
add
mov
pusha
dec
imul
js
jae
push
repnz
pop
mov
pusha
dec
inc
xor
pop
sbb
inc
std
push
int
inc
das
lds
adc
pop
mov
aam
pop
in
jmp
daa
jecxz
notb
xor
loopne
sub
or
mov
adc
lahf
xchg
mov
mov
dec
pop
push
insl
outsb
jnp
data16
test
fistps
jbe
sahf
shl
scas
dec
stos
inc
hlt
mov
iret
das
or
loop
mov
pop
popf
sub
sti
scas
std
mov
fsub
xchg
loope
sbb
cmp
jns
xchg
in
shrl
mull
pop
leave
push
rcr
orl
or
lods
lock
std
push
idivl
test
pop
mov
or
std
add
mov
call
pop
ret
adc
add
lock
mov
mov
daa
mov
test
shlb
or
call
jecxz
mov
xchg
sbb
and
and
ficomps
int
or
xchg
cwtd
in
in
cmp
iret
enter
data16
jle
sarb
sbb
xchg
xor
push
pop
fadds
cmc
push
fsubl
xchg
xor
ret
mov
adc
push
ficomps
cmp
or
and
inc
mov
xor
jb
mov
mov
jnp
shll
mov
jae
mov
pusha
mov
pushf
mov
bound
adc
popf
aaa
mov
sbb
push
lods
fcompl
lods
mov
outsb
insb
repnz
in
imul
insb
out
xchg
fstpt
mov
cwtl
icebp
pop
sahf
xor
jae
lret
ror
adc
fnsave
shrl
pop
cs
xor
ljmp
and
push
or
xchg
xchg
mov
xchg
clc
cwtl
icebp
mov
mov
jae
jle
cmp
push
dec
pop
jp
idivl
and
and
mov
add
enter
popf
adcb
cmp
mov
fstl
mov
push
jp
sub
push
mov
in
sub
mov
adc
lcall
sti
insl
outsb
ret
or
test
cmp
cmp
jae
nop
clc
out
stos
dec
pushf
cltd
xchg
jg
mov
xchg
mov
cmpsl
xor
lcall
out
flds
addr16
test
mov
out
inc
inc
fidivrs
mov
ja
shll
rclb
popf
test
push
push
mov
jae
cmp
jb
dec
idivb
bound
push
fistl
imul
jb
sbb
push
leave
jnp
es
hlt
add
test
push
jae
ficoms
or
cltd
nop
mov
mov
xchg
js
inc
fcoml
fldl2e
cmp
popa
cmc
outsb
mov
das
js
sub
out
pop
pop
inc
nop
sbb
jae
pop
mov
arpl
mov
les
xchg
out
mov
or
sbb
fadds
xchg
das
insb
das
jmp
add
insl
lds
mov
mov
mov
adc
subl
jl
stc
sbb
dec
aad
dec
fwait
inc
in
push
sbb
or
bound
loope
cmpsb
push
ss
icebp
or
fsubs
jle
insb
jae
loopne
cmpsb
dec
enter
fwait
fs
mov
or
mov
outsl
pushl
sbb
inc
xchg
sub
arpl
pop
das
leave
add
pop
and
rclb
inc
dec
ljmp
mov
pop
jecxz
sub
aaa
mov
outsb
sarl
xchg
cmpsb
or
sub
adc
inc
arpl
mov
push
imul
filds
in
repnz
aaa
push
stos
lods
leave
arpl
lods
mov
testb
das
mov
cmp
lods
mov
cli
lods
push
scas
loope
pop
push
pop
xor
hlt
call
sbb
add
pop
cli
and
mov
and
popa
fstps
sub
and
adc
sti
nop
mov
inc
push
lods
jecxz
inc
ret
movsl
inc
mov
test
add
xor
aam
nop
fiadds
jmp
push
and
lock
aam
repz
int3
push
movsb
sbb
fldcw
push
aas
add
or
test
fldcw
jbe
loopne
add
xchg
cmp
xorl
pusha
outsl
add
lcall
cmp
ret
add
subb
push
lahf
sub
lcall
jmp
lock
xchg
sub
and
push
repz
push
cli
mov
daa
jp
cmp
outsl
popf
test
fildll
pop
test
in
inc
sbb
jb
or
mov
or
stos
xchg
stc
cwtl
inc
inc
cmc
js
lock
push
in
sub
mov
pushf
lcall
and
xchg
inc
hlt
dec
andl
mov
push
loope
sub
cwtl
xchg
inc
call
xchg
cmp
ffree
adc
ljmp
mov
jp
xchg
mov
rcpps
mov
leave
stos
jle
imul
add
and
imul
mov
arpl
dec
int3
sub
lea
lods
cmp
adc
mov
inc
mov
mov
or
and
mov
iret
xor
xchg
jae
pop
roll
mov
mov
cwtl
mov
ficomps
roll
je
inc
jbe
xchg
inc
cmc
movb
and
sub
iret
xchg
mov
das
push
mov
sub
mov
pop
jle
xchg
dec
repnz
pop
imul
jp
xchg
daa
sbb
sbb
inc
inc
push
test
ja
jb
inc
dec
ja
inc
aas
xor
roll
jne
sbb
lods
push
push
push
scas
adc
and
pop
jne
xchg
jge
xchg
jns
aaa
out
repnz
ljmp
jmp
push
pop
cs
repz
decl
jne
cmp
sub
cli
cmp
jns
stos
inc
push
daa
mov
outsl
out
inc
nop
shrb
push
test
inc
push
sub
push
lods
mov
cmpsl
xor
in
ret
push
test
mov
bound
out
rclb
lcall
jbe
scas
mov
push
push
sbb
jge
mov
mov
sbb
out
sub
sub
inc
push
insb
and
ljmp
xchg
fwait
mov
sub
pushf
shr
sub
push
cmp
and
xchg
lods
jl
sbb
push
scas
cmp
scas
aaa
ss
jne
push
cmp
movsb
jo
hlt
aad
xorb
fadds
ds
xchg
adc
in
push
cwtl
insb
mov
in
hlt
std
xchg
jne
leave
mov
loopne
jae
std
adc
sbb
jp
imul
and
mov
das
jnp
push
pushf
jge
in
loop
add
insl
pop
mov
mov
inc
push
xor
xor
mov
iret
mov
jl
xor
xchg
insl
xor
popl
ljmp
mov
sub
pop
cmp
es
bound
lods
ds
adc
and
add
mov
inc
int
xlat
inc
jl
xor
and
sbb
nop
mov
cld
cli
push
testb
daa
dec
pop
xor
repz
movsl
mov
imul
adc
mov
loop
scas
xchg
and
fidivrs
or
sub
and
stos
mov
and
test
out
xchg
push
test
dec
mov
xor
push
iret
gs
add
icebp
mov
inc
aaa
mov
ret
clc
rcr
scas
pop
or
dec
jmp
aad
pop
sti
mov
mov
outsb
fstps
shll
icebp
hlt
and
adc
mov
pop
mov
and
cmpsb
leave
lret
out
push
xorb
out
jecxz
xchg
mov
xchg
pusha
lcall
lret
pop
mov
inc
adcl
xchg
push
repz
out
push
shll
fwait
adcb
dec
jne
icebp
jae
inc
mov
stos
jmp
cwtl
inc
and
scas
add
xor
outsb
repz
outsl
popf
mov
cmp
pop
int
sti
gs
push
xchg
jb
sub
pop
xchg
jnp
push
cmp
aad
mov
xor
jl
pop
fcomps
dec
cmc
sti
pop
cmpsl
sbb
push
mov
sub
rcrl
xchg
cmpsl
out
push
sub
mov
and
arpl
adc
or
mov
cmp
test
popa
mov
scas
sub
aam
adc
imul
out
jecxz
add
aam
pusha
inc
daa
fstps
mov
loopne
std
inc
pop
movsb
mov
mov
dec
subl
xchg
or
xchg
inc
ja
outsb
mov
out
lds
dec
aad
mov
popf
mov
xchg
push
es
push
jge
push
adc
dec
lods
in
je
sbb
les
out
dec
sarl
inc
cmp
daa
jl
ret
xchg
insl
rorb
mov
cltd
jns
adc
xchg
nop
xchg
mov
cmp
inc
je
mov
mov
stc
jb
lcall
ss
ds
xorb
pop
mov
out
dec
inc
ja
sahf
add
shl
int3
xchg
jecxz
jg
pop
jo
shll
shll
add
add
sbb
jno
xchg
sub
push
pop
dec
mov
in
jmp
cmpsl
pop
xor
sub
cmc
jnp
je
incl
pop
repz
adc
outsb
push
dec
pop
lret
je
mov
cmp
icebp
adc
xchg
imul
xchg
inc
dec
les
sbb
popf
xor
dec
xorl
inc
xchg
jns
adc
out
mov
mov
pop
jmp
mov
cltd
cld
dec
leave
orb
pop
fildl
hlt
mov
xlat
insl
sub
sbbb
adc
subb
ret
pop
dec
insl
lods
fwait
jno
push
imul
and
out
cltd
jbe
add
or
cwtl
ret
bound
test
aam
mov
jmp
xchg
cmc
push
scas
outsb
add
inc
jecxz
mov
push
cltd
xchg
pop
ljmp
lret
gs
mov
cmp
dec
xchg
repnz
inc
jg
mov
leave
mov
popa
sub
test
stc
or
adc
es
leave
pop
pop
bound
push
iret
add
addl
lock
push
rcrl
out
mov
roll
dec
sbb
jnp
icebp
rcrl
leave
cmpsb
xchg
dec
mov
pop
jge
or
stos
int3
xor
int
xchg
gs
pop
scas
inc
fisubs
sub
in
jle
sub
fwait
mov
xchg
pop
hlt
into
xor
fists
int3
mov
adc
xchg
fcompl
xchg
sbb
pshufw
cmc
test
sbb
pop
insl
mov
fwait
mov
add
or
ret
sbb
cmp
mov
insl
mov
lcall
xchg
sbb
repz
addr16
xchg
jo
jbe
push
cmp
sub
sahf
mov
mov
mov
mov
xor
sub
xchg
insb
imul
sub
cwtl
repz
add
mov
or
or
xchg
sbb
loopne
push
repnz
and
sbb
pop
jae
cwtl
jp
fsts
mov
push
or
jnp
xchg
addr16
lods
pop
shll
jne
stc
adc
hlt
adc
iret
cs
mov
sbb
adc
push
mov
lahf
pop
jne
xchg
das
pushf
xchg
cmp
push
or
mov
aaa
xchg
insb
mov
dec
rcrl
jnp
and
popf
fwait
out
popf
mov
or
movsb
pushf
xchg
std
fwait
loopne
lcall
es
sbb
and
dec
iret
fcompl
loopne
push
leave
movsb
mov
mov
stos
xor
mov
std
cmpsb
pop
shrl
ljmp
ret
in
mov
shll
cmpsl
lret
push
inc
mov
aas
andl
adc
cld
negl
in
dec
mov
dec
fiaddl
in
inc
sub
pop
sbb
scas
mov
in
cs
dec
xchg
aaa
outsl
in
xchg
mov
xchg
shr
popa
or
push
lds
sub
dec
pop
mov
cmp
gs
add
popa
xlat
leave
sahf
movsl
pop
push
lret
jns
notl
ret
fidivs
aas
cmp
sbb
xchg
imul
mov
xchg
les
mov
mov
mov
lea
pusha
jne
pushf
js
sub
jl
xor
ret
or
mov
xchg
jb
divb
test
cmp
jg
xor
inc
mov
adc
aam
loop
push
je
scas
pusha
inc
inc
xor
jge
push
imul
adc
xor
cli
cld
lds
lods
imul
rolb
xor
sbb
push
push
push
arpl
inc
and
pop
inc
ljmp
pop
mov
push
lea
fs
sbb
inc
pop
js
add
mov
and
leave
bound
pop
jmp
clc
push
and
rorl
iret
outsb
xor
fbld
fwait
or
push
lret
add
or
jo
into
and
fwait
mov
sbb
cmp
mov
mov
dec
fiaddl
adc
pmaxub
loop
subb
pop
sbb
je
jge
xchg
js
hlt
cmp
shll
and
cmp
ret
test
or
mov
add
mov
push
imul
out
mov
mov
in
test
roll
ret
ss
xchg
popa
push
adc
daa
xchg
pop
jle
push
aaa
mov
cli
fwait
js
mov
int
ret
xor
test
add
xlat
lea
out
dec
addr16
sbb
mov
pop
mov
inc
loope
mov
outsl
stc
lock
jp
xor
fildl
adcb
push
or
mov
lret
lods
pop
push
jbe
in
adc
push
mov
dec
pop
out
jae
aad
push
adc
and
scas
jne
pop
cmp
push
xchg
jg
popf
cltd
mov
shrl
pop
jmp
fsts
in
mov
pop
loope
scas
enter
cltd
pushf
mov
xchg
sbb
arpl
int3
jp
lret
mov
xor
mov
int
dec
pop
jbe
sub
leave
sbb
dec
hlt
sub
xor
out
jns
push
or
or
dec
mov
sti
jmp
mov
ret
movsb
push
in
imul
cmp
subb
xor
subl
movsb
mull
dec
fisttpl
mov
mov
push
shlb
testl
jp
or
inc
out
packsswb
mov
les
push
aad
je
xchg
jns
lret
lcall
fidivl
stos
aad
data16
ljmp
xlat
push
cmpb
xchg
mov
add
imul
fcom
repnz
shlb
cmp
xchg
mov
mov
push
rorl
aad
inc
push
sti
shl
aam
or
out
and
imul
imul
loopne
in
insb
jb
or
scas
sbb
loope
aas
js
imul
push
outsb
repz
aam
arpl
mov
test
aad
sub
xchg
jnp
xchg
add
or
or
out
jns
sbb
in
lods
add
dec
call
pop
jae
fwait
push
adc
int3
cld
mov
sub
dec
mov
sub
and
dec
hlt
xchg
dec
fnsave
pop
sub
lods
fdivl
or
ret
ds
xor
imul
mov
mov
fisubs
push
movsl
cltd
bound
mov
add
or
daa
sub
xchg
sub
dec
orb
call
andb
es
sub
testb
cmpsb
nop
fs
pop
mov
sbb
mov
dec
push
sub
adc
cmp
sub
add
fnstcw
push
cmp
ss
push
xor
xor
icebp
adc
fidivrs
shlb
pop
pop
mov
pushf
sub
mov
mov
xor
cmp
xor
insb
mov
outsl
scas
iret
fildl
push
adc
pop
dec
into
xchg
xchg
push
imul
mov
stos
iret
int
jnp
push
xor
loopne
adc
ljmp
call
call
sub
popf
lret
push
sub
div
insb
sbb
inc
jge
fsubs
dec
movsb
sahf
inc
mov
add
push
inc
pop
daa
repnz
or
adc
dec
in
jl
ffree
mov
push
pop
add
adc
push
mov
in
aas
add
pop
xchg
xor
mov
lds
sub
scas
add
out
sub
movsl
ds
imul
inc
push
sbb
hlt
sahf
inc
stos
outsb
mov
jnp
lock
xor
jno
mov
lret
ds
sbb
ja
outsb
inc
aam
sahf
idivb
mov
xor
pushf
dec
ss
mov
call
pop
fistpll
add
push
xchg
jl
inc
and
rcll
jecxz
pop
scas
jp
test
cmp
push
repz
jae
jb
fldl
fdivrp
xorl
clc
inc
icebp
aam
fsts
sahf
shrl
mov
lret
mov
cmpsb
inc
outsb
das
pop
push
add
adc
movsb
icebp
lcall
lahf
mov
xchg
jp
shlb
inc
mov
aam
and
js
test
aas
xor
ljmp
mov
aad
cmpsl
jle
stc
insb
pop
sbbb
xchg
shlb
mov
outsb
lock
add
jbe
or
push
insl
jp
lret
das
jp
mov
vmwrite
mov
and
jbe
xor
hlt
push
xor
ficoml
jg
aad
in
cs
test
aad
inc
jns
inc
bound
push
pop
lods
pusha
or
shrl
imul
xchg
sahf
xor
adc
imul
xor
jle
jge
xchg
popf
lods
sub
pop
pop
mov
and
and
dec
or
dec
jp
sarb
mov
lcall
test
mov
xor
mov
push
sub
or
lock
iret
push
dec
stos
add
lods
test
std
sti
icebp
fsubs
or
int
notb
pop
lds
pop
sahf
cltd
xor
ljmp
jno
cmpsl
xchg
ds
out
fdecstp
rcrl
xchg
sub
movsb
mov
mov
pop
iret
push
mov
cltd
mov
insb
imul
out
insl
lock
mov
test
clc
xchg
pop
push
in
in
sti
add
sub
loope
jne
dec
add
push
jnp
push
xchg
in
mov
push
push
cli
inc
clc
addl
xor
pop
outsb
rorl
jecxz
pop
sub
jbe
mov
and
lret
inc
sbb
ja
add
push
xor
imul
stc
rcr
int
cmc
xchg
jo
arpl
mov
add
sahf
les
cli
bound
xlat
sbb
iret
cmp
jmp
sbb
mov
int3
xchg
xchg
add
push
cmp
lds
xchg
cwtl
jge
xor
orl
repnz
cs
and
xor
xchg
cwtl
leave
xchg
pop
adc
dec
or
jle
test
repz
lret
subb
adc
nop
mov
ret
insl
js
jecxz
cmp
rcrl
xchg
orb
adc
dec
shr
sbb
sbb
dec
cmp
shr
sti
lret
mov
jb
push
test
ja
notl
imul
dec
sbb
lods
lea
mov
rcrl
mov
fistl
fs
mov
loopne
mov
push
adc
gs
jg
dec
jns
adc
test
and
call
stos
ficoms
popf
xchg
inc
mov
xchg
xchg
int3
jg
adc
add
dec
clc
xchg
cmp
inc
std
xor
mov
jle
xchg
add
or
jg
out
xor
ficoms
shl
arpl
push
ja
sub
jge
in
mov
mov
jl
lret
push
jmp
jb
xchg
xor
stos
and
sti
pop
inc
add
test
sbb
cmc
mov
ret
bound
data16
pop
ss
cld
or
push
jo
xlat
add
or
ffreep
add
rorb
cmp
popa
aas
xchg
sub
popa
fildll
mov
push
popa
xchg
rolb
xchg
mov
iret
adc
movsl
or
repz
dec
inc
stos
call
int3
fxch
and
sarb
fst
fiadds
sub
popa
sbb
sahf
gs
mov
nop
cmp
inc
sub
xchg
ds
xor
fnstenv
mov
decl
es
lcall
jo
jl
push
add
inc
ret
arpl
es
call
mov
mov
xor
lret
and
rcl
mov
jb
in
jne
inc
push
in
mov
push
dec
push
in
cmp
addr16
pop
mov
sbbb
imul
mov
lcall
lods
movsl
mov
pop
jbe
cli
and
outsl
inc
pop
mov
int
cmc
scas
cli
and
stos
rorb
insb
in
scas
dec
add
nop
lcall
insl
push
xchg
das
push
xlat
aaa
sub
mov
cmp
out
cwtl
jmp
aas
jo
das
negl
jl
sbb
or
mov
inc
scas
pushf
sub
shrb
mov
int
stos
roll
push
test
push
push
call
mov
mov
ja
push
xorl
test
mov
xor
bound
sbb
int
jecxz
pop
popa
mov
adc
sub
ret
cmp
test
xlat
mov
jb
cmpsb
dec
nop
cs
lods
in
sub
mov
xlat
pop
xadd
fcomp
lock
cmpsl
or
push
xchg
jg
inc
fsubrp
cltd
hlt
imul
into
fdivrs
lcall
ret
fldl
add
dec
movsb
out
jb
jmp
mov
stos
fisubl
push
lcall
push
cld
and
dec
pusha
or
popf
fdivs
shrb
mov
mov
shrl
xor
mov
mov
adc
mov
cmp
xor
add
lock
fisubl
xchg
mov
popa
sbb
and
jg
sti
jle
push
xchg
or
pop
pop
jae
cmp
test
arpl
testb
test
sub
lcall
lcall
xchg
push
cmp
xor
mov
movb
jae
push
es
shll
push
fsubrs
pop
shll
movsl
xchg
mov
push
out
test
pop
or
xlat
popf
fs
addr16
in
mov
add
fistps
lea
xchg
inc
das
inc
cli
mov
sbb
sub
adc
jb
sub
jg
daa
pop
roll
clc
adc
cmp
jns
lret
pop
shl
ret
cmp
clc
push
shll
push
xchg
enter
cs
mov
push
dec
cmpsb
outsb
lds
xchg
inc
pop
and
rcll
xchg
jb
test
bound
mov
xchg
in
hlt
xchg
push
jmp
xchg
fistpll
icebp
popf
cmp
cmp
fstp
imul
dec
mov
mov
mov
jmp
push
call
xlat
repz
fsubr
jecxz
rcrb
fnstcw
mov
mov
outsl
adc
cmpsl
ds
outsl
lret
jb
mov
xchg
inc
mov
mov
dec
cld
icebp
cltd
mov
repnz
inc
loop
shlb
cltd
icebp
enter
popa
insl
pop
jb
mulb
pusha
je
and
sbb
jns
lahf
dec
sub
xchg
add
in
jge
or
jne
push
add
je
je
or
stos
cmp
addr16
push
xchg
mov
cmpsl
sbb
setp
lds
daa
mov
lret
add
push
inc
add
shl
cmp
adc
dec
popf
dec
mov
out
lahf
sbb
mov
xchg
and
repz
push
jns
roll
pop
and
lahf
lock
adc
cmpsl
loope
mov
bound
cmpsb
out
aas
inc
sub
and
pop
cmpsl
nop
pushf
adc
outsb
das
std
cmp
loop
sarb
jg
fimull
mov
aas
sti
pop
adc
xchg
pop
sub
loope
fcompl
sub
testl
mov
inc
lods
mov
faddp
push
into
pop
hlt
adc
push
test
or
in
daa
pop
cmpsb
pop
cs
stos
outsl
movsb
in
stos
fwait
mov
rolb
and
or
aaa
push
lcall
scas
xchg
hlt
lret
jecxz
xchg
loopne
scas
outsl
add
addr16
cmpb
cmp
and
lods
fstpt
sub
into
jne
or
popf
hlt
shrl
push
mov
fcmovnb
pop
cmp
inc
test
inc
sbb
pextrw
mov
rcll
lods
insl
mov
es
aad
pop
and
jno
ror
xchg
ret
inc
js
mov
es
jnp
mov
jns
xchg
js
imull
call
lds
and
fsts
dec
rcr
and
test
icebp
xor
hlt
xor
dec
mov
out
adc
icebp
dec
mov
add
shrl
setne
xlat
cmpsl
call
fsubrs
out
mov
mov
lods
jae
or
ret
dec
xchg
mov
and
dec
insl
scas
jne
arpl
jbe
dec
daa
jno
add
xor
xlat
scas
sbb
out
sub
ret
fists
fiaddl
das
fnstcw
daa
and
inc
push
lret
mov
or
mov
mov
fbstp
adcl
loopne
cmp
loop
idivl
xchg
movsl
leave
loopne
movsl
xchg
cmpsb
and
cmp
xchg
in
nop
scas
stos
sbb
or
cmp
lret
push
pop
inc
ficompl
mov
mov
cmc
jp
sub
or
stos
push
and
loopne
jo
push
dec
cmp
add
outsb
jmp
outsl
xor
mov
outsl
in
cmp
cmp
outsb
in
push
xor
add
in
ret
imul
mov
inc
das
daa
adc
out
orb
xchg
repz
and
pop
lds
lods
pop
es
outsb
loop
mov
sub
shl
decl
inc
inc
push
loopne
cwtl
cmp
popa
lods
stos
mov
rclb
xlat
aad
pop
adc
dec
jmp
fwait
clc
stos
out
enter
pop
push
dec
enter
xchg
inc
xchg
or
leave
cmc
mov
imul
outsb
jbe
testb
daa
clc
movsl
sub
mov
icebp
mov
mov
sbb
sbb
mov
in
sti
dec
jp
divps
xor
xchg
call
and
pop
push
push
push
or
sahf
shrl
xlat
dec
sub
jp
inc
dec
xchg
mov
test
lret
ficompl
lea
mov
aas
jno
and
fistps
out
mov
mov
into
fiaddl
xchg
push
aaa
cmpb
mov
lcall
mov
push
test
lock
fwait
stos
inc
cmpsl
inc
add
movsl
jge
mov
es
stos
frstor
xor
loop
pop
lret
pop
outsb
int3
mov
imul
subl
add
mov
or
nop
imul
nop
dec
icebp
xorl
pop
cmp
sub
les
cmp
inc
or
sbb
mov
in
jp
xor
push
mov
movsl
pushf
push
inc
icebp
inc
ficompl
divb
test
dec
cltd
push
fnstenv
outsb
mov
lea
dec
xlat
jmp
push
mov
dec
xor
mov
cwtl
and
and
mov
mov
adc
adc
pop
pop
hlt
push
bound
aaa
xchg
inc
mov
sub
or
leave
lahf
arpl
divb
lods
jo
cmp
lcall
xor
call
fildll
pop
scas
dec
xchg
or
lea
out
and
mov
movsl
test
neg
add
push
hlt
xchg
ret
cltd
pop
repz
into
mov
xlat
jmp
or
test
adc
jbe
jl
iret
jnp
fdivl
xor
bound
push
cmpl
ss
mov
sub
ljmp
jno
cwtl
dec
or
dec
mov
das
or
fldl
jl
shrl
pop
mov
das
jecxz
sbb
pop
adc
dec
add
xchg
jae
pop
adc
js
xor
lods
pop
xchg
inc
pop
or
ret
negb
or
xlat
imul
addr16
out
orl
scas
test
push
push
push
xor
mov
mov
jnp
push
cmpsl
clc
movb
pminsw
xchg
pop
es
jle
push
test
or
adc
mov
or
lea
mov
adc
jmp
xchg
adc
or
mov
push
xchg
lcall
sbb
pop
push
mov
adc
mov
or
movb
mov
and
cli
test
mov
xchg
inc
adc
jecxz
mov
mov
repz
mov
pop
inc
adc
mov
cmpsl
decb
dec
movsl
outsb
add
or
add
jbe
xchg
jo
fs
cltd
mov
sbb
sbb
inc
mov
insl
jmp
lds
sub
sub
mov
sbb
jmp
xchg
adc
cmp
push
xchg
mov
mov
iret
roll
lds
push
or
bound
cmpsb
push
shrb
mov
mov
sbb
xchg
pop
xchg
cmpsl
inc
sbb
dec
push
imul
test
popf
push
cld
mov
push
in
adc
add
pop
mov
xor
xor
mov
cmp
int
clc
pusha
cmpsl
xchg
mov
mov
or
pop
dec
out
fnsave
in
add
js
enter
sbb
lods
into
lods
pop
and
insl
inc
js
inc
flds
inc
ficoms
jl
mov
lea
jnp
insb
arpl
xchg
cs
pop
divb
mov
int
push
pusha
sti
shlb
bound
inc
mov
aaa
fildll
or
cmc
lock
jo
jg
mov
sub
bound
mov
orb
jo
aas
loope
cmp
xor
pusha
out
push
xor
xor
popf
ret
adcl
cmpsb
stos
aad
outsb
daa
imul
loope
add
push
jp
ja
scas
mov
jge
mov
xchg
scas
jecxz
fcompl
jno
pop
sbb
gs
in
mov
dec
jno
cmc
loope
sarb
add
lahf
cwtl
je
fildl
adc
cmp
and
cmp
stos
push
adc
cmpsb
pop
sub
insb
xchg
scas
aas
in
push
lcall
push
and
fisubs
or
and
inc
cmp
dec
fmull
pop
and
lds
mov
xchg
sub
mov
ret
push
sbb
sub
mov
push
push
fldcw
mov
push
jns
xchg
xchg
adc
jbe
or
push
push
and
add
and
dec
jbe
imul
mov
mov
jae
mov
lods
in
loope
xchg
rolb
and
cmpsl
fisttpl
xor
insl
stos
lods
xchg
cmpsl
cmpsl
aaa
iret
xchg
lods
inc
or
orl
cmpsb
or
dec
int3
cmp
add
sbb
test
repz
enter
adc
xchg
or
mov
adc
pop
xlat
pop
sub
pop
sbb
inc
test
aas
and
fcomip
aaa
insb
pusha
xor
push
leave
xor
lods
mov
xchg
mov
push
cmp
inc
fsubs
ljmp
push
enter
mov
dec
cwtl
inc
addr16
lock
pop
popf
lods
mov
sub
or
ret
aad
jecxz
fcoml
push
cmp
into
cmp
sbb
scas
movsb
movsb
mov
std
in
out
lahf
outsb
pmaxub
pop
ljmp
jnp
pop
out
gs
mov
out
sub
ja
cmp
xchg
xchg
sar
outsl
in
lahf
xchg
arpl
sub
faddl
and
and
arpl
ret
xchg
les
pop
sub
dec
sub
jb
aam
fnstenv
mov
sub
add
nop
repz
lahf
jae
fdivs
push
pop
fldl2t
sub
shlb
or
mov
lahf
push
imul
jne
pusha
push
inc
push
enter
add
ret
push
jbe
popa
sub
push
jb
test
bound
or
int3
cmp
push
push
mov
ljmp
push
enter
pop
pop
fisttps
mov
lret
mov
mov
adcl
xchg
xor
cmpsb
nop
push
jae
hlt
cmp
pop
insb
or
mov
mov
xor
lods
xchg
mov
xchg
dec
ja
mov
jecxz
mov
movb
fiaddl
hlt
adc
ret
mov
xlat
and
and
mov
mov
cmp
pminub
loope
and
jp
pop
in
addr16
ljmp
scas
push
loop
cs
imul
mov
sbb
push
ss
aad
ja
mov
mov
clc
push
int3
aaa
sub
cmc
iret
clc
icebp
iret
xchg
imul
dec
mov
pop
lcall
push
push
outsl
sbb
sbb
mov
jl
fs
inc
or
or
cmp
int3
jo
frstor
out
mov
notb
in
pop
ds
inc
insl
das
cwtl
jns
shrb
out
sbb
push
inc
pop
mov
xchg
cmc
inc
jns
les
add
sti
mov
test
xor
stc
mov
inc
ljmp
sahf
xorb
pop
push
push
nop
test
insb
inc
pop
inc
push
pop
cmp
aaa
int
fucomip
cld
call
sub
cmpsb
xor
mov
dec
cs
inc
jb
stos
leave
movsl
or
mov
inc
push
fs
out
pop
lods
mov
scas
xchg
mov
out
outsb
cld
and
mov
mov
mov
sbb
push
shrl
stos
cltd
sbb
jmp
lock
ret
jne
outsw
enter
jge
lcall
call
enter
or
and
sti
inc
xor
xchg
and
inc
adc
bound
or
adc
imul
mov
xchg
test
imul
mov
repz
xchg
mov
pop
mov
lret
push
sbb
lods
pusha
cmp
mov
pop
movsl
add
xlat
xor
subl
cmp
mov
pop
jbe
ds
pop
xchg
lcall
ss
adc
out
jle
out
in
lcall
xchg
cmc
mov
scas
xor
xlat
jne
xlat
and
les
mov
and
adc
sub
mov
adc
mov
mov
add
int3
repz
fists
jne
mov
inc
mov
les
fbstp
js
jae
xchg
out
int
stc
loop
addb
and
jge
out
lahf
inc
pop
imulb
push
sub
iret
push
xchg
inc
data16
xor
pop
jb
lcall
mov
lods
dec
mov
sub
out
push
xor
scas
into
jle
fs
sahf
mov
or
enter
sbb
cli
mov
xchg
mov
push
fidivrs
cmp
lahf
addb
addr16
sti
or
mov
lret
fs
inc
and
sahf
aaa
outsb
shl
into
adc
icebp
dec
mov
je
mov
sub
out
xor
adc
mov
sbb
jno
popf
jnp
int
lods
mov
jb
out
dec
sub
or
outsl
movsl
in
aad
dec
jae
mov
cmp
push
imul
push
dec
in
jae
mov
out
in
push
add
test
dec
cld
insb
rorb
xor
xorb
or
in
sarb
sarl
xchg
ret
lahf
xlat
es
daa
sbb
int3
mov
cmpsl
js
leave
lret
fstpl
ljmp
push
sub
sub
pushf
inc
jmp
rclb
xchg
insl
cmp
pop
jmp
sub
cmc
jns
into
lods
jmp
adc
mov
cld
adc
data16
sub
fidivrl
inc
arpl
xchg
imul
clc
dec
imul
adc
sbb
in
aam
jge
inc
repz
or
mov
cmc
mov
xor
jl
fucomp
and
jns
jg
movsl
cmp
loope
sahf
inc
adc
andl
inc
scas
mov
xor
lds
ja
jg
xchg
movsb
push
inc
push
icebp
dec
jl
mov
add
ret
sub
mov
in
sbb
sub
push
test
test
mov
pop
ret
dec
loope
stos
inc
push
cmp
js
and
jbe
scas
and
ljmp
repz
sbb
mov
fcoml
lahf
jp
push
xor
push
inc
mov
push
out
and
std
int
shrb
xor
ljmp
xchg
jne
mov
jge
dec
mov
jno
or
int3
xchg
imul
les
xor
xchg
dec
cs
pop
shl
and
lea
lds
cmpsb
dec
out
push
jno
out
dec
adc
nop
sub
jmp
jno
and
icebp
xor
dec
lea
sub
sbb
mov
xchg
dec
scas
decl
dec
cli
jbe
cmp
fsts
pop
test
xor
mov
jp
sbb
or
mov
cmpsl
stc
jmp
outsb
jo
fcoms
int
cmpsl
add
stc
mov
pusha
mov
and
xchg
sbb
dec
jmp
fs
and
xor
xchg
add
cmpl
jle
sbb
jl
push
sub
js
jb
in
and
sbb
jg
adc
repz
lods
dec
adc
push
adc
dec
or
sbb
xor
push
sub
icebp
jg
out
dec
jne
dec
push
and
in
js
sub
adc
in
adc
imull
je
test
scas
adc
push
test
and
inc
push
pop
repz
call
shl
or
mov
mov
sub
sbb
scas
pop
push
outsl
mov
test
mov
push
cmp
dec
out
dec
jae
mov
mov
lret
loopne
insl
aas
call
push
aam
rcrb
lahf
inc
arpl
mov
mov
sub
std
neg
out
cltd
inc
xchg
fcomps
dec
sahf
fisubl
addb
add
push
imul
imul
xchg
lods
jne
cmp
lea
xor
mov
pop
pop
mov
push
pop
add
push
adc
cmp
mov
mov
jo
fnstcw
inc
enter
cwtl
movb
xor
call
sbb
lock
fs
mov
inc
insl
add
sub
pushf
pop
or
fmuls
sub
sub
pusha
leave
ds
nop
aam
add
sub
rcll
cld
mov
ret
fildll
dec
cs
mov
cld
ret
jmp
sysret
out
jne
push
pop
data16
push
int
imul
scas
in
out
stos
roll
or
sbb
scas
mov
movsb
push
jb
not
repz
sub
or
leave
out
pop
call
xchg
inc
xchg
hlt
lcall
sub
sbb
mov
jle
scas
cli
fcoml
xlat
jl
lret
jne
movsb
shrb
dec
mov
idivb
orb
lcall
cli
ficomps
nop
jg
cli
mov
lcall
leave
data16
cmp
test
cmc
adc
push
or
push
pop
test
lods
les
add
mov
std
stos
xchg
arpl
mov
jg
test
sahf
scas
lahf
popa
in
call
out
daa
adc
mov
aam
sbb
ja
dec
mov
xor
pop
mov
sbb
es
cmp
xchg
cli
dec
stos
jp
cmp
sti
divb
cmp
les
push
cmp
adc
pop
or
push
insl
fldcw
xlat
sub
repnz
in
popf
clc
sub
daa
aaa
lods
push
bound
push
inc
repnz
vpmacssww
inc
inc
jecxz
out
xchg
inc
daa
int3
or
inc
jo,pn
pop
sbb
mov
dec
leave
add
stc
dec
cld
aam
cmp
in
out
in
mov
je
jb
out
pushf
lret
sbb
movsb
adcb
xchg
cwtl
mov
into
dec
repnz
pop
fs
jno
lret
xor
rorb
mov
dec
rep
stos
cli
sub
jl
add
clc
lcall
addr16
sbb
rclb
je
xchg
xor
cmp
mov
adc
je
xchg
mov
pcmpgtd
mov
pop
out
loope
int
sarl
sub
ret
adc
mov
xor
jmp
sub
adc
mov
xchg
sub
fwait
jb
sub
jl
andb
dec
xor
jnp
outsl
cmpsl
fisttpll
shll
jo
cmc
xor
ret
jge
test
xchg
outsb
push
or
lahf
cmc
dec
cmpb
xchg
jge
push
pop
xchg
pop
ja
push
shrl
out
add
mov
movsb
push
xchg
daa
repnz
das
jbe
std
in
xor
mov
shrl
push
dec
inc
xchg
or
data16
pop
push
aaa
add
xchg
jb
int3
cld
adc
cmp
adc
fstpt
lret
daa
insb
mov
xchg
sbb
mov
arpl
popf
jns
call
inc
int
or
mov
pop
scas
cwtl
inc
adc
dec
in
jbe
dec
mov
in
mov
je
push
lret
lods
sbb
cmp
pop
inc
push
push
push
std
cmp
std
jl
sub
pop
xchg
dec
faddp
out
arpl
xchg
and
arpl
fdecstp
pushf
mov
hlt
and
inc
xor
loope
cmp
xor
pop
shlb
push
pop
sbb
lock
fldcw
xor
insb
push
jmp
jnp
in
push
das
lds
pop
stc
sbb
pop
push
xor
pop
push
mov
cmpsl
into
cmp
inc
push
mov
lret
and
lcall
pusha
lahf
std
imul
fwait
push
xchg
xor
pop
sbb
xor
xor
rcrb
cmpb
lretw
test
out
adc
xchg
pushf
sub
lret
in
mov
mov
inc
loop
and
and
or
xchg
cld
inc
or
mov
sbb
fwait
and
negl
test
jge
sahf
lahf
das
lock
sub
sub
adc
stos
push
or
mov
xchg
das
lcall
in
movsl
cmc
cmpsl
lds
pop
sbbl
xor
ss
imul
sub
mov
imul
repnz
push
sbb
mov
adc
pop
push
insb
mov
jno
dec
flds
cmp
jp
or
and
loopne
lods
es
dec
push
icebp
insl
push
fistpl
push
out
repnz
insb
cli
cmpsb
cmp
enter
dec
fsubrl
cmp
sbb
icebp
pop
inc
in
push
sarl
stc
fiadds
add
imul
sbb
jg
call
daa
stos
mov
dec
sbb
mov
das
out
mov
scas
adc
cld
mov
leave
mov
mov
les
repnz
or
mov
ficompl
das
push
mov
pop
xchg
or
mov
lods
cmp
test
imul
dec
mov
imul
dec
pop
lret
xor
imul
nop
sbbl
std
sbb
imul
pop
sbb
js
adc
es
xchg
ds
test
dec
lods
or
aaa
cs
push
hlt
push
aas
iret
call
dec
cmp
jl
lret
lods
test
xor
add
insl
in
mov
inc
xchg
inc
outsl
jl
out
icebp
mov
adc
push
rorl
loop
mov
xchg
lret
cmp
mov
push
outsl
leave
cmp
mov
fnsave
or
scas
leave
pusha
mov
mov
pop
ss
xor
popa
fmuls
jmp
push
add
mov
push
sbb
aas
icebp
lock
movsb
sbb
xchg
decl
loop
inc
in
psubusw
or
stc
mov
in
test
mov
inc
or
cmpsl
test
xchg
push
popa
inc
in
iret
jbe
scas
imul
lcall
dec
sti
insl
pop
pop
push
mov
adc
in
in
int3
testl
jp
push
sub
aad
xor
push
sbb
movsb
imulb
cmp
pusha
scas
push
rcrb
cmp
movsl
mov
xchg
pop
js
cli
out
test
mov
outsb
je
lods
mov
clc
cmpsb
add
mov
and
divl
in
push
adc
jb
jnp
stos
in
enter
ljmp
fildll
into
push
cmpsl
xchg
aaa
add
test
loopne
imul
js
roll
leave
sub
cmpsl
or
jmp
ret
jle
sbb
std
mov
loop
addr16
jne
adc
mov
das
lahf
jp
cwtl
fcompl
mov
sbb
push
mov
int3
iret
add
test
in
mov
jo
lds
adc
insb
pop
ficoms
xchg
and
and
fcomps
pop
mov
or
divl
cmp
pushf
xorb
jnp
mov
mov
mov
mov
out
daa
sub
mov
hlt
dec
sub
loopne
and
mov
movsl
inc
mov
cld
imul
aas
and
test
sbb
pop
lock
pop
jno
mov
cwtl
sbb
dec
add
adc
add
test
divl
nop
outsl
push
cmp
dec
push
stos
and
mov
mov
xor
outsb
movsl
jge
adc
add
push
aam
insl
mov
gs
xchg
stos
mov
push
shrl
ja
jnp
mov
or
push
and
inc
stos
push
in
test
jmp
insb
ret
xor
addr16
test
jo
sub
or
cmp
mov
push
cmp
adc
sbb
lds
cmp
sub
pop
mov
nop
inc
mov
scas
mov
int
cmpb
xchg
mov
sbb
testb
jbe
test
cmp
and
cmp
lcall
popf
push
lret
loope
mov
dec
xor
adc
or
pop
les
aad
mov
mov
mov
pop
ja
pop
fnstcw
ds
mov
xor
sar
pop
lahf
adc
inc
adc
jnp
or
mov
or
xor
pop
jns
data16
inc
bound
cmpsl
insl
arpl
movsb
gs
xchg
inc
jae
call
mov
and
outsb
shrb
sub
mov
ds
xchg
rorl
push
adc
jns
push
mov
inc
or
jo
mov
mov
jp
int3
jno
out
xchg
aam
enter
jmp
add
shl
lea
lods
push
xor
ss
cli
aaa
loope
xchg
jno
pop
scas
imul
fdivs
inc
popl
lock
pop
out
aad
outsl
cmp
push
xchg
xchg
imul
xor
xor
outsl
outsl
dec
outsb
movsl
xor
sbb
mov
and
inc
jbe
xchg
mov
or
mov
jno
mov
cld
mov
orb
mov
out
push
insl
pop
push
std
adc
inc
xor
ja
jno
adc
or
pop
in
sbb
push
rol
in
or
fnstenv
inc
test
mulps
aas
jmp
test
lea
ss
lock
bound
mov
xchg
cmp
out
lret
stc
das
enter
jns
jo
andb
aas
add
iret
dec
rcrb
fisubrl
icebp
xor
aam
leave
leave
add
subb
sbb
jb
imul
xor
push
popa
mov
jecxz
mov
mov
sub
push
dec
imul
cs
in
les
push
jb
add
rclb
js
cli
dec
dec
test
push
out
cld
rcrl
roll
mov
hlt
enter
dec
adc
gs
pop
xor
push
jg
mov
jbe
cmp
jae
movl
aaa
inc
pop
add
mov
jb
add
repz
imul
leave
sbb
call
scas
xchg
in
insl
push
ficompl
movsb
xlat
pop
loopne
cmp
dec
mov
lfence
pop
fwait
push
sahf
cltd
or
push
bound
mov
lea
in
call
rep
movsb
add
sub
inc
cmp
sti
pop
cmp
pop
shrl
aam
sbb
sbb
sbb
sbb
sbb
in
sub
scas
scas
sbb
orl
mov
arpl
mov
sahf
and
cmc
push
inc
movsb
and
in
sub
repz
sub
or
pop
cs
pop
or
push
xchg
jo
int3
mov
lcall
or
jae
insl
pop
mov
ret
rclb
sub
jge
mov
outsl
daa
out
js
jbe
pop
inc
std
out
push
pop
sub
pop
inc
loopne
pop
sbb
sub
std
or
and
out
or
pop
hlt
int3
sbb
or
xchg
sbbb
bswap
outsl
sub
fwait
das
push
in
stc
cld
mov
xor
mov
push
or
add
stos
mov
inc
cltd
adc
dec
dec
stc
pop
out
call
fldcw
lcall
mov
rcrl
das
in
ret
lcall
test
add
notb
mov
into
inc
add
xor
mov
and
inc
in
inc
xchg
mov
or
aam
sahf
mov
arpl
jo
out
int
cmp
inc
std
fisubs
pop
push
ljmp
push
adc
mov
gs
out
mov
mov
sbb
dec
mov
push
lret
xchg
inc
xchg
xor
dec
stos
pusha
push
cmpsb
jo
pop
insl
movsl
pop
int3
inc
xlat
mov
sub
mov
fmul
jmp
fwait
addb
mov
es
and
mov
iret
sbb
inc
dec
xor
mov
jnp
xchg
inc
imul
test
in
push
rcll
and
sub
xor
bound
fidivl
in
push
jge
ja
idiv
arpl
dec
pop
leave
jbe
popf
xchg
decb
call
cmc
ret
pop
and
xor
cmc
sub
mov
mov
jp
nop
decb
mov
ja
aam
inc
rol
mov
jb
jno
xor
mov
arpl
out
pop
push
cmp
xor
test
mov
mov
push
cmpsb
ret
bound
data16
xor
hlt
jle
je
lea
dec
pop
cmp
and
and
push
sbb
mov
sbb
imulb
push
cmpl
adc
adcb
rolb
lcall
jmp
aam
aaa
into
add
rorb
xlat
stos
or
nop
pop
and
fistpll
or
dec
xor
sbb
jge
sbb
xchg
mov
dec
add
xchg
mov
adc
jb
shrl
shrb
or
add
jg
lods
inc
mov
xor
add
adc
psubq
jb
outsl
cli
dec
lret
faddl
cmp
mov
jmp
cmpl
dec
push
sti
or
ret
xchg
jl
jl
or
cwtl
push
bound
imul
adc
and
repz
add
or
mov
out
cmp
xor
aaa
pop
xchg
mov
jno
jecxz
stos
aam
lods
loope
mov
icebp
xchg
bound
xchg
cs
sbb
bound
pop
in
out
mov
adc
mov
test
pop
lahf
sahf
xchg
and
or
sbb
dec
cmp
repnz
sub
inc
les
add
mov
add
jle
push
popa
adc
mov
test
fdivs
mov
neg
and
mov
adc
lods
imul
cs
xor
test
xchg
cmpsb
inc
mov
pop
ret
in
mov
inc
loop
xor
jnp
aas
fs
in
dec
int3
test
clc
xchg
cld
sti
lea
insb
xchg
xor
in
ret
clc
mov
mov
pusha
cmp
inc
mov
push
sti
mov
mov
mov
jge
cli
jecxz
es
jbe
mov
in
hlt
testb
sub
hlt
out
xchg
xor
sbb
sub
push
lcall
xchg
add
out
jmp
js
cli
ret
int3
iret
push
out
out
xlat
repz
xor
jae
dec
push
push
sahf
in
dec
aas
sub
mov
mov
and
lds
mov
cld
pop
pop
scas
filds
inc
subl
negb
xchg
fisttps
sub
shll
pop
jne
fstps
out
xor
adc
jns
es
jp
loopne
sbb
fstps
jg
data16
jp
mov
ret
push
call
and
iret
sub
loopne
xchg
pop
out
int3
lds
enter
mov
aas
lds
sbb
arpl
xor
test
fst
les
jle
xor
out
push
xchg
mov
in
fisttps
pop
adcl
mov
jg
imul
cltd
xchg
jno
pop
les
mov
fsubr
lods
mov
lret
rcrl
sti
jno
js
test
loop
mov
sbb
dec
aad
dec
dec
fisubs
aaa
shll
out
inc
pop
test
lret
outsl
xor
mov
js
cmpsb
and
bound
imull
adc
loopne
ss
pop
sti
fcoml
rcl
pop
jnp
mov
aaa
adc
test
mov
loope
rep
imul
sub
inc
leave
add
mov
jmp
daa
test
dec
or
jg
fdivl
jge
fsubrl
jmp
jmp
xor
add
push
les
or
lret
pushf
testb
sbb
push
dec
xor
sub
pop
add
mov
cmp
sbb
xchg
and
xchg
add
jns
repz
xorb
lret
enter
push
enter
nop
pop
fwait
sahf
adc
jb
mov
inc
movb
jb
push
cmpsl
das
cmc
pop
int
and
or
mov
inc
jp
shl
adc
xor
mov
pop
or
in
into
pop
push
fdivrs
xor
and
lcall
mov
fwait
js
xor
jns
cmc
mov
dec
xchg
dec
ret
ret
add
push
cmc
and
xchg
fbstp
mov
lret
add
inc
jmp
into
and
in
push
ret
mov
test
xor
inc
sub
mov
cltd
pop
sti
leave
xor
jb
and
jl
or
loopne
les
in
mov
mov
adc
cmpsl
scas
int
shll
sub
mov
mov
in
dec
test
movsl
cmpsb
mov
add
lods
pop
mov
lods
add
push
jnp
or
mov
shrl
das
xor
jg
mov
daa
adc
xor
mov
xchg
push
loope
hlt
mov
icebp
xchg
idiv
outsb
gs
or
jp
into
xor
sub
aam
mov
xchg
stc
fnstenv
lods
jns
cli
stc
sti
in
sub
stos
mov
pop
add
sbb
fwait
pop
stc
or
xchg
popf
les
and
or
lret
mov
and
outsb
mov
jmp
mov
sub
xchg
and
jbe
cmpb
movsb
pop
sub
pop
adc
pop
push
repz
push
push
out
lods
mov
mov
mov
int
lods
out
scas
sti
pop
ror
ljmp
and
dec
or
outsb
popf
ja
shl
xchg
lock
lret
aad
xor
pop
or
add
setl
mov
scas
dec
rorl
orb
imul
arpl
jno
add
cltd
dec
into
pusha
pushf
dec
repz
add
dec
adc
out
adc
pushf
jb
and
push
icebp
sub
ret
xor
scas
std
aaa
mov
mov
jae
out
shrl
and
es
cmp
add
inc
enter
outsb
jmp
leave
sub
push
jmp
ja
cmp
dec
loopne
xchg
sub
adc
xlat
push
in
sbb
pop
push
insb
add
sbb
pop
mov
or
stos
loopne
cmp
mov
inc
inc
pop
xchg
push
jg
sub
jae
into
cmp
adc
ja
lret
into
js
cmpsl
movsb
out
pop
iret
sbbl
lea
loopne
int
nop
sbb
call
fistps
iret
cld
lods
data16
push
aas
cli
xchg
or
loopne
mov
adc
dec
jmp
ds
jbe
inc
push
shll
in
ss
jge
fistpl
push
flds
mov
sbb
lock
mov
cld
sbb
or
ljmp
in
or
sti
aam
clc
test
loopne
roll
shrb
ret
adc
jae
aas
add
int
lea
pop
lret
scas
adc
ljmp
hlt
lret
dec
call
jns
or
loope
fistpl
test
call
int3
filds
or
xchg
aad
xorl
pop
adc
adc
xor
or
aam
loop
mov
movsb
inc
cmpsb
aaa
pop
pop
or
cmp
arpl
test
xor
jp
stos
fsubrp
cli
movsb
inc
add
js
frstpm(287
je
jmp
cwtl
cs
jae
adc
shll
inc
dec
jge
mov
push
mov
cwtl
repz
or
dec
sbb
sub
mov
fldpi
pop
clc
out
xorb
add
adc
push
mov
mov
imul
mov
mov
sbb
jne
mov
adc
pop
fs
pushf
fstpt
pop
mov
loopne
hlt
fldenv
pusha
rcrb
add
push
fnstenv
iret
dec
sbb
cmpsb
cmp
push
cli
xlat
imulb
push
cmp
movsl
dec
xor
inc
das
xor
sub
lods
jno
adc
ja
ds
or
cli
push
and
test
sub
cwtl
push
aam
daa
clc
or
mov
pop
mov
je
test
xchg
and
bnd
dec
xchg
add
mov
xchg
cwtl
adc
pop
push
sub
jp
jmp
mov
iret
mov
lahf
mov
cmp
cltd
lea
pusha
mov
movsl
add
out
mov
mov
adcl
hlt
repz
lret
fnstcw
inc
mov
cmp
mov
movsb
lahf
pop
imul
and
cmpsb
js
ficompl
jne
sub
addr16
mov
ret
cmpsb
ljmp
pop
in
frstor
ret
insl
mov
pop
cmp
xor
pop
aad
sbb
fildll
fdiv
mov
imul
pusha
mov
loope
push
sub
test
scas
xor
xorl
xorl
lds
cmpsl
fstpt
sahf
addr16
xchg
flds
and
sbb
jno
or
lods
mov
repz
mov
mov
xor
loop
mov
ret
into
loop
test
mov
les
or
lahf
test
inc
rclb
add
mov
icebp
pop
pop
pop
fs
ficomps
pop
pop
cmpl
mov
push
adc
lods
ficoms
std
orl
or
sar
aam
push
ss
jbe
stc
pop
pop
xor
mov
sbb
dec
add
and
cmpsl
loope
hlt
test
rolb
hlt
repnz
hlt
sahf
pop
push
cmp
jle
push
push
mov
frstor
add
mov
lret
in
jno
popa
mov
into
aas
arpl
in
cld
adc
jp
shl
in
sub
mov
nop
repnz
xlat
adc
inc
lahf
fnstsw
std
pop
cmp
insb
cs
ret
test
jno
cld
push
jge
sbb
fwait
aad
push
cmp
lds
sub
fadd
push
jmp
inc
repz
ret
popf
lds
xchg
xlat
adc
or
cmp
or
arpl
repnz
clc
into
or
scas
or
pusha
aaa
outsb
popa
scas
loop
popa
sub
jne
outsb
out
cs
popf
xchg
pop
sub
jns
jmp
ds
int
pop
movsl
shll
mov
or
testb
sub
mov
pop
adc
ret
subl
cmp
pop
sbb
sbb
sub
sub
inc
mov
in
pop
cltd
xchg
sbb
xor
cld
cs
leave
xchg
mov
scas
cmpsb
xor
dec
mov
xchg
inc
pushl
pop
cmp
and
jo
sbb
inc
in
shlb
xchg
xchg
inc
xor
pushf
pop
or
ljmp
cmp
arpl
je
shrb
loope
mov
xchg
aad
cmpsl
mov
mov
je
daa
mov
int
xchg
out
mov
jl
push
push
fsubl
mov
pop
mov
mov
jae
jl
loope
mov
das
dec
mov
jb
add
inc
ss
mov
xchg
mov
or
outsl
das
jbe
mov
add
fnsave
rcll
xor
mov
movsl
aad
cmp
test
xchg
idivl
subb
ja
push
test
jl
stos
negb
pop
and
scas
and
xor
sarl
mov
imul
daa
jge
pop
sbb
mov
cmp
jns
dec
aas
jbe
es
ja
xchg
cmpsb
pop
cld
ds
cmpsl
lock
jne
mov
mov
mov
pop
dec
outsl
mov
fwait
sub
mov
daa
ljmp
xchg
add
fmul
test
iret
sahf
jmp
push
andl
arpl
hlt
add
mov
gs
cmpsl
iret
das
sbb
movsbl
shlb
or
rorl
mov
popf
or
lods
das
push
lods
hlt
js
bts
imul
outsl
out
out
addr16
mov
jp
sbb
fwait
inc
fs
clc
push
dec
enter
ficompl
pop
nop
movsb
jnp
scas
lock
inc
or
push
sub
adc
les
orl
je
cmpsb
in
cld
pop
imul
or
popa
data16
push
jg
mov
aam
das
ret
popa
ja
xor
sub
int3
push
cli
lahf
sub
jno
pop
cwtl
ja
arpl
add
sub
dec
test
cmp
fmulp
adc
in
pop
das
inc
jae
daa
jmp
mov
sbb
shlb
jno
cmp
adc
xor
push
sub
or
adc
mov
or
lret
add
and
bound
sarl
push
jmp
or
ljmp
outsl
je
jecxz
mov
stos
mov
jbe
xchg
jmp
fs
mov
mov
repnz
cmp
lds
dec
insb
gs
stos
sti
bts
sarl
cmpsb
sbb
jmp
xchg
rcl
inc
mov
pop
and
and
iret
gs
gs
mov
lods
ret
jae
adc
in
in
jae
jge
cmp
in
fwait
es
or
dec
fsubr
sbb
sbb
xchg
and
mov
lret
xorw
push
jns
cmpsb
adc
push
out
dec
adc
cwtl
add
jge
mov
jp
xchg
sbb
movsl
hlt
aas
pop
jmp
mov
push
sbb
test
lods
xlat
mov
or
pushf
cmp
clc
xchg
loopne
cmp
adc
out
pop
cmp
data16
mov
lods
add
fisttpll
xor
shlb
mov
pop
in
fwait
xchg
std
les
mov
sbb
sbb
xchg
adc
ret
fwait
divl
in
das
cmpsl
nop
les
pop
push
add
ss
dec
push
xor
push
fdiv
jne
insl
arpl
lea
fistpll
stos
les
icebp
cmp
xchg
imul
push
fisttpll
sub
cmp
ret
jnp
addr16
test
or
insl
dec
pop
cmpsb
enter
fidivrl
and
sub
push
xchg
aad
orl
rcll
lahf
insl
insb
mov
in
pop
pop
add
call
pop
aad
fldenv
fisttps
shl
mov
sub
rclb
lock
cltd
clc
fbld
jmp
pop
nop
lret
movsb
cmp
mov
out
dec
jne
sbb
insb
push
and
or
push
test
xor
xchg
negb
push
or
stos
mov
fwait
push
in
and
inc
aad
mov
outsb
add
xor
mov
sbb
mov
ficoms
xor
or
add
mov
fwait
mov
add
cs
and
sub
pop
sub
adc
pop
cmpsl
loopne
cld
mov
out
stos
fwait
js
adc
add
xor
cmp
lods
divl
arpl
lds
rcrb
pop
sbb
ret
gs
mov
push
sarb
fsubrs
jo
jecxz
inc
lods
in
or
inc
jle
pop
pop
push
call
aam
sub
cmp
jp
int3
dec
stc
mov
xchg
cmp
mov
cmp
inc
lret
mov
and
inc
jb
vpperm
xor
loopne
mov
lahf
movsl
adc
jo
shrb
mov
pop
pop
sbb
sub
sbb
inc
shrl
xor
movsl
andb
jbe
or
fs
hlt
insl
insl
mov
xchg
jnp
js
mov
add
xor
inc
adc
xlat
mov
and
incl
mov
jecxz
mov
lods
or
popa
les
movsb
pop
xor
mov
int3
cmc
jmp
in
mov
mov
or
outsl
jno
xchg
cmp
fcoml
jmp
in
push
mov
xchg
push
loopne
mov
test
orb
insl
push
mov
daa
mov
ds
lret
stos
sbb
or
test
fwait
ljmp
fwait
jge
cld
inc
out
mov
add
sbb
jge
push
mov
repnz
div
scas
mov
fmuls
loopne
and
outsl
sub
and
stos
xorb
pop
out
mov
jmp
cvtps2pd
add
mov
cmp
pavgb
orb
ficompl
sub
jbe
fsqrt
gs
xor
or
movsl
push
int
mov
mov
jnp
inc
into
push
clc
fstl
xchg
out
jmp
mov
mov
shrb
xor
sbb
sbb
sarb
test
loopne
push
in
jmp
pop
aaa
lea
push
jne
push
inc
cmp
fsubrs
fucom
fs
dec
imul
xor
sbb
mov
cs
lea
lcall
cmpsb
mov
xchg
and
addb
and
scas
push
int
lcall
sub
incl
xchg
into
inc
lds
xor
sub
fmuls
ss
mov
adc
xor
aas
fidivs
addr16
stc
xchg
lock
jecxz
add
loopne
pop
out
xor
faddp
push
mov
cmp
and
pop
jb
leave
js
mov
sbb
adc
xchg
xor
sbb
sbb
jg
es
dec
cltd
jmp
fs
jbe
into
inc
push
mov
arpl
jo
and
push
movsl
ret
mov
adc
adc
imul
xchg
lds
out
mov
sbb
repnz
mov
pop
pusha
xchg
cmp
inc
dec
dec
mov
int
ja
popa
stos
sub
insb
inc
and
movsl
rcll
xchg
jns
fwait
orb
cmp
repz
mov
inc
into
popf
es
sbb
aam
pop
push
lret
push
out
cmc
mov
inc
movsb
jl
mov
jp
sub
xor
inc
sub
out
push
inc
sbb
popf
sub
orb
and
dec
pop
jp
pop
and
ljmp
imul
sbb
repz
mov
addr16
lods
js
cmpsl
out
sub
adc
mov
mov
sub
xor
mov
xor
xchg
add
add
sbb
cld
push
ja
or
and
mov
sbb
dec
and
das
sub
jmp
setg
mov
mov
xor
cmp
imul
popf
sbb
cmp
das
lret
not
mov
push
mov
lret
xor
mov
in
mov
cmp
add
lods
jmp
mov
int3
mov
popf
js
jno
xchg
clc
adc
loopne
aad
pop
popa
test
outsb
add
jge
scas
lock
repnz
and
pop
jns
push
jp
push
lea
iret
stos
iret
cwtl
nop
sbb
xor
sub
cmp
add
adc
jmp
jne
cmc
lock
inc
sarl
roll
cmp
lods
jns
decb
mov
sub
lods
shrb
sub
push
sbb
jbe
not
sbb
std
push
aam
jmp
add
mov
mov
mov
add
mov
addb
xchg
mov
mov
mov
ljmp
sar
pop
lods
imul
or
call
sub
ja
lcall
js
xchg
ret
pusha
stos
in
les
mov
lock
jns
pop
and
and
sbb
xchg
lods
stos
iret
lcall
xor
les
stos
mov
cmp
cmp
push
inc
xor
test
mov
sbb
sbb
xchg
cmp
cs
mov
das
cmp
adc
add
mov
add
jnp
test
jge
mov
enter
imul
xlat
mov
lret
call
into
test
mov
pushf
mov
jle
mov
test
dec
addr16
icebp
xlat
int
dec
popf
mov
fs
cmpsl
js
add
sbb
fstl
pushf
adc
sub
fsts
movsb
fs
mov
or
mov
fidivrl
mov
ret
mov
sub
cmp
cwtl
adc
lods
dec
popa
shl
leave
or
lods
push
mov
mov
jb
push
push
aad
fstpl
dec
cmp
and
dec
je
or
mov
lods
mov
jmp
and
addr16
sbbb
fbld
enter
mov
in
testb
std
pushf
js
sub
inc
mov
btc
insb
cmpsb
or
push
xor
mov
dec
aam
mov
cwtl
lods
push
fadd
adc
cmpsl
xchg
data16
movsl
loopne
mov
imulb
fsubrs
push
mov
xor
aas
lahf
mov
addr16
sub
mov
iret
imul
insl
mov
mov
or
nop
in
or
fdivrl
sbb
add
add
setns
xor
lahf
mov
push
sahf
out
lods
cwtl
dec
xor
lods
cs
xor
or
xchg
sbb
jl
mov
jp
xchg
push
dec
pop
xchg
adc
cld
nop
pop
scas
call
and
cmpsb
cld
add
ljmp
xor
jb
sub
adc
mov
mov
movsl
jnp
lcall
jmp
dec
bswap
mov
push
pop
call
sbb
push
sub
insl
sti
hlt
call
imul
pop
dec
push
push
sti
cmp
std
jge
out
cltd
dec
sbb
dec
mov
hlt
int3
aaa
imul
jmp
test
stos
jecxz
test
xchg
int3
sbb
js
bound
movsl
and
ret
or
and
cwtl
inc
imul
lods
stos
inc
inc
cmpsb
daa
jge
clc
jno
fdivrl
push
imul
cmp
loopne
pop
sbb
inc
push
xor
cwtl
rorb
inc
jb
inc
daa
fwait
stos
mov
jp
push
inc
inc
mov
mov
xchg
mov
mov
in
aam
push
add
pop
mov
jnp
cmp
jecxz
xor
test
xor
push
repnz
clc
cmc
and
repnz
mov
or
xchg
push
dec
inc
or
je
inc
int
andl
enter
jns
and
mov
adc
lea
pop
xchg
add
jge
cmp
aad
test
test
adc
test
loop
hlt
xchg
ljmp
xchg
shrb
xchg
aas
test
enter
mov
add
dec
pushf
sbb
xor
por
dec
inc
mov
mov
mov
sbb
mov
roll
in
daa
pusha
and
cmp
jo
rorl
ret
dec
addl
jns
ror
lods
sub
daa
popf
fisttpll
inc
mov
sarb
mov
or
sub
ds
call
imul
push
mov
nop
fstpt
orl
test
jmp
jge
mov
mov
push
jo
mul
movsl
mov
add
pop
xor
cmp
and
movsb
bound
subb
movsl
cli
movsl
jnp
dec
jb
push
je
aas
std
lcall
mov
xor
mov
and
cmp
mov
cmp
adc
outsl
icebp
out
aas
mov
inc
out
stos
adc
push
cwtl
xchg
iret
mov
push
pop
push
pop
jp
dec
in
inc
mov
subb
and
cmpsb
in
enter
movsb
jmp
jb
mov
or
and
sub
outsl
dec
loopne
mov
mov
enter
mov
ss
sti
xchg
inc
mov
xor
cmp
jle
nop
hlt
push
test
add
adc
mov
mov
pop
iret
xor
or
cmp
nop
leave
js
adc
mov
and
cmpsl
sub
gs
mov
push
lidtl
movsl
or
adc
div
cmpsl
inc
stos
mov
int3
insl
sbb
dec
repz
sahf
xchg
mov
int
std
or
pop
jecxz
cli
sbb
into
popa
in
sbb
sub
xchg
jge
mov
mov
test
clc
mov
daa
into
inc
cld
push
ret
fisubrl
mov
pop
adc
fs
mov
dec
sbb
fwait
inc
into
rcrb
iret
jne
and
mov
loop
add
pop
mov
lret
inc
push
sar
les
sbb
xchg
sbb
jmp
and
orl
mov
dec
cmp
and
pop
aas
jne
pop
cmpsb
arpl
out
pop
sbb
lret
push
mov
rcrb
cmpsl
add
xchg
adc
sbb
mov
in
pop
dec
rorl
shrl
or
xchg
ss
bound
imul
xor
mov
or
imulb
insb
mov
mov
fsubr
push
hlt
adc
rolb
in
mov
xor
in
xor
pop
popf
lea
xchg
mov
pop
sub
or
shrl
jmp
repnz
xor
fwait
xor
fadds
and
movsl
in
mov
lea
movsb
mov
loop
sub
add
or
adc
pop
jno
push
fs
ss
mov
jmp
xchg
cltd
mov
jg
inc
sbb
call
pop
cmc
and
xchg
dec
mov
cli
push
das
cmp
sti
adc
sub
nop
and
dec
add
sbb
xchg
cld
clc
subl
mov
iret
repz
mov
add
imul
into
jp
dec
test
push
xchg
cs
sbb
jnp
cmp
mov
jmp
out
pop
mov
inc
int
negl
sbb
adc
jmp
mov
fsubp
and
inc
cmp
fwait
or
adc
out
xorl
pop
push
stos
pop
pushf
pop
adc
pop
fwait
ds
rorl
repnz
int
add
and
xchg
adc
inc
sub
mov
leave
rol
mov
or
pop
cld
cmpsb
inc
repnz
xchg
and
stos
dec
fisttpl
and
imul
and
aam
cmpsl
mov
loope
xchg
call
jge
jle
in
inc
sbb
or
leave
lock
les
aaa
sub
jo
dec
mov
mov
les
int3
mov
pminub
mov
dec
mov
dec
cmpb
cmc
mov
push
push
fisttps
outsl
hlt
scas
cmpsb
or
or
cli
stos
adc
rorb
out
outsl
divb
cltd
xor
inc
xor
subl
mov
pop
xor
lea
mov
xor
arpl
call
lods
sbb
pop
cli
test
cwtl
std
scas
rcrl
into
cld
fdivl
test
movzwl
xchg
ds
mov
je
fwait
mov
mov
lret
addr16
sbb
cmp
pop
hlt
xor
lea
add
mov
cs
or
adc
cwtl
ret
lock
cmp
shl
cmp
in
shl
in
jg
push
call
scas
js
dec
xchg
in
or
loop
cmpsl
and
sub
pop
mov
xor
xor
adc
mov
mov
mov
mov
xchg
xchg
rcll
mov
sarb
notl
and
testl
adc
inc
in
mov
add
mov
xor
cmp
xchg
push
fistpll
loope
mov
add
push
fstpl
rorl
loope
in
pop
shrb
xchg
cmp
mov
sbb
loopne
testl
ret
push
pop
in
out
mov
mov
adc
clc
pushf
mov
jno
sub
mov
mov
bnd
pop
inc
ja
mov
add
sbb
loop
mov
jbe
push
inc
cs
xor
js
loop
inc
hlt
jle
sub
aam
aas
jle
add
inc
and
in
and
pop
push
xor
pop
add
insb
cmovae
mov
lods
rclb
negb
push
shr
cmp
dec
xchg
cmp
xor
ror
jb
outsb
cmpsb
out
mov
cmp
pushf
call
enter
mov
in
xor
daa
sbb
shl
sub
lret
push
setg
les
sarb
or
mull
stc
rcll
sbb
and
mov
leave
xor
sub
pop
cmp
mov
outsl
gs
or
call
xchg
mov
pop
pop
push
daa
out
push
cwtl
mov
enter
jns
pop
fsts
jge
xor
inc
ja
fldcw
loop
adc
shlb
sti
inc
add
lret
mov
jnp
lock
pop
ror
cli
jnp
fs
cmp
cmp
xor
adc
push
mov
pusha
jno
pop
mov
xchg
shr
loop
iret
sbb
mov
mov
pop
mov
push
and
rolb
movsl
sub
push
mov
mov
loope
daa
xorb
loope
mov
dec
xchg
mov
or
fsubrs
adc
repz
and
mov
lret
popf
mov
push
add
lods
fdivrl
ret
divw
jp
dec
outsb
mov
jecxz
inc
pop
adc
cmp
mov
xor
pop
jnp,pt
lea
mov
js
jp
mov
fsubl
sbb
movsb
stos
add
dec
cmp
adc
into
testb
inc
dec
gs
cmpsl
push
xor
cli
popf
inc
icebp
je
jle
enter
clc
inc
sbb
sbb
sbb
repz
xor
pop
test
test
add
mov
dec
ds
sub
dec
inc
xchg
jmp
mov
xchg
xchg
push
ljmp
scas
mov
and
int
repnz
lret
mov
je
popf
out
clc
scas
and
scas
jb
push
mov
test
stc
in
jnp
rcll
xor
sbb
or
mul
aad
sbb
int3
adcb
cmpsb
sbb
in
sbb
pop
mov
fidivl
push
adc
mov
negl
shlb
pop
inc
test
jns
or
jecxz
out
in
xchg
mov
xchg
and
mov
add
mov
aaa
xchg
pop
stos
mov
into
aad
loop
loopne
lret
cmp
cld
ljmp
cwtl
or
sub
ds
add
fcmovnb
mov
dec
jecxz
cli
mov
mov
pop
pop
fisubrl
neg
pop
std
push
movsb
mov
jle
pop
add
xchg
nop
push
aad
or
mov
inc
ja
fstpt
adc
sbbl
sub
popa
js
lods
jmp
insl
mov
add
gs
and
out
jp
jmp
sahf
sbb
repnz
inc
arpl
hlt
iret
shlb
mov
incl
and
outsb
adc
shlb
mov
pop
xor
jge
shl
vpshlw
mov
addr16
inc
adc
daa
inc
dec
or
mov
pop
dec
test
jno
xchg
pop
je
push
gs
cmp
movsl
addr16
int
mov
out
mov
or
scas
or
xchg
out
fcompl
xor
mov
je
pop
movsl
xor
mov
xlat
adc
popf
push
into
sahf
lock
jne
jo
out
push
sahf
mov
sub
mov
push
xchg
sub
adc
xor
xor
jo
test
ficompl
ret
clc
cmp
or
jl
mov
pushf
test
cmp
pop
pop
lahf
sub
pop
jne
xor
out
dec
shlb
loopne
jb
sub
hlt
jns
inc
mov
sbb
loop
popa
mov
adc
sbb
nop
mov
sub
sti
mov
mov
stos
popa
lods
ljmp
xor
cmp
jmp
sbb
pop
test
in
stc
mov
test
pop
xor
pushf
and
and
les
or
insb
repnz
cmp
test
mov
push
mov
out
sbb
xchg
int
or
push
jp
and
mov
mov
leave
cmpsb
pop
pop
inc
mov
filds
inc
pusha
mov
xchg
mov
mov
mov
and
gs
leave
add
sbb
iret
pop
hlt
push
ljmp
mov
arpl
adc
sbb
xchg
out
inc
fbld
jmp
mov
fnsave
push
inc
cwtl
insl
mov
repnz
sahf
pop
push
cmp
mov
inc
add
je
aaa
xchg
xchg
test
cli
mov
mov
rcrl
fbstp
push
fwait
insl
mov
and
loop
cmpsl
out
fs
or
sbb
fisubs
int3
adc
inc
dec
fisttps
dec
int3
sahf
andl
mov
sub
stc
hlt
cmp
movsl
movsb
fadds
mov
adc
pop
push
jl
sub
leave
into
aaa
das
das
lret
cmc
inc
imul
mov
mov
inc
int
in
add
lret
push
mov
fadd
in
sub
dec
mov
mov
stos
push
sub
aam
mov
or
daa
xchg
loope
and
imul
iret
push
insb
and
dec
imul
nop
jb
adc
pop
dec
aaa
sbb
adc
pushf
bswap
outsl
shll
ljmp
sub
pop
aam
pusha
xorl
les
loop
fcoml
mov
mov
pop
xchg
sub
pusha
pop
cltd
scas
je
adc
or
xor
push
pop
xlat
sbb
cltd
mov
push
xor
adc
add
cmp
mov
cmpsl
in
jb
arpl
mov
repnz
fistpll
mov
adc
rcrl
xchg
loopne
push
in
ja
gs
adc
insb
cmp
jns
or
push
cltd
sub
sbb
inc
outsl
ljmp
shlb
in
inc
or
inc
mov
test
stos
pop
adc
pop
shl
cmp
in
dec
in
jecxz
xor
xor
insb
ds
out
shrl
in
sti
test
pop
icebp
inc
iret
sbb
adc
xor
adc
sub
add
push
outsl
loop
std
jle
inc
mov
mov
movsl
repz
lahf
mov
fisttpll
out
mov
shll
add
loopne
mov
mov
xor
loopne
jle
les
imulb
and
adc
test
or
pop
mov
dec
jnp
cmc
pop
lods
pop
pop
adc
out
aaa
xor
int
mov
fsubp
pop
mov
cwtl
cmp
lods
inc
inc
add
rorb
cmp
jp
jb
mov
fistps
lock
les
sub
push
inc
push
pop
popa
xor
push
icebp
and
pop
sub
pop
pop
mov
xor
cltd
xor
imul
mov
cmpsl
decb
jg
lahf
cld
arpl
pop
sub
push
scas
and
dec
dec
jge
addb
mov
mov
sti
ja
pop
pop
cmp
push
test
and
popf
push
cmpsb
or
in
and
jns
stos
jae
mov
add
ret
jae
and
fcomps
movsb
lds
mov
into
movsl
mov
pushf
int3
mov
aad
aas
sbb
in
in
rolb
lods
test
scas
les
dec
popf
cwtl
add
jmp
aad
cli
in
in
jne
rcr
mov
sbb
and
push
adc
mov
lret
stc
inc
enter
jmp
xlat
lods
int3
mov
adc
add
cmp
mov
mov
insl
xchg
inc
icebp
jns
mov
loopne,pt
pop
push
mov
sbb
pop
incl
push
mov
and
add
mov
movsb
idiv
outsb
add
loop
xor
sub
lahf
or
and
adc
roll
in
mov
dec
xchg
fsubrs
xor
aam
or
cmp
jo
dec
mov
xchg
test
lods
mov
mov
and
push
adc
addr16
sbb
bound
je
mov
mov
sub
in
lds
push
cltd
dec
jno
or
jns
pop
out
adc
fstl
jns
inc
mov
movsl
adc
es
jl
inc
test
lds
sub
aaa
out
repnz
stos
or
jno
cmp
mov
scas
jb
add
lret
push
fisubrs
es
lret
dec
clc
dec
push
add
sub
clc
sets
jae
inc
outsb
and
in
call
fsubrl
sbb
ret
xchg
jmp
sbb
mov
or
push
lret
cld
lods
dec
ret
dec
enter
cmp
loop
ljmp
pop
mov
jecxz
xchg
pusha
nop
jle
je
mov
jno
add
lds
mov
inc
cmpsl
push
pop
movsl
or
jge
je
pusha
mov
or
push
mov
sbb
xchg
scas
sti
push
cli
inc
pop
add
pusha
pop
das
shll
ret
into
or
nop
int
aam
and
dec
insb
push
jno
xchg
data16
pop
push
sub
and
mov
xor
inc
mov
push
aad
sub
mov
add
or
pop
bound
int
inc
or
fists
push
fdivs
sbb
jo
push
shl
inc
test
cmpl
stc
dec
jmp
pushf
cli
mov
mov
sub
push
dec
fmull
lds
test
pop
jno
jo
mov
das
rep
jnp
loop
mov
xchg
gs
clc
sarl
sbb
lea
and
sbb
xor
lods
rolb
mov
ret
dec
int3
loopne
in
and
dec
scas
lret
jne
sub
in
inc
mov
dec
mov
mov
xor
cmc
jo
scas
cmp
mov
repz
xor
push
scas
xchg
push
sbb
pop
sub
mov
jo
fmull
gs
stos
out
cwtl
cli
inc
lcall
dec
mov
sbb
push
daa
sbb
out
jns
mov
mov
pop
fsubrl
mov
xchg
aaa
inc
sub
sub
mov
sub
jae
mov
dec
dec
adc
loope
into
popf
ja
cmp
jle
cmpsl
mov
repnz
jns
out
lock
sub
arpl
jge
cmp
mov
ret
jle
mov
mov
add
pop
mov
xor
in
aad
push
sbb
into
and
mov
insb
je
dec
mulb
dec
dec
mov
jb
lods
inc
aam
jns
lods
aad
cmc
adc
sbb
jbe
sub
and
mov
sub
inc
add
shl
xor
xor
popa
mov
or
xchg
lahf
imul
mov
xchg
sahf
aad
jae
rcrb
cmp
pushf
sbb
push
sub
xor
imul
enter
pop
dec
int
or
push
jo
lods
loope
lcall
lret
rcl
inc
mov
sbb
lods
ja
int
je
dec
cs
push
lcall
popf
or
xchg
mov
pop
neg
ja
into
sub
push
sbb
mov
sbb
popf
imul
push
inc
imul
pop
dec
cmp
insb
inc
or
mov
and
xchg
cli
adc
in
and
mov
dec
adc
fwait
and
stc
xchg
testb
dec
in
cld
rep
push
pushf
insb
pop
addr16
jle
jne
fwait
and
jecxz
stos
lea
pop
lcall
mov
add
out
scas
inc
fistpll
cmpsb
pop
sbb
dec
mov
gs
sbb
mov
push
mov
rolb
bound
mov
add
xchg
mov
pop
mov
shlb
bound
ja
cs
mov
inc
push
mov
xchg
lcall
ljmp
mov
ss
mov
dec
ret
add
adc
je
mov
mov
sbb
push
jo
outsl
int
mov
pop
les
mov
dec
and
lods
jge
jbe
mov
mov
repz
jecxz
sub
inc
cmpsl
mov
add
loop
jb
cmp
mov
push
repz
nop
pushl
inc
sbb
loopne
pop
jo
mov
loop
sub
inc
addr16
xchg
sbb
insb
jle
sti
push
out
or
addl
mov
mov
push
pop
lds
push
dec
movsb
jns
stc
sub
ret
pop
pop
push
push
cmpl
pushf
jne
dec
jnp
mov
enter
outsb
jge
and
jl
inc
xor
mov
enter
and
adc
add
fs
mov
mov
es
sbb
iret
sub
je
scas
ficomps
xor
insb
sub
push
movsl
outsl
mov
or
push
cmp
aaa
mov
pop
arpl
mov
mov
jmp
or
sbb
and
int
cmp
dec
inc
mov
int
sbb
mov
sub
inc
shrl
dec
lds
fwait
push
xchg
xor
ja
lock
mov
dec
imul
xchg
cmp
call
add
test
xchg
push
scas
movsb
out
cmc
push
jae
hlt
pop
adc
stos
cmp
int
stos
and
das
mov
adc
jecxz
adc
add
add
add
pushl
or
pop
xchg
and
test
or
mov
push
ret
repz
pop
inc
sub
push
inc
insb
arpl
int3
push
test
sub
jo
mov
daa
xchg
pop
or
xchg
rcrl
mov
mov
push
outsb
inc
sbb
movl
inc
jns
andb
rclb
ror
mov
lret
test
testl
hlt
mov
ret
repz
outsb
in
movsl
inc
in
enter
repz
mov
or
jb
lock
push
test
or
and
xchg
sahf
sub
inc
in
inc
in
daa
fadd
sbb
lcall
sub
xchg
cmp
popa
pop
stc
xchg
test
pop
out
stos
push
inc
xor
cmpsb
dec
cs
scas
dec
std
mov
adc
and
xchg
inc
loop
in
imul
adc
or
cmp
fucomi
inc
fimuls
and
repz
test
pop
cmp
adc
xchg
stos
or
jne
daa
popa
jo
adc
cmp
jge
gs
sub
aas
out
negl
int3
jns
mov
mov
lock
xor
repz
popf
sbb
xchg
push
xor
pop
jmp
xchg
push
lods
leave
or
adcb
xchg
push
sbb
mov
lods
aam
imul
adc
pop
pop
ljmp
arpl
insb
xlat
in
test
lds
mov
idivb
xor
cmp
js
xchg
jo
inc
xor
or
mov
jecxz
pop
jae
mov
jmp
xor
stc
dec
sbbl
sbb
add
pop
es
jb
inc
dec
mov
mov
sub
sti
push
vpandn
nop
pop
add
and
and
xchg
cmpsb
dec
loopne
jl
icebp
and
adc
mov
mov
aam
mov
mov
lods
push
mov
push
rcrb
add
fbld
stos
jmp
movsl
test
mov
cmp
aaa
enter
fmulp
scas
jns
popf
ret
xchg
adc
pop
sbb
xchg
lods
xchg
mov
push
test
test
cltd
adc
pop
out
test
scas
mov
out
ret
mov
and
xor
sub
iret
mov
data16
leave
ret
mov
arpl
adc
lahf
add
push
pusha
xchg
jl
test
mov
gs
mov
es
jnp
int
inc
add
loopne
and
xor
fldl
xchg
je
mov
mov
mov
addr16
and
mov
cmp
dec
or
pusha
jecxz
dec
mov
push
push
inc
std
shrb
out
mov
lcall
jae
inc
mov
xchg
in
jnp
nop
incl
mov
int
outsb
loope
mov
arpl
fdivl
int3
dec
push
insb
or
les
addr16
nop
sbb
xor
in
pop
xor
imull
xchg
push
shlb
sub
leave
lods
sbb
jnp
daa
ja
jecxz
sub
stos
or
shlb
rol
pop
dec
sbb
out
int3
fstps
adc
pop
mov
in
mov
xor
dec
sub
pop
xor
push
jp
cltd
ficompl
add
xchg
add
dec
sub
adc
sub
add
out
xor
out
fisttpll
movq
push
inc
fmuls
xchg
sbb
dec
jo
ret
jbe
lret
pop
mov
push
cwtl
inc
xchg
out
adc
iret
and
xor
aam
fnstsw
mov
cmp
xor
jnp
or
inc
jne
mov
mov
sbb
or
in
movsb
into
cli
cmp
pop
jno
cli
adc
push
cmpsl
xchg
inc
ficompl
inc
dec
pop
fs
std
dec
xor
or
or
out
mov
rcr
mov
mov
pop
xor
in
test
je
inc
jge
jmp
fwait
push
sbbl
loop
mov
ds
das
sbb
add
in
lcall
and
jb
and
into
std
sbb
adc
ret
arpl
mov
sarl
inc
push
jg
xchg
cmp
xor
jp
mov
testb
xchg
cmpsl
and
add
mov
sbb
xchg
cmpsb
lcall
fs
ds
cmpsb
push
push
mov
test
lods
aaa
in
mulb
push
mov
rorl
int
into
notb
adc
in
lds
dec
sub
std
push
and
and
mov
or
jge
movsb
xchg
pusha
push
mov
cld
add
inc
xor
out
mov
mov
loop
mov
mov
adc
repnz
pop
and
push
jbe
xor
mov
inc
add
out
lret
adc
repz
cld
mov
les
pop
andb
fsubrs
and
stos
pop
ret
gs
andb
or
push
mov
mov
rorb
inc
out
jp
inc
or
arpl
mov
mov
lock
aaa
or
or
cmc
push
cs
sbb
fcomi
mov
cmp
repnz
movsl
aad
xchg
cmp
pop
lods
lock
icebp
sbb
sub
mov
mov
andb
jno
loope
out
jno
jne
adc
int
mov
outsl
dec
sub
push
insl
sub
repnz
aad
test
sbb
lret
leave
cwtl
jno
inc
mov
or
pop
jns
rcr
cmc
fisubl
lock
add
stc
clc
adc
pop
mov
or
ret
ja
enter
sub
or
shrl
int
bound
jp
xchg
jl
push
fmuls
and
sub
mov
inc
pop
push
clc
sub
mov
ds
addb
jle
hlt
inc
cs
test
and
daa
dec
push
iret
inc
out
scas
cmc
mov
js
test
es
mov
cmp
lock
pop
cwtl
mov
outsl
jnp
jo
fstpt
inc
pop
mov
imul
xchg
xchg
nop
imul
inc
xchg
mov
cmpsb
xchg
test
insb
cld
data16
test
dec
dec
loope
push
push
mov
rorb
cld
or
gs
mov
push
sub
cmp
jle
xor
ja
sbbl
xchg
or
popf
mov
cmpsb
pop
lret
sub
adc
mov
test
test
jb
sti
call
adc
xor
aaa
hlt
loopne
cmp
sbb
nop
scas
or
sbb
mov
sar
pop
into
mov
adc
pop
add
popa
stc
ret
xchg
call
xchg
jp
dec
sub
add
mov
jmp
loope,pt
pushw
dec
jo
push
daa
bound
and
push
jo
mov
std
cmp
inc
pop
ljmp
test
dec
add
sub
mov
je
test
insl
jb
fs
arpl
clc
pop
mov
and
enter
sahf
inc
subb
inc
adcb
loope
mov
xorb
fisubl
shll
outsl
sbb
leave
mov
rcll
pusha
mov
mov
jae
jo
jo
push
notb
xchg
push
lds
or
les
push
arpl
xchg
dec
cmpsl
xor
addr16
scas
daa
mov
cltd
push
and
xor
test
xor
mov
pop
and
or
mov
out
inc
jo
dec
xor
aaa
nop
mov
loopne
sbb
cli
std
or
fs
xchg
inc
int3
insl
inc
xchg
test
or
fcompl
mov
or
into
aam
mov
adc
sub
out
arpl
out
dec
cwtl
in
lea
sarb
jb
push
add
mov
add
jg
movsb
cmpsb
push
mov
shll
adc
jle
mov
je
inc
adc
jg
fwait
lods
pop
aaa
mov
mov
jecxz
jns
cmc
icebp
push
or
xor
gs
lret
jnp
cmp
imul
xchg
xchg
and
rorb
mov
and
dec
sti
mov
pop
pushl
test
rorl
mov
inc
xchg
scas
xchg
jmp
rep
xchg
into
inc
pop
arpl
cmpsl
add
mov
fistpll
push
mov
mov
push
nop
mulb
cmp
pushf
xlat
ljmp
nop
mov
sbb
xchg
out
rcrb
in
add
cmp
xchg
lea
pop
xchg
adc
dec
stos
aaa
push
adc
xor
cli
in
add
mov
pop
mov
pusha
sub
lods
test
dec
pop
ret
sbb
imul
jle
pop
mov
mov
mov
cmp
push
cmp
cltd
pop
pop
mov
shll
dec
dec
jnp
loop
out
dec
loope
jmp
xchg
mov
xor
sbb
xchg
ss
pop
and
xor
push
mov
xor
dec
cmp
out
cmp
nop
xor
loopne
mov
jle
xchg
xchg
cmpsb
mov
andl
daa
sub
aad
jmp
aaa
dec
inc
dec
pop
push
inc
add
rorl
and
mov
test
enter
mov
scas
dec
jp
pop
push
or
cli
inc
les
pop
and
xchg
or
insb
ds
pop
mov
inc
add
xor
cli
xor
dec
sbb
dec
sbb
adc
inc
iret
outsb
test
mov
add
xchg
push
pusha
test
lods
fcoml
lret
jge
ret
ja
mov
imul
cs
addl
fcompl
jne
in
cltd
xlat
mov
inc
in
clc
sahf
stos
dec
in
flds
lds
mov
pop
mov
xchg
arpl
jns
in
shlb
icebp
push
outsb
outsl
push
adc
faddl
push
xchg
popf
into
pop
add
popa
or
jnp
jp
dec
loopne
decl
fiadds
imul
or
int3
stc
dec
movsb
push
sbb
mov
push
cmpsb
push
mov
lret
frstor
fucomip
jo
stc
sti
jmp
pop
mov
insb
and
xchg
fs
ja
ja
loope
jg
push
sbb
fldt
mov
mov
fidivs
scas
inc
push
jbe
movl
in
inc
xchg
loope
push
sub
and
cmpsl
aad
ljmp
lret
sbb
adc
data16
movsl
inc
cmpb
push
inc
sahf
sub
lret
or
dec
ds
stc
push
adc
dec
in
add
insb
inc
pop
fsubl
adc
pop
mov
jns
sbb
stc
gs
shll
mov
addl
test
add
dec
pop
or
jle
xchg
xchg
fmuls
xchg
dec
shlb
mov
push
je
jne
cmp
jbe
xor
xchg
call
jne
test
jo
sub
jge
mov
mov
out
mov
stc
jbe
pop
jns
mov
mov
sub
sbb
lock
fs
arpl
xor
in
test
cmp
xchg
sub
lret
loope
adc
ficoml
stos
jp
push
jl
test
int
dec
push
sub
nop
xchg
clc
outsb
pop
xchg
jl
int
sub
inc
scas
mov
or
pop
fnstsw
xor
cmpsb
push
iret
fistpll
fists
cs
in
cmp
or
jae
jae
rorb
and
jecxz
or
dec
popf
and
jmp
daa
fimull
addb
mov
xchg
add
push
icebp
mov
repnz
sbb
lds
and
xchg
fdiv
movsb
daa
lods
push
push
push
fistps
jnp
mov
bound
mov
rolb
in
test
xchg
addl
cmpl
push
sbb
add
xor
inc
bound
loop
nop
lds
and
jnp
jb
mov
nop
imul
sub
add
or
bound
ret
mov
test
sbb
outsb
clc
icebp
xchg
push
xchg
pop
neg
xlat
sahf
clc
out
subb
mov
addr16
jecxz
mov
bound
pop
or
cmp
mov
cmpsl
cwtl
ja
pushf
and
dec
adc
sub
xor
fs
push
mov
lcall
and
aad
outsb
fmuls
xor
ret
stc
sbb
xor
adc
cs
sub
test
pop
ret
int3
mov
xchg
dec
sti
jno
mov
add
dec
jp
adc
insb
inc
sub
push
cmpsl
sbb
pop
jo
jecxz
mov
xchg
push
wrmsr
push
push
ljmp
lret
repz
jo
or
sbb
aam
mov
sbb
loopne
sar
mov
mov
add
push
insb
cmp
mov
and
fiadds
mov
aam
jle
dec
jb
mov
mov
mov
sbb
cs
insl
mov
mov
push
iret
aas
jmp
data16
mov
push
aad
rclb
inc
popa
add
inc
insl
into
imul
cwtl
stos
push
pop
mov
leave
mov
add
cs
and
pop
loope
movsl
adc
frstor
mov
lock
call
sbb
xor
lret
loope
repnz
hlt
out
dec
and
cmp
jge
sbb
push
push
pop
jp
dec
jl
scas
cmp
dec
popf
fiadds
dec
jo
mov
mov
dec
out
out
mov
add
loope
in
out
push
jns
ret
add
mov
xorb
int
hlt
adc
test
or
repnz
test
mov
jne
cmp
cmp
out
cmp
incb
inc
jl
fnstcw
xchg
faddp
sbb
push
enter
sub
popa
ljmp
cmpsb
cmp
mov
cltd
mov
mov
in
sbbb
jge
jl
lcall
pusha
lea
in
sbb
hlt
mov
add
mov
pusha
mov
fisubs
into
orl
adc
aaa
stc
mov
scas
mov
shlb
xor
mov
outsb
repz
xor
out
imul
stos
and
test
lds
xchg
mov
ret
push
push
pop
ret
xchg
jge
mov
dec
fs
and
shrl
neg
mov
aas
or
sarl
icebp
or
adcb
bound
push
xor
rolb
cmp
jb
and
sbb
dec
pop
sub
pop
test
insb
in
sbb
inc
adc
adc
xor
or
xor
pop
pop
mov
push
sub
test
lock
out
mov
dec
mov
add
clc
pop
mov
sti
data16
cs
push
sti
mov
push
jg
cmpb
mov
test
adc
sub
and
inc
xchg
cmpsb
gs
push
mov
popa
mov
daa
sbb
sub
pop
es
fidivs
lahf
psraw
testl
and
mov
sbb
mov
cmpsb
into
leave
xor
sbb
dec
jle
fmuls
lock
push
cmpsl
xor
loop
arpl
push
fistpl
mov
rorl
inc
adc
pop
js
sar
xor
iret
push
andl
repnz
cmp
xor
into
xlat
ljmp
loop
dec
sub
pop
sbb
and
sbb
and
dec
mov
mov
mov
jp
test
je
add
or
cwtl
mov
sbb
fistl
dec
daa
push
sbb
cwtl
dec
sub
imul
in
add
lcall
int
data16
test
ljmp
in
pop
xchg
xchg
lock
aas
mov
and
cmp
jmp
push
ja
call
data16
fwait
sub
mov
push
insl
jnp
mov
div
jle
push
das
addl
aas
mov
in
add
mov
sbb
jmp
lock
sbb
gs
in
hlt
aaa
popf
mov
lods
in
popa
jo
jl
into
mov
jl
sbb
mov
imul
in
fmuls
scas
jb
xlat
imul
cmp
jnp
fmuls
sub
mov
xchg
test
arpl
fnstcw
pop
jecxz
std
subl
mov
or
pushf
inc
pusha
iret
fdivr
mov
push
cld
xor
rcrl
jbe
jp
sub
cld
stos
lret
and
jne
or
pop
incl
or
stos
xlat
fsubr
test
fldl
popa
xor
sti
subb
add
mov
imul
mov
push
pop
jl
pop
hlt
cwtl
mov
dec
ds
cltd
mov
hlt
cli
jno
aad
xchg
inc
pop
insb
loope
push
cmp
ficomps
cld
sahf
jge
pop
out
mov
call
call
sbb
add
and
mov
ffree
fs
mov
hlt
pushf
jnp
xor
ret
loopne
arpl
addr16
xchg
push
push
int3
lock
hlt
lret
adc
dec
push
jne
push
fisubrl
call
hlt
lret
push
aad
mov
xchg
aas
rcl
movsl
and
sbb
mov
mov
sbb
add
push
and
pop
mov
je
mov
xor
and
push
imul
ror
outsb
sarb
call
pop
hlt
insl
cmc
es
addr16
in
pop
and
stos
cmp
cmp
inc
in
lahf
push
jb
push
test
daa
mov
pop
sahf
xchg
cmc
or
in
mov
push
dec
push
std
add
mov
arpl
inc
js
test
sub
maskmovq
jo
mov
inc
inc
push
adc
sub
mov
bound
dec
jg
subl
or
add
lret
sub
je
aam
sub
loope
sub
mov
sbb
ljmp
arpl
ret
test
mov
mov
push
mov
aas
jmp
jmp
push
iret
pop
adc
stos
data16
xchg
shlb
shlb
push
and
jge
sbb
rcrb
sbb
sub
sub
test
jne
aam
push
push
stos
and
add
mov
mov
mov
call
pop
js
iret
pusha
aas
sbb
aas
mov
add
inc
loope
pop
xchg
aaa
std
daa
jl
roll
xchg
push
cli
iret
ljmp
int3
mov
pop
lock
sbb
aaa
loope
jae
pusha
sub
and
jmp
push
inc
scas
dec
and
or
xor
movsl
cmp
or
push
repz
push
cs
or
stos
adc
shll
aas
mov
and
sbb
dec
jg
pop
loopne
xor
dec
jbe,pn
mov
scas
shl
inc
jmp
clc
addl
jg
in
in
incb
aam
ljmp
dec
push
adc
ds
mov
mov
iret
mov
push
push
repnz
jmp
push
and
xor
fstl
lea
leave
jecxz
ret
or
das
xchg
jecxz
add
enter
and
jmp
sbb
xchg
call
andb
jmp
stos
sub
adc
pop
pusha
cmpsl
into
cmp
call
imul
dec
push
add
test
fwait
xchg
adc
pop
int3
inc
and
dec
xor
add
ret
and
bound
out
es
insb
addr16
sbb
and
lock
lret
jbe
int
xchg
pop
or
xor
lea
roll
cs
mov
clc
pop
inc
cmp
cld
sub
int
mov
push
push
jmp
arpl
cwtl
test
mov
xchg
xor
mov
outsl
pusha
inc
adc
push
imul
and
mov
into
and
mov
inc
popf
aam
lret
sbb
fbstp
pop
xchg
push
mov
cmc
jge
jb,pn
ds
mov
jg
add
je
add
stos
enter
pop
inc
outsb
test
xor
pop
xchg
jle
fsubl
xor
ret
ljmp
loopne
mov
leave
and
xchg
xchg
xor
xchg
xchg
fsubrs
popa
bnd
or
mov
lea
sbb
mov
jo
mov
dec
js
push
sbb
movsb
ret
cmp
je
mov
ss
ret
add
mov
aaa
fcmovbe
gs
outsl
jge
push
lods
jge
cmp
sarb
repz
pop
fisubs
pop
insl
fnsave
sbb
push
dec
xorl
pushl
mov
jecxz
vpcmpgtb
rcll
push
sti
into
inc
fiadds
stc
xlat
or
xchg
mov
ja
ja
fdivp
cmpsl
sahf
sub
mov
cmp
xchg
dec
or
rorl
lea
and
xchg
mov
jecxz
pop
and
jne
push
jl
cmp
xchg
mov
into
mov
and
push
movl
mov
imul
stos
ror
sti
mov
push
mov
xor
cmpsl
cmp
bound
nop
mov
mov
movsb
lret
or
adc
cmp
mov
inc
testl
pop
or
cmpsb
inc
ja
mov
lahf
pushf
sub
fs
cmpsb
std
adc
pop
and
ret
mov
inc
xchg
sti
idivb
cmp
xchg
jmp
filds
cmpsb
stc
fisubs
add
pop
fisttpl
lret
add
test
loopne
lock
lcall
sub
mov
scas
adc
fdivrl
mov
mov
adc
shll
and
out
xor
loopne
sbb
jnp
movsl
fildl
sar
mov
xor
jae
and
imul
mov
out
dec
push
mov
ljmp
push
cmp
and
icebp
xlat
aas
mov
jnp
mov
or
imul
mov
cli
jecxz
imul
xchg
push
xchg
adc
pop
sub
mov
in
jmp
loop
shr
pop
bound
or
in
mov
mov
aaa
or
js
sbb
cwtl
cmp
or
jle
cmp
jbe
rorb
in
and
mov
mov
inc
mov
std
push
cli
sbb
int3
test
jle
xor
testb
movsl
inc
lds
in
push
and
mov
cmp
test
dec
push
fstpl
jle
lods
pop
pusha
stc
sub
js
ja
popf
insl
mov
cmc
enter
add
ret
in
pop
jnp
out
xchg
dec
testb
ror
and
add
or
dec
das
cs
or
adc
pop
dec
loope
shll
aaa
es
je
sub
mov
xlat
daa
dec
sub
sbb
mov
popf
cmp
adc
scas
stc
push
daa
dec
insl
outsl
lock
hlt
bound
in
fidivrs
sbb
cs
cmp
add
data16
mov
xor
sub
stos
jl
sbb
push
fwait
je
push
cli
dec
jl
sub
mov
nop
push
test
imul
adc
cmpsb
mov
mov
xor
jb
aaa
sbb
fs
repz
push
aad
cmpsl
and
adc
inc
pop
imul
push
push
or
adc
sbb
sub
andl
cwtl
jl
cmp
add
sbb
fbstp
or
aam
dec
xchg
push
mov
jmp
push
xor
aas
pusha
jge
arpl
push
jno
xor
mov
jecxz
pmaxsw
dec
es
xchg
cmp
movl
leave
jbe
pop
adc
pop
pop
push
mov
or
loope
mov
out
mov
fldt
movl
loopne
in
jge
adc
loope
cmpsl
fucomip
jl
push
mov
aam
xor
xchg
loopne
dec
das
popa
push
bound
sub
lret
xchg
or
pop
fnsave
sub
or
fldt
out
dec
mov
push
sub
test
enter
sub
pop
xor
push
or
in
mov
lods
lret
sbb
leave
test
leave
jo
sub
shlb
jb
mov
cmc
jno
inc
mov
popf
xor
movsb
movsl
je
out
insl
pop
cmpsl
test
mov
mov
pop
xchg
sbb
inc
add
cmp
test
loop
clc
xor
in
add
loope
scas
aas
jbe
pop
cmp
add
pop
adc
ljmp
mov
popa
das
adcb
push
adc
add
inc
pop
gs
cmp
mov
and
inc
sbb
mov
js
mov
inc
sbb
loope
xor
push
lods
mov
mov
push
mov
add
scas
ja
call
mov
inc
and
stos
and
loop
adc
aas
jno
xchg
lahf
cmpl
xchg
or
divb
push
das
imul
sbb
pop
aad
push
jo
int
insb
scas
sub
sub
test
pop
and
in
pop
xlat
mov
sub
int
mov
lods
out
sub
icebp
mov
dec
je
and
jnp
mov
movsl
roll
mov
pop
sub
ret
and
xchg
push
orl
mov
leave
dec
mov
jg
xchg
add
cltd
jecxz
mov
out
adc
cmpsl
or
jbe
loop
mov
inc
ja
jae
add
inc
stos
and
cmp
mov
mov
jnp
and
cmp
inc
insb
push
add
fmuls
lea
sub
imul
lcall
fstpl
jle
decl
dec
loopne
xchg
xchg
inc
loopne
frstor
push
mov
cmp
dec
icebp
sti
cs
sbb
xchg
and
aad
das
jl
xor
pcmpeqb
jb
cmpsl
ds
addr16
inc
pop
push
ret
mov
sbb
mov
insb
pop
pop
popf
lods
jl
lcall
cld
dec
sahf
mov
enter
clc
mov
mov
pushf
test
rolb
dec
mov
ja
ljmp
add
mov
imul
dec
dec
pop
sub
jns
xor
sbb
mov
call
into
push
jle
ret
lret
pop
lock
call
mov
cs
jo
sub
gs
sti
cld
ljmp
dec
fldl
roll
enter
fstps
sbb
insb
fistpll
dec
aad
cmp
sub
adc
pop
js
es
shlb
divl
mov
cwtl
jg
adc
push
xchg
fcmovnbe
daa
outsl
out
ja
cmp
loope
dec
rorb
fcomps
test
lods
jp
sbb
sbb
pop
push
pop
dec
ss
jnp
sbb
stc
inc
and
jno
aam
or
and
ficompl
test
enter
cmpsl
inc
xchg
icebp
jg
mov
sub
jmp
test
aaa
inc
mov
outsb
rorb
dec
das
push
cmpsl
test
mov
mov
cmp
nop
push
mov
adc
ffreep
mov
lea
in
pop
lcall
popa
cli
and
ret
int
add
adcl
in
lret
shlb
mov
outsl
sti
fnstenv
lods
std
nop
cld
iret
jbe
jbe
iret
stos
add
shl
cmp
push
es
cmp
loopne
xchg
add
jbe
inc
out
xor
sbb
sub
sarl
xchg
aam
cli
je
and
sub
xchg
cmp
xlat
fwait
inc
add
cmp
cmp
dec
mov
fsubs
addl
fstpl
mov
inc
leave
push
nop
add
arpl
fstpl
cmp
pop
mov
push
jne
xchg
stos
mov
clc
rolb
cli
outsl
aaa
fcomi
mov
insb
shlb
notb
dec
sub
mov
imul
leave
mov
loop
add
push
mov
fmull
sbb
or
inc
lods
shll
mov
sub
outsb
dec
adc
test
cmp
lret
out
hlt
jmp
inc
arpl
inc
inc
and
mov
inc
cmp
shll
or
dec
adc
jns
repz
push
adc
mov
stos
into
jmp
mov
pop
jbe
loopne
fdivrl
or
mulb
lea
inc
mov
jg
loop
jo
mov
sub
or
sbb
push
jbe
adc
inc
hlt
orl
pop
xor
jbe
add
pop
and
lods
xchg
fisubrs
bound
std
adc
ret
imul
xchg
jmp
repz
dec
lods
test
xchg
mov
jb
cmp
ret
int3
cmc
xor
sub
loope
jg
pop
imul
lods
jae
stc
fstpt
lret
dec
jle
mov
dec
aam
mov
or
rcrl
cmpsb
sbb
push
or
daa
cmpsb
jbe
lret
std
jge
shr
pop
enter
mov
xchg
les
xor
mov
mov
mov
sub
hlt
fidivl
sub
ljmp
enter
xor
or
push
mov
jno
ds
mov
in
in
out
sahf
dec
andl
adc
clc
fwait
push
in
mov
movb
inc
out
cltd
insl
xor
cmp
fwait
push
jmp
sbb
pop
jl
stos
xor
call
xlat
pop
mov
andb
jl
inc
lret
or
push
mov
decb
fs
cmp
movsl
mov
push
lock
je
mov
push
push
lahf
xor
inc
fsts
cmp
mov
les
inc
stos
scas
hlt
cmp
call
mov
cwtl
ljmp
pop
in
pop
dec
dec
stos
sbb
scas
xchg
cmpsb
js
flds
xor
sbbb
xchg
mov
sbb
mov
mov
pop
stos
push
repnz
push
das
aas
pusha
pop
pop
mov
pop
in
or
cmp
lods
test
sahf
lahf
push
jl
fisttpll
jnp
lcall
xor
out
jno
sbb
mov
mov
mov
cmpl
inc
or
jo
xchg
inc
shlb
lds
scas
gs
outsl
sti
pop
insl
jbe
rcrl
fs
addr16
sbb
adc
pop
mov
aaa
pop
add
insl
mov
mov
adc
cmc
bound
jp
stc
pop
xor
xchg
mov
gs
loop
frstor
mov
xchg
cwtl
and
push
ret
sbb
push
aad
sbb
lds
cwtl
jle
iret
aad
and
iret
dec
push
aas
mov
jbe
cmp
sbb
mov
jle
dec
add
jnp
adc
jmp
rcrl
lods
ds
das
mov
and
fprem1
sbb
or
mov
ds
lar
mov
hlt
cmp
call
jmp
sti
mov
pusha
inc
rcl
dec
mov
mulb
jecxz
xchg
hlt
mov
bound
inc
mov
push
lods
sub
into
and
insb
push
jg
nop
xor
inc
xchg
pop
jmp
ret
and
dec
mov
push
sbb
cli
stc
and
aaa
imul
mov
jmp
fistl
dec
add
pop
and
xor
sbb
je
pop
xchg
sahf
stos
xchg
jl
fs
push
cli
mov
in
push
and
cld
cmc
lahf
cmp
mov
mov
fsubrs
sub
lcall
xchg
lds
pushf
cmp
cmp
mov
ficomps
pushl
sahf
sub
xorb
adcl
movsl
mov
loopne
nop
or
and
scas
inc
sbb
sub
jns
enter
cmp
cltd
mov
loop
push
inc
mov
lret
pop
jl
mov
push
stos
mov
and
inc
push
aad
mov
and
out
rclb
pusha
xchg
aas
pop
pusha
je
push
mov
xor
rol
jge
add
push
sbb
addr16
fdivrl
stos
icebp
dec
sahf
movsl
pop
sti
imul
push
jb
movsb
pop
mov
stc
jbe
pop
test
sub
pop
xchg
das
xor
outsb
jl
std
js
cli
jnp
stos
mov
mov
push
xchg
mov
pop
mov
ds
mov
enter
test
andb
fnsave
add
pushf
push
and
xchg
add
aad
xchg
pop
sbb
scas
jge
add
imul
mov
xchg
imul
mov
mov
dec
or
sti
xor
dec
push
dec
inc
popf
test
dec
push
push
jle
jge
mov
call
aad
rolb
aas
push
adc
loope
pop
mov
scas
ror
fdivl
push
test
jg
adc
xchg
push
cmp
inc
adc
sub
lret
stos
jmp
dec
and
adc
into
push
and
mov
push
mov
sub
nop
push
out
fldenv
push
xor
icebp
or
stos
mov
lret
inc
xor
xor
aam
cltd
mov
or
dec
jnp
mov
addl
jbe
inc
mov
adc
jb
in
xchg
jge
sbb
and
or
xchg
cmp
stos
popf
xchg
cmc
or
add
cs
leave
xor
rcrl
push
ljmp
push
aad
push
fiaddl
or
fwait
adc
movsb
pop
jle
ss
loopne
inc
int
leave
test
mov
gs
ss
pop
mov
sbb
in
das
push
sbb
mov
dec
inc
out
and
out
mov
scas
mov
xchg
negl
xor
sahf
fsubrs
inc
jmp
out
movl
push
add
lcall
imul
cmpsl
jae
test
mov
daa
dec
ret
cmp
loope
test
inc
cmp
xor
or
andl
push
jne
in
sahf
and
xchg
add
lds
ret
xchg
bound
iret
rolb
ret
cwtl
sbbb
cmpsb
nop
jle
xchg
fcomps
lret
mov
in
xchg
fcmovb
dec
dec
mov
dec
cmpsl
inc
push
mov
enter
inc
fcmove
push
adcl
cltd
lods
sbb
sar
cwtl
xor
or
or
jb
mov
xchg
adc
push
in
xor
gs
xor
ret
mov
pop
arpl
rolb
push
push
insl
and
sti
jo
int3
dec
pop
mov
out
repz
ja
es
mov
mov
or
or
cmc
cltd
jg
sub
mov
les
movsl
inc
insl
sub
jbe
xchg
jge
cmp
iret
xor
movsb
popf
test
jecxz
inc
aas
jecxz
cmp
adcl
add
sahf
inc
in
sbb
xor
cmp
push
cmp
pushl
loop
sub
sti
mov
scas
in
xchg
cmpsb
mov
mov
popf
mov
les
imul
xchg
outsl
or
mov
and
xor
outsl
xchg
and
js
sbb
insb
or
or
insl
cmpsb
aaa
sub
aaa
cmp
mov
lahf
mov
xor
dec
into
cli
lea
into
push
sarb
mov
pop
mov
ss
imul
cmp
arpl
mov
lods
leave
addl
push
mov
jmp
cmp
fadds
cmp
lods
popf
pop
xor
aam
scas
pop
xor
fimull
leave
loopne
rolb
push
jg
cwtl
push
lods
sub
xor
iret
rorl
daa
inc
std
aaa
xlat
mov
xchg
push
xlat
add
cltd
sbb
xchg
popf
mov
pop
imul
mov
xchg
lods
push
pop
sub
in
rcl
cmp
popf
sbb
and
xor
xlat
pop
int3
test
xor
xlat
gs
xor
nop
ficompl
lods
test
xchg
adc
cmp
cli
ss
out
cmp
mov
mov
aaa
das
mov
lods
adc
mov
fmul
mov
fs
fnstsw
or
insl
and
dec
clc
jle
stos
jbe
inc
sub
vpor
mov
mov
idivb
hlt
repnz
pop
add
sub
mov
jno
in
adc
sbb
mov
lods
jb
les
ret
mov
loope
jae
je
xchg
push
nop
lds
or
jmp
xchg
test
sbb
imul
add
mov
test
jne
sarl
out
stos
repz
push
mov
clc
stos
xor
inc
push
sti
sbb
pop
push
ss
pop
cmp
xor
shlb
es
in
jp
inc
ljmp
ret
cmp
repz
das
jnp
shll
inc
sbb
or
and
fwait
jo
inc
inc
roll
cmp
xchg
pop
mov
in
push
cmp
cmp
cwtl
add
enter
inc
or
cmc
loope
aas
xlat
insb
push
inc
inc
stc
adc
stos
and
xlat
fcompl
pop
stos
jae
mov
pop
ljmp
pop
sub
sbb
or
iret
out
fwait
push
xor
std
inc
push
mov
cmp
lahf
adc
mov
add
lods
das
sub
jbe
add
and
mov
push
jbe
mov
out
mov
scas
repz
movl
and
les
fs
lcall
and
cltd
sbb
outsb
inc
pop
mov
daa
dec
pop
and
cld
pause
icebp
sbb
lahf
insb
jmp
push
stos
add
dec
sti
mov
loop
out
dec
lods
cmp
ret
cmp
in
leave
jle
jle
xor
jg
es
xchg
dec
loop
test
scas
mov
adc
xor
or
sub
lods
sub
mov
dec
jno
mov
xchg
outsb
or
insl
push
pop
jmp
xchg
cmp
and
dec
orb
inc
or
jmp
or
aas
mov
inc
mov
pop
sbb
sub
xor
inc
shlb
xchg
ret
mov
xchg
icebp
lcall
fstps
popf
push
pop
jae
fsub
lahf
imul
decl
jge
pop
testb
push
ficompl
out
shll
leave
pushf
clc
popa
idivl
scas
sub
pop
dec
outsb
vcvtps2dq
xchg
xor
jle
outsb
pop
sub
jecxz
push
mov
dec
scas
mov
push
mov
mov
call
movsl
sahf
arpl
mov
lahf
icebp
jp
roll
and
jb
jmp
sbb
orb
push
push
jns
xchg
ljmp
fadds
fwait
jo
ja
pop
loop
stc
jmp
pop
cmp
sub
pop
and
sub
std
xchg
sahf
out
dec
mov
test
xchg
lahf
sub
xor
push
sub
push
mov
shrb
fistpl
push
out
std
xchg
cmp
dec
dec
lret
sbb
adc
ds
mov
mov
push
dec
add
jbe
shll
loopne
loop
out
push
inc
pop
ljmp
mov
aam
push
push
js
aam
jno
mov
push
xchg
push
pop
or
imul
ja
jb
pop
mov
sahf
mov
mov
add
fsubrl
mov
je
push
and
xchg
mov
andb
sub
or
xor
test
cld
fistps
pop
and
loope
push
jb
inc
mov
push
aad
into
adc
stc
sbb
or
movsl
lret
sub
dec
pushf
aam
into
push
mov
inc
push
movsb
adcb
mov
enter
movsb
lret
push
loopne
mov
les
pop
jge
mov
mov
cld
dec
jg
and
test
jecxz
dec
and
sarb
xlat
xchg
daa
push
fadd
pushf
push
adc
mov
xchg
pop
daa
push
pusha
int3
ljmp
outsl
cld
paddb
mov
movl
scas
mov
call
addl
cmp
xchg
lahf
cld
bound
pop
lods
pop
jl
mov
or
mov
daa
lahf
jl
iret
loop
hlt
cmp
mov
incl
data16
mov
jecxz
fwait
lcall
mov
jge
push
pop
pop
lret
jne
jbe
cld
push
adc
icebp
pop
mov
add
dec
movsl
jns
or
ja
stos
mov
jp
shl
insl
sub
mov
aad
std
xor
out
inc
stc
fwait
or
push
mov
add
in
mov
xchg
inc
xchg
sub
data16
pop
pushf
mov
or
sub
sub
imul
sub
or
add
cmp
loopne
test
mov
pop
aam
sti
loop
test
cmpsb
lods
stos
xor
rol
push
jecxz
jbe
int
mov
popf
jle
mov
sbbb
xchg
imul
xchg
mov
mov
jle
out
pop
pushf
dec
into
mov
lcall
insl
pop
cmpl
add
cmp
cmc
popf
cmp
pop
lret
pop
outsl
push
push
cs
call
mov
mov
add
cmp
gs
cmp
inc
add
shrl
and
dec
std
test
add
jb
imulb
popa
cmpsl
pop
mov
imul
aam
mov
flds
dec
and
cli
sbb
dec
mov
inc
inc
cmpsb
adc
sti
addl
pop
out
sahf
add
mov
jle
popf
dec
div
jno
and
mov
gs
cmp
sbb
lds
addr16
dec
jp,pn
mov
ljmp
aad
sti
cmp
push
enter
pop
add
mov
pusha
push
outsb
imul
daa
es
lea
hlt
sub
loopne
stos
jg
pop
pop
jo
sar
sbb
mov
adc
sub
out
hlt
sub
xchg
mov
dec
push
pop
pusha
push
push
inc
mov
aad
orl
mov
xchg
xor
fucompp
mov
mov
call
loope
call
out
nop
mov
jbe
adc
mov
sahf
repz
add
mov
scas
jbe
cwtl
sahf
hlt
daa
fidivs
mov
sub
lret
adc
add
xchg
fcoml
fidivrl
aad
push
cwtl
jne
lock
and
imul
lods
cmp
int
dec
inc
jnp
out
insb
mov
loop
loop
daa
scas
or
out
xlat
in
mov
loop
fldcw
icebp
add
in
shrb
iret
test
cmc
pop
mov
addr16
sbb
jp
in
xor
pop
xchg
mov
pop
mov
jnp
push
cmp
pusha
pop
xor
mov
mov
movsl
stc
mov
fimull
mov
push
icebp
pusha
ljmp
popf
push
test
test
ror
cmp
out
cwtl
subl
pop
lcall
inc
push
test
popf
mov
into
insb
stos
cmp
outsl
iret
aam
imul
adc
mov
hlt
xlat
sbb
lock
push
jle
xor
xor
pop
mov
fs
dec
ror
lgs
push
andb
iret
mov
fldcw
lea
rol
dec
arpl
ja
mov
pop
mov
fmuls
arpl
ds
out
or
mov
fwait
mov
popf
mov
dec
lahf
dec
popa
push
daa
ror
ja
shlb
leave
loope
out
jae
push
ror
mov
lret
ret
jecxz
add
lods
cmp
mov
push
movsb
sub
cmpsl
xchg
jnp
mov
mov
call
jno
pop
and
ret
or
xchg
popa
fmuls
gs
movsl
hlt
stos
mov
cmpb
add
icebp
and
mov
not
loop
mov
dec
lods
out
adc
sbb
imul
test
les
pop
stos
and
mov
push
mov
sbb
jae
les
push
mov
adc
jecxz
repnz
int
xchg
dec
mov
xchg
sbb
pop
incb
fwait
loop
shrb
bound
lods
inc
notl
dec
dec
repz
add
mov
call
ret
outsb
pop
pop
sub
hlt
sub
push
je
sub
iret
lret
mov
pop
repnz
cmp
adc
pop
mov
inc
xlat
stc
xor
je
lret
insl
cmp
sahf
jg
je
lret
enter
jp
sahf
addl
add
mov
clc
loop
lock
lock
insb
sub
push
push
scas
pop
in
add
cwtl
dec
mov
test
je,pn
shrb
loop
dec
push
xor
daa
negb
mov
outsb
shll
loop
sub
sti
pop
pop
shl
jne
test
pop
mov
xchg
das
ret
cmp
test
sbb
inc
pop
cmpsb
iret
mov
and
in
adc
dec
cmpsb
pop
mov
sbb
push
xor
stos
lods
xor
xchg
arpl
xorl
leave
inc
lahf
outsl
aas
cmp
movsl
ds
aam
out
pop
lods
js
mov
dec
fiaddl
mov
fwait
dec
push
or
enter
inc
leave
mov
inc
sti
push
fdivrl
adc
ret
push
pop
out
push
xchg
mov
push
cwtl
imul
popl
mov
mov
outsl
lods
cmp
es
inc
jmp
mov
mov
vpshlb
mov
in
call
out
ja
dec
lahf
jle
pop
mov
pop
hlt
lret
mov
xchg
movsb
cltd
mov
sub
sbbl
mov
lea
into
pushw
insl
push
dec
mov
rcll
sub
adc
mov
and
inc
fcomip
out
cs
xchg
mov
leave
ret
sub
inc
imul
xchg
cmp
cmp
addl
lcall
jnp
mov
fcompl
sbb
pop
jmp
dec
out
inc
fidivrs
fucomi
sbb
adc
xchg
mov
xchg
jl
testl
insb
andb
test
sbb
out
sub
mov
jno
aas
mov
pop
mov
push
sub
sbb
nop
adc
pop
in
popf
dec
mov
sub
int3
loop
xchg
jle
adc
sbb
push
js
xor
cmpsl
mov
jge
inc
xor
dec
outsb
sub
jle
sub
pop
cmp
sub
rcll
into
jbe
adc
das
movw
lods
loopne
fs
sub
das
push
push
and
je
jp
xor
stc
xor
js
sbb
jo
xchg
repz
es
adc
mov
mov
push
rcr
dec
jmp
sbb
aam
daa
inc
aad
cmp
mov
xchg
clc
int3
add
xchg
add
add
sbb
in
pop
outsl
dec
popa
enter
jecxz
xor
sbb
jae
rclb
call
ljmp
getsec
cmp
idivb
jge
dec
mov
in
jns
pushf
in
lea
xchg
xor
roll
dec
sub
inc
push
mov
xchg
lret
mov
iret
xchg
aaa
sar
push
cmc
mov
in
in
cmpsl
aam
sbb
mov
mov
mov
mov
out
sub
push
test
xor
enter
lahf
mov
rolb
in
push
cmp
push
imul
inc
jnp
repz
std
ja
dec
xchg
lods
xchg
cmp
outsl
shlb
mov
in
cmp
stos
clc
daa
adc
push
cmp
in
push
sbb
mov
sbb
push
jb
cltd
push
mov
je
test
rolb
fimuls
fmull
insl
fcmovbe
mov
dec
adc
cmp
ds
in
mov
dec
repz
outsb
push
mov
cltd
cmp
movsl
push
sti
mov
in
mov
mov
jecxz
cmp
je
test
dec
inc
imul
push
leave
pushw
xchg
rclb
roll
lds
jo
jb
movb
mov
adc
lcall
outsl
push
lea
cmpsl
movsl
mov
xchg
sub
pop
mov
or
mov
gs
sarl
cmp
adc
inc
push
fs
leave
testb
jge
mov
arpl
and
jmp
cs
xchg
in
jg
mov
mov
mov
scas
test
jae
sub
icebp
mov
out
xchg
icebp
dec
out
iret
pop
ja
jle
ljmp
jae
mov
gs
add
shlb
sbb
lods
xchg
lds
std
and
jo
cmpl
mov
mov
jle
pusha
pop
mov
mov
leave
xchg
popa
addr16
sar
test
scas
sub
xchg
inc
lret
out
push
imul
mov
or
and
sub
cwtl
inc
xchg
jmp
testb
cmpb
mov
cmpl
cmpsb
loop
mov
jne
sub
cld
popa
xlat
stc
inc
repnz
add
push
inc
movsl
jo
loopne
mov
cltd
fcomps
jnp
sar
adc
negb
mov
cmp
js
into
pop
call
scas
popf
shll
jnp
xchg
inc
sub
dec
shlb
sbb
shr
push
clc
inc
and
lods
ss
cs
cli
jbe
cmpsb
pop
js
jnp
adc
jb
ljmp
addr16
sbb
xor
mov
gs
bound
sahf
je
dec
mov
adcl
push
notl
adcb
lods
inc
or
lret
call
clc
jnp
inc
mov
mov
xchg
inc
mov
cmc
sbb
jecxz
out
cmp
lahf
vpshlq
xchg
roll
add
cmp
loop
inc
cmp
lods
mov
lcall
cmpsb
cmp
sbb
jb
insl
es
lods
and
mov
aam
out
cmpsb
gs
push
jmp
sub
lock
push
and
add
and
mov
xor
dec
or
leave
in
inc
mov
or
pop
mov
into
adc
mov
addb
in
popa
push
sbb
adc
inc
adc
out
cmp
jp
ja
cmp
adc
xor
xchg
aad
cmp
and
xchg
cmc
add
sub
movsl
pop
jl
fildll
dec
sbb
test
cmpsl
push
out
pusha
popf
adc
cwtl
arpl
xchg
outsb
mov
les
lret
jge
lret
stos
scas
insb
mov
imul
xor
rcrl
xlat
pop
aam
push
out
jmp
ret
fistps
adc
test
outsb
xchg
push
out
pusha
push
push
adc
enter
int3
mov
mov
fdivrl
mov
je
or
out
add
cmpb
clc
xchg
cmpsl
dec
leave
mov
cld
xchg
aam
loope
cmp
mov
nop
adc
shll
sbb
popa
dec
pop
mov
pop
and
cmp
xor
arpl
in
sahf
bound
mov
dec
test
sbb
ret
and
mov
xor
rorb
push
or
and
loopne
clc
xchg
or
dec
in
inc
cmpsl
jae
mov
bound
and
clc
mov
popf
es
fwait
xchg
mov
aaa
cmpsb
push
push
loopne
mov
xchg
leave
push
mov
sbb
and
loope
lds
lea
jb
cmp
jmp
arpl
test
jnp
rcll
and
call
pop
inc
jmp
inc
testl
aam
cwtl
xchg
sbbb
xchg
ljmp
xchg
inc
inc
ret
in
mov
and
sbb
and
jno
jmp
xlat
shl
mov
ficomps
jge
push
imul
jno
push
mov
ds
and
stos
cmpsb
xchg
aaa
cli
jnp
inc
inc
jle
pop
rcr
adc
pusha
lret
push
out
mov
insl
imul
rcrb
ja
call
fyl2x
imul
insl
out
out
stc
mov
and
lea
mov
sub
aad
adc
cmp
shl
fcomi
aad
negl
mov
mov
xor
pop
leave
adc
xlat
inc
dec
xor
add
jecxz
ss
imulb
pop
in
cltd
cmpsl
ds
pop
xchg
loope
push
rorl
mov
sub
push
adc
mov
sub
pop
out
in
mov
lcall
push
enter
sub
rcr
ficomps
xorl
aas
test
shl
cwtl
inc
cmp
popa
inc
mov
cltd
scas
jge
arpl
adc
gs
mov
pop
fdivp
jbe
pop
loop
aaa
int3
pop
insl
test
adc
fistpl
shrl
jno
cld
js
insb
adc
mov
pusha
xchg
stos
out
xlat
pop
xchg
push
bound
mov
mov
dec
and
lock
mov
call
test
mov
mov
mov
cmp
mov
sub
mov
push
xchg
cmp
stos
fisubrl
pusha
cs
mov
cmp
jmp
in
mov
leave
clc
andl
mov
call
leave
movsl
mov
ja
jno
addr16
mov
dec
lock
pop
inc
dec
inc
out
mov
sbb
jno
in
pop
out
dec
xchg
adc
jnp
fdivrs
rorl
mov
insb
mov
pusha
outsl
ret
fwait
in
iret
roll
and
push
repz
inc
pop
aaa
es
xchg
test
fnsave
dec
mov
add
mov
sahf
stos
jmp
adc
inc
dec
mov
cmpsl
notb
movsl
mov
sub
or
sub
loope
cmp
cld
pop
mov
mov
shlb
inc
icebp
xchg
mov
popa
pop
cmp
push
mov
mov
maskmovq
testl
cwtl
mov
or
ljmp
loope
ljmp
jne
leave
xchg
xor
dec
dec
popf
int
pushf
mov
pop
ret
mov
mov
pop
pop
sbb
fnstcw
popf
std
pushf
jno
pop
lods
sub
int
jo
pop
sbb
mov
sbbb
divps
rcrl
int
xchg
dec
sbb
mov
mov
and
push
imul
inc
mov
lahf
iret
adc
pop
cli
xor
in
stc
ret
into
shl
sbb
sub
popa
xor
in
pop
mul
mov
test
cs
or
cmpsb
adc
jne
adc
adc
mov
aas
push
cmc
mov
pop
sbb
icebp
add
orb
fwait
daa
mov
lcall
je
arpl
gs
repnz
movsb
inc
push
xchg
imul
jnp
jecxz
sub
iret
mov
or
mov
sub
movsbl
sub
std
dec
or
push
rclb
push
sub
or
out
cs
inc
fs
inc
jae
cmpsb
out
add
xchg
loopne
ja
scas
inc
ret
jns
int3
sub
sub
aad
dec
xchg
sub
and
mov
mov
imul
fs
push
mov
lock
sub
push
add
mov
cmp
jnp
or
mov
sbb
jle
jno
divb
inc
lods
cmp
out
add
adc
in
je
push
xchg
loop
enter
pop
or
inc
negb
xchg
icebp
add
cmp
aam
xor
or
mov
pop
and
sub
cmpsl
adc
rcr
adc
adc
mov
mov
int3
daa
sti
out
sub
icebp
xchg
mov
inc
adc
and
mov
or
cmp
or
sub
pop
mov
push
rorb
mov
jnp
in
xor
data16
fldl2t
das
mov
js
mov
cmp
inc
int3
in
js
cmp
push
aas
daa
cmp
iret
sub
jne
je
mov
loop
mov
test
ds
jg
cmp
add
add
into
sbb
stos
decb
stc
lahf
outsb
rcr
mov
sbb
cmp
xor
in
mov
cmpsb
dec
pop
ffree
pop
popf
out
and
sbb
fsubrs
mov
add
xor
dec
xchg
and
and
adcb
daa
into
jno
loop
insb
stc
cmp
push
sbb
shlb
aad
mov
mov
into
add
jne
add
lret
pop
pop
aad
sahf
pop
xor
nop
ljmp
mov
dec
pop
xor
fsubl
ss
lods
adc
fdivs
imul
push
lds
xor
dec
add
push
dec
mov
sahf
sub
adc
mov
xor
sub
loope
pop
jg
cmpsb
call
aad
jns
or
inc
cmp
or
fildl
das
cld
fidivrl
sub
int
mov
pop
jmp
dec
sub
xchg
call
sub
test
push
sysret
xor
jno
sbb
in
dec
mov
and
sub
repnz
mov
jae
movl
mov
pop
jbe
daa
repnz
stos
fdivr
xor
adc
test
insl
pop
or
push
push
sar
mov
mov
lods
sub
adc
loope
jl
cs
adc
cmpsb
adc
cs
jne
sbb
imul
imul
out
repnz
xor
leave
dec
int
inc
or
mov
incb
inc
mov
jg
cmp
mov
cwtl
icebp
ret
out
cmp
sub
movsb
hlt
jnp
and
es
outsl
stc
sarb
loop
lcall
int
add
repz
in
fsubs
cmp
mov
pushf
push
sub
push
das
rorl
lds
push
in
mov
xchg
inc
int
jae
test
push
fidivl
sbb
mov
mulb
xchg
jecxz
xchg
pusha
jno
sub
test
cmpsb
ficomps
mov
xrelease
mov
aad
sub
pop
cld
stos
xchg
jno
inc
sbb
lods
ficoml
and
fsts
xchg
ja
jg,pn
movsb
outsl
fisubrl
push
cmp
mov
dec
pop
xor
clc
outsb
pop
push
pop
int
mov
dec
in
cli
pusha
icebp
cmp
fisubs
shr
js
inc
add
cmp
xchg
inc
fs
rorl
stos
and
jnp
imul
inc
xor
mov
inc
sub
stc
push
push
mov
frstor
xchg
sub
sub
dec
rorb
dec
aam
adc
fnsave
lret
add
in
xchg
mov
mov
push
in
lods
scas
test
inc
sub
cmp
cmp
icebp
int
inc
adc
cmc
int3
adc
mov
les
repz
test
mov
test
shrb
mov
test
adc
bound
jg
fs
imul
ljmp
stos
dec
push
push
xlat
test
clc
xor
dec
scas
mov
test
xlat
mov
and
sub
sbb
insl
cmp
add
ret
or
dec
push
loope
inc
jb
xorb
loope
jg
push
push
cltd
sti
addr16
ja
imul
rol
aaa
and
aaa
fists
movsl
jno
pop
jle
cmp
cmpsb
inc
mov
sub
jecxz
es
lret
pop
cmp
cmpsl
idivb
mov
fs
pushf
mov
xor
ljmp
add
jnp
push
xchg
jae
and
add
fisttpl
xor
sti
dec
dec
xor
dec
out
fcomp
call
pop
stc
gs
pslld
add
jae
je
or
and
lock
icebp
push
xchg
out
jp
iret
pop
inc
test
lret
jno
pop
loopne
xlat
push
mov
jmp
xchg
adcb
out
lods
je
jmp
loopne
orl
or
into
lret
xchg
stc
and
jno
pop
jmp
mov
push
push
cltd
xchg
stos
pop
jmp
xlat
xor
sbb
dec
push
out
cmp
int3
cmpsb
cmp
xchg
das
shl
cmp
pop
pop
xacquire
test
lock
cmp
popl
fdivl
pushf
and
add
sarb
mov
mov
cltd
lret
fwait
cmpl
lock
pop
xchg
and
mov
sbb
cmp
cmp
repz
add
sbb
test
adc
hlt
ficoml
sub
xor
imul
jmp
mov
xor
mov
jne
or
mov
xor
pop
pusha
incb
sbb
js
sahf
mov
xor
xchg
out
pop
sbbl
xor
seta
sar
xchg
lods
daa
xchg
mov
pop
loope
pop
adc
sbb
xchg
fdivr
push
sub
xor
push
or
repz
test
mov
sbb
fst
popf
jno
xchg
dec
dec
insb
mov
aaa
andb
cwtl
in
dec
enter
push
mov
rorb
test
inc
sub
mov
ret
mov
jmp
jmp
sbb
cmp
fidivs
push
repz
aas
sbb
cwtl
mov
push
add
sarl
movb
es
and
mulb
or
jo
mov
adc
or
inc
mov
adc
push
call
or
pusha
mov
in
pop
cmpsl
sarb
fwait
mov
sbb
imul
inc
aam
rol
fs
sti
incb
lcall
movsb
mov
inc
ss
xchg
jl
sarl
shll
popf
pop
mov
stos
xor
mov
mov
popf
mov
lret
push
jmp
lock
mov
lahf
call
add
cmp
shll
popf
adc
sub
push
cwtl
cwtl
xchg
es
jb
pop
or
pop
pop
mov
dec
lea
js
mov
in
push
nop
mov
cmpsb
jge
jp
aad
fisubs
push
add
aad
sbb
enter
pop
add
and
in
fistpll
sbbl
in
cmp
mov
stc
js
stos
rol
popa
mov
cmp
pop
cltd
adc
ss
sub
movsl
nop
cli
ret
shrb
mov
stos
shll
xor
inc
lods
mov
cld
mov
jge
dec
jns
mov
stos
imul
cli
and
mov
sti
shll
mov
std
ror
stos
xchg
mov
push
mov
fiadds
mov
lods
push
jb
adc
mov
mov
cld
or
and
xorb
push
test
sbb
cltd
gs
mov
sbb
lods
and
shlb
inc
or
mov
orl
lods
fs
mov
sbb
sub
or
pop
xchg
mov
rolb
push
call
and
enter
stos
xchg
adc
adc
xchg
or
pop
test
pop
dec
imul
jae
and
addr16
cmp
mov
enter
sti
sarl
es
out
int3
mov
adc
xor
inc
stos
repnz
jbe
lods
mov
outsb
mov
xor
stos
rcrb
es
rorl
aad
add
movsl
pop
pop
cmpb
xchg
imulb
out
jle
bound
rclb
dec
add
iret
sbb
pop
pop
push
pop
pop
fstp
push
jne
push
mov
push
sub
add
dec
movsb
fistpl
inc
and
jb
cmc
or
jle
iret
mov
mov
dec
or
xchg
dec
xchg
outsl
aad
aam
cmc
adc
mov
mov
mov
shll
fldt
jnp
or
sub
xchg
pop
fnstcw
xchg
or
aad
mov
xchg
std
or
jns
mov
pop
sbb
out
add
ljmp
xchg
mov
sbb
pushf
xchg
inc
push
jno
lods
xor
nop
push
push
lods
nop
stos
dec
cmp
inc
push
fcoml
and
outsb
and
dec
clc
and
fldt
out
jle
ret
ds
and
mov
arpl
add
sbb
mov
mov
arpl
add
push
std
sub
xlat
imul
xchg
pusha
mov
outsb
test
movb
push
nop
push
sub
pushf
dec
cmp
mov
lods
xchg
mov
push
rcl
test
aam
sbb
shll
push
lods
rcl
cmp
dec
dec
scas
aam
dec
mov
mov
pop
jne
or
mov
out
scas
ror
add
cmp
test
mov
aas
push
push
addb
sub
xor
sbb
sub
add
loope
cmpsl
adc
inc
xor
mov
or
in
add
std
add
pop
jno
lcall
leave
sarb
cmp
jns
mov
mov
or
shr
xor
add
xchg
pop
dec
popf
xor
push
stos
or
cmp
jns
dec
test
cwtl
das
test
les
cmp
js
outsl
mov
mov
ret
jno
std
or
mov
and
rol
outsb
js
cmpsb
and
xlat
xchg
xor
in
dec
dec
shlb
test
add
ja
pop
jmp
mov
loopne
fnsave
push
sbb
or
xchg
dec
hlt
fnsave
popa
pusha
sbb
adcb
ret
xor
push
subl
daa
in
clc
fwait
pop
test
mov
push
incl
movsb
mov
inc
int
insl
mov
push
mov
push
mov
fisttps
orl
movl
das
les
cmp
inc
mov
push
or
jmp
xchg
push
shll
push
arpl
push
xor
xor
sbb
pop
pop
cmpl
fisttpll
sti
pop
imulb
les
xor
rcll
jns
pop
push
inc
rclb
adc
pop
push
insl
cmp
push
mov
out
ljmp
add
mov
adc
sub
jne
xchg
loope
sbb
push
lea
roll
pop
icebp
test
mov
sub
push
push
popf
push
cmpb
pop
out
pop
nop
and
and
lcall
in
or
mov
push
mov
push
xor
mov
sbb
sbb
test
mov
cmp
mov
mov
mov
in
dec
push
jb
lods
push
sbb
or
lret
cmp
xchg
push
mov
mov
or
push
mov
push
inc
pop
sti
cld
out
in
es
pop
mov
fsubrp
pop
push
mov
add
and
into
stos
xchg
mov
popa
xchg
out
xor
xlat
jbe
sub
xlat
mov
arpl
xchg
add
mov
xchg
orb
pusha
stos
ja
std
repnz
shl
xchg
dec
in
xchg
popa
ja
mov
ret
cmc
pop
sub
adc
sbb
pop
mov
aad
sub
inc
xor
sti
add
test
sbb
in
xchg
test
cs
loop
pop
mov
loop
dec
call
les
push
shlb
sub
lret
movsb
or
inc
rol
lea
sbb
push
and
cmc
xchg
mov
mov
xlat
test
test
int3
nop
dec
iret
pop
xor
test
xchg
adc
sahf
bound
inc
sub
lret
inc
shrl
jl
xor
push
mov
aam
test
loopne
mov
iret
jb
and
sahf
imul
sahf
out
push
pop
stos
jge
add
shrl
test
cltd
mov
push
lcall
stos
jl
insl
div
push
push
call
aaa
dec
cmp
or
lahf
and
aaa
sarl
js
mov
pushf
sahf
in
adc
movsb
sub
sbb
rclb
dec
lock
lock
adc
mov
insl
jge
mov
nop
mov
insb
js
pop
repnz
pop
jle
jae
dec
lea
aas
or
adc
mov
xchg
pop
and
sti
in
xlat
test
jae
lret
fnstcw
ret
or
or
loope
jno
adc
push
scas
or
popa
dec
dec
negb
cltd
test
int3
pop
loop
aam
sbb
xchg
inc
mov
icebp
in
push
mov
inc
mov
xor
das
cmp
push
sub
and
xchg
or
pop
idiv
es
push
lds
jmp
inc
sbb
dec
mov
ds
pop
cmp
xlat
mov
std
pop
mov
jae
pop
rclb
imul
mov
imul
daa
leave
pop
cmc
sbb
jle
inc
xor
sbb
push
or
lea
mov
xchg
fstpl
lret
divl
mov
mov
out
cwtl
lods
je
cmpsl
imul
jns
dec
repz
scas
or
outsb
xchg
inc
dec
hlt
fisttpll
pop
xchg
cmp
cmpb
sub
outsb
and
xchg
and
lods
in
fcomps
mov
mov
loopne
out
fdivl
popf
cmpsb
sbb
jmp
aam
bound
jae
leave
imul
xor
or
adc
jg
jbe
dec
xchg
cltd
dec
fistps
sbb
push
inc
xchg
push
stos
or
mov
stc
cmp
jle
cltd
inc
int
loop
insl
jno
sti
sub
lret
daa
adc
call
mov
mov
pop
xor
gs
pushf
es
popf
scas
aas
jecxz
aam
mov
pop
mov
es
mov
std
dec
add
popf
movsb
and
dec
lods
sbb
pusha
scas
or
mov
icebp
xor
cmp
insb
orl
push
fimuls
cld
loope
or
or
daa
int
fldt
loop
outsb
popf
or
dec
xchg
movsb
adc
pop
add
cmpsb
and
mov
pop
mov
minps
and
test
ret
outsl
cmp
mov
leave
xor
jae
pop
les
int3
adc
lahf
xor
inc
add
mov
pop
call
push
mov
mov
lods
in
add
mov
imul
push
inc
mov
adc
mov
int
and
mov
jl
js
pop
jne
xor
and
test
jg
xchg
mov
mov
mov
xchg
or
add
je
inc
icebp
ret
gs
rorb
lahf
sti
out
push
dec
mov
in
add
cltd
fidivs
fdivr
loop
sar
bound
out
add
add
mov
rolb
pop
push
dec
movsb
jecxz
cmpsl
leave
clc
push
mov
inc
cli
fcompl
call
cli
pop
daa
popf
xor
outsb
jae
mov
xchg
lock
imul
push
mov
cmpb
mov
pop
jle
shll
cmp
mov
in
cmp
mov
cmp
in
sbbl
inc
inc
rcrb
and
aad
int3
push
out
pop
fcmovnb
sub
ss
into
pop
adc
lret
jo
sub
jge
leave
cmp
dec
push
stos
int
mov
icebp
push
in
hlt
xchg
jnp
dec
ljmp
pop
nop
mov
push
pusha
lock
push
sbb
add
cmp
sub
dec
or
sbb
ficompl
sub
jle
push
ss
stos
insl
push
sbb
out
cwtl
scas
call
in
ds
pop
lahf
aad
fwait
repnz
jo
or
in
pop
sbb
inc
inc
sahf
dec
xchg
out
jne
and
pushf
fmuls
push
inc
je
add
movsb
and
mov
sub
das
cld
pushf
shlb
mov
icebp
nop
xchg
xlat
test
ror
call
or
mov
xor
out
out
fisttpll
xor
push
cmp
mov
pop
in
movsb
loope
aam
xor
stos
jo
inc
test
jecxz
std
or
xchg
jge
ja
daa
out
push
icebp
test
outsb
sub
test
test
test
sub
ret
push
push
lds
mov
dec
pushf
insb
sbb
sbb
adc
xor
mov
mov
js
adc
adc
xchg
cld
pop
outsb
lcall
sub
or
xlat
xor
je
push
inc
loopne
add
fldt
mov
jmp
push
cmp
mov
movl
mov
shll
ja
push
bound
loopne
jbe
mov
arpl
pop
std
pop
jne
es
pop
fcoms
inc
lods
mov
push
push
mov
mov
xchg
ljmp
scas
add
xor
imul
in
fdivl
dec
mulb
out
rorb
bound
push
sbb
icebp
pop
fcmove
out
lds
mov
push
cmp
scas
les
loopne
add
xor
xchg
push
xchg
roll
inc
xchg
test
jg
mov
mov
push
push
mov
std
sti
lock
scas
inc
stc
pop
ret
cld
arpl
popf
ret
xchg
pop
imul
mov
loop
loopne
ja
lods
addr16
in
iret
je
jg
imull
movb
std
imul
outsb
loopne
inc
lcall
jno
lds
notb
shrb
lret
aam
xorb
or
aam
xor
or
dec
ficomps
xor
xor
pop
jae
jle
and
or
cli
scas
add
xchg
fsub
mov
cmp
std
inc
addl
mov
adc
mov
not
and
loop
stos
ret
nop
inc
xlat
mov
fs
inc
out
or
push
or
inc
popa
aas
inc
push
xchg
mov
dec
push
int
and
add
data16
stc
jp
pusha
add
xchg
cmp
mov
fwait
imul
arpl
add
jge
das
or
std
sub
add
insb
fistps
pop
pop
outsb
mov
movsl
sarb
add
jp
ret
pop
gs
popf
mov
push
iret
dec
or
xor
rcll
addr16
jecxz
mov
dec
add
xchg
mov
cltd
daa
rolb
sbb
add
fsubs
push
inc
push
add
inc
inc
lcall
push
sarb
push
cmp
sub
inc
dec
clc
mov
or
mov
sahf
ret
cli
fnsave
sbb
adc
sbb
cmp
lds
data16
inc
push
mov
ljmp
and
js
scas
sbb
xor
sub
pop
pushl
testb
push
jl
into
loopne
or
jmp
fwait
pop
mov
dec
push
jae
rcr
fldt
inc
daa
sahf
sbb
into
lock
leave
sub
mov
mov
adcl
cmp
mov
lcall
not
aad
and
out
imul
test
rep
fidivrs
jns
mov
rcrb
push
inc
jno
clc
movsl
shr
mov
fs
arpl
and
stos
sub
addb
js
insl
insl
ret
mov
rcrl
mov
fildll
ja
cmp
jns
jg
lock
inc
notl
repz
jnp
lock
and
mov
add
cmp
and
add
xor
sub
or
cmp
jmp
fcomp
dec
xchg
jecxz
lret
test
test
cmp
pop
arpl
inc
cwtl
mov
ret
cli
push
mov
xchg
mov
ljmp
jo
aad
int
inc
mov
and
and
push
lods
jnp
add
add
stos
aaa
jb
mov
lahf
xchg
push
mov
movsb
lock
xor
daa
fistpll
fs
jne
cld
movsb
add
inc
mov
pop
fwait
shll
add
or
inc
ret
cld
leave
call
test
jge
mov
mov
ret
or
cmp
test
cmp
fstl
mov
xchg
add
push
aas
xchg
sbb
loop
nop
fcoml
into
xor
push
lods
sbb
dec
ljmp
loop
pushf
xchg
pushf
fs
cltd
or
add
lock
dec
test
mov
movsb
ds
mov
sub
repz
mov
mov
popf
rcr
xchg
pushl
int
sbb
xchg
leave
xor
cltd
jns
shr
clc
inc
sbb
mov
mov
out
incl
jnp
mov
mov
hlt
fwait
mov
xor
es
ljmp
sbb
adc
xor
imul
sub
sbb
ss
cmpsl
and
data16
movsb
and
pushf
mov
addr16
inc
into
std
mov
sbb
fsubrl
rcrb
daa
cmp
or
inc
mov
fnstcw
mov
add
movsb
inc
fcomp
hlt
xchg
les
sub
push
mov
inc
add
push
into
daa
jle
dec
test
pop
loop
mov
pop
sbb
leave
pushf
int3
pop
loop
fnstenv
dec
aam
inc
jno
mov
adc
lret
inc
lock
inc
push
shll
xchg
add
push
outsl
mov
and
stc
jecxz
add
sub
std
stos
fisubrl
outsl
mov
mov
xchg
loop
inc
shrl
and
inc
inc
insb
je
sbb
and
pop
popf
mov
sub
cmc
jne
dec
xor
popf
cmp
lret
inc
push
mov
mov
dec
lods
movsl
mov
add
es
pop
xlat
daa
add
jns
adc
and
out
loop
mov
mov
hlt
inc
cli
mov
int3
movl
xor
rclb
or
stos
xchg
xchg
inc
rcll
xor
inc
out
ljmp
add
mov
push
or
mov
push
rcl
lret
lods
mov
jno
sarb
dec
jecxz
ror
test
lcall
aas
mov
and
cmpsb
mov
cwtl
pop
aad
push
cltd
sub
or
lock
lods
orl
int3
adc
mov
mov
and
or
inc
push
xlat
scas
lock
mov
add
push
inc
xor
mov
dec
test
shl
mov
cmpsl
xorl
add
mov
popa
rorb
adc
add
cmp
inc
push
negl
int3
test
imul
out
or
fmull
adc
sub
push
jo
loopne
dec
xor
mov
leave
movsb
movsl
fldl
xor
or
inc
push
push
xchg
sahf
inc
loopne
hlt
js
in
sti
sub
shll
loop
xchg
movsl
dec
out
fisubrs
andl
call
out
iret
and
pop
push
int
insl
sbb
inc
rcrl
loop
jo
sahf
imul
jbe
lret
arpl
jnp
add
cmp
call
dec
or
loop
xchg
push
fcmovnb
shll
mov
mov
es
pop
xchg
sbbb
inc
push
pop
dec
in
add
out
xchg
push
pushf
aaa
shl
in
add
and
cld
shlb
test
repz
mov
mov
pop
pop
dec
icebp
dec
sbb
pop
push
shlb
loopne
popf
mov
add
jo
mov
rorb
pop
ljmp
js
jo
popa
mov
bound
pop
nop
mov
rol
stos
jbe
mov
lea
jno
aaa
mov
xor
rclb
sub
or
ljmp
int
jg
and
gs
xchg
fimull
xor
and
inc
lea
jnp
sbb
insb
dec
push
push
pop
fldln2
lea
scas
in
fstpt
ss
insl
dec
aam
xor
pop
daa
nop
pop
add
add
mov
ret
lret
out
lea
dec
movsl
or
loop
repnz
xorb
xor
jle
movsb
aad
andl
dec
or
mov
lahf
mov
mov
out
sub
lahf
sub
imul
xchg
sub
dec
aaa
loope
fnsave
add
push
and
push
addr16
cmp
popl
fdivrp
daa
bound
xchg
divl
or
movsb
fiaddl
out
xchg
movsl
jecxz
mov
loope
pop
ds
fcomp
fcmovnb
outsl
sti
fsubrp
mov
mov
xchg
mov
popa
nop
shll
ss
inc
loope
push
or
fnstsw
jle
loopne
mov
dec
lret
or
bound
cld
roll
pop
sub
jge
mov
popa
mov
push
sti
insl
cmp
dec
insl
pop
jp
push
mov
int3
dec
pusha
in
mov
xchg
add
inc
cmc
test
cmp
js
rolb
pop
sub
mov
movsb
mov
xorl
loope
jle
movsb
or
and
jecxz
cmpsb
icebp
or
push
and
ds
jge
or
movsb
xchg
xchg
and
shl
jmp
icebp
sub
in
add
aam
stc
xchg
cmpsb
mov
insb
sbb
roll
jl
daa
sub
fwait
arpl
dec
jmp
dec
dec
sub
je
out
fdivrs
jg
ret
loop
fcmovbe
adc
leave
xchg
xor
sbb
adc
push
cmp
iret
push
cmp
dec
xor
inc
pushf
cmp
andb
xchg
push
push
popa
adc
iret
jp
xor
ds
fwait
stos
int
mov
or
dec
movsl
fmull
mov
xor
mov
dec
nop
test
adc
int
mov
sub
push
xchg
cmp
outsb
add
push
loopne
inc
dec
scas
add
in
jb
pusha
in
jg
fwait
lods
mov
mov
lcall
adc
test
gs
subb
inc
in
xchg
and
dec
inc
loopew
mov
xchg
je
push
fsub
mov
std
test
fnstenv
gs
xlat
jmp
fsub
stos
xor
movsl
movsb
mov
mov
shlb
adc
mov
dec
pop
xor
mov
imul
lods
and
push
push
ret
pop
test
test
push
scas
xor
stos
call
fidivl
ja
movsl
inc
popf
ja
xchg
enter
mov
sbb
add
or
les
cmp
adc
add
xor
mov
adc
lds
cmp
andb
or
inc
adc
adc
pushf
stc
cmp
cs
mov
xchg
push
and
insb
pop
into
push
jnp
in
imul
sbb
loop
bound
mov
mov
in
cmp
rcl
mov
or
cmp
outsl
mov
rolb
pop
xchg
xchg
lcall
mov
je
adc
jnp
sub
lret
lea
mov
call
and
dec
inc
mov
or
arpl
jno
lods
mov
in
cmp
jnp
fbld
cwtl
lds
popf
jmp
inc
xchg
shrl
add
adc
jmp
jl
test
cmp
jecxz
xchg
mov
addb
lds
adc
inc
push
ds
jnp
fs
sbb
imul
fldt
mov
inc
les
fsubrl
cmp
add
cmp
subb
loope
sub
ret
push
in
loope
adc
in
stc
xor
call
leave
fdivrl
inc
lret
dec
std
or
movsb
aad
insb
jno
add
sbb
pusha
fstpl
orb
adc
pop
cmp
and
cmc
lds
pop
cwtl
shl
ret
jo
xchg
xchg
sbb
mov
mov
outsb
jmp
aas
ret
cmpl
jb
cmpsb
mov
adc
or
inc
inc
push
jp
jg
inc
fistpll
adc
rcr
out
or
mov
inc
sarb
dec
sarb
ficoml
inc
ficoml
mov
dec
push
hlt
loopne
mov
add
fidivrs
movsb
into
sub
fwait
outsl
ja
push
xchg
mov
call
ljmp
les
sub
mov
sbb
decb
mov
push
leave
push
and
int3
cmp
jne
das
lldt
lods
jno
fidivs
xlat
inc
out
mov
addr16
rclb
xchg
pop
mov
loope
push
xor
xorb
push
and
shl
mov
inc
sub
in
adc
sbb
pushf
ds
adc
mov
pop
hlt
loopne
imul
xor
movsl
aas
inc
ffreep
and
mov
insb
cmp
jae
and
push
add
pop
cwtl
sub
or
or
pop
or
push
adc
sti
jb
pop
imul
stos
popa
loopne
jnp
pop
imul
pushl
jge
and
jno
push
rcrl
push
sbb
inc
scas
mov
push
sbb
add
xor
stos
push
xchg
popf
push
insb
sbb
lds
cli
imulb
xchg
push
or
pop
and
mov
mov
inc
leave
mov
stos
bound
test
cmpsb
test
call
jnp
add
dec
sbb
imull
push
or
aam
jno
decl
gs
xchg
mov
rcl
inc
icebp
mov
inc
jne
ljmp
dec
mov
repnz
push
mov
xor
xchg
xchg
xchg
loope
ficoms
adc
fstpl
outsl
mov
push
repnz
int3
adc
sbb
aaa
pop
inc
testb
scas
add
out
js
push
push
mov
or
shlb
xor
or
add
fiadds
jb
lret
xchg
jp
fidivrl
int3
mov
sbb
out
inc
rorl
push
jns
movsl
sahf
inc
push
or
mov
mov
jnp
loopne
pop
inc
std
cmp
adc
scas
sti
and
popf
or
xor
ret
in
mov
adc
cmp
mov
mov
jnp
push
mov
sbb
fstl
subl
sub
sbb
fldcw
xchg
mov
inc
cmovne
push
pushf
adc
loop
push
ret
or
notb
dec
das
lods
and
je
mov
xchg
loopne
and
inc
bound
les
call
xlat
mov
dec
jp
mov
push
adcb
fbld
xor
ror
mov
jbe
inc
pop
sbb
cmpsl
ja
xor
cmp
and
xchg
xor
and
xor
scas
or
aaa
js
jns
mov
call
js
icebp
adc
and
cmpsb
aad
push
imul
pop
push
sar
push
jge
icebp
xchg
cmp
mov
dec
cmp
cmp
mov
scas
negb
sbb
add
pop
repz
addr16
in
sbb
push
int
mov
cmp
and
pop
cmpsb
pushf
pop
sub
int3
xchg
xor
movsl
mov
cmp
popf
push
mov
lods
hlt
test
lds
cmp
imul
fs
push
into
inc
cmp
adc
jmp
mov
filds
jno
in
push
mov
pusha
lds
push
xor
popf
sub
stc
cltd
rol
shrb
out
and
lret
and
inc
out
dec
jmp
mov
mov
out
orl
lods
jle
ss
cmpsl
lret
out
hlt
push
cmp
jle
push
lds
push
push
out
int3
insl
mov
enter
mov
xchg
dec
test
ljmp
push
or
xor
scas
nop
jp
dec
jo
sarl
mov
hlt
dec
dec
add
mov
mov
push
shll
cmp
xchg
mov
lahf
jp
add
and
mov
call
xor
pop
test
fiaddl
xchg
cmp
ljmp
fbld
add
insl
outsl
out
pop
into
mov
outsb
mov
popf
scas
movsb
sahf
xchg
mov
ss
imul
jp
mov
mov
sbb
dec
pop
clc
dec
lea
in
jo
fistl
jae
pop
and
xor
push
stos
xlat
and
mov
push
inc
les
mov
and
or
push
icebp
rcll
dec
in
adc
pop
cmp
loope
sub
inc
lcall
add
imul
push
aaa
adc
jns
xor
out
cmp
adc
dec
out
ja
lahf
mov
addl
movsb
push
in
clc
out
xchg
inc
aaa
ja
sub
cmp
cmpb
pop
add
xorl
inc
mov
pop
jge
or
xchg
dec
shlb
or
adc
mov
push
jge
push
xchg
or
lea
outsl
cmp
int3
inc
inc
shlb
data16
adc
cli
mov
adc
jg
cld
push
es
les
out
clc
xor
shlb
mov
inc
adc
mov
mov
push
jg
ffreep
pop
dec
fnstsw
js
sbb
jae
outsb
inc
ret
cwtl
sbb
and
mov
and
test
adc
aam
clc
mov
movd
test
cmp
adc
popf
mov
dec
inc
jns
jecxz
mov
mov
adc
fsubrl
push
lcall
mov
fdivs
mov
ret
ljmp
xchg
or
fwait
mov
xchg
gs
jg
vmread
sub
stos
mov
xchg
lods
icebp
add
lock
pop
mov
mov
inc
jno
push
aas
jbe
mov
mov
xor
xor
and
sub
out
sub
clc
dec
add
jg
pop
add
aaa
jge
js
cmp
push
ficoms
jnp
cmp
out
cmc
ret
xchg
or
pop
push
sbb
and
ss
in
enter
dec
and
dec
aas
fbld
ja
bound
lods
inc
pop
cmp
mov
jle
dec
stos
jnp
loop
lods
scas
movsl
mov
mov
sarl
loop
adc
frstor
outsl
pop
int3
fst
adc
push
prefetchw
push
cltd
xor
push
jb
xchg
les
xchg
inc
push
inc
xchg
negb
add
mov
ds
adc
lock
imul
sbb
sbb
jmp
in
js
mov
mov
mov
jns
lods
mov
xchg
dec
push
sbb
test
mov
lods
ret
gs
je
sbb
test
sbb
jg
jno
mov
cmc
outsb
xchg
scas
sbb
push
stos
pop
dec
jmp
push
jb
dec
test
ja
pop
jno
insl
add
dec
aaa
cmp
iret
fimuls
lods
cmp
jle
daa
jnp
jb
cmp
cli
dec
lret
xlat
cmc
cs
les
dec
sub
cmp
ljmp
adc
add
jbe
scas
js
imulb
sub
push
addl
scas
int
fsubr
jno
enter
fistpl
enter
mov
cltd
sub
gs
fdivrs
pop
scas
sub
in
mov
xor
push
push
les
jns
push
cmp
lods
dec
sarb
xchg
andl
sbb
mov
xor
add
xacquire
jmp
push
adc
jo
sbb
xchg
outsb
pop
pop
adc
and
push
into
ljmp
push
cmp
aaa
dec
shlb
lock
bound
sub
inc
shrl
push
push
arpl
xchg
popa
mov
add
xor
pop
sub
stos
out
sarl
shlb
hlt
lahf
imul
std
negl
lock
fmul
bound
dec
fwait
jge
nop
push
rolb
cmp
xor
sub
cmp
aas
mov
lret
or
jo
push
movsb
ret
sbb
stc
jnp
loop
inc
daa
loopne
out
cs
nop
int
outsb
push
popa
xchg
js
not
adc
xchg
addr16
dec
clc
fwait
bound
daa
in
xchg
jp
into
je
out
loopne
lret
jmp
out
popa
icebp
fcompl
mov
jns
pop
faddl
in
jne
pop
shll
das
clc
sbb
and
pop
in
flds
push
in
neg
or
loopne
jp
stos
mov
mov
movsl
lcall
mov
test
xor
mov
add
mov
inc
mov
mov
xchg
fmul
fadd
mov
xchg
or
icebp
leave
pop
xchg
sub
in
jp
inc
inc
or
adcb
dec
aad
xchg
je
cmpb
mov
bound
adc
daa
push
push
scas
cmp
xor
lret
dec
sbb
into
bound
sahf
push
add
les
jnp
sbb
std
push
sti
jno
packsswb
sub
test
fwait
mov
or
out
mov
cltd
inc
adc
mov
nop
cmp
xchg
insb
fstpt
pop
push
inc
jle
push
fwait
icebp
rep
mov
push
dec
mov
mov
sbb
sub
test
test
xor
iret
sub
cli
pop
ret
pop
push
rorb
in
addb
in
xor
popf
xor
ret
jb
push
fmull
pop
mov
fdivr
xchg
decl
and
fistpl
and
popf
test
mov
ds
movsb
push
dec
leave
xchg
scas
sbb
je
femms
ja
xor
xor
cmpsb
xchg
sarl
adc
or
out
push
inc
int
and
daa
mov
call
sub
sub
stos
sub
cmc
iret
test
mov
lret
test
lcall
xchg
xchg
sbb
xchg
pop
mov
pop
add
jns
xchg
mov
push
in
fsubl
add
bound
sti
mov
or
jp
and
scas
rclb
lock
inc
adc
cli
imul
fdivrs
icebp
sbb
inc
scas
mov
int3
fdivl
shlb
lret
xor
jl
or
stos
loop
xchg
xor
outsl
jl
cltd
mov
sbb
js
add
cmp
icebp
cmp
fld
mov
add
push
or
or
mov
mov
mov
mov
inc
ss
add
rorb
movsl
dec
pop
dec
stos
jne
movsb
or
adc
negl
fbld
mov
cwtl
pop
push
push
ljmp
jge
sbb
push
in
mov
mov
shr
addr16
idiv
faddl
jge
jmp
and
out
daa
jb
es
ja
or
mov
pop
mov
sub
xor
push
mov
jge,pt
fucom
fbstp
testb
or
scas
mov
ret
jae
sbb
insb
dec
adc
fs
gs
cltd
sub
dec
xchg
or
gs
jmp
hlt
and
fidivl
fnstenv
fucomip
arpl
push
jae
outsl
mov
mov
iret
pop
aas
jno
push
icebp
pop
imul
jecxz
aas
scas
mov
push
inc
mov
xchg
push
dec
ljmp
xchg
xchg
pop
shll
repz
pushf
mov
xor
ljmp
cmp
es
js
push
mov
pop
call
out
es
repz
cmp
mov
sub
adc
in
je
adc
out
in
sbb
xchg
test
sbb
cmpb
inc
push
ret
xchg
bound
jne
mov
sahf
pop
rorb
push
mov
xor
in
leave
xor
xor
and
insl
scas
xor
outsl
faddl
out
push
test
rcrl
pop
pop
mov
add
test
adc
cmp
ret
or
int
pop
scas
jb
movsl
dec
pop
test
and
repnz
cmp
add
pop
fwait
mov
jae
ds
inc
jmp
lods
cmc
push
cmp
xchg
and
aas
mov
notl
lahf
xchg
pop
and
fdivs
imul
adc
frstor
dec
jl
rcrb
add
xlat
into
stc
and
xor
sbb
iret
mov
out
mov
jmp
icebp
pop
test
adc
pushf
cld
cs
cmp
mov
leave
out
loop
pop
fistpll
jo
hlt
in
movsb
push
insb
and
outsb
clc
lcall
mov
cmp
dec
push
hlt
es
jmp
stc
in
mov
sub
outsl
mov
ss
ret
leave
xorb
outsl
adc
test
jl
push
dec
sbbb
jae
and
pop
jg
mov
or
in
jne
xchg
incb
add
clc
lods
push
pop
xchg
ffree
jb
push
pop
dec
adc
jmp
mov
icebp
notb
pop
jle
lods
push
adc
aas
pop
rol
xor
js
cli
gs
out
fnstsw
jae
std
or
mov
inc
lcall
sbb
rcrb
lock
add
test
cli
push
xchg
or
xchg
add
es
lret
in
dec
in
orl
add
aad
push
dec
outsl
roll
jne
cmpsb
push
push
andb
mov
xor
stos
pop
inc
dec
jmp
sbb
dec
das
bound
xor
lods
add
mov
mov
into
add
xor
pop
gs
sub
and
jl
pop
aas
dec
pushf
jmp
push
repnz
iret
adc
cmp
rol
les
cmpsl
sarl
mov
lea
out
imul
std
jae
push
test
div
rorb
jp
mov
xor
bound
dec
clc
lcall
scas
inc
ret
inc
std
rcll
pop
sahf
in
mov
and
fdivl
mov
pushf
cmpsl
add
mov
fistps
lcall
and
sub
scas
or
dec
shl
xchg
arpl
push
cmpsb
jnp
ret
shl
jp
outsl
cld
out
in
inc
jo
call
addr16
int3
jg
dec
cmp
add
rolb
std
dec
ret
cmp
mov
inc
xchg
sub
xor
xchg
movb
ret
ret
ljmp
jmp
lods
mov
in
orl
xor
and
jge
add
test
inc
shlb
xchg
into
cmp
jecxz
mov
jmp
out
ja
push
jno
jns
paddusw
jbe
xlat
sub
ja
or
pop
pusha
stos
dec
mov
cltd
dec
mov
sub
sbb
pop
mov
stos
lods
inc
arpl
inc
xor
xchg
jns
js
cmp
pop
mov
nop
popf
iret
pop
stos
mov
adc
or
pop
xor
fistl
rcrl
or
mov
test
jns
stc
jl
jp
imul
xor
mov
xlat
dec
sbb
hlt
xchg
jnp
aad
push
shl
mov
cmp
lahf
mov
cld
mov
sbb
mov
mov
jbe
shll
call
int3
dec
pop
fwait
sub
imul
push
insl
cld
adc
outsb
add
hlt
es
mov
and
push
out
jge
jns
xchg
pushf
rcrl
in
in
and
out
popa
jns
inc
test
les
loop
std
pusha
cmpb
scas
xchg
sub
xor
gs
fnsave
push
push
dec
gs
ret
jecxz
mov
loopne
lock
mov
cmc
scas
pop
scas
cmp
fstpt
lret
std
dec
cmpsl
mov
gs
inc
jae
testb
jle
mov
push
push
clc
sbb
xor
fsubrp
push
ret
imul
aad
push
xchg
push
lds
push
imul
pop
jecxz
pop
adcl
push
dec
aam
adcb
xor
int3
lea
cmc
jge
adc
xchg
rcrl
scas
mov
add
repz
mov
dec
data16
lods
sarb
mov
test
cmp
cs
fsubrl
mov
push
call
movsb
shll
pop
push
inc
nop
cli
lock
gs
loopne
mov
xchg
jle
jg
jb
or
xchg
xor
hlt
pop
shll
jge
xor
hlt
lret
xor
imul
push
push
les
iret
aas
pop
pop
jbe
cmpsl
rol
daa
sahf
stos
leave
repnz
iret
das
push
repnz
dec
call
ret
sbb
mov
sub
or
add
inc
and
push
inc
xlat
sub
mov
outsl
jne
outsb
int3
shld
cmpsb
xor
movsl
or
or
and
xor
rcl
inc
scas
add
mov
pop
adc
dec
movsl
movhps
gs
cmp
xor
popa
xchg
xchg
daa
mov
mov
xchg
cmpl
int3
int3
imul
or
mov
mov
lret
gs
push
sahf
mov
pop
jno
mov
push
mov
daa
fadds
inc
imul
jp
outsb
lock
mov
dec
jmp
leave
daa
out
add
pop
xor
xchg
loope
sbb
jae
or
add
mov
sub
enter
or
push
decl
sub
stos
jge
adc
js
mov
or
clc
mov
pusha
pusha
call
or
out
sti
add
sarb
mov
jg
mov
fmul
push
sbb
jg
dec
int3
add
inc
pop
pop
adc
push
imul
jo
leave
pop
fildl
and
movsb
cmp
frstor
dec
shll
repnz
ficompl
or
dec
or
addr16
pop
push
jb
and
adc
stos
pmuludq
xchg
xor
mov
sti
sbb
je
das
in
addb
pop
cmpsb
mov
lahf
push
sub
lock
lods
insb
mov
push
sahf
pop
movsl
pop
mov
inc
inc
push
test
jae
in
push
movsb
sbb
sahf
movsl
cs
xchg
cmpsb
int
adc
inc
add
add
cs
xor
inc
mov
mov
cli
nop
add
jecxz
mov
addr16
test
pop
mov
push
sahf
jae
pop
fidivs
iret
or
add
sbbb
fstpt
or
mov
jp
sub
jns
cs
stos
in
jmp
ror
or
arpl
ja
lret
daa
popf
mov
mov
in
js
xchg
inc
scas
sahf
repz
jae
hlt
movb
sbb
or
repnz
lods
into
adc
and
push
pop
add
outsb
adc
fs
cmp
inc
mov
and
lret
mov
in
or
add
xchg
pop
inc
and
xchg
mov
stc
push
pop
jg
hlt
bound
adc
inc
sub
fistpll
fmuls
mov
cmp
aam
sbb
mov
gs
out
push
jg
jg
call
mov
test
fisubl
popf
inc
dec
ss
out
addb
cli
push
mov
rolb
add
jl
popf
iret
and
mov
cmp
loopne
sub
and
add
int
jns
pop
sub
cltd
aad
lock
inc
adc
cwtl
xor
outsb
mov
je
test
xor
lcall
outsl
inc
mov
addr16
mov
xchg
ljmp
bound
addl
sahf
sahf
popa
loopne
push
xor
and
scas
repz
mov
push
or
cld
ss
orl
les
btr
test
ja
xor
ret
cltd
dec
xchg
push
push
int3
insl
xor
mov
and
xor
sbb
inc
lcall
xor
jecxz
repnz
cld
cmc
enter
ss
pop
jge
ss
lods
inc
cmp
insb
push
adc
cmpsb
cmp
imul
out
push
pmaxub
rolb
mov
mov
sbb
pushl
fcmovnu
dec
insb
add
jnp
mov
cmp
inc
inc
and
daa
adc
insl
js
aas
inc
sub
jo
stc
in
fstpt
pop
mov
xor
mov
stos
or
outsb
push
jae
lret
mov
sub
leave
push
mov
ret
aam
or
cmp
cltd
insb
scas
push
sbbb
enter
inc
out
jmp
cmp
sbbl
push
scas
sub
shrb
jp
mov
jb
les
sbb
xchg
icebp
adc
std
push
test
pop
jp
addr16
or
push
fcomps
pop
incb
lock
in
adc
mov
push
enter
das
mov
std
stc
add
repnz
xchg
dec
es
cld
jo
leave
add
inc
punpcklwd
daa
xor
jecxz
loop
ds
out
mov
dec
scas
cmp
leave
repz
lret
test
push
sbb
xchg
aad
add
inc
mov
xchg
inc
inc
mov
sbb
adcl
mov
and
mov
ljmp
mov
mov
and
push
pop
test
xor
lds
push
fbld
iret
clc
jmp
and
inc
sbb
xchg
clc
adc
clc
inc
xor
cs
mov
int
test
test
sbb
and
cld
ftst
xchg
jne
jg
xor
stos
lods
roll
shll
inc
xor
stc
adc
scas
mov
push
mov
insb
pop
icebp
fnstenv
int3
push
nop
add
shrl
jecxz
sahf
adc
sbb
dec
pop
stos
in
pop
mov
test
icebp
mov
clc
jmp
jae
inc
lcall
sub
cmp
sbbb
push
push
lods
loopne
inc
inc
rclb
ret
mov
scas
popa
push
xchg
mov
cmp
loopne
pop
addr16
fidivrs
gs
js
out
xchg
dec
mov
push
or
jmp
pop
bndstx
dec
loop
fwait
mov
into
adc
push
iret
ss
fmuls
xchg
mov
stos
sbb
orl
cld
inc
insl
inc
pop
xchg
lea
push
mov
cmp
and
add
xor
ss
pop
addr16
xor
cs
ret
fcmovne
cwtl
mov
or
sub
ret
leave
and
jns
notb
iret
sbb
lds
rcr
aas
adc
mov
xchg
dec
xor
stos
test
add
and
loop
xchg
pop
xchg
push
mov
cld
add
stos
fists
push
dec
sar
jecxz
ret
mov
scas
adc
testl
add
lgs
xchg
cmp
lret
inc
sub
xor
cmc
push
jg
stos
fbld
int3
dec
dec
dec
loop
sbb
out
sub
aaa
aam
cmpsb
sbbb
cmpsb
sarl
andb
mov
pop
hlt
mov
loopne
cmc
add
test
hlt
lock
mov
int
inc
pop
loopne
or
xchg
test
xchg
pop
jno
mov
mov
daa
repz
shlb
push
shr
sti
and
pop
addl
sbbb
repnz
mul
scas
xor
pop
or
xchg
xor
mov
rolb
test
mov
aad
das
pusha
fsubrl
xchg
mov
out
frstor
mov
mov
mov
out
mov
mov
pop
push
xlat
in
movsb
push
movsb
daa
mov
fldt
mov
cmp
xlat
pop
cs
les
popf
inc
scas
dec
je
outsl
fmul
dec
mov
push
addb
cmp
inc
std
lods
daa
lret
stc
pop
dec
cltd
inc
push
push
leave
sbb
mov
push
fs
adc
ljmp
mov
jne
and
mov
iret
lret
test
sbb
push
cmp
rolb
outsl
adc
sbb
scas
sbb
dec
mov
or
sbb
js
sub
fcompl
dec
xchg
sub
daa
andb
je
xchg
fidivrs
sbb
xchg
xchg
lcall
sbb
push
ret
lods
push
faddp
stos
in
int
inc
sbb
test
pop
cli
and
mov
push
fists
inc
add
repnz
lret
mov
sub
push
mov
in
jbe
loope
xor
ljmp
popa
cmp
push
xchg
jo
cmpsl
pop
mov
enter
push
jno
mov
xchg
xor
iret
cmc
jne
adcb
sti
in
mov
or
pop
dec
aam
mov
sti
push
lret
int3
insb
pushf
sub
stc
rorl
jne
mov
mov
and
clc
adc
sbb
aam
movsl
cmc
loopne
sub
scas
popf
loope
inc
fdivrl
lods
jecxz
mov
pop
insb
jbe
fisubrl
mov
sub
orl
sbb
and
popf
test
sub
or
push
outsb
sarl
inc
mov
repnz
lret
jno
jo
fdivrl
add
xor
cmp
jecxz
lock
push
xor
push
fs
pop
pop
out
sub
jbe
or
subb
scas
arpl
loop
mov
and
mov
sbbb
cmpsb
and
or
adc
push
fcompl
and
in
sarl
stc
leave
push
adc
mov
xor
lods
mov
in
cmpsl
std
testb
fcoml
outsl
inc
jg
sbb
cld
ret
xchg
dec
rcrl
mov
rcrb
stc
arpl
push
pop
dec
and
lret
fldcw
movsl
xor
lret
inc
fs
xor
cmp
stos
xor
push
dec
jbe
leave
sbb
dec
aas
jne
pop
test
adc
fdivs
shrb
imul
pop
scas
rcrb
loop
addb
fisubrs
bnd
test
push
shl
dec
inc
sti
sub
out
aad
jb
dec
lret
pop
sahf
xorl
inc
sub
add
or
incb
xchg
inc
or
stos
sbb
insl
jo
dec
adc
cmp
shll
cvtps2pd
sub
jge
inc
sbb
repz
dec
jg
das
shlb
push
jg
xor
lea
xchg
icebp
ret
xchg
or
lret
bound
push
pop
dec
es
loop
add
mov
ljmp
xor
out
fsin
and
and
test
fwait
rcr
ret
mov
cmp
ljmp
lock
int
cltd
andl
hlt
lret
cmc
cmpsl
shll
or
inc
sbb
out
mov
mov
or
sar
or
fdivr
shl
mov
xor
adc
adc
leave
inc
and
pop
les
out
xor
xor
loopne
loope
mov
inc
adcl
cmp
je
mov
jb
mov
cmp
push
xor
cmc
mov
inc
clc
lds
xchg
xor
mov
mov
sub
jno
ret
mov
aad
test
insb
std
lret
aam
mov
in
dec
nop
push
mov
push
jno
lds
adcl
sbb
es
sub
pop
fstpt
xor
mov
scas
and
cmp
push
dec
push
dec
test
in
arpl
into
xor
pushf
mov
fdivrl
fimull
inc
ror
sbb
jl
jmp
mov
xor
fisubs
mov
fcoms
cmp
lretw
das
repz
sahf
clc
popf
dec
repz
icebp
lock
daa
jnp
pop
es
fadds
mov
incl
add
pop
sti
inc
into
jl
outsl
sbb
inc
adc
aad
les
cli
jg
es
jbe
mov
lret
sub
sub
mov
ret
inc
or
psrlq
sbb
aas
enter
adcb
aad
or
inc
and
push
pop
cmp
imul
or
paddsb
jmp
xor
jp
pop
adc
xorl
gs
and
inc
jecxz
stc
mov
fisubrl
mov
notb
ret
dec
mov
jo
mov
mov
adc
jne
xchg
test
sahf
push
adc
xchg
stos
push
popa
sbb
push
xchg
or
mov
push
xchg
lds
or
xchg
sbbb
sub
xchg
js
xorb
addr16
inc
sbb
js
arpl
dec
jp
imul
dec
xchg
lcall
cmp
movsb
push
enter
outsb
jmp
mov
ljmp
add
lods
rclb
jns
enter
dec
sbb
inc
dec
jnp
jle
test
insl
jnp
push
cmp
jae
sbb
push
addr16
mov
jmp
mov
pop
pop
popf
cmp
adc
jno
into
sub
jbe
shlb
dec
inc
pop
jmp
sbbb
jl
and
or
popa
sbb
jns
js
and
nop
push
cmpsb
push
xorl
xor
arpl
movsb
pusha
cmp
movsl
mov
lea
cld
pop
mov
inc
ds
and
mov
fbld
negb
je
pushf
adc
fcompl
in
cmp
fistps
cmp
ja
sti
ljmp
push
xor
shll
jp
fs
pcmpeqb
mov
fcomps
adc
fucomi
lret
test
icebp
scas
jno
mov
push
or
insl
popf
dec
out
cwtl
cmp
xchg
jae
js
jge
pop
mov
and
aas
pop
les
jnp
out
cmc
out
inc
or
push
in
push
mov
adc
add
dec
jb
adc
fists
mov
clc
cld
je
add
leave
stos
shr
mov
scas
out
inc
push
or
or
xchg
jne
cmpsl
or
inc
and
and
int3
imul
adcl
ficomps
rorl
adc
or
mov
or
dec
fnstenv
lahf
rorb
jne
mov
sahf
jb
outsb
jb
sbb
add
insb
icebp
enter
inc
push
xchg
mov
inc
mov
mov
mov
lods
mov
add
or
imul
or
test
mov
pop
in
pop
mov
inc
nop
sbb
jmp
jecxz
int
xor
dec
sub
jns
push
inc
xor
iret
push
sub
xor
or
mov
and
xchg
ds
sub
xor
xchg
lods
movsl
icebp
push
jo
outsl
mov
out
scas
pusha
repz
lea
and
mov
pop
arpl
sbb
push
pusha
cwtl
outsb
rcrl
stc
dec
lret
mov
adc
pusha
outsb
pop
jmp
inc
cli
or
xchg
clc
jbe
push
out
mov
sahf
push
dec
mov
xchg
test
sub
arpl
sub
cmp
cmpl
fistps
lods
or
jp
lcall
bound
mov
cmp
sbb
jecxz
movsl
jnp
out
aas
pop
loop
mul
sahf
mov
fdiv
mov
adc
jge
adc
sbb
jae
cmp
cmp
mov
xor
fwait
cwtl
imul
dec
xchg
mov
fsub
insl
rclb
or
pop
push
cmp
stos
rcrb
sti
inc
cld
arpl
cmp
aam
xchg
ds
mov
fsubl
aam
andl
cmp
dec
jns
sbb
sbb
cmp
movsb
jecxz
inc
cli
int
add
cmc
push
pusha
mov
mov
mov
add
adc
push
sub
movsb
mov
jl
outsl
jg
push
test
ja
cmp
mov
popa
or
jae
mov
dec
mov
inc
and
sti
adc
movl
ret
jmp
adc
movsl
daa
repz
add
outsl
pusha
xor
jo
mov
stos
jns
or
andl
popf
xchg
mov
loopne
aam
sbb
pop
popa
ss
pop
negb
subl
sub
inc
pop
sub
jnp
mov
jge
mov
ret
push
xchg
faddp
adc
repnz
inc
push
xchg
sbb
das
push
inc
pop
in
icebp
aad
loopne
inc
lcall
dec
jne
loopne
adc
mov
jnp
xchg
out
out
inc
push
inc
cmp
cld
or
dec
and
and
into
cld
pop
sub
fsubs
xchg
test
mov
sub
loope
pop
jecxz
ret
mov
and
jo
mov
jb
adc
loop
stos
add
dec
mov
fimuls
mov
sbb
jo
es
clc
ds
aaa
fisubrl
test
pop
cmp
jno
or
out
arpl
rcl
int
int
lods
imul
lds
icebp
sbb
add
dec
adc
sub
lcall
sub
and
in
enter
fadd
mov
mov
mov
inc
sbb
ret
lods
or
push
test
mov
pop
or
pop
add
add
cmp
aaa
cltd
in
inc
adc
bound
jo
lods
mov
daa
daa
cwtl
out
outsl
ret
das
pop
adc
lea
jp
in
data16
mov
repnz
imull
pop
sbb
adc
decb
testl
mov
jns
mov
pop
insl
xchg
and
pushf
cmp
jg
mov
out
cmp
out
jb
mov
leave
and
sub
xor
rcll
mov
sbb
jp
sub
inc
inc
and
out
jmp
pop
xor
nop
mov
adc
push
sbb
ds
jmp
js
out
lds
sub
jecxz
stos
pop
jne
test
fstl
clc
es
inc
sub
pop
push
push
ljmp
and
shlb
mov
cmp
js
mov
cmp
mov
pop
cld
aam
mov
and
lock
mov
outsl
mov
mov
mov
lods
out
fists
inc
lods
scas
lcall
dec
cmp
inc
and
adc
cmpl
sbb
lret
fs
aaa
lahf
mov
and
inc
sub
pusha
xchg
mov
xchg
adc
ss
push
or
xchg
and
mov
push
test
push
inc
scas
insb
mov
enter
mov
add
push
or
xor
mov
inc
mov
sub
and
mov
mov
out
lahf
and
xlat
pop
mov
out
stos
add
data16
fs
fbstp
bnd
push
mov
cmp
cs
andl
lods
scas
pop
xchg
aaa
dec
jmp
inc
pop
pop
jns
cwtl
jne
xor
mov
jnp
lea
shlb
test
or
mov
and
xlat
push
fldcw
scas
cmp
adc
xor
jmp
scas
inc
sar
paddw
les
mov
xchg
sbb
xor
cld
popa
push
insl
out
xchg
lret
hlt
xor
add
sbb
out
in
or
jb
lahf
mov
jp
rorb
cmp
pusha
mov
ret
pop
in
lods
mov
cmp
rolb
fildl
in
mov
mov
sub
aaa
rcl
nop
das
out
sti
loope
call
movsl
lcall
mov
js
jne
mov
sub
xor
dec
pop
int3
out
or
in
dec
cli
test
lods
das
jle
push
adc
mov
loope
test
insl
int3
mov
outsl
dec
dec
out
pop
aad
loope
lret
pop
repnz
repz
push
pop
or
sub
sub
and
xor
mov
adc
daa
dec
push
cmpl
jg
xchg
imul
daa
sbb
enter
cmc
pusha
cli
lds
cld
int3
push
mov
jp
shll
test
pop
mov
jg
ja
adc
xchg
jle
sbb
jbe
xor
ret
cmp
movzwl
pop
icebp
icebp
mov
cli
gs
imul
xor
pop
mov
call
jb
xor
push
pop
push
out
dec
rorb
aam
inc
adc
push
xlat
fimull
xchg
jnp
fistpll
pop
xor
or
call
adc
cld
mov
test
stc
inc
push
mov
sbb
outsb
push
repz
xorl
lret
dec
repnz
test
xchg
cs
cmpsb
enter
jg
mov
shrb
cmp
xchg
insb
xchg
stos
int3
cmpsl
ljmp
jno
pop
aad
nop
dec
push
pop
dec
push
xor
cmp
pop
and
fst
shr
and
dec
push
aam
sub
xchg
stos
cmp
repz
or
dec
add
scas
leave
xor
cwtl
sub
xchg
push
mov
mov
push
cmpsl
cwtl
mov
jo
pop
cmp
jns
jge
jle
test
inc
testb
sbb
mov
jns
in
jle
pop
inc
shlb
stos
leave
fidivrs
inc
pop
fistps
mov
outsl
jmp
mov
add
adc
jmp
mov
negb
jo
neg
lea
shlb
mov
lods
mov
xchg
fsubrp
in
call
cmp
enter
jae
cmp
push
mov
dec
out
test
popa
iret
mov
into
mov
fs
in
mov
jbe
outsl
mov
idivl
jg
push
pop
fstpl
cwtl
mov
leave
insb
ret
sub
jp
inc
ret
js
sbb
jno
frstor
cmpsl
loopne
jg
jo
data16
and
pop
lds
cwtl
ret
mov
push
into
jmp
inc
aaa
jp
inc
xlat
rorb
mov
shll
adc
mov
fidivl
nop
pop
jp
scas
cmp
jno
fidivl
add
lcall
xchg
mov
push
loopne
add
xchg
fs
outsl
ljmp
arpl
add
lcall
call
aam
mov
sub
jge
in
fs
adc
jmp
pop
ss
sbbb
or
jb
mov
adc
pop
cli
xor
and
and
jp
mov
and
mov
stc
push
jmp
fcmovb
and
push
in
daa
insl
and
mov
mov
push
xor
mov
lock
pushf
sti
and
jo
out
xchg
cwtl
in
xchg
jns
mov
cmpsl
mov
inc
xor
sub
mov
mov
or
test
shrl
push
cmc
dec
mov
loope
dec
lods
popa
adc
xchg
fiadds
xchg
pushf
fs
inc
divb
outsb
loop
sbbl
xchg
jecxz
and
pop
jno
pop
bound
xor
clc
cwtl
inc
fsubrs
bound
movsb
xchg
mov
lods
fldt
pop
xchg
adc
divl
in
mov
mov
jns
mov
xchg
insl
cli
test
mov
cmp
mov
shlb
add
jmp
mov
mull
jl
clc
sub
sub
mov
adc
int
sub
adc
mov
xor
cmpsb
adc
arpl
loopne
mov
negl
sarl
in
int3
call
repz
rcrb
cmpsl
cmpb
cmp
into
pop
inc
ljmp
mov
inc
inc
pop
cmc
jb
or
xchg
in
punpckhbw
mov
ss
pop
and
cs
add
enter
push
shlb
push
pop
jecxz
xchg
cmp
movsb
adc
dec
orb
mov
mov
inc
cmp
pop
inc
cli
in
mov
insb
scas
arpl
inc
jo
jp
pop
fwait
sub
cltd
jne
fstpl
shlb
push
cmc
or
divb
mov
ljmp
std
cmp
and
scas
sbb
rcrl
mov
xorl
shl
mov
dec
clc
xor
sub
ds
xchg
lret
in
into
mov
mov
push
sub
push
cmp
pop
notl
and
cmp
rol
jmp
mov
mov
add
push
arpl
fdivr
inc
cmp
sahf
lods
xor
into
in
mov
xor
cltd
pop
in
and
dec
pop
outsb
push
cmp
mov
sub
mov
fwait
push
pop
cmp
push
mov
cld
ret
clc
fisubs
dec
xchg
popf
mov
mov
lock
clc
repnz
fldt
fwait
push
sbb
mov
cmc
outsb
call
sbb
sub
add
mov
push
lahf
mov
mov
and
out
test
stc
sbb
and
cmp
cmpsl
stc
mov
adc
mov
inc
and
push
sub
nop
insl
xchg
push
adc
xlat
movsb
addr16
pusha
sbb
pop
cmp
out
inc
outsl
mov
mov
xchg
ret
push
clc
xor
dec
adc
xchg
push
je
push
lret
repnz
xor
add
xchg
dec
fisttps
shlb
pop
lahf
push
fs
out
inc
inc
adc
rolb
pusha
cmp
jae
fisubs
mov
inc
sbb
xchg
mov
add
arpl
pop
iret
sub
ret
in
add
sub
movsl
stc
ficoml
test
insb
aam
xchg
femms
repz
cwtl
mov
ret
xlat
dec
nop
pop
push
inc
aam
dec
or
jns
test
test
push
adc
cmp
pop
faddl
add
clc
xchg
hlt
xor
notb
pop
das
jno
inc
lock
loope
shl
sub
cmc
adc
enter
test
jns
test
push
mov
pop
dec
mov
iret
cmp
xor
dec
mov
cli
loop
rclb
xchg
int
mov
insl
test
and
mov
sti
or
pushf
pop
in
jnp
xor
test
cmc
xchg
xchg
pop
inc
test
xchg
fdivrl
jb
or
push
xchg
movsb
mov
scas
nop
pop
aaa
xor
fildll
or
dec
jecxz
dec
cld
je
jge
loopne
adc
outsl
fwait
sarb
cmp
adc
outsb
je
mov
dec
mov
dec
cmc
mov
int3
out
idiv
mov
adc
ret
dec
lcall
cmp
or
cmc
adc
xchg
pop
clc
adcb
xor
mov
sub
adcb
dec
jmp
cwtl
inc
adc
mov
pop
xchg
dec
lcall
mov
xchg
mov
dec
adc
mov
aaa
ss
rcll
cs
mov
mov
ret
push
mov
ja
pop
scas
push
ss
adc
pusha
push
pushf
cli
adc
into
aaa
clc
aas
pop
mov
loope
xchg
mov
fcoml
fistpl
out
mov
pushf
jno
in
inc
les
hlt
lret
les
out
subb
into
gs
jb
mov
add
sti
lret
push
cmp
fsubs
fsubs
mov
mov
pop
sub
lock
mov
xor
jge
cmp
icebp
jmp
xchg
outsl
cld
jne
push
sbb
sahf
movsb
add
push
jo
mov
clc
xorb
test
xor
aaa
out
pop
cmp
rol
or
xchg
cmc
loopne
push
popa
test
mov
adc
push
fwait
or
mov
jns
pop
scas
cmpsl
xchg
icebp
imul
adc
ret
lock
jbe
in
mov
push
outsb
or
in
ss
and
ret
orl
push
stc
cmp
pusha
xchg
mov
js
mov
outsl
inc
mov
dec
sbb
jnp
and
fmuls
in
adc
nop
cmpsb
into
pop
inc
arpl
icebp
movsb
mov
lret
adc
lods
add
sti
add
in
nop
clc
lret
fsubrs
repz
pushf
movsl
and
dec
or
push
into
inc
nop
dec
pop
clc
outsl
cmp
xchg
adc
push
xchg
sub
dec
and
pop
adc
pusha
mov
jae
pop
dec
js
pop
mov
jne
push
pop
pop
pop
inc
mov
add
data16
add
cmpsl
ja
loope
and
stos
scas
insl
push
stos
add
cmp
adc
xor
push
imul
fisttps
and
mov
xor
pop
and
scas
xchg
adc
push
fcompl
hlt
je
push
jno
scas
daa
mov
bound
add
sbb
rolb
push
jbe
movsl
pop
sbb
out
pop
data16
cmp
sbb
bnd
jns
and
fdivrl
sbb
aas
fbstp
out
dec
pop
adc
xchg
arpl
fidivrs
inc
jbe
jne
dec
daa
xlat
mov
imul
out
popf
movsb
pushf
pop
push
jl
scas
mov
setno
sub
mov
sbb
nop
adc
pop
jo
xlat
lods
insb
sub
outsl
inc
xchg
mov
pusha
xor
popf
mov
repz
xchg
aad
sbb
mov
punpckhbw
adc
jl
ret
mov
jb
xchg
gs
icebp
outsb
push
ja
jg
jg
mov
pop
inc
jno
mov
leave
mov
lahf
pop
test
addl
outsb
sahf
xchg
mov
jbe
gs
mov
gs
pop
add
stos
les
popl
mov
in
lcall
je
call
pop
fnstcw
aam
imulb
fdivrs
pop
out
push
push
push
sbb
dec
push
dec
mov
negl
outsb
xor
pop
inc
sbb
das
cmp
fidivrs
out
mov
jmp
testl
es
fidivrs
sbbb
cmp
cmp
aam
mov
std
mov
add
cmp
inc
xlat
mov
sbb
leave
cmp
xchg
ret
int3
daa
sub
pop
iret
xchg
xor
and
push
dec
sbb
xor
movsb
inc
in
adc
jmp
scas
dec
cmp
cmp
lret
pop
pop
push
in
dec
negl
or
inc
jbe
lods
dec
cmpsb
or
int
adc
inc
je
imul
mov
add
mov
call
data16
inc
jo
cwtl
test
jmp
shll
and
inc
or
lahf
ss
jne
sub
cmp
jp
shr
mov
in
outsb
adc
loopne
pusha
cwtl
lods
mov
pop
cld
lahf
gs
std
adc
jo
jge
add
or
add
or
int
or
ljmp
jg
inc
repz
cmp
mov
xor
xor
jbe
pop
cmp
popa
aaa
addr16
addr16
sbb
adc
mov
shrl
in
repz
imull
mov
jp
int
cmpsb
dec
xchg
mov
pusha
shlb
shll
mov
adc
ret
sahf
data16
sbb
int3
pop
aam
sub
sub
or
stc
sbb
stos
pop
mov
mov
ficomps
lods
adcl
push
lret
mov
fadds
jmp
stos
sub
xchg
movsl
mov
in
pop
jns
xor
ljmp
jnp
xor
mov
fistpl
test
mov
push
add
cs
iret
mov
add
fldenv
cmp
cmp
push
aaa
lea
cmp
jne
out
adc
jns
inc
repnz
mov
xchg
mov
js
dec
andb
mov
adc
pop
xchg
and
pop
or
inc
lret
mov
and
stc
pushf
inc
scas
dec
jg
shll
mov
lret
xchg
mov
mov
dec
and
mov
hlt
dec
stc
xchg
or
or
inc
insl
mov
cmp
cmp
lds
jle
ret
pop
push
out
ftst
test
mov
and
repz
test
jmp
jb
sbb
jbe
push
pop
pop
dec
leave
push
add
dec
out
scas
outsb
mov
add
dec
pop
push
xchg
mov
add
mov
ret
loopne
xchg
call
dec
ds
push
mov
mov
out
xor
aam
stos
mov
leave
cmovbe
push
out
mov
dec
push
inc
shll
adc
xor
adc
out
push
push
std
fildll
adc
lds
inc
xchg
mov
rorl
cmp
push
outsb
iret
daa
dec
pop
call
pop
dec
enter
cmp
fwait
xor
xor
les
pop
push
inc
jbe
stc
aaa
inc
std
mov
sarl
mov
push
pop
std
or
inc
test
ds
mov
dec
negl
xor
aas
and
out
inc
jecxz
fwait
push
popf
in
imul
ds
mov
insl
out
mov
imul
lret
mov
xchg
cmp
addr16
cmc
out
bound
pop
data16
cmp
rcrl
test
test
fcmovnbe
insl
push
push
dec
and
sbb
insb
int
test
jae
sub
sub
lcall
outsl
or
aam
add
loope
mov
push
in
pop
xchg
or
sub
adc
das
add
push
movsb
jne
and
push
lock
fdiv
faddl
ljmp
stc
das
je
inc
std
inc
es
popf
sub
ja
in
data16
sbb
sub
shlb
mov
fs
jns
ja
rclb
sbb
sbb
arpl
aam
jl
and
pop
pop
scas
inc
mov
adc
notl
inc
es
mov
outsb
xorl
jnp
push
sub
test
mov
jns
das
xchg
hlt
popf
enter
in
aaa
and
mov
add
enter
stc
in
cmp
scas
aam
nop
xor
mov
rorb
shrb
int
xchg
mov
cmp
jns
inc
pop
inc
mov
lods
pop
mov
or
fdivs
inc
push
jne
adc
scas
sub
add
call
and
inc
sub
sarb
inc
fstpt
cmp
rcrb
cli
addr16
mov
inc
xchg
mov
scas
sahf
mov
inc
mov
shrl
sub
mov
sbb
push
jb
add
loopne
jl
cwtl
add
add
aam
or
push
dec
imul
jno
into
cld
popa
xlat
pop
pop
call
push
jmp
add
push
cmc
jno
mov
add
sub
faddl
lea
daa
pop
mov
push
pop
popf
lea
jns
cmpsb
lea
test
cmp
cwtl
into
test
mov
jb
xor
lods
scas
add
mov
sarb
nop
fsubs
fnstcw
fwait
rcrl
sub
ror
repz
cmp
inc
popf
pop
mov
xlat
adc
test
stos
aad
aas
movsl
mov
popf
sti
sub
cs
mov
jmp
aas
mov
push
and
push
cld
adc
stos
iret
int3
jmp
jg
sub
fdivs
mov
push
adc
lret
daa
in
std
pusha
fdivp
aad
lock
jo
xor
cltd
mov
test
test
clc
cltd
cwtl
dec
dec
shrb
pop
pusha
leave
mov
cmp
ficoms
adc
stc
xchg
inc
ja
out
xor
sbb
out
daa
sub
cli
scas
sub
dec
aam
repnz
lret
gs
lods
icebp
pcmpgtb
cmp
pop
adc
nop
sbb
ljmp
leave
movsb
or
xor
xor
mov
push
movzwl
out
xor
movsl
pusha
aad
mov
cmp
andl
loop
lods
xchg
imul
dec
pop
dec
cmc
mov
and
ret
inc
into
jle
ficoml
xchg
adc
cmp
xchg
mov
sbb
pop
mov
pop
mov
pop
and
xor
aad
jns
cltd
in
inc
shrb
jb
cmp
pop
adc
mov
cmp
call
and
leave
mov
xchg
cmp
sbb
movsl
mov
jne
divb
jb
clc
push
inc
scas
mov
loop
pop
push
pop
or
push
outsl
mov
outsb
inc
aas
mov
filds
and
lods
andl
push
lret
test
ds
and
xchg
xchg
inc
in
cmpsb
xorb
sbb
mov
scas
mov
leave
jp
js
imul
xchg
push
lahf
pop
jnp
cmp
pop
push
aam
dec
push
xor
in
adc
sbb
ja
and
data16
lods
sbb
pop
mov
ljmp
xchg
cmp
sahf
cltd
mov
push
imul
cltd
xchg
add
push
into
cmp
int3
push
lcall
jb
aas
jbe
and
adc
cwtl
lods
jl
lock
data16
in
lret
and
ja
adc
sbb
jno
cmp
imull
mov
imul
mov
lahf
fists
sti
and
or
orb
xchg
push
int3
dec
xor
in
cld
xchg
xorb
and
dec
push
std
cmp
inc
hlt
dec
movsl
sbb
sbb
mov
lret
push
cs
pop
jne
push
mov
jnp
scas
int
fprem1
inc
xor
mov
pop
ret
cld
dec
fs
mov
rcl
mov
dec
aaa
or
xor
ja
cli
aaa
gs
xchg
cmovp
idiv
dec
ficoms
xorb
inc
int3
rolb
repz
pop
xchg
fdivp
repz
or
inc
jnp
imul
lret
mov
in
cltd
addr16
sub
jle
cmpsl
test
push
fimuls
xchg
push
cwtl
test
cmp
or
mov
push
xor
hlt
addb
xlat
addr16
push
jae
cmp
ds
stos
movsb
imul
cli
push
jns
pop
pop
outsl
adc
push
aas
call
xor
mov
mov
mov
sbb
pop
jge
jae
push
cmpsb
jecxz
or
test
inc
jl
pop
mov
add
insl
test
cld
test
pop
addb
push
imul
clc
jne
push
cmp
lcall
lds
jns
adc
sub
out
add
push
movsb
shlb
add
inc
jo
mov
xchg
pop
ss
cmp
in
popf
or
aas
inc
sbb
test
sbb
movsl
repnz
cmp
repnz
clc
xor
xchg
sbb
inc
inc
mov
out
and
out
push
xchg
fldenv
in
lods
inc
rorl
ret
push
mov
cld
loope
mov
push
stc
mov
push
ret
push
insb
push
and
sbb
jp
push
mov
aas
jecxz
or
add
and
outsb
ret
push
pop
dec
stc
push
mov
jae
lods
and
cmpsb
enter
fmull
xchg
in
pop
pushf
lretw
insl
nop
stos
pop
or
lods
mov
inc
out
jl
mov
add
in
call
outsl
jbe
jecxz
imul
add
clc
dec
insl
test
mov
inc
cltd
loop
into
cmp
inc
or
or
and
movl
inc
push
insl
xchg
mov
sbb
out
add
subb
xchg
inc
in
push
lds
repz
test
mov
outsl
fisubrl
cmp
xor
adc
sub
rep
in
jnp
adc
ret
insb
push
scas
inc
fsubl
incl
cmc
push
pop
add
test
pusha
pop
loopne
repnz
ljmp
and
loopne
and
sahf
fmull
jnp
daa
add
jbe
sbb
or
inc
inc
mov
stc
inc
sub
or
cld
pop
xor
mov
stc
sub
mov
push
dec
pop
into
ret
mov
mov
push
sbb
push
dec
jb
or
push
sbb
dec
dec
inc
cmp
xor
mov
mov
clc
dec
pop
in
mov
push
mov
scas
out
sub
push
lahf
jle
icebp
stos
push
mov
and
dec
push
es
push
mov
data16
mov
mov
imul
fsub
sbb
mov
add
clc
inc
cmp
cmpsb
mov
pop
movsb
mov
mov
test
imul
push
jl
mov
insl
and
clc
sbb
inc
push
mov
sub
adc
icebp
cmc
jp
das
pop
fidivs
push
xchg
and
mov
push
ja
xor
pop
cmp
adc
push
arpl
jns,pt
mov
jae
es
lock
jae
cs
mov
jle
ret
leave
mov
imul
mov
cmp
loop
jo
pop
sub
ljmp
adc
mov
xchg
xor
int
mov
inc
add
or
xlat
loopne
push
dec
gs
dec
data16
outsl
push
mov
adcl
inc
scas
fists
cmp
xor
and
jmp
mov
cli
inc
sbb
pop
push
mov
dec
sub
xchg
push
popf
gs
cmpsl
adc
popa
jp
sbb
imul
adc
jl
xchg
push
in
push
jle
ja
je
es
test
and
inc
popf
xor
mov
add
popf
sbb
dec
mov
in
insb
mov
loopne
pop
mov
out
cltd
push
mov
imul
lods
ret
mov
xor
sbb
aaa
testb
mov
push
cltd
push
test
cmp
xchg
movsl
add
ret
dec
mov
xor
lods
out
mov
push
out
inc
and
mov
shl
mov
in
push
addr16
sub
push
sahf
aaa
cld
mov
cmpsb
inc
or
test
test
mov
inc
xchg
dec
hlt
sub
xor
mov
int3
jg
mov
mov
outsl
das
inc
cld
fistpl
inc
adc
add
mov
adc
or
pop
test
test
fcomps
inc
mov
pop
ljmp
ret
pop
cmc
fildll
sarb
pmaddwd
in
xor
rcrl
cmpsb
or
jo
jmp
or
lock
lea
shrl
jno
ret
das
add
cld
pusha
push
dec
fsub
in
enter
andb
jmp
dec
adc
add
sar
mov
sbb
mov
jmp
pushl
daa
adc
cmc
sbb
or
and
iret
xlat
hlt
adcl
ret
jmp
daa
push
jb
hlt
lds
insl
les
inc
push
mov
xchg
enter
inc
loope
je
adc
icebp
dec
dec
xlat
mov
pop
pop
ds
adc
rol
inc
negl
repz
call
mov
mov
mov
neg
sbb
jnp
imul
sub
lahf
test
push
roll
pop
cmp
subl
sub
orl
jno
fwait
aas
js
dec
leave
fnstenv
sar
sahf
or
pop
push
and
xor
insl
adc
ret
xor
sbb
cmp
lret
insb
push
out
fisubrs
pushf
sub
mov
xchg
or
mov
jg
aaa
movl
cmp
cmp
and
cs
mov
sbb
jno
imul
shrb
xor
mov
inc
arpl
pusha
flds
jg
les
pop
sbb
jnp
loopne
lret
xor
mov
lods
and
xchg
lcall
push
in
mov
or
jg
jp
shrb
mov
iret
lea
and
cmovbe
popa
ss
add
aaa
and
dec
jno
add
sbb
loope
gs
xor
frstor
gs
fsubs
movsl
lcall
jl
mov
inc
iret
lahf
dec
adc
mov
or
fldcw
xor
mov
xor
iret
add
pop
push
inc
adc
loope
sbb
out
and
pop
int3
mov
mov
jecxz
sbb
pop
mov
lahf
mov
rcrb
scas
xchg
pop
fstps
sub
inc
sbb
or
js
scas
pusha
in
mov
jnp
xor
cmp
dec
sub
fisubrl
js
jae
jne
pop
lods
dec
leave
sub
bnd
sti
cld
enter
out
sub
cmp
inc
movsb
or
int3
orb
mov
lret
pusha
gs
sbb
cmpsb
fistps
je
and
inc
cltd
shlb
push
or
mov
ja
bound
lret
and
movsl
mov
cmpsl
xchg
insb
jl
or
int
leave
incb
pop
insb
repz
jae
add
jg
push
jmp
push
mov
sbb
cmc
in
mov
push
cs
mov
xchg
xlat
cmc
int
je
and
xor
jno
insb
mov
mov
es
and
xchg
mov
add
dec
cmp
lods
mov
sbb
addr16
inc
lret
or
inc
js
adc
mov
iret
dec
shl
fnstcw
mov
lret
std
sti
lret
sbb
es
dec
push
hlt
mov
mov
es
lret
push
loope
add
push
mov
mov
repnz
or
xrelease
lea
jae
cwtl
fs
add
test
pusha
fs
cmp
cmpsb
out
orl
pushf
ficompl
aam
fdivr
pushf
cld
xchg
push
mov
add
iret
movsb
jmp
sbb
mov
dec
imulb
ret
cmc
das
out
and
aaa
hlt
cmp
pop
or
test
in
ds
pop
cmpsl
dec
andb
fwait
adc
fs
inc
lea
pop
inc
cli
jnp
cmp
lds
mov
cmpsb
divb
xchg
cli
adc
insl
push
dec
aad
mul
push
inc
jne
rep
jne
es
jmp
jmp
stos
inc
adc
push
push
jns
imul
hlt
mov
cmp
push
shrl
jo
aaa
inc
mov
inc
lds
jno
fimull
mov
fildl
and
dec
sbb
pusha
jns
lret
push
pop
js
popf
or
and
rcrl
or
add
call
mov
sbb
inc
xor
sub
mov
mov
mov
inc
loope
ret
fistpll
jge
xor
jae
mov
out
or
stos
xchg
notl
rcll
push
std
mov
incl
pop
sbb
jg
pop
xchg
add
aaa
pop
inc
repnz
pop
fdiv
stc
lds
je
popf
adc
imul
jge
xor
movsb
mov
pop
outsl
lret
dec
inc
pop
pop
adc
cmpsl
lcall
xor
lock
mov
popf
ljmp
xchg
lret
mov
jle
dec
cmpsb
sub
jns
add
adc
adc
arpl
sub
or
dec
mov
insb
sbb
push
sbb
push
adc
stc
imul
stos
cmp
insl
jmp
or
inc
mov
sbb
or
lahf
ret
je
repz
cs
pop
mov
or
pop
push
push
mov
dec
movsb
sbb
leave
loope
adc
or
adc
mov
rorl
pop
fstpl
insb
ljmp
mov
inc
pop
sub
sub
cmp
lret
in
jne
mov
sub
cmp
imul
arpl
pusha
sub
das
sub
add
jmp
jno
lods
pop
or
ja
lahf
cmc
pop
add
fwait
inc
and
int3
gs
cmpsb
sti
stos
inc
out
sub
jnp
fadd
add
mov
popa
rcll
mov
call
ret
es
push
mov
mov
mov
and
mov
push
push
imulb
xor
lret
push
mov
mov
arpl
sbb
jmp
aas
pusha
mov
mov
sbb
pop
push
cli
insl
fstl
daa
inc
pop
test
js
mov
mov
xchg
test
pop
add
jmp
fdivrs
sub
cmp
dec
dec
out
adc
aas
mov
lret
shrb
or
and
mov
add
ljmp
sbb
outsl
test
jno
lcall
cmp
ret
cmpsb
pop
or
in
or
and
outsb
add
pop
dec
jne
jno
mov
dec
push
sahf
jg
dec
ss
add
outsb
clc
jg
push
dec
in
mov
popa
cmp
or
and
aaa
test
sub
pop
mov
aaa
lcall
jne
inc
sub
sub
lods
call
mov
sub
push
outsb
jle
mov
sub
movsb
mov
imul
in
fildll
adc
shr
lea
and
sub
pushf
sahf
jns
inc
mov
inc
ret
lods
int3
shl
pop
sbb
shlb
pop
sub
cmp
or
dec
out
mov
mov
pop
mov
add
pop
addr16
imul
pop
xchg
and
int
pop
add
and
rcll
out
stc
inc
jl
xlat
pusha
decl
cli
inc
sbb
hlt
pop
add
sti
ss
jb
cmp
mov
cmpsb
sbb
pop
inc
je
jbe
dec
xchg
dec
sub
in
iret
and
mov
pop
mov
pop
sbb
push
lcall
pop
pop
popf
imul
stos
jo
insb
cmp
lahf
call
xor
sbb
loopne
aas
xor
inc
jne
lcall
cli
ja
jge
movsl
insl
out
hlt
repz
push
cld
lret
mov
jecxz
push
xlat
rolb
inc
call
and
sub
mov
pop
and
lods
or
dec
mov
mov
stos
dec
lahf
sahf
mov
mov
sub
push
cld
xchg
mov
jno
rolb
repz
pop
sub
stos
neg
xchg
adc
jmp
call
push
sbb
imul
cltd
mov
out
lcall
sub
xchg
mov
int3
ret
pop
fiadds
int
xchg
adc
jge
dec
imul
or
fimull
pop
test
imul
iret
push
imull
jnp
pop
xchg
add
lock
dec
lods
push
ja
dec
or
mov
data16
aad
lea
jnp
mov
popf
leave
jp
pop
mov
mov
cmp
icebp
adc
decb
lea
js
xor
and
push
adc
sti
negb
insb
xor
es
jb
xchg
iret
lea
cmc
add
mov
lret
xchg
fsubrs
cmp
pop
push
out
fucomi
dec
sbb
sbb
jmp
mov
add
xchg
jl
std
icebp
and
dec
sub
iret
cmpsb
and
xchg
bound
xlat
daa
pop
dec
in
push
clc
xchg
jno
sub
add
push
jg
and
iret
jnp
add
cmpsl
lds
sbb
es
jle
mov
repz
fs
or
or
xchg
jl
mov
cwtl
bound
add
aaa
add
aaa
sbb
dec
popa
mov
loopne
lcall
nop
rclb
fs
push
clc
gs
mov
push
dec
or
mov
dec
xchg
out
sub
sahf
inc
in
out
mov
andb
sti
adc
or
mov
in
jge
and
xchg
sub
in
mov
inc
dec
gs
fsub
mov
push
xor
dec
pop
das
daa
sarb
sub
jb
pop
mov
xor
lcall
cs
test
cmpsb
inc
js
xchg
repz
cli
cmp
sti
out
iret
mov
sbb
add
lods
mov
aad
and
jo
cmc
mov
popa
pusha
outsb
cmpsb
out
adc
pushf
push
sub
out
pop
mov
movsb
mov
pop
cmpsb
xchg
pop
das
mov
or
out
sub
sarb
inc
jne
pop
mov
or
mov
cmp
out
loopne
xor
lods
push
jmp
dec
popa
outsl
push
cmp
mov
inc
sbb
orl
dec
mov
inc
jg
pop
add
stos
sbb
cwtl
push
adc
or
insb
shlb
bound
mov
enter
test
adc
sbb
jl
sbb
xor
lods
mov
nop
call
jne
push
xchg
out
rcr
sbb
cmp
imul
sbb
je
pop
ret
mov
ret
aam
cmp
movsl
xchg
shlb
adc
mov
sub
insb
popa
inc
inc
xchg
push
dec
mov
in
ja
xchg
push
test
lret
mov
shll
push
xor
cmp
and
cli
movsb
cmp
mov
push
test
in
dec
ds
cwtl
jno
es
xchg
scas
lods
cmpsb
pop
mov
in
fwait
std
mov
mov
inc
dec
add
daa
sbb
pop
out
daa
loop
jmp
push
loope
das
cltd
add
loopne
stos
fiadds
push
out
adc
sarl
lahf
fldt
pop
out
into
push
les
mov
sbb
hlt
xor
pushf
subl
adc
mov
loop
jecxz
das
push
adc
popa
incl
in
or
sarl
sub
mov
or
sbb
je
ds
stc
idivb
iret
sub
lret
mov
push
js
std
or
pusha
lock
xchg
pop
call
or
or
movsl
add
push
push
mov
dec
fildl
jo
test
popa
and
loope
shl
pop
jne
lock
xchg
sbb
out
movsl
mov
mov
int3
fs
xor
sub
icebp
fdivrs
push
test
mov
sti
xchg
and
sbb
mov
fildl
mov
mov
popf
xchg
dec
mov
js
out
sbb
fsts
fidivl
add
repz
xor
cmpl
sub
nop
xchg
aam
imul
sub
pop
lahf
sbb
jae
mov
lds
adc
xor
inc
sbb
sti
fisubrs
test
pop
or
xor
sub
stc
dec
sbb
cwtl
fidivrl
fsubrs
and
pop
xor
jb
ss
xchg
pop
jge
aad
fmuls
cmp
xchg
sub
and
xchg
jmp
dec
and
jnp
movsb
xor
xlat
inc
jns
add
into
popf
fsubl
push
mov
dec
cmpsl
das
jp
cmp
xor
mov
xchg
adc
js
imul
push
pop
in
and
mov
mov
mov
fwait
and
adc
jno
stos
mov
and
mov
add
mov
dec
fildll
cltd
push
jae
xor
xchg
ret
in
es
add
mov
jle
mov
mov
arpl
loope
xchg
cli
jp
scas
mov
mov
lods
and
xchg
xchg
and
push
out
mov
xor
imul
jb
pushf
inc
mov
xor
test
iret
mov
test
push
scas
iret
xchg
pop
out
cmp
sub
cmp
mov
adcb
inc
xor
fistpl
lods
add
aam
out
notl
rclb
sahf
inc
hlt
pop
daa
push
dec
pop
fstpt
mov
popa
test
cwtl
sub
repz
cmp
cmp
popa
push
jbe
jecxz
fisubs
jae
jmp
cmpsb
jne
jb
test
push
imul
dec
mov
insb
cwtl
aam
cmpsb
shll
mov
pushf
jg
cmpsl
inc
xor
popa
or
cmp
test
xchg
test
ljmp
nop
mov
mov
aam
rcrl
dec
cmp
push
inc
out
push
test
daa
icebp
sar
and
cmp
lcall
xchg
les
inc
adc
cmp
or
bound
sti
pop
enter
loop
xor
arpl
xor
pop
push
mov
jg
enter
xor
push
jns
mov
and
stos
bound
jns
lcall
dec
xor
call
cmp
add
movsb
lock
orl
out
inc
call
aaa
adc
or
fistl
cmpsb
pop
push
mov
nop
test
cmc
call
push
xchg
or
mov
popf
jge
push
out
mov
pop
lock
lods
push
int3
mov
aas
sbb
insb
xorb
and
lods
and
cmp
stos
mov
xor
jge
movsl
ret
adc
loopne
fisubs
pop
test
push
mov
jge
push
shll
pop
mov
mov
mov
sahf
movb
jnp,pn
stos
push
jg
mov
test
sbb
adcb
out
sbb
jl
sub
fcmovnu
ljmp
addr16
and
dec
loop
out
xor
dec
sahf
lods
xor
lods
mov
pop
mov
icebp
int
jg
out
fldt
mov
mov
cmp
xor
push
enter
fdivrs
test
push
in
pop
enter
cmp
pop
loop
pushf
sub
ljmp
roll
mull
jg
aaa
and
and
ret
adc
outsl
fwait
or
xchg
decl
or
ret
cmpsl
pusha
dec
sbb
mov
pop
aad
movsl
sub
push
les
xchg
dec
mov
sbb
adc
adc
lods
push
inc
jnp
pop
or
fstl
je
mov
lea
insb
xor
xlat
or
daa
mov
pop
rcrl
push
vfmsubss
add
push
mov
mov
mov
es
ja
xchg
es
adc
dec
fldenv
xor
adc
jbe
sbb
dec
adc
jmp
dec
rol
leave
mov
hlt
in
lcall
sub
lods
cmp
test
mov
push
sbb
dec
sbb
sysret
icebp
in
int3
mov
shll
imul
sbb
int
inc
lahf
idivb
xor
or
pop
fcomps
jmp
pusha
ret
mov
mov
sarl
xor
jmp
xor
mov
xchg
push
or
mov
pushf
mov
cwtl
add
lods
lahf
cmp
mov
into
push
sahf
cmp
jecxz
mov
xor
adc
divb
les
xor
mov
sti
ret
pop
in
pop
dec
pusha
imul
mov
push
and
fisttps
int3
pop
push
cltd
les
loope
mov
cmp
xchg
jne
or
dec
mov
in
imul
out
xchg
mov
push
inc
xlat
pop
xlat
out
add
imul
pop
jne
imul
push
lock
mov
pop
lret
mov
jne
lds
pop
inc
mov
ret
std
pusha
jp
and
rcl
sub
sub
inc
fsubr
push
fnstenv
add
insb
mov
mov
stos
lods
add
xchg
roll
fbstp
dec
test
test
xor
mov
aas
in
add
mov
mov
js
out
hlt
dec
adc
cli
jl
jge
ror
push
stos
les
cmp
hlt
in
lods
xchg
sbb
mov
aad
out
push
cltd
mov
jge
jne
jno
xor
fdivr
dec
mov
pushf
out
loop
xor
pop
sbb
push
pop
shl
pop
xor
rol
sti
add
mov
cmp
scas
mov
jbe
sbb
pop
jmp
or
push
or
movsl
ljmp
xor
xor
xor
repz
adc
fwait
mov
jne
xchg
in
jns
mov
fstpt
lods
or
mov
dec
test
jnp
in
mov
xor
in
pop
mov
mov
stc
dec
mov
call
cmp
icebp
sti
es
enter
xchg
or
sahf
mov
push
or
mov
lock
fwait
cmp
sub
mov
add
stc
out
and
ja
prefetch
dec
inc
fistpll
add
xchg
inc
insl
lods
ljmp
and
sub
inc
dec
lock
cs
sbb
pop
mov
lcall
clc
das
inc
movb
decl
jl
das
mov
in
pop
fwait
loopne
inc
repnz
jecxz
push
mov
lock
push
fwait
jge
idivl
je
mov
inc
xchg
mov
mov
and
push
in
add
dec
lock
fidivl
into
inc
test
ja
push
adc
stos
das
dec
adc
aas
sbb
push
lods
roll
and
sub
or
dec
addr16
dec
dec
mov
imul
pop
scas
pop
dec
hlt
mov
push
push
sub
xchg
imul
or
or
das
hlt
mov
sbb
mov
test
sti
sbb
xchg
push
mov
test
sbbl
sub
inc
jge
or
shrl
and
jl
shrb
or
add
loop
movsl
dec
divb
pop
pop
inc
mov
repz
pop
cwtl
add
lret
xlat
xchg
ja
insl
pop
cld
pop
fs
jne
mov
arpl
arpl
dec
push
dec
aad
hlt
icebp
push
jae
jns
fcoms
outsl
inc
movb
rcl
iret
cmp
dec
dec
xchg
pusha
mov
icebp
lods
push
pop
imul
adc
into
andl
sub
ret
pushw
rol
mov
das
lcall
jae
jnp
pop
sbb
lret
rcl
xchg
or
and
rolb
shlb
das
add
ljmp
or
mov
lahf
xchg
fnstsw
test
gs
dec
and
hlt
clc
or
aad
jno
xchg
pusha
incb
push
mov
xchg
andb
cmp
cmp
xlat
sbbb
push
pop
push
roll
lods
push
add
mov
jno
lcall
sub
outsl
and
xorl
fwait
sarl
hlt
inc
imul
stc
adc
inc
fldcw
xchg
push
pop
loopne
mov
mov
jg
dec
nop
inc
cmpsl
xor
imul
mov
or
push
inc
aam
bound
xchg
jo
mov
sub
or
cmp
cmc
inc
inc
xor
mov
ljmp
sbb
inc
jns
fdivp
sti
mov
imul
stos
add
adc
xchg
cmpsl
inc
pop
enter
sub
mov
leave
mov
pop
xor
push
in
push
mov
loop
aam
push
lahf
popl
ja
cmpsl
icebp
mov
sub
movsl
or
xchg
dec
mov
push
mov
cmp
call
push
and
int
push
push
jp
gs
enter
ret
xor
cmpsb
das
rcr
cmovo
mov
mov
mov
notl
adc
gs
dec
bound
lods
icebp
addr16
clc
test
pop
mov
adc
call
mov
outsl
scas
test
cli
mov
or
arpl
cmc
sahf
inc
mov
push
mov
cmpsl
cmp
mov
jb
sub
imul
jbe
mov
fbld
icebp
mov
xor
mov
jecxz
jp
ljmp
mov
mov
mov
add
pop
sbb
mull
add
push
mov
repnz
cwtl
insl
cwtl
add
mov
int
cwtl
shl
sub
icebp
mov
push
inc
adc
sar
cwtl
inc
and
mov
sub
cmpsl
lcall
clc
pop
push
hlt
popf
lds
sahf
addr16
jmp
xchg
adc
pop
imul
test
andb
pop
rcr
dec
adc
mov
mov
stos
pushf
arpl
adc
mov
dec
aad
aaa
push
les
cli
stc
push
call
push
pop
xchg
dec
fwait
cmc
sbb
mov
les
std
adc
movsb
push
dec
push
cs
add
inc
jae
pop
adc
icebp
cld
dec
xchg
push
inc
xchg
fs
in
vpsubb
jmp
sahf
adc
or
dec
int3
insb
push
sahf
lret
pop
mov
js
mov
cmp
loop
in
push
adc
xchg
aas
stos
pushf
jecxz
into
inc
sbb
ds
jecxz
ss
sub
or
shl
fimuls
leave
aaa
aam
repz
repnz
and
adc
imul
adc
sub
xchg
mov
sbb
stos
stos
mov
cmp
lock
sub
aaa
mov
dec
rol
nop
mov
imul
push
or
dec
lods
sbb
add
out
nop
sbb
inc
test
push
insl
pusha
fnsave
mov
dec
lods
in
cs
push
pop
subb
fsubl
pop
lds
xchg
push
mov
outsl
mov
pop
cmpsl
call
mov
xor
jp
loope
jg
and
lcall
pop
mov
inc
dec
popa
lea
sbb
xor
pop
sbb
cmp
jecxz
mov
in
lcall
and
pushf
sub
movsl
aad
mov
xor
jmp
push
mov
or
pop
dec
in
mov
cmpsb
lock
jno
jb
jl
fsubp
dec
repz
mov
pop
ret
pushf
xchg
ljmp
pop
lea
cmc
push
dec
jno
dec
bound
arpl
inc
push
push
jb
push
and
adc
pcmpeqb
dec
cs
sbb
cmpsb
push
sub
mov
and
setns
pop
add
fisubrs
insl
stc
je
mov
push
mov
adc
loope
cmc
scas
adc
stos
ret
test
int3
push
xor
pusha
aad
inc
out
mov
cmp
hlt
jl
xor
pop
loop
cmp
pop
jbe
int3
out
jo
add
mov
mov
jle
xchg
push
lret
in
and
mov
xor
js
adc
lds
or
daa
faddl
xchg
fstpt
sbb
mov
jbe
cmp
adc
xchg
add
clc
xor
stc
call
add
dec
sahf
lock
cwtl
imul
adcb
dec
mov
jecxz
test
enter
sub
xor
or
jecxz
xchg
test
mov
sbb
mov
add
jp
mov
jecxz
xchg
mov
rolb
dec
sbb
cmpsl
in
out
cmp
push
mov
popa
notl
movsl
or
push
pop
sub
stc
repz
jmp
dec
xchg
and
cwtl
mov
lcall
mov
mov
sbb
or
cmc
inc
add
lods
outsl
push
dec
outsl
push
inc
or
insl
repnz
mov
lret
sbb
pop
divl
xor
test
mov
ret
in
xchg
movsl
movsb
mov
push
clc
ret
dec
sbb
ds
mov
cmp
cmp
push
jno
aas
daa
cmp
scas
ljmp
in
dec
xorl
int3
cmp
jp
push
scas
add
xchg
xchg
pop
lds
outsl
push
roll
xor
mov
scas
loopne
daa
lret
icebp
push
inc
insl
cwtl
les
lret
push
fwait
or
push
dec
int
ret
xor
or
repnz
pop
or
aaa
adc
mov
push
or
aaa
hlt
xchg
inc
add
pop
cmpsl
jne
mov
jl
bound
xor
lods
xchg
test
stc
scas
int3
xchg
push
mov
aaa
fwait
mov
shl
insb
lea
inc
or
imul
rolb
ja
adc
add
fstpl
rcr
pop
xchg
push
js
or
pop
test
cmpsl
adc
adc
hlt
adc
bound
dec
aad
cld
inc
push
aad
add
jo
sub
mov
les
xor
sub
movb
sahf
cmp
sbb
ret
cmp
cmc
pop
loope
iret
xchg
add
pushf
fucomip
mov
jg
mov
dec
bound
jno
cmc
or
lea
arpl
lock
scas
mov
adc
and
mov
push
rclb
data16
push
aaa
xor
mov
test
add
xchg
mov
lods
enter
pushf
cld
mov
clc
pop
imull
dec
add
movl
std
mov
and
fwait
push
inc
in
je
xor
xchg
ret
cmpsb
fld
fadds
into
push
popa
push
popa
and
test
push
mov
xchg
inc
popa
inc
out
ljmp
aad
mov
mov
repnz
insb
xchg
iret
nop
imul
pushf
mov
loop
and
cmpsb
in
iret
and
into
xor
fists
jp
out
xchg
out
xor
xor
popa
insb
pusha
lea
ljmp
xchg
std
mov
and
ret
fnsave
lcall
jl
pop
and
movsb
mov
and
jo
aad
adc
scas
and
dec
pop
test
or
adc
jbe
xor
test
mov
aas
aam
xor
fidivl
cmc
mov
dec
adcl
je
in
xchg
pop
popf
sbbl
xor
xchg
sbb
in
xor
or
dec
and
pop
mov
cmpsb
negb
lret
mov
idivl
adc
aam
pcmpeqb
pop
lea
dec
pop
push
push
push
mov
fidivl
nop
fdivr
xorl
mov
loope
adc
pop
clc
arpl
cmpsb
xchg
or
xchg
ficoms
scas
loop
iret
int3
das
inc
lds
cwtl
movsl
les
ficoml
cli
pop
insl
xadd
or
cs
mov
sbb
adc
in
push
push
jno
xor
into
das
add
cmp
cs
fnstcw
jl
ljmp
push
jmp
adc
jmp
into
fwait
stos
int3
jge
jb
adc
int3
bsf
pop
inc
push
inc
sub
jb
mov
xchg
jmp
iret
xor
mov
idivb
arpl
add
imul
or
push
scas
fbld
xchg
xchg
cmpsb
pop
xchg
cmpsb
rcr
xchg
jge
xchg
xchg
and
push
mov
out
mov
ljmp
out
lahf
popa
fwait
and
pop
sbb
cli
push
jl
jg
dec
cld
mov
fstps
mov
sbb
mov
jns
mov
sarb
fwait
cmp
outsl
jg
test
adc
cwtl
icebp
int
xchg
cmp
push
pushf
jns
sti
and
lock
leave
adc
jne
stos
push
out
mov
sbb
and
lahf
pusha
pushf
stos
xor
push
xchg
stos
and
mov
mov
or
es
sub
mov
mov
add
sahf
stc
fcomp
push
fsubrl
cmp
cwtl
mov
lea
popf
fsqrt
cld
dec
pop
mov
out
xor
inc
dec
shlb
or
mov
jmp
push
mov
sub
push
jnp,pn
pop
cld
lret
dec
sbb
imul
pushf
outsl
cmovle
push
sbb
mov
dec
mov
mov
add
inc
ffreep
insb
clc
cmp
mov
test
insb
or
notl
dec
decl
ss
mov
inc
pop
lods
cli
fcmovu
cmpsl
fld
push
int
fsubl
insl
jb
in
rclb
jae
xchg
add
shll
mov
into
add
std
insl
fisttps
cwtl
mov
lds
in
lahf
dec
jns
std
fmull
pop
cmp
in
les
scas
xor
add
pop
push
subb
xorb
scas
idivb
out
jae
pop
stc
adc
fwait
push
xor
shrb
inc
insl
pop
mov
mov
lcall
dec
std
test
sti
jno
xlat
in
stc
lods
mov
jo
mov
cmc
dec
fnsave
cmpsb
jp
xchg
int
xchg
mov
loope
loopne
gs
bound
xchg
sub
das
hlt
sbbb
std
xchg
in
sti
lahf
jmp
mov
rcrb
and
addr16
or
adc
jne
jmp
inc
repz
push
push
dec
or
or
fadd
push
push
xor
or
pop
stc
stc
bound
cmc
sti
ss
inc
xlat
scas
mov
js
lret
jo
call
mov
pop
sbb
xchg
mov
mov
mov
jp
sub
pop
jno
xchg
jns
push
jo
cmp
les
push
inc
push
outsl
out
ret
aad
popa
push
mov
xor
xchg
ljmp
in
cmpsb
mov
das
mov
pop
pop
dec
mulb
dec
dec
pushf
dec
jg
leave
test
mov
mov
shrl
nop
subl
pusha
mov
push
add
into
js
sti
jge
mov
lahf
lret
frstor
nop
fdivs
push
sub
aaa
fimull
mov
mov
aam
clc
and
scas
aad
shll
insl
adc
test
stos
pop
aas
sarb
and
nop
cmp
outsl
jae
mov
int
sub
ret
lods
cmpsl
jo
sbb
jno
into
out
mov
sbb
popa
jp
cmp
ja
lea
dec
xorb
inc
jl
out
das
cmp
loopne
je
sahf
shll
aam
xlat
rcr
xor
cs
pop
hlt
dec
xchg
outsl
xchg
adc
adc
fwait
pusha
je
or
mov
push
ret
idivb
out
mov
out
jl
mov
adc
gs
subb
icebp
jmp
lcall
ret
outsb
jnp
imull
lret
ror
pop
shl
into
mov
cmpsl
mov
and
jmp
inc
cld
shll
mov
adc
xchg
ja,pn
xchg
cmpsb
pop
xor
mov
cmp
xchg
jne
and
cmp
adc
adc
nop
jmp
inc
mov
xlat
icebp
pop
add
mov
mov
fcmovbe
arpl
dec
mov
mov
xchg
aad
xlat
sub
xchg
xchg
xchg
or
pop
imul
ja
rclb
sbb
in
jae
cld
inc
enter
jb
scas
dec
mov
ja
sub
jns
lahf
add
push
and
fmull
push
fnstsw
cli
icebp
out
jns
lea
jecxz
cs
outsl
fcoml
stos
aad
pop
xor
repz
test
add
xchg
push
stc
test
push
mov
ljmp
bound
lods
adc
test
or
jo
adc
lods
fbld
ljmp
and
lahf
inc
movsb
repnz
push
leave
dec
jne
inc
xor
cmc
aas
fldcw
jbe
or
push
es
dec
aam
push
jl
xor
enter
lret
cmc
adc
inc
int
in
mov
sbb
mov
mov
aam
add
sub
popf
inc
push
cmp
rcrl
mov
mov
sti
out
xchg
mov
cmp
xor
or
lods
xchg
aas
xchg
and
enter
jle
dec
add
mov
ja
xchg
outsl
mov
fs
xor
push
jmp
nop
mov
fiadds
jbe
cli
adc
ret
test
dec
or
je
out
cmp
nop
mov
jo
insb
mov
jg
je
lods
aaa
mov
das
inc
fcoms
push
cmp
scas
mov
pop
cmp
mov
lcall
in
mov
data16
xor
cltd
mov
mov
add
incb
xchg
sbb
dec
das
stos
pushf
mov
pop
inc
add
mov
ret
sbb
push
xor
roll
push
lds
cmp
adc
jmp
sbbl
ret
ds
insl
lds
jo
jmp
popa
fcmovbe
arpl
pop
pusha
jl
mov
das
cmp
mov
jb
insb
outsl
pop
sub
lock
imul
push
sub
inc
les
ficoms
cmp
add
mov
xchg
cmpsl
into
cwtl
leave
fnstsw
xor
mov
adc
jle
sbb
js
ljmp
push
test
loopne
sbb
test
adc
test
xor
add
rolb
addl
fmuls
data16
mov
jne
jle
lods
jae
iret
mov
daa
dec
fisttps
cmp
mov
and
leave
nop
ljmp
fiaddl
and
mov
mov
jbe
pop
repz
stc
lods
push
sub
ja
jno
push
jge
movsb
push
dec
in
inc
mov
add
sub
arpl
sbb
sbb
in
cwtl
call
pop
enter
pcmpgtw
inc
push
mov
fildll
jnp
or
hlt
jecxz
cs
or
imul
cmp
jge
ljmp
sub
mov
cmc
jecxz
out
mov
lea
mov
ss
xchg
pusha
or
jmp
mov
pushf
popf
or
lcall
popf
pushl
mov
mov
fwait
add
mov
imul
fldcw
ficoml
lret
punpcklwd
xor
imul
mov
rorb
fs
jmp
int3
adc
aam
jge
mov
fwait
test
sub
xor
test
div
call
inc
test
push
fwait
adc
push
shrb
aaa
ret
sub
mov
leave
push
leave
push
mov
sbb
jp
and
and
and
fildl
mov
cmp
adc
aas
mov
lock
add
pop
addr16
and
clc
es
jbe
xor
cmpsl
inc
fsubrs
into
nop
pop
or
jae
int
fsts
cmp
cmp
add
rcrb
jmp
xor
cmp
lahf
inc
lahf
fidivrs
sub
ja
xchg
adcb
push
and
pushf
push
icebp
pop
xor
dec
int
mov
ds
or
mov
cmpsl
lahf
jae
aas
pop
xor
xchg
mov
sub
jnp
jne
call
mov
mov
xor
mov
sbb
test
mov
mov
add
mov
cmc
cmp
fistpll
push
int3
cmp
stos
scas
push
dec
cmp
cmp
add
xchg
xor
sub
xchg
pop
inc
stos
pop
repnz
sub
mov
mov
fidivrs
mov
xchg
mov
jne
popf
push
scas
shll
cmp
adc
movsb
in
push
arpl
dec
sub
jne,pt
inc
rcll
and
jbe
cmp
pop
ret
int
mov
rorl
movsb
es
dec
outsl
in
pop
cmp
in
mov
push
ror
mov
jmp
cmpb
dec
sahf
jnp
repnz
rclb
out
cmpl
ror
push
aam
outsl
idivl
shr
loopne
ds
jmp
xchg
jge
lret
adc
sbb
jno
xchg
sbb
or
cltd
cmp
xor
cmc
sub
jge
int3
aas
xor
jb
adc
mov
bound
sbb
mov
push
jp
adc
ljmp
push
xor
popf
pop
popf
cmp
idivl
mov
cmp
aad
ret
sub
les
jmp
sub
inc
push
jecxz
jae
mov
pop
xchg
push
dec
jnp
adc
mov
push
pop
into
xor
in
and
xor
or
popa
cltd
addr16
mov
xchg
inc
cmp
jns
lods
mov
dec
xchg
icebp
jne
outsl
scas
loope
popf
sbb
out
in
pop
add
mov
xor
dec
in
cltd
mov
mov
daa
std
ljmp
idivl
ret
pop
inc
movsb
or
mov
stos
cmp
dec
sbb
and
shlb
imul
xor
and
jl
frstor
xchg
and
addr16
mov
popf
mov
sub
mov
jge
daa
xchg
or
cmpl
jmp
bound
mov
xor
push
test
or
orl
mov
ret
lret
mov
xor
lahf
fisubl
clc
popa
or
adc
xlat
mov
popa
jns
aaa
ljmp
inc
pop
or
ret
aas
push
lea
push
js
sbb
mov
and
inc
and
xchg
sbb
lcall
jle
nop
popf
inc
pop
mov
int
into
or
add
addr16
fwait
stos
leave
mov
insb
mov
sub
dec
xor
lret
pop
fiaddl
imul
loop
and
jecxz
pop
jae
in
lcall
cli
sti
push
out
push
mov
scas
pop
push
push
dec
lods
into
inc
jns
outsl
int
fldenv
popf
out
mov
and
mov
cmp
push
lds
shl
pop
jo
mov
inc
pop
push
and
lahf
sbb
mov
or
and
sahf
dec
adc
and
cmp
jo
jne
fnstenv
sahf
jne
pop
in
in
jno
loopne
sub
add
sbbb
or
sbb
jae
add
push
sub
lock
jecxz
aad
js
mov
dec
mov
je
lret
adc
jle
dec
mov
popf
add
pop
lock
mov
jge
mov
out
imul
scas
xchg
popa
ret
es
add
dec
loopne
and
or
cld
sub
pop
mov
mov
arpl
dec
pop
enter
mov
jmp
xchg
dec
lret
inc
xchg
sbb
push
addr16
or
nop
ja
lea
cmpsl
cmp
push
inc
xchg
bound
in
inc
push
aas
aaa
mov
cmp
scas
in
ja
fwait
inc
jb
dec
jmp
in
mov
ret
lds
push
pushf
jnp
movsl
and
packuswb
push
and
xchg
add
aam
imul
daa
shll
sbb
cld
xor
and
fbld
mov
jl
xchg
push
int
mov
inc
inc
adc
push
mov
inc
icebp
mov
mov
add
pop
pop
mov
push
xchg
xchg
jle
cmc
dec
out
mov
mov
repz
insl
push
in
jl
int
inc
enter
adc
add
jnp
inc
lods
push
sub
rorl
push
push
ror
cmp
mov
sahf
out
popf
mov
idivb
jl
mov
enter
imul
ja
add
in
cltd
or
add
repnz
sahf
arpl
int
pop
movsl
push
mov
inc
fldenv
push
in
sub
push
mov
mull
adcb
out
mov
pop
daa
rcl
imul
xchg
mov
jno
adc
in
ret
mov
pop
push
arpl
sti
mov
add
jns
adc
pusha
js
jb
xor
pop
mov
sahf
outsl
mov
xor
pop
loopne
push
outsl
sarb
mov
test
xor
popa
jge
out
jecxz
sahf
dec
inc
pushf
popa
repnz
cmp
sti
and
aaa
cmp
loopne
mov
pop
cltd
or
dec
jecxz
outsl
clc
inc
jle
push
inc
cmp
mov
sub
or
lods
stc
cmp
lods
repz
ret
shll
incb
sbb
fcmove
jo
pop
iret
jae
adc
jl
inc
xchg
mov
cmp
jmp
xchg
shll
push
mov
fldcw
pusha
lcall
mov
jl
push
xor
push
adc
push
scas
adc
mov
mov
mov
mov
arpl
jae
jmp
cmc
sbb
xchg
test
xor
ljmp
mov
cmpsl
dec
mov
push
lcall
ret
icebp
imul
andl
push
push
xchg
inc
and
or
lock
fxch
cmpsl
inc
mov
fcmove
cmp
jb
mov
mov
pushf
aaa
ror
out
mov
aaa
ljmp
test
stc
jl
mov
inc
dec
push
sbb
push
icebp
push
sub
adc
ds
lcall
and
into
push
ljmp
stos
insl
sbb
aad
inc
dec
data16
in
lcall
dec
lcall
sub
iret
and
push
mov
icebp
xchg
test
push
pop
daa
sti
lcall
fsubrs
or
adc
in
stos
or
or
xchg
adc
lahf
mov
cmp
iret
pop
add
push
lahf
cmp
add
jb
push
jns
lahf
out
cmpsb
jne
in
sub
or
sbb
dec
jle
and
pop
cli
adcl
xchg
daa
inc
jo
rcll
into
pop
test
cli
mov
test
ja
rclb
jle
pop
dec
es
test
lock
add
lea
xor
test
mov
pop
add
sbb
addr16
in
movl
and
push
pop
rcr
pop
xlat
pop
in
mov
cmp
jbe
hlt
xor
or
leave
xchg
aas
adc
shl
in
cltd
mov
popf
jno
pushf
lea
xchg
enter
sbb
adcb
sub
mov
ficoms
and
nop
mov
mov
ror
clc
cmc
mov
rcll
push
cmp
sbb
push
jae
gs
stos
js
and
xchg
sbb
mov
mov
cli
stos
insl
jne
xor
jle
sub
mov
call
jns
adc
out
sarb
sub
leave
jl
mov
push
sub
call
xor
test
and
inc
lods
push
lfs
adc
pop
cmp
lret
shll
out
mov
into
adc
hlt
or
push
leave
shl
adc
push
test
aaa
mov
mov
inc
stos
sub
arpl
aad
sub
add
jmp
mov
scas
pop
push
pop
mov
xchg
mov
shll
pop
mov
push
xlat
push
nop
push
push
xor
push
cli
es
or
push
movsl
push
ficompl
rcrl
jl
jl
push
call
aad
mov
add
pop
pushf
mov
mov
dec
into
mov
pop
adc
push
cmp
xor
fwait
rorl
pop
jns
fcomps
sub
xor
sub
bound
mov
mov
inc
imul
lret
xor
dec
add
icebp
adc
pop
cwtl
shll
add
mov
jae
aam
std
test
xlat
xchg
jno
pop
negb
insl
icebp
rcrl
jae
loopne
pop
mov
shl
sarb
pusha
lret
adc
sbb
pop
push
mov
rsqrtps
pop
aad
push
adc
fldenv
and
aam
lods
sbb
into
push
iret
not
xchg
ret
mov
mov
pop
cmp
or
nop
negl
add
notl
inc
sar
iret
push
fsubrl
fisttps
cmp
into
sub
nop
lret
clc
fdivrs
cmp
push
mov
pop
mov
insl
rcr
or
fwait
ret
push
in
mov
movsl
cld
sub
inc
mov
mov
or
xchg
mov
cmpsb
xchg
add
mov
aad
popa
sub
nop
and
push
fs
dec
lods
jbe
call
or
inc
int
cmp
icebp
push
jmp
mov
sub
adc
jmp
pop
add
rolb
xlat
jno
sub
and
fisttpll
xchg
mov
mov
pop
xor
ror
jne
sarl
hlt
sub
push
dec
jg
aas
mov
push
mov
aaa
pushf
test
shll
imul
push
jl
dec
mov
pop
adc
movl
xor
cmp
in
push
xor
cwtl
popf
adc
test
push
repnz
inc
lea
hlt
push
xchg
adc
fstl
lret
loopne
or
mov
xor
ljmp
sub
mov
pushf
cmc
dec
sub
loopne
inc
or
scas
pop
push
shl
popa
mov
ja
repnz
adc
push
xor
cli
jbe
jne
in
fildll
ss
jp
insl
sbb
adc
pop
jne
xchg
mov
loope
push
daa
stc
gs
popf
jo
and
into
maskmovq
testl
xchg
fwait
xchg
xchg
add
ds
shlb
rol
sbb
or
or
cmp
jnp
inc
push
ret
pop
nop
or
sahf
fsubr
push
stos
test
movsb
fbld
cmc
out
jbe
jg
lock
mov
clc
inc
sbb
mov
adc
add
fisttpl
cld
outsl
inc
jp
adc
popa
mov
push
orb
cld
cmpsb
jl
decl
bound
cmp
jp
popf
or
sbb
pop
outsb
test
add
aaa
hlt
scas
pop
pop
lret
loope
lcall
cmpsb
jecxz
xor
push
std
ljmp
push
bound
sub
mov
dec
frstor
in
aam
xor
fnstenv
test
cmp
es
xor
inc
mov
stos
aam
xchg
xor
sti
mov
xor
cmp
loop
ds
aaa
or
cli
pop
rcll
mov
jp
pop
ret
int
mov
dec
xchg
cmpsl
inc
scas
popf
pop
pushf
and
or
mov
pop
dec
cli
inc
and
mov
cmp
sub
jp
mov
aaa
rcrb
mov
gs
scas
mov
sbb
xor
les
inc
dec
mov
xor
aam
mov
lea
lahf
mov
lcall
andl
mov
movsb
and
add
cwtl
stos
hlt
cmpsb
ss
cs
jnp
sbb
lret
dec
fimull
jl
fmul
sti
mov
es
inc
aas
xchg
jmp
dec
sub
cmc
jnp
push
xchg
inc
imul
lods
cwtl
orb
or
shll
out
dec
push
cmp
mov
enter
jp
inc
je
jge
dec
xchg
mov
mov
xchg
in
jmp
pop
push
sub
sti
fisubs
stc
mov
lds
test
je
movsl
es
and
push
pop
and
jecxz
ljmp
ret
jo
pushl
adc
mov
dec
adc
in
cltd
out
ljmp
push
sbb
sbb
loop
dec
adc
cmp
and
cmpsl
push
fmuls
loope
jbe
jl
stos
imul
inc
imul
adc
and
pavgb
mov
cmp
mov
push
mov
jg
outsb
xchg
mov
add
call
mov
push
dec
bnd
add
xchg
aaa
sbb
xor
out
xor
add
dec
dec
inc
push
ja
std
jne
movsl
sbb
outsb
leave
aas
lcall
cmc
push
mov
adc
clc
out
adc
or
mov
ds
xchg
or
shl
pusha
outsb
adc
enter
pop
add
xchg
push
jp
xchg
push
xorl
aas
mov
inc
lcall
sbbb
inc
mov
mov
pushf
call
pushf
outsb
pop
push
mov
mov
sahf
fisubrs
pop
negl
andl
dec
jns
fdivl
pop
xor
sti
adc
jl
sbb
jl
fcoml
mov
cmp
xor
dec
mov
out
insb
das
inc
mov
out
ss
and
inc
cs
int
aas
aas
out
xchg
loop
fwait
add
mov
dec
imul
xchg
lock
xor
in
shl
gs
sbb
and
and
and
aam
jmp
fisubl
push
pop
jecxz
push
add
leave
ljmp
mov
xchg
push
movsb
mov
pusha
sbb
push
mov
decl
pop
xchg
add
jae
test
jns
pop
pop
jge
xchg
orb
jp
gs
sub
in
gs
add
sub
cld
inc
cmp
lret
sti
and
or
mov
pop
jecxz
dec
add
ret
sarl
xchg
cmp
repz
xchg
adc
dec
push
lcall
fisttps
push
cli
mov
sbb
ret
shrl
sub
push
addb
movsl
stos
push
sbb
mov
add
or
dec
xchg
cmp
gs
xor
mov
and
orl
fmull
push
dec
mov
lret
stos
pop
cmp
aam
std
xchg
movsb
jno
xlat
int
mov
push
std
or
xor
jp
cltd
push
sub
dec
adc
ret
test
repnz
andb
pop
aad
push
test
movsb
decl
lds
jae
jl
cmp
mov
xor
lds
iret
roll
movsb
scas
sbb
sub
lcall
lcall
sti
std
cmpl
shlb
rcrb
sti
pop
jo
and
sahf
call
xchg
sbb
test
clc
loopne
out
mov
mov
mov
imul
das
dec
xchg
push
xor
iret
pop
stos
push
ror
fsubs
iret
loopne
add
repnz
fcmovu
mov
fsincos
vdivps
mov
dec
sub
stos
and
xchg
mov
cmp
mov
push
xchg
xor
adc
pop
mov
inc
pusha
aad
push
cs
push
add
fsubrl
adc
idivb
sbb
fmuls
loope
aad
xchg
ds
in
into
pop
je
lahf
mov
leave
pop
mov
int
sub
cwtl
jbe
je
ja
imulb
scas
imul
add
add
jne
pop
neg
cltd
add
sti
dec
or
in
adcl
and
sub
xor
or
cwtl
ret
xor
sbb
outsb
and
mov
push
lret
sub
xor
inc
out
pop
jne
xchg
mov
mov
push
scas
mov
lahf
mov
enter
les
mov
inc
or
push
and
pop
inc
lahf
pop
jbe
push
xchg
stc
mov
or
lock
ss
notl
sbb
dec
add
adc
fnstcw
mul
lea
dec
mov
ud2
je
cld
cmp
mov
popa
dec
dec
lods
iret
ja
jb
movsl
out
pop
inc
outsl
pop
fwait
mov
js
mov
sub
imul
sbb
add
in
and
xor
cld
out
push
cmp
dec
loop
negb
cmp
ja
inc
je
bound
jecxz
jecxz
and
cmpsb
out
inc
push
daa
in
pushf
or
sub
inc
jae
push
mov
icebp
xor
fiadds
xlat
dec
xorb
sub
mov
inc
test
mov
ds
push
lea
sbb
or
xchg
push
and
cmp
or
outsb
data16
xor
movsb
xchg
or
xor
cmp
jns
test
adc
cmpsl
adc
push
adc
sbb
cmp
or
jae
lock
mov
sar
xor
cld
push
test
xor
mov
pop
push
push
xor
pop
jno
repz
xchg
inc
pop
adc
push
cli
dec
shll
lea
dec
and
lods
xchg
cmp
sbb
cs
test
xchg
cmpsl
inc
xor
mov
jge
push
ret
jmp
into
or
je
adc
out
aad
mov
pop
sub
pop
mov
lock
fs
xchg
mov
mov
inc
repz
mov
stc
outsl
jo
mov
dec
push
jno
testb
ss
inc
ds
out
popf
dec
lret
and
pop
mov
and
rclb
mov
mov
push
int3
stos
lods
bswap
sub
leave
xor
fnsave
sbb
dec
pop
out
mov
push
popf
cmp
push
jb
xchg
jg
pop
or
mov
mov
xor
movsb
cmp
mov
xchg
mov
stos
jnp
movsl
jbe
adc
shlb
fmull
gs
sbb
or
rcll
xchg
ss
lcall
insb
mov
jns
cmp
add
lea
push
sub
push
cld
bound
sbb
dec
aas
test
clc
cs
and
xorl
inc
shll
popf
add
imul
int3
mov
ljmp
sub
cmp
sub
dec
outsl
pop
rorl
sub
dec
fnstenv
ss
in
and
xlat
mov
pop
fcmovnb
out
cmp
outsb
sbb
jnp
mov
xchg
out
das
outsl
aaa
outsb
inc
sub
call
stos
pop
rorb
sbb
ljmp
jmp
jmp
gs
cmp
cmpsl
jecxz
orl
lds
push
xor
adc
ficomps
push
cld
loope
jmp
xchg
arpl
out
fisttpl
sub
in
insl
ljmp
fists
push
sub
push
jmp
add
xor
jae
mov
lret
rorl
or
shl
fwait
mov
cmp
mov
xor
cmp
pusha
movsl
cwtl
in
mov
daa
cmpsl
jno
inc
ret
push
mov
test
sub
mov
xor
negl
aas
test
cmp
popf
orl
xchg
add
icebp
adc
test
cmpl
push
pop
and
movl
aad
dec
es
dec
mov
xorl
data16
je
and
fwait
scas
addr16
addl
inc
pop
mov
js
jnp
in
and
push
aad
test
enter
push
incb
jno
add
add
mov
or
xlat
js
mov
dec
cmpb
sub
dec
jecxz
or
roll
sub
call
jl
mov
jl
into
je
adc
push
adc
gs
fisttps
arpl
arpl
push
js
sub
xor
pop
xor
fwait
test
sub
rorb
std
fucom
divb
shr
dec
nop
js
movsl
xlat
call
aad
out
ror
popf
pop
int3
add
and
scas
xor
fidivrs
pop
dec
imul
adc
adc
js
sbb
pop
push
repnz
or
icebp
fldt
test
test
add
jbe
cmp
dec
jb
xor
addr16
jecxz
sbb
popa
inc
fs
mov
cmc
or
mov
xor
lods
cli
sub
mulb
xchg
cmpsb
adc
or
dec
or
lcall
sub
mov
cmp
lea
push
nop
push
test
dec
es
xchg
xlat
call
mov
xor
push
mov
in
and
aas
mov
js
jp
mov
sbb
and
test
dec
aaa
dec
fxtract
pusha
inc
fistpl
or
xor
sub
push
pop
push
inc
mov
xorl
test
mov
inc
addr16
das
sbb
cli
push
push
testl
cmp
jp
sub
ss
adc
push
pusha
lock
mov
lods
inc
cmp
xchg
sbb
xor
shlb
loope
in
jl
pop
pop
fisubrs
sti
sub
push
cmp
daa
jmp
jo
dec
mov
sbb
mov
fwait
cwtl
cmpsb
lret
pop
mov
dec
in
fwait
in
push
lods
frstor
popa
cmp
or
cmc
inc
fstpt
and
and
dec
int
movsl
test
mov
outsl
adc
jp
pushf
rcl
sub
cmp
data16
xchg
push
aas
mov
ret
inc
fiadds
pop
xor
jnp
pop
mov
in
loopne
add
pop
nop
cli
in
aas
out
dec
adc
es
nop
lahf
xchg
sbb
adc
cmp
sub
fcomi
cmc
pop
insl
imul
mov
cs
xor
xchg
repz
dec
orl
pop
mov
fstpt
repnz
jmp
aas
stos
pop
jmp
lret
jbe
cmp
data16
les
test
sbb
jmp
jmp
pusha
jno
shrb
dec
pop
and
sbb
dec
mov
hlt
sub
in
aad
xlat
mov
push
mov
mov
xchg
int
jns
out
or
addr16
cli
mov
mov
xor
cltd
cmp
dec
loope
das
cmp
in
arpl
xlat
clc
push
pop
cltd
mov
sbb
icebp
dec
add
gs
lea
adc
in
pop
mov
lods
mov
dec
xchg
cmc
cwtl
dec
test
xchg
sbb
push
xor
movsb
out
call
adc
jecxz
je
loopne
xchg
daa
dec
ja
xchg
pop
loope
push
inc
xchg
ljmp
or
movsl
mov
es
nop
fsubr
std
mov
clc
outsb
pusha
fisubs
or
inc
ror
int
arpl
sti
test
mov
movsl
std
pop
xchg
sub
mov
and
in
fwait
out
out
or
cltd
pop
scas
in
sbb
inc
push
lods
sub
or
pop
dec
cmp
xor
mov
scas
inc
repnz
sub
inc
iret
ja
or
pop
jnp
sbb
or
cltd
movsl
fsts
aas
adc
xchg
push
and
fisttpl
xor
ret
push
sub
adc
sarb
repnz
sbbl
mov
sbb
pop
gs
insl
sar
xor
das
add
sub
lea
or
jo
xchg
adc
fs
std
aad
pop
pushf
push
jae
clc
add
mov
xchg
loopne
cs
jnp
pop
adc
mov
ja
push
fadds
fdivrs
nop
xchg
xor
cmp
push
xchg
xchg
xor
mov
or
push
aaa
xchg
jbe
sub
repz
pop
fdivr
stos
dec
push
pop
dec
sbb
xor
mov
daa
sbb
adc
mov
mov
das
test
call
xchg
testl
aaa
subb
jp
inc
xchg
mov
int
into
jno
mov
jmp
pop
push
mov
xchg
or
xchg
pop
jle
cli
inc
call
cmp
mov
loope
inc
pop
sbb
lods
scas
mov
inc
mov
popf
cmp
mov
fsubrs
shlb
ljmp
jae
loope
mov
shl
cmp
pop
aam
add
insl
and
inc
cmpsl
sbbl
cmp
stc
pushf
jg
in
test
out
iret
jno
mov
ror
or
add
mov
pop
pop
push
dec
leave
adc
pushf
dec
int3
and
mov
out
lret
pop
pop
xchg
sbb
mov
addr16
sub
xlat
flds
scas
jl
push
xchg
sbb
push
lea
mov
dec
inc
dec
adc
aad
pusha
int
mov
adc
or
mov
push
sub
shlb
gs
or
push
out
fsubrs
in
and
leave
mov
adc
sub
lods
push
mov
sub
xchg
cmpsb
xchg
roll
shrl
dec
test
sti
or
cmp
loop
ftst
pop
jg
cmp
jl
push
test
mov
int
mov
mov
shld
jle
sbb
dec
jp
push
iret
xor
stos
dec
sbb
xchg
daa
sti
jmp
rolb
add
push
xor
add
cmp
les
test
fldt
je
pop
inc
push
shll
or
sbb
and
mov
lods
pop
hlt
sbb
ror
sti
or
iret
mov
out
dec
int3
pop
cmpsb
adc
xor
jg
push
xor
or
out
xlat
adc
pop
inc
pop
sub
fistps
movsl
jecxz
lock
inc
addr16
jne
cmp
cmpsb
mov
fwait
cmpsl
inc
rol
clc
ret
cmpsl
dec
cwtl
movsl
das
xchg
lcall
stc
aam
test
dec
pop
sbb
std
fisttps
es
add
push
bound
test
xchg
lds
add
push
aas
std
jo
pop
lret
xchg
cltd
jg
aad
xchg
test
insb
jnp
inc
push
inc
xchg
in
pop
pop
xor
cmp
shlb
data16
dec
cs
push
xchg
repnz
push
rorb
cmp
lret
in
jne
jmp
push
dec
sub
mov
mov
jno
pop
xlat
adc
add
rorb
sub
rcrb
dec
cmpb
loop
cmp
sbb
mov
jbe
push
pop
push
es
adc
nop
fnstsw
int3
add
ss
leave
cltd
xor
mov
ret
add
xchg
test
ror
add
sbb
scas
popa
scas
pop
mov
add
das
das
push
out
loopne
or
add
pushf
cmpsb
cmp
lods
mov
imull
push
rcll
pop
ljmp
lret
int
sub
loope
lcall
ss
int
movsb
sbb
jg
add
cmp
pop
ror
in
inc
fcmovu
shl
pop
clc
jne
or
or
mov
gs
cs
ss
fsubrs
rorl
stc
sahf
pop
popf
jnp
ss
sub
aam
xchg
jle
lret
push
insl
rolb
or
xor
add
out
test
push
or
je
sbb
add
loop
cmp
jo
or
sub
cwtl
jle
xlat
adc
int3
mov
cmp
imul
inc
dec
pop
cmp
jecxz
mov
int3
mov
adcl
cmpsb
imul
outsl
adc
cmp
mov
push
xchg
xor
mov
int3
ret
cmpps
movsb
inc
xchg
andl
and
into
clc
sti
aad
push
fwait
test
sbb
bound
jecxz
ss
imul
outsb
imul
call
pop
cmp
ja
or
inc
push
outsl
cmp
cmpsl
lock
inc
lcall
das
cs
iret
lea
dec
mov
jnp
jl
sub
mov
movsl
or
lea
fnstsw
mov
lahf
scas
inc
rcrl
lret
xchg
rorl
cmp
inc
push
or
lods
mov
sub
mov
pop
mov
lahf
add
aam
sub
sub
jae
mov
das
stos
lock
ret
add
or
dec
mov
xorb
mov
lcall
add
insl
lret
jecxz
mov
insl
xchg
aas
inc
int3
mov
repnz
repnz
lea
repz
add
test
jmp
adc
call
in
mov
fnstsw
clc
xlat
jo
mov
cld
cmc
jno
and
imul
pusha
jmp
andl
das
sub
in
dec
xchg
inc
xchg
test
subl
daa
jmp
fildll
push
push
mov
cmpsl
jle
pop
cmp
inc
idivb
ljmp
repnz
jne
mov
mov
and
cmp
fbld
adc
add
pop
pop
add
shlb
test
adc
fsubrp
push
stos
xchg
movsb
sbb
pop
sub
inc
test
pop
xchg
inc
sbb
or
arpl
cmc
fstps
jge
fistpll
dec
nop
dec
loope
mov
push
jg
inc
mov
fstps
stos
lods
sub
ret
mov
mov
adc
sbb
in
push
jg
scas
ja
test
inc
xchg
stos
or
fcompl
xchg
jmp
out
jmp
popa
mov
pop
jle
dec
add
mov
jae
fdivl
sbb
enter
pop
mov
mov
fwait
lret
rcrb
fisubrs
xchg
mov
stc
arpl
or
push
divl
sbb
push
sbb
mul
outsl
adc
cmp
test
mov
fcompl
mov
and
call
repz
in
and
movsb
xor
nop
fisttps
sub
arpl
scas
mov
xchg
sbb
shl
push
mov
aaa
sub
inc
mov
cli
cmp
mov
mov
enter
scas
mov
loop
jg
adc
or
xchg
shlb
sbb
pop
iret
dec
push
inc
inc
push
mov
or
xor
dec
xchg
and
pop
add
cmp
lock
movsl
mov
or
mov
test
mov
push
xchg
add
rolb
in
xchg
mov
pusha
outsl
in
scas
sbb
jmp
pop
jmp
ljmp
inc
pop
jbe
leave
dec
mov
xchg
aas
pop
mov
in
dec
ret
out
push
jnp
sti
enter
xlat
test
pop
cmp
sarl
ss
mov
ja
push
test
lock
pop
stos
mov
je
mov
sub
sub
lret
loop
pop
out
dec
insl
and
mov
out
pop
mov
jle
popa
call
fstl
xlat
cmp
ret
lock
sbb
mov
inc
int
sbbl
pop
iret
jne
sub
adc
sbb
xor
xor
int
and
ss
mov
outsl
mov
sbb
lcall
add
loope
or
adc
pop
mov
and
loopne
imul
cmpsl
ret
inc
outsb
add
sbb
inc
daa
mov
cmc
lods
pop
jle
dec
mov
rcrb
bound
xor
adc
daa
and
fwait
or
add
xchg
neg
sarb
in
dec
pusha
mov
out
adc
sub
out
cmpsl
cld
mov
icebp
inc
cmpb
rorb
hlt
hlt
pop
dec
mov
leave
hlt
add
mov
mov
fwait
sbb
cwtl
xor
pop
pop
loopne
mov
mov
cltd
xor
inc
pop
sti
mov
icebp
mov
rorl
into
fdivs
inc
pop
fldenv
out
or
pop
add
mov
nop
arpl
xchg
push
cs
cmp
imul
push
push
or
loope
scas
and
mov
pop
fsubl
out
daa
sbb
and
bound
cmpsl
inc
adc
stc
inc
jp
inc
shl
and
cmpsl
out
mov
andl
jle
push
subl
nop
mov
mov
jno
and
arpl
out
scas
test
mov
lock
xchg
lret
pop
mov
cmp
lret
cmpsb
cltd
psrlq
mov
inc
xchg
fsubs
add
mov
insb
sbbl
mov
cmp
subb
mov
jnp
repnz
js
xor
testl
fnsave
mov
aaa
xchg
add
icebp
adc
add
movsl
or
jecxz
fsubrs
ljmp
sub
xchg
sbb
mov
jo
repnz
or
xchg
mov
test
fidivrl
ret
xor
dec
mov
cmpsl
push
popa
je
pushf
dec
xchg
mov
rclb
data16
or
sarb
fldl
or
mov
mov
out
and
in
pop
lock
ja
push
int
pop
mov
push
loopne
lahf
inc
jp
xchg
xchg
ret
mov
pop
shrb
cs
and
lods
and
std
jnp
mov
xchg
decb
imul
adc
jl
aaa
movl
jae
ficompl
jecxz
pusha
xchg
adc
dec
sub
loope
scas
push
xor
stc
cmp
mov
xchg
pop
adc
mov
repz
inc
cmp
scas
icebp
jp
pop
in
cs
out
inc
movsb
pop
out
scas
mov
fcompl
sti
cld
xor
jle
scas
and
cwtl
mov
xchg
dec
lds
inc
or
dec
and
imull
imul
hlt
pop
pushf
or
jbe
mov
inc
stc
notl
les
dec
and
jb
cli
inc
cltd
popf
lcall
scas
dec
xor
mov
mov
cmp
dec
and
inc
sbb
inc
fsubl
sbb
inc
add
ljmp
mov
jg
int3
mov
push
test
mov
xchg
leave
or
lret
and
mov
adc
test
cmp
inc
or
pop
sar
inc
mov
repnz
lods
push
sti
in
jb
push
sbb
or
jge
cs
xor
mov
jg
fsub
mov
and
xchg
pop
cmp
es
shl
addr16
jge
sub
jl
scas
mov
or
cmp
adc
subb
repz
push
gs
jb
loope
xchg
sub
shl
inc
enter
sahf
nop
je
lea
scas
xor
cltd
sahf
aaa
mov
int3
test
dec
jo
insl
lahf
stc
pop
mov
testl
imul
mov
lcall
aaa
mov
cltd
inc
addb
push
into
testb
test
fs
jl
and
lock
cmpsl
imul
rcrb
rcrl
cmp
mov
pop
call
push
sub
inc
cmp
push
mov
fsub
mov
jne
fcomip
loope
sbb
add
inc
mov
xlat
push
inc
mov
pushf
loope
or
test
adc
cmpsl
pop
popf
cmpsl
mov
mov
and
in
fs
adc
loope
negl
cmp
jle
repnz
lcall
cmp
aas
and
clc
iret
xchg
scas
mov
push
shlb
gs
or
xchg
pop
cltd
push
mov
lods
xchg
dec
aas
adc
mov
xor
xor
lock
add
mov
mov
push
push
push
popf
lds
pop
lock
addr16
dec
scas
lcall
les
mov
lcall
adc
addr16
cmp
out
cmc
pop
pusha
enter
loopne
dec
out
mov
sti
sahf
cwtl
movsb
jb
hlt
rclb
and
pop
shrl
testb
push
in
or
daa
xor
sbb
sub
loop
and
loope
or
nop
shl
lock
cld
sub
lcall
ret
and
into
jbe
xchg
mov
outsl
pop
mov
jge
and
push
movsl
fidivrl
ds
jmp
xchg
int3
lea
xor
jae
inc
out
and
aas
xor
mov
std
insb
jmp
pop
sbb
adc
imul
pop
xchg
repnz
or
iret
add
push
outsb
jns
fdivr
mov
and
dec
jg
and
mov
push
subb
or
sbb
out
push
push
xlat
imul
pop
add
xor
push
int3
cli
sub
pop
inc
rclb
cmpsl
mov
sbb
dec
inc
and
pop
and
outsl
cld
dec
cld
push
add
clc
mov
dec
fcmove
and
inc
pop
mov
mov
and
and
ja
lds
add
xor
lahf
sub
roll
lret
mov
in
aad
lock
mov
repz
out
dec
orl
xchg
hlt
push
ss
mov
bound
bound
dec
ror
fcmovnbe
cltd
fs
aam
test
fisubrl
push
es
fisttps
imul
ljmp
fwait
ret
xor
lcall
mov
push
add
pop
pop
nop
shr
jno
xor
data16
fldl
scas
outsb
jb
push
popf
enter
negl
jne
pop
push
out
xchg
mov
ljmp
and
push
inc
test
push
mov
adc
push
cmp
frstor
je
rcl
dec
pop
mov
jb
in
fiaddl
xor
in
sub
xor
ljmp
dec
test
in
iret
lods
mov
lcall
mov
inc
and
inc
outsb
mov
and
push
cmp
dec
mov
psrlw
or
and
pop
adc
jne
jbe
test
mov
dec
es
or
aas
sti
cltd
push
inc
icebp
cld
xchg
mov
lahf
push
decb
xchg
std
xchg
testl
stos
mov
sub
orb
les
mov
aas
dec
sub
dec
lock
mov
int
mov
xchg
cmp
push
cmc
fdivs
pop
das
fsts
cmp
sbbb
cli
add
into
xchg
ljmp
or
or
lcall
xchg
mov
lock
sarl
xor
push
lea
popf
int3
push
xchg
into
adc
shrl
jns
xlat
js
push
pop
push
fnstcw
pop
call
mov
add
pop
jae
jo
xchg
int
test
xchg
pushf
rolb
dec
inc
push
ds
call
dec
xchg
and
xor
insl
add
arpl
int
or
loope
pop
xchg
ret
sub
mov
and
push
xlat
lods
out
mov
sub
push
xor
mov
pop
stc
push
push
enter
rol
sub
std
dec
push
ja
fmul
mov
add
nop
adc
mov
xchg
aaa
imul
sar
xchg
ret
int3
scas
jp
outsb
addr16
cld
aam
fwait
pusha
xor
es
pop
jecxz
fidivrs
lds
jnp
cmp
stos
mov
mov
fdiv
aas
clc
sbb
ds
repz
mov
adc
ret
fwait
mov
jne
ljmp
out
pop
test
xchg
decl
sub
inc
mov
and
xchg
bnd
cmp
or
fmull
cmp
test
and
repz
enter
mov
pushf
sub
mov
adc
add
or
add
test
stc
xchg
inc
addl
test
mov
fcomi
sti
les
mov
sbb
insl
decb
jns
out
sub
xor
xchg
sbb
fldcw
mov
add
or
sub
and
int
pop
pop
inc
mov
outsb
insb
sub
loop
sub
dec
fs
pop
aam
adcb
mov
pop
mov
clc
ja
outsb
pushf
cmp
arpl
lock
pop
jbe,pn
add
jae
xlat
cltd
aad
rorb
out
adc
xor
mov
inc
out
xchg
les
add
ss
or
xchg
ffree
jl
push
cmpsb
fsubrp
or
out
leave
int
xchg
jle
lds
mov
cmp
cltd
out
movsl
jp
cmpsb
icebp
adc
imul
xor
fs
out
xchg
inc
fimuls
les
mov
mov
sbb
xlat
stos
roll
add
aaa
rcrl
adc
mov
pop
insl
xor
sarb
je
sbbb
leave
sbb
into
arpl
fmuls
inc
mov
jb
stc
js
scas
sbb
divb
sti
xlat
pop
cmp
cli
and
dec
push
fwait
shlb
pusha
daa
jle
idivl
cli
pop
fidivs
scas
fbld
lock
mov
addr16
mov
shrb
cmp
shl
loope
dec
push
xor
fsubs
scas
in
add
loopne
pushf
mov
add
sub
pushl
out
stos
dec
mov
insl
sbb
test
sub
inc
loope
mov
arpl
addl
pop
fidivl
loop
mov
imul
std
jno
out
dec
cmp
es
movsl
bound
push
mov
mov
and
cmpsb
inc
mov
inc
jg
sbb
repnz
lea
fstpt
insl
nop
ljmp
mov
test
shrb
xlat
sarl
push
imul
pop
leave
cs
xor
cs
rcrb
mov
sbb
cmp
or
push
xor
adc
aaa
pop
push
sub
push
out
adc
and
fldt
push
mov
jbe
mov
pusha
repnz
mov
loope
or
push
and
dec
mov
and
repnz
insl
adc
shrb
dec
pop
jns
jne
xorl
pop
sub
pop
lret
xchg
xchg
mov
cmp
je
mov
out
divl
ss
jle
lods
mov
or
mov
icebp
cmp
enter
popa
je
dec
add
inc
ret
xchg
sub
leave
ret
and
sbb
stos
addr16
ds
cmp
push
adc
hlt
xor
enter
mov
inc
sbbb
jl
pushf
mov
stc
lods
dec
xor
dec
gs
mov
dec
mov
adc
pop
jge
mulb
ljmp
int
mov
inc
gs
xchg
xchg
fcmovu
insb
in
insl
pop
sahf
mov
repz
adc
sub
pop
xchg
cmpsb
fcomps
xor
flds
jl
inc
pop
loope
js
imul
mov
clc
std
jp
pop
cwtl
sbb
outsl
sub
outsb
in
fidivl
add
fprem1
int
dec
push
xchg
sbb
scas
andl
rolb
int3
cmp
jl
and
cli
jnp
and
jbe
fists
test
mov
rol
dec
cltd
fwait
movl
lods
js
in
jne
mov
push
out
mov
xlat
push
cld
jne
fucomp
jb
sti
add
pop
push
sub
test
sbb
mov
popa
jo
in
sub
mov
addr16
add
arpl
aad
lret
xor
adc
jo
adcb
lea
mov
mov
cmpsl
out
xor
test
lods
push
movsl
cs
xchg
jl
or
out
das
pop
sbb
lahf
sub
jg,pn
xchg
out
hlt
and
push
mov
cmp
xchg
or
xor
cmp
dec
scas
push
sahf
frstor
jns
sahf
mov
iret
cmp
lock
repz
sub
mov
daa
mov
call
dec
ret
mov
outsb
xchg
idivb
and
mov
mov
shlb
outsl
movsl
mov
push
cmpsb
add
inc
ret
add
lahf
or
jb
pushf
jbe
or
aad
jl
add
fistl
lahf
cld
jae
pushf
mov
xor
cwtl
outsl
test
xor
shll
push
pop
inc
mov
testb
jl
testb
repz
insl
scas
pop
xchg
int3
mov
push
mov
pop
mov
pop
inc
adc
push
jle
push
push
rcrl
cmp
jae
mov
xor
loop
imul
gs
out
add
xchg
stc
mov
lods
mov
pop
in
or
dec
and
add
fistps
push
xchg
fists
test
or
push
or
mov
movsb
out
rorl
pop
mov
aam
and
mov
cmp
xchg
push
or
add
and
popf
cmp
add
push
fcom
mov
or
jg
lret
int3
cmc
add
call
mov
jmp
and
out
mov
or
out
iret
add
mov
insl
outsl
xor
jp
hlt
rcr
sbb
mov
cmp
push
pop
cltd
test
mov
out
popf
ret
cmpsl
pop
pop
xor
dec
std
jl
popa
sbb
sti
mov
add
clc
mov
sub
enter
icebp
pop
idivb
icebp
lahf
aas
lods
xlat
or
das
add
pop
ds
pop
out
jmp
sahf
shld
mov
cmp
lret
or
jno
xor
mov
clc
add
lahf
rorb
dec
add
xchg
cli
rolb
xchg
adc
rolb
mov
jmp
or
mov
sub
stc
dec
out
mov
or
out
xor
insb
xor
adc
sub
pop
sbb
std
out
push
sub
pushf
leave
xchg
push
add
and
jb
gs
inc
mov
adc
adc
mov
stc
inc
mov
sub
and
lret
jae
xchg
jle
cmp
gs
sbb
dec
sti
jns
mull
cmpl
or
inc
daa
aaa
sahf
jg
aas
cmp
loope
pop
jb
nop
scas
jno
mov
out
scas
sbb
leave
xor
add
pop
mov
xor
into
xchg
mov
mov
sbb
push
fdivs
aad
ja
mov
and
mov
test
adc
adc
mov
add
outsl
clc
aam
test
test
test
or
in
out
pushf
and
sbb
pop
push
lret
adcl
addr16
decl
data16
repz
mov
loop
cmp
jg
dec
and
rorb
hlt
rolb
mov
cmp
out
mov
fwait
push
imul
dec
adc
cmp
add
loopne
push
outsb
xchg
in
xor
ljmp
pop
cmp
les
cmp
dec
xchg
xchg
push
mov
or
pop
dec
bound
or
sbb
incl
orl
jnp
clc
mov
cmc
sub
shlb
nop
mov
mov
mov
mov
mov
inc
mov
cmpsb
in
sarl
and
pushf
aas
cld
sub
and
mov
and
xor
lahf
into
xchg
xchg
dec
push
xor
pop
mov
rclb
sarb
int
adc
add
adc
in
fcmovb
leave
push
sbb
push
push
adc
nop
jns
ljmp
lahf
dec
add
imul
xchg
mov
out
sbb
gs
lcall
fldcw
mov
cmp
sbb
add
jmp
or
cmp
int3
push
jo
or
aam
test
in
je
sbb
sbb
push
cwtl
mov
push
jp
clc
sbb
dec
rolb
lahf
gs
imul
dec
lock
xlat
xorl
xchg
sbb
jb
jle
or
test
popf
xchg
cmc
push
sbb
mov
pop
cmp
xchg
out
xchg
fstpl
inc
or
inc
into
sub
push
mov
ret
scas
iret
pop
cmpsb
inc
and
repnz
jo
insb
into
sti
xchg
int3
xchg
stos
inc
cld
mov
sbb
insl
sub
pop
push
push
push
nop
roll
aad
scas
or
pop
cmp
movsb
stos
lret
enter
jmp
add
push
mov
in
jnp
sti
push
and
shrl
xchg
and
ret
cmp
test
ds
pop
jb
sbb
adc
into
xor
shll
sbbl
jb
mov
mov
sbb
fdivp
jo
sbb
aad
push
or
orl
add
lahf
sub
fstpl
into
jnp
mov
inc
aad
test
dec
and
inc
icebp
mov
ljmp
xchg
jecxz
mov
mov
es
clc
sahf
inc
add
imul
and
dec
fcoml
xchg
xor
pusha
push
or
and
leave
test
lret
cmpsl
mov
nop
push
sti
mov
cmc
fmulp
mov
lods
inc
sub
je
push
ds
cmp
int3
xchg
sub
mov
xor
decb
mov
push
jne
push
nop
xchg
add
adc
and
scas
dec
lods
xor
dec
lea
les
out
adc
adc
pop
jno
ret
sbb
pop
sbb
cwtl
push
mov
xorb
sub
mov
xchg
adc
xchg
mov
xchg
mov
in
aam
push
loopne
mov
frstor
add
ds
sub
sub
cwtl
xchg
bound
repnz
out
and
inc
xor
imul
in
pop
shrl
cmp
imul
xchg
xlat
stos
not
mov
xchg
loop
shl
adc
outsb
xor
into
out
fsubs
movsb
jp
subl
push
mov
push
jg
mov
add
jae
adc
push
lret
cmpsl
nop
ja
in
lods
call
test
lock
and
inc
jns
aaa
dec
and
or
icebp
jnp
fidivl
add
fdivs
push
inc
sbb
jae
out
aaa
sbbb
pop
iret
rcll
pushf
lods
ret
iret
cmpsb
sub
scas
in
rol
outsl
shlb
xor
std
mov
das
xlat
sub
int3
pop
push
and
rorl
xor
pop
lret
inc
jg
cmp
mov
mov
or
xchg
cmp
lret
mov
jg
lcall
push
loope
movsb
cmp
adc
rcrb
mov
pop
movsb
pop
cmp
jecxz
jecxz
in
add
mov
cmp
scas
call
in
sti
dec
sub
in
bnd
adc
mov
bound
popa
imul
sub
xor
jne
jg
inc
fildl
xchg
xor
and
adc
add
dec
mov
mov
mov
inc
ficoml
mov
add
cmc
movsb
or
repnz
mov
fisubl
call
dec
and
fidivl
insb
in
dec
mov
push
sub
xor
or
out
ret
or
or
stos
or
les
jg
adc
int
cwtl
popa
dec
xchg
fdivrp
xchg
gs
xor
jo
test
pop
xlat
xchg
push
rcrl
lret
xlat
ljmp
sub
pop
loope
cmp
nop
stos
push
cld
enter
sbbb
jbe
mov
ret
out
leave
jmp
into
aas
aaa
and
add
dec
push
in
cmc
into
insl
test
fsubrl
flds
sub
iret
jg
push
mov
dec
jno
cmp
mov
sub
xor
cwtl
or
add
push
loop
mov
cmpsl
lds
sarl
jp
orl
jnp
mov
leave
mov
addr16
ret
nop
pop
sbb
rdpmc
into
push
test
push
ja
cltd
aam
xchg
nop
mov
cwtl
dec
ret
dec
insb
out
adcl
test
stc
add
cmp
shrl
stos
sub
xor
or
cld
mov
roll
arpl
mov
cltd
scas
xchg
jns
xchg
xor
test
nop
xor
push
fwait
mov
pop
adc
lcall
dec
ret
mov
jnp
add
or
jno
stc
or
pop
pop
outsl
imul
stos
into
push
jo
xor
jge
and
mov
push
jns
or
cmp
adc
out
jge
lock
mov
jle
loope
push
rclb
dec
adc
sbb
inc
divb
inc
fld
xor
fsubp
sahf
in
je
cli
pop
and
mov
clc
and
pop
dec
scas
sub
inc
repz
daa
adc
in
jne
aam
xor
lea
dec
sbb
insl
inc
aam
inc
pop
movsb
mov
dec
lahf
in
clc
sbb
add
push
push
sti
je
pop
mov
jle
scas
add
bswap
dec
inc
stc
imul
pop
mov
das
sti
push
inc
push
inc
xlat
push
mov
cwtl
bound
mov
dec
repnz
cmp
pop
cmp
xor
mov
sbb
mov
mov
aad
mov
cmp
fstpl
sbb
or
sbb
adc
inc
aad
mov
push
inc
add
out
pop
pushw
cli
cmp
loope
push
xchg
int
stos
rclb
xor
cs
jecxz
icebp
push
scas
mov
popa
ret
popa
jle
ja
sub
popf
int
sub
imul
imul
inc
mov
testl
push
jle
mov
cmpsb
and
out
jb
mov
sub
out
jl
bound
js
jb
cmp
or
nop
negb
xchg
mov
sbb
adc
or
cs
repz
mov
mov
aas
adc
jnp
xchg
in
add
mov
aad
or
js
mov
movsl
sub
pop
and
loop
dec
mov
test
out
sub
aaa
inc
add
loope
leave
push
and
ss
les
pop
push
cmp
lahf
jo
push
jge
scas
subl
fwait
jnp
xor
or
negb
jle
push
pop
xchg
jp
inc
outsb
mov
dec
mov
or
lods
ljmp
mov
mov
fdivrl
push
mov
sbb
in
dec
idivl
lcall
aaa
mov
fldt
fistpl
sbb
cmp
dec
lcall
xor
test
stos
xor
insl
cmp
addr16
mov
mov
fldl
outsl
ja
sub
icebp
mov
mov
out
stos
dec
pop
xorl
mov
mov
mov
xchg
lret
jb
in
xor
cwtl
scas
xor
loope
sub
mov
sbb
push
pushw
mov
stc
jnp
push
jb
in
loopne
and
push
cld
mov
dec
pop
outsl
rcrb
jle
ja
jle
js
push
pop
stos
xchg
es
cmp
mov
aaa
mov
rcrb
lahf
sti
sbb
cmp
mov
pop
fucomi
loopne
in
in
push
mov
call
dec
pop
mov
add
ds
in
xchg
pushw
pop
testl
stos
lea
mov
xlat
push
sbb
pop
pop
repz
mov
faddl
add
int
and
mull
lods
icebp
aas
dec
mov
cli
ficoml
popf
add
rorl
in
inc
cmp
xor
out
or
xor
movsl
jb
ss
into
mov
fs
icebp
sbb
mov
and
mov
sbb
gs
les
fs
out
dec
jns
jmp
dec
cli
push
and
jb
or
out
pop
and
sahf
or
pop
pop
sub
xor
push
sbb
and
cs
lock
push
pop
dec
daa
inc
and
or
pusha
inc
dec
cmp
inc
pop
pusha
cmp
addr16
in
inc
and
push
outsl
dec
test
cltd
int
out
lcall
mov
sbb
inc
xor
xchg
push
mov
fwait
sbb
jmp
fidivrs
pop
das
jl
inc
popa
pop
add
pushf
mov
cmp
cmp
adc
mov
cmp
pop
mov
push
jns
xorb
pop
pop
rcll
cmp
fmull
repz
outsb
pusha
xor
in
push
and
jbe
mov
mov
mov
iret
insl
call
stc
fisubs
mov
cmp
lea
jo
mov
push
fistps
jns
out
sbb
push
pop
sub
adc
ret
dec
mov
out
imul
lcall
xchg
adc
cmpsl
leave
sbb
cmc
jb
inc
push
lds
ror
push
out
jmp
sbb
dec
arpl
cmp
loope
add
mov
out
mov
push
test
add
fcomp
dec
dec
mov
pop
or
enter
or
sub
lds
iret
fldenv
fs
sub
cmp
lods
dec
cmp
test
lock
out
cmpsb
inc
jne
jmp
stos
and
jle
push
cmp
out
ret
lret
sahf
out
inc
das
ret
mov
sahf
in
and
fnsave
pop
orl
sub
outsl
bound
hlt
xor
imul
rorl
adc
stos
arpl
aaa
sahf
das
scas
jl
or
fwait
sub
add
jns
pop
enter
rcrb
mov
fcoms
ret
xchg
mov
les
dec
pop
sbb
mov
sbbb
ret
push
int3
inc
aam
cmpsb
test
cld
mov
iret
daa
or
inc
cli
push
nop
sub
nop
sbb
dec
bound
fisttps
and
mov
popf
fistpll
mov
mov
int3
xor
cltd
inc
loopne
cmp
cmp
leave
call
rolb
loop
mov
mov
std
lea
mov
or
jecxz
leave
imul
sbb
aad
adc
push
es
out
or
fsts
sub
lret
pop
xchg
sbb
inc
pop
xlat
sub
test
jp
cmc
aad
add
mov
cmp
inc
push
adc
loope
adc
adc
mov
mov
rcrb
xorl
movsb
xor
pushl
mulb
sahf
or
subl
std
lret
push
jle
mov
pop
and
outsl
imul
subb
dec
lret
push
fwait
orl
sbb
popf
push
lock
aad
aam
ret
mov
jbe
inc
mov
es
bound
in
push
mov
bswap
fptan
cwtl
cwtl
mov
sub
mov
xor
mov
mov
adc
vcvttsd2si
pop
dec
inc
and
xorl
lods
mov
fwait
fwait
mov
xlat
nop
or
pop
and
pop
inc
mov
push
sub
in
roll
xchg
les
cmp
cmpsl
fisubl
dec
int
das
pop
xor
ret
leave
andl
jle
mov
push
imul
cmpsl
push
dec
call
xlat
rcll
cmc
jmp
lret
push
mov
outsb
sub
shrb
into
dec
in
sub
gs
mov
xor
mov
cmpsl
cmp
repnz
fiaddl
cltd
dec
pop
cwtl
movsb
pop
push
cmp
jp
dec
into
xor
mov
bound
jo
or
scas
pop
mov
roll
xor
lea
mov
mov
addr16
adc
jmp
inc
fwait
dec
bound
mov
cli
cltd
sbb
jne
xchg
pop
inc
in
mov
mov
xor
movsl
lret
or
xchg
sub
push
std
xchg
call
gs
lods
xchg
push
imul
pop
dec
jb
adc
sbb
sub
aaa
xor
shll
dec
call
lds
mov
lcall
mov
and
out
dec
cmp
int3
movsl
xor
addr16
jp
xor
mov
incb
dec
repz
mov
dec
jo
pop
inc
fstl
jmp
xor
adc
rorb
leave
lret
aaa
push
xor
in
cld
shll
movsl
add
or
ss
xor
sbb
out
int3
enter
mov
shl
mov
shlb
ss
int
fmuls
lods
fldenv
scas
mov
repz
jae
jne
popf
adc
int
mov
es
dec
mov
cmp
cmp
scas
lods
clc
pop
repz
jl
xor
fsts
pop
adc
enter
xorl
enter
push
scas
adc
xchg
sbb
bound
scas
lcall
cmc
inc
push
mov
sub
mov
call
loop
test
aad
dec
lret
mov
push
adc
inc
popf
mov
mov
pop
cltd
ja
nop
jg
sbb
enter
sub
push
inc
aas
pop
sub
dec
and
pop
or
sub
out
push
mov
xor
add
lahf
stos
jae
cmp
jno
xchg
outsl
or
aaa
scas
ror
movsl
xor
xor
sbb
into
cwtl
push
nop
jns
push
pop
fdivrs
xchg
cmpsb
out
jmp
push
dec
dec
cld
fidivrl
lods
dec
mov
cmp
sarb
imul
shlb
pop
pop
xor
dec
push
xor
push
aad
ds
jle
in
aad
sub
rorl
and
outsl
sbb
ja
xor
pop
pop
sar
jae
cmp
sbb
jmp
xchg
hlt
xor
insl
mov
pusha
insb
xchg
pop
xchg
call
xor
sbb
cld
orl
xor
ficoml
lods
rcrl
rcr
ds
cmp
scas
inc
ss
fldl
imul
xor
xchg
mov
lock
push
adc
ljmp
rorb
jae
jo
cld
icebp
pop
aam
cmpsb
fnsave
sub
test
fisubs
or
icebp
push
mov
dec
jno
mov
xor
ret
or
jecxz
push
inc
jne
jg
push
mull
shrl
testb
xchg
sbb
rorb
mov
xchg
lock
scas
xor
pop
xor
pop
pop
insl
sbb
repz
fs
sub
leave
mov
jo
mov
data16
out
mov
sbb
cmp
pop
cmp
mov
pop
loopne
mov
xor
jg
pop
push
dec
dec
ss
pop
jns
mov
push
lea
movl
mov
or
push
out
mov
aas
pop
inc
lret
int
fdivrs
das
nop
lret
call
lahf
insb
imul
nop
and
mov
and
jno
adc
inc
add
push
dec
add
pushf
cmp
adc
mov
push
lret
xor
shl
sbb
adc
lods
aas
orb
imul
add
sub
jns
dec
jecxz
jp
sti
mov
or
ret
subl
es
and
or
inc
int
sub
or
jmp
cli
push
fabs
shlb
adc
roll
out
sbb
js
sti
stos
push
cmp
jae
dec
xchg
sub
imul
lods
inc
sub
cmpsl
popf
out
dec
les
scas
add
xlat
mov
imul
aas
insl
sbb
dec
or
outsl
xor
shll
dec
inc
pop
repz
jnp
and
jo
adc
popa
imul
mov
mov
adc
jp
loopne
jmp
mov
mov
pop
jmp
and
mov
jecxz
pop
push
rolb
mov
lret
inc
mov
lret
add
loopne
iret
std
lods
cmp
add
lods
or
dec
data16
lock
aad
xlat
pushf
mov
repnz
fucom
and
ss
pushf
arpl
and
lods
daa
dec
jns
inc
pop
push
mov
rcr
ret
or
fidivrs
ljmp
xchg
ds
lahf
or
adc
sub
or
push
in
leave
inc
clc
fs
sahf
push
push
jl
aaa
out
xchg
push
mull
add
fbld
cmp
cmp
and
dec
es
lcall
sub
and
cltd
jo
cmp
in
and
roll
dec
sub
sbb
cli
mov
fs
popa
mov
out
aaa
jle
clc
and
fwait
and
sbb
mov
sub
cwtl
ja
jmp
mov
adc
mov
daa
cld
stc
call
int3
lods
mov
fstpt
pop
jnp
nop
sub
or
mov
cli
mov
stc
jae
push
aaa
loopne
call
and
sbb
insb
cli
push
jb
xchg
mov
je
cmp
mov
jne
sbb
fistps
sbb
lock
cld
test
mov
pop
pop
scas
mov
mov
pop
cmp
andb
loopne
nop
mov
xor
pop
mov
adc
mov
fidivrs
fwait
stos
pop
in
adcb
cmp
xchg
jp
xor
or
xchg
push
mov
inc
cmp
cld
push
dec
pop
data16
inc
imul
bound
xor
mov
stos
push
pop
inc
sub
mov
lahf
fs
in
cld
inc
mov
xchg
mov
cmpsl
in
rclb
mov
inc
movsb
jno
cli
dec
push
pop
imul
inc
mov
rcrb
gs
or
loop
nop
in
sarl
adcl
movsb
mov
pop
sbb
jb
loopne
and
xchg
stc
xchg
divl
test
sub
jecxz
roll
mov
jge
jns
fstps
stos
aas
popa
pop
jmp
insb
mov
iret
dec
or
and
inc
cmp
mov
and
movsb
in
cs
push
adc
cltd
shll
xchg
jmp
pop
out
adc
push
je
mov
lods
xchg
cmp
mov
in
test
iret
scas
xchg
decb
js
out
hlt
les
xchg
push
inc
std
jecxz
faddl
or
inc
daa
stos
mov
into
clc
jb
cmpsl
pushf
mov
jbe
push
push
mov
add
xorb
pop
pop
inc
loope
sub
out
mov
jmp
push
in
loope
call
rolb
iret
andb
jl
add
add
icebp
es
lcall
mov
add
dec
fwait
inc
pop
push
sbb
pop
fldt
subb
dec
test
pop
xchg
mov
sbb
jbe
or
pop
jns
lret
sbb
movsb
loop
testl
ja
mov
outsl
push
fnstcw
dec
sub
lcall
mov
jp
dec
dec
cwtl
cmp
add
cmp
iret
mov
sbb
jo
push
sarb
cmpsb
in
cmp
out
xor
lea
pop
lea
sbb
sub
adc
jb
add
popa
ficoms
sbb
cli
subb
pop
nop
shrl
or
sbb
pop
mov
inc
scas
push
cmc
push
mov
loop
sti
lea
sbb
mov
jne
lret
jae
push
mov
int
xor
jbe
pop
cmpb
mov
inc
loop
popf
adc
xlat
pop
sbb
pop
int
pop
mov
scas
and
lds
sub
ss
lea
inc
repz
mov
fcompl
jnp
outsl
pop
sbb
and
hlt
aaa
pop
mov
incl
pop
shlb
push
inc
arpl
cmp
sbb
sbb
xchg
dec
jge
adc
nop
jl
xchg
loopne
cwtl
dec
lahf
pusha
shl
adc
jo
push
fstl
ror
mov
lea
mov
pop
std
fisubrl
jecxz
out
lret
lret
cwtl
add
mov
mov
sbb
jg
std
pop
pop
scas
xchg
jns
movsl
icebp
enter
test
cld
cmp
inc
jno
scas
cltd
bound
mov
or
ret
sbb
and
xchg
addr16
push
dec
pushf
loopne
ss
or
xorb
xchg
jae
sub
fcoms
int
aas
dec
lods
bound
add
loopne
pop
and
ja
xorl
loopne
dec
int
xor
dec
cmp
push
mov
pop
lds
nop
jle
sbb
outsl
loop
in
rorl
mov
and
or
mov
cmp
mov
cmp
out
sub
sub
jmp
jl
js
xchg
loop
push
xchg
shll
pop
popf
loope
mov
jl
sbb
mov
sub
outsl
ficompl
push
push
pop
ds
cmpsl
fldcw
lcall
mov
pop
mov
pop
cli
jb
bound
sbb
imulb
xor
je
ficoms
arpl
mov
cmp
std
dec
sahf
or
loop
clc
aad
cmpb
xchg
roll
stos
fistl
call
jbe
pop
push
sarb
dec
aas
aaa
jae
popa
sub
es
sbb
push
inc
add
addb
mov
lods
add
or
int
pop
pop
jae
mov
in
pop
stos
jmp
adc
and
iret
mov
out
and
insb
nop
fwait
mov
xchg
push
or
mov
mov
lret
fnsave
in
mov
add
leave
pop
fsubrl
add
rorl
inc
shrb
or
mov
or
stc
pop
mov
enter
aad
xchg
leave
loopnew
push
push
scas
inc
adc
xchg
ljmp
or
subb
mov
pop
aas
pop
xor
lahf
scas
mov
sub
popa
lds
lods
sbb
pop
cmpsb
jmp
push
xchg
aad
fdiv
xchg
test
fnstcw
jge
and
sbb
fbstp
lea
pop
xchg
adc
gs
jo
lods
gs
inc
cmp
test
das
loopne
xor
in
sub
popa
and
in
cld
lods
jge
xor
fs
ja
mov
scas
or
std
mov
popf
sub
cmc
add
jg
adc
popf
mov
mov
add
and
or
loopne
lds
mov
lret
jae
xchg
lea
sbb
sbb
xchg
cmpsl
xlat
xor
test
jne
sahf
aas
fldcw
addb
cmc
cmp
xor
and
inc
add
dec
aas
mov
add
std
add
lret
scas
xchg
imul
push
adc
xor
cmc
jg
ds
push
negl
add
leave
sub
add
leave
sub
adc
pop
shrb
xchg
xor
outsl
addr16
decl
dec
ja
inc
xchg
imul
adc
cmp
xorl
xor
mov
div
cmp
idivb
jmp
dec
jl
mov
mov
add
ret
push
and
stc
xchg
out
push
jbe
out
inc
clc
jp
pusha
push
in
nop
pop
mov
jo
sub
je
loopne
mov
dec
push
sbb
stos
dec
lret
mov
mov
das
jl
mov
dec
or
xor
xchg
xor
test
test
pop
mov
xchg
je
inc
mov
or
loop
mov
dec
mov
mov
repnz
rcl
xchg
fidivrl
and
add
xchg
xchg
pop
mov
pop
test
adc
push
out
out
lahf
pop
nop
lahf
fucomi
scas
je
inc
imul
and
pop
pop
mov
icebp
xchg
xorl
jb
cmp
fmuls
jo
insl
cli
movsb
cltd
notl
sahf
adc
dec
xchg
inc
mull
push
ja
cli
ficoms
insb
mov
testb
aaa
in
movsb
arpl
xchg
jo
jecxz
loopne
mov
jmp
shll
xor
jno
mov
jge
adc
lods
jae
data16
jge
addb
in
dec
loopne
mov
aad
addr16
jge
pop
add
or
ss
test
push
mov
imul
push
sbb
test
idivb
mov
lcall
pop
int3
cld
fistl
fiadds
rcll
sub
jmp
jmp
cwtl
push
xor
sub
lock
jae
les
jns
pop
sub
scas
xchg
lods
pushf
push
sbb
mov
cmpsb
daa
aaa
cmc
sub
xchg
cmpsb
imul
es
and
jns
cmp
pushf
mov
cltd
adc
not
ljmp
std
xchg
inc
adc
shrl
jns
dec
xchg
fnsave
repz
jae
and
loop
sub
aam
in
repnz
loope
jne
fs
mov
adc
jmp
or
cmpsb
dec
pop
adc
dec
xchg
pop
enter
test
push
dec
negl
xchg
aaa
cmp
jns
sub
jg
cmp
fstps
ljmp
rolb
mov
lcall
xchg
add
sti
pop
sub
daa
mov
cld
inc
mov
mov
xchg
das
aas
or
mov
div
push
cmp
cmp
lods
mov
push
test
inc
sub
inc
fsub
hlt
repz
jo
lcall
pop
sub
les
fimuls
and
sbb
adc
lods
int
mov
movsb
xor
flds
lret
lcall
xchg
xchg
sahf
sti
lret
mov
lods
mov
das
lcall
cltd
pop
cmp
stos
into
xchg
xor
mov
sbbb
dec
pusha
lock
mov
push
movb
outsb
loop
add
mov
mov
sub
dec
mov
and
adc
lds
lods
enter
cmp
mov
jmp
ljmp
adc
pusha
shl
sbb
xchg
sar
adc
add
xchg
mov
push
xchg
mov
nop
sbb
dec
inc
add
mov
lret
jecxz
das
xor
sbb
or
or
xchg
fimull
lea
mov
xor
and
cmpsb
or
jl
mov
xorl
dec
lret
or
sub
add
pop
bound
push
push
push
mov
cmp
xchg
mov
dec
add
jl
xchg
in
jno
sub
in
push
mov
pop
std
fstps
enter
sbb
cli
aaa
mov
inc
fbstp
iret
lods
xlat
stos
sbb
jg
xor
mov
push
je
sbbb
lgs
xchg
addr16
xor
dec
or
aad
dec
int3
ja
sbb
aas
cmp
loope
push
pop
and
sti
sub
lret
dec
fstl
dec
popf
rcl
jbe
movsb
call
push
push
push
jo
out
mov
fnstcw
int
das
or
mov
pop
cmpsb
sub
aas
fiadds
cmp
ja
xor
imul
inc
xor
stos
clc
sbb
mov
pushf
pop
or
loopne
insb
mov
fdivrl
xchg
cmp
cs
cli
dec
popf
or
push
or
mov
or
in
adc
fildl
call
out
sub
outsb
in
pusha
insl
mov
inc
aas
mov
mov
jp
pop
push
cli
xor
stos
jge
out
in
lahf
mov
in
jo
xor
jnp
xlat
mov
pop
in
enter
push
loope
scas
sbb
out
dec
mov
arpl
dec
mov
jo
lock
sub
push
mov
sbbb
lahf
mov
inc
daa
jg
push
imul
imul
pop
cmp
out
popf
cmp
add
clc
js
mov
push
pushf
push
mov
inc
adcb
std
xor
jecxz
clc
add
pop
xchg
mov
adc
xchg
sub
rcr
clc
and
xor
scas
push
dec
cmpsb
sbb
cltd
jmp
push
dec
pop
popa
mov
xor
in
mov
adc
sub
pop
repnz
mov
adc
and
pop
out
movsb
lret
jb
mov
adc
adc
into
stc
add
dec
sbb
jb
bound
jbe
jbe
sub
aaa
mov
call
jmp
jnp
jle
sahf
cmp
ret
cmp
lods
ficompl
and
cmpsl
lods
outsb
repz
adc
sub
push
imul
stos
sub
nop
xor
pop
pusha
stc
adc
ja
mov
inc
mov
xchg
gs
pop
pop
inc
fstpl
xchg
test
pop
pop
lret
jmp
fmul
xor
inc
addr16
repz
sub
fldl
rclb
ds
sub
scas
cmp
pop
imull
sbbb
pop
test
lock
fbld
jmp
stos
mov
push
pop
inc
and
iret
sti
xor
lret
data16
ret
pop
mov
mov
sub
fnstenv
mov
pause
stos
aas
cs
or
imulb
or
sti
shrb
or
inc
insb
xchg
mov
cwtl
lods
cmpsb
mov
sarb
pop
in
leave
cli
subb
dec
das
or
push
cmc
push
or
cwtl
jo
sub
sub
or
dec
xor
cmpsb
xchg
in
push
int3
mov
xchg
xor
jp
add
push
push
inc
pop
cmp
cli
into
ljmp
bound
mov
lret
loope
rolb
mov
mov
aas
jg
cmp
jbe
std
call
inc
ret
lock
mov
fisubs
test
or
xchg
sub
pop
sbb
lret
dec
addr16
jns
cmc
xlat
add
fisubs
rolb
std
pop
les
pop
mov
jnp
cmpsb
repz
inc
repnz
mov
popa
ret
or
mov
in
jmp
pop
xchg
loop
add
xor
mov
faddl
movsb
lret
jmp
jo
inc
xchg
xchg
mov
test
jb
popf
stos
jno
cwtl
mov
inc
inc
jb
cmc
sbb
xchg
sarl
and
pop
push
and
arpl
movsb
in
mov
add
stc
negl
out
iret
pop
add
ffreep
outsb
and
xlat
movsl
add
xchg
dec
es
sti
in
ja
add
lock
inc
sub
out
pop
or
jg
cmpb
and
inc
arpl
push
inc
or
insb
xchg
imul
cmp
adc
xchg
pop
inc
push
jo
fs
xor
gs
outsl
jg
daa
flds
mov
lea
aaa
jl
push
stos
mov
push
lods
into
mov
sbb
fimull
sbb
or
test
arpl
divl
rcrl
enter
push
or
imull
ret
sbb
cli
fabs
test
push
mov
popa
stc
div
pop
hlt
jb
mov
inc
int
sbb
gs
cli
adc
cmp
inc
scas
lock
aaa
mov
add
adc
xor
jg
pop
cmpsl
pop
subb
loopne
das
jle
xchg
mov
cld
mov
and
jmp
and
sub
inc
pushf
lea
rcr
inc
mov
mov
cmc
jl
test
jnp
add
stc
xor
or
insl
arpl
sbb
repz
lds
adc
fwait
adc
cmp
rclb
and
lcall
cld
dec
sbb
lret
push
cmp
mov
jne
unpcklps
jns
xchg
and
mov
mov
xchg
cmp
jae
jle
leave
sbb
test
arpl
add
jae
sbb
ret
cmp
int3
sbb
xchg
test
push
mov
lahf
sbb
sbb
shll
mov
insb
inc
fdivr
jns
fmuls
mov
ret
jo
into
jmp
data16
rcrl
xor
arpl
add
pop
jbe
test
lods
repz
test
stos
into
dec
jmp
cld
mov
mov
jne
lahf
mov
mov
out
imul
inc
int3
dec
xchg
dec
xor
sub
outsl
pop
leave
cmpb
adc
mov
lock
inc
dec
xor
pushf
or
fs
inc
lret
outsl
movsl
add
sub
insb
adc
xchg
aaa
and
xchg
js
cmpsl
jo
mov
sbb
cs
inc
adc
int
pusha
mov
or
std
das
imul
jb
js
adc
inc
loope
mov
mov
mov
adc
jo
stc
fcomps
jnp
sub
sbbb
rdmsr
push
lods
push
push
mov
xchg
lods
pop
mov
pop
aas
scas
lea
adc
cmp
or
sbb
fcoms
mov
push
shrb
dec
pop
fildl
mov
int
ret
cwtl
jge
cmpsb
add
in
mov
iret
jecxz
push
lret
mov
inc
xchg
inc
stc
add
cs
and
push
jbe
lea
aad
xchg
sarb
out
rcrb
jmp
pop
xor
ljmp
fisttpll
mov
mov
leave
aaa
mov
mov
movsb
pop
sbb
or
xchg
mov
pop
shrl
xor
fsubl
mov
push
cmpl
int3
sbb
mov
test
and
mov
ds
push
fistl
pop
out
mov
fwait
adc
inc
and
fsubs
xor
rorb
adc
mov
add
stos
mov
cmp
dec
or
cli
in
aam
shlb
scas
out
testl
stc
add
sti
pop
xorl
and
enter
xor
int3
push
dec
ljmp
xchg
scas
fsts
jno
aaa
aam
add
jbe
adc
js
add
fnstsw
and
leave
inc
mov
cmpsl
and
adc
pop
add
push
xchg
mov
pusha
push
inc
out
mov
aam
je
jne
push
out
cmp
push
in
cmp
mov
prefetch
and
push
and
xchg
cltd
pop
ds
loopne
dec
bnd
xor
xlat
aas
sub
mov
repnz
cwtl
call
push
add
fstpl
cmp
mov
push
push
mov
cs
dec
outsl
or
xor
xchg
inc
inc
fiadds
mov
mov
mov
ljmp
les
fcmovnbe
lret
lahf
mov
cmc
frstor
jmp
in
jae
jmp
inc
stos
stos
or
mov
jle
pop
adc
sbb
or
lahf
push
cmpsb
popa
mov
jle
mov
sahf
shr
mov
pop
fcompl
xor
pop
mov
adc
call
mov
fs
or
mov
push
data16
jmp
andnps
jo
repnz
test
lds
pop
pop
das
shl
inc
adc
pop
aam
xor
inc
lret
pop
test
xchg
pop
or
scas
rcr
pop
fisubl
cmc
inc
push
jmp
pop
in
sbb
cmp
push
mov
lret
jg
paddq
ret
mov
mov
mov
insl
dec
popf
mov
jne
adc
rol
push
push
xchg
inc
xor
xchg
push
aaa
pop
jbe
ret
cli
shrl
push
nop
test
cmc
mov
enter
cs
nop
cmp
mov
sub
lea
xchg
fs
xchg
insl
stc
cmp
xor
mov
ficompl
mov
xchg
or
les
ficoms
ljmp
imul
fstl
xchg
xchg
enter
xchg
cmp
lahf
sub
lret
arpl
adc
ror
inc
xor
ss
pop
mov
pop
outsb
movsb
dec
icebp
jg
cwtl
xor
jge
dec
xchg
out
sbb
out
xchg
out
pop
adc
mov
dec
test
mov
sbb
inc
cmpsl
mov
outsb
sbb
or
sub
arpl
lock
mov
fmulp
mov
stos
or
push
cmpsl
lahf
hlt
add
push
or
test
pop
jg,pt
in
mov
not
dec
aam
sahf
mov
push
inc
jmp
or
fbld
sbb
or
test
and
mov
jg
or
pop
les
xorb
fwait
inc
mov
xchg
or
scas
mov
and
stos
adc
add
lret
fidivs
jno
mov
fwait
inc
cmp
repz
xor
sti
mov
lods
les
sbb
add
adc
mov
les
imul
sbb
dec
nop
cmpsl
ret
movsl
pop
sub
cmp
jbe
stos
pop
jle
pop
mov
xchg
and
ljmp
inc
fwait
bound
out
xchg
adc
adc
sbb
mov
xor
fstl
icebp
cld
xchg
outsl
mov
daa
pop
outsb
outsb
pop
enter
outsb
out
cmp
jl
mov
cltd
sbb
mov
lcall
push
daa
ja
dec
sar
test
mov
ljmp
or
imul
and
in
cwtl
rcl
xchg
and
ljmp
repz
jns
and
mov
dec
stos
in
int
icebp
push
xor
nop
fnsave
lret
stos
sub
lods
add
lret
js
cmc
repz
fcompl
inc
pop
jmp
fbld
movsl
scas
iret
adc
xor
lods
call
fsubrs
push
das
dec
adc
pop
xor
cmp
add
dec
xchg
sahf
sti
mov
cmpsb
jae
aas
adc
xchg
pop
das
mov
mov
les
jp
js
mov
cmp
xor
pop
mov
sub
sbb
das
jp
mov
mov
int3
iret
repnz
sarb
divl
sbb
sarb
mov
push
mov
jb
dec
inc
in
xchg
sbb
nop
dec
mov
xchg
rcll
leave
pop
adc
mov
sbb
ljmp
jae
cmp
shrb
mov
insb
xorb
das
xchg
mov
imul
js
sarl
mov
or
popa
cs
xchg
inc
addb
xor
sbb
push
into
outsl
cwtl
xchg
sbb
rol
mov
dec
or
fisubrs
sbb
js
xchg
aad
fisubrs
sbb
data16
mov
and
aaa
fnstsw
mov
pop
push
loopne
adc
xor
insb
sub
mov
iret
fs
rcll
mov
out
das
stos
jg
ret
in
xorb
xchg
push
cmp
mov
sub
imul
cmpsb
mov
xlat
lret
rolb
add
rcrb
adc
or
aas
outsb
in
sbb
out
fdivs
xor
leave
cli
popa
jo
mov
lods
add
lock
xor
push
ret
and
and
pop
push
pusha
jb
loopne
add
sbb
clc
decl
or
cmp
inc
es
loop
inc
or
int
add
icebp
dec
add
mov
or
push
pop
pop
push
outsl
mov
popa
lret
mov
jge
addb
lods
cwtl
sbb
inc
ss
push
enter
dec
pop
imul
fsts
mov
jns
scas
imul
in
ret
push
xor
jb
insb
inc
push
mov
fsubl
sub
data16
sbb
mov
cwtl
enter
jge
push
xor
mov
les
mov
imul
cmpl
or
shrb
sub
test
xchg
xor
cwtl
jnp
aaa
mov
enter
jmp
test
push
and
es
sbb
fsts
lret
push
loope
andb
decb
pop
sbb
loopne
bound
outsb
dec
ds
mov
lahf
shrb
xchg
jb
xchg
jp
out
out
shrb
pop
subl
mov
add
imul
lds
cmpsb
fisubrl
mov
xor
push
pop
jbe
addr16
jecxz
imul
jnp
arpl
and
daa
in
xor
xchg
jno
gs
loop
ss
enter
daa
inc
imul
cmp
aam
and
cmp
divb
ret
pop
inc
dec
adc
std
stos
dec
push
out
and
ja
aas
addr16
mov
shrl
dec
xchg
xor
mov
lods
sahf
ljmp
lods
add
imul
adc
inc
cltd
xorl
push
and
out
xor
loope
movntps
rolb
adc
xchg
jbe
fwait
push
push
xchg
movsb
inc
daa
and
data16
jne
and
in
popf
mov
lcall
dec
data16
insl
mov
pop
xchg
inc
jnp
dec
push
repnz
std
addr16
push
adc
or
inc
js
adc
and
jne
les
and
cltd
ret
test
insb
addl
ficompl
xor
ds
jmp
xchg
rcrl
mov
or
ffreep
call
cmpl
pop
sub
push
aam
test
dec
loope
sub
xchg
jg
rcll
mov
popf
jge
sbb
ret
or
aas
cmp
or
std
cmp
cmp
cmp
xchg
shl
adc
pop
fisttpll
dec
or
add
jle
fwait
push
addr16
or
inc
mov
mov
daa
addr16
loopne
adcl
addb
jl
cmpsl
and
mov
pop
in
int3
int3
stc
dec
out
push
cmp
push
mov
in
cmpsl
or
push
cmp
scas
mov
icebp
daa
xchg
push
sahf
inc
jle
sbb
into
cmp
ja
xlat
xchg
rcr
mov
cld
inc
jnp
insl
dec
or
clc
in
push
sbb
sti
cmpsb
mov
lcall
adc
or
cltd
fstpl
mov
neg
bound
daa
xchg
xor
daa
cmp
push
out
call
add
cmpsl
xor
mov
adc
mov
mov
and
subb
mov
test
sub
sbb
xchg
jb
mov
inc
lds
xchg
xchg
dec
dec
lods
call
lock
sbb
xor
add
ret
not
aas
dec
inc
add
out
jecxz
ror
jl
push
lret
sahf
mov
inc
jp
fiadds
inc
sahf
mov
lcall
push
xchg
add
popf
dec
jo
fldt
ret
push
fs
shl
and
bound
cmp
nop
push
mov
lahf
gs
insb
mov
mov
xchg
cmc
inc
cmp
mov
call
and
mov
cmpsb
pop
sbbb
dec
inc
adc
fs
testb
ret
andb
mov
into
sub
in
sti
lahf
bnd
xchg
rorb
dec
test
xchg
aam
dec
inc
gs
sub
mov
xor
call
jecxz
in
call
and
mov
repnz
dec
adc
push
add
mov
cld
mov
cmp
push
add
inc
pusha
push
stc
ret
aaa
cmp
sub
adc
into
adc
jbe
insl
enter
dec
sbb
xchg
cmp
pop
fdivrs
mov
popf
dec
dec
scas
push
mov
jg
push
xchg
rorb
push
cli
adc
out
jl
cmpsb
mov
xor
mov
cmp
mov
sub
sbb
mov
push
cmp
push
or
cltd
iret
xor
or
xor
loop
dec
stos
mov
xchg
add
loope
cmp
mov
pop
outsl
mov
push
pop
nop
outsl
movsb
pop
hlt
pop
mov
xor
adc
pop
sahf
dec
lock
xchg
adc
test
js
or
daa
pop
fistpl
jnp
xchg
pop
fstl
pop
outsb
fstpl
mov
mov
push
sbbb
inc
call
lret
nop
lods
and
pop
adc
in
mov
idivb
aas
sbb
sti
xor
stc
in
out
daa
mov
leave
sbb
adc
pop
roll
insb
push
adc
test
sbb
test
pop
mov
push
stc
pop
js
daa
push
movsb
mov
mov
imul
jo
dec
sbb
adc
ss
mov
rorb
mov
insl
adc
lock
int
pop
inc
scas
in
xor
fwait
and
xchg
popf
ds
flds
int3
pushw
test
mov
addr16
dec
pushf
mov
jno
sub
mov
sbb
inc
out
mov
insl
loopne
fistpl
pushf
stos
jae
mov
das
loop
out
fs
pop
into
push
mov
pop
and
das
lret
imul
clc
ds
push
adc
add
sti
and
adc
inc
pop
sbb
pop
out
out
adc
xor
dec
add
outsl
mov
enter
xor
ss
mov
cmc
sub
add
xchg
movsl
test
in
aas
popa
sbb
dec
dec
cmp
shlb
sbb
cmovo
mov
stc
adc
cmpb
ss
xor
jmp
shrb
outsl
int
xlat
rorl
notl
loope
mov
push
pop
faddl
mov
push
decb
push
jmp
xchg
in
pop
mov
outsl
push
pop
mov
mov
arpl
mov
mov
stc
or
xchg
xor
dec
push
mov
fucomip
test
xchg
dec
mulb
call
cmp
push
movsb
in
iret
fmul
inc
js
je
add
xor
pop
sarl
add
scas
fdivl
test
dec
push
push
adc
loopne
clc
gs
adc
push
push
cli
jae
mov
shr
mov
into
push
outsl
sub
loopne
xchg
ja
out
xchg
es
push
pop
push
in
and
imul
xchg
insb
lods
lds
popa
int3
jge
mov
dec
mov
repz
test
shrb
pop
xchg
jns
out
and
jl
stos
clc
stc
std
pop
xchg
jb
push
and
js
scas
icebp
int
add
pusha
xor
mov
orl
or
jne
stos
mov
or
mov
insb
push
mov
push
lods
arpl
jae
pop
mov
xchg
ljmp
inc
loopew
into
ljmp
jp
mov
lods
ud2
popa
dec
mov
ds
sbbl
or
movsl
pop
scas
mov
mov
subb
cmp
cmp
add
lahf
test
int
repnz
xchg
xor
adc
push
aad
mov
mov
sub
out
jecxz
fcompl
repnz
dec
and
testl
movsl
or
push
pop
shrl
loopne
mov
jle
cmp
iret
nop
mov
dec
sarl
int
jb
inc
loopne
sahf
es
mov
cld
insb
cli
mov
add
inc
rcll
rcrb
cmp
pusha
sub
jbe
mov
sti
addr16
and
mov
stos
aad
cs
jmp
stc
imul
jo
dec
daa
aaa
scas
fdivs
dec
cmc
pop
jns
psubd
sarl
sub
iret
clc
or
filds
sarl
xlat
ss
mov
pop
pop
div
sbb
mov
xchg
pop
inc
iret
shr
ds
inc
pop
addb
cmc
test
mov
shll
xchg
sahf
insl
xchg
call
xchg
add
xchg
jbe
int3
mov
mov
imul
push
aad
add
loop
fstp
fstl
mov
cmp
cli
dec
aaa
or
inc
fcmovbe
jecxz
xlat
fidivs
fadd
mov
and
mov
mov
int3
std
xlat
and
in
pop
fldcw
xor
test
push
mov
hlt
and
cmc
xchg
scas
mov
xchg
cmp
mov
aaa
adc
mov
pop
push
mov
jmp
xor
pop
les
push
push
out
pop
pop
dec
sub
xor
scas
xchg
mov
xchg
pusha
ljmp
shrl
popf
push
shll
and
jecxz
adc
ljmp
and
aad
iret
imul
inc
xor
bswap
add
or
stc
jge
repnz
pop
mov
mov
addr16
imulb
cmp
roll
mov
xchg
test
mov
pop
loopne
ljmp
leave
pop
mov
mov
dec
js
push
popa
mov
ret
jb
popa
xchg
add
adc
sub
or
insl
push
jl
cmpsb
xchg
sub
gs
add
icebp
insb
push
lds
pop
dec
outsb
or
outsb
ret
cmpsb
pusha
adc
inc
push
in
lret
scas
pop
xchg
lea
cli
scas
mov
add
cmp
jle
push
xor
pop
push
rcll
cmc
shll
xchg
cmpsb
addl
ret
je
push
mov
out
mov
and
pusha
pop
add
jecxz
dec
cmp
mov
or
xor
mov
inc
into
sarb
cld
stos
adc
cs
out
fistps
mov
loopne
shlb
ret
mov
je
sbbb
push
ja
jmp
inc
js
je
dec
shrl
pushf
sbb
out
jo
xchg
push
jl
in
dec
push
ret
push
mov
int
adc
fwait
push
push
mov
xchg
fmul
or
aad
inc
add
cmp
jp
cs
pop
add
inc
roll
mov
sub
lods
test
push
dec
xor
mov
aaa
pop
ror
cmp
fbld
and
cmpl
mov
add
scas
scas
and
cmp
and
popf
sbb
mov
lock
sub
xchg
lret
mov
mov
xor
test
das
push
rcrb
jae
sti
and
add
push
mov
mov
and
pop
adc
mov
repz
pushf
mov
test
push
out
into
cmp
xor
fimull
xchg
jecxz
adc
jo
and
sbb
mov
mov
add
nop
mov
rcl
fsubs
scas
push
call
dec
adc
inc
lock
sub
or
inc
and
int3
pop
ret
and
fdivrs
stos
adc
sbb
dec
insb
movsb
pop
and
xor
imul
jmp
or
mov
idivl
pop
xchg
sbb
sub
add
or
sub
xchg
rcr
mov
mov
insb
sub
push
js
adc
pop
outsb
adcb
loop
jge
sbb
cvtdq2ps
adc
or
jmp
sub
ret
xor
mov
inc
outsb
pop
int3
xorl
dec
cwtl
pushf
pop
adc
sti
jbe
add
mov
adc
cmp
out
sarl
adc
adcl
ja
lea
pop
pop
dec
dec
ds
mov
es
rcrb
xor
sub
int3
pop
xchg
daa
ss
popf
and
push
or
dec
orb
mov
jp
sub
out
decb
push
shrl
jle
pushf
inc
push
push
in
jo
lret
fadd
daa
xor
mov
dec
or
insb
xlat
insl
stos
test
subl
cmp
js
shl
lcall
outsl
test
mov
xor
push
into
dec
pop
jno
xor
adc
dec
repz
and
adc
sbb
adc
fsubrs
or
fdiv
fistl
sti
or
aam
lahf
std
mov
xor
test
fwait
adc
mov
and
cmp
call
mov
sub
cli
mov
lret
aad
stc
xchg
jmp
call
sarl
mov
cli
movsb
inc
imul
dec
push
adc
aad
mov
inc
stos
arpl
add
enter
jl
dec
mov
mov
int3
and
xchg
jp
insl
repz
ss
xor
push
iret
jno
ds
rcl
lds
push
cld
repnz
add
pop
jle
xchg
sub
orl
or
jns
adc
lods
fiadds
or
lahf
adcl
lea
xor
push
cmp
adc
push
mov
pop
dec
movsl
dec
jecxz
dec
fidivl
push
sub
stos
nop
leave
nop
push
loope
mov
dec
lret
shlb
mov
cmp
in
mov
xor
maskmovq
testl
jae
push
imul
mov
cmc
cltd
dec
mov
push
mov
popa
lods
xchg
in
mov
enter
in
getsec
xchg
xchg
enter
jmp
xchg
xchg
lock
and
sub
std
mov
sbb
sbb
test
xor
or
sbb
clc
jbe
push
shrl
daa
sbb
pop
xchg
mov
rcll
mov
test
mov
pop
push
aas
xchg
movsl
shl
xor
sbb
popa
xor
movsb
lds
cs
and
stos
push
mov
sbb
xchg
ret
loopne
pop
sbb
cmc
int3
pop
dec
xor
movsb
test
and
jl
or
pop
xor
ror
nop
pop
lock
add
adc
xchg
lods
xlat
and
cmp
incb
mov
enter
mov
test
roll
xor
xchg
mov
jmp
inc
ss
scas
inc
adc
push
lahf
xchg
pop
inc
lea
sub
clc
dec
mov
shlb
or
lret
mov
hlt
into
fdiv
pop
adc
dec
mov
fcompl
sti
sbb
insl
adc
aad
loopne
sbb
xor
mov
add
mov
cmp
incb
mov
lcall
mov
adc
or
adc
jp
in
pop
pop
repnz
das
dec
das
mov
mov
fsubrl
sahf
outsl
lea
out
stos
insl
cmp
fimull
or
iret
aaa
mov
cmp
sti
cmp
out
push
shlb
add
pop
mov
lret
push
dec
into
rorb
movsl
dec
or
push
sub
sti
mov
add
call
ljmp
es
inc
mov
mov
adc
fwait
push
sbb
xor
lock
jmp
lret
mov
insb
inc
xchg
aas
adc
rolb
or
fwait
or
aad
dec
test
orb
mov
mov
jmp
movsb
inc
in
push
add
mov
leave
add
sbb
mov
jbe
and
repz
rorl
arpl
mov
les
rorl
icebp
sub
dec
xor
jmp
ja
dec
and
inc
mov
test
mov
mov
dec
inc
loopne
dec
adc
jnp
in
lds
clc
scas
push
lock
js
pop
xor
test
mov
ficompl
xchg
adc
out
cmpsb
and
mov
clc
nop
mov
jno
jg
add
add
cmp
cmp
jmp
sbb
pushf
inc
adcl
data16
mov
push
cmpsl
cwtl
xchg
hlt
cltd
cmp
loopne
arpl
pop
les
orb
mov
mov
sub
adc
sub
dec
outsl
pop
and
sbb
sub
jmp
hlt
je
mov
xor
mov
fs
addr16
jns
mov
cmpsl
rcrb
cli
jmp
lods
movsl
inc
lcall
inc
jmp
filds
jle,pt
daa
cltd
dec
mov
add
jne
mov
ret
or
and
cmp
jne
sub
fnstcw
dec
insb
leave
out
psllq
mov
push
int
xor
mov
ret
xchg
and
mov
inc
cmp
scas
adc
mov
mov
and
repz
scas
mov
in
pop
clc
xor
pop
dec
inc
xor
push
fstps
inc
je
cmp
xchg
jbe
xchg
ret
pop
lret
dec
jo
mov
stc
sub
in
push
cmp
sbb
xchg
scas
xor
xchg
adc
cmp
nop
nop
cli
jb
mov
cltd
sbb
jle
adc
cld
int
int3
mov
add
ficoml
xor
popa
lea
loop
mov
and
inc
lds
leave
lods
xchg
pushf
les
cli
push
mov
xlat
sub
cmp
push
mov
imul
sub
add
or
fs
adc
fcomps
mul
jl
pmaxsw
pop
divb
mov
lret
mov
daa
add
xlat
pop
daa
in
add
ror
push
jge
fisubl
or
add
jp
iret
ljmp
dec
push
and
sub
int
push
inc
add
bound
mov
jmp
lcall
arpl
mov
push
xchg
jp
les
push
les
jae
xchg
sbb
and
xchg
pop
hlt
jge
or
mov
inc
das
sub
push
mov
jno
and
jns
cmp
sbbb
jnp
cwtl
cmp
pop
mov
dec
inc
push
outsl
mov
cmpsl
xor
repz
jns
mov
push
les
aad
sbb
sbb
int
or
sbb
mov
ss
out
push
sbb
push
adc
mov
aad
pop
lds
sarl
nop
add
cwtl
stos
ljmp
scas
push
fistps
out
and
mov
sub
cmp
ret
dec
mov
inc
mov
push
cmp
adc
mov
mov
loopne
scas
sub
cmp
out
aad
push
aaa
popf
lock
mov
gs
push
or
push
xchg
inc
aam
ja
jmp
sub
dec
sbb
mov
xor
fstl
pop
lret
adc
das
sbbl
shl
or
ss
leave
call
xor
sbb
out
pop
pop
sbb
mov
repnz
jmp
into
adc
arpl
out
mov
add
add
sub
hlt
or
daa
out
mov
popf
mov
sbb
pop
pop
dec
xor
dec
mov
cmp
cltd
loopne
and
cwtl
add
imul
mov
je
sbb
or
fs
add
jmp
push
dec
cmp
sub
fs
in
dec
dec
jns
sub
test
add
adc
adc
xchg
fs
xchg
in
jns
cmp
test
or
mov
notl
aaa
out
sub
ja
out
pop
out
into
xor
adc
inc
mov
scas
push
inc
cmp
idivl
xor
cmpsl
xor
push
incb
mov
test
shll
movsl
mov
test
dec
sbb
xchg
mov
cmp
call
int
mov
loop
inc
cmp
mov
lret
test
in
xchg
lahf
insb
lock
dec
pextrw
push
xor
enter
loope
pushw
jl
je
pusha
int3
jp
lret
mov
icebp
jl
cmp
sahf
add
jle
push
bound
out
pop
loop
xchg
lret
push
rcr
jecxz
sarl
jne
add
lcall
lock
ret
mov
add
or
inc
mov
push
dec
sar
xchg
idivb
rcll
outsb
stos
cmp
pop
mov
xor
push
jnp
rorl
dec
out
or
std
push
cmp
adc
jo
adc
xchg
fs
lea
mov
mull
movsb
out
lods
and
push
mov
xchg
jo
sbb
test
lcall
incb
roll
adc
idivb
dec
fwait
aad
outsl
test
dec
sbb
stos
cmpsl
negl
mov
lea
inc
push
jg
adc
rcrb
rcll
dec
jb
push
pop
mov
add
int
jmp
jmp
add
insl
cmp
jns
inc
inc
sub
inc
jle
pop
arpl
hlt
and
cld
xchg
jecxz
xchg
and
addr16
dec
mov
scas
leave
add
es
sub
pop
imul
outsl
lea
xchg
std
fdivrs
pop
xchg
add
lock
push
sub
psrlq
mov
cmpb
nop
int
arpl
lahf
addr16
cmpl
push
dec
imul
stos
imull
inc
out
add
jecxz
push
ss
adcl
xchg
lds
add
mov
dec
jbe
fisttpl
lock
inc
push
pop
lods
cmp
push
pushf
and
jecxz
in
lods
mov
xchg
mov
pop
ret
mov
mov
adcb
fsubr
es
mov
push
dec
repz
xlat
cltd
mov
scas
sub
jnp
xchg
aad
and
pusha
xor
int
push
stos
mov
mov
loop
andl
adc
insl
std
adc
dec
inc
std
aad
jp
cltd
ds
add
sbb
pop
mov
in
lds
daa
dec
sbb
outsl
and
mov
in
add
mov
aam
jne
sbb
fadds
lahf
sub
inc
jnp
in
and
xchg
cs
cmp
mov
sub
adc
cmp
dec
ja
andl
imul
jg
aaa
in
lret
fwait
jae
jb
fdivrs
adcb
aad
adc
stc
pop
aad
or
xchg
and
push
mov
dec
repz
adc
sbb
cwtl
mov
rclb
mov
pop
mov
jg
add
dec
scas
dec
movsl
cwtl
loope
lcall
dec
jbe
adc
mov
or
push
hlt
hlt
mov
mov
out
lret
cmpsl
mov
scas
adc
lods
adc
dec
xchg
in
and
and
loopne
pop
mov
adc
dec
nop
adc
adc
mov
mov
inc
xchg
gs
fwait
xchg
mov
dec
pop
mov
sbb
test
mov
push
je
lret
leave
mov
int
insl
jbe
lods
loope
push
ds
pop
imul
mov
jbe
cmp
into
sub
cmp
mov
mov
mov
jl
js
xor
adc
push
jl
imul
mov
mov
dec
popf
fidivs
fiadds
sub
in
movsb
sub
movsb
sub
cltd
dec
dec
fidivl
out
in
jle
sub
add
stos
xchg
mov
mov
jle
sbb
pop
fbstp
lea
ret
xchg
mov
lret
xchg
push
push
mov
fistpl
cmp
pop
or
aam
sbb
es
push
ljmp
cmp
cmpsl
gs
mov
sub
mov
inc
fildll
testl
jbe
jbe
mov
xchg
mov
mov
lahf
xor
stos
adc
xorb
jb
xorb
pop
aas
xor
inc
push
scas
je
mov
mov
fwait
inc
mov
jbe
inc
xor
mov
or
fs
and
lcall
dec
cmovnp
mov
add
jnp
and
cmp
xor
movsl
mov
jecxz
xor
cmp
mov
xchg
ret
loop
popa
dec
jl
stos
sbb
add
gs
gs
push
fs
mov
inc
leave
in
mov
jmp
loopne
xchg
fiaddl
orb
jg
stc
mov
xor
outsl
pop
nop
xor
stos
call
sub
test
popa
pop
call
roll
and
xchg
mov
out
cltd
frstor
cmc
push
das
sub
inc
stos
mov
jge
mov
ret
sub
lea
pop
jmp
inc
dec
loop,pt
cmc
xchg
clc
dec
push
fcomi
aam
sahf
xchg
push
jno
movsb
fnstsw
loop
cwtl
data16
notb
dec
pop
sbb
mov
xchg
or
sub
test
jae
fsubs
pop
inc
push
rcll
bound
cltd
sbb
popf
iret
gs
add
xchg
mov
popf
push
shrb
aas
nop
mov
dec
pop
loop
ds
pop
adc
ret
adcb
or
stos
mov
imul
fsubl
xor
ret
jae
cmpsb
mov
push
repnz
jecxz
sub
in
into
xchg
mov
or
dec
ja
sub
in
pushf
pop
adc
inc
dec
or
mov
dec
cmc
fstps
push
push
cmp
xchg
mov
sbb
sbb
mov
fildl
popa
sub
mov
jns
xor
js
adc
pop
orl
and
push
mov
sahf
shll
pop
adcb
lret
xchg
push
inc
push
pop
arpl
int
lock
test
lock
push
mov
pop
cwtl
test
xchg
fisttpll
add
mov
jnp
push
jbe
pushf
mov
mov
cli
sarl
arpl
jbe
dec
adc
mov
clc
lods
sbb
cltd
adc
ja
push
ss
mov
lock
mov
mov
lret
cli
xchg
add
jge
rcr
mov
push
filds
and
jno
and
add
inc
jp
pop
xchg
call
out
sub
shll
in
ljmp
stos
xor
inc
mov
xlat
xor
dec
lcall
aad
shl
lods
stos
push
add
xchg
roll
xor
flds
sub
std
lcall
mov
ljmp
push
aaa
fnstenv
push
stos
xlat
dec
sahf
sub
insb
xchg
into
jbe
xchg
dec
data16
push
push
lret
shr
mov
repz
mov
les
pop
sub
cmp
mov
mov
pop
sarl
jecxz
mov
push
stos
cltd
dec
push
in
aam
pop
pop
testl
and
adcb
jno
or
sub
pop
repz
lahf
inc
inc
incb
xchg
mov
sub
and
scas
xchg
rorl
mov
test
loope
or
lret
jg
jle
xchg
or
jmp
push
ja
pop
dec
sti
int3
lret
mov
fst
mov
jns
push
lods
xor
scas
ja
nop
mov
icebp
cwtl
dec
and
xor
pusha
aam
jno
adc
dec
loopne
push
das
mov
test
sub
mov
mov
mov
xor
mov
xor
lahf
and
loope
adc
jmp
sbb
dec
sbb
xor
fs
rcr
test
test
mov
add
xchg
nop
les
pop
or
add
sahf
cmc
jp
notb
inc
addr16
mov
sbbl
push
ja
pusha
lods
lods
push
inc
add
push
ss
addr16
fisttpl
nop
sbb
repnz
cmp
ret
cmpb
push
xchg
int3
push
or
in
testl
xchg
push
test
fucomi
cmc
roll
mov
aas
fidivs
jl
sete
jecxz
imul
hlt
orl
icebp
fisubrs
cmpsl
pop
adc
add
jbe
cltd
outsl
mov
pop
lods
jg
dec
cmpsb
pop
jne
xor
js
shl
add
or
mov
mov
inc
pop
xchg
mov
jo
loop,pn
lock
lds
scas
inc
arpl
rclb
adc
cmp
stos
adc
insl
test
pushf
shlb
imul
push
insb
mov
gs
mov
lods
leave
push
out
sub
adc
jmp
scas
pop
lods
movsl
jmp
cmpsl
test
icebp
xor
pop
xor
divl
xor
mov
cli
dec
lods
cmp
mov
adc
popa
out
jecxz
ret
push
dec
xor
loop
cmc
adc
in
mov
movsb
out
cmp
or
pop
push
xchg
push
adc
xchg
inc
ja
jg
fimuls
xlat
xor
jge
repz
lods
xor
or
push
popl
pop
xor
push
cli
sbb
aam
shl
pop
mov
es
jb
not
and
clc
insb
lds
jl
mov
push
cmp
mov
faddp
sbb
push
std
in
xor
aas
hlt
xchg
loopne
inc
fisubrs
out
pop
in
sbb
mov
test
push
xor
test
xchg
dec
xchg
xor
push
sbb
sbb
inc
pop
inc
repnz
ja
loope
outsb
mov
or
mov
add
push
fistl
testb
in
popa
repz
jae
fstl
xchg
stos
pop
aaa
je
das
xor
xor
xor
xor
pop
or
lods
ja
jge
push
loope
sub
cmp
adc
inc
pop
adc
incb
lret
inc
shll
jp
adc
call
orl
lock
test
mov
fwait
add
mov
pop
xchg
ror
scas
or
js
dec
jecxz
and
sbb
clc
inc
and
roll
jns
pop
pushf
sub
xor
movsl
daa
push
or
in
jp
xchg
push
xor
arpl
mov
lods
divl
xchg
out
inc
pop
cs
cwtl
pop
inc
stc
lret
bound
adc
mov
test
mov
mov
mov
not
dec
pop
mov
mov
int
fstpl
pop
and
faddl
mov
test
shrb
iret
pusha
jle
stos
lcall
mov
test
push
xor
mov
loopne
stos
jne
loopne
and
fimull
cli
in
mov
arpl
dec
jbe
push
inc
sbbb
pop
or
out
in
dec
sub
dec
pop
cltd
jnp
and
hlt
add
test
sahf
out
jnp
mov
xchg
jnp
pop
scas
mov
push
je
cmpsl
out
sbb
in
pop
imul
fwait
lahf
mov
xor
jbe
loop
cli
jle
fincstp
popf
cmp
jl
ja
mov
aam
xchg
movsb
scas
cmp
nop
cmp
sti
jns
add
cltd
pop
inc
mov
sbb
pop
cmpsl
jb
pop
pop
and
pop
or
insl
test
mov
xchg
hlt
aaa
sub
nop
xor
orl
cs
cs
repz
in
sub
adc
or
dec
fiaddl
out
xor
aam
flds
testl
adc
jmp
outsl
idivl
jmp
dec
adc
dec
sub
sahf
inc
add
xchg
pop
ds
push
fdivs
cld
mov
cmc
push
xchg
jmp
push
push
xor
dec
jl
xlat
jge
les
mov
bound
lds
sbb
fists
mov
jo
jae
test
pop
mov
mov
je
and
and
dec
cltd
xor
aas
pop
xor
cmp
insb
mov
cmp
repnz
inc
test
push
xchg
mov
mov
into
scas
add
hlt
sub
lret
add
or
cmc
dec
fsubrp
jg
xor
lret
adc
or
mov
cmp
in
or
pop
gs
push
adc
mov
lods
mov
das
imul
sti
inc
jg
sbb
out
add
pop
mov
rcr
xor
or
out
xchg
or
in
xor
jecxz
enter
jae
add
mov
jnp
add
imul
lret
adc
fstpl
ficompl
test
cmc
ficompl
cmp
sbbl
cmp
add
fsubp
cmp
dec
mov
pushf
cmp
out
out
xchg
jp
jg
clc
ficoms
lea
mov
fwait
ret
pusha
jecxz
dec
movsb
loope
daa
cmp
mov
xchg
cld
movsl
outsb
dec
ret
xchg
fsubs
ss
pusha
ret
lret
and
rorb
cmc
insl
xor
imul
and
sahf
adc
mov
test
lcall
sbb
adc
xchg
out
sub
je
mov
mov
stos
jp
xor
cmp
jb
or
lret
sbb
out
insl
ss
fmuls
or
xchg
clc
into
fdiv
mov
lock
and
addr16
dec
insb
stos
cwtl
in
in
xor
jnp
xchg
lock
sbbb
jae
mov
mov
xchg
sub
adc
push
adc
imul
mov
fldl
int3
imul
inc
sub
adc
jmp
mov
pop
xor
mov
dec
bound
jno
stc
adc
add
xor
mov
mov
ds
mov
inc
push
fldl
or
push
dec
mov
mov
jns
inc
fimull
scas
btc
mov
je
xchg
mov
enter
js
mov
fimull
out
and
lcall
sarl
inc
push
loop
cmp
test
sbb
ret
and
jns
scas
imul
fsubrp
popa
in
pop
push
sbb
sub
sub
test
push
les
or
repz
test
fwait
in
fistpll
icebp
lock
push
loop
mov
pop
lret
push
push
lea
daa
mov
mov
lods
xlat
adcl
cmp
mov
xor
jb
adc
addr16
pop
inc
pop
xchg
fwait
aad
pushf
stos
sbbb
imul
fwait
sti
into
scas
mov
addr16
test
jnp
inc
sub
enter
pop
arpl
xchg
xchg
sub
and
loop
dec
inc
les
mov
mov
popf
sahf
inc
mov
and
mov
xchg
insb
imul
add
vfmsubaddpd
ja
push
inc
loope
mov
enter
int
data16
int
and
xchg
mov
xchg
push
sti
mov
or
rolb
push
push
cmp
into
mov
and
stos
stc
mov
fcomp
add
mov
and
testl
hlt
and
push
xchg
arpl
mov
lahf
loop
shl
pop
pop
imul
js
mov
pusha
inc
les
mov
outsl
jnp
je
add
and
enter
lods
pop
inc
mov
aad
sbb
jno
outsb
mov
inc
in
fwait
xorl
sub
and
push
cmc
lcall
lret
mov
cwtl
add
mov
xchg
xchg
rcrb
dec
and
pop
jg
dec
std
test
inc
mov
sub
mov
ret
test
mov
cmp
push
mov
out
imul
bound
inc
add
push
leave
lods
jnp
mov
mov
and
xlat
sub
stos
lea
lahf
or
jg
jnp
push
xchg
and
or
sbb
lahf
inc
lret
loop
ret
sbb
push
mov
shll
loopne
jmp
lods
mov
in
roll
or
xor
imul
pop
inc
out
mov
pop
add
and
jecxz
popf
mov
lds
fcomip
inc
adc
fs
mov
aaa
ficoml
adc
lcall
lods
scas
push
pop
dec
cmp
xor
xor
pop
cltd
cmp
mov
cmp
outsb
and
rorl
or
cwtl
xchg
mulb
out
push
testl
jns,pn
in
dec
and
divb
fwait
addl
or
add
push
mov
jge
mov
ret
iret
mov
cmpsb
inc
cmp
mov
xchg
add
and
cwtl
adcb
sbb
mov
enter
jmp
dec
add
or
lods
mov
cwtl
popf
dec
add
adc
jle
adc
fadds
xchg
cwtl
enter
cltd
jle
lods
adc
and
mov
jo
fidivrl
out
push
inc
lods
mov
jbe
or
pop
movsl
cwtl
pop
inc
in
lcall
loop
dec
mov
mov
and
sub
xchg
ljmp
jp
inc
or
jae
leave
pop
repnz
cmc
adcl
in
stc
in
mov
rol
cmp
jnp
xlat
jo
rorb
ds
mov
sarb
cltd
jbe
rcll
pop
movsb
test
cmpsb
das
xchg
das
dec
and
adc
cmc
fwait
inc
pop
jp
out
mov
stc
inc
pop
adc
inc
jge
add
inc
pop
pop
inc
jns
sbb
sbb
mov
pop
mov
fdivl
aam
fidivrs
pop
or
arpl
and
xchg
push
lcall
shlb
mov
dec
test
repnz
or
xor
rorb
scas
inc
and
xchg
aas
testl
aaa
icebp
outsb
push
jns
fldcw
xchg
xchg
sbb
ret
sub
mov
scas
sub
cmp
movsb
ja
pop
push
inc
adc
pop
adc
mov
push
cwtl
jo
push
jne
lods
lret
ds
pop
and
loopne
dec
out
mov
jge
xor
push
pop
xor
jl
mov
jp
and
aaa
mov
pop
mov
mov
lret
movsb
call
mov
fnsave
jmp
xchg
sub
fdiv
mov
jo
jno
shrb
cwtl
divb
dec
mov
xor
gs
dec
push
repz
lahf
dec
pop
sbb
sbbb
mov
inc
sbb
lods
push
mov
or
xor
jge
mov
sbb
ror
xor
inc
mov
fiaddl
pop
ljmp
mov
jnp
and
push
lahf
test
hlt
pop
daa
cmp
jecxz
push
ret
paddsb
and
ret
mov
loop
shll
mov
test
add
test
mov
jae
mov
sti
out
fidivrs
test
jnp
dec
push
rclb
scas
aam
outsb
pop
movsb
inc
repz
mov
cmp
adc
loop
in
ficompl
inc
mov
fisubrl
fmulp
push
ja
in
xchg
push
daa
mov
pop
inc
dec
adc
pushf
ret
push
shll
cmp
shl
sub
xchg
cwtl
sub
mov
test
dec
ret
repz
mov
xchg
roll
xor
sub
dec
mov
mov
aas
aaa
mov
jb
inc
int
cmc
xchg
cmc
mov
sub
les
je
cld
mov
push
lcall
stos
push
mov
shl
push
fisubrs
in
mov
imul
dec
jle
fimull
mov
and
sbb
add
push
mov
pusha
pop
xlat
or
mov
push
jnp
xor
pusha
gs
les
add
xor
adc
sbb
ja
test
mov
cmc
cmp
cltd
inc
insb
sub
int3
clc
aad
push
pop
jns
popa
mov
in
mov
sbb
nop
popf
xor
xor
push
sbb
jmp
push
adc
and
fisubrs
leave
xor
ret
fadd
insl
hlt
adc
jge
adcb
rcl
inc
leave
aad
call
add
mov
sub
adc
mov
loopne
jns
push
pop
gs
insb
xchg
sub
out
mov
mov
out
pop
mov
enter
pop
sub
ss
cmp
pop
mov
adc
loop
sarb
andl
and
inc
lea
dec
pshufw
mov
or
cmp
xor
adc
sbb
or
xor
daa
outsl
jo
cmpsb
cmp
adc
movl
jp
inc
repz
push
jg
hlt
mov
push
enter
jns
lret
and
pop
mov
lret
sbb
es
pop
mov
pop
fdivs
aas
jns
cmpsl
sub
jbe
popl
xor
mov
enter
sbb
jae
mov
push
sbb
push
int3
dec
sbb
es
call
nop
cmp
mov
in
pop
aas
rolb
je
jle
inc
gs
lret
xchg
mov
mov
sbb
insb
xchg
add
data16
mov
pop
nop
cld
mov
mov
into
out
jae
addr16
adc
dec
jmp
fs
cld
loopne,pt
xchg
pusha
ss
idiv
shll
dec
jmp
fbstp
les
mov
fcom
aas
xchg
inc
or
loop
push
loopne
idivl
sbb
ja
cmp
xchg
lea
sub
imul
int
stc
xchg
idivl
or
inc
call
andl
mov
mov
or
jmp
and
or
enter
mov
lods
fs
jns
ds
fnstenv
ret
aaa
and
lret
mov
xchg
insb
cli
imul
adc
sub
push
mov
push
out
subl
mov
jbe
cs
xchg
scas
popa
daa
lret
insl
imul
push
movsb
movsl
or
sub
call
cltd
mov
mov
mov
sbb
jae
xchg
sub
repz
sbb
cmp
xchg
scas
out
xchg
push
jo
xorl
dec
subl
add
and
loope
inc
test
mov
out
adcl
ljmp
out
fildll
push
les
out
xchg
std
test
or
pop
mov
sbb
popa
dec
ss
leave
stos
push
inc
pusha
ljmp
cmp
popf
mov
xchg
test
sbb
jmp
sub
mov
je
mov
or
imul
fs
cmpsb
sub
call
mov
add
push
mov
into
ss
es
cli
andl
pop
dec
push
push
inc
jge
pop
data16
ljmp
filds
je
out
movsl
push
jbe
shl
inc
shlb
jns
aam
xchg
sarl
xchg
in
sub
out
and
pushf
mov
inc
push
dec
bound
jno
in
test
mov
popa
andl
jmp
stos
cld
roll
out
pushf
push
adc
mov
fs
lahf
jp
xchg
cmpsb
pop
sahf
mov
sbb
mov
adc
sbb
xor
out
mov
xor
sbb
in
xor
lods
jecxz
sti
xor
adc
mov
loop
sbb
jbe
mov
push
inc
or
test
pop
fs
inc
mov
les
insl
jmp
mov
ret
insb
outsb
and
jle
pop
js
test
and
nop
mov
movsl
cmp
and
xor
lds
mov
xor
lock
rcrb
jmp
adc
test
insb
cltd
gs
repnz
iret
scas
test
dec
push
and
fdivp
cmpsb
lock
inc
adc
mov
les
xchg
jae
and
rolb
or
test
dec
outsb
push
repnz
mov
arpl
lret
movb
push
inc
pop
add
cmp
xchg
inc
jg
inc
insb
jle
add
das
push
push
xchg
out
jo
jnp
xchg
mov
and
pop
push
inc
inc
movsb
mov
and
les
mov
pop
ret
fstpt
test
out
in
add
call
inc
jl
movsb
pop
xor
mov
jnp
xchg
imul
clc
leave
hlt
jg
cs
ja
ja
nop
bound
xchg
imul
je
sub
xchg
mov
leave
nop
push
mov
cvttps2pi
sub
nop
push
mov
je
gs
xchg
fimuls
adc
jle
adc
iret
add
and
xchg
mov
sbb
pop
sbb
pop
and
jae
cwtl
mov
stos
bound
fdivs
or
in
add
add
cmp
repz
pop
outsl
jno
push
jecxz
sub
in
dec
mov
adc
lcall
dec
insl
adc
cs
pop
push
cmp
pusha
bnd
scas
bound
subl
pop
mov
mov
aas
inc
mov
push
out
or
sub
dec
or
sub
mov
loopne
jb
and
mov
mov
loop
add
shlb
sub
push
and
add
je
div
and
add
sbb
mov
imul
jo
pop
and
sub
fistps
add
lahf
imul
dec
xor
xor
dec
jns
jae
pop
or
lret
out
add
popa
fwait
popa
in
lahf
jae
cmp
xorl
jge
test
xor
push
stos
fdivs
cmp
cmp
or
push
shll
cmc
lahf
mov
in
sbb
pop
sbb
imul
shll
inc
fsin
lret
jle
gs
dec
in
je
jbe
in
push
pop
mov
lods
sarl
mov
push
jp
mov
insl
insl
pop
rolb
sub
or
idivb
sbb
fmuls
in
push
sarb
adc
dec
insl
addr16
mov
or
mov
push
fs
push
pop
dec
psubusw
dec
jge
xlat
mov
xor
inc
sbb
sarb
lock
sub
pop
dec
pushf
jge
imul
std
shll
push
lods
sub
sbb
in
dec
cmp
int3
pop
adc
xchg
push
in
aad
test
lcall
enter
mov
mov
cmpsb
std
test
cld
add
clc
movsl
mov
jb
dec
add
pop
popf
lahf
dec
stos
inc
dec
push
sub
ficoml
cmp
jle
fidivrl
js
jo
fisttpll
shll
pop
jmp
add
pop
or
xchg
dec
pop
je
pop
ret
xchg
ret
loop
mov
dec
loope
xor
cmp
pop
dec
nop
inc
cli
stc
cli
fmul
cmc
test
or
loope
test
or
and
fwait
test
xchg
fadd
dec
ljmp
inc
imul
lods
jnp
sarb
dec
pop
mov
lds
es
lods
jp
adc
mov
pop
daa
flds
jmp
clc
inc
lods
inc
sbb
orl
inc
in
dec
inc
or
sbb
hlt
jb
fwait
out
je
insb
sar
cmp
xlat
sbb
pop
mov
sbb
cmc
inc
in
jae
insl
and
fmull
xorl
or
int3
ret
std
dec
fidivs
dec
ja
cmp
jnp
lret
cltd
test
pop
popf
mov
pop
mov
push
cs
jge
fsubrl
jae
jno
add
pop
into
and
int3
stc
cltd
pop
inc
sub
ja
mov
pop
enter
mov
push
sub
dec
sbb
mov
andl
lahf
inc
daa
jl
cmp
xor
imul
and
call
aad
inc
sbb
stos
adc
add
inc
cmp
adc
roll
dec
wbinvd
pop
mov
test
ds
cld
add
scas
mov
jmp
test
mov
lret
inc
std
je
xchg
lret
cld
adc
sbb
orl
hlt
orb
sahf
sbb
inc
cmc
or
jl
dec
or
adc
hlt
int
rclb
xchg
mov
scas
out
jns
and
jle
push
pop
in
iret
sub
xor
lcall
xchg
loop
loopnew
mov
cmp
pop
movsb
dec
rclb
mov
and
lret
ds
sub
and
pop
rcl
adc
test
push
cmp
jnp
push
fildl
xchg
scas
pushf
jnp
cmp
xorl
pop
leave
xor
adc
cmpsb
int
shlb
push
pop
jl
lea
leave
ljmp
add
sub
test
and
inc
aad
xchg
cli
pop
adc
stos
in
in
or
jl
cmp
push
inc
dec
lret
jns
and
mov
out
sbb
aam
das
shrl
cltd
jns
xchg
out
outsb
inc
gs
push
outsl
into
mov
xchg
lret
jecxz
or
mov
cmp
adc
leave
movsb
aad
setge
pushf
mov
jmp
nop
or
cld
adc
test
adc
add
cmp
movb
mov
rcll
dec
sbb
aas
int
fnstenv
setge
mov
push
ljmp
xor
ss
jle
std
into
mov
xor
sbb
outsb
loop
flds
or
inc
enter
fdivrl
xchg
fbstp
cmp
dec
dec
lahf
sbb
xlat
fists
out
outsl
cmpsl
mov
inc
jl
dec
mov
dec
adc
add
xor
inc
std
sub
mov
aam
gs
mov
xchg
into
sub
xlat
cmpsl
sub
jb
fwait
cmp
mov
movzbl
push
in
popl
and
dec
dec
mov
xor
and
jecxz
pop
sub
mov
sbb
aam
int3
mov
push
movsb
std
lea
addr16
stos
cli
or
xor
or
or
dec
mov
adc
lahf
cld
sbb
push
dec
out
push
pusha
cmpsb
int3
adc
fstl
dec
jl
jbe
rorl
ss
movsl
cmp
daa
jg
std
sbb
push
cmp
dec
pop
sahf
out
insl
sub
dec
ret
loopne
mov
shll
or
push
jp
mov
into
test
ja
push
ds
lret
into
mov
add
aam
or
loop
pop
int
jae
je
dec
xchg
repz
dec
xchg
sub
cs
in
fmulp
sub
cmp
imul
dec
xchg
push
mov
fisubs
sub
jp
mov
mov
les
sub
push
insl
cmp
add
mov
or
movsl
das
jb
xchg
mov
inc
repz
lea
jnp
pop
inc
jmp
jns
xor
sbb
xchg
lcall
call
mov
adc
cmpsb
mov
lds
dec
xchg
nop
mov
or
jmp
pop
push
inc
stc
addl
orl
sar
mov
xchg
into
jmp
lea
cld
stc
addr16
movsl
stos
dec
sbb
aas
nop
cld
rorl
jg
push
jno
jge
insb
cs
ret
jae
lds
lahf
lods
xchg
adc
xor
imull
xchg
test
jmp
inc
adc
test
cli
in
mov
adc
xor
lahf
int3
cli
les
xchg
xchg
insb
sub
out
fsubl
add
adc
cmp
cld
aam
movsb
or
mov
push
imul
addr16
xor
es
fwait
in
dec
int3
loop
mov
out
lcall
inc
int
add
add
push
pop
stc
inc
test
sbbl
adc
inc
cmp
loopne
mov
call
test
out
loop
sub
int
cmc
xlat
ja
pushf
leave
int
adc
dec
inc
mov
loop
imul
in
cltd
in
out
ja
sbbl
test
push
dec
cmp
bnd
cmp
inc
sub
mov
mov
ficoml
cmp
dec
fldenv
pop
js
outsb
jb
mov
and
xor
sti
ljmp
jge
jg
xor
nop
aaa
dec
clc
xchg
push
xchg
fmulp
rorw
icebp
pop
je
pop
push
faddl
jbe
test
inc
mov
xchg
popf
jnp
mov
mov
xchg
pop
xchg
repz
rcl
mov
pop
xchg
lods
lahf
fcoms
push
cmp
cmpsl
pushf
adc
xor
and
dec
xchg
or
or
inc
mov
test
xchg
mov
mov
and
adc
mov
push
sub
mov
dec
inc
aam
xchg
xchg
imul
or
pop
mov
jo
jb
push
loope
cmp
dec
and
push
loop
mov
cltd
adc
mov
mov
clc
insl
add
inc
jge
adc
mov
inc
mov
in
subb
testl
je
push
pusha
push
fs
punpcklbw
mov
je
inc
or
ror
into
mov
sub
dec
jnp
mov
mov
pop
pushf
push
movsb
insb
mov
enter
popf
push
mov
movsb
inc
dec
push
js
ja
sbb
in
fmuls
pop
dec
dec
ret
adc
out
sub
movsl
push
adc
sbb
daa
xchg
enter
cltd
xchg
fsubr
dec
in
xchg
pop
das
lcall
in
pushf
lahf
cmpb
scas
and
sub
add
and
sbb
in
fstpt
sub
movb
aad
mov
mov
andl
push
mov
mov
add
dec
xor
mov
out
repz
inc
mov
mov
lea
scas
push
mov
lret
mov
adc
xor
sti
int3
outsl
mov
fcompl
inc
xor
sar
incl
nop
add
movsl
int3
outsb
push
inc
or
mov
repz
jnp
cmp
int3
xchg
stos
in
cmp
mov
leave
lods
test
inc
inc
sub
xor
xchg
inc
pop
daa
mov
pop
inc
ss
jo
dec
sbb
aam
jle
bound
subb
xor
sarb
xorb
push
rolb
jg
stos
aam
mov
sbb
das
stc
sarb
jns
lret
push
shlb
mov
inc
push
in
ds
scas
mov
stos
add
push
dec
add
or
cmp
fistps
pop
loop
push
sub
xor
imulb
inc
or
dec
mov
sbb
cmc
arpl
add
stos
nop
test
add
movsl
cmp
in
cltd
out
sbb
dec
and
jbe
pop
loopne
lods
pop
cmpsl
jae
push
push
jge
fimuls
stc
inc
or
cmovae
add
pop
loop
mov
cmp
frstor
faddl
adc
mov
cmp
arpl
sub
cmp
dec
in
sbb
inc
sbb
lods
mov
mov
in
mov
in
cmpsb
xchg
cmp
sub
test
loop
dec
fistpl
adc
popa
sub
inc
fmull
leave
movsl
call
fldl
push
xor
sbb
movsb
mov
mov
lret
or
fcom
jnp
test
in
lret
ret
lret
push
lcall
aad
in
xor
repnz
inc
rorb
mov
add
xor
ss
mov
inc
mov
fdivrs
movsl
cmpsl
das
add
mov
pusha
loope
pop
xor
test
sbb
sarb
sub
jno
gs
lods
mov
jmp
lahf
frstor
test
xchg
imul
mov
imul
or
out
ds
pop
stc
icebp
lods
lcall
and
jo
cmp
aas
jmp
dec
mov
lret
jp
ljmp
adc
clc
dec
mov
aam
add
dec
stc
hlt
mov
int
push
lods
testb
icebp
and
scas
xchg
or
pop
loope
out
push
std
popa
jbe
popa
shrl
mov
pop
fimull
lahf
loop
sub
cmp
add
add
cmp
outsb
cmpsb
outsb
xchg
cli
sbb
fstpt
push
repz
jle
push
arpl
or
addb
pop
jnp
cmpsb
in
cmp
leave
cli
push
out
add
add
out
inc
xchg
fildll
inc
leave
pop
xchg
in
jne
jo
bound
pop
jo
aam
push
jne
xor
cmovb
mov
cmp
enter
pop
jnp
jmp
mov
mov
dec
call
test
cmc
or
aaa
icebp
sbb
aaa
fucomi
mov
outsb
stc
ret
jmp
sub
or
lods
ficomps
push
fmul
xchg
fldenv
lods
bound
xchg
fadds
fs
mov
xchg
outsl
hlt
aad
pop
fbstp
sbb
insl
orb
add
leave
dec
and
imul
or
out
mull
sub
sbb
pop
push
imul
cmpsb
jge
jo
pop
testb
loop
ficompl
ret
add
mov
call
sti
in
jmp
sbb
hlt
and
xchg
les
xchg
inc
out
shll
jns
les
add
push
enter
scas
mov
jnp
in
inc
cmp
mov
push
dec
xor
mov
jg
out
adc
enter
fistl
jle
mov
sbb
inc
pop
cmp
pop
mov
arpl
sahf
int3
xchg
es
xchg
cli
lret
mov
dec
aad
jns
outsl
jl
outsb
scas
push
pop
repnz
mov
mov
cwtl
push
xchg
adc
jmp
xlat
mov
adc
pop
jbe
jl
lds
mov
test
cmpsl
outsl
mov
movsl
outsb
add
jp
mov
repnz
rorl
clc
insl
xchg
in
iret
pop
out
jae
push
arpl
adc
xchg
sti
fwait
xchg
out
pop
sbb
js
cli
push
push
sbb
sti
push
jge
repz
mov
push
dec
mov
idivb
sbb
inc
insb
mov
mov
cmp
adc
rcl
lret
dec
cs
jbe
cli
adc
xchg
dec
sahf
cmpsl
test
or
jmp
test
andb
and
cli
sbb
xlat
adc
es
rcll
nop
pop
cmpsl
in
shlb
mov
outsb
dec
mov
fdivrl
pusha
sarb
outsl
rorb
cwtl
lds
xchg
cld
mov
lret
push
filds
cmp
cmc
jge
ds
mov
and
cli
xchg
sbb
or
lea
add
cmpsl
pop
stos
lret
dec
roll
test
pop
rcrb
add
or
adc
addr16
push
lret
push
xor
cs
test
test
adc
call
dec
popa
adc
in
inc
sub
test
add
ss
push
and
insb
or
and
xorb
dec
mov
aas
or
push
and
jne
lahf
push
add
mov
sbb
jg
xchg
ljmp
aam
mov
sbb
sub
stos
jl
jp
push
loopne
xchg
pop
jp
adc
push
mov
lea
jb
mov
fwait
andl
test
nop
pop
dec
or
inc
dec
loopne
sbb
push
fldenv
divl
cmp
movsb
imul
cmp
and
mov
or
scas
ljmp
rcrl
add
and
aas
sbb
stos
jmp
or
lds
cmp
adc
mov
xchg
stos
inc
sti
jge
cmc
pop
loope
into
mov
or
mov
adc
mov
jecxz
ds
shrb
mov
out
adc
cld
pop
xchg
sbb
mov
push
ljmp
mov
aam
aas
lds
int3
sarb
dec
jns
dec
int3
jmp
jle
pop
xchg
in
fdivrs
mov
jo
movsb
loop
test
cltd
fcmovbe
lds
inc
cmc
insl
mov
nop
ja
arpl
mov
push
lcall
loopne
jp
std
imul
sub
xlat
adc
fimuls
imul
test
ret
mov
mov
jne
fisubrs
xor
jg
xor
jo
out
jbe
mov
addr16
sbb
mov
cs
jle
sbb
cwtl
inc
mov
cmp
loopne
aam
lret
mov
jns
xor
sbb
test
dec
pop
mov
xchg
hlt
jg
push
push
jns
and
mov
cmpsb
inc
push
sub
or
mov
add
clc
nop
sbb
daa
lods
and
mov
xchg
pop
ja
xchg
inc
lcall
out
lret
mov
call
ljmp
mov
sub
and
inc
push
lock
es
out
je
sbb
icebp
pusha
movhps
xor
mov
xor
sti
movsl
shrl
push
dec
outsl
xor
lods
and
enter
in
pushf
loop
or
insb
sbb
clc
fadds
inc
mov
rclb
pop
imul
xor
scas
out
mov
aad
les
repz
outsb
jne
jecxz
mov
sub
mov
ds
mov
pop
mov
cmp
leave
inc
push
push
icebp
mov
mov
cmp
mov
and
popf
insb
mov
jno
or
test
xchg
dec
sbb
pop
scas
repnz
repnz
mov
jno
test
ja
push
scas
rclb
cmp
repz
in
pop
cmpsb
testb
cmp
jbe
push
sbb
mov
leave
popa
mov
out
fmul
mov
insb
cmp
test
sti
cmp
cmp
adcb
scas
lea
shrb
mov
mov
stc
cltd
nop
dec
cltd
iret
leave
add
mov
gs
or
and
test
push
xor
xor
push
dec
test
jecxz
push
xor
mov
lahf
data16
loopne
test
mov
jmp
jns
lcall
movsb
add
enter
std
xchg
jne
aam
adc
loopne,pt
out
or
in
or
pop
mov
fmull
sub
xchg
adc
sti
add
lods
jo
mov
xchg
arpl
inc
ss
cmp
in
cwtl
leave
or
add
or
pop
lret
xchg
mov
mov
pop
add
adc
sbb
int3
call
mov
mov
mov
mov
mov
lcall
call
adc
xchg
cmp
dec
jo
loopne
sub
sbb
pop
inc
test
adc
imul
xor
inc
add
call
sub
imul
fdivp
or
cld
cmp
pop
inc
leave
loope
je
ljmp
test
adc
or
push
jg
adc
add
adc
test
pop
push
hlt
add
mov
jne
xor
nop
pop
cmp
push
jb
xlat
dec
cmpsb
stos
ret
ret
and
dec
or
xorl
scas
and
loopne
pop
and
xchg
inc
cmp
xor
addb
cmp
bnd
imul
scas
ret
cmp
and
pop
cmp
push
add
daa
dec
mov
dec
sub
xchg
jno
in
aas
xor
push
xchg
inc
fildl
sbb
loope
dec
mov
aad
lret
movsl
cmp
xor
lock
roll
pop
add
xlat
aam
inc
pop
repnz
xchg
sbb
push
cmpsl
fsubrl
sbbl
or
lock
hlt
lods
test
hlt
orl
sbb
mov
xchg
out
sub
imul
sarb
mov
pop
adcl
nop
mov
stc
push
rorb
lcall
shlb
xor
aas
gs
js
ficoml
arpl
pop
sub
mov
push
icebp
iret
add
cmp
push
pop
sbb
test
pusha
dec
repnz
and
inc
mov
cmp
mov
imul
push
arpl
or
xor
test
and
jbe
sub
xchg
push
aaa
lret
ret
mov
mov
mov
jbe
or
imul
lds
lcall
outsb
in
pop
rcl
js
pop
xchg
pop
lods
mov
stc
mov
fdivrl
outsl
cmpsb
lret
or
xor
pop
fidivrs
lret
notl
loop
rclb
in
lods
jb
xlat
ja
sub
aam
sub
es
and
inc
push
rcrb
adc
aas
mov
or
into
addr16
xchg
lret
cmp
sbb
add
sub
cmp
fwait
dec
jmp
or
jbe
arpl
xor
adc
loopne
xor
sbb
add
in
jb
mov
add
lahf
cs
insb
lock
add
mov
pop
ljmp
mov
inc
pop
fwait
daa
push
push
cmc
loope
sbb
lret
inc
pop
add
out
ss
or
out
sbb
pop
xchg
outsb
cmp
sbb
and
xchg
pusha
insb
aaa
cmc
aas
setae
push
movsb
call
decb
sub
rorl
push
test
test
out
xor
fmulp
aam
adc
pop
add
pop
fsub
decb
inc
fstpl
jb
jg
xlat
das
ja
mov
jo
cmp
xor
ss
xor
push
push
dec
cld
jne
sub
sbb
insb
inc
cld
adc
in
jae
mov
shll
add
movsb
hlt
inc
mov
insl
xchg
mov
int
mov
cld
enter
push
xor
pop
sbb
push
jb
outsl
xchg
fs
in
cmp
movsl
jb
jbe
test
or
mov
sbb
inc
mov
mov
pop
scas
leave
insl
adcb
add
adc
mov
int
push
dec
inc
jle
rcrl
lds
mov
lods
mov
xchg
or
test
inc
dec
adc
pop
mov
xchg
and
pop
dec
push
xor
movsb
das
mov
mov
lock
aaa
scas
decb
jl
insl
roll
cmpsb
xchg
divl
aam
scas
call
hlt
iret
fldenv
data16
in
popf
jb
fistpl
insb
push
mov
push
int
and
mov
sub
pslld
dec
push
sbb
js
ret
aam
scas
out
mov
cmp
pop
es
push
mov
cltd
pusha
mov
pop
lods
xchg
pop
jge
dec
sub
cmpsl
sub
icebp
jg
lods
cmpsl
push
dec
mov
es
addr16
adc
or
mov
arpl
jnp
pop
lods
inc
push
cli
iret
das
sti
dec
scas
push
call
xchg
push
adc
fidivrs
pop
stc
mov
cltd
xchg
inc
sub
das
xchg
int3
jo
cmp
sub
mov
sbb
mov
faddl
ljmp
ja
mov
int3
lods
push
imul
mov
in
sti
jle
dec
in
adcl
je
sub
loop
pop
dec
add
add
adc
leave
push
inc
loop
gs
sub
push
ja
push
pop
std
dec
es
mov
push
xor
add
int3
jge
mov
in
lea
lds
enter
jge
xchg
push
and
adc
adc
dec
inc
dec
xor
fwait
inc
mov
lcall
pushf
roll
xchg
in
dec
flds
mull
pop
push
ds
cli
rcrl
roll
mov
test
int3
test
mov
loope
mov
xor
mov
and
js
rcr
out
ljmp
in
shlb
jp
xorb
mov
add
jae
dec
outsb
xorb
lret
movsl
push
enter
mov
mov
xchg
lcall
and
fistl
mov
mov
inc
cmc
or
lret
cltd
or
adc
push
std
xor
mov
mov
loopne
or
outsl
lods
daa
sub
pop
push
pop
xor
add
sub
xor
mov
xlat
insb
jns
push
pop
lods
xchg
std
mov
push
mov
loope
xchg
aad
test
mov
and
cmpsl
xchg
cmp
dec
xor
adc
rcl
jecxz
fstpl
andl
popa
xor
ds
mov
and
dec
leave
adcb
movsl
fidivl
adc
out
nop
add
aam
add
cmc
jmp
jmp
jg
jge
lahf
pop
or
dec
or
push
movsb
xor
push
xor
stos
push
dec
addr16
cmpsl
mov
xchg
xchg
repnz
test
fdivl
js
mov
loope
cmp
dec
clc
dec
push
popa
mov
cmp
pusha
addb
jl
pop
popf
out
cmc
fstpt
cwtl
dec
ret
in
lock
push
add
mov
xchg
jnp
mov
mov
mov
mov
pusha
and
movsb
fxch
adc
lds
pushf
jbe
pop
cmp
addr16
xchg
ss
mov
in
and
notl
loop
dec
aas
sahf
dec
sbb
xor
in
lret
stc
sub
xchg
rcl
add
nop
xlat
cmpsl
movsl
lock
fidivs
insl
lret
mov
push
nop
stos
push
inc
fldl
loop
sub
dec
push
add
dec
mov
fs
daa
xchg
mov
mov
in
xchg
dec
lock
enter
pop
push
stc
sub
gs
mov
push
inc
movsl
loope
mov
sbb
inc
in
mov
jmp
int
das
mov
test
lret
pop
notl
jl
scas
insb
push
scas
or
and
inc
lcall
xchg
push
lret
xchg
jge
pop
push
outsl
push
inc
or
test
js
lret
sbb
xlat
adc
push
cmpsb
mov
lods
mov
pop
out
push
xchg
pop
lahf
rcl
mov
cmp
push
pop
xor
loop
jns
cs
aaa
adcl
inc
daa
jo
jg
or
int3
push
mov
xchg
aam
mov
ja
jl
jb
das
or
ds
rolb
mov
sbb
jg
lds
sbb
int3
or
and
xor
out
jp
jl
stos
add
hlt
cltd
nop
sbb
pop
scas
mov
mov
lret
testl
mov
test
out
and
mov
testb
jno
cmpsb
lret
pop
pop
movsl
outsb
sbb
sub
js
cmp
arpl
cmp
sub
data16
fisubl
movsb
adc
cmp
mov
pop
cmpsb
jge
mov
or
jmp
push
xchg
push
es
dec
sbb
data16
mov
mov
ffree
popf
aaa
adc
add
add
lods
das
xlat
mov
rcll
lret
sub
int3
mov
sub
adc
sub
xchg
sbb
jbe
dec
test
imul
mov
adc
outsl
cmp
mov
or
or
xchg
popf
xchg
test
xor
xchg
pop
nop
xchg
xor
adc
leave
int
repz
mov
mov
inc
lret
in
pop
jne
imul
and
or
clc
pop
dec
aaa
cmpsb
cmp
pop
sub
lds
repnz
push
adc
xchg
scas
fsubl
bound
sti
jb
cwtl
and
movsb
icebp
jb
and
dec
add
lods
in
jbe
ja
inc
les
jno
push
cmp
mov
jne
movsb
ret
sub
iret
sub
inc
add
jmp
in
in
mov
in
dec
sbb
lods
mov
repnz
in
aam
sub
cmpsl
adc
cmpsl
ret
jl
dec
jo
jnp
iret
inc
pop
xchg
push
xchg
addb
push
pop
xchg
pop
jmp
adc
aas
cmp
js
push
ret
repz
cmc
scas
es
jae
push
inc
rcl
mov
gs
sbb
lea
aam
cmp
sub
and
insl
xlat
shlb
scas
jmp
sub
imul
int3
push
pop
mov
and
lock
out
add
cmp
cmpsb
mov
xchg
jl
addb
xchg
inc
jmp
cmp
icebp
jmp
aas
int3
add
scas
leave
loopne
into
das
ret
aam
add
out
mov
and
jno
gs
pop
xor
out
fidivrl
sub
push
pop
pop
push
out
lea
lcall
outsb
call
mov
fnstenv
push
pop
mov
data16
jl
dec
jne
psubsb
pop
mov
sub
xchg
out
push
movsb
aam
imul
addr16
icebp
icebp
test
mov
mov
push
inc
testb
or
xchg
sub
inc
xor
roll
lods
or
aaa
push
or
cld
cltd
movsb
lock
cwtl
insl
jle
into
sbb
icebp
jg
push
add
push
pop
push
xlat
mov
pause
inc
into
scas
dec
pop
ret
scas
sti
push
cld
test
movsb
adc
inc
jnp
inc
xor
push
icebp
jae
xor
sahf
mov
inc
out
std
jae
ds
mov
dec
mov
shll
fimull
stos
mov
stos
fmulp
mov
mov
push
sub
idivb
jp
adc
in
out
mov
adc
bound
dec
repz
mov
scas
pop
or
cs
nop
arpl
outsb
jl
or
sarb
lahf
xor
test
dec
xchg
fistps
xor
fidivs
xchg
enter
push
add
sti
sub
dec
sub
jge
rolb
xor
or
dec
adc
addb
lds
dec
mov
cmpsl
jle
sub
mov
adc
lea
into
scas
aad
push
lods
cmp
sti
lods
fcoml
inc
cmp
repnz
enter
jmpw
sbb
pop
xorb
cmp
adc
adc
pushf
je
into
or
inc
pop
push
stos
popa
add
out
inc
frstor
or
inc
add
out
cmpsl
insl
insb
bound
sub
adc
xlat
lret
cs
loopne
ja
cwtl
mov
mov
aad
mov
dec
jno
mov
and
jae
mov
enter
cmpsl
movsb
add
jle
jno
mov
lods
mov
out
imull
sub
call
in
push
dec
xor
and
in
xchg
xchg
es
cmp
and
adc
aad
test
and
sub
mov
daa
push
sub
push
xchg
pmullw
xchg
aam
and
push
fs
cwtl
push
pop
xchg
nop
dec
imul
mov
push
and
sbb
dec
rolb
push
sbb
push
mov
stc
jbe
mov
mov
adc
gs
shlb
aaa
adcb
dec
mov
push
lcall
jp
sbb
int
out
out
cmp
mov
push
xchg
sbb
daa
stos
test
sub
daa
bound
lds
mov
test
jnp
sbb
cld
jmp
stos
fimuls
aam
adc
pushf
mov
xchg
loopne
push
ror
aas
jbe
jno
insl
mov
out
mov
je
and
push
aas
in
lock
xchg
jbe
pushw
js
mov
inc
add
fwait
mov
hlt
pop
cmc
pop
out
cmc
fiaddl
in
insl
sahf
mov
imul
out
add
push
or
sbb
inc
push
adc
outsl
repz
and
mov
inc
jb
out
ret
fstl
mov
clc
push
mov
mov
call
mov
into
cmp
mov
into
mov
mov
mov
and
sbb
jo
and
mov
push
shll
pushl
fnstenv
inc
in
mov
push
cli
loopne
jbe
xor
xor
rorb
inc
sar
bound
add
popf
or
popf
lods
add
mov
xchg
sbb
pop
je
vcvtsi2ssl
gs
int3
inc
lods
mov
cli
xchg
inc
aam
sbbb
cmpb
mov
scas
pop
cmp
push
push
test
leave
es
push
test
ret
js
loopne
sbb
dec
fsubl
outsb
hlt
cmpb
sbb
idivl
adcb
addr16
push
aaa
pop
test
imul
loopne
adc
dec
xor
jecxz
push
or
mov
mov
int3
add
bound
mov
adc
inc
ja
jle
lea
stos
push
add
sub
cmpsl
pop
arpl
aam
adc
xchg
bound
lahf
add
dec
fadds
mov
dec
xor
dec
push
movsb
sbb
aad
in
xchg
shlb
mov
mov
fstpl
es
adc
pop
mov
pop
cmp
sub
push
rcrl
fmull
push
mov
pop
add
cwtl
and
add
sti
mov
fiaddl
cmp
lret
and
fwait
fsubrs
js
js
fldenv
mov
aad
fldt
or
imul
xor
pop
and
mov
jp
fistpl
ja
cmp
add
cmpsb
pusha
push
jne
stos
repnz
pop
mov
inc
jo
leave
addb
push
sub
mov
cmp
xchg
inc
sbb
jmp
sub
adc
pop
dec
icebp
push
or
fidivs
orl
add
xchg
mov
les
test
pop
mov
and
sub
mov
dec
sbb
dec
cmp
data16
sbb
sti
into
jmp
lahf
cli
mov
xchg
push
and
fbstp
roll
lods
out
dec
dec
fistpll
or
sbb
push
sub
and
dec
ljmp
shrb
stc
xor
fisttpl
jle
shr
movsl
setp
inc
sub
ret
xlat
sbb
mov
shr
iret
sub
addr16
push
jmp
sar
push
cmp
dec
add
sbb
lret
test
cmp
test
pop
lahf
add
outsl
mov
fsubrl
sub
xlat
push
jg
hlt
ljmp
daa
aaa
mov
out
inc
ja
xchg
adc
scas
fistpl
pop
cmp
ret
pop
mov
add
in
imul
sar
add
jae
dec
add
add
sti
subl
rcrb
fs
xor
out
in
push
pop
adc
pop
movb
jmp
popf
lcall
dec
aam
repnz
shrl
arpl
stos
xor
test
sbb
popf
sub
mov
jae
pop
fcomps
mov
mov
jmp
out
jno
push
fnstsw
dec
sub
in
cmpsl
xor
leave
adc
adc
movsl
mov
dec
aam
cmp
fwait
mov
lds
jo
arpl
jle
jle
notl
push
push
inc
or
jb
cmp
insb
sub
and
out
sub
leave
movsl
fildl
data16
cwtl
add
push
or
cmp
dec
sbbb
add
add
push
jp
filds
fcom
fildll
lret
pop
mov
popf
mov
push
sbb
in
sub
fucomi
xchg
pop
push
xchg
lret
inc
cld
mov
les
xchg
fcoms
int
stos
int
adc
das
mov
sbb
nop
jno
hlt
add
fstpt
mov
in
cmc
fiadds
or
test
data16
hlt
and
loope
mov
outsl
lret
pop
je
es
cmp
fs
sbb
push
nop
fcomip
jnp
cld
addb
push
addl
mov
sar
vphaddbw
cmp
mov
mov
mov
lret
or
mov
scas
lcall
cli
mov
sti
jg
sbb
pop
incb
ret
into
mov
add
test
jg
jbe
sub
xor
push
movsb
dec
ficoms
aas
outsl
jmp
jecxz
or
icebp
dec
fs
stos
or
or
imul
adc
test
push
pop
int3
imull
add
cwtl
or
sub
repnz
mov
cmp
dec
pusha
sbb
mov
or
mov
mov
movnti
cmpsb
push
cmp
jmp
adc
shr
sbb
push
pop
mov
pop
jb
adc
lret
popa
bswap
pushf
nop
sbb
xor
sbb
mov
dec
inc
inc
cmpb
daa
xchg
lret
mov
test
xchg
xchg
jnp
out
pop
movsl
adc
push
mov
out
cs
push
sti
push
jg
xchg
mov
mov
mov
cmpsb
mov
inc
sti
sbb
push
and
ss
and
aaa
cmpl
cmp
mov
pop
push
xlat
jl
daa
mov
adc
fwait
inc
gs
into
cld
lock
gs
out
sti
iret
dec
rorl
dec
and
push
lcall
jg
push
fwait
and
imul
xchg
mov
pop
stos
sub
fsqrt
xchg
std
and
lea
ja
xchg
ljmp
sub
mov
push
js
push
fucomi
mov
cmp
scas
inc
or
add
stos
push
sub
addr16
sub
cmpsb
add
jecxz
mov
fnstenv
shll
pop
inc
and
nop
scas
or
and
jne
mov
mov
xchg
popa
lds
pop
fucom
push
mov
mull
pop
aam
aad
adc
pop
and
mov
dec
pslld
mov
iret
fs
inc
mov
and
mov
push
ficomps
mov
test
inc
sub
cmp
jmp
cmp
mov
movsb
or
jg
xor
mov
pusha
mov
daa
scas
xchg
jnp
xchg
daa
movsb
add
adc
xor
js
call
lds
cmp
loop
or
mov
xchg
mov
or
lea
sub
jge
sub
mov
xchg
and
cs
jl
daa
dec
cli
jl
dec
or
mov
insb
adc
xor
stos
inc
inc
imul
xchg
fsubl
jno
add
loopne
and
cmp
pop
jg
loope
jmp
sub
sahf
ja,pt
repnz
rcll
or
cli
xor
cmp
ficompl
out
int
inc
jns
cmc
dec
inc
inc
sbb
mov
shll
decl
call
inc
and
or
push
adc
jp
jg
inc
pusha
ret
fs
inc
out
sbb
xor
pop
sti
inc
in
xorl
jo
push
outsb
call
clc
roll
or
jns
jne
scas
mov
pop
es
push
cmp
mov
add
pop
inc
cld
jp
xchg
test
inc
pop
mov
fisubl
push
push
jnp
test
adc
mov
jns
stos
inc
mov
ljmp
js
leave
xor
sub
arpl
jmp
or
add
mov
pop
xchg
into
add
cwtl
aas
and
dec
mov
repnz
sbb
clc
cwtl
cli
jb
pop
addr16
outsb
out
cmpsb
ret
lock
mov
dec
xor
lock
or
out
mov
vaddpd
mov
pop
adc
add
test
lds
loopne
xor
push
jg
fwait
cmp
pop
and
sbbb
adc
arpl
test
pmulhuw
adc
in
mov
push
push
mov
pop
out
mov
cmp
sub
jecxz
jge
pushf
repnz
mov
fwait
jg
popa
xchg
lds
or
aas
adc
adc
sbb
mov
js
mov
pop
mov
adc
sbb
imul
es
pop
shr
test
mov
adc
daa
mov
mov
sbb
and
dec
test
into
or
mov
scas
pop
mov
dec
imul
lcall
jae
loop
mov
xor
fistpll
push
outsl
inc
loop
imul
adc
push
cmp
mov
push
ss
inc
loopne
jne
mov
cmp
les
mov
fs
imul
push
int3
pop
into
push
mov
dec
jecxz
mov
movsb
outsb
out
pop
dec
stc
jae
aad
fidivl
loope
mov
int
mov
sbb
loopne
xchg
repnz
mov
test
fnstsw
out
cmp
test
sub
or
jae
out
sbb
test
inc
push
sub
test
dec
jb
mov
add
mov
dec
clc
adc
sahf
adc
in
ja
mov
mov
cmc
call
sahf
adc
mov
adc
int
inc
mov
sbb
adcl
dec
and
inc
jg
push
outsb
cmc
test
outsb
cmp
data16
cltd
mov
dec
mov
jmp
subl
out
xchg
rcrl
rorb
fwait
sub
lea
in
fsubrp
adc
leave
and
mov
push
aas
sub
inc
es
movsb
xor
stc
fcomp
add
test
sub
xor
pop
jecxz
mov
outsb
int3
xor
cwtl
test
ljmp
int
lahf
aad
mov
or
xor
jno
repnz
movsl
out
leave
jae
cmc
inc
and
mov
dec
pop
push
push
popa
xchg
jbe
sub
sbb
fnstenv
jns
push
hlt
les
jb
mov
lods
test
mov
es
out
sub
xchg
xlat
cmpsl
fldt
fdivrl
dec
jnp
jns
call
scas
jp
dec
inc
mov
icebp
fucomp
xlat
sub
push
adc
jb
pusha
push
inc
fstl
adc
mov
or
lcall
int3
sbb
pop
push
std
fsts
pop
push
popa
int
jno
ss
call
lahf
inc
cmp
pop
push
dec
pop
leave
bound
insb
jmp
ret
ret
jmp
mov
cld
fnstenv
lods
xchg
mov
jmp
jne
push
push
and
js
rol
mov
aam
jno
mov
scas
xchg
and
dec
les
dec
int3
xor
movsb
pop
add
test
sbb
out
subb
xchg
leave
mov
test
aaa
push
cmp
fisubrs
pop
push
adc
rolb
cmpsb
jnp
lcall
mov
filds
jge
andl
je
and
hlt
scas
push
push
fyl2x
push
xchg
flds
or
bound
gs
or
mov
sub
mov
fcmove
mov
aaa
mull
adc
xor
stos
outsb
or
jmp
sbb
jbe
xor
aam
adc
sti
jo
rol
xchg
or
mov
arpl
das
mov
outsl
mov
jae
jb
fcompp
mov
jne
mov
pop
xlat
cmp
and
sbb
sub
std
add
sub
popf
xor
pop
shlb
add
daa
jle
cwtl
sbb
mov
and
ds
call
cmpsb
ljmp
lahf
mov
and
jmp
outsb
jbe
aam
testl
and
mov
and
inc
sbb
fxch
cs
mov
lods
mov
fadds
dec
dec
push
push
jno
push
ljmp
lret
mov
int3
push
mov
addb
mov
int
mov
fsts
out
les
lahf
es
pop
les
mov
or
cs
lret
jns
dec
into
fcmovne
loopne
dec
jmp
cmp
xchg
divb
clc
fsubl
test
rcrl
jle
pop
cmp
lock
sub
mov
pop
arpl
mov
or
mov
popf
and
inc
adc
pushf
insl
clc
push
jns
or
pop
jl
test
mov
repnz
fnsave
jg
sti
add
jmp
je
adc
jmp
sahf
ret
push
push
stc
pop
out
iret
icebp
fdivr
mov
adc
gs
sub
inc
lret
stos
jb
call
sbb
and
orb
adc
call
out
jo
mov
pop
adc
pop
rorb
daa
mov
ret
pushf
out
int3
and
push
or
push
pop
xchg
imul
adc
in
leave
insl
mov
mov
xchg
push
dec
add
scas
push
pop
inc
or
or
or
fwait
pop
cmpsl
mov
out
gs
test
cmpl
enter
imul
mov
push
sbb
jbe
jns
or
cmpsb
fdivrs
jno
or
xchg
cmpsb
push
adc
mov
mov
mov
sahf
and
jecxz
lret
and
insb
xchg
scas
sbb
pop
and
push
jle
pop
fmul
push
and
mov
lods
cmp
nop
adc
stos
dec
mov
mov
sahf
inc
mov
sub
add
push
sahf
fsts
or
pusha
xor
mov
xchg
test
dec
dec
in
rorb
jge
mulb
imul
or
mov
hlt
in
jae
push
scas
call
push
vpsignd
xor
leave
insb
lock
and
adc
daa
mov
mov
das
cmpsb
cmpsl
mov
pushf
ret
mov
je
xor
cmp
sub
jg
push
pop
mov
cmpsl
imul
lret
or
insb
ss
or
daa
mov
js
push
pop
lds
fsubl
mov
lcall
dec
cmpsb
cmp
xor
inc
movntq
out
shlb
xchg
jg
cli
stc
jl
orl
ret
sub
adc
xchg
lock
sbb
push
out
lcall
pop
and
and
or
inc
ret
mov
cltd
dec
nop
in
pop
aas
ret
sub
or
jg
shrb
fbld
pop
jo
mov
adc
inc
in
dec
enter
pop
mov
push
lods
popa
pop
imul
fistl
movsl
inc
lds
pusha
mov
icebp
mov
test
jno
adc
les
cmp
inc
clc
lods
inc
int3
aas
mov
xlat
nop
mov
push
or
cwtl
push
ret
jmp
in
sub
pop
ljmp
dec
xchg
cmp
ss
push
lock
mov
or
mov
add
or
ret
or
int
lret
test
scas
fcmovne
in
pop
xlat
jbe
mov
cwtl
xchg
sub
cmc
xchg
mov
lcall
jecxz
jmp
and
lds
adc
pusha
or
lret
jecxz
mov
adc
push
mov
aad
pop
dec
je
cmp
ljmp
addl
dec
inc
pop
mov
daa
out
fprem1
cmp
je
inc
pop
xor
xchg
or
fistl
cltd
aas
imul
inc
cmp
pop
add
and
jnp
cs
movsb
aas
test
lahf
in
xor
xchg
mov
inc
out
andb
rcll
clc
movsb
sub
clc
push
sbb
push
pushf
scas
cmovbe
sahf
pop
xlat
push
dec
arpl
or
ja
in
in
mov
xor
jge
outsb
adc
orl
xchg
sub
cmpsl
mov
push
clc
cmp
lds
fsubr
mov
lret
sbb
das
stc
dec
dec
shll
stos
out
jbe
xchg
movsb
lret
xchg
aad
dec
int
loope
push
lds
jno
lcall
xor
jmp
rorb
or
jge
xor
sub
add
lea
push
iret
sbb
lcall
mov
pusha
out
test
andb
lea
ret
push
notl
fisubl
sbb
mov
out
mov
and
push
push
add
xchg
imul
pop
mov
mov
xchg
dec
push
out
cwtl
fld
scas
cmp
sub
pop
dec
mul
mov
insb
push
mov
filds
cld
mov
mov
bound
mov
lret
push
fldl
mov
add
xchg
ja
adc
out
xor
dec
push
xchg
bound
mov
xchg
into
cmp
push
and
xchg
xchg
dec
xor
inc
xchg
shlb
xchg
loope
or
mov
popl
xor
daa
add
dec
jbe
xchg
and
add
ja
cmc
test
push
fisubrl
push
scas
sub
xchg
sahf
pop
jle
call
jns
sbb
shrb
int
repz
push
leave
pop
mov
dec
sbb
into
push
rorb
and
jb
shlb
testb
and
pushw
sbb
pop
into
pop
jb
jle
addr16
mov
sbb
inc
stos
cmp
loopne
sbbb
dec
or
and
or
dec
dec
in
jo
movsb
icebp
dec
mov
xchg
xor
out
xor
jge
call
out
jne
loope
scas
xchg
clc
js
int
push
push
cmp
inc
add
inc
jnp
imul
es
ret
push
and
movsb
std
jae
xchg
scas
aaa
add
adcl
and
testb
mov
xor
xchg
push
add
mov
mov
frstor
outsb
or
inc
jbe
ljmp
add
sahf
movsb
daa
sbb
js
jbe
sbb
iret
fcoms
jo
nop
or
inc
mov
in
lahf
sub
or
cmp
lret
adc
fwait
out
std
loopne
and
mov
dec
loope
or
xchg
fstl
add
add
jmp
push
cmp
je
mov
jg
xor
and
movsl
ljmp
xchg
mov
dec
mov
cmc
loopne
sbb
ss
sti
mov
cltd
mov
rorl
movsb
pushf
aam
and
es
mov
mov
sarl
xor
mov
add
mov
or
cmpsw
rcll
data16
aaa
mull
pop
push
fsubrs
out
pop
fcoml
push
xor
mov
scas
mov
rcr
imulb
xchg
mov
lret
nop
or
jae
pop
dec
popf
ss
xor
fmuls
xchg
daa
inc
mov
xor
sarl
sub
nop
and
adc
fcom
or
pusha
jb
stos
push
jmp
mov
push
sbb
cmpsb
call
or
xchg
lcall
cwtl
pop
daa
movl
imul
add
mov
or
jb
addr16
sub
filds
das
inc
pop
leave
xor
stos
scas
push
and
lea
dec
sbb
divb
inc
aam
adc
xchg
cmp
sbb
and
add
add
outsl
sbb
mov
dec
testl
cmp
xchg
jae
outsb
inc
dec
ret
movsl
xchg
mov
dec
or
inc
aaa
bound
bound
xchg
outsb
and
jno
xlat
das
push
dec
adc
fsubrl
testl
ja
test
out
out
mov
lds
loopne
pop
aaa
jbe
push
ret
je
and
hlt
and
sub
outsb
cli
test
das
pop
push
mov
sbb
mov
sti
add
pop
adc
jg
cmc
data16
dec
add
test
call
sub
ret
pusha
xchg
inc
notb
lahf
into
in
popf
inc
jle
inc
lret
push
inc
jp
push
addr16
movsb
ret
arpl
push
ss
mov
xchg
dec
pop
mov
in
int
jns
push
xor
idivb
xchg
xor
aas
or
inc
stos
shlb
jae
loope
out
lock
popf
pop
mov
jns
fnstcw
out
enter
sbb
lahf
sbb
aaa
mov
jae
cli
xlat
cwtl
jae
pop
jl
sbb
mov
mov
daa
jle
stos
sbbb
sbbl
pop
mov
mov
adc
and
cmpsl
loopne
jge
in
push
lret
rcrl
dec
mov
out
sbb
sub
and
cmp
inc
flds
iret
in
xchg
xor
push
sbb
aas
insb
sahf
push
cmpsl
and
jae
mov
push
jmp
loope
xor
sbbl
mov
lods
push
insl
lahf
lods
dec
cmp
jne
enter
and
movsb
leave
xor
inc
jle
sbb
or
or
lods
loop
push
xchg
cli
imul
cmc
push
pop
xor
lret
fcmovbe
mov
jmp
lea
sbb
or
and
add
out
pop
xor
addb
dec
lods
jp
push
rcll
nop
cmpsl
cmp
xor
lret
and
pop
xlat
inc
sbb
js
imul
in
sub
into
outsb
fidivrs
cmp
lret
outsl
fsubs
pop
sub
inc
dec
inc
lods
lcall
daa
seto
pop
rclb
fcmovb
inc
push
mov
stc
jge
cmp
pop
repz
inc
cmpsl
dec
inc
decl
xchg
lock
cli
adc
push
fidivrs
mov
outsb
or
or
fisubl
push
fdivrs
cmp
ljmp
xlat
inc
mov
mov
xor
rol
sbbl
inc
dec
or
add
xchg
xchg
xchg
cwtl
out
fildll
sub
insb
jo
fwait
xchg
inc
sbb
xor
aas
outsl
insl
outsl
jg
add
ljmp
inc
lahf
inc
xor
fbld
cmp
cmc
mov
mov
arpl
lret
movsl
cmp
movsl
xor
shlb
in
movsb
push
jmp
imul
fadds
mov
into
mov
lahf
xchg
idivl
xchg
aas
mov
jbe
pop
xor
mov
sbb
fcmove
cmp
ljmp
pushf
mov
xor
xorb
outsb
fdivl
jb
fisubrs
push
sbb
mov
inc
xor
push
fwait
clc
int
lret
push
xor
int
xchg
sbb
call
cmp
fimuls
push
xor
push
add
mov
fdivl
addr16
mov
xchg
js
pop
repz
stos
sbb
cmpsl
fsubrl
loopne
dec
test
in
in
inc
sub
leave
mov
pop
mov
jmp
mov
lret
and
roll
push
mov
test
cmpsb
add
and
dec
mov
pop
imul
std
inc
or
xchg
stos
lahf
xor
lods
mov
ja
mov
cli
mov
sub
push
push
cld
dec
ss
sahf
scas
push
addb
rorb
sbb
xchg
in
jp
testl
enter
nop
pop
shlb
movsl
dec
sub
es
clc
xor
aad
aad
mov
sti
mov
jo
daa
sub
pop
mov
xchg
subb
sub
cmp
repz
mov
cli
imul
dec
jl
stc
push
mov
faddp
add
lret
xor
popl
test
mov
inc
or
sbb
jne
scas
and
push
push
add
gs
jg
outsl
fstp
mov
mov
aas
in
cmp
leave
xchg
fsub
cmp
xchg
aad
dec
mov
adcl
repz
xchg
movsb
push
xchg
xchg
movsl
out
das
jmp
mov
jns
cld
cli
pop
das
stos
imulb
into
adc
hlt
mov
inc
fwait
stos
jmp
or
dec
mov
jl
and
sub
lret
cwtl
mov
int
or
negb
mov
jg
push
dec
mov
add
orl
test
loop
sahf
xor
outsl
jbe
adc
lcall
pop
bnd
cwtl
mov
jp
mov
inc
sarb
repz
leave
add
loope
cld
int
or
addr16
sub
shrb
push
fimull
jge
lcall
and
sub
add
pop
les
clc
imul
and
jge
mov
cmpsb
popa
jge
adc
or
cmp
faddl
jbe
and
insl
cmpsb
cmp
push
iret
pop
aad
add
and
pushf
sub
mov
sub
xchg
loopne
jae
lds
call
xor
mov
jbe
inc
xchg
movsl
sahf
cld
cmp
jl
daa
call
repz
jle
into
into
daa
shlb
sub
sub
dec
data16
das
out
lods
push
xchg
or
cmp
jnp
push
push
jmp
push
mov
stos
inc
mov
fisttpll
push
push
dec
push
adc
inc
jl
add
sub
xchg
mov
xor
cmp
xchg
inc
les
icebp
or
aas
out
sub
shll
es
xor
int3
int
dec
andl
jle
adc
xchg
push
push
popa
lods
out
loope
sbb
xor
scas
lods
rcrl
xor
lods
pop
or
inc
daa
add
cmpsb
lcall
or
mov
pop
flds
sbb
leave
mov
mov
mov
xor
xchg
xor
jecxz
xchg
inc
mov
shll
gs
js
jbe
mov
sti
hlt
inc
add
mov
xchg
sub
jns
inc
ficoml
into
ret
out
cmp
inc
xchg
or
mov
or
aad
mov
xor
or
mov
adc
divl
and
movsl
mov
mov
sub
imul
shl
inc
loope
out
lods
inc
fs
test
lahf
in
mov
mov
in
push
mov
pop
sub
lcall
pop
faddp
or
mov
daa
mov
cmp
cltd
notl
add
fcmovnb
inc
stos
sub
roll
sub
imul
sti
aas
imul
push
add
and
or
in
and
cmc
push
xchg
lock
pop
jnp
mov
adc
adc
leave
push
add
xchg
ds
xchg
cmp
and
lret
adc
test
xchg
lds
push
cmp
inc
fbstp
sbbb
jecxz
cltd
lahf
test
sub
or
cmpsb
inc
cmp
mov
mov
jmp
les
mov
push
jo
scas
sbb
fsubl
and
sub
mov
nop
push
fucomp
outsb
nop
mov
cmp
fstpl
les
jp
inc
sub
stos
sbb
out
aad
sub
xor
push
or
mov
data16
lret
stc
fiaddl
xchg
mov
jno
mov
negl
cmc
rcrb
push
pop
or
cli
and
mov
sti
mov
addr16
in
test
cltd
jae
fstl
inc
out
jle
mov
divb
xchg
mov
adc
popf
xchg
push
mov
fisubrl
and
mov
adc
daa
cmc
jno
std
lret
sub
rcrb
add
sti
jo
sahf
nop
xchg
imul
jge
pushf
jmp
jb
lret
jnp
mov
cltd
mov
inc
mov
dec
cld
mov
ljmp
notl
and
ret
clc
arpl
cmp
sbb
mov
jo
pop
push
and
inc
and
push
cmpsl
mov
nop
push
shll
or
jb
pop
loop
inc
clc
cld
ficoml
lahf
inc
fisubs
add
sbb
adc
xor
shll
fs
add
dec
out
rolb
scas
subl
xchg
mov
gs
in
leave
and
nop
fmuls
fistps
jo
inc
pop
cmp
pop
enter
nop
jecxz
ljmp
and
push
and
test
xchg
insb
das
loope
pop
out
sbb
hlt
jecxz
in
out
jl
repnz
xchg
and
mov
ss
sahf
mov
fcmovne
cmp
pop
test
xchg
arpl
fbld
cwtl
subb
test
lahf
subl
push
dec
pop
push
adc
scas
in
stos
add
aaa
jp
insl
movsl
pushf
push
cmp
arpl
jo
pop
mov
lods
cwtl
xor
popf
xlat
adc
jmp
pushf
adc
loop
adc
or
sub
jne
add
add
and
dec
dec
mov
dec
xor
es
in
out
ds
sarb
jg
mov
roll
xchg
roll
dec
mov
in
test
test
inc
orps
test
addr16
sbb
fldl
mov
push
cmpsl
sub
insb
movsl
pop
mov
mov
sub
outsl
xlat
leave
int
movsb
negl
aad
out
mov
cmp
pop
jo
test
pushf
dec
add
out
push
dec
or
xor
imul
cmpsb
and
sbb
and
imul
and
jmp
movsl
and
inc
xor
movsl
inc
mov
push
inc
dec
push
icebp
rcrl
adc
pop
add
push
loop
stc
mov
aas
mov
test
xor
xor
mov
test
aad
add
cmp
or
mov
insl
and
pop
sbb
jb
dec
pop
fdivs
mov
jo
dec
in
movsb
aam
in
shll
scas
rcll
inc
jg
jge
sub
pop
pusha
out
pcmpeqd
jle
xchg
in
ret
sbb
imul
mov
scas
sub
daa
sub
pop
cmp
cld
outsb
mov
xchg
cmp
adc
inc
movsl
lds
or
adc
xchg
mov
stc
test
adc
js
aas
inc
mov
jge
pop
mov
sbb
mov
in
scas
cmc
es
mov
inc
sub
push
out
andb
dec
mov
fs
loope
adc
mov
in
sti
test
aam
mov
into
lcall
int
inc
add
push
sahf
mov
movsl
cs
adc
cld
paddsb
jo
aam
xchg
psrld
sub
ret
fmuls
cmpl
jl
ficomps
pop
in
test
ja
xchg
sub
je
stc
fnsave
pop
sbb
push
out
in
sbb
xchg
and
sbb
out
add
mov
rol
and
int
sbb
fcompl
mov
xchg
out
push
gs
lret
movsl
add
nop
fmulp
pop
add
xor
arpl
or
jbe
mov
sbb
jle
pushf
pop
mov
jns
rclb
mov
mov
jp
fdivs
repz
inc
loopne
lock
fimuls
adc
data16
jns
lret
push
add
jb
mov
aam
ficompl
jg
adc
rcll
bound
jg
scas
push
adc
lea
cmpsb
jle
jb
add
scas
stc
mov
cmp
shl
iret
lods
sbbl
invd
hlt
xor
addr16
mov
xchg
stos
xchg
push
lea
insb
cmp
jae
jle
xchg
inc
addr16
sub
jns
mov
push
shll
int3
xor
orb
and
pop
lock
mov
stc
ret
in
mov
rcr
movsb
jns
fs
inc
pop
dec
push
xchg
add
stc
daa
adc
cs
shll
jb
mov
popf
jnp
add
xchg
push
inc
insb
pop
jb
sub
or
aaa
ds
inc
jge
lea
loop
mov
aad
loop
sub
mov
addr16
mov
mov
push
pop
fstl
pop
or
decl
int3
lods
aaa
ret
xchg
push
sub
mov
adc
mov
xchg
or
jno
ja
stos
mov
adc
pop
iret
sbb
or
and
push
push
mov
pop
jmp
test
pop
xor
mov
mov
xchg
clc
cs
stc
pop
adc
push
jno
sub
push
dec
outsb
mov
pop
inc
xchg
ret
int3
lahf
or
mov
pop
aas
roll
stc
aaa
jae
or
les
or
push
js
sahf
xchg
popf
sbb
jo
jg
sub
and
xor
push
popa
leave
mov
sbb
inc
cmp
or
lods
sub
rolb
call
lahf
aam
jmp
or
fdivs
and
xchg
xchg
jp
or
shrl
pop
jae
imul
imul
es
mov
aad
or
cltd
mov
into
fldcw
shrl
jge
test
fcompl
lock
pushf
enter
popf
fidivl
push
or
sbb
lahf
xchg
inc
call
or
dec
fadds
int3
or
sbb
shlb
mov
sbb
jle
fsts
jle
mov
xlat
cmpsl
sbb
xchg
mov
push
in
cmp
pop
mov
mov
ljmp
or
adc
add
inc
xor
inc
popa
sub
xor
stos
inc
mov
test
jg
out
test
imul
fcoms
or
add
mov
pop
mov
cmc
imul
shrl
xchg
xor
mov
hlt
push
or
jo
scas
negl
insl
lcall
jge
dec
cltd
push
fimuls
cmp
mov
mov
mov
lods
mov
xchg
jno
xchg
cmp
dec
adc
jns
test
hlt
fstpl
jb
loope
movsl
sbb
adc
mov
popa
pop
lret
shlb
add
push
stos
jae
andl
imul
adc
rcll
cmp
cmpl
mov
int
xchg
lds
iret
ja
push
xor
inc
mov
xchg
out
sbb
push
mov
es
inc
cwtl
int3
loop
push
aaa
pop
shll
push
and
lods
insl
xchg
xlat
jg
adc
or
or
cmp
aam
push
or
inc
or
inc
lea
jp
cmp
sahf
out
sahf
inc
fistpl
push
movsb
shl
and
push
jnp
pop
mov
push
leave
test
lcall
nop
lods
xor
add
add
cmp
imulb
ljmp
in
iret
cmp
iret
es
mov
and
into
jb
clc
pop
mov
out
inc
out
fwait
shll
adc
fstl
ret
cwtl
pop
popl
dec
out
outsl
xor
lret
popa
in
data16
lds
lods
fdivrl
icebp
xor
jne
lods
pop
rorl
jb
pop
pop
scas
adc
dec
pop
cmpsl
test
adc
les
fdivl
popa
mov
mov
ficompl
mov
ret
cli
leave
imull
popa
aas
push
leave
cmp
out
jns
adc
dec
mov
xor
mov
mov
dec
push
stos
pop
aad
fldenv
push
pop
div
sbb
iret
jo
pop
mov
movsl
addb
les
lods
jp
xchg
add
nop
outsb
and
cmp
addb
xor
jno
addb
lret
mov
pop
pop
fdivr
mov
movsl
push
inc
xchg
sbb
cltd
out
inc
sub
push
les
cmp
adc
xor
cld
lcall
adc
call
jmp
push
repz
cmpsb
inc
shll
pop
cmp
cwtl
fnstsw
insl
hlt
aaa
pop
lods
cmpsb
jmp
mov
adc
jle
mov
std
xchg
xor
shll
pop
sub
cmp
dec
cli
xchg
cmc
add
out
frstor
das
in
xor
jo
or
sub
fnstsw
fnstenv
mov
addl
aas
pusha
jge
mov
in
and
popf
xchg
sub
cltd
aaa
push
stc
shr
pop
outsl
sti
jmp
cs
lcall
jmp
test
das
stc
loop
inc
mov
test
out
fidivrl
stos
ja
fwait
sub
push
pop
shlb
clc
fcomps
pop
jle
mov
pushf
test
test
and
push
je
adc
ljmp
iret
insb
or
push
mov
mov
sbbl
out
mov
and
pusha
jl
mov
cmp
dec
adc
or
lea
mov
push
movsl
lock
fs
cwtl
aas
jbe
and
lds
jbe
pop
xlat
ds
mov
or
adc
and
xor
pop
outsb
jp
or
pop
add
sti
and
mov
and
pop
jns
ja
xor
cmp
out
mov
lea
mov
push
sub
iret
xlat
pop
shlb
outsb
and
cld
or
inc
cmpsb
lea
hlt
insl
sbb
or
rorl
rclb
push
push
jg
mov
test
cltd
lock
add
push
in
xchg
repnz
fsubs
pop
or
jns
push
dec
cltd
testl
lret
out
stos
fists
in
fldl
ja
jmp
or
xchg
std
clc
adc
daa
xlat
roll
mov
mov
repnz
pusha
sub
mov
dec
mov
imul
push
outsb
dec
mov
jo
sbb
pop
inc
jp
in
leave
push
jns
lds
movsl
cli
jno
cltd
push
adc
inc
cli
insl
insl
in
inc
add
push
cwtl
lds
inc
lock
mov
bound
lea
fsubs
mov
add
and
test
mov
and
inc
xchg
mov
mov
xor
lcall
mov
aam
jmp
jne
dec
sti
cli
pop
xor
mov
pop
fiadds
pop
push
icebp
cmpsb
adc
mov
pop
inc
ret
push
adc
arpl
xchg
dec
outsb
aaa
bound
or
push
je
popf
sahf
sbb
fwait
pop
test
jge
cs
inc
inc
das
shl
ja
pushl
dec
and
scas
adc
mov
insb
mov
sbb
pop
aas
les
cltd
push
imul
arpl
dec
rorb
lea
fstps
push
daa
imul
fcoml
xchg
fwait
cmp
dec
ret
loope
pop
mov
jno
sbb
xlat
mov
xor
and
fwait
mov
xlat
cmc
js
scas
cli
mull
push
jle
dec
mov
sub
dec
jne
pop
xlat
scas
inc
jge
lds
inc
xor
or
sbb
add
subl
adc
push
call
movsl
cmpsl
sub
cld
and
mov
lods
xor
mov
icebp
or
or
lods
pop
movsl
xor
pop
lea
jne
arpl
js
dec
mov
dec
mov
and
movb
push
and
shrl
and
cmp
cmpb
aaa
mov
pop
scas
mov
adc
pop
lods
mov
mov
xor
data16
test
jle
inc
add
std
hlt
test
sbb
sub
adc
xor
lds
xchg
nop
or
je
inc
mov
push
int
out
cmp
xchg
scas
cwtl
add
xchg
pop
add
or
jl
stos
xchg
ljmp
pop
rcrb
insl
pushf
test
scas
lock
xchg
mov
adc
cmp
jmp
movsl
pop
gs
call
ss
stc
in
dec
jle
in
cmc
leave
fbld
sbb
in
stos
std
icebp
xchg
jno
jle
pop
stos
jno
adc
arpl
cmp
arpl
push
pop
pop
mov
sbb
es
or
leave
sub
mov
sbb
jl
out
and
stos
cmp
push
cwtl
lock
pop
mov
and
cwtl
aas
push
inc
xchg
push
ret
daa
test
pop
pop
dec
iret
jp
mov
push
inc
push
cmp
jbe
in
fiadds
lods
out
das
push
or
fisubrl
scas
das
orb
push
clc
cld
jecxz
cmc
outsl
xchg
sbbb
lcall
adc
add
dec
add
aaa
sub
mov
inc
aaa
ds
inc
inc
xor
dec
xchg
in
cmp
inc
cmp
sahf
pop
mov
in
arpl
lret
lds
push
jge
jecxz
jecxz
cmp
or
cwtl
scas
mov
mov
xchg
cmp
sbb
sahf
pop
inc
decl
xchg
jl
lret
dec
in
subl
push
stos
cmp
jne
movsl
mov
andl
jno
inc
movb
jg
hlt
jb
ret
pop
clc
sbb
stc
and
popa
insl
aaa
iret
mov
cmpsl
jb
repz
mov
gs
push
lahf
mov
fimuls
xor
dec
jae
xor
sub
and
into
and
insl
jg
dec
adcl
or
xor
and
fdivr
push
cmp
xchg
iret
mov
out
mov
fidivrs
out
data16
push
paddd
lea
mov
pop
and
pop
mov
mov
mov
xor
cmp
jg
pusha
sti
stos
sub
push
pop
and
pop
dec
mov
or
clc
mov
adc
mov
loope
movl
mov
pop
inc
cmpsb
jg
js
jnp
imul
sub
xor
in
jns
cmpsl
addr16
push
sbb
inc
xchg
jae
jbe
in
xor
cmp
push
mov
jae
push
insl
out
mov
push
pop
cmpsl
fisubs
and
sub
add
add
xchg
inc
in
cmp
jns
push
inc
pop
cmc
xor
add
mov
or
lock
adc
bound
cmp
mov
outsb
enter
fisubs
out
mov
sti
cmp
hlt
mov
stc
cmp
xchg
int
add
mov
out
into
and
ds
sbb
sub
cmp
movsb
out
out
push
pop
imul
lahf
rcrb
pop
dec
mov
iret
jg
and
jo
in
pop
sbb
leave
lea
pop
or
and
or
or
xlat
mov
fldenv
insb
mov
popf
mov
hlt
xor
xchg
and
and
mov
loop
xchg
pop
jo
jo
movsl
inc
mov
mov
clc
xchg
mov
gs
mov
ret
cmp
insb
shlb
and
push
scas
inc
sbb
sbb
pusha
hlt
mov
sbb
test
imul
movl
stc
es
sub
add
sysret
sahf
dec
sub
int
adc
mov
lret
imul
aad
ljmp
js
es
and
push
in
mov
xchg
shrl
xlat
fnstcw
mov
and
loope
out
pushf
cli
sarl
cwtl
pop
sti
jbe
mov
sub
test
nop
xor
cs
inc
fildll
pop
mov
pop
dec
test
in
and
repz
dec
fisubl
xchg
push
flds
push
lods
xchg
fs
out
or
lods
jne
into
ret
cmp
icebp
cwtl
jae
lods
fbld
pop
xorl
out
cmp
arpl
les
dec
aad
push
mov
sahf
sub
imul
cltd
sub
enter
das
repz
xor
mov
clc
flds
aam
dec
subb
jge
add
adc
jg
sub
outsl
pusha
addb
sub
dec
inc
push
out
push
movb
mov
and
xchg
push
adc
mov
pop
xor
jmp
sbb
add
loope
leave
or
mov
insl
jno
into
scas
cmp
or
lea
aad
fsubr
andb
xor
clc
arpl
xchg
shlb
lea
mov
ss
je
fwait
adc
insb
push
jecxz
mov
sbb
ja
test
pop
fidivrs
daa
or
mov
das
rorb
outsl
incl
xor
push
xor
mov
jge
pop
inc
push
and
jg
sarl
daa
xor
call
fwait
mov
popa
xchg
fcmove
push
xchg
mov
pop
jecxz
cwtl
xlat
add
lea
mov
dec
and
xor
lods
pushf
sbb
adc
fadd
sbb
aas
add
ja
stos
push
xchg
push
sbb
fidivrs
into
cmp
in
shll
subb
shrl
cmpsb
in
mov
pushf
stos
jmp
cmp
push
jg
jg
iret
push
insb
xor
inc
add
xchg
nop
ss
jmp
fistps
pusha
dec
sahf
mov
mov
push
fistpll
jmp
bound
sbb
mov
and
sarl
push
stos
sub
fadd
inc
fmull
stc
mov
in
lds
ss
outsl
ja
lods
mov
or
fsub
add
cmpsl
mov
dec
enter
sub
jge
addr16
inc
add
add
sti
fistpll
cmp
mov
leave
sbb
mov
mov
outsl
mov
stc
cmp
stc
mov
mov
xchg
mov
xchg
rolb
call
testb
in
in
sbb
in
das
add
and
rcl
push
sub
pop
cs
push
and
hlt
out
mov
mov
ret
test
outsl
arpl
test
lds
sub
ss
inc
movsb
push
jmp
add
lock
out
pop
popf
clc
dec
pop
and
pop
mov
loope
mov
jns
cmp
fcomip
xor
fcomps
rorb
jb
stos
ljmp
loop
mov
loopne
jnp
push
mov
iret
or
cli
inc
jne
jbe
add
pop
inc
inc
and
repnz
push
inc
jp
push
mov
fsubrl
jg
or
jl
mov
mov
gs
mov
pop
mov
pop
sbb
pop
movsl
dec
add
repnz
xchg
scas
shrl
std
dec
testl
in
popa
stc
clc
dec
xlat
std
scas
push
test
inc
jbe
ret
gs
aas
adc
gs
xchg
and
or
pop
mov
aam
jae
fdivrs
imul
ret
dec
repz
mov
in
ror
xchg
ds
dec
mov
xor
lahf
shrb
push
insb
xchg
rorb
ss
mov
jmp
inc
cltd
mov
mov
mov
dec
cli
push
sub
mov
and
jnp
dec
insl
fcoml
lea
sqrtps
mov
mov
sahf
mov
and
sbb
mov
cmpsb
mov
cmp
imul
adc
fbld
add
xor
sub
mov
loop
or
fmuls
mov
hlt
jecxz
dec
push
add
jns
and
adc
adcl
call
mov
in
and
ljmp
out
imul
jge
xchg
and
aad
mov
in
mov
jecxz
fisttps
inc
and
scas
jp
and
pop
test
dec
pop
subb
mov
push
or
cli
scas
jno
loopne
adc
lret
inc
aam
insl
imul
ja
test
mov
xchg
fneni(8087
mov
test
inc
push
add
hlt
stos
mov
test
sub
fidivs
xchg
pop
dec
cli
push
jg
popf
xchg
mov
add
mov
fcoms
and
stc
jne
mull
nop
jb
add
ret
mov
stc
xchg
push
cli
jno
ja
stos
push
sbbb
out
lods
jg
jae
or
inc
lcall
icebp
adc
mov
iret
lret
insl
loope
lcall
dec
mov
rorl
fbstp
inc
mov
scas
imul
push
inc
xchg
pop
arpl
shlb
ret
pop
xchg
xor
ja
aam
iret
or
pusha
sbb
or
aaa
fiaddl
sti
pop
dec
call
insl
inc
dec
outsb
test
mov
push
pop
push
inc
push
mov
sbb
fiadds
jne
imul
xor
cli
mov
jl
mov
jge
sub
push
inc
cli
outsb
mov
pop
cmp
inc
loopne
pop
fnsave
or
pop
iret
shr
dec
sub
iret
negb
lods
je
pushf
jmp
clc
bound
cli
jns
fs
mov
mov
stos
mov
mov
test
ret
sbb
push
pusha
push
pop
lds
sbb
sahf
repz
push
add
inc
pop
xor
and
and
lret
outsb
andb
and
imul
mov
imul
icebp
stos
hlt
fdivrp
mov
sbb
fwait
xchg
mov
scas
daa
mov
mov
data16
pop
cmpsl
dec
shrl
cmpsb
fsub
rclb
addr16
sub
imul
xchg
pop
enter
loop
outsb
fs
scas
jmp
arpl
jo
lods
pop
or
lds
push
pusha
sub
adc
int3
push
sahf
shl
bound
xchg
cmpl
or
pop
pop
push
andl
icebp
sti
aas
sarl
push
sbb
cmp
aas
and
cwtl
cmpsl
arpl
cmpsb
lahf
jg
scas
ljmp
jnp
mov
ror
dec
pop
idiv
ja
lahf
test
stos
xchg
xor
fwait
enter
cmp
popa
inc
jne
add
or
sbb
pop
mov
mov
imul
int3
rclb
xchg
in
in
cmp
in
inc
inc
idivb
clc
cwtl
add
sar
hlt
pop
imull
enter
xchg
xchg
xchg
jecxz
loop
daa
out
or
fstpt
call
push
or
xor
stos
push
nop
sbb
jo
and
sub
or
data16
xor
arpl
test
popf
bnd
enter
in
loope
cmp
lods
mov
or
and
jno
sbb
add
fs
nop
push
int
dec
rorl
jno
daa
xchg
jo
es
idivl
push
pusha
das
idivl
sub
mov
outsb
dec
add
and
mov
lcall
push
xchg
cmp
enter
xchg
rorl
pop
dec
inc
push
mov
push
jmp
xchg
dec
inc
fldcw
enter
or
inc
fwait
push
inc
pop
les
lret
jl
pop
ret
xor
outsb
pop
and
or
jle
daa
stc
fs
and
or
adc
push
das
mov
or
dec
insl
into
xor
dec
push
pop
inc
shlb
dec
cmpl
jle
inc
dec
or
xchg
in
mov
fnstcw
sbb
fldl
sbb
push
out
arpl
mov
pop
pushf
mov
inc
out
pop
mov
das
pop
rep
mov
xchg
gs
jle
adc
and
mov
addl
add
lods
js
aaa
in
mov
xchg
cmp
fsubs
mov
ljmp
mov
xor
imul
adc
loope
jnp
jno
sub
and
out
pushf
lods
mov
fs
or
roll
notl
aad
mov
ljmp
ror
add
out
jge
ret
arpl
scas
filds
shlb
adc
mov
mov
clc
mov
sub
div
mov
and
sbb
or
pop
jnp
adc
sarb
aad
insb
inc
insb
popf
loop
js
lret
add
mov
inc
in
push
scas
mov
pop
daa
mov
mov
mov
add
daa
add
jb
lcall
mov
jb
add
popa
cmp
mov
cmpb
idiv
jle
enter
xchg
loop
xor
push
xor
popl
sarl
mov
jle
pop
mov
xchg
xchg
loope
add
sahf
mov
cld
popa
in
andl
xor
sbb
or
mov
inc
into
mov
inc
nop
sbb
adc
jl
mov
sbbl
inc
and
sarb
xor
addr16
push
lds
ficoms
mov
js
sbb
cmp
adcl
insb
es
ljmp
dec
mov
enter
stos
popl
pop
jns
fldl
sub
fsubrl
push
adc
stos
mov
cmp
adc
jmp
and
aam
int3
push
and
inc
scas
ss
sahf
fnstsw
xchg
cmp
ja
scas
dec
rcl
inc
sahf
into
mov
sub
mov
scas
sub
stos
negl
andb
scas
pushf
rcl
fsubl
mov
dec
add
mov
xchg
xor
out
test
jge
cmc
rcrb
pop
in
loop
sbb
mov
imul
inc
cltd
inc
jbe
mov
outsl
xor
push
faddl
mov
ds
push
mov
pop
cmc
int
mov
fimuls
ss
ret
jle
adc
sbb
mov
pop
dec
cmp
repz
lods
xchg
stos
sbb
in
aas
inc
pop
fcmovnu
and
mov
ja
and
out
cmp
mov
sti
push
test
adc
jge
addr16
mov
in
aas
rcrb
mov
jae
or
test
sbb
xchg
loope
mov
mov
lcall
popa
paddsb
test
and
jge
cld
sub
ret
inc
loop
gs
xchg
stos
fwait
cmp
test
mov
jno
pop
inc
sar
and
fldcw
fcmovnu
scas
or
and
jnp
sub
xor
mov
lea
mov
lahf
call
mov
int
out
shrb
addr16
call
mov
and
div
dec
push
test
bound
cmp
shlb
push
fwait
jl
jns
popf
or
test
jecxz
rorb
in
cmovo
lret
mov
iret
lock
popf
mull
nop
mov
ss
popa
lahf
fistpll
cmp
dec
call
lods
pop
adc
sbb
andl
push
pop
xor
cmp
mov
sub
enter
mov
lods
loop
add
jnp
mov
dec
leave
xchg
out
daa
jg
sub
and
out
pusha
fldcw
flds
xor
push
push
mov
subb
sbb
lret
dec
cld
mov
push
rorl
adc
mov
lret
lds
imul
cmp
jge
xchg
mov
xchg
loope
sti
or
cmp
mov
and
adcb
push
js
les
cmp
cltd
cltd
xchg
dec
jbe
ret
ret
je
push
add
xor
punpckldq
inc
pop
mov
xchg
test
imul
lea
imulb
clc
adc
pop
cmp
and
push
adc
ss
push
adc
jno
sub
or
in
sahf
mov
push
mov
shr
fdivrl
xlat
push
ss
mov
xchg
jns
sbb
std
or
data16
sub
pushf
enter
ss
scas
lock
adc
mov
mov
inc
or
inc
push
sahf
repz
movsl
jp
or
mov
cmpsb
pusha
mov
sub
cmpsb
and
cmp
test
sub
repz
mov
pop
mov
pop
mov
xchg
lret
jb
sub
pushf
fwait
dec
pop
imul
cmp
cltd
cmp
jbe
movsl
push
and
int
mov
mov
xor
jae
add
je
je
sbb
loop
inc
inc
inc
xor
mov
loop
jno
xchg
xor
sub
sub
popl
pop
mov
adc
sbb
or
roll
or
inc
push
or
icebp
pop
mov
dec
insl
pusha
mov
fistpll
pop
push
test
les
pop
inc
sub
push
out
cmpsl
cmpsb
add
je
push
mov
lret
push
das
setb
ljmp
mov
mov
jmp
push
sbb
in
subb
mov
sbb
mov
ret
sbb
mov
jb
les
in
sbb
sub
xor
jo
pop
dec
insl
mov
icebp
aaa
xor
flds
and
in
stos
rcrb
jns
sub
cmp
mov
xchg
xchg
lahf
and
jbe
pmaxub
jp
test
xchg
scas
pop
xchg
cmp
aad
shlb
loopne
dec
add
dec
mov
popf
cmp
outsb
xor
and
lret
xor
mov
cmp
or
push
adc
rolb
jmp
std
jl
mov
mov
imul
jl
in
call
adc
dec
cmp
pushf
xor
inc
sub
inc
push
inc
xor
lods
mov
shll
sub
loop
lahf
push
inc
xchg
dec
mov
sbb
notb
and
mov
push
cmp
pop
xchg
push
jg
pop
sub
adcl
data16
push
adc
inc
cli
mov
add
mov
test
pushf
adc
pop
outsb
adc
ljmp
sbb
inc
outsl
popf
xchg
jb
jge
lret
push
jb
jle
mov
pop
inc
mov
and
push
adc
sarl
xchg
pop
sub
cmc
xor
inc
gs
test
pop
push
popa
hlt
xchg
aas
mov
mov
out
add
int
sbb
mov
mov
push
sbb
xchg
imul
popf
loop
push
mov
sarl
xor
in
repnz
jmp
mov
movsb
and
jg
outsl
aad
mov
xchg
lret
xchg
and
pop
cmp
cmp
inc
cmpsl
repnz
and
shrb
movsl
adc
mov
xor
mov
pop
adc
push
xchg
stos
bound
nop
sub
leave
jg
outsb
xchg
cltd
inc
cld
jno
jns
inc
pop
sbb
adc
test
sbb
lahf
into
loope
outsl
add
mov
jnp
jns
out
loope
les
xor
out
xor
sbb
push
or
jb
cld
icebp
push
inc
xchg
add
fcomps
sbb
jb
push
inc
outsb
xchg
sub
xchg
jbe
bnd
dec
bound
shrb
aam
das
lret
sahf
into
dec
mov
mov
out
repz
les
cmpsb
cltd
dec
test
pop
bound
push
stos
xchg
cmp
push
mov
or
dec
iret
adc
out
je
int3
jnp
sbb
mov
dec
mov
adc
cld
les
push
mov
pop
mov
repnz
jb
icebp
jp
fidivrl
test
dec
or
add
dec
mov
call
pop
jb
aam
xchg
mov
mov
sti
pop
jno
cli
jge
fisubl
pushf
pop
leave
stos
inc
decb
mov
sbb
es
repz
jmp
in
mov
adc
arpl
ja
mov
loop
out
pop
mov
and
test
inc
cmp
or
outsl
dec
xor
xor
mov
clc
and
fidivs
into
add
jnp
sbb
mov
lock
mov
inc
ret
pop
andb
xchg
cmp
pop
mov
stos
xchg
adc
insb
lock
xor
xchg
sub
pusha
and
mov
sub
and
in
jecxz
and
out
and
stc
stc
dec
and
test
push
or
int3
popf
jno
mov
into
mov
cli
scas
loopne
inc
or
aas
sahf
int3
out
or
sub
test
mov
xchg
mov
lcall
ret
mov
pusha
sti
jecxz
sbb
jb
popf
mov
bswap
aas
rcll
or
jns
add
inc
and
sbb
cmc
or
or
add
int3
aaa
test
popf
loope
js
outsb
sbb
inc
xchg
int
mov
push
cmpsb
es
mov
sbb
hlt
ljmp
movb
or
mov
movsl
push
jae
rcrl
adc
repz
cmp
out
cli
repnz
adc
lahf
lods
sbb
dec
adc
mov
sub
out
inc
inc
push
mov
test
cli
mov
repz
xor
test
jmp
or
iret
and
push
jge
lcall
mov
cmpsl
mov
xadd
fiadds
mov
aaa
mov
sub
stos
fcmove
dec
cmp
lahf
dec
hlt
test
mov
jno
aam
or
aas
pop
popf
aas
xlat
inc
mov
lock
out
outsb
mov
and
add
pop
xor
mov
in
test
sbb
jmp
movsl
fmuls
lds
dec
popf
push
inc
out
add
dec
in
incb
stos
scas
adc
andl
sub
xchg
test
pusha
mov
out
sbb
sbb
pop
lret
mov
mov
movsl
cmp
out
mov
outsl
cmpsl
ss
lds
arpl
stos
xor
or
cmpsb
fs
pop
test
sahf
sub
push
lds
cmp
push
cmp
les
les
cli
mov
cld
push
sahf
jg
mov
into
dec
cmp
jns
loope
loopne
ja
pop
sbb
sbb
pop
adc
rcrb
sub
icebp
or
shlb
insl
test
not
cmp
jp
lea
cmp
mov
dec
rorb
cmp
movsb
inc
mov
outsb
leave
adc
push
adc
push
out
cld
mov
xchg
xor
sbb
sbb
push
int
aaa
mov
je
mov
int3
stc
mov
mov
ret
cwtl
sub
mov
sub
cmp
sub
add
xchg
stos
jmp
insl
mov
mov
mov
jmp
push
cmc
xor
pop
push
xor
mov
mov
pop
cli
jno
out
lret
ja
fldcw
adc
bound
sbb
daa
xlat
mov
jmp
int
insl
xor
dec
gs
xor
aam
pushf
xchg
in
and
call
shlb
leave
push
shll
jns
ret
insb
test
dec
test
sti
adc
mov
inc
or
dec
or
sti
gs
stos
add
jnp
sub
push
sub
push
ja
test
and
outsl
cmc
xor
sub
push
push
mov
stos
mov
enter
dec
pop
shr
insb
or
leave
std
mov
pop
decb
subl
fnstcw
cmp
cmp
and
push
mov
andb
adc
shll
jle
test
push
int3
and
mov
pop
mov
mov
fsubs
xchg
lock
or
loopne
stos
lods
jl
and
pop
mov
fsubrs
cld
mov
mov
push
pop
xor
sbb
dec
movsl
enter
rorl
subb
iret
sbb
jmp
out
psllq
pop
fistpl
fcomps
sub
pop
jmp
mov
or
aaa
or
pop
movsb
in
sub
and
pop
inc
scas
sbb
aaa
mov
pop
jp
loopne
xchg
fildll
dec
adc
xchg
out
dec
imul
or
pop
mov
inc
and
test
lods
inc
lods
inc
inc
lret
test
ficomps
sub
mov
in
std
and
stos
fnstenv
add
dec
mov
movsl
stos
js
add
dec
sbb
into
push
push
sbb
pop
dec
shll
sbb
scas
adc
sub
les
outsl
ds
into
hlt
nop
adc
clc
inc
insl
mov
xlat
sbb
loopne
bnd
addr16
cs
pop
hlt
addl
ds
push
loopne
outsl
test
cld
in
imull
mov
sbb
loopne
push
lds
lock
loope
add
ret
scas
push
jp
and
pop
jecxz
sbb
mov
cmp
mov
push
mov
fsubrs
mov
sbb
inc
push
bound
pusha
push
xor
test
adc
shl
cs
iret
lds
add
daa
push
popa
adc
pushf
jle
mov
sbb
daa
ret
js
jg
sbb
ficoms
lods
xor
xchg
push
daa
int3
cmp
push
adc
push
ficompl
mov
int
into
push
sub
lock
test
sub
pop
cmpsb
inc
lahf
add
rolb
sub
cmp
test
add
je
test
out
or
scas
scas
fnstcw
lds
rorb
add
pmaddwd
pop
bound
call
lret
lcall
sahf
jae
int
jge
xor
fldcw
inc
repz
xor
inc
push
into
ds
test
adc
jp
jo
cmp
push
jne
dec
sete
lret
push
jp
mov
inc
pop
push
jne
sub
loope
mov
or
jg
and
sti
jae
xchg
lret
jp
gs
test
sub
add
loop
push
scas
imul
xor
add
in
inc
inc
sarb
aad
into
mov
inc
les
sbb
popf
or
dec
push
jae
nop
insb
jmp
shlb
add
and
das
dec
lds
sbb
mov
test
int3
daa
dec
xchg
in
pop
mov
push
jae
pop
or
inc
fidivs
sub
pop
adc
jno
mov
ret
cmp
bound
mov
fisubl
cmp
sbb
sub
ljmp
xchg
mov
push
cmc
mov
lahf
xchg
mov
gs
lcall
pop
cli
lea
inc
outsb
adc
aam
cmpsl
jo
int
add
mov
xor
ja
or
add
cmp
mov
arpl
mov
ret
call
fnsave
adc
fidivrl
testb
adc
aad
xchg
aaa
adc
or
je
xchg
aas
dec
popf
mov
push
repnz
push
ljmp
fldl
mov
cmp
sbb
shl
xor
test
enter
rclb
fdivl
ret
loopne
dec
fisttps
xor
arpl
in
pop
pop
fiadds
loopne
mov
push
fbld
dec
pop
add
lods
sbb
cmp
ret
dec
add
popa
adc
jmp
pusha
xor
mov
dec
and
xor
lret
xor
push
incl
sbb
dec
and
test
inc
cli
and
or
adcl
xchg
cltd
clc
jnp
mov
jmp
xor
and
cli
and
cmp
pushf
cli
jle
mov
ss
into
cs
fildl
jmp
sarl
leave
xchg
xchg
inc
inc
xor
rol
cmp
and
icebp
sbb
cmp
jbe
lods
jecxz
movsl
lods
out
pop
loope
xor
dec
flds
mov
sbb
scas
cltd
aad
aam
insb
aaa
in
dec
cmc
sub
dec
mov
out
jge
insb
mov
cmpl
sub
jne
add
aas
cmc
les
mov
sub
sbb
in
cmp
insb
mov
add
inc
lahf
sahf
cli
jp
jp
lret
and
lea
aad
out
or
dec
pushf
ret
lea
rcl
fisubs
push
jmp
mov
adc
addl
bound
out
mov
mov
adc
sahf
push
adc
adc
dec
mov
aas
rolb
jge
scas
xor
add
mov
cmp
jg
dec
mov
mov
adc
jp
lods
mov
loope
inc
out
lcall
or
sub
iret
mov
xchg
push
lea
push
clc
pop
adc
fsin
int3
lods
ret
addr16
ja
mull
xor
inc
fldl
xchg
cmp
icebp
or
dec
push
je
cmp
ret
movsl
push
add
jo
mov
cmp
ljmp
dec
test
push
les
or
mov
clc
pop
es
lods
fmul
loop
scas
fwait
nop
mov
mov
stc
xor
xor
or
xor
inc
stos
add
mov
jmp
sbb
nop
add
mov
ds
shll
jne
cld
fwait
outsb
test
mov
adc
mov
mov
pop
fld1
mov
or
rorl
leave
xchg
push
mov
lret
sti
inc
subb
sub
sbb
js
jecxz
inc
stos
sbb
pop
and
into
scas
insl
cmp
dec
jns
lods
fbld
mov
cvtdq2ps
push
xchg
dec
xor
ja
out
lods
lock
add
cmp
push
movsb
fldt
push
mov
int3
xor
push
adc
push
popa
push
fs
clc
xchg
mov
xchg
xlat
pushf
inc
hlt
bound
shlb
xorb
mov
aas
shrb
rclb
fists
sbb
cmc
jmp
xchg
jle
inc
int3
xchg
and
adc
sahf
sbb
fldcw
xor
sbb
mull
aad
in
mov
sbbl
adc
fs
dec
add
mov
aam
sub
insb
mov
xor
loop
sti
xlat
pop
es
xor
cmp
pop
xor
add
leave
repnz
sub
loop
aad
fldenv
bound
xor
call
and
ljmp
in
inc
dec
jno
mov
fcoml
arpl
add
mov
popf
lods
dec
lds
fucomi
mov
pop
call
jnp
lods
mov
movsb
push
lea
mov
xor
inc
es
pop
clc
cmpsl
std
push
and
push
xchg
adcb
and
popa
fists
jo
adc
rclb
xchg
add
bnd
pop
xor
mov
push
pop
dec
mov
cmp
mov
jle
mov
inc
sub
and
js
xchg
sub
shr
jp
in
mov
and
mov
sub
inc
test
xchg
inc
cmp
lods
add
jecxz
mov
pop
pop
pop
cmpsb
lahf
cmc
add
jl
dec
and
jmp
sbb
adc
mov
adc
imul
sarb
dec
jmp
adc
mov
sti
scas
sbb
mov
rcrb
sbb
repnz
sub
test
dec
mov
les
out
dec
mov
outsl
push
aaa
cs
mov
pop
xor
add
jo
mov
cmp
xor
aas
out
xlat
mov
push
lds
pop
in
mov
or
insl
sbb
lret
dec
mov
jnp
cmp
jl
mov
lret
pusha
and
loope
repz
popf
mov
xor
mov
pop
push
movsb
cmp
mov
xor
inc
xor
pop
sub
or
ret
filds
xlat
lcall
cli
ss
arpl
data16
jle
insb
movsb
test
pushf
xchg
bound
sub
mov
mov
stos
xchg
dec
mov
sahf
jecxz
sub
push
jbe
ss
fistps
sub
jecxz
jmp
test
or
movsb
jle
jns
ret
xor
dec
leave
aam
mov
pop
shrb
jns
mov
adc
xchg
fisttps
dec
imul
inc
data16
xchg
dec
pusha
pushf
repz
pop
jbe
fsubs
aaa
dec
in
push
dec
cmp
dec
mov
mov
and
inc
stos
xor
inc
or
push
xchg
sub
ret
fs
xlat
dec
imul
dec
popa
ja
mov
push
xchg
cwtl
add
frstor
or
or
sti
jg
clc
and
jmp
inc
dec
and
data16
out
stc
dec
js
cmpsl
movsb
sarb
idivb
and
mov
sub
daa
in
mov
test
jle
roll
mov
mov
adc
pop
xchg
jg
insb
adc
pop
add
pop
enter
add
movsb
mov
loop
cmpsb
jae
mov
mov
fsubl
xor
repnz
es
xchg
add
pop
js
cmp
pushf
pop
adcb
outsb
std
push
dec
mov
sub
dec
lods
inc
cmp
add
cmc
sahf
test
iret
push
icebp
lea
xchg
into
pop
ficomps
cmc
lds
icebp
insl
xor
jmp
repnz
xchg
inc
shlb
push
jl
inc
or
fwait
jecxz
in
xchg
xchg
xchg
and
insl
xchg
jge
negl
int
fs
int
mov
jne
sahf
mov
add
clc
xchg
cmp
pop
cmp
outsl
jno
dec
cmpb
fmul
xchg
cmp
outsb
mov
or
sub
mov
mov
iret
sub
sub
jb
mov
testl
mov
pop
mov
imul
mov
and
out
sbb
test
push
in
jge
mov
cli
test
cmp
inc
ja
and
dec
and
lods
push
inc
push
faddl
out
and
pop
inc
dec
mov
mov
fs
add
cli
sub
xchg
mov
add
and
pop
mov
cmp
add
sbb
dec
int3
or
xchg
pushf
mov
les
jno
mov
add
or
jl
push
or
add
ret
inc
xor
or
sub
adc
jno
les
and
ss
push
mov
pop
mov
add
idivl
push
mov
pop
push
repnz
pop
out
fwait
cmpsb
das
out
cltd
sahf
xchg
inc
orl
decl
ljmp
push
add
adc
das
ss
push
push
test
mov
xchg
in
test
mov
push
popa
fwait
mov
sub
je
sub
inc
sbb
xor
fisubrl
mov
jge
sub
inc
sub
or
mov
ror
and
cmp
outsl
movsl
icebp
mov
cmp
fistpll
outsl
std
sub
xchg
xlat
and
xorl
mov
mov
jge
jg
repnz
sbb
cli
mov
jp
decb
inc
ret
adc
loop
out
call
mov
push
repz
mov
leave
pop
adc
inc
outsl
jmp
adc
inc
jnp
div
sub
xor
das
mov
loopne
adc
arpl
dec
sahf
mov
sub
and
repnz
jl
or
lods
xorl
lds
clc
push
sbb
push
xchg
bound
xchg
xor
stc
jecxz
pop
movsl
out
mov
xor
push
js
leave
add
cmp
mov
loope
jmp
outsl
rcll
sub
add
orl
cmp
decl
and
sub
fcomp
into
mull
mov
pop
fistpll
loopne
pop
in
lcall
mov
inc
mov
lret
and
or
lret
mov
mov
xor
xor
jle
and
call
push
mov
sub
popf
sar
mov
pop
jns
xchg
mov
sub
stos
pop
mov
or
in
notb
loop
add
test
xchg
ret
sub
stos
in
stos
in
xlat
xchg
les
mov
inc
sti
pop
ss
inc
xor
adc
imul
and
insl
adc
or
orl
xchg
inc
in
stc
or
xor
dec
test
gs
lret
imul
imul
ja
pop
neg
pusha
icebp
repz
mov
mul
push
gs
mov
je
dec
loope
in
popa
cmp
jge
xchg
lods
dec
imul
ret
lahf
ret
mov
in
cmp
test
sub
fidivrs
test
cmp
or
fstl
and
lock
mov
daa
sti
mov
xor
xchg
andl
mov
fmuls
xor
es
pop
or
enter
inc
adc
loop
add
jecxz
dec
mov
pop
stos
repnz
jmp
rorb
aas
imul
mov
sub
pop
mov
adc
mov
mov
cld
rcr
and
mov
rcll
sub
or
xchg
fistps
mov
mov
ljmp
inc
push
mov
jo
ss
fwait
mov
test
cmpsb
mov
cmp
fdivs
or
add
fimuls
dec
ds
fsubl
aaa
testl
fsubs
pop
and
jmp
xchg
out
mov
loop
test
inc
push
add
fisttpl
out
push
pop
test
inc
jb
sbb
mov
xadd
sub
push
add
out
pop
ret
shrb
roll
aas
pop
cwtl
lea
mov
js
fnstsw
jg
loope
push
jge
in
adc
pop
cmp
xchg
adc
inc
mov
insl
xchg
scas
inc
pop
xchg
xor
push
test
add
adc
ds
aas
scas
jae
sbb
imulb
fsubl
fists
adc
stc
scas
loopne
and
insb
stos
mov
jle
jle
mov
inc
mov
cmpsb
pop
jge
addr16
lods
je
cmpl
inc
jle
clc
out
leave
jae
push
fwait
mov
repz
stos
rclb
addr16
int3
leave
cltd
jp
add
dec
push
and
cwtl
pop
mulb
into
shl
les
push
ljmp
call
xchg
fsubrs
or
sbb
lock
push
inc
aad
jae
inc
in
cmp
cmpsl
cmc
and
test
movsb
ret
mov
sahf
push
imull
and
inc
push
fbld
sbb
add
enter
dec
in
scas
out
fsts
xchg
clc
mov
imull
add
addr16
cmp
cli
cmpsl
icebp
idivl
je
jge
pop
mov
push
aaa
cwtl
mov
mov
jecxz
daa
adc
add
cmp
out
loope
inc
xor
push
bound
and
movsl
mov
dec
xchg
and
ds
mov
mov
roll
dec
xor
clc
xor
push
xlat
les
push
test
push
jnp
adc
sub
jmp
scas
aaa
cmpsl
mov
push
lret
sbb
stos
cmpsl
popa
aad
sbb
aam
xchg
imul
data16
lods
pushf
jmp
or
sub
dec
sahf
leave
xorl
jmp
cmc
mov
lahf
cmpsl
pop
push
push
mov
in
cmc
jle
push
in
sbb
out
inc
jg
mov
insb
adc
in
xchg
jmp
mov
cmp
pusha
mov
imul
bt
inc
loop
cmp
inc
pop
mov
mov
push
adc
repnz
repz
insb
sbb
push
negl
jo
dec
idivl
pop
inc
aad
and
les
in
mov
dec
or
test
xchg
inc
cltd
adc
loop
sbb
lahf
mov
push
push
mov
xchg
pushf
xchg
add
arpl
sub
pop
jmp
inc
ja
inc
push
cmc
or
mov
inc
psubusb
loopne
cmp
dec
xchg
fldt
jmp
cld
lret
mov
sub
mov
cmpsb
adc
call
fwait
mov
mov
pop
ljmp
jnp
jl
imul
sbb
ss
lods
push
insl
cmc
mov
test
sbb
push
daa
in
pop
ret
sar
mov
and
bound
or
imul
push
mov
bound
cmp
push
sub
fwait
mov
mov
sar
stos
push
xchg
cmp
ss
jo
sub
sub
cmpsl
aam
pop
loope
loop
mov
push
out
adc
cmp
das
int
std
push
xchg
movsb
adc
popf
xor
stos
pop
or
and
cmp
mov
jl
ret
hlt
movsb
mov
nop
outsb
lret
pop
idiv
cwtl
lods
lods
xlat
add
mov
sbb
or
cmp
gs
movsb
mov
bound
stc
xor
add
xchg
shl
test
push
gs
or
push
mov
adc
jns
adc
jp
mov
jmp
iret
dec
or
clc
mov
adc
data16
pop
jae
test
lea
sahf
sub
icebp
and
arpl
xor
aam
jp
loope
jnp
pop
std
scas
mov
mov
cmp
fsts
pop
and
pushf
pop
push
gs
out
inc
test
dec
push
rsqrtps
mov
rcr
stos
lahf
and
add
dec
add
in
push
mov
gs
sbb
scas
push
pusha
inc
dec
pop
xor
lods
je
lret
or
lock
add
outsb
hlt
pop
mov
inc
xor
das
mov
int
clc
mov
dec
mov
sarl
call
mov
xor
scas
mov
sbb
icebp
pop
mov
cmpsb
stos
jns
rcr
inc
jns
lahf
shll
xchg
inc
mov
sahf
jecxz
push
je
fcomps
cmp
fisubrs
out
ds
jae
xor
test
out
out
push
fsubs
sar
int3
inc
adc
in
icebp
sub
fwait
inc
mov
push
in
test
out
mov
adc
andl
pop
iret
out
or
lods
cli
xor
loope
lcall
mov
test
mov
sbb
sbb
jo
sub
push
add
loop
addr16
mov
mov
sub
insb
jp
xchg
int
ror
pop
dec
dec
pop
mov
out
in
jbe
jb
xchg
call
jns
ljmp
subl
push
mov
or
js
jmp
fwait
inc
push
test
push
or
xlat
rcrl
lahf
lcall
test
mov
xchg
push
adc
in
aas
fisubs
ds
xchg
arpl
xor
aad
cmc
insb
cli
add
leave
push
inc
stc
loop
mov
fmuls
and
push
adc
lock
sub
pushf
cmpsb
fistpll
mov
add
pop
test
pop
cmc
je
dec
adc
popa
and
or
jo
notl
mov
lret
aaa
and
popa
lret
stc
push
aas
out
shl
int3
mov
adc
sti
jmp
adc
and
dec
adc
cmpsb
push
sbb
aas
and
mov
lock
test
dec
jnp
jmp
cmpsb
sbb
jmp
sarb
movsb
inc
lahf
sbb
les
iret
jecxz
shll
or
sbb
dec
loopne,pn
inc
divl
out
cmp
adc
lock
and
sbb
addl
pop
or
jns
testl
xor
push
pop
int
test
adcl
jne
mov
imul
push
mov
nop
pusha
test
pop
loop
outsb
mov
jae
insl
push
call
pop
xchg
outsl
mull
imul
jle
aam
and
pushf
mov
push
push
jl
dec
adc
mov
ja
inc
mov
add
fisubl
pop
out
es
sbb
daa
outsb
dec
inc
sub
push
fstpt
lods
xor
adc
mov
in
je
xchg
xchg
sbb
push
flds
inc
pushf
enter
pop
std
xor
pop
pusha
add
addr16
mov
fstps
int3
fs
lock
mov
fistpl
jecxz
adc
je
inc
sti
inc
dec
repnz
ret
or
in
stc
lret
mov
xchg
jnp
push
lahf
sbb
inc
jge
les
jno
out
scas
out
negl
gs
push
jno
fdivs
or
gs
enter
or
cmp
aad
shll
inc
inc
rol
cmp
repnz
fbld
movzbl
xchg
jmp
or
inc
xchg
insl
fisubrs
pop
aas
jmp
jge
loopne
jecxz
mov
in
xor
inc
adcb
xlat
add
jno
in
jle
or
sbb
adc
pop
xchg
stos
fistpll
xor
lahf
jns
in
or
xchg
and
popa
or
clc
shrb
jge
pop
pop
lahf
stos
mov
pop
popa
lret
push
imul
lret
adc
aas
sbb
lods
mov
movsb
aaa
shrb
xor
mov
cs
xchg
imul
mov
inc
aas
in
jle
loop
int3
pop
loopne
das
stos
lock
js
mov
jne
ret
xor
xor
rep
sbb
rorb
inc
or
sti
jl
and
fucom
mov
test
cld
jp
fbstp
fiaddl
mov
ret
lret
pop
push
movd
loopne
xor
in
jle
clc
out
scas
pop
ret
bound
jb
ljmp
aam
ret
jnp
and
enter
nop
int3
push
mov
sbb
cmp
ja
pop
sbb
sub
cmp
sub
sub
mov
mov
pop
fmull
shrb
out
std
add
je
leave
movsl
insl
pusha
js
mov
push
gs
ss
stos
imul
in
leave
scas
sbb
push
inc
and
mov
and
lock
lret
adc
int
dec
mov
sub
insb
pop
cmpsb
sub
jle
aad
out
xchg
mov
adc
insl
sbb
dec
or
div
jg
mov
insl
xchg
hlt
ljmp
xor
outsb
repnz
fbstp
je
sub
fsubrs
ret
mov
notb
das
pop
pushf
mov
xchg
pop
ret
mov
push
fisttpll
sub
push
ss
movsb
jb
mov
mov
repz
inc
imul
pop
pop
push
negb
mov
das
push
ret
out
lret
lea
in
loope
add
push
xor
mov
inc
cmp
in
mov
cwtl
inc
sbb
loopne
adc
repnz
sub
popa
stos
idivb
into
mov
push
movsb
daa
xchg
push
mov
icebp
leave
xor
and
popa
xchg
add
mov
and
cltd
lods
jge
push
jne
add
sub
adc
xchg
arpl
mov
mov
push
imul
rolb
mov
pop
mov
aas
dec
push
mov
loop
rorb
lcall
das
mov
testl
pop
loop
xor
add
inc
inc
mov
sarb
inc
xor
cmp
subps
inc
pop
adc
mov
mov
outsl
loope
int3
adc
ljmp
rcr
add
or
lret
sub
cld
shlb
mov
jo
add
cld
and
push
cmp
call
gs
fdivrl
subb
repz
push
xchg
adcb
add
rcrb
ret
je
jecxz
aam
xchg
push
ja
cltd
les
repz
mov
cs
lret
add
lods
push
pop
or
inc
push
ds
jae
icebp
or
decl
movsl
mov
mov
dec
dec
or
mov
dec
push
insb
mov
push
sub
push
out
jg
add
pop
jmp
sub
daa
xchg
lret
ja
aam
js
or
lcall
fmuls
xor
loope
adc
rcrb
and
stos
aam
fisttpl
jge
xlat
dec
outsl
push
fsubrl
add
mov
andl
out
mov
cmp
push
ja
mov
mov
mov
scas
daa
pop
lcall
xchg
outsb
adc
sbb
movsl
dec
pop
insl
in
aas
arpl
mov
repz
cmp
nop
outsl
cld
xchg
insb
cli
cli
addl
outsl
push
xchg
rcrl
fldt
out
mov
mov
ret
pusha
mov
cmpsb
loop
or
xor
mov
or
push
jnp
push
pmullw
jge
test
imull
mov
sbb
mov
aad
js
fstl
lret
cs
movsb
es
push
jns
fcompl
or
xchg
and
jl
fldcw
mov
aad
jnp
add
icebp
loop
cmc
and
sbb
push
jb
ret
pop
cwtl
scas
adc
mov
and
add
lock
xchg
repnz
jnp
sub
sub
jo
inc
and
ds
adc
clc
xchg
int3
xchg
push
divl
xor
push
pop
mov
xchg
arpl
inc
shl
cmc
pop
push
sbb
fcomps
inc
jecxz
jnp
jne
lock
add
loope
xor
ja
daa
nop
dec
rcrl
repnz
cmp
cmp
outsb
mov
jg
sarl
cmp
push
mov
cli
ret
xchg
roll
pop
scas
xor
lret
jg
xchg
jmp
cltd
out
xor
and
push
sbb
adc
xchg
xor
dec
jge
push
mov
or
stc
cs
pop
popa
out
dec
sub
sbb
stos
or
test
and
mov
fwait
sahf
mov
jo
pop
fldt
inc
bound
mov
mov
ja
int
leave
enter
add
adc
lret
ret
in
mov
add
leave
push
xchg
leave
sahf
push
lahf
fistl
clc
cmp
data16
jg
addr16
test
xchg
add
rorb
movsb
add
decl
adc
mov
andl
or
mov
push
inc
jle
xor
jge
mov
push
ja
andl
fcomi
xchg
jp
jmp
push
mul
mov
add
mov
arpl
add
lret
mov
ds
push
push
add
lcall
sahf
add
or
outsl
sub
popl
push
sbb
or
jle
outsb
or
stos
fildll
cmp
lret
jnp
or
sub
jmp
mov
ljmp
not
lods
cmpsb
cmp
mov
push
sbb
xchg
mov
xlat
jbe
sbb
push
test
push
neg
in
and
mov
mov
pop
xor
mov
push
call
shr
lahf
ja
sbb
movsl
or
js
mov
cld
orb
js
aas
push
mov
addb
mov
incl
ljmp
flds
aam
mov
stc
fsubr
aas
in
push
fmull
shrb
aas
ss
jnp
adc
gs
add
sbb
xchg
ds
int3
mov
das
stc
mulb
sbbl
mull
fidivs
sub
repz
jne
inc
lret
addl
pop
pop
icebp
stos
movsl
lcall
mov
push
test
add
lods
sub
cli
add
cmpsb
out
insb
jb
lcall
cwtl
stos
cs
sbb
lret
cs
sub
push
bound
fildl
out
mov
sahf
mov
movsb
adc
mov
lds
loop
cmp
add
jae
dec
mov
mov
sarb
es
pop
iret
mov
inc
jo
into
mov
lret
popa
mov
shrl
mov
data16
scas
or
aad
cs
lods
xchg
insb
add
fcomp
divb
movsl
je
dec
in
fld1
mov
push
inc
cwtl
push
or
mov
and
adc
xchg
mov
pop
stc
insb
adc
mov
jg
fs
jmp
sti
mov
mov
xlat
sub
daa
test
mov
nop
movsb
int3
pop
cs
or
mov
xchg
stc
cmpsb
pop
push
mov
aam
sbb
cltd
in
mov
jno
push
cs
aas
pop
or
xchg
dec
mov
rcll
sub
inc
xchg
ds
xor
scas
ja
jmp
sbb
dec
dec
sub
pop
pop
loopne
xor
adc
mov
cli
mov
mov
test
imul
dec
or
out
adc
ja
mov
dec
cmpsl
test
xchg
ljmp
mov
imul
loopne
cmpsl
stos
mov
jecxz,pn
jg
sub
repz
sbb
add
imul
add
cltd
popf
jo
cmpsb
add
mov
scas
ret
and
andb
sarl
jno
das
lcall
push
pop
inc
int3
popf
jmp
fldl
pop
nop
test
jo,pt
jbe
sub
add
sbb
mov
pop
inc
insb
dec
mov
mov
pop
mov
pminub
out
jns
push
data16
test
js
in
call
mov
pop
jp
cmc
outsl
or
jbe
adc
sub
push
in
xor
xchg
stc
jo
je
mov
pop
xor
sub
ror
movsb
js
fs
cmp
test
sub
push
jno
push
mov
push
cmp
rcll
mov
out
jns
imul
out
mov
add
adc
fwait
add
sub
es
int
push
aaa
inc
iret
pop
in
out
lock
add
outsl
and
inc
lcall
xor
into
sub
lret
leave
pop
es
lret
pop
shll
lea
dec
adc
test
bound
sub
fsts
hlt
and
push
inc
leave
mov
mov
xchg
fsubr
cwtl
and
push
mov
outsb
fcmovbe
mov
and
xchg
loope
xchg
or
push
pop
je
sbb
or
sub
int
aas
out
and
daa
adcl
sub
je
cld
mov
pop
scas
xor
ret
jmp
lret
shlb
inc
outsb
xlat
cli
sub
std
xchg
outsb
inc
imul
adc
jp
xchg
mov
or
ret
push
or
pop
dec
imul
inc
int
push
cld
ficomps
inc
insl
and
mov
push
sub
sub
mov
mov
outsl
aas
mov
mov
push
and
stc
push
stos
outsl
stos
test
sbb
adc
push
jl
xchg
leave
jae
ss
sbb
mov
jb
sarl
pop
xchg
jns
jo
cli
mov
mov
add
sbb
rolb
inc
xchg
push
cmp
sbb
mov
js
mov
adc
pop
ret
jo
dec
pop
or
scas
subl
repz
loopne
sub
das
repz
in
xchg
shll
adc
hlt
jg
in
out
mov
push
jbe
in
jecxz
push
add
dec
repnz
mov
adc
sub
popf
pop
mov
ss
cld
or
jg
push
aas
dec
mov
push
jmp
fsub
lock
jge
mov
daa
push
inc
test
bound
sarb
sub
xorb
pop
inc
fcomi
jns
outsb
pop
aad
fwait
in
xor
mov
shrl
pop
xchg
add
mov
fs
jmp
dec
dec
mov
ljmp
jbe
je
test
xor
fs
ds
in
mov
mov
jmp
pop
sub
mov
cmp
sti
sub
out
pushf
cwtl
imul
ds
movsb
adc
or
mov
shll
pop
xchg
push
cmp
nopl
sti
xchg
and
push
sub
sub
push
xor
out
in
pop
inc
mov
adc
stos
push
push
add
bound
repnz
mov
cmovae
lds
in
lret
cmp
ss
jmp
mov
fwait
sub
xchg
fistpll
dec
or
cmpl
aaa
jns
sti
sbb
cltd
and
dec
imulb
cmc
sbb
or
jbe
test
aaa
push
xor
loope
dec
sti
push
mov
subl
add
jbe
std
cmp
inc
imul
jo
and
cmp
add
mov
pop
frstor
push
data16
hlt
outsb
aad
lods
loope
fdivs
ret
jb
push
es
and
stc
push
mov
jo
or
subb
sub
sub
mov
xchg
dec
int3
sbb
mov
adc
aam
hlt
sbb
dec
jg
cmp
testb
repz
js
push
out
and
outsl
mov
dec
xchg
inc
scas
aaa
lods
lcall
sahf
mov
mov
dec
sbb
pop
dec
dec
inc
adc
add
mov
pop
cs
movsl
cmp
push
pusha
xor
subl
lcall
add
mov
clc
push
xchg
dec
mov
pop
sub
mov
xor
push
fldt
iret
sbb
sbb
mov
nop
jg
arpl
and
mov
inc
push
cmp
jne
cmpsl
fwait
aad
mov
aam
cmp
repz
dec
shll
popf
inc
mov
jecxz
test
cmp
and
adcl
dec
clc
xchg
mov
fcmove
and
cmp
xchg
jg
xor
mov
xor
push
dec
adc
cmp
loopne
jge
mov
or
shrb
pop
sbb
loopne
idiv
int
xchg
dec
cli
stos
rcrb
lret
call
out
pop
fstps
clc
xchg
add
jb
stc
sahf
fistpll
inc
jp
repnz
test
mov
dec
sub
or
mov
lret
int
mov
pop
es
movsl
out
cmp
rcll
les
fildl
pop
mov
xor
mov
popf
jno
loope
xchg
jmp
fbstp
mov
in
push
lock
imul
stos
cli
test
mov
int3
pop
add
in
scas
push
add
scas
pop
add
movsb
fld
movsb
test
cmpsb
push
aam
fildl
xor
cmp
cmp
inc
test
lods
add
lods
mov
addr16
into
push
ret
jns
jae
popf
ficompl
pop
mov
sarl
lret
adc
mov
inc
adc
repnz
jle
xchg
mov
mov
inc
call
mov
jne
jl
inc
fstl
dec
movsl
xchg
int3
push
adc
fbstp
xor
out
loope
lret
stos
jno
iret
rclb
adcb
push
subl
and
xchg
rol
iret
dec
or
ret
pop
cld
mov
aad
jl
jp,pt
jp
or
mov
xor
mov
mov
pop
mov
mov
fildl
and
out
lods
clc
icebp
mov
mov
loop
loopne
call
roll
jno
int3
mov
jg
push
sarl
mov
je
int3
cmpsl
fidivrs
dec
push
lcall
sub
mov
add
jbe
lds
pusha
divb
cli
ja
out
lock
js,pt
or
sub
pop
cmpsb
out
pop
mulb
pusha
push
call
lds
outsl
or
mov
pusha
ud0
and
xor
out
mov
push
lahf
sti
int3
sbb
and
test
pusha
or
je
or
and
outsl
call
stos
popf
or
and
cmp
pop
pushf
ficompl
pop
sub
bound
idivb
and
dec
into
loope
stc
pushf
or
mov
scas
inc
movsb
inc
fcomps
and
dec
sub
sub
fdivl
test
notb
sbb
shlb
dec
xor
data16
fs
or
xchg
cmp
ljmp
divb
xlat
xchg
lea
out
mov
mov
fwait
mov
popfw
or
or
mov
arpl
xchg
sbb
cld
test
dec
pop
mov
pushf
addb
out
jno
mov
sbb
nopl
inc
std
mov
mov
ds
movsl
push
iret
stos
mov
rorb
mov
lcall
dec
mov
cs
mov
and
hlt
jae
xchg
jge
pop
or
arpl
mov
push
push
cs
dec
out
orb
jae
movsb
xor
stc
mov
sbb
dec
push
test
jno
inc
sbb
pop
and
sbb
cmp
aam
mov
dec
into
outsb
or
pop
ret
in
cmp
adc
pusha
incl
iret
jno
add
pop
jg
jns
jns
cmp
jno
mov
jb
inc
imul
jns
shrb
inc
jnp
imul
js
clc
sbb
inc
fnstcw
dec
fldenv
orb
xor
fucomip
mov
dec
int3
jbe
out
sbb
repnz
mov
aam
lahf
stc
dec
push
cwtl
cmp
lods
lret
nop
and
test
aam
mov
in
fmull
popf
sub
cmp
push
arpl
mov
xor
inc
in
add
add
mov
in
leave
jle
dec
xchg
ret
pop
cld
mov
hlt
in
cli
daa
mov
and
mov
mov
lods
jbe
imul
xor
cmpsb
icebp
nop
stc
mov
adc
mov
mov
lock
jo
out
add
inc
pop
or
push
aam
lds
mov
pushf
aas
stos
rclb
sub
frstor
jns
imul
push
rorl
jle
pop
mov
sbb
test
cmp
xchg
jns
stos
loop
mov
push
outsb
sbb
out
adc
mov
and
jge
sahf
loop
or
jb
sar
test
fwait
je
aaa
xchg
pop
jno
scas
dec
mov
push
mov
xchg
sti
jns
inc
in
cmp
sbb
cs
pop
push
outsl
sub
lods
cmp
xor
stos
push
aas
mov
fiadds
jp
adc
pop
jge
adc
push
inc
pop
pop
add
jmp
das
scas
and
lds
lods
dec
cmp
jne
mov
lret
jg
or
clc
pop
out
addr16
cmpsb
dec
loope
pusha
je
les
jo
pop
int
movsb
mov
pop
adc
mov
dec
addb
outsb
and
xchg
mov
bound
les
add
shrb
rep
xlat
lcall
push
ret
in
cmc
jle
sbb
out
fwait
getsec
gs
mov
xchg
ljmp
in
enter
adc
add
jle
movsb
nop
adcb
ja
jne
add
test
lahf
dec
xor
mov
lret
addr16
pop
jle
jae
jo
shl
popa
bound
nop
adcl
fstpl
incl
cmc
mov
fwait
insl
sbbb
js
sub
lea
inc
pop
sahf
cmp
and
adc
in
lds
ret
sub
test
or
clc
mov
push
loop
sbb
popf
fdivr
js
add
lock
or
jnp
loopne
addr16
adc
dec
push
lcall
les
stos
movsl
inc
push
aam
pop
mov
mov
out
enter
push
add
mov
lret
push
mov
sub
or
mov
sub
in
paddsw
mov
adc
cmc
test
jl
and
jmp
loopne
cmp
add
movsl
xchg
mov
cltd
cwtl
or
adc
out
mov
call
shl
testb
push
out
cli
xchg
fwait
adc
sub
cmc
iret
mov
out
mov
loope
jg
ljmp
pop
scas
push
lcall
xor
inc
mov
or
seta
fistl
inc
out
mov
cmpl
ret
outsb
adc
xchg
push
pop
fs
sub
repz
adc
pop
das
leave
out
mov
jno
cmp
lods
xchg
add
jmp
and
and
push
and
xor
or
xor
daa
ds
in
idivb
add
add
cmp
sub
push
bound
lods
sbb
jno
add
add
dec
mov
rcr
jg
shlb
fstl
loop
mov
adc
mov
cmc
xchg
call
sbb
mov
popl
pop
dec
sub
push
add
repz
std
sub
scas
mov
mov
hlt
cmpsb
out
stos
and
inc
clc
cli
stos
icebp
xchg
dec
stos
rorl
or
data16
in
inc
jne
inc
stc
stos
add
jo
or
cli
xchg
push
mov
fldcw
xor
aaa
jmp
cmp
jmp
gs
adc
xchg
shlb
in
push
sbb
repnz
cmp
negb
pop
dec
pop
and
and
push
lods
mov
ja
push
inc
decb
popf
andl
je
pop
enter
sub
addb
cli
push
or
xor
lds
shlb
cmp
sbb
icebp
addr16
cmpsl
xchg
call
pusha
lahf
bound
adcb
cmp
daa
fstpl
cwtl
mov
int
or
aas
dec
pop
sub
xchg
mov
ljmp
inc
push
xchg
arpl
ror
repnz
xlat
push
mov
ja
or
iret
js
mov
out
sub
mov
mov
arpl
into
pop
fs
xlat
popf
xor
jae
imul
in
clc
cli
cmp
hlt
lahf
push
jb
call
inc
loopne
or
inc
jle
push
pop
jmp
cmp
enter
mov
lret
sbb
sar
loope
bound
test
dec
jb
cmc
inc
aaa
inc
in
jo
pusha
jns
scas
in
push
adc
cwtl
lahf
data16
icebp
push
lock
outsb
inc
push
dec
mov
cmp
xchg
out
or
test
adcb
mov
insl
es
xor
cmp
movsl
mov
stos
nop
cmc
cmpsl
xor
jl
mov
dec
gs
sub
int
out
insb
sbb
xor
dec
push
jle
inc
in
jecxz
pop
pop
jg
imul
mov
aam
mov
mov
sbb
call
cmp
xor
in
mov
xchg
mov
in
fsts
xor
mov
sub
jno
pop
sub
inc
stc
push
aam
and
push
daa
cld
mov
ja
addl
push
mov
ja
adc
fs
ret
call
imul
sub
dec
andl
mov
push
jmp
sarl
neg
in
xor
roll
pop
or
cmp
mov
adc
xor
mulb
dec
or
jge
aam
jle
jmp
loop
ret
subb
adc
les
mov
loopne
outsl
pusha
pop
enter
psadbw
mov
std
shll
fsubs
mov
cmp
gs
add
shlb
shll
jo
sti
sar
bound
xor
movsb
inc
sbb
sub
pop
fisubrl
jns
inc
int3
lahf
or
insl
fs
adc
iret
push
adc
out
mov
push
fisttpl
cli
into
imul
and
aam
popf
rorl
out
je
and
scas
test
mov
outsb
mov
lods
sarb
ss
or
dec
mov
sbb
inc
jno
jne
mov
xchg
loope
xor
sub
jne
sub
xchg
daa
mov
xor
sub
ljmp
aam
xchg
cmp
jp
repnz
or
dec
mov
pushf
insb
pop
xor
scas
mov
mov
mov
pushf
rcll
sbb
out
dec
xchg
adc
mov
dec
mov
adc
mov
inc
test
in
repnz
loop
nop
mov
cld
lret
repz
pop
sbb
xchg
push
int3
mov
rorb
mov
loopne
daa
pop
repz
popf
mov
and
jbe
in
arpl
cmpb
mov
add
lcall
inc
ret
lock
xor
movsb
scas
pop
mov
sti
sub
xchg
mov
movsl
mulb
testl
cmpsl
test
push
dec
lods
push
fstpl
aad
adc
sub
lods
jle
sub
ds
jmp
xor
out
scas
imul
shlb
and
xor
and
mull
pop
and
scas
cwtl
rcr
push
sbb
sub
jg
inc
cmp
aam
dec
mov
or
add
push
test
inc
and
adc
out
cwtl
push
push
mov
inc
out
jmp
mov
cmp
mov
pop
scas
push
je
push
jae
mov
xlat
dec
int
lds
insb
adc
mov
and
lods
jbe
test
in
test
pop
xor
sar
jo
inc
fbstp
fdivl
push
jg
mov
data16
je
subb
test
insl
test
mov
or
repnz
lahf
andb
imull
in
imulb
sbb
lahf
hlt
mov
sti
mov
inc
aas
inc
dec
or
inc
adc
pop
inc
subb
das
pop
pop
ret
std
stc
addr16
and
jno
and
push
xlat
in
push
sar
into
xor
and
pop
mov
nop
dec
scas
dec
sub
inc
loope
cltd
push
xor
mov
sub
and
adc
xchg
push
pop
fs
sbb
push
hlt
sub
dec
jo
push
lock
stc
and
popa
fwait
dec
call
xor
fldt
cmp
pop
lahf
xor
daa
in
sub
jl
in
jg
pop
mov
inc
ja
movsb
fidivl
and
mov
out
mov
imul
add
loope
faddl
arpl
and
pop
mov
in
popl
gs
lds
xchg
xchg
xrelease
repnz
push
dec
mov
shll
dec
gs
pop
adc
scas
dec
pop
lea
scas
notl
pop
sahf
sbb
or
mov
je
jg
add
mov
shlb
addr16
jecxz
in
mov
lcall
push
add
inc
out
dec
add
clc
mov
out
loopne
xor
and
andl
std
test
mov
mov
xor
lahf
cwtl
xchg
jns
dec
adc
and
mov
mov
mov
out
popf
pop
or
pop
jb
ret
sub
rclb
adc
out
dec
bound
out
xor
nop
mov
cli
xchg
in
mov
and
jg
inc
lods
or
or
lret
cmc
test
add
leave
ja
cmpsb
ja
inc
jns
iret
js
xor
and
fstpl
pop
cmp
call
mov
dec
adc
cmp
aad
outsb
adc
testl
pop
push
jnp
dec
push
int
push
push
push
mov
rcr
loop
jecxz
jne
sbbb
out
into
packuswb
mov
push
xchg
rol
sub
lods
js
add
mov
inc
inc
popa
inc
and
ljmp
insb
outsl
movl
std
adc
push
iret
dec
mov
fwait
adc
mov
add
adcl
dec
xchg
shrl
cmp
or
push
jmp
hlt
mov
cmp
xor
movsb
adc
dec
push
aas
out
popa
cld
pop
add
iret
add
add
or
dec
mov
inc
and
pop
es
mov
or
mov
xor
adc
lret
jecxz
aam
leave
mov
shl
push
mov
push
cmpsb
xchg
mov
addr16
jb
js
test
push
jg
mov
dec
out
stc
sub
mov
mov
je
sti
lret
lcall
in
jno
add
xlat
fisubl
cmp
into
or
in
xor
pop
aas
jmp
mov
imul
dec
