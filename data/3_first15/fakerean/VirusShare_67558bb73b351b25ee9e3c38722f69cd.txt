mov
iret
jecxz
xor
imul
cmpsl
pop
xchg
and
push
pop
add
out
jnp
pop
inc
xchg
aam
jp
push
dec
jp
dec
jp
push
add
adc
dec
or
cmc
lods
scas
fwait
in
pop
mov
cmp
mov
int
iret
dec
mov
addl
jp
lcall
addl
jp
sahf
xchg
push
sbb
add
mull
orb
clc
push
cmpsb
pop
outsl
push
cmpsl
leave
pop
lcall
dec
and
iret
dec
addr16
fisttpll
scas
cmp
loope
jp
dec
leave
shlb
mov
das
pop
mov
icebp
mov
scas
fstpt
ret
adc
mov
movsl
js
jne
sbb
add
mov
xor
pop
call
scas
mov
xor
pusha
popf
mov
push
xor
jp
les
fisttps
in
rcll
ljmp
push
push
cmp
clc
jno,pt
mov
push
xchg
nop
push
inc
mov
pop
dec
mov
std
lahf
lods
xor
xor
in
and
ja
and
into
rcll
pushf
cwtl
nop
push
fstl
and
iret
cltd
push
jmp
fnsave
jae
lahf
or
out
outsb
cmp
sbb
mov
cmp
inc
jae
test
mov
add
jae
pop
jns
xlat
or
roll
mov
rclb
mov
sbb
cmp
aam
mov
fwait
sbb
adc
mov
jo
inc
xor
push
jns
jle
jg
pop
dec
rolb
cli
fists
mov
mov
mov
pop
or
push
lahf
dec
mov
cmp
out
push
xchg
xchg
sub
nop
sub
sbb
mov
ret
push
adc
mov
mov
negb
scas
leave
pop
rcll
xchg
push
sbb
sub
mov
popw
mov
outsb
cld
jne
lea
movsb
sub
mov
out
adc
mov
mov
push
inc
mov
jl
push
xchg
xor
sub
pop
pop
bound
mov
mov
push
cmp
mov
lcall
push
mov
lret
or
test
add
cmp
mov
push
and
inc
icebp
mov
jbe
mov
inc
mov
jns
mov
dec
ja
test
ds
mul
ds
mul
ds
mov
fnstcw
jnp
cltd
and
std
in
rol
dec
aaa
and
imul
int
mov
xchg
cmpsl
ja
mov
xchg
clc
add
addr16
mov
lahf
mov
mov
xlat
fcompp
cs
or
div
loope
dec
popf
es
adc
xchg
ja
jge
xchg
and
push
aaa
mov
sar
add
mov
getsec
xchg
or
jne
sub
lret
in
movsl
jae
inc
xchg
mov
sbb
push
adcl
dec
xor
flds
adc
mov
fists
insl
scas
sbbl
and
pop
outsb
cmpsl
sbb
scas
xor
pop
cs
xchg
or
push
ja
and
dec
data16
jle
push
cltd
jle
lret
fdivr
jg
into
dec
popa
fwait
notb
je
incb
fisubrl
ja
cwtl
pop
jg
cmpsl
dec
push
push
pop
mov
fldcw
testb
mov
jno
mov
xchg
stos
clc
and
mov
push
movsl
mov
mov
ss
fnstcw
test
adc
mov
sarl
je
pop
das
and
cwtl
cmpsl
mov
stos
mov
sbbl
dec
sbb
sbb
sbb
pop
fisttpl
stos
jbe
insb
cli
sub
cmpsl
push
stos
jbe
push
daa
ja
ss
fstpt
xchg
cmp
mov
scas
mov
cmp
cmp
jbe
es
lahf
and
cmp
xchg
pusha
mov
mov
mov
adc
cltd
xchg
ss
dec
jbe
sub
mov
jae
push
enter
inc
dec
data16
aam
mov
sbbl
test
cmp
ja
xor
dec
ss
pushf
lock
jge
inc
call
pop
ja
xor
stos
mov
mov
int3
cmpsb
test
pop
std
mov
sbbb
and
or
adc
inc
mov
add
mov
pop
pop
mov
jmp
lcall
lea
mov
hlt
scas
adc
mov
scas
stos
ja
mov
es
lock
pop
scas
lret
data16
inc
sbb
mov
and
fsubl
inc
push
push
jbe
aaa
fildl
xchg
ret
inc
test
rorl
pop
push
mov
jno
xchg
scas
js
jns
ja
xor
dec
subl
push
adc
je
subb
lcall
sbbl
lcall
xor
or
xchg
mov
sub
repz
pop
lcall
jbe
jbe
lock
and
jbe
xor
std
jbe
mov
loope
lcall
lcallw
mov
loopne
mov
decl
dec
push
push
sahf
pop
scas
stos
xlat
lods
ja
xor
test
sbb
jbe
xlat
scas
mov
in
ss
mov
mov
xlat
mov
andl
shlb
mov
mov
mov
pusha
into
into
subl
jbe
mov
xchg
pusha
xor
scas
mov
push
push
fidivrl
mov
jae
fs
mov
add
data16
mov
mov
jge
out
divb
dec
in
jecxz
push
mov
lcall
ss
scas
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
negb
mov
movsl
mov
mov
add
push
int
xchg
rclb
and
mov
adc
jle
dec
inc
mov
out
add
lcall
jbe
mov
test
mov
jbe
mov
jbe
mov
fnsave
jbe
mov
mov
jbe
mov
jbe
mov
jbe
scas
mov
jbe
mov
jbe
mov
mov
mov
jbe
mov
jbe
mov
jbe
mov
jbe
stos
mov
jbe
mov
negb
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
scas
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
mulb
testb
mov
jbe
mov
mov
jbe
mov
jbe
mov
jbe
mov
out
and
jbe
divb
mov
jbe
scas
mov
jbe
mov
mov
jbe
mov
jbe
mov
xchg
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
mov
jbe
scas
mov
jbe
ss
jbe
les
mov
divb
dec
mov
and
mov
pusha
js
cltd
pusha
xor
dec
sarb
test
xchg
push
adc
and
fdivrs
jecxz
and
jecxz
ficoml
adc
push
aaa
mov
aad
add
mov
push
sbbb
xor
jae
jmp
push
pop
and
push
inc
jp
mov
cmpsl
jbe
mov
and
and
aaa
repz
es
or
mov
pushf
idiv
cli
das
les
dec
lret
ret
jl
jnp
and
adc
mov
mov
xchg
mov
movsl
or
shll
imul
stos
jns
mov
inc
or
fsubs
mov
dec
scas
xchg
mov
jnp
jp
mov
das
icebp
hlt
push
scas
add
div
dec
adcl
and
mov
outsb
fcomi
sub
mov
mov
mov
hlt
pop
mov
outsb
fdivr
sub
xchg
cwtl
daa
xor
dec
icebp
mov
jns
cli
pop
iret
lcall
mov
stos
mov
hlt
dec
scas
int3
mov
jbe
mov
sub
push
inc
and
sbb
nop
mov
mov
movsb
mov
dec
lcall
test
js
push
sbb
mov
leave
jle
mov
sub
cli
out
inc
jbe
mov
jbe
notb
sbb
negb
fcmovu
mov
jns
cltd
and
xchg
js
cwtl
mov
andl
sbb
adc
out
aaa
pop
mov
daa
test
insb
xorb
ja
into
cmpsb
jge
pop
push
test
jbe
xlat
xlat
pop
sub
mov
mov
cmp
mov
xlat
push
sbb
cmp
inc
sti
fdivp
pop
into
cli
lods
xorb
jge
ja
inc
and
mov
xchg
lods
out
std
mov
or
mov
stc
test
and
cmpsb
add
gs
lods
mov
mov
mov
push
lcall
lods
fcomi
in
adc
ss
out
fiadds
mov
ljmp
sbb
das
jae
cwtl
idivb
lcall
test
and
ret
pusha
push
pop
jp
xor
lsl
pop
push
mov
xchg
mov
sub
outsb
jle
mov
ret
fiaddl
mov
call
out
xchg
scas
jmp
cwtl
test
fdivrs
mov
pop
jbe
mov
test
and
fsubs
gs
lods
mov
loopne
pop
cli
lods
mov
jmp
push
lcall
lods
fcomi
lods
xchg
mov
jo
test
and
lods
mov
mov
or
add
arpl
inc
cmpsb
stos
imul
lcall
fs
imulb
aam
jge
in
mov
and
ja
mov
fcmovu
mov
jnp
cltd
and
mov
ss
mov
xor
xchg
cmp
mov
add
pop
sbb
aam
add
pop
bound
xchg
xorb
mov
inc
and
ja
daa
mov
mov
cs
mov
in
jge
fidivl
arpl
pusha
cltd
mov
push
dec
flds
and
sbb
cmpsb
xchg
cmp
fiaddl
add
data16
lcall
mov
pushf
ss
int3
cmpsb
jge
sbb
sub
or
mov
cmpsb
jge
sbb
stos
mov
loop
stc
dec
xchg
insl
out
mov
and
data16
add
int3
cmpsb
sub
xchg
out
mov
mov
loop
cmpsl
or
jecxz
into
std
jl
fidivl
and
jl
pop
jbe
mov
test
and
fsubs
gs
lods
mov
loopne
pop
cli
lods
mov
push
lcall
lods
fcomi
lods
xchg
lods
outsl
push
xor
add
into
cmpsb
daa
mov
insb
sub
notb
pop
sbb
mov
fdivrs
lcall
xchg
lods
mov
ret
mov
in
outsb
pop
out
insl
mov
es
jns
pushf
fdivrs
div
inc
and
rolb
ja
and
or
aam
mov
mov
cmp
mov
aam
sbb
mov
movsb
das
jnp
cwtl
and
scas
es
cli
and
shll
shr
mov
fstpl
dec
xchg
mov
mov
sub
mov
ret
mov
sub
insl
mov
es
jns
jl
xor
mov
arpl
rolb
ja
lcall
cld
xchg
call
mov
mov
cmp
mov
jno
ss
mov
lea
adc
retw
mov
sub
insl
mov
scas
mov
cmpsb
dec
repnz
sbbl
js
lcall
ss
jl
mov
mov
ret
xchg
test
cs
testb
mov
out
aaa
sub
fistl
and
insl
cmpsb
stos
movsl
std
jbe
mov
xchg
fnstcw
jnp
pop
and
notb
pusha
sbb
and
mov
in
xchg
cmp
xchg
cwtl
daa
xor
lret
out
aaa
pop
bound
stos
jl
add
ss
iret
cmpsb
jge
sbb
mov
mulb
filds
inc
lcall
jge
jge
js
fimull
sub
dec
and
xchg
lods
and
jnp
xchg
ja
jns
cli
and
stos
stos
std
adc
in
icebp
je
test
mov
outsb
fcompl
jb,pn
mov
mov
jno
mov
ss
jge
pop
cltd
and
xchg
cmp
mov
stos
lods
addl
cmpsl
sub
cli
in
mov
push
lcall
lods
fcomi
in
push
addr16
das
sbb
cmp
aam
cmpsb
and
rcrb
mov
scas
enter
dec
outsl
push
fidivs
nop
jbe
mov
mov
sub
jge
sbb
incb
aam
cli
mov
jge
dec
rcrl
std
mov
imulb
pop
lret
mov
jnp
jp
mov
das
icebp
hlt
cmpsb
add
gs
scas
mov
imul
fimull
inc
push
mov
jns
fisubl
gs
mov
mov
jge
rcrb
and
pop
lret
mov
jnp
jp
mov
das
icebp
hlt
cmpsb
add
gs
scas
mov
pusha
out
cmp
xor
mov
arpl
rolb
aaa
sub
dec
jno
mov
rolb
and
rcrl
clc
mov
verr
in
sbb
aaa
add
dec
cltd
and
jmp
dec
inc
fisttpl
movsb
xchg
pop
fld
and
movl
mov
mov
insl
pop
out
stos
xchg
mov
xchg
in
xlat
and
mov
gs
popf
sub
hlt
pop
jl
es
dec
dec
dec
mov
sbb
sbb
mov
pusha
pop
repz
mov
sub
out
dec
inc
into
sub
cld
or
and
xchg
lods
gs
out
out
fmull
mov
mov
cmp
xchg
jne
jb
push
stc
mov
or
je
daa
or
and
out
adc
xchg
dec
pop
sti
or
xchg
ja
mov
fdivl
sahf
rcll
push
inc
sub
pop
sbb
mov
nop
pop
lahf
xor
dec
or
pop
push
movsl
std
js
add
xchg
adc
xorl
dec
or
adc
int
sar
ficomps
sub
mov
ja
inc
push
push
mov
mov
cmp
fsubrs
ds
out
daa
jge
cmpsb
xchg
adc
fmuls
adc
addl
lret
xlat
aam
imul
dec
push
xchg
push
jl
mov
jge
mov
divl
daa
or
in
aad
int
jle
or
jne
scas
fnstcw
or
cmp
pop
mov
jl
mov
push
xchg
mov
ljmp
mov
das
imul
insb
mov
push
cltd
push
xchg
insb
xchg
or
sub
ret
sbb
add
and
ss
into
mov
dec
inc
roll
aad
mov
pop
insb
or
add
aas
jnp
out
add
jp
into
inc
cwtl
mov
aam
ret
sbb
daa
pop
xchg
jne
stos
cld
and
mov
mov
xchg
cmp
js
jg
adc
lcall
fdiv
sub
xor
test
cmp
lcall
repnz
scas
mov
dec
lahf
into
xchg
insb
nop
cmp
jb
repz
mov
pop
push
push
movsb
xchg
mov
adc
jp
rclb
jmp
push
in
dec
scas
and
xor
mov
mov
movl
xor
jg
push
jo
xchg
cmp
out
pop
inc
mov
mov
test
popf
and
xchg
test
out
or
aam
mov
jno
sarb
data16
xor
push
xchg
dec
stos
test
jle
jb
out
jl
push
aaa
inc
adc
push
sub
adc
or
xlat
pop
cmp
sub
adc
sub
inc
push
mov
push
ss
lods
mov
rclb
lods
mov
adc
or
mov
adcl
push
add
dec
xlat
scas
jl
and
pop
les
leave
push
jbe
xchg
repz
or
mov
repnz
xor
mov
movsl
sbb
fmull
scas
lea
mov
inc
shrb
mov
push
jl
stos
push
pop
scas
daa
xchg
jns
mov
xlat
mov
or
xchg
jmp
shr
ret
jg
mov
mov
negb
adc
xchg
mov
push
into
mov
dec
mov
mov
cmp
push
stos
es
sbb
add
sbb
inc
sbb
mov
fildll
sbb
cmp
movsb
mov
and
mov
or
xchg
gs
ret
jmp
cmpsl
cmc
mov
das
push
fistpll
push
insl
inc
pop
add
arpl
loope
inc
xchg
push
mov
lret
popf
push
mov
aaa
addr16
enter
pop
adc
fidivrs
enter
hlt
xchg
imul
push
mov
cmpsb
les
fidivrl
fwait
stos
out
sub
jp
cmpsb
int3
fistpl
hlt
push
push
jmp
push
in
sbbb
scas
mov
cltd
jg
test
mov
sbb
lahf
dec
sbb
int
add
dec
mov
fbstp
push
in
adc
shll
mov
inc
jmp
pushf
out
xor
adcl
xor
mov
mov
clc
pop
cs
xor
out
into
std
les
rcrb
ret
icebp
aam
nop
movsb
outsb
add
scas
dec
push
adc
jb
scas
pop
jecxz
fmull
inc
cmpsl
sbb
shlb
jne
stc
call
mov
jns
notb
mov
mov
jno
push
jmp
adc
and
pop
out
nop
jge
jp
mov
ss
xchg
inc
pop
xlat
popa
and
cmp
int3
pop
xor
mov
int3
mov
out
out
dec
or
test
mov
mov
mov
pop
pop
lea
lcall
push
insl
out
out
mov
std
push
fcompl
adc
dec
lods
cwtl
jb
lock
mov
aas
mov
pusha
xchg
mov
test
ret
repnz
pop
adc
pmaddwd
push
inc
xchg
add
aad
hlt
lods
fwait
aas
xchg
pop
xchg
lods
nop
jl
pop
es
xlat
sub
mov
xchg
or
adc
xor
pop
xchg
xlat
pop
xchg
ss
add
jge
lcall
push
add
ds
sub
inc
mov
jmp
adc
push
cli
scas
cmp
lcall
stos
sub
mov
xchg
or
or
and
xor
sub
adc
std
cmp
pushf
outsl
mov
popa
mov
push
pop
mull
movsl
cwtl
and
lcall
rclb
aad
bound
sbb
pushf
daa
js
addr16
fstpl
dec
out
test
xchg
lret
lds
jp
sbb
loope
dec
jns
sub
push
and
push
jmp
mov
stos
sbb
aas
and
stos
mov
lods
xor
shll
ret
cwtl
xchg
sub
dec
fadd
jne
iret
jp
in
mov
sbb
je
push
and
xor
aad
mov
clc
add
nop
and
cmp
in
adc
mov
and
mov
mov
out
test
push
add
cmp
mov
inc
add
std
jmp
fisttps
jg
push
jnp
loop
mov
addb
mov
pusha
rcr
xor
mov
ss
mov
push
jno
imul
sti
mov
sbb
xor
pop
insb
push
fcomp
mov
mov
adc
mov
or
inc
cli
cmpsb
ss
mov
enter
divl
xchg
and
loopne
add
sub
pop
push
imul
cwtl
jno
lea
or
insb
insb
pop
gs
adc
scas
cmp
jns
adc
into
clc
jno
loopne
notl
adcl
aad
and
sti
repnz
stos
push
dec
loope
aaa
dec
sbb
sahf
mov
fnstsw
jmp
insb
cltd
sbb
mov
sahf
push
fcompl
jno
push
mov
stos
fbld
push
mov
inc
shl
clc
jno
imul
stc
sub
popf
lods
dec
jl
add
xchg
mov
mov
pusha
test
shll
xchg
leave
jno
lret
int
ds
cltd
add
fldl
and
ja
and
ficoml
sub
adc
pop
cltd
filds
ljmp
mov
cmpsb
or
cli
and
ficomps
scas
sub
test
aas
je
int
fsubrl
mov
mov
adc
dec
dec
mov
cwtl
dec
sub
cmp
test
sbb
xchg
addl
in
aad
inc
jno
imul
cltd
and
cmpsb
int3
mov
jo
mov
adc
lret
and
in
shll
shrb
sub
sub
out
mov
push
jb
fmuls
mov
mov
pop
inc
aaa
dec
in
in
dec
jecxz
xor
push
jnp
imul
leave
mov
xchg
cwtl
out
std
sub
cmp
sbb
or
cmp
jle
pop
aad
out
add
pushf
jbe
pop
les
in
add
sub
fildl
pop
adc
sub
cld
scas
arpl
ja
mov
push
or
push
mov
cld
pop
pop
inc
or
lcall
dec
jge
addr16
pop
test
mov
decb
or
xchg
insl
stc
fcomi
aad
test
lret
jne
sub
fistpl
mov
jmp
aad
cmp
xchg
or
push
inc
into
mov
aaa
jp
leave
dec
dec
add
fwait
cltd
insb
pop
mov
aad
lea
push
add
push
mov
ljmp
call
scas
in
repz
lock
pop
popa
popa
push
mov
dec
imul
or
pushf
sbb
inc
cmp
inc
shr
mov
into
xchg
pop
jg
adc
mov
push
scas
pop
out
fdiv
mov
test
push
xchg
aaa
or
mov
xor
mov
inc
cmp
sub
andb
pop
or
repz
insl
das
cwtl
bound
ret
loop
xchg
push
jge
mov
std
or
adc
je
je
cmp
lds
adc
test
sar
xchg
mov
inc
mov
inc
dec
sub
jno
mov
mov
xorl
jle
sbbl
dec
mov
nop
jb
jno
add
dec
shll
iret
cmp
mov
negl
push
or
lods
sbb
cmp
or
mov
nop
pop
xor
dec
jbe
lock
xchg
addr16
jle
mov
mov
jmp
sti
aam
push
sub
fnstenv
push
xchg
and
repnz
mov
xor
fsubrl
in
mov
aam
jne
int
jmp
call
into
lcall
xchg
inc
mov
inc
jbe
jnp
adc
add
sarl
cmp
cmc
in
mov
adc
lock
fcmove
adc
std
lds
jle
sahf
sbb
jecxz
cmp
std
push
jbe
dec
push
scas
push
rorl
cli
jmp
mov
cmp
inc
cmp
aas
repnz
repnz
mov
inc
movsl
cmp
xchg
ficoms
fs
push
mov
ds
jae
addl
jae
xor
push
lea
push
cmc
leave
pop
adc
lea
test
das
xchg
cld
push
sub
jge
and
xchg
in
sbb
mov
mov
and
loop
arpl
jmp
addr16
pop
adc
int3
loop
sahf
das
jge
inc
cmc
jnp
pusha
fisubrs
ds
aas
shlb
fidivl
subl
inc
mov
pop
jno
cmp
inc
push
xchg
rcrb
insb
xor
push
js
js
jbe
xchg
sbb
cwtl
jmp
pop
or
nop
loop
xchg
into
add
jo
jp
xchg
test
bound
mov
out
cmp
mov
cmp
call
icebp
loope
push
mov
test
mov
mov
lock
call
jo
push
xchg
pop
fcoml
and
popa
push
rcl
mov
push
adc
inc
jb
inc
add
inc
nop
dec
fwait
or
jl
add
scas
push
mov
or
ret
mov
outsl
and
stc
lret
lcall
adc
xor
lods
arpl
cmp
and
xchg
ds
ret
push
mov
inc
stos
lds
pusha
mov
adc
dec
pop
jg
dec
icebp
push
sbb
ds
scas
mov
inc
repz
dec
test
pushf
in
outsb
test
adc
pop
out
cmp
adc
fs
int3
not
in
xchg
xchg
or
xor
inc
sbb
icebp
jl
inc
xchg
mov
lret
adcl
lea
sbb
add
out
and
je
in
mov
and
sub
mov
pop
xor
cld
jne
ja
aaa
insl
and
mov
dec
daa
push
divl
pop
pop
pop
loope
mov
mov
inc
ss
jno
inc
movsb
imul
xor
mov
push
insl
inc
popa
ret
test
orb
test
movsb
scas
call
adc
mov
sbb
cli
dec
mov
inc
fucomi
cmp
pop
rcrb
pop
call
fxch
lret
push
and
mov
les
mov
mov
dec
mov
and
and
popf
popa
scas
xchg
push
inc
hlt
gs
pop
mov
mov
mov
push
jl
push
adc
push
iret
hlt
pusha
mov
xchg
and
xchg
shll
pop
jmp
incl
sbb
mov
mov
mov
ret
xchg
xchg
mov
cld
stos
pop
cmp
pop
and
les
daa
aad
in
mov
sbb
cmp
jmp
lcall
push
ds
shr
rclb
xor
fstps
rorb
lea
repnz
mov
xor
jg
bound
push
cld
movsl
or
out
xlat
mov
les
fstp
popa
pop
ljmp
inc
dec
mov
repz
shlb
mov
and
popa
repnz
jmp
rolb
shl
bswap
mov
lods
xor
push
lods
inc
push
adcl
ret
test
popl
inc
push
xor
inc
clc
sahf
pushf
dec
jl
dec
imul
cmpb
into
cmp
jb
inc
sbb
lcall
imul
lods
lahf
inc
sti
enter
insl
in
leave
xor
sbb
mov
out
aam
jg
sbb
scas
or
push
ror
jnp
mov
mov
cmp
and
mov
je
cmp
test
stc
xor
ljmp
rolb
xchg
jg
hlt
add
pop
ljmp
lock
xchg
scas
and
pop
bound
dec
loop
outsb
add
scas
jno
test
adc
mov
rcrb
add
int3
add
mov
icebp
jbe
cmp
jp
mov
mov
mov
xor
mov
insb
rcll
rcl
xchg
jnp
les
xchg
shll
lds
aad
dec
mov
push
out
sbb
mov
push
sub
jge
xor
add
outsl
xchg
fsubl
sbb
ljmp
clc
fcoms
jb
cmp
jns
pop
and
pop
mov
or
adc
fdivl
out
add
inc
and
repnz
mov
mov
rcll
mov
mov
ja
sti
and
pop
adc
sbb
mov
js
in
dec
jg
pop
pop
mov
shlb
mov
pop
add
mov
adc
das
sub
out
lods
xchg
jle
mov
outsb
ret
stc
jb
sbb
push
adc
test
mov
push
pop
lret
pop
pop
repnz
int3
pop
sbb
data16
adc
or
inc
adcb
cwtl
cmp
insl
dec
ret
pop
jmp
and
fs
pop
je
fbld
mov
call
repnz
jg
mul
pop
insl
push
jne
dec
repnz
pop
je
bts
mov
xor
cltd
jg
mov
movsb
pop
addb
add
stos
cli
aas
ljmp
divl
push
sbb
cmp
es
cmp
adc
je
cwtl
out
test
loop
push
sub
mov
push
push
lods
push
jecxz
mov
loope
and
xor
adc
fdivl
and
jg
popf
sub
daa
cld
stos
add
mov
inc
sbb
sbb
ret
dec
sti
or
xchg
dec
dec
xchg
or
mov
repnz
frstor
push
out
xor
dec
or
sti
push
mov
aas
in
fildl
xchg
sub
inc
in
xor
or
push
ss
jnp
fldt
sti
sub
adc
test
jnp
ficoml
pop
pop
in
mov
ja
sti
and
mov
cwtl
mov
sub
das
scas
fnstsw
cmp
cmpsb
lods
dec
fwait
dec
cmp
lahf
add
xchg
mov
mov
mul
aam
imul
movsl
push
fsubrs
sub
imul
hlt
lcall
or
inc
lret
lock
pop
sub
mov
daa
mov
in
aad
repnz
imul
ret
enter
mov
je
jo
ja
inc
add
fstpl
incb
repz
inc
test
loope
enter
push
stos
int
mov
xchg
int
std
cmp
out
clc
push
fucomp
cmpsb
xor
nop
add
push
mov
sahf
xchg
call
inc
adc
inc
por
adc
sbb
xchg
xorl
mov
or
loop
xor
cmpsl
xor
push
out
pusha
push
pop
fsubs
aas
cwtl
pusha
jo
mov
and
les
leave
sub
push
ds
ljmp
cli
mov
cwtl
push
mov
rcll
movsl
fwait
in
mov
pop
add
mov
rcll
mov
cmp
sub
pop
sbb
mov
scas
inc
sbb
jne
rcl
mov
mov
daa
push
xor
and
jo
dec
cmpsb
gs
test
mov
push
in
je
scas
sbb
add
jmp
iret
lcall
jno
sub
daa
adc
lods
nop
ss
pop
scas
dec
loope
sub
test
fmul
and
sub
sub
push
std
out
nop
in
rolb
sbb
ljmp
sbb
cmpsl
xor
shlb
mov
pop
mov
sahf
xchg
outsl
xchg
mov
lret
jge
ret
icebp
out
and
scas
jne
outsb
xchg
or
stos
push
adc
ljmp
pop
xchg
sbb
fs
call
inc
jge
mov
loop
mov
test
dec
mov
imul
loop
jne
pop
mov
std
outsb
xchg
cmpsb
int
push
add
andb
test
lea
mov
scas
lods
mov
icebp
cli
jmp
shl
push
mov
mov
addb
add
sbb
mov
cmp
aaa
jecxz
jns
mov
jle
mov
nop
adc
imul
sub
add
in
in
mov
and
cmp
jg
xchg
test
xchg
js
dec
sbb
fcompl
out
aaa
stc
or
pop
push
sub
out
fsubrs
jno
dec
pusha
jnp
sub
leave
movsb
pusha
xor
shll
push
in
xchg
ror
cmc
in
ljmp
cmp
mov
sarl
xor
aas
mov
mov
loop
test
xchg
test
jmp
pxor
fs
add
js
mov
add
sbb
int
enter
push
or
test
cwtl
mov
insb
and
inc
mov
fildll
mov
dec
orb
outsl
fldcw
lahf
and
test
sbb
mov
xchg
push
mov
fcmovu
popf
negb
jle
dec
pop
fptan
or
mov
sub
sbb
push
imul
adc
dec
mov
push
ljmp
les
adc
hlt
out
movzbl
mov
ja
mov
push
mov
sub
mov
movsb
sub
jmp
mov
aas
movups
adc
cmp
dec
mov
inc
and
adcb
repz
fwait
insl
leave
dec
jmp
mov
or
fdivr
cmpsb
sbb
xor
mov
mov
std
ljmp
mov
imul
pop
imul
into
std
loope
fwait
imul
aas
imul
mov
data16
rcrb
std
cs
push
bound
arpl
andb
and
pop
in
aad
xor
mov
jns
add
aad
imul
fldl
mov
mov
jge
call
test
xlat
xchg
aad
mov
push
in
mov
cltd
pushf
fcomi
imul
sub
mov
xor
call
xchg
test
sub
rolb
fsubl
in
push
and
mov
add
xor
and
push
or
scas
add
adc
jns
xor
dec
and
cmp
lock
std
pop
test
adc
mov
and
sarb
gs
cmc
lahf
xchg
lret
in
and
lock
jle
add
fs
adc
and
hlt
outsl
fcompl
and
in
sbb
pop
movsb
aaa
mov
mov
lret
dec
popa
xchg
leave
stos
into
mov
ja
mov
push
and
pop
shll
jge
cltd
lahf
pop
sbb
flds
lahf
lahf
nop
push
xchg
cmpsl
jl
movsl
mov
jb
push
mov
lds
outsb
sbb
xchg
add
jecxz
inc
pop
xchg
add
lds
arpl
scas
in
mov
nop
mov
xor
xchg
popf
inc
jg
scas
push
or
push
pusha
cmp
pop
dec
movsl
mov
bound
mov
push
add
cmp
mov
nop
mov
inc
dec
movsl
pop
inc
cmpb
out
loope
out
adc
push
jmp
sbb
mov
mov
inc
loopne
aad
lods
popa
cmpl
cmp
push
and
or
sub
gs
movsl
adc
pop
out
icebp
pop
stc
pop
pop
les
int
jl
or
int3
push
inc
cmpsb
fstpl
bound
sbb
scas
repz
xor
scas
and
lret
xchg
lret
pop
jnp
insb
dec
out
stos
lret
clc
cmp
pop
mov
fstps
aad
mov
adc
pop
push
inc
fists
test
xchg
mov
addb
pop
aad
cmp
mov
jbe
cli
mov
hlt
cmp
mov
in
icebp
lahf
xchg
or
inc
idivb
fwait
test
push
stos
sub
xlat
and
jge
pop
outsb
jo
les
aad
and
or
leave
adc
push
test
xor
push
insl
mov
pop
roll
adcl
mov
aad
bound
cmp
ss
or
dec
cmpsl
out
in
fildll
cmp
loopne
test
adc
fsubrl
aam
cltd
sub
push
mov
sub
jnp
jp
xchg
dec
jae
popa
push
into
scas
push
fs
add
cltd
lcall
leave
xchg
jmp
in
cmp
cmc
mov
and
or
imul
cwtl
stos
cmp
jmp
mov
sahf
clc
mov
jno
mov
movsl
daa
lods
into
cmp
xor
adc
pop
test
mov
cld
les
js
jo
xchg
ret
and
push
fwait
test
aas
and
dec
movsb
popf
push
sbb
adc
lds
push
cmp
mov
test
mov
out
mov
add
xor
imul
jno
icebp
jp
and
enter
out
repnz
aam
out
mov
cmp
dec
xchg
mov
int
cwtl
shll
stc
mov
sbb
and
test
mov
xor
mov
subl
xchg
fs
das
mov
inc
and
xchg
out
sbb
cmp
loop
icebp
loopne
push
jecxz
lcall
lret
add
mov
loop
test
call
sbbl
fadds
cli
mov
stc
mov
popf
hlt
test
xlat
mov
and
adc
nop
movsb
dec
pop
xchg
dec
mov
and
sub
out
movsb
sbb
dec
out
lds
into
test
xchg
mov
push
add
push
dec
mov
fadds
xor
mov
pop
ljmp
lcall
out
ret
adc
pop
xchg
arpl
add
movsl
leave
dec
loope
scas
in
lods
aad
mov
lret
in
ja
or
jle
push
or
push
sub
xchg
ljmp
push
andb
shlb
popa
mov
stos
loope
pop
fs
dec
add
lock
inc
jg
adc
test
ljmp
pop
lods
and
repz
add
into
push
shll
xchg
sub
dec
dec
out
icebp
xlat
mov
adc
mov
test
cmp
push
ret
jp
rcrb
jecxz
enter
mov
movsl
arpl
sbb
add
or
test
push
mov
cltd
xor
pop
pslld
jecxz
sbb
jo
pop
mov
ds
movsl
sbb
daa
lods
mov
ds
and
incl
mov
cli
pushf
nop
jmp
cld
add
push
fidivrl
inc
outsl
sbb
test
cmpsb
adc
fcompl
ffreep
jmp
mov
push
shl
repnz
ss
rcl
inc
sub
aas
and
xchg
and
out
cltd
adc
inc
or
mov
adc
cmp
insb
cli
outsl
add
mov
add
sbb
cmp
jbe
mov
sbb
arpl
les
or
js
nop
add
mov
sbb
roll
insl
into
pop
cmp
inc
jnp
lock
push
xchg
sbb
xchg
push
fwait
xor
mov
test
lret
inc
jne
daa
shll
mov
push
aaa
loop
sub
jno
pop
push
nop
inc
push
out
ds
sbb
ret
jbe
icebp
in
mov
lods
dec
push
adc
ss
test
mov
mov
push
lcall
ja
add
cmp
or
fwait
pop
out
pop
out
inc
mov
lret
in
and
cli
push
movsb
shlb
movsl
adc
je
inc
dec
mov
fdivrl
xchg
jnp
cmp
and
adc
jno
mov
adc
sti
leave
cmc
mov
jae
outsl
rcrb
mov
adc
xchg
bnd
jge
dec
dec
mov
loope
jmp
out
daa
push
movsl
mov
jmp
mov
movsb
fdivrl
cmpsb
notb
mov
xlat
push
cmp
bound
xchg
inc
ja
divl
mov
roll
push
int
leave
jp
pop
or
lahf
test
mov
fprem
mov
xchg
fs
jb
into
andb
or
sbb
push
jge
adc
movsl
icebp
push
lods
sub
sahf
test
ds
fs
push
movsb
psadbw
xchg
mov
out
or
orl
cmp
xchg
add
sbb
mov
hlt
sbb
test
sub
inc
pushf
shlb
xor
push
fbld
in
sub
or
dec
push
cmp
push
or
out
test
lds
cmp
sub
cmpsl
outsl
xchg
movsb
dec
arpl
dec
xor
inc
ss
add
in
enter
imul
movq
dec
clc
inc
pop
xorb
jp
cmp
hlt
popa
add
or
in
incb
mov
jno
mov
sub
mov
popa
push
add
testb
sti
inc
sarb
add
mov
ljmp
cmp
addr16
sub
pop
jle
out
xchg
sub
jnp
cmp
enter
inc
call
arpl
jbe
mov
fsubl
mov
je
xchg
mov
inc
data16
push
cmp
lock
fdivp
fisubrl
aam
pop
xchg
xor
es
sbb
cmp
mov
xor
and
repz
in
and
arpl
decb
cs
dec
cmp
cmp
inc
popf
enter
push
cld
scas
dec
rcl
loope
adcl
dec
lret
mov
popl
fs
or
cmp
xor
mov
outsl
icebp
les
out
das
hlt
enter
leave
addl
jle
add
sbb
push
test
fsts
in
sbb
xor
out
mov
push
and
fiaddl
xchg
shl
xchg
push
mov
adc
lock
cmp
inc
in
jbe
jmp
mov
push
repnz
xor
cld
pop
pusha
jo
gs
jmp
es
outsl
xchg
fnstsw
pop
xor
xchg
and
sti
outsl
and
mov
inc
out
fisttpl
lea
std
or
outsb
mov
subb
pop
imul
xchg
jns
jp
inc
cmpsl
sub
xor
inc
dec
xchg
push
out
test
sub
addb
lahf
jecxz
mov
pop
into
sbb
inc
addr16
push
popf
push
add
and
sbb
fildl
xor
cmpsb
mov
mov
add
enter
les
add
lret
cmp
add
es
inc
jmp
inc
push
add
clc
xor
and
hlt
call
push
popf
add
jmp
gs
imul
aas
cmp
sbb
lds
push
test
mov
hlt
mov
and
shll
mov
xlat
les
fistpll
jmp
jle
mov
adc
rolb
xchg
xchg
jnp
divb
ret
rcrb
jne
mov
out
fscale
adc
js
xorl
or
pop
shl
out
xlat
add
add
shll
mov
daa
shll
loopne
in
js
jns
xorb
xor
pusha
sbb
sbb
and
xorl
scas
mov
in
sarl
insb
je
jae
adc
jle
test
pop
outsb
shll
jp
xchg
int3
sbb
test
ret
xor
push
pop
or
call
rol
pop
sub
push
cmp
insb
test
or
push
cwtl
mov
lret
mov
in
mov
movl
adc
mov
xchg
inc
in
jge
inc
ret
lods
pop
pop
mov
in
adc
sub
push
hlt
adcb
pop
sarl
jle
xor
filds
xor
pusha
and
cmp
dec
ret
mov
test
je
sbb
fucomp
ljmp
cmp
dec
lea
dec
stos
shll
pop
pop
or
stc
std
adc
lret
mov
fbstp
lods
adc
cli
or
fwait
mov
xorb
jge
fldt
or
push
mov
adc
pop
xor
jle
data16
sbb
insl
inc
and
mov
pop
cmp
jno
rorb
js
inc
dec
push
xchg
inc
rcrl
dec
xchg
sub
stc
sbbb
scas
das
loopne
je
adc
sub
mov
shll
pop
fildl
hlt
negl
push
es
mov
lret
push
inc
cld
orb
bound
jge
cwtl
push
mov
jecxz
bnd
dec
fldl
stc
repz
xlat
sub
or
inc
test
mov
mov
test
fiaddl
test
mov
xor
mov
push
fs
stos
mov
in
mov
push
lret
and
shlb
outsb
mov
xchg
gs
xor
inc
inc
test
lods
inc
mov
cmp
mov
call
mov
bound
sub
jp
jne
pop
loop
push
adc
push
mov
mov
ret
sbb
stos
dec
pop
nop
fnstenv
pop
mov
dec
or
stc
rcrb
xchg
inc
out
cmp
cli
icebp
inc
fnstenv
out
jno
jg
loope
popa
adc
push
mov
into
inc
into
cmpb
jecxz
xchg
aas
jns
iret
int
loopne
ficoms
movsb
in
lods
and
shlb
xchg
xchg
inc
hlt
add
pop
stc
rcr
add
xlat
xchg
or
pop
add
cmp
mov
cmpsb
adc
dec
xchg
leave
repz
pusha
sti
mov
lods
inc
sahf
imul
and
cmp
sub
int
addr16
lret
shr
lret
xor
test
jns
cmp
imul
andb
cli
jno
xchg
roll
ljmp
aad
dec
das
in
insl
dec
cmp
lock
inc
lds
dec
xchg
mov
pushf
or
lret
xchg
cmp
dec
aam
dec
rorb
cmpb
std
mov
mov
add
mov
mov
cmovs
repnz
dec
jns
xor
and
or
and
lods
xor
or
jmp
jl
push
cs
popf
dec
or
clc
lods
lahf
pusha
cltd
idivb
fwait
fwait
sbb
ds
out
sbbb
pop
fdivl
and
testb
jmp
ja
jno
sbb
jnp
xchg
pop
mov
divb
and
call
inc
pop
cmp
mov
std
add
xchg
sti
xchg
jmp
into
lret
mov
jb
out
in
jns
mov
repz
pop
dec
daa
dec
adc
xor
enter
mov
dec
mov
call
dec
mov
rolb
push
mov
xor
icebp
pop
mov
lahf
pop
cli
sbb
sub
and
test
sub
in
data16
push
lock
ljmp
das
into
xorb
cwtl
push
mov
cmp
clc
inc
in
or
loop
push
fimuls
mov
cmp
aam
pop
push
leave
adc
jl
sbb
mov
incl
and
shlb
cmp
les
loop
mov
jns
insl
sbb
rol
add
or
test
dec
sub
fdivr
mov
jb
hlt
repz
inc
xor
xchg
inc
je
adc
adc
jb
mov
push
cmp
sbb
js
std
pop
insl
loopne
aam
insb
fdivrs
in
adc
fdivr
int
mov
or
adc
lahf
sbbb
sbb
test
jecxz
and
fimull
les
jne
sub
addr16
push
xchg
jp
mov
fwait
pop
int3
aas
into
jecxz
inc
pusha
sbb
jnp
and
fistps
or
loop
ds
jle
inc
pop
fmul
cmp
cmp
arpl
mov
mov
lahf
rcll
imul
mov
cmp
adc
fucomp
loope
jb
add
cmpsl
pop
push
addl
or
data16
arpl
out
ss
lock
sbb
jl
adcb
pop
fadds
mov
add
mov
je
data16
xlat
mov
dec
push
aad
jo
gs
outsl
fstps
pusha
pop
add
das
push
popf
das
aam
push
add
or
or
jb
daa
lea
jecxz
sbb
adc
dec
pop
add
adc
mov
daa
xchg
adc
sub
outsl
or
push
negl
into
adc
mov
popl
mov
sbb
ret
push
mov
les
sub
gs
jnp
ret
mov
sbb
xor
push
pop
adc
push
push
inc
inc
pop
adc
inc
insb
cs
or
xor
clc
lock
or
mov
out
out
dec
sarl
sub
cmp
lods
into
mov
daa
std
mov
sub
pop
push
gs
outsl
aaa
xor
cwtl
push
push
and
and
mov
sub
pusha
fistpll
dec
push
cmp
sbb
stc
ffree
dec
push
bound
push
inc
lods
dec
mov
pop
cmc
or
and
or
mov
add
and
movsb
mov
out
jl
mov
sbb
test
rolb
push
aad
outsl
imul
scas
xchg
sub
or
lcall
sub
into
int3
sbb
lcall
mov
mov
sahf
sti
mov
in
pause
pop
and
ljmp
mov
out
sub
dec
or
add
gs
call
mov
mov
loopne
jmp
lock
ret
lret
movsb
and
xor
test
jl
imul
out
aas
xlat
in
cmpsb
inc
and
dec
loope
sub
xchg
jmp
mov
cld
or
pushf
cmp
ficoml
add
add
sub
jmp
add
add
fcomps
repz
jmp
ss
and
push
xchg
xchg
cli
sub
sbb
std
cli
mov
push
in
pop
or
xchg
cmp
aad
xchg
js
lea
cs
inc
repz
cmp
lea
mov
gs
push
lock
xchg
stos
sti
jle
adc
push
pusha
aam
out
filds
or
call
stos
add
add
lcall
adc
or
and
cmpsl
jg
loop
xchg
mov
adc
pop
dec
mov
and
ret
pop
dec
mov
pop
out
and
cmc
rorl
or
mov
jp
and
imul
data16
and
sbb
mov
sub
iret
xchg
addr16
test
div
add
sti
mov
adc
sarl
stc
dec
mov
lea
loop
lcall
out
out
adc
and
dec
icebp
lds
push
push
std
push
add
cltd
xor
push
call
xorl
js
or
idiv
hlt
lret
std
movsb
xchg
jecxz
shll
sub
out
pop
adc
add
cmc
insl
lret
mov
lods
xorl
bound
adc
ret
inc
dec
jg
pop
subb
inc
lcall
arpl
iret
std
pusha
or
jp
xlat
popf
adc
mov
cmpsb
jbe
cld
inc
and
test
jno
mov
xor
pushf
rcl
and
and
push
cld
cmp
sti
xchg
pop
sbb
adc
mov
cmp
movsb
adc
xchg
xchg
xchg
pushf
sbb
int
insb
mov
push
in
push
pop
icebp
xor
mov
xchg
scas
aaa
loop
repnz
ja
mull
jns
cmp
test
sbb
sub
stos
cmp
pop
mov
lods
cltd
and
and
stc
or
cs
push
dec
aaa
out
les
aad
push
shr
dec
dec
jne
xor
and
mov
jno
adc
pop
jl
ja
bound
fisubrl
add
cmp
pop
mov
out
mov
add
adc
xchg
pop
loope
mov
mov
into
push
mov
outsl
push
enter
mov
jns
mov
and
aam
test
mov
sub
scas
int
aam
fs
movsb
call
and
xlat
push
push
fcmovnb
addr16
push
jo
push
mov
and
filds
sub
jp
lcall
stos
pop
sar
mov
pop
fwait
loope
push
cmpsl
mov
fcomip
pop
fildl
pop
cwtl
dec
in
adc
xchg
loopne
js
cmp
fcoms
mov
pop
ja
push
roll
or
fsts
sbb
cmp
lret
lret
pusha
sub
pop
cmp
popf
pop
push
cmpb
mov
push
nop
pushf
mov
xchg
popl
fdivp
ret
sti
arpl
mov
ss
push
cmp
ds
sti
xor
push
das
arpl
mov
pop
out
push
cmp
gs
cwtl
or
and
idivb
mov
data16
xor
pushaw
push
cli
xlat
add
mov
mov
xchg
clc
xor
jecxz
lret
add
push
sbb
sbb
out
clc
xor
lcall
ljmp
and
xchg
and
cmc
lcall
clc
shrl
clc
xlat
movsl
pop
imul
dec
in
cli
jmp
rol
pop
loope
jl
sub
loopne
mov
sub
in
cmp
fidivl
xor
mov
sub
movsb
pop
adc
hlt
sbb
add
add
cmp
stc
mov
push
ret
aad
sub
inc
jmp
in
pop
cmp
call
cmc
mov
fsubs
sub
jns
sbb
int
stc
push
adc
test
xchg
fisubl
jno
cmp
add
sbb
xchg
movsl
push
xor
outsl
fsubr
outsb
cmp
out
jecxz
xor
pop
and
dec
mov
out
mov
mov
fstps
int3
xchg
pop
push
mov
fnstenv
cmp
aaa
mov
xchg
jb
in
push
int
ja
testl
lea
rolb
iret
push
pop
inc
repnz
pusha
in
jp
pushf
jle
mov
sbb
addr16
xchg
stc
cmp
sub
xchg
mov
mov
aam
xchg
neg
inc
or
loopne
sti
mov
add
mov
aaa
sub
pop
dec
mov
pop
sbb
mov
dec
test
sub
daa
jp
xor
loop
int
mov
push
pop
dec
adc
leave
adc
test
jnp
dec
lcall
cs
mov
pop
jmp
push
les
negl
ds
lea
mov
xchg
or
adc
test
dec
cld
inc
mov
inc
popf
fstl
jno
int
bound
std
mov
pop
sub
call
lret
inc
test
hlt
sahf
mov
add
lahf
shrb
mov
or
aad
add
leavew
sub
inc
mov
addr16
jg
test
jno
movsl
inc
cld
stc
test
jb
cmc
xlat
fnstcw
push
and
mov
jno
in
sbb
lods
int3
cltd
pusha
test
xchg
decb
aam
fisubl
stos
add
mov
or
stos
mov
int
mov
jo
jbe
add
sbb
sarl
lods
and
lock
pop
or
ja
fdivs
mov
adc
cli
push
scas
cld
add
aad
mov
call
xchg
mov
outsl
fs
or
pop
enter
enter
hlt
rcrl
jno
stos
push
test
sub
mov
es
shl
test
xorl
lods
xorl
daa
adc
lock
std
mov
je
loope
xchg
ds
dec
in
filds
cmp
jb
jne
sub
mov
cmc
or
pop
in
inc
lds
mov
std
mov
xchg
arpl
mov
sbb
or
aaa
call
addr16
lret
je
mov
mov
int3
mov
sbb
lods
mov
pop
jle
icebp
imul
xor
sbb
pop
sbb
cltd
mov
iret
push
inc
sub
loopne
jl
pop
jp
adc
gs
cmp
jmp
and
add
xchg
test
fistpll
dec
ret
pop
sbb
jle
jle
lock
push
into
jecxz
pop
xorb
jnp
fistpl
rcrl
cmp
fwait
pop
xor
xchg
push
fdivrl
iret
leave
adc
in
bound
push
and
jbe
fldt
xor
fisubs
outsb
xchg
fwait
sahf
adc
push
mov
and
mov
out
aaa
push
jl
out
mul
ljmp
jo
mov
pop
mov
pavgw
add
sub
dec
and
fld
arpl
out
scas
aam
jmp
cwtl
pop
dec
xchg
icebp
push
cmpsl
scas
iret
push
and
pop
push
int
int
cmp
cmpsl
bound
test
and
cld
cmovns
sti
push
mov
les
movsl
sub
push
movsl
adc
push
cmpb
fs
sub
movsl
sbb
cmpsl
lcall
adc
cs
in
adc
int3
jp
lods
sti
std
ret
pop
mov
cs
jb
add
stos
mov
xor
xor
sbb
movsl
sbb
add
pop
insb
push
repnz
xchg
into
orb
iret
add
inc
outsb
pop
ja
std
lods
pop
xor
mov
aas
jmp
mov
dec
mov
lock
xor
or
std
lods
xchg
in
or
lcall
add
sahf
sbb
outsb
pop
or
jle
and
mov
push
shlb
and
mov
mov
jne
test
cmp
add
pop
aam
xchg
lods
jno
insb
ja
push
add
into
mov
addr16
inc
es
cmp
jmp
push
xor
mov
xchg
push
lea
dec
mov
inc
cmpsb
loopne
adc
adc
loop
push
pop
lods
sub
pusha
add
lret
mov
test
es
or
aam
std
insl
shr
iret
mov
xchg
or
mov
pop
js,pt
out
or
enter
adc
stos
or
lahf
shl
mov
es
xchg
xchg
in
punpckhbw
adc
ret
or
shll
mov
push
sahf
in
jecxz
pop
or
jo
lret
minps
lcall
iret
inc
xor
jnp
les
pusha
dec
into
cmpl
mov
addr16
mov
inc
xchg
xlat
enter
pop
ret
push
in
es
and
bound
decl
xchg
mov
fistpl
repnz
aas
cmp
icebp
lea
dec
sub
and
xor
sbb
pop
xor
cmpl
in
pop
rcr
enter
mov
imul
xchg
xchg
mov
pop
push
xchg
test
and
mov
push
sbb
pop
lods
js
adc
addl
jnp
mov
add
call
movsl
outsl
int
cmp
mov
imull
jb
popf
xor
test
cli
push
rol
mov
imul
mov
jp
or
insl
mov
pop
add
int3
idivb
pop
push
pop
f2xm1
jne
mov
mov
pop
ret
mov
push
das
fwait
lret
sbb
rorb
jge
pop
cmp
cld
push
pop
hlt
cmp
jb
add
push
dec
push
add
leave
test
mov
lret
ja
push
stos
or
mov
in
out
push
dec
add
shlb
sub
mov
pop
inc
ss
pushf
mov
pop
pusha
repnz
sub
pop
jmp
fwait
lret
daa
ss
mov
stos
xchg
push
dec
shr
push
pop
ja
mov
jp
mov
nop
mov
cltd
push
stos
pusha
sbb
pop
inc
dec
insb
std
mov
gs
jle
fucomip
pop
adc
xor
jmp
ret
push
loopne
scas
gs
in
fcompl
xor
repnz
lahf
test
cmpsl
pop
inc
shlb
mov
adc
lret
mov
cmp
es
js
test
inc
popa
or
xlat
push
sub
negb
into
dec
ds
gs
hlt
pmuludq
mov
repz
mov
cmpsb
jg
sub
bound
mov
insb
scas
sub
mov
aas
sbb
mov
jno
xor
sub
add
lahf
enter
push
imul
gs
jo
test
in
fcoms
out
leave
xor
sbb
dec
loope
cmpsb
cltd
lods
loopne
cmpsb
into
pop
jne
negb
add
fiadds
pusha
lock
add
aas
lds
add
cmpsl
sub
mov
scas
pop
sub
fists
int
pop
addr16
jns,pn
stc
fstp
xchg
aas
mov
add
sbb
mov
ja
lret
mov
mov
out
dec
cmp
or
mov
lds
xchg
imul
or
sbb
cwtl
dec
popa
adc
pop
sbb
or
in
sbb
and
ret
fwait
or
lret
or
and
mov
push
scas
pop
xchg
adcl
leave
cltd
add
sub
jae
fldcw
dec
mov
sarb
pop
cmc
mov
add
mov
and
mov
mov
push
inc
or
or
push
pop
mov
pusha
jns
push
push
ss
jno
and
mov
and
out
lar
pop
data16
pop
leave
ja
cmp
mov
and
es
xor
test
xor
stc
push
scas
fsts
adc
std
loop
arpl
mov
cmpsl
out
call
xlat
test
adc
ficoml
icebp
add
adc
inc
scas
push
lcall
add
lcall
push
pop
cmp
xor
dec
xchg
jnp
fldcw
les
sub
mov
pop
test
xchg
xchg
and
cmp
push
icebp
stos
fistpll
add
jp
push
push
inc
lahf
inc
add
test
and
lahf
cmp
insb
call
inc
cltd
and
push
jno
pop
movsb
add
arpl
add
aas
mov
jno
orb
pop
mov
or
sbb
data16
cmpsl
dec
jle
push
inc
scas
js
sub
cmp
push
jge
push
inc
xchg
movsl
jns
xchg
inc
fwait
push
mov
sbb
mov
test
jl
mov
dec
inc
or
ja
cmpsl
jle
xchg
jbe
sti
das
ds
jne
loop
add
jmp
or
sahf
xor
xor
dec
pop
dec
stos
movsl
and
out
inc
ja
in
movntq
orl
jb
arpl
daa
xchg
jb
add
aam
out
out
fisttpl
xor
jle
pop
sbb
fnstcw
enter
sbb
pop
pop
xchg
cld
call
bound
test
addr16
inc
pop
jbe
add
cmpsb
mov
aam
out
inc
std
xchg
jge
out
mov
inc
xchg
jns
int
inc
xor
les
xchg
cmp
cmp
andb
ret
push
lea
stc
pop
outsl
in
movsl
mov
mov
inc
sbb
imul
aaa
les
imul
add
insl
push
mov
mov
sub
arpl
or
xchg
loop
jnp
xor
pop
push
add
adcl
leave
dec
les
mov
ficompl
test
sub
aad
push
addr16
ficompl
mov
lret
and
sub
rclb
ds
test
mov
js
addb
lahf
cmpsl
adc
negb
dec
jmp
jno
cmp
pop
jle
cli
xor
out
add
mov
movsl
jle
sub
dec
mov
xor
mov
inc
popa
inc
mov
fimull
fsubrs
pop
mov
adc
mov
sbb
jl
add
fisubrs
lods
cltd
ja
add
pop
sbb
xchg
push
pushf
pop
sub
jno
or
test
ret
sub
sub
or
inc
mov
loop
pop
fcoml
pushf
lcall
cmp
iret
dec
fdivrl
sbb
sahf
push
push
adc
out
mov
xchg
js
mov
mov
jns
mov
aaa
xchg
mov
je
fmull
adc
lock
push
icebp
mov
sbb
arpl
xchg
test
addr16
test
pop
xchg
mov
imul
test
dec
jns
stos
sbb
popa
or
xchg
cmp
mov
lods
jle
pop
add
adc
jbe
aas
mov
inc
push
and
sahf
std
mov
add
push
dec
or
pop
lods
mov
je
sbb
cmpsb
lock
aam
dec
das
incl
jo
dec
xchg
sub
icebp
push
jl
das
push
dec
cwtl
jmp
stos
sub
in
adc
out
lret
les
or
sbb
hlt
and
lcall
ret
outsl
les
ds
jmp
mov
push
push
loopne
mov
cmpsb
roll
push
in
dec
inc
cld
outsl
add
inc
and
repnz
add
emms
xor
and
out
out
add
adc
mov
adc
retw
sbb
fsubrs
jg
xor
xor
cli
icebp
inc
or
sbb
jmp
inc
xchg
orb
xchg
lret
sarl
dec
imul
stos
cld
fildll
xchg
outsl
filds
inc
mov
cmp
repnz
mov
pop
fisubrs
jnp
fisubl
mov
ja
in
dec
push
loop
cmpsb
cmpsb
or
aaa
es
cmc
scas
cmp
jmp
adc
adc
pop
jmp
add
cmp
and
pop
add
xor
lcall
lock
xchg
lahf
in
mov
jp
cmp
add
xchg
int3
sti
push
pop
jecxz
xchg
inc
pusha
ja
cmp
cmc
xchg
mov
jp
sbb
push
add
lcall
or
or
movl
call
int
lea
cmp
xchg
adc
mov
xor
push
in
mov
mov
daa
and
ds
mov
loop
or
adc
jae
roll
aam
jle
out
out
jnp
sbb
stos
pop
inc
jge
xchg
ljmp
mov
cmp
test
fs
repz
pop
ljmp
pop
negl
ljmp
std
lret
loope
push
mov
nop
bnd
xlat
mov
clc
imul
rol
push
int3
fdiv
add
jmp
adc
pop
cmp
call
xor
int
cltd
mov
sub
mov
sub
cmp
clc
js
sub
xchg
imul
loop
push
pop
mov
xor
ja
mov
mov
lcall
imul
push
adc
and
lock
lahf
pop
std
movsb
mov
hlt
cmp
inc
scas
push
xchg
int3
jne
xor
loope
dec
testb
stos
int3
mov
in
push
or
add
in
test
mov
inc
jl
in
xor
mov
les
movsl
popf
sub
fsubrl
out
and
out
cli
pop
adc
sub
aaa
into
pusha
pop
sbb
les
stc
xchg
cmp
filds
dec
mov
mov
mov
lcall
lret
mov
pop
dec
mov
addb
push
push
or
cld
mov
outsl
mov
cmp
in
sbb
idivl
pop
in
fs
or
sbb
jae
mov
mov
xor
repz
fs
test
dec
jo
sub
jmp
jle
subl
xchg
pop
mov
and
push
sbb
adc
aaa
xlat
mov
inc
push
aad
add
adc
cmp
xchg
bound
pop
and
xor
mov
shlb
ret
mov
and
stc
pop
mov
loope
mov
movsb
add
xchg
stos
sbb
repnz
pop
mov
cmp
inc
subl
cmp
aad
scas
hlt
enter
outsb
shll
or
nop
mov
cs
imul
in
incl
call
cld
fbld
es
movsb
jl
and
mov
add
adc
loopne
cmc
ljmp
stc
aad
ret
pop
sub
xchg
mov
inc
lea
ss
and
pop
decl
add
mov
insl
inc
mov
repz
or
add
dec
loopne
or
shrb
in
insb
stc
pop
dec
pop
inc
xchg
test
int
insl
dec
imul
fists
enter
jbe
loopne
sub
sbb
outsb
leave
test
or
imul
mov
ret
xlat
lock
xchg
out
cmpsl
lock
dec
das
mov
js
clc
or
daa
and
add
cmp
xor
loope
clc
adc
popa
lods
stos
sbb
dec
mov
div
aam
in
mov
or
sbb
mov
mov
pop
je
lcall
shrb
jmp
cmpb
push
mov
push
push
nop
notb
imul
inc
push
jmp
decb
leave
not
mov
mov
mov
outsl
xor
dec
jns
imul
mov
fstl
into
push
xor
test
sub
push
adc
andl
and
jl
mov
cmp
dec
je
mov
push
mov
mov
xchg
pop
and
inc
jg
sbb
pop
inc
ret
lods
xchg
fldcw
inc
inc
insl
mov
xor
std
mov
insl
sub
arpl
jl
mov
aad
push
mov
jb
adc
das
push
ror
insb
mov
adc
jno
and
sbb
outsb
inc
sti
les
cltd
stos
gs
xchg
lods
xchg
cmc
stos
cmpsl
or
into
xchg
sbb
iret
sbb
jg
mov
gs
out
and
or
jmp
out
sub
mov
xchg
pop
mov
mov
repz
test
mov
cmp
or
jmp
andl
add
xchg
mov
xchg
push
xchg
push
mov
and
and
loop
pop
int
mov
push
shrl
test
cld
arpl
cli
out
sub
jae
iret
jns
ja
mov
push
lahf
into
cmp
mov
aas
mov
ret
dec
xchg
shrb
fwait
xchg
insl
leave
add
outsb
mov
mov
xlat
dec
inc
mov
mov
pop
push
dec
or
shll
adc
xor
xchg
test
ljmp
popa
frstor
nop
pop
lahf
mov
cs
std
mov
inc
mov
sub
push
xor
push
shlb
and
push
mov
pop
pop
and
imul
shrl
aaa
and
push
add
xor
xor
xlat
stos
movsl
push
test
in
std
sbb
popa
dec
push
int
xor
xchg
jl
push
imul
fadds
dec
aam
mov
inc
jbe
push
mov
lea
jbe
cld
jae
push
cmp
mov
and
ja
cwtl
es
mov
mov
sbb
pushf
enter
mov
nop
cmpsl
ret
insb
sbb
test
outsb
xchg
and
out
mov
incb
sbb
mov
in
nop
push
jmp
out
jbe
out
test
cld
cmpsl
pop
jg
out
jle
push
ret
js
add
inc
cmpsl
call
push
xor
push
mov
testl
pop
test
push
dec
pop
loope,pn
push
mov
notb
xchg
js
push
cmp
sub
lock
iret
or
addr16
test
arpl
mov
inc
jb
add
fcmovbe
xor
xor
xor
mov
roll
outsb
in
rolb
mov
data16
push
idivl
and
int3
ss
stos
mov
clc
scas
loope
pop
data16
std
fdivl
jp
insb
js
adc
lret
test
ljmp
mov
xor
andb
sbb
test
add
mov
in
lret
mov
repz
sahf
mov
inc
cmp
adcl
sub
sahf
pushf
outsl
jmp
push
ljmp
enter
jl
push
or
dec
inc
mov
or
dec
mov
call
lret
push
and
mov
test
and
and
mov
xor
iret
enter
pop
jno
fnsave
mov
jmp
or
iret
sub
xor
cmpsl
push
xchg
int
adc
and
add
dec
xlat
rcll
xor
out
cmpsb
nop
lods
arpl
scas
cmpsl
js
mov
inc
xchg
mov
mov
fsubrs
dec
jecxz
add
imul
rcrl
adcl
cltd
xchg
dec
fistpll
xchg
bnd
test
pop
cmpsb
fmull
adc
nop
imul
cltd
aad
sbb
nop
dec
add
adc
jp
or
xlat
pop
jl
push
push
and
xor
mov
mov
jle
sbbl
sahf
or
push
jb
jns
pop
aam
mov
mov
push
dec
fcoml
je
notb
vrcpss
xchg
adc
insb
sub
icebp
mov
pop
add
mov
int3
add
pop
cmp
pop
stos
cltd
pop
cmp
outsl
rolb
psubsw
lret
leave
jecxz
cvtps2pi
call
and
add
adc
xor
stos
inc
xchg
xchg
sub
icebp
mov
push
mov
push
lea
leave
inc
mov
ja
jl
ljmp
cmp
jmp
push
ja
adc
iret
rclb
lcall
mov
test
jo
xchg
mov
push
lret
inc
xchg
shlb
shll
xchg
dec
jmp
jns
scas
aam
xchg
into
pop
mov
cmpsl
repnz
jnp
jns
push
or
add
adc
or
cwtl
ficoml
xchg
stos
repz
xchg
insb
push
nop
arpl
loope
push
imul
jno
mov
dec
cmp
aas
cmp
arpl
mov
notb
in
aam
imul
cmp
divb
or
ja
push
jp
test
xchg
inc
mov
mov
lret
imul
dec
pop
jmp
mov
pop
xchg
aaa
add
shrb
push
popa
add
jno
cmpsb
test
imul
or
test
scas
sbb
dec
icebp
inc
jl
mov
orb
cmpb
popa
stos
nop
add
xchg
iret
scas
pop
adc
daa
mov
lret
lcall
add
dec
sub
add
push
cmp
out
cmp
daa
sub
xor
add
roll
mov
xor
jns
add
sti
pop
push
das
test
adc
mov
adc
js
and
or
insb
icebp
mov
popa
mov
mov
popa
push
in
push
sub
mov
sar
daa
dec
push
out
loop
dec
jne
rclb
pushf
stc
adc
andb
sbb
dec
push
push
mov
arpl
ds
cmc
mov
test
dec
mov
out
daa
outsl
or
mov
test
jnp
push
xchg
cli
test
sbb
test
loop
mov
pop
push
out
test
push
mov
push
out
lret
rorb
mov
push
push
roll
mov
int3
cmp
popf
nop
mov
pop
push
stos
jmp
push
xlat
imul
neg
xchg
adcb
xchg
pop
lret
clc
xor
mov
fistl
dec
cmp
cld
test
push
sti
rcrb
and
jo
dec
and
lea
mov
testl
rolb
add
pop
repz
or
fidivrl
adc
sbb
sbb
push
in
sbb
inc
xlat
sbb
xchg
push
scas
nop
dec
mov
mov
mov
into
mov
cmp
in
jmp
mov
adc
cmp
add
icebp
pushf
jns
mov
xor
fucomi
gs
inc
xlat
cli
add
push
jle
orb
fcmovu
xor
push
xor
dec
sbb
xchg
mov
lret
inc
inc
insb
cmpsb
fsubrl
mov
pop
addr16
pop
test
rolb
jbe
dec
and
cmp
or
aad
insb
es
ret
fwait
or
lret
inc
push
xor
dec
push
inc
mov
insb
mov
push
subb
jae
push
in
mov
cs
jno
fistl
xor
pop
xor
or
lods
mov
outsl
mov
in
fucomi
jp
out
xchg
es
repz
push
add
pop
dec
dec
int3
cmpsl
in
jns
mov
cltd
pushf
mov
imul
popf
mov
xchg
nop
mov
xchg
jle
fisttps
mov
push
fmull
sub
cmpsl
lock
push
xchg
dec
xchg
xchg
push
jle
cmp
sbb
ljmp
nop
xchg
outsb
pop
xchg
popf
out
cmp
pushf
mov
sahf
or
mov
jo
call
fstl
adcb
and
jns
enter
dec
cmp
sti
mov
test
fstps
outsl
insl
and
in
movsl
ret
jne
sbb
add
addb
xor
add
int3
or
push
les
xchg
mov
cmp
or
inc
push
mov
dec
gs
loope
ljmp
cli
sub
stos
and
cmp
cmpb
xchg
sbbl
adc
fcompp
std
cli
test
shlb
fistl
sarb
movsl
cwtl
movsl
mov
dec
mov
mov
mov
int
filds
adc
sbb
mov
out
notl
mov
loopne
xor
jns
xchg
iret
pop
xchg
lock
mov
jb
push
xor
inc
mov
dec
fbstp
int
aad
std
mov
sub
cld
movb
adcl
jg
sbb
mov
ret
jmp
jmp
hlt
cmp
stos
and
jp
jno
aaa
dec
adc
iret
mov
orl
imul
cmp
cmp
in
data16
int
adcl
int3
das
loop
fstl
cmpsl
cmp
rcr
lods
rcpps
fidivrs
jmp
mov
notb
aad
test
pop
or
push
cmpsl
stos
nop
dec
mov
mov
inc
aam
mov
test
insb
sbb
jmp
jnp
aaa
clc
xlat
push
call
jnp
jg
daa
mov
test
inc
je
fs
adc
jge
cld
fldenv
inc
dec
pop
sub
push
mov
rorl
ret
fsts
mov
paddb
aaa
pop
mov
adc
sub
xchg
xchg
dec
or
das
addr16
xor
test
xchg
movsl
inc
adc
xsaves
add
jnp
cmpsl
inc
in
jmp
sub
add
cmpb
mov
aaa
push
out
add
arpl
sub
jae
in
xchg
jb
jae
out
ljmp
std
mov
outsb
jns
in
scas
or
dec
mov
rol
out
push
dec
pop
xchg
jns
mov
jae
jge
push
js
cwtl
arpl
imul
lret
aaa
push
fldln2
push
cs
das
bound
jg
and
cmp
insl
or
pop
repnz
push
sub
push
pop
mov
mov
shlb
repz
and
or
jmp
rcrl
jbe
arpl
pusha
neg
xor
add
mov
inc
dec
sbb
mov
inc
xor
xchg
int
sbb
push
fs
add
rorb
push
mov
fidivs
scas
fwait
repnz
mov
dec
into
push
push
xchg
aam
mov
pop
add
jecxz
ljmp
sub
xchg
xor
inc
lahf
xchg
fwait
enter
mov
cmp
cmc
lods
rolb
outsl
push
pop
add
or
rcrb
insb
pop
or
cmpb
jp
jle
cmp
fnstsw
dec
push
sub
sti
cltd
stos
cmpsb
lret
jge
push
rorl
dec
xor
ds
jo
mov
pop
lret
out
int3
push
in
push
pop
or
cltd
jbe
fisttpl
rcrb
daa
sub
scas
lods
xchg
repnz
sbb
adc
out
mov
loope
xchg
jno
dec
iret
pop
jl
pop
lods
imul
insl
dec
inc
decl
pop
mov
push
rcll
fisubrs
jmp
cld
and
mov
ret
inc
cld
mov
mov
dec
mov
push
nop
pop
jno
inc
pushw
loopne
mov
loopne
pop
sub
div
pop
inc
int
fsubrs
lods
pop
mov
lret
jl
add
in
les
push
lret
and
popf
les
and
js
adc
inc
or
ret
movsb
xchg
cmp
mov
mov
jle
insl
jnp
sub
out
pop
ljmp
out
add
xchg
lret
pushf
xchg
nop
jg
or
lds
sbb
xchg
mov
lahf
xor
sbb
mov
scas
addb
add
ss
into
mov
lahf
push
loop
in
pop
sub
lods
mov
mov
arpl
sbb
scas
fisttpll
mov
test
add
imul
popf
or
lahf
int3
inc
mov
sub
mov
ja
aad
push
dec
addb
into
dec
add
xor
and
insb
mov
fdiv
lret
in
imul
jo
imul
cmpb
push
cmp
xchg
test
ret
repnz
mov
dec
in
pop
mov
icebp
in
test
push
sub
leave
or
scas
mov
sti
rcrb
lock
xchg
out
inc
sbbb
mov
mov
mov
aad
jl
and
xor
mull
iret
lods
mov
hlt
hlt
arpl
jns
icebp
jp
mov
pop
mov
out
ror
test
stos
test
mov
into
adc
lods
cld
call
fsts
fld
cs
hlt
ljmp
xchg
adc
arpl
jge
mov
xchg
dec
cmpsb
fs
dec
cmp
and
aam
xchg
hlt
out
fcomps
sbb
paddb
loopew
dec
pop
test
lsl
daa
inc
stc
push
and
out
cmp
xor
fwait
dec
pusha
fldln2
xchg
mov
mov
xor
push
clc
daa
cs
and
ficomps
mov
movsb
stos
push
adc
push
sbb
aad
int
int
push
test
es
pop
imul
push
cltd
sti
fadds
mull
es
pop
mov
sub
sti
mov
mov
cld
inc
decb
lds
jns
pop
adc
stos
xchg
imul
push
movsl
cmp
loop
stc
gs
mov
lock
xlat
loope
leavew
shl
lret
xchg
push
fisttpll
test
push
pop
jb
jp
mov
iret
outsb
aad
adc
add
mov
jbe
sahf
lret
push
sbb
imul
xchg
outsb
or
mov
dec
adc
ss
push
popa
and
mov
icebp
test
adc
pop
mov
lcall
sub
sub
inc
xchg
incl
das
fildl
or
gs
jl
add
movsb
test
dec
cmc
xchg
ja
sarb
or
add
push
pop
stos
or
dec
mov
mov
test
lock
pop
xor
cs
subl
xor
add
and
and
cmpsb
mov
and
push
pop
dec
dec
xchg
ljmp
aaa
jbe
jnp
mov
jecxz
jns
in
xchg
cmp
jg
pushl
or
pop
test
cmp
hlt
mov
daa
lcall
or
jecxz
stc
jl
enter
cmp
inc
iret
in
mov
fistpll
mov
test
es
leavew
inc
cmpsl
lret
cmpsb
cmp
out
fwait
rcll
mov
mov
and
xor
and
dec
pushf
cltd
jne
add
dec
add
testb
cli
adc
mov
cmp
in
ljmp
cmp
push
fldt
add
rorl
mov
lock
inc
lock
xchg
ss
cwtl
add
mov
pushf
insl
scas
imul
sub
lahf
mov
cmp
sbb
inc
mov
dec
scas
jo
test
pop
hlt
fldenv
lock
push
inc
ljmp
ja
inc
jae
mov
and
adc
jl
push
dec
mov
ja
in
push
push
mov
fbld
lcall
mov
mov
es
ret
xchg
gs
ja
stc
adc
call
inc
pop
mov
mov
rcrl
pop
scas
cmp
mov
shrl
sbb
sbb
call
push
into
mov
outsl
fcom
movsl
enter
scas
test
test
xor
cltd
hlt
sahf
adcb
add
xchg
jge
into
sub
and
filds
daa
and
jae
sbb
test
sbb
nop
loopne
and
xchg
cwtl
mov
fiaddl
mov
mov
adc
addr16
jb
sahf
in
arpl
push
and
outsl
and
push
sbb
sarb
jp
cwtl
mov
jne
ss
push
fwait
insl
jno
sbb
cltd
xchg
fidivl
stos
jg
stc
mov
or
jae
fistpll
arpl
cmp
out
mov
inc
or
inc
xchg
sub
ret
pushf
sub
ja
xchg
pop
xor
lcall
inc
mov
jp
or
sub
fs
fistpl
or
cmpl
testl
cmpsl
push
popf
outsb
sbb
repz
loopne
add
aaa
pop
and
ljmp
xchg
push
xor
hlt
sub
cmpsl
cltd
iret
lock
jl
jno
movsb
ljmp
jb
filds
inc
fidivrl
cld
aam
and
pop
pop
adc
ds
sahf
cld
pop
imulb
pop
aad
test
fmulp
jae
cmp
cmp
lahf
pop
inc
jp
sub
dec
add
add
xor
sub
pop
enter
pop
aam
fidivl
jecxz
xor
lea
adc
sbb
out
bound
in
lods
jg
cmp
gs
fcom
lods
inc
divb
pop
cmp
popl
lret
push
mov
dec
outsb
and
cmpsl
add
fwait
shr
xor
mov
gs
inc
aad
int
outsb
push
xchg
or
shrb
mov
inc
inc
lret
iret
inc
clc
and
cmc
sysexit
mov
cmp
cli
jns
int3
loop
cwtl
mov
enter
imul
stc
fdivrs
jp
lock
jb
add
jge
cltd
mov
outsb
inc
outsl
mov
das
or
adc
push
pop
or
sbb
sub
xor
push
fcmovu
mov
insb
pop
int
mov
xchg
xor
inc
sub
les
lret
mov
insl
mov
mov
lods
lods
test
fmul
aas
and
sar
xlat
outsl
sahf
dec
jg
sbb
mov
sti
adc
arpl
clc
jmp
shl
into
xchg
fildl
std
not
sbb
scas
push
add
je
push
dec
adc
in
lret
addr16
pushf
sub
inc
adc
cmpsb
movsl
fwait
push
sub
jmp
or
xchg
sub
add
lret
outsl
insb
loopne
loopne
xchg
shl
xchg
call
cmp
inc
mov
cmp
push
adc
jo
mov
popa
sub
sahf
sbb
mov
cmpb
lcall
sub
push
test
out
jo
or
inc
ret
setnp
sbb
mov
jb
leave
dec
movsl
and
xorl
push
sub
test
lock
pop
mov
and
stc
adcl
leave
dec
jp
push
dec
mov
jg
or
fistps
xchg
adc
addr16
lds
je
test
mov
dec
dec
mul
xchg
inc
adc
scas
jne
pop
xchg
inc
rcr
adc
popa
jns
xchg
enter
in
hlt
in
push
cwtl
stc
cmp
outsl
dec
iret
cmp
add
adc
adc
lret
add
push
fsubrl
aas
iret
mov
ljmp
cs
imul
loop
ficoms
sbb
out
cld
es
inc
jnp
or
jge
int
add
sarl
hlt
push
pop
inc
cmpsl
insl
out
stos
loopne
xchg
or
imul
icebp
lret
mov
shrl
or
pushf
jb
out
sub
fnsave
aam
pop
mov
sbb
xor
repz
pop
fildl
int3
jl
and
push
and
mov
lahf
cltd
cltd
inc
mov
xchg
lret
jg
sti
sbb
insl
pop
addr16
in
add
xchg
test
adc
div
dec
mov
ja
push
call
cmp
dec
pop
pop
imul
test
dec
mov
gs
push
pop
jg
je
add
cmc
ja
popf
cmp
rolb
or
xchg
or
scas
pop
mov
cmp
bnd
pop
or
subl
lret
mov
sbb
xchg
nop
sbb
pop
cmp
lret
cmpsl
jb
loopne
mov
push
xchg
jp
jae
dec
aam
stc
mov
insb
call
mov
cmpsb
sahf
movsl
std
inc
or
pop
adc
shr
xor
scas
icebp
push
nop
sbb
dec
adc
sbb
test
mov
pop
gs
scas
mov
xor
push
push
cs
scas
popa
adc
test
mov
imul
inc
call
and
and
mov
or
into
mov
imul
stos
push
mov
jne
lock
repz
jge
mov
cmp
out
insb
cltd
dec
add
bound
call
and
out
xchg
mov
pop
push
mov
jae
push
dec
in
xchg
inc
push
stos
pop
lock
push
test
push
daa
je
bound
xor
inc
bound
mov
fisubrs
xchg
push
jne
or
dec
movsb
pop
jb
ljmp
inc
jo
adc
dec
std
mov
inc
jbe
mov
mov
adc
jae
arpl
mov
out
push
mov
fdiv
rcll
imul
push
lret
stc
push
frstor
adc
xabort
jle
in
xor
or
pop
fadd
cmp
les
fistps
xchg
pop
jb
inc
pop
cltd
xchg
cld
rcl
adc
cmp
loop
pop
sbbb
mov
mov
jle
mov
sbb
xlat
jb
mov
cmp
pop
mov
stos
pop
int3
addb
pop
pop
scas
ss
ds
and
test
cltd
bswap
push
mov
xchg
mov
inc
outsb
fwait
mov
fnstsw
jae
leave
sbb
pop
nop
data16
mov
cmp
mov
enter
sti
xchg
fdivrs
out
mov
fnstcw
sub
add
popf
ror
jp
jae
addr16
fidivs
mov
icebp
inc
sbb
pop
add
cmpsb
mov
dec
adc
pop
mov
aaa
xor
mov
movsl
or
mov
xchg
in
vpshlw
cmp
inc
pop
lahf
mov
dec
xor
inc
sub
aam
xchg
clc
lods
fwait
adc
mov
test
push
mov
arpl
mov
movsb
andl
cmp
mov
fs
lahf
pop
cmp
lock
mov
dec
inc
and
push
push
push
lahf
aas
insl
cmpsl
fsts
sti
jo
test
and
xor
add
jo
dec
loop
test
dec
mov
and
cmp
pop
jl
mov
mov
sub
stc
and
add
mov
pop
rorl
imul
iret
mov
and
sbb
loop
pop
testl
es
leave
out
mov
js
aad
test
lds
lods
cltd
fidivrl
mov
mov
ret
jo
dec
push
xor
mov
popa
rcr
inc
lahf
imul
repz
mov
pop
fdivs
mov
push
xchg
int3
mov
or
jne
inc
xchg
faddp
mov
lret
in
inc
movsb
add
pop
dec
push
call
arpl
int3
sbb
clc
inc
imul
cmpsl
and
fsub
imul
rorb
rcrl
pop
scas
es
and
and
aad
sub
cld
sub
jecxz
mov
scas
aam
addb
xchg
dec
test
sub
lahf
stos
jb
rolb
leave
cwtl
stc
xchg
lret
mov
cmp
movsl
xchg
inc
fsubrs
cmpsl
inc
xor
lahf
and
xlat
sub
and
aas
xchg
sbbb
leave
adc
xchg
test
mov
dec
lahf
leave
lret
push
or
and
cmp
inc
jp
lds
jg
ret
sarb
fiadds
loop
imull
imul
cmp
inc
bound
jbe
jmp
xchg
cmpsb
repz
adcl
pop
popf
movsb
out
int
imul
ficoml
sbb
leave
adc
in
js
mov
fmulp
push
xchg
iret
in
and
bound
and
or
sbb
insl
sub
mov
aad
lahf
xchg
leave
xor
mov
imul
mov
bound
ljmp
fstpl
mov
push
jne
stc
arpl
sarl
imul
stos
inc
into
cmpsl
mov
dec
cmp
stc
ljmp
fsubr
into
popa
push
push
popa
adc
movsl
dec
pop
fidivrs
fistpll
repz
push
test
xchg
jno
enter
cmp
add
aad
int
ds
or
adc
int3
jle
les
inc
dec
out
sbb
xchg
icebp
vmaxss
pop
repnz
fisttpll
shrb
aam
int3
dec
mov
push
nop
mov
icebp
fnstenv
xchg
add
sbb
clc
fisttps
xchg
leave
sti
fstpl
sbb
test
test
or
fldt
pop
xor
and
jle
repz
push
pop
xlat
repnz
add
fbld
cmpsb
subl
or
sbb
xchg
imul
jns
add
push
roll
sbb
fdivl
mov
ret
push
dec
les
pop
insl
xchg
sub
mov
mov
fsubrs
xor
repz
mov
call
mov
int
stos
or
xchg
in
mov
pop
in
cmc
in
imul
ds
repz
mov
push
push
jae
out
int
sub
add
movsl
pop
mov
jle
fs
cli
cld
mov
pop
je
dec
cmp
jno
stc
fldcw
test
lret
cmp
xor
repnz
sahf
mov
dec
pop
dec
ss
imul
loopne
mov
xchg
fadds
lcall
scas
out
mov
rolb
lcall
jne
adc
xchg
jle
popa
sbb
aam
dec
push
sbb
loope
sbb
or
pushf
mov
mov
mov
in
jns
pop
in
out
add
jne
xor
ja
negb
pop
push
ret
mov
outsl
mov
mov
es
incl
inc
dec
mov
mov
jne
and
xchg
and
xchg
test
call
push
out
jecxz
xchg
frstor
mov
jb
incl
pop
loope
push
jno
ja
xchg
sbb
movsl
push
dec
hlt
adc
mov
fsubs
call
mov
movd
push
cmp
mov
xor
cltd
dec
mov
popa
fmul
pop
sarb
shlb
sbb
jmp
mov
jb
mov
jle
movsb
mov
xchg
lret
mov
je
in
gs
sbb
and
jae
jp
and
add
mov
sub
insl
add
mov
out
dec
stos
shlb
and
push
lahf
or
sbb
push
sub
and
in
mov
sub
pop
aad
in
jp
cmp
std
dec
rolb
lock
lret
fisttps
loop
dec
jecxz,pt
ss
aas
les
jl
in
das
pop
xlat
mov
mov
pop
pop
ds
out
dec
jmp
fs
scas
mov
cmp
pop
jbe
fs
mull
pushf
xor
xor
cmpsb
daa
push
jge
inc
pop
es
jg
pop
push
insb
adc
add
mov
xchg
jmp
push
push
pop
rcr
lahf
or
out
rcl
fidivrl
lods
xchg
fwait
xchg
add
adc
imul
leave
stos
xchg
mov
mov
add
lock
rorb
out
mov
cmp
lahf
ljmp
ljmp
fcoms
sub
ja
xchg
aad
push
jae
sti
mov
es
adc
cmp
gs
pushf
je
xchg
stc
outsb
jnp
shr
out
sbb
out
cmp
in
adc
lret
jge
or
cmp
loopne
int3
stc
insb
and
outsb
inc
daa
test
xchg
cwtl
sbb
cld
inc
rclb
dec
pop
dec
push
pusha
cwtl
jp
pop
xor
xor
and
stos
push
in
es
add
sbbb
es
dec
push
and
rcrb
ret
mov
clc
xchg
cltd
inc
cs
mov
shll
push
icebp
loop
inc
jmp
stos
sub
imul
push
cmp
jns
add
jb
pop
bound
popa
ret
shl
inc
arpl
fidivl
out
aas
add
pop
idivb
negl
push
adc
cmpb
aad
xor
mov
push
mov
xchg
mov
je
mov
dec
cs
jmp
in
stc
dec
xchg
sbb
mov
fs
inc
fisubrl
cmp
xchg
repz
or
or
sub
sub
jne
jmp
and
gs
mov
cmp
jnp
pop
cmove
ret
cmp
cmp
and
sub
cld
stc
dec
imul
pop
xor
inc
adc
adc
scas
adc
sbb
test
leave
jae
and
cmpsb
mov
and
sahf
add
ljmp
insl
fstpt
or
jg
push
or
enter
xchg
pusha
xor
leave
inc
in
addl
inc
mov
mov
inc
sbb
pop
outsl
in
inc
inc
std
xchg
sti
les
dec
fisubrl
movsl
insb
popl
or
or
xchg
add
repnz
mov
outsb
push
cs
inc
jmp
pusha
mov
dec
or
fwait
xor
xor
divb
pop
js
mov
push
mov
outsl
dec
jbe
shr
pop
out
repz
scas
inc
mov
push
aaa
sub
mov
out
and
loop
push
popf
add
in
call
stos
push
lahf
outsb
mov
lahf
push
cwtl
popf
dec
imull
cmp
sbb
es
loopew
fcmovnb
rolb
fs
ror
lcall
sti
outsb
pop
dec
repnz
push
testb
and
gs
es
cmp
pop
push
jbe
jp
arpl
insl
or
jbe
push
dec
std
addr16
jle
xor
ret
mov
sub
push
ljmp
stos
cmpsb
push
hlt
adc
mov
out
xchg
add
jnp
mov
inc
push
icebp
xor
dec
push
or
iret
icebp
rolb
mov
xorl
add
scas
pop
lret
int
add
popa
sbb
je
data16
adc
inc
jmp
add
or
scas
rolb
sub
jp
push
pop
jecxz
adc
sub
addr16
sbb
in
lahf
mov
fsubrl
push
fcomip
gs
sti
and
sbb
lock
mov
loop
add
fcomip
negb
add
jle
xor
adcb
testb
lods
xchg
iret
jmp
push
ljmp
mov
cmc
pop
mov
and
lahf
mov
mov
push
negb
es
scas
and
mov
mov
pusha
or
dec
or
inc
cli
pop
jb
xchg
daa
sub
js
mov
and
scas
jl
out
push
cmp
jno
adc
adc
adc
mov
mov
xchg
mov
ret
aad
sbb
pop
ficoml
enter
aad
xorb
adc
arpl
sub
insl
stos
test
mov
cmovo
xchg
repnz
aad
test
inc
sar
sub
dec
cmpsl
popa
out
pxor
sub
je
icebp
and
mov
or
addr16
add
jmp
add
stos
push
sahf
sbb
jge
in
test
cmc
dec
xor
lods
repnz
xor
mov
or
mov
inc
out
popf
pop
adc
fwait
sti
ret
lods
lahf
jbe
ss
mov
xchg
stos
shll
icebp
mov
pushf
adc
test
mov
pushf
sub
push
pop
jge
mov
lods
add
pusha
outsl
rcrb
pop
fs
mov
loopne,pn
mov
adc
jmp
pop
sbb
jbe
push
mov
mov
test
adc
lock
jbe
adc
inc
fisttpl
imul
jle
push
sub
cld
or
add
fs
notb
cmp
cwtl
push
sahf
mov
inc
aad
out
add
or
cmp
filds
pop
sbb
or
in
xchg
jle
dec
dec
int
arpl
stc
mov
pop
adc
lret
pop
mov
pusha
inc
fmulp
iret
test
les
cmp
mov
pop
call
outsb
inc
and
and
mov
sub
scas
inc
inc
adc
int3
call
inc
cmpsl
lahf
aas
pop
xchg
jne
inc
into
and
xor
push
les
mov
sbb
test
dec
fs
out
adc
aaa
add
jns
fldt
and
mov
ret
adc
pop
adc
sub
mov
sbb
fisubl
cmp
hlt
es
or
decb
jecxz
dec
xchg
lret
arpl
inc
call
imul
or
cmpsb
enter
invd
addr16
sbb
push
fwait
pop
ret
out
mov
mov
xchg
mov
and
jp
outsl
outsb
adcl
shrl
sub
stos
push
lahf
jle
movsl
sub
in
mov
movb
mov
int3
sbb
adc
jecxz
push
xor
lea
repz
mov
and
jge
sub
xor
gs
cmp
adc
add
dec
sbb
cmp
icebp
fmulp
outsb
aad
pop
repz
pcmpeqw
pop
or
cmp
jl
mov
mov
cmp
std
ds
push
xchg
and
push
cmp
out
popa
sbbl
insl
ret
inc
out
fwait
leave
das
les
and
push
jg
sub
xchg
lahf
xor
pop
movl
mov
std
sbb
mov
aaa
adc
in
pop
cmp
cwtl
loop
cltd
fstl
into
aaa
icebp
pop
in
mov
or
shll
ficomps
pusha
fs
lods
add
int3
mov
ja
cmp
fdivl
inc
adc
cmpsl
ds
hlt
hlt
sbb
add
jle
fcoml
mov
aas
or
loope
push
mov
mov
xchg
and
dec
outsb
ficompl
or
scas
imul
lcall
in
mov
jns
out
xlat
inc
cmpsl
daa
mov
xor
push
pushf
fstpl
loopne
ds
loop
inc
aam
rorb
roll
jle
and
lahf
arpl
cmp
push
aas
adc
ret
leave
add
aaa
int3
nop
popl
push
inc
lock
dec
arpl
sub
cmpsb
insb
scas
xlat
mov
inc
xor
ja
shlb
rclb
pop
push
dec
jl
lock
inc
rcll
add
mov
les
jne
or
loop
out
push
mov
cmovne
cmp
lock
inc
in
jp
aas
cmp
iret
inc
push
stos
push
mov
scas
or
fcomps
adc
in
std
jo
ret
outsl
pop
xchg
imul
decb
mov
int3
cmp
jge
cmp
ljmp
jp
stos
and
cmp
lock
aas
jmp
add
or
mov
insl
aam
imul
mov
jbe
sbb
fwait
sub
cmp
in
mov
jb
mov
lret
addl
mov
mov
popf
popf
outsl
mov
jbe
mov
notl
mov
jge
xor
inc
pop
sbb
mov
test
aam
inc
inc
adc
hlt
push
and
out
mov
mov
cmp
fadds
hlt
inc
repnz
ret
mov
cmpsb
inc
adc
mov
test
sub
cmp
outsb
adc
in
jbe
insb
and
testl
popa
push
adc
mov
fbld
in
daa
ret
dec
fidivl
mov
cmp
mov
push
push
loopne
xor
pop
sub
mov
mov
pop
xor
jg
and
push
push
pushf
movsl
dec
and
jns
jno
ja
popf
ds
imul
push
mov
lods
imul
mov
data16
lret
loopne
notl
aaa
xor
fldl
or
lcall
shlb
inc
stc
insl
push
rorb
out
or
jle
pushf
fadd
stos
jle
pop
lahf
push
sbb
inc
mov
flds
push
xchg
mov
xchg
and
add
mov
jns
add
push
sub
lahf
sbb
and
mov
adc
jg
pop
or
imul
mov
adc
es
cwtl
in
faddl
push
mov
pushf
fcmovne
mov
cmp
adc
jno
mov
outsb
mov
icebp
shl
and
xchg
xor
cmpsl
mov
add
cld
jae
push
loope
mov
mov
sti
cmp
lret
push
addb
mov
mov
cwtl
push
loopne
xlat
or
mov
daa
in
in
ss
insl
mov
neg
and
adc
cmp
icebp
inc
nop
lea
jmp
mov
outsl
movsb
ja
repz
lcall
pop
repnz
adc
call
jns
jnp
xchg
inc
mov
loopne
cmp
and
popf
call
iret
pop
iret
and
and
or
insb
das
repnz
std
adc
nop
dec
shll
out
dec
sbb
pushf
int3
inc
sub
or
cs
daa
das
xor
cmp
shll
sahf
daa
mov
inc
and
jo
jns
pusha
mov
and
mov
sub
fistl
jnp
in
mov
ljmp
in
rcll
xor
mov
pop
jb
push
mov
and
mov
mov
div
xor
mov
cmp
imul
movsl
inc
xchg
mov
xrelease
jae
or
in
dec
xchg
inc
dec
jno
das
int3
sbb
cmp
dec
and
sahf
rorb
loopne
or
cmc
sbb
stc
mov
dec
inc
jle,pt
pop
insl
mov
push
inc
outsb
xchg
jle
mov
inc
mov
cmp
mov
jns
add
mov
add
movsl
jb
in
mov
xor
test
lock
les
mull
sbb
call
lea
jne
jae
or
cmpl
ss
sbb
aam
lock
mov
push
and
jo
stos
scas
int3
aaa
mov
push
xchg
mov
mov
xchg
sbb
sbb
cmp
adc
stos
das
mov
or
aas
mov
pop
and
popf
pop
pop
cmp
das
jp
sub
or
pop
sarb
or
popf
int3
fs
je
insl
movsl
loop
jo
mov
popf
or
pusha
inc
nop
fisttpll
lods
gs
lods
jg
inc
lahf
imul
test
test
xchg
or
aam
cld
cs
jle
xor
pop
repnz
jnp
jp
adcb
and
push
and
sahf
pop
ljmp
mov
ljmp
cmc
mov
clc
movsb
lret
jmp
xor
fs
out
mov
enter
cwtl
mov
iret
les
push
bswap
aas
jge
popa
pop
mov
sub
sbb
pop
sahf
and
mov
sub
xor
add
int
jb
jmp
push
adc
test
imul
stos
adc
out
lock
mov
int
pop
data16
add
jno
jp
repz
cld
jmp
or
fbstp
xor
aad
jg
ss
mov
xor
jae
xchg
lods
mov
repnz
testb
rcrl
fcomi
in
push
in
pop
mov
testb
out
in
xchg
aam
adc
sbb
and
push
jo
addr16
bound
xchg
mov
jno
enter
jecxz
shrb
rdmsr
mov
mov
dec
clc
stc
cmp
fimull
adc
mov
cmp
in
jns
rcll
lret
aas
or
jnp
imul
pop
or
cs
dec
cs
jge
cmp
arpl
push
int
out
sbb
lret
sbb
jo
mov
int3
dec
sub
fisttpl
pop
dec
and
ds
ja
stc
movsb
nop
lahf
aam
xor
fsubs
pop
insl
jno
mov
adc
xlat
out
daa
dec
adc
pop
outsb
mov
jmp
mov
out
push
fs
ds
pop
cs
or
or
pop
mov
pop
adc
dec
aas
out
mov
jbe
pop
scas
cwtl
das
sbb
sahf
mov
cs
jge
std
mov
cwtl
loope
pop
and
push
test
mov
iret
gs
daa
in
fcoms
jae
pop
popf
or
or
adc
or
cmc
cmp
mull
add
in
push
xchg
sub
cmp
mov
and
adc
and
jo
dec
xor
jmp
out
lea
loope
adc
mov
xchg
xlat
xor
das
aaa
xchg
xor
and
sub
xchg
int3
nop
fnclex
inc
jp
mov
insl
inc
mov
int
imul
ljmp
jmp
mov
mov
jle
outsb
sbb
jecxz
push
subb
push
call
lahf
or
cwtl
call
cmp
data16
dec
inc
int3
sar
hlt
push
ret
xlat
stos
insl
das
cmp
popa
push
sub
push
aam
cs
mov
in
push
cmp
mov
fnsave
in
push
cmpsl
nop
jns
xor
test
popa
repnz
dec
aaa
jecxz
shl
fsubrl
ret
xchg
lds
addb
pop
jge
out
stos
xor
pop
leave
arpl
xlat
rolb
sbb
mov
lea
xchg
lds
xchg
and
xchg
cmpsl
jo
pop
jle
mov
push
out
and
pusha
test
push
inc
ds
push
outsl
sub
dec
lea
cmpsb
nop
xchg
data16
inc
cmp
xchg
dec
pop
push
pop
jge
push
insl
pop
ds
pop
pop
mov
fwait
mov
xor
mov
push
jnp
xchg
stc
xorb
xlat
data16
leave
aas
pop
movsl
lret
sub
or
popf
mov
sub
push
ds
push
cmp
cmp
aaa
flds
mov
adc
shrb
leave
mov
inc
fnstcw
xchg
dec
cmp
rolb
das
hlt
sub
test
in
pusha
mov
repnz
inc
or
shrl
stos
lcall
adc
fmul
xchg
movsl
push
mov
fistl
inc
sub
add
sti
push
fnsave
mov
imul
mov
mov
je
test
mov
sub
add
aam
test
and
pop
jb
push
fdivr
outsb
mulb
or
les
dec
pusha
mov
js
cmp
xchg
xlat
fcoml
adc
or
cmpsb
dec
aaa
gs
sar
fdivrs
push
scas
jl
ret
cwtl
ljmp
in
std
push
or
movsl
mov
pop
in
das
dec
mov
pop
add
xor
mov
stos
pop
out
jecxz
hlt
clc
sbb
jle
leave
pop
sub
cmc
jns
add
pop
push
test
scas
mov
loope
mov
cltd
aad
jne
jge
ds
sbb
and
test
push
cmpsl
push
ret
mov
xor
and
and
mov
xchg
cmp
mov
cmpsl
cmp
lcall
fidivrl
out
je
sub
bound
sbb
stos
int
xor
mov
popf
shlb
fstp
xchg
xor
push
cmp
leave
adc
icebp
inc
push
adc
out
in
cmpsb
adc
inc
imul
xchg
stc
test
fists
lock
xor
shll
mov
jg
xchg
ret
sbb
aad
hlt
pop
lret
int
arpl
jmp
fxch
and
mov
sbb
mov
cmp
mov
loopnew
xor
cmpsl
fsts
xchg
ja
fildl
and
int3
jne
jno
loope
or
lcall
cmp
xchg
or
xchg
jle
xor
cmovne
lcall
and
adc
dec
push
pusha
in
in
movsl
push
mov
cld
lcall
outsb
call
lret
insb
jg
cmp
sbb
sbb
or
in
scas
mov
clc
xchg
imul
in
clc
xor
add
call
jb
adc
xlat
ret
stos
andl
mov
add
rclb
mov
jp
add
pop
cmpsl
rolb
mov
dec
mov
loop
mov
mov
clc
pushf
fidivrs
lock
ret
push
adc
pushf
sbbb
aas
xor
xchg
movsb
xlat
pop
push
and
push
dec
pop
inc
pop
pop
cmp
inc
call
pop
add
xor
cmpsb
rclb
call
xchg
cmpsb
cwtl
sbb
ret
push
adc
aad
xchg
jno
mov
mov
push
aas
shld
enter
push
sti
aas
jbe
shrl
idiv
push
imul
iret
xchg
movsb
orb
or
sub
nop
and
sub
xor
xchg
push
jno
and
shrb
push
call
outsb
cld
push
inc
fcomps
sbb
stc
pop
jp
stc
sub
xchg
jo
sub
sbb
add
pushf
cmp
loop
mov
or
sbb
int
push
sahf
mov
lods
or
je
repz
ljmp
mov
jecxz
pop
shl
add
enter
cld
repz
push
sub
lret
xor
xor
fisttpl
push
dec
cmpsl
or
cmp
imul
mov
mov
add
ret
sti
mov
mov
pop
mov
xor
sub
scas
push
push
mov
sub
jl
aas
dec
and
repz
pushf
push
cs
xor
cltd
movsb
jl
mov
adc
adc
mov
sarl
aas
xchg
sub
mov
sub
jb
clc
add
add
sub
fdivl
lret
cmpsb
and
mov
data16
stos
mov
or
cld
jo
jp
mov
adcl
rolb
inc
out
push
loop
ljmp
cmpsl
adc
mov
cmp
xor
rcrb
push
cmp
repz
adc
and
adcl
test
int
out
sub
mov
test
scas
mov
adc
mov
jb
xchg
xor
sbb
adc
cmpsb
mov
test
dec
repz
addl
sub
jmp
arpl
or
adc
rcrb
mov
shll
movsl
jmp
push
cs
push
addr16
scas
out
inc
add
mov
fyl2x
cmp
subb
fsubl
test
lret
inc
mov
pop
adc
adc
int
adc
movsb
jnp
jb
pop
rcll
rorb
std
inc
jmp
in
cmp
sbb
jae,pt
sahf
inc
loop
rcrl
aam
push
popf
scas
and
fists
jo
les
pop
xchg
lret
jle
sbb
xor
test
mov
pop
sub
mov
or
jae
pop
pop
ja
fsubr
adc
insb
clc
aam
sbb
mov
cmp
fs
sub
aaa
out
fnstenv
lea
push
daa
push
xchg
insl
xchg
popf
lds
lods
add
es
push
inc
inc
mov
fs
aad
jo
lea
nop
loope
xchg
push
xor
or
das
sbb
push
mov
mov
test
bound
outsb
add
sbb
mov
xchg
aaa
sahf
inc
jnp
xor
cmp
mov
cmpsl
xchg
mov
mov
lods
std
les
jae
jnp
jb
movsl
jle
mov
mov
mov
and
in
fwait
mov
sub
push
mov
arpl
adc
jbe
fisttps
stos
test
mov
mov
sti
out
stos
in
icebp
push
jp
fidivl
sub
mov
push
pop
dec
jge
in
cmp
push
cmpsl
loope
out
in
jo
dec
mov
pop
cltd
sub
lock
cmp
divb
jnp
adc
loop
leave
pop
aaa
sbb
push
test
push
inc
gs
popa
fs
cs
pushf
push
shr
or
jmp
add
in
inc
movsl
mov
pop
les
jnp
sbb
ljmp
or
adc
lret
mov
mov
movsb
cmp
shrl
or
xchg
jne
mov
fdivrs
add
lea
popf
movsb
ja
hlt
mov
mov
aam
adc
js
pop
imul
cmpsb
js
adc
in
in
popl
mov
jecxz
fcmovbe
aad
jecxz
and
popf
or
mov
pop
call
scas
jae
arpl
dec
mov
fadds
inc
sbb
outsb
push
sbb
mov
fisubrl
outsb
jo
lcall
les
cmp
dec
subl
xlat
pop
pop
mov
clc
leave
data16
adc
insb
pop
pop
adc
mov
shlb
repnz
add
mov
adc
push
sub
ljmp
fidivrs
xor
js
push
lods
nop
sarb
imul
jecxz
jle
out
cmp
aas
mov
mov
mov
push
or
fcomip
xor
out
pop
cld
add
push
inc
xlat
sub
fld
test
sbb
push
mov
das
mov
sahf
clc
imul
aaa
add
shll
xchg
ds
add
jno
addr16
imul
lds
outsb
rcl
push
adc
fmuls
leave
pop
push
jne
scas
sub
mov
mov
fidivrs
sbb
das
stos
adc
fsub
dec
test
cmpl
pop
out
jg
push
adc
pop
pop
jae
pop
push
xchg
xor
test
in
xor
rolb
out
push
ret
mov
mov
jle
xor
add
cmc
call
mov
xchg
add
mov
pop
icebp
lock
jle
push
pop
sbb
daa
add
stos
jmp
pusha
test
lea
add
jl
ret
mov
mov
arpl
imul
scas
les
jge
loope
mov
push
out
dec
jb
sbb
cmp
daa
out
jmp
adc
adcb
shll
test
aad
inc
lcall
dec
xchg
jns
dec
mov
jmp
movsl
add
jmp
mov
inc
cltd
jbe
lcall
testb
inc
daa
xor
pusha
add
mov
xchg
imul
data16
mov
adc
popf
mov
add
jmp
gs
push
push
push
in
add
shl
repz
xchg
push
rol
add
dec
adc
loope
gs
fwait
pop
xchg
push
jge
les
aam
dec
pop
into
sbb
dec
sbb
insl
mov
enterw
push
push
adc
xchg
xor
sbb
xchg
cli
pop
arpl
mov
lods
adc
popa
or
jle
dec
xchg
ret
push
dec
xchg
out
jns
add
popf
adc
cmpsl
stos
movsl
xchg
xchg
in
fwait
daa
ret
inc
pop
mov
faddl
cmp
sti
ja
ret
mov
test
mov
lea
out
int3
call
mov
sub
loope
lcall
pop
sub
fs
cld
jecxz
mov
xchg
sub
stos
outsl
ljmp
jmp
inc
pop
pushf
mov
in
xchg
xchg
shlb
test
cmp
test
mov
fiaddl
cpuid
pushf
inc
mov
pop
adc
bound
sahf
push
sbb
cmp
cwtl
pop
sub
pop
mov
mov
xor
sahf
jg
push
and
outsb
aas
push
movl
sbbb
inc
in
mov
push
test
sub
faddl
pop
daa
shrb
imull
cli
mov
out
sbb
pop
scas
jl
mov
dec
test
push
xchg
lods
fs
fstp
out
sub
inc
enter
scas
cs
mov
lahf
mov
out
fcomps
mov
jae
xlat
mov
xchg
bound
cmp
out
xchg
hlt
fidivrl
mov
mov
sbb
les
inc
push
pop
shlb
adcl
bound
repnz
das
mov
xchg
ja
outsb
jno
mov
and
popa
mul
lea
aam
jge
sti
stc
xor
fistpl
loopne
xor
cmp
xor
sub
outsb
popa
test
or
int3
or
pop
addr16
int
fcmovne
xor
sbb
sarl
nop
lret
mov
std
add
push
mov
fstpt
mov
test
int3
pop
arpl
scas
dec
push
or
js
xor
stc
sbb
mov
out
mov
mov
int
and
int
cmp
push
je
or
sub
movsl
push
mov
push
or
stc
push
jmp
xor
lahf
cs
decl
jl
shl
inc
scas
in
iret
bound
movsl
in
jle
imul
ja
cmp
jl
xor
mov
cwtl
imul
push
iret
sahf
jo
daa
xchg
ja
out
xorb
inc
lock
sti
ret
fcomip
sub
xor
mov
shl
jo
clc
iret
sbb
push
lret
je
out
int3
or
mov
push
in
adc
xchg
addr16
and
pop
inc
and
cmp
loope
orl
push
xchg
pusha
sbb
or
add
sub
sub
daa
mov
cld
and
push
in
push
mov
jmp
shlb
scas
fs
pushf
push
fnstcw
or
mov
and
add
pop
popf
lods
cli
cmc
addr16
lret
xor
gs
inc
lock
dec
pop
dec
mov
xchg
xor
sbbb
rorb
popl
das
notl
cwtl
xor
popa
pop
pop
pop
or
jne
loop
clc
in
or
push
arpl
hlt
mov
cmpsb
cmpsb
outsl
pop
adc
int3
repz
inc
paddd
jmp
jne
fidivl
loopne
stos
rclb
mov
mov
in
dec
inc
jo
mov
dec
test
add
mov
or
mov
sub
int
hlt
jae
lahf
ljmp
sub
test
pop
adc
inc
adc
xor
mov
cmp
push
cmpb
xchg
adc
out
add
jmp
mov
mov
negb
lds
adc
xchg
ficoms
insb
ret
mov
fidivl
pop
xchg
cmc
hlt
sbb
or
inc
add
movsb
lahf
repz
push
ss
and
add
or
sbb
and
pusha
jmp
mov
mov
jge
imul
mov
push
push
inc
int
push
or
loopne
test
add
lret
aaa
xor
into
pushl
ss
fildl
mov
xor
addr16
xorb
push
jmp
xchg
lahf
pop
adc
ds
jmp
test
rorl
call
data16
neg
bnd
lds
mov
push
nop/reserved
fadds
dec
xchg
fisubrs
cmp
xchg
jo
jmp
or
ret
rorb
out
cmc
pop
jle
adc
cmpl
fstps
push
loop
jmp
dec
mov
add
scas
popf
xchg
xchg
add
pushf
mov
jl
xchg
xor
adc
sbb
and
mov
adc
xchg
add
test
mov
fwait
subb
aam
aad
mov
js
pop
fistps
lret
mov
stos
mov
out
jecxz
xchg
and
mov
cs
enter
loope
and
xchg
outsb
daa
data16
pusha
jbe
mov
push
daa
leave
outsl
arpl
loope
sub
pop
cmp
jnp
mov
lahf
psubsb
shlb
lds
adcl
mov
shrb
jmp
cwtl
repz
aam
leave
test
mov
or
inc
dec
xchg
or
jl
and
push
push
loop
and
pusha
mov
cs
push
popa
xor
mov
sub
data16
inc
sbb
push
faddl
dec
sbb
aas
scas
mov
mov
pop
jae
mov
mov
cmp
push
sub
fimull
out
and
add
jge
push
in
pop
dec
sbb
push
and
xchg
out
sub
pop
sbb
mov
sbb
scas
jl
mov
pop
adc
cmpb
and
test
test
mov
gs
xchg
popa
loope
lods
adc
pusha
xchg
fisubrs
and
jle
and
out
into
movsb
push
sub
ja,pn
sbb
cld
and
divb
add
ds
test
icebp
sub
push
xchg
adc
sub
sbb
push
vmovq
insl
xchg
leave
xor
pop
pop
int
adc
cs
fcomps
repz
hlt
push
push
adc
mov
cmc
push
sbb
add
jmp
xchg
inc
pop
int3
dec
jns
cmp
push
data16
cmpl
mov
push
ss
cmp
data16
sub
loope
leave
and
add
mov
mov
std
or
cmp
aam
js
insb
pop
inc
in
test
cmp
jge
stos
adc
adc
lcall
adc
aad
jl
hlt
xchg
jp
mov
imul
or
cmc
addl
fsubrl
cmp
xor
fdivr
push
mov
data16
std
jmp
fs
adc
xchg
clc
xchg
dec
js
and
fcompl
pop
jbe
push
fidivs
mov
lods
mov
out
sti
mov
jb
push
shlb
in
ljmp
outsb
mov
and
pop
mov
mov
int3
xor
xchg
dec
fwait
into
add
xor
jl
xchg
scas
inc
mov
das
fstl
add
ljmp
shl
ss
push
aas
pop
inc
mov
in
inc
or
adc
sbbl
int
xor
enter
xor
insl
pop
or
add
push
jno
dec
popa
mov
mov
pop
xchg
outsl
fmuls
clc
bound
repnz
adc
jmp
push
dec
ret
mov
push
orb
cmp
rclb
sbb
ss
and
or
mov
rcrl
cmc
mov
insb
in
jmp
adc
es
jb
out
scas
scas
push
outsl
pop
or
jnp,pn
daa
std
xor
sbb
inc
xor
aam
mov
test
shlb
ds
lds
out
inc
cmc
loope
mov
aad
jecxz
dec
cmp
push
movsl
arpl
sbb
jno
jne
dec
movsb
dec
mov
cmp
in
mov
mov
stc
xchg
into
push
add
mov
cmpsl
sbb
jo
in
adc
outsl
repz
das
mov
jnp
push
cmp
add
daa
movsl
add
dec
push
shrl
ds
jno
jb
mov
sbb
ljmp
divl
sub
sbb
repz
testl
hlt
jae
cld
mov
pop
inc
repnz
add
push
in
int3
jb
daa
xor
push
sub
stc
push
aas
lret
mov
gs
mov
jmp
arpl
mov
in
jp
adc
fcompl
subb
push
and
pop
mov
pop
jmp
and
mov
push
das
xor
cld
orl
fldenv
jle
pop
mov
push
mov
pop
mov
pop
adc
insl
idiv
mov
int3
xor
into
or
idivb
sbb
jecxz
lahf
mov
fmul
aas
aam
fwait
mov
xor
arpl
in
fildl
ret
scas
sub
cmp
gs
icebp
xchg
mov
cmpb
pop
xor
lods
xor
add
insb
fcmovb
inc
xchg
pop
mov
sbb
mov
mov
and
insb
lret
mov
loop
mov
not
loopne
out
or
roll
lods
fdivr
addr16
lret
mov
repnz
mov
adc
sub
xchg
std
sbb
cltd
test
mov
dec
imul
push
rcrb
aas
aaa
aad
mov
and
in
add
push
mov
inc
and
push
inc
into
loopne
fistpll
ficompl
mov
inc
mov
lods
or
xor
xchg
jp
sub
xlat
sub
lods
movsl
mov
sbbl
dec
aam
subl
das
mov
pop
pusha
shrb
ret
int
push
jg
push
and
add
jg
add
jp
out
pop
lret
xchg
pop
or
cmp
mov
mov
add
add
add
data16
push
mov
aaa
or
repz
sub
or
loopne
push
mov
adc
in
xor
xor
push
cmp
inc
inc
dec
jecxz
cltd
or
mov
lahf
icebp
mov
aad
ss
scas
push
fs
cmpsl
aam
push
orb
repnz
movsb
jl
or
in
fnstcw
cld
cli
popf
enter
insl
jmp
xchg
pop
in
mov
cltd
mov
jo
cmc
fs
out
jmp
scas
add
push
int
dec
push
lods
add
sbb
roll
fstl
push
jno
and
fcmovnbe
in
lcall
pop
jae
sub
adc
dec
cmpsb
jb
inc
jns
mov
push
mov
jle
out
push
mov
inc
add
inc
cmp
popf
xor
mov
addr16
test
jne
shlb
xchg
push
icebp
cmp
mov
pop
push
sub
mov
lret
cmp
into
aam
xchg
arpl
dec
stc
pop
in
imul
mov
push
mov
stos
out
xor
bnd
push
jl
fcmovnu
jp
jne
pushf
xor
xchg
ja
sub
mov
nop
xchg
xor
jns
sub
in
xor
dec
out
jb
idiv
pop
mov
push
lds
ja
or
xor
and
add
les
mov
mov
fsts
in
cmc
ljmp
jno
and
and
mov
jnp
pcmpeqw
ds
xlat
loopne
jno
sti
imul
and
addr16
sub
pop
jb
sub
nop
pop
sub
test
mov
lods
push
insb
rcl
popf
pusha
mov
jl
aas
mov
mov
and
pop
daa
ja
pop
and
shll
data16
pushf
push
fidivrl
mov
mov
cltd
test
adc
test
loope
fisubl
lock
xchg
sahf
test
or
mov
push
pop
dec
inc
rcl
andb
ja
mov
ror
lea
or
sbb
lahf
xor
outsb
out
adc
push
jmp
adc
int3
bound
xchg
and
or
stos
sahf
dec
cltd
lcall
roll
push
lds
pushf
or
sti
xor
cmp
es
addr16
int
xchg
sub
ja
fiadds
push
adc
ret
pop
sub
add
cmp
mov
pusha
cmp
loope
mov
jmp
ss
outsl
loope
out
jg
cmp
or
or
jmp
mov
mov
in
ja
es
fs
out
mov
inc
dec
rcll
mov
inc
dec
pop
cmp
mov
icebp
jnp
cli
fdivs
mov
dec
xor
and
push
mov
xchg
cmp
sbb
int3
push
or
inc
pop
std
pop
jle
ljmp
push
dec
stos
mov
mov
cwtl
repnz
mov
jge
out
jmp
or
sub
cmc
mov
jle
imul
mov
adc
jl
pusha
inc
cmp
mov
mov
and
fsubrl
jle
fstp
es
out
cmpsb
jecxz
xor
imul
pop
fdivrp
push
cmp
ljmp
lahf
mov
inc
cmp
rcr
enter
adc
xor
fs
in
nop
xor
or
fistpl
mov
sub
jle
pop
sub
mov
xor
repz
repnz
and
clc
cmp
push
cld
scas
jecxz
or
pop
out
in
push
push
xchg
pop
aas
lcall
xchg
fildll
mov
cltd
ret
or
out
push
add
pop
mov
loope
cmp
xchg
or
mov
xchg
dec
out
in
pop
xchg
aad
xchg
pop
mov
pop
push
add
fdiv
sbb
movsl
and
scas
mov
xor
out
out
out
cs
pop
mov
outsl
jae
mov
mov
es
add
pop
adc
les
pop
pop
sub
and
xchg
lods
sub
push
call
cmp
inc
clc
lock
sbbb
inc
xchg
dec
xor
bound
js
lock
fnstsw
xadd
popa
mov
mov
movsb
cli
loope
xor
fisubrs
inc
imul
and
gs
sbb
push
jo
xchg
test
xor
fstpl
aas
icebp
daa
cmp
adc
cwtl
xchg
sub
or
pop
in
inc
out
mov
jbe
pushf
clc
xor
sbb
inc
cmpsl
mov
xor
and
pop
or
clc
mov
inc
sbb
jne
or
push
dec
dec
mov
pop
dec
mov
popf
or
insl
lret
rclb
push
pushf
loope
jo
cmpsl
cltd
dec
inc
test
lss
pop
imul
popf
adc
scas
test
pop
or
adc
add
mov
adc
fldenv
push
sub
xchg
jns
mov
sub
in
aaa
scas
aam
jl
jb,pn
stos
and
mov
mov
shll
fldcw
xlat
movsl
ss
xor
jo
dec
jne
mov
pop
sub
lcall
dec
sub
cmpl
fneni(8087
pop
hlt
sub
pop
adc
push
push
pop
aam
mov
ficompl
or
daa
inc
mov
push
inc
pusha
ret
movsb
sub
mov
pop
mov
aam
fsts
mov
cmpsl
mov
mov
fwait
and
lods
push
jecxz
sbb
mov
push
jle
aam
inc
shlb
mov
adc
mov
ret
dec
insb
hlt
add
test
sub
push
cs
leave
out
loope
inc
sbb
shlb
or
xorl
ljmp
xlat
add
mov
bound
or
sti
subb
cmp
mov
inc
mov
inc
movsb
popa
int3
push
cld
jno
pop
lcall
xchg
sti
sbbb
btc
push
and
mov
mov
push
push
pop
push
add
popf
inc
sub
pop
mov
addr16
in
ret
fnstcw
pusha
bound
arpl
out
lods
jecxz
mov
lahf
sbb
inc
and
test
mov
cmc
out
cmpsb
or
daa
add
iret
jb
or
enter
xor
shl
sub
cmp
data16
jnp
lcall
mov
jl
out
out
cmp
and
jecxz
pop
out
sub
adc
add
xchg
sub
fmuls
pop
sbb
cmpsl
xchg
push
stos
xlat
out
and
mov
adc
mov
aam
jge
pop
les
add
int
push
fcomps
stos
popf
mov
jbe
sbb
xchg
xchg
add
dec
push
lret
pop
pop
and
xchg
adc
subb
add
sub
or
js
pop
mov
jb
mov
push
jg
push
xchg
push
sbb
pop
iret
inc
mov
stc
aad
shlb
xchg
fwait
lods
rcl
cmc
dec
dec
stos
push
stc
or
test
cltd
rcrb
or
push
fsubr
bound
adcl
fcomp
mov
mov
push
lods
insl
or
outsl
out
push
daa
adc
call
pop
xchg
stos
mov
enter
push
out
dec
pop
repz
gs
loop
adc
mov
out
in
arpl
pusha
sbb
movsl
jl
sub
mov
loop
push
xchg
iret
cltd
mov
dec
pop
fwait
add
cld
rcrl
int
push
mov
pop
xchg
int3
nop
jg
sbb
or
adc
imul
popa
test
jp
pop
inc
mov
sub
aad
notl
call
pop
mov
jmp
aam
mov
mov
gs
jbe
mov
mov
sbb
pushf
jmp
pushf
push
jns
fcmovbe
bound
rcrl
movsb
mov
pop
shlb
hlt
and
lea
sub
jno
inc
sub
daa
xlat
mov
ret
lea
mov
jnp
cwtl
cmp
and
ret
loopne
daa
lods
into
dec
jbe
and
inc
pop
xchg
scas
mov
and
push
inc
jbe
aas
les
ret
jnp
js
movsb
jne
or
and
xchg
int
adcb
and
xor
ret
pop
xchg
mov
xor
sahf
mov
stos
insb
mov
divb
imul
scas
out
shrb
dec
sbb
pop
sahf
test
das
ja
outsl
push
jge
inc
push
push
or
ret
lahf
jo
xchg
or
movb
jae
inc
mov
std
in
mov
jge
sbb
and
jg
clc
pop
jmp
mov
sarl
adc
pop
sbb
jo
push
jg
cld
xchg
cld
das
data16
addr16
popf
std
xchg
loopne
jno
daa
pop
jle
stos
mov
xchg
movsb
lods
hlt
add
or
out
add
dec
pop
fimull
xchg
add
rcll
jg
test
test
or
fistpl
imul
pop
loopne
loope
xchg
cli
movl
in
sarl
sub
pop
add
sub
data16
les
hlt
mov
pop
mov
jmp
xor
mull
imul
ret
jno
pop
pop
adc
xchg
xor
mov
push
add
aaa
jne
mov
mov
sub
sub
fisubs
das
lret
icebp
add
add
in
xchg
mov
rclb
lods
scas
adcl
inc
in
mov
cmpsl
jmp
out
int3
xor
popf
sbb
outsb
dec
xchg
xchg
test
cmp
push
fwait
ret
fs
cmp
push
sti
jnp
mov
insb
std
sbb
in
jg
mov
ret
jae
mov
stos
jbe
stc
push
js
mov
xor
pop
rolb
xchg
scas
add
xorl
sub
mov
jecxz
stos
add
gs
repz
out
or
aad
imul
fwait
loope
jp
jne
cmpsb
into
das
mov
jecxz
cmpb
stos
testb
rcrb
or
jno
in
insb
jns
dec
stc
stc
mov
cmp
scas
sub
xchg
mov
insb
pop
leave
mov
lret
inc
dec
jge
xchg
jmp
das
or
call
dec
fdivs
cltd
loope
push
jo
xor
pushf
pop
push
and
repz
popa
ret
out
adc
lcall
push
jecxz
push
pusha
decb
xor
movsb
daa
mov
push
ja
sbb
sub
adcb
xor
add
push
inc
xchg
jnp
mov
outsb
repnz
mov
sbb
jnp
sbb
or
out
push
add
mov
icebp
sub
mov
stos
pop
inc
aad
les
or
dec
sub
mov
mov
mov
iret
ds
cwtl
je
push
sub
pop
repnz
int
xchg
movsl
push
mov
sbb
sub
inc
scas
leave
out
imul
es
sbb
push
jns
mov
in
insl
stos
in
pop
pushf
arpl
pop
or
push
mov
lock
jne
call
adc
rcll
rolb
pop
push
stc
xor
push
outsl
cmp
rcll
loop,pt
or
push
sbb
lock
lock
repnz
add
push
popf
jmp
push
inc
mov
gs
shll
pusha
pop
lret
loop
xchg
adc
stos
test
ja
aas
leave
mov
out
lods
jnp
imul
xor
adc
mov
mov
pop
xor
dec
sbb
pop
xor
mov
jmp
sbb
sbb
jle
lods
aad
dec
stos
jp
int3
dec
cmp
dec
cmp
mov
mov
mov
mov
xlat
cmp
call
adc
xor
stos
dec
fmull
or
cmpsl
or
in
outsb
movsb
addr16
push
dec
in
adc
sbbb
xlat
mov
fldenv
dec
int3
xchg
mov
nop
es
rcr
xchg
int
insb
inc
movb
pop
inc
in
rorb
imul
call
mov
pop
xchg
fsubl
sbbl
dec
scas
adc
mov
sbb
lods
push
imull
rcll
mov
repnz
data16
dec
scas
add
imul
sub
test
daa
iret
leave
roll
cmp
inc
shlb
cmp
insl
test
push
aad
xor
into
mov
jnp
repz
cmc
ljmp
into
xchg
xor
jmp
mov
push
rclb
addr16
mov
push
and
cmp
repnz
xor
and
add
adc
jge
dec
js
bound
jns
mov
test
neg
les
and
scas
lods
stos
daa
sub
mov
mov
add
call
jp
js
out
adc
or
pop
cs
cwtl
add
xchg
dec
xchg
inc
cs
fs
xor
or
lcall
hlt
or
jp
inc
ret
call
int
inc
adc
fnsave
push
inc
cmc
jge
out
in
add
fbld
fidivrs
push
pop
nop
inc
mov
inc
pop
call
mov
insb
sbb
insb
and
mov
pop
push
and
repz
int
adc
aam
cmpsl
push
pop
sub
loop
nop
push
mov
cmp
xor
jno
sub
and
lods
std
rcr
xchg
ss
stos
int3
js
enter
mov
shl
fstpt
pushf
in
out
cmpsb
adc
pop
cmpsl
inc
sbb
lock
loop
inc
fdivs
scas
xchg
push
cmp
add
mov
ds
sub
pop
jge
repnz
sahf
jl
iret
ja
fxch
pop
int
and
inc
mov
xor
sub
pop
dec
int
fisttpl
dec
fistps
dec
xor
ret
or
ss
adc
outsl
fwait
shrb
dec
out
dec
push
pop
mov
ss
inc
mov
xchg
scas
jnp,pn
fisttps
adc
into
jae
out
popf
mov
sub
pop
stc
xor
cmpb
or
shrb
push
cmp
cmc
push
stos
pop
push
adc
adc
and
add
adcl
sbb
ja
aaa
shrl
and
xor
lock
sbb
mov
adc
call
nop
fdivrs
sbb
mov
mov
lcall
jl
in
fbstp
push
cmp
js
dec
flds
movsl
ljmp
push
sbb
je
out
test
rorb
cwtl
add
adc
pop
sti
into
lcall
lods
or
pop
inc
outsl
inc
ja
mov
scas
or
int3
lcall
adc
mov
ja
into
cs
jg
fmuls
jg
sbb
mov
jge
sbb
fnstcw
es
pop
push
jae
lret
imul
sub
pusha
sbb
ja
clc
mov
pusha
xchg
push
cmpsb
push
sub
mov
not
jb
dec
lcall
out
imul
shll
addr16
mov
mov
cmp
nop
cmp
mov
sbb
mov
jecxz
sub
insl
cmp
std
mov
push
das
sub
out
mov
cmp
xor
inc
aad
sbb
push
stos
xor
sub
lea
xor
test
testb
sbb
and
es
lret
and
push
test
mov
mov
push
cli
cmpsl
addl
mov
cmp
add
iret
xlat
xchg
arpl
sar
cmpsl
push
jnp
fs
or
or
ss
sbb
fadds
mov
out
sub
mov
ljmp
sub
and
sarb
ja
dec
dec
or
int
cmpsl
push
imul
push
xor
call
add
int3
imul
stc
jnp
fdivs
push
fiaddl
inc
scas
push
push
fdivp
lret
dec
dec
mov
scas
imul
hlt
jns
and
mov
popf
xchg
sub
std
mov
mov
pop
dec
fs
hlt
sub
xchg
mov
popf
rcrl
jbe
cld
and
test
add
pushf
pop
cmp
dec
adc
xchg
inc
sbb
mov
sbbl
dec
fcmovnbe
scas
es
mov
out
iret
cmp
add
sub
mov
adc
cs
xor
xchg
fwait
sbb
test
insb
xlat
cli
mov
push
repz
lds
xor
cltd
dec
pop
notl
insb
jns
pushf
ljmp
jo
push
dec
xchg
inc
add
inc
scas
dec
mov
pop
stos
inc
neg
inc
dec
push
cmpsl
pop
jp
jne
popa
fwait
xchg
push
xor
out
xchg
clc
scas
push
dec
mov
dec
in
in
cs
sbb
andb
stos
inc
mov
dec
sub
sub
cwtl
add
cmpsb
pop
push
sub
scas
dec
jno
ja
dec
cs
test
fmull
pop
pop
mov
leave
jmp
push
lcall
jg
sbb
jp
pop
jae
or
stc
xor
sub
mov
out
jge
nop
sub
fildll
fnstcw
xor
sub
and
sti
dec
scas
add
lcall
mov
jb
cli
jmp
jmp
pop
stos
xchg
ss
mov
arpl
adc
push
scas
cmp
mov
repz
cmpsb
test
jo
push
adc
insl
pop
stc
cltd
loope
add
into
ljmp
mov
inc
repnz
nop
or
rcll
sbb
and
inc
rcl
sub
pop
and
adc
daa
jg
lea
add
lcall
inc
loopne
gs
mov
xor
lods
scas
lock
jmp
adc
mov
sldt
mov
in
cmc
mov
movsl
lock
mov
and
add
xchg
push
or
mov
scas
cld
test
jo
xorb
and
or
or
sbb
mov
popf
pop
imul
jecxz
xchg
sbb
and
push
adc
jbe
fldenv
js
or
push
out
mov
adc
cli
pushf
dec
jl
cmp
xchg
pop
inc
mov
outsb
stos
pushf
inc
mov
in
cmp
movsb
movsl
inc
orb
inc
out
pop
mov
std
adc
dec
daa
repz
js
inc
fwait
nop
mov
std
mov
les
enter
pop
xchg
aaa
xchg
lahf
dec
outsb
xor
jg
pop
cltd
nop
mov
mov
lods
dec
stos
ljmp
jl
ja
rolb
mov
push
push
js
sbb
aam
es
cmpsb
xor
jns
testb
shlb
pop
mov
aas
jle
lea
or
enter
adc
mov
mov
int
bound
or
jno
inc
cmp
jns
mov
sbb
pop
mov
ds
push
and
add
xchg
mov
out
jecxz
iret
mov
jle
mov
dec
mov
mov
int3
push
jecxz
xchg
enter
push
add
jl
mov
shll
clc
dec
push
repz
cmpsl
repnz
icebp
rcll
bound
fs
pop
popl
and
or
mov
fdivp
jmp
test
jns
repnz
pop
add
push
inc
sbb
fisttpl
mov
push
fwait
push
jge
scas
in
xchg
js
add
dec
cmp
push
jecxz
in
shlb
rcll
out
sbb
hlt
jle
in
lcall
sub
jne
add
inc
out
mov
cmpl
sbb
mov
xchg
dec
shll
or
xchg
paddsb
adc
inc
xor
leave
aaa
jge
cli
lds
or
add
and
in
xchg
fildl
orl
xchg
lock
idivl
or
outsl
sub
stos
cmc
mov
sbb
cmpsb
mov
shrl
insb
mov
mov
pop
dec
aad
test
adc
into
rcrb
call
jo
sti
out
test
dec
and
jg
push
mov
repz
sti
jmp
jnp
jno
int
mov
pop
test
and
in
mov
cmp
orl
ret
mov
push
cmp
mov
mov
or
cmp
pop
push
out
cpuid
push
movsl
or
pop
push
push
in
andb
inc
mov
jbe
or
xchg
mov
xchg
mov
pop
insb
fidivl
cmp
ja
lods
test
stc
jl
and
test
pop
xchg
aaa
lods
mov
mov
mov
cs
pop
movsb
notb
or
lret
cmp
xchg
leave
loop
int
pop
xchg
xchg
lahf
subl
jl
in
push
cmp
pop
repnz
bound
jecxz
xchg
mov
xchg
arpl
aas
mov
mov
pushf
lcall
mov
jle
sbb
cld
fwait
xchg
imul
outsb
aam
popa
push
xchg
add
fwait
dec
sahf
fsubs
cltd
lcall
inc
outsb
cmp
cmp
nop
fcompl
dec
andb
fidivl
movsw
sarb
cld
arpl
fbstp
sbb
daa
push
push
adc
test
sub
decl
or
mov
cmpsl
std
cltd
outsb
ja
scas
fcomps
sbb
pop
lea
js
mov
out
into
into
xchg
sub
pop
lret
lcall
cmovs
ret
icebp
bound
sbb
sub
fldl
rol
sti
out
enter
push
xor
sub
push
or
ret
inc
stc
pop
jl
push
add
jnp
mov
mov
pop
jecxz
into
xchg
fldenv
pop
movsl
test
or
sbb
mov
outsl
or
push
addr16
in
lock
mov
xor
rclb
pusha
pop
lcall
cmp
andl
mov
push
andb
bound
jecxz
fcoms
mov
popf
mov
mov
in
test
stos
dec
ret
loope
mov
xlat
or
sbb
int
or
insl
mov
test
xor
icebp
xchg
repnz
into
cwtl
or
lret
imul
std
mov
movsl
mov
test
cmpsl
xchg
test
push
sub
inc
xchg
push
data16
jb
lea
jecxz
pop
icebp
jle
sbb
addl
fcompl
test
enter
and
xor
arpl
mov
in
in
sub
outsb
int
push
cmpsl
fists
cmp
addr16
pop
cmpb
adc
sbb
xor
jl
f2xm1
and
jge
sbb
mov
xor
rolb
push
adc
mov
push
and
shrb
fcomps
jmp
data16
mov
mov
call
xor
arpl
test
mov
rol
out
push
leave
add
pop
leave
mov
fwait
sub
jge
fmuls
fistl
fisubs
mov
dec
and
jmp
mov
jl
push
in
push
divb
cld
pop
orb
xchg
sbb
inc
int3
fldcw
iret
and
loope
outsb
adc
dec
mov
push
cltd
inc
cmpsl
mov
push
sarb
std
sbb
jge
cmp
xchg
mov
lcall
mov
mov
mov
rorl
sarb
repz
gs
pop
and
sbb
in
rcll
pop
data16
mov
jb
enter
repz
dec
out
cmp
cli
iret
enter
out
fcomps
aam
lods
outsl
vaddsd
mov
repz
jecxz
add
sarl
loop
daa
jge
push
jbe
repnz
xchg
lds
nop
pushf
cwtl
cmc
add
xchg
lret
movsl
cs
sbb
and
xor
jecxz
xchg
add
rorl
jp
xchg
hlt
into
into
dec
loopne
outsl
mov
xor
jne
cmp
pop
imul
ljmp
outsb
leave
pop
sbb
mov
int3
dec
ret
xor
inc
xchg
mov
data16
sub
fidivl
pop
shl
cltd
fistpl
fwait
gs
rolb
xchg
mov
mov
bound
arpl
sahf
add
jecxz
stos
out
out
hlt
mov
jb
adc
sub
mov
sbb
xor
mov
fbld
fwait
push
stc
cld
ficoms
push
push
fwait
out
push
jmp
lcall
into
mov
outsl
popf
xchg
lcall
jge
push
or
lret
loope
mov
ret
mov
dec
dec
and
cmp
dec
xchg
call
sub
mov
jb
jp
in
bound
nop
popf
mov
mov
rorl
or
cmp
xchg
jg
mov
sti
inc
adc
jmp
push
adcb
xchg
je
xchg
xor
scas
insl
insl
enter
nop
popa
cli
pop
das
mov
ret
lods
shlb
adc
jmp
jl
repnz
pushf
fldenv
bound
data16
ret
arpl
les
pop
cmpl
mov
cmp
and
adc
add
xor
test
or
cmp
mov
jecxz
insl
pop
rclb
mov
and
inc
pop
cmpsb
ss
xchg
adc
jne
dec
sti
push
jl
lret
inc
xor
inc
mov
rcr
cli
inc
insl
ffree
cmc
mov
es
jg
shrl
xchg
push
decb
push
mulb
loop
add
imul
xchg
in
das
mov
dec
test
mov
dec
or
daa
mov
popa
daa
cmp
mov
mov
xchg
mov
inc
je
shrl
push
cld
mov
aad
in
jnp
lock
adc
test
into
rcr
out
lock
mov
mov
lret
adc
outsl
adcb
bound
and
movsb
push
sti
test
adc
divb
test
xchg
sub
sti
fxch
mov
push
pushf
xchg
stc
aaa
inc
push
sti
movsl
arpl
and
sahf
adc
or
lds
add
in
icebp
fstpt
repnz
mov
loop
xlat
ljmp
dec
fstps
nop
insb
int3
adc
fcoms
ljmp
faddl
int3
mov
rorb
out
int
lret
in
cltd
jnp
cmp
jle
bound
aam
push
mov
rol
fnstsw
repnz
jbe
enter
icebp
lods
enter
mov
jmp
stc
stos
or
and
fidivrs
inc
pop
aas
jbe
push
mov
je
jl
inc
xchg
lock
sub
inc
outsb
dec
lret
mov
loope
fnstenv
jbe
mov
ds
in
push
lcall
test
leave
scas
cli
ficompl
or
mov
adc
andb
jmp
mov
testb
je
loopne
mov
daa
mov
out
mov
mov
mov
lcall
sbb
jae
push
push
pop
jb
rorb
and
cmpsb
push
loopne
lods
cmp
in
mov
addr16
pop
or
sub
xchg
push
jno
jne
lret
push
sub
adc
xchg
jge
push
or
xchg
sbb
dec
sub
jmp
rcl
mov
or
cli
je
and
call
movsb
mov
ss
in
mov
dec
inc
rorl
cwtl
cmp
pop
aas
clc
cmp
xor
xchg
sbb
shrb
mov
pop
push
cltd
dec
mov
fists
push
mov
push
loop
lret
mov
icebp
xchg
enter
lea
xchg
icebp
cwtl
jnp
test
push
out
cld
mov
sbb
lock
jbe
jns
mov
ret
push
pop
fdivl
movsb
dec
sti
popa
push
pop
je
test
xchg
cli
push
fs
clc
test
or
adc
adc
repnz
outsl
subl
push
std
out
in
xchg
add
mov
out
xor
sarl
clc
je
mov
repz
sub
mov
jmp
mov
scas
inc
add
dec
scas
loope
jns
xchg
mov
cli
and
lret
jns
jne
mov
jl
xchg
mov
xor
clc
stos
and
popa
or
adc
mov
pusha
sti
aaa
sub
or
jbe
inc
and
pop
mov
addr16
xlat
sbb
cmpsl
mov
mov
sub
fisttps
mov
movl
pop
test
test
jbe
lods
sbb
aas
cli
ja
mov
loopne
addl
cmp
js
add
fisubl
mov
push
test
xor
into
sbb
fdivrl
pop
cmpsl
bound
and
jmp
std
pop
mov
mov
jg
pop
outsl
outsl
jp
mov
mov
mov
or
stos
sub
repz
insl
shll
shlb
or
imul
loopne
jp
fstpl
iret
sbb
mov
outsl
cli
or
fstps
repz
pop
das
cmp
lea
dec
les
and
fistpll
stos
add
push
mov
movsb
sbb
add
pushf
mov
sbb
sti
xchg
icebp
cmp
sbb
into
lods
fsubrs
mov
scas
mov
jmp
or
cmc
lcall
inc
inc
cmpsb
or
xchg
imul
push
xchg
push
outsl
aad
mov
xchg
icebp
pop
movsb
mov
dec
xorb
mov
rcll
cmp
lds
lea
mov
out
mov
insb
sub
pop
adc
ficoms
mov
sbb
rcr
and
mov
jb
sub
inc
pop
adc
test
jp
add
pop
cmc
sahf
pop
int
pop
clc
pop
jg
cmp
insl
stos
pop
add
add
sub
jmp
xchg
pop
daa
dec
and
mov
loopne
mov
sbb
shlb
ja
movsl
gs
sbb
xor
mov
mov
je
inc
or
mov
in
lea
xor
xchg
pop
or
fcomp
xchg
xor
push
lahf
hlt
dec
pop
lcall
mov
fisttpl
jecxz
sbb
dec
inc
movsl
pop
sbb
mov
mov
mov
gs
or
sub
add
cmpsb
inc
sub
stc
aam
inc
inc
nop
sarb
out
sahf
mov
lods
push
pushf
jns
xchg
das
and
mov
in
push
and
dec
test
xor
hlt
fisttpl
adc
mov
adc
mov
push
push
add
mov
push
dec
lret
mov
push
mov
lea
sbb
inc
inc
xor
test
cs
fistpl
andb
push
cmp
dec
xor
stc
add
outsb
pop
incl
adc
pop
scas
orb
addr16
movsb
dec
stos
xor
test
popa
jno
not
fistpll
cmpsb
or
add
outsb
sbb
add
cmp
test
loope
ret
arpl
adc
cmpl
popa
adc
faddl
lret
or
cmp
dec
push
rorl
cs
insl
out
call
dec
dec
xchg
mov
nop
or
xor
pop
pop
inc
jbe
ret
mov
jno
ljmp
jmp
jg
out
mov
adc
ljmp
mov
cmp
sbb
paddw
dec
call
xor
dec
rolb
push
cmpsl
popl
dec
mov
leave
xchg
add
or
shrb
cmp
mov
mov
xchg
leave
jle
pop
mov
andb
inc
inc
pop
test
sub
xchg
mov
add
frstor
out
shrl
lcall
inc
fistl
pushf
pushf
sub
and
sbb
addr16
cltd
jns
xlat
sarl
nop
and
imul
mov
push
enter
mov
push
mov
mov
jl
out
adcb
cltd
jle
out
test
test
lods
scas
dec
pop
inc
jns
xchg
loope
mov
icebp
inc
adc
mov
mov
out
push
fwait
cld
in
dec
ret
loope
js
xchg
mov
jp
and
jmp
sub
repz
lods
imul
loop
mov
xor
jle
dec
xor
mov
cmpsl
andb
xchg
sub
pop
testb
push
stc
lret
sub
imul
cmc
in
xor
ss
push
movsl
pop
mov
inc
push
push
out
sbb
call
jecxz
sbb
jno
inc
push
xchg
daa
mov
cld
pop
push
je
aas
dec
push
imul
adc
in
addr16
xchg
sbb
in
mov
push
mov
leave
lret
aas
call
sar
movsl
in
shlb
inc
sbb
adcb
sbb
pop
xchg
cmpsb
or
xor
aad
cmp
hlt
cli
fstps
loope
mov
loopne
mov
inc
sarl
sub
xchg
cmp
mov
psrld
and
out
negb
fisubl
lcall
in
ret
ficomps
xor
outsb
out
unpcklps
push
mov
xor
sub
mov
pushf
push
scas
movsl
inc
push
shll
arpl
test
jge
in
and
insb
push
jge
cli
movsb
inc
loopne
leave
xchg
inc
subl
ret
xor
iret
dec
or
lods
mov
mov
cltd
or
add
cmpsl
lcall
ja
mov
add
and
mov
mov
in
adcl
mov
fstps
insl
cmc
xchg
sub
adc
sbb
dec
inc
sbb
pop
xor
test
lcall
add
call
and
std
icebp
clc
xor
push
in
icebp
or
imull
fwait
lret
jno
test
out
lea
loopne
sub
mov
pop
xchg
sub
and
fs
adc
outsl
popf
repnz
out
fists
xchg
pop
sbb
mov
stos
cmp
mov
dec
cmp
pop
xchg
xor
mov
je
jl
mov
mov
adc
shlb
inc
aaa
xor
addr16
ret
cmp
mov
enter
dec
sbb
lret
cmp
sub
pop
push
mov
sbb
xchg
arpl
movsb
mov
sbb
js
or
sbb
packssdw
icebp
cmp
or
push
cld
pop
out
loope
sbb
repnz
repz
pusha
inc
adc
mov
stos
das
ror
test
xchg
jecxz
xlat
popa
and
push
pop
cli
not
cmp
xlat
mov
mov
pop
add
lret
iret
dec
add
xchg
mov
andl
push
ret
cli
inc
pop
out
inc
lret
cli
dec
or
cmp
sahf
fsubrs
dec
or
mov
mov
cmp
sbb
jnp
inc
pop
scas
sub
push
jl
stos
dec
out
pop
push
pop
div
adc
aad
lods
dec
ret
push
dec
mov
xchg
sbb
repnz
pop
dec
movsl
in
xchg
fcmovu
cmp
xor
and
jle
xchg
and
dec
push
decl
adc
xor
fs
fmuls
lret
pop
xchg
push
add
xor
inc
scas
rcll
sub
push
cmp
out
cs
dec
pop
lds
xor
add
pop
lods
push
xchg
jae
rclb
or
xor
pop
aam
lret
mov
xor
data16
fisttpll
loopne
stos
pop
fucom
mov
movsl
cmp
push
insl
loopne
dec
dec
sbb
mov
xor
jns
add
cmpsb
cld
icebp
pop
adc
sbbl
xor
iret
push
lods
and
dec
rcrb
int
orb
inc
jnp
lret
ret
in
aaa
test
lea
flds
mov
lahf
lods
push
push
or
sbb
xchg
cmpsb
xor
sub
div
xchg
xchg
mov
cmc
xchg
loope
or
loopne
idivb
push
pushf
xor
out
fisubs
out
fldcw
dec
pop
dec
arpl
loopne
mov
sub
sbb
lret
add
aaa
pop
cmp
pushf
mov
out
pushf
jb
lods
xorl
xor
inc
xor
or
adc
rorb
pop
and
push
insb
imul
outsl
repz
add
sbb
jmp
mov
std
stc
sub
int
mov
cmp
subl
sub
mov
pop
push
fistps
pop
push
sbb
dec
sbb
sub
mov
pushf
repnz
test
and
aam
hlt
pop
out
fs
mov
inc
popa
mov
cmc
stos
pop
mov
jmp
dec
dec
dec
cmc
and
icebp
nop
mov
nop
mov
jl
lret
xchg
ret
shlb
xor
sub
mov
in
xchg
lret
fidivrs
lods
inc
cmc
or
out
int3
ret
pop
xchg
repz
mov
cli
dec
ds
mov
mov
cmp
sar
sbb
gs
movsb
int
and
push
aas
xchg
pusha
ja
and
dec
jb
and
pop
repz
xchg
sub
lret
es
mov
out
fiaddl
add
inc
stc
xchg
xchg
out
rcrl
push
stc
dec
insl
lods
in
popa
xchg
or
mov
pop
mov
lea
out
sbb
and
outsl
leave
in
popf
lahf
mov
jl
stc
and
in
xor
call
and
dec
aas
pop
mov
fwait
aaa
pop
mov
or
sbb
xchg
fcmove
inc
jle
push
lods
stos
mov
jmp
test
jo
xchg
pop
insb
in
jp
int
adc
jae
push
or
cmp
adc
imul
movsl
dec
push
jecxz
jno
pop
out
inc
pop
xchg
mov
frstor
out
pop
adcb
lret
mov
cs
cmp
sub
or
aaa
cli
xor
sahf
sub
xchg
xchg
jns
int
push
mov
cmp
mov
adc
test
jb
xor
sub
mov
sub
xor
popf
sub
test
mov
push
ss
out
rcr
mov
ret
xchg
in
decb
cli
lcall
cmc
xor
popl
popa
jns
cmpsl
call
mov
in
mov
testb
mov
out
inc
icebp
movsl
add
pop
pop
or
out
test
mov
fiaddl
cmove
loopne
notb
and
push
les
dec
icebp
sbb
mov
repnz
rol
xor
int
adc
insb
push
mov
mov
dec
inc
stc
adc
sarb
sub
js
push
rolb
idivl
pop
push
mov
xor
or
popf
dec
cmpsl
add
push
sti
pop
aas
js
fiadds
mov
jno
sub
mov
mov
push
les
xor
dec
out
cmp
add
imul
daa
pop
jl
pop
dec
sub
ja
xor
pop
rcll
sahf
test
jno
dec
stc
adc
pop
cmp
and
ror
mov
hlt
pop
rorl
push
inc
adc
adcl
rolb
in
adcl
imul
sahf
aaa
inc
and
repz
sbb
xor
and
leave
pop
lahf
mov
inc
xor
mov
push
jg
iret
mov
pop
jo
xchg
iret
xor
fdivrl
xchg
les
mov
jp
adc
xchg
dec
pop
push
cli
pop
bound
xchg
in
and
into
mov
adc
fdivp
cmc
pop
pushw
ret
cmpsb
jne
ret
mov
test
or
in
cld
mov
pop
xor
js
mov
js
and
cmc
sub
aad
push
cs
and
mov
xor
hlt
mull
daa
aaa
cli
stos
ret
push
ds
test
movsb
push
mov
in
xor
adc
repnz
xchg
dec
jecxz
test
arpl
pop
pop
test
push
sub
ror
mov
mov
cs
push
and
gs
mov
cmp
xchg
sub
stos
stos
lods
mov
push
push
out
outsl
sub
shlb
arpl
out
lret
repz
std
and
cmp
clc
insl
cltd
fbld
sub
lcall
add
stos
clc
jne
cli
xor
repz
fisubrs
inc
in
aam
push
ret
insl
test
mov
jge
int
in
bound
addb
sub
jmp
sbb
sub
mov
call
mov
aam
lods
and
push
je
dec
ret
inc
stos
dec
lock
imul
jno
adc
cmp
xor
jo
fimull
cli
or
mov
adc
sbb
cmp
push
es
pop
movsb
xchg
loop
stos
push
add
pushf
pop
inc
bound
inc
jne
dec
jne
dec
lea
insl
and
jge
dec
notl
mov
popf
push
mov
or
xchg
pop
mov
cmpsl
inc
mov
aad
push
mov
lock
jge
mov
loop
lret
inc
inc
xchg
mov
or
xor
seta
mov
stc
fcompl
lds
gs
mov
sub
mov
mov
call
pop
xor
pop
pop
outsl
add
sub
pushf
in
jae
shl
mov
or
ljmp
cmp
push
sub
pop
int
aaa
sbb
insl
popa
shll
inc
lock
rcll
sbb
mov
cmc
aaa
stc
nop
iret
jb
cs
shr
int
adc
aas
push
xor
jnp
fldl
or
jmp
cmp
cmp
mov
mov
cmp
push
dec
mov
cmp
arpl
xor
mov
leave
add
xor
mov
inc
or
jb
gs
es
mov
inc
push
daa
cmpsb
outsb
push
pop
ljmp
mov
xchg
test
dec
into
addr16
mov
mov
dec
jae
xchg
enter
pop
jnp
test
orb
mov
mov
repnz
xchg
js
out
leave
dec
pop
je
jp
jae
in
xor
jecxz
jne
push
out
inc
jp
inc
fdivrl
jno
cmp
push
pop
or
pop
cmp
icebp
sub
xchg
cmp
push
sbb
mov
stc
jp
mov
pop
push
adc
dec
inc
dec
sti
les
pop
dec
jl
inc
sub
mov
and
cmp
cmpsl
inc
inc
mov
insl
xor
pop
test
mov
jb
fstpt
aam
add
andl
cmp
inc
jbe
jg
sub
xor
and
lods
sub
and
sub
stos
movsb
sbb
outsl
mov
enter
out
aas
mov
push
sbbl
pop
push
test
add
inc
jb
xor
mov
mov
adc
mov
and
icebp
mov
lods
adc
lock
dec
pop
mov
dec
in
outsb
je
sbb
jecxz
mov
inc
jb
in
in
or
cmp
xor
icebp
sbb
mov
sbb
inc
push
shll
andb
or
push
inc
lock
jo
push
adc
inc
add
movsl
or
scas
cmp
addb
rol
sarb
mov
icebp
cltd
push
and
fwait
push
pop
pop
test
cltd
xchg
add
loop
das
js
in
outsl
inc
rol
in
xor
pushf
push
outsb
repz
fsub
aaa
imul
fs
lret
mov
insb
call
fstp
push
adc
leave
adc
mov
out
and
ljmp
push
movsl
mov
repnz
repz
mov
andb
imul
gs
sub
add
jmp
or
int3
mov
adc
sbb
sbb
jecxz,pn
movsb
mov
hlt
outsl
pusha
xor
fwait
and
push
push
dec
sbb
stos
or
loope
lods
mov
pushf
into
icebp
push
fldcw
mov
sub
lea
sub
xchg
insl
and
loop
dec
push
sbb
pushf
add
mov
stc
movsl
rcll
cli
mov
mov
pop
sbbl
adc
cwtl
add
ficompl
jae
movsb
pop
dec
outsb
popf
fistpll
xor
addl
hlt
mov
fbstp
test
inc
lahf
lock
lahf
pop
sub
scas
cmp
test
cli
mov
jno
bound
aam
jmp
stos
cmpsb
adc
or
fstp
movsb
js
fsts
lahf
mov
xlat
pushf
sub
jg
xchg
pop
and
mov
sarb
fsubs
lret
mov
push
mov
jbe
lret
jae
xchg
scas
shlb
inc
mov
fisubl
push
lret
push
imul
test
or
dec
push
int
xchg
in
mov
sub
bound
dec
pop
fidivrs
inc
cmp
aad
xchg
lds
push
dec
cld
pushf
aas
sub
sbb
lret
sub
sbb
adc
lret
jne
cwtd
inc
leave
cmpsl
int
fdivrp
mov
or
xchg
cwtl
ja
jae
pushf
repnz
mov
sbb
mov
aam
push
loope
add
mov
jle
mov
jns
hlt
jmp
scas
adc
pusha
adc
sbbl
mov
shlb
mov
and
shrb
xor
lret
lods
enter
push
lock
popf
and
ljmp
loop
adc
repnz
mov
aas
ds
out
add
jae
sbb
dec
loope
add
xchg
pop
xlat
xchg
out
sahf
aas
movsl
cmpsl
lds
aas
xlat
xchg
pop
fsub
sbb
add
pop
mov
fbstp
xchg
xlat
xchg
nop
fmull
pop
pop
cld
out
fmuls
pusha
mov
pushl
add
cmpsb
cmpsb
lret
pushf
mov
outsl
aam
inc
xor
ret
mov
adc
int
push
push
xchg
xchg
stos
pop
imul
jmp
mov
pop
sbb
adc
test
push
or
cmp
sbb
leave
dec
xorb
xor
inc
test
cmpsl
and
jo
ret
pop
sbb
push
stos
mov
inc
scas
or
repnz
icebp
dec
mov
pushf
dec
inc
icebp
and
xchg
test
push
mov
mov
imul
fsubr
adc
aaa
ja,pn
or
sbb
dec
cmp
std
sbbl
pop
movsb
push
movsl
dec
ljmp
xchg
adc
xor
fimuls
inc
mov
inc
iret
or
iret
adc
mov
cmp
mov
sbb
out
jecxz
setnp
fdivr
inc
inc
push
pop
jo
sub
xchg
div
mov
mov
adc
out
insl
into
rcl
es
mov
bound
pop
ja
inc
jle
cmpsl
test
ss
cmp
lods
jo
cmc
sub
mov
ror
xor
pop
mov
push
lods
mov
adc
xor
sbb
xchg
or
xchg
std
cmpsb
or
leave
inc
imul
rorl
mov
xlat
cmc
dec
cmp
test
js
lods
xchg
sub
mov
pop
frstor
and
cmp
mov
sub
add
jmp
cmpsl
lods
xchg
cli
cmpsb
int3
sahf
mov
xchg
inc
push
push
pop
aad
std
sti
outsb
mov
aad
test
icebp
repnz
es
cmc
in
cltd
mov
jae
cmpsl
imul
test
sub
lret
inc
lret
pop
lods
in
mov
mov
out
cmp
mov
add
or
repnz
mov
cmp
movsb
mov
push
adcb
insl
dec
inc
jp
mov
cmp
cmc
push
popf
push
popf
clc
outsb
inc
clc
mov
ret
sar
jb
sub
jge
ja
push
xchg
repnz
mov
decl
inc
mov
pop
mov
jge
mov
scas
popf
sti
cmp
add
jle
call
mov
imul
dec
sbb
push
nop
xlat
dec
or
pop
pop
inc
arpl
dec
aad
sub
pop
push
ficomps
sub
flds
sub
dec
mov
mov
cmp
inc
or
or
xchg
lods
push
pop
xor
lea
shlb
add
sti
cli
out
xor
repz
mov
loop
fnstcw
adc
lods
lods
insl
jnp
jge
inc
mov
xor
sbb
or
movsb
push
pusha
mov
cmpsl
sbb
stc
dec
stc
pop
movsb
scas
or
xchg
sbb
lods
or
clc
mov
les
icebp
call
add
into
xlat
cli
add
mov
push
fbld
mov
mov
jb
lods
in
dec
fistl
push
cmc
bound
aam
iret
mov
push
daa
jmp
push
jmp
movsb
in
and
fldt
cmpsb
enter
inc
xchg
nop
cmp
xlat
pop
popf
mov
inc
js
dec
jp
lgs
divb
ds
pushf
inc
pop
mov
in
push
rclb
add
adc
cs
out
lret
cmpsl
and
cld
adc
jne
les
filds
lock
fwait
stos
jl
pushf
imul
xlat
lea
dec
dec
jmp
sbb
add
in
ds
pop
xor
and
and
adc
or
insl
add
pop
sub
pop
mov
pop
stos
jp
mov
dec
shl
xor
movsl
in
adc
xorl
leave
imul
inc
cwtl
and
pop
sahf
andps
test
mov
lods
cmp
faddp
movsb
push
hlt
push
lret
shl
cltd
lods
insb
scas
add
xorl
dec
dec
insl
mov
lea
and
or
dec
or
pop
dec
aad
mov
fsubr
stos
idiv
ljmp
adc
cmovp
ret
jmp
sahf
fildll
lods
jb
imul
lods
xor
jno
lods
es
push
addb
into
mov
in
lea
enter
xor
inc
pushf
jecxz
pop
adc
ret
mov
pushf
ret
mov
sub
imul
stos
daa
popf
imul
and
pop
adc
bound
or
lds
enter
pop
in
insl
aad
jo
mov
mov
jne
ja
push
les
mov
push
gs
fld
jo
aas
out
pop
stc
in
cmp
sbb
mull
lds
adc
cmpsl
cmp
mov
or
ja
loopne
nop
pop
shlb
inc
xlat
jne
hlt
in
mov
dec
sub
cltd
addl
push
out
test
pop
dec
repnz
test
push
pushf
mov
xchg
lods
lret
cwtl
xchg
sub
inc
decl
in
sub
sahf
push
and
xchg
das
lods
and
mov
aas
cmpsl
outsl
xchg
mov
sub
push
incb
decb
ja
movl
test
and
pop
jl
xchg
stos
enter
mov
cmp
mov
dec
or
stc
sbb
int
cmp
cmp
mov
sahf
cwtl
dec
clc
mov
dec
xchg
fisttps
bound
sbb
adc
sub
aaa
inc
cmp
mov
testb
test
xlat
int
mov
sahf
add
jbe
outsl
adc
push
add
fiadds
jmp
lcall
sarl
adc
sahf
push
push
sbb
add
test
scas
pop
scas
mov
dec
leave
fdivrl
cwtl
mov
mov
xchg
push
add
divb
movl
adc
sub
jo
lcall
jae
test
cltd
repnz
inc
dec
jnp
inc
or
jb
mov
rcll
mov
cld
mov
call
add
xchg
add
repz
jns
outsl
and
lahf
mulb
mov
mov
pusha
push
inc
cltd
fdivp
add
loope
sbbl
cmp
stos
aad
out
insb
decl
test
inc
jno
push
pop
sbb
cmp
pusha
int3
sti
mov
cmp
nop
sti
lods
lods
push
inc
push
sub
dec
adc
mov
add
mov
sbb
call
xchg
mov
push
fbstp
shl
loop
ljmp
cmp
xlat
jb
fimull
mov
mov
lods
add
cwtl
shll
cmp
stc
jmp
ss
imul
push
test
xor
mov
sahf
add
jbe
popa
ds
out
data16
data16
xchg
aas
in
push
mov
shrb
cwtl
notl
push
ficoms
adc
lea
das
pop
lahf
mov
add
adcl
bound
pusha
xor
sti
aas
inc
adc
dec
jo
call
mov
fsts
pop
push
sbb
adcb
aaa
push
lret
cltd
cmpsl
mov
fwait
pop
dec
arpl
inc
orb
adc
inc
xlat
adc
push
out
lcall
pop
lret
in
insl
jge
add
lret
and
decb
pop
adc
addb
hlt
daa
imul
mov
je
or
out
push
lods
pop
in
jp
imul
jo
sub
and
out
pusha
adc
add
loop
imul
shll
ret
aas
test
or
cmp
dec
insl
imul
sbb
xchg
int3
cmp
hlt
mov
mov
cmp
aaa
cmp
lcall
test
fs
xlat
jae
outsb
mov
xor
mov
dec
shlb
test
xor
fistps
push
scas
add
xchg
out
ret
arpl
lods
push
sbb
gs
std
jecxz
jo
lods
mov
sbb
or
and
loop
out
test
arpl
popf
jmp
fnstsw
mov
mov
lock
add
loop
jg
hlt
bound
sub
in
and
jg
pushf
test
and
scas
cmp
dec
dec
cmc
xchg
add
nop
push
xchg
sti
cmp
lret
insl
aaa
sbb
lods
xchg
xor
dec
les
cmpsb
lea
lods
sahf
roll
dec
add
push
push
pusha
cmp
adc
orl
sbb
gs
mov
push
sbb
mov
push
aam
leave
rdtsc
adc
inc
stos
repnz
movsl
pusha
push
add
push
ds
dec
les
inc
out
push
ljmp
jno
inc
cmpsb
out
mov
sarb
cmp
xchg
jb
cli
dec
aas
lock
hlt
scas
hlt
hlt
sarl
sbb
sbb
loopne
mov
pop
cwtl
jg
sbb
or
adc
in
jbe
sti
fmull
rol
mov
push
sbb
lock
in
es
inc
in
jle
mov
ret
mov
aaa
mov
mov
push
adc
sub
xorb
mov
mov
test
fildll
btr
sub
sbb
add
and
std
inc
mov
ja
popa
decl
sbb
arpl
push
loopne
int3
je
inc
and
mov
add
jnp
clc
mov
mov
out
loopne
aas
adc
xchg
pop
inc
dec
sti
inc
loop
icebp
out
mov
mov
cmpsl
insl
xchg
movsl
adc
push
mov
xor
push
pushf
push
xchg
add
sbb
sbb
imul
inc
cwtl
dec
test
add
inc
call
iret
pop
inc
ljmp
dec
mov
iret
inc
add
dec
inc
sub
in
movsb
gs
pop
push
xchg
shlb
in
pop
nop
loop
pop
test
add
add
mov
loope
sub
fidivrs
sub
loopne
sub
imulb
out
in
sahf
repz
cmc
loopne
cmp
xchg
punpckhbw
cltd
pop
pop
aas
inc
dec
ljmp
xchg
sub
mov
push
insl
fldt
fcomi
and
shlb
lods
inc
xchg
test
mov
inc
adc
stos
cld
outsl
push
or
dec
je
inc
inc
movsl
test
sbb
stos
mov
jge
cmp
into
test
sbb
je
out
repz
jne
mov
and
cmp
dec
fmuls
into
xor
in
in
adc
pop
cmp
daa
scas
ret
xor
dec
movsl
icebp
jns
sub
xchg
pop
cmpsl
dec
pop
loop
push
pusha
movsl
lods
aad
mov
cmc
push
add
pop
sub
arpl
and
fbld
out
mov
cli
popa
inc
push
out
loopne
sbb
jo
lods
adc
cmpsb
mov
sbb
loope
jo
pop
arpl
aaa
out
and
lret
dec
lahf
test
dec
bound
ret
jg
push
ret
add
push
pop
mov
add
sbb
cmpsl
xchg
jae
ficompl
cltd
lods
xor
mov
push
cwtl
mov
out
cmp
push
mov
push
and
sti
out
stos
sub
mov
xorb
add
dec
or
xchg
adc
add
adc
jl
inc
jnp
inc
ss
xor
test
test
inc
insl
int3
mov
icebp
dec
jp
insl
stc
xlat
rol
popf
mov
dec
lods
or
jmp
push
fs
sbb
and
les
stos
jp
adc
mov
scas
mov
movsb
dec
test
cmc
loope
mov
jo
out
mov
jo
insb
test
inc
xor
jmp
pop
cwtl
scas
sbb
dec
pop
test
push
and
mov
mov
lds
pop
xor
fsts
out
mov
dec
cmc
cmp
in
outsl
je
cmpb
xor
sbb
notl
andl
xor
gs
pop
leave
xchg
leave
cmp
bound
mov
mov
inc
pushf
ss
test
push
add
jbe
add
xor
movsb
cld
push
loope
push
shrb
fs
stos
add
cltd
fs
stos
jl
fldt
xchg
push
xor
rol
inc
add
pop
xorl
dec
sub
jo
fwait
je
insl
daa
ja
hlt
mov
cwtl
pop
popf
repnz
pusha
pop
mov
fisubl
mov
cmp
mov
and
adc
sahf
pop
stos
lods
test
mov
xchg
pop
inc
jne
movsb
je
out
cmp
add
aas
scas
or
mov
mov
in
inc
jg
mov
adc
mov
xor
aam
cli
fsubrl
lea
or
inc
xchg
sahf
daa
mov
jns
cmp
mov
mov
into
adc
adc
out
push
jmp
mov
sarl
pop
pop
cmpsl
pop
cli
mov
movsb
jns
test
iret
pop
mov
out
int
mov
mov
push
insb
fildll
outsl
shl
in
sbb
mov
fwait
inc
ds
push
insb
xchg
cmp
jle
mov
je
add
push
shrl
ret
mov
sub
inc
xchg
sbb
repnz
imul
add
add
mov
push
inc
push
sub
nop
jmp
leave
pop
in
jne
lcall
mov
push
jle
movsl
out
xchg
mov
push
mov
icebp
aam
ret
jle
xor
ret
and
out
cmp
cmpsl
mov
dec
mov
inc
pop
ret
int3
mov
sahf
and
dec
push
push
cmp
xchg
xor
sahf
pop
pop
xchg
adc
add
leave
fwait
inc
cmp
mov
loope
into
fisubrl
test
mov
out
xchg
or
push
mov
mov
mov
jo
push
negl
and
dec
adc
mov
je
xchg
xchg
inc
push
xor
out
sbb
push
js
cmpsb
in
addr16
push
out
pushl
mov
stos
rclb
and
mov
ss
cmc
insl
jl
scas
push
sbb
fiadds
jne
sub
scas
ss
mov
fldz
sub
push
movl
dec
call
xor
cmp
push
pop
cmp
hlt
pop
arpl
cmp
xlat
daa
push
in
xor
cwtl
das
stos
mov
fldt
mov
pop
xchg
loope
dec
inc
fisubrs
mov
stos
xchg
test
pop
jge
inc
movsb
outsl
pop
sub
ficoms
addl
jae
mov
cmpsb
scas
dec
mov
inc
cmp
xchg
daa
xchg
push
fisttpl
xchg
jns
jnp
dec
int
scas
shll
outsb
std
push
imul
in
pop
enter
add
ds
inc
xchg
sbbb
sbb
outsb
pop
mov
imul
sub
jo
adc
push
xchg
mov
cmp
mov
push
aaa
pop
repz
adc
adc
xchg
clc
aas
or
inc
cltd
movsl
add
sbb
je
cmpsb
xchg
or
clc
pop
in
xchg
dec
mov
jne
loope
push
adc
popf
mov
xchg
mov
sbb
lret
mov
popf
negb
repz
fwait
negl
dec
inc
jno
sbb
fld
fcmove
xchg
and
cli
adc
pushf
out
jno
ret
fwait
mov
pop
mov
dec
dec
xor
mov
mov
push
pop
xlat
adc
test
jnp
xor
mov
pushf
push
pop
popa
inc
mov
lds
es
or
mov
dec
mov
mov
aad
jno
pop
push
or
sub
mov
out
sbb
popf
ret
inc
movsl
or
dec
lret
pop
push
jecxz
ss
aad
sub
xchg
mov
nop
mov
mov
and
fs
pop
jno
xchg
lret
out
mov
in
push
pop
nop
or
jle
jb
push
adc
in
aas
mull
iret
jg
sbbl
mov
fs
cmp
adc
xchg
popa
mov
jge
sub
or
outsb
adc
mov
fiadds
das
cmp
or
jp
sti
in
mov
sub
pushf
ljmp
or
jmp
push
inc
or
inc
negl
jo
push
jge
repnz
jae
sbb
cmp
sbb
jne
pop
jg
test
push
jg
push
por
cmp
add
mov
cmp
scas
shlb
pop
outsb
cmp
cmp
fimuls
insb
mov
mov
pop
movb
add
fcmovu
xchg
movsl
test
pop
int3
les
lret
invd
jmp
jmp
mov
int3
clc
movb
ret
outsb
movsl
add
jle
cmpsl
outsl
popf
repnz
push
icebp
nop
sbb
mov
cli
xchg
je
loope
movsl
es
subb
cltd
fcmovb
and
lahf
mov
mov
lods
and
outsl
jnp
lret
dec
sub
mov
mov
lcall
push
imul
and
inc
into
sub
push
pop
fs
push
das
push
inc
in
push
and
xor
mov
xchg
mov
push
jle
into
pop
fbld
jo
pusha
inc
out
andb
or
mov
scas
push
inc
fbld
add
xchg
lds
enter
aaa
pop
mov
jnp
stc
arpl
dec
pusha
lcall
mov
mov
add
push
ljmp
ret
lock
xor
and
xchg
psubsb
aad
lcall
cmp
es
xchg
lahf
hlt
mov
push
or
pop
sbb
test
out
lods
shlb
addr16
jo
sub
mov
leave
jns
mov
ljmp
mov
pop
push
mov
ficoms
mov
adc
daa
xchg
shll
imul
and
add
or
es
pop
inc
push
dec
fnsave
test
and
mov
and
sbb
stc
mov
outsl
xchg
jp
movsl
xchg
cld
push
mov
mov
pop
enter
add
mov
pop
pop
imul
das
repnz
sahf
jg
nop
and
inc
icebp
mov
adc
mov
pop
jns
mov
sbbb
stos
out
adc
mov
mov
pop
push
sub
xchg
jp
lcall
aaa
add
js
stos
and
adc
xchg
push
jg
inc
dec
gs
arpl
lock
adc
scas
lret
cld
sti
mov
sub
test
fs
and
mov
ljmp
in
and
testl
sahf
pushf
push
aad
pop
cmp
sub
pop
cmpsl
push
pop
mov
cmpsb
cld
scas
xor
clc
xchg
popf
pop
fdivr
push
pop
sbb
enter
jl
fs
fsubl
cmp
bswap
fildll
pushf
pop
mov
xchg
ja
push
repz
push
add
loop
push
movsl
cmp
loop
lret
sti
clc
cmp
cmp
aam
shl
ret
aam
in
ljmp
adc
jo
movb
imul
push
ja
cmc
lods
cltd
and
pop
push
or
arpl
xchg
cmp
sbb
pop
outsb
mov
roll
bound
mulb
dec
insb
jnp
lahf
add
rolb
jl
xor
jp
mov
cli
dec
mov
push
xor
ja
dec
jbe
push
stos
scas
outsb
scas
pushf
jg
add
aad
push
cld
mov
dec
in
xor
jmp
inc
arpl
dec
jnp
lret
sbbl
mov
data16
fmull
ror
lods
sar
pop
in
xchg
adc
aas
scas
ret
sub
and
jp
mov
sbbl
aam
js
mov
addr16
mov
add
cli
add
shrw
aam
pop
or
fldl
lret
loop
or
mov
aas
lock
lret
dec
xor
mov
call
jmp
js
sahf
inc
adc
sub
je
pop
and
jl
cmp
scas
ret
cmp
pop
outsb
jne
test
mov
sbb
push
not
out
mov
fisttpll
xor
lret
ror
fnstsw
mov
jg
insl
cmp
inc
mov
mov
scas
js
xchg
nop
xchg
out
sbb
sub
sbb
pop
popf
sub
mov
nop
and
xchg
lock
add
flds
mov
jne
mov
or
aad
pop
sub
push
movsl
lahf
jbe
xchg
pop
mov
jp
enter
or
test
mov
shlb
adc
lock
inc
inc
or
cmpsb
push
je
cs
mov
push
cs
xchg
dec
sbb
push
cltd
test
mov
xchg
push
lahf
mov
xor
arpl
fidivrl
lds
pop
inc
push
sbb
adc
inc
mov
jg
mov
jge
sbb
out
push
dec
and
pop
les
mov
xchg
pop
movsb
adc
xchg
or
push
or
insl
ljmp
divps
loope
pop
addr16
ljmp
xchg
ds
test
cmp
xchg
addr16
imul
add
xchg
mov
cli
stc
xor
fwait
test
adc
xor
or
push
lahf
mov
or
jo
xchg
mov
cmp
sub
outsl
adc
lret
inc
mov
loop
leave
popa
cmp
push
add
jne
mov
add
mov
ss
hlt
xor
sub
sbb
mov
xlat
inc
xor
jo
rclb
sub
sahf
iret
mov
push
fidivrl
cwtl
movsb
pop
cmpsb
loope
sub
cmp
into
sbb
repz
sub
sub
int3
mov
and
imull
movsb
xor
and
scas
imul
scas
mov
mov
sub
and
sbb
cmp
gs
sbb
add
inc
pop
dec
in
fildl
xor
sub
fstpt
leave
cmc
pop
sbb
push
adc
fcmovb
enter
or
bound
shrb
js
sbb
roll
mov
gs
xor
push
xchg
pop
daa
inc
mov
mov
lods
inc
insb
sub
rcl
sbb
idiv
push
push
ret
sahf
pop
lods
es
lret
movsl
jne
push
clc
mov
fisubrl
sub
inc
ss
int3
push
mov
popa
or
inc
fdivs
jbe
dec
jns
and
mov
repz
add
mov
rorl
lds
xor
adc
push
push
xchg
sub
dec
cwtl
into
repz
and
fs
pop
sbb
sbb
or
cs
xor
and
movsl
sbb
int
xchg
push
pop
or
mov
mov
fwait
lock
or
dec
iret
ljmp
pushf
or
mov
and
ja
in
xor
shrl
nop
cmc
sub
loopne
jne
std
andl
push
adc
cmpsl
pop
pop
jg
lock
push
aaa
cli
push
push
dec
jbe
cltd
sbb
dec
incl
or
stc
hlt
pop
lcall
mov
aaa
inc
and
jp
dec
bound
in
xchg
add
sbbl
add
dec
hlt
out
xchg
rcrl
pop
arpl
aad
fucom
scas
add
and
daa
roll
mov
dec
out
inc
mov
mov
nop
add
loope
xor
aad
in
lcall
sub
sbb
push
int
ljmp
cmp
xchg
mov
mov
xchg
push
shl
dec
inc
inc
mov
push
mov
xor
or
popf
pop
imul
shll
out
jo
idivb
sti
cld
lret
mov
adc
cmp
push
sarl
test
out
fldpi
insb
sahf
jmp
int
and
test
dec
mov
push
jae
add
add
mov
jle
and
sub
jne
xchg
out
cmp
push
mov
mov
mov
sbb
ss
test
mov
jmp
out
sbbb
dec
pop
xchg
scas
stos
cmc
sar
push
scas
xor
sarl
xor
shlb
outsl
mov
into
push
adc
cld
mov
adc
adc
push
xchg
and
dec
scas
int3
sbb
outsb
lahf
fimuls
movsl
in
and
mov
add
pushf
jbe
dec
dec
push
sbb
orl
and
sbb
movsl
sbb
mov
arpl
cs
daa
xchg
dec
sbb
push
inc
mov
loope
lcall
loop
jg
pop
cltd
push
aam
fidivrl
stos
mov
jno
popa
out
xor
xor
jnp
bound
jl
push
shll
sbb
add
or
movsl
movsb
rcrl
stos
mov
in
lahf
test
lods
dec
or
loop
movsl
pop
xor
jo
out
push
mov
jmp
sti
cmp
aad
dec
inc
scas
lods
addl
ret
ss
jb
xchg
imul
sub
stos
adc
inc
push
jb
mov
fsubl
fiaddl
add
inc
xchg
xor
jno
into
fisttpll
or
mov
negl
insl
cmp
jl
ja
jbe
xchg
lods
sub
fcomps
jmp
sbb
sbb
cmpsb
mov
xorl
popa
gs
add
movups
dec
out
xor
add
pop
lds
jo
pop
mov
jp
lcall
insb
mov
in
pop
push
call
xor
loopne
sahf
ljmp
push
ljmp
test
lods
movb
sbb
mov
sbb
inc
xchg
jg
xchg
pop
pop
out
mov
popf
mov
jne
jl
xor
sbb
rcrl
fmul
or
xchg
inc
sub
mov
xlat
jl
lcall
mov
in
push
je
repz
jecxz
mov
fistpl
inc
popf
les
gs
push
cmp
insl
fbstp
push
movsb
aad
lods
rcl
fcmovu
dec
loope
pop
mov
out
mov
js
pop
ret
sbb
cli
jno
pop
sbb
enter
or
or
shll
xchg
pop
popa
shlb
testb
test
xchg
and
ja
stc
push
lahf
add
orb
ss
xor
inc
cmp
sysexit
leave
sbb
dec
cmp
dec
add
add
jp
out
lret
rcrb
cld
lret
lcall
testl
popf
mov
pushf
leave
xchg
jle
test
into
orb
imul
pushf
arpl
mov
fildll
add
sbb
xor
cwtl
repnz
out
bound
mov
and
addr16
lcall
pop
ret
jnp
test
ja
push
mov
std
dec
add
sub
or
cmp
and
data16
cli
push
xchg
mov
dec
sub
inc
xor
mov
xchg
add
mov
add
hlt
or
call
add
push
jmp
jns
xchg
and
cmp
xchg
fdivp
xor
fsub
jno
push
mov
mov
xchg
lahf
ja
frstor
mov
xor
stos
push
cltd
pop
out
std
aaa
shll
lret
pusha
in
into
xchg
in
push
pop
mov
dec
imul
and
mov
cwtl
mov
push
test
or
sbb
dec
out
ret
push
ljmp
insb
clc
push
or
fisttps
lods
cmp
jns
inc
pop
lods
pop
pop
lahf
inc
cmp
aaa
cmp
lahf
das
sub
mov
ss
rorl
mov
inc
inc
sbb
jb
clc
inc
popf
mov
sbb
out
mov
stc
ja
and
pop
loope
jecxz
rcr
cli
dec
mov
xchg
cmp
push
repz
jmp
xchg
sbb
out
mov
clc
mov
lock
into
int
mov
mov
in
cmp
fiaddl
cmp
adc
ret
std
push
imul
in
mov
lock
add
mov
out
rclb
or
cwtl
es
fnstcw
rcrb
orb
aad
add
pop
cmc
lods
mov
add
inc
add
add
inc
mov
jp
out
insl
jg
push
push
cmp
inc
sub
xor
xchg
mov
popa
sbb
pop
add
mov
pop
add
cmc
sbb
sbb
imul
and
rorb
leave
int
aam
mov
addr16
adc
push
stc
pop
es
jae
or
std
pop
in
js
scas
cmc
in
orl
aaa
pop
sbb
push
jle
popf
inc
imul
in
push
in
lods
out
icebp
lcall
outsl
sub
jle
dec
icebp
sbb
xchg
dec
loope
and
and
iret
loop
push
xchg
pop
jp
or
or
adc
mov
je
dec
or
movsb
dec
leave
test
lahf
scas
jecxz
inc
mov
sbb
popf
push
loope
or
addr16
aaa
gs
aaa
out
mov
mov
lea
pushf
or
and
cmp
out
ficomps
add
adc
mov
clc
je
or
mov
mov
push
lods
inc
aaa
aas
push
jnp
push
shlb
ficoms
mov
mov
lret
inc
xchg
ficomps
push
mov
xchg
mov
pop
lahf
xchg
mov
inc
adc
lods
push
push
mulb
push
pop
in
add
and
jbe
sti
dec
in
mov
scas
mov
fmull
imul
sti
push
scas
dec
stc
xchg
inc
pop
int3
pop
mov
aas
cltd
lods
aaa
xchg
cmp
and
xlat
jbe
shr
push
leave
pop
pop
decb
fisttpl
mov
scas
orl
pushf
and
cwtl
fsubrs
ret
xor
test
xor
xor
mov
es
iret
push
test
mov
and
mov
icebp
insl
or
adc
pop
cmp
and
mov
insb
pop
insl
pusha
add
fsubrs
movsb
xor
addr16
adcb
and
xchg
push
jp
mov
pop
mov
rcr
into
pop
imulb
dec
mov
mov
cli
test
sbb
push
sub
mov
movsb
sbb
repnz
pop
push
stc
rclb
in
push
push
lods
inc
in
jnp,pt
mov
outsb
stc
xchg
lock
mov
mov
out
fnstenv
pushf
addr16
icebp
mov
mov
cli
pop
lds
shrb
xor
fildll
add
stos
dec
inc
cmp
fimull
xor
popa
push
sub
outsl
cmp
mov
movsb
adc
or
call
mov
jg
imul
int
or
mov
fwait
pop
mov
invlpg
or
adc
repnz
cmp
fadds
adc
mov
xor
and
icebp
mov
pop
pop
pop
sub
shrb
stos
inc
iret
xor
movsb
cli
jl
shrl
les
inc
xchg
mov
gs
out
sbb
dec
es
sub
mov
pop
and
das
mov
fwait
outsb
or
or
out
fwait
mov
cmp
orb
je
mov
mov
push
ret
test
aad
aaa
pop
cmpsb
dec
ja
in
lret
mov
adc
push
mov
or
cmp
mov
dec
clc
movsb
pop
jle
mov
inc
inc
jg
mov
fdivp
fdivr
and
push
mov
mov
pop
push
in
cmpsb
mov
cmp
int3
fcmovu
push
incb
mov
sbb
mov
insl
adc
mov
xor
lcall
icebp
xor
adc
pop
mov
sbb
imul
jecxz
mov
jo
inc
loope
mov
mov
xchg
jl
mov
lods
mov
push
dec
or
mull
jbe
mov
pop
jbe
push
adc
fimuls
movb
xor
add
lahf
cmp
mov
imull
pop
iret
inc
fs
shrl
or
out
or
jecxz
in
movsl
xlat
mov
pop
mov
jae
pusha
js
xchg
fbstp
or
jmp
repnz
fists
loopew
cli
inc
lea
push
into
fdivrl
lds
movsb
sub
mov
or
dec
jno
push
enter
jg
cltd
test
inc
mov
jp
ja
clc
insb
mov
mov
aad
jne
rolb
adc
das
adc
add
popf
mov
fdivrl
jnp
jne
shll
mov
dec
xchg
inc
scas
cmp
inc
cmp
rcpps
mov
imul
scas
xor
sub
xor
adc
ja
mov
add
fwait
rclb
movsb
jnp
xchg
jns
cmp
mov
cli
mov
scas
xchg
lcall
jmp
std
cmpsb
pop
je
lods
out
push
push
push
xchg
and
popf
push
js
je
lods
shl
insb
lret
xor
js
inc
jmp
and
mov
and
daa
push
fimull
jbe
lods
out
dec
std
in
push
pop
xor
mov
das
sbb
xchg
in
scas
mov
xchg
arpl
int
xor
lret
lods
out
mov
add
push
inc
das
jno
mov
ss
push
pop
movb
jmp
add
fdivr
dec
iret
push
mov
adc
xor
into
cmpsb
fdivrl
mov
add
fsubrl
gs
push
fsts
jno
ret
pop
jmp
lcall
fisttps
sbb
aas
add
and
orl
je
jg
insb
popa
xchg
mov
cmp
inc
fs
daa
adc
shrb
out
cmp
xchg
mov
dec
inc
ret
sbb
jmp
mov
xchg
cmp
push
scas
pop
scas
js
jo
fdivrl
jle
pop
adc
sbb
jecxz
mov
and
cld
jl
or
sbb
push
add
loope
cmp
sub
jns
aas
std
adc
rclb
loopne
xor
push
mov
incl
scas
cmpl
add
in
mov
or
adc
adc
ss
push
pop
repz
aas
push
inc
cs
out
mov
mov
call
movsb
andb
shll
cmc
mov
and
mov
in
and
enter
insl
mov
out
adc
jl
cwtl
push
leave
mov
adc
add
cltd
scas
std
and
test
jns
jae
adc
in
cmp
lock
jl
sahf
xchg
js
inc
aas
xor
les
int
jnp
loopne
fcoms
mov
bound
xchg
fsts
loopne
mov
sbb
rolb
push
mov
cmpsl
jae
je
jnp
cld
sub
jge
fsubrl
loopne
stos
icebp
cmp
dec
sbb
repz
xor
popf
mov
jbe
push
cmp
jbe
jbe,pn
in
repnz
sti
or
sbb
mov
mov
aad
adcb
push
cmc
ret
mov
incl
pop
xlat
mov
jle
lret
dec
add
add
ss
iret
loop
push
xchg
xorb
repz
xchg
adc
adc
and
sub
jp
xor
adc
mov
lock
cmp
loop
adc
xor
lock
dec
in
out
dec
div
push
adc
cmp
andb
mov
out
pop
and
cmp
push
pop
stos
scas
leave
jns
bound
out
cmp
mov
pop
jmp
clc
jo
leave
push
sti
xor
xlat
xor
lcall
int
repz
sarb
cmp
daa
inc
xchg
push
mov
mov
xor
xor
push
or
mov
fcoms
jg
dec
or
xor
dec
cmp
fcomp
ret
or
jmp
mov
or
jle
jns
aas
cmp
dec
and
xor
mov
cmp
xchg
addr16
push
mov
sbb
inc
insb
mov
sbb
jae
lods
inc
push
push
shl
cmpsl
mov
popa
jnp
push
std
loope
xchg
inc
int
mov
pop
ret
add
pop
pop
cmp
stc
jmp
push
clc
adc
hlt
lods
sbb
pushl
jb
outsb
jl
and
loope
mov
xchg
xchg
jns
jo
xlat
lret
push
xchg
shlb
daa
ret
cltd
mov
inc
divl
mov
sbb
out
test
aad
pop
push
xchg
mov
iret
cmp
mov
jne
mov
sbb
adc
dec
lret
cmp
nop
loope
loop
inc
dec
stc
push
add
xor
and
movaps
ss
cmp
mov
push
imull
das
daa
sbb
cmp
or
lea
add
add
or
add
sub
mov
stc
scas
std
mov
ficoml
push
and
ss
test
sbb
inc
or
jp
scas
xor
cmp
icebp
ret
push
rcrb
inc
cmpsl
inc
loopne
sub
xchg
das
outsl
push
xlat
xchg
pop
addl
dec
sub
mov
or
mov
or
movsl
aad
jle
fsubrp
fdivrl
sbb
fs
fucomi
insl
ja
into
sbb
rolb
addl
insl
pop
lret
sti
mov
dec
insb
ja
push
fdivl
mov
mov
xchg
xchg
mov
and
and
orl
in
addr16
dec
mov
cmpsl
testl
xchg
ss
sbb
out
cmpsb
cmp
sbb
and
adc
cmp
mov
xchg
sbb
mov
inc
and
fldenv
inc
or
cmp
test
sub
jp
cmpl
push
into
fwait
js
mov
adc
lods
jno
lods
mov
push
das
push
sbb
mov
mov
push
jbe
aam
aaa
mov
mov
in
ss
xchg
stos
pop
inc
dec
push
fcomps
lea
add
pop
jnp
loope
imull
inc
add
jmp
into
aaa
call
xor
scas
ds
mov
jno
test
mov
roll
inc
pop
dec
loope
outsb
stc
jns
int3
xor
xchg
ds
jl
dec
jmp
push
and
loopne
lahf
dec
or
adc
out
lea
test
inc
out
jmp
test
test
xchg
rep
mov
xchg
mov
sub
std
lret
mov
mul
hlt
push
cmc
repnz
xchg
test
ret
dec
daa
lods
inc
xor
inc
insb
sbb
and
std
add
fcomi
test
sbb
shrb
mov
incb
fs
lock
cmpsl
stos
rcl
pushaw
add
roll
lds
pop
in
inc
je
subl
data16
repz
fs
pop
cmp
sub
mov
xlat
push
inc
and
aaa
xchg
push
sti
aam
sub
mov
mov
xor
rcrb
or
jne
sbb
inc
sarl
cld
cwtl
xor
and
jle
sub
imul
inc
jl
sub
mov
dec
inc
pop
push
shlb
ljmp
push
jb
pusha
cltd
rcl
mov
pop
or
movsb
lods
loopne
sbb
mov
call
hlt
xor
aam
xchg
push
out
test
jne
mov
gs
push
mov
push
sub
inc
lods
xchg
sub
sub
imul
and
enter
mov
adc
test
push
mov
dec
lea
inc
or
rorb
add
mov
in
lahf
adc
pop
ficompl
mov
and
pop
test
xor
push
jp
jne
mov
mov
cwtl
pusha
sti
jecxz
dec
into
ljmp
pop
rorl
hlt
push
jae
test
pop
xor
xor
pop
test
pop
push
lret
lea
xor
and
gs
scas
cmp
xchg
js
les
mov
inc
int3
adc
mov
inc
inc
mov
mov
insl
insl
insb
pop
clc
movsb
stc
shl
out
xchg
aas
mov
roll
fcompl
ss
lds
jmp
mull
fadds
sbb
lret
or
sub
fsubr
mov
scas
dec
iret
mov
jmp
les
clc
mov
jae
add
loope
cli
mov
mov
adc
clc
iretw
jno
xor
dec
cmp
ds
pop
sub
movsl
cld
jae
mov
icebp
test
cmpsl
sbb
ljmp
in
xor
incb
cld
jmp
and
xlat
jg
cmpl
and
mov
imul
je
and
fwait
xor
push
sub
pop
pop
xchg
pop
sar
icebp
jmp
repnz
dec
fisubrl
or
jns
xchg
push
dec
pop
cltd
pushf
jae
mov
cmp
mov
pop
fwait
xchg
ljmp
pop
dec
cwtl
test
loope
push
mov
call
aad
outsl
sub
lea
test
dec
bound
add
add
xor
inc
imul
fs
push
inc
dec
outsl
pop
sub
jle
fdivs
sub
inc
adc
inc
add
enter
aad
ja
mov
cli
mov
add
jbe
jns
lds
inc
or
in
or
test
popa
xor
adc
lock
jecxz
fisubrl
and
aaa
jb
sub
aad
mov
jle
movsl
enter
jbe
cmp
xlat
mov
jg
loop
fdivs
xor
ljmp
jne
jecxz
jg
pop
push
js
mov
xor
jp
xchg
or
je
scas
movb
in
mov
pop
mov
hlt
mov
cmp
jmp
scas
ja
loopne
xlat
and
cmp
xor
inc
jg
xor
cmp
outsl
jae
adc
mov
sbb
push
adc
and
xor
sub
or
sbb
ret
sub
imul
pop
test
js
lcall
mov
shl
or
mov
and
pusha
pxor
dec
xor
cmp
cwtl
arpl
inc
popl
xchg
ficomps
pusha
lret
filds
jno
cmp
push
frstor
push
xlat
sub
dec
inc
sub
mov
xchg
fidivrl
lds
jns
sets
mov
cmp
divb
xchg
jl
lcall
xor
cmc
test
push
es
cmp
and
ljmp
popf
fcmovu
push
ds
repz
out
mov
cmc
shrb
pop
stos
inc
jnp
or
pop
fsubs
cli
scas
pushf
mov
mov
or
test
bound
xchg
sti
sub
mov
dec
int3
pop
jo
movsl
jno
pusha
lret
add
fisubs
int3
mov
push
add
jmp
sbb
mov
jle
mov
xor
cltd
jb
mov
test
inc
add
inc
push
fiadds
mov
addb
mov
stos
xor
aaa
nop
roll
xchg
js
mov
mov
stos
fstpt
ret
push
and
adc
loope
add
int3
fs
or
enter
sub
xchg
mov
mov
test
enter
xchg
sbb
mov
jmp
in
sub
pop
xor
push
cltd
mov
pop
rorb
sarl
je
pushf
add
xchg
adc
and
data16
repz
sti
pop
push
lods
push
fs
jecxz
lret
rcrl
movsb
mov
xchg
mov
and
mov
mov
mov
dec
jge
sahf
paddusw
and
jecxz
in
mov
and
xor
mov
and
out
mov
bound
fnstenv
inc
inc
inc
push
mov
aad
lret
pop
hlt
arpl
in
outsl
inc
repz
jo
inc
fidivrl
lret
mov
mov
jbe
rclb
mov
shrb
rep
push
test
push
sub
and
es
and
test
ret
dec
loop
fisttpll
cmp
xchg
inc
pushl
dec
adc
inc
shl
cltd
pop
insl
cmp
jmp
ficoml
add
sub
adc
pop
call
out
dec
gs
adc
shrl
mov
sbb
aam
sbb
sti
in
add
adc
stos
shlb
adc
in
flds
in
lock
repz
add
xchg
pop
adc
dec
call
test
ljmp
js
scas
mov
shll
inc
adcb
popa
dec
mov
pop
mov
out
imul
and
jne
sub
add
sub
push
icebp
outsl
dec
dec
aaa
out
lods
sub
mov
loop
adc
pop
jb
movsb
pushw
sti
mov
or
mov
lahf
mov
in
xchg
pop
sahf
xchg
pop
push
pop
mov
push
and
pop
test
scas
xor
cmp
or
gs
flds
inc
pop
mov
xor
inc
mov
xlat
mov
add
mov
pop
mov
xchg
xchg
fdivs
stc
jo
xlat
xor
adc
call
xlat
push
idivl
push
cwtl
stos
jecxz
rcr
out
and
mov
add
es
ret
icebp
push
dec
and
xchg
mov
mov
nop
pop
jno
hlt
xchg
cltd
fidivl
cs
lahf
mov
dec
push
xchg
call
in
mov
add
mov
mov
jo
leave
imul
fcmovne
cmp
bound
dec
sahf
sti
aad
push
fsubrs
dec
cli
enter
lock
test
mov
ss
cmpsb
scas
sarb
cwtl
into
add
addr16
hlt
fwait
inc
and
insb
xor
jbe
call
lret
pop
fisubrs
sub
mov
push
xchg
xchg
int3
sbb
testl
andb
and
or
out
imul
call
cmpsl
push
data16
jmp
movsl
leave
sbb
adc
jg,pn
std
and
xor
xchg
fcmovu
insb
int3
in
aaa
pop
dec
xchg
mov
aad
xchg
shl
pusha
or
mov
fstpt
jns
idivb
test
sti
mov
imul
sub
xchg
push
out
fsubrs
adc
arpl
loope
or
nop
popa
call
mov
jp
jns
sub
test
incb
subb
sub
imul
pop
repz
push
push
dec
jae
arpl
xchg
out
enter
add
and
aad
dec
outsb
and
and
je
movsb
pusha
sbb
dec
insb
lods
add
leave
cmpsl
sub
sbb
and
repnz
aaa
xor
leave
in
sti
dec
cld
sbb
mov
aam
js
ljmp
lcall
andb
mov
jle
cmc
sub
filds
mov
pop
cmp
adc
dec
xchg
or
out
inc
pusha
mov
mov
inc
repnz
cmp
clc
test
loopne
mov
and
and
jns
lods
fadd
xor
pop
pop
fs
lahf
add
inc
pop
and
test
sti
outsb
push
iret
xor
repz
lret
or
stos
pop
adc
leave
in
inc
push
aaa
cwtl
daa
jmp
lods
test
aas
xchg
push
loop
orl
addb
pop
shlb
pop
lea
mov
mov
aam
adc
ljmp
push
lds
lock
je
pop
sbb
push
jae
pop
cmpsl
xor
cmp
pop
arpl
data16
sub
test
or
lock
push
jp
ret
cwtl
xchg
adc
test
mov
xor
or
loope
in
test
dec
pop
test
jno
jo
dec
pop
arpl
mov
mov
cltd
mov
dec
mov
push
repnz
rol
mov
imul
sbb
adc
shl
movsl
adc
xchg
sarl
jno
outsl
iret
test
lock
mov
inc
mov
nop
sbb
mov
pusha
ds
fldenv
das
cltd
push
hlt
pop
jp
jns
pop
rcrl
insl
sbb
and
jl
cmpsb
push
adc
push
pop
sbb
and
cld
add
mov
icebp
repnz
dec
mov
ret
and
int
fsubl
leave
inc
leave
add
aam
nop
dec
scas
fcoml
ss
icebp
jmp
jmp
jb
pop
xor
dec
and
movsl
pop
or
xchg
in
pop
scas
or
push
outsl
in
xchg
ds
dec
xchg
sbb
repnz
mov
fucomi
mov
enter
int3
mov
jge
xor
bound
cld
pushl
icebp
cmp
and
xchg
das
inc
mov
andps
cmp
setge
cli
cmp
cmp
loopne
cmp
mov
ror
mov
adc
fsts
dec
push
inc
dec
jno
push
jnp
lahf
xchg
sub
jne
data16
mov
sbb
jmp
cld
mov
data16
pop
pop
pop
push
and
lds
dec
out
mov
jbe
or
addr16
call
mov
mov
push
push
sub
imul
in
shrl
mov
mov
sbb
and
leave
push
jno
rol
pop
mov
stos
scas
iret
adc
bnd
adc
out
jge
mov
push
dec
xchg
add
daa
aaa
mov
in
loop
mov
xchg
pop
or
mov
add
xchg
movsl
inc
jne
sbb
xchg
fildl
in
ror
aam
stos
scas
pushf
fdivr
cltd
mov
jg
lods
jecxz
add
mov
call
subb
jge
jl
nop
adc
xchg
test
or
in
leave
or
cmp
mov
xor
jo
sbb
adc
test
cltd
loopne
lcall
jmp
mov
jae
adc
aaa
leave
and
mov
popa
or
push
push
mov
pop
loope
pop
xchg
and
push
mov
pushf
xchg
ret
or
adc
xor
stos
dec
stos
cmpsb
es
cmp
cmp
insl
ret
das
and
push
popf
lds
hlt
jecxz
movsb
nop
cltd
pop
adc
mov
fbstp
rorl
push
outsb
and
mov
stc
push
ljmp
inc
mov
daa
mov
bound
sbb
fisubrl
mov
dec
movl
sti
andl
clc
outsl
push
dec
mov
push
shr
lret
popf
dec
test
pop
add
mov
faddl
dec
sub
in
pop
push
fcoms
add
mov
outsb
and
shl
pop
dec
pop
mov
dec
and
fidivl
jecxz
adc
ja
dec
cmp
lcall
or
dec
loopne
hlt
xchg
mov
mov
faddp
jb
repnz
inc
mov
rcl
mov
sbb
push
aas
clc
sti
iret
jge
cmpsb
xchg
mov
dec
imul
ficompl
sahf
inc
loop
inc
clc
inc
jmp
ja
pop
cmc
sub
pop
push
xor
pop
out
lods
dec
bound
xchg
cli
xor
pushf
inc
and
push
pop
pushf
dec
fsubr
cmpsl
pop
fs
mov
or
dec
out
or
lods
aaa
dec
ja
ret
out
jbe
or
pusha
pop
test
shll
enterw
fnstcw
imul
mov
inc
rcll
mov
out
dec
aas
inc
flds
xlat
pop
and
mov
punpckldq
cmp
sub
sub
ljmp
fildl
and
rol
lock
scas
xor
aam
mov
jge
gs
mov
cmp
nop
pop
or
cs
sbb
jecxz
push
aaa
mov
fcoml
nop
cmp
icebp
loopne
in
sbb
lret
insb
sti
add
lock
addl
sbbl
mov
jo
into
jl
pop
ret
mov
jbe
dec
loop
sbb
test
call
jo
fidivl
lea
sarl
xor
rorl
in
inc
cmp
inc
out
inc
mov
mov
cltd
shrl
cld
mov
imul
test
hlt
mov
scas
ljmp
sbb
stos
dec
jle
fs
movsl
bnd
icebp
xor
xchg
mov
rclb
imul
out
bound
rcrb
push
lods
xor
dec
push
pop
leave
add
cmp
scas
sbb
mov
and
push
add
jp
xchg
sbb
xor
shrb
sub
sbb
data16
push
push
push
call
push
inc
into
and
nop
or
push
or
cmp
or
lret
mov
adc
repz
gs
rep
add
inc
xor
adc
add
aas
daa
cmp
push
mov
jecxz
sub
jmp
inc
movsb
cmpsl
or
jnp
ffreep
cmp
repnz
clc
out
sub
sbb
addr16
xor
xchg
push
cld
sub
add
jb
cmpsb
incb
push
pusha
or
push
mov
pop
pop
mov
aam
das
aad
pop
ljmp
lds
in
test
xchg
or
sub
aaa
cld
dec
bswap
sbb
and
mov
mov
jl
jb
dec
xchg
add
pushf
mov
pop
sub
arpl
les
mov
std
jge
loope
or
mov
popf
addr16
mov
push
pop
lcall
pop
lods
imul
mov
or
sub
lret
shll
and
ret
push
fs
sbb
pusha
add
push
lahf
arpl
jmp
jmp
insb
sub
shl
test
mov
xor
nop
cmpsb
cltd
movsb
js
xchg
dec
repnz
cltd
stc
ja
cltd
mulb
mov
jp
xchg
rcl
sbb
movsl
lret
std
icebp
das
lret
dec
jae
mov
adc
and
mov
in
aad
xchg
addr16
mov
push
jb
xor
mov
rcll
hlt
fisttpl
call
dec
sub
icebp
or
or
fistps
iret
inc
repz
cmp
pavgw
out
or
push
pop
pop
lret
and
cmpsb
mov
and
fs
add
jb
cwtl
ret
movsb
mov
test
push
outsl
and
outsb
test
sti
and
dec
xchg
lods
lea
les
jb
popf
out
jmp
pop
pop
mov
lock
js
mov
or
push
jecxz
or
fldenv
repz
daa
cmp
inc
stos
cmp
gs
in
iret
push
aaa
xchg
popf
clc
loop
adc
imul
in
pop
xor
lods
sub
out
dec
in
jno
test
clc
jae
test
ljmp
mov
pusha
scas
mov
subl
pop
outsb
lret
jg
iret
adc
mov
and
adc
jb,pn
xchg
notl
jp
xchg
dec
std
scas
jmp
sbbl
cmp
mov
ss
dec
or
addl
and
add
push
or
add
or
popa
dec
out
into
mov
iret
and
inc
and
mov
test
push
pop
popa
mov
pop
dec
push
xchg
scas
pop
std
nop
mov
stos
filds
ss
cltd
ret
cli
push
clc
mov
std
mov
fcoms
sub
jo
imul
jae
cltd
sub
and
ds
sbb
out
lods
xor
jl
inc
xlat
lret
cmc
enter
mov
adc
sbb
inc
or
sarl
fstpt
lods
jecxz
jae
mov
fdivrp
push
in
push
adc
mov
inc
xchg
dec
rorb
dec
lea
lea
mov
subl
leave
aas
lea
out
mov
ds
sbbb
push
mov
jne
loop
rcrb
xchg
sbb
mov
mov
or
pop
aad
cmpsb
mulb
push
scas
insl
pop
adc
ja
xorl
jno
mov
sbb
xchg
dec
rclb
jae
in
or
jl
mov
xor
sbb
in
xchg
popa
bound
inc
les
mov
stos
leave
gs
mov
int3
inc
jp
and
push
push
xchg
jbe
push
mov
lock
pop
cmp
mov
mov
scas
sar
pop
repnz
test
xchg
leave
jle
sub
xchg
lcall
shrl
test
scas
iret
add
sbb
xchg
xchg
es
sbb
pop
nop
lea
lcall
mov
subl
push
mov
cmp
xlat
add
sbb
loopne
jg
jmp
ficoml
sbb
into
jns
sbb
cli
pop
xchg
insl
addr16
fcompl
jl
jne
orl
hlt
repnz
loope
mov
push
iret
xor
enter
repnz
aaa
icebp
cmp
cmp
dec
fnstcw
scas
dec
out
ret
xchg
fwait
or
sub
out
dec
into
andb
push
addr16
repz
lods
jnp
fiaddl
jge
lcall
xchg
and
popf
mov
dec
jl
inc
inc
out
test
adc
in
push
jne
andl
jbe
jp
stc
dec
lcall
jnp
mov
sbb
je
xor
dec
cmc
sbb
and
mov
call
push
je
lahf
arpl
daa
cmpsb
sahf
and
push
test
lcall
adc
pushf
insl
cmp
sbb
and
imul
inc
cltd
mov
loop
imul
jg
sub
loopne
shlb
adc
or
outsb
and
in
adc
idivb
dec
jg
out
pop
imul
cwtl
jne
dec
pop
pop
dec
pusha
rcll
addl
ss
xchg
pushf
popf
test
cmpsb
adc
pop
outsl
stos
jne
insl
add
sbb
scas
mov
fwait
test
leave
xlat
xor
mull
xor
int3
or
int
cmpsl
or
sbb
jg
in
dec
jne
lock
xchg
scas
jmp
scas
mov
pop
fsubrs
mov
out
mov
cmp
xor
jbe
cli
repnz
xchg
jbe
mov
mov
arpl
push
lret
xchg
stos
pop
into
and
out
lcall
mov
ljmp
cld
loope
sbb
sub
loopne
stos
mov
dec
add
fdivrs
idivl
call
pop
out
sbb
push
adc
pop
and
mov
ja
out
push
inc
mov
mov
icebp
adc
or
fistpll
lods
ss
push
mov
cmc
ud1
int3
std
pop
jno
test
out
loop
es
aad
fldenv
mov
rcll
imul
xchg
jle
jmp
rcll
fisttpll
xchg
add
aaa
pop
inc
inc
setl
out
outsb
jge
notl
fs
lret
cmpsl
bound
stc
nop
cmp
sbb
inc
mov
imul
mov
xor
and
insl
or
adc
mov
pop
xor
add
push
imul
orl
inc
and
fmuls
jge
outsb
frstpm(287
int3
repz
hlt
shrb
mov
inc
pop
vpshlq
jns
mov
or
dec
inc
or
xchg
pop
add
cli
std
sahf
data16
stc
and
outsl
dec
outsb
outsl
push
ds
sub
mov
sbb
jno
add
loop
push
adc
xorb
insl
mov
xor
or
addl
mov
xchg
pushf
and
inc
stos
aaa
ret
push
out
inc
loope
data16
in
push
stos
and
xchg
addr16
mov
or
mov
add
xchg
xor
sub
lcall
pop
insl
jnp
xor
jecxz
lcall
jne
cltd
and
rclb
xor
addr16
jo
rol
or
mov
rcr
daa
adc
fwait
add
push
jle,pt
push
imull
dec
ror
daa
push
lods
int3
xor
pop
xchg
ret
popf
decb
inc
out
enter
clc
push
loop
inc
loop
dec
insb
mov
sysenter
rolb
dec
and
jne
pushf
jg
rcrb
ret
dec
stos
xor
jno
mov
xchg
and
je
lock
clc
cli
inc
sub
test
cmpsl
jnp
sbb
mov
data16
mov
add
jge
jb
call
pop
push
dec
mov
jg
jle
stc
adc
jae
cmp
stos
sbb
adc
out
mov
cmc
mov
dec
icebp
push
inc
in
mov
ss
lock
adc
mov
pop
pop
mov
mov
scas
mov
inc
mov
pop
lea
inc
or
int
rcll
fldenv
cmpsl
push
xorl
enter
mov
rcll
mov
mov
aaa
rcrb
push
mov
dec
roll
mov
or
popa
pop
gs
jp
mov
ds
mov
add
rorb
push
movsl
jge
daa
sub
cld
cmp
xchg
or
pop
rcrb
cmp
and
insl
arpl
or
and
daa
sar
cs
cmpsl
mov
inc
gs
inc
mov
dec
and
mov
aaa
scas
cwtl
mov
or
repz
je
push
or
sub
in
push
clc
jne
and
add
add
jecxz
out
insl
lcall
mov
mov
fld
js
shll
xor
lcall
add
nop
lds
dec
xlat
aaa
icebp
jecxz
mov
movsl
sub
testb
pop
fdivs
xchg
push
mov
popf
lahf
or
inc
mov
jg
lar
add
imul
in
das
mov
stos
and
adc
stc
sub
xchg
xchg
add
into
sarb
sub
ds
dec
jle
ljmp
dec
out
push
enter
add
sub
mov
mov
lea
mov
and
pop
les
add
lahf
fcomps
bnd
push
test
or
cmpb
dec
cs
ljmp
aam
insl
mov
movsl
lahf
repnz
je
xchg
mov
out
and
adc
insb
pop
jnp
push
mov
and
lds
mov
aas
test
mov
movsl
adcl
cmp
jmp
lret
xchg
stos
xor
inc
inc
lock
shl
shr
imul
sbb
mov
jp
stos
imul
adcb
cmp
pop
idivb
sbb
sti
leave
sbb
aad
push
pop
iret
inc
scas
mov
push
pop
testb
sti
movsl
add
loope
pop
popa
stc
jns
jmp
out
push
movsb
add
repnz
mov
leave
adc
ja
inc
adc
mov
sti
ficomps
sub
xor
cld
fwait
js
stos
mov
cmp
cli
xor
jecxz
orb
loopne
insl
stos
dec
push
mov
mov
movsl
icebp
inc
cmc
outsb
cltd
add
aaa
dec
xchg
adc
and
xchg
jmp
dec
sbb
lret
cmc
inc
push
ret
cmpsb
test
in
sahf
loope
xchg
xchg
std
jg
push
or
mov
lret
movsb
add
int3
push
mov
testb
aad
std
mov
rcr
jmp
rorl
stc
cli
insl
out
mov
bound
pop
outsl
jecxz
cmp
xchg
in
hlt
xor
mov
ret
popf
jl
dec
sub
sti
mov
decb
mov
xchg
sbb
std
daa
dec
push
aam
lahf
out
pop
insb
fcoml
outsl
fistpll
add
scas
insb
push
pop
inc
ljmp
ss
inc
jl
xor
mov
sbb
nop
aas
roll
dec
push
add
jns
cli
mov
cli
mov
push
mov
lret
sub
shrb
outsl
into
cbtw
xor
sbb
xchg
imul
gs
je
inc
inc
sbb
dec
es
xor
in
xor
dec
subl
enter
bnd
jbe
sar
push
xlat
mov
mov
insb
imul
and
push
in
jo
jecxz
sbb
mov
cmpsb
iret
popa
jo
push
xchg
dec
or
mov
ja
lods
andb
lret
mov
popf
push
in
mov
mov
xor
lock
aaa
mov
mov
test
push
mov
clc
movsl
daa
inc
add
pop
imul
stos
outsb
divl
add
mov
mov
mov
lods
pop
cmp
add
mov
sub
in
shll
sub
in
out
outsb
loop
push
shrb
or
mov
loopne
ret
adc
test
jns
jl
dec
movsb
xlat
test
fists
inc
mov
ljmp
ds
rcl
mov
and
es
rol
movsl
xor
ret
js
outsl
mov
jge
in
inc
int3
ja
pop
fsubl
pop
jecxz
cltd
dec
push
mov
in
add
aas
icebp
ss
jle
dec
call
div
test
fcompl
xor
mov
out
out
fstpl
add
fiaddl
push
ja
mov
cmpsl
dec
adc
pop
dec
pushf
insl
push
sub
js
cmp
inc
mov
mov
mov
jg
and
xchg
je
orl
ljmp
xor
rorb
jae
adc
stos
push
sub
xor
rolb
pop
xlat
jge
cs
push
nop
ss
cmp
jmp
imul
mov
popf
out
shlb
std
pop
lea
push
fnstcw
es
mov
fs
mov
xchg
mov
sahf
pop
lcall
ret
std
xor
sti
incl
dec
push
inc
fcmovnb
inc
lret
inc
ret
and
inc
pusha
cwtl
mov
sti
out
adc
aam
inc
mov
xor
or
cmp
mov
out
dec
mov
jmp
into
fsubrs
fnstcw
xor
pusha
jno
pop
fcompl
xchg
lret
data16
cmpsl
push
push
gs
repz
loope
mov
popf
pop
inc
sahf
mov
pushf
and
mov
xor
setae
pop
push
and
lret
pop
adcl
dec
lock
sbb
movsb
shlb
and
in
mov
mov
mov
adc
push
fs
das
fiadds
mov
push
jno
outsl
xor
jo
lcall
sahf
inc
and
js
inc
push
add
xor
popf
or
data16
push
aam
xchg
cmp
jb
sub
sarl
pop
fidivl
xor
test
icebp
out
jb
divb
lea
push
xor
mov
je
test
out
lret
jno
fmuls
cs
std
movsl
lods
xchg
mov
ret
and
stc
dec
data16
inc
mov
movsl
cmp
push
dec
loop
fstpt
mov
jae
outsl
mov
int3
aam
in
xchg
scas
mov
push
jg
mov
sub
aad
adc
daa
hlt
mov
movsb
cmp
shll
fisttpl
adc
pushl
dec
pop
add
pop
movsb
cli
jo
dec
outsb
orb
jbe
outsb
or
push
aad
fisubrl
add
lock
das
repz
cmpb
jnp
cmpsb
aad
pop
jno
dec
xchg
mov
cld
and
xchg
fidivs
push
xor
stos
xchg
popf
in
shlb
bound
stc
mov
mov
cli
cmp
xchg
stos
adc
push
adc
add
pusha
int
mov
jmp
shl
and
mov
and
mov
xchg
sub
push
mov
fstpt
lock
loopne
ret
xchg
int3
mov
sub
jmp
or
mov
dec
loop
pop
push
push
mov
jl
gs
or
scas
mov
faddl
push
mov
clc
pop
lock
inc
mulb
and
pusha
repz
test
pop
jmp
clc
out
mov
daa
push
mov
iret
adc
cltd
mov
daa
aas
fldenv
push
iret
pop
add
pop
inc
cwtl
leave
jae
and
iret
fcmovne
in
adcl
addr16
mov
sub
xorb
sarb
xchg
fcmovu
popl
and
shrb
add
dec
push
insl
adc
fistl
fdivp
push
shlb
dec
push
or
xor
outsl
jne
fcmovne
xor
adc
adcl
xlat
and
cmpsb
pop
test
xchg
or
push
insl
mov
xor
int
fucom
es
push
add
mov
cmp
and
or
in
mov
mov
sbb
jo
aaa
mov
ss
mov
mov
inc
mov
jb
cmp
test
subl
test
jae
jno
adc
mov
call
insb
jbe
sbb
sbb
notl
hlt
mul
sbb
scas
adc
inc
or
insb
pushf
clc
xor
ret
xchg
jno
pushf
sarl
aas
in
jne
stos
push
and
add
div
adc
push
insl
sbb
or
sbbl
cmp
cmp
insl
jecxz,pn
dec
aas
ror
add
int
push
and
jb
jle
sub
push
bound
sub
xlat
lret
jne
faddl
aaa
xor
and
sbb
out
pop
js
mov
mov
dec
fimuls
sub
adc
arpl
and
sub
sbb
sub
nop
dec
out
ljmp
in
popa
pop
pop
add
mov
icebp
in
mov
pop
rcrb
push
and
insb
mov
neg
sbb
adc
xor
lock
add
mov
lock
fidivrl
push
ss
bound
test
or
pop
shll
data16
jge
pop
ss
loop
add
cmc
shrb
int3
xchg
add
inc
sbb
ret
push
loope
mov
fucom
xchg
arpl
lds
jne
repz
jb
out
add
sahf
sub
inc
add
and
dec
out
clc
loop
nop
dec
xor
mov
mov
xchg
mul
push
loope
pop
mov
int
rorb
cmpsl
out
sub
inc
inc
jb
stos
stc
or
ss
inc
mov
clc
xchg
sbb
inc
fwait
loop
add
rorl
pop
sti
xchg
jl
mov
fldenv
orl
lock
pop
jo
sbb
loop
enter
push
xchg
stc
adc
outsl
adc
repnz
loope
xlat
add
testw
mov
lods
sahf
pop
jmp
mov
enter
icebp
push
pop
jb
lods
inc
scas
mov
int3
leave
jge
jecxz
push
stos
mov
mov
cs
shrb
sbb
ret
jl
cmp
mov
nop
insl
mov
push
jnp
mov
sub
lret
jnp
mov
mov
and
out
sbb
pop
dec
and
bound
jecxz
jle
in
dec
mov
push
int3
push
filds
cmc
xchg
inc
mov
iret
stc
dec
mov
adc
add
fs
xchg
jp
push
mov
adc
lea
mov
int
std
shll
push
push
inc
leave
lock
and
out
icebp
test
pop
inc
test
adc
icebp
jecxz
sbb
cmp
mov
mov
push
xor
popa
xchg
fsubrs
fmul
sbb
sub
adc
ret
pop
iret
cmc
loopne
outsb
jl
aad
subl
or
nop
andl
xor
test
into
movsb
push
rolb
fld
fwait
push
xchg
mov
mov
or
lcall
push
loop
out
aad
mov
adc
lret
add
jno
sbb
dec
iret
sub
mov
aas
mov
add
pusha
jae
add
pop
xor
sti
test
data16
jg
sub
push
stos
es
sub
pushf
dec
jae
mov
test
lods
mov
mov
sbb
cmc
mov
pop
sti
ret
call
mov
xchg
and
out
cmpl
dec
lcall
jae
xor
xchg
sbb
jbe
mov
test
fisttpl
stc
arpl
sbb
adcl
psrld
nop
lahf
roll
ds
inc
xchg
ds
loop
or
inc
cmp
sub
scas
daa
lahf
outsl
mov
stos
out
ret
shrl
pop
fwait
out
incb
or
stos
shll
hlt
lods
dec
or
sbb
push
repz
pop
mov
lods
sub
cmpsb
xchg
lock
and
dec
aad
jbe
adc
xor
cmp
enter
aas
jge
rcrl
mov
fidivl
out
roll
cmc
clc
inc
in
in
push
test
ss
test
push
loope
dec
movsb
pop
icebp
fldcw
sub
negb
es
in
test
push
or
mov
outsb
pop
mov
xchg
cmp
les
push
push
test
cmp
fwait
pop
dec
jp
cmp
mul
mov
lods
adc
xchg
push
orl
cltd
sarl
sbb
mov
adc
cmpsl
dec
cli
push
xchg
nop
push
xor
out
nop
or
and
hlt
ret
inc
xchg
add
test
js
xlat
stos
mov
es
in
call
mov
imul
arpl
loop
movsl
inc
mov
out
shll
adcl
add
iret
aaa
js
lock
mov
loopne
jns
outsb
mull
je
push
arpl
pop
test
popf
imul
sbb
repnz
fcmovnbe
xor
notl
xor
icebp
mov
inc
jg
out
jge
aaa
mov
mov
and
jecxz
xchg
push
negb
push
mov
xor
lcall
dec
mov
dec
dec
push
adc
jge
ret
mov
lcall
int3
jnp
bnd
cld
add
jmp
ds
inc
popa
sarb
pop
pop
out
jno
cld
inc
aaa
imul
xchg
rcll
mov
mov
call
ds
and
jns
test
jnp
cmp
int3
lret
xchg
movsl
inc
or
in
ljmp
jle
pop
sub
sbb
jmp
clc
sarb
push
daa
es
adc
jo
add
je
leave
inc
popa
jo
popa
pop
pop
xorb
inc
or
inc
mov
add
mov
dec
xchg
pop
cltd
add
icebp
pop
push
test
sbb
dec
and
or
inc
cmc
popf
mov
out
xor
stc
jae
fisttpl
outsl
sbb
outsb
lahf
mov
mov
subl
push
hlt
fsubrs
gs
movsl
xchg
mov
or
inc
test
cwtl
mov
mov
ss
sarb
sub
mov
jle
jo
mov
or
pop
mov
sbb
mov
add
mov
jmp
sahf
dec
dec
lret
arpl
pop
push
lret
cmpl
xor
fcoms
movsl
xor
jge
mov
mov
mov
loopne
pop
mov
mov
stos
loop
cmp
mov
cmovae
cmp
std
mov
jp
add
popa
arpl
js
mov
jecxz
mov
scas
andb
lods
mov
mov
adc
imulb
jecxz
dec
xor
add
imulb
jle
pop
sub
inc
adc
cmp
test
add
mov
xchg
scas
decl
movsl
movl
cwtl
push
xlat
xchg
push
mov
test
jnp
jns
fsubl
ret
stos
xor
pop
jl
mov
addb
push
out
ret
dec
sub
adc
sbb
mov
daa
andb
cmp
push
pop
mov
xor
xchg
and
inc
nop
movsl
lea
hlt
mov
ljmp
push
mov
mov
aas
shl
pop
or
js
mov
or
loop
push
pop
push
dec
movsb
movsb
subl
cmc
sbbb
sbb
rcrl
sub
stos
in
sub
inc
cmpsb
mov
adc
sbb
popf
and
imul
ret
scas
jp
lds
push
aas
ljmp
mov
jno
pop
mov
sbb
sub
sub
scas
cmp
fstpt
push
cmp
sarb
pop
adc
mov
punpcklbw
xchg
mov
and
pop
and
xchg
or
adc
sbb
xchg
jae
and
imul
lea
test
inc
in
xor
aam
mov
or
out
lcall
cmp
adc
rcrl
pop
dec
mov
xchg
fimuls
mov
int
jb
lret
les
cmp
leave
rclb
and
std
icebp
jb
dec
sub
jne
jbe
lea
movsb
push
fstps
push
mov
aam
enter
clc
jge,pt
push
xchg
add
gs
fstpl
mov
push
inc
out
fdivs
loop
ret
mov
add
and
call
cs
insl
rorl
mov
cmp
aaa
add
aam
test
in
ljmp
add
or
inc
clc
xchg
int3
les
cmpl
scas
and
pop
xchg
mov
in
add
shrl
fs
or
stos
pushf
mov
mov
pop
push
cld
or
add
in
mov
clc
mov
cmp
in
jo
ss
lods
jmp
test
or
hlt
ds
dec
sub
mov
jo
ret
call
and
test
imul
xchg
mov
fs
addl
test
lret
jno
jp
imul
movsl
ljmp
sahf
dec
mov
into
shl
push
mov
rolb
imul
loope
popf
sti
lods
jle
mov
subl
xchg
stos
jg
stos
and
jo
mov
ret
xor
xchg
xor
sub
aas
jno
stc
xchg
mov
lret
pop
jl
pushl
fidivs
jge
mov
in
aas
cmp
jmp
pop
ret
lea
sahf
rorb
push
mov
stos
aam
test
cmp
mov
push
add
rcll
adc
dec
into
popf
inc
gs
mov
dec
mov
fnsave
xchg
insb
dec
rorb
test
lods
sbb
movsl
mov
shlb
shl
and
adc
push
xchg
dec
shld
cli
sbb
cmpsb
sub
jae
dec
fstps
mov
lods
orb
mov
loop
stos
xlat
xchg
xchg
or
cs
mov
mov
xchg
inc
cwtl
mov
repnz
shlb
mov
out
adc
jle
insl
fbstp
push
cwtl
shrb
pop
xor
sbb
nop
inc
inc
insb
jp
pop
stos
subb
and
jno
cmovnp
add
lea
fisubrs
jmp
dec
adc
push
dec
imulb
dec
ret
repz
push
lret
sahf
mov
or
test
out
pusha
lret
mov
cs
fisubrs
stos
cmc
filds
lds
adc
aam
sar
lods
iret
inc
adc
dec
pop
cs
jl
xchg
stc
jns
incb
ret
and
add
sub
or
add
jmp
aas
cmc
push
rolb
sbb
addr16
scas
and
in
adc
fcmovu
ja
mov
pop
mov
or
jmp
sbb
lret
xchg
or
cmp
int3
jbe
jmp
mov
push
testb
dec
cmp
sub
jp
addb
cwtl
popf
imulb
stos
and
in
xchg
inc
loopne
fsubp
jno
xchg
pusha
or
arpl
and
add
and
cmpb
lock
mov
push
pop
dec
stos
cltd
fisttpl
dec
mov
xchg
inc
push
test
inc
mov
inc
sbb
push
cld
out
popa
fldt
test
mov
arpl
fisttpl
pop
mov
mov
rclb
cmpsb
test
aas
pushf
dec
mov
add
inc
loope
jecxz
push
mov
cmpsl
jbe
push
insb
sti
adc
stos
int
add
pop
or
mov
test
jb
outsl
cmp
movsl
popf
pusha
mov
ja
ror
jae
inc
cmp
sti
test
shrb
sub
mov
mov
adc
lcall
cmc
ljmp
or
fildl
pop
daa
shl
push
sahf
sub
mov
or
dec
sub
popa
cld
mov
or
std
xchg
lea
push
out
mov
in
cmp
sti
stc
sbb
aam
iret
jo
or
aaa
insl
pushf
jl
sti
jno
and
dec
rcll
push
or
in
xchg
cmp
mov
sbb
in
sbb
into
or
lret
push
inc
sbb
gs
and
fsubs
repnz
mov
cmp
loopne
cwtl
pushf
adc
popf
jo
jmp
out
mov
leave
insb
inc
mov
jp
out
dec
mov
mov
out
sub
bound
test
cmp
in
jmp
push
loop
clc
and
lret
sbb
pop
test
sub
jns
cmpsl
rcr
and
and
outsb
cmpsl
sub
push
sbb
test
scas
lock
and
rorb
ss
fldt
enter
mov
sbb
cmp
out
mov
fmull
pop
aaa
push
push
enter
cmpsb
jno
scas
dec
cmp
cltd
jmp
sub
and
dec
or
popa
mov
leave
cmp
lea
adc
inc
pop
in
dec
test
add
adc
inc
mov
mov
dec
cmpsb
mov
mov
int3
mov
xor
ja
enter
or
repnz
pushf
ds
inc
dec
xchg
push
insb
stc
jg
pop
mov
jecxz
jmp
mov
popa
mov
inc
shl
mov
or
xor
cmp
mov
jae
pop
jle
lock
movsl
jne
mov
addr16
into
daa
cmpsl
xchg
aam
les
mov
movsl
or
adc
cmp
jb
cld
sti
mov
mov
cwtl
jecxz
fisubrs
mov
int3
mov
jmp
cld
inc
mov
sbb
jae
push
daa
popf
cmp
xor
call
mov
xor
mov
aam
or
inc
and
jbe
and
mov
add
js
push
aaa
jne
test
iret
mov
aam
mov
mov
jne
gs
pop
fcom
xor
mov
dec
cmp
xor
dec
inc
xor
push
jle
les
dec
dec
inc
cltd
pop
int3
daa
xlat
or
mov
outsb
push
adc
add
push
ficomps
xor
mov
ret
xchg
je
clc
test
addl
notl
and
aaa
sub
stc
vscatterqpd
loop
frstor
inc
je
repnz
jae
mov
inc
pop
mov
xor
push
mov
cmp
dec
out
imul
divb
les
in
or
dec
dec
adc
fisubrs
sbb
orl
gs
and
mov
loop
sub
mov
fildl
jns
test
test
js
mov
inc
repnz
aam
and
jmp
push
push
pop
int
sarb
cmpsb
inc
add
mov
mov
mov
sub
pop
cwtl
push
or
ret
inc
arpl
out
imul
jmp
mov
dec
push
mov
inc
mov
loop
inc
cld
inc
mov
scas
shl
xor
fnstenv
rol
cmpsl
lahf
inc
lods
mov
ror
and
xchg
popf
stos
ja
out
rcll
mov
mov
push
cwtl
xchg
mov
outsl
push
gs
ja
ljmp
das
mov
orb
stc
out
push
xchg
push
ss
leave
cmc
testb
mov
sub
hlt
mov
inc
and
scas
call
and
in
jne
mov
dec
sbb
xchg
pop
movsb
mov
and
in
stos
mov
imul
xchg
push
sarb
mov
stc
stc
rcrl
dec
push
int
test
in
mov
and
push
push
imul
xchg
mov
pushf
jb
popl
mov
cwtl
mov
ljmp
bound
stos
aad
pop
pop
and
xor
push
cmpsl
pop
cmp
sahf
and
mov
cmp
jmp
ret
outsl
pop
test
push
adc
jnp
cmp
sti
pop
dec
enter
rcl
cltd
aas
xlat
push
mov
mov
xor
out
xchg
arpl
mov
cwtl
sarb
jns
push
stc
xor
cwtl
sub
lret
mov
xchg
cmpsl
ja
cmc
jae
xor
jmp
push
dec
sub
pop
sahf
pushf
add
mov
call
mov
loope
aam
pop
push
add
adc
pushf
xchg
mov
cs
stc
fistl
or
sub
frstor
out
mov
push
mov
mov
movsb
aad
dec
ret
enter
test
sarl
sub
fbld
in
inc
call
push
call
mov
push
pushl
call
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
call
push
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
push
call
mov
call
mov
mov
call
xorl
push
push
push
push
push
push
push
call
mov
addl
call
call
push
push
push
push
push
push
push
call
mov
call
nop
pushl
call
push
pushl
call
lea
push
push
pushl
call
push
call
push
push
push
push
push
push
push
push
call
mov
push
push
pushl
call
call
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
push
call
push
push
push
push
push
push
push
call
mov
cmp
jne
push
mov
mov
push
push
push
push
push
push
push
call
mov
cmp
jne
subl
push
push
push
push
push
push
push
call
mov
addl
call
pushl
call
call
call
call
leave
ret
cmp
repnz
jb
jle
cmp
and
in
mov
mov
shr
mov
xor
rorl
negl
subl
roll
add
rorl
add
add
dec
jne
leave
ret
mov
cmpl
fsub
push
xor
in
.byte
