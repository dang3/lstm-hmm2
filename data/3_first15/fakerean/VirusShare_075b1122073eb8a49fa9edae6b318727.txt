sbb
add
mov
loop
shl
xchg
inc
add
pop
inc
mov
fwait
mov
mov
sub
xor
push
fs
cmp
mov
xchg
mull
jmp
dec
inc
cmp
subl
jg
push
inc
lcall
inc
gs
movsl
data16
insl
mov
scas
push
xchg
arpl
xchg
push
insb
add
les
les
movsb
ds
dec
mov
inc
test
sub
ljmp
push
imul
idivb
int3
and
mov
adc
shll
lea
out
cmp
push
inc
or
sbb
cwtl
test
ret
inc
jne
roll
into
pop
call
jecxz
mov
fldt
ret
mov
or
stos
and
cmp
jge
sbb
mul
sbb
outsb
dec
into
call
or
jns
push
jns
and
sahf
clc
inc
in
xchg
cmp
rcll
arpl
test
push
aas
cmp
add
push
push
sub
outsl
aam
fdivrs
je
fs
imul
push
outsl
cltd
fwait
mov
push
push
in
mov
fwait
adc
xor
mov
jno
popf
fxch
pop
mov
in
test
popf
dec
add
dec
ljmp
xchg
xchg
push
int3
test
cmc
xchg
pop
inc
xor
mov
pushf
jmp
cmp
in
xor
pusha
int
ja
ret
lods
out
and
jl
push
adc
adc
mov
scas
dec
inc
inc
sti
mov
inc
inc
cmp
enter
lret
or
repnz
add
mov
jbe
push
mov
into
xor
cwtl
and
jmp
int
lods
inc
push
dec
out
movl
add
faddl
jnp
mov
add
xor
mov
pop
ret
inc
out
push
push
lret
sub
jmp
pop
cmp
and
xchg
mov
jmp
cltd
inc
push
adc
and
dec
call
in
popf
loop
xor
and
enter
popf
cltd
add
rolb
jg
jecxz
aaa
mov
inc
xor
xchg
cmc
rcrb
loope
aaa
adc
jge
addl
ret
push
lcall
pop
cmp
add
sub
mov
fmull
movsl
icebp
push
mov
push
nop
bnd
pop
xchg
xor
xor
jmp
cmp
mov
push
loop
xchg
or
sti
dec
xchg
movsb
push
in
xchg
inc
xchg
js
xchg
movsl
jp
mov
adc
xchg
cld
adc
lret
and
cmp
xor
imul
cmp
dec
push
cmp
sbb
addl
loopne
cmp
aaa
xor
rcrb
rorb
add
subb
add
lcall
lret
cmc
fnstcw
pop
lds
cmc
insl
push
add
pop
xor
or
cltd
fisttpll
dec
xor
sbb
in
test
mov
cmp
into
push
test
imul
mov
inc
xlat
shll
inc
xchg
cltd
mov
fnsave
xor
popa
sbbl
aad
ret
shrl
pusha
mov
aaa
outsb
and
in
repnz
sub
sub
je
push
add
lahf
sbb
and
jno
pusha
outsl
std
pop
sub
gs
ljmp
cltd
pop
divl
test
mov
mov
or
add
jl
shrb
sbb
and
pop
jle
sbb
fs
popf
inc
jle
dec
push
shll
loop
xchg
jnp
push
shrb
cmpsl
add
inc
xchg
test
outsl
out
mov
cmp
or
sub
dec
nop
movsl
push
pushf
dec
scas
sub
aaa
dec
js
mov
mov
dec
and
jg
pop
movsb
pusha
sbbl
push
pop
ja
add
insl
addr16
dec
push
pop
loopne
movsl
or
std
out
push
or
loopne
data16
jno
jp
test
in
addr16
sahf
enter
mov
andl
cmp
inc
cmp
xchg
dec
xor
cltd
sbb
jno
scas
sub
dec
repnz
cld
xchg
jle
inc
das
jbe
mov
cmpsb
push
add
jo
aaa
test
int
push
jl
clc
push
push
jnp
fcomps
cwtl
fsin
loop
dec
dec
mov
jp
pop
jp
add
mov
inc
push
iret
xchg
lea
cmp
dec
mov
xchg
mov
dec
push
es
addb
mov
inc
push
mov
lret
fistpl
jle
cmp
sbb
sti
jno
das
lcall
sahf
sahf
mov
pop
add
gs
or
sbb
call
outsl
into
push
mov
data16
push
fsubrs
sbb
sub
or
fyl2xp1
add
adcl
mov
lret
pop
cmpl
xchg
cli
and
fistl
xchg
pop
lds
rorb
sub
mov
or
inc
mov
pop
xchg
outsb
cli
xchg
subl
es
inc
addr16
mov
jb
movsb
shll
fidivl
jnp
mov
and
int
jns
ds
pop
mov
imul
xchg
clc
pop
pop
mov
sub
fstps
jo
enter
mov
cmpsb
mov
inc
push
popa
jns
mul
sti
mov
movl
daa
and
add
cwtl
test
mov
scas
dec
hlt
or
lea
pop
jns
sbb
into
fmul
jae
pusha
mov
push
jnp
test
mov
push
xchg
div
sub
pusha
or
cltd
bound
out
jne
pop
enter
mov
pop
push
push
and
cmp
pop
mov
xabort
movsb
rcrb
clc
pop
inc
sub
mov
fistl
cmp
shl
cmp
add
cltd
mov
cltd
sub
xchg
adc
stc
cli
mov
jecxz
adc
mov
sub
mov
sub
iret
or
mov
rol
cmp
int
fdivr
cmpsl
insb
insb
xlat
aam
and
pop
insl
jno
ret
pop
sti
shrl
in
mov
fbstp
rcr
mov
pop
imul
in
cli
mov
mov
pop
les
cmp
inc
lahf
mov
xchg
jecxz
inc
enter
mov
lds
adc
xchg
mov
stc
sti
imul
movsl
push
mov
je
fisttpll
movsl
pop
xchg
mov
push
inc
loopne
je
pop
xor
cmp
daa
xor
icebp
sbb
mov
aas
mov
ds
dec
fcoml
lret
cli
xchg
std
sub
ljmp
mov
das
addb
rorb
sbb
mov
hlt
xchg
mov
in
mov
and
push
ret
xchg
add
xchg
imul
mov
icebp
and
dec
jl
pusha
popa
push
mov
cmpsb
mov
insl
mov
ret
mov
and
mov
aad
mov
push
xor
lds
loopne
cld
inc
sti
loope
add
mov
xchg
jmp
jmp
sysret
in
adc
out
divb
pop
mov
imull
mov
bound
xor
pop
xchg
icebp
cmp
xor
std
or
cmp
shll
fmull
ljmp
bound
xlat
cmc
mov
jecxz
jae
icebp
or
dec
add
xor
pusha
je
pop
inc
add
cwtl
es
pop
cwtl
add
sub
ljmp
fwait
adc
dec
decb
rolb
loopne
pop
mov
out
sub
jo
stos
pop
pushf
int
jp
push
leave
push
cmpl
int
enter
xor
mov
sub
sub
mov
add
sbb
push
xchg
das
cmp
in
adc
or
mov
mov
incl
pop
pop
xor
mov
mov
mov
mov
rol
pop
sbb
cmpsb
push
sahf
fbstp
pop
push
add
xlat
shrl
mov
cmp
pop
sub
out
push
sti
outsl
xor
movsl
jmp
mov
sti
cmpsb
das
test
mov
ljmp
insb
into
lret
imul
inc
sub
dec
gs
sbb
aas
lods
dec
clc
sbb
ja
xchg
add
data16
dec
dec
add
adc
jmp
mov
or
mov
in
inc
ja
popf
mov
popf
lds
or
movsl
xor
rcr
adc
mov
pop
push
int3
bound
mov
xchg
pop
mov
fsts
sahf
inc
movsb
inc
pop
xor
jg
rcrb
cs
subb
mov
adc
jo
inc
cmp
cmp
lods
aad
fsubl
mov
sbb
dec
cmpb
push
adcl
cmpsb
mov
mov
pop
lds
or
outsb
inc
mov
lahf
ret
lret
shlb
jl
jno
sub
cmp
mov
or
dec
andb
inc
loopne
pop
or
jns
test
sub
jmp
andps
add
fwait
nop
xor
dec
mov
call
and
jecxz
enter
lea
mov
shll
jae
aam
ror
mov
cmp
cwtl
adc
and
adc
mov
sub
pop
popf
pushf
push
push
xchg
inc
push
lret
and
into
es
xlat
inc
sbb
fmull
mov
mov
xlat
dec
fistl
dec
mov
roll
fdiv
pop
push
inc
cmpl
and
xchg
fbstp
jne
arpl
and
lods
jp
incb
cwtl
loopne
or
ficoml
adc
mov
and
dec
pop
or
xlat
sti
fildl
ret
jecxz
inc
ret
ret
rolb
mov
xchg
jle
lods
lods
jge
jl
test
mov
mov
sarl
stos
jl
and
xchg
lahf
adc
fcomi
rorb
pop
aaa
dec
aaa
push
jle
cltd
inc
test
ficoml
pop
bound
movsb
pop
mov
int3
push
inc
call
cmp
inc
jmp
fwait
jnp,pt
xor
dec
testl
cmp
and
jns
test
push
adc
xor
aam
fdivr
xchg
in
or
push
testb
cs
in
ret
loopne
add
dec
jnp
faddl
adcl
stos
insl
mov
xor
sbb
jecxz
ljmp
aam
shlb
push
mov
mov
xchg
ret
ror
int3
cmpsl
lret
cmp
in
adc
or
push
mov
out
pop
sub
ja
mov
mov
repz
loopne
mov
push
jno
mov
into
sbb
xorb
xchg
pushf
repnz
fxch
push
jl
jp
ds
jns
test
fsubrs
out
cmp
in
xchg
xchg
mov
add
add
int3
lea
push
or
shrb
dec
jne
cmp
fnstcw
sahf
aaa
iret
pop
adc
mov
mov
lret
jl
ds
fstl
xchg
movsl
ret
scas
lds
pop
sbb
popw
in
les
jecxz
pusha
jp
inc
lds
mov
cs
xchg
lcall
mov
test
bound
or
mov
aam
notl
movsb
mov
sahf
test
xor
nop
les
add
stc
mov
add
pop
sub
jne
lcall
cmp
fsubrs
push
lods
sbb
iret
popf
mov
lock
gs
xchg
jb
push
aaa
sub
cwtl
and
xor
mull
loope
int
out
movsb
mov
enter
inc
pop
repnz
cmc
cmp
mov
rcr
lret
or
lcall
cld
andl
jnp
cld
pop
dec
or
int
decl
jle
mov
push
rcrb
ss
scas
fidivrl
loopne
add
xor
pop
fwait
iret
mov
cmp
pop
cld
test
jl
iret
jb
sbb
out
xor
push
in
jmp
call
movl
jg
cmp
ja
xchg
inc
dec
pop
mov
push
mov
or
mov
rolb
into
das
imul
inc
ret
pushf
or
xchg
int
cmp
pop
mov
je
daa
pop
loope
jb
clc
nop
adc
fsubrp
add
ret
ret
and
enter
inc
cmc
jmp
insl
push
data16
sub
test
lcall
or
popf
stc
rcrb
imul
into
stc
adc
sahf
fidivl
lock
inc
jp
je
scas
out
addr16
int3
add
popf
call
pop
cmp
xor
fidivs
or
jns
orl
aaa
pop
push
dec
inc
in
sbb
adc
and
jge
mov
push
in
sub
mov
cmc
lahf
aas
aad
outsl
adcb
dec
icebp
mov
cmpsl
or
xor
mov
jecxz
fadds
mov
int
fisubrs
in
jb
fstps
push
sub
jb
sub
mov
int3
mov
inc
gs
lret
bound
out
aaa
in
iret
push
mov
inc
rcll
stos
cmp
das
jbe
mov
fisubs
sbb
sub
stc
cmp
pop
es
xchg
stos
subb
mov
fwait
sub
sbb
sbb
pop
cmc
xchg
pop
sbb
xor
popa
and
add
cld
add
test
cmp
pop
xlat
loope
lcall
cmp
or
mov
mov
dec
mov
push
es
jg
push
mov
add
test
addl
sbb
mov
mov
push
xchg
pop
mov
push
movsl
jecxz
xchg
pop
pusha
lods
inc
movsl
adcb
and
inc
testl
shll
jnp
js
ret
push
jnp
xor
subb
fwait
xchg
pop
xchg
es
push
jecxz
std
loope
sbb
mov
dec
add
push
fdivl
insb
test
fwait
imull
outsb
int
xchg
repnz
xor
jl
inc
pusha
pop
push
cmpsl
mov
addb
adc
xchg
add
pushf
sti
mov
jge
mov
push
mov
ljmp
jmp
into
jb
jo
sti
dec
das
in
aad
outsl
sbb
pusha
push
ds
repnz
pop
incb
push
cld
hlt
inc
adc
adc
sub
popf
scas
inc
es
cltd
cwtl
es
shrl
add
push
add
inc
xor
js
in
inc
into
js
dec
xor
pop
dec
push
repz
clc
inc
je
mov
test
call
add
ret
xor
xchg
addr16
fstl
adc
popf
xor
fcomi
jb
dec
mov
sbb
int
and
push
fisubs
imul
shrl
pop
xchg
mov
adc
mov
mov
mov
shl
lods
add
shrb
sbb
ljmp
cmpsl
inc
xor
pop
iret
das
leave
xor
jmp
pop
pop
rolb
and
xchg
push
imul
pop
lret
and
out
ficomps
in
outsb
cli
jmp
mov
addl
aam
shrb
fucomi
inc
es
das
mov
insl
cltd
fcoms
xchg
push
mov
dec
sbb
sahf
rcl
pop
xlat
adc
mov
imul
cmp
cmpb
sub
gs
push
pop
xor
inc
adc
mov
mov
xchg
fucomp
insb
lahf
pop
movb
in
test
add
push
subb
aas
mov
xor
jge
addl
pop
fwait
xchg
pop
adc
cmc
ss
mov
pusha
sti
cmc
pop
sub
pop
add
lock
cs
adcb
xchg
push
cmp
mov
cmpsb
mov
mov
cli
lea
mov
fcmovne
and
inc
inc
dec
jo
cmp
gs
adc
fiaddl
inc
std
inc
cwtl
and
dec
fchs
jno
sbb
mov
out
rorl
jle
ja
inc
pop
sub
mov
out
aad
inc
stos
rcrb
call
in
dec
sbb
shufps
andb
into
nop
sahf
xchg
jmp
movsb
push
int
daa
mov
sub
sbb
or
popa
add
push
inc
shr
fidivrl
out
push
int3
popf
ret
jge
and
shlb
mov
sub
cmovle
inc
and
push
dec
jnp
push
testb
movsb
insb
xchg
lahf
ja
jmp
pop
inc
mov
push
insb
cmp
add
daa
test
cmp
sahf
jg
lret
clc
mov
lcall
and
dec
push
and
mov
in
js
adc
ds
lret
xchg
push
cmp
jb
inc
je
loopne
mov
xchg
gs
insb
pop
and
xchg
fs
enter
lods
mov
les
nop
xor
in
mov
mov
ja
sbb
pusha
sub
inc
xchg
xor
pushf
bound
mov
pop
test
cmp
fimuls
ss
inc
scas
call
movsb
dec
add
loope
mov
sbb
push
fisubl
mov
iret
mov
sub
mov
jecxz
dec
aas
into
outsb
mov
rcll
nop
mov
cs
add
iret
test
inc
push
movsl
cmc
mov
ja
jl
mov
fs
loope
mov
mov
jp
push
push
pusha
lds
mov
jbe
sar
shrl
push
sti
or
push
punpckhbw
mov
jp
out
push
xor
test
push
inc
push
push
inc
inc
sbbb
cmp
pop
out
out
or
mov
call
inc
or
push
push
nop
mov
sbb
inc
call
mov
mov
jmp
or
adc
cmp
pop
jbe
scas
fsubrl
xchg
add
or
aaa
outsl
inc
fbld
gs
sbb
outsl
sti
pop
xchg
push
xchg
nop
push
scas
and
hlt
dec
mov
aad
test
subl
mov
fldl
pop
mov
je
je
cmpl
jp
je
mov
fists
test
jmp
ljmp
dec
mov
icebp
inc
fnstcw
sbb
iret
mov
dec
push
push
andl
jg
xor
dec
das
pop
xor
pop
push
loop
das
xor
push
cmp
fcmovu
stc
and
xor
daa
cs
sbb
jno
icebp
adc
aas
subl
sti
add
ret
mov
sbb
cli
mov
and
pop
stos
and
arpl
xchg
pushf
and
dec
loop
scas
sarl
cmpsb
test
outsl
test
mov
adc
lea
pop
mov
cld
inc
lea
jo
dec
cmpl
push
ds
adc
repnz
or
repnz
jae
dec
mov
adc
gs
aas
push
or
and
lahf
aas
outsb
imul
into
iret
in
lods
or
enter
push
mov
xor
push
cmp
out
mov
incl
jl
xchg
or
inc
addr16
push
lahf
mov
pushf
imul
int3
dec
and
mov
push
negb
scas
out
pop
les
jg
pop
stos
push
xor
inc
dec
add
lods
test
imul
push
hlt
aad
decl
jo
jl
dec
repnz
fldt
xchg
mov
repnz
jp
jbe
xchg
mov
or
mov
add
sarl
xor
imul
sbb
mov
test
mov
mov
sbb
dec
xchg
lods
aaa
mov
lret
cmp
insb
add
repz
shlb
mov
cs
adc
adc
mov
xchg
xchg
fucomip
adc
mov
sub
lds
inc
imul
aam
or
jg
cmc
test
cmp
mov
aas
lcall
mov
push
insb
iret
adc
mov
repz
fisubs
mov
pop
pushf
sarl
in
repnz
add
pop
sub
call
in
jg
dec
fmull
jle
and
pushf
icebp
pop
push
xchg
daa
xorb
pop
or
pop
push
pop
pop
xchg
sub
pop
adc
pop
out
lds
and
enter
lret
add
inc
loop
mov
ss
bound
mov
je
or
dec
add
pusha
ds
outsl
dec
mov
jne
and
mov
sahf
lds
out
movsb
cmp
mov
adc
lcall
cmpsb
lret
xor
inc
rcll
dec
mov
lret
outsl
inc
aad
dec
pop
jnp
ret
pop
in
lds
sub
fstps
repnz
out
mov
adc
xchg
mov
iret
sbb
push
jmp
enter
aas
xchg
dec
mov
test
insl
cmpsl
push
pop
and
fcompl
sbb
sbb
and
fs
mov
xor
mov
mov
lahf
inc
inc
dec
repnz
jnp
push
ficompl
leave
inc
xor
stc
icebp
mov
pop
loope
aaa
cltd
sbb
ljmp
stos
sbb
jmp
xchg
xor
pop
pop
leave
andl
mov
pop
rol
cmpsb
lcall
push
sub
out
ja
mov
or
mov
ds
stos
push
add
aas
lahf
popf
mov
lcall
test
inc
es
mov
inc
rclb
or
and
test
movsl
add
xchg
push
loope
push
mov
sub
cmp
clc
shrb
or
adc
movsl
jb
repz
rcrl
mov
popf
push
inc
enter
mov
dec
mov
inc
ja,pn
mov
push
outsl
inc
inc
pop
dec
adc
rorb
sbb
mov
inc
icebp
aam
add
push
repz
push
xchg
arpl
ja
adcl
mov
shlb
rcr
jo
and
rorb
dec
lcall
stos
cmpsl
jle
xor
xchg
sub
pop
sarb
test
cmp
mov
push
adc
out
dec
cs
mov
dec
arpl
inc
dec
shl
inc
mov
cmpsl
aad
and
out
das
das
mov
test
push
xchg
sbb
pop
push
gs
push
dec
repnz
pop
out
fbld
mov
push
mov
std
mov
xchg
jl
sbb
js
pop
xor
and
cli
mov
je
mov
ror
pusha
mov
cld
ja
pop
daa
push
aas
scas
lods
ret
push
pop
mov
imul
cwtl
lods
xlat
jg
push
repz
sti
push
and
push
mov
cld
lret
adc
dec
mov
flds
fcoml
or
cmp
ja
xchg
lds
mov
rorb
sbb
cltd
xchg
les
outsl
and
add
fnstsw
bound
cmp
push
xor
out
add
xlat
iret
test
cs
or
ja
mov
cmp
stc
or
push
aad
sub
cmp
sub
mov
lret
div
sbb
mov
mov
add
repz
xor
cltd
adc
xchg
je
mov
mov
sub
stos
and
push
iret
mov
lret
inc
mov
dec
loope
sbb
dec
cmp
mov
stos
stc
or
xchg
clc
xchg
add
mov
or
data16
push
mov
mov
inc
aaa
ljmp
add
fidivs
mov
rol
and
dec
lods
popa
loop
xchg
xchg
xorb
loop
shlb
ret
jo
lods
pop
xor
daa
pop
push
out
clc
adc
adc
mov
in
fsubrs
bound
pop
push
and
sti
push
sbb
and
ljmp
push
inc
ljmp
add
nop
cmpsl
bnd
jmp
adc
sub
push
notb
adc
ja
out
push
cmpsl
push
mov
pop
nop
xchg
dec
test
lds
adc
mov
inc
jb
icebp
pop
jne
mov
mov
in
out
sbb
clc
pop
out
mov
sarl
adc
fdivr
xchg
mov
pop
mov
mov
mov
pop
iret
mov
out
inc
test
lods
mov
ljmp
and
mov
rcll
stos
dec
push
icebp
xchg
and
int
es
pop
rolb
xchg
or
mov
sbb
or
sub
in
pop
or
negl
int
cwtl
inc
cmp
in
js
pop
fisubl
pushf
xchg
add
jg
sub
inc
fcoml
les
mov
adc
orl
pop
pop
xchg
out
pop
jno
jmp
mov
lret
ja
in
and
xor
push
or
ret
clc
sub
xor
jmp
aam
sbb
movsb
jmp
loope
pop
lds
push
test
adc
mov
lcall
rcrb
outsl
add
aas
out
pusha
scas
dec
inc
push
sub
xor
pop
inc
roll
mov
je
mov
fldenv
bound
adc
das
mov
pop
xchg
xor
sahf
shrb
sbb
and
xchg
cs
cwtl
inc
dec
fdivs
adc
shll
mov
dec
cmpsl
in
lds
and
bound
dec
ret
cmp
jmp
cmp
dec
jae
push
addr16
adc
dec
lahf
and
xchg
xor
mov
test
dec
fstpt
jns
addr16
jno
outsl
hlt
sub
mov
xor
aam
ret
mov
push
dec
cli
lods
xchg
pop
lock
in
add
test
in
inc
call
dec
aam
sub
mov
cmc
mov
icebp
lods
or
popa
mov
push
or
loopne
xchg
pop
xlat
jns
nop
icebp
ds
pop
xor
add
stc
xchg
outsl
dec
daa
jge
in
mov
cmpb
lds
test
add
imul
pop
jnp
sti
xor
out
lcall
add
pop
jmp
xor
add
or
xor
xchg
pop
pop
in
xchg
jmp
cmp
inc
ret
mov
movsb
fsts
mov
xchg
mov
add
sbb
imull
cld
push
test
jmp
push
push
test
xlat
orb
fld
imul
hlt
dec
xor
fidivl
push
nop
xchg
iret
pusha
faddl
fs
xchg
pusha
nop
add
ds
sub
mulb
mov
xlat
inc
inc
mov
mov
mov
aam
sub
ss
enter
mov
jp
in
mov
sub
inc
arpl
dec
mov
sahf
adc
mov
daa
fisubs
out
push
in
sbb
push
lock
and
sub
loop
mov
inc
cmc
ljmp
mov
les
lret
mov
or
mov
dec
push
sti
sbb
inc
jnp
push
fs
mov
out
fimull
loopne
sub
add
xlat
push
and
imul
dec
std
and
mov
mov
popa
movsb
repz
pop
mov
xchg
fcompp
adc
add
addr16
int
mov
subl
enter
jle
mov
adc
and
mov
lock
je
mov
test
cmp
inc
sub
pop
mov
cld
popl
mov
or
ret
or
imul
jp
movsl
pop
pop
jo
xchg
xor
add
lahf
push
cli
mov
and
jne
adc
in
xlat
clc
int
lret
fidivrs
cmpsl
xchg
mov
ja
mov
int3
movsb
dec
xchg
xchg
sub
push
sti
sub
sar
cmp
ret
enter
xor
imul
mov
shlb
pop
sub
jg
add
mov
xchg
arpl
cmp
and
jg
pop
je
inc
fnsave
aaa
push
adc
imull
or
fiaddl
mov
pushf
inc
xor
or
dec
mov
inc
lret
sahf
mov
repz
adc
lcall
aad
rclb
ds
pop
imul
jbe
rorb
adc
inc
std
std
jne
cs
dec
data16
sbb
mov
and
arpl
mov
xchg
mov
jo
movsl
repnz
loopne
adc
repz
xchg
fwait
aas
roll
in
sbb
cmp
test
inc
lods
es
sbb
jg
xlat
jl
mov
stos
sti
notl
xor
iret
aas
mov
mov
cmp
mov
cld
clc
push
test
jl
push
gs
xchg
mov
or
mov
cwtl
jmp
xchg
jmp
loopne
lahf
mov
aam
dec
push
pop
ss
push
inc
cld
lret
icebp
jecxz
xor
sarl
jge
dec
sbb
sbb
pop
and
xor
push
test
hlt
mov
push
cmpl
idivb
jae
pop
xor
jmp
jno
ret
shrl
xor
cli
scas
jg
lret
inc
add
fsubl
sbb
ss
xor
and
sbb
cmp
lret
push
call
jge
xchg
xlat
cmp
dec
out
hlt
sbb
shr
cmp
xchg
jnp
ss
js
sub
fcoms
js,pt
ret
lahf
inc
loopne
rcl
ja
roll
pop
outsl
inc
pusha
mov
jb
shl
sahf
sahf
push
pop
sarb
sub
adc
mov
mov
jle
ffree
mov
pop
xor
mov
pop
rorb
inc
inc
push
jbe
sbb
lret
dec
and
xor
or
std
and
mov
xchg
adc
fimull
dec
fsubrl
jg
fidivrs
dec
divl
ret
inc
sub
or
rclb
pop
outsl
sub
sti
pushf
test
or
rorb
cs
mov
mov
add
push
icebp
push
push
lcall
jmp
aas
xchg
aas
and
test
push
push
jbe
mov
or
lcall
sti
inc
mov
out
lahf
mov
movsl
cmp
dec
xlat
inc
mov
cmpsb
push
pop
xlat
cmpsb
sarb
imul
lcall
cli
outsl
jg
enter
xor
sbb
mov
dec
mov
push
pop
xor
dec
add
notl
mov
add
fst
xchg
mov
adc
sub
orl
les
jge
lock
out
xchg
arpl
cld
pop
mov
stos
lock
pop
out
jns
popa
loopne
lahf
cltd
jno
rclb
push
shll
jl
movsl
cli
sub
jl
inc
in
add
adc
gs
xlat
add
cmpsb
cmp
xor
test
mov
xor
aas
and
pop
push
xor
fidivrl
shlb
cmp
mov
jb
pop
std
data16
and
mov
adc
cmp
testl
icebp
das
pop
nop
push
sub
addr16
dec
lahf
cli
or
jb
in
jmp
cmpsb
push
aaa
mov
push
outsl
arpl
xchg
inc
or
push
jbe
movsl
pop
repz
aad
xchg
add
hlt
jg
stos
pop
in
mov
inc
les
sbb
cmp
punpcklbw
cld
push
add
dec
ret
or
inc
push
or
dec
mov
fwait
mov
negl
adc
cltd
cmp
rcrb
in
xchg
jns
ljmp
pushf
jo
icebp
mov
adc
bound
lds
mov
push
xchg
filds
mov
mov
dec
push
jecxz
shlb
jae
push
into
ljmp
loopne
pop
in
or
push
nop
cmp
in
xchg
xchg
xor
and
in
sub
dec
sub
icebp
test
sub
in
cmp
daa
mov
pop
lret
imul
mov
addr16
arpl
gs
rorl
loope
and
jb
push
dec
insb
addl
addb
push
sbb
outsl
pop
movsl
aad
dec
mov
inc
frstpm(287
dec
fimuls
test
or
jne
xor
ja
jp
loope
add
in
aam
lock
push
push
push
roll
dec
clc
ss
fnstenv
adc
bswap
loope
mov
or
leave
sub
jnp
pop
pop
jle
push
or
je
rcrl
and
lret
stos
leave
and
and
rorb
jp
push
mov
pop
sbb
cmp
aas
outsb
mov
pop
popa
jle
mov
push
sbb
and
pop
repnz
enter
mov
adc
stos
adc
movsb
xor
test
cmpsw
push
cld
scas
sbb
mov
jae
inc
rorb
push
rcll
xchg
dec
mov
popa
mov
int3
imul
stc
jnp
cld
int
repnz
scas
shl
xor
nop
mov
xchg
pop
js
add
jg
incl
hlt
mov
jmp
gs
mov
ljmp
mov
icebp
cmp
add
daa
std
push
hlt
rorl
out
dec
sbb
test
jne
sub
sahf
fdivr
or
mov
cmpsb
rolb
mov
jp
fsts
or
fcmovnb
pop
jb
sub
mov
or
mov
adc
jb
mov
hlt
adc
sbb
xor
mov
add
pop
mov
and
pop
pusha
or
cmp
gs
repz
mov
popl
cmp
aaa
xchg
scas
scas
mov
inc
pushf
mov
in
leave
mov
in
notl
cmp
aad
rcr
xor
addl
movsb
outsb
in
lret
xor
xor
mov
stos
cmp
mov
sub
pop
sub
or
jmp
jl
inc
inc
out
add
add
scas
add
jle
decl
xor
sbb
call
mov
pop
ja
dec
xchg
arpl
ret
les
mov
in
sub
cwtl
push
sub
test
jmp
int3
ss
jg
add
addr16
xchg
dec
mov
and
or
lcall
iret
push
fucom
out
xor
inc
push
inc
lds
mov
insl
push
xor
sub
add
lret
jbe
jle
aaa
pop
pinsrw
or
enter
adc
std
lahf
mov
pop
xchg
push
push
sbb
sub
mov
pop
push
cmp
dec
rorb
sahf
sub
xlat
push
dec
nop
add
in
push
cmpb
cld
push
hlt
xchg
and
repnz
or
lods
and
mov
pop
sbb
mov
jae
push
lds
icebp
stc
out
pop
test
jae
mov
sub
pop
xor
add
mov
sub
and
cwtl
push
mov
insl
mov
dec
cmpsl
fwait
shlb
or
push
jmp
iret
bound
adc
push
nop
or
inc
mov
je
jae
lods
push
and
push
pop
xchg
mov
inc
shrd
xchg
xchg
mov
dec
xchg
fcoms
xchg
stos
sub
xchg
mov
enter
push
fnstcw
mov
int3
int
test
out
xchg
cltd
and
test
mov
inc
fisubl
ror
lods
or
cmp
adc
ljmp
loope
jg
dec
mov
cmp
inc
adc
dec
cwtl
mov
popf
cmpsl
out
js
jl,pn
test
mov
aaa
sub
insb
lds
shlb
pusha
and
insl
in
lahf
inc
dec
insl
ja
dec
rcl
jo
lcall
aaa
stc
fcomps
cmc
fdivp
mov
aam
aad
dec
js
inc
adc
popf
sub
repz
jle
sbb
cmp
movsl
pop
sarl
imul
and
and
scas
jle
lcall
inc
mov
lock
xchg
mov
shrl
dec
outsb
aam
dec
fnstcw
push
add
incl
sarl
mov
pop
or
iret
xchg
mov
lahf
out
fcoms
mov
lahf
and
dec
fstpl
ds
and
push
into
sub
dec
sbbl
rolb
xchg
sub
xor
lcall
rcrb
shl
mov
and
jg
jb
adc
test
test
scas
xorl
sbb
addr16
jle
pop
imul
pop
int
jle
mov
in
or
push
sbb
pop
nop
adc
inc
fnstcw
cmp
adc
dec
jmp
xor
inc
fisttpll
mov
inc
out
scas
jmp
cmp
pop
add
sbb
cmc
lods
add
sbb
dec
adc
scas
repnz
stos
sbb
leave
push
jno
leave
adc
adc
fs
push
ss
loopne
mov
xchg
int3
jmp
mov
sbb
rolb
cmpsl
sti
jno
dec
push
scas
imull
cmp
cld
ret
mov
call
pop
mov
mov
jecxz
or
add
loope
cs
xor
cmp
push
and
cmpsb
js
xor
jns
mov
jp
loope
fs
cmpsl
add
mov
cmp
sbb
insb
mov
imul
pop
inc
test
and
insb
jb
sub
stos
jmp
fsubrl
mov
and
add
fldt
and
lods
mov
inc
cltd
mov
call
mov
es
xor
icebp
fdivr
pop
test
mov
pop
cmpsb
jecxz
mov
lcall
pop
daa
stc
or
jbe
xor
psrlq
push
xchg
imul
push
ss
add
or
mov
bound
ljmp
adc
sbb
loopne
das
sbb
enter
in
xchg
push
enter
pop
lds
xor
cmpsb
in
sub
xchg
addr16
dec
adc
adc
fldl
popf
and
test
fadds
mov
dec
push
cmp
cmpsl
outsl
mov
fs
jnp
stos
fnsave
daa
arpl
jno
xchg
je
mov
xor
stos
push
pop
sbb
lret
sub
jmp
test
or
push
xor
and
adc
fwait
adcb
into
mov
push
xchg
mov
sbb
cmp
ds
jge
out
insl
scas
or
xrelease
pop
xor
inc
sbb
js
popa
xlat
mov
mov
mov
dec
mov
mov
add
xlat
ss
pop
push
cs
jle
jnp
ja
enter
sti
outsl
xchg
cs
dec
mov
ret
scas
dec
cmp
lcall
in
push
mov
imul
adc
xor
jge
int3
mov
pop
pop
test
adc
xchg
addb
les
xor
pop
mov
popa
cs
mov
insl
mov
in
lret
sbb
mov
aam
mov
adc
xlat
xor
outsb
hlt
aaa
mov
insl
aaa
mov
scas
in
dec
dec
xchg
mov
sbb
lods
xor
leave
fsts
movsl
mov
lods
inc
cli
lods
cwtl
jae
loopne
scas
lahf
fbstp
or
adc
inc
popf
insb
divl
xor
xor
cwtl
cmp
sbb
jmp
repnz
call
in
dec
mov
test
fildll
test
out
add
or
mov
add
adc
into
loop
and
sbb
fsubl
mov
mov
push
xchg
inc
xor
cmpsl
mov
inc
jp
stc
mov
inc
xor
ret
mov
or
jp
flds
addr16
je
lds
aaa
inc
add
inc
inc
aaa
mov
mov
jmp
lret
pop
addr16
inc
sbb
ja
jb
lahf
cwtl
xchg
out
out
repnz
mov
mov
push
xchg
popa
push
or
xchg
inc
addb
inc
pop
je
ret
and
dec
imul
adc
repnz
xchg
cmp
imull
adc
dec
sub
mov
adc
es
es
jg,pt
jl
xor
lahf
mov
fstl
nop
mov
xchg
pop
popa
pop
sbb
pusha
fsubrl
je
mov
negl
cmp
outsb
fsubr
mov
je
out
cs
sub
mov
push
bound
cmp
pop
notb
rclb
imul
and
inc
push
mov
das
fnstcw
loopne
xor
jbe
inc
mov
xor
pushf
cmpl
lret
xor
push
adc
adc
cmp
jle
mov
push
test
dec
pop
loop
adcb
jns
imul
bound
adc
jge
pop
adc
sbb
adc
inc
shll
push
rep
arpl
xchg
pop
sub
aam
or
loope
scas
xchg
inc
cmp
xchg
cltd
mov
inc
push
push
insb
xchg
std
jae
adc
inc
adc
inc
cltd
dec
rorb
push
lea
xchg
fldenv
jmp
stos
jae
rep
ja
data16
sahf
stos
daa
shlb
add
cs
test
sub
dec
loope
out
mov
jg
rcr
jmp
das
aad
cmp
rclb
test
pop
loop
push
adc
shll
jecxz
roll
inc
and
loope
lret
xor
imul
fdivs
daa
cltd
pop
pop
add
pop
mov
mov
xor
scas
and
mov
out
je
jecxz
xchg
mov
jl
iret
stc
xchg
adc
ja
mov
enter
mov
or
outsl
ds
dec
mov
iret
inc
subb
idiv
das
sub
enter
jb
ja
xor
jp
xchg
and
xchg
lods
in
out
sub
les
test
adc
cmp
mov
roll
pop
or
mov
jbe
dec
add
movsb
add
pop
adc
jmp
fs
jae
pop
mov
data16
insl
mov
mov
push
test
jmp
aam
adc
cmp
jecxz
sqrtps
add
bswap
inc
xchg
xor
sbb
popf
mov
into
aam
xchg
pushf
adcl
xchg
and
add
sub
adc
mov
leave
add
popa
push
movsb
push
jne
icebp
ret
aam
mov
fdivrs
lret
movsl
push
enter
or
scas
data16
push
xchg
xchg
or
pushf
sbb
adc
das
push
pushf
jmp
addr16
inc
xchg
andb
xchg
cld
out
outsl
out
sbb
loop
pop
int3
out
xchg
neg
lahf
push
cmc
jle
out
mov
add
push
loope
xor
xlat
les
pusha
sbb
lds
fildl
dec
mov
movsl
pop
ljmp
mov
xchg
inc
push
pop
sti
dec
in
int3
sub
hlt
sub
or
test
test
sbb
movsl
enter
jnp
jae
lods
dec
and
xlat
mov
pop
or
lahf
push
xchg
push
call
dec
mov
mov
aad
xchg
outsl
cli
shll
add
bound
jle
xor
mov
add
mov
xchg
test
popf
jl
popa
sahf
mov
mov
mov
pop
fs
push
lcall
add
push
iret
adc
pusha
lahf
adc
out
sbb
arpl
mov
xor
mov
pusha
and
cmp
cmp
sti
xor
fadds
xchg
inc
push
xchg
test
mov
inc
mov
mov
mov
sahf
cltd
add
rolb
inc
scas
jcxz
pop
test
mov
jmp
push
in
and
add
cltd
add
stos
out
mov
pop
and
or
add
lret
xchg
outsl
jp
xchg
shrl
ss
sub
or
flds
test
fiaddl
maxps
test
mov
xchg
mov
scas
sbb
mov
cmpl
fdivs
es
sarb
lock
pop
inc
lods
call
mov
movsl
or
xchg
arpl
mov
ljmp
xlat
sub
in
gs
fxch
in
into
mov
insb
mov
mov
adc
mov
sbb
sbb
mov
lret
cmc
cwtl
js
sbb
in
call
and
aam
scas
or
inc
cmp
push
cmp
sbb
je
sbb
mov
std
test
jno
mov
add
out
add
sbb
cmp
inc
imul
cmpsb
and
adc
data16
out
cltd
mov
push
inc
cs
sub
and
scas
cmpsb
push
cmp
sti
jp
mov
fdivrp
je
mov
out
sub
stos
clc
mov
popf
add
or
adc
pop
mov
pop
out
push
add
add
aas
lcall
rcr
les
es
aam
int
cli
mov
xchg
add
fidivl
sahf
test
data16
lods
out
jmp
push
lods
aaa
cmp
out
sub
nop
mov
sub
or
jecxz
cmp
jge
movsl
or
insb
lahf
jle
shr
lock
out
leave
out
mov
mov
fnstsw
iret
mov
push
inc
push
adc
sub
mov
popa
fdivrp
or
mov
lds
ljmp
push
out
nopl
les
push
rcr
xchg
je
aas
xlat
test
sbb
shlb
scas
inc
jmp
add
in
aas
sahf
fdivrs
imul
in
jne
imul
add
cmp
sbb
mov
fucomp
cmp
fisubs
inc
ret
scas
inc
rcll
sub
jecxz
sbbb
repnz
iret
js
dec
jbe
adc
jb
mov
xor
or
push
sub
mov
xchg
lahf
pop
push
jns
jge
xchg
jbe
push
lahf
adc
cltd
dec
ljmp
jns
insb
mov
push
mov
aas
mov
outsb
inc
xor
lret
lods
js
stos
cwtl
cmp
popl
test
repnz
mov
and
inc
pusha
xchg
push
negb
fwait
je
fcmovbe
repz
je
push
or
movsl
xchg
xchg
in
adc
lcall
loop
insb
add
and
jo
jg
aad
ljmp
insb
mov
xchg
mov
in
xchg
sbb
sbb
ss
fbld
pusha
mov
shll
xor
dec
gs
cld
nop
jae
ss
mov
dec
push
sbb
add
add
aas
es
aam
and
ja
inc
leave
das
fs
js
ret
pusha
pop
cmp
movsb
pop
xor
fs
rcrl
iret
mov
jae
popf
mov
add
mov
fwait
lcall
xorl
inc
inc
scas
pusha
hlt
sub
pop
jp
sub
sub
sbb
sbb
rcll
jnp
cmp
sti
xchg
jno
jns
das
movsl
push
das
adc
xchg
or
enter
jp
lea
push
in
push
dec
je
ljmp
mov
scas
out
inc
dec
sbb
xor
pop
xor
pop
stc
cmc
ss
outsb
or
dec
xchg
iret
mov
sbb
lods
mov
jmp
pushf
xchg
sub
imul
xchg
push
insl
mov
in
cmovp
push
mov
and
xchg
add
rep
push
push
xor
cmpb
rorb
out
test
in
inc
insl
add
mov
insl
aaa
sbb
scas
mov
inc
sub
push
xchg
jge
add
adc
scas
mov
lods
popf
dec
adc
rorl
and
push
mov
inc
in
enter
out
jb
shr
pusha
and
test
repz
sbb
cmp
jl
lock
add
jb
pushf
shlb
push
mov
or
je
xchg
testb
inc
pop
cmp
aad
and
push
pop
in
mov
into
xor
inc
mov
jmp
sahf
cmp
pop
adc
xor
cmp
dec
and
mov
ja
add
xchg
fiadds
sub
mov
aaa
adc
cmpsl
pop
sbb
and
mov
cmp
cltd
sbb
out
push
fstpl
iret
lret
ret
fxch
mov
outsl
in
dec
repz
jecxz
out
jle
test
imul
aaa
daa
mov
rcrl
xor
xchg
mov
aam
sub
enter
jl
sbb
dec
add
cmpb
lret
and
sub
push
jns
scas
and
jnp
addr16
popa
adc
inc
dec
testb
lds
lds
into
loop
cmp
mull
fildl
mulb
push
gs
inc
int3
mov
sub
jo
lahf
mov
or
jo
stos
pop
bound
hlt
push
pop
inc
xchg
stos
scas
sbb
bound
mov
aam
jb
inc
and
jge
pop
aam
push
shlb
mov
xor
cmp
leave
lret
push
out
sarb
or
pop
inc
stos
mov
cmpb
stc
push
cld
ds
test
push
mov
addr16
sbb
and
push
adc
add
xchg
xor
xor
andb
or
xor
and
pop
mov
mov
xchg
adc
add
or
inc
enter
mov
outsb
push
or
jecxz
mov
jmp
push
movsb
and
adc
cwtl
cmp
jecxz
pop
in
cmp
aam
mov
sbb
and
in
push
fwait
xlat
ss
fs
xchg
mov
xchg
xchg
repz
xor
addr16
pop
mov
mov
aas
pop
mov
cmpsl
popf
and
jnp
lods
les
enter
adc
mov
push
leave
cmpl
test
scas
push
scas
cltd
sti
icebp
sub
rol
mov
pop
push
orb
mov
es
in
xchg
test
insl
mov
sbb
bound
mov
pop
fistps
scas
mov
mov
dec
out
adcb
sub
call
loop
loope
pushf
std
jge
std
xchg
xor
mov
ss
cwtl
dec
into
push
jnp
xchg
daa
jbe
cmp
inc
es
jg
dec
out
dec
dec
xchg
mov
imul
lods
pop
xchg
and
pop
in
jg
mov
int3
std
inc
sti
pop
sub
push
xor
and
mov
ds
sub
test
lods
push
test
leave
mov
mov
mov
cli
addr16
xor
or
sub
ficomps
mov
movsb
cwtl
mov
shl
and
aam
fmull
aas
lret
jmp
dec
repz
shlb
ret
mov
shrl
xor
movsl
sbb
mov
aaa
sub
sub
fisttps
xchg
out
xchg
mov
sub
mov
imul
xchg
stc
loope
fidivl
adc
rcrl
jb
jmp
test
int3
inc
sub
insl
sbb
xchg
sub
cmc
repz
adc
mov
pushf
jno
inc
mov
add
mov
repnz
sub
movsl
stos
fisttps
mov
fisubl
dec
sub
sbb
xor
hlt
and
fwait
cmp
push
add
or
je
insl
pop
inc
testb
and
jge
pop
mov
push
fdivl
push
xor
rcl
fneni(8087
shrb
ret
or
xchg
int3
std
adcl
inc
sbb
mov
dec
and
ja
clc
jp
pop
xlat
dec
and
sbb
pop
decb
pop
cs
cltd
xchg
xchg
push
fdivp
xchg
pop
fwait
ja
aad
dec
jae
pushf
ja
rorb
sbb
cmp
stos
inc
mov
int3
xchg
gs
cmpsl
or
lds
xchg
test
xor
adc
xchg
mov
fsubrl
orb
imul
shll
xchg
xchg
jnp
leave
mov
stc
ljmp
sbb
xorl
aad
insb
cwtl
xchg
lcall
fs
cs
mov
jle
in
sarl
and
int
jg
dec
in
pop
add
int3
lods
les
cmp
repz
inc
ret
jo
jg
iret
insb
or
cmpsl
test
inc
addb
sub
ljmp
nop
sbb
mov
call
cmp
arpl
add
jle
jmp
or
call
outsl
fidivrs
xor
cmp
outsb
daa
clc
ljmp
mov
jmp
adc
sbb
stc
in
cmp
jno
or
imul
pop
mov
dec
cld
fnsave
mov
fmuls
mov
cmp
fistl
mov
jg
push
and
add
shrb
rclb
std
xor
push
pop
movsb
sahf
inc
add
xor
mov
int3
sub
cmp
roll
fsts
mov
ljmp
pop
testl
jbe
sub
sbb
sub
jo
les
adc
cmp
es
popf
aaa
pop
sbb
fcoml
and
aad
mov
xchg
rcr
adc
add
cmp
js
xor
xchg
jnp
lret
mov
add
loopne
xchg
cmp
es
pop
stc
leave
imul
mov
jae
jnp
addb
add
mov
int
test
push
mov
lods
jp
adc
dec
xlat
push
and
push
cs
xchg
dec
mov
sbbl
cmpsb
and
stc
mov
addr16
mov
rcll
jmp
pop
xchg
pop
frstor
in
dec
lahf
mov
adc
in
outsl
or
adc
je
mov
push
inc
inc
jge
mov
jnp
jo
movsb
sbb
repnz
cmp
add
les
mov
inc
push
pusha
sub
inc
in
in
dec
inc
sbb
mov
fisttps
cld
or
sub
or
mov
icebp
mov
jne
mov
aad
sub
cmpsl
jbe
ja
daa
jecxz
mov
out
xor
fwait
mov
movsb
int3
inc
jnp
sub
mov
adcl
xchg
mov
loop
fwait
push
test
cltd
stos
arpl
cmp
xor
adc
movsb
jnp
jno
movsl
orl
xchg
add
int
rcr
fcomps
xchg
aam
and
or
ljmp
pushf
adc
lea
mov
inc
lds
shl
sub
xchg
jl
scas
in
add
push
pop
sahf
mov
js
notl
int3
nop
sbb
inc
imul
cmpsb
lahf
mov
fs
pcmpeqb
enter
fdivrl
das
xchg
popf
inc
shufps
in
cmp
sbb
jmp
sbb
and
mov
clc
inc
xor
je
jp
xchg
xchg
addr16
das
inc
mov
cmp
ljmp
cmpsb
in
loop
aad
ja
das
inc
out
or
test
outsb
jae
fwait
push
push
ficompl
push
push
in
xchg
andb
xchg
and
scas
add
js
xor
sub
pop
adc
lret
cmpsl
iret
ss
sbb
push
sahf
cmp
fnstsw
inc
fbstp
sti
loope
je
cmpsl
push
shll
mov
adc
adc
adc
pop
out
adc
mov
dec
sub
pop
fidivl
jmp
hlt
inc
mov
dec
adc
add
push
out
loop
adc
popa
mov
in
aas
mov
push
or
sbb
xchg
enter
lret
pop
cmpsb
pusha
push
mov
aaa
push
mov
aam
ss
and
or
lahf
adc
fidivrs
jmp
je
fwait
enter
fildll
add
mov
sbb
outsb
xchg
dec
add
lcall
and
inc
push
sub
lock
std
sub
jne
frstor
sub
sub
and
cmc
push
pop
mov
cmpsb
xchg
pop
insl
sbb
fisttps
out
cmp
and
scas
rclb
jle
push
dec
xor
mov
dec
je
push
cmc
rdmsr
adc
push
or
outsb
add
out
pop
std
push
loope
ss
lret
cmp
andb
js
sahf
mov
mov
gs
ds
fdivp
hlt
test
jecxz
fcoml
adc
lds
cmp
fisttpl
push
or
jae
cmc
addl
inc
hlt
enter
xchg
sub
sahf
bound
push
dec
insb
dec
mov
cmp
jbe
in
push
mov
sarl
mov
push
rolb
push
fsubs
sbb
sti
testl
pop
cmp
fwait
add
test
push
push
xchg
sarb
out
jns
clc
adc
mov
mov
fcmovnbe
rcrl
jns
int
push
pop
jne,pn
leave
lcall
or
dec
mov
pop
hlt
hlt
movsl
pop
inc
sahf
int
sbb
cmp
jecxz
imul
mov
cmp
aam
pop
fistpll
adc
das
fistpll
repnz
mov
gs
push
rol
flds
inc
xor
and
jle
pop
mov
lods
mov
out
sub
push
adc
mov
out
dec
pop
pop
mov
bound
and
dec
hlt
imul
je
leave
les
pop
mov
mov
mov
add
mov
push
ret
mov
rorb
jge
sbb
aas
pop
dec
jle
lea
pop
mov
xorl
bound
das
adc
enter
imul
inc
fstl
push
sub
insl
mov
out
js
fadds
divb
outsl
xchg
cli
inc
and
adc
xor
arpl
jne
in
into
mov
pop
xor
test
or
imul
cwtl
repnz
push
pop
insb
in
sbb
clc
or
es
sub
dec
push
pop
incl
fmuls
les
push
int
or
testl
mov
push
cmp
into
aam
popa
loop
xor
push
jg
xor
sub
movsl
outsl
lea
fwait
or
push
in
test
in
faddl
push
pusha
repnz
in
fs
sti
cmpsb
pop
or
pushf
dec
iret
fisubrs
sbb
jge
daa
cmpsb
lods
xor
mov
jnp
std
cs
cmp
loopne
dec
inc
adc
or
or
inc
test
test
add
sti
and
fsubl
vphaddbq
mov
outsl
or
mov
mov
or
sti
dec
addr16
fcompl
ret
mov
nop
add
aas
adc
or
loop
repz
rcrl
out
xchg
sbb
mov
pop
mov
jmp
pop
jnp
scas
jns
sub
jge
insb
sahf
gs
mov
xchg
lea
ja
mov
ja
lea
repnz
mov
rcrl
out
jecxz
and
mov
cwtl
jnp
mov
push
iret
in
fldt
outsb
fdivr
cs
pop
iret
roll
ds
push
xor
lock
mov
and
and
sub
sub
cltd
add
clc
lods
push
icebp
adc
sbb
out
add
xchg
inc
adc
xchg
sbbb
mov
pop
mov
add
inc
xchg
pushf
adc
mov
popa
mov
int3
and
sbb
in
push
leave
and
inc
mov
leave
jbe
sub
pop
lret
cld
iret
call
pop
jp
fisubrs
sub
addr16
mov
adcb
dec
out
add
sbb
mov
xchg
mov
mov
out
cmp
cs
mov
push
adc
mov
add
rclb
cli
and
and
mov
push
mov
mov
insb
outsb
es
add
sahf
cmp
daa
xchg
adc
mov
in
adc
jmp
rolb
ljmp
mov
and
repnz
pop
sbb
jp
daa
nop
loopne
xchg
xchg
icebp
aam
lret
enter
mov
pop
rcr
mov
jge
int
fdiv
inc
sbb
jnp
pop
adc
aas
inc
adcb
push
or
xchg
pop
sbb
push
adc
shrb
and
inc
add
pop
jle
std
xchg
and
adc
popf
jge
rorb
sahf
flds
pop
push
outsb
insl
dec
inc
push
xor
jne
loop
faddp
lods
jns
arpl
pop
push
je
mov
loopne
ret
aam
push
sahf
gs
mov
movsl
pop
sarl
in
sub
popa
enter
ds
repnz
pushf
cwtl
stos
test
stc
lcall
sbb
push
pop
mov
out
cmpsl
lds
cmpsl
lods
sub
fisubl
or
loopne
addl
aam
cmc
or
sahf
cmp
or
adc
push
mov
repz
xor
scas
fadd
lock
subb
xchg
mov
sub
xlat
cmp
xor
mov
ds
inc
mov
adc
jne
fidivs
cld
inc
js
xor
cld
in
iret
pop
shl
neg
les
inc
mov
mov
mov
mov
insb
out
mov
xor
jp
shlb
repnz
mov
push
mov
cmp
pop
push
mov
adc
mov
add
mov
aas
imul
in
divl
xchg
sbb
adc
daa
mov
dec
adc
orb
test
hlt
mov
mov
and
jae
adcl
mov
sbb
clc
movsb
syscall
icebp
pop
outsb
dec
jne
sbb
int
xor
outsl
dec
pop
imul
push
addb
mov
cmpsl
add
cs
orl
dec
pop
pop
adc
adc
pop
mov
aaa
mov
mov
mov
loope,pn
sbb
fisttpll
and
das
subb
sbb
leave
lcall
into
mov
scas
rcrb
or
mov
xlat
es
jge
mov
loope
cmp
sbb
sbb
sbb
mov
nop
add
test
push
daa
dec
idivb
cmp
cmp
out
fdiv
fwait
mov
int3
push
xchg
sub
sti
test
cmp
xor
and
je
shlb
mov
imul
adc
mov
std
push
hlt
or
andb
loop
sar
mov
inc
push
ja
out
mov
mov
bswap
cmpsl
mov
lret
cmp
xchg
sbb
or
xor
pop
adc
scas
and
mov
movsb
adc
xchg
dec
data16
cmp
aad
or
mov
xorl
jge
in
arpl
mov
cmp
mov
mov
push
cmp
js
push
mov
inc
pop
add
sbb
xchg
cmp
cmp
lea
int
cmp
mov
cmp
ja
pop
jp
rorb
insb
and
lds
insl
cmpsl
adcb
sub
jecxz
sbb
enter
mov
push
shufps
loop
push
or
mov
mov
pop
test
decl
cmpsl
xchg
dec
cmp
fxch
inc
or
js
sbb
mov
ret
aam
ja
test
sbb
pop
popa
shrb
inc
test
out
mull
sbbl
rolb
push
dec
rorl
clc
or
je
pop
sub
cmpsb
and
pop
mov
pop
add
out
daa
mov
sub
maxps
xor
out
fld1
push
inc
cmp
orl
push
xchg
shll
ss
xchg
push
cmp
into
fists
or
mov
mov
into
xor
outsl
insb
pushf
imul
adc
jns
pop
dec
xchg
adc
aaa
inc
xchg
popf
lcall
lea
jle
je
cmc
or
mov
and
pop
xor
jbe
jg
fimull
inc
inc
lds
mov
or
test
mov
adc
cmp
gs
sbb
pop
xchg
and
cli
mov
in
or
mov
xchg
icebp
pop
fstps
out
inc
pushf
add
jno
in
fstpt
sti
sub
stc
xor
dec
movsl
mov
cld
arpl
push
mov
iret
out
add
add
sahf
scas
out
out
push
scas
shlb
mov
sub
shll
aaa
sbb
int
ds
std
sti
pop
lods
lea
pop
mov
add
xchg
scas
mov
dec
xor
and
std
mulb
mov
or
test
sahf
std
add
xchg
mov
jnp
or
ret
lods
dec
xchg
adc
add
insl
outsb
sub
add
sbb
inc
insl
pop
cmp
push
data16
sub
int3
sbb
int
enter
or
in
dec
leave
cld
movsl
pusha
hlt
cmp
cwtl
outsb
and
leave
jge
sbb
and
insl
nop
loope
les
out
lods
popa
dec
xchg
shll
jo
ja
xor
add
jne
jl
dec
std
jae
int
dec
jle
add
lods
sbb
push
aam
subl
loope
dec
jmp
out
mov
popa
or
stc
and
mov
arpl
xlat
mov
jns
std
or
jecxz
fisubrl
outsb
xchg
pop
int3
std
xor
cmpsl
sar
js
xchg
jmp
xor
mov
cmp
push
rclb
ja
gs
or
inc
cmp
faddl
sub
mov
mov
out
fisubrs
ret
mov
mov
data16
mov
enter
lahf
popf
std
ret
stos
stc
lds
hlt
sbb
cli
mov
push
fsubl
fdivp
dec
xchg
mov
cwtl
aam
es
add
into
lea
icebp
dec
incb
test
insl
mov
insb
jno
repz
and
sub
jbe
shll
or
mov
jmp
push
imul
inc
xchg
or
orl
loopne
stc
jno
mov
into
dec
jnp
add
jmp
shlb
fimuls
xor
lret
ret
xor
mov
loope
mov
jmp
test
jo
jle
cmp
jecxz
dec
push
mov
sbb
mov
idivl
or
pop
adc
loopne
movsl
movsb
aaa
adc
sub
cwtl
cmpsl
inc
cmpl
sbb
push
scas
xor
adc
iret
push
push
mov
in
pop
add
mov
push
xchg
shlb
into
push
cmp
xor
arpl
mov
cmp
pop
aaa
dec
jbe
cmpsb
sub
dec
xchg
andb
pushf
jl
sbb
sarb
or
push
outsl
ds
push
push
iret
jecxz
xchg
mov
mov
dec
loope
testb
dec
push
mov
push
pusha
imul
and
aas
jnp
add
xor
stc
push
jle
sbb
mov
inc
jle
lcall
mov
shlb
popa
pusha
push
scas
mov
inc
push
loop
sub
fnstenv
cmp
pop
inc
out
push
arpl
jnp
fcom
sbb
or
imul
test
notl
jns
xchg
in
cwtl
dec
push
pop
push
lret
or
leave
fs
test
mov
mov
cmp
loop
mov
in
lock
in
fdivs
sti
ljmp
imul
xor
jne
dec
shll
lret
dec
ds
jmp
cwtd
out
btc
jb
das
adc
mov
pop
lret
add
mov
sub
push
js
lods
push
out
rorl
or
in
or
xchg
pop
pop
jns
jge
dec
call
sub
shlb
dec
jecxz
pop
mov
sarl
or
imul
add
daa
insl
into
in
incl
lods
les
add
lods
pop
in
xchg
mov
mov
lds
ret
psubusb
test
scas
sbb
cmp
lock
aam
push
sub
push
inc
rcll
ss
popa
dec
jae
dec
test
loope
adc
push
std
fisttpll
and
jge
bound
mov
and
shlb
fdivl
dec
push
pop
je
mov
or
ds
sti
cmpsb
lds
mov
addr16
dec
add
jb
sub
in
pop
or
aaa
mov
call
and
adc
and
movb
das
bswap
dec
insb
hlt
int3
and
aam
mov
push
and
pop
lea
cltd
adc
push
adc
popf
int
leave
inc
mov
add
jg
dec
lods
cmpsb
ja
pop
leave
popa
popa
sub
pop
jle
push
adc
xchg
xchg
cmp
shlb
pop
lret
lods
das
subb
lret
xlat
movsl
call
fcmovb
xor
jecxz
shlb
loop
mov
rol
outsl
sahf
dec
pop
ss
mov
je
in
lds
cmpsb
imul
fstpl
fstpl
in
push
or
insb
repnz
push
pop
pushf
data16
ficompl
mov
out
cmc
xchg
dec
in
mov
addl
inc
sti
ljmp
mov
mov
add
cmp
ja
leave
popa
nop
push
sbb
or
cmp
adc
sti
xchg
in
and
mov
jecxz
pop
sbb
pop
mov
test
or
add
push
dec
mov
xchg
jae
xchg
div
cli
clc
push
and
inc
lahf
jae
outsl
lock
incl
shl
inc
cmpsb
enter
mov
mov
pop
hlt
xor
xor
into
pop
leave
aad
jge
imul
mov
ret
cltd
jno
jle
out
and
cmpsb
ljmp
dec
std
xchg
bound
xor
pop
jno
loope
imul
pop
cmp
out
fdivs
imul
inc
sbb
mov
inc
stos
ffree
push
test
push
jl
dec
orb
sub
xor
dec
gs
ss
mov
and
fs
aad
sarl
jmp
pop
stos
cmp
lods
popa
cmp
and
std
sbb
imul
push
std
lds
or
fwait
adcl
and
hlt
stc
xchg
adc
sti
xor
fcom
insl
mov
shll
mov
movsb
out
xchg
xchg
dec
xor
xor
inc
fadd
jge
sbb
push
pushf
mov
cmc
xor
mov
dec
adc
cld
push
cmp
mov
in
sbbl
fsubr
mov
sti
inc
out
jle
xor
or
sbb
hlt
inc
iret
xor
es
xchg
xor
das
pop
cltd
and
jo
dec
add
or
shrl
subl
push
xchg
mov
or
mov
and
int
insl
jns
jbe
movsb
insl
idiv
cwtl
scas
inc
imul
in
push
jo
cmc
pop
iret
xchg
inc
insb
sbb
pop
mov
pop
mulb
push
mov
or
ret
xor
adc
cmp
cmp
sbb
or
call
xor
sub
pop
loop
cmc
and
push
pop
pop
imul
in
fildl
push
inc
or
popa
out
push
add
or
push
fs
dec
sbb
jmp
pop
cmp
jl
in
jo
lock
dec
sbb
xchg
xchg
push
fcmove
push
mov
clc
shll
pop
loopne
mov
leave
les
fdivrs
adc
fsubr
pop
sub
sbb
lods
cmpsb
pop
adc
xor
mov
or
inc
jg
sbb
adc
shrb
jns
sbb
inc
fmuls
xchg
push
or
cmpsl
ja
rcl
sbb
aad
push
gs
xchg
dec
xchg
and
insl
or
aaa
fistpl
mov
fbld
sub
jae
inc
fsubp
and
sti
fsubl
mov
push
dec
aas
jne
fistl
push
add
xlat
pop
add
push
add
sbbl
addr16
sbb
fcomps
push
or
into
push
jmp
ds
add
inc
call
xor
outsl
add
mov
jo
call
push
pop
cli
out
lahf
imul
or
jbe
lods
push
or
mov
add
lock
movsb
jno
enter
ret
sub
pop
sti
mov
ja
scas
jp
test
call
lret
or
inc
add
std
dec
popf
incl
fsubs
loope
push
lods
pop
mov
jns
xchg
scas
test
and
into
addr16
stc
addr16
jne
inc
popa
sub
fstpl
inc
push
dec
pop
or
dec
dec
stos
mov
jb
jg
mov
imul
mov
xchg
mov
push
mov
or
ret
ljmp
add
lahf
cmp
sbb
cmp
xchg
cmpsl
xchg
push
das
arpl
inc
into
ja
push
mov
jno
pop
sub
paddsw
popf
cmpsb
jp
mov
cmp
mov
std
push
pop
mov
out
dec
mov
cmpsb
xchg
add
adc
or
cli
fimuls
popa
push
imul
mov
std
push
mov
popf
js
jp
adc
pop
sahf
jbe
aad
pop
lods
psubusb
ljmp
fwait
stos
xor
mov
sbb
cld
rep
xchg
out
repnz
insb
dec
jecxz
dec
loop
mov
cmpsl
das
repz
push
in
jl,pt
movsl
inc
cs
and
dec
popa
inc
xchg
xchg
xchg
sbb
mov
lcall
mov
add
mov
rcl
movsb
sub
push
jo
mov
cmc
loopne
cmp
push
add
and
daa
push
jns
sub
add
sarl
mov
xchg
push
popa
dec
scas
call
stos
pop
inc
cmpsl
adc
nop
and
sbb
iret
cmp
xchg
or
cmc
sub
test
fistpl
das
mov
add
cmpsb
aas
xor
movl
mov
subl
cwtl
jae
sti
mov
test
popf
ja
test
and
pop
mull
hlt
mov
inc
ss
test
adc
cmp
xchg
xor
das
ja
xlat
fiadds
mov
jmp
rolb
out
sahf
cmpsb
mov
ret
inc
cmp
inc
mov
or
dec
int3
enter
mov
das
cmpsb
xor
mov
xor
stos
jg
xor
push
jg
adc
jo
aad
scas
pusha
test
mov
mov
jle
sub
lcall
push
pop
push
cmp
shlb
clc
adc
sahf
sub
pop
cld
dec
insl
fstpt
in
mov
leave
adc
xor
jno
ret
test
jl
mov
clc
stos
nop
and
js
jno
outsl
mov
sub
icebp
stos
push
or
lods
shll
or
xchg
nop
aaa
mov
jo
iret
sbb
push
xchg
jno
dec
arpl
test
cld
dec
jg
icebp
or
mov
loopne
in
push
pop
scas
jno
dec
cmp
outsb
sbb
int
and
push
pushf
notb
and
lcall
repz
sub
sbb
sbb
stos
dec
fdivl
bnd
add
hlt
sub
ja
push
lcall
pop
testl
ss
mov
sbb
pop
push
xor
aad
push
aad
lcall
pop
push
iret
xorb
inc
inc
mov
push
movsl
inc
add
or
int
or
aam
cmc
cmpsb
xor
repnz
das
inc
add
out
xchg
int3
ds
movsb
inc
add
gs
sbb
add
xchg
scas
xor
or
add
xchg
sub
adc
adc
sbb
mov
sbb
mov
sub
inc
xchg
jns
fwait
jae
sbb
jmp
mov
pop
sbb
rolb
jo
xor
xchg
shrl
cltd
dec
mov
sahf
mov
jmp
dec
jb
loope
mov
aas
lahf
and
xor
sbb
xchg
imul
enter
inc
fiaddl
lret
sti
addb
or
inc
or
cld
pop
dec
cmpsl
inc
add
mov
mov
das
imul
out
stc
and
pop
inc
scas
loopne
sub
dec
mov
push
sub
cwtl
insl
je
push
mov
pop
push
xor
mov
mov
mov
lret
adc
jle
push
dec
stos
mov
dec
xchg
adc
hlt
adc
pop
stc
stos
js
inc
or
rorb
dec
loope
or
pop
jae
sbb
incl
sahf
loope
fidivrl
in
and
pop
iret
pop
inc
mov
jb
and
inc
mov
adcb
fcompl
in
pop
pop
dec
dec
xchg
cld
int3
fisubs
inc
add
data16
fisubrs
add
adc
addl
call
mov
in
cmp
fadd
pop
pop
sbb
or
repz
nop
push
imul
and
sti
adc
push
or
mov
fisttpll
push
fidivrs
cmc
and
sub
fmull
das
add
jne
ja
push
pop
ja
ret
nop
in
mov
dec
xorb
out
into
mov
inc
and
in
mov
xchg
bound
fldt
pop
xor
les
imul
arpl
into
stos
ret
ret
std
push
sbb
inc
addr16
jmp
or
fisttpl
inc
dec
push
lahf
iret
outsl
clc
das
and
popa
bound
popa
sbb
jne
inc
xlat
subl
xchg
adc
xchg
push
jl
dec
mov
imulb
addr16
cmp
in
cmpsl
ljmp
inc
push
push
dec
inc
dec
daa
or
push
xchg
fmull
dec
sbb
scas
pop
fs
sar
lcall
sbb
pop
enter
dec
fsts
ds
rclb
pop
sbb
scas
mov
sub
jae
outsb
jp
add
mov
loope
rol
jo
icebp
push
adc
cld
jecxz
in
push
lods
movsl
test
test
leave
pushw
lds
push
ja
mov
mov
add
inc
out
xor
mov
and
js
ret
adc
dec
lods
sbb
div
jns
inc
xchg
shlb
mov
xor
outsb
std
push
inc
xor
jge
xchg
jp
cmpsl
test
and
stos
movsb
shlb
cmovp
das
or
mov
sub
lods
aad
scas
arpl
ret
inc
int3
imul
aas
push
rclb
mov
jnp
lea
pop
or
into
sub
xor
and
cltd
jno
add
ret
xchg
cmp
ds
iret
pop
and
push
cmp
movsl
jbe
cmp
push
push
out
xchg
xchg
xchg
shl
fmuls
aam
adcl
je
or
popa
pop
pop
push
aad
sub
mov
and
jecxz
test
and
addl
xchg
test
call
adc
das
jne
sub
ror
dec
dec
or
fistl
daa
inc
push
push
inc
jg
push
xor
pop
xor
and
adc
popf
pop
xlat
push
mov
rcrb
inc
adc
int3
lahf
jnp
jae
lret
mov
call
enter
or
inc
pusha
out
add
fisttps
mov
in
aad
xlat
rorb
mov
js
std
cs
loopne
push
fsub
sbb
dec
fldl
mov
fadds
out
outsl
sbb
addb
pop
rcll
or
psubusb
dec
jp
shl
mov
dec
fdivl
push
ds
jmp
stc
aas
ljmp
loopne
aam
jo
cmp
cltd
insl
popf
push
addr16
movsl
cmc
push
jb
imul
push
lret
jecxz
je
fisubs
lret
push
jnp
push
ja
out
pusha
push
pusha
jge
sbb
rcrb
fisttpl
mov
mov
cmpl
mov
pop
sub
or
adc
ljmp
inc
push
insb
frstor
in
xchg
daa
sbb
xchg
shll
stos
lock
xor
xor
imul
cmp
mov
add
movsb
dec
mulb
addl
cmc
pop
push
cmp
repnz
lret
jns
jb
mov
jns
mov
xor
es
dec
sub
stos
push
or
mov
adcb
sub
add
and
test
int3
in
mov
xchg
add
fimuls
int
mov
jae
mov
and
fadd
fwait
mov
cli
fs
inc
inc
loope
jp
scas
or
fists
inc
jecxz
repnz
in
scas
es
mov
fldl
xchg
loope
adc
outsb
pop
or
rcrb
xor
ljmp
xchg
cwtl
pop
test
cmp
xor
leave
xchg
movsb
inc
push
mov
jp
sub
test
ss
dec
mov
lods
sub
int3
jno
sbb
push
mov
pop
add
xchg
out
ret
orb
insl
xorb
xchg
test
push
dec
stos
adc
roll
adc
scas
push
sbb
add
pop
mov
jecxz
icebp
pop
sbb
ds
mov
mov
mov
push
add
lahf
divl
pop
adc
das
xor
mov
fstp
hlt
jmp
xchg
push
jae
insl
lret
out
dec
dec
test
lret
jl
leave
sub
mov
or
dec
mov
fmul
sub
movsl
xor
pop
lcall
jecxz
hlt
inc
test
sub
mov
mov
push
cmpsl
mov
data16
ds
pop
rcll
mov
fwait
xchg
je
cmc
test
movsb
inc
test
push
jno
mov
fisubl
sar
mov
fildll
jg
stc
pop
mov
ja
fistpll
mov
test
inc
cmp
lahf
je
add
fsubs
or
or
arpl
mov
call
jae
cmp
retw
std
inc
inc
test
mov
mov
mov
jg
sub
daa
mov
andb
mov
test
lock
jmp
mov
or
insb
mov
mov
pop
add
lea
mov
shll
push
outsb
push
push
inc
xchg
xchg
jecxz
mov
xor
push
xor
sbb
jmp
stos
fwait
imul
xchg
adc
xchg
js
fisubrl
daa
mov
xchg
mov
sahf
frstor
inc
jo
and
mov
or
jecxz
adc
mov
repz
mov
sub
aam
fdivs
in
sbb
inc
dec
es
pop
pop
sti
sarb
inc
inc
mov
mov
sbb
iret
imul
stos
sbb
mov
in
ret
jns
mov
inc
jno
sbb
pop
dec
js
stos
lahf
inc
rcl
lods
in
mov
dec
push
stos
mov
push
add
pop
insl
idivl
cmp
repz
aad
inc
jle
and
xchg
xchg
outsl
inc
sahf
dec
and
call
insb
adc
and
jb
call
pop
xor
lret
xchg
and
outsb
lret
mov
cld
lock
ljmp
dec
or
sahf
idivl
mov
adc
jecxz
iret
jmp
loop
push
dec
cmp
cmp
imul
movsb
inc
shlb
lea
ret
bound
pop
jae
xchg
cmp
xor
icebp
in
data16
icebp
lret
mov
xor
push
fdivs
bnd
adc
pop
cmp
push
lods
lret
loop
mov
sahf
pop
mov
cs
sahf
ds
ljmp
sbb
sub
cmp
push
inc
popa
popa
bound
vphaddbw
sbb
jne
repnz
jbe
inc
push
cld
xor
push
jmp
out
dec
mov
cmp
mov
jmp
xchg
enter
incb
or
cltd
pop
ret
shlb
and
sbb
aaa
mov
or
gs
imul
pop
xor
and
inc
jmp
sbb
inc
mov
rorl
mov
test
xchg
std
add
enter
cmc
jl
rorb
inc
adc
lea
cmp
lea
adc
sbb
cwtl
fwait
incb
in
cli
xor
or
hlt
fisttps
in
aaa
cmpsb
loope
sbb
mov
xchg
imul
dec
pop
fwait
loope
mov
mov
sub
or
divb
adc
add
sub
dec
jne
fbstp
je
sbb
push
aam
cmp
outsb
push
inc
or
push
mov
fldcw
inc
pop
sbb
dec
jno
push
adc
xor
stc
in
stos
es
pop
sbb
add
or
outsb
lds
jo
mov
addr16
outsb
adc
sarb
imul
xor
xor
pop
mov
subb
add
repz
jmp
and
jmp
not
pop
xor
jmp
add
in
lods
cwtl
bswap
sub
jmp
shrb
and
aad
sbb
cmpsb
aam
adc
mov
fstpt
push
inc
or
dec
mov
jp
pop
xchg
and
outsl
adc
dec
xchg
jg
push
cwtl
jb
xchg
rcll
xchg
push
cmp
jnp
enter
flds
leave
dec
sbb
add
roll
lods
jmp
xor
daa
aad
iret
je
stos
or
add
lods
ja
les
clc
lret
call
adc
aad
or
adc
cmp
or
movsb
pop
pop
add
in
sbb
stc
mov
sbb
mov
pop
bound
push
jg
adc
xor
insl
jnp
jp
out
jbe
sub
and
jg
xchg
jmp
or
adc
xchg
int3
xchg
test
clc
sbb
aam
lods
dec
stos
push
add
cwtl
repz
jg
movl
andl
mov
pop
pop
sbb
out
and
sub
dec
xor
insb
sbb
imul
clc
push
pop
mov
push
add
cmpsb
out
rorl
rol
mov
sbb
push
cs
daa
clc
fwait
push
pop
movsl
cltd
sbb
in
loope
popf
imul
xchg
sub
adc
mov
aas
fsubrs
xchg
jbe
ds
sub
dec
outsb
loope
mov
xchg
ds
xchg
imul
aad
xchg
cmp
jb
jp
dec
test
movsl
cmpsl
mov
adc
dec
adc
addl
inc
cmp
cmp
leave
sarl
rorl
mov
or
scas
and
sbb
push
and
mov
cld
jbe
mov
or
mov
out
out
sub
and
mov
xor
leave
insb
mov
lods
roll
addr16
pusha
cltd
mov
stc
sub
xor
sbb
jle
mov
dec
jmp
pop
cmp
adc
lcall
push
sub
scas
pushf
js
sub
daa
dec
sbb
xchg
xor
icebp
mov
jb
dec
adc
fldl
mov
push
xchg
push
jmp
cmpsb
call
rcrb
adc
scas
rcll
mov
pop
xchg
xor
dec
pop
and
push
dec
jo
jg
dec
mov
ret
pop
cli
outsb
and
aaa
xor
int3
xchg
and
cmp
les
push
hlt
js
add
mov
test
inc
mov
xchg
dec
and
roll
add
outsl
test
mov
pop
lahf
aas
sub
and
mov
lods
insl
xor
sti
mov
push
sub
inc
or
push
sub
int
repz
push
std
or
in
adc
mov
addl
xchg
xor
inc
aas
testl
jmp
std
test
cmp
adc
mov
sbb
cmp
mov
push
pop
dec
aaa
imul
jle
xor
mov
imul
adc
aad
decb
scas
sub
in
push
stc
daa
push
cmc
inc
jae
mov
xor
ss
and
mov
inc
jns
lea
inc
dec
loope
mov
out
fcoms
fcoms
mov
push
pop
in
push
jmp
dec
loope
push
cmp
xchg
add
cmc
insb
inc
in
and
dec
sbb
dec
jns
mov
pusha
jg
push
int3
mov
icebp
and
and
cmp
ds
imul
add
mov
or
xchg
push
pop
int3
and
push
push
pop
sbb
lcall
dec
adc
dec
xchg
inc
pushf
dec
mov
leave
dec
fs
outsl
xlat
push
pop
fldenv
fcoms
shrl
xchg
pop
cmpsl
or
mov
mov
movsb
xchg
lock
pop
lret
mov
mov
sahf
or
dec
inc
sub
nop
push
mov
mov
fildl
dec
fstpt
test
insb
mov
mov
aad
clc
xorb
push
push
imul
jb
rclb
mov
push
ss
aad
mov
xlat
inc
test
sbb
jmp
daa
jno
xlat
negl
pushf
in
insb
repnz
mov
push
inc
mov
push
mov
push
sub
stos
add
push
ret
divl
sti
and
mov
pop
jge
loopne
hlt
xor
mov
jo
repz
mov
cltd
push
in
sbb
sbb
inc
call
sub
pop
movsl
jmp
cltd
inc
xlat
aaa
std
pop
adc
xchg
ret
popa
stos
push
dec
inc
lods
adc
dec
icebp
enter
jno
cltd
push
jno
dec
lcall
xor
rcr
in
jne
movsb
aam
lahf
and
idivl
xchg
jl
insb
popa
jl
push
jnp
xor
sbb
fwait
icebp
cmp
icebp
pop
pop
push
scas
std
dec
pushf
sbb
pushf
jp
mov
jae
gs
test
xchg
sarb
ds
or
popa
ss
add
push
ret
inc
xchg
lcall
cmp
and
test
hlt
pop
fsubs
adc
cmp
cmp
dec
clc
pop
mov
dec
jl
sarl
out
in
roll
mov
out
loop
add
push
imul
outsb
sub
notl
or
or
push
mov
inc
push
stos
add
scas
fisttpll
xorl
loope
arpl
cmp
outsl
mov
dec
pop
scas
test
fisttps
movsb
cmp
ret
js
imul
shl
hlt
pop
pushl
dec
jge
test
std
out
sarb
icebp
insb
or
shrl
jno
lods
cmp
std
push
or
mov
jecxz
mov
pop
iret
insl
fldenv
leave
mov
stos
jnp
fsubrl
aaa
lds
push
xchg
imul
push
mov
sbb
mov
xor
dec
jecxz
jg
inc
cwtl
ja
pop
jb
lods
data16
adc
popa
push
cmp
jne
mov
and
inc
dec
cmpsl
or
xchg
mov
xchg
cmp
out
xor
xor
lods
push
jp
push
cmp
fisubrs
test
xchg
adc
dec
and
inc
filds
pop
sbb
push
or
dec
push
pop
aad
mov
outsb
out
and
hlt
addl
xor
aad
es
sahf
pushf
sub
sbb
ss
and
mov
ficompl
jnp
and
movsb
insb
sbb
pop
rol
jge
pop
mov
pop
cmp
das
loop
jmp
jns
push
orl
das
shll
mov
push
loopne
mov
loopne
jle
pop
ljmp
repnz
or
pop
jno
and
sbb
cmpsb
mov
gs
subb
pop
inc
cmpsb
movsb
xor
ds
pusha
sarb
js
pop
cmp
clc
mov
push
xchg
mov
jmp
aad
jae
inc
adc
dec
repnz
inc
in
fwait
or
int
cmpsb
inc
lea
adc
test
xor
pop
lret
jno
mov
jmp
stos
inc
inc
mov
stos
mov
mov
subb
shrl
lea
dec
sbb
mov
rcrl
mov
mov
inc
pop
and
dec
shr
imul
cmpsb
sti
imul
mov
mov
movb
lods
xchg
jae
cmp
pop
loopne
outsl
ret
in
ja
cmpb
ljmp
insb
sbb
pusha
data16
lcall
rcpps
cmp
lret
int
or
fsubs
cmp
push
fnstenv
mov
loopne
pop
pop
sahf
std
scas
insl
in
aam
or
das
jne
ja
dec
sub
cmp
jp
pushf
sub
inc
xorl
xor
loopne
inc
mov
dec
pop
in
push
and
mov
lds
pushf
pop
cmpl
xor
clc
and
and
add
or
idiv
jb
mov
xchg
pusha
mov
sub
jne
fstpt
adc
mov
adc
adc
movsl
loopne
add
adc
dec
out
jns
jl
push
xor
in
add
push
cmpsb
dec
cmp
js
adc
pop
push
cltd
and
push
aam
pop
cli
stc
fnstsw
and
mov
out
shrl
sub
inc
repnz
fnstsw
stos
out
lods
sub
shrl
or
pop
xchg
nop
adc
ds
mov
or
loopne
push
fdivp
mov
insb
and
lret
ss
clc
fisubrl
mov
faddl
int
outsb
aaa
lcall
test
popf
push
test
cmpsb
int3
aaa
nop
cmp
scas
inc
outsb
aas
cs
push
and
push
adc
in
push
jo
dec
pop
push
in
jo
xor
push
pop
inc
test
xchg
xchg
iret
jne
add
mov
stos
loope
shrb
fstps
cmc
fimuls
jle
cli
inc
call
push
dec
mov
out
repz
hlt
out
cld
test
xchg
xor
aas
ffreep
sub
sub
and
adc
out
int3
inc
in
pop
mov
pushf
jns
lds
pop
je
jmp
ljmp
loopne
sbb
popa
xchg
outsb
clc
ds
aaa
cmp
push
lods
in
ror
cmp
jne
scas
scas
int3
add
arpl
and
daa
mov
sub
std
xchg
cld
fdivs
xchg
sub
subb
push
sub
mov
add
sbb
or
test
pop
or
inc
cmpsl
mov
xor
je
leave
mov
jb
push
sbb
cmp
cld
or
mov
mov
cwtl
push
xchg
pop
inc
rcrl
outsb
xchg
jg
stos
and
je
mov
lret
repz
sub
or
cmp
mov
test
fcom
and
and
lret
pop
push
add
pusha
jne
repz
add
and
lock
push
push
dec
push
es
cli
xor
adc
mov
movsb
decl
push
mov
lods
or
jns
xor
pop
ljmp
inc
xchg
inc
stos
cmp
movsl
insb
sti
jg
add
or
test
pushf
push
dec
mov
mull
dec
pop
pusha
jae
stc
inc
cmp
arpl
jno
lea
mov
adc
bound
push
rorl
shrb
aam
xchg
add
dec
cmpsb
dec
scas
push
cmc
mov
fldcw
pop
dec
fs
sub
or
jbe
iret
pslld
orl
les
jo
and
icebp
pop
push
mov
mov
xchg
das
scas
mov
lods
insl
push
cmp
pop
inc
xor
arpl
mov
test
scas
inc
stos
xlat
cmp
xchg
bound
int
xchg
adc
sub
std
mov
pop
lock
cmpsl
fcomp
loope
inc
addr16
iret
pop
lahf
call
in
lock
push
frstor
stc
mov
and
sti
das
fwait
andb
stc
pop
fwait
je
add
add
sbb
push
cld
pop
push
ljmp
mov
ljmp
sbbl
mov
sub
xchg
xchg
jnp
mov
push
sub
add
aaa
mov
stos
cmpsl
cmp
inc
hlt
sar
add
or
lock
fcomps
popf
test
add
and
adc
push
mov
cli
adc
pop
leave
mov
or
xchg
and
int3
push
loope,pt
lock
test
xchg
pop
sbb
xor
enter
dec
mulb
dec
test
mov
shrb
sbb
mov
xor
ss
push
cmp
mov
lods
jns
jg
adcb
pop
pop
mov
js
cwtl
sbb
lea
test
xchg
adc
or
leave
cmp
mov
sub
fidivrs
ret
fidivrl
push
and
int3
jp
xchg
xchg
add
jg
int3
sub
and
mull
push
stc
repz
xchg
push
test
sahf
sbb
push
jae
fwait
rol
and
int
out
pop
pop
mov
adc
mov
addr16
pusha
push
lahf
ljmp
add
stos
es
fdivp
pushl
add
or
mov
int3
in
push
pushf
adc
repz
push
dec
xor
inc
bound
imul
cmc
and
out
push
jno
adc
ror
les
fadds
pop
fiadds
dec
push
dec
mov
pop
push
call
xor
test
movb
dec
loop
daa
movsl
push
add
xchg
jg
rclb
pop
push
xchg
divb
ss
or
add
sbb
fsts
test
xchg
test
pop
inc
sub
test
clc
mov
pusha
jne
notl
and
in
or
mov
cwtl
cmp
int3
popf
lock
jo
js
mov
int
rolb
data16
lcall
cltd
xrelease
pushf
mov
jg
or
ljmp
mov
decb
sbb
aaa
pusha
es
aam
jnp
pop
outsb
mov
fdivrl
add
fidivrs
adc
xor
aam
ss
mov
dec
sub
test
jmp
xchg
lds
leave
fs
subb
pop
out
popf
mov
sub
cld
sbb
adc
xor
je
arpl
idiv
iret
loope
popa
insl
sub
clc
std
add
sub
inc
lret
add
jae
and
in
stos
cmp
repz
mov
push
aad
bound
xchg
push
cmp
loopne
adc
mov
sub
test
dec
inc
les
arpl
jne
pop
dec
xchg
insb
xlat
imul
mov
and
jmp
xchg
lret
adc
fwait
jl
imul
lods
into
loope
lret
inc
outsl
adc
and
push
cmpsb
aaa
scas
clc
push
nop
jnp
cmp
mov
loope
psubb
in
jmp
push
ds
mov
push
pusha
push
fucom
addr16
jl
add
or
push
push
mov
daa
xchg
pop
mov
or
xadd
fcmovnb
out
pmuludq
into
std
mov
call
adc
mov
xor
ficoms
fcompl
mov
pop
and
adc
or
lahf
stos
xchg
pusha
mov
leave
inc
mov
imul
cltd
ret
stc
cmp
xor
sbb
sbb
hlt
xor
sub
jbe
xchg
jl
pop
stos
dec
pop
lods
idivl
push
pop
push
mov
jae
mov
mov
or
xor
into
pop
add
mov
cmpsl
repz
inc
xchg
filds
xlat
cld
push
xchg
fstl
hlt
and
leave
fimuls
ficomps
add
lods
mov
pop
sub
pop
dec
gs
gs
aam
test
cli
add
jmp
inc
mov
sbb
pop
xchg
xchg
rol
push
data16
cmp
and
loop
insl
arpl
adc
movsb
jnp
imulb
jmp
push
test
and
jns
xchg
lcall
in
leave
ljmp
outsb
test
push
sbb
dec
cltd
or
add
decb
dec
imul
int3
loopne
test
and
sub
pushf
out
enter
mov
rcll
int3
inc
int3
shlb
push
xlat
mov
gs
fmull
test
jnp
fcmovbe
shrb
mov
jg
add
pop
xchg
or
iret
pop
int3
xchg
cmp
mov
xchg
movsb
sbb
jb
lods
xor
or
je
add
xchg
repz
add
outsl
or
loopne
push
mov
push
shrl
out
jne
adc
data16
xor
xchg
xor
cmp
cmp
mov
sbb
add
loope
xlat
mov
aas
add
push
sub
pop
sub
stos
lret
jl
xchg
addr16
insl
sbb
mov
xor
test
or
dec
pop
jmp
or
ljmp
aaa
std
or
push
jns
and
repz
stos
scas
jl
and
inc
jnp
dec
mov
in
pop
xchg
mov
andb
mov
add
xchg
enter
xchg
cmc
xchg
mov
mov
jmp
dec
dec
push
js
sbb
pop
popa
popf
adc
imul
push
movsb
fnstenv
decl
ret
aam
mov
xchg
lds
add
push
inc
sbb
push
jl
add
stc
pop
mov
dec
negb
lods
movsb
xor
push
xor
fwait
push
xchg
pop
push
sbb
loope
pop
xor
cmp
aas
inc
jecxz
dec
popf
push
test
out
mov
repnz
mov
adc
shlb
fcoml
xor
sub
pop
dec
mov
xchg
lcall
loopne
fst
jge
pop
add
loop
mov
lods
or
in
daa
jp
sub
dec
lahf
inc
add
out
sub
mov
xlat
data16
mov
inc
cmc
or
or
xor
jl
sarb
ja
cmpsb
pop
push
pop
imul
add
out
in
push
mov
cmp
mov
xchg
int
xchg
scas
mov
push
xlat
add
cmp
mov
test
dec
inc
add
jae
dec
cmpsl
aad
push
cwtl
movsb
sarb
xchg
fmulp
adc
push
andl
lcall
mov
dec
or
int3
repnz
cwtl
stos
mov
dec
and
add
repnz
lock
popa
add
test
pop
or
es
add
enter
xor
scas
add
mov
fdivl
push
lock
cs
mov
ljmp
in
add
pop
mov
addr16
jo
or
xchg
insl
lret
mov
or
and
add
dec
jno
ljmp
rcrb
adc
test
pop
and
xchg
into
xor
cmpsb
roll
adc
imul
and
sub
dec
jbe
xchg
jae
cmp
xor
decb
enter
dec
add
jecxz
or
enter
ja
mov
je
cmp
add
mov
insl
xor
cwtl
cmp
pusha
mov
adc
jl
shll
inc
out
dec
xor
xor
insl
int
imul
cmp
mov
dec
iret
adc
int
sbb
push
ret
enter
jnp
jp
push
sbb
cwtl
fs
test
pop
sub
loop
shrb
movsl
popa
dec
addl
adc
fildl
lcall
iret
fisubrs
sub
inc
je
daa
push
xchg
xor
aaa
les
cmp
test
dec
mov
push
sbb
sbb
out
and
sbb
xchg
nop
push
mov
dec
xlat
and
mov
pop
pop
cwtl
ss
pop
in
int3
clc
mov
add
xor
pusha
sub
cmp
faddl
mov
loopne
sub
notl
loop
cmp
stc
test
into
mov
bound
out
and
bound
mov
add
mov
mov
ss
xor
xchg
cmc
or
mov
sbb
in
divl
xor
or
add
push
dec
jg
clc
mov
loope
cwtl
push
inc
insl
stos
outsl
pop
mov
cmp
xchg
dec
cmp
pop
inc
xchg
scas
int
mov
adc
outsl
fidivs
xchg
mov
arpl
ds
bound
jnp
rcrl
jb
pop
push
add
imulb
dec
stos
jnp
and
dec
test
mov
popa
xchg
pusha
lods
or
cli
push
pushf
inc
insl
and
nop
push
fs
sub
pop
es
insb
clc
adc
stos
popa
mov
adc
ljmp
mov
nop
fldenv
lods
outsb
sub
xchg
outsb
daa
lds
aam
ljmp
xchg
lock
test
pop
scas
arpl
xchg
leave
dec
inc
aas
jg
push
xchg
dec
add
mov
jp
pop
jo
into
dec
scas
inc
dec
fwait
mov
jb
repz
mov
pop
sarb
cld
aaa
mov
outsb
gs
push
adc
adc
lds
es
jl
ja
adc
arpl
xlat
mov
xorl
adc
outsl
pop
ret
int3
stos
fisubrl
lds
not
mov
or
loopne
orl
mov
dec
add
jl
jmp
rolb
lods
movd
pop
dec
and
push
adc
sbb
lea
mov
cmp
mov
pop
mov
adc
lret
mov
out
out
cmc
sbb
fldenv
mov
cmp
adc
js
xchg
pop
mov
fidivs
and
cmc
lcall
xor
clc
xchg
inc
push
and
out
cmc
pop
inc
mov
test
cld
jg
pusha
ret
aaa
ja
dec
cmp
divb
mov
sarb
and
in
dec
movsb
push
push
rcrb
dec
popa
push
push
sub
jge
pop
xchg
outsb
lret
xor
inc
pop
sub
enter
sbb
or
int
push
push
rorl
inc
inc
adc
or
jmp
mov
aam
push
mov
and
mov
adc
push
mov
dec
xchg
xchg
inc
jl
or
pop
stos
mov
fisttps
fsubrs
test
dec
ss
xor
xchg
adc
adc
jbe
inc
out
xorl
imul
adc
push
pop
xchg
push
add
inc
adc
or
xchg
inc
jg
mov
pop
arpl
push
leave
inc
clc
sub
stos
mov
pop
mov
shrb
xchg
aam
dec
mov
cmp
mov
adc
in
das
repz
cmp
sub
in
cmp
out
jbe
jns
mov
add
iret
leave
outsb
push
jb
cwtl
popa
mov
xchg
ud1
fnstenv
fidivs
cmp
fnstcw
mov
cmp
mov
mov
jge
movsl
out
sti
mov
dec
add
mov
inc
das
fwait
xchg
xchg
rcll
ss
sti
cmp
sub
ds
jae
inc
rol
mov
pop
xor
int3
das
mov
cs
push
sbb
mull
orb
xor
call
pushf
or
int3
and
xchg
pop
cmpsl
outsb
aad
lea
xchg
pop
lret
lcall
js
pop
inc
adc
pop
sbb
mov
popl
sbb
jnp
mov
or
out
dec
in
lds
xor
mov
je
xchg
and
int
and
mov
jns
mov
aam
pop
jecxz
mov
jae
and
lahf
movsl
aaa
sti
adc
or
loop
out
add
daa
mov
sbb
aad
mov
mov
dec
hlt
and
test
jo
int
les
sub
mov
mov
inc
movsl
xchg
xor
mov
imul
stos
in
addr16
ljmp
and
inc
mov
cmp
xor
mov
cld
jecxz
inc
int
insb
sbb
pop
fs
xchg
mov
push
dec
jb
push
test
xchg
out
bound
les
or
jmp
out
pushf
dec
je
push
cmp
lock
lret
repz
inc
mov
adc
adc
pop
out
data16
and
xchg
xor
mov
fsubrl
repnz
inc
ret
sbb
stos
cmpsb
stos
test
mov
dec
int3
or
fs
add
push
js
sbb
das
sbb
push
aad
mov
mov
xor
mov
sbb
pop
cmovnp
push
in
dec
inc
enter
leave
mov
pop
mov
pop
aaa
push
test
sbb
push
mov
push
bound
lret
out
in
sub
or
and
add
outsb
das
fucom
cmp
xor
sub
cli
or
cmc
test
hlt
adc
sub
cmp
inc
mov
jo
inc
sarl
or
push
inc
inc
sub
lods
mov
xchg
dec
addr16
arpl
es
inc
idiv
mov
je
or
mov
scas
jg
jle,pt
jecxz
aas
mov
add
cmpsb
outsl
ret
jb
sti
loope
cmpsb
adc
push
hlt
js
jbe
inc
xor
sub
jne
out
in
icebp
xchg
cmp
lcall
xchg
push
in
pop
cmc
sbb
mov
leave
mov
inc
push
sarl
push
imul
adc
xchg
imul
int
inc
mov
mov
inc
cmp
bound
push
mov
push
lahf
mov
lcall
cmp
or
mov
insl
je
pushf
mov
movsb
xchg
dec
jb
iret
in
shll
mov
pop
insb
cwtl
mov
jge
daa
loope
pop
jne
pop
data16
jne
cmp
das
or
xchg
lods
xchg
and
fnsave
and
cmpsb
scas
out
into
push
shll
push
imul
xlat
cltd
mov
leave
inc
sbb
out
xchg
push
mov
mov
xor
lods
fidivl
pop
scas
add
outsb
xor
stos
addb
testl
int3
icebp
daa
shll
stc
loope
lcall
fldenv
stos
mov
dec
enter
mov
divb
adc
add
sbbb
sub
pop
aas
lds
adc
or
notb
xor
xor
arpl
pop
xchg
mov
push
xchg
es
cmp
pop
shrl
daa
pop
xor
jne
mov
loope
out
mov
mov
cmp
sbb
xor
iret
push
xor
add
into
mov
test
push
jo
cmpsl
out
loope
pop
clc
cmpsb
adcl
and
and
pop
mov
test
data16
inc
xor
outsl
out
je
lret
or
pusha
xchg
pop
ret
js
add
fidivrs
in
mov
popf
lds
test
loopne
pop
ljmp
cmp
popa
rorl
je
pop
int
out
jo
iret
inc
into
imul
fs
push
in
popf
mov
pop
cmp
or
or
test
cmp
shll
push
repnz
rcl
or
add
pop
dec
cltd
popa
decb
loopne
or
inc
out
fnstsw
sahf
lock
xchg
clc
loop
cmp
fidivrl
js
mov
mov
or
xor
shlb
enter
jmp
push
pop
jae
lods
loop
sbb
shll
add
inc
arpl
and
repnz
icebp
mov
xchg
outsl
mov
outsb
fistpll
push
sbb
cmp
jmp
xchg
xchg
xchg
jne
sbb
pusha
xchg
xor
sub
mov
xor
xlat
es
pop
fdivs
xorb
adc
outsb
inc
push
gs
imul
jne
orl
push
insl
out
lds
stos
xor
sub
push
test
test
fisubs
lds
enter
out
sbb
cs
jge
pop
push
out
std
xchg
ja
aad
popa
jge
decl
mov
rolb
xchg
pusha
push
xchg
sti
cmc
jle
push
insb
out
pop
mov
or
ret
test
cmp
cli
sbb
and
or
ss
fidivrs
inc
jae
mov
cli
cmp
xor
mov
inc
inc
clflush
and
scas
aad
stc
lds
lods
pusha
clc
mov
aas
add
push
dec
cmp
adc
aas
loopne
mov
adc
xchg
ret
sbb
push
mov
in
sub
jmp
jbe
popa
in
lock
mov
ss
inc
inc
pop
push
push
bound
push
call
fildl
out
push
fldenv
dec
fs
cld
xchg
jge
push
aam
in
sbb
mov
jmp
push
repnz
mov
adc
pop
loopne
push
push
mov
cli
xchg
push
fisttpl
fs
jle
and
ss
loope
pop
stos
sub
cmp
adc
arpl
mov
jno
sti
cmp
sub
mov
pop
pop
mov
shll
stos
and
loope
fwait
jl
push
pop
add
int3
lret
iret
add
xlat
ret
int
jge
xchg
sahf
sub
fldl
sarl
enter
fsts
jo
cld
add
in
jno
pop
out
lods
xchg
lods
dec
sub
std
rclb
jo
out
jmp
scas
pop
dec
cld
fst
xchg
mov
in
jge
push
lods
or
cmpsb
fnstsw
cmpsl
fmuls
into
sub
daa
xchg
sub
jp
sub
pop
cli
cmp
negl
scas
or
adc
sbb
push
sbb
imul
inc
adc
jne
call
not
xchg
pop
or
jecxz
add
adcb
test
ja
adc
dec
or
fs
push
lea
mov
mov
or
add
in
mov
sbb
dec
sbbb
sub
xchg
and
subb
jae
jo
lahf
mov
push
shlb
sub
xchg
adc
aam
sahf
jb
add
es
in
xchg
cmp
or
mov
data16
xchg
movsl
push
mov
sahf
xchg
and
fnstcw
mov
fwait
outsb
sub
xchg
mov
out
repz
out
out
js
ret
xor
sub
out
xlat
sbb
xor
test
das
inc
cltd
imul
dec
sub
mov
imul
shlb
fcmovnu
xor
gs
and
sub
or
jl
mov
cmpsl
mov
lock
xchg
cmp
movsb
movsl
mov
push
lds
push
xor
mov
sbb
int
cmpsb
into
dec
test
aam
outsb
fcomps
fadd
add
jae
lahf
testl
lea
jae
pop
jp
pop
gs
sbb
mov
push
sub
jb
rorl
stos
xchg
outsl
push
dec
sbbb
mov
stos
dec
jno
fsubl
ds
add
mov
dec
pop
in
mov
and
sbb
sub
idivl
data16
dec
inc
mov
jb
fs
mov
shld
inc
in
aam
iret
mov
push
and
mov
fisubs
leave
push
push
mov
mov
not
dec
sbb
js
sbb
or
inc
sarb
mov
add
or
fists
shrl
cmp
pop
cmp
mov
imul
mov
pushf
test
icebp
dec
add
stos
lock
cld
icebp
xchg
or
lcall
lods
out
inc
hlt
jb
andl
gs
fisubl
cmpsl
jb
loopne
dec
sub
or
xlat
mov
les
shrb
pushl
mov
pop
in
inc
adc
clc
test
pop
adc
push
xchg
shlb
pushf
inc
adcb
outsl
xor
movsl
sub
mov
mov
jle
sbbb
lcall
inc
sub
jle
dec
push
cmp
or
or
mov
fsubrs
mov
aaa
das
push
fcmovbe
jnp
dec
xor
stc
sbb
xor
dec
pop
icebp
pop
sub
jae
mov
sbb
pop
xlat
sbbl
sbb
and
xchg
add
aam
fsubs
sub
sub
mov
stos
test
add
and
push
push
aad
loope
xor
xorl
mov
jmp
data16
mov
push
addl
in
adcb
and
adc
jne
repnz
aas
jge
inc
xor
add
sti
movsl
fistpl
insb
dec
inc
out
xor
pushf
lock
push
in
outsb
popa
cld
pop
dec
ds
ret
adc
inc
mov
cmpsb
mov
je
cmp
cmp
loope
pop
imul
lahf
cmp
pop
and
loop
pop
into
pushf
mov
cld
mov
pop
sbb
decl
xor
mov
mov
sbb
loope
mov
pop
in
out
cs
scas
insb
mov
xor
adc
jmp
fsubp
pop
or
aam
adc
test
dec
arpl
mov
adc
mov
or
aad
lods
and
lds
notb
fbstp
sub
mov
mov
scas
jecxz
test
jnp
push
xor
jmp
loop
mov
push
push
xchg
sub
pop
stos
rorl
push
mov
ljmp
repz
adc
clc
mov
dec
sub
ret
inc
xchg
cmpsb
pop
push
push
adc
cli
sub
push
dec
mov
faddl
mov
pop
cmc
push
dec
mov
dec
and
sbb
mov
lcall
or
inc
lret
and
push
push
into
mov
mov
stc
enter
jmp
jnp
ljmp
sbb
push
and
cwtl
jo
imul
jg
repz
js
in
test
jmp
mov
out
mov
test
pop
fcmove
loope
lea
push
lods
add
xor
jp
stos
mov
cmc
cli
call
jnp
pop
jmp
insb
jp
mov
shl
xor
pop
mov
xor
stos
sub
xchg
in
push
data16
rolb
std
inc
push
out
push
xchg
mov
push
in
sub
adc
arpl
push
and
mov
mov
out
mov
sbb
mov
jne
sub
dec
inc
dec
adc
mov
dec
out
icebp
cmc
xor
stos
lea
xor
fwait
aad
pushl
test
xchg
mov
jno
bound
and
pop
xor
cmpsb
or
sub
jle
add
and
into
arpl
xchg
xchg
stc
sbb
pusha
pop
pop
push
pop
sub
adc
cmp
lret
and
mov
fldenv
pop
mov
adc
dec
mov
pop
clc
testl
sarb
jno
in
dec
sbb
pop
push
icebp
fisubrs
scas
xor
jb
out
sub
mov
mov
inc
xchg
adc
sub
pop
add
cmpsb
pop
shl
addr16
fs
xchg
jno
into
xor
xchg
jp
push
sub
call
sub
movsb
and
push
jb
add
adc
pop
pushf
adc
xchg
fwait
test
push
cmp
xchg
into
inc
repnz
lahf
mov
push
inc
jns
pop
push
out
or
in
mov
sbb
in
insl
or
iret
mov
cld
jmp
mov
loope
pop
fnstcw
sub
add
push
mov
test
mov
cmp
call
pop
xchg
adc
push
in
mov
imul
mov
rcrl
outsl
or
iret
repnz
ror
popf
int
mov
scas
jg
mov
fdiv
lret
xchg
in
cmp
fnstcw
mov
call
mov
scas
lcall
call
test
xor
lds
rcrl
sbb
mov
iret
mov
pusha
repz
cmpb
data16
push
daa
xchg
loopew
mov
ficompl
pop
sbb
mov
ret
cmpsl
stc
inc
pop
cmpsb
das
push
and
jle
mov
cli
insb
scas
les
dec
pop
jecxz
outsb
fsub
xchg
aas
jmp
cmp
inc
inc
add
shr
jns
xchg
sub
shlb
cmp
xchg
cli
xchg
movb
pop
sbbl
lock
mov
add
test
mov
fwait
call
jnp
fwait
in
mov
call
in
mov
jae
imul
jg
aad
int
inc
adc
jno
daa
pop
xchg
scas
out
adc
mov
xor
inc
xor
mov
out
sub
mov
and
xor
arpl
push
lea
sub
loopne
insl
mov
inc
fnstcw
fldcw
inc
fsts
jmp
xchg
out
lcall
sub
in
xor
pop
addr16
add
pusha
fistl
adc
scas
push
mov
ret
jne
jo
outsl
xchg
mov
js
xor
int
mov
je
out
insb
aas
add
out
lar
add
andl
mov
add
mov
out
mov
shlb
push
dec
mov
rol
orb
shlb
push
stos
push
push
nop
lret
inc
mov
repnz
mov
xchg
popa
out
arpl
cmp
xor
dec
nop
lds
inc
or
fldt
bound
popf
jns
push
mov
bnd
out
add
push
or
sub
test
neg
in
or
lods
add
and
pop
inc
mov
test
lea
or
jne
jne
mov
xor
iret
sbb
and
cmp
bound
cmp
push
in
shl
cmpsb
arpl
lret
pop
filds
add
push
inc
cmp
in
jb
addl
and
loopne
test
les
mov
sbb
out
imul
xchg
sbb
les
add
movsl
jmp
lea
je,pt
adc
loope
and
leave
fiaddl
inc
ror
or
push
mov
mov
push
or
jnp
push
cli
das
adc
gs
enter
fcomp
lock
inc
and
cmp
inc
scas
stos
adc
jo
mov
sub
loope
nop
rorl
dec
and
mov
add
add
popf
outsl
ds
imul
add
sbb
cwtl
jnp
pop
cmp
xor
addr16
dec
fildl
push
push
dec
idivb
lea
push
sub
popa
ljmp
push
push
push
inc
arpl
or
adc
mov
push
andb
mov
fwait
imul
movsb
pop
mov
popf
jge
call
sbb
or
sub
jb
into
dec
lods
sbbb
arpl
mov
mov
shrl
xchg
lcall
fisubrl
add
jns
and
cmp
pop
dec
shll
movsb
hlt
inc
subl
aas
popa
pop
call
xchg
adc
inc
cmp
push
ss
lock
popf
fidivl
shr
lcall
xchg
shll
fists
mov
in
repnz
mov
pop
fdivl
mov
out
mov
test
cmp
mov
pop
enter
out
ret
xchg
cwtl
xchg
cmp
scas
push
dec
out
loope
test
cmp
inc
xor
push
inc
int
push
or
loopne
bound
xchg
inc
stos
mov
add
repnz
mov
and
add
sub
dec
cmp
shll
into
cmpsb
insb
rol
xor
sahf
adc
out
xchg
sub
arpl
ja
repz
xor
jbe
pop
push
je
fsubp
xor
pop
mov
sub
pusha
imul
cmp
mov
cmpsl
xlat
mov
cmp
pop
jp
sub
lea
xor
push
sbb
nop
psllw
or
out
dec
and
in
cmpsb
and
movsl
into
aaa
stc
inc
dec
gs
insl
fldcw
jp
call
mov
or
xchg
fs
outsl
notl
mov
adc
jnp
es
mov
lods
xchg
sbb
out
cmp
pop
lret
lea
in
dec
popf
outsl
sbb
lds
sbb
loopne
adc
push
jnp
repz
mov
in
clc
int3
inc
inc
lcall
bound
sub
vmwrite
xchg
mov
adcb
pop
fs
fimuls
pushl
cmp
lods
or
rorb
push
pop
inc
rclb
scas
cmp
aad
repz
repnz
daa
loop
insb
xchg
sub
in
mov
jnp
loop
imull
and
mov
imul
pop
jnp
aad
cmc
jmp
ljmp
hlt
nop
out
jbe
fwait
jns
push
daa
fcmove
and
push
popf
fwait
lds
into
push
xlat
pop
cmp
cmpsl
movsl
js
sbb
jg
or
sub
xchg
jno
mov
pop
sbb
repz
out
clc
and
testl
dec
nop
jecxz
xor
adc
bound
in
je
loopne
fstps
mov
sbb
imul
jmp
clc
push
fwait
div
jge
pop
lea
push
mov
pop
sbb
ljmp
cs
ret
es
arpl
int3
daa
xchg
jl
rcr
jb
sahf
inc
jge
das
push
addr16
add
sbb
jge
adc
push
and
push
or
gs
adc
add
cmc
or
or
jnp
mov
push
mov
lahf
imul
jg
mov
push
jo
push
test
add
lcall
call
mov
pop
inc
jmp
push
and
lods
into
and
xchg
mov
dec
cmpsb
in
sti
xor
ret
aad
mov
fbld
std
pushf
cmp
cwtl
sbb
cltd
aaa
sbb
pop
repnz
insl
adc
push
popa
pop
xchg
mov
ss
adc
repnz
stc
repnz
dec
sbb
icebp
sbb
es
mov
fisubrs
call
rdtsc
or
xchg
xor
jmp
addl
push
xchg
scas
in
shrl
enter
adc
dec
adc
and
sbb
dec
jge
push
xchg
fdivs
dec
popa
mov
aas
repnz
out
adc
sub
popf
cmp
cmp
push
or
cmpsl
xchg
adc
bound
daa
dec
loope
shll
repz
and
mov
push
mov
inc
mov
mov
addr16
mov
mov
push
repnz
cmc
in
jmp
outsl
push
mov
in
in
lds
ja
data16
hlt
stos
push
movsl
imul
cltd
jp
imulb
adc
aaa
testb
fldenv
xor
cli
xchg
rclb
int3
stos
jg
jnp
lret
or
xlat
jb
imul
ljmp
dec
orl
pop
or
fwait
or
xor
push
cli
push
mov
mov
jb
dec
jb
and
pop
and
and
mov
and
pop
nop
mov
test
roll
filds
push
lods
cmpsl
movsl
sahf
test
cmp
jb
pop
jbe
push
stc
popa
popf
and
and
aaa
bound
sbb
xchg
jge
mov
inc
sahf
pop
add
ja
outsb
mov
fbstp
jl
imul
and
add
ds
pop
cmpsb
mov
pop
test
jbe
jne
and
add
idiv
int3
fwait
adc
add
enter
cld
lret
into
mov
es
iret
inc
push
movsl
or
test
cmp
stos
imul
inc
or
inc
dec
xchg
flds
mov
mov
jo
mov
jecxz
sub
xor
pop
mov
xor
movsb
push
not
xor
add
lret
jl
insl
cmp
and
xchg
cltd
icebp
sub
daa
mov
ljmp
loope
mov
xchg
jae
addr16
daa
push
repnz
sbb
sbb
popa
repnz
mov
leave
aam
mov
jg
add
lret
sub
out
int3
xor
jecxz
mov
jge
cmpsl
call
call
pop
pushf
dec
mov
lret
xorb
jg
leave
test
jo
divl
clc
jbe
test
nop
inc
scas
or
inc
imul
xchg
sub
xor
or
bound
enter
ss
pop
cmc
adc
rcll
mov
xchg
push
or
insb
cld
or
add
inc
sti
mov
push
imul
sbb
incb
adc
ss
repnz
scas
or
mov
xor
hlt
pop
mov
lret
shlb
imull
inc
ja
mov
ror
test
popa
pop
push
cmp
orb
lret
shlb
fmuls
mov
dec
lock
test
out
or
push
sub
popf
ret
xchg
xlat
push
enter
mov
idivb
stos
or
cmpsl
fistpll
cmc
ljmp
jp
mov
out
in
jb
data16
out
call
dec
pop
ja
popa
call
test
or
pop
sub
popf
inc
xor
repnz
or
add
sbb
dec
sbb
lds
push
push
std
mov
pop
gs
shr
push
mov
jl
ret
dec
cmp
imul
jp
xchg
sbb
je
adc
int
push
test
xchg
inc
shlb
and
aad
gs
jno
jmp
xchg
inc
orb
je
pop
jle
mov
cmp
lret
pop
in
mov
xchg
inc
in
push
inc
jno
mov
loope
xchg
mov
jge
jmp
pop
in
lods
iret
mov
cmp
scas
cwtl
stc
ljmp
push
out
push
hlt
inc
cmp
adc
sub
cmp
cli
addl
lcall
repz
cmp
push
jecxz
mov
cmp
adcb
in
mov
xor
hlt
mov
fwait
xchg
out
push
mov
sarb
dec
mov
mov
cwtl
inc
movsb
inc
in
repnz
pop
sub
xchg
insl
dec
sub
cs
test
and
inc
jae
sti
fbstp
cmp
ja
push
jge
pop
push
and
icebp
dec
repz
insl
dec
mov
repnz
push
fbld
test
sarb
fisubrs
in
xor
pop
adc
mov
push
add
push
xorb
in
fs
xor
lods
movsb
jmp
pop
mov
xchg
jmp
and
and
adc
lahf
push
in
incl
and
mov
je
das
cmp
dec
sti
push
jae
outsb
add
js
jbe
rolb
inc
mov
aad
scas
flds
jmp
movsb
imul
and
cmpsl
loopne
jmp
addr16
mov
mov
out
inc
xchg
mov
and
jo
shll
and
scas
cmp
and
outsb
jge
out
je
insb
and
push
dec
fld
mov
popf
notl
jmp
jmp
add
cwtl
fadds
rdmsr
dec
jp
dec
cli
push
mov
out
jo
in
jns
aas
add
sbb
push
or
xor
adc
leave
ss
sub
cmc
inc
xchg
js
sub
pop
xchg
and
cld
jmp
push
lods
mov
shll
popa
jmp
jbe
sbb
int
addr16
add
in
scas
xor
push
mov
adc
jge
pop
sahf
outsl
jne
mov
not
cmp
mov
cmc
mov
test
mov
jecxz
pop
mov
ljmp
rorl
lods
mov
mov
pop
imul
or
fidivrl
xchg
pop
repz
cmp
mov
dec
int
stos
punpckhwd
cmp
xchg
xchg
aam
sub
shlb
mull
ret
xchg
cwtl
jg
cmp
pop
push
aaa
add
push
jmp
xor
cmp
mov
or
cmp
mov
cmpsl
aas
inc
sarb
in
and
lahf
in
pop
add
add
insb
loope
and
dec
mov
push
sbb
es
fistpl
jo
xchg
or
cltd
sbbl
mov
inc
pop
aaa
cmc
mov
jg
insb
sub
adc
bound
xchg
jb
mov
cmp
js
roll
jge
xchg
mov
andb
sub
dec
aaa
mov
push
sub
fdivp
mov
push
das
enter
pop
enter
je
pop
test
js
or
inc
or
mov
in
call
inc
adc
jg
aas
in
out
pop
mov
lcall
notl
pop
push
jp
add
out
aam
mov
sbb
jle
nop
shrb
cmp
push
call
add
roll
rolb
xchg
cmp
aam
cmp
int3
pop
lods
mov
test
test
lods
outsb
mov
insl
mov
push
adc
ja
aaa
mov
gs
dec
mov
xlat
into
imul
lods
movsb
cmp
pusha
mov
mov
lods
std
cmp
test
das
je
jp
imul
repnz
arpl
test
rol
scas
movsl
push
nop
inc
jno
fistps
loope
sbb
xor
sub
mov
mov
adc
loop
lds
sub
xchg
lock
popf
rorl
nop
cmc
inc
sbb
negl
adc
ds
mov
cmp
addr16
test
add
xor
fsubl
sub
mov
test
into
orl
neg
push
add
cli
pusha
push
pop
add
cmp
mov
pushf
jg
scas
jp
cmp
arpl
mov
xor
or
insl
frstor
out
rorb
clc
cwtl
inc
sbb
mov
push
popf
mov
sbb
mov
mov
and
xor
jae
outsb
scas
outsl
sti
hlt
lock
idiv
test
dec
stc
stc
lea
ss
sbb
loopne
push
pop
dec
pop
aad
jecxz
hlt
add
out
call
aas
mov
jno
int
in
push
mov
inc
fidivl
adc
mov
dec
fidivl
js
jl
dec
sti
sbb
add
cli
xor
out
mov
jmp
loop
inc
out
outsb
insl
and
sbb
loope
mov
fwait
out
sub
mov
pop
outsl
xor
bound
and
ret
dec
pop
lock
adc
mov
cmp
add
inc
xchg
xor
test
mov
pop
or
inc
jg
fldl
aam
lcall
and
rcrb
icebp
cli
dec
sahf
sbbb
xchg
pop
std
aaa
pusha
ret
out
mov
jns
fwait
adc
adc
jecxz
and
test
mov
or
testb
mov
sbbl
and
paddq
sbb
leave
dec
xchg
pop
loopne
adc
add
mov
dec
sub
inc
lret
inc
out
movsl
sbb
add
jo
jecxz
inc
fdivrs
adc
scas
adc
fbstp
dec
dec
rolb
mov
popf
repz
inc
dec
or
mov
stos
sbb
bound
mov
jns
psubb
jl
aaa
test
ficoms
xor
dec
push
inc
sub
push
ja
call
bnd
or
jecxz
and
adc
outsb
add
jg
jne
dec
mov
xlat
cmp
push
daa
push
subl
imul
xor
jle
not
fiaddl
jnp
test
sbb
push
jmp
jecxz
cwtl
lret
add
cmp
mov
int3
xor
loopne
mov
pushf
lcall
fwait
dec
stc
push
mov
dec
pop
in
and
jmp
fucomi
jno
sub
out
test
mov
push
mov
adc
jne
dec
pushf
arpl
pop
rep
sbb
cli
cmpsl
imul
mov
adc
mov
test
pop
es
vminsd
es
cmp
lret
outsb
cwtl
add
clc
cmpsb
pop
cli
mov
add
or
ss
sub
sbb
in
mov
push
adc
mov
xchg
adc
jecxz
test
shll
cmpsl
mov
mov
or
pop
mov
add
xchg
outsl
push
and
dec
xchg
mov
xor
inc
test
mov
pop
mov
xchg
jecxz
test
repnz
xor
rcr
inc
pop
lods
cmc
adc
xchg
ficoms
xor
stos
inc
pop
int3
fisubs
mov
dec
lcall
ss
mov
loope
push
fsubr
rorb
adc
cmp
xchg
adc
dec
out
xchg
inc
out
aad
inc
dec
leave
leave
jb
std
pop
fnstsw
loop
push
mov
rol
adc
xchg
lods
lahf
sbb
add
imul
cmp
pushl
add
mov
popf
or
push
jnp
pusha
repnz
lret
out
jns
cmp
add
jnp
divl
ss
push
dec
pop
arpl
lods
cwtl
mov
repz
popa
sbb
mov
mov
lds
sub
mov
in
pusha
push
sbb
sbb
adc
lods
adc
les
pusha
or
cwtl
leave
adc
inc
sbb
cmp
scas
xor
inc
out
sti
add
mov
loop
lahf
cli
call
or
pop
xchg
mov
int3
dec
pop
je
incl
aad
in
xlat
mov
xchg
xchg
dec
aam
es
and
mov
loopne
stos
dec
cmp
es
and
cmpsb
push
shl
out
cmpsb
cwtl
movsb
jp
mov
mov
into
insb
jle
xchg
imul
mov
scas
xor
lea
push
into
push
ficompl
adc
js
or
sarl
outsb
adc
sub
mov
dec
push
out
mov
mov
sub
test
jl
dec
adc
sub
ret
add
pop
or
aad
lcall
pop
push
sbb
cli
inc
pop
fcmovnbe
xchg
mov
jae
mov
loopne
nop
pop
dec
xchg
fs
pop
daa
push
mov
jbe
jge
jno
stos
cmc
pop
fimull
dec
mov
inc
jno
call
sub
jmp
mov
fistpl
dec
pop
cmp
popf
cld
push
lret
hlt
xchg
mov
shlb
enter
xor
mov
push
mov
sahf
xchg
imulb
je
nop
xor
add
orb
rcrl
mov
add
pop
lret
std
out
xchg
popf
fnstsw
jmp
add
sahf
add
sti
inc
js
pop
out
and
mov
jmp
mov
jae
sbb
test
add
loop
cmpsb
add
fnstsw
sbb
loop
cmp
dec
jge
lcall
clc
cmp
push
adc
lcall
add
lods
push
adc
call
insb
add
jmp
nop
stos
daa
ret
jne
push
mov
mulb
in
add
dec
orb
inc
xor
jge
jno
cmp
jl
lret
jp
mov
imul
sub
notb
add
xchg
rcrb
xchg
flds
hlt
sub
and
inc
xchg
push
sbb
cmpsb
adc
icebp
jbe
negb
out
cmp
jns
shll
ret
clc
je
sar
sub
mov
jnp
pop
out
jb
ficomps
push
cmpsl
insl
rcrl
mov
mov
or
adc
dec
int
adcb
push
lahf
ljmp
out
mov
mov
dec
or
insl
pop
mov
mov
xor
xor
push
xor
shll
lea
mov
lcall
aad
jecxz
adc
mov
jne
icebp
rorb
adc
cmp
and
fs
cmp
sub
jnp
dec
ret
xor
mov
push
or
or
ficompl
add
rolb
jno
scas
stos
int3
pop
repz
rcll
push
jbe
dec
mov
les
cmpsl
stc
addr16
bound
jecxz
cli
xor
mov
sbb
xor
divl
inc
push
mov
pop
imul
mov
enter
icebp
sbb
repz
test
or
push
das
ds
sub
cwtl
je
xchg
ja
mov
ret
andb
add
sbb
jae
insb
mov
inc
mov
pushf
es
mov
fildll
ljmp
dec
jno
pop
jmp
mov
mov
ret
rcl
cli
mov
jge
dec
mov
cmp
push
imul
jb
ret
sbb
cmp
xchg
or
in
leave
int3
pop
inc
sub
push
or
sbb
imul
aaa
mov
inc
dec
cs
and
jnp
adc
cmp
add
and
test
xorl
shll
lods
pushf
and
rcrb
add
xchg
inc
repz
shr
xchg
xchg
push
sbb
mov
fwait
fwait
xor
pop
es
dec
out
stos
bswap
mov
mov
push
mov
mov
addr16
out
lcall
ljmp
sub
mov
scas
xlat
xchg
push
xchg
xor
jae
dec
in
adc
mov
push
lds
mov
mov
out
in
jecxz
pop
pop
mov
ds
mov
sub
jbe
dec
inc
js
rclb
imul
jns
movsb
mov
out
mov
xor
rcl
ss
fwait
push
mov
mov
sub
loop
loope
jmp
or
sbbl
add
ficompl
int3
xchg
xorb
stos
xor
sub
lods
xchg
mov
cmp
or
inc
sub
ret
ljmp
into
sahf
loope
sbb
jecxz
out
cmp
jae
jl
mov
incl
inc
inc
jmp
or
and
bound
jle
push
mov
jb
loopne
sbb
xor
std
lds
test
push
xor
mulb
push
inc
inc
dec
fisttpl
push
cmc
sub
dec
in
cmpsl
mov
or
cmp
loopne
out
movsl
in
fwait
jl
xchg
jne
sahf
ror
push
pop
mov
in
add
jg
mov
clc
loopne
push
push
fsubs
sti
fcmovbe
jno
sbb
mov
mov
sub
nop
jmp
mov
add
jmp
mov
sbb
cltd
adc
mov
adc
mov
out
aas
test
sub
ret
pop
jge
cmpl
lret
jb
pop
cmp
push
mov
repz
rorb
mov
insb
roll
add
inc
mov
xor
xchg
icebp
fsubrs
jecxz
out
fiaddl
or
sbb
rolb
cwtl
jmp
inc
insl
pushf
clc
xchg
nop
sbb
mov
cld
lods
cwtl
outsb
lock
movsl
lcall
push
and
adc
push
in
mov
adc
xchg
insl
imul
jle
divb
jne
addb
inc
pop
jns
pop
sbb
iret
xor
clc
jo
sti
jg
and
or
nop
jl
pushf
xlat
xorl
sub
into
or
mov
dec
stos
push
scas
pop
mov
lcall
popf
mov
insb
push
shrb
sbb
fidivs
shll
dec
iret
daa
mov
pop
aas
jmp
ret
in
xor
push
jb
mov
and
test
loop
aam
xorb
xchg
mov
mov
ret
push
pop
mov
rcr
bound
popa
xor
push
jg
fadds
in
insb
sbb
in
mov
gs
xor
mov
les
jp
or
and
call
shr
push
lcall
in
rorb
push
fcmovb
jg
push
add
aaa
and
out
dec
pop
dec
and
inc
hlt
lret
mov
push
xchg
popf
pop
pop
inc
mov
es
lods
ja
mov
ss
mov
movsl
mov
push
or
mov
cld
fisubrs
xor
sbb
stos
je
addr16
shl
xor
push
xor
outsl
xchg
out
mov
out
repnz
push
pop
cwtl
xchg
add
fxch
cmpsb
adc
loope
fstl
std
sbb
lcall
dec
push
bnd
int
xchg
enter
sarb
enter
fldl
popa
mov
push
mov
aad
mov
push
jae
sbb
lret
or
inc
dec
jae
add
sub
sbb
mov
adc
push
mov
repnz
insb
inc
sub
decl
dec
inc
jge
imul
sbb
sar
sub
mov
sub
sbb
sub
sbb
add
sbb
test
add
adc
push
arpl
mov
and
jno
or
push
or
inc
sub
mov
or
movsb
jle
pop
pop
and
cld
and
lahf
push
mov
test
into
sahf
lds
sysexit
out
xor
add
mov
out
sbb
lods
pop
jp
jmp
stos
dec
sbb
fs
aas
inc
in
jo
mov
dec
daa
icebp
or
cmp
xchg
insb
shrb
pop
sbb
fwait
dec
movsl
call
enter
pop
or
aas
pop
out
pop
adc
mov
jg
sbbb
ljmp
push
xor
inc
mov
adc
adc
sahf
ja
icebp
jo
cs
outsl
add
scas
es
xchg
mov
inc
stos
jae
push
mov
lods
add
add
movsb
pop
test
cli
sbb
xor
repnz
dec
in
xor
sub
mov
push
mov
pushf
test
int3
sbb
arpl
dec
clc
mov
mov
cmp
int
cltd
mov
mov
dec
loope
and
rclb
fwait
xor
jae
stos
mov
add
lret
inc
cmp
jmp
pop
jl
int
ja
lret
fiaddl
mov
add
mov
adc
push
aaa
bound
test
or
cmovo
cmp
out
and
aam
repz
xor
xchg
stos
push
xchg
in
push
dec
mov
jne
jnp
mov
adc
ds
mov
mov
fnstcw
lret
pop
outsl
sti
in
leave
cmp
js
lds
pop
adc
int3
mov
jnp
fcoml
enter
jle
and
and
cltd
cs
cli
and
in
mov
mov
out
insl
push
cmp
sarl
enter
mov
jp
cltd
rorl
jno
movsl
fcomps
push
jle
xor
xchg
push
sarb
out
sbb
inc
out
leave
sub
ror
or
into
in
ror
lock
sti
xchg
sarl
dec
stos
stos
pop
jns
mov
cmc
jnp
xchg
cmp
jle
xor
loopne
inc
mov
xor
lods
dec
insb
fadd
test
cmp
mov
std
subl
mov
addr16
das
mov
jmp
cmpb
mov
or
fs
insb
push
jmp
movsl
push
xlat
in
xor
cmp
aad
inc
shlb
bound
add
fidivs
sub
xchg
out
xor
mov
push
fnstenv
movsb
mov
sub
movsl
xor
test
jle
adc
push
scas
or
imul
pop
in
xor
ljmp
jae
inc
xor
xor
push
sahf
sub
out
inc
jb
sub
xchg
test
or
xchg
outsl
jecxz
je
adc
leave
pushf
js
add
js
sahf
in
push
mov
jmp
mov
inc
pop
push
hlt
mov
leave
scas
addr16
inc
es
pop
sar
bound
xchg
mov
sub
inc
pop
inc
lret
xor
xor
pminub
and
popf
sti
rol
and
push
lds
nop
adc
je
aam
out
inc
add
shrl
jmp
das
shrb
repz
lods
xor
sub
add
gs
fnstenv
or
ret
sbb
jae
dec
xor
aaa
and
xor
fidivs
out
adc
aaa
or
push
sbb
mov
adc
push
fldpi
fcompl
mov
cmc
dec
test
push
xchg
fists
out
jmp
roll
adc
sarl
push
mov
leave
iret
shll
sub
and
test
inc
jle
mov
popf
inc
inc
in
xor
and
outsl
sbb
sbb
and
adc
dec
enter
sbb
loop
sbbb
out
in
push
fstps
sub
pushf
test
push
shrl
ficoml
cwtl
xchg
xchg
rcll
sti
mov
add
pop
inc
mov
fldcw
add
xorl
stos
inc
negl
xchg
push
fcomps
pop
push
and
test
pcmpgtb
mov
addb
inc
leave
pop
cmp
sbb
pop
int3
daa
cwtl
jo
sub
cli
cmpsb
aas
push
add
addl
jae
push
mov
mov
je
insb
addb
xor
push
cmp
sub
ffree
xor
or
fdivl
test
jp
jo
pop
pop
out
jle
xchg
hlt
sub
inc
aas
mov
gs
lret
jae
mov
push
cmpb
cmpsb
cld
xchg
inc
stos
es
jo
in
daa
shlb
inc
adc
pop
mov
shlb
out
enter
mov
mov
xchg
icebp
loope
cmpsl
cmpsl
loop
jge
out
jg
xor
push
mov
mov
or
nop
mov
xor
inc
sahf
inc
and
adc
xchg
push
fwait
into
orl
int3
mov
test
scas
sub
mov
pop
adc
fdivrp
adc
mov
xchg
adcb
jno
es
addr16
ficomps
mov
mov
cmc
cwtl
pusha
pop
fildl
lret
rcll
out
lods
loopne
push
adc
cmp
sub
jle
fsubrl
push
jo
loop
xchg
push
jae
sub
mov
out
nop
mov
xchg
jg
add
cmp
sbb
push
jns
rclb
movsl
test
and
xchg
cs
je
sbb
in
shrb
pop
push
enter
push
sub
addr16
mov
push
js
push
adc
mov
sub
popf
cmp
cmp
mulb
push
daa
mov
sub
lock
shll
push
arpl
sbb
dec
lods
push
ss
mov
sub
in
and
mov
subb
scas
mov
popa
cmc
out
andb
popa
outsb
in
loop
mov
push
cmp
jmp
jg
scas
jns
mov
dec
pop
cmp
lret
fwait
in
pop
lret
jae
in
sbb
jg
or
xchg
dec
dec
xor
hlt
fs
test
in
jmp
mov
shl
gs
push
test
xchg
mov
ljmp
cmp
testl
insb
push
xor
loopne
lds
mov
pop
lods
ret
xor
aad
fsts
stos
mov
mov
test
mov
adc
mov
mov
inc
iret
loope
cmp
xchg
dec
lahf
stos
or
inc
imul
loope
ficoms
es
into
xor
inc
mov
jp
iret
addb
inc
inc
and
outsb
xor
sahf
pushf
cmp
dec
clc
push
test
xchg
push
ljmp
push
in
ret
cltd
cmp
lods
test
adc
hlt
js
outsb
cli
push
filds
add
xchg
ret
add
out
test
scas
test
sub
or
jl
cmp
adc
aaa
add
or
stc
cwtl
xor
gs
mov
insb
mov
std
push
push
and
fdivrl
mov
inc
mov
das
jge
pop
cmp
imul
mov
scas
or
fdivl
idivb
insb
adc
repz
add
pop
mov
xchg
lret
xor
mov
repz
insb
mov
xchg
les
movsb
adcl
imul
sbb
in
add
jp
test
pushf
adc
pushf
sbb
adc
mov
sbb
push
leave
push
in
xor
sbb
sub
or
cmp
push
sahf
pop
pop
adcb
stc
loop
inc
test
loop
add
andb
mov
stos
add
sub
repz
xor
jg
inc
xchg
jae
ss
mov
add
mov
jnp
push
or
pop
sti
in
es
cld
push
ja
popa
les
outsb
push
mov
xchg
push
xor
mov
ljmp
mov
cmc
push
fnstsw
jb
scas
xchg
daa
xchg
mov
push
test
sbb
sub
fcoms
arpl
test
or
mov
loopne
cmp
or
das
js
leave
mov
sbb
cmpsb
xchg
mov
leave
shll
add
sub
xchg
push
jge
bound
inc
and
mov
flds
or
xor
inc
add
lahf
jl
mov
xchg
xchg
mov
adc
push
movsb
test
outsl
mov
lcall
imul
mov
mov
add
adc
push
sub
sub
test
stos
or
repz
das
sbb
pusha
adc
lahf
repz
mov
jg
das
cwtl
xchg
addr16
notl
mull
int
sbb
or
jb
pop
and
push
xor
mov
lods
subl
mov
es
push
cwtl
repnz
jb
out
int
push
cmpsl
lret
xchg
jne
adc
mov
push
jne
jmp
iret
mov
xlat
cmp
inc
push
xor
sub
jp
dec
xchg
fnstcw
xchg
into
xor
adc
adc
push
jle
aas
rcrl
or
jne
jle
pushf
adc
mov
stc
mov
mov
movsb
out
in
push
mov
push
icebp
mov
mov
rorb
cmp
ljmp
mov
stos
mov
push
out
in
xor
fsubrl
movsb
enter
js
add
les
aad
and
jnp
out
cmp
inc
xlat
sub
mov
bound
fucomi
sub
mov
int
lods
mov
stos
cmp
xor
rol
ds
mov
dec
je,pn
movsb
out
mov
sbb
and
les
mov
popf
pop
or
sbb
pop
mov
cmpl
jb
aam
adc
fimull
lahf
push
push
cltd
addb
xor
push
jae
or
into
pushl
jp
out
pop
hlt
or
mov
pop
rcl
and
mov
out
lods
xchg
aad
jo
fs
fs
and
inc
sahf
push
test
pop
shll
iret
pop
dec
pop
sbb
lahf
adc
push
push
dec
xor
movsl
fsts
lret
loope
scas
mov
push
hlt
in
sbb
clc
sub
mov
leave
cmp
push
enter
cmpsb
push
push
adc
or
cmp
and
int3
test
enter
adc
icebp
add
or
pop
mov
rcll
cmp
adc
imul
adc
cltd
sub
test
push
push
ja
adc
ss
repz
cli
or
movsl
ret
es
and
xchg
lahf
xlat
mov
dec
sbb
push
lahf
in
jae
rcl
sub
add
pop
pop
call
loopne
pop
xchg
adc
icebp
inc
jbe
push
fmuls
lcall
into
inc
jno
arpl
add
pop
sub
pop
mov
dec
xchg
test
fisubs
sub
int3
dec
inc
cmp
es
mov
leave
loopne
ss
cmp
or
push
dec
push
mov
xchg
adcb
imul
mov
add
cmc
cmp
xchg
addl
xchg
mul
pop
loopne
ds
sub
loop
mov
xor
popa
aas
fs
sti
aaa
xlat
mov
fxam
mov
push
insl
lods
push
bound
neg
adc
popa
enter
iret
dec
addr16
loop
imul
stc
hlt
je
call
lret
pop
ss
les
fildll
mov
mov
stos
outsb
mov
orl
mov
xchg
jmp
cmp
add
adc
call
dec
push
jo
inc
jmp
enter
jg
lds
jl
fidivl
push
pop
mov
loopne
das
push
mov
adc
insl
lea
mov
shl
int3
outsl
jno
insb
in
xor
loop
or
sub
and
push
mov
mov
push
inc
scas
lods
jne
sub
stos
lods
cwtl
sbb
and
cli
sti
addr16
mov
test
jl
jp
push
push
inc
cld
and
push
xchg
jnp
repz
into
cmp
pop
icebp
push
mov
shlb
movsb
xchg
add
int3
xchg
shlb
imul
mov
fnstenv
shll
ljmp
cmpsl
aaa
test
sti
add
dec
push
mov
movsb
add
daa
pop
ret
jecxz
xchg
xor
subl
sub
sbb
test
dec
nop
mov
hlt
dec
xchg
lcall
mov
lahf
lods
hlt
insb
mov
inc
aas
inc
loop
adc
icebp
inc
das
and
sub
mov
addr16
shrl
in
out
ja
std
pop
mov
push
outsb
std
les
addb
dec
test
push
ss
mov
jne
sarl
cmpb
pop
xchg
mov
mov
mov
inc
je
clc
in
mov
fidivl
popf
jg
cwtl
mov
inc
xchg
je
mov
into
imul
dec
inc
fidivrs
and
popf
cmpsb
sub
outsb
mov
in
push
in
or
leave
pushf
mov
cmp
sbb
xchg
pop
push
jmp
push
fisubrl
jbe
cltd
jle
mov
add
imul
sbb
sbb
mov
nop
or
fisttpl
movsb
adc
fsts
loope
push
int
sahf
push
movsb
cltd
movl
sub
jbe
aas
rcl
and
jle
and
lock
sub
mov
jne
mull
int3
enter
mov
jg
cwtl
mov
rorb
cmpsl
in
test
xor
jp
mov
cmovne
inc
jb
inc
dec
das
dec
adc
cwtl
outsl
xchg
stos
push
lea
cmp
push
std
imul
pusha
sarb
ljmp
fidivrl
aaa
xlat
repz
xor
leave
mov
xor
jg
out
aaa
pop
sarl
mov
or
dec
mov
icebp
dec
cli
push
mov
scas
dec
jns
or
loope
jl
repz
push
loope
lcall
mov
stc
stc
or
xor
fwait
pop
lds
dec
xchg
add
mov
jbe
pop
arpl
mov
adc
inc
cltd
adc
cmp
pop
outsb
movsl
dec
fsubl
inc
add
pop
bound
cmp
and
pop
out
ret
jg
mov
outsb
xlat
mov
cwtl
inc
xchg
cmp
pushf
adc
or
fsubl
mov
jne
or
les
sub
cwtl
mov
xor
xor
push
pop
call
sub
dec
not
inc
shll
mov
cmp
mov
sarl
add
dec
in
pop
sbbl
inc
dec
scas
push
jmp
repz
cmp
mov
test
ret
add
mov
lahf
sub
xchg
jmp
rcrb
shrb
mov
rol
outsl
daa
cmp
sub
ja
push
stc
sbb
es
into
in
dec
cmp
rcrb
mov
in
xchg
pop
pop
pushf
push
sbb
jno
inc
cltd
xchg
dec
sti
cmp
jecxz
pop
xchg
mov
sbb
nop
inc
pop
fildl
aam
xor
je
adc
shrl
das
sub
xor
push
pusha
sub
jae
push
shr
sbb
pop
sbb
jle
cli
data16
sub
mov
pop
pop
pop
xchg
imul
fiaddl
loopne
rorb
adc
xlat
inc
adc
push
leave
jno
xchg
and
lahf
dec
outsl
decb
or
xchg
lret
pop
ficomps
adc
and
jg
mov
xor
shl
mov
jns
daa
aaa
mov
addr16
out
push
xchg
ret
test
jo
sbb
addr16
jb
or
or
push
dec
and
sub
pushf
das
outsb
mov
jecxz
inc
or
push
test
mov
dec
fidivrl
ret
push
pop
push
pushf
loop
xchg
xchg
movsb
pop
mov
repz
xchg
jmp
orb
mov
arpl
jne
call
push
loop
adc
fistpl
std
jmp
push
mov
mov
in
std
dec
icebp
mov
push
fbstp
mov
sbb
xor
jne
popf
pop
and
or
mov
mov
aaa
in
xor
xchg
sub
mov
iret
or
or
xorl
add
jmp
add
add
pop
and
test
addl
push
ds
jmp
cmc
pop
xchg
mov
jae
ret
dec
sbb
cmp
cmc
fisubl
dec
or
fildll
lods
inc
inc
xchg
rcr
ret
pop
aad
sbb
sub
int3
stos
and
repz
nop
xchg
lods
mov
mov
xchg
adc
rcrl
jp
adc
mov
ret
or
out
rorl
les
sbb
mov
lret
xor
dec
dec
je
xchg
or
dec
push
imul
aad
loopne
ficoms
jno
mov
mulb
out
test
xchg
loope
lock
dec
es
xlat
xchg
cmpsb
pop
adcl
jns
mov
jne
inc
fildl
jge
mov
add
les
xchg
fs
xlat
imul
test
ss
aam
push
cmp
leavew
jmp
popa
mov
mov
fldenv
shrb
sub
lods
adc
scas
jle
jge
dec
negl
push
daa
dec
and
add
imul
mov
push
add
loop
imul
xabort
push
std
rcrb
outsl
mov
xchg
aad
mov
pop
pop
int3
movsb
das
push
add
jno
adc
clc
add
stos
and
push
loop
rol
add
cltd
pop
mov
mov
call
sub
mov
jnp
jo
sbb
std
outsb
leave
loope
cld
pop
loope
rolb
popf
push
add
sbb
daa
jl
and
daa
movsl
jecxz
ss
hlt
pop
xchg
cs
sub
sahf
mov
cltd
mov
cmp
testl
outsl
je
ds
lock
cmp
aam
xor
sahf
pop
aam
jnp
mov
neg
lret
arpl
movsb
xor
lock
leave
or
pop
fcoms
xchg
and
out
hlt
sub
ljmp
dec
xor
sub
xchg
inc
mov
mov
clc
dec
pop
dec
out
aaa
adc
popf
bnd
jnp
imul
or
push
sbb
cmp
xchg
mov
dec
lret
or
pop
sahf
sub
mov
mov
divl
xor
sahf
push
and
clc
dec
repnz
shll
dec
lea
testb
push
jmp
popa
fisubrl
adc
mov
jno
xor
stc
ja
call
inc
adcl
js
mov
nop
add
js
inc
sbb
pushf
imul
movsl
pop
jle
jg
jecxz
adc
cld
xchg
add
push
push
cli
leave
cmp
pushf
push
pusha
into
add
mov
mov
inc
mov
dec
push
notb
push
scas
or
aas
xchg
imul
mov
lret
xchg
xlat
lret
int
pop
push
xor
lret
lahf
mov
push
inc
pop
inc
insb
ror
enter
fistl
pop
xor
lods
and
jo
xchg
adc
sbbl
into
sti
pop
movl
out
mov
testb
stc
jno
arpl
and
xchg
sbb
mov
jns
mov
jmp
push
sbb
imul
xchg
dec
sub
adc
and
and
out
mov
sarl
mov
dec
pop
jo
mov
notl
test
mov
jg
pop
pusha
outsl
outsl
jnp
add
cwtl
jno
lret
inc
mov
mov
pusha
push
addr16
call
mov
sbb
arpl
cs
push
lods
pop
in
mov
and
sbb
das
lret
inc
insb
adc
arpl
enter
rolb
insl
aas
mov
lods
pusha
aaa
adc
sub
repz
sbb
ret
movsl
sbb
push
nop
out
or
mov
jg
xor
pushf
aad
add
or
xchg
lahf
jecxz
and
xchg
int3
sub
push
ja
pop
inc
in
pop
dec
icebp
cmpsl
pop
sbb
test
sti
cmpsb
cs
xor
imul
dec
test
into
adc
adc
push
fidivrs
imul
cmp
cli
adc
in
adc
fwait
pop
ficompl
sbb
bound
inc
and
mov
mov
pop
pop
fsts
in
xchg
sub
sub
mov
clc
fbld
imul
cmp
push
je
imulb
lods
lds
hlt
xchg
inc
out
sahf
lods
loopne
mov
xorb
movsl
jae
into
mov
mov
cmp
js
in
adcl
ss
xchg
sti
inc
shlb
jg
ficoms
mov
repnz
pop
or
mov
mov
pop
dec
mov
dec
sub
ss
imul
into
sbb
sbb
js
rcrl
xor
lcall
pop
cmp
push
je
or
xchg
sbb
sub
pop
and
xchg
xor
jg
push
loope
cmpsl
push
mov
xor
cs
jnp
pop
mov
in
sbb
jae
jecxz
aad
lods
pop
adc
and
mov
mov
mov
and
stos
sub
sub
imul
mov
inc
and
cmp
mov
enter
dec
jge
pop
insb
inc
mov
jecxz
push
cmp
jp
fdiv
lds
add
push
mov
nop
push
xlat
movsl
mov
dec
js
fsubrs
test
or
jo
movsb
or
into
int3
xorb
or
jmp
mov
push
cmpb
insl
adc
lcall
pop
push
xor
dec
and
xchg
pop
in
fisubs
mov
cmp
cltd
pop
inc
shrb
scas
cwtl
adc
insl
into
cli
xchg
jo
and
fcomps
add
mov
and
mov
or
jecxz
lea
xor
jg
ljmp
sbb
outsl
xor
push
adc
cli
dec
rolb
popa
jbe
xchg
jge
inc
test
mov
cmp
ljmp
mov
pop
pop
inc
sub
loopne
mov
xchg
sbb
sbb
jae
out
fstpl
dec
and
sbb
sub
jmp
push
ret
jmp
ja
xchg
insl
sub
lea
lea
jnp
in
xor
cmp
out
sub
xchg
mov
rclb
xor
rdpmc
and
in
xlat
bound
pop
lahf
sbb
xor
lret
mov
mov
adc
or
pop
movsb
aad
pop
mov
lahf
xor
push
dec
cmpsb
aas
push
cmp
fwait
cmp
lods
imul
push
dec
iret
and
cmp
aad
mov
pusha
jmp
inc
fstpt
mov
xor
dec
das
pop
push
push
xchg
fwait
add
dec
out
adc
cmp
in
mov
enter
call
jmp
jnp
addl
push
repnz
fldcw
mov
dec
ljmp
add
dec
fldl
repnz
jle
mov
loopne
fimuls
inc
pop
inc
lahf
fdivs
push
xor
sbb
mov
mov
jo
sahf
sbb
test
dec
cltd
rorl
mov
gs
mov
mov
scas
mov
jl
lret
add
add
push
adc
cmp
stos
lcall
rclb
fldt
cli
enter
stos
inc
dec
cmp
push
movsb
dec
sar
mov
push
outsl
push
sub
cmp
mov
sbb
sub
inc
test
sbb
lret
fwait
push
xlat
xchg
pop
ret
stos
mov
inc
in
je
mov
mov
xchg
dec
lods
fsubr
jge
outsb
cmp
sbb
inc
stos
xchg
ds
inc
imul
imul
push
jno
sbb
jge
in
mov
stc
lret
ja
inc
push
xchg
subl
nop
ss
jecxz
shlb
mov
dec
sbb
imul
loop
mov
test
pop
inc
sub
int3
sti
aad
scas
lcall
mov
outsb
cltd
push
hlt
jo
sbb
push
xchg
fimull
sbb
stos
push
mov
scas
jmp
inc
xchg
sub
cwtl
sbb
pushf
or
test
lret
pop
or
jno
mov
xchg
test
jl
in
insb
pop
cld
cmp
xlat
rcrl
int
add
inc
outsl
scas
pop
std
cmc
sbb
dec
fdivrl
sar
adc
push
data16
mov
pop
pop
xor
daa
test
and
push
outsb
xor
mov
in
test
jb
jmp
pop
mov
cmpsb
loopne
movsb
ja
and
dec
dec
inc
lcall
jl
pop
jp
adc
jmp
xor
lods
jmp
mov
nop
and
es
stos
cld
sti
call
mov
insb
inc
dec
cmp
inc
jno
cmc
addr16
push
push
mov
jmp
pusha
xor
das
dec
out
das
xchg
adc
loopne
mul
cwtl
cmpsl
jbe
xor
fidivrs
jg
xchg
rcrl
xchg
imul
jmp
cltd
mov
lea
mov
pusha
push
bound
inc
loopne
add
or
subl
movsl
push
ds
xchg
bound
cmp
flds
inc
cmpsb
or
mov
and
jns
mov
fwait
ja
xchg
rclb
xchg
stos
add
mov
insl
add
lret
add
pushf
ds
jle
and
je
repnz
dec
sbb
adc
cmp
push
inc
bound
sbb
adc
shrl
xor
cli
in
xchg
cmp
xchg
testb
jnp
adc
sub
insl
out
jmp
or
jae
arpl
js
xor
mov
imul
jo
sub
dec
jns
mov
pop
pop
stos
jecxz
out
loope
test
sti
sub
xor
jge
movsl
subb
lcall
mov
cmpb
add
cmp
jne
push
lahf
les
pushf
iret
pop
in
xor
mov
jbe
in
daa
icebp
rorb
pop
sub
iret
out
movsb
jmp
jnp
sahf
mov
in
leave
gs
clc
popf
lret
mov
push
cltd
cmp
int3
add
sub
cli
inc
jle
popf
imul
add
inc
or
adc
cli
out
lret
std
or
pop
mov
test
xor
loopnew
loopne
push
or
aad
and
lret
sbb
inc
xor
test
and
popf
and
aaa
add
push
test
inc
mov
je
pop
into
loopne
clc
or
or
mov
out
fidivs
data16
iret
mov
dec
in
and
push
enter
xchg
in
inc
aad
mull
in
loope
int
aaa
popf
in
push
and
mov
ljmp
inc
xchg
jp
call
pop
dec
sub
daa
xchg
pushf
ljmp
xchg
and
rolb
pop
mov
mov
or
les
jo
repnz
cmp
add
scas
fisubrs
xchg
cld
sarl
or
test
dec
adc
popf
fsubl
xor
cmc
dec
nop
mov
andl
mov
mulb
jg
push
adc
jg
jae
movsb
or
or
push
cwtl
faddl
js
movsb
cwtl
mov
lahf
adc
in
sbb
jb
cmpl
mov
repnz
xchg
shll
xor
fdivs
xor
dec
int3
mov
cmp
pop
pop
inc
in
pop
popf
push
push
div
push
shlb
mov
dec
or
cmp
addr16
negb
test
test
out
fs
push
fcoms
cmpsl
push
dec
sbb
or
mov
xchg
xor
jle
jle
push
lahf
pop
or
lea
ret
xor
sub
sbb
add
pop
scas
cs
dec
and
sub
dec
dec
and
aad
clc
les
fucomip
or
jp
lea
push
mov
loopne
and
sti
dec
mov
lods
movl
aam
mov
aaa
mov
in
dec
pop
rorl
pop
test
xor
aas
push
test
mov
das
pop
cmp
push
adc
stc
mov
sbb
xor
sbb
sti
jb
dec
sar
ficoms
mov
frstor
fcoms
push
or
cmp
repz
sahf
or
jae
insb
adcl
and
gs
xor
xlat
add
out
aas
hlt
popa
or
and
mov
loop
bswap
loope
jnp
push
lret
mov
fst
jo
aas
or
mov
into
xor
pop
mov
mov
add
leave
inc
sub
adc
dec
inc
shl
out
xor
adc
xchg
std
mov
or
add
js
popa
adc
sub
call
jnp
xor
sub
int3
push
andl
mov
sbb
jecxz
js
aas
sbb
jg
cmpsl
xchg
mov
lcall
push
ret
je
mov
mov
pop
mov
sub
insl
shll
push
cwtl
push
cmp
fwait
adc
in
test
xchg
ret
add
pop
in
test
inc
rcrl
pop
lahf
xchg
mov
adc
push
lock
jmp
push
inc
pop
ss
sarl
cmp
push
sbb
mov
or
and
popa
push
add
inc
into
jmp
adc
dec
cmp
and
inc
mov
stos
dec
cli
ds
out
mov
cmp
lock
mov
xor
gs
aaa
ficompl
dec
push
jno
insb
xchg
mov
jae
fsubrs
aad
jo
mov
ljmp
adcb
push
ret
sarb
fimuls
jecxz
dec
jb
and
xor
jecxz
repnz
jne
cs
cmpsl
mov
aam
xor
push
sub
les
daa
push
and
test
enter
setno
jo
iret
loope
sbb
xchg
sbb
mov
dec
mov
imul
inc
xchg
lock
mov
iret
push
shrl
int
jne
jge
jg
cltd
loop
cmp
daa
cmp
fistpl
stc
das
out
leave
pop
rorb
lds
fcoml
fistl
xor
push
xlat
lock
adcl
cld
or
movsl
sahf
jl
mov
test
cmpsb
dec
sub
ljmp
rol
add
push
xchg
ss
imul
cli
lods
sub
xchg
fmuls
test
add
pop
xchg
push
cmp
aam
pop
sbb
fisubs
ret
cmp
dec
decl
sub
fnstcw
movzwl
lahf
int
nop
and
hlt
or
push
xor
clc
xchg
fadds
out
mov
loope
cld
ja
imull
push
call
iret
push
rcll
bound
inc
inc
call
outsl
jmp
inc
inc
andb
cmp
call
sbb
sub
jmp
inc
lret
mov
ljmpw
and
dec
pop
leave
outsl
imul
shrl
xchg
fildll
ret
mov
xor
xlat
pop
xchg
pop
xchg
leave
int3
mulps
ret
inc
loopne
orb
mov
test
xor
mov
pop
mov
sti
notl
mov
sub
cld
xor
adc
mull
jb
jmp
add
pop
loopne
lds
push
inc
cmpsl
pushf
mov
mov
lods
add
lahf
daa
mov
neg
or
mov
pop
lock
inc
scas
or
sbb
push
inc
fidivs
in
dec
cmp
je
mov
xchg
sub
dec
in
movsl
sub
push
push
lods
pop
test
jbe
loop
mov
arpl
mov
sbb
sbbb
add
sub
popa
cwtl
shrl
out
in
cld
inc
adc
es
js
repnz
and
pop
jg
pop
sbb
add
jne
mov
pusha
pop
sti
pop
shlb
lret
fwait
inc
gs
adc
pop
fdivl
in
add
adc
mov
jl
dec
ja
stc
jbe
fistpll
xchg
bound
sub
dec
iret
xchg
jmp
jne
sbb
frstor
mov
loopne
fstl
into
mov
pop
rorl
ja
aas
ds
scas
push
or
mov
movsl
pop
dec
aas
xor
dec
shrb
pop
outsb
cmp
sahf
sub
xchg
jnp
mov
xor
adc
xchg
push
lods
and
sbb
in
out
lahf
orl
sbb
jo
cwtl
out
mov
cld
je
ss
dec
sub
iret
mov
sub
push
and
mov
movsl
mov
xor
loopne
xor
iret
ret
xchg
orl
pop
imul
mov
dec
push
lea
inc
ss
mov
scas
cmp
fcomip
or
in
dec
fisttps
cs
sbb
movsl
add
cs
xorl
mov
adc
dec
xor
aaa
push
test
cmp
add
movsb
in
sarl
faddl
pusha
cmp
mov
lahf
stos
xchg
jo
arpl
push
or
xchg
aam
bnd
cmp
fnstsw
out
inc
arpl
cmp
sbbl
lods
xorl
fsub
lds
jp
clc
sahf
jmp
push
es
into
stc
sbb
xor
jno
jmp
ficomps
sbb
push
and
sub
out
dec
pop
sub
xor
notb
mov
jp
in
mov
mov
data16
mov
cli
outsb
out
jne
xchg
pop
cmp
mov
mov
stc
mov
je
xor
pop
int3
inc
ljmp
sti
push
shlb
sahf
adc
push
enter
mov
adc
jg
and
loope
adc
mov
adcl
shrl
pop
jbe
and
jne
dec
outsl
loopne
outsb
push
jb
ss
mov
movsb
insl
push
lahf
out
sbb
in
jp
cld
mov
pop
pop
push
cmp
ficomps
lcall
int3
sbb
push
xchg
shlb
idiv
je
fdivr
sub
mov
mov
xchg
jne
fisubrl
mov
or
ret
inc
lods
cmp
pop
scas
out
add
sbb
pop
iret
clc
js
aaa
push
stos
rorb
lea
mov
lock
stos
push
jb
sbb
cmc
or
dec
clc
cld
rolb
std
dec
mov
ret
insl
mov
dec
lods
mov
out
cmpsl
push
mov
gs
fs
movsb
cmc
iret
pusha
lahf
jb
gs
jo
test
bound
sbb
jp
xor
dec
pop
data16
adcl
mov
movsl
fisttpl
mov
xor
dec
inc
test
xor
pop
xor
adc
or
fisttpl
loope
psraw
jp
inc
negl
xchg
inc
imul
ja
or
daa
out
fdiv
or
mov
xor
mov
cmp
add
cmpsl
cmp
sti
inc
sub
rcrl
add
decl
fistpll
and
sbb
hlt
mov
out
push
lea
dec
cmp
dec
sbb
jne
int3
and
inc
cmpb
std
push
xorl
xchg
sbb
repnz
daa
outsb
mov
les
aam
jge
mov
jecxz
push
push
bound
cmp
jns
std
or
es
in
mov
jno
pop
movsb
in
push
enter
inc
movsb
lds
xor
or
cmp
out
dec
or
mov
mov
or
push
mov
sbb
jmp
cmp
mov
call
vmovntps
add
filds
sti
xor
fwait
mov
push
push
push
jle
pop
sub
and
pop
xchg
bnd
adc
movsl
jge
cmp
fsts
xor
dec
mov
sbb
dec
pop
sub
aad
jns
sub
pop
add
xlat
push
in
inc
push
sbb
mov
push
js
jmp
push
popf
lods
stos
fs
add
mov
ljmp
mov
and
push
adcl
xchg
repz
push
bound
test
or
stos
and
and
jmp
out
sbb
aad
imul
lret
int
mov
hlt
cmp
dec
pop
sub
xchg
scas
movsl
mov
or
jle
push
push
mov
or
xchg
xor
push
dec
lcall
add
lahf
sti
sub
jg
hlt
movsb
icebp
fmull
inc
or
jl
sbb
cld
jo
iret
adc
sbb
jle
jns
cmp
repz
clc
mov
icebp
shll
sbb
xchg
jne
repnz
and
xor
nop
ret
jp
std
sub
and
cld
imul
loope
clc
mov
bound
mov
cmp
in
or
sbbb
call
int
lret
loop
popf
out
add
mov
imul
xor
test
cs
retw
xchg
rorl
aad
add
mov
sub
loope
jno
inc
sbb
jp
pop
cmp
fidivrl
pop
aas
inc
stc
test
cmpb
in
mov
push
jae
lahf
js
pop
or
rorl
jmp
push
insb
push
out
pushf
fbstp
jle
pop
lea
div
fisttpl
dec
or
imul
lds
adc
add
scas
aam
sbb
cmc
pop
push
pop
fdivrl
out
mov
xchg
cltd
fsubrs
mov
xor
push
add
dec
test
xchg
inc
push
movsb
or
dec
aad
test
mov
cmp
push
cmpsl
jmp
dec
dec
cwtl
sbb
int
push
cs
ljmp
in
sub
jg,pt
enter
aas
xchg
lods
icebp
and
add
pop
mov
mov
scas
fldl
aas
push
fsts
das
jle
outsl
push
loop
adc
or
dec
js
mov
pop
iret
xor
dec
dec
cli
jle
mov
iret
mov
sub
cwtl
gs
dec
inc
gs
nop
jo
fists
mov
test
and
fcmovnu
testb
mov
jo
popf
push
mov
jl
cs
movsl
xor
movsl
jns
add
sub
jl
xor
or
jg
shlb
adc
popf
into
mov
popf
inc
xor
fimull
or
and
mov
lret
push
push
jbe
scas
sub
shll
fisttpll
mov
sbb
jae
xchg
push
inc
popa
lods
fmull
add
mov
dec
pop
cmp
mov
neg
out
jg
shrb
fwait
and
jb
mov
je
cmp
aaa
dec
adc
mov
push
xorl
adc
adc
dec
lahf
not
or
in
test
or
movl
mov
xchg
rcrb
and
dec
dec
aas
mov
fisubl
mov
jle
jne
pop
test
add
fidivl
es
test
ljmp
add
cli
std
lcall
pusha
insb
popa
sbb
rclb
int3
nop
jo
xchg
incl
push
mov
push
fisubrl
test
dec
mov
aad
fdiv
mov
mov
pushf
jno
xor
ret
xchg
aas
add
pop
dec
push
xchg
clc
lret
sub
ss
xchg
cwtl
add
add
bound
jno
or
inc
adc
mov
inc
addr16
loope
ficomps
sub
xchg
out
sub
xlat
add
pushf
mov
ret
xor
int
data16
sub
adc
add
fiaddl
ljmp
icebp
dec
jns
pop
out
dec
cli
out
outsl
icebp
mov
inc
std
imul
das
xor
xor
test
adc
mov
test
dec
push
mov
xchg
mov
aad
push
repz
pop
jecxz
test
loop
dec
sbb
cwtl
test
mov
iret
pop
int
adc
in
std
mov
or
rclb
mov
jbe
inc
addr16
aas
push
sbb
cmpsb
cs
pop
inc
addr16
mov
add
push
pop
fsubr
testl
jae
xchg
in
add
cmpsl
sbb
jmp
mov
test
mov
insl
push
sbbl
mov
xor
loope
xchg
and
out
xor
push
cmpsb
push
arpl
xchg
dec
jg
jmp
xor
pop
mov
cmp
mov
inc
scas
mov
lock
mov
lcall
mov
in
loopne
xor
and
jg
xor
stos
pop
inc
sub
xor
fidivrl
push
jne
ret
mov
dec
push
mov
icebp
dec
mov
faddp
jne
mov
les
daa
dec
ljmp
fdecstp
add
push
push
mov
pop
fldenv
pop
clc
jmp
jp
cmpsb
ljmp
imul
movsb
mov
mov
ljmp
cli
xchg
lret
add
int
mov
xor
rolb
sub
mov
add
out
or
test
cmp
test
je
inc
repnz
aas
inc
daa
loopne
cmpsl
iret
push
out
aas
cs
mov
sbb
jg
lret
sahf
sbb
dec
outsl
cmp
sbb
pushf
fs
nop
hlt
push
scas
xchg
pushf
jo
pop
ds
sub
mov
int
hlt
jb
xor
jnp
xor
mov
fmul
inc
repnz
out
and
fnstsw
aaa
pcmpeqb
mov
inc
or
sub
stos
fiaddl
int
test
lods
push
je
jp
ja
das
sub
lahf
in
aad
rclb
sbb
and
loope
andl
xchg
xchg
mov
es
inc
lock
and
xchg
filds
xor
pop
fcomps
testb
pop
std
lret
push
xchg
outsb
fs
daa
es
call
add
nop
clc
outsl
jns
or
mov
ljmp
adc
shrl
pop
pop
lods
pop
daa
mul
cmpb
add
icebp
mov
sbb
cld
mov
int3
ja
test
ds
adc
nop
inc
mov
cs
mov
jo
inc
or
sbb
ljmp
ljmp
sub
rcl
push
ficoml
insl
fnstenv
sub
pop
fldenv
in
mov
sbb
or
lods
hlt
dec
sbb
fs
xchg
jne
and
mov
sti
rcll
and
decb
mov
pop
fsubrl
push
mov
mov
inc
inc
or
stc
call
sub
or
lea
mov
enter
xchg
sub
xchg
fwait
pop
add
pop
xchg
popa
test
or
sahf
pop
mov
dec
dec
test
cmp
adc
enter
xchg
and
sbb
mov
scas
nop
xchg
jno
dec
mov
cmp
int3
jbe
outsl
mov
aaa
and
dec
jle
pusha
addr16
bound
mov
mov
jl
push
rcll
aas
or
sub
scas
in
clc
inc
je
call
insb
xor
mov
insb
or
xlat
aad
mov
sti
adc
mov
arpl
in
sub
inc
fwait
clc
nop
or
mov
pop
mov
inc
orl
and
insb
adc
fs
loopne
negb
fst
xlat
mov
cmp
cld
pop
in
enter
aaa
sbb
imul
dec
mov
cmpsb
jne
cmpsb
xchg
inc
sub
sbb
lret
mov
roll
mov
mov
int
xor
aad
adc
shrb
xor
lret
xor
and
mov
fsubl
mov
pusha
pop
into
fisttpl
push
sti
aad
ficomps
cmp
jg
pushf
mov
loop
xchg
sub
add
sbb
lock
sbb
loope
mov
sub
adc
sbb
push
cmp
cmpsb
aaa
mov
push
mov
fimull
stos
or
xor
arpl
mov
or
stos
popa
or
sbb
cltd
lcall
arpl
in
bound
mov
xor
or
aad
xlat
cltd
dec
arpl
push
mov
cmp
sub
in
cltd
ktestb
hlt
fistl
leave
int3
lcall
dec
ljmp
mov
push
sub
scas
notb
mov
sub
lret
jno
insl
jne
rclb
and
cmp
and
pop
xlat
and
push
rcr
dec
ds
loope
xchg
mov
mov
jg
jo
xor
pop
xchg
divl
inc
outsb
neg
out
mov
insb
mov
arpl
addr16
imul
inc
xchg
ss
icebp
inc
xchg
sbb
pop
push
xor
pushf
and
push
cltd
aam
cmc
mov
negb
sub
daa
cld
lea
ss
mov
sbb
in
mov
out
add
sarb
sub
filds
fs
in
pop
les
mov
hlt
jge
jns
jnp
aaa
and
dec
fsubrl
loop
adc
outsl
fwait
push
pop
mov
test
push
sbb
mov
mov
jl,pn
and
jne
imul
cli
push
sub
mov
jecxz
mov
mov
insb
addb
dec
cmp
pop
inc
pusha
jns
cmc
data16
lods
push
pop
push
pushf
rcr
je
movl
xor
imul
push
cmc
push
mov
lahf
pop
xchg
shld
dec
mov
fbstp
neg
xor
int3
je
repz
aam
push
xchg
dec
in
bound
repz
dec
and
jnp
inc
lcall
adc
aas
sbb
mov
sti
pusha
cmpsl
negb
jb
push
pop
jmp
inc
adc
sub
enter
cmpl
pushf
cs
push
arpl
mov
mov
aam
or
pop
pop
bswap
xor
inc
mov
test
jp
inc
js
hlt
dec
mov
in
cmpl
xlat
aaa
hlt
ficompl
jle
movsl
or
mov
mov
lock
pushf
push
cltd
xchg
repnz
mov
fdiv
stc
push
or
call
sbb
loop
popf
jae
lds
pop
shr
mov
cmp
enter
aad
js
xchg
inc
pushf
or
cld
adc
lret
pop
jg
cmp
add
cwtl
push
shll
and
in
sbb
leave
adc
sub
ret
push
xchg
cmp
dec
in
test
dec
add
std
jns
add
push
jle
aam
mov
into
mov
xchg
mov
lock
jl
insb
mov
jno
mov
pop
stos
xor
ljmp
iret
out
push
mov
pushaw
mov
mov
mov
lret
inc
dec
cmpsb
mov
mov
sahf
ds
jbe
pop
cmp
cmp
cmpsb
cmp
mov
mov
xor
cvtdq2ps
mov
jo
stc
inc
pop
xchg
jns
rorb
jge
mov
pusha
pop
xchg
or
xchg
adc
sub
rcrb
jge
push
push
jnp
xlat
outsb
scas
insb
pop
xorb
jl
cmp
xchg
xchg
sbb
cs
add
popa
inc
adc
jl
dec
sub
mov
fwait
mov
jle
adc
inc
mov
sbb
scas
shlb
jge
push
and
loope
inc
subl
mul
jg
hlt
push
nop
fimuls
push
shl
cmp
je
adc
sbb
mov
cmc
xor
sbb
push
jge
sub
inc
xor
lods
sarb
les
pop
push
mov
mov
sbb
lods
sarl
cs
mov
sbb
add
mov
stos
cwtl
sub
pop
fsubr
pop
mov
xchg
aas
adc
shlb
wbinvd
mov
adc
aad
push
mov
aam
lods
mov
mov
mov
xor
xor
stos
push
scas
test
out
pop
push
mov
add
fistl
inc
adc
jne
ss
xor
les
push
es
les
sahf
jno
push
cmpsb
or
xchg
lcall
gs
mov
outsb
jae
mov
in
add
int3
xchg
pop
imul
sbb
loope
popf
jnp
xor
xor
or
xlat
testb
jl
and
xor
shlb
jns
mov
rorl
lahf
imul
fs
cmc
notb
cmp
sub
adcl
outsb
sub
cmp
in
fldt
pusha
dec
and
jmp
or
cmc
repz
lret
enter
push
cmpsl
loop
pop
sub
cmp
call
push
jmp
icebp
jne
mov
imul
icebp
mov
scas
not
sahf
stos
adc
fcompl
arpl
stc
push
pushf
js
subl
movsl
cmp
popf
push
mov
mov
xlat
ficomps
lds
ljmp
sbb
data16
scas
cmp
daa
sbbb
in
aad
psubusb
sbb
faddp
xor
orl
imul
lret
push
sub
or
in
lret
aaa
ja
push
and
jle
fsubrl
repz
pop
div
inc
lock
inc
mov
dec
adc
sbbb
outsb
stos
mov
push
dec
imulb
jle
xor
pop
rol
test
jno
add
ret
in
mov
xor
inc
sbbb
rcrl
in
insb
xchg
pusha
or
push
int3
sbb
adc
rcrw
fldenv
clc
xor
daa
imul
lock
hlt
push
stos
sbb
or
cmp
sbb
cwtl
xor
out
in
outsb
jmp
and
push
jmp
mov
cs
aam
cmc
sti
clc
arpl
in
mov
jl
fidivrl
sti
pop
mov
adc
and
add
sub
cmp
jns
rcl
dec
or
push
mov
mov
inc
arpl
xor
fcmovnu
ret
imul
mov
push
mov
out
add
cmpsb
mov
lcall
flds
movl
push
mov
xor
jg
jae
pop
cmp
dec
ffreep
add
lcall
js
cwtl
imul
dec
jbe
ret
mov
xlat
mov
xlat
adcb
out
stos
lcall
fbld
aas
and
pop
inc
inc
adc
repnz
test
fsubr
inc
imul
cmp
and
sbb
add
inc
scas
push
push
jmp
dec
loope
pop
ljmp
sub
push
sarl
sbb
pop
pop
repnz
popa
mov
enter
insl
push
adc
xchg
addr16
jmp
mov
push
icebp
mov
push
fildll
or
mov
popl
push
ss
and
nop
enter
sahf
ja
push
pop
cld
in
adc
jmp
icebp
scas
cmp
sub
aam
mov
iret
cmp
pop
push
add
xchg
addr16
xchg
sub
jg
cld
outsl
scas
popf
cmc
push
mov
shll
cmpsb
les
mov
fdivrp
in
rcl
movsl
in
add
orl
push
sbb
lret
popaw
in
ss
lret
test
xchg
pop
dec
lods
mov
bound
lret
adc
lods
xchg
fstp
jp
lahf
mull
inc
cs
in
add
jg
fildll
mov
adc
xchg
sub
pop
add
push
inc
push
push
cltd
add
nop
jns
push
stc
jmp
add
jno
ret
push
mov
cmovns
repnz
dec
sub
loop
das
rorb
int3
ds
cltd
dec
je
imull
pop
rcr
mov
fadds
push
fdivr
jo
xchg
push
mov
das
adc
adc
dec
ljmp
loop
lds
icebp
testb
lock
test
sbbb
mov
int
mov
sub
push
pop
xor
adc
xchg
fs
mov
inc
cli
xchg
adc
mov
test
inc
pop
xchg
adc
inc
aad
stc
pop
mov
or
xor
cmc
aad
or
ret
dec
and
ja
ljmp
sub
orb
aad
loop
sarb
jle
adcb
inc
popa
movsl
or
fs
ds
push
cwtl
push
loopne
aam
xor
sbb
lock
push
aaa
xchg
out
push
mov
xchg
call
inc
and
mov
pop
cmp
adc
mov
xchg
lock
xchg
adc
dec
jmp
inc
cmp
int3
std
ds
xor
fwait
inc
add
and
in
push
pop
push
ljmp
sub
imul
mov
sub
fidivs
sbb
mov
loope
aaa
mov
cmpsl
push
shrl
inc
dec
icebp
mov
push
aad
lds
fstpt
lahf
enter
push
adc
or
push
leave
test
and
sub
jne
addl
push
inc
dec
adc
sbbl
mov
sub
lock
xor
jmp
insl
push
mov
dec
icebp
mov
movsb
ret
arpl
mov
data16
jecxz
xor
adc
cmp
push
mov
xchg
jl
xchg
testl
pushf
lret
iret
shlb
push
jl
pushf
xor
cs
sbbb
fildll
shlb
std
mull
loopne
mov
pop
call
andb
pushf
pop
jg
sbb
leave
dec
mov
dec
outsl
test
int
lret
add
push
adc
mov
fwait
push
push
in
lods
pop
pop
ret
adc
sbb
popa
inc
lret
mov
push
xchg
roll
mov
paddw
leave
lahf
adc
mov
mov
mov
jo
mov
jmp
dec
fs
jae
adc
jae
mov
dec
xchg
and
testl
int
xchg
repnz
sti
mov
mov
lds
adc
sub
push
mov
callw
iret
jp
sub
push
xor
subl
lret
ret
xchg
cmpsb
xchg
ss
enter
and
scas
xchg
sbb
xor
lret
cmp
dec
sbb
pop
jns
loop
and
sub
out
icebp
jmp
pop
rorb
movsb
icebp
je
js
ret
pusha
aas
or
pop
jne
test
cmpsb
subb
add
jbe
lret
xor
cmpsb
xchg
push
sub
hlt
aaa
test
mov
jne
jns
dec
test
in
ficompl
mov
jmp
outsb
mov
ret
aas
sti
push
xor
pusha
pop
mov
iret
lods
fldl
push
dec
sub
xchg
fnsave
test
popa
test
mov
mov
insb
sbb
ljmp
pusha
adc
cmpsb
pop
add
adc
cmp
sti
imul
lahf
rcrb
xchg
ljmp
dec
das
es
orl
loope
imul
jno
idivl
ja
stos
cld
mov
iret
outsl
and
add
dec
out
mov
bound
cmp
sbb
xor
dec
ret
inc
out
inc
imul
ret
fidivl
pop
sub
subb
cmpsl
das
popa
loope
inc
out
out
cmp
or
ljmp
call
mov
bound
jno
in
jae
pop
push
push
push
gs
and
ja
push
lock
dec
nop
outsl
bound
or
std
cmp
push
fadds
sbb
in
ljmp
int3
mov
icebp
stos
mov
cmp
sbb
sub
dec
aaa
lods
push
sbb
sub
xor
inc
scas
dec
pop
dec
loope
pop
cmc
mov
sub
fwait
lcall
mov
mov
ret
in
ljmp
sub
inc
inc
imul
mov
jl
xchg
push
xchg
es
xor
xlat
pop
xor
lds
cltd
test
mov
inc
xchg
jp
rolb
fnstsw
adc
jmp
aad
popa
imul
pop
mov
imull
loop
xchg
or
jo
mov
dec
data16
dec
iret
xchg
pop
and
cmpsl
or
lods
insl
js
hlt
sbb
jbe
add
cmpsl
out
mov
gs
inc
mov
loop
jae
pop
ret
adc
jge
mov
ja
push
leave
popa
das
scas
dec
movsb
in
lret
outsb
pop
adc
xchg
scas
dec
adcb
out
iret
out
sbb
fldcw
inc
fcomp
cmp
push
mov
xchg
cli
jecxz
jg
nop
sub
aas
es
movb
mov
mov
nop
pop
dec
push
mov
push
ret
mov
out
jo
jns
ret
mov
clc
xchg
fld
cmovp
pushw
and
mov
jb
push
or
popa
pop
cltd
je
mov
lds
and
cmp
out
or
jmp
iret
pop
iret
call
rorl
loop
shr
inc
dec
pop
mov
add
mov
shlb
push
xor
das
test
pop
cmpsb
scas
loop
mov
pop
mov
cmp
shrl
mov
sbb
adc
loopne
ja
lret
adc
add
scas
insl
loopw
cld
aas
jg
mov
push
repnz
in
sbbb
jmp
dec
cld
dec
sti
lock
call
dec
int3
mov
xchg
pop
xlat
mov
sub
xchg
stc
leave
xchg
inc
mov
mov
mov
insb
push
pushf
sbb
into
jecxz
pop
mov
lods
rorl
mov
mov
and
ret
sbb
aam
pusha
pushf
jo
adc
and
xchg
out
mov
sbb
test
test
ljmp
cmc
add
adc
adc
cmp
jmp
mov
mov
pop
std
fs
cmc
or
fwait
adc
jbe
lds
xlat
cmp
inc
inc
inc
xor
cmp
pop
fsubrs
or
repz
sub
repz
repz
jg
call
lock
fsubrl
shrl
xchg
mov
pop
jne
movsl
gs
jno
push
inc
test
inc
add
mov
lea
xchg
cmp
inc
into
aad
add
stos
cmp
not
sbbl
iret
pop
aam
jbe
sar
leave
push
into
mov
gs
loope
sub
mov
clc
scas
nop
mov
adc
and
ja
push
mov
cmp
mov
add
insb
push
lds
testl
insb
dec
xor
xor
dec
cld
pmaddwd
mov
and
insl
mov
jecxz
or
xchg
in
jp
pop
mov
stc
push
gs
inc
ss
in
dec
sub
test
push
push
pop
cmpl
lds
push
mov
stos
xchg
into
cmpsl
dec
push
mov
inc
sbb
and
enter
data16
inc
pop
cs
sub
jo
add
out
scas
out
add
sbb
leave
sub
cmp
nop
inc
jle
stos
dec
stos
ljmp
incl
nop
adc
add
aam
xchg
mov
cmp
dec
jg
ljmp
test
adc
sub
jmp
das
xchg
nop
inc
jg
nop
push
test
rolb
inc
push
or
mov
je
movsl
add
das
jge
fisubrl
jne
xor
popa
or
movsl
inc
orb
add
test
arpl
fldt
int
out
fwait
push
jp
lds
addps
push
mov
inc
int3
sub
adc
test
dec
add
lcall
stos
cmp
aas
push
flds
dec
adc
add
push
cs
push
loop
in
cwtl
pop
sub
mov
xor
inc
inc
jle
adc
stos
xor
or
jp
rorl
mov
lret
sahf
mov
push
dec
cmp
scas
fs
sti
mov
adc
shll
xchg
xchg
jnp
cmpl
xor
push
jle
sbb
mov
ret
and
rorb
fadds
fildll
cli
or
mov
fsubr
test
clc
or
aas
mov
sub
push
flds
lds
xor
movsl
mov
cmp
sbb
push
mov
pop
mov
ljmp
and
xor
sub
sbb
push
cmp
aam
add
push
adc
mov
gs
clc
mov
inc
fstpt
mov
cmc
mov
repz
inc
sbbl
dec
outsb
dec
sub
mov
mov
cmp
test
cwtl
pop
add
mov
lds
adc
hlt
sarl
xchg
aas
xlat
cmp
sub
mov
repnz
add
or
loope
leave
mov
dec
mov
outsl
xlat
aas
mov
cld
stos
pushf
cwtl
and
xor
test
cmp
pop
cmp
movsb
inc
and
push
imul
test
push
addr16
idiv
test
push
insl
add
and
popa
jae
cmp
add
insb
sbb
ljmp
cmp
fwait
mov
mov
sbb
sbb
push
sarb
jmp
mov
inc
loopne
aas
lret
aam
pop
adc
into
scas
shlb
push
jecxz
cli
mov
cmp
xchg
sub
stos
jb
mov
sbb
arpl
sbb
sbb
and
sbb
scas
lods
pushf
sbb
push
test
push
cmp
loop
mov
and
shll
dec
mov
pop
mov
mov
enter
scas
push
jge
xchg
inc
mov
xor
rcll
adc
and
cmpsl
mov
lea
push
jge
scas
popa
arpl
push
push
and
xor
xchg
or
add
lea
xchg
dec
or
cmpsb
sub
pop
outsl
pop
jae
xor
aaa
test
jns
xchg
lds
pusha
icebp
sti
sbb
test
pop
fistl
fwait
mov
ds
imul
mov
int
mov
push
fs
into
lea
jbe
std
inc
clc
xchg
or
frstor
jge
cmp
dec
jo
test
push
mov
sub
arpl
jo
pop
mov
push
mov
insl
sbb
fists
and
loopne
cmp
ja
adc
mov
pop
pop
hlt
xchg
andb
sbb
repnz
dec
mov
push
adc
icebp
ljmp
or
sub
xchg
sbb
pop
push
push
ss
push
leave
mov
test
adc
add
into
mov
jp
and
dec
mov
mov
mov
xor
repnz
sahf
sbb
outsl
jo
mov
mov
xchg
mov
aad
jle
sub
or
xlat
js
dec
stos
cld
test
stos
inc
lods
push
enter
xorb
pop
cmp
outsl
or
fwait
lea
sbb
stos
ja
jecxz
xchg
add
dec
mov
es
sysenter
sub
mov
imul
subl
loope
inc
lods
scas
fsubp
jp
xchg
xor
mov
popf
aad
notb
test
fs
lods
xor
scas
cmp
jnp
rcrl
aas
cmp
add
ret
loop
idivl
ljmp
fdivrl
jg
ja
rcll
nop
dec
daa
pop
test
push
push
loope
push
jge
pop
mov
sub
sbb
inc
sub
xorl
jmp
mov
jne
cmpsl
fistpll
loopne
push
movsb
and
cmpsl
adc
in
and
mov
pushf
xchg
or
int
jp
xchg
imull
jns
sub
lock
pop
pushf
jge
jnp
arpl
or
mov
sub
add
xchg
adc
jecxz
repnz
mov
data16
cmp
xchg
pop
lcall
pop
mov
push
or
sbb
push
sbb
cli
xchg
mov
daa
outsl
in
cmc
sahf
sub
notb
and
dec
sti
push
inc
dec
pushf
and
xchg
leave
les
ret
lcall
in
daa
movl
andl
adc
mov
aam
jbe
shrb
pop
fistpll
sbb
sarl
xchg
push
adc
shr
xor
aaa
dec
cld
xchg
xchg
inc
out
jge
cmp
pushf
dec
fdivl
inc
mov
sbb
outsb
adc
adc
cmp
nop
push
xchg
int3
or
cmpsl
mov
cli
mov
lds
lahf
xorl
stc
inc
jmp
lds
xor
into
daa
or
sub
push
mov
jb
cmpsl
fisubl
push
jns
cmpsl
es
xchg
inc
out
lea
pop
in
pop
lds
sub
andb
aas
push
imul
mov
jne
in
popa
mov
dec
addr16
sub
sti
cmc
addr16
jecxz
dec
jge
aad
in
inc
sbb
dec
push
xor
fstl
mov
jnp
xor
sub
or
flds
orl
and
cmpb
cmp
and
jns
decb
mov
repz
test
out
pushf
in
insl
jne
adc
push
adc
adc
int
aam
dec
cmc
mov
lahf
xor
jge
xchg
out
std
out
sub
out
adc
stos
sub
std
and
or
ds
lods
je
or
sbb
and
dec
dec
add
lods
mov
and
mov
sbb
jb
je
push
jne
xor
or
add
pushf
adcl
std
ficomps
mov
dec
jmp
mov
scas
xchg
cld
loope
add
inc
roll
push
flds
outsb
enter
mov
fidivs
push
cmpsl
nop
dec
mov
in
imul
push
pop
fstpt
mov
inc
xchg
pop
fs
pop
cmc
cmp
dec
rcrb
scas
xchg
adc
and
fisubs
mov
xchg
jle
movsb
mov
roll
push
pop
les
out
push
jmp
dec
cmp
popa
in
arpl
fisttpll
out
int3
jge
mov
xchg
push
or
stc
fsubr
ret
xor
sbb
jns
push
test
inc
xchg
mov
movsb
das
sti
std
popa
test
cltd
lods
mov
int
sub
push
pop
imul
push
out
ss
movsl
xchg
and
mov
ss
dec
pop
rcll
add
jecxz
ljmp
insb
arpl
shr
clc
mov
test
out
pop
ja
mov
fdivl
mov
aad
out
int3
clc
leave
add
mov
adc
add
stc
mov
test
dec
mov
leave
in
jbe
dec
in
mov
out
fldz
sbb
push
xchg
ret
mov
leave
inc
xor
adc
test
mov
cwtl
adc
inc
mov
lods
movsl
xchg
mov
and
xchg
sub
or
and
push
mov
loop
push
sahf
sub
stos
nop
dec
cmp
in
mov
bound
sub
popa
adc
mov
sti
xchg
daa
pop
arpl
adc
clc
pop
fs
lcall
rcl
cmp
mov
jecxz
xor
xor
mov
mov
rdpmc
mov
pop
sub
push
pop
pop
ljmp
sti
imul
or
push
std
insl
lock
pop
lret
jp
orb
stos
push
nop
and
daa
les
pop
inc
loop
cmpsl
mov
popf
fdivp
mov
sbb
or
pop
cmpsb
pusha
push
in
ficomps
cmp
iret
adcl
cmc
fldenv
rorl
pop
out
sbb
in
test
in
arpl
dec
inc
push
mov
shll
add
shlb
gs
insl
pop
rorl
and
push
shll
and
mov
cmp
push
icebp
sahf
lcall
jp
imul
dec
pop
push
aas
mov
fstpt
xor
fsubrl
xchg
pop
sbb
mov
dec
repnz
ds
rcr
sbb
lea
pop
add
sbbl
mov
ret
incb
aas
mov
jmp
out
push
aaa
sbb
push
aaa
mov
mov
pop
cmp
sti
xor
or
push
mov
nop
add
sarl
stc
pop
in
das
mov
xchg
mov
call
push
iret
xor
fsubrp
fwait
sbb
cmp
insb
lods
dec
mov
xchg
shlb
xchg
adc
cmp
test
cli
lods
movsb
mov
push
cmc
rcr
mov
xchg
mov
sbb
add
dec
pop
test
pop
dec
cwtl
mov
in
mov
ss
test
mov
pop
and
push
xor
inc
mov
or
or
dec
in
mov
jno
lods
loop
scas
aam
push
in
dec
fcmovu
lahf
pushf
iret
jb
push
adc
mov
pop
inc
stos
les
shlb
pusha
add
dec
popa
pop
movsl
popa
and
fnsave
cli
adc
cld
sbb
jg
adc
lahf
jp
jns
inc
push
xchg
mov
rcr
jb
cmp
rorl
dec
jnp
stc
or
mov
mov
add
xchg
sub
aam
xchg
call
lcall
jnp
adcl
popa
pop
dec
cmp
fucom
xchg
dec
inc
fmul
arpl
cmc
fistl
loopne
ss
mov
mov
and
movsl
js
repnz
xor
stc
and
inc
jnp
add
or
cs
mov
mov
xchg
ror
aas
rolb
lds
out
leave
pop
loope
dec
fwait
or
jl
jge
test
push
inc
mov
jnp
mov
lcall
mov
jg
leave
lret
in
pop
test
out
call
adc
add
sbb
fldl
pop
add
mul
and
ja
xchg
mov
out
jns
mov
add
mov
xchg
scas
xor
dec
nop
nop
imul
mov
test
or
stos
push
add
jo
jmp
and
mov
lret
ret
jne
sahf
gs
fisubrl
into
shrb
mov
mov
stos
popf
aas
jg
push
cmp
mov
mov
and
sti
lds
pop
outsb
push
cmpsb
in
lods
loopne
bound
pop
xchg
xchg
inc
jnp
push
dec
lahf
arpl
pop
pop
jnp
test
icebp
pop
cmc
cmp
xchg
xor
pop
mov
mov
lods
andb
jl
ja
xlat
divl
mov
ds
fldt
or
es
js
push
lds
js
dec
xlat
icebp
adc
xor
in
sbbl
jnp
cmp
adc
lods
movsb
cld
jae
mov
sahf
imul
in
jmp
jp
lret
ljmp
adc
out
shr
push
outsl
repnz
push
daa
cmpsb
ret
in
pop
adc
fimull
gs
scas
adc
outsl
es
sub
repz
mov
mov
mov
mov
sbb
push
out
mov
lods
mov
ret
cmc
pop
movsb
inc
xlat
repz
xchg
add
gs
jnp
and
and
mov
or
scas
and
lret
pop
pop
mov
clc
jo
sarb
sbb
xchg
cli
lret
jbe
sub
es
jle
js,pt
pop
xchg
bound
adc
dec
push
sbb
push
push
int
pop
sbb
aad
mov
shll
jmp
inc
testb
outsl
xlat
jbe
inc
and
sbb
fbstp
and
loope
and
mov
lret
mov
cmp
ja
or
jne
outsl
daa
mov
fwait
cmpsl
mov
jle,pt
adc
mov
stos
sbb
cwtl
mov
fiadds
fs
mov
xorl
adc
add
in
jmp
test
sbb
add
push
mov
cs
adc
pop
mov
sbb
push
inc
cmp
ljmp
push
iret
mov
repnz
pop
inc
movsl
mov
push
jo,pt
xchg
mov
and
inc
inc
mov
stos
pop
outsb
dec
ja
pop
stos
xor
scas
dec
pop
adc
dec
mov
in
sbb
sbb
jns
ljmp
sbb
sub
pop
rclb
sbb
ja
lods
enter
inc
sbb
pop
movsl
mov
movsl
call
ffreep
jns
sub
mov
call
std
fiadds
cmp
aaa
pop
fbld
inc
add
sbb
dec
filds
xor
roll
cs
test
xor
cwtl
fdivp
and
inc
fdivs
dec
call
adc
dec
ss
xorl
stos
mov
shlb
lret
sub
and
mov
xor
mov
mov
fdivrs
cmp
call
adc
sbb
dec
sbb
mov
push
lret
imul
sti
mov
sbbb
xor
cmpsl
mov
shrb
jne
roll
cmp
inc
pop
sti
cld
in
mov
jb
icebp
es
push
or
xor
repz
arpl
dec
sub
das
lea
pop
mov
lcall
cmpsl
inc
jmp
jo
adc
insb
and
inc
mov
add
sbb
vmovaps
dec
bound
dec
icebp
fs
leave
lods
sbb
xor
outsl
out
repnz
and
negb
repnz
and
or
adc
pushf
lods
mov
popa
inc
mov
data16
sarb
jmp
push
push
das
cmp
cs
push
cmp
jl
cmc
out
out
addb
add
mov
data16
sub
cmp
dec
cmpsl
rorb
mov
add
and
xor
xchg
popa
imul
mov
movsb
mov
daa
pop
sbb
imul
push
hlt
imul
cltd
adc
xchg
jne
leave
xchg
icebp
stos
pop
sbb
js
int
cmpb
int3
fisttpll
xchg
imul
xchg
sub
sbb
int3
mov
mov
dec
adc
cltd
imul
cmpsb
jg
or
mov
cmp
adc
jno
or
sub
dec
dec
ficomps
ja
repz
sub
lret
shl
xchg
insb
or
jnp
adc
mov
jne
int3
cs
adc
sbb
xor
xor
lds
adc
mov
push
fsubp
lcall
cmp
pop
iret
xor
nop
mov
mov
jb
push
add
out
xchg
and
rsqrtps
inc
pop
insl
cmp
sbb
and
ds
out
fildll
ret
mov
test
push
mov
jo
movb
sbb
aad
jl
pop
mov
mov
or
fwait
pushf
adc
andl
dec
scas
mov
arpl
mov
jns
aam
imul
jns
scas
scas
inc
jne
jb
jb
xchg
inc
jmp
movsb
push
xor
or
xchg
lods
jb
push
ret
and
push
xchg
and
inc
mov
sbb
lcall
test
movb
fisttpll
jne
xchg
mov
xor
enter
movb
sub
sbb
lds
ficomps
jmp
jnp
fs
in
add
daa
xorl
sarl
in
loopne
mov
jne
sbb
test
mov
out
adc
dec
mov
arpl
movsb
movl
ret
pusha
mov
pop
mov
cmc
ljmp
lcall
cltd
mov
and
push
push
fmuls
pop
mov
sub
pop
and
xor
jmp
loope
xchg
sbb
fildll
mov
mov
pop
cs
sbb
enter
int3
loope
sti
cld
push
jg
and
cld
adc
loopne
lret
mov
mov
lret
push
orb
loop
cmpsb
jno
test
xchg
insl
lret
pop
pop
jb
pop
dec
add
xchg
in
dec
and
sahf
mov
out
push
repz
and
stos
dec
sbb
test
jmp
sti
stc
fimuls
faddp
jecxz
ficoml
lds
push
arpl
xor
cmp
inc
push
bound
xchg
mov
js
fs
ja
adcl
insb
stc
push
jbe
sub
mov
cmp
movsl
or
ds
insl
xor
fdivrl
mov
mov
sarb
sbb
je
popa
fs
int
xchg
mov
iret
xchg
add
dec
loopne
mov
test
cmp
push
cltd
xor
repnz
xchg
xchg
xor
inc
mov
pop
and
xor
mov
ja
mov
xchg
adc
outsb
mov
insb
test
enter
or
xor
outsl
xchg
add
pop
mov
icebp
mov
lock
dec
mov
jmp
or
push
fcoml
xchg
mov
pop
arpl
mov
lds
and
div
sbbb
or
push
and
dec
pushf
scas
jmp
sub
add
cmp
sbb
test
call
repz
mov
jecxz
adc
rcrl
mov
ret
jnp
inc
in
mov
test
fstpl
insb
mov
or
fstpt
outsb
cltd
imul
or
gs
enter
pop
sbb
lds
ds
sahf
gs
and
fsubrp
or
ja
or
lds
sub
mov
push
fcmovb
data16
shrl
hlt
and
push
aam
dec
cmp
xor
test
ret
mov
mov
and
pop
test
gs
adc
xchg
push
movsl
inc
enter
mov
add
push
sbb
mov
and
lret
xchg
xchg
pop
lret
jge
jne
sti
inc
in
stos
sbb
mov
sbb
inc
mov
adc
inc
jle
mov
or
hlt
imul
aaa
cld
daa
cmp
cli
les
inc
into
push
jle
sub
lds
lahf
out
adc
or
leave
add
hlt
lea
lret
rcrl
mov
cmp
sub
into
clc
pop
mov
sub
inc
rcrl
aaa
sbb
mov
outsb
daa
inc
jle
mov
xchg
mov
aad
stc
and
mov
ds
add
dec
adc
push
push
sbb
jmp
jo
push
stos
fldenv
sti
push
mov
mov
dec
or
xorl
push
sbb
push
mov
insb
das
leave
xchg
cmpl
hlt
loopne
cs
cmp
lcall
mov
sti
mov
jbe
notb
xchg
add
gs
sub
push
repz
add
fs
or
mov
sysret
adc
cs
out
cmp
xchg
cmp
arpl
mov
jo
mov
out
pop
out
faddl
sbb
or
clc
cmp
jecxz
loopne
bound
sar
lret
popa
and
les
jp
shr
xchg
jb
mov
testb
ljmp
and
push
or
sbb
or
js
adc
aaa
ljmp
lods
adc
test
stos
fsubs
mov
scas
gs
xchg
dec
imul
or
outsl
adc
test
ss
xchg
mov
andb
mov
sbb
mov
xor
inc
repnz
inc
pop
fimull
sarb
add
sub
jo
pop
add
divb
lret
sbb
push
test
mov
ds
les
popa
adc
dec
lret
test
gs
lods
daa
inc
jmp
daa
jecxz
xchg
and
out
popa
mov
or
adcb
adc
je
hlt
dec
jne
rclb
fdivr
negb
mov
lahf
fisttps
sub
sbb
test
ret
sbb
push
test
pop
jnp
xchg
pop
js
testb
jno
stos
mov
push
and
cmp
ja
mov
mov
pop
shrb
adc
decb
jmp
mov
inc
je
cmp
scas
out
fadds
or
mov
leave
xchg
sarb
fdivp
jg
push
les
pop
xchg
popl
add
fwait
mov
inc
inc
roll
dec
ret
push
mov
add
mov
nop
xchg
jmp
shll
and
adc
sub
add
inc
iret
and
loope
shll
lret
into
rcll
cmpsb
fistpll
sub
add
mov
xor
inc
jns
cltd
push
ds
and
jmp
jbe
adc
and
nop
cmp
sub
lods
js
repz
clc
and
shrl
push
loopne
ljmp
movsl
sbb
jns
stos
jp
mov
mov
xchg
shrb
fistpll
js
shlb
outsl
pop
jo
test
adc
add
out
add
bound
sbb
pop
mov
in
sbb
iret
mov
call
ja
mov
popa
adc
lods
cld
and
pop
sbb
sub
jae
jecxz
sub
aaa
jp
push
in
cli
movb
push
jp
enter
das
dec
andb
jmp
jmp
sbb
imul
gs
dec
push
aas
sub
outsb
scas
test
rclb
rorl
sub
popf
inc
pop
mov
jns
inc
add
push
into
clc
mov
fdiv
call
nopl
lods
popa
mov
loope
or
or
les
xchg
test
pop
mov
or
cmp
subb
cmp
mov
sarl
aam
daa
js
shr
cmp
xor
cwtl
add
push
push
sub
xor
fmull
pop
sbb
add
pop
dec
cmp
mov
mov
push
mov
into
dec
push
add
push
iret
fmuls
mov
push
jne
xchg
push
mov
das
repz
addl
int
jns
movsb
pop
pop
shll
or
ffreep
aas
rcrb
inc
push
outsb
sbb
sbb
and
lret
xor
mov
testl
mov
jnp
in
popf
lahf
fcmovu
inc
ret
or
xor
cmpl
push
jp
jmp
jle
imul
imull
aam
mov
inc
nop
les
or
fsubrs
and
xor
push
cmp
and
push
xor
ret
push
mov
jge
test
lods
lret
jno
cmp
xchg
jg
in
jg
and
mov
pop
inc
test
add
pushf
loop
push
cmp
aad
inc
stos
rcrl
jnp
sub
add
mov
or
dec
dec
bound
xchg
adc
iret
popa
jg
daa
repz
inc
pop
mov
movsl
xchg
cmp
fcmovb
loope
xchg
bound
sahf
mov
fldt
xchg
jmp
gs
vcvtpd2dqy
mov
dec
inc
adc
aaa
add
dec
ss
cmpsl
pusha
out
repz
and
lods
fsub
or
inc
adc
adc
sbb
dec
and
insb
jbe
cmpsl
mov
int
jo
pop
dec
cs
imul
push
sbb
daa
je
je
jne
push
cmpsb
jmp
jmp
retw
pop
pop
xor
movsb
int
xor
je
inc
jbe
rcl
or
dec
xor
ljmp
mov
inc
jns
add
popa
rcl
xchg
repz
and
or
nop
mov
mov
inc
inc
cld
mov
jmp
cwtl
lods
xchg
pusha
mov
mov
xchg
xchg
mov
sbb
mov
mov
pop
lahf
int3
inc
cltd
gs
insl
stos
or
mov
add
orb
inc
pop
cld
loopne
adc
xor
inc
popa
push
pushf
sti
jmp
in
mov
mov
ja
outsb
add
sti
movsl
add
test
iret
in
arpl
outsb
ljmp
push
or
xlat
sbb
cmp
sahf
sub
mov
push
lret
in
mov
pop
mov
subb
fiaddl
ljmp
cmp
sbb
rolb
ficoms
jg
cmc
enter
lds
adc
jb
push
hlt
mov
mov
jae
mov
mov
mov
add
dec
scas
fs
cld
xchg
js
inc
jl
adc
aam
ds
sbb
popa
or
shlb
mov
xlat
pop
fldt
and
in
inc
push
mov
lea
fs
pop
jmp
aam
mov
adcl
out
inc
cmp
js
sbb
or
sbb
lods
test
adc
aas
pop
inc
int3
mov
push
adc
lods
pop
xor
aad
fisttps
lahf
es
xchg
mov
xchg
les
inc
in
mov
dec
into
mov
pop
ss
mov
xor
ds
orl
sub
lods
cmp
int3
jb
or
aam
add
lods
mov
fadds
push
push
mov
dec
push
xor
push
nop
ja
int
fdivrp
or
push
push
mov
stc
scas
cmpsl
dec
std
or
xchg
cmc
jmp
into
pop
fadd
jbe
xchg
adc
into
adc
jmp
dec
push
mull
frstor
xchg
jmp
dec
cmp
lahf
rorb
rorb
inc
enter
dec
push
xchg
and
cli
add
inc
add
call
or
and
inc
jmp
scas
aam
fsubrp
call
in
lods
dec
aad
and
int
and
inc
sub
mov
sbb
inc
cmp
sbb
xchg
cwtl
pop
push
aam
pop
popa
push
int
cmpsb
mov
add
inc
mov
loopne
adc
je
sarb
in
pop
xor
lret
leave
xor
mov
adc
sub
cmpsl
pusha
repz
js
fidivrs
adc
push
pop
call
imul
jp
dec
xchg
xchg
pop
cli
cs
out
dec
out
lret
and
mov
cmp
mov
sub
or
in
fs
fimuls
inc
div
daa
popa
mov
mov
scas
outsl
addr16
push
mov
jle
rorb
out
jmp
das
movsl
es
icebp
push
sbb
int
dec
insb
imul
push
imul
push
fstpt
xor
ds
cli
dec
sbb
inc
pop
mov
jo
rcl
dec
sub
mov
gs
mov
pop
mull
sub
mov
push
dec
jo
mov
mov
xor
xchg
stc
cmp
jbe
or
lods
repz
mov
xchg
cmp
pop
inc
test
ljmp
inc
mov
cmp
or
pusha
mov
cmc
daa
and
incb
lcall
xchg
insb
out
or
or
ss
cmp
push
inc
adc
pushf
mov
fistpll
jmp
mov
cmp
popa
scas
hlt
sbb
ss
jnp
xor
in
jo
jae
mov
ljmp
cmpsb
mov
fs
fsubrs
cmpsb
mov
std
jo
std
ret
push
or
jb
rol
or
sbb
and
stc
inc
mov
bound
mov
mov
imul
cmp
gs
inc
add
aaa
and
roll
xlat
orb
gs
sbb
inc
push
push
stc
ss
fnstsw
cs
inc
mov
in
sahf
mov
push
xchg
or
dec
dec
stos
sub
push
or
scas
cmp
scas
loope
fwait
jecxz
pop
jl
xor
in
adc
mov
xor
aam
jno
pop
inc
adc
push
mov
ljmp
mov
mov
jns
sahf
ss
adc
add
int
pop
sub
push
repnz
jb
sti
stos
xchg
fsts
in
sub
notb
inc
mov
out
jg
xor
mov
and
rorb
mov
and
int
push
fucomi
jmp
lcall
je
pop
leave
xor
xor
loope
inc
test
or
sbb
jbe
ja
sbb
jg
and
sar
adc
xchg
popa
in
and
jnp
in
push
arpl
scas
in
sub
xchg
mov
push
mov
inc
mov
inc
mov
pushf
cmp
ljmp
push
mov
jp
add
sub
jne
jle
mov
sub
int
aad
aaa
adc
icebp
mov
push
mov
jg
pop
loopne
into
pop
mov
xor
xor
cmp
sub
pusha
mov
dec
mov
mov
add
xlat
mov
arpl
mov
push
push
js
enter
sbb
insl
pop
test
push
xor
push
xlat
ret
dec
xlat
mov
loope
push
andl
add
lahf
fwait
dec
cltd
leave
mov
sbb
ja
mov
in
cmp
in
mov
jae
out
insb
or
adc
xor
andl
jmp
mov
jmp
inc
jns
lcall
div
mov
sbb
jl
test
mov
mov
or
add
mov
icebp
mov
jnp,pt
enter
stos
sub
adcl
xchg
inc
clc
sub
jb
jns
mov
std
icebp
sub
repnz
pop
mov
mov
inc
js
cltd
sub
test
cmp
test
cmp
mov
ja
push
mov
mov
xor
lds
pop
stos
cli
outsb
xor
pop
add
cmp
pop
push
and
cltd
stos
das
mov
push
jle
mov
dec
testl
push
add
loope
div
sar
sbb
add
pop
ja
mov
or
sub
inc
mov
pop
out
xchg
out
clc
es
cmp
into
imul
inc
or
sub
jle
out
cmp
loope
mov
and
lods
mov
adc
pop
xor
int3
jecxz
adc
mov
add
jne
xchg
cwtl
adc
ret
sub
pop
push
movsb
xor
mov
mov
lcall
mov
dec
cmp
sti
or
mov
cli
sub
insb
fbld
xchg
cld
hlt
cmp
adc
add
pop
pusha
xlat
jo
out
mov
addb
push
popa
mov
inc
lret
lea
sub
shrb
inc
or
repz
add
xor
sahf
leave
cwtl
inc
mov
pop
pop
add
sbb
std
or
inc
fists
lods
xor
cs
enter
xchg
and
loopne
cli
dec
mov
inc
pop
and
push
sahf
fcoms
enter
or
fmull
enter
aad
xor
ror
test
ljmp
add
mov
jns
andb
inc
stos
cltd
mov
cmp
inc
jl
insl
jne
push
mov
or
xor
inc
bound
ror
out
inc
adc
pop
test
pxor
xor
fmul
pop
test
xor
in
pop
jnp
aas
addr16
push
adc
call
pop
sbb
jb
sar
xor
and
fldl
mov
sbb
test
insb
mov
adc
adc
mov
mov
sub
cmp
mov
mov
sbb
jnp
mov
roll
mov
adc
or
iret
xchg
jmp
fistpl
push
xlat
negb
sub
movsl
xor
xor
lahf
mov
sub
fsubrs
je
mov
fbld
and
pop
xchg
jl
add
push
pop
jo
and
imul
popf
ret
xchg
push
inc
movsl
loope
arpl
fstp
sbb
test
mov
jmp
jle
mov
add
mov
sbb
cld
sarl
shlb
ljmp
lds
fldl
push
stos
pop
xchg
cwtl
adc
cmp
call
jge
movsl
mov
sahf
xchg
mov
cmp
int
leave
lods
xchg
xchg
inc
in
cmp
push
pop
inc
stos
std
cltd
sbb
les
inc
fildll
aaa
int3
out
cmpsb
sbb
insb
nop
adc
push
sahf
pop
jp
mov
ret
adc
cld
mov
push
or
cmp
hlt
jg
dec
shll
xor
sbb
add
adc
inc
scas
std
stc
shll
into
jg
pushf
sbb
mov
faddl
xchg
rcr
enter
arpl
jg
lcall
pop
or
adc
scas
cmp
dec
aad
sti
repz
sbb
inc
and
mov
push
jge
sbb
pop
aaa
mov
inc
push
pop
sbb
or
dec
and
push
stos
out
mov
rcll
push
xor
sahf
fdivrl
mov
xchg
fcoms
xchg
mov
jl
mov
cs
lods
adcb
outsb
cmp
or
mov
std
cwtl
std
fcoms
movb
jmp
nop
nop
jp
cmpsl
sub
inc
and
loop
push
or
jge
stos
inc
xchg
iret
test
fdivr
insb
jecxz
sbb
jae
js
pop
dec
pop
cltd
cmc
jo
push
addr16
notl
dec
jne
clc
das
mov
stos
insl
cmp
mov
xchg
in
imul
push
repz
xchg
lret
popa
cmc
sub
dec
in
adc
adc
aam
clc
push
jmp
in
pop
shrl
jne
pop
cld
or
out
addr16
pop
sub
pop
mov
dec
pop
adc
pop
and
pop
arpl
add
push
das
leave
or
aad
xchg
testb
adc
push
mov
cmp
inc
sbb
pop
lods
xchg
and
cli
imul
fstps
xchg
ss
mov
in
in
or
out
loop
fidivrs
or
or
fildll
inc
add
pop
push
pop
pushf
test
popa
testl
hlt
stc
mov
inc
loopne
xchg
lds
scas
not
jle
int3
inc
pop
adcl
cmp
mov
xor
cltd
hlt
loopne
rorl
sub
fadds
xchg
dec
pop
lret
int3
pusha
cli
in
aam
xor
add
insb
in
cwtl
cmp
cmp
lret
aad
nop
mov
ja
sbbb
repz
or
outsb
lods
aas
pop
xchg
sbb
mov
xlat
test
ret
jne
push
or
in
mov
xchg
adc
jb
iret
cmp
shl
je
es
mov
lea
leave
mov
ret
pop
fwait
jno
add
fcompl
je
inc
sbb
add
mov
mov
jo
dec
push
mov
call
mov
dec
iret
mov
fst
in
sbb
and
out
pop
xor
jno
ror
popa
cmpsb
dec
mov
cmc
scas
inc
iret
cmp
and
xchg
shlb
push
dec
lahf
out
pusha
ljmp
dec
xor
imul
sti
sbb
stos
jp
push
mov
push
mul
jg
das
lods
or
fistpl
clc
xchg
and
data16
xor
int3
shll
call
sti
fs
mov
jg
cld
cmp
mov
int
ljmp
cmp
xchg
fidivrl
mov
dec
mov
pop
rcll
jle
mov
cmp
add
mov
jno
cmp
aaa
pop
dec
stc
ret
cmp
mov
iret
shlb
test
repnz
jnp
int3
mov
out
fwait
orb
push
or
idivl
mov
xchg
pop
fcomip
sbb
inc
xchg
out
mov
cmp
loop
out
xor
mov
xchg
popa
lods
cmp
inc
je
inc
push
bound
cwtl
data16
cmpsl
sbb
sub
int3
xor
cmpsl
xchg
sbb
push
pop
adc
fcmove
mov
fcoml
lea
es
xchg
outsl
lods
add
xchg
sub
xlat
push
jae
push
dec
and
into
lods
mov
test
jmp
sub
pop
adc
in
ds
in
mov
mov
ds
aas
inc
xorl
arpl
adc
xchg
cmp
adc
pop
jo
jns
sbb
add
clc
xchg
inc
loopne
sbb
jbe
in
push
xchg
pop
hlt
leave
mov
xor
jg
out
arpl
sub
sti
cmc
lea
popf
fucomip
or
pop
cmc
sbb
les
xor
mov
fnstsw
jnp
das
or
or
inc
mov
les
and
mov
out
cmpsb
xor
stos
jb
xchg
sub
call
mov
sahf
cmpsl
ds
adc
adc
or
cld
push
jg
je
imul
inc
aaa
xchg
cli
addr16
cwtl
addr16
out
test
push
fwait
mov
cmp
ljmp
lods
xchg
subl
dec
insb
cmpl
das
loopne
and
test
pop
lret
lcall
bound
sti
pop
mov
jbe
into
add
outsl
xchg
divl
js
inc
add
cli
adc
fldcw
jmp
or
cmp
inc
scas
adc
or
sub
roll
movsb
mov
sub
add
hlt
lcall
mov
inc
movsb
mov
pop
mov
test
loop
sub
js
out
jb
xchg
fildl
add
fwait
lahf
insb
sbb
adc
push
movsb
cmp
cmp
cmp
lods
sub
jmp
fdivrl
in
dec
or
ljmp
adc
stc
mov
jo
or
pushf
lret
cmp
sbb
push
lods
xchg
and
ss
and
rcr
add
and
sub
aaa
mov
sti
lret
jp
mov
popa
xor
notb
in
push
jns
jbe
xor
mov
imull
mov
dec
mov
leave
aaa
repz
bound
aaa
and
call
scas
in
rorb
popf
or
sub
push
rcrb
mov
es
repz
or
hlt
push
popf
in
iret
lods
lcall
xor
popa
xchg
push
jmp
scas
inc
jl
mov
lret
xchg
sbb
nop
mov
push
adc
insl
jo
or
jo
fwait
jnp
out
movl
mov
lcall
test
xchg
in
jg
int
in
icebp
xor
xor
jle
arpl
outsl
adc
inc
repnz
fidivrs
mov
sar
or
dec
iret
test
and
scas
ljmp
push
mov
addr16
adc
xor
pusha
push
pop
add
jg
push
xor
outsl
cmpsb
fmuls
movb
adc
cs
bound
dec
lcall
or
fs
pop
stc
and
jecxz
jbe
jmp
bound
jnp
in
cmp
mov
cmp
pop
cmp
aas
ljmp
cmp
push
inc
ss
addr16
rcrb
test
js
test
sub
mov
je
jecxz
or
mov
stc
enterw
test
das
or
mov
mov
movswl
test
jg
pop
out
mov
jne
xor
aad
out
jbe
xchg
jo
xor
das
fsubs
rorl
das
pop
into
ljmp
decb
popf
ds
hlt
fidivs
xchg
ficomps
sub
imul
xchg
xchg
es
adc
mov
xchg
sbb
sub
mov
mov
movb
imul
adc
fistps
lcall
icebp
int3
out
pop
popw
and
mov
aas
dec
xchg
lret
stos
mov
lcall
and
gs
jecxz
pop
popa
repnz
es
pop
mov
popf
mov
fmul
pop
cmp
ret
pop
xchg
dec
cmp
das
test
mov
sbb
roll
pop
dec
mov
sti
sbb
lods
pop
in
xor
or
add
push
mov
enter
xchg
cmpsb
or
mov
push
xchg
mov
cmp
cmp
add
or
and
jns
xor
pushf
jge
test
dec
jns
sahf
mov
mov
imul
pop
inc
push
pop
fiadds
sbb
dec
ja
out
pop
lds
fwait
outsb
cmp
fiaddl
mov
rcl
mul
int3
mov
popf
fstps
jle
popf
mov
and
mov
rcll
lcall
mov
jo
scas
add
push
jb
cmp
fildll
sub
push
sbb
cld
testb
mov
int3
ja
lcall
jnp
cli
inc
addr16
pusha
dec
and
mov
push
std
jns
stc
cmp
pop
cld
inc
mov
and
mov
mov
ret
lds
mov
fidivrl
outsl
mov
fcmovb
out
and
je
jb
fildl
clc
pop
xor
in
ljmp
out
dec
test
mov
adcb
inc
les
mov
cmp
add
adc
es
jb
mov
add
filds
test
and
mov
inc
jno
push
addl
popa
adc
faddl
inc
adc
and
adc
xor
push
ljmp
outsb
xchg
fsts
inc
fldenv
rcll
test
dec
mov
in
mov
adc
xchg
pusha
sti
adc
jo
dec
loop
in
pop
cwtl
lea
out
sahf
cmp
xorb
es
jnp
addb
lods
pop
fistpl
jo
lcall
or
mov
call
cwtl
scas
cld
movsl
fisttps
iret
je
jecxz
sbb
mov
lcall
addr16
push
jne
cmpsb
adc
xchg
xor
lret
add
mov
shlb
ss
dec
jnp
pushf
inc
xor
mov
sbb
cld
shlb
es
sbb
enter
movsl
xchg
fadds
jle
add
inc
push
decb
pcmpeqw
adc
add
inc
mov
jecxz
xor
ja
test
addl
stos
jle
lahf
faddl
sar
add
outsb
jg
dec
ljmp
xor
jp
mov
or
xor
lea
mov
cmpsb
dec
dec
test
or
out
xor
xchg
mov
mov
dec
fdivrs
adc
pop
nop
or
sarb
or
mov
cmp
pop
pop
jbe
pop
mov
pop
je
pop
dec
cltd
cmp
pop
repz
sub
popf
xchg
iret
lahf
vmovhlps
enter
lds
jno
loopne
or
mov
lahf
scas
fdivrs
mov
into
xor
xchg
shlb
inc
ret
dec
lcall
test
pop
push
jbe
push
xor
mov
popf
pushf
inc
dec
sbb
and
inc
cltd
lea
dec
jp
lahf
rcll
sbb
loop
sub
insb
lea
mov
pop
push
dec
pop
mov
dec
aas
pop
cmp
out
adc
xchg
mov
jg
adc
lahf
imul
add
jl
sbb
notb
jo
mov
sub
enter
lret
cmp
cld
ret
int
lret
subl
popa
cmp
stos
fprem
sbb
pop
mov
jne
ja
adc
jnp
cmp
and
dec
mov
pop
imull
jbe
pop
xchg
les
js
pop
scas
lock
push
cmpsb
aaa
je
pushf
xor
jle
aas
inc
aas
in
or
or
jnp
dec
scas
pop
rcrl
pop
cs
xor
cmp
rolb
int
lods
and
lcall
loope
fadds
lea
in
cmp
mov
mov
aad
add
pop
cmp
fsubl
cmp
pop
pop
aad
and
xchg
ret
sub
push
rcl
orb
inc
xchg
and
adc
xor
pop
sub
mov
pop
shll
insb
movsb
mov
mov
push
lret
xchg
jmp
inc
out
ss
pop
sbb
stc
scas
pop
inc
mov
push
push
shlb
adc
je
adc
sub
mov
xor
lret
repnz
jae
pop
push
cli
pop
inc
sub
pop
mov
sbb
test
xchg
cmc
stos
or
jae
in
int
pop
dec
popa
mov
push
xchg
fldt
cmp
mov
dec
ret
xchg
scas
clc
fistps
jbe
lea
mov
sbbb
js
xor
outsb
clc
and
fcomip
pop
imul
sbb
idiv
pop
jp
lea
loop
mov
imull
sahf
dec
push
mov
pop
add
add
mov
int
mov
lods
movsl
jmp
xor
out
mov
fs
dec
xchg
xor
xor
lds
or
mov
sti
xchg
aaa
cmp
inc
xchg
mov
addr16
jb
movsl
add
je
ds
xor
sysexit
fcomip
mov
or
or
test
mov
mov
adc
repz
bound
les
push
jb
mov
adc
pop
cmp
lods
cli
stos
stc
xlat
push
or
sbb
int3
stos
scas
lods
lock
sub
gs
repnz
pop
push
out
xor
push
std
data16
sub
or
daa
inc
dec
xor
jle
pop
push
pop
xchg
pop
xchg
and
sbbl
mov
aas
dec
movsl
inc
sub
cmp
cmp
and
loope
shrb
sub
mov
cltd
mov
out
add
pop
data16
inc
sub
js
mov
jns
cmpsl
out
ret
or
int3
add
lods
bound
and
sbb
cs
lods
popa
jp
lock
fs
or
test
add
mov
adc
imul
jae
mov
mov
add
cmp
in
cmp
pop
ds
sbb
xchg
inc
adc
ss
sti
mov
lea
sbb
stos
xchg
insb
pop
or
mov
fdiv
adc
push
cmp
addr16
and
adc
rorl
xor
xchg
push
sbb
in
xor
rcll
pusha
mov
fnstsw
push
outsb
in
orl
fsubrl
movsl
ret
dec
mov
fldenv
adc
pop
jle
and
roll
subl
ja
in
sub
jbe
shrl
xorb
sbb
fists
mov
sbb
and
insl
imul
cs
mov
into
add
mov
xor
jns
jno
mov
ret
lcall
cmp
mov
movsb
xorb
lds
and
rolb
rcl
jge
rorb
dec
stos
call
push
outsl
cli
push
pop
or
adc
pop
pop
out
hlt
dec
stos
into
es
sbb
push
xor
fcoml
gs
insb
jg
mov
or
popf
inc
cmp
xchg
mov
fprem1
add
mov
push
pop
shll
jo
jae
adc
stos
mov
jg
sub
xchg
push
fs
cli
out
mov
daa
call
dec
in
push
test
subb
sbbl
push
mov
lcall
inc
xchg
xchg
jecxz
lds
mov
jmp
mov
and
das
mov
sbb
and
outsb
hlt
mov
movsl
out
fwait
cmpsl
cmpsl
mov
shll
imull
sar
sub
fmul
or
push
pop
xchg
sub
push
stos
mov
insl
inc
mov
xor
jle
in
repz
in
add
inc
lahf
push
mov
ret
push
cmp
int
push
and
mov
xchg
adc
push
jo
or
je
and
lahf
add
mov
jb
push
sbbb
enter
push
pop
pop
mov
rol
ss
test
fsub
mov
std
pop
inc
fadds
push
cs
sbb
push
idivb
push
pop
mov
cmp
mov
jb
xchg
jno
mov
fsubrs
ret
jl
sbb
adc
mov
push
std
out
xor
or
stos
mov
lcall
scas
cmpsb
hlt
add
mov
data16
inc
push
movsl
icebp
cwtl
movsl
mov
jae
mov
add
mov
addr16
push
fldl
and
and
dec
out
cwtl
jo
dec
fmuls
jle
scas
test
fsubrp
dec
or
xchg
mov
push
out
jle
cs
shll
mov
test
lods
mov
scas
and
rcll
mov
dec
push
fiaddl
adc
mov
test
ss
pop
mov
pop
sub
stos
aad
inc
push
sete
fidivs
pop
cli
rcrb
fisubrl
loop
into
test
pop
dec
scas
out
fisttpl
sub
xchg
xchg
fisubs
jnp
lea
xor
jmp
jns
sub
aas
vcvtsd2si
outsb
mov
lea
dec
rcr
dec
imul
fwait
mov
sub
cld
or
add
fidivl
dec
into
xor
pop
lods
ds
ret
jmp
ffree
sub
jnp
test
sbb
and
cmp
jno
xchg
jmp
outsb
jae
lret
lea
and
popf
out
inc
int
sub
or
cmpb
xchg
xchg
mov
mov
push
imul
and
sub
sbb
add
shrb
mulb
add
ss
cmp
inc
xchg
out
sub
xor
int
icebp
insb
in
sbb
or
cmp
das
pop
jle
fwait
jp
int
out
cmp
out
cmc
push
pop
push
or
and
fldt
out
pop
jae
lret
subb
add
das
sub
cltd
gs
mov
mov
sti
ds
push
sub
fsubl
lds
ret
insl
enter
pop
call
inc
pop
xlat
and
int
push
lds
mov
xchg
test
jmp
xor
mov
push
mov
enter
scas
push
jg
xor
xor
and
mov
cmp
movsb
ret
bound
push
sbb
cmp
out
mov
jecxz
lahf
push
cltd
jp
mov
inc
sbb
xchg
xchg
pop
mov
fcompl
xchg
push
into
mov
mov
cs
das
add
das
mov
aad
jbe
jnp
lret
xlat
inc
mov
shlb
dec
push
scas
clc
lcall
jno
xor
mov
cli
push
push
movsl
pop
inc
inc
adc
mov
enter
mov
xor
mov
cwtl
ja
or
lds
mov
clc
sbb
push
imul
mov
fs
int3
icebp
push
push
xchg
jmp
popa
xchg
push
jns
xor
loopne
mov
or
sti
sahf
pop
cmp
mov
aaa
cmpl
out
popa
sti
leave
lcall
sbb
lods
fidivl
idivb
or
ret
push
daa
dec
fimuls
sbb
dec
pop
xchg
add
rclb
fisttpll
pop
sbb
dec
leave
inc
mov
mov
xchg
loope
push
or
lret
push
xchg
xchg
push
xchg
jns
and
pusha
inc
daa
adc
push
inc
sbb
daa
std
dec
jb
ja
xchg
fwait
cmp
and
into
push
hlt
sbb
lret
push
xchg
sub
repnz
outsl
pop
loopne
test
scas
jmp
dec
lret
mov
mov
mov
and
rcrl
clc
mov
mov
and
jne
inc
xor
inc
out
hlt
mov
cmc
in
or
fcomi
cmp
pop
pop
pop
lahf
mov
out
aad
fwait
jecxz
sti
inc
pop
popa
sub
repz
adc
and
iret
dec
test
push
push
sub
xchg
outsl
push
test
pop
nop
mov
cmpsl
adc
addl
push
pop
dec
mov
sub
pop
xor
cmp
shl
pop
mov
xchg
jne
fldenv
jae
mov
sub
jge
orb
cs
popa
in
and
loope
jmp
fldl
adc
movsl
sub
in
mov
adc
mov
dec
pushf
cmpb
scas
pop
js
or
out
arpl
sbb
add
adc
dec
sti
arpl
inc
dec
in
dec
stc
bound
xor
adc
call
adc
in
and
pop
fdiv
mov
mov
sbb
mov
xchg
push
hlt
xor
in
push
test
add
lret
loop
dec
push
fs
push
xor
ret
repz
lods
cmpsb
dec
leave
gs
test
sbb
vmovntps
repz
mov
addr16
mov
or
ficoms
iret
mov
fs
and
inc
xchg
mov
out
inc
dec
sar
and
insb
xor
out
jnp
in
clc
cmp
push
jl
adc
or
sub
int
popa
cld
xchg
negb
test
push
fs
js
sahf
insb
push
lods
bound
mov
pop
add
xchg
dec
into
imulb
sub
add
repnz
add
pop
and
or
sub
or
sbb
dec
mov
cmp
mov
xor
pop
out
mov
mov
jae
and
xchg
insb
xchg
fwait
xchg
out
xor
xchg
pushf
sbb
fldcw
sahf
xor
or
je
inc
loop
mov
xor
xchg
addr16
daa
push
dec
call
push
in
add
sub
pop
icebp
repz
ljmp
mov
out
push
xchg
in
enter
out
rol
cmp
aas
test
fwait
dec
insl
push
lcall
dec
mov
inc
aaa
rorl
or
int
mov
jne
arpl
and
add
movsl
add
jo
scas
pop
xor
sub
cli
push
iret
and
cmpsl
mov
out
xlat
fbstp
ret
sbb
test
scas
jmp
jg
push
stos
ret
inc
test
xchg
in
add
and
iret
jge
and
xchg
mov
pop
pop
push
ljmp
jl
or
cli
inc
pop
leave
cmp
mov
and
jg
inc
add
cmc
dec
test
loope
dec
jo
xor
imul
icebp
mov
sub
sbb
leave
mov
cmpb
cli
adc
pushf
clc
push
out
lcall
orl
cmp
mov
jg
add
or
xchg
enter
fisttpll
pop
or
out
dec
lcall
adc
ret
inc
mov
sub
ret
sub
inc
jne
pop
idivb
loop
adc
xor
add
in
cmc
mov
test
add
push
rcll
lahf
pop
mov
sub
xchg
sub
lea
inc
inc
mov
fidivl
dec
stos
pop
js
push
cmpl
addr16
mov
dec
lcall
adc
aas
jne
inc
cmpl
jo
repz
sarb
inc
jmp
adc
fldt
pop
mov
inc
lods
xchg
jae
lret
inc
or
cmp
out
or
inc
aas
or
pop
adc
and
jecxz
iret
xor
jl
cwtl
nop
adc
mov
sub
subl
scas
add
mov
xchg
out
xor
cvtps2pi
leave
repnz
sub
add
mov
je
mov
and
imul
daa
add
loopne
inc
mov
cwtl
shll
cmp
cmpsl
push
insl
and
inc
out
or
and
pop
sbb
mov
aam
dec
fidivrs
pop
es
out
rcrb
pop
test
js
fimull
adc
pop
jae
clc
mov
dec
pop
mull
cmp
cmp
adc
pop
incb
fnstsw
pop
call
and
movsl
adc
dec
gs
stos
data16
pop
cld
sarl
and
out
cmp
sti
pop
xchg
xchg
sarb
test
aaa
ret
bswap
sbb
pop
xor
pop
xchg
insb
mov
ss
ja
jge
push
lock
ja
aas
push
push
addr16
jo
push
xchg
jle
mov
push
das
scas
push
mov
push
movsl
mov
or
and
xchg
inc
add
test
push
stos
in
out
sub
mov
mov
test
pushf
roll
shlb
or
fstpl
jecxz
sbb
jnp
lret
mov
ja
sub
aas
sub
test
adc
aam
icebp
fimull
movsb
sbb
mov
daa
and
daa
mov
cmp
adc
cmp
fcmovb
dec
subl
jl
sub
mov
push
leave
inc
insl
stc
add
pop
testb
fcmovu
push
cmpsl
or
and
inc
and
mov
add
mov
adc
hlt
test
imul
adc
sarb
cmp
cmp
bound
rcrl
mov
test
inc
repnz
mov
jmp
cmpsl
mov
fstps
out
int3
inc
xor
repz
test
add
out
xor
inc
sbb
dec
ror
int3
bound
shr
movsl
dec
xor
int3
loopne
pop
xchg
add
xchg
divl
xor
adc
pusha
fucomip
inc
test
imul
daa
sub
jae
js
pop
xor
adc
mov
jne
lock
mov
push
mov
or
jno
xchg
loopne
sbb
clc
lods
fidivrl
cmc
or
xchg
fcmovbe
test
jae
jns
jmp
adc
sub
or
shrl
adc
push
mov
ja
inc
mov
dec
fstps
imul
roll
mov
clc
fistpl
icebp
mov
les
andb
mov
mov
jb
call
addr16
pop
lods
stos
inc
inc
out
ror
mov
imul
stos
sub
outsl
fcmovnu
mov
push
daa
inc
inc
adc
adc
in
pop
xchg
push
inc
adc
cmpsb
jne
inc
loop
mov
mov
mov
arpl
jmp
pop
sbb
adc
dec
mov
push
push
jmp
pop
popf
scas
imul
call
add
xchg
mov
js
sub
dec
aam
jb
fadds
out
outsb
xorl
mov
ljmp
xchg
inc
hlt
insl
mov
push
rorl
lcall
mov
mov
das
data16
mov
mov
sub
pop
add
add
jle
push
mov
cmc
sub
jge
add
push
and
scas
jbe
shr
fs
dec
stos
pushf
scas
mov
mov
jge
jnp
out
rcr
push
xor
imul
pop
orl
jecxz
cmpb
incb
push
dec
in
clc
pop
pop
mov
jae
xchg
xor
inc
fucomip
cs
orl
xor
cld
movb
xlat
or
cmp
push
jge
mov
lcall
fcoml
psubb
cld
fnstenv
fiaddl
mov
jbe
lcall
mov
sbb
add
mov
cld
fdiv
mov
notl
or
pusha
jno
mov
sbb
ljmp
xlat
jmp
rorb
test
stos
pop
das
popf
aaa
push
and
loopne
mov
add
dec
lods
mov
movsl
fisubrl
loopne
mov
out
lods
outsl
fstp
lods
cmp
xadd
ja
cmp
push
lods
aad
ja
icebp
or
fdivrp
dec
pop
lds
adc
repnz
jo
andb
addl
ja
and
xchg
mov
dec
mov
fadds
mov
lods
jmp
adc
xchg
ljmp
mov
es
mov
fisubrs
and
ficoml
enter
sbb
test
dec
xchg
jl
push
lret
add
jno
fsts
std
out
cmpsb
push
mov
xor
dec
xchg
dec
inc
push
loopne
icebp
je
sbb
jg
cmp
push
cmp
test
aaa
fmulp
test
shll
adc
mov
subl
fwait
mov
mov
xchg
jge
les
dec
mov
ret
scas
test
cmpsl
call
pop
and
jl
dec
stos
nop
stos
pop
jnp
outsb
popa
dec
add
cld
leave
aam
push
mov
and
dec
xor
jge
arpl
repz
xlat
jae
mov
push
push
mov
out
ret
mov
push
cmp
jg
enter
cmp
ret
test
mov
mov
cmp
cwtl
sub
daa
mov
adc
js
popa
shrb
in
pusha
test
mov
xor
out
idiv
sub
addr16
cmp
dec
outsb
sub
daa
call
pop
outsl
pop
push
fldenv
sbb
push
push
xor
sub
mov
dec
jp
fisubl
stc
iret
pop
pop
pop
push
or
das
add
add
xchg
mov
cli
dec
mov
mov
adc
sti
test
sub
mul
inc
pusha
jmp
sub
js
inc
add
lret
xor
jg
dec
mul
iret
scas
inc
or
mov
pop
outsb
jecxz
mov
jmp
sbb
faddl
cmpl
jbe
imul
test
xchg
pop
pop
out
pushf
add
push
dec
addl
inc
jmp
hlt
jno
sahf
pusha
ret
adc
js
adc
mov
hlt
mov
movsl
stc
insb
and
ja
sbb
pop
dec
cld
mov
sbb
jl
cmpsl
jno
sub
imul
adc
pushf
int
pop
and
inc
cld
push
pop
pop
push
or
idivl
sbb
std
test
xchg
clc
mov
xchg
shl
fs
ljmp
out
jo,pt
iret
int3
fs
dec
cmp
mov
test
jo
sbb
nop
data16
popf
stos
add
push
addr16
js
push
lods
into
add
and
mov
mov
stos
repnz
out
jmp
arpl
in
pushf
cwtl
sub
cmp
iret
or
lods
popa
movsl
mov
repnz
pop
adc
test
or
pushf
lods
outsb
iret
jmp
or
xchg
stos
dec
mov
pop
xchg
aas
xchg
idivl
or
push
add
fistpll
cld
dec
int3
jnp
fldl
aas
popa
icebp
push
imul
and
les
dec
xor
sub
cmp
push
fs
and
add
xor
fnstenv
js
push
push
sbb
dec
push
popa
mov
into
mov
fidivs
ss
jp
mov
cmp
mov
dec
push
out
mov
push
xchg
ficoml
lods
hlt
push
mov
adc
pop
flds
add
add
jo
mov
imul
js
mov
std
lods
mov
shr
loopne
test
pushf
mov
mov
test
pusha
sahf
adc
test
mov
icebp
adc
mov
fninit
jns,pt
popa
add
mov
daa
testl
or
sbbl
pop
scas
imul
dec
xor
adc
ss
or
cmp
sbb
cmpsb
and
xor
pop
jecxz
cs
xchg
mov
popa
std
mov
jnp
sub
push
and
jg
sbb
cli
pusha
jo
jl
into
or
insb
mov
mov
es
pop
arpl
xor
add
ljmp
push
clc
into
pushf
xor
in
in
faddl
mov
xchg
sub
mov
sbb
les
iret
fsubrl
xchg
aaa
jl
outsl
cld
fsubs
adc
jae
mov
pop
fldt
xchg
or
movsl
cs
adc
and
cmp
cmpl
push
sub
popa
daa
test
sbb
and
cs
sub
push
int3
das
mov
or
jns
addr16
aad
cmpsb
mov
jne
scas
popf
in
xchg
lods
sub
data16
xchg
ficoms
fwait
jno
xchg
pushl
mov
add
dec
jb
fnstenv
mov
pop
dec
sbb
cwtl
xor
sti
push
dec
repnz
pop
notl
outsl
mov
lock
data16
and
sti
cltd
push
inc
ss
sahf
cld
icebp
add
pusha
ja
xor
adc
mov
lock
mov
testb
shl
jl
iret
lea
dec
es
gs
int3
aaa
sbb
xchg
push
sarb
aaa
aad
clc
push
add
dec
dec
cmpl
movsl
pop
lcall
pop
jbe
aas
ret
dec
pop
and
rclb
pop
cmp
nop
popf
rcrb
push
dec
or
aas
adc
sub
adcb
xchg
sub
loope
int3
pop
movl
aad
scas
dec
xchg
push
dec
push
stos
push
ja
frstor
lods
rcll
mov
sbb
jg
mov
mov
std
mov
stos
sub
divl
inc
mov
cmp
xlat
testl
adc
aas
or
out
mov
stos
iret
dec
mov
lahf
jae
jb
and
movsl
aas
movsl
movsb
xor
out
pop
jae
sbb
sub
test
jns
jnp
xor
cmpsb
pop
cmpsb
andb
push
repz
mov
mov
call
jmp
mov
or
data16
cs
loop
dec
mov
ret
mov
inc
push
ret
xchg
and
pushf
push
pop
enter
sbb
xchg
add
dec
push
stc
cmp
mov
inc
lahf
or
popa
push
push
push
fwait
insl
ret
mov
enter
mov
and
xor
xor
aaa
jae
add
iret
mov
fstpl
negb
and
cmp
fidivl
xchg
iret
pop
add
dec
mov
loopne
cmc
aaa
addr16
gs
fldt
jl
lds
xor
xchg
xchg
stos
or
add
inc
push
out
sub
int
xchg
adc
dec
jns
cmpsl
popf
lcall
jo
dec
mov
mov
aaa
rcr
test
lds
sub
dec
int
inc
inc
mov
gs
dec
xchg
rolb
mov
hlt
out
test
lds
pop
dec
jl
mov
jle
call
int3
cmp
push
popf
lret
nop
add
rcll
push
mov
pop
mov
inc
lds
fwait
add
xor
pop
fnstcw
ss
jno
pusha
das
negb
cli
inc
xchg
lods
lock
shll
cmpsb
xor
xchg
xor
dec
fwait
insb
mov
fldcw
fstps
jnp
xor
adc
stos
scas
mov
insb
add
rcrl
loopne
mov
xor
cmp
inc
push
bound
sbb
pop
and
sbb
es
sub
popf
shrl
shr
xlat
out
ds
and
jno
push
xchg
add
mov
mov
in
mov
jne
ljmp
in
imul
xchg
xor
cmp
sahf
cld
iret
xor
decb
xlat
jle
lds
push
jmp
repz
jbe
jmp
frstor
and
jne
decb
pop
inc
xchg
scas
push
bound
int3
ss
fsts
mov
cmp
cmp
or
mov
ret
xchg
rolb
push
or
jae
fwait
ret
mov
mov
mov
pushf
lock
stc
pop
mov
cmp
adc
mov
pop
pop
imul
pop
xor
sub
mov
fs
adc
scas
into
outsl
mov
movl
es
sti
cmp
push
jnp
cmp
add
test
clc
sub
xor
sbb
lret
lea
and
aas
sbb
inc
insl
jb
pop
inc
add
adc
jo
je
xor
mov
imul
icebp
cmp
fwait
push
and
add
jecxz
and
jge
mov
es
mov
xchg
cld
shrb
cli
xchg
or
mov
fs
orl
push
fldcw
cmp
ret
fcoml
push
xchg
outsb
push
or
xor
and
dec
mov
inc
fsubs
out
stos
pop
sahf
cwtl
outsl
cs
dec
into
and
mov
test
mov
push
jb
inc
lock
and
sub
sbb
imul
xor
insb
sub
adc
mov
or
mov
aaa
jnp
and
jp
adc
inc
shll
push
inc
cltd
xor
mov
add
pop
adc
sbb
lahf
jo
int
dec
adc
jecxz
ljmp
sahf
fiaddl
pop
test
mov
xchg
mov
inc
das
jg
in
out
out
push
dec
or
pop
out
je
int3
mov
jnp
lea
rcrb
pop
sbb
add
bound
add
push
sub
pop
sbb
daa
sarb
call
out
and
inc
jnp
ficompl
cmp
sbb
mov
cli
std
and
sbb
dec
stos
push
and
call
sub
mov
rolb
in
adc
xor
xor
out
loopne
outsl
or
dec
or
sbb
and
mov
mov
daa
mov
mov
xchg
cld
mov
xchg
adc
sub
push
cmp
push
fdivs
shr
popf
sub
cmp
sub
jae
test
je
mov
push
inc
push
push
ss
mov
out
push
xor
cmp
mov
ljmp
pop
sbb
lods
xchg
and
leave
in
das
ja
das
sub
mov
mov
clc
jo
ret
fstl
cli
pop
das
loope
das
inc
adc
call
fbld
sbb
cmp
out
es
daa
mov
in
pop
xchg
jno
or
clc
mov
inc
lahf
into
mov
inc
push
ss
xor
aam
sbb
ror
sar
mov
sbb
imul
xor
cmp
push
jne
xchg
dec
sub
xor
aad
lea
ljmp
mov
nopl
mov
dec
lods
sahf
and
mov
or
cmp
xchg
pusha
fldl
icebp
mov
icebp
sbb
inc
push
je
jae
push
and
fisttps
adc
in
jmp
and
scas
mov
cmp
push
divb
push
into
push
mov
jb
or
dec
repz
push
jae
dec
mov
gs
std
sbb
addl
pusha
mov
les
fistpl
imul
cmpl
test
mov
mulb
xlat
std
jne
add
push
mov
sbb
sbb
incl
mov
push
das
or
fistps
and
sub
sub
sbb
dec
fwait
ret
sub
sub
push
mov
in
pop
mov
rolb
pop
cmp
cmp
imul
leave
outsb
stc
sub
cmova
mov
cmpsl
sbb
sub
pop
and
enter
sbb
loop
inc
ljmp
fisttps
clc
iret
jecxz
mov
ret
frstor
pushf
xor
out
jg
ret
jns,pt
xor
cmpsl
mov
xorb
push
mov
repz
pop
add
pop
addr16
adc
add
ja
scas
dec
cmp
push
popf
int3
cmp
clc
pop
into
iret
ljmp
dec
cmpsl
push
and
or
xor
daa
mov
sti
cli
pop
mov
fbld
movsl
mov
nop
xchg
and
test
pop
cs
fcmovu
pop
int3
or
sub
or
enter
pop
in
jl
cmpsb
mov
iret
xchg
pushf
jo
xchg
dec
mov
ret
mov
out
or
mov
jl
sbb
enter
push
mov
cwtl
adc
sub
test
cmp
in
and
rcll
pop
imul
add
lods
idivl
sbb
xor
aam
loop
mov
ljmp
aad
into
xor
push
ffreep
pop
mov
lahf
jge
arpl
pop
lods
stc
push
pop
xchg
adc
js
jmp
enter
pop
pop
rolb
sub
loopne
jnp
scas
enter
scas
sub
inc
sti
cmp
mov
cmp
ljmp
push
imul
mov
adc
sub
mov
mov
xor
or
popf
clc
fwait
and
loop
loopne
into
pop
in
clc
pop
mov
jecxz
mov
icebp
gs
loop
jge
mov
enter
xor
pusha
out
cmp
int3
mov
mov
sbb
and
dec
insb
outsl
xchg
mov
inc
sub
dec
out
aam
mov
cmp
adc
lods
fs
ljmp
int3
iret
lods
pop
test
lret
mov
rcll
lods
sbb
sbb
push
fists
outsl
mov
add
divl
fists
sub
cmpsb
lret
cmp
push
sbb
loop
inc
out
and
test
popf
cld
dec
push
movsb
xchg
push
mov
jb
and
push
or
cli
stc
sahf
push
sbb
pop
xchg
pop
push
push
fdivs
lret
xchg
and
and
stc
add
fiadds
ss
push
iret
inc
mov
in
clc
jae
stos
movsb
ret
mov
inc
movsl
int
aaa
push
cmpsl
pop
mov
cmp
mov
push
jne
add
ret
cli
jb
enter
out
mov
test
sahf
dec
xchg
es
std
adcb
mov
in
xchg
stc
push
inc
int
mov
pusha
repnz
xchg
cwtl
stc
push
pop
jmp
int
inc
jno
shll
mov
aam
add
shl
push
test
lcall
loop
jae
int3
pop
out
pop
es
pop
ret
sub
leave
add
lret
cmp
mov
sub
jo
xchg
imul
ret
dec
iret
icebp
dec
pop
outsl
shll
lret
fnstcw
xor
mov
aaa
pop
fidivrs
insl
or
adc
aad
or
fildll
outsl
lret
arpl
out
out
outsb
mov
cmp
inc
push
adc
sbb
cmp
in
inc
cmp
sahf
fisubrl
cmp
lods
push
pop
push
mov
lock
mov
loopne
jg
adc
rorb
mov
inc
nop
mov
dec
or
mov
cwtl
insl
fnstsw
lret
fxch
jnp
movsl
je
fcmove
inc
hlt
mov
mov
scas
push
cmp
mov
sub
fwait
pop
add
or
or
stos
jne
insl
push
lds
add
jge
imul
cmp
adc
pusha
fadd
test
cmp
mov
call
fisubl
lock
sub
sbb
mov
jne
fwait
sbb
addl
pop
popa
pop
fld
in
bound
out
push
push
mov
fnstsw
mov
add
imul
cld
adc
mov
push
adc
push
fwait
inc
arpl
cmpsb
arpl
rorl
rcrl
mov
leave
sub
gs
les
outsl
mov
xchg
inc
dec
bound
mov
jns
sub
push
xchg
pop
push
jo
pop
dec
inc
sbb
cmp
repnz
jns
mov
mov
into
xchg
mov
add
insb
inc
inc
xor
add
inc
push
pop
pop
hlt
sbb
loope
adcb
je
sbb
into
cmp
mov
add
push
ds
sbb
fnstenv
lahf
or
in
jnp
sub
addr16
push
xorb
xchg
stos
movsb
scas
pop
mov
js
cmp
shrb
xchg
fdivrl
xchg
sbb
pop
push
loopne
jg
jp
lds
jo
or
sbb
cwtl
mov
les
stos
ljmp
cmp
fdivrs
pop
pop
mov
mov
push
xor
push
out
inc
mov
xchg
pushf
dec
ds
imul
adc
xchg
icebp
jecxz
or
je
pop
das
jbe
adc
aad
push
nop
push
fistl
lea
adc
push
add
cwtl
ret
mov
mov
scas
or
popa
inc
jmp
push
dec
pop
icebp
push
lcall
test
push
push
test
pushf
ljmp
add
add
inc
cmpb
inc
xor
int3
and
sti
stos
frstor
subb
adc
test
sahf
pop
lret
xor
sbb
adc
test
sbb
add
test
aas
lods
fcoms
pop
inc
enter
popa
and
daa
xchg
cmp
sbb
xor
pop
fs
out
dec
in
pop
adc
jmp
sbb
jae
add
sahf
icebp
ja
xor
adc
push
xchg
add
add
jmp
push
sub
pop
mov
adc
or
mov
lcall
cltd
sub
sbb
in
test
jl,pt
pop
mov
js
mov
jbe
daa
out
jle
in
outsb
test
push
pop
je
xchg
mov
lcall
pushf
push
in
xchg
call
push
clc
fstp
push
sub
push
rorb
jnp
cli
pop
addr16
inc
scas
out
jno
shll
subb
mov
outsl
inc
xor
jmp
jbe
les
push
fwait
fs
mov
aam
arpl
adcl
jne
mov
xor
mov
enter
mulb
mov
fidivrs
test
jmp
cmp
cmp
lods
fiadds
aaa
push
or
push
pop
cwtl
adc
cld
mov
movsl
jmp
mov
vpavgb
fdivs
mov
pushf
mov
clc
mov
popf
cs
fildll
mov
adc
in
jge
stc
mov
cmp
lods
sbbb
std
out
cltd
inc
push
dec
enter
and
aaa
jl
test
lcall
js
add
add
push
pusha
lods
push
push
mov
aam
cltd
cmp
shr
xor
imul
dec
imul
leave
mov
pop
clc
sub
in
mov
mov
push
inc
xchg
cmc
jle
repnz
cmp
lds
adc
fisttpl
sbb
xchg
subl
dec
mov
xchg
cmp
pop
pop
int3
ljmp
push
into
insb
dec
add
mov
mov
cmpl
xor
movb
adc
jmp
or
xlat
int
inc
push
jp
lcall
icebp
mov
mov
push
or
sbb
mov
cmp
lods
xor
mov
icebp
movsb
dec
fisubs
inc
movsl
or
mov
xchg
mov
sub
mov
xchg
add
jecxz
decl
mov
imul
fdivrl
loope
mov
push
pop
xlat
jecxz
push
xor
fimuls
xor
mov
xor
out
testl
mov
or
cs
sub
test
xlat
jmp
mov
sub
mov
add
jb
sbb
mov
mov
jmp
cmpsl
aam
fisttps
testl
call
or
cld
and
sarl
mov
jmp
xor
cmp
sbb
adc
jp
pushf
dec
inc
jne
push
fstl
out
or
and
cli
push
ds
insb
dec
cmp
cmp
sbb
popf
mov
imul
adc
push
test
arpl
push
push
adc
shl
pop
inc
add
mov
aas
or
sub
adc
cmp
jo
lret
sbb
mov
fwait
out
aas
jbe
sbb
push
adc
inc
loop
fldt
pop
test
test
lret
push
out
fwait
cmpsl
stc
adc
pusha
sbb
mov
ljmp
add
dec
sbb
adc
sti
jne
jmp
mov
add
dec
mov
jmp
mov
push
test
fs
popf
dec
gs
mov
shll
shl
inc
loope
pop
xchg
pop
shl
xor
lods
mov
icebp
adc
stos
mov
scas
xchg
repz
jns
or
insb
scas
cmp
mov
mov
jmp
sbb
out
lds
jbe
pop
jnp
pushf
out
jbe
vcvttsd2si
lock
mov
ljmp
fdivrs
loop
in
xor
fidivrl
lret
mov
out
lods
loope
sub
pusha
mov
popf
cmc
mov
std
pop
pop
bound
and
cmpb
dec
aas
add
pop
mov
push
cmpl
sbb
nop
ja
inc
lods
fs
cmp
fistpl
jp
push
push
adc
inc
jns
sti
mov
mov
or
ss
int3
push
adc
sub
cmpsl
pusha
inc
pop
mov
movsl
or
xor
mov
inc
sti
and
jmp
mov
mov
push
pop
sti
adc
sub
push
jae
jbe
adc
mov
repz
mov
push
pop
or
pushf
and
movsb
push
inc
aas
and
std
push
cmp
addb
push
push
and
cmpsl
jmp
faddl
inc
sub
stos
setnp
adc
jbe
call
lret
adc
push
testl
jge
xchg
ret
stos
mov
scas
xchg
mov
xchg
addr16
jl
shlb
pop
lcall
jo
mov
das
stos
jg
les
jne
xor
mov
dec
pop
fsubl
sbb
pop
mull
adc
jno
fs
sbb
inc
xor
xchg
maskmovq
outsl
jae
push
dec
outsb
push
stos
cmp
mov
or
arpl
mov
pop
popa
sahf
pop
lcall
movsb
xor
mov
pop
mov
mov
cmc
ss
push
xchg
fisttps
cmp
or
mov
lods
mov
lock
jbe
pop
pop
in
add
cwtl
inc
shl
jg
and
mov
pop
adc
pop
stos
pop
in
jo
mov
aaa
push
sub
and
xchg
lret
stos
out
pop
sub
adc
pop
sub
rorb
cli
jae
sbb
adc
fdivs
and
xchg
and
jge
jo
or
jb
jne
pop
rcll
adc
out
dec
and
and
inc
pop
mov
mov
rcr
pop
repnz
ljmp
sbbb
sbb
and
enter
fists
fwait
cmp
add
pop
mov
repnz
add
outsl
dec
xchg
repnz
loopne
add
dec
fdivr
stos
adc
inc
insb
in
fimull
mov
stos
loop
mov
mov
test
movsb
stc
dec
inc
pop
add
fwait
outsb
mov
test
ret
inc
repnz
xchg
push
out
aad
cld
push
or
orl
pusha
pop
out
loop
mov
mov
fidivl
ret
enter
test
add
and
loopne
loope
push
and
dec
and
mov
enter
push
mov
fstpt
out
cmc
inc
ljmp
or
fnstcw
frstor
pushf
mov
sub
seta
lcall
xchg
inc
rol
xchg
sbb
push
into
jbe
pop
leave
push
es
xor
or
iret
orb
dec
sbb
in
test
mov
outsb
loop
push
cld
out
adcb
pop
jg
mov
ror
jnp
mov
stos
aaa
cmp
xor
pop
lds
xchg
mov
int
mov
pop
cmp
push
dec
dec
sbb
adc
sbb
xor
test
test
adc
inc
cmp
loop
adc
adc
adc
mov
in
jae
mov
mov
and
mov
add
push
sub
mulb
out
xor
push
icebp
xchg
pop
mov
inc
popf
divl
lods
xchg
stos
pop
idivb
dec
in
mov
pushf
popf
sbb
je
test
mov
icebp
cmp
or
mov
daa
sub
scas
pop
adcb
mov
xor
cmpsb
rol
dec
dec
mov
cmpsl
mov
inc
jge
push
pop
push
call
xlat
xchg
adc
inc
mov
or
mov
bound
cmc
mov
decl
imul
ljmp
test
jmp
sub
enter
push
fs
rcrl
fiaddl
lds
decb
push
jo
in
mov
ret
add
jmp
rorb
repnz
mov
push
aam
add
push
arpl
ljmp
hlt
push
repz
and
cwtl
or
mov
mov
cmc
jecxz
movlps
fistps
aam
add
lret
add
in
xchg
jae
mov
pop
lahf
mov
popa
arpl
fcmovne
jb
inc
push
xchg
fdivs
cmp
mov
shrl
jnp
sahf
loopne
push
fs
test
fisttpl
int3
push
popa
fwait
cmp
sub
jbe
xlat
mov
sbb
hlt
out
dec
stc
jmp
mov
cmp
push
dec
pushf
push
movsb
pop
dec
cmp
mov
lcall
or
mov
ljmp
shr
stos
xchg
sub
push
ret
mulb
cld
outsl
mov
mov
fmuls
mov
jns
pop
push
aam
jp
mov
pop
in
mov
xchg
jecxz
mov
mov
stos
sub
test
sbbl
lret
pop
jmp
jns
pusha
adc
push
sub
setg
ljmp
inc
imul
jno
dec
fs
in
push
shll
stos
fdivrs
in
xor
push
js
mov
in
adc
sub
stos
adc
jae
dec
sub
frstor
and
add
or
fstpl
add
pop
lods
out
inc
adc
cmp
ret
aas
xor
je
adc
or
xor
lea
popf
mov
mov
cmc
lcall
popf
mov
inc
xchg
test
push
in
inc
xor
test
jb
lods
lods
int3
xor
lret
sbbb
pop
jne
int
test
sbb
jl
in
and
ljmp
frstor
mov
cmc
sub
cmpsb
push
test
adc
out
inc
mov
fstl
adcb
fs
subb
xchg
insl
sub
je
sub
mov
xor
xchg
jnp
cmc
jge
cmpsl
cmpb
in
mov
or
sbb
hlt
enter
test
fists
stos
ss
sti
and
out
in
mov
enter
add
daa
adc
out
cli
jne
xchg
push
mov
jns
and
or
hlt
inc
leave
push
and
sahf
dec
in
loope
cmp
sbb
icebp
adc
inc
or
jl
jo
fmuls
cltd
sbb
adc
popf
mov
mov
adc
cmp
pop
sti
add
jg
movsl
mov
lods
jge
xchg
cmc
cmpsl
mov
jae
mov
mov
cli
mov
mov
mov
test
pop
cmpsb
stos
mov
mov
xor
loop
inc
fisttpl
pop
in
jg
stos
dec
jge
jns
shr
cli
mov
test
or
jne
frstor
mov
daa
insb
fwait
lret
xor
mov
mov
jg
orb
xorl
lcall
or
mov
loopne
mov
lret
adc
pop
mov
ret
mov
sti
inc
dec
or
mov
push
cld
jno
mov
in
sub
lret
inc
jl
mov
jno
cmpsb
sbb
mov
rcr
dec
inc
addb
movsb
mov
mov
mov
cmovno
push
add
mov
push
mov
mov
jnp
div
out
xor
aam
lods
lahf
add
test
sbb
and
push
xor
scas
inc
cmc
and
je
xchg
add
bound
movsb
lods
test
out
test
pop
pop
jle
sti
push
xchg
jno
ret
adc
jmp
sti
pop
divb
xchg
sbb
sbb
rolb
mov
push
mov
jns
in
scas
testb
xchg
ds
je
repz
cmp
sbb
stos
rolb
mov
cmp
mov
inc
sti
and
jle
cmp
or
pop
loope
xor
jo
dec
sbb
icebp
push
mov
mov
adc
outsl
add
push
movsb
popf
repz
in
in
dec
lds
mov
jp
mov
shll
or
ret
jns
xlat
test
pop
pop
shll
movsb
outsb
jle
int
fsts
dec
mov
cltd
mov
add
xlat
stos
xchg
test
add
sbb
add
popa
mov
loope
pop
mov
leave
int
loop
daa
mov
scas
movsl
and
dec
push
sbb
push
in
clc
lret
lea
add
jb
loope
mov
xor
pop
imul
xor
adc
loop
testb
jo
ss
pop
sbb
and
pop
dec
leave
jmp
fdivrs
or
cmp
xor
and
loope
or
dec
mov
jge
out
push
push
js
jecxz
xchg
pop
xor
xchg
lret
jne
push
dec
test
push
cmpsl
lcall
fnstsw
inc
push
sbb
push
testb
test
jge
cmp
cmp
lret
cmp
add
imul
xor
dec
js
std
dec
clc
loopne
js
or
push
jnp
lret
rol
popa
mov
add
dec
ss
es
push
xor
pop
clc
sub
ss
xchg
cmc
aaa
bound
xchg
lods
cmp
js
push
pop
jae
xchg
cld
mov
jmp
xor
jg
jae
pop
fstpt
cmp
adc
lret
jge
mov
arpl
outsb
push
mov
cmp
pushf
pop
ja
push
adc
adc
sti
mov
xor
and
dec
jno
cmc
or
mov
push
mov
xchg
or
mov
stos
xor
dec
call
inc
in
pop
pop
test
idiv
shl
or
push
push
aas
dec
xchg
push
mov
js
imul
mov
xchg
iret
and
jb
lods
adc
pop
cs
sbbb
inc
inc
inc
imul
das
popf
mov
xor
inc
push
cmp
xchg
icebp
cld
xchg
outsb
mov
cmp
mov
dec
mov
ret
jbe
push
jne
mov
rorl
sub
ja
js
and
jmp
sbb
jae
out
fiadds
in
aas
mov
call
popf
shrl
or
jno
or
leave
adc
dec
and
mov
in
out
stos
add
std
jb
call
inc
push
loope
lods
xlat
mov
sahf
test
adc
pop
jecxz
stos
hlt
loope
shrb
dec
xor
rorb
inc
push
adc
pushf
inc
xchg
loop
loope
cmp
inc
or
mov
sahf
pop
add
ja
sub
mov
dec
imul
sbb
fisubs
clc
and
or
ja
pop
push
cmp
mov
popa
or
ljmp
push
cli
fidivl
xor
out
cmp
fldcw
xlat
cmp
js
clc
js
xor
push
sbbl
jg
cmpsl
sub
adc
shlb
mov
mov
mov
lods
mov
icebp
or
xchg
or
das
sbb
dec
push
mov
insb
popa
push
jae
xor
sbb
dec
sub
pop
adc
ja
jne,pn
cmpl
lahf
gs
lea
and
insb
out
aas
dec
int3
pop
adc
mov
pop
cmp
leave
insb
mov
inc
leave
dec
pop
ds
call
and
mov
xchg
sarb
in
add
rcrl
stc
lds
cmpsb
jne
adc
cmovp
xorl
repz
daa
push
lds
mov
push
dec
test
jnp
fucom
aad
inc
jbe
mov
pop
and
fwait
in
rclb
iret
rcrb
mov
xchg
xchg
sti
cmp
mov
push
aad
push
ja
test
push
leave
ret
and
sub
bswap
fnstcw
mov
in
aas
test
loop
pushf
pop
in
sub
ja
cs
mov
sub
push
adc
mov
pop
jl
gs
dec
enter
sub
das
sub
nop
jg
lahf
cmp
in
and
loop
pushf
mov
imul
adcl
cmp
xor
fldl
dec
imul
sarl
jb
sbb
arpl
lods
insl
mov
or
adc
hlt
fisubs
pop
out
cmpsl
inc
cmpsl
adc
lcallw
fstl
xorb
xchg
sbb
jns
push
mov
lcall
xchg
adc
sbb
out
aaa
loopne
movsl
lret
cmc
shl
fldt
inc
cmc
fsubs
xchg
lods
cwtl
stc
ja
lea
mov
adc
out
fwait
xchg
lcall
pushf
cmp
movsl
add
inc
hlt
js
jle
adcl
btr
xchg
in
mov
lds
xor
pop
into
inc
pop
xlat
pop
jbe
sub
mov
inc
cmp
mov
enter
int
mov
adc
sbb
mov
push
enter
dec
cli
mov
cmpl
icebp
xor
imul
test
and
aas
es
mov
mov
repz
out
sti
adc
pop
xchg
rolb
insl
lret
add
je
and
int
daa
sbb
scas
add
je
out
mov
popf
cmp
popa
add
adc
dec
xchg
fsub
inc
or
imul
push
adc
or
xor
in
aad
cmp
push
fwait
mov
sbb
fldenv
push
movsb
xor
lods
and
je
cmc
inc
xchg
add
mov
arpl
jmp
pop
lcall
cwtl
inc
jns
lds
mov
ficompl
xor
loop
add
or
mov
or
push
jle
scas
dec
loope
ficoml
cld
mov
add
outsl
cltd
addr16
jmp
jge
xchg
mov
add
push
test
out
pushf
and
mov
cmp
fs
push
or
push
lods
imul
cmp
out
sub
xchg
in
cmp
mov
fs
aam
fwait
je
mov
cli
jns
mov
mov
mov
fidivl
stos
or
push
aaa
pop
inc
push
inc
cmc
clc
test
dec
inc
pop
arpl
std
inc
pop
push
lods
mov
lcall
in
xchg
push
in
adc
into
jl
xor
ljmp
aaa
push
popa
mov
sbb
ror
push
and
repnz
cmpsb
dec
ja
call
cs
data16
in
or
in
jle
push
push
ja
movsl
arpl
xchg
imul
or
xchg
pop
mov
push
and
notl
adc
xchg
out
push
shl
adc
dec
orb
sbb
mov
push
push
das
dec
push
aas
mov
sbb
repz
or
jle
dec
adc
int
and
in
jg
call
dec
inc
push
fsubrl
ja
or
out
jo
std
in
je
iret
arpl
iret
sub
repnz
cmp
fists
out
out
xchg
scas
mov
aaa
mov
scas
push
xchg
push
sub
jg
je
pop
mov
test
sbbb
or
call
rol
xor
sbb
cs
inc
loop
cltd
adc
cmp
sub
insb
inc
pop
xchg
data16
mov
scas
inc
lahf
cwtl
or
cltd
out
adc
jecxz
jmp
scas
out
movsb
ljmp
shl
or
adc
int3
aaa
imul
xchg
push
and
scas
push
andl
lcall
add
fidivl
fidivrs
mov
push
mov
mov
icebp
inc
mov
stc
mov
movsl
iret
mov
inc
xchg
mov
mov
scas
mov
loope
xchg
in
nop
arpl
push
inc
mov
movsb
test
cli
xor
or
loopne
adc
int
push
repnz
adc
les
out
add
cmp
inc
or
ljmp
and
outsb
and
dec
int
loopne
mov
push
push
pop
mov
push
cmp
lea
lea
mov
loope
cmp
lea
inc
hlt
and
outsb
xor
mov
push
sub
test
dec
nop
pop
dec
dec
and
mov
jmp
ror
lret
xorl
bound
jno
xor
repz
int3
cmpsb
jecxz
repnz
lock
mov
popa
xlat
popl
mov
jg
lods
lahf
jge
xorb
sub
inc
sub
hlt
xchg
aam
mov
inc
orb
call
add
mov
xor
lods
jge
in
lret
xorl
push
int
cmpsl
mov
jne
mov
fcomps
dec
lahf
mov
pop
bound
push
incl
sub
rcll
xchg
jle
js
jle
inc
fimull
loope
dec
mov
push
fchs
mov
xchg
iret
mov
inc
and
sahf
xchg
lods
or
les
ja
aam
in
imul
jmp
orl
add
lret
cwtl
sub
mov
jecxz
sti
mov
mov
pop
adc
mov
jns
and
addb
push
enter
aas
dec
mov
sbb
mov
pop
popf
xchg
xchg
out
call
xor
or
loop
test
aad
lock
insl
addr16
sub
add
inc
and
mov
add
mov
cmp
insl
xchg
cmp
shlb
pop
sarl
mov
int
sub
inc
mov
inc
lea
mov
xor
clc
or
jmp
stos
ljmp
sbb
cmp
adc
sub
sub
push
dec
mov
mov
pop
dec
push
mov
xchg
mov
sahf
dec
test
shlb
mov
fadd
xchg
stos
cltd
movsb
dec
pop
mov
sarl
repnz
gs
sbb
xor
inc
jo
shl
pop
not
pop
icebp
sub
aad
inc
out
xlat
repnz
lahf
lds
lods
cltd
mov
nop
imul
inc
in
iret
xchg
aam
mov
xchg
es
pushf
daa
mov
cmpsl
addr16
xchg
or
aad
fistpll
jo
shll
pusha
aaa
pop
rcr
sub
inc
cmp
pushl
jmp
movsb
mov
adc
dec
xor
lahf
fistps
sahf
xlat
hlt
adc
xchg
mov
inc
push
fs
sbb
test
sbb
adc
loopne
cmp
fwait
aam
fsub
test
cli
push
lret
enter
aas
outsb
mov
enter
sbb
test
js
pop
inc
out
mov
ret
into
and
xchg
cmc
dec
lcall
nop
dec
jb
popf
jmp
inc
or
xchg
mov
add
fwait
cwtl
inc
icebp
mov
sub
add
rcr
xchg
ret
movsb
add
mov
fwait
testl
shl
lahf
jmp
ficoms
mov
jb
rclb
sarb
fs
add
cli
push
push
jge
sub
mov
xchg
cmc
mov
int
gs
imul
je
mov
cwtl
xchg
xchg
jg
mov
xlat
pop
clc
dec
dec
pmulhuw
fdivrs
lods
outsb
pop
push
adc
out
fstpl
idiv
das
push
not
xor
adc
adc
cmpsb
xchg
pop
shl
xor
test
scas
cmpsb
push
fsubl
clc
pop
jge
cmc
lock
rcll
mov
pop
nop
cli
cli
push
cmp
mov
xor
lret
cltd
adc
sub
mov
scas
nop
mov
jge
lret
das
mov
xor
daa
aas
fcmovnb
je
sti
hlt
lret
aad
ja
sbb
aas
xchg
mov
testb
xchg
lcall
inc
cmp
cmpsl
sbb
cltd
rorl
fwait
mov
mov
subl
inc
push
cli
dec
push
pop
lret
mov
mov
insl
sbb
shrl
push
lods
jno
imul
jge
testl
xchg
ja
xor
je
mov
dec
adc
aaa
xor
je
test
jp
push
xchg
js
pop
cli
pop
scas
data16
xchg
imul
add
imull
inc
repnz
movsb
jb
shl
pop
jmp
push
mov
xchg
imul
cmc
jno
imul
jb
rolb
pop
dec
and
rcrl
ror
fiaddl
mov
jbe
fldln2
fcmovne
ljmp
xlat
fwait
or
test
or
jnp
sbb
mov
movsb
xchg
gs
push
add
scas
sar
xchg
add
and
xchg
ficomps
out
ljmp
sub
mov
dec
xchg
andb
mov
and
inc
nop
adc
and
pushf
lds
nop
sub
or
loopne
jg
xchg
fcmove
cmpsb
imul
push
and
popa
push
push
sub
or
cld
add
jno
mov
xchg
mov
mov
jo
pop
jb
rorl
mov
pop
popa
leave
scas
inc
fisttpll
add
jnp
add
data16
sbb
xor
sbb
js
push
repz
mov
mov
stos
and
jl
repnz
aam
subb
lods
inc
gs
push
fidivrs
cmp
cli
clc
add
aaa
je
or
lods
inc
jo
dec
mov
cmpsb
jo
arpl
push
xor
stos
push
lock
lods
lock
xor
xchg
xor
cld
adc
aam
sub
icebp
mov
cmp
movsb
cmp
lret
test
fwait
xchg
fcomps
movl
fcmovne
test
rorl
das
das
loope
call
into
sub
pop
subl
push
in
test
push
jno
les
sbb
sti
sub
xchg
xor
mov
hlt
faddl
push
adc
add
andb
jp
cmc
jl
repnz
sub
sbb
sbb
in
jge
aam
stc
pop
jg
mov
or
mov
sub
dec
lret
js
enter
dec
xlat
popa
sub
fistpll
push
xlat
xor
jb
clc
scas
aas
rorb
pop
cmp
sbb
inc
xor
out
push
ja
clc
fcoml
push
fisubl
sub
test
fiadds
mov
leave
xlat
fwait
insb
pushf
mov
pop
mov
cmp
jo
jge
push
jo
test
les
jle
cmp
add
sub
movlhps
mov
out
das
pop
push
jmp
sub
xor
mov
cmp
repnz
addb
mov
divb
es
mov
xlat
push
xchg
subl
rol
xchg
data16
lret
out
fstpt
sbb
xchg
add
mov
jg
cltd
fstl
ja
lahf
inc
lds
or
xchg
inc
cmpsb
lock
iret
outsb
sub
push
lret
or
xchg
mov
enter
cld
sahf
fiadds
das
add
xor
dec
jnp
movb
fwait
lret
fisubl
adc
das
imul
jae
out
pop
jb
add
fcompl
xor
dec
fildll
outsb
push
xor
lock
mov
ficompl
mov
nopl
inc
flds
es
add
in
int3
inc
xor
jo
mov
jge
jne
fbstp
dec
clc
jp
js
addr16
push
movsl
mov
jnp
or
add
cltd
jge
data16
and
pop
adc
mov
enter
stc
sahf
sbb
sahf
jl
and
push
jp
push
in
mov
or
dec
fdivrl
cmpl
pusha
leave
push
adc
adc
ja
dec
das
fdivs
aas
mov
sahf
and
xchg
fistps
into
das
scas
fisttpll
xor
pop
sub
jecxz
or
adc
repnz
sub
cld
pop
adc
lret
mov
repnz
mov
test
push
aad
xchg
inc
mov
outsl
mov
mov
fsubrl
ss
adc
cmp
add
shll
xchg
sbbb
adc
adc
aas
or
imul
mov
jbe
mov
xor
sub
cld
lahf
cmpsl
out
pushf
out
fwait
ret
aad
jmp
cmpsb
loop
sbb
lret
xchg
cs
ja
cmp
and
mov
sahf
dec
das
call
lret
loopne
and
cmp
call
mov
in
dec
mov
arpl
dec
mov
jle
shlb
iret
sbb
cmc
mov
adc
fucom
xchg
and
sub
gs
roll
push
or
or
bound
adc
pusha
inc
sti
fistl
or
mov
gs
not
aas
enter
std
mov
enter
dec
mov
popa
cld
xchg
jle
aaa
dec
test
inc
loope
mov
pusha
push
lock
push
lahf
imul
sbb
sub
xor
or
jo
jle
ret
insb
popf
pop
out
aam
shlb
in
stos
push
dec
dec
pop
call
lret
sahf
stos
pop
mov
mov
adc
int3
jbe
xlat
add
adc
pushf
mov
in
jecxz
pop
mov
sub
jg
pop
mov
imul
in
and
dec
mov
ret
gs
fstpl
jecxz
jmp
divl
inc
test
jg
inc
pusha
into
mov
adc
pop
ds
inc
lcall
jno
inc
fsubrs
pmuludq
movsl
inc
stos
popf
dec
lret
xchg
popa
lock
dec
push
adcl
push
inc
int3
cld
je
popa
jnp
jo
push
int
test
mov
in
cmp
cmp
ss
test
lret
mov
shrb
hlt
scas
and
xor
scas
jg
cmp
dec
sub
dec
mov
push
xlat
lds
pop
pop
sbb
add
mov
rcl
push
adcb
in
mov
mov
push
ja
stos
push
lods
mov
repz
inc
sub
idivb
popf
jb
sbb
ficomps
inc
movb
pusha
xor
push
mov
pop
and
and
xor
sub
mov
mov
hlt
rcll
out
arpl
fwait
push
inc
movsl
jnp
call
inc
mov
pop
aaa
and
pop
fiaddl
subb
xor
cmp
out
outsl
dec
inc
divl
sub
push
stc
sub
rclb
jno
repz
mov
push
jle
arpl
adc
dec
stc
rol
mov
mov
or
pop
test
loop
jge
dec
push
cmp
je
sbbl
mov
aas
mov
out
aaa
loope
lcall
or
fildll
mov
pop
les
xchg
push
bound
sub
sub
leave
xchg
xchg
sbb
push
and
push
fistps
sbb
stc
sbb
daa
push
subb
call
out
mov
adc
inc
mov
pop
fld
adc
mov
and
scas
je
imul
and
ljmp
mov
in
lret
pushf
mov
sbb
out
push
insl
cs
jae
sub
adc
ss
jb
sbb
jne
lods
cld
in
test
call
jne
rcrb
adc
je
pop
daa
pushf
cwtl
xor
or
adc
jg
push
popf
mov
mov
jae
push
pop
into
js
jp
push
xchg
fldenv
out
mov
xorb
mov
arpl
pop
cs
lods
xor
jmp
out
xchg
fnstenv
sbb
out
dec
sub
test
fld
xlat
or
sub
push
mov
cmp
loopne
mov
dec
cmp
mov
enter
incl
dec
gs
ljmp
pop
pop
jne
sub
push
jg,pt
mov
xchg
bound
xchg
inc
scas
fstpt
lret
ret
mov
das
outsb
push
mov
push
push
ja
mov
mov
ja
loope
xlat
or
mov
out
andw
cmp
or
test
or
lods
or
subl
ret
cmp
pop
sarb
dec
adc
dec
mov
iret
clc
mov
xchg
icebp
mov
add
cmp
pusha
inc
lahf
shl
push
out
dec
or
call
or
jno
mov
push
add
addr16
imul
mov
mov
movsb
ret
xlat
or
mov
adc
cmpsb
loope
mov
psubq
rcr
xchg
fsubr
ret
mov
adc
dec
mov
sahf
xor
pop
jl
ja
sub
daa
repnz
in
nop
push
mov
test
cmp
xor
cmp
pop
fcmovnu
das
out
stos
dec
or
add
dec
mov
xor
ret
aad
pop
inc
pop
mov
sub
inc
jo
jbe
push
jae
sub
add
iret
addb
lock
mov
xor
out
and
sahf
stos
jnp
fsubs
xchg
jg
js
fnstsw
sahf
rol
or
sbb
xorb
mov
add
and
and
fildl
clc
jne
pusha
in
mov
insb
sub
stc
rcrb
xchg
push
scas
rcrl
jg
push
data16
xor
cmc
mov
sbb
cmp
loopne
cmp
mov
lods
dec
or
and
add
repz
mov
pop
scas
gs
leave
nop
ja
push
pavgb
mov
scas
mov
cmp
xor
call
sub
aad
lret
arpl
push
jmp
shr
pusha
dec
aam
dec
cmp
fs
add
jl
cmp
pop
mov
and
nop
push
sub
push
jnp
js
xor
add
fmull
in
or
inc
sbb
jae
dec
inc
xor
cmp
xor
xchg
push
fcmovbe
out
sbb
mov
push
fmull
fdivl
out
pop
cmpsb
mov
push
sub
push
xor
gs
add
lret
sub
add
dec
gs
out
outsl
aaa
mov
add
cmp
push
fisttpl
and
sub
add
icebp
jmp
jmp
leave
ss
ret
pop
pop
insl
pop
and
jge
mov
pop
cs
andb
out
ret
nop
mov
imul
mov
mull
loope
cwtl
xor
dec
push
ret
add
leave
jno
cmp
xchg
mov
je
mov
mov
aas
inc
ja
inc
jne
mov
xchg
mov
mov
jo
testl
pusha
sub
sarb
nop
xorb
push
push
inc
inc
cmpsb
in
xchg
or
leave
lds
mov
cmp
inc
sbb
push
jno
sub
sub
jmp
test
jnp
add
cmp
push
aad
scas
pop
jmp
jb
lods
xchg
dec
vpcomd
daa
movsl
xchg
call
add
pop
mov
and
jno
mov
test
inc
xchg
out
iret
frstor
aaa
cltd
cmp
or
ret
sbb
movsb
jecxz
xor
cmp
ror
insb
js
pop
in
testb
movsb
lret
mov
in
loopne
es
cld
jnp
xor
test
mov
sbb
hlt
adc
test
pop
repz
push
jbe
add
popf
fld
push
bound
push
xor
mov
mov
cmpb
push
inc
mov
adc
sub
sub
cli
pop
dec
bound
or
leave
scas
and
xor
sub
add
sti
pop
jne
in
bound
or
lods
loopne
addr16
pop
inc
fcompl
inc
test
repz
pop
xchg
xchg
xchg
add
mov
cld
sub
xchg
pusha
in
dec
inc
repnz
mov
rcl
mov
mov
mov
cmpsl
adc
dec
pop
iret
aaa
mov
arpl
fistps
pop
jmp
xchg
inc
cli
jg
das
mov
in
fisubs
jb
lock
mov
mov
stos
xchg
mov
xchg
jbe
in
fisttpll
lea
push
push
outsb
mov
and
adc
insl
cmp
jb
mov
xchg
jns
arpl
cld
mov
mov
fsubp
movsl
test
cmp
pop
mov
stos
pusha
das
mov
inc
adc
fs
stos
push
insb
and
scas
fstl
jo
xchg
mov
sub
in
test
push
into
test
jecxz
stc
ds
jmp
lods
repz
or
cmpsl
pushf
gs
mov
inc
xlat
push
and
dec
inc
cmpsl
dec
repnz
push
addr16
insb
rcrl
cmp
xor
jno
aam
std
xor
mov
push
sbb
addb
mov
cmp
push
cmpsl
mov
fisttps
xor
add
pop
mov
pop
into
fistpll
test
or
ljmp
pop
into
imul
andl
pusha
inc
sub
or
lods
adc
dec
and
mov
sub
cmp
call
lea
and
fsubrl
stos
mov
iret
int3
pop
in
add
cmp
loop
and
push
fsts
fwait
cmp
out
jo
xorl
mov
dec
and
fnstenv
rcll
xchg
pop
hlt
stos
shll
xchg
lds
inc
jle
insl
sbb
int
cltd
sub
add
enter
pusha
mov
out
lret
push
in
je
call
cmp
xor
gs
stc
adc
fwait
adc
add
mov
add
jbe
out
test
mov
out
fstpl
mov
mov
fwait
push
add
cmp
js
inc
mov
fdivrs
add
scas
shll
fstpl
fisttpll
xchg
out
lcall
add
push
pop
mov
xor
xchg
push
mov
xchg
cmpsl
jb
add
jle
adc
nop
test
test
mov
jle
and
xchg
push
ficoml
arpl
stos
mov
stos
pop
push
jl
mov
xchg
repz
shrl
fnstenv
and
mov
dec
mov
lods
ret
mov
mov
pop
ffreep
aaa
out
jnp
mov
push
jbe
add
add
lea
pop
push
jp
fisubrl
ljmp
dec
mov
scas
je
cwtl
mov
sbb
adc
aas
leave
in
fstps
xor
insl
test
xchg
icebp
xor
es
imulb
les
dec
push
lea
mov
ss
outsl
and
jb
adc
and
les
mov
cld
stos
pushl
cmpb
mov
mov
sbb
mov
lret
mov
outsb
ds
mov
xor
xchg
inc
cmp
adc
iret
div
jo
in
test
aam
mov
mov
xchg
leave
sbbb
xchg
adc
pop
call
and
mov
and
sarl
add
and
icebp
sbb
dec
sbb
mov
push
sarl
mov
jp
push
bound
orb
stos
fbld
xchg
add
movsb
test
mov
pusha
or
jbe
shl
pop
sub
pop
sbb
mov
loope
pop
repz
inc
xor
es
jno
sbb
adc
cld
add
imul
nop
cmpb
push
and
xchg
lds
adc
popa
mov
push
and
inc
into
mov
sub
fistpll
fimull
push
fnstcw
je
jmp
out
out
loop
mov
aam
jno
cltd
push
orb
lock
loop
dec
jecxz
fsts
addl
mov
int
mov
add
lea
and
xchg
mov
sarl
sbb
jbe
jge
imul
inc
adc
subl
lcall
leave
in
fstps
rclb
push
loope
cmc
and
and
ficoms
call
lret
adc
loopne
dec
fisttpll
jbe
cmp
rcl
cmp
mov
addr16
pop
testb
push
add
es
mov
ficoml
aad
in
jle
dec
mov
loope
or
dec
jl
inc
push
cmpsb
jns
inc
push
mov
lcall
or
xor
sti
and
sub
stc
cli
rolb
push
mov
adc
call
je
add
mov
mov
mov
imul
pop
xor
ficoml
inc
jns
dec
int
jl
mov
mov
lds
imull
jge
xchg
pop
and
inc
lods
ret
mov
xor
scas
sub
test
push
out
sbb
scas
xchg
mov
pop
mov
aas
jae
cmp
stc
roll
dec
jns
ficompl
loope
xor
cs
jg
mov
lret
mov
loop
mov
leave
or
mov
lock
fdiv
cmc
ficomps
enter
fdivs
out
aas
mov
push
loope
ss
aas
jo
scas
fadds
mov
js
inc
jl
inc
jae
pop
imul
mov
aaa
adc
test
outsl
decb
cmp
and
jecxz
add
cmp
cltd
and
add
pop
lahf
iret
imul
aad
adc
xchg
xor
in
cmc
sub
jnp
sbb
loop
mov
push
js
cmp
xchg
lret
dec
or
inc
in
sbb
dec
xchg
add
add
mov
movsb
mov
ds
mov
adc
ljmp
enter
inc
outsb
adcb
xor
push
add
push
dec
xor
div
out
mov
xlat
xor
sub
addr16
cmp
cmp
mov
push
mov
and
dec
push
xchg
and
aad
mov
xor
int3
xchg
enter
dec
imul
push
icebp
xor
sub
sbb
enter
stos
outsb
push
mov
loop
mov
pop
adc
bound
arpl
sub
movsl
mov
sbb
cld
cmp
sbb
mov
mov
add
es
in
push
mov
ret
and
push
out
sub
pop
add
inc
push
mov
test
ret
cwtl
jne
scas
popa
imul
jle
mov
ja
sub
gs
adcb
lcall
es
das
das
mov
gs
xchg
push
aas
add
mov
mov
xchg
inc
push
inc
bound
adc
xchg
cmpl
dec
xlat
dec
mov
movq
and
mov
test
pop
adc
lret
popf
dec
jecxz
push
shl
mov
lcall
mov
cmp
fsts
add
mov
pop
pop
xlat
dec
sub
or
in
rcrb
mov
in
and
mull
jp
je
add
movsl
jno
xorb
xor
push
sub
pop
pop
sbb
jge
shlb
dec
dec
mov
out
repz
dec
inc
and
push
insl
mov
js
sbb
xor
test
or
movsl
xlat
int3
push
js
scas
sbb
sbb
sar
icebp
repnz
sbb
sub
nop
pusha
pop
push
test
dec
and
cmp
outsb
add
sbb
xor
bound
and
test
in
push
jo
pop
dec
jmp
push
sub
sbb
adc
add
pop
dec
incl
pop
aaa
fsubrs
dec
inc
cmpsl
notb
cmp
cmpb
hlt
pop
aas
stc
inc
js
lret
repnz
inc
mov
sub
sbb
pop
insb
cmp
subb
jp
ret
call
mov
shlb
sbb
fadds
sbb
test
addr16
cmpsl
and
sbbb
jp
sub
mov
inc
mov
bound
add
sbb
xor
and
flds
stos
pusha
popa
cld
test
mov
push
adc
lcall
loop
mov
cmpsb
fidivrl
mov
mov
sub
mov
inc
cltd
push
pop
inc
aas
icebp
mov
sub
fs
and
call
sub
out
xchg
inc
pop
test
lcall
dec
xchg
lock
sbb
pop
mov
idivl
subb
jns
sti
insb
call
stos
inc
adc
nop
rcrb
add
push
add
pusha
xchg
loop
fisttps
or
loopne
lahf
or
dec
pop
add
lret
pop
or
xchg
xor
hlt
pop
insl
addr16
fcompl
shrl
or
sbb
mov
ret
ficoml
inc
or
jp
cli
pop
pop
add
adc
xchg
clc
dec
dec
xor
push
pushf
loopne
and
test
inc
mov
push
cmp
insb
das
sbb
jle
cld
mov
dec
aam
adc
push
cmp
ret
pop
aad
inc
shlb
aaa
fs
inc
rcr
daa
pop
adc
dec
cmp
adc
popa
les
mov
mov
add
hlt
mov
ret
mov
ja
xor
jge
mov
sbb
mov
xchg
std
add
cmpsb
rcl
jmp
push
push
adc
jae
pop
mov
xchg
xor
outsl
icebp
jnp
and
popa
push
out
aam
xchg
sub
inc
daa
ret
dec
pop
sbb
mov
fisttpll
push
pop
std
addr16
stc
jnp
repz
add
push
mov
jno
sbbl
pop
mov
in
or
xchg
aas
xchg
cmp
test
push
sbb
les
hlt
pop
sbb
idivl
mov
leave
shrl
pushf
mov
stos
rcrl
cltd
pop
fsubl
sub
jae
ret
cwtl
cltd
jg
pop
addr16
lods
out
pop
adc
pop
stc
or
lea
sbb
lods
hlt
imul
push
push
jmp
sbb
lods
cmp
nop
scas
push
je
or
gs
cmp
pop
rcrl
pop
adcb
dec
adc
xchg
clc
and
add
mov
push
pop
dec
jae
pop
stos
adc
push
pop
push
fmull
loopne
ds
lock
lahf
xchg
fs
mov
movsl
mov
push
ds
fcomi
push
rolb
adc
ljmp
mov
stos
dec
fistps
jnp
in
cmp
sarl
imulb
cmpb
mov
sub
or
cltd
fs
push
sub
pop
sub
in
in
scas
mov
mov
mov
popa
fildll
mov
xor
nop
mov
sbb
sahf
push
inc
vpminsw
pop
rcrb
cmp
cmp
push
inc
testb
or
repz
mov
js
mov
cmp
pop
jl
mov
loop
cmp
jbe
pop
shll
pusha
sbb
jl
adc
jg
jge
inc
xchg
cmp
mov
sbb
aad
lret
repnz
mov
subl
mov
inc
decb
rolb
in
sbb
sub
or
sub
push
push
inc
inc
adc
dec
push
out
cmp
push
out
jbe
xchg
loop
out
push
ljmp
lods
daa
cmp
ficoms
jno
insb
xor
jmp
cltd
addb
push
mov
xchg
nop
mov
jns
add
jns
orb
imul
push
pusha
or
mov
inc
cmp
out
and
sub
xor
in
jns
jae
push
pop
jb
or
mov
pusha
jg
shlb
sbb
jge
movsl
mov
mov
pop
or
adc
repz
jl
fimull
popw
cmp
mov
jp
mov
insl
inc
cltd
mov
push
lock
xlat
jmp
xchg
nop
cmp
xor
pusha
mov
test
cld
lahf
mov
sub
ljmp
sub
popf
rcl
mov
add
arpl
mov
add
or
mov
cli
fstpt
icebp
cwtl
daa
nop
push
cmp
mov
out
jmp
cs
mov
xchg
fnstenv
clc
adc
jmp
fcomps
les
cmp
jo
cmp
data16
mov
jl
push
cs
jae
shll
ja
mov
sahf
mov
inc
lret
ret
mov
sub
jbe
push
stos
movsl
pop
ljmp
aaa
aaa
sub
push
loope
push
push
lods
pusha
hlt
mov
jl
sbb
test
jmp
adc
mov
enter
sbb
cs
inc
pop
cmp
mov
cltd
dec
shl
pop
cmp
xlat
xchg
mov
cmpsb
sbb
mov
roll
push
in
add
out
into
gs
insl
daa
adc
repnz
repz
add
or
ds
aam
hlt
push
inc
cmc
pop
xchg
add
xchg
nop
test
adc
cmp
mov
mov
xchg
mov
mov
mov
jnp
xchg
xchg
movsl
cmpsb
aam
or
das
pop
add
push
lret
leave
aad
inc
scas
push
std
adc
xchg
adc
loop
cs
imul
in
and
cmpsb
sbb
loop
jge
sarl
and
js
popl
xlat
les
xor
loope
insl
insb
dec
cmc
ret
bound
mov
hlt
xchg
ljmp
roll
je
mov
or
dec
add
sub
pushf
enter
sti
ss
arpl
test
test
cwtl
stos
icebp
mov
fs
mov
push
push
dec
jmp
dec
out
adc
cmp
fnstenv
lcall
sub
xlat
mov
inc
cmp
movb
imul
and
mov
jns
sbb
je
jae
into
mov
loop
movsl
lea
fnstenv
mov
mov
data16
mov
test
fisubs
lock
stos
lods
out
ja
lret
push
jb
mov
popf
sbbb
test
push
sbb
or
adc
push
lds
stos
xchg
and
loope
hlt
es
mov
and
lods
and
sbb
outsb
push
add
pop
cs
sarb
sub
movsl
ss
pop
adc
pusha
push
push
sbb
idiv
loope
dec
arpl
cmp
sbb
mov
push
insb
sub
sbb
adc
jno
push
mov
sbb
mov
dec
fstl
xchg
xchg
pop
arpl
inc
test
add
adcl
int3
xor
jle
sbb
mov
aam
or
mov
shlb
cmp
push
inc
and
mov
jbe
sbb
mov
movsb
adc
rol
or
push
push
inc
leave
and
call
fidivrl
ds
push
sub
or
mov
mull
lcall
mov
out
cmp
add
pop
sarl
mov
cmp
imul
or
or
orb
insb
in
push
outsl
repz
cmp
iret
out
retw
adcb
gs
ljmp
ss
sti
mov
lods
xchg
sub
test
add
sub
std
movsb
je
neg
pushf
lods
inc
pop
aad
mov
hlt
sub
dec
cmp
xorb
shll
in
sbb
in
and
sub
cltd
mov
adc
inc
mov
xchg
test
or
in
add
add
mov
or
movq
int
ds
imul
aam
clc
stc
popf
test
fsub
cwtl
mov
sahf
shll
test
pusha
pusha
sub
mov
adc
les
and
inc
repnz
dec
fdivp
xor
test
ja
out
cmp
ja
aas
inc
push
dec
add
adc
jp
lock
test
push
mov
xchg
cmp
xchg
pop
dec
insb
pop
sub
mov
das
clc
dec
pop
push
aam
lea
xor
sub
push
movb
jle
add
int3
les
lods
mov
ljmp
mov
jp
push
xchg
sub
flds
mov
mov
fwait
and
popf
ss
inc
sbb
jnp
inc
sbb
icebp
dec
arpl
test
jge
adc
add
aad
mov
aad
pop
je
mov
rcrl
int
jle
dec
stos
cltd
aaa
lods
in
cmp
ja
mov
into
lea
xchg
sbbb
jmp
inc
mov
leave
aad
push
push
imul
sub
aam
lods
xchg
jnp
sarb
rclb
nop
mov
fdivl
lret
inc
mov
mov
int
jnp
les
mov
sub
stc
jbe
jg
inc
sub
push
adc
pop
mov
lahf
imul
fs
mov
fsubrp
std
xor
js
roll
test
mov
push
aad
loopne
lods
int
hlt
jmp
fiaddl
push
sub
or
xlat
dec
ret
jge
imul
sbb
lahf
jne
add
repnz
push
lds
jmp
xor
push
dec
sub
decl
or
lock
rolb
xor
xchg
pop
stos
adc
cmovb
jbe
xchg
adc
mov
ret
push
mov
imul
jecxz
dec
add
in
das
scas
add
jg
mov
xor
out
je
into
shlb
push
adc
xor
clc
cmp
jg
fs
test
imul
jmp
dec
cmp
std
int3
popf
pop
stc
jo
adc
aas
rol
lret
into
out
aam
in
lahf
repnz
push
mov
lock
pushf
inc
std
or
ret
orb
in
int
aaa
sbb
inc
sbb
xor
mov
ljmp
jmp
sub
push
ss
cwtl
sub
in
in
pop
adc
dec
movsl
mov
pop
mov
shlb
clc
mov
pusha
cs
negl
jns
mov
sub
push
in
inc
mov
iret
movsb
inc
mov
adc
call
adc
out
jnp
mov
inc
out
xchg
mov
sbb
test
add
js
pusha
and
dec
inc
mov
leave
jbe
or
or
dec
mov
push
xchg
or
subl
jp
inc
sbb
jb
mov
call
fists
cmpb
dec
inc
jbe
cmp
xor
aam
daa
pop
pusha
jecxz
int
inc
insl
adc
clc
sub
dec
sbb
cmp
jge
push
push
or
call
negb
scas
mov
jge
cmpsl
addb
cmpsl
push
xor
and
call
sub
ja
test
out
inc
add
adc
popa
jecxz
rorb
leave
cmp
mov
mov
insb
mov
addr16
xchg
xchg
push
and
pop
push
pushf
test
mov
fcmovnbe
imull
lret
lock
xlat
sbb
cmp
xor
xor
dec
xor
cmp
pop
inc
test
mov
mov
divl
cmp
inc
popw
xorb
xchg
out
cmp
xor
popa
nop
and
cmpsb
push
mov
scas
scas
imul
sub
inc
xlat
push
dec
sub
jg
insb
mov
pop
sub
xor
jno
sub
lcall
xchg
dec
and
imul
ljmp
cwtl
add
dec
pop
xor
sbb
pop
sbbl
nop
rcrb
jge
push
outsl
and
and
popa
pop
sub
xchg
xchg
lcall
je
je
popa
sub
add
push
ljmp
and
xor
test
es
mov
jge
shll
xchg
std
pop
pop
cmpsb
gs
fcmovnbe
adc
pop
cmp
push
in
add
cli
and
jbe
inc
fwait
sbb
xchg
mov
outsb
jmp
rcr
cwtl
fildll
out
stc
clc
rcrl
shlb
sbb
jns
clc
mov
mov
pusha
mov
mov
cmp
jnp
testl
jae
fbld
shll
je
jl
sbb
or
adc
jp
lcall
jle
jge
adcb
cmp
mov
mov
in
cmp
cs
outsb
push
cmp
imul
addr16
xchg
fs
xchg
xor
inc
scas
jg
int3
mov
mov
test
push
nop
cli
sbb
bnd
dec
fdivrl
mov
push
mov
jle
xchg
mov
push
in
mov
jns
lret
loope
dec
test
jmp
xor
push
mov
dec
cmp
cmp
dec
mov
sbb
cmpsl
test
lcall
xorl
push
stos
sbb
mov
rcr
mov
jbe
pop
cwtl
icebp
pop
cltd
repz
or
jl
xlat
mov
sbb
cmp
push
jg
cli
cmp
aas
addl
push
push
cmp
loope
dec
jnp
sbb
inc
lahf
in
cli
ss
or
sub
pop
lods
mov
scas
cmp
aaa
mov
add
stos
sub
in
dec
push
mov
push
int
iret
mov
rol
fdiv
mov
adc
nop
insl
sub
inc
cwtl
or
dec
das
pop
popf
add
dec
push
orb
jle
push
xchg
fdivrl
adc
or
xchg
out
sub
and
sbb
imul
repnz
imul
xchg
aas
scas
jae
pushf
insb
jae
sub
sub
jmp
repz
pop
cmp
loopne
pop
push
xchg
sub
jno
insl
ret
xor
mov
dec
mov
aad
test
imul
cmpsl
pop
out
lods
xor
ja
mov
adc
xchg
adc
int3
lea
mov
sub
icebp
pushf
ds
out
in
test
lret
outsl
pop
cld
push
iret
lret
mov
or
add
test
js
cmp
adc
in
xchg
sub
jge
dec
movsl
or
sbb
mov
insb
sbb
insb
aad
cmp
ds
and
es
and
add
jno
mov
addr16
cmp
sahf
pop
shlb
enter
sub
inc
mov
jecxz
or
stos
ss
inc
out
shl
aaa
adc
outsb
shrb
cltd
jg
mov
fnstenv
aam
adc
or
call
dec
sbb
pop
jnp
lock
xor
ret
pop
loope
pop
sbb
jle
rcrl
addr16
push
fcomp
pusha
fwait
insl
jno
test
xor
jnp
stos
mov
mov
nop
icebp
inc
lahf
fwait
test
mov
jne
push
inc
lods
cmp
mov
test
xchg
sbb
nop
lahf
inc
add
xlat
xor
popa
pop
inc
dec
clc
xchg
lret
push
jecxz
push
jne
shlb
pop
xchg
sbb
dec
pop
or
imul
insl
mov
mov
cwtl
xchg
pushf
nop
outsb
add
aam
xor
iret
aam
adc
pop
add
fcomi
mov
inc
xchg
add
pop
or
dec
emms
in
lea
aam
mov
pop
adcb
jmp
xchg
scas
in
or
mov
int
scas
icebp
cmp
pushf
stos
mov
sbb
aad
mov
pop
bound
add
imul
add
lds
addr16
pop
push
jg
cwtl
xor
fucomp
push
inc
mov
lret
pop
imul
cmp
dec
jo
repnz
fcoml
out
sahf
mov
daa
je
mov
push
fistpl
neg
xchg
adc
mov
fs
pop
or
mov
test
adc
mov
arpl
cwtl
sub
inc
cmp
loopne
or
inc
test
repnz
or
inc
sbb
aam
xor
ret
mov
mov
mov
cltd
imul
loope
clc
mov
test
adc
out
jb
lods
popa
sti
and
and
int3
mov
pop
outsb
scas
notl
jge
fistpl
ret
dec
lret
or
sbb
imul
aad
test
adc
jne
sbb
xchg
shll
stc
xchg
pop
lahf
ljmp
das
das
fists
or
mov
xor
cmpsl
jge
mov
mov
xor
xchg
push
mov
lahf
jge
xchg
jne
sub
sahf
fabs
push
cmpsl
into
call
mov
xor
jae
jne
mov
or
mov
cltd
pop
adc
aad
mov
jg
aad
jecxz
fptan
lds
xor
outsl
lahf
mov
mov
arpl
jo
mov
lods
pop
inc
mov
xchg
mov
mov
stos
lds
fisubrs
cltd
repnz
movl
or
adc
mov
jge
xor
sbb
or
loopne
add
sub
adc
ret
inc
dec
xor
loopne
aaa
test
neg
cmp
out
jle
or
lret
push
les
mull
mov
bound
cmp
xor
std
lea
pushf
mov
popa
push
xor
xor
ds
lea
sub
lret
xor
loope
in
aam
add
movsl
xchg
bound
xchg
popf
pop
sbb
push
mov
test
lock
push
cs
inc
movsb
adc
add
mov
mov
cmpsl
gs
js
iret
sub
xchg
xrelease
je
push
push
pusha
or
or
in
mov
or
insb
mov
stos
push
cs
mov
into
ljmp
jnp
sarl
inc
sub
jg
js
lret
dec
push
adc
dec
in
push
cmp
cld
dec
or
mov
in
cld
mov
repz
mull
sbb
add
mov
popa
push
sar
sub
and
shrb
xchg
daa
pusha
in
addr16
lods
decb
loopne
in
or
pop
rcrb
xchg
cmp
xor
xchg
inc
sahf
cmp
jmp
xchg
scas
aad
sub
stc
xor
test
inc
cli
xchg
inc
lret
aad
insl
push
pop
ret
pop
aad
fisttpll
pop
loop
shl
test
test
cwtl
xlat
ret
insl
xor
push
push
inc
ljmp
push
inc
mov
daa
sar
ljmp
in
cmpb
imul
inc
mov
repnz
arpl
adc
lock
lods
and
push
xor
sbb
inc
fstpl
outsl
cmc
cmp
xchg
push
cltd
mov
popf
cmp
scas
xchg
push
sbb
add
std
in
stos
shl
dec
shlb
jp
mov
cmp
or
mov
js
popa
add
popf
sbb
sub
mov
xor
pop
xchg
hlt
filds
adc
xchg
add
ljmp
setns
aad
je
negl
pop
adc
mov
cwtl
mov
fisubrl
and
cmp
jns
cld
out
ljmp
jmp
addr16
jne
or
cmpsb
into
jae
and
add
popf
dec
testb
repnz
jmp
dec
inc
lds
sarl
popa
mov
mov
stc
int3
loop
je
cmp
mov
adc
and
fadds
sahf
push
inc
and
test
and
inc
add
inc
mov
sahf
dec
cwtd
movsl
insl
in
mov
or
mov
int
out
mov
fldl
xchg
clc
push
js
pop
push
int
gs
loopne
jnp
pop
cltd
push
lods
add
and
pop
leave
shlb
lcall
into
popa
push
mov
ss
or
outsb
into
or
lret
adc
cld
shlb
sub
xchg
rcl
gs
repz
push
jecxz
nop
cs
shl
and
or
adc
call
push
das
imul
stc
mov
cwtl
and
jbe
pop
adc
cmpsl
add
rorl
pusha
dec
imul
cmp
sbb
addr16
pop
mov
jg
push
jp
mov
add
add
mov
fwait
sub
xchg
dec
xor
pop
add
inc
xor
arpl
cmp
hlt
xchg
daa
fwait
push
cld
inc
in
cmp
xchg
lret
idiv
pop
in
mov
sti
pop
das
stos
push
roll
mov
add
jne
mov
scas
iret
xchg
mov
cli
cmp
sub
imull
sbb
push
mov
xchg
jl
and
dec
push
inc
nop
push
pop
int3
movsl
jb
xchg
fstps
mov
add
js
cmp
mov
mov
movsb
repnz
rolb
push
inc
cltd
loope
cmp
daa
andb
fnstsw
inc
and
jno
mov
sti
movsl
adc
movsl
xchg
std
int3
shll
insl
idiv
inc
mov
dec
pushf
push
sub
jns
sbb
out
push
or
dec
pop
cmp
xor
sbb
xlat
addb
or
add
jae
ret
cmpsb
adc
dec
test
xor
scas
mov
add
and
xchg
es
repz
push
outsl
mov
lods
ja
and
inc
push
add
jne
mov
xchg
cmp
jnp
sub
fsubrl
mov
sbb
inc
cmp
push
adc
out
fwait
mov
mov
rcrb
imul
inc
jp
hlt
clc
shlb
jecxz
stos
push
jns
test
and
cwtl
popl
mov
test
jb
arpl
push
sbb
sbbl
xchg
cs
mov
adc
adc
mov
lods
sub
sub
int
sub
out
lret
rcll
xchg
icebp
inc
jle
xor
jo
movsl
mov
insb
int3
cmp
not
pop
and
push
popa
lcall
sub
or
add
mov
add
leave
int3
mov
pop
addr16
dec
xchg
sub
cmpb
mov
enter
mov
fadd
dec
pop
popf
cli
filds
enter
lods
fs
mov
lds
push
dec
ret
das
into
movsb
sub
mov
repz
lea
xor
cmp
je
call
call
iret
js
xchg
loop
mov
iret
xchg
mov
xchg
lock
stos
rcrl
hlt
lcall
fcompl
or
test
test
mov
repnz
jmp
xchg
xchg
roll
lock
or
xlat
ret
mov
xchg
int
xor
jle
repz
mov
mov
xchg
nop
mov
sub
cltd
add
cmp
jae
jne
leave
and
stos
sub
push
and
adc
add
xchg
or
cmpsl
mov
mov
cmp
ds
je
mov
add
xchg
inc
inc
xchg
xor
outsb
jle
sbb
mov
sbb
mov
jmp
mov
popf
and
xchg
mov
cmc
cwtl
mov
loop
mov
push
scas
stos
rorb
mov
xorl
test
dec
and
mov
mov
mov
cld
out
test
std
dec
outsb
jnp
jecxz
test
movl
xor
or
fsin
fs
dec
in
stos
fwait
int3
adc
in
jmp
dec
mov
sub
je
popf
inc
push
pop
aad
mov
outsb
fwait
mov
loope
push
sbb
push
repnz
xchg
int3
jecxz
nop
push
mov
repnz
cmpsb
ds
rorl
mov
cmpl
xor
mov
xor
adc
sub
cs
mov
repz
push
les
push
aam
add
fidivs
filds
leave
cmp
insl
push
dec
sub
or
adc
adc
negl
loopne
lret
jecxz
xchg
ficoml
rcll
push
dec
ljmp
inc
pop
pop
jecxz
xor
xchg
push
cli
pop
bound
dec
cmp
mov
cli
movsb
je
jo
xor
xchg
mov
inc
rclb
sub
sbb
xlat
cmp
and
lods
rcrb
mov
dec
xor
mov
sbb
and
jmp
sbb
outsb
stos
cmp
lret
ret
cmp
mov
push
mov
sahf
jne
cli
xor
imul
sbb
ficompl
pop
popa
imul
daa
pushf
in
cmp
lods
jl
lcall
fsub
mov
push
movsl
cltd
push
shr
es
repz
mov
and
add
jbe
shlb
arpl
sub
cld
fiaddl
pop
lea
mov
fstl
mov
pop
imul
movsl
mov
push
testb
add
xor
dec
in
dec
push
iret
mov
adc
pop
and
xchg
into
outsb
fdivrs
pop
adc
loopne
movsl
pop
ja
pop
lods
inc
push
push
sub
insb
fdivr
lret
push
mov
cmp
adc
idivl
push
mov
subl
nop
mov
test
pop
int
mov
mov
mov
jae
icebp
and
loop
mov
mov
andb
dec
orl
mov
xor
cmpsb
or
jno
and
dec
pop
test
hlt
ljmp
adcl
cmp
aaa
adc
jno
sbb
push
dec
dec
push
xchg
cmc
cmc
pushf
mov
mov
mov
jle
adc
inc
jp
aad
pop
ja
scas
ret
and
cmpsl
lret
aas
cmpsl
aas
ds
dec
scas
lock
add
f2xm1
popf
push
sti
sbbb
mov
sbb
roll
mov
jp
adc
mov
lods
out
jnp
sub
dec
fcompl
xor
mov
sbb
sub
in
into
dec
mov
mov
or
cs
loopne
sahf
iret
sub
xor
arpl
ret
push
lods
es
mov
arpl
xchg
sahf
sbb
into
or
xor
cmp
sbb
fsubrl
cwtl
push
pop
fidivrs
xchg
xchg
vcmpps
data16
cli
and
aad
ror
ljmp
leave
xor
push
lahf
fwait
fwait
push
in
js
das
push
ret
aaa
or
jmp
adc
jg
adc
jnp
fstps
sub
adc
pop
xchg
shlb
jb
inc
idivb
ret
push
pop
sti
mov
jecxz
fldl
cli
inc
mov
sbbb
stos
stos
cmp
adc
sub
imul
push
inc
or
sbb
push
mov
jle
std
test
hlt
sahf
jle
xchg
pushf
sub
sub
add
dec
ret
jl
xlat
push
pop
addl
jp
repz
mov
jne
xchg
or
push
push
stos
test
or
lods
mov
mov
js
adc
fwait
dec
adc
cs
inc
jle
mov
rcrl
cmpsl
or
rcrl
divb
pop
push
pop
and
iret
xor
mov
mov
je
lock
test
xor
cwtl
jae
ja
repnz
adc
fistpll
push
stos
imul
dec
jmp
mov
inc
pop
inc
mov
shrl
and
or
scas
fisttpll
push
cmp
mov
ljmp
mov
pop
sub
inc
into
xchg
ret
addr16
arpl
stos
inc
add
mov
sub
inc
or
mov
pop
pop
adc
sbb
push
les
js
pushf
inc
cmp
sbb
cmp
adc
lea
mov
inc
iret
xor
js
stos
pop
fsubrs
test
sbb
lret
push
shl
mov
xchg
and
in
frstor
sub
int
adc
add
xchg
xchg
adc
xchg
gs
das
jecxz
rolb
or
inc
dec
adc
fwait
sbb
mov
jge
ljmp
mov
push
inc
push
inc
loopne
js
das
adc
rcrb
iret
lock
sbb
cmp
inc
sbb
dec
xor
out
js
hlt
ret
stc
pop
add
dec
add
nop
lret
jmp
mov
sti
push
sti
inc
out
mov
addr16
pop
cwtl
push
adc
xor
sbb
lahf
in
shl
or
add
leave
icebp
push
cmp
jns
out
jge
sbbb
imull
sub
scas
pop
xchg
push
mov
push
xchg
les
xchg
fdivs
pop
inc
int3
xchg
mov
pop
jb
xchg
cmpsb
rcrl
call
push
push
push
ljmp
mov
fdivr
scas
out
mov
push
stos
inc
scas
incb
shll
shll
or
call
stos
int3
and
lret
adc
test
ja
add
or
shlb
fldenv
mov
adc
inc
mov
rcl
sbb
cld
stos
pop
jb
fnstenv
sub
or
adc
and
imul
push
loope
or
sbb
bnd
pop
sbb
stos
and
jbe
in
shll
push
mov
inc
gs
xor
mov
and
mov
test
push
popa
adc
push
push
pop
add
xchg
push
sub
jno
sub
mov
mov
stc
shl
and
push
mov
mov
jno
xchg
xor
xchg
in
popf
out
jmp
stos
pop
xchg
inc
popa
stos
data16
in
xchg
sub
cmpsl
shlb
inc
je
lcall
xchg
out
cltd
mov
and
mov
push
repz
jae
jl
es
scas
inc
push
xor
movsl
cmc
jb
xor
dec
leave
mov
es
or
out
mov
inc
dec
push
add
in
shrl
jne
stos
push
into
xchg
test
add
fisttps
jno
sbb
push
xor
mov
adc
lret
sub
dec
and
dec
lret
cmc
js
push
popf
shll
push
adc
adc
imul
xchg
xchg
push
cmpsl
xor
add
ss
and
fwait
aaa
sbb
fnop
call
push
xor
push
ret
jb
pop
in
dec
aas
jae
mov
movsb
sbb
int
and
shrl
sarb
and
fnstsw
cmp
lcall
repz
or
clc
lea
cmpsb
popa
loop
adc
pop
sub
ds
test
xlat
add
or
dec
xlat
xchg
les
xchg
xor
cli
xchg
jg
mov
iret
cmove
sub
push
cmp
cmc
in
add
mov
imul
js
xlat
cwtl
ljmp
out
mov
rcr
scas
jae
mov
xchg
loopne
jp
xor
pusha
xchg
bound
push
mov
mov
fists
lret
xorl
inc
movsl
lret
sbb
dec
in
cmpsl
sbb
out
or
push
orb
aas
dec
sub
dec
int3
xchg
jle
nop
inc
mov
dec
dec
push
adc
pop
jae
or
push
xchg
or
fdivrp
clc
lods
cmp
fs
dec
jae
addr16
icebp
mov
in
dec
lods
insb
or
ret
jecxz
je
pop
add
pop
dec
and
stc
mov
mov
lret
xchg
cmp
or
icebp
push
mov
leave
xchg
xchg
idiv
push
aad
and
sbb
push
imulb
rolb
mov
lretw
jp
xchg
adc
cmp
stc
push
je
lcall
mov
mov
pop
jp
cmp
mov
call
movsl
and
stos
dec
mov
int3
cli
mov
jns
pop
mov
pop
out
sub
mov
push
sarb
xchg
cmp
loopne
xor
cmp
adc
adc
push
cmp
in
jp
mov
std
bound
dec
push
push
outsl
outsb
icebp
sub
ljmp
dec
mov
into
lods
adc
sar
add
jp
out
in
iret
xchg
ss
mov
shlb
daa
push
out
insb
out
mov
push
jb
icebp
xor
test
pop
xchg
lcall
lahf
push
add
movsb
jnp
jl
jecxz
cmp
and
nop
test
jae
rcr
cmp
add
aas
negb
addr16
pop
xchg
cmp
pop
push
dec
xor
dec
scas
movsb
xchg
push
push
loopne
dec
xor
bound
adc
dec
aas
ret
int3
push
std
sbb
xchg
lods
or
mov
push
adc
mov
les
pop
adc
pusha
shrb
or
int
cmp
outsl
mov
dec
push
popa
daa
adc
mov
dec
out
push
pop
inc
jp
or
push
in
inc
fisttps
pop
sub
cmp
dec
mov
mov
jno
es
jmp
dec
insl
mov
fadd
lods
adc
mov
insb
pop
dec
jo
jae
or
enter
sbb
dec
clc
sub
sbb
imul
out
xor
lea
inc
and
xchg
jmp
test
sbb
lock
mov
roll
pop
out
insb
dec
out
sbb
push
iret
lods
pop
mov
push
subl
cmp
mov
or
adc
add
test
dec
mov
mov
mov
out
push
adc
test
add
dec
jno
add
mov
into
cltd
int3
movsb
adc
sbb
mov
mov
push
mov
insb
flds
ds
stos
fnstcw
lods
leave
xlat
insl
xor
dec
dec
adc
pop
mov
adc
imul
lcall
pop
mov
ds
inc
cmp
ljmp
fs
sub
test
xchg
cmp
lret
jg
mov
stos
jecxz
inc
idivb
dec
ss
mov
mov
mov
test
or
test
lods
pop
int3
pop
jb
dec
and
xchg
adc
xchg
imul
pop
cmc
or
adc
repnz
fisubrs
pop
or
mov
sbb
sub
fwait
pop
cltd
push
mov
mov
lock
and
lcall
clc
cmp
scas
mov
dec
mov
stos
jne
xchg
jmp
jne
xchg
pop
or
inc
into
jecxz
test
xor
sbb
xor
jbe
jl
sbb
pop
mov
das
jns
pushf
dec
jmp
ljmp
enter
adc
mov
sbb
stos
out
fwait
icebp
fwait
jmp
mov
out
mov
jae
rclb
pop
cs
movsl
out
hlt
sbb
or
jl
stc
dec
cmp
xor
sahf
lret
cmp
sbb
imulb
xchg
pop
sub
loopne
je
dec
sbb
cwtl
mov
cmp
push
xlat
lret
push
mov
gs
fisttpll
mov
and
add
mov
jnp
lret
out
adc
sub
js
test
fdivp
mov
out
adc
adc
mov
or
mov
adc
pop
int3
sbb
xchg
mov
adc
xor
in
add
cmp
add
lds
fldenv
call
jnp
test
jne
xchg
push
pushf
mov
inc
movb
rcrb
mov
std
sbb
adc
repnz
mov
popf
jg
iret
out
adc
ficompl
sub
and
imul
movsb
rcrb
and
jae
inc
cltd
ds
fcomps
pusha
dec
in
ja
imul
push
or
mov
adc
adcl
jnp
mov
xlat
pop
sbb
cs
jb
xchg
xor
aas
pop
add
jne
xor
imul
and
sbb
leave
jns
push
imul
jmp
xor
pop
loopne
mov
std
push
push
scas
jmp
das
xlat
pop
mov
jecxz
insl
data16
pushf
fldenv
les
sbb
push
cmp
and
or
ret
out
cltd
movsb
dec
aad
mov
test
sbb
xor
aam
cmp
or
test
sbb
int3
adcb
hlt
repnz
mov
les
dec
add
inc
mov
or
in
cld
fists
dec
jmp
sbb
loopne
add
sub
sub
bound
scas
dec
mov
movsb
shll
imull
roll
aad
sub
dec
add
call
sti
mov
jl
sbb
cmc
jbe
mov
vmovss
dec
lods
adc
inc
shrb
inc
ja
sub
mov
cmp
mov
push
cmp
and
testl
out
lret
ljmp
jae
adc
and
out
jmp
cmpsl
dec
inc
pop
arpl
pop
or
dec
ret
add
rcr
outsl
push
pop
cmc
sbb
insb
into
push
int
jle
dec
xor
inc
cmp
cld
push
das
and
stc
fwait
sbb
das
in
inc
adc
mov
call
cmc
fs
les
or
push
or
pusha
xchg
out
aam
mov
jecxz
mov
aad
insw
mov
mov
fildll
shrb
ds
push
outsl
add
mov
daa
stc
stc
push
mov
int3
mov
mov
outsl
in
mov
xchg
inc
cli
cmp
add
mov
push
push
pop
xor
insb
mov
jns
roll
insl
jns
mov
outsb
insb
jle
mov
mov
or
scas
add
mov
cmpsb
je
inc
push
dec
inc
mov
pusha
ret
je
mov
adc
xor
adc
sbb
and
xchg
nop
sub
push
shrl
js
mov
std
xchg
jb
fildll
lods
mov
or
cmp
cli
jbe
ss
sub
cmp
push
push
mov
xor
dec
dec
add
sub
cltd
pop
loope
ss
jne
cmp
dec
cld
xchg
mov
jo
outsl
pop
mov
test
ja
ja
iret
inc
fwait
dec
add
es
enter
aas
xchg
mov
mov
mov
divl
add
movsl
sub
mov
fs
inc
clc
sbb
fnstcw
jp
and
jl
hlt
scas
pop
push
xor
mov
or
xor
mov
sub
stos
ss
imull
push
push
jmp
or
mov
push
sbb
mov
lds
movsb
iret
sub
and
mov
xchg
jne
or
shlb
mov
out
mov
sbb
jb
mov
mov
fists
daa
mov
dec
outsl
add
daa
jg
adc
xchg
add
sbb
mov
ss
ret
cmp
cmpsb
jns
aam
cld
fs
and
inc
testb
les
int
jg
mov
enter
xor
xor
mov
or
mov
mov
outsb
pop
movsl
test
test
lods
pop
repnz
filds
xor
lret
cmp
mulb
stos
stc
pop
repz
or
cmpsl
jnp
mov
jmp
gs
gs
pop
add
lcall
int3
cmpsb
mov
idivl
mov
sbb
and
sbb
out
mov
mov
or
lret
out
sub
xchg
pop
loope
fimull
les
in
sbb
enter
in
cmc
lret
scas
jno
dec
lea
jae
mov
dec
pop
cmpsl
into
add
xlat
adcb
add
cmp
shrl
test
addb
push
adc
push
mov
sub
dec
test
dec
cmc
push
xor
repz
push
shl
sub
inc
hlt
imull
shr
mov
es
std
subb
jnp
faddl
adc
push
or
pop
pop
insl
push
flds
mov
jae
push
call
mov
stos
inc
data16
in
test
ds
test
mov
jmp
daa
pop
push
movl
pop
push
or
in
or
inc
aam
mov
test
cmp
fisttpl
jno,pt
inc
push
out
cmp
push
cwtl
inc
mov
cs
or
mov
loop
jmp
fadd
lods
adc
imul
sub
xchg
mov
sarl
ljmp
andl
test
les
data16
rcrb
jae
xor
test
mov
xchg
adc
jns
mov
mov
mov
or
cmp
repnz
jl
push
mulb
nop
clc
or
shrb
sub
lret
inc
mov
push
imul
in
daa
inc
xchg
rol
xorl
fs
sub
sub
aam
dec
movsl
mov
adc
mov
scas
mov
push
mov
insb
add
imulb
shlb
lret
xor
pop
xchg
xchg
sarb
sbb
xor
cmp
into
jle
mov
mov
pop
push
shrl
fimuls
or
pusha
mov
rcr
jo
pusha
sub
out
pop
shl
xorb
sub
push
ficomps
sbbb
mov
push
mov
jle
xor
dec
into
dec
jno
mov
stos
aas
mul
mov
cli
sub
testl
pop
pop
js
adc
scas
scas
negl
jno
and
mov
xchg
xchg
inc
into
cmp
xor
aas
xchg
dec
fdivrp
jno
sub
adc
xor
test
andl
or
cmc
insl
or
cmpsb
nop
dec
sub
push
test
sub
rcr
fistl
jne
jecxz
push
cmpsb
mov
sub
ss
adc
aad
mov
shrb
fwait
testb
cmc
insb
pop
sbb
adc
lea
push
and
mov
push
xchg
out
inc
popa
les
push
dec
cmp
adc
out
dec
stos
jb
test
xchg
and
xchg
int3
mov
rep
rcll
hlt
movsb
test
arpl
pop
xchg
sbb
in
or
iret
pop
pop
insl
mov
int
iret
out
dec
insb
out
das
data16
pop
xchg
cmp
pop
in
cli
jecxz
xor
adc
inc
jge
or
rcrb
mov
rcl
shll
and
lock
test
out
push
push
jo
iret
dec
xor
mov
out
sbb
insb
pop
ret
cltd
test
repz
gs
and
and
push
push
fisttpl
fidivrl
inc
test
das
xchg
les
movb
xchg
ss
mov
fs
into
add
into
fimull
or
mov
outsl
repnz
inc
jnp
stos
subb
mov
imul
cld
test
jns
push
mov
push
mov
sbb
add
aas
mov
pop
mov
jne
sbb
int
jl
adc
and
es
shl
cli
jno
inc
stos
faddl
outsb
mov
jne,pn
nop
leave
repz
mov
pop
sahf
mov
gs
jge
insb
sahf
mov
sub
adc
sbb
push
lret
rcrb
pop
fs
pusha
lcall
fldt
movsl
inc
iret
add
mov
sbb
jb
push
add
cmp
sub
push
push
and
xor
mov
fnsave
out
xchg
repz
mov
jecxz
je
int
sub
adc
xor
and
dec
lea
outsb
in
in
dec
cwtl
std
pop
jns
dec
xor
mov
or
xchg
push
adc
or
addr16
movsb
data16
push
xor
dec
imul
adc
inc
adc
inc
mov
push
xor
les
out
shlb
lahf
jb
out
jp
sti
push
adc
pop
pop
out
xchg
shlb
icebp
push
cmp
pushf
js
in
add
int
xchg
cmp
bound
pop
je
xlat
inc
inc
js
hlt
mov
mov
pop
fists
mov
fwait
cltd
dec
jmp
xorb
stos
aaa
movsb
shrb
je
shr
xchg
inc
scas
movsb
sbb
mov
pusha
pop
xor
mov
xor
in
ja
and
jne
cltd
test
test
inc
xchg
imul
cmp
jns
lea
mov
or
sbb
fs
pusha
stc
insb
dec
pop
stos
aas
out
xchg
imul
or
mov
mov
jns
lret
jmp
xchg
sbb
cltd
sbb
mov
ljmp
lea
lods
pop
sbbl
pop
push
je
ljmp
shll
mov
hlt
clc
mov
cmpsb
xchg
pop
sub
sti
mov
divl
xor
mov
scas
mov
enter
xchg
daa
jge
das
inc
sub
sbb
xchg
pop
mov
cli
inc
cmpl
push
jnp
mov
sub
inc
mov
xchg
bound
ds
test
jle
dec
rolb
mov
jle
repnz
mov
xchg
stos
aad
lea
adc
outsb
pop
jl
nop
push
inc
nop
mov
int3
repnz
or
jae
push
dec
iretw
fs
fiaddl
push
aas
mov
sub
mov
mov
les
xchg
shlb
jecxz
in
ss
in
cmp
not
sbb
sahf
sarb
mov
mov
pop
in
jbe
mov
test
loopne
pop
push
imulb
iret
push
or
push
cmc
add
scas
rcrl
pop
or
cmp
sbb
sub
push
push
adc
or
dec
ljmp
fmuls
in
pop
test
lret
ss
jno
xor
mov
sahf
lea
frstor
loopne
inc
mov
std
push
lret
je
cmc
mov
inc
aaa
popf
mov
jecxz
lahf
aaa
insl
fldcw
mov
les
movsl
mov
rolb
repnz
mov
pop
andb
dec
push
pop
loop
lods
jmp
mov
push
movl
cmc
mov
jle
cmp
sub
enter
xchg
xor
push
xor
sbb
mov
mov
test
mov
and
mov
scas
cmc
insb
fcmovbe
int
mov
das
mov
adc
add
pop
push
jecxz
gs
jmp
xorl
imul
enter
inc
fwait
xchg
test
push
mov
cmpsb
or
xchg
cmp
or
mov
ret
aas
pusha
or
into
jne
jo
insb
jp
inc
push
shrl
inc
push
mov
pop
lods
aaa
jmp
or
lcall
jmp
jo
push
mov
mov
pusha
sbb
cmp
jnp
mov
cmpsl
mov
dec
popa
cld
mov
cmp
sub
inc
int
je
mov
jo
loopne
and
xchg
repnz
sbb
dec
lods
mov
mov
loopne
and
mov
daa
mov
cld
push
dec
jl
sbb
outsb
or
mov
popa
fisubs
not
lret
pop
movsb
mov
bound
add
roll
sub
lahf
push
enter
scas
push
push
mov
cmp
adc
test
xchg
mov
xchg
std
subl
das
lret
mov
mov
dec
filds
pop
decb
sub
jle
gs
cld
adc
and
lock
daa
mov
jle
xchg
je
aas
lret
ret
insl
aad
in
mov
shl
orl
add
xchg
addr16
idiv
and
cmp
add
adc
lds
pop
jge
push
shll
mov
sti
test
imul
dec
inc
inc
test
in
cmpsb
inc
jecxz
dec
add
test
mov
inc
imul
insb
or
pop
mov
xchg
or
or
or
sub
push
movsb
loop
push
pop
inc
lret
outsl
in
mov
cmp
jecxz
add
leave
idivb
sub
lods
pop
cld
fwait
mov
xor
xlat
loop
inc
pop
xor
push
inc
cmpsb
jle
ret
or
sti
ret
out
clc
xchg
dec
mov
mov
push
gs
cmp
or
jo
pop
mov
mov
in
mov
mov
push
cmpsl
push
out
cmc
pop
ret
mov
insl
push
mov
shll
pop
push
ret
mov
das
insl
ja
mov
mov
jp
push
pop
nop
out
enter
xchg
mov
pop
mov
mov
push
mov
lods
xor
es
lods
mov
mov
aaa
dec
insb
sti
and
cmp
xor
aad
bound
scas
mov
cltd
push
in
inc
or
into
hlt
ret
cli
xor
sub
cwtl
adc
icebp
subb
popf
cmp
jg
and
in
sbb
cwtl
mulb
add
aad
mov
adc
jecxz
movsb
jnp
push
inc
in
popf
push
int
dec
dec
pop
jne
fdivs
adc
mov
je
sub
cmp
int3
xor
cmc
sbb
add
int
out
lods
stos
xor
lock
jg
in
push
mov
mov
or
sbb
mov
adc
pop
jl
cmp
xor
xor
pop
daa
xchg
or
mov
ja
mov
movb
lret
ficoms
inc
sbb
int3
repnz
imul
js
mov
sahf
ja
sbb
sbb
jnp
ficoms
xchg
stos
in
notl
scas
fucomi
pop
cmp
test
push
push
stos
jecxz
out
add
jbe
dec
rolb
push
arpl
inc
and
fs
push
mov
mov
cmp
xchg
or
imul
cmp
mov
mov
push
shr
rorb
out
pop
dec
ror
mov
call
xchg
test
add
sbb
jl
mov
stos
je
or
test
inc
inc
cmpsl
pop
fcmovbe
xor
mov
add
ss
mov
pop
aad
xchg
scas
xchg
lods
fs
inc
mov
fwait
adc
stc
pop
cmp
mov
icebp
push
mov
gs
mov
repnz
fmuls
loope
cmp
sub
shrb
insl
sbb
mov
xor
push
xchg
pushf
lock
js
push
or
cmp
loopnew
mov
out
and
push
sbb
mov
shl
xor
pusha
ss
xor
xchg
mov
inc
popw
inc
insl
aad
imul
lods
xor
xor
fnstsw
cltd
sub
mov
std
jg
std
and
daa
test
push
adc
shrl
mov
outsb
rcr
dec
shr
scas
xchg
rolb
xchg
fucomi
mov
and
idivb
js
jmp
sub
std
mov
or
adc
cmp
or
jmp
or
sbb
std
push
sbb
pusha
aam
mov
sti
xchg
pop
pop
popf
mov
adc
repnz
adc
pop
inc
clc
add
jecxz
xchg
sub
loope
ds
sbbl
and
and
mov
sbb
test
add
bound
icebp
mov
cs
mov
push
pop
xlat
xchg
inc
stos
out
jmp
mov
andl
push
lea
jbe
movsb
lret
adc
dec
xchg
sbb
pop
dec
mov
fldenv
push
jno
mov
pop
mov
clc
cmp
into
lock
imul
test
addr16
inc
or
lcall
pop
pop
jb
fnstcw
repnz
cmp
sbb
fnstcw
mov
movsb
jae
or
data16
jnp
dec
lods
iret
push
xchg
and
jbe
mov
adc
push
push
ret
test
or
mov
adc
xchg
sbb
mov
pop
dec
ret
xchg
cmp
dec
inc
dec
les
ss
push
lds
lea
mov
clc
mov
sub
int3
loopne
mov
mov
xor
adc
or
mov
pusha
daa
adc
es
shrl
cmpsl
sbb
scas
jmp
das
xlat
adc
dec
hlt
dec
xchg
in
hlt
xor
insl
outsl
ljmp
sahf
shlb
mov
dec
in
sarb
ss
gs
cs
pop
js
xor
mov
inc
sti
ret
ret
rcll
fnstenv
shrl
inc
inc
out
mov
shll
dec
test
data16
int3
or
or
setl
push
imul
add
or
sbb
mov
mov
inc
xchg
in
insb
jge
popa
add
in
and
add
and
mov
int3
push
lds
or
push
inc
fsubr
cmp
mov
mov
movsb
mov
sub
xorl
inc
push
mov
jb
loopne
cmpsb
inc
fs
iret
inc
jno
mov
mov
bound
cmp
aad
js
mov
inc
bound
pop
mov
bound
sahf
xchg
add
xor
adc
icebp
stc
mov
je
pop
call
lcall
aas
sub
imulb
mov
or
jle
jo
xchg
inc
outsl
fdivl
jns
dec
js
jg
mov
or
scas
pop
repnz
sbb
dec
outsb
lret
xor
add
lret
pop
jl
xchg
in
sub
repz
int
addb
mov
mov
enter
jns
mov
dec
cmp
rcl
call
jge
xor
decb
add
lods
in
dec
cmp
dec
lds
push
add
inc
iret
fs
lret
lret
adc
insb
std
popf
xlat
xor
gs
mov
add
test
sbb
jg
pop
mov
in
push
inc
sarb
pop
in
mov
outsl
sub
push
sbb
mov
mov
push
push
lret
xchg
lods
xchg
insl
ss
adc
jle
cwtl
push
lds
add
xor
push
into
imul
fwait
sbb
ds
test
inc
and
pushf
ljmp
add
cli
leave
push
mov
testl
cltd
pop
cmp
push
mov
cwtl
cli
cmc
inc
andb
mov
fwait
test
push
mov
xchg
hlt
xchg
roll
movsl
sti
int3
cmp
lods
or
loope
cmp
inc
or
and
insl
pop
andb
std
dec
mov
inc
out
lds
shlb
xor
idivb
lret
adc
pop
push
mov
sahf
in
test
sub
sub
dec
push
inc
fldenv
lea
ds
pop
in
in
cld
lahf
inc
inc
mov
cmpsl
movb
cmpsl
shll
movsl
add
lock
dec
not
repz
inc
and
push
int
xchg
icebp
pop
sbb
cld
cmp
mov
xchg
imul
and
jle
and
cld
sbb
ret
test
xor
and
scas
mov
xlat
push
and
rorl
cmp
test
xor
jmp
fisubrs
das
xor
lcall
fs
adc
test
loope
arpl
cli
pop
js
arpl
cmp
mov
adc
mov
paddsb
inc
ss
mov
xchg
sbb
jle
icebp
cwtl
mov
dec
in
pop
fisubl
les
xchg
int
dec
movb
pop
loop
or
inc
ss
dec
and
jle
xchg
jo
mov
add
push
ss
out
xchg
sbb
mov
js
pop
clc
cmc
fdivr
jae
sub
jecxz
into
xchg
hlt
and
mov
cld
push
sub
push
ss
leave
dec
repnz
push
pop
and
ficoml
or
sbb
fsubr
clc
xlat
mov
and
xchg
imul
in
mov
sbb
sarb
add
jl
and
cs
loopne
sahf
lret
movsb
loop
les
inc
jmp
inc
mov
movsl
cmc
out
ds
cli
pop
lret
xchg
mov
sub
ja
fwait
mov
or
jmp
psllq
cmp
cmp
lock
pop
scas
jnp
shll
lods
shll
test
mov
sub
push
dec
outsb
jle
adc
in
inc
sbbb
and
cs
xchg
inc
xor
iret
pop
out
aaa
jns
sets
inc
outsb
or
das
clc
in
sub
into
xchg
and
push
xor
ds
mov
lret
ret
sub
sub
mov
mov
sbb
loop
cmp
ja
imul
cltd
fcmovnbe
xchg
lar
enter
js
cwtl
add
mov
aam
in
lods
mov
pop
aad
enter
sarb
out
fcoms
mov
mov
dec
jge
int3
adc
inc
or
ficomps
mov
js
adc
fsubrl
lock
scas
loop
out
jb
cmp
cmp
or
pusha
test
imul
or
mov
inc
ret
je
pop
test
push
rcll
outsb
push
jp
dec
pop
pusha
add
adc
insb
popf
gs
lea
imul
pop
jb
push
inc
test
dec
nop
or
mov
pusha
fadds
addr16
repz
cmp
movsl
adc
lahf
pop
ja
es
enter
divl
pop
out
xchg
fsts
lahf
lock
cmpb
push
pop
push
jae
in
pusha
push
out
push
fnstsw
shrw
push
and
std
adc
sub
dec
js
test
icebp
mov
adc
dec
lahf
inc
pop
and
or
adc
and
shrb
out
pop
sbb
pop
outsl
negl
lds
test
out
popf
mov
icebp
mov
add
mov
or
cmc
repnz
pop
push
daa
cmp
imul
xor
arpl
dec
std
movsl
inc
fadd
pusha
pop
cmpsb
adc
xchg
int3
fs
ss
and
outsl
inc
stos
sub
cmp
cwtl
or
add
pop
lock
jge
out
fcomps
mov
add
pop
push
add
addl
ljmp
ret
lock
shrl
fisttpll
mov
xchg
push
or
fwait
sbb
rorl
sti
fnstsw
fst
inc
pusha
fs
out
jge
out
inc
adc
dec
and
scas
cwtl
icebp
jecxz
add
dec
mov
mov
andl
cmp
sbb
adc
loope
pop
dec
or
loop
int3
xlat
js
cli
add
and
adc
mov
xchg
dec
jmp
movsl
in
pop
int3
jecxz
sarb
arpl
js
out
or
mov
ds
lea
aad
xor
push
inc
adc
cmp
sbb
add
dec
mov
xchg
imulb
lods
lods
xchg
std
cmp
inc
mov
adc
arpl
scas
mov
sub
sti
icebp
hlt
push
cli
push
adc
mov
pop
cld
xor
xchg
add
mov
or
pop
push
fs
push
or
push
pop
xor
mov
int
jg
pop
stos
mov
add
jl
test
push
xor
cltd
jmp
scas
imul
ljmp
xor
adcl
sbb
mov
int3
frstor
xorb
push
adc
and
clc
xchg
lods
jle
imul
sbb
sub
sub
fsubrl
mov
jo
fdiv
cmp
push
es
popf
imul
sbb
xchg
and
and
loope
ret
aam
or
stos
or
loope
push
iret
mov
inc
cmp
mov
cmpsl
loope
and
ljmp
mov
out
xchg
or
das
jmp
repz
xchg
adc
add
dec
mov
xlat
pusha
dec
pop
dec
ret
bound
sbb
push
inc
jmp
xor
mov
call
xchg
shl
adc
outsl
jp
mov
in
decb
lcall
push
mov
dec
jg
xchg
nop
xor
scas
ret
popa
jne
pop
mov
inc
rcrl
int3
lea
mov
mov
in
movsl
notl
gs
mov
iret
lahf
icebp
mov
das
lret
jnp
mov
in
imul
out
lock
jno
cld
pop
pop
sub
fadds
out
cld
cld
add
imul
pop
mov
xchg
fistl
test
mov
cmp
mov
ja
sbb
mov
test
cmp
add
add
xchg
push
pop
cli
mov
fcoml
enter
mov
adc
andl
mov
mov
bound
outsb
aam
and
sub
and
xor
mov
scas
clc
int3
sub
lcall
adc
out
jne
mov
and
lahf
lahf
enter
xor
popa
out
dec
andb
ljmp
shll
clc
mov
test
cltd
popa
and
xchg
jle
add
push
jbe
fisubrl
addr16
adcb
test
stos
fwait
jmp
in
lret
dec
rolb
mov
jecxz
mov
add
ds
push
sbb
test
jge
mov
shrl
push
jmp
xor
hlt
pop
imul
push
cs
les
in
adc
dec
sub
pushf
cmc
mov
jae
imul
arpl
or
xchg
mov
push
icebp
loop
aad
xchg
xorb
mov
cmp
int3
clc
das
cmp
mov
pop
ljmp
adc
dec
push
out
or
mov
aad
push
jle
movsb
cmp
jae
add
xchg
xor
add
cmp
inc
mov
adc
push
add
out
xchg
mov
mov
movsb
mov
and
jle
addl
dec
fstpl
mull
scas
xchg
or
outsl
inc
pop
hlt
dec
gs
xor
sub
adc
repz
ss
lcall
sub
push
mov
movb
cltd
out
and
xchg
sar
cmp
stc
cmpsl
xor
push
inc
test
adc
add
imul
lar
outsl
jmp
fmull
xchg
shlb
push
mov
cwtl
push
xor
cmp
inc
cmc
pop
fldcw
lock
je
xorb
mov
std
fs
mov
gs
loopne
insl
jl
in
mov
mov
xchg
jp
movsl
inc
mov
daa
push
lods
outsl
lret
lret
push
aas
pop
scas
clc
adc
ljmp
sub
aaa
push
add
lods
enter
insb
cmpsl
push
data16
shrb
inc
ret
xchg
popl
mov
into
and
aad
mov
cmp
gs
pop
mov
mov
icebp
movsl
cmp
aam
mov
lock
testl
cmp
jle
cmp
xchg
int3
mov
xor
sbb
pop
xchg
mov
mov
lods
cmp
inc
push
jno
mov
hlt
loope
frstor
xchg
arpl
int3
pop
mov
sub
xor
sub
loope
in
xchg
fstpt
cmpb
in
jbe
int3
iret
mov
fdivrs
inc
and
or
dec
dec
cmp
or
inc
cli
xor
es
xor
mov
inc
das
dec
sub
adc
cld
dec
scas
jle
popf
popl
and
les
sub
test
mov
cmp
shrb
dec
fisttpl
pop
xchg
push
sub
adc
fcmovnu
int
push
cld
xor
push
mov
pop
int
mov
jo
add
dec
sub
cs
adc
sbb
scas
mov
aad
aaa
xor
cld
lahf
xchg
jo
vphsubwd
adcb
inc
add
fdivrl
pop
repz
push
push
les
add
jbe
ds
pop
pushf
cmp
inc
and
push
xchg
in
aaa
in
jmp
mov
test
rcr
lods
adc
imul
shll
xchg
insb
outsb
cmpsb
xor
and
pop
addr16
std
inc
repz
xor
sahf
sub
xor
inc
lahf
cmp
pop
push
pshufw
mov
or
jmp
hlt
ret
inc
jmp
scas
xor
and
xor
cwtl
data16
aad
jnp
mov
movsl
or
jg
xor
jb
js
dec
mov
test
xor
pop
xchg
rorb
stos
jno
ficomps
sahf
mov
add
or
adc
movsl
out
ljmp
andl
or
jae
aad
addb
fnsetpm(287
je
jmp
push
sub
xchg
pop
inc
mov
mov
sub
jae
lret
leave
cmp
add
stos
or
mov
cmp
pop
fstps
lret
repz
outsb
movsb
cmp
in
add
push
in
xchg
cmp
imul
lods
imul
xlat
pop
repz
ja
aaa
sahf
inc
cmpsb
mov
ja
dec
into
pusha
in
jo
jno
aaa
sbb
jle
adc
mov
mov
imul
jmp
daa
sub
jnp
sti
es
lock
nopl
sub
ss
jge
aad
mov
xor
arpl
stos
sbb
outsb
jbe
xor
adc
pop
xchg
push
lock
adc
inc
or
je
mov
jmp
int3
cmp
fisubs
add
cmp
ror
push
jns
dec
ficompl
mov
pushf
imul
push
ds
sub
inc
mov
and
je
and
push
xor
in
das
mov
pop
nop
dec
imul
pop
sbbb
sbb
scas
sub
cmp
mov
mov
cltd
test
dec
mov
rcl
cmp
dec
in
mov
into
sti
dec
aaa
mov
repnz
pusha
mov
iret
lock
int3
decl
outsb
adc
leave
mov
dec
div
pop
in
imul
inc
out
mov
movsb
clc
and
cmpsb
int3
mov
cmpsb
loop
jg
out
mov
lock
std
or
add
sarb
scas
xor
xchg
into
popf
mov
push
gs
imul
call
lcall
jae
inc
jb
lock
mov
and
adc
inc
push
pushf
pop
xor
xor
pop
imul
and
jo
imul
mov
not
mov
dec
rcrl
inc
shl
frstor
ja
ficompl
and
mov
shrb
stos
xorb
sub
pop
scas
push
mov
fwait
inc
loopne
je
sub
pop
ds
in
ret
cmp
xor
imul
and
lods
cmp
hlt
adc
push
jnp
mov
js
xor
loop
jmp
data16
pop
movsb
lods
mov
push
cmpsb
icebp
sub
cmp
adc
jnp
loop
xor
fimull
scas
sar
lds
je
push
add
leave
fcmovnu
jo
fwait
cli
cmpsl
clc
insl
pop
push
gs
mov
outsl
jl
xor
xor
xor
and
add
bnd
out
adcl
cmc
pop
jb
mov
stc
sub
sub
ret
repnz
insl
add
ret
icebp
adc
jns
mov
jno
and
cmp
gs
sub
je
cmpb
add
pop
aam
sbb
movsl
and
into
xor
daa
inc
pop
enter
mov
or
js
sub
aad
jl
ret
jno
xorl
rcll
dec
mov
push
inc
xchg
insl
cmpsb
mov
mov
sahf
jl
das
mov
sbb
jmp
or
sahf
add
sub
aas
fsubrl
mov
jnp
adc
or
daa
jae
sarb
cmp
lock
sub
push
adc
inc
mov
dec
out
sub
or
xor
cmp
jnp
mov
jg
sub
mov
fistl
outsb
outsl
decb
mov
in
in
or
int3
gs
cmp
push
jmp
icebp
inc
ds
dec
setns
das
pushw
das
lock
fldt
shr
xor
fstpt
gs
or
leave
imul
shlb
hlt
enter
xlat
lahf
in
arpl
mov
inc
jb
push
faddl
je
imul
adc
push
in
fisubs
pop
into
mov
shl
dec
push
nop
push
sub
mov
xorl
scas
cmp
iret
add
aaa
fisubrl
cmpsb
stos
sub
xor
sub
push
add
or
aad
ret
mov
test
fsub
push
ret
mov
jl
clc
addr16
cmp
sub
mov
jns
imul
orb
pop
fs
stc
or
popa
lcall
out
addr16
insb
gs
inc
addr16
fsub
insb
sahf
push
adc
xor
xchg
hlt
mov
pop
inc
mov
cld
pop
sub
xchg
jmp
mov
sbb
repnz
sbb
gs
aam
lret
pop
std
test
mov
pop
and
jp
jle
inc
iret
and
stos
mov
notb
dec
aad
cmp
out
notl
cmp
testl
xlat
pop
pop
cmp
and
repz
outsl
push
jbe
out
sbb
hlt
clc
mov
fs
mov
or
fwait
inc
xor
mov
aaa
pop
dec
cmp
and
fwait
sub
pop
and
filds
frstor
testl
insl
mov
mov
rcr
dec
lret
mov
dec
jge
xchg
sbb
add
dec
xchg
scas
imul
pop
insl
int3
test
out
arpl
jecxz
dec
mov
loope
and
insb
out
dec
or
adc
imul
jns
xor
fst
push
adc
repz
test
mov
add
xor
xchg
scas
pop
das
xchg
xchg
inc
fdivrp
or
pop
and
dec
cmpb
jno
mov
dec
popf
adc
mov
and
or
add
mov
dec
std
mov
jmp
or
gs
push
mov
mov
xorl
mov
mov
push
add
mov
ss
mov
sbb
pop
xchg
adc
in
adc
xor
pop
cmpsl
mov
aaa
cmp
mov
std
lds
fs
mov
adc
jp
cmp
sub
lock
cmp
or
idiv
and
icebp
inc
push
and
das
pop
fbstp
in
fwait
je
lods
mov
paddd
iret
mov
divl
popa
lods
inc
jmp
or
aas
call
test
mov
push
test
out
cmp
sbb
sbb
popf
ja
dec
scas
jle
movsb
or
out
out
rcll
sub
mov
out
cmp
xor
pop
sbb
push
xchg
mov
push
adc
jb
fidivrs
mov
sub
pop
repnz
add
movsb
std
xchg
sub
xor
xchg
out
pop
pop
js
fstpt
pop
popf
iret
add
mov
stc
lret
add
xor
lret
into
xchg
dec
inc
cltd
rorl
or
scas
fs
jg
test
mov
pop
popa
pop
adc
aam
loopne
cmc
pop
fwait
test
sub
dec
loope
mov
out
cmp
mov
out
cmc
add
mov
inc
jmp
push
lea
aaa
rcl
push
jp
rcl
testl
cmp
data16
and
outsb
xor
iret
bound
dec
js
or
leave
in
sbbb
ficoml
call
xor
stos
lret
imul
cmp
enter
rcrb
jg
outsl
xchg
mov
cmp
add
jmp
cmpsl
adc
cmp
push
andb
jg
mov
testl
inc
popa
mov
lock
sti
fstps
sub
push
sub
pop
into
fcmovbe
xor
mov
int
and
rcrb
mov
jge
pop
adc
lock
push
mov
pop
std
loop
lahf
sub
mov
loope
jb
es
rclb
aas
xor
mov
adc
or
ss
add
pop
cmc
push
jns
inc
xchg
xchg
push
les
stos
or
cmp
cli
jnp
pop
or
mov
stos
in
pop
pushf
push
out
mov
inc
xchg
outsb
sbb
insl
sbb
inc
and
clc
shlb
stos
xor
jb
stos
fstps
and
dec
mov
xor
cmpsl
sub
addr16
call
fcompl
push
dec
rorl
jecxz
das
cmpsb
lods
and
xor
adc
call
adc
dec
test
add
dec
xor
lahf
dec
data16
add
cmp
and
shll
call
push
stc
addr16
cmp
das
outsl
push
clc
lret
add
pop
pop
fildll
xor
and
xor
cli
lock
mov
std
and
adc
dec
insl
add
btc
and
das
mov
mov
jno
shlb
push
ss
sbb
or
dec
idivb
loop
pop
mov
lcall
lds
int3
rclb
add
cmc
in
ret
add
inc
jmp
ret
mov
pop
add
loope
jo
ficoms
test
dec
jecxz
fwait
mov
shr
mov
jns
test
xchg
jb
mov
xor
das
nop
mov
pop
mov
je
les
imul
mov
adc
imul
xor
jno
mov
bsf
movsb
lret
push
lret
dec
push
out
jno
popa
xchg
insl
sarl
enter
sbb
sbb
sbb
xchg
inc
daa
or
pop
adc
adc
xchg
xor
mov
mov
xchg
push
fsubrl
pop
adc
in
jg
push
adc
dec
roll
jmp
jnp
jno
pop
dec
je
sbb
xchg
pop
pusha
jg
add
jnp
js
push
in
hlt
xchg
xor
push
sti
jge
test
shrl
out
xchg
xor
push
out
dec
push
sub
jnp
mov
sbb
ret
call
adc
push
lahf
dec
popf
mov
adc
sub
sti
fiaddl
fnstcw
ljmp
aaa
leave
rolb
mov
sbb
int3
roll
jns
int
push
xchg
pop
stc
xchg
sbb
add
ret
mov
push
xchg
sub
cli
sub
jne
pop
inc
lret
mov
mov
cli
mov
and
mov
in
adc
or
pop
mov
sbb
inc
dec
mov
repz
xlat
dec
jge
dec
je
aaa
sub
scas
ss
sub
scas
mov
lret
dec
push
mov
lods
inc
cmc
neg
xchg
sahf
enter
out
jl
or
xor
mov
cmp
cmp
xorl
pop
mov
pushf
nop
mov
inc
and
jae
loopne
push
lock
outsb
out
fxch
sub
addb
and
dec
adc
sbb
lds
sbb
sbb
pop
nop
mov
lcall
add
mov
pop
xlat
sub
add
cmp
adc
jno
cli
loopne
xchg
dec
mov
lods
push
push
pop
inc
add
lock
mov
addr16
mov
ljmp
jnp
xor
sti
jo
leave
pop
dec
xor
test
addr16
or
movsl
mov
lea
push
test
push
sub
in
or
stos
mov
mov
mov
mov
add
mov
mov
in
xchg
inc
fildll
dec
aas
mov
test
je
out
movsb
adc
arpl
fists
mov
xor
fs
shrl
jmp
inc
xor
dec
cltd
xchg
cmp
cmp
imul
add
ret
add
daa
fsubrp
mov
pusha
or
add
enter
cmp
cs
sti
in
nop
cltd
push
dec
lcall
inc
daa
rcll
lods
cld
xchg
xorl
std
mov
xchg
pop
push
cmpsb
in
mov
mov
sub
ret
push
jle
cmpsl
adc
sahf
arpl
cs
sbb
out
out
sahf
int3
xchg
in
fcmovnb
dec
cmp
out
sub
inc
pause
push
cld
movsb
mov
insb
push
andb
popf
add
jge
insl
xchg
jle
mov
call
xor
pop
sub
nop
fbld
mov
stc
add
data16
mov
dec
cltd
adc
xchg
cmp
fcmovnu
push
aad
lock
mov
and
inc
xchg
dec
sbb
and
add
add
icebp
push
sub
pop
sub
pop
jp
add
out
sub
and
lss
das
pop
rol
push
repnz
xchg
icebp
js
jl
leave
sbb
or
cli
andl
jbe
push
adc
add
ljmp
push
sahf
stc
mov
xchg
jl
filds
sub
cwtl
add
cld
sbb
in
fcomps
sub
pop
test
jb
mov
adc
movsb
test
mov
adc
jecxz
cs
outsb
stos
scas
cmp
sub
ret
out
push
lahf
inc
add
mov
xchg
jp
shll
sahf
movsb
add
xlat
or
lret
mov
push
fidivrl
pusha
shll
iret
outsb
dec
and
mov
push
lahf
cmp
pop
cmp
inc
push
mov
cmp
jb
xchg
adc
lods
push
push
mov
xor
fdivs
pop
or
aad
test
mov
and
pop
xor
in
push
cwtl
outsb
gs
idiv
call
push
clc
rolb
lret
push
cmpsl
push
push
xchg
loope
fcompl
or
cli
mov
xchg
shll
push
cld
insb
cmp
lcall
fs
movsb
inc
pop
jge
mov
js
ljmp
mov
loop
filds
pop
push
xor
mov
stc
pop
shlb
pop
xchg
pop
jp
aas
loopne
cmc
imul
dec
ss
add
dec
push
or
out
mov
and
test
loopne
shr
inc
adc
sbb
jno
push
sub
sub
cmp
enter
cmpsb
pop
fsubrp
jmp
lods
stc
xor
cli
leave
les
sti
jl
in
cmpsb
and
jmp
sbb
sbb
push
mov
xor
pop
fldcw
mov
pop
jge
pop
hlt
and
jle
add
ret
add
outsl
sub
cmc
je
push
jmp
or
sbb
orl
push
popf
push
pop
sub
jle
push
pop
inc
fdiv
sahf
js
lock
pop
inc
into
pminub
leave
xchg
mov
iret
out
sbb
rcrl
add
mov
pop
jbe
adc
xchg
ja
repnz
mov
iret
data16
out
push
lahf
push
rclb
stos
push
lea
mov
icebp
test
jne
cmp
shl
mov
inc
addb
push
mov
cmp
inc
in
out
xchg
push
push
aas
dec
inc
in
add
cld
test
sarl
push
cld
aaa
aas
pop
mov
mov
and
andb
cmpsb
add
and
mov
xor
lock
inc
pop
push
push
cmp
sub
mov
push
leave
jae
je
pop
lea
push
and
lret
mov
dec
cs
xchg
adc
pop
rcll
test
lahf
bound
jnp
adc
enter
test
inc
jnp
dec
cmp
stos
iret
outsl
pop
call
xchg
cwtl
dec
lods
jno
enter
std
in
jle
mov
mov
xchg
outsl
mov
in
mov
dec
sub
dec
push
iret
mov
push
fcmovbe
jl
mov
pop
xchg
push
adc
mov
cmpsb
pop
xor
mov
icebp
call
lcall
loop
inc
xlat
mov
cli
cltd
jmp
fimull
outsl
outsl
loope
ret
int3
shll
fbstp
lods
jecxz
xlat
cmp
out
je
cmpsl
lcall
mov
pop
adc
shrl
call
stos
fldenv
aam
nop
xchg
sub
aad
sub
into
inc
sub
int
in
mov
mov
pop
mov
in
nop
lods
mov
pusha
mov
andb
fmuls
mov
jl
and
mov
cmp
fimull
shr
hlt
lret
test
sbb
jne
dec
insb
ja
sub
aaa
int3
daa
add
sbb
cmp
mov
xor
adc
jp
mov
pushf
mov
mov
push
and
jp
aaa
sti
cmp
das
mov
inc
sbbl
lods
sahf
fs
mov
imul
out
push
aaa
xchg
les
test
mov
mov
ja
jne
cmp
push
jb
pop
jle
repz
mov
rcl
sbb
xchg
push
cmp
cwtl
cmp
xor
or
sbb
sti
mov
pop
enter
dec
in
addb
fwait
sbb
add
sbb
pusha
mov
cmp
ljmp
insl
jns
cmp
in
bound
insl
sbb
xor
pop
mov
fiadds
mov
aam
lods
mov
fcmovnbe
sbb
sbb
or
xor
adc
pop
fcoml
pop
push
pushf
adc
nop
rcll
xchg
or
les
fimull
fsubr
aaa
push
pop
insb
mov
cmpsl
cmpsl
mov
add
pop
dec
jnp
data16
notb
arpl
pop
sub
fnstenv
into
xor
aaa
jp
imul
or
rcrl
imul
int
test
das
je
imul
push
out
lahf
mov
jbe
xchg
or
shlb
int
add
or
jmp
in
and
lcall
push
int
adc
xchg
flds
movsl
push
je
lods
pop
dec
addr16
aad
add
lds
xor
cmpsl
outsl
add
roll
sbb
movsb
test
test
movsb
and
clc
mov
gs
idivl
loop
aaa
add
fstpt
xchg
mov
cmp
adc
rclb
ljmp
mov
mov
out
stos
mov
and
mov
xchg
stos
mov
in
sub
adc
push
fiaddl
loopne
movsl
inc
cmp
push
mov
xchg
add
push
lret
fcoml
shlb
test
mulb
daa
xchg
pop
into
fs
and
xchg
xor
int3
in
ret
iret
daa
int
mov
aam
lcall
xchg
lret
inc
outsl
pop
inc
fs
and
in
xor
inc
mov
lahf
mov
dec
loopne
mov
aas
push
sbb
dec
mov
sub
xor
pop
out
aaa
pop
call
mov
lods
pop
push
pop
lea
pusha
xor
fbstp
push
adc
inc
push
and
jle
pop
lods
xchg
or
push
sub
push
dec
pop
jnp
shll
add
pop
shrl
loope
divb
jb
insb
lahf
int3
ds
cmpsl
adc
imul
or
push
pop
jbe
fsubr
jns
dec
mov
ret
pop
out
mov
shrl
push
out
clc
mov
cmp
negl
and
sub
sbb
push
push
test
orb
pop
lret
cmpsb
push
adc
insb
jmp
or
repz
push
lcall
jae
jge
add
loop
add
sbb
push
jae
call
out
push
push
jg
shr
les
stc
dec
pop
in
js
sub
pop
shl
sub
inc
insb
inc
push
xchg
fisubs
jl
sarl
sbb
ljmp
scas
daa
jae
mov
mov
shll
dec
shll
and
xor
les
sub
mov
xor
fnsave
data16
movsb
or
sbb
ljmp
call
test
data16
adc
push
inc
scas
test
pop
les
or
xchg
cmc
mov
fcom
sahf
fldt
pop
fidivrl
sub
mov
cmpb
aas
daa
jle
cs
xor
out
nop
loopne
bound
daa
sahf
sarl
rcrl
sub
sbb
jne
stos
add
out
mov
mov
lahf
or
jb
inc
mov
inc
or
cltd
aam
pop
lahf
and
pop
arpl
or
test
push
add
sub
in
and
xor
jns
movsb
lock
jmp
sbb
inc
in
in
jl
in
push
xlat
dec
sbb
cmp
push
outsl
enter
mov
or
pop
fwait
and
jno
mov
mov
mov
pop
dec
and
stos
push
fiaddl
cmp
jne
jmp
inc
repz
aas
dec
or
orb
jg
jns
or
fnstcw
cmp
jle
and
push
push
jecxz
les
pushf
daa
pop
xchg
repnz
ret
and
sti
in
rcl
iret
mov
fimuls
mov
aaa
mov
add
iret
stc
pushf
cmc
xchg
cmp
lret
fdivs
xchg
push
cmp
jle
adc
loop
adc
mov
and
mov
fidivl
push
sub
movsl
cmpb
pop
lret
push
lea
xchg
inc
push
in
or
sub
pop
jae
add
push
inc
adc
xchg
stc
jecxz
xchg
jne
mov
lret
push
jmp
mov
mov
stos
xor
aam
dec
mov
mov
pop
shl
cmp
sub
ficoms
xor
mov
mov
in
ficoml
test
mov
es
imul
mov
or
ret
xchg
or
lods
add
imul
push
pushl
cmp
push
xchg
insl
je
cltd
shr
jp
ret
test
cmp
adc
xor
add
pop
call
es
xchg
sbbb
add
push
xor
mov
outsb
pushf
adc
mov
adc
mov
leave
adc
ficompl
sti
popf
inc
scas
out
cmp
mov
lods
inc
data16
fsin
push
cmp
jo
fcomps
out
adc
int
andl
pop
lock
arpl
sahf
les
pop
gs
mov
xor
jg
lods
pushf
xchg
aaa
push
into
or
cmp
or
aad
cwtl
and
ds
pop
es
test
push
xor
dec
pop
imul
sbb
inc
daa
inc
add
adc
push
fidivs
int
push
orb
enter
xor
lcall
xor
icebp
imul
jo
insb
xchg
inc
cmp
xchg
add
repnz
std
push
enter
fildl
add
xchg
add
fildll
cld
cmp
lods
inc
roll
mov
out
sahf
stc
frstor
sbb
sub
outsl
xchg
insl
sub
xchg
jae
stos
adc
xchg
aas
adc
mov
add
insb
jg
mov
or
loope
lods
and
adc
xlat
xchg
xchg
push
repnz
xchg
push
pop
adc
sub
lods
ficoms
cld
rolb
dec
or
add
sbb
fisubrl
push
sbb
orl
mov
int3
lds
fcomip
mov
ljmp
inc
mov
cmp
mov
inc
push
enterw
and
lret
xchg
xchg
scas
inc
fldt
adc
mov
mov
jbe
daa
call
mov
cmp
lahf
dec
add
xchg
shrb
in
stos
es
push
fcmovnb
fimuls
insb
ljmp
lcall
je
sub
jb
push
aas
iret
rcll
sahf
lds
pop
imul
inc
cmp
popl
inc
rorl
and
outsb
xchg
fs
add
jne
push
push
icebp
mov
les
mov
loope
inc
cld
xor
fcmovb
out
inc
or
adc
xor
cmp
lds
in
js
and
jge
jno
fdivl
mov
inc
addb
mov
sbb
rcll
test
je
inc
stos
mov
or
jecxz
dec
lret
or
and
xor
pop
test
pop
xlat
mov
iret
push
andb
mov
dec
and
shl
pushf
mov
sbb
push
push
inc
cmpsb
cmp
pop
ljmp
mov
mov
popf
push
sub
push
popf
test
adc
rolb
aas
mov
jne
ficoml
pop
xor
sub
pop
mov
outsl
inc
sahf
or
popf
or
negb
fcmovbe
add
push
pop
sub
pushl
push
jg
das
pop
cmp
push
mov
cmp
push
cmc
jno
add
cmpsb
ret
mov
imul
enter
mov
mov
add
repz
dec
push
cltd
push
and
out
scas
pop
pop
dec
dec
jecxz
jl
or
pop
jge
loopne
clc
xchg
pop
and
mov
push
sbb
sbb
cmc
rcl
xlat
sub
loope
iret
sub
cmpb
scas
and
push
sbb
and
outsl
push
xorl
mov
sbb
dec
mov
cmp
aad
ljmp
repnz
push
pop
jbe
jge
mov
scas
adc
mov
out
mov
push
icebp
pushf
das
push
or
cmp
rolb
add
sbb
stos
cld
xchg
push
sub
cld
imul
dec
inc
mov
retw
inc
dec
jge
add
sbb
ret
xchg
jnp
push
jae
add
xchg
or
mov
lea
xchg
push
test
lock
and
mov
test
xor
sub
jp
data16
push
adc
outsb
push
xlat
dec
jbe
adc
mov
sub
insl
or
or
mov
push
inc
movsl
ds
mov
das
jns
sti
shr
jmp
jb
cld
fwait
jae
jge
sbb
sbbb
push
sub
mov
push
scas
sub
in
mov
lret
pop
in
dec
xor
mov
scas
test
push
cmp
jmp
loopne
dec
inc
rorl
scas
loopne
in
jg
or
xor
data16
repnz
es
xor
sub
mov
sbb
dec
ljmp
int
push
push
push
lds
sub
adc
add
cmpsb
jp
gs
fcomps
pop
scas
scas
movsb
ds
mov
ret
mov
in
xchg
imul
cmp
fistpll
std
scas
das
cmp
inc
or
iret
cmp
push
lock
sbb
loopne
jnp
jp
sub
jae
sbb
in
sbb
fidivs
cmpsl
inc
mov
pop
dec
sbb
dec
sahf
and
adc
cmp
jno
fstpt
je
fistpll
xchg
and
jae
or
lods
xchg
test
pop
xor
test
lea
sti
and
adc
adc
out
insb
dec
cmp
mov
arpl
into
lret
mov
add
adc
loope
jno
and
inc
int
pop
loopne
pop
rclb
pop
jnp
add
lock
or
fnsetpm(287
test
pop
out
dec
mov
mov
fiadds
add
xchg
jmp
fisttps
xor
lahf
pushf
jmp
aad
cmpsl
xor
lahf
test
hlt
xchg
and
add
pop
fcomps
sub
push
pop
xchg
out
popf
cmp
or
jmp
js
lods
loop
dec
jne
out
test
call
iret
xor
dec
xchg
test
test
inc
dec
arpl
mov
fidivrs
mov
cwtl
inc
inc
pop
jae
mov
inc
push
insl
push
das
pop
enter
fstpt
insl
sbb
xchg
inc
and
test
stc
adc
scas
jnp
loopne
loopne
sbb
lret
push
cld
push
mov
push
ficomps
dec
sbb
inc
in
test
adc
rcr
push
es
jno
sub
cmpb
sbb
js
mov
scas
loopne
std
cmp
jae
fsubrs
enter
sbb
add
xlat
lea
jbe
imul
sbb
mov
and
jns
jmp
sub
jmp
mov
sub
xchg
fs
outsl
add
jae
test
cmp
mov
and
je
pop
mov
mov
cmp
movsl
cmp
xlat
lock
push
push
xchg
popa
add
addr16
add
xlat
enter
or
or
xchg
sbb
mov
or
lcall
push
sub
loop
lock
and
lds
out
bnd
sbb
cwtl
daa
mov
pop
mov
sub
inc
push
popf
stos
out
jno
pop
stos
inc
or
mov
cli
xor
mov
jg
adc
jp
jnp
mov
lret
cmp
inc
lods
movsb
stos
dec
sbb
daa
or
arpl
dec
repnz
mov
scas
and
loop
leave
das
pop
movsl
daa
add
mov
test
mov
repnz
add
out
test
mov
cmc
inc
inc
sbb
shll
jl
es
dec
lea
fdivrl
xchg
aam
test
ljmp
pusha
cwtl
inc
push
stc
sub
movsb
and
stos
repnz
dec
and
cmpsb
inc
divl
lahf
push
pop
sbb
dec
push
in
mov
subb
cmpsl
insb
aas
orb
imul
adc
adc
leave
in
cmpsb
ret
push
fimull
cmp
xor
es
int3
adc
xor
pop
lcall
out
in
int3
add
lea
sub
inc
sub
lods
sub
mov
rcpps
inc
sub
inc
fstpt
call
push
mov
ds
inc
inc
dec
mov
das
out
xor
jp
test
fwait
mov
or
nop
push
mov
ja
sti
mov
mov
out
xchg
mov
pop
shlb
jg
sbb
mov
cmp
jp
mov
jge
les
outsb
or
add
mov
pop
ret
jnp
loope
dec
mov
loopne
arpl
movsb
addr16
add
test
cmp
xchg
push
icebp
fadd
or
add
xor
mov
or
push
fwait
add
sahf
inc
arpl
inc
or
xorl
aad
or
cmp
ret
xchg
push
insl
adc
fs
xor
mov
xchg
aam
pop
jge
ret
lods
add
pop
add
adc
mov
test
arpl
in
ljmp
push
jno
sbb
out
dec
jecxz
fsubrs
es
jnp
mov
mov
inc
xchg
add
pop
push
adc
stos
mov
mov
stos
xchg
out
mov
mov
mov
lds
jp
mov
loop
bound
add
xor
testb
es
fistpl
into
lods
das
subb
jge
ljmp
mov
test
jge
loope
mov
dec
xor
enter
jmp
in
sbb
pop
daa
lahf
dec
add
pop
sub
mov
stc
jnp
movsb
jo
sbb
es
pop
es
sbb
mov
fsubrs
mov
xchg
cld
mov
sbbl
sub
adc
xorb
or
push
xchg
mov
sbb
xorl
sub
xchg
mov
sbb
push
jo,pt
cs
jns
jmp
lcall
das
psubusb
scas
in
scas
bound
sub
xchg
je
push
add
jae
or
xchg
cmc
dec
shl
pop
xor
les
push
popa
pop
push
cmp
in
rorl
lea
push
pop
push
sub
add
inc
test
dec
les
xchg
je
xchg
in
jns
push
xor
cltd
rorl
xchg
push
pop
insl
mov
fistps
pop
ret
xor
sbb
push
sub
std
repnz
push
xorl
pop
ljmp
test
ljmp
in
rclb
mov
bound
pop
aad
arpl
fadds
jbe
sub
loope
cwtl
jo
cld
sahf
pop
xchg
sub
mov
mov
and
enter
sbb
movsb
cmc
sbb
mov
mov
jns
mov
rcrb
mov
add
push
lock
pop
jb
das
shl
inc
add
mov
sahf
aad
xchg
int3
mov
mov
pop
sub
pop
pusha
sarl
cmpl
cmp
push
inc
add
out
sarl
outsb
fsubr
outsb
sub
dec
lods
rclb
lahf
inc
mov
pop
rolb
cmpl
sahf
mov
mov
fiadds
fmulp
pop
rorl
push
lret
cmp
das
lods
mov
aad
fisubrl
stos
adc
mov
int3
mov
lock
xchg
cmp
and
dec
xor
xchg
cmp
testl
xchg
pop
inc
push
mov
jecxz
mov
std
inc
sbb
adc
push
test
imul
cmp
mov
inc
inc
sub
add
mov
es
jge
enter
pusha
mov
aaa
or
jmp
xor
scas
xchg
mov
repz
xor
mov
pusha
add
les
lret
jne
fistpl
xchg
xor
dec
mov
and
jecxz
imul
add
rorb
sti
sbb
dec
pop
in
fidivs
mov
push
add
mov
or
mov
jmp
pop
jl
lea
iret
inc
dec
or
mov
mov
xor
ds
enter
xor
fs
add
cmp
clc
lods
int
stc
lods
jge
shrl
cs
loop
push
sahf
dec
jle
es
jbe
mov
adc
dec
in
xor
or
fisubrs
add
jno
sbb
dec
mov
sbb
inc
mov
or
sti
push
testb
mov
fwait
scas
rol
jmp
sbb
push
xchg
hlt
mov
lock
sub
push
int3
pop
rorl
inc
push
mov
push
les
inc
mov
ror
sbb
dec
cs
aam
icebp
xor
push
iret
xchg
ret
outsb
fdivs
loope
mov
popf
popa
sub
jb
sub
addb
fsubl
sbb
pop
sub
call
push
scas
sbb
outsb
in
aad
mov
sub
pop
xchg
mov
inc
fidivl
jae
leave
mov
mov
push
push
dec
dec
mov
jmp
inc
mov
sub
inc
es
mov
aas
dec
ret
sbbl
popf
adc
mov
dec
sti
mov
hlt
mov
mov
dec
pop
push
pop
jo
xchg
pop
pop
push
or
mov
mov
lea
pop
data16
adc
dec
inc
pop
or
bnd
xchg
gs
out
jp
insl
std
in
in
mov
jge
loopne
xorl
mov
cmp
push
ds
dec
mov
shrl
sub
xchg
outsb
movl
int
adc
inc
dec
jge
aad
js
add
fs
mov
je
scas
jae
int
sub
call
jp
fisubs
pop
mov
dec
jp
jle
xor
jmp
add
ja
push
mov
mov
cmp
and
mov
pop
jle
das
sub
mov
jo
jmp
mov
imul
push
inc
cmp
imul
jmp
mov
scas
notb
inc
adc
mov
lret
adc
shl
mov
xor
sarl
xchg
dec
inc
jmp
movsb
hlt
cmp
aad
jecxz
ret
fwait
cld
cld
pop
xchg
std
loopne
aas
sub
leave
mov
into
or
xorb
dec
cwtl
lds
popf
push
pop
fcomip
jmp
jecxz
ret
cmp
out
inc
mov
mov
imul
shlb
and
push
sbb
jo
sbb
inc
popa
jp
enter
and
xlat
inc
dec
sti
xchg
mov
inc
xlat
cmp
mov
notb
add
or
lock
arpl
jo
in
ficompl
mov
es
fcomps
in
mov
fs
add
mov
mov
xchg
mov
fcmovnu
xchg
mov
inc
push
add
stc
inc
imul
push
lret
pusha
mov
pop
and
lret
test
js
sbb
pop
xlat
ljmp
out
cwtl
test
fcoms
mov
or
imul
testb
mov
pusha
out
orb
xor
xchg
pop
js
add
mov
repz
lods
insb
mov
pop
daa
je
and
jmp
dec
ds
push
test
es
stc
sub
dec
sarl
mov
sahf
jmp
test
adc
or
pop
std
adc
bound
sub
icebp
fucomip
cmp
mov
sarl
push
xchg
xchg
or
xchg
aaa
jo
mov
mov
sbb
jg
or
sbb
jbe
xchg
sbb
out
inc
outsl
subl
ja
mov
lds
jae
in
dec
sub
jbe
dec
xor
cmp
or
and
jmp
dec
add
jge
adc
add
mov
dec
aaa
inc
or
pop
cmp
jp
fistpl
cs
cmp
movsb
or
in
inc
jge
mov
push
mov
xchg
jns
xor
mov
sbb
inc
push
cmc
ljmp
popf
cld
nop
mov
sub
push
adc
ja
sbbb
pusha
push
xchg
out
xchg
clc
jmp
mov
call
cmp
push
jl
sbb
xchg
fld
pop
xor
in
mov
fiaddl
mov
sbb
push
stc
add
sarb
jp
sub
dec
push
ss
stc
xchg
jbe
pop
bound
adc
add
leave
pop
lret
pop
mov
cmp
sub
inc
test
inc
and
fisttps
xor
inc
scas
repnz
mov
fwait
aam
int
and
pusha
loopne
test
adc
inc
lock
xor
mov
daa
pop
das
pusha
push
pop
push
sti
jp
xor
test
lods
pop
loopne
and
ret
pushf
xchg
scas
mov
mov
mov
cmp
push
sbb
or
push
rolb
imul
in
test
out
mov
and
xchg
cwtl
adc
cmc
lahf
sub
add
stos
insb
shll
testl
imul
inc
cli
mov
fnstcw
rorb
sbb
test
and
cs
iret
cld
shlb
jo
and
lds
push
add
out
jl
jb
mov
sub
repnz
loope
in
icebp
xchg
cmp
fiadds
mov
cmpl
push
int3
sti
jl
rcr
js
cmpsb
mov
cmp
mov
or
ficompl
sar
inc
pop
xchg
mov
ss
jg
shrl
mov
jp
mov
or
das
mov
cli
mov
lods
dec
mov
out
xchg
pop
push
cwtl
mov
cs
dec
pop
popf
aas
fcomps
push
fidivs
ror
sbb
call
xor
into
stc
lods
imul
stos
imul
test
mov
xor
xor
bound
or
mov
mov
imul
hlt
and
movl
mov
mov
jb
cli
and
in
jo
or
fwait
mov
xchg
pop
or
jmp
lods
test
test
bound
xlat
or
scas
invd
pop
in
and
movsl
adc
pop
add
jns
xchg
add
fidivs
fs
add
xor
out
je
jbe
inc
out
ja
stc
pop
shrl
mov
pop
mov
push
dec
repz
push
adc
inc
mov
sbb
pop
jp
std
and
xor
inc
adc
stos
mov
pop
jle
sbb
jb
xchg
movsb
cmp
jg
mov
pop
iret
insl
mov
addr16
cwtl
pop
flds
lea
aas
in
add
mov
cmp
shll
call
iret
aas
ss
fwait
pusha
je
sbb
repz
inc
inc
dec
das
int3
sti
pusha
out
je
or
addr16
div
mov
fcoms
mov
inc
inc
cmp
cmp
clc
mov
fsubrl
mov
addb
ss
mov
fistpll
ljmp
or
push
fldenv
xor
sbb
sarl
ja
jge
fisubs
pop
mov
dec
or
mov
pop
dec
sub
mov
inc
jmp
notb
jp
sub
jno
shr
mov
lods
adc
sarb
nop
mov
in
leave
int3
dec
sbbb
int
cmpsl
dec
clc
das
or
mov
int
insb
cmp
test
push
loop
mov
int3
mov
jge
sub
mov
dec
and
jmp
jle
xchg
add
sbb
xor
sub
pop
push
or
add
je
and
mov
in
sub
test
pop
push
insl
push
adc
push
test
adc
inc
daa
sti
xchg
pusha
mov
jle
dec
sbb
xchg
xor
out
add
icebp
inc
sub
cltd
fcomp
sbb
fisubrl
add
push
cmp
iret
adc
mov
adc
xchg
add
mov
into
arpl
and
in
lock
add
push
jb,pt
enter
call
fldl2t
clc
xor
dec
jae
xor
xlat
sub
xor
inc
enterw
cmp
push
xchg
sbbl
bound
mov
gs
push
inc
pop
leave
cwtl
out
add
mov
mov
movsb
fistps
push
imul
lret
test
xor
icebp
sbb
fistpll
int3
lock
movsl
jle
jnp
clc
jp
sub
stos
mov
fidivrs
inc
out
inc
ficompl
mov
dec
push
outsl
sub
cmp
test
push
shll
out
subb
pop
test
insb
jb
loop
and
cmp
lods
dec
fbstp
cmpsl
fimull
aaa
ficompl
cs
icebp
cwtl
mov
add
sub
movsl
adc
bnd
loopne
sub
sub
inc
push
xchg
imul
xchg
xchg
push
add
stos
insl
shlb
xchg
pop
js
insb
aaa
inc
mov
xor
mov
iret
stos
jnp
sbb
popa
mov
pop
and
jb
and
out
mov
xchg
roll
test
inc
jbe
stos
inc
pushf
movsl
mov
enter
mov
inc
mov
xor
and
cmp
mov
inc
xor
pusha
dec
mov
sahf
leave
fists
sbb
cmp
add
pop
cli
mov
pop
mov
out
add
cmp
mov
pop
xorb
aam
xor
mov
xor
mov
daa
pushl
jno
lea
pop
pop
push
iret
out
adc
mov
and
stc
or
repz
lahf
xchg
les
push
shl
outsb
fstp
xlat
loopne
pop
das
mov
out
push
lods
pop
or
pop
jne
sbb
les
movsb
mov
dec
adc
jbe
aad
and
mov
lock
mov
push
adc
dec
nop
adc
xchg
mov
std
mov
imul
xor
rcrb
fisttpll
pop
daa
fldenv
mov
js
sub
dec
std
movsl
pop
xor
in
fildll
push
repnz
xor
imul
pop
mov
jns
aam
mov
mov
lds
fildll
rol
cltd
cltd
negl
xor
btr
mov
ror
mov
aam
fs
sahf
mov
sarl
nop
js
jle
or
xor
add
psraw
or
push
pushf
push
mov
shlb
dec
fs
xorl
fcoml
jmp
inc
add
jecxz
cld
and
outsl
clc
xchg
and
lods
test
push
dec
xchg
jno
ja
dec
pop
ljmp
jle
in
add
out
pop
xor
and
call
mov
or
cli
pop
mov
sub
mov
scas
mov
push
jle
push
ja
fsubs
sahf
push
cmp
jo
sub
inc
insb
xchg
xor
mov
mov
fstps
mov
outsl
push
xlat
or
nop
test
ss
lret
fwait
jne
addl
mov
jl
orl
pop
mov
lods
jecxz
dec
outsl
scas
in
push
out
pushf
in
jge
popa
lahf
pop
sub
jnp
outsb
dec
pop
rcrl
faddl
pushf
push
outsb
shlb
das
xor
sbb
dec
out
jne
cmp
and
xchg
ret
movsl
iret
jae
mov
cmp
dec
shrl
mov
and
jne
mov
scas
push
test
mov
stc
sti
mov
fmuls
jle
jns
xor
dec
mov
push
dec
les
int3
shll
sub
cmp
lock
mov
add
pop
inc
jp
jle
mov
stc
inc
jecxz
inc
sub
in
rcl
mov
movsb
ret
cmp
mov
cmpsb
lahf
adc
and
add
pop
hlt
mov
adc
jl
xlat
aad
pop
mov
dec
gs
mov
roll
pop
pop
and
inc
add
or
cwtl
adc
clc
mov
shrl
push
mov
mov
orb
lds
sbb
add
cld
jecxz
psubb
jmp
xchg
jmp
insb
cmp
jno
or
cmp
xchg
cmpsl
loopne
mov
pop
xchg
jp
stos
mov
add
in
insb
mov
insb
xlat
ss
andb
mov
pop
neg
jle
mov
cmpsl
lods
xchg
rcll
jle
push
mov
loopne
xor
inc
jno
cld
adc
mov
mov
in
addr16
jns
inc
adc
xor
hlt
pusha
cmp
fs
push
shr
add
out
leave
add
loop
stos
pop
pop
das
dec
shrl
adc
in
test
jmp
xor
into
xor
dec
in
test
aaa
push
xchg
lret
pop
sahf
xor
and
popa
sbb
inc
sbbl
add
in
fcomip
inc
outsb
or
ljmp
test
ljmp
mov
loopne
jl
into
xchg
mov
stos
das
das
scas
cld
out
adc
ficomps
xchg
cmc
jg
xor
aaa
andl
cltd
pushf
ret
or
je
push
sahf
cli
daa
push
dec
lcall
sub
and
dec
push
or
push
je
pop
mov
jge
inc
adc
bound
add
push
es
pusha
push
jl
adc
cltd
sbb
scas
push
loope
jbe
movb
cmpsl
cltd
jo
cmp
cmp
lds
cmp
out
mov
xor
enterw
jns
fs
inc
out
movsb
mov
insl
into
inc
pop
insb
and
int
cmpsb
out
flds
mov
icebp
testl
or
sahf
lods
push
add
mov
lret
pop
mov
pop
dec
adc
out
mov
sub
or
loop
jl
out
nop
arpl
insb
xchg
es
xor
mov
jmp
sub
mov
subl
push
shlb
cld
xor
and
mov
imul
pop
cmc
xchg
inc
mov
mov
loope
jmp
mov
imul
push
call
jae
dec
and
stos
in
xor
sub
sahf
sbb
testb
cwtl
ficompl
adc
mov
stos
jmp
aaa
dec
inc
dec
jle
enter
push
imul
shrl
lock
xchg
xlat
outsl
repnz
and
aaa
repnz
dec
fistpll
shlb
sub
xlat
and
fisttps
mov
mov
inc
call
push
adc
mov
xchg
fcmovnu
sbb
vpsubsb
mov
lods
lods
icebp
outsb
push
xchg
repz
sbbb
cmpsl
jecxz
incl
cld
or
data16
mov
pop
sbb
mov
and
popf
test
gs
das
das
addr16
into
jae
leave
scas
jmp
notl
ret
jmp
cmp
pusha
je
in
cwtl
xor
lds
push
rcrl
shlb
mov
cmpsl
sub
lret
sbb
xor
std
mov
xlat
dec
call
in
push
mov
jns
push
inc
sbb
jae
out
push
cmp
nop
cmp
adc
lods
sub
pop
sbb
jno
aas
jle
movsl
enter
mov
jae
aaa
xchg
loopne
iret
stos
inc
fnstcw
test
nop
in
dec
out
xor
mov
adc
mov
iret
or
ret
incl
int3
bound
dec
outsb
scas
rclb
cmpl
push
pop
out
je
adc
dec
shlb
mov
add
and
mulb
add
jle
jbe
dec
ss
fwait
xor
xchg
push
orl
mov
cs
loopne
inc
pusha
mov
mov
inc
xchg
push
fdivl
dec
arpl
jo
out
nop
lret
loop
or
roll
jl
incl
jae
inc
stos
mov
lods
adcl
test
cmp
repz
adc
cmp
dec
sbb
push
mov
push
ret
repnz
sub
mul
push
fwait
add
xchg
rolb
sub
int3
repz
out
add
sbb
mov
mov
daa
je
je
mov
fwait
inc
xor
out
pop
jge
ss
adc
pop
push
or
arpl
xor
jg
ss
xor
inc
add
fcoml
add
add
or
inc
stc
xchg
int3
addr16
inc
mov
leave
dec
in
mov
or
and
or
imul
adc
dec
shrl
inc
imul
or
sbb
outsb
jle
mov
add
ret
mov
mov
mov
push
fimull
inc
ret
int
sbb
add
and
sti
lods
sub
dec
adc
ret
hlt
pushf
int
push
popa
pop
scas
mov
ds
and
lods
push
push
shlb
jbe
popa
add
cmpsl
loopne
ljmp
inc
pop
or
insb
mov
sti
dec
sbb
lods
mov
mov
and
push
pop
fsubrs
sti
fstpl
ss
xchg
aas
adc
push
mov
dec
add
pushf
cmp
notb
ja
shrl
in
ret
in
and
or
push
repz
stc
cmc
mov
rolb
pop
mov
mov
orl
mov
test
adc
call
loop
imul
repnz
bound
test
or
or
sub
insl
dec
cmp
add
xchg
fldt
jb
shll
and
dec
imul
and
sbb
pop
adc
jno
adc
popf
or
jns
shr
push
sahf
xor
stc
and
lahf
sbb
test
pop
mov
js
loopne
or
mov
lcall
cwtl
popa
dec
fsubrs
nop
push
jo
push
mov
addr16
fnstsw
fcomps
aam
arpl
push
cmpsl
mov
loopne
pop
push
test
mov
mov
mov
cli
ror
sbb
nop
sub
inc
fstpt
daa
jo
loopne
inc
pop
sbb
sub
inc
sbb
mov
sbb
test
rcrb
roll
jne
xor
xchg
adc
movsb
scas
shlb
add
dec
sub
cmp
sbb
faddp
ss
arpl
stos
inc
add
jl
xchg
cmpsl
ds
jae
js
dec
and
adc
shlb
and
inc
xchg
filds
icebp
jae
and
mov
mov
adc
adc
je
ds
adc
mov
ljmp
icebp
adc
mov
cld
adc
leave
daa
mov
ds
jl
add
cmp
lods
les
das
add
pop
leave
icebp
cmp
and
jp
cmp
sub
push
mov
mov
adc
std
lret
mov
outsb
es
movb
into
arpl
pop
jo
sub
sub
add
inc
fwait
loope
les
fnstsw
sbb
stos
sub
xchg
movsl
cmp
filds
movsl
pop
ret
loop
cwtl
cmp
mov
inc
pop
and
movsl
and
pop
lcall
and
mov
hlt
aad
mov
or
mov
mov
push
mov
idivb
add
mov
fiadds
xor
adc
loopne
movsb
xchg
out
sub
scas
and
lock
outsb
ret
sbb
daa
in
lods
cmp
movsb
sbb
std
into
push
pop
mov
mov
stos
mov
fmul
mov
push
out
jmp
add
mov
fs
fnsave
xchg
pop
inc
sarb
jns
stos
lcall
jbe
cmp
mov
filds
mov
mov
sub
or
xchg
lret
pop
inc
xchg
stos
add
sbb
data16
mov
mov
popa
mov
dec
addb
aaa
popa
pop
cmp
pop
sub
xor
jge
shlb
xor
repz
and
daa
out
movsb
mov
mov
in
mov
jno
sub
inc
outsb
xor
testl
inc
pop
insb
jno
and
pop
mov
cmp
rorl
fsubr
pop
sbb
sti
push
or
jb
out
sbb
add
pushf
and
mov
scas
sbb
cli
lds
outsb
pop
cmp
aam
or
cmpsb
fcoms
cmp
inc
push
push
aaa
cmpsb
mov
xor
popf
and
mov
leave
xchg
push
add
cmc
inc
and
sbb
add
daa
and
or
sub
rcrb
sub
jmp
mov
and
sbb
inc
mov
pop
out
add
loope
sub
push
inc
mov
movsb
dec
xchg
inc
mov
fsubrl
dec
out
cmp
rcrl
or
adc
sub
jg
test
mov
call
stos
and
sub
scas
push
mov
mov
add
push
pop
data16
dec
xor
in
sarb
movsb
test
fsubrs
inc
jnp
fstpl
pop
mov
out
mov
mov
aas
cli
xchg
enter
out
inc
adc
cmpsl
xor
leave
fwait
adc
data16
faddl
push
aam
pop
add
and
or
stc
sahf
loope
and
cmp
insb
pop
in
loope
mov
out
stos
arpl
cltd
sbb
jg
scas
jl
pop
xchg
call
popa
mov
cmp
vorpd
and
pop
in
lret
or
arpl
in
push
outsb
add
leave
arpl
add
push
pop
push
sub
inc
cmc
insb
mov
das
leave
jmp
xchg
push
out
mov
repnz
js
lods
mov
sub
add
jns
sbb
mov
rcl
add
lret
shll
lods
dec
cwtl
mov
roll
push
hlt
jg
inc
fisttps
shlb
sbb
push
and
pop
jle
mov
xor
sbb
sub
aam
cmp
cmp
das
mov
stc
cmp
mov
add
shlb
test
and
sti
cmp
ret
pop
addr16
push
inc
js
movb
xor
stos
pop
popf
dec
sub
repz
cmpsb
push
movsl
aaa
push
cwtl
fdivrl
mov
mov
jae
fdivrl
outsb
xchg
out
popa
and
pop
cli
fistps
jno
adc
or
fs
jne
mov
mov
inc
and
xchg
fdiv
adc
and
sub
xchg
xor
mov
add
and
jno
sahf
cmp
aas
mov
shll
mov
mov
jne
mov
add
lods
in
out
push
notl
or
imul
adc
addr16
scas
jmp
cmp
push
stos
fnstenv
pop
add
push
xor
arpl
mul
dec
ffree
jge,pn
mov
int3
xchg
jbe
rcr
bound
push
or
rorl
js
or
daa
insl
pop
sahf
pop
jb
cmp
das
fistl
aas
pushf
loope
in
push
sub
lock
fnstenv
das
lcall
lcall
sti
cs
sahf
mov
dec
pop
pop
push
cmp
loope
jae
repz
popf
popa
pop
out
sub
dec
mov
inc
femms
int
sahf
int3
jmp
stos
std
push
mov
pop
or
outsl
adc
jo
sbb
shll
xor
jo
int3
clc
rorb
lret
mov
addl
fnsave
push
jmp
cmp
mov
xchg
sub
jnp
mov
cltd
imul
mov
or
pop
mov
test
bswap
pushf
loope
mov
int
je
and
aaa
mov
jae
cmc
mov
dec
testl
mov
cwtl
or
lea
mov
pop
and
aas
test
cmp
inc
les
mov
adc
cmc
xchg
add
jbe
movsl
adc
lea
cmc
inc
mov
inc
imul
sub
xchg
inc
stc
push
iret
dec
scas
fisttpl
cld
pop
out
call
roll
ret
mov
sarl
pop
std
test
int3
mov
add
daa
push
shl
sti
push
lea
loope
xor
xchg
xchg
pop
addb
mov
or
add
mov
or
inc
rcl
jb
sti
scas
sub
push
lods
push
add
andl
mov
sbb
xchg
push
pop
out
lahf
fisttpl
xchg
dec
jb
mov
jbe
adc
dec
iret
lcall
push
xor
push
fdivrl
mov
mov
adc
add
jmp
mov
dec
and
sbbl
xchg
std
repz
movsl
sbb
mov
adc
push
int3
jmp
push
push
in
push
add
iret
jo
xor
xchg
pusha
mov
push
cwtl
stos
xchg
jb
call
cmp
stos
gs
and
jle
int3
add
inc
out
cli
push
fstpt
xchg
ret
in
call
push
shr
xor
loop
jno
cwtl
pusha
lock
xchg
dec
jns
mov
pop
inc
and
jo
add
outsb
repnz
jo
adc
mov
mov
xor
add
adc
inc
cmp
sub
push
xchg
in
inc
pop
iret
popf
jbe
lods
fildll
lods
and
std
sbb
add
js
and
pusha
repnz
cld
xor
mov
out
shrb
push
in
add
xchg
mov
outsl
int3
or
lods
rcrb
sbb
dec
cli
es
inc
ds
stos
data16
jp
movsl
jg
adc
lahf
lods
pusha
mov
pop
movsb
loope
bound
fistps
clc
cli
cwtl
andb
jg
mov
shll
mov
dec
into
setle
pop
cmpsl
mov
inc
inc
xlat
ljmp
cld
cwtl
addb
movsb
sub
mov
xchg
in
aam
imul
jnp
push
cmpsl
ret
cmp
lret
outsl
sbb
aas
adc
outsb
mov
adc
sub
mov
pop
insb
sub
aas
add
mov
lret
jp
push
pusha
or
mov
mov
dec
sub
dec
outsb
mov
cmovs
adc
mov
ds
push
cld
fnstenv
push
inc
pop
fstl
dec
xchg
and
in
pop
ljmp
sub
push
pop
pushf
sbb
test
imulb
lret
xchg
mov
insb
js
ret
call
xchg
push
mov
sbb
cli
push
out
mov
rorl
inc
add
sbb
daa
mov
negb
lods
out
ja
js
mov
popf
lock
mov
in
mov
mov
fstl
cltd
pop
scas
xor
xchg
sbb
je
pop
push
mov
sbb
inc
xchg
push
sbb
push
mov
dec
loop
rorl
cmp
cld
xor
inc
lods
push
xchg
ror
hlt
lret
jmp
cmc
and
xchg
lds
mov
outsl
push
add
jnp
cmp
shl
pop
pushf
jnp
test
mov
adc
mov
popf
out
xor
jns
lods
inc
cmp
mov
push
sub
add
icebp
push
lahf
xchg
jge
flds
xchg
imul
pusha
mov
fiaddl
pop
mov
push
jne
pop
mov
sbb
ja
ret
xchg
scas
sbb
push
loope
mov
bound
sahf
sahf
xchg
test
loopne
rolb
and
movsb
mov
fbstp
adc
in
jne
jecxz
dec
fwait
nop
dec
enter
add
sub
pusha
and
pop
inc
fisttps
push
jecxz
nop
lcallw
add
shrb
inc
pop
je
jbe
mov
jo
lret
add
pop
aas
push
adc
mov
enter
jno
in
pusha
pop
hlt
inc
push
mov
insl
enter
jo
mov
repz
hlt
mov
outsb
xor
sar
jg
mov
pop
inc
cld
dec
cmpb
popa
mov
shlb
rcr
xchg
stos
adc
sub
clc
lret
dec
frndint
mov
popa
sbb
out
aaa
push
lock
outsl
cmpb
dec
push
jns
gs
xor
mov
sar
in
push
push
dec
enter
fldl
cmp
loopne
mov
adc
in
gs
shr
or
lods
sub
mov
push
pop
imul
pop
xchg
jo
aas
insb
push
icebp
sub
lds
imul
in
in
sub
aam
jnp
cli
sbb
movsb
lods
pop
mov
mov
cld
xchg
das
add
mov
dec
xchg
cli
loopne
gs
add
scas
and
add
push
dec
les
fidivl
fidivl
pop
decb
adc
adc
sub
jns
xchg
pusha
subl
sbb
or
insl
push
adc
sti
inc
int
imul
lahf
or
clc
xlat
cmpsl
aas
imul
xchg
mov
pusha
pop
jo
pop
scas
push
adc
xchg
hlt
sti
sub
push
mov
addr16
mov
movb
push
and
push
enter
movsb
sbb
jecxz
and
nop
daa
xchg
pop
insl
into
ret
xchg
mov
mov
xchg
lea
lods
lds
arpl
or
dec
xchg
pushf
pop
fdivrp
dec
call
lcall
push
cltd
lds
fsubrl
pop
aad
and
push
jle
inc
test
push
inc
in
jle
int
mov
imul
iret
gs
mov
mov
in
sbb
sbb
inc
mov
into
dec
jo
or
leave
cwtl
jno
stos
ljmp
cmp
lods
repnz
or
sub
movsl
jle
int
insb
xchg
cltd
inc
mov
stos
jecxz
in
pop
sti
ds
lcall
cld
fldcw
jbe
mov
rol
fwait
inc
testl
dec
inc
inc
lds
imulb
pop
mov
inc
mov
pop
cmc
or
xchg
push
test
nop
aam
push
or
fimuls
cmp
cli
gs
xchg
push
in
lahf
pop
xchg
mov
sbb
inc
mov
or
add
loop
mov
loop,pt
fbstp
jnp
jo
jns
mov
dec
inc
or
push
add
aam
sub
mov
pop
in
lds
fistl
fucomp
insl
insb
enter
jp
push
push
pop
mov
sbb
jnp
xchg
sub
pop
fisubl
fwait
rolb
jae
addb
call
push
mov
xor
and
les
xlat
add
xor
dec
mov
popa
test
push
andb
lret
mov
test
aaa
mov
mov
inc
mov
fimull
adc
cld
push
mov
xchg
scas
aam
hlt
jo
cmp
lds
mov
push
push
mov
mov
call
cltd
dec
pop
shr
mov
jg
xchg
xchg
scas
mov
cmp
out
cmp
or
mov
icebp
inc
adc
inc
fcom
loop
sarb
jle
pop
scas
in
dec
jg
cmp
add
nop
repz
sahf
pop
imul
out
or
insl
sbb
add
int3
dec
cld
popa
cs
jp
imul
xor
or
push
xchg
scas
out
mov
subb
add
addr16
nop
cmp
pop
popf
dec
jp
daa
xchg
pop
mov
push
jno
cmc
popa
or
int3
or
daa
dec
and
mov
in
mov
jle
decl
mov
mov
shll
xchg
sub
scas
psubb
iret
adc
dec
pop
sub
cmc
adc
rcr
in
movb
sub
pop
push
and
cmp
jnp
cmp
hlt
lds
or
push
repnz
pop
fdivs
cmpsb
enter
ljmp
cmp
sti
loope,pt
xor
fs
movsl
sbb
push
mov
push
daa
fdivl
sub
push
xchg
dec
loope
pusha
xchg
leave
popl
sbb
xchg
inc
xor
ss
cmp
movsl
into
xchg
pop
nop
pop
adc
stc
cmp
in
mov
mov
mov
push
in
imul
nop
icebp
cs
aaa
iret
mov
pop
push
push
lds
or
inc
cmpsb
mov
lret
testl
mov
sbb
or
and
dec
jp
fldenv
sbb
clc
mov
jnp
adcl
inc
fwait
push
popa
jp
push
xchg
es
adc
dec
jge
jecxz
out
sbb
push
inc
cmp
xchg
rcrb
in
aaa
adc
push
jno
cmp
pop
ljmp
mov
stos
jb
fldl
adc
scas
dec
out
clc
rorl
adc
cli
pusha
or
and
jmp
xorl
inc
xor
sahf
adc
ret
jecxz
subl
adc
push
adcb
jns
out
inc
rorb
lcall
jae
fdivrl
push
sub
daa
add
cld
lret
les
ja
lds
mov
mov
and
ret
push
imul
addb
jmp
repz
jns
pop
cmp
pop
pusha
mov
dec
cmp
sub
push
jge
mov
and
inc
or
fwait
mov
dec
and
pop
adc
pop
sub
cld
xchg
into
enter
imul
push
or
mov
mov
mov
jns
sbb
out
push
dec
push
xchg
mov
test
pop
mov
jne
loop
je
daa
lret
cmpsb
push
inc
push
cmp
mov
in
repnz
adc
lock
jge
sub
mov
inc
mov
mov
mov
popa
lret
xchg
pop
out
mov
xor
jae
pusha
xor
fwait
insb
ss
add
cmp
mov
dec
jno
xor
loope
pushf
xor
push
cld
jle
push
pushf
or
pusha
cmpsb
sahf
jbe
mov
adc
sub
lea
shr
scas
nop
ss
fnstenv
adc
iret
push
cmpsl
inc
dec
or
xchg
lods
lods
push
lods
xchg
xchg
cli
fst
stos
jne
mov
mov
scas
push
jg
rcr
mov
push
cmp
aam
mov
pop
imul
les
es
iret
or
sbb
cli
cltd
and
xor
les
add
xor
sbb
push
push
mov
sub
fldt
sbb
dec
adc
in
ljmp
clc
mov
fstpt
rep
dec
or
xchg
leave
inc
fadd
in
xlat
and
xchg
sub
inc
mov
repnz
out
ljmpw
adc
call
shlb
bound
jbe
cmp
popf
push
xchg
movq
xchg
push
dec
test
lahf
inc
dec
adc
int
lods
inc
adc
mov
fnstsw
inc
enter
leave
jg
add
cli
push
cmp
in
sti
xchg
loop
into
or
cwtl
js
enter
add
mov
and
popa
jle,pt
test
cmp
xlat
leave
or
sbb
and
and
or
test
sbb
ret
in
test
ss
mov
stos
cli
jecxz
ret
cmpsb
sub
xor
aad
xor
das
adc
popa
ret
hlt
movsbl
pop
enter
push
js
clc
adc
pop
insb
ret
jl
cld
push
push
insl
shr
mov
or
lods
mov
pop
inc
or
pop
leave
push
or
test
add
jge
xchg
and
xchg
dec
roll
mov
popa
sub
ds
cmpb
mov
in
ljmp
add
cld
jmp
xchg
xchg
movsl
inc
sbb
jmp
dec
xor
sbb
sub
ja
iret
mov
les
mov
dec
ret
mov
xlat
dec
mov
std
and
rol
sbb
bound
movhps
dec
xlat
cmp
testl
pop
cmpsb
jb
sbb
or
aad
cld
in
jmp
dec
jmp
mov
jg
pop
pop
xchg
jno
leave
mov
loopne
mov
enter
cli
xchg
sub
xchg
and
pop
mov
out
shll
mov
xor
ret
inc
xchg
mov
or
dec
movsl
inc
inc
pop
mov
pop
insl
mov
mov
push
add
shl
push
int3
or
fabs
xchg
inc
insb
jp
cmpsl
cmpsl
in
adc
gs
call
dec
jmp
and
stc
cmp
jne
jp
xchg
faddl
inc
lods
inc
daa
arpl
or
xchg
imul
push
push
movsl
vmovaps
or
inc
push
mov
nop
mov
sbb
das
mov
xchg
imul
inc
jle
xchg
sbb
inc
data16
out
clc
lock
mov
dec
push
jb
js
shl
and
xchg
dec
cs
lret
cs
cmp
pop
pop
popa
mov
test
and
pop
fnstsw
pop
push
jle
scas
jle
movsl
pop
inc
jmp
repnz
aad
mov
nop
std
out
xlat
imul
cmpsb
xlat
jb
cmp
pop
sbbl
and
xchg
je
mov
dec
test
fwait
aam
add
push
sahf
cmpb
and
sub
xchg
sbb
aaa
jmp
lock
gs
xor
pop
and
mov
mov
xor
inc
pop
ja
mov
in
mov
dec
sbb
test
das
and
jmp
push
fmul
insb
ja
sub
xorl
xchg
xchg
roll
stos
jae
adc
or
mov
xchg
xor
loope
inc
ja
js
cld
inc
lds
data16
pop
jg
xchg
sub
mov
mov
push
ja
adc
cmc
cmpsb
repnz
cmp
xchg
incl
fstps
xor
dec
jne
pop
or
pusha
inc
es
scas
fiadds
cmp
les
in
push
insl
in
pop
or
pop
mov
mov
iret
push
pop
int
pop
enter
mov
jnp
lahf
dec
fcom
push
pop
mov
out
icebp
push
nop
cmp
pop
adc
push
jp
xchg
lods
push
mov
sbb
inc
out
xor
ss
insl
dec
loope
add
lods
call
and
fmulp
xchg
mov
mov
sub
fistpl
xor
movsb
lahf
in
pushf
pop
push
ja
pushf
dec
sub
mov
fcompl
out
or
test
sti
jle
mov
push
push
mov
sbb
out
jle
jl
jnp
imul
sub
mov
push
test
mov
out
cs
mov
in
adc
sub
dec
inc
rcrb
gs
pop
loope
and
push
mov
cmpb
sahf
and
adc
je
push
push
sub
imul
push
sbb
shrb
repz
dec
cmp
flds
int3
xchg
cmp
jnp
push
loopne
arpl
xor
fdivr
aad
stc
cmp
in
push
faddl
popa
adc
rol
pushf
nop
sub
notb
dec
lock
sub
prefetch
or
pop
jg
aad
xchg
scas
add
mov
push
xor
jae
outsb
lock
inc
lock
fnstenv
fsubrl
cli
inc
xchg
pop
lock
dec
cmp
js
mov
imulb
add
and
dec
mov
lret
xchg
loop
adc
and
xlat
adc
movsb
cmc
mov
inc
push
add
jo
out
push
lret
pushf
test
cmc
das
sub
mov
pop
pop
repz
out
xchg
jmp
mov
add
ficoms
clc
mov
scas
lods
je
or
inc
and
push
sub
jmp
add
cmp
inc
xchg
dec
cmc
inc
jo
mov
or
xchg
lcall
in
xor
push
push
sbb
dec
lds
push
jle
jecxz
sub
pop
addr16
add
test
je
add
dec
hlt
or
std
or
mov
insb
inc
and
xchg
movsb
inc
sbb
jnp
adc
sbb
shl
imul
sahf
mov
lods
rcrl
test
lock
and
incb
lock
adc
jg
mov
or
lds
or
lahf
push
push
icebp
pop
fidivrs
lods
fisubl
pop
jmp
jb
and
push
js
adc
inc
imul
addr16
fiaddl
lods
push
and
popa
and
dec
data16
fistpl
sub
or
inc
shll
and
xor
adc
sub
add
negb
addr16
aaa
pop
jno
aas
sbb
imul
mov
mov
pop
xchg
repz
or
jno
pop
loope
cmp
sti
sbb
fldl
out
in
stc
out
lret
aaa
out
repnz
mov
mov
jge
scas
popa
ret
stos
cmpsl
xchg
arpl
xchg
sbb
push
xor
repnz
test
dec
dec
push
mov
and
push
xor
inc
lret
mov
fisttpll
push
cmp
and
pop
dec
cltd
inc
mov
iret
pop
cltd
in
insl
sub
popf
jmp
push
jbe
jg
add
xchg
lret
lret
sbb
push
repnz
leave
lock
pop
loopne
ficoml
stos
stos
data16
push
push
les
push
add
lock
sub
pop
adc
shll
imul
movsl
lock
cmp
add
mov
leave
int3
idiv
inc
std
fsubl
jae
movsb
cmpl
dec
ds
mov
inc
aas
sbb
cmc
lock
push
pop
pop
lret
icebp
outsl
inc
pop
jp
outsl
in
xchg
in
ja
call
push
movsl
mov
jl
cmp
cmp
cli
aad
fstpt
pop
pop
cmp
pop
push
or
mov
cmpl
call
xor
push
cmp
push
addb
sub
nop
jnp
adc
dec
andb
push
adc
dec
mov
fdiv
gs
mov
add
add
sbb
loope
pop
into
or
dec
or
fsubs
sbb
aad
dec
xor
stos
mov
les
sahf
jl
mov
mov
push
lds
clc
not
into
cmp
cmp
mov
pusha
daa
jne
repnz
lock
push
fnstsw
sub
cltd
cmpb
push
test
xchg
addr16
sbb
pop
mov
leave
xchg
mov
ds
mov
jno
leave
jecxz
cld
inc
add
and
or
jnp
and
dec
jg
and
xchg
pop
frstor
cmp
clc
mov
ja
mov
cmp
xor
adc
cltd
mov
push
jns
mov
and
xor
xor
mov
bound
pop
jns
aad
mov
roll
daa
pop
fisubrl
pop
flds
sbb
mov
inc
iret
lock
orl
jl
mov
push
sub
add
aad
std
pop
mov
ljmp
sbb
push
jae
dec
ljmp
mov
pop
fbld
jecxz
and
jmp
xor
lds
rcrl
push
push
daa
sbb
or
ret
mull
nop
lret
mov
shrl
ss
sbb
cmp
inc
mov
jecxz
or
out
inc
mov
cmp
and
mov
sub
js
jne
cmp
icebp
add
rcrl
icebp
fisttpll
inc
mov
aas
notb
lret
movsb
jl
jo
and
adc
dec
pop
or
fcmovne
and
jns
pop
jnp
arpl
ljmp
inc
pushf
pusha
loop
pop
mulb
adc
cmc
xchg
shl
mov
sti
sbb
sbb
push
sti
sub
mov
cmp
jnp
and
sub
jmp
sbb
and
xor
mov
mov
sbb
dec
mov
sbb
add
jno
xchg
add
push
cmp
ja
push
and
imul
faddl
pop
loope
scas
stos
xor
js
mov
icebp
jb
inc
pop
sbb
je
adc
test
or
out
ror
sub
pop
mov
adc
sbb
xchg
test
lcall
or
notl
jae
and
mov
push
test
sahf
pop
pushf
aas
pop
sbb
je
cmp
mov
and
xlat
mov
test
push
adcb
sbb
push
ljmp
mov
test
mov
mov
imulb
fsubp
mov
mov
pop
mov
pusha
inc
fs
nop
fistpl
inc
mov
mov
xor
lds
out
push
or
push
inc
xchg
fucomi
and
fldt
xor
dec
push
lods
inc
dec
push
mov
rcrl
jne
jae
pop
cmp
sbb
jle
sbb
cld
movb
xor
adc
icebp
inc
mov
aad
mov
sbb
repnz
fidivs
mov
gs
ds
sub
cmp
mov
outsl
cmpsb
std
popf
mov
xchg
and
mov
rorb
sub
movsb
push
mov
rclb
mov
mov
shlb
or
sbb
or
cmp
push
enter
cmp
cld
push
jmp
clc
xor
dec
test
jmp
xor
push
les
jnp
dec
lock
mov
scas
outsl
push
pop
scas
jns
data16
xor
adc
pop
sti
mov
ljmp
push
push
inc
pop
sub
fcompl
mov
data16
or
sub
insl
lea
dec
sbb
mov
loope
mov
xor
popf
push
adc
sub
test
pop
jmp
and
inc
fdivs
dec
outsb
mov
lret
psllq
push
and
jecxz
and
adc
cmc
mov
pop
add
daa
jg
inc
cmp
stc
lods
pop
xchg
mov
push
call
in
or
fnstsw
ds
xorb
mov
fucomi
and
aam
test
mov
push
imull
jl
mov
mov
daa
mov
in
in
cmp
loop
out
push
sqrtps
movsb
push
mov
jo
mov
xchg
push
cmp
addr16
jecxz
push
mov
push
mov
out
mov
js
add
or
jg
movb
mov
lock
les
les
pop
sbb
dec
cmp
cli
int3
sbb
xorb
mov
imul
adc
pop
mov
pop
xchg
inc
sbb
xor
lods
leave
les
aad
pushf
pop
scas
or
jno
inc
sbb
pop
adc
test
test
fnstcw
push
mov
mov
jmp
and
outsl
pop
cs
adc
xchg
add
fistpll
pop
in
es
in
cs
mov
xor
inc
ljmp
fs
pop
mov
jns
sbb
loopne
test
mov
sti
std
dec
nop
call
jne
mov
jle
inc
sub
out
aaa
pusha
mov
popa
sub
fsubrs
mov
sub
jg
filds
push
jge
setle
imul
inc
fwait
push
inc
mov
mov
cmp
or
incb
imul
xchg
mov
xor
and
ss
arpl
cmpsl
and
sub
aad
pop
rorb
test
aas
fwait
push
out
les
push
test
push
sbb
shll
xor
pop
mov
gs
es
mov
insb
mov
in
add
jne
pop
cmp
popf
cltd
push
mov
decl
ljmp
jb
inc
sbbb
popf
sub
mov
incl
xchg
adc
mov
and
jecxz
xor
xor
mov
js
jnp
repnz
cmp
sub
lea
and
jns
inc
out
sahf
and
fiadds
iret
or
push
jmp
lahf
mov
mov
jb,pn
xor
sbb
inc
jns
sti
stc
pop
mov
lock
mov
sbb
mov
lods
cmp
pmaddwd
nop
cltd
pop
aas
lcall
sbb
pop
and
js
aas
inc
xchg
ret
pop
inc
lods
xchg
inc
icebp
mov
jae
sub
mov
call
roll
outsb
mov
inc
inc
stc
lock
sub
leave
arpl
js
cmpl
rorb
sub
dec
jo
out
nop
mov
xchg
icebp
xor
mov
aaa
mov
test
nop
orb
insl
xor
shr
jns
push
push
push
push
mov
negb
sub
sub
and
xor
inc
pop
mov
jo
inc
mov
decb
aad
pop
cltd
adc
mov
je
jle
enter
cmp
je
inc
pop
into
ds
ret
fdivrl
sbb
xorb
jecxz
sub
sub
repz
xchg
jl
hlt
adc
repnz
xchg
pop
or
add
cmpsb
mov
in
add
xchg
in
ljmp
mov
je
xlat
add
scas
mov
jl
mov
stos
jle
or
leave
adc
lcall
jge
pop
jg
inc
iret
stc
pop
aas
subb
pop
jl
pop
sub
xchg
jmp
push
orb
mov
sbb
push
jae
leave
inc
dec
outsl
jecxz
xchg
gs
xor
jbe
push
xor
and
fsubp
in
xor
shrl
and
das
into
fnsave
inc
lcall
sahf
stos
jle
pop
inc
jns
jp
sub
jecxz
mov
hlt
pop
sub
rolb
add
xlat
cmp
or
push
and
pop
or
and
int
mov
loop
sbb
imul
mov
ja
out
leave
add
in
nop
push
daa
cmp
loope
xor
pushf
outsb
jle
dec
test
jne
pop
ret
xchg
jno
jne
adc
jbe
xchg
sbb
vmread
movsb
mov
aam
lahf
insb
or
lea
sbb
repz
fdivrs
push
mov
adc
adc
aaa
imul
mov
jle
xchg
stos
mov
mov
imul
pop
jno
adc
ja
std
xchg
into
cmp
push
cli
adc
nop
dec
pusha
jmp
mov
pop
xchg
mov
mov
ror
jns
add
test
test
xor
pmaxub
fcmovu
subb
pop
cmp
and
andl
pop
mov
xor
dec
dec
add
out
mov
aad
mov
jb
push
movsb
mov
sbbb
aad
outsb
stc
idivb
fwait
mov
sahf
mov
dec
lods
or
faddl
mov
or
ljmp
and
int3
or
add
sub
and
mov
mov
into
dec
subb
mov
ljmp
das
jp,pt
orb
repnz
stos
shrd
not
das
hlt
sbb
xor
add
dec
mov
outsb
fisttpl
es
xor
pushf
push
shr
jb
test
inc
xor
inc
les
mov
mov
dec
mov
cmpsl
jge
cmp
andl
sti
shll
sub
outsb
mov
add
call
pop
cmp
jne
jnp
mov
scas
mov
mov
adc
sbbl
bound
pop
mov
jae
clc
stc
push
js
push
popf
aaa
movsb
mov
fwait
xchg
push
sub
mov
scas
test
iret
out
or
lcall
cmp
pop
iret
and
mov
pop
nop
dec
cmp
inc
inc
cmpsl
adc
lock
das
fists
xchg
shll
cs
stos
pushf
jno
lods
xchg
ret
cwtl
lret
in
icebp
or
mov
inc
pushl
nop
cld
lret
push
adc
adc
aam
pop
sub
daa
fcmovnu
outsl
add
repz
jp
enter
loope
mov
movsb
nop
call
push
les
adcb
scas
inc
xchg
mov
xor
mov
xor
and
sbb
push
dec
lock
fbstp
xor
lret
ss
enter
rcrl
cmpsl
adc
lret
and
enter
les
jno
xchg
popf
adcl
std
int
sbb
ret
lcall
pop
mov
xchg
push
outsl
cld
cwtl
aaa
mov
movl
repz
loope
mov
push
sbb
lea
std
mov
push
mov
push
sub
xchg
inc
iret
xor
push
jmp
pop
push
or
xor
out
jl
mov
cmp
push
xchg
fisttpll
std
inc
mov
test
cmp
divb
push
mov
adc
fisubrs
mov
gs
jns
dec
xor
subb
cs
frstor
jbe
ja
mov
inc
stos
jns
mov
aaa
dec
inc
jnp
repz
mov
insl
mov
in
sbb
test
sub
leave
dec
dec
xor
es
nop
ret
hlt
xchg
in
xchg
ret
mov
add
cltd
ljmp
es
fstpt
cmp
dec
shlb
mov
mov
cmp
stc
mov
lahf
xchg
das
xor
adc
dec
push
or
sub
jle
push
sub
inc
push
pop
mov
cmpsl
push
cmp
mov
jo
in
pop
cmp
pop
adc
lahf
daa
rclb
aaa
ja
aam
push
pop
xchg
seta
cltd
pop
cld
dec
test
dec
scas
insl
cs
mov
mov
xchg
call
mov
leave
push
sbb
xor
fcom
push
mov
mov
dec
ret
fstl
mov
xchg
mov
dec
mov
sbb
sub
and
int
mov
dec
lea
pop
dec
jmp
pop
shll
push
lds
push
cs
pop
into
cmp
mov
lret
int3
enter
inc
jbe
lret
daa
arpl
add
add
in
and
aas
cmp
popf
sbb
mov
cmp
movsb
jae
xor
mov
int
repz
pushf
ret
andb
jl
fdivrs
movsb
sub
mov
jb
loop
mov
dec
nop
inc
mov
mov
xchg
sbb
insl
xlat
sbb
jb
mov
fists
add
adc
cli
jae
enter
lds
sub
xchg
test
int3
lods
push
push
xchg
sub
mov
push
mov
sub
dec
or
outsb
in
inc
mov
into
arpl
mov
call
nop
iret
fimull
adc
xor
rolb
sbb
flds
outsl
out
les
rclb
inc
aas
test
sbb
int3
sub
push
les
jmp
xor
test
out
movsb
dec
push
fidivrs
je
aad
or
mov
xchg
jne
push
mov
mov
push
jbe
mov
inc
adc
sub
popa
sarb
cmp
into
dec
popa
hlt
push
sbb
and
push
dec
stc
xchg
in
adc
jmp
add
mov
inc
jg
sti
in
xchg
cmp
pop
jo
stos
fidivrs
imul
xchg
int3
mov
hlt
aaa
imul
cltd
movsl
cmp
cmp
and
or
xchg
aaa
xchg
lcall
inc
sbb
xchg
or
call
adc
ljmp
outsb
jnp
xchg
push
and
sbb
jnp
jb
fisubs
movsl
add
xor
inc
aas
mov
popf
xchg
dec
pop
cmp
clc
inc
inc
mov
addr16
mov
adc
movsb
xor
ljmp
mov
stos
add
rcr
lock
cmc
jge
push
push
pop
pop
push
mov
jmp
sbb
pop
mov
inc
mov
imul
xlat
inc
cld
xor
pop
lea
mov
cli
out
fdivr
mov
xor
mov
sub
dec
xor
jnp
cmp
lock
mov
ljmp
add
loope
mov
push
cltd
and
sbbl
sahf
push
dec
arpl
mov
aaa
adc
popf
adc
insb
mov
jbe
scas
aad
repnz
scas
outsl
jmp
dec
and
add
into
cmpsb
cs
adc
push
xor
mov
pop
in
cmp
add
pop
test
push
mov
mov
pop
aam
or
inc
mov
les
xchg
fidivrl
or
mov
shrb
addl
add
sbb
fimuls
pop
sbb
pop
movsb
test
out
sbb
cltd
sub
dec
dec
out
push
ljmp
lock
fsubl
or
outsb
cmp
adc
cmpsl
divb
paddusw
xchg
dec
pop
add
rcr
sbb
inc
or
xchg
test
jnp
cmp
pop
add
icebp
pop
inc
jmp
fimull
adc
fisttps
test
xor
fildl
xchg
mov
movsb
loop
cmpsb
mov
into
sub
std
dec
enter
inc
xor
lcall
scas
mov
loopne
mov
add
inc
cld
mov
dec
rclb
ljmp
sub
fwait
jge
shll
sbb
in
mov
addr16
pop
pop
cmp
imul
lds
sbb
lahf
pop
es
mov
adc
addr16
pop
jp
cli
xchg
pop
lret
js
ret
and
add
cmp
push
pop
call
jge
gs
pop
aam
cmp
mov
cltd
loop
repnz
test
movsl
in
into
cmpl
adc
mov
sti
fdivrs
cld
cmp
popf
sub
add
cmp
cmp
jb
pop
aas
inc
js
movsbl
push
cli
mov
shlb
int
lods
cwtl
xchg
xor
filds
icebp
rclb
daa
ljmp
jmp
je
loopne
dec
pop
ljmp
test
outsl
ret
pushf
lods
test
xchg
pop
xchg
inc
dec
mov
adc
pop
mov
scas
lahf
ja
mov
and
lcall
cwtl
jne
das
into
mov
int
dec
dec
das
movsb
jl
mov
inc
fwait
in
out
out
and
das
jno
push
pop
loope
mov
sbb
push
and
cltd
scas
adc
movsl
cmp
add
push
sub
rcrb
or
cmp
lock
stos
popa
ja
bound
xchg
out
test
jg
lock
add
enter
xor
sar
push
xor
aaa
xchg
lds
fs
sti
loopne
sbb
icebp
dec
jo
add
scas
shlb
push
lea
fmuls
jl
lock
ja
mov
lock
inc
aas
ljmp
cmp
shll
mov
sbb
movl
sbb
lret
mov
xchg
rcr
mov
in
and
sbb
xor
cs
sar
in
inc
int
xor
sbb
adc
sbb
das
sub
adcl
leave
imul
inc
jae
stc
enter
inc
test
out
sbb
shrl
stos
inc
dec
sbb
sub
arpl
xchg
mov
pop
push
xor
jno
daa
jns
mov
incb
push
adc
and
fmulp
adc
or
nop
shr
lret
inc
push
insl
sbb
je
and
sti
es
mov
out
pop
mov
sbb
adcl
in
stos
push
popa
mov
loop
and
add
scas
shlb
mov
aam
jge
sub
pop
mov
xchg
aad
add
movsl
fsts
sbb
xchg
ss
ljmp
stos
das
imul
cmp
ljmp
sbb
xchg
or
arpl
jge
test
mov
cltd
hlt
imul
push
xchg
push
lcall
and
gs
shll
inc
mov
jg
loopne
ja
or
jmp
orl
mov
pop
stos
jb
lea
mov
add
lret
sarl
adc
push
adcl
mov
adc
cmp
inc
outsl
xor
sbbb
and
mov
pop
mov
xor
test
jb
mov
mov
cli
and
mov
arpl
and
out
scas
and
fnsave
pop
cmovns
jmp
popf
test
xor
push
xchg
pop
pusha
pop
loope
xchg
mov
ror
or
push
adc
pop
lods
push
icebp
negl
loope
out
jmp
inc
sub
inc
icebp
stc
xor
xchg
inc
dec
sub
lahf
incb
outsb
adc
ds
lahf
pop
insb
xchg
daa
test
lret
cmp
mov
movsl
insb
into
in
enter
jp
nop
pop
cmp
push
jle
mov
xor
mov
pop
out
sub
xchg
or
decb
movsb
insl
dec
bswap
sahf
lahf
sbb
call
jo,pt
outsb
inc
pop
leave
shll
test
ss
xchg
cmp
sbb
insb
pop
into
mov
dec
cld
push
add
adcb
sub
pop
xchg
mov
inc
mov
ds
mov
or
sub
aas
jmp
lret
popf
inc
insl
mov
sub
jnp
std
in
loopne
xchg
dec
inc
cmp
push
jae
sub
jecxz
cmp
pushl
xchg
imull
pop
push
xchg
loop
inc
add
inc
das
outsl
or
in
inc
ljmp
shrb
push
mov
xor
xor
dec
ljmp
xor
xchg
sti
adc
lds
fisubs
mov
xchg
in
loop
sbb
add
outsl
adc
andb
adc
inc
cmp
sub
dec
es
cli
and
cltd
mov
out
jo
rcrl
cmpsb
fcompl
movb
stos
push
test
punpcklbw
fs
mov
mov
aaa
push
testb
stos
popa
dec
or
lock
pop
sbb
cwtl
fcomp
adc
cmp
and
push
push
into
out
leave
mov
xor
or
push
cmp
fdivs
ja
pop
pop
adc
in
push
and
test
repnz
inc
sbb
jae
sbb
xchg
cmp
nop
outsl
outsb
sbb
mov
adc
mov
loopne
inc
in
mov
adc
addr16
cli
xor
or
lahf
jle
or
fisttps
movsb
sbb
movsb
jmp
and
jg
stos
adc
add
jo
aam
fildll
in
sub
loop
jo
arpl
mov
push
pop
cmp
pop
xchg
lea
bound
out
push
inc
data16
cli
ffreep
repz
das
das
push
loope
test
mov
loop
fistl
je
xchg
cli
sbb
jb
push
push
inc
xchg
xor
inc
mov
xchg
sbb
scas
lock
cmpsb
sub
stc
push
arpl
lret
filds
cmp
dec
sarb
push
aam
xchg
ret
imul
push
stos
or
inc
inc
int3
out
int3
xor
dec
xor
aam
push
xchg
das
add
cltd
or
stos
shlb
pop
out
mov
in
adc
test
pop
ss
xchg
pcmpgtd
mov
lods
pusha
dec
fisubrl
sbb
mov
or
pop
call
pop
adc
xor
sub
rolb
dec
sub
xor
outsb
cmp
iret
fiadds
sarb
js
sahf
out
mov
dec
pop
scas
je
cli
cmp
dec
ror
in
out
jb
lock
cmp
pop
add
mov
sarb
mov
js,pt
mov
xor
push
ja
xor
int3
jne
jae
dec
sub
pop
xor
inc
jns
jmp
cmpsb
leave
adc
cmp
mov
cwtl
lods
dec
pop
enter
mov
adc
fdivrl
js
mov
push
out
cld
data16
fiadds
fbstp
sub
dec
mov
ret
xor
sub
faddl
shrl
flds
scas
add
push
mov
xor
xor
mov
jg
rorb
cmpsb
sbbb
cmpsl
add
rcl
sub
arpl
jmp
or
outsl
pop
mov
div
add
push
nop
inc
mov
fwait
xlat
fwait
gs
xchg
push
push
pop
pusha
aas
dec
cmp
and
lea
repz
insl
inc
pop
cld
xchg
pop
sbb
lds
or
popa
jge
addr16
cld
mov
jecxz
mov
jnp
pushf
push
jmp
sbb
sahf
into
cld
mov
xor
mov
pusha
push
or
jge,pt
iret
mov
out
imul
add
and
cltd
sub
loope
mov
jge
jmp
insl
mov
and
push
adc
pusha
icebp
sub
mov
cmp
std
mov
adc
sti
dec
test
inc
insl
push
pop
pusha
insl
lods
fdivl
out
pushf
sub
sti
jl
adc
pop
loopne
ret
add
jg
xchg
inc
xor
popf
rcr
jle
fstpt
jae
lahf
or
jb
loope
cmp
insl
pop
xor
ss
clc
test
stos
fmul
jp
sub
loopne
lods
hlt
sarb
xchg
pop
xor
in
icebp
push
aad
pusha
cli
cmp
mov
sti
adc
push
pop
adc
dec
adc
push
push
jnp
frstor
mov
imul
fldl
sbb
leave
mov
pusha
mov
insl
mov
cmp
adc
sbb
aaa
mov
sub
mov
dec
and
xchg
jl
mov
xchg
push
jg
mov
lcall
std
movsl
movb
mov
icebp
into
mov
or
sub
mov
and
outsb
addr16
rcrb
hlt
jp
cmp
mov
mov
mov
stc
mov
movsl
fisubl
fbstp
das
cmp
outsl
mov
xchg
jnp
xor
or
sbb
orl
xchg
push
jge
loope
pop
nop
cmp
mov
hlt
icebp
cmp
jnp
rcr
aad
cwtl
jmp
inc
mov
repz
pop
pop
xor
xchg
push
rsqrtps
test
xor
hlt
mov
push
loope
fs
sbb
jle
mov
sbb
mov
orl
sbb
push
lret
imul
call
jo
push
mov
ret
idivb
aaa
mov
mov
and
or
and
push
xchg
mov
jb
std
lds
test
clc
push
lret
inc
cltd
enter
mov
push
movsl
scas
in
sub
and
or
push
or
scas
mov
cmp
sub
sub
mov
ds
adc
mov
push
sbb
and
int3
inc
push
pop
sbb
sbb
push
test
jae
int3
cmp
enter
loop
dec
mov
add
push
mov
mov
aam
mov
and
ss
cmova
xchg
adc
push
popl
stos
je
lea
mov
in
out
adc
idivb
scas
xchg
mov
and
mov
pop
pusha
inc
push
pop
lods
fwait
inc
mov
test
fstpt
cs
cli
mov
daa
xchg
or
xchg
pop
add
mov
add
fs
jbe
pushf
pop
and
test
out
pop
mov
mov
mov
cmp
pop
loop
and
outsb
push
test
in
xor
rcrb
jg
xchg
add
xchg
pop
lcall
int3
adc
mov
into
xchg
popa
push
outsl
pusha
inc
pusha
notl
jae
cmc
jno
xor
or
pushf
js
ficoml
cmc
or
push
or
gs
sbb
jno
das
imul
jle
les
mov
fs
arpl
outsb
push
insb
push
out
pop
loop
mov
addr16
out
rol
xor
test
addr16
clc
add
rcr
jecxz
pop
cmp
shr
das
in
repnz
jnp
mov
outsb
push
arpl
popf
testl
adc
sub
test
outsb
or
aam
sar
pop
inc
mov
das
mov
sti
call
pop
sbb
sub
cmpsl
out
sbb
mov
pop
mov
dec
fbstp
lods
call
pop
mov
inc
xor
or
clc
xchg
decb
loopne
cmp
and
fbstp
jge
mov
push
icebp
pop
les
cmp
adc
addr16
orb
dec
jbe
nop
negb
xchg
lret
mov
test
push
dec
loope
popf
push
cld
les
jmp
push
pop
rcr
dec
jecxz
rcl
or
in
fmull
scas
outsb
dec
mov
dec
cmpsl
jns
lahf
adc
insl
cmp
jb
cld
adc
daa
lods
outsb
mov
xor
cld
lcall
out
cwtl
sub
xchg
lods
push
dec
jl
xchg
mov
jb
jae
sbb
mov
pop
mov
aad
sub
ljmp
lret
push
mov
cmp
jb
adcb
test
mov
inc
adc
es
insb
shlb
ss
lahf
daa
sbb
icebp
fcoml
inc
cmp
sub
adc
pop
xor
pop
push
mov
jp
jne
subb
sub
cli
ljmp
mov
mov
das
aam
and
pop
mov
sub
push
les
push
jbe
inc
ja
push
test
jecxz
sub
in
lods
jg
insl
or
mov
or
mov
scas
mov
dec
shrl
fimuls
clc
es
push
cli
jne
inc
lds
xchg
ffreep
dec
or
fiaddl
xor
mov
jno
into
mov
mov
cmpsb
lods
adc
pop
int
and
sbb
jecxz
aam
lods
fs
enter
mov
jg
das
into
inc
sar
cld
inc
cmp
inc
dec
pop
dec
loopew
mov
mov
loop
mov
sar
cmp
nop
mov
notb
or
lahf
xor
pop
xchg
sub
fildl
dec
pop
loopne
aaa
scas
fcoml
xor
add
xchg
or
pop
das
hlt
mov
and
jge
cmp
pop
pop
fnstenv
cs
repnz
or
divb
aad
mov
lahf
mov
push
ljmp
xchg
js
pop
dec
in
jno
stos
mov
bound
into
sti
mov
imul
daa
psrlq
cmp
cs
pop
pop
and
nop
push
push
in
mov
shlb
test
dec
push
sub
bound
jbe
out
in
fdivp
outsl
flds
sbbb
xchg
jno
or
sar
cli
shlb
mov
mov
mov
jecxz
or
sub
sbb
xchg
sbb
add
dec
pop
call
or
or
pop
push
aad
int3
rcr
gs
bound
dec
dec
aaa
xchg
mov
lods
xlat
add
faddp
shll
pop
add
add
scas
push
mov
add
cmpsb
mov
das
icebp
sbb
xor
pop
outsb
mov
xor
scas
aad
leave
sbb
push
into
out
jle
xchg
cmp
pop
mov
dec
adc
jle
and
push
pop
negb
dec
in
insb
mov
jle
xchg
in
mov
xchg
shrl
inc
xchg
ret
mov
into
sbb
xor
mov
add
xchg
pushf
ret
or
shl
das
scas
add
xchg
xor
outsl
push
cmp
jmp
or
std
add
movsl
push
test
andl
pop
inc
mov
inc
and
adc
cltd
hlt
in
pop
pusha
stos
lods
ljmp
lret
fisubl
fcomps
jmp
pop
mov
movb
xor
xchg
cmpsl
sbb
push
lret
adc
push
mov
xchg
cmp
mov
testb
cltd
cmp
or
rcrb
sub
dec
cltd
pusha
nop
and
decl
sbb
cmp
xchg
add
stos
jnp
shrl
inc
mov
xorl
testb
adc
and
push
insb
xor
inc
cmp
dec
jns
cmp
test
shll
pusha
lret
ljmp
notl
aam
adc
icebp
push
lret
out
fidivs
in
push
jle
push
inc
sahf
mov
lret
jnp
dec
jg
and
cli
stos
jno
dec
in
loope
sbb
jmp
sbb
adc
adc
adc
movsb
in
jmp
imul
test
or
in
movsb
scas
test
test
cmp
adc
shlb
fisubl
cltd
cmp
ret
lret
xchg
mov
ljmp
mov
cmp
pop
dec
dec
and
test
cmp
xor
jns
std
jae
es
mov
xor
dec
popa
mov
fisubs
xchg
rorl
test
std
imul
mov
or
das
sbb
sub
es
int
inc
pop
popf
fdivrl
stos
testb
xchg
pop
xor
sub
mov
mov
jle
mov
xchg
pop
inc
cwtl
insl
pop
or
xchg
out
insl
push
iret
out
pop
imul
in
clc
outsb
inc
inc
int3
out
cmc
nop
daa
sub
gs
loop
dec
jle
sbb
cmp
leave
cmc
ds
jo
loopne
popa
xchg
xor
push
popf
mov
jne
aas
sbb
mov
mov
push
jbe
loopne
mov
ret
pop
imul
pop
fistpll
jns
xor
mov
pop
sarl
stos
jp
sbb
lret
mov
call
jb
hlt
stos
notl
sbb
mov
les
test
in
cltd
dec
push
lret
jno
fcomi
out
hlt
cmp
nop
enter
out
movsl
inc
testl
mov
test
dec
mov
add
pop
inc
jl
cmp
lods
and
pushf
sub
and
mov
and
out
std
push
jnp
xlat
inc
fwait
sbbl
and
lret
push
in
jge
dec
test
in
loope
movsl
imul
xor
ds
and
jmp
inc
cmp
jae
stc
outsb
sbb
cmp
clc
out
pushf
daa
pop
xor
jg
jae
xor
mov
cwtl
push
lret
lock
and
cmp
or
push
repnz
sar
add
dec
mov
mov
aaa
popf
sti
in
shr
pop
sbb
cmp
mov
stc
mov
lret
cmpsb
lock
add
push
jae
mov
fs
mov
xchg
add
adc
add
repz
imulb
fildl
les
repz
mov
push
rcl
pop
push
jg
push
mov
inc
inc
pushf
repnz
lcall
icebp
dec
dec
mov
test
adc
inc
iret
xlat
in
inc
mov
fsqrt
mov
ss
scas
mov
xor
jae
loopne
lock
int
dec
rcrl
add
mov
ficoms
iret
pop
inc
ret
or
loop
adc
mov
pop
xchg
imul
dec
push
fcomps
addr16
in
mov
mov
inc
sti
mov
loopne
jae
mov
dec
loopne
inc
rol
mov
add
jb
jp
aas
xchg
mov
fwait
sub
cld
pop
mov
xor
aad
add
sbb
pop
lret
out
test
imul
push
test
sub
sub
sub
setbe
inc
out
fs
mov
inc
xchg
inc
mov
out
sbb
pop
pop
xor
mov
jns
icebp
push
scas
inc
imul
repnz
or
stos
fmulp
push
ficomps
imul
imul
notl
test
mov
in
cltd
pop
xchg
xor
or
jg
inc
rcrb
mov
out
inc
fxtract
out
add
jecxz
dec
jmp
fnstenv
mov
hlt
add
adc
cmc
sbb
cmp
movsl
pop
mov
dec
in
sbb
fstpl
mov
fiaddl
js
cmp
sbb
test
mov
jb
mov
inc
ss
test
xor
dec
push
sbb
pusha
jne
cmpl
cmp
xchg
cli
fs
pop
xchg
dec
fs
or
repz
lds
outsl
jns
push
xor
pop
mov
xchg
mov
and
jbe
sbb
popf
or
cmpsl
shr
fwait
sarb
sbb
inc
or
inc
ret
and
jmp
fwait
pop
pusha
fdivrl
nop
rcr
jge
sarb
ljmp
xchg
icebp
mov
fwait
adcb
mov
pop
lea
fsubrl
mov
pushf
testl
out
or
lret
inc
push
lea
adc
lret
nop
xchg
test
and
flds
loope
or
sbb
leave
les
push
xor
gs
cltd
sbb
lcall
ret
cmp
xor
push
stos
mov
jno
lahf
sbb
xor
stos
sbb
lret
xor
outsb
adc
loope
fcmovb
lods
jne
lret
into
imul
xor
lock
xchg
dec
and
sub
jae
inc
fdivrl
lods
pushf
mov
pop
mov
mov
cmpsb
add
push
cmp
jp
mov
inc
cmp
stos
cmp
cmpsl
in
jns
lcall
dec
jmp
push
scas
push
pop
adc
repz
mov
inc
in
loop
mov
pop
hlt
subb
jns
and
add
mov
push
or
imul
stos
rcll
sbb
sub
pop
inc
cs
mov
or
imul
xor
sarl
fildll
aaa
lods
add
iret
subb
xchg
aas
scas
stos
rcll
xorb
lret
outsb
mov
add
and
sarb
imul
in
popf
fnstenv
inc
mov
sub
jnp
fldcw
push
div
dec
out
repz
arpl
xlat
je
ds
test
or
jns
and
insl
sub
cmp
jno
jg
repnz
or
daa
fisubl
mov
or
cmpsb
push
pop
popa
mov
clc
pop
jbe
pop
jp
loop
cli
mov
or
mov
clc
int
lahf
icebp
ljmp
dec
aas
stos
and
out
lds
jbe
push
xor
jne
popa
out
mov
sub
leave
push
aad
ret
push
cld
aas
and
std
test
adc
sti
add
dec
cmp
jp
xchg
pop
cmp
jns
mov
mov
xrelease
mov
mov
or
add
mov
repz
inc
lret
inc
shll
hlt
addr16
mov
pushf
scas
into
scas
pop
xchg
mov
cmpsl
mov
nop
dec
mov
rclb
js
sub
sub
push
cmpsb
fwait
mov
cmp
sub
inc
movsb
mov
inc
dec
mov
jno
xor
mul
and
jno
xor
test
cmp
leave
in
push
loopne
cs
dec
adc
cmpsl
jns
aam
mov
adcb
pop
sti
xor
push
xchg
sbb
ds
fwait
rcrb
test
jnp
cmc
test
repz
mov
cmpsl
add
aad
int
inc
testl
popf
fcmove
aas
ficompl
idiv
mov
loope
dec
insb
cmpsl
and
nop
aam
jmp
popa
jb
mov
xchg
sahf
jmp
movsb
xchg
scas
stc
in
insl
pop
ret
sbb
mov
lds
push
cmp
sub
cmpsl
cmc
lcall
inc
sub
sbb
cltd
in
mov
or
mov
imul
arpl
push
outsb
mov
cmp
lds
cltd
mov
out
sbb
mov
xorl
jge
shll
test
out
fs
enter
cmp
fdivrs
jbe
out
loopne
inc
push
jnp
pop
pop
push
sbb
xchg
data16
arpl
adc
cmp
mov
pop
dec
add
cmp
push
shrb
and
inc
mov
addr16
scas
inc
mull
xchg
and
and
pop
sub
adc
push
lret
imul
dec
arpl
or
add
sbbb
les
xor
jle
cs
or
xchg
mov
arpl
and
inc
jmp
incb
add
sarb
stos
cs
ja
inc
insb
popa
push
and
cmp
xchg
adc
mov
lret
in
pop
test
test
sbb
inc
adc
sti
xchg
jns
ljmp
jle
inc
push
cmp
and
xchg
je
or
sub
or
mov
cmp
add
fcmovnb
xchg
or
cmpsl
xor
notb
aad
scas
pop
ss
xchg
ds
add
xor
xchg
add
push
gs
or
ret
cli
fwait
jg
pop
pop
adcl
cmp
icebp
lahf
pop
inc
stos
xchg
cmp
or
mov
aam
adc
pop
pop
xor
daa
pop
mov
cmc
mov
cmc
mov
push
sbbb
xor
sbb
dec
inc
xor
popf
stos
out
push
ret
stos
sub
dec
ficomps
inc
xchg
pop
xchg
inc
icebp
sub
push
fimuls
jge
cmp
in
push
mov
or
scas
mov
out
mov
add
jbe
sbb
into
pop
insb
fsubs
adc
repnz
mov
cld
sar
sbb
shlb
push
jle
loope
je
sub
xor
fs
frstor
pop
jecxz
lret
loope
mov
mov
jl
fwait
pop
mov
dec
mov
inc
jge
cmc
adc
loopne
cld
ljmp
inc
pushf
pop
jno
and
cmc
sbb
and
xor
dec
lds
lahf
pop
out
dec
sub
sbb
ret
sbb
arpl
inc
pop
ficomps
cmp
outsl
cld
cmp
shll
pop
pop
bound
push
shrl
pop
pushf
iret
sbb
xor
xor
aas
xchg
test
int
rcl
mov
cmp
arpl
in
push
inc
jo
cmp
push
cltd
sub
movsb
adc
push
dec
mov
or
data16
fs
mov
or
sbb
xchg
dec
in
frstor
je
lret
add
or
xchg
xor
adc
inc
leave
pop
sub
jg
push
mov
call
xchg
fsubp
aad
in
lret
mov
jbe
jmp
cmp
out
push
mov
icebp
jl
push
jno
ds
rorb
stc
sahf
das
xor
pop
sub
jecxz
lock
jge
cmp
je
mov
dec
mov
push
gs
sahf
inc
mov
cmp
jb
jg
sarb
lret
aam
inc
push
adc
lret
cmc
mov
cmpsl
xchg
outsl
les
xor
adc
mov
scas
out
dec
jl
fs
jge
and
pop
enter
fildll
rcrb
pop
nop
cmp
stos
or
jp
fwait
js
mov
ja
jecxz
and
mov
xchg
xorl
jp
pop
loopne
adc
push
fisubrl
repnz
in
js
cmp
cli
sahf
fsubr
adc
and
jne
adcb
pusha
in
sbb
rcrl
rorb
mov
jbe
rolb
fwait
scas
pop
jnp
rcrl
or
inc
mov
dec
mov
dec
pop
call
mov
jno
scas
cmp
repnz
cmp
gs
scas
add
mov
out
icebp
roll
leave
and
cmp
mov
xlat
fdivs
mov
push
ret
subl
test
popf
pushf
xchg
sbb
and
lds
mov
push
aad
push
jmp
cltd
sub
rcl
lods
or
xor
ljmp
mov
sbb
inc
mov
dec
xchg
inc
popf
push
xorb
addr16
pop
mov
iret
out
jle
and
push
test
xchg
vunpcklps
adc
mov
xor
add
fisttpll
mov
xor
jbe
xchg
push
aaa
fstpt
cmpsb
push
lods
push
mov
sub
aad
lods
ret
push
cmpsb
fnstenv
mov
daa
shrl
push
insl
mov
sub
test
dec
push
imul
popf
mov
fstl
es
repz
mov
pop
stc
sub
std
or
pop
int
pusha
jg
and
cmc
aad
jg
pop
cld
push
cmp
add
inc
xor
add
loop
fldl2e
push
and
dec
repz
dec
test
pop
inc
dec
jge
std
pusha
jl
xchg
mov
push
rcl
push
gs
orl
daa
imul
xor
lods
js
fidivrl
rcll
inc
jo
mov
mov
pop
sub
fs
ds
popf
xor
pop
inc
cmp
test
jno
xchg
mov
scas
es
aaa
jb
push
jns
sbb
leave
xchg
sbb
cmp
test
inc
mov
or
sbb
cmp
push
push
push
jno
in
icebp
dec
dec
pop
sub
nop
enter
push
push
clc
mov
dec
cld
repz
stos
adc
cs
adc
jnp
movsb
jecxz
in
mov
push
mov
shlb
repz
cltd
add
lret
sub
jp
sub
mul
cmpsb
mov
pushf
mov
clc
cld
les
mov
or
cs
jge
bound
jb
pop
mov
inc
sbb
cmp
cmp
inc
cld
or
xchg
subl
ljmp
stc
adc
stos
pop
mov
pop
add
jp
sub
mov
fldcw
push
into
cltd
and
fdivrl
movsl
xchg
outsl
clc
lahf
sbb
xchg
loopne
mov
push
mov
sub
insb
mov
int
out
push
lcall
xor
stos
aam
frstor
sti
clc
incb
and
into
adc
in
push
stos
mov
cs
cs
fildll
aam
out
pop
rol
mov
adc
jge
lods
inc
pop
mov
cltd
fdivrp
and
cmp
pop
call
divb
fcoml
cs
loopne
gs
fwait
mov
adcl
fimuls
inc
dec
add
mov
add
jecxz
pop
mov
sti
ret
test
aaa
dec
sub
leave
mov
pop
jg
out
inc
mov
jae
sti
insl
popf
mov
data16
mov
and
jne
pop
sar
sahf
jg
sub
jnp
and
imul
sti
sar
inc
push
xor
push
jne
les
mov
jge
movsb
inc
stc
and
cmp
lods
jge
int3
data16
cs
inc
pop
mov
enter
cmp
dec
adc
cmp
dec
inc
jns
mov
ficomps
bound
pop
sbb
pop
loop
popa
lret
pop
adc
lods
add
stos
jo
push
xchg
mov
arpl
test
sbb
addr16
xchg
push
adc
fwait
cmpsl
xchg
mov
in
xor
inc
xor
dec
leave
test
xor
lret
push
nop
sbb
das
sub
test
xor
or
push
push
test
shl
pop
pop
sbb
sub
and
adc
fidivl
fwait
pushf
sub
shll
into
mov
jp
mov
pop
outsb
into
push
addl
jge
les
jbe
jbe
mov
inc
lcall
pop
sub
push
push
arpl
or
sub
lods
lods
jle
imul
stos
mov
jecxz
and
cmp
dec
jnp
movsb
push
sbb
in
mov
stc
push
aam
lds
shl
loopne
xor
xor
hlt
fmul
sbb
push
daa
cs
fisubs
pop
mov
sbb
stos
xor
dec
test
push
push
mov
andb
dec
xchg
test
jle
add
sbb
mov
mov
in
jnp
test
pushf
inc
add
cmc
adc
pusha
roll
push
xlat
loope
jle
in
fcompl
jecxz
cwtl
outsb
adc
fldl
ret
repz
es
lods
sarl
loope
add
bound
cltd
xor
sti
decb
gs
mov
lret
adc
adcb
mov
insl
cli
adc
mov
es
push
jne
lret
cmp
push
sti
adc
mov
cmc
inc
data16
xor
mov
js
mov
push
jo
insb
out
int
add
pop
and
in
adc
sub
mov
jne
sbb
test
xchg
test
sar
sbb
mov
popfw
fisubs
int3
sbb
das
dec
dec
xchg
fsubr
lret
pop
popa
xchg
dec
inc
test
sti
popa
inc
dec
fmuls
pop
stos
or
mov
inc
int
jmp
fsubl
in
fldt
rolb
sbb
shlb
pop
lret
sub
pusha
gs
jl
xor
js
xchg
xchg
ljmp
mov
dec
xor
mov
outsb
pop
and
es
out
fsubrl
ss
add
dec
arpl
push
mov
and
jge
adc
int3
push
push
dec
lahf
jae
xchg
inc
push
xchg
lret
loope
jecxz
ss
or
sub
push
icebp
mov
data16
fs
bound
cmp
jle
inc
aam
adc
sub
repz
mov
jno
dec
loopne
pop
lods
jne
add
jmp
and
daa
fs
add
hlt
cmp
rorb
outsl
test
daa
lock
into
ss
pop
std
mov
xchg
push
adc
in
mov
push
sti
test
xchg
sbb
insb
add
pop
cld
jp
popf
scas
xchg
mov
stos
fsubrs
and
and
rorb
test
in
xchg
es
mov
arpl
mov
and
pop
daa
push
out
ficompl
into
add
icebp
outsb
pop
leave
arpl
add
jmp
das
mov
xchg
sub
lods
cmp
xor
sub
ss
in
stos
inc
in
lret
add
fisubrs
lods
insb
xor
repz
push
pop
xchg
cmp
pop
pop
test
das
sbbl
sahf
mov
cwtl
jno
mov
hlt
mov
mov
aas
hlt
movsl
push
add
xchg
sbb
rolb
cmpsb
ds
mov
pop
sbb
lods
mov
mov
std
or
icebp
push
add
stos
sbb
inc
mov
leave
jne
not
fidivs
and
daa
mov
clc
sahf
cmpsb
or
xor
cli
lret
mov
loopne
sub
push
movsl
xlat
and
or
test
sub
or
test
or
dec
and
pop
cld
jbe
mov
jge
popa
repnz
shll
cmp
daa
cmp
daa
dec
ja
data16
nop
sbb
stc
pop
rorl
xchg
mov
into
test
out
loop
imul
in
imul
sub
inc
cs
cld
jmp
andb
mov
ret
pop
popa
enter
push
cld
jl
mov
push
mov
pop
adc
jl
add
nop
sbb
sbb
mov
rolb
pop
pextrw
mov
mov
and
dec
jno
adc
notb
mov
and
data16
fidivs
sti
add
jbe
dec
ja
mov
push
xchg
mov
fsubp
pop
pop
jl
cmp
hlt
adc
sbb
popa
sbb
ja
dec
lret
loop
sub
test
lock
adcl
or
cld
loopne
clc
jae
sbb
pop
lock
or
cld
repnz
inc
fsubs
test
dec
mov
cltd
out
push
imul
lret
fidivl
ss
and
xor
popa
sub
sub
push
jnp
shll
pop
mov
jle
xor
fsubr
sbb
push
jl
xchg
std
stc
adc
sbb
stos
fwait
add
cltd
xchg
out
hlt
repz
pop
adc
xchg
scas
jp
adc
dec
test
xchg
lods
xchg
ret
in
ss
mov
and
cmc
sbb
flds
xchg
fdivs
outsl
xor
dec
or
ja
sbb
cltd
jbe
and
xchg
popa
insb
adc
bnd
in
clc
mov
loope
mov
pop
push
gs
cmp
jg
xorb
cmp
adc
mov
or
cld
sbb
mov
dec
in
adcl
nop
test
and
aaa
mov
sbb
cmp
fidivs
add
das
pusha
int3
and
pop
inc
dec
inc
mov
add
inc
mov
mov
cwtl
push
sarb
repz
ja
mov
jno
inc
xor
mov
add
sub
scas
cmp
or
xor
mov
out
out
cmp
test
adc
adc
sub
xor
inc
sub
push
mov
insl
stos
add
dec
js
sbb
dec
mov
lret
pop
aad
out
shlw
dec
fisubl
mov
addl
lahf
cltd
pop
adc
cmp
dec
int3
dec
iret
and
out
push
jae
div
jae
xlat
push
jmp
cli
icebp
inc
loopne
inc
ljmp
scas
out
dec
dec
ret
jmp
stos
call
adc
repnz
lock
pop
negb
pop
insb
out
pop
scas
adc
sub
call
dec
sbb
in
pop
cs
inc
pop
outsb
xchg
jo
sahf
push
loopne
out
and
push
dec
xchg
fs
shll
cmc
fstpl
daa
inc
mov
inc
sub
push
test
push
pop
scas
fbld
pusha
lods
loopne
fmul
add
lret
cmp
push
pop
dec
push
or
jns
or
xor
mov
lahf
sbb
mov
jo
jl
cmp
fdiv
push
mov
or
xchg
insl
test
popf
push
push
lock
pop
ret
lret
fbld
mov
pop
adc
sbb
loopne
xchg
dec
cmp
mov
dec
push
cmc
test
mov
adc
jb
leave
rcll
cld
in
inc
adc
andl
xchg
pop
faddp
or
inc
push
out
mov
ret
mov
or
test
repz
clc
dec
add
mov
adc
cwtl
cmp
repnz
das
out
mov
lds
mov
pusha
or
into
nop
and
jg
sbb
test
mov
adc
scas
and
lds
inc
fdivrl
in
inc
and
push
pop
jmp
jbe
xor
adc
stos
outsl
std
aad
fdivr
in
js
sahf
scas
mov
jge
push
cmp
or
scas
orb
xchg
out
ljmp
adc
sahf
or
rcll
mov
add
mov
data16
mov
xchg
imul
cld
mov
movsl
stos
test
pop
imulb
lods
pop
clc
sbb
xchg
test
cltd
and
icebp
outsl
loopne
cmc
stc
ret
shll
push
bound
lods
fisubs
imul
jbe
imul
pop
mov
inc
add
in
lock
scas
fs
ret
jo
test
scas
add
je
scas
xor
or
pushl
jae
nop
fldl
daa
mov
inc
lock
idivl
sbb
mov
insl
mov
xor
xlat
cmp
sbb
into
incl
lret
or
daa
mov
jmp
or
pop
mov
stc
sbb
ss
rcrl
nop
in
mov
sbb
mov
shrl
aas
adc
lret
std
dec
fdivrs
fs
cmc
enter
and
mov
sarl
cltd
stos
mull
xchg
bound
adc
xchg
adc
dec
pop
iretw
repz
sub
or
xchg
dec
fsubrs
push
or
sub
mov
inc
push
pop
pop
and
hlt
mov
sti
or
ljmp
jmp
imul
insb
int
adc
pop
out
dec
test
push
or
sbb
shr
cmp
fnstenv
push
inc
push
stos
stc
daa
jge
sahf
mov
loop
mov
lds
cmp
pop
inc
jo
lea
mov
push
out
push
stos
sub
ret
inc
ljmp
rep
fcoml
pop
jae
cld
fwait
adc
cmp
cwtl
jae
leave
rcrb
xchg
out
jbe
cmp
sub
mov
ljmp
mov
cs
push
pop
cli
and
mov
clc
mov
push
add
hlt
mov
xlat
ror
dec
dec
arpl
stos
jl
add
and
jno
xor
pop
cwtl
int3
inc
sub
fldenv
push
in
scas
lock
cmpsb
addr16
inc
mov
cmpsl
xchg
lods
je
and
lds
or
sub
test
in
push
or
xchg
mul
cmp
fdivr
movsl
stc
pop
cmp
sub
out
mov
daa
pop
pop
push
dec
in
cmc
mov
mov
add
mov
daa
out
mov
test
outsb
mov
xchg
ljmp
fdivrs
xor
pushf
insb
pop
imul
sbb
pop
dec
addr16
pop
dec
inc
fcompl
nop
mov
pop
cli
sbb
jge
push
mov
ja
iret
mov
or
hlt
dec
pop
cltd
ss
repz
sbb
xor
bound
mov
push
jle
in
mov
popf
fistpl
outsl
push
mov
sbbl
hlt
mov
xchg
rcrb
fwait
ja
jge
cmp
daa
leave
mov
mov
cmp
cmp
and
fwait
or
mov
cltd
das
int
jbe
jmp
outsb
pop
xor
push
ret
adc
pop
test
lret
out
jno
stc
dec
adc
cltd
arpl
mov
push
dec
mov
sbb
adc
ja
bnd
dec
dec
rol
nop
add
xchg
pop
les
div
int
pushf
xor
ljmp
mov
ljmp
sarl
popa
pop
in
lock
mov
add
or
repnz
ljmp
xor
popf
jmp
xchg
pop
testl
add
mov
push
lds
aad
ss
fimuls
pop
xchg
out
mov
mov
or
sbb
arpl
mov
stos
imul
pusha
mov
je
mov
push
jg
int
outsl
push
jb
loop
cmc
loop
or
push
mov
push
pop
aam
inc
xchg
or
aas
stc
adc
sub
or
jnp
fs
pop
es
sub
mov
fistps
pop
sub
mov
dec
into
pop
pop
pushf
jne
mov
xchg
jo
popa
andl
movsl
add
mov
mov
ljmp
inc
xchg
mov
mov
in
ljmp
adc
mov
sub
inc
std
addb
or
ret
shlb
mov
aad
aas
and
repz
notb
inc
pop
fs
mov
outsb
inc
sahf
hlt
push
push
mov
hlt
cltd
rclb
je
mov
in
jge
inc
cli
inc
xor
aam
adc
sbb
popf
xchg
stos
enter
add
sub
pop
xlat
callw
mov
push
jl
stc
jle
lahf
inc
add
sti
mov
xchg
push
cltd
or
imulb
arpl
imul
scas
xor
jg
jnp
rcll
roll
addr16
push
aas
pusha
fcmovu
dec
mov
shll
lahf
xor
mov
nop
mov
repz
cmp
push
jnp
mov
mov
adc
lret
ss
pop
cmp
cmp
xor
lret
cmp
arpl
sbb
iret
adc
sub
mov
fimull
ret
jecxz
cltd
les
bound
dec
mov
nop
pop
imul
mov
lret
adc
xor
sub
lds
add
lea
fsubl
stos
ficoml
mov
test
gs
cld
lods
dec
or
cmp
push
sarb
sbb
je
in
outsl
mov
aas
xchg
lea
cmpb
fwait
arpl
adc
cmp
test
repz
xchg
stc
aas
dec
or
push
cwtl
jb
stos
inc
mov
das
push
out
leave
out
ja
popf
mov
arpl
jg
pop
pushf
pop
sbb
sbb
int
scas
mov
push
fwait
mov
outsl
sub
mov
popl
in
sbb
sbb
inc
or
imul
xlat
outsb
andb
aaa
jne
es
push
push
or
cwtl
adc
jecxz
lods
subl
lods
xor
movsb
std
ja
jno
aaa
cmc
cwtl
sub
sbb
int3
or
cmp
sub
inc
xchg
enter
lds
mov
imul
loop
cwtl
or
cmp
or
rcll
add
push
aas
mov
jmp
adc
mov
mov
mov
push
push
sbb
rol
test
fs
mov
jmp
mov
int3
and
pop
pop
sub
sbb
gs
mov
ss
sub
lods
or
dec
fbstp
sti
bound
mov
aaa
sub
cmpl
pop
mov
adc
mov
icebp
push
xchg
pop
xchg
push
sbb
arpl
and
mov
xor
cld
push
dec
fisttpl
xchg
jae
sub
push
je
jg
sbb
jne
inc
adc
fsubr
lahf
push
cld
popa
mov
push
cmpsb
or
jns
leave
mov
xchg
xchg
push
js
insb
mov
add
fstl
cli
xchg
cli
adc
roll
mov
js
arpl
cmp
mov
cltd
rcrl
mov
lcall
and
movsb
and
xchg
mov
and
mov
lret
mov
and
add
fld
jecxz
sub
fldcw
dec
lock
pop
call
or
fs
jne
hlt
sub
cltd
push
das
pop
gs
aas
imul
fsub
or
lods
xor
lcall
push
lds
je
mov
popa
inc
fsts
cltd
push
daa
mov
scas
lock
jo
jo
and
sbb
mov
mov
mov
mov
pop
enter
xchg
sbb
dec
mov
mov
xor
shll
out
jecxz
cmp
pop
xor
hlt
lea
push
pop
mov
sub
fucomip
inc
bound
iret
push
xchg
test
popf
icebp
mov
scas
push
call
sahf
ss
xor
lcall
add
fisttps
or
inc
xchg
cmp
push
push
dec
pop
test
sub
dec
push
mov
jecxz
mov
ja
call
pop
jae
sahf
std
out
jge
clc
in
xchg
mov
test
stc
rorb
inc
push
lret
aaa
mov
sbb
jge
push
mov
data16
xchg
pop
jbe
and
adc
xor
dec
fisubrl
sub
mov
loopne
dec
xchg
mov
lock
push
push
dec
subl
insl
sub
sub
movsl
mov
and
adc
ret
mov
sbb
mov
adc
loop
lods
mov
movsl
imul
fs
pop
sbb
out
divb
sbb
data16
pop
insb
push
scas
push
adc
test
inc
pop
mov
mov
imul
ss
mov
ss
orl
enter
mov
inc
mov
pop
sti
sub
push
push
mov
outsl
inc
xorl
mov
jmp
rclb
inc
shll
mov
stc
cmp
data16
lret
int3
push
cmpsl
js
loope
pop
les
mov
lods
xchg
xchg
mov
cmpb
and
loop
in
push
cs
test
mov
mov
jg
ss
insb
aam
popa
or
mov
push
jl
push
push
mov
daa
xchg
ret
pop
mov
cltd
rol
btc
sub
push
add
or
shll
fimull
xchg
divb
xlat
aad
add
xchg
or
jae
or
cmc
lods
out
dec
mov
pop
icebp
leave
add
sarl
pushf
jge
idiv
dec
int3
push
push
inc
mov
xor
out
pop
inc
jno
mov
lock
lahf
adc
jg
fcmovnu
aas
jg
enter
in
dec
in
add
mov
aaa
int
push
lock
movsl
inc
out
ljmp
arpl
and
pop
add
inc
lret
pop
stc
mov
and
hlt
jb
sarl
outsb
push
xchg
cmp
jae
jmp
popa
dec
popf
mov
xor
xchg
pop
jp
mov
cmp
jns
notb
sub
cli
inc
dec
aad
lahf
aam
xchg
add
inc
mov
movsb
mov
jmp
test
stos
nopl
sbb
push
stc
cltd
inc
in
loopne
mov
cmp
mov
jo
frstor
ficomps
into
in
add
cmp
or
adc
add
mov
cli
ss
imul
scas
adc
xchg
popa
cmpsl
push
add
sarl
dec
mov
inc
xorb
in
jbe
push
inc
imul
in
pop
push
adc
adc
repnz
and
jmp
jle
push
inc
and
push
xor
or
sub
enter
iret
rorl
sbb
push
outsb
xor
jle
inc
jmp
mov
into
sub
and
in
andl
inc
cmp
cwtl
into
jmp
sub
pop
insb
imul
jmp
cmp
rclb
mov
shl
adc
imul
sbb
or
loope
adc
enter
pop
lcall
out
out
mov
sti
insl
cmc
dec
aaa
xchg
faddp
xchg
dec
out
jne
cmpsb
jl
mov
xor
movsb
or
mov
sbb
in
int3
mov
cltd
or
mov
adc
xorl
bound
mov
pop
lock
jecxz
xor
imul
ret
test
xchg
jl
stc
mov
dec
cmc
inc
js
xchg
dec
inc
dec
nop
jno
nop
inc
or
pop
mov
inc
in
imul
dec
lret
cs
adc
fcmovne
dec
xchg
adc
es
jmp
repnz
mov
bnd
ja
xor
sub
sbb
xor
lock
xchg
outsb
lods
fildll
sar
adc
dec
mov
aad
lock
bound
insb
cpuid
pop
inc
lret
pushf
and
ss
jb
out
iret
push
faddl
push
push
test
push
idivb
in
aad
idiv
into
lret
jbe,pt
mov
dec
xchg
gs
push
jne
dec
loopne
adc
inc
sbb
fdivrs
nop
xchg
fildl
imul
xlat
rcrl
and
out
inc
add
cli
sahf
adc
sub
jmp
and
test
mov
push
sti
std
mov
movsl
es
cwtl
xor
jmp
fbld
jae
push
jns
mov
jae
cmpsl
cltd
rcr
dec
adc
call
jmp
fiadds
cmpsb
sbb
cli
in
mov
push
cs
lret
cwtl
add
cmc
adc
and
loopne
fstl
and
fstps
mov
pushw
ljmp
loopne
pop
rcrl
imul
jbe
push
out
cmpsl
mov
into
in
or
push
xchg
mov
xor
test
cmp
inc
scas
jb
adc
lahf
or
add
psubsw
aad
xor
cli
sbb
jp
fcomps
addl
xor
leave
ja
xor
cld
jns
lods
or
dec
xchg
test
xor
insb
or
push
pop
and
push
ja
mov
mov
sti
fisubs
xor
xchg
push
dec
in
and
and
std
fucom
sub
repnz
ret
mov
xchg
add
jae
scas
sub
sub
cld
movl
pop
inc
leave
xlat
pop
aam
jns
call
mov
inc
inc
or
popf
cmp
sbb
cmc
cmp
es
testl
xor
cmc
push
pop
xchg
cmp
imul
int3
or
and
mov
dec
into
xchg
stc
xor
mov
popf
int
mov
cmp
mov
sarb
xchg
repz
adc
in
mov
into
pop
insb
in
cli
mov
sub
out
pop
mov
scas
mov
xor
add
mov
iret
mov
and
xchg
mov
rorl
mov
iret
adc
outsb
dec
push
popf
inc
idivl
lret
mov
fidivl
sbb
popa
fidivrl
inc
mov
jae
ret
insb
packssdw
movsb
push
aaa
cmp
jecxz
pop
xchg
xor
xchg
into
inc
lea
bound
pop
insb
adc
fldt
insl
rolb
or
orl
cmc
push
push
std
jns
mov
insb
lock
mul
add
jg
loop
roll
dec
mov
addb
sahf
jl
dec
xchg
inc
movsb
pop
add
std
add
pop
fsubl
jge
les
test
ja
dec
ds
lea
popf
in
insb
adc
sub
xchg
jb
ja
xor
pushf
adc
outsl
lret
cmc
pusha
das
mov
sahf
jae
popf
mov
lret
ja
into
push
xchg
and
or
inc
xchg
scas
push
cmp
dec
jbe
jb
mov
loope
loop
imull
push
lret
mov
das
stos
jg
fnsave
and
and
ret
mov
adc
bound
outsl
repnz
cld
inc
mov
je
jne
xchg
push
leave
or
dec
sbb
jb
mov
lods
sbb
dec
push
dec
mov
sbb
dec
xor
add
push
add
dec
loopne
out
das
mov
pop
cltd
adc
mov
loope
push
aam
inc
lea
shll
push
xchg
ds
and
repnz
lods
in
insl
clc
pop
inc
pop
test
cmpsl
inc
test
cmp
xor
xchg
mov
pop
sbb
inc
stos
clc
fucomi
mov
xchg
xor
dec
std
shrl
in
push
insl
pusha
int
xchg
gs
sub
testb
mov
lcall
xchg
nop
and
pushl
jne,pt
dec
inc
aas
mov
push
xchg
xchg
rcrb
insb
inc
mov
cmp
cmp
inc
push
scas
popa
call
in
jo
inc
sahf
pop
jmp
aad
test
in
push
xchg
adc
push
cmpsb
scas
jmp
stc
pop
cmp
cmp
pop
imul
inc
jo
jns
stos
xchg
imul
jp
test
sub
sahf
mov
sbb
mov
adc
dec
push
push
sub
dec
call
inc
in
mov
rcll
scas
dec
repz
nop
mov
sub
add
repnz
dec
stos
mov
jns
inc
xchg
out
test
fdivs
lcall
adc
mov
rolb
xlat
fsubrp
xor
jns
inc
std
add
and
lds
cmpsl
cmp
sbb
pusha
jle
bswap
xor
or
leave
sbb
int
dec
and
xor
lock
loopne
xor
into
mov
fs
outsl
orl
xchg
sbb
std
es
push
test
fstps
xchg
add
lret
ret
inc
sbb
jbe
add
jecxz
mov
hlt
in
ja
inc
call
pop
jbe
xchg
out
je
fstps
mov
in
iret
gs
mov
mov
dec
xor
jnp
insb
aaa
xor
dec
out
pop
fcos
mov
ret
ss
scas
and
imul
jne
testl
push
mov
clc
sub
pusha
mov
shrb
inc
ficompl
dec
mov
fists
sbb
mov
or
cmp
cwtl
clc
jp
add
sub
dec
rcll
pop
push
jg
pop
mov
add
movsl
out
cmp
test
and
icebp
add
das
incl
in
push
jmp
add
or
add
inc
fmulp
fidivl
mov
div
je
xor
sub
pusha
dec
sbb
sub
insl
test
aaa
sub
fistps
lret
out
adc
adc
sub
pop
sub
imul
push
ret
inc
pushf
inc
shlb
mov
fdivs
arpl
dec
jmp
dec
les
fucomi
rol
out
push
pop
lret
dec
mov
jl
mov
adc
into
adc
adc
lret
shrl
aad
idivb
xchg
pop
jnp
xchg
cmp
mov
mov
or
push
jmp
mov
dec
ds
or
aad
pop
xor
push
inc
or
pushl
pop
sahf
addr16
push
mov
stc
and
pop
mov
in
pop
lods
call
fisubrs
nop
xor
leave
addb
fdivr
push
sbb
adc
mov
adc
loop
ret
add
jp
stos
leave
push
mov
sbb
cmpsb
cmp
cmp
adc
les
jmp
fadd
jg
adc
dec
add
icebp
ss
ja
cmp
pop
es
xor
aas
cwtl
stos
scas
out
inc
popa
sbb
jecxz
dec
jmp
into
dec
flds
pop
out
pop
lcall
mov
jmp
cmc
cs
shll
std
add
xorb
jns
mov
xor
xchg
cld
adc
sahf
shl
push
fisubs
push
stos
and
mov
mov
mov
xor
mov
dec
mov
fs
jno
fistpl
ret
gs
pop
jge
lret
cmpsb
sbb
call
iret
fisubs
lods
aad
push
and
and
idivb
mov
jne
ss
in
or
mov
mov
test
ret
cmp
jecxz
xor
lods
inc
fwait
int3
add
stos
mov
imul
xor
mov
inc
jmp
jge
aas
lcall
fcmovne
inc
push
jno
mov
out
push
inc
arpl
mov
std
mov
fiadds
int3
jge
ds
sub
mov
out
cmpsl
dec
and
xor
lods
push
pop
in
push
mov
sbb
inc
mov
sub
inc
cmp
dec
xchg
lea
or
inc
add
sbb
cld
call
xlat
mov
and
ja
mov
ljmp
insb
cmpsb
cs
mov
jle
push
orl
push
adc
jae
mov
cmp
inc
mov
mov
mov
es
inc
mov
push
loopne
fwait
stos
pop
ds
lahf
call
stos
mov
sbb
gs
jge
or
jnp
es
adc
jae
pop
lock
sbbl
mov
ds
fdivl
lock
leave
mov
gs
xor
and
adc
xchg
test
test
push
mov
and
adc
es
push
outsl
push
xchg
jae
jg
inc
xchg
call
pushf
mov
mov
pop
loope
ja
sub
dec
mov
mov
adc
xor
and
or
mov
xchg
cmp
lahf
test
inc
test
mov
push
je
das
fdivrl
dec
in
mov
and
scas
push
sub
adc
stos
mov
shl
mov
lcall
mov
les
mov
and
fnsave
inc
cmp
mov
pop
xor
push
adc
mov
dec
int3
popf
std
push
or
lahf
pop
xchg
insb
lods
adc
lret
pop
mov
pop
mov
sbb
je
lock
mov
pop
cltd
popf
enter
xor
shll
cmpb
sub
ds
sub
cmp
loop
ret
ret
popa
leave
adc
fwait
test
push
ficoml
add
cmpsb
addl
push
sbbl
push
push
clc
mov
hlt
bswap
push
lock
add
testl
inc
mov
sub
test
mov
or
pop
cmp
sbb
sbb
mov
xor
das
dec
popf
xchg
cmp
xor
and
mov
xor
xor
cmpsl
inc
mov
sbb
pusha
jbe
or
mov
mov
ret
inc
bnd
xchg
movsb
movsb
sahf
imul
pop
mov
lret
cltd
fs
jecxz
bound
sub
movsb
push
lcall
por
test
jb
mov
stos
iret
pop
fs
nop
pushf
scas
lods
das
arpl
jno
mov
pushf
out
movsb
sbb
push
in
ss
stos
idiv
mov
inc
mov
mov
mov
lods
mov
sbb
test
pop
push
mov
and
out
ret
imul
cs
aaa
cmp
and
fidivrs
pop
fiaddl
or
movhps
ficoms
xchg
xorl
sub
jl
call
sbb
arpl
jbe
imul
enter
test
jnp
mov
cmc
sub
mov
loopne
cli
popf
jnp
iret
pop
pop
clc
into
push
or
pop
popa
lds
push
sbb
mov
add
jne
sbbl
sub
push
pushl
add
push
and
or
push
cli
mov
int3
pop
test
mov
lods
xchg
movb
adc
ss
cmp
mov
sub
ffreep
push
shlb
leave
pusha
cmp
sbb
cmp
inc
divb
mov
loop
pushf
addr16
cmpsb
and
add
adc
xchg
jge
sbb
and
test
fmull
fisubrs
adc
jecxz
adc
fwait
jl
out
adc
dec
or
mov
cmpsl
pop
fists
mov
inc
movsl
jecxz
iret
inc
loope
in
rcll
out
jle
xchg
mov
arpl
dec
nop
sub
mov
aaa
inc
mov
sbb
out
inc
cmp
jmp
push
mov
popa
mov
push
repz
out
leave
add
mov
es
fisubs
stc
sbb
pop
clc
mov
bound
pop
dec
or
hlt
in
fdivrs
jp
mov
push
push
insb
outsl
mov
pushf
mov
in
stc
out
sti
cltd
mov
stos
mov
dec
mov
loope
mov
inc
sub
cmp
push
jmp
jmp
ss
jns
mov
jbe
in
sbb
xchg
dec
je
je
xchg
scas
aas
dec
push
mov
lds
mov
out
icebp
lahf
mov
or
insb
pop
mov
push
sub
insl
mov
fsubr
pop
stos
fildll
jmp
pusha
jbe
or
adc
scas
pop
inc
mov
mov
dec
inc
in
mov
mov
push
cmpsb
fldenv
test
gs
repz
push
pop
rcll
cltd
jp
scas
or
add
inc
cmpsl
mov
sub
and
divb
mov
clc
imul
inc
call
adc
mov
push
and
lcall
sub
jnp
push
sahf
jb
cli
xchg
sbb
outsb
mov
lock
or
lcall
mov
gs
in
les
mov
mov
mov
mov
sbb
mov
cwtl
stc
mov
mov
cmpb
xchg
xchg
sub
mov
add
in
xor
cmp
jns
mov
into
popa
lea
jg
scas
xchg
and
sbb
call
adc
push
je
xchg
mov
test
outsb
int
adc
aam
inc
stos
xchg
inc
sarl
into
mov
inc
test
movsb
test
and
sti
inc
jb
lret
pop
push
popf
dec
and
sbb
rcrl
mov
je
push
jns
or
inc
popl
movsb
popa
cmpsb
mov
cmc
inc
adc
xor
mov
inc
mov
aam
nop
cwtl
je
mov
xchg
outsl
pop
add
pop
movl
daa
mov
add
lock
mov
push
cli
xchg
pop
out
and
test
aas
data16
cmp
pop
inc
xor
loop
shld
cmpsl
mov
loope,pt
das
pop
xchg
push
lods
nop
jae
lret
pop
aaa
hlt
dec
jecxz
call
mulb
mov
mov
inc
rcrb
rol
dec
bound
into
sub
js
jo
add
es
push
add
mov
leave
jns
cltd
inc
jecxz
mov
popf
out
leave
negb
xor
repnz
cltd
jbe
xor
lods
dec
mov
rcrb
mov
repnz
and
cmp
inc
xchg
fsubl
mov
fnstcw
cmpsl
repz
sub
xor
mov
hlt
sti
stc
sbb
sbbb
out
and
sbb
sub
sbb
push
mov
sub
fnstcw
movsb
call
mov
jb
negl
inc
hlt
out
push
repnz
jle
out
mov
xchg
in
mulb
aaa
and
push
repz
xchg
mov
jmp
add
push
and
xlat
jne
addl
mov
sub
jo
push
pushf
testl
push
jnp
sbb
sub
enter
xchg
shlb
sub
mov
movsl
and
or
in
inc
pushf
xchg
sub
out
xchg
cmp
push
mov
pop
cmpsb
cwtl
dec
loopne
test
push
sbb
test
clc
aas
add
mov
mov
sahf
jecxz
xor
mov
in
aas
aad
and
xchg
and
push
mov
shll
jno
pop
push
or
hlt
imul
lret
ja
dec
cmp
loope
frstor
outsl
dec
movsb
jl
xchg
add
push
jae
or
sub
outsl
jns
je
rcrb
fisttpll
mov
mov
loope
arpl
cmpsl
clc
cmpl
flds
sahf
cltd
rorl
lahf
pop
das
xor
inc
imul
jns
cli
dec
test
insl
fstpl
loope
fmull
testl
mov
in
sub
ret
adc
jecxz
inc
dec
and
lret
std
push
push
rclb
js
adc
dec
fdivrl
lock
inc
je
push
mov
add
xchg
repz
xor
in
nop
cmp
loope
cmp
cmc
mov
stos
sub
pop
pop
mov
jnp
dec
out
push
xor
push
xchg
push
popa
js
iret
add
in
out
dec
mov
inc
test
pop
sbbl
nop
jmp
icebp
pusha
addr16
sub
je
lahf
inc
mov
gs
jl
inc
mov
xchg
adc
xor
xor
pusha
out
out
stc
or
sbb
xor
in
jp
add
jo
imul
xchg
xlat
int
adc
xor
pop
xchg
inc
movb
pop
rcrb
in
jne
mov
push
fwait
xor
xchg
cmpsb
pop
cmp
call
push
sbb
fstpt
sub
addr16
fadd
pop
dec
cmpb
dec
push
and
mov
xor
aad
in
fadds
and
test
jp
daa
push
mov
negl
loope
popaw
arpl
cmpsb
cwtl
jb
filds
inc
dec
pop
js,pt
xor
popf
jno
jmp
and
pop
and
loop
imul
adc
pop
bswap
dec
adc
jecxz
pop
aaa
rcrb
repnz
insl
clc
jne
cmpb
out
sub
das
lods
mov
nop
in
lret
jo
mov
stos
int3
loopne
scas
int3
mov
bound
test
jmp
stos
mov
out
xor
xor
ficoms
dec
leave
insl
cmp
push
sbb
call
adc
stc
in
inc
outsl
and
fstl
cltd
not
mov
sbb
repz
hlt
gs
cmpsl
loopne
mov
mov
adc
aam
mov
scas
fs
inc
movsb
mov
in
aas
lahf
fwait
mov
jmp
mov
fisttpl
cmpl
and
and
jl
adc
inc
sbb
lds
shl
jno
fisttpll
test
inc
call
push
cmc
cli
xchg
mov
or
je
dec
dec
mov
pop
popa
jp
mov
fistps
call
fbld
scas
mov
sub
out
add
cmpsl
sahf
xorl
pusha
aaa
addr16
cmp
aad
and
mov
dec
rcrl
in
lock
dec
xchg
popf
imul
mov
sbb
test
or
xchg
lret
js
jle
mov
cmpsl
mov
imul
jbe
aas
inc
or
xchg
xor
mov
sbb
or
rcrb
outsb
or
add
sub
jmp
push
dec
and
dec
inc
in
stc
cmp
push
add
ret
std
mov
pop
cmp
aaa
adc
cmpsb
test
bound
push
sahf
push
inc
inc
cltd
mov
daa
mov
adc
cmp
add
neg
dec
ljmp
mov
and
jmp
jns
xchg
push
call
or
sub
out
jae
mov
jno
xor
push
inc
mov
pushf
scas
mov
aam
pusha
push
dec
call
pop
jno
cltd
push
outsl
data16
jno
sub
push
xchg
or
ljmp
jmp
xor
loope
sub
cmpsl
dec
dec
adc
mov
cltd
sbb
xchg
and
xor
jl
jae
mov
xchg
icebp
xor
sub
cmpsl
sub
add
inc
pop
adc
scas
test
jmp
xor
and
repz
lcall
repnz
sub
js
bound
cli
or
gs
cli
mov
and
cmpsl
mov
xlat
in
inc
or
fwait
lcall
push
insl
into
or
test
dec
add
aas
jae
xchg
push
sti
mov
sbb
dec
mov
and
mov
push
dec
push
adc
or
in
dec
jge
je
and
or
mov
shlb
int3
jns,pn
and
fisttpll
inc
add
or
or
in
or
das
or
outsl
push
gs
and
xor
sbb
xchg
rcll
imul
sbb
sbb
sub
aad
loop
pushf
inc
mov
xor
xchg
push
or
cmp
in
fs
mov
pop
inc
cmp
xchg
lea
sub
int3
movsb
jle
imul
aas
fcmovnu
adc
std
adc
clc
pop
mov
mov
pop
std
or
addr16
ret
sub
jnp
les
mov
lea
xchg
push
lcall
mov
aad
sub
mov
out
or
mov
ja
sub
mov
cmp
mov
idivl
xor
xor
pop
sarl
mulb
sbbl
nop
or
xchg
ljmp
jle
in
pop
mov
test
sti
mov
ss
in
and
mov
popa
cmpsb
cld
jnp
les
loopne
push
cmp
nop
mov
xchg
push
loopne
cmc
xchg
add
add
jno
cmp
ror
lahf
bound
adc
xchg
push
and
rol
or
xor
sub
loope
inc
pop
push
push
out
adc
call
lret
mov
mov
xchg
fs
loope
push
leave
imul
into
adc
pop
sbb
nop
dec
insb
out
ljmp
stc
inc
xchg
xchg
leave
jns
sbb
test
mov
sub
sbb
sbb
xchg
test
push
push
loope
rep
inc
bound
mov
cmp
jae
stos
push
or
sub
push
ss
adc
faddl
sahf
jne
negb
into
lcall
std
das
jo
ljmp
test
mov
add
push
clc
pop
cmp
mov
sub
stc
push
xchg
test
fwait
push
xchg
jnp
mov
into
add
movsl
repz
sub
sbbb
jmp
jmp
xchg
mov
aas
dec
fnstsw
push
test
or
xor
or
loopne
addr16
out
push
lcall
dec
or
inc
sub
fldcw
int3
inc
mov
flds
or
cltd
repnz
lds
xchg
jecxz
incl
push
and
push
xlat
dec
xor
push
add
mov
inc
mov
daa
lods
adc
mov
js
lret
jle
mov
bound
sbb
outsb
pop
lods
dec
push
insb
mov
xchg
lret
jne
mov
ja
mov
jns
push
and
js
pushf
lahf
xchg
and
fiadds
xchg
ljmp
lods
mov
push
pop
les
pop
repnz
roll
adc
lret
xchg
mov
push
sub
and
xor
push
push
fwait
dec
rclb
pop
icebp
mov
flds
mov
cmp
movsl
pop
test
mov
pop
popa
push
stc
jmp
outsb
mov
xor
push
mov
jmp
dec
add
je
xchg
push
icebp
push
mov
sub
mov
out
mov
jb
jmp
pop
push
adc
aaa
sbbb
stos
adc
or
sub
hlt
mov
je
or
dec
pop
fcompl
clc
pop
cli
nop
jp
adcl
dec
cmp
jb
or
xor
mov
leave
lret
sbb
cmp
shl
mov
cmpsb
out
int
jne
add
int3
dec
iret
xchg
mov
mov
xchg
lds
lret
lods
fstpl
cmp
mov
adc
mov
sahf
dec
push
jno
cld
inc
das
out
lcallw
dec
push
loope
fadds
xor
inc
fwait
mov
pusha
mov
sub
stos
mov
ret
addr16
and
leave
int
pop
pop
sub
int3
fsubl
add
shll
jle
out
aam
sbb
je
or
push
mov
test
pop
das
enter
add
mov
add
pop
mov
roll
mov
sub
repz
lods
imul
dec
inc
xor
mov
and
jl
test
mov
pop
imul
scas
and
ljmp
inc
std
das
add
sbb
push
sti
inc
arpl
loopne
push
push
and
inc
sbbb
mov
pop
cmpsl
dec
xor
mov
inc
cmp
shll
aaa
add
pop
sbbl
xchg
or
or
xchg
or
enter
jo
cld
mov
mov
pop
mov
sbb
andl
test
push
loopne
movsl
js
out
push
ljmp
es
fs
stos
fwait
xor
push
inc
jo
clc
sub
inc
add
das
insb
xchg
hlt
mov
testb
loopne
and
lret
in
repnz
push
xor
imul
rclb
mov
cmp
or
out
mov
xchg
pop
sahf
sub
dec
inc
addr16
nop
mov
stos
sbb
movsl
in
mov
outsb
inc
mov
int
sub
and
dec
add
pop
xchg
imul
mov
dec
mov
jmp
dec
std
testl
iret
outsb
shl
jmp
adc
call
sub
pop
add
fisubrs
int3
inc
loope
xchg
adc
lret
inc
dec
xchg
stc
scas
mov
int
loope
adc
push
test
xchg
adc
imul
dec
or
jbe
loop
mov
inc
repnz
cmp
push
movsb
movsl
faddl
adc
iret
pop
mov
shll
dec
fwait
lock
xchg
cmp
ret
sbb
nop
mov
pop
xchg
jmp
cltd
xchg
jmp
inc
int3
nop
ss
jmp
popa
xor
cmp
mov
rcrl
xlat
sub
movsl
mov
imul
cmp
fcomp
sub
popf
movsb
pop
jle
sbb
inc
loop
mov
pop
lods
fwait
pop
push
dec
xor
mov
xor
and
jg
jle
decl
xlat
cmp
in
aad
aam
int3
out
add
cltd
mov
and
gs
mov
and
je
lret
cmp
xor
outsb
add
cmpsb
fistps
js
lock
pusha
sarb
subl
jnp
fsts
and
or
stc
lea
sub
push
inc
mov
cmpsl
out
or
cli
fisttps
or
leave
sub
and
into
xchg
jmp
pop
adc
pop
mov
xchg
aaa
bound
push
sbb
pop
sbb
repnz
cs
mov
and
mov
jne
mov
and
mov
xchg
add
rcrb
into
or
pop
int3
aam
nop
or
es
mov
scas
enter
sbb
scas
push
ljmp
scas
sub
mov
loope
sbb
sub
aas
stos
xchg
int3
lods
les
mov
jge
lods
stos
dec
into
cmp
shll
push
test
imul
mov
cmpsb
inc
aad
bound
xchg
and
je
sbb
int3
test
fxsave
les
testb
jmp
mov
test
inc
lret
punpckhbw
pusha
xchg
scas
pop
push
jle
jno
int
jb
mov
mov
mov
mov
idivl
sub
jg
popl
or
bound
pop
push
sub
mov
ret
lret
test
call
mov
jno
and
rclb
aad
cwtl
sbb
pop
xchg
dec
dec
xor
fs
or
mov
cmpsb
dec
dec
ror
out
dec
adc
mov
lahf
lret
and
push
xchg
pop
dec
mov
cltd
adc
lods
mov
inc
xorb
fwait
outsl
clc
mov
mov
cmp
mov
and
ja
int3
mov
std
ds
jnp
sbb
sbb
iret
and
or
jno
jbe
xchg
mov
cmpsl
sub
pop
jmp
pop
mov
mov
dec
lods
icebp
xor
hlt
and
sbbb
jnp
fildll
lods
jno
xchg
sysenter
push
mov
inc
sbb
insb
adc
inc
lods
in
or
fstps
inc
and
ret
mov
fadds
enter
and
mov
jnp
sbb
inc
jae
pop
add
sahf
cmp
ljmp
jg
inc
mov
push
cmpsl
xchg
cmp
push
ja
push
daa
pop
cltd
pop
jmp
sub
adc
mov
mov
shlb
sbb
sbb
sbb
incb
std
mov
mov
xchg
xchg
dec
xchg
mov
decb
mov
sub
repz
inc
push
adc
ret
in
rcr
xchg
mov
jge
mov
and
pop
das
dec
dec
mov
loop
inc
rcl
or
pop
mov
insb
sahf
pusha
repnz
hlt
adc
test
pop
imul
pusha
sbb
leave
sbb
or
sbb
jmp
mov
ljmp
mov
jle
push
mov
add
call
cld
aad
pop
popw
jbe
cmp
inc
or
dec
repz
xor
sbb
nop
sahf
lret
cwtl
outsb
or
fucomp
xchg
jmp
ss
dec
pop
xlat
repz
or
jne
and
pop
sbb
cs
popf
jne
jbe
cld
cwtl
or
testl
and
push
test
sbb
pushf
sbb
pusha
bound
ret
test
clc
jge
and
inc
pop
mov
sbb
fldenv
mov
add
fsts
shrb
add
add
cvtps2pi
lret
push
addl
mov
pop
out
in
xor
cmp
add
lcall
jge
or
int
clc
cmp
js
jle
xlat
rcrl
jb
xor
es
mov
sub
pop
adc
imul
aaa
lock
inc
repz
dec
cmp
cltd
pop
mov
cmpsb
lock
insb
xchg
xor
mov
outsb
orb
push
and
or
cmp
mov
ljmp
push
pushf
inc
mov
mov
lahf
sub
scas
and
leave
xor
outsb
mov
mov
jmp
es
std
and
adc
push
or
xchg
push
ud2
mov
xlat
shrl
inc
adc
rclb
and
cmp
sti
xor
in
push
lahf
ja
loope
and
push
icebp
xor
pop
es
addr16
xchg
js
inc
mov
ljmp
push
lret
fidivrl
xchg
sbb
pop
pop
jo
pop
sbb
jbe
or
fisubs
in
and
loope
mov
hlt
nop
mov
lcall
in
sub
push
pop
sub
jmp
or
push
inc
cmp
sti
aam
sub
dec
lods
out
dec
pop
sti
les
mov
je
iret
scas
repnz
mov
xor
xlat
shr
add
pop
outsl
sbb
pop
xchg
neg
or
outsl
mov
or
test
test
outsb
xchg
aam
scas
dec
outsl
sub
sti
stc
xchg
test
jns
and
and
push
mov
int3
add
dec
xor
jnp
in
jl
ret
push
add
mov
shll
and
repz
cli
repz
push
pop
repz
xchg
enter
dec
ret
iret
jb
pop
mov
std
in
xchg
imulb
adc
cs
or
mov
rcrl
fildll
dec
inc
out
add
insb
push
mov
pop
fs
mov
pop
and
rolb
dec
and
rorl
pop
das
icebp
loopne
repnz
daa
adc
js
mov
in
mov
pushf
addr16
mov
adc
inc
push
cmp
dec
das
xchg
push
rdtsc
call
and
in
add
in
cmp
or
jo
sti
push
dec
out
shll
jne
and
ret
insl
dec
ljmp
mov
bound
push
and
repnz
lahf
cwtl
stos
xchg
fs
jp
xor
out
ret
push
dec
sbb
jb
adcb
jbe
mov
pop
stos
fwait
mov
dec
out
inc
push
pop
mov
push
jmp
popf
cmp
fbld
and
popf
sub
arpl
or
dec
and
loopne
pop
jle
sub
lock
sub
lret
testl
andb
stos
jl
in
pop
lcall
push
leave
loop
test
pop
dec
aaa
push
sub
pop
std
sub
loop
adc
cmpsb
mov
aam
or
sbb
cmp
pop
cmpsl
and
lret
aas
cli
jns
pushf
xor
daa
pop
out
push
xacquire
inc
cmpsb
xchg
jo
stos
popf
imull
push
or
jo
mov
mov
in
sbb
inc
arpl
and
sbb
fsts
das
leave
imul
aas
jne
pop
mov
movsl
fnstcw
mov
pop
adc
add
mov
adc
insb
arpl
rorb
cltd
push
lret
adc
divb
cmpsb
add
sbb
sub
fs
call
inc
inc
mov
mov
cmp
icebp
sbb
orb
out
enter
inc
pop
outsb
mov
xchg
mov
mov
fisttpl
mov
xchg
or
fcos
out
push
adcl
jbe
mov
mov
mov
pop
push
ret
adc
nop
lahf
fwait
popf
js
mov
and
mov
das
fmul
dec
cwtl
or
or
jne
inc
and
push
sub
lock
cmp
in
daa
clc
or
stos
cmpsb
cs
xchg
outsl
enter
inc
into
cltd
or
sub
mov
sub
xchg
mov
mov
loopne
ficoms
sahf
pop
ja
cmc
test
fwait
pop
jp
jno
mov
mov
call
dec
xchg
push
dec
sbbl
adc
mov
and
imul
cli
out
inc
add
ret
push
cmp
jl
loope
in
push
mov
sbb
sbb
mov
pop
cmp
sbb
std
mov
test
test
xor
call
mov
mov
int3
nop
inc
pop
stc
jg
pushw
cmp
dec
jmp
xlat
cwtl
jbe
int3
testb
push
mov
imul
jbe
loop
push
xchg
pop
stos
ss
int3
push
mov
test
test
add
mov
fldenv
test
repz
scas
in
mov
dec
jne
push
iret
les
push
pop
bound
mov
stc
mov
dec
out
xor
add
or
push
mov
mov
dec
jecxz
sub
into
push
xchg
cld
xor
int3
pop
leave
push
mov
nop
xor
adc
jl
or
inc
xor
enter
fildl
and
ret
lahf
inc
mov
aas
jb
sbbb
sub
pop
mov
test
imul
xchg
loope
add
int
sbb
lock
in
push
lcall
loopne
cmp
or
mov
sbb
inc
faddp
sub
xchg
xlat
mov
cmp
adc
inc
push
dec
and
mov
xor
mov
jns
pop
in
subl
out
cmc
loopne
cmp
test
xchg
xor
xchg
fcompl
dec
and
std
icebp
fstps
xchg
icebp
xor
scas
sbb
test
jmp
pushf
sahf
mov
cmpsl
xchg
push
dec
or
adc
outsb
mov
int3
cmc
xorb
daa
xor
cmpl
clc
into
push
inc
adc
xchg
sarb
lcall
movhlps
adc
sbb
lret
xchg
xchg
into
push
xor
popa
cltd
test
mov
lcall
fidivrl
pop
das
jl
pop
xor
sbb
sub
or
jg
ja
clc
push
mov
push
hlt
jecxz
push
nop
icebp
loope
xchg
push
xchg
rorb
outsb
adc
xchg
mov
push
push
test
lds
mov
inc
inc
and
xchg
dec
cltd
and
repnz
in
aas
jae
jle
sbb
jne
xorb
paddd
cmp
clc
gs
clc
xchg
fs
push
loop
push
ja
out
pop
pop
out
jle
sub
shl
repnz
push
fldl
mov
dec
cvtps2pi
xor
jae
lret
pop
out
das
scas
fists
adcl
fldl
in
ljmp
dec
xor
dec
arpl
push
push
push
andl
or
add
cwtl
push
add
hlt
js
jns
inc
test
cli
or
dec
fs
shr
xor
dec
sub
arpl
add
lahf
jle
jl
jmp
xchg
dec
or
inc
pop
mov
cmp
pop
inc
sahf
mov
sub
sub
lods
dec
cmp
loop
add
sti
adc
pop
mov
mov
adc
adc
adc
shr
cmp
push
lods
push
iret
out
or
xor
dec
or
mov
jbe
je
pop
xor
xchg
adc
cs
cwtl
sbb
int
popf
jns
aam
sbb
mov
test
faddl
xchg
xchg
and
fidivrs
into
test
inc
mov
shll
inc
je
enter
pop
xchg
mov
test
mov
sbb
test
fiadds
mov
fs
mov
push
ljmp
pop
jae
dec
jbe
push
and
mov
push
addr16
and
test
jns
scas
fsubrl
enter
xchg
inc
scas
push
mov
mov
in
stos
sbb
cmc
data16
push
pop
out
inc
mov
int
dec
in
sti
cli
neg
dec
and
push
jns
test
dec
imul
mov
cmp
cmp
sub
cltd
adc
aaa
ret
jle
ja
das
xchg
imul
inc
xor
mov
sub
sbb
cs
sahf
pop
xor
pushf
mov
bound
or
sbb
add
pop
sbb
faddl
mov
push
mov
outsl
xlat
sub
pop
sub
test
mov
les
sbb
fwait
js
and
stos
fisttpl
push
adc
mov
bound
adc
and
das
cmp
push
lahf
inc
gs
sub
xor
adc
orb
es
pop
adc
insb
ljmp
push
pop
ja
loopne
clc
cmp
jb
jb
stc
sti
insb
jecxz
hlt
cltd
lods
xor
call
fs
fnstcw
jb
pusha
mov
sub
push
inc
cltd
mov
sbb
iret
mov
ja
jo
xor
xor
cmp
test
scas
push
lds
push
add
fdiv
lahf
faddl
sbb
mov
test
and
push
addr16
mov
sub
ret
mov
movsb
xchg
aas
xchg
push
jge
hlt
sub
pop
sbb
adc
mov
test
xchg
adc
cmc
test
xchg
inc
les
push
pop
aas
add
fsubl
in
or
rcr
push
mov
mov
inc
push
mov
fidivrs
jnp
sub
stos
adc
or
shrb
pcmpgtw
lcall
inc
rorb
incl
adc
push
pop
jp
daa
lcall
aam
divb
mov
ficompl
or
xor
dec
fiaddl
push
xor
xchg
push
cwtl
je
stc
sub
test
lods
jge
idivl
mov
push
pusha
enter
mov
sbb
fcmovnbe
push
inc
mov
and
pusha
adc
xor
mov
int3
incl
cmp
add
fnsetpm(287
adc
pop
pop
dec
addl
jnp
pop
xorb
push
pop
fwait
push
loop
movsb
repnz
loope
or
aas
mov
sbb
imul
push
and
lock
add
adc
push
add
in
cltd
insb
pop
int3
adc
outsb
xor
pop
sarb
insb
in
pop
push
mov
mov
cmc
cmc
xor
cmp
fcoms
insb
push
mov
lret
xor
outsl
adc
add
in
mov
jl
in
fwait
out
imul
push
je
repz
icebp
jge
push
gs
test
mov
sbb
sbb
addr16
sar
int
stc
or
js
into
inc
in
outsb
jl
out
sbb
sbb
add
cltd
arpl
or
in
stos
decb
mov
jmp
mov
std
movsb
test
dec
and
jns
dec
inc
data16
out
mov
pop
fldt
mov
lods
mov
enter
lds
test
in
sbb
sub
sbb
jmp
popl
push
aas
push
xor
push
xor
xchg
sarb
push
fiadds
inc
push
pusha
ficompl
mov
bound
push
ds
repz
pop
xor
outsb
ljmp
sub
mov
lds
push
int
add
pop
jmp
ficoml
sarb
sbbb
jg
cwtl
mov
add
adc
push
cmp
fstpl
outsl
lods
xor
mov
negl
sub
push
mov
or
pop
bound
cmc
push
aad
and
cmp
and
xor
repz
adc
sti
imul
mov
jne
lea
cmpl
xchg
push
daa
fadds
xchg
dec
stos
std
adc
hlt
mov
or
hlt
push
inc
in
stos
inc
cmp
sub
call
adc
mov
sbb
mov
sub
les
or
mov
cmp
mov
push
add
lock
arpl
jne
xchg
xchg
psubb
aas
fsubr
push
pop
decb
jb
gs
jb
pop
nop
insb
fbld
clc
repz
cmpsl
mov
mov
jbe
sbb
mov
or
mov
mov
sbb
jb
xor
clc
xlat
mov
sub
test
push
inc
bound
daa
ja
sbb
push
or
cmp
mov
sbb
jge
mov
mov
mov
inc
mov
cwtl
outsl
add
rolb
xchg
nop
dec
loopne
cmpsl
sbb
add
into
mov
jnp
pusha
xor
mov
clc
jne
inc
jmp
push
nop
data16
adc
test
and
pop
xchg
sub
test
sahf
xchg
in
cmp
adc
or
jg
test
mov
sbb
push
pop
mov
repnz
repnz
sahf
xor
adc
add
loop
xchg
sbb
mov
xor
mov
es
push
mov
sbb
mov
gs
fimuls
pushf
lods
stc
pop
mov
mov
xlat
cld
mov
popf
fisttpl
shl
out
movq
inc
push
and
scas
test
mov
sbb
jle
inc
push
ss
add
adc
push
xchg
mov
in
mov
lds
adc
mov
jecxz
mov
and
shll
mov
mov
push
inc
ja
push
jne
mov
movsl
mov
test
xchg
ss
pop
pushf
fwait
pushf
jae
addb
and
dec
add
outsl
inc
sub
out
mov
daa
lds
cmc
or
ret
push
mov
ljmp
cmp
lock
aaa
sti
cmp
out
jle
push
mov
pusha
testb
sub
xor
in
sub
andb
fsubr
xor
inc
sub
movl
adc
mov
in
mov
jae
movsb
and
popa
in
cs
jmp
aam
and
mov
sar
test
dec
icebp
xchg
ret
dec
inc
jns,pn
add
pop
xchg
sub
loope
std
adc
mov
popa
sbb
cmp
stc
xchg
adc
jno
dec
jns
loop
add
pop
mov
pop
mov
icebp
dec
push
adc
jmp
mov
outsl
cmp
rclb
cmpb
stos
clc
sub
push
outsb
pop
adc
xor
dec
movsb
lods
icebp
push
aad
scas
xchg
sti
clc
or
rcrb
aas
insl
into
test
shlb
adcl
fwait
sub
dec
mov
outsb
lcall
repz
scas
cmpsl
lcall
pusha
repz
sahf
ss
std
adcl
xor
sysret
lods
sub
jne
ss
ljmp
je
jge
in
aad
repnz
push
push
jae
xor
test
insb
pop
fnstcw
loope
push
push
push
sbb
lods
lret
arpl
xor
aam
xchg
fwait
xor
jg
das
sti
test
lds
lock
and
in
pusha
insl
pop
xor
mov
out
or
lds
jg
lcall
adc
clc
xchg
and
lret
xor
scas
mov
movntps
subb
or
adc
cli
shlb
and
dec
pushf
add
mov
xchg
xchg
in
scas
jle
inc
iret
mov
xor
mov
inc
fldl
dec
rcll
jns
cwtl
fistps
mov
sub
mov
inc
enter
xor
test
nop
jo
cmpsl
add
outsb
je
pop
lea
dec
and
ficomps
pop
pop
inc
mov
bound
test
xor
jae
addb
shr
push
add
dec
subl
in
cmovne
js
into
in
dec
jo,pn
popf
mov
hlt
aam
inc
push
mov
shlb
xchg
sahf
jmp
and
test
push
out
jne
shrl
les
inc
rcrl
cli
sub
jecxz
in
add
mov
inc
xchg
mov
dec
jecxz
lods
inc
jmp
scas
pop
xlat
xor
lea
mov
cld
jl
lret
cmp
cmpsb
push
jo
fs
sub
xlat
clc
sbb
daa
enter
outsb
pop
jbe
shl
mov
mov
xor
mov
fsubrs
mov
test
out
sub
ret
mov
jb
fcmovnb
or
pop
bound
mov
dec
rclb
clc
sub
sub
je
pop
xlat
insl
mov
push
adc
lods
adc
or
or
lea
push
and
push
pop
lock
cmc
ret
push
insl
roll
pop
xchg
add
mov
cld
mov
mov
ret
pushf
nop
mov
int
mov
push
int3
or
lret
cmc
nop
dec
ljmp
pop
or
in
inc
imul
outsl
les
pop
push
pop
push
repz
mov
inc
callw
inc
stos
adc
add
pop
xor
pushf
test
stos
lahf
xchg
mov
xchg
int3
xchg
fwait
subl
pop
int
sti
mov
adc
mov
jg
sub
mov
jno
sti
mov
or
add
lret
lock
sub
sti
mov
out
sbb
daa
pop
out
leave
pop
aaa
pop
xchg
adc
popa
repz
add
push
pop
jbe
test
pop
mov
into
repnz
inc
lcall
xor
pop
imul
int
scas
xchg
shl
pop
xor
jne
imul
dec
stc
inc
inc
jb
out
xchg
pop
ljmp
roll
stos
push
lock
in
cmpb
fnstsw
mov
shrb
imul
stos
popa
sbb
fdivp
testb
inc
pop
jnp
xchg
adc
mov
loop
call
push
mov
lds
fs
push
dec
enter
stos
test
icebp
jbe
in
mov
push
push
xor
scas
insb
push
out
std
sub
xchg
out
jbe
mov
or
push
pusha
shlb
testb
sub
pop
cmp
je
adc
pop
sub
sub
in
sbb
inc
in
das
movsl
movsl
lds
mov
std
mov
and
xor
addr16
out
inc
mov
hlt
mov
mov
insb
mov
data16
xor
adc
in
xor
xchg
ret
mov
jle
push
leave
into
stos
xor
fadds
rcrl
scas
cld
mov
inc
mov
pop
add
jmp
mov
inc
jbe
xchg
and
sbb
mov
lcall
mov
dec
dec
cli
dec
pop
jno
adc
push
repnz
xor
ja
xchg
mov
xor
sahf
dec
push
test
jge
xor
or
pop
dec
xor
into
leave
test
cmp
xchg
pop
shl
pop
js
bound
hlt
jb
pusha
sub
aaa
lock
xor
push
xchg
stos
mov
mov
add
jecxz
out
xor
jmp
dec
sahf
fnstsw
pop
leave
dec
xchg
cmp
es
push
inc
int3
dec
sub
dec
lret
sub
push
push
and
cmpl
cmc
iret
add
jle
cwtl
aaa
or
mov
lods
jmp
neg
mull
xor
mov
cmpsb
pop
mov
in
inc
sbb
sub
inc
nop
pop
and
leave
sahf
sarb
push
xor
lret
nop
xchg
pop
pop
dec
xlat
xchg
mov
xchg
inc
cmp
addb
movsl
loope
fdivp
and
cmp
jno
jno
mov
mov
jns
push
mov
mov
add
cmpsl
loop
dec
decl
jge
xor
jecxz
fnstenv
fisubrl
dec
mov
mov
push
xchg
cmp
or
es
jno
mov
adc
sbb
aam
or
xchg
and
sub
mov
inc
dec
cmp
out
stc
pusha
subl
dec
adc
nop
sub
dec
push
clc
add
in
mov
mov
in
or
mov
sar
sbb
xor
ljmp
mov
xor
xor
das
mov
je
xchg
push
dec
aas
fwait
xor
mov
fstp
cli
fisubs
push
add
out
in
or
sbb
add
sub
idiv
add
pop
pop
xchg
fmul
ljmp
push
sub
jns
in
pushf
stos
test
jbe
xchg
jge
push
mov
mov
inc
notl
hlt
sarb
cmpb
minps
aas
std
or
mov
gs
pop
mov
inc
jns
loop
cld
insb
jp
cmp
fimuls
cwtl
mulb
inc
push
stc
jge
add
pop
push
dec
out
iret
add
jg
jb
test
or
stos
inc
add
push
and
outsb
mov
sarl
xor
cs
sbbl
cs
add
and
orb
jbe
sub
lea
cmp
push
fimuls
aam
sub
jp
outsl
mov
add
jns
and
and
js
mov
or
dec
loopne
fcmovnb
jbe
popf
jecxz
xchg
xorb
add
cmpsb
inc
jecxz
mov
push
jns
mov
push
in
leave
pop
sti
sbb
jl
mov
imul
cmp
and
ret
mov
pop
cmpsl
jo
pop
into
xor
push
xchg
dec
xchg
push
lock
xor
add
jns
push
xchg
push
shlb
add
jecxz
mov
ret
dec
iret
pop
jae
xor
jno
out
jne
mov
stc
data16
rorl
dec
push
and
push
pop
aaa
scas
add
jmp
outsl
mov
add
cltd
push
adc
popf
or
or
push
jmp
adcb
adc
mov
leave
push
pop
inc
out
aas
sub
lds
mov
ret
xchg
gs
or
bnd
leave
push
mov
cmp
mov
xchg
hlt
sbb
and
iret
mov
mov
sbb
test
or
add
sub
push
decl
out
mov
add
js
ds
inc
pop
inc
sub
js
sbb
lods
loope
and
lahf
adc
dec
out
jb
push
push
add
pop
xorps
sbb
sbb
xchg
loope
enter
xor
orb
sub
xchg
cmpsl
jno
sbb
sub
data16
bound
fstpl
push
mov
or
jp
fincstp
mov
aas
arpl
in
xchg
mov
data16
sbb
cmp
insb
xchg
mov
pop
jne
pop
imul
lret
lret
fistpl
clc
dec
aam
dec
leave
nop
movsl
ficomps
cs
loopne
test
in
int
ljmp
mov
ja
add
nop
adc
shll
xchg
sbb
jne
in
stos
outsb
sarl
mov
ret
std
test
clc
sbb
loop
mov
popf
lods
push
mov
push
in
or
push
or
sbb
sub
jae
leave
lret
int3
in
loop
cmpsl
or
lahf
mov
mov
notb
sub
aam
push
xchg
xchg
test
pop
shll
jns
xchg
lds
xchg
daa
push
inc
sarl
mov
adc
clc
outsb
les
mov
mov
mov
out
sub
call
jmp
mov
add
jecxz
jl
push
mov
mov
pop
test
cmp
or
dec
movq
test
and
dec
fwait
mov
cmp
dec
add
subb
insb
add
mov
mov
xlat
clc
cmp
pop
jmp
jae
loope
sahf
add
push
push
int
loope
cmp
sub
xorb
lret
lods
pusha
xor
mov
aam
jns
jae
xor
mov
lret
mov
mov
xchg
mov
jns
xor
stc
xchg
mov
lcall
cmpsb
repz
jp
xor
fcom
sbb
mov
jnp
xchg
cmp
pushl
jge
mov
xchg
int
in
adc
int
into
mov
adc
push
mov
mov
stos
cmpsl
xchg
dec
jp,pn
lahf
push
sbb
iret
stc
stc
cld
mov
in
pop
push
mov
jle
push
lcall
orl
icebp
mov
in
loopne
test
jp
jno
in
and
cmp
sbb
cmpl
adc
ja
data16
pop
shlb
cmpsb
ja
push
std
loopne
lret
inc
xchg
outsl
pushf
push
ljmp
mov
test
cld
jg
or
cltd
mov
cld
jnp
dec
fildl
mov
insb
adc
ret
imul
pushf
xchg
inc
adc
xor
insl
sub
xchg
mov
push
push
jns
add
std
sub
or
mov
mov
pop
ljmp
mov
or
xchg
xchg
sub
xchg
xor
mov
mov
jle,pt
and
cmp
cld
orb
pop
sbb
clc
ss
jmp
push
mov
lea
shlb
out
sbb
loopne
add
jb
shrb
loope
mov
xor
xchg
pusha
add
pop
adc
fidivs
insl
repz
je
push
mov
mov
cmp
jge
cmp
test
imul
jne
add
shll
gs
add
in
mov
mov
sbb
es
into
sbb
std
aad
dec
mov
adc
ds
rcrl
out
sti
mov
inc
cs
jp
je
ret
pop
sbb
sub
mov
mov
mov
mov
lret
or
in
jp
leave
mov
push
mov
cmc
je
push
sub
mov
movl
mov
cmp
lock
in
fwait
sbb
push
test
xchg
inc
in
sar
add
sahf
mov
lods
in
cmpsl
mov
push
add
mov
jge
loopne
into
dec
and
inc
fwait
inc
adc
dec
repnz
loopne
cmpsb
add
out
insb
cmp
and
jmp
jo
fidivl
lcall
dec
cwtl
into
int
aad
or
js
mov
scas
pop
dec
cwtl
je
test
mov
xchg
loop
fs
cmc
sbb
sbb
jo
fwait
mov
jp
mov
jp
mov
jo
mov
lea
outsb
lea
or
or
jo
xor
mov
andb
mov
inc
outsb
shlb
pop
push
je
into
jo
sbb
shrl
fdivrs
inc
jns
xchg
xor
xor
cwtl
jno
out
jl
mov
or
ja
in
pop
notb
mov
mov
pop
nop
sbb
test
inc
lcall
ds
inc
cltd
mov
ds
xlat
jmp
shl
mov
out
loop
push
andl
popa
scas
imul
inc
dec
pop
ljmp
leave
lods
or
test
ss
loope
jo
int3
pop
jl
hlt
mov
cmp
sahf
jb
iret
push
bound
loope
popa
filds
or
mov
jns
xor
sub
mov
mov
xor
push
into
sub
into
fmull
pusha
clc
sarl
out
or
push
stos
mov
sub
lcall
pop
insl
pop
jbe
jne
popa
jge
xchg
jo
push
xor
int3
sbb
mov
inc
cltd
mov
adc
add
aam
mov
in
adc
pop
inc
or
and
sub
jns
pop
fcoms
hlt
rcl
cs
add
inc
mov
in
cmp
xchg
dec
mov
mov
push
adc
jp
outsb
xchg
ss
popf
jnp
cmp
repnz
sbb
xchg
sbb
mov
fdivs
inc
stos
jbe
bound
test
loope
lods
cmpsl
fistpl
pop
cs
mov
mov
mov
add
cmpsl
fdivl
les
and
sub
loop
ret
and
cmp
mov
fwait
sbb
or
jge
sahf
cs
aad
pop
and
out
pop
jp
push
in
ret
or
pop
inc
cli
pop
pop
lods
or
and
xor
sub
xchg
adc
cmp
xchg
enter
test
and
dec
dec
pop
or
xchg
adc
add
outsl
pushf
aad
mov
adc
pop
insl
shrb
dec
pusha
stos
pop
sbb
jle
dec
fisubl
pop
xor
jge
mov
mov
mov
movsl
scas
jb
popf
popa
push
inc
mov
test
pop
iret
inc
ljmp
cs
out
repz
mov
inc
pop
push
in
add
sbb
imul
popl
jnp
incl
pop
jmp
movsb
mov
lods
mov
and
push
inc
imul
cmpsl
jae
aam
mov
loope
add
std
test
jg
cmp
jl
mov
repnz
and
jne
xor
cmp
adc
pop
cmp
or
stc
das
mov
xor
jp
push
or
xchg
std
mov
mov
test
lea
jo
mul
or
xor
adc
xor
js
cli
outsl
sub
pop
and
xor
xor
mov
xor
dec
lahf
psadbw
test
fimuls
rorl
adc
insb
cld
add
and
pop
out
and
jp
or
or
mov
pop
xchg
xchg
mov
jbe
clc
sbb
mov
jmp
cwtl
xor
addr16
dec
push
adc
pop
ret
push
mov
xchg
sbb
cs
or
int3
pop
push
dec
pusha
dec
mov
jns
add
xor
or
fstp
lods
mov
lods
jmp
sub
nop
addr16
sti
cmpsb
adc
inc
pop
fldcw
mov
out
xorl
mov
jl
ljmp
xchg
xchg
mov
mov
xchg
cmp
lods
inc
cmp
inc
jb
lods
aam
mov
pop
frstor
lods
sub
popa
xchg
pop
ret
sbb
fnstenv
stos
fisttpl
inc
in
jno
test
cli
decl
mov
sub
bound
mov
in
or
pop
jmp
sub
in
or
lret
mov
rclb
adc
test
dec
ss
std
mov
nop
lret
ret
jo
inc
xlat
mul
cmpsb
jnp
add
cmovl
lahf
mov
test
dec
lcall
iret
lods
cmp
fcomps
xchg
push
adc
clc
mov
mov
inc
or
push
sub
jae
sbb
mov
push
iret
fistpl
jmp
mov
or
outsl
mov
xchg
mov
aaa
dec
out
repz
inc
add
push
sub
hlt
jg
push
sub
pusha
add
xor
cmp
push
jg
lcall
xchg
pop
pop
gs
adc
mov
call
dec
fwait
sub
popf
dec
test
cmp
or
dec
xor
add
inc
sti
idivl
call
jecxz
frstor
loop
in
or
mov
lds
jmp
je
inc
cmp
or
pop
and
aas
jo
pop
push
jno
adc
stos
sbb
push
stc
push
mov
orl
jbe
stos
pop
or
xchg
sub
out
and
lret
mov
iret
std
jbe
imul
test
lahf
xlat
jns
incb
adc
xchg
cld
rcr
pop
movsb
cmp
stos
shrb
push
push
outsb
inc
lods
out
pusha
movb
repz
or
mov
jb
xchg
into
fdivp
mov
cmp
js
inc
scas
pop
add
xor
pop
cs
lods
cmp
push
mov
push
mov
pop
orl
movl
iret
cmpsl
out
nop
sar
or
imul
sbb
mov
pop
ds
xlat
or
cltd
inc
les
insb
pop
jnp
outsl
je
aad
mov
mov
mov
repnz
in
and
repz
inc
mov
pop
mov
insb
cmp
fs
dec
stos
rcl
into
inc
mov
dec
out
mov
mov
in
jbe
inc
fucomp
mov
outsl
loope
rolb
fisttps
int
dec
test
push
sub
xchg
pop
pusha
pop
shll
sbb
lods
rolb
fcmovu
idivb
add
cmc
sub
mov
dec
icebp
inc
test
or
mov
dec
cwtl
les
stos
sub
sarb
sub
ds
dec
push
pushf
rorb
inc
aaa
jp
aad
imul
clc
adc
jbe
orb
mov
inc
push
sub
push
jbe
or
pop
imul
lock
cld
xlat
clc
movsl
jnp
clc
add
pop
sarb
mov
fs
arpl
loop
or
jl
ja
rol
or
mov
outsl
pop
out
stos
mov
insb
mov
pusha
mov
je
and
cli
cmp
mov
test
aas
fnstcw
add
xor
jno
add
mov
pop
sbb
pop
popl
push
or
notl
and
shl
or
sarl
mov
pop
out
jmp
xchg
sbb
rcl
stc
pop
fs
nop
xchg
jmp
outsl
cmpb
jbe
xchg
pop
mov
xchg
sub
arpl
js
fiaddl
loop
inc
aam
push
cmpb
int
cld
test
mov
inc
aas
daa
pop
jmp
xor
subb
dec
xor
add
imul
inc
hlt
push
sbb
ja
call
pop
adc
pop
or
stos
ret
adc
in
mov
aaa
fnstenv
sbb
mov
xchg
mov
push
mov
add
push
adc
mov
jp
hlt
and
sti
sbb
mull
fs
mov
mov
fwait
clc
xchg
movsl
add
cmpsb
cmp
fbld
adc
outsb
inc
push
inc
adc
int
sub
rcll
jnp
push
push
xor
cmp
cmpsb
ja
mov
nop
pslld
pop
xchg
xchg
xor
ljmp
sbb
or
in
ljmp
mov
jp
rclb
mov
lcall
dec
cmp
dec
mov
cld
push
mov
jnp
xchg
jns
add
fistps
iret
add
sar
popf
add
cmc
cwtl
push
jl
repz
call
pop
cmp
inc
test
adc
mov
loopne
bound
shl
test
mov
ss
lahf
std
xorl
add
pop
xor
xor
fisubrl
je
imul
js
xchg
ret
xchg
jecxz
dec
aas
dec
addr16
xchg
pushfw
les
repnz
cmp
and
push
js
mov
push
cs
jnp
addr16
adc
jnp
aad
in
es
xor
ja
test
pop
xchg
shl
sbb
negl
or
insb
ret
xchg
pop
mov
jmp
mov
inc
adc
nop
loopne
jnp
xchg
mov
cs
jle
bound
outsl
xchg
mov
fcmovbe
mov
jmp
stos
inc
pop
fwait
xor
xor
adc
or
jecxz
rclb
pop
cmp
stc
cmp
add
jmp
cld
test
out
xor
xor
xchg
ret
sub
das
pop
jno
cmp
in
lret
mov
iret
mov
in
mov
adc
cmp
lea
out
and
ljmp
in
pop
stos
push
cmp
loope
push
xchg
jp
clc
sbb
test
push
cmp
lret
stc
push
dec
sbb
xchg
imul
scas
lea
out
adc
clc
dec
push
jbe
insl
or
push
jle
mov
push
aad
iret
shr
push
pop
pop
mov
mov
sbb
fisubrs
rol
daa
cmp
push
xlat
mov
add
or
stos
or
mov
mov
rorl
push
jecxz
pop
scas
mov
push
jo
lcall
xchg
add
cltd
jge
test
pusha
inc
push
ffree
or
adc
inc
cs
jmp
cmp
and
lock
push
adc
ret
in
push
push
fdivrs
push
xchg
jp
dec
mov
mov
fsubs
fdivrl
pop
lret
fistps
mov
imul
enter
shll
xor
jmp
lret
dec
fstl
lahf
mov
bound
jmp
ficompl
push
push
leave
iret
jnp
stos
cmp
dec
pop
gs
js
lods
addr16
ret
insl
jo
popf
mov
push
fstl
dec
call
push
sti
jg
jae
aaa
out
std
lds
push
jecxz
adc
imul
leave
mov
mov
roll
add
repz
xor
js
call
and
mov
add
stos
mov
cmpsb
pop
push
and
dec
dec
cld
aaa
test
fbstp
notb
ss
test
addr16
jb
cmp
nop
subb
stc
push
pusha
ds
jle
fcmovnb
xchg
cli
xchg
ficomps
sarl
mov
btr
xchg
mov
les
cltd
lods
lods
pop
cltd
mov
stos
xchg
cltd
insl
sbb
sahf
gs
icebp
arpl
mov
testl
xor
loop
lock
pop
push
lret
inc
mov
fsubrl
and
test
jg
adc
sub
in
addl
test
mov
xchg
rcll
jbe
mov
and
mov
push
and
mov
in
jbe
rorl
clc
loop
ret
xor
mov
aaa
aas
fbld
rcrl
pop
in
xor
ficomps
jg
addr16
and
loope
adc
cli
and
cmpsb
add
ljmp
and
lcall
in
cmpsb
dec
dec
lods
daa
jle
mov
inc
cmp
push
lret
push
aaa
cmc
cmpsb
mov
xor
ss
or
and
lds
jecxz
pop
push
fistpl
sti
fimull
scas
das
loopne
and
sub
imul
sahf
dec
roll
pushl
or
xchg
subl
cmpsl
push
fldl
add
jecxz
sbb
outsb
mov
mov
pop
insl
mov
cltd
lcall
lock
mov
xor
divl
and
cmpsl
scas
in
fnstcw
mov
repz
inc
mov
add
int3
push
and
pop
loopne
sahf
inc
fstpl
jecxz
rorb
std
jns
ficomps
cmp
adc
into
rcrb
in
stos
adc
cs
subb
aad
inc
adcb
bound
enter
inc
jle
addb
fstps
je
inc
dec
sub
ja
lcall
fnstsw
xchg
xor
jne
xchg
fdiv
pop
ss
in
mov
lods
jno
daa
xchg
aam
pusha
pop
stos
jnp
sub
jmp
inc
push
js
fwait
cltd
cs
lods
into
shlb
sti
xchg
pushf
into
js
jne
sbb
lret
xorl
inc
hlt
adc
sbb
outsb
in
xor
cli
dec
add
and
jae
mov
dec
cld
cmc
insb
jo
out
jbe
movsb
xlat
fsubl
fbstp
mov
call
push
ja
push
mov
cli
es
xor
call
push
aas
mov
ja
daa
insb
mov
jno
orb
jl
xchg
loop
or
cmc
xorl
loopne
sub
lcall
popf
insl
loope
and
inc
dec
jp
adc
xchg
dec
mov
and
xchg
mov
or
sbb
xchg
xor
cld
mov
xor
inc
clc
adc
xchg
jnp
or
scas
xchg
jmp
jle
testl
in
push
enter
push
loop
popf
out
push
sarl
imul
mov
xor
mov
pop
into
popa
push
iret
jmp
xchg
adc
movsb
push
mov
stos
push
jo
dec
cld
fldenv
ljmp
and
pop
cmp
sbb
in
sub
add
fistpl
roll
push
cmpsl
in
push
cld
aad
outsb
daa
push
or
js
add
push
fwait
sahf
jb
in
jmp
adc
pop
mov
xor
sub
add
dec
lahf
pop
clc
lods
mov
subl
aad
dec
sub
mov
adc
lock
inc
sub
jns
mov
dec
bound
mov
ficompl
jp
and
ficompl
test
or
testb
lods
pushf
xlat
push
scas
loop
or
les
inc
dec
fwait
stos
jo
pushf
shll
mov
push
sbb
popf
sarb
add
dec
pop
ret
dec
push
mov
iret
add
sub
clc
loopne
pop
adc
dec
bound
int
iret
adc
push
or
jnp
pop
push
shll
push
push
or
adc
dec
inc
and
shrd
paddsb
xchg
sbb
sub
push
aam
fisttpl
xchg
loop
iret
mov
sub
loope
test
pop
roll
ret
int3
lret
xchg
sub
pop
jmp
jmp
sbb
fdivrs
push
je
lea
jl
mov
out
gs
test
lret
bound
pop
add
loope
inc
xchg
push
gs
mov
inc
iret
cmp
shrb
lcall
nop
sub
push
aaa
andl
into
add
jp
mov
inc
sbb
jb
push
dec
or
outsl
cmp
rclb
mov
je
std
inc
ja
sbb
mov
fwait
inc
xchg
int
inc
int
dec
leave
inc
out
clc
in
loope
jl
jge
jnp
push
xor
sub
or
mov
sahf
rcrb
xchg
mov
xchg
stc
mov
loop
cld
iret
push
icebp
cli
jns
es
out
push
in
or
pop
subb
jge
push
mov
cmpsl
mov
xchg
dec
push
mov
rclb
sub
xlat
and
xor
jle
in
mov
bound
dec
repz
int3
das
fnstenv
inc
mov
pusha
arpl
jl
fimull
aad
cmp
lcall
xchg
mov
sbb
imul
or
and
push
mov
dec
fbstp
shlb
add
pop
push
sbb
xor
loop
fadds
repz
fsubrp
lret
scas
sarb
lcall
repnz
add
mov
mov
xor
in
add
lock
ljmp
movsb
pop
mov
mov
das
cmc
sbb
dec
das
lcall
push
lods
jae
xchg
inc
lods
sbb
js
jp
in
fwait
bound
out
std
mov
mov
cltd
sbb
cmpsb
in
mov
dec
out
stc
into
sub
mov
verr
imul
adc
xor
dec
mov
xchg
sbb
imul
jae
stos
aad
aam
pusha
pop
xchg
js
leave
orl
scas
and
icebp
cmp
add
mov
cmp
mov
lock
scas
int3
push
xlat
push
out
add
out
in
sub
mov
mov
jecxz
ds
pop
in
adc
xchg
mov
lods
stc
mov
cmp
sbb
popf
cmp
cmp
cli
xlat
and
clc
test
ret
or
fstpl
jmp
or
mov
loopne
mov
xor
xor
xchg
mov
in
inc
mov
outsl
sub
ds
jno
inc
in
movsl
add
add
jno
filds
nopl
clc
mov
pop
sub
and
mov
fldl
fisttpll
loope
cwtl
pushf
ret
rcrl
pushf
or
test
push
push
jmp
dec
or
sahf
sahf
addb
subl
rclb
xchg
dec
mov
faddl
mov
lock
daa
cld
jns
xchg
adc
jmp
push
stc
xchg
jns
rclb
cmpsl
add
jg
jae
mov
mov
mov
icebp
mov
mov
pop
shl
popa
in
inc
mov
push
push
xchg
icebp
movsb
dec
std
cwtl
and
fists
clc
mov
mov
inc
push
cmp
xor
jae
sti
ss
mov
fwait
ror
mov
fsubrp
jp
arpl
fildl
jbe
js
stos
ss
outsl
ds
and
adc
jl
xor
add
mov
out
test
mov
push
inc
les
xor
ret
push
xchg
into
aad
sbb
in
sbb
xchg
rorb
mov
fidivs
sub
or
jl
push
inc
outsb
push
cwtl
std
cmp
fimull
sbb
addr16
sbb
mov
lahf
out
les
rolb
mov
mov
pop
rcl
adc
cmp
arpl
cmc
or
cmp
out
loopne
das
jo
fimuls
clc
loop
inc
fucom
sub
pushf
inc
fwait
mov
push
fwait
dec
movsb
cmc
mov
push
aam
push
add
or
sub
int
push
push
pop
aas
and
dec
pop
test
aaa
int
ljmp
mov
mov
and
pop
pop
fwait
ror
out
sub
loope
pop
lea
lret
sbb
emms
rclb
add
outsl
jg
dec
dec
shlb
adc
add
stc
fildll
adc
arpl
out
push
arpl
add
ret
jecxz
dec
pop
out
enter
xchg
add
in
pop
lret
shll
mov
mov
push
rorl
pushf
outsl
push
insl
and
lds
jo
outsl
mov
stos
cmpsl
test
mov
pop
inc
sbb
jne
imul
cmp
cmpsl
xor
jns
adc
mov
lods
cmpsl
daa
push
dec
hlt
mov
sub
mov
cltd
je
adc
fbstp
fisttps
pushf
adc
and
aas
icebp
sbb
daa
pushf
cmpb
aam
mov
out
lcall
mov
fsin
std
into
inc
adc
popa
scas
cs
lds
mov
mov
add
aaa
ds
xor
jne
pop
ficoms
stos
icebp
aas
and
sub
pop
enter
cmpsl
in
test
push
xor
fbstp
fimull
sahf
sbb
inc
mov
sbb
cmpl
popa
sub
popa
pop
cmp
mov
pop
test
inc
cmp
sub
notl
jg
and
imul
add
add
cmp
sub
outsl
mov
aam
out
outsb
cmp
jmp
scas
mov
add
jb
stos
and
scas
sub
pop
push
out
jo
xor
stc
jmp
push
xchg
ja
psrld
or
mov
jnp
rcrb
dec
out
jmp
pop
bound
pop
jns
inc
mulb
nop
mov
mov
ret
adc
lds
shll
jnp
dec
jo
push
jmp
inc
pop
decl
out
add
popf
outsl
lcall
sahf
inc
je
sbb
pop
int
cmpsb
pop
gs
negb
out
push
mov
mov
mov
insl
or
push
pop
jns
or
adc
sarb
aas
movsb
pop
mov
lahf
adc
movsb
jp
imul
movsb
iret
adc
mov
sbb
pop
sub
inc
fstpt
dec
or
fbstp
mov
sub
sti
adc
ret
in
lods
xor
lcall
inc
mov
out
inc
decl
das
je
inc
xor
jno
ds
fs
cmp
sub
push
adc
dec
movsl
jb
cmp
and
arpl
loopne
imul
and
mov
xchg
dec
ljmp
mov
inc
inc
jl
insl
push
jg
sub
repz
cld
jb
imul
sahf
sub
fnstenv
lods
mov
pop
add
cmp
fwait
inc
add
add
aas
mov
aaa
cwtl
sbb
sbb
pusha
or
xor
xchg
jge
mov
jb
dec
mov
xor
in
sub
mov
je
xor
cltd
pop
in
cwtl
scas
xchg
sbb
xor
xchg
fldl2e
daa
jo
inc
leave
jne
inc
xor
out
push
mov
or
mov
mov
loope
sub
jge
aas
fstl
addr16
scas
mov
mov
in
mov
inc
dec
inc
adc
std
sub
push
leave
push
or
add
cmp
push
les
xchg
xor
data16
xor
ret
pop
cmpsb
inc
lret
inc
cwtl
popf
es
or
push
inc
int3
ficoml
iret
in
push
mov
popf
ror
fidivs
mov
jg
cmp
and
and
sub
movsl
sub
mov
mov
stos
stc
jmp
nop
jno
sbb
mov
mov
scas
aam
pop
or
or
icebp
and
pop
xchg
shlb
cmovs
adc
test
loopne
push
dec
xor
sbb
jbe
pop
mov
jp
rcrb
cltd
lds
cli
pop
sub
shrl
mov
jno
push
stos
sbb
rcrb
sbb
or
fistps
cmp
aam
cwtl
inc
mov
scas
cwtl
pushf
call
mov
xchg
popa
sub
mov
pop
jb
call
add
idivl
add
in
fucom
pushf
ret
repz
aaa
push
sub
xchg
lds
inc
xor
and
lcall
mov
jg
in
lret
and
cmp
mov
xor
lods
mov
or
repz
sub
mov
sbb
frstor
pop
or
call
mov
shrb
cmc
mov
add
mov
rcrb
add
mov
mov
and
pop
cmp
sub
mov
add
sbbb
jecxz
or
inc
xlat
xchg
and
pop
jnp
inc
mov
mov
icebp
test
pop
add
fcoml
repz
popf
push
and
mov
cmp
cltd
in
aas
int3
xchg
dec
inc
xchg
push
xchg
daa
pusha
dec
daa
pop
mov
adc
mov
test
sub
cld
mov
xchg
push
js
outsl
jne
mov
xor
popa
popf
pop
pop
adc
sub
iret
icebp
xchg
mov
push
sbb
adc
movsl
repz
adc
push
cwtl
and
test
popa
jnp
add
jns
jge
add
mulb
rcl
mov
sbb
sbb
cs
int3
lods
xor
dec
dec
mov
sbb
mov
roll
arpl
jo
pop
sbb
aam
enter
dec
jge
jle
push
ret
dec
push
aas
add
adc
ss
mov
mov
std
xchg
faddl
push
adc
dec
add
test
xchg
inc
lock
mov
bnd
outsb
out
stc
ficomps
inc
inc
pushl
filds
aad
or
test
ficompl
fdivs
pop
ljmp
shl
lds
jmp
aam
cmp
pop
test
and
scas
jmp
jecxz
shll
loopne
adc
addb
mov
pop
fwait
inc
mov
mov
xchg
mov
jae
out
jg
lods
mov
data16
out
xchg
push
lahf
push
pop
les
ret
sub
fwait
jne
pop
xlat
fildl
xchg
jge
dec
loopne
rorl
push
in
gs
repz
in
out
mov
stos
cli
cmp
inc
mov
cmp
lds
add
xlat
jmp
jle
test
xchg
ret
es
sub
leave
jl
daa
sbb
rcll
xchg
mov
sub
lret
mov
mov
mov
push
ja
add
out
sbb
mov
inc
lahf
and
fmul
ret
mov
in
xor
jbe
pop
cmp
scas
push
fsubrl
ljmp
xchg
push
imul
sti
pop
or
cmpsl
jnp
cli
adc
inc
push
and
mov
jno
sub
sbb
clc
enter
sbb
addr16
aam
mov
mov
out
cld
int
jnp
and
lds
xor
mov
mov
dec
lods
push
call
movsl
sbb
iret
flds
test
or
mov
std
test
mov
and
movsl
adc
jne
xor
pop
sar
sbb
jmp
push
push
pop
fistpll
pop
lock
xor
and
mov
or
pushf
xor
mov
jg
sub
outsb
les
iret
add
and
dec
lret
jle
or
jne
mov
and
lock
sbb
cmp
sbb
bound
add
jl
je
jno
xchg
inc
inc
mov
xchg
add
or
inc
loope
fmul
shl
push
outsl
jle
adc
or
xor
pop
lds
push
add
sar
or
imul
in
lret
mov
mov
and
push
nop
pop
cmp
stc
mov
add
test
clc
sbb
mov
lock
popf
wbinvd
jno
ret
inc
dec
in
cwtl
push
loopne
jg
pop
dec
sub
mov
push
xlat
lret
xor
aam
push
inc
sub
sbb
mov
or
sbb
xor
cs
mov
cmc
shrb
movsl
mov
out
pushf
mov
int3
bound
jbe
shl
push
jnp
call
repz
shrb
push
add
loop
push
rcrb
out
cmp
ljmp
mov
out
jne
lret
out
sub
enter
jnp
add
ficoms
hlt
imull
sub
sti
jp
pop
das
add
test
inc
jnp
mov
mov
cwtl
andb
mov
push
jp
stc
les
pop
iret
enter
sbb
int3
jnp
outsl
popf
xchg
push
jns
cmp
xorb
inc
or
mov
add
ss
fsubrl
inc
rclb
mov
icebp
dec
pushf
es
stos
xchg
mov
or
cltd
fcomps
fidivrl
mov
leave
and
ljmp
mov
lods
or
jecxz
orl
mov
cmpb
dec
aas
leave
push
add
xchg
xor
pushf
into
mov
stos
inc
inc
inc
in
pop
mov
mov
call
test
test
mov
or
push
je
and
movb
xchg
xchg
sbb
mov
fmul
cli
ret
xchg
or
push
pusha
xor
and
loope
push
lret
mov
sbb
test
imul
addl
xchg
sub
repnz
add
sbb
inc
inc
xor
lods
sub
aaa
in
xlat
sub
es
jmp
sbb
fdivrp
scas
pop
stos
divl
mov
arpl
inc
or
jge
imul
lret
loop
out
dec
xchg
jno
mov
int
sub
mov
nop
test
cmp
dec
shr
insl
fucomip
shll
cmc
rol
and
fsubs
xor
neg
sub
inc
jns
ret
rol
jns
bound
mov
sub
mov
pop
fwait
adc
mov
gs
jecxz
roll
pushf
cmp
cmp
sbb
test
jne
pop
sbb
xchg
out
shl
cwtl
xor
mov
pop
ds
outsl
daa
ljmp
jbe
ret
cmpsb
out
mov
imul
pop
add
jmp
jecxz
std
popa
cmova
jnp
xchg
arpl
stos
insl
mov
cld
or
or
mov
jge
mov
cmpsb
cld
sub
sub
movb
xchg
jg
jge
jno
jns
aad
pop
lea
mov
sbb
dec
mov
sbb
inc
mov
and
aas
cmp
push
cs
push
cmp
adc
in
call
jl
mov
inc
cs
dec
fsubrl
push
jmp
lcall
lods
or
jnp
add
gs
outsl
and
push
hlt
stos
mov
stos
xor
test
test
jb
outsb
xchg
jle
movsb
cld
dec
incb
fbld
push
roll
pop
fadds
push
movsl
sbb
push
cwtl
pop
pop
enter
dec
lahf
xchg
xchg
arpl
sub
in
xor
pop
pushf
stc
jmp
enter
mov
clc
or
loopne
mov
daa
jb
adc
xor
lods
sbb
add
adc
sbb
pop
sub
adc
loop
push
sbb
rorl
mov
or
mov
or
aam
out
fwait
inc
insl
insl
call
mov
mov
pop
and
outsb
xchg
sbb
mov
mov
insl
adc
cmp
movsb
jg
inc
addr16
or
lds
jne
daa
mov
cmpsl
inc
mov
cwtl
or
call
lea
cmpb
push
pop
es
out
test
xchg
dec
cwtl
and
jmp
inc
xor
jb
lods
cmc
cmpsb
dec
clc
push
rcrb
mov
sub
test
jle
push
sarl
sub
fiadds
repnz
push
sub
fnstcw
shll
imulb
mov
gs
lret
xchg
adc
in
xchg
subl
xchg
jns
pop
add
nop
or
out
cltd
addr16
and
push
cmp
mov
ljmp
mov
mov
adc
fldt
pop
xor
push
mov
sub
and
xchg
scas
sub
fisubrs
and
and
adc
cltd
test
imul
jb
dec
push
gs
mov
insb
cmpl
xor
or
push
jg
sbb
inc
sub
jmp
push
add
mov
fsubrs
mov
and
les
mov
xchg
jb
mov
push
jle
in
mov
push
or
lret
add
stc
adc
test
push
sahf
das
insb
adc
shll
out
xchg
push
push
cmp
ds
cmpsl
leave
stos
mov
icebp
cmp
push
lcall
in
test
test
pcmpeqb
imul
jnp
mov
push
test
mov
gs
or
movsb
push
sub
mov
ficoms
jg
mov
aam
xor
cwtl
lds
andl
jo
xchg
jns
enter
dec
cwtl
stos
gs
aaa
mov
add
and
loop
mov
mov
add
cmp
scas
or
xchg
aas
loop
or
sbb
mov
test
adc
inc
cmp
xchg
insb
or
cltd
lods
ljmp
sub
mov
xchg
jp
pop
xchg
add
xchg
cli
dec
in
in
dec
insl
imul
je
aad
push
gs
out
xchg
push
mov
mov
push
and
pop
pop
xor
sahf
addl
bound
test
inc
cmpb
and
repnz
add
push
fidivrs
mov
jae
push
popa
fstpl
in
adc
lods
push
xor
and
pop
mov
push
inc
mov
cmp
mov
or
push
out
pop
or
call
sbb
dec
test
stc
mov
adc
or
xchg
add
cltd
mov
stos
or
nop
in
js
dec
pop
out
mov
mov
insl
xchg
fcompl
popa
push
cld
add
cmpsl
mov
mov
sti
sub
gs
sub
inc
loopne
lods
in
or
pop
addl
inc
pop
xor
xchg
fisttpll
jle
jle
loop
lods
mov
repnz
jae
push
push
hlt
aaa
add
pusha
jae
ljmp
xor
xor
push
subl
lods
sbb
loope
jnp
xor
sbb
aam
adc
mov
enter
mov
pop
push
mov
mov
movsl
aaa
xchg
mov
adc
or
mov
mov
nop
lods
mov
ror
leave
cmp
lds
cmp
mov
arpl
add
pusha
and
cmp
push
lock
stos
cmp
scas
scas
adc
xchg
fwait
pop
xchg
shlb
cltd
aad
dec
sub
sbb
adc
sbb
push
leave
sbb
inc
push
sbb
jnp
mov
sar
sbb
stos
add
pop
adc
adc
dec
jno
pop
adc
push
push
mov
mov
test
ljmp
loop
fwait
inc
sbb
jmp
and
jo
cmp
and
rcrl
shl
outsb
add
cmp
xor
in
std
cmpsb
mov
add
mov
and
mov
inc
cmp
or
push
dec
mov
add
pop
xchg
sbbb
adc
orl
das
cltd
xor
sub
and
mov
sub
pop
sub
or
or
fmuls
fnstenv
push
mul
enter
mov
cmp
in
push
into
call
mov
cwtl
sub
jo
dec
out
add
mov
push
or
and
sub
xchg
outsb
push
out
test
je
addr16
mov
insl
pop
adc
add
ja
sbb
shlb
xchg
xchg
add
movsl
mov
add
inc
fistps
ds
out
jl
cmp
xchg
jecxz
movsb
jno
test
lret
add
loop
adcb
mov
out
adc
push
sub
rcll
pop
addb
shlb
pop
rol
call
and
sub
mov
mov
sbb
push
adc
test
sub
mov
jns
mov
enter
aam
jne
inc
xchg
sbb
in
bound
jae
stos
imul
in
lcall
sbb
fcmovnb
popa
lahf
cs
lret
cmp
dec
pop
add
push
push
cmpsl
test
lds
cli
jb
adc
loop
cmpsl
lahf
mov
bound
mov
pop
xchg
push
mov
jbe
cmc
sbb
add
mov
aas
gs
fs
call
rcl
outsl
popf
fisttpll
test
pop
cmc
add
jp
addr16
cmpsb
pop
lods
sbb
mov
shrl
fistpl
pop
dec
or
push
addr16
in
xor
mov
mov
jbe
cmc
sahf
sti
das
xchg
movsl
in
cs
arpl
ret
ret
jg
mov
jmp
pusha
into
and
in
in
test
test
xorl
push
dec
sub
insl
or
inc
mov
stos
sub
or
pop
mov
movsb
push
in
sub
sub
popa
loopne
adc
pop
mov
fcoml
addb
and
or
pushf
xchg
int3
test
mov
jle
mov
jecxz
arpl
out
mov
es
insl
inc
test
in
cmpsl
incb
in
insb
push
mov
sub
hlt
sbb
push
insb
dec
filds
mov
outsl
divl
hlt
inc
repnz
adc
jae
sti
and
mov
xchg
cmp
rcrl
mov
push
movsl
inc
shrb
stos
cmp
pop
inc
cmpsl
into
or
imul
or
jo
xchg
push
cmp
or
sbb
mov
insb
out
stos
push
movsb
or
push
je
mov
and
xor
adc
push
repnz
cmp
ret
loopne
or
pop
stos
cld
xchg
pop
push
lret
ss
js
insb
rcrl
xorl
fwait
xor
jmp
hlt
sbb
sarb
fs
mov
lods
jo
cmp
gs
notl
test
inc
dec
pop
push
push
iret
arpl
int
out
push
jmp
pop
cs
movsb
sbb
testl
jg
add
imul
out
sub
in
scas
test
and
dec
ja
sbb
loope
add
inc
pop
lcall
or
cld
leave
aad
cld
dec
in
popa
nop
stc
hlt
jl,pt
pop
dec
ficomps
mov
xor
inc
push
lea
lret
xchg
lock
push
adc
pushf
loope
xor
xor
outsl
in
pusha
push
mov
dec
add
mov
inc
sbb
lahf
sub
test
test
dec
imulb
dec
mov
or
in
repnz
cmpsl
cmp
jl
fldl
adc
sub
ret
add
fsubr
sub
or
or
dec
or
xchg
pop
cmp
push
clc
add
pop
jle
dec
xor
and
outsl
mov
jnp
in
xchg
fwait
inc
mov
adc
adc
repz
sub
test
lods
inc
jno
sbb
xor
orb
sub
popf
xor
cli
jmp
sbb
fisttps
xchg
addb
xchg
ss
adc
xchg
imul
and
out
cmc
in
mov
adc
enter
add
test
sbb
aam
idivl
fcmovb
jp
and
nop
push
jl
enter
and
outsl
iret
je
repz
mov
call
push
inc
scas
sbb
push
mov
gs
test
das
into
pop
pushf
adc
and
into
mov
or
sub
jmp
pop
andl
in
sub
xchg
jbe
sbb
cmp
or
pop
or
push
fisttpl
sti
xor
scas
sub
push
and
mov
insl
pop
in
lret
call
rcrb
repnz
jne
stos
mov
clc
push
data16
cmp
add
inc
mov
insb
in
dec
or
movsb
gs
mov
fsubl
dec
test
mov
and
es
inc
jmp
add
add
mov
mov
add
lea
loope
cwtl
test
mov
rcll
jae
rol
gs
sarb
push
mov
imul
jbe
mov
sbb
mov
dec
lret
push
push
lret
jp
push
or
ret
test
adc
inc
sub
lods
mov
incb
bound
push
jg
cmpsb
out
jg
test
mov
stos
cmp
out
sub
sub
cmpsb
movsl
or
adc
aas
cli
pusha
les
shrb
mov
lds
xlat
or
xchg
rcll
sub
mov
dec
mov
or
sub
jp
in
mov
pusha
orb
push
in
mov
mov
gs
stos
fdiv
inc
out
imul
push
or
mov
jns
out
xor
loope
sbb
xchg
cmp
loope
loope
shl
stos
cmc
lahf
adc
cltd
aaa
cmovne
pushl
fisubrl
popa
stos
and
or
mov
jecxz
dec
sub
pop
fsubr
je
sti
stc
movsl
jb
add
dec
pop
insl
mov
lods
xchg
mov
cs
das
cmp
movsl
test
or
notl
stos
jl
test
pop
lds
lcall
pop
ds
cmc
lcall
rcrb
stc
cmpsb
pop
push
addl
cwtl
mov
std
lock
int3
mov
cli
lea
mov
lcall
adc
in
xchg
dec
rcrl
pop
mov
std
jbe
and
in
or
sub
cmp
add
mov
sub
and
inc
push
xor
int
shlb
cmp
pop
and
xchg
lret
out
mov
add
mov
fdiv
ror
sub
sub
movsb
xchg
adc
add
mov
mov
mov
insl
es
sahf
inc
std
or
lods
mov
pop
ds
jb
cmp
or
cltd
or
cs
inc
test
sub
out
shll
or
cld
sub
nop
lds
sbb
and
mov
xchg
iret
or
add
or
mov
dec
outsb
dec
pop
popf
int
mov
jne
cmp
sarl
fnstcw
js
push
sbb
insb
sbb
push
fwait
or
or
xor
adc
cmp
add
pop
mov
fldt
out
popa
dec
mov
xchg
test
xor
lea
xchg
push
dec
cli
cmpsb
push
push
pop
movsl
add
jns
rclb
jge
add
jmp
pop
inc
jmp
lret
pop
test
jl
ret
or
push
pop
sbb
jns
dec
les
jae
xorl
push
ret
ret
or
mov
ficomps
aaa
ljmp
push
sbb
jecxz
pop
cmp
mov
inc
or
cmpsl
cli
or
mov
inc
cltd
pop
mov
fidivs
sub
adc
or
push
out
push
mov
inc
ret
mulb
bound
cltd
mov
mov
push
jl
xor
js
add
mov
std
push
mov
sub
out
int
xor
cmpsb
sbb
mov
push
mov
je
mov
mov
inc
mov
loope
lea
or
mov
push
dec
rolb
lcall
pop
cmp
mov
sbb
insl
shl
dec
jg
pop
sahf
push
cmp
mov
pop
outsl
jo
mov
cs
mov
mov
cmp
mov
mov
cwtl
ret
ljmp
int
jge
ds
and
mov
adc
dec
pop
filds
push
add
popf
mov
lret
sahf
mov
jns
cmp
enter
sti
out
fisttps
and
sbb
daa
das
push
adc
pop
sbb
pop
aaa
int
cmpsl
in
sub
mov
addl
test
push
ret
push
xchg
add
jbe
in
cmp
out
mov
sbb
mov
push
xchg
xchg
mov
insb
mov
aaa
arpl
pop
out
addl
dec
xor
insb
shrb
and
cmp
jns
dec
sbb
stos
xor
repz
lea
sbb
data16
flds
jnp
adc
inc
clc
sbb
stos
push
outsb
mov
xchg
ret
mov
mov
xchg
imul
movl
iret
rcrl
cmp
cmp
dec
cmp
dec
mov
or
cmp
nop
jbe
jne
gs
outsb
out
fwait
dec
mov
and
push
loopne
popf
into
fsubl
jae
out
dec
xor
adc
sbb
cltd
cmp
add
daa
push
xor
jmp
dec
and
push
or
push
mov
data16
mov
pop
inc
iret
test
inc
jnp
cmp
xchg
fcomip
rcll
int
inc
xchg
lret
mov
xor
arpl
mov
inc
xchg
jge,pn
xchg
dec
jno
add
fs
nop
pop
movsb
adc
pop
fisubrl
dec
xchg
dec
mov
mov
dec
sub
icebp
xor
push
jmp
out
enter
orl
popa
push
push
setp
cmp
movsl
fisubl
shlb
ja
sti
xor
dec
ret
pusha
xor
xchg
rcrb
ljmp
xlat
xchg
lock
push
sub
fnsave
lods
loope
jp
icebp
push
push
jo
addl
dec
enter
push
and
mov
arpl
sub
sbb
sar
int3
inc
fwait
cmpsb
popa
push
dec
jmp
loopne
aas
push
inc
xchg
pop
add
xor
jl
lret
mov
xchg
loop
notb
fnstcw
loop
mov
cmpsl
mov
les
std
xchg
pushl
push
mov
js
dec
adc
sbb
ret
mov
xchg
pop
andb
stos
mov
imul
scas
adc
and
xor
pop
vdivss
xchg
jge
dec
dec
ret
fistl
xchg
xchg
adc
inc
in
cltd
pop
or
scas
arpl
int3
inc
mov
mov
into
sbb
hlt
mov
mov
rclb
push
fsubl
adc
sbb
mov
jns
inc
cmp
mov
push
fsubs
pop
pop
lods
mov
mov
pop
dec
xchg
int3
push
lods
push
cmp
cld
inc
inc
fistps
add
xor
out
shrb
rolb
lds
nop
fldl
popa
ljmp
mov
cmp
aad
out
jg
mov
movsl
cmovo
in
loopne
decb
jecxz
sbb
jnp
xor
xchg
div
jp
into
mov
or
in
adcl
and
pop
psubd
sbb
mov
clc
sbb
outsb
nop
test
incl
and
cs
and
out
fiaddl
jge
xlat
stos
fistps
sub
sub
outsb
push
xchg
mov
push
andl
je
outsl
cltd
push
shlb
inc
or
pop
mov
stos
pop
jle
add
sbb
jecxz
or
push
mov
jb
aaa
aas
aam
mov
jl
int
pop
mov
lea
hlt
repnz
cmp
ret
xchg
adc
out
pop
jp
ds
pop
cmp
mov
push
mov
sub
adcl
outsb
call
pusha
loopne
push
add
pop
int
test
outsb
add
add
mov
rorl
fisttpll
sbb
repnz
xchg
lcall
insl
cli
xchg
stos
push
icebp
mov
dec
out
and
jg
mov
aam
mov
mov
add
mov
inc
jg
mov
xor
rorl
sub
xor
decb
xchg
shrl
movsb
mov
inc
cmp
push
sbb
cmp
inc
mov
sub
maskmovq
mull
pop
adc
pop
clc
data16
jae
xchg
xchg
faddl
addl
mov
mov
and
xchg
push
push
sbb
int
dec
jecxz
jae
xchg
insb
mov
xor
jb
test
inc
xor
mov
stc
or
jne
popl
jae
cmp
mov
push
lret
ss
lods
push
push
lret
pop
jmp
mov
pop
xor
xchg
or
inc
test
xchg
pop
ret
test
and
pusha
lea
lods
sti
ret
xchg
and
mov
leave
pop
push
cmp
cmp
xor
and
dec
mov
pop
jg
inc
rolb
mov
mov
mov
enter
adc
fs
jno
adc
adc
test
adc
ficoml
fs
pop
outsb
jo
and
fimull
rolb
sub
fimuls
pop
mov
in
inc
push
xchg
inc
xor
push
dec
and
sub
pop
jle
pusha
push
and
dec
cmpsl
xchg
loopne
jne
leavew
jge
push
jle
push
pusha
psubq
fisttps
cmp
or
nop
bswap
mov
js
mov
test
jecxz
sub
icebp
aam
fwait
out
pusha
jno
das
jecxz,pn
cmp
add
push
add
pop
jmp
decl
cld
mov
pop
push
pusha
mov
lret
mov
mov
roll
jge
out
lret
mov
or
push
dec
push
insl
pop
repnz
sub
fwait
aam
sbb
call
lret
jle
sar
pop
sub
ret
scas
movsb
cwtl
je
incb
cmp
jl
pushl
pop
inc
aam
add
repz
aaa
mov
fldt
mov
shrl
daa
and
push
pushf
enter
stos
fbstp
mov
popa
rorl
sbb
xchg
or
mov
je
push
inc
xor
rcll
aad
mov
int
and
inc
and
dec
mov
cltd
push
mov
add
jl
movsl
xor
push
pop
scas
push
inc
stos
addl
out
add
jae
xor
mov
mov
mov
fnstsw
jns
xor
pop
jne
nop
push
lahf
mov
mov
std
xlat
call
fisttpll
loop
xchg
lods
icebp
stos
inc
sbb
cmp
das
cmc
mov
mov
out
mov
popf
lods
and
mov
sbbb
jg
dec
adc
out
outsb
push
jg
dec
dec
into
incl
nop
insb
pop
xchg
inc
inc
push
adc
adc
popf
jae
bound
fisttpl
mov
sbb
mov
popf
cmp
out
inc
or
in
mov
lret
sti
roll
xchg
loope
inc
pusha
ljmp
fistps
and
sub
or
pop
pop
pop
shrb
cmp
incb
jmp
push
pop
push
dec
ds
jmp
xor
cmp
xchg
inc
mov
ja
testl
dec
sti
fdivr
repnz
jmp
aas
add
mov
mov
and
sub
sbb
cwtl
dec
roll
pop
sbb
in
fisubrs
cmp
jo
or
pop
call
pop
aad
inc
sbb
jmp
pop
ljmp
rolb
dec
daa
xchg
jp
cmp
filds
inc
lret
sub
jg
mov
out
and
push
push
lcall
movsl
enter
mov
xor
push
lret
mov
js
sub
sub
dec
mov
xchg
mov
push
fisttpll
rclb
mov
jecxz
call
ds
fiadds
jl
inc
clc
or
xor
push
cmp
xor
push
lea
shl
cld
dec
out
mov
dec
xor
out
lds
stos
fisttpll
add
mov
and
add
push
mov
push
in
cmp
xchg
jg
xor
mov
push
jae
xchg
mov
lcall
pop
inc
push
icebp
sahf
mov
jg
push
sub
mov
lret
xor
repnz
dec
push
fcomps
xchg
in
andb
loope
xchg
add
mov
dec
push
push
jmp
sbb
push
stc
or
stos
cmc
cmpsb
es
les
in
and
iret
inc
add
jp
inc
push
cmp
in
out
loope
int
or
sub
into
xchg
dec
lds
dec
sub
pop
mov
idivb
pushf
data16
lret
xchg
imul
jnp
jbe
add
ret
dec
dec
adc
jp
push
repz
or
jg
push
cmc
xor
cmp
jle
ja,pn
lds
rcl
pusha
mov
add
das
orb
adc
js
mov
ret
jb
jno
mov
repz
cmp
pop
cltd
cmpl
mov
aad
add
mov
sub
aam
dec
xor
xor
mov
lret
xchg
mov
cmp
imul
push
mov
xor
out
ljmp
sub
dec
pop
mov
mov
pusha
je
ffreep
lcall
ljmp
aaa
outsb
insb
mov
adc
pop
mov
mov
and
xor
loope
fsubrs
sub
mov
cmp
push
mov
cli
fs
jno
ds
mov
daa
mov
xchg
adc
sbb
jmp
cmp
out
hlt
sub
mov
sarb
adc
scas
add
clc
outsb
push
ja
fildll
test
sti
adc
xchg
js
jb
jbe
push
jne
clc
data16
lds
mov
call
push
ret
push
lcall
shrb
sub
cmp
adc
data16
pop
and
xchg
mov
cmpl
nop
addr16
popf
mov
xor
and
call
push
gs
jae
inc
cs
cmp
push
xchg
hlt
test
out
and
ss
outsb
test
cwtl
xor
loopne
add
mov
lods
jb,pn
fnstcw
pop
out
pop
mov
mov
fnstcw
xor
imul
insl
cmp
cmp
imul
addr16
popf
sub
jnp
dec
and
add
aad
mov
dec
inc
or
inc
gs
or
lea
pusha
jmp
and
xchg
orl
test
test
call
xor
int3
pop
jl
test
dec
loop
les
loope
push
mov
mov
test
xlat
mov
lret
addl
push
mov
ficomps
dec
jnp
into
cwtl
or
xor
xchg
sub
insb
xchg
cwtl
cmp
adc
xor
ljmp
cmpsb
jne
adc
lcall
lea
into
pusha
cmp
rcrb
lret
push
insb
daa
jne
lds
ljmp
imul
cmp
jmp
mov
add
jne
xor
rdrand
imul
fsub
jo
pop
cs
iret
dec
or
cltd
pop
popa
into
mov
movl
xchg
insl
in
cmpsb
xchg
cmp
call
dec
sti
xchg
insl
xchg
or
inc
dec
nop
dec
cmp
pop
test
test
lock
js
cmp
bound
dec
addr16
cld
addb
inc
pop
loop
pop
mov
hlt
mov
sbbb
stos
mov
movq
pop
dec
outsl
add
cmpsl
jecxz
inc
push
daa
cmpsb
ds
mov
daa
jne
popf
add
mov
mov
adc
lods
mov
add
add
mov
cmp
and
shll
inc
adc
sub
mov
shlb
and
adc
test
pop
jge
or
mov
pop
sbb
loopne
mov
inc
push
popa
loope
jnp
mov
cltd
adc
mov
jbe
xchg
cmp
call
dec
test
pop
bound
xor
fcoml
xchg
iret
stos
inc
imul
test
aas
lret
mov
mov
arpl
inc
cmp
xchg
xchg
data16
iret
in
sub
ret
sbb
lret
push
sbb
dec
add
lahf
xchg
jp
or
shll
lcall
fs
dec
mov
cmp
pop
enter
cli
inc
addr16
cli
lods
sbb
and
jb
lods
jle
add
test
stos
inc
imulb
pop
out
leave
imul
add
cmpsl
ljmp
cmp
xor
addr16
stos
ja
repnz
xor
dec
std
jmp
dec
pop
push
mov
in
inc
int
adc
dec
lds
and
sbb
mov
movsl
adc
out
imul
pop
ret
lock
sub
loop
mov
cmp
sahf
stc
jo
aad
dec
or
push
xor
jecxz
sarl
rcrl
xchg
sub
int
inc
scas
jecxz
mov
cmp
into
loopne
mov
sub
les
aam
int3
mov
lock
mov
jp
xchg
insl
fs
pushf
loope
out
cmpsl
je
daa
out
mov
das
cmp
mov
imul
ss
shrl
stc
in
xchg
or
stc
cli
jae
mov
lret
leave
or
xchg
iret
into
dec
into
aas
xchg
push
cmp
or
sub
or
xchg
ret
arpl
add
sbb
incb
popf
popf
nop
je
sbb
adc
rcl
popl
mov
sbb
ljmp
inc
adc
loop
ficoms
xor
lock
push
sbb
mov
xor
mov
jge
fiadds
cli
lcall
xchg
loop
inc
and
jmp
repz
int
bound
mov
pop
xchg
cmpl
ret
daa
aad
pop
adc
mov
into
cli
and
or
push
or
pop
test
es
push
jne
pusha
push
leave
sub
mov
xchg
mov
bound
cmp
jno
jmp
stos
xchg
repnz
mov
rol
jg
negl
je
cltd
pusha
add
xchg
sub
jmp
divl
std
push
cmp
inc
pop
repz
xor
adc
sahf
lods
pop
push
inc
xchg
shll
daa
cmpsb
jae
or
pop
and
inc
adcl
popa
outsb
mov
sbb
jnp
push
adc
clc
and
popf
pop
insl
and
push
mov
scas
cmpsl
or
inc
call
mov
popf
sbb
in
cmp
jp
ret
shlb
lods
jns
and
mov
pop
inc
divl
mov
sarl
ret
lret
or
incl
dec
loop
fstpl
or
sub
push
sub
jns
into
mov
jmp
push
pop
aam
xor
pusha
insl
xor
mov
shrl
popa
fsubl
int3
sub
and
jo
jne
and
lahf
imul
pop
rcrl
fimuls
mov
jecxz
outsb
jnp
dec
leave
xchg
sub
test
inc
imul
jo
mov
into
stc
call
mov
lahf
xor
dec
scas
aam
imul
jb
cmp
inc
popf
inc
jne
sub
repz
mov
jno
dec
arpl
das
xchg
addr16
pop
jo
leave
jbe
xchg
pop
or
test
cmp
sub
add
sub
xor
dec
pop
ss
lods
fs
and
ret
fiadds
dec
mov
subl
or
neg
jmp
inc
fnstsw
inc
stos
mov
test
inc
jp
xchg
stos
push
add
or
sub
push
aam
pop
outsl
lret
push
mov
into
sub
test
xchg
mov
xor
xchg
rclb
add
pusha
xor
jb
xchg
mov
mov
daa
or
popa
into
adc
sub
sarl
xchg
jl
push
sbb
sahf
cmpsb
aad
call
aam
fdiv
jae
push
dec
pop
sub
mov
jmp
pop
and
mov
mov
jge
dec
fs
xchg
mov
push
lret
movsb
ja
push
dec
inc
shrl
jnp
icebp
pmaxub
insb
mov
shl
outsl
movhps
fwait
clc
inc
fildl
inc
scas
andl
lods
pop
addr16
inc
mov
and
aaa
aad
push
jg
outsb
ds
fs
jg
cmpsl
jnp
jo
mov
xchg
adc
xchg
test
bound
xor
jae
imul
xlat
leave
cmp
pop
sarl
sbb
xchg
cmp
cmp
cmc
sbb
dec
sbb
cmp
mov
pop
push
pop
pop
adc
test
imul
dec
ss
lds
sbb
lods
xor
inc
xchg
push
fs
ret
pop
decl
insl
aam
pop
pop
pop
fcmovb
sub
stc
nop
adc
mov
add
movsl
add
xchg
lods
add
or
inc
nop
or
inc
mov
ret
inc
push
popf
cmp
mov
js
mov
adc
fadds
loopne
xorb
pop
dec
movsl
fnstcw
dec
or
popf
out
in
or
push
inc
mov
sbbb
push
ljmp
out
pop
jp
cmc
pop
pop
test
out
adc
rcrb
clc
stos
movsb
sahf
shrl
out
jmp
les
cmp
add
inc
mov
mov
jge
cmp
test
mov
pop
push
loopne
push
cmpsl
and
andl
enter
mov
and
sarb
fldl
sub
fsub
sub
sbb
fs
dec
aad
jbe
icebp
mov
sbbb
jp
bound
shrb
mov
adc
add
xor
out
push
int
movsb
mov
cli
mov
xchg
sbb
mov
lods
inc
test
jnp
inc
mov
mov
cmp
outsb
pusha
adc
fcompl
push
dec
sbb
sahf
das
and
mov
pop
iret
cmp
dec
fsubr
repz
xlat
cmp
in
mov
loopne
push
add
or
aad
mov
data16
bound
cmp
jmp
xor
mov
jge
push
inc
leave
pushf
add
inc
clc
lea
adc
push
jmp
ffree
jp
jmp
addr16
mov
and
adc
in
mov
in
push
push
inc
dec
mov
ljmp
pop
pusha
enter
sbb
pop
dec
sbb
aas
popa
jns
push
sub
inc
mov
and
dec
add
jg
adcb
jo
inc
or
out
std
sbb
cwtl
and
out
push
aas
pop
push
jb
iret
ficoml
push
fdivp
sub
loope
addr16
aad
addb
out
lods
data16
jp
pop
shrl
mov
int3
mov
push
idivl
fsts
fwait
jle
inc
mov
dec
or
inc
adc
xor
mov
pop
pop
mov
mov
xchg
leave
cld
ret
lcall
idiv
xor
and
add
sub
xlat
mov
test
icebp
in
xchg
mov
subl
jp
dec
pop
and
xchg
cltd
clc
pop
push
xchg
in
out
movsl
stos
cmp
inc
bswap
dec
add
scas
and
aam
lods
sar
movsl
dec
in
dec
clc
popa
or
sarl
cmp
enter
subb
xor
fwait
ds
dec
or
popf
clc
js
xchg
iret
push
push
push
bound
std
and
push
cs
xchg
adc
fwait
pop
dec
popl
stos
push
sbb
add
rcll
outsl
jecxz
pop
outsl
xchg
add
loopne
xchg
rclb
or
jmp
aam
and
hlt
clc
cmp
int
adc
pop
mov
lahf
popf
mov
jne
dec
mov
repnz
push
push
lret
cmc
mov
adc
inc
ja
cmp
sub
mov
sbb
push
cs
imul
xchg
aaa
scas
outsl
xor
mov
mov
mov
cmp
sahf
push
sbb
xchg
sti
bound
dec
test
push
add
mov
cmp
movsl
cmp
fmull
inc
pop
jns
mov
sub
and
out
mov
imul
pop
xchg
in
push
lock
ss
pop
in
add
scas
sub
mov
jne
mov
aaa
pushf
push
xchg
std
inc
jne
out
mov
clc
pop
in
adc
sbb
mov
adc
fmuls
lret
dec
ss
inc
mov
aas
in
xchg
adc
mov
fwait
outsb
add
ljmp
or
jne
stos
adc
cmp
push
jg
xor
mov
xorl
pusha
push
dec
mov
rsqrtps
push
jne
mov
xor
mov
mov
xchg
pop
inc
rcrl
fcomip
ret
dec
fstl
cli
ja
sarl
stos
jmp
xor
pop
outsb
and
lret
pop
mov
mov
push
dec
sti
mov
mov
pusha
mov
jns
push
ret
push
addl
aaa
sahf
jnp
int
int3
xchg
movsb
jbe
xor
stc
notl
into
sub
in
xchg
xorb
inc
lods
inc
mov
pop
mov
push
jg
ljmp
sbb
or
test
out
out
mov
and
jo
lret
insb
imul
rorl
cmpl
je
pop
loop
lar
dec
inc
mov
jg
pop
sbb
lahf
out
xchg
and
loopne
outsl
call
add
cmp
sbb
push
xchg
mov
ret
or
adc
lret
inc
dec
sbb
popf
aad
mov
lea
shrb
fldcw
jno
add
dec
fidivrs
pop
insl
lar
cli
jge
jge
mov
mov
add
adc
jns
cli
jp
icebp
mov
mov
es
mov
pop
hlt
bound
cmp
ss
jmp
push
lret
dec
leave
adcl
test
fsubs
pusha
sbbb
dec
dec
mov
push
pop
rcrb
gs
dec
fwait
add
xchg
mov
mov
sub
push
pop
and
hlt
jno
movsb
pop
or
adc
inc
iret
and
dec
add
imul
inc
dec
test
push
imulb
cmp
std
scas
out
jmp
inc
mov
jp
js
icebp
mov
jmp
test
cmp
push
sbb
and
loop
into
pushf
add
test
scas
dec
insl
pop
std
cmpsl
popa
xor
stos
adc
inc
repz
mov
push
adcb
or
inc
and
movsl
js
push
add
test
add
xor
cmp
pop
pop
outsl
outsb
mov
test
xor
std
mov
xchg
sbb
daa
cld
jbe
lock
loope
sti
pop
clc
inc
jo
or
sti
inc
mov
sahf
js
das
ja
cmp
hlt
call
mul
sub
xchg
sub
inc
mov
mov
push
fnstsw
inc
lcall
sub
shll
push
test
or
sub
cli
bound
mov
jmp
jg
and
cmp
xchg
inc
jmp
mov
jae
jns
adc
inc
mov
out
sti
fidivrs
sub
jmp
xchg
add
mov
push
mov
sbb
addb
shlb
mov
icebp
in
xchg
xchg
xor
cli
bswap
or
dec
and
mov
sbb
push
aas
mov
mov
mov
test
daa
sub
insb
lcall
adc
scas
cmp
notl
pop
sbb
leave
add
sub
mov
inc
aad
lds
push
xor
ja
xorl
wrmsr
xor
or
out
adc
loopne
xor
xchg
xchg
js
inc
cmpsl
fmul
jns
push
mov
and
xchg
fisubrs
xchg
icebp
jnp
ss
iret
rol
sbb
cmpsb
mov
push
aam
pop
dec
pop
and
stc
xchg
test
mov
cmpsb
sbb
daa
test
xchg
je
cmp
adc
or
pop
sbb
iret
sbb
jae
int3
insl
out
rcrb
ds
push
rcrl
pop
mov
ds
int3
pop
jo
into
add
add
push
push
push
and
icebp
inc
clc
scas
cmp
test
stc
and
jge
or
leave
mov
rcrl
lcall
jno
movsb
sbb
mov
cmpsb
rcl
imul
and
jo
cmp
fwait
mov
add
add
jbe
mov
nop
imul
add
bound
je
mov
call
stos
mov
sub
sub
push
xor
push
push
mov
sub
stos
inc
leave
cli
mov
or
notl
add
arpl
sbb
cmp
bnd
jns
popa
jmp
xorl
popl
fisubs
pusha
sbbb
aam
push
out
push
dec
insb
iret
ss
jb
jne
push
sub
movsl
jp
aas
int3
mov
outsl
push
scas
ss
stc
pop
movsl
sub
test
ret
mov
xchg
mov
imul
lahf
gs
stc
pop
mov
xlat
adc
test
cmpsb
out
sub
xchg
push
inc
jno
fildll
arpl
jp
dec
jae
jbe
pop
xchg
adc
jl
mov
sub
sarl
sbb
scas
lock
and
shr
and
insl
adc
add
or
sbb
ret
std
fst
scas
fsubrl
cmp
xchg
stos
push
mov
sbb
icebp
lret
cmp
mov
test
lods
sub
pop
out
adc
mov
pop
inc
add
cltd
les
repz
js
jb
jmp
lret
pop
adc
push
out
popa
aam
pop
cmp
push
out
shl
lahf
mov
movsb
mov
ljmp
cmp
mov
xchg
mov
xchg
cmp
push
insb
enter
pop
shlb
sub
or
cmp
dec
dec
or
xor
mov
cmpsl
inc
mov
pop
loope
dec
xchg
add
xor
outsl
add
jae
les
mov
bound
jae
sbb
sbb
fadd
mov
xorb
jns
mov
hlt
adc
lods
in
add
push
jbe
add
fwait
sub
jbe
das
push
xor
sub
and
and
popa
push
jno
adc
mov
jl
xor
push
jno
stc
addb
push
aas
dec
fs
arpl
or
adc
mov
xor
and
out
daa
jae
add
aad
adc
mulb
or
sub
adc
mov
shr
stos
fwait
or
mov
inc
int
nop
divb
fisubl
aam
xchg
jl
shll
and
imulb
mov
mov
ljmp
xchg
loopne
ficoml
negb
xchg
inc
leave
aad
jnp
stc
cmp
mov
int3
lret
popf
popa
jl
int
mov
fwait
or
xchg
pop
or
repz
int
and
pop
shlb
xchg
jns
mov
mov
fsubs
std
movsl
mov
fwait
or
xchg
cmc
fdivs
lret
jns
lea
or
and
cmp
mov
jb
ret
aam
arpl
aaa
imul
mov
mov
sbb
push
lea
mov
movsl
or
pop
mov
mov
mov
call
cli
push
sarb
push
sbb
and
outsb
fiadds
std
or
xchg
and
adc
rcrl
fcom
ret
cmpb
lahf
outsl
ljmp
movsb
xchg
sbb
sub
dec
jo
inc
js
xchg
stos
push
mov
outsl
push
je
jns
cmp
or
add
lahf
int
push
pop
stos
lret
add
inc
cmp
push
shl
pop
jmp
cmp
xor
pop
pop
gs
es
dec
ficoms
add
mov
int3
out
cmp
add
popa
ds
push
out
loop
adc
pop
xor
or
lcall
stc
repnz
adc
mov
fadds
adc
ss
jb
enter
xchg
jecxz
in
mov
aaa
cmpsb
xor
filds
out
add
or
mov
lock
repnz
mov
cli
push
outsl
pop
outsb
add
leave
sbb
sahf
lods
mov
cmpsb
push
dec
xchg
jb
lahf
fbld
outsb
inc
daa
pop
testl
or
xchg
push
ret
fidivs
fisubrs
dec
jmp
pop
add
fsts
cmp
fidivrl
xchg
inc
mov
jecxz
ror
js
in
cmp
sbb
cmp
lods
out
mov
loope
xor
sub
mov
mov
cmp
arpl
jnp
std
push
xchg
aad
or
xor
jmp
arpl
shl
out
add
mull
shl
js
ss
scas
xlat
repz
add
int
fs
add
cmp
cmp
cld
cltd
ja
jecxz
aaa
int
mov
fs
cwtl
or
cltd
adc
dec
cld
adc
orl
inc
sub
pop
outsb
or
mov
and
cmpsl
jl
mov
pop
jg
push
sbb
pop
fiadds
bound
pushf
dec
leave
xchg
cmp
scas
test
jge
mov
testb
dec
insb
std
pop
xor
imul
mov
cmp
push
adc
dec
in
pusha
dec
sbbl
leave
imul
xchg
push
or
adc
lods
mov
daa
add
add
es
xchg
andb
mov
ret
test
fiadds
jb
inc
lock
arpl
inc
pop
xchg
loopne
xchg
lret
sbb
insb
sti
fwait
test
add
xchg
fstpt
outsl
vandps
mov
push
lea
push
inc
sub
lock
cmp
xchg
xor
fwait
sahf
or
test
cwtl
bound
mov
dec
cmp
adc
hlt
lahf
sub
in
pop
xor
cmp
cltd
call
ja
ja
cmc
mov
push
mov
sahf
std
adc
xchg
mov
jmp
or
mov
imul
ret
inc
andl
push
mov
add
mov
push
out
in
popf
shlb
xchg
pop
pop
or
add
inc
jne
push
xor
cmp
sbb
and
mov
testb
stc
sbb
xchg
and
dec
testb
outsb
add
mov
lcall
mov
lret
cmp
test
xchg
inc
in
push
mov
cmp
fs
in
cmp
adc
jge
aam
xor
repz
mov
inc
lcall
addr16
shll
aam
push
movsb
addr16
xchg
jo
test
jno
xchg
xor
jg
test
jns
push
aas
dec
sahf
movaps
mov
in
jmp
shrb
sbb
sbb
arpl
xchg
mov
adc
mov
icebp
jmp
mov
insl
xor
stc
in
imul
flds
jecxz
data16
outsb
cltd
mov
jle
popf
mov
jns
and
rolb
push
jae
inc
loop
cmpsl
adc
data16
mov
call
test
mov
clc
inc
in
xor
lret
sub
pop
inc
xchg
flds
dec
sbb
lcall
push
stos
push
or
and
sahf
cmp
fisttpl
loop
jle
mov
sbbl
das
push
dec
pop
gs
fisubrs
mov
movsl
dec
mov
sbbl
dec
mov
movsl
mov
rcrl
sti
aaa
js
es
jmp
mov
sbbl
push
loop
cmp
push
mov
popf
push
mov
pushf
push
sub
inc
cwtl
lods
jge
or
cli
fcomi
cmpsl
adc
mov
and
push
ljmp
push
insb
shrb
xor
arpl
cmp
and
inc
jmp
and
add
jne
outsb
enter
out
cmpsb
xor
and
mov
psubsb
pop
js
jns
sbbb
clc
mov
or
repz
test
aaa
insb
je
imul
cmp
adc
pushf
popa
rcrb
sarb
stos
in
sub
addr16
cmp
pop
adc
dec
stos
sbb
mov
xchg
inc
in
decl
mov
xor
das
sbb
sub
jle
mov
cmp
lock
push
dec
loopne
in
scas
xor
mov
outsb
popf
lods
or
pop
mov
out
and
adc
pop
insb
sbb
push
leave
bound
in
and
sbb
inc
jecxz
xor
dec
add
test
in
pop
cmp
lret
sti
xor
es
aam
pushf
xor
dec
add
mov
and
notl
mov
fwait
pop
arpl
pop
movsb
loope
repz
popf
and
pop
ja
repz
jae
test
fnstsw
es
add
xchg
scas
pop
pop
lods
pushf
or
or
lea
mov
adc
js
lods
mov
sub
jb
mov
js
out
dec
xchg
mov
xchg
mov
sub
cmp
in
daa
shrl
xchg
mov
xor
lret
xchg
inc
cli
push
addb
jo
icebp
stc
aas
test
outsb
insl
xor
mov
adc
fsts
in
orl
inc
and
aam
cmp
fdivrl
insl
add
lods
xor
xor
or
nop
push
push
lcall
das
jl
cmp
lds
pop
lock
mov
rol
dec
adc
inc
inc
xor
mov
inc
pop
pop
pushf
dec
jno
push
aaa
or
and
adc
or
ds
test
inc
cwtl
inc
add
dec
jp
pop
jecxz
mov
lcall
in
addl
or
scas
mov
sbb
xor
sub
nop
sbb
leave
sbb
mov
aaa
push
xchg
dec
je
loop
mov
push
add
mov
xor
xlat
mov
pop
sbb
mov
lea
jle
daa
dec
jecxz
and
and
sbb
adc
pop
adc
mov
call
jne
cmp
dec
fbstp
push
pop
aas
fs
out
dec
lods
jle
pusha
and
sahf
inc
sbb
incl
lcall
sahf
xlat
lret
xchg
in
push
pop
cmpl
mov
test
xor
orl
imul
out
push
jge
mov
inc
call
into
lods
sti
push
sti
inc
ljmp
xchg
test
fsubs
popf
sub
cmpsb
adc
ffree
push
inc
jp
and
push
push
jl
or
lahf
call
out
push
rol
enter
xchg
sub
mov
and
jns
or
mov
adcb
mov
xlat
push
pusha
mov
sub
xchg
or
push
jecxz
push
stos
aad
imul
out
jb
push
push
mov
add
inc
je
pop
fisubrl
mov
sbb
mov
jg
test
sbb
pushf
push
cmc
std
movsl
sub
dec
cmp
jno
and
xor
cmp
in
mov
adc
mov
fcoms
lods
fadds
out
mov
mov
aam
fdivl
in
rcr
and
jb
test
inc
adc
sbb
mov
movsb
add
mov
sub
xchg
sbb
scas
add
inc
jmp
jbe
push
icebp
sub
icebp
sbb
mov
push
dec
mov
bound
adc
test
jne
push
jb
cmp
dec
int3
aad
add
adc
jns
pop
mov
lahf
mov
imul
lret
loopne
mov
mov
jmp
imul
inc
adcl
stos
adc
xchg
addl
inc
mov
sub
adc
sbb
enter
adc
enter
jbe
dec
orl
movsb
clc
xor
icebp
aam
inc
fwait
jmp
aas
sub
cli
rorb
fwait
sarl
pushf
adc
imull
inc
jp
lahf
mov
add
xchg
or
cmpsb
fcoml
adc
mov
lock
sub
dec
and
into
sbb
and
push
repz
or
inc
sub
push
inc
jne
xor
xchg
rcll
andl
sub
ret
push
daa
movsl
and
lret
repz
inc
and
cli
scas
loopne
sub
imul
push
shr
and
mov
xchg
mov
bound
jl
pop
dec
inc
movsb
arpl
mov
lea
daa
je
mov
fwait
sbb
scas
dec
shll
cld
inc
pusha
ss
jns
inc
pop
xchg
daa
and
mov
shlb
out
adc
int3
sub
cmp
jnp
test
ljmp
sar
shrl
adc
cmpsl
movsl
in
add
fwait
cmp
test
scas
js
push
xchg
lret
lds
mov
mov
sub
jp
inc
mov
xchg
jle,pn
call
pop
or
dec
add
or
adc
ds
test
xor
and
out
jb
daa
or
mov
call
out
ret
aad
cmp
cwtl
ficoms
cmc
cli
icebp
dec
leave
cltd
fstps
subl
adc
and
push
popf
inc
roll
jge
outsb
out
sbb
pop
addr16
insb
xchg
xor
das
pop
pop
push
dec
xchg
xchg
mov
jne
xor
xchg
pop
inc
rorb
in
stos
add
shl
lcall
add
ficomps
lods
cmpsl
sub
push
repz
andb
ret
ret
sarb
sbb
icebp
cmp
sbb
rcll
pop
sub
cli
aad
jne
adc
loop
add
dec
mov
sbbl
dec
int3
loope
xor
loopne
addr16
daa
push
sbb
nop
mov
xchg
mov
mov
pop
lods
or
push
mov
stc
xchg
divl
adc
out
int3
pop
cmp
xor
adc
jb
adc
cmp
aam
adc
dec
mov
loop
xorb
and
jmp
dec
sarl
in
adc
loope
add
call
dec
es
and
shlb
lahf
sub
in
mov
dec
std
or
xchg
mov
insb
cltd
cmc
out
mov
cld
push
or
pushf
add
sbb
and
test
cmp
cmpsl
mov
sub
dec
aas
lret
outsl
pop
rcrl
fsub
jg
xor
mov
mov
cmc
icebp
lret
sbb
js
cmpsb
add
fstpl
jmp
pop
mov
aad
push
cmc
mov
push
cmp
push
int
xchg
adc
jmp
mov
mov
aas
sbb
hlt
mov
repnz
aam
jg
mov
mov
sbb
movsl
leave
mov
xchg
int
clc
adc
or
add
sbb
leave
xor
in
repnz
or
adc
mov
testb
add
push
adc
fdiv
mov
jno
pop
sbb
mov
stos
xchg
jmp
stc
adc
filds
or
jne
push
std
out
push
and
push
add
bound
addr16
sub
es
xchg
mov
jmp
adcb
pop
push
cmp
cmc
lcall
lret
icebp
pop
cmp
adc
pop
or
dec
jno
or
aaa
lods
stc
xchg
mov
into
pop
scas
cwtl
inc
push
mov
int3
stos
and
into
sbb
enter
mov
push
xchg
in
cwtl
daa
cmp
mov
scas
add
cmp
int
fcompl
sbb
xlat
mov
into
cmpsb
mov
pushf
bound
cltd
mov
iret
pusha
xchg
sbb
sub
sub
sub
loopne
in
test
clc
out
ffreep
dec
das
stos
mov
loopne
adc
insb
lret
psrlw
and
mov
or
and
jl
rcrl
cmpsl
icebp
sub
or
stc
mov
std
xchg
jmp
cmp
rolb
sbb
mull
jo
add
mov
jbe
adc
cs
pop
cmp
add
clc
sbb
push
add
icebp
mov
dec
cmp
aam
add
mulb
push
popa
lock
stos
sub
push
add
or
ljmp
dec
sti
or
cmp
in
mov
jae
jge
out
xchg
xchg
mov
insl
pop
push
cld
dec
fs
mov
add
arpl
lea
xor
lea
sti
push
xchg
bnd
cmp
pop
sarb
add
mov
xchg
insl
lret
ds
nop
pop
dec
subl
inc
pushf
insb
movsb
shll
stos
xchg
loopne
lcall
jmp
hlt
add
lahf
outsb
fadds
xlat
out
mov
or
call
les
sbb
sbb
xchg
jne
mov
add
push
xchg
mov
inc
cmp
outsb
mov
push
push
inc
aad
ret
ret
sbb
push
adcl
fistps
cld
in
lods
xor
sbb
xchg
add
repz
sub
stos
sub
jecxz
pop
xchg
js
cmpsl
mov
test
gs
mov
jne
loopne
sub
mov
sub
ss
xchg
mov
push
pop
in
push
shrl
or
jns
dec
sub
dec
push
sahf
jnp
bound
movsl
fidivrs
pop
adc
stos
mov
xor
push
pushf
fistl
mov
adc
les
nop
out
out
xor
ja
rcll
ffree
sub
int
fwait
jecxz
stos
fisubl
jecxz
mov
jae
outsb
fisubl
nop
mov
jmp
cs
or
push
adc
sbb
mov
movsl
push
cld
dec
stos
fucomip
jp
push
push
ss
je
fcmovb
mov
lods
xor
push
xor
loop
out
or
mov
in
lock
push
cmp
call
add
pop
test
dec
loopne
outsl
pushf
ret
inc
xchg
sarb
mov
jle
push
jno
mov
out
dec
lret
and
cmp
xchg
mov
ret
jmp
lcall
fwait
aam
out
cld
fdivrp
pusha
leave
dec
int3
stc
inc
test
mov
shrb
dec
pop
pop
call
repnz
call
cmp
dec
aad
popf
orb
jl
inc
and
pop
lock
fwait
dec
cld
or
loopne
popf
les
call
inc
inc
aas
push
xchg
cmp
in
jae
and
je
dec
out
inc
int3
ret
mov
push
xor
imul
imul
mov
push
cmp
js
pop
insl
jle
pop
movsl
mov
jmp
fs
ja
push
insb
mov
push
and
mov
in
lock
sbb
lods
jo
in
push
pmulhw
sbb
rolb
outsl
mov
mov
dec
lock
adc
push
sub
icebp
mov
jb
loopne
insb
xor
push
or
test
test
aad
xor
xor
lods
addl
mov
shll
push
daa
and
dec
cmp
and
xor
fcmovne
or
push
dec
jle
cmp
xchg
std
mov
ljmp
xchg
pop
sub
mov
sub
test
sub
sbb
scas
shll
ret
into
and
pop
repz
movsb
sahf
mov
and
jb
jno
inc
jl
and
test
cs
sub
mov
adc
adc
xchg
mov
outsb
push
mov
lds
mov
jl
add
clc
jle
inc
movhps
mov
lea
addb
clc
jbe
dec
mov
loop
cmp
and
cmp
sbb
inc
aad
mov
outsl
or
les
jns
cmp
sub
imul
inc
mov
jmp
sub
mov
gs
out
out
les
jnp
jns
add
mov
int
and
movb
or
or
cmpsb
movsb
mov
enter
jb
pop
test
aaa
jns
cmc
in
divl
addr16
inc
jmp
adc
std
xor
adc
jae
jns
std
lret
or
pop
cmpsl
notb
mov
or
sbb
xchg
jl
pop
popa
movsl
xor
add
lret
jbe
out
nop
jmp
cltd
jnp
push
jg
setg
xchg
lock
xor
sub
or
mov
enter
addr16
movl
loop
cmp
sbb
ljmp
mov
in
cmp
popf
jge
jno
fwait
out
imul
loope
ja
popa
push
test
int3
imulb
add
dec
neg
cs
into
xchg
fists
jb
ja
lahf
inc
fcmovnbe
add
pop
adc
push
lods
pop
out
sub
cmp
scas
sbb
movsb
mov
pop
in
mov
mov
lods
int
out
fmuls
ds
sub
mov
xor
mov
shrb
shrl
jp
sti
or
pop
dec
push
dec
sti
int
sbb
sub
hlt
cmpsl
cmpsb
test
js
popf
mov
adc
or
dec
sub
xor
lcall
cmp
sub
sub
push
mov
flds
lret
mov
sbb
ja
clc
in
xchg
xor
jae
add
xchg
aam
movsl
cmp
mov
loop
insb
adc
icebp
lret
fbld
pop
ror
or
jl
add
fdivs
lds
fcmovne
push
fstpl
and
jbe
cmp
mov
cmc
out
push
pusha
int3
testb
push
push
arpl
cmp
sbb
in
shll
pop
add
call
fcmovb
loopne
in
dec
pop
repnz
repz
cmovbe
push
test
push
enter
mov
and
mov
int
iret
fdivp
and
gs
out
mov
cmp
ljmp
cmp
repnz
xchg
daa
ret
or
sub
test
test
test
cmp
scas
adc
lahf
mov
shl
roll
adc
pop
les
add
sbb
cmp
outsl
lock
outsb
test
enter
dec
cmpsb
bound
aas
ret
cmp
cmp
mov
mov
or
out
hlt
inc
push
sbb
xor
ja
pushf
icebp
sub
shlb
movsl
gs
mov
jb
xor
pop
push
icebp
fbstp
adc
cmp
add
movsb
cmp
outsb
lock
inc
ret
push
jecxz
enter
cmc
dec
inc
jae
in
je
sbb
fs
add
imul
fs
cmc
adc
inc
enter
fidivrs
mov
mov
rorl
or
inc
sub
les
mov
jmp
pushl
pop
loope
loop
jle
movsb
movsl
fdivs
imul
test
gs
or
or
js
push
fldenv
insl
and
jbe,pn
pop
popf
mov
addb
aas
and
inc
daa
pop
cmp
sub
sub
push
das
xlat
sahf
sub
lea
or
nop
dec
lods
outsb
add
push
and
addr16
xchg
mov
arpl
xchg
dec
and
inc
adc
adc
mov
pop
loopne
jmp
xchg
push
sub
push
fmuls
iret
xchg
aaa
jae
adc
and
inc
xchg
shll
adc
pop
sbb
sbb
shrb
std
movsl
hlt
pop
cltd
mov
jno
sbb
fs
inc
daa
jmp
int
shrb
inc
adc
mov
sub
sbb
out
mov
push
fdivrl
jno
mov
insb
jne
das
dec
inc
lods
bound
sub
popf
jmp
sti
inc
mov
pop
int3
shll
addr16
inc
sbb
mov
sbb
xchg
imul
cltd
jbe
lds
fbld
push
sub
xor
dec
insl
arpl
pop
add
xchg
sub
jo
and
inc
pop
cmpsb
mov
std
fiaddl
push
repnz
sub
shrb
add
test
dec
jb
cmp
in
repz
sbb
dec
test
pop
mov
cwtl
std
int3
add
sbb
out
jge
xchg
mov
je
add
mov
mov
jne
popa
cmp
jp
pushf
bound
stc
outsb
clc
jmp
jns
outsb
mov
xchg
dec
or
push
sub
test
cld
cmc
imul
pop
outsl
aam
mov
adc
jle
mov
mov
inc
or
xor
in
jns
jecxz
mov
xor
adcb
sub
shl
and
and
pop
shrl
pop
stos
mov
rcll
xor
lock
stos
mov
data16
aaa
or
int3
mov
xor
mov
std
cmpsb
sub
xchg
fwait
mov
ret
pushl
jns
movsb
in
inc
and
or
flds
xchg
mov
push
xchg
cs
or
xchg
popa
mov
int
mov
xchg
ficoms
arpl
sbb
push
xchg
addb
out
movsb
mov
in
ljmp
mov
mov
pop
mov
inc
xor
out
out
sub
cmc
iret
jle
mov
hlt
adc
sub
out
adc
xor
loop
mov
sub
push
mov
jl
xor
jne
adc
add
cmc
dec
xchg
jecxz
sbb
lods
lret
jp
fidivrl
jmp
pop
cmp
cld
xchg
inc
andl
rcl
cmpl
and
cmp
and
mov
cmp
icebp
mov
popf
mov
scas
fwait
xorl
push
jne
mov
fisubrl
hlt
jle
lods
shrl
mov
test
cmc
mov
or
movsl
mov
push
test
bound
shll
mov
test
sbb
adc
inc
lret
cmc
dec
in
push
sbb
inc
jne,pt
sub
mov
adc
fstps
xchg
call
repnz
push
cltd
pop
dec
test
add
sahf
popa
cltd
mov
mov
ss
mov
daa
mov
push
nop
and
or
lcall
xchg
inc
inc
std
jmp
ss
sub
andb
or
cmp
cmpsb
mov
sub
shrb
pop
cmp
arpl
repnz
push
push
cmp
pop
lahf
push
pop
loopne
xor
jle
cmpsb
mov
and
out
jp
popa
pop
cmp
push
js
inc
push
cmp
mov
fnstenv
outsb
mov
imul
inc
mov
std
ficomps
stos
pop
jbe
jns
lret
subb
out
lds
icebp
xchg
xchg
fwait
xchg
std
push
je
loope
jp
mov
int
pop
sbb
les
out
add
mov
movsl
stc
add
pop
dec
mov
mov
inc
call
ret
pop
shll
stos
cli
leave
jp
aaa
xor
gs
arpl
into
jnp
sub
cmpsb
test
adc
lret
push
pop
std
dec
mov
jge
add
std
int
jle
repz
cmpb
xsha1
cmpsb
int
jb
pusha
xchg
aaa
push
xchg
jl
xor
adc
xchg
pushf
fs
jp
inc
cld
mov
sahf
jae
dec
dec
fsub
mov
shrl
pushf
mov
mov
and
std
loop
push
imul
lods
cmpsl
repnz
cmpsb
mov
icebp
arpl
dec
xor
pop
inc
adc
cltd
adc
lods
mov
inc
cmp
pop
inc
push
cmpsl
jns
lahf
xlat
mov
pop
dec
rolb
fldenv
and
leave
in
sub
cmp
sbb
hlt
mov
xor
push
pop
xlat
icebp
mov
lret
mov
sti
mov
aad
add
xor
ja
jecxz
idivb
in
js
lret
outsl
fidivs
or
add
xchg
push
fcompl
add
sub
movsb
xor
fidivl
les
mov
jle
dec
mov
ret
or
cmpsb
ljmp
orl
fbld
cmp
pop
nop
insl
and
in
xchg
insb
push
add
imul
sbb
fldt
and
fisubrs
push
popa
nop
imul
aam
jns
pop
ja
dec
cmpsl
gs
jmp
cmp
xor
lret
aas
ja
cmc
loopne
sub
addr16
push
dec
adc
xchg
cmc
dec
clc
add
movsb
cmp
cmp
mov
sbb
cmp
push
sub
sub
out
std
movsw
pop
push
mov
push
rcrl
pop
imul
dec
fdivs
xchg
xlat
mov
pop
in
mov
popf
gs
test
push
add
or
mov
jnp
mov
cltd
mov
and
pop
inc
dec
shrb
out
or
pop
fstl
in
mov
cmpsl
add
cmpsl
decb
in
mov
jo
ss
cwtl
cmp
dec
and
add
cmpsl
lcall
loope
or
scas
ss
out
xor
repnz
mov
insl
ret
xor
pop
push
adc
in
insb
or
aam
outsb
mov
rcll
scas
lret
sbb
pop
shll
enter
adc
push
push
mov
cmp
jmp
xchg
out
mov
lea
fucomip
sub
push
pushf
mov
rol
cmp
std
imul
pop
xchg
mov
in
pop
cmc
cmpsl
hlt
fs
mov
xchg
je
cmp
jno
cs
dec
pop
clc
or
call
inc
pop
fnstenv
out
add
sbb
or
sub
rolb
lahf
xlat
cmpsb
dec
movsb
cmc
mov
lret
std
lret
mov
mov
cmpsl
cli
xor
xchg
mov
es
cltd
inc
mov
cmp
insb
pop
mov
inc
push
in
adc
mov
shr
sbb
lock
shrl
push
dec
dec
int3
lods
jecxz
push
jmp
xor
mov
repz
call
mov
or
push
pop
sub
test
test
les
cld
mov
push
aas
xchg
sbb
inc
sbb
mov
jo
sbb
mov
xchg
mov
rorl
rcrl
sti
test
call
or
xor
push
fwait
outsb
cmp
push
test
pop
sbbl
arpl
scas
push
jns
test
dec
jo
dec
lcall
imul
sbb
lock
lcall
and
inc
out
dec
into
jle
xor
std
mov
adc
push
sub
cmp
jae
shlb
fimull
andl
pop
adc
inc
mov
inc
das
mov
shl
stc
push
sub
mov
popf
movsl
push
pop
or
mov
sbb
negb
int
mov
push
call
sub
and
sbb
pop
loop
sbb
xor
push
adc
add
imul
mov
mull
xchg
stos
push
imul
mov
cmp
dec
adcl
jo
mov
cmp
adc
call
in
xor
jl
outsl
pop
adc
sbb
or
pop
sbb
loop
bound
leave
std
lds
outsl
xor
or
in
adcl
rcrb
dec
adc
jno
jnp
mov
add
pop
in
inc
cmpsb
pop
xchg
or
mov
scas
addb
icebp
and
movsb
andb
push
xchg
icebp
jbe
dec
cmpsb
inc
scas
pop
cmc
cmpsl
push
adc
or
pop
dec
sahf
popf
fcoms
adc
fistl
cmp
fimull
add
mov
stc
scas
pop
inc
insb
add
xor
imul
lret
adcb
aad
sub
mov
xchg
push
icebp
sub
push
inc
gs
xchg
bound
adcl
jle
push
rorl
mov
mov
sub
adc
mov
js
addr16
sbb
xchg
aam
hlt
lcall
andb
nop
and
jmp
mov
aam
fcmovnb
jae
inc
jne
xor
sbb
xchg
mov
add
cwtl
rorb
test
pop
xor
lds
sbb
jge
sbb
mov
mov
jl
loopne
xchg
cltd
inc
test
dec
mov
add
mov
add
rclb
cmp
pushf
mov
orl
jmp
xor
jp
dec
shl
insl
xchg
imul
lock
xchg
fwait
pop
cmp
jle
xor
repz
cmp
icebp
divl
cmp
test
xchg
push
mov
mov
xor
jmp
sub
mov
xor
out
pop
fidivrl
xchg
test
fs
in
shrb
sbb
cs
inc
fisttpl
or
or
mov
pop
sub
out
xor
lods
mov
cltd
mov
jae
outsb
fs
ret
fadd
rcrb
jbe
push
adc
xor
ret
pop
add
push
fnstsw
cwtl
test
dec
stos
ja
inc
xchg
xchg
mov
mov
aas
xchg
dec
cmpsb
mov
push
sbb
xchg
imul
test
fwait
in
jb
enter
push
fidivrs
jecxz
pop
popf
add
push
pop
inc
gs
dec
xchg
mov
or
lcall
cmp
loopne
in
test
stos
sub
sbb
cwtl
mov
add
gs
add
out
pop
pop
push
es
cwtl
adc
add
dec
sbb
mov
jg
xchg
jo
ret
fmul
shrl
push
subl
xlat
shll
imul
push
pop
dec
movb
push
into
lods
sti
dec
and
cmpb
push
push
fstpl
cmp
movsb
sbb
mov
mov
rcll
lret
cmp
pop
sbb
shl
push
int3
test
arpl
idiv
jecxz
sub
inc
dec
jnp
popa
lea
sahf
inc
and
decl
and
into
test
add
wbinvd
lea
sarl
sub
adc
xor
daa
cmp
mov
adcl
or
icebp
dec
ljmp
rcrb
and
add
sahf
js
push
sbb
lds
mov
inc
divb
mov
xor
xor
pusha
js
lds
jge
push
jbe
or
pop
stos
add
jnp
mov
inc
aam
lods
jecxz
mov
lahf
call
stc
sub
adc
cs
stc
pop
add
mov
iret
testb
xor
mov
es
call
mov
and
aaa
lods
or
insb
icebp
bound
dec
add
outsl
sub
in
insb
mov
and
adc
sub
addr16
fbld
add
inc
pusha
cwtl
jmp
arpl
inc
out
testl
jno
pop
das
lds
cwtl
pop
sbb
aaa
pop
call
or
jmp
insl
ja
and
hlt
dec
xchg
imul
add
ja
dec
adc
lods
mov
inc
inc
jno
inc
mov
mov
in
aas
cmp
fnsave
dec
je
mov
xor
call
lret
xchg
pop
sub
mov
test
sarl
push
jecxz
in
lds
mov
in
mov
ljmp
ljmp
sbb
fmull
mov
lret
inc
adc
je
cmp
scas
aad
iret
lret
adc
in
ss
or
dec
aas
and
fildl
and
sbb
cwtl
sbb
addb
push
push
sub
subb
jg
mov
push
mov
push
dec
cli
mov
in
hlt
test
jmp
cli
loopne
xor
adc
fwait
js
cmc
dec
lods
mov
fisubrl
adc
ljmp
xchg
push
pop
adc
leave
mov
fwait
xchg
jno
sub
das
sbb
cmp
icebp
xchg
xchg
push
add
add
dec
clc
pop
data16
inc
cmc
fs
push
rcll
fadd
mov
pop
daa
adc
inc
add
std
or
es
push
xchg
jg
xor
adc
stos
fwait
and
aad
cmp
ficomps
jecxz
pop
and
inc
aad
sub
dec
xor
inc
jge
into
adc
stos
outsl
shll
cltd
sbb
mov
test
jp
and
jmp
dec
rcl
loopne
test
hlt
cld
mov
loopne
pop
sbb
sarb
jmp
sbb
cmpsb
ret
scas
int3
or
rcrb
sbb
pop
dec
ja,pn
insb
cmp
lock
leave
jnp
test
sbb
test
xchg
push
xchg
push
mov
pop
push
cmp
js
lock
mov
xor
mov
cmc
inc
xor
push
cmpsl
jnp
enter
insb
ljmp
mov
and
sub
mulps
mov
stos
hlt
or
ja
mov
test
mov
and
lock
mov
into
pop
and
repnz
lock
scas
lods
mov
hlt
mov
test
push
dec
jnp
incl
jbe
sub
loope
inc
iret
inc
mov
add
or
add
clc
decb
mov
mov
jns
fs
jns
lcall
enter
ss
dec
fs
mov
ficomps
lcall
mov
movsl
mov
xorl
pushf
xchg
test
lods
out
jg
mov
xor
sti
cmp
pushl
push
rorb
inc
jle
and
cld
mov
mov
div
add
popf
xchg
and
outsb
jle
jae
cli
xchg
repz
push
int
mov
cmp
out
mov
mov
cmp
inc
bound
adc
std
add
les
sub
pop
jae
mov
adc
shlb
push
mov
pop
cmpsb
mov
fnstcw
mov
jnp
ljmp
sbb
imul
and
popf
xchg
pop
enter
cmpsb
daa
data16
sub
lret
and
push
out
pop
xchg
push
cwtl
add
mov
sbb
mov
cmpsl
in
mov
movsl
sahf
cltd
or
fsubr
in
pop
push
xchg
add
aad
jnp
or
mov
mov
cmp
ja
fsubrs
mov
mov
outsl
icebp
enter
add
ret
roll
adc
loope
aad
sbb
stos
aad
pop
cwtl
adc
push
fistpl
clc
or
pop
cmp
outsb
or
mov
sub
jmp
mov
mov
sub
out
out
lods
hlt
lock
xchg
mov
xor
xor
inc
enter
mov
dec
mov
sbb
xchg
jbe
cmp
adc
inc
enter
dec
jecxz
xor
sub
rcrl
negb
sbb
push
movsb
xchg
or
das
inc
sbb
sbb
xchg
js
cmp
mov
mov
mov
adc
popa
mov
pop
in
addr16
test
xchg
pop
cli
pusha
mov
mov
cmp
xchg
dec
sti
nop
xchg
sbb
mov
aas
dec
sarl
dec
lahf
insl
push
push
cmp
mov
das
and
xor
jbe
sbb
jl
mov
mov
mov
add
jecxz
fs
and
and
cmpsl
or
int
inc
sub
add
pop
fwait
popf
push
xor
shl
add
out
jnp
cmp
notb
popa
xchg
test
pop
adc
sbb
xor
pop
stos
xchg
mov
in
std
scas
movsb
jmp
cmp
pop
repnz
mov
mov
xor
lret
push
jg
daa
mov
rcl
fistpl
pushf
sub
push
sbb
gs
mov
je
fildll
pop
mov
leave
lods
fs
pop
inc
mov
adc
adc
add
sub
mov
push
pop
popf
mov
push
mov
shlb
jl
insb
fcompp
cld
sbb
fs
mov
sar
mov
pop
in
sub
imul
test
mov
and
add
fmul
xchg
lds
cs
fcomps
push
aaa
mov
inc
lods
add
pop
mov
out
ret
mov
sahf
aam
jbe
andb
out
fistl
repz
or
icebp
push
xchg
loop
js
cmp
adc
insb
cltd
loop
xchg
mov
sub
ret
fcmove
aas
lcall
imul
stc
inc
xlat
call
mov
or
adc
xor
mov
sbb
pop
xor
push
rorb
push
jbe
adc
cmp
adc
scas
mov
or
sub
lcall
sahf
movsb
and
aaa
xchg
insb
ja
pop
xchg
add
xor
je
std
sub
add
mov
push
lock
cli
add
mov
lock
push
xlat
mov
dec
std
call
shlb
jmp
sub
pusha
jecxz
fxch
push
mov
add
cld
clc
push
aad
pop
pusha
fimuls
mov
xchg
into
dec
cmpsb
push
lods
aam
int3
or
daa
fildll
sub
shll
push
xchg
xchg
pushf
push
xchg
inc
and
fwait
sbb
jg
mov
shlb
out
aaa
sub
or
push
lret
repz
test
or
mov
dec
nop
lret
in
dec
int
test
pop
sahf
adc
xlat
test
cmpsl
cli
push
sarb
mov
std
ret
ljmp
lcall
hlt
inc
je
mov
and
sub
loope
cltd
jns
adc
les
push
mov
lcall
sub
adc
imul
xor
mov
push
pop
inc
mov
lret
sahf
stos
ret
movsl
cmp
movsl
inc
cs
mov
int3
pop
rcrb
sub
xor
pop
cmc
dec
pop
dec
push
mov
push
mov
dec
lock
jle
popf
test
ss
dec
repnz
mov
mov
inc
mov
scas
push
fcom
lret
pop
sub
adc
lcall
push
inc
dec
mov
xchg
add
jp
popa
cld
scas
imull
push
dec
lcall
sar
inc
and
cld
push
cwtl
in
cmp
mov
loopne
rcll
das
out
lds
xchg
push
push
mov
mov
andb
mov
jb
sbb
lods
push
gs
push
outsl
mov
pusha
dec
jno
cld
daa
test
leave
mov
arpl
nop
leave
mov
adc
shrb
add
repnz
dec
lahf
movsl
push
mov
inc
cmpsb
dec
mov
xchg
sbbl
call
xchg
pusha
sti
xor
mov
ja
mov
pusha
arpl
roll
inc
mov
cli
add
fstl
inc
ds
mov
add
loope
and
leave
ret
lahf
ss
mov
insl
add
xor
shlb
cli
ds
mov
in
out
arpl
stos
or
xor
jge
cmp
push
add
xchg
das
pop
pop
sub
sub
daa
pushf
ret
adc
mov
ja
out
pop
push
pushf
ja
push
adc
mov
and
fidivrs
mov
stos
cmpsb
in
int3
mov
push
test
sti
mov
adc
fadds
inc
cld
scas
xchg
loopne
ss
xor
push
xor
icebp
out
sbb
xchg
and
leave
dec
test
inc
adc
push
sbb
add
inc
mov
lret
repnz
stc
enter
jge
dec
mov
iret
into
addr16
add
clc
in
int3
pop
bound
aam
lods
lds
mov
inc
xchg
dec
cmpsl
cwtl
jge
faddl
cmc
loope
push
sub
inc
popa
or
stc
sbb
int
push
mov
push
fs
cwtl
push
jmp
shll
sub
aas
out
mov
pusha
xchg
icebp
adc
js
jmp
mov
mov
mov
pop
jns
outsl
cmp
inc
mov
jns
les
or
xorb
into
lea
dec
pop
dec
dec
aam
imul
dec
jmp
imul
sbb
pop
sub
std
test
push
mov
enter
inc
int3
mov
daa
scas
int3
popa
lea
add
and
inc
dec
fwait
and
les
imul
mov
jb
rclb
push
idivl
ss
shl
cmpsl
cmc
filds
int
and
cwtl
dec
mov
enter
jecxz
dec
ret
std
and
aam
jl
adc
int3
jb
sub
cmpsl
lods
popw
out
jge
lods
lea
cmp
push
jbe
icebp
js
xorb
mov
rclb
call
test
shrl
decl
sbb
add
xchg
push
mov
out
leave
icebp
fiadds
loope
xchg
imul
cltd
cli
inc
xor
sbb
push
cmp
mov
std
add
pop
sub
push
push
outsb
adc
push
es
orb
jl
jo
fs
es
xor
adc
pop
sub
push
jp
mov
xchg
in
lret
fdivrs
clc
mov
pop
fcmovb
jo
mov
jl
insb
testb
xchg
jge
mov
insl
cmc
jmp
inc
lahf
test
dec
pop
inc
adc
pop
jbe
sbb
addr16
dec
cmp
lret
jnp
xchg
jle
add
loopne
cs
mov
dec
imull
andb
lods
xchg
iret
xchg
pop
inc
push
imul
cmp
xor
mov
sub
negl
push
sub
xchg
in
jb
and
or
ja
xchg
nop
ljmp
xchg
jb
movsb
or
notl
shlb
mov
xor
fsubrs
push
addl
cmp
or
outsb
es
and
insb
sahf
daa
pop
std
test
jl
js
ret
mul
fisubrl
loopne
insl
jecxz
pop
fcompl
roll
sub
and
fucom
pop
clc
lret
popa
loope
filds
out
lds
mov
and
push
mov
pop
movb
call
xchg
push
mov
cltd
adc
cld
ds
inc
mov
lock
cmp
pop
and
lahf
aas
adc
or
dec
sub
xor
jns
push
sub
push
popa
dec
fcompl
outsb
pop
sti
mov
lcall
lock
fs
cs
and
push
adc
ficoml
loope
xlat
in
cmp
stc
ljmp
mov
dec
jmp
scas
insl
adcl
bound
cmpsb
push
andl
inc
pop
fwait
inc
loopne
and
pop
aas
arpl
mov
cwtl
cmp
fdivrl
xchg
cmp
andl
pop
int
sti
push
lods
pop
or
into
sarl
jmp
scas
out
mov
cmpsb
pop
sti
dec
mov
inc
int
push
sbb
push
iret
addr16
jge
sbb
mov
pop
xchg
mov
cmpsl
mov
arpl
ss
test
out
add
das
ficompl
std
lods
push
shrb
aam
sbbb
nop
lods
arpl
add
outsl
adc
mov
jne
insb
into
jne
sarb
pushf
in
ja
adc
fisttpl
fld
pop
or
jae
push
dec
push
cmp
sub
pop
out
movsb
or
cmp
mov
and
pop
add
sbb
jnp
mov
jae
adc
and
imul
mull
xor
inc
popa
je
scas
adcb
mov
ror
xor
dec
xchg
bound
imul
rorl
out
jno
mov
xor
xor
dec
jno
pop
pop
popf
das
push
add
lods
jp
int3
lods
int3
cmpsl
push
sbb
enter
shll
js
mov
loopne
scas
lret
mov
cmp
xchg
adc
jns
in
cmc
fwait
repz
dec
ss
pop
pop
adc
xor
add
int3
jmp
inc
jo
pop
test
out
mov
fcompl
pop
or
pushf
inc
or
outsb
shlb
lahf
or
out
es
push
dec
repz
jle
ljmp
scas
xchg
das
insb
sbb
sbb
imul
in
cmp
out
sub
into
sbb
fnstenv
jmp
mov
cmp
xchg
test
mov
ret
mov
arpl
lods
inc
pop
sub
and
sti
mov
add
lock
sub
mov
popa
mov
inc
pop
lret
lret
cmpl
fnsave
xchg
xchg
cmpsl
out
mov
outsl
add
cmp
sub
out
xchg
push
int
xorl
jnp
jge
test
add
jge
or
hlt
push
stos
pop
cmp
mov
xchg
rcll
sub
push
das
mov
inc
imul
adc
mov
cmp
mov
and
aas
das
push
les
les
jge
cltd
mov
inc
icebp
sti
adc
shrl
insb
sti
inc
es
popa
cwtl
push
pusha
sub
xchg
mov
test
sarl
cmp
shll
pop
xor
aam
push
in
andl
sbb
das
pop
sbb
popf
test
mov
jl
loope
inc
dec
pop
fs
dec
aaa
outsb
and
and
test
out
add
mov
fmuls
ret
stos
mov
pop
aam
lahf
sbb
xor
out
int3
mov
mov
pop
push
stc
cmp
sbb
inc
fisubrs
in
or
bound
xor
or
stc
pushf
adc
fists
jno
add
xor
adc
jg
sarb
lock
mov
add
repz
and
lods
arpl
sbb
xchg
jge
fcomps
negb
add
or
mov
push
inc
rolb
cmp
decb
dec
mov
xor
movsb
jp
jp
cmp
sbb
dec
imul
lret
adc
or
sbb
sbb
insb
mov
xor
push
add
pop
push
adc
push
pop
out
cli
dec
stos
push
stos
cmc
and
shlb
scas
lods
mov
int3
sub
test
sub
lret
or
add
jbe
mov
hlt
flds
lods
pusha
pop
std
fs
hlt
aam
or
add
fisubl
rorl
xlat
popa
scas
cmp
shrb
cltd
add
pop
mov
clc
sub
xchg
mov
sub
jne
inc
mov
cmpsb
ja
mov
adc
xchg
leave
rorl
mov
inc
add
jp
xor
xor
mov
out
pop
jbe
mov
test
insb
pop
fs
adc
fs
adc
xor
lret
out
repz
or
dec
movsl
pop
clc
xchg
push
mov
or
rolb
pop
mov
lods
jbe
or
dec
xlat
test
xchg
test
dec
rol
mov
lock
outsb
sbb
sbb
push
scas
icebp
stc
outsb
cmp
pushf
pop
call
fiaddl
mov
sbb
aad
mov
fucomip
mov
sbb
mov
add
xlat
jb
movsb
jg
dec
dec
lret
dec
xor
repz
push
mov
mov
outsb
fildll
mov
jb
mov
popa
ljmp
daa
push
jnp
sub
xchg
jle
xlat
inc
pop
xchg
imul
mov
jl
mov
sbb
push
aam
je
rclb
iret
iret
leave
inc
arpl
dec
inc
mov
add
pusha
mov
mov
dec
xor
push
add
add
filds
cmp
pop
pop
mov
stos
add
sbb
mov
out
in
adc
dec
sti
fwait
outsl
mov
dec
scas
std
inc
int
xchg
outsl
dec
imul
push
imul
nop
fsubrl
out
pushf
sarb
movsl
sub
into
insb
insb
jl
pop
dec
out
and
mov
pop
ljmp
imul
jnp
mov
insb
aam
repnz
add
dec
xor
mov
push
push
add
sbb
jnp
loope
pop
ret
xor
push
jbe
pop
mov
push
jbe
dec
pushl
and
arpl
jmp
insb
or
call
insb
xchg
xchg
std
xchg
mov
cwtl
pop
pop
imul
pop
add
mov
sbb
push
lods
push
stos
mov
xor
dec
jge
adc
add
hlt
xor
push
push
pop
push
adc
ja
sbb
push
mov
insb
fadd
loop
out
dec
sub
sub
cli
mov
adc
ret
movsb
sbb
dec
inc
test
push
mulb
fdiv
leave
movsb
call
imul
or
cmp
mov
cmp
xchg
out
xor
sub
mov
cli
and
sti
add
scas
jnp
rorb
push
rorb
dec
push
insb
out
ja
inc
lcall
push
pushf
xchg
lret
or
ror
mov
dec
data16
cmp
xchg
call
mov
adc
repnz
sub
fimull
je
mov
outsw
fs
sub
nop
stc
sub
loopne
fstl
sbb
jb
jae
sbb
or
ljmp
or
mov
add
dec
mov
stos
in
add
add
filds
mov
pop
stos
sbb
xor
sbb
bnd
mov
pop
xor
sub
xor
cmpsl
test
out
cmp
push
jb
push
stc
sbb
test
mov
dec
cmc
loop
iret
mov
lods
cmp
push
xchg
mov
lret
insb
aad
outsl
daa
test
lea
mov
dec
pop
orb
ja
and
mov
mov
cltd
mov
jnp
dec
xchg
push
push
push
push
cs
daa
andl
push
cld
fcoms
mov
imul
sbb
sub
jle
xchg
daa
and
cli
stos
xchg
adc
rcrl
xchg
xlat
jno
cmp
popa
iret
arpl
les
inc
stc
test
sub
adc
test
in
xlat
cli
pop
jne
test
insl
jne
jl
jmp
xchg
sbb
or
jnp
movswl
mov
xlat
pop
mov
popa
sbb
xchg
mov
shll
in
mov
in
ret
insb
data16
int3
or
xor
popa
test
xor
rolb
data16
outsl
jb,pt
mull
sub
mov
aaa
jne
inc
mull
movsl
dec
adc
je
je
dec
cmp
jns
xchg
add
sbb
jp
icebp
push
dec
popa
in
cmpsl
mov
push
jl
imul
adc
pop
cmpsl
cmpsb
mov
ffreep
imul
or
mov
xchg
andl
mov
fwait
jg
push
jne
loop
sbb
fisubl
sbb
sub
roll
mov
push
fucomp
leave
repz
jae
inc
divl
or
xchg
pop
aam
loope
mov
fdivrs
dec
and
mov
sbb
leave
lea
push
fldt
mov
repnz
jno
loop
push
in
shrl
mov
and
and
cld
or
inc
push
xlat
add
test
xchg
add
pop
sub
or
mov
mov
arpl
cmp
sub
int
jns
xchg
jecxz
scas
ficoml
fdivrs
mov
ds
mov
xchg
inc
add
daa
popf
adc
cmpsl
xchg
and
xchg
out
mov
and
xchg
xchg
lds
scas
jecxz
xchg
xchg
hlt
xor
fistl
stc
xchg
cmpsb
dec
xor
push
imul
cmp
out
xchg
mov
sbb
or
rclb
movsl
and
push
sbb
xor
cmp
sbb
in
stos
aad
push
mov
cmp
pop
xchg
xchg
popa
gs
dec
xor
push
jecxz
roll
jmp
aas
mov
mov
cltd
jb
loop
js
jle
mov
push
icebp
sti
enter
sub
inc
into
dec
shrw
jg
adc
sub
push
dec
sub
cs
adc
insl
add
popf
shll
cmpsb
sub
shll
push
ljmp
hlt
jbe
call
dec
xor
pop
loope
dec
ficoml
xchg
js
mov
cmc
lea
mov
int3
imul
xor
lret
push
xlat
pop
popf
mov
loopne,pt
dec
aad
sbb
pop
dec
in
arpl
leave
mulb
cs
rcll
mov
and
fcoms
mov
repz
std
add
sbb
lahf
mov
arpl
inc
add
cmp
enter
mov
push
jecxz
test
dec
sub
add
mov
out
mov
bound
out
jb
sub
imul
cmp
jbe
jae
mov
stc
mov
pop
aam
sbb
mov
pop
lcall
mov
cmpsl
lahf
orl
out
sti
hlt
dec
out
aad
adc
mov
mov
mov
xchg
cmp
loope
in
dec
mov
dec
mov
cli
dec
xchg
xor
push
inc
je
nop
movsb
cmp
les
ret
mov
sahf
rcr
mov
aam
xor
push
sbb
or
ret
lea
test
pushf
fnsave
movsl
mov
mov
repz
cmp
popa
cmp
or
std
pop
insl
mov
shl
jmp
jno
out
push
mov
pop
pop
jge
daa
sub
inc
int
cmp
dec
adc
xlat
cmp
inc
push
lea
clc
mov
stos
in
repnz
and
or
inc
xor
mov
push
fidivrs
lods
nop
xchg
outsb
ja
jp
dec
push
xlat
dec
pop
ja
jmp
xor
mov
leave
mov
and
rorb
push
lcall
fcmove
inc
out
cmp
adc
rcrl
adc
stos
stos
dec
inc
call
sub
mov
fimull
jl
sub
jl
aaa
roll
mov
cmp
push
xchg
inc
mov
fstl
loop
xor
out
sbb
je
mov
lods
pop
and
push
andb
mov
xor
cmc
adc
sub
int3
and
test
fdiv
adc
stc
repnz
push
inc
dec
sub
test
sti
hlt
aas
mov
inc
xor
xor
pop
outsl
mov
jmp
mov
pop
cmp
mov
cmp
aad
lcall
xlat
in
adc
push
das
cltd
daa
xor
or
and
iret
cmp
mull
ja
add
bound
mov
in
cmp
int
stos
push
xor
inc
or
aaa
dec
inc
or
cld
cli
and
movsl
arpl
add
popa
xlat
cmpb
mov
push
jmp
cwtl
scas
insb
ds
ret
lods
das
lods
hlt
shrl
mov
out
xlat
cmpsl
push
lret
jmp
push
jo
pop
mov
push
lods
daa
mov
movsb
mov
inc
movsb
lret
das
mov
addb
imul
in
fs
fwait
lock
hlt
cmpsl
or
seto
lcall
inc
jbe
or
stos
ljmp
lahf
pop
jne
mov
loopne
orb
loope
adc
fdivrs
inc
idivl
mov
push
loopne
add
in
je
push
pusha
xchg
and
push
int
in
push
mov
pop
xor
sahf
dec
out
sub
pop
scas
sbb
and
mov
fsubr
add
jmp
lock
clc
int3
fsubr
pandn
sub
into
jge
inc
xchg
cmp
rcl
mov
fists
pop
clc
ret
pop
testb
leave
ret
push
jne
mov
es
pop
adc
in
lock
pop
dec
xlat
xchg
fs
jae
xor
push
push
mov
jge
push
addl
les
imull
cmp
orb
in
xchg
pop
fdivr
arpl
jne
sbb
jno,pt
lret
xchg
mul
out
lret
call
mov
pop
adc
cli
xchg
mov
ret
sub
aaa
divl
and
test
int3
xchg
cmpsb
andb
bndldx
stos
mov
sub
push
hlt
outsb
icebp
and
sahf
pop
cld
pop
sbb
pop
sub
mov
dec
das
sub
inc
and
es
xchg
add
mov
cs
jl
sbb
pop
mov
adc
mov
cmp
cmp
jge
jno
add
inc
fs
pop
mov
pushf
data16
inc
cmpw
das
shll
jbe
sbb
adc
mov
xor
in
fwait
movsb
xchg
dec
mov
pop
push
pop
push
movsb
push
ret
shrl
bound
call
xor
lret
xor
out
ret
loop
mov
jecxz
test
cld
mov
or
cmp
mov
or
movsl
jns
mov
push
test
push
test
mov
shll
mov
mov
sbb
push
mov
cmp
xor
xchg
mov
pop
push
outsb
test
pop
shll
push
int
sub
mov
or
or
jo
sub
push
orb
jbe
sub
mov
xor
inc
outsl
notb
pop
push
inc
clc
push
jge
add
inc
mov
dec
mov
outsb
add
and
aad
mov
lret
cli
nop
daa
xchg
mov
mov
je
stc
pop
mov
jbe
add
push
jns
arpl
mov
outsb
or
in
mov
xchg
adc
cld
lret
nop
add
sub
jmp
and
and
cmp
rcll
xor
je
out
cmpsb
pop
xchg
movb
adcb
aaa
cmp
pop
imul
int3
les
stc
popa
mov
push
cld
loopne
dec
in
fcomip
in
and
leave
pop
mov
sbb
mov
push
icebp
xchg
jecxz
xor
adc
nop
hlt
fcoms
push
lcall
push
mov
sbb
fxch
andb
mov
xorb
insb
mov
add
push
inc
mov
adc
adc
lds
aaa
jnp
xchg
cld
push
jl
pop
add
daa
cmpsl
ficoml
inc
and
mov
inc
sub
test
push
dec
ret
hlt
or
out
stos
stc
in
xchg
sub
sub
insl
test
shl
xchg
jb
repz
pushf
adc
shrl
data16
jmp
cs
mov
mov
ret
into
cwtl
sarl
aad
in
mov
sub
sub
adc
or
fwait
in
cltd
or
loop
sub
push
data16
mov
xchg
adc
inc
dec
shlb
xchg
pop
or
pop
jnp
lea
movsl
add
jns
fs
mov
xchg
xchg
jge
xchg
xchg
int3
xchg
incl
mov
lock
jmp
lea
sbb
out
push
fidivl
xchg
enter
cmovne
addb
xchg
inc
mov
add
fistps
aas
mov
jg
lcall
sarb
rorb
fstps
in
lods
pop
pop
inc
pop
lret
push
popl
in
call
jmp
adc
mov
sbb
lret
out
lods
or
mov
and
fwait
push
mov
xchg
jns
mov
out
es
fimull
fcoms
jmp
mov
popf
inc
lods
push
dec
popf
cmp
inc
jnp
mov
mov
les
pop
mov
jmp
fistpll
mov
ret
mov
dec
adc
xor
fcomps
aas
or
jmp
adc
test
test
repz
sbb
arpl
push
scas
cmp
mov
mov
and
pushf
jp
insl
fs
add
sub
adcl
lods
jge
iret
jnp
jne
inc
aaa
mulb
cmpsb
lods
sbb
push
movsl
inc
das
leave
sub
pop
push
cmp
mov
outsb
mov
add
aas
adc
or
dec
mov
adc
xchg
jns
fwait
mov
stos
sub
or
hlt
ret
shlb
and
push
xchg
bound
fstpl
and
lret
mov
scas
lods
sbbb
jmp
imul
xor
sbb
pop
call
loop
pop
dec
adc
push
outsb
mov
and
cmpsl
jb
je
xchg
out
das
pop
ret
push
stc
iret
jne
test
loop
dec
mov
jp
sahf
cmpsl
aaa
pop
pop
test
pop
popa
mov
repnz
jno
sbb
push
sub
test
and
mov
shll
xor
addl
stc
fnstcw
bound
or
cmp
outsb
xchg
arpl
lock
je
xor
mov
pop
mov
outsb
dec
nop
push
xor
mov
nop
out
mov
sub
xchg
loopne
fldt
mov
pop
mov
jle
add
sti
mov
repnz
push
and
jge
pop
in
in
in
fstl
xchg
fnstsw
cmp
xchg
adc
pop
jno
pop
icebp
out
add
gs
adc
xchg
iret
cli
bound
loop
stc
xor
pop
lcall
adc
sbb
pop
mov
clc
mov
je
sub
xchg
fisubrl
or
cmp
push
jmp
lcall
arpl
mov
imul
dec
xorl
popf
mov
mov
mov
aad
adc
cmc
rcll
adc
test
stos
mov
cwtl
mov
testb
sbb
inc
mov
mov
xlat
movsb
jl
sub
mov
pop
dec
mov
test
push
jp
stc
jge
aaa
xchg
ds
insl
pop
cmp
sub
mov
add
sarb
setns
adc
pop
mov
popa
pop
xchg
dec
xorb
pop
cmp
sahf
sbb
cmpl
ret
fwait
data16
fldl
inc
aaa
xchg
dec
js
out
jmp
dec
xchg
sahf
lahf
scas
shlb
data16
cmpsl
push
fadds
adc
xlat
add
push
arpl
gs
das
loope
mov
fisubrl
push
jb
ss
push
js
insb
les
adc
add
out
sub
sbb
fstpt
mov
mov
fidivrl
rclb
sub
xchg
sub
mov
fbld
or
sarl
and
leave
jmp
xor
test
dec
or
call
lcall
xlat
cwtl
mov
mov
pop
xchg
mov
aad
jne
cmp
scas
xor
movaps
testb
sbb
cmp
aaa
xor
mov
out
ds
xchg
pop
fisubrs
sub
rcrw
lods
out
insb
inc
or
pop
pop
aaa
pop
into
or
out
inc
and
cmpsl
aas
test
add
mov
pop
mov
mov
mov
push
shrl
cmpsb
enter
push
dec
mov
cmp
into
lret
pop
and
rolb
push
rcrl
ds
inc
int3
push
pushf
add
xchg
sbb
pop
into
loope
ds
sub
movsl
push
adcb
cmp
jg
movsl
lret
mov
jl
or
inc
ficoml
loop
inc
or
xchg
popf
pop
push
das
mov
insl
mov
mov
leave
ss
inc
cmp
scas
test
shrb
sbb
xchg
int
mov
lahf
xchg
daa
cld
and
push
pop
fwait
xchg
push
mov
mov
sbb
js
adc
or
call
lods
mov
dec
jne
mov
sarl
fisttpl
fwait
mov
jmp
fistpll
and
sub
pop
shl
jae
push
cmp
lret
cmp
fsts
pusha
fsubl
leave
mov
and
inc
fisttpl
int
shl
mov
jmp
mov
lods
sub
xor
xchg
hlt
mov
add
dec
es
sti
jnp
sbb
push
dec
dec
xchg
pop
xchg
fidivl
cltd
shr
pusha
mov
mov
ficomps
test
data16
sti
inc
test
add
in
jg
sbb
jns
pusha
jmp
insb
push
out
dec
stc
pusha
adc
mov
jae
sbb
dec
cmp
or
sbb
sbb
mov
rclb
sahf
daa
xchg
jb
sub
cmp
adc
pop
sub
sbb
add
das
sub
mov
sbb
mov
push
inc
into
lret
inc
dec
adc
mov
pop
mov
and
lcall
push
jbe
loope
jg
push
pop
rolb
leave
cmpsb
mov
sub
mov
push
std
cmp
inc
inc
test
push
push
push
inc
jp
insl
jp
cmpsb
xor
jge
call
stos
movb
lea
adc
test
inc
mov
mov
xchg
cmpsl
push
push
mov
mov
mov
mov
sbb
xor
call
fsts
adc
and
rcr
rcll
negl
xchg
stos
sub
ja
clc
and
aad
add
jg
cmp
inc
cmp
in
cmp
push
mov
aam
dec
lods
mov
sbb
push
fdivrs
mov
cs
pop
adc
jl
xchg
call
cmp
test
insl
leave
xorb
outsb
pop
cltd
incb
les
jns
in
mov
test
xchg
fisubrs
inc
pop
test
arpl
out
adc
pop
ljmp
push
sub
ror
mov
movsl
xchg
sbb
fmull
push
aas
pop
hlt
sub
stos
and
test
out
iret
lods
or
addl
fwait
cmp
rcl
mov
mov
jecxz
mov
ljmp
and
mov
enterw
scas
fwait
cmpsl
xchg
fwait
sub
roll
loope
imul
cltd
ret
sub
and
jecxz
iret
pop
sti
rorl
mov
in
stos
cmpsb
notb
sub
js
mov
sbb
shl
insb
xor
lcall
jae
sti
rcl
cmp
cwtl
js
lods
subl
add
nop
xchg
and
push
gs
xor
fsubl
loopne
mov
mov
push
xor
subl
pop
in
data16
cs
and
shlb
dec
adc
adc
adc
inc
push
lahf
cmp
out
ret
push
stc
dec
cwtl
std
testb
dec
enter
outsl
ja
or
imul
lods
dec
lods
adc
fisubl
loop
ret
mov
xor
stos
sbb
inc
std
cs
push
xchg
push
out
cmovs
inc
pop
jmp
xor
sub
rorb
mov
sub
sbb
xchg
xor
sub
fistps
xchg
outsb
pop
or
pop
sbb
jnp
icebp
stos
mov
je
add
in
push
aaa
mov
pop
mov
in
mov
dec
pusha
movsl
rcrl
insl
shlb
pop
fistl
adc
dec
in
shll
xor
jge
sub
sub
ret
pop
xchg
xchg
mov
mov
in
push
dec
push
fisubrs
cmp
imul
out
add
fcomps
mov
cmp
lret
ljmp
stc
push
mov
add
mov
fnsave
jnp
dec
pop
je
mov
mov
jne
push
shlb
mov
dec
mov
scas
imull
or
pop
dec
xchg
cmc
test
adc
cmp
mov
cwtl
dec
in
stos
jne
lods
lea
lahf
es
int
aaa
inc
sbb
in
stos
ds
mov
mov
fsincos
pop
inc
shl
lock
lea
shr
xchg
xchg
leave
dec
in
ret
xor
jae
xor
sub
mov
or
addl
dec
sub
ljmp
mov
cli
mov
mov
insb
push
xchg
nop
inc
movsb
inc
xor
mov
test
leave
lods
pop
les
adcb
mov
sbb
fnsave
ficomps
add
imulb
lock
mov
int3
movsb
xlat
fs
sub
fisubrs
je
inc
inc
sbb
or
subb
adc
stc
fwait
lret
add
addr16
push
shlb
pop
lods
lret
dec
int
fs
jns
adc
ret
aad
xchg
out
inc
xorl
movsl
cmp
inc
mov
rcll
outsb
push
rol
jnp
pop
and
leave
jl
push
aaa
out
dec
fisttpl
mov
sub
mov
pusha
call
pop
mov
push
rcr
xchg
inc
sbb
loopne
clc
lahf
adc
mov
js
call
pop
addl
jmp
jg
mov
mov
out
ret
movsb
sbb
loope
sti
or
pop
mov
and
push
mov
popa
adc
sub
enter
sbb
scas
adc
add
addb
jecxz
pop
push
jp
mov
push
dec
daa
leave
push
xor
or
imul
mov
add
test
jge
sub
std
out
lcall
push
mov
push
and
clc
cltd
xchg
mov
cmp
jecxz
iret
aaa
pop
mov
sub
shll
mov
mov
mov
pop
das
out
cmp
bound
fiaddl
add
push
cmp
std
push
dec
imul
insl
mov
hlt
jle
and
add
xor
inc
mov
outsl
mov
scas
pop
mov
ror
sub
test
mov
out
sbb
in
mov
test
or
ds
mov
push
push
in
data16
loope
mov
lods
adc
outsb
cld
lret
mov
dec
add
cli
xchg
lcall
adc
je
inc
test
nop
add
mov
push
inc
rol
jmp
ja
push
add
in
or
mov
mov
mov
nop
cwtl
ljmp
cmp
leave
mov
push
push
and
mov
mov
pusha
cld
jmp
sahf
jne
push
push
jb
leave
xchg
xchg
pop
mov
pop
ret
scas
jbe
and
shlb
in
pop
add
inc
aam
lret
jns
mov
sub
popa
add
outsb
jne
lea
ja
xchg
jne
lock
sub
adc
sti
daa
mov
movsl
jnp
fcomps
fucomi
out
xchg
nop
xchg
jg
jno
or
sbb
pop
mov
push
pop
pop
call
xchg
fprem1
sub
mov
imul
out
stc
movl
pop
cmp
pop
in
iret
in
jg
ds
xchg
and
cs
adc
gs
inc
hlt
mov
movsb
and
sub
sub
outsl
fldt
outsb
mov
sbb
mov
iret
or
cmp
mov
or
mov
push
xor
insb
cli
jne
gs
shl
dec
repnz
sbb
push
scas
mov
mov
xchg
ds
fs
ror
xor
arpl
ljmp
fimull
inc
mov
sahf
test
outsl
fwait
mov
das
mull
xor
or
or
ja
mov
sahf
add
ljmp
xor
dec
mov
bound
mov
push
cmp
or
mov
pop
add
sahf
loope
rorl
outsb
jno
cwtl
les
adcl
fbld
cs
mov
lds
mov
sub
stos
mov
sbb
pusha
lret
pop
push
and
cmpsl
xchg
hlt
jp
daa
pop
hlt
insl
adc
jns
in
out
bound
sub
cltd
ds
or
lret
fdivl
adc
push
cmp
in
and
insl
popf
test
shll
inc
ret
dec
mov
fsubrl
push
sub
mov
fistpll
setbe
sbb
loop
jb
shlb
push
mov
xchg
aaa
and
pop
cmp
pop
add
or
mov
inc
mov
xchg
jo
fwait
test
xchg
jmp
repz
pop
pop
mov
jb
sahf
movsb
in
jo
aas
xchg
inc
mov
into
push
pop
stos
aaa
jnp
pop
mov
xchg
mov
xor
lock
sbb
nop
aas
std
scas
outsb
jne
xor
nop
out
ret
xchg
mov
add
mov
jmp
jo
pop
mov
iret
dec
popf
add
jae
jb
pop
out
js
arpl
in
imul
jne
mov
dec
movsb
cmpsb
sti
cmovl
into
aaa
mov
mov
inc
pop
adc
test
jbe
xchg
push
scas
xchg
and
dec
pop
cmp
outsb
jno
jmp
test
push
lcall
gs
std
outsl
insl
je
xlat
push
dec
sub
jo
pop
xor
leave
cmp
jne
dec
fsubs
testl
gs
mov
add
fs
sarb
outsl
mov
in
add
cs
aas
adc
jne
dec
xchg
lahf
ret
repz
jno
shrb
and
pop
cmp
lds
cs
andl
mov
mov
outsb
xchg
mov
adc
in
es
or
push
mov
add
rolb
xchg
xchg
fbstp
int3
jo
cld
cmp
jae
in
mov
shrb
xor
add
test
clc
iret
adc
sub
insb
mov
cmpsb
in
out
in
pop
mov
inc
or
sbbb
or
jecxz
loop
shlb
shll
addr16
push
leave
push
push
inc
movsb
push
push
and
lcall
orl
push
pusha
xchg
sbb
nop
cmpsl
xlat
add
push
adc
data16
fildll
adc
cmp
mov
mov
fcoml
sbb
insl
pop
ljmp
fstl
imul
push
rorb
pushf
sub
fcmovnu
mov
pop
fidivs
xchg
push
lods
fs
ss
sbb
xchg
cmp
leave
pop
lock
mov
inc
into
cmp
iret
fidivrs
cmpsb
loop
arpl
cmp
out
ljmp
fsubl
add
xor
in
cltd
adc
xor
cld
and
je
out
mov
ss
xchg
jb
mov
lods
sub
ljmp
xchg
js
mov
sarb
pop
orl
enter
fucomip
lret
cs
gs
in
cmpsl
pop
pop
xchg
maxps
popa
scas
inc
in
push
outsl
adc
lods
mov
sbb
pop
inc
mov
out
push
test
je
lock
fsts
xchg
and
dec
mov
in
adc
xchg
paddb
pop
cmp
pop
adc
fmul
dec
xchg
aas
cmpsb
push
sub
out
lods
dec
push
aad
rcr
iret
je
jne
repnz
leave
xor
jg
iret
adc
sbb
ret
and
xchg
outsl
dec
sbb
jmp
stos
xor
fldcw
xor
pop
push
int3
inc
andb
arpl
jp
dec
add
add
pop
incb
lods
push
repnz
inc
scas
imul
cli
sbb
stos
insb
stc
push
push
mov
pop
push
gs
push
inc
cltd
xchg
ja
test
nop
mov
cs
dec
add
push
inc
aas
mov
cld
mov
xor
insb
inc
repnz
fdivl
adc
mov
mov
je
pusha
jecxz
add
sti
imul
mov
xchg
jle
push
cmp
mov
daa
pushf
mov
sbb
xchg
cmp
bound
int3
and
sbb
enter
pop
jecxz
push
scas
pop
daa
push
and
jmp
fisubl
sub
aaa
xchg
jecxz
lds
subl
icebp
dec
lret
ja
xor
arpl
je
adc
outsl
adc
out
or
dec
repz
lcallw
rcrl
or
push
leave
push
and
les
clc
movsb
push
inc
xor
out
jmp
outsl
and
xchg
pusha
int3
fs
arpl
push
je
daa
pushf
xchg
xor
mov
sbb
jl
orl
mov
dec
movsl
lcall
popa
dec
jge
push
pop
cmpsl
sub
or
lods
mov
jle
ja
dec
lcall
inc
ss
adc
insl
push
test
sti
lret
sti
mov
daa
pusha
jle
mov
inc
int
sbb
mov
push
loopne
mul
jne
adc
aaa
call
jle
in
mov
xchg
cmc
std
lret
mov
leave
pop
fwait
push
jns
das
ljmp
ljmp
xchg
push
pusha
inc
jne
mov
ljmp
or
imulb
inc
xor
and
mov
jle
lods
in
sar
mov
mov
inc
loop
xchg
cmp
sti
pop
loopne
enter
scas
popa
xchg
lea
mov
sarb
adc
dec
fs
and
add
cmp
mov
in
imul
push
push
frstor
enter
movsb
ror
inc
fwait
xchg
andl
mov
imulb
js
cltd
cmpsl
shr
stc
jg
stc
aaa
ror
pusha
aad
sub
dec
sti
pushf
xlat
xor
push
cmp
sub
mov
nop
inc
jnp
iret
fs
cmc
add
sub
mov
mov
mov
inc
rcrl
or
addr16
and
mov
push
adc
inc
xchg
and
inc
dec
int3
xchg
jle
test
outsb
das
dec
mov
call
mov
or
jae
sti
adc
jle
sbb
mov
jge
sub
sub
lret
and
pop
cltd
add
jb
mov
aas
or
add
inc
jne
pop
nop
les
sbb
jae
cld
test
das
je
ficoms
jle
push
cmp
in
jecxz
cmp
sbb
sbb
bound
inc
cmp
cmp
mov
pop
or
cmp
push
or
lock
mov
sbb
dec
ja
js
rcrl
mov
sbb
aad
idivl
add
mov
outsb
out
jp
cmp
jae
push
notl
in
mov
push
popf
push
mov
inc
movb
pop
outsl
hlt
icebp
ljmp
push
push
adc
adc
mov
inc
jecxz
lahf
pop
adc
mov
pop
pop
pop
aad
mov
cs
lret
xor
jb
sarb
mov
add
sbb
pop
xchg
pusha
push
pop
arpl
or
push
and
insl
push
cmp
lods
cmp
loopne
mov
xor
mov
mov
shl
and
xchg
cmp
dec
sub
es
mov
xchg
sbb
aam
jnp
jge
gs
test
pop
and
adc
xchg
int
mov
mov
xchg
out
stos
in
dec
sahf
idivl
jle
push
std
push
pop
stos
out
mov
outsl
add
jae
scas
sti
jmp
xchg
or
pop
mov
mov
imul
push
sbb
jp
mov
xor
int3
test
xchg
inc
add
rcr
pop
inc
push
mov
dec
movsb
ja
push
adc
mov
mov
cmpsb
rcr
pop
mov
xchg
mulb
rcl
pop
mov
cs
cmp
cmp
pop
clc
dec
adc
test
cmp
iret
mov
lods
mov
aad
add
sbb
mov
mov
mov
mov
inc
cmp
inc
cmp
shrl
dec
push
in
inc
push
in
add
cld
test
dec
rorb
mov
ret
sbb
jnp
jp
and
pusha
shl
out
jno
dec
shrb
std
xor
cmp
jae
pop
add
add
xchg
andl
sti
sbb
addr16
movsb
inc
mov
jmp
or
mov
es
or
mov
mov
sub
fldcw
loopne
fcmovne
sub
xchg
mov
insl
loope
and
sar
movsb
adc
loope
add
xor
pop
loope
aad
or
movl
int
shl
out
or
std
push
rclb
dec
jb
xchg
mov
movsb
bound
testb
cmp
xor
shll
icebp
mov
push
sub
int3
inc
inc
sbb
xchg
stos
mov
clc
pop
shl
enter
jbe
xchg
test
stos
and
xor
xor
mov
int
movsl
je
cli
dec
push
mov
cmp
mov
ret
fists
fnstsw
std
push
insl
stos
inc
leave
orb
test
xchg
loope
xlat
sub
inc
insb
pop
pop
stos
loope
fs
faddl
push
cmp
and
mov
sub
ljmp
adc
mov
mov
ret
rclb
lret
add
sbb
sub
shlb
lds
and
fcompl
inc
lret
aad
ljmp
jmp
int
ror
in
mov
movsb
and
cmp
into
lahf
mov
dec
sub
push
jl
rorl
or
sub
jge
test
mov
mov
or
jg
mov
mov
cmp
es
hlt
gs
pop
repz
cltd
xor
xchg
ljmp
bound
lret
mov
pop
icebp
or
repnz
stc
xchg
pop
inc
imul
mov
in
push
fcmovb
xor
outsb
jl
adc
sub
fiaddl
jb
or
adc
out
push
xchg
and
test
xor
int3
mov
push
cmpl
inc
daa
xchg
pop
jne
iret
lret
jnp
loopne
in
and
jnp
fiaddl
out
xchg
mov
in
fidivl
mov
add
movsb
and
ficoml
xchg
add
push
loop
or
imul
mov
dec
scas
subl
addr16
subb
cmpsl
cmp
jb
loopne
jg
in
aaa
sub
shrl
stc
mov
and
pop
mov
inc
push
stos
loopne
in
xlat
or
push
jae
cs
xchg
paddq
popl
roll
inc
push
or
mov
sbb
dec
sub
and
push
pop
and
and
mov
data16
fs
xchg
adc
dec
xchg
sub
xchg
movsb
lods
mull
lea
add
jno
mov
push
loopne
cmpsl
sub
jno
pusha
outsb
add
movsb
lret
jg
orl
int3
nop
shrl
dec
pop
mov
pop
imull
test
or
add
int3
or
or
lods
imul
cmp
imul
jno
cmp
das
push
cltd
adc
inc
inc
or
cmpsb
out
xor
lock
int
lock
roll
jecxz
push
pusha
inc
xchg
popa
clc
ja
data16
mov
out
dec
sti
inc
cld
adc
mov
jae
dec
inc
xor
popf
out
sbb
fs
mov
fs
push
int3
sub
or
sbb
xor
dec
mov
clc
enter
add
cld
jle
fs
jnp
out
mov
or
push
jecxz
sub
xchg
gs
adcb
jecxz
push
jmp
sub
call
cmp
xor
fstps
in
adc
aaa
ss
hlt
fcomps
and
mov
inc
decl
push
or
lahf
adc
loope
inc
push
pusha
jl
mov
loope
mov
xor
popa
xor
or
out
push
jo
jmp
sub
push
mov
dec
es
mulb
ja
xchg
fiaddl
repz
enter
cmc
mov
sub
ja
pop
rolb
push
mov
xchg
push
ret
jmp
pop
push
cmp
push
sub
and
movl
sbb
lods
jp
fcomps
push
xlat
call
sub
aam
xlat
aaa
ret
in
and
sbb
int
or
add
pop
ss
dec
lret
adc
sub
je
out
mov
pop
ret
cmp
push
idivb
jnp
pop
cmc
std
mov
xor
cltd
sbbb
add
lcall
cmp
xchg
pop
dec
sahf
icebp
stc
call
pop
mov
xor
mov
xor
incl
loopne
sub
hlt
add
xchg
xchg
fmull
orl
test
mov
push
add
mov
test
mov
or
sahf
addl
lret
aaa
sub
mov
in
shrb
xor
loope
push
stos
imul
jbe
sub
aas
push
lods
iret
repnz
negl
and
and
shll
sbb
dec
daa
or
test
pop
aam
xchg
cmpsb
or
pop
jae
mov
sbbb
sub
or
mov
out
fs
icebp
mov
and
aaa
into
sub
mov
push
imul
test
dec
testl
xchg
movsl
jecxz
cmpsl
cmp
inc
and
fdivs
inc
adc
in
cmp
fs
xchg
stos
jmp
dec
or
pop
sub
sub
inc
sti
outsb
push
push
pop
je
inc
es
ret
add
pop
sub
cmp
jno
jmp
mov
sti
hlt
xor
hlt
fcoml
std
jnp
mov
fs
fstl
fistpll
adc
push
imul
xchg
inc
pop
mov
inc
lods
mov
sbb
cmp
cwtl
dec
cli
mov
orl
jae
rol
add
jbe
pop
and
jl
pusha
scas
inc
push
push
std
in
inc
adc
xchg
cmp
cmpsb
ja
push
or
cli
dec
mov
call
es
add
push
adc
fdivrs
sahf
inc
push
dec
dec
inc
add
flds
cmp
xor
mov
aam
xchg
cmp
or
dec
scas
iret
lret
into
cmpsl
ds
inc
mov
xchg
add
sarl
int3
stos
push
cmp
jb
xor
imul
dec
ja
dec
or
inc
andb
rorl
cmc
rcrl
das
enter
push
jmp
std
jp
pop
sbb
outsl
xchg
mov
repz
in
and
cs
ljmp
cs
mov
cmpsl
out
mov
jl
mov
mov
xor
sub
xchg
inc
lock
and
in
push
jb
jp
ds
mov
les
cmc
std
pop
cmp
mov
mov
sbb
dec
inc
loop
js
shll
sbb
sbb
cltd
int
in
shlb
dec
mov
mov
scas
ds
out
bound
pop
cs
pusha
mov
fsts
hlt
sbb
pop
cs
sbbb
jns
sub
dec
inc
bnd
xlat
aad
je
into
movsl
cltd
push
push
les
push
fsubrl
mov
xor
pop
pop
jno
ja
cwtl
pop
xor
outsl
push
mov
mov
inc
xchg
adc
fwait
xor
and
and
dec
dec
sti
jecxz
movsb
scas
jge
imul
xor
xchg
out
shr
dec
cld
les
int3
pop
rcr
lcall
xor
adc
jbe
jno
push
lcall
cmp
repnz
dec
pop
lea
inc
or
add
sub
and
lcall
sbb
lock
mov
xchg
sub
inc
dec
call
xchg
fcmovnb
dec
push
add
adc
pop
adc
jge
sub
cmpxchg
ret
imul
mov
dec
int3
mov
sbb
push
int3
cmp
push
xchg
add
or
sub
dec
pop
add
mov
inc
and
clc
push
jnp
cmp
cld
loop
ficomps
outsb
ret
jne
mov
les
jnp
sub
add
mov
lods
mov
jmp
pop
int3
cmp
xor
repnz
cmp
sub
sub
loope
roll
mov
les
fisubrs
stos
mov
adc
dec
rorb
iret
dec
dec
mov
xchg
push
pop
sub
cmp
mov
mov
and
stos
popf
es
daa
stos
test
push
pusha
aam
cmp
xor
xchg
lods
xchg
je
add
sub
mov
pop
sbb
aam
es
xchg
xchg
inc
popa
ljmp
movsb
fmull
jbe
popa
jle
pop
fildll
testl
sti
ret
mov
idiv
lahf
cld
loop
dec
ss
testb
aas
int
xlat
sub
sub
or
dec
inc
jg
les
jno
sub
pop
int3
inc
cmp
test
gs
mov
sbb
ds
mov
xor
nop
mov
jne
test
lods
sbb
dec
inc
scas
sub
sbb
mov
mov
rcrl
push
push
lock
cmp
ja
lods
dec
adc
in
js
mov
in
push
lret
jno
jbe
adc
dec
sbb
ljmp
jns
push
ljmp
cmc
mov
stos
mov
or
or
sti
je
hlt
lcall
movsb
adc
pop
sub
xor
mov
scas
insl
push
cld
dec
cli
test
mov
dec
fmuls
pop
sub
das
pop
lods
fildll
out
rolb
and
push
xchg
cltd
ds
jp
jae
loop
push
repz
fld
mov
bound
fstps
push
into
pop
jge
xchg
js
or
sub
dec
daa
fadd
inc
pop
add
pop
xchg
int3
lret
mov
adc
fcmovne
lret
jno
sti
mov
loopne
imul
mov
pop
push
push
dec
and
out
jl
dec
jae
ror
adc
xor
es
jge
shr
imul
or
xor
pop
fcoms
rolb
ds
mov
imul
scas
adc
inc
int3
pop
jl
sbb
ret
xchg
push
mov
mov
mov
shrl
ss
insb
daa
outsb
sbb
int3
lcall
and
mov
loopne
pop
push
dec
test
jecxz
mov
push
sbb
fsts
ds
in
mov
mov
loopne,pt
push
sub
xor
frstor
movsl
xchg
dec
lret
push
sub
out
rolb
iret
fsubr
dec
jg
shll
jno
lock
popf
repnz
sub
jns
es
mov
sbb
xchg
and
mov
cld
push
add
pop
sub
pop
mov
inc
out
xlat
aad
xchg
xor
aam
mov
mov
out
addr16
ljmp
xor
sarl
mov
loop
pop
test
nop
dec
sbb
sub
lea
fucompp
std
out
sarl
daa
insl
inc
push
mov
mov
dec
stos
lods
sub
outsl
cli
or
add
push
pop
or
dec
das
shl
cmp
push
orb
ret
sub
roll
fwait
cmpl
outsl
or
leave
sarb
xor
jae
mov
mov
lds
int
es
into
adc
xor
jns
iret
gs
ret
ret
inc
cmp
mov
mov
mov
mov
lods
mov
pusha
push
into
or
shlb
movsl
dec
jmp
mov
add
enter
int3
sub
cmpsl
push
lds
or
pop
es
xchg
mov
mov
iret
shrb
push
cmp
cmp
sbb
cli
sub
pop
jecxz
pusha
push
out
xor
stos
mov
outsb
repz
lods
fadd
jne
cltd
mov
stos
adcl
mov
orb
dec
sbb
outsl
mov
scas
rcr
mov
adc
fsubrs
mov
outsl
daa
push
fiaddl
mov
fists
das
cs
inc
sbb
repnz
sbb
faddl
mov
js
fldenv
ficoml
in
push
lcall
jle
aas
pop
push
cmp
adc
mov
mov
mov
cli
dec
mov
mov
push
cmp
pop
xchg
lahf
jecxz
push
sub
lret
into
xchg
inc
in
sub
xchg
pop
sub
lret
enter
loope
mov
or
inc
into
xorl
stc
add
mov
ds
pop
pop
and
shr
jmp
push
lods
rorl
mov
push
movl
or
pop
cmp
jge
pop
jae
xor
data16
push
pop
dec
inc
sbb
daa
xor
leave
cmp
adc
mov
mov
lock
scas
push
orb
aas
imul
push
push
iret
mov
movsb
jecxz
jno
out
loopne
loopne
fisubrs
leave
sbb
mov
mov
popa
adc
jbe
fstpt
jnp
out
mov
sub
enter
jo
and
repnz
imul
cli
icebp
int
xor
mov
cmp
mov
jno
sub
mov
mov
fbstp
lds
cmpsl
pop
jno
xchg
ror
push
push
stos
into
rolb
pop
and
out
dec
pop
mov
xor
scas
mov
cmp
mov
pusha
fsubrs
mov
lods
inc
pop
movsl
or
pop
leave
lahf
loopne
lret
push
or
test
pop
jae
imul
mov
outsb
sahf
and
pop
inc
cwtl
int
fiadds
sbb
test
and
aas
rolb
mov
out
xchg
out
inc
push
inc
call
cld
jne
out
ss
push
xchg
inc
test
loope
lods
lret
test
xchg
mov
push
sbb
push
jb
mov
mov
dec
xchg
push
imul
fsubrl
cwtl
shrl
cmpsb
adc
fstpl
dec
jl
int
ficompl
mov
imul
and
sbb
sbb
cmp
inc
jo
sbb
ja
es
sbb
add
lret
hlt
cs
cs
test
arpl
sub
cmp
nop
mov
aam
add
lods
shlb
out
xchg
sbb
jo
mov
cmpsb
das
enter
ficoml
adc
sbb
popf
or
std
icebp
xor
xor
mov
outsl
adc
adc
mov
shlb
mov
cmp
sub
xor
cmpsl
xor
lds
cmp
imul
mov
sub
movsb
test
sbb
mov
je
mov
rol
push
ret
ret
mov
mov
pop
adc
dec
mov
js
les
xor
scas
push
xchg
add
pop
push
mov
push
in
sti
lods
repnz
push
xor
sub
out
pop
fsub
push
mov
mov
out
jns
mov
jge
xlat
loopne
cmp
fcmovb
xchg
sbb
push
mov
mov
jne
scas
dec
lods
sub
push
dec
xchg
stos
les
hlt
mov
stos
sub
pop
and
cmp
testb
repz
rcl
jo
cmp
daa
sub
sbb
fisttpll
mov
cmp
repnz
loop
and
enter
inc
or
or
push
xchg
push
mov
mov
mov
or
pop
pop
pusha
adc
cs
pop
mov
outsb
insb
add
in
or
dec
fwait
std
popf
lods
int3
je
xchg
mov
std
xchg
or
xor
inc
and
sahf
sbb
outsb
push
popa
pusha
mov
hlt
lods
enter
js
aam
fnstcw
icebp
shlb
pop
int
mov
dec
and
imul
popa
icebp
jecxz
sub
mov
push
popa
int
or
mov
outsl
jg
inc
adc
lcall
inc
jbe
dec
out
pop
or
mov
das
scas
pop
pop
dec
pop
into
jg
xchg
in
mov
movsl
aam
les
push
aad
pop
jecxz
in
in
int3
sti
mov
arpl
repnz
pop
mov
push
repnz
rolb
subb
or
test
add
jns
push
in
cmp
sub
jns
cld
pop
jp
nop
shlb
ss
xchg
test
or
rorb
adc
mov
xor
cmp
add
test
shll
into
insb
cmp
inc
xor
ficompl
xor
ljmp
and
xchg
xlat
push
jno
xchg
mov
pop
in
shll
sbb
sbb
lahf
adc
jmp
ds
clc
pop
xchg
rorb
imul
mov
and
pushf
push
sbb
jmp
stos
xchg
insb
push
aaa
sbb
aaa
dec
jno
psllw
cmpsl
mov
fsub
cmp
push
ret
loop
insb
sti
xchg
inc
icebp
loope
je
scas
add
mov
and
sbb
fld1
inc
and
mov
sub
mov
scas
push
jmp
cmpl
add
sti
mov
repnz
push
scas
sbb
adc
add
jge
push
xchg
adc
arpl
adc
mov
std
sbb
mov
mov
sbb
jb
xchg
add
aaa
jmp
push
fwait
cmp
std
fimuls
cld
mov
jge
dec
adc
cs
rorb
mov
push
lods
or
adc
inc
adc
jge
jbe
std
jb
neg
jg
mov
or
xchg
cltd
xchg
jno
icebp
fmuls
lret
ret
mov
out
and
push
sub
je
arpl
xor
cmc
dec
mov
lahf
test
sti
add
xchg
mov
adc
sti
jno
mov
sbb
sbb
and
cmp
stos
fs
xor
and
int
inc
push
sub
loop
dec
imul
ljmp
inc
jno
or
pop
push
xchg
and
outsb
pop
xchg
jl
nop
scas
adc
jge
sub
cmp
push
cmc
out
mov
stos
ret
pop
cwtl
std
mov
cs
or
and
push
mov
or
push
adcl
sbb
lret
iret
ret
stos
aam
xchg
sbb
pop
sbb
leave
mov
sarl
mov
cmp
push
out
jbe
int3
leave
arpl
adc
ficoml
mov
adc
pop
sbb
add
shll
mov
xor
cmp
inc
dec
sahf
jnp
sub
lea
xor
pusha
mov
out
jbe
shll
adc
aas
cltd
mov
push
pop
and
pop
inc
fisubrs
dec
sub
test
push
imul
sahf
lcall
mov
std
in
stos
jmp
stc
jmp
xchg
mov
div
lret
pop
lcall
add
mov
shr
mov
ret
pop
or
les
shlb
loope
fidivrl
xor
xor
das
sar
enter
inc
ds
or
push
mov
gs
or
jnp
shlb
lods
or
cli
mov
fnstenv
push
pop
xchg
lods
push
dec
cmp
fnstsw
fidivl
and
adc
lea
gs
add
popa
arpl
adc
cli
adc
lret
sbb
jae
addr16
ja
cmpsl
jp
mov
ja
jp
sar
lcall
sarb
in
xchg
pop
popf
mov
shll
xchg
jmp
cli
push
push
push
mov
dec
shrb
lock
scas
jns
mov
dec
imul
sub
mov
inc
and
aam
mov
adc
pop
iret
dec
or
mov
mov
sbb
mov
jo
jg
xor
loop
cmp
int
movsb
fldl
cmc
mov
pop
popf
test
cld
push
aas
ss
jno
push
out
nop
and
cmp
gs
jno
mov
inc
jge
pop
movsb
or
std
push
jns
mov
sub
sub
push
sbb
stc
loop
rorb
cmc
in
mulb
sub
xor
in
aas
movsb
lahf
pop
xorb
push
fists
js
mov
xlat
jecxz
rorb
xorl
push
xchg
xor
inc
fwait
push
xor
jno
pop
push
and
and
out
bound
xchg
lahf
movb
mov
mov
cmp
js
adc
add
js
adc
mov
xor
test
lahf
leave
jbe
out
mov
add
jl
and
lret
nop
sbb
xor
sub
pop
test
scas
inc
sbb
push
dec
xchg
jg
cmpb
mov
lock
sbb
push
push
pop
or
sar
out
sti
je
pop
rorb
mov
call
or
xchg
lds
jae
or
out
aaa
cli
xlat
cmc
jns
pop
loop
iret
xchg
pop
shr
pop
sahf
mov
int
dec
mov
ret
pusha
push
je
int
mov
pusha
es
jecxz
enter
popf
cmpsl
push
cmp
sarl
adc
loop
insl
lds
insl
sbb
popf
out
andb
mov
mov
shrb
cli
addr16
mov
sub
jo
mov
cmp
movsl
cmp
mov
or
adc
jecxz
jecxz
push
mov
mov
sti
or
mov
mov
rcrb
loope
imul
hlt
sarl
inc
std
adc
sbb
shll
aad
test
add
mov
imul
aad
add
push
shrl
jb
shlb
mov
mov
inc
pop
jbe
in
xchg
mov
das
loop
ret
cmpsb
xor
push
ret
jne
sub
xchg
imul
imul
push
xorb
jno
xchg
scas
adc
pop
outsl
lahf
mov
push
adc
pop
pop
shl
lahf
mov
call
gs
dec
inc
xchg
push
jge
and
fsubrp
int3
int
and
push
add
push
movsb
cld
pop
inc
mov
in
jbe
or
leave
repz
dec
fiadds
xor
add
dec
push
mov
sahf
push
shrl
mov
call
daa
lcall
shr
mov
sbb
data16
cmp
jne
pop
mov
jl
pop
dec
or
outsb
mov
dec
repnz
sbb
xchg
insl
inc
dec
mov
icebp
adc
lods
push
mov
sbb
jnp
push
cmp
cmc
mov
int
rcrl
insl
xchg
int3
rcr
repnz
inc
aad
sub
sub
sbb
mov
fs
adc
add
adc
cmpsl
push
call
cmp
push
daa
pop
mov
or
mov
pop
sbb
outsl
mov
ss
xchg
pop
lret
inc
add
fwait
loope
lods
pop
add
adc
add
push
movsb
and
data16
pop
leave
aaa
pop
adc
imul
mov
testl
je
xchg
clc
popa
ret
sahf
mov
inc
pop
je
pop
lods
rclb
sbb
insl
xor
push
push
xchg
jmp
xchg
xlat
cmc
pop
jbe
testl
mov
lods
xor
test
push
adc
sub
test
aam
sahf
clc
cmpsl
and
pop
dec
fwait
mov
mov
fcoml
jmp
in
fdivs
lahf
jmp
popa
mov
xchg
add
and
fcmovnbe
jno
lods
lods
aas
mov
xlat
mov
push
in
mov
fsubrl
repz
xor
incb
cltd
lahf
mov
inc
push
inc
cltd
pop
fisubrs
out
sbb
fiaddl
xchg
popf
subl
scas
or
leave
stos
test
outsl
cmp
stos
dec
jno
xchg
shll
sti
int3
int
push
repz
into
inc
sahf
xor
pop
cmc
movsb
mov
dec
loopne
jae
inc
insb
cmp
inc
mov
xor
sub
loope
mov
scas
cli
imull
cmp
lcall
stc
jbe
orl
and
push
outsb
out
sub
mov
gs
push
push
mov
sti
inc
push
sbb
sub
dec
mov
mov
xchg
pusha
mov
dec
xchg
test
pop
imul
mov
ret
sbb
sti
jg
jmp
mov
xchg
pop
jae
daa
pop
mov
sub
leave
mov
decb
out
fldt
jge
xchg
pop
popf
int
jns
cmp
push
iretw
pushf
adc
adc
add
cmp
fwait
mov
ret
xor
mov
jbe
dec
inc
loope
rcll
cltd
pop
jbe
push
mul
pop
pushf
and
rcll
add
fs
and
sbb
sub
rcr
dec
inc
mov
out
scas
dec
das
stc
adc
dec
cmp
jb
std
hlt
int3
sti
or
cmpsl
mov
mov
mov
mov
jmp
rorl
mov
sub
stos
orl
push
lods
movsl
les
mov
addr16
xor
add
lods
popf
js
sub
dec
sub
aam
mov
sub
int
dec
aaa
sbb
ljmp
incl
and
dec
adc
jae
push
shr
adc
jmp
sbb
subl
pop
roll
imul
popf
arpl
int
mov
pop
pop
xor
jp
mov
jne
pop
shlb
idivb
push
fs
ror
ror
test
push
xor
xor
loopne
shl
push
xchg
cwtl
adc
test
outsb
fwait
pop
xor
es
sahf
xchg
negb
daa
sub
mov
pop
hlt
ss
notl
mov
scas
outsl
push
insl
pop
mov
fisttpl
nop
ss
sub
lds
imul
les
mov
inc
test
enter
fcoms
add
fwait
fwait
xor
pop
mov
sub
cltd
mov
movsl
loopw
dec
inc
push
cs
jp
xchg
es
xchg
jle
jl
push
mov
pop
dec
sub
movsb
fsts
loope
push
mov
mov
sbb
push
aaa
push
xchg
lahf
push
testl
sub
mov
in
jb
mov
sub
add
jbe
test
mov
or
mov
mov
dec
or
jecxz
enter
out
pop
int3
jne
test
pop
xchg
ret
mov
popa
je
loopne
out
cwtl
fstps
sub
imul
pop
push
mov
xchg
pop
into
stc
jl
sub
cmp
cmpsb
push
dec
sub
imul
jge
push
movsb
cmpsl
mov
jb
decl
call
cs
inc
cmp
adc
cs
lods
sub
sbb
xor
sub
fmuls
loopne
jge
ret
daa
dec
push
out
stc
jne
pop
test
lcall
xchg
cmp
sub
pop
loop
mov
jb
cmpsl
movsl
sahf
add
aad
shrb
test
les
iret
adc
mov
or
fbstp
xor
leave
jl
lcall
or
sub
push
inc
je
addr16
push
jmp
jo
sbb
xchg
and
or
cmc
leave
xlat
add
pop
inc
insb
ss
int
mov
adc
clc
mov
hlt
repz
jne
sbb
dec
icebp
jnp
or
mov
sub
adc
flds
std
inc
add
sub
imul
cmpsl
sbb
xchg
cmp
cwtl
sub
mov
adc
lretw
insl
xlat
jge
repz
outsb
or
dec
in
shrl
sarb
pop
push
insl
in
daa
push
iret
mov
int
cmp
push
cmp
cmpb
sub
int3
inc
mov
dec
add
inc
jnp
sahf
fwait
jle
dec
sbb
aaa
jl
jp
cmp
push
mov
fimull
mov
imul
imul
sbb
mov
jmp
popf
pop
mov
cmp
test
out
in
outsl
ret
iret
xchg
push
fdivrl
fcomps
pop
outsl
mov
cwtl
mov
inc
stos
xor
arpl
fisubrs
xor
xchg
mov
call
pop
ja
cld
push
daa
das
cmp
fmul
cli
decb
stc
subb
add
mov
adc
cmpsl
xor
aam
lea
decb
das
cli
pushf
icebp
cmc
xchg
stos
mov
add
adc
test
and
xchg
xor
lds
adc
aas
mov
mov
cmp
inc
dec
das
cmp
sub
dec
shlb
sub
push
mov
fmuls
and
sar
fwait
cmp
inc
xor
into
fldl2e
dec
sub
push
cld
mov
mov
xchg
inc
fmuls
sub
cmpsl
repnz
ret
mov
push
pop
mov
push
mov
scas
popa
fistpll
es
sub
testl
dec
mov
and
mov
pop
decl
bound
loop
cmp
jb
scas
in
insb
fcmovnu
sbb
jnp
inc
pop
xor
lahf
movsb
cmp
mov
fs
push
adc
and
fs
add
in
js
pop
arpl
cmp
xor
xchg
and
test
push
mov
jge
fwait
mov
and
out
ja
lods
imul
pop
cmp
xlat
cmc
cs
sahf
ds
jae
bnd
mov
repz
in
pop
push
push
push
insl
mov
popa
and
xor
sub
mov
dec
adc
lock
ja
push
dec
popf
jge
ss
mov
lahf
sub
xlat
push
jno
sub
rol
add
mov
int
outsb
neg
jno
in
mov
lods
in
jno
pushf
mov
mov
mov
add
jns
push
xor
xchg
popa
mov
pop
daa
xchg
adc
icebp
cmp
xchg
jle
cmpsb
popa
out
roll
inc
xchg
mov
rorl
inc
insb
sti
xrelease
out
cmp
mov
pop
popf
pop
out
scas
dec
dec
icebp
out
sbb
in
push
pop
pop
repnz
inc
adc
fistpll
cmp
jge
jnp
addr16
mov
stos
xor
inc
mov
mov
xchg
rcl
ret
lret
mov
xor
ret
mov
mov
pusha
inc
ret
aas
pop
xor
jo
and
sbb
pushf
out
push
aas
adc
mov
cmp
and
sbb
frstor
mov
push
jno
out
sbb
lds
and
icebp
test
xchg
cmpsl
mov
stc
xor
test
jl
loop
fsubrl
inc
push
xchg
xor
cld
mov
xchg
add
mov
xor
mov
in
pop
jecxz
add
dec
aad
out
int3
loopne
inc
sub
rclb
into
adc
ficoml
inc
mov
nop
insb
push
int3
cmp
mov
inc
gs
fsubl
ds
lret
push
sub
and
jb
xchg
adc
cmp
cmp
mov
sbb
sar
loopne
idivb
nop
imul
push
dec
mov
pop
mov
les
and
in
dec
mov
fidivrl
xor
arpl
insb
push
adc
push
cmp
jge
pop
jne
orl
stos
fdivl
mov
xor
inc
movsl
stc
push
mov
sti
pop
out
push
es
sub
lds
ljmp
add
xor
cltd
scas
ja
vaddps
xchg
jo
inc
inc
aas
push
lcall
jecxz
fistpll
daa
flds
xchg
adc
sub
inc
add
and
out
mov
add
xor
sub
inc
jbe
xchg
jb
sub
mov
xchg
pop
sbb
fsubrl
sub
mov
or
xchg
add
jae
scas
call
add
ja
hlt
ds
std
pop
js,pt
xchg
or
pop
add
dec
sbb
or
pop
daa
mov
insb
pop
ret
int
jo
lahf
cli
fldl
cmp
pushf
or
lret
sti
pop
mov
mov
popf
xor
and
fstps
sbb
add
inc
fcoml
sahf
in
xchg
enter
into
clc
inc
hlt
hlt
lods
push
shlb
divb
xlat
push
das
jb
imul
jge
xchg
imul
in
push
in
out
jno
sahf
sahf
xor
add
std
cmp
push
scas
in
icebp
push
xchg
fnsave
dec
test
movsl
stos
push
mov
imul
add
or
cmpl
lea
das
inc
sti
psadbw
xor
nop
fwait
daa
sbb
test
pop
mov
dec
les
sub
dec
movsb
cltd
jle
ja
les
out
lret
notb
mov
fucomi
insb
pop
pop
xor
push
inc
sarb
xchg
std
add
daa
jle
orb
sbb
inc
mov
test
jp
pop
movsb
jnp
sbb
outsb
mov
sub
out
pop
xor
ja
add
aad
enter
fs
and
push
push
jo
std
mov
or
lods
daa
testl
int
je
sub
inc
fidivrl
adc
aad
pop
sbb
int
push
lds
call
mov
lods
push
lret
and
and
pop
hlt
lods
sub
or
and
push
xchg
pop
popa
cmp
lcall
sub
cltd
xor
fwait
and
mov
xchg
mov
movsb
imul
test
push
andb
dec
mov
mov
aas
lahf
inc
out
ret
jmp
xchg
dec
or
jae
push
ljmp
push
lock
or
sbb
adc
mov
mov
or
pop
repz
mov
lahf
pop
add
inc
fcomps
repz
jl
mov
in
mov
std
jmp
xchg
sahf
test
lock
sti
movsl
repz
or
ja
fldt
call
jno
outsb
jno
mov
push
sbb
cmp
aas
test
and
lock
outsl
insb
roll
lcall
jl
lods
ret
inc
push
add
shl
adc
out
std
addl
addl
xchg
push
loopne
shrb
ficoms
stc
jp
out
fs
inc
or
jb
xor
push
sbb
fists
adc
sub
or
shl
cmp
mov
bound
push
push
testb
add
inc
sub
xchg
mov
sahf
repz
push
cmpsl
call
jns
sub
cmc
ljmp
movsb
cmp
fcmovb
dec
std
pop
loope
mov
jmp
or
popf
outsb
std
mov
ds
rorl
sti
and
jo
aad
sahf
inc
arpl
mov
mov
cltd
sub
mov
daa
pop
dec
enter
repnz
jae
das
dec
and
jne
push
jbe
js
sbb
icebp
mov
mov
movsl
add
cmpsb
repnz
xor
jb
dec
fs
dec
mov
dec
test
movsb
lea
arpl
mov
or
jl
push
imul
clc
mov
mov
or
insl
out
mov
mov
mov
push
jl
jne
adc
icebp
dec
jecxz
push
dec
adc
mul
cmp
lahf
aad
ds
mov
ds
shrl
imul
mov
fcomi
std
mov
xor
or
fbstp
ja
pop
inc
mov
cwtl
in
sub
aaa
cmp
icebp
insb
andb
test
pop
stc
push
aaa
repnz
push
xlat
cld
imul
outsb
movsb
adc
lock
addr16
push
shl
jns
cmp
and
pop
dec
and
inc
dec
in
mov
in
jmp
and
adc
insb
or
sub
mov
aaa
rcrb
lahf
jb
mov
push
cld
cmpsb
mov
lock
ficomps
rcrl
repnz
mov
push
lods
add
or
adc
sbb
xor
scas
mov
lahf
add
pusha
loope
add
pop
mov
pop
ss
pop
inc
scas
stos
ficoms
jne
mov
push
pop
pop
lret
insb
data16
xor
add
movsb
cmp
int
loope
fst
inc
fstl
je
ret
enter
das
mov
test
dec
inc
xor
mov
mov
int
mov
rolb
or
movsl
subl
xchg
scas
mov
adc
or
add
pop
dec
xor
jnp
adc
mov
pop
lods
daa
pop
push
in
pop
call
xchg
mov
repnz
mov
push
push
fs
ja
or
mov
push
jecxz
and
in
mov
mov
dec
mov
or
ja
push
mov
pop
mov
or
sbb
push
lahf
cmp
mov
jmp
jbe
insb
pop
cmp
fcmovb
mov
add
ret
divb
jbe
mov
gs
repz
inc
xor
jne
lds
js
loope
mov
ds
jnp
gs
push
mov
aad
xor
rorb
dec
pop
xchg
mov
mov
movsl
lock
aam
icebp
idivl
sub
or
cmp
dec
nop
cmp
shrl
pop
dec
jnp
sbb
invd
xchg
inc
add
pop
mov
testb
or
stc
mov
scas
xor
fstps
sub
mov
mov
ret
daa
pop
ret
jns
adc
mov
js
mov
mov
fcmove
into
cs
sbbb
push
vaddps
std
xchg
xlat
sti
cmp
jae
insb
mov
jo
or
test
cmp
pop
popa
or
repnz
loopne
fimuls
and
aas
popf
sbb
sbb
int
push
out
cmp
cmp
lret
sbb
iret
pop
insl
mov
adc
ljmp
imul
dec
shll
cmp
xchg
jge
inc
cmc
jnp
sbb
mov
push
pop
sub
fxtract
cmpsl
xor
filds
popa
ljmp
add
jae
add
mov
mov
das
jmp
mov
cmpsb
dec
cmpsb
in
and
movsl
in
mov
or
and
mov
adc
lea
push
sbb
push
clc
xchg
test
cmp
adc
andb
inc
sbb
sti
push
gs
lcall
popa
repz
dec
out
aad
test
xchg
mov
inc
sbb
lds
test
push
cmc
out
mov
jmp
adc
jmp
pop
xchg
jno
jge
add
add
insl
mov
adc
cmpsl
jnp
jo
add
aaa
and
sti
sbb
inc
cmp
xor
inc
nop
repnz
adc
jbe
dec
or
daa
adc
xor
sbb
loope
xlat
inc
mov
mov
das
hlt
and
cld
js
jo
divb
mov
mov
jg
fcomip
mov
mov
sarb
nop
insb
mov
lods
mov
mov
aad
jo
into
out
add
icebp
in
cmp
sahf
cmp
data16
jne
mov
mov
mov
mov
adc
adc
imulb
scas
aad
dec
fsubl
jg
cmp
inc
push
push
xchg
xor
or
mov
imul
cmp
dec
pop
movsb
dec
cmp
loop
push
lock
or
cwtl
jg
repz
push
jl
repnz
in
adc
xchg
fistpl
xor
pop
repnz
push
test
push
test
jbe
rcrl
xchg
cmp
add
lods
mov
adc
and
cmpsb
fidivrl
repz
repnz
pop
sbb
pusha
imul
enter
movsl
out
leave
and
out
mov
stos
and
cmc
jb
movsb
cmc
ss
loope
add
pop
sub
loope
dec
nop
lret
dec
push
jnp
xchg
aas
pop
nopl
push
mov
enter
je
push
scas
or
jmp
add
push
leave
icebp
or
lock
pop
lds
add
push
jge
jne
sbb
cli
sbb
nop
cmp
popl
pop
sbb
xchg
xchg
xor
sbb
rolb
mov
add
jb
lcall
test
mov
or
popa
leave
inc
mov
lret
imul
or
mov
outsl
dec
push
or
sub
enter
xchg
xchg
pop
sub
dec
notl
test
push
mov
cmp
add
inc
notb
sbb
xchg
jae
lods
xchg
mov
mov
test
pushf
movsl
sbb
jecxz
cmp
push
cmc
push
xor
and
div
pushf
mov
mov
sbb
rolb
cld
sbb
test
mov
jb
cmc
xchg
lahf
pop
pusha
cmp
fwait
mov
sbbl
jae
cmpsl
test
mov
adc
bt
sub
mov
fidivl
sbb
jnp
jnp
and
sub
into
js
cmp
sub
outsl
mov
jle
sarb
mov
je
test
inc
mov
int3
or
enter
rolb
ljmp
adc
push
sub
out
sub
cmp
shll
insl
inc
dec
or
bound
orb
cmpsl
jge
sarb
or
jne
xchg
sti
fstl
dec
pusha
lods
cld
mov
leave
scas
xor
inc
jo
pushf
lret
or
push
leave
fldt
dec
inc
adc
jge
push
mov
scas
jmp
inc
outsb
mov
loope
mov
push
pop
frstor
fmuls
and
stos
nop
push
push
pop
test
mov
loope
int
lret
out
mov
inc
and
xchg
sbb
push
xor
ret
mov
jle
das
loopne
mov
inc
icebp
cmp
cwtl
xchg
xlat
movsb
adc
mov
xchg
repnz
xor
lcall
dec
and
jbe
inc
inc
outsb
inc
dec
adc
gs
les
mov
xor
adc
cwtl
pop
fdivrs
add
mov
and
mov
iret
add
add
add
aam
pop
sbb
out
fiadds
ret
mov
fildll
int
pusha
lret
inc
xchg
popa
out
aam
jl
adc
sub
into
inc
in
mov
or
push
fdivs
bound
xlat
iret
or
jecxz
data16
jmp
fnstcw
aas
adc
stos
cmp
lock
stos
das
shrl
xchg
sub
lods
xor
pop
adc
mov
mov
std
hlt
push
cltd
cmp
ljmp
dec
dec
mov
aad
add
xchg
ja
icebp
inc
cwtl
movsl
jno
cs
popf
test
push
xor
lret
xorb
jge
mov
add
test
jp
jmp
pop
push
fwait
push
es
les
jge
xchg
out
push
ljmp
jge
mov
sbb
enter
sar
sub
push
xchg
outsb
mov
pop
enter
lret
mov
shl
push
in
pop
int
mov
add
movsb
into
aaa
dec
stos
mov
sbb
push
dec
call
ret
enter
es
addb
xor
xor
cmp
sbb
and
jp
mov
repz
mov
and
sbb
cmp
or
or
adc
mov
xorl
cld
lret
push
dec
pusha
out
jb
stos
aam
pop
pushl
push
pop
lea
jmp
ljmp
sub
inc
dec
push
push
xchg
pop
mov
rclb
adc
stc
daa
movsl
sub
jb
mov
in
daa
push
test
ret
mov
sub
pop
fbstp
fs
xor
adc
lcall
cwtl
inc
mov
es
sbb
mov
out
xchg
adc
aas
lcall
daa
pop
fisubrl
xor
and
scas
mov
xchg
gs
sahf
clc
aaa
fwait
xor
jmp
imul
sub
jnp
adc
sbb
movsl
pop
ficomps
xchg
jnp
mov
adc
mov
orb
mov
and
jno
xor
adc
outsl
sbb
sarb
insb
mov
stc
imul
sti
test
inc
bound
aaa
test
mov
jbe
cld
mov
xor
ret
jl
sbb
jle
jp
jle
pop
popa
mov
cmp
cli
pop
in
adc
jecxz
fistpl
lock
cmp
stos
push
mov
lahf
mov
add
popf
pop
mov
aam
test
shr
push
or
rolb
sub
mov
cmp
iret
insb
jl
subl
daa
sar
stos
popa
jle
subb
leave
add
inc
dec
inc
adc
push
insb
mov
ja
fdivrl
xchg
pop
or
jle
cltd
pop
sub
mov
idivb
mov
cmpsb
fs
and
push
or
mov
hlt
dec
stc
imul
mov
push
ss
push
dec
mov
add
aam
das
cmp
jbe
mov
sbb
es
fwait
add
sahf
jg
addr16
ret
mov
push
or
mov
xchg
xchg
cmc
sub
mov
bnd
insb
dec
add
add
and
dec
or
jbe
jp
cli
pop
ljmp
ss
lods
cmpsl
gs
psubw
sbb
loop
and
les
into
cli
xor
mov
es
cwtl
push
or
dec
cmp
test
xchg
push
adc
and
xchg
cmp
xor
ljmp
or
fstl
clc
faddl
loop
mov
push
loope
cmp
add
or
cld
popl
sub
mov
shlb
nop
aad
ljmp
cmpsw
mov
xor
xchg
lahf
ss
hlt
sub
movsb
fcomps
ds
movsl
inc
push
in
lods
xor
in
cmp
mov
imul
rorl
mov
cs
inc
adc
daa
popf
cmpsl
je
jg
mov
jge
loop
xchg
mul
push
push
mov
dec
leave
arpl
or
inc
dec
push
pop
cmp
or
jnp
mov
mov
in
fs
movsl
mov
pushf
or
push
mov
push
ja
pop
xor
jge
sub
push
stc
in
dec
cwtl
popa
addr16
xor
leave
pop
pusha
mov
out
adcl
rcr
leave
adc
jnp
push
xchg
insb
adcl
or
imul
sbb
mov
xor
adc
inc
aas
jl
jmp
ljmp
adc
cmp
mov
pop
dec
sbb
ret
shll
fsubrl
lret
xchg
mov
cmp
xchg
xor
dec
cmc
outsb
xor
int
xor
cltd
inc
negb
xchg
cmp
decl
scas
rcrl
call
test
rcrl
push
les
or
mov
pop
popa
movl
outsb
inc
push
nop
sbb
stc
icebp
repnz
out
std
inc
aam
push
scas
or
cmp
bound
popa
jbe
out
jno
xor
cmp
pop
add
pop
cwtl
out
stc
cwtl
insb
add
addl
mov
adc
movsl
pop
stc
lods
in
int3
ja
in
adcl
sub
addr16
fwait
popa
mov
movsl
std
imul
xchg
cmpsl
in
pop
leave
mov
dec
test
mov
shld
das
sub
add
sahf
adc
cwtl
sub
movaps
insl
jmp
gs
pop
jb
daa
pop
shll
mov
push
ljmp
cmpsb
mov
sub
into
cmp
cmpsb
int3
lds
jle
adc
jns
mov
gs
inc
xorb
jmp
pop
xchg
xchg
add
mov
mov
pushf
dec
addr16
lret
and
cli
pop
stos
add
xchg
js
int3
xor
lcall
mov
lahf
mov
jne
dec
cwtl
adc
rolb
jge
cmp
push
je
enter
and
adc
jne
aas
out
xchg
imul
sti
mov
addr16
mov
rcr
mov
stos
jbe
jle
mov
in
imull
pushf
xchg
mov
dec
xchg
cmp
out
popf
stc
js
popa
mov
push
imul
mov
ljmp
inc
adc
fstpl
pop
inc
pop
jbe
mov
fiaddl
lahf
insb
jecxz
mov
pop
mov
mov
arpl
mov
iret
mov
mov
pop
adc
stos
cli
push
push
push
outsb
add
xchg
mov
jmp
rolb
lods
xor
xor
int3
outsb
xchg
insl
xor
lea
xchg
and
stos
pop
aas
dec
out
mov
dec
xor
clc
mov
insb
fsubp
movsl
mov
aaa
xlat
ja
or
out
jo
icebp
xor
push
popa
xchg
ljmp
aad
loopne
push
inc
jg
lret
adc
fldcw
das
out
enter
pop
outsl
push
insl
inc
shll
inc
pop
xor
ljmp
ret
add
stc
cmp
sbb
dec
int
pop
xchg
enter
sbb
xor
insl
mov
out
pop
mov
insb
cmp
movsb
fcoms
push
dec
mov
jno
jmp
jb
mov
adc
aas
cs
pop
loopne
cmpsl
sar
dec
into
pop
fimuls
jns
xor
jno
mov
sbb
xchg
sub
ret
addb
fnstcw
jp
aaa
push
dec
imul
mov
nop
xor
mov
cmp
mov
dec
and
xor
pop
pop
in
push
adc
dec
add
movsl
xchg
icebp
pop
sub
xor
out
pop
and
jae
sub
jo
sub
in
stos
xor
jg
cwtl
sarb
sahf
pop
jno
pop
fwait
lcall
jae
gs
leave
shll
ljmp
mov
adc
pop
ljmp
inc
int3
test
gs
int
addl
pushf
cmp
xchg
lahf
xchg
xor
mov
popa
aaa
hlt
xor
xchg
int
sahf
sub
mov
sub
data16
cs
data16
and
lds
xchg
and
lret
pop
stos
or
jbe
pop
out
inc
insl
pop
loopne
add
test
ficoml
push
cmp
lods
les
out
lock
cmpsl
and
adc
imul
mov
orb
jmp
xchg
sub
push
pop
mov
push
iret
mov
hlt
pop
sbb
mov
adc
jle
les
loopne
fcmovnb
icebp
add
scas
jmp
gs
ficoml
out
mov
cmpb
loop
and
fistl
in
adc
fldl
mov
pusha
dec
clc
pop
cmp
push
leave
call
addl
xchg
and
jg
fcoml
lea
std
cmpsl
fwait
mull
push
mov
fldt
pop
rcll
xchg
sti
ret
xchg
rcl
xor
stc
stc
je
pop
sti
daa
fwait
leave
loope
xchg
in
stos
mov
iret
push
fisttps
mov
xor
orb
shll
inc
test
dec
in
and
fstl
cmp
sbb
out
fimull
sti
lahf
cmc
adc
dec
mov
dec
push
loopne
cmp
jnp
aam
leave
popf
inc
push
adc
orl
xchg
dec
cmp
cmc
add
jle
mov
sbb
jb
ljmp
xchg
mov
pop
jnp
sahf
dec
imul
enter
stc
sbb
inc
popf
leave
push
bound
jge
clc
dec
mov
stos
jns
insb
dec
imul
mov
xchg
sub
mov
fistps
pop
aad
cmp
sarb
test
jne
xor
mov
mov
mov
fwait
mov
mov
sub
dec
or
inc
mov
jne
scas
enter
cld
inc
sbb
dec
xor
mov
inc
push
dec
or
es
cmp
add
lahf
cli
sub
lods
js
push
rcll
pop
push
movsb
mov
cwtl
jmp
fists
cmc
mov
or
shll
cmp
sti
mov
mov
push
jbe
outsl
aad
pop
xchg
xchg
jmp
pop
test
adc
cmp
frstor
xor
mov
test
sti
fdivs
jg
xlat
add
js
ja
push
nop
jg
addr16
xchg
orl
fnsave
insb
and
lret
jno
loop
push
insb
iret
dec
push
test
cmp
sti
outsl
cmp
popa
cltd
mov
mov
push
or
sahf
cld
add
and
mov
jge
shll
push
scas
notb
xlat
sarl
cmp
adc
mov
fwait
inc
or
aaa
mov
xor
loopne
sub
icebp
cmc
push
push
faddl
call
es
jl
aaa
ljmp
nop
cmp
jle
or
out
icebp
dec
outsb
cmc
mov
sub
pop
test
idivb
dec
fcompl
xor
mov
ljmp
inc
enter
lahf
repnz
sar
adc
hlt
mov
mov
stos
xchg
ja
push
jmp
xchg
jae
xor
xchg
mov
cmp
inc
and
push
leave
hlt
test
test
test
pop
mov
cltd
int3
aam
int3
cmp
mov
dec
sbb
bound
shrb
daa
dec
cmp
enter
popa
pushl
ss
add
aad
shlb
inc
push
es
ja
outsl
add
jp
out
and
push
fsubrs
adc
dec
mov
addl
loope
lcall
scas
add
jo
shrb
and
enter
xchg
push
test
jae
jb
add
xor
adc
mov
icebp
pop
pop
adc
cmpsl
mov
adc
andb
jns
jmp
iret
gs
scas
repnz
mov
xor
les
add
aas
in
push
imul
mov
and
popf
in
fs
insl
jp
or
mov
popf
fldt
insb
lahf
sbb
jae
cmpsl
cmpsb
push
in
aad
adc
aas
leave
inc
add
jnp
in
shrl
or
stos
in
fnstcw
cltd
sbb
jp
aam
imul
add
out
and
add
mov
inc
icebp
outsl
mov
xchg
push
fistl
mov
push
aad
mov
das
add
mov
rclb
mov
in
call
mov
sbb
test
lods
pop
mov
push
outsb
fs
leave
cwtl
cli
scas
xchg
cmpsb
and
out
lock
data16
jmp
mov
cltd
mov
sti
mov
stc
scas
push
jecxz
xchg
mov
je
jp
sub
hlt
outsb
push
inc
jne
and
lea
mov
fstps
out
pop
pop
notl
mov
nop
fs
mov
in
add
push
sbb
sub
mov
jp
lahf
sti
loope
push
faddl
lcall
in
pop
xor
push
or
stc
test
leave
push
les
jns
cli
lea
rol
inc
ret
rorl
jge
stos
mov
shl
dec
subl
add
gs
pop
popa
in
or
mov
aas
or
and
add
adc
fisttpll
xorl
repz
cmp
cmp
dec
fnstcw
mov
push
aam
loope
pop
jge
je
stc
inc
sub
xor
dec
stos
mov
jp
fists
or
or
xchg
pop
jecxz
xchg
sbb
jmp
leave
and
orb
pop
add
test
mov
or
or
pushf
cs
push
je
jecxz
cmc
leave
cld
mov
adc
push
sub
je
add
dec
imul
sub
inc
fistl
jmp
mov
jg
test
jno
xchg
loop
aaa
xchg
popa
jbe
sub
inc
jbe
lahf
push
adc
dec
test
inc
dec
lds
mov
leave
lea
outsb
adc
call
cs
fildl
into
pop
cmp
or
adc
sub
adc
ss
cld
pop
xlat
in
inc
fstps
push
fbld
rcl
xchg
pop
push
movsl
in
pop
lret
xor
lcall
inc
adc
xlat
pusha
inc
mov
add
mov
inc
xchg
dec
jnp
push
jbe
nop
sub
ret
or
add
xchg
daa
adc
repz
push
ljmp
mov
push
and
lods
mov
inc
ljmp
sbb
outsb
add
leave
pusha
add
imul
sub
adc
cmpsl
dec
ja,pt
push
arpl
pop
incl
inc
pop
loope
sbb
xlat
in
add
mov
mov
lret
stc
cmp
inc
imul
mov
cmp
cmc
xor
fidivrl
cmp
jo
pop
xor
mov
aad
pusha
dec
jmp
repz
addr16
sarl
mov
pop
in
testb
xor
xchg
xchg
mov
fmull
lea
dec
test
push
fists
leave
mov
dec
int
inc
sbb
fdiv
lret
xor
rcrl
iret
inc
mov
fdiv
or
sbb
sbb
and
nop
movswl
xor
repnz
and
push
sbb
loop
loopne
push
and
inc
sbb
mov
jnp
add
mov
aam
cmpsl
push
daa
es
stos
cmp
rorl
cmp
push
add
sub
sub
sub
add
inc
enter
or
mov
mov
outsb
push
add
dec
mulb
jecxz
dec
repnz
cli
mov
xor
aam
and
jl
pop
cmp
pop
into
xor
push
xchg
cmpsb
cwtl
xchg
stc
push
adc
into
test
push
mov
add
or
lods
cltd
je
jnp
pop
push
nop
xor
push
dec
mov
adc
mov
mov
or
clc
lds
adc
xchg
out
outsb
scas
xchg
xor
inc
and
ljmp
fwait
xor
lods
int3
sub
jle
mov
mov
inc
mov
xchg
adc
test
and
std
cmp
mov
ds
xchg
ljmp
cmp
mov
sarl
pop
loop
add
fidivs
inc
stos
fidivl
pop
xchg
icebp
mov
xchg
cmp
sbb
mov
shr
sbb
xchg
sbbl
adc
enter
loope
test
ljmp
inc
stc
add
repnz
popa
fcomi
in
mov
icebp
mov
jnp
jmp
fnstsw
jl
in
lahf
lahf
mov
inc
xchg
mov
call
dec
lods
ret
add
adc
cmpsl
aas
cmc
dec
les
jp
test
outsl
lahf
lea
and
or
pop
pop
jb
insl
cmpsl
adc
daa
inc
pop
outsb
sbb
adc
xorl
cltd
int3
xchg
cmp
mov
out
add
imul
jmp
xor
push
das
jbe
movsl
inc
inc
movsb
jp
lods
mov
aam
cmp
jecxz
push
sub
enter
mov
cmp
jp
adc
sbb
cltd
add
outsb
test
dec
pusha
stc
mov
iret
aas
and
pop
mov
into
jo
mov
mov
pop
sbb
call
cmpb
push
add
fwait
xchg
popa
and
xor
mov
mov
test
mov
xchg
xor
or
push
push
xor
xchg
push
jno
sbb
out
push
xchg
ret
pop
mov
nop
ret
xor
push
dec
mov
or
int
adc
loop
and
test
mov
stc
adc
inc
movsb
jnp
lods
outsl
or
cmp
jmp
sar
fnstenv
mov
inc
cmpsb
ja
mov
ja
lods
out
leave
xchg
outsl
ret
cwtl
and
into
sbb
test
shrb
dec
mov
fwait
or
fcoml
jno
mov
imul
mov
add
rorb
stos
sub
rorl
inc
push
outsb
ret
mov
insb
loope
push
dec
adc
sbb
add
inc
xchg
fwait
push
enter
outsb
fucomip
mov
sub
push
enter
subl
push
adc
fmul
cld
mov
ss
inc
sub
cmp
push
or
std
or
and
clc
cltd
movl
xchg
pop
call
hlt
mov
xchg
sub
adc
add
jle
aam
call
fidivs
mull
stos
mov
sub
movsb
inc
test
test
js
ljmp
jecxz
push
hlt
leave
out
or
xchg
outsb
sbb
daa
xor
in
xadd
insl
sub
mov
push
in
lcall
push
in
leave
mov
push
popf
ljmp
lods
mov
push
inc
add
pushf
lods
fisubs
mov
dec
cltd
in
pop
lret
add
into
dec
insb
fcomps
push
insb
jl
adc
xchg
or
in
or
stos
ljmp
int3
and
mov
popf
lds
or
mov
or
push
mov
or
lea
lds
shlb
mov
in
inc
lds
popa
mov
and
and
sbb
lahf
insl
sbb
in
xchg
sbb
test
push
out
fs
outsl
mov
or
push
mov
pop
xor
push
call
cwtl
push
out
lldt
xchg
sub
lret
xchg
fucomi
jb
mov
das
adcb
adc
stos
ficoml
mov
nop
push
fistps
pop
pop
or
dec
in
mov
fs
mov
xor
stos
shlb
xor
pop
pop
xchg
ret
clc
test
push
pop
add
in
push
imul
inc
sbbb
imul
sti
mov
push
and
xchg
cmc
push
repnz
fcomps
push
outsb
mov
mov
mov
sbb
push
out
xor
int
cli
xchg
push
push
pop
jge
arpl
rcrl
outsb
mov
insl
inc
push
popf
lea
and
ljmp
dec
arpl
inc
inc
xchg
push
jne
pushf
xchg
adc
jns
gs
xchg
enter
mov
movsl
xchg
pop
gs
add
push
test
add
pop
mov
flds
notl
loope
mov
xchg
or
dec
stos
xor
jmp
jmp
add
test
or
fdivrs
stos
push
cmp
pop
xor
lret
lock
sub
aaa
mov
mov
cld
aam
sahf
scas
out
jo
or
mov
mov
imul
outsl
push
dec
ret
xchg
nop
mov
std
imulb
push
sbb
pusha
sub
cmp
sbb
add
xchg
or
ret
in
sub
aaa
loopne
outsl
mov
mov
mov
jo
mov
mov
pop
cs
stos
sti
arpl
adc
js
dec
lods
push
and
xchg
stc
cmp
jne
jge
sar
mov
and
adc
or
fnstenv
xchg
fstpt
push
sbb
js
mov
or
adc
jo
dec
test
js
mov
lock
and
popf
sub
std
cltd
cs
xchg
out
in
inc
cs
jnp
mov
in
insl
push
xor
or
pop
dec
shlb
cmp
inc
add
xchg
std
imull
push
ljmp
pop
mov
cmpsb
dec
lock
inc
dec
movsl
inc
sbb
xchg
incl
mov
sub
mull
in
cmp
nop
xchg
daa
mov
xor
fstps
inc
ds
xor
lcall
push
test
stos
icebp
fidivrl
adc
or
in
dec
lds
push
xor
mov
xchg
sub
or
std
cmpsb
out
stos
adc
insl
gs
lock
xchg
addl
pop
and
fsub
jo
jae
lret
cmp
sub
push
push
mov
int
sub
adc
pop
jbe
incl
inc
cmp
jae
inc
push
cld
lods
mov
fstl
sbb
sub
sub
jb
sbb
adc
les
mov
scas
inc
pop
fimuls
inc
in
pop
cli
push
addr16
loopne
test
sahf
and
jle
mov
push
inc
mov
fisttpll
jo
inc
mov
cmp
ljmp
into
js
les
ljmp
pusha
add
dec
sub
xor
mov
mov
int
pop
mov
cwtl
pop
out
xchg
jg
inc
ja
xchg
rcr
or
in
sahf
test
sbb
cmp
add
inc
xor
je
jb
cmp
int
inc
aas
imul
sbb
mov
jb
fimull
jecxz
mov
out
das
mov
mov
shll
aam
xchg
rcrb
mov
mov
dec
stos
lea
std
lds
shll
xlat
inc
lret
mov
and
clc
gs
or
jae
aam
rcll
out
push
lods
xor
cmp
jo
sbb
dec
and
out
cmc
jbe
ret
push
sub
xlat
in
mov
jno
jns
roll
sbb
lock
clc
inc
sbb
data16
cwtl
lock
hlt
cli
push
jae
out
mov
push
test
andb
fmuls
clc
fisubrl
lods
mov
cmp
and
sbb
int3
sub
ljmp
pop
jbe
loopne
imull
push
adc
into
dec
in
sub
adc
push
sbb
push
mov
lock
adc
outsl
push
jle
or
fisubrs
push
ret
cwtl
inc
jae
aam
sub
test
mov
cmp
push
pop
xchg
and
mov
enter
pop
push
insb
mov
cmp
in
gs
movsl
stos
mov
push
dec
sti
jl
int3
push
bound
dec
je
push
jno
popa
aad
lahf
mov
nop
mov
fnstsw
daa
cmovle
popa
jg
iret
in
stc
repnz
shlb
enter
in
lds
ja
stc
lds
dec
out
mov
sub
push
mov
adc
mov
das
repnz
pop
jnp
ret
dec
and
inc
mov
lea
inc
pop
pop
insl
or
and
mov
push
mov
dec
mov
add
adc
in
cmp
push
xchg
inc
cmpl
dec
repz
mov
adc
imul
pushf
shlb
repz
shrl
dec
mov
xorl
fisubl
xor
inc
gs
xlat
mov
and
ret
adc
std
ljmp
sahf
mov
jb
xchg
loopne
loopne
push
imul
sbb
adc
iret
xchg
in
call
loope
pushf
mov
mov
or
ds
add
jo
push
scas
out
ja
sbb
mov
das
dec
nop
mov
jge
cmpsl
sbb
mov
inc
pop
hlt
or
je
cmpsl
xor
and
jo
punpcklwd
mov
jl
outsl
ret
shll
in
cwtl
into
inc
ret
sbb
jno
mov
movsb
fsubp
push
inc
int
mov
mov
aaa
fidivs
mov
das
daa
cmpsl
xor
or
cwtl
in
inc
addr16
dec
jbe
cli
sbb
jae
movsl
push
testb
xchg
dec
mov
jnp
mov
mov
fcom
jge
es
sbb
xchg
or
orl
cmpsb
je
pop
out
lret
adc
sahf
loopne
dec
cmc
pop
cmp
jns
fnsave
sbb
fbld
popf
sti
shr
aaa
out
xchg
sub
test
mov
jne
push
pop
jle
cmc
mov
fcmovnb
and
nop
and
dec
insb
mov
ret
push
sbb
cld
pop
notb
sub
or
out
insl
sub
mov
aas
sti
or
shll
call
or
jge
xchg
or
sub
sub
jno
insb
and
int
ljmp
fdivrs
inc
outsb
pop
mov
hlt
pop
jnp
pop
and
repnz
aad
ljmp
push
sub
pop
dec
cmp
mov
out
add
xor
ds
jbe
or
stc
lods
stos
mov
leave
push
mov
add
test
cs
jo
push
push
test
das
mov
jl
pop
fidivs
js
in
das
aam
fwait
loopne
mov
xchg
adc
imul
fstps
mov
sub
xor
stc
mov
insl
gs
inc
adc
outsb
mov
and
lahf
dec
pop
test
sub
icebp
cli
dec
int3
cltd
data16
bound
pushf
sub
push
testl
hlt
push
add
into
mov
das
push
push
cmpsb
aaa
sub
lods
push
fwait
int3
aam
in
xchg
test
mov
adc
fsubr
shrd
stc
ss
pop
adc
jne
jle
push
movsb
xchg
in
add
lock
mov
inc
mov
xchg
ds
fwait
dec
mov
and
dec
cli
push
stos
mov
jg
jp
sub
lahf
mov
addr16
push
xchg
lret
insl
scas
outsl
sbb
xchg
mov
cld
out
xchg
xorb
jne
xor
cwtl
outsl
pusha
sbb
cmp
out
dec
orl
jbe
sahf
xchg
mov
shr
sarl
mov
in
mov
push
nop
add
aaa
test
in
and
lret
pop
aaa
shll
insl
sarb
fwait
inc
adc
les
sti
stos
hlt
stos
and
adc
dec
imul
or
js
lret
xchg
int3
pop
rcrl
icebp
cmp
ret
cmp
push
sub
addr16
cwtl
bound
mov
inc
jp
ret
adc
out
cmpsb
stos
movsb
pop
sub
sbb
push
enter
xlat
cmc
pop
sarb
es
fstps
dec
mov
push
sar
cmpsb
ljmp
sbb
mov
xchg
xchg
cmp
sbb
cli
shlb
jae
xor
dec
xchg
sub
movsl
loop
std
cmpb
inc
xlat
enter
stos
dec
sub
ret
sub
add
gs
in
mov
and
aam
addr16
mov
arpl
jmp
into
call
cmpsl
adc
ficomps
stos
bound
sub
jno
inc
add
sub
mov
mov
xchg
inc
pop
xor
inc
subb
mov
or
or
mov
xor
mov
cmpsl
imul
inc
dec
lea
and
lea
inc
out
fisubs
shrl
mov
mov
jnp
mov
scas
pop
lret
mov
sbb
mov
sub
popa
mov
jge
xchg
mov
inc
jmp
pushf
add
xor
adc
dec
xor
mov
es
push
loope
mov
jge
push
sub
cmpsl
pop
mov
aas
pop
jp
cmpsb
mov
popf
ljmp
sbb
into
dec
mov
push
xchg
sub
sub
jno
or
adc
arpl
xor
jmp
hlt
and
jno
mov
aaa
loopne
out
and
rclb
pusha
cwtl
out
xor
out
sub
into
imul
mov
adc
mov
inc
stos
sbb
jbe
add
daa
lods
add
orl
add
adc
sti
push
mov
adc
adc
push
dec
cmp
mov
lds
xchg
xor
sub
insb
inc
mov
xchg
movsb
push
movsb
aad
js
dec
fisubrl
aas
js
push
lret
cmc
lock
ds
enter
lods
xor
xor
les
in
leave
loopne
idiv
jmp
pop
mov
cmp
add
mull
inc
je
mov
test
lock
push
int
in
add
xchg
cmp
iret
mov
or
ficoms
outsb
jo
mov
lret
and
lret
mov
gs
push
push
or
loopne
movsl
out
sbb
in
lcall
jb
ficompl
lods
and
mov
lret
loop
cld
in
testl
mov
and
popa
mov
std
mov
push
cld
das
or
rolb
xchg
dec
movsl
stc
std
mov
and
jmp
sbb
cmp
mov
aas
movsl
test
and
push
lret
add
sahf
fstpt
ja
mov
inc
stos
cmpb
sbbb
cmp
movb
push
mov
mov
out
mov
shlb
pop
mov
mov
push
arpl
in
push
mov
rolb
adc
cmp
leave
sub
mov
push
add
push
sbb
aam
cld
sub
ret
lea
pop
je
or
inc
lods
stos
inc
mov
sbbb
xor
adc
push
lods
inc
insb
cs
add
cmp
arpl
imul
xchg
push
in
loopne
in
sbb
call
imul
mov
iret
push
imul
call
sbb
sahf
test
fildll
faddl
pop
loope
mov
push
pop
or
adc
jae
addr16
pop
mov
loope
or
out
add
rolb
and
and
dec
inc
loop
movsl
pushf
mov
shll
shlb
xchg
dec
sub
enter
arpl
mov
fsubrp
jp
test
out
jo
sarb
cmp
jb
movsb
push
mov
loop
and
or
adc
sbb
pop
pop
test
arpl
fidivrs
jnp
and
xchg
adc
or
call
out
outsl
sbb
mov
mov
rcll
jae
cltd
mov
jae
mov
int
add
jns
mov
stos
or
mov
stc
sub
data16
mov
das
xchg
pop
fwait
xor
into
dec
sbb
mov
jb
fs
sub
mov
fldenv
xlat
nop
sub
inc
sbb
sbb
mov
je
push
test
fists
push
into
hlt
icebp
adc
sub
mov
sub
nop
ja
pop
iret
jmp
fs
xchg
shl
mov
test
fs
aad
mov
sub
in
and
and
xchg
jae
cmp
xlat
in
std
jae
mov
mov
mov
in
out
or
imul
xor
or
inc
mov
stc
fdivp
into
sbb
sti
xor
ja
sub
dec
stos
pop
lock
mov
mov
push
mov
gs
mov
adc
popf
cmpsl
push
les
push
je
addb
mov
inc
or
sub
cwtl
add
pop
add
sbb
rcr
out
arpl
leave
mov
in
jge
movsb
sbb
jno
or
adc
mov
pop
or
fidivl
and
push
insb
xor
into
mov
push
ret
dec
test
sbb
push
lahf
xor
data16
lods
or
mov
mov
test
fldt
sarl
pop
cli
call
or
cmp
mov
sub
or
in
pop
out
and
xchg
pop
dec
dec
mov
push
cmp
cmpsb
xchg
jae
stc
and
test
jg
pusha
stos
mov
dec
ljmp
cmp
push
pop
xorb
jmp
or
out
mov
fidivl
popf
or
xchg
jae
push
movsb
mov
ret
or
jmp
push
and
jp
pop
inc
imul
cwtl
and
xorb
jg
mov
fistpl
faddl
pop
sbb
dec
insb
ss
pop
je
cmpsl
or
jge
das
ret
sub
and
mov
pop
mov
pushf
mul
test
adc
les
adc
or
cmpsl
xchg
popa
call
xorb
inc
jp
sti
lods
mov
data16
mov
ja
inc
daa
stos
mov
sbb
rol
jg
jne
pusha
fdivl
xlat
mov
test
mov
and
xchg
mov
mov
mov
dec
push
frstor
jns
jp
mov
mov
sub
imul
addr16
mov
dec
cmc
cmpsb
add
test
cli
mov
fildl
das
xor
mov
xlat
int3
outsl
adc
cltd
jns
xchg
outsl
cmpsb
sub
sbb
je
dec
daa
cmpsl
xchg
ss
daa
cmp
rol
sti
gs
popf
mov
in
loop
mov
in
movsl
or
cmp
dec
andb
and
shl
movsb
add
test
adc
stos
in
or
jb
mov
add
xorb
cltd
lcall
pushf
adc
pop
fnstsw
add
adc
cmp
add
xchg
mov
lods
push
int
and
jg
or
sbb
inc
xchg
bound
movsl
jns
clc
jns
mov
jbe
sysret
adc
dec
rclb
lods
adc
test
mov
push
xchg
add
cltd
ret
orb
add
repz
or
add
dec
dec
aam
sub
push
dec
inc
add
inc
cmpsl
or
or
push
jbe
push
rorl
int3
or
pop
and
in
xchg
mov
pop
jnp
push
push
mov
push
les
or
fmul
sbb
loopne
dec
out
scas
dec
test
ficoml
pop
divl
lea
sub
jmp
outsb
lds
lock
push
test
aam
mov
sub
cmp
dec
xchg
dec
cli
loop
push
jno
pushf
mov
cmpsb
or
in
aaa
ret
dec
mov
cmp
xor
repz
xchg
mov
add
loope
or
stos
adc
ds
pop
jg
daa
xor
dec
dec
call
pop
hlt
jmp
pop
mov
push
pop
aaa
jbe
std
repz
adc
pop
adc
inc
iret
jmp
sub
mov
sub
mov
pop
insl
dec
ja
add
je
lds
std
pop
inc
test
mov
mov
lcall
or
sbb
sahf
mov
add
jmp
xchg
dec
das
and
ss
mov
jnp
cmp
sub
mov
ret
outsl
andl
inc
pop
mov
or
fisttpll
stos
push
sbb
sub
fildll
lret
mov
pop
push
gs
cmp
mov
xlat
jge
sahf
mov
gs
cltd
push
adc
daa
int3
out
dec
imul
jl
pusha
mov
dec
cwtl
stc
ffreep
pop
dec
mov
mov
lcall
daa
shll
jnp
loopne
cmp
mov
lret
inc
dec
daa
mov
push
xor
aas
and
jg
dec
fdivr
jno
or
vmread
out
loop
seto
out
in
jne
dec
neg
test
adc
pop
cmpsb
cld
fisttpll
mov
mov
mov
test
sbb
mov
fsubrs
dec
mov
mov
sbb
jbe
and
xchg
cmp
mov
out
into
aaa
rolb
or
and
jle
loop
call
xchg
or
cmp
lret
add
lods
fstpl
shufps
adc
and
sbb
int
push
mov
xchg
loopne
scas
fsubr
cli
jne
fistpl
out
nop
enter
mov
add
push
mov
push
mov
push
lcall
test
out
cli
jo
jae
sarl
sbb
push
stc
dec
xlat
mov
loopne
inc
cld
fsubrs
or
nop
mov
leave
push
and
inc
hlt
rolb
cli
push
or
xchg
pop
sahf
dec
sbb
mov
sbb
orl
mov
loopne
in
js
iret
mov
xor
cmpsb
inc
mov
out
jno
adc
push
inc
mov
mov
push
push
and
and
cmpsl
cmp
inc
in
dec
sbb
sub
mov
js
insb
cmp
dec
pop
int
in
fwait
pcmpgtb
inc
jmp
add
out
test
xchg
jge
je
js
mov
ss
push
lret
shrb
cli
or
idivl
sbb
mov
out
data16
subb
and
cmp
cs
cmpsb
js
scas
mov
sti
jnp
in
cmp
fsubl
push
pop
mov
ljmp
sub
test
push
in
repz
add
out
aam
mov
jne
icebp
stos
add
push
addr16
jne
cmp
mov
mov
sub
in
cmpsb
and
add
stc
aas
sub
les
xor
lods
sbb
aas
xorb
sbb
push
incb
call
adc
inc
movsl
mov
mov
cmp
dec
jne
orl
bnd
mov
lret
mov
bound
mov
add
fdivs
mov
pop
sbb
jmp
popf
push
out
and
lds
pushf
outsw
jmp
xchg
rorl
dec
stos
jecxz
aaa
adc
jnp
cs
aaa
push
imul
icebp
mull
mov
sub
out
stos
jle
data16
lret
std
into
sti
xchg
pop
icebp
mov
and
push
dec
es
aad
aad
in
mov
sub
mov
cmp
jmp
push
cmpsl
outsl
pop
sbb
in
mov
push
cmp
je
jmp
popa
test
enter
test
clc
frstor
stos
scas
fcompl
xchg
cmp
sarb
sub
and
js
xor
lret
xor
mov
xor
mov
scas
jmp
xchg
pop
cmp
movsl
repnz
cmpsl
xchg
out
mov
add
into
dec
cmpsb
outsl
bound
int3
jno
mov
jae
pop
jno
mov
lret
outsb
push
push
push
lods
jne
push
push
xchg
xorb
lret
call
loopne
shl
lret
mov
push
out
pop
lret
int3
jbe
cmp
fcoml
fcompl
mov
aaa
inc
mov
stos
insl
and
rcrl
push
incl
xlat
xchg
lea
loopne
xlat
sub
jo
int
push
push
loopne
insb
sti
cwtl
lret
and
cmp
mov
pushf
insb
dec
and
inc
xchg
insl
cmp
mov
in
xlat
dec
test
jo
jns
dec
sbb
loop
jbe
adc
jp
inc
push
xor
mulb
xchg
repnz
xchg
aas
pop
inc
jecxz
and
je
mov
mov
cmpsl
stos
stos
decb
aad
lods
cld
clc
pop
xchg
cmc
add
mov
push
jb
in
mov
jl
cmpl
fsincos
lods
mov
jge
fwait
push
mov
xchg
out
ds
sub
mov
imulb
movsb
sub
sub
scas
scas
iret
jno
pushf
shr
fbld
ficoms
stc
pop
aaa
xchg
or
mov
jle
out
aas
in
push
js
ret
or
outsb
xchg
adc
daa
out
cmp
daa
cmp
out
jae
sub
inc
add
push
cmp
xor
sub
fsub
xchg
mov
out
out
arpl
fdivr
dec
popf
push
imul
ss
cmp
sub
sub
mov
push
int
add
push
xchg
inc
mov
sarb
in
jge
cli
jae
sar
adc
addr16
adc
mov
pop
cli
mov
shll
and
jo
test
xlat
and
add
xor
scas
out
lret
jo
adc
mov
leave
mov
pop
pop
add
dec
mov
jne
inc
mov
popa
femms
dec
ja
sbb
mov
stos
dec
out
aas
mov
xchg
mov
mov
stos
or
cmp
and
xor
or
mov
xlat
out
sti
rol
stos
lock
lret
mov
imul
jo
inc
mov
dec
cli
push
scas
jecxz
mov
test
out
loop
add
lahf
icebp
mov
sbb
fwait
sub
mov
in
bound
stos
test
and
sti
or
aad
loopne
scas
adc
andb
inc
arpl
frstor
call
imul
push
jne
mov
mov
jecxz
inc
or
arpl
cmp
mulb
shlb
push
dec
or
mov
int3
fisubl
sub
lock
cli
in
pop
test
stc
out
cmpsb
jge
lcall
adc
in
out
push
enter
pop
lcall
pop
lods
fdivrl
jmp
fwait
lcall
lea
fcomps
lcall
cmp
pop
xchg
popa
loope
loopne
lret
cmp
ret
in
sub
dec
stos
lret
and
xchg
shll
jae
or
insb
inc
pop
dec
jg
pop
test
mov
ret
adc
cmp
xadd
cmp
cmp
jecxz
sub
ja
sub
pop
cmc
lret
lret
sub
sub
push
lods
push
push
fldl
xchg
inc
insb
mov
data16
in
sbb
aad
enter
lea
sbb
lret
push
cltd
ret
xor
push
pop
shlb
div
mov
jp
jg
cmp
jnp
addr16
or
lods
jnp
mov
cmc
outsl
dec
scas
dec
push
out
mov
cmpsl
mov
xor
outsb
adc
lret
sahf
call
mov
bnd
addr16
push
scas
adcl
imul
mov
mov
jno
xchg
jae
lcall
xor
and
popl
jmp
fldenv
pop
pop
fstps
pusha
lret
adc
nop
inc
jb
jl
mov
mov
test
sub
cld
jecxz
mov
push
popa
mov
ds
cmp
mov
test
push
pop
jbe
inc
mov
or
lahf
ss
pop
jle
cmp
int
mov
pop
call
ds
test
xchg
jb
rclb
pop
mov
dec
test
xchg
inc
test
push
mov
adc
and
jl
mov
dec
mov
aas
xchg
icebp
fidivs
bound
scas
rclb
mov
pop
add
mov
sbb
mov
ja
popf
mov
cmpsl
push
mov
sti
xor
imul
std
and
lcall
loop
mov
sysret
sub
test
or
xchg
sbb
push
icebp
std
enter
pop
mov
adc
sahf
shr
repnz
ds
mov
sbb
xlat
cltd
jp
dec
cmp
adc
test
lcall
pop
jl
in
es
push
test
leave
cmp
sahf
adcb
inc
addr16
enter
xorb
mov
ja
xchg
sub
push
fwait
jmp
push
in
imul
pushf
into
jp
adc
dec
mov
decl
pop
and
inc
das
addr16
movsb
addr16
add
xor
push
imul
repnz
jg
jns
xchg
mov
enter
mov
ret
call
mov
rorl
jp
jb
ljmp
push
test
fldt
das
lods
fwait
sub
jg
das
xchg
out
shrb
adc
rcrl
cli
adc
test
loopne
xchg
sbb
pop
cmp
movsl
cmpsb
imul
in
jp
pop
mov
pop
mul
outsl
add
fsubrp
ja
inc
jl
outsl
xor
loopne
arpl
mov
ret
into
fdivrl
xchg
test
fcoml
push
push
push
add
dec
cwtl
aam
jns
shlb
pusha
popa
mov
dec
jns
nop
stos
cmp
sbb
mov
sbb
aas
lahf
shll
sarl
test
in
push
bound
push
lds
mov
mov
pop
and
pop
out
inc
outsb
ja
int
sub
sti
or
add
sbb
push
ds
fptan
jmp
loop
sahf
sub
ja
sbb
cmp
iret
dec
sbb
jno
sub
sub
inc
mov
pop
lods
and
and
dec
jno
inc
mov
cmp
enter
lret
div
inc
cmp
test
test
and
cmp
ja
mov
add
cs
push
pop
push
adc
adc
jmp
xchg
pop
xchg
mov
cmpsl
hlt
int
in
sub
insb
inc
sub
mov
xchg
out
aam
pop
cld
dec
adc
nop
adc
dec
cmpsl
cld
mov
fwait
xor
sub
add
test
lods
push
mov
pop
mov
js
cmp
pop
xchg
mov
int
aam
mulb
ja
sub
adc
mov
outsb
jns
push
stc
cmpsb
push
movsb
cmpsl
pushf
nop
xchg
imul
imul
sub
mov
lcall
jge
lds
imul
inc
ror
mov
loop,pt
lods
iret
mov
aam
ret
and
icebp
push
add
enter
jg
mov
mov
dec
fs
mov
sbb
adc
ja
cmp
push
outsl
incb
cmpsb
test
pop
sub
pop
int
outsb
lret
xor
push
movntq
out
enter
jno
jns
dec
or
ja
ljmp
inc
out
stos
inc
stc
sub
shr
cmp
pop
nop
sbb
inc
int3
jmp
add
sub
jns
lods
and
mov
out
fldt
fidivrs
das
xchg
cmpsb
sbb
cmp
mov
ljmp
sub
xor
push
mov
adc
sbb
jo
pop
push
push
cmp
jno
xlat
mov
lahf
mov
xchg
loope
clc
ret
jp
imul
and
iret
jg
jnp
xor
and
cpuid
pop
loope
fldl
repz
out
mov
repnz
or
jb
iret
ja
int
cmp
fmuls
lret
ss
pop
mov
mov
cli
ficoml
jo
adc
mov
xchg
pop
pusha
rcll
cli
xchg
fadd
daa
xor
cmpsl
stos
sub
mov
movsl
sbbl
or
movsb
movsl
fisttpll
leave
in
jp
sbb
jno
xchg
cmc
xchg
sub
lods
fnstenv
jle
jae
mov
mov
loop
movsl
sub
sahf
mov
mov
jo
sbb
or
aad
pop
es
out
bound
scas
inc
movsl
or
mov
pushf
push
stos
out
movsl
in
ja
mov
adc
push
test
or
leave
shrb
mov
jg
and
sub
lahf
add
dec
neg
lfs
pop
jbe
xchg
aaa
jl
loop
ss
ds
adcb
push
dec
mov
and
fs
jne
mov
repnz
sti
iret
sub
insl
push
out
lcall
mov
xchg
fsts
js
mov
adc
jp
add
xchg
jne
and
or
or
adc
inc
pop
cld
push
mov
test
aaa
jbe
mov
pushf
jmp
adc
lret
xor
pop
out
push
push
xchg
movl
daa
inc
jecxz
lahf
jbe
pushf
lods
and
sti
dec
fisttps
jmp
arpl
inc
loope
in
or
sahf
jbe
mov
repz
sahf
jae
or
sub
pop
jnp
insb
jo
mov
hlt
stos
fbld
lret
icebp
add
movsl
outsl
mov
push
popf
jns
mov
mov
leave
and
xchg
inc
into
fisubrs
or
xlat
add
push
sbbl
inc
gs
ret
dec
loope
add
mov
push
ss
insb
mov
sbb
ret
int3
and
hlt
mov
data16
xlat
mov
data16
fwait
jne
or
add
jne
xor
test
push
aaa
sahf
push
into
xor
adc
pop
out
sub
out
aad
xor
ljmp
jae
add
or
or
or
mov
repz
aaa
in
popa
xor
xor
sbb
ss
push
cmpsb
sbb
popf
pusha
mov
jl
shlb
mov
mov
mov
jno
mov
and
rclb
leave
shlb
lcall
inc
xchg
jnp
lret
sub
fildll
fadds
xor
rolb
stos
mov
popf
or
loop
cmp
inc
mov
xchg
shr
mov
lea
push
outsb
sbb
test
inc
xchg
int3
out
fisttpll
xchg
xchg
adc
mov
mov
or
mov
cltd
loope
xor
sarl
fstl
js
hlt
aam
mov
mov
mov
in
dec
pop
cmc
adc
xchg
sub
scas
loope
insb
int3
jbe
jecxz
ds
mov
repnz
lds
pushf
jmp
push
gs
dec
xchg
mov
mov
iret
out
subl
add
out
jno
lods
test
mov
test
mov
mov
stc
push
mov
aaa
mov
xchg
mov
sti
mov
mov
sub
push
cmpl
test
test
sub
aas
push
mov
mov
xor
out
fistps
sub
push
dec
sbb
popf
xor
je
dec
test
mov
or
pop
jecxz
outsl
xchg
pop
mov
stos
fldenv
test
jg
cmp
movsb
mov
lods
idivl
lcall
ss
addr16
pop
push
subl
nop
sub
mov
daa
adc
mov
xchg
loope
push
lods
sub
push
das
jo
lahf
call
adc
add
cmp
shll
sbb
or
adc
stc
in
or
add
jbe
mov
add
fcmovu
adc
por
pop
int
loope
cmpsl
inc
and
cmp
xor
stc
or
jns
jno
test
lock
sub
sbb
repz
mov
xchg
sti
jecxz
add
fdivrs
outsl
mov
sbb
and
mov
dec
cs
sub
mov
adc
dec
and
and
dec
jmp
icebp
leave
cld
leave
or
fistpl
bnd
inc
jb
and
pop
inc
sbb
and
mov
pop
adc
rcrl
pushf
add
ljmp
in
mov
cwtl
mov
leave
inc
push
dec
jp
aas
xchg
nop
out
sahf
dec
pop
orl
test
inc
lods
mov
out
jb
push
mov
dec
enter
movsb
loope
icebp
cmc
mov
adc
pop
xchg
idivb
in
lcall
xchg
out
mov
xchg
dec
xchg
je
stos
mov
mov
xchg
pop
jnp
jne
addb
aaa
pop
cmc
adc
ss
pop
or
mov
xchg
hlt
les
dec
dec
enter
and
mov
dec
inc
push
fsubs
fcoms
fcoml
sub
push
loopne
fisubs
mov
iret
xlat
cld
mov
push
lock
aas
add
xchg
xchg
xchg
lock
inc
movsl
addr16
pop
inc
test
clc
dec
pop
inc
lock
daa
nop
jp
add
mov
xchg
xor
xlat
les
push
mov
mov
push
scas
movsl
in
push
sbb
mov
divb
and
xchg
in
mov
pop
mov
add
ljmp
push
repz
sub
mov
cmpsl
push
call
imul
lods
jecxz
xchg
nop
jae
mov
push
or
adc
mov
out
jno
movsb
push
push
loopne
sub
jnp
movsb
aad
aas
js
inc
das
fildll
sbb
jge
jmp
scas
push
outsb
mull
jno
stc
xchg
add
pop
xorl
pop
cmc
mov
pop
push
aaa
aaa
popa
adc
sti
mov
xchg
roll
scas
scas
cli
stos
push
imul
stos
xchg
outsb
mov
push
cmp
lock
cmp
mov
std
mov
hlt
xchg
out
fistl
push
mov
out
push
cmpsl
jne
add
addb
push
push
push
ljmp
cli
call
cwtl
fcmovnb
cli
lcall
fidivs
aad
fldl2t
mov
ds
sbb
fcompl
and
add
fdivs
sub
adc
cmp
pop
stos
jg
sub
popa
stc
mov
mov
and
pop
sarb
out
iret
cmpsb
mov
mov
add
add
add
outsl
inc
out
cwtl
fcompl
shll
xor
pop
push
fs
xchg
and
xorb
and
sub
outsb
mov
mov
ja
stos
orl
lods
cmpsb
test
aaa
or
repz
or
sub
ror
daa
xor
jg
or
or
sahf
es
cmp
sbb
mov
cs
fbld
mov
add
fcmovnb
daa
xor
jb
sub
das
fimuls
fdiv
or
push
hlt
andl
aad
and
movsl
fnstsw
xor
into
outsb
ficompl
aas
in
movsb
lods
popf
adc
add
jmp
xor
push
rcll
loopne
cmp
sbb
shrb
dec
cmpsb
adc
xchg
xchg
in
xlat
mov
ret
gs
lret
std
inc
jnp
hlt
daa
inc
imul
pop
cmp
mov
stos
mov
dec
in
pop
fwait
and
mov
fistl
in
ja,pt
jl
pop
gs
push
jmp
pop
push
mov
sub
sub
shlb
push
mov
pop
push
and
insb
xchg
xchg
and
in
jp
cmpsl
jo
aaa
hlt
or
pop
daa
inc
or
lock
mov
xor
fisubl
dec
lea
iret
jno
lds
sub
inc
repnz
lea
mov
in
aad
xorb
jae
mov
jnp
sbb
movsl
inc
xchg
loop
and
test
pop
inc
aaa
mov
mov
mov
stos
hlt
push
mov
push
insb
inc
mov
sub
out
push
sbb
lds
dec
ljmp
and
push
fsubrs
pop
lds
or
sub
mov
push
fsubr
fisubs
inc
jp
lahf
lods
xor
iret
xchg
mov
inc
add
nop
xchg
decl
jne
fildll
mov
ss
cmp
jecxz
in
add
push
cwtl
push
push
push
test
popa
fidivrl
mov
inc
test
in
mov
mov
mov
and
cltd
outsl
cli
sbb
pusha
cmp
inc
imul
outsb
adc
out
xchg
punpckldq
fstpt
testb
add
xchg
ja
outsb
mov
ja
cwtl
rcrb
sub
loopne
inc
dec
jp
push
rorb
mov
add
das
shrb
aaa
add
movb
xchg
jg
mov
sub
sub
xchg
jno
fs
mov
es
adc
repz
cs
cwtl
in
add
insb
int3
js
pop
cmp
push
orl
inc
push
out
insl
fsubp
es
mov
fs
imul
pop
push
popf
into
call
xor
shrl
push
jmp
hlt
jns
shlb
jae
xor
outsl
xor
fisubrs
lret
call
sub
rcrb
jb
test
mov
inc
ds
in
sbb
movsb
add
sar
pop
mov
jnp
jge
jge
fidivl
mov
and
sub
adc
sbb
scas
jmp
push
mov
in
xchg
into
jo
xchg
lods
popa
mov
js
add
loop
and
loop
sbb
hlt
aad
in
mov
xchg
adc
adc
outsl
xlat
push
lret
inc
les
loopne
cmp
adc
call
js
mov
push
ret
loopne
sahf
mov
sub
repnz
repz
or
or
test
sbb
pop
lcall
add
arpl
pushf
test
add
js
mov
aam
lds
aam
scas
imul
enter
and
aaa
jge
cmp
mov
les
lret
es
sbb
mov
xchg
cmc
add
push
mov
cmp
mov
daa
into
add
ja
jmp
sub
or
stc
popa
mov
cmp
add
fsts
cmp
test
dec
jecxz
lock
pushf
ficoms
arpl
out
ret
shll
pop
mov
and
inc
nop
sahf
aas
mov
pop
adc
jp
movsb
xchg
or
jle
xchg
arpl
data16
pop
icebp
push
ja
mov
dec
dec
mov
pop
es
repz
xchg
mov
roll
mov
mov
push
data16
and
andl
divl
pushf
movsl
test
cld
and
xor
xor
rclb
roll
dec
ja
lret
scas
outsb
dec
pop
flds
xor
jb
cmc
out
sarb
repnz
push
pop
and
mov
inc
push
iret
ret
pop
bound
pushf
add
pop
push
adc
push
repz
rolb
xchg
scas
mov
inc
pop
out
ljmp
mov
jo
or
add
xchg
xchg
mov
out
sbb
cmpsb
movsl
jne
xor
flds
pop
fisttpl
xor
sub
das
in
mov
fdivrl
jmp
jo
in
pushl
mov
xlat
xchg
mov
pop
add
inc
inc
or
mov
outsl
sbb
cmp
jecxz
pop
or
mov
mov
dec
add
test
xor
jo
inc
cmp
add
sub
out
adc
andl
push
xchg
dec
rcrl
xchg
insb
fcomps
dec
movsb
into
mov
xchg
cs
dec
cltd
cmp
mov
pop
push
leave
nopl
mov
push
mov
dec
cmp
cmp
push
mov
iret
dec
xchg
and
dec
paddusb
pop
je
lock
sahf
insb
mov
incl
jge
push
sbb
out
fisttps
xchg
stc
sub
movsl
or
push
lea
push
mov
out
mov
fisubrl
pop
cmpsl
sbb
int3
fldenv
fmulp
jne
lret
push
push
dec
sub
jno
fs
xor
test
push
into
pushf
lret
mov
insl
out
scas
shlb
dec
cmp
mov
mov
lea
push
jg
lcall
decb
inc
rcll
jp
pop
dec
pop
lods
jae
push
jg
add
stc
ficomps
push
dec
stc
push
mov
add
inc
dec
leave
ret
xchg
pop
lods
addl
inc
ds
dec
xchg
js
or
add
add
int
lahf
mov
loop
xchg
or
das
add
add
stos
mov
imul
xor
xchg
movsb
and
test
nop
mov
xlat
into
ret
cwtl
xor
dec
mov
push
repnz
daa
xchg
jp
xchg
mull
jp
int
adc
mov
mov
dec
jb
jle
and
xchg
dec
pushf
adc
es
lret
adc
in
iret
mov
dec
ret
xor
shr
pop
fwait
push
or
mov
cli
leave
cmp
aaa
pop
lods
es
out
jns
xchg
out
mov
cmp
shl
nop
cmp
xchg
ret
adc
mov
cli
xor
dec
int3
mov
addl
xor
pushf
fcmovb
mov
sbb
inc
pop
ljmp
push
mov
xor
add
fwait
jae
test
mov
inc
lds
popa
cmp
in
je
mov
jne
xor
cmp
adc
jae
lcall
in
pop
lea
mov
sub
dec
aad
adc
sub
push
push
jl
lds
les
mov
push
cs
xchg
mov
mov
pop
scas
movsb
mov
repnz
stc
mov
push
jnp
xchg
mov
lahf
mov
addb
or
popf
fbld
loope
rcrl
xchg
inc
cmp
mov
cmpsb
sub
nop
mov
test
notl
imul
sub
in
fisttpl
popa
cmp
mov
mov
je
pop
out
pop
and
cmp
mov
mov
add
leave
incl
jae
push
xchg
data16
aas
or
xorb
sbb
ss
ds
cmp
scas
leave
xor
mov
sbb
insl
data16
aad
loopne
daa
adc
and
rcll
push
scas
push
es
sbb
xor
adc
xchg
xor
xor
xchg
mov
mov
enter
mov
xor
sub
mov
ja
sbb
mov
les
or
mov
sti
aas
popf
ffree
xor
sbb
iret
sub
dec
adc
jns
sahf
dec
addl
shlb
sub
in
dec
sbbb
sbb
outsl
mov
jmp
mov
sbb
push
add
mov
cmp
repz
push
dec
loopne
mull
popfw
xor
push
xor
cmp
lock
pop
mov
jo
outsl
inc
aam
das
movsb
dec
test
imul
adc
bound
inc
jmp
push
lahf
inc
lea
ret
data16
sbb
or
setbe
ljmp
pushf
imulb
lahf
xchg
jno
mov
in
inc
vmaxps
rcl
and
mov
pop
into
inc
fsts
xchg
cmp
lea
fmul
push
lds
xchg
mov
cmp
push
lahf
mov
lods
sub
cmp
sbb
stos
pusha
out
pop
je
cmp
jbe
jns
daa
fwait
add
and
cmpsl
mov
xchg
inc
sub
xor
sub
inc
adc
add
xchg
pop
push
pop
sbb
es
mov
inc
mov
and
addl
out
ja
push
clc
jmp
imull
scas
clc
push
cmp
xchg
dec
xor
or
adc
ret
jl
fdivs
ss
pop
scas
addl
sahf
popa
adc
or
add
into
sbb
mov
mov
add
sub
rol
pop
cmp
push
or
xor
push
or
cld
sti
fstps
or
jbe
mov
jns
loopne
push
test
pusha
push
lds
rclb
mov
out
sbb
jmp
inc
sti
loopne
xchg
push
sub
inc
mov
push
pop
lcall
cs
shll
jmp
xor
jg
sbb
xorl
pop
lea
mov
mov
inc
out
cmpsl
mov
jp
pop
jl
mov
cli
bound
aas
xchg
add
mov
cmp
rclb
test
bnd
sti
xchg
mov
sbb
push
shl
mov
loop
lea
aas
in
dec
int
sbb
push
rorl
out
testl
popa
add
xchg
pop
fistl
gs
mov
in
xchg
sub
or
xchg
aaa
xchg
mov
pop
pop
and
mov
pop
ret
bound
negl
shlb
mov
int3
icebp
adc
adc
mov
and
mov
int
call
push
stos
pop
inc
dec
mov
test
cmc
shl
adc
rcl
mov
hlt
sbb
ljmp
iret
pop
inc
lock
jmp
mov
lods
repz
mov
xor
sahf
enter
mov
push
fwait
shrl
idivb
mov
pop
mov
mov
cmp
cmp
adc
add
xor
pop
or
ret
cltd
dec
outsb
push
cld
mov
popa
push
leave
push
cltd
jle
push
inc
inc
mov
add
jmp
pushf
jp
and
pop
ret
dec
imul
addl
pop
dec
repnz
sub
jg
mov
popf
clc
mov
ja
ret
cld
lea
hlt
push
lret
ss
and
cmp
fs
pop
cmp
xchg
clc
push
cld
into
das
int
movaps
sub
sub
aad
scas
jecxz
xchg
or
movsl
outsb
inc
push
out
adc
xchg
add
gs
sub
test
daa
or
lahf
jno
mov
and
dec
scas
pop
imul
xor
in
lret
or
scas
fildll
add
lahf
or
mov
adc
clc
lcall
loop
movsb
imul
mov
or
lds
jbe
clc
out
mov
lods
in
add
sbb
scas
and
pop
or
xchg
fsts
inc
jae,pn
into
sub
in
mov
jg
scas
ja
sub
add
xchg
repz
push
jnp
repnz
aam
int3
nop
sbbb
cld
add
scas
fcom
mov
sbbb
cwtl
je
mov
sbb
fsubr
push
cmp
lret
fnsave
jae
mov
pushf
push
xchg
pop
popa
fdivl
in
fcomip
push
jl
cli
sub
mov
push
in
add
fstpt
sub
ret
sbb
xor
aad
sub
clc
sarl
ret
lret
jecxz
mov
popa
pop
xor
jmp
adc
popf
out
shll
adc
add
dec
pushf
mov
std
rcl
jmp
arpl
bnd
mov
filds
enter
imul
ljmp
add
mov
adc
jge
stos
add
hlt
inc
jbe
shll
jbe
fmull
cmp
pop
scas
and
push
loope
dec
jge
std
mov
adc
fwait
or
in
dec
ljmp
push
jge
jge
lods
xchg
scas
dec
pop
add
subl
lret
sahf
adc
fadds
add
or
rcpps
push
popf
mov
in
lret
fisttpll
and
daa
cmp
icebp
js
and
pusha
fldcw
aaa
sbb
les
aas
or
inc
or
mov
sub
fidivrl
scas
jns
dec
inc
stos
mov
pop
cmp
nop
push
popa
inc
push
scas
mov
and
dec
les
push
push
ljmp
movsb
mov
xchg
jmp
push
test
xor
lock
rcrb
xchg
test
rorb
push
xor
jl
mov
mov
mov
push
mov
cli
cld
pop
incb
add
fidivrl
das
ror
out
ds
int
xrelease
popa
mov
and
jmp
sbb
xchg
push
pop
xchg
cmc
in
stc
push
les
mov
imul
push
jle
pop
push
and
iret
mov
in
clc
fildll
aam
sub
gs
mov
fstpl
inc
test
and
push
mov
sbb
mov
add
sub
cmp
frstor
mov
pop
sbb
mov
cmp
sub
sbb
das
or
outsb
xor
and
std
jnp
sbb
mov
cmp
rolb
cmp
je
mov
jmp
pop
or
xchg
fs
mov
das
pop
xchg
dec
out
fadd
test
jns
js
stos
das
rcll
xchg
mov
sbb
and
int3
scas
adc
or
aad
add
sbb
adcl
dec
adcb
xor
ja
push
xor
aaa
jo
mov
jge
jns
pop
jge
dec
in
add
arpl
leave
mov
loop
loopne
filds
pop
ret
adc
sub
loope
icebp
movsb
lds
mov
push
mov
insb
pop
push
fs
std
loope
nop
dec
jno
aaa
sub
mov
lock
sbb
pop
rcrb
jae
mov
fsubrp
insb
cmp
sbb
cmpsw
sbb
xchg
cmpsb
or
dec
mov
addr16
xchg
or
cmc
adcl
xchg
xor
mov
mov
movsb
sbb
cli
out
and
xlat
mov
jge
hlt
mov
loope
pop
adc
jge
mov
xchg
aad
in
movsl
clc
int3
push
pop
mov
ret
xchg
sbb
fidivrs
fdivrp
nop
dec
adc
jg
adc
sub
mov
out
pop
pop
in
js
sub
fcomi
out
test
pop
aas
iret
lods
jns
mov
push
mov
pop
xor
sti
or
xchg
dec
pop
js
mov
mov
and
out
adc
pusha
bound
push
and
jp
into
pop
pusha
mov
cmp
sbb
imul
pusha
fcompl
in
les
push
mov
jo
pusha
xchg
ja
pop
push
es
mov
outsb
enter
cltd
adc
inc
shlb
rorl
arpl
jg
inc
stos
add
stos
sti
add
sti
cmpsb
dec
mov
jno
pop
ljmp
ds
int3
insl
aam
pop
nop
imulb
mov
shrl
dec
jmp
ret
dec
mov
ror
xchg
in
jg
sbb
sahf
movsb
ja
nop
roll
xor
pop
les
dec
push
push
scas
out
loope
mov
and
movsl
inc
nop
imul
test
inc
fucom
fimuls
fsubs
sub
mov
fimuls
mov
and
enter
in
pop
xor
out
fsubr
sbb
arpl
push
jnp
sbb
rcr
push
push
outsl
cmpsb
fwait
and
mov
push
sarl
sahf
jmp
lret
adc
mov
pop
xlat
ds
push
lea
mov
sub
jae
inc
and
sbb
fistl
arpl
repnz
push
scas
out
pushf
xor
lahf
sbb
dec
adc
cld
pop
clc
mov
mov
pushf
and
jns
iret
iret
dec
or
in
fwait
js
out
enter
jmp
push
and
aaa
lcall
mov
inc
lret
movsl
daa
ljmp
popa
int
push
in
push
mov
dec
or
iret
in
pop
cld
popa
add
add
adc
pop
xchg
inc
adc
loop
inc
or
sbb
mov
fsubrl
imul
in
aas
xchg
daa
pop
pop
push
sbbl
rolb
mov
into
jo
pop
pop
dec
mov
into
inc
dec
rcrb
push
mov
stos
test
sahf
xchg
leave
jns
jp
int3
or
or
jne
add
enter
test
icebp
xchg
pop
sub
aad
jle
rcrb
and
adc
dec
pop
pop
cmpsl
aam
dec
std
je
sub
aam
fs
ret
mov
jnp
fstpt
dec
pop
loopne
ljmp
into
cwtl
std
lods
outsb
jge
dec
std
and
sbb
dec
mov
pop
pop
scas
addr16
aam
inc
pop
adc
jnp
cmp
js
xchg
into
xor
pop
clc
lahf
mov
lea
pop
mov
xor
push
push
aam
jbe
mov
cltd
mov
mov
test
leave
sti
in
outsl
aaa
mov
orb
mov
xor
js
lcall
lods
movsb
inc
incl
out
push
ret
aaa
push
pop
fisubrl
pusha
push
jg
lock
cmp
adc
lret
in
adc
xchg
and
enter
out
sub
pop
out
add
mov
shrl
or
sub
enter
rclb
movl
mov
sub
mov
sti
pop
aas
orb
sbb
scas
cmpl
mov
movsb
fdivrp
mov
aaa
cmp
xor
adc
rcr
xor
xor
mov
inc
xor
or
lds
and
mov
mov
mov
pusha
iret
push
xor
pop
movsl
int
cmpsb
inc
hlt
outsb
cmp
out
cld
out
mov
cmp
dec
aaa
popl
adc
stos
dec
filds
fistpl
fildll
or
cmp
stos
loope
push
xor
dec
dec
cmp
aad
pop
and
dec
das
rorl
bound
loope
mov
push
pop
and
divb
xchg
fstpt
inc
lret
dec
icebp
jbe
mov
cmp
stos
loope
pop
cld
mov
notl
lret
imull
xchg
test
fwait
movsb
das
jecxz
xchg
mov
cmpsl
jle
push
outsb
and
shll
decl
jae
ja
stos
loope
ror
and
lds
mov
repnz
sub
ljmp
xor
mov
pop
jmp
mov
test
sub
sbb
cwtl
rcll
popf
ret
pushf
int
adc
mov
shrl
imul
sahf
in
jmp
arpl
fstpl
mov
orb
je
add
ret
stos
jno
jns
insl
arpl
jl
cs
mov
push
xchg
scas
fbld
movb
cwtl
mov
test
popa
outsl
leave
xchg
leave
inc
jno
add
dec
and
mov
sahf
sub
scas
xchg
sub
mov
mov
mov
imul
pusha
repz
push
sub
in
mov
jns
lock
shlb
add
hlt
xchg
push
mov
neg
dec
add
test
adc
in
or
daa
jno
fisttps
jge
cmp
pushf
dec
iret
and
popa
movsb
cltd
rcrb
insb
enter
push
packuswb
jbe
cltd
jno
jnp
fstl
fwait
lods
popa
je
sbb
dec
cli
pop
dec
bound
jmp
sbb
mov
add
out
andb
dec
add
sub
movsb
mov
add
sbb
pop
push
lcall
aad
int3
add
loop
adcb
lcall
shlb
add
testl
and
jno
dec
test
test
or
jle
push
xor
lock
inc
dec
jle
inc
shll
sbb
mov
cmpsb
lods
or
loopne
sbb
mov
rcrl
or
pop
lcall
jnp
std
fdivp
adc
dec
fistpl
or
mov
mov
xlat
jg
ljmp
mov
outsb
add
repnz
mov
or
adc
inc
add
jns
push
cwtl
mov
xor
outsb
cli
cs
jb
xchg
add
ljmp
ret
xor
mov
iret
xchg
arpl
out
fidivrs
jae
jbe
inc
push
idivl
and
mov
adc
cs
imul
imul
and
sub
push
mov
jbe
sbb
mov
sti
test
fisttps
lods
clc
xchg
dec
icebp
adc
cmp
mov
call
insb
test
out
xor
inc
pusha
mov
cmpl
ficomps
aam
xchg
fcoml
jmp
sub
movsl
xchg
insl
mov
sub
push
out
sti
jle
ret
test
addr16
arpl
outsb
sbb
cmpsl
pop
inc
shrl
mov
cmpsl
jge
and
fdivr
pushf
or
xchg
leave
in
pop
jns
data16
mov
jb
lods
iret
repz
mov
or
int
loop
fwait
aam
or
or
cli
bound
das
push
pusha
xchg
xchg
mov
gs
mov
adc
pop
fdivl
loopne
jecxz
fwait
pop
loopne
gs
xlat
shll
cmpsl
gs
mov
sub
ja
mov
jb
xchg
xchg
pop
sub
jnp
ret
scas
arpl
loopne
lret
xor
in
adc
push
push
push
pop
test
push
divb
addl
xchg
xchg
aaa
dec
dec
jge
and
pop
mov
pop
pop
jge
push
lret
enter
pop
mov
call
mov
cmp
iret
lret
add
jle
mov
pop
sahf
rorl
jne
xchg
andb
cwtl
xlat
fs
fwait
mov
sbb
push
adc
pushf
push
divb
lret
bound
push
repnz
std
cmp
aas
insl
mov
leave
call
int3
insb
xlat
and
into
or
aam
jnp
movsb
in
push
mov
or
push
mov
fmull
pop
sbb
cmp
leave
mov
sbb
sub
jns
jl
inc
ljmp
inc
jle
out
sbb
mov
or
clc
lret
lods
dec
dec
insb
clc
ret
sbb
xor
ss
add
and
xchg
ret
cs
out
adc
test
outsl
mov
icebp
and
push
es
add
inc
stos
pop
add
push
mov
dec
jecxz
mov
pop
adc
dec
push
xor
xchg
dec
or
rcl
or
mov
xchg
adc
sbb
cmpsl
inc
jae
rcrb
mov
xchg
xor
push
or
rorb
adc
fldenv
xor
jne
jae
cmp
mov
ljmp
test
or
xchg
mov
sbb
and
lods
adc
lret
mov
rcrb
mov
xchg
mov
loopne
insl
les
sub
or
ficompl
and
jecxz
or
insb
push
push
gs
mov
or
xor
lds
fidivrl
stos
fstpl
adc
jae
jle
jae
out
lea
push
lcall
movsb
loope
ret
inc
jge
sub
dec
hlt
jge
jmp
fldpi
pop
xlat
sub
mov
mov
aaa
push
shrb
les
jp
movsb
iret
xor
jbe
inc
adc
or
leave
mov
jne
sub
out
xchg
push
xchg
shll
negl
mov
add
mov
movsl
daa
sahf
and
rcll
fstpt
mov
fdivrl
sub
sbb
add
sbb
inc
mov
mov
cli
xchg
nop
mov
jno
mov
add
jmp
clc
mov
or
shr
test
clc
jmp
push
repz
fwait
push
in
dec
mov
xlat
fwait
jae
fwait
clc
xchg
inc
mov
jp
iret
or
cli
jnp
mov
lahf
mov
xor
bound
mov
lret
loope
lock
into
int3
sbb
or
add
popa
in
inc
es
jnp
ljmp
imul
adc
mov
push
loope
xor
lea
jbe
gs
push
mov
in
call
notl
sbb
cmc
imul
es
inc
mov
push
inc
push
xchg
lock
mov
lea
movsb
pop
addr16
int3
push
sub
sub
mov
movsl
enter
xchg
loope
push
icebp
jmp
out
mov
cmp
and
orl
pop
and
or
cmp
stos
xor
xlat
push
std
push
mov
and
or
test
loopne
clc
mov
cmp
mov
mov
rcrb
adc
das
stos
insl
popa
dec
or
lret
jp
fistl
mov
add
pop
aam
mov
or
xor
test
mov
in
loop
cmp
test
out
jp
xor
adc
push
sbb
mov
mov
add
movsl
pushf
jmp
pop
cmp
movsl
mov
iret
imul
out
in
xor
adc
cmp
cmp
add
pop
sbb
ljmp
ret
pop
jmp
jp
mov
jo
ss
pop
in
or
int3
icebp
dec
das
push
adc
push
or
popf
aaa
sub
fstps
sub
xchg
push
test
out
repz
inc
repz
movsl
inc
xchg
push
lcall
mov
out
mov
je
stos
cmp
dec
scas
mov
mov
test
pop
or
cwtl
add
outsb
mov
in
hlt
add
add
or
add
idiv
rcrl
inc
mov
jl
jmp
add
aas
cli
imul
call
pop
xchg
out
push
push
mov
add
sbb
push
fstpt
pop
fisttpll
lea
push
cmc
popf
pop
dec
test
mov
push
xor
xchg
mov
pop
jmp
arpl
mov
lahf
movsb
test
ja
lock
cwtl
repz
int3
lcall
iret
jae
xchg
inc
iret
push
incl
sbb
xor
dec
sub
xor
test
or
mov
ja
fucom
cltd
inc
pop
jo
popf
mov
push
lret
pop
add
subb
xor
push
mov
fadds
mov
cltd
mov
sbb
mov
pop
mov
out
sub
pop
pop
daa
jns
aad
test
clc
std
addl
mov
mulb
mov
popf
js
sub
test
insb
jo
mov
push
call
adc
add
sub
sbb
jl
cmpsl
test
jge
sub
sub
test
adcb
xor
dec
aam
lcall
jo
popa
out
push
add
push
ror
pop
xchg
jns
sbb
clc
repz
mov
sarl
int3
or
pushw
jmp
jg
repnz
cmpsb
sbb
ficompl
popa
fld
and
mov
arpl
out
and
mov
push
xchg
mov
or
push
negb
mov
and
adc
mov
je
mov
or
or
sbb
leave
les
inc
push
jl
ja
in
fcoml
pcmpeqb
adcb
and
int3
nop
and
jmp
mov
add
jle
repz
pop
adc
imul
jns
insb
pop
gs
insl
pop
test
pop
sbb
out
sub
mul
and
mov
outsb
jle
mov
mov
les
and
mov
leave
pop
or
cli
push
push
cmp
mov
andl
mov
jne
mov
nop
adc
loopne
ret
xacquire
cwtl
adc
push
cmp
or
hlt
add
aas
xor
das
loope
sbb
or
xor
jge
js
mov
lret
adc
push
lods
dec
and
fldl
mov
mov
in
sbb
pop
push
sub
pop
insb
stos
jo
sub
imul
pop
mov
push
cmpsl
cmp
push
arpl
cmp
insb
fsts
push
add
and
ja
adc
push
inc
xchg
push
adc
xchg
jae
xchg
lret
cmp
call
jge
stos
inc
lret
inc
dec
mov
in
sbb
cmp
mov
or
add
scas
push
and
hlt
ja
mov
neg
jae
lock
fdivrs
adc
idivb
ds
dec
inc
pusha
add
pop
jnp
cmp
add
add
lahf
and
mov
lcall
aam
jl
movsl
mov
jl
test
pop
sbbl
mov
scas
inc
mov
or
dec
mov
xor
popa
mov
mov
and
adc
lret
and
dec
sbb
cmp
fucomi
mov
lds
test
dec
repnz
div
jl
push
test
jp
addr16
insb
js
pushf
inc
rorb
shrb
aam
js
fs
or
fdivrl
inc
bound
pop
mov
test
mulb
mov
mov
scas
lds
dec
ret
or
mov
cmp
insb
nop
and
sbb
mov
xlat
and
xchg
out
cmp
nop
dec
hlt
add
sub
jae
mov
pusha
pop
decl
cmpsb
into
adc
jnp
cs
or
jg
mov
mov
xor
in
xor
inc
lcall
mov
sbb
repnz
bnd
sbb
xchg
cmp
out
add
or
jl
aad
xchg
jb
in
mov
or
rcl
pop
std
push
fistpll
sahf
loopne
cmp
jl
sub
push
aam
lock
jbe
jecxz
in
xor
stc
mov
inc
xor
cmpl
cld
push
sbb
movsl
leave
push
push
outsl
fisttpll
jle
sub
lret
fdivrs
imul
add
mov
lods
mov
divb
push
dec
mov
xchg
pop
push
cmc
xor
bound
sub
cwtl
fcompl
xchg
mov
jmp
ficoml
xlat
add
arpl
mov
adc
push
add
mov
xadd
cmp
mov
mov
daa
xchg
iret
addl
xor
aad
popf
movl
shl
cmp
add
pop
or
mov
mov
gs
mov
jnp
ja
jl
mull
or
icebp
pushf
in
sarl
sbb
xor
cmp
inc
rcrl
inc
pop
pop
fmul
andb
mov
jmp
xor
fwait
sub
dec
roll
lods
jge
pop
iret
dec
pop
ficompl
decl
sbb
mov
xchg
addr16
insl
inc
adc
fnstcw
push
adc
cli
or
sbb
sub
rclb
dec
jg
stc
outsb
icebp
dec
imul
movd
mov
push
jp
mov
dec
sbb
lock
lods
or
mov
push
jle
push
out
mov
je
add
in
add
inc
mov
mov
pop
jge
xor
cmpsb
lea
pop
xor
cmp
enter
aad
lea
fisttps
rcrl
cmp
mov
xor
or
leave
xchg
inc
inc
iret
jnp
push
outsb
insl
pushl
inc
insb
fcompl
lock
push
icebp
jg
adc
sbb
ret
inc
mov
test
ds
push
lods
lcall
iret
dec
das
pop
sbbl
ret
or
imul
daa
jns
or
das
popa
dec
dec
add
sub
sub
mov
fiaddl
pushf
aaa
and
adc
jae
outsb
repnz
cmp
sub
jbe
into
lock
push
xor
into
dec
fidivrl
cmp
arpl
int
nop
sar
mul
mov
pusha
or
dec
fistpl
cwtl
pop
test
pop
mov
out
dec
aaa
and
sahf
cltd
jg
es
xor
push
js
fiadds
adc
insl
add
cltd
inc
cld
or
dec
clc
sarb
mov
ja
test
test
lret
icebp
sbb
das
fidivl
shrb
or
jbe
fistpl
xor
sub
and
into
mov
nop
jge
xchg
adc
lret
push
mov
decb
xor
jmp
push
xor
xchg
nop
mov
mov
push
mov
and
mov
dec
jmp
dec
rcrl
stc
mov
mov
movsb
mov
sbb
outsl
fwait
mov
hlt
cli
or
push
mov
push
mov
cwtl
lods
imul
test
icebp
sbb
les
cmp
cmp
lea
aaa
pusha
insl
fcomps
inc
push
pop
dec
xchg
stos
pushf
xchg
push
test
inc
mov
bnd
cmp
sub
cli
loopne
test
inc
mov
and
pop
insb
subl
jno
adc
das
shll
bound
popf
sbb
cmp
cmc
nop
stc
jg
lods
stc
ret
mov
mov
mov
fsts
int
out
mov
popa
mov
mov
in
shlb
adc
mov
lods
sbb
pop
leave
hlt
das
xchg
insl
cmp
lcall
cmp
mov
imul
and
ljmp
inc
insb
nop
js
xchg
cmc
cmp
pusha
mov
inc
jmp
stos
jns
fnstenv
jnp
xchg
and
mov
dec
aas
or
repnz
adc
push
in
cmpsl
test
push
ja
into
pop
adc
xchg
xchg
add
in
iret
inc
jecxz
or
jl
cmp
pop
inc
xlat
xor
icebp
sub
jo
jns
movsl
in
fdivl
lret
jnp
jb
clc
pop
mov
sbb
dec
test
arpl
popa
mov
mov
roll
shlb
jl
or
cmp
add
cmp
decb
test
xchg
cltd
sub
jno
jne
cmp
jl
imul
sbb
orl
stc
xor
dec
adc
aam
xchg
xchg
dec
mov
and
dec
into
jge
cmp
jbe
jp
nop
jae
jb
push
jg
add
lods
fisubrs
dec
ds
cmp
inc
andb
aam
push
inc
dec
sub
rclb
mov
cwtl
push
sub
lea
and
add
in
cwtl
inc
inc
push
in
cltd
stc
pop
sub
xlat
pop
mov
fcmovnbe
push
stos
sbb
loope
push
aam
int
aaa
xchg
cmpsl
xor
test
push
jno
push
pop
in
adc
loop
ret
jmp
les
xor
xor
mov
mov
call
test
test
repz
enter
mov
aad
cmp
imul
cmpsl
leave
cld
sbb
and
idivl
outsb
inc
mov
pop
dec
mov
fwait
or
and
sbbl
and
rcrl
mov
push
cmc
test
adc
nop
push
push
dec
fadd
in
scas
adc
dec
ja
mov
aaa
push
cwtl
and
inc
imul
mov
add
jmp
mov
sub
mov
insb
add
jl
nop
push
add
outsb
addr16
daa
bnd
aaa
outsb
in
loop
mov
scas
mov
std
xchg
sar
hlt
push
mov
adc
or
cmpsl
leave
mov
add
es
pop
push
mov
test
int
xchg
stos
dec
es
or
bound
inc
inc
xor
out
dec
stc
ss
dec
out
sub
fwait
jno
data16
mov
lret
ret
dec
fwait
pop
ja
cmp
dec
jle
cmpl
out
int
xchg
xchg
sbb
and
cmpsb
and
cmp
ljmp
pushf
andb
push
ljmp
dec
xor
xor
lods
adc
inc
imul
jle
daa
inc
lock
adc
lods
nop
dec
cmp
pop
mov
cld
jb
mov
xchg
mov
push
arpl
jmp
stos
test
ds
shlb
and
mov
lods
lret
xor
int3
in
pop
jne
lds
stos
data16
shrb
cmp
mov
iret
popa
jl
xorb
pop
jge
aad
popa
insb
pop
andb
data16
gs
idivb
or
ja
mov
pop
sti
inc
pop
fwait
xchg
lock
push
jb
mov
cltd
les
sub
hlt
das
leave
in
sbb
jo
jg
pop
das
pop
push
sbb
lahf
mov
xchg
sahf
adc
adc
out
jmp
mov
mov
mov
aam
jno
scas
aam
inc
dec
pushf
add
jbe
push
aam
jge
aad
xor
clc
inc
dec
mov
out
int
adc
clc
repnz
fwait
mov
andb
sub
aam
fwait
sub
mov
ror
add
mov
mov
scas
sbb
pop
das
sub
adcb
rorb
adcb
add
in
ja
popa
push
out
sbb
shll
adc
adc
push
dec
aad
loope
and
mov
push
pop
dec
pusha
mov
enter
and
sbb
adc
pop
fmul
shr
insb
jnp
mov
add
in
xchg
mov
pop
call
push
mov
sbb
shlb
inc
lods
clc
shll
push
pop
pop
jg
stc
pusha
jbe
push
out
push
dec
xchg
mov
jns
stos
ficompl
mov
in
jns
pop
mov
jb
pushf
aam
test
inc
cmpsb
ret
jl
and
int
mov
lock
daa
mov
es
push
mov
and
sub
addb
stc
orb
inc
or
cltd
call
add
adc
xchg
ret
xchg
push
imul
or
aaa
add
jg
fsubr
decb
adc
lret
lock
adc
adc
inc
mov
push
test
je
lods
jp
popf
pop
clc
movsb
out
pop
ficompl
out
repz
cmc
adc
push
pop
mov
add
sbb
push
xor
stos
cli
adc
inc
cmp
mov
fidivl
movsb
inc
cld
out
pop
push
mov
int3
sti
xchg
stos
xchg
ret
fmuls
or
ss
lahf
adc
jmp
sti
mov
ljmp
cltd
pop
ds
ja
cmpsb
mov
adc
mov
insl
jo
mov
js
and
test
push
mov
mov
sbb
data16
and
ljmp
sbbb
xchg
sub
in
stos
add
movsb
lahf
test
test
fcom
cld
test
sahf
jb
lods
jae
in
mov
mov
stos
bndstx
outsl
dec
jne
pop
dec
fmul
in
mov
xor
ja
loope
aad
sub
jmp
push
lods
icebp
pop
dec
inc
xor
lds
xchg
cltd
cmpsb
inc
pushf
out
mov
js
xorb
lahf
lret
cli
int3
inc
imul
pop
cwtl
fstps
xchg
and
fs
bound
pop
xchg
roll
mov
mulb
or
add
dec
dec
aam
lahf
sbb
inc
mov
std
js
sub
jnp
jmp
push
nop
mov
insl
arpl
cmpsl
loope
and
mov
lods
sbb
push
adc
jg
stc
and
fisttpl
addr16
inc
sub
sbb
adc
pusha
xor
jnp
xchg
dec
je
mov
push
mov
xchg
push
push
clc
andl
cmp
push
ds
fdivrs
pop
jg
cmp
fisubrs
and
pop
xchg
mov
pop
cmpsb
jmp
cmp
aam
jbe
sub
mov
call
out
aad
decb
stos
mov
pop
xlat
sub
xor
mov
sbb
or
xchg
or
sbbl
sbb
leave
mov
imul
out
push
sub
nop
mov
and
pushf
jg
xchg
je
pop
inc
mov
leave
ljmp
out
cs
out
testl
push
fimuls
scas
dec
sbb
leave
sbb
rclb
xchg
inc
adc
out
mov
adc
jo
cmc
pop
inc
cli
out
pop
jb
outsb
inc
mov
rcr
das
popa
cvtdq2ps
cmpl
ljmp
imulb
jo
daa
xor
aad
in
js
push
jl
dec
cmpsb
mov
xchg
inc
mov
xor
in
sbb
xchg
lahf
cmp
dec
pop
mov
faddl
cmp
and
jns
das
sub
ss
insb
jae
test
push
nop
pop
test
aam
daa
mov
add
hlt
call
lcall
into
cmc
loop
dec
mov
hlt
xor
xabort
and
loopne
push
xchg
punpcklbw
filds
in
out
bound
sbb
fisttpll
addr16
sub
js
ficomps
hlt
push
icebp
mov
pushf
std
inc
out
xchg
mov
sti
sbb
cmp
lret
pop
dec
mov
mov
cmpsl
mov
mov
lods
push
repz
cmp
hlt
and
inc
not
jecxz
add
popa
clc
imul
mov
mov
fstps
fidivrl
push
and
testb
int
data16
cltd
mov
jecxz
in
jl
mov
ljmp
ja
adc
loop
push
repz
shrl
ficoms
addr16
push
out
push
stos
jl
fidivl
jae
sbb
xor
push
orl
xchg
out
sub
or
jbe
cs
repnz
push
int3
mov
or
dec
mov
mov
repz
addr16
ss
sub
jae
adc
out
cmc
cmp
fsub
mov
out
scas
or
pop
sub
dec
jne
leave
jbe
push
pop
addl
inc
cmpb
mov
push
adc
sbb
les
div
cmp
cmp
dec
xor
jnp
jmp
add
inc
bound
cmpsb
pop
add
inc
popf
and
jp
int
ja
mov
leave
dec
das
or
or
in
outsl
incb
sbb
mov
pop
pushf
xor
jg
xchg
xchg
lds
ja
inc
scas
cmp
cli
push
push
aam
outsl
xchg
pop
jo
adcl
sbb
add
mov
sbb
test
sub
cltd
testb
push
mov
mov
and
and
sahf
pop
pop
mov
ret
push
mov
pop
mov
jo
push
cmp
shrl
ja
fcoml
push
sbb
sub
es
and
sbb
aad
push
test
jno
pop
jb
dec
in
push
push
cmpsl
push
mov
mul
push
and
sbb
adc
clc
xor
into
rcl
lcall
cmp
adc
add
shrb
or
out
mov
cmpl
mov
in
jmp
int
imul
test
mov
icebp
xor
mov
mulb
orb
pop
push
inc
mov
rclb
lret
repz
addr16
repz
pusha
pop
loop
adc
fucomip
xlat
mov
mov
pop
inc
aaa
js
iret
and
inc
loopne
dec
sbbb
xor
add
popa
jg
dec
mov
inc
popa
lahf
pusha
inc
popf
jge
rorb
fadd
ret
pop
testb
jle
add
scas
push
movsl
sbb
int
popa
cltd
mov
push
cwtl
int
dec
stos
fxtract
or
and
leave
push
pop
xor
out
sbb
sbb
mov
fstpt
insl
mov
push
cmpsb
sbb
jg
stos
mov
dec
fdivs
sbb
push
and
ret
or
add
pop
arpl
and
dec
mov
and
sbb
and
data16
cltd
addr16
int3
sbb
or
push
or
xor
mov
xchg
andl
cmp
sub
addr16
test
inc
xlat
jge
lea
push
mov
jo
out
int3
push
shlb
addr16
sub
mov
xor
pushf
jbe
outsl
jmp
mov
mov
insl
xor
ljmp
and
push
test
mov
mov
push
call
popa
inc
test
lock
mov
jle
stos
xchg
frstor
push
push
clc
and
mov
or
sub
cmc
or
movsb
dec
adc
ds
sub
cs
gs
mov
and
sub
lret
outsb
lods
lret
into
sub
aas
xchg
pop
inc
adc
repz
mov
mov
sub
dec
pop
mov
enter
xlat
mov
sbb
jae
sbb
pop
mov
push
out
mov
aaa
xchg
jmp
ret
dec
popa
dec
xor
inc
insl
lahf
xchg
sub
cmpsb
repz
test
in
mov
ret
fcompl
loop
or
mov
jb
cmp
jnp
adc
mov
je
sub
mov
or
xor
xchg
test
or
jg
push
in
sub
mov
dec
mov
and
sti
pushf
aaa
lahf
and
mov
mov
data16
sub
cmpsl
fidivs
and
fmulp
add
lods
rcl
push
cmp
push
cwtl
cmpb
dec
lcall
sbb
enter
xchg
fcoml
andl
or
movsb
and
mov
jmp
mov
add
inc
pop
nop
scas
cli
repz
xchg
js
mov
dec
scas
ljmp
in
es
dec
jp
dec
mov
push
int
rolb
cli
mov
pushf
xor
repz
jo
mov
fwait
in
or
into
push
jnp
push
jp
shlb
mov
dec
mov
adc
iretw
jno
outsb
mov
rcrb
pop
push
mov
push
sub
divl
loopne
lea
test
jle
sbb
enter
sbb
mov
fldenv
mov
movsb
mov
sub
mov
les
out
pop
sub
xchg
aas
mov
pop
cmpsl
outsl
out
mov
lds
sahf
shl
test
jmp
inc
es
enter
aad
repnz
adc
lods
sub
mov
mov
ja
inc
inc
gs
test
lock
pusha
inc
out
adc
push
sub
aad
push
subb
add
dec
les
mov
xlat
lahf
lret
nop
pop
je
mov
cwtl
and
cmpsb
pop
sub
xchg
jle
pushl
sbb
mov
sbb
mov
leave
fsubrl
sub
mov
jp
cmp
mov
popf
call
lea
mov
pop
xor
and
filds
inc
test
imul
mov
cld
or
mov
lods
in
adc
xor
mov
sub
xchg
push
popa
cmp
xor
inc
lds
push
jmp
pop
cmp
dec
fs
jmp
shlb
mov
jbe
insb
cmpl
test
mov
push
scas
fsubl
push
mov
mov
imul
scas
push
aam
mov
add
push
in
and
mov
pop
adc
test
add
out
inc
sahf
sub
mov
cmp
jns
lcall
test
xor
repz
stos
pop
sbb
push
rol
pusha
ret
scas
xrelease
outsl
in
xor
xchg
dec
and
jno
inc
jecxz
push
inc
daa
xor
aas
mov
icebp
loop
bound
xor
adc
xchg
outsb
mov
add
in
mov
sub
sarb
loope
add
lcall
fwait
lods
sub
xchg
cwtl
rolb
outsb
add
jne
or
inc
fcompl
sbb
iret
stc
and
stos
adc
jbe
inc
mov
lods
mov
xchg
fistps
pop
jge
ret
inc
fildll
mov
or
jno
in
xor
in
dec
cmp
ljmp
dec
sahf
xchg
mov
inc
dec
mov
lcall
std
and
xor
jbe
sub
test
int
adc
dec
push
repnz
or
fwait
adc
xorb
push
push
hlt
sarb
push
lcall
jecxz
ljmp
pextrw
mov
mulb
push
lcall
les
cmp
cmpsb
inc
movsb
mov
mov
sbb
outsl
in
inc
cmp
jmp
scas
je
shrl
xor
sbb
test
xchg
imul
les
lret
inc
cld
subl
sub
lock
xchg
lret
subb
aam
lahf
dec
jmp
sub
xchg
popa
inc
loop
pop
jecxz
push
nop
push
dec
xchg
mov
jns
imul
push
out
mov
int3
mov
test
mov
scas
xlat
xlat
xor
mov
out
sub
xchg
icebp
push
mov
leave
sbb
in
mov
jo
jo
ljmp
pop
and
push
mov
and
add
movsl
sbb
call
or
xor
stc
mov
sub
and
push
dec
or
push
ja
sbb
call
mov
xor
push
mov
cmp
sbb
popa
test
ja
push
sbb
adc
dec
push
loope
add
push
xor
add
jmp
fs
or
sub
pop
mov
pop
ljmp
mov
sahf
movsl
add
mov
dec
push
cmp
sub
sbbb
rcll
bound
xchg
add
sahf
or
addr16
xchg
sarl
sbb
cmp
into
xchg
dec
sbb
roll
dec
xchg
pusha
nop
jmp
or
out
xchg
jp
mov
push
mov
cmp
out
dec
mov
addr16
push
push
dec
or
mov
scas
xchg
mov
xchg
or
inc
mov
outsb
push
dec
stos
sbb
clc
nop
push
sub
cmpsl
roll
dec
dec
jecxz
fbstp
or
push
andl
in
and
mov
sbbb
or
dec
movsl
idivb
out
mov
lcall
inc
cmc
jb
out
repnz
pop
sbb
sbb
ds
push
imulb
rcll
push
jbe
inc
lods
scas
xchg
sti
enter
lods
adc
movsb
adc
push
and
jns
jmp
es
mov
loop
push
lds
lds
insb
mov
add
push
adc
pusha
mov
loopne
mov
pop
into
in
lcall
mov
lret
sub
and
enter
aaa
ljmp
lahf
popa
mov
call
mov
mov
xchg
repnz
inc
and
cmp
stos
lods
xor
and
clc
nop
sti
xchg
lahf
sbb
push
cmpsl
loop
shrb
subl
fsubrs
mov
push
xor
stos
push
test
push
je
in
cmc
loopne
add
gs
adc
scas
stc
add
or
js
push
push
call
dec
lret
mov
pop
sub
mov
ljmp
sbb
add
mov
insb
xor
mov
pop
fnstsw
inc
iret
push
sub
daa
and
pop
psrld
cmp
fisubs
dec
dec
xor
xchg
pop
xchg
arpl
push
jle
xchg
pop
mov
xchg
mov
lcall
movb
dec
imul
inc
mov
in
dec
outsb
mov
mov
or
int3
dec
cmp
xorl
outsb
mov
jb
sub
cmpsb
cmpl
out
aas
ret
mov
mov
lods
out
xchg
in
xlat
je
inc
or
jno
lea
rclb
subl
popf
mov
inc
pusha
gs
and
mov
jp
mov
mov
jne
inc
sbb
xchg
test
shll
ror
imul
shrl
sbb
sbb
pop
ja
lock
add
mov
fucomip
mov
mov
xlat
js
jge
dec
nop
scas
xchg
movsl
add
inc
je
push
out
sub
jo
sbb
repz
movsb
pop
jae
mov
fsubrl
lds
dec
mov
leave
cmp
out
mov
xor
pop
into
sbb
pop
sti
xchg
insl
out
mov
mov
push
sub
cmp
push
in
arpl
outsl
arpl
lock
mov
scas
add
daa
test
shlb
lea
pop
cld
lcall
dec
ret
out
add
cli
lahf
in
xchg
cmc
pop
cwtl
mov
jge
fisubs
pop
mov
inc
or
insb
jmp
sbb
dec
dec
jge
aam
repnz
imul
sbb
divb
insb
sub
xor
pop
adc
rol
stos
mov
push
mov
test
pop
cmp
sbb
push
xor
in
xchg
sbb
and
xchg
nop
aas
das
mov
cli
ret
jmp
push
add
pop
cmp
adc
push
rcrl
call
test
push
scas
pop
adc
inc
movb
cs
xchg
stc
mov
movsl
xchg
xchg
cli
jae
adc
and
scas
test
leave
test
fisubrl
iret
pop
push
jle
rcl
mov
hlt
cs
and
sti
mov
mov
clc
mov
pop
cmp
jbe
fs
loopne
cltd
cmpsb
adc
push
jne
adc
push
xor
fcoms
fiadds
mov
xchg
sub
fisttps
jp
sti
scas
jne
or
addr16
cli
fldt
xor
adcl
sti
add
jo
les
sub
stos
fistps
add
subl
inc
cld
xchg
mov
cmc
mov
jg
aad
jae
ja
mov
sbb
mov
mov
stos
in
out
xchg
cmc
push
inc
push
lock
xchg
adc
dec
mov
sbb
pop
sbb
or
sub
dec
cmpsb
or
sbb
and
push
push
pop
push
sbb
jb
fdivrp
gs
rcrb
or
test
pop
lock
or
mov
idivl
pop
mov
test
je
mov
lock
rolb
fldt
cmp
out
bound
pop
pop
loope
daa
scas
add
sbb
mov
les
mov
push
xchg
inc
mov
daa
dec
adc
enter
jb
jl
dec
xchg
ficompl
jnp
jae
mov
into
mov
icebp
ja
jge
adc
push
loop
insb
pop
cmpsl
xchg
das
and
pop
movsl
ljmp
roll
adc
incb
or
leave
cld
pop
js
xor
rcrb
pusha
adc
sti
rolb
cs
fwait
cmp
orl
pop
imul
push
or
or
push
in
mov
testl
and
scas
mov
pusha
jae
adcb
test
lcall
loope
cmpsl
and
lea
lea
mov
iret
scas
scas
mov
xchg
mov
jo
out
jge
push
dec
dec
out
addl
cmpsb
or
sub
inc
mov
jl
faddl
test
dec
clc
inc
scas
fs
mov
cmpl
cmp
movsb
iret
push
push
outsb
sub
cmpsb
sub
push
and
adc
pop
inc
addr16
fisttpll
inc
stc
mov
mov
jge
negl
adc
inc
cmp
push
jns
dec
addr16
mov
add
pop
cmp
inc
fwait
mov
and
and
add
sub
adcl
lods
cmp
mov
push
popf
test
out
std
push
ficoms
fidivrl
sub
test
push
stc
jg
push
js
xor
in
sbb
leave
lea
repz
scas
lds
mov
dec
decb
lahf
fistl
out
leave
stos
jns
jmp
xor
or
loop
rol
jbe
sub
cmp
push
cmp
pop
xor
xchg
int3
pop
fcmovnb
aas
add
jg
mov
shl
sbb
inc
ret
sub
adc
xor
adc
xchg
xor
xor
adcb
cltd
adc
push
shrb
cmp
cli
int3
jl
or
adc
out
xor
mov
addb
mov
push
sbb
out
inc
xchg
clc
loop
aad
and
fwait
sbb
or
popf
imul
push
mov
push
xor
int
pop
fadd
add
jle
and
pop
mov
mov
pop
inc
repz
xchg
je
xchg
notb
adc
incl
xabort
outsb
add
incb
cld
xchg
ljmp
cmp
jae
ja
mov
sub
stc
pop
mov
jbe
js
pop
out
jne
inc
mov
and
out
leave
test
inc
arpl
fcomps
shlb
dec
inc
popa
cmp
jp
cld
out
push
jno
sbb
rclb
xor
mov
stos
rorb
lret
pop
aam
outsl
inc
adc
dec
and
adc
aad
jb
sub
stos
js
fwait
or
cmpl
aas
imul
xor
mull
pushf
adc
les
lcall
and
leave
test
cli
fmull
pop
out
minps
jle
icebp
fdivrs
rcr
sbb
jecxz
clc
sub
dec
add
int3
pop
cmp
mov
test
sub
lea
hlt
jle
xchg
jb
mov
dec
shlb
xor
jno
xor
ret
jbe
cmp
stos
jne
mov
orb
mov
lods
push
cmp
xor
and
mov
xchg
cmpb
jb
jns
subl
fidivl
add
inc
mov
ljmp
cmp
std
test
roll
xchg
add
push
mov
add
cmp
and
jecxz
mov
scas
addr16
sub
mov
test
xchg
or
mov
rolb
sub
jg
cmp
adc
jb
inc
fstps
push
dec
mov
pop
rcrb
push
jae
pusha
mov
daa
mov
in
pop
push
adc
pop
enter
push
repnz
pop
cmpsb
xor
add
test
outsl
ljmp
jae
inc
out
lods
mov
xchg
mov
jg
enter
outsb
jne
ja
stos
mov
ret
push
sub
push
pop
dec
pop
repz
negl
inc
mov
xchg
cmp
shr
inc
jle
mov
sbb
iret
ds
arpl
dec
stc
imulb
pop
daa
loopne
jge
mov
mov
enter
pusha
mov
lea
sub
les
cmp
jecxz
push
mov
inc
push
testl
xchg
adc
pop
add
dec
cld
movsb
jnp
mov
sub
inc
adc
dec
addl
xorl
add
mov
xchg
sti
cmpsb
xchg
incb
test
and
xchg
push
ret
mov
jp
jb
scas
outsl
roll
leave
mov
xor
mov
loope
es
out
lea
sete
inc
addl
pop
adc
mov
lret
aas
mov
or
and
stc
sbb
loope
mov
sub
jg
push
mov
daa
out
jns
sub
jno
std
aas
add
or
and
mov
and
ss
pop
popa
push
jecxz
insb
mov
pop
pop
outsb
push
or
lds
mov
mov
sub
mov
mov
sahf
push
movsb
outsl
sub
adc
mov
push
scas
into
icebp
or
in
add
inc
jno
shr
fists
fdivrl
call
movsl
iret
and
in
pushf
stc
shl
enter
push
sub
jp
mov
sub
movsl
loope
pushf
inc
pop
xlat
sbb
dec
test
and
push
lea
dec
cmp
sbb
mov
mov
pop
mov
sub
enter
cmp
jmp
int
xor
sub
insb
cmpb
adc
cmpsb
pop
mov
sub
dec
jb
lahf
pop
cld
ret
ret
lods
insl
jecxz
cwtl
add
rsqrtps
jmp
pop
cmp
xor
jle
inc
scas
push
adc
push
in
icebp
mov
xor
jnp
or
pop
fnsave
out
negw
inc
stos
fwait
pop
push
cmpsl
jo
cmp
insl
ljmp
push
cmp
bound
sub
in
cmp
mov
or
in
push
push
mov
mov
and
push
pop
xchg
int3
push
movsl
mov
or
stos
cmp
neg
jb
test
push
cwtl
cltd
bound
pop
loopne
insb
mov
js
in
push
xchg
push
xchg
adc
jno
push
popf
pop
mov
lds
test
jb
imulb
mov
cmp
cltd
pop
addr16
shrl
enter
inc
cmp
shrb
inc
popa
push
mov
sti
sbb
fs
in
popf
aas
sbb
jl
lret
pop
xor
rcll
pop
mov
fisubrl
inc
push
aaa
inc
mov
aad
push
fildl
scas
sbb
push
and
push
cmp
insb
cmp
jno
xchg
pop
cmp
push
sbb
jno
addr16
lea
fisubrl
icebp
fstpl
scas
mov
add
lods
push
push
dec
push
dec
neg
push
cmp
inc
adc
xor
and
clc
mov
push
mov
xchg
pop
or
lods
outsb
cmp
and
xchg
jmp
cli
loop
jg
mov
std
sub
popf
cwtl
mov
cmp
mov
pop
iret
or
push
shll
out
dec
pop
lret
dec
xor
xchg
iret
movsl
movsl
dec
pop
sbb
pop
out
xchg
jne
adc
and
mov
test
loop
xchg
fsubrs
cmp
popf
dec
and
in
mov
loopne
and
ret
mov
sbb
jecxz
adc
cmpsb
inc
popa
xor
je
popa
dec
jnp
and
insl
int3
mov
fucomip
dec
inc
xchg
cmp
jnp
call
jmp
call
ja
mov
dec
les
imul
lcall
push
xchg
add
cmp
loope
inc
pushf
xor
mov
inc
sub
fwait
pop
lahf
shl
push
cmpl
std
mov
or
mov
and
pop
push
jbe
dec
call
mov
pop
inc
jbe
xchg
jmp
adc
mov
pusha
testl
std
in
and
testb
mov
jmp
adc
xchg
xor
sbb
bound
data16
sahf
sbb
data16
cmp
push
pop
xor
pop
dec
inc
add
loopne
pop
sub
cmc
rorb
dec
adc
stc
fnstenv
cltd
call
fbld
push
pop
push
aaa
sti
rorl
call
sub
leave
pop
mov
lock
push
inc
adc
fcomps
dec
addl
neg
or
in
ljmp
je
jle
arpl
nop
cltd
pop
jl
jecxz
mov
insb
aas
movsl
call
jbe
xchg
mov
call
inc
mov
cwtl
mov
cli
in
out
cli
and
sub
dec
lea
lahf
fs
mov
sahf
mov
lahf
xchg
mov
fsts
fsubl
jmp
jge
mov
inc
cmp
xchg
dec
sub
in
in
into
stos
jmp
stos
cli
jmp
or
add
xchg
sub
mov
icebp
rorl
mov
js
and
pop
and
mov
sub
fcomps
popa
jmp
imulb
cs
divb
jg
data16
jmp
jecxz
cmpl
fwait
daa
pop
and
shlb
push
into
popa
mov
sahf
in
cmp
jg
adc
dec
mov
cltd
into
and
push
mov
inc
or
js
add
dec
cld
movsl
mov
cmp
mov
je
xchg
mov
jmp
repz
cli
inc
fwait
push
enter
mov
add
pop
ljmp
and
int
xor
mov
xor
dec
push
adc
jo
popf
push
in
cli
addr16
cmpsb
ret
js
cmc
push
dec
inc
aad
inc
push
pop
mov
ror
arpl
std
adc
imul
sahf
lcall
pop
stos
mov
cmpsl
scas
ja
and
sets
shl
ss
xchg
bswap
xlat
sbb
cmp
stos
mov
or
cld
add
mov
sub
pop
sbb
nop
cmp
pop
inc
ficoms
jp
sub
out
js
or
inc
sti
fisttps
or
push
shrl
jp
frstor
pop
xor
in
lahf
adc
insl
ljmp
mov
in
mov
in
lea
pop
inc
pop
add
xchg
xor
mov
inc
cwtl
movsb
mov
mov
pop
iret
cmp
jge
cli
dec
add
cmp
xchg
sahf
jns
test
and
sbb
test
pushf
sub
lods
pop
hlt
pop
inc
loope
inc
xchg
loop
mov
aad
in
ljmp
aas
xor
adc
popf
scas
addb
sbbb
mov
sbb
mov
pop
push
and
dec
inc
add
pushf
mov
push
aaa
push
mov
mov
sbb
dec
jbe
ja
mov
lock
rol
cli
movsl
pushf
sbb
push
ftst
inc
in
cmp
das
mov
pop
fnstcw
repz
lock
cmp
ljmp
mov
mov
lods
je
cmp
out
loope
les
lods
test
notl
xchg
lahf
inc
push
mov
mov
les
pushf
in
sbb
in
cmp
dec
mov
mov
int
sub
dec
mov
inc
inc
sub
out
aad
insl
cli
ficoms
inc
sti
sub
loopne
or
mov
pop
sub
aaa
pusha
sbb
push
test
scas
icebp
leave
roll
ds
or
out
dec
iret
push
imulb
mulps
and
loop
sub
jae
sti
clc
add
lret
je
jg
pop
jl
inc
pop
nop
lcall
pushf
in
pusha
push
cld
jmp
mov
ficoms
lods
lods
push
xlat
sub
cltd
inc
cmp
popf
out
movsl
inc
jb
cmpsl
cltd
mov
adc
xlat
daa
ss
xor
push
adc
mov
push
pusha
dec
pop
popf
repz
add
jl
imul
mov
js
call
cmp
inc
movsb
inc
adc
xor
inc
aam
cwtl
sub
cmp
xchg
push
jg
pushf
mov
stos
daa
sub
notb
mov
sahf
loop
mov
mov
mov
xchg
icebp
adc
push
scas
or
push
mov
cltd
comiss
test
lock
xor
clc
cmc
rorl
sbb
dec
adc
bound
int
cld
outsl
test
movsl
or
jne
pop
push
test
repnz
scas
mov
outsb
jo
test
sub
xor
cld
dec
filds
insl
in
dec
dec
or
cmpsl
loope
jbe
cmp
pop
lods
sub
xchg
iret
xchg
mov
rcr
xor
pop
and
hlt
dec
call
icebp
fisttps
adc
add
xchg
loope
cmp
jne
dec
pushf
pushl
mov
inc
pop
mov
add
int
push
cltd
lea
clc
js
inc
push
dec
or
inc
stos
popa
pusha
dec
push
movsb
loop
push
jne
pop
negl
add
aam
fbld
mul
ja
push
cld
and
icebp
mov
mov
or
jb
fildl
ja
addb
aad
ss
push
or
mov
lods
add
insb
jae
pop
imul
jge
xchg
or
sti
sbbl
decl
add
andl
fisubs
addr16
jmp
ret
mov
cmpb
cmp
push
loop
outsb
dec
sbb
cltd
dec
adc
adc
mov
xchg
out
mov
mul
out
call
or
jle
lcall
jo
jb
adc
adc
sbb
push
lods
stos
data16
dec
xchg
lret
mov
push
sbb
es
std
ljmp
pop
mov
out
sbb
in
push
adc
sahf
pop
mov
xor
sub
scas
pop
push
pop
std
mov
pop
mov
imul
xor
sbb
in
jmp
out
xchg
and
jnp
sbb
mov
int3
sbb
clc
rcrl
mov
pusha
stos
pop
test
enter
or
lods
add
push
stos
shl
sarl
xor
and
test
js
lcall
inc
out
div
push
xchg
call
push
ret
outsb
cmp
sub
jb
icebp
jno
cld
push
mov
aaa
dec
sbb
xor
mov
mov
ret
or
push
pusha
jge
lods
nop
dec
in
clc
pop
fsubr
add
test
int
mov
nop
jno
leave
add
jl
or
imul
pop
loop
xor
jg
stc
adc
jne
dec
pop
out
dec
addr16
out
dec
push
jle
add
push
sbb
pop
out
adc
dec
or
movsl
incl
xchg
xchg
fldt
pop
push
dec
dec
rcll
push
es
dec
cwtl
es
xlat
or
jne
insb
fistl
fsubrl
movsb
jge
cmp
cmp
cmp
subb
lret
leave
sbbb
jge
add
rol
leave
pop
test
fcompl
je
ss
and
dec
pushf
mov
cmpsl
xchg
test
push
es
or
cwtl
push
mov
repz
xchg
cmpb
cmpsl
out
lcall
les
and
add
neg
inc
xchg
mov
sbb
insl
adc
sub
xchg
push
dec
sbb
mov
adc
mov
ret
pop
lret
sub
roll
or
outsb
out
xor
fnstcw
lcall
imul
in
incb
cmc
test
sti
push
ret
push
jg
xlat
out
jae
sahf
adc
inc
adc
cmp
or
cmp
scas
inc
pop
cmp
shrl
pop
leave
es
ds
enter
int3
in
pop
les
mov
loopne
inc
ret
fisubrs
aaa
jp
mov
adc
fsubrl
adc
jge
std
ljmp
ds
sub
addr16
add
daa
mov
inc
fisttpl
test
das
insb
mov
pop
push
xor
stos
sub
leave
cmc
jne
test
mov
dec
mov
ja
outsb
mov
push
hlt
jg
pop
adc
mov
in
fdivrs
cmp
orl
sbb
lods
lods
inc
pop
mov
mov
or
es
xchg
sub
ret
or
jmp
sbb
movsl
je
jnp
std
pop
fucom
fistl
sbb
call
out
mov
mov
adc
movsb
aad
pop
and
or
mov
pop
inc
push
pop
mov
mov
mov
jg
mov
outsl
xchg
push
addr16
pop
sbb
cmp
jb
push
add
repz
dec
xchg
lcall
or
mov
jnp
pop
arpl
ret
sbb
js
sahf
cmp
and
aas
js
mov
sti
cmp
bound
fs
shl
push
jnp
push
in
cltd
mov
lods
vmread
push
inc
mov
jecxz
into
or
inc
and
test
loop
mov
jo
mov
cmpsb
pushl
xchg
mov
dec
xor
mov
mov
enter
pop
push
fistl
leave
sub
rorb
jge
pusha
push
fistpl
in
dec
inc
inc
inc
push
fsubrl
popf
adc
mov
jne
push
pop
xchg
aad
push
push
psrlw
mov
xor
cmp
or
stc
imul
movsb
int3
push
loopne
push
xchg
fdivrl
out
std
sbb
lret
jae
pop
and
mov
inc
divl
fldcw
sbb
xchg
push
movsl
ja
jnp
pop
outsl
cmpsb
mov
sub
in
scas
aaa
call
sub
and
sub
sarb
lods
out
ret
and
mov
iret
and
movsb
xor
mov
add
dec
aam
pop
out
add
loop
movsl
dec
fwait
inc
jmp
jbe
mov
sub
ret
jmp
test
pop
push
and
loope
out
dec
test
dec
sub
testl
jno
mov
cltd
rcrb
mov
mov
jmp
mov
xor
push
data16
cmp
pusha
jnp
push
cmp
sub
and
dec
mov
and
sub
push
dec
insl
pop
hlt
fcmovu
ds
les
jbe
inc
push
jnp
lret
fiadds
xchg
or
rcl
mov
push
outsl
jns
loop
jnp
inc
js
mov
and
stos
out
shrb
xor
sahf
dec
dec
lock
xchg
push
icebp
cmc
push
dec
lds
push
in
lcall
jle
aaa
jl
popa
mov
mov
dec
iret
push
inc
xlat
into
xchg
mov
pop
fwait
movsb
repnz
mov
add
fwait
add
sub
mov
dec
icebp
jl
data16
in
outsb
out
and
or
movsl
push
jnp
mov
rclb
popa
mov
add
adc
lds
adc
frstor
pop
scas
sub
out
idiv
mov
imul
jl
sub
js
sbb
jno
int
aas
sub
outsl
and
lds
adc
jae
loope
dec
shlb
in
xor
daa
notb
mov
in
jo
lcall
jne
les
testl
add
pop
xor
add
sbb
or
inc
push
push
push
add
repnz
into
pusha
inc
pushf
fs
jb
add
dec
and
mov
mov
dec
jmp
mov
sbb
inc
dec
pushf
xchg
fs
scas
pop
daa
mov
fstl
scas
inc
pop
lods
outsb
push
and
dec
xchg
scas
dec
test
jnp
inc
sbb
jnp
ja
aaa
idiv
cmp
nop
pop
jno
popf
and
les
int3
cli
and
aam
int3
into
sti
cmp
jp
repnz
mov
insl
inc
stos
call
xchg
ss
jmp
and
ret
mov
sub
xor
cmp
rcr
mov
lods
out
ss
gs
sbb
stos
das
mov
call
xchg
fisttpll
add
es
sarb
in
cli
inc
stc
adc
jb
fcmovbe
into
pop
fxsave
repnz
insl
push
hlt
jne
xchg
pop
pop
cmpsl
cmp
inc
ror
test
aam
cmp
in
pusha
add
or
aam
test
filds
xchg
sub
outsl
bound
add
mov
jmp
xor
add
mov
dec
sub
pop
add
pop
ja
es
xchg
loop
jmp
fwait
outsb
push
lret
fistpll
int3
mov
in
pop
and
sbb
iretw
mov
pop
adc
movsl
sbbl
or
dec
fiadds
push
inc
int
les
sub
dec
ficomps
adcl
in
dec
in
sub
cmp
in
das
dec
scas
fstpl
les
xchg
or
lds
xor
pop
dec
cwtl
pop
lods
enter
xor
mov
fistpll
mov
mov
rcrl
mov
cmp
xchg
mov
dec
in
or
dec
mov
and
bound
in
pop
lea
sbb
enter
in
mov
outsb
push
cld
fdivp
jmp
aas
int3
mov
adc
or
dec
mov
sub
test
test
movsb
or
loop
and
sarl
push
mov
mov
test
xchg
outsl
jp
movsl
pushf
and
pop
sbb
pushf
lea
xchg
outsl
enter
je
sub
mov
lahf
xchg
insl
fwait
xchg
xchg
mov
repnz
les
jle
and
xlat
in
aad
iret
js
push
cmpsb
mov
dec
cwtl
std
jg
loope
jno
ffree
lret
pop
xor
mov
mov
movsb
sub
mov
fcmovnbe
push
jo
dec
lahf
fcomps
out
push
mov
cmp
mov
push
pop
in
sbb
jb
lret
js
xchg
sbb
jg
arpl
ss
cmp
cltd
and
pushf
aad
loope
cmp
sbb
cmp
dec
gs
stos
lret
aas
mov
shr
in
jmp
mov
cli
daa
inc
dec
sbb
jns
push
repnz
aas
jbe
movsb
pushf
push
loopne
xchg
dec
enter
xchg
fsubl
mov
xchg
or
add
cltd
mov
cmp
nop
pop
push
and
pop
aas
cmpsl
sbb
in
xchg
or
mov
push
mov
fcompl
lods
mov
lods
cli
rorl
clc
fsubr
sti
test
fsubp
or
ds
fistpl
test
rorb
mov
cwtl
adc
mov
sbb
xchg
mov
int3
subb
out
mov
mov
lahf
fsubrl
ljmp
or
dec
repz
sbb
cmpsl
lret
aaa
pop
ljmp
jge
sbb
out
pop
dec
in
or
stos
mov
mov
in
popf
push
jns
mov
mov
test
jmp
push
js
add
lods
je
inc
pop
mov
rcrb
mov
aad
mov
adc
inc
push
push
jg
outsl
cltd
pop
popf
push
inc
push
decb
and
insb
mov
inc
les
or
rclb
outsb
sahf
add
adc
inc
push
inc
sbb
imul
test
push
call
mov
cmp
and
into
fcoms
test
jmp
xchg
cmp
push
lods
add
cwtl
rol
mov
int3
jne
into
or
add
ja
push
xchg
negb
adcb
add
push
movsb
movl
xor
mov
repnz
adc
das
pop
dec
jno
add
pmulhw
pop
cmp
lret
movsl
insb
clc
xchg
mov
or
sar
sub
leave
adc
out
jp
mov
cmc
fildl
das
jp
cmovns
shlb
xor
insb
jb
push
imull
xchg
add
push
sbb
jle
xchg
and
mov
loope
fdivs
and
imul
imul
ss
sub
out
or
lret
xor
sahf
inc
bound
clc
dec
mov
pop
lods
pop
inc
push
mov
adc
sbb
shll
cmp
pop
lret
push
and
in
sti
scas
enter
jl
mov
cmp
cmp
and
jne
mov
test
xor
mov
push
push
adc
xor
mov
fwait
cmp
mov
jnp
test
sbb
jne
aad
aaa
int
adc
cmp
jge
das
imul
popf
std
jl
mov
fdivl
pop
movsb
xor
dec
mov
mov
jbe
sbb
pop
leave
mov
push
ja
cmp
icebp
xchg
mov
add
xchg
adc
or
mov
subl
jmp
sbb
ficoml
enter
cmp
scas
stc
dec
mov
xchg
adc
inc
leave
movsb
pop
fstpl
sahf
or
lock
dec
mov
rdtsc
mov
ss
lods
xchg
loop
ret
ds
lahf
stc
mov
jmp
fwait
inc
hlt
adcb
add
mov
adc
mov
dec
rcrl
bound
inc
dec
xchg
mov
jge
out
stc
mov
flds
or
xlat
add
cmp
adc
and
out
or
andps
in
push
mov
cmp
xlat
lods
out
adc
loopne
addr16
dec
jb
sti
inc
out
jle
movsl
inc
add
xor
lahf
test
xchg
fld
imul
cmpsl
out
pop
add
mov
fucomp
mov
nop
jae
inc
jnp
ret
in
lock
bound
xor
adc
pop
inc
jecxz
mov
ret
jmp
arpl
mov
rdtsc
push
mov
daa
and
push
jecxz
cs
xchg
repnz
lcall
dec
cwtl
filds
mov
push
mov
add
xor
call
into
add
cwtl
sub
push
rcll
mov
daa
fmulp
stos
loopne
cmpb
jp
cmp
xchg
pop
or
mov
rcrl
xchg
push
in
daa
out
push
cmp
addl
pop
push
enter
or
add
push
icebp
inc
sub
je
xor
insl
lea
push
fidivrl
sarb
jbe
outsb
inc
inc
fs
lret
cmpsl
jne
push
es
repz
jecxz
adc
inc
sub
lods
in
cmp
iret
jmp
fs
shlb
push
test
dec
mov
add
dec
cli
add
mov
mov
fldt
inc
les
je
arpl
ss
shll
inc
adc
inc
push
and
popa
adc
or
cmp
iret
add
insb
jge
icebp
sub
pop
xchg
add
push
push
out
sub
repz
lds
inc
je
in
cmp
psrlq
or
xor
adc
mov
jnp
enter
mov
sub
mov
bound
mov
add
xor
add
fcoml
mov
sahf
pop
fdivrl
lea
xchg
shrb
mov
mov
ror
test
adc
xor
sbb
fiaddl
xchg
clc
add
xchg
je
out
inc
frstor
das
popa
vmread
add
cmp
in
js
adc
sbb
lea
sahf
das
daa
push
es
lret
mov
cltd
add
xchg
gs
inc
clc
leave
sub
sbb
jg
in
hlt
adc
out
rol
xchg
and
stos
fisubl
add
jge
mov
xchg
fldt
mov
push
xchg
jle
icebp
js
sbb
mov
stc
or
and
mov
mov
shll
inc
inc
mov
sub
sahf
loope
lret
lock
cmpl
xor
out
pop
ret
adc
outsb
cli
xchg
mov
imul
push
mov
and
cld
mov
mov
or
cmp
das
lock
fdivr
movsl
and
push
movl
inc
mov
fiadds
xchg
mov
dec
rcrb
mov
xchg
mov
xor
popf
mov
cs
hlt
xchg
flds
jl
test
and
mov
out
jb
lods
pop
or
xorb
popf
jb
pop
or
sub
jge
lods
sbb
inc
sahf
loope
jl
nop
xor
cmp
sbb
fisubl
fmuls
mov
imull
or
mov
or
mov
icebp
outsb
leave
cld
add
rclb
pop
sub
xchg
sub
cmp
adc
stc
mov
adc
mov
sbb
sub
data16
fwait
pop
adc
mov
arpl
sub
jmp
mov
xchg
sub
into
add
les
std
psrlq
in
cmp
jle
dec
in
lretw
push
fidivrs
mov
addl
and
mov
dec
sbb
movsl
je
lcall
mov
adc
insl
adc
dec
lds
push
lea
in
cmpsb
dec
fs
stos
mov
nop
fisubs
sub
movsl
xor
repz
pop
iret
outsl
or
pop
ds
jg
outsl
sub
jne
pop
rcrb
and
bound
jae
insl
sub
fndisi(8087
shl
mov
pushf
in
sbb
fmull
jbe
add
push
sarb
mov
je
push
mov
dec
adc
add
out
push
jnp
movsl
inc
mov
mov
mov
or
sbb
lcall
test
imul
cld
sub
lret
sbb
sub
mov
or
cmpsl
cli
sub
or
cmp
in
test
sarb
add
cltd
sti
lods
stos
insb
ret
or
and
shll
inc
pop
push
outsb
push
inc
in
jl
sbb
xor
js
addr16
cltd
ret
sbb
xlat
mov
adc
cli
push
xchg
xchg
cmpsl
mov
or
imul
lock
push
jne
and
std
mov
jo
cld
adc
sbb
pop
in
cli
inc
xor
lds
es
scas
jmp
clc
sarl
sbb
xchg
add
xor
clc
gs
cmpsl
daa
and
pop
bound
sar
cmpsw
sbb
push
xchg
jmp
in
bound
push
inc
xor
faddl
push
jb
lock
jnp
dec
shrl
cmp
or
mov
mov
fiaddl
daa
mov
lcall
lret
adc
in
or
adc
sbb
rorb
and
and
add
inc
mov
mov
jo
xchg
call
pop
mov
cmc
cmp
jno
test
ret
cmpl
mov
and
and
cmp
stos
or
imul
mov
xchg
and
das
into
jbe
loopne
mov
dec
adc
mov
jp
mov
in
scas
scas
mov
loop
jno
sub
or
dec
jno
adc
test
pop
mov
sub
mov
sub
rcrb
sub
and
movswl
sub
es
fwait
sub
fnstcw
fidivs
rolb
ds
add
bound
adc
loop
fwait
pop
mov
mov
inc
push
je
mov
out
xchg
jle
rol
push
or
pop
std
outsl
aaa
sub
outsb
les
jae
inc
pushaw
test
sub
icebp
gs
ja
pop
mov
cmpsl
sbb
inc
inc
packsswb
lea
mov
gs
xor
test
sti
rorb
cmp
push
or
into
decl
lea
arpl
push
imul
push
sub
and
cmpsl
inc
cmp
adc
xchg
mov
dec
push
push
vpmullw
add
push
test
clc
cmp
adc
flds
xchg
add
cmpsb
stos
popf
popa
cld
fsubs
mov
cmpsb
mov
cwtl
and
in
fdivr
pop
dec
jp
jmp
arpl
call
push
inc
push
nop
push
bound
adc
xor
adcb
ficoms
mov
xchg
stc
xchg
or
imul
mov
iret
jae
test
lods
jns
aas
and
xchg
ljmp
movups
and
or
test
xor
faddl
loope
push
jle
dec
jb
lcall
cld
into
test
jl
mov
in
sar
add
popf
loopne
push
jmp
xor
dec
jle
inc
test
pop
jb
imul
cmpsb
dec
lock
or
dec
mov
pop
or
cwtl
xchg
add
push
mov
cmovl
jp
dec
rcl
rolb
sub
pop
pop
adc
or
jnp
xor
inc
not
xchg
pop
mov
pop
test
jne
daa
call
adc
mov
mov
push
outsl
cmp
jnp
movsl
cmp
pop
cmpb
outsb
arpl
sbb
sub
data16
cwtl
lea
fs
push
in
lea
cwtl
sub
imul
les
cwtl
adc
or
int3
mov
lods
fmul
push
adcl
sbb
mov
adcb
fidivl
nop
and
dec
int
imul
xchg
jp
and
pop
mov
loop
jle
popf
cmp
dec
js
add
enter
sahf
mov
mov
inc
or
lahf
not
xor
mov
jp
cs
cs
ja
push
push
dec
cld
cmp
insb
jle
lods
sbb
xchg
and
push
orl
dec
fdivrs
inc
jns
js
movsl
out
push
stc
inc
fcmovnbe
stos
dec
mov
movsb
fists
pop
xor
mov
xchg
sbb
add
sti
add
dec
rolb
jnp
outsb
mov
lea
je
xchg
dec
cmpsb
mov
inc
and
rcrl
cmpl
in
dec
xchg
lcall
ficompl
pusha
fs
inc
cmp
adc
jl
lods
jge
movsb
imul
lahf
lods
pusha
daa
lret
cs
mov
test
mov
pushf
fxch
ret
mov
xorb
and
push
or
sub
jmp
sub
mov
xor
pop
es
jns
or
cmpsb
loopne
fmull
dec
sbb
mov
dec
or
jg
repz
icebp
sbb
lcall
mov
repnz
mov
mov
aam
push
scas
hlt
dec
xchg
and
push
mov
aam
xchg
loopne
iret
std
mov
xchg
inc
mov
adc
cmp
mov
jb
mov
ljmp
pop
adc
repnz
test
pop
test
addr16
pop
mov
pusha
xor
xchg
dec
loopne
sbb
add
popa
cltd
push
andb
ret
fidivs
rcrl
cmpsl
xlat
loopne
sti
stc
push
scas
iret
push
bound
push
in
bound
icebp
xor
sbb
leave
or
out
jle
adc
mov
shl
cmpsb
aad
jo
pop
push
ljmp
mov
jb
aam
jmp
xchg
lods
sbb
lret
es
imul
xchg
loopne
dec
in
push
mov
repnz
inc
addr16
sbb
cmc
inc
xchg
dec
push
or
scas
jns
mov
mov
cld
test
push
push
push
push
adc
jno
push
imulb
enter
jle
inc
lret
rorl
inc
pop
ds
int3
lret
dec
outsl
push
mov
dec
jl,pn
in
sub
aam
sub
cmp
jo
inc
xchg
aaa
sbb
leave
addb
xor
loope
divb
cli
les
fldcw
sub
push
jecxz
insl
xchg
repnz
insb
jecxz
cmp
shufps
cmp
addl
dec
pushf
and
xchg
xor
jecxz
dec
in
sbb
lods
cmpsb
outsb
in
xor
outsb
fisttps
cli
cld
ljmp
das
aam
and
shrl
scas
inc
jo
lret
enter
and
roll
outsb
mov
shrl
inc
lcall
inc
sti
mov
outsb
test
xlat
imul
sti
mov
dec
jl
and
cmp
outsb
imul
mov
mov
ficomps
xchg
rorl
loop
nop
cmp
mov
mov
xchg
push
push
dec
pop
insl
adc
sbb
add
xchg
sbbb
adc
lcall
fcoml
add
ja
or
sbb
or
lret
pop
adc
aaa
sbb
jge
adc
or
mov
sti
mov
mov
ficoml
clc
ja
adc
jns
mov
sarl
pop
je
adc
jbe
sbb
inc
and
xchg
ljmp
push
test
movsb
xchg
stos
daa
stos
pop
mov
mov
js
pop
mov
test
ja
mov
dec
jnp
adc
fadds
lret
cs
and
scas
or
mov
loope
sub
shrl
mov
ja
mov
sub
and
cmpsl
rolb
mov
xchg
mov
sbb
add
and
imul
pop
scas
in
ds
xchg
push
and
push
repz
and
xor
xchg
iret
cli
jo
mov
mov
push
add
xlat
jg
gs
push
xchg
shll
pop
in
rcrb
popf
shl
cmp
sar
push
lods
xor
jo
dec
xchg
xchg
fimuls
xor
mov
sbb
fnstcw
sub
dec
push
inc
push
sub
push
lods
out
push
push
xchg
add
push
pop
ss
mov
inc
jmp
push
push
jecxz
fistl
mov
test
push
mov
lcall
test
sti
stos
pop
rorl
in
inc
scas
cmp
or
cli
imul
and
cld
js
fcoml
clc
or
int
in
pop
dec
in
sbb
mov
jae
sar
lret
mov
test
inc
testl
fisttps
stc
je
aaa
in
mov
and
jecxz
xchg
lock
je
gs
pop
sub
into
xchg
imul
add
sub
clc
lods
sbb
add
sbb
jno
push
xor
arpl
cmp
lahf
lcall
cltd
and
jmp
sub
mov
cmp
movsl
add
xor
push
jno
jg
jnp
jo
sub
ljmp
stos
mov
pusha
sbb
nop
inc
mov
stc
jp
cmpsl
ljmp
dec
mov
lret
ss
test
push
lods
push
stos
popf
ja
mov
addr16
and
mov
int
repz
movsb
xchg
xchg
sbb
data16
jb
imul
mov
mov
movsl
xchg
jle
sbb
add
xchg
cmpl
and
push
rcrb
mov
or
mov
es
dec
ljmp
adc
add
push
pop
outsl
outsb
loopne
les
mov
dec
mov
mov
fisubs
je
test
xchg
mov
cmc
adc
push
adc
inc
jl
inc
pop
aam
jecxz
jo
mov
push
clc
aaa
mov
xor
mov
sahf
inc
jg
xor
in
repnz
pop
mov
lock
jns
lods
xchg
lock
fisttpl
in
jno
mov
in
cmp
pop
jns
out
repnz
lea
repz
push
sbb
lea
cmp
and
jl
adc
dec
dec
adc
fisubl
fadds
fildll
cmc
shlb
and
gs
orb
mov
imul
daa
push
adc
cwtl
mov
jns
dec
out
ret
jnp
fadd
xchg
xchg
sbb
imul
sbb
jne
ret
ret
xchg
aaa
inc
repz
sbb
mov
into
mov
push
mov
jmp
mov
jle
xorl
outsl
gs
imul
in
in
addr16
mov
push
pop
out
fwait
mov
cs
lods
adc
dec
rcrb
add
stos
decl
adc
xchg
mov
in
xchg
sarl
xchg
and
mov
gs
cmp
add
and
mov
ss
pusha
stos
cltd
pop
insl
push
or
lret
addb
pop
ds
fwait
xor
cld
cmpsb
sbbb
mov
adc
dec
imul
pop
stc
arpl
lods
dec
shl
ret
jns
jbe
gs
jns
ret
je
inc
mov
push
ss
jg
xor
jnp
ljmp
mov
pop
mov
sub
repnz
leave
sub
mov
add
mov
cwtl
pusha
add
and
jle
xchg
jae
jl
test
aaa
stc
xchg
imul
sub
hlt
mov
dec
jle
mov
adc
sbb
cmp
repz
sbb
mulb
xor
shrb
sub
imul
xchg
push
dec
sarl
fmull
hlt
stc
shrb
fcoms
je
mov
and
cwtl
scas
and
std
test
in
adc
clc
add
mov
ds
push
jecxz
and
in
cld
and
cmpl
and
xor
testb
mov
out
cmp
sbb
fnsave
xchg
xchg
mov
out
iret
cmp
pop
xchg
sahf
sbbl
lods
xlat
jnp
mov
sti
testl
movsl
or
pop
adc
popf
pop
dec
adc
cmpsl
fildl
fstp
dec
push
xchg
pop
pushf
jb
xor
lret
popl
int3
in
aaa
xor
xchg
popa
mov
pop
cmp
test
jl
lret
outsl
shrl
mov
pop
push
out
add
push
pop
inc
lea
mov
inc
sub
xchg
lods
sub
inc
test
int
cltd
sub
setle
outsb
add
rcll
push
xchg
add
cs
inc
pop
xor
enter
pop
or
loope
cmp
jnp
mov
or
and
je
sbb
push
mov
hlt
into
xchg
or
fidivrs
in
pop
sti
negb
mov
cmp
insl
sbb
jae
adc
dec
aam
cmpsl
cmp
add
sub
int3
mov
fdivr
pusha
cmp
fsts
stos
and
push
sbb
orb
jg
addr16
push
dec
adc
cmp
mov
in
jne
jmp
adc
fsts
fimull
out
xlat
stos
pop
pop
sarb
pop
cmp
push
repz
cmp
div
mov
iret
xorb
sbb
fmull
repnz
lea
aas
mov
insl
xchg
or
push
sub
scas
leave
pop
mov
push
bound
mov
std
mov
sarl
mov
jp
xchg
xchg
leave
sarl
stos
sbb
loope
push
xchg
xor
arpl
movsl
fs
or
sbb
xchg
in
pusha
jmp
push
xchg
and
sub
in
test
pop
push
in
jl
and
jle
fstpt
hlt
popf
dec
icebp
fdivr
mov
push
jmp
mov
js
ja
jmp
pop
jno
enter
cmp
and
push
xor
pop
push
jg
leave
decb
dec
lret
cwtl
push
mov
in
outsb
xchg
mov
aaa
inc
clc
sub
ds
mov
inc
or
and
ljmp
mov
xchg
mov
xor
add
data16
mov
xchg
cltd
aam
cmp
or
sahf
nop
rcrb
sbb
jl
or
cli
inc
lods
sub
xchg
enter
or
ja
mov
fwait
sbb
adc
dec
push
js
pop
mov
scas
sub
test
sub
aad
test
mov
inc
push
dec
and
les
faddp
lds
aas
cmpsb
fisubrl
mov
jae
push
adc
sarl
lea
sub
vcmpsd
pop
gs
xor
push
ss
test
out
int3
mov
nop
pavgb
and
sbb
scas
cmpsl
sarb
adc
je
inc
iret
xchg
lods
push
mov
dec
pop
adc
stos
bnd
cmp
loope
jle
pop
hlt
xchg
and
int
stos
lock
inc
inc
cmc
scas
call
cmpsl
in
jne
fldcw
xor
ficoml
push
aad
and
xchg
shlb
mov
les
sbb
fiadds
mov
enter
fnstcw
and
repz
pop
jmp
or
in
inc
sub
fdivrs
xchg
jns
sbb
loopne
shl
mov
pop
sub
cmp
fiaddl
ss
imul
cmp
cmp
int3
xchg
mov
ss
jge
push
orl
cld
mov
rol
cmp
jo
jg
mov
test
jg
cmp
or
lods
stc
mov
pop
sbbb
mov
mov
xchg
pop
sbb
mov
cwtl
jno
jmp
stos
loopne
iret
wbinvd
std
sti
pop
shlb
stc
xchg
mov
xchg
js
js
add
and
xchg
dec
shll
ds
ja
sti
mov
mov
xchg
mov
pop
mov
push
xchg
loopne
fldenv
gs
enter
sub
jg
fld
pusha
add
push
push
int
loope
and
mov
jne
inc
mov
in
or
cmpsb
scas
sub
sub
mov
pushf
loope
rcrb
notl
mov
sub
call
add
in
jg
mov
adc
fucomip
jnp
out
lods
pusha
xor
and
mov
or
mov
pop
icebp
or
in
xchg
rorb
int
adc
mov
push
movsb
sahf
mov
push
dec
aam
mov
pushf
leave
test
mov
js
inc
push
loope
fwait
ds
or
or
push
push
mov
mov
mov
cmpsb
adc
push
lds
mov
popf
aas
xor
xor
call
add
fsubl
test
push
call
repnz
adc
jg
sbb
mov
dec
dec
jo
pop
mov
lea
pop
lcall
xchg
inc
xchg
dec
enter
push
sbb
or
xor
pop
aam
jbe
add
into
in
push
mov
jne
les
inc
cmp
sbb
scas
out
mov
js
test
xor
stc
test
addr16
lods
or
imul
andl
push
leave
rolb
push
fxch
and
and
mov
mov
push
cmp
fbstp
mov
and
sqrtps
rolb
pop
sahf
and
shll
pop
or
jmp
and
rolb
pop
or
sbb
lret
mov
push
mul
cmp
scas
dec
or
sbb
nop
ret
mov
lcall
cmp
icebp
imull
add
mov
arpl
mov
cli
stos
mov
ret
fstl
jp
test
hlt
rcrb
rcrb
cmp
jne
dec
lcall
mov
ds
xchg
bound
pop
lods
test
sbb
imul
or
mov
push
xor
cwtl
mov
and
int3
mov
jp
cmpsl
in
andl
lods
adc
imul
pop
add
das
or
push
xchg
hlt
jae
std
repz
mov
cmp
push
xor
xor
imul
adc
movaps
call
mov
loope
xchg
popf
je
push
repz
cmp
push
dec
inc
adc
push
cmp
imul
ret
mov
mov
or
add
mov
aam
out
sub
adc
inc
sbb
in
fsubl
test
icebp
scas
or
xchg
inc
pop
add
cmc
mov
repnz
jecxz
nop
lea
mov
cmpsl
pmovmskb
push
into
shll
cld
je,pn
aad
js
enter
jbe
mov
adc
ss
mov
outsb
icebp
es
push
xchg
pop
push
popf
in
push
int3
jp
test
je,pn
rcl
push
and
cmp
arpl
pop
daa
xchg
jmp
or
lods
test
in
cmp
sub
pop
pop
mov
outsb
cmpb
and
repnz
xor
xor
jo
mov
push
push
filds
ret
mov
loopne
test
insl
xor
int3
cmc
xor
push
cmpsb
push
lahf
leave
cmc
leave
addr16
out
or
popf
cmp
nop
cmp
ja
push
push
dec
daa
sub
repnz
cmp
xor
fwait
bound
xchg
lds
in
xchg
movsl
mov
or
rclb
cli
sahf
mov
lret
and
bound
dec
aas
push
sti
add
push
out
dec
pop
sub
inc
sub
mov
into
mov
mov
sbb
mov
push
ljmp
fs
iret
pop
fdiv
xor
xor
enter
pop
jmp
loope
iret
jns
adc
lock
mov
movsb
cld
cltd
dec
jmp
cmp
into
clc
ds
pop
inc
or
cmc
imul
mov
inc
in
cmp
mov
movsb
in
and
out
das
push
std
cmc
sahf
hlt
jge
xor
jmp
lock
stos
adc
jp
movsl
stos
adc
sub
fdivl
xchg
push
insl
jne
imul
aaa
insl
lret
dec
lret
dec
insl
das
inc
popa
stos
xor
dec
addr16
in
cmpsb
adc
pusha
lret
jge
lock
dec
xchg
cli
ret
scas
notl
mov
sbb
fwait
out
adc
pop
xchg
out
mov
xchg
lock
jmp
enter
xor
lds
mov
pop
rorl
aam
pop
and
aam
push
dec
cmp
and
xor
adc
sbb
std
repz
cmp
mov
sbb
sub
out
fsubr
inc
outsb
jbe
cltd
outsb
neg
pop
pop
jae
sub
push
pushf
lods
call
into
or
jae
sub
sbbb
xchg
pop
inc
fistps
push
sub
and
fwait
aam
insl
sbb
add
sub
inc
mov
push
mov
dec
faddl
rclb
add
jne
mov
stc
and
imul
rcrl
push
cmpsb
shlb
aad
scas
adc
rorl
ret
mov
rorb
aas
ljmp
or
adcb
dec
cmp
out
mov
xchg
jns
inc
outsl
jne
jo
adc
cmp
sub
in
mov
xor
mov
int3
bound
data16
lret
and
push
cmp
hlt
or
xchg
shrl
xchg
mov
pushf
xchg
imul
sub
sub
jge
pop
dec
loope
fwait
shrl
lahf
lcall
fwait
inc
test
push
mov
mov
lock
pop
inc
in
orl
push
lahf
in
lret
and
add
or
fdivr
xchg
inc
int
jnp
aas
pop
mov
ret
xchg
cmpsb
pop
mov
push
pop
outsb
notl
in
jns
aaa
sbb
in
shll
pop
aad
pop
je
lahf
cltd
cwtl
sub
adc
mov
jle
push
push
das
dec
lret
movsb
hlt
pop
dec
fdivrp
aam
test
push
dec
shll
imul
stos
inc
fidivrs
mov
into
xor
int3
das
fstpl
or
mov
scas
adc
pop
movsl
leave
clc
jp
cmp
xchg
push
out
mov
cmp
mov
add
mov
add
jmp
divb
ret
sbb
sbb
sbb
ret
xchg
adc
in
xor
lods
fs
and
fadd
mov
fisttps
sbb
push
mov
inc
sbbl
popf
sarb
add
in
in
ret
jno
outsb
call
mov
pop
mov
cmp
cwtl
adc
jo
mov
pusha
daa
xchg
bnd
push
movsb
mov
cmp
popf
xchg
addr16
mov
aas
pusha
test
and
out
jns
pop
push
in
jp
dec
sub
lcall
ja
and
outsl
jp
sbb
mov
pop
mov
clc
xlat
xor
xchg
push
sub
sub
es
stos
jp
fldt
addl
mov
push
dec
sti
icebp
rorb
scas
and
xchg
inc
ja
stc
and
lahf
cmpsb
pop
add
lret
ja
xor
push
xlat
pushf
pushf
mov
hlt
sbb
mov
out
mov
repz
mov
call
sbb
or
les
inc
fimull
sbb
push
or
sbb
dec
xchg
mov
jp
and
je
mov
cmpsb
stos
daa
inc
clc
and
mov
fimull
ja
inc
je
add
cmp
testl
sbb
sbb
xor
cltd
int3
xor
or
cmp
add
stos
outsl
xchg
sbb
sub
sti
js
inc
mov
jl
nop
lea
cmp
mov
scas
les
cmp
and
icebp
sbb
shlb
es
pop
push
sbb
cmc
mov
loop
dec
icebp
and
outsb
scas
jle
outsb
out
not
movsb
add
jg
add
inc
xchg
or
bnd
shl
and
out
mov
and
sub
sub
leave
cmp
sbbl
in
enter
dec
mov
ljmp
or
imul
xchg
subl
mov
fstps
xchg
jns
xchg
call
fsubrl
pop
or
cmc
jecxz
jg
mov
lock
arpl
mov
add
rol
pop
cmp
push
mov
lods
aas
in
sbbl
lahf
test
push
movsl
fstpl
jmp
adc
outsb
dec
mov
std
pop
push
jo
cmp
flds
ret
xchg
pop
aam
mov
mov
rcrb
fistl
shll
sub
in
cmp
xor
sahf
das
push
jg
mov
sbb
pop
shlb
dec
sbb
jg
lcall
into
outsb
pop
dec
lds
pop
icebp
xchg
pusha
sub
dec
std
xchg
adc
mov
arpl
mov
sti
stos
es
pop
add
aas
ja
xor
lahf
lahf
adc
insl
mov
mov
cld
sub
mov
jno
xchg
in
and
inc
loope
jb
movsl
in
std
ja,pn
jns
mov
popf
xchg
leave
je
cltd
movsl
xor
popa
sub
out
inc
and
jb
insb
dec
add
jbe
sbb
std
mov
cli
enter
repz
rcrb
and
loopne
sbb
jp
or
ss
sub
pop
sbb
mov
mov
cmp
add
cmp
lcall
dec
pop
or
jo
insb
cmp
aas
das
add
cwtl
mov
js
cli
mov
dec
push
inc
scas
adc
jge
pop
test
pop
lret
clc
stc
into
les
pop
add
roll
hlt
bound
mov
lds
jl
dec
jge
scas
adc
repnz
and
cwtl
pop
sub
xchg
add
fstpl
shll
or
push
xchg
lock
inc
jecxz
dec
add
adc
inc
ss
add
mov
call
add
std
pop
jb
pushf
mov
repz
sub
mov
dec
ror
dec
add
lock
lahf
out
test
push
pop
bound
jge
in
xor
jmp
scas
pop
lods
outsb
into
jo
movups
or
es
jo
jg
sub
jg
dec
and
and
inc
shlb
arpl
std
loopne
jnp
ficoml
or
loope
sbb
test
shlb
popf
hlt
cmc
inc
and
push
adc
adcl
jge
mov
lret
call
outsb
ss
dec
pop
push
dec
ret
adc
addr16
push
jns
mov
pop
mov
fsubs
jae
jmp
in
js
pushf
addr16
inc
ret
decl
sub
hlt
pop
add
cli
mov
adc
ss
bound
cmpsb
and
adc
fnstsw
jp
fbstp
imul
inc
push
sbb
in
ret
rcl
cs
leave
pop
inc
iret
pop
cmp
stc
mov
mov
divb
loope
cwtl
fidivrs
test
lea
cmpl
mov
add
or
aam
mov
loopne
or
jo
add
lds
stos
jle
repnz
andl
add
mov
ret
push
hlt
hlt
push
pop
je
push
xchg
imul
xchg
mov
stc
fisubs
jnp
sti
stc
cmp
dec
fcmovu
xchg
add
fwait
sub
xchg
subb
xor
popf
ds
cwtl
loope
stos
fisttpll
xor
dec
in
imul
xchg
dec
mov
sub
inc
xchg
push
push
call
bound
ret
or
dec
dec
jle
pop
ret
pushw
stos
push
je
cmp
xor
ret
pop
add
out
mov
or
jmp
add
test
mov
mov
movsl
stos
jbe
cmpsb
dec
xlat
insl
jl
push
or
xchg
xor
jp
dec
add
cld
addl
jle
add
mov
insl
imul
movsl
scas
leave
dec
xchg
pop
stos
stos
rcrl
pushf
push
lods
push
repz
inc
call
mov
mov
mov
xor
or
push
sahf
xchg
adc
pushl
inc
sub
pop
push
xchg
into
insb
push
std
push
mov
ds
mov
add
loope
adc
and
iret
mov
popa
cli
call
addr16
dec
adc
pop
mov
or
push
jl
lea
dec
imul
fbstp
mov
insl
jae
cli
push
cs
shrb
les
sar
cmpsl
adc
mov
enter
into
pop
jge
mov
mov
and
and
lcall
cs
push
data16
mov
rcrb
sti
sahf
pop
scas
push
add
jo
jne
jno
push
push
jmp
mov
push
daa
inc
jmp
mov
inc
movsl
sahf
jbe
pop
ljmp
adc
adc
xchg
and
lahf
clc
incb
je
jne
mov
push
cs
inc
lds
std
sbbb
or
das
jecxz
jg
lock
and
in
dec
add
jmp
dec
sar
xor
inc
cmp
jns
out
call
loopne
in
std
add
sub
das
arpl
leave
or
out
push
iret
sahf
push
adc
sbb
jbe
mov
iret
int3
stos
mov
inc
mov
jl
adc
and
add
inc
push
popf
lods
loopne
lods
inc
outsl
cli
and
cltd
iret
jmp
lock
add
xchg
jle
lahf
mov
movl
xchg
sbb
or
jae
mov
aam
push
sbb
dec
add
ret
sub
pusha
mov
test
fsts
sbb
outsl
xlat
dec
push
sub
xchg
cmp
adc
call
push
mov
mov
pop
movsl
cmp
adc
mov
lret
mov
xchg
mov
mov
sub
add
dec
sbb
push
cld
sti
loope
lret
aas
sbb
push
fnstsw
insl
in
add
sub
mov
into
outsb
adc
aam
pop
mov
js
aas
cmpsb
add
dec
sahf
mov
lret
push
adcb
mov
inc
mov
jp
in
mov
jg
orl
fadds
ljmp
fisubs
std
lahf
add
inc
lret
iret
imul
cli
xor
xchg
push
scas
pop
es
movsb
mov
into
dec
inc
sti
scas
popa
cmpb
push
ret
mov
ja
push
aaa
sahf
add
popf
inc
mov
fdivrs
imul
lea
mul
add
pop
pop
mov
shrl
sbbb
orb
pop
adc
dec
iret
scas
xor
orl
cmp
mov
pop
lds
mov
loope
adc
xor
or
enter
stos
pop
rclb
testb
or
test
xor
push
push
in
mov
inc
fildl
outsb
and
sub
mov
je
fs
fs
xor
insb
jmp
adc
xor
test
adc
add
rorl
enter
xor
xchg
mov
adc
shll
jbe
stc
loope
dec
lea
mov
sahf
mov
xchg
mov
pop
jmp
pop
das
pop
inc
loopne
mov
out
cs
push
repz
in
test
jb
mov
ds
es
dec
mov
or
addr16
mov
ficoml
mov
inc
dec
stos
xor
push
xor
fimull
data16
lods
xchg
and
adc
shll
imul
xchg
lcall
stos
jg
ljmp
push
sub
fs
jmp
push
aam
dec
popf
outsb
push
clc
scas
push
sahf
mov
inc
xchg
aad
mov
mov
test
stos
nop
push
fisubrl
lcall
popf
push
scas
xor
inc
js
or
sub
jp
test
div
outsl
lods
dec
orl
aas
xchg
and
xchg
push
fs
jmp
cs
sub
nop
std
cmpsb
mov
jmp
sbbl
mov
cmp
adc
repnz
movsb
mov
push
negl
push
movsb
cmp
dec
push
xor
lahf
call
sbb
xchg
mov
fcomip
iret
inc
sbb
outsl
out
pop
hlt
xchg
lds
and
sahf
shrb
push
pop
loop
test
xlat
xchg
sbb
mov
mov
fcmovne
incb
cmp
ljmp
dec
sbb
xchg
les
sbb
adc
stos
sbb
xor
std
popf
mov
sub
fdivr
push
jl
inc
gs
cmp
mov
and
adc
lock
dec
pop
cmpsl
orl
mull
or
jg
jle
and
lret
cmp
adc
hlt
stos
jns
out
xor
repz
and
das
xor
fldt
test
es
jne
sbb
jbe
pop
ds
push
popa
inc
in
xor
or
cmp
shrb
sub
inc
icebp
out
or
sub
cmpsb
pop
push
shlb
xor
in
sbb
pusha
mov
cmp
test
aam
mov
or
in
fsubrs
sub
vpmuludq
push
xchg
test
inc
imulb
mov
dec
pop
stos
xor
in
scas
fdivl
fs
lahf
mov
jge
popf
sub
notl
testl
pushf
and
dec
imul
les
fisubrs
andl
mov
nop
aaa
es
pushf
sti
sub
xchg
pop
or
sahf
dec
pop
pop
js
lock
push
insl
sub
sub
aaa
insb
movl
push
ljmp
insl
test
cmp
repz
xchg
out
xor
push
pop
add
pop
jns
pop
or
outsb
lret
jmp
xlat
das
or
cld
daa
push
lock
fucomp
sbb
lahf
mov
push
shrl
mov
lods
adc
mov
mov
icebp
cs
ss
rorb
adc
adc
mov
adc
hlt
psrad
rcrb
enter
shl
dec
xchg
fdivrl
adc
inc
std
in
ss
dec
dec
mov
xlat
cmp
mov
sbb
mov
cmp
in
sti
xor
shlb
sti
mov
push
insb
dec
xchg
jg
dec
jb,pt
push
or
cld
add
aas
sarl
push
ljmp
ficoms
loop,pt
inc
aaa
or
int3
scas
in
and
nop
je
rep
xchg
mov
icebp
inc
pop
push
out
xor
and
fcoms
in
add
in
dec
ljmp
or
sbb
and
stos
pop
arpl
jns
gs
movsl
lea
inc
add
jmp
insb
and
mov
jge
lcall
xor
mov
into
movb
sbb
cltd
cmp
or
jl
add
or
lret
or
cld
mov
add
fstpl
mov
cmp
mov
mov
or
aaa
cmp
mov
movsl
jle
mov
popf
jnp
mov
mov
femms
mov
lea
inc
shll
test
jmp
cmp
je
cmc
fsubr
xchg
sbb
jl
clc
in
pushf
dec
in
stc
dec
cmp
cmp
imul
loop
cmp
les
sbb
mov
mov
pop
sbb
mov
cmp
iret
daa
dec
popa
das
jae
adc
jae
jg
adc
xor
cmp
imul
add
add
fnstcw
int
pop
sbb
push
test
xchg
out
mov
pop
adc
mov
push
dec
cmpsl
inc
lock
push
add
mov
push
push
and
lods
dec
call
adc
push
lret
jno
or
pop
or
xchg
sbbl
movsl
adc
inc
xchg
scas
pop
sub
adc
iret
arpl
addl
or
inc
mov
push
cmpsb
cmp
xchg
adc
mov
repz
mov
ret
cmp
mov
mov
and
movb
rcrl
jle
icebp
subb
pusha
in
add
jl
mov
mov
jg
cmpsl
mov
loopne
outsl
adc
push
or
xor
xor
out
and
fsubl
iret
pop
std
outsb
loope
push
mov
in
pusha
mov
pop
sub
cmp
mov
xchg
or
adc
test
ret
cmc
fnstcw
push
scas
loopne
xchg
mov
inc
jo
ljmp
pop
cmpsl
pop
fdivl
out
cli
fwait
cli
aas
ret
mov
loopne
std
push
std
sbb
pop
mov
sbb
movaps
dec
aas
add
les
xor
orps
popf
into
mov
add
lea
neg
push
or
popf
aam
dec
cli
xchg
outsl
sti
shll
ljmp
xchg
fstl
pop
outsl
imull
or
sbb
fwait
gs
sub
mov
fsubl
sbb
mov
xchg
movl
xchg
bound
inc
add
sub
dec
xchg
ret
fucomi
test
cmc
sahf
loope
sub
imul
cmp
sub
cmpb
clc
xlat
stos
pop
int3
mov
mov
pop
stc
mov
sub
pop
cmp
sbb
int3
add
test
in
inc
ret
hlt
into
repz
push
push
rcrb
inc
sub
mov
and
mov
mov
in
mov
sub
mov
test
insl
and
out
scas
in
xor
jmp
xor
mov
pop
rcl
sahf
in
hlt
fnsave
jae
push
jne
stos
push
fwait
addr16
add
mov
push
adc
sbb
les
frstor
mov
out
inc
push
dec
push
pop
in
cmp
adc
mov
out
mov
or
cmp
mov
lahf
imul
out
pop
ja
ret
gs
popa
push
fwait
jns
insl
iret
aad
xor
roll
andb
and
mov
lret
push
or
mov
cmc
leave
cmpsb
inc
je
mov
loope
jae
fsts
xorl
or
or
popa
movsl
bound
mov
arpl
ss
scas
jo
repnz
sbb
shll
cmp
mov
lds
pushf
cmp
int3
adc
pushf
add
and
hlt
sbb
xchg
dec
fwait
sub
pushf
xor
pop
adc
jb
jp
cli
push
mov
xchg
insl
pusha
add
pusha
sbb
pop
fildl
int3
push
cmp
and
mov
mov
xor
mov
add
mov
movsl
lods
jo
pop
mov
push
and
push
mov
sub
loopne
into
push
jne
loop
adc
sti
xchg
addr16
sbb
inc
iret
jp
imul
inc
lock
stos
adc
or
rol
je
and
popa
jle
xchg
bound
sbb
xlat
cmpl
ljmp
adc
jnp
notb
lds
dec
sbb
aaa
pop
mov
add
cmp
fcmovnu
das
out
jecxz
scas
shll
aas
paddb
stos
out
aas
adc
push
cmp
push
jae
adc
adc
cmc
addb
inc
add
shrl
xor
pushf
mov
and
xchg
in
push
add
jle
pop
cmp
or
xor
add
jl
mov
mov
or
jns
mov
aam
mov
or
leave
and
jns
test
cmp
mov
xor
repnz
sbb
loopne
or
movsb
mov
aad
aaa
and
push
rcrb
cmc
or
mov
and
add
jmp
add
sub
pop
imul
test
mov
push
mov
push
dec
hlt
push
aam
xor
mov
xchg
pop
sub
loop
dec
outsl
imul
fldt
out
xchg
and
lods
sbb
push
loop
lds
jno
mov
gs
data16
test
into
call
inc
fstl
cmpsb
jo
push
dec
scas
or
mov
or
cmc
push
xchg
mov
adc
sbb
mov
push
pop
mov
out
add
fwait
lahf
cmp
ja
jmp
push
lea
sbb
fwait
jmp
inc
adc
test
xor
das
xorl
pop
lods
mov
pop
in
int
jmp
fidivs
add
enter
roll
mov
fxch
testb
pop
mul
movl
adc
mov
cmp
jno
push
ljmp
loopne
scas
movsb
jmp
int
mov
rcr
xchg
mov
cmp
fcoms
insb
mov
rolb
pop
push
data16
aas
repnz
fistpll
jge
mov
out
push
shl
mov
add
test
hlt
cmpsb
repnz
pop
les
adc
icebp
jg
loop
xor
loopne
sub
mov
jno
ss
sar
test
sub
sub
cmp
test
adc
cld
jbe
test
inc
sbb
ljmp
push
scas
mov
jmp
fmuls
mov
adc
cmc
xor
lock
sbb
sbb
xchg
mov
dec
jg
mov
insl
aad
jne
ror
shll
lahf
aaa
fwait
daa
and
adcl
push
xchg
repz
mov
push
fisubl
xor
jp
xchg
pop
lret
mov
xchg
jnp
cs
mov
sbb
cmpb
mov
mov
push
xor
xor
lcall
cmp
sbb
inc
push
xchg
movsb
push
stc
sbbb
leave
sbb
push
xlat
push
stos
subps
dec
outsl
or
mov
jne
es
sub
mov
jmp
sbb
imul
or
in
push
mov
mov
mov
sarb
ljmp
cmp
mov
popa
xchg
pop
sub
mov
push
clc
push
faddl
mov
jecxz
mov
js
pop
or
cld
push
lret
ds
adc
sbb
lods
pushf
mov
loopne
pop
lret
push
lahf
out
es
mov
pop
fstp
in
xchg
xchg
mov
mov
dec
in
stos
dec
imul
cmpsl
adc
mov
cli
es
test
mov
mov
push
cli
aad
ljmp
test
push
add
xor
xor
jp,pn
jno
outsb
je
cli
hlt
in
and
je
jo
in
sbb
cs
pop
jl
int3
sub
dec
inc
inc
fildl
sbb
pop
stc
pop
push
lahf
jmp
imul
cmp
push
push
push
ret
mov
mov
dec
pop
popf
xlat
pop
xor
rorl
pop
enter
inc
rcrb
xlat
xchg
fbld
jo
psubw
inc
sub
stos
movsb
sahf
push
fnstsw
lahf
jbe
sub
mov
pop
cmp
inc
icebp
stc
mov
fbld
xchg
inc
or
inc
scas
call
mov
lock
js
push
adc
out
inc
mov
mov
sub
dec
scas
nop
lret
and
sbb
sub
pop
jp
mov
loopne
adc
push
push
mov
pop
mov
lret
jmp
stc
cmp
pop
mov
xchg
mov
sub
mov
pushf
dec
imul
mov
repnz
jbe
jne
es
push
ret
dec
into
movsl
sbb
sub
jmp
inc
fstpt
imul
sbb
cld
in
add
fidivrl
mov
hlt
mov
push
push
xlat
dec
add
out
ret
xchg
cmp
sbb
stos
testb
adc
cmovl
add
pusha
xchg
ds
sbb
hlt
jns
bound
xor
mov
mov
cmp
fidivl
loop
lds
js
cli
or
mov
sub
pop
test
in
xor
and
xor
mov
call
push
mov
mov
test
sub
cmpl
push
es
pop
lahf
enter
xor
dec
jl
outsb
push
adc
bound
sbb
pop
dec
lea
sbb
outsb
ja
call
add
es
call
xor
data16
mulb
and
jbe
icebp
pop
adc
mov
mov
mov
lret
aas
push
in
jl
push
cmp
or
test
out
and
fdivrs
push
jecxz
inc
stc
mov
bound
sub
mov
cmp
icebp
push
jecxz
repnz
pop
and
popf
lcall
push
rol
sbb
push
dec
jle
cmovnp
imul
jl
mov
jge
pop
cmp
add
cmpsb
push
or
scas
mov
or
pop
mov
inc
jb
rorb
das
jge
jmp
sub
into
add
cmc
mov
add
icebp
push
aam
mov
sar
and
mov
int3
addl
movsb
imul
das
mov
popf
fidivrl
mov
push
push
dec
adc
dec
fdivs
mov
mov
mov
mov
imul
mov
mov
jge
jecxz
jno
adc
test
xchg
call
adc
sub
pop
mov
les
stc
xlat
out
aad
jecxz
outsb
cmc
enter
jb
push
inc
sbb
jecxz
adc
push
sub
into
gs
mov
cmp
inc
rorb
jge
adc
mov
xor
sbb
frstor
pushf
add
stc
enter
fisttps
sub
icebp
mov
pop
sti
add
dec
enter
sbb
add
pop
in
jns
aam
jmp
jne
push
das
jne
xor
adc
mov
xor
sub
lock
adc
jae
xchg
pop
out
mov
push
mov
push
dec
and
stos
xor
out
mov
ficoms
or
dec
mov
in
out
pop
out
mov
sub
test
movsb
mov
adc
mov
out
adc
sub
imul
cmp
jg
popl
stos
imul
push
sahf
into
insl
imull
mov
jne
notl
iret
or
das
or
js
pop
mov
test
cli
jl
pop
jmp
loope
mov
stc
pop
pop
iret
aas
cld
dec
push
cmpsb
outsl
pushf
and
imul
mov
rep
lods
pop
in
jecxz
test
mov
xchg
push
xchg
inc
or
dec
fisubrs
xchg
mov
jl
mov
pushf
bound
jle
mov
repz
rclb
lea
ret
pop
inc
xchg
jne
enter
adc
xor
negl
scas
xchg
leave
pusha
inc
ret
hlt
lcall
mov
jae
in
xchg
sahf
mov
pop
dec
loopne
cmp
xor
push
stos
mov
ss
dec
xlat
mov
cmp
mov
icebp
mov
mov
pop
mov
in
sub
aam
cmp
outsb
add
jne
dec
xor
xchg
adc
sti
add
std
es
lods
jno
mov
std
cmc
mov
int3
lock
mov
mov
ret
and
lret
mov
jge
pop
ja
rclb
mov
mov
int3
cmpb
mov
loop
add
mov
loope
sub
scas
jmp
xor
push
xchg
sub
jl
mov
xor
ja
iret
cltd
mov
jle
mov
ret
lock
sbb
mov
inc
ss
pusha
mov
xor
mov
pop
mov
add
shld
std
mov
cli
xor
push
dec
xchg
imul
cmp
sbb
xchg
add
jl
ret
into
xor
repnz
out
out
dec
jb
jecxz
and
les
out
bound
loope
mov
stos
fdivrs
and
in
cmpsb
out
cmp
aam
stc
adc
dec
cmpsb
dec
enter
pop
cmp
repz
push
pop
jmp
add
loope
je
sahf
inc
je
inc
pop
cmp
arpl
sub
andl
push
jg
inc
pop
sahf
cs
and
mov
int3
dec
andl
jge
pop
les
dec
xor
xchg
sbb
adc
cltd
stos
leave
and
and
rcrl
jecxz
mov
or
dec
fwait
sbb
or
inc
in
xchg
clc
aad
cmpsl
cmp
int
jp
pop
mov
lcallw
scas
inc
jge
cmp
inc
aam
cmpb
jge
lret
cmpsl
lret
xlat
nop
mov
pop
or
xchg
adc
jo
or
xchg
lods
pop
xchg
les
mov
pop
cmp
jo
jg
and
popf
aas
jns
push
mov
int
and
sub
stos
fs
divb
mov
sbb
xor
cmp
call
dec
push
filds
in
inc
sub
adc
xchg
nop
es
jge
fcomps
popa
or
lods
cmp
push
pop
mov
cltd
addb
imul
addr16
inc
sbb
cmc
or
idivb
inc
sub
shll
jl
sar
mov
ret
mov
cmp
or
leave
cmc
xlat
sbb
iret
shlb
daa
sbb
pop
sbb
in
pop
inc
xor
adc
cli
cli
clc
icebp
jp
ret
insl
fstp
mov
xchg
mov
inc
cmpsb
adc
and
push
xor
insl
jbe
and
aad
dec
popa
pop
cmp
pop
imul
jbe
ljmp
jl
pop
out
sbb
rcll
clc
sarl
repnz
repz
inc
jns
push
clc
pop
loopne
sbb
std
in
mov
es
mov
adc
xchg
ret
dec
icebp
mov
sbb
test
test
int
xchg
push
test
mov
pop
pop
insb
jnp
loop
popf
mov
mov
xor
scas
sbb
fisubrl
je
rcll
jae
jno
cmpsb
jae
das
mov
xchg
fwait
mov
pop
add
mov
xor
push
mov
cmp
out
push
or
test
adc
negl
xchg
add
or
daa
loop
add
or
faddl
pop
cs
pop
aaa
cmp
dec
and
bnd
sahf
dec
push
insb
jb
dec
movsb
cmc
jnp
loope
cli
pop
sub
xlat
mov
inc
mov
or
mov
ror
push
push
clc
pop
mov
mov
rcrl
in
movsb
lret
fisubrl
xchg
jno
outsl
xchg
add
testb
fsts
ljmp
xor
sub
push
xchg
fmuls
jnp
aad
in
mov
mov
mov
mov
jnp
or
and
sbb
mov
xchg
cmpsl
cld
xorb
pop
add
sub
or
xchg
jge
mov
add
rolb
stos
shl
add
loopne
mov
adc
sbb
hlt
fistl
push
cmp
clc
mov
lret
rclb
pop
fnstenv
xchg
sbb
repnz
faddl
cmp
pop
arpl
lea
push
jg
sti
lret
adc
cwtl
aas
gs
aad
inc
insl
loopne
outsb
lds
lahf
push
movd
xchg
or
daa
fisttpll
leave
fs
es
fists
jno
in
xchg
dec
loopne
fsubrs
adc
icebp
jbe
fsubl
xor
lods
mov
xchg
add
mov
pop
pop
loopne
dec
fcomp
lock
cmp
les
dec
mov
push
xor
sbb
ret
sbb
push
jne
stc
int
sahf
push
bnd
dec
sub
and
jge
pop
daa
rcrb
inc
jmp
fcmovb
lret
mov
jmp
cs
sbb
mov
push
in
xchg
jb
loopnew
fnstenv
incl
es
pusha
scas
push
sub
ljmp
xor
xor
add
or
sar
mov
sub
seto
sbb
fs
orl
in
out
pushf
jge
ds
fisubl
xor
pushf
out
insl
sbb
push
imul
xor
fiaddl
fs
aam
test
call
mov
aas
pop
nop
or
adc
adc
loope
outsl
and
arpl
xor
cmc
dec
xchg
mov
iret
inc
ss
mov
and
mov
cmp
aaa
xchg
imul
push
push
pop
inc
ds
shll
and
jbe
dec
inc
ds
or
mov
lods
aaa
movsl
xor
cmp
mov
and
cmp
cwtl
adc
out
imul
add
pop
ss
mov
insb
pushf
sub
cmc
dec
in
jo
loopne
dec
mov
dec
sbbl
inc
inc
push
pop
insb
add
cmp
and
push
mov
fdivrl
rorl
pop
addr16
mov
cmc
cltd
jge
and
psubsb
sub
in
sahf
enter
cmpl
fldt
push
jb
jmp
mov
dec
inc
cmp
test
inc
jno
xor
jmp
inc
sarb
add
fsubr
push
sbb
iret
xor
lds
call
mov
sbb
mov
add
mov
icebp
shll
xchg
mov
inc
pop
pop
mov
das
arpl
aad
jb
ret
jbe
mov
pop
in
pop
fnstsw
sub
test
loop
cld
sub
les
adc
loope
cmp
out
fwait
and
cld
mov
shl
aaa
add
inc
pop
or
movsb
pusha
jb
clc
in
push
adcb
jns
sub
daa
adc
out
and
fnsave
adc
pop
or
cld
push
mov
sahf
push
das
pop
les
mov
aam
xor
ds
lret
adcl
std
fstp
ror
adc
sbb
pusha
mov
xor
mov
stos
test
xchg
push
adc
pop
ret
push
adc
mov
mov
cmp
mov
in
je
or
lock
lds
jle
pop
stc
sub
gs
jnp
xorl
std
jne
xor
testl
shll
and
dec
mov
mov
push
jae
adc
xor
stos
pop
in
push
std
insl
xchg
mov
fsubs
push
es
mov
in
jle
cmpsl
mov
mov
mov
pop
mov
sti
fistpll
out
xchg
adc
pop
leave
push
gs
aam
push
scas
fistl
mov
xor
xor
cwtl
out
mov
push
repz
cmpsl
add
ljmp
ret
adc
and
arpl
mov
sub
mov
enter
adc
mov
sbb
pop
sahf
dec
pop
popf
notb
pop
insb
push
or
test
fadds
or
cmpsl
daa
mov
rcrl
pushf
ret
cmp
pop
out
adc
xchg
test
add
pop
add
pop
jg
cmp
push
push
je
jl
cmpsl
scas
in
popa
sub
mov
sub
shrl
add
dec
mov
test
fcoms
ds
fiaddl
mov
and
js
adc
xor
inc
fimuls
fptan
mov
jmp
imul
das
lcall
mov
pop
jmp
mov
dec
cld
sahf
int
fs
sbb
inc
fwait
lock
scas
cmp
push
add
xchg
pop
mov
fcomps
mov
int3
jae
mov
std
jb
ror
adc
cld
sbb
push
jae
cwtl
adcl
lea
inc
fadd
or
push
cld
jge
jmp
jno
aaa
dec
mov
lahf
inc
insl
ret
lea
cld
pushf
xchg
inc
fidivs
icebp
faddl
mov
pushf
and
inc
test
inc
pop
mov
test
out
sti
imul
in
fs
and
inc
mov
mov
mulb
stc
jmp
xchg
push
dec
xor
stos
cmp
lcall
jnp
aaa
adc
ss
ljmp
pusha
shll
push
lahf
ret
gs
jp
mov
push
push
or
dec
orb
aad
and
adc
int
mov
add
hlt
xchg
xchg
leave
iret
push
fnstsw
mov
inc
xor
pop
pushf
fidivs
aas
push
enter
int
loopne
repz
adc
jae
sti
stos
mov
mov
add
or
cwtl
jle
inc
insl
cmc
movsb
aam
in
insb
or
jmp
jle
or
xchg
cmp
les
les
xor
sub
es
or
and
fdivrl
mov
mov
jl
jmp
out
or
cli
pop
inc
cmpsl
shl
bt
mov
push
lods
mov
lahf
sub
push
mov
xor
mov
movsb
adc
jbe
pop
xchg
xchg
cmp
inc
ja
inc
out
pop
dec
out
nop
hlt
mov
imulb
ja
subb
popa
out
imul
stos
cltd
xor
aad
loop
popl
or
add
pop
sbb
clc
cs
fsubrs
and
in
cmp
cmp
fcmovbe
mov
aaa
sahf
and
lods
addl
add
jecxz
cli
sbb
sahf
cmp
xchg
push
fldt
jae
pop
repz
push
rcrb
loopne
or
inc
shlb
dec
ret
mov
jns
xchg
sti
pop
inc
loope
lcall
mov
dec
ds
int
das
and
lods
mov
out
mov
add
loopne
push
pop
dec
or
push
and
test
jecxz
or
add
mov
popf
mov
xlat
xor
xchg
cmp
xchg
shlb
xchg
sahf
pop
add
push
repnz
adc
add
add
rcll
add
shrl
aas
mov
sbbl
call
xor
pop
jae
inc
icebp
lret
pusha
std
xor
add
popa
ret
idiv
jmp
lock
mov
and
scas
jmp
popf
fisubl
test
lods
mov
lods
rorb
jg
push
pushf
mov
mov
xchg
lret
stc
mov
cs
rcll
jg
test
clc
andb
inc
ja
lds
pop
and
lds
mov
dec
scas
lock
dec
dec
pop
dec
push
cwtl
mov
mov
mov
mov
add
ffree
jp
lea
cmp
xchg
movsb
leave
orl
mov
dec
and
out
vmovntps
mov
inc
in
leave
nop
incb
mov
xor
lods
adc
cwtl
pushf
pop
inc
inc
pushl
aad
and
int
xchg
das
ljmp
cwtl
mov
push
or
std
mov
pop
daa
mov
or
test
mov
gs
cltd
dec
xor
bound
mov
cltd
outsb
pop
xchg
jg
add
lock
stc
cs
stc
jb
xor
lcall
jo
repz
pop
mul
cmp
lods
rol
push
ss
into
subb
out
test
dec
loop
int3
fcmovnbe
out
cli
xlat
inc
pop
out
cwtl
sbb
push
js
add
adc
sub
xor
lcall
sbb
mov
adc
leave
int3
pop
or
and
adc
pop
and
mov
pop
cs
fisubrs
es
mov
in
mov
sbb
pop
popf
scas
icebp
insb
cli
stos
push
leave
out
inc
pop
xchg
jae
dec
dec
sub
mov
lds
xlat
cld
and
mov
mull
scas
andb
pop
mov
pop
or
bound
leave
ja
or
xor
xor
xor
notl
and
xchg
jle
xchg
clc
mov
jge
add
int3
lds
insl
out
mov
add
push
inc
pop
xchg
push
push
dec
and
and
cmc
jbe
pop
adc
ret
jne
cmp
xchg
dec
xor
inc
cmpsl
pop
loopne
jecxz
cli
fsubr
stc
sub
xor
mov
adc
ljmp
pop
inc
sub
pop
inc
fldcw
xchg
sti
sbb
in
dec
inc
jp
dec
mov
stc
mov
xor
cmp
fcompl
and
scas
pop
daa
movsl
push
je
iret
sbb
pop
aas
mov
das
daa
mov
sbb
pop
fcom
cmpsl
clc
adc
inc
ret
sbb
dec
rorb
std
jge
mov
mov
pop
push
std
std
inc
push
mov
dec
dec
lret
roll
hlt
mov
inc
and
popf
xor
mov
cmp
xor
mov
das
and
cmp
scas
popa
cwtl
jb
imul
xchg
xor
hlt
dec
mov
and
push
jecxz
imul
sahf
sbb
mov
jbe
movsb
inc
or
aam
add
popa
mov
xor
mov
pop
loope
out
mov
sub
mov
imul
pop
xorl
test
std
movb
sti
cmp
xchg
rol
fdiv
pop
adc
sub
inc
lcall
aas
adc
mov
cltd
push
xchg
out
mov
sbb
mov
int3
jl
mov
add
adc
sbb
and
mov
test
cmp
xor
or
call
int
daa
daa
xor
stos
arpl
test
scas
ss
xlat
mov
test
outsb
test
push
dec
sti
popa
lret
loope
ss
pop
inc
pop
mov
sti
pop
inc
sub
pop
rorl
inc
inc
jae
adc
mov
jnp
dec
xchg
jne
xchg
xchg
pop
call
push
cs
xchg
fwait
mov
push
fs
and
shl
test
sti
jne
mov
loop
aaa
jle
pop
dec
and
dec
aam
pusha
loop
repnz
xor
jp
movsb
mov
mov
inc
dec
inc
adc
cmc
adc
push
aad
inc
lods
inc
loopne
sbb
cmp
test
sbb
popa
icebp
dec
mov
out
mov
addb
add
and
outsl
stos
shr
jns
cmpsb
mov
dec
loop
jbe
hlt
ret
xor
pop
ror
addr16
cmp
lock
push
mov
loopne
in
aad
rorb
stos
xor
jl
lock
pop
mov
and
mov
sarl
mov
mov
cltd
mov
shll
mov
stos
or
jl
jg
lods
inc
mov
mov
out
lds
inc
adc
xchg
lods
imul
repnz
es
ds
hlt
lock
data16
pop
add
sti
outsl
adc
mov
js,pt
cmp
xor
pop
push
cmp
int3
mull
sbb
inc
mov
rolb
inc
popf
pop
iret
pop
repz
aad
cli
js
jne
xor
cmp
add
xchg
sbb
pop
mov
fnsave
push
push
xchg
mov
mov
loopne
stos
cs
xchg
jmp
dec
inc
or
sub
cmpsb
cmp
aam
repz
arpl
repz
pop
add
xchg
sbb
adc
shrb
inc
and
add
dec
pop
mov
cmp
inc
adc
stc
push
adc
sbb
mov
push
lock
mov
pop
je
xlat
ret
sbb
adc
out
jge
xchg
xor
sub
movsl
jno
bound
mov
fwait
cmpsl
je
add
sub
mov
bound
sbb
sbb
int3
add
outsl
int
cmp
xor
sub
dec
imul
pop
mov
sbb
adc
sub
mov
xor
out
cwtl
jecxz
test
xchg
jmp
pop
jp
xor
stos
test
test
testb
sub
or
popa
mov
int3
and
mov
dec
pop
fistps
mov
jg
ljmp
xchg
pop
aam
imul
sbb
mov
xorl
lods
sub
jmp
ljmp
mull
popf
xor
ficoml
adc
mov
addr16
sbb
aam
sbb
pcmpeqb
jns
push
mov
xor
addb
and
pop
mov
and
cld
shrl
int
loopne
add
pusha
xchg
adc
aam
mov
pusha
pop
mov
fistl
mov
xchg
lahf
xchg
lahf
fstp
inc
pop
jne
cmpsl
vcvtdq2pd
pop
push
daa
sbb
adc
jnp
mov
push
int3
mov
push
lret
adc
dec
movsl
mov
out
js
pop
fisubl
and
jns
dec
pop
loopne
sub
popa
scas
fstpl
inc
dec
outsb
cmp
mov
sub
js
inc
out
mov
fsub
dec
pop
les
mov
lcallw
add
mov
stc
inc
or
mov
jne,pn
cltd
out
adc
cs
enter
mov
popf
sahf
mov
js
add
sbbb
pop
mov
dec
orb
jns
addr16
popa
xor
or
push
out
scas
xor
xchg
mov
pushf
and
ja
and
scas
stos
push
stos
push
jp
mov
jge
pop
pop
jo
push
out
loop
pop
or
push
stos
or
dec
outsl
mov
sbb
mov
sbb
int3
push
repz
xchg
inc
bnd
pop
stc
iret
testl
pop
xchg
adc
inc
push
arpl
sub
xlat
xchg
cmp
push
mov
xor
or
cs
divb
xor
adcl
xchg
xchg
cmp
mov
test
les
aam
and
ljmp
xchg
in
mov
push
shlb
out
repz
in
sti
pop
test
sbb
push
testl
jbe
roll
jno
outsl
fs
loop
mov
xor
test
rorb
push
dec
and
xchg
push
pop
rdpmc
inc
stc
lods
cmp
and
das
loop
ficomps
fstps
inc
mov
fwait
sbb
andl
jbe
add
flds
sub
lods
idiv
mov
pop
int3
pop
pusha
adc
jp
push
dec
aad
outsb
arpl
sub
mov
leave
arpl
add
loopne
pop
jle
loopne
mov
push
mov
add
cmp
xchg
dec
filds
pushf
cmp
fcompl
jl
xlat
fcom
in
inc
pop
cld
xchg
imul
imul
xchg
sbb
xchg
clc
out
and
lret
call
sub
mov
sbb
ret
pop
decl
or
mov
testb
mov
xchg
rcl
push
fsubrl
les
push
cmp
clc
mov
fidivrl
mov
jp
lret
lea
aas
dec
scas
test
adcl
std
jg
rcr
add
cwtl
push
in
and
mov
inc
add
aas
movsl
in
mov
daa
jmp
xor
dec
add
std
decb
outsb
lahf
sub
cmpl
pop
sub
imul
sbb
mov
lcall
push
push
pop
notrack
mov
out
jb
add
cltd
inc
add
jbe
sbb
test
lcall
inc
xlat
inc
lret
test
jecxz
dec
into
push
push
lea
pushf
mov
adc
pop
xchg
cwtl
dec
mov
arpl
repnz
rol
loope
sub
adc
cltd
mov
dec
push
mov
lods
insb
pop
jo
pusha
pop
outsl
insl
adc
mov
dec
adc
enter
stos
movsb
lea
int
leave
rolb
out
fstl
inc
mov
jb
cmp
pop
fwait
cmp
ret
xlat
pop
push
mov
pop
pushf
out
daa
sbb
mov
rorb
ret
cmc
sub
les
test
ja
cmp
jl
int
or
jmp
sub
data16
mov
sbb
cmc
adc
shl
mov
jns
rorl
fmull
stos
mov
mov
adc
jmp
pop
pop
mov
cltd
call
push
push
icebp
lock
pop
jb
imul
adc
mov
jnp
add
popf
sbb
cltd
mov
adc
or
aam
test
inc
sarl
xlat
dec
ficomps
cmpsl
subb
xchg
shr
or
shl
dec
les
adc
fcmovne
mov
scas
das
push
cmpsb
mov
push
and
add
clc
mov
mov
adc
cmc
icebp
aam
sarl
bound
xchg
or
mov
mov
imul
pop
push
jne
sub
push
xor
hlt
loopne
das
dec
adc
add
xchg
sub
xchg
out
flds
repnz
sbb
stos
je
fwait
aas
nop
and
movsb
inc
int
cmpb
push
jne
inc
mov
je
add
rorb
push
and
js
test
in
sub
lret
xor
out
ret
dec
inc
es
gs
int3
out
rclb
fs
inc
ja
fwait
add
roll
dec
inc
bound
aaa
lods
test
cmp
and
in
pushl
mov
test
or
incb
inc
rorl
jne
daa
push
push
mov
jnp
mov
fildll
imul
pop
popf
insl
pop
testl
mov
fucomp
repnz
mov
mov
xchg
cwtl
sbb
and
rcr
push
je
pusha
js
pop
xchg
imul
rorb
push
insl
out
or
gs
cmp
stos
adc
ljmp
jl
push
jg
mov
cmc
pusha
cmp
push
or
dec
fs
mov
enter
fisttpll
sbb
mov
adc
add
movsl
pop
loope
mov
scas
es
shrb
pop
clc
pushl
add
pop
sbb
pop
int
loopne
inc
lcall
fs
es
in
insl
mov
fstpl
mov
hlt
rcrb
cmp
jg
dec
or
sbb
push
divl
inc
jns
shrb
or
mov
xchg
out
inc
cmpsb
pop
inc
dec
mov
xor
xlat
fdivl
adc
xchg
adc
into
inc
inc
das
inc
insl
mov
push
fidivrs
mov
leave
adc
pop
bound
fstl
mov
pop
pusha
push
xor
mov
stc
xor
or
and
cmpsl
jae
loop
ljmp
cmp
repnz
sbbl
ss
hlt
mov
push
incl
cmp
scas
mov
test
and
lahf
inc
dec
xor
xor
sbb
jne
xchg
mov
add
cmc
or
cmp
inc
daa
xchg
addr16
sub
insb
in
sbb
cmp
xor
mov
test
lds
mov
mov
push
testl
insl
xchg
scas
sbb
pop
xor
aad
in
lahf
adc
adc
mov
repnz
daa
fcmovbe
in
cmpsl
cmpsb
cld
sub
clc
inc
sub
jp
shrb
stos
inc
fs
mov
mov
daa
adc
clc
cltd
dec
ds
call
call
mov
cmc
cmc
jecxz
test
fisubrs
popf
jg
data16
pop
bound
or
std
scas
jl
lahf
sbb
inc
and
lods
rcll
lods
cs
not
cltd
add
inc
xchg
sub
sbb
stc
pushf
and
test
test
sub
popa
pushf
movsl
jo
in
dec
push
addr16
cmp
ret
push
flds
pop
push
sahf
stos
shll
gs
mov
sbb
sbb
push
scas
mov
pop
pop
out
pop
in
mov
and
loope
push
pop
pop
xchg
inc
pop
mov
in
mov
cmp
jnp
ret
sbbl
push
inc
inc
or
pop
cmp
jmp
mov
xchg
ja
xchg
pop
cs
cli
mov
or
sub
out
mov
addr16
and
jp
add
pusha
add
pop
jg
sub
xchg
mov
roll
ds
mov
or
xchg
xchg
mov
push
rcll
mov
mov
xor
lret
sub
lods
fisttpl
pusha
sahf
aam
push
sbb
fwait
or
pop
lock
aad
mov
outsb
in
or
jo
repz
in
scas
popa
push
sbb
add
in
add
cmp
pop
hlt
sub
dec
data16
aaa
repnz
mov
dec
inc
mov
add
jbe
dec
in
testb
outsl
jmp
sub
push
inc
aad
and
shlb
fwait
jmp
push
and
pop
xchg
sub
pop
sub
or
mov
or
ja
cli
push
js
sub
cmp
ljmp
mov
aad
pop
mov
aas
clc
lcall
pop
shr
popa
sbb
sbb
dec
and
jne
xor
cmp
sub
xchg
sbb
xor
cli
inc
lahf
sub
shlb
int
imul
cwtl
xor
inc
test
ja
cmp
mov
daa
xchg
cmpsb
or
sbb
push
jmp
cmp
jg
lock
ret
add
or
mov
push
in
fs
inc
push
clc
fstpl
cwtl
lds
pop
lret
and
pop
lea
push
icebp
out
sahf
imul
cltd
dec
pushf
arpl
mov
jg
hlt
push
or
movsb
outsl
pushf
insb
dec
movsl
ret
dec
int
mov
inc
inc
add
stos
mov
or
pop
jne
inc
inc
ret
cmp
jle
negl
into
jl
sbb
outsb
xchg
pop
in
jle
xchg
les
lds
push
cmpsb
xchg
outsb
mov
test
imul
sbb
adc
mov
mov
push
fwait
adc
xorb
out
loopne
xor
pusha
addr16
adc
sbb
imul
mov
fstps
les
gs
adc
dec
adc
aas
cmp
push
mov
adc
sbb
jnp
jae
fcoml
mov
mov
outsb
cmc
xor
rclb
sbb
cmpb
aad
sbb
ror
pop
test
xor
xor
fsub
or
je
xchg
bnd
dec
jb
mov
inc
xchg
push
push
iret
ljmp
pop
cmpsb
pop
push
adc
add
std
lcall
scas
int3
sub
out
inc
enter
add
and
ss
int3
pop
ret
inc
mov
cltd
sub
sahf
cmp
rclb
cmp
mov
mov
mov
fisubrl
jae
int
dec
movsl
lcall
rolb
cmp
mov
inc
inc
pause
subl
pop
orb
out
scas
mov
jge
cmp
cltd
loopne
mov
mov
add
test
ljmp
inc
dec
daa
rorb
outsl
push
mov
and
pop
mov
inc
mov
enter
sub
mov
int3
out
pop
lods
lock
jne
loopne
shr
js
jo
sbb
cmp
shl
sahf
jg
xchg
jnp
mov
and
cltd
hlt
mov
mov
rcll
out
xchg
rcrb
jle
jp
pop
mov
and
sub
push
xchg
xor
mov
jge
lods
xchg
jnp
push
inc
outsl
in
push
je
outsb
xchg
mov
mulb
push
dec
xchg
in
repz
jl
jb
adc
add
adc
sbbb
hlt
faddl
pop
jmp
outsl
cmpsb
je
in
imul
aas
add
ljmp
pop
icebp
add
xchg
inc
pop
cmpsb
cmc
lahf
sti
fmuls
and
scas
and
lcall
vpcmpgtb
sahf
mov
in
mov
inc
push
iret
clc
xchg
or
sub
lock
sahf
ror
mov
pop
nop
xchg
dec
xchg
xor
gs
mov
jae
pop
shr
xorl
out
clc
sbb
insb
and
movsb
call
and
jmp
jbe
notb
jne
inc
popf
cltd
ljmp
test
shll
ja
xor
aam
sahf
pop
sbbb
mov
jl
in
fidivs
mov
inc
mov
mov
insb
cwtl
nop
add
xchg
enter
out
mov
jp
cmc
leave
sub
cmp
jae
inc
mov
int3
aaa
pop
sahf
sarl
imulb
aas
bound
jle
add
pop
sarb
push
and
inc
inc
stos
and
lea
push
test
inc
imul
popa
cltd
sbb
mov
push
aad
adc
ss
arpl
mov
add
inc
xchg
jl
xor
sub
fucom
xor
mov
xor
sbb
xor
mov
enter
es
add
pop
cmp
mov
sti
movsb
push
loopne
xor
mov
loope
adc
dec
or
insb
bound
xor
es
fmulp
xchg
clc
mov
std
inc
add
jle
popa
jnp
into
lret
ja
jbe
inc
fiaddl
jp
xchg
xor
mov
in
insb
shll
pusha
imul
and
push
sub
mov
and
les
shrl
movsb
cmpsb
mov
pushf
cwtl
outsl
ret
es
das
js
mov
insb
loop
add
lods
rclb
les
mov
inc
dec
sub
sbb
adc
stc
and
lods
out
mov
ret
dec
sbb
lea
xchg
movsl
bound
mov
movsb
int3
adc
pop
push
cmp
jns
inc
push
repz
push
mov
jge
addr16
add
scas
gs
add
loope
dec
hlt
add
pop
jg
mov
mov
mov
adc
inc
push
mov
rep
cwtl
sub
mov
sbbl
mov
sub
mov
popf
and
push
cmp
into
out
adc
xchg
xor
mov
adc
or
das
dec
push
pop
bound
adcb
xchg
jp
fcmovne
mov
jb
lock
pushf
add
ja
xchg
scas
cmp
mov
adc
outsb
push
xlat
mov
push
jmp
add
ret
mov
sarl
stos
fldcw
sub
pusha
and
incb
aaa
push
pop
shll
mov
mov
adc
jne
arpl
inc
lret
imul
mov
inc
and
push
cmp
ljmp
inc
xchg
div
notl
leave
aas
hlt
lret
jae
fisttpll
sub
movsl
sti
mov
sbb
push
xlat
push
imul
push
in
sub
je
dec
xchg
xor
mov
clc
stos
ds
out
lcall
sbb
scas
lock
push
int3
mov
pop
pop
pop
sub
aam
add
je
mov
jo
iret
cmpl
ds
adc
inc
data16
into
imul
inc
fnstenv
lods
std
sti
and
loopne
gs
lret
mov
adc
cs
lahf
dec
mov
cmpsl
sub
movsl
jmp
loop
sbb
arpl
movsb
adc
sahf
jnp
outsl
jmp
lock
je
mov
jge
sbb
inc
cmpb
or
in
in
stos
pop
cmp
or
out
fmul
push
shlb
jb
and
decb
or
mov
scas
sub
mov
cmp
mov
jmp
jmp
outsb
add
adc
add
and
push
dec
mov
xchg
mov
xor
cmp
dec
aas
insb
scas
or
aad
das
mov
aas
xchg
shr
xchg
jl
cmp
subb
mov
adc
sahf
xchg
fwait
mov
jp
pop
outsl
roll
in
popf
cmp
jge
sub
aaa
push
outsl
pop
sbb
xchg
dec
in
stos
stos
adc
add
lret
xor
xlat
dec
nop
dec
inc
mov
repnz
loopne
mov
xchg
lods
mov
push
adc
add
cwtl
push
sbb
sbb
iret
adc
ja
jns
push
cmp
push
call
daa
ret
cmp
xor
cmpl
pop
or
mov
sub
orl
es
or
inc
pop
or
xchg
out
cmp
push
nop
stc
pop
outsb
or
mov
bswap
into
pop
fs
ja
lods
adc
cwtl
and
xchg
and
or
cli
xchg
in
test
dec
aad
in
test
push
sti
in
jge
mov
jno
jecxz
mov
xor
adc
xchg
add
mov
pop
mov
ja
push
cwtl
shrl
mov
xchg
fimuls
es
xor
dec
push
scas
add
loope
jp
movsl
inc
push
pushf
or
cmp
inc
jl
imul
daa
pop
sub
imul
mov
jbe
addb
xchg
stos
test
popa
les
pop
sahf
xor
ret
pop
stos
mov
and
xchg
int3
fistpll
inc
or
jecxz
jne
jae
scas
ljmp
sbb
sbbb
xor
mov
or
xchg
cmp
push
adc
pop
jo
jmp
inc
icebp
jmp
pop
fstpt
xor
call
inc
dec
cmp
ror
mov
andb
push
lret
in
sahf
pushf
push
inc
adc
xchg
pop
xchg
pushf
out
xchg
je
jo
push
mov
mov
inc
jl
xorb
lock
imul
test
mov
sub
mov
and
mov
adc
mov
mov
inc
pusha
inc
push
call
adc
scas
and
fldcw
daa
data16
mul
dec
or
sub
dec
push
xor
cmp
das
xchg
push
in
test
and
lds
daa
test
mov
inc
pop
mov
push
xor
ljmp
dec
or
mov
aam
push
pop
clc
je
roll
push
mov
adc
hlt
stos
jg
rol
lret
inc
inc
cmp
int
test
jmp
je
std
not
sub
add
call
cmp
mov
shr
mov
pop
and
pop
or
adc
mov
out
es
push
dec
adc
dec
sub
push
mov
std
test
lds
mov
add
nop
xlat
add
movsl
out
push
lahf
jno
insl
in
call
loopne
in
adc
mov
mov
inc
mov
add
idivb
mulb
stos
jg
out
or
lret
daa
xor
jne
push
sarb
jno
pop
fildl
fcoml
outsl
popa
mov
enter
xchg
ret
testl
xor
pop
ret
sub
push
jae
or
sub
in
mov
cs
aad
dec
xchg
decl
jno
cmpb
jnp
shrb
mov
ret
cmp
pop
int3
nop
out
mov
in
lret
mov
push
sub
mov
cld
and
inc
mov
adc
leave
lret
mov
or
nop
aam
mov
ret
hlt
push
lahf
jp
jno
repnz
adc
mov
imul
call
adcl
cmp
fcomps
xor
aaa
test
mov
loope
loopne
mov
pop
sbb
xor
ret
fstp
clc
cmp
and
hlt
jns
aad
add
mov
lods
test
arpl
dec
mov
test
stos
lcall
fwait
mov
mov
mov
push
pop
dec
pop
pop
sbb
inc
jns
push
hlt
int3
jge
jmp
call
fwait
cmp
push
std
mov
lds
test
stos
lds
in
sbb
or
xchg
out
idiv
aam
sbb
jge
xor
xchg
sbb
xchg
inc
inc
jle
icebp
push
or
cmp
imul
mov
in
popa
out
jg
and
inc
jg
pop
pop
dec
sbb
xchg
jnp
sarb
mov
lcall
inc
cld
pop
out
push
jo
sbb
adc
shl
mov
cli
fstl
shr
fidivrs
jmp
out
adc
subl
int
je
sbb
fcoml
icebp
mov
adc
adc
dec
add
inc
or
test
int
lcall
jbe
aas
sub
out
scas
push
mov
js
mov
mov
scas
adc
pop
aaa
sbb
inc
fdivr
roll
adc
push
into
and
cld
fwait
add
scas
imul
repnz
scas
xor
loope
or
jmp
jle
pushf
lcall
sub
bound
push
mov
pop
out
sarb
int
mov
notb
hlt
pop
push
mov
loop
call
pop
enter
test
jns
fisubrs
inc
jmp
aas
stc
int
lret
ljmp
aaa
pop
addb
push
sub
xorb
cmpsl
fistps
or
dec
outsl
jle
test
ja
jns
sbb
pop
fld
mov
push
stc
sahf
jbe
cli
push
testb
aad
xchg
pushf
outsl
xchg
inc
fsubr
xchg
lret
shlb
xchg
mov
mov
mov
stos
jne
rcl
fs
inc
jne
add
mov
mov
sbb
outsb
negl
fdivrl
dec
mov
enter
stc
push
sbb
es
or
js
stc
fsub
imul
lcall
xchg
mov
sbb
out
push
call
cmp
xchg
ss
movsl
fadds
dec
pushf
arpl
mov
jne
add
aaa
subl
sbbb
ret
mov
push
push
addr16
jl
outsl
dec
xchg
ret
in
dec
clc
xchg
mov
imul
cld
popa
mov
inc
jl
xchg
add
mov
shll
and
push
mov
mov
in
cld
pop
ret
dec
insl
cld
jae
mov
or
pop
scas
gs
cmpsb
pop
loop
popf
xchg
lcall
ljmp
mov
addl
dec
dec
into
iret
sbb
mov
ljmp
popf
sbb
xor
adc
out
pop
fs
data16
pop
out
jle
sbb
aas
jbe
mov
das
jecxz
iret
arpl
cmpb
dec
inc
rcrl
lea
in
scas
lret
stos
stc
out
icebp
repz
imul
fadds
jle
outsb
and
rolb
dec
mov
pushf
stos
ss
mov
repz
cld
xchg
mov
movsl
jno,pn
cmp
mull
clc
xor
je
fstps
leave
imul
xchg
jle
cli
stos
call
push
test
or
dec
xchg
orb
test
mov
lret
sbb
cmc
push
loopne
imul
xchg
mull
xor
pusha
jmp
mov
mov
jg
inc
mov
cs
inc
pushf
mov
push
insl
jg
push
add
sub
jb
testl
cmp
incl
cs
fdiv
sub
xlat
jo
mov
cmp
fs
shll
cmp
push
fwait
test
push
sub
mov
andb
dec
pop
jbe
es
sub
cs
or
hlt
enter
dec
stos
in
sub
push
lret
xchg
adc
add
imul
add
mov
lock
test
sub
pop
dec
mov
ret
add
xor
hlt
lods
fidivl
push
pop
and
or
or
cld
and
jbe
inc
or
aam
xlat
xor
in
ror
sarl
xor
mov
mov
outsb
adc
ss
mov
stos
nop
stc
enter
add
lods
add
xor
nop
or
scas
inc
scas
movsl
fstpl
pop
cli
cltd
das
scas
aam
add
ljmp
jl
ret
xchg
adc
gs
pop
push
mov
and
jo
rclb
fsts
out
add
xchg
pop
fidivs
push
xor
aaa
out
loope
nop
adc
rorl
lret
movb
dec
scas
push
sbb
pop
jecxz
enter
push
cli
adc
dec
icebp
push
shl
and
push
shl
pop
test
cltd
cmovno
sub
dec
jbe
pushl
scas
inc
mov
inc
pop
pop
sbb
adc
xor
lret
adc
mov
in
clc
jne
mov
test
mov
jmp
push
psllw
ret
fidivs
lods
cld
pop
movsl
mov
xor
clc
or
inc
pushf
dec
mul
push
inc
out
jbe
inc
mov
jae
pop
mulb
xor
ss
push
inc
pop
jnp
movsl
pop
ss
push
pop
push
inc
sub
sbb
jecxz
pop
push
inc
repz
into
adc
xchg
popa
xchg
imul
in
mov
in
sbb
cmpsl
or
inc
arpl
lcall
addl
rcl
jae
adc
or
mov
ljmp
clc
pop
inc
xchg
pop
in
repz
mov
in
je
cmp
out
int3
out
js
cli
and
test
mov
es
sub
in
out
mov
xchg
imul
aam
inc
mov
sbb
mov
pop
dec
mov
into
mov
shrl
xor
fwait
push
inc
sbb
xchg
fnstsw
in
dec
and
outsb
push
stos
adc
adc
mov
lret
adc
mov
xchg
mul
aam
orb
in
scas
mov
sub
add
sbb
mov
or
pop
adc
inc
adc
and
outsl
cmp
and
mov
loop
mov
fmull
shl
in
push
enter
push
push
dec
or
ss
mov
push
imul
or
pop
in
push
sbb
add
fisubrl
and
or
push
ja
mov
adc
adc
cmp
lods
mov
and
stos
jne
in
sbb
lea
and
mov
fisubrs
or
and
pop
inc
stc
jmp
cmp
xchg
jae
jp
into
decb
mov
sahf
xchg
jne
dec
insl
aam
loope
popf
pop
aad
mov
or
jbe
int
sub
or
inc
lock
jns
jbe
bound
movsb
mov
mov
gs
sbb
xchg
mov
in
lock
std
mov
das
add
ja
leave
xor
mov
cli
sti
popf
shrl
push
or
in
and
mov
jl
je
mov
xchg
mov
cmp
jae,pt
pop
lock
cli
mov
psllw
out
dec
sbb
pop
add
adc
int
ret
mov
inc
jnp
lret
test
sub
movsl
outsl
add
sub
dec
cmp
mov
mov
inc
aas
sbb
je
jge
movsb
aam
sub
mov
pop
cli
xchg
test
inc
sub
test
xor
and
mov
mov
dec
xchg
out
into
push
jle
fsubr
adc
mov
mov
out
stc
insb
mov
push
sbb
nop
jo
cmpsb
rolb
add
js
daa
and
mov
popf
gs
pushf
dec
xchg
out
sti
mov
aaa
inc
movsb
xor
out
pop
jg
push
repnz
les
cmp
test
pop
lcall
lods
fidivrl
mov
das
push
mov
sbb
int3
fptan
iret
fldcw
sub
mov
sub
addb
push
and
mov
fidivs
decb
std
xchg
xlat
jmp
sub
cltd
fiadds
test
mov
and
shll
aas
inc
or
push
push
cltd
jle
dec
lods
and
sti
xchg
cwtl
jmp
insb
iret
or
xor
addb
add
ss
mov
jnp
mov
ret
and
jecxz
test
mov
inc
adc
adc
jne
fsubs
pusha
stc
jo
sbb
out
stos
adc
add
aaa
inc
ret
dec
in
test
jg
loopne
jo
shl
ja
pop
add
mov
inc
push
mov
stos
push
leave
data16
cmp
push
addr16
sub
aam
sti
lahf
cmpsl
mov
sbb
lock
imul
insb
loopne
dec
fimuls
cmpsl
jno
inc
mov
xor
jle
push
jno
pop
xlat
mov
mov
in
sub
add
call
push
add
stos
sbb
jo
out
mov
add
xchg
cmc
lock
and
pop
add
movsb
sub
mov
xor
pop
test
js
cwtl
out
outsb
adc
ficomps
mov
test
mov
inc
cmp
daa
sub
adc
flds
jae
adc
pusha
mov
and
rclb
int
pop
inc
sub
shrl
mov
and
pop
or
lcall
pusha
bound
pusha
and
inc
test
push
scas
sahf
mov
into
loope
movsl
test
fiadds
xchg
jecxz
add
jne
inc
cmc
or
sahf
arpl
xor
imul
or
mov
aad
pop
fdivs
bound
mov
aaa
mov
js
icebp
repnz
dec
mov
jp
inc
add
xchg
xchg
mov
dec
push
aam
push
push
out
out
push
pop
lods
loope
pop
mov
xor
fdivr
jmp
mov
cmp
pop
mov
pop
sub
or
jns
leave
aad
inc
xor
insb
lret
add
sbb
mov
xchg
fldcw
stos
xchg
sub
adc
lret
leave
and
int3
mov
shl
mov
sub
scas
sbb
ret
std
lea
add
push
pop
mov
lods
adc
jge
jno
arpl
or
mov
push
mov
mov
shr
cmpsl
push
push
mov
addr16
jmp
adc
js
mov
pop
idivb
call
and
not
cmp
lcall
mov
jg
ror
xor
rol
jo
pop
cmp
xchg
scas
and
pop
ljmp
inc
nop
pop
ss
mull
pop
mov
sbb
cmp
sbb
sbb
std
aaa
sarl
pop
xchg
dec
xor
dec
xor
sbb
dec
daa
ds
jb
iret
mov
sub
sub
mov
jl
mov
es
loope
push
imul
fptan
cmpsl
push
scas
cs
dec
pop
cwtl
adc
std
xchg
adc
test
imul
cmpsb
xchg
and
jge
push
jne
or
scas
xchg
pushf
xchg
sub
mov
das
pop
movsb
arpl
pusha
ljmp
in
push
rcrb
jmp
mov
jbe
xchg
lea
sbb
scas
pop
jecxz
jae
add
shrl
pop
jbe
add
add
and
into
lods
sbb
push
hlt
mov
cmp
push
pushf
fildl
or
cmpsl
pusha
ficompl
sbb
fadds
dec
or
pop
jmp
popf
out
xchg
jle
ss
ret
cltd
fidivrl
scas
inc
sbb
xor
clc
xor
lods
and
push
dec
stc
xchg
pop
add
call
pop
ret
flds
movsl
stos
pop
mov
mov
scas
lahf
ljmp
in
mov
lds
stos
and
stc
push
push
and
mov
jmp
mov
leave
or
and
push
mov
dec
loope
add
dec
push
ffreep
inc
xlat
hlt
push
mov
dec
jge
cli
leave
mov
and
out
sbb
daa
pop
lods
jb
jmp
sahf
push
ds
pusha
fsubrl
mov
leave
cmp
pop
int
mov
push
cmp
mov
sbbl
pop
cs
mov
dec
subb
out
add
inc
jae
and
and
pushf
or
and
roll
push
push
dec
notl
inc
xor
cmpsb
and
jecxz
xor
mov
mov
aaa
adc
sbb
cs
fxam
mov
pop
or
and
pop
jno
in
ds
push
cld
sub
ja
mov
dec
xor
mov
pop
dec
into
addr16
ds
ret
xor
dec
push
repz
aad
xchg
in
fidivl
bound
mov
lds
push
pop
sub
or
cld
lret
jl
push
enter
stc
push
and
dec
imul
sub
out
push
mov
sub
and
aad
cmpsl
int
fistps
jnp
mov
pop
into
sub
cmp
dec
sub
xchg
rdmsr
nop
mov
fnstcw
movsl
fs
dec
aad
mov
test
xchg
push
adc
je
cwtl
pop
repnz
in
cmp
xchg
jl
inc
mov
out
imul
mov
xor
inc
pop
bound
lds
xchg
cltd
pop
jl
or
mov
shlb
xchg
xor
push
negl
mov
rcrl
inc
or
sub
sbb
or
mov
popa
cs
pushf
xchg
loopne
int3
pusha
ret
xor
andl
pusha
inc
mov
pusha
and
and
mov
push
inc
xchg
imul
mov
imul
adc
push
pusha
je
test
fnstcw
push
into
mov
pop
xchg
jb
movsb
xorb
orl
test
lock
adc
das
enter
pop
xlat
sbb
jp
pop
sub
adc
cmp
add
push
je
movsb
ja
pop
and
sub
mov
mov
push
arpl
sti
pop
inc
cwtl
in
sub
icebp
adc
nop
addb
aas
popf
push
adc
ljmp
ret
and
test
ljmp
sti
popf
push
dec
aad
dec
leave
adc
lahf
xor
hlt
fs
mov
mov
lahf
add
mov
cmc
lds
js
mov
dec
popa
jl
imul
sbb
cmp
lock
sbbb
enter
lret
pop
shlb
in
xor
shlb
adc
push
push
mov
lods
loop
sbb
in
inc
sub
cwtl
es
nop
test
xchg
push
add
adc
sbb
jns
fwait
jo
push
jb
pop
xchg
stos
in
pop
mov
test
jge
xor
or
fcompl
outsl
jl
sbb
imul
out
shlb
stc
mov
and
shl
loopne
sahf
lret
cmp
cmpsl
jp
dec
sbb
cmp
addr16
lret
shll
lret
mov
xchg
xchg
lds
mov
or
or
adc
pop
xor
xchg
push
mov
nop
mov
repnz
jo
dec
lods
xor
pop
lods
iret
cmp
mov
scas
add
inc
imul
push
pop
pop
cmpsb
cltd
pop
push
daa
out
repnz
ret
dec
out
xor
lret
mov
xor
xor
mov
js
popf
lods
lock
loopne
xor
shl
iret
jns
adc
ja
popf
jmp
sub
aam
stos
lds
push
sbb
cmp
or
adcl
sbb
hlt
outsb
mov
js
push
mov
lret
add
ljmp
push
icebp
lods
pop
mov
in
mov
mov
testb
jecxz
inc
jb
dec
scas
lldt
add
or
fcoml
fistl
push
cmp
or
ds
jmp
lret
clc
jne
xchg
lods
jne
gs
fwait
lret
inc
add
test
shl
into
leave
jnp
fwait
lods
or
iret
in
inc
or
je
pop
jns
jle
jns
fs
and
rcl
push
cmp
in
cmpsb
sbb
mov
lock
pusha
es
ja
mov
out
data16
outsb
sub
pop
mov
lods
js
fs
scas
push
subl
fsubrl
stc
pop
mov
xchg
stc
cmp
test
xor
xchg
fisttpl
dec
insl
xchg
dec
es
scas
vmaxps
js
ret
push
xor
ds
jmp
inc
inc
mov
cmpsl
mov
out
push
cmp
push
adc
xchg
pusha
fs
dec
dec
int
pop
sbbl
dec
mov
mov
aaa
bound
int
mov
ljmp
sbb
pop
mov
mov
xlat
dec
cltd
insb
mov
ficoml
iret
or
addr16
pop
xchg
mov
aad
fsubrl
arpl
sar
std
push
or
add
mov
dec
push
fnstcw
and
out
jns
pop
bound
hlt
jns
or
sbb
rcll
xor
mov
std
aad
dec
jne
dec
mov
pop
push
jp
cmp
iret
or
mov
or
fsubs
xor
inc
clc
mov
xor
adc
inc
lea
jbe
aaa
jmp
inc
loopne
xchg
imul
jg
shl
lahf
cmp
rorl
lcall
xchg
push
pop
dec
mov
loop
pop
daa
and
mov
and
mov
and
push
lcall
push
adc
and
sub
orb
xlat
scas
push
jb
push
jne
ljmp
stc
inc
das
sub
mov
dec
negb
out
dec
adc
push
xor
sahf
ja
mov
inc
rorl
cmp
loop
and
imul
adc
inc
and
sarb
add
les
insl
cmp
std
jp
popf
push
fnsave
sub
pop
pop
sbb
mov
inc
cmp
dec
out
hlt
pushf
xor
sub
mov
pop
sti
jge
lret
fsubrl
xlat
xchg
cltd
mov
push
dec
movsl
xor
jnp
inc
testl
push
arpl
js
jo
push
inc
aad
mov
mov
repz
fimull
xchg
sbb
stc
mov
xchg
adc
andl
sbb
inc
pusha
dec
mov
scas
jge
pop
and
in
sub
mov
addr16
jno
std
xchg
scas
movswl
loop
je
adc
aam
rcrl
dec
jae
and
adc
sahf
mov
xchg
cmp
enter
mov
mov
movsl
je
sarl
mov
adc
aaa
xchg
addr16
in
loop
xchg
iret
mov
aam
mov
dec
sahf
fsubrs
mov
or
adc
mov
pushf
mov
sbb
pushf
push
repz
push
push
es
nop
test
sbb
inc
pop
fdivs
test
adc
pop
jbe
mov
stos
aad
cli
das
cltd
fisubrs
adc
js
xor
es
xchg
jmp
imul
cmp
sub
or
inc
int3
addb
xchg
jecxz
mov
lds
xchg
and
pop
push
sub
and
and
bound
push
pop
scas
mov
loopne
lea
cmp
dec
and
pop
adcl
sbb
js
ja
mov
popf
cs
cli
and
push
add
mov
jecxz
popf
call
pusha
and
pop
mov
jmp
push
adc
loop
fadds
lea
call
insl
push
pop
out
push
notb
mov
stos
outsl
ret
inc
ss
lock
mov
and
adc
out
les
or
je
xor
in
insb
aad
mov
sbb
push
fimuls
int3
push
arpl
adc
les
add
push
orl
ror
dec
arpl
jbe
js
sahf
xlat
mov
popa
clc
sbb
imul
scas
and
sub
sub
rolb
mov
shlb
sbb
mov
mov
push
lods
inc
add
in
add
ret
inc
stc
sahf
xchg
jle
dec
sub
test
dec
movsb
test
dec
pop
or
push
les
jle
mulb
mov
arpl
cmp
pop
sti
enter
stc
cmp
mov
rorb
push
repz
lock
xchg
xor
fimuls
aas
inc
test
jno
push
push
clc
mov
dec
mov
mov
aam
mov
mov
sti
aad
xor
das
sti
lods
sub
repz
xchg
nop
push
pushf
or
cmpsl
das
dec
gs
in
jecxz
adc
adc
cmp
pop
push
dec
inc
cmc
push
lahf
cmp
sbb
andb
hlt
stos
mov
int3
ror
fwait
cmp
dec
cmp
jb
sarl
ljmp
dec
xor
in
cltd
or
icebp
mov
in
cwtl
adcl
pop
je
xor
mov
push
frstor
mov
les
outsl
inc
sub
cmpsl
andb
push
ss
ret
pop
pop
mov
out
xchg
aad
negb
lods
dec
jns
inc
mov
lods
cmpsl
dec
out
add
xor
orb
loope
popa
pop
iret
inc
sub
inc
iret
clc
dec
and
dec
ss
dec
mov
add
mov
xor
outsl
mov
jno
pop
icebp
inc
push
bound
xchg
mov
dec
ret
adc
cld
dec
sbb
out
mov
rolb
in
sub
int
sti
jge
test
es
iret
ja
sbbl
mov
sbb
cltd
dec
cld
in
mov
inc
add
inc
data16
sahf
cwtl
push
add
pop
pop
inc
stos
mov
or
mov
scas
mov
aas
fwait
repnz
or
jo
outsb
xchg
pop
int
pop
push
out
aad
stc
pop
enter
or
repnz
fsubl
fldt
push
jmp
cmpl
mov
shrb
js
leave
xorb
mov
cmp
inc
pop
jo
hlt
das
std
or
adc
fsin
xor
shrb
fbstp
mov
enter
lcall
hlt
out
fsub
and
dec
jge
push
adc
xor
jge
pop
test
xchg
fisubl
mov
fs
sti
stc
dec
fs
out
mov
lds
add
aaa
and
lds
mov
sub
push
fstpl
xchg
loop
sbb
insl
fimull
push
popa
add
test
add
cltd
dec
xchg
cmp
mov
das
gs
imul
enter
int
sti
sub
aas
in
mov
int
or
fs
sarl
aaa
jbe
mov
test
rcrb
push
shll
fsubr
or
daa
push
mov
ret
mov
fwait
and
rcl
xor
loop
notb
jge
push
cmp
sbb
push
add
mov
pop
fdivs
cmpsl
std
jns
inc
or
repz
jo
jmp
mov
shr
ret
push
xor
xlat
incl
add
jg
push
sbb
pop
int3
sub
dec
lcall
xchg
add
inc
cwtl
xor
sub
int3
jle
inc
fldenv
jg
out
out
cmp
xor
sti
mov
lods
fbstp
pushl
and
push
enter
out
and
cli
and
adc
lods
add
imull
lods
test
in
iret
or
mov
call
pop
mov
add
jp
into
xchg
and
mov
movsb
xchg
mov
insb
pop
gs
repz
cli
pop
xchg
iret
scas
scas
push
and
xchg
cmpsl
inc
xor
add
add
leave
test
stc
or
sbb
fisttpl
push
and
mov
in
cmp
push
xchg
cmp
repnz
lods
cmp
movsl
sub
stos
xor
mov
gs
ljmp
lret
jp
test
mov
xor
pushf
orl
push
fucomp
and
in
ret
dec
mov
data16
arpl
mov
mov
sub
jmp
sarb
mov
sti
ljmp
jne
mov
or
jmp
imul
shlb
sub
push
sahf
das
inc
enter
mov
in
pop
pop
dec
arpl
lock
mov
lods
cmc
call
xchg
sbb
mov
xor
bound
mov
inc
pop
loope
mov
inc
in
jle
pop
in
sub
adc
or
lret
lods
filds
sbb
lds
adc
inc
fiaddl
adc
popf
icebp
ja
adc
inc
lock
fmull
push
cs
pop
dec
xchg
jg
mov
sbb
pop
xor
mov
adc
test
shlb
or
popa
mov
cltd
adc
sbb
adc
into
xor
and
int
iret
sbb
test
out
hlt
sub
shll
add
pop
aam
and
push
or
mov
mov
mov
or
push
inc
inc
push
dec
fbstp
add
dec
adc
daa
jnp
push
dec
xchg
stc
jns
pusha
add
inc
in
mov
push
xlat
push
pop
aas
or
and
adc
push
mov
hlt
sahf
jecxz
divb
adc
mov
pop
dec
push
and
bound
rcrl
lods
loopne
bound
add
fmuls
dec
pushf
flds
fwait
sub
ret
ret
add
inc
mov
add
and
mov
push
xlat
push
mov
add
ret
sub
pop
push
mov
sub
vandps
mov
in
xlat
movsl
xlat
or
sti
jp
cmp
clc
inc
loopne
stos
lret
xchg
loop
add
test
lds
gs
mov
inc
or
lea
mov
inc
pop
fldcw
ret
fs
mov
cmp
push
push
imulb
in
cmp
sub
cmp
mov
je
mov
lods
in
stc
mov
and
aam
jecxz
adc
sbb
call
or
cmp
sbb
fsubrl
fistpl
movsb
sub
inc
mov
movsb
cli
iret
stos
push
push
push
cwtl
lods
pinsrw
cmp
fstl
bound
mov
mov
jno
pop
pop
jbe
inc
jle
enter
or
xchg
cmc
add
ljmp
loope
jbe
cmp
jb
lock
sub
push
or
loop
add
push
int
and
pop
sbb
dec
dec
mov
fistpl
andl
mov
test
hlt
inc
aas
jg
out
or
cmp
push
pop
xor
stc
data16
cltd
fs
leave
shll
ds
movsb
mov
movsl
xchg
clc
sub
jecxz
pusha
std
push
mov
das
rol
pop
cmp
es
sti
pop
ss
sub
ja
xor
aas
jno
stos
mov
adc
jb
lcall
mov
add
out
mov
divl
fdivrs
push
mov
ror
add
xchg
ja
and
nop
cmc
cmp
out
jne
xor
sbb
popf
or
xor
out
mov
and
mov
jg
xchg
xchg
in
ret
dec
inc
mov
fildll
iret
jle
sbb
dec
jecxz
ljmp
jge
cmp
mov
pop
xchg
pop
dec
and
icebp
push
lock
aad
xlat
add
sbb
cmp
test
dec
adc
xor
jg
clc
mov
mov
cmp
arpl
and
pop
mov
adc
dec
das
jo
xor
popf
inc
xor
jnp
enter
sti
scas
stos
xchg
ja
and
es
pop
add
mov
inc
cmp
arpl
sbb
adc
pop
cli
int3
add
adc
add
movsl
aad
or
sub
jae
sti
mov
lea
nop
enter
pop
mov
dec
jae
mov
test
and
xchg
cmp
loopne
dec
pop
pop
jno
push
mov
icebp
std
int3
mov
das
dec
push
mov
mov
pop
pusha
ja
lret
pop
mov
outsb
jb
mov
adc
mov
xchg
push
cmp
mov
popf
mov
mov
jp
and
shrl
jg
mov
arpl
add
mov
jb
fdiv
out
jns
jo
xchg
ds
iret
enter
mov
popf
mov
stos
mov
dec
xchg
inc
cli
scas
cmp
stc
mov
mov
add
pop
mov
dec
pop
or
xor
fstl
add
jg
int3
out
shlb
imul
nop
jecxz
mov
cmpsb
shll
je
hlt
enter
xchg
add
iret
aaa
adc
xchg
jg
ljmp
std
out
mull
out
xor
xor
mov
jecxz
sub
mov
iret
inc
repnz
cmp
mov
mov
or
out
bound
adc
arpl
mov
pusha
out
gs
outsl
add
jecxz
xchg
inc
dec
inc
jno
mov
mov
iret
in
fmulp
test
jp
xchg
in
xor
mov
push
sbb
test
jecxz
jle
push
rol
call
pop
je
jne
daa
aaa
rcrl
or
arpl
in
fwait
imul
xlat
hlt
jmp
andb
cwtl
arpl
sbbl
cli
mov
sahf
cmpsb
in
test
fs
int3
fiadds
sub
sahf
dec
cltd
pop
jl
movsb
aad
inc
xchg
dec
leave
pop
cmp
ficompl
mov
or
aam
cmp
cmp
sbb
leave
push
or
pop
jno
push
orl
outsb
out
push
jp
loopne
pop
pop
in
mov
dec
jg
cmp
dec
inc
lret
xchg
ret
cmc
icebp
in
pop
sbb
pusha
fs
cmp
enter
push
cmp
mov
or
cmpb
loope
xchg
mov
xorb
xchg
xchg
out
scas
or
cmp
adc
push
mov
adc
mov
mov
aam
movsb
mov
cmp
test
sbb
cmp
test
pop
rcrb
jecxz
xor
mov
loop
stos
aaa
test
stos
push
sub
mov
push
out
into
and
cmp
inc
mov
mov
inc
dec
out
incl
gs
cli
sub
push
aas
and
scas
subb
sub
add
fldcw
pop
out
test
xor
mov
enter
xor
rorl
xor
jae
pusha
lcall
and
lret
jbe
pop
push
imul
adc
icebp
inc
push
mov
push
sub
hlt
and
xchg
xchg
scas
add
and
loopne
jns
push
push
lea
jb
loope
daa
or
gs
xlat
sbb
int3
test
pop
push
mov
ljmp
sub
sub
xor
jbe
jmp
or
jmp
jecxz
dec
xor
mov
mov
pop
jecxz
inc
mov
dec
pop
lods
ljmp
add
cltd
xor
inc
aas
adc
repz
call
loopne
popf
or
push
push
inc
push
cli
repz
out
mov
push
and
push
mov
mov
loop
repz
sti
xchg
xchg
and
jne
or
in
sarb
inc
adc
ljmp
pop
shlb
movsl
inc
mov
pushf
pusha
stos
dec
enter
ljmp
sbb
sub
orb
xor
shll
lcall
or
pop
adc
sbb
adc
ret
leave
adc
lcall
mov
cmp
iret
sbb
jmp
adcl
xchg
mov
movsb
cli
cmp
out
mov
dec
jbe
aam
jae
push
ja
cmpsl
pop
xor
repz
popa
je
ret
dec
ljmp
mov
xor
int
mov
inc
dec
ja
xchg
push
insb
mov
push
lret
mov
bound
or
mov
sahf
arpl
into
jmp
mov
ret
adc
sub
icebp
inc
and
js
sub
ret
add
sub
out
les
iret
imull
cltd
dec
add
ficompl
sub
ss
xchg
jl
mov
sbb
cmpsl
xor
mov
mov
lret
daa
inc
and
add
mov
push
aaa
xor
xchg
testl
cmp
mov
stos
fstpl
xchg
push
cmp
rolb
xor
mov
push
add
lahf
and
dec
adc
pop
mov
aad
dec
mov
jns
insb
cmp
cli
cmp
mov
inc
fdivrs
mov
xchg
xor
cmpsl
and
and
mov
lds
jae
dec
xchg
lods
aad
xchg
or
xchg
daa
icebp
pop
mov
mov
call
sti
mov
sub
and
int
pavgw
mov
inc
add
ja
je
pop
aas
cmp
insl
mov
xchg
je
push
lret
sarl
cltd
sarb
clc
pop
aas
add
jecxz
mov
cmp
mov
out
fwait
cld
movsb
cmp
test
lods
jnp
in
repz
jne
dec
ds
cmp
repz
mov
dec
out
std
xor
inc
xor
adc
push
cmp
subb
sub
pop
sub
rcll
mov
push
movsl
and
dec
sub
xchg
pusha
add
jne
jnp
mov
push
mov
inc
adc
xor
ret
mov
inc
call
add
cmp
aad
pop
pop
in
aaa
outsl
push
xchg
in
pop
xchg
cmpsl
jge
insl
push
push
mov
xlat
lret
das
in
lret
and
or
outsl
ret
xor
cmp
mov
icebp
imul
mov
scas
xchg
jne
xchg
sbb
mov
inc
jg
dec
jle
inc
and
cmpsl
data16
icebp
jp
lret
mov
jecxz
data16
jle
mov
pop
enter
mov
jne
push
sbb
nop
jbe
xor
repz
shrb
fs
cmpsl
xor
mov
sub
mov
jns
fldenv
mov
jge
jle
gs
test
pop
and
cmp
push
call
cmp
adc
mov
subb
decb
cmc
pop
pop
inc
pop
mov
es
pop
inc
or
lahf
jbe
lea
jecxz
in
cmpsb
adcb
test
mov
wrmsr
lret
movsb
int3
mov
xor
popf
ret
jne
gs
push
cmp
push
popf
sbb
ds
lea
call
fprem
xor
adc
imul
adc
adc
mov
aaa
gs
popa
out
inc
dec
int3
pushf
sbb
cld
xchg
in
sbb
mov
jo
sbb
dec
sub
inc
sub
cmc
lret
push
rcr
fstl
mov
test
jle
adc
es
maskmovq
imull
popf
arpl
test
ret
mov
and
mov
or
xlat
or
arpl
aas
ret
aam
nopl
sbb
or
adc
jecxz
or
jecxz
lret
ss
xchg
movsl
sbb
mov
inc
pop
test
jnp
rcrb
xchg
lods
rolb
inc
test
add
inc
adc
mov
mov
mov
js
xor
push
es
xor
push
dec
testl
cmpsl
dec
in
in
mov
jle
pop
shrl
pop
js
xchg
aaa
js
cmp
pop
pop
mov
pushf
movsl
in
sub
in
int3
fisubl
mov
xchg
lahf
pop
outsb
jnp
push
dec
adc
lock
cmpsl
call
jnp
lcall
dec
sub
cmp
movsl
sub
scas
scas
jp
and
ds
sbb
cld
jmp
xchg
inc
xlat
add
stc
jbe
ficoms
dec
and
sub
test
insl
dec
and
cmp
add
jbe
repnz
fs
sub
rcr
and
pop
cltd
mov
cmp
inc
sarb
jb
shld
loop
lea
jmp
jl
push
mov
icebp
pop
addr16
mov
loop
mov
jb
scas
xchg
and
inc
mov
lcall
sub
cmp
inc
repnz
fcomps
sub
mov
imul
arpl
out
repnz
adc
add
push
icebp
pop
ds
inc
sub
pop
test
jl
mov
sbb
jns
dec
or
push
int3
mov
jecxz
push
inc
test
popa
adc
mov
or
dec
add
cs
mov
mov
cmp
arpl
test
stos
sarb
fwait
cmp
popw
inc
sub
cwtl
cwtl
pop
mov
push
and
ret
scas
mov
mov
and
pop
lret
cld
aam
pop
xchg
daa
adc
div
jae
addr16
mov
xchg
add
jl
test
pusha
lods
aad
scas
data16
movsl
fisttpl
ret
jmp
xchg
pop
inc
xchg
out
decl
adc
jl
outsl
or
or
cli
push
add
lahf
jle
fstp
pop
mov
mov
pop
loopne
adc
divb
pop
sub
add
pop
xchg
push
rcrb
das
jge
aad
cli
sbb
jnp
loop
rolb
addb
jl
test
in
xchg
addr16
push
mov
das
movsb
push
aaa
cmc
sti
mov
mov
or
out
mov
sub
mov
dec
push
and
jecxz,pn
xchg
sub
gs
mov
pop
das
out
add
cmc
pushf
imul
outsl
adc
or
xchg
adc
stc
std
repnz
cmp
out
test
xor
mov
push
shlb
out
stc
aaa
mov
je
cmpsl
jne
rorb
sub
pop
ja
std
enter
fwait
sub
mov
or
pop
mov
cmp
clc
jg
mov
gs
dec
rcrl
xchg
inc
push
fnstcw
sahf
xchg
xchg
or
mov
jl
out
jb
adc
or
test
adc
inc
mov
pop
jae
data16
sbb
xchg
xor
jg
add
fadd
adc
and
ds
dec
popf
cmovs
loop
fstpt
out
or
pop
inc
icebp
or
test
scas
imul
push
pop
jnp
fs
ret
lret
jmp
fwait
outsb
pop
jp
insl
push
mov
adc
leave
xchg
sub
stos
scas
out
mov
jg
mov
mov
scas
insb
movsl
pop
movsb
xchg
or
pop
jnp
mov
flds
movaps
fcomi
adc
or
cmp
mov
mov
mov
cmp
rorb
iret
adc
mov
xchg
sbb
xchg
into
jno
stc
in
mov
fiadds
cs
inc
xchg
dec
dec
mov
adc
or
pop
or
xchg
sub
and
lods
lahf
mov
loopne
sub
sub
pop
mov
cmp
mov
cmpsb
fisubs
gs
lahf
mov
jo
add
shlb
adc
rclb
pop
gs
xchg
xchg
or
ss
cli
jno
lock
repz
adc
out
cmpsb
fcomp
sbb
jle
test
popa
xor
rolb
pusha
iret
and
pusha
or
ret
aas
dec
mov
pop
insl
cwtl
mov
mov
pop
push
jl
nop
outsl
call
push
shll
push
gs
lods
sti
loopne
inc
adc
loopne
cld
stos
inc
test
ljmp
push
hlt
aam
std
std
les
and
pusha
aad
or
cmp
es
push
sti
pushw
mov
int
jmp
into
jmp
ss
pop
adc
or
jmp
movsb
loopne
pop
test
cwtl
mov
lret
sbb
clc
mov
jecxz
enter
mov
mov
int3
adcb
jne
push
repnz
addl
jnp
jo
fsubr
sti
adc
inc
test
xchg
bound
inc
pushf
movsl
push
sub
arpl
adc
mov
in
push
fwait
test
leave
outsb
orb
cmp
mov
pop
pop
test
adc
add
imul
push
add
insb
and
jo
inc
adc
test
mov
iret
jno
test
out
sbb
or
jp
movsb
movsl
idiv
inc
and
addr16
repnz
and
mov
sar
jns
mov
rorb
cwtl
xchg
movsl
pop
fmulp
pop
and
outsb
pop
xor
pop
fwait
dec
pop
add
ljmp
or
dec
fs
aam
and
dec
aaa
mov
lret
push
lods
jge
mov
cmp
stc
leave
pop
js
jge
pop
test
shrb
push
aam
sar
stos
pop
stos
xor
sarb
es
loop
adc
sbb
sub
test
inc
jle
pop
adc
and
pop
cmc
stc
jmp
xor
ror
sub
add
imul
pop
jnp
jnp
fisubs
lods
movsl
pop
enter
aas
sbb
push
jbe
pop
insl
lods
push
mov
repz
jle
adc
jb
movsl
mov
push
sbb
outsb
xchg
or
shr
inc
sub
jbe
mov
out
lods
cs
in
cltd
fwait
leave
xchg
mov
and
pop
pop
cwtl
and
and
out
dec
ror
int
mov
inc
adc
mov
pop
popa
arpl
and
iret
jp
jp
scas
je
mov
adc
or
xchg
sbb
mov
dec
cmc
sbb
ljmp
hlt
jg
fcompl
int
or
dec
or
mov
and
test
jg
aaa
std
insl
adc
add
arpl
adc
movl
dec
mov
fimull
fmuls
dec
inc
mov
or
push
mov
lods
cwtl
sahf
ljmp
popf
lret
hlt
shlb
mov
xchg
daa
or
nop
xchg
mov
cmpsl
xchg
push
jmp
inc
push
dec
push
in
das
mov
je
mov
lcall
sarl
cltd
or
pop
mov
jl
orl
jmp
push
push
aam
rol
xchg
adc
rclb
ret
ret
jecxz
in
push
mov
jae
push
cwtl
jge
call
adc
call
mov
icebp
lcall
lret
ljmp
stos
arpl
xor
and
xchg
ds
fiaddl
xchg
jp
mov
mov
jnp
je
mov
push
push
rol
push
les
cld
dec
and
sbb
jge
adc
pop
test
push
rol
cmp
mov
and
mov
in
fisttpl
mov
jne
jae
sti
int
jecxz
jbe
stc
je
xchg
shlb
lods
out
imul
imul
cmpsl
dec
add
adc
dec
push
ds
popa
sub
imul
lock
pushf
dec
jmp
mov
mov
sbb
aam
push
or
mov
jle
xor
sub
lods
adc
in
fstpl
cmp
cwtl
stos
imul
out
aam
push
sti
mov
pop
or
ds
test
push
dec
mov
sub
test
xchg
adc
xchg
cld
arpl
mov
mov
popa
les
imul
jo
sahf
lcall
xchg
in
or
rcrb
out
out
xchg
out
es
scas
mov
dec
jno
and
jg
fldcw
test
mov
out
mov
push
pushf
sbb
jb
sbb
repnz
adc
std
insl
push
push
ja
shrb
cmp
lods
shrb
xor
in
mov
and
sbbl
jg
mov
test
and
out
movntq
or
cmc
xchg
int
inc
mov
or
mov
rcrb
xor
mov
push
mov
fldl
inc
sub
inc
adc
inc
popf
ljmp
dec
push
ljmp
dec
or
bnd
stc
or
ret
adc
test
cmpsb
cld
loopne
pop
or
iret
fwait
xor
dec
xchg
cld
lea
sub
push
and
outsb
fdivrs
stos
inc
in
cmpsb
adc
mov
rolb
popa
cs
pop
in
shr
sbb
or
xchg
sbb
mov
leave
enter
pop
lods
nop
inc
popf
add
ret
adc
test
lahf
rcrl
lret
jl
mov
xlat
cwtl
push
nop
inc
fsubr
adc
ret
cmp
jae
mov
mov
inc
out
je
dec
sti
adc
fucomp
push
in
div
mov
pop
and
dec
xchg
out
iret
frstor
fs
stos
and
dec
jmp
cmp
cltd
add
loop
nop
scas
xlat
or
lock
push
clc
or
cmpl
decl
inc
test
xchg
leave
xchg
sbb
nop
mov
and
das
sarl
cmp
imul
rcr
sub
mov
ja
lods
leave
sub
push
jge
mov
jge
stos
and
fstl
movsl
add
je
mov
mov
inc
mov
loopne
cli
jecxz
addr16
sbb
loop
xor
mov
jl
and
fcomi
xor
nop
cmp
jl
push
xchg
mov
inc
mov
dec
call
nop
in
and
mov
push
fwait
sub
push
outsl
pop
pop
mov
xlat
stos
or
jecxz
clc
mov
push
inc
outsl
and
add
cli
push
and
test
xchg
es
xor
push
movsl
and
mov
incb
jg
xabort
mov
ss
mov
and
sti
mov
xchg
sub
pop
pop
shl
dec
outsl
ljmp
int
idivl
gs
cli
decb
mov
jo
jecxz
rorl
pop
sub
cwtl
daa
adc
and
add
pop
inc
mov
adc
loopne
pop
insl
or
fcomps
and
pop
bound
sbb
daa
stos
movsl
add
aad
fistpl
dec
lahf
mov
xor
rorl
xor
xorb
add
pop
scas
mov
int3
push
sbb
ret
and
int3
pop
mov
pop
lret
jl
xchg
fimuls
insl
scas
or
jp
in
orb
xchg
and
cmp
dec
jnp
lds
out
lret
outsb
add
xor
jae
push
dec
cmpsl
and
jbe
sub
jno
adc
xchg
movsl
outsl
dec
adc
mov
jb
sarb
jb
loopne
push
push
cwtl
mov
movsl
sub
add
xor
loope
lcall
iret
xchg
xor
push
loopne
cmpsl
data16
scas
das
aam
pop
sub
push
inc
mov
sub
cmp
mov
push
shrb
lcall
lret
pop
xor
or
cmp
mov
ljmp
xchg
mov
je
lret
jmp
adc
xchg
imul
mov
mov
mov
and
popa
cltd
pop
int3
adc
xchg
adc
cwtl
stc
cmp
mov
test
pop
pop
mov
sub
dec
loope
sbb
hlt
sti
aaa
rolb
mov
std
xchg
mov
ja
sahf
lahf
test
mov
inc
adc
add
adc
jp
cltd
lea
leave
dec
dec
push
daa
loope
and
loopne
ss
das
imulb
outsb
scas
iret
out
cltd
xchg
jg
in
push
insb
jbe
int3
mov
das
cs
or
addr16
push
popa
neg
enter
cmpsb
cli
iret
inc
test
jp
ficompl
jmp
popf
stos
imul
cld
cmp
cltd
lock
or
lahf
addr16
outsl
pop
lea
aaa
inc
js
sbb
xchg
jbe
cld
int3
dec
or
add
fnstcw
stos
xchg
or
repnz
daa
lea
dec
in
inc
push
mov
sub
movsb
ret
mov
inc
fcoms
ret
mov
arpl
stc
sub
out
inc
fstpl
and
or
movl
mov
sub
adc
adc
sbbl
test
mov
nop
mov
lret
cmpsl
xchg
ss
es
or
mov
test
mov
pop
inc
out
add
and
xor
mov
jecxz
arpl
inc
stc
jnp
jl
stos
imul
arpl
cmpsl
pop
movsl
movsb
lret
inc
mov
xchg
aaa
orb
cmp
test
inc
sti
xlat
dec
fwait
sbb
add
sti
xor
ds
lods
testb
scas
xor
mov
std
outsb
and
mov
mov
inc
xor
inc
mov
aam
ret
icebp
fbstp
sub
and
push
out
jb
lcall
pushf
push
outsb
inc
in
bound
mov
ffreep
lret
adc
bound
mov
mov
push
xchg
xlat
hlt
int
adc
cmp
cmp
ss
push
bound
je
outsl
push
out
xor
jo
mov
loop
aaa
ljmp
adc
pop
int3
out
cli
shl
jno
lahf
fnstenv
or
pop
ljmp
push
add
shl
loopne
lods
mov
out
int3
imul
test
sub
cmpsl
mov
das
push
xor
push
icebp
or
jecxz
push
mov
ret
int
adc
add
jbe
lret
rcrl
shll
mov
jmp
mov
xchg
addr16
jge
in
dec
outsb
pop
fidivrl
repnz
inc
aaa
mov
dec
pop
sbb
mov
pushf
dec
push
or
pop
cmp
aas
mov
dec
xchg
and
xor
rdmsr
or
pop
mov
shl
fstpl
fmull
push
rorb
dec
or
fcoms
scas
outsb
or
jne
lcall
push
lock
sahf
adc
insb
popf
xchg
out
iret
push
dec
and
insl
pop
lods
rcrb
push
fs
jmp
loope
into
rorb
mov
and
or
cmp
inc
fdivs
push
stos
cmp
mov
fsubp
jmp
push
lret
les
repnz
stos
add
enter
jecxz
fimull
aas
insl
push
mov
sub
push
push
jge
insl
addl
jle
mov
jne
mov
mov
mov
push
push
movsl
inc
xchg
in
es
loope
mov
push
mov
xchg
repnz
mov
loope
push
mov
pop
sbb
nop
insl
dec
sbb
push
outsb
xor
and
lods
jns
jb
inc
stos
fistl
test
adc
scas
pop
aad
or
sbb
and
cmp
fisubrs
test
sbb
push
in
cmp
cld
add
das
scas
mov
addr16
rcll
cli
rclb
jge
push
je
mov
and
in
xor
arpl
dec
int
test
sahf
andl
outsb
mov
fucom
dec
fs
mov
and
jne
iret
sub
or
les
insl
jmp
pop
push
cmpxchg
in
lret
mov
into
popa
xchg
xor
movl
push
jnp
sbb
mov
lods
push
lahf
ror
sbb
js
data16
cmp
ds
loop
dec
jp
bnd
xchg
out
mov
adc
lds
mov
movsb
test
sti
out
jge
jnp
and
mov
mov
mov
aas
pushf
jno
imulb
notb
fnsave
dec
pop
push
push
dec
sub
in
test
popa
popa
lcall
les
repnz
in
adc
sub
push
fnsave
addl
dec
jg
pop
notl
push
ret
lds
and
sub
pop
or
mov
xchg
scas
jle
orb
cmp
mov
lret
xchg
mov
mov
xor
je
cmc
mov
out
push
and
mov
mov
out
mov
xor
push
outsl
push
and
stos
std
xor
out
xor
add
inc
jo
subl
nop
in
xchg
inc
xchg
enter
mov
in
out
jp
inc
fbstp
inc
sahf
pushf
stos
xchg
sbb
push
xchg
jns
daa
lret
fs
lds
push
push
jo
add
mov
fmuls
or
popa
fs
fsub
lret
das
push
gs
pop
stc
push
fidivl
push
sahf
icebp
mov
mov
or
scas
or
imul
inc
fwait
imul
pushf
aam
leave
inc
or
mov
arpl
fdivrl
pop
pop
ja
repz
icebp
mov
sbb
int3
outsb
cmp
cmc
and
jns
and
in
lods
call
cmpl
lcall
or
dec
xchg
daa
mov
or
cld
ret
ljmp
fcomps
and
lods
lea
popl
pop
aad
sub
add
jg
lock
push
mov
negl
push
int
push
jno
andb
imul
push
sti
int
adc
or
popa
int3
xchg
mov
fadds
ljmp
push
cld
loop
cmp
jge
outsl
test
je
cmc
push
mov
jmp
insl
fcoms
fcomip
mov
jns
xor
je
test
je
loope
mov
stc
int3
and
fdivrp
lock
jl
push
cmp
mov
sbb
pushf
sbb
xor
push
test
sub
add
lcall
into
jnp
mov
mov
dec
out
push
add
sbb
add
mov
dec
mov
push
std
sub
aad
aas
sub
out
mov
pop
sub
ret
push
imul
rorl
aaa
lahf
inc
js
xchg
in
imul
fld
mov
lock
dec
daa
out
xchg
gs
push
lahf
xchg
mov
test
mul
test
scas
cmp
rcrb
daa
cmpsl
scas
cmp
and
popf
mov
les
or
xchg
sub
rorl
pop
mov
dec
push
push
cmp
inc
out
ljmp
jbe
js
or
mov
add
sub
xor
das
scas
mov
jg
test
push
inc
cmpl
sbb
sahf
mov
cld
push
andl
cmpsb
adc
inc
les
sub
adc
cmp
pop
mov
add
sub
daa
lods
das
fisubrl
mov
pop
inc
inc
inc
push
leave
sub
loopne
dec
cmp
mov
popf
loop
jne
repnz
pop
scas
mov
rcpps
jae
mov
sbb
popaw
rorl
dec
movsl
stc
int3
pop
and
xchg
inc
push
and
mov
push
aad
inc
xor
lock
jmp
insb
fucomip
pop
xchg
jl
jmp
cmpsb
or
jns
shlb
jg
mov
adc
bnd
in
pop
adc
inc
xchg
aaa
dec
push
and
cmc
adc
or
sahf
push
push
fucomi
jge
dec
movsl
mov
shlb
xchg
push
adc
lds
push
xchg
and
or
repz
jo
cwtl
or
nop
push
and
fldl
add
mov
add
je
dec
push
int
aas
lret
jne
bound
lret
xor
icebp
and
jl
movsl
jno
js
dec
sub
add
sub
movsl
mov
pop
xor
movb
and
pop
jne
lahf
or
jnp
mov
ret
or
daa
xor
mov
lahf
dec
dec
jae
in
cmp
stos
and
cmp
xor
inc
cmpsl
cmp
mov
inc
sahf
stos
xchg
in
ret
insl
inc
jne
mov
xchg
mov
add
jbe
out
loope
icebp
pop
xchg
stos
fildll
gs
mov
addr16
fisttps
xchg
nop
mov
jmp
jg
notb
ret
imul
pop
xchg
push
int3
mov
push
mov
sub
cmc
out
insl
hlt
push
jno
cli
inc
mov
mov
push
jno
test
lret
call
pop
lret
movsl
inc
inc
jge
jle
adc
imul
shlb
jmp
jp
je
push
incb
and
mov
insl
jg
and
or
sbb
xor
movb
and
fcmovne
sbb
addl
xchg
mov
mov
fists
fs
sub
cmpsb
pusha
outsb
mov
push
je
lret
bound
aad
andl
xchg
sub
mov
jns
out
dec
subl
pop
subps
fistps
mov
mov
loop
test
cld
lret
ficoml
and
test
scas
xchg
ljmp
sub
popa
or
ds
xchg
xchg
jo
ds
and
add
mov
jo
sbb
and
nop
lds
popa
sbb
int
mov
cmc
sbb
iret
adc
xorl
push
mov
sub
aad
lret
sub
xchg
xor
fildl
call
sbbl
pushf
aad
mov
lret
push
pop
push
in
mov
cmp
cwtl
jge
cmpsl
ret
fisubrs
jecxz
dec
rorl
cmp
insb
daa
dec
addr16
addr16
mov
loope
rcrl
test
push
add
rolb
insl
add
in
cmp
out
arpl
sbb
fsubs
push
gs
lahf
ficompl
or
xchg
xlat
xor
in
jp
cmp
add
mov
rclb
push
in
cmp
das
inc
adc
movsl
sub
movsl
jl
dec
sbb
ja
movsl
xchg
sbb
mull
mov
inc
rcll
sbb
lahf
mov
sahf
test
lcall
stos
pushf
int
jmp
mov
sbb
fucomip
sub
cmpsl
lock
aas
sbb
push
push
les
arpl
das
aaa
adc
mov
lcall
test
mov
test
xchg
loopne
or
or
lods
ljmp
xchg
insl
test
ss
fstps
fstps
jb
xchg
lret
call
addr16
xchg
pushf
mov
jl
fwait
dec
mov
mov
sbb
lret
mov
test
fists
ds
xor
in
imul
repnz
jne
push
adc
out
dec
add
stos
ret
mov
rcl
popf
mov
xchg
adc
inc
or
dec
adc
jl
dec
and
inc
imul
add
mov
stos
jnp
jmp
nop
fprem
add
fcomps
jnp
push
outsl
lret
lods
imul
push
add
idivl
mov
bound
inc
addr16
mov
inc
scas
addr16
icebp
popa
jb
sbb
aaa
shll
pop
call
adc
dec
push
ror
call
mov
in
pushf
orb
xchg
xor
sub
mov
lock
add
lahf
test
lahf
push
stos
push
insl
int3
inc
cli
in
sub
mov
push
aas
sub
ds
mov
sahf
mov
inc
inc
adc
in
in
rcrb
dec
mull
push
mov
or
pop
inc
xchg
sarb
sbb
in
daa
add
push
andb
dec
enter
push
cmp
stos
orl
xor
testb
sbb
jnp
mov
jnp
pop
int3
mov
mov
nop
iret
mov
mov
or
mov
bound
ja
nop
lea
es
or
aad
les
loop
testb
mov
aam
jl
scas
sbb
jne
jo
or
pop
add
push
test
loop
nop
stos
dec
inc
mov
iret
jle
test
pop
and
sub
xor
xchg
outsb
decb
sbb
outsl
mov
addb
mov
add
fwait
mov
adc
adc
loop
pop
test
xchg
add
enter
push
add
pop
push
add
add
ret
xlat
cli
push
int3
and
mov
in
add
imul
sahf
xchg
adc
cmp
enter
imul
loop
rorl
cmp
outsl
int3
jle
and
mov
and
lods
inc
data16
jmp
and
or
and
das
and
enter
movb
add
pop
fildll
enter
fldcw
inc
mov
das
fs
xchg
xchg
icebp
and
xlat
and
xchg
test
outsb
es
fsubl
jge
or
pushf
jle
mov
push
jno
add
add
jne
popa
lcall
sahf
mov
hlt
or
jge
pop
iret
sub
lods
or
xor
jb
outsl
mov
add
mov
push
dec
movsl
sub
xchg
repnz
out
imulb
fwait
add
data16
mov
mov
pop
mov
mov
stos
push
xchg
aad
add
roll
scas
shrb
mov
int3
cmp
mov
test
fwait
adc
dec
sub
xchg
and
pop
nop
pop
gs
mov
and
push
cltd
stos
mov
mov
rcrl
and
movl
cmpsb
xchg
cltd
scas
fdivrs
and
bound
pop
in
add
inc
mov
hlt
movsl
andl
and
adc
push
push
jmp
and
out
push
fimull
add
mov
mull
enter
and
dec
nop
insb
dec
xchg
jae
mov
scas
mov
push
orl
out
daa
jmp
xchg
pusha
jmp
out
pop
addr16
pop
popa
sub
push
iret
xor
jbe
int3
loope
jno
stc
cmp
subl
aad
sub
imul
test
mov
bswap
pop
or
jecxz
imul
aam
adc
ret
out
dec
rolb
cld
iret
jl
lods
ljmp
or
popf
push
scas
or
or
inc
testl
inc
sub
sbb
sub
in
xchg
xchg
cmpsb
aad
push
push
xor
out
add
jmp
mov
or
fwait
push
pop
lahf
and
pop
popf
cmp
clc
and
xchg
cwtl
dec
imul
test
mov
inc
pop
push
push
or
std
adc
rcrl
int3
mov
pop
cmc
inc
das
mov
mov
lock
rcll
push
repz
cmpsl
push
jns
cmpsl
js
outsl
add
loopne
je
sbb
jle
xor
shlb
xchg
fdivr
lahf
es
or
pop
and
pop
jb
fidivrl
stos
sbb
xchg
mov
sub
call
rcr
and
andl
jmp
xchg
and
xchg
mov
push
icebp
imul
imul
or
je
pop
mov
das
les
xorl
mov
in
jecxz
es
inc
loopne
ljmp
lcall
push
test
add
push
dec
pop
leave
adc
dec
mov
dec
sti
cmp
mov
stos
xchg
int3
cli
pmulhw
or
cmp
out
inc
push
aad
daa
inc
out
xchg
test
les
mov
jp
inc
cmc
mov
mov
ret
and
jo
cmp
adc
add
jecxz
pop
int
xchg
out
and
and
mov
push
pop
mov
push
push
jbe
jecxz
in
stos
sub
jb
aaa
xchg
in
out
out
cmc
push
fmulp
mov
push
test
mov
leave
mov
cmp
or
cmp
dec
lods
dec
xchg
scas
xchg
clc
shr
pop
aaa
inc
cmp
pop
mov
xor
insb
pushf
mov
sub
popa
cmp
cmpsb
cmp
enter
in
mov
orl
adc
iret
add
pop
in
pop
jb
arpl
push
stos
cmp
outsl
xchg
add
xchg
fdivr
pop
sbb
mov
pop
jl
sarb
or
enter
push
scas
dec
imul
inc
js
mov
daa
arpl
gs
fs
loop
push
js
push
jecxz
sbb
pusha
jnp
adc
lods
loopne
iret
sbb
push
lods
and
pop
js
push
cmp
stc
xor
jbe
mov
rclb
xor
pop
add
or
sbb
cld
sahf
cmp
dec
jg
mov
push
xchg
fdiv
xchg
adc
daa
sbb
mov
inc
mov
data16
popa
add
pop
shl
test
lods
mov
fimuls
test
or
stos
dec
push
out
mov
mov
sub
adc
push
mov
mov
adc
add
or
inc
scas
sbb
mov
mov
insl
cmpsb
in
fwait
sar
dec
sub
hlt
sub
adc
pop
dec
push
lock
lock
imul
push
cmp
push
in
loopne
test
or
cmp
xchg
cli
inc
pusha
mov
stos
enter
sbb
dec
or
mov
mov
cld
pop
scas
rcrl
aaa
mov
add
xchg
sub
add
push
adc
pop
movsb
push
ja
cmp
or
push
push
sbbb
movsb
lock
push
xchg
loopne
cmp
cmpsl
and
fucomip
aaa
sub
gs
push
mov
mov
cmpsl
fnsave
jae
cmp
cli
loope
lcall
cmp
out
push
push
pop
ljmp
test
out
or
repz
cmp
in
mov
push
mov
es
inc
jae
mov
lods
inc
adc
xchg
and
mov
test
mov
imul
sub
addb
in
fwait
inc
inc
push
dec
insl
ljmp
movsl
fsubrl
pop
ja
cs
shl
lret
and
xor
out
mov
adc
gs
in
push
sbb
xchg
mov
inc
xor
mov
ret
arpl
adc
adc
or
sti
pop
xchg
int
hlt
cwtl
sbb
cmc
in
xchg
inc
xchg
inc
xlat
out
mov
cmp
sub
mov
nop
mov
mov
xor
loopne
dec
add
arpl
pusha
adcl
push
mov
iret
push
adc
icebp
add
push
scas
and
pop
imul
adc
sub
movsl
xor
repnz
dec
dec
int
pop
in
pusha
ficoms
sbb
iret
out
xor
add
aas
fistpl
ret
mov
jbe
cltd
in
pop
aas
nop
adc
xor
fdivr
bound
mov
push
add
nop
aas
nop
inc
sub
cmp
pop
fwait
pop
neg
in
bound
mov
xchg
mov
adc
fcoml
fstpl
dec
fimuls
int
cltd
out
scas
sub
in
mulb
sub
cltd
sbb
mov
out
shll
dec
gs
lods
inc
imul
cli
jmp
orl
sti
arpl
inc
call
pop
jecxz
shl
jns
inc
dec
fdivrl
faddl
inc
in
jns
test
fisubrs
addl
sbb
cmpsl
dec
xchg
inc
add
jg
sahf
add
test
ret
mov
aad
inc
pushf
cmp
sub
int
sub
cmp
hlt
test
inc
mov
bound
sbb
jmp
mov
das
enter
add
mov
inc
mov
pop
jp
sub
jl
addr16
cmp
out
jecxz
pusha
sbb
ret
movb
or
dec
add
jmp
call
leave
adc
jne
push
fildl
xor
jl
xor
repz
into
and
repz
pop
mov
xchg
add
cmp
pop
mov
xorl
jns
push
push
loop
sbb
fidivl
pop
movb
cmpsb
imul
imul
orb
out
adc
shrb
mov
adc
adc
xor
imul
iret
pop
int3
sbb
xchg
fwait
les
adc
jne
push
mov
dec
scas
mov
out
adc
mov
xchg
add
int
jl
lret
push
xor
sbb
sub
aaa
dec
addr16
cmpsl
pop
push
xchg
lea
rorl
jae
cli
or
cmp
jecxz
inc
inc
xchg
mov
shrb
std
jo
mov
jnp
or
push
in
test
adc
jmp
dec
iret
mov
mov
dec
xchg
out
push
pop
mov
adc
inc
jge
fs
sub
mov
mov
incb
or
fcomps
mov
inc
ret
aam
mov
int
ljmp
mov
xchg
pusha
push
mov
pop
dec
popa
das
aaa
mov
cmp
sbb
mov
stos
cmpb
and
jg
iret
loopne
mov
shlb
cmp
xor
out
into
pop
push
pop
or
inc
aas
stos
push
xorl
loope
dec
mov
aaa
dec
push
aam
repnz
fwait
and
enter
and
mov
mov
or
cmp
or
lea
iret
mov
pop
push
pop
mov
and
xchg
cmc
out
test
popf
in
push
lret
lea
push
lcall
shl
lcall
fxch
add
call
aam
rclb
xchg
xor
sbb
mov
mov
mov
mov
pop
or
pop
loop
push
out
fistps
mov
mov
or
xor
dec
xor
negl
aas
and
les
sub
cmp
ljmp
sub
mov
adc
lahf
jg
dec
dec
pop
pop
xor
adc
outsl
lret
insb
xchg
repz
pop
cmp
lcall
dec
mov
shrl
movsl
scas
push
xchg
pop
jo
pop
imul
adc
mov
fnstcw
mov
inc
sarl
xor
js
stos
popa
lret
adc
cmpsb
cmp
outsl
adc
fbld
movsl
lcall
ds
adc
cmpsb
mov
pop
lcall
ret
sahf
xchg
shrb
int3
dec
inc
cmp
dec
and
push
sub
ss
push
out
sti
xlat
or
inc
mov
cld
push
dec
mull
jp
out
jmp
call
xchg
rcll
pushf
jbe
and
mov
pop
int3
push
inc
test
add
aam
addr16
push
mov
xor
and
jns
mov
and
xor
in
sbb
in
jbe
cmp
mov
out
iret
jecxz
or
cmp
je
pop
fsubrl
jne
sarb
mov
add
out
fisubrl
jo
popf
int3
pop
ss
pop
sub
push
add
cmp
shrb
sahf
icebp
pop
push
fwait
mov
scas
mov
inc
stos
xchg
jecxz
test
push
dec
and
stos
stc
mov
jge
addl
xchg
mov
xchg
fisubrs
jp
mov
mov
out
mov
mov
mov
sar
add
cltd
fldl
push
or
push
add
and
repnz
inc
pop
or
popa
cmpl
into
sahf
loop
mov
jle
popf
or
std
or
dec
xchg
jb
inc
shrl
jnp
pop
fadds
in
sub
push
call
jns
cs
dec
test
cmp
iret
cmpb
mov
push
ljmp
negl
pop
cmp
dec
xor
push
adc
and
shrb
dec
pop
and
xor
push
jmp
xchg
lods
push
lods
jecxz
pop
jae
loop
jnp
sbb
dec
cmc
jmp
incl
loope
and
sub
insb
cld
es
scas
mov
mov
push
xchg
js
xchg
les
ret
jmp
xchg
dec
fwait
es
clc
xor
mov
mov
mov
in
js
mov
stc
mov
in
lahf
js
out
cmpsb
jae
xor
cmpsb
ret
lods
or
cmp
in
lretw
out
loop
scas
xchg
push
ds
mov
subb
lret
je
iret
test
jmp
mov
mov
insl
add
fidivrl
pop
inc
ss
inc
and
pusha
ror
rcl
mov
xchg
and
fwait
aas
movsl
jnp
sbb
cld
js
addb
xorb
imul
stc
shl
push
mov
mov
std
lock
push
call
shrl
fs
xchg
xchg
loope
xor
adc
data16
nop
enter
adc
loopne
je
mov
insl
lcall
sub
jb
in
sbb
insl
jo
push
add
push
mov
int
sbb
call
dec
dec
movsl
xor
lds
aad
test
insl
pop
pushf
dec
xchg
dec
aaa
xchg
mov
jp
scas
outsl
dec
sbb
jns
lds
stc
cmp
cmp
sti
cli
inc
pop
hlt
mov
and
add
iret
push
stos
cmp
or
push
jmp
lret
jae
gs
lcall
or
stos
repz
mov
pusha
fsts
fisubs
mov
mov
xchg
push
or
push
jb
aaa
pop
xor
mov
data16
imul
ja
aam
adc
xchg
jge
gs
and
or
xchg
add
cwtl
fdivl
fmuls
sbb
adcl
int
flds
inc
add
fadd
inc
sub
mov
jae
xchg
movsl
call
xlat
arpl
inc
mov
push
insb
fmul
insl
pop
or
ret
jns
adc
clc
xor
sbb
imul
fdivp
xor
mov
dec
fnstsw
dec
test
jl
mov
mov
out
ret
insb
fldl
add
int
fcompl
in
jg
lods
dec
pop
xor
lret
push
repnz
jns
lret
pop
mov
ja
pusha
push
das
lret
es
mov
sahf
lcall
dec
or
loopne
std
test
inc
movl
pop
jecxz
xor
cmpsl
ja
jno
stc
fidivrl
mov
aas
dec
mov
jbe
cmpsb
ret
push
aad
out
rclb
lret
dec
js
xor
hlt
fyl2xp1
shl
xchg
add
push
cli
push
or
and
scas
and
cmp
aam
sub
add
push
xchg
dec
or
xchg
inc
cmp
in
jg
mov
push
jb
xor
cmp
jecxz
jp
ss
pop
mov
in
add
aaa
jmp
je
pop
jne
xor
cld
sbb
rcrb
in
int
push
sub
cmp
iret
mov
ret
ljmp
shr
aaa
adc
scas
push
or
fidivrs
push
and
inc
jae
jge
add
fsts
jmp
pop
jns
sub
shll
sbb
mov
or
mov
push
daa
and
dec
out
jmp
test
int3
xchg
popf
jg
addr16
xchg
in
test
not
pusha
test
int3
arpl
cs
mov
insl
adc
cmpsl
xor
push
push
lahf
out
loop
leave
dec
mov
push
js
out
cld
cmp
mov
pop
inc
pusha
xchg
dec
aad
lret
fs
into
into
fmuls
scas
aad
out
jno
stc
jb
sbb
sarb
pop
pop
scas
jne
push
mov
mov
cmp
mov
aas
mov
jg
adc
xorl
ss
pop
mov
inc
nop
mov
loop
xor
sub
in
xor
lods
add
xchg
lods
sti
xchg
lods
add
push
pop
xchg
mov
adc
stos
cltd
repnz
push
js
lock
and
xlat
push
pop
imul
xchg
pop
sub
pop
pcmpeqd
inc
push
mov
add
add
out
cmp
fisubrs
adc
lods
jne
xchg
test
or
insl
mov
fstps
adc
clc
cmp
inc
pusha
repnz
adc
arpl
add
cwtl
flds
add
leave
sub
pushf
pusha
sahf
or
add
push
jg
dec
ss
jo
mov
leave
and
test
pop
push
sbb
test
pusha
cwtl
mov
pop
jns
inc
daa
loopne
and
sbb
push
dec
push
add
fnsetpm(287
fcoms
sub
pop
xor
testb
or
cmp
add
leave
inc
mov
mov
adc
and
lods
mov
adc
cmp
sub
insb
outsb
ljmp
add
test
adc
arpl
and
pop
mov
xor
outsb
push
aam
add
divb
sub
or
xor
inc
xor
dec
bound
pop
int
int
sti
mov
in
stos
cmp
inc
mov
iret
mov
loope
sbb
adcb
mov
dec
mov
fildl
imul
xchg
and
and
imul
inc
pusha
lods
push
jbe
or
jo
in
mov
cmpsl
sub
pushf
dec
mov
mov
jb
imull
mov
cld
sbb
push
and
cld
mov
popa
insl
mov
xchg
ret
aam
shl
mov
sti
repnz
shrb
jb
pop
push
jae
lcall
mov
test
pop
add
cmp
push
push
mov
mov
nop
push
pop
pop
dec
mov
imul
scas
cld
lea
push
dec
xor
mov
ret
jl
test
mov
aad
loopne
adc
jns
test
stos
orl
inc
aaa
sub
aam
mov
add
pop
xor
jne
stos
pop
ret
or
insb
popa
push
les
sbb
push
jmp
mov
and
in
jno
divb
xchg
mov
inc
inc
push
inc
out
cmp
fsubl
outsl
cmp
push
loope
lods
mov
sbb
test
add
jno
loopne
inc
loope
sbbl
insb
jae
lea
in
lret
xor
mov
stos
push
and
pop
mov
fcoms
adc
icebp
mov
ljmp
lods
rolb
jmp
add
repnz
int3
rcr
inc
aas
or
push
jno
mov
stos
inc
ja
lcall
add
out
inc
loope
loopne
mov
es
mov
mov
imul
das
cld
cmpl
outsb
cmp
ja
add
sbbl
sbb
cmpl
push
in
jb
stc
popa
lret
lock
loopne
mov
sbbl
das
orl
stos
clc
xchg
test
pop
or
cs
mov
xchg
push
lret
add
lahf
imul
and
js
fsubp
add
mov
dec
fsubr
jl
mov
pop
flds
or
inc
jae
xchg
out
fxch
cld
movsl
jp
movsl
cmpsb
mov
sbb
add
ja
xchg
or
cltd
movsl
push
stc
mov
mov
xlat
push
add
stos
mov
mov
jbe
jnp
out
sbb
ljmp
dec
nop
bound
test
mov
lock
daa
inc
jle
jmp
sti
jle
ljmp
insl
xor
scas
jecxz
sub
sbb
sbb
sub
pop
sbbl
mov
xor
enter
lds
pop
jmp
push
sti
and
lahf
leave
pop
fwait
jnp
lea
mov
pop
mov
je
imul
push
mov
add
dec
jne
mov
mov
into
adc
cs
inc
cmp
popa
and
dec
ss
sub
or
add
stc
popa
lods
sar
ret
in
jns
adc
push
std
into
into
inc
ja
rcrl
ror
hlt
mov
cwtl
cmp
pop
into
fimull
sub
pop
jns
jo
sub
xchg
add
cmp
out
jl
push
mov
jecxz
arpl
outsb
dec
repnz
mov
test
out
xchg
insb
sbb
mov
scas
sbb
push
xlat
ss
adc
loope
adc
mov
pop
pop
push
sub
adc
push
add
dec
mov
xchg
push
pop
cmpsl
ret
ljmp
jns
add
ret
flds
or
cmp
addl
lods
and
cmc
inc
ja
loopne
adc
das
smsw
mov
pop
push
pusha
lret
int3
scas
jmp
lods
and
ds
cmpsb
movsl
mov
cwtl
lock
gs
inc
lods
pushf
xchg
mov
mov
and
js
cmp
ljmp
scas
xlat
mov
hlt
xor
std
mov
lock
add
dec
sbb
push
add
hlt
lock
xchg
shr
sbb
test
mov
mov
fcoms
mov
insb
outsb
sbb
fcompl
sbb
pop
pop
mov
jecxz
jmp
les
pop
mov
push
out
sub
or
xchg
out
leave
pop
iret
hlt
cmp
popa
cmp
xor
dec
addl
pop
out
mov
mov
int3
jns
mov
aaa
jns
inc
or
sub
mov
test
data16
cwtl
xor
cmpsl
enter
popf
push
dec
push
pop
xchg
shrl
lahf
shll
call
jle
xchg
jnp
vdivps
pop
cmpsl
mov
pop
cmc
fstpl
lods
inc
xchg
imul
push
inc
pop
scas
nop
or
cmp
mov
into
stc
fwait
and
mov
jg
imul
mov
and
inc
cmp
fmull
in
jecxz
stos
ja
jg
lock
aad
mov
faddl
fdivp
jmp
ret
insb
cmp
xchg
cmp
sbb
mov
sub
mov
cmc
pop
ljmp
dec
add
cmpsl
cmc
call
mov
xlat
pop
shlb
ds
and
cmp
sbb
mull
push
cmp
int
adc
cmp
jo
pop
aam
mov
popf
addr16
dec
retw
iret
add
push
hlt
lods
jae
xor
mov
mov
lcall
subb
xchg
adc
or
in
out
loopne
sub
mov
push
test
cmp
ljmp
icebp
insb
xchg
xorb
or
jg
daa
test
inc
repnz
insb
fstl
mov
in
pop
mov
subb
xchg
outsl
call
ss
das
ja
push
movsbl
and
jae
stos
jle
jmp
addr16
negl
xchg
cli
je
sub
dec
scas
testl
jns
pop
cltd
jb
mov
dec
arpl
icebp
and
and
std
inc
dec
and
xor
xchg
jmp
lret
and
out
mov
adc
pop
xor
or
fnstenv
stos
sbb
cli
gs
fidivrs
call
inc
fcompl
lds
popa
mov
and
aad
cmc
lret
pop
fisubl
mov
roll
shrl
mov
pop
ss
arpl
mov
js
mov
cmp
rolb
outsl
lock
pusha
mov
jecxz
cmpsl
nop
out
mov
xchg
xchg
jb
pop
mov
cld
cmpsl
int3
pop
movsl
jmp
lret
fiadds
popf
mov
ljmp
mov
cmpsl
xchg
or
out
fnstenv
mov
test
cmp
pop
faddp
adc
sub
adc
rorl
pop
mov
inc
fidivrs
lcall
std
leave
aad
and
lahf
jns
jl
xor
cmp
dec
test
bound
bound
mov
lods
lret
dec
pop
test
or
std
push
les
pop
xchg
jge
lret
jne
jne
dec
jo
xchg
leave
sti
and
sbb
cld
ss
dec
loop
dec
js
repnz
jns
sub
or
fwait
adc
iret
mov
cmpsl
adc
loop
jbe
popf
jle
mov
stos
jmp
les
mov
movsb
and
jns
pop
in
fs
movb
xchg
pop
add
lea
cmp
pop
into
jbe
dec
sarb
sub
mov
xor
inc
jne
nop
jp
insl
pop
jnp
push
test
and
fwait
je
add
jb
scas
push
cmp
add
mov
hlt
loope
jl
cmpsb
test
scas
outsb
fstl
and
push
jno
idivb
das
ret
in
movsb
jge
mov
aas
outsb
dec
mov
inc
daa
fcomps
inc
in
pop
fdivrs
test
pop
push
xor
adc
fs
mov
test
lcall
fstpt
loopne
hlt
xor
outsl
jb
mov
sar
mov
repz
scas
sbb
rcr
mov
mov
adc
push
addl
jle
pop
pop
fucomi
mov
sbb
mov
inc
sub
imul
or
xchg
inc
sub
mov
decl
xor
or
mov
sub
sub
cltd
jg
add
in
lods
mov
ja
nop
aas
adc
mov
ja
or
dec
inc
imul
test
adc
adc
pop
and
ret
sbb
or
roll
out
jg
xchg
dec
or
insl
aam
mov
shll
cld
in
push
mov
pop
pop
aaa
fnstsw
pop
loopne
mov
add
aas
filds
inc
mov
shl
push
add
jae
ja
mov
mov
lea
mov
sub
test
add
stos
inc
sub
sbb
mov
lret
pop
jnp
xchg
xor
inc
push
cmc
repnz
mov
call
pop
dec
dec
ja
xor
test
adc
lds
xchg
adc
pop
imulb
nop
das
lea
mov
xor
imul
call
mov
sahf
in
mov
stc
inc
or
not
pop
in
cmc
lea
divl
mov
enter
pop
ljmp
mov
or
jne
lods
decb
sbb
int3
push
inc
adcb
xor
ljmp
mov
dec
sbb
sarl
mov
cltd
aam
mov
ret
mov
leave
sbb
push
stos
cmpsb
xor
push
xchg
fdivr
sahf
and
adc
fsubs
push
fwait
mov
xchg
ret
add
outsl
mov
jmp
push
lcall
loope
cmp
cmp
nop
and
ret
fs
or
lcall
sub
ljmp
rcl
jb
pushf
cmp
xchg
xchg
es
out
and
mov
rcr
push
dec
in
pop
and
int3
pmulhuw
pop
inc
jg
lahf
gs
loop
xchg
test
arpl
mov
fistpll
pop
push
mov
jmp
femms
pushf
icebp
mov
lock
jo
shlb
orb
cmp
mov
jg
imul
dec
jmp
daa
stos
icebp
adc
adc
sbb
adc
jbe
fstps
xor
push
stc
xchg
mov
add
push
push
mull
xlat
hlt
fistl
fisttps
push
vmwrite
adc
xor
sbb
rcll
divl
add
mov
jecxz
jg
xchg
cmp
add
lds
lahf
dec
or
or
push
lods
fiadds
outsl
pushf
ljmp
sub
inc
loop
mov
push
aas
ror
sbb
push
mov
jo
and
int
xchg
xchg
xchg
sub
jno
test
repz
cmpsl
je
pop
lea
push
xor
aas
roll
outsl
lahf
in
pop
mov
inc
mov
dec
fdivs
bound
xchg
inc
movsb
test
and
sbb
repnz
or
dec
pop
pop
int
cmpl
divb
inc
dec
mov
sbb
ljmp
into
sti
test
fiadds
sub
cli
icebp
or
push
cli
cmp
add
movsb
pop
scas
sub
sbb
jno
sbb
cmp
subl
lock
int
dec
sbb
insl
les
jb
movsl
enter
pop
dec
rorl
out
sbb
xor
inc
jnp
adc
adc
int
xchg
push
gs
je
fldenv
push
xchg
lret
fimull
cs
push
push
pop
push
jae
mov
into
pop
dec
or
xchg
xchg
test
mov
or
xchg
stos
adc
scas
cmc
pusha
add
dec
dec
lret
imul
jbe
pop
fldl
mov
dec
add
mov
mov
dec
jp
xchg
fdivr
pop
out
aad
inc
cmp
scas
fidivs
pop
in
clc
mov
mov
lods
in
push
jb
push
clc
sbb
je
repnz
ja
test
outsl
inc
in
push
xchg
leave
aam
in
jae
jl
rcrb
stos
cmpsl
fwait
jge
pop
hlt
push
jns
inc
in
sbb
in
int
push
xor
lcall
adc
sbb
repz
fcompl
dec
or
mov
stc
jp
jge
or
jno
pop
subb
cmp
out
mov
loope
lea
xor
jo
loope
movsb
mov
imulb
jb
in
add
clc
out
mov
test
or
xchg
xor
iret
or
movsb
jecxz
pusha
loop
test
fisubrl
mov
and
cmc
pushf
lret
sbb
push
mov
arpl
jmp
mov
ret
ds
mov
mov
mov
push
pop
jecxz
int3
or
pop
in
lcall
dec
xor
in
pushf
into
jecxz
lahf
mov
mov
ja
les
daa
jne
xor
inc
sarl
mov
xchg
jae
xor
mov
adc
fstps
xchg
adc
pushl
fisttps
jnp
or
pusha
jg
data16
pop
add
scas
imul
nop
in
adc
mov
pop
mov
mov
jns
cmp
repnz
aaa
adc
rcll
sub
mov
mov
push
clc
stos
inc
xchg
int3
fwait
leave
mov
push
and
xor
xchg
inc
loop
inc
sbb
lret
imul
cld
jecxz
test
or
pop
pop
fstp
clc
subb
add
shlb
inc
bound
pop
popf
jle
and
dec
in
push
cmp
xlat
hlt
fcomip
mov
bound
or
xchg
jbe
les
cmp
mov
sbb
cwtl
lock
xlat
push
jmp
push
push
add
mov
fs
fs
xchg
xor
mov
mov
pusha
sub
cmp
mov
and
aad
push
dec
stos
xchg
popa
movsb
lods
jl,pt
stos
sbb
insb
push
insl
jge
addl
outsb
jb
xchg
call
pop
popf
inc
js
fisttpll
rclb
cmp
imul
pop
push
sbb
stc
add
push
pop
call
dec
or
bound
push
in
ret
lahf
lcall
sub
mov
scas
cmpsb
xor
add
or
pop
mov
mov
int
xchg
pop
mov
insl
in
enter
movsb
cltd
jb
popa
insb
es
sti
and
mov
mov
fbld
sub
add
and
clc
xchg
mov
sub
or
mov
push
pop
lods
adc
jecxz
sub
jnp
fs
movsb
push
sar
dec
jle
int3
mov
leave
pop
leave
outsl
ss
xor
mov
es
add
push
jnp
add
aas
aas
or
repnz
je
sbb
add
test
push
or
mov
push
mov
stos
push
out
ljmp
mov
xchg
xchg
jle
out
loopne
fwait
or
add
jb
pop
sbb
inc
shll
dec
mov
dec
push
or
xlat
sub
sahf
js
xchg
dec
out
lret
push
mov
pushf
jecxz
daa
aaa
sbb
xor
out
jo
stos
sbb
pop
push
xchg
ret
or
adcl
mov
mov
sub
jb
in
pop
stc
int
shrb
or
je
fdivs
call
add
jb
lds
roll
inc
and
sbb
or
ljmp
std
stos
push
push
cmp
sbb
push
cld
fcoml
dec
popf
cs
sahf
sti
jge
icebp
push
int3
mov
out
nop
xchg
dec
adc
cmpsb
and
inc
call
pop
loop
out
test
stc
pop
aad
test
cmp
shl
aaa
movsb
loopne
jne
mov
dec
dec
mov
fcmovnb
cltd
jl
or
ja
or
movsl
aas
inc
movsl
push
lcall
out
out
mov
mov
adc
xchg
test
pusha
and
fnstcw
cmp
xor
jl
xor
inc
mov
cmp
ret
mov
and
jp
inc
jg
sub
out
mov
xchg
push
push
sub
rcrl
add
lds
jecxz
je
dec
daa
adc
shl
inc
push
xorl
and
lds
sbb
inc
sbb
cmp
xor
insb
mov
aad
and
mov
xchg
adc
adc
in
repnz
xor
add
cmp
ret
or
sub
call
jg
rol
orl
adc
or
xchg
add
pop
mov
inc
or
loope
aad
mov
out
mov
icebp
loope
inc
inc
ret
adcb
movsb
es
rcrl
cmpsl
popa
and
mov
adc
pop
jb
cltd
cmc
fcomps
cmpsl
daa
adc
mov
scas
mov
fldcw
fadds
dec
fwait
int
or
sbb
imul
aas
lahf
and
lods
cmp
hlt
loop
scas
sbb
into
inc
inc
add
cmpsl
popa
sub
lret
mov
pop
pop
mov
mov
xchg
sahf
mov
sub
adc
notb
lahf
mov
dec
clc
pop
stc
call
les
or
mov
pop
test
xchg
rcrb
int
enter
or
sub
cmp
fmull
push
pushf
aaa
jbe,pn
push
mov
adc
cmc
jbe
dec
fisubrs
xor
cmp
push
in
sub
icebp
bound
ja
mov
cmp
lret
mov
mov
mov
cmp
push
inc
popa
out
loope
cltd
sbbl
call
shrl
adc
in
mov
xor
sub
in
roll
test
scas
test
sbb
hlt
xor
movsl
les
imul
cld
xor
das
fwait
and
push
ror
sub
je
push
push
push
cs
pop
cmp
mov
sub
jp
mov
cmp
iret
mov
into
push
aam
sub
and
mov
push
jl
ret
adc
cli
sub
pop
or
outsb
in
int3
inc
test
mov
adc
add
stos
cmp
or
mov
fcmovbe
fstpt
pop
fldt
ja
push
push
sbb
jmp
int
adcl
loopne
adc
jmp
sub
jo
push
sbb
test
jo
dec
sbb
xor
push
mov
mov
fwait
js
int
cmp
fstpt
add
imul
loop
mov
push
sub
pusha
and
push
scas
int3
outsl
ud0
test
stc
pop
or
mov
dec
adc
rorb
pushw
jge
not
sahf
mov
mov
dec
jge
adcl
arpl
loop
mov
ss
imul
in
xor
test
ss
lds
xor
adc
rcl
in
xchg
test
sub
or
call
sbb
mov
shl
xor
adcb
lods
add
iret
add
fnstenv
or
cmp
das
xor
jge
mov
lret
push
orb
pop
xor
ss
mov
mov
inc
ror
in
pop
fistps
xor
int
xchg
ss
push
ret
cmp
pop
fwait
push
fcmovbe
add
mov
pusha
gs
dec
outsb
mov
pushf
push
aas
loopne
sub
leave
test
sbb
sub
mov
xor
xchg
and
dec
into
scas
sub
xor
enter
nop
sarl
inc
push
mov
test
and
lcall
xchg
in
cmp
rol
outsb
jmp
test
push
dec
or
stc
and
out
fstpl
mov
dec
scas
rcrb
inc
aaa
fsubs
mov
jne
and
or
lods
sbb
outsl
inc
cmp
in
pop
movsb
pop
orb
outsl
lock
lea
mov
stos
fbstp
enter
jo
adc
sbb
sbb
mov
rcr
movsb
aaa
push
aad
hlt
mov
mov
outsl
sbbb
cmp
shlb
sahf
bound
xchg
jmp
js
repz
fbld
test
dec
pushf
dec
popf
negb
adc
test
mov
cld
jge
add
pushl
fimuls
int3
mov
out
push
mov
jle
adcl
mov
jle
pop
push
int3
cli
ljmp
mov
int
pop
fcmovne
xor
insl
and
faddl
push
ds
mov
outsl
add
push
aad
cld
jecxz
dec
and
sbb
cs
ret
test
cs
fistpll
fwait
or
test
ret
rclb
mov
ja
leave
mov
mov
and
icebp
test
loope
push
mov
mov
loope
push
jle
or
pusha
aam
add
sbb
mov
xor
stc
sub
pop
fstpl
jne
xor
xlat
dec
xor
ret
xchg
push
adc
sub
movsl
mov
push
xchg
and
mov
loop
jmp
and
or
push
in
ret
xchg
outsb
sbb
out
jae
arpl
in
enter
popa
iret
enter
push
rcrl
ret
std
mov
shll
xor
aad
xchg
and
lock
shl
aad
pop
dec
adc
cld
push
stos
jecxz
dec
mov
in
mov
lret
scas
and
mov
loopne
mov
nop
jno
das
mov
mov
scas
lods
ss
sub
xchg
popa
fiadds
icebp
out
push
pop
ret
mov
lret
pop
lahf
addr16
fisttpl
das
xchg
leave
adc
and
rcll
out
out
out
cmp
pop
int3
mov
imul
and
testb
mov
xchg
movsl
fs
sub
mov
and
push
leave
mov
repnz
lock
dec
ret
test
mov
and
or
lods
push
mov
shll
outsl
in
jae
inc
push
sub
push
out
xchg
xor
lea
cmp
mov
shrb
xchg
in
sti
test
push
mov
aam
push
jne
sub
mov
lods
test
xchg
lahf
lret
add
mov
push
popa
popa
jg
imul
mov
sub
dec
rep
sbb
lods
inc
inc
sbb
xchg
pop
stos
in
cs
lret
pop
inc
pop
mov
cmp
movl
pop
dec
fidivrs
pop
mov
mov
pop
lods
add
sahf
pop
sub
les
xor
dec
dec
lods
cmp
inc
in
aad
sub
lods
test
push
xchg
xchg
cli
mov
cmp
or
incb
or
out
enter
sti
stc
icebp
mov
push
dec
push
xchg
pop
xor
pop
pop
or
roll
ljmp
ret
xor
stos
or
mov
mov
cmpsl
mov
adc
out
jbe
fadd
jmp
fildll
iret
rorb
push
into
scas
rolb
mov
and
loopne
add
push
pop
arpl
hlt
repz
icebp
or
gs
loopne
dec
sti
dec
mov
xor
push
fdivr
and
cmp
xor
mov
jns
scas
push
xor
cmp
enter
push
sub
adc
inc
xchg
stos
fxch
xchg
push
pop
and
sbb
mov
lods
inc
dec
add
cmpsl
jle
repnz
aaa
into
sarb
jle
scas
popa
outsl
xchg
pop
or
xchg
and
stos
jne
in
push
iret
inc
jle
push
and
test
sti
jns
lods
out
ret
loopne
sbb
xchg
andl
mov
scas
mov
mov
jge
rorl
insb
push
fstps
out
test
adc
push
arpl
cmc
scas
sti
fisubrs
and
sti
jnp
scas
lcall
sub
jp
and
pop
outsl
icebp
jb
call
lret
outsl
js
ret
dec
fstp
leave
sub
loope
adc
xor
cmpsl
lea
jae
in
pop
outsl
loopne
cmc
inc
pop
cmc
pop
xchg
jmp
cmp
aas
testb
mov
cmc
push
shl
cmc
cwtl
test
popa
stos
pop
xor
push
cmp
xchg
jae
shr
lods
ret
pop
out
sbb
xchg
std
xchg
pop
fdivr
out
arpl
lods
lods
or
test
aas
imul
imul
fs
or
sub
push
mov
loope
adc
mov
and
jb
filds
sbb
mov
pop
cld
nop
imul
mov
push
cmp
cmp
dec
repnz
jecxz
pusha
add
orl
fistps
or
iret
sbb
addb
sub
mov
push
imul
and
inc
sti
mov
mov
mov
insl
jp
xchg
adc
adc
or
ret
loop
dec
mov
inc
sbb
shl
cltd
fs
adc
xchg
adc
stos
xor
push
loope
pushf
dec
pop
xchg
push
and
push
aaa
jecxz
mov
scas
movsb
fwait
ja
enter
xchg
push
aaa
fstps
jo
fstpl
loope
inc
add
daa
clc
mov
inc
or
mov
dec
pushf
mov
sahf
shlb
push
dec
push
and
xchg
int
push
sub
rcrb
mov
lcall
cwtl
pop
inc
inc
sub
adc
xor
xchg
or
lret
dec
mov
adc
out
shlb
pop
in
mov
ljmp
mov
pop
adcb
loope
popf
mov
movsb
inc
aam
push
stc
cmpsl
dec
jmp
into
and
in
outsb
mov
pop
or
ss
loope
sbb
repz
clc
pop
push
pop
and
mov
xor
cmp
imul
fisttpl
lea
cmp
mov
stos
fcmove
je
sbbb
in
mov
out
and
aas
popa
les
lds
fdivrl
addr16
stc
pusha
insb
sbb
jle
jb
and
sub
sub
adc
orl
dec
in
clc
in
in
fistl
pop
mov
ret
jo
insl
shrb
jo
adc
in
icebp
jae
mov
cmp
jne
out
int
mov
rcrb
or
jno
popf
adc
lods
fcoml
jnp
cmp
cmp
mov
cmc
mov
icebp
xor
ja
fisubrs
pop
fwait
sub
fs
dec
lret
push
lret
sub
hlt
scas
sti
xchg
sbb
sub
adc
mov
cmp
ret
cmp
loopne
gs
push
iret
loope
mov
loopne
push
enter
into
dec
mov
int
test
add
sbb
scas
inc
dec
ds
je
pushf
jbe
hlt
mov
pushf
mov
pop
mov
xchg
jle
fdivrl
sub
sub
scas
mov
popf
xor
add
mov
outsl
shll
out
push
cwtl
pop
sti
sub
fists
aas
pop
adc
orb
cld
and
mov
in
inc
mov
aas
and
fists
inc
lock
adc
sahf
sbb
ret
sub
dec
mov
scas
jo
xor
rolb
mov
dec
push
into
mov
add
jp
mov
rcrl
pop
and
adc
mov
out
cs
xchg
xor
stc
out
jb
xchg
pusha
xchg
xchg
xorl
or
sub
daa
mov
aaa
inc
mull
std
pop
push
imul
pop
jns
icebp
das
push
inc
mov
and
leave
loopne
nop
jno
jmp
aaa
xchg
jmp
lret
fstpl
push
pop
outsl
inc
insb
scas
sti
test
pop
ficompl
pop
rcrl
out
aaa
pop
sbb
enter
shr
ljmp
jecxz
mov
leave
stc
jg
cs
sahf
mov
mov
and
or
mov
mov
flds
pop
cmp
add
out
lock
lahf
pop
cmc
pop
loop
sbb
pop
fmull
int3
add
mov
pop
imul
and
sbb
aas
lods
mov
iret
sub
fstpl
dec
dec
dec
data16
aas
addr16
movsl
mov
imul
and
pop
shlb
push
out
in
inc
movsl
aaa
push
fwait
xor
add
fcomps
sub
jne
js
stos
insl
stos
dec
xchg
loopne
popf
mov
jnp
sbb
ja
mov
imul
ja
mov
comiss
inc
mov
jmp
sbb
inc
ds
and
in
add
pop
jno
pushw
cwtl
jns
push
xchg
cmp
rorl
leave
cwtl
fnstsw
push
xor
mov
das
pop
add
xor
shrl
test
mov
add
repz
mov
fs
add
call
lcall
clc
mov
xchg
cmpsl
cmpsb
fidivs
fadd
or
cmp
xchg
test
add
push
xor
add
loop
lahf
leave
hlt
xchg
add
mov
leave
ds
sub
jp
add
cwtl
inc
sub
adc
add
arpl
in
out
push
push
cmpsl
add
pop
inc
xchg
dec
mov
scas
dec
adc
xchg
push
sub
aaa
outsl
cmp
sub
daa
stos
in
sub
push
out
ret
lock
sbb
ss
adc
push
xchg
and
sub
sti
pop
insl
mulb
dec
mov
jecxz
cmp
mov
pop
add
mov
add
daa
jmp
cwtl
stos
pushf
sub
xorl
test
loopne
fnstcw
stc
push
iret
dec
jne
aam
loope
xchg
cmp
nop
mov
testb
push
xor
sub
mov
out
jb
pop
inc
pop
daa
push
or
outsl
test
arpl
adcl
jnp
inc
lea
xor
inc
or
sub
arpl
cmp
add
inc
xor
push
nop
mov
mov
loopne
lock
xchg
gs
arpl
sti
cmpsb
add
pop
gs
mov
xchg
lods
cltd
mov
mov
dec
pop
cltd
inc
ss
sbb
movsl
test
and
aad
xor
or
jp
mov
leave
lcallw
fcompl
pop
pop
aam
lock
xor
les
rol
or
hlt
sub
outsl
dec
dec
ret
dec
stc
dec
stos
push
inc
adc
cmp
ja
sub
mov
ss
leave
loopne
stos
mov
pusha
xchg
out
cmpsl
adc
pop
dec
lods
addr16
cmc
mov
pop
sub
inc
cmp
and
inc
sub
pop
imul
popf
mov
cltd
xchg
out
rcrl
leave
repz
icebp
sahf
jmp
pop
inc
inc
adc
subl
int
and
bound
pop
pop
mov
clc
cmp
sbb
clc
faddp
and
aad
cmp
sub
int3
imul
fstl
add
inc
dec
lods
mov
push
or
mov
cwtl
les
stos
cmpsb
mov
add
mov
lret
push
push
inc
inc
imul
imul
adc
push
cmpsb
adc
stos
add
push
mov
cli
dec
cmp
add
adc
push
xchg
je
add
xor
adc
sbb
cmpsb
test
pop
lds
mov
popf
dec
and
and
mov
sub
lahf
pop
sub
sbb
xchg
stos
cmp
mov
cltd
xchg
xchg
inc
dec
sbb
test
and
pop
adc
cmp
xchg
in
xchg
jno
daa
lret
pop
adc
jg
outsl
push
aaa
insb
lret
ljmp
and
mov
push
cmp
inc
fs
mov
or
ja
pop
xchg
add
test
jmp
and
pop
jb
cmp
out
mov
addl
in
push
push
lahf
test
cmc
bound
jo
pop
fadd
sbb
pusha
mov
out
pop
lret
pop
mov
jecxz
daa
lds
loopne
aam
inc
mov
sahf
mov
call
std
dec
fldt
cmp
lods
jno
bound
mov
lock
add
shrl
xchg
icebp
mov
roll
push
lock
fdivrl
dec
push
fcmovne
fisubs
je
or
testb
movsb
jo
mov
and
mov
cmp
lods
adc
mov
sbb
call
or
sbb
jae
add
lods
jns
cwtl
push
push
repz
pop
mov
test
mov
cmp
add
xor
push
mov
lahf
inc
add
in
xchg
push
push
in
sub
jns
add
jp
in
adc
insb
fmull
orl
jb
add
jmp
xchg
js
inc
mov
and
add
movsl
lds
sti
inc
add
xlat
popf
xor
sbb
push
dec
lret
mov
pop
sbb
fadds
jecxz
or
xchg
jecxz
lea
lcall
sbb
out
fstps
and
dec
mov
sbb
adc
cwtl
daa
push
sbb
dec
xchg
adc
dec
rcr
cmp
pop
fsubrs
push
pop
mov
int
adc
adc
mov
movsb
jbe
or
push
or
ss
stos
arpl
jne
out
sahf
stos
jne
and
sub
call
jp
out
xor
test
mov
cwtl
loop
adc
je
mov
and
mov
sub
jecxz
incl
lret
or
fsubs
fdivl
sbb
xchg
inc
sbb
pushf
push
cwtl
mov
aaa
fidivl
dec
inc
lret
add
push
or
icebp
rcr
pop
dec
negb
cmp
in
mov
mov
dec
jo
mov
xchg
sbb
std
pop
xchg
add
mov
xchg
jecxz
jl
lea
in
pushf
and
adc
jnp
jbe
add
iret
cmp
negl
popf
jge
fcomps
mov
and
fmuls
add
mov
dec
push
or
mov
lahf
in
jmp
sbb
xor
xlat
std
pushw
mov
ljmpw
and
test
call
out
cmp
rorb
out
inc
jb
adc
adc
divl
xor
xor
xchg
inc
ficompl
stos
xchg
rcrl
fwait
mov
sbb
insl
aad
les
push
fs
bound
inc
cli
or
outsl
push
cld
push
add
pop
push
jp
cmp
xor
mov
psraw
pushf
add
cmp
push
push
and
inc
stos
or
adc
aad
xchg
fdivs
or
inc
add
and
mov
xor
hlt
mov
or
pop
cmp
inc
xor
add
sahf
aam
dec
xor
inc
xchg
xchg
int3
push
in
adc
leave
andb
test
fbstp
jno
cmp
add
sbb
sahf
lret
add
notb
mov
push
lods
sub
imul
daa
andb
and
or
dec
inc
sub
mov
mov
clc
lea
bnd
mov
rcrl
mov
adc
mov
shlb
push
test
xchg
jns
push
lret
mov
inc
and
xchg
dec
dec
ss
fisttpl
push
jno
inc
jae
push
icebp
mov
xor
leave
sbb
pop
sbb
dec
daa
mov
in
mov
lcall
mov
inc
sbb
stc
bound
addl
mov
lret
jl
mov
cmp
bound
mov
fisubrl
sub
add
jecxz
inc
fcompl
mov
sbb
into
inc
sbbb
mov
pop
cwtl
sub
push
out
mov
cmc
stos
pop
fldt
xchg
popf
pushf
es
or
iret
mov
xchg
sahf
setae
pop
sbb
cld
xchg
jno
jae
in
pop
mov
cwtl
xorl
sbb
nop
negb
aam
outsb
adc
mov
xchg
lret
push
push
mov
call
int3
mov
inc
pop
add
add
cmp
rclb
into
pop
bound
sub
inc
and
in
mov
inc
rclb
popa
lea
fs
rolb
dec
mov
popa
jb
and
fists
imul
add
xor
cli
sbb
mov
test
cmp
xor
pusha
out
test
lods
push
mov
aaa
bound
stc
gs
push
mov
test
pop
sub
push
out
popa
movsb
cmp
or
aam
cmp
imul
cmp
ret
inc
add
jns
mov
loope
xchg
scas
dec
idivl
inc
out
leave
bound
push
jl
xchg
mov
add
data16
pop
ret
inc
inc
fdivl
or
movsl
mov
fs
lea
out
inc
adc
stos
aaa
mov
cwtl
push
popa
cli
inc
mov
jle
xchg
and
fimull
fisttps
rorb
imul
fsubrs
pop
filds
addr16
xor
mov
xor
mov
insl
sbb
jo
mov
aam
push
pop
cmpl
add
cvtpi2ps
inc
lahf
cmp
add
jae
pop
jmp
repnz
sub
or
sub
jo
pusha
popa
dec
scas
mov
aam
mov
je
fisttpll
sub
into
pop
stos
inc
mov
es
lds
inc
enter
mov
js
pop
add
jns
cwtl
sub
push
add
sbb
or
loope
shr
jle
movsb
mov
cli
cli
f2xm1
rorb
cmp
lods
iret
jecxz
and
xchg
mov
add
les
inc
jmp
pop
sub
enter
sbb
adc
and
push
pop
rolb
lea
imul
aas
or
mov
adc
mov
and
cmp
out
int3
inc
sub
dec
pop
pushf
dec
mov
in
sarb
or
pop
icebp
mov
mov
incb
pop
mov
jp
xchg
sub
push
mov
push
jge
test
lahf
int3
cwtl
jo
pop
sbb
cli
pop
cmp
test
xchg
subl
push
mov
neg
ret
adc
mov
xor
jnp
leave
sub
dec
mov
fadds
in
jmp
jns
or
mov
fisubrs
jbe
ljmp
push
iret
out
test
xchg
outsl
bound
iret
jmp
xchg
sub
repz
outsl
imul
push
xchg
mov
daa
pop
xor
inc
cli
jnp
cmp
aad
push
rorb
scas
cmc
test
test
sub
xchg
push
xchg
cmp
rcll
and
fldl
jle
xchg
popf
pop
xor
and
or
imull
adcb
push
imul
and
mov
xor
mov
sbb
scas
add
ljmp
fsubrl
adc
subl
jl
shlb
not
xor
shrb
les
push
xor
inc
imul
push
ss
mov
sub
xchg
fiaddl
sub
aad
inc
xchg
sti
scas
repnz
sbb
ds
jae
cmp
cmp
mov
mov
pop
add
stc
and
pop
stc
dec
push
inc
mov
mov
jl
dec
in
aam
fistl
jne
or
xor
mov
dec
out
sub
popf
js
rcrb
xor
dec
xor
je
inc
dec
int
pushf
sbb
shlb
push
jp
push
mov
mov
mov
fisubs
pop
xor
sbb
sarb
add
jo
dec
inc
in
int
mov
popa
mov
mov
mov
orl
sarl
inc
jge,pt
call
mov
inc
mov
or
adc
inc
psraw
adc
sbb
lods
insb
push
cs
shrl
hlt
pop
int3
mov
dec
add
mov
jg
sbb
es
out
testl
imul
jnp
movsb
testl
sbb
push
js
cli
enter
pop
enter
lret
adc
xchg
xchg
popf
cwtl
mov
lcall
sbb
int3
mov
data16
jl
add
add
xchg
rol
or
cwtl
cmp
xor
mov
sub
test
in
adc
enter
xor
ljmp
cwtl
lods
inc
jns
adc
jp
or
cmc
ret
cmp
pushf
add
nop
inc
jge
out
xor
adc
cmp
and
push
and
sahf
loope
pop
out
xor
push
mov
add
add
std
mov
dec
mov
cmp
cwtl
inc
mov
mov
sbb
dec
shr
test
fwait
ljmp
pusha
stos
sbb
pushf
inc
inc
jp
mov
mov
xor
adc
and
lods
pop
push
roll
lds
cmpsb
les
xor
fnstenv
pop
push
xchg
imul
scas
and
movsl
std
mov
insb
sub
push
lods
je
mov
sarl
mov
add
sub
addr16
in
pop
xorl
popa
inc
mov
scas
fsubs
inc
and
out
in
mov
cmc
xor
sbb
iret
dec
or
jo
shl
jae
sbb
mov
cmp
ret
jbe
outsl
jmp
and
scas
cs
add
adc
sub
push
ljmp
mov
cmp
pop
outsl
xchg
inc
mov
cmpsb
xchg
movsl
add
jg
dec
repnz
xchg
mov
pop
cwtl
aad
and
insl
inc
cmp
movhps
sbb
sub
insb
dec
lahf
mov
pop
cli
in
jp
sahf
or
pushf
xchg
add
out
mov
lods
jbe
popa
pop
dec
fcoml
shrl
dec
xchg
stc
das
jbe
fwait
in
cmc
test
xchg
fsubs
test
daa
stos
xorb
clc
test
and
add
cmc
popw
dec
in
cmp
cwtl
adc
jge
push
aad
jno
rclb
mov
imul
push
mov
aad
mov
pop
pop
insb
nopl
xor
mov
std
repnz
mov
mov
popa
adcl
and
call
and
push
addr16
jae
movsb
out
xor
rcll
jbe
sarb
mov
mov
mov
and
gs
dec
imul
fisubrl
pop
ss
adc
push
cld
mov
add
pushl
leave
xchg
mov
xchg
or
mov
inc
incl
ss
xchg
call
fwait
jecxz
xor
repnz
js
lods
rorl
popf
mov
movl
stos
and
arpl
xor
jecxz
repnz
daa
push
fiaddl
and
and
je
lret
int3
cmp
mov
inc
stos
xchg
inc
and
ficompl
mov
lods
pushf
pushf
or
fs
clc
push
and
lea
pop
xchg
ret
cmp
clc
test
out
dec
jne
mov
push
or
insb
outsl
fwait
leave
hlt
loopne
xor
push
jmp
push
sub
pop
mov
cs
int3
inc
movsl
pop
outsb
stc
push
cmpb
pushf
mov
test
enter
mov
jmp
or
gs
sbb
test
sbb
sbb
mov
push
pop
ljmp
fisubl
sub
scas
gs
cmp
gs
sub
pop
dec
push
das
sbb
adcl
out
add
sub
mov
pop
clc
adc
nop
outsl
sbb
aad
out
nop
in
je
and
mov
pop
mov
xchg
xor
hlt
adc
bound
sahf
push
add
jno
ljmp
pusha
cmpsb
repz
scas
loope
jae
imul
cli
int3
sti
pop
mov
sbb
mov
repnz
cld
fwait
insb
sbb
sti
sbb
mov
push
mov
xchg
fimuls
lret
pusha
mov
xor
cmp
add
outsb
or
mov
test
stos
add
add
sub
and
in
xor
inc
mov
adc
and
lret
jmp
adc
ret
cmpsl
test
das
cmp
adc
add
loop
or
out
dec
mov
dec
lds
xchg
test
scas
sbb
pusha
loop
cmp
or
jmp
cmp
ja
mov
leave
lods
and
mov
mov
ds
cs
loope
sbb
ret
xchg
lret
cwtl
movsb
jae
xchg
push
js
sub
rcrb
and
mov
mov
insl
jmp
or
out
mov
das
leave
push
out
pusha
cwtl
repz
fdivrl
std
in
xchg
or
pop
mov
and
sub
mov
leave
cmpsb
cs
xchg
cmpsb
popf
pusha
fcompl
mov
push
and
xchg
sub
cld
lret
icebp
out
ds
and
hlt
pop
pushf
stc
loopne
scas
ljmpw
sahf
insl
leave
xor
and
test
popa
pop
outsl
leave
addr16
jno
movsb
or
and
ljmp
mov
out
sub
mov
cmp
dec
push
ljmp
inc
sti
shlb
xor
adcl
cli
sub
lahf
xor
and
jmp
cli
gs
popa
mov
outsb
xchg
mov
mov
jb
cvtps2pd
lods
dec
movsl
cmp
insl
pop
pop
in
pop
jmp
xchg
dec
add
mov
push
lock
jp
std
fsqrt
fwait
mov
lahf
push
inc
push
or
int
mov
dec
fs
jg
hlt
pop
cld
in
ret
sub
test
push
les
call
jmp
or
test
mov
decl
jo
mov
mov
movsl
adc
xchg
dec
imul
lea
pop
divb
sub
stos
lret
cmp
adc
xor
dec
lcall
sub
push
adc
in
adc
push
jg
mov
in
sbb
pop
pop
test
pop
push
mov
nop
xchg
push
cmc
sbb
lahf
lods
in
imul
clc
sub
mov
cmp
sub
std
iret
mov
pusha
pop
lods
adc
popf
fisubrl
xor
adc
pushw
subl
test
sbb
in
fistpll
mov
sbb
daa
jge
cmpsl
test
dec
shl
lock
sbb
cli
stc
xor
mov
ficoms
movsl
or
push
inc
and
sbb
adc
adc
lods
or
xchg
in
sub
xchg
es
push
test
add
jl
aad
mull
fistl
cmp
ret
hlt
in
push
loope
adc
sbb
push
aam
mov
outsl
movsl
es
in
mov
js
mov
mov
cmp
dec
pop
mov
dec
test
jns
push
sub
sub
mov
js
subl
das
jae
movsl
lret
lds
cmc
outsb
and
shl
sahf
pop
fnsave
in
outsb
push
mov
inc
pop
add
ljmp
mov
push
pop
and
and
sbb
in
cltd
mov
mov
sub
push
cmp
adc
jb
xchg
jl
and
dec
lods
add
jl
adc
push
cli
aaa
pop
fidivrl
jmp
mov
cs
push
or
popf
cmpsl
add
mov
pop
push
push
add
xchg
mov
pop
inc
ljmp
or
adc
imull
mov
mov
lea
pop
jns
data16
ret
dec
hlt
mov
mov
sub
xchg
std
jbe
xchg
xchg
push
fwait
cmp
into
cmp
cmp
sub
and
pop
mov
jno
shr
not
repnz
push
repnz
roll
stos
mov
int
adc
lret
xchg
cmp
push
add
push
sbb
dec
lret
aaa
mov
mov
push
ljmp
call
jecxz
mov
jl
aam
daa
call
test
adc
daa
adc
inc
fldl
push
pop
fsubrl
int
daa
aaa
loope
jge
add
or
adc
ljmp
cmp
jg
mov
mov
jecxz
xchg
push
in
or
in
and
aam
cmp
cld
push
jecxz
dec
out
dec
out
adc
int3
mov
adc
xor
ffree
gs
test
jae
jge
lods
stos
sub
mov
shl
xor
divb
and
lcall
aad
mov
fidivrs
shrl
cwtl
stc
pushf
adc
push
push
push
js
pop
xchg
shlb
fsubp
push
cmpsl
mov
mov
push
xor
xor
mov
and
outsl
mov
pop
leave
andl
nop
ss
add
jmp
push
mov
dec
fs
scas
lea
or
testl
inc
lds
pop
jno
dec
fdivl
mov
sbb
cs
js
adc
ds
inc
mov
ds
fidivrl
insl
cmp
arpl
testb
ljmp
data16
sbb
inc
dec
mov
mov
lcall
mov
and
dec
enter
adc
insl
in
mov
mov
add
mov
mov
pop
and
pushf
mov
and
xchg
add
mov
imul
mov
outsb
lods
pand
sub
outsb
fisubl
leave
or
rorl
jecxz,pn
and
rorl
xchg
cmp
pop
add
sub
jns
out
lds
xor
shl
jo
jl
lret
push
sub
loope
pop
mov
mov
mov
jmp
cmpsl
xor
scas
push
mov
cli
sti
movsb
adc
xchg
pop
in
pop
ss
jle
jnp
daa
fsubp
rclb
and
sub
xchg
mov
in
mov
jne
out
jo
aam
adcl
pop
popa
add
add
cwtl
add
sub
mov
inc
or
pop
into
movsb
roll
insl
in
repnz
stos
xchg
cmp
mov
ss
push
out
mov
lret
mov
in
addl
leave
outsb
lock
add
lds
push
xor
push
ret
inc
dec
mov
or
cmc
daa
popf
sti
addb
outsl
fwait
pop
cmp
xchg
ficoms
pop
or
push
mov
pop
stc
fisubs
rorl
cmp
fidivrs
and
and
hlt
stc
lret
bound
mov
loopne
scas
cli
jl
xor
pop
fsubr
xor
pop
xchg
jo
mov
jnp
je
sbb
js
mov
or
add
cmp
sbb
loop
aad
lret
dec
inc
mov
xchg
out
sahf
pop
xor
popa
insb
iret
dec
fmulp
gs
int
xorb
push
fadd
add
orl
jo
xchg
lods
leave
sub
mov
testl
sub
sbb
xchg
inc
lahf
sti
in
scas
icebp
das
pushf
out
cmpsb
fs
mov
cmp
jmp
mov
and
jb
xchg
in
mov
pop
mov
rol
addr16
jecxz
push
sbb
or
es
notb
xchg
aaa
dec
or
loopne
fsubp
pop
daa
pop
mov
add
test
push
dec
es
xchg
dec
out
adc
testb
in
aad
mov
fwait
pop
xor
sbb
push
push
popl
sahf
sbbl
gs
out
mov
shl
imul
push
cmp
mov
out
xor
scas
cmp
ss
aad
lcall
lods
push
add
jbe
xchg
into
inc
xor
push
test
sahf
pop
and
test
arpl
imull
xchg
jmp
nop
mov
and
xor
ret
sbb
repz
or
addl
jmp
sub
out
daa
in
nop
shll
jecxz
adc
jmp
xlat
cmp
aad
cmp
shl
sub
mov
fs
pop
fidivrs
out
movsl
inc
in
dec
arpl
test
inc
ficoml
inc
imul
out
sub
jbe
cmc
fdivl
popf
add
mov
jp
std
add
call
aas
outsl
jno
xor
bound
pop
fistpl
loopne
inc
mov
aam
pop
dec
pop
mov
jnp
pop
push
ds
jmp
cs
and
push
rcrl
mov
fldenv
cmc
pop
leave
jo
enter
es
mov
mov
add
adc
push
jno
adcl
adc
loop
fdivrl
fs
jno
mov
fimull
or
push
addb
int
dec
push
out
add
pop
fcmovne
ss
aad
and
pop
ja
xchg
arpl
pop
outsb
imul
in
xchg
es
jns
inc
lahf
dec
and
sbb
and
rorl
push
mov
in
cmpsl
cmp
jns
stc
push
testl
jb
xchg
enter
data16
xor
sub
clc
adc
test
fisttpll
mov
pop
ret
or
inc
cmp
or
cwtl
mov
adc
hlt
mov
and
lcall
insb
jae
aas
out
and
pushf
push
mov
call
adc
jg
enter
int
xor
pop
lcall
mov
cmp
aam
xor
xchg
add
mov
inc
xchg
mov
fildll
jo
dec
mov
push
rcll
bnd
test
stos
and
call
fldt
and
xchg
cmp
clc
add
xor
jp
cwtl
mov
mov
lret
stc
out
sarb
or
das
lcall
pop
push
mov
mov
pop
in
icebp
leave
ljmp
out
fs
cs
fcompl
call
test
aaa
lret
fbstp
gs
dec
aaa
push
int3
pop
outsl
and
fwait
in
dec
iret
jne
adc
push
out
out
sbbl
popf
mov
adc
movsb
push
xchg
lret
adc
lds
adc
divl
jnp
and
jno
xchg
pusha
loop
push
pop
xchg
les
pop
jg
leave
adc
scas
mov
bound
sub
and
inc
pop
ss
repnz
add
mov
ss
test
lods
jo
call
pop
inc
and
jbe
inc
test
arpl
repz
pop
cmc
mov
pop
rcll
mov
ljmp
jne
aad
in
enter
push
pusha
cmp
cld
ret
or
jl
inc
int3
cs
or
inc
xchg
push
stc
cmc
sbb
cmp
pushl
in
dec
mov
test
mov
and
push
pop
or
lret
and
pop
imul
cmp
sub
pop
pop
dec
cmpsl
push
add
sub
negl
fnstcw
pop
mov
andb
imull
sti
sti
add
cmp
xchg
push
mov
or
pop
gs
inc
loopne
int3
sub
js
pop
and
scas
int
mov
sbb
mov
popa
push
lahf
adc
ja
or
jmp
lcall
push
xchg
lea
les
mov
out
ljmp
and
inc
adc
test
mov
jnp
inc
les
xchg
icebp
aam
jno
push
inc
movsl
test
loop
inc
inc
fs
inc
adc
out
add
rcll
ss
cltd
sub
mov
xchg
fstpl
es
cmp
cmp
ret
shll
jnp
sub
cli
arpl
jb
xchg
movsl
xor
pop
ja
xor
sub
int3
push
sub
in
or
mov
xchg
test
add
sbb
adc
jle
inc
lret
hlt
test
jecxz
or
cmpsb
xchg
push
mov
popf
nop
mov
arpl
movsb
stos
std
pusha
movsl
movsl
cmp
pop
jge
in
outsl
or
ss
mov
push
and
lock
iret
enter
xor
cmpsl
mov
mov
sbb
sbb
lods
pushf
repz
and
or
cmpsl
loop
jge
xchg
push
stos
sub
ds
outsl
into
pop
mov
jp
out
jb
jmp
cmpsl
or
or
xor
sub
fdivl
outsl
fwait
iret
int
rorb
into
sub
add
or
lea
pop
xor
test
pusha
xchg
push
mov
fadds
inc
pop
pop
mov
ds
dec
cli
mov
xor
push
popa
test
ficompl
ret
mov
push
or
fnstcw
sbb
add
ret
sbb
loopne
jns
stos
movsl
cwtl
ret
push
int3
or
iret
pop
lods
pop
xchg
lods
pop
das
fwait
sub
xchg
cmp
flds
jae
lea
jno
sbb
aas
inc
mov
sti
aad
mov
mov
adc
push
or
popf
dec
adc
xor
pop
clc
loope
popa
mov
pusha
xchg
cs
daa
lea
xchg
jae
xchg
xchg
dec
lret
mov
hlt
sahf
in
call
outsl
aad
jge
in
test
imul
cmp
lods
and
mov
out
dec
cmpsb
inc
shrl
aad
jns
lcall
mov
mulb
mov
sub
push
jne
pop
xor
mov
cmpb
mov
sbbb
xchg
xor
pop
inc
loope
mov
aad
dec
jns
inc
mov
pop
jnp
std
sub
dec
movsb
mov
mov
popa
orb
push
insb
mov
addr16
jno
in
frstor
jns
vmovsd
xor
xor
mov
xorb
ds
dec
inc
insl
dec
call
jns
fdivr
xchg
xchg
sub
and
sub
mov
push
int3
xor
and
pop
adc
lret
mov
xchg
xor
clc
push
stc
in
mov
push
aam
push
ja
hlt
mov
int3
hlt
cmpsl
mov
loop
lcall
in
cli
out
mov
cmp
xchg
mov
sbb
push
xor
leave
ficomps
jg
mov
data16
cli
add
mov
mov
scas
xor
jae
fistpl
pop
jl
aas
dec
in
xchg
divb
pop
int3
adc
scas
popa
adc
or
aaa
ds
or
pop
vaddsubps
std
cli
fsubp
mov
aaa
xchg
ds
mov
outsl
rclb
sahf
repz
test
xchg
popf
or
push
mov
fwait
mov
mov
add
outsb
jno
fsubp
loope
addb
loopne
movsb
mov
push
mov
inc
decl
xor
or
mov
icebp
daa
xor
jecxz
push
xchg
test
shll
mov
rorl
mov
icebp
ret
mov
push
pop
repnz
mov
js
jmp
xlat
pop
cmpb
ljmp
cmpsl
xor
mov
xor
adc
ret
in
out
dec
jb
subb
mov
jecxz
fbld
cld
nop
lahf
fisubrs
mov
sub
outsb
in
xchg
cmp
mov
jne
rcll
data16
data16
dec
xor
cltd
mov
jo
jmp
or
popa
xor
out
sbb
data16
lahf
jp
sbb
cmp
cmp
in
fdivs
cltd
cmpsb
xor
jns,pn
xor
inc
out
daa
sbbb
xor
sti
jno
stos
addr16
xlat
jl
fistpl
push
shlb
fidivrs
int3
pop
mov
sbb
mov
mov
pop
sbb
ffreep
sti
inc
dec
and
cmp
xchg
cltd
xor
inc
pop
jno
and
addr16
sahf
iret
sbb
pop
popa
lock
xor
std
sub
push
sbb
xchg
clc
jge
push
adc
sbb
push
out
sub
lods
leave
out
xchg
ret
outsb
sbb
outsb
pop
stc
ret
nop
sbb
nop
mov
xchg
mov
movsb
int3
movsl
or
xchg
fucom
test
jae
mov
mov
xchg
sub
xchg
andb
adc
mov
pop
and
loop
xchg
cltd
jne
mov
pop
cmp
jb
adc
push
push
or
cs
cmc
mov
or
dec
push
jae
fistl
mov
rcrb
inc
sbb
or
rsqrtps
loope
lret
lret
mov
orb
in
xorb
icebp
movb
and
stos
in
sti
je
cli
or
repnz
inc
out
aas
in
rcll
lods
pop
je
aam
hlt
mov
push
jle
test
in
cmp
dec
add
cli
add
out
cli
hlt
out
fsub
or
subl
in
add
and
imul
xchg
je
popf
outsb
mov
sub
nop
xchg
negl
cmp
pushf
les
fsubl
sub
xor
mov
pop
xchg
fwait
sub
out
mov
add
leave
sub
dec
pop
iret
jb
enter
dec
daa
push
lahf
fisubrs
test
in
mov
mov
aas
xchg
mov
push
jle
dec
mov
test
cmp
mov
int3
mov
adc
lahf
inc
rcl
repz
out
js
sub
sarb
pusha
jmp
fs
scas
dec
jg
jg
push
add
cmpb
xchg
es
rcl
sbb
lcall
ljmp
mov
xchg
mov
fsubs
pop
ljmp
jbe
jbe
mov
es
pushl
dec
push
xor
cmp
mov
push
cmp
inc
xchg
adc
andl
rorb
rcrb
testb
test
jne
rolb
and
dec
or
xchg
mov
shll
into
adc
repz
mov
cmp
sub
cmp
vpxor
in
sbb
es
xchg
test
fsub
sti
aad
pushf
push
scas
mov
sub
fcompl
enter
xchg
dec
std
lret
add
or
jbe
pop
mov
pop
fdiv
mov
mov
jbe
das
adc
mov
inc
in
pop
lret
sub
fistpll
pop
or
jno
imul
fistps
aam
mov
test
jnp
inc
jmp
or
inc
inc
adc
or
push
imul
aas
xor
daa
in
push
repz
xor
or
or
mov
adc
jbe
pop
sbb
adc
ficoml
int
cmp
sbb
cmp
pushf
cs
lahf
adc
xor
bound
fcoml
pop
imul
movsb
sub
pop
in
jl
add
rcrl
xor
stc
into
mov
pop
jo
jbe
cmp
mov
xlat
xor
and
jb
xor
cmp
inc
ret
pusha
add
inc
fisttpl
out
push
mov
cmp
and
mov
ret
add
mov
bound
cmc
adc
and
mov
inc
out
jle
lcall
push
enter
stos
inc
fstpl
inc
outsb
sub
xlat
sti
xchg
jp
cs
icebp
hlt
mov
sahf
pop
and
add
movsl
sub
fnstsw
outsl
mov
test
out
lods
data16
js
add
imull
cmpsl
mov
aaa
mov
fucomi
sbb
xchg
dec
ljmp
lods
scas
mov
add
mov
jnp
jl
pop
fisubrs
mov
adc
lock
ds
jge
cmp
xlat
movsl
jae
xor
dec
shrl
pop
in
cld
fists
push
jb
mov
movsb
add
jae
mov
in
repnz
repnz
push
jle
loope
fcoml
pop
jge
jg
add
fistpll
adc
push
mov
test
jae
dec
and
call
pop
ret
sahf
fdivrs
lret
in
ret
mov
aas
mov
sti
fxch
mov
pop
aam
jge
inc
inc
xor
jecxz
icebp
pop
outsl
daa
lock
sub
adc
in
mov
clc
jnp
arpl
push
push
mov
xorb
pop
push
fsub
ret
nop
mov
ffreep
push
dec
out
push
mov
int3
aad
in
sub
dec
cmp
imul
dec
xchg
cmpsl
ja
cmpsb
jbe
mov
out
cmp
pop
lods
out
or
addl
pusha
jmp
into
lahf
mov
mov
icebp
popa
fstpl
xor
inc
sti
sbb
mov
insb
inc
out
in
mov
xor
insl
add
adc
lret
mov
push
aam
movsl
pop
mov
test
xchg
std
or
test
inc
pop
enter
sub
imul
sbb
xchg
or
or
adc
mov
aaa
ficomps
mov
frstor
mov
aas
adc
xchg
or
cmc
push
inc
dec
dec
add
cs
loope
sub
sub
jae
xchg
test
femms
jbe
fmuls
cli
cmpsb
jno
rcrl
inc
orl
insb
cmpsl
js
into
mov
lcall
enter
popf
ret
dec
xchg
imul
push
addr16
or
and
pop
fucomip
inc
push
xchg
dec
mov
or
jo
inc
int
mov
leave
push
stos
push
imul
cmp
out
dec
sbb
mov
repz
vmwrite
xor
sub
int3
add
inc
clc
fisubs
pop
repz
scas
fs
cmpsb
or
pop
xlat
shlb
inc
ds
mov
inc
xor
inc
dec
call
mov
push
adc
addb
push
ds
jno
ds
and
fmull
jp
lahf
aaa
pop
jl
xchg
dec
or
int3
push
push
iret
sub
jge
pop
mov
out
shrb
lret
repz
sbb
cmpsl
andb
rcrb
loope
xchg
cmp
dec
and
or
scas
lahf
imul
cmp
sarl
sbb
cmp
jae
sub
movsb
lods
add
sti
mov
push
mov
adc
cld
lret
add
ljmp
xchg
mov
lahf
xchg
sbb
dec
addl
js
adc
xchg
sahf
cmc
cs
or
xor
insl
and
xor
jecxz
fld
cmp
xchg
jmp
push
mov
sub
jae
mov
shrb
fisubl
xchg
sub
orb
pusha
mov
and
sub
jae
in
inc
ret
sbb
mov
and
or
jmp
cmpsl
clc
pop
roll
and
xor
push
lea
xchg
fs
out
mov
test
test
sub
xor
aas
xor
mov
pop
shlb
scas
insb
or
clc
mov
lock
mov
lcall
es
sbb
repnz
jns
mov
and
xor
leave
fmuls
fcoms
cld
xor
int3
pop
fsub
lods
cmp
mov
scas
popf
push
stos
jmp
add
js
push
push
dec
pop
jno
mov
dec
jno
frstor
xor
push
scas
xlat
mov
ss
adc
push
out
inc
sbb
mov
push
imul
fidivl
mov
cmp
or
xor
movsb
inc
outsl
gs
pop
stos
dec
xor
in
jnp
push
cli
pop
xchg
xchg
cmovb
mov
sti
sbb
inc
pushf
frstor
lret
dec
dec
popf
out
inc
xchg
dec
repnz
dec
sbb
sbb
or
idivl
lds
scas
pushf
sbbl
js
mov
sti
repnz
add
aad
lcall
stos
js
ss
or
fdivrl
adc
clc
mov
jae
lret
xchg
pushf
cmp
fsubrl
inc
cwtl
mov
cmp
adc
add
imul
dec
fisttpl
sbb
filds
jne
movsb
cmovo
sub
ret
sbb
jnp
sbb
test
pop
mov
std
int3
mov
mov
add
push
popf
fwait
sahf
lret
out
shll
popa
xchg
push
xor
jno
mov
push
push
cmp
mov
sbb
mov
xor
add
mov
pop
mov
pop
sub
in
sub
shll
xor
repz
push
popa
enter
cmp
cmp
into
xchg
push
adc
adcl
dec
fstpt
outsb
dec
mov
cmp
test
xor
mov
iret
loope
push
test
int3
and
in
mov
dec
das
adc
ficoml
dec
xor
ret
jg
push
add
adc
xchg
sbb
cld
loop
nop
pop
jmp
mov
and
xor
jnp
movsb
in
or
ror
shl
xchg
stc
addr16
xchg
loope
inc
inc
jbe
fcoml
mov
lcall
fnstcw
movsb
mov
dec
lds
mov
mov
cmp
movsl
arpl
in
push
pop
movsl
test
xchg
adc
xchg
xor
xchg
jb
cmp
pop
cmp
push
test
stc
aad
xorb
cmpsl
loope
fistps
xorl
outsb
adc
cmp
lods
int
add
outsb
movsb
mov
rorl
sarl
leave
add
loope
mov
fistpl
shr
out
clc
popf
mov
fiaddl
mov
push
add
aas
int
xchg
xor
mov
pop
out
mov
test
out
inc
pop
sub
call
mov
sub
dec
xlat
jnp
inc
push
mov
out
xchg
hlt
sub
pop
repz
adc
out
lods
out
push
data16
imul
add
sub
enter
lret
inc
pushf
push
adc
xchg
dec
call
in
mov
shr
mov
push
int
xor
loope
mov
fdivr
repz
or
mov
insl
dec
cltd
fisubl
orl
test
adc
ds
mov
pmulhw
out
int
ret
and
in
outsb
scas
mov
mov
mov
je
jecxz
mov
cmpsl
insb
xchg
outsl
lcall
sub
jb
scas
inc
lret
push
sbb
cmp
cmp
mov
mov
pop
inc
imul
imulb
and
popf
sbb
xlat
pop
loope
dec
or
jns
jg
jae
test
sub
jp
or
lcall
sbb
test
jno
mov
cli
mov
xchg
or
jecxz
mov
testb
or
lret
adc
push
sub
add
and
sub
popa
jne
sub
lods
mov
test
cltd
enter
push
js
xchg
scas
mov
sar
stos
scas
in
repnz
call
mov
adc
hlt
stc
push
jl
shr
mov
shll
push
out
pop
stos
pop
sbb
and
sbb
ret
pop
mov
data16
add
mov
inc
xlat
in
es
cmc
jne
ljmp
cmpsb
push
adc
cld
cmpsb
outsb
scas
dec
daa
imul
orl
movl
sti
inc
repnz
das
addr16
jnp
adc
cmp
popf
pop
mov
lret
jmp
lods
out
inc
mov
xchg
test
dec
loope
data16
inc
jecxz
dec
mov
imul
icebp
gs
sub
mov
int
sbb
fwait
jl
mov
cli
das
cmpb
xorl
push
nop
inc
mov
sub
in
lods
inc
mov
push
push
push
sbb
add
sbb
dec
out
cld
cli
leave
icebp
hlt
jge
out
adc
pop
sub
jmp
clc
imul
dec
pop
stos
dec
sub
push
xor
cmpl
mov
inc
jge
adc
insb
jmp
jae
mov
aam
mov
sub
or
pop
add
sti
sub
lods
or
mov
inc
ror
inc
inc
addr16
mov
sti
std
out
mov
mov
sahf
jmp
inc
jns
dec
lods
add
or
pop
jg
ret
les
pop
jge
sub
stc
mov
jno
mov
pushf
lods
mov
lods
pop
iretw
lods
loop
mov
rcrl
jbe
jb
add
jnp
and
int3
mov
dec
inc
jb
andb
ss
setnp
bound
ret
in
in
out
dec
out
mov
fucom
or
mov
in
jl
adc
leave
jle
adc
jae
fwait
or
int3
dec
popf
inc
add
insb
dec
xor
push
aam
ret
leave
dec
data16
cmpl
loop
adc
cmp
dec
imul
test
add
mov
mov
into
mov
jmp
ds
shrl
pushf
aas
ret
jo
in
jns
lea
es
or
test
jle
pop
and
fs
std
insl
loope
cltd
out
xchg
mov
dec
mov
cmpsb
push
inc
xor
cmp
movsb
imulb
push
out
and
scas
and
pop
jnp
addr16
lock
xchg
adc
add
inc
adc
out
jle
jnp
sbb
xor
jge
xor
jecxz
test
mov
add
or
into
mov
mov
in
movsl
xor
jp
jmp
push
lret
fistps
outsb
add
clc
xchg
dec
das
cmp
inc
hlt
aas
push
ret
push
in
loopne
jecxz
and
mov
clc
in
jae
shl
add
xor
xor
push
adc
xchg
sahf
dec
in
sti
mov
lds
les
popa
xchg
and
sub
or
pushf
push
scas
cs
iret
or
add
push
aad
fistpl
andb
xor
or
ds
and
lcall
mov
scas
test
nop
aas
test
cmp
adc
subl
push
add
or
xchg
fs
mulb
lods
sub
xor
dec
pop
xchg
mov
inc
add
ficoml
in
pop
mov
cmp
int
xor
xor
shrl
xchg
je
fwait
mov
cmpsb
mov
pop
xor
inc
sub
xor
push
lods
xchg
mov
sbbl
roll
mov
lods
enter
inc
or
outsl
or
mov
insb
hlt
xchg
stos
leave
inc
sbb
inc
jecxz
outsb
pusha
lcall
movsl
mov
aaa
std
inc
inc
arpl
fs
add
repnz
fsubl
xor
or
sbb
pop
fistpl
xchg
std
xchg
or
negl
stos
in
push
mov
sub
iret
mov
jo
dec
lock
popf
mov
push
repz
ret
outsb
notl
ret
mov
test
mov
xchg
insl
push
ds
mov
lahf
mov
test
jne
insb
or
xor
cmp
cmpsb
cmp
gs
sub
add
jmp
sub
insl
ljmp
xor
movsl
dec
ja
into
mov
bound
mov
dec
xchg
add
xchg
in
imull
mov
mov
xor
push
pop
mov
xchg
enter
in
fstp
mov
jge
cmp
je
ret
inc
or
leave
or
popa
push
push
mov
callw
mov
addr16
or
cli
cmpsl
dec
xor
adc
mov
shll
xrelease
fldenv
add
outsb
lea
mov
mov
mov
cmp
outsb
mov
scas
xchg
ljmp
insb
or
outsb
test
insb
jns
mov
adc
pop
adc
lret
cmpsb
sbb
inc
pushf
filds
mov
dec
int3
pusha
xchg
imul
mov
push
push
or
out
lods
mov
scas
pop
mov
mov
xchg
xchg
clc
lods
cmc
xchg
jns
sub
cmp
data16
hlt
adc
pop
clc
out
mov
test
insb
cmp
shlb
xchg
sti
popf
outsl
mov
int3
lods
mov
test
clc
sub
fs
outsl
gs
bnd
adc
aas
mov
xchg
inc
xchg
dec
mov
lahf
jl
rorb
mov
in
ficomps
das
push
icebp
jmp
mov
sbb
sbb
call
imul
popf
or
pop
or
pop
imul
inc
daa
repnz
cmc
pop
jmp
and
roll
cmpsb
rorl
lods
popa
ljmp
jns
negl
jp
lea
out
into
mov
and
dec
inc
out
push
add
mov
jb
fxch
inc
push
movsb
lea
add
jge
mov
data16
pop
js
adc
test
das
test
int
ret
iret
pop
adc
push
and
lock
movb
mov
xor
scas
daa
pop
adc
mov
sub
leave
pop
dec
mov
cld
stos
les
arpl
mov
ss
int3
lahf
lcall
xor
rcrl
std
mov
loop
inc
aas
imul
xchg
push
adc
mov
cmp
xlat
pop
popf
push
inc
shl
mov
xlat
push
xchg
cld
mov
nop
loop
xor
dec
daa
add
mov
stos
xlat
loopne
fs
and
jae
std
je
jge
cmpsl
jp
xchg
es
mov
xchg
pop
xor
push
pop
aaa
das
test
jmp
aaa
dec
roll
push
out
or
sub
out
aaa
mov
mov
dec
out
jo
movsb
mov
push
fs
xor
flds
inc
adc
pop
adc
addb
xor
xchg
lock
adc
pop
gs
add
clc
adc
lods
movsb
xor
inc
fstpl
out
push
push
ja
lods
jae
ljmp
jmp
adc
add
stc
sbb
push
sbb
cmp
popa
dec
pop
in
inc
shrl
xor
ret
scas
leave
cwtl
push
rclb
daa
sbb
and
pop
dec
jge
or
addr16
lcall
mov
iret
pminsw
dec
push
lods
dec
mov
jl
dec
ret
scas
mov
fwait
xor
fs
lret
cld
shl
push
xor
enter
aaa
adc
adc
stos
mov
pop
mov
es
xlat
xchg
push
xchg
sbb
sub
xchg
mov
repnz
shll
cld
mov
xchg
divb
push
pusha
aam
sahf
dec
add
rcrl
insb
ficoml
ljmp
daa
daa
les
xchg
orl
mov
jb
mov
pop
jp
push
sub
mov
pop
pop
imul
stc
es
fdivs
int
pusha
cmp
iret
jp
dec
imul
sbb
inc
test
aam
fsubrp
movsl
aad
and
je
lods
jge
lahf
xchg
ffree
ljmp
xor
aaa
mov
ja
decb
push
dec
xchg
nop
test
test
mov
idivl
icebp
adcl
in
or
cmp
mov
pop
test
loope
popf
add
xchg
add
sub
pop
lock
cwtl
push
cltd
mov
pusha
or
mov
addb
in
jp
orb
enter
fmull
mov
mov
std
inc
xchg
sub
mov
lcall
insb
push
js
pop
push
loopne
jmp
and
push
aaa
lock
add
cld
lods
gs
add
out
jmp
scas
or
inc
pusha
jno
std
cmp
dec
cmp
ficoms
lcall
inc
lock
mov
mov
mov
shlb
jg
sub
xchg
push
xchg
mulb
stos
test
repnz
cs
push
lods
orb
loop
xchg
cmp
cmp
mov
jl
inc
stc
xchg
subb
xor
mov
icebp
cli
mov
out
fimuls
mov
xlat
sbb
test
sub
notl
out
mov
sub
push
inc
lcall
fnstcw
cwtl
fcmovu
aaa
sbb
mov
or
pop
leave
insl
xchg
outsb
add
clc
rcrl
push
outsl
cmp
fsubrl
fdivl
inc
mov
in
xchg
pusha
and
ss
nop
and
pop
add
lret
sarl
or
xor
lcall
out
push
outsl
jno
nop
add
ljmp
fidivrl
fadds
psllq
and
cwtl
je
js
std
xor
dec
xchg
and
dec
push
pop
xchg
mov
jne
int3
mov
xor
sbb
lock
movsb
popf
cmp
jp
ss
jmp
adc
fnstenv
sub
mov
in
sub
insb
or
mov
and
mov
and
mov
jl
movsb
pushf
lock
push
pushf
fldcw
inc
or
int3
shll
xchg
mov
and
cmpsl
pop
mov
push
repnz
sbb
push
out
dec
loop
mov
cmp
lods
call
rcrl
mov
insb
add
call
cld
data16
and
push
inc
movsb
dec
adc
push
xor
sbb
xor
sbb
loopne
js
mov
or
jno
fisttpll
test
xor
stc
cld
es
scas
add
loope
sahf
inc
xor
enter
frstor
pushl
jle
gs
jmp
int
pop
lahf
movsb
mov
xchg
push
sbb
xchg
out
inc
jle
inc
jb
lahf
lahf
sbb
dec
shrb
fnstenv
sbb
cmp
push
sbb
xchg
hlt
cmp
mov
cld
rolb
jb
pushf
pop
aad
mov
sahf
popa
or
iret
inc
sbb
jmp
fdiv
les
jmp
and
push
bound
mov
mov
lea
aam
adc
lock
movsl
daa
call
lahf
daa
inc
notb
xor
xchg
sub
orl
xchg
xchg
inc
cmp
ljmp
scas
push
or
idivb
and
pusha
lcall
mov
push
sub
std
sub
pop
stc
cmp
out
push
pusha
dec
and
popf
cmpsl
lods
das
test
push
loopne
call
gs
stos
testb
les
adc
and
loopne
out
jg
ljmp
cmp
pop
sbb
sub
bound
pop
cmp
js
sarb
pop
add
adc
fdiv
xchg
mov
jb
dec
idiv
in
sarb
cltd
bound
fcoml
push
stc
notl
mov
add
mov
mov
pop
xor
subl
push
cli
xchg
loopne
sbb
data16
push
dec
cmp
inc
push
push
das
test
fcoml
adc
popf
adc
dec
mov
jno
lock
mov
inc
sarb
shll
or
and
jecxz
mov
mov
xchg
fmuls
sbb
lahf
jb
int
inc
dec
dec
dec
mov
jbe
jecxz
data16
mov
shl
jno
add
add
in
xchg
mov
sbb
add
cmp
mov
ja
stc
push
adc
dec
cld
cmp
mov
push
mov
arpl
xchg
mov
jae
aad
cmpsl
sbb
stos
dec
mov
and
mov
cltd
push
fs
sbb
dec
inc
mov
inc
int3
mov
in
cvtps2pi
pop
test
or
cmp
sarl
cld
sti
mov
xor
or
out
stc
pop
stos
sbbl
xchg
mov
mov
imulb
jb
mov
mov
inc
pop
andb
inc
mov
lds
xchg
cltd
pop
repnz
mov
out
push
ds
idiv
aas
stos
xor
sbbb
or
dec
sub
jne
or
sbb
repnz
int3
push
pushf
sub
adc
xchg
pop
pop
or
sub
mov
aas
dec
xchg
roll
mov
outsl
mov
es
jnp
mov
insl
fdivp
sub
jmp
jb
add
jb
bound
adc
stos
xchg
ss
sub
stc
pusha
pushf
adc
cmpsb
test
mov
retw
fdivrp
and
or
pushf
add
jo
daa
test
pause
jbe
cmc
pusha
push
xchg
loopne
push
mov
fs
mov
iret
mov
jg
out
add
xor
xchg
arpl
test
fsubl
xorb
pop
push
mov
ret
aas
mov
das
mov
or
lea
pop
jae
push
push
pop
sti
mov
adc
mov
das
fidivrl
push
fcmove
call
shr
xor
pop
sub
mov
cmp
inc
adc
lahf
fnstcw
stos
mov
mov
mov
addr16
xchg
pop
loope
scas
jl
adc
popf
xchg
cli
repnz
popf
fnstenv
sub
je
mov
jb
out
cmp
pushf
mov
shlb
mov
mov
sbb
mov
lds
leave
cmpsl
mov
ja
lock
and
nop
mov
outsw
into
jge
mov
mov
shlb
cmp
pop
adc
and
outsb
das
jns
scas
or
and
mov
and
or
inc
loop
xchg
and
xchg
jecxz
fimuls
xor
iret
insb
push
inc
cmp
ficoml
out
sbb
dec
add
sbb
push
shlb
imul
jns
int3
adc
mov
repz
add
stos
aad
imul
ljmp
push
or
mov
stc
push
mov
lret
xchg
dec
dec
sahf
pop
sbbb
dec
xchg
lret
jae
outsl
jmp
fdivrl
cmp
mov
movsl
and
pop
jmp
push
mov
repnz
shr
das
jmp
mov
out
sbb
or
push
in
cltd
ret
jmp
mov
dec
subb
bound
dec
call
into
push
scas
rorb
xchg
and
pop
jne
xlat
insb
mov
rcll
and
fisttps
sti
jp
sbb
mov
std
dec
dec
mov
push
mov
dec
aas
mov
xor
divps
cmp
or
adcl
stc
les
sbb
fldl
jmp
push
mov
scas
insb
push
mov
jp
ret
in
stc
xchg
mov
pop
aas
cmp
subl
mov
add
loopne
stc
add
shlb
mov
push
into
adc
sub
sub
push
test
lret
pop
pop
bound
push
iret
dec
sbb
pusha
sarb
arpl
inc
xchg
adc
imul
pop
test
mov
dec
out
mov
mov
sbb
das
ret
cmp
and
stos
inc
pop
xchg
cs
inc
push
in
xchg
addr16
add
jno
out
loop
ja
aam
jb
or
and
dec
jnp
enter
mov
rcrb
jmp
push
incb
loopne
jecxz
sbb
add
sbb
xchg
jo
push
mov
and
aas
mov
mov
dec
push
fstps
mov
jne
icebp
movsb
lock
enter
pop
adc
mulb
pop
inc
ret
call
movsl
movb
int
test
lods
dec
ds
cld
add
jo
pop
fdivrl
jb
sbb
jb
es
and
inc
cmpb
ss
addl
fildl
movsl
dec
or
insl
mov
stc
pop
int3
rolb
jb
jns
push
in
and
mov
iret
test
push
lock
out
sti
ds
inc
xor
imul
fcoms
adc
aaa
andb
mov
push
sub
pop
add
xor
bound
in
jle
scas
add
jl
icebp
push
xchg
lcall
push
int
test
inc
lds
xor
pop
add
mov
movsl
xchg
sbb
adc
fwait
sarb
pushf
sbb
mov
dec
jno
and
lret
rcll
jns
lret
or
xchg
popf
aas
decb
gs
sub
jne
fnstcw
test
int3
cwtl
insb
hlt
xchg
push
jg
nop
cmpsb
aaa
jp
mov
push
movsb
call
adc
adc
iret
fstpl
add
and
pusha
adc
loop
popf
sub
mov
xchg
inc
das
sbb
lods
out
popf
mov
mov
into
pushf
pushf
cmpsb
jb
ja
dec
imul
push
add
xchg
adc
test
xchg
js
sbbb
mov
xchg
js
adc
jle
std
cli
pop
std
pop
ror
xor
cld
lret
or
gs
lea
jge
ret
mov
push
sub
or
sbb
hlt
mov
es
jbe
test
jl
sub
pop
push
jle
mov
lcall
add
push
cmp
sahf
push
aam
mov
push
cmpsl
cmc
das
pop
gs
ds
pop
pop
adc
shrb
lock
mov
mov
int
imul
loop
add
xchg
pop
test
cltd
mov
adc
cwtl
mov
shlb
es
cmovge
mov
daa
jo
gs
add
mov
mov
dec
jmp
stc
lods
filds
divl
pop
fistpll
fidivs
mov
std
jmp
mov
jno
rorl
aaa
xor
testl
dec
ds
jmp
mov
add
dec
jecxz
and
mov
cwtl
sub
dec
or
push
and
inc
sub
rol
js
hlt
or
mov
mov
movsb
fcompl
imul
mov
cmp
fs
decl
sbb
loope
jle
cmpsl
xor
pop
dec
pop
aaa
lods
jnp
push
lcall
scas
or
icebp
mov
ret
repz
push
lret
sti
outsb
add
sub
xor
imul
or
mov
add
aam
popf
or
ds
jle
xor
jno
pop
and
cmp
out
jle
es
repnz
cmp
loope
push
dec
jne
and
dec
jmp
fstpt
push
in
pop
cmp
jae
jp
pop
jmp
lcall
je
in
fs
lahf
fs
ljmp
push
lock
xchg
scas
mov
jb
mov
cmpsl
inc
sub
testb
inc
or
testl
jle
in
idivl
adc
sub
daa
lcall
adc
rclb
test
add
xor
ds
fcmovb
pop
inc
sub
jp
xchg
not
in
xor
push
movsb
mov
and
clc
call
mov
in
jns
jp
insl
notb
es
fsubrl
pop
std
jmp
mov
lods
lods
mov
jge
fdiv
lds
movsb
add
cs
mov
pop
aad
cmpsl
dec
sti
test
mov
ret
push
push
inc
popl
mov
push
jne
bound
lds
xor
and
std
cltd
sub
test
test
icebp
jbe
cld
lcall
pop
push
mov
sub
and
pusha
cmp
scas
mov
cli
flds
pop
incb
push
inc
neg
mov
pop
orb
popa
adc
xlat
subl
mov
mov
stos
mov
dec
ds
les
mov
loope
out
shlb
imul
xorb
mov
pushl
jne
ja
icebp
dec
jle
cmp
bound
xchg
or
push
dec
ret
cmpb
loope
addr16
or
dec
fbstp
sub
mov
out
jne
stc
mov
sub
cmp
jbe
push
aad
ss
aas
or
test
push
cmp
add
mov
je
push
mov
jne
int3
mov
pop
cmp
mov
push
shlb
xchg
add
call
push
popf
cld
xchg
push
inc
ds
cli
inc
pop
inc
out
cmc
sub
lea
mov
mov
lcall
in
ds
and
or
stos
mov
aad
push
ret
fsts
sub
dec
pop
xchg
xchg
jae
daa
mov
dec
jno
mov
and
pop
lss
je
je
xor
push
pop
jae
pushf
addb
mov
push
jge
lret
push
sbb
adc
movsb
hlt
divl
cs
shr
add
add
shlb
sub
out
inc
add
inc
in
ficomps
lods
in
subl
or
xlat
xchg
push
das
xchg
push
jmp
decl
dec
jmp
push
cmovae
adc
stos
sbb
jecxz
cmp
fwait
loopne
mov
or
cmc
mov
push
mull
push
test
int
push
test
mov
pushf
jmp
lcall
xor
add
rol
adc
mov
ret
and
mov
adc
adc
out
das
mov
enter
xchg
push
idivb
push
pop
std
les
popa
scas
jg
mov
mov
jle
adc
xor
and
sub
inc
mov
mov
add
and
ds
adc
ja
lahf
insl
aam
insb
jae
aam
xchg
mov
in
mov
fwait
xlat
rcrb
and
lea
jge
imul
mov
int3
stos
in
lcall
push
mov
cmp
push
nop
out
lea
movsl
scas
mov
xorl
push
pop
or
divl
addr16
insb
sub
and
hlt
imull
inc
xchg
loop
int
pop
pop
iret
movsb
addr16
push
dec
lea
cld
cmpl
add
cmp
add
fidivrl
push
std
mov
mov
addr16
stos
or
rorb
loopne
jbe
xchg
stc
jmp
addl
sbb
sub
push
imulb
aaa
mov
mov
js
cmpsl
sti
outsl
sbbb
add
cmp
test
cmp
inc
inc
in
jne
xor
arpl
fcomi
aas
ret
and
or
out
inc
adc
stos
push
mov
mov
mov
icebp
or
pop
push
and
xchg
and
adc
cmpsb
push
in
cmp
in
pop
mov
mov
lds
dec
mov
mov
stos
xor
sbb
lret
sbb
inc
push
in
adc
mov
aaa
aas
fdivr
mov
pusha
pusha
ss
inc
mov
or
out
sahf
hlt
xchg
jle
ret
adc
dec
stos
mov
loop
jle
adc
dec
repz
inc
out
subb
jb
inc
sahf
and
imul
sub
out
add
lcall
dec
push
adc
shll
pop
clc
jno
rcrb
aas
cmpsl
and
cmp
mov
jecxz
or
adcb
fcmovb
sbb
or
dec
mov
lods
and
xchg
inc
out
cmp
dec
push
adc
aam
shrl
lock
icebp
adc
jp
add
sbb
pop
and
and
adc
pop
lcall
movsl
int
gs
aad
xchg
adc
add
mov
jmp
dec
lea
les
aaa
insl
std
or
pop
push
sbb
jge
ljmp
sbb
out
ds
incl
mov
pop
jbe
cmpsb
mov
inc
ja
aaa
inc
push
lds
loopne
xor
cs
outsl
dec
push
push
mov
popa
xor
inc
add
mov
pop
popa
fcmove
ja
adc
jl
sbbb
xlat
pop
dec
shrl
xchg
aas
dec
xlat
dec
loopne
mov
and
xor
xchg
push
mov
dec
ficoms
fnstsw
xchg
test
mov
mov
cmpl
push
adc
cli
xchg
pop
fistpll
insl
jbe
ja
stos
fsubl
mov
and
repnz
cmp
ljmp
loop
xchg
jle
xchg
sbb
push
jo
add
xchg
shrb
rcll
or
sbb
fcmove
mov
lods
das
in
arpl
popl
pop
dec
adc
push
xchg
adc
mov
xchg
ret
fcmovu
test
je
or
adc
sub
adc
cmp
ret
insb
mov
int
push
inc
inc
lods
outsb
out
push
rcrb
divb
jne
and
or
stos
cmp
sub
jle
ficompl
mov
popf
mov
ret
pusha
in
pop
in
subl
scas
es
push
and
pand
movsl
movsb
mov
cmpsb
in
stc
cltd
and
inc
std
dec
add
mov
arpl
pop
negb
test
xor
stos
dec
imul
lods
rclb
popl
pusha
jo
inc
lretw
and
bound
xchg
mov
lcall
sahf
add
push
mov
fldl
push
pushf
gs
or
mov
das
fldcw
push
jmp
or
and
xchg
movsl
push
outsb
lahf
gs
adc
out
cmpsb
or
sbb
fbstp
in
adc
ljmp
jmp
aaa
dec
mov
push
es
inc
lret
lock
cmpb
mov
rcr
sub
jl
xchg
pop
dec
je
add
mov
orb
lock
cmp
shl
inc
xor
gs
lods
pop
ljmp
push
push
sbb
xchg
sub
jmp
dec
sbb
pop
popf
cmpsb
pop
jo
mov
dec
xor
sbb
cld
pop
lahf
aaa
cltd
adc
sbb
xchg
mov
arpl
in
sbb
ret
int3
cmp
xchg
incb
mov
stos
xchg
add
imul
outsb
xor
hlt
mov
mov
cwtl
insb
loope
sub
mulb
aas
loop
or
mov
ret
push
jecxz
push
jnp
xchg
lret
cmp
mov
push
sbb
xor
dec
adc
fdivrl
inc
stos
pop
xor
push
mov
cmpsl
cld
jns
cli
loop
outsb
fs
ror
cmc
test
aam
lods
rorb
jmp
xor
adc
fstps
shll
pop
push
mov
js
pop
cs
lods
andl
and
pusha
jnp
ror
fxch
xchg
inc
roll
fnsave
inc
outsb
xchg
es
xchg
ret
xor
orb
xlat
dec
sub
mov
and
or
outsb
push
cwtl
dec
sub
jcxz
and
push
lds
push
stc
inc
shrb
daa
or
xchg
scas
scas
mov
xchg
rorl
loopne
sub
xor
lods
xchg
mov
lret
push
rorl
movsb
push
data16
cltd
push
dec
outsl
dec
add
sbb
add
push
les
fiaddl
push
aad
fdivrl
das
mov
mov
scas
push
lods
clc
int
je
and
out
pop
ljmp
call
mov
scas
ljmp
test
cld
outsl
sub
lock
ds
lock
leave
in
add
push
inc
das
hlt
test
xchg
out
out
stc
add
lret
andb
add
int
div
and
cld
or
stos
sub
xlat
adc
pop
nop
out
push
push
aas
and
jns
insl
jp
push
jb
mov
push
pop
sub
pop
insl
mov
inc
push
push
jno
pusha
xchg
pop
lods
int3
call
or
mov
sub
adc
sti
cs
call
pop
test
xchg
je
pop
int
insb
jb
and
xor
outsb
call
testl
loope
add
mov
ja
mov
or
mov
push
dec
out
cmp
mov
push
addr16
jmp
subb
stc
fists
test
test
push
outsl
js
mov
ret
add
outsb
push
xchg
and
pop
fdivrl
adcb
movsb
sbb
dec
adc
ret
xor
bound
xor
mov
jb
jle
insl
xchg
xor
push
clc
pop
or
mov
or
sbb
sti
cli
pop
xchg
xlat
ja
push
xchg
imul
xchg
cmp
jno
pop
xchg
pop
push
daa
lret
xchg
push
sub
jno
mov
xchg
jmp
sbb
repnz
fcoml
jle
mov
divb
into
shrl
jne
xor
inc
mov
mov
fnsave
rclb
sbbb
push
inc
in
sub
js
fcoml
and
inc
popf
pop
clc
lahf
jle
cli
pop
repz
sti
sbb
sub
jbe
pushf
dec
ret
mov
rclb
cmp
fwait
pop
fwait
movsl
out
mov
mov
aaa
xchg
incl
lret
xor
das
ljmp
mov
jmp
add
push
das
sub
lods
mov
aad
sbb
clc
sbb
sbbb
test
lea
in
or
cld
aam
cltd
std
repz
mov
lret
sub
pop
outsb
nop
repnz
fmul
int3
test
push
lahf
push
dec
rolb
leave
test
xchg
out
sbb
out
stos
sub
inc
int3
cmpsl
fadds
jns
pop
adc
push
jno
push
loope
mov
std
mov
push
add
mov
loop
dec
pop
cmp
out
cmp
pop
sbb
pusha
pushf
lret
xor
nop
insl
jmp
adc
lds
pop
inc
jae
pop
jne
inc
mov
jo
fs
in
dec
pusha
adc
imul
pushl
cld
dec
out
into
insb
stc
loopne
xor
stc
mov
call
dec
dec
xor
mov
aam
fmul
aaa
dec
mov
aad
jecxz
mov
pop
dec
cltd
adc
sti
mov
inc
repz
mov
xor
rcr
rorb
xor
sub
sbb
cmpsb
jns
lods
mov
xchg
inc
dec
stos
fistl
rorl
inc
jp
mov
xor
dec
xchg
mov
inc
mov
mov
aad
dec
in
int
jle
mov
pop
repnz
stos
sub
fimull
sbb
adc
dec
outsl
jbe
movsl
fwait
dec
and
mov
ret
ret
jge
adc
xchg
add
lret
xchg
rcrb
push
cli
jge
aam
push
push
inc
pop
sbb
js
and
std
cmp
notb
and
in
daa
popf
jp
push
mov
cli
xchg
jmp
push
sub
cmp
and
sti
inc
in
iret
add
mov
bound
adc
push
jle
pop
xlat
fs
and
aas
xchg
and
dec
jle
daa
dec
pop
in
jl
mov
pop
push
aas
popf
mov
push
fdivr
inc
pop
test
inc
pop
loope
cs
xchg
sahf
cld
xchg
mov
add
jo
imul
scas
es
mov
mov
xchg
mov
jbe
xor
xchg
jmp
lea
jp
xor
or
mov
shrl
push
add
shlb
pop
lret
mov
in
or
xor
cmp
jnp
and
in
adc
adc
dec
hlt
xor
mov
adc
or
inc
pop
jge
iret
jmp
out
cmp
loopne
popf
repnz
cmove
mov
inc
cmc
popf
push
lods
sub
xor
or
push
jo
loop
ret
pop
sub
data16
and
mov
std
mov
rclb
and
mov
jb
sbb
pop
jle
mov
loopne
push
inc
inc
hlt
push
sbb
arpl
repnz
sbb
psubw
push
inc
mov
idivl
inc
pop
enter
lds
pop
jno
push
pop
add
inc
add
inc
fnstsw
lock
mov
push
idivb
loopne
nop
icebp
xchg
js
push
jne
mov
mov
mov
dec
cwtl
and
gs
cmpb
push
or
mov
jnp
dec
xchg
out
push
and
inc
pushf
pusha
call
out
daa
sbb
jmp
mov
jl
push
push
sbb
rorl
std
xchg
xor
lods
arpl
xorl
call
lret
test
xor
fildll
add
fwait
sub
cmp
test
xor
lcall
sahf
call
mov
sub
pusha
popf
inc
mov
xor
mov
sbb
loop
out
or
in
ret
xchg
add
imul
adc
and
mov
or
andb
jg
test
mov
push
xchg
sbb
inc
add
in
jle
mov
inc
mov
mov
inc
int3
or
push
or
int3
out
dec
push
mov
push
xorb
out
inc
fcomip
cmp
inc
and
neg
xor
das
fisttps
loop
out
sub
ljmp
mov
out
stc
sub
cmpsl
or
sbb
xchg
inc
cmp
mov
js
loopne
mov
lret
dec
sbb
shl
cmc
mov
aaa
sahf
pop
cld
rcl
pop
lret
sahf
or
cwtl
add
mov
mov
lods
pusha
int3
fiaddl
jmp
test
mov
into
xor
push
push
into
add
sbb
sbb
jg
mov
pop
push
out
push
inc
rolb
inc
pop
push
sbb
inc
and
into
mov
fmuls
test
rcrl
xor
jle
mov
shrb
sbb
lret
ffree
scas
xchg
pop
insb
mov
ds
shlb
mov
cld
les
das
mov
scas
xchg
add
sbb
xchg
arpl
fdivrp
fldenv
jo,pt
or
test
mov
xor
pop
pop
jp
stc
mov
stc
push
sbb
aaa
cmp
push
jne
push
jge
lcall
mov
lret
mov
xchg
cmp
sti
rcrb
es
aaa
push
sub
adc
cmp
sbb
adc
mov
xchg
ljmp
add
push
xor
mov
xor
jbe
aaa
out
adc
mov
fs
fdivl
sbb
clc
push
jno
std
lods
inc
push
adc
inc
mov
roll
test
sub
jg
imul
mov
sub
xchg
lock
jg
pop
xor
push
xchg
xchg
loop
shll
test
inc
pop
fsubs
test
in
sbb
xchg
roll
mov
lcall
jno
push
push
adc
cmp
scas
int3
es
sub
mov
pop
cli
dec
fisubrl
dec
fsubrl
ljmp
add
jp
dec
lock
jl
push
push
out
xor
mov
mov
mov
xor
aam
xchg
int
dec
add
xor
adc
jg
imul
jmp
adc
pop
push
faddl
rolb
xchg
and
mov
mov
stos
push
inc
pop
add
sub
mov
pop
jne
push
sti
push
or
repz
pop
pop
sub
pop
fcompl
inc
and
inc
xchg
mov
rolb
xor
push
push
in
ret
inc
in
subl
ja
xor
cld
hlt
sbb
movsb
dec
pop
push
xlat
and
imul
fiadds
idiv
sti
xchg
pop
push
push
lods
mov
mov
xor
fmuls
xchg
cmpsb
sbb
mov
dec
sbb
jecxz
stc
loope
movsb
pop
js
xchg
cmp
orb
adc
and
pop
lahf
mov
jp
pop
das
pop
xchg
push
mov
and
cmpsl
ret
mov
mov
mov
testl
inc
dec
lods
inc
mov
dec
stc
hlt
aam
cmp
enter
xchg
ret
mov
dec
int3
xor
loope
jle
or
insl
pop
clc
adc
xor
sub
cltd
sub
adc
mov
jae
addl
rorl
dec
mull
mov
test
orb
add
mov
add
add
adcb
push
inc
adc
jmp
mov
or
xchg
pusha
lret
lods
add
js
dec
out
fbstp
andl
jecxz
cmp
xor
inc
out
sbb
call
rorb
inc
xor
lahf
ss
cmpsl
and
ds
push
sbb
xchg
push
aad
mov
les
pop
rclb
and
xchg
loopne
imul
mov
jp
je
je
cmp
jo
fnstsw
ret
ret
jmp
adc
pop
jmp
std
test
mov
push
push
cmp
xchg
adc
clc
les
jmp
mov
dec
into
jno
lahf
inc
fadds
or
push
cmpsl
nop
sarb
push
dec
xchg
filds
or
arpl
fisubrl
xor
mov
pop
lret
jb
mov
inc
movsb
data16
jg
mov
push
jne
jo
mov
pusha
mov
mov
push
nop
ds
mov
shll
shlb
mov
fdivrs
xor
push
jmp
outsb
loop
test
push
xchg
sbb
popa
test
inc
rcrb
stos
cld
inc
sahf
mov
jns
test
mov
arpl
add
ret
rolb
sub
pop
test
sub
in
ss
dec
fld
popf
and
imul
mov
inc
ljmp
not
testl
fsubl
stc
outsb
inc
jne
jae
bnd
decb
push
iret
xchg
mov
out
aad
ljmp
xchg
jmp
xchg
xor
mov
push
ss
sbb
adcl
adc
cmp
jecxz
push
fimull
cmpsl
lods
decb
mov
mov
mov
and
mov
xor
cmp
mov
mov
lret
loope
and
mov
sub
mov
int3
pushf
cld
xor
adc
imul
lock
fcompl
fnsave
arpl
stc
movb
rcrl
pop
adc
in
pop
scas
gs
jp
shll
push
jb
xchg
in
imul
pop
shlb
bts
lds
rorl
out
cs
out
mov
dec
mov
imul
inc
mov
mov
mov
ja
sti
xor
jl
jb
xor
dec
sahf
jge
inc
in
into
aaa
mov
mov
repnz
xchg
insl
das
test
pop
jns
and
xchg
jae
jo
add
inc
fcoms
cmp
mov
sarl
fcomi
rcll
mulb
lods
xchg
lret
ret
fisubl
add
xchg
movsl
bound
pop
aaa
int3
and
mov
loopne
lcall
push
std
pop
mov
xchg
push
mov
sub
fimull
xchg
adc
out
rolb
data16
test
fcoml
cmp
repz
pop
leave
push
and
repz
push
xor
or
mov
sub
loope
rolb
lods
jo
mov
add
int3
pmulhw
mov
cmp
ss
cwtl
mov
test
fneni(8087
dec
push
dec
pusha
xor
rcr
mov
jmp
notl
rorb
cs
in
loop
jno
push
lcall
sbb
ss
mov
out
mov
idiv
pop
jmp
cltd
call
jl
push
lea
fs
movsb
and
jns
iret
lock
jns
add
xchg
and
call
mov
dec
jae
popa
fidivl
popa
frstor
pop
add
lods
out
xchg
icebp
push
mov
ljmp
mov
sub
aad
hlt
stos
mov
lea
mov
scas
mov
aaa
xor
or
cmp
xchg
in
xchg
sbb
push
bound
daa
inc
cmp
xchg
jnp
sub
sbb
addl
xlat
mov
pop
testb
and
xchg
pop
fchs
jmp
fsubrs
dec
xor
incl
daa
mov
mov
mov
dec
add
xor
test
leave
xchg
pusha
pop
lods
xor
insl
addr16
loope
mov
inc
pop
bnd
inc
adc
sbb
outsl
cmpsb
dec
sub
push
adc
add
insl
shlb
les
xchg
pop
inc
mov
push
mov
push
xor
insb
out
mov
ljmp
scas
insl
mov
rcrb
mov
inc
mov
inc
push
xchg
fnstsw
sub
cld
lock
cmp
int
mov
inc
das
in
xor
add
dec
fadd
fiaddl
dec
movsl
cmp
inc
push
sub
ja
pop
aaa
inc
hlt
subb
mov
test
je
roll
lock
cmp
inc
mov
stos
dec
mov
or
mov
addl
shr
out
dec
enter
jecxz
popf
push
outsl
out
push
inc
xchg
mov
inc
push
pushf
fs
int
aam
add
shrl
cmpb
cmpsb
ret
pop
test
dec
sbb
mov
and
or
jecxz
cmpsb
mov
cli
jg
pop
jp
aad
sub
adc
ret
cmpsb
imul
addl
out
gs
out
pusha
stos
leave
push
or
stc
adc
sbb
pop
push
inc
sub
cmp
dec
pushf
mov
mov
cltd
inc
push
jle
movb
das
repz
rol
loope
dec
gs
lods
push
sbb
lds
rcrb
xor
jb
fwait
mov
into
pop
outsl
es
pop
mov
inc
jo
sbb
data16
mov
cld
int
inc
adc
cmp
bound
testb
jmp
loopne
movl
leave
dec
aad
call
inc
fldt
fmul
mov
or
out
sub
inc
xchg
xchg
sub
jne
mov
dec
jmp
sbb
pop
jp
out
or
ret
jmp
xor
mov
and
iret
test
xor
pusha
lret
xchg
ja
lea
cld
cmp
push
repz
mov
cmp
jae
pusha
lret
adc
mov
cmpsb
push
mov
jl
cmp
aad
cmp
jle
rcl
sub
pop
leave
daa
out
stos
jge
ret
sub
lea
inc
loop
sbb
cmp
lret
movsb
mov
add
mov
in
adc
imul
fstpt
rorb
push
mov
cli
aas
ja
pop
ficomps
lods
rcpps
shrl
xor
out
inc
sti
test
fdivrl
mov
mov
and
pop
sbb
hlt
xchg
mov
dec
jp
repz
sub
xor
aaa
dec
data16
jbe
out
enter
repz
jno
adc
cmp
test
jbe
cmp
and
ficomps
sarb
or
int
or
lret
xor
aad
dec
sub
movsb
js
mov
or
lcall
aas
das
in
in
mov
mov
dec
xor
int
mov
leave
mov
adc
adc
xchg
jl
ja
pop
jno
pushf
adc
inc
sbb
xchg
clc
lcall
mov
ja
push
mov
sbb
mov
pop
arpl
push
pop
push
leave
ljmp
adc
inc
sbb
gs
push
xchg
das
inc
scas
andb
cli
stc
and
scas
aam
lahf
ret
fldenv
jne
pop
sub
cmp
cmp
sbb
cld
jg
inc
clc
lcall
xchg
test
xchg
adc
js
dec
imul
sub
mov
fwait
iret
outsl
sub
cmp
add
aad
pushf
push
ss
clc
fimull
push
popa
push
lods
das
and
cmp
rcrb
out
jp
mov
loop
xchg
sahf
lahf
lret
out
test
aam
sub
cld
and
daa
ret
mov
arpl
or
jno
pop
sbb
sbb
int3
add
adc
ret
mov
insb
xchg
sbb
outsl
gs
test
mov
add
xchg
fsub
jmp
sbb
xor
shl
stos
xor
int
shll
aas
divl
or
sbb
in
cmp
nop
sub
fnsave
jb
jecxz
movsl
orl
int3
stos
inc
fmull
in
pop
and
mov
test
arpl
adc
std
sub
push
dec
cmp
mov
lahf
or
pop
and
and
icebp
jmp
cwtl
loopne
ret
mov
jbe
pusha
cmp
out
mov
and
xor
mov
push
jae
icebp
mov
mov
je
test
mov
ds
shlb
in
test
imul
xorb
incb
mov
sbb
add
adc
jnp
pop
subl
std
xchg
push
outsb
push
outsb
popa
ret
mov
sub
push
pop
xorl
ss
outsl
xchg
xorb
adc
lods
in
fs
add
pop
icebp
sub
pop
clc
jmp
sbb
cmp
xchg
cmp
sbbl
ds
inc
das
pop
mov
add
or
or
std
mov
dec
xchg
pop
mov
push
xchg
jnp
insb
mov
jnp
mov
aad
lcall
xlat
das
mov
push
mov
out
fcoml
push
incl
dec
xchg
mov
inc
incl
or
fsubp
sbb
sti
lods
ret
loopne
addl
jecxz
push
sub
mov
adc
push
movsb
fistpl
sbb
repnz
clc
mov
idivl
insl
mov
insl
inc
mov
push
scas
lcall
mov
dec
push
dec
inc
int3
mov
aam
test
pop
sbb
or
sbb
data16
ret
in
lret
pop
inc
test
lods
fnstsw
idivb
add
out
fwait
jae
ret
gs
dec
ljmp
pusha
mov
adc
dec
xchg
or
mov
push
sub
inc
mulb
lret
cmp
pop
enter
mov
xchg
mov
test
mov
stos
mov
jg
dec
loopne
cmc
test
jge
repnz
mov
push
pop
ljmp
xchg
sbb
loopne
adc
xchg
cmp
mov
xchg
scas
mov
cmp
jmp
and
and
test
add
cs
jbe
imul
test
mov
inc
nop
popf
std
push
push
sarl
mov
imul
and
inc
sbb
cmp
call
mov
xchg
cmpsl
js
sbbb
sbb
mov
or
xchg
sti
jmp
outsl
jge
in
cmp
scas
sub
sub
push
leave
stos
jo
stos
mov
or
mov
pop
mov
ds
adc
add
dec
mov
jo
mov
push
mov
in
add
sarl
push
nop
ljmp
pop
popa
or
leave
inc
sti
rcl
f2xm1
imul
xchg
in
mov
jne
stos
push
cmp
dec
adc
sbb
sbb
or
ja
rcll
js
cmpsl
dec
test
ret
cmpsb
add
loop
pop
inc
addr16
pop
mov
loop
inc
out
mov
xor
adc
mov
test
dec
pop
add
int3
pop
or
jl
or
add
test
in
jo
into
xchg
sbb
pop
cmpsb
std
loope
dec
shlb
and
adc
fstpt
movsl
test
dec
repz
mov
gs
sub
dec
and
inc
sahf
mov
adc
or
cs
sbb
movsb
cs
loope
push
cli
out
mov
sub
xchg
sub
lods
mov
sub
add
lods
xchg
dec
jno
in
cld
mov
xchg
push
incl
jge
sbb
data16
mov
adc
cltd
std
ljmp
cmpsb
pushf
cmp
fsub
pop
push
leave
and
sarl
lock
push
fld
insl
adc
xchg
and
cmpsb
imul
and
cli
sub
icebp
dec
rcrb
out
cmp
cmp
sbb
loop
cmpsl
push
aad
pop
jmp
fdivrs
sub
jnp
and
dec
push
xor
loope
xor
push
sbb
adc
shrl
pop
adc
lds
std
add
call
jecxz
mov
clc
sub
xorb
xor
cmpsl
pop
push
xor
adc
sbbl
dec
pop
popf
mov
clc
and
nop
add
cmc
push
aas
or
pop
ljmp
rcll
std
sbb
push
push
orl
xor
fwait
or
pusha
test
in
dec
sbb
pop
xchg
pop
and
xor
lea
out
gs
mov
sbb
cmpsl
out
aam
scas
inc
scas
lret
in
mov
lcall
neg
push
cmpsb
adc
and
sub
mov
sub
add
push
mov
cwtl
cmp
mov
repz
add
es
and
and
cmp
mov
jno
pusha
xor
mov
call
test
test
cmpsl
movsl
stos
sub
pop
in
inc
xor
adc
bound
mov
sbb
jmp
inc
jnp
mov
pop
popa
sub
pop
sbbb
push
or
dec
insl
int3
popa
jnp
sub
add
loop
sub
out
sbb
and
adc
pop
adc
popa
add
rolb
sahf
cmpsb
aaa
push
push
sbb
mov
mov
jle
out
mov
mov
cltd
fmull
loope
mov
xchg
lea
not
loop
inc
repnz
orb
pop
push
test
cmp
insl
fsub
mov
mov
push
mov
test
mov
aas
mov
sbb
pop
pop
aam
or
xchg
xchg
mov
scas
inc
xchg
or
add
outsl
dec
call
dec
xor
dec
repz
push
addr16
dec
sub
shlb
adc
mov
packuswb
test
push
mov
out
dec
sbb
sbb
loop
pop
orb
test
mov
daa
push
or
xchg
pop
pop
push
repz
pop
or
rorl
dec
push
push
lret
or
andb
inc
jg
inc
ljmp
jg
dec
mov
cmpsb
clc
mull
ret
push
xchg
aad
push
lcall
sub
push
stos
addr16
cmp
fsubr
ret
daa
out
push
pop
or
mov
enter
jge
fcomps
mov
or
out
xor
or
or
neg
fs
mov
inc
call
test
rolb
mov
dec
or
cld
fldln2
or
adc
sbb
dec
jecxz
pop
fisubl
push
jae
popa
push
adc
fs
xor
into
mov
xor
fwait
bound
leave
arpl
ficompl
pusha
xchg
test
jle
xchg
stos
divl
push
and
rolb
jecxz
inc
jle
outsl
test
push
js
pop
adc
call
fildl
jbe
push
sub
mov
mov
testb
dec
fsincos
jbe
lret
cmp
dec
cmp
xor
leave
jae
shll
jge
add
cwtl
outsl
cltd
movsl
shr
xchg
unpcklps
dec
mov
out
test
fisttpl
sahf
jne
sbb
into
sbb
cmp
xchg
int3
add
sbbl
sub
daa
fstl
test
inc
xor
imul
sub
mov
add
shl
frstor
ljmp
dec
xchg
inc
sub
mov
repz
adc
lea
inc
cmp
sub
les
cmpsb
std
inc
loop
xchg
mov
adc
aas
jnp
stos
stos
inc
in
sarl
pusha
scas
iret
nop
sub
xor
popf
test
sub
repnz
int3
jno
shl
or
adc
or
popa
dec
jecxz
and
push
mov
jle
jmp
mov
movl
sbb
xlat
scas
mov
inc
or
fs
or
fstpt
in
mov
pop
iret
add
dec
lea
inc
stos
mov
inc
pushf
test
fmuls
arpl
sub
in
cmpl
mov
xlat
sub
int3
adcl
repz
cmc
orl
mov
cmp
loop
mov
sbb
setb
dec
inc
push
ja
cmpsb
cmp
ret
jmp
xor
adc
cmp
stc
cltd
push
lods
xchg
adc
jmp
insb
repz
push
pop
repnz
dec
int
in
shrl
cmpsl
dec
and
enter
add
sbb
int3
subb
xor
daa
sbb
cmp
mov
jmp
sbb
adcl
xor
push
dec
mov
jnp
adc
mov
sti
sbb
mov
notb
or
cwtl
ret
inc
xchg
push
dec
rclb
aas
inc
sub
jge
push
call
cmpsb
xchg
test
jecxz
fs
inc
xor
cmpsl
sub
repz
dec
jmp
stos
scas
imul
add
pop
in
add
enter
frstor
nop
iret
xchg
mov
testl
xlat
int
mov
inc
dec
inc
loopne
inc
mov
movsb
push
fdiv
iret
jle
add
jp
sahf
add
popf
shll
dec
cs
mov
fidivs
mov
jmp
mov
pusha
shrl
mov
arpl
push
adc
mov
jp
xchg
out
pop
xchg
cli
inc
push
popf
jge
push
lcall
dec
in
gs
lea
sarb
sbb
inc
pusha
inc
xchg
sub
mov
cld
ljmp
add
movsl
dec
loope
je
shll
mov
insl
test
lods
push
into
xor
in
sbb
pop
sub
mov
adc
lret
pop
push
adc
repz
push
jp
push
aaa
shll
ds
mov
add
xor
sub
mov
data16
jbe
or
mov
jmp
mov
ret
pusha
pushf
daa
or
pop
add
jno
add
cli
test
lret
xor
add
lahf
sahf
icebp
outsb
lock
cmpsb
adc
lret
dec
adc
jp
adc
xor
cli
fsubr
insb
fcompl
idivl
or
sub
mov
cmc
fldl
test
inc
imul
xchg
add
adc
cmp
clc
dec
mov
and
js
cmp
loop
inc
xchg
dec
jbe
pop
std
inc
pop
inc
sbb
mov
jg
loop
xor
cwtl
jecxz
mov
cmpsl
clc
push
arpl
rolb
adc
addb
movb
mov
jnp
push
nop
fisubl
inc
ja
jg
and
loope
sbb
push
mov
inc
divb
adc
addb
inc
ret
sbb
leave
nop
shlb
outsl
jne
and
dec
aas
xchg
jb
inc
mov
movsb
sti
scas
rol
sub
add
xchg
stos
xor
add
sub
inc
setno
jmp
std
sub
mov
scas
or
and
cmc
add
dec
push
push
repnz
mov
pop
push
add
out
mov
hlt
jnp
dec
adc
dec
int3
cltd
push
mov
fdivp
lods
mov
sbb
push
out
sbb
sub
push
stc
dec
xchg
push
out
or
mov
loopne
loope
loop
shlb
flds
xchg
loopne
xor
imul
fcmovnb
xlat
lcall
mov
adc
pop
xchg
push
lahf
sbb
jge
jge
subl
mov
aas
int
mov
and
sub
mov
or
je
dec
adc
push
cmpsl
or
mov
mov
xchg
xchg
adc
mov
lahf
xlat
xchg
or
repz
test
bound
dec
gs
jp
jmp
sub
fwait
push
xor
sbb
push
test
fsubl
push
fdivrl
lds
leave
xor
lods
xor
mov
pop
sub
test
lock
jge
sub
iret
xchg
xor
mov
push
testb
out
loopne
xchg
testb
or
pop
call
pop
stos
daa
dec
stos
pop
mov
les
mov
lret
fcmovnbe
xchg
push
fsubs
outsl
mov
incb
out
add
dec
or
mov
movsl
jle
add
sbb
insb
xor
push
es
ret
mov
test
outsl
cmc
popf
test
or
aad
inc
subl
aas
mov
in
lods
sub
sbb
outsl
mov
repnz
and
push
adc
hlt
stos
pop
leave
sbb
dec
cwtl
sbb
ret
jl
jge
adc
xor
fbstp
lock
add
xchg
fbstp
data16
shl
cmpxchg
lret
ret
nop
add
sarb
jns
faddl
cmc
sbb
ror
push
push
dec
jno
push
stos
stos
jg
adc
ret
je
push
xor
mov
and
jbe
inc
shlb
pop
aas
adc
sbb
lahf
and
int3
sbb
and
in
cmp
xchg
xor
mov
in
jbe
out
sub
lock
and
mov
rorb
out
or
pop
xchg
sarl
and
lret
stc
nop
pop
mov
jo
jae
inc
fimull
outsb
data16
imul
mov
mov
sub
mov
and
push
je
fstps
call
int
outsl
ret
cmovl
into
iret
jl
mov
cmp
mov
jecxz
pushf
fisubrs
inc
xchg
mov
mov
leave
xlat
pop
mov
mov
push
leave
jle
xchg
popa
lds
push
rclb
stos
dec
in
stos
enter
adc
xchg
sbb
adc
dec
adcl
or
lahf
add
jmp
add
pop
mov
ljmp
test
xchg
lcall
popf
xor
pop
dec
fidivs
or
cmp
sarl
aas
daa
scas
out
cmpsl
out
adc
in
xchg
inc
sbb
jmp
std
push
sti
in
jne
pop
into
loop
mov
test
paddsb
scas
mov
aaa
or
sub
sbb
sub
or
xchg
sbb
decb
mov
daa
fldl2t
inc
in
push
add
hlt
lock
rclb
push
ljmp
jg
aas
in
fbstp
lret
add
push
push
mov
rclb
icebp
jp
sbb
xchg
add
in
or
or
cmpsb
or
bound
mov
mov
shr
or
and
mov
adc
jbe
and
sub
rclb
aad
jp
iret
in
test
mov
ficoml
stos
add
add
in
add
jecxz
bound
inc
push
jae
stos
mov
xchg
xchg
cli
mov
repz
push
add
push
lret
push
sarl
pop
test
lahf
pushl
repnz
ret
cs
sub
add
test
dec
stos
inc
sub
in
repz
pop
sti
sub
cmpsl
pop
xor
icebp
in
xchg
filds
dec
and
lds
sub
add
nop
pusha
loope
jge
mov
fisubrl
test
data16
rorl
sub
cwtl
insb
cmc
int
jmp
test
mov
into
in
testl
or
jge
pop
push
addl
imul
rclb
xor
les
xchg
xchg
roll
gs
ret
mov
sbb
mov
push
movsl
mov
in
sbb
hlt
fisubl
mov
push
int
mov
mov
push
or
fnstcw
es
sbb
jg
ds
test
das
ds
jmp
daa
gs
les
loopne
lea
pop
cli
imul
and
add
repz
lcall
xchg
mov
sbb
pop
psubb
inc
xchg
icebp
scas
loope
test
add
lock
add
js
test
repz
xchg
sub
xchg
movsl
sbb
in
or
and
addl
sbb
stc
sub
dec
pusha
cmovbe
or
test
add
cmp
dec
negb
push
xor
push
js
sahf
or
aam
int3
insb
les
shll
ret
lock
nop
jae
lock
pushf
mov
adc
cwtl
inc
std
xchg
cmpsl
data16
movsl
clc
sbb
xchg
lods
inc
aam
adc
lods
jns
mov
in
mov
mov
call
mov
lcall
dec
hlt
cmp
pop
insb
ja
loope
out
lea
mov
dec
ret
in
xlat
jnp
mov
mov
enter
arpl
lret
sbb
das
stc
int3
shll
add
ret
add
outsb
xor
in
into
ja
cmpsb
sbb
jecxz
mov
jecxz
negb
lods
xchg
xor
rclb
into
test
repnz
mov
scas
mov
xor
movb
pop
jg
scas
clc
in
outsb
cltd
mov
xor
mov
in
jo
cmp
push
sarb
insb
rcll
cmp
cld
pop
cmp
push
add
scas
out
test
in
mov
cmp
cld
adcb
pop
test
movsb
pop
xor
cmp
adc
inc
dec
outsl
addr16
je
mov
faddp
sub
add
sbb
or
push
jl
stc
push
pop
and
jnp
loope
dec
aaa
and
cmp
outsl
ret
test
fmull
das
push
xchg
in
sub
imul
out
aaa
std
cli
jns
jnp
mov
cmp
sbb
dec
sbb
push
aad
into
jnp
fisubrl
mov
cmp
jnp
mov
mov
out
aas
arpl
mov
inc
std
pusha
and
scas
push
cmpsb
gs
sub
jecxz
notb
subb
cmp
cmc
inc
mov
dec
ret
pop
popf
or
movsl
mov
sbb
rol
sub
andb
test
repnz
testl
xchg
dec
fldln2
mov
and
xor
xor
xor
sbb
int3
scas
xor
aam
mov
xchg
xchg
jl
std
or
sbb
loopne
jl
into
pop
cltd
jb
add
push
ficoms
lret
scas
fs
push
push
es
mov
fstpl
cmpsl
xchg
pop
bound
arpl
mov
insb
push
jmp
xchg
mov
mov
push
push
inc
fs
xchg
lret
imul
mov
aas
cmc
popf
loop
mov
testl
xchg
inc
popa
mov
popa
cmp
or
js
popa
popa
div
xor
sub
lahf
mov
ret
fidivrs
loope
xorb
inc
or
pushf
fidivrl
cs
pop
inc
imul
jge
jmp
ja
mov
mov
cmp
test
scas
cmpsb
fdivl
xchg
fdivl
addr16
inc
inc
outsb
icebp
and
push
out
xor
push
ljmp
imul
mov
je
ret
ja
lock
cli
out
push
in
dec
test
es
mov
xchg
scas
mov
cmp
jle
in
cmc
gs
cmp
mov
out
imul
cmpl
mov
insl
jns
out
inc
leave
daa
push
mov
hlt
xchg
arpl
xchg
arpl
adc
inc
xchg
jle
inc
je
push
mov
and
pop
cld
ss
mov
fildl
mov
inc
dec
pop
mov
scas
loop
add
inc
jns
mov
popf
mov
rcrl
roll
xchg
pop
pop
inc
lahf
push
movsl
or
jle
or
mov
push
fsubr
into
loop
insb
fucomp
pop
mov
adc
jo
fnstenv
mov
dec
mov
push
mov
cltd
fistps
arpl
arpl
or
data16
pop
and
push
add
popa
fs
lret
push
test
add
repnz
pop
xchg
inc
cmp
push
add
push
int
call
push
sub
ret
add
aad
sub
fwait
mov
loop
jnp
addr16
dec
jo
cmp
clc
movsb
push
ljmp
ja
jg
mov
fisubrl
cmp
and
cld
inc
stc
push
sahf
xor
mov
loope
cmc
sub
loop
jo
fstps
pop
mov
jmp
pop
jbe
mov
test
or
ret
aaa
jl
or
je
subb
jae
adc
push
adc
sub
adc
cmc
jno
add
test
int3
sbb
inc
push
test
pop
in
add
ret
cmp
dec
inc
fiadds
stos
fisubl
cmp
push
sarb
leave
es
sarb
dec
das
dec
lods
pop
leave
and
sbb
fisubs
pop
dec
out
jl
pop
add
mov
cmp
mov
test
in
xor
cs
dec
test
out
mov
mov
lcall
fidivrl
mov
jmp
pop
jle
das
add
popa
out
test
mov
aam
xchg
cmpsl
out
add
dec
xor
lcall
xor
push
out
cli
aas
inc
mov
ret
out
les
jnp
repz
jnp
xchg
mov
outsl
push
inc
arpl
out
je
pop
and
iret
cmp
stc
xor
or
aam
repz
push
mov
pusha
push
sub
xchg
push
dec
jo
dec
aas
fisubrs
les
cmp
inc
icebp
pop
cmp
xchg
cmpsl
rcrb
adc
sti
adc
repz
adc
dec
shrl
repnz
pop
xchg
popa
insb
inc
ficomps
movsb
dec
cmp
out
cld
dec
mov
sbb
mov
inc
stos
fsubrs
movl
sub
push
outsb
aam
leave
xor
in
in
mov
dec
mov
loope
pop
in
push
into
jp
pop
mov
std
test
add
dec
and
cmpsl
adc
mov
or
push
mov
inc
push
sbb
call
aas
mov
dec
cmp
in
das
cld
mov
sub
mov
adc
shrl
mov
cld
jmp
filds
icebp
out
fwait
xor
and
xor
xchg
pop
std
mov
xchg
inc
jnp
dec
iret
cmp
cwtl
cmpsb
pop
test
cmp
pop
ds
popa
mov
jl
mov
adc
in
add
and
dec
lods
or
popa
hlt
or
add
fdivr
push
insl
push
cmp
cmp
daa
pop
pop
repz
jne
leave
sub
lcall
lods
lods
xchg
cmpsl
jmp
sub
sbb
cmpsl
test
nop
mov
push
mov
mov
xchg
mov
int3
mov
or
mov
sub
lods
push
sbb
les
push
add
lret
push
mov
inc
mov
mov
cmp
jno
jae
andl
pop
or
scas
mov
icebp
bound
push
cld
ret
push
jns
test
sub
push
aam
push
mov
iret
cmp
mov
and
dec
ficoms
aad
out
rcrb
ret
andb
inc
pop
leave
or
mov
jmp
pop
xchg
test
in
pop
cs
lea
ljmp
rolb
test
push
jnp
and
addl
sbb
mov
pop
sbb
insl
in
fcoml
or
iret
push
js
inc
push
lret
outsb
or
out
dec
test
add
sti
cmpsl
sbb
and
adc
js
fmuls
xchg
fmull
outsb
push
adc
test
xchg
and
add
int3
popf
and
inc
mov
cmp
and
das
outsl
mov
push
push
inc
out
inc
push
xchg
decb
and
lock
mov
outsb
lds
cmp
cs
fdivl
fdivrl
pushf
lods
or
cld
jle
sarb
clc
mov
aas
cwtl
inc
adcb
fldenv
shr
cmpsb
adc
mov
mov
push
loopne
add
insb
int3
lods
jae
push
loope
jl
inc
lock
xchg
aad
mov
ljmp
out
stos
ret
fisttps
mov
adc
jnp
addr16
push
out
fnstenv
lret
and
ljmp
push
sbb
and
into
and
icebp
loope
jno
in
lahf
or
xor
mov
push
xchg
negl
sbb
inc
push
fs
mov
pop
popf
aam
pop
cmp
clc
std
dec
push
in
test
dec
addr16
int
movsb
outsl
push
les
rep
inc
xchg
out
leave
push
stc
add
mov
pop
inc
fucomip
inc
dec
shl
xlat
adc
pop
mov
jnp
cmpsl
sub
nop
sbb
js
pop
bound
xor
popa
leave
push
scas
push
sbb
in
xor
ja
ret
aad
or
lock
cmc
adc
jecxz
loope
movsl
mov
js
cmp
push
lret
mov
in
cmp
push
push
in
xor
pop
xorb
mul
sub
fidivl
jne
pop
sti
movsl
pop
imul
loope
pop
cltd
lods
mov
ret
cmp
cmpsb
in
push
ficomps
sbb
mov
push
rorb
cmpsl
dec
push
leave
lret
movsl
loop
xchg
roll
cmc
mov
push
and
fcompl
stos
aaa
inc
pop
bound
loopne
sbb
pop
jmp
fwait
push
incb
je
sub
fimuls
or
lods
popf
arpl
jmp
xor
xchg
cmpsl
jae
loope
cwtl
mov
and
sbb
negl
push
adc
jno
cli
incb
and
repnz
adc
jnp
das
je
sub
hlt
dec
sbb
ljmp
iret
cmp
xor
xchg
sbb
pop
pushf
into
xor
inc
mov
push
xor
data16
pop
xor
loop
mov
mov
xor
cmpsl
out
mov
inc
sbbl
mov
push
xchg
push
ret
fistpll
and
inc
dec
pushf
ficoml
xor
push
cmp
addr16
loope
sti
inc
movsl
sbb
nop
je
inc
fstps
stos
mov
pop
push
in
mov
push
out
sub
and
pop
dec
adc
das
data16
into
pop
idivb
dec
mov
mov
add
jecxz
pop
sbb
cmp
test
push
pcmpgtw
test
movsb
iret
sub
pop
and
jmp
jo
je
fdivrs
pop
xor
mov
and
pusha
xlat
icebp
aas
push
pslld
jbe
and
lock
sbb
int
dec
shl
cmp
out
gs
cmp
inc
stos
ret
cmp
ds
or
fidivrl
insl
addr16
jl
sbb
jb
in
clc
arpl
aad
pusha
pop
stc
dec
nop
cmpsl
jmp
aam
rclb
push
and
jge
push
pop
fcoml
push
dec
insl
xor
fsubrs
hlt
mov
push
lcall
loop
loopne
out
data16
jbe
sbb
and
mov
scas
adc
or
dec
bound
popa
dec
mov
inc
mov
or
les
cli
xor
sbb
sub
and
xorl
pop
mov
test
cmpl
jle
fucomip
mov
hlt
sub
inc
sahf
sub
xor
mov
add
frstor
daa
clc
dec
rcrl
jecxz
insl
bound
fildl
dec
repz
popf
jb
jp
sbb
adc
inc
jno
pusha
cltd
sbb
ror
inc
or
add
fimull
out
notb
aaa
out
rorb
imul
popf
and
movsl
ja
inc
mov
andb
movsl
dec
insb
jl
sub
jno
add
sbb
jns
outsl
lods
pop
movsl
mov
sub
xchg
xchg
enter
add
jmp
hlt
push
sbb
fs
mov
adc
popa
shll
push
mov
dec
push
mov
ret
cmp
push
insb
test
movsb
mov
insl
mov
repz
subb
aam
mov
popa
imul
push
adc
enter
mov
fadd
or
jne
and
daa
sub
jbe
jl
xor
jecxz
jecxz
je
jle
negl
push
mov
xchg
fldenv
lcall
shll
or
negb
mov
fistps
lcall
mov
sub
clc
je
jg
je
mov
add
rorb
mov
insb
sbb
stos
mov
lret
aad
sub
dec
data16
push
test
fiadds
out
test
arpl
rcrl
xlat
stc
add
fcompl
dec
pop
mov
jmp
cmp
movl
sbbb
jb
lock
xchg
test
mov
mov
jbe
stos
mov
imul
dec
sub
mov
jns
pop
jmp
xor
cmpsl
cmp
push
inc
mov
dec
call
in
xor
in
cmc
jne
and
and
mov
sub
lcall
push
mov
outsb
mov
gs
pop
pop
dec
sbb
pop
dec
lds
pop
mov
aad
lock
in
cltd
jnp
loope
cli
rorl
out
xor
mov
fisubrl
sbb
out
addr16
adc
idivb
pop
out
fucomp
dec
fwait
or
jle
xor
sub
xchg
inc
lret
mov
sub
int3
push
mov
les
je
sub
test
or
jecxz
mov
push
out
xchg
ja
mov
and
lahf
stos
gs
test
inc
data16
mov
xor
clc
jno
mov
cli
sbb
push
adcl
pop
pushf
popa
cmp
jne
addr16
inc
bound
sahf
adc
sub
xlat
xor
push
hlt
rcr
dec
mov
pop
add
shrl
jbe
rolb
aam
lcall
mov
sahf
imul
hlt
xchg
inc
or
jo
dec
jnp
mov
daa
pop
xchg
xchg
sbb
mov
stos
in
mov
lret
xchg
mov
faddl
js
out
dec
cmpsl
insl
je
mov
jmp
sbb
inc
xor
mov
iret
aam
jg
dec
hlt
xchg
push
cli
out
mov
inc
add
rolb
pop
les
xchg
movsb
mov
in
adc
mov
scas
inc
inc
push
cltd
cmpsb
sub
negl
mov
cmp
push
daa
jno
in
xchg
cmp
lds
sub
pop
mov
jp
pop
movsb
jecxz
dec
add
pop
mov
gs
jne
sti
sbb
cmpsl
adc
adc
pop
enter
and
enter
jge
xchg
xor
jmp
outsl
fidivs
scas
ljmp
insl
fwait
push
mov
sbb
test
mov
cmp
and
cmp
mov
mov
pop
mov
testb
lea
dec
xchg
clc
lret
lods
mov
popa
xor
addb
in
pop
push
sbb
mov
xchg
pop
add
fsqrt
int
mov
hlt
ret
push
inc
mov
out
cmpsl
pushf
test
jle
std
mov
pushf
pop
shll
mov
cmp
or
movsb
xchg
rolb
dec
pop
int
xlat
rcrl
out
dec
adc
add
stos
dec
jecxz
jo
sbb
stc
lahf
dec
sub
out
and
jns
into
loop
sub
scas
mov
inc
adcl
add
pop
faddl
incb
popf
cmpsl
push
mov
in
mov
in
lods
fildl
sub
outsl
cmp
cmpsl
cmc
lods
and
adc
pushf
or
daa
mulb
lods
mov
sub
hlt
sar
cli
scas
push
aad
aas
sbb
cmp
insb
xchg
andb
test
jmp
and
sbb
fdivrl
addr16
mov
mov
jbe
xchg
test
repz
sahf
addb
jecxz
xchg
js
test
mov
xchg
add
sub
dec
or
pop
and
cmpsl
inc
or
add
je
xor
jnp
push
pop
pop
sub
fisubrs
sar
fbld
or
xchg
jmp
inc
imul
iret
fs
jns
ja
jae
push
cmp
pop
inc
rcl
xor
ja
lret
mov
pop
cltd
cmpsb
in
ja
adc
sub
sub
inc
inc
mov
clc
xchg
mov
int3
jg
lods
movsb
stc
sti
popf
out
sti
stc
add
dec
and
mov
sti
mov
sti
pop
in
lret
dec
ret
and
arpl
inc
hlt
inc
fst
lea
fiadds
or
xor
cmp
bound
jo
push
out
sbb
in
mov
mov
lods
cmpsb
inc
sbb
sahf
test
into
sbbb
movsl
cmp
bound
mov
cmpsl
mov
cmpsl
addr16
ret
sbb
dec
lret
cli
jg
testl
int
mov
sbb
addr16
sahf
sar
inc
loope
jle
outsb
sbb
jno
int3
aaa
cmp
popf
push
imul
add
lret
push
ficompl
sub
jmp
jmp
pop
sbb
out
jo
mov
in
imull
pop
insl
or
idivb
lcall
jecxz
shll
cmp
cmpsb
sub
sbb
test
negl
mov
lcall
insl
out
ds
test
mov
nop
xchg
xchg
pop
xor
add
push
ds
xor
jmp
in
divl
leave
mov
cmp
ret
pop
stos
addr16
or
out
adc
xor
sub
lea
je
and
cmp
shrb
or
dec
mov
xor
test
fcoms
push
dec
jbe
add
pop
mov
sbb
dec
int3
daa
and
xlat
jecxz
pop
mulb
xor
mov
stc
jmp
sti
stc
and
sbb
cltd
lahf
dec
or
pop
mov
leave
jno
mov
xlat
lock
mov
into
out
lcall
imul
imul
sub
roll
scas
mov
jno
data16
aaa
push
mov
imul
fnstsw
jno
addl
gs
fildll
dec
jne
es
stos
add
xor
fidivs
fadd
fdivs
lods
cmpsl
sbb
ret
push
imul
sahf
sub
cwtl
js
lods
repnz
xchg
mov
sbb
sti
jl
movsl
pop
fmull
repz
add
rol
jnp
movsb
dec
cmp
negl
fldenv
jnp
pushf
hlt
dec
sbb
mov
mov
jae
push
adcb
outsb
in
mov
add
bnd
loope
xor
shrl
inc
gs
mov
mov
cs
test
cwtl
fwait
mov
adc
dec
fs
sub
push
js
out
aad
mov
out
dec
aaa
xor
mov
addl
inc
and
adc
xor
daa
ret
in
xchg
into
pop
push
bound
add
xchg
push
xor
pusha
aas
movsl
dec
mov
sub
rcl
push
xor
inc
in
test
shrb
sbb
hlt
cmc
cld
je
mov
pop
sbb
inc
mov
ss
testl
test
pop
scas
fisttps
lock
pushf
xor
pusha
pusha
sbb
mov
dec
ds
or
lock
stos
mov
icebp
shll
jg
iret
hlt
subl
scas
popf
sti
dec
add
getsec
jg
mov
sbb
in
repnz
pop
push
clc
sbb
fisubrl
and
ja
push
pop
xor
out
test
jnp
mov
sahf
out
iret
or
push
inc
xchg
inc
sarl
adc
pop
mov
xor
int3
xor
lock
popa
xor
daa
inc
jmp
arpl
neg
rclb
push
lret
sysret
sbb
daa
int
test
cmp
into
roll
ss
and
and
or
test
cmpsl
lahf
mov
xchg
xchg
inc
push
dec
scas
sbb
pop
scas
jl
push
lock
sub
or
sub
add
push
push
gs
dec
add
xchg
sub
jns
pop
sbb
es
jmp
jnp
jl
adcb
adc
inc
xchg
cmp
push
jbe
mov
aaa
cmc
and
sub
sbb
addb
or
sub
dec
mov
and
xchg
dec
jb
mov
push
pop
mov
add
add
mov
mov
aas
pusha
or
bound
inc
mov
or
or
repz
cs
fs
fiaddl
dec
imul
lcall
push
outsb
movsb
mov
push
test
adc
lahf
jge
scas
ret
cmp
pusha
pop
dec
gs
mov
mov
aas
sub
sub
pop
es
out
xchg
mov
dec
lds
jo
sub
insl
adc
fidivrl
xorb
stc
adc
int3
pop
add
fdiv
lods
fistps
mov
mov
pop
push
cmp
ret
jmp
popf
or
push
pop
jns
mov
orb
icebp
ficompl
push
mov
mov
and
and
cs
leave
add
sbb
adc
arpl
pop
push
int
lcall
cmp
mov
sbb
xchg
push
addr16
or
add
adc
add
cli
sti
ds
into
cld
call
or
and
jo
outsl
push
jo
xchg
push
jae
pop
dec
pop
leave
repnz
int3
and
cmp
push
int
sar
sbb
sbb
mov
nop
fcomp
into
dec
xor
and
lds
es
or
adc
or
sbb
flds
loopne
insl
pop
bound
movsb
repnz
ljmp
arpl
inc
popf
jne
outsl
adc
xchg
mov
or
adc
mov
push
scas
sbb
or
inc
mov
int3
das
orl
fcomps
push
insl
xchg
jp
ljmp
sbb
jp
hlt
push
sub
mov
mov
and
incb
and
add
jno
dec
inc
adc
scas
pop
inc
stos
nop
ljmp
fisubl
test
out
stos
cmp
dec
negl
out
dec
sub
jns
popf
adc
loop
mov
mov
sub
inc
push
xchg
fiadds
cmc
out
jno
ja
je
popa
shl
mov
ds
xor
lds
cmp
xchg
add
loop
sub
inc
in
cmpsb
das
xor
sbb
arpl
mov
fwait
and
ljmp
and
testl
es
push
rcl
int
sbb
fists
ss
out
push
stos
inc
or
sub
add
sbb
mov
mov
lock
push
mov
pop
dec
dec
push
mov
inc
mov
mov
xor
or
test
test
xchg
popf
or
cld
xor
lds
jg
pop
adc
mov
shl
push
or
sub
lret
inc
rcr
mov
test
add
jno
jo
or
mov
test
stc
xchg
sahf
outsb
xor
test
stos
jnp
mov
adcb
cwtl
orb
fsts
scas
je
lea
mov
mov
aad
movsl
xchg
outsb
push
imul
adc
out
stc
or
imul
pop
mov
add
pop
je
lret
mov
mov
dec
mov
sahf
jle
and
das
jl
xchg
jb
outsl
and
call
pop
mov
mov
xchg
imul
mov
mov
pop
cmp
aam
leave
sti
aad
insb
or
scas
ret
sbb
shlb
push
jp
push
ret
pop
or
ret
dec
aas
cmp
mov
cmp
shlb
pusha
sbb
lret
push
push
xor
pop
mov
jb
dec
imul
addl
pop
das
icebp
test
dec
popf
mov
ror
dec
sti
mov
pop
xchg
add
mov
int
jg
das
pop
cld
mov
aas
inc
in
or
cmpsl
cmp
mov
iret
push
mov
jl
sti
sbb
popf
aas
cmp
pop
xchg
dec
pop
lcall
jmp
push
pop
sub
push
lock
mov
jne
iret
or
or
cmp
outsl
or
mov
mov
fwait
inc
fdivs
fldcw
aad
leave
popa
aas
sub
inc
leave
adc
jmp
jle
add
push
in
popa
out
fdivl
or
mov
jo
fdivrs
into
ljmp
in
aaa
fiadds
and
mov
jecxz
fimuls
cmp
shll
ja
inc
insl
mov
dec
fists
and
fs
lock
addr16
pop
mov
iret
insl
xor
xchg
jl
aad
xchg
push
int3
movsl
int
outsb
pop
stos
sti
mov
push
aad
fimull
mov
imul
sbb
imul
jecxz
jge
cltd
jg
in
inc
out
and
cmc
xor
jp
push
sbb
jns
jle
divl
jno
lret
mov
push
mov
in
loopne
dec
std
lret
andb
test
mov
inc
cmp
or
sub
in
adcl
fsubl
out
daa
outsb
fdivrl
mov
test
clc
jmp
fwait
pop
pop
mov
pop
aas
fwait
mov
pop
int
mov
xchg
mov
stos
xor
into
leave
loope
stos
cmp
shll
push
jl
pop
inc
mov
jne
add
sbb
push
sub
icebp
ss
mov
xchg
outsb
or
and
mov
out
lods
pop
flds
add
pop
sbb
adc
ss
imul
or
xchg
rcrl
ffree
aaa
js
subb
xchg
add
adc
jno
dec
sub
mov
stos
inc
sbb
fcomi
or
jno
in
mov
add
lret
arpl
mov
inc
sbb
mov
fnstsw
mov
orl
orl
mov
push
add
jle
lock
orl
insl
jno
or
mov
cmp
gs
mov
push
sti
adc
sbb
xor
inc
out
add
ret
push
mov
add
sub
insl
inc
aam
out
inc
mov
iret
out
ljmp
xor
cmp
and
or
ss
pop
cli
dec
sub
nop
mov
out
mov
addl
pop
jne
sahf
jecxz
dec
loope
repz
ret
push
dec
gs
es
in
mov
sub
xor
push
dec
les
divb
scas
mov
cs
out
sar
mov
pop
pop
punpckhwd
mov
cltd
clc
add
adc
xor
push
or
jo
sahf
add
ja
pop
mov
inc
sbb
or
fcomi
inc
addr16
or
sahf
or
jnp
sub
enter
push
xorb
adc
int
sub
cmp
pop
popa
inc
and
jbe
pop
cmp
lret
push
cmp
ret
jp
jp
ret
pop
and
lods
cmc
ret
iret
shrb
sub
inc
lcall
adc
or
stos
mov
test
dec
fldl
pop
fdivp
sub
inc
sub
xchg
dec
icebp
dec
insb
jb
gs
inc
xor
bound
and
movsb
adc
xor
testl
vmwrite
mov
xor
js
inc
sub
jl
cmp
dec
mov
mov
cmpsl
pusha
out
mov
stc
test
shrb
testb
daa
or
or
sti
iret
jae
pop
push
loope
bound
popa
cmpb
pop
sbbb
cmp
mov
icebp
sub
insb
inc
outsl
inc
mov
jmp
rclb
adc
pop
in
cli
add
adc
cli
lret
xor
pop
dec
xchg
inc
ret
jae
in
and
xchg
xchg
insl
out
fwait
xor
dec
in
jno
xchg
popa
cmp
gs
movsb
xchg
sti
cwtl
stos
push
mov
test
cmpsb
sub
fwait
ja
cmp
shlb
mov
divl
enter
leave
inc
xchg
inc
stos
and
mov
stos
mov
sub
dec
or
fildl
sbb
stc
addr16
mov
adc
mov
lret
jbe
stos
movsl
hlt
sbb
pop
inc
push
sbb
push
shr
outsb
sbb
pop
xor
out
mov
in
and
adc
mov
dec
pop
cmpsb
push
add
or
insb
xor
pop
stc
or
nop
test
jno
or
movb
insb
bound
mul
push
dec
xchg
loop
mov
push
pop
mov
push
scas
addr16
sbb
lret
dec
je
mov
jge
jmp
inc
or
or
pop
sti
cli
fidivs
jae
cmp
out
repz
mov
popf
ss
mov
push
mov
xchg
imul
stos
push
out
push
gs
adc
js
push
jno
lock
in
pushl
push
out
mov
and
stos
push
test
mov
jb
inc
jbe
ret
xchg
sub
cmp
push
lret
orl
ret
aaa
and
jb
xor
shll
and
cmp
push
jns
adc
mov
gs
test
jbe
in
jae
xchg
sub
add
and
jle
mov
mov
sbb
xchg
mov
or
cs
pop
shll
jnp
xor
xchg
mov
add
jge
int3
fadds
inc
pop
xchg
inc
jmp
and
das
lahf
pop
mov
sahf
icebp
mov
xor
sub
add
sub
fs
mov
inc
lahf
push
mov
mov
xchg
in
inc
or
je
pop
jno
xchg
adc
call
loopne
mov
mov
or
test
or
adc
and
aam
mov
fistpll
lods
lods
push
mov
in
aad
or
add
mov
mov
fnstsw
push
jno
lock
in
pop
sahf
outsb
mov
add
jo
cmp
sti
js
inc
rcll
add
dec
imul
dec
iret
and
cmp
rcl
jnp
xchg
or
push
mov
sub
icebp
push
lret
stos
lods
fwait
ret
fmull
sub
pop
add
sarb
mov
adc
fsub
fildl
jp
mov
add
sbb
test
shll
add
push
test
call
pop
stos
dec
xor
push
lea
pop
ds
cmpsb
in
aam
cmp
adc
cld
mov
xor
clc
push
mov
mov
bound
out
dec
cmp
mov
loopne
xor
shrl
jne
rcrl
sub
aad
inc
xlat
pop
cmp
pusha
lret
ficoms
sub
pop
xchg
inc
or
lret
test
repnz
addb
pop
xchg
shl
adc
sbb
hlt
adc
mov
jmp
mov
adc
mov
pushl
push
cmp
dec
lahf
xor
cmpb
mov
aas
arpl
fucomip
popa
dec
rcrl
xchg
sub
ss
sbb
pushl
mov
std
pop
mov
fnstsw
and
jle
inc
adc
and
mov
cmp
dec
jge
rcl
loopne
icebp
lock
and
fwait
imul
arpl
or
cmp
lock
icebp
insl
repz
mov
pop
inc
mov
rcll
dec
mov
dec
cwtl
cmp
dec
scas
jae
imul
inc
mov
push
out
insl
aad
mov
dec
ljmp
and
imul
notb
sub
nop
jle
insb
cmpsl
mov
cmp
and
mov
xor
vorps
cmc
in
dec
inc
jno
jecxz
jp
aam
mov
inc
or
push
rolb
lcall
std
cmp
and
insb
push
cwtl
lret
pop
cld
xchg
mov
leave
mov
aad
nop
fisubl
fwait
in
push
test
or
jle
xorl
fiaddl
jecxz
sub
jecxz
fisubrs
hlt
shrb
stc
adc
or
lods
imul
dec
jp
push
ja
stc
loope
jnp
ret
xor
std
sub
add
jg
int3
adc
pushf
or
idiv
out
les
repnz
mov
push
fs
jb
inc
lock
inc
mov
fidivs
movsl
push
popa
xor
mov
or
ss
push
push
pop
adc
jae
aaa
leave
dec
stc
jbe
andb
insb
ja
cmc
push
xor
push
arpl
gs
mov
icebp
cld
pop
mov
cli
imul
mov
dec
mov
dec
cmp
xchg
addl
dec
push
data16
cs
xchg
xchg
test
jo
jne
lea
or
pop
push
mov
cmp
data16
or
jbe,pn
cmpb
mov
out
mov
test
inc
outsl
cs
jnp
lods
push
rcrb
in
cmp
int
dec
cli
mov
ret
mov
call
xchg
clc
in
and
imul
pushf
adc
cmp
fwait
add
mov
inc
dec
addr16
inc
mov
pop
jns
aad
jae
out
das
fwait
rcrb
roll
pop
icebp
xchg
ret
jnp
lahf
jl
push
out
dec
mov
jecxz
mov
in
cmp
inc
jg
movsl
or
cmpsb
xor
test
adc
adc
adc
popa
mov
pop
push
imull
sahf
push
fsubs
add
sub
popf
jmp
and
and
cs
imul
scas
out
mov
inc
mov
add
adc
or
and
mov
xchg
sti
pushf
pop
inc
loop
stos
paddusw
jns
lret
push
je
adc
cmp
inc
fsubs
es
fstpt
mov
pop
xchg
das
jo
xchg
cmp
stc
xor
or
insb
out
adc
nop
dec
out
push
mov
jno
dec
inc
jle
ret
loop
test
mov
and
cmp
prefetch
or
push
cmp
movsl
adc
dec
add
jl
jp
aaa
adc
sbb
adc
inc
imul
sbb
popa
adc
jecxz
adc
out
inc
jg
mov
call
xchg
and
mov
loope
ljmp
xor
popf
cmp
popf
movhlps
inc
mov
jne
mov
lret
jbe
cmpsl
ljmp
mov
nop
mov
cwtl
sbb
dec
test
xchg
cwtl
movb
mov
lods
xor
ljmp
bound
out
mov
dec
imul
mov
in
stos
push
imul
xor
jg
ja
int
push
out
pop
mov
inc
push
or
cmp
pusha
repz
xchg
cltd
lcall
pop
mov
dec
xor
cltd
ss
push
adc
mov
cmp
shll
mov
mov
fdiv
mov
lahf
jl
sbb
xchg
aaa
adc
mov
imul
ret
pop
loop
mov
int3
dec
sbb
pusha
sbb
inc
dec
push
lock
test
xor
mov
test
rclb
insb
mov
mov
xor
inc
lret
sbb
pop
popa
mov
ss
subl
adc
pop
fwait
mov
es
stos
repnz
call
faddl
mov
sbb
jmp
sub
mov
hlt
pop
in
lock
test
aaa
sbb
hlt
es
movsb
mov
arpl
push
popf
gs
fadd
adc
lret
imul
adc
mov
adc
test
cmp
imul
mov
add
shr
pop
in
lcall
stos
adc
mov
mov
mov
lret
rcll
and
sahf
sub
clc
mov
pop
push
in
scas
jcxz
aam
mov
aaa
push
daa
and
pop
repz
in
ljmp
and
out
stos
pop
imul
pop
fcomip
xor
iret
flds
jge
jmp
bound
push
jbe
dec
fsts
inc
cltd
sbb
test
cli
sub
enter
dec
insb
xor
push
stos
xor
cmp
cwtl
fidivl
pop
push
inc
js
call
clc
nop
in
pop
xchg
sbb
jl
push
cltd
in
lds
inc
icebp
sub
or
lods
movsb
pushf
cmp
stc
loope
out
mov
mov
xor
add
je
sub
addl
and
loop
lret
adc
xchg
dec
dec
sar
btr
scas
add
lock
fsubrl
mov
test
push
mov
ss
push
sub
pop
imull
dec
pusha
out
jmp
outsl
push
mov
inc
xor
stc
add
mov
ret
xor
imul
mov
mov
sbb
cmp
inc
imul
lock
js
jmp
std
out
push
pusha
movsb
sbb
add
mov
jno
lahf
mov
lds
pop
cwtl
icebp
loope
in
xor
adc
fcompl
stos
mov
push
cmp
je
out
xchg
ljmp
loopne
and
outsl
cmpl
icebp
or
in
xorb
mov
xor
daa
push
int
cltd
ds
xchg
add
cmp
pop
jnp
add
int
push
mov
sbb
mov
mov
and
dec
lahf
lret
cltd
sbb
fsubrl
aas
add
imul
fsubrl
outsl
push
outsb
outsb
mov
jg
lcall
lret
mov
test
movsl
xor
ljmp
push
std
inc
sbb
mov
je
xorb
or
pop
sbb
jae
pop
shl
jle
mov
bnd
or
or
sbb
ret
popf
out
sub
xchg
test
lret
cwtl
sub
iret
inc
jge
push
adc
mov
mov
scas
jno
icebp
sbb
js
and
or
mov
movsl
xor
repnz
ljmp
mov
aaa
add
int
add
jg
hlt
push
xchg
xchg
sbb
daa
test
mov
int
scas
lcall
dec
inc
mov
call
test
adc
imul
cli
fstps
jge
sbbb
hlt
icebp
test
iret
repz
outsl
sti
ss
je
pushf
pop
mov
sbb
fistpll
push
iret
aas
lds
add
xchg
sub
test
and
ret
fisubrl
enter
cld
fisttpl
sahf
push
cs
sub
add
xlat
mov
mov
popa
pop
push
xor
jne
pop
dec
in
and
shl
xorl
and
jbe
icebp
jbe
pop
inc
xchg
sub
inc
xchg
aaa
outsb
cwtl
mov
nop
mov
or
fwait
fwait
push
sbb
xchg
jmp
imull
xchg
sub
sbb
jmp
lods
shr
cmp
push
sub
aas
dec
or
pop
and
ficomps
out
jo
shr
ss
std
cpuid
adc
jecxz
cmp
mov
and
mov
push
outsb
mov
aas
mov
push
mov
aam
stc
mov
cmpsl
cmc
mov
jp
lods
nop
dec
cmpsl
in
iret
xchg
jmp
cmc
xor
cmp
push
icebp
out
push
leave
sbb
push
mov
cmpsb
rorl
repz
mov
jbe
rcll
cmp
push
pop
jbe
fistl
jmp
cmp
stos
imul
cmp
sbb
mov
mov
cmpl
into
cmp
xchg
mov
hlt
xor
sub
ds
cmp
lds
sub
pushf
in
and
mov
xor
lahf
xor
jb
pop
popa
mov
fdivrl
mov
or
insb
call
je
and
dec
jmp
and
xchg
icebp
lds
xchg
inc
ret
inc
movsb
leave
inc
mov
ds
mov
xchg
jno
cli
jmp
mov
mov
adc
inc
cli
aad
imul
aas
repnz
insl
fsubrl
push
cmpsb
test
inc
and
sarl
jp
out
scas
fsubr
mov
xchg
shlb
sbb
arpl
jns
insl
mov
fnstenv
outsb
repnz
mov
sub
push
inc
icebp
push
sub
cld
out
ja
xor
movsb
inc
stos
sbbb
dec
clc
fildl
cld
jbe
std
adc
subl
xchg
sbb
push
shll
inc
cmp
in
and
mov
out
leave
fwait
adcb
lods
and
or
popf
xor
imul
in
sub
pop
enter
add
sbb
xchg
or
xor
mov
bound
inc
lcall
fwait
out
out
add
pop
dec
cmc
movsl
cmc
add
dec
xorl
fcomp
fdivrs
push
xor
stc
iret
cld
nop
inc
test
in
push
mov
or
rclb
pop
add
scas
add
xchg
mov
dec
jbe
bound
rcrb
jmp
mov
popa
jp
and
or
sti
jno
dec
into
sub
jge
jp
pop
pop
into
jmp
sub
bound
mov
lret
daa
sub
and
add
call
push
inc
rcll
rcr
fs
sbb
decb
pushl
inc
cs
add
mov
jle
xchg
push
jns
mov
add
pop
sbb
icebp
push
fimull
mov
arpl
xor
gs
mov
lds
adc
rorl
dec
mov
clc
arpl
mov
sub
jecxz
or
pop
mov
ss
hlt
aaa
popa
in
lods
gs
sub
jne
popl
push
dec
push
lret
lods
dec
sarb
les
mov
cmp
add
push
mov
iret
jae
push
aas
lret
mov
mov
add
pop
lods
std
fcomps
push
cmpsb
jp
cmp
mov
icebp
stos
test
pop
out
jno
xchg
icebp
xchg
xorl
aam
out
insb
xor
sahf
mov
pop
or
and
mov
pop
aad
mov
sbb
jp
xor
mov
xor
test
or
inc
dec
out
dec
dec
lods
fdivp
push
stos
adc
je
mov
dec
cmpsb
inc
mov
adc
stc
sub
not
cld
or
adc
arpl
or
fsubp
jl
or
sarl
jp
cmp
ljmp
adc
inc
lods
mov
imul
sbb
add
dec
cmpsl
bound
push
int3
adc
js
xlat
movsb
lods
xor
xchg
mov
dec
mov
js
mov
stc
and
sbb
add
fistpll
xor
rorl
dec
push
pop
sub
xor
inc
push
mov
sbb
push
in
or
xor
or
shrb
rorl
aam
test
lea
jg
jmp
sbb
popa
xor
xchg
xrelease
lea
xchg
es
jne
daa
pushf
test
lret
clc
sbb
cmp
mov
add
lods
dec
jb
cli
fistps
fisubrl
push
test
jg
pop
cs
pop
pop
cmp
out
push
xchg
inc
lods
lock
jo
js
pop
imul
pop
stos
popl
add
das
mov
aas
and
push
adc
pop
jnp
and
adc
int3
pop
mov
jnp
sub
testb
add
sub
sbb
cmpsb
mov
xor
jae
imul
mov
nop
out
mov
mov
inc
xchg
jge
test
cld
mov
push
inc
lods
stos
fcmovbe
add
hlt
push
cmp
scas
call
pop
insb
fmull
xchg
imul
adc
cmpsl
hlt
or
cmpsb
jno
ret
xorb
jecxz
cmp
mov
enter
int
arpl
into
xchg
xchg
sbb
ficompl
stos
int
sub
or
adc
mov
lock
cmp
fadds
or
xor
testb
lret
push
mov
testl
add
jl
jae
sub
cmc
xchg
cmp
or
lcall
or
mov
inc
and
mov
mov
mov
mov
cltd
lock
xor
adc
stc
imul
sbb
cmp
mov
incb
das
sub
or
or
dec
push
jnp
jb
inc
incb
pushf
mov
add
insb
ret
mov
imul
in
jp
add
pop
fiaddl
cmc
lock
inc
jo
push
daa
lds
jo
adc
cli
addb
push
test
sbb
test
mov
dec
leave
sbb
mov
cld
xchg
sub
adc
inc
in
or
les
insl
push
negb
jne
pop
pushf
sub
mov
and
dec
data16
fwait
mov
xor
leave
daa
fneni(8087
pop
add
dec
test
dec
lods
imul
call
stc
icebp
lods
xor
xchg
testl
lods
push
fldcw
ret
cmc
push
loopne
mov
xchg
sbb
sub
mov
mov
and
mov
or
int
mov
mov
movsl
mov
mov
adc
clc
adc
mov
add
mov
mov
cld
fs
adc
cmpsb
ja
movl
mov
push
xor
mov
fstp
and
enter
xchg
mov
aad
sbb
mov
mul
lahf
or
dec
mov
notb
outsl
rcrb
sub
and
jmp
pop
fbld
daa
inc
and
lcall
aas
std
add
dec
out
mov
insl
aam
cmp
shlb
dec
je
rcrb
fstl
mov
lods
adc
shlb
cmp
loop
mov
pop
cmpsb
sub
ljmp
adc
lret
pop
movups
test
repnz
aam
shll
lods
xchg
pop
lcall
xchg
mov
ja
dec
pop
jg
pushf
sbb
mul
mov
and
adc
lods
hlt
mov
lods
jbe
xchg
mov
push
sbb
dec
xchg
inc
mov
mov
push
filds
cmpsl
mov
push
imul
mov
xor
xchg
sbb
sti
lret
and
sbbb
or
jo
sub
testl
inc
push
sbb
adc
test
pop
cmp
mov
cmc
cmp
hlt
adc
sarl
sub
mov
movsl
lret
sbb
mov
sub
dec
cli
push
rcl
mov
fsubrl
inc
xor
mov
enter
mov
xor
jecxz
jno
mov
imul
movsb
jae
es
sti
jno
enter
and
and
push
pop
nop
sbb
pop
cmpl
dec
sbb
mov
add
sahf
xchg
cltd
cmpsl
and
aam
cmpsb
hlt
cwtl
pop
ret
inc
out
push
dec
aam
inc
sbb
test
mov
jmp
dec
jne
fwait
cmp
aad
ficoms
sbb
psrlw
pop
xchg
jmp
test
mov
or
loopne
in
fsub
sahf
fdiv
dec
lret
push
stos
cmp
mov
jb
dec
mov
cmp
fs
push
fs
gs
movsb
in
mov
shll
mov
dec
jl
xchg
xor
and
stos
pop
add
push
shll
and
jge
mov
insl
jp
adc
lret
and
loope,pt
cs
push
out
xchg
cld
xlat
xor
test
movsl
std
add
dec
adc
and
sub
notb
mov
jo
clc
shl
aam
inc
push
test
mov
mov
push
push
ftst
rcr
inc
cld
enter
std
dec
bound
addb
loop
push
negb
addl
fwait
jb
sub
jns
loopne
mov
test
shll
and
cli
test
inc
cwtl
in
jo
or
adc
cmpl
add
cmp
dec
fldenv
dec
or
push
mov
dec
movsb
fwait
push
js
shlb
ficoml
out
ret
xlat
push
cmpsb
loope
mov
xchg
dec
das
push
adc
sbb
rorb
movsb
and
push
cmp
pop
adc
add
movsb
rorb
in
data16
push
and
sub
push
into
les
test
xor
lahf
fwait
orl
jb
into
xchg
xor
xchg
dec
int
sub
mov
rorb
cmp
repnz
aas
and
lcall
test
xor
push
jle
das
sbb
add
sub
xchg
sub
mov
add
pop
push
mov
inc
xor
jnp
push
ret
pop
dec
xor
add
pop
xor
shll
and
or
sub
and
mov
fcomps
filds
jg
xchg
ljmp
popl
jno
pop
add
cmp
adcb
mov
sbb
or
and
fistps
js
sti
jge
dec
dec
push
jp
fwait
ret
popf
mov
sahf
jp
aas
fcomp
aas
or
mov
xchg
pushf
stos
and
pop
lret
adc
pusha
pop
dec
xchg
ds
mov
gs
xor
inc
mov
mov
push
dec
sub
cmp
pop
movsl
addl
mov
mov
movsl
jg
cmp
adc
das
adc
sbb
add
ljmp
dec
push
sub
jmp
inc
in
sub
div
xchg
es
xchg
or
ljmp
sub
ss
enter
sti
adc
jl
call
pop
jns
xchg
mov
xorb
xchg
mov
pusha
shlb
mov
aad
sub
enter
call
jae
lock
lods
in
addr16
ljmp
mov
test
cwtl
add
lret
lcall
jle
outsl
andb
shrb
shrl
sbb
icebp
outsb
stc
pop
pusha
mov
jo
mov
insl
mov
imul
add
sbb
adc
and
shll
push
mov
jne
or
sbb
int
cmpsb
cld
xchg
arpl
je
test
mov
jecxz
adc
mov
jae
arpl
das
shrb
dec
lock
adc
xor
add
pop
xor
and
rcll
dec
inc
xor
mov
mov
sbb
mov
mov
cmp
test
orb
xor
fsubp
cmp
and
or
incl
shlb
bound
sbb
push
cmp
sbb
cmc
pop
mov
push
cwtl
sbb
xor
test
sub
xchg
jp
dec
xor
add
mov
orb
adc
fnstcw
or
mov
cmp
jp
jns
cs
mov
jb
lret
js
pop
in
or
aas
cmpsb
push
in
jl
push
cmp
jne
test
add
push
add
cld
mov
xchg
insl
ljmp
ret
xor
mov
and
aas
jns
xchg
mov
mov
adc
push
push
mov
jge
stc
sti
pop
pop
loope
fs
movsl
xor
lods
imul
sub
out
jl
adc
mov
repnz
movsb
in
lea
mov
dec
aad
aaa
ljmp
es
xlat
mov
out
dec
and
push
sub
out
jno
jle
fnstcw
cltd
lcall
lahf
fldln2
ret
push
in
loope
mov
or
and
dec
lods
pop
or
or
in
shlw
aaa
cwtl
pop
xchg
adc
daa
pushf
mov
int
or
cmpsl
sti
test
mov
jno
inc
xor
bound
mov
bswap
addl
ret
mov
mov
scas
data16
rcr
lock
jno
sbb
mov
mov
hlt
push
mov
mov
subl
leave
fidivs
xchg
xchg
mov
add
push
fwait
xchg
dec
cs
inc
out
or
sbb
add
stc
rcr
enter
repz
or
mov
cltd
arpl
push
fwait
lahf
push
mov
sahf
out
js
gs
rorb
in
jns
bound
sbb
aaa
js
mov
push
aas
pop
dec
xchg
ljmp
leave
push
scas
pop
outsb
std
fsubrs
cmp
pop
sbb
push
cli
xor
test
pop
push
xor
push
repz
or
and
inc
cmp
outsl
aad
adc
sub
add
push
stos
int
aas
ja
or
ss
test
mov
mov
jnp
test
mov
add
icebp
jp
mov
mov
pop
xor
cmp
dec
mov
adc
lock
mov
mov
adc
les
inc
push
xchg
inc
out
addb
push
jb
jbe
fbstp
nop
pop
aam
dec
inc
gs
ja
scas
pop
call
jns
rolb
sbb
xlat
rolb
sbb
int3
subl
xchg
insb
fs
cmp
hlt
notb
ja
mov
dec
rorl
lock
test
mov
dec
push
push
xlat
add
mov
or
jmp
pop
adc
inc
xchg
rcll
movsb
jg
add
xor
and
movsl
leave
xchg
xchg
sar
test
cmp
adc
rolb
roll
les
mov
inc
adc
push
les
movsl
and
lds
cwtl
sbb
fistl
in
in
shl
cmpsl
fucomp
imul
push
inc
repz
cmp
daa
sub
xor
adc
inc
ds
and
out
and
cmpl
fwait
or
or
jecxz
pop
mov
cmc
mov
aaa
dec
loopne
xor
das
sub
jmp
jb
adc
aam
shl
xchg
icebp
and
mov
or
add
sti
xor
sub
outsb
push
aam
cltd
orb
int3
mov
outsl
inc
jne
repnz
sub
or
push
add
dec
xchg
adc
xchg
movl
ljmp
mov
fistpll
movsl
pop
and
arpl
leave
sub
gs
in
push
roll
mov
and
dec
ficompl
sbb
jo
and
scas
pop
jge
dec
cmp
gs
jmp
pop
aas
adc
xchg
cld
ja
mov
cmpsl
mov
outsb
cmpsb
push
cmp
mov
inc
out
xchg
int
movsb
int
add
or
xor
in
test
or
sub
mov
aas
cmp
lods
mov
out
popf
out
xchg
enter
xchg
adc
xchg
adc
cmp
fsubl
sub
dec
and
xchg
lret
in
pop
mov
outsb
cmpsb
into
push
sbb
and
jb
xlat
xor
into
ds
lahf
xchg
mov
ja
mov
or
pusha
xchg
mov
mov
imul
mov
inc
jg
sarl
insb
add
adcb
adc
es
dec
adc
pop
push
fbld
mov
frstor
jl
dec
xor
pop
sahf
mov
cmpsb
dec
mov
js
lods
outsb
cwtl
and
jl
dec
ret
xchg
xor
nop
add
mov
or
cmpsl
cld
dec
pop
nop
das
fwait
or
push
jecxz
les
and
loop
in
xlat
stos
push
pop
jo,pn
push
iret
imul
xchg
stos
lods
repnz
mov
ds
add
es
out
cmc
inc
jb
fstp
test
psrld
push
inc
pop
loope
je
add
fadd
aas
push
call
sub
inc
out
mov
loop
mov
movsb
jecxz
outsl
dec
jne
in
aad
pushf
add
ss
add
sbb
notb
and
cltd
adc
xchg
idivl
mov
je
scas
ret
jns
lret
daa
adcl
and
pmulhw
push
or
xchg
cmp
inc
sub
push
scas
xor
rorb
in
mov
jle
loop
dec
lret
lcall
mov
popf
sub
mov
bound
push
sub
mov
out
inc
outsb
jge
or
or
pop
xor
jns
movsl
sub
and
mov
jb
scas
xor
shll
push
cmp
pop
aam
popf
out
cltd
sbb
out
nop
mov
sbb
or
push
cmc
test
test
js
dec
push
enter
push
jle
ljmp
push
push
shll
mov
cmp
lret
cmp
jbe
fwait
daa
ret
mov
es
add
inc
cli
data16
xor
jae
arpl
mov
cmpsl
stos
xchg
inc
lods
xor
cwtl
call
mov
jno
push
mov
cmp
xchg
call
loopne
dec
int
aam
fldl
adc
or
addb
lret
xchg
jg
mov
lcall
push
les
mov
rcr
call
xchg
loopne
mov
jns
data16
cmp
aaa
add
aas
es
xor
and
repz
mov
xchg
je
xlat
in
arpl
cwtl
enter
push
aad
notl
gs
mov
stos
jno
cmp
sub
cld
out
xor
loop
es
pop
mov
pop
inc
jb
xchg
or
bound
imul
pusha
sbb
js
loop
pusha
mov
pop
adc
je
mov
pop
es
sarb
sub
xor
and
imul
mov
fwait
out
inc
fnstcw
shlb
adc
test
shlb
flds
sti
jae
out
dec
mov
cmp
outsb
and
add
sub
fstl
fistl
push
leave
notl
or
and
and
cmpsl
leave
in
lahf
and
add
xor
or
xchg
addb
test
sti
rcll
sbb
je
aad
iret
bswap
addr16
enter
cmpsb
and
mov
push
add
pusha
sub
add
imul
sub
mov
mov
sti
lock
xchg
or
test
imull
stc
sub
xor
mov
mov
xchg
xor
cmpsb
mov
or
repnz
adc
jbe
pusha
outsb
call
xor
cli
loopne
mov
push
fwait
insl
cmc
xchg
mov
scas
movsb
and
push
scas
in
jbe
in
fadds
outsl
cmovp
or
mov
nop
pop
sbb
cmpsl
pop
push
sbb
mov
or
loop
aaa
sti
pushl
je
pop
jae
cld
mov
js
or
push
test
cmc
popa
fisubrl
repnz
shr
xchg
int3
xor
xchg
xchg
xor
je
mov
xchg
jg
fisubrs
sub
jb
es
sub
add
mov
test
add
bnd
dec
arpl
clc
jne
mov
sub
cmp
insb
jg
sub
inc
dec
xchg
xchg
push
imul
and
int3
mov
fs
ficoms
push
aaa
jbe
fisttpll
inc
dec
pop
xor
lods
aad
fwait
mov
ja
imul
in
push
mov
add
lea
mov
xchg
pop
lds
shr
sub
lods
cmp
test
pop
cld
loop
sti
inc
mov
stc
dec
mov
inc
push
lret
daa
inc
cs
jmp
mov
inc
mov
lret
adc
sbb
cmpsb
imul
add
jp
aaa
add
xchg
mov
jb
sbb
repz
outsl
xchg
sbb
add
cli
xchg
add
in
test
clc
mov
mov
inc
stos
jne
xlat
rcrl
inc
cmpsl
lods
fcoml
push
adcb
mov
pushf
lret
gs
repz
jae
int
mov
into
xchg
fwait
clc
lods
js
pop
setg
int
ret
dec
mov
dec
cmp
xchg
mov
or
arpl
in
ljmp
pop
mov
sti
xchg
jle
sbb
pushf
fstl
cmp
out
incl
sbb
lcall
mov
addb
jle
fsin
int
pop
adc
je
mov
movsb
call
xor
repnz
dec
rolb
stc
ret
shrl
add
mov
aam
adc
cld
in
pop
mov
jae
fmull
sti
sti
insl
and
ret
mov
adc
inc
push
and
insb
cwtl
xchg
pop
addb
and
pop
dec
mov
xor
movsl
out
or
jae
ret
mov
pop
orb
inc
sub
pop
mov
cmp
cltd
clc
fldenv
jnp
adc
pop
lods
out
mov
inc
jbe
push
and
js
ret
lret
or
pusha
and
insb
fwait
mov
js
mov
and
xchg
loop
push
loop
pop
jno
inc
fcmovb
movsl
fildll
sahf
add
mov
cmp
jns
data16
cli
cmpsl
rol
mov
test
rep
cmp
rcll
adc
inc
lret
mov
inc
aad
and
lret
xlat
lret
movsb
dec
call
iret
aad
sbb
inc
xor
cld
jne
pop
xchg
and
add
cmp
cmp
iret
xchg
or
sub
and
xor
mov
out
mov
xchg
stc
inc
inc
mov
sbbl
rclb
sub
inc
les
data16
xchg
dec
loopne
or
cli
or
jg
mov
sti
aam
nop
repnz
jns
iret
pop
mov
jg
lods
inc
lea
xor
fsubrl
leave
inc
dec
and
incl
jge
inc
or
or
push
inc
rolb
or
pop
repz
and
loop
inc
jge
jecxz
jne
std
imul
ret
divb
dec
insl
inc
adc
and
ja
dec
fdivrs
shrl
repnz
sbb
cmpsl
sti
fidivl
sbb
clc
clc
das
into
test
mov
mov
mov
mov
sub
je
imul
cmp
mov
aam
pop
mov
lret
adc
cmp
cmp
sub
jg
push
fildl
test
mov
sub
popf
xchg
or
mov
fimuls
sub
lcall
xor
jb
decl
int
inc
push
sbb
mov
cld
in
jns
cmpsl
mov
push
sub
sub
stc
ret
movsl
add
pop
cmp
sahf
sti
cmp
ss
fcoms
xor
dec
cmp
push
inc
mov
in
repz
jno
movsb
repz
mov
lods
int
hlt
add
and
dec
fdivs
xchg
cmp
adc
psubusb
popf
aaa
ret
loop
mov
in
pop
inc
fsubrl
aas
hlt
dec
push
xor
or
cmp
pusha
outsb
in
pushf
add
push
jb
sbb
movsl
adc
decl
cmc
lret
cmc
cmp
jb
addr16
pop
sbb
cmp
cmovns
mov
dec
shll
xchg
icebp
inc
sbb
jmp
push
adc
loopne
xchg
jl
jecxz
mov
cwtl
lock
int3
and
int3
sub
jno
xchg
add
aas
jae
sbb
cmpsb
fbld
and
xor
adc
data16
or
add
adc
and
in
xlat
adc
sarb
ret
mov
inc
dec
dec
xchg
jl
and
addr16
jb,pn
pushf
add
loopne
insb
bound
inc
pusha
rcll
pop
adc
mov
mov
lret
dec
test
out
push
mov
jbe
xchg
mov
dec
inc
roll
aam
sub
mov
lea
dec
push
sbb
jl
movsb
clc
mov
js
and
test
ss
imulb
mov
aaa
jge
les
ss
mov
enter
add
jo
test
mov
dec
in
sub
std
cmc
adc
dec
mov
lods
out
xlat
xor
push
int3
repnz
inc
lcall
shll
mov
add
jle
mov
aam
loopne
hlt
mov
out
mov
xchg
addr16
jmp
addr16
dec
out
mov
cmp
jb
and
cs
arpl
movsb
ret
push
xor
sub
arpl
dec
insb
clc
movsb
mov
repnz
cmpsl
std
add
scas
lahf
sahf
iret
mov
ret
and
xor
lcall
hlt
dec
insl
pop
mov
nop
test
push
mov
mov
test
sub
loop
push
andl
loop
mov
in
cltd
repz
lods
bound
sub
jmp
lds
loop
out
aas
xor
xchg
mov
pop
arpl
fildl
cmpsb
lock
and
imul
push
inc
and
inc
mov
and
lcall
sbb
int
sub
lods
movsl
xchg
mov
lahf
adc
out
mov
mov
jmp
push
sub
testb
mov
into
xlat
xchg
inc
inc
movsb
inc
inc
pand
jo
xchg
pop
dec
pop
lds
data16
icebp
xor
sarb
xchg
dec
rorl
iret
xchg
lock
imul
mov
das
sahf
xor
fistps
cmp
and
subl
push
cmp
xchg
xor
rcll
add
into
push
sub
sar
mov
ds
repz
cmp
xor
xor
mov
and
dec
jle
scas
hlt
adc
rol
aaa
test
fcompl
adc
dec
or
es
lods
jge
and
fbld
push
xchg
mov
fbld
and
fwait
jo
stos
insb
push
dec
jno
dec
lods
jl
push
adc
nop
in
ss
mov
push
or
xchg
xchg
mov
mov
sbb
in
in
aaa
jbe
les
jae
lcall
pop
out
stos
cli
je
fisubrs
pop
ljmp
xor
cmp
inc
cmp
sti
into
aas
fwait
cmp
lock
aad
adc
lds
orb
jle
hlt
fwait
pushf
or
inc
es
daa
jbe
fs
or
sti
nop
jmp
test
test
dec
fisttpll
mov
xor
adc
xchg
stos
mov
mov
cmp
scas
sar
jp
cwtl
mov
push
push
scas
in
push
push
push
int3
inc
sub
inc
cmpsl
add
jge
into
iret
mov
cmp
ljmp
and
js
clc
sbbb
stc
jo
push
xor
mov
cmp
mov
stos
loopne
and
xchg
andl
pop
xor
push
sub
mov
pop
dec
push
movsb
out
nop
inc
sub
mov
mov
outsl
ror
push
hlt
push
add
xor
pop
push
mov
add
fdivrl
inc
push
loopne
mov
mov
gs
add
pop
or
cwtl
jge
rorb
scas
insl
inc
or
in
adc
jmp
sti
mov
fcmovne
cld
mov
adc
sub
cmp
and
clc
shr
imul
pop
adc
int3
cmc
arpl
adc
push
je
mov
insl
add
dec
xchg
sbb
cltd
lea
shlb
dec
aad
cmp
xlat
inc
mulb
jns,pn
sub
imul
push
jp
xor
mov
mov
sub
adc
pusha
aaa
pop
xchg
add
push
xor
and
mov
aas
jno
sarl
arpl
mov
fsubl
lret
dec
adc
jne
mov
daa
fistps
stos
arpl
jne
jl
fadds
mov
pop
lods
popf
lret
mov
xor
out
pop
push
dec
repnz
dec
dec
icebp
mov
mov
add
out
push
adc
push
xor
ret
outsl
and
sub
lret
pop
imul
rol
insl
xchg
mov
aad
fldl
inc
jp
mov
rclb
or
aad
pushf
int
inc
in
inc
jno
test
pop
andl
jne
test
mov
push
cwtl
cwtl
push
jmp
add
push
stc
shlb
sarb
inc
movsl
push
divl
sbb
lahf
jmp
xchg
pop
nop
movsb
jnp
push
outsb
aad
cmpsl
fidivrs
lret
mov
cmp
fisttpll
sbb
bound
js
push
lahf
lock
jb
fidivl
imul
mov
sub
lock
xor
jae
mov
in
movq
bound
or
mov
push
cmp
out
jb
sbb
addl
sbb
data16
fcompl
aam
lahf
sbb
pop
dec
push
mov
xor
mov
xor
jmp
data16
cmp
cmc
scas
pusha
inc
xchg
fldcw
push
pop
into
dec
sbb
push
testl
cld
test
and
cmpsb
mov
stc
push
add
in
inc
insb
stos
mov
pop
push
rcll
adc
add
movsl
mov
jmp
mov
pop
xor
fcmovbe
mov
sub
xlat
xchg
cvttps2pi
mov
mov
fwait
sar
cmp
rcrb
std
push
adc
add
fdivp
sbb
lock
xchg
jo
pop
push
adc
or
push
xor
arpl
repz
dec
sahf
xor
out
xor
cmc
sub
fldt
icebp
adc
je
inc
out
xchg
test
pop
pavgb
sbb
arpl
cmpb
mov
lock
dec
push
and
sub
mov
pop
ror
mov
or
ljmp
sub
or
test
loopw
xorb
fwait
dec
jae
insl
jb
lret
fstps
inc
loop
fistl
mov
shll
std
add
popf
dec
lods
mov
imul
insb
pop
das
sbb
pop
mov
addr16
int3
and
mov
xchg
mov
add
inc
ret
mov
fldcw
sub
js
loopne
mov
push
stos
mov
pushf
lcall
ljmp
mov
arpl
jle
test
mov
shrl
and
push
test
leave
mov
iret
xchg
jno
mov
dec
clc
pop
enter
fs
mov
sbb
sub
lds
aaa
test
stos
mov
aam
push
cmc
shlb
jp
mov
dec
subl
adc
pop
jno
add
or
adc
clc
and
nop
hlt
dec
jg
jns
daa
out
add
sub
stos
dec
add
and
cmc
push
mov
push
mov
mov
bound
add
aad
in
cmp
or
imul
pop
cmp
and
mov
mov
jge
dec
ljmp
mov
jo
xchg
jmp
xor
les
daa
sbb
loope
xchg
icebp
addb
mov
push
sahf
shlb
roll
mov
aaa
and
jb
nop
xchg
lret
push
and
fnstcw
mov
push
out
xchg
inc
rorl
les
and
xor
pop
add
lcall
jb
sub
jno
mov
aam
insb
inc
pushf
xchg
out
roll
scas
mov
mov
or
ljmp
clc
nop
jo
jg
rep
call
insb
jne
test
imul
rolb
cmpsl
dec
insl
fcomip
pop
mov
adc
in
je
inc
sub
push
out
mov
push
into
xor
mov
jae
mov
jns
mov
mov
into
inc
ljmp
push
addr16
pop
mull
push
fsub
adc
sbb
mov
ret
jo
lods
mov
xor
mov
rcrl
jmp
sub
jne
std
lahf
ficomps
adc
xchg
adc
xor
in
das
aam
repz
and
pop
fcompl
subb
push
mov
jl
pop
into
push
or
loop
and
outsl
xchg
dec
fildl
xchg
ret
push
mov
ljmp
mov
aas
sahf
cltd
outsl
pop
jl
jnp
mov
mov
mov
outsb
inc
dec
out
inc
xlat
fmull
inc
js
push
mov
mov
xchg
xchg
jp
cltd
jle
add
add
xchg
test
inc
lret
dec
ss
push
popa
mov
xchg
rorl
popf
sub
fimuls
xor
and
and
or
loopne
jecxz
insl
or
divl
mov
ljmp
push
push
jb
push
xchg
pusha
push
dec
cmpl
frstor
sahf
adc
and
scas
fdivl
aas
or
fwait
lods
xchg
sti
lea
cmp
mov
mov
jnp
in
sbb
xchg
push
pop
xor
pop
cmp
mov
adc
push
adc
mov
dec
inc
rcll
push
aad
and
sbb
dec
fcoms
mov
xlat
or
push
pushf
stc
fbld
cmp
and
mov
xlat
test
les
xchg
fwait
inc
push
dec
jmp
pop
in
mov
in
xor
std
cli
add
repnz
jp
sbb
add
imul
xchg
out
push
sub
iret
data16
sbb
popf
cmp
pop
adc
jle
sub
push
mov
ret
sub
jo
push
ljmp
lods
test
lods
ret
cmp
fwait
inc
outsb
ljmp
scas
mov
inc
test
cmpsb
stc
data16
mov
cmc
cmp
push
sub
mov
mov
movb
mov
bound
lret
mov
shr
push
jge
mov
cmp
leave
push
push
push
xchg
mov
aam
mov
sub
mov
inc
pop
xchg
jnp
inc
jmp
out
clc
testb
outsb
popa
mov
mov
jbe
aad
dec
cli
mov
push
fucom
inc
test
inc
jno
inc
subb
rep
push
dec
aad
mov
push
mov
cmp
ja
pop
lcall
mov
jae
add
ss
cltd
jb
das
mov
cwtl
or
out
add
imul
out
mov
outsl
xchg
xor
bound
stc
adc
pop
or
or
stos
jns
cli
imul
lcall
pop
jbe,pt
mov
xchg
pop
sbb
xchg
add
rcrb
ja
test
pop
xchg
aad
jl
sbb
push
sbb
or
cwtl
jmp
test
xor
scas
dec
cmp
int3
mov
mov
in
mov
mov
test
xchg
pop
fsubs
shl
push
cmp
mov
aas
out
stc
insl
std
jnp
add
push
mov
dec
stos
lods
jno
xor
mov
mov
aam
fisttpl
or
shll
lcall
cs
cmp
pop
jne
jb
jge
jl
aaa
jg
jae
sbb
add
pop
stos
dec
xorb
xchg
and
dec
insb
nop
gs
inc
push
add
jmp
ljmp
je
add
jnp
pop
push
mov
xchg
js
les
push
pop
xchg
sbb
add
lea
jmp
stc
xchg
lret
dec
js
push
dec
sbb
mov
jo
aaa
scas
stos
push
mov
test
pop
inc
or
out
xchg
fistps
jle
push
int3
aaa
jb
pop
popf
add
rcll
adc
cmp
ds
ret
fnstenv
pop
test
add
xchg
fcmovu
inc
and
push
xlat
push
or
mov
xor
mov
in
mov
pusha
insl
in
les
jb
and
stos
push
and
jno
mov
dec
sub
adc
xchg
shll
lds
lds
packuswb
xor
insl
mov
dec
insb
mov
pusha
jp
inc
inc
jle
push
add
xchg
in
mov
icebp
aaa
xchg
push
xchg
cmp
fcmovnu
pop
jne
sbb
and
inc
scas
pop
jecxz
gs
mov
sahf
out
jecxz
jl
cwtl
or
movsl
cmp
and
out
aas
xchg
leave
sti
mov
xor
sub
mov
ret
std
ds
xchg
mov
push
in
test
into
mov
xchg
xchg
xchg
ja
adc
xor
je
out
repnz
inc
notb
push
cmpsl
aas
orb
test
sbb
jnp
lahf
data16
lods
xor
pop
jg
fmull
aaa
jnp
adcl
insl
movsl
shrl
out
push
or
inc
sbb
and
inc
nop
xchg
mov
ret
or
or
fadds
stc
insl
xchg
push
fwait
test
dec
shll
mov
aaa
pop
insb
cs
adc
sbb
out
and
jg
and
jae
sysexit
add
jg
inc
jb
jmp
mov
in
stc
pop
dec
insl
pop
xor
fs
mov
and
mov
inc
mov
mov
pushf
cmp
fildll
mov
mov
in
jle
xor
es
add
cmp
pop
icebp
aas
cmc
loop
jge
cmp
dec
sub
and
fwait
gs
jae
mov
in
mov
incl
mov
lret
loop
insl
stos
pop
mov
ret
cmp
dec
call
xchg
pop
insl
movsb
scas
adc
and
mov
adcl
add
adc
dec
dec
xor
pusha
xor
cld
xlat
cld
jp
mov
in
fistpl
data16
cmpsb
rdpmc
aad
adc
jg
sar
inc
ss
lahf
fwait
rcrl
xchg
mov
adc
in
inc
test
pop
pop
jb
lds
stos
in
test
in
xor
mov
sbb
addb
cmpsb
push
mov
cmp
add
push
push
dec
aad
xlat
das
cmp
inc
sbb
pop
inc
or
dec
mov
repnz
or
or
mov
pop
and
rorl
or
mov
das
adc
jp
cmp
stos
pop
out
insb
mov
xchg
shrb
pop
sti
ja
xlat
out
push
sbb
jle
sub
enter
testb
enter
nop
js
mov
xor
sub
fwait
sahf
inc
fsubs
mov
popf
sbb
jl
pop
std
dec
repz
sub
and
mov
or
ret
pop
sub
jge
push
sub
jo
cmp
jp
pop
lods
ret
cmp
lret
mov
mov
add
add
add
sbb
adc
inc
pushf
xchg
dec
test
arpl
xchg
test
movsb
repnz
lcall
mov
lret
neg
pop
test
mov
dec
ja
lret
fxtract
fildll
and
daa
push
xchg
xchg
cli
dec
push
in
push
les
ret
or
pop
orl
and
push
push
rcr
or
or
imul
ffreep
lds
cmp
push
xchg
pop
fwait
xchg
inc
pop
aas
dec
or
enter
lret
or
inc
shr
xchg
fiaddl
mov
pop
xchg
cmp
mov
inc
push
sbb
insl
cmp
js
addr16
sbb
daa
fs
jbe
insl
stos
jge
push
adc
sub
sub
or
sbb
jecxz
lret
mov
mov
pop
xchg
fcoms
and
xor
lds
enter
repnz
nop
loope
push
loope
dec
test
mov
sbb
mov
cmp
test
int3
test
mov
push
mov
xor
ja
adc
cmp
mov
mov
pushf
sub
sbb
dec
ud0
popf
pop
rclb
cwtl
dec
outsb
mov
test
jns
in
inc
xlat
cwtl
mov
sub
inc
xchg
jb
dec
dec
lret
add
dec
cmp
daa
lea
or
mov
mov
lcall
cmpl
ljmp
jmp
fidivs
mov
adcb
cmp
testb
push
sub
subb
mov
repz
lahf
or
iret
jb
mov
mov
mov
inc
movsb
icebp
roll
add
inc
mov
mov
xchg
sub
lods
clc
leave
add
aam
pusha
mov
addl
divb
push
push
aas
orl
test
jns
scas
das
stos
iret
gs
sbb
mov
pop
bound
xchg
inc
test
jle
sti
xchg
inc
fistps
mov
jae
inc
lret
jbe
pop
inc
int3
pop
ds
xor
pop
rcl
lds
pop
je
jne
cli
dec
mov
icebp
out
mov
adc
clc
mov
xchg
imul
loop
mov
xor
cs
enter
sbb
mov
mov
sub
mov
add
cmp
jns
xchg
mov
iret
ja
pop
jp
xchg
in
cwtl
imul
sbb
in
sub
aas
sub
add
addr16
cmpps
fbstp
xchg
mov
adc
daa
push
fwait
insb
es
hlt
mov
mov
cmc
pop
clc
jae
data16
sub
xchg
cld
bound
adc
add
imul
sbb
push
out
dec
call
push
jl
jmp
jg
push
inc
jae
lret
sbbb
inc
jae
push
inc
jge
lahf
add
add
inc
in
cltd
or
sub
std
sbb
xor
mov
mov
mov
jle
cmp
mov
aas
mov
jl
and
sbb
xlat
pop
fistpl
ret
mov
enter
mov
sbbl
rcrl
aam
fcomi
or
arpl
xchg
call
lea
add
mov
xchg
sub
shll
imul
ret
xor
les
jl
cmp
aaa
data16
mov
popa
rorb
push
xor
mov
sub
sbb
subl
pop
push
push
sbb
out
stc
push
sbb
jae
stos
xchg
aad
dec
ljmp
add
mov
push
out
sahf
loop
mov
push
scas
xchg
push
mov
mov
push
and
mov
sarl
pop
mov
into
mov
mov
test
into
divb
mov
inc
add
inc
scas
cmp
cmpsb
fwait
bound
cmp
sbb
xor
xor
imul
and
ljmp
pushf
sub
imul
sub
movsl
imul
movsl
mov
out
jbe
shl
data16
or
lret
sbb
stos
aam
xor
loopne
imul
rolb
aas
cmp
pop
mov
ljmp
xchg
flds
icebp
sub
test
mov
jp
enter
dec
out
sub
push
imul
lret
sub
push
sbb
mov
push
sti
mov
sahf
cld
push
outsl
sbb
pop
xchg
inc
stos
notl
popa
lret
addr16
jb
mov
loope
mov
jg
dec
out
and
dec
outsl
iret
mov
cld
loop
sti
mov
push
mov
xchg
jmp
cmp
inc
mov
jmp
data16
mov
mov
and
lods
sub
and
push
addr16
push
push
xchg
test
sub
push
dec
ja
mov
std
popf
in
inc
daa
mov
xchg
push
xchg
es
cvttps2pi
dec
jmp
jns
sub
imul
daa
sbb
sub
test
cwtl
jbe
es
or
insb
jp
push
in
movsb
xchg
ds
cmp
outsb
das
mov
pop
aad
bound
dec
xlat
fidivrs
push
mov
subb
roll
mov
push
push
xchg
xchg
fsubs
jle
and
lcall
sub
dec
dec
dec
mov
push
pop
imul
fs
sbb
push
rorb
xor
loopne
les
clc
mov
lds
and
cmp
dec
pop
or
test
mov
inc
or
pop
pop
mov
js
jmp
mov
pop
sbb
fildll
loopne
mov
pop
pop
scas
loop
cmpsl
pop
push
clc
mov
push
sahf
movsb
outsb
loop
leave
es
ds
xlat
inc
mov
mov
mov
or
sub
fs
fwait
out
push
mov
jp
mov
and
scas
icebp
mov
jecxz
fwait
mov
cmp
fucom
leave
adc
jns
dec
int3
mov
cmpsl
push
sub
dec
iret
test
ret
out
mov
in
push
jno
mov
sub
sub
push
pop
jbe
fxch
sahf
inc
gs
bound
mov
jno
imulb
fildl
pusha
xchg
push
sub
jne
and
cmpsb
clc
cmpsb
insb
ds
test
mov
insl
push
nop
lahf
sahf
aam
mov
add
aad
nop
sbb
fucomip
int3
repnz
pop
sub
add
push
mov
fdivrl
ja
das
pop
daa
jmp
pop
push
or
repz
std
fistl
nop
xor
cli
shl
out
movsb
add
in
cld
jecxz
shrl
pop
stos
fs
stos
divb
adc
sub
out
outsl
adc
addr16
in
nop
sbb
mov
or
into
std
sbb
imul
xchg
adc
pop
ljmp
lcall
iret
mov
jmp
mov
inc
aas
lret
pushf
mov
fabs
jge
test
cmpsb
mov
repz
or
mov
push
arpl
jg
cmpsl
inc
andl
and
das
mov
jle
stc
into
or
mov
adc
cltd
movsb
jp
xor
loope
jbe
push
aad
bound
out
inc
dec
add
pop
sarl
test
sbb
jge
add
xor
mov
out
imul
aam
ror
jbe
sahf
jne
popf
lods
lods
repz
and
xchg
sub
and
mov
pop
enterw
imul
mov
imul
adc
jae
jp
push
mov
dec
mov
into
mov
cmp
ds
fs
push
ret
test
mov
pusha
adc
stc
jae
mov
xchg
or
and
lods
clc
pop
popa
cmp
and
jae
lahf
stos
sbb
ss
dec
dec
rorl
arpl
adc
mov
add
sbb
and
divl
addr16
fwait
mov
sub
dec
jne
mov
mov
jbe
shl
lret
add
scas
pop
outsb
jecxz
aam
repnz
xchg
lods
dec
shl
add
mov
inc
in
stos
sahf
mov
ja
push
insb
or
adc
add
mov
aaa
and
jmp
into
sarl
insl
daa
add
or
shrb
cmp
cmp
call
push
hlt
or
jns
mov
mov
push
pop
xchg
push
dec
xor
sub
mov
push
ret
sbb
adc
xchg
data16
les
insb
repz
jecxz
out
call
push
mov
jl
add
iret
xchg
jp
mov
gs
test
pop
jl
pop
inc
idivl
rorb
out
push
imull
or
cli
pusha
inc
jp,pn
icebp
sub
mov
push
adc
push
xor
cmc
cmp
mov
daa
xlat
sahf
sub
push
inc
imul
es
push
mov
movsb
into
test
cmpsl
jge
push
mov
lea
push
repnz
sbb
mov
cmpsb
xchg
hlt
lds
add
ret
icebp
ss
mov
nop
pop
pop
lcall
testb
adc
xor
mov
int3
shrl
popa
mov
xor
imul
push
addr16
out
push
mov
pop
mov
aad
mov
inc
pop
cmpsb
lods
pop
cmp
mov
xor
mov
movsl
mov
push
inc
push
outsb
sti
cmpsl
div
lds
dec
int3
mov
lods
dec
cmpsl
mov
lods
inc
or
movsl
sub
scas
mov
or
mov
imul
and
push
mov
sub
xchg
xor
inc
sub
inc
push
ljmp
sbb
test
out
int
pop
imul
and
mov
je
mov
cmp
cmp
in
into
pop
cmp
jg
push
lret
xchg
jl
xlat
popa
jno
pop
inc
adc
pop
es
cltd
sub
or
jb
mov
push
pop
cmpsl
hlt
call
int3
data16
inc
cltd
mov
dec
lods
fs
or
in
xchg
fldcw
lcall
and
cwtl
push
sbb
divl
mov
popa
pop
push
fldcw
mov
ljmp
add
clc
xchg
movsl
popf
mov
inc
popf
dec
xchg
cmp
rcrb
sbb
sub
imulb
ja
fnstenv
mov
xchg
jno
mov
pop
lret
test
mov
cmp
jp
sahf
mov
pop
mov
fstl
inc
xchg
xor
pushf
es
hlt
mov
adc
mov
mov
inc
cmp
or
push
xchg
lods
loopne
bound
lock
mov
rcl
std
scas
xor
subb
sbb
cmp
dec
mov
lods
inc
mov
pop
cmpsb
int
aad
mov
mov
pusha
testl
jo
add
jb
xor
mov
adcl
add
lods
in
and
push
bound
xchg
cmc
sbb
add
out
jnp
pusha
sub
or
fdivp
cli
das
divb
mov
insb
jp
lock
add
add
rol
push
cmc
sahf
sahf
xor
jecxz
pop
pop
mov
subl
cmp
push
int3
xchg
loopne
imul
and
mov
popl
sahf
push
adc
mov
jne
pop
jb
mov
inc
icebp
icebp
loop
stc
inc
jmp
mov
and
jne
js
add
and
nop
jno
push
add
sbb
push
insb
pop
push
cmp
cli
aad
sbb
pop
out
pop
fmul
lea
pop
mov
dec
dec
push
pop
cmp
mov
pop
inc
sub
lock
mov
arpl
out
jo
shll
add
sbb
pop
nop
aam
lret
jecxz
outsb
xor
inc
shll
mov
sbb
sbb
lods
add
movsb
cmp
cmc
mov
adc
sbb
lahf
xchg
xor
fisttpll
xor
mov
inc
jmp
jge
jns
add
mov
mov
fstpl
arpl
sub
aas
mov
inc
push
pop
out
repz
pop
cmpsb
or
cmpsl
or
push
or
loope
add
sbb
xchg
aaa
pop
mov
cmp
inc
pop
cld
fildl
mov
sub
mov
insb
jo
push
js
add
movhps
jmp
aad
inc
push
add
mov
lret
cwtl
rcr
loope
dec
imul
mov
fisubrl
dec
dec
stos
aas
fxch
gs
mov
dec
fmuls
stc
add
xlat
add
mov
inc
repnz
and
out
mov
mov
pop
xlat
add
test
cli
fidivrs
xor
in
call
imul
es
hlt
pop
fildll
add
push
lcall
in
and
icebp
shll
js
and
rcr
xchg
ja
push
fistps
pop
imul
mov
or
inc
push
sub
inc
leave
dec
add
inc
dec
aas
sbb
xor
loopne
aad
xchg
outsl
add
xor
lea
out
or
jns
cmpsb
and
mov
sub
int
test
cmpsb
inc
dec
mov
jecxz
add
mov
jns
imul
and
mov
ja
mov
jae
and
sti
testb
in
cmp
cmpb
faddp
dec
push
jne
lret
and
dec
pcmpeqb
push
lock
pop
test
add
pop
mov
sahf
sub
mov
and
xchg
sub
out
jnp
fisubrs
pop
ljmp
sahf
mov
outsl
jp
bound
icebp
xchg
jle
cmpsl
rcrb
fs
rcrl
cld
vmovaps
push
leave
mov
repnz
mov
inc
push
xor
xchg
stos
sbbb
dec
sbbl
addr16
inc
push
insb
pop
test
adc
cli
add
mov
ret
push
cwtl
xchg
repnz
test
pop
into
hlt
scas
in
lds
pop
sub
rcr
sub
testb
xchg
jcxz
xor
pop
ljmp
mov
jmp
push
sub
ljmp
xchg
pop
rclb
sti
xchg
shrl
shll
mov
push
cmp
fistps
and
sarb
add
and
add
pop
mov
mov
jg
and
aaa
sub
push
in
mov
sti
clc
repz
pop
jns
adc
call
js
add
out
icebp
cmp
and
imul
sti
ret
aad
test
mov
jp
or
dec
lea
lock
mov
inc
rcll
pop
dec
in
in
aad
popa
xor
and
mov
add
and
jg
lret
or
xchg
dec
lahf
adc
fucomip
xor
pop
adc
orl
push
sarb
xor
inc
pop
daa
cmc
and
pop
mov
cmp
and
sbb
daa
test
push
std
aad
xchg
push
scas
dec
mov
andl
cmp
inc
inc
mov
push
inc
cmp
mov
popa
jb
jo
mov
jg
cmp
repnz
rcll
into
sub
sbb
and
fwait
stc
add
mov
call
inc
inc
add
arpl
jmp
mov
add
sbb
xchg
push
push
cmpl
stc
sub
js
iret
test
adc
or
inc
cmp
xlat
lret
imul
push
xchg
js
jmp
mov
fists
je
inc
mov
das
div
lcall
inc
xchg
dec
fwait
sbb
lods
out
fsts
add
out
rolb
es
pop
adc
adc
ja
sarb
lods
out
test
sar
adc
sub
daa
and
out
imul
push
mov
insl
jge
or
and
ret
into
jmp
shrl
popa
fwait
mov
jl
cmpsb
xchg
jne
xchg
or
imul
pop
in
pop
push
mov
pushf
loope
inc
add
jg
js
ja
stos
int3
test
adc
adc
in
iret
xchg
pop
aas
push
popl
mov
fldcw
or
sti
or
ror
lret
jne
sub
not
inc
xor
xor
repnz
push
push
leave
aad
sbb
scas
pop
aad
sbb
clc
daa
jae
mov
loope
xchg
push
inc
xchg
adc
fstps
push
cmp
fnstenv
pop
popa
sub
inc
pushf
stos
lret
call
push
cld
jmp
jno
es
fwait
or
jno
push
pop
aas
faddl
int3
pop
js
cli
inc
push
mov
lahf
mov
cmpsl
inc
out
pop
jno
ret
pop
jb
mov
addr16
adc
mov
loop
inc
mov
xchg
mov
mov
xchg
test
mov
xchg
jns
rcll
fiaddl
ror
add
sub
imul
mov
push
xchg
pop
xor
pop
xor
in
cmp
and
clc
xlat
imul
pushf
iret
xor
hlt
popa
pop
shlb
aas
mov
stc
ret
mov
or
in
icebp
add
inc
icebp
test
test
pop
fs
daa
adc
mov
andl
addb
sti
add
es
aaa
enter
mov
or
daa
decl
xchg
jg
dec
or
jl
dec
or
test
jno
sbb
mov
jg
repnz
cld
out
dec
jbe
sar
clc
cmc
call
shr
call
push
fistl
dec
ret
aas
stc
lods
in
or
dec
jnp
pop
mov
jo
xchg
jo
mov
jnp
fmull
pop
sub
push
or
call
pop
pop
cmp
cld
xor
dec
iret
inc
jae
pop
fstpl
dec
push
lcall
mov
push
cmp
int
leave
jp
ljmp
sbb
rclb
or
repz
js
test
gs
jbe
lods
mov
fstl
hlt
add
mov
mov
push
inc
shl
sti
adc
inc
aad
xacquire
sbb
fcompl
div
xchg
shll
sub
lds
or
dec
sbb
dec
xchg
ret
pop
and
mov
push
std
mov
ljmp
pop
and
push
idivb
mov
data16
and
mull
daa
or
insl
inc
fidivs
aas
cmp
push
int3
or
jno
adc
adc
fsub
js
cld
mov
pop
daa
jg
out
in
lcall
xor
mov
dec
pop
pop
mov
sbb
rcrb
outsb
cmpsl
addl
and
out
out
cld
mov
aas
pop
mov
inc
lahf
dec
mov
cmp
jecxz
fstps
add
mov
stos
hlt
or
ja
mov
addr16
sarb
inc
and
pop
xor
insb
mov
xchg
and
dec
push
in
cld
mulb
cmp
or
pop
inc
dec
dec
and
jns
imul
ljmp
dec
bound
mov
lahf
inc
orb
sahf
fisubl
xlat
in
mov
adc
jp
cld
or
mov
xchg
jno
or
je
sahf
movsb
outsl
in
outsl
mov
orl
xor
push
int3
inc
pop
push
mov
das
pop
mov
rorb
xchg
cli
add
xchg
cltd
or
out
ljmp
and
cmpsb
test
xor
ret
add
aaa
pop
popf
addr16
cmp
lods
or
ja
lcall
mov
addl
sbb
out
adc
jae
loope
adc
in
out
das
push
adc
mov
lcall
lret
scas
sbb
push
adcl
and
pop
std
fnstsw
lock
mov
arpl
mov
jns
mov
leave
fistpl
xchg
aas
jo
cwtl
lds
repnz
ja
sub
int3
jge
xchg
ds
fimuls
push
hlt
out
mov
dec
rcll
cld
mov
push
das
and
inc
dec
shrb
movsl
addr16
ds
cmpsb
xchg
aaa
and
rol
inc
pop
pop
je
sub
test
das
mov
and
leave
imul
cmp
out
inc
js
inc
ljmp
jge
mov
mov
adc
scas
cld
call
dec
sbb
dec
rcrl
ret
in
mov
daa
insb
sub
jno
mov
or
xor
movq
inc
pop
aad
std
call
add
jecxz
cmpsb
pop
push
int3
inc
outsl
cmpsb
cld
mov
lds
mov
stos
inc
xor
mov
mov
aaa
cwtl
lock
orb
sub
ror
mov
ljmp
lods
sahf
imul
cld
jns
andb
add
pop
xor
pusha
das
iret
mov
and
roll
sub
jno
inc
ds
mov
cli
sbb
jecxz
sbb
push
js
and
aaa
dec
jp
xchg
cmp
xchg
mov
stos
cmp
or
cltd
xor
aas
out
addr16
mov
cwtl
hlt
inc
int3
std
pop
add
aas
test
mov
fdivr
add
xor
cmp
add
inc
nop
and
cli
add
sub
sti
insb
add
fistl
xchg
cmpsl
mov
xlat
cmp
jecxz
cmp
bound
mov
jle
jne
ja
cmp
imul
inc
call
aaa
scas
aam
push
cmpsl
test
sahf
mov
add
scas
sub
mov
ljmp
pop
pop
push
cmp
movsb
push
out
adc
jecxz
or
xor
jae
arpl
cmpl
xchg
or
pop
push
mov
decl
mov
jge
outsl
inc
mov
movsb
mov
or
loope
sbb
or
scas
push
xchg
cltd
outsb
mov
dec
lret
adc
testl
inc
pop
addr16
decb
sbb
mov
fdiv
sub
xorl
lea
mov
fstp
imul
sarl
push
mov
lcall
gs
and
mov
mov
fiadds
push
jno
xchg
push
icebp
sbb
in
daa
pop
movl
lcall
leave
mov
adc
xor
add
cmpsl
enter
jge
test
adc
ja
repz
fmull
sub
std
lahf
fsubrs
out
ss
cmp
out
pop
jbe
outsb
xchg
ss
jmp
hlt
mov
shr
fildl
bound
mov
adc
push
hlt
sub
sbb
sbb
xchg
fldenv
orb
data16
test
ss
fisubl
adc
push
sbb
ret
pop
push
sub
sbb
push
subl
roll
push
xchg
sahf
mov
cmc
hlt
push
test
inc
aam
rolb
lods
lahf
std
repnz
sarl
mov
int3
enter
cmc
mov
ss
sti
paddb
ret
test
cwtl
negb
fdiv
push
cwtl
std
data16
divl
mov
ffree
jno
lahf
mov
pop
sbb
nop
sub
int3
cld
or
testb
xchg
mov
addr16
scas
mov
popf
ret
pop
call
lret
sbb
inc
pop
dec
dec
and
aas
sub
loop
adc
in
roll
or
leave
add
sub
xchg
lret
std
loope
mov
or
std
cmp
mov
sbb
inc
push
adc
inc
sub
pusha
call
scas
pushf
push
push
aad
jle
imul
sub
cmp
inc
and
sbb
inc
lods
mov
or
call
push
stc
mov
push
dec
sbb
sar
mov
fsubl
stos
iret
xor
dec
stc
add
inc
mov
std
sarb
out
movsl
or
clc
jnp
jno
subl
outsb
outsl
adc
xchg
mov
xchg
cmpsl
jo
xchg
jnp
jle
hlt
adc
sub
les
in
loopne
jge
dec
mov
paddusb
jp
xor
lods
or
sub
jp
inc
mov
int
adc
adc
pop
dec
mov
in
pusha
ss
lret
cmp
inc
mov
sbb
loopne
aas
cltd
outsl
xchg
or
roll
les
mov
jle
sub
mull
lea
das
jnp
dec
pop
ficoms
imul
aam
sub
mov
in
test
jecxz
lahf
pop
or
push
adc
mov
cmpsb
stc
iret
cmp
push
sbb
push
add
lods
fildll
repnz
jle
mov
imul
mov
arpl
fsubl
xor
adc
jmp
xchg
repz
test
mov
dec
pusha
fsubr
adc
movsb
mov
mov
std
inc
pop
xchg
ret
addr16
add
xchg
dec
lahf
insb
out
lea
xor
loope
mov
insl
fwait
int
es
out
nop
shrb
fsubrl
xor
or
jb
push
pushf
repz
sbbl
lcall
xlat
jns
lret
fdivrs
push
pop
xchg
lret
jg
add
mov
scas
push
sbb
sub
inc
adc
lods
leave
fsts
cmp
cmp
in
adc
rcll
sbb
lahf
jmp
arpl
mov
scas
test
lds
mov
and
cli
aam
sub
je
sub
adc
inc
arpl
lcall
lea
andb
popa
stc
cmc
push
pop
push
test
and
jecxz
add
dec
popf
mov
call
notl
cmp
sti
inc
cli
in
insb
cs
mov
and
int3
adc
repz
sub
inc
ss
mov
fwait
sbb
push
inc
nop
xchg
in
or
pop
out
jmp
ljmp
cwtl
push
test
andnps
xor
test
dec
fcompl
xor
push
and
push
sti
xor
mov
mov
js
cmp
out
jae
or
clc
jbe
xchg
add
sub
fcomps
fwait
shr
pop
clc
xchg
outsl
mov
andb
test
push
fildl
xchg
xchg
sbb
ja
dec
cmp
add
in
pop
movsb
or
jmp
mov
dec
mov
jb
in
inc
cltd
insb
cmpl
add
lods
and
sbb
stos
repz
outsb
mov
dec
mov
aad
and
mov
add
push
int
mov
dec
mov
mov
lahf
imul
std
sub
das
incl
lret
cli
shlb
mov
mov
xor
mov
test
push
fsubrs
sub
mov
outsb
sbb
popf
cmpsb
dec
mov
jp
xchg
pop
mov
bound
inc
mov
rolb
bound
mov
xor
in
imul
xchg
testb
and
pop
movsl
mov
test
xor
ret
xor
cmp
push
cmp
popa
nop
xor
push
in
xchg
sbb
push
addl
imul
fs
out
inc
lds
jae
shl
sarb
scas
cmp
stc
push
and
ljmp
cli
inc
inc
sbb
test
xchg
lahf
or
aam
arpl
shlb
sar
into
dec
pop
dec
xchg
xlat
jnp
push
test
sub
stc
add
sub
adc
pop
or
add
push
fbstp
lods
das
pusha
add
outsb
sub
push
fdivl
pop
mov
in
imul
dec
fildll
es
jmp
aaa
pusha
out
out
push
ret
test
push
ljmp
movsl
add
cli
imul
loop
das
loop
sar
and
out
hlt
mov
jne
inc
icebp
sbb
in
mov
mull
adc
xchg
popa
adc
fldt
jno
int
add
xchg
shll
pusha
cmpsl
and
jmp
mov
iret
xchg
pop
lcall
fisttpl
sub
cmp
mov
and
outsl
ret
lret
lret
aam
imul
icebp
ds
mov
mov
faddl
mov
shll
mov
in
sarb
mov
mov
sbb
sbb
xchg
xor
out
add
scas
sbbl
sub
lret
lcall
dec
cmp
adc
scas
push
mov
loopne
stos
je
mov
sub
sahf
movsl
gs
and
out
push
mov
mov
insl
inc
inc
inc
mov
popa
jge
cmp
dec
ds
or
icebp
inc
pop
jecxz
and
mov
mov
pop
push
jmp
push
push
mov
sub
lcall
push
jne
dec
mov
push
pop
dec
addr16
sbb
push
xchg
dec
or
sbb
xchg
mov
cmpsb
stos
sbb
lahf
stos
lods
call
dec
mov
sarl
jmp
inc
daa
inc
ljmp
stos
pop
mov
mov
fsubr
imul
mov
mov
jmp
ficomps
shlb
ss
xchg
xchg
cmp
lret
addr16
add
jne
pusha
scas
add
xchg
pop
lcall
adc
xor
xchg
jne
jmp
dec
xchg
inc
lahf
pop
into
jo
cwtl
adc
daa
aam
ja
adc
cmp
adc
push
insb
adc
and
sbb
xchg
dec
scas
aaa
aas
xor
cs
add
pop
daa
xor
and
cli
sti
ret
sub
outsb
jg
push
jmp
lock
lcall
push
jno
cmpsb
in
push
push
fs
in
rol
pop
pop
add
mov
push
xchg
xor
testl
int3
aad
repnz
mov
test
pop
or
pop
cltd
pop
jl
and
fbstp
and
jne
push
dec
in
ss
dec
ljmp
mov
sub
mov
inc
sbb
fiaddl
inc
push
js
jno
hlt
ljmp
out
pop
cmpl
dec
add
cmp
gs
mov
stc
fwait
xlat
mov
negb
sub
dec
icebp
mulb
pop
movsb
imul
add
xor
xor
inc
mov
cwtl
sbb
xchg
loop
in
push
mov
ret
xor
popa
loop
mov
int
xchg
dec
adc
es
jle
rcrl
inc
js
sti
xchg
dec
fcmovb
inc
lea
add
adc
pop
popa
mov
les
and
adc
push
dec
fidivrl
icebp
jne
aam
dec
lock
or
push
dec
jmp
xchg
movsl
pop
outsb
addl
mov
jno
lods
lods
gs
mov
in
and
push
or
jns
mov
mov
sub
pushf
inc
enter
xor
mov
mov
fcoms
xor
sub
push
jne
cwtl
pop
cmp
out
stc
pop
gs
into
lods
lock
fldt
inc
mov
fmuls
int
dec
add
mov
lods
sub
sahf
cmp
xchg
movsl
jl
neg
jno
jg
xor
add
sbbb
sbb
ljmp
push
add
repnz
test
inc
gs
and
push
mov
in
scas
rclb
or
pop
shrl
cmp
lock
push
rorb
push
push
loopne
jp
std
repnz
pop
cmp
ljmp
xor
adcl
sbb
adc
ja
cmp
test
insb
push
mov
in
pop
shrl
es
hlt
dec
cmpsb
iret
adcb
pusha
adcl
push
xor
fsubs
popa
dec
pusha
xor
cli
dec
cmp
pushf
ficoms
sti
fstp
sbbb
push
pop
lret
std
mov
xor
ret
jbe
cmpsl
mov
fisubrl
loop
add
ds
aad
push
mov
clc
je
int
int3
dec
mov
test
sub
inc
adc
mov
cld
push
aad
out
std
xor
test
adc
aas
xor
bound
and
lds
jge
sti
fcomps
push
subb
mov
mov
loopne
add
and
and
inc
scas
jge
or
vandnps
push
sti
jo
les
pop
setno
std
cmpsb
dec
fisttps
pop
mov
push
je
lret
mov
mull
dec
and
cmp
sbb
xchg
sub
mov
dec
aad
or
pop
mov
add
push
mov
jmp
cmp
out
std
mov
xor
out
out
lock
jp
test
and
int3
test
gs
mov
push
iret
xchg
lcall
sahf
cmpsb
icebp
jns
lahf
sbb
sbb
leave
out
inc
in
aam
xchg
jns
jmp
ret
ret
mov
sbb
sbb
mov
cwtl
cmp
icebp
dec
mov
lea
fidivrs
adc
iret
pop
aaa
maxps
pop
scas
jb
loope
push
popa
lods
cmp
lret
cmp
in
inc
jl
out
bound
adc
push
mov
cltd
cmp
sub
test
sub
dec
mov
icebp
adc
fstpt
ljmp
mov
sti
dec
outsb
xchg
sar
fildll
xor
mov
out
pop
test
mov
sub
push
mov
sub
sbb
fldl
out
repnz
add
aas
fisubrl
cwtl
cwtl
mov
fwait
add
adc
pop
and
iret
dec
push
ljmp
jl
mov
es
icebp
push
pushf
push
addr16
popl
repnz
push
sub
fsubs
das
and
gs
cmp
jl
jecxz
ljmp
xor
pop
mov
hlt
sbb
pop
or
jmp
clc
jecxz
inc
push
movsb
and
in
mov
lret
sbb
mov
push
mov
movzbl
addr16
insl
pop
sub
orl
fwait
and
repz
sbb
out
sub
jns
jp
add
xchg
sbbl
mov
lds
sbb
jmp
stc
inc
aas
jo
pop
addr16
aas
jmp
lock
adc
dec
js
mov
cmp
outsb
fsubrl
inc
test
jno
xor
imull
cmp
and
push
add
cmp
ret
dec
add
or
cld
adc
lret
fisubl
and
out
push
pop
mov
mov
ret
fists
sub
outsb
xchg
sbb
movsl
mov
adc
sar
arpl
pop
cld
or
popa
rorb
push
dec
int3
fdiv
jnp
shrd
stc
mov
into
ret
popf
push
bound
adc
pop
jb
cs
out
dec
movsb
cmovge
cmpsb
xchg
cmp
lcall
xor
pop
jbe
in
xor
and
mov
inc
fiadds
jecxz
dec
sbbl
ret
pop
aad
arpl
inc
fwait
push
sahf
in
mov
sbb
dec
inc
xor
lcall
sarb
mov
je
cmp
ret
or
sbb
mov
movsl
imulb
cmc
mov
pop
dec
xchg
lahf
lret
xlat
push
lods
mov
jae
pop
add
pushf
lock
inc
jg
dec
mov
push
jnp
mov
mov
inc
inc
dec
jno
ret
cmp
push
das
inc
push
les
sub
jnp
in
dec
xor
xor
pop
sub
inc
jb
aas
cltd
sub
scas
fildll
or
and
jge
mov
into
sub
inc
add
cmp
xchg
sahf
sbb
and
fstpl
xchg
pop
sbb
cltd
incb
jmp
out
out
cmp
icebp
add
shl
inc
push
mov
imul
ret
arpl
xchg
pusha
mov
inc
and
leave
cmovnp
cwtl
and
push
rclb
in
bnd
inc
dec
xchg
adc
out
jge
dec
pop
jge
into
movsl
jno
xor
clc
stos
std
out
pop
sti
fcmovne
ljmp
cmp
cltd
or
mov
mulb
imul
mov
mov
mov
sbb
repz
pop
cmp
push
dec
jge
xchg
dec
movsb
popf
leave
shl
sub
rorb
ficompl
pushf
adc
sub
orl
mov
and
jns
add
loop
shll
mov
xchg
loop
std
sbb
push
mulb
stos
pop
sbb
xchg
dec
lahf
out
push
in
mov
cmc
jge
mov
les
push
jge
inc
mov
cmp
frndint
lea
shlb
inc
mov
cmp
dec
cmp
stos
xor
hlt
loop
orb
mov
inc
loopne
test
call
or
jbe
outsb
call
fdivr
ds
mov
lahf
mov
pop
jge
dec
aaa
dec
inc
leave
lret
movsl
loope
scas
scas
popa
jnp
in
in
dec
fstpt
enter
xlat
xchg
lods
dec
insl
fcmovnb
daa
xor
test
push
repz
fwait
push
arpl
roll
adc
adc
mov
idivl
push
xchg
xchg
xchg
mov
mov
fistpl
fwait
shrl
mov
xlat
les
test
mov
test
pusha
call
sbb
xor
xor
dec
in
inc
fisttps
sub
ja
fcomps
inc
shrb
sbb
xchg
ret
adcl
sub
stos
stc
or
mov
leave
cmp
adc
sub
fisubs
sub
push
adc
push
inc
or
pop
mov
jne
sub
inc
rolb
xor
dec
cs
add
mov
add
test
cmpsl
or
leave
dec
and
fdivrl
push
mov
and
dec
hlt
notl
jl
mov
cmp
roll
mov
fs
add
mov
ljmp
cli
sbb
clc
lods
iret
dec
xlat
add
xchg
in
mov
stc
jmp
mov
popf
jbe
stos
and
imul
pop
push
mov
cmpsb
add
cli
lds
pop
fwait
mov
insb
shlb
int3
ret
or
pusha
jo
dec
mov
mov
loopne
mov
cmpsl
cmp
loop
movsb
rorl
and
lret
inc
out
jno
daa
insl
outsl
adc
or
mov
mov
mov
leave
adc
add
cmpsb
mov
push
repnz
cs
ja
jl
clc
pop
mov
adc
cltd
mov
or
js
pmaxsw
sub
add
xchg
ret
push
sahf
add
stos
push
mov
or
mov
loopne
out
ljmp
sahf
jbe
add
hlt
je
repz
and
pop
iret
or
sti
stos
pop
lcall
mov
push
mov
call
pop
cmp
jge
rclb
cmp
add
insl
xor
xor
in
push
iret
sub
fxch
repz
jge
cmp
pop
jg
int
popa
mov
js
xor
in
cmp
jo
es
fstl
dec
cs
fldcw
test
lahf
and
cmp
and
stc
mov
pop
fsts
aad
sbb
push
fisubs
lds
outsb
lds
add
push
ds
and
push
lahf
mov
popa
addl
sbb
sarb
lods
fwait
dec
sbb
scas
sub
loopne
and
call
pop
jg
rcr
fildl
sti
stos
in
int
popf
xor
mov
adc
std
ljmp
xor
sub
adc
inc
cmp
adc
mov
sub
adc
jno
nop
das
lret
xor
mov
movsb
testl
repz
jecxz
loopne
lea
sbb
cld
call
mov
xor
pop
in
jne
push
imul
lret
fildll
push
orl
jle
fmuls
cmpsb
jg
xchg
fs
mov
dec
movsb
js
jl
or
sbb
add
rcl
cmp
pop
iret
aad
cmp
adc
scas
mov
outsl
clc
neg
in
jne
sub
gs
cld
cmp
repz
js
ret
ja
jl
sbb
inc
push
aam
lahf
and
bt
cltd
std
cmp
repz
dec
test
shrb
fidivl
pop
xor
cmpsb
icebp
xor
lret
or
je
xchg
adc
or
add
sub
ja
mov
mov
ror
outsl
ret
jecxz
gs
testb
inc
cmpl
cmp
inc
push
lods
sbb
enter
mov
xchg
nop
movsb
ja
sub
or
das
cmp
popf
inc
and
faddp
pop
mov
pop
push
sti
in
jb
sub
aas
repz
ja
icebp
cmp
je
mov
lds
mov
call
cmp
fbstp
pop
sub
mov
push
jnp
cmp
jno
add
adc
test
mov
inc
add
loopne
add
xchg
sub
pop
xchg
mov
repz
pop
aaa
lcall
ja
mov
aaa
mov
push
adcb
mov
push
movsl
adc
adc
inc
lea
arpl
leave
mov
ds
push
or
jp
rorb
jle
push
jne
mov
mov
xchg
sub
ds
pop
push
movl
pop
jmp
adc
jbe
push
insl
or
pop
lods
arpl
sbb
cmc
xor
lock
push
sub
popl
daa
xchg
rcrl
mov
jno
fstpt
dec
or
bound
push
jl
in
push
filds
fsubrs
xor
adc
xchg
pop
add
mov
aas
pop
fwait
loop
xchg
mov
fxch
out
pusha
divb
inc
fiaddl
ljmp
cmp
mov
pop
negb
adc
xchg
jo
insl
pop
dec
lock
fistps
cmp
test
ret
lods
jbe
push
fiadds
in
cli
adc
pop
rcr
fwait
shll
push
cltd
imul
pop
xchg
sbb
mov
lock
xchg
inc
mov
push
rcrl
fsubrp
and
pusha
dec
lds
mov
imul
pop
or
sub
daa
adc
insb
out
pop
sub
dec
mov
cwtl
xchg
rcrl
lods
xchg
add
cmp
leave
enter
fcoml
mov
jnp
insb
adc
int3
add
inc
imul
sahf
mov
adc
mov
sub
scas
sti
imul
mov
cwtl
cmp
and
add
push
sub
jl
stc
dec
cmp
andb
jp
sbb
pop
mov
mov
add
shrl
int3
xor
sbb
cmpsl
inc
fwait
add
ret
push
jns
sbb
cmp
mov
xchg
inc
shrl
jmp
jne
cmpsl
mov
lds
or
frstor
scas
imul
mov
stos
mov
cld
jbe
movsb
jne
dec
cmpsl
inc
jmp
lock
ret
dec
jge
mov
jne
mov
mov
aad
test
jb
add
mov
adc
inc
fwait
pop
sti
push
out
cmpsl
push
mov
add
fst
ja
xor
push
adc
iret
or
pop
lret
stos
jbe
popa
dec
dec
andb
mov
push
ror
inc
ja
test
mov
sbb
mov
ret
sub
inc
out
daa
inc
sub
lea
pop
mov
rolb
jne
daa
test
movsl
lds
xchg
dec
pop
sub
xlat
lahf
aad
xchg
testl
call
jmp
imul
stos
xor
out
push
repz
je
and
jl
dec
sbb
and
shrb
jmp
xor
insl
push
inc
js
cmp
xor
ret
xchg
mov
fdivrp
pop
jae
test
xchg
push
inc
jo
jns
pop
and
and
call
cltd
hlt
mov
testb
xor
mov
adc
lret
fs
cmp
idivb
pop
loope
out
add
xchg
roll
mov
rol
stc
iret
ror
xlat
and
mov
out
loopne
inc
fs
add
popa
cs
push
cmpb
rcrb
icebp
pop
or
jns
aam
fbstp
je
cmp
sbb
dec
js
add
ds
dec
and
jmp
notl
js
orb
dec
into
imul
fnsave
fwait
lods
sub
loopne
inc
add
inc
fwait
xor
pushf
test
scas
push
jecxz
shrl
mov
pop
mov
inc
xchg
mov
push
dec
rcll
negb
je
mov
lock
movsl
pop
add
jne
jmp
xchg
or
add
mov
ja
jnp
push
jae
pop
pop
inc
pop
int
ja
jnp
not
xor
cld
lret
add
mov
push
add
clc
fisubrl
mov
xchg
pop
into
movsb
shrb
push
icebp
sbb
jo
xchg
loopne
sahf
daa
sub
add
sub
in
mov
fidivrs
int3
outsb
sub
dec
mov
lods
pop
push
fcompl
pop
scas
outsb
scas
fimull
sahf
scas
dec
add
and
out
mov
shll
imul
lahf
loope
rclb
es
mov
ret
push
jg
xchg
mov
cs
addr16
push
dec
daa
inc
dec
jmp
dec
mov
mov
lcall
sub
xor
insl
pop
dec
sarb
lcall
mov
into
and
jmp
scas
data16
movsl
jbe
loopne
stc
je
dec
lods
aam
aaa
ret
adc
cmp
fists
loopne
mov
movsb
adc
fisttpl
out
sti
fdivl
jmp
push
cmp
cwtl
xchg
fwait
out
adc
imul
dec
or
imul
int3
lock
in
fucomip
imul
adc
add
add
rolb
aam
sbb
xchg
jne
fidivs
filds
lods
or
xchg
out
and
pop
jmp
out
mov
cmc
sbb
jg
pusha
pop
add
mov
pop
cs
or
cmp
rolb
jnp
push
orb
sub
sub
push
add
icebp
dec
sarb
sbb
or
xchg
popf
shlb
cmc
sbb
lods
nop
add
and
add
fcmovne
or
mov
int3
out
mov
push
sahf
fsubp
sub
mov
jbe
xor
hlt
int
mov
dec
fistpl
ss
jno
lock
adc
dec
sbb
jne
push
push
jns
cmp
iret
lea
sbb
mov
loop
jg
sub
push
sub
addb
jbe
xor
arpl
arpl
testb
scas
xor
lcall
and
mov
in
mov
cmpsl
fsubrl
mov
push
lock
jle
cltd
ret
mov
push
sub
xchg
popf
mov
stos
dec
fcomps
mov
push
fisubs
test
sbb
pop
dec
jecxz
loopne
out
xor
fistl
movsl
cmp
jle
icebp
xchg
arpl
dec
add
or
and
nopl
mov
mov
sti
jno
mov
adc
lcall
ja
sub
cmpsl
xchg
and
sar
mov
das
push
popa
push
scas
std
fildll
dec
jb
scas
xchg
movsl
fldl
cld
stos
jae
jne
aas
aam
mov
or
pop
data16
push
ret
or
lock
sub
cltd
ror
lcall
arpl
jp
lret
push
cs
inc
mov
jns
jp
mov
idivl
rolb
xchg
lret
sbb
mov
je
and
popl
dec
and
push
mov
pop
repnz
ss
movsb
lock
dec
fnstsw
movsb
pop
ja
cmp
cmc
cmc
fsubs
int3
cld
fnsave
sbb
cmp
lcall
int
pop
sahf
cmc
lahf
mov
das
cmpl
bswap
push
rcr
hlt
aad
shrb
addr16
jno
mov
sub
aad
push
pop
cmp
mov
popa
pushf
dec
or
lock
inc
icebp
enter
jno
test
shlb
xchg
dec
ljmp
sub
out
mov
dec
aam
adcl
push
add
add
sub
add
sbb
or
lahf
movb
scas
sbb
pop
insb
test
pop
lods
loopne
sbb
std
push
int
test
into
dec
pusha
testb
stos
adc
fs
and
fldt
das
pusha
cs
fwait
dec
xor
sbb
mov
pop
xor
cmp
xchg
int3
mov
adc
push
aam
sub
jle
pop
repz
stos
ret
mov
pop
mov
repz
aam
cld
sarl
stos
call
sbb
adc
pushf
int
pop
mov
xchg
aas
shrl
enter
cwtl
sarl
jl
jmp
cmc
fwait
jnp
pusha
push
and
lahf
sahf
or
pop
repz
pop
adc
jp
or
push
gs
push
orb
ds
xor
pop
adc
mov
mov
push
dec
adc
aam
adc
mov
pop
or
jbe
es
mov
mov
dec
inc
loop
fs
adc
push
outsb
xchg
push
adc
xorl
fstps
add
movsb
mov
pop
add
mov
xor
jl
or
cmpl
sub
add
push
notb
fwait
dec
add
das
test
addr16
pop
fdivl
enter
in
jg
sub
mov
mov
xchg
dec
and
cmp
nop
js
pop
movl
enter
lods
mov
out
cmpsl
leave
dec
jae
pop
enter
loop
push
push
inc
and
push
movsb
jmp
ja
jae
adc
sbb
inc
lret
jl
mov
jb
scas
out
out
pushf
sub
mov
mov
dec
bound
xchg
mov
and
dec
xor
or
stc
scas
cmc
push
jp
fwait
or
mov
sbbl
ret
cmp
or
ljmp
inc
dec
jg
lret
andb
jl
pop
sub
sahf
pop
add
mov
xor
cmp
adc
cmpsl
push
test
sbb
add
shll
into
andl
fldl2t
stos
mov
dec
cmp
cmp
out
lds
movb
mov
fcomps
cmpsl
inc
daa
sub
push
ja
pop
jbe
adc
loop
into
adc
pop
das
in
and
data16
shrl
orl
and
pop
scas
add
test
mov
push
les
or
imul
jne
in
loope
outsl
daa
insb
jne
in
lock
fwait
xchg
push
fucomi
push
jo
sbb
imul
cmp
leave
mov
test
out
jne
lret
or
lea
leave
dec
or
insl
xchg
shlb
out
movsl
test
test
or
push
pusha
in
mov
inc
adc
fcmove
int3
stc
add
adc
je
cs
cmc
adc
xor
test
cmpsl
dec
sub
movsb
lods
jnp
pop
mov
jnp
add
nop
sub
insb
stc
mov
inc
mov
imul
xchg
mov
adcb
popf
stc
test
scas
popf
cs
in
aas
ret
fdivs
shll
addr16
sarl
jge
dec
sbb
imul
fst
mov
popl
xchg
fwait
js
int
int
sub
add
insl
mov
adcb
data16
lret
stos
or
inc
inc
cmp
cltd
pop
or
cld
ret
outsl
sti
imul
aam
or
push
xchg
sbb
jb
mov
out
mov
push
idivl
mov
mov
xor
sub
movsl
sub
ss
shl
mov
fiaddl
insb
lods
sub
mov
mov
mov
dec
pop
mov
inc
jo
xor
sub
mov
sbb
mov
push
sub
adc
xor
lret
jne
insl
dec
cltd
je
adc
inc
pop
das
ficompl
test
mov
je
bound
inc
repz
jg
shlb
je
subb
jg
lods
add
adc
lcall
enter
inc
andl
inc
jp
or
and
xor
inc
mov
cmp
imul
mov
pusha
in
add
test
cwtl
movsl
rol
jno
push
mov
sub
loopne
mov
mov
jmp
shr
cmp
jne
and
pop
jge
bound
rcll
inc
push
push
stc
jmp
push
dec
iret
loop
lock
das
movsb
call
addl
popf
cmpsb
sbb
lds
scas
test
or
fs
xchg
jmp
popa
bound
jle
xor
divb
sbb
cmpsb
jmp
push
std
data16
popa
cmc
inc
push
or
icebp
mov
dec
push
jns
test
test
lcall
sti
lock
test
lds
mov
cmp
sub
adc
mov
xlat
leave
rorb
fistl
repnz
jp
shl
cmp
sub
rcrl
xchg
mov
jo
test
or
loopne
lds
mov
lret
add
enter
andb
pop
inc
out
loop
loopne
sarl
arpl
cmc
cmp
fdivl
sahf
hlt
pop
pop
pop
sub
in
add
out
xorb
repz
loop
mov
aad
sbb
mov
cmp
scas
push
push
and
adc
loop
out
sub
dec
or
addr16
fucom
ret
rorl
mov
loopne
int3
lret
xor
cli
fs
shlb
aas
sbb
loopne
inc
decl
mov
aas
push
sbb
mov
push
pop
cmp
adc
push
int
jecxz
aas
lret
fidivs
xor
dec
cmp
push
adc
pop
sbb
call
or
test
jle
call
lret
xor
pop
outsb
mov
mov
fldcw
dec
push
and
xor
jne
add
insl
xor
aaa
loopne
dec
mov
and
addb
stc
adc
and
pop
xchg
in
dec
dec
into
jecxz
fisttpll
fdivs
mov
lret
inc
or
lea
mov
test
mov
clc
popf
mov
lahf
mov
dec
repz
xorb
xor
xor
or
ret
popa
mov
xor
push
mov
cli
call
and
fwait
adc
xor
roll
cmc
or
mov
lret
and
sbb
jg
nop
pop
in
aad
sarl
mov
lods
or
dec
lds
shrb
push
addl
hlt
push
mov
roll
adc
pop
dec
mov
in
fwait
insl
jae
pop
call
mov
mov
jmp
aas
fdivrp
pop
fcomps
dec
addb
out
sub
lret
fdivrl
add
cmp
cmp
sbb
pop
fldcw
test
mov
dec
sub
aas
push
ds
lcall
cmp
outsl
mov
mov
sub
dec
and
stos
aaa
addr16
sbb
fidivrl
fwait
cmp
ret
in
mov
inc
sahf
jne
mov
fwait
into
call
cwtl
scas
sahf
lods
jmp
jne
adc
lcall
push
mov
es
flds
out
mov
add
add
adc
cltd
cwtl
dec
dec
push
insb
xor
dec
pop
push
cltd
pop
sub
and
cwtl
push
fidivrs
or
insb
imul
leave
mov
inc
shrb
mov
popa
mov
int3
fsubl
out
pop
shl
cmp
jmp
mov
pushf
inc
lods
adcb
roll
sarb
and
xor
insl
fmul
jmp
das
pop
insb
pop
sub
xchg
lret
ficomps
push
loop
add
mov
push
add
pop
in
shlb
pop
inc
or
mov
faddl
xor
push
ja
enter
push
ffree
or
outsl
push
into
aad
cmpsl
dec
add
idivl
repz
cmp
cmp
imul
aas
dec
dec
fdivrp
sti
inc
arpl
xchg
inc
xor
and
fnstcw
loope
imul
push
pop
cmpsb
js
inc
adc
mov
filds
cltd
inc
and
mov
pop
jnp
aas
xor
jns
sub
xor
jg
fwait
push
loope
out
push
repz
mov
sub
mov
movq
dec
xor
outsl
jnp
jge
mov
fwait
cmp
into
jo
subl
loop
and
stos
in
pushf
cmpsb
shrl
cmpsb
pop
dec
popa
xor
jb
xor
jl
xchg
dec
xchg
in
and
cli
lret
cltd
iret
sub
push
test
mov
mov
not
mov
jecxz
xchg
dec
cli
push
mov
xchg
jp
sub
scas
dec
ds
sbb
mov
and
lods
dec
lea
or
xchg
test
sub
data16
arpl
icebp
shlb
sbb
je
jmp
or
and
pop
clc
int
rcll
roll
xchg
xor
icebp
push
test
sbb
inc
xchg
cli
inc
inc
pushf
push
xor
iret
mov
mov
push
mov
int
cld
int
mov
clc
xor
movsl
pop
sub
mov
mov
cmp
je
pop
cld
cmp
pop
cs
sti
sub
mov
pop
xchg
scas
add
sub
sbb
aaa
int
ret
dec
idivb
mov
rcll
mov
je
mov
mov
push
inc
mov
insb
aam
add
cltd
movsb
gs
add
xor
lock
cs
push
adc
dec
cmc
in
shl
cmpsb
shlb
imul
add
fidivl
jp
mov
mov
mov
lcall
outsb
cmp
cld
push
or
mov
inc
xor
sbb
cmp
icebp
pusha
mov
push
ror
sub
xchg
mov
loope
xchg
or
pop
pop
fdivl
or
icebp
xchg
push
pushf
mov
arpl
inc
sub
fldl
sub
nop
push
adc
sbb
iret
or
sbb
dec
imul
sbb
cs
call
ja
shll
imul
jo
lock
mov
ficomps
cld
cmp
adc
pop
pmaxub
xchg
xor
cs
push
mov
adc
adc
adc
lahf
push
mov
enter
cmp
data16
insl
mov
inc
push
push
pushf
loop
ret
sub
aad
lea
cmpsl
imul
mov
add
aas
imul
mov
mov
fnstcw
cs
loopne
scas
mov
test
rolb
aas
dec
pop
faddl
mov
pop
mov
xchg
dec
std
push
das
xor
or
adc
inc
xchg
shll
out
insb
dec
add
in
sbbb
decl
and
jb
sbb
int3
lahf
arpl
frstor
stos
mov
push
push
cld
sbb
mov
loopne
jo
adc
lret
pop
dec
cld
ss
jo
jmp
ljmp
scas
inc
out
pop
or
xchg
xor
xchg
fstl
in
dec
in
int3
loopne
nop
cmpsb
test
jno
pminub
sub
jno
push
adc
mov
cwtl
and
loopne
mov
addl
inc
and
sbb
dec
lds
cli
inc
mov
lea
inc
adc
fstps
loopne
lcall
jns
movsb
mov
js
ret
lods
xchg
pusha
js
int
mov
jl
movsl
pop
shll
dec
aaa
add
testb
cmpsl
xchg
jmp
sbb
test
lret
sub
imul
pusha
jo
inc
xchg
outsb
dec
aas
xchg
test
ficoml
shr
loop
and
jno
out
pop
jae
mov
inc
sub
scas
pushf
sbb
ficoms
lret
xor
call
loop
lcall
nop
mov
mov
mov
mov
in
mov
push
pop
leave
dec
icebp
daa
std
shlb
push
lret
in
sbb
or
inc
pop
xor
enter
jb
mov
pop
add
and
int3
pop
cld
sub
stc
adcl
mov
jp
or
repz
cmp
and
push
test
push
dec
inc
push
std
pop
hlt
loop
mov
bound
out
mov
lcall
test
fistps
push
or
xchg
mov
rcrb
daa
mov
in
xor
mov
xchg
push
sub
test
push
dec
push
mov
or
dec
shll
mov
daa
and
rolb
xor
int
xor
pop
jae
sbb
pop
and
stos
push
dec
enter
cmp
imul
sub
push
adc
jl
push
stos
lahf
or
les
xchg
pop
movsl
jne
jo
sbb
mov
adc
push
mov
cltd
test
pop
and
jp
mov
dec
cmp
cmp
sub
mov
into
jp
std
xchg
sbbb
cli
lock
inc
lea
xchg
xor
jns
mov
xor
push
iret
mov
push
xchg
inc
mov
or
clc
inc
cmpsb
lds
xor
je
push
push
xchg
inc
pop
aad
ja
pandn
jp,pn
mov
jp
sti
mov
nop
cmp
and
push
sub
inc
aam
mov
arpl
outsl
in
popf
pushf
dec
es
dec
adc
and
hlt
enter
arpl
mov
pushf
lret
mov
int
xor
lahf
xor
loopne
lea
xchg
cwtl
dec
ljmp
dec
and
loopne
leave
mov
jmp
pop
mov
xchg
xor
mov
scas
out
mov
sbb
cmp
inc
xor
mov
daa
adc
sbb
sbb
xchg
mov
dec
ds
test
cltd
mov
sti
or
jge
arpl
subl
std
inc
xor
xchg
push
mov
mov
cs
aas
or
out
and
xchg
lods
or
xor
add
out
testb
sbb
lret
xchg
mov
adc
shll
ret
sti
stos
std
outsb
aam
mov
aam
and
int3
outsl
inc
into
lds
int
mov
dec
push
inc
push
or
xchg
pop
cmp
fadd
clc
mov
loope
mov
jb
orb
hlt
xor
cmp
cmp
mov
in
jns
dec
xchg
pop
cltd
adc
sub
es
xchg
xchg
inc
xor
roll
cmp
js
sub
addb
test
push
jne
jge
es
add
xchg
xchg
andb
sub
mov
fbld
dec
jmp
mov
lods
fisttpl
cmc
repz
ss
repnz
sti
jo
ja
shrl
adc
add
out
push
adc
mov
sbb
movsb
je
inc
cli
jmp
scas
scas
std
mov
sub
faddl
and
xor
and
outsb
sarl
cmp
mov
add
mov
loope
lods
mov
into
jp
fistl
and
lret
pushf
sub
sbb
repz
or
cmc
mov
inc
xlat
and
pop
sbb
push
mov
pop
sub
mov
jo
iret
push
sub
stos
xchg
and
add
push
cltd
mov
jp
inc
mov
push
in
mov
lods
repnz
shlb
pop
xchg
repnz
inc
cmp
xchg
es
lods
dec
sbb
sbb
mov
add
cmp
xlat
pop
pop
or
and
test
rolb
cmpsl
pop
jg
rclb
push
adc
ds
sbb
lcall
add
lods
and
sbb
dec
xor
std
cmp
cltd
mov
pop
jne
cmp
xor
clc
nop
cmp
fsubs
cltd
gs
cmp
shrl
mov
xor
and
mov
in
or
ljmp
mov
and
movzbl
pop
rcl
lock
mov
xchg
icebp
insb
cltd
je
inc
mov
or
ja
movl
sub
cltd
inc
cmpsb
xor
pop
in
dec
inc
pop
and
dec
sub
aad
cli
mov
dec
aam
aas
pop
adc
in
adc
jp
xchg
xchg
pop
ljmp
popa
and
cmpb
nop
adc
cltd
ficompl
in
daa
in
fidivs
fnstsw
lahf
jo
testl
xlat
pushf
fucom
aad
scas
push
push
push
imul
mov
and
test
add
push
push
mov
fs
aas
fstpt
ljmp
jg
addr16
or
cmp
arpl
fsubrl
inc
call
add
add
jae
mov
in
lods
scas
push
jmp
loopne
in
or
xchg
xchg
inc
orb
and
clc
cmpsb
push
mov
cltd
xchg
inc
or
js
ficoms
mov
xchg
sbb
stos
adc
sbb
xchg
loope
clc
sub
icebp
add
fcoms
imul
pushf
je
sbbl
aas
mov
xchg
xor
mov
lea
clc
fists
neg
mov
stos
pop
xlat
mov
mov
das
rclb
dec
roll
sbb
and
or
pusha
xchg
lcall
xchg
clc
jb
test
inc
hlt
or
ljmp
mov
and
clc
aaa
xor
sbb
shlb
sub
mov
stc
xchg
nop
les
xor
push
popf
adc
clc
lock
ficoms
inc
xchg
mov
addr16
dec
push
jnp
jb
inc
dec
inc
mov
loop
jo
aad
push
ja
and
and
cmp
sti
fisubs
loop
lahf
stc
sarb
sub
mov
and
xchg
sub
mull
out
repz
lret
adc
push
in
pop
xchg
hlt
jecxz
adc
cltd
xor
sub
xchg
shr
std
inc
js
sbb
mov
push
or
test
lret
icebp
shl
enter
jb
sub
xor
out
or
jae
or
xor
insl
bound
or
leave
inc
fcomps
cli
fimuls
ljmp
aaa
jecxz
cmp
lcall
bound
flds
cmp
stos
lods
push
fs
or
or
and
movsb
mov
push
push
mov
add
add
lods
bound
jg
lea
push
xlat
aaa
mov
xchg
inc
arpl
and
jb
sub
jnp
jnp
and
imul
adc
test
aaa
andb
push
movsb
addl
jecxz
mov
das
out
scas
enter
push
clc
mov
push
iret
xlat
insl
sub
mov
mov
sbb
out
out
jg
jp
inc
pop
jno
mov
pop
loope
popf
inc
int3
or
in
sub
mov
lea
rcl
ret
adc
cmpsb
xchg
jo
sbb
mov
shlb
sub
add
aas
cld
or
adc
add
daa
adc
mov
dec
pop
int3
mov
popf
jg
jae
fadd
xchg
sbb
mov
dec
adc
pop
sub
cmp
dec
mov
pop
iret
jno
dec
arpl
jae
loop
push
jecxz
andl
cmp
and
mov
aad
outsl
mov
pop
scas
outsb
test
sbb
lahf
push
mov
mov
nop
lcall
dec
inc
cmpsb
push
fcoms
or
push
and
adcl
fsubrp
cmp
mov
pushf
pop
int3
ss
mov
jnp
cmc
stos
cs
movsl
jmp
xchg
push
dec
sar
int3
push
and
mov
mov
inc
add
rep
push
daa
filds
adc
jo
loopne
cmpsl
push
pop
pop
mov
inc
mov
rorb
fiadds
stos
insb
ret
jb
push
mov
orl
out
xor
call
stos
movsb
pop
out
add
pop
cmp
cmc
xor
lea
lods
lret
sub
sub
xor
je
or
fnstcw
mulb
ds
enter
js
push
mov
bound
or
cld
dec
adc
cmp
dec
filds
lds
loop
jmp
or
mov
dec
fiaddl
pop
das
xchg
sub
mov
inc
insb
bound
pop
push
xor
popa
inc
and
cld
xchg
lods
mov
arpl
jns
cmp
icebp
testb
nop
dec
inc
mov
pop
sti
lahf
mov
mov
push
daa
mov
pushf
repz
and
dec
subb
mov
add
mov
std
stc
or
fmull
xchg
out
scas
mov
fsts
sub
je
or
add
inc
repz
clc
adc
sti
out
cltd
mov
sbb
shl
addl
push
cmp
push
nop
mov
cwtl
jmp
ja
ror
jg
jb
push
jge
xor
das
push
add
push
into
xchg
sub
xchg
jge
pusha
pop
test
nop
fucomip
sub
dec
dec
adc
aad
sbb
mov
popa
loop
cli
ljmp
test
and
mov
mov
rep
loopne
mov
add
out
call
scas
dec
push
pop
ljmp
jecxz
test
sbbl
je
dec
pop
test
pushf
cmpsb
je
push
bound
push
movsb
pop
mov
push
clc
icebp
fisttpll
stos
push
pop
push
ds
mov
xor
ficomps
cmpsl
sub
dec
mov
stos
xor
test
jae
lret
sub
pop
push
pop
xchg
dec
cmp
xor
out
in
cmp
pusha
xchg
push
xchg
xor
fldcw
add
in
aad
rclb
mov
addr16
rclb
cs
adc
mov
sbb
push
mov
shl
mov
aam
mov
fxch
and
out
pushf
and
shll
rolb
pop
outsl
fstpl
push
cmp
cmp
lret
inc
xchg
aaa
and
dec
shlb
push
jo
xchg
int
add
into
idivb
lahf
cltd
push
xor
pop
jns
mov
loopne
jg
sub
or
sub
and
sarl
fistl
sbb
mov
lock
adc
pop
push
fwait
aaa
pop
jmp
daa
sti
mov
cmpsb
add
out
xor
push
mov
inc
in
in
insl
push
shlb
mov
shll
loope
aaa
je
push
sub
cmp
in
jge
cmp
mov
insl
cli
loop
dec
mov
jae
mov
mull
outsl
inc
dec
pop
add
push
shll
pop
cs
mov
sbb
in
cmp
je
outsb
mov
iret
or
adc
cmp
imul
push
lock
shlb
rep
mov
xor
clc
xchg
or
push
push
nop
scas
pop
mov
aaa
cwtl
push
out
cmpsl
mov
in
sarl
dec
int
xchg
and
test
dec
inc
dec
fcmovb
stos
rcrl
popa
and
icebp
aad
fdivrl
jle
pop
ds
test
jle
jl
inc
stc
fsubl
inc
xor
add
pop
lcall
mov
xchg
ja
and
cmp
cmpsb
cmpsb
xlat
jl
sub
aas
push
in
adcl
leave
gs
lock
repnz
jmp
jne
mov
lock
cmc
lret
outsl
jl
cli
leave
xor
and
fildll
xor
stos
sarb
xor
stos
in
shlb
xchg
stos
push
ret
gs
sub
jle
xor
repnz
cmc
pop
loopne
inc
dec
lret
push
std
cld
jb
int
test
pop
lcall
xchg
dec
adc
mov
scas
sti
dec
aam
add
xlat
repz
pop
sub
jb
push
js
int
cwtl
ss
mov
xor
loop
or
jno
cmpsl
mov
add
dec
push
stos
or
andb
dec
ss
jge
pop
fs
lea
xchg
adc
and
xor
enter
mov
out
jbe
movups
rcr
or
out
xchg
and
fidivrl
test
xorl
and
stos
jmp
pop
pop
xor
cld
lret
cmpsb
cltd
sub
ja
jle
sub
xorl
jns
outsl
ds
test
sbb
push
lea
push
pusha
xchg
and
adc
test
test
jae
clc
pusha
xchg
sbb
cmp
arpl
dec
stc
sar
or
iret
leave
data16
ss
pushf
xor
popa
mov
sarb
shl
dec
mov
pusha
and
repnz
loopne
pop
adc
jns
in
jno
outsb
gs
stos
movsl
xchg
popa
xchg
das
mov
out
xchg
or
mov
test
push
dec
cmc
popf
sti
idivl
subb
cmp
mov
test
leave
lahf
push
add
push
divl
arpl
mov
mov
add
inc
mov
xchg
jmp
mov
add
inc
dec
shl
gs
push
add
pop
and
jg
mov
add
cmpsb
pop
mov
sbb
das
in
xor
sbb
sbb
fxch
out
loopne
cmc
xchg
ljmp
fisttpl
arpl
jb
imul
xchg
jecxz
mov
in
mov
push
lock
and
add
es
inc
and
mov
pop
pop
pop
push
js
jmp
inc
mov
and
ficoms
push
scas
leave
lret
xlat
sti
mov
mov
mov
jae
nop
imul
xor
aas
sbb
insl
addb
or
sbb
add
mov
sbb
fstps
or
mov
aas
leave
into
mov
jae
dec
xorl
cmpsl
inc
into
mov
push
aas
cltd
push
insl
mov
lods
mov
cld
data16
push
pop
cli
in
je
jge
pop
pop
repnz
stc
or
sarb
test
lret
mov
sub
dec
imul
cmpsl
call
adc
dec
mov
mov
cmp
jl
mov
nop
push
push
mov
jp
and
xor
outsl
dec
lahf
out
mov
subl
jae
jne
fisubl
mov
sub
popf
loop
outsb
xor
mov
xor
ficoml
inc
jns
std
adcl
jbe
sbb
cmp
push
repnz
enter
or
scas
mov
mulb
sbbl
inc
shll
imul
xor
cmp
cmp
push
inc
adc
ds
pop
cs
aas
popa
fucomip
xor
mov
in
scas
and
out
pop
mov
fdiv
push
ds
out
push
cmp
in
xchg
out
stc
mov
and
shrl
pusha
jno
pushf
jns
dec
xor
rorb
adc
lds
sub
xchg
sarl
aaa
iret
add
and
mov
leave
xlat
inc
jns
xchg
jge
xchg
or
ja
fmull
add
cmp
sub
and
pop
mov
and
mov
fwait
ret
xchg
das
adc
shll
in
fwait
lcall
sti
dec
sbb
mov
jge
fcompl
mov
rcrl
xchg
cwtl
subb
sti
xchg
pop
inc
jmp
movsb
pop
and
sbb
lods
movsb
mov
mov
outsl
nop
jl
incl
fbld
inc
ljmp
popl
jp
jp
cld
or
call
adc
in
mov
nop
mov
and
or
nop
push
lods
les
out
push
fadd
add
push
lds
ja
lea
fcoms
mov
test
fistpll
jmp
push
fwait
cmpsb
inc
push
sub
repz
mov
ljmp
add
loop
sbbl
movsb
lds
ret
xor
sarl
pop
lret
cmp
pop
mov
sti
cmc
fcoms
cmp
dec
je
cmp
cltd
xlat
arpl
addr16
adc
movsb
xor
adc
aad
lcall
enter
rol
cwtl
ret
push
fucom
and
cmp
jecxz
lcall
push
pop
sahf
mov
or
and
mov
mov
aad
pavgw
mov
mov
lock
inc
xor
dec
jl
lahf
mov
out
push
and
jp
xchg
stc
stos
fmul
lret
mov
dec
pop
push
ret
xor
xor
inc
pusha
push
jb
ljmp
icebp
xchg
xchg
dec
dec
mov
rorb
dec
hlt
mov
mov
daa
push
jle
in
test
jle
jg
stos
jnp
mov
adcl
mov
aam
xchg
lds
push
and
mov
pop
add
aas
cli
pop
xchg
mov
movsl
xchg
stos
adc
jb
enter
int
xchg
cmp
ds
xchg
lods
loop
xor
stos
stc
out
or
out
pop
cmpsb
jae
jl
fnsave
jns
mov
pop
aas
out
inc
outsl
or
cmp
daa
lods
gs
sbb
popa
lock
push
pop
mov
jbe
cmp
xor
pop
or
mov
add
fisubrl
sub
rorb
xchg
push
push
into
or
mov
cmp
pop
rorl
xchg
and
xchg
inc
xchg
movsb
cmpsl
inc
in
divl
in
jne
inc
iret
mov
jne
and
iret
ret
xchg
push
test
in
jp
mov
adc
pop
loopne
adc
inc
cld
mov
out
pop
lock
sbb
xor
mov
push
dec
fnstenv
movsl
xchg
out
and
loop
loopne
in
pop
mov
mov
loop
pop
les
popf
dec
fdivl
fcoml
and
testl
in
pop
or
push
jnp
imul
sbb
rclb
and
dec
loop
xchg
or
lock
add
out
xorl
adc
dec
sbb
mov
push
out
inc
pop
or
loop
mov
shll
cmpsl
xchg
push
xchg
js
test
ret
filds
xchg
and
leave
xor
icebp
jle
into
cmp
bound
leave
clc
mov
adc
sbbb
push
rol
mov
roll
into
mov
fnstsw
pop
push
jo
imul
mov
dec
xacquire
adc
mov
mov
and
mov
xchg
rorl
aas
adc
sbb
adc
outsb
popa
mov
out
push
jle
iret
or
js
and
mov
sub
in
mov
and
xchg
xor
sub
aaa
loop
mov
jle
mov
fimuls
xchg
cltd
dec
inc
and
inc
jo
mov
mov
imul
lock
xchg
ficoms
push
fcoms
pop
rorb
mov
clc
jnp
into
sub
loopne
test
mov
int
mov
adc
lock
pop
and
adc
jge
sub
aam
cmp
incb
sub
adc
mov
ss
popa
imul
fwait
mov
imulb
jbe
ror
jb
decl
cmp
stc
mov
orl
adc
xchg
add
jle
push
xor
cld
lahf
mov
inc
xchg
add
fbstp
movsl
jg
pop
mov
aas
mov
cmc
incb
sbb
or
jne
enter
dec
mov
pop
mov
sbb
fwait
nop
or
adc
cld
fdivrl
imul
inc
and
jno
jl
sar
add
pop
int3
push
mov
jp
lock
mov
faddl
mov
jb
jle
xlat
clc
mov
and
popa
pop
imul
sbb
mov
aas
dec
jne
enter
daa
add
gs
push
insb
ss
pop
iret
jge
iret
lds
cs
or
pop
shll
jmp
lret
adc
inc
mov
mov
ds
inc
or
xchg
mov
mov
xor
pop
xchg
mov
jne
jmp
push
bound
imul
mov
jnp
fisttpll
repnz
ffreep
mov
fbstp
jecxz
jns
imul
push
popa
sarl
hlt
mov
adc
addr16
test
sbb
mov
shrl
mov
add
sub
in
je
push
and
and
scas
inc
pop
adc
shl
or
push
sbb
mov
xor
jae
pop
clc
inc
in
pop
sahf
xor
push
push
inc
sbb
xchg
adc
out
mov
int3
and
push
ret
mov
data16
jnp
fidivrs
xchg
fiadds
mov
ror
pusha
or
data16
pop
les
je
dec
pop
jp
gs
xor
bound
subl
jmp
dec
cld
out
xchg
movb
cmp
lahf
mov
jb
add
pop
sub
xlat
scas
sbb
mov
shrl
sub
adc
mov
js
shl
repz
pusha
ss
add
lret
push
dec
orb
mov
pop
xorb
pop
imul
jl
cli
add
jecxz
xchg
cmp
lahf
pop
repz
mov
outsl
incb
push
jmp
ljmp
pop
test
inc
int3
add
sub
popf
sub
pop
in
push
jno
pop
mov
mov
fildl
js
test
addr16
sub
or
int3
in
push
lods
cmp
inc
mov
inc
std
int
sub
push
and
and
bound
sbb
sar
stc
xchg
sarb
inc
call
call
xchg
stos
sub
push
pushf
mov
or
mov
jae
in
mov
or
push
sub
jp
xor
leave
stos
sub
scas
dec
insl
aam
jae
call
cmp
arpl
sub
sbb
sub
popf
inc
mov
stos
lret
mov
ftst
mov
js
jmp
lds
and
mov
clc
jmp
mov
add
sbb
push
jecxz
into
lret
mov
daa
cmp
mov
sbb
sub
mov
push
packsswb
mov
jecxz
xchg
or
mov
hlt
iret
out
fldl
mov
mov
bound
imul
pop
loopne
xchg
call
cwtl
xchg
adc
sub
mov
adc
outsb
iret
and
jle
and
repnz
ljmp
fucom
lret
inc
divb
xor
lods
aaa
test
data16
pushw
sbb
push
or
or
in
enter
stos
pushf
fcmovnb
push
sub
cld
xchg
mov
cld
mov
insl
mov
je
movsl
add
scas
adc
jp
cs
mov
mov
dec
lods
add
popa
pop
xor
jbe
movsl
aad
xchg
mov
es
add
aaa
bound
push
xchg
lret
cmp
jno
jae,pn
shrb
outsb
xchg
mov
jge
lahf
sub
jp
test
insl
xchg
push
lcall
xchg
inc
int
sub
lea
insb
test
in
mov
xor
push
sbb
dec
dec
pushf
inc
lock
push
sbb
inc
sub
jge
out
mov
cmpsb
pop
into
frstor
add
sub
shll
rorl
mov
iret
nop
jmp
leave
iret
xchg
cli
push
mov
xor
and
mov
loop
fstp
rclb
rcrl
ja
imul
cmp
or
mov
pusha
in
jecxz
data16
jl
jg
xor
and
std
lret
ret
bound
push
stos
out
popf
insb
push
mov
andl
jecxz
mov
dec
mov
sub
repnz
iret
jp
aad
call
mov
sbb
std
shll
data16
push
push
sub
mov
shlb
movsl
mov
test
sahf
push
js
push
sub
mov
mov
ret
cli
out
adc
jge
xchg
popf
cmovbe
dec
jg
lret
loope
test
xchg
pop
xor
sbb
mov
cmp
mov
scas
jbe
cmpsb
mov
cmpsl
mov
pop
xor
inc
repnz
fdivrs
into
icebp
pop
sbb
orb
fcmove
cli
mov
push
add
cwtl
mov
outsl
fmul
jl
cld
mov
jno
sti
xchg
arpl
cmpsl
movsl
adc
mov
mov
jge
xor
mov
mov
scas
jmp
iret
flds
cli
fcoms
lods
adc
xchg
dec
sub
or
mov
adc
sbb
aad
sbb
push
incb
dec
in
aam
js
push
js
mov
xor
inc
mov
mov
pop
and
push
push
sub
inc
push
or
movsb
dec
sbb
add
insl
and
ror
add
inc
or
push
int3
ret
pushf
mov
inc
imul
daa
mov
xor
subl
out
repz
push
sbb
in
cmpsb
add
fadd
jmp
divb
lahf
jb
xor
jle
jl
adc
insb
stos
pop
xchg
xor
int
cs
sbb
out
pop
addr16
fistps
dec
dec
lock
test
inc
inc
mov
xchg
fnstcw
or
daa
movsb
xchg
pushl
sbb
data16
or
inc
popf
mov
repz
shlb
cmp
test
ficoml
out
jge
sahf
mov
mov
shll
push
or
std
nop
or
mov
push
rclb
mov
push
js
data16
pop
and
jl
imull
addr16
mov
or
pushf
add
push
add
or
popa
sub
ss
cmp
jl
in
cltd
dec
cli
push
inc
push
leave
das
cwtl
mov
adc
sbb
cmp
push
dec
shr
pop
push
pushf
test
imul
repnz
xchg
dec
inc
jmp
test
pop
sub
pop
and
or
xchg
jecxz
xchg
movq
jmp
jns
push
movsl
pop
xor
mov
aam
mov
sbb
xchg
cmpsl
jmp
adc
je
out
in
pop
pop
push
mov
jb
in
xchg
pop
lock
jb
in
adc
mov
idivb
sbb
fcomps
pop
ret
and
das
iret
dec
test
iret
pop
popa
sub
mov
imul
dec
lahf
jle
cmp
mov
repnz
out
pop
rcll
fdivrs
aad
insb
repnz
mov
daa
and
data16
lock
pop
out
pop
fisttpl
add
pushf
xchg
test
repz
mov
sbb
aam
ja,pt
mov
leave
pop
call
mov
mov
lcall
loop
or
and
or
mov
jns
shlb
mov
gs
jb
les
gs
inc
ljmp
sub
fs
adc
mov
aad
ret
push
adc
out
pop
roll
aam
mov
ror
dec
int
addr16
pop
or
adc
xchg
leave
mov
push
std
std
pop
xchg
mov
sub
insl
jo
fs
ss
mov
fs
dec
sub
sbb
std
pop
pop
mov
push
dec
ja
int3
mov
stos
outsl
jb
mov
and
in
mov
mov
add
or
sbb
in
ljmp
inc
and
sub
inc
cvttps2pi
fcmovnbe
pop
pop
pop
fucomip
in
cwtl
push
in
inc
idivl
rclb
xchg
xchg
mov
xchg
filds
fldcw
stc
push
sbb
cmc
jge
pop
dec
push
cs
and
cmp
xlat
dec
in
sahf
popf
sub
data16
cltd
push
daa
adc
enter
mov
or
and
and
fnstcw
lock
pop
dec
out
mov
into
xor
push
ljmp
ja
rcrb
cmc
mov
mov
hlt
ret
cs
aas
test
add
or
push
repnz
mov
lcall
lods
push
loop
mov
adc
lock
out
addr16
and
clc
call
mov
or
stc
xchg
and
repz
pop
cmp
jl
fists
lahf
movsl
lods
test
in
shll
in
cltd
push
fsubl
les
adc
int3
cmpsb
inc
push
outsb
sub
push
ja
jle
sbb
pop
test
push
lods
shlb
or
adc
imul
dec
pop
mov
xchg
pop
lods
jg
push
adc
lcall
rolb
pop
ja
mov
adc
dec
loope
jle
push
jb
push
cmp
stos
aaa
ret
add
jo
sahf
es
inc
insl
and
xor
jg
push
and
outsb
pop
inc
push
jae
lods
mov
lods
call
sbb
std
jp
fadd
lret
cwtl
inc
lods
cmpl
pushf
sbb
cmp
push
loop
jp
dec
jno
shlb
das
lret
mov
jns
cmpsl
iret
in
popf
shlb
pop
dec
icebp
pop
cmp
mov
jl
sbb
sar
lret
jne
lret
or
push
mov
jecxz
inc
add
pop
jns
insl
fldt
xchg
jecxz
bound
std
pushf
shr
inc
inc
fcmovu
dec
sub
scas
dec
icebp
insl
data16
xor
mov
add
call
dec
adc
xchg
das
ljmp
xchg
std
jbe
lret
mov
mov
enter
ds
std
cltd
inc
adc
sub
mov
in
frndint
or
mov
or
or
bound
pop
test
mov
and
dec
mov
stos
je
gs
cmpsl
iret
sahf
mov
jae
mov
and
sbb
cmp
jbe
sbb
sbbb
dec
scas
flds
popa
fistpl
push
push
push
stc
lret
ds
xor
hlt
mov
or
xchg
lods
mov
cmp
repnz
pushw
inc
stc
push
mov
jge
pusha
adc
jl
add
push
push
jl
das
inc
imul
mov
repz
fsubr
xlat
pop
push
fsubl
cmp
repz
out
xor
dec
fsubrl
adc
popa
mov
movsl
jb
mov
lods
jmp
icebp
pusha
popf
inc
nop
pop
jo
sbb
xchg
push
xchg
scas
mov
out
mov
das
aad
push
clc
lods
inc
jno
mov
sbb
mov
adc
mov
lret
xchg
sti
pop
pop
scas
pop
fsubrl
mov
in
jl
or
mov
aad
fsubrl
out
inc
add
call
gs
rorl
movsl
lds
push
scas
shlb
les
inc
aaa
mov
orb
stos
ret
and
mov
mov
sti
out
je
in
pop
push
push
scas
fsubs
cli
repnz
paddusw
or
lods
sbb
mov
sbb
popf
cmpb
stos
xchg
push
push
nop
lea
sbb
in
and
mov
dec
into
inc
push
ret
insb
cmp
adc
xor
repz
mov
mov
aas
or
jns
xchg
mov
stos
adc
test
push
mov
and
ficoms
repz
std
xor
cli
pop
imul
das
jae
aam
or
mov
mov
ficomps
sti
pushl
jge
mov
xchg
mov
mov
add
add
jl
sti
pop
mov
or
iret
lsl
mov
jbe
fisttps
cwtl
mov
in
cmp
mov
mov
push
mov
jg
shll
std
into
ret
cmp
ljmp
test
push
push
stos
and
mov
lcall
sub
shlb
add
sub
sub
out
hlt
imul
popf
testb
sbb
xchg
cmc
pop
hlt
aad
mov
icebp
lahf
test
popl
sti
push
scas
dec
push
decl
mov
scas
or
push
pop
ljmp
mov
jae
scas
jae
sub
lods
push
jbe
loopne
jg
or
sbb
mov
pop
sbb
mov
dec
push
rorl
je
push
push
cmp
imul
shlb
pop
pop
sbbb
pop
addr16
pushf
xor
fcompl
xchg
es
fwait
and
push
xchg
inc
aam
frstor
jne
jmp
mov
mov
and
pop
test
push
jle
mov
mov
addl
in
xchg
leave
int3
jae
loop
hlt
lcall
sub
cmpxchg8b
xor
mov
stos
pop
add
cs
mov
push
push
xor
es
xchg
loope
js
stos
std
mov
adc
sbb
add
ret
outsl
int
or
inc
push
stc
loopne
cmp
adc
in
cmpsb
call
mov
and
enter
and
pop
aad
xchg
imul
push
enter
lret
add
ret
dec
int
xlat
movaps
sbb
movsl
enter
or
scas
add
mov
mov
lret
inc
mov
enter
push
and
mov
jne
push
sub
popf
pushf
mov
jg
movsl
adc
faddp
xor
xlat
pop
adc
xchg
shrl
addr16
mov
push
or
ret
jae
psrld
int
imul
push
mov
ret
pop
and
inc
jno
xorb
push
stc
cld
pusha
adc
stos
movsb
pop
inc
jb
iret
in
pop
popf
es
out
cs
or
loope
pop
test
inc
pop
sbb
mov
stc
push
jp
dec
cmp
sub
pop
dec
add
xchg
pop
fildll
cmc
nop
inc
mov
xor
sahf
stc
push
push
push
cli
xor
fimuls
iret
and
xchg
xlat
pop
cli
push
and
lret
add
mov
ljmp
xor
lcall
rcrb
inc
sbb
lahf
mov
in
aam
push
lods
scas
or
jg
mov
jge
ljmp
inc
outsb
lods
sub
or
xchg
stos
dec
mov
aas
lods
mov
hlt
shl
sbb
fwait
lcall
push
dec
mov
in
and
cmpl
int3
lahf
mov
dec
sub
xchg
div
xor
repnz
shll
mov
out
jg
jg
mov
cmpsb
dec
xor
or
arpl
in
sbb
pusha
add
mov
dec
out
jbe
pop
jg
popl
push
mov
aad
sbb
cmp
andb
and
xchg
jge
cmc
jmp
scas
xor
push
lods
inc
jbe
dec
dec
movsl
and
popf
pusha
insb
mov
dec
cmp
out
sbb
jg
movsb
adc
add
add
inc
test
add
bound
daa
int
fstpl
xor
fnstsw
loopne
mov
daa
negl
cmp
pop
ret
add
roll
xlat
test
or
cmc
lret
pop
sbb
in
inc
push
or
jbe
or
insb
sbbb
cs
xchg
mov
jmp
xchg
pop
nop
shlb
call
cmp
mov
les
jae
faddl
ljmp
and
xchg
mov
movsb
movd
xorl
pop
push
lcall
xor
mov
jns
ret
jg
sub
xchg
scas
lods
jge
fstps
fists
sbb
and
fs
ret
scas
cmp
pop
adc
pop
mov
cmp
mov
mov
insb
xadd
jne
rcrl
pop
mov
shlb
push
scas
mov
gs
lret
repz
loopne
pop
outsl
cmp
jae
int3
xchg
nop
jae
dec
jae
sbb
je
sub
jo
pop
shlb
movsb
in
ret
xchg
fists
push
pop
and
pop
and
jae
pop
sahf
jg
in
scas
and
mov
rcl
std
insl
fdivrl
in
or
fwait
push
push
les
jle
pop
mov
jns
mov
adc
out
data16
jns
daa
sarb
xor
mov
jo
push
cmp
call
loope
jecxz
stos
adc
sub
sub
inc
andl
dec
pop
mov
adc
rorl
adc
cli
lea
pop
push
dec
cmpsl
aaa
movsb
jb
in
repnz
repz
xchg
addr16
movsl
pop
add
aas
cmp
jae
in
adc
cmpsl
imul
add
stos
imul
xchg
test
movups
js
fistpll
or
je
iret
xchg
rol
idivl
pushf
dec
std
jmp
js
adc
adc
cmp
cli
and
or
or
es
aas
mov
xor
push
rcrl
dec
popa
xor
xchg
adc
cmpsb
loopne
mov
sbb
jl
pop
pop
dec
lea
imul
push
mov
pop
inc
push
rcll
test
int
loop
push
sahf
outsb
jle
xor
cmc
enter
arpl
aad
ss
xor
or
jmp
mov
sub
sub
jl
stc
push
inc
xchg
in
andb
pop
jge
lcall
ret
push
ja
jbe
idivb
push
jns
inc
cmpsb
push
inc
pop
xchg
fidivrs
dec
push
cmp
pop
nop
dec
and
xor
in
sub
and
pusha
jne
mov
jp
jmp
pcmpeqw
push
mov
ret
nop
test
je
sbb
outsb
sub
adc
out
adc
sbb
adc
or
jecxz
sub
xchg
add
xchg
or
hlt
push
iret
jb
pop
or
mov
adc
push
mov
sub
sbb
mov
mov
ljmp
push
into
mov
sarl
and
rolb
xchg
mov
mov
xor
adc
ret
mov
add
pop
xchg
lock
jl
jne
add
jae
inc
cmp
pop
xchg
stc
xor
push
scas
dec
cmp
nop
mov
and
sti
pusha
cmp
lods
cltd
dec
push
lods
out
inc
xlat
or
mov
repz
adc
mov
mov
push
ret
inc
lea
dec
fsubs
sbb
sbb
mov
lods
xlat
cmp
cmc
push
xor
dec
insl
inc
cli
jae
inc
jl
fistl
cmp
dec
iret
popa
push
sbb
addb
jae
mov
sbb
fdiv
inc
out
sar
cwtl
xchg
add
pop
mov
sub
mov
push
push
repz
or
inc
aam
mov
push
xor
jg
stos
in
lret
pop
lcall
test
jno
adc
mulb
jg
pop
and
pushf
scas
lea
lahf
lahf
incl
xchg
and
imul
inc
xchg
jae
push
pop
movsb
jl
cltd
stc
js
enter
mov
add
testb
xor
adc
in
ret
mov
or
adcl
mov
arpl
inc
and
cmp
test
push
xchg
adc
xor
xchg
test
test
mov
lahf
repz
sbb
jge
and
pop
lret
imul
xorl
cmpsb
inc
lret
les
mov
ret
cmp
push
pusha
jp
mov
in
scas
ret
xor
mov
mov
dec
daa
fcmovnbe
stos
into
jno
adc
ss
ds
mov
popa
rorb
je
test
inc
dec
insb
inc
or
sub
push
xchg
jne
mov
mov
es
fistpll
mov
and
mov
xor
arpl
insb
fmulp
xor
mov
lock
sarb
xor
jle
popa
lea
cwtl
shrb
or
out
sbb
imul
arpl
outsl
insb
js
mov
push
scas
sbb
or
xchg
cmpsl
insl
jmp
int
mov
adc
shrb
popf
frstor
cmc
hlt
add
mov
sub
leave
int3
testb
jle
leave
mov
stc
xchg
adc
push
fadd
lods
add
rolb
pusha
mov
mov
fwait
pop
or
adc
adc
xchg
lcall
mov
aas
add
xchg
inc
ja
or
gs
adc
xor
dec
lods
xchg
mov
jg
ficoms
mov
pop
popf
fisttpl
fldcw
lcall
movd
jecxz
jne
in
sbb
pop
aam
adcl
mov
mov
ret
or
or
sub
add
into
push
push
test
xor
rol
shll
dec
push
inc
fs
jl
pop
pop
xlat
push
jbe
pop
lcall
sbb
xor
lret
pop
jbe
mov
dec
movsb
mov
or
mov
pop
jnp
add
movsl
inc
sbb
pop
adc
ficompl
adc
sbb
mov
sbb
mov
addl
jge
repz
jl
icebp
std
movsb
add
shlb
and
jge
sub
add
ret
lea
dec
and
sub
into
sahf
fcompl
insl
push
add
add
cmp
xchg
mov
lcall
jmp
sub
aaa
lods
sub
mov
std
gs
sub
arpl
mov
and
iret
jmp
imul
outsl
jne
pop
sub
out
xchg
enter
fwait
push
test
in
xchg
test
int3
mov
pusha
adc
pushf
or
fprem1
mov
pop
negb
jns
mov
cmc
mov
xor
jg
xor
leave
inc
aam
imul
insl
or
inc
stos
or
scas
or
xchg
xor
imul
xor
sahf
push
inc
arpl
cmp
jnp
ja
add
mov
pop
jmp
es
mov
cld
cmp
cltd
sbb
ss
sbb
fldenv
test
out
inc
cmpsb
jbe
cmp
jp
inc
adc
add
cmpsb
pop
jecxz
nop
push
int3
arpl
jns
fists
push
in
push
push
inc
sub
adc
test
mov
sbb
push
iret
aaa
xor
xor
sarl
cmpsb
int
js
sub
mov
push
lret
sbb
lods
xor
gs
jmp
jbe
rclb
daa
cmp
jg
addr16
jnp
je
sbbb
lret
sbb
loop
ljmp
xchg
push
rorb
pop
xchg
lret
fildll
pop
or
incb
xchg
mov
push
and
xrelease
sbb
pusha
lods
in
lret
imul
or
jge
repz
push
push
or
popf
mov
cwtl
mov
add
mov
cltd
push
dec
shl
sbb
lahf
mov
ret
punpcklwd
xor
mov
subl
addl
rorb
xor
movsb
and
insb
mov
mov
js
inc
cltd
pop
pop
je
icebp
push
icebp
mov
lods
cmp
sbb
in
mov
cltd
lahf
stos
shrb
cmp
mov
popl
mov
push
lock
iret
sub
push
jnp
dec
loop
repnz
outsl
dec
insb
sbb
stos
xchg
fistl
mov
xor
push
xor
mov
sahf
movsb
pop
pop
or
loop
repz
sub
lret
mov
dec
sahf
lret
inc
jecxz
xor
mov
es
cltd
test
aaa
daa
lods
popa
push
jg
xchg
pusha
jno
popa
push
int
mov
call
dec
pop
push
or
add
and
sub
js
adc
mov
addb
push
jmp
and
dec
bound
xchg
je
and
sahf
jbe
and
shrb
mulb
rcrl
sub
insl
jns
mov
jbe
and
faddp
mov
cmp
xor
pop
push
es
test
rcr
mov
mov
xor
lcall
or
xor
jp
jge
mov
cmpsb
jg
stc
jno
jae
pop
jg
lock
add
pop
in
and
rolb
arpl
lahf
ret
mov
and
adc
loopne
mov
mov
sbb
xchg
mov
dec
lods
mov
cmc
pop
call
shrb
and
adc
dec
out
mov
mov
push
dec
push
inc
ret
and
sahf
jnp
mov
in
cmp
out
push
cld
fiadds
jb
xor
sub
aam
sar
mov
subl
pop
mov
out
cmp
insl
lods
cmp
es
inc
into
jmp
jb
lahf
scas
or
dec
insl
ja
inc
outsb
sub
ljmp
jmp
mov
dec
push
cwtl
dec
pop
imul
es
add
imul
xor
jae
lock
inc
jne
mov
lds
xchg
xor
adc
int3
mov
jne
movsl
or
jp
iret
test
jmp
push
fiadds
push
cmp
rcrl
adc
adc
test
jo
or
push
aaa
pop
cmpsb
lsl
cmp
lods
add
cwtl
pop
pop
push
dec
inc
mov
xor
cmp
mov
cmp
sub
sahf
inc
scas
out
inc
outsb
ja
adc
aaa
mov
adc
add
test
cltd
in
jp
fisubrl
shl
mov
leave
lods
cld
les
mov
movsl
je
cs
cmpsb
lods
orb
push
bound
insl
sbb
jnp
jmp
fdivrl
pop
fstpl
in
cwtl
sub
mov
jle
mov
nop
jb
or
shll
mov
push
cli
lret
sbb
jle
pop
loop
cmp
push
adc
lcall
push
cmpsl
xcrypt-ofb
cmpsl
sub
push
sahf
mov
lods
cmpsb
push
fimuls
sbb
jnp
push
fcmove
popa
lret
sub
repz
adc
mov
fnstcw
shll
icebp
push
scas
pop
stos
xchg
aam
scas
popa
push
mov
push
iret
rcr
das
cmp
fs
repz
cmp
jge
jge
xchg
insl
loopne
and
pop
outsl
cmc
cmovns
fsubs
lcall
out
out
ret
je
push
hlt
mov
cli
nop
push
stos
mov
pop
sbb
add
nop
test
andb
sahf
rcr
repnz
adc
add
test
fnstcw
or
addr16
push
daa
jb
push
mov
aam
sbb
popl
mov
pop
div
pop
pop
cmpsl
ss
ret
and
lret
jmp
nop
jl
ret
push
sahf
push
lock
movsb
jg
mov
insb
xchg
pop
mov
mov
iret
aad
add
adc
xchg
jl
pop
push
xor
or
icebp
or
mov
leave
lock
gs
dec
outsb
sbb
test
pop
mov
imul
jnp
aaa
jl
xchg
in
sbb
adc
mov
cs
xlat
push
dec
cmpsl
mov
into
jle
xchg
dec
xchg
mov
sahf
lea
xchg
es
xchg
mov
jge
push
mov
outsb
loopne
pop
cwtl
cld
stos
lahf
mov
imul
add
xchg
lea
fs
add
mov
loop
mov
jae
std
or
dec
and
jle
lcall
add
jp
out
roll
add
insb
jns
push
pop
mov
and
lock
adc
lahf
ss
or
int3
loopne
sub
xor
stc
aaa
imul
into
bnd
lods
out
mov
xlat
mov
lcall
mov
pop
and
fisubs
mov
mov
jnp
sti
inc
adcl
adc
movsl
push
stos
lcall
xorl
fimull
lds
mov
fistps
dec
add
inc
xchg
mov
add
into
repnz
and
notl
mov
in
add
cs
aas
popf
idivl
fbld
and
fsubrl
clc
jno
or
bnd
lahf
pop
xchg
jns
sbb
lret
mov
in
adc
int
addr16
rol
pop
add
ror
sub
push
filds
mov
dec
dec
mov
or
xor
shrb
and
mov
movsb
sahf
mov
sbbb
jo
mov
cmpsb
lcall
lods
enter
push
decb
push
les
cld
or
jmp
inc
sbb
roll
inc
iret
and
fsubl
xor
jae
cltd
in
std
es
aad
aad
stos
jns
xor
and
push
enter
lods
lahf
fistpll
mov
pop
mov
and
mov
jns
cli
jbe
ja
inc
loopne
push
enter
xor
jmp
pushf
test
add
cmp
call
or
popf
xchg
jg
push
xchg
mov
setnp
dec
cmp
addr16
mov
stos
in
add
lea
dec
aam
aam
fs
pop
aaa
xchg
push
inc
loope
pop
loopne
mov
das
mov
aas
add
lcall
mov
nop
sti
rorb
das
xlat
xor
leave
mov
lcall
xor
cltd
jg
test
fsubl
dec
xchg
enter
mov
add
xchg
sub
dec
imul
bnd
push
repnz
dec
push
inc
fiadds
xchg
cmp
jo
fcoml
mov
xor
sbb
and
jnp
xlat
inc
orb
dec
les
jl
decb
pop
ljmp
cld
push
pushf
dec
dec
stos
adc
mov
or
imul
mov
cmp
inc
cli
mov
cwtl
and
iret
and
cmp
push
push
bound
cltd
int
test
rorl
bound
pop
mov
insl
mov
mov
into
sbb
insl
add
or
pop
mov
jecxz
repnz
iret
test
clc
fmull
and
push
add
push
cmp
daa
mov
push
fwait
hlt
push
outsl
ja
pop
push
pop
imul
xchg
fists
adc
mov
inc
jp
fistps
outsl
sbb
popf
lock
fistps
push
jae
sub
dec
es
push
imul
adc
mov
aam
push
std
push
mov
push
push
test
bound
add
mov
cmp
fisttps
push
lahf
ja
sbb
jns
add
pop
cmp
adc
inc
js
dec
adc
pop
insl
add
pushf
xor
xchg
daa
test
push
dec
mov
add
subl
rcrb
push
pop
cmp
in
sti
mov
mov
faddp
lcall
jae
mov
push
fs
ds
jae
xor
pop
add
sar
add
sub
jnp
out
test
cs
xchg
stc
xor
or
neg
nop
pop
iret
out
mov
pop
pop
cmp
pop
dec
jno
stc
sbb
cmpsl
sub
and
mov
jo
xor
mov
push
stos
fnstenv
sub
cltd
jg
insb
push
ficomps
cmp
jmp
sbb
sub
jp
loop
sub
orl
mov
das
int
mov
lods
mov
imul
or
outsb
add
inc
adc
pop
notb
xchg
leave
clc
test
inc
pop
mov
cmpsb
inc
repnz
jp
inc
inc
hlt
mov
cld
repz
jnp
bnd
out
fcmovu
push
insl
in
test
fsts
aam
mov
lods
cld
loope
push
sub
lahf
fidivrs
mov
ret
add
rclb
push
or
mov
jbe
bound
mov
and
dec
setl
mov
and
pop
push
int3
xchg
xchg
enter
xchg
jb
cmp
ja
adc
fildl
cmp
arpl
pop
dec
jmp
idiv
add
outsl
mov
out
cmc
cltd
pop
aam
cld
xchg
ret
sub
mov
daa
aas
sub
test
cwtl
rcrb
mov
stos
add
repnz
mov
adc
outsl
pop
mov
inc
iret
mov
jg
xchg
mov
in
or
cmp
sub
stos
xchg
sarb
fisubrl
arpl
dec
inc
out
mov
sbb
mov
fsubs
enter
and
xchg
das
cltd
pop
or
rorb
cld
dec
lret
fnstsw
mov
iret
mov
sbb
pop
push
movsb
and
xlat
add
mov
loop
jns
shll
shrl
or
sub
pop
push
daa
jo
call
repz
test
xchg
jnp
inc
and
push
cmp
mov
adc
roll
in
lret
sbb
lahf
aam
test
popa
pop
adc
dec
xor
fnstcw
ret
ds
push
or
jb
jnp
inc
add
fs
ret
xlat
dec
sub
shlb
sbb
scas
call
mov
fs
clc
outsl
cs
insl
pop
icebp
push
imul
mov
cmp
in
aad
xchg
or
stc
lds
out
out
jne
aas
mov
add
les
orb
add
mov
loopne
mov
out
or
or
inc
pop
les
loopne
jbe
lcall
adc
mov
jmp
dec
les
inc
or
inc
pop
mov
or
sbb
js
lcall
out
sahf
notb
popa
jle
xchg
out
fs
out
dec
popf
sub
stos
and
mov
mov
sbb
xor
and
lds
arpl
xchg
add
pop
rcrl
dec
mov
mov
or
out
add
call
cmpsb
xor
repnz
or
mov
xor
mov
pop
pop
mov
pusha
or
cmp
fisubl
dec
ds
sahf
out
sbb
fincstp
sbb
lods
xchg
lea
in
mov
aaa
bound
lret
jno
sub
std
dec
sbb
inc
cmp
inc
shrb
sub
sub
mov
inc
clc
outsl
mov
cld
enter
lock
dec
cli
adc
int
jge
mov
lods
dec
add
out
lea
sarl
cld
sbbl
fcmovne
mov
lahf
inc
cmp
jns
sub
fisttpl
cmp
out
inc
xor
xor
push
mov
sbb
jae
mov
add
pop
or
test
iret
hlt
jp
sub
dec
fsubrs
cmp
sub
xchg
mov
pop
cmp
or
pop
adc
out
adc
in
mov
jecxz
rcrb
fwait
cmp
sub
les
sub
jnp
repnz
insl
xor
jnp
es
cld
mov
xchg
call
jne
push
std
in
mov
cwtl
fdiv
sbb
inc
incl
xchg
clc
pop
fs
jae
insb
dec
ja
mov
lock
mov
mov
lods
mov
and
scas
sub
cwtl
je
adc
pop
bswap
xor
and
jmp
push
scas
lret
dec
cld
insl
pop
fwait
std
jno
lea
enter
insb
insb
out
xchg
pop
lods
mov
aaa
mov
int3
sbb
sbb
xchg
dec
xchg
pop
out
xor
and
push
mov
orb
cmovb
mov
mov
popa
mov
imul
cmp
adc
inc
mov
adc
cld
pop
lock
jo
sti
addr16
xchg
lods
in
daa
outsl
pop
fbld
scas
add
jg
icebp
je
inc
jns
push
stc
cmp
cmpl
fdivl
and
flds
push
sbbb
pop
sbb
adc
scas
es
jno
popa
jo
clc
call
fildll
sbb
fildl
fcomp
dec
movzwl
pop
jbe
leave
sub
jnp
jno
pop
int3
fsubl
or
pop
out
adc
pop
pop
dec
sbb
jp
call
lcall
adc
and
cmpsl
adc
inc
xlat
sbb
push
and
test
mov
xchg
icebp
inc
mov
mov
jbe
fiaddl
movl
jle
addr16
push
and
outsb
push
add
insl
push
mov
test
add
add
inc
lcall
aaa
cmp
dec
shll
mov
mov
rcrl
ljmp
cmp
ja,pn
pop
dec
aam
push
stc
stc
dec
lret
mov
pop
aaa
fidivl
mov
mov
pop
pusha
loope
adc
jge
xchg
jae
lock
sarb
lods
cwtl
lods
adc
sub
cmp
or
xlat
inc
xor
std
mov
adc
addr16
dec
sahf
sub
test
cld
mov
in
je
lds
in
xchg
into
cmp
pushf
lcall
aad
lret
dec
sbb
aas
push
lds
out
mov
jl
and
in
rolb
push
lahf
add
int3
rcr
jb
hlt
sub
sbb
andl
adc
loop
xchg
cmp
xchg
outsl
push
out
jl
add
ds
jg
xorl
test
xor
fistpll
loop
js
std
test
adc
mov
add
xchg
loopne
aas
mov
mov
ja
ds
xor
jecxz
je
pop
xchg
insb
out
cs
dec
or
adc
das
rol
jo
lret
xor
jae
ljmp
cli
cmp
ja
test
test
subb
pop
cmp
xchg
out
dec
leave
sbb
push
das
clc
mov
xlat
mov
jmp
mov
adc
pop
sbb
dec
aad
sahf
push
xchg
loopne
bound
js
mov
inc
shlb
fnstcw
ret
es
dec
lahf
stos
sub
int3
movsb
add
cwtl
mov
adc
mov
jns
jae
cltd
adc
cmc
fs
or
cmpsl
lods
popf
sti
insl
data16
int
out
mov
or
inc
push
lret
loopne
adc
rorl
bound
sub
out
cmpsl
gs
enter
pop
adc
daa
dec
lods
movsl
daa
popa
mov
in
xchg
je
loopne
fsts
fwait
data16
sbb
testb
out
int3
sbb
jle
and
inc
lret
inc
xchg
jge
pop
mov
fdivrs
push
popa
jno
push
fadds
clc
sub
imulb
test
mov
dec
xchg
jmp
mov
call
jp
hlt
mov
sbb
fidivl
in
sbb
arpl
xor
push
add
push
orl
mov
lcall
test
stc
xor
repnz
or
leave
mov
mov
arpl
adc
jl
aam
sub
jl
sti
add
add
mov
jns
aam
jecxz
ficomps
call
sub
sub
mov
stos
dec
movsb
in
pop
testl
fcmovnbe
test
aas
ret
lahf
aam
cs
xchg
cmc
dec
adc
sbb
out
enter
push
pop
add
rorb
insb
leave
mov
sbb
cld
ss
fucom
fldln2
jmp
in
movsl
dec
ret
fiaddl
iret
frstor
lret
jae
sbb
cli
cld
push
xchg
ret
mov
fsubr
sub
jecxz
adc
xor
push
fldt
jo
push
cli
push
push
xor
int3
sub
and
cli
xchg
xchg
adc
xlat
add
insb
dec
push
repnz
dec
xchg
lods
ret
dec
inc
mov
or
dec
push
fs
sub
or
stc
sbb
popa
cwtl
lcall
ja
fcom
mov
xchg
enter
outsl
push
cli
adc
stc
and
sub
add
sbb
mov
jbe
out
out
test
insl
xor
or
push
pusha
ss
mov
xchg
and
pop
leave
rcrl
rorb
push
pop
xchg
sub
push
shlb
fiadds
jl
xchg
stc
lods
ja
push
dec
sub
stos
mov
shll
in
mov
mov
insb
xor
push
cmp
jnp
push
push
push
or
xchg
pop
dec
and
jae
push
push
inc
enter
inc
movsl
pop
lock
xlat
int3
std
mov
sti
mov
cli
sbb
cmpsb
data16
cltd
test
sub
lret
scas
fwait
jle
outsb
sarl
or
test
pop
jno
mov
int3
mov
cmp
jmp
mov
and
sub
test
cmpsb
mov
jge
cmp
sub
imul
or
mov
in
aad
fmull
pop
sbb
xor
and
das
dec
sbb
pop
lret
xchg
lcall
push
mov
jb
repnz
pop
jb
add
sub
fmul
push
xchg
punpckldq
push
mov
inc
lcall
inc
icebp
fwait
outsl
jo
push
rolb
inc
in
in
sbb
cmp
popf
dec
test
cmpsb
scas
lcall
adc
mov
inc
xchg
jnp
add
hlt
outsl
test
adcl
sbb
add
pop
jle
mov
adc
gs
movsl
imul
les
addb
mov
add
xor
adc
cmpsb
pop
xchg
outsw
adc
ljmp
cmp
mov
pop
xor
shlb
pop
cmpsl
hlt
inc
fs
mov
daa
ljmp
das
test
push
lcall
xchg
loop
pop
stc
lcall
pop
and
inc
add
shlb
insb
mov
and
inc
or
and
sbb
jle
pop
cltd
shll
xchg
outsl
arpl
dec
cmpsl
pop
push
cli
adc
in
dec
lahf
ss
xorb
mov
roll
inc
xor
les
ret
xchg
xorb
pop
rolb
inc
repnz
mov
je
mov
jb
jbe
aaa
sahf
jp
mov
sub
cmp
push
in
out
aaa
rorl
in
shld
rcl
les
outsl
lods
dec
jecxz
dec
add
push
ror
enter
fmull
add
leave
mov
mov
testl
xchg
jg
and
add
pop
imul
pop
cmp
sub
in
repz
daa
add
bound
loop
adc
insb
pop
in
mov
xor
fnsave
jne
xor
dec
aam
ja
mov
mov
daa
sub
repz
jl
mov
imul
adc
andl
sahf
adc
ss
ss
out
or
cmc
push
mov
inc
inc
shlb
lahf
dec
psadbw
shl
lds
sbb
insl
addr16
out
mov
push
dec
mov
xor
or
mov
loope
mov
rcrb
cmp
sar
mov
repz
pop
scas
mov
adc
fistpll
lea
je
divl
fnstsw
push
out
scas
push
sahf
sbb
in
cmp
adc
movsl
out
test
jnp
or
cld
cmc
imul
cltd
push
dec
dec
dec
js
int3
mov
xor
push
jg
xchg
inc
mov
jge
pop
add
sub
ret
jmp
out
test
xchg
mov
outsl
pop
mov
add
bound
bound
nop
mov
cmpl
add
inc
pusha
jge
or
jp
mov
or
and
aaa
xchg
adc
mov
adcl
lods
jb
cmpsb
fsubp
ds
mov
or
lea
lock
out
adc
pop
lea
xchg
and
sahf
dec
pop
stc
sbb
push
in
outsl
stc
int3
jecxz
jnp
xor
fadd
aad
dec
mov
std
bound
mov
ror
push
loop
sub
insl
pop
or
cmp
stos
or
inc
test
aam
mov
pop
dec
jo
mov
pop
or
xchg
mov
dec
cmpsb
icebp
xlat
scas
cs
fstl
out
fsts
vcvtps2dq
jno
inc
adc
and
insb
stos
loopne
adc
inc
xchg
sbb
stc
jecxz
nop
arpl
mov
dec
fcom
das
xchg
mov
cmp
mov
mov
and
cld
cmpsb
vhsubps
call
pop
mov
in
dec
or
push
loope
or
xchg
add
inc
sub
mov
mov
rcrl
in
pushf
fcoml
jg
cmpsb
outsl
iret
call
scas
push
and
mov
arpl
dec
aas
ds
data16
cmp
insb
addr16
mov
fdivs
cmc
add
and
xchg
jno
dec
add
addb
xlat
js
loope
inc
iret
cld
ret
add
xchg
pop
or
mov
insl
pushf
push
shl
adc
and
in
inc
jo
aad
xchg
mov
filds
cmp
add
roll
cs
loop
bound
fmul
fstps
iret
ja
lds
inc
testl
or
sarl
xchg
in
dec
cmpsb
stos
inc
fnstcw
sub
shl
negl
lahf
cs
out
out
movsb
xor
fadd
icebp
sub
popa
cmpsl
adc
and
call
or
cmp
js
or
into
ljmp
cmpsl
or
repz
in
cmp
mov
lcall
push
sti
hlt
cmpsb
loop
enter
test
mov
in
push
jmp
test
subl
mov
sar
int
push
inc
mov
cli
xor
fisubrs
sahf
xchg
push
push
das
arpl
pop
out
mov
or
fmul
mov
push
add
leave
push
jo
push
mov
push
xchg
stc
dec
jae
or
cmp
sub
dec
lret
test
mov
sub
push
pop
cmp
mov
mov
pop
adc
clc
inc
add
and
mov
andl
int
add
cmp
pop
pop
inc
rcr
pusha
jmp
scas
mov
inc
jb
inc
mov
fldl
cwtl
mov
lds
xchg
inc
testl
aam
mov
dec
inc
mov
mov
sarl
add
lods
mov
mov
cld
pop
inc
call
je
cmp
inc
add
pop
and
lock
dec
bound
jmp
cmp
mov
mov
ret
stc
add
lahf
lods
sbb
shll
lea
inc
jecxz
insl
ss
xchg
out
sbb
in
mov
packsswb
push
test
sbb
mov
fst
or
stos
or
xchg
arpl
xorb
imul
push
imull
cld
cmc
aam
scas
jno
push
cltd
movsb
cltd
dec
in
mov
add
push
pusha
in
aas
cmp
out
push
mov
pop
dec
mov
adc
cltd
xchg
cmpsb
mov
xor
and
push
push
pshufw
dec
add
cwtl
sti
mov
mov
arpl
push
and
add
adc
adc
aad
insb
dec
inc
das
add
adc
pop
popa
dec
add
add
test
andb
shlb
jns
pop
lahf
je
je
addr16
mov
lock
cmp
dec
arpl
push
push
in
push
test
lds
push
mov
pushf
add
imul
sar
adc
xchg
xor
insb
xor
mov
rorb
sub
es
add
adc
mov
or
iret
adc
push
pop
pop
pusha
sarl
push
add
xchg
jbe
data16
repnz
sub
jo
mov
cs
mov
mov
popa
cmpsl
push
inc
daa
data16
or
sbb
cs
cltd
push
push
test
popa
xchg
and
xor
sarl
push
sub
xchg
test
jecxz
push
movl
insl
sbb
inc
pushf
arpl
push
rcll
nop
nop
int3
stos
adc
negl
sub
in
mov
jl
les
mov
cltd
dec
xlat
xorb
in
out
mov
sub
loope
leave
adc
popa
adc
mov
loope
fs
testb
jno
je
sub
rcrl
mov
dec
incb
push
in
xchg
lea
push
push
add
fidivrl
pop
dec
cmp
cltd
xor
xchg
push
lret
ja
mov
cltd
cmp
mov
pusha
out
lcall
pop
xorl
test
dec
mov
mov
sub
xor
jle
pop
out
xor
jae
jne
add
rcrb
xchg
test
push
sub
orb
mov
dec
push
cmp
inc
and
divb
add
pop
jmp
fisttpll
xor
pop
add
int
insb
dec
mov
sub
mov
testl
adc
and
adc
pusha
ret
adc
imul
sub
shrl
ss
xchg
sub
aas
push
in
stos
mov
inc
mov
mov
int3
xlat
push
push
add
cli
jecxz
lcall
add
lret
pop
cwtl
cmc
jl
pop
es
or
xchg
es
xorl
mov
xor
mov
js
or
inc
jno
in
and
fsubrs
bound
push
xchg
jmp
aaa
loope
pushf
mov
jge
sbb
jno
enter
mov
out
icebp
popa
data16
mov
gs
jp
mov
cmp
shlb
addr16
push
jge
jle
mov
lea
jmp
inc
push
sub
inc
jg
sbb
inc
or
xorb
call
jmp
das
into
movsl
xchg
bound
cs
jb
popa
or
or
addb
push
jns
lock
jno
mov
sbb
jle
out
push
scas
add
inc
popf
mov
lahf
icebp
adc
xor
adc
dec
mov
into
add
lcall
mov
sarl
ja
shlb
adc
jmp
dec
test
clc
gs
pop
pushf
fs
mov
add
and
in
dec
adc
rcll
jp
std
in
in
bound
mov
cltd
mov
rcll
mov
mov
pop
xchg
adc
nop
mov
or
or
adc
mov
fsubrl
imul
or
test
les
dec
mov
rcrb
call
loopne
or
sbb
add
outsb
pushf
enter
call
sbb
mov
mov
lds
jo
gs
sub
sti
push
adc
mov
pop
fs
out
push
mov
data16
jp
stos
dec
xor
dec
mov
pop
jno
push
loop
xor
push
push
jns
push
outsb
inc
mov
xor
lret
test
mov
fsubrp
sbb
jl
adc
out
sbb
test
fwait
xchg
inc
pop
mov
gs
or
mov
xchg
lock
ljmp
lods
xor
push
xchg
dec
jge
and
imul
fimuls
jmp
mov
jl
add
push
xchg
jae
mov
popf
jb
xor
clc
adc
dec
pop
test
adc
pushf
dec
jp
push
dec
inc
loope
push
dec
lret
std
outsb
sub
cmpsb
movsb
sub
leave
jns
jle
inc
mov
ljmp
shl
mov
xchg
dec
mov
mov
lahf
push
sub
dec
push
mov
and
out
addr16
test
loop
push
sbb
dec
movsb
xor
xlat
cmp
push
jecxz
mov
mov
int
lcall
pop
std
xchg
pushf
or
shl
punpcklbw
das
testb
sbb
jge
insl
pushf
addl
mov
int
jno
pop
mov
stc
sbb
pop
adc
push
dec
adc
imul
add
leave
sbbb
call
mov
outsb
ljmp
or
xor
mov
rclb
lret
adc
and
arpl
jbe
and
pusha
fmuls
pop
arpl
pop
xor
cmp
test
and
push
mov
aaa
xchg
aaa
or
or
pop
mov
negl
push
xchg
fxch
jne
cmp
sahf
lret
movsb
jge
mov
pop
mov
jmp
jle
or
pop
add
dec
pusha
lea
lret
xchg
roll
lahf
sub
inc
loopne
lods
shrb
push
aam
pop
lods
mov
in
xor
mov
dec
push
fadds
add
add
aad
xchg
fidivl
push
lcall
or
scas
mov
or
push
rolb
adc
rol
push
dec
adc
sbb
div
pop
dec
push
addb
fucomp
jl
enter
mov
insl
ret
inc
add
call
loopne
mov
lcall
sbb
sbb
jecxz
mov
std
dec
in
or
jl
adc
fsubs
or
icebp
imul
in
cmc
in
repnz
mov
pop
fdivrl
into
push
gs
cld
jg
int3
lcall
push
cwtl
inc
and
pop
sti
adc
mov
out
scas
push
loop
cmp
push
gs
cmp
jecxz
ja
lret
pop
adc
sbb
test
cmp
insl
roll
lock
lahf
push
loop
cmp
xlat
push
cmpsl
inc
dec
sbb
adc
or
push
mov
cld
test
scas
sub
mov
cltd
pop
and
cmp
pop
hlt
sbb
jnp
rcr
mov
mov
sub
jo
add
jle
sub
or
ror
xchg
mov
fsts
insb
jns
or
jmp
push
cmc
inc
jle
sub
es
ds
push
jno
push
cmpsl
dec
inc
stos
fstl
dec
jb
jmp
adc
dec
add
mov
fwait
decl
pop
mov
mov
cmp
push
push
mov
pop
repnz
ds
xchg
mov
sbb
push
mov
jl
jg
xlat
ja
clc
shlb
outsl
sbb
std
outsb
xchg
add
iret
dec
lock
test
lods
stos
add
dec
insl
adc
push
mov
mov
int
or
scas
jno
adc
data16
sbb
ficoms
sub
sub
shl
es
pop
mov
je
mov
cmp
sub
inc
mov
inc
adc
imul
ficomps
pop
adc
out
pushf
inc
mov
inc
dec
je
mov
repnz
inc
movsb
int
jl
inc
push
or
gs
dec
pop
mov
add
test
push
pop
stos
push
hlt
fcompl
xor
daa
mov
sbb
shll
ret
sbb
xor
mov
mov
fdivrs
pop
out
cld
xlat
out
push
loope
ja
in
xchg
mov
pop
inc
mov
daa
popf
stc
rorb
fisubl
test
xchg
sbb
ficoml
xor
cs
movsl
dec
xchg
insb
jo
lds
inc
sbb
mov
shrl
adcb
loope
push
data16
xchg
rclb
cltd
push
xlat
cmp
cmp
stos
adc
cmp
fs
arpl
cltd
in
jno
pop
xor
mov
sahf
dec
mul
sbb
mov
push
or
xchg
inc
rcr
test
xor
mov
xchg
movsb
rcrb
mov
movsl
jb
jbe
leave
adc
lods
aam
mov
xchg
xchg
lods
negl
xchg
movsl
ss
jno
lea
lods
cmpb
adc
ret
outsb
ret
js
or
jo
call
test
dec
push
dec
mov
lret
sahf
fnsave
adc
dec
mov
and
lods
in
insl
stos
sbb
cmp
jle
lds
mov
inc
pop
stos
mov
pop
adc
inc
es
mov
xlat
xchg
cmp
mov
rclb
fadds
je
insb
pop
out
adc
lock
insb
push
push
aaa
adc
and
shlb
test
mov
test
jo
xchg
stos
test
pop
and
pop
stos
lret
out
adc
popa
bound
adc
loopne
int
gs
mov
pop
jb
sub
aas
es
ljmp
mov
add
sbb
push
loop
cs
cwtl
das
push
push
negl
ficoml
jg
leave
movsl
dec
fmuls
stos
pop
inc
sahf
call
stos
dec
enter
leave
mov
mov
jo
jmp
inc
lret
out
into
xchg
add
orb
in
dec
ds
pushl
mov
sbbb
inc
xor
mov
push
daa
shll
mov
jne
add
dec
popf
mov
jno
lock
sbb
sub
lods
test
js
sub
xchg
clc
loopne
lods
inc
sub
mov
sub
mov
setg
shll
scas
or
mov
cmp
popf
cld
cmp
add
scas
out
push
sub
and
das
mov
push
adc
mov
sbb
or
or
inc
mov
cmp
in
shrb
dec
and
movsb
js
mov
push
lea
nop
hlt
arpl
cmpsb
popf
cmp
adc
std
fists
cvtpi2ps
in
jg
popa
jecxz
pop
lods
cmp
pop
push
push
push
cltd
pop
lea
add
mov
outsl
test
test
imul
jle,pn
rcll
ret
aas
fistl
cmp
test
push
ds
sub
fnsave
xor
cmp
mov
dec
xchg
sub
mov
jp
je
add
inc
mov
adc
out
pusha
lahf
xchg
nop
stos
pushf
jb
sub
ds
mov
das
mov
xor
bound
mov
jmp
das
xchg
mov
push
scas
xor
mov
pop
inc
fimuls
testb
jo
sub
jne
imul
inc
mov
dec
adc
adcb
fnstcw
popw
cmc
shll
push
aam
mov
cli
addr16
arpl
mov
loopne
subps
sub
cmpsb
scas
add
jmp
cmp
sub
or
xor
lahf
push
inc
mov
inc
sti
sahf
mov
dec
test
daa
in
and
mov
sub
je
psubsb
aam
adc
icebp
or
sub
test
pop
jecxz
aaa
and
lret
cltd
xchg
mov
push
adc
mov
inc
lret
push
sti
and
inc
iret
dec
add
clc
mov
cmp
lds
xchg
repz
cmp
pop
jp
cld
pop
in
clc
mov
push
in
imul
ret
sbb
fwait
cmp
fimuls
sbb
inc
int
inc
mov
loop
imull
mov
stos
mov
jbe
push
jbe
sub
ss
scas
pushaw
add
daa
sub
out
or
sub
stos
idivl
pop
or
fnstsw
rorl
and
mov
lahf
fidivrl
out
sbb
add
xor
nop
fsub
push
or
aad
aad
mov
scas
inc
push
sub
pop
or
mov
out
hlt
addb
out
cmp
inc
mov
inc
out
push
pop
mov
cld
hlt
into
xchg
cmp
cwtl
aas
js
pop
sbbl
adc
add
std
imul
vmovhps
jae
mov
clc
test
cmp
lea
cli
mov
dec
popf
pop
lods
in
add
dec
fcoml
xchg
popl
pop
divb
and
stc
jae
data16
adc
popf
mov
push
nop
test
stos
pop
lds
jne
loope
xor
out
or
negb
imul
add
ret
fs
mov
mov
in
adc
lods
mov
gs
sub
lret
xor
or
inc
inc
dec
popf
adc
cli
sub
into
mov
dec
stc
sbb
popa
mov
inc
jge
dec
int3
inc
dec
stos
or
push
jp
push
mov
iret
mov
lods
pop
scas
subb
int3
fiaddl
jno,pn
or
scas
push
push
dec
inc
outsl
add
xor
lcall
pop
xchg
mov
arpl
roll
cld
or
add
gs
subl
pop
lods
lahf
shl
stc
popa
xchg
aaa
fiaddl
adc
sbb
inc
push
mov
cmc
rorb
cmpsl
xor
clc
jle
jmp
sbb
inc
out
xchg
xor
sub
les
jmp
js
cmc
xchg
cmp
es
jl
jge
sub
add
or
sub
mov
xchg
or
stos
xor
dec
jmp
sub
jno
fwait
jge
gs
into
add
jp
into
insb
xchg
lret
push
rcrl
int
or
push
outsl
dec
mov
jecxz
pushl
repz
jbe
push
inc
fs
test
and
and
jb
xor
pop
inc
push
adc
fwait
and
enter
test
jmp
stos
and
jae
push
imul
ljmp
sbb
in
jae
jae
jmp
dec
lds
aas
fwait
int3
arpl
sbb
cmp
test
push
negb
in
push
leave
aam
out
sub
nop
lahf
xor
sbb
adc
pop
sahf
fstpl
adc
andl
pop
mov
jo
jmp
fldl
or
out
bound
shr
lcall
pop
sahf
out
pop
mov
lods
enter
jnp
cmpsb
negb
fldcw
insb
stc
jno
mov
add
hlt
jb
cwtl
xchg
pop
dec
xchg
ret
repnz
xor
enter
and
sbb
xchg
jg
jbe
xorl
adc
push
pop
mov
pop
add
push
xchg
xor
cmp
add
js
cmp
cmp
dec
fistpll
fadds
loopne
lds
bound
sahf
cmpl
insb
push
sub
and
scas
popf
push
scas
addr16
cmc
xchg
icebp
fidivrl
sub
in
lock
sbb
xchg
mov
sahf
pop
es
and
mov
dec
loopne
and
adc
pop
lret
jne
xchg
mov
lret
or
pop
das
cmp
std
stc
nop
mov
pop
dec
or
adc
fbld
or
jbe
pop
push
and
ret
fs
popa
emms
cmpsb
shlb
push
cwtl
xor
fidivrl
fisubs
icebp
sti
rcll
cli
test
xchg
stos
cmp
scas
adc
call
nop
mov
push
xor
xor
inc
mov
ror
sub
cmpsl
fisubs
popf
inc
xor
mov
std
sti
or
mov
scas
hlt
sbb
or
push
adc
inc
mov
xorb
je
rcrl
pop
outsl
in
loope
jbe
fsubs
shl
neg
cltd
adc
push
xchg
mov
insb
adc
outsl
mov
sub
sub
adc
sbb
fdivrl
pop
sarl
aas
lcall
test
sbbb
cmc
incl
rclb
nop
rorl
xchg
xchg
adcl
pop
jb
in
je
test
mov
sti
jnp
mov
testl
loope
lcall
adc
inc
push
jg
out
cmp
xorl
adc
xchg
sbb
lds
les
lret
or
xchg
jbe
dec
pop
aas
cmpsl
adc
sbb
add
in
shrb
lds
repnz
ss
popf
lock
cmpsl
xchg
cmp
cmp
insb
inc
scas
lea
pop
lret
sub
pop
cmp
test
je
pop
jl
ja
inc
out
sti
sub
cmp
xchg
xor
xchg
push
add
lret
sub
stos
dec
jl
loopne
push
add
cmc
lods
dec
fs
xor
test
add
push
add
fdivs
pushf
lea
or
pop
or
adc
inc
dec
mov
shlb
pop
or
clc
mov
pop
push
inc
inc
adc
sbb
lods
iret
in
sub
lret
ljmp
and
pushf
scas
sbb
cmp
push
fst
xor
sbb
xchg
jbe
sbb
dec
es
pop
cld
cmpxchg
gs
loope
push
jbe
push
add
sub
icebp
fidivl
pop
add
gs
adc
jo
shll
repz
xchg
jle
sbb
fs
ss
and
mov
clc
mov
aam
push
and
insl
ret
repnz
xchg
lcall
into
adc
mov
aaa
out
mov
mov
pop
push
pushf
loope
sub
cmpsb
fidivs
cld
jle
jmp
jmp
lret
add
or
imul
ds
push
mov
mov
sbb
mov
nop
cmp
and
leave
adc
add
sbb
out
adc
fdivl
mov
int
add
pop
sbb
mov
jecxz
add
add
lret
inc
mov
stc
xor
sbb
inc
movsb
jnp
or
jmp
and
or
cmp
sub
and
xchg
push
fwait
push
test
mov
out
dec
in
repz
or
xchg
addr16
movsb
mov
mov
sub
mov
out
xchg
sbb
inc
ss
es
mov
lcall
jns
xor
cmp
jge
adc
loope
mov
mov
cli
cwtl
repnz
xchg
iret
push
cmc
and
aad
int3
mov
std
loopne
loop
inc
mov
xor
pop
adc
mov
sbb
pusha
sti
aaa
push
mov
ror
jmp
out
test
sbb
xlat
cs
or
pushf
mov
cmpsl
dec
addl
iret
mov
cmp
addr16
sbb
shlb
lea
sbb
jg
daa
sub
adc
scas
daa
aad
scas
sbb
jg
inc
and
in
mov
jmp
sbb
iret
mov
mov
mov
inc
xor
stc
xchg
xor
lods
addr16
minps
jae
mov
mov
xchg
dec
lret
lahf
rcrb
gs
lret
ficompl
ret
xor
into
in
mov
add
data16
flds
pusha
imul
mov
push
dec
iret
fcomip
push
cmp
fdivrp
adc
push
lcall
add
cmp
je
ret
out
add
xchg
ret
mov
mov
int
dec
fstpt
aam
jne
pop
lea
push
jbe
rcll
cmpsl
lret
mov
fistl
inc
sub
loop
sbb
fucomi
in
fstps
int
dec
fs
push
inc
out
in
add
pop
mulb
push
flds
das
lds
mov
stos
sbb
fidivl
mov
stos
repz
or
adc
into
sbb
inc
push
jg
sbb
push
mov
or
cltd
idiv
mov
in
cld
test
dec
xor
loope
ss
add
ds
xor
scas
icebp
hlt
cmp
push
sub
sbb
and
inc
or
mov
cmp
popa
in
ljmp
mov
sbb
iret
add
jle
into
jp
insl
adc
jp
cs
xlat
lock
inc
movsl
sub
lret
inc
mov
mov
mov
ja
and
sbb
scas
stos
nop
js
mov
ret
sbbl
aam
lock
add
pop
jae
and
xchg
loope
and
loopne
inc
test
mov
stos
je
jecxz
iret
imul
mov
inc
sbb
adc
mov
sub
mov
push
mov
loop
jo
inc
pop
mov
fstps
pop
movsl
adc
das
xchg
push
mov
lods
xchg
jae
fmuls
mov
jbe
ljmp
stc
insb
mov
cmp
adc
sub
adc
fnstenv
dec
testb
fdivrl
lahf
imul
dec
jbe
jne
ret
fistpl
lea
call
insb
faddl
mov
std
push
inc
movsb
lret
jns
pop
data16
or
stos
mov
loope
icebp
push
sbb
mov
cltd
lahf
jmp
pop
sub
fldt
mov
dec
out
xor
daa
add
imul
ds
sub
push
mov
clc
mov
lods
jne,pt
sbb
aaa
mov
stc
xchg
or
dec
mov
out
cmc
lods
jl
dec
int
aam
inc
inc
loop
lods
insl
into
cmpsb
test
cli
mov
jge
jmp
adc
xchg
lret
nop
rcrl
xor
imul
arpl
and
repnz
in
in
in
sub
jg
mov
jle
out
pop
push
pop
ss
les
jb
sub
fwait
int3
ficoml
xlat
fisttpll
testl
pop
loopne
add
push
mov
mov
fiadds
rcl
push
sub
pop
cmp
sti
fdivrp
sub
mov
fwait
cmc
dec
aaa
ret
test
cmp
icebp
dec
push
pop
or
arpl
inc
dec
sarl
mov
int3
fsubrp
push
push
lret
jge
mov
daa
stos
ss
pop
iret
stc
leave
fisubl
ds
hlt
or
jle
mov
stos
stc
mov
push
ja
add
int3
or
sub
adc
out
subl
jecxz
lock
test
in
push
cmpsb
out
pusha
inc
fistpll
cs
push
inc
and
and
adc
adc
jle
add
inc
lcall
lods
ret
in
mov
test
ss
test
and
fcom
test
int
jb
xchg
ja
int3
xor
pusha
push
jno
mov
scas
and
ret
mov
stos
leave
sarl
cmp
scas
imul
sub
adc
pusha
xchg
mov
xchg
adc
bound
dec
test
test
gs
push
add
pop
pop
mov
call
jbe
pop
mov
into
pop
pop
int
xor
xchg
cmp
sbb
push
scas
shlb
mov
mov
pop
pushf
addl
mov
aaa
inc
out
leave
test
loop
jno
in
and
fiaddl
ret
fisubs
cmp
in
jno
sbb
ds
inc
xor
pop
xchg
movsb
insl
out
inc
int
and
jo
test
xchg
rolb
movsl
xchg
sub
aaa
cmc
pop
mov
mov
jno
repnz
hlt
mov
pop
arpl
sub
push
dec
pop
cmpsl
repnz
xchg
sti
pushf
lods
sub
push
cld
xorb
jne
out
mov
sbb
push
mov
xor
nop
mov
jbe
ljmp
xchg
das
or
jo
mov
les
adc
mov
mov
and
fstl
gs
add
in
stc
scas
xlat
outsb
inc
shl
lds
ret
adc
jecxz
xor
pop
jbe
xchg
cld
loopne
fdivl
imul
movl
cmpsb
in
pushl
outsb
nop
fwait
mov
jecxz
out
cld
stos
loop
inc
inc
mov
jns
shll
xchg
mov
bound
pop
cmp
sub
test
add
dec
adc
xchg
or
int3
mov
or
shl
bound
mov
dec
imul
pop
popa
inc
fidivl
jnp
mov
movsb
bound
stc
adc
adc
and
and
push
sahf
jecxz
in
mull
lahf
add
addr16
and
xor
jl
insb
dec
inc
gs
dec
or
out
call
cmp
xlat
or
outsl
ret
and
loope
cs
or
dec
mov
out
xor
or
pop
aas
repz
test
in
sub
divps
adc
cmp
sbb
movsb
cmp
sub
loop
test
inc
stos
testl
imul
dec
sti
daa
mov
xchg
sub
sub
fimull
es
mov
dec
sbb
ds
mov
rclb
in
jb
movb
test
mov
leave
jns
and
xor
jp
fcomps
lret
loop
sub
popf
xor
sub
std
push
popa
jle
movsl
sub
push
movsb
dec
aaa
mov
jg
or
cmp
jg
dec
and
enter
lahf
inc
cmp
push
int
iret
mov
jl
sub
push
call
push
mov
push
insb
dec
add
loope
jg
push
or
fsubp
pusha
mov
gs
cmc
cmp
adc
mov
xchg
xchg
push
shlb
inc
add
mov
movsb
int
mov
imul
pop
sbb
ja
mov
inc
xchg
inc
push
pop
lahf
mov
inc
ss
fcompl
sbb
adc
sub
add
sahf
pop
js
push
fwait
bound
adc
pop
and
ja
jmp
xchg
rcrl
jbe
sub
jno
jp
fildll
mov
aaa
fsubrs
fs
loop
xchg
lods
pop
xchg
xor
sub
inc
pop
pop
stc
or
js
jno
call
stc
xor
call
push
mov
fisttps
jae
or
lods
cmp
inc
test
xor
push
pop
dec
ret
test
sub
mov
mov
out
or
stos
adc
loope
push
inc
sub
mov
dec
lret
fnstsw
aad
outsb
pop
pop
or
add
xchg
xchg
xor
add
mov
mov
cmp
mov
mov
popa
gs
repz
lret
mov
mov
sbb
adc
inc
stos
jb
out
rep
cmpb
lods
adc
push
sub
and
aam
lock
cld
clc
cmp
popf
in
rcl
mov
sub
inc
fsts
jecxz
outsl
inc
mov
bound
push
xchg
add
sbb
cli
jle
mov
push
test
sti
outsb
sbb
int3
dec
and
fcoml
sti
int
bound
cmpsl
cld
sbb
xor
jmp
push
xor
fcmovbe
jp
movb
pop
ljmp
lret
test
inc
cmpb
scas
xchg
mov
inc
push
test
pop
lea
roll
jo
add
adc
sub
jb
mov
js
test
fsubs
and
sbb
push
lahf
cs
iret
leave
repnz
sub
mov
dec
in
and
pop
outsl
dec
push
popa
in
mov
fisubrs
scas
arpl
jg
fistpll
adc
jns
fdivrs
inc
in
xchg
pop
cmp
mov
into
pushf
rcr
jmp
cltd
inc
arpl
sub
and
or
mov
scas
inc
inc
adc
dec
xchg
xor
iret
jae
adc
movsl
mov
shll
ret
xlat
ret
mov
cli
push
popf
cmp
call
pop
mov
push
xor
lcall
pop
xor
ret
sbb
inc
or
jb
xchg
add
jecxz
fildl
fnstsw
mull
addr16
out
jecxz
stos
cltd
xchg
popa
xor
outsl
and
cmp
jb
int
repnz
sbb
flds
scas
cmpsb
dec
aad
inc
daa
jo
out
call
jnp
popf
sahf
leave
cmp
sbb
and
or
adc
int
mov
mov
lret
test
fnsave
fsubrs
mov
repz
fildl
out
outsl
add
aas
pushf
pop
xchg
call
sub
or
scas
pop
outsb
addb
dec
pushf
jp
stos
flds
adc
aad
sub
push
add
push
fimuls
inc
pop
ss
arpl
aaa
push
aam
adc
pop
clc
fsts
iret
sbb
or
adc
xchg
ja
clc
js
leave
xor
xchg
addl
aam
data16
xor
lds
lcall
cmpsb
lret
repnz
mov
test
lea
mov
jo
out
insb
es
shrl
mov
pop
cld
aam
and
iret
dec
fisubrs
mov
test
jmp
mov
fwait
sbb
out
repz
lret
and
and
mov
mov
mov
sub
repnz
push
test
mov
jns
adc
or
call
xchg
mov
push
ret
xchg
and
inc
stc
xchg
xor
in
loop
test
pop
aaa
and
flds
shll
ds
dec
mov
dec
lea
aas
xchg
sbb
mov
sbb
jno
cmp
sahf
cmp
push
maxps
inc
sarb
out
mov
daa
lret
imul
addb
inc
and
test
xor
inc
je
ret
add
scas
dec
loop
add
test
mov
mov
lock
lea
sbb
sub
call
xchg
mov
dec
orl
lds
jne
inc
stos
jbe
jns
fstpl
pusha
lock
or
stos
jmp
call
stos
popf
jmp
dec
adc
inc
mov
inc
pop
xor
daa
mov
lret
sahf
mov
mov
jecxz
in
mov
mov
mov
cmp
ja
jb
out
stos
jnp
aad
push
jmp
cmp
maskmovq
inc
fists
loop
mov
hlt
dec
daa
ss
repz
adc
pop
sub
pop
nop
mov
cld
shl
dec
pop
ljmp
daa
inc
mov
or
ds
imul
hlt
sub
and
stos
mov
pushf
add
repz
push
mov
sub
mov
shl
push
arpl
lods
in
aad
pop
sarb
leave
lret
aas
sub
and
adc
arpl
jmp
pushf
push
outsb
xor
mov
loope
xchg
jb
sub
push
iret
inc
pushf
test
add
xchg
movsl
and
mov
ja
insb
mov
mov
test
adc
stos
aaa
push
xor
pop
adc
jbe
addr16
mov
nop
insb
pop
lret
lcall
ljmp
lds
or
inc
lods
stc
dec
data16
jg
xchg
xchg
fnstenv
aas
xchg
adc
push
push
sbb
imul
insl
cld
test
add
nop
shr
es
mov
lcall
pop
push
lret
push
xchg
jnp
rcrb
push
sti
out
aam
cwtl
mov
xor
les
xchg
addr16
dec
mov
push
pop
outsb
push
jne
and
cmp
lods
or
not
aas
adc
loop
adc
sbb
push
xchg
fiadds
test
mov
cli
das
shlb
ja
nop
mov
and
pop
mov
leave
sbb
xlat
sbb
mov
ja
fcomip
add
xchg
push
and
pop
aaa
sbb
mov
fsubs
pop
out
sbb
outsb
lret
mov
mov
and
jecxz
push
outsl
imul
mov
mov
jnp
sub
add
jl
xchg
mov
pop
xchg
stc
dec
call
xor
test
pop
mov
push
jbe
hlt
ret
adc
int
aad
stos
push
ret
and
cmpsb
adc
xor
push
add
inc
jb
aaa
dec
xlat
mov
cmp
lret
jmp
xor
sbb
je
outsl
imul
or
sbb
cmpsb
enter
outsl
push
fwait
adc
or
repnz
ds
call
inc
fiaddl
lods
jl
test
adc
push
dec
repnz
mov
mull
adc
jmp
jne,pt
loopne
xor
mov
mov
data16
and
arpl
cmpsb
rorl
cs
xchg
insb
sbb
jns
xchg
test
sub
iret
fnstcw
daa
pop
xchg
fmull
inc
aas
icebp
fstp
push
xchg
and
rclb
mov
das
jae
es
mov
and
push
pop
xchg
adc
sbb
lods
pusha
bound
mov
jb
xor
mov
push
popa
inc
aam
loop
mov
mov
mov
and
das
rolb
mov
sub
mov
loopne
lods
xlat
sub
fmulp
icebp
out
popf
inc
push
adc
js
shll
mov
arpl
pop
mov
mov
enter
fs
inc
movsb
dec
lock
pop
inc
cmpsl
andb
xor
lock
and
cmp
stos
lcall
loopne
fcmovne
push
xchg
cmpsb
mov
std
sub
xor
test
push
dec
stos
fcomi
out
rorl
nop
repz
jge
xor
mov
aas
fadds
xor
mov
xor
rol
cmp
inc
daa
pop
mov
enter
xchg
je
sahf
or
mov
mov
into
ja
sti
mov
mov
dec
call
ret
add
mov
pop
shr
stc
test
pop
lods
rcr
popa
mov
pusha
outsb
sbb
nop
fdivr
outsl
push
cltd
cmp
and
mov
mov
lds
es
movq
sbb
clc
les
push
push
jg
mov
pop
sarl
push
scas
sbb
ret
addr16
cmp
dec
pop
aaa
icebp
into
pusha
sbb
int3
sbb
inc
mov
adc
add
mov
dec
mov
add
add
stos
xchg
mov
faddl
dec
lods
fsubrs
lea
int3
xlat
jnp
out
pop
sub
das
orb
push
rep
cmp
mov
sbb
cmp
int3
movsl
add
aad
mov
xlat
sahf
dec
ret
ss
mov
movsb
push
push
insl
fmull
fbld
inc
testb
lea
loopne
sbb
ja
aad
loopne
lods
shl
pop
or
push
add
and
pop
xchg
arpl
fcomip
push
icebp
cli
push
mov
lret
sbb
push
push
mov
jo
das
mov
pop
pop
cmpb
add
lock
jp
jp
sti
out
jp
imul
add
lods
insb
lods
test
mov
cmpsb
scas
cmc
jnp
pop
in
lock
inc
mov
aad
mov
fidivs
cwtl
ljmp
mov
mov
and
and
mov
sti
lods
dec
xlat
leave
xchg
leave
jp
sahf
push
and
xor
mov
and
fstpl
xor
pop
loope
stos
imul
sub
lods
add
fwait
mov
or
in
aaa
and
lea
repnz
mov
xchg
insb
mov
mov
shrb
sar
adc
frstor
or
insb
push
jne
mov
add
pop
rcrl
jbe
dec
stos
mov
adc
scas
popa
ja
frstor
push
fadd
in
mov
pop
mov
sti
repnz
sbb
inc
mov
aaa
fwait
imul
loope
ljmp
stos
pop
push
jg
pop
repnz
push
xor
cmpsl
push
ret
cmp
cmp
jno
dec
rcrl
cwtl
dec
inc
dec
addl
rol
inc
xlat
sub
push
pushf
in
xchg
nop
in
pop
sub
and
add
sub
les
gs
dec
xor
or
outsl
fiadds
jmp
mov
mov
pop
mov
aaa
or
and
mov
lods
add
ret
sub
and
insl
bound
adc
cld
fnsave
test
inc
mov
and
or
cmpb
push
fimuls
clc
sarb
sub
sahf
sub
xor
dec
push
pusha
loopne
adc
js
cmp
ja
fdivrp
pop
mov
push
dec
sbb
cmp
out
repnz
aad
xor
jmp
and
xchg
adc
je
pop
cmp
sbb
shr
mov
and
sbb
int
mov
jae
xchg
add
pushf
add
lds
cmp
xchg
add
inc
shl
js
xor
pop
add
test
rcr
mov
mov
test
dec
inc
jo
dec
pop
outsb
dec
pop
imulb
fsts
loope
push
out
repnz
xorb
outsl
cld
fldl
out
call
add
jae
sahf
cmp
mov
stos
xchg
dec
mov
call
mov
mov
inc
sbb
into
ret
mov
fcmovu
int3
xor
pop
call
int3
imul
jg
cwtl
push
test
dec
lods
xchg
nop
inc
cmpsl
dec
scas
lret
fisubs
mov
jo
pop
test
ret
arpl
outsl
sbb
dec
inc
stos
xchg
xchg
and
fcomps
mov
cmp
call
adc
dec
sbbb
jne
fisttpll
mov
iret
or
andb
movsb
es
inc
cmpsl
sarb
jb
fdivl
repnz
imul
into
sub
leave
aas
xchg
add
fbstp
and
in
jmp
pop
stos
loop
sub
insb
xor
cmpsb
xor
mov
xchg
int3
jo
icebp
aas
dec
daa
dec
hlt
xor
inc
movsl
call
aaa
es
cmp
cmpsl
orb
jo
dec
frstor
lcall
gs
rcll
xlat
mov
jge
mov
fs
repz
aas
mov
mov
mov
addl
ljmp
mov
jmp
pushf
sbb
jp
lods
pop
mov
jne
inc
ret
pop
and
jge
test
lea
inc
test
jecxz
pusha
or
fidivrs
push
lahf
mov
stc
mov
dec
cs
mov
das
cmpsl
inc
cmp
out
jle
xor
xor
scas
aad
nop
pop
xchg
aas
andl
mov
push
jb
ja
lret
jno
xchg
rorl
ret
add
mov
test
lods
das
lock
std
out
fisubrl
pop
inc
stos
mov
lods
stos
push
mov
fwait
xor
xchg
xchg
pop
hlt
orl
push
add
ss
pop
insl
xchg
or
pushf
jae
insb
ja
imul
or
dec
int
pop
mov
pop
dec
jmp
dec
xrelease
loope
pop
mov
into
test
xchg
movsl
adc
mov
sahf
bnd
xchg
leave
mov
insl
rcl
repz
mov
and
loope
mov
jbe
insb
xchg
mov
sbb
mov
xor
out
jle
xor
je
cmpsl
icebp
rol
jae
testl
pop
jecxz
mov
lds
mov
cs
inc
pop
test
pop
pushf
add
lods
fdivrp
hlt
js
shr
loop
js
add
movb
into
inc
pusha
sub
or
mov
test
loop
fcom
mov
xchg
jge
lcall
outsb
sbb
adc
fdivrl
mov
xor
dec
sbb
add
insl
push
fimull
icebp
roll
rclb
adc
xchg
xchg
mov
arpl
adc
mov
orb
mov
lock
mov
ds
insb
rol
sbb
call
popf
fistl
gs
arpl
sub
lahf
call
mov
dec
test
call
dec
test
mov
mov
lret
iret
addr16
pusha
sahf
push
roll
jp
in
imul
and
or
pop
sub
push
adc
mov
andl
sbb
mov
add
mov
adc
adc
sub
push
mov
test
inc
dec
out
mov
inc
test
lods
clc
jae
mov
fiaddl
lea
adc
in
std
jno
out
cmpsb
addr16
add
jp
outsl
xor
xchg
fwait
sti
sahf
loop
test
repz
test
aas
out
pop
lods
repz
xor
loopne
cmp
jne
aad
dec
jmp
ja,pt
imul
filds
and
dec
cs
out
repz
cmp
jp
jae
mov
call
pop
mov
imul
es
int3
push
lds
sub
mov
sub
hlt
ficoml
popa
outsw
xor
pop
pop
in
xlat
andb
adcb
outsl
jp
jl
addr16
dec
subb
pushf
push
push
or
cmp
mov
lret
je
push
pop
push
int
push
enter
pop
and
mov
jmp
dec
push
jg
adc
cli
pop
clc
inc
es
add
xor
pop
sub
movsb
iret
lret
cmp
and
clc
mov
bound
mov
fsubrp
jmp
pop
ja
lret
inc
push
loopne
scas
imull
add
xchg
test
pop
jecxz
jno
sub
lods
stos
or
fucomp
or
call
cmp
addl
and
mov
ja
inc
inc
fisttpll
add
xlat
stc
int
je
dec
jl
jmp
cmc
cwtl
es
dec
pop
icebp
mov
pop
push
mov
xchg
ret
jne
cld
fidivl
clc
pop
lahf
insb
stos
jl
or
cmpsb
fldt
in
into
pop
mov
jg
rclb
imul
aaa
sti
loope
test
push
test
or
gs
arpl
lcall
pop
add
xchg
jnp
mov
cmp
addb
cmp
sbb
sbb
repz
js
ret
testl
inc
test
xor
cmp
mov
icebp
cmp
cs
mov
movaps
dec
xchg
cmp
sbb
icebp
mov
lcall
lds
cmp
sarb
lcall
xor
or
push
jecxz
fldlg2
sub
pop
mov
push
jb
mov
xchg
xchg
xor
cmp
mov
das
jge
dec
icebp
push
xor
jnp
sti
stc
out
mov
sbb
push
or
imul
xchg
les
arpl
jnp
rclb
aaa
cmpsl
sbb
test
add
rcr
out
xlat
andl
xchg
stos
jp
ret
icebp
inc
xor
xor
or
call
cmp
lods
test
add
dec
mov
inc
dec
jno
into
inc
mov
aas
and
push
jl
jo
adc
lahf
arpl
lret
fldenv
xchg
call
xchg
mov
mov
or
lds
jmp
mov
cwtl
push
ficoms
jno
mov
ret
outsl
mov
jns
mov
aam
inc
test
inc
fcomp
cli
sub
aad
mov
imul
pop
test
ret
jg
xor
xchg
out
dec
inc
jle
insl
or
jl
pop
sbb
or
xor
popa
cltd
aad
pop
push
push
jbe
push
cmp
fisubrs
insl
test
mov
cs
pop
jbe
pop
rcr
jl
ret
sub
in
shlb
jge
pop
test
dec
sbb
inc
stos
daa
mov
inc
dec
mov
jge
fistpl
push
cmc
repnz
out
sbb
dec
pop
cmp
or
repz
dec
jle,pn
push
mov
add
lock
pop
inc
test
cs
mov
fcoms
and
and
sub
sub
add
mov
xlat
jb
pop
rcl
adc
jne
mov
nop
pop
mov
sarb
stc
cmp
mov
pop
rcl
sahf
jle
fnstsw
or
rcl
sbb
test
and
cmp
dec
mov
and
sbb
insb
outsl
jno
cmpsl
bound
or
jbe
push
in
jno
dec
xchg
mov
daa
inc
push
sbb
in
iret
cmp
cmp
mov
push
nop
mov
inc
or
enter
adc
rol
fnstenv
sbbb
out
mov
shl
mov
sbb
sbb
faddl
rolb
gs
push
loop
mov
pop
and
pop
pop
ja
arpl
imul
std
jno
xor
jmp
push
scas
dec
cmp
xor
cmp
je
ficompl
enter
pop
sbb
sti
sar
xchg
test
jmp
fucomp
les
popf
lret
inc
lods
pop
sbb
arpl
outsb
imul
inc
jecxz
jb
pop
lret
add
popf
and
int3
xchg
mov
hlt
jne
lret
pop
enter
mov
cmc
je
ret
gs
fmuls
and
and
mov
ret
test
xor
jmp
mov
divb
lahf
xchg
or
insl
aam
mov
lret
bound
add
jbe
icebp
pop
mov
or
mov
or
scas
mov
call
aaa
ret
and
xchg
in
push
cmp
shr
adc
fisttpll
ljmp
out
sbb
cmc
and
rolb
sub
mov
lea
fdiv
test
add
pop
inc
xor
imul
stos
dec
fcoml
pop
jnp
lahf
or
pop
imul
pop
push
sarb
daa
iret
cmp
adc
sub
sub
arpl
int
or
and
push
xadd
fwait
stc
pop
ljmp
push
mov
xor
inc
push
mov
ret
ret
pop
jmp
xchg
mov
mov
or
dec
dec
push
sbb
mov
in
out
outsl
insb
xor
mov
dec
ljmp
popf
pop
mov
cltd
ret
sub
cld
pop
pushf
sahf
imul
mov
mov
sub
insl
sbb
jp
and
sbb
es
test
jle
xor
insl
stos
cmpsl
into
sub
fdivrs
jne
aad
in
add
enter
ret
popf
in
pushl
mov
jne
data16
cmp
aaa
dec
adc
add
adc
mov
push
imul
fcmovnu
xchg
ja
fdiv
inc
cmpsb
decl
cltd
popa
popa
mov
pushf
idivl
push
mov
or
sub
sbb
fsubr
fcomip
sub
and
pop
cmc
cmpsb
pop
xchg
out
pop
insl
or
adc
lds
cs
xchg
test
or
inc
ljmp
je
mov
lcall
inc
lret
or
inc
lods
cmpsl
pop
fdivrl
and
push
sub
lods
lcall
test
mov
daa
rcrb
or
rcrb
push
cmpsb
pop
mov
xchg
je
popf
lcall
push
pusha
jns
cld
lret
push
fcmovnu
mov
cmp
mov
jg
fcomps
inc
jne
fcmovne
pop
in
push
repnz
gs
inc
in
mov
push
out
push
ret
sub
or
mov
call
sub
cltd
lahf
add
test
or
ja
push
movsb
out
adc
jg
sub
jnp
les
inc
daa
std
xchg
pop
mov
lret
popf
mulb
cmp
pushf
shll
inc
inc
pop
ja
mov
mov
outsb
int
das
sbb
dec
cmc
lds
adc
out
jle
pop
test
loope
loop
mov
mov
int
and
lods
xchg
mov
stos
sarl
cmpsb
jbe
cmp
negl
mov
loop
or
adc
mov
jmp
leave
adc
xchg
cmpl
mov
xchg
ret
dec
sbb
push
and
fisubrl
rol
cld
add
imul
xor
popf
cld
test
cmp
hlt
and
mov
lret
xor
and
in
ja
mov
sub
nop
imul
push
frstor
mov
adc
xchg
ss
mov
repnz
js
jge
out
cwtl
lcall
mov
mov
clc
ret
inc
ja
mov
jnp
andb
sbb
xchg
ds
inc
insl
pusha
je
xor
in
jp
jae
popa
out
adc
or
imul
adc
mov
xchg
fildll
xchg
and
mov
arpl
mov
pusha
fxch
imul
pop
cmpsl
xchg
mov
jge
cld
int3
mov
subb
mov
and
cmpl
in
mov
push
push
fnstsw
enter
rolb
jo
mov
std
jno
loopne
shlb
scas
push
jo
mov
psrlw
addr16
xor
dec
fisubrl
adc
jmp
scas
fs
test
dec
xor
jmp
je
sarl
inc
push
out
scas
loop
lock
fisttpll
repnz
sbb
cmp
ja
adc
fisttps
mov
ret
xorb
test
ds
nop
jno
out
shlb
mov
mov
sahf
add
scas
adc
test
dec
shlb
ljmp
mov
and
jg
jno
pop
dec
inc
mov
in
stos
jno
and
dec
cmp
sahf
xchg
loope
into
push
orl
adc
jg
xlat
jle
lcall
xchg
dec
sti
mov
mov
mov
sbb
adc
mov
imull
int3
loopne
push
sbb
dec
sub
sub
add
jbe
add
add
dec
lret
mov
data16
xor
dec
push
psraw
mov
ds
sahf
mov
test
jb
arpl
je
call
or
jecxz
mov
daa
push
add
cmp
insb
pop
push
mov
sub
xchg
jae
movsl
clc
imul
pop
push
or
pop
lds
jbe
inc
and
pusha
inc
aam
out
add
lret
sarb
push
nop
and
inc
adc
inc
ljmp
inc
inc
dec
mov
mov
sbb
xchg
fiaddl
xor
mov
out
shl
dec
push
mov
pop
ds
rcr
adc
ljmp
and
and
mov
cmc
sub
jnp
or
movsl
pop
xor
mov
fsubrl
popf
das
or
fs
jecxz
ljmp
and
cmp
adc
icebp
into
jne
xor
shl
fcompl
orl
aaa
repnz
addr16
push
jl
dec
scas
fdivrl
push
fidivrs
js
adc
adc
xlat
dec
imul
jecxz
cld
sbb
cmp
outsl
add
push
jae
je
push
dec
push
nop
pop
mov
jno
xchg
sub
mov
inc
bound
daa
hlt
pop
loop
scas
test
push
push
mov
cmp
lea
rolb
push
jnp
ds
decl
add
cwtl
mov
sub
adc
sbb
fidivs
mov
cltd
push
jle
xchg
lods
test
jmp
cmp
xchg
inc
cwtl
sub
or
daa
loope
pop
rcrl
inc
fnstsw
roll
push
inc
xor
push
cltd
inc
jns
fucomi
mov
cmc
sbb
push
stc
cmp
xlat
sub
lods
push
imul
adc
fcomps
not
jmp
or
jbe
push
xor
arpl
add
xorl
lds
cmpsb
and
icebp
test
inc
pusha
xchg
testb
fdivrs
push
stc
lcall
stos
shrl
lret
ljmp
inc
ds
or
xlat
arpl
jbe
jl
and
flds
loopne
es
lds
lods
push
scas
mov
leave
add
dec
dec
adc
mov
sub
or
xchg
lock
and
movlhps
mov
and
lods
les
push
dec
push
inc
push
stc
into
lods
fcmovnu
dec
sbb
push
or
cmp
cs
mov
outsb
adc
adc
adc
test
sub
stc
jmp
and
cwtl
cmpsb
inc
add
insl
sbb
add
push
inc
or
imul
push
xor
test
mov
mov
into
ret
test
dec
sub
xchg
xchg
push
mov
sarl
mov
stc
cmp
pop
movsl
push
aaa
sbb
inc
add
ret
push
packuswb
divl
pop
jl
jg
sbb
jns
mov
push
lcall
sub
push
ja
in
addr16
or
mov
or
mov
ret
gs
jl
notb
push
jae,pt
jp
dec
inc
jnp
dec
push
movsb
testl
mov
out
sub
push
xchg
add
neg
mov
subl
insl
push
push
out
mov
push
or
cmp
and
add
xor
add
jp
imul
or
mov
sti
cltd
xor
clc
mov
in
dec
pop
xchg
push
lahf
jns
mov
push
jne
addr16
push
xor
jne
inc
and
js
mov
jae
aaa
scas
dec
rcl
fbld
inc
rcll
jp
jge
movsl
push
push
ljmp
inc
cmp
cmp
cmpsb
into
mov
enter
shlb
xchg
sbb
fwait
mov
mov
cmp
xchg
jbe
and
jo
test
ljmp
dec
and
sarl
leave
push
sbb
and
jae
mov
aam
sub
sarl
mov
or
push
xor
mov
xchg
dec
xor
pop
pop
rolb
and
ds
je
sub
pop
rorb
and
ret
ja
pop
jmp
xor
icebp
mov
es
fldcw
xor
popa
test
lea
ja
pop
push
lea
mov
mov
or
pop
fmul
lea
js
in
xor
ja
lods
sub
cwtl
cmc
fwait
je
sub
dec
or
mov
out
popf
mov
jmp
push
cmp
jns
pushf
inc
das
in
ljmp
xor
pop
pop
ficompl
cmp
mov
pop
mov
hlt
lret
clc
lcall
xchg
mov
daa
sbb
jl
xchg
or
ret
cmpsb
inc
shlb
inc
fistl
mov
or
dec
lcall
dec
mov
push
leave
loopne
inc
icebp
stos
pop
test
cmpsb
cmp
fsub
dec
xchg
cmp
mov
nop
or
ret
jae
iret
mov
enter
data16
dec
fistl
lahf
sbb
jb
xchg
push
jecxz
inc
aaa
orb
add
add
add
mov
or
add
repnz
lods
add
adc
xorl
scas
pop
cmp
scas
gs
dec
push
icebp
sub
fwait
ss
aam
cmpsl
jle
mov
ds
hlt
lea
std
mov
dec
pop
mov
push
add
imul
mov
inc
inc
shlb
or
xchg
add
push
sub
and
pop
push
in
imul
pusha
pop
sbb
pusha
mov
or
xor
sar
lods
mov
adc
sub
jnp
int
fdiv
mov
popa
cmpsl
push
xchg
int3
push
pop
dec
cmp
add
mov
xor
fisubrs
sbb
daa
dec
enter
cmp
popf
inc
mulb
jbe
out
xchg
repz
pop
ss
mov
out
mov
jae
mov
gs
or
dec
pop
xchg
jl
mov
arpl
adc
push
xorb
in
decl
icebp
cmc
dec
enter
pop
lea
rcr
adc
jae
cmpsb
fldcw
pop
sub
mov
xor
mov
jle
hlt
pop
inc
repz
or
psubusw
sarw
jg
add
int
lret
jo
push
div
mov
lahf
or
fstl
std
shrl
mov
adcb
repz
fcompl
push
cmp
mov
mov
ret
adc
movsb
mov
pop
rcrb
out
popf
jmp
subl
inc
mov
xchg
jecxz
stc
leave
outsl
xor
inc
pop
push
sbb
sub
push
loopne
fidivrs
sbb
ror
call
in
push
jne
mov
jmp
inc
add
cmp
pop
dec
cmp
rcll
cmp
fildl
cmp
and
mov
pop
rclb
in
push
cld
mov
adc
and
lret
or
subb
push
hlt
xchg
jp
imul
xchg
das
das
cmp
pop
clc
in
mov
mov
push
mov
jbe
jmp
jo
andb
adc
fistl
clc
dec
jo
outsl
jns
pop
and
jg
scas
adc
sub
push
and
call
add
sub
adc
cmp
mov
sbbb
inc
pop
jbe
jnp
xchg
jbe
cmp
or
mov
push
pop
mov
cli
cmpsl
je
pand
mov
jno
push
mov
jp
shrb
or
ret
out
aam
or
xchg
nop
dec
cli
js
mov
mov
mov
fildl
xor
jo
cmc
pusha
add
xor
mov
das
imul
nop
add
loopne
movsl
add
out
lods
inc
lods
add
stos
pushf
dec
pusha
scas
data16
ja
jno
mov
out
mov
iret
xor
xor
mov
xchg
das
mov
sub
mov
outsb
jb
jb
push
clc
mov
adc
xchg
out
lret
inc
aad
dec
gs
mov
aad
and
int
aas
into
push
jbe
adc
pop
add
lock
rorb
sti
push
fcomip
orb
daa
dec
push
popf
das
xchg
inc
or
ss
push
inc
add
or
loop
int
adc
xchg
nop
test
fcmovbe
lret
inc
inc
out
cld
xchg
xor
and
fisubrs
mov
js
out
xchg
popf
repz
pop
rcl
and
and
shl
fcompl
sub
xor
jg
int3
in
leave
stos
int
cmpsl
cmp
js
sti
lds
inc
addb
shl
pusha
add
fimuls
mov
fbstp
inc
lahf
ljmp
pop
cld
mov
xor
mov
flds
add
into
dec
clc
and
mov
jg
ficoml
mov
clc
xor
cld
xor
xor
dec
xchg
popa
pop
or
les
pop
pop
adc
sub
add
mov
into
repnz
daa
fmuls
push
jle
ret
loop
sub
loop
adc
push
inc
ja
cmpsl
adc
mov
mov
mov
and
push
adc
and
adc
and
cltd
and
pop
shll
pop
jge
and
pop
mov
les
dec
out
jo
ficomps
outsl
jnp
rorb
jl
cmpsb
sub
lahf
arpl
mov
or
xchg
div
pop
es
adc
popf
test
xchg
bound
sbb
scas
lret
xor
and
pop
insl
ljmp
pop
popa
jo
mov
mov
lahf
pop
mov
jmp
xchg
ds
ss
out
mov
mull
xor
in
adc
jbe
pop
insb
mov
lea
mov
adc
sub
dec
dec
test
jge
in
mov
mov
lahf
pop
mov
add
jl
push
and
xchg
fcompl
test
cmpl
pop
addr16
ds
loop
ffree
adc
push
mov
std
test
pop
cmp
scas
add
stos
arpl
je
and
clc
sbb
mov
ss
jbe
jns
lods
enter
shl
cmpsl
add
rcr
push
icebp
in
adc
pop
filds
sub
mov
lds
cli
addr16
ljmp
pop
jecxz
jne
push
mov
pop
push
insl
cs
xor
pop
cwtl
inc
adc
sti
data16
xchg
in
imul
add
in
sbb
cmp
push
adc
fiaddl
pusha
popf
mov
testb
xchg
shlb
sbb
in
cs
dec
push
fwait
sub
iret
icebp
push
arpl
jle
shlb
pop
mov
pop
xor
xchg
adc
inc
pop
mov
push
clc
sbb
test
setno
ja
or
add
incb
xlat
mov
xchg
outsl
push
in
jp
sub
mov
sub
fisubrl
divb
add
mov
fnstenv
movsl
mov
in
cli
sub
inc
imul
scas
iret
jnp
push
xchg
push
jecxz
jo
push
sbb
scas
push
mov
xchg
xchg
inc
or
xchg
sbb
cmp
cmp
outsb
cmp
sub
sbb
add
xchg
shll
inc
or
jne
out
hlt
imul
sub
into
push
int3
adc
shlb
int
fsub
mov
pop
cmpsb
sbb
inc
subl
xchg
aaa
jb
xchg
xor
shrl
test
inc
stos
outsb
jge
push
lret
pop
outsl
nop
push
ds
inc
adc
jno
pop
add
mov
mov
adc
pop
sahf
out
jle
lea
outsl
xchg
in
sbb
xor
jecxz
xchg
jecxz
lods
push
data16
mov
call
gs
lds
dec
xchg
cmp
and
jmp
dec
adc
push
xchg
pop
ror
pop
imul
les
inc
mov
scas
jno
daa
sbbb
aad
adcl
arpl
or
pop
push
roll
jl
cmpl
dec
jle
fbld
xchg
mov
and
nop
push
je
outsb
popf
or
dec
dec
cmp
repnz
fwait
jns
xor
lret
mulb
mov
mov
outsb
movsb
outsb
jle
mov
sti
aam
adc
add
sbb
test
lahf
jns
xchg
clc
pop
sbb
sahf
adc
inc
xchg
iret
mov
mov
cmpsb
and
push
or
arpl
fucomi
xchg
mov
pop
lock
pushf
push
outsb
sub
inc
ret
aas
lahf
inc
jbe
icebp
xchg
xor
js
lcall
popa
push
enter
add
jle
jp
lds
pop
ljmp
add
mov
lret
jl
shrl
xchg
repz
and
ss
div
cmp
sub
sbb
cmp
push
pop
fmul
jmp
ds
mov
fnstcw
or
shl
xchg
aaa
cwtl
hlt
pop
dec
repnz
dec
mov
mov
addr16
push
mov
cmpsl
loope
call
jne
lea
adc
xchg
cmp
mov
push
and
in
clc
xchg
ret
mov
std
mov
add
and
add
js
mov
pop
cmp
pop
mov
xchg
enter
dec
mov
daa
loopne
jge
mov
scas
inc
and
dec
dec
fisttpl
sub
leave
jne
xor
les
add
cmp
arpl
dec
sarb
mov
in
fists
lods
jnp
push
mov
adc
xchg
popf
addr16
jecxz
daa
xor
loop
sbb
in
rcrl
cmp
and
iret
jbe
mov
xlat
cmpb
push
sbb
clc
add
cltd
mov
js
roll
dec
mov
lahf
out
mov
mov
pop
pop
movsl
aaa
mov
lea
out
jno
fs
xor
addl
push
push
dec
xchg
xchg
popa
daa
lahf
stos
repz
jg
and
sbb
insl
mov
cmpsb
sub
xchg
int
push
jnp
mov
cmp
fiaddl
cmp
add
es
cmp
into
pop
and
jno
jmp
or
jecxz
and
fidivrs
xorb
in
cmp
sub
bound
bnd
add
lods
rcrb
sbb
movsl
in
scas
cmp
fcom
or
jmp
out
mov
addr16
adc
pop
lret
and
sbb
loope
push
and
cmp
pusha
aad
push
fsubrs
mov
icebp
cmpsb
inc
sbb
das
xor
dec
and
lret
mov
pop
jo
cmp
jg
sbb
mov
push
lods
cmpsl
clc
mov
jb
add
pop
frstor
pop
sub
rcrb
push
sbb
shlb
jbe
fisttps
subl
dec
push
insb
jge
and
nop
outsl
inc
lea
clc
adc
sbb
push
repz
inc
andl
aas
mov
std
ss
xchg
jb
mulb
mov
cmp
inc
es
insb
mov
pop
adc
icebp
jl
xorps
sbbb
out
sub
pop
pop
dec
stos
movsb
mov
addr16
adcl
xor
xchg
mov
sub
call
push
mov
and
inc
push
lods
aad
mov
cmpsb
div
sub
cwtl
cld
aas
add
dec
fcmovnb
adc
mov
pop
sub
or
test
andl
enter
cmpsb
fnstenv
or
xor
orb
pushf
cmp
cmp
enter
and
and
pop
xlat
or
jl
sbbl
lcall
icebp
and
or
cmp
adc
or
fnstenv
lahf
enter
dec
sbb
cmp
mov
sbb
push
dec
mov
pushf
push
add
jl
inc
cmp
sub
mov
movsw
icebp
sbb
cli
fiadds
jb
pushf
decl
popl
or
imul
jae
add
sbb
jmp
sbb
cpuid
adc
aam
dec
xchg
inc
push
sbb
test
insl
mov
js
xchg
adc
ja
inc
xor
aas
xor
mov
ss
lret
xchg
sti
addr16
sahf
jno
aad
and
mov
cltd
andl
mov
and
cltd
pop
insb
dec
add
test
inc
fs
mov
mov
add
scas
sbbb
in
jge
mov
mov
lock
clc
addr16
cmpl
ds
out
les
push
pushf
aam
jg
lret
sbb
fs
cmpsl
fdiv
cmp
dec
pop
test
ja
mov
loop
insl
movzbl
inc
stos
or
out
mov
mov
dec
cmp
sbb
cltd
stc
add
or
xor
ljmp
cmp
or
mov
xchg
adc
cmp
dec
push
call
mov
jle
adc
aas
clc
jmp
and
into
rcr
dec
dec
mov
sbb
aad
out
inc
xchg
push
jno
cld
sahf
sbb
scas
xchg
iret
addr16
mov
aas
sub
xor
fninit
jo
popa
pop
add
mov
lret
lods
les
out
or
cmpsb
enter
sbb
mov
cld
jmp
hlt
mov
imul
push
xor
jmp
mov
ret
rcrl
add
xlat
pop
jns
je
call
bound
test
aam
out
mov
jp
orl
arpl
loope
popa
mul
pop
jne
insb
inc
aaa
dec
sbb
cmpsl
or
and
and
or
fwait
lcall
jns
lea
mov
mov
out
xor
aas
pop
je
pop
inc
sub
lds
xor
or
pop
mov
arpl
and
lcall
xchg
xlat
cmp
arpl
movsb
aaa
jno
xlat
fisttps
pop
mov
ret
xchg
ja
loop
dec
roll
xchg
or
shll
dec
inc
scas
outsb
int
push
mov
xchg
mov
sbb
mov
cltd
xor
push
jno
jl
movsl
sbb
cmp
aad
jne
ret
mov
insb
or
or
andb
inc
jns
in
call
and
add
sbb
dec
push
rorb
adc
jecxz
cmp
lods
repnz
setae
lret
sub
iret
cld
xchg
push
pop
sarl
ja
fsubl
mov
jmp
jns
movsb
outsb
dec
push
xor
stc
test
lods
add
adc
fldl
in
inc
xor
test
inc
adc
add
sbbb
pushf
pusha
and
xchg
in
dec
lock
or
inc
and
and
dec
shrl
das
repnz
or
dec
fcmovu
adc
setp
and
mov
jmp
test
out
hlt
cmc
scas
xor
pop
pop
rorb
std
cmpsb
jp
jne
test
movsb
repnz
mov
addl
outsl
int3
andl
or
dec
popf
pushf
sahf
pop
gs
mov
les
xchg
rol
and
pop
shl
test
lret
mov
push
mov
aad
outsl
sarl
xor
fisttpll
mov
pop
pop
push
enter
push
pop
add
pop
cmp
mov
mov
pop
dec
push
insb
out
jne
push
jno
testl
nop
push
push
ja
fs
test
imul
xchg
mov
adc
jp
ret
jo
dec
xlat
outsl
orb
cmp
mov
xchg
jmp
pop
loopne
ret
and
push
xchg
popf
cltd
cltd
mov
out
ret
dec
pop
sti
mov
push
mov
xor
sub
xor
xor
out
ljmp
mov
in
divl
frstor
pop
mov
mov
push
push
add
mov
fcomps
cli
cld
mov
shll
fistpll
mov
daa
push
cltd
loop
jp
lea
clc
mov
inc
cmp
sub
mov
test
cmpsl
test
and
xchg
je
mov
sub
js
stc
lods
iret
aaa
jo
fidivrs
jge
cmp
inc
cmp
xchg
push
fildl
jp
inc
mov
jg
cld
sub
xor
xchg
int
adc
or
push
cld
lcall
pop
pusha
pop
add
xchg
push
pop
xchg
mov
cmpsb
xchg
adc
ficoml
loopne
mov
popf
or
jmp
movsb
aam
or
test
arpl
pop
cmpsb
jl
adc
jp
or
shrb
insl
mov
test
pop
cmc
inc
jo
push
movsb
ret
push
push
push
push
icebp
xlat
in
mov
mov
push
into
adc
xor
adc
out
push
sbb
mov
jb
xchg
insb
inc
aad
out
and
dec
mov
xchg
jbe
pop
jl
inc
pop
and
int3
nop
xchg
faddl
inc
pop
sub
mov
and
std
push
daa
scas
ljmp
dec
mov
scas
je
xchg
adc
add
test
divb
sub
xchg
in
add
sbb
push
dec
pop
cltd
pop
ljmp
xor
pop
lret
cwtl
adc
shrl
insb
fisttpll
rcrw
stos
movsb
sbb
mov
mov
xchg
imul
dec
mov
push
loop
test
arpl
mov
dec
push
popf
outsb
in
daa
mov
idivl
je
aad
pop
cltd
pop
sbb
mov
es
push
and
inc
enter
mov
mov
test
aaa
push
int3
shl
pop
test
dec
jb
rolb
outsb
cmp
add
pop
into
xchg
or
and
or
cmpsb
xor
mov
fldl2e
xor
add
xchg
daa
xlat
aam
aam
sbb
test
sub
and
pop
mov
in
cmp
push
xor
jns
mov
cltd
or
sbbb
push
imul
ret
cvttps2pi
push
and
lret
push
inc
mov
and
cmpsl
cmp
push
inc
jb
cmp
add
sbb
out
add
ja
sbb
dec
sub
mov
addr16
push
push
shlb
aad
in
fs
cwtl
jb
aam
xchg
inc
dec
add
inc
clc
mov
das
enter
ss
data16
and
and
push
cmp
and
dec
jle
icebp
adc
movsb
push
mov
sbb
jmp
lret
and
lahf
push
xchg
cmp
pop
pushf
dec
test
or
xor
push
mov
mov
xchg
mov
insb
scas
sub
cld
push
push
sti
mov
lea
popf
pusha
ret
cltd
jne
out
mov
out
sti
into
mov
sub
bound
testb
jl
scas
xchg
roll
notl
sub
add
lds
jbe
pop
cmp
lret
cmp
cmp
jo
add
pop
add
aad
popf
bound
int3
scas
test
icebp
add
cs
inc
cmp
mov
or
movsl
movsl
rclb
data16
mov
sub
mov
aam
test
dec
sti
andl
test
cmp
fcoml
test
or
cmp
shl
cs
push
mov
test
xor
ficompl
shrb
jge
fs
sbb
outsl
push
mov
xlat
movsl
loop
push
out
mov
jecxz
out
lds
shrl
jo
dec
mov
fisttps
jbe
lea
jmp
lods
pmullw
movsb
call
ret
pop
or
or
xorl
jle
ja
andb
aas
pop
lds
cmp
mov
jno
scas
out
test
push
xchg
pop
add
lods
icebp
inc
or
mov
inc
das
push
pop
bts
scas
scas
push
ficoms
das
stos
mov
aaa
stc
lea
loopne
mov
ljmp
pop
fsubl
cmp
les
jecxz
xorl
insl
mov
into
push
cld
insl
xor
cs
dec
repnz
fwait
ljmp
incb
test
enter
and
and
jb
xchg
cld
mov
mov
out
and
jno
push
loop
xchg
rol
std
dec
inc
and
pop
imul
scas
pop
and
jnp
jle
dec
cmp
xor
pop
jbe
cwtl
or
repz
xor
icebp
inc
xchg
xor
cmp
testb
movsb
add
filds
add
in
xchg
rcrl
das
cmp
adc
sti
lcall
push
lds
out
into
push
pop
push
aam
mov
ret
push
icebp
rcl
add
in
mov
cltd
pop
fnstcw
in
repz
add
jae
sbb
aam
xor
jmp
xchg
add
daa
jae
fwait
stos
cs
sbb
dec
push
mov
mov
xor
mov
jae
sbb
mov
repnz
stos
adc
insb
imul
aas
adc
xchg
das
enter
cmpsl
pop
flds
mov
sub
out
push
mov
int3
xlat
or
inc
scas
dec
mov
fwait
mov
loope
les
push
jmp
mov
mov
inc
sub
rcr
loop
sub
xchg
shrb
icebp
push
cmc
lret
shll
ficoms
movsb
dec
andl
push
mov
push
push
add
lret
xchg
xchg
adc
or
push
aas
loope
jbe
popa
aam
fwait
add
shl
push
popa
or
jp
push
data16
inc
sbb
arpl
add
cld
mov
mov
adc
cmp
daa
sub
sub
cmp
pop
lret
popf
push
jecxz
pop
adc
pop
adc
mov
aad
inc
push
pop
test
and
jbe
lret
fnstsw
adc
je
jle
adc
cld
sub
fsubl
dec
cs
sbbl
fiaddl
ljmp
lret
sbb
lods
ljmp
aas
jmp
fistpl
hlt
gs
or
lods
push
jo
repnz
sub
add
int
hlt
xor
lea
pop
aas
out
dec
cli
adc
mov
sbb
lods
ljmp
sbb
sti
adc
and
pop
inc
jo
imul
outsb
mov
ds
push
mov
pop
sub
cs
rcl
xchg
adc
jo
daa
jmp
cmp
ljmp
dec
add
popa
movsb
dec
push
push
mov
mov
mov
loopne
dec
inc
adc
shlb
test
scas
bound
testl
cwtl
cmc
mov
mov
mov
cmp
xor
pushf
mov
jo
cmp
aaa
ds
in
fdivrs
repnz
adc
inc
outsl
jno
mov
push
add
lahf
pop
mov
ljmp
pop
pop
lds
pop
loopne
stos
or
leave
xchg
pop
push
lds
mov
or
lods
add
lret
loopne
add
pop
inc
ss
pop
adc
xchg
mov
out
lret
cmp
or
cmpsl
xor
or
int
daa
mov
push
push
imul
lahf
ss
rclb
jle
rcrl
add
jbe
repz
jne
xor
dec
jg
cmc
cmpsb
data16
sti
xor
mov
sti
mov
mul
inc
add
mov
sbb
cmpsl
sbb
xor
sbb
jecxz
popf
mov
fwait
ret
jg
enter
negl
pop
cwtl
lds
aas
rol
sbb
jmp
loopne
je
jle
js
mov
fcomip
test
mov
jge
clc
hlt
cwtl
xchg
lock
cvtps2pi
lods
push
and
daa
adc
jbe
stc
cmpb
dec
rcll
insb
pop
jge
stc
insl
arpl
mov
mov
dec
or
subl
dec
jp
xor
sbb
in
das
xchg
aad
push
ss
scas
out
ret
mov
out
insl
or
jno
mov
sub
jge
sbb
nop
aad
lea
xlat
pushf
xorb
outsl
dec
xlat
int
enter
mov
outsl
mov
roll
add
roll
lret
in
pop
iret
and
loope
jl
testl
imul
lahf
insl
mov
in
cmc
adc
mov
xchg
xchg
ret
sbbl
mov
pop
sub
cli
jge
inc
add
xor
call
mov
scas
mov
xchg
es
pop
push
sahf
dec
xchg
cmp
js
loopne
mov
sbb
movb
lcall
adc
add
cmp
jno
push
and
xchg
lcall
ud0
add
or
fcomps
jnp
xor
cld
popa
fbstp
pop
testl
ret
addr16
call
test
sbb
and
aaa
aam
insl
adc
xrelease
cvtps2pi
sar
cmp
test
mov
xor
das
jg
add
outsb
push
cmpsl
mov
roll
adc
and
cli
fildl
inc
add
leave
add
fs
int
les
lcall
out
imulb
data16
cmp
xor
iret
add
xor
or
imulb
cmp
mov
push
jmp
xchg
or
das
pop
sub
jmp
sub
xchg
xchg
sub
jecxz
inc
and
loopne
and
push
fnstsw
xchg
add
mov
push
into
lods
mov
pop
and
push
mov
loope
sbb
loop
hlt
cmp
stc
push
inc
addr16
mov
push
push
cmp
jnp
add
orl
in
xor
aad
aas
jmp
mov
sub
push
ljmp
mov
lods
inc
jae
mov
dec
popf
inc
pop
ret
test
and
sbb
lahf
clc
int
pop
and
clc
push
mov
sub
sbb
bound
mov
sbb
into
enter
xor
xor
dec
adc
mov
lods
leave
sub
xor
mov
ja
ds
or
or
mov
int3
jecxz
jmp
push
jne
in
fincstp
sub
adc
daa
dec
jmp
cwtl
push
bound
mov
jne
test
dec
cs
fnstcw
inc
mov
mov
icebp
inc
int3
push
repnz
js
ficoms
mov
std
mov
pushf
xchg
in
insl
sbb
or
add
mov
push
sbb
jge
in
xchg
sbb
xlat
mov
and
call
rcrl
fs
mov
pop
mov
clc
cmp
lahf
pop
lods
movsb
adc
addb
mov
cmp
or
xchg
sbb
or
iret
sub
lods
cs
sbb
rorl
inc
sbb
dec
lock
xchg
js
push
mov
in
sbb
shl
mov
jne
leave
aaa
into
push
xchg
jl
push
movsb
mov
loopne
push
add
leave
xor
iret
pusha
and
das
ret
jb
inc
dec
mov
or
jb
movsb
ljmp
fbld
sbb
adc
insl
jl
test
dec
andb
cmp
xchg
xchg
ja
sarb
lods
mov
push
sub
jbe
xor
lods
mov
cmpsl
in
cmp
mov
pop
push
mov
xor
xchg
jg
inc
std
cmp
fisubrs
push
jo
iret
fisubrl
insb
lcall
aaa
rcl
sbbl
dec
lea
cmp
pushf
xor
push
pop
mov
imul
add
jp,pt
mov
push
mulb
nop
jae
sahf
lret
jecxz
inc
mov
test
mov
les
jecxz
mov
dec
pop
add
lret
jns
mov
inc
inc
sbb
daa
xchg
lods
outsl
repz
sbb
and
adc
shll
mov
jg
sub
adc
out
adc
adc
popf
je
js
mov
mov
lret
push
mov
dec
insb
notl
cmp
adcl
jno
out
repnz
loop
lret
cmpsl
dec
pop
sbb
push
fadds
mov
loop
jno
shll
imul
pop
add
dec
cwtl
dec
pop
cmp
and
outsb
std
call
cwtl
je
sbb
mov
stc
jne
or
stos
outsl
sahf
int
outsl
popf
lods
adc
jg
popa
sbb
jne
jmp
inc
movb
ret
adc
jle
jp
orl
into
jl
mov
call
or
out
divb
movsl
lods
scas
sbb
inc
and
jge
mov
jg
std
into
mov
popf
mov
sub
ret
sub
pop
mov
es
lret
stc
pop
cmp
xor
xchg
fcmovne
repz
and
dec
out
ljmp
dec
push
jle
popa
sub
hlt
je
jns
rcrl
and
aad
insl
shll
into
jne
sub
cmp
jle
xchg
mov
cmp
and
mov
adc
mov
mov
movl
cld
es
testl
stc
mov
insl
in
fcmovnu
icebp
xchg
sti
loop
pop
sbb
lods
aas
outsl
xlat
lods
xchg
adc
cmpsl
popf
adc
lret
scas
mov
sub
imul
lds
out
ss
ret
jo
xor
ret
inc
add
jmp
loopne
mov
xchg
daa
cmpsb
clc
into
fiaddl
imul
xchg
push
nop
sub
mov
mov
or
in
lret
or
in
lods
adc
sbb
test
js
jmp
orl
and
popf
insl
sub
mov
jbe
mov
adc
test
loopne
push
inc
popa
jp
std
outsl
inc
cmp
sti
aas
cld
add
test
and
xchg
jo,pn
dec
shr
jns
fstpt
loope
aam
dec
inc
cld
lahf
mov
push
jecxz
sahf
loopne
clc
jecxz
add
nop
pop
pop
inc
in
adc
insl
mov
xchg
inc
in
or
ret
sub
loope
and
loop
leave
out
and
sbb
push
dec
arpl
mov
insb
not
testl
or
jge
push
orl
iret
inc
mov
fwait
jmp
outsl
inc
cmp
test
push
sbb
and
fnstcw
push
pop
jns
xchg
and
mov
mov
mov
lret
push
aas
pop
daa
test
mov
push
add
stos
ljmp
arpl
lods
repz
sahf
xor
push
das
push
ret
push
adc
jne
mov
ss
xchg
cmp
cmp
sbb
shrb
cwtl
and
cli
sub
popf
dec
je
push
ret
push
addb
cwtl
xchg
dec
xor
ret
push
xor
push
cld
push
and
cmp
mov
movsb
xor
mov
dec
push
aam
adc
push
imulb
popf
fisttpl
mov
jo
es
xchg
int3
shlb
fbstp
in
xor
xchg
aas
cmc
js
mov
in
into
std
cmp
bound
cmpb
add
jne
test
scas
popl
bound
xor
sub
add
fcomps
xchg
add
inc
test
test
scas
add
sbb
outsl
leave
xchg
inc
test
mov
xor
mov
in
cli
pop
push
cld
sahf
jg
outsl
adc
adc
cltd
lea
out
xor
xchg
fwait
call
pop
aas
cmp
mov
inc
dec
xor
adc
lods
jg
int
adc
cli
das
mov
outsb
pop
nop
or
pop
jl
fwait
ds
out
pop
data16
push
test
sbb
pop
pop
clc
hlt
lods
lret
inc
add
add
pop
push
dec
pop
adcb
cli
int3
or
cld
iret
mov
enter
nop
std
shrb
sub
dec
insb
xlat
or
add
jl
bnd
jl
sbb
fstl
mov
iret
jecxz
outsb
ffree
mov
jle
cmp
in
mov
xor
das
mov
inc
sbb
xchg
call
adc
sahf
pop
cmpsl
pop
mov
loopne
push
inc
daa
push
mov
jae
pop
cmp
les
lds
xchg
loope
aaa
icebp
gs
xor
mov
test
jno
std
add
xor
in
ret
test
mov
push
push
sahf
cmp
mov
and
ss
cmp
negl
adc
push
mov
jb
int3
in
xchg
add
test
int
mov
mov
or
fwait
dec
cmp
push
cmpsb
pop
inc
push
mov
jl
in
call
jl
addr16
pop
scas
das
je
movsb
xor
pop
pop
pop
ret
and
adc
inc
add
inc
add
fcoms
xor
mov
adc
or
adc
mov
shr
dec
repnz
into
es
mov
in
flds
iret
xor
push
xchg
repnz
cmpsl
xchg
lds
movsb
andb
test
mov
xchg
mov
imul
scas
mov
pavgb
mov
pop
pop
sarb
or
mov
test
aaa
in
jmp
mov
test
pop
test
in
pop
mov
inc
xchg
push
inc
clc
arpl
mov
mov
cmpb
lret
sub
jmp
pop
lods
divb
icebp
add
push
cmp
mov
pop
pop
mov
pop
stos
imul
stc
fstps
flds
div
jmp
dec
add
nop
lret
inc
push
in
or
pushf
jle
jl
mov
xchg
test
adc
cmp
xchg
fstp
aad
sub
xor
mov
jl
gs
cli
push
clc
jnp
push
outsb
inc
dec
ret
inc
xor
sahf
mov
sbb
push
sbb
pop
jecxz
mov
add
and
aam
in
jp
imul
mov
push
roll
mov
pop
cmp
aad
les
fwait
mov
les
dec
cwtl
sti
fcomp
mov
xchg
sbb
or
mov
cmpl
out
lods
or
shll
mov
mov
mov
pushf
ret
inc
fs
popf
leave
cmp
cmp
pop
subb
pop
push
or
loopne
fnstsw
dec
ss
aad
loope
mov
adc
jnp
mov
push
adc
cs
pop
or
add
xor
cmc
sub
jg
ficomps
pusha
dec
pop
cmpsb
push
lods
test
daa
fcompl
push
dec
ljmp
ret
adc
adc
push
sahf
fimuls
xchg
ds
pop
mov
cltd
push
jg
in
notb
jns
dec
add
jge
mov
inc
shrd
mov
pop
sbb
mov
inc
add
mov
push
fstl
and
pop
rcrb
subb
and
lds
sbb
fwait
dec
lret
sbb
mov
into
test
hlt
add
arpl
rcrl
jg
or
ficoml
push
inc
cld
lock
fidivl
sbb
sarb
fcmovne
fcomps
xor
data16
stos
loop
std
inc
test
add
sahf
mov
outsl
xchg
push
aaa
fsubr
sub
call
mov
ficompl
cmpsb
add
pop
mov
jg
hlt
std
clc
test
outsb
dec
sbb
das
lods
pusha
push
dec
faddl
ror
pop
push
mov
sbb
test
les
popf
sbb
inc
or
fnstenv
mov
movsl
xor
dec
mov
aas
mov
les
xor
imul
sbb
cltd
mov
cmpsb
adc
or
add
jmp
movsb
and
testb
leave
xchg
add
or
imul
leave
dec
push
lahf
nop
insl
lret
add
xor
xor
outsb
gs
pusha
sub
cwtl
inc
leave
xchg
inc
sbb
andb
jmp
sbb
pop
aad
inc
dec
ficoms
std
mov
jg
jp
call
jmp
xchg
mov
daa
push
mov
mov
mov
ljmp
das
push
push
xchg
shll
popf
sbb
or
mov
push
inc
push
jge
outsb
xlat
dec
sbb
push
loopne
jmp
or
imul
loopne
mov
pop
mov
xchg
lahf
pusha
mov
outsb
sbb
add
data16
mov
push
aas
xchg
push
sti
and
divl
mov
nop
jne
mov
jle
xchg
rsqrtps
cld
pop
dec
sub
cltd
lock
jbe
inc
aad
or
insl
xor
jge
lcall
dec
xchg
cmp
aaa
add
scas
lods
xchg
test
jge
mov
cs
dec
add
enter
leave
sub
popa
loope
ret
ds
xchg
loope
push
cmp
fs
out
and
jbe
jo
enter
mov
arpl
cmpsl
rorl
ljmp
out
test
jg
xor
fdivs
push
js
iret
testl
push
mov
iret
cld
push
loope
sbb
sub
imull
push
icebp
decl
mov
mov
xor
outsb
leave
xchg
push
test
mov
rcrb
add
push
lahf
mov
xabort
mov
mov
bound
nop
push
xchg
mov
mov
add
xchg
cmpl
cli
fbstp
jb
mov
adc
pop
jnp
inc
cmpsl
imul
xor
mov
testb
mov
loope
pop
fmull
call
mov
in
mov
loop
cld
or
clc
and
daa
fdivrl
mov
push
pop
mul
cmp
xchg
pop
dec
sub
into
mov
add
les
cmp
ds
ss
fdiv
cmp
xchg
jp
pop
add
in
call
aam
xchg
add
call
inc
ret
mov
mov
adc
dec
roll
cmp
xlat
lea
imul
es
shll
dec
and
push
add
inc
jge
scas
sbb
pop
in
inc
dec
mov
les
mov
ror
mov
lock
sbb
sub
cli
dec
rclb
and
aaa
push
xor
inc
mov
jecxz
cmc
int
fidivrs
mov
add
inc
jbe
mov
iret
mov
lret
outsl
mov
sbb
jne
sbb
or
and
fmul
push
jmp
gs
mov
mov
stos
adc
jo
scas
jecxz
jnp
fbld
inc
lret
movsb
mov
pop
repnz
add
icebp
out
push
icebp
je
sub
mov
popa
push
mov
adc
xrelease
movsl
add
jl
adc
mov
push
xchg
movsl
and
or
pop
and
loope
in
lods
in
repnz
xchg
push
xchg
jge
xor
add
mov
cmp
mov
add
insl
aaa
stos
push
push
imul
ss
into
addr16
sarl
xor
cmp
mov
inc
mov
adc
jecxz
mov
mov
aas
mov
hlt
pop
sub
cwtl
stos
xchg
gs
push
mov
jns
pushf
xchg
mov
adc
inc
push
mov
aad
pop
inc
pusha
xchg
fpatan
sti
jne
pop
sub
or
fisubrl
jne
test
rcr
jle
inc
fdiv
test
sbb
decl
adc
add
xchg
inc
cmp
mov
dec
insb
jae
mov
ret
inc
mov
cld
scas
movsl
addb
les
lods
and
mov
test
js
pop
in
sub
scas
das
out
dec
sub
or
jno
ljmp
pop
lods
pop
imul
subb
sub
sbb
mov
inc
add
pop
fwait
mov
out
xchg
pop
incl
ja
pop
into
jb
in
bound
in
inc
and
jge
test
jecxz
cmc
mov
jae
loopne
add
sarl
call
das
mov
out
jnp
inc
cs
adc
push
mov
mov
ds
cmp
fcomi
lret
sub
xchg
mov
pop
mov
push
in
imul
jg
idivb
stos
xchg
jo
sbb
pop
mov
push
ljmp
inc
xlat
ret
cld
flds
push
mov
add
fnstenv
jnp
jne
sub
xor
icebp
mov
pop
int3
and
lret
pop
jae
xchg
lret
shr
push
pop
icebp
mov
or
cwtl
mov
push
out
inc
fstl
jecxz
fs
out
pop
fstp
icebp
dec
push
cmpsl
pop
xorl
cmpsl
ljmp
enter
mov
jmp
xor
pop
fisubs
into
insl
popa
jge
cmp
test
dec
and
test
pop
cmp
sbbl
out
gs
test
mov
sub
xor
or
das
mov
push
int3
and
clc
lock
pop
or
xchg
or
iret
int
jno
push
push
xor
mov
cmovns
cmp
xlat
xchg
sti
and
jg
rcrb
push
call
mov
mov
mov
in
aam
ret
pop
xchg
lods
sub
in
push
mov
mov
lods
or
dec
jg
sub
outsl
sub
aad
sub
int
test
sbb
jp
pop
lahf
lret
bound
into
xchg
push
ret
cmp
or
mov
aas
push
xor
add
repz
adc
fisttps
aam
popaw
mov
ja
call
fsubrs
cmp
push
or
pop
dec
jecxz
mov
mov
xchg
cltd
push
push
ret
out
cmp
mov
rcrl
xchg
jnp
scas
mov
lock
cmp
pop
sar
jmp
dec
pop
mov
fists
jge
call
xchg
or
inc
adc
in
pop
lcall
cmp
jecxz
arpl
pop
xchg
or
cmc
scas
leave
inc
mov
jnp
mov
mov
jmp
stos
cwtl
push
je
jg
adc
outsb
jo
xor
cltd
dec
sahf
cwtl
jno
mov
push
lock
add
icebp
pop
sbb
mov
icebp
loop
fwait
jg
push
out
push
int
xor
xor
jbe
and
mov
mov
in
add
dec
mov
pop
adc
add
lock
rcrb
ss
fiadds
jmp
out
sbb
test
int3
or
pop
pop
sbb
out
inc
mov
fidivrl
clc
inc
cmp
or
lock
lret
test
insl
mov
mov
movntps
fiadds
lret
aad
xchg
push
lret
or
fisttpl
mov
shll
push
push
daa
stos
test
scas
ret
sahf
push
hlt
popa
dec
xor
lods
push
mov
mov
adc
cs
dec
in
std
aam
xor
pop
jno
push
and
repz
mov
dec
lret
cmp
scas
dec
pop
scas
xchg
fidivrs
mov
mov
cwtl
stos
lds
mulb
enter
mov
adc
cmp
and
sbb
sbb
shll
aaa
and
mov
sbb
mov
dec
sub
mov
jbe
jnp
test
out
jl
lods
cwtl
push
test
fwait
jbe
fwait
xchg
int3
gs
xchg
in
mov
xchg
fisubrl
cmpsb
call
cmpsl
mov
mov
lods
or
add
jp
add
aam
popa
fistpl
or
leave
pusha
mov
push
fcoms
sbb
xchg
out
shlb
and
sub
insl
loopne
adc
jnp
loop
cmp
mov
je
adc
test
lret
pop
sub
mov
or
mov
mov
stos
jne
notl
mov
pop
in
stos
cmp
adc
aaa
push
ss
cmp
outsl
shll
xchg
imul
jbe
addb
jnp
adc
mov
daa
sbb
rorl
lahf
fnstenv
cwtl
pop
push
movsl
lret
lods
mov
pusha
ss
hlt
adcl
push
push
in
inc
xchg
std
in
adc
js
xor
lock
jb
lds
out
inc
inc
ret
ret
mov
jp
imul
nop
xchg
in
jnp
inc
fstpl
and
cmp
roll
iret
lea
mov
stos
arpl
xchg
xor
icebp
mov
cmpsl
mov
sbb
nop
mov
cmc
ss
insl
fucomip
mov
out
shll
pop
fs
movsl
pmulhuw
int3
dec
sti
inc
cmc
cmp
pusha
inc
stc
js
mull
test
xor
aaa
stc
inc
pushf
sarb
mov
insl
loope
jl
adc
add
test
sbb
and
out
inc
mov
shl
sbb
fcoms
sub
bound
sbb
insl
gs
cmp
mov
out
and
inc
movsb
lahf
sub
mov
movsl
sub
mov
subb
ss
dec
sub
lea
movsb
inc
mov
xor
xchg
clc
test
inc
xchg
sub
daa
xor
rorl
add
ds
xor
pop
mov
mov
mov
aas
hlt
xchg
xor
scas
les
in
in
mov
fwait
jns
sub
jnp
dec
adc
negl
lds
xorb
lock
decl
pop
shlb
clc
xor
jno
fmuls
cmp
adc
push
es
fs
mov
imul
js
inc
scas
das
mov
and
in
sti
or
and
cmp
ja
push
or
rcrb
lea
aas
sub
cmp
and
xchg
inc
mov
mov
inc
mov
add
cmpsl
jae
push
ja
pop
push
mov
add
inc
orb
cmp
add
lret
clc
mov
aas
push
sbb
cli
inc
xchg
movsb
pop
xor
repnz
lea
pop
data16
fwait
push
test
stos
jno
sub
ja
ret
fcmovu
pcmpeqb
sbb
cwtl
dec
or
setle
dec
sub
cmp
int3
push
or
and
sahf
add
je
xor
fimuls
addr16
mull
jp
add
lahf
jle
scas
adc
out
lcall
mov
add
jmp
dec
and
aad
cs
cmp
inc
sub
jge
jb
rcrb
cltd
shlb
mov
sub
aad
loope
and
stc
sbb
fmull
mov
hlt
movsl
xchg
mov
icebp
dec
jno
popl
xor
adc
je
mov
bound
inc
test
fstpl
jns
xchg
xor
dec
fmull
inc
lret
xchg
xor
ret
movl
out
test
pop
mov
mov
mov
lds
or
cltd
clc
cmpsb
mov
es
add
test
enter
jp
mov
add
loop
popa
cmpsb
jbe
lahf
inc
leave
gs
test
and
movsl
jmp
jb
pop
fs
imul
repnz
movsb
out
insb
scas
xor
cmovs
mov
mov
repnz
push
inc
ret
jl
push
fcoms
jg
mov
mov
add
into
in
fdiv
scas
dec
arpl
xor
xchg
mov
lds
dec
adc
lods
xchg
jp
or
xor
pop
cwtl
sbb
cmc
cmpsb
movsb
adc
dec
or
or
mov
sbb
mov
pop
add
out
mov
test
dec
mov
mov
les
outsb
or
add
shrl
cwtl
sub
lds
and
or
adc
sbb
xchg
fiaddl
pop
mov
inc
jl
dec
push
adc
jns
and
hlt
push
pusha
std
xor
mov
adc
stos
push
pop
xor
xchg
repnz
push
xor
or
push
ljmp
jo
out
pop
jnp
mov
negl
cmpsl
insl
jecxz
out
out
sbb
fiadds
xchg
pop
mov
mov
aad
xor
ja
sub
test
mov
jne
pop
jmp
rorl
stc
cmp
cmpsb
lock
sbb
pop
out
cltd
push
testl
leave
inc
icebp
out
mov
xor
mov
clc
call
es
mov
loop
xlat
lret
xor
mov
jb
clc
test
addr16
and
add
add
sub
out
mov
push
sbb
xor
sbb
dec
adc
lds
push
fistps
mov
insl
aad
jmp
movsb
fdiv
or
and
fists
xchg
mov
adc
jg
push
in
push
daa
out
and
ljmp
xlat
testb
sbb
das
andb
lods
hlt
xlat
sahf
or
out
jnp
div
out
cmp
aad
mov
adc
imul
mov
push
vpminub
and
xor
xchg
jmp
jle
xor
sub
fsubs
shl
pop
mov
orb
orb
xor
insl
scas
sbb
dec
add
mov
das
mov
pop
xchg
and
shl
jle
push
loopne
mov
adc
rcll
scas
dec
hlt
cli
mov
sahf
das
and
mov
jns
jecxz
enter
int
aas
daa
add
mov
js
rcll
xchg
mov
out
push
adc
sub
outsb
pop
pushf
inc
mov
loop
shrb
fisttps
or
xchg
or
cs
cmpsb
cltd
aas
sahf
jle
scas
pop
cmp
add
mov
lcall
push
sbb
inc
testb
mov
ret
imull
leave
stos
jae
mov
jge
cwtl
push
rcrb
or
or
fistpll
es
adc
scas
push
mov
xor
add
inc
cmp
xchg
leave
jecxz
test
dec
repz
lret
add
andb
loopnew
pusha
inc
pop
add
es
lock
add
xchg
popf
push
cmp
int
xchg
ljmp
push
add
xchg
sarb
jns
jecxz
rep
int3
nop
out
js
sbb
int
mov
insl
pusha
mov
xchg
test
xlat
out
mov
mov
cmpl
pop
fcmove
push
vpsubusb
mov
xor
mov
mov
dec
mov
mov
xorl
imul
dec
aaa
or
imul
push
test
cmp
pop
xchg
push
add
jnp
pop
lds
sbb
mov
or
add
das
adc
out
jno
inc
jne
push
into
cs
ret
in
daa
push
out
in
int
push
loopne
lods
out
imul
xor
push
jns
lea
or
sti
mov
lret
mov
outsl
pop
push
nop
push
shrl
sub
mov
push
sbb
imul
fwait
dec
cmp
mov
sub
mov
mov
xchg
pushf
or
lds
pop
sub
inc
xchg
and
xchg
mov
mov
push
sbb
mov
jg
inc
push
mov
push
dec
cmp
or
xlat
and
xor
push
sbb
loopne
loop
xorb
dec
mov
scas
jb
inc
lods
mov
cmpsl
mov
fidivrl
test
mov
add
imul
cmc
stos
mov
dec
or
mov
jo
add
jae
mov
inc
sbb
ror
dec
dec
xchg
gs
stos
lahf
pop
jnp
in
mov
fdivs
pop
mov
int
and
aam
mov
insb
test
les
add
gs
dec
mov
bound
sub
loop
test
jbe
nop
mov
dec
inc
rcll
aam
ss
cmpsb
push
test
cs
mov
add
jge
ljmp
mov
call
rcrl
notl
jle
insb
sub
mov
es
dec
enter
add
nop
push
push
insb
fnsave
fmull
cmpb
xchg
push
shl
popf
or
jne
iret
pop
add
dec
ja
xor
repnz
push
sbb
andl
mov
imul
cmp
pop
pushf
mov
mov
add
xchg
lock
ret
repz
dec
faddp
lret
pop
jle
inc
mov
test
sti
sbb
lss
pop
or
js
outsl
or
iret
clc
lret
mov
adc
gs
mov
mov
hlt
scas
scas
xor
inc
push
sarb
add
pop
lock
add
push
ss
addl
mov
mov
into
lret
sbb
jmp
lods
cwtl
adc
shlb
out
inc
jbe
lods
bound
mov
out
sub
cmp
mov
aad
dec
scas
lret
sbb
insl
mov
call
gs
and
jno
push
xor
cmp
addb
push
pop
fnstcw
insl
mov
jo
adc
stc
test
inc
mov
xchg
push
es
fidivl
lods
inc
outsl
xchg
ret
movsl
sbb
shll
xor
les
movsl
add
cmpsb
fidivs
pushf
rorb
out
call
adc
into
xor
imul
mov
fldenv
xchg
jmp
jmp
fs
add
loop
adc
imul
push
lds
cmc
cli
and
pushf
or
pop
xchg
int3
inc
ljmp
lret
xchg
jbe
scas
rcll
mov
inc
scas
mov
or
pop
pop
add
aam
sbb
sahf
lea
fcompl
imul
adc
out
stc
lods
sbb
or
mov
enter
mov
jnp
js
jg
jle
add
inc
inc
mov
or
imul
arpl
mov
mov
sub
lret
ds
or
mov
out
js
and
adcb
dec
clc
jmp
push
or
xor
in
addr16
popa
or
sbbl
lret
popa
dec
push
sub
test
test
idivb
pop
and
push
stos
inc
sub
jo
pop
sub
mov
mov
and
in
fdivrp
imul
mov
cmpsb
cmpb
cmpsl
sti
enter
cmp
xor
ficompl
sbb
fsts
lock
clc
incl
lret
jmp
mov
push
jno
xchg
mov
mov
push
sbb
repz
sbb
push
shlb
adcb
repz
mov
aad
rorb
xlat
jne
mov
pushf
sbb
sarl
lcall
mov
ljmp
pop
and
mov
int3
and
sbb
xor
js
int
or
int
cmp
addr16
imul
mov
ljmp
push
fldt
je
inc
jge
add
push
popa
pop
xor
stos
ja
movsl
popf
xchg
pop
xchg
cmp
mov
pop
std
xlat
test
int3
ja
pop
out
push
aaa
cmp
xchg
jbe
pop
add
mov
mov
pop
pop
add
je
ds
push
cmp
arpl
addl
lcall
addr16
xor
adc
sub
pop
jp
mov
outsb
in
xlat
inc
test
jle
ja
in
je
ja
in
mov
and
stos
imul
or
xchg
ds
add
test
mov
test
ds
sbb
scas
pop
cmp
adc
xchg
adc
arpl
repz
fists
test
cmc
mov
mov
mov
outsl
cmp
pop
xor
dec
int
or
cli
jmp
add
mov
cltd
jbe
add
xchg
xorl
push
push
fldt
loope
cld
aaa
stos
pusha
or
dec
mov
inc
mov
jmp
sub
fisubrs
scas
scas
inc
enter
filds
data16
mov
jge
mov
out
mov
mov
sub
js
xchg
xchg
scas
and
mov
sarl
mov
mov
dec
imul
cmp
cmp
push
sbb
sub
cmp
sbb
test
mov
add
movsb
or
push
fisttps
ror
pop
sub
mov
mov
jg
sub
test
jle
jnp
lret
mov
dec
mov
clc
aam
ja
rorb
int3
mov
jno
ljmp
repz
push
dec
push
mov
das
leave
data16
push
call
rorb
mov
lods
enter
data16
mov
stos
cld
les
fcomps
pop
xchg
pop
and
xchg
push
bound
mov
pxor
shr
pop
xchg
fsubrs
or
scas
je
push
sets
xor
imulb
mov
push
daa
aaa
pop
icebp
aaa
mov
test
xor
aad
lahf
mov
xor
cmp
jo
insl
inc
outsl
xor
pop
ss
xchg
adc
loopne
adc
inc
or
mov
std
aam
jl
repnz
mov
inc
inc
leave
pop
lcall
mov
scas
adc
push
xchg
pop
push
pop
fsubr
sbb
sub
or
je
mov
cmp
aam
insl
pop
dec
shlb
jecxz
lss
mov
sub
je
imul
adc
test
repz
into
mov
xor
dec
lahf
pop
sub
xor
scas
xchg
nop
xchg
fildl
xchg
push
pop
inc
stos
sub
fwait
outsb
xchg
xchg
push
xor
xchg
mov
mov
push
rorb
stc
pop
or
jmp
mov
clc
jmp
xchg
push
pop
xor
dec
mov
cmp
push
lret
repnz
call
inc
adc
insl
cwtl
push
adc
mov
fsub
push
shlb
or
add
in
aad
sub
sbb
mov
gs
jne
inc
mov
push
add
shrb
ja
jnp
or
mov
adc
jnp
jl
shlb
pusha
popf
and
mov
cs
icebp
inc
iret
jbe
rep
mov
add
enter
in
out
sti
add
cmp
mov
cmp
inc
xchg
pop
mov
push
adc
mov
gs
jo
cli
fimuls
xchg
scas
mov
imul
xor
addr16
jecxz
repnz
popf
jp
rorb
add
adc
fcmovnbe
add
popf
cmp
in
adc
mov
pop
sbb
jle
or
inc
push
xor
xlat
movsb
xor
fwait
mov
movsb
pop
cmp
sub
jns
aaa
arpl
imul
movsl
ret
cltd
jmp
dec
scas
flds
push
sarl
mov
jge
aas
xor
fldcw
cmpl
mov
lcall
add
cwtl
je
or
outsb
xchg
fcompl
sti
iret
sahf
cltd
sbb
out
test
lds
mov
lret
adc
movsl
sbb
inc
mov
xchg
adc
or
mov
in
gs
scas
push
rolb
loope
subl
outsb
adc
jbe
int
lea
repnz
jp
ret
fiadds
mov
ljmp
fcoml
pop
mov
jnp
jns
add
mov
or
cmp
ds
xor
sarl
push
jmp
inc
cmc
mov
sar
push
sub
pop
mov
int
push
int3
cmpsb
jecxz
or
js
repnz
cmovnp
mov
mov
shlb
xor
pop
inc
cld
dec
aad
dec
and
fs
dec
ret
cmp
xlat
in
frstor
out
xchg
jp
add
push
mov
loop
pusha
sbb
outsb
dec
in
xchg
xchg
frstor
pop
ja
xlat
lea
xchg
loop
frstor
cmp
dec
ds
test
mov
jne
int3
mov
add
aad
fsts
stos
jae
rcr
inc
and
cmp
sbb
ret
out
rol
push
inc
jge
push
sarb
sbb
popa
dec
nop
lods
mov
movsl
js
imul
and
roll
cwtl
or
mov
aaa
mov
adc
sbb
data16
fdivl
insb
xor
jno
out
out
pop
jo
fnstcw
imul
mov
lds
or
push
stc
xchg
jnp
je
lds
cmp
pop
and
out
fwait
cmp
dec
stc
cmpsb
pop
push
xchg
gs
add
test
jae
lods
sbb
aaa
mov
nop
lret
add
call
daa
or
mov
lock
xchg
test
in
in
mov
jle
aam
adc
and
pushf
and
xchg
push
das
fisttpl
hlt
in
sbb
imull
inc
lret
sbb
pop
add
inc
sbb
imul
mov
add
ja
pop
jp
inc
xchg
mov
or
fistps
pop
scas
dec
sbb
clc
mov
and
xlat
insb
mov
and
jecxz
ja
pop
cs
repnz
nop
orb
jns
insb
dec
lret
movsl
es
fisubrl
dec
inc
push
stos
aad
pusha
xor
shrb
clc
test
xchg
jae
fsubs
in
mov
dec
cmp
cmpsl
or
test
xchg
pmaddwd
mov
jbe
push
sbb
mov
pop
outsb
pop
jl
ret
cmpb
jb
mov
and
add
mov
adc
enter
andl
xchg
dec
xor
scas
jecxz
rol
adc
pusha
stos
mov
add
insl
mov
push
repnz
sbb
je
test
adc
addr16
scas
mov
mov
sbb
cmpsl
adc
loop
mov
mov
mov
outsl
popf
mov
into
in
ds
and
iret
test
xchg
jmp
int3
das
or
adc
add
rcl
cmpsb
xor
out
pop
fs
adc
xchg
and
int
mov
jecxz
push
jmp
xor
xchg
dec
jmp
jge
add
xor
hlt
inc
mov
dec
sbb
jno
mov
jo
adc
aas
enter
fldl
imul
outsl
repz
test
pusha
or
or
dec
pop
mov
cmp
mov
xchg
add
rcrl
push
mov
int3
sub
mov
jae
fucomp
mov
pusha
lock
sub
jb
inc
cld
jb
cld
adc
insb
das
add
cmp
fmull
js
adc
sub
shrl
and
fcompl
sub
and
jo
imul
mov
push
xchg
imul
jnp
cmp
xchg
xchg
sub
mov
in
push
inc
push
inc
push
jle
cmc
cltd
rsqrtps
cmp
dec
cwtl
mov
xchg
cltd
pop
cld
push
subb
add
mov
iret
lock
int3
push
add
out
sarl
mov
mov
or
cmp
or
decb
faddl
dec
into
fidivrs
sbb
push
popa
enter
inc
push
or
mov
or
scas
xor
push
mov
cmp
lahf
mov
add
lahf
sahf
mov
fcmovnbe
and
cld
pop
xchg
test
mov
outsl
lock
xor
in
movsl
bound
pushf
sbb
fs
push
cmc
mov
xchg
ss
std
ss
sub
push
lea
xchg
dec
inc
and
pop
les
jp
pop
adc
push
rorb
out
pushf
mov
cmp
mov
cwtl
inc
xchg
movsb
xchg
add
lea
int
cmp
rclb
xchg
xchg
mov
out
mov
adc
cmp
pop
subb
push
pusha
lock
sbb
ss
divb
pop
das
pop
std
mov
jmp
std
ror
adc
lret
ja
jbe
pop
push
sbb
arpl
cmp
lahf
in
dec
add
push
cmp
fidivrl
test
pop
pusha
sub
push
es
test
fcmovnb
sub
mov
arpl
fwait
dec
out
xor
mov
test
pop
popf
cmpsb
je
clc
call
out
cmp
xor
add
sub
in
dec
in
aam
adcb
mov
das
popa
inc
pop
subb
dec
mov
call
ljmp
inc
push
fisttpl
sti
xor
cltd
pop
dec
and
sbb
xor
push
jbe
mov
sbb
stc
cmc
dec
cmp
in
cmp
js
sbb
leave
cmp
dec
xor
in
push
and
out
sbb
and
push
push
pusha
sub
lds
stos
jo
dec
test
mov
push
sub
jns
in
lcall
imul
cmpsb
xor
jp
lds
and
push
mov
pop
mov
xor
sbb
loope
ljmp
mov
ret
inc
mov
arpl
shll
testl
out
or
loop
push
pop
mov
mov
mov
arpl
inc
and
jge
xchg
xchg
test
roll
enter
lcall
xor
out
fiadds
or
stc
inc
cmp
stc
jns
std
or
pop
and
push
push
arpl
in
pop
cmp
push
jecxz
jge
in
add
push
cmp
push
dec
xor
les
repnz
cmpsb
xchg
xchg
cmp
and
shrb
rcrl
imul
mov
sbb
jns
or
js
inc
loope
pop
arpl
subl
jl
das
shrd
push
pop
pop
cli
or
iret
int3
test
mov
pop
js
enter
or
push
dec
xor
pushf
or
or
popa
pop
out
test
int
inc
andb
mov
popa
adc
xor
cmp
popf
add
mov
and
add
or
movsl
fcmovnbe
push
xor
or
or
jb
decl
sbb
dec
jp
pop
xor
outsl
mov
cltd
ret
std
and
jl
cld
stos
hlt
cli
ds
ljmp
nop
jo
push
jnp
xchg
mov
ret
in
sub
out
push
push
out
fmull
cmc
cmp
push
cltd
test
lds
outsl
push
jl
push
xchg
cmp
adc
inc
inc
adc
sbb
inc
pop
jmp
sub
inc
push
lea
cli
inc
dec
scas
fimull
clc
cs
jo
mull
cmp
out
add
push
mov
fdivr
lods
cmpsb
pop
pop
in
push
fstl
sbb
mov
out
mov
mov
ficoms
das
adc
and
push
lods
jb
dec
push
movsb
dec
sub
shrb
xchg
mov
std
inc
test
adc
test
push
xor
dec
test
xor
shl
loopne
add
xchg
loopne
lock
mov
mov
mov
mov
faddl
scas
or
push
jbe
lea
dec
mov
adc
sbb
cmp
ja
and
sub
cmp
pusha
inc
push
push
pop
rclb
les
sub
dec
jnp
fs
out
mov
inc
pushf
sub
mov
lods
pusha
lods
jbe
sub
mov
dec
loope
xchg
xor
mov
dec
test
add
stos
popf
adc
je
movsl
ja
cmp
dec
insl
mov
out
xchg
movsb
das
adc
test
xor
addl
mov
jecxz
clc
cmpsl
mov
or
lods
inc
mov
jle
inc
les
inc
xor
sbb
mov
ljmp
addr16
lea
cmc
into
outsl
push
sbb
pop
add
xchg
xchg
scas
inc
xlat
out
std
shrb
sahf
aam
inc
inc
mov
push
mov
jo
inc
scas
cs
inc
decl
mov
rcrb
dec
add
and
and
lods
lea
dec
push
shrl
sbb
or
jno
mov
adc
je
rcrb
cwtl
mov
pop
mov
aaa
mov
aam
add
cmp
or
and
push
jbe
in
rcll
xlat
out
lcall
dec
roll
daa
out
test
mov
divl
and
jmp
mov
dec
fs
gs
adc
push
adcl
jmp
test
daa
inc
outsl
jo
std
out
nop
adc
cmp
inc
add
in
pop
cmpsb
cmpsl
mov
jae
rorb
adc
sub
cmpsb
je
lcall
sti
outsl
hlt
sbb
arpl
clc
adc
mov
push
mov
fstpl
add
jbe
mov
arpl
mov
jno
push
pop
mov
addl
or
aas
rclb
sub
sbb
roll
cli
fs
mov
inc
pop
lret
mov
xchg
sbb
jns
insl
mov
aad
push
fs
insb
sub
daa
rclb
aaa
xchg
inc
sbb
fmull
shlb
mov
and
mov
xor
lret
sub
xorl
and
sbb
xchg
sbb
daa
hlt
sahf
or
pushf
mov
std
fiadds
mov
jg
fists
cmp
pop
jle
fstl
fisubs
mov
jb
xchg
lret
out
pop
dec
and
sub
movsb
xor
sub
into
jle
inc
mov
xor
pusha
fildl
push
mov
outsb
add
add
sub
pushf
das
or
or
cmp
sbb
add
inc
aaa
in
jl
push
pop
fstpl
inc
ss
dec
popf
adc
and
pop
sub
arpl
mov
pop
xchg
mov
push
call
sbb
push
cmp
xchg
xchg
mov
test
cltd
push
or
les
jge
fstl
adc
mov
push
je
rcl
mov
ret
xchg
mov
leave
rcrl
sbb
outsb
adc
lods
push
out
push
mov
fsave
cltd
psraw
mov
lock
shl
clc
add
shlb
push
push
mov
pop
clc
enter
pop
aaa
mov
out
popa
xchg
and
ss
pop
xlat
iret
jnp
stos
push
jecxz
dec
push
pop
aas
mov
adc
mov
mov
sbb
push
dec
pop
add
inc
pop
jl
cmp
dec
push
ss
xchg
fcomps
fwait
pop
mov
aad
aam
jnp
fs
cld
or
adc
in
lret
scas
cltd
jbe
fistpll
add
bound
dec
test
adc
adc
inc
push
test
gs
ret
push
aam
or
rorb
cmp
movsb
sahf
xchg
jecxz
test
mov
mov
cmp
adc
mov
mov
arpl
cli
pop
jp
insb
loop
pop
ja
popl
shrl
sbbb
lahf
into
ja
cmp
test
adc
sub
pop
push
xlat
sbb
aas
jnp
iret
lods
dec
xlat
daa
mov
inc
dec
cli
js
push
popa
xchg
enter
repnz
push
stos
jle
movsl
sahf
add
movsb
lcall
jnp
jb
inc
shll
and
mov
xchg
xor
test
jecxz
sti
mov
inc
pop
pop
jp
stos
outsl
cmp
sbb
icebp
and
negb
outsl
xor
xor
sbbl
push
repz
pop
inc
in
xchg
cltd
scas
mov
popf
xchg
push
in
jl
push
les
adc
rorb
insl
test
subb
pusha
fildll
inc
jp
xchg
mov
cmpsl
scas
mov
xor
out
and
jb
repnz
adc
outsl
push
jo
cli
xor
in
mov
filds
add
divl
jecxz
daa
cmpsb
sbb
out
fidivl
mov
nop
aas
aaa
xchg
jnp
jns
pop
flds
dec
cmpsl
and
xchg
mov
cmc
pusha
notl
shlb
loope
mov
push
fsubrs
popa
andl
cmp
mov
icebp
push
fisubrl
insl
mov
adc
sub
xchg
and
and
mov
ss
pop
pushf
stc
popa
sbb
push
sbb
dec
faddl
xor
shlb
mov
rol
mov
lret
lahf
mov
xchg
mov
adc
fcoml
xor
rcr
lcall
cltd
stos
and
jg
and
je
or
inc
scas
les
fistl
aas
pop
movsb
fistl
leave
lea
loop
ret
jl,pn
dec
push
leave
mov
jnp,pt
push
inc
ficoms
jle
lds
sti
adc
mov
out
push
mov
xor
add
clc
insb
insl
xchg
mov
mov
sbb
jns
ljmp
sub
adcl
mov
push
dec
mov
fdivrs
xchg
cli
out
push
out
stc
jb
int3
in
testb
rorb
mov
pop
sub
popf
sub
cld
rcrb
getsec
add
xor
xor
in
xchg
lret
out
mov
inc
cli
lds
ljmp
scas
lahf
enter
int
repnz
lcall
pop
add
xchg
ret
push
mov
icebp
es
fstpt
mov
inc
stc
out
mov
cli
push
sub
xchg
out
push
into
sbbl
shrb
mov
push
stc
in
popa
int3
push
xchg
cmp
pop
sub
jbe
das
arpl
mov
cmp
pop
push
push
out
in
lods
jne
std
mov
insl
mov
inc
and
out
inc
out
mov
and
icebp
cmp
adc
xor
xor
mov
lcall
mov
cmp
sbb
ret
push
cmp
mov
push
int3
jo
ja
mov
add
push
hlt
or
push
outsl
fwait
fwait
cmp
lods
xchg
mov
sbb
andl
dec
and
adc
lods
xchg
mov
and
arpl
inc
xchg
mov
test
adc
sbb
push
scas
xchg
cmp
or
xor
iret
out
decb
aad
sub
ss
cs
pushf
aam
pop
cmpb
das
sbb
andps
fsubrs
mov
in
sub
out
pop
pop
pop
aad
pop
and
pushf
add
lds
pop
aam
xchg
out
filds
cli
test
adc
aad
xor
fisttps
pop
es
sti
jne
push
stos
fisubrl
add
repnz
loope
add
inc
adc
dec
mov
xorb
mov
imul
push
rolb
inc
in
or
rorl
ds
lods
push
mov
push
fdivs
or
xor
es
dec
in
loopne
repz
std
sub
jae
adcl
pop
sbb
push
lds
cmpsb
fsubr
pop
cmc
dec
cmpsb
das
cwtl
out
mov
mov
add
rcrb
in
mov
cmc
mov
dec
and
movl
stos
out
mov
mov
and
add
mov
es
in
jo
xchg
mov
je
loope
mov
mov
cmc
insl
movsl
xchg
lods
je
dec
fstpl
int
push
mov
add
out
scas
icebp
xor
sbb
mov
cmp
cwtl
movsl
mov
or
aam
ja
inc
movl
outsl
sbb
and
loope
add
stos
fcoms
xchg
sbb
insb
je
xchg
imul
push
les
loope
cmp
in
cli
loopne
sbb
pop
cmp
lret
mov
jb
and
mov
adc
rclb
mov
test
std
loopne
aam
out
clc
inc
jnp
mov
lret
or
mov
pop
sbb
addr16
mov
jb
mov
test
cmp
cltd
in
mov
mov
mov
fsubrs
sahf
cmc
imul
test
add
mov
push
out
or
xchg
arpl
insl
test
ja
sub
lcall
jbe
mov
bswap
stos
fidivl
xchg
outsl
mov
cli
je
xor
insl
xchg
add
in
mov
mov
lock
dec
sub
sub
stos
mov
aad
or
pushf
mov
fcompl
xlat
mov
cmp
fisubrl
dec
fldenv
orl
in
dec
xor
and
mov
xchg
mov
cli
or
pop
and
lds
mull
sbb
inc
mov
or
sub
in
icebp
into
les
fisttpll
jno
cmp
es
imul
mov
outsb
jecxz
adc
test
and
push
adcl
das
ret
scas
sbb
push
mov
sahf
mov
or
in
dec
push
loop
pop
xchg
imul
into
mov
aaa
inc
mov
test
pop
lods
shll
gs
jno
call
rclb
xor
push
pop
sub
jmp
mov
jbe
cmc
mov
call
mov
push
icebp
dec
jmp
mov
into
adc
jmp
adc
cmp
jne
lock
xchg
iret
cmp
int
cmpsb
pop
adc
scas
dec
inc
cmp
repz
cwtl
sbb
call
xchg
stc
sub
cmp
cmp
out
inc
mov
imul
arpl
adc
in
movb
xchg
lret
call
pop
jns
mov
mov
dec
mul
mov
sub
adc
inc
pop
xor
fstl
jge
loop
push
jno
in
xchg
cmp
xor
dec
ror
sti
mov
sub
jnp
push
xor
mov
arpl
mov
sbb
jg
push
inc
and
inc
aas
jb
lret
mov
aad
sub
xor
push
pop
fwait
push
add
lahf
pop
inc
push
pop
mov
clc
dec
movswl
push
loope
xorl
cld
int3
out
sti
mov
fucom
imul
jo
inc
leave
enter
leave
mov
adc
add
rcll
mov
dec
bound
ds
cli
push
popf
shll
mov
bnd
xor
inc
push
dec
or
aas
inc
sahf
dec
ret
call
push
enter
into
mov
sub
shlb
and
or
sub
idivl
jmp
repnz
and
inc
sub
push
mov
mov
lret
sbb
stos
pop
lods
mov
dec
movb
cmpsb
icebp
push
or
dec
and
or
cmp
call
pop
inc
push
dec
inc
fiadds
inc
in
pop
movsl
in
dec
xchg
cmc
fisttpll
and
andb
iret
int3
xchg
popa
subl
mov
jb
ss
or
orl
push
mov
loope
mov
dec
test
mov
ss
sbb
mov
fnstenv
sbb
jecxz
jbe
ja
push
lea
stos
sbb
out
sbb
hlt
iret
adc
imul
dec
out
clc
mov
stos
cmp
scas
enter
inc
lea
inc
sbb
inc
iret
inc
aas
scas
lcall
rorl
sar
xor
iret
jmp
and
fsubrp
dec
inc
je
mov
int
mov
ror
nop
shr
inc
iret
popa
roll
stc
imul
push
mov
shr
pop
cmc
xor
movsb
push
mov
sub
rcrb
mov
popf
and
and
pop
stos
and
dec
call
xchg
fs
cltd
cmp
movsl
js
jo
push
out
inc
inc
imul
pop
jo
rorb
repz
mov
test
and
ds
jmp
fnstenv
sub
xchg
mov
arpl
dec
mov
mov
shrb
in
rorb
fndisi(8087
imul
mov
cltd
mov
das
or
jns
push
lods
xor
sbb
adc
fcoml
push
popf
shrb
xorl
push
mov
notl
das
test
jmp
stos
cmpsb
lahf
in
inc
xor
cmp
sub
sub
test
ss
popf
mov
rol
cmp
sub
addr16
sbb
xchg
xor
lea
imulb
mov
jbe
adc
pushf
dec
or
outsl
test
jae
xchg
or
int3
loopne
mov
sub
pop
imulb
xchg
push
push
scas
imul
xor
pop
pop
daa
mov
daa
arpl
nop
stos
insb
mov
pop
int
add
jne
shr
adc
mov
adc
adc
add
test
mov
mov
insl
cli
jmp
mov
hlt
loope
jp
pop
out
xor
iret
add
push
cli
sub
adc
pop
rcll
cmp
lods
cmp
and
pop
inc
mov
fsubp
xchg
pop
cmp
out
frstor
push
cld
out
gs
pop
dec
push
int3
popf
dec
mov
mov
xchg
xchg
jg
cmp
sub
push
or
xor
sub
push
sub
dec
pop
cltd
xchg
jno
icebp
and
testl
lods
ds
pop
sbb
enter
je
in
or
or
mov
int
clc
hlt
jae
jo
and
or
mov
or
rorl
push
jmp
mov
pop
xchg
adc
inc
push
jecxz
inc
pop
outsl
mov
arpl
push
loop
sub
pop
test
inc
outsb
xorb
and
fldt
pop
fistpl
ds
and
mov
cmc
cmpsl
in
mov
fsubrl
cmp
or
lock
push
in
ss
je
inc
pop
sub
add
mov
negb
cltd
add
pop
adc
sub
xor
push
xchg
xchg
xchg
outsl
shlb
mov
daa
les
sub
in
ljmp
test
add
sub
mov
xchg
mov
xor
stos
imul
shll
enterw
movsl
mov
in
cmp
roll
inc
fadd
inc
mov
inc
in
mov
pop
sub
cmc
in
mov
mov
clc
ljmp
xchg
push
or
inc
stos
andl
int3
add
mov
fists
xor
xlat
jae
jae
loopne
pusha
mov
mov
loope
ret
cmp
cmp
dec
pop
outsb
mov
popf
add
lock
push
rorl
sahf
mov
lahf
out
aaa
mov
fwait
jb
mov
fidivrs
bound
sub
shlb
xchg
repnz
outsb
mov
pop
push
adc
popf
fildll
pop
dec
adc
jp
test
jl
inc
js
and
xchg
pop
shrl
into
sbb
lret
jle
int3
insb
test
fstl
xchg
mov
je
rcrb
push
scas
in
mov
pop
ror
shr
adc
cmp
cltd
out
int
outsl
push
clc
fldenv
pop
imul
xchg
cmc
adc
inc
movsl
rcrl
popf
pop
jmp
inc
insb
out
imul
fisubl
mov
xchg
or
frstor
leave
mov
cmp
incl
and
xor
inc
insl
cmp
cmp
push
xor
bound
ficomps
jne
loope
divb
bnd
ss
loopne
sub
cli
int
aas
sahf
add
push
push
xor
ljmp
pop
mov
sub
push
shll
push
push
sub
ja
insb
fldenv
inc
into
pusha
push
ret
jo
andb
iret
leave
sub
lret
bound
jl
mov
mov
push
xchg
jg
sbb
loope
pop
int
dec
sbb
je
pop
pop
ret
mov
jp
xor
add
cmpsb
push
ljmp
test
aas
insb
push
dec
push
mov
test
dec
pop
ret
sbb
pop
push
sub
aaa
inc
mov
into
sbb
popa
cltd
push
pusha
inc
ficoms
les
xchg
cmc
dec
mov
jmp
mov
mov
jae
xorb
push
scas
mov
scas
lods
add
mov
jmp
out
ja
push
dec
inc
or
and
das
lods
leave
inc
push
outsb
es
pop
rcll
dec
repz
nop
cmp
push
fwait
xor
pop
clc
fadd
push
dec
pushl
xor
push
movsb
add
inc
mov
push
insb
ljmp
push
pop
xchg
cmp
int3
cs
sbb
add
push
push
shll
test
pop
adc
cmp
mov
adc
ret
scas
inc
push
pop
imul
adc
mov
subl
mov
jecxz
or
push
cmp
in
xor
fsubrs
cwtl
popa
scas
movsl
pop
xchg
push
pop
lods
dec
mov
mov
popa
sub
sbb
pop
push
inc
pop
movb
sub
jae
cltd
pop
movsl
js
in
jne
push
and
loope
or
testl
in
mov
jle
adc
mov
inc
inc
lock
rcl
lahf
xchg
pop
cmp
add
rclb
pushf
arpl
mov
mov
mov
jne
mov
and
pop
movsb
clc
mov
xchg
stc
jp
sbb
outsb
shll
fdivrl
jo
in
xchg
je
sub
jg
icebp
outsl
and
xorb
jo
call
or
or
xchg
cmp
mov
subl
mov
sub
sahf
inc
jo
sub
mov
fldl
cmp
xor
push
daa
lock
sbb
daa
adc
lret
and
push
adc
stc
cltd
sbb
mov
adc
fdivs
notl
aad
hlt
loope
adc
flds
pop
mov
enter
pop
cmp
in
cli
cmp
jbe
es
dec
dec
push
out
mov
in
or
icebp
fcom
loope
jecxz
enter
jmp
ret
ret
jg
and
or
insb
jg
lds
aas
js
push
xor
in
enter
jmp
xor
push
sub
pop
or
in
flds
movsb
mov
scas
ja
or
or
and
jnp
adc
mov
pop
outsb
xchg
es
ret
add
xchg
pop
sbb
cmpsb
repnz
push
ret
outsb
dec
inc
sub
pop
sub
xchg
push
subl
sub
xor
pop
flds
dec
aaa
ja
mov
mov
stos
into
mov
xor
arpl
test
sbb
dec
std
loop
inc
dec
out
lds
pop
rcl
sbb
dec
dec
mov
imul
adc
mov
loop
dec
pop
stc
js
hlt
fildll
xchg
mov
mov
int
addr16
or
jbe
imul
jecxz
xchg
ja
adc
mov
lock
mov
sbb
test
mov
inc
pop
aam
pop
mov
cmp
daa
in
adc
and
into
mov
fidivl
add
mov
test
and
cwtl
mov
mov
push
sbb
jne
mov
sbb
cld
aaa
inc
lcall
in
test
pop
xchg
in
add
mov
scas
add
cmp
and
lret
xor
xor
int3
xchg
jge
sti
pop
arpl
das
gs
mov
sub
icebp
add
mov
ds
mov
xlat
jbe
mov
cmpsl
push
fcmovu
mov
out
mov
aad
jb
xlat
mov
data16
adc
mov
push
mov
adc
dec
nop
mov
cmp
fs
mov
inc
push
imul
cmp
adc
jp
fisubs
mov
mov
in
test
push
add
insb
into
push
push
xchg
aas
mov
inc
iret
lea
subb
jns
in
loopne
ret
les
loop
jnp
cmpb
loope
xchg
jnp
pop
push
ljmp
cld
xor
es
hlt
mov
ficompl
lahf
cmp
or
in
mov
mov
aam
fidivrs
mov
out
testb
hlt
jbe
dec
jae
or
int3
push
aas
sbb
mov
jns
push
sub
dec
aad
insl
sbb
sar
insl
ficompl
cmpsl
roll
data16
stc
push
std
and
sub
inc
roll
and
lds
cli
aas
mov
or
jmp
dec
jmp
pop
xor
inc
dec
sub
test
or
dec
cmp
lcall
push
xchg
xchg
jmp
xlat
xchg
mov
fldcw
mov
or
jnp
js
mov
push
pop
inc
and
pop
stos
jle
push
in
inc
xchg
inc
enter
pop
je
mov
push
sub
fistl
hlt
sub
arpl
push
fs
push
sbbb
pop
mov
incl
cltd
cmpsb
fwait
std
pop
andl
cltd
dec
mov
stos
aad
inc
shlb
cmp
sbb
sbb
shr
or
leave
and
mov
xchg
push
sbb
xchg
out
jecxz
cmpl
jns
xchg
addr16
and
ret
shll
adc
sbb
or
addr16
mov
cmp
scas
cmpsl
cmp
xlat
into
lcall
push
movsl
or
dec
es
push
popa
jle
or
imul
sbb
cwtl
xor
in
dec
adcb
push
fcomi
xor
into
in
mov
std
add
jns
push
or
xchg
mov
jl
inc
cmpsl
subb
cmc
sbb
outsl
data16
in
ljmp
adc
and
dec
add
and
pop
xor
movsb
and
sbb
adc
movb
xor
mov
outsb
je
int
push
adc
ljmp
std
ja
pop
out
push
mov
xchg
pop
aad
dec
jmp
pop
pusha
pop
inc
div
fldenv
cmp
inc
jo
fidivs
adc
dec
movsb
imul
test
sub
sub
sub
vmovupd
mulb
popf
shlb
sbb
lock
mov
push
xchg
xchg
add
mov
dec
mov
insl
mov
xchg
fs
mov
mov
cmpl
sahf
pop
repnz
xor
add
and
fisubrl
outsb
mov
xor
mov
test
rol
stc
and
insb
sub
and
jbe
lahf
mov
push
repnz
js
cld
testb
xor
push
scas
mov
rcrb
cmp
and
push
jmp
jbe
cld
mov
nop
enter
dec
loop
aad
rorl
sub
dec
add
sub
xchg
or
aaa
rcr
dec
xchg
negb
adc
lods
dec
aad
je
jns
sub
mov
pop
xor
pop
call
test
mov
into
dec
cmp
mov
sbb
test
fildl
or
and
cmp
rorl
inc
in
data16
or
in
and
ss
call
dec
inc
and
inc
mov
and
xchg
dec
mov
lods
xchg
enter
mov
es
in
dec
and
stc
rcrb
or
jp
adc
test
fadds
lods
mov
jp
or
cltd
adc
test
cmpsb
loop
xchg
add
test
xchg
xchg
sbb
pop
adc
repz
fcmovnu
mov
or
mov
xchg
dec
inc
movsb
dec
add
imul
jbe
icebp
idivl
push
sub
or
sub
clc
es
or
cmp
or
sbb
add
notl
dec
cltd
dec
pop
push
bound
fs
pop
loop
sbb
in
dec
int3
std
fcomps
loop
mov
aad
inc
loope
jno
dec
xchg
mov
inc
sbb
std
sbb
lret
testb
xor
repz
mov
or
push
mov
inc
movsl
inc
xchg
adc
pushf
jmp
sarb
test
pop
xchg
or
cmp
inc
into
loope
and
xchg
or
add
xor
xor
xor
mov
mov
enter
test
test
jmp
mov
pop
add
and
cmp
imul
in
loope
xchg
arpl
aaa
sbb
sub
sub
sbb
cmp
lods
dec
mov
pushf
cmp
pop
push
lea
popa
lret
jge
mov
dec
gs
stos
mov
push
push
clc
add
sub
xor
push
cmp
ror
call
jg
cltd
scas
daa
sarl
scas
mov
sbb
push
jmp
and
jb
sbb
fcoms
or
ret
imul
sub
mov
mov
push
popf
mov
mov
fdivrs
int3
sub
popl
test
dec
loope
std
mov
lods
inc
lods
sbb
pop
xchg
lret
inc
mov
or
mov
mov
cmp
push
push
push
sub
mov
bound
sub
adc
mov
pop
or
les
push
xlat
fidivs
stos
fsubr
mov
lcall
xor
mov
out
cmp
hlt
stc
jmp
cmpsb
jg
test
test
inc
cli
lcall
loope
jae
int3
sbb
dec
inc
mov
in
fldt
stos
filds
xor
mov
cltd
add
pop
imul
repnz
js
fidivrl
fiadds
xchg
xorb
stc
push
imulb
test
js
inc
sti
cmp
mov
enter
mov
xorb
xorl
lahf
and
mov
inc
movhps
adc
movsl
xchg
inc
fldenv
cs
jae
add
inc
ljmp
fildl
or
inc
sbb
pop
imul
cld
fcomps
cld
cmp
loopne
rcr
dec
add
cld
lods
dec
negb
and
clc
sub
sub
pushf
mov
pusha
idivb
cmpl
push
add
mov
xchg
incl
scas
repnz
imul
inc
jne
sub
stc
mov
add
js
aaa
ret
fbstp
xor
stc
adc
mov
fstps
sbb
mov
rol
in
pop
jl
jg
cmpsl
sti
cwtl
or
jecxz
loope
push
pop
and
push
test
or
std
cmpsl
add
dec
fildll
out
adc
adc
sbb
sbb
fdivp
xchg
pop
push
movsl
mov
dec
cs
dec
or
cmc
stos
jnp
sub
insb
xchg
dec
fs
jo
adc
outsb
pop
dec
rcrl
lret
lea
dec
aas
js
mov
leave
imul
out
inc
lods
add
test
push
add
or
xor
fimull
jnp
testb
pop
push
add
lock
outsl
loopne
adc
xor
mov
push
jge
xor
adc
in
cld
mov
mov
pop
imul
shll
jbe
sbb
dec
mov
adc
or
movsb
pcmpeqw
mov
stos
adc
inc
jbe
sti
stos
mov
cmc
jae
mov
rcr
mov
scas
aad
pop
stos
shrb
aaa
add
scas
or
dec
scas
mov
add
mov
xor
mov
inc
mov
push
xlat
in
cld
push
stos
jmp
xchg
adc
push
arpl
sub
fldcw
bound
out
jp
mov
inc
jo
xor
je
adc
in
test
mov
aaa
xchg
cs
jmp
cwtl
imulb
inc
push
push
iret
ret
pop
out
or
addr16
sbb
dec
jnp
jns
inc
movsb
cmpsb
les
sahf
pusha
shl
xchg
scas
mov
cmp
aaa
push
dec
test
mov
imul
push
lcall
shlb
int
jmp
mov
dec
mov
mov
outsb
ret
sbb
inc
mov
pop
jae
add
insb
imul
push
hlt
not
pop
mov
adc
dec
jg
jbe
jns
inc
push
push
fsubr
add
in
fcoms
mov
out
inc
je
and
idivb
inc
inc
pop
mov
call
sahf
pop
adc
sub
xchg
aas
out
fwait
in
hlt
sub
dec
lods
icebp
add
aad
jne
or
sbb
mov
or
outsl
lret
gs
insb
lock
push
fiadds
sbb
xchg
andb
sub
imul
cmpsl
cltd
inc
xchg
pop
mov
inc
add
sub
js
push
adc
dec
adc
cltd
outsl
loopne
in
popa
into
push
sahf
push
mov
add
sahf
jb
xchg
stc
or
fcoms
adc
push
and
xchg
sub
mov
mov
jl
xlat
xor
xor
pop
lret
add
xor
sub
jecxz
and
cmp
and
jno
or
fs
pop
out
sub
pop
lea
sbb
sbb
xchg
sub
jns
mov
movb
in
je
inc
push
call
in
cmp
std
nop
hlt
aas
jb
sub
and
call
lahf
mov
inc
mov
imull
or
mov
pushf
ret
cmp
jno
dec
adc
cmp
jae
rcl
add
imulb
es
inc
lcall
push
mov
xchg
shlb
pop
cmpsl
test
pop
cmp
imul
cmp
imul
les
sub
fwait
lods
shrl
inc
adc
call
cmp
pop
cld
pop
lds
out
or
mov
and
jno
inc
shrb
pop
mov
jp
movsl
mov
es
mov
mov
cmpsb
inc
xor
outsl
mov
int3
arpl
jnp
aas
movsl
mov
cli
nop
xchg
jno
imul
dec
stos
mov
mov
jnp
cmp
fimull
fwait
subb
int
sub
mov
mov
dec
and
xor
aam
int3
dec
ds
mov
bound
rcl
add
popf
aaa
dec
push
mov
jbe
ret
xchg
es
cmc
out
in
jl
roll
das
adc
mov
push
idivb
dec
sbb
jmp
sbb
or
cld
mov
sahf
sbb
out
jnp
dec
test
fidivrs
ljmp
cmp
push
outsl
scas
gs
mov
pop
rcrl
push
jmp
and
cld
adc
cmp
sbb
jge
fiadds
addr16
repnz
loopne
insl
ljmp
repz
iret
push
cmp
add
mov
xchg
jg
cli
mov
sbb
fcoml
sub
ja
jmp
cwtl
movsl
insb
rorb
sub
mov
mov
and
ds
sub
das
imul
mov
pop
push
dec
adc
movsb
push
sbb
lcall
pop
xchg
lock
std
jae
xchg
js
fisubrs
cld
sub
jmp
pop
addb
cwtl
mov
hlt
sbb
movsb
or
mov
outsb
cmp
pop
push
or
fidivrl
fsubrl
or
xor
inc
adc
cmpsl
clc
inc
and
push
ljmp
mov
mov
sbb
cltd
push
into
clc
outsl
pop
xchg
outsb
lea
std
cmpsl
mov
jecxz
add
in
pop
dec
cmp
lods
movsl
sbb
in
les
popa
xor
and
sub
int
xchg
lea
sbb
dec
mov
repz
scas
stc
and
mov
jno
loop
fwait
addr16
or
mov
pop
les
or
adc
adc
dec
add
adc
clc
adc
je
adc
mov
movsl
mov
arpl
sahf
add
nop
pcmpeqd
pop
lds
fmuls
enter
xor
pop
fcoml
aas
sbb
sti
stos
mov
adc
loopne
ret
jae
xchg
mov
cmp
arpl
out
movsb
mov
in
mov
jp
jmp
push
popf
lock
push
mov
scas
nop
movsl
sbb
subb
mov
sahf
push
movsl
mov
sub
jns
repz
inc
adc
lock
aam
cs
cmpsb
cmp
rorb
insb
inc
clc
add
pushf
mov
rcrl
call
sahf
mov
aaa
mov
cld
repz
jl
lret
aaa
xchg
adc
fsubr
out
lcall
fistpll
pop
lds
sahf
jecxz
movsl
and
nop
aas
pop
sti
repz
outsb
or
ja
movsb
pop
and
jo
xor
push
xor
mov
in
std
fs
les
les
push
push
fidivrl
fidivrl
cwtl
mov
in
ja
jbe
jo
dec
int3
cli
into
lret
imull
adc
mov
xor
mov
int
inc
insb
mov
push
mov
inc
int
cmp
adc
jno
insb
mov
adc
shrl
jb
aad
icebp
movl
stc
leave
je
jecxz
clc
xchg
loopne
xchg
or
mov
cmc
and
fdivl
fsubrl
pop
insl
imull
adc
negl
cltd
jmp
pop
std
mov
dec
std
data16
jns
cld
lahf
jecxz
cld
sub
cmp
insl
xlat
cmpsb
jg
mov
xchg
shl
push
and
pop
ja
mov
in
inc
fdivs
testl
lods
push
iret
pushf
sti
repnz
test
dec
scas
aas
sbb
fs
stos
sub
inc
mov
inc
into
mov
and
mov
pop
in
or
stos
fidivrs
inc
scas
out
sahf
icebp
xor
aas
jp
hlt
mov
scas
cli
daa
test
lcall
mov
jnp
inc
and
adc
xchg
rorl
pop
test
test
dec
icebp
mov
ja
sub
sahf
cmp
mov
mov
cmc
jg
pop
or
arpl
pop
xchg
fldcw
aad
push
mov
js
test
cmpsl
jg
imul
nop
out
adc
lods
and
inc
inc
mov
jmp
icebp
lock
inc
test
xchg
cmc
cmpsl
inc
xchg
mov
aas
xchg
data16
and
jle
push
pop
stos
sbb
mov
test
and
ret
fidivrl
lret
pop
lcall
dec
jl
lea
jle
mov
mov
cli
sbb
imul
dec
clc
movsb
sbb
test
pop
fs
sahf
andl
inc
cmp
loope
or
and
stos
lods
out
arpl
call
cli
insb
push
mov
lods
jecxz
jnp
sub
mov
adc
fidivs
adcl
adc
jno
add
lds
mov
inc
lds
scas
fmul
nop
cmp
stc
hlt
pusha
addl
cmp
push
or
push
scas
cmpl
cmp
std
sub
lcall
fcmovnb
xchg
stc
and
add
push
sahf
insl
adc
jge
sti
dec
pop
lret
shrl
adc
inc
mov
mov
push
std
mov
popf
jmp
and
push
pushl
or
mov
xchg
or
jl
mov
push
jp
ja
push
mov
or
or
pop
and
pop
dec
xor
or
and
xor
sub
nop
sahf
shl
into
repnz
test
sub
icebp
mov
out
in
test
mov
xor
mov
insb
jg
sbb
pop
loop
mov
gs
test
in
sbb
jno
loopne
adc
jp
xchg
mov
stc
icebp
enter
inc
jb
shlb
pop
cmp
dec
sub
sub
loopne
and
loop
push
into
ret
cmp
bound
stos
adc
jmp
jle
xor
lret
js
ret
int3
pushl
dec
out
xchg
lea
sbb
mov
sbb
mov
into
sti
or
add
xchg
mov
xchg
sahf
mov
test
pop
mov
lcall
inc
mov
sub
sub
aas
mov
js
dec
sub
hlt
rolb
aam
push
adc
inc
std
add
add
imul
push
mov
jg
aaa
cmc
fcmovnbe
mov
adc
dec
adc
bound
les
push
xor
mov
call
mov
and
xor
jge
pusha
inc
icebp
add
jl
hlt
fdivs
imul
pusha
jnp
mov
inc
in
jno
pop
mov
sar
pop
mov
adc
and
pop
mov
jae
inc
sub
jmp
push
js
imul
xchg
xchg
xor
push
pop
rcr
sbb
addb
icebp
jns
fadd
dec
lcall
into
add
test
or
ss
cmp
cmc
xchg
and
ja
stc
jne
mov
inc
daa
loop
mov
arpl
test
jmp
ret
cmp
sahf
adc
mov
xlat
jae
adc
arpl
xchg
xchg
int3
xor
data16
mov
dec
xor
test
add
push
jb
cmp
es
addl
mov
sub
lcall
and
pop
cmp
sti
std
lods
out
sub
cmp
push
hlt
mov
repz
inc
rolb
sub
inc
mov
adc
or
mov
nop
inc
inc
outsl
test
cli
les
jl
fsubs
idivl
mov
jo
mov
push
in
incl
stc
dec
add
dec
push
push
rorl
test
out
adc
testl
inc
mov
inc
push
aaa
lods
lods
sbb
xor
pop
and
push
mov
jne
in
dec
mov
mov
pop
dec
lods
or
fimull
pop
sbb
mov
ss
sub
adc
fdivl
xchg
add
pop
fsubl
ffreep
arpl
lret
cmc
xchg
cmp
sub
add
shlb
popf
mov
fadd
cmp
mov
pop
popa
fnsave
mov
sub
inc
loope
mov
jl
filds
or
clc
mov
aaa
andl
xor
ds
and
negb
pop
jmp
cmp
and
cli
xor
push
jge
insl
jb
xor
or
js
push
adc
cli
fndisi(8087
gs
xchg
sbb
ficoms
lret
pop
pop
cmp
xchg
test
xchg
stos
add
push
daa
jb
inc
data16
lret
test
aam
addr16
mov
cs
xlat
jmp
xchg
imul
sti
jne
stos
insl
pop
add
out
rcrl
push
adcl
lcall
dec
outsl
das
les
out
in
sbb
nop
inc
jmp
int
jnp
and
dec
add
push
cmp
cld
cs
dec
fstpt
adc
in
test
js
push
cmp
cmp
jg
es
jge
int
int
sbb
call
daa
jae
sahf
mov
ljmp
cmp
mov
xchg
mov
xchg
sbb
push
xlat
mov
ljmp
mov
jp
add
es
and
icebp
dec
xor
adc
int
test
lock
xchg
xor
sub
and
fs
arpl
dec
fdivrp
xchg
push
ficompl
adc
cmp
mov
xor
pop
inc
jbe
cmp
jo
rcll
ja
inc
xchg
mov
inc
or
mov
icebp
lea
out
jno
push
imul
aas
mov
dec
fnstcw
sbb
add
shlb
stc
mov
in
sub
loopne,pn
mov
dec
aad
idiv
popf
lret
std
aad
fadd
push
cmp
cmpl
inc
shl
xchg
pop
jp
mov
fimull
cmp
xor
notl
dec
aaa
push
jo
les
sub
sub
test
jge
mov
push
cltd
icebp
popaw
mov
mov
rol
or
sbb
mov
mov
dec
push
or
out
cmpsb
lret
fldcw
jge
orb
lock
sub
mov
mov
sub
add
jns
clc
mov
movsb
ds
out
dec
or
ss
adc
std
jecxz
fucomip
pop
roll
jge
mov
gs
out
cmp
mov
xor
sub
in
mov
test
les
mov
cmp
push
mov
xor
push
in
jb
mov
or
pop
adc
xchg
fidivs
xor
push
pop
in
push
add
lds
popf
dec
sbb
pop
faddl
and
mov
ret
mov
push
in
ret
push
sub
stc
cs
xor
imul
pop
or
hlt
icebp
push
xor
sbb
add
idiv
fidivs
inc
mov
xchg
fistl
jno
cli
jmp
xchg
hlt
and
subb
pop
idivb
cmp
inc
mov
maskmovq
idivl
f2xm1
insb
add
cwtl
mov
mov
pop
push
movsl
xchg
or
decl
cmpsb
jmp
dec
out
insb
push
loop
push
pop
arpl
pop
lea
es
lea
sub
shll
mov
repnz
shrb
out
lods
int3
into
dec
dec
ss
or
inc
xor
outsl
lcall
ljmp
mov
cmpsl
mov
mov
pop
repz
or
mov
sti
orb
mov
loopne
inc
fiaddl
dec
push
sub
adc
mov
je
stc
add
loop
sub
test
or
or
mov
fisttpl
dec
add
or
arpl
icebp
xor
dec
mov
pmullw
dec
fwait
adc
sbb
sub
imul
pop
jb
jb
or
sti
or
icebp
cmpsl
add
ret
sub
dec
cmp
lock
xchg
dec
pop
aad
out
and
dec
testb
jo
clc
mov
add
imul
cwtl
cmp
lock
push
sub
cwtl
mov
dec
push
arpl
outsb
je
jecxz
ljmp
xchg
scas
pop
in
mov
pop
cmp
xor
arpl
neg
pop
ja
mov
jnp
pop
pop
cmp
arpl
shll
xor
adc
js
icebp
mov
or
int
cld
mov
bound
mov
ds
enter
push
dec
inc
push
sti
mov
rolb
ret
out
push
stos
mov
arpl
or
cmp
mov
mov
or
mov
test
dec
push
sub
inc
scas
sub
bound
pop
push
pop
sbb
mov
sahf
inc
sub
outsl
or
stos
das
jb
mov
adc
in
into
jno
mov
lds
push
shrb
bound
sub
andb
mov
ret
cld
inc
add
xorl
inc
sub
xchg
dec
push
mov
gs
addr16
inc
jp
divl
les
xchg
and
add
pop
xor
pop
push
mov
sahf
sar
mov
mov
push
push
sub
xor
sub
stc
loop
mov
ret
cmpsl
cltd
outsl
mov
sub
bound
jmp
cmp
sti
in
mov
int
jp
notl
ds
je
stos
imul
mov
mov
and
repz
loope
es
and
or
cmc
nop
lds
out
cmpsb
lods
mov
xchg
and
imulb
loope
mov
shrl
mov
push
ss
add
jg
and
xor
mov
mov
jb
push
mov
ljmp
xor
ret
dec
leave
mov
clc
js
repz
scas
repz
and
fisttpll
add
dec
xor
ret
mov
lods
nop
into
bound
mov
ret
loope
adc
popa
popa
aaa
xlat
test
je
mov
pop
cmpsl
adc
jg
pop
xchg
int
js
outsl
sub
pop
mov
mov
xchg
cmp
push
cmp
test
roll
data16
fwait
pop
mov
cmpsb
mov
daa
cwtl
icebp
adc
pop
mov
jg
test
xchg
mov
fstpt
movsb
push
xor
stos
outsl
cs
sarl
ret
xchg
dec
mov
inc
xor
sti
push
xlat
ja
or
adc
imul
inc
jmp
and
pushf
pop
adc
lcall
add
in
rcl
sub
lahf
testb
mov
cmp
xor
dec
jae
in
test
add
jbe
jae
popa
sub
jle
aas
cmc
push
cmc
stos
xor
mov
push
pop
mov
jg
repnz
or
lea
xor
out
ret
lods
push
movsl
mov
in
cltd
mov
loope
arpl
push
and
aam
xor
or
sub
pusha
mov
or
push
out
xchg
jns
xchg
add
add
inc
xchg
inc
aam
loope
cmp
mull
in
mov
loop
lret
pop
mov
push
jecxz
in
jecxz
gs
jnp
sub
xor
push
fisubs
lock
and
ret
pop
jle
stos
cmpl
or
xchg
test
mov
mov
nop
mov
adc
mov
mov
cmp
out
inc
cmp
pop
xor
out
xor
sub
pusha
addr16
popf
jmp
lock
dec
sub
dec
lahf
xchg
test
loope
sbb
shrb
add
into
xchg
push
dec
dec
xor
stc
dec
scas
into
aaa
lds
mov
ljmp
xchg
mov
xchg
jge
fdivr
ffree
imul
test
mov
push
xchg
adc
jmp
out
lds
pop
mov
jae
mov
and
imul
or
push
push
cld
sub
sbb
jb
iret
lret
inc
stmxcsr
push
mov
pop
mov
inc
pop
repnz
sbb
popa
mov
pop
mov
mov
inc
imull
stos
mov
mov
mov
cmp
mov
add
pop
scas
sub
dec
leave
aaa
add
mov
add
fs
rcr
inc
pop
pop
jge
cwtl
cmpsl
repnz
inc
test
cmpsb
scas
jb
xchg
cs
idiv
xchg
int
fwait
in
mov
and
jmp
test
add
inc
adc
jle
mov
adc
add
rcrl
int
iret
out
iret
mov
mov
ss
fcoml
mov
inc
test
test
nop
push
or
dec
out
fldt
and
push
jmp
mov
push
adc
sarb
jge
arpl
jns
sub
or
shrb
mov
pop
ret
xor
push
mov
filds
sbb
lcall
jnp
pop
ljmp
push
scas
cli
stos
xchg
stc
xor
mov
sbb
insb
clc
call
inc
call
jmp
mov
je
addl
out
jbe
sbb
das
loopne
aas
fs
and
bound
inc
pop
mov
push
cmp
imul
ds
pavgb
sbb
js
lret
jnp
ljmp
div
icebp
xchg
mov
mov
test
pop
mov
aad
fdivrl
cmpsl
push
xchg
test
adc
xor
inc
les
jecxz
cld
les
push
jns
push
int3
loope
dec
aad
leave
test
dec
pop
imul
and
cltd
adcb
jb
ja
rclb
push
repz
xchg
dec
mov
push
xchg
in
out
sub
jmp
fsubrl
push
mov
cwtl
xor
les
shlb
mov
call
cmpl
sti
and
inc
push
push
push
cwtl
adc
push
xchg
in
lahf
cld
pop
push
pushf
into
push
test
cmpsb
dec
arpl
inc
jb
add
cmpsb
mov
push
dec
ficomps
test
cmp
inc
js
add
cs
and
inc
mov
xchg
adc
fs
lret
imul
cltd
inc
inc
adc
int3
and
shlb
out
out
mov
mov
pop
add
mov
sbb
push
pop
inc
cwtl
arpl
arpl
xor
sub
and
lcall
ficoms
aaa
cmp
andl
jp
mov
rcrb
inc
xchg
mov
mov
inc
push
xchg
out
stos
fcompl
mov
xlat
mov
lods
mov
push
les
sub
hlt
sbb
push
jo
clc
cwtl
shll
popf
pop
jo
pop
test
popa
inc
pop
imul
add
sbb
mov
mov
shll
jo
outsb
jne
call
stos
lret
xor
sbb
dec
pop
mov
and
ja
aam
lret
add
add
out
xlat
mov
sbbl
fs
ja
pop
pop
jge
mov
dec
lret
inc
rorl
push
xchg
sbb
cmp
mov
xchg
jp
rep
pop
sub
add
movsl
fs
mov
push
cld
rolb
mov
and
iret
cmp
stos
sub
xor
mov
cwtl
sub
loope
jmp
jle
cltd
cwtl
pop
inc
dec
repz
inc
insb
inc
in
push
lds
subl
cmpl
or
pop
lock
sub
call
jnp
jnp
hlt
out
aas
pop
jbe
fstl
hlt
mov
inc
inc
ljmp
outsl
popf
dec
sub
pop
jg
data16
or
sub
jmp
xchg
int
jl
lret
repz
or
fstp
and
add
shrb
pop
dec
fnsave
pop
insb
or
adc
pusha
jge
dec
btc
sbb
xchg
mov
dec
sahf
cwtl
push
sub
aad
inc
xor
aad
xchg
aas
jno
push
xchg
pop
sub
fcompl
mov
lahf
adc
fstps
xchg
pushf
cmp
mov
mov
cmpsb
cli
add
cwtl
int
dec
mov
aad
mov
lcall
ja
das
movb
lret
in
ret
jns
sbb
adc
add
inc
negl
lods
vfrczss
das
mov
fiaddl
loop
and
ss
cmp
daa
inc
faddp
cmp
scas
cltd
mov
roll
lock
jno
popf
loopne
inc
fdivs
and
mov
enter
jge
adc
xlat
cmp
aas
mov
out
cmc
faddl
mov
imul
cmp
mov
mov
scas
xchg
leave
pop
sub
test
jbe
and
mov
rorl
xchg
jl
iret
inc
test
xchg
jo
sti
fwait
insb
bound
or
pushf
orb
cltd
or
mov
dec
arpl
sbb
push
sysenter
jg
iret
xor
mov
leave
cmpsb
sbb
jle
stos
or
jge
pop
clc
out
push
jb
nop
je
inc
repnz
xchg
loopne
push
or
filds
jge
or
push
outsb
mov
into
mull
addr16
loope
jle
pop
outsb
stos
mov
outsl
dec
sub
out
ds
xchg
fisubrl
loop
movsb
mov
mov
or
shrl
mov
rclb
add
cmp
jge
mov
push
sub
or
les
adc
scas
jecxz
jp
fs
and
insl
clc
aas
mov
dec
xchg
icebp
mov
push
ss
cmpsb
adc
mov
hlt
inc
add
adc
mov
in
notl
lods
scas
cli
fdivrs
inc
aas
les
adc
loopne
jnp
cmpsl
adcl
mov
ds
mov
add
pop
xlat
adc
mov
mov
jno
out
aaa
push
movsl
dec
or
enter
out
pop
mov
decl
pushf
pop
cmp
arpl
sub
push
xor
mov
inc
cmp
mov
cli
jno
dec
jb
sub
push
sbb
bound
nop
movsl
mov
mov
pop
adc
mov
js
sbb
inc
mov
cmp
cmp
push
mov
add
and
inc
lods
filds
jl
mov
push
or
mov
cmp
push
pop
aad
or
pop
clc
adc
cld
xchg
push
xchg
mov
data16
or
mov
enter
mov
fildll
mov
in
and
outsb
shrl
pop
data16
inc
mov
adc
or
jb
cld
add
mov
xlat
or
sahf
outsb
mov
mov
in
shll
jmp
pusha
mov
mov
jl
push
in
adcw
jmp
inc
mov
cmp
cmp
and
hlt
decb
cmp
push
sbb
in
sbb
xor
rcrl
xchg
push
out
rorb
shr
fprem
lret
fidivrl
dec
push
add
aaa
or
xor
fsubp
sbb
shl
popf
leave
push
call
sub
pop
jns,pt
push
push
or
mov
roll
aas
sbb
jmp
cwtl
push
leave
js
jecxz
sub
pusha
push
dec
inc
loope
test
push
mulb
lahf
or
gs
mov
jg
cltd
mov
pop
movsb
mov
adc
mov
push
adc
loope
mov
push
mov
cld
push
add
or
xor
fcompl
int
gs
push
fildl
and
int
sti
imul
adc
cmpsb
push
pop
test
cltd
add
shll
or
xchg
mov
jl
mov
shlb
xchg
mov
mov
push
rorl
pop
test
inc
inc
dec
or
negb
std
fmul
pop
pop
sahf
lahf
mov
scas
jno
in
arpl
js
test
jle
ljmp
lods
xor
fcomp
dec
xchg
fldt
sub
jge
lahf
push
clc
movsl
mov
es
lds
pusha
mov
sar
mov
push
mov
jmp
or
addl
js
and
push
xlat
scas
shrl
insl
xlat
or
imul
imul
insl
xchg
mov
scas
mov
out
cltd
xor
out
xor
jno
out
push
adc
dec
fcmovnu
mov
mov
call
outsl
sub
mov
dec
fnstenv
pop
iret
loop
jnp
pop
xchg
ds
xor
das
aas
nop
test
lcall
push
adc
cltd
test
out
sub
ja
stos
shlb
adc
jl
jp
js
andb
fs
mov
inc
test
hlt
ret
and
add
pop
or
je
aam
in
lods
xchg
push
jle
rolb
out
pop
pushf
mov
jge
fcmovb
mov
or
jmp
sub
pop
aaa
repz
add
sbb
adc
dec
ficompl
push
lret
inc
cmp
mov
loop
in
adc
fstl
cmp
insl
cmp
shlb
das
fcmovnbe
add
in
cwtl
nop
std
sub
call
mov
mov
ljmp
cmc
mov
out
gs
and
cmp
fisttpl
push
stc
mull
adc
sahf
in
scas
and
sbb
dec
xor
insl
xchg
popa
lret
pusha
aas
mov
pop
js
xchg
scas
pop
add
cli
push
push
xor
sub
in
sar
fnstenv
jmp
clc
mov
xchg
push
cmpsb
mov
test
outsl
pushf
or
loop
cld
fisubl
jns
clc
loope
xchg
rorb
or
fs
push
pop
push
jecxz
xor
mov
into
xchg
adc
inc
adc
sbb
icebp
add
or
jp
sbb
and
mov
pop
das
fmuls
lock
push
enter
icebp
mull
and
xor
call
inc
jnp
mov
inc
pushf
lods
cmp
js
sar
popf
aam
cld
gs
push
cmc
pop
inc
lock
test
jo
sbb
adc
nop
in
jnp
bound
cmp
pop
cli
les
or
xchg
xchg
inc
mov
int
popa
icebp
pop
xlat
jno
lea
add
jmp
add
jae
and
pop
dec
pop
mov
add
inc
adc
fildl
pop
orb
pop
out
imul
xor
rol
loopne
movb
sarl
xchg
lret
out
pushf
scas
aaa
loopne
andb
mov
sub
adc
inc
popa
mov
pop
fistpll
mov
jge
scas
aaa
jnp
xchg
int
int
dec
out
pop
mov
sbb
imul
or
push
cmp
mov
ss
cmp
sub
aas
jbe
sub
pop
lret
mov
je
jge
sbbb
arpl
cltd
lods
test
mov
in
adc
inc
popa
dec
stos
jae
aaa
add
push
xor
and
jmp
cmp
xchg
pop
imull
dec
mov
lret
das
fs
clts
jle
xchg
lds
sbb
cmpsb
mov
icebp
jmp
xchg
pop
or
or
cld
cmpsb
sti
or
sar
mov
dec
subb
push
pop
jo
mov
icebp
sbb
or
jns
mov
mov
lods
jge
cmp
fwait
xchg
cmp
mov
enter
cmp
cmp
fcmovb
push
sub
fwait
xchg
out
outsl
xor
cmc
pop
jb
adc
push
dec
test
mov
out
jmp
aaa
lahf
scas
cmp
add
loopne
ds
jg
adc
mov
xchg
lock
imul
ficomps
in
int
vmovupd
sbb
dec
xchg
icebp
repnz
push
push
mov
inc
iret
pop
inc
xchg
sub
leave
cwtl
mov
pop
add
lea
loopne
sub
inc
add
push
mov
repz
jb
data16
or
and
inc
stos
out
add
or
xchg
adc
inc
stc
testl
cmp
lahf
push
add
bound
inc
in
fcmovu
xor
test
or
sti
xorb
mov
je
adc
adc
out
dec
pop
popa
daa
movsb
aaa
cmp
ja
sbb
mov
popa
scas
and
or
gs
es
dec
xchg
jae
cmp
lods
sub
lds
lds
les
push
sbb
aaa
mov
sysenter
shll
add
jne
jmp
jl
stc
adc
pop
loope
mov
sub
push
pop
xchg
daa
cmp
adc
pop
inc
and
fiadds
cli
ficoml
sub
adc
push
stos
scas
outsl
lds
pop
or
dec
sbb
std
and
lods
cltd
add
adc
mov
xchg
leave
xor
fsubs
jb
sbb
mov
outsb
insl
nop
dec
dec
mov
dec
mov
pop
imul
add
popf
lods
sbb
push
mov
fcmove
rorl
mov
add
adcb
pop
jge
push
notl
mov
adcb
dec
sbb
push
or
push
cld
clc
addl
pushf
hlt
enter
and
or
inc
call
outsl
dec
xchg
jae
lcall
mov
xlat
inc
pushf
adc
outsb
add
fsubs
jmp
mov
xor
nop
sti
sbb
push
cwtl
push
int3
mov
sarb
sub
stos
dec
inc
lods
std
ss
cmp
lods
push
xlat
push
mov
add
mov
mov
mov
rcrb
rcll
imul
mov
and
dec
xor
adc
inc
fidivrl
call
sbb
push
push
xor
movsb
pushf
mov
fidivl
sub
stc
gs
jae
jecxz
add
insb
repz
lods
sbb
call
cmpsb
mov
es
xchg
lahf
stc
dec
sub
rcrl
roll
cmpsb
pop
cld
dec
popa
stc
ljmp
mov
aam
das
int
es
mov
out
insb
pop
adc
jge
dec
lea
fisubrl
mov
aam
pop
into
xchg
and
daa
stc
adc
mov
adc
rorl
lcall
pop
insb
push
sbb
adc
add
mov
adc
or
jno
arpl
cltd
data16
pop
and
add
test
push
fldl
xorl
dec
inc
fdivrs
xor
arpl
ret
cmp
xchg
sub
in
aaa
aad
hlt
lods
dec
xchg
and
out
pop
inc
mov
inc
jle
sti
sub
popa
testb
add
mov
hlt
fisubl
stos
dec
lods
xor
push
scas
and
stos
sbb
movsl
xor
rcrb
xchg
ret
leave
cmp
inc
dec
mov
test
adcl
cli
popf
jle
mov
fldt
cmp
popf
mov
std
sub
push
jl
cs
movsb
push
shlb
std
dec
push
cmp
xor
xchg
add
data16
shlb
fistpl
fsts
inc
or
mov
inc
test
repnz
lock
dec
jp
jnp
dec
cmpsb
shll
hlt
xchg
and
mov
mov
push
inc
ror
add
dec
sbb
arpl
nop
push
in
adc
add
daa
mov
and
fwait
adc
mov
push
hlt
movsl
jmp
adc
gs
das
mov
sbb
mov
das
inc
test
cmpsl
sub
mov
out
mov
xor
push
dec
out
sbb
xor
into
popa
sbb
stos
mov
leave
popf
call
hlt
mov
mov
pop
pusha
loope
int3
mov
sbb
lret
and
arpl
pop
leave
out
add
sarb
in
adc
mov
or
inc
xchg
les
pop
leave
adc
cmpsl
dec
test
jns
daa
nop
data16
out
jnp
inc
lea
jbe
negl
push
jno
and
cltd
jae
loope
iret
fisttpll
dec
sbb
xor
sub
arpl
dec
jns
fwait
insb
xor
cmp
ret
movsb
pop
data16
push
inc
inc
xchg
inc
dec
dec
mov
pop
mov
out
scas
popf
es
nop
out
mov
movsb
and
arpl
dec
ja
bound
int3
jge
ds
cmp
mov
hlt
mov
dec
xor
aas
dec
mov
xchg
icebp
pop
cwtl
adcb
test
loop
push
inc
push
and
push
push
mov
ret
push
bound
enter
les
xchg
std
inc
addr16
cld
mov
in
pop
adc
lock
aam
clc
mov
add
push
dec
mov
mov
adc
rcrl
adc
bound
sbbb
test
dec
cmp
cmc
aad
movsb
into
adc
mov
or
ss
or
insl
pusha
mov
xchg
push
jp
xorl
inc
repnz
sub
dec
xchg
push
mov
cld
loop
pusha
cld
sbb
xor
pop
iret
jnp
notl
sarb
xor
jecxz
push
lret
cmc
test
adc
ljmp
hlt
push
xor
push
xor
sbb
mov
cmp
int3
test
jb
sub
mov
dec
lcall
pop
cltd
xchg
cmc
sbb
mulb
ss
adc
rorb
inc
pop
dec
es
mov
mov
sbb
push
add
xorl
xor
pop
bound
inc
lret
jne
sbb
xlat
mov
jno
jmp
gs
and
test
sbb
ja
aaa
movsl
mov
jge
push
inc
into
in
icebp
xor
test
js
lret
inc
inc
sub
js
gs
in
testb
negb
push
lea
push
jae
mov
fsts
inc
adc
cmc
stos
xlat
repnz
stos
in
into
adc
inc
xlat
dec
jnp
push
cmc
dec
add
frstor
sbb
sub
jb
in
lods
or
jmp
clc
adc
mov
mov
xchg
popf
and
pop
outsl
mov
repz
pop
stos
push
sub
jg
mov
and
pop
fmull
add
pop
push
test
lahf
call
jns
mov
pop
inc
cmp
pop
pop
or
imulb
lcall
mov
xor
rcr
push
movsb
jnp
out
stos
inc
mov
je
push
cli
or
lea
into
xor
repnz
add
adc
mov
in
pop
sub
mov
data16
mov
adc
jbe
jle
pop
mov
push
xchg
es
cmp
pop
xchg
cs
xchg
sub
push
inc
adc
sysret
int
imul
jnp
mov
pop
xchg
xor
xchg
push
jne
sbb
or
mov
in
xchg
pop
xchg
fsub
js
aas
es
push
lret
xor
stc
inc
cmp
cmpsl
adc
mov
rcrb
sbb
mov
lret
in
push
push
lods
and
insl
sub
lcall
call
lcall
out
sbb
aam
hlt
lret
dec
jecxz
aam
dec
mov
mov
iret
cmp
cmp
add
insb
cmp
jb
jp
mov
into
adc
xor
xchg
jg
push
in
or
test
idivb
dec
mul
dec
inc
cmp
movsl
mov
fisubs
aaa
fistpll
pop
push
or
xlat
cmp
pushf
sahf
and
dec
mov
out
lahf
bound
adc
filds
fisubrs
mov
xchg
clc
movsb
jmp
leave
cmp
mov
rorl
lea
pop
pop
and
add
test
lret
sub
xor
call
stos
xchg
add
push
popa
push
add
push
fwait
push
jmp
pop
cmc
pop
mov
popf
mov
stc
mov
jge
and
cmp
movsl
mov
test
popf
dec
mov
inc
popf
and
push
int3
pop
or
adc
and
xchg
mov
jp
mov
sub
mov
pop
mov
pop
jb
sub
sub
xchg
sarb
inc
lcall
mov
mov
inc
mov
dec
daa
gs
jae
hlt
enter
sbb
xchg
and
pop
dec
or
aam
xor
addl
or
xchg
push
rclb
pop
xchg
gs
shll
sbb
test
in
stos
cld
cmp
mov
in
jne
lcallw
fdivs
adc
push
fimull
arpl
or
jmp
push
jbe
cmp
or
cld
aas
mov
nop
jno
jle
stos
mov
call
mov
add
lods
jnp
imul
pop
cmpsb
push
jecxz
adc
and
cmp
jno
lea
push
cmp
add
mov
mov
scas
mov
imul
rcrl
aam
ror
or
adc
pop
mull
lea
loop
inc
data16
insl
shll
sub
lret
and
std
push
inc
movsb
lods
hlt
outsl
or
xchg
lret
lahf
movsb
enter
std
data16
mov
dec
pop
lock
mov
or
mov
mov
imul
or
dec
test
add
sbb
and
call
add
in
rolb
pop
push
lahf
test
in
sbb
jo
lret
lret
jae
push
orb
add
xchg
rcll
mov
lods
aaa
cld
stc
xchg
mov
rclb
in
dec
xor
fs
imul
jb
lret
insl
cmp
rcr
loop
jp
and
xchg
fwait
sbb
sahf
xor
xchg
arpl
add
mov
sub
sub
lret
cmc
lea
mov
stos
int
sahf
add
mov
les
and
add
sub
add
or
xor
xchg
mov
push
leave
mov
xchg
into
push
push
mov
add
inc
push
popa
lods
fsubl
rcll
push
add
cs
mov
cltd
fistpll
or
jge
jbe
jb
mov
outsl
push
xchg
lcall
lods
bnd
jp
aas
sbb
or
lret
packsswb
mov
ficoms
roll
mov
inc
push
popf
ds
outsl
or
xchg
cltd
push
adc
xor
repnz
test
jno
ds
add
leave
dec
sahf
pop
or
aam
xlat
outsb
dec
and
fldcw
mov
test
and
out
fwait
test
addr16
inc
in
cmpsb
sub
test
imul
lahf
pop
push
mov
mov
idivb
insb
sbb
ljmp
je
or
test
push
lret
icebp
negb
pop
sbb
mov
das
test
loop
pop
pop
xchg
mov
jmp
jmp
add
or
dec
iret
pop
xchg
dec
out
fs
cmc
push
xchg
pop
or
cmpl
mov
mov
shlb
adc
rcr
insl
test
imul
push
fnstenv
jnp
dec
dec
jl
cmpsb
js
mov
jle
popf
mov
dec
imul
push
pusha
sahf
mov
jge
push
shrl
pop
or
mov
sbb
bound
stos
dec
rcl
pusha
xchg
sbb
push
lds
jl
mov
pop
cli
leave
and
ljmp
ljmp
dec
sbb
loop
sbb
leave
xor
jnp
outsl
jno
cmpsb
test
inc
pusha
popf
sbbb
xchg
cmc
lods
xor
sar
and
scas
push
and
adc
jg
mov
xor
push
out
jno
sahf
call
fcomps
push
jns
std
mov
adc
iret
bound
push
add
movsb
ljmp
lock
mov
sbb
inc
cmp
pop
push
adc
movsb
sub
andl
dec
lods
and
mov
ljmp
out
mov
in
mov
dec
movsb
lock
test
inc
aaa
mov
dec
fdivrs
gs
mov
sub
and
xchg
cmc
sub
pop
lahf
push
cmc
scas
adc
test
xor
or
mov
mov
jne
aam
and
cmp
push
ds
xchg
call
mov
push
ret
in
stc
test
ljmp
sub
mov
xlat
fstpt
push
mov
jb
fsubr
dec
in
addb
stos
dec
fisubl
push
xor
or
ret
pop
loopne
ret
mov
dec
fstps
mov
xor
test
cmp
sbb
es
push
test
pop
jb
pushf
rcr
add
xor
movsb
cmp
cmp
jo
push
or
lret
xor
xchg
and
push
inc
add
ret
call
mov
sub
int
mov
lock
mov
ds
popa
imul
xchg
lods
rcrb
inc
mov
mov
int
cmpsl
jge
outsl
in
mov
addr16
xor
loope
int3
repz
add
lret
push
or
shlb
mov
gs
pop
stos
aas
push
adc
mov
dec
inc
sub
stc
loopne
pop
lods
cmpl
hlt
rclb
pop
sub
jbe
push
cwtl
inc
sub
enter
sbbl
dec
jns
push
push
xchg
aaa
and
sub
push
call
xorl
pop
xchg
jmp
sahf
leave
das
add
sub
orl
inc
xor
fmul
iret
sbb
jno
sbb
ds
hlt
lods
add
arpl
inc
xor
jbe
or
xchg
push
outsb
pop
jle
rclb
insl
jno
adc
test
lock
divl
punpckhbw
xor
daa
in
shlb
ljmp
cmp
or
dec
lahf
push
aas
mov
ds
test
scas
push
push
xchg
dec
push
mov
xchg
pop
pushf
ljmp
adc
ja
mov
rcll
sub
add
cmp
bound
adc
xchg
cmp
push
mov
mov
adc
std
mov
jl
push
popa
inc
loop
push
add
xchg
adc
adc
loop
mov
rcr
mov
inc
scas
pop
mov
cmp
inc
inc
sbb
cs
fbld
fwait
mov
arpl
test
in
lret
push
iret
popa
fsts
sti
jns
sbbb
stc
add
int
sub
lock
pop
dec
cli
fildl
dec
inc
scas
loope
mov
mov
mov
push
idivl
cmp
mov
add
jnp
jmp
lret
pop
dec
and
mov
fs
sub
and
xor
pop
push
cmp
outsl
das
inc
rclb
out
neg
outsb
iret
jns
sub
ljmp
ret
sbb
fs
xor
pop
cwtl
lcall
sbb
dec
pushf
or
or
jle
das
cltd
jnp
arpl
mov
xchg
sub
pop
cli
shlb
int
jecxz
mov
out
push
push
mov
push
mov
in
scas
enter
dec
xchg
shlb
lods
sbb
cmp
mov
stos
mov
xor
sbb
ss
xchg
scas
ret
in
cwtl
fimuls
cltd
test
in
or
stos
or
push
mov
mov
cmp
cltd
loope
mov
jp
lock
int
jg
ja
sbb
jae
push
add
aas
out
sbb
push
in
or
outsb
dec
cmp
iret
add
sahf
mov
testb
mov
lret
popa
xchg
xor
sahf
js
out
lds
push
shll
pop
leave
test
imul
push
lret
in
lds
mov
cs
int3
xor
adc
sbb
push
std
mov
les
stos
xchg
ja
std
out
mov
rcr
iret
lcall
dec
dec
dec
push
lods
cltd
adc
dec
cmp
clc
jecxz
loopne
cmp
sub
fcoms
mov
inc
cmp
inc
int
mov
fs
into
jg
inc
cwtl
outsl
xor
xchg
sbb
mov
cs
iret
out
mov
iret
jbe
aas
sub
aam
push
mov
and
pop
mov
push
push
call
push
xchg
js
push
bound
ret
faddl
mov
and
out
push
push
mov
dec
rol
stos
xchg
sbb
insb
jns
push
pop
loope
addr16
push
lret
mov
decl
push
test
mov
sahf
rorl
jb
lods
mov
mov
xchg
int
rcll
xor
and
lret
dec
mov
pop
popf
mov
sahf
xchg
inc
faddl
mov
test
mov
push
nop
or
stos
pop
pop
jmp
js
push
sbb
dec
push
gs
add
cmp
fisubl
ss
lret
cmp
cmp
xor
in
pop
movsb
push
push
jbe
int
insb
add
sahf
in
out
aaa
into
mov
push
cmp
je
add
mov
push
popa
cld
inc
movsl
cmpsl
xchg
stos
lcall
mov
mov
es
adc
and
lahf
rcrb
add
hlt
cmp
inc
jno
out
nop
push
das
cmp
aaa
jmp
xor
std
jb
jne
lods
add
in
shll
fidivrs
dec
cwtl
jbe
mov
inc
mov
frstor
inc
xor
sbb
xor
push
aaa
pushf
lret
into
xor
shlb
int3
mov
mov
add
fidivl
fs
test
mov
incl
push
iret
push
xor
xchg
repnz
mov
sub
xchg
outsl
pop
or
mov
jp
adc
dec
sub
movsb
test
xchg
cltd
fldcw
jbe
jge
bt
lret
xchg
stos
movsl
lahf
cltd
push
dec
fwait
ret
xchg
add
js
push
jno,pn
mov
mov
add
push
mov
and
fucomp
movsb
mov
ror
jg
scas
loopne
pop
mov
xchg
hlt
pop
icebp
mov
xchg
loopne
cwtl
and
ret
lahf
inc
push
jmp
inc
jl
or
pop
movb
mov
jecxz
fstpt
pop
int3
adc
pop
sbb
sbb
mov
mov
sahf
inc
les
mov
ret
adcl
cs
addr16
and
sub
and
aaa
cmpsl
int
xchg
pushf
xorb
fstpl
aad
adc
div
mov
xorb
mov
out
dec
xchg
scas
insl
repz
jne
insb
mov
jp
sti
js
dec
loope
dec
int3
push
dec
lcall
lahf
fwait
jmp
mov
daa
xchg
pop
in
sbbl
cmpsl
mov
out
out
adc
inc
movsb
add
jne
ss
xchg
leave
ljmp
jge
mov
inc
sub
sbb
cmpsl
ss
inc
add
shl
push
pop
ret
pusha
ss
arpl
imul
or
in
jb
and
jmp
mov
iret
lods
stos
mov
add
mov
mov
push
mov
aad
shll
mov
stos
or
mov
repz
not
pop
pop
arpl
xor
mov
cmp
test
jge
mov
add
inc
xchg
sub
jno
push
out
pop
push
push
int3
mov
test
push
leave
pop
cmpsl
add
imul
jp
int3
outsl
shl
mov
sub
in
cmpsl
test
stos
lcall
xchg
mov
cmp
adc
in
pop
adc
repnz
pushf
dec
sbb
jg
jnp
xchg
notb
jge
fidivl
pop
fstp
jne
mov
xor
daa
clc
inc
and
fwait
out
sbb
sub
sti
push
popa
mov
cmp
lock
sub
ficomps
movsb
or
cmp
jne
jo
inc
cwtl
sbb
pop
xchg
mov
stos
sbb
mov
pop
lcall
jmp
sub
dec
cmpsl
pop
add
pop
stos
push
inc
arpl
push
dec
cmpsb
push
andl
icebp
pop
jecxz
rolb
add
mov
test
xchg
add
rorb
fcoms
mov
dec
mov
push
shlb
xchg
insl
movb
push
hlt
cmp
lods
sbb
jecxz
cmp
mov
inc
data16
je
pop
xchg
mov
test
pop
outsb
cmp
cmp
push
adc
in
add
test
push
jo
inc
sub
dec
test
push
pop
xchg
cltd
clc
int
dec
push
ss
nop
dec
adc
sub
jns
shll
das
ret
pop
jmp
scas
xor
cmpsb
or
pop
ljmp
sub
cmc
jg,pn
int
fsubs
pop
pcmpgtd
shlb
call
mov
xor
sti
shlb
sub
lea
ret
jge
pop
and
out
arpl
dec
xor
lods
mov
push
lcall
mov
inc
test
rol
sbb
aas
mov
sub
sbb
jo
dec
push
inc
fdivrl
push
sub
repz
addr16
and
push
jns
push
add
es
stos
inc
mov
jle
push
loop
inc
adc
sti
pusha
out
cltd
test
testb
cmp
fs
pop
mov
mov
pop
or
pop
sub
adc
data16
shlb
mov
loop
mov
jp
scas
repnz
push
xchg
sbb
push
add
mov
sbb
or
xor
loopne
bnd
xor
push
or
xorb
mov
outsl
inc
daa
mov
pop
mov
xchg
das
addl
sbb
imull
movsb
push
out
xlat
out
ja
scas
rorb
inc
inc
mov
out
jecxz
jno
in
imul
or
adc
in
pop
xor
mov
and
sbb
mov
jno
ss
pop
xor
fxch
mov
rorb
add
aam
and
imul
loopne
lea
jl
loopne
stos
sbb
call
pop
mov
and
repnz
dec
cli
nop
sahf
test
inc
jmp
pop
adc
lods
push
xchg
dec
and
mov
sub
mov
mov
iret
out
les
jnp
fistpl
mov
or
fs
add
addr16
dec
repz
call
jmp
and
cmp
lahf
jno
popa
sbb
sbb
or
inc
inc
cwtl
and
es
inc
cmpsb
lret
adc
stc
leave
pop
imul
sti
pop
sbb
lds
xchg
adc
addr16
xor
in
movsb
add
push
movsl
adc
xor
mov
sub
inc
ds
lods
lods
xchg
cs
test
or
in
mov
rol
movsl
cmc
pop
aad
pop
inc
pop
rolb
decb
inc
dec
xchg
push
xchg
push
pop
pop
jo
stos
fldt
test
push
inc
pushf
jle
dec
mov
adc
addr16
mov
push
les
dec
call
fildl
das
incl
inc
daa
rorb
orb
pop
gs
dec
push
push
mov
scas
out
imul
adc
and
enter
mov
pop
popf
dec
or
push
repz
sub
jmp
loopne
test
add
sub
cmp
xor
inc
mov
mov
adc
mov
jmp
nop
cmpsb
je
sbb
xor
pusha
and
push
jp
shlb
andl
cmc
xorw
mov
cmp
mov
repz
int
mov
mov
repnz
mov
and
imul
int
push
mov
sahf
fimuls
ror
mov
cmpsb
mov
jne
sub
jmp
jg
aaa
sbb
stos
jle
into
xchg
xchg
lock
pop
adcl
fwait
jle
xorb
popf
cltd
xor
mov
popf
cmp
movsl
repz
lods
mov
movsl
into
movsb
mov
push
jle
fadd
cmpsb
imul
das
int3
push
out
icebp
mov
js
mov
jno
add
pop
or
stos
andb
lock
data16
cmpsb
mov
cli
sub
fcmovne
xchg
jo
adc
jp
mov
mov
mov
or
outsb
daa
fwait
xchg
fsts
hlt
xor
sub
aas
lods
push
test
js
xor
xchg
rorb
xchg
cmpsb
roll
bound
pop
movl
pop
xchg
jb
and
in
loopne
mov
and
test
xchg
inc
negb
push
pop
sti
es
pop
mov
scas
mov
test
xor
fwait
int3
dec
mov
dec
push
sub
pushf
adc
icebp
push
jmp
dec
insl
pop
mov
loop
clts
pushf
cs
outsl
pusha
or
xchg
mov
mov
mov
scas
inc
push
or
pusha
cs
das
icebp
sbb
add
adc
in
cmp
mov
sbb
stc
ficomps
scas
jmp
inc
out
or
loopne
rclb
xchg
mov
pop
shr
rorl
lds
out
out
fucomp
addl
subl
and
adc
out
cmp
ret
clc
add
pop
jp
add
repz
sbb
dec
sbb
dec
push
inc
out
lea
and
inc
push
jmp
xor
inc
add
mov
jp
outsl
mov
inc
sbb
pop
bound
xchg
cmp
cltd
cmp
inc
insb
xor
mov
mov
dec
int
mov
fdivs
push
subb
insb
xchg
mov
and
cli
adc
and
adcl
nop
mov
test
imul
out
pop
mov
bound
rclb
leave
out
adc
cmp
adc
adc
pop
mov
sti
lds
sbb
loope
mov
adc
adc
movsl
mov
mov
fbstp
mov
orb
or
movsb
dec
or
hlt
aam
test
idivl
lahf
sbb
outsl
test
mov
jnp
mov
pop
push
cs
lea
scas
test
xchg
sbb
mov
nop
mov
stos
mov
adc
cmp
cmpsl
das
rclb
mov
push
mov
jecxz
loope
mov
xchg
dec
jecxz
pop
insb
stc
or
mov
inc
repz
sbb
test
mov
push
mov
mov
andb
push
fcoms
hlt
add
inc
dec
push
add
push
js
add
pop
jne
subl
inc
ror
xchg
outsb
fsubp
pop
and
jg
push
mov
xchg
aas
adc
push
loopne
sbb
scas
xchg
into
fucomip
sub
push
jne
adc
push
dec
xchg
mov
outsl
roll
int3
dec
mov
xchg
mov
ja
stos
rcrl
out
fistpll
pop
xchg
jmp
mov
sub
xchg
xchg
test
jle
jle
gs
mov
mov
neg
push
or
xchg
cli
aas
pop
addr16
jbe
mov
pop
mov
pop
xor
imul
mov
or
fisttps
icebp
bound
iret
fcoms
shlb
and
push
cmc
or
lret
fcoml
mov
popf
jno
pusha
fstps
mov
xchg
pop
sbb
add
cmp
mov
and
sub
push
mov
mov
and
fadds
sbb
cld
cmpl
push
stos
in
or
or
sbb
mov
dec
jg
ss
sub
jg
das
lea
or
add
push
stos
out
sbb
lock
push
dec
mov
fldt
jge
cld
jbe
fmull
dec
in
push
jbe
lret
and
stos
adc
inc
neg
push
in
ret
les
in
scas
testl
and
mov
js
outsb
gs
dec
xchg
pop
mov
outsb
jbe
pop
sbb
xchg
lock
loope
mov
inc
into
jbe
dec
mov
ljmp
xor
movsb
in
push
jge
cld
lods
adc
int
scas
mov
xorb
sbb
sbb
or
out
loop
loop
pop
xor
push
cmpb
xor
loopne
jb
jo
cmpsb
mov
inc
xor
push
ret
xchg
sbb
lret
int3
loop
mov
xor
aam
adc
jo
fcoms
cli
dec
mov
fsts
mov
arpl
lods
mov
pop
sub
or
dec
sub
add
test
loopne
aad
push
inc
out
adcb
mov
adc
or
out
cmp
test
lahf
aas
xchg
loope
mov
lret
ljmp
js
push
cld
lods
stc
pop
and
adc
insl
jp,pt
testl
testb
repnz
mov
dec
inc
pop
lods
into
sub
jp
enter
shll
icebp
jge
mov
jo
dec
xchg
cmp
sbb
pusha
pop
fidivrl
popf
out
jmp
stc
mov
lods
sti
or
repnz
es
pop
daa
icebp
xor
mov
test
xor
xor
jmp
and
idiv
sti
xchg
rol
imul
das
ds
pop
call
cmpsb
pop
mov
or
addb
sub
aaa
jae
nop
add
sbb
sbb
mov
mov
inc
movsl
push
enter
add
mov
shl
push
stc
lds
js
subl
sub
loope
pusha
inc
insb
test
lahf
jbe
bound
cmp
pusha
in
sahf
out
mov
add
fs
ret
or
in
stc
cmc
movsl
push
dec
adc
std
dec
xchg
ret
out
mov
shll
mov
dec
cmp
mov
adc
sbb
sbb
repz
jnp
jo
mov
rolb
jo
out
mov
and
popa
add
mov
inc
adc
imul
adc
cvtps2pi
lret
mov
xlat
sbb
stos
incl
and
cs
jg
scas
inc
in
dec
push
outsb
push
lahf
cltd
call
jns
or
std
ja
and
or
outsl
daa
ret
cs
add
icebp
ljmp
xor
cmpsb
xor
jl
dec
sbb
fwait
in
pop
sbb
test
icebp
sahf
sub
js
fidivrl
mov
std
jbe
pop
pop
jb
loope
fisttps
mov
stc
outsb
jno
mov
adcl
xlat
ljmp
mov
sbb
xor
and
mov
jge
js
aam
lcall
imull
aaa
ss
lds
xchg
and
sbb
lret
adc
adc
lods
arpl
xchg
mov
and
dec
bound
inc
xchg
cmpsl
and
mov
mov
sub
pop
push
adcl
les
push
mov
xchg
and
jg
mov
pusha
xor
jecxz
inc
push
push
add
pop
je
movsb
push
ljmp
sbb
rcl
jmp
les
pop
mov
stos
lods
inc
jle
push
jge
pop
lahf
es
mov
pop
aad
inc
xor
push
xor
xlat
in
mov
lock
dec
xchg
dec
subl
sbb
ljmp
xchg
jecxz
lea
leave
jnp
insl
xor
je
xchg
enter
cs
xor
test
mov
lcall
xor
jno
movl
sbb
fs
or
jle
sub
std
imul
lret
push
pop
add
lds
out
call
add
jae
lret
jbe
mov
and
movsb
mov
in
add
bound
mov
and
xor
in
and
jp
push
push
arpl
aam
jmp
xchg
add
icebp
subb
mov
mov
xor
mov
push
inc
inc
mov
enter
and
notl
mov
mov
imul
inc
adc
call
aam
sar
mov
pop
ret
mov
ss
scas
enter
xchg
push
xlat
jp
out
icebp
aad
cmp
xor
movsl
adc
jno
outsl
mov
stos
out
cltd
and
dec
mov
scas
jle
dec
pop
xlat
mov
inc
push
icebp
and
dec
fisubrl
fmuls
mov
loop
repnz
pop
aad
repz
mov
adc
ret
cmp
push
popf
push
rcr
lods
mov
sub
add
sbb
pop
movsl
and
lahf
mov
mov
subl
aad
cltd
icebp
add
pushf
xchg
imul
sbb
test
stc
pop
push
dec
ss
ja
mov
sub
aaa
cld
loope
jae
scas
adc
inc
into
test
xchg
and
std
xor
enter
lea
fstpt
in
push
cmpsl
push
addr16
xor
dec
xchg
out
loop
in
jne
js
mov
or
mov
mov
xchg
stc
addr16
stc
xor
sub
cs
pop
ret
push
mov
outsb
push
jb
or
incl
adc
pop
outsl
sti
cmpsb
sub
mov
scas
lret
sub
int
incl
test
cltd
and
idiv
cltd
jmp
sbb
loopne
int3
add
push
mov
inc
inc
sahf
iret
sbb
daa
das
push
es
mov
push
frstor
inc
lret
push
aad
sarl
pop
je
pop
outsb
shlb
dec
lea
sub
and
test
inc
xchg
mov
xchg
jbe
xchg
out
jne
mov
sarb
popa
cmpsl
adc
cmp
fisttpl
rcrb
popl
inc
push
cltd
fldt
enter
jg
insl
cmpsb
ret
inc
iret
push
outsb
push
fidivl
roll
jmp
cltd
cmp
lods
movsl
pop
in
cld
dec
mov
pop
sbb
iret
mov
jnp
lret
push
inc
ret
push
xchg
loop
push
xchg
imul
xor
cs
add
dec
and
push
sar
add
or
xchg
dec
xchg
test
lret
nop
or
in
dec
pop
adc
jae
fists
lea
test
mov
jp
ljmp
inc
mov
sbb
fcoml
cmpsl
negb
xchg
pop
jne
lret
inc
lcall
fst
inc
rcrb
cmp
sti
js
outsl
pop
adc
xlat
xchg
movsb
scas
jbe
out
scas
jmp
pushf
lods
aas
repnz
loope
mov
cmp
insb
mov
adc
roll
fnstcw
or
pop
mov
and
cmpsl
adc
add
movb
movsb
loopne
lcall
pop
push
sbb
aas
push
imul
mov
scas
out
and
fs
into
adc
inc
sar
lea
add
inc
dec
dec
sub
in
mov
and
lret
iret
or
call
mov
cmp
cltd
jg
lahf
push
or
add
xor
sbb
push
cmp
popa
int
and
push
inc
or
dec
js
and
add
negb
shrl
cmpsb
push
lea
dec
jle
cli
ret
leave
imulb
xor
roll
out
into
inc
pushf
div
pusha
gs
dec
and
popf
repnz
mov
aas
mov
hlt
xchg
dec
cmc
stos
pop
imul
es
cmpsl
das
pop
sbb
ljmp
jp
cmpsb
arpl
das
pop
pop
add
mov
cmc
xchg
enter
inc
out
jb
jecxz
mov
cmp
push
lea
xchg
addr16
push
lds
sbbb
shrl
loopne
xor
cld
jo
mov
xor
adc
sub
push
sbb
lret
icebp
hlt
stos
repz
imul
cli
pushf
mov
addr16
mov
xlat
shlb
push
stc
rorb
cmpsb
cltd
sub
in
pop
jnp
in
sub
movsb
mov
pop
jl
sbb
mov
lock
xor
inc
jno
out
rorb
inc
je
push
cmp
adc
mov
repnz
push
aas
stos
sub
dec
jge
ds
cmp
push
jp
sahf
xchg
sbb
pop
sahf
test
pop
ret
ret
into
or
push
arpl
iret
dec
sbb
or
clc
outsl
xchg
fdivl
and
dec
push
mov
fstpl
outsb
add
add
aaa
fwait
xchg
or
pop
sbb
nop
lret
movsl
pop
jge
cmp
and
lahf
shrb
das
jbe
and
jle
push
enter
add
add
mov
xor
jb
out
test
call
push
jne
ds
aam
iret
cmpsl
add
adc
pusha
add
sub
mov
mov
and
sbb
and
sub
popa
mov
xor
mov
dec
jl
in
pop
arpl
subb
xor
clc
or
xchg
aas
cmpsl
mov
sub
fildll
out
sbb
jo
jbe
test
xchg
outsb
leave
rorb
call
icebp
mov
xor
jns
or
cwtl
cmp
ljmp
pushf
jle
es
sbb
xlat
ja
in
push
jp
test
in
add
xchg
jns
pop
xchg
mov
xor
adcb
cmc
mov
cltd
ss
mov
xchg
iret
pop
dec
pop
sub
lea
xor
ror
lahf
int
inc
enter
out
pop
cmp
sbb
aaa
out
idivl
enter
ljmp
dec
xchg
xchg
dec
cltd
test
jmp
add
in
mov
inc
xor
xchg
dec
xor
push
xchg
mov
add
arpl
das
ja
cs
nop
pusha
lea
and
xchg
test
ficompl
mov
dec
shrl
imul
popf
and
add
and
ret
pop
jge
xchg
cmpsb
jecxz
movsb
popa
push
sarb
pusha
loop
scas
or
add
and
icebp
hlt
push
pop
rolb
xchg
sbb
mov
sub
mov
fldl
lret
jae
push
adc
repnz
insb
xchg
out
popl
sub
jg
popf
dec
xchg
xchg
rcl
cmp
je
lods
sti
jo
or
je
insl
xchg
notl
xchg
movaps
out
inc
bound
push
cmp
inc
sub
sbb
je
aad
xchg
xchg
int3
cmp
scas
dec
cmp
lret
sbb
mull
and
mov
insb
or
popa
sub
fildll
sbb
das
xor
xchg
or
hlt
rcrb
testb
loopne
xor
daa
mov
mov
xchg
sub
or
scas
push
mov
jbe
ja
adc
pop
shrl
les
loop
fisubrl
pop
mov
xchg
jo
outsl
xchg
imul
dec
ja
fadds
into
mov
ljmp
cmc
mov
add
jne
mov
popf
mov
les
test
push
mov
jbe
dec
push
sub
sub
sub
adc
cmp
pop
imul
xor
int3
mov
cmp
xor
dec
addb
xor
mov
cmp
mov
sbb
xbegin
mov
mov
xor
dec
cli
loopne
dec
mov
fwait
push
sub
and
outsl
jle
stos
cmpsb
push
jnp
cmpsb
cs
and
pop
mov
lret
sar
out
aad
out
adc
xlat
in
movl
loop
adc
test
int
add
and
fstps
inc
enter
sub
jno
mov
std
jbe
in
sbb
outsl
out
loope
loopne
ret
mov
pop
cs
add
aam
inc
push
add
imul
xor
lds
dec
pop
in
push
sbb
scas
scas
in
mov
scas
in
cmp
push
movsb
mov
out
jo
inc
fcompl
jno
lock
mov
rcrb
sar
cmp
int
sub
ret
jge
sub
and
jge
or
data16
pusha
roll
loope
mov
xchg
jne
add
pop
lcall
std
jp
push
inc
xorb
sbb
jmp
xor
test
add
cs
lds
std
xor
gs
inc
jnp
mov
pop
push
cmpsb
sbb
push
or
test
mov
mov
adcb
cmp
push
cli
hlt
cmc
lods
aaa
mov
rorl
rcll
jno
in
mov
jge
lret
jbe
addr16
push
loopne
lret
pushf
mov
ja
data16
mov
scas
repnz
mulb
rcll
mov
ljmp
fcompl
cli
sahf
cmp
mov
mov
add
pop
push
fs
rclb
xchg
dec
inc
mov
ja
and
fs
jbe
aam
jbe
cld
adc
add
inc
aam
dec
xchg
xor
sbb
pop
cwtl
shrb
dec
push
sti
shlb
or
push
adc
push
pop
cmp
les
cmp
xor
and
fisttpl
icebp
or
inc
jl
sub
mov
cmp
cld
pop
jo
popf
and
adc
bound
mov
mov
scas
mov
cmp
push
mov
push
idivb
sub
andl
sub
les
xor
sub
pop
std
fcompp
lcall
xchg
stc
jnp
mov
sbb
testl
dec
movsl
adc
add
sbb
aad
je
or
or
adc
push
sbb
mov
mov
push
push
arpl
xor
cmpl
mov
sub
out
mov
push
inc
pop
fisubl
and
xchg
movsb
sub
lret
adc
add
or
xchg
ja
shl
mov
adc
mov
inc
shlb
outsb
test
scas
nop
or
fwait
mov
fcompl
out
mov
push
movsb
jns
xor
lret
pop
dec
push
mov
push
bound
pop
pop
add
xbegin
cmp
mov
xor
scas
ss
xor
add
sbb
xchg
adc
and
jle
aaa
lds
sub
jg
repnz
pop
fisttps
mov
xor
jle
add
fwait
cmp
mov
add
lcall
sub
pushf
pop
sbb
mov
scas
nop
pop
fistps
xor
pop
xor
lret
mov
addl
mov
lret
fisttpll
push
mov
mov
xchg
je
fcomi
aad
mov
pop
hlt
ret
imul
mov
or
and
and
cmp
mov
jecxz
loop
jns
mov
xchg
mov
xchg
divb
dec
out
pop
xchg
fsubl
mov
jnp
lods
out
jns
lods
inc
scas
push
mov
adc
xchg
pop
sub
xchg
lods
pop
jmp
sbb
and
cs
mov
inc
or
push
mov
cld
and
and
xor
and
es
aam
xor
mov
shll
imul
negb
es
xchg
out
mov
je
dec
test
or
xchg
xchg
gs
cli
hlt
scas
mov
lods
adc
dec
sub
fldcw
push
mov
cmpsl
mov
lcall
outsb
xchg
fs
pop
jmp
pop
popf
add
xchg
xchg
mov
pop
inc
btr
jle
jnp
dec
imul
aam
mov
push
mov
pop
sub
push
in
cld
clc
sbb
addr16
dec
je
scas
aad
jns
push
mov
repz
xor
jbe
push
repz
sbb
sub
ss
pusha
mov
insb
mov
mov
loope
inc
pop
jecxz
or
push
mov
daa
mov
lock
in
jecxz
xchg
xor
dec
std
cwtl
hlt
or
push
repz
xor
int3
fcomps
push
or
mov
sbb
sub
ss
rcr
pop
fstpl
fs
mov
sbb
jns
test
fcoml
jno
leave
ljmp
push
push
push
adc
xor
pop
add
jle
sub
movsl
mov
shrl
or
es
mov
gs
out
cmp
mov
imul
mov
jle
pop
int
cmpsl
sbb
arpl
sub
sbb
xchg
sub
dec
aas
pop
popa
and
jbe
imul
mov
add
imul
shl
sub
jne
divb
xor
mov
rcrl
mov
push
mov
jb
outsl
ret
or
imul
add
adc
les
jae
sbb
pop
pop
mov
test
xchg
xchg
jns
fdivl
lds
jo
test
jg
fdivrl
idivb
icebp
xchg
cmp
xor
sub
pop
fsubs
xor
or
inc
outsl
mov
shlb
xor
scas
push
xor
test
xlat
scas
loope
adc
or
rcrb
dec
jnp
mov
pop
xchg
mov
inc
xchg
popf
not
imul
add
aaa
shll
aas
cwtl
sbb
inc
inc
loopne
mov
or
ja
out
mov
aas
js
xor
pop
mov
and
in
in
push
shrl
mov
or
add
pop
cmp
flds
xor
dec
icebp
mov
sbb
mov
cmpsl
addl
mov
lret
pop
scas
xor
fst
adc
lret
outsb
add
jb
inc
push
mov
inc
xorb
cmp
ljmp
sti
add
adc
aas
add
insl
jb
sarl
jge
inc
stos
or
mov
mov
push
cmp
sub
push
leave
lret
mov
outsl
insl
add
pop
cltd
jbe
shll
aad
in
aam
lods
mov
pop
icebp
roll
ret
clc
ds
mov
gs
scas
sahf
push
dec
and
mov
inc
std
stos
pusha
cld
gs
jns
rcrl
mov
test
aam
sbb
mov
jle
sti
test
dec
pop
xor
and
sbb
xor
popa
andb
push
pop
in
mov
ljmp
cmpsl
mov
mov
mov
ja
mov
mov
mov
add
jmp
sti
cmc
popl
dec
dec
aad
cltd
pop
adc
xor
aas
push
aad
mov
mov
inc
fldl
mov
decl
mov
clc
ret
mov
xor
mov
cmp
mov
into
push
and
mov
and
inc
xchg
xchg
xchg
add
shll
mov
xorb
jbe
lahf
inc
rcll
dec
sbb
jns
xchg
mov
pop
mov
out
aam
mov
xlat
inc
add
jae
push
xor
loop
adc
ret
stc
jl
aam
push
push
mov
inc
notb
cwtl
or
push
mov
pop
in
test
scas
mov
push
jecxz
mov
xchg
cmpsb
inc
jns
stos
mov
loope
add
ljmp
sbb
mov
mov
lods
idivb
and
jmp
jns
movsb
inc
lea
fwait
dec
fs
cmp
inc
aas
lock
out
repz
add
jns
stos
loope
add
add
adc
mov
shrb
adcb
push
xchg
add
push
por
adc
jo
xor
cmp
es
lds
jge
aam
sbb
ljmp
outsl
mov
mov
ret
shrl
lods
push
and
mov
pop
mov
xchg
int3
and
pop
loop
test
dec
jb
mov
hlt
cmp
jae
push
push
xchg
mov
jle
xor
cltd
xor
int
or
movsb
dec
mov
lcall
jge
enter
imul
ja
xor
mov
fs
xchg
mov
dec
cmc
adc
cli
bound
lea
repnz
insb
jo
hlt
mov
pop
dec
mov
aaa
jp
inc
pop
push
test
lahf
gs
pop
lret
add
or
out
dec
hlt
push
fwait
mov
mov
mov
sub
je
xchg
push
decb
inc
inc
or
sbb
fistpll
and
mov
in
sbb
push
dec
sti
push
imul
test
inc
pop
jecxz
dec
jmp
or
or
cmc
addr16
out
push
xchg
jno
aad
prefetcht1
mov
mov
jg
add
xchg
cmp
sub
push
ljmp
and
cs
pop
out
dec
dec
aam
lcall
push
cmp
jnp
out
xor
cmp
xchg
adc
inc
mov
or
shr
jne
seto
out
cmp
mov
cltd
aas
jo
cmp
and
push
ljmp
jb
and
lock
add
ret
fsubp
stos
push
pop
inc
lahf
xor
into
cltd
nop
xor
lock
and
push
sbb
and
cmp
push
mov
outsb
jge
data16
inc
dec
jmp
mov
add
lods
addr16
mov
xor
stos
std
cmp
ret
loopne
enter
lds
sbb
pop
orb
pop
add
xlat
mov
ss
mov
mov
shrb
jnp
sub
mov
stos
call
push
xor
jp
js
pop
cmp
push
test
js
sbb
mov
pushf
dec
lcall
imull
std
adc
or
dec
push
jg
and
pop
out
in
data16
push
aas
mul
jbe
js
int
adcl
es
loope
cmp
addr16
add
add
ja
and
push
lock
ret
and
jge
loop
jbe
pop
push
push
adc
std
mov
xor
pop
jl
in
pop
adc
addr16
jae
cmpsl
lds
jecxz
mov
push
push
jns
ret
pop
inc
mov
pushf
xlat
cmpsb
fistpl
mov
std
in
pop
mov
fs
mov
insl
pop
mov
jg
sub
pop
rol
es
orb
jecxz
pop
cs
lcall
jge
jne
or
cli
in
sub
add
decb
xchg
ljmp
xchg
loop
in
jmp
mov
cli
jmp
mov
sub
mov
xchg
cmc
movsl
adc
fnstsw
jg
push
andb
ss
mov
inc
mov
sbb
pop
pop
out
and
test
out
jl
lea
and
mov
dec
cmp
push
sub
aam
divl
jg
sub
mov
pop
pop
sbb
test
lods
cmp
cmp
insb
dec
sbb
fcompl
xchg
stos
sahf
adc
adc
ss
jae
ljmp
mov
popf
out
cmp
movsb
dec
leave
dec
dec
jle
popa
outsl
fisubrl
add
cmp
jp
sbb
std
mov
repz
and
sti
mov
adc
gs
jno
hlt
icebp
fs
jnp
mov
cs
stc
xchg
xchg
aad
call
cmp
mov
leave
jle
push
xchg
inc
xlat
ret
in
inc
pop
xchg
or
fadds
jl
outsl
mov
sbb
mov
test
jb
js
push
out
xorl
xchg
cmp
push
adc
incl
cmp
in
jno
xlat
aaa
cmpsb
loope
mov
inc
pop
pop
pop
out
inc
dec
loope
mov
rorb
cmp
mov
lcall
xchg
mov
shr
incb
loope
out
xchg
lret
xor
pop
fstenv
mov
cmpsl
sub
xchg
movl
lahf
sub
push
ljmp
decl
jge
lret
adc
lahf
push
and
mov
pop
cmp
cmp
out
out
push
call
popl
gs
stc
jg
clc
dec
cmp
inc
scas
or
int3
js
ret
stos
mov
loopne
xor
or
cmp
jmp
mov
cltd
gs
lock
jge
fucom
ds
outsl
pop
ja
nop
mov
add
mov
aad
mov
lcall
fcoml
pushf
outsb
fwait
cwtl
inc
xchg
jecxz
inc
xchg
daa
js
push
cmp
xor
add
push
push
jge
push
mov
pop
rcll
xor
outsb
loop
jb
into
sbb
add
clc
scas
push
testl
cli
adc
xchg
std
dec
mov
aam
push
mov
mov
repz
scas
fimuls
stc
jg
cmpsb
pop
inc
pop
scas
in
sub
adc
mov
insb
sbbb
lds
mov
mov
dec
xlat
mov
add
jnp
xchg
sub
push
movsl
sub
les
mov
mov
cmc
and
mov
loopne
sub
mov
lea
push
and
mov
xchg
adc
mov
xchg
pop
test
adc
mov
xchg
out
lret
shlb
pop
jp
sub
push
jl
cmp
sub
or
and
push
sub
push
out
std
addr16
fidivl
je
add
inc
fwait
cli
xchg
push
push
ja
out
jge
repnz
sti
fldl
push
loope
jecxz
imul
sub
loop
cmp
loopne
push
jno
scas
add
test
or
andl
outsb
outsl
cmp
push
cmp
sub
lcall
cmp
cli
ret
test
sub
sbb
and
xchg
push
testl
enter
clc
sbb
xchg
scas
jne
jge
out
adc
xchg
pushf
adc
sub
sbb
sub
push
out
mov
push
jecxz
mov
ljmp
sub
add
fwait
jne
jle
dec
adc
es
jb
testl
and
out
pop
lods
pop
pusha
pop
adc
mov
jnp
push
in
sub
stos
push
add
and
mov
bound
pushf
lahf
outsl
sub
or
and
cmpb
pop
nop
popf
jo
pop
popa
lods
cltd
push
mov
test
scas
sub
test
lds
push
outsb
mov
or
sti
das
enter
movsl
mov
clc
loope
jecxz
pusha
fdivrs
sbb
adc
int
outsb
inc
pop
cltd
js
push
fcoml
pushf
push
inc
fwait
out
les
test
rclb
ret
mull
imulb
es
push
jo
pop
mov
sub
cs
add
fimull
sbb
push
sub
jnp
mov
pop
or
lds
xor
xor
or
ret
mov
ljmp
jecxz
fnsetpm(287
test
mov
shlb
cwtl
outsb
dec
out
mov
in
sub
xchg
subl
push
cmpsl
dec
adc
mov
fisttps
sbb
xor
loope
jl
in
das
cs
jns
pop
aas
jno
sbb
xor
dec
cwtl
cmpsb
in
jmp
mov
mov
xchg
jmp
mov
push
insl
push
pop
mov
divb
lcall
or
xor
mov
std
repz
and
into
dec
dec
inc
sbb
imul
cwtl
pop
xchg
lret
adc
shll
push
fbld
xchg
rcrb
ljmp
scas
out
jne
in
iret
xchg
jg
in
or
cmp
cs
sbb
ficompl
lods
cmp
fs
loop
mov
aaa
xchg
nop
sub
pop
test
add
adcb
daa
xchg
pop
addr16
outsb
arpl
xchg
and
pop
stc
sti
add
loope
in
dec
xchg
dec
push
pop
sbb
sub
pop
aam
cmpsb
addb
enter
dec
xor
push
pop
data16
adc
sar
and
lods
popa
dec
push
in
sbb
cmpsl
jb
mov
das
dec
sub
fnstcw
bound
lea
test
pop
xchg
js
jbe
xor
xchg
hlt
scas
shrb
mov
fcompl
lcall
aas
loope
fdiv
add
mov
out
jne
and
mov
mov
mov
jmp
jns
rcrl
in
mov
pop
shl
nop
es
clc
shlb
test
xchg
outsb
or
cmp
movsl
inc
shl
rcrl
loope
lahf
adc
mov
das
jl
push
fdivrl
in
xchg
movsl
mov
pop
fstpl
ss
lret
adc
and
sub
les
aad
mov
sbb
and
jle
add
xor
lock
add
or
rolb
add
sti
add
in
mov
into
xorl
ja
fwait
add
push
and
cmp
popf
sbb
xlat
dec
test
mov
sbb
pop
jp
and
fimull
int
sbb
scas
pushf
aam
push
mov
sub
mov
fildl
js
shrb
mov
icebp
out
and
scas
jo
sub
inc
mov
movsb
push
data16
jne
loop
inc
aas
fldt
call
inc
faddl
push
mov
pusha
push
add
jne
push
into
call
das
adc
testb
sub
sbb
out
push
dec
scas
and
ljmp
test
inc
cmp
stc
pushf
cs
xor
std
out
adc
fstpt
sbb
ficomps
rol
bswap
and
inc
stos
push
movsl
imul
fistl
call
jns
sbb
mov
std
call
outsb
sub
cmp
jae
test
mov
lahf
ret
das
or
cmpsb
mov
cmp
adc
lret
pushf
and
push
jnp
in
scas
out
shlb
mov
ret
mov
sub
sbb
inc
jecxz
mov
fsub
and
xchg
cli
enter
lods
mov
inc
je
or
add
cld
add
add
jb
das
in
aaa
lcall
loope
cmpsl
test
pop
lahf
mov
test
sub
cmc
xchg
jnp
rcrl
cli
dec
in
shll
rorb
pusha
dec
sub
test
fld
in
jl
repnz
jno
std
add
mul
sub
sbb
pusha
in
dec
cltd
lea
inc
aas
ss
ja
or
and
in
sti
mov
mov
clc
jnp
movsb
and
jo
and
popl
xor
mov
lcall
lret
insb
mov
iret
fst
cwtl
dec
push
sbb
cmp
or
mov
cs
adcl
xchg
cmp
mov
dec
lret
inc
push
or
aas
sti
cmp
test
jo
xor
jo
stos
cmp
jle
imul
mov
loope
mov
and
xor
pop
jmp
out
jb
push
sub
and
mov
and
xor
hlt
bound
xchg
pop
xchg
scas
fldt
cli
fwait
sub
push
repnz
sub
xor
je
sub
mov
scas
icebp
inc
inc
cld
les
movsl
xchg
adc
test
mov
hlt
mov
out
push
mov
dec
out
push
test
loope
out
add
aam
jb
jnp
jg
xchg
xor
sub
outsb
cmp
inc
nop
jmp
add
and
movsb
arpl
cltd
push
sbb
xchg
cld
push
inc
in
subb
test
jl
add
inc
mov
stos
lcall
gs
mov
xor
push
popf
cmp
or
movsb
push
sbbb
les
in
and
add
orb
add
in
in
sub
jmp
cmp
jno
clc
adc
sub
out
add
fildll
sbb
es
mov
push
scas
cmp
xor
mov
lret
jo
outsb
and
dec
mov
xchg
lahf
push
jecxz
nop
test
pop
jecxz
sbb
and
mov
stc
sub
xor
sbb
insl
push
les
pop
mov
int
jmp
cmpsb
lahf
cwtl
jno
mov
ljmp
lds
inc
test
xchg
into
pop
pop
sub
mov
or
scas
movsb
xlat
stc
cmp
fsubp
test
adc
insb
lret
add
and
jae
test
cmp
push
cmp
imul
inc
pop
xchg
lahf
out
scas
insl
out
push
xchg
enter
cmpsl
stos
jnp
xchg
imul
and
loope
push
fs
push
leave
shll
or
sbb
aas
loopne
int
jecxz
pop
negl
ret
sub
rclb
adc
cs
pop
aaa
movswl
mov
int3
fcoms
stos
mov
addr16
mov
dec
enter
or
aad
addr16
cmp
fisubrs
and
jle
and
or
cld
cmc
sti
mull
fstl
into
mov
pop
jae
je
into
or
push
inc
inc
push
adc
push
aaa
loope
fiadds
scas
xor
adc
fisttps
in
pop
es
xor
test
or
push
add
insl
mov
sahf
sub
jns
sub
dec
fs
frstor
aas
hlt
out
sub
testb
adc
cmp
insb
fldt
xchg
ljmp
pop
hlt
push
les
cmp
mov
push
fbstp
sbb
movsb
push
aas
das
dec
sbb
dec
test
and
dec
cmp
cltd
into
adc
dec
mov
mov
iret
inc
sbb
daa
aad
cmpb
xchg
data16
jbe
xlat
into
mov
push
clc
xchg
sub
sub
nop
imul
jno
push
jne
insb
and
cmpsl
test
xor
out
call
and
lret
aad
mov
xor
add
jle
rcrl
jo
mov
negb
outsl
cmp
mov
xchg
scas
mov
loop
fldcw
fidivrl
sub
iret
cltd
xchg
jmp
repz
jle
push
jo
xor
outsb
mov
ja
fnclex
cwtl
mov
sbb
sub
rcrl
xchg
lods
mov
xor
and
nop
test
insb
jb
xchg
mov
cmp
push
movsb
mov
cmp
push
faddl
pop
cmp
xor
lds
movsb
cmp
mov
push
cmp
je
aaa
shrl
push
add
ret
adc
test
outsb
pop
dec
jmp
push
jbe
push
push
inc
pushf
shl
jl
dec
sbbl
cmpsb
mov
jbe
jecxz
pop
lahf
sub
loop
cs
push
stos
push
jae
adc
mov
imul
cli
jno
cld
enter
dec
rcl
push
push
test
enter
mov
mov
aaa
mov
mov
pop
xchg
test
add
mov
and
sahf
sub
adc
fstps
jge
loopne
mov
cmpl
add
inc
add
call
xor
adc
cmpsl
mov
es
or
outsl
insl
sbb
int3
les
dec
shlb
jmp
jb
ret
inc
jo
inc
subb
sub
add
xchg
add
adc
mov
sub
cmpsb
jo
fbstp
cmpb
dec
xlat
out
and
mov
cmp
jnp
pop
lods
cltd
inc
aaa
pop
loope
outsb
jae
mov
dec
fsubrs
mov
or
lea
xor
je
int
xlat
lock
movsl
notl
ljmpw
subl
in
mov
pop
mov
fldl
rclb
xor
cmp
fstl
clc
push
sbb
lock
test
in
scas
dec
sti
psadbw
push
xchg
xchg
mov
cmp
and
pop
dec
outsl
xor
daa
pxor
insb
movsb
imulb
imulb
sub
jp
sti
shlb
inc
filds
imul
aas
adc
adc
movsl
cmp
ret
or
cmpsl
test
outsb
daa
pop
pop
mov
aad
sub
icebp
xor
ss
mov
scas
or
add
xor
cmp
fwait
push
sub
mov
bound
push
sbb
xchg
in
int3
or
hlt
adc
movsl
mov
ss
mov
cmc
movsl
scas
lahf
pop
pop
dec
scas
add
dec
fcoms
imul
movsl
xor
ja
mov
sub
cmpsl
and
in
call
add
out
mov
cmp
fistpl
mov
mov
daa
xor
jbe
xchg
dec
mov
add
rorl
mov
mov
iret
dec
test
cmp
jl
and
inc
or
pop
push
outsb
jge
fwait
mov
rcr
das
cmpb
inc
push
lea
int3
test
jl
lcall
or
bound
shl
jnp
inc
xchg
push
mov
ret
enter
push
or
repz
fs
or
rcrb
cmp
ds
gs
push
or
shl
stos
adc
jbe
cmpsl
loopne
jo
in
stos
mov
imul
mov
inc
xchg
mov
mov
leave
jle
les
jnp
push
scas
in
gs
test
add
cmp
aam
inc
leave
lds
adc
add
cwtl
mov
nop
icebp
push
lcall
xchg
mov
fldcw
dec
fnsave
dec
mov
call
jnp
xchg
cmp
sbb
incb
addr16
mov
rclb
and
pop
ja
xchg
shr
sub
cwtl
cmp
repnz
sbb
add
in
ret
sub
push
lahf
loopne
adc
aaa
push
pop
adc
add
addl
std
in
or
sub
out
xor
addb
enter
je
repnz
out
inc
movsl
lret
pop
jo
in
popl
ds
jnp
sub
mov
cmc
aaa
mov
add
icebp
cmp
xor
psubsb
cmp
adc
xchg
mov
hlt
dec
xor
daa
mov
outsl
push
mov
out
mov
cmp
repz
movsb
sbb
hlt
jecxz
roll
int3
jo
push
adc
aas
cmp
jns
fmull
or
arpl
and
pop
insb
in
dec
pop
ds
test
pushf
dec
ret
add
shrl
and
or
repz
add
lret
xor
or
mov
lcall
adc
loope
sarl
mov
pop
imull
pop
or
pop
iret
int3
nop
out
inc
pop
test
adc
popa
addb
add
ljmp
sbb
into
pusha
mov
mov
pop
dec
cld
adc
sbb
ss
adc
pop
cmpxchg
mov
lahf
dec
mov
push
and
xchg
push
lea
inc
mov
pop
mov
mov
data16
adc
push
adcl
push
lods
int
cltd
test
mov
sbb
xlat
insb
dec
in
in
or
je
lret
hlt
inc
sub
popf
es
aas
rorl
xchg
dec
je
push
push
jg
leave
cmpsl
mov
movsl
push
xchg
xlat
pop
inc
xor
push
dec
adc
mov
and
cmp
shll
xchg
data16
inc
paddusw
mov
loop
loope
outsb
pop
pusha
pop
jbe
loopne
test
ret
out
cmc
xchg
sub
fnstsw
jns
ss
enter
sub
and
cmp
addl
shl
pop
cs
stos
sub
xchg
das
out
hlt
fmul
mov
adc
sbb
dec
xchg
jns
data16
dec
rclb
lods
cwtl
xchg
cli
push
in
aad
mov
mov
pop
mov
and
rcr
in
xchg
aaa
jge
xchg
daa
sbb
repnz
imul
jae
push
aaa
enter
push
jnp
fstl
test
jge
movsl
addr16
xor
in
out
aaa
arpl
ljmp
stos
inc
out
push
and
imul
xchg
cvtpi2ps
add
arpl
outsb
outsb
inc
aaa
mov
xchg
gs
repz
lcall
and
adc
xchg
mov
push
popf
cwtl
sbb
pop
adcl
clc
xchg
loope
xor
xor
fwait
inc
scas
xrelease
mov
xchg
pop
cld
nopl
cwtl
inc
add
mov
pop
jo
int3
mov
enter
adc
jne
int3
mov
enter
icebp
lahf
add
cmp
outsl
scas
pop
xorl
jns
mov
xor
mov
jnp
pop
cmp
or
insl
add
add
lea
outsb
test
jbe
movsb
shrl
dec
cmpsb
pop
pop
mov
aaa
call
jo
fidivrl
mov
fimuls
cmp
and
clc
lock
cld
inc
ret
or
nop
add
sahf
into
std
insb
cli
ja
dec
in
rorl
pop
ljmp
and
sbb
stc
aam
and
mov
rcl
mov
cmp
es
adc
imul
hlt
xchg
jmp
pusha
clc
iret
and
dec
fimuls
sbb
fistpl
dec
outsl
fisttps
push
out
push
fs
mov
dec
pop
or
imul
lahf
movsb
adc
push
fdivrs
test
mov
inc
pop
push
xabort
icebp
ds
sarb
ljmp
jge
cmp
movsl
cmpsl
sbb
repz
jge
cwtl
push
into
xchg
aaa
test
sbb
mov
ja
xor
pop
fdivrl
dec
mov
mov
ljmp
iret
dec
pop
fldcw
jge
movsb
jge
addr16
adc
testb
jae
mov
xor
add
and
jae
sbb
mul
cmp
xchg
add
push
mov
mov
mov
out
sub
mov
sbb
xorl
inc
inc
push
push
inc
inc
test
adc
add
jns
aas
adc
and
fisttpl
inc
ja
imul
fidivs
jnp
and
jne
sbb
aad
dec
or
lods
sub
fistpll
popf
dec
rclb
pop
xor
jne
faddp
sub
and
push
loopne
inc
cmp
xor
orb
and
push
xor
scas
repz
repnz
pushf
xor
lahf
scas
movb
cwtl
adc
out
rcll
ja
repnz
sub
xchg
je
enter
jno
mov
adc
inc
call
leave
push
sbb
adc
bound
sti
xorps
addr16
repnz
frstor
dec
pusha
mov
or
xor
push
or
leave
idivb
lret
in
add
mov
pusha
fdivr
push
dec
and
mov
pop
enter
pop
mov
daa
in
movsb
mov
sti
lods
jb
xor
pushf
adc
jnp
mov
or
jg
mov
sahf
ud2
rclb
test
int3
mov
dec
push
adc
repnz
in
sub
ret
pop
push
lods
dec
lods
or
out
ret
lods
mov
stc
dec
jmp
cmc
hlt
cmpsl
pop
popa
test
lret
sahf
jecxz
into
sar
adc
ljmp
faddl
cmp
addb
sarl
jl
mov
jnp
inc
fisubl
xchg
ljmp
addr16
inc
popf
or
adc
andb
xlat
push
shl
pop
push
pop
mov
lcall
pop
sbb
adc
jno
jns
pop
rcrb
fld
jb
pop
jb
aam
xor
in
mov
sbb
out
adc
movsb
or
xchg
adc
loopne
mov
or
pop
sbb
or
test
mov
dec
add
lods
ficomps
jge
ljmp
jecxz
push
mov
mov
scas
pop
cmpb
xor
pop
aam
cmp
into
gs
aam
push
test
mov
sti
gs
add
mov
data16
lea
mov
sub
pop
sub
pop
or
cmp
jg
ljmp
js
sti
scas
fisubrl
dec
jb
inc
imul
aaa
and
or
andl
imul
fisttpll
mov
adc
fcoms
in
fs
lcall
and
insb
jmp
jne
cmp
popf
ror
adc
xchg
test
xor
dec
nop
and
push
push
mov
ja
cwtl
das
sbb
mov
xor
jb
mov
aas
mov
jb
fs
les
popa
mov
add
cmpsb
in
shrb
jmp
cmpsb
nop
movsb
sahf
cmc
dec
int
leave
and
js
cmpsb
push
outsb
test
pop
push
cs
jge
mov
clc
dec
inc
out
mov
xchg
fnsave
pop
jbe
pop
test
lods
clc
inc
pop
fistl
push
and
mov
scas
push
data16
andl
mov
mov
cmpsl
ljmp
mov
sarb
fwait
test
ss
fstpl
psrad
jns
popf
add
fbstp
into
pushf
notb
ficomps
pushl
stc
pop
gs
fists
outsl
dec
ret
push
imul
pop
in
lcall
ret
fst
mov
lret
out
repnz
sub
pop
test
jle
adc
sbb
imul
les
jmp
test
cltd
ret
pop
or
pop
mov
xchg
xor
push
inc
ljmp
std
sbb
dec
in
jmp
pop
repz
negb
jno
inc
push
cmp
ja
mov
sub
clc
js
sbb
fcomi
in
mov
roll
imul
adc
ret
cmc
xor
dec
mov
in
mov
pop
lret
xor
mov
sbb
xor
or
xor
push
cld
pop
pop
repnz
or
addb
fildll
and
pop
add
call
lds
lahf
sub
sub
leave
stc
mov
lret
push
mov
inc
mov
pushf
fistpl
pop
pop
cld
jecxz
jae
aaa
or
ja
mov
out
insb
sti
xchg
lcall
push
dec
jecxz
das
dec
mov
jge
gs
jae
push
or
mov
test
push
push
inc
punpckldq
lahf
into
xchg
addr16
xor
sbb
rorl
int
xor
xchg
mov
aas
push
or
rol
imul
sahf
and
adc
into
repnz
sbb
push
mov
and
mov
leave
adc
lcall
push
cltd
mov
sbb
push
jne
mov
and
pop
push
jb
and
mov
xor
sbb
dec
push
xchg
js
jbe
ret
sahf
stos
bound
jne
loope
xchg
scas
jl
pop
arpl
cli
mov
jl
jecxz
add
sbb
lock
idivb
mov
nop
dec
pop
mov
dec
or
fsts
adc
jnp
or
pusha
or
dec
in
or
inc
mov
in
pop
or
xorb
bound
fcmove
pop
xor
push
mov
push
push
bound
add
add
out
aaa
test
nop
pop
xchg
xor
inc
ja
dec
and
out
dec
lcall
sub
xor
xor
and
cwtl
jbe
iret
stos
inc
mov
iret
rclb
jecxz
mov
into
pop
in
mov
int
outsb
fimull
push
sub
xlat
pop
cwtl
test
lea
fistpll
lods
lods
jp
or
mov
push
mov
mov
lock
and
cltd
mov
in
or
pushf
jno
mov
mov
hlt
jl
mov
inc
out
pop
test
jmp
insl
test
xchg
or
outsb
data16
out
sub
push
add
int3
mov
cmp
and
xor
xlat
mov
pop
xor
adc
or
push
pop
xchg
sbb
sub
push
and
ja
lds
xchg
lret
loope
pop
out
or
jb
mov
cmp
in
and
cmpl
stos
xchg
mov
imul
mov
xor
lret
daa
and
outsb
loopne
ds
nop
fisttpll
sbb
lret
mov
ljmp
dec
das
mov
sti
addr16
xchg
mov
dec
test
xchg
mov
fnstcw
std
aad
mov
or
inc
pop
xchg
test
xchg
mov
mov
fdivrs
xor
jg
adc
push
leave
addr16
aas
js
pop
cmc
add
and
pushf
or
mov
mov
and
pop
cmpsb
aam
cmp
pop
lods
popf
les
jno
mov
fildll
push
pop
lea
jns
mov
cmp
aam
cmp
out
fsincos
xchg
jae
adc
sbb
fwait
adc
mov
in
pop
or
cmp
dec
je
out
cmp
add
lods
mov
rol
fwait
dec
inc
inc
lods
test
mov
push
xor
sbb
cmp
adc
dec
int
cltd
lods
iret
cld
out
ret
mov
adcb
xchg
inc
cmp
mov
data16
movsb
cmpsl
sub
xchg
or
ffreep
mov
je
mov
cli
jge
mov
ss
or
adc
int
out
les
jecxz
imul
jmp
cli
mov
dec
sub
or
mov
push
adc
enter
mulb
outsb
daa
xchg
repz
push
fldt
je
clc
arpl
ja
repz
ficompl
in
mov
xchg
or
es
pop
inc
cmp
mov
push
lret
or
cmp
pop
sbb
shlb
cmp
xchg
xor
sbbl
popf
pop
push
leave
arpl
lcall
out
adc
cli
pop
enter
sbbl
sub
mov
xor
loope
pop
xlat
test
cmp
mov
lods
xor
pop
xchg
push
xchg
adc
pusha
cmp
xchg
sub
ficompl
jb
lock
pushf
pop
mov
add
cld
push
lahf
add
jbe
or
lea
cmc
ret
clc
fisubrl
and
fmuls
push
pop
mov
inc
arpl
dec
push
aad
and
sub
cmp
xchg
add
bswap
xchg
inc
push
xlat
out
out
sub
cmp
inc
inc
out
mov
jmp
inc
stos
sti
sbb
in
hlt
movsl
into
sti
mov
aam
or
xchg
add
cmp
sbb
scas
pop
jge
dec
aas
or
xchg
enter
popa
es
mov
testb
jmp
dec
add
stc
filds
mov
jno
mov
fchs
mov
ss
fnstenv
and
cmc
in
cmp
pop
pop
insb
and
rcrl
inc
movsl
xchg
adc
fwait
mov
xor
js
gs
jmp
jbe
or
lods
xchg
stc
cmpsl
outsl
jnp
aaa
mov
sahf
and
and
outsb
jo
ficoms
mov
inc
push
or
xchg
test
mov
sbb
mov
mov
pop
addb
das
jecxz
sahf
into
subl
imul
cli
bound
out
and
jmp
jmp
dec
mov
cmpsl
imul
jle
jns
iret
jp
jmp
repnz
scas
sub
lcall
xlat
out
fnstenv
test
addb
bnd
aad
outsl
mov
imulb
or
cwtl
cmc
icebp
jns
imul
mov
ljmp
js
imul
dec
cmp
pop
rorb
jo
cmp
push
test
cli
clc
lahf
add
iret
xchg
fs
cmpb
mov
and
mov
cmpsb
push
data16
mov
or
je
cs
jmp
lock
out
fidivrs
repz
and
or
push
sbb
in
lahf
mov
xchg
push
sub
shrl
cmp
mov
pop
push
xor
mov
scas
fwait
xor
mull
or
aad
fwait
jmp
pop
mov
stc
sbb
js
adc
out
cmp
push
inc
jae
jne,pt
leave
cmp
sub
test
stos
lcall
stc
mov
cmpsb
aad
mov
mov
lahf
test
jo
orb
mov
ret
fidivrl
xchg
ds
leave
lds
and
push
sbb
sbb
repz
add
sbb
add
pop
repz
es
das
cmp
inc
jo
subl
add
ret
xchg
push
loopne
pop
pushf
dec
ficomps
sbb
pushf
in
xchg
jl
sbb
xor
mov
test
xchg
sarl
push
loop
call
test
jne
mov
cltd
pop
xchg
rolb
inc
dec
cmc
pop
xchg
mov
sub
pushf
stos
test
movsl
lcall
dec
pop
addb
add
ret
lods
scas
add
and
dec
dec
dec
enter
popa
aaa
clc
and
mov
add
out
jno
in
push
lcall
movsb
jno
sub
cmp
inc
mov
mov
xor
add
cmp
sbb
add
iret
imul
mov
mov
cmp
daa
or
repz
test
loopne
fsubrl
mov
jns
mov
mov
cld
bound
jecxz
mov
xchg
jecxz
testb
and
jo
subb
push
cmp
rorb
inc
shl
add
xchg
cmp
ja
test
je
xor
es
mov
imul
xor
xor
xor
inc
xlat
mov
adc
es
cld
adc
and
cmp
xchg
xor
cltd
movsl
xchg
repnz
sbb
mov
les
test
and
lods
adc
mov
enter
push
lods
adc
mov
sti
push
or
jecxz
inc
ds
pop
and
lcall
dec
mov
mov
cmpsl
inc
shll
adc
ret
insb
mov
adc
xor
sbb
fsubrs
sbb
gs
mov
fwait
shlb
push
add
outsb
fildl
jne
lods
sbbl
push
lods
cmp
addb
jmp
add
xor
loope
push
daa
iret
xchg
out
sub
imul
cmpsb
out
and
sub
push
lret
adc
push
or
mov
insb
sub
iret
icebp
inc
je
into
sbb
adc
ljmp
out
xchg
push
mov
lods
movsl
mov
scas
imul
incl
mov
mov
and
cltd
push
mov
cmc
cwtl
jl
sbb
gs
inc
fwait
mov
mov
xlat
mov
sbb
push
sbbb
push
inc
and
adc
jno
xchg
lods
in
test
dec
adc
into
jg
enter
into
add
jns
test
cmp
fs
imul
repnz
jo
pop
pop
ret
mov
xchg
in
in
pop
sbb
push
jae
dec
mov
jns
test
in
adc
fistl
sbb
jb
pop
negb
nop
pop
inc
push
bound
cmp
pop
and
shlb
into
inc
mov
jmp
mov
repz
inc
enter
fdivrl
fsubrs
sahf
int
jo
xchg
cmpsb
cmovo
clc
fisubrl
mov
pop
sub
mov
arpl
mov
aam
std
shrl
jmp
sub
mov
xor
fs
es
inc
ljmp
jmp
pop
in
in
xchg
xor
mov
orb
push
xor
jp
jb
xor
dec
add
orl
fwait
push
add
imul
sub
je
cmp
jecxz
pop
xor
lss
sbb
nopl
jno
int3
popa
mov
mov
push
push
ret
inc
cmp
call
jp
sub
fs
mov
adc
jnp
lods
xchg
sarl
sahf
testb
ljmp
cld
aad
sbb
or
xchg
mov
push
inc
cmp
adc
adc
push
inc
fcmovbe
cmpsl
sbb
and
add
xchg
movsl
aam
fdivs
mov
sbb
mov
jp
lahf
dec
push
push
lcall
push
out
cmp
mov
lcall
push
stc
pop
xor
push
xor
aas
add
pop
dec
lahf
stos
mov
test
jno
push
jmp
out
dec
jl
or
sbb
fidivs
test
jb
addb
cmpsl
adc
cmp
sahf
push
jecxz
aam
sub
push
mov
repz
adc
push
push
cmp
xchg
enter
xchg
lds
and
popf
jge
out
faddl
aad
mov
pop
outsb
icebp
movsl
mov
in
data16
iret
adc
pusha
inc
es
add
lahf
push
dec
push
mov
aaa
inc
into
add
in
mov
pop
hlt
addr16
and
loope
data16
aam
xchg
xlat
dec
jb
imul
dec
and
arpl
mov
stos
nop
xor
inc
arpl
and
cmp
icebp
sub
or
inc
insl
mov
data16
fwait
stc
aas
ds
xchg
inc
add
orl
push
jle
aas
cli
dec
or
adcl
sub
lods
shll
cltd
mov
jnp
outsb
dec
cs
inc
jae
push
sbb
hlt
fnstsw
push
or
inc
mov
push
ret
push
cli
rcrl
sub
fld
or
xor
cs
je
out
or
jb
jp
sub
xor
iret
jmp
dec
sbb
or
xor
push
cwtl
rcl
popf
stos
imul
aas
pop
mov
je
cwtl
fisttpll
or
mov
and
adc
cs
jp
mov
lret
loopne
arpl
scas
sbb
shlb
and
ficomps
movsb
pusha
inc
inc
insb
lret
mov
fsub
jl
aad
pop
sbb
adc
cmp
out
das
lds
scas
popf
pop
jecxz
jl
cmp
xlat
addr16
push
and
sub
daa
dec
push
aad
sub
or
arpl
push
add
sbb
push
cmp
push
imul
ljmp
or
mov
fstpl
jo
pushf
xchg
stos
in
sub
pop
sarl
jne
and
ud0
inc
subb
lahf
mov
pop
hlt
lods
push
xchg
mov
xchg
adc
jge
loopne
call
mov
xchg
mov
add
stos
cmpl
lods
scas
jno
xlat
ja
pushl
mov
cmpsb
scas
mov
sbb
ficoml
dec
inc
dec
ds
lods
mov
sub
cmpsb
xchg
mov
loopne
mov
pop
ds
sbb
dec
bound
lods
aad
sub
cmp
mov
cltd
pop
adc
fldl
fiadds
cmp
dec
and
push
and
aaa
cwtl
sbb
cs
push
sahf
fdivp
add
sbb
and
add
sbb
sbb
fmuls
int
push
mov
pop
in
mov
mov
jo
fisubl
mov
pop
outsl
cmp
sub
nop
mov
add
mov
loop
hlt
loope
mov
and
push
loop
dec
fninit
push
xchg
ss
insb
pop
iret
sarb
or
adc
in
adc
cli
mov
or
pop
pop
bound
loope
das
sahf
repz
mov
femms
test
pop
out
lret
je
mov
test
jge
and
sbb
dec
ss
sub
mov
cmp
data16
push
mov
fidivrl
jmp
fldt
mov
sbb
pop
sbb
adcb
or
adc
test
pushf
out
ret
rcr
in
jl
xor
push
push
mov
jns
test
fs
xchg
add
lret
xchg
add
imul
jmp
dec
or
push
fdivrl
test
inc
stc
cld
jnp
inc
mov
out
andb
sub
push
addr16
les
mov
insl
aaa
cmp
sbb
xor
xor
mov
loop
outsb
sbb
jne
std
call
outsb
or
jne
inc
dec
popa
push
andl
sahf
sbb
in
and
imul
fcomip
pop
sub
push
adc
data16
sbb
sbb
mov
std
mov
ljmp
xchg
add
xchg
pop
je
pop
jl
notl
jne
cmp
dec
mov
xor
cmp
int
lods
pop
dec
mov
or
pop
inc
cmp
sbb
andl
add
ffreep
shrl
in
and
aaa
int3
jp
std
mov
mov
pusha
xchg
imul
dec
adc
sarl
mov
clc
orb
pop
ja
mov
cli
dec
das
xor
xchg
ds
jg
popa
push
push
push
and
adc
loopne
aam
rcl
jg
cmp
adc
fisttps
stos
pushf
and
cwtl
inc
loopne
xchg
xchg
pop
jbe
lea
adc
pop
in
pop
stos
std
mov
mov
or
push
push
stos
mov
or
into
inc
cltd
or
lds
xor
xchg
hlt
inc
dec
dec
pop
mov
or
jg
pop
mov
daa
lods
xchg
sti
dec
scas
adc
push
lock
push
in
movsb
mov
and
xchg
popf
sub
cmpsl
repz
or
ja
js
or
inc
xchg
rorb
xchg
in
or
xlat
fists
dec
std
pop
iret
sbb
cmp
cmp
mov
push
dec
imull
and
or
shl
in
mov
fwait
mov
lock
testl
repz
xchg
je
enter
cmp
cmc
add
push
jmp
xchg
hlt
mov
push
pop
adc
jne
movsl
add
or
in
sub
daa
flds
mull
ficompl
pop
inc
fucom
fstl
cmpsl
repnz
inc
add
fs
icebp
mov
sbb
xchg
pop
ret
ljmp
gs
aas
xchg
fisubrs
xor
icebp
dec
lcall
je
stos
fcoms
mov
aam
out
ret
movsl
fsts
lods
test
sahf
leave
dec
in
inc
into
out
es
pop
jae
cltd
sahf
jle
lea
popa
lea
jmp
dec
insl
sahf
sti
or
cmp
and
pop
mov
sub
roll
stc
rorb
int3
xchg
mov
fdiv
stos
cmp
lods
orl
cmp
lods
sar
pop
je
shr
fistpll
test
pop
test
dec
loop
mov
loop
imul
aad
addl
xlat
lcall
mov
cs
push
cli
lret
aaa
xor
dec
fadds
pop
jnp
dec
or
add
lea
inc
lahf
outsl
test
xor
mul
imul
inc
decl
into
les
push
dec
jo
shlb
pop
fisubs
push
aaa
dec
xchg
cvtps2pd
aam
aam
int
jnp
add
lcall
int3
jle
or
in
add
mov
cmp
jecxz
sub
cwtl
adc
pop
shrl
icebp
dec
arpl
cwtl
cmp
push
add
loopne
dec
cmpsl
mov
pop
or
inc
and
data16
cld
xorb
xchg
sbb
mov
iret
jg
ss
decl
push
jnp
out
xchg
add
pushf
add
nop
ret
sbb
loopne
add
lds
pop
into
pop
lods
mov
cmp
cld
xchg
inc
and
xchg
inc
or
outsb
cmp
icebp
bound
repz
add
mov
sti
sti
inc
mov
sti
cmp
out
add
sbb
imul
push
xor
push
push
clc
mov
push
clc
sub
cmc
push
nop
adc
add
or
cmpb
ss
loope
loop
pop
or
cmp
mov
test
or
xor
mov
jno
call
lds
dec
push
lods
sbb
cltd
fildll
repz
push
sbb
pop
out
mov
mov
jae
stc
ret
xchg
adc
pop
es
mov
push
push
int3
push
push
or
das
fidivl
sub
std
insl
cwtl
int3
ret
out
ss
insl
lcall
nop
int3
sahf
jge
mov
add
gs
cld
imul
cltd
or
test
or
loop
jl
mov
sub
sbb
pop
daa
jnp
adc
cs
js
push
xchg
mov
cld
or
push
mov
or
xor
or
insl
repnz
sub
or
push
lret
mov
daa
and
das
clc
lcall
inc
add
inc
stos
push
shlb
arpl
sarb
js
into
cli
loope
mov
js
rcrl
adc
xchg
jne
cmpsb
jl
adcl
ljmp
xchg
or
decb
cld
jge
jb
sub
mov
mov
adc
xor
dec
inc
scas
xchg
push
jg
dec
xor
outsb
jmp
push
push
shrb
daa
psadbw
fstpt
inc
scas
xchg
cmpsl
int3
lods
pop
push
mov
push
inc
outsl
lods
pop
fidivrl
pusha
loope
pop
nopl
sub
push
pop
aaa
push
call
in
shll
jb
sbbb
data16
cli
pop
add
das
out
cmp
add
xchg
mov
lahf
xor
dec
jno
jb
jno
push
jae
fwait
stos
loopne
mov
sbb
lcall
cmp
pusha
sbb
repnz
jle
fimuls
scas
adc
mov
shll
xor
imul
fucomi
mov
pushf
adc
sub
push
movsb
mov
into
fwait
ror
mov
int
lcall
insl
adc
mov
imul
sub
arpl
repz
aad
inc
fisubl
mov
pop
stos
insb
test
add
je
mov
outsl
push
mov
mov
lods
dec
sti
scas
inc
push
cmpsb
cli
shlb
cmp
cmpsl
cmc
rcl
outsb
jae
rcrb
adc
and
incb
fdivrl
mov
inc
test
sub
inc
sti
or
lcall
fs
inc
cwtl
push
inc
lret
xchg
enter
sbb
arpl
pop
xchg
cmpl
ret
mov
ficoml
sar
mov
mov
movsl
fwait
inc
fbstp
fcoml
repnz
sbb
or
bound
jno
mov
jae
fst
lock
in
sahf
ds
jbe
adc
repnz
or
add
fsubrs
jns
push
mov
mov
in
cltd
jno
mov
imul
mov
dec
mov
mov
xchg
mov
sub
movl
imul
mov
idivb
in
push
push
stc
jb
sti
loop
stc
mov
mov
adc
ficompl
movsb
or
aam
lods
pop
jno
sbb
jo
rol
std
push
push
fistpl
lcall
icebp
js
pop
ret
adc
pop
cmp
dec
adc
ljmp
and
adc
sbbb
mov
add
out
or
mov
push
pop
pop
sub
scas
and
pop
jl
dec
sub
pop
nop/reserved
test
sbb
dec
mov
call
sbb
xchg
add
imul
push
test
xor
push
fiaddl
sbb
sbb
adc
and
lcall
push
cmp
pop
int
ljmp
test
pop
pusha
les
enter
mov
das
popf
lcall
jne
ds
insl
jp
dec
aaa
push
int
imul
pop
xchg
xchg
mov
jmp
inc
mov
jno
push
jns
dec
and
sub
lret
je
imul
mov
xchg
mov
dec
or
insl
outsl
imul
stos
add
add
dec
dec
shll
in
push
mov
cmpsb
sbb
gs
stos
sbb
pop
pop
sub
in
mov
push
dec
push
enter
jmp
push
in
sub
push
xchg
fucomi
add
add
pop
jg
mov
push
push
inc
imul
outsl
adc
pushf
inc
sub
jno
loope
rorl
pop
and
jne
repnz
dec
jbe
popf
jbe
cmp
push
test
cltd
in
lcall
cmc
add
xlat
push
or
cmpsl
xchg
or
dec
mov
and
repz
cmc
adc
add
mov
xor
in
idiv
out
std
add
movsb
xor
loopne
push
sub
mov
pop
mov
aam
pop
aaa
jb
mov
inc
cmp
xchg
loope
push
jae
and
fnclex
add
push
inc
lcall
sub
and
out
mov
sub
push
aas
xor
aaa
lods
cltd
test
int3
mov
pusha
push
faddl
sysexit
rcrl
sub
and
and
ljmp
mov
mov
call
sbb
and
sub
out
push
sahf
fwait
mov
imul
mov
mov
sub
lea
inc
pop
sub
clc
xor
xchg
into
dec
push
cwtl
ja
je
push
cmpsb
dec
jecxz
mov
test
jbe
and
outsl
mov
adc
lods
and
pop
jg
sbb
or
sbb
shrl
cmp
test
lea
stos
icebp
out
and
testl
dec
lea
test
xchg
cmp
arpl
loopne
and
insb
arpl
dec
fcomps
mov
and
jg
sub
xchg
cmpsb
test
push
addl
data16
push
xchg
pop
cmp
test
dec
cmpsb
push
mov
inc
dec
push
iret
cld
in
fsubrs
sbb
ret
mov
addr16
sbbb
sbb
sbb
rorl
lods
ss
add
test
bound
add
jmp
ret
in
daa
call
test
jb
mov
jb
pop
jb
inc
int
shlb
push
pop
stos
add
adc
ret
push
ljmp
fstps
popa
movsl
cmp
mov
jbe
or
mov
out
add
faddp
xorl
lds
stos
stc
and
js
pop
sahf
inc
xor
mov
loopne
mov
orl
hlt
cmpsb
jge
mov
ss
jmp
dec
mov
rcrl
adc
dec
xchg
aas
xchg
into
popl
jae
mov
sbb
mov
xchg
pop
xchg
dec
mov
push
pop
mov
scas
or
cmp
aad
es
stos
pusha
loope
dec
ljmp
int3
js
push
adcb
mov
xor
sbb
inc
xor
xor
xor
aaa
mov
lds
je
stos
xchg
and
addl
shlb
xchg
mov
jmp
repz
sub
cmp
cli
shrl
jae
ret
cltd
sub
jno
outsl
cmp
loopne
or
std
arpl
pop
mov
or
dec
mov
mov
aam
sbb
pusha
lea
dec
cmp
in
scas
jmp
cmpsl
lret
das
cltd
in
pop
or
jns
aam
fwait
add
mov
jg
cmpb
test
inc
inc
mov
jmp
dec
in
sub
daa
xchg
pusha
xchg
or
pop
inc
outsl
sbb
out
fcoms
mov
cltd
je
ss
inc
dec
pop
mov
cmp
out
push
lcall
dec
in
add
or
xchg
mov
push
fwait
xor
xchg
jns
adc
rolb
mov
test
pushf
fsubr
jecxz
xchg
and
cmc
add
dec
gs
icebp
or
mov
roll
push
xor
mov
subl
int3
fiaddl
scas
mov
addr16
stc
popa
push
stos
add
or
jg
aam
or
mov
pop
lahf
scas
sbb
sub
xchg
ret
mov
push
pop
inc
gs
jae
adc
cmp
mov
sbb
jp
addl
jnp
into
add
ljmp
mov
push
ret
negl
jp
pop
push
fadds
out
mov
xor
fbld
das
cli
push
pop
mov
pusha
popa
xchg
push
push
cmpsb
and
mov
jp
repz
insb
or
xchg
cmp
in
xor
fnsave
test
push
jae
cmpsb
addl
xor
cltd
xchg
imul
sub
nop
insl
dec
sahf
jp
dec
mov
mov
or
push
cwtl
jp
stos
popa
pop
outsb
in
enter
mov
xor
xchg
or
sub
lods
xchg
lret
mov
mov
lock
int3
inc
int3
popa
push
mov
fildll
shl
sarb
cmp
pop
add
xchg
stos
mov
sbb
xchg
ds
stc
cmp
in
mov
ja
clc
or
push
adc
int3
dec
mov
stos
icebp
jb
cld
jle
scas
jmp
or
adc
xchg
insl
xchg
xchg
xchg
push
nop
push
insl
adc
add
mov
das
jae
inc
aam
arpl
ds
and
nop
adc
fidivrl
in
cmp
cmp
loop
popa
orl
jb
jnp
loope
or
les
mov
and
popa
mov
decb
jp
pop
ja
out
jno
mov
repnz
sahf
fistpll
xor
push
int
mov
push
lret
mov
adc
mov
mov
lret
sbb
or
rcll
inc
and
cmp
outsl
dec
movsl
adc
jo
cli
mov
cmp
inc
je
inc
inc
or
insb
inc
dec
xchg
sub
stc
sar
pop
jl
pop
aam
jmp
fcoms
stos
ret
and
mov
divb
and
inc
movsl
movsl
xor
push
movsb
aaa
je
ret
inc
sbb
sbb
adc
cmp
mov
fs
push
dec
or
sub
adc
jns
jb
addl
dec
setg
outsb
ljmp
popf
leave
lods
cwtl
push
pushl
and
mov
mov
insb
mov
in
mov
mov
pop
xchg
cmp
push
push
imul
pop
push
sbb
and
add
fbstp
push
dec
rorl
shrb
movsb
out
test
out
iret
fsubp
xchg
ret
adc
xor
jge
ds
dec
pop
lods
pop
adc
xchg
dec
mov
ficoms
shrb
inc
call
dec
cmc
outsb
cmp
movsb
movsl
mov
popf
or
movsl
xor
outsb
mov
add
aas
outsl
mov
je
jae
in
das
dec
and
scas
icebp
movsl
je
sbb
add
cmp
and
arpl
xor
fdivr
mov
stc
scas
mov
jnp
mov
fcom
loope
push
cmc
push
test
jecxz
xor
imul
pop
cmp
jmp
or
push
adc
inc
xor
and
xor
push
push
push
rcll
mov
add
dec
gs
jp
leave
loop
push
jns
andl
daa
inc
sub
pop
add
and
loope
imul
adc
sbb
push
rorl
inc
aad
sub
sub
imul
fcmovbe
xorl
subb
xlat
in
jg
pop
pushf
pop
int
out
int
lds
xor
xor
or
in
cmp
ret
testl
sbb
in
push
loop
jnp
mov
sub
lret
repz
or
lock
pop
test
scas
in
movsl
and
dec
clc
cmp
fbstp
shrl
cmp
mov
and
gs
cmpsb
fwait
or
xchg
adc
and
or
mov
cmc
mov
gs
add
test
pop
andb
dec
jl
xor
and
sbb
push
jmp
xor
test
dec
cmp
outsl
mov
pop
loop
call
push
ss
pop
lcall
fadds
xor
mov
jae
sbb
pop
aas
loope
mov
cmp
push
out
outsl
fwait
push
lds
lods
or
dec
xchg
push
xor
dec
sub
xchg
je
add
xor
adc
push
mov
iret
in
and
aaa
jno
cmp
jl
push
inc
out
fs
dec
lods
xchg
lret
inc
aad
mov
outsl
adc
adc
notb
dec
or
cltd
add
sub
andl
in
adc
test
test
mov
mov
out
xchg
or
sbb
cmc
dec
dec
dec
arpl
jle
jb
jb
arpl
loop
push
test
xor
jo
cmp
test
loopne
stos
dec
outsb
xor
pop
pop
xorl
pushf
push
ds
inc
call
jb
jnp
dec
lock
jge
aad
icebp
loopne
mov
lret
inc
jo
mov
cs
adc
fmul
inc
outsl
mov
shll
cwtl
jmp
aam
push
je
push
cmp
popl
dec
loop
sti
xchg
ljmp
pop
push
mov
sbb
loop
jb
shlb
jmp
clc
pop
aaa
xchg
sub
xchg
pop
cmp
mov
mov
pop
andb
sbb
jl
sti
inc
lock
cmpsb
out
push
ja
sar
lcall
mov
or
or
jno
notb
fwait
mov
mov
loope
and
mov
sub
andl
fistps
sub
push
xor
aam
dec
mov
imull
pop
jns
adc
sbb
and
fcmove
movsb
fcoms
rcll
push
lahf
repz
xchg
jnp
mov
je
mov
popf
mov
push
nop
inc
in
and
lea
popa
mov
cwtl
aam
dec
gs
repz
gs
cmp
fildl
fistpll
lahf
and
loop
xchg
inc
fcompl
push
sarl
dec
lret
sub
rclb
sbb
mov
pop
jnp
je
sub
test
mov
dec
jns
fs
adc
mov
xchg
hlt
pop
lret
jae
mov
pop
in
inc
data16
lock
jmp
movsb
shr
movsb
lods
enter
cmpsl
lcall
pusha
cmpsb
inc
jg
or
mov
dec
fisubrl
adcb
dec
inc
dec
sub
mov
or
les
jnp
loop
mov
out
jmp
sbb
outsb
push
int3
dec
jmp
dec
pop
cld
mov
jecxz
adc
push
or
gs
dec
iret
int
int
inc
mov
push
movsb
push
xchg
cmc
fsubs
adc
xchg
jne
lock
pop
mov
sub
xchg
popa
imul
mov
das
jnp
xchg
insl
sub
mov
enter
int3
aam
xor
mov
push
pop
fbld
out
nop
std
je
loop
in
imul
adc
das
adc
ds
push
xchg
adc
sarl
sbb
xor
mov
aad
mov
imul
cmpsb
xchg
clc
ja
mov
xlat
shlb
lock
and
cmp
mul
mov
dec
in
xchg
lcall
jle
enter
arpl
cmp
jmp
add
outsb
fists
jle
les
jo
pop
outsb
xor
shlb
xor
mov
lahf
or
jecxz
and
adc
inc
sub
scas
mov
test
xor
lcall
lcall
xchg
or
in
orb
lods
jno
inc
int
inc
adc
jg
js
ret
sub
test
sbb
mov
mov
rorl
add
leave
sbb
loop
bound
fstpt
mov
aad
jb
mov
cmc
lcall
xor
out
pop
pop
push
lcall
jbe
insb
adcb
pop
lods
stos
or
pop
sbb
rorl
or
arpl
sbb
fsubrp
das
xlat
loopne
add
mov
push
hlt
mov
imulb
pop
mov
push
gs
jno
push
xchg
inc
mov
adc
pusha
je
xchg
dec
sarb
in
loop
mov
xchg
lcall
or
push
jg
lods
push
dec
loope
xchg
cmp
lahf
push
xchg
dec
ljmp
push
pop
sbb
mov
pop
test
xchg
fdivrl
pop
push
fdivl
into
mov
inc
jmp
xor
aas
arpl
inc
sbb
xchg
adc
ljmp
dec
mov
or
jmp
adc
mov
imul
out
xchg
pop
std
out
pop
movb
fwait
lahf
jl
mov
pop
sub
into
into
call
fimull
adc
mov
xchg
dec
or
repnz
adc
xchg
imul
lds
repnz
jo
and
xchg
or
iret
jmp
xor
push
dec
jecxz
and
xchg
loop
jae
shlb
push
ror
popa
mov
add
nop
or
scas
mov
pop
cmp
pop
mov
pop
cmp
xor
lret
push
cmp
cli
dec
inc
push
xchg
mov
lea
cmp
std
xchg
cs
aas
test
shll
nop
nop
aas
dec
mov
outsb
jne
je
popa
cmp
into
mov
test
mov
imul
das
xor
cmp
es
mov
nop
adc
movl
stc
cmpsb
mov
cmp
loope
xor
xor
gs
and
in
mov
mulb
repnz
out
fildll
pushf
je
aam
sub
mov
and
arpl
imul
push
out
inc
shlb
fildl
sbb
jp
inc
in
sbb
cmp
inc
cld
xor
push
dec
pop
xor
inc
push
sbb
cmp
mov
cmc
add
arpl
sarl
loop
ja
call
mov
adc
cli
mov
imul
and
data16
testb
fdiv
and
jmp
inc
push
ret
mov
mov
pop
mov
stos
jl
adc
mov
jecxz
mov
fistpl
xchg
repnz
jmp
inc
out
inc
jne
pop
xchg
lea
xchg
stc
shlb
mov
fwait
jg
push
xor
push
and
mov
sbb
and
adc
push
pop
lods
push
jno
in
fwait
rorb
xor
cmp
mov
cmp
pushf
ds
in
jle
scas
jno
lahf
inc
enter
jne
leave
daa
dec
mov
mov
or
stc
cld
dec
jg
mov
les
mov
lods
xor
xchg
iret
les
mov
sub
mov
jae
xchg
imul
xor
cmp
ret
cmp
mov
cmp
fstps
adc
push
adc
sub
pop
xchg
sbb
mov
pop
xorb
leave
sub
ljmp
pop
xlat
add
jecxz
or
pop
dec
imul
push
fwait
clc
js
sub
add
xchg
sub
pop
mov
mov
addb
les
sub
bound
xchg
pop
push
xor
or
cltd
mov
push
sub
jno
xor
arpl
insb
mov
dec
cmpsb
mov
sub
in
dec
pop
jae
and
adcl
es
mov
xchg
movsl
enter
rcr
xchg
pop
jp
popa
push
daa
loopne
nop
nop
repnz
sbb
out
dec
stc
mov
lahf
cmpsb
int
adc
movd
cmp
insl
aad
in
xor
xchg
cli
or
testb
add
fidivs
je
out
fdivrs
dec
xor
jge
pop
and
hlt
iret
dec
mov
jnp
push
movsl
imul
idivb
lea
xchg
inc
lahf
push
add
das
addr16
lcall
loop
mov
sub
jb
mov
shrb
push
in
cld
xor
cmp
aad
mov
inc
je
xor
dec
loope
rcr
fildl
or
loop
push
fs
xchg
icebp
sbb
insb
adc
repz
mov
andl
or
pop
mov
push
divl
int3
in
mov
mov
jns
adc
sub
mov
lret
dec
pop
repz
ret
aaa
push
cmp
inc
inc
push
xchg
push
psrlw
hlt
movsb
scas
outsb
cmp
mov
in
ja
aad
roll
mov
enter
inc
cmpsl
pop
cmpb
jns
sahf
pop
mov
aaa
int3
or
inc
xor
mov
stos
mov
ret
dec
js
xchg
or
movsl
clc
mov
sbbl
pop
aam
imul
xor
jae
aam
lret
in
xchg
hlt
out
jmp
sbb
jge
icebp
jg
fs
fwait
ds
nop
js
push
gs
in
push
xchg
pop
mov
cmp
inc
clc
cld
jo
dec
aas
push
sub
pop
sbb
lcall
call
les
push
mov
push
ret
add
jb
xor
xchg
jae
pop
mov
fwait
in
aam
sbb
inc
aad
sub
imul
jg
gs
xchg
in
movsb
mov
push
aam
fiaddl
jno
or
push
mov
and
mov
repnz
clc
inc
mov
shll
inc
incb
and
daa
int
sub
insb
xchg
xchg
adc
or
lcall
inc
push
adc
out
mov
xor
sbb
fucom
push
test
pushf
outsl
adc
pop
int
mov
loope
mov
test
pop
or
fmull
sub
loop
dec
push
js
cmpl
push
cmpb
repz
pop
or
cmp
scas
js
xor
or
out
jns
in
cmp
faddl
push
lret
test
xor
je
mov
fwait
popa
rorb
xchg
out
add
mov
sub
xchg
nop
xchg
aad
cmp
subl
sarl
jp
fcoms
leave
popa
int
call
pop
mov
jl
and
sarb
loop
sbb
out
adc
push
popa
xor
imul
mov
jae
pop
imul
push
insb
fld1
hlt
mov
push
test
jno
add
lret
xor
push
dec
xor
aas
sarl
add
mov
mov
cmp
inc
aaa
xor
imul
call
mov
xchg
jnp
pop
cwtl
popf
scas
push
adc
mov
stos
jecxz
xlat
test
jecxz
rcrb
fistpl
lret
and
fisttpll
mov
mov
push
in
push
ret
aaa
mov
mov
mov
repz
pop
call
sbb
mov
fnstenv
mov
adc
mull
mov
push
add
lret
push
xchg
jb
in
inc
adcb
pushf
push
pushf
push
jmp
push
xor
ret
push
int
loope
xchg
insb
and
ret
jne
mov
les
icebp
int3
out
jg
les
sub
fisubl
das
clc
xchg
xorl
sbb
out
jbe
and
popf
inc
xchg
aad
jge
sbb
push
push
hlt
lcall
rcll
inc
sub
daa
mov
stos
cmpl
dec
pop
mov
mov
lock
jns
andnps
adc
push
inc
dec
inc
add
addb
or
xchg
test
xor
cmc
mov
cld
jnp
add
jns
fdivrs
in
mov
pop
mov
or
mov
ret
mov
jno
mov
cmpsl
test
int3
push
jno
addr16
in
mov
les
cmpsb
das
les
sahf
lock
sub
add
insb
cld
ror
mov
push
cs
jnp
mov
test
inc
and
dec
push
fwait
dec
or
sbb
pop
mov
scas
dec
fistpl
in
cli
dec
imul
pop
pop
out
jl
jb
jae
or
and
xchg
addb
xchg
mov
cmp
std
push
lea
xor
dec
fwait
mov
ja
test
push
iret
incb
push
jo
ja
xchg
inc
je
ds
fadd
std
fldl
outsl
test
je
shlb
out
inc
stos
pop
enter
scas
xor
jns
imul
sbb
lret
aad
lret
aaa
movsb
pop
bound
add
fcmove
xor
add
addr16
repz
pushl
lret
repnz
jb
mov
pushf
dec
adc
sbb
fmull
lods
push
lret
sub
and
mov
mov
inc
into
mov
push
add
push
push
pop
inc
jge
outsb
mov
into
inc
or
je
leave
aam
rcrb
je
push
xor
mov
xor
dec
int
scas
or
mov
out
sbbb
or
push
and
xor
mov
mov
das
rcrl
in
ds
xor
mov
mov
repnz
enter
gs
push
arpl
mov
hlt
or
out
xlat
loope
push
loop
jmp
jbe
cmp
jg
dec
xchg
mov
xchg
mov
mov
dec
rol
jns
xchg
addl
mov
adc
lds
imul
icebp
int3
push
mov
mov
outsl
lea
out
aam
jbe
std
adc
es
mov
int3
push
outsw
fwait
push
insb
inc
adc
push
repz
or
aam
fistpll
imul
iret
dec
xor
or
pop
push
sub
fnsave
fnstenv
push
jle
and
pop
xor
mov
mov
rorb
and
xorb
jo
mov
decl
jns
mov
mov
jg
test
mov
add
sbbl
sbb
adcb
fsubl
cltd
das
mov
arpl
xchg
pop
xlat
sbb
dec
pop
mov
cmc
stos
scas
add
ss
sahf
pop
adc
mov
insb
add
dec
mov
aam
les
push
rcrl
push
pop
lock
mov
adc
mov
sub
daa
imul
push
push
or
and
insl
mov
lahf
dec
push
dec
loop
sbb
jp
pop
std
jns
adc
stc
adc
push
fadds
mov
dec
fs
sub
fwait
cmp
or
call
scas
inc
pusha
pop
fstl
arpl
les
xchg
fwait
mov
std
pop
and
je
test
ret
xchg
clc
pop
sbb
inc
cmp
push
loop
imul
mov
bound
inc
fnstcw
ret
sti
je
out
mov
and
enter
cli
inc
in
mov
lock
pop
fcomi
cmp
pop
or
hlt
loop
adc
mov
jmp
aaa
xchg
loopne
addl
fadds
imul
mov
gs
rol
je
pop
adc
jno
aad
inc
fwait
aam
out
pop
push
lods
stos
dec
xchg
inc
sub
mov
xlat
in
cmp
cmp
ja
arpl
fs
jns
fdivl
scas
dec
adcb
sub
mov
add
ljmp
sbb
addr16
rcll
jno
mov
inc
jmp
jo
out
fs
mov
add
push
sub
movsb
pop
pusha
add
test
inc
jge
and
inc
dec
jns
mov
rorb
rcrb
insb
push
jp,pn
cmp
ja
scas
mov
push
pop
outsb
jecxz
insb
data16
push
call
jbe
ror
not
sbb
cmp
jb
ficoml
sub
pushf
imul
pop
and
pop
cmpsb
push
and
and
repz
and
rclb
mov
adcb
mov
adc
push
rcrb
push
inc
fistpl
lahf
test
xor
sbb
xchg
dec
adc
jle
pop
sete
jbe
hlt
dec
inc
mov
xchg
mov
mov
add
jg
jb
insl
pop
dec
push
jp
mov
int3
aaa
xchg
and
and
imul
inc
pop
das
pop
mov
inc
dec
loope
and
pop
jb
out
pushf
adc
add
les
ret
outsl
jo
xor
pop
mov
and
imul
ret
shll
fdivr
lock
mov
adc
lret
dec
iret
imul
jp
mov
push
ljmp
xchg
sbb
aaa
adc
js
insl
pop
mov
mov
jmp
xlat
xchg
jne
mov
xor
inc
jno
fwait
add
adc
pop
jp
lret
sub
ja
sub
fisubl
cmp
and
push
enter
lds
clc
jmp
icebp
push
mov
mov
out
sti
cmp
push
xlat
clc
add
jp
xchg
sti
ljmp
cmovns
xor
mov
lea
clc
push
jb
out
mov
inc
imul
addr16
cmp
fs
jecxz
mov
pop
push
mov
xchg
cmp
cwtl
movsl
mov
icebp
jge
clc
inc
insb
scas
dec
sub
bound
sar
adc
pop
sub
jmp
push
add
mov
loope
xchg
dec
sarl
repnz
jl
sbb
push
push
lret
insb
imul
popf
inc
decb
cmpsb
push
addl
movsl
sarb
or
sbb
hlt
dec
stos
mov
mov
popf
addr16
sub
xchg
add
in
add
loopne
sti
xchg
je
rclb
mov
inc
shlb
in
in
dec
sbb
imul
xor
mov
xchg
scas
add
ljmp
or
cld
adc
lret
mov
jg
adc
push
rorl
xor
mov
cld
sub
mov
xchg
sub
fsubp
rolb
push
daa
aas
mov
mov
popa
push
in
mov
mov
ljmp
rclb
xchg
andl
cmp
cmpsl
sbb
or
xchg
fs
cltd
repz
stc
adc
sbb
xor
lods
sar
pop
in
sti
adc
pop
loopne
cli
js
repnz
call
cmp
dec
in
cwtl
pop
add
pop
jmp
push
ret
shlb
lret
insl
sub
xlat
mov
or
dec
dec
inc
stc
sub
rcrb
imul
mov
inc
mov
iret
je
sbb
cmp
mov
adcl
add
push
jo
pop
pop
push
fldl
pop
rcr
xchg
xchg
or
lret
sti
and
test
mov
pop
jno,pt
mov
insl
adc
cmp
mov
and
add
mov
lods
inc
jo
push
popf
or
sub
cmp
sarl
inc
scas
push
sbb
jns
push
fistl
loopne
sub
sti
es
dec
adc
push
adc
jg
gs
rcrl
push
lods
stos
leavew
mov
pop
stc
cmp
pop
cmp
sahf
add
add
xor
sbb
roll
xor
mov
andl
rcl
pop
movb
fdivr
xor
daa
imul
push
aaa
nop
insl
mov
imul
pop
lret
adc
stc
mov
das
adc
push
cmp
shrl
xor
fiaddl
push
psubb
mov
jp
mov
roll
loopne
int
into
jb
xchg
ja
ret
lret
pop
cmp
inc
xchg
stos
lcall
out
stos
nop
loop
adc
lods
sbb
es
inc
stos
mov
or
mov
sbb
lahf
inc
or
mov
adc
shll
movsl
dec
aaa
add
or
je
out
jo
cli
or
sbb
dec
notl
sub
outsb
ja
mov
bswap
xor
lods
or
fistpll
mov
cmp
sbb
push
pusha
push
bound
mov
je
jo
jne
adc
jns
dec
addr16
jb
cmp
lcall
xchg
shrb
sbb
adc
decl
mov
fs
pop
call
xchg
lret
lcall
in
andl
scas
loop
pop
nop
sub
jnp
dec
add
mov
mov
mov
adc
jae
add
icebp
pusha
repz
sub
cmp
dec
adc
sbb
xlat
mov
jbe
push
jg
sub
pop
sbb
div
cmp
sbb
push
push
loope
lods
adc
in
shrl
das
pop
cmc
mov
pusha
cld
push
insb
mov
add
xor
pop
push
inc
mov
cli
jno
shl
enter
js
xchg
hlt
ljmp
add
push
inc
bound
pusha
lock
adc
sbb
loop
popf
fcmovu
xchg
xor
push
cmp
xor
cmpsb
popf
pop
ja
insb
jge
popa
and
xchg
or
jbe
mov
repz
mull
jecxz
filds
lahf
pusha
inc
ficoms
ret
das
int3
sbb
xor
bound
and
xor
jns
or
xor
je
mov
and
movsl
cltd
mov
xchg
repnz
jl
testl
xor
fs
sub
mov
mov
push
les
lret
mov
call
sbb
jo
arpl
imul
pop
aaa
cmp
mov
js
mov
ja
out
inc
pop
sub
mov
rclb
adc
inc
jmp
mov
nop
aas
jle
inc
out
rorb
call
cmp
mov
mov
inc
fwait
xorb
dec
pop
inc
in
pop
stc
pop
xchg
or
daa
cld
push
lret
out
bound
int
subl
mov
cmp
jns
adc
push
mov
cmp
push
dec
xchg
mov
add
or
push
add
jb
push
xor
push
dec
xor
jge
jle
nop
in
or
aad
paddsw
pop
ljmp
frstor
xchg
jl
pop
stc
js
xor
ret
mov
and
das
mov
loop
lret
jmp
sub
aad
outsl
iret
push
sbb
jle
sub
mov
icebp
ljmp
inc
shlb
repnz
inc
out
in
push
fisubl
mov
dec
ss
push
dec
lret
sbb
jecxz
rol
aam
dec
shlb
sbb
in
xchg
push
add
cmp
mov
add
clc
mov
fidivs
out
mov
imul
mov
mov
mov
idivl
stc
xchg
mov
arpl
and
push
mov
jge
sbb
jp
pushf
xor
lcall
mov
sahf
fdivr
rcr
mov
into
in
pushf
hlt
push
cltd
call
mov
clc
cwtl
out
lret
jno
in
rclb
loope
jno
jae
lret
adc
scas
sub
jae
jge
shrb
loopne
and
rcr
out
xchg
push
sub
mov
aas
cmpsb
xchg
xchg
push
xor
aas
cmpsl
rcr
pop
jns
or
dec
fcmove
cmp
push
cmp
dec
popf
out
loopne
jns
jb
or
pop
adc
bound
scas
jne
pop
push
loop
pop
data16
xchg
es
negb
repnz
bound
test
jo
outsl
cwtl
cmp
jbe
lods
mov
inc
into
out
adc
push
jle
dec
aaa
or
adc
ss
aam
je
dec
int3
sub
shrb
or
jmp
call
pop
push
inc
sbb
mov
test
xor
shll
iret
mov
repz
add
fcmovb
inc
fmuls
fmuls
andl
movsb
decb
jne
jbe
repz
fld
xchg
lret
mov
jmp
ds
sub
jl
ret
jbe
push
fiadds
stos
imul
pop
adc
scas
and
ss
mulb
or
data16
adc
test
js
pop
and
loope
movsb
adc
mov
jmp
pop
lea
scas
add
pop
decl
mov
loopne
jg
ds
pop
jmp
or
das
push
std
fiaddl
xchg
stos
cli
adc
jb
mov
cmpsb
andb
sub
jmp
jg
cs
sbb
sti
fdivs
cmp
hlt
dec
jns
xor
lahf
xor
pop
rol
imul
cmp
pop
fistpll
mov
jp
jne
scas
roll
push
call
and
clc
scas
js
pop
inc
sbb
pop
add
cltd
mov
push
lea
and
pusha
das
cmp
cmp
pop
sbb
outsb
xor
jnp
daa
fbld
sbb
xchg
popf
dec
es
jns
addl
lea
aam
pushf
jns
pop
inc
inc
repnz
repz
push
or
mov
repz
push
xlat
sub
out
sbb
ficomps
jl
pop
shrb
push
out
mov
in
add
mov
loope
aas
pop
cmp
lret
adc
sub
jne
add
jmp
and
xchg
push
sahf
fwait
adc
jb
dec
cmpsl
xchg
sub
daa
sbb
stos
call
adc
sub
mov
push
sub
and
push
sbb
or
sbb
les
loope
std
lea
fstl
push
stc
jl
inc
xchg
mov
sahf
push
pop
and
mov
shll
jne
sahf
cmp
sahf
cli
jg
lret
mov
mov
fcomp
subl
shl
cmpsl
stos
xor
mov
and
insl
mov
mov
outsl
xchg
inc
inc
pop
lods
cltd
jge
shrb
xchg
imul
adc
add
fmuls
and
xor
sbb
cmp
test
dec
inc
pop
popa
fistpll
sbb
popf
jns
push
adc
shr
inc
push
mov
pushf
and
aam
inc
ljmp
sarl
or
movsb
or
test
adc
pop
adcb
xchg
inc
es
adc
add
inc
lea
jne
je
mov
mov
dec
fisubrs
adc
insb
notl
adc
rcll
mov
inc
sbb
sbb
sub
cmp
inc
pcmpgtb
cmp
sbb
lods
sbb
das
pop
lock
imul
push
dec
inc
lods
cmp
cs
jae
je
mov
pop
cmp
pop
addr16
xchg
fsts
sti
inc
dec
sbb
cmp
xchg
sub
mov
ror
or
insb
das
aad
jb
or
add
lea
out
idivl
dec
xor
gs
push
sbb
clc
cmp
push
out
or
dec
pop
adc
mov
jmp
push
sarb
lds
and
mov
and
movsl
cmp
jg
lret
out
stos
mov
fcmove
lods
stos
push
dec
shll
arpl
and
push
icebp
cmp
inc
repz
xor
lods
out
mov
push
imull
dec
mov
pushf
in
addl
inc
add
jns
mov
jmp
daa
inc
sbb
jbe
and
fwait
mov
loopne
fwait
cmpsb
mov
push
and
mov
add
sub
fnstenv
orb
popa
xchg
addl
out
add
push
ja
ret
pop
data16
xor
hlt
xor
inc
icebp
pushf
adc
pop
std
mov
lods
into
test
inc
jb
push
scas
pushf
movsl
ret
cmc
and
mov
push
enter
jg
stc
mov
mov
push
mov
xor
xor
outsb
addb
enter
cmp
jmp
sbb
dec
add
xchg
and
push
push
cs
xchg
inc
es
les
ds
or
decb
mov
adc
not
mov
mov
inc
daa
in
movsl
gs
jmp
cwtl
movsl
xor
lret
or
pop
pushl
daa
cmpsl
xchg
orb
xor
in
out
stos
mov
push
stos
sub
push
pop
or
push
mull
push
jmp
clc
insb
pushf
mov
stos
adc
mov
dec
popf
das
push
test
test
sub
pop
fisubrs
push
mov
repnz
adc
imul
add
mov
ja
mov
adc
loop
inc
mov
add
stos
lret
xchg
cmp
sbb
lds
xor
and
sahf
inc
pop
lods
jnp
outsl
adc
pop
sbb
std
js
movsl
fisubs
xchg
lret
add
adc
and
mov
inc
ss
push
out
inc
jne
mov
outsb
push
xchg
inc
stos
and
roll
fucomp
xchg
sahf
mov
add
dec
push
mov
mov
out
pop
fcomp
bound
into
sub
aas
out
mov
xchg
rcll
lahf
dec
idivl
jns
lret
ret
push
shll
popf
xor
loopne
int3
lahf
mov
int
cmc
and
or
pop
sbb
xor
mov
or
mov
cmpsl
sbb
fnstenv
addb
jge
cmp
rcr
cs
cmp
jl
cld
pusha
lea
das
hlt
mov
lahf
data16
pop
pop
jecxz
jge
sub
iret
mov
test
xor
jns
jne
mov
xor
pop
enter
cwtl
mov
sub
out
cmp
or
ffree
jne
xor
and
arpl
cmp
cmp
rol
test
ret
xchg
lahf
xchg
mov
inc
shrl
adc
in
sbb
shl
mov
out
lock
fs
and
xchg
pop
lock
lret
push
cld
xchg
mov
je
pusha
loop
cmpsl
xchg
xor
adcb
push
xchg
movsl
push
addb
icebp
sbbl
call
lods
xchg
dec
inc
dec
data16
xchg
mov
pop
xchg
movsb
pop
pop
cmc
imul
sub
pushf
pop
and
mov
xor
js
sbb
je
push
push
js
mov
jno
or
fildll
sub
and
scas
aaa
jns
or
add
jo
push
fildll
scas
fwait
pusha
lds
mov
mov
in
and
out
and
ss
jle
orl
std
pop
enter
inc
addr16
pop
out
scas
shll
inc
adc
cmp
repz
jns
pop
repnz
movsb
aad
lods
lret
jle,pt
fildll
mov
jle
jecxz
adc
loop
jp
dec
ret
add
cli
movsb
push
pop
inc
cmp
adc
add
ret
adc
push
inc
test
out
mov
cs
push
xchg
daa
cmp
das
divl
sarb
cld
inc
mov
xor
adc
add
in
sbb
mov
pop
rcl
data16
test
rcrb
lahf
cmp
aas
je
mov
or
mov
fs
insl
cli
adc
insb
xchg
xorl
fdivrl
cmc
shll
pop
mov
add
ret
or
mov
movb
xchg
mov
nop
inc
push
leave
in
lds
and
dec
pop
mov
xor
out
sbb
call
jnp
xchg
orps
mov
sub
mov
pop
add
stc
mov
mov
jb
adcb
mov
lds
bound
dec
neg
sbb
cmp
add
xor
rcr
outsl
testl
divb
faddp
push
cmpb
cmpsl
scas
sbb
xor
mov
out
in
adc
mov
adcl
fcoms
jecxz
test
dec
int3
or
sub
xchg
jnp
jl
cmc
cmp
ret
in
gs
clc
mov
jns
pop
imulb
rcrl
test
popf
pusha
lret
in
and
push
nop
jne
inc
mov
ffreep
xlat
scas
adc
imul
dec
cs
roll
sub
pop
mov
sub
push
lahf
xchg
fstl
icebp
fbld
adc
jecxz
out
xor
push
pop
lcall
jp
lea
dec
je
je
lds
sbb
or
add
loop
pushf
loopne
and
push
outsb
lods
adc
sub
shrl
movl
jecxz
mov
sahf
pop
int
or
pusha
cli
js
gs
loopne
addl
sub
cmp
adc
mov
add
popa
cmpsl
fbld
sbb
jb
cmp
jo
sub
push
xchg
mov
jae
or
cmp
shlb
pushf
jmp
cmp
rcll
inc
jnp
push
jl
sti
adc
pop
int3
lock
into
out
scas
ja
cmp
dec
sub
inc
cmp
fdivp
cmp
aad
inc
js
sahf
fcomps
xchg
add
dec
dec
gs
es
mov
lock
xor
in
push
imul
cwtl
lcall
sbb
ficoml
mov
mov
xor
mov
jle
push
inc
sti
add
les
mov
das
test
adc
das
int
imul
lret
add
jl
std
shlb
lret
stos
or
add
orl
scas
xchg
xchg
push
sbb
inc
das
pop
or
stc
negb
xchg
jp
cmp
cli
out
je
fsts
jns
add
mov
mov
add
outsl
mov
into
mov
lret
fcomi
jne
ret
aaa
jnp
mov
inc
mov
lret
and
mov
push
push
js
push
cmp
ret
jg
cmpl
jae
jecxz
outsb
inc
lods
xchg
shr
xor
lahf
pop
add
je
out
sarb
enter
cmp
lret
mov
push
mov
jne
outsb
frstor
adc
aas
jae
stos
icebp
mov
mov
adc
data16
jl
xchg
fstpt
icebp
cli
cmp
aam
sbb
insb
arpl
cmp
out
fiadds
pushf
ja
icebp
hlt
les
push
inc
mov
pop
pop
out
push
imul
inc
insl
ret
pop
loope
sbb
sub
pop
mov
cmpb
sahf
jno
xor
dec
mov
clc
add
sbb
fiadds
sbb
flds
dec
cmc
jns
adc
or
push
cmp
icebp
test
mov
arpl
sbb
mov
and
clc
into
loop
inc
push
mov
ja
or
mov
cwtl
cmp
xor
dec
pop
add
insb
sbb
js
shlb
ljmp
pop
stc
scas
insl
pusha
shrl
rcrb
addr16
clc
xor
test
ret
xor
and
fldcw
arpl
test
xor
sti
in
ret
mov
in
dec
mov
adc
mov
arpl
mov
outsl
mov
out
repnz
bound
cltd
imul
jbe
mov
in
dec
jl
popa
jo
sub
and
sub
push
cmpsl
mov
shrl
ret
pop
ds
popf
daa
add
sub
data16
sbb
int3
sub
pop
ss
add
inc
push
xchg
rcll
loopne
jns
mov
jg
in
sarl
push
mov
mov
dec
cmp
aaa
data16
mov
fsubs
mov
mov
fs
jno
lcall
xor
aaa
mov
jae
jnp
jo
jno
push
sbb
mov
add
inc
shll
sti
xor
ret
adc
xchg
mov
jns
aaa
mov
push
jns
adc
xchg
jnp
adc
mov
leave
add
pop
test
daa
jbe
jns
stos
dec
lea
mov
pop
int3
xor
sub
sbb
sahf
cltd
xchg
scas
rcr
add
mov
jns
cld
jae
movsb
mov
into
je
aad
jae
or
aas
dec
sahf
std
test
dec
sbb
inc
arpl
push
shlb
sbb
jb
cmp
xchg
jp
dec
int3
dec
ja
mov
xchg
inc
add
xchg
push
rcrl
gs
push
lea
add
lret
fistl
in
je
out
mov
lods
sahf
dec
lcall
imul
dec
loopne
out
int3
inc
pop
jl
or
dec
ss
shl
popa
call
add
xor
jle
subl
lea
and
push
dec
cmpsb
pop
ja
es
fwait
inc
mov
jo
mov
cmp
add
or
movsl
nop
in
xchg
cltd
test
shrl
dec
imul
movsl
pop
and
je
fildll
js
ss
loope
xor
mov
fiaddl
and
outsb
lds
data16
push
enter
or
mov
lock
push
popa
cmp
insb
add
sbb
xchg
bound
cmpsb
call
jno
rol
or
pop
mov
scas
call
repz
push
imul
int
lods
nop
xchg
imul
cld
lock
lds
pop
jecxz
enter
push
xchg
out
stos
jne
mov
cld
ret
cmp
imul
jo
sti
xchg
pusha
fcmovu
clc
and
in
shll
cld
in
loop
jle
stos
sti
enter
out
js
daa
out
xor
jmp
repz
xorl
shrl
or
fidivrs
push
popa
movsb
stos
sbb
xchg
adc
pusha
inc
xor
sub
lret
mov
sbb
adc
daa
ds
pop
fwait
jl
int
cmp
inc
lds
pusha
int3
fcomps
es
push
insb
push
aad
xchg
pushf
dec
mov
outsb
jmp
mov
inc
daa
adc
call
jns
fistpl
xor
pop
add
in
xorl
mov
mov
xchg
mov
gs
mov
scas
xchg
leave
lea
or
outsl
rcrl
jb
inc
sub
decb
mov
cmpsb
imul
cld
mov
sahf
js
sub
mov
mov
call
loope
xchg
rclb
adc
stos
xlat
cmpsl
cmp
lcall
jne
mul
out
xlat
mov
loopne
xlat
sub
fwait
jno
fisttpl
enter
imul
xchg
adc
subl
jmp
sti
jnp
push
mov
negl
sti
xchg
out
jb
jns
stos
inc
jmp
aaa
rorb
jle
sbb
xor
push
aas
test
sub
or
cmp
xchg
bound
movsb
dec
in
shlb
int
stc
stos
ror
mov
pop
hlt
call
and
add
jnp
adc
cmp
mov
jbe
je
int3
iret
ret
scas
sbb
pop
dec
mov
dec
in
testl
jge
adc
and
aaa
mov
sbb
repnz
add
add
add
dec
or
xor
mov
sbb
xlat
test
imul
push
xor
les
addr16
popl
pop
mov
sbb
add
dec
cmp
cmp
imul
xchg
fcomps
or
test
pop
adc
adc
dec
out
xor
push
or
cli
pop
test
movsb
cmovne
mov
xor
iret
ret
aad
adc
shll
adc
in
aam
mov
rep
inc
mov
xor
push
scas
sbb
incl
bound
loopne
pop
sub
xor
mov
test
push
add
and
imul
push
xor
mov
stos
outsb
xchg
outsw
xor
push
jl
pop
ret
ret
incl
dec
xor
mov
sbb
cmp
adc
sub
in
pop
das
sbb
testl
jecxz
cmp
jbe
jno
add
test
adc
pop
and
aam
inc
sub
into
mov
test
add
test
xchg
popa
jmp
repnz
shrl
xchg
shll
xor
jg
pop
inc
jnp
or
ljmp
enter
mov
jp
xchg
jg
jo
cmp
jge
mov
mov
nop
add
imul
inc
cmp
shr
mov
pop
out
and
fs
push
mov
sub
das
ret
mov
sbbl
ret
je
adc
arpl
push
add
popf
hlt
mov
inc
xchg
xlat
mov
mov
orl
nop
jb
and
xchg
xor
aas
mov
cwtl
fnstenv
es
or
gs
aaa
mov
cwtl
ficoms
cmp
mov
and
push
cmp
stos
pop
cmc
push
pop
int
lods
hlt
icebp
rclb
or
xor
aad
jge
cmp
add
mov
test
xchg
fildl
pop
push
sub
jb
inc
cmp
push
sar
inc
pop
add
sbb
mov
sar
shl
pop
xlat
inc
nop
sbb
sbb
push
sar
push
mov
jl
sti
int3
stos
sbb
dec
cld
cli
mov
je
push
mov
inc
inc
out
aas
or
and
cmc
je
aam
adc
sub
mov
or
shlb
add
or
in
xchg
push
negb
ss
xchg
out
testl
mov
or
and
xor
fwait
adc
popa
sub
xchg
into
sahf
or
push
sbb
dec
loopne
inc
inc
push
lods
lret
mov
and
test
push
pop
cmovg
cmc
mov
adc
ficompl
aas
ljmp
repnz
outsb
subl
xor
or
clc
inc
les
xchg
fstps
cmp
leave
enter
xchg
push
push
sub
call
enter
mov
insb
xor
test
push
jno
mov
dec
or
or
nop
xchg
or
out
inc
mov
sub
loopne
mov
sbb
cltd
enter
pop
inc
iret
mov
push
jle
and
adc
push
test
mov
jns
add
test
push
ret
sbb
repz
nop
xchg
frstor
xchg
sub
pop
cmpsb
punpcklbw
lock
adc
out
loopew
add
fcomp
sbb
or
addb
mov
test
sbb
mov
xor
jb
stos
sarl
push
int
lods
jge,pt
fwait
mov
jl
or
cmp
ret
pop
fistpl
fdivl
push
mov
fnstenv
add
adc
pop
mov
mov
ret
adcl
shl
ljmp
imul
hlt
test
or
mov
fsub
cltd
fs
adc
jl
mov
shll
inc
or
sub
mov
lret
xchg
mov
push
repz
and
inc
mov
sbb
add
sub
in
nop
in
sbb
sahf
js
shrl
shlb
mov
sub
ljmp
inc
sub
inc
cli
test
pop
stos
dec
mov
aas
out
int
mov
out
mov
divb
lea
je
and
adc
ja
jg
xor
lods
nop
in
fcmovnu
pop
sub
push
rorb
sbb
jp
adc
xor
push
repnz
shlb
inc
pushf
stc
push
and
jae
outsb
popf
adc
lods
cmp
nop
mov
lea
xchg
dec
int3
xchg
mov
inc
or
lods
mov
jl
cli
and
xor
ja
dec
xor
xor
cltd
pop
mov
arpl
imul
push
in
mov
imulb
pushf
andl
out
les
inc
jle
outsb
es
and
lods
test
imul
cmpsl
loopne
jge
fisubrl
or
sbb
add
add
hlt
mov
and
scas
push
aas
jmp
inc
into
lods
cmpb
pop
xchg
xor
push
ss
lods
ret
mov
lret
and
ds
xor
jp
fsubrs
bound
dec
mov
mov
ljmp
dec
ljmp
sbb
int
jb
sbb
fcomps
aad
je
ljmp
shl
xchg
shlb
aam
enter
adc
xchg
mov
repnz
ja
fildl
dec
pop
flds
jge
sbb
cmp
mov
mov
and
cld
lods
sti
in
jmp
in
dec
jg
and
fnsave
leave
adcl
and
and
shll
popf
cmp
fnsave
cmpsl
sub
hlt
out
std
in
inc
adc
or
sub
xchg
jl
out
pop
jb
mov
push
cmp
scas
popf
aaa
in
cli
in
sub
or
cmc
pop
ret
jne
mov
lret
dec
or
push
repnz
pop
scas
push
or
addr16
adc
pop
in
xchg
sbb
mov
sub
outsb
mov
mov
adc
notb
mov
and
pop
ficomps
mov
shrb
ret
sub
xchg
daa
mov
cld
or
xor
xor
cmp
xchg
adcl
jns
push
aad
call
adc
push
xlat
cmpb
dec
dec
fbstp
cmc
cmp
push
push
pushf
mov
repz
mov
inc
ret
add
or
fsubp
loopne
pop
push
test
mov
sub
test
push
and
stos
cmp
movsl
and
add
inc
into
inc
loope
repnz
and
int3
jns
add
push
jl
aaa
repnz
testb
lahf
ljmp
xor
daa
pop
stc
icebp
inc
inc
or
fstpl
jmp
pop
int3
jns
mov
aas
add
mov
or
jecxz
inc
or
sahf
push
xchg
frstor
jnp
enter
xor
test
sbb
popf
outsb
movsb
or
orl
pop
fiaddl
lods
or
stos
adc
xchg
or
popa
fimuls
stos
daa
sahf
cmc
mov
sbbb
pop
adc
fs
push
dec
ja
mov
jecxz
sbb
popl
fimuls
aas
repnz
xchg
mov
inc
ja
jle
rorb
lock
adc
mov
aaa
packssdw
push
aaa
dec
rclb
mov
jnp
fistpll
mov
xchg
or
pop
mov
jae
pusha
inc
sub
testb
in
or
xchg
inc
jmp
movl
arpl
xor
inc
ja
hlt
cmpsb
cmp
icebp
or
mov
cltd
mov
in
push
ficompl
cmp
imul
stc
movsb
fnstcw
sub
inc
fistl
lahf
mov
or
pop
outsb
mov
icebp
pop
mov
push
inc
xor
jecxz
movsl
dec
inc
ret
cmp
xchg
pop
jge
push
sahf
sub
dec
mov
pushf
cli
xchg
jb
adc
mov
sti
adc
jp
pop
repnz
jge
or
sub
jg
adc
cmpl
cmc
lret
scas
push
mov
jns
mov
mov
insl
jl
data16
jns
mov
lea
or
adc
in
outsl
lock
inc
dec
negl
mov
xchg
rorl
pop
ss
jl,pt
mov
fwait
adc
pop
add
je
pop
push
mov
lret
cltd
push
call
adc
cmpsl
xor
in
push
inc
iret
mov
push
adc
test
pop
cmc
ror
lcall
xchg
ja
ret
shll
dec
aaa
test
popf
mov
fsubrs
xchg
pop
stc
fimull
jmp
rcr
xor
sti
and
out
xchg
mov
lret
loop
and
jnp
cmpsl
xchg
xchg
gs
sbb
js
mov
push
xchg
xchg
add
fcoml
mov
cmpsl
testl
mov
jle
or
xor
mov
xchg
sub
decl
adc
mov
lock
jae
pop
dec
lret
ja
mov
push
and
cmpsb
or
imul
clc
sub
push
jbe
xlat
das
and
in
ja
lods
loope
arpl
addb
shrb
xchg
test
sbbl
cli
adc
arpl
pop
adc
and
daa
xlat
dec
bound
cli
sti
jmp
pop
xlat
cmp
pop
mov
sarb
or
or
adc
lods
dec
icebp
mov
pusha
inc
lret
and
add
or
xchg
push
adc
and
adc
cld
cltd
into
outsl
adc
in
pop
shl
or
jecxz
dec
fidivrs
mov
mov
fwait
mov
xorb
in
fisttpll
rorb
insl
mov
out
lock
sbb
xorb
inc
pop
lret
in
out
stos
fists
xor
fsts
shlb
push
lcall
dec
xchg
call
fbld
fwait
ror
jnp
out
dec
ja
dec
jnp
or
sbb
adc
lods
sahf
stc
dec
pop
inc
pop
sub
rcrb
sub
test
adc
mov
hlt
aam
in
movsb
add
adc
scas
mov
mov
insl
lods
pusha
jne
imul
jae
and
arpl
sub
xchg
add
mov
xor
and
nop
cwtl
add
sbb
push
loop
clc
adc
cwtl
aaa
pop
ds
aam
push
imul
mov
cltd
xchg
pushf
sub
dec
pop
iret
adc
nop
icebp
mov
push
mov
push
aas
or
fistl
lret
fprem
mov
lods
cmp
sbb
inc
xchg
adc
mov
and
dec
mov
jg
mov
inc
adc
in
lock
push
pop
fistl
out
xchg
mov
loopne
xchg
xlat
js
popf
lds
insb
mov
mov
xchg
push
mov
sub
pop
pop
bound
ja
flds
mov
inc
cli
mov
inc
mov
pop
in
mov
movsb
test
das
xchg
jge
or
imul
add
clc
mov
push
lret
mov
sub
push
int3
data16
mov
xchg
adc
cmpsl
cli
or
dec
ret
mov
jmp
loope
push
lahf
es
loopne
dec
movsl
aad
dec
adc
jae
mov
in
inc
add
dec
pop
push
icebp
push
imul
mov
inc
dec
cmp
inc
inc
mov
inc
cli
stc
inc
xor
pop
inc
sub
push
sbb
dec
insb
stos
mov
push
lods
pop
movsl
pusha
test
jb
leave
sub
in
adc
fstl
or
rorl
xchg
sahf
fwait
mov
mov
cmp
iret
pop
fcoml
push
cmc
sbb
scas
ds
test
inc
lahf
mov
fadd
mov
cld
dec
mov
xchg
sub
nop
pop
jno
push
popa
sub
cmp
inc
mov
ljmp
test
cltd
std
cmpsb
jmp
out
cmp
nop
push
out
push
gs
mov
mov
sub
movsb
jnp
stc
lcall
mov
outsl
in
sbb
ret
int
and
and
jbe
fimuls
repz
xchg
push
outsl
sbb
jle
sub
dec
push
inc
push
popf
nop
add
in
fucomip
jge
and
and
inc
mov
int3
xor
mov
fs
inc
xchg
jae
pop
inc
fisttpll
jg
mov
mov
sub
dec
imul
mov
pop
or
xorl
push
and
push
fs
adc
mov
fs
aas
in
daa
lret
jne
adc
xchg
sarl
ljmp
cltd
es
roll
adc
das
jecxz
sub
or
and
and
pop
cmp
addr16
pop
push
popf
or
lcall
mov
insb
and
cmp
inc
and
popa
outsb
sbb
sbb
cltd
jmp
dec
lods
test
cmp
cmp
dec
sub
test
lds
enter
sub
fiaddl
enter
xor
or
cmp
adc
fwait
mov
test
out
push
cli
repz
mov
xlat
mov
cmp
rcr
cmpsl
jp
mov
lods
dec
pop
mov
and
xlat
inc
cmpsl
fst
xor
outsl
mov
int
fsubs
imul
push
mov
repnz
loope
and
ljmp
rcr
shlb
xchg
clc
ja
faddp
popf
lahf
cs
test
mov
aam
test
push
xchg
addb
and
jl
sub
xchg
pop
pusha
adc
mov
gs
push
mov
je
ret
daa
movsl
rorl
sub
das
js
adc
dec
filds
lret
lods
jg
adc
in
add
es
inc
and
mov
dec
or
push
push
xchg
test
popa
mov
movsb
push
sbb
xchg
jae
in
mov
popf
push
popl
cmp
sahf
xor
scas
ftst
out
sbb
sbb
inc
sub
mov
push
test
sbb
and
mov
mov
sbb
dec
xchg
cmc
mov
dec
jp
mov
and
loope
fcoml
push
lock
mov
jno
mov
sub
inc
and
push
std
iret
dec
dec
cmpsb
mov
daa
fdivs
and
pop
mov
or
ljmp
cli
sub
mov
repz
mov
dec
pop
sbbb
inc
push
stos
scas
dec
mov
test
jg
mov
jo
adc
adc
in
and
movsb
adc
cli
push
ja
jmp
arpl
add
jle
or
inc
mov
ror
sub
pop
cmpsb
out
pop
in
xor
in
inc
popa
inc
inc
into
sub
bswap
jb
stos
icebp
dec
jnp
cmp
int3
jge
loop
adc
xchg
fisttps
adc
mov
xchg
scas
pusha
pop
push
jmp
mov
psubw
out
inc
add
adc
xchg
add
mov
ficoms
sbb
shl
pop
mov
repz
nop
xchg
movsl
rcl
push
stc
sub
jmp
vmovaps
lcall
cmp
mov
inc
xchg
rcrl
arpl
aad
inc
jle
das
fsubr
sbb
jle
icebp
and
inc
sahf
lods
push
pop
dec
lock
and
sub
lock
mov
sarb
nop
inc
aam
inc
pop
in
and
mov
int
or
mov
xchg
out
xchg
sbb
push
test
push
pop
outsb
xchg
rcl
and
jle
mov
pop
mov
aad
imull
adc
sbb
imulb
jle
cli
stc
push
adc
mov
out
data16
inc
ja
inc
loope
inc
pop
fnstsw
xchg
test
xchg
test
fwait
pop
push
pop
cmp
subb
xor
mov
mov
push
sbb
pop
mov
push
stos
sbb
pop
mov
pop
mov
pop
inc
adcl
inc
addr16
sbb
fldl
xchg
lcall
ljmp
push
pop
push
inc
jo
fisubl
les
test
sbb
lods
dec
les
add
clc
mov
pminsw
jle
xchg
enter
mov
inc
cld
mov
into
ret
enter
mov
xchg
les
push
xchg
dec
sbb
mov
mov
xor
mov
ror
add
mov
jl
pop
rcll
or
popf
or
imul
mov
out
cmp
cmpsb
xchg
mov
lea
push
daa
push
pop
cld
enter
inc
rorl
adc
and
mov
jo
inc
add
sub
int3
dec
sbb
lods
mov
xchg
jg
sbb
arpl
mov
movsl
out
hlt
xchg
inc
pop
rorb
add
mov
xchg
mov
into
or
fldcw
jae
or
scas
dec
stos
add
lret
adc
inc
xchg
call
xor
sbb
movsb
call
rorb
jb
mov
cmp
ljmp
inc
or
mov
xchg
inc
push
test
add
inc
aad
orb
test
mov
out
bound
add
icebp
and
sub
aaa
mov
cmp
inc
jle
loopne
cmc
ja,pn
xor
sbb
popa
sub
fdivrl
repnz
fs
xor
jg
enter
sbb
xchg
ret
fwait
xor
ret
cmp
jne
in
mov
mov
push
popa
or
fcmovnu
les
xchg
pop
add
pop
xchg
jl
or
mov
mov
das
test
out
and
jno
enter
hlt
xchg
or
jno
loope
sbb
pop
fstpl
sahf
push
adc
pop
cmp
sbb
mov
rclb
dec
movsb
cmp
outsb
stc
nop
inc
out
sbbl
scas
mov
pushf
sbb
xlat
out
lahf
inc
mov
push
pop
push
lods
jo
sbb
pop
push
cvtps2pd
cmp
icebp
xor
mov
imul
xor
in
imul
xchg
pop
jmpw
push
xchg
aam
mov
dec
sarl
and
into
lods
fcmovnu
sahf
dec
outsb
ret
xchg
mov
cmp
int
jmp
cltd
dec
mov
lods
inc
pop
jp
dec
and
repnz
pop
dec
cmp
movsl
bound
loopne
push
mov
dec
loopne
mov
cmpsl
mov
xchg
add
push
lock
jo
pop
das
subb
sbb
int
xchg
and
inc
in
mov
punpcklwd
push
cmc
dec
outsl
clc
or
and
cmp
cmp
jne
js
sbb
out
sub
iret
mov
mov
lods
jne
mov
lret
xchg
into
jecxz
enter
fisttps
int
sar
xchg
scas
mov
sub
in
lock
xor
dec
cltd
sbb
xor
push
wbinvd
dec
xchg
jl
pop
enter
mov
mov
mov
adc
fdivp
ljmp
int3
gs
and
cmpl
lret
xchg
push
mov
jmp
or
rolb
and
shrl
dec
sub
cmpsb
mov
fldl
push
inc
lret
fisubl
dec
imul
popa
scas
xchg
pop
xchg
nop
mov
push
lods
adc
cltd
and
push
cmpl
or
scas
in
inc
xchg
xchg
repnz
pop
ret
leave
imul
sarl
xor
aad
aam
mov
sbb
fidivrs
fimuls
sti
cs
mov
pop
xchg
adc
shr
push
pop
and
adc
and
push
icebp
add
lret
cmp
push
sbb
js
adc
dec
inc
test
lcall
xor
mov
jl
add
pop
push
dec
adcl
sbb
sub
lea
das
movsb
push
movsb
inc
push
add
push
mov
jge
mov
lock
imul
sub
lods
jle
sub
negl
jo
in
sub
xor
pop
pop
dec
rcr
in
adc
std
mov
xor
dec
and
push
push
fimuls
out
rclb
mov
jmp
pop
mov
shrl
add
or
mov
js
jmp
xchg
mov
pop
xchg
and
pop
popa
dec
inc
inc
rcrb
mov
std
pop
pop
push
aad
lea
push
xor
or
loope
add
daa
cmc
sti
sarl
add
dec
stc
xchg
xor
nop
dec
cmc
cs
cmpsb
xlat
push
loopne
mov
inc
push
jge
mov
ja
add
push
sar
jmp
xchg
mov
add
loop
cli
jo
sbb
lock
decb
outsl
cs
cmp
and
mov
rcll
jb
push
xchg
in
hlt
xor
scas
loop
cmp
mov
sub
out
shl
push
into
mov
inc
push
or
jecxz
in
cld
cwtl
daa
call
and
dec
sbb
mov
movsb
mov
xchg
mov
sbb
sub
into
push
push
sbb
xchg
in
adc
or
fdivrs
enter
push
scas
fwait
call
shll
mov
sub
pop
mov
mov
in
dec
imul
mov
mov
sub
fimuls
iret
inc
in
ja
outsb
dec
dec
loop
rcl
test
sub
cwtl
pop
into
mov
test
push
cmp
mov
pop
push
leave
jb
mov
jge
jg
push
mov
xor
push
hlt
dec
sbb
js
lods
xor
pop
incl
jnp
pop
mov
pop
rcll
shl
rcrb
pop
cmp
adc
mov
mov
dec
fnstsw
sub
mov
jle
ja
lods
push
pxor
inc
dec
adc
and
xor
fwait
outsb
cmp
and
lcall
icebp
mov
xlat
das
loop
fldt
jnp
js
hlt
shll
sbb
loopne
add
sbb
std
das
mov
fdivl
ret
inc
ds
xchg
mov
xchg
test
sbb
shlb
mov
jne
imul
lret
sahf
xchg
or
fsubrp
mov
inc
pop
sub
push
mov
mov
and
xor
jno
dec
mov
icebp
sub
int
sahf
inc
in
mov
cwtl
int3
inc
aaa
jge
and
lcall
add
mov
leave
mov
movsl
sbb
or
insl
pop
movsb
fimuls
sbb
or
in
push
add
out
sbb
leave
add
dec
pushf
sub
xor
jae
daa
daa
cli
daa
stos
cmp
adc
sbb
inc
xchg
inc
aad
sbb
cmp
idivb
cmp
xor
xchg
jle
or
lcall
xchg
nop
test
fidivrs
mov
push
hlt
mov
int3
jb
stos
mov
push
dec
lcall
pop
jb
push
jns
cmc
add
jae
push
stc
dec
or
subl
stos
sbb
sub
jecxz
mov
fisubl
inc
xor
inc
cmp
jb
mov
aam
xchg
dec
mov
out
mov
mov
test
xchg
mov
cmp
clc
mov
push
mov
jo
xor
arpl
mov
fsubrl
in
in
ficomps
sub
sub
jbe
not
pop
imul
or
sbb
cmp
call
inc
dec
nop
xchg
adc
mov
and
popa
sbb
mov
out
or
in
sub
repnz
pop
repz
jnp
mov
push
rcrb
mov
xchg
dec
pusha
std
add
iret
jbe
dec
sbb
mov
lret
scas
or
lods
mov
push
arpl
cmp
int
daa
mov
push
iret
pop
or
xchg
dec
sub
inc
dec
sbb
insb
jns
xor
push
pop
jns
adc
cmpsl
sbb
dec
sahf
inc
push
adc
je
in
sbb
stc
push
push
arpl
lods
inc
adc
cmc
aam
jno
cmp
int3
hlt
int3
push
push
les
cltd
sarb
arpl
jge
xsaveopt
fbld
cmc
xchg
sahf
pushl
aad
and
jge
mov
xchg
dec
xchg
dec
xlat
aas
scas
sub
inc
in
ror
pop
sahf
jo
lea
fdivl
cmp
xchg
add
je
pop
dec
mov
iret
icebp
in
and
rep
xchg
xchg
scas
xchg
scas
imul
mov
cmc
mov
and
daa
movsl
xchg
mov
cmc
fs
mov
jp
inc
imul
mov
push
test
push
into
out
fsubrs
sti
daa
outsb
push
ret
mov
jle
and
add
mov
std
lds
and
test
idivl
adc
mov
repz
mov
lea
dec
imul
popa
test
shrb
shrb
leave
add
jge
and
lock
stos
adc
outsb
ffree
or
ror
call
lock
inc
fwait
fwait
or
scas
lcall
pusha
fcmovnbe
jbe
cmp
into
popa
in
dec
adc
int3
iret
iret
dec
fwait
movsl
lcall
cmp
dec
jae
ds
rcll
adc
cli
jle
leave
push
out
imul
cmp
add
adc
or
std
scas
ret
enter
ja
jno
popa
cwtl
jmp
mov
sub
cmp
adc
or
lods
out
cmp
xor
push
push
in
dec
and
sbb
mov
out
dec
data16
jmp
ja
fs
ljmp
ret
add
loopne
cmp
rcrb
dec
in
dec
sbb
cmpsl
or
sub
cmp
leave
pushf
mov
and
aad
lret
cmp
mov
clc
jp
dec
push
push
popa
mov
xor
mov
sbb
in
sbb
out
subb
lahf
xchg
popa
and
fcoml
lahf
pop
sysret
and
add
add
cwtl
dec
ucomiss
mov
mov
movsb
xchg
rolb
lahf
xchg
inc
cmc
pop
cmp
fcmovnu
jae
aas
jb
xchg
jo
jmp
nop
sbb
and
rol
mov
fsubrl
and
ds
add
pusha
out
mov
dec
fcomi
adc
adc
push
stos
enter
in
dec
call
sbb
and
push
sahf
sub
cmp
pop
xchg
and
sub
or
cmpsb
insl
adc
int
push
and
adc
roll
icebp
iret
sbb
mov
ret
and
adc
and
ret
push
stc
repz
cmc
fstpt
into
jp
push
mov
imul
push
xchg
popf
popf
lods
andl
fs
sub
int
inc
jl
insb
add
jno
cli
enter
dec
cmc
mov
subb
jg
scas
sub
lret
sti
inc
push
pop
int
xor
and
subl
inc
xor
pushf
out
inc
shlb
mov
or
jl
or
push
orb
mov
lea
and
gs
scas
or
divb
lcall
int
cmp
mov
cmc
inc
dec
mov
adc
clc
fs
or
sahf
lcall
sbb
or
dec
test
addr16
jbe
mov
cwtl
push
sti
pushf
mov
aad
js
out
mov
xchg
outsb
pushf
ret
repnz
pop
dec
pop
lock
pop
jg
in
add
andl
cmc
pop
mov
pop
mov
jno
rclb
xchg
adc
or
push
fdivrs
loopne
pop
push
or
cli
imull
add
jmp
sahf
push
xor
adc
xor
adc
ret
push
and
sub
mov
push
push
pop
mov
cmp
aad
sub
lock
fadds
in
mov
clc
lret
out
xchg
dec
sub
out
or
inc
gs
and
or
inc
jge
shlb
pop
adc
imul
xchg
out
sbb
sub
push
mov
adc
mov
fwait
dec
pusha
jns
add
daa
sar
fstl
mov
adc
out
mov
adc
mov
sbb
enter
into
fwait
push
or
or
rcrl
stc
pop
hlt
cli
dec
xchg
shl
out
inc
mov
fisubs
dec
ror
jo
js
std
insl
ja
jecxz
pusha
popf
hlt
dec
scas
add
or
lock
cwtl
inc
shrl
mov
adc
cmp
stos
inc
icebp
pop
ret
xchg
pop
push
rcll
bound
xchg
or
in
cwtl
repnz
outsl
clc
fistpl
outsl
in
xor
aaa
sub
sti
jle
je
jnp
imul
cwtl
stos
or
jnp
pop
mov
sbb
movsl
push
or
or
mov
mov
mov
ds
int3
add
cld
push
adc
or
movsl
ss
scas
mov
into
sbbl
dec
addb
xchg
clc
or
call
cld
and
ds
fldcw
icebp
sbb
es
repz
pushf
out
seto
jle
call
add
jp
mov
in
sub
jae
in
hlt
loopne
aam
fistps
xor
aam
stc
cs
mov
popf
aaa
push
sub
je
jle
push
push
dec
int3
rol
sub
mov
ret
aas
lock
xchg
pop
movsb
js
dec
pop
xchg
or
cmp
bound
rcll
jae
cld
jbe
data16
cli
sbb
cmpb
inc
push
xor
addr16
xor
mov
xchg
cmp
dec
add
jns
pop
mov
daa
icebp
cli
dec
inc
imul
loope
xchg
xor
sbb
scas
loopnew
data16
inc
mov
sub
test
push
mov
push
lret
cmp
sub
push
dec
cmp
inc
loop
jne
enter
loop
aaa
inc
mov
imul
pop
ret
jecxz
bound
loope
cmp
pop
mov
ret
mov
sti
mov
xor
ds
popf
and
pop
or
push
xchg
enter
fldenv
and
mov
outsb
push
sarl
outsb
push
lcall
cwtl
push
popa
xchg
out
mov
pop
cltd
nop
sbb
jmp
or
jge
cltd
mov
sahf
test
mov
sti
sub
dec
jmp
test
push
mov
xor
lds
xchg
mov
mov
fadds
pop
and
shlb
fmul
adc
dec
clc
xor
icebp
and
jle
ds
and
sub
sbb
addr16
aad
or
jg
cmp
pop
aad
push
jne
outsb
cmpl
cmp
mov
push
lea
jns
add
cli
push
mov
sub
loopew
mov
xor
insl
add
pop
frstor
fscale
int
js
mov
loopne
add
sub
pop
dec
icebp
loopne
xor
push
mov
and
inc
add
cmpsl
orb
mov
ret
cli
int
outsl
fstpl
sub
or
cli
shl
and
nop
push
rorl
and
out
mov
insw
pushf
fnstsw
sbb
and
movsb
add
and
out
ss
enter
xor
cmp
in
jle
or
inc
movl
pop
dec
xchg
mov
sbb
loope
ljmp
pop
shrl
mov
dec
ret
sub
or
mov
xor
insb
out
cmpsb
adc
das
sbb
push
imull
flds
inc
sub
inc
inc
pop
pop
scas
mov
test
pop
pop
fcom
sbb
dec
mov
xlat
ret
js
mov
mov
aam
cld
sbb
frstor
and
mov
push
sbb
add
mov
push
nop
cmpsl
addb
or
xor
ret
sti
lock
jno
and
jmp
addb
add
inc
cmpb
jecxz
sub
dec
mov
fsubrs
jno
int3
sbb
pop
mov
dec
mov
rclb
adc
lock
adcb
push
mov
stmxcsr
cld
aad
push
push
lret
lods
adc
std
dec
fmuls
lret
dec
cmp
addr16
sti
negb
sti
inc
sti
loopne
daa
or
mov
call
mov
pop
mov
in
cmp
jl
cmp
out
push
and
mov
filds
in
sbb
inc
add
xor
push
pop
push
test
and
out
xchg
jns
mov
bound
xlat
jg
cmp
je
imul
mov
sbbb
test
clc
push
cltd
iret
loop
mov
xor
xor
pusha
lret
cld
pop
test
idiv
es
jb
and
mov
add
xor
push
test
jecxz
das
dec
popl
cmpsl
add
cmp
jns
dec
loope
xchg
pop
aam
push
roll
lods
pop
mov
insl
bnd
stos
cmp
cmp
loopne
mov
lods
dec
cmp
addr16
add
das
int3
push
ss
adc
imul
sbb
dec
sbb
adc
xlat
mov
cmp
and
fsubp
jmp
cmp
add
sbb
inc
inc
xchg
sbbl
scas
xlat
mov
adc
adc
mov
lea
inc
rcrb
mov
xchg
into
andb
in
out
jle
shll
inc
inc
ret
xchg
or
push
inc
dec
ret
push
outsl
loop
test
xchg
pushf
js
push
xchg
jge
fidivl
push
ret
mov
lahf
mov
mov
push
lret
lock
sub
or
popa
xor
and
test
push
shlb
add
mov
mov
scas
dec
push
mov
ret
pop
sub
cmp
jnp
call
pop
lods
stos
mov
cmp
sar
frstor
daa
es
dec
push
inc
pop
movsl
lret
inc
mov
or
sti
sbb
dec
pop
cmp
mov
shlb
sub
lcall
jae
or
fistps
and
xchg
lahf
sti
push
fdivs
cmp
lret
push
and
sub
pop
inc
test
sbb
xchg
int3
lahf
ja
sbb
in
clc
lods
pop
mov
test
push
adc
ret
lds
idivb
jp
cmovle
push
mov
dec
cmp
push
fwait
pusha
sub
jno
xor
sbb
mov
fistpll
push
mov
in
mov
jg
enter
inc
mov
inc
jmp
sub
push
pusha
popa
mov
scas
aaa
cmp
aad
mov
and
sti
stos
gs
push
mov
cmp
mov
popf
sub
popa
int3
xchg
add
mov
inc
lds
dec
dec
fcomps
mov
test
adc
xchg
and
cmp
mov
xor
aaa
icebp
add
dec
lahf
pop
call
ficomps
inc
das
mov
dec
mov
negb
and
scas
cmp
xorl
inc
stc
imul
dec
sub
or
es
mov
mov
mov
xlat
sbb
daa
les
fldt
jns
sarb
push
or
ror
jbe
ljmp
lahf
cli
rcll
dec
fsubrl
mov
ficoms
fisubl
sub
xchg
aaa
mov
adc
sbb
mov
mov
arpl
add
popa
pop
pop
cmpsl
lcall
mov
loopne
gs
int3
test
std
push
mov
jo
inc
or
mov
imulb
out
shlb
and
loop
and
xchg
sbbb
mov
sub
in
xchg
xchg
inc
adcl
mov
clc
sti
cmp
add
cltd
pushf
jae
cs
out
popa
movsl
fwait
adc
imul
push
xchg
psrlw
pop
xchg
ljmp
mov
mov
into
mov
int3
adc
fldt
push
out
mov
or
roll
xchg
popa
jle
push
xchg
pop
je
movsb
jnp
xchg
fsubrl
fisttpl
imul
shlb
lcall
aad
dec
repnz
loopne
mov
xrelease
scas
mov
mov
divl
shll
leave
ss
push
pop
push
sub
sbbl
sub
jle
dec
rcll
jmp
jecxz
xchg
movsb
sbb
jl
out
dec
nop
lret
icebp
pop
jb
bound
adc
dec
mov
dec
cmc
add
jae
xor
pop
pop
adc
xchg
js
inc
add
notl
clc
cmp
push
frstpm(287
dec
push
test
ret
lods
les
cli
dec
inc
lods
insb
rol
imul
xchg
insb
xor
fidivs
pop
ja
shll
push
lea
lahf
mov
in
decb
shll
mov
mov
sub
push
or
push
out
xchg
sbb
shl
iret
dec
mov
adc
das
adc
popa
push
sub
push
sti
mov
stc
jecxz
add
ds
call
push
lods
test
lock
cmp
sub
fs
push
adc
lea
inc
dec
cmpsb
roll
add
stos
and
leave
dec
test
insb
daa
lret
imul
mov
mov
mov
cmp
lret
mov
and
lea
sub
aaa
dec
jmp
push
test
push
ljmp
xor
andl
div
loope
aam
shlb
or
jne
dec
sti
push
test
arpl
pushf
pop
pop
mov
inc
dec
scas
adc
in
fsubs
mov
sarb
cmpsb
repnz
mov
sub
push
into
xor
pusha
daa
mov
mov
fisubs
idivb
sbbb
stc
pusha
or
imulb
insl
adc
mov
cld
dec
loop
jle
stc
push
js
stos
fcoms
inc
xchg
aam
fwait
mov
push
xor
xlat
mov
jb
push
pushf
jecxz
rol
push
imul
lods
lock
es
inc
xchg
adcb
add
lock
int
leave
insl
int3
je
add
stos
leave
outsl
mov
test
mov
push
fcmovb
jbe
or
mov
les
std
les
xor
stos
mov
pop
dec
ss
lret
in
lahf
std
std
fdivrl
sti
sbb
sbbb
sbb
incb
or
mov
lea
pop
fs
add
xchg
testl
movsl
mov
push
jecxz
icebp
or
sub
jo
xor
xor
adc
adc
xor
hlt
or
xchg
ret
loope
cmpsl
outsb
cmp
shrb
or
inc
outsb
cs
in
cmp
test
rcr
cld
test
mov
xlat
add
test
cmpsl
cs
dec
jle
cmpsl
jmp
pushf
mov
xlat
mov
lcall
in
das
sbb
add
push
adc
out
xchg
mov
sbb
mov
rclb
adc
cmp
inc
inc
scas
cmp
sbb
inc
cmpsl
inc
mov
cmpsb
int
repnz
ret
dec
xor
pop
mov
dec
add
mov
emms
mov
and
inc
out
mov
rcrl
dec
arpl
int3
fnstsw
leave
push
fistpll
fstpl
xchg
dec
xchg
mov
cmp
ret
mov
fnstenv
gs
dec
mov
clc
pop
rcr
cmpsb
out
lret
pusha
lret
mov
or
or
pop
and
loope
in
je
lcall
push
mov
cld
out
in
arpl
push
pop
mov
sbb
adc
cmp
in
add
mov
xor
sbb
add
mov
lock
das
rcl
mov
xchg
mov
popf
bound
adc
arpl
push
cmpsl
xorl
push
xor
push
hlt
and
lds
aam
pop
and
test
push
out
dec
std
out
adc
in
lahf
pop
movsl
enter
dec
ret
dec
das
pop
or
mov
mov
xchg
loop
icebp
xor
mov
xchg
and
in
sbb
shrl
fidivrs
pop
push
dec
int3
mov
cmpsb
jae
adc
lahf
fisttpll
dec
xchg
fs
jo
mov
xchg
lahf
imul
push
and
stos
cmpb
xchg
mov
dec
shl
sub
lods
jo
mov
imul
loopne
imul
pop
sbb
mov
cmp
loopne
xor
inc
popf
cmp
test
adc
mov
jmp
fs
push
pop
out
add
adc
arpl
push
xlat
in
pushf
pop
push
add
xchg
lods
or
jmp
out
aad
push
mov
mov
adc
cmp
dec
lret
sbb
mov
dec
mov
ja
inc
lock
inc
je
les
dec
mov
adc
aas
ret
insl
sbb
vmaxsd
add
mov
push
push
or
pushf
stos
sub
fs
mov
lods
imul
sbb
lret
sub
rcrl
aam
or
je
cmp
sub
stc
mov
lcall
loop
orl
xchg
xor
int
out
fdivs
enter
pop
inc
stos
jecxz
in
pop
aam
nop
xchg
lods
or
inc
dec
jg
adc
mov
in
mov
lahf
sbb
inc
icebp
jnp
insb
jge
es
sbb
lret
cmpb
mov
xor
mov
xchg
cmc
xor
icebp
fwait
cmp
cmp
test
lea
push
lods
orl
xchg
stos
mov
ret
lods
mov
push
gs
movsl
rorl
movsl
adc
add
cmpl
push
sbb
cmp
mov
cmp
arpl
sahf
adc
mov
rcrl
int3
pop
push
in
shlb
fwait
cmp
pop
in
inc
or
movsb
sbb
cmpsb
enter
cmp
je
sub
xchg
cli
ss
jne
dec
dec
jecxz
test
add
fnstsw
inc
xchg
pusha
popa
add
aaa
xchg
mov
shr
dec
jmp
imulb
movsb
mov
adc
hlt
pusha
mov
or
mov
pop
jecxz
mov
int
xor
scas
mov
inc
pop
stc
mov
lret
cmp
xor
xor
jb
add
sbb
xchg
ret
push
test
sahf
das
push
inc
ss
lret
enter
xor
sub
mov
lock
adc
push
out
lods
pop
sbb
ret
and
les
sbb
adc
ret
add
mov
sub
push
push
mov
aam
sbb
test
lret
int3
and
add
jl
and
pop
jbe
outsb
xor
lock
sub
cmp
cmpsb
test
push
loope
and
lret
into
jno
and
pop
cmpsb
lret
outsb
jge
bound
xchg
call
xor
mov
inc
mov
sub
pop
inc
cmp
ss
ficomps
pop
add
popf
scas
jl
push
mov
sbb
xchg
xor
cmp
push
daa
sub
sbb
xchg
mov
add
je
lods
out
fdivl
mov
aas
movsb
inc
shl
mov
scas
pop
adc
xlat
dec
mov
out
dec
fisubl
lahf
push
ljmp
lock
iret
xchg
lds
lret
pop
iret
ret
imul
repnz
loopne
cltd
daa
pop
pop
cmp
popf
nop
jbe
dec
xchg
xor
inc
pop
int3
fmuls
xchg
fnstsw
lock
push
addb
adc
add
test
enter
sbb
sbb
and
cwtl
movsl
add
add
testl
movsb
lret
pop
push
iret
fnstsw
jge
jns
shlb
inc
sbb
aas
jb
or
and
andb
repz
icebp
lods
out
es
arpl
inc
js
sub
xor
xchg
mov
xchg
mov
push
adc
mov
orl
adc
lret
xchg
mov
sub
sti
push
cs
and
sbb
sbbl
dec
fcomi
rorb
icebp
jp
jb
add
mov
sub
cmp
nop
cmp
mov
stos
hlt
test
pop
stos
stc
xor
js
xchg
gs
pop
popl
adc
rcll
cli
fsubs
xlat
xchg
inc
adc
jne
std
inc
mov
test
lds
movsl
fdivp
mov
dec
add
repz
jb,pn
xchg
mov
add
xchg
pop
jnp
pop
cmp
and
out
test
push
add
add
cmpsb
aad
push
fcomps
icebp
test
fldln2
outsb
loopne
loop
mov
mov
mov
enter
mov
lods
sbb
imul
cmp
sub
pop
push
es
inc
cmpb
mov
shll
shlb
stos
inc
cmc
adc
out
or
xchg
frstor
mov
sti
adc
insb
xor
jmp
aad
dec
mov
adc
jnp
pop
in
das
ficompl
mov
jecxz
insl
lods
xor
test
or
sbb
jne
mov
jo
xchg
pushf
add
es
out
std
or
fcmovnu
stc
pushf
inc
mov
vpmaxub
dec
fidivl
xchg
adc
mov
dec
ds
sbb
cld
bound
push
or
cmp
mov
cmpl
push
bound
or
dec
in
sub
outsb
add
xchg
scas
and
loop
inc
xchg
popa
je
push
adc
or
sub
aam
mov
add
sbb
or
inc
cld
mov
arpl
xchg
sbb
aad
aas
lahf
je
dec
jnp,pt
sbb
sti
mov
daa
sub
imul
orb
icebp
add
inc
dec
xor
adc
out
pop
fnop
push
sub
cmc
popf
fildll
push
lock
add
pop
lcall
imul
ljmp
xor
loope
adc
inc
cmpsb
das
and
ss
lahf
mov
into
sub
or
push
gs
out
outsb
fbld
icebp
xorl
mov
pushf
add
out
inc
pushf
loopne
clc
xor
sbb
push
ja
jno
sahf
insl
cmc
adc
inc
loop
or
push
mov
xchg
add
pushf
jecxz
inc
sbb
xchg
cld
sbb
adc
out
pop
aad
repz
insl
call
pop
pop
add
add
or
dec
inc
and
add
inc
or
xor
sbb
mov
es
inc
mov
into
push
and
adc
lods
aam
movsl
out
push
add
sarb
loope
in
int3
jns
jne
and
out
mov
jno
lret
ficoms
and
or
dec
sahf
dec
cmp
stc
push
dec
movl
jno
mov
sbb
scas
pop
inc
mov
cmpsl
insb
xor
cmpsb
sti
push
xchg
jnp
les
lock
pushf
imul
pop
mov
push
cmp
popf
daa
pop
mov
outsl
push
fldenv
push
xor
sbb
popf
push
cmpsb
in
fmuls
jae
mov
loopne
sub
mov
xor
sub
mul
fcomip
inc
scas
push
pushf
push
add
addr16
repz
jne
mov
gs
and
cmpl
out
jae
lahf
cmpl
out
mov
in
mov
pop
aaa
in
out
mov
mov
int
and
push
cltd
leave
in
push
pop
pop
cmp
mov
pop
inc
ret
or
out
sbb
ljmp
push
cmpsl
sahf
rorb
ja
dec
inc
cltd
lods
out
lcall
iret
dec
sub
ret
pop
mov
and
into
xchg
pop
cmp
mov
adc
std
jbe
cwtl
or
or
pop
mov
testl
push
aaa
xchg
repz
xlat
ds
in
and
test
dec
mov
sbb
mov
mov
ficoml
push
outsb
pop
push
sbb
lret
xchg
pusha
mov
inc
scas
outsl
push
mov
xchg
popa
cmp
cmpsb
mov
lahf
mov
mov
mov
pushl
pushf
xchg
cmp
sbb
movsb
sub
xchg
dec
cmpsb
jmp
xor
inc
xchg
int3
call
xchg
mov
lret
pop
jns
les
dec
xchg
es
xchg
mov
jo
adc
jle
lds
pusha
jbe
and
jge
jl
mov
push
insb
aad
aad
xor
les
in
lret
mov
popf
ja
or
iret
ret
insl
enter
add
mov
ds
inc
jne
in
fildl
cltd
or
or
iret
lea
cltd
and
dec
ds
vunpcklps
popa
mov
out
xchg
mov
lret
lret
add
lahf
test
arpl
loop
gs
cli
add
mov
sbb
mov
call
jnp
loop
cmp
xchg
lret
enter
mov
or
test
jp
jne
push
pop
das
mov
jbe
mov
mov
loope
scas
add
jbe,pt
stos
dec
fmull
xor
sub
or
clc
je
pusha
pushf
call
and
fucomp
adc
dec
adc
cmc
xchg
pop
sti
mov
mov
loope
out
pop
fbld
das
test
inc
ficoms
je
cmpsb
xchg
ret
ret
je
inc
aad
or
cmp
pop
pushf
ret
mov
repnz
sbb
sbb
adc
call
cmp
ficomps
jmp
repnz
dec
jge
dec
loop
mov
mov
shrb
push
cmc
call
jne
fwait
mov
lret
test
cmp
std
mov
cs
fldenv
imul
fnstcw
fcomip
jo
pop
sub
xor
aas
ja
sbb
cmp
imul
add
data16
out
sub
sahf
ret
inc
xchg
xor
mov
cmp
mov
pop
inc
ds
jb
cld
adc
dec
push
xchg
ja
mov
jecxz
pop
lods
xlat
cld
stos
inc
mov
sbb
sbb
xor
loopne
movb
daa
xchg
jp
pop
mov
inc
sahf
lods
push
pop
bound
clc
shlb
pop
sarl
cmp
push
cmpsb
into
dec
adc
inc
cmp
in
push
xchg
sar
xor
mov
jne
pop
outsb
out
or
inc
xor
cmp
mov
clc
stos
inc
and
test
inc
add
addb
xor
xor
mov
mov
adcb
lods
fninit
lret
arpl
dec
gs
clc
or
es
push
push
cmpsb
cmp
add
jns
jb
jno
aam
out
and
mov
mov
ljmp
dec
std
cltd
int
fcoml
jl
mov
sub
dec
imul
and
pop
xchg
pop
push
cmp
adc
push
dec
and
mov
push
addr16
loope
scas
jnp
xor
ret
mov
jge
pop
loope
test
cli
push
enter
icebp
into
and
leave
ret
and
mov
pop
jge
arpl
sbb
and
out
or
or
xor
jmp
dec
daa
loope
or
rcr
xchg
ja
nop
sbb
push
inc
xchg
sub
xchg
aas
add
sub
lods
cmp
in
jb
xorl
jb
pop
aad
mov
lret
mov
or
pop
xlat
mov
ds
sbb
mov
mov
pop
mov
test
push
aad
cmp
adc
and
xchg
mov
es
jno
jno
cli
ret
mov
in
test
jb
add
jne
push
push
ss
test
cli
dec
shl
pop
cld
lahf
popa
sbb
stos
shll
push
in
in
aad
push
jle
fisttpl
sub
cwtl
jp
loope
dec
xor
stos
inc
xchg
push
mov
test
test
imul
cmp
and
testl
cmp
xor
pop
cmp
cmp
mov
jne
xlat
push
sub
sub
adc
dec
sbb
je
ret
push
mov
mov
stos
inc
mov
js
aad
inc
push
inc
jp
xchg
cmp
fistps
push
xlat
fdiv
push
out
push
insl
pushf
lret
jge
mov
mov
xor
add
in
mov
dec
adc
sub
pop
lahf
addr16
mov
pop
aam
sub
in
push
add
arpl
lret
mov
in
cmp
cmp
andl
jp
inc
lds
lret
mov
mov
adc
xlat
shl
leave
xchg
mov
rcl
xchg
rcrb
inc
mov
addr16
sti
in
xor
cmp
movsb
scas
daa
jno
jo
stc
imul
mov
sub
aad
stos
lea
cmpb
loope
mov
cmpsb
mov
dec
int
aas
notb
fistpl
sti
push
iret
xor
and
cmpsb
arpl
repnz
mov
stos
mov
mov
rcll
outsb
ss
aas
ret
bound
push
jmp
mov
lds
fistl
push
int3
pop
pop
ss
mov
adc
insl
movsb
xchg
outsb
pop
dec
add
sar
sub
lcall
or
xchg
gs
movsl
jp
push
jmp
test
pop
and
pusha
pop
mov
popf
xlat
lock
push
pop
jns
test
inc
shrb
and
ja
fimuls
or
xchg
outsb
gs
pushl
stc
push
fisttps
filds
test
arpl
loopne
je
repz
mov
push
ret
loope
jmp
sahf
loopne
mov
addr16
fsubrp
insb
icebp
cld
stc
mov
call
sahf
xchg
sub
xor
shr
mov
nop
pop
out
xor
sbbl
insb
fdiv
ljmp
sub
jg
inc
lods
and
push
ret
and
and
push
sahf
lds
les
xor
daa
and
adc
pushf
adc
and
jp
cli
insl
inc
in
pushf
jae
aad
jnp
mov
lret
pusha
xchg
jmp
lods
test
cs
push
idivb
inc
mov
pop
test
pop
fwait
mov
jge
mov
pop
dec
jp
das
cwtl
push
icebp
subl
inc
into
or
cmp
hlt
jle
addr16
xchg
sub
shrl
fstp
sbb
or
mov
pop
pop
push
repnz
repnz
adc
xchg
push
xlat
stc
cmp
movsl
sbb
or
ret
push
jmpw
sbb
mov
enter
clc
pop
sub
cmpsb
nop
mov
inc
aad
and
or
xor
pop
sbb
pop
addl
loope
loope
stos
sbb
lahf
add
inc
mov
jp
cli
aas
mov
sahf
mov
adc
sub
cli
aas
fcomp
stos
mov
fnstsw
sbb
loop
outsl
and
bound
pop
mov
lret
add
addb
iret
pop
stc
lock
pop
push
insl
jno
pusha
cwtl
stos
das
pop
in
jbe
jle
or
xor
shll
pop
cmp
or
outsb
popf
mov
mov
cli
and
inc
inc
jle
call
xchg
outsb
add
in
jmp
pop
rcll
fnstenv
xor
int
loopne
xlat
lahf
or
pop
or
lods
adc
mov
fimuls
xchg
inc
jmp
jns
sbb
add
scas
pop
nop
sub
in
nop
or
fstps
push
test
mov
xchg
add
sbb
cmp
rcrl
into
gs
xor
fbld
and
and
adc
xchg
negb
push
push
test
imul
das
jbe
pushf
push
mov
fimull
out
repz
xchg
hlt
loopne
lea
inc
arpl
lock
pushf
adc
gs
mov
pop
rcrb
xchg
dec
cmp
nop
xchg
outsl
out
xchg
bndldx
cltd
dec
jge
xchg
jno
imul
xor
pop
sub
jge
es
xor
xor
lret
mov
ss
sbbb
call
call
stos
xor
jb
sub
xchg
jno
int3
data16
push
cmp
jg
mov
xor
push
call
jg
bound
insb
stos
adc
sub
or
adc
cmc
fdivrs
inc
jne
ss
ljmp
in
mov
push
dec
int
push
shlb
into
mov
pop
pop
or
mov
and
mov
out
rcll
sbb
ror
push
inc
add
dec
push
int
push
pop
int3
pop
lahf
div
mov
neg
pusha
outsb
out
and
test
mov
arpl
test
mov
pop
push
dec
pusha
and
stos
loopne
dec
shll
add
lcall
shl
inc
pop
enter
pop
mov
xchg
test
jbe
pop
out
lds
fwait
dec
and
xchg
or
dec
mov
lret
mov
cmp
test
scas
sti
icebp
in
ret
sbb
inc
push
addr16
cmp
and
mov
stos
fmull
aas
gs
js
iret
cmp
lahf
mov
movsb
icebp
hlt
sub
stos
mov
pop
into
cltd
bound
gs
aaa
jle
cmp
out
fwait
xchg
jp
jecxz
imul
dec
cmpb
int
and
or
add
popf
pop
test
xchg
xchg
fisttpl
mov
jmp
stos
jl
data16
jne
xlat
imul
stc
stc
jno
xchg
cmp
mov
inc
ret
sub
inc
gs
jp
pop
pop
mov
cwtl
or
mov
or
stc
negl
shll
enter
cltd
cs
adc
daa
fstl
cmp
dec
lods
or
xchg
dec
aas
insl
pop
mov
pop
mov
popa
pop
mov
testb
in
loopne
fcompl
nop
ficoms
std
and
insl
aas
notl
je
mov
scas
test
cmp
xor
rolb
cmpsb
mov
gs
leave
sub
xchg
sti
and
mov
movsl
les
xchg
orb
lret
aaa
repz
mov
mov
push
aas
lds
or
xchg
jecxz
jo
dec
dec
cmpl
adc
shl
insb
jns
mov
loopne
and
stos
test
xchg
je
mov
sub
cmpl
push
jg
call
push
mov
lock
pop
fsubrl
aas
push
mov
adc
loop,pn
lret
jle
adc
jle
idivb
sbb
popf
push
jle
push
xchg
fnsave
push
mov
cmpsb
lock
inc
inc
jl
iret
aad
push
mov
jb
xchg
dec
sub
add
mov
adc
mov
mov
sahf
xchg
pop
dec
sti
mov
mov
fs
or
jp
sub
lret
bound
or
js
mov
out
roll
fiaddl
xor
cmp
adc
outsb
popf
inc
in
push
jmp
cmp
cmpsb
repnz
cmc
inc
push
sarl
popf
call
sub
cmpsb
inc
leave
inc
ljmp
mov
andl
and
repnz
pusha
pop
mov
pop
int3
into
add
push
movl
and
insl
je
dec
and
and
dec
sbbl
dec
inc
jmp
loope
jbe
push
xchg
fwait
cld
or
lret
addl
cmp
sub
or
ja
subl
stos
jae
or
pop
test
add
pop
xor
ror
lock
fadds
into
data16
jbe
lods
and
xchg
stos
pusha
cltd
dec
adc
out
movsl
jle
mov
into
mov
push
mov
mov
mov
js
repz
push
cmpsl
mov
pop
fistps
adc
das
xchg
cld
lods
mov
push
roll
sub
xor
or
sub
mov
insl
push
jns
iret
dec
daa
xchg
sbb
das
push
mov
jge
xor
mov
test
mov
repz
push
push
lea
out
add
push
das
fwait
mov
sbbl
jbe
into
inc
cld
bound
loope
pop
int3
sub
insb
lods
adc
sbb
inc
jae
imul
fistpl
scas
inc
mov
and
test
push
mov
mov
adc
data16
ss
out
lock
rolb
insl
aad
adc
je
mov
jge
gs
pop
mov
inc
and
jmp
push
subb
jp
scas
pop
fstl
loope
clc
mov
rorb
jo
sub
loope
jae
imul
data16
mov
fdivr
jbe
je
sub
xchg
and
pop
rolb
inc
aam
sbbb
imull
leave
in
dec
adc
sar
xlat
iret
int3
add
stos
arpl
jg
movups
or
sbb
dec
mov
and
lcall
mov
cmp
dec
push
inc
xchg
addb
popf
in
jp
out
out
je
or
jae
lcall
scas
dec
adc
in
jl
jo
jo
jl
cs
dec
sarb
push
je
inc
mull
fiaddl
sbb
inc
in
cli
mov
in
mov
xor
sub
add
push
mov
cmp
mov
pop
add
ljmp
pop
mov
xchg
outsb
mov
sub
cmpsl
inc
add
ja
es
inc
mov
ret
jo
test
pop
dec
jb
rorb
ss
out
xlat
push
into
or
sbbb
dec
js
adc
sub
mov
clc
fisubl
enter
out
xor
adc
pop
mov
addr16
fcmovbe
push
in
icebp
sti
mov
lock
fiadds
add
dec
in
das
lahf
fmul
xchg
js
in
loope
adc
adc
rclb
inc
leave
std
cmp
stos
dec
pop
cmc
sub
lcall
fyl2x
nop
movsl
outsl
cmp
or
fnstenv
sahf
push
adc
push
aas
cmp
sbb
pushf
outsl
add
lea
dec
push
addb
xor
fs
popf
enter
inc
pop
mulb
stos
test
xor
jmp
sub
out
orl
stc
mul
repz
sub
cmp
xchg
pop
das
orb
cmc
test
mov
or
or
out
rolb
outsl
mov
push
fistpll
mov
leave
loop
jbe,pn
xlat
imul
add
cmp
cli
push
test
cwtl
sbb
jmp
mov
fistps
fwait
ret
fcompl
ljmp
push
sub
jae
push
mov
or
js
sbb
fists
add
lods
mov
cmp
adc
jmp
mov
xchg
jl
lret
loope
or
div
hlt
pop
inc
xor
mov
sahf
cwtl
pop
push
push
flds
mov
pop
jnp
dec
clc
ja
pop
lcall
lahf
lds
popf
or
lcall
push
nop
pop
outsb
adc
mov
push
inc
jno
mov
mov
lock
adc
xor
cmp
mov
in
mov
pop
sarl
ljmp
add
pop
pop
outsb
cltd
jge
std
mov
or
daa
leave
mov
sbb
rclb
ja
sarb
xchg
lret
jbe
inc
dec
je
dec
or
inc
add
mov
out
pop
add
xor
cmp
mov
test
lock
bound
add
loope
lret
pushf
mov
xchg
dec
mov
dec
jg
jnp
rclb
push
sbb
xchg
movsl
jp
int3
adcl
cltd
pop
pop
adcb
mov
repz
jb
cld
lcall
mov
mov
mov
jno
adc
stos
fimull
xchg
or
data16
lock
inc
adcl
outsl
js
or
fs
das
sti
push
dec
mov
mov
test
psraw
mov
and
xor
mov
push
mov
cs
mov
loopne
fimull
push
test
and
xchg
adc
mov
loopne
mov
pop
sub
xor
jle
xor
ss
dec
xchg
xchg
clc
or
lahf
xchg
sub
or
in
ret
pop
pop
push
mov
mov
pop
sbb
roll
xchg
cmpsl
xchg
push
push
das
mov
js
loope
mov
nop
add
sahf
das
nop
gs
push
mov
pop
xor
or
pop
fwait
cld
adc
push
scas
add
add
mov
push
pop
cmc
jbe
repnz
stos
inc
dec
pop
cmp
pop
rolb
sbb
shll
dec
fcoms
lret
lods
je
popa
mov
shrl
mov
out
sahf
xchg
add
movsl
stos
test
xchg
sbb
lock
paddq
add
repz
pop
lcall
in
pop
leave
and
in
scas
pop
mov
test
cmc
out
imul
ja
loopne
or
xor
inc
scas
sbb
sarl
mov
push
jmp
cli
inc
aas
xor
ret
hlt
or
sti
push
fstpt
push
jp
mov
mov
mov
stos
or
out
out
push
add
arpl
ret
push
nop
mov
inc
fistps
jnp
and
adc
and
imul
sub
inc
push
dec
js
jns
xorl
sub
leave
pusha
inc
stos
sti
pushf
lods
rcrb
xor
cmp
or
adc
and
add
lods
pop
xor
outsl
cmp
call
ret
popf
sarb
aad
out
aad
sub
mov
ss
and
addl
sbb
mov
jne
stos
aam
orl
push
test
scas
mov
into
dec
push
shl
outsl
ret
mov
loop
sahf
aas
out
lcall
insb
ficomps
and
dec
push
pop
xlat
jg
popa
ficomps
lahf
aad
push
mov
sub
sahf
sbb
sti
mov
or
iret
jp
add
lahf
rcrb
gs
or
inc
mov
pushf
loop
inc
mov
push
inc
pop
pop
cwtl
pop
cwtl
and
xor
fiadds
add
aam
xor
inc
loopne
aas
cmp
xlat
push
or
cs
out
push
int
push
iret
scas
mov
adc
pop
jnp
sub
cmc
aam
push
push
xchg
in
push
add
ljmp
xchg
and
sbb
mov
lock
sub
mov
stos
add
roll
dec
push
loop
das
ds
cmc
scas
sbb
sbb
inc
jnp
xor
pop
stc
cmp
mov
sbbb
jmp
push
mov
mov
inc
fsubrl
adc
jbe
sub
jo
push
fstl
cmp
lcall
jae
aam
ljmp
mov
mov
push
jmp
sub
pop
or
addr16
gs
mov
push
xchg
aaa
lcall
cld
jno
jg
add
jbe
sbbl
inc
xchg
js
int3
push
pop
cmp
gs
sub
inc
push
add
adc
fimull
notl
push
sahf
cmp
gs
pop
cli
ljmp
inc
and
in
mov
inc
hlt
cwtl
mov
imul
or
hlt
and
xchg
int
mov
jns
aam
nop
add
pop
lea
mov
dec
adc
sub
push
loope
jbe
aas
rcl
jbe
leave
xchg
cmpsb
mov
mov
inc
fisubl
pop
imul
hlt
lahf
adc
inc
faddl
push
mov
fildll
das
hlt
idivl
es
fidivs
mov
les
push
insl
imul
cs
fstl
out
jp
cmp
jge
stos
xor
insb
inc
xlat
leave
insl
mov
inc
dec
cmp
arpl
mov
xlat
mov
ds
lds
and
loope
sbb
mov
icebp
loopne
xor
das
push
jae
xchg
mov
xchg
pop
imul
sahf
xor
adc
push
mov
orb
movsl
out
pop
lock
movsl
mov
ja
es
std
and
je
mov
in
add
fimull
dec
sbb
das
je
add
jae
into
or
rcrb
adc
fisubl
call
inc
cld
mov
fdivrl
mov
lock
mov
scas
adc
sub
xor
aad
lret
adc
sti
xchg
les
rcrl
repnz
or
pop
sub
inc
stos
aam
sahf
cmp
mov
test
mov
xor
adc
mov
mov
xlat
popa
jae
ret
bound
out
pop
in
xchg
repz
gs
and
shrb
cmpxchg
push
add
mov
int
xlat
insb
cli
adc
ss
cmc
add
xchg
xchg
mov
fnstsw
jae
mov
push
cld
sbb
fwait
dec
xor
test
sub
fcom
fldl
mov
dec
sbb
scas
addr16
sti
push
daa
mov
jnp
jns
mov
sbbl
adc
sub
es
cld
mov
fsubr
xchg
mov
mov
nop
cli
mov
pop
cmp
hlt
ljmp
mov
pop
adc
mov
or
pop
and
aaa
aad
push
mov
cmp
dec
and
ror
fisttpl
jle
inc
sbb
mov
lods
xchg
lds
dec
rcl
aas
mov
mov
lods
hlt
fsubr
jo
les
add
mov
mov
out
cmpsb
add
dec
je
sbb
lret
xchg
push
stc
sub
pop
xchg
lock
dec
lret
loope
sbbl
mov
clc
sbb
mov
jb
lret
rclb
xor
sbb
xlat
dec
or
sub
ss
pop
jbe
sbb
cmp
push
mov
fs
mov
add
inc
clc
xchg
push
jno
fdivrs
imul
add
test
icebp
dec
ja
xor
lods
mov
mov
jo
and
cmp
and
inc
andl
inc
pop
inc
sub
xorb
andl
and
js
fnstsw
jb
inc
mov
ret
lcall
rcr
fidivs
mov
and
sar
fadds
sub
dec
xor
imul
call
mov
das
xor
loop
fidivl
push
mov
pop
stc
mov
xchg
lret
jae
sub
cmp
les
outsb
and
push
je
fsubrp
jno
pop
ror
dec
imul
lahf
pop
into
xor
sub
movsl
add
lods
mov
ret
mov
xchg
mov
stos
add
mov
push
imul
push
push
lahf
cmp
mov
insb
lds
pushf
lock
call
sbb
cmpl
sbb
rcll
fisttpll
adc
adc
lahf
stos
dec
adc
sahf
jns
lea
aaa
mov
xor
pop
xchg
jo
dec
cmp
jnp
jl
adc
ror
imul
and
cmp
inc
adc
mov
inc
stos
shll
in
loope
jp
push
rolb
pop
sbb
pop
imulb
int
idivl
jmp
in
je
rcrl
push
inc
or
cld
popf
lret
mov
sub
adc
mov
xchg
pop
out
xor
inc
push
sarb
jmp
and
cs
or
ds
cltd
cmpsb
sbb
ficompl
xor
or
test
loopne
je
xchg
adc
jne
addl
mov
jge
mov
inc
leave
and
ss
sti
jle
imul
sub
cs
stos
je
fwait
push
arpl
add
xchg
push
inc
loopne
test
adc
cmp
iret
xor
stos
lcall
sahf
or
or
xor
jo
push
or
or
int
push
and
cld
push
xor
clc
stos
or
test
rorl
jne
jbe
mov
dec
cmp
xor
jno
sbb
sbb
or
cmpsl
inc
sti
popf
imul
pop
fadd
nop
jg
dec
jno
addr16
xchg
pushf
sarb
jp
ffreep
push
push
hlt
imul
jle
add
loope
xchg
cmp
bound
push
in
cmp
cltd
addb
scas
jae
test
xchg
mov
push
sahf
cmp
push
xor
dec
pop
lds
sti
les
xor
scas
mov
mov
jmp
inc
adc
int3
popa
mov
dec
xor
mov
inc
mov
push
cli
andl
and
push
mov
sti
jge
push
cmpsb
mov
movsb
sub
jne
negl
in
test
dec
push
fcoms
jb
fldt
add
dec
mov
insl
int
js
jno
ficoml
lods
popa
outsl
test
mov
xchg
cmp
lret
mov
push
pop
sub
pop
mov
inc
in
sub
loopne
inc
lea
sub
lahf
int
lahf
das
rorl
dec
pop
adc
push
jle
movb
and
lret
xchg
adc
test
popa
xor
dec
movsb
push
adc
outsb
aad
fdivrl
xchg
loop
lea
imul
add
in
xchg
jmp
push
mov
push
out
xor
add
jl
lds
call
test
and
lcall
push
insl
ja
inc
or
push
faddl
movsl
xlat
lret
mov
test
mov
shr
and
or
jne
data16
out
cmp
and
xor
inc
jns
imul
mov
mov
push
imul
jmp
adc
js
sub
mov
movsl
mov
sti
outsb
push
mov
inc
xchg
cmp
dec
pop
jns
daa
out
popf
sub
push
pop
xor
shll
outsl
mov
popa
cmp
xchg
dec
arpl
dec
add
or
lock
popf
popf
mov
test
adc
jbe
divl
xor
push
cmp
je
loop
repnz
repz
imul
or
push
or
test
mov
test
ljmp
jne
repz
std
es
push
fmulp
mov
popa
lds
push
lret
or
xor
xchg
in
sbb
stc
addr16
or
shr
enterw
jmp
mov
xor
sbb
xchg
push
mov
jmp
ja
sub
jbe
xchg
cmp
mov
mov
aam
je
aam
jae
test
addr16
jne
xor
cmpl
in
jp
test
xchg
and
mov
jno
flds
mov
add
push
mov
pop
or
ljmp
imul
cltd
lahf
data16
jne
lods
mov
ret
sahf
inc
notl
loope
adc
subl
mov
add
push
pusha
cmp
repz
les
xchg
adc
aaa
inc
sbb
xchg
push
shl
adc
xor
or
push
popf
sti
iret
scas
adc
jo
outsb
inc
enter
mov
mov
adc
test
mov
cltd
insb
mov
ret
jbe
inc
sbb
push
sarb
cld
mov
fiaddl
out
in
pusha
fcmovb
andb
push
jge
xlat
jnp
fbstp
xchg
enter
jl
filds
or
incb
pslld
mov
pop
sub
push
lods
stos
push
cmp
in
shlw
xlat
jmp
adc
xchg
fisubrl
sub
xchg
les
xchg
ret
mov
test
cmp
ret
je
push
lods
xchg
add
test
inc
daa
gs
cli
in
fwait
jmp
outsl
rorb
xchg
insb
xchg
outsl
inc
leave
cmpl
add
sbb
fstps
sbb
adc
add
add
mov
and
aad
imul
retw
dec
mov
inc
cmpsl
inc
imul
int
adc
ds
ficoml
mov
shrb
decl
push
mov
mov
in
push
sub
add
add
sub
sub
pop
pusha
or
nop
inc
test
push
cmp
dec
inc
push
xor
out
sahf
sti
pop
daa
sbb
lret
test
clc
jmp
xchg
repz
dec
fnstsw
out
ss
int3
lret
xchg
cmp
push
nop
aad
lea
sar
gs
cltd
icebp
dec
movsl
std
xor
roll
test
pop
xchg
cwtl
in
sub
mov
mov
cmp
jmp
enter
xorb
rcll
jecxz
sbb
inc
inc
es
mov
sbb
pop
mov
lds
int
aas
test
ljmp
cmp
aas
mov
sbb
adc
enter
pop
fs
clc
mov
cmpsl
lock
mov
push
arpl
dec
inc
subl
inc
inc
in
xor
shrb
ja
mov
xchg
mov
mov
icebp
or
mov
sub
das
js
es
sarb
mov
mov
xchg
arpl
adc
pop
fdivr
inc
jns
sub
jmp
lret
sbb
add
adc
fmul
pop
ret
mov
in
aam
lret
scas
xor
add
adc
inc
ss
shlb
roll
mov
pushf
iret
pop
sti
daa
push
add
dec
pop
xchg
jmp
jge
push
js
sbb
xor
into
stos
ja
adc
pop
jo
add
pop
fnsave
mov
aad
fs
sub
jg
sbb
sbb
or
rclb
xchg
ja
addb
sub
inc
sti
jl
mov
xchg
daa
call
les
pop
sbb
dec
bound
pop
fptan
push
test
movsb
loopne
fadd
lods
in
psrlq
add
and
js
dec
fcmovb
loop
xchg
repnz
test
test
sbb
xchg
mov
loope
mov
push
pop
gs
daa
mov
mov
mov
movsb
mov
add
pop
loop
mov
rclb
pop
jmp
bound
push
push
sub
dec
and
mov
pushf
sbb
aas
sbb
lods
lds
pop
inc
repz
fisubs
and
and
sbb
movsb
sbb
fistpl
clc
adc
xorl
cmp
loop
icebp
mov
lret
popf
mov
std
int
xor
sub
les
sarb
xchg
mov
xchg
xchg
imul
cmp
jns
pop
jecxz
cmpl
fmul
sbb
leave
sbb
iret
pushf
jne
add
sub
inc
mov
mov
add
dec
fs
push
std
loopne
outsb
mov
push
xor
loopne
push
xchg
lret
dec
pop
xor
push
xchg
pop
inc
hlt
mov
mov
add
xchg
jmp
int
cmp
int3
cmc
mov
lock
movsl
fisubs
cmpl
fiaddl
mov
add
dec
cltd
dec
adc
jne
mov
mov
test
hlt
outsl
add
xchg
je
inc
lods
in
jge
nop
aas
jl
pop
scas
sub
add
jbe
popw
jge
xchg
adc
xchg
frstor
jl
lods
push
sub
mov
pop
jecxz
jbe
aas
jo
cmpl
lea
out
test
jnp
adc
adc
fs
jg
in
ffree
adc
mov
pop
push
lods
fs
insb
cmp
loop
push
sbb
pop
mov
adc
test
mov
mov
dec
sub
add
adcl
mov
dec
mov
jge
test
out
push
outsl
pop
lods
dec
test
orl
cli
adc
pop
out
pop
js
adc
adc
cltd
add
mov
movsl
fyl2x
lahf
ret
sbb
pop
jg
adc
imul
xor
lds
and
xorl
push
orl
imul
lret
cltd
adc
inc
das
mov
and
dec
adc
loopne
andb
out
pop
jno
sub
lret
loop
insl
ficomps
iret
fnsave
lret
iret
and
jae
add
and
cmp
mov
xchg
outsl
dec
lods
xor
pop
push
adc
stc
lods
sbbb
mov
iret
lret
pop
push
inc
xchg
mov
jnp
sbb
adc
push
fcomps
leave
add
mov
popa
int3
jg
arpl
mov
and
pop
ds
dec
jns
lock
or
pusha
jo
mov
int3
and
nop
in
push
shlb
pop
xor
pop
sti
xbegin
cmc
pop
int
sbb
push
inc
push
add
adc
sub
sarl
lcall
iret
addb
jo
stc
stc
cmp
mov
sbb
cli
ret
les
xchg
push
or
sub
mov
push
cli
shl
ret
fwait
ror
xchg
ror
sub
mov
cmp
lods
lcall
inc
adc
cmc
push
loopne
cmp
fdivrp
jno
sbb
out
cmp
add
std
adc
pop
cli
out
aas
test
in
lds
mov
adc
jp
into
xor
mov
lahf
jge
inc
cmpsl
stos
into
push
loopne
icebp
adc
cmp
sub
inc
mov
outsl
fisubrs
cmp
xor
push
rcrb
adc
hlt
lea
sbb
jl
jl
loope
cltd
pop
ds
xchg
addr16
shll
push
in
jno
out
movsl
lret
repz
sbbl
mov
outsl
inc
fsubrs
inc
cmp
jg
test
jne
popf
xchg
call
fsubl
outsb
in
jmp
jge
lods
daa
test
es
outsb
push
test
int3
xchg
test
sbb
or
adc
lahf
popa
movsb
lds
adc
leave
adc
leave
push
pop
adc
jbe
aaa
ret
pop
fsubr
cs
pop
jae
rorb
pop
pushf
or
and
hlt
mov
and
push
mov
stos
sub
mov
sahf
ljmp
xor
loope
sbb
cli
push
adc
fld1
fs
pop
sbb
jecxz
jb
pop
push
xchg
mull
sub
push
lcall
dec
sar
cltd
negb
xchg
dec
xor
adc
pop
and
shrl
xchg
xor
sbb
test
xchg
fldenv
xchg
repnz
pop
jg
and
clc
sbb
xor
addr16
dec
mov
or
xorl
mov
cs
xchg
jge
gs
xor
add
scas
orb
aaa
add
mov
fistps
jne
jmp
iret
addl
and
mov
pop
stc
stc
pop
cmp
fs
loope
subb
sbb
jns
mov
inc
xchg
xchg
cmp
sbb
nop
lcall
inc
cwtl
shl
popf
mov
dec
mov
repnz
mov
mov
aaa
scas
xchg
cmp
aam
mov
fistps
outsl
pushf
inc
inc
ds
push
xlat
sub
xchg
jo
ja
dec
nop
into
out
jp
out
je
dec
adc
or
cli
outsl
rcl
sub
xchg
lahf
in
mov
jnp
dec
pushw
lods
pop
pop
dec
loopne
and
and
stos
popa
add
adc
or
clc
cmp
push
push
push
cwtl
iret
int3
mov
out
lea
popa
popa
ss
adc
sarb
in
imul
cltd
inc
lods
lcall
jmp
outsl
pop
xor
orb
jmp
fistps
les
popa
push
adc
lods
xlat
movsb
mov
cmp
jmp
xchg
and
dec
or
jae
test
mov
aaa
push
int3
lret
lahf
mov
in
fcoms
mov
pop
inc
fld1
cli
aam
dec
jp
xor
movsl
in
fdivl
scas
dec
repz
decb
jecxz
push
ret
aas
scas
aas
call
cmpb
out
lea
jne
cmp
sub
push
pop
ja
cmp
lods
sbb
sub
fdivs
pop
rorb
cmp
jbe
push
fstps
cwtl
stos
fists
jae
pop
inc
cmp
or
mov
outsl
aam
and
cwtl
out
lods
in
push
xlat
sti
loopne
ss
push
scas
sub
inc
fstpl
inc
jge
pusha
mov
cmpsl
ss
sub
mov
or
scas
or
cmpl
popf
or
lods
push
jle
outsb
lea
into
mov
and
ret
add
imul
push
cltd
out
push
lods
outsb
xor
dec
mov
ds
popa
fistl
xchg
push
pop
int3
inc
popf
jnp
push
cmp
fbstp
dec
ljmp
aad
rcll
mov
dec
mulps
daa
xchg
testb
sahf
dec
ljmp
dec
loopne
pop
fs
sahf
and
adc
mov
icebp
sahf
fnstcw
movsl
sbbb
leave
in
pop
lock
scas
mov
insl
xorb
ljmp
insb
fildl
and
xorb
push
mov
jecxz
gs
in
jecxz
jns
cmp
stc
xchg
inc
jecxz
js
or
add
mov
sub
pop
cmp
or
adc
pop
pop
fucomp
push
jmp
clc
mov
loop
fdiv
arpl
cmp
add
sahf
inc
cmp
jno
sarl
sub
lret
mov
mov
push
sub
push
inc
addl
inc
adc
repnz
icebp
scas
mov
in
mov
and
jb
lea
sbb
dec
daa
sbb
xchg
rorl
std
cmp
sbb
mov
adc
xlat
sbb
fwait
mov
cli
push
xor
jno
adc
in
sub
dec
mov
push
imul
mov
dec
mov
orb
lcall
jle
nop
cli
daa
pop
jns
stos
pop
fsts
test
int3
mov
shlb
popl
or
dec
test
aad
or
mov
loope
and
jecxz
sub
xor
pop
sub
fbstp
sub
adc
pusha
and
sti
xchg
cltd
lods
push
push
mov
test
xor
jl
or
cs
mov
int
lret
add
adc
movsb
lcall
pop
sub
pop
ret
jecxz
lods
xchg
addb
dec
or
and
jecxz
mov
or
ja
les
adc
dec
cs
insl
pop
mull
jecxz
in
xorb
scas
adc
arpl
xor
out
mov
aad
pop
mov
push
jb
pop
sbb
icebp
pop
arpl
jp
add
aas
repz
pushf
push
push
inc
jnp
popa
pop
aaa
xchg
sbb
stos
test
add
fimuls
ss
add
hlt
jl
mov
pop
lahf
iret
mov
adc
xchg
jbe
mov
leave
and
jnp
in
cmp
fidivl
std
pop
insl
mov
xor
mov
dec
inc
xor
incb
cltd
xor
jne
adc
mov
scas
mov
xchg
push
or
daa
pop
es
mov
rorl
mov
pop
inc
inc
pop
mov
sub
jae
outsl
cmp
out
mov
xchg
pop
ret
shl
in
jecxz
mov
rolb
and
popa
xor
mov
pop
sahf
rorl
mov
loope
fdivp
adc
ret
cmpsb
cwtl
shrl
push
mov
hlt
add
pop
push
mov
push
ficoml
movsl
shr
push
stos
repz
insb
adc
cmp
mov
push
push
aad
sub
dec
mov
dec
arpl
popf
mov
mull
sti
mov
icebp
mov
jl
inc
jbe
aas
mov
aaa
test
lea
xor
stc
dec
lahf
andb
mov
adc
js
lock
out
add
loopne
scas
cwtl
pop
mov
jno
mov
sub
xchg
adc
push
jmp
mov
movsb
sub
les
mov
push
add
lret
dec
dec
add
sti
dec
dec
jl
mov
mov
pusha
popa
push
xchg
test
arpl
nop
xchg
pop
jno
out
cli
sbb
sbb
and
and
jo
adc
enter
and
push
sarl
mov
xor
adc
pop
daa
vaddsd
fisttps
cmp
xchg
ret
jno
jmp
decb
aaa
push
sbb
shrb
ss
rcrl
sub
pop
je
idivb
inc
js
call
push
cmpsb
or
outsb
mov
xchg
pushl
xchg
mov
adc
push
hlt
dec
mov
out
lcall
mov
lret
icebp
add
ja
lcall
cmp
and
inc
shr
imul
adc
fldl
push
push
and
mov
fs
inc
xor
outsl
stos
fimull
pop
dec
adc
scas
scas
push
or
ret
add
cld
xchg
out
loop
aaa
or
aas
sbb
jbe
inc
dec
or
in
notb
push
shl
stos
push
shr
push
cmp
jmp
sbb
inc
xchg
pop
stos
jo
mov
or
or
sbb
xor
shlb
xor
mov
gs
jp
jne
cmp
xchg
mov
movsb
lahf
and
fstpl
mov
outsl
pop
imul
mov
xor
rcl
dec
out
lds
lahf
pusha
test
movsb
add
fwait
scas
push
cmpsl
mov
call
pop
jo
push
into
jo
mov
xchg
adc
ss
sbb
cmp
test
sub
adc
add
cs
sahf
push
cmpsb
lea
mov
lahf
add
jecxz
sar
mov
cmp
mov
cmp
pop
test
push
lods
inc
scas
stos
jecxz
jl
aad
stos
mov
and
and
mov
dec
mov
ja
mov
xor
mov
mov
stos
icebp
das
int
sub
pop
dec
dec
mov
scas
push
or
inc
dec
lahf
mov
inc
and
push
fnstsw
popaw
dec
stos
in
pusha
fistps
adcl
jecxz
scas
cmp
inc
xchg
rcrl
push
lret
roll
xorl
stos
imul
fsubrl
mov
mov
or
shll
inc
xchg
cli
mov
imul
dec
jnp
dec
fldcw
xor
cmp
mov
jmp
pop
nop
bound
mov
xor
negb
sahf
loop
stc
mov
jno
faddl
out
ja
clc
jmp
pop
or
ret
or
and
jp
loope
push
push
jb
pop
jle
mov
sbb
stc
test
jmp
in
sub
cwtl
adc
jecxz
sbb
je
aaa
cmpb
lods
stos
call
push
push
ds
fisttpll
imulb
pop
pop
stos
sbb
loopne
jns
je
sbb
xchg
jbe
es
cmp
lret
stos
pop
inc
mov
inc
xor
or
jle
sbb
adc
rsqrtps
dec
into
inc
call
mov
test
xor
pop
mov
mov
jp
push
aaa
sbb
pop
adc
lds
pushf
xchg
out
add
mov
cmp
fldt
xchg
mov
cs
clc
or
fsubl
out
pop
mov
inc
sti
jp
lods
inc
push
fwait
into
adc
jo
pop
cmp
push
xlat
mov
and
xchg
std
jl
into
ja
insl
mov
ficomps
shlb
cmpsl
aam
fistl
outsl
loopne
ja
cmpsb
push
jo
pop
in
jae
mov
fwait
adc
lock
mov
jp
sbb
cli
mov
fucomi
outsl
mov
dec
and
cmp
cmp
int
or
dec
test
loopne
jnp
popa
out
daa
loope
sbb
icebp
mov
adc
fwait
ret
add
scas
daa
out
das
push
mov
fcompl
leave
stos
sub
jae
std
sbb
cmpsl
cmp
mov
mov
pop
lock
jne
pop
push
dec
or
daa
lods
cmp
in
in
add
mov
add
or
adc
fdivrs
adc
outsl
push
cmp
push
dec
add
ret
out
outsl
jecxz
hlt
push
jl
pushf
das
mov
add
fsubrs
mov
aas
mov
mov
test
adc
push
add
sahf
sbb
or
ljmp
inc
outsl
cltd
in
addr16
leave
xchg
into
dec
ret
adc
idivb
leave
loopne
ret
push
push
aaa
cmp
inc
jle
push
push
mov
dec
mov
les
sbb
outsb
pop
enter
adc
sbb
jg
fst
inc
adc
cmp
mov
imul
pop
mov
sbb
lcall
ja
mov
jmp
mov
fcmove
incl
test
dec
je
pop
insl
jle
in
aas
sbb
sbb
into
lea
neg
jns
clc
cmp
cmp
mov
addb
into
sub
popl
inc
rcl
loope
or
sbb
jne
imul
xchg
adc
mov
in
add
subl
or
cmc
mov
dec
cmc
jle
iret
repz
in
adc
and
in
cld
xchg
in
loopne
add
sbb
ds
or
rcrl
cmpl
cwtl
mov
shrb
sbb
orb
lock
or
xor
movsl
add
mov
scas
or
cmpsb
push
push
pop
in
fists
rcll
xchg
mov
inc
scas
jle
repnz
movsb
add
cmp
dec
lea
cld
lods
mov
pop
data16
mov
int
mov
mov
push
mov
insb
pop
push
jmp
push
sti
xchg
and
loop
jl
test
nop
outsl
cmp
push
push
fldt
pop
inc
out
into
pop
xor
flds
push
xchg
xchg
or
insl
pop
lods
repz
xor
cmp
xchg
pop
test
mov
and
xlat
inc
shr
push
dec
and
aas
ss
inc
loope
and
sub
loope
imul
mov
mov
int3
or
pop
jecxz
lods
adc
je
daa
pop
xchg
cltd
push
cmpsl
enter
inc
adc
pop
rcl
jae
mov
ficoms
mov
das
in
add
dec
and
out
xchg
xchg
xchg
mov
xor
nop
loope
mul
shrb
adc
stos
js
adc
inc
pop
jmp
inc
movsb
xor
sti
idiv
shll
adc
xlat
out
mov
scas
fs
push
inc
mov
repnz
sub
jmp
fxch
sub
push
mov
arpl
sti
in
movsb
mov
sub
divl
push
add
test
clc
xor
loope
lods
rcl
add
in
jmp
inc
loopne
lods
push
imul
sbb
xor
mov
jp
jmp
pop
lods
push
adc
and
test
mov
or
fwait
ljmp
std
inc
ret
hlt
sub
in
xchg
lahf
sbb
lahf
or
fsubs
lea
sbb
pop
adc
call
lods
pop
adc
xchg
xlat
shrb
inc
loop
jbe
test
scas
mov
sub
shll
or
testb
sti
xlat
dec
push
data16
sbb
leave
clc
mov
mov
in
mov
xor
push
stos
in
ret
or
sub
mov
lcall
push
dec
xchg
dec
bound
loopne
cmp
pop
outsb
dec
cld
xchg
stos
xchg
call
pop
add
gs
rorb
fs
adc
mov
pop
and
aam
jge
jg
cmp
and
jg
push
jmp
addr16
int
dec
pop
or
outsb
xchg
out
pop
jno
sub
xor
in
pop
inc
ja
sti
clc
xchg
adc
pushf
add
xor
pop
jb
jns
or
jge
adc
adc
sub
out
shll
repz
adc
jge
lock
xor
pushf
jmp
call
sahf
inc
movsb
dec
cmp
xchg
shlb
pop
xor
jo
adc
sub
popf
test
stc
lods
push
movsl
push
scas
xchg
pop
jge
pop
daa
adc
sarb
mov
rcrl
popa
mov
pop
adc
adc
mov
push
pop
pop
sub
out
hlt
add
push
lea
ret
ss
int
lock
out
sub
mov
xlat
repz
or
out
xchg
cmp
mov
es
xor
and
dec
adc
adc
cmp
add
in
lds
aad
ret
inc
pop
lret
mov
mov
sti
adc
scas
jp
filds
add
jg
fidivrl
mov
mov
fwait
stos
sub
aam
push
roll
and
jne
ds
pop
and
imul
lock
inc
repz
sbb
xor
jo
jl
or
mov
in
push
push
int
dec
or
mov
fnstcw
xor
mov
test
mov
stos
out
add
adc
test
addr16
pop
inc
sbb
xchg
nop
push
rorl
pop
sub
sti
roll
xchg
jb
mov
mov
jbe
jecxz
pusha
jmp
mov
xchg
inc
push
outsb
in
test
push
jp
adc
lds
out
test
sti
inc
pop
adc
aas
mov
fprem
mov
ret
movsb
cmp
test
add
cmp
aad
add
fsubs
push
movsl
adc
push
xor
inc
pop
add
pusha
insl
add
sbb
mov
fildl
sbb
mov
cmp
cmp
in
fisttpll
addr16
mov
int3
pop
xor
leave
push
pop
insl
enter
stos
mov
dec
or
xchg
pop
test
mov
cmpsl
out
inc
out
jo
dec
sub
das
mov
lea
movsl
adcb
pop
insl
adc
in
or
sbb
adc
aam
pop
pop
ret
add
loopne
mov
jno,pn
jmp
adc
js
sarb
rcr
jno
mov
cld
sahf
sahf
out
and
push
test
dec
test
ss
push
pop
inc
push
ficoml
inc
jo
mov
sub
add
std
sub
xchg
dec
mov
xchg
adc
sbb
ds
jp
pop
clc
xchg
inc
cmp
pop
ss
scas
subb
pop
cmc
rol
ret
mov
shr
and
cmp
sahf
les
ljmp
mov
jns
pop
popa
cmpsl
insl
movsl
clc
pop
mov
leave
lods
inc
xlat
mov
push
jp
scas
inc
and
push
add
sub
mulb
or
pop
pop
fldenv
sub
imul
mov
imull
leave
cmp
push
je
test
test
jmp
outsb
mov
dec
cld
push
mov
int
add
xlat
aas
or
sbb
stc
push
push
pop
jno
cld
ss
jb
or
out
movsb
mov
ret
mov
icebp
lods
mov
call
add
fwait
sbb
mov
add
jge
stc
adcl
xchg
into
fucomip
xor
cmp
fisubl
jns
xchg
adc
mov
lods
call
jg
add
stos
std
xchg
movl
in
sub
int3
lds
xor
mov
es
outsb
mov
lcall
mov
outsb
xchg
xchg
mov
dec
test
js
nop
or
mov
and
sub
add
outsl
call
pop
dec
sbb
or
test
mov
cmp
mov
pushf
push
shr
gs
dec
std
ret
mov
ss
inc
sbb
mov
test
incl
and
ja
loop
xchg
out
push
pop
loopne
and
jno
cmp
loopne
divl
in
xor
pop
or
test
aad
adc
fidivl
mov
fs
jno
mov
stos
imul
xchg
adcl
nop
or
cltd
sbb
int3
dec
dec
aam
bound
loope
xchg
push
adc
aam
mov
outsb
add
stos
test
stc
jae
sti
sbb
jl
pop
and
mov
adc
lcall
xchg
cld
push
test
pop
mov
repnz
pop
out
fnstcw
sbb
cmc
dec
mov
mov
iret
xchg
push
clc
pusha
lea
stos
xchg
ja
test
push
in
notb
mov
mov
mov
or
push
mov
fsubrs
clc
into
push
dec
ret
les
dec
xchg
add
les
int3
or
mov
ret
mov
or
cld
or
popf
lds
add
jns
or
xchg
add
and
mov
pop
mov
xor
push
aaa
inc
imull
in
cmp
aad
dec
repz
pop
dec
loop
sbb
adc
outsl
pop
lahf
dec
pop
sub
xchg
lea
push
sbb
and
push
xor
jl
mov
lods
pusha
pop
sub
mov
aas
ret
push
pop
js
in
dec
jl
rol
jg
sbb
push
movswl
mov
les
stos
js
xchg
test
icebp
std
stc
mov
mov
dec
sbb
mov
push
in
mov
add
and
push
mov
andl
add
or
push
pop
push
mov
icebp
jge
pushf
outsb
jecxz
hlt
xchg
sbb
dec
xor
out
fistpll
mov
inc
imul
faddl
xor
or
add
lcall
mov
cmpsl
ljmp
dec
shlb
inc
data16
sarl
jl
xor
in
popa
push
jg
stos
aas
gs
adc
mov
inc
sub
rol
jo
xchg
aas
sti
jns
adc
jne
movb
imul
repz
mov
test
pop
loopne
and
mov
pop
fadd
in
imul
sub
aad
xchg
inc
mov
lods
xor
cmp
shll
jecxz
pop
mov
pop
jb
cld
test
fildl
or
xchg
imul
movb
push
jecxz
sbb
aad
call
ret
mov
lock
jb
xlat
lea
cs
cmp
out
dec
insl
pop
addb
add
jb
add
jbe
mov
xchg
loop
push
mov
or
fistpll
mov
ljmp
pop
cmp
xor
inc
mov
mov
fs
js
lahf
in
cmp
xor
xor
jae
mov
into
and
lret
jnp
sbb
jmp
inc
dec
and
dec
bnd
mov
adc
lret
repnz
or
adc
lds
or
loopne
les
les
jle
bound
ret
and
ret
movd
sbb
sbb
pusha
loop
xchg
aad
cmp
cs
jge
js
test
rolb
push
ret
jle
lcall
call
sub
push
cmpsl
mov
jne
add
sahf
and
jle
mov
or
push
jecxz
dec
repnz
jmp
add
outsb
pop
fadds
popf
jnp
sahf
popa
push
sub
jle
sub
push
and
push
ja
mov
add
and
jbe
fldenv
outsl
sub
push
outsb
jmp
and
cmpsl
cli
lcall
add
mov
xchg
pop
in
daa
push
test
sbb
cld
js
ljmp
lds
mov
mov
cmp
dec
sbb
adc
sub
pop
jmp
lods
je
ret
andl
adc
aas
xor
jmp
fisttpl
mov
sub
fsubrl
jnp
lcall
fldcw
out
cld
test
cmp
popf
and
popf
mov
lods
les
adc
into
sbb
mov
fwait
jg
jmp
inc
movsl
cmp
js
push
jg
pusha
adc
push
push
aad
sbb
leave
iret
jo
dec
inc
pop
cli
ss
push
cmpsl
inc
stos
add
inc
mov
xor
adc
mov
out
rol
movsl
mov
pop
mov
outsl
jnp
sub
insb
cmpsb
sbb
in
lock
mov
lea
test
sti
inc
xor
sar
cmp
sbb
xor
inc
in
dec
or
jg
inc
xchg
cmp
mov
jge
xor
xor
xor
pop
mov
and
mov
iret
daa
jne
sbb
aad
outsl
inc
hlt
cmp
mov
xchg
addr16
sbb
loop
or
loop
cmpsl
sbbl
xchg
jmp
nop
mov
push
test
lds
adc
xor
add
push
or
test
push
aad
hlt
add
aaa
lahf
push
ljmp
inc
insb
or
xor
imul
ret
adc
mov
mov
into
je
test
cmp
push
push
out
inc
stos
aad
or
xchg
jmp
call
and
jmp
in
divl
fdivrl
add
inc
mov
into
pop
mov
or
and
ja
push
je
lods
push
int3
or
movsl
sar
add
and
add
sbb
insl
lahf
cmpsb
xor
sbb
sub
sub
mov
test
or
jp
decl
sahf
in
in
jns
nop
std
cmc
es
sbb
loope
mov
popa
adc
popf
call
shr
jge
test
cmc
push
stos
add
mov
jne
mov
out
into
dec
and
dec
popf
enter
lcall
jecxz
clc
out
push
or
xorb
loopne
pop
cld
aas
adc
or
cltd
add
das
mov
lcall
sbb
dec
mov
iret
xchg
dec
rorl
aad
fwait
ret
mov
mov
cld
imul
xor
push
dec
cmp
dec
jl
mov
adc
lret
adc
and
les
lods
insl
or
imulb
aad
inc
arpl
or
xchg
sub
cltd
lret
xor
fisubrs
xor
div
iret
in
aaa
mov
adc
aam
jne
in
outsb
outsl
fistpl
ret
shll
js
sahf
sbb
xchg
in
and
push
xchg
inc
mov
xchg
jbe
push
xchg
fisubs
mov
mov
push
or
jns
pop
xlat
xlat
cmp
adc
decl
add
out
ret
adc
dec
es
xchg
data16
mov
or
test
cmp
xchg
xchg
insb
popf
inc
pop
push
push
lock
sbb
xchg
dec
cld
push
lds
add
mov
add
stos
mov
xchg
insl
shll
dec
sbb
sti
inc
insb
jnp
push
cmp
jnp
jo
push
mov
jmp
xor
fcoms
fmuls
jg
push
lcall
mov
adcl
scas
mov
int3
push
mov
mov
and
shlb
pop
aam
mov
insb
jg
inc
or
cli
sbb
dec
inc
jecxz
dec
in
push
pop
cmp
xchg
pop
lcall
int
les
mov
repz
mov
loope
inc
cmpsb
xchg
jmp
xlat
aas
pop
xor
inc
hlt
shll
loop
xchg
sub
jnp
mov
sub
adc
pop
ret
inc
xchg
jae
mov
loop
out
xchg
add
jae
cmc
nop
sarl
ret
and
imul
in
push
xchg
jbe
cmp
mov
rcl
mov
pop
aam
push
push
arpl
test
int
outsb
cli
adc
jg
lahf
orl
je
andl
insb
jo
popf
mov
movsb
push
xchg
je
adc
fists
das
jnp
adc
push
ds
sbb
aad
xchg
xchg
loop
mov
icebp
or
mov
sbb
push
aas
mov
mov
sbb
sbb
sbb
inc
ljmp
lea
cmp
adc
clc
sahf
mov
js
push
push
fwait
out
push
div
lods
adc
scas
xchg
fwait
lock
xchg
mov
mov
inc
inc
stos
mov
imul
stos
fidivrl
outsb
jge
lea
mov
xchg
ja
das
data16
pop
pop
in
push
cmp
adc
imul
sahf
int
movsl
loope
nop
add
push
push
push
lds
push
cwtl
out
stos
mov
or
push
cmpsl
dec
pop
ret
cmpsl
ljmp
movsb
out
leave
lods
cmp
xchg
ds
nop
inc
mov
std
lock
jne
pop
and
push
mov
or
mov
xor
cmc
cmc
mov
stos
add
push
jns
add
xchg
and
mov
je
xchg
pop
shrb
sub
sbb
mov
xlat
push
and
pop
and
or
sbb
mov
gs
test
aam
mov
and
iret
dec
daa
lret
mov
iret
iret
hlt
xchg
out
adc
add
adcb
push
push
lds
aad
mov
jno
xchg
adc
mov
mov
shlb
lods
rcrb
dec
out
and
pop
rcll
in
dec
pop
mov
ja
xchg
mov
out
rolb
jns
mov
mov
fisubrl
and
xchg
adcb
out
pop
mov
mov
ss
lahf
and
hlt
xchg
and
incb
xchg
pop
cmc
pop
push
inc
lea
dec
push
pushf
sub
push
adc
add
loop
add
sbb
pop
jg
cmpsl
nop
pop
and
xor
mov
mov
loope
flds
cwtl
aaa
mov
cmp
fwait
inc
and
sub
adc
out
setb
pop
scas
xor
mov
loope
sub
sub
iret
out
jae
bound
insb
mov
xchg
xchg
aaa
loop
jle
out
enter
in
add
jle
fidivl
stos
stc
fisttpl
les
adc
jno
std
movsl
sbb
dec
icebp
lea
inc
mov
mov
lret
inc
mov
jmp
adc
adc
mov
out
outsb
or
add
mov
out
inc
adc
inc
lret
hlt
stos
jmp
into
std
and
out
out
sbb
out
aam
mov
fistpl
sub
ret
iret
sub
fdivl
xchg
pop
sahf
stos
jge
lahf
sti
mov
mov
pop
lea
pop
cmc
xchg
jo
lret
mov
popa
sub
dec
sub
mov
js
pop
mov
movsl
and
dec
ret
js
xor
int3
pop
xchg
call
mov
jns
or
cmpsl
mov
andb
loopne
or
sub
aaa
jle
out
mov
mov
push
frstor
mov
outsb
int
std
sbb
push
mov
outsl
dec
ljmp
cli
cld
or
aam
cmpsb
lods
cmp
popa
rolb
std
add
sbb
push
out
xor
push
push
scas
outsb
jns
xor
mov
into
push
sub
mov
mov
pop
add
out
inc
jge
push
dec
push
mov
mov
lock
cmp
inc
sti
stos
add
jp
sbb
fadds
call
pop
leave
fnclex
das
adc
or
lock
jmpw
stos
pop
out
push
outsl
sarl
xor
out
call
lds
add
push
je
and
xlat
jmp
mov
mov
inc
repnz
jl
mov
sub
xlat
aaa
mov
inc
int3
fld
hlt
lock
xor
and
lahf
add
scas
fsubl
call
mov
pop
test
sarl
mov
scas
imul
mov
addb
push
adc
ret
fisttpl
push
fisubrl
lds
es
in
int3
jle
test
jl
sbbl
sti
push
xchg
inc
cmpsb
in
aam
push
xchg
inc
fisubrl
push
stos
add
inc
ss
add
mov
push
dec
daa
push
jg
or
mov
bswap
jl
outsb
xor
cmc
test
push
cld
test
fildll
mov
es
push
in
push
inc
getsec
iret
rcrb
in
aaa
ljmp
jmp
cld
dec
outsl
push
sysexit
test
ss
push
shl
mov
dec
push
ja
jnp
or
out
push
fsubp
mov
out
dec
jbe
cmpb
call
pop
adc
add
aam
inc
mov
pop
lahf
or
out
cmpsb
aas
mov
dec
in
pop
pop
add
leave
sbb
out
lods
into
pop
shll
xor
push
idivb
iret
xor
sbb
andb
dec
outsl
add
push
xlat
out
test
stos
jmp
cmpsb
xchg
in
sbb
cmp
adc
mov
mov
push
fsubp
lret
loop
loope
add
lea
push
sahf
xchg
nop
add
bswap
push
jmp
out
adc
xchg
data16
mov
jns
icebp
loopne
sbb
xor
mov
dec
mov
jmp
cmpsb
pop
xor
pop
xor
add
fstl
test
lods
pop
addr16
leave
add
dec
loopne
leave
test
xchg
aam
shll
inc
mov
ljmp
shlb
cmp
inc
test
fwait
jbe
cmp
push
lods
sbb
xchg
sub
in
pusha
jb
mov
mov
test
dec
mov
negl
clc
decl
mov
je
mov
or
lea
add
int3
and
lcall
js
idivl
fisubs
push
mov
repnz
ss
inc
iret
out
gs
outsb
shrl
xchg
cltd
and
into
insl
imulb
fnsave
cwtl
mulb
dec
repnz
int3
inc
xor
pusha
insb
fwait
gs
test
adc
js
push
mov
imul
push
sub
hlt
cltd
fs
in
mov
stos
test
fistpll
jns
xor
push
lods
mov
sbb
sub
add
xchg
dec
fdivrp
mov
popa
dec
sub
sub
testb
std
jno
mov
lret
icebp
adc
or
in
loope
cmp
ret
clc
adc
aas
rcrb
out
cmpsb
out
and
mov
jne
lcall
sub
push
cmpsl
rorl
addr16
jg
adc
cmp
xchg
push
cwtl
fiadds
or
dec
cmp
and
push
insb
mov
aaa
sahf
and
sub
and
mov
mov
lock
cmp
or
sbb
xchg
inc
test
mov
mov
sub
sbb
xchg
and
xchg
scas
rol
pop
test
mov
sbb
and
imul
ds
push
stos
jle
popf
mov
pop
mov
inc
sub
adc
sub
add
xchg
test
dec
jmp
dec
jae
sarb
dec
inc
sub
mov
xchg
adc
notb
push
xlat
call
mov
cmc
xor
imul
nop
pop
jae
push
mov
test
insl
cmp
and
mov
outsl
imul
mov
ret
lods
lods
mov
sub
js
push
pusha
mov
or
jmp
out
dec
xchg
pushf
sbb
fisttpll
jp
pop
nop
test
mov
and
inc
mov
mov
cmp
das
test
dec
push
fsubr
ja
mov
jmp
mov
and
or
pop
out
ds
pop
femms
jg
mov
fwait
mov
mov
xchg
lea
es
popf
fidivrs
pop
cld
inc
cmp
jp
test
jno
dec
and
out
lahf
out
stc
cs
sub
inc
jae
test
mov
jne
cmpsb
inc
adc
imul
bound
xchg
jnp
and
dec
mov
dec
mov
stc
or
je
mov
add
inc
pop
or
xchg
pushf
popa
js
bound
loopne
xchg
sar
lret
mov
scas
rolb
push
psubusw
add
dec
gs
adc
mov
push
push
mov
push
outsl
pop
jg
outsb
fldl
int
xor
cmp
int
mov
scas
pop
clc
sbb
stc
jno
imul
push
or
dec
stos
jbe
dec
xor
cwtl
pop
es
repnz
or
push
add
mov
push
xor
or
cmp
fldt
lods
in
pusha
lahf
icebp
mov
sub
adcb
leave
sub
jae
sub
and
aam
cld
mov
sub
call
shrl
decl
orb
xchg
loope
jo
bswap
jno
adc
sbb
popa
jp
mov
push
xor
mov
xchg
pop
fists
mov
aas
mov
fcomps
mov
rcr
clc
movsl
popa
iret
icebp
inc
iret
xchg
pusha
jl
testb
sub
mov
pop
add
mov
test
aaa
cmp
adc
jmp
or
fdivrp
testl
inc
mov
xlat
xchg
xchg
int
and
std
and
adc
outsb
iret
es
jl
ds
and
insb
jo
pop
mov
pop
das
xchg
ja
shlb
test
jne
rclb
cld
or
cmpsb
push
cmp
addr16
shll
dec
int3
mov
push
push
dec
xchg
cmp
xor
nop
ret
jp
rorb
dec
xor
loopne
mov
add
adc
xchg
subl
add
dec
xor
jle
pop
cmp
sbb
jnp
dec
sbb
std
pop
filds
mov
cmpsl
lock
fistpll
sub
repz
out
pop
in
lods
jecxz
inc
xchg
xor
dec
ljmp
sub
inc
pop
or
lods
cs
mov
sbb
nop
add
das
mov
or
rclb
jge
scas
cmp
add
jno
sbb
xchg
inc
inc
repnz
outsl
test
dec
xchg
loop
push
movups
out
popa
mov
sub
sub
push
es
mov
insb
cmp
popf
mov
push
into
shlb
pusha
adc
inc
das
imul
pop
movsl
jnp
fists
sbbl
ljmp
lahf
fcoms
jno
cli
lahf
or
sbb
ds
xchg
sub
mov
outsl
xchg
dec
xor
inc
fcoms
cmp
int3
das
mov
lahf
popf
imul
icebp
sub
mov
orb
mov
jb
aas
xor
shl
movsl
jmp
dec
rcll
add
rolb
loopne
push
aam
loopne
in
or
lods
pop
ljmp
jecxz
pop
jge
daa
push
lods
fxch
je
cmp
push
push
mov
stc
and
sbb
shl
lret
or
mov
hlt
mov
adc
mov
in
pop
movsb
cmpsb
lret
subb
pop
pop
imul
mov
adc
pushf
iret
aaa
in
sbb
pop
andl
stos
insl
push
dec
insb
inc
mov
fs
xor
shrb
ss
mov
mov
jmp
aam
into
in
inc
in
sub
sub
test
and
or
rclb
push
cmpsl
jo
enter
push
mov
push
jo
cmp
or
imul
pop
adc
mov
mov
sti
rcll
arpl
js
dec
sbb
sbb
push
lret
fadds
inc
mov
dec
dec
les
in
xor
jae
lea
nop
aad
ss
loopne
ds
ljmp
jne
cwtl
testb
movsb
ljmp
mov
ljmp
repz
test
clc
nop
outsl
inc
outsb
icebp
pop
shrb
adc
push
sub
xor
dec
sti
pop
in
shll
adc
xor
hlt
ret
xchg
adc
pop
into
sub
shll
mov
cli
sti
mull
int3
cmpsb
in
inc
into
fs
clc
mov
lcall
adc
out
das
andl
js
xor
inc
sti
test
mov
inc
aam
or
inc
sub
push
test
cmpsl
or
pop
pop
orb
outsl
fwait
pop
iret
shrl
test
ret
enter
or
sbb
lahf
cmp
inc
pusha
je
and
and
ret
mov
cmp
cmp
mov
fistpl
push
popa
lea
out
out
add
pop
mov
jno
cs
sbb
fisubrl
push
sarb
lahf
jno
cmp
dec
jbe
leave
jo
sub
sbb
sbb
inc
das
cmp
mov
cmp
push
shrl
mov
dec
xor
insl
xor
out
mov
lods
dec
xor
inc
flds
sub
jb
xchg
pop
mov
add
and
outsb
jmp
leave
cmp
push
xchg
xchg
sbb
dec
gs
sti
stos
cmc
pop
mov
sbb
sub
lahf
lods
lods
ljmp
add
icebp
xlat
loopne
or
popa
scas
and
or
sbb
popf
cltd
aaa
shll
movsb
aam
mov
inc
mov
into
or
iret
xchg
icebp
jmp
loop
cmp
out
js
push
lahf
xor
imul
aad
push
mulb
push
jns
aam
jmp
nop
or
dec
test
xor
mov
popa
shrl
xchg
cli
out
mov
mov
popa
push
xchg
inc
mov
jl
sbb
adc
mov
fcmovnb
test
cmovbe
lahf
out
or
inc
dec
xor
xor
aam
jg
pop
dec
mov
clc
sbb
test
sbb
xor
into
cmp
xchg
pusha
jb
push
sahf
dec
cli
addr16
sbb
or
push
cmpsb
in
js
inc
std
mov
inc
inc
or
jmp
shld
mov
lock
mov
mov
cmc
test
loopne
sub
mov
ds
test
jmp
sbb
test
hlt
cs
out
adc
fcomps
sti
xchg
js
xlat
pop
add
push
clc
jl
insb
add
cmp
push
xchg
xchg
push
in
repz
stos
sub
nop
or
jle
outsl
ja
xchg
lahf
lds
or
lods
jbe
popa
popa
mov
adc
xchg
stc
jnp
js
rorl
inc
aad
js
int
addr16
push
dec
jne
clc
push
mov
mov
pop
jge
test
fnstcw
cmp
hlt
cli
loop
shr
sbb
imul
enter
push
mov
push
add
shlb
in
sbb
jg
in
lret
mov
mov
and
inc
inc
dec
aas
dec
mov
xchg
sub
popf
rclb
jecxz
sbb
jp
icebp
ret
jp
add
jb
movsb
sbb
pop
sbb
lods
divl
int3
icebp
pop
or
mov
mov
cmp
jge
xor
iret
fldt
movsb
or
mov
add
cmp
inc
pop
pop
push
xor
add
pop
add
enter
lea
and
jb
mov
cmp
pop
sub
dec
lahf
sti
adc
xor
lds
push
cmp
test
stc
mov
lea
xor
push
mov
scas
in
cwtl
inc
mov
mov
xchg
lret
jno
icebp
test
lods
movsb
popf
aas
lds
inc
test
mov
jl
and
push
ljmp
cmp
ja
mov
jge
lret
std
cltd
push
arpl
nop
test
inc
fwait
test
jmp
jne
and
fidivs
fsub
or
bound
fldenv
adc
mov
insb
jne
push
jbe
cmp
xor
mov
imul
nop
add
mov
rcll
jmp
xchg
and
and
rorb
cltd
dec
je
cmpsb
idivb
pushl
hlt
inc
out
jge
sbb
push
out
jae
mov
fists
fwait
cltd
mov
popa
ret
ljmp
mov
fisttpll
mov
or
insl
mov
mov
inc
fs
shrd
mov
mov
mov
pushf
xor
sbb
xor
movsb
out
adc
faddp
mov
fwait
push
mov
mov
das
xor
or
ret
insb
andb
cs
jge
xchg
ret
sbb
mov
addb
test
lods
lea
out
xchg
enter
pop
add
cli
lret
jnp
mov
repnz
mov
ret
cld
imul
fdivrs
sbb
mov
and
fildll
loopne
fsubrs
and
iret
push
jnp
sbb
mov
push
jae
lcall
cs
sub
xchg
and
xor
inc
sub
push
add
neg
fcoms
mov
and
xorb
dec
mov
mov
lods
movsl
cmp
xchg
or
leave
mov
imul
mov
test
lods
arpl
cmc
scas
pop
jmp
mov
lret
subl
daa
adc
in
fldt
mov
push
xchg
ljmp
add
rorl
push
in
inc
mov
adc
mov
loop
or
add
dec
ds
dec
xchg
scas
icebp
fsubs
cmpsb
add
adc
ficompl
ds
rcr
mov
xchg
cmc
pop
adc
adc
inc
push
push
sbb
test
push
xor
mov
push
rcrl
outsb
test
out
mov
cli
outsb
add
dec
inc
mov
sbb
push
movsl
cmp
or
std
xchg
jl
push
sbb
xor
jb
sub
in
clc
int
sbb
and
cmp
push
scas
xchg
sbb
repnz
dec
mov
imul
mov
test
sbb
cmp
sbb
mov
ret
jae
dec
movsb
rcl
daa
sub
sub
aaa
cmp
hlt
outsl
push
mov
insl
jae
pop
sub
jae
mov
cmpsb
lea
adc
push
aaa
iret
sbb
jl
sbb
push
bound
adc
xor
pop
xor
pop
and
push
inc
lods
xchg
inc
pop
jo
sahf
sbb
sub
gs
shrb
popa
add
xchg
in
mov
or
or
add
fnstenv
cmp
les
mov
push
movb
in
sub
sbb
cltd
mov
xor
int
jecxz
sub
push
icebp
lcall
and
shrb
data16
jmp
stos
fwait
out
adc
sahf
shlb
dec
out
lods
loope
fcoms
es
aaa
push
xlat
adc
jns
jnp
lret
lea
mov
js
or
insb
push
lahf
add
inc
imul
roll
inc
lcall
cli
xchg
cli
inc
mov
fistpl
pop
sbbl
outsl
cmp
inc
pop
mov
aad
dec
adc
cltd
jecxz
call
xor
mov
les
aas
lcall
mov
cmp
jb
ret
in
cmp
adc
cmp
pop
cmpb
dec
inc
add
cmp
jae
stos
push
mov
mov
das
leave
xchg
loopne
push
jbe
cmp
shll
test
out
clc
js
mov
dec
lret
jne
addl
mov
lock
mov
sbbb
sub
loope
mov
push
push
addr16
fbstp
je
pop
pushf
push
mov
ja
out
inc
dec
xchg
test
divb
je
jmp
imul
or
push
xchg
call
aas
push
and
mov
gs
pop
add
push
mov
jnp
jge
test
lods
pushf
mov
adc
icebp
aas
out
insl
lds
daa
jge
or
mov
addr16
scas
divl
xchg
repnz
pushf
pop
cmpsb
pop
fidivs
dec
nop
mov
popa
push
repnz
adc
xlat
clc
mov
fnstenv
std
mov
test
xlat
adc
or
add
mov
subl
lea
mov
cmpsb
scas
icebp
js
into
jecxz
outsl
rorb
ja
xor
inc
mov
popf
fiadds
mov
insb
xor
push
in
dec
aas
mulb
lds
pop
rol
or
push
adc
sbb
push
xchg
push
xchg
int
testb
test
mov
repnz
jbe
inc
and
fcoms
or
in
test
inc
out
push
bound
jo
sub
sbbl
mov
sub
xor
loope
in
mov
rcl
test
out
rcrl
push
xchg
mov
dec
shl
cltd
inc
fxch
sbb
or
call
ret
mov
dec
sub
push
aas
idiv
mov
das
mov
mov
sub
add
push
adc
jl
mov
mov
and
push
mov
fmulp
jnp
cmp
add
pop
lods
lods
xor
sub
daa
adc
lret
mov
mov
pushf
inc
or
or
ret
cmpsl
mov
xchg
push
mov
aas
in
dec
loopne
cmp
jge
push
add
mov
in
ljmp
test
mov
out
inc
push
fs
mov
in
mov
or
adc
push
mov
mov
jb
dec
mov
and
scas
jg
leave
imul
mov
pop
test
push
int3
in
cmc
lcall
sub
stos
pop
or
push
mov
pop
or
insb
mov
mov
int
icebp
cmp
cmp
and
adc
decl
in
sub
orl
dec
sbb
xor
jp
adc
cmpsb
cwtl
repnz
xchg
andb
mov
pop
sub
sub
pop
push
call
inc
mov
clc
arpl
push
cmp
jl
je
imul
sub
add
jecxz
mul
cmp
sbb
stc
scas
sbb
ds
js
inc
iret
or
aad
ss
icebp
shll
aaa
cmpb
jb
addr16
dec
in
lret
inc
cmp
repnz
pop
xor
std
in
call
loopne
and
into
push
scas
jne
cli
lods
mov
test
imul
sti
adc
mov
loope
fisubrl
jle
pushf
int
or
movb
nop
movl
pop
aaa
jns
loop
ja
mov
loopne
cmpsb
inc
adc
sub
push
jae
jmp
sub
sub
inc
lcall
add
lock
push
adc
push
sbb
dec
in
cmp
iret
jmp
sbb
mov
ja
ds
pop
mov
or
mov
mov
inc
push
fwait
jne
sub
outsb
inc
mov
aas
mov
sar
not
cmp
cld
inc
jle
loope
ss
lret
xchg
add
mov
pop
int
gs
in
mov
or
inc
cmpsl
jecxz
test
mov
in
or
mov
push
xchg
jne
pop
addb
fwait
clc
xchg
push
ret
mov
lds
sub
in
nop
xchg
test
cwtl
fscale
sub
bound
pop
xchg
jecxz
sub
ljmp
cmp
xchg
arpl
cmp
clc
push
and
imull
sbb
sub
xchg
pop
in
fs
stc
movsb
dec
jl
lret
sbb
cmp
and
or
fsub
loopne
pop
faddl
sbb
out
shlb
xlat
popa
jns
mov
pop
inc
sbbb
iret
mov
and
mov
pop
cwtl
push
insl
and
add
ds
mov
xchg
outsl
sbb
clc
arpl
cmp
cwtl
aas
mov
jb
aas
sub
cwtl
sbb
xor
es
lret
push
decl
frstor
mov
pop
fwait
popa
jae
in
sub
push
inc
ret
fldl
mov
pusha
sub
movsl
clc
fldt
jmp
int
mov
imul
xchg
mov
clc
mov
and
leave
cmp
xor
iret
push
fldl
rorb
inc
pusha
shll
sbb
repnz
adc
pop
lods
mov
sbb
jg
iret
fnstcw
je
enter
movsb
add
ss
xor
and
pop
ret
adc
sub
xchg
scas
xor
es
jbe
jge
aad
cltd
lds
loop
or
pop
jmp
into
xor
aas
insl
sbb
xchg
pushf
or
lods
out
push
outsb
test
in
push
xchg
repnz
inc
aaa
insl
je
inc
lea
flds
cmpsl
adc
xchg
push
cld
pushf
push
into
mov
mov
scas
cwtl
add
in
jns
cs
bound
jb
and
std
cld
and
stc
mov
pop
pushf
rolb
fisubl
arpl
mov
test
push
stos
jg
loopne
dec
scas
push
inc
pop
or
test
or
cmp
cmpsl
adc
and
pop
jmp
jl
add
sar
jno
pop
dec
mov
jmp
arpl
lahf
scas
sbb
rcrl
in
mov
push
push
fildll
aam
or
repnz
daa
les
int3
pop
popa
repnz
cs
push
or
sub
in
dec
mov
jge
daa
dec
xlat
notl
cld
sahf
mov
dec
cwtl
mov
dec
fwait
jbe
aaa
jg
cmp
sbb
mov
push
pop
arpl
pop
lock
repz
rcrb
gs
mov
or
add
daa
fisttpl
fstpt
xchg
pop
lods
push
into
fs
dec
sbb
icebp
inc
push
negl
push
cmp
sti
add
and
loope
xor
mov
jl
and
push
xchg
sub
sbb
jp
pop
out
dec
sbb
cmp
pop
cltd
ficomps
aas
shl
sub
adc
pop
shl
and
cli
js
adc
and
and
mov
sbb
mov
lret
pop
xor
inc
or
int
xchg
and
mov
sbb
adc
xchg
fwait
or
cwtl
loope
mov
xchg
jge
rcr
push
fidivs
mov
mov
andl
jno
and
loop
sbb
test
pusha
push
es
and
pop
loop
bound
or
dec
fiaddl
fs
mov
sub
jp
mov
adcl
popf
push
jo
or
xor
push
rcrl
mov
push
lcall
aad
in
and
push
gs
and
sarb
xor
or
mov
bound
xor
out
or
pop
mov
adc
sbb
xor
xchg
lret
cltd
es
or
imul
movd
mov
aaa
rorl
xchg
lods
or
push
and
jmp
jns
xchg
mov
iret
ror
lcall
xor
dec
xchg
sub
lcall
lea
mov
xor
ss
inc
cwtl
stc
outsl
adc
dec
aam
dec
mov
push
lret
mov
or
push
lret
stos
insb
and
into
popf
aam
mov
mov
cmpsl
xchg
push
out
or
lods
gs
scas
pop
adcb
jecxz
push
inc
into
jns
and
jbe
dec
pop
mov
frstor
mov
inc
pop
xchg
int
in
mov
jle
je
sub
in
repz
stos
fildll
pop
sbb
xchg
adc
call
ds
lock
mov
xor
dec
shl
and
aam
inc
push
notb
dec
mov
out
lret
pop
sub
mov
es
xlat
das
dec
ljmp
bound
mov
mov
pusha
or
inc
fwait
hlt
jmp
xor
cmpsb
mov
stc
adc
and
xchg
add
xor
sbb
stos
fisubl
cmc
addr16
mov
mov
pop
mov
or
add
in
cltd
fsub
xchg
mov
fld
xchg
ss
mov
sbb
jae
and
dec
pop
xchg
add
dec
decl
mov
fstp
and
das
jge
loope
push
add
xor
fists
repnz
mov
je
movsb
out
push
adc
pop
rorb
jecxz
ficomps
xlat
mov
out
cmp
adc
cmpsb
cmpsb
std
dec
inc
inc
jnp
jg
jae
in
fs
adc
out
pop
sbb
shrb
addr16
xchg
push
push
ja
xchg
push
mov
test
pop
int3
cmp
lret
flds
xor
xchg
stos
dec
mov
lret
add
sbb
imul
add
xchg
dec
mov
insb
adc
iret
push
pop
xchg
push
lret
addr16
movsl
and
adc
ss
repz
sub
xchg
loopne
icebp
push
out
and
testl
nop
xor
and
leave
adc
mov
pushf
gs
pop
sbb
mov
pop
fdivs
jg
nop
jp
out
dec
dec
or
mov
cmp
push
sarb
pop
fdivrl
push
int
adc
hlt
sti
xor
add
jg
pop
leave
imul
cli
js
sbb
pop
push
jne
push
and
jmp
imul
add
mov
test
sub
push
jbe
test
pop
or
fs
mov
add
jl
outsb
std
in
xchg
xchg
in
pop
or
je
add
js
xchg
in
les
ret
popf
xor
in
mov
xchg
mov
jo
inc
arpl
gs
jae
sti
hlt
xchg
mov
jne
aad
and
pop
add
inc
push
jbe
cmpsb
add
mov
cmpl
stc
ljmp
xor
outsl
insl
arpl
lret
add
test
lret
test
mov
test
test
add
aas
pushf
jbe
aaa
inc
mov
push
outsl
jecxz
jecxz
test
movsb
cmpsl
cld
inc
inc
in
xor
adc
pop
inc
mov
fistpl
push
push
das
sub
cmp
arpl
dec
inc
jp
test
cli
icebp
leave
mov
add
adc
in
lods
jmp
dec
cmp
test
inc
mov
push
insb
pop
and
ljmp
jmp
push
div
pop
adc
jno
push
hlt
cmp
rolb
mov
pop
mov
aad
push
push
sar
push
add
xchg
and
dec
cmp
jp
aad
mov
fistpll
dec
stos
jl
cmpsl
adc
mov
lds
insl
and
in
or
stos
gs
sbb
lahf
cmp
popl
push
mov
out
xchg
sub
jb
sbb
lods
fs
filds
mov
in
lods
arpl
cmp
xor
sub
add
xchg
mov
adcl
push
cmp
xor
mov
into
inc
into
fisubrs
jg
mov
test
lcall
imul
les
xchg
xor
int
cmp
rcrb
stos
push
adc
xor
sub
inc
fsts
push
mov
mov
dec
jo
jno
das
movsb
pop
data16
mov
outsl
mov
pop
jmp
jmp
sub
mov
jecxz
sbb
mov
out
fs
outsb
cmp
inc
popa
sbb
lahf
jne
aas
cwtl
or
pop
dec
adc
in
sbb
in
inc
sub
push
lret
sub
je
mov
xchg
cmp
sti
jb
fs
mov
les
dec
call
adc
cmp
and
mov
in
and
sub
and
sbb
sbbl
push
repz
inc
mov
arpl
jecxz
sbb
outsb
pop
gs
int
int3
aad
ror
pop
mov
mov
nop
sub
push
test
sbb
sub
lret
dec
adc
out
add
scas
and
jns
mov
mov
scas
push
and
sbb
test
mov
mov
mov
imul
dec
clc
mov
lds
sbb
mov
popf
mov
mov
in
xor
sub
sub
mov
pop
push
test
stos
mov
lock
cwtl
loopne
iret
add
stos
sbb
jl
lcall
stos
xlat
jl
dec
aaa
rcll
push
nop
mov
sub
mov
imul
leave
or
inc
aaa
sarl
cld
add
fs
sbb
add
or
aas
clc
shl
xchg
adc
inc
fs
xor
jecxz
divl
cmp
mov
mov
mov
call
fisttpll
orl
xor
outsb
int
mov
and
lret
add
into
jb
fwait
shll
pop
sub
mov
jns
mov
add
pop
out
pusha
push
xchg
inc
cmpsb
add
xchg
xlat
push
xchg
jl
or
jl
sbb
movsb
or
dec
sbb
cld
mov
mov
jp
adc
fsubs
jb
dec
mov
adc
pusha
xor
mov
fwait
sti
or
sub
cmpsb
add
sub
mov
inc
lds
mov
fnstsw
dec
nop
jno
push
mov
lret
inc
xor
adc
push
mov
jg
adc
mov
test
jno
pop
sbb
cmp
push
out
inc
mov
adc
fwait
xor
jecxz
adc
je
in
popf
gs
fwait
mov
fwait
push
lcall
clc
out
push
popa
mov
mov
cmp
insb
add
pop
pusha
or
negl
mov
mov
xor
mov
sub
xor
cmpsb
in
movsb
in
inc
mov
sub
cmp
outsb
or
iret
xor
test
add
lret
pop
and
outsl
mov
stos
cs
mov
mov
mov
mov
cmc
sbb
cwtl
mov
jecxz
cmp
clc
movsl
xor
jge
cmc
sub
mov
shrl
push
xchg
xor
lds
aaa
lods
insb
or
or
mov
dec
jbe
mov
outsb
ret
daa
jns
rolb
sub
cmc
out
or
js
mov
dec
mov
xchg
or
shll
sbb
fcom
and
mov
push
adc
push
pop
fcomp
cwtl
xor
outsl
inc
ss
nop
clc
mov
es
or
xor
and
and
ja
sub
iret
ficompl
cmp
lret
dec
cs
test
movsb
push
push
and
popf
dec
bound
cmp
rol
ljmp
sbb
inc
adc
insl
addl
test
fld
ss
test
iret
aam
nop
xchg
xchg
xor
dec
or
icebp
fbstp
ds
push
insb
mov
jae
lret
popl
sub
adc
mov
int
jae
adc
adc
pop
enter
call
out
mov
out
ss
movsb
mov
sbb
or
stc
mov
lret
inc
addr16
hlt
xor
cmp
push
outsl
cmp
cld
lret
cli
push
pop
cmpsl
arpl
cwtl
or
loopne
mov
sub
cmp
into
ret
xchg
hlt
dec
mov
push
sahf
adc
je
test
not
ret
call
lret
mov
xor
push
or
fwait
dec
push
imul
dec
xchg
cwtl
aas
sbb
sbb
in
push
jmp
mov
mov
dec
jle
sbb
icebp
jae
fucomp
add
add
mov
daa
in
push
popf
popf
xor
mov
int
sub
outsl
jnp
data16
and
loopne
add
insl
sbb
inc
repz
adc
repz
pop
ljmp
dec
sub
dec
dec
scas
and
rcr
lods
addl
and
jl
sahf
jp
cmpsl
adc
cs
ret
mov
xchg
xor
pop
jmp
insb
call
push
daa
mov
mov
adc
xor
stc
shll
mov
ja
int
out
int
dec
jg
ja
xchg
subb
rolb
fsubrl
dec
andb
sbb
xchg
and
pop
cs
dec
dec
std
push
mov
xor
into
or
lds
push
xor
insl
ljmp
pop
fisubrs
sub
jg
pop
jns
jmp
mul
inc
pop
sbb
mov
cmpsb
fidivl
arpl
xor
cs
and
dec
mov
sbb
and
fistps
jnp
stc
push
mov
les
cmpsl
pop
sub
int
mov
pop
xor
xor
mov
add
imull
stc
mov
cli
or
jg
mov
insb
ficomps
ds
or
push
cmove
sbb
das
xchg
test
and
jb
sbb
popf
cs
mov
call
mov
pop
mov
test
xchg
sbb
add
pop
mov
cld
aad
mov
outsb
mov
hlt
jns
orl
addr16
sub
lea
aaa
mov
and
hlt
jge
lahf
call
test
mov
adc
outsb
jl
push
pushf
imul
inc
and
dec
out
xchg
mov
mov
lss
mov
imul
sub
cmpb
mov
mov
push
sub
mov
leave
int
xor
pop
and
sti
addr16
shlb
sub
xor
xor
push
mov
lahf
cmp
mov
clc
cmc
cmp
lret
push
loopne
jle
repz
aam
xor
sbb
mov
adc
mov
mov
push
rclb
xor
mov
sbb
sahf
mov
int
jle
int
std
fldenv
addr16
pushf
mov
adcl
and
push
xor
mov
addb
mov
or
push
out
xor
push
mov
pop
pop
mov
or
aas
and
cmp
gs
mov
repnz
sbb
cmp
mov
shll
es
addb
loope
and
xlat
aad
lock
sub
icebp
pop
outsl
mov
mov
sub
pop
sbb
insb
arpl
mov
xchg
fistpll
sti
sbb
out
xorl
cld
pop
js
lods
sub
je
lock
nop
push
adc
mov
dec
or
mov
bound
out
xor
push
mov
and
dec
push
movsl
inc
outsl
cmp
scas
pop
mov
aad
jmp
xor
sub
sbb
insb
out
jge
int3
ljmp
adc
das
inc
or
pop
push
outsl
xor
pop
xchg
xchg
add
push
shr
lods
inc
cmp
adc
push
shll
lock
mov
cmp
les
sti
cmp
jmp
dec
fs
xchg
popf
popa
and
sbb
cmp
daa
mov
je
inc
jecxz
xor
add
jae
ss
clc
mov
push
mov
in
gs
jnp
fs
nop
frstor
jle
jecxz
push
into
jbe
push
adc
pushf
sbb
jge
neg
fimull
inc
rcrb
fsubs
cwtl
test
sarl
jp
jp
std
xchg
and
int
jmp
fstps
je
cmp
or
mov
dec
add
adc
aas
jp
nop
add
ret
in
mov
imul
cmp
js
out
cs
sbb
add
pop
sub
fbld
rorb
sub
daa
push
enter
ds
sub
sbb
mov
push
push
mov
aam
int
add
imul
fiaddl
aas
loope
jmp
je
xchg
and
inc
xchg
lret
cmpsb
das
sbb
enter
stos
in
mov
push
popa
mov
ret
test
inc
jb
icebp
cmpsl
lret
std
mov
fbstp
pcmpgtb
add
fsubs
lcall
and
test
sbbl
pusha
sahf
jg
imul
and
idivl
xchg
push
loop
data16
push
scas
std
and
ja
and
xchg
aam
push
sti
and
or
dec
leave
dec
mov
cmp
add
test
mov
sub
mov
roll
or
lahf
int
push
pop
and
lret
sahf
inc
repnz
in
pushl
sub
push
and
push
cmp
xor
incl
push
push
and
mov
push
jmp
pop
mov
sub
bound
xor
sub
orb
rcll
dec
inc
cmp
pop
mov
xor
ror
call
xlat
rorl
push
aaa
loope
shl
leave
sbbl
insl
shll
mov
jmp
push
inc
pop
insb
add
jmp
imul
fildl
movsb
imul
push
movsl
cmp
ds
xor
mov
test
jmp
jo
push
cmpsl
adc
testl
xchg
mov
fidivrs
imul
adc
loopne
jl
cs
in
xor
fdivs
ret
call
movsb
cli
xchg
and
push
xor
data16
mov
push
xchg
push
movsl
cmpsb
push
std
push
cs
iret
jbe
pop
in
adc
push
nop
xlat
sbb
mov
pushf
lcall
bound
jnp
xor
mov
std
xlat
inc
and
shrl
and
jno
inc
les
fiaddl
nop
pop
cmp
sub
ss
inc
xor
fwait
lret
mov
pop
cmp
pusha
mov
cmp
stc
jp
push
mov
outsb
push
pop
dec
jecxz
pusha
jge
test
sub
and
dec
push
adc
add
and
jp
mov
sub
inc
cwtl
mov
cltd
sbb
and
or
insb
cmp
cmp
mov
call
call
sub
xchg
jnp
shrl
and
push
push
adc
mov
testl
subb
sub
add
xlat
mov
mov
dec
dec
fsubs
mov
lds
popf
sbb
aam
aas
mov
jae
sbb
in
and
inc
xchg
dec
shufps
out
xchg
xor
jl
addr16
add
adc
dec
ret
fstpt
add
cmp
notl
rol
pop
mov
mov
dec
add
push
and
sbb
cmp
out
out
mov
movsl
add
push
aaa
sub
lods
mov
xchg
mov
fnsave
cmpsl
mov
rolb
xchg
inc
push
jne
and
loop
add
ljmp
inc
jecxz
popf
movsl
sti
mov
outsl
pop
nop
jg
fstps
stc
out
ds
loop
in
aad
rep
popf
in
icebp
jmp
jno
or
popf
fs
cmp
popf
xlat
lret
test
cmp
sbb
push
add
pop
cld
shlb
daa
push
into
stos
cmp
imul
add
jle
test
xchg
cmp
mov
ds
in
inc
data16
xchg
or
lock
lret
ret
arpl
cmp
sbb
cmp
push
stos
xor
pop
setp
lods
dec
mov
jbe
pop
lods
mov
mov
xlat
jo
andl
add
and
insb
cmpsb
sub
inc
cmp
lret
movsb
xchg
cmp
fcompl
dec
and
adc
das
test
shrl
xchg
fdivr
xchg
or
adc
sub
mov
or
jne
ret
rolb
fstpt
inc
outsl
shr
imul
int
fisubrl
orb
mov
jbe
aam
adc
es
popf
jmp
sub
pop
sahf
pushf
cmp
pop
mov
hlt
pop
xor
mov
testb
scas
test
ret
xor
hlt
push
lcall
mov
xor
dec
js
or
push
add
pop
cltd
sub
loop
es
and
push
int
add
sub
scas
xor
subb
call
outsb
cld
push
inc
fcoml
push
pop
imul
add
mov
pop
push
mov
out
sti
aam
cltd
sahf
inc
mov
inc
loop
lods
repz
cmpsb
call
push
mov
xchg
hlt
sub
inc
lahf
jl
std
lods
testl
mov
mov
cmp
sbb
std
inc
movsb
cmp
pop
mov
mov
cmpb
mov
sbb
mov
mov
xor
test
mov
adc
pop
fiadds
mov
call
in
inc
cmp
in
jnp
sbb
push
mov
std
push
psubsw
cmp
aas
dec
xlat
cmp
cmp
sbb
mov
adc
sti
xor
sub
test
dec
xor
fildl
adc
add
add
mov
or
scas
js
icebp
orb
pop
cmp
add
mov
adc
rcrb
sub
mov
or
xlat
fsin
mov
outsb
pop
sub
jnp
mov
sarb
das
das
loop
cmc
mov
gs
xchg
mov
ljmp
push
outsb
pusha
and
jg
xchg
xorl
in
or
mov
aas
std
scas
jle
in
nop
movsl
mov
jne
sbb
into
shrb
lret
in
sub
mov
sahf
mov
and
sub
les
cld
xlat
jecxz
out
shll
cmpsl
mov
xchg
push
sub
mov
stos
stos
mov
lods
fs
test
and
leave
fisubrl
mov
dec
and
pop
cmp
push
or
and
jge
or
and
js
shl
js
add
sti
mov
mov
push
je
cmp
sbb
outsl
arpl
shr
mov
cld
mov
sub
jmp
adc
lahf
xchg
insb
push
test
int3
push
aas
cld
push
repz
lret
adc
add
mov
push
into
xchg
push
add
mov
mov
push
adc
adc
cmp
adcb
fistps
lods
jmp
add
pop
lcall
and
ss
jns
and
or
inc
xchg
xchg
scas
add
xor
push
sbb
shll
mov
stos
mov
mov
mov
testl
lock
das
das
fidivs
mov
or
sbb
mov
xchg
mov
xchg
in
inc
mov
add
ret
push
fidivrl
pop
fldt
sbb
or
cld
aas
test
pop
loope
xchg
xlat
xor
ja
shlb
xchg
add
add
cwtl
ret
mov
jge
or
test
aam
cmp
pop
adc
fwait
pop
clc
jg
inc
jp
adcl
mov
imul
cmc
inc
out
mov
sbb
xlat
sub
jne
aaa
add
mov
pop
pop
push
hlt
push
push
add
mov
test
or
pushf
inc
outsb
lea
or
jns
lret
add
cli
cmp
pop
out
into
lock
enter
xlat
add
loopne
xor
sub
stos
outsl
pmulhuw
in
mov
cwtl
addr16
and
mov
cmpsl
cmp
jl
sub
inc
push
mov
icebp
pop
cmp
cmp
pop
cli
push
mov
xchg
pop
aam
jmp
mov
push
mov
sbb
mov
lock
rorb
xchg
lock
adc
push
cmp
stos
xchg
cmc
cmp
push
lods
out
in
xor
mov
daa
ljmp
pusha
call
adc
and
xor
mov
and
cltd
sar
xor
xchg
stc
outsl
aad
outsl
and
mov
ret
xor
icebp
imul
mov
xchg
xchg
out
lret
negl
inc
push
icebp
mov
movsl
lock
nop
jb
push
mov
sub
mov
sub
sbb
jae
lret
mov
test
and
xchg
jle
mov
xchg
mov
sbb
dec
cmpsl
dec
scas
js
dec
cmp
in
mov
xor
xchg
idivb
adc
scas
jae
out
shlb
add
cmp
adc
adc
push
pop
lret
xor
push
fisubl
loopne
out
adc
pop
adc
inc
pop
icebp
xor
cmp
or
mov
xor
ljmp
int3
cmc
pop
std
add
das
popa
rcrb
mov
fnstsw
xchg
pushl
mov
sbb
xchg
and
cli
mov
subl
adc
hlt
jns
lea
daa
sbb
lods
int
dec
adc
mov
test
fiaddl
cld
outsb
inc
xchg
xchg
pop
xchg
mov
in
push
rorl
lods
push
xorl
test
fists
lret
cld
xor
pop
push
fsts
jne
js
inc
push
imul
sahf
push
shr
lock
inc
xchg
rcrb
xchg
sahf
push
cmc
xor
fidivrs
cltd
mov
cmp
imul
loopne
imul
and
xchg
or
stos
mov
loopne
adc
push
xor
mov
bound
mov
in
mov
lods
jp
or
lret
mov
jne
mulb
cmc
les
pop
out
sub
sbb
cwtl
sarb
test
int3
shl
and
add
sub
ss
mov
shrb
bound
stos
xchg
xchg
and
rcrl
dec
mov
les
and
pop
or
ret
push
mov
leave
push
jg
and
sti
imul
andb
rclb
lret
shll
out
lcall
loope
int
mov
cmp
xchg
cmp
hlt
loop
loopne
lods
xchg
mull
mov
mov
add
insl
mov
mov
imul
js
test
orl
mov
sbb
gs
sub
sub
out
sti
leave
jnp
leave
or
or
bound
std
je
hlt
test
inc
mov
mov
pop
push
xchg
sbb
or
pop
or
add
add
mov
ret
xchg
sub
shlb
push
dec
loopne
pop
add
loop
pop
or
je
xlat
mov
imul
pop
into
imul
lea
xor
jp
pop
out
movsb
dec
mov
sbb
mov
mov
movsb
xlat
gs
push
add
add
test
aad
cmp
sbb
jl
jg
or
in
jmp
inc
jns
std
push
dec
xchg
data16
les
sub
sbb
outsl
test
push
f2xm1
repz
jecxz
adc
push
cld
lods
sbb
scas
jns
or
in
lahf
xor
cmc
inc
test
and
xchg
js
test
aad
stos
popa
pop
cpuid
add
and
pop
mov
cmc
cmp
mov
mov
cmp
nop
aas
sbb
test
and
scas
jmp
and
lods
sub
push
or
outsb
popf
xchg
mov
popf
imul
rcrl
dec
repz
leave
decb
into
cmpsl
or
outsb
hlt
in
add
lea
push
enter
mov
leave
movsb
dec
mov
les
push
sub
push
xor
insl
fwait
xchg
faddl
es
bound
adcb
jmp
adc
dec
cltd
and
push
jge
mov
int3
dec
or
cmp
insb
mov
mov
xlat
xor
insl
mov
push
mov
push
movsb
adc
lcall
insl
push
mov
xor
add
push
or
fimull
xlat
push
jns
test
mov
xor
pop
lret
stc
loopne
test
mov
adc
inc
jl
push
mov
sub
mov
mov
cs
jo
xchg
lods
lods
les
pop
ljmp
nop
inc
ror
jne
xchg
push
push
mov
out
sbb
xor
cwtl
mov
fs
sbb
das
push
aam
mov
addr16
sbb
in
popa
loopw
dec
cmpl
loopne
push
push
cmpsl
sbb
inc
dec
pop
lcall
mov
push
test
lea
xchg
mov
dec
xchg
pop
mov
add
repz
imul
adc
mov
mov
jle
les
ror
call
xchg
sub
mov
lea
mov
test
fstl
xchg
rorb
push
hlt
lods
fisubrl
inc
ljmp
lret
gs
xor
jmp
mov
pop
xor
in
or
adc
fwait
adc
adc
xor
push
fldl
mov
dec
scas
lock
pop
jge
xchg
repz
stos
in
idivb
jge
xchg
xor
data16
jbe
jo
add
mov
dec
mov
dec
cli
pop
push
cs
mov
in
or
xchg
mov
repnz
cli
lds
jnp
loop
mov
xchg
movsl
inc
jg
pusha
addr16
and
je
incb
pushf
sub
sub
out
mov
cmp
aam
mov
lock
jns
jb
pop
add
cmp
xor
inc
imull
inc
aas
enter
dec
jmp
mov
pop
and
mov
inc
sub
inc
into
sbb
or
icebp
mov
imul
aaa
iret
out
cwtl
hlt
xor
subw
dec
mov
push
cmp
filds
out
adc
mov
fnstenv
dec
fdivr
push
clc
inc
mov
push
mov
iret
ss
xor
mov
pop
dec
or
out
ds
mov
imul
mov
ja
jb
out
in
out
pop
xlat
mov
cmp
jle
mov
xor
mov
sar
rorl
mov
or
imul
sub
jp
push
pop
and
jl
add
fiadds
cli
cs
mov
repz
cmpsl
jno
mov
ficompl
incl
arpl
in
ret
lea
inc
in
rclb
daa
mov
fsub
mov
mov
mov
fnstcw
dec
shlb
inc
mov
stc
and
call
mov
aam
jnp
mov
rcll
ss
fisubs
xchg
sbb
jb
rolb
iret
test
push
cmpb
cwtl
outsl
mov
mov
dec
add
xorb
sti
jno
aad
movb
in
xchg
addr16
mov
xchg
ss
fwait
adc
cwtl
lcall
mov
push
jnp
mov
andb
and
mov
fldl2t
xchg
rcrl
cmp
xor
loope
idiv
pop
cmp
fidivrl
std
push
cwtl
and
adc
mov
adc
clc
repnz
scas
bound
test
cmp
aam
mov
into
les
jno
mov
in
scas
pop
inc
aam
pusha
xchg
data16
push
and
in
mov
fstpt
lods
clc
outsl
ds
fs
scas
int
jge
andl
sbb
dec
nop
mov
push
and
inc
test
sub
fprem
cmc
add
mov
push
cltd
in
mov
adc
movsb
scas
push
sbb
cmc
cmpb
dec
dec
in
popf
pop
rcr
and
mov
loop
lods
and
xlat
sbb
adc
pop
inc
insl
addr16
cmpsb
lcall
xlat
stc
jae
ljmp
xchg
addl
or
xchg
mov
sub
pop
sub
lahf
add
push
in
insl
out
sub
call
mov
push
ss
dec
or
and
sarb
add
jle
scas
test
insb
pop
in
orb
loop
jno
ljmp
inc
push
sbb
inc
add
and
mov
scas
sub
jo
cmp
sbb
fcomip
push
mov
adc
dec
sahf
cltd
std
pushf
or
pop
jns
leave
lret
xchg
jg
jne
xchg
xor
xchg
out
inc
xchg
mov
leave
out
pop
test
fnstenv
cmc
xor
aad
cmp
es
out
out
dec
and
fldenv
std
adc
sbb
das
pxor
jmp
test
and
jge
pusha
movl
push
out
jg
jg
imul
sbb
inc
popa
cmp
mov
or
les
lock
popa
xchg
outsl
aam
push
mov
adc
pop
pop
xchg
decb
mov
jnp
push
jle
pop
push
loope
cs
stc
xchg
and
ss
pop
adc
es
in
mov
pop
frstor
mov
outsl
xorl
dec
sbb
mov
push
lret
shr
dec
mov
push
loopne
add
inc
xchg
push
shlb
or
insl
pusha
jge
sbb
jo,pn
inc
mov
stos
lret
adcb
lds
lea
in
leave
pop
jmp
push
mov
and
sub
xchg
dec
jp
dec
ffree
dec
mull
cwtl
inc
and
lods
aad
cld
out
dec
je
loop
movsb
fwait
testb
je
jg
mov
adc
xor
mov
push
jbe
mov
inc
mov
data16
dec
pop
stos
loope
or
js
push
mov
dec
leave
dec
cmpsl
aam
icebp
repz
cld
pushf
adc
jecxz
or
xor
out
jmp
insl
sti
in
and
jp
aad
push
out
mov
fsubp
dec
inc
pop
mov
pop
loop
mov
mov
cmpb
in
les
loopne
movsl
hlt
pop
xchg
cld
and
shlb
inc
add
xorl
sbb
hlt
dec
mov
loop
jnp
mov
out
pop
mov
arpl
or
push
mov
mov
mov
leave
push
fwait
movsb
int
xor
pop
bound
mov
pop
or
inc
inc
inc
in
mov
mov
mov
push
inc
in
lods
jno
cmpsb
sub
jl
lods
mov
popa
leave
mov
sbb
lret
cmp
jns
divb
mov
push
mov
xchg
and
xor
cmpsl
mov
jg
loop
cmp
ret
inc
stos
push
leave
mov
in
dec
lret
jg
aas
mov
sbb
ret
out
lods
data16
inc
movsb
leave
inc
aam
push
push
icebp
icebp
addl
mov
clc
pop
add
cmp
je
mov
out
cmc
push
xchg
ljmp
fcoms
repz
pop
in
cmpsl
fisubrl
lahf
cmpsb
div
mov
adc
nop
pusha
std
xchg
adc
nop
cwtl
xor
jle
xchg
lods
fisubrs
sbb
dec
add
scas
daa
fisttpll
inc
cmp
mov
stc
cwtl
gs
lea
pop
pop
jb
pop
adc
pop
inc
cmp
repz
push
fstpl
lret
inc
andb
xchg
and
mov
cltd
xchg
push
or
cld
or
mov
test
inc
mov
jmp
arpl
add
pop
pop
popa
adc
insb
cmc
es
push
fs
aad
xchg
aam
mov
test
or
divb
ljmp
jo
insl
push
jp
fimull
ret
cmp
sti
shrb
stc
repz
sbb
cmp
fimuls
mov
es
cld
mulb
sti
push
sbbl
push
mov
xor
and
push
aas
mov
ficompl
mov
pop
jae
das
enter
das
xchg
and
outsl
fcoms
bound
cld
mov
bound
cmp
in
and
popf
in
mov
push
call
lcall
in
sbb
addr16
xchg
or
mov
int3
add
mov
inc
pop
xor
sbb
cmp
jp
sti
mov
xor
jmp
cld
sbb
rcrb
in
pop
cmp
daa
mov
fs
jmp
pop
lret
mov
popa
sbbl
addr16
outsl
add
jecxz
mov
cmp
out
xlat
pop
les
subb
popa
sbb
jnp,pn
rorb
lock
shrl
cmp
mov
arpl
jo
and
lret
inc
jle
je
int3
cwtl
stos
lcall
dec
xor
xlat
daa
mov
mov
out
push
fwait
arpl
loop
sbb
fstp
mov
add
cmpsl
aad
xor
or
mov
mov
loop
mov
inc
xor
test
adc
push
lcall
test
ret
mov
sub
mov
push
shll
shlb
imulb
adc
mov
fnstsw
sub
push
xor
or
adc
dec
mov
cmp
mov
jb
dec
xchg
test
fs
test
mov
in
lock
es
aam
cmc
mov
mov
andb
push
push
je
mov
push
lret
ljmp
dec
pop
das
xchg
mov
arpl
sbb
nop
hlt
clc
adc
and
in
jb
mov
adc
adc
xchg
push
hlt
cmp
sub
push
and
gs
bound
mov
aas
mov
mov
loopne
dec
nop
pop
sub
iret
add
mov
inc
aam
ret
les
pop
or
pop
sbb
and
sbb
loop
mov
aad
stos
jecxz
lods
ss
les
add
out
jecxz
inc
inc
in
addl
mov
aam
cmp
pop
testb
enter
inc
out
add
sbb
xchg
mov
dec
pop
jne
les
jl
mov
lahf
push
dec
adc
jbe
out
add
je
inc
xchg
mov
jge
cmc
lods
jmp
adcb
xlat
mov
sub
in
push
fs
loope
mov
mov
lea
addr16
and
mov
jmp
test
dec
loope
movsb
orb
mov
inc
lret
mov
popf
push
xchg
pop
adc
dec
negb
pop
hlt
mov
addr16
push
imulb
xchg
inc
cmp
into
cmc
mov
and
ds
push
push
cmpsb
scas
pop
pop
test
es
in
jno
or
jmp
push
xor
popl
outsb
bound
jecxz
xor
test
ss
es
dec
stos
js
inc
dec
mov
cmp
testb
and
fldt
loop
lods
je
dec
dec
cmp
popa
mov
fildll
push
mov
fcoms
pushf
pushf
push
negl
lret
dec
in
xlat
or
mov
inc
sbb
sub
scas
add
add
jle
das
test
aam
stc
sub
and
rorb
nop
mov
and
push
cmpsl
mov
jnp
fdivl
repz
fidivrl
dec
ficoms
je
sbb
xor
mov
sbb
or
add
jne
mov
jl
sub
add
out
push
add
pop
pop
nop
fildll
subl
push
cli
pop
cmc
cmp
jecxz
sub
xchg
repz
lods
repz
xchg
pop
sbb
sub
je,pt
push
or
and
call
sbb
mov
sub
shll
roll
stos
or
sub
loop
aam
jbe
aas
adc
cld
xor
ret
mov
andb
repz
mov
mov
sbbb
iret
sahf
lahf
mov
add
pop
movsl
ljmp
rcrb
and
sub
movsl
mov
cmp
aas
fisttps
std
mov
cmp
push
das
pusha
push
adc
fcoms
dec
inc
xchg
push
pop
cmp
aad
and
repnz
pop
in
pop
add
xor
out
sbb
call
xor
add
in
mov
cwtl
sbb
in
jnp
cmp
gs
or
fadds
pop
cmp
les
cmp
add
int
stc
pushf
data16
inc
mov
xor
fucom
mov
popa
xchg
push
pop
xchg
jl
mov
ror
sub
xor
push
mov
xor
lea
lock
adc
or
cmp
scas
pop
pop
sub
xchg
jge
bound
adc
and
fsubl
lds
movswl
pop
ret
xchg
pop
xor
sbb
cmpsl
repz
sub
pop
inc
in
les
mov
mov
cmpsb
adc
cmp
lret
mov
push
pop
lcall
pusha
pushf
xchg
andb
mov
and
and
cs
fdivrs
mov
lods
sti
dec
out
mov
adc
test
add
imul
jmp
dec
outsl
subl
inc
push
mov
jbe
pop
or
mov
popa
test
dec
jecxz
adc
adc
popf
xor
fnstenv
push
les
mov
je
mov
lret
sbb
pop
pop
repz
or
mov
push
fstl
xor
jge
inc
pop
jl
add
xchg
and
lock
mov
test
inc
xchg
mov
pop
jne
mov
aaa
mov
and
pop
dec
adc
mov
inc
sub
arpl
xor
popa
arpl
push
push
popl
int3
or
test
aaa
test
xchg
or
loope
xchg
xchg
shrl
loopne
adc
and
cmc
aas
orl
xchg
negb
iret
adc
mov
loop
pop
push
test
push
rcrl
int
movsb
cmc
mov
out
dec
pushf
or
pop
mov
into
push
movsl
sub
test
xor
dec
loopne
shrl
insb
loopne
repz
or
cmp
aam
pop
xchg
adc
mov
mov
in
gs
or
mov
clc
repz
push
push
imul
sti
pop
lret
rcrb
cmp
jmp
and
xor
mov
and
loop
idivl
fdivrl
sub
lods
fistl
popl
sub
sub
sub
stos
xlat
scas
int
jle
or
xchg
sub
mov
or
ljmp
fndisi(8087
pop
enter
push
xor
or
dec
or
int
push
shr
xchg
push
pop
nop
cli
sbb
add
sti
cwtl
mov
jns
mov
mov
test
pop
imul
dec
mov
mov
cmpsb
call
mov
ss
les
lds
jle
test
ljmp
es
mov
imulb
imull
dec
cmp
push
pop
sahf
xchg
pop
sahf
or
jae
push
xchg
test
push
hlt
lods
pusha
sub
mov
sar
mov
ret
jp
and
or
dec
cmp
hlt
enter
xorb
nop
add
dec
shlb
ljmp
adc
mov
jl
dec
test
xlat
pop
into
sub
icebp
inc
mov
scas
mov
loopne
hlt
xchg
pop
dec
test
loopne
sub
xchg
mov
jae
scas
cmp
js
out
outsb
lret
cmp
or
mov
or
jbe
movsl
or
xchg
leave
mov
sbb
jo
xchg
dec
mov
out
pop
das
movsb
jge
cmpsb
divb
loop
cs
movb
addb
adc
mov
lea
call
inc
or
test
and
ficomps
xor
sahf
out
scas
sti
out
jno
stc
insb
in
notb
fcmovbe
sub
push
mov
xor
sti
outsl
fcmovnu
jp
mov
mov
cld
mov
cmp
leave
sub
pop
es
pop
in
and
xchg
add
sub
mov
mov
or
outsb
dec
test
ja
popa
imul
and
arpl
jne
dec
dec
cli
mov
inc
mov
xchg
int
imul
xchg
mov
sbb
mov
xor
stos
push
add
dec
pop
sbb
push
decl
das
mov
dec
sub
outsl
scas
add
fcom
jae
sarb
js
lea
fdivl
mov
les
jo
test
and
test
aaa
ficompl
fcmovne
ljmp
xor
mov
lods
mov
push
xor
fcoms
mov
std
xor
rcll
shll
mov
sbb
fisttpll
and
mov
pop
inc
jge
jecxz
test
stos
inc
ds
sbb
int3
sbb
xor
cmp
mov
hlt
repnz
xor
ror
add
and
sahf
lahf
mov
push
into
lods
push
inc
adc
add
pop
jns
cmpsb
out
adc
pop
mov
dec
out
bound
fsubrl
lock
loope
jg
xchg
test
sbb
pop
cmpsb
push
sbb
rorb
fdivrp
xchg
test
adc
lcall
test
inc
sbb
ret
nop
imul
ret
daa
sub
ljmp
leave
repz
lcall
xchg
xchg
fsub
int
imul
mov
sbb
mov
rolb
mov
mov
sbb
inc
outsb
mov
leave
ficomps
mov
push
xor
movsl
xor
inc
push
adc
pop
das
xchg
cmp
or
test
adc
pop
movsl
addr16
xor
fstl
or
adc
pop
imul
sub
inc
lcall
or
pop
jp
aam
enter
loope
xchg
xchg
cmp
ret
cs
jp
lret
lret
push
and
shlb
fnstenv
pop
iret
push
mov
je
sbb
or
ljmp
cmp
shrb
rcrl
pop
mov
das
inc
jecxz
addl
jnp
sub
out
xor
movsl
pushf
movsb
inc
cmc
cwtl
in
and
int
mov
aad
adc
hlt
jmp
dec
add
je
pop
lods
mov
fnstcw
dec
jp
hlt
push
lret
adc
mov
js
xchg
adc
sub
dec
mov
jl
and
imul
gs
and
js
fisttpl
scas
xchg
jae
addl
or
lret
pusha
xchg
xchg
aam
pop
pushw
or
cld
hlt
sbb
dec
cld
js
cmc
test
sahf
sarl
cmp
xchg
xchg
inc
adc
push
js
inc
push
push
js
pop
outsb
xor
xchg
clc
in
jb
jbe
popa
lods
jmp
jmp
push
cmp
pop
mov
std
stos
bound
jle
adc
sbb
rolb
jb
pop
inc
loop
scas
inc
int
push
jno
dec
sbb
adc
test
gs
call
mov
bnd
pop
xchg
lods
sub
pop
lock
add
divl
and
adc
inc
and
icebp
jecxz
movsb
hlt
xchg
mov
rclb
sub
push
mov
bound
or
and
addl
sub
cmp
loope
dec
sub
aas
cmpsl
or
mov
jge
enter
mov
bound
dec
adc
pop
mov
pop
pop
les
mov
ret
daa
shl
mov
bswap
call
xor
mov
daa
push
cmp
cmp
push
push
das
push
jo
or
adc
les
mov
sbb
push
ljmp
pop
push
test
lret
test
adc
inc
fsubp
jecxz
enter
dec
sbb
jecxz
repnz
cmp
pop
mov
fcmovu
pusha
loopne
call
xchg
fdivl
scas
sti
mov
icebp
mov
add
add
fists
in
inc
lods
aaa
cmp
adc
pop
les
inc
xor
sbb
aaa
orb
mov
test
sbb
fildl
sbb
movsl
xor
add
xlat
add
inc
mov
sbb
ds
aad
stos
sub
inc
rorl
jle
pop
jmp
mov
and
popf
fnstenv
in
adc
push
imul
mov
pop
mov
lods
subl
fisubs
or
push
or
cli
lea
test
fwait
pop
lods
and
sbb
sbbl
dec
mov
loopne
cmpsl
jno
adcl
lods
cmp
xchg
push
sbb
dec
pushf
in
xor
js
sbb
fldl
sarb
lds
cmp
test
sbb
test
add
fidivl
cmp
xchg
xor
mov
in
and
cmp
idiv
push
mov
outsl
ds
pop
push
int3
jle
data16
test
sbb
cli
and
int3
mov
sbb
dec
rolb
dec
or
sub
inc
jne
adc
scas
mov
out
xchg
mov
rorb
sbb
in
nop
arpl
rorb
cmp
cmpl
sub
mov
lods
std
push
imul
push
mov
sub
adc
inc
sahf
mov
pop
adc
push
jge
shll
add
dec
sbb
pop
jae
or
push
sub
ljmp
jle
mov
cli
stos
gs
dec
cmp
adc
xchg
jb
out
xor
das
in
ja
movsl
hlt
inc
add
or
pop
out
je
xor
jbe
lret
inc
push
es
sub
ret
sub
push
mov
je
and
add
mov
add
aaa
fdivl
fistps
ja
aad
push
ret
in
shll
rcl
and
cwtl
cmpsb
fnstenv
in
xor
loopne
in
jge
lcall
fldcw
push
shl
les
pop
daa
sub
add
aad
inc
push
sub
mov
scas
out
cltd
in
in
sbb
and
pushf
dec
sbb
adc
movsb
gs
dec
xchg
xchg
mov
xor
pushf
mov
xchg
dec
scas
mov
cltd
or
xlat
adc
cmpb
scas
mov
adc
adc
cld
cmc
addr16
sub
rcrl
or
sub
and
push
add
cmc
dec
pop
rcrb
or
mov
out
andl
lds
ljmp
das
sbb
xor
push
cmp
cmpsl
or
aad
and
dec
jns
sub
sub
pop
movsb
aaa
pop
cmp
jge
fisubrl
pop
xchg
lods
or
popa
dec
pop
aaa
xchg
leave
test
stc
adc
sbb
xchg
icebp
ficompl
mov
in
popf
sub
mov
aas
nop
scas
ret
mov
jno
push
loopne
jecxz
mov
or
popw
jbe
jmp
sbb
or
xchg
sub
imul
add
push
dec
sub
into
addps
mov
push
dec
jo
dec
rorl
jl
test
movsl
adc
inc
jecxz
xor
pop
dec
sahf
pop
arpl
pop
mov
sbb
ret
mov
fwait
cmc
gs
push
jo
movsb
test
jbe
adcl
push
sbb
cli
mov
dec
pushf
pop
lock
and
cmp
lock
popf
cmp
pop
icebp
shlb
xchg
cmp
lcall
fldl2e
jbe
ljmp
data16
xchg
mov
es
mov
leave
nop
fidivrs
or
aam
add
enter
dec
jb
fildll
ds
ds
xchg
adc
sbbb
popa
mov
sub
out
push
dec
jb
mov
mov
lret
push
jg
jmp
xchg
inc
ja
adc
mov
push
pusha
clc
mov
movsl
rcr
mov
adc
mov
xchg
inc
jmp
fs
fisttpl
and
jl
icebp
out
and
xor
icebp
std
xchg
cmpsl
adc
mov
mov
pop
adc
jmp
divl
mov
push
aam
push
arpl
xchg
dec
es
ds
lods
jne
cltd
ss
dec
test
push
clc
and
lods
in
adc
mov
lea
pop
je
mov
lock
push
stc
xchg
gs
fistps
in
sub
add
dec
and
fnstenv
repz
fstl
inc
push
pop
mov
push
mov
adc
imul
pop
mov
test
inc
cmpsb
outsb
int3
jge
pop
xchg
or
scas
pop
test
out
imul
fnstsw
or
sub
push
cmp
aam
or
divl
icebp
xor
test
mov
pushf
shr
mov
pop
rorb
aad
dec
int3
jno
xor
sbb
push
sbb
lret
and
enter
or
and
jbe
xorb
push
je
jno
sbb
ret
adc
mov
repz
es
pop
mov
out
cltd
adcl
mov
movsl
lock
test
add
je
outsb
loop
aaa
outsb
nop
xlat
pop
mov
jle
mov
rolb
inc
loope
sti
sub
cmp
lret
gs
xor
sub
dec
jmp
mov
pop
call
or
ret
shl
push
ret
test
mov
mov
shl
add
in
add
daa
lods
xchg
sbb
movsl
lret
sub
jnp
lock
xchg
cmpsl
xlat
mov
pop
orb
jge
xchg
mov
lock
mov
arpl
mov
stos
mov
movsl
xor
mov
jmp
jmp
jl
out
ds
mov
push
icebp
adc
stos
in
test
xor
mov
shl
or
bound
add
mov
hlt
addl
or
pusha
mov
outsl
inc
mov
data16
std
mov
inc
daa
and
insb
insl
jbe
es
mov
aam
mov
call
aad
out
push
repz
sahf
subl
lcall
rcrb
sar
js
loope
test
xlat
mov
mov
shll
sub
test
cld
data16
cmpsb
mov
lcall
xchg
mov
ret
mov
test
sub
fldenv
stos
add
push
mov
sub
and
jmp
out
mov
out
xchg
fwait
pop
inc
loopne
jb
add
jmp
add
push
or
dec
pop
xor
adc
loop
mov
xchg
addl
mov
xor
ja
sbb
jle
pop
sbb
aam
scas
xlat
and
stc
mov
sbb
mov
mov
loopne
cmp
xlat
subl
push
loopne
xchg
sbb
adc
rcl
cli
outsl
jp
jo
aaa
mov
vmread
lds
das
inc
or
xchg
inc
bnd
xor
xchg
or
xchg
lds
test
mov
mov
mov
jle
or
in
sub
flds
lret
push
mov
cmp
push
les
dec
sbb
and
sbb
loop
jle
pop
repz
addr16
loopne
or
pop
in
imul
jg
sub
mov
insl
cmp
les
sub
mov
fnstcw
das
mov
sbb
test
dec
outsl
cltd
loope
mov
cmp
mov
jbe
adc
mov
and
add
outsb
ja
or
xchg
mov
outsb
insb
iret
lahf
jge
pop
push
daa
or
jbe
out
cli
or
jge
pop
ljmp
cmpsl
sub
loopne
out
negl
insl
xor
add
or
sbb
std
movsl
and
out
ffree
pop
outsb
add
inc
and
mov
sti
ret
sub
xchg
push
ljmp
adc
fsts
insb
mov
mov
je
fdivrs
cltd
sti
sbb
movsb
xchg
jnp
push
jmp
stos
xchg
movsb
mov
sub
adc
rcll
fcompl
dec
lods
mov
mull
lods
fs
add
add
xchg
sarb
mov
cmp
or
inc
ret
sbb
jns
push
test
add
or
sbb
mov
sbb
imul
loope
lea
push
xlat
call
adc
inc
push
test
xor
lea
inc
push
testb
xor
or
inc
fs
mov
dec
dec
pop
xor
sub
and
ficoms
add
xchg
scas
cmp
add
iret
cmp
and
or
cwtd
mov
inc
mov
pop
mov
xchg
dec
mov
mov
inc
hlt
pop
adc
imul
jge
movl
xor
push
push
dec
mov
data16
jl
test
lods
xchg
fmull
mov
pop
repz
adc
pop
xlat
sbb
out
pop
addr16
xor
repnz
adc
mov
and
pop
xchg
out
mov
push
xor
jne
aas
push
push
sbb
mov
imull
imul
mov
fdivr
sbb
mov
gs
mov
and
dec
loopne
dec
call
addr16
pop
cmc
push
fimuls
lods
adc
out
jg
jb
dec
mov
ljmp
xchg
mov
cld
mov
jb
out
data16
jbe
enter
inc
add
xor
fisttpll
sbb
mov
push
lret
add
loopne
outsb
mov
sub
cmp
dec
shrl
nop
push
adc
xor
in
in
pusha
mov
mov
or
mov
sarb
mov
lahf
sbb
dec
test
adc
mov
inc
pop
fists
mov
fwait
lahf
sbb
sbb
add
ljmp
xchg
mov
out
fistpl
pusha
adcb
inc
frstor
divl
mov
dec
mov
xchg
pop
pop
xor
in
cmc
cmp
enter
jb
cld
mov
adc
pushf
int3
fiadds
inc
ret
ds
lcall
xchg
mov
roll
mov
orb
jl
cmp
mov
mov
mov
xor
xor
dec
out
xor
movsb
aaa
add
aam
push
lock
mov
lea
scas
add
pop
iretw
insb
test
cmpl
roll
mov
or
xor
clc
push
mov
sti
loope
cmp
or
daa
pop
push
sahf
inc
pop
jno
in
cmp
pop
xchg
or
lcall
xchg
jns
aam
mov
out
push
sahf
xchg
pop
fmull
dec
mov
fucomi
in
push
sub
sbb
ret
sbb
hlt
pop
jnp
mov
or
hlt
xor
xchg
sub
or
lret
push
inc
sarb
nop
mov
inc
sub
pop
mov
iret
cmpsl
insb
iret
push
stos
mov
stc
or
imul
in
sbb
mov
pusha
adc
cld
jo
mov
bound
pop
imul
jno
fisubrs
enter
pop
cltd
jmp
ret
movsb
inc
xor
js
jge
popf
adc
sub
sahf
shll
push
mov
insb
test
add
mov
sub
jecxz
push
push
add
enter
and
cld
push
ja
sub
out
mov
stos
jb
adc
ja
pop
push
sbb
jbe
xor
daa
cli
and
mov
sub
andb
mov
cltd
sahf
icebp
mov
push
popf
iret
leave
pop
mov
sub
inc
mov
ror
lods
fs
or
int3
shr
dec
jmp
xor
adc
ret
dec
mov
cmpsl
mov
sbb
mov
xchg
cmc
ljmp
mov
inc
lods
pop
ret
in
pop
xchg
popa
pop
mov
cmp
adcl
loop
push
xor
pusha
pop
sbb
clc
add
mov
arpl
stos
popf
shlb
mov
ds
inc
ljmp
pop
sbb
test
xor
mov
fwait
push
sahf
dec
jbe
test
in
std
push
popa
or
adc
jb
adc
or
cmp
sbb
and
jae
mov
push
adc
or
aam
les
inc
shlb
xchg
mov
jns
in
push
push
jns
and
xor
mov
imul
lret
dec
mov
andl
ficompl
and
insl
imul
cmp
add
stc
mov
push
xor
adc
pop
add
iret
fst
xor
cmp
outsl
sub
call
nop
loop
orl
xor
es
enter
mov
lds
out
xor
repnz
out
bound
pop
xchg
mov
push
jno
mov
das
mov
adc
pop
jl
pop
call
sbb
test
pop
lcall
push
mov
push
pop
pop
mov
cwtl
nop
inc
cmp
mov
aaa
add
mov
movsb
test
ror
add
adc
shrb
aad
mov
mov
cltd
xor
dec
mov
push
push
jp
cmp
jno
pop
mov
push
mov
adc
xchg
adc
mov
data16
lds
xor
xchg
mov
inc
sub
pushf
mov
je
dec
or
inc
pusha
int3
out
test
pop
outsl
outsl
pop
cmp
dec
fsts
icebp
into
dec
nop
in
inc
xor
mov
cmp
mov
mov
mov
scas
fimuls
jmp
add
cmc
lret
leave
sbb
lods
xchg
xor
jp
mov
call
adc
push
pop
test
std
pop
push
jg
or
shrb
adc
or
dec
mov
leave
cli
imul
outsb
lock
sar
xchg
adc
movsl
sub
push
jnp
xor
fwait
loop
xor
xchg
stos
jl
js
adcb
xlat
in
lods
add
push
jge
pop
xor
inc
adc
sub
cmp
daa
data16
jg
cmpsb
popf
sub
icebp
in
insl
and
adc
dec
jp
push
add
aam
xchg
push
clc
xor
mov
push
mov
js
lret
sub
mov
je
push
jns
dec
scas
cmpl
pushf
shl
pop
inc
scas
adc
inc
and
adc
pop
xor
push
mov
negl
pop
add
iret
aam
and
mov
scas
pop
orb
fcomps
and
ljmp
es
xor
push
jne
cltd
shll
jp
cmp
and
dec
pop
mov
ficomps
jecxz
sahf
pop
mov
push
or
push
dec
rep
loopne
into
xor
ljmp
aas
mov
iret
loopne
lock
addr16
xchg
fsubrl
repnz
xor
or
scas
lds
into
mov
mov
pop
xchg
mov
add
mov
test
xor
adc
ljmp
sbb
lods
xlat
mov
clc
dec
inc
lock
shlb
shlb
lahf
mov
dec
in
jbe
pop
cmp
jle
scas
inc
loope,pn
sbb
pop
sbb
xor
pushl
xor
cmp
pop
es
mov
xor
sbb
push
std
adc
scas
pop
adc
or
pop
dec
mov
or
test
fistps
pushf
jmp
mov
out
sbb
shrl
mov
cmpsl
cmpsl
mov
jb
sbb
in
sbb
xor
xchg
cmp
pop
push
cwtl
sbb
adc
loopne
jnp
push
sbb
jmp
xchg
mov
jle
or
cmc
mov
mov
mov
dec
idivl
sahf
vpmulhuw
jne
lea
push
popa
xchg
rcr
sbb
cmp
xor
sbb
lret
fsubrs
add
stc
mov
pop
lcall
pop
xchg
mov
push
adc
add
andb
or
fwait
gs
out
add
mov
out
enter
add
mov
sub
mov
loop
test
sub
and
xchg
xchg
outsl
or
outsb
fldenv
in
mov
mov
inc
sbb
fwait
add
pop
idivb
cmp
jnp
loop
pop
mov
mov
fdivrl
sub
jge
cltd
pushf
and
addr16
adc
mov
mov
cwtl
xchg
mov
pop
icebp
mov
ja
mov
mov
call
pop
cmp
movsb
mov
xlat
push
jo
imul
xor
dec
popf
add
movsb
leave
mov
ds
xor
shlb
cld
mov
xor
sti
popa
inc
push
dec
sbbb
mov
or
xchg
int
mov
in
jge
inc
das
push
daa
xchg
ja
neg
and
push
js
call
dec
mov
or
int3
into
or
dec
sbb
push
cli
adc
incb
pop
inc
xchg
std
out
xchg
push
fstps
inc
add
jecxz
xchg
fimuls
daa
inc
and
test
in
xor
push
mov
fadd
pop
xor
mov
xor
lods
cmc
mov
test
pop
outsl
cld
fs
mov
popa
mov
cmp
ja
fs
fstpt
pop
inc
xchg
insb
scas
and
push
mov
jns
ds
sub
out
pop
sub
adc
pop
dec
enter
sbb
push
fs
outsl
or
into
jno
xchg
mov
lcall
adcl
loop
arpl
dec
push
pop
cmp
mov
cmpsb
filds
push
and
mov
sub
nop
int
pop
aaa
push
sbb
xchg
adcl
xchg
xor
fsubrs
jno
or
leave
pop
jmp
testl
xchg
pop
adc
xlat
adc
pop
rcl
push
cmp
cmp
add
inc
jmp
shlb
jl
out
clc
fcomps
or
add
movsl
mov
lcall
cltd
out
cmp
push
inc
jmp
mov
add
cmp
or
dec
popl
mov
xorl
inc
cmp
sub
popf
mov
or
scas
jge
xor
iret
aas
cmc
jae
xchg
testb
lret
mov
iret
stc
pop
cmp
fmull
ja
sub
pop
and
inc
xchg
pop
adc
sub
cmc
out
or
or
gs
push
jle
xchg
test
xchg
jne
lret
rorb
stos
pusha
push
ret
lock
mov
fldt
ret
daa
mov
mov
cmpl
in
loopne
jmp
aaa
lahf
and
mov
sub
pusha
jl
sbb
mov
stos
mov
out
jmp
in
das
sbb
push
adc
pop
bound
push
push
cmpsl
adc
pop
shl
popl
adc
lcall
bound
ds
das
int3
cmp
scas
pmaxsw
inc
or
xor
dec
out
fdivl
mov
sub
mov
cltd
testb
lret
insl
jl
mov
test
add
mov
in
mov
push
int
jne
mov
in
dec
hlt
pop
les
outsb
lahf
pushf
jae
rcll
and
bound
jp
jge
xchg
xor
mov
loope
mov
inc
sub
icebp
lea
mov
push
jl
sbb
frstor
and
fisubrl
sarl
mov
hlt
adc
cmp
js
inc
ja
js
outsl
mov
mov
and
mov
mov
insb
adc
cs
test
out
add
sbb
xchg
push
inc
fdiv
nop
pop
stc
cmp
out
hlt
adc
sti
aam
sbb
loop
scas
pop
mov
jg
into
jle
sub
jnp
jle
rorb
fwait
loopne
inc
mov
xchg
xchg
mov
sar
pop
into
xchg
dec
cmp
dec
std
das
inc
pop
push
cmp
pop
fwait
cmp
test
mov
pop
hlt
mov
test
sub
mov
xchg
cli
cs
cmc
fstps
int3
add
outsl
dec
dec
xchg
xor
ja
xor
test
jl
call
lret
sbb
push
xor
sub
in
stos
sub
in
test
sbb
js
hlt
pop
sbb
call
dec
arpl
jno
jge
or
pop
sub
fisubrl
sub
out
inc
or
out
test
fdivl
pusha
dec
cmp
push
out
rorb
outsl
iret
push
push
xor
lds
add
mov
stos
xlat
and
mov
or
jmp
mov
test
xlat
jl
test
add
ljmp
jle
shll
push
mov
sbb
das
inc
pop
and
inc
mov
adcl
dec
call
fdivr
mov
pop
cld
sahf
pop
jb
addb
cmp
pop
push
sbb
loope
je
icebp
adc
test
in
popf
pop
mov
mov
add
movsl
add
jb
loop
sbb
pusha
fistpll
xchg
loope
jle
jne
push
sbb
xchg
std
or
pusha
push
pop
jne
stos
push
das
push
jo
sahf
movnti
mov
fsts
aam
out
xchg
pop
or
jb
fs
pop
adc
sub
sahf
inc
add
ja
mov
or
cmovs
pop
ret
xor
inc
nop
and
jecxz
loop
inc
clc
enter
push
mov
out
lahf
movsl
push
rorl
fwait
sbb
rcll
sub
jb
mov
mov
cmp
shl
or
sub
fdiv
pop
out
or
int
push
sub
add
loop
push
pop
sahf
inc
iret
push
test
sbb
cmp
popa
test
aas
mov
in
jmp
sbb
jbe
data16
sbb
xor
xor
pop
sbb
sti
or
xor
stc
rcpps
dec
mov
pushf
fsubr
mov
xlat
cmpsb
jg
inc
add
mov
pop
mov
cmp
add
enter
push
test
add
sbb
pushf
lea
xchg
xchg
es
out
mov
jle
pop
sti
outsl
mov
out
sti
push
add
jmp
rol
stos
in
pop
lcall
cmp
movsl
xor
jae
jge
outsb
test
fldt
out
dec
lcall
jge
push
scas
ljmp
pop
pop
mov
mov
jo
lea
fwait
adcb
inc
movsb
jbe
inc
pop
xor
xorl
mov
fnsave
out
or
xchg
mov
pushf
jg
mov
andb
jp
inc
icebp
adc
and
repz
mov
and
cmpb
dec
pop
rorl
sarl
push
pop
imul
loope
imul
mov
push
cld
push
mov
or
pop
mov
fistpl
fidivs
ss
jmp
adc
add
xchg
pop
mov
push
mov
add
test
adc
pop
movsb
rep
rorl
jg
xor
add
andb
loope
push
push
mov
in
outsb
jbe
add
daa
jns
mov
repz
out
es
and
sbb
cmp
pop
js
cmp
mov
gs
push
sub
cmp
pop
popf
cli
in
mov
or
adc
and
inc
cmp
push
int
adc
orb
popa
pop
sbb
push
cli
mov
xchg
jecxz
scas
jbe
adcl
jnp
fistps
jnp
roll
movsl
mov
mov
sti
sub
and
lods
jne
loop
pushf
das
dec
int
lret
cmp
cs
cmpsl
cmpsl
cmpl
je
push
and
out
js
inc
add
leave
push
subb
sti
popa
inc
repz
dec
pop
in
pop
jge
outsb
cld
incb
ds
xor
mov
jb
push
cmp
cld
push
aas
and
movsl
lods
adc
inc
das
cmp
fstpl
stos
in
sub
pop
cmp
mov
pusha
add
inc
jmp
add
jno
dec
cmc
adc
push
jae
mov
int
push
fdivrl
cmc
nop
mov
pop
cmp
aam
mov
test
mov
and
xor
and
out
sub
push
pop
cwtl
lret
mov
scas
mov
xchg
filds
cmp
leave
arpl
cmp
xchg
sub
cwtl
outsb
nop
jb
mov
inc
adc
mov
int
lret
pop
divl
jnp
aaa
aam
mov
fnsave
or
cmp
cli
ror
push
jno
mov
adc
mov
sub
int
cmp
bound
loopne
push
adc
icebp
cmp
aaa
lods
fcmovbe
js
dec
imul
cmpsl
stos
arpl
jne
pop
jle
mov
loope
enter
test
imulb
jne
mov
cli
gs
xchg
push
mov
mov
stc
jno
push
mov
jo
les
lock
loope
lret
mov
sarb
rcll
mov
jle
out
dec
cld
pop
push
lret
das
aas
jg
das
inc
ret
jmp
scas
sub
pop
frstor
mov
leave
sub
in
jp
iret
lret
outsl
lret
jmp
push
bound
scas
lock
and
cmpl
int
push
jne
inc
pushf
ljmp
sub
bnd
pop
scas
push
dec
loopne
in
push
jno
xchg
vpmacssdql
fs
int3
cmp
out
hlt
mov
ret
cwtl
push
fnstenv
or
lods
addl
push
xor
push
enter
adc
inc
xchg
push
call
icebp
aad
popa
xchg
fisubrs
es
lea
adc
cwtl
pop
inc
jge
rcll
int3
imul
jl
dec
fcoml
andb
loopne
out
mov
jmp
jb
popa
and
lods
rcl
add
outsl
dec
push
cwtl
add
sbb
jno
push
imul
or
mov
lahf
aad
fs
lret
daa
imul
add
add
or
dec
lods
pop
jae
in
scas
or
inc
sbb
imul
lds
lret
adc
xchg
fdiv
push
popa
lds
or
cmp
add
or
mov
fnstenv
xchg
xor
rcrl
push
std
cmp
ficoml
xor
sbb
aam
popf
stos
mov
pushf
sbb
test
gs
push
in
in
sub
jl
loopne
das
call
lods
repz
mov
fcmovbe
push
xchg
xor
icebp
test
test
xlat
sub
pusha
pop
shrl
iret
outsb
bound
fcmovb
cmpsb
xcrypt-ofb
cmpsl
jmp
lahf
stos
cmpsl
or
jno
mov
mov
clc
mov
in
pop
add
mov
sbb
fimull
lds
ss
push
xchg
fsubrs
mov
cwtl
cwtl
divb
and
gs
mov
jnp
pop
data16
popf
dec
adc
xor
popa
aad
push
lret
push
es
lret
mov
push
daa
in
cmc
jnp
dec
pop
in
test
loop
int3
int3
mov
ja
push
push
aaa
cmp
sub
pop
jge
xchg
dec
cmpsl
popf
add
pop
lods
adc
or
mov
pusha
shll
mov
xchg
adc
sbbl
lods
mov
hlt
push
stos
out
insb
int
subl
jb,pn
jns
pop
popa
ljmp
or
pop
shl
adc
mov
pop
in
push
jg
clc
mov
aad
push
sub
data16
push
inc
push
fadds
xchg
mov
mov
xor
sbb
xor
in
into
adc
cmp
lods
jge
and
fdivr
xor
ret
push
xchg
mov
dec
mov
imul
mov
mov
lock
xchg
mov
outsl
repnz
lods
ss
cld
stos
ss
arpl
mov
int
adc
pop
frstor
mov
push
mov
stos
mov
xchg
cltd
dec
jmp
fcmovnu
test
scas
aam
xor
sub
sub
push
add
xchg
jo
pop
jns
add
mov
adc
sub
test
ljmp
mov
sub
shlb
jae
sub
aad
test
add
lods
or
into
sub
lods
dec
call
or
outsb
push
xchg
sbb
xor
inc
jge
dec
jp
jge
cld
push
mov
loopne
int3
fisttpl
push
push
insl
jl
das
jmp
outsl
in
dec
cmp
xor
and
mov
ffree
lods
imul
mov
xlat
jg
aam
mov
mov
pop
and
pop
or
sbb
or
sub
mov
out
inc
inc
cmp
enter
aam
incb
shr
inc
mov
cmp
sbb
mov
insb
fwait
dec
jne
enter
xchg
push
xor
daa
adc
push
adc
imul
mov
xchg
into
push
adc
dec
repnz
andb
stos
xchg
inc
dec
pop
out
xchg
inc
shl
mov
cld
mov
dec
ljmp
insl
out
movsb
nop
jns
test
inc
outsl
jg
sbb
push
cmc
testb
in
mov
xor
sub
pop
xchg
mov
popf
data16
scas
and
sbb
cs
sub
popf
push
jne
or
push
test
insb
fimuls
sub
mov
or
pop
sub
scas
fwait
out
rcl
stos
scas
adc
mov
xchg
xor
push
sbb
push
sbb
xchg
mov
lret
mov
daa
or
jae
push
sti
stc
divl
sahf
xchg
pop
sub
jp
push
jl
subb
add
add
stc
loopne
data16
lret
je
icebp
dec
adc
imul
in
sub
mov
scas
xlat
mov
mov
mov
das
xor
dec
cwtl
ret
xlat
lods
fcmovnbe
lock
inc
repz
ljmp
push
jns
mov
xchg
cltd
mov
lds
cmpb
test
mov
incb
adc
xchg
data16
scas
xchg
out
inc
imul
dec
mov
sarl
push
sarb
mov
aas
xor
je
add
loope
push
push
popf
cmp
ljmp
pop
cmc
in
inc
and
mov
push
js
cmp
popa
or
mov
mov
outsl
lea
cmpb
jbe
mov
hlt
arpl
dec
test
jns
cmc
or
mov
inc
into
loop
aam
movsl
cld
stos
pop
push
and
out
push
ret
pop
daa
shll
std
idivl
and
stc
int
adc
ljmp
fidivrs
adc
cmp
clc
enter
cmp
mov
adc
ret
in
mov
mov
shrb
and
dec
int
inc
je
and
das
add
adc
pushf
rcll
mov
mov
mov
mov
lock
jmp
mov
adc
scas
rol
pop
hlt
xor
cmp
imull
scas
xchg
sbb
add
sbb
or
lahf
inc
lds
mov
lock
push
mov
aaa
test
fbld
xor
cmp
jecxz
push
xlat
inc
popf
ja
into
jle
mov
mov
divb
pop
fs
daa
ds
mov
pusha
faddl
sub
pushf
inc
and
jmp
notl
je
in
cmp
fldcw
push
sbb
fisubrl
jns
adc
ret
std
enter
test
imul
call
fwait
ret
lcall
sbbl
lods
in
scas
enter
pop
mov
sub
sbb
lods
xchg
inc
dec
and
mov
fs
jb
scas
or
mov
les
decb
and
push
outsl
decb
or
adc
push
jae
cmp
pop
pop
aas
jnp
or
loop
or
jns
adc
nop
jmp
cwtl
push
sbb
or
je
or
sbb
add
shrl
lcall
div
push
cld
sub
lods
adc
jno
lcall
js
dec
pop
inc
pop
int3
and
mov
or
jg
stos
lock
stos
fidivrs
xchg
jge
inc
add
cmpsl
pop
pop
mov
or
test
cld
cli
add
int
dec
push
lea
scas
mov
aaa
xor
ret
in
xchg
pop
adc
push
ljmp
xchg
fdivs
jne
pop
and
jno
mov
jbe
movsb
iret
fsubs
pop
pop
push
imul
mov
inc
sub
sahf
inc
push
adc
sbb
pand
mov
inc
aas
lret
cwtl
mov
adc
pop
sub
adc
insb
scas
popf
test
mov
js
cmp
testl
xchg
cld
cmc
test
out
push
mov
jecxz
dec
jbe
movsl
inc
pop
adc
adc
aaa
minps
dec
push
in
fs
in
pop
inc
test
jb
and
sarb
pop
add
je
outsb
push
add
push
out
mov
daa
jns
dec
mov
mov
rclb
cli
clc
sbb
sahf
inc
add
push
cmpsl
push
scas
inc
pop
mov
aam
add
push
mov
dec
pop
test
xor
shll
cmpl
cwtl
cmpsl
movsl
mov
xlat
sub
lret
fnsave
sub
enter
mov
shrl
call
test
cld
mov
cmp
push
pop
cmovg
mov
lcall
scas
rcrb
daa
popf
mov
cmpsb
lock
mov
push
je
ret
pop
jp
push
fs
gs
out
out
xchg
mov
xchg
and
repnz
lahf
push
in
pop
rorb
jge
cwtl
xchg
mov
es
mov
and
adc
mov
and
jl
xor
adc
push
cld
shrl
mov
push
pop
lock
jl
inc
cwtl
in
lcall
pop
or
xorb
mov
push
call
xchg
fcmovne
mov
lods
jo
aas
xchg
loope
insb
out
inc
out
sbb
add
in
or
or
popa
mov
pop
out
or
aad
mov
negb
outsl
and
stos
dec
call
mov
jae
mov
into
add
daa
into
ja
cmp
mov
sbb
jecxz
js
xchg
scas
ret
xchg
push
push
shll
or
into
sti
shll
out
xchg
cmp
and
hlt
pushf
subb
test
adc
stos
mov
aad
es
xor
jle
bound
push
xor
cmp
dec
xchg
loop
cli
je
mov
fimuls
imul
jle
jo
and
and
mov
lcall
xchg
cmp
adc
cmp
dec
push
push
out
mov
mov
loopne
sbb
push
das
int3
and
push
adc
dec
repz
jb
push
xchg
outsl
pop
xchg
pop
xor
push
sahf
mov
in
and
sbb
pop
lock
fcomi
imull
iret
add
mov
pop
jns
ss
lcall
xchg
sub
aaa
mov
mov
sub
and
mov
aaa
pusha
in
xor
call
push
outsb
mov
je
outsb
dec
fisubl
in
add
shrl
test
cmp
cmp
nop
dec
mov
sbb
rorb
in
mov
shlb
xchg
xlat
xlat
dec
push
lds
add
mov
push
pop
or
and
test
xchg
inc
jp
addl
pop
lods
pop
sbb
popf
jnp
sub
inc
jecxz
sbb
jne,pn
dec
and
cmp
or
insb
pop
out
fnstsw
jle
dec
dec
push
sahf
xchg
inc
add
mov
cwtl
jo
jo
adc
out
btr
in
sbb
sub
lods
imul
xchg
cmpsb
sbb
xor
or
ds
imull
inc
jecxz
xchg
inc
mov
mov
push
mov
xor
and
ja
in
adc
enter
cmp
xchg
inc
pop
pop
imul
xchg
push
mov
push
push
inc
jns
movsb
xor
mov
in
adc
mov
add
dec
lods
xchg
lods
adc
test
mov
jb
imul
cmp
rcll
sbb
dec
or
xor
insb
popf
xor
pop
mov
clc
mov
lods
fldt
lcall
in
xchg
or
push
lea
add
and
dec
lahf
mov
cmpsb
and
mov
lahf
push
arpl
mov
gs
lcall
out
sbb
mov
mov
testl
negb
daa
mulb
push
jo
dec
mov
xchg
movsb
sbb
fldenv
inc
cmpsb
cs
adc
adc
in
ss
pop
mov
pop
das
fists
dec
inc
lcall
add
jmp
sti
jbe
dec
test
mov
popa
sub
push
js
ret
xchg
push
jnp
mov
and
in
mov
adc
fwait
jne
test
jae
mov
scas
in
xchg
stos
das
ja
outsl
mov
rorl
cltd
cmp
mov
add
mov
jle
js
stos
inc
and
jnp
sbb
mov
xor
adc
out
jo
sbb
insb
jl
adc
movsb
xor
sbb
sbb
dec
pop
sahf
xchg
insb
cmpsb
cmp
dec
imul
daa
das
fnstenv
cmp
or
cmc
scas
sahf
mov
es
lock
push
inc
xchg
inc
or
bound
int3
nop
cmp
mov
popl
pop
ss
mov
dec
adc
imul
pop
out
inc
sub
jecxz
push
adc
jp
out
ljmp
push
mov
mov
test
imulb
mov
pusha
sbb
loop
add
mov
lret
test
outsl
movsl
cmp
pop
stc
xor
jo
adc
mov
jb
lea
lea
outsl
sub
out
sbb
pop
fucomp
fisubs
popa
or
int3
mov
jg
jnp
jno
mov
in
push
pop
jns
xchg
es
push
popf
push
dec
jmp
mov
scas
fs
popf
sub
or
aas
loope
nop
imul
jl
jae
hlt
stos
xor
lods
in
insb
mov
loop
fdiv
dec
aam
fisubs
and
sub
inc
dec
in
and
movb
int
pop
jle,pn
test
sbb
xchg
add
les
fnstenv
lahf
lcall
add
pop
inc
mov
stc
test
dec
cmp
loop
adc
jne
mov
shrb
repz
cmpsl
inc
pop
cli
dec
loop
jnp
fmuls
pop
inc
outsl
and
jbe
inc
in
stos
lcall
clc
sbb
aam
lcall
push
stc
lret
jns
or
in
xor
push
aam
stos
cmpsb
lea
push
push
mov
inc
mov
bound
push
icebp
outsb
jbe
cmp
mov
pop
out
adc
aam
inc
xor
sbb
add
jb
mov
cmp
sahf
pop
cltd
adc
mov
push
mov
ljmp
mov
push
sub
jnp
out
cmp
adc
jb
inc
xchg
call
fs
mov
cmc
ficoms
jmp
jecxz
xchg
cmp
pop
test
fsub
xchg
in
and
cmp
mov
pop
pushf
push
sar
push
cmp
or
pop
sub
shrb
popf
mov
in
pop
xchg
xchg
xchg
in
outsb
push
xor
stos
mov
or
xor
outsb
int
mov
test
loope
cld
mov
jp
cmp
adc
dec
lods
inc
je
adc
fbld
test
out
xchg
jns
out
mov
loope
dec
enter
aas
jbe
adc
ljmp
aas
std
fcmove
jne
push
inc
adc
insb
cmp
cmp
les
jb
flds
imul
cmp
xor
fisttps
setne
cwtl
push
imul
scas
mov
int
mov
movb
int3
cmpl
xchg
js
pop
pop
test
test
cmp
jle
test
inc
mov
popf
ret
add
cmp
jecxz
loope
add
in
icebp
jnp
cmp
ljmp
das
in
inc
adc
out
dec
das
iret
lcall
mov
rclb
mov
cld
push
jne
jno
jmp
pop
jno
and
fists
loopne
dec
mov
jnp
loopne
add
inc
imul
ss
aad
mov
or
jmp
cmp
adc
sar
mov
xor
and
push
and
subl
les
stos
adc
dec
mov
jl
mov
mov
jmp
sarl
mov
enter
sbb
jb
std
jmp
add
jmp
pop
pop
loope
sbb
xchg
mov
cltd
addb
movsl
xchg
pop
adc
loope
xchg
shr
pop
in
jns
add
jns
test
adc
fwait
sub
add
outsl
and
mov
loopne
xor
popa
pop
aaa
js
cmp
mov
cmp
dec
stos
cmp
jle
sub
dec
rclb
add
bound
in
jo
mov
add
scas
stc
jp
lods
es
int3
xor
scas
sub
dec
sbb
push
inc
mov
gs
or
sbb
sbb
out
int
sbb
adcl
sub
cmpsb
hlt
sti
jp
inc
mov
shrb
jl
mov
arpl
shrb
pop
sbb
in
ret
or
outsl
push
jbe
xchg
pop
loopne
xor
cmpsl
or
jns
jecxz
xor
inc
aam
aaa
fidivs
sti
imul
stos
out
inc
cmovb
cmp
pop
sahf
jbe
dec
or
or
sbb
cmpsl
dec
inc
lret
cmpsb
push
jbe
std
push
xchg
cmpsl
imulb
pop
adc
cmp
pop
push
push
in
lods
fcoml
loop
popf
or
in
imul
cmp
mov
jo
pop
sub
ljmp
inc
dec
rorl
insl
mov
out
ss
lods
sub
mov
fwait
add
clc
sub
jge
das
loope
out
outsb
movsl
daa
push
sahf
jp
jbe
daa
in
or
ret
outsb
mov
test
and
xor
and
sti
and
jne
repnz
push
xor
and
popa
sub
xor
mov
les
test
sub
pop
or
pop
pusha
jle
xchg
cli
ret
mov
fwait
jno
xor
jmp
leave
pop
xor
rorb
cmp
shll
dec
lahf
push
lock
movsl
mov
sbb
lahf
inc
stos
cmp
cmp
cmpsl
lahf
sub
out
sub
lret
push
mov
mov
sbb
rcrl
cli
call
out
mull
enter
orl
dec
fldenv
test
cli
mov
scas
xchg
push
stc
imul
push
sbb
xchg
enter
xor
mov
arpl
lahf
sti
mov
xor
inc
lret
addl
cmp
mov
mov
clc
gs
fildll
icebp
push
sbb
jmp
xchg
cmp
jnp
out
sbb
cmp
mov
scas
movb
fwait
rcrl
je
xor
push
pop
mov
add
lock
pop
and
nop
xor
xor
rcrb
or
dec
push
xor
outsb
lahf
ret
xor
aaa
daa
push
cmp
test
std
or
push
inc
jecxz
or
mov
out
xor
mov
pop
xchg
sbb
aam
in
dec
outsb
mov
inc
jg
add
pop
loop
pushf
inc
int3
add
xorb
pop
rolb
jmp
inc
dec
add
adc
push
mov
push
mov
sahf
push
sub
pusha
add
js
std
xchg
ret
sub
inc
ret
icebp
xchg
ja
dec
pop
aaa
loop
addr16
call
inc
mov
aas
push
arpl
xor
incb
sub
lea
scas
scas
fsubs
and
dec
lret
jbe
sub
iret
ret
aam
pushf
testl
aad
das
or
insl
xchg
movsb
adcb
mov
lret
push
xchg
mov
filds
mov
aad
push
pop
mov
addl
test
iret
pop
add
add
xchg
xchg
jmp
test
rcl
ja
lods
jp
cwtl
inc
jmp
aad
sahf
sub
cmc
inc
push
lods
sbb
sub
inc
and
cmp
push
add
ja
ss
sahf
xor
rcl
or
xorl
ret
insl
gs
jmp
aas
mov
lock
in
dec
jp
sub
test
jmp
lods
imulb
or
scas
aad
sub
adc
fistps
ror
ss
mulb
push
fidivrs
insb
fisubs
mov
dec
mov
data16
mov
mov
and
loope
pusha
xchg
test
mov
popf
or
add
inc
xor
jnp
sbb
sbb
scas
mov
jno
je
mov
out
inc
jne
dec
push
mov
fsubs
sbb
icebp
push
and
pop
rcl
pop
jp
loopne
stc
sbb
jb
cld
scas
orb
cwtl
jne
andb
lds
dec
in
xchg
addl
adc
clc
inc
loop
loopne
rcr
nop
mov
test
stos
mov
adc
std
aas
mov
outsb
jg
shlb
outsl
in
adc
cmp
mov
dec
sub
in
ret
cmp
adc
pop
xor
test
int
push
add
push
bound
dec
pop
mov
cwtl
add
mov
ret
addr16
sub
pop
mov
out
aam
add
dec
mull
cmp
pop
cltd
add
push
in
shlb
js
sbb
pop
out
popa
lret
imul
das
pop
or
ja
insl
xor
cld
ja
mov
mov
cltd
in
mov
push
inc
lock
cmc
and
pop
aas
das
test
mov
ret
repnz
outsb
cmp
dec
divl
inc
push
jno
cwtl
popa
mov
popf
sahf
lods
push
adc
jns
inc
rolb
cmp
sub
add
xchg
out
out
jecxz
inc
out
jae
pop
mov
insl
adc
ss
xor
push
sbb
into
aam
or
and
mov
mov
mov
pusha
repz
add
adc
mov
inc
jo
fwait
cmp
mov
adc
inc
inc
lods
ror
notl
mov
out
dec
icebp
push
jo
inc
js
inc
dec
pushf
imul
jno
dec
nop
sbb
ret
stos
fdivr
add
push
loop
xor
mov
clc
sbb
in
add
fsubs
test
sub
push
mov
inc
daa
out
pusha
jo
cmpsl
inc
dec
mov
mov
andl
jns
scas
jno
or
xchg
cli
mov
shrl
jl
out
inc
xlat
dec
cmp
jmp
pop
pop
nop
and
or
adc
orb
fists
cmc
xchg
or
pushf
inc
cli
pop
ret
sbb
xor
cmp
negb
pop
insb
movsb
pop
lahf
sbb
or
mov
es
mov
andl
mov
inc
or
jle
sti
lods
sub
lea
pop
and
push
pop
adc
icebp
repz
mov
pop
mov
mov
sarl
movsb
mull
cmp
loopne
fistpl
mov
rcl
or
in
mov
shll
sub
jle
mov
aam
popa
inc
or
mov
mov
jl
pop
fistpll
inc
clc
cmpsb
add
push
inc
out
nop
notl
pop
xchg
jo
fsubrs
mov
push
test
lea
inc
pop
loope
call
add
jmp
jb
je
lret
fiadds
ret
xor
adc
or
jmp
xor
stc
cwtl
pop
int
lahf
pushf
in
sbb
and
push
push
adc
xchg
sbb
jl
out
xchg
dec
sarl
inc
inc
or
negb
pop
mov
outsb
dec
push
jl
ret
mov
ret
sbb
pusha
out
out
dec
push
out
out
mov
inc
xor
lods
jnp
mov
das
xchg
xor
iret
xor
dec
mov
xchg
push
pop
adc
lods
fwait
xchg
int3
inc
xchg
pop
call
sub
imul
scas
and
movsl
or
stos
scas
jae
mov
push
push
xchg
pop
cmp
cli
mov
push
inc
bound
pop
or
sub
cmc
jg
sbb
ljmp
inc
dec
ds
pop
push
js
or
add
inc
cmp
push
mov
test
xor
test
lods
ret
mov
arpl
push
adc
pop
call
xor
mov
xlat
fldt
lret
movl
mov
insb
push
movl
dec
dec
push
or
inc
sahf
add
aaa
dec
sbb
mov
ret
xchg
aas
and
jg
in
xchg
mov
sbb
out
clc
adc
popf
push
imul
push
mov
fstpl
push
mov
lahf
push
or
push
push
push
out
sbb
shll
dec
jns
pop
jo
dec
xor
aam
es
mov
lds
imul
cmp
push
dec
cwtl
mov
mov
and
lock
mov
jae
in
xchg
hlt
adc
lock
mov
xor
mov
pop
repz
dec
inc
in
sahf
aad
inc
mov
push
jge
mov
jbe
mov
in
out
cmp
fcmovnu
call
jecxz
xor
arpl
loopne
dec
jge
pop
insb
arpl
cmp
xlat
jb
fcoml
cmpsb
push
lds
jecxz
mov
push
cmp
and
push
test
and
icebp
jp
roll
jp
negl
into
pop
pop
daa
add
pop
pushf
jecxz
loope
add
les
jb
mov
lcall
push
add
dec
aam
pushf
or
out
insb
icebp
enter
cwtl
fsts
sub
and
or
sbb
shrl
cmc
repz
ljmp
fnsave
xchg
pop
add
and
inc
pop
cmp
sbb
nop
mov
inc
fdivs
dec
xor
mov
sub
pusha
push
jg
js
cmp
jb
and
int3
pop
rorb
pop
cmpsl
pop
mov
push
cmpsb
and
repnz
pop
mov
sub
cmp
rep
inc
daa
pop
cld
or
pop
inc
mov
mov
mov
orb
jge
das
pop
xchg
adc
cli
add
or
jae
add
andl
ljmp
inc
stos
ljmp
in
jb
and
lods
xchg
leave
cmp
test
mov
rcrl
pushf
fildll
push
sub
cs
subb
or
push
push
jmp
jnp
xchg
push
or
data16
mov
xchg
cld
xor
movsl
xlat
in
ret
out
dec
mov
into
pop
cmp
pushf
stos
or
aam
mov
mov
enter
dec
bound
iret
mov
jg
aam
out
sbb
pop
or
repz
add
pushf
adc
sbb
popf
sbb
inc
je
jg
sbb
movsb
js
sub
push
adc
mov
jo
cmpsb
cmpsl
and
fsubrs
push
rcrl
stc
imul
loope
movsl
fwait
and
ret
cld
outsl
lret
or
lods
xchg
stc
pop
addr16
psllq
mov
xchg
push
fsts
dec
rcl
pop
pop
pusha
push
lods
jnp
mov
ret
lds
mov
mov
lods
lret
push
lods
in
inc
xchg
add
imul
jecxz
mov
andl
lds
lods
mov
call
or
pop
add
pusha
ljmp
adc
lock
aaa
add
leave
cli
adc
mov
je
ret
nop
add
lock
dec
push
out
test
push
inc
cli
mov
outsl
xchg
mov
loop
testb
lahf
jo
or
sbb
lret
imul
xor
pop
jae,pn
out
cmc
mov
fdivrs
mov
in
xor
or
fcmovne
lret
cmp
mov
movsb
dec
arpl
dec
add
mov
arpl
aam
add
pop
xchg
gs
insl
fldcw
arpl
add
cwtl
ret
lcall
popa
jo
mov
xchg
pushf
or
shlb
icebp
sub
loope
jecxz
push
push
daa
loope
jo
ss
sbb
xchg
into
ss
out
cwtl
jecxz
xchg
adc
lods
xor
mov
xchg
pop
stos
adc
loope
in
loop
gs
fsts
lret
push
lcall
inc
pop
xlat
in
fstl
xchg
inc
adc
gs
js
jmp
xchg
in
arpl
xchg
cmp
dec
ret
nop
fldcw
push
testl
add
in
outsb
jge
pop
sbbl
pop
mov
fwait
dec
sub
in
or
mov
lcall
add
xchg
js
inc
xor
lret
fldl
inc
and
jno
and
out
orl
mov
sbb
movsb
lods
cmp
sbb
mov
add
pushf
mov
imul
ds
je
mov
aas
int3
cmpsb
mov
xor
popa
cmp
dec
or
cmpsl
fs
jmp
pop
aas
and
adc
pop
stos
cmpsb
jmp
mov
adc
mov
jl
xchg
dec
test
push
les
scas
arpl
mov
lret
es
xchg
adc
xchg
inc
dec
fmuls
imul
test
roll
mov
leave
pop
add
cmp
arpl
xchg
js
pop
mov
jle
and
pop
sub
call
imul
mov
sub
push
stos
xchg
cs
fdivrl
add
mov
mov
aad
adc
jb
fisttpl
jae
inc
addb
leave
add
jb
jbe
push
movl
imul
test
xchg
or
cmc
or
sub
dec
mov
jecxz
jmp
cmp
rcrl
or
dec
mov
push
pop
mov
jmp
inc
mov
inc
jae
push
xor
cmp
push
hlt
ja
sub
outsl
xchg
sahf
sti
push
pusha
sub
inc
sub
inc
lods
xor
lret
sbbb
jg
in
in
faddl
sbb
jb
inc
fwait
loopne
lock
stos
xchg
jp
ljmp
lret
cmp
mov
mov
arpl
pop
fidivl
xor
push
mov
fwait
lds
mov
call
add
insb
cmp
add
add
pop
cmc
pop
icebp
inc
pop
jge
inc
pop
inc
mov
lea
mov
adc
cmp
fwait
inc
dec
mov
lea
push
lods
push
xchg
cld
cmc
jo
into
lret
es
jle
sub
int
enter
movsb
cmpb
outsb
stc
pop
adc
xchg
dec
sub
xor
xchg
mov
inc
cld
push
dec
fcomps
cli
adc
dec
jg
and
dec
arpl
jge
icebp
stos
outsl
faddl
mov
aad
add
clc
ss
imul
out
into
or
loope
out
cmp
hlt
cmc
mov
das
push
testl
stos
jbe
clc
cmc
cltd
scas
mov
and
aas
add
mov
lods
xchg
xchg
mov
loope
sub
scas
and
mov
cmpsl
inc
push
xchg
out
lret
push
inc
pop
xchg
or
sbb
xor
mov
ljmp
xor
mov
fnstenv
mov
pop
mov
dec
test
inc
lods
inc
sbb
popf
ljmp
pushf
subb
data16
arpl
adc
xor
and
data16
es
movsl
lods
icebp
adc
sub
rclb
pop
sarb
xchg
out
mov
sti
xchg
push
jnp
inc
sarb
push
pop
cmp
mov
enter
adc
outsl
repnz
stos
pop
aam
cmc
jmp
push
sti
adc
mov
mov
fucomp
mov
in
in
inc
and
push
mov
mov
out
lea
sbb
cmp
imul
fwait
outsb
mov
sarb
push
push
shrb
test
pushf
cmp
fsubrs
test
jmp
lcall
pop
xor
sub
push
adc
nop
js
mov
dec
sbb
inc
icebp
pop
add
xor
popf
dec
inc
inc
cmp
jmp
or
pop
daa
jge
xor
jno
in
ja
test
jecxz
cmc
sub
aam
imul
mov
cltd
xchg
js
cmp
jl
lret
adc
and
sub
pop
mov
mov
mov
sbb
push
sarb
push
in
les
out
fisttpl
std
sbb
sub
push
test
or
xor
test
fistpll
arpl
test
imul
adc
sahf
or
pop
jae
lea
xor
inc
sbb
cmc
add
jge
stc
aas
push
pop
push
or
ret
call
cli
sub
sub
adc
mov
cld
ss
arpl
popa
and
xchg
test
push
mov
jne
std
int3
push
data16
pop
loopne
or
xor
inc
mov
sbb
enter
xor
push
pop
std
dec
mov
or
adc
lcall
adc
mov
insl
adc
cwtl
ds
icebp
jg
fwait
popf
jmp
nop
pop
out
add
cmp
xor
and
addr16
push
xchg
sub
add
sub
jmp
mov
sub
rclb
fneni(8087
xchg
out
orl
iret
test
test
test
test
out
cld
and
or
dec
sahf
mov
or
js
and
jp
mov
adc
xor
dec
ret
adc
js
enter
sbb
out
lods
rclb
cmpsl
je
outsb
sub
popa
mov
mov
jle
mov
out
mov
mov
jno
loope
loope
or
inc
xor
mov
out
leave
xchg
jge
mov
push
rcr
jle
jmp
mov
loop
lret
jecxz
inc
or
sbb
mov
inc
xor
fsubp
out
flds
jne
cli
sub
add
mov
push
test
ljmp
sub
imul
lds
movsl
rolb
in
sub
repnz
shrl
jl
lock
negl
clc
mov
int3
cmp
insl
dec
es
or
xchg
jmp
cmp
inc
scas
into
rol
push
dec
xchg
sbb
xor
xchg
pusha
cmc
inc
push
test
push
xchg
ret
xor
adc
arpl
or
into
sbb
xchg
bound
lret
inc
fs
adc
int
in
and
imul
inc
add
ret
cli
insl
stc
push
xorb
mov
push
rorb
lods
sbb
rorl
mov
xchg
fidivs
loop
clc
aas
jne
mov
stos
mov
mov
mov
xorb
sbb
mov
push
sbbl
popf
sahf
orb
pop
adc
jmp
push
push
int
sbb
rol
xchg
xor
jnp
mov
xor
jmp
mov
cmpsl
in
mov
pop
negl
push
cmp
sub
je
adc
add
scas
enter
inc
jae
sti
and
cmp
push
insl
je
imul
mov
and
sub
jns
or
mov
notb
jno
sahf
lret
mov
inc
sub
push
pushf
jmp
popf
add
dec
dec
mov
jae
jmp
pop
and
dec
sbb
lret
xchg
mov
pop
subl
nop
icebp
jbe
scas
dec
inc
aaa
mov
and
xor
cli
fcoml
inc
ss
lods
dec
and
jnp
insl
nop
adc
leave
js
jo
or
scas
inc
into
or
cld
fsubrl
xchg
cmp
push
lods
mov
lret
mov
push
outsb
sub
push
mov
and
popf
and
sahf
fldcw
leave
rcr
rcr
fidivl
mov
les
imulb
mov
and
out
push
cli
fdiv
aaa
dec
xor
fs
js
jbe
repnz
and
in
imul
js
scas
int3
pushf
in
sbb
mov
jmp
pushf
push
loop
stos
mov
lahf
test
sti
insl
sub
test
out
popa
xchg
xor
pop
clc
shlb
sub
mov
sub
cmp
and
pop
nop
mov
test
pop
xlat
and
jmp
popf
lret
scas
dec
xor
loopne
fisubs
loop
push
xchg
dec
das
mov
push
out
das
cmp
fwait
mov
sub
xchg
test
xchg
cmpsl
lret
rorb
jb
add
push
dec
das
mov
push
dec
inc
ffreep
imul
push
clc
dec
mov
xor
jno
ret
jns
mov
mov
aaa
and
dec
xor
lods
cmpsl
xor
mov
test
sub
in
mov
push
out
jne
pop
das
in
or
add
pop
ret
movsl
jno
add
cmp
insl
mov
mov
in
or
out
stc
js
test
mov
cmp
push
pushf
arpl
cmp
add
sub
xchg
xchg
enter
xchg
adc
push
sub
jo
adc
inc
mov
jbe
jge
fidivl
out
mov
out
leave
jnp
cmp
loopne
push
xor
pop
scas
jmp
out
mov
jmp
mov
pop
pusha
icebp
cwtl
pop
pop
mov
xchg
mov
pop
fiaddl
cld
adc
cli
in
mov
jl
pop
adc
and
pusha
pop
popf
pand
das
mov
sub
fstpl
loopne
lock
pop
jge
mov
test
out
scas
dec
mov
jecxz
add
inc
stc
dec
sbb
xor
xor
xchg
mov
decb
js
xchg
mov
adc
inc
dec
mov
scas
and
xchg
or
cmp
jmp
aas
data16
loope
sub
mov
das
in
cld
repnz
lock
add
adc
pop
sbbl
mov
sub
ljmp
aaa
out
ret
push
mov
jns
jo
xor
jmp
mov
xchg
pushf
cmp
or
lret
imul
pop
mov
in
div
xor
std
or
sub
clc
xchg
push
cltd
mov
cld
mov
jne
shll
fdivrl
popl
outsb
and
cltd
into
inc
mov
lods
cmp
mov
repnz
xchg
inc
ffree
fiaddl
lods
cmp
cmp
icebp
xchg
lock
aas
mov
sub
movsl
jmp
add
jp
lahf
das
dec
insb
add
adc
shr
rol
insl
shll
mov
gs
aas
push
push
jbe
sbb
aas
inc
sub
call
adc
xchg
mov
mov
cmp
fdiv
neg
jno
shlb
leave
scas
sub
inc
nop
loope
lea
adc
clc
pop
and
ss
mov
adc
jnp
pop
addr16
sbbb
pop
jne
jns
fnstenv
shrl
in
les
lods
dec
push
fs
inc
enter
shll
xchg
mov
out
clc
daa
rcl
lret
out
push
add
xor
fmull
xchg
xor
rcrb
xlat
pushl
mov
rcrl
push
imul
fidivs
fwait
shlb
xchg
push
scas
andb
push
and
inc
loop
movsl
outsl
icebp
nop
or
repnz
sbb
pop
xchg
hlt
in
outsl
push
in
addr16
nop
repnz
mov
jno
ja
shrl
adc
xchg
xchg
add
lahf
inc
inc
int3
and
ret
dec
popf
lea
loopne
mov
cmp
adcl
aam
mov
xchg
shll
aaa
paddq
jne
mov
or
jge
cmp
jmp
xchg
ja
add
cwtl
mov
mov
dec
adc
xchg
push
sbb
push
dec
cli
cs
cltd
pop
and
hlt
pop
mov
lahf
cwtl
daa
int3
pusha
push
jno
push
pop
popa
icebp
orb
or
xchg
or
xor
lods
or
cli
mov
cmpsl
xchg
pop
mov
inc
mov
lods
ret
insl
jp
sti
fistpll
out
mov
pop
mov
xor
and
ljmp
cmp
jg
imul
insb
dec
and
xchg
push
in
nop
or
push
std
sti
insl
gs
in
xor
scas
sub
call
cli
push
push
xchg
and
ror
pop
addl
loopne
dec
shlb
outsb
add
test
inc
stos
cltd
push
push
imul
mov
lahf
mov
pop
lret
pop
jnp
loop
enter
inc
xor
aam
adc
sbb
ret
jmp
rcr
mov
je
push
push
out
ss
hlt
mov
ret
in
jg
mov
mov
enter
fs
push
mov
pop
scas
pop
data16
xor
dec
jge
mov
adc
add
pop
decb
cwtl
push
dec
repnz
inc
cltd
mov
mov
and
and
jae
mov
int3
add
add
xor
es
cs
rolb
lret
cmpsl
mov
xchg
pop
sti
repz
out
dec
adc
loop
cs
es
push
add
notb
adc
mov
push
sbb
cli
sarb
outsb
iret
ja
sub
fnstsw
in
stos
xor
mov
mov
lret
iretw
mov
adc
movsb
or
mov
pop
add
out
lcall
outsl
pop
stos
icebp
mov
cmp
lock
in
inc
iret
call
aaa
inc
imul
out
subl
lods
outsl
xchg
lds
add
sub
pop
cltd
sahf
jg
mov
mov
fdiv
pop
mov
daa
add
test
or
add
aad
lahf
xor
and
or
push
out
push
lret
sbb
or
sub
pop
ds
mov
push
sbb
or
push
jecxz
mov
add
sti
xor
or
or
adc
mov
sbb
sbb
sbb
mov
testb
add
in
jo
aaa
push
pop
mov
push
pop
pop
sbb
sub
and
popf
dec
jo
icebp
jp
dec
mov
in
push
mov
xchg
xor
jmp
xchg
cmp
push
jne
push
movsb
jne
aaa
mov
sbb
jl
pop
cmp
mov
andb
sarl
shll
xor
test
ja
mov
lea
adc
insb
push
in
in
ficompl
hlt
push
cmpl
jnp
jne
test
call
inc
add
inc
sub
bound
std
xchg
aas
jns
add
jns
aaa
pop
aad
inc
sbb
add
enter
mov
jp
dec
jbe
push
decb
add
jmp
dec
test
push
sbb
ret
cld
sbb
into
movsl
mov
popf
fmulp
fcomps
sti
cwtl
dec
sarb
outsl
push
cwtl
jae
adc
xchg
xor
and
inc
sbb
subl
es
fldenv
pop
add
mov
xchg
js
in
inc
cli
and
cltd
and
mov
xor
sub
mov
or
inc
mov
push
adc
shrb
ficoml
fsubl
or
shlb
cmp
xchg
xor
pop
popa
sarl
push
sbbl
push
mov
fcompl
cld
int3
or
and
pop
int3
cs
dec
xor
push
test
stos
imul
jnp
sbb
out
fdiv
stos
push
out
jg
jae
sub
pop
jnp
cmp
cmp
add
xchg
mov
cmp
aas
sti
mov
xchg
pushf
sbb
dec
ret
jbe
push
sbb
jb
fistps
inc
jecxz
push
dec
jnp
fimull
fistpl
add
ja
xchg
syscall
push
nop
scas
mov
rol
lock
push
push
pop
add
cmp
rolb
cmp
and
or
jo
icebp
mov
or
or
mov
mov
das
popa
mov
scas
gs
popa
pop
inc
dec
arpl
insb
dec
push
mov
pop
push
es
mov
sub
xor
int3
insl
pop
cmp
dec
movsb
andl
pop
lahf
cmp
fcmovu
jns
push
inc
xchg
mov
ljmp
xchg
loop
fwait
sbb
call
pop
cmp
xchg
ja
adc
fdivrl
fst
in
fsubl
fs
mov
jge
xor
jl
xchg
ljmp
test
cmp
xchg
jmp
ret
jge
and
cmp
add
mov
lret
jno
dec
das
and
push
jg
jo
push
add
fcmovnu
loop
sbb
xor
es
xor
call
xchg
rcll
aam
sub
jge
popa
cli
adc
jmp
xlat
out
jnp
fsubrl
loopne
fisubl
dec
pop
jne
mov
loope
sbb
gs
push
bound
mov
sahf
test
jle
push
mov
fdivl
dec
adc
or
xchg
dec
enter
leave
mov
sahf
ds
cli
clc
add
dec
addr16
pop
adc
lds
stos
pandn
and
outsb
or
outsl
pop
mov
aam
dec
cli
jb
fdivl
pop
stos
lock
push
test
int3
testl
mov
push
hlt
xor
in
or
call
xchg
dec
sti
je
fdivrl
test
sbb
je
popa
addl
faddp
xacquire
dec
les
mov
add
in
push
adc
aaa
imul
int3
and
push
inc
scas
adc
cmp
mov
lods
add
adc
mov
aam
pop
test
jb
sub
lcall
repz
jns
cmp
cmc
int3
lock
dec
daa
xchg
cwtl
and
rcll
loopne
jno
jl
inc
dec
xor
mov
cmpsl
pop
iret
addr16
std
in
sbb
xchg
adc
outsb
mov
ss
enter
ss
loopne
mov
mov
daa
push
add
pop
arpl
cld
movsl
cmp
pushf
inc
ja
add
loopne
xorb
or
inc
pop
cmc
in
inc
scas
pop
mov
notl
dec
fisubs
insl
jno
adc
and
mov
mov
rcrb
jl
mov
mov
cmp
test
xchg
xchg
sub
sbb
outsb
test
das
test
ret
in
loope
xor
push
lea
or
and
mov
ds
or
inc
xor
adc
aaa
cltd
rcll
in
xor
fmul
mov
sbb
outsb
gs
repz
lods
cmpsb
lcall
dec
arpl
fisubl
adc
cmp
mov
inc
xor
aam
sub
cltd
pop
lret
gs
add
mov
cmp
das
iret
push
fldt
rcrl
js
and
lret
cmc
enter
push
cmpsl
test
std
sbb
mov
sbb
inc
mulb
mov
repnz
in
stc
xchg
jecxz
sbb
nop
es
sbb
out
insl
mov
cmp
jb
adc
jbe
lret
jmp
sbb
jbe
xorl
sub
xchg
arpl
add
sub
cmpsl
cmc
add
data16
pop
mov
jno
push
pusha
adc
addr16
fs
testb
jp
push
test
call
arpl
out
gs
mov
insl
scas
inc
xchg
in
fldt
inc
cs
mov
mov
push
insl
sub
lock
xor
push
out
outsb
push
outsl
sti
insl
mov
dec
or
stc
jecxz
sub
sbb
mov
xor
fnstcw
or
or
jo
mov
adc
test
loop
sbb
jbe
repnz
push
sub
call
test
xchg
arpl
mov
adc
jae
sub
lock
sub
mov
dec
jo
fadds
push
mov
pusha
mov
pop
inc
mov
xor
lcall
andb
cld
and
and
pop
mov
in
aas
mov
nop
cwtl
scas
sbb
pop
loopne
xchg
push
adc
dec
daa
xchg
and
lcall
out
je
or
cmc
ss
loopne
push
fwait
mov
jno
mov
xchg
push
mov
ret
jl
sbb
lret
xorps
sbb
insl
ss
aaa
ds
leave
adc
mov
jg
fsubrs
ret
loope
lds
pop
test
inc
add
cmpsl
dec
adc
dec
mov
xor
rcll
jmp
or
insb
jne
xchg
jne
adc
lret
xor
inc
ljmp
call
fwait
jae
dec
mov
rorb
out
aam
leave
pop
in
jecxz
js
int
dec
popf
sbb
push
pop
mov
mov
or
icebp
popf
roll
jmp
jmp
jbe
mov
cmpsb
sahf
cmp
sbb
rolb
lds
test
mov
repnz
push
adc
in
in
pushf
pop
bswap
or
add
adc
cmpsl
lds
out
add
shll
jge
jnp
jg
add
xor
jmp
mov
movsb
fistpl
dec
mov
push
inc
sbb
in
out
shll
sub
xor
orl
pop
insb
adc
mov
cli
mov
pop
loop
sbb
sbb
imul
adc
jge
or
push
sub
addr16
jo
pusha
je
cmpsl
push
in
jbe
add
test
jnp
sarl
jle
xor
pop
lods
lret
cmp
loopne
push
mov
in
int3
cmp
ret
inc
rcll
nop
cwtl
fwait
les
mov
fwait
lret
mov
ret
lcall
pop
je
dec
dec
lcall
divb
add
push
cmpsb
mov
loope
outsl
out
test
je
jne
mov
bound
jae
mov
jo
sub
out
add
ljmp
mov
insl
push
mov
ds
mov
addr16
mov
mov
fimuls
mov
sub
mov
icebp
mov
mov
mov
jae
lock
mov
mov
pusha
jle
and
inc
mov
sbb
sahf
insl
fists
and
and
adc
sti
cmp
setbe
adc
addr16
adc
or
pop
and
outsl
sbb
daa
mov
in
and
jg
cs
fdivrl
data16
in
and
lods
out
add
sbb
or
data16
mov
inc
daa
push
xlat
inc
mov
aas
test
scas
mov
gs
xlat
xor
js
pop
pop
js
std
cltd
in
dec
xchg
das
insl
leave
and
aam
stos
jae
xlat
jl
ss
xor
lods
decb
sbb
insl
mov
scas
jle
inc
mov
jmp
fnstcw
xor
loope
sbb
pop
nop
sub
jns
or
lods
jb
sti
xchg
xchg
lds
mov
push
mov
jle
mov
pop
dec
les
mov
pop
mov
and
ds
xor
adc
add
inc
mov
addr16
dec
lods
xlat
lods
jae
out
adc
sbb
sbb
outsb
insb
lcall
fbld
pop
jae
adc
jp
aam
dec
repnz
fldl2t
push
and
arpl
jge
sbb
push
inc
popf
out
test
cmovo
mov
jecxz
mov
add
loope
cmp
jmp
sub
fcompl
jle
aad
inc
inc
sub
jl
loop
mov
mov
ds
jmp
lods
mov
mov
lret
lea
pusha
testb
call
fldl
movsb
fisttpl
sub
cmp
popa
xor
aad
es
jge
xor
mov
lods
enter
fldl
bound
xchg
cmc
fmuls
rclb
add
cli
fists
inc
lret
xchg
jp
mov
mov
ret
cmpb
daa
ret
mov
add
jbe
call
sbb
test
pop
in
icebp
sbb
addr16
stc
cmc
sbbl
adc
call
lds
and
adc
shll
inc
stos
loopne
imul
imul
inc
pop
mov
dec
cmpsb
push
in
xor
push
mov
sbb
push
dec
shlb
ret
jl
pop
sbb
jno
inc
ss
clc
add
add
insl
bound
in
pop
in
cmp
lds
popa
push
rorb
sbb
mov
sbb
pop
sub
lret
insb
sbb
cmp
jmp
pop
mov
sbb
add
loope
into
mov
pop
push
mov
in
jge
xchg
scas
test
hlt
cmp
adc
jnp
cmpsb
jno
and
dec
mov
pop
pop
gs
mov
popf
add
dec
test
add
push
outsl
shrl
call
cld
divb
xchg
push
fsubs
or
ljmp
add
sub
in
xchg
mov
fsubl
out
pusha
xor
imul
test
adc
fistpl
lods
jae
xor
icebp
repz
stos
or
add
inc
aad
push
mov
clc
cmp
pop
adc
sbb
cmpsb
in
and
xchg
cmp
add
lret
cs
and
xor
mov
mov
test
pop
and
and
push
testb
mov
cmpsl
sbb
push
cmp
mov
subb
pop
jbe
push
pop
pop
mov
inc
xchg
out
sbb
add
dec
dec
int3
xor
fstp
jno
push
push
push
sub
sub
rolb
call
inc
add
inc
inc
sbb
push
xchg
pop
sub
sbbb
push
mov
addr16
popl
scas
lahf
fsts
xor
aad
inc
movsl
bound
adc
out
aas
jg
out
jno
fsts
rcrb
sub
lds
sbb
xchg
lret
es
aam
jb
mov
cld
out
scas
xor
in
mov
sbb
fiaddl
pop
xor
push
dec
out
arpl
repz
lcall
sub
pusha
mov
in
and
push
cltd
inc
push
in
pop
pop
shll
cs
jne
add
adc
push
mov
imul
dec
push
add
aad
rcrb
scas
sub
and
mov
out
lea
je
scas
in
enter
mov
mov
pushf
xchg
test
jge
jb
mov
rclb
and
and
imul
ds
or
sub
inc
ja
call
mov
mov
cltd
adc
lret
dec
mov
fcoms
imul
inc
xor
aad
dec
add
subl
roll
mov
xor
js
adc
or
add
sub
ja
aad
sub
jnp
out
mov
cmp
mov
adc
rcrl
outsl
cmp
adc
push
mov
pop
lret
test
mov
test
push
sub
cmp
int3
xchg
inc
jecxz
lods
ja
shr
insb
push
out
xor
lods
fcmovb
xor
dec
out
jmp
mov
mov
lahf
xchg
mov
and
mov
push
addr16
cwtl
repz
or
jp
addr16
mov
sub
rcll
loop
mov
imul
jl
sub
xchg
sahf
data16
cmp
stc
loope
and
sbb
enter
aas
clc
xor
sbb
fcoml
dec
or
push
repz
push
xchg
outsl
jl
sub
jmp
xlat
call
fistps
inc
sbb
xchg
jns
outsl
sbb
rolb
stc
fildl
cmpsb
cmp
in
ficoms
jae
mov
xchg
sar
jle
sbb
and
jle
inc
jg
jg
sub
and
adcb
shrl
mov
aas
mov
mov
mov
js
jnp
jb
or
cmc
dec
xchg
fisubs
lods
das
inc
pop
xor
insl
and
mov
dec
stc
repz
add
loopne
sub
jns
xor
ror
cltd
sbb
cli
xor
jbe
push
xchg
sbb
pop
cmp
mov
add
inc
outsl
fstl
imul
xchg
and
pushl
ljmp
sbb
push
cmp
jnp
mov
pop
add
xor
inc
cltd
scas
dec
sub
dec
rorb
ret
xor
cmpsl
jl
mov
ss
insb
xchg
mov
into
clc
dec
inc
or
sbb
in
dec
ss
and
les
mov
and
aad
xchg
add
xchg
push
jbe
inc
jnp
loopne
mov
sub
aaa
add
lea
out
enter
aaa
mov
pop
pop
jbe
fisubs
or
call
cltd
in
inc
and
xor
stos
sub
jg
sub
push
fwait
push
jl
add
push
cmp
insl
insb
xor
cltd
and
mov
push
push
test
push
mov
mov
fs
or
push
aaa
adc
popl
inc
in
fldcw
iret
mov
test
leave
in
nop
ficompl
mov
mov
nop
je
xor
outsb
lcall
jo
sbbb
or
movsl
xchg
incl
xchg
xor
bound
stc
add
mov
inc
pusha
push
pop
ljmp
rcl
fnop
pop
rorb
xor
dec
movsl
adc
pop
popa
push
cmpsl
xor
sbb
dec
xchg
cs
inc
pop
sub
sub
stos
ljmp
mov
cmc
cmp
pop
sub
mov
jae
inc
lea
jg
push
mov
mov
fwait
pop
sub
scas
aaa
push
jl
adcb
pop
jp
icebp
imul
leave
add
push
test
imull
in
xor
ss
fdivp
adcl
push
ret
icebp
sub
mov
jbe
test
into
jae
ss
in
in
outsb
xchg
movsl
add
jle
movsb
sub
dec
aam
jecxz
xor
rclb
popl
push
push
xor
shlb
fstpl
outsb
xor
shll
call
popf
icebp
lea
rcl
into
sbb
in
push
jmp
sbbb
lcall
xchg
inc
jne
inc
sub
add
ss
mov
and
iret
xchg
push
in
mov
hlt
cld
stos
cli
jl
pop
loopne
scas
sbb
shlb
jle
mov
in
mov
icebp
pusha
cmpsb
stc
popa
fisttpll
or
ret
jnp
mov
test
and
push
jo
pop
in
and
popf
test
push
ljmp
xchg
cs
stos
mov
inc
xor
push
loopne
mov
adc
jecxz
xor
ss
in
adc
lods
cmp
dec
jne
iret
xor
imul
jmp
and
pop
stos
sub
aad
mov
add
pop
pop
int3
ja
sti
idivl
lods
xor
dec
or
insb
mov
dec
pop
or
aad
adc
das
shrb
outsb
cs
sub
or
mov
shrd
cli
in
fists
mov
cs
mov
daa
rcll
movsb
sub
jle
sbbl
loop
repz
loopne
cmp
cmp
push
mov
push
xchg
aam
rolb
cmp
mov
and
xor
clc
add
dec
pop
aas
mov
cmc
jns
in
sbb
fcmovne
mov
iret
inc
inc
pop
jns
xor
sub
outsl
pop
fadds
mov
addr16
adc
sti
pop
add
outsb
fwait
addr16
enter
or
enter
add
mov
mov
xchg
jae
mov
mov
cmp
je
sub
sbb
notb
cmp
mov
sbb
lds
mov
cmp
jmp
mull
lret
sub
fsts
shl
and
outsb
dec
jecxz
pop
popa
mov
mov
fldl
mulb
inc
cmp
cmp
aad
nop
ret
fsub
push
push
xorb
sahf
dec
jae
out
jae
in
dec
shll
and
push
dec
mov
insl
jae
pop
push
jns
or
mov
cld
inc
sbb
xor
fcmovb
mov
sarb
mov
lea
mov
mov
aad
inc
add
stos
je
mov
jnp
es
ret
roll
dec
out
ljmp
stos
bound
mov
iret
jle
adc
mov
dec
das
jg
mov
mov
jnp
rcl
mov
cwtl
sbb
mov
addr16
out
pop
cmp
bnd
outsl
dec
cmp
out
mov
push
pop
gs
inc
mov
test
clc
cs
xor
mov
in
movsl
das
lret
dec
clc
or
mov
movsb
jns
out
fldenv
jo,pt
into
dec
sbb
pop
std
pusha
sub
cmpsb
jae
iret
lret
mov
ds
and
stos
push
lods
js
setb
push
push
sbb
test
aad
repz
popw
fwait
pushf
sbb
sbb
aad
ret
cwtl
mov
and
mov
and
scas
mov
jbe
jae
test
fstpt
popf
mov
xchg
dec
sbb
xchg
popf
cwtl
mov
xchg
in
sub
xor
jns
adc
popf
test
jmp
sti
mov
jne
sti
clc
pop
mov
cs
cmp
inc
mov
test
out
xchg
lods
push
jb
cli
in
scas
shl
cmpsb
sbb
or
mov
sar
aas
push
pop
rorl
fisttpl
mov
xchg
pusha
and
fwait
loopne
jnp
cmp
sbb
adc
xor
loope
popa
fmuls
and
outsb
or
shrl
dec
push
adc
add
fld
jp
pop
cmp
incl
inc
popa
loopne
lret
imul
out
sub
pmulhuw
adc
mov
pop
or
and
cmp
xchg
xchg
add
cmp
rorl
xchg
ret
jg
ret
pushw
outsb
inc
push
push
or
xchg
lock
push
push
jecxz
repnz
xor
mov
jne
xor
movsl
jp
jp
iret
pushf
push
cs
push
aam
into
mov
xor
out
sbb
nop
push
dec
push
cmp
push
jne
pop
shll
push
leave
push
cmp
rorl
push
push
xor
movsb
xor
fwait
shlb
jecxz
sahf
lret
ds
xlat
push
inc
jae
xor
push
cmp
nop
cmpsl
xor
and
cmpb
push
jns
push
fnstcw
jne
pusha
outsl
shl
mov
cmc
inc
sub
inc
xchg
adc
ss
es
jbe
imul
ljmp
mov
xor
outsl
fdivrl
mov
mov
aas
shrl
mov
inc
xor
and
push
loope
repz
pop
lea
sub
cwtl
sbb
or
mov
sar
lds
repnz
add
ljmp
aas
xchg
jb
les
pop
popf
push
popf
lods
fs
hlt
cmc
mov
add
push
cmp
push
inc
mov
ja
xlat
mov
and
std
aas
mov
sbb
push
in
cld
push
or
insb
fcmovb
or
mov
mov
inc
jmp
mov
ret
push
cmpsl
jle
call
mov
xor
pop
xlat
and
ds
pop
ret
sub
mov
adc
nop
inc
sub
dec
sahf
cwtl
cmpl
mov
fidivs
std
adc
shll
add
icebp
hlt
das
ds
inc
jp
test
das
mov
dec
gs
dec
mov
fnstcw
cmp
movsl
mov
imul
jle
rorl
sti
xchg
pop
cwtl
jae
mov
ss
aas
ficompl
adc
inc
mov
idivl
mov
cmp
mov
pop
mov
cmp
aas
xor
jle
aam
push
dec
mov
xor
mov
inc
jg
mov
cmp
stos
cwtl
popf
popf
gs
cmpsl
repnz
out
sbb
push
aaa
jb
sahf
inc
cmp
testb
cmp
dec
cmp
push
jecxz
cltd
sbb
enter
and
or
movsb
mov
incb
xchg
aaa
ret
mov
jbe
inc
mov
test
das
clc
mov
outsb
mov
xchg
shll
cmp
push
cmp
mov
dec
sbb
adc
xchg
sarl
push
xchg
and
adc
in
mov
lds
repnz
in
ret
adc
xchg
xchg
shl
es
aam
aaa
cli
loopne
dec
out
iret
or
cli
frstor
cmp
and
jb
imul
out
push
sub
pusha
and
inc
jmp
sub
stc
or
fidivrl
sub
sub
ret
push
int
mov
jmp
cmp
cmp
mov
sbb
xchg
scas
fdivrl
mov
rol
push
jae
lods
bound
push
xchg
add
mov
sub
hlt
in
push
add
add
pop
cmc
pop
inc
cmp
mov
xchg
stc
nop
imul
call
lods
push
addr16
pop
sbb
xchg
scas
pop
ffreep
data16
adc
mov
dec
xor
sahf
add
leave
ror
fmull
xchg
movb
lock
mov
mov
push
adc
mov
loope
cmp
cmp
orl
xlat
sbb
loope
mov
xor
aad
inc
dec
adc
dec
in
lock
test
lock
inc
fwait
push
push
cmp
jns
pop
cmp
jl
sub
test
mov
mov
rolb
mov
xchg
shlb
sbb
mov
shlw
mov
je
mov
xor
sbb
inc
les
sahf
imul
test
ljmp
and
insb
hlt
out
cmp
dec
loopne
aaa
xchg
dec
cld
lahf
aad
enter
inc
fisubrs
hlt
dec
sbb
test
idivb
push
add
sar
lock
mov
sbb
adc
cld
bound
pop
or
mov
mov
add
test
fwait
aaa
es
pop
cld
jnp
dec
jbe
std
int
cli
ret
jp
jae
pop
pop
pop
xor
cmpsb
xor
pushf
mov
cmp
pop
jb
xor
cmpsl
ja
sub
add
lods
pop
movsb
sub
jns
adc
fbstp
loope
loopne
xlat
data16
sahf
dec
push
loop
inc
orb
cmp
lock
add
sbb
addr16
adc
pop
and
xlat
mov
rorb
or
mov
and
xchg
loop
into
sbb
fildll
and
mov
sar
ljmp
lea
outsl
adc
mov
jnp
jmp
adc
rorl
test
neg
and
push
rcl
jnp
pop
lret
fisttps
popf
mov
mov
xchg
sbb
ss
sbb
pushf
subb
scas
pop
inc
fbstp
int3
aam
xchg
adc
out
inc
push
adc
pop
lcall
incl
and
cmpsl
xchg
vpaddsw
mov
rcr
test
push
sub
test
out
and
pop
test
dec
daa
push
das
jl
and
mov
ret
inc
pushf
icebp
cmp
cltd
sbb
and
add
aam
popf
sbb
in
dec
xor
mov
les
out
loopne
push
pop
icebp
push
repnz
leave
cmc
roll
mov
movsb
loop
das
cmc
arpl
iret
jmp
sbb
in
sub
adc
sub
sbb
movsl
jecxz
into
and
cmp
xchg
ljmp
insb
dec
push
xlat
sbb
sahf
cs
adc
mov
push
jno
fcompl
mov
push
int
or
pop
mov
push
and
jbe
fldl2t
pop
ja
adc
jnp
aaa
or
jbe
inc
sbb
dec
sub
lock
aas
or
inc
sti
aad
and
stc
shrl
mov
push
int
loop
test
push
jno
mov
push
cld
add
xor
inc
cld
mov
adc
mov
xor
cmpsb
arpl
dec
inc
push
fistl
stc
loopne
jns
stos
jbe
pusha
cs
jge
data16
sbb
ffree
popa
push
js
cmp
inc
and
add
pop
ja
mov
cmp
xor
push
or
cmpsl
inc
das
push
or
pop
mov
or
sahf
mov
sub
push
test
cmp
push
cmpsb
mov
cmp
sahf
mov
lea
jl
adc
xorb
push
jp,pn
push
jecxz
loop
rcll
inc
cmp
inc
scas
mov
push
addr16
jmp
jge
cs
cwtl
push
arpl
repnz
cmp
ja
lret
mov
mov
ret
cltd
dec
sti
mov
aad
mov
or
dec
dec
push
dec
xchg
test
adc
lods
jo
scas
movsb
push
bound
mov
bnd
lock
pop
nop
in
add
fdivrl
btr
jge
dec
test
std
sbb
inc
arpl
push
adc
cld
cmp
xor
mov
pop
jns
inc
xchg
dec
ss
out
sub
mov
int3
ret
iret
mov
jmp
mov
cmp
rcl
xchg
mov
mov
test
sbb
mov
js
add
imul
mov
aaa
mov
jle
cmpb
xchg
cmp
push
aam
dec
stc
sbb
movsl
xor
pop
outsl
xchg
arpl
mov
push
jge
cli
or
pop
loop
int3
or
add
dec
inc
dec
jne
loopne
mov
mov
xor
pop
aam
push
or
mov
jecxz
nop
mov
inc
cmpsb
xor
mov
push
add
or
cmp
outsl
dec
and
or
mov
testb
or
addr16
test
push
idivl
or
in
inc
mov
dec
pop
icebp
mov
xadd
imul
mov
ret
and
jl
and
add
xchg
lcall
push
mov
lret
pop
mov
push
mov
mov
lods
popa
xorl
dec
daa
int
mov
gs
jp
or
xor
stc
xchg
mov
xchg
into
mov
ja
sti
sbb
jnp
and
fsubl
cmp
orb
mov
mov
shll
scas
inc
movsb
lret
jmp
in
es
dec
push
test
addl
or
add
push
rorl
out
push
dec
pusha
inc
sahf
fcmovu
jle
mov
fadd
pop
mov
ret
pushf
stos
insl
sub
push
pop
and
push
mov
and
aad
jbe
mov
int
and
daa
out
push
mov
push
cmpsb
fsub
xchg
insl
aaa
in
dec
jb
mov
dec
push
add
aad
push
loope
cld
lret
mov
mov
sbb
fdivs
outsb
sbb
adcl
dec
pusha
loopne
jbe
mov
fwait
push
data16
xorb
xchg
out
mov
cmp
sbb
jae
out
lock
roll
dec
mov
and
add
mov
add
cmp
in
adc
mov
icebp
shrb
adc
rcrb
subb
push
pusha
add
mov
das
int3
push
add
cmpxchg
jmp
mov
shlb
scas
push
shl
sbb
sub
dec
jg
test
mov
xchg
pop
call
push
xchg
mov
and
outsl
mov
cmpsb
call
rorb
mov
fldcw
xorl
and
push
test
imull
popa
dec
popf
adc
fcoms
push
xor
rcrl
mov
outsl
xchg
and
out
push
mov
popf
pop
sar
jecxz
pop
push
add
test
sub
push
rep
test
cld
jge
cmpsb
add
nop
pop
push
sti
jbe
and
jo
sbb
push
dec
jno
mov
mov
fcompl
ja
fcoml
sahf
pop
pop
test
ret
mov
mov
cmp
out
movsl
add
test
mov
push
cmp
loop
lods
mov
xchg
dec
inc
push
jl
push
es
or
popf
js
push
insl
stos
pop
dec
pop
mov
roll
in
xchg
jle
cmp
ss
out
xchg
into
mov
jb
lcall
fsubrs
mov
sarb
ja
repnz
stos
stos
sub
sbb
es
xchg
push
inc
mov
mov
and
rclb
imul
ljmp
xor
aaa
rolb
incl
dec
lahf
pop
push
aad
push
jns
imul
cwtl
popa
cld
dec
sbb
data16
dec
and
push
push
in
mov
mov
out
sub
sub
jl
loopne
popa
mov
lret
or
arpl
stc
aaa
mov
cmpb
clc
cmpsl
enter
adc
fisubrl
jmp
int3
int
mov
pop
ret
xor
push
adc
in
xchg
lods
testb
jle
cmp
dec
push
pusha
mov
je
mov
mov
push
ficoml
leave
rcrl
scas
jnp
nop
les
cltd
add
fisubrs
push
clc
dec
jle
pop
sahf
or
add
sti
or
mov
lahf
dec
sub
xchg
imul
adc
mov
jo
inc
or
jmp
xor
or
sbb
les
dec
adc
imul
cltd
jns
ficoms
xchg
pop
es
mov
cmp
cmpsb
mov
mov
imull
dec
adc
pop
xor
xor
jne
jns
shll
ja
fs
cmp
fisubrs
sub
scas
push
xor
ficomps
sbb
xchg
mov
subl
jge
das
fwait
cmp
jecxz
out
adc
pop
and
fisttpll
dec
test
je
push
inc
adc
out
xor
mov
adc
sbb
add
adc
cmp
jno
dec
lods
pop
adc
push
adc
rorl
xor
std
cmpsb
pop
insl
add
mov
imul
sub
fsubrs
gs
xor
repnz
xchg
adc
iret
xchg
pcmpeqd
xlat
movsb
into
ds
xor
mov
or
sarb
movsl
pop
out
pop
call
sub
dec
popa
fsts
pop
mov
mov
std
ds
inc
mov
mov
sub
cmp
mov
mov
inc
loopne
adc
into
ds
sbb
or
mov
iret
loope
push
push
mov
and
sti
sbb
sahf
int
repz
ljmp
cmp
mov
sahf
enter
test
repz
fmul
sbb
loope
mov
out
mov
loopne
and
or
mov
or
inc
mov
pusha
push
insl
cwtl
in
cmc
add
or
int3
sbb
popa
pop
inc
stc
sahf
xor
xchg
pop
addr16
xorb
mov
push
clc
or
iret
out
sbb
add
sbb
cmp
pushf
mov
in
test
jge
fnstsw
arpl
loopne
mov
cmp
jmp
xchg
subl
mov
cld
mov
lea
xchg
outsl
stos
out
scas
insl
xchg
out
cmc
xchg
sbb
jb
shl
std
jp
fnstsw
in
das
xor
sub
dec
xor
neg
inc
cmp
add
iret
ret
adc
mov
push
movsb
cmpl
add
repz
jge
cli
push
jecxz
jns
fimuls
mov
sub
dec
jp
shl
loope
add
mov
xchg
sub
ficoml
scas
cmp
xor
inc
lret
mov
add
cmc
sub
pop
andb
jge
cmp
jle
cmp
insl
imulb
aas
shr
xor
icebp
jg
enter
fwait
add
jle
cwtl
shll
mov
lods
aam
xchg
sbb
flds
nop
jecxz
or
lea
cltd
jnp
xor
jne
pop
pop
and
mov
adc
xchg
mov
lret
scas
mov
and
xchg
xchg
rorl
loop
into
and
movsl
mov
pusha
aam
mov
or
add
sbb
adcb
mov
pop
mov
ret
pop
dec
jp
pusha
test
inc
icebp
lahf
pop
push
lods
test
cmpsb
xbegin
xchg
dec
dec
push
test
or
into
xor
sub
mov
push
and
std
lret
sub
imull
stos
inc
add
cwtl
ss
cld
movaps
or
movsb
xlat
bound
mov
adc
bound
sub
cmpsl
cld
sub
or
dec
inc
ret
icebp
pusha
das
sub
popf
pop
and
push
ljmp
pop
mov
out
outsl
shll
rcrb
iret
jo
mov
sti
pop
das
pop
test
daa
xchg
out
ja
mov
xor
stc
lock
lds
aas
cmp
or
addr16
lods
lea
std
loope
dec
jmp
dec
push
jnp
mov
and
insl
adc
push
dec
arpl
dec
int
aas
cwtl
xchg
xchg
sti
in
negb
or
mov
popa
sbb
jnp
cwtl
or
mov
ds
rclb
jbe
add
daa
jp
xor
lock
jbe
repnz
xor
fst
mov
jae
cs
insb
aam
cld
or
cmpsb
mov
mov
mov
jnp
cli
add
mov
cmp
xor
and
pop
fnstenv
push
or
cmp
jmp
mov
fildll
arpl
std
call
ljmp
xchg
rorb
sahf
or
iret
cld
sbb
mov
ds
stos
les
jge
adc
mov
inc
clc
movsl
add
std
xchg
jns
stos
repz
scas
inc
stos
lret
aas
out
test
push
sbb
sbb
pop
push
lds
out
in
pop
cmp
arpl
push
mov
notb
pop
push
pop
mov
outsl
ror
shll
cli
sub
inc
stos
repz
pop
int3
jp
jge
dec
sarl
sbb
sahf
or
inc
lahf
les
mov
cmc
adc
popf
xor
pop
pop
aaa
dec
addb
rcl
arpl
cmpsb
push
mov
mov
xchg
mov
scas
imul
lret
rclb
mov
mov
pop
mov
lods
imull
fwait
push
call
inc
cmpsb
das
mov
fisubrl
lock
gs
inc
subb
repz
or
in
leave
test
js
loope
repz
sub
push
and
fwait
jmp
repnz
lahf
outsb
xor
or
or
ja
mov
xor
mov
popf
data16
jmp
jg
cmpsb
iret
popf
mov
mov
pushf
test
es
push
mov
pop
inc
or
lret
dec
cli
and
fdiv
stc
clc
xchg
xchg
cwtl
xchg
js
mov
sub
jmp
in
aas
popf
mov
scas
in
scas
or
mov
imul
je
or
push
sbb
out
adc
mov
sbb
std
xlat
adc
mov
data16
mov
aad
ljmp
dec
in
and
jnp
aas
sub
push
mov
mov
jb
mov
mov
push
andb
cmp
cmpb
ja
sti
dec
xor
cmp
sbb
jg
iret
or
shll
xchg
lods
cmp
pop
and
data16
mov
fwait
int
sub
jl
jo
sub
jne
cmpsb
xor
xor
jb
leave
pop
sub
out
mov
adc
add
lods
pop
test
dec
mov
cmpsl
fcoml
clc
xlat
fwait
popa
aad
pop
dec
movsb
jmp
jne
cld
push
pop
inc
jg
test
punpckhbw
dec
gs
incl
test
mov
xor
call
jle
adc
lahf
jne
xor
mov
inc
test
mov
dec
mov
add
fistpl
pop
adc
dec
mov
rol
and
add
dec
push
xchg
decb
jge
aas
lcall
fcmovnu
xor
sub
insb
in
fprem
push
sbb
mov
xorb
pop
dec
add
jge
jne
lods
and
cmpsl
cmp
mov
hlt
daa
xchg
adc
push
mov
push
dec
lahf
ret
inc
ja
dec
stos
pop
in
pusha
sahf
gs
jb
adc
arpl
push
xchg
test
adc
and
ret
push
loope
mov
addr16
add
adc
mov
mov
dec
test
cmp
pop
mov
xchg
xor
das
popa
add
push
xchg
inc
aad
and
mov
lock
nop
inc
mov
xchg
sbb
xor
jno
loop
arpl
loopne
ja
jecxz
gs
in
dec
pop
sub
jge
mov
icebp
sbb
cmp
inc
sub
cmpsb
jle
mov
pop
jo
ljmp
pop
jns
adcb
push
xorl
mov
stos
out
adc
fsubrs
cmp
sub
scas
mov
shlb
fsub
or
outsb
or
mov
movsb
pop
mov
cmp
jno
dec
shrb
stc
imul
push
lock
adc
testb
loope
cmp
rcrb
aad
pop
jge
xchg
ret
mov
push
cmp
repz
cltd
cmpsb
ret
stos
outsl
add
inc
aam
dec
add
ret
push
or
sub
out
sub
adc
mov
std
loope
xor
lea
xor
or
inc
call
outsb
aas
mov
push
lret
sub
hlt
out
sti
xlat
fs
cmp
stc
stos
fistpl
popf
cld
push
xor
out
repz
xchg
mov
lods
push
shl
xchg
rcrl
xor
in
or
sub
imul
inc
jns
cmpsl
cli
in
popf
sub
push
iret
loopne
into
mov
sub
inc
mov
imull
xor
inc
cmp
and
push
bound
sub
add
loopne
scas
clc
in
xchg
adc
and
xor
sub
scas
push
cmp
lea
cmp
mov
jle
push
cwtl
int3
scas
cmp
cmp
out
jmp
int
or
mov
lods
push
mov
push
shll
lods
neg
xor
lods
xor
test
and
ds
shr
lret
data16
jg
outsl
add
subl
popf
clc
cld
inc
aad
mov
push
or
push
inc
insl
rcrl
lods
dec
rorb
cmpsl
add
xchg
sahf
mov
pop
pop
cmp
ret
jmp
xchg
xor
sbb
cltd
imul
lret
mov
lret
lcall
lods
leave
inc
xchg
cltd
xchg
pusha
mov
cwtl
loop
push
repnz
pop
rorl
scas
pop
aas
imul
cmp
pop
pop
cmp
fcmovb
rcll
inc
mov
stc
sub
jge
ss
mov
ds
divl
lret
adc
cmpsl
inc
add
and
mov
inc
lret
out
int3
push
mov
mov
mov
cld
pushf
mov
jg
or
push
arpl
dec
insb
dec
pop
inc
ss
clc
xchg
int3
jbe
xor
and
orb
mov
xor
outsb
call
or
xchg
mov
in
or
cmpsl
sbb
mov
xchg
fcomip
push
insb
xchg
lret
adc
xlat
sbb
mov
jno
stos
mov
ret
ss
aam
jns
push
add
out
dec
or
cwtl
and
push
adc
xchg
in
xor
sbb
xor
movl
sub
aaa
lock
popf
std
jno
jns
sub
dec
movsb
rcrl
mov
orb
dec
or
out
ljmp
sub
shrb
jmp
mov
xor
xchg
scas
imul
dec
cmp
inc
sbb
jmp
ret
lods
clc
fildl
in
adc
xor
cltd
jb
sub
ja,pn
scas
les
sub
shl
movsl
xchg
in
xor
or
imul
ret
cli
popa
popa
add
stos
fscale
aas
jbe
inc
lock
clc
mov
aaa
push
dec
lea
adc
push
add
jnp
add
adc
stc
fidivrl
dec
in
xchg
sub
jns
shll
sub
call
ss
daa
sahf
loop
hlt
cmpsl
fnstsw
cmpsb
push
mov
mov
xchg
or
mov
jl
push
ja
movsl
push
stc
xor
xlat
adc
call
sbb
fcom
outsl
lods
adc
into
rcll
mul
gs
adc
jo
loope
sub
in
out
idivb
mov
seto
js
xor
popf
push
dec
sahf
dec
cmc
pop
cmp
jle
scas
adc
es
clc
leave
push
in
dec
jbe
push
in
lock
outsl
leave
cmpsb
sbb
loop
push
pop
test
and
push
stos
and
or
test
mov
jl
dec
xor
movsl
addl
notl
fisttpll
jo
xlat
popa
pop
xchg
sahf
mov
jno
jle
xchg
lds
ficoml
push
bound
sbb
insl
adc
mov
ljmp
sbb
push
popa
dec
jl
push
loopne
xchg
add
cmp
dec
insb
sbb
inc
ds
sub
dec
into
cmp
negl
fucomip
push
inc
js
push
leave
mov
lahf
outsb
push
je
cmc
xor
test
xchg
das
jbe
and
add
dec
loopne
fucom
fucomi
adc
ret
xchg
imul
mov
push
jmp
cld
dec
add
insb
sbb
push
cmc
iret
loop
jl
loop
sbb
push
mov
sbb
and
dec
arpl
or
ds
shlb
pop
inc
aas
mov
jmp
pop
mov
les
les
mov
inc
inc
jne
pop
imul
rolb
rcr
clc
cltd
lret
sbb
mov
loope
inc
test
cmpsl
insl
push
mov
hlt
imul
fiaddl
push
fsubrl
cmp
inc
mov
mov
out
bound
mov
push
movsb
mov
aaa
nop
sbb
out
push
adcb
fbstp
add
idivb
stos
out
lret
icebp
cmc
lret
mov
sub
je
daa
cmp
subl
arpl
push
cs
pop
pop
fidivrs
cmp
aad
bound
stc
pop
out
jmp
pop
out
xor
imul
mov
and
push
mov
aas
add
sbb
das
lret
xchg
das
jg
push
testl
nop
loopne
xorl
adc
test
sub
lret
mov
mov
or
scas
inc
mov
pusha
scas
rclb
jno
insl
push
insl
or
cli
xchg
jl
out
pushf
and
adc
dec
jg
js
push
int3
iret
jp
dec
xor
sbb
fabs
mov
aaa
dec
cmpb
sbbb
sbb
je
xor
movsl
push
ljmp
mov
jg
pusha
mov
mov
cwtl
mov
add
adc
pop
mov
cli
inc
mov
ds
sahf
xor
mov
ljmp
es
push
fisubl
mov
sub
es
shll
mov
add
cmp
cmc
scas
cmpsl
test
mov
mov
add
or
cwtl
ds
pop
jle
jle
int
je
jns
adc
addl
mov
or
push
jmp
out
les
jle
rcr
push
call
xchg
adc
stos
pop
mov
pop
clc
inc
gs
pop
dec
mov
jmp
es
sbb
pop
sub
aad
jb
int3
xchg
push
testb
pop
stos
add
xchg
enter
fnstenv
mov
mov
fwait
mov
cld
int3
lret
sbb
popf
sub
mov
jmp
daa
in
les
and
jle
jl
fcomi
nop
data16
adc
mov
cli
sbb
pop
xchg
mov
and
push
stos
pop
or
movsl
rcll
dec
in
push
into
std
cmp
test
sub
or
fstps
movsl
jae
xor
mov
outsl
mov
arpl
jmp
sub
jnp
rclb
mov
push
xchg
cmp
mov
add
andb
mov
and
mov
jl
ja
sub
mov
jp
and
lcall
inc
loope
mov
xor
pop
fidivrl
adc
inc
fsubs
xchg
and
jl
scas
pusha
push
sub
lcall
test
jbe
dec
add
imulb
ja
ljmp
jmp
mov
jmp
jmp
push
or
xchg
pop
sar
fsubr
xor
jbe
cmpsl
scas
sub
lcall
mov
pop
or
xor
je
mov
sahf
adc
mov
push
call
mov
ljmp
xor
in
push
pop
or
inc
mov
xchg
lds
mov
movsb
mov
mov
xchg
inc
push
xchg
scas
add
mov
dec
rcl
lahf
cmpsl
mov
xor
andb
mov
test
orl
outsl
xlat
insl
pop
in
mov
mov
xchg
outsl
mov
cmp
xchg
pop
push
lock
sbb
push
les
pop
ljmp
orb
jbe
in
test
jecxz
inc
cmp
pusha
xchg
aad
adc
outsl
inc
jmp
xor
xor
leave
mov
aam
push
jge
testb
fcompl
xor
push
iret
mov
jae
gs
shlb
dec
jnp
add
fildl
adc
push
mov
jecxz
cmc
out
push
aaa
out
adc
out
inc
test
test
or
mov
outsb
lods
in
aaa
dec
pop
xor
xchg
push
cmc
into
icebp
incl
xor
stos
push
pushf
xchg
push
or
insb
push
into
fisubs
inc
mov
cmp
mov
mov
mov
rorl
dec
ljmp
push
ds
dec
or
adc
sub
scas
mov
mov
and
push
xlat
pop
dec
sbb
cli
stc
ret
les
lods
dec
xlat
push
ret
test
imul
fdivl
lret
adc
dec
movsl
sub
test
in
push
sbb
sahf
sub
jl
adc
pop
jge,pn
das
aad
sbb
mov
xor
or
sbb
enter
pop
jnp,pn
xchg
repz
fsubl
dec
and
pop
daa
push
inc
sub
into
mov
cltd
lret
out
sbb
cld
mov
ret
pop
pop
out
sub
iret
lahf
cmp
in
inc
ljmp
sbb
push
stos
pop
daa
mov
xchg
jae
in
ds
dec
xchg
pusha
pop
int3
stos
les
sub
aas
adc
int3
les
mov
imul
dec
in
inc
mov
les
jbe
push
clc
pop
out
jp
test
jg
test
or
mov
pop
aaa
add
jo
sbb
mov
sub
pop
in
xor
push
sbb
fcmovb
out
adc
out
sbb
and
out
das
gs
push
xor
adc
jg
sbb
das
loop
push
fidivrl
or
popf
fnstenv
fildl
cmp
cs
out
and
pop
xchg
cs
mov
sub
in
repnz
push
add
cmc
iret
dec
mov
popf
daa
jle
mov
nop
or
or
pop
pop
push
arpl
cmpsb
mov
adc
mov
xorl
hlt
mov
push
cli
dec
inc
push
and
mov
sub
or
jns
sbb
js
and
sti
and
iret
loope,pt
sbb
xor
add
xchg
cmp
jmp
mov
cltd
jnp
sbb
adc
adc
add
addr16
add
or
inc
adc
sti
mov
in
arpl
mov
pop
and
push
xchg
mov
xlat
mov
adc
scas
int
add
mov
pushf
rorb
jg
iret
pop
xchg
ret
repnz
clc
jg
push
cmp
or
mov
cmp
mov
mov
divb
jbe
out
leave
icebp
mov
and
sub
or
loope
inc
pop
jge
clc
mov
jnp
xlat
push
push
sub
aas
pusha
cltd
and
push
data16
in
inc
lods
pushf
loope
js
dec
loop
mov
adc
cmpsl
xorb
and
inc
push
inc
mov
ret
leave
push
push
sbb
xchg
add
push
jl
and
and
xor
adc
push
out
bnd
int
push
movsb
js
shr
jns
push
push
sub
cmc
jp
and
clc
and
imul
cmp
jo
rcr
scas
xchg
push
mov
mov
cmp
mov
push
jp
cmpsl
pop
add
jnp
lods
and
mov
rorb
cld
lret
sbb
test
popl
hlt
cmp
icebp
stc
ret
ret
and
push
nop
into
incb
filds
in
sbb
test
fcmovbe
out
test
adc
mov
jmp
jno
mov
shrl
mov
xchg
das
lahf
test
clc
dec
iret
or
xchg
stos
inc
push
out
fsubr
imul
in
sbb
cmp
push
cmpsb
data16
sbb
xor
jecxz
jns
stos
ljmp
call
inc
mov
mov
fldl
pop
inc
ljmp
xchg
adc
xchg
dec
fcos
daa
adc
lret
out
adc
inc
aad
dec
adc
fists
lods
and
pop
jo
stos
mov
rcll
repz
std
and
popa
or
adc
xchg
sbb
subb
fstpl
inc
mov
add
sarl
add
stos
jbe
imul
movsb
call
jae
push
aam
push
add
and
jg
sbb
mov
aas
mov
out
jge
mov
pop
rcrl
pop
push
pop
cmc
add
sbb
fcomi
inc
mov
jns
dec
prefetcht0
dec
push
in
pop
loop
inc
sub
lret
out
cmpsl
scas
jne
jae
jb
or
jnp
dec
int
sub
lds
inc
xor
push
dec
roll
mov
daa
push
data16
or
popa
bound
cltd
cmp
mov
push
iret
and
or
xlat
lret
or
addr16
sub
ja
pop
add
loope
jmp
sub
cmpl
data16
aad
int
dec
cli
mov
les
lods
iret
scas
jecxz
dec
cmp
mov
and
add
xchg
in
pop
push
in
mov
lea
pop
adc
cmp
sbb
jno
push
fnsave
lret
sahf
loope
mov
cmp
out
lcall
test
divl
cmpsl
mov
add
or
dec
or
insl
scas
pop
cmp
scas
js
mov
xor
adcb
inc
pop
xor
iret
outsb
xor
push
inc
mov
xor
mov
xor
lds
sub
mul
adc
repnz
push
add
mov
add
mov
and
jp
es
inc
repnz
xor
push
mov
xlat
out
push
pop
inc
setns
mov
iret
shlb
jbe
lods
imul
jmp
scas
iret
ljmp
cmp
jmp
je
pop
cmp
xchg
pushf
aas
es
xor
ror
fmull
xchg
shrb
pop
cs
mulb
add
mov
cmc
repz
pop
pop
cmc
inc
push
push
rol
aad
mov
push
and
cmp
aam
push
es
and
mov
testl
cmp
mov
fisttpl
in
sub
mov
xchg
jp
aad
loope
dec
mov
mov
and
ljmp
pop
and
xor
ret
test
pop
mov
mov
push
sbb
imull
scas
adc
fnstcw
stc
push
outsl
in
call
frstor
cmc
popa
cmp
xchg
mov
xchg
rclb
popa
mov
adc
sub
mov
adc
mov
sub
filds
ljmp
rcrl
add
jno
cmp
and
flds
push
pop
or
scas
scas
test
sbb
mov
dec
iret
mov
psrad
test
inc
js
xchg
push
jmp
sub
testl
sub
and
jle
jp
pushf
movsb
stc
sub
sub
out
testl
cltd
xor
sub
testw
xchg
arpl
imul
in
add
stos
pop
cmpsl
xor
xchg
stos
enter
push
iret
fdivrs
xor
std
jae
pop
add
gs
ret
insb
fistl
lahf
xchg
cli
aad
ret
imul
push
popa
inc
dec
pop
clc
and
fdivs
test
icebp
rcrb
jle
jl
mov
push
adc
roll
lret
sbb
movsl
cltd
and
js
jmp
fnsave
pop
popf
or
mov
cmp
in
or
xlat
add
and
inc
or
cmp
into
xor
shrl
adc
mov
push
int
push
sbb
out
or
outsl
lea
hlt
and
in
sbb
sub
out
mov
addr16
js
sub
add
sbb
add
xchg
out
or
add
sub
filds
inc
push
sbb
push
jl
pop
jge
fadds
dec
pushf
jecxz
xlat
fwait
xchg
ja
xchg
mov
rcr
jae
xor
add
fimuls
jp
sti
mov
loopne
into
lods
mov
dec
nop
cmp
dec
test
mov
mov
push
dec
dec
rcll
stos
popf
fdivrl
or
loopne
mov
xchg
flds
out
cltd
mov
fistps
cmp
bound
jae
add
movsb
ret
add
jb
cmpsb
mov
std
lds
fistps
mov
rcrl
sbb
cmpsl
mov
xchg
mov
sub
jp
icebp
pop
into
in
or
mov
fs
cmpsl
sub
int
jno
adc
jno
rclb
jg
enter
xor
mov
leave
push
jne
ja
hlt
sahf
jb
sub
pushf
insb
fs
adc
xchg
dec
sbb
mov
shll
dec
inc
jns
stos
push
out
movsl
sbb
lods
inc
dec
popa
ljmp
mov
xor
gs
jbe
jle
ror
push
mov
or
pop
mov
das
and
testl
cmp
movsb
pop
xor
inc
addr16
pop
sbb
xor
jbe
sbb
lods
fisttpll
push
out
pusha
pop
sarb
cmp
stos
dec
and
cmpsl
sti
imul
lock
enter
test
outsl
and
mov
cmpsb
and
fimuls
mov
in
cmp
mov
lea
push
ja
jno
push
dec
push
lock
in
cs
xchg
aaa
xchg
stc
mov
mov
cmp
mov
dec
push
add
sub
fcoml
adcl
inc
inc
out
imul
iret
lock
or
imul
xchg
push
leave
dec
jmp
imul
jg
mov
mov
std
pusha
in
mov
adc
mov
fadds
arpl
pop
sub
lahf
lret
sub
mov
sbb
or
sbb
clc
loop
das
adc
adc
sbb
fld
mov
hlt
add
jmp
or
or
popf
leave
addr16
add
loop
fidivs
mov
scas
push
cmpsl
aaa
mov
push
jecxz
mov
popa
sbb
inc
xor
rclb
mov
push
ljmp
leave
cmp
push
loopne
adc
dec
cmp
mov
dec
fwait
popf
lahf
mov
in
xor
in
into
ret
mov
mov
in
out
pushf
pop
pop
inc
pusha
or
jl
icebp
lods
movsl
movsl
xor
xchg
les
imul
gs
mov
inc
inc
movsb
test
or
pusha
sbb
andl
mov
mov
adc
add
movaps
int3
adc
arpl
out
enter
add
inc
adc
les
fistps
stos
dec
push
cmp
loope
lock
push
stc
dec
lret
es
dec
sub
xor
imul
mov
sub
or
jbe
mov
add
js
adc
daa
mov
gs
dec
cmp
lods
jmp
cltd
daa
mov
mov
stos
aad
push
cmp
xor
mov
sbb
cli
mov
push
out
cmp
inc
mov
in
sbb
dec
insb
notl
jmp
xchg
ret
sbb
scas
or
pushf
lods
inc
mov
rclb
inc
inc
dec
aas
daa
or
pop
movsl
jecxz
sarb
jl
pushf
mov
cmpsl
push
aaa
clc
notb
and
mov
test
xor
into
mov
cltd
jne
sbb
test
mov
lret
dec
push
add
pushf
out
jl
adc
movsb
jge
leave
in
lock
movsb
sar
add
fisubrs
sbb
adc
stos
ljmp
adc
jg
inc
mov
inc
push
push
lods
decb
loope
outsl
cmp
adc
sbb
jl
in
sbb
xorb
loop
lahf
ds
mov
sub
icebp
pop
or
test
enter
mov
inc
mov
into
xchg
jns
clc
repnz
sub
dec
xor
sbb
mov
popf
push
subl
in
xchg
icebp
xor
movsl
repz
nop
jno
hlt
mov
mov
inc
movb
sbb
mov
xchg
cmpl
xor
xorl
cmp
mov
jbe,pn
add
sub
sarl
jg
xchg
sbb
sti
sub
in
xchg
push
jne
add
jmp
add
or
xor
ljmp
popa
jb
xor
scas
dec
mov
cmp
xchg
cmc
adc
lods
out
lds
test
sub
sbb
mov
add
xchg
lods
cmpsb
cmp
sar
mov
jae
call
jne
movsl
cmpsb
and
pop
cmp
inc
xchg
sub
adc
movsb
fiaddl
and
cs
popf
push
mov
jnp
fucomip
test
inc
mov
dec
dec
out
pop
adc
movsl
fsts
shl
fidivs
sbb
icebp
mov
add
shl
xchg
add
pop
ret
xor
push
and
lods
rcr
ret
daa
jmp
movsb
leave
dec
push
test
push
ja
in
jecxz
stos
cmp
jle
out
xchg
mov
mov
or
es
jno
fwait
add
mov
xlat
ss
in
push
lahf
test
xlat
sbb
pop
les
xchg
shlb
dec
xor
sbb
outsl
adc
cmp
dec
jne
and
pop
mov
cmpsl
cmc
add
inc
pop
pop
add
imul
push
loopne
dec
js
xchg
mov
rcrb
fnstenv
out
inc
jo
pop
popa
jne
test
push
push
and
push
das
sbb
repz
jne
mov
sub
mov
icebp
test
lds
mov
scas
xchg
cld
mov
pop
repz
and
nop
test
or
je
xlat
movsb
cmc
out
loop
jo
push
clc
or
lret
mov
dec
mov
jl
sub
jbe
test
sbb
ja
jmp
pop
rclb
jbe
aas
cs
jmp
cmp
fnstcw
or
mov
xor
sahf
out
sub
cmpsl
test
rcr
mov
cmpsl
xchg
add
sbb
jno
loopne
jg
fcompl
popf
mov
sub
iret
andb
mov
sar
inc
cwtl
xchg
dec
inc
sahf
mov
xor
or
out
mov
in
das
sbb
or
mov
leave
mov
sbbl
fisubrs
ret
imul
xor
in
lds
repz
cmp
aaa
inc
dec
jp
ret
lock
lock
mov
pusha
dec
inc
push
pop
mov
xchg
add
cwtl
leave
sti
and
loopne
je
sbb
xor
outsl
dec
push
mov
rcl
sub
mov
out
cmpl
push
pop
or
xorl
loopne
pop
mov
lock
sahf
cmpsb
adc
jo
push
jl
xor
sub
in
mov
out
and
and
adc
push
pop
and
jae
lock
inc
push
jnp
xchg
or
inc
lds
test
push
mov
sub
adc
xor
das
pop
xchg
pop
repz
xor
or
and
mov
lea
insb
pop
call
enter
aam
push
jne
sbb
add
jno
push
ja
sbb
adc
sub
jmp
int
dec
xchg
and
pop
push
aaa
icebp
addr16
lahf
adc
jmp
std
xor
jg
sbb
mov
out
add
fistl
movsb
cmp
mov
push
addr16
popa
imul
fwait
inc
cld
out
dec
mov
ljmp
lock
jnp
in
cmp
add
outsl
lods
or
pop
adc
cmpsb
and
enter
gs
add
mov
pop
hlt
xlat
ds
pop
mov
jl
mov
test
testl
xchg
in
sbb
adc
insb
sbb
lret
or
aam
inc
mov
mov
movsb
sbb
mov
mov
test
in
les
xor
adc
add
xchg
or
jb
mov
fimuls
push
mov
inc
in
movsl
aam
js
fldt
rorl
pop
jns
ret
imull
cmpsl
mov
jbe
popl
in
lea
pop
cltd
xor
xlat
dec
test
cmp
cwtl
jp
pop
iret
inc
insl
push
in
dec
sahf
inc
mov
shll
pop
mov
mov
sbb
push
fsubrl
mov
int
pop
mov
cmpsl
cmp
lret
or
xor
ffree
imul
ret
fcoms
lahf
jb
dec
mov
mov
xchg
push
jne
adc
xlat
lcall
icebp
out
mov
fs
inc
or
push
xchg
out
dec
jnp
arpl
pushf
sarb
mov
mov
fwait
mov
addl
mov
mov
popa
add
push
lea
ficompl
sbb
add
xchg
dec
or
add
mov
mov
test
aam
cmpsl
cmp
sahf
dec
gs
push
testl
lret
mov
jae
or
cwtl
ret
add
les
lods
xchg
xor
jg
rolb
ret
cmp
push
mov
hlt
dec
lods
in
call
sbb
sub
sbb
aaa
mov
ja
in
adc
pop
adc
aad
aaa
xor
jns
test
push
dec
push
jp
add
mov
cmpsb
jg
xor
sub
sbb
leave
adc
xor
jmp
and
or
mov
xchg
push
int
mov
rcr
fs
mov
sub
mov
pop
xor
divl
xor
movsl
pop
outsl
aaa
mov
xchg
lahf
add
mov
inc
popf
jge
fisubrl
jnp
cmp
mov
pop
dec
sub
popa
fwait
jmp
inc
lock
pushf
cli
rcrl
or
js
sbb
lcall
xor
insl
addr16
loope
xor
cmpsb
fwait
mov
icebp
xor
cld
fiaddl
adc
and
cmc
lods
add
insl
fsubrs
fwait
cmpsl
jbe
adc
ret
xchg
scas
mov
cmp
mov
inc
or
add
or
cs
or
shl
lcall
test
stc
cmp
nop
dec
jmp
imul
test
repz
cli
pop
pop
mov
jge
jb
xor
dec
push
pop
cmpsl
outsb
mov
out
test
cmpsl
or
cli
inc
lret
pop
mov
pop
ret
cmp
cld
inc
repnz
lock
cld
dec
enter
pop
popf
scas
movsb
xor
cmc
loope
in
jle
jmp
shr
clc
push
fistps
pushl
sub
jae
mov
inc
inc
test
pop
pop
xor
sbb
imul
cs
aas
xor
loopne
jns
call
repnz
add
in
in
cld
mov
loopne
jae
mov
js
adc
pop
das
movsb
fisubrl
les
faddl
in
dec
push
mov
call
hlt
sbb
push
sbb
xor
mov
lds
int
or
push
mov
insb
arpl
jo
pop
leave
lcall
jl
call
push
push
jnp
mov
cli
mov
loope
dec
shrl
insb
pop
push
out
inc
lret
xor
inc
rcll
mov
leave
into
shr
sub
or
mov
loop
ljmp
and
mov
pop
mov
dec
xchg
xchg
xor
fldl
adc
dec
sub
mov
fs
cmpsl
inc
lods
mov
inc
xor
imull
mov
jne
xchg
xchg
imul
sub
cmc
cmp
pop
jnp
jb
jnp
nop
rcl
sub
lahf
push
enter
cmpsl
or
sbb
dec
daa
cmp
pop
pop
fisttpl
fisttps
or
xor
jno
xor
in
aam
mov
adc
adc
mov
aad
inc
or
adcb
jecxz
cmp
mov
insl
xor
inc
pop
mov
dec
adc
mov
js
out
pop
hlt
add
dec
push
push
xchg
push
addr16
xor
jecxz
cmp
adc
lcall
ljmp
xorb
sbbl
pushf
mov
push
mov
ret
add
adc
cmpsb
inc
sbb
or
push
mov
leave
cmpsl
cmpsb
loope
fs
sub
mov
outsb
jno
fistpl
add
lahf
xchg
pushf
mov
xlat
mov
pop
fdivr
mov
and
shrb
xlat
dec
adc
fnsave
mov
xchg
js
add
into
push
mov
shrl
inc
ret
push
inc
dec
adcl
jge,pn
push
inc
lds
aas
je
add
jle
dec
sbb
fucomi
cltd
lods
in
decb
inc
ret
mov
dec
mov
shlb
jl
dec
add
pop
loop
and
testl
mov
popf
fsubr
xor
xor
rcll
dec
jle
stos
iret
imul
mov
leave
popf
ds
sub
or
ficomps
stos
mov
stos
jg
cwtl
push
push
xchg
mov
aaa
outsb
pop
sub
sub
add
pop
orl
mov
cmpsb
andb
ror
arpl
imul
hlt
or
leave
and
adc
popf
jecxz
test
out
mov
das
pusha
es
mov
fcomp
loope
mov
mov
in
mov
into
jno
orl
hlt
int3
fdivr
inc
shl
insb
jge
xor
repnz
pop
xor
lret
sbb
dec
mov
push
fld
cmc
push
dec
imul
xchg
outsl
data16
pop
and
push
fcoms
xchg
mov
jp
jmp
or
std
adc
fisubrl
inc
sbb
and
dec
push
adc
jno
leave
repz
jns
adc
mov
inc
jge
pop
scas
in
out
sahf
inc
inc
stos
cli
jo
xchg
add
mov
and
cmp
fdiv
sub
lods
lods
rcrb
cmpsl
jbe
xor
xor
xchg
fdivs
rcll
jae
jae
test
hlt
mov
out
push
mov
sbb
test
push
insl
sub
lods
cmpsl
sbb
aad
mov
xor
mov
or
imul
test
mov
pop
pop
xchg
adc
movlps
mov
ds
shlb
add
push
adc
push
test
ret
add
popa
xchg
xchg
mov
outsl
sub
out
mov
je
imul
sbbb
sbb
in
stc
mov
iret
outsb
dec
in
ret
pop
add
or
scas
stc
movsb
inc
jle
push
adc
es
je
push
push
xor
add
les
fistl
and
jno
fbld
lock
inc
cmp
mov
add
out
stos
cmp
dec
push
mov
stc
mov
int3
mov
xchg
push
add
faddp
movsb
or
cmp
adc
xchg
dec
cmp
mov
loopne
test
jb
sbb
cwtl
in
jo
pop
lock
mov
inc
push
push
repz
sub
test
xchg
jne
mov
jecxz
xor
mov
mov
clc
fnop
rolb
jmp
aaa
test
lock
mov
mov
xor
or
xchg
dec
bound
sbb
and
dec
rorb
aam
scas
ret
or
imul
dec
pusha
daa
pop
xchg
pop
and
stc
insb
inc
mov
lds
lods
into
shlb
adc
shlb
xor
aas
ret
xchg
cltd
ret
in
add
push
cwtl
push
mov
mov
cmp
imul
add
and
mov
mov
sbb
les
in
arpl
cmpl
push
fwait
inc
ljmp
and
pusha
shr
inc
ljmp
jp
push
add
push
cmc
jnp
outsb
mov
sub
ljmp
and
ljmp
ret
pop
dec
cmpsl
mov
mov
std
mov
js
addr16
into
shrb
iret
imul
lahf
jns
div
mov
sbb
xchg
je
adc
mov
xchg
lods
out
sbb
and
mov
inc
out
dec
dec
jnp
pop
sbb
lock
das
cmp
testl
mov
loope
pop
fstpl
daa
jne
in
add
lods
and
add
xor
outsb
rcrb
pop
xchg
fimuls
mov
jae
or
adcb
test
cmc
ds
ljmp
rolb
leave
inc
pop
adc
lahf
push
lds
dec
pop
repz
mov
int3
mull
mov
pop
fnsetpm(287
and
jmp
jg
sub
mov
test
inc
subl
jmp
in
jge
cli
xchg
testl
jl
jbe
js
pop
dec
imul
int
loope
das
xchg
mov
imul
fsub
cli
cs
pop
dec
es
lods
rcll
mov
add
sbb
jns
fs
pushw
push
jmp
ret
shrb
mov
in
int3
jnp
jbe
lcall
dec
stc
outsb
push
mov
stos
lret
ds
ficompl
test
mov
push
jle
call
xor
inc
jo
xchg
push
je
or
decb
cmp
shlb
sbb
sbb
imul
out
xor
xchg
aad
rclb
mov
xchg
aam
shll
icebp
fdivrl
xchg
je
aaa
push
xor
ficompl
dec
or
in
fcompl
stos
aam
jbe
mov
repz
sbb
sub
imul
insl
imul
aaa
pusha
scas
sbb
cltd
mov
mov
outsl
inc
mov
movsb
ja
add
xor
cltd
bnd
pop
leave
int3
scas
sbb
iret
dec
lock
xchg
sbb
pop
pop
icebp
int
xor
adcl
cwtl
xchg
push
fdiv
cmp
jne
push
fisubrl
dec
xchg
xchg
imull
jge
xchg
cmpsl
stos
mov
lret
xchg
add
pushf
xor
adc
dec
fwait
pushf
fcmovnb
cld
or
test
xor
iret
pop
inc
xchg
pop
dec
iret
cld
and
lea
js
mov
inc
xchg
push
cmp
insl
lods
cmpsl
out
lods
adc
iret
cli
dec
ret
mov
bound
push
add
or
out
loopne
jge
pop
inc
sbb
push
out
lcall
les
xchg
fs
mov
std
inc
ret
mov
ljmp
aas
test
lret
lods
dec
aas
ljmp
mov
and
ja
stc
fiaddl
sub
dec
jmp
push
sub
dec
jmp
neg
loope
test
pop
mov
xchg
and
dec
mov
repz
cmp
dec
ds
in
dec
dec
loope
test
sbb
popa
sbb
in
or
int3
outsl
add
jae
xchg
push
fs
sbb
mov
dec
fisubrs
add
pmovmskb
int3
adc
xlat
mov
insl
jo
stos
xchg
jecxz
pop
mov
push
nop
add
int
movsl
mov
xchg
leave
mov
cltd
clc
xchg
movsb
mov
jb
andb
test
jo
dec
inc
ret
int
icebp
dec
pushf
cmp
aas
pop
mov
nop
jle
cmp
out
push
xchg
mov
insb
movsb
pop
xor
int3
add
mov
fs
incb
roll
mov
outsb
scas
daa
push
out
add
jge
iretw
jb
adc
bound
iret
sbb
das
push
sahf
mov
cmp
repnz
bound
push
xchg
icebp
push
and
cld
je
scas
into
add
testb
jmp
fdivl
cmp
xchg
push
leave
arpl
movsl
out
dec
push
loop
mov
push
imul
sbb
pushf
adc
loopne
aam
scas
inc
mov
popa
ret
leave
inc
imul
mov
mov
dec
cli
mov
ret
mov
shll
mov
ljmp
stc
fisubrs
shl
popa
inc
mov
push
inc
push
sub
mov
sar
fadds
outsb
inc
dec
xchg
inc
add
jge
jge
jo
andb
movsb
and
movb
stos
fs
pushl
in
or
sub
pop
inc
lahf
scas
hlt
xor
lret
cmp
dec
sbb
cmp
pop
pop
jne
div
and
inc
sub
imul
push
cmpsl
sbb
push
lret
out
je
loopne
out
les
mov
mov
leave
lret
out
ja
xchg
push
sbb
mov
sbb
mov
push
push
add
scas
dec
testb
inc
or
cmp
insl
dec
fs
fistl
pop
push
mov
inc
les
jl
out
cmp
ljmp
cwtl
iret
negb
mov
shlb
rolb
sbb
xor
sub
mov
xchg
or
cmpsb
jo
fiadds
jbe
out
out
add
ss
xchg
iret
sahf
mov
sub
fstpl
jns
outsl
aad
cmc
push
xchg
insl
mov
test
fiadds
mov
add
xchg
loope
mov
outsb
test
dec
jge
inc
std
mov
and
pusha
xchg
sarb
pusha
shl
pop
lea
aam
imul
movsl
sbb
mov
or
shl
pusha
inc
insl
daa
addr16
outsb
pop
test
aad
pushf
jnp
pop
mov
pop
into
jno
inc
daa
push
sbb
lock
lcall
xor
testl
imul
pop
std
test
pmulhuw
fisttps
dec
or
jmp
jmp
call
push
adc
insb
xchg
test
shrb
fildl
sbb
or
xchg
loope
inc
mov
or
fcmovbe
mov
push
test
sbb
popf
pop
lods
test
lods
fadds
aas
dec
cmp
jp
push
loope
pop
mov
adc
rorl
add
pop
inc
push
lret
mov
sahf
fndisi(8087
xchg
pop
paddb
jns
imul
mov
ss
and
push
test
fmull
in
shrb
lret
or
in
sbb
cmc
or
sahf
fcmovne
mov
insb
xchg
and
add
sahf
lea
rcll
sub
shlb
pop
mov
inc
add
push
aad
add
xchg
test
or
cmpsb
mov
or
in
out
mov
sbb
push
add
and
repz
lds
cmpsl
repz
mov
xchg
ljmp
push
ret
jns
dec
adc
and
test
aam
scas
push
pop
jb
into
scas
fcom
sub
sbb
cli
daa
mov
xchg
adc
adc
inc
arpl
call
shll
pop
testb
jno
hlt
lea
test
dec
jle
lods
xchg
repz
inc
dec
fstp
xor
or
pushf
movsl
ljmp
in
jbe
in
inc
xchg
gs
inc
lds
mov
xchg
adc
mov
shlb
scas
xchg
shlb
mov
lock
push
dec
jge
adc
cmc
movsb
push
clc
in
push
jae
and
jae
into
repz
lods
out
xchg
push
std
push
leave
dec
shll
mov
mov
xchg
stos
adc
sbb
enter
aas
daa
cld
setno
push
xor
or
add
outsl
adc
sub
je
and
lock
cmp
mov
jg
movsl
mov
sbb
ret
push
js,pt
stos
es
mov
push
lret
shl
inc
out
lahf
adc
cmc
jp
cltd
imul
jmp
adc
daa
sbb
stc
jae
cmp
xchg
mov
repz
mov
mov
mov
mov
mov
inc
les
lret
pop
enter
insl
hlt
popa
mov
inc
inc
add
test
pop
adc
fsubr
fisttpll
adc
pop
in
jne,pn
lahf
pop
cltd
fcompl
lret
mov
shll
jae
dec
cmp
clc
adc
pop
cmp
cmp
mov
ss
fsubrl
ds
mov
or
popa
lods
sbb
insb
hlt
cmc
lahf
jl
or
sarl
or
scas
cwtl
mov
insl
ljmp
xor
popa
inc
and
pop
pop
sbb
add
dec
add
out
stos
cltd
dec
mov
mov
repz
icebp
clc
push
insb
or
jno
mov
push
sbb
jge
cwtl
mov
add
insb
cmp
jns
xlat
gs
sbb
xchg
or
pushf
fisttpl
push
popf
xchg
dec
lds
fstpt
dec
xor
and
jecxz
mov
dec
testb
stos
fnstsw
enter
mov
jle
out
ds
add
cmp
push
push
xlat
test
lret
iret
jmp
inc
push
jmp
push
mov
fwait
int3
dec
xchg
in
in
xor
jge
lret
jmp
xchg
popa
fstl
sbb
cli
xchg
sub
mov
daa
and
xchg
rcrl
push
pushf
std
mov
or
pop
dec
mov
ds
push
vpdpwssds
mov
xchg
loopne
loopne
and
lret
adc
in
jne
jne
ret
mov
or
sbb
mov
shlb
mull
and
bswap
mov
sub
fisubl
sbb
ficoml
mov
xchg
or
int3
pop
notb
adc
mov
cmp
fsubrl
js
aam
movsl
and
push
dec
pop
xor
loop
mov
rcr
xor
mov
pop
mov
xchg
jbe
push
aad
sbb
push
mov
pop
std
mov
cmc
arpl
incl
out
pop
dec
clc
jmp
pop
or
push
cltd
mov
cmc
add
push
out
cli
mov
adc
sub
mov
sbb
or
mov
popf
addr16
xor
add
pop
into
dec
or
inc
insb
mov
jb
fldcw
xor
push
sbb
nop
cmp
fstl
scas
xor
andb
inc
sbb
jl
mov
iret
jl
cmp
je
sbb
pushf
insb
scas
lahf
into
insl
xchg
repz
sbb
divl
popa
pop
je
test
push
inc
loopne
sbb
xor
sbb
mov
adc
sub
mov
jo
add
xchg
stc
jns
jge
inc
jle
mov
jns
fstps
push
xchg
out
sub
repnz
out
rcr
adc
xor
pop
dec
push
xchg
cmpsl
and
ja
xorb
jg
push
in
fldl
dec
jl
in
aad
sahf
adcb
add
imul
mov
movsb
aas
outsl
movb
adc
inc
stos
scas
inc
cmpsb
add
push
dec
adc
or
sbb
orb
sbb
aas
jns
imul
mov
sbb
mov
shrl
pop
pop
loop
mov
into
inc
sti
test
add
sbb
out
jne
imul
cmp
daa
lahf
test
mull
xchg
je
dec
sahf
fisttps
ljmp
lock
dec
addr16
in
inc
cmpsb
pop
and
test
pop
xchg
fisttps
data16
js
dec
lds
mov
jo
cmp
mov
cmpsb
into
scas
jo
push
fimull
cltd
fstpl
flds
push
mov
pusha
orb
pushf
or
ljmp
sbb
sarl
pop
mov
pop
xor
sub
cmp
adc
ds
pusha
dec
push
popa
int
nop
ja
sub
orl
adc
sbb
aam
orb
xor
or
out
or
repz
mov
xor
aam
cmp
xorb
lock
xor
xchg
test
pop
xor
adc
loop
ficomps
loope
and
test
lret
push
xchg
leave
add
jle
int3
enter
xchg
push
push
push
test
xchg
mov
xchg
lcall
push
sbb
enter
ret
inc
paddsw
daa
test
mov
push
ss
mov
sbb
out
popf
jbe
fiaddl
adc
mov
inc
mov
stos
xchg
mov
je
cltd
fcompp
lahf
add
std
jns
fimull
xchg
fstl
pop
loopne
int3
pushf
ss
pop
push
pop
andb
sub
push
pop
stos
je
aam
stos
lods
cmpsl
xor
xchg
or
pop
mov
inc
loopne
mov
jp
int
pop
or
inc
or
inc
xchg
loopne
out
ret
aas
sbb
mov
mov
xor
xchg
insb
mov
je
xchg
cmp
icebp
lods
dec
hlt
aad
xor
out
test
xorb
push
adc
scas
mov
cmp
sbb
insl
mov
test
jle
dec
xor
aas
std
push
push
adc
jle
cld
push
add
xor
cmpsl
lcall
jge
fiaddl
out
lret
out
cwtl
cli
jnp
pop
insl
jno
sbbb
cmc
adc
sub
lock
jle
iret
into
out
popa
sbb
je
pop
inc
enter
shlb
cmp
inc
push
sub
xor
and
or
jb
xorb
ljmp
mov
push
xchg
dec
mov
jnp
sbb
andl
test
xor
fdecstp
jo
dec
aaa
out
mov
call
sub
inc
cmp
cli
mulb
jmp
dec
mov
pop
inc
gs
sti
daa
xor
sub
out
test
out
push
push
cmpsl
pop
adc
inc
xchg
repz
in
jo
mov
iret
sarb
dec
icebp
inc
stos
clc
sbb
mov
insl
ficompl
inc
rcrb
sub
sbb
mov
test
or
cmp
add
xor
ret
lret
mov
ds
add
test
and
mov
cwtl
adc
lods
lcall
cmpsl
jecxz
mov
dec
shll
cs
js
ret
outsb
aas
pop
mov
sub
jno
divb
or
cltd
es
test
into
ja
je
fs
jae
rcll
cmp
sbb
jbe
or
mov
ret
mov
or
dec
mov
push
inc
scas
dec
shlb
mov
test
jae
int3
repnz
sarb
dec
ret
mov
mov
clc
bound
cmpl
jge
divl
bound
push
or
addb
pop
imul
xor
pop
xor
filds
mov
call
lret
scas
aam
and
push
pop
sbb
gs
nop
icebp
dec
test
jae
call
inc
leave
test
in
cmp
scas
rol
jae
mov
push
xchg
stos
imul
jecxz
push
movsb
inc
int3
push
push
and
cmp
aam
fisttpl
xchg
lahf
out
sub
mov
fdivrp
push
repz
pushf
xchg
push
adc
ljmp
clc
bound
xchg
outsb
insl
test
insl
add
loopne
lret
dec
stos
xchg
dec
stos
loop
mov
and
insl
inc
add
mov
jns
repnz
cmpsb
mov
cmpsb
dec
pop
inc
fiadds
lds
jmp
dec
test
call
arpl
mov
imul
push
pop
jno
inc
jae
pusha
adcb
int
push
movsb
gs
notl
inc
mov
cmp
xor
cwtl
pop
lahf
jnp
push
scas
mov
flds
das
pop
cmpb
mov
fdivl
adc
pop
pop
les
imul
sub
mov
ret
mov
loop
push
sub
push
pusha
movsb
loope
push
fnstcw
out
or
mov
push
sub
add
stos
xor
cwtl
xchg
and
and
fistps
test
and
stos
jae
mov
adc
lods
push
sbb
int3
and
test
push
jo
out
daa
xchg
outsb
std
loop
adc
cmp
push
cld
cli
mov
jnp
dec
sub
lret
js
mov
inc
add
jp
enter
mov
xchg
pop
cmp
daa
xor
add
cwtl
mov
fwait
cld
out
xor
cli
adc
movsb
sub
pusha
das
pushf
jmp
adc
cmp
je
mov
add
imul
adc
mov
testb
push
xchg
jl
adc
mov
rcrl
cmp
adc
fistpll
and
xor
jmp
and
push
mov
mull
push
out
xchg
inc
addr16
xchg
mov
out
push
push
fmuls
dec
int
insb
sub
in
and
imul
aam
and
ss
bound
call
adc
adc
or
xor
leave
lea
aaa
int3
push
das
push
cmp
jo
insl
bnd
outsb
xor
fistps
sub
mov
dec
ret
and
or
xor
stos
xlat
jle
std
cmpsw
cmpsl
out
scas
lret
fwait
jecxz
pop
push
or
pop
outsl
sbb
shll
push
call
xchg
mov
leave
mov
inc
ds
mov
xor
mov
ss
sbb
sahf
jg
fadds
xor
mov
add
movsb
jle
in
sbb
cli
push
push
lods
loope
jge
or
aaa
dec
pop
popa
push
fsub
jne
addr16
gs
cld
add
scas
sbb
inc
movsl
int3
sahf
js
add
dec
xchg
push
idivl
pop
shlb
cmp
in
movsb
loopne
mov
pushf
xor
dec
pushf
ret
mov
stos
mov
std
sarb
xchg
cmp
add
les
sbb
sbb
pop
sbb
in
jp
rcrl
mov
add
push
jmp
dec
loope
sbb
out
and
vpaddusw
ss
imull
mov
adc
adc
pop
popf
and
sbb
add
mov
xchg
xor
into
dec
scas
mov
dec
inc
xchg
cmp
xor
ret
cmp
data16
and
mov
mov
jo
mov
out
rsm
ror
aad
mov
mov
test
xchg
int3
lods
imul
ss
push
or
lret
mov
test
pop
iret
mov
daa
divb
cli
cmp
mov
lock
enter
movsl
lret
into
cs
and
scas
iret
mov
fisubs
xlat
rcrb
sti
aam
insb
imul
imul
stc
adc
push
pop
popa
cmpsb
bound
push
into
fnstsw
mov
lea
dec
inc
pop
fs
out
jmp
out
test
es
jle
and
hlt
jle
js
add
push
mov
and
mov
sub
jp
mov
adc
push
or
jmp
cmp
shrl
or
jle
xchg
adc
popa
in
cmp
outsl
adc
mov
sub
or
mov
popa
push
and
push
xor
fstpl
ja
int3
dec
faddl
loope
cs
inc
into
out
push
pop
jne
push
in
popa
cli
pop
stos
xchg
testl
dec
in
push
pop
jle
push
icebp
mov
jecxz
mov
in
out
bound
mov
je
push
push
adc
mov
fidivl
xchg
or
pop
dec
jl
jl
mov
addl
xchg
sbb
jp
or
cmp
adc
cmpsl
jo
clc
ret
dec
pop
xchg
dec
hlt
iret
cmp
lret
cli
fcoml
cli
fmuls
push
push
xchg
jb
xor
inc
cld
adc
inc
daa
xchg
mov
pop
es
lds
push
mov
sbb
or
jl
xchg
jp
in
ds
xor
xchg
testl
dec
aas
ret
and
ror
jecxz
orl
pushf
outsb
data16
mov
jl
pop
out
imul
adc
xor
arpl
jns
lods
mov
bound
sbb
push
dec
es
and
imul
das
scas
inc
add
repz
jmp
frstor
popf
stc
adcl
mov
sbb
loop
std
dec
add
scas
xor
dec
sbb
push
mov
jp
popf
xchg
cmp
inc
inc
push
sbb
movsb
adc
arpl
rcpps
cmpsb
and
leave
xchg
stos
cwtl
addr16
addr16
dec
mov
js
popf
xor
stos
lds
fwait
stos
sti
pusha
push
add
orl
inc
inc
daa
xchg
sub
movsl
lret
cmpsb
push
sti
cmpsl
mov
mov
pop
mov
sub
test
test
inc
xchg
push
or
mov
jbe
push
shrl
pop
mov
out
mov
lret
mov
out
paddb
mov
dec
push
mov
pop
jns
test
js
fs
sub
incb
jae
pop
xlat
adc
adc
out
out
out
fisttpll
sahf
int3
iret
loope
pop
mov
je
int
lret
mov
data16
dec
data16
fsubrl
fdivrs
pop
xchg
les
leave
in
daa
mov
add
or
lock
dec
aas
jmp
fisttps
adc
shl
sbb
loop
push
mov
sbbb
and
inc
mov
mov
jle
cmc
sub
push
movb
xchg
or
or
dec
pop
pop
fcmovnu
in
dec
push
xor
mov
and
dec
or
lret
mov
adc
or
icebp
add
jecxz
dec
and
jmp
mov
test
imul
je
leave
inc
inc
fidivrs
imul
jnp
push
aas
fmull
cwtl
les
lahf
daa
xlat
jns
xor
lcall
adc
mov
xor
mov
jne
stos
daa
add
cmp
inc
mov
dec
insb
xchg
insb
loop
xor
add
push
test
jb
jne
popa
int3
lods
dec
mov
shr
jo
insl
cli
arpl
sahf
inc
mov
arpl
in
adc
push
ret
sbb
scas
jae
aam
cvtps2pd
sub
mov
cmp
add
stc
in
not
fst
bound
push
cmp
cmpsl
cwtl
push
in
or
call
add
insl
push
lret
jbe
rclb
fcoms
in
int
ljmp
mov
mov
mov
pop
cld
adc
mov
lods
mov
lds
pop
hlt
adc
cld
mov
pop
jmp
scas
or
push
stos
cmp
jle
push
mov
loope
adcl
lock
push
jmp
push
out
dec
push
leave
stc
movsb
sub
ret
mov
mov
loopne
mov
push
xchg
dec
repnz
mov
fmull
or
insb
ds
mov
dec
mov
mov
cwtl
notl
inc
aad
loopne
jae
mov
std
adc
imul
mov
fcomi
add
fs
outsb
adc
fwait
xchg
inc
dec
test
jecxz
xor
and
push
xor
mov
xchg
adcb
testb
or
dec
pop
aam
insb
enter
sbb
fwait
ljmp
push
xor
scas
ja
out
mov
pop
pushf
das
mov
xchg
adc
sbb
in
addb
pop
stos
xchg
sbb
lea
xchg
xchg
enter
adc
pop
mov
notb
dec
aam
imull
lods
loop
push
pop
out
les
xchg
adc
lahf
cmp
outsl
orl
inc
fcompl
int
mov
adc
jne
sarb
imul
sub
jl
pusha
cmpsl
popa
jp
popa
add
fistps
push
lret
shll
lds
mov
mov
xor
push
daa
ds
in
xor
in
xchg
push
ds
mov
inc
and
out
dec
add
inc
into
mov
into
xchg
adc
jg
js
jne
mov
outsb
inc
jbe
jbe
jnp
xchg
pop
xchg
push
lds
jne
aaa
cwtl
push
shlb
daa
stos
push
std
sbb
dec
dec
sub
scas
push
fimuls
lea
add
cmp
push
xlat
push
out
fimuls
lret
sub
imul
ficompl
bound
jns
nop
pop
adc
push
jle
xor
lret
adc
fimull
imul
cmp
sbb
outsl
hlt
push
repz
and
shlb
mov
ja
sarb
insl
lea
sub
insl
mov
loop
pop
xchg
fs
ds
push
inc
and
pop
loopne
push
movsl
push
jg
fdivl
ja
and
jge
inc
push
clc
sti
cli
mov
fldenv
cmp
sbb
leave
dec
xchg
outsl
ret
cmp
lea
sub
sub
inc
push
shrb
jnp
mov
pop
jbe
pop
cwtl
jecxz
cmp
idivb
shrl
or
push
ror
xor
sbb
pop
shll
lret
mov
shrl
adc
mov
and
lret
sbb
orb
sbb
int
inc
cltd
jmp
cld
scas
xor
sbb
jmp
enter
outsl
sub
lds
xor
cmp
and
cli
jo
and
shll
add
mov
sbb
push
push
adc
pop
jno
ffreep
scas
cmpsl
mov
push
je
shrl
daa
mov
stc
test
repnz
mov
pop
enter
rcll
ret
pop
xor
add
add
fs
xchg
jbe
pop
mov
imul
lods
mov
lods
xchg
pushf
mov
jmp
lods
scas
push
pop
lods
dec
xor
sbb
fiadds
adc
push
hlt
add
pop
dec
add
mov
and
pop
inc
inc
ljmp
adc
pop
aam
cmp
lods
stc
dec
mov
pop
inc
in
dec
mov
leave
push
int
rolb
outsb
add
test
sbb
dec
enter
pop
in
and
push
xchg
sti
lcall
and
inc
inc
int
rorl
idivb
mov
lods
push
mov
ficompl
fadds
and
cltd
int
fwait
rcll
pop
sbb
addr16
mov
scas
push
imul
cmp
mov
sub
in
mov
mov
das
lcall
jb
roll
imul
xor
push
sub
xchg
inc
mov
call
mov
xchg
mov
xchg
sbb
sbb
jp
sbb
fists
xchg
dec
lret
es
movsb
pop
ljmp
negb
or
add
xchg
xor
rclb
cwtl
lods
outsl
nop
push
sahf
arpl
push
cmpsb
mov
loopne
andl
mov
shll
in
cmp
call
test
imul
inc
push
and
sub
or
cmp
mov
mov
stos
fldt
ffree
in
mov
fidivs
repz
adc
movsl
int
std
and
ljmp
push
shll
inc
lods
out
cmpsb
call
mov
mov
lock
imul
jno
pop
jp
ffreep
dec
pop
insl
sub
push
insb
dec
ret
jmp
jg
jae
fwait
stc
push
lea
lds
in
and
push
jmp
fmull
mov
mov
sbb
push
mov
sbb
scas
push
insl
push
lahf
insb
adc
rclb
lcall
aaa
in
push
ds
fists
sbb
cmp
dec
mov
push
fistpl
loop
rclb
pop
lahf
jmp
jno
aad
sub
jbe
and
imul
cwtl
ret
sbbl
push
dec
imul
lahf
sub
xchg
divl
jle
faddl
xchg
les
or
sbb
add
adc
fldcw
inc
dec
pusha
lcall
out
and
dec
sub
xlat
out
pop
mov
xor
xor
movsl
add
mov
pop
jae
movsb
jg
mov
mov
lds
push
addr16
int
idiv
jecxz
pop
dec
lods
fcmove
loop
movsb
inc
xchg
mov
and
insb
xor
pop
ljmp
mov
nop
xlat
push
stc
sub
or
repz
jl
in
add
pop
lea
adc
clc
enter
call
push
outsb
pop
jecxz
or
lds
pop
mov
out
testb
mov
jnp
in
push
addb
inc
mov
push
jns
cmc
pop
roll
jo
sbb
pushf
and
sbb
cmp
movsb
inc
idivl
mov
cli
fidivs
pop
sub
pusha
test
add
sbb
fstl
mov
jne
aam
add
mov
pop
loop
or
lcall
fwait
dec
out
aam
fists
insl
xchg
adc
dec
mov
mov
ja
pop
iret
xor
sbb
divb
aad
sub
xor
adc
rcll
inc
mov
stc
mov
add
pop
cs
mov
jne
outsb
xor
rcll
mov
hlt
mov
pusha
jnp
add
push
ja
fldt
les
dec
mov
fs
call
stos
int3
mov
stos
in
push
xor
ss
mov
es
jmp
aam
pop
sub
sub
pop
fildl
sbb
ffreep
adcb
sbb
add
popa
inc
out
cmp
xor
cmp
enter
data16
jmp
push
jmp
scas
shrb
pop
inc
pop
bound
inc
sbb
lahf
js
scas
jecxz
cmp
adc
clc
loopne
stc
sub
arpl
mov
mov
jmp
xor
mov
push
mov
dec
iret
stos
add
mov
adc
inc
lods
inc
push
mov
mov
jl
out
sub
int
mov
xchg
popf
sub
xchg
xchg
cmpsl
out
notb
xchg
dec
sarb
jecxz
lahf
shr
dec
mov
dec
xchg
mov
mov
cmp
dec
sti
pop
enter
sbbb
fstp
popa
mov
nop
cmpsl
sbb
lds
mov
insl
ret
pop
into
mov
inc
push
aaa
loopne
ja
push
add
push
movsb
mov
xor
lock
insb
mov
push
mov
pop
lahf
push
sbb
neg
or
mov
ljmp
xor
dec
outsl
pop
push
iret
lret
test
push
enter
mov
adc
mov
inc
adc
aas
popf
jae
and
push
xchg
jo
ficomps
dec
cmc
aaa
into
or
pushf
cmp
std
repnz
out
xor
push
mov
mov
xor
mov
pushl
inc
jl
push
scas
push
mov
loopne
jle
jne
xor
je
sti
cs
icebp
hlt
add
int3
inc
push
cmp
xor
xchg
ficoml
add
scas
lea
xchg
outsl
arpl
daa
xchg
imul
cmpsb
xor
or
dec
push
push
movsb
sub
orl
orb
repz
sub
and
sahf
pop
sti
in
pop
push
jbe
push
jecxz
mov
rcl
in
jle
pop
popa
rcrl
lahf
jne
inc
lock
loop
jmp
xchg
sub
ficoml
cmp
bound
jae
popf
ret
test
mov
stc
and
int
sbb
mov
push
cmp
test
out
pop
out
or
test
roll
inc
repnz
mov
push
jg
dec
jle
int3
adc
jo
lock
adc
push
lret
iret
cmpsl
push
imul
push
je
mov
scas
addr16
jg
into
dec
hlt
clc
mov
in
rcrl
mov
inc
and
pop
int
xorb
jmp
jmp
add
std
mov
pop
leave
pop
fs
dec
sub
cmp
sbb
cld
stos
mov
ljmp
sub
inc
cld
addr16
pushf
dec
lods
sbbb
add
mov
mov
sbb
mov
mov
std
icebp
sbb
adc
dec
push
fdivrs
fwait
cmp
adc
push
pop
pop
rcrl
pop
sub
xchg
mov
dec
stos
addr16
sti
xchg
cmpl
cmp
jo
lea
repz
movsl
push
test
cmp
ss
cmc
inc
test
sub
and
mov
mov
jno
and
ljmp
mov
dec
inc
arpl
mov
mov
cwtl
pop
pop
divb
test
ret
push
push
fstpl
adc
insb
sbb
mov
pop
out
cli
sbb
sbb
push
mull
test
mov
mov
fwait
pop
test
cs
pop
xchg
or
mov
ljmp
faddp
lock
mov
test
xor
dec
push
fstpt
mov
lcall
dec
fcmovnu
push
addr16
arpl
xchg
xchg
mov
test
fisttps
push
imul
imul
outsl
movsb
cmp
mov
shr
cwtl
es
out
or
icebp
subb
dec
lds
push
jo
xor
or
jp
inc
sbb
dec
lock
aas
mov
push
mov
les
rorl
pushf
test
push
push
mov
mov
push
lods
or
pop
xlat
jae
sub
ds
fmul
stos
push
divb
sub
loopne
sahf
xchg
aaa
ds
int
pop
orl
fsubrl
pop
pop
cmpsb
xchg
lods
js
pop
outsb
aam
popf
repz
adc
out
push
lods
repz
fnstsw
insl
pop
repnz
loop
xchg
xor
jo
pusha
jmp
cmpsb
xor
nop
pop
mov
dec
leave
rclb
sub
arpl
imul
out
shl
dec
dec
dec
push
pop
inc
cmp
push
loop
bound
repz
cmp
xor
jne
xchg
xor
xchg
sbb
int
movsl
test
jbe
cmp
push
clc
cmpsb
shr
or
mov
andl
or
push
imul
pop
fwait
test
cmp
or
fcmovb
push
sub
pop
mov
jmp
dec
out
mov
xchg
cld
inc
stc
cmp
les
and
mov
xor
arpl
xor
test
adc
dec
outsl
shrb
inc
jecxz
and
mov
gs
inc
lock
cli
or
insb
dec
jne
jno
mov
mov
enter
xchg
lods
pop
jle
xchg
inc
and
cmp
in
test
jmp
lods
push
es
cwtl
inc
mov
xchg
mov
rcll
mov
ds
in
ljmp
dec
bound
xor
inc
stos
cwtl
aas
push
in
lret
ds
push
jb
orl
adc
inc
push
add
mov
rolb
xchg
sti
and
out
sbb
addr16
outsl
sub
ds
dec
mov
pop
xor
xchg
call
mov
jno
idivb
push
lret
pop
out
pop
imul
and
add
mov
js
dec
icebp
bound
mov
ss
mov
mov
iret
dec
mov
xchg
jecxz
test
xor
lock
sbb
push
jecxz
aaa
add
sbb
lock
iret
aaa
loopne
inc
cli
inc
pop
or
cmpb
mov
pop
pop
pushf
xchg
push
or
mov
shl
inc
add
imul
push
clc
fwait
jnp
iret
adc
sbb
cs
dec
jb
pop
dec
and
das
jns
jg
mov
sub
pop
mov
popa
mov
dec
push
mov
call
mov
push
mov
inc
xor
mov
dec
loope
cmp
push
rorb
inc
dec
mov
idivb
adc
pop
je
ja
lcall
outsl
dec
add
jle
xchg
add
cmp
imul
jmp
addb
push
pop
xor
sbb
and
fldcw
mov
icebp
fsubrs
lcall
push
jnp
adc
out
test
insl
call
mov
or
or
inc
jno
cmp
mov
lcall
call
mov
and
ss
or
insb
stos
and
sub
or
cmpsl
scas
push
jnp
pop
in
xor
jge
cwtl
pop
notw
or
dec
stos
andb
or
test
and
test
xor
in
jge
mov
inc
cs
into
dec
scas
pop
push
mov
inc
dec
fs
out
push
sub
sahf
add
iret
int3
inc
hlt
xor
stc
insb
xor
lret
jle
sbb
push
cmp
fstpl
pushf
dec
xor
xchg
lcall
sbb
nop
xchg
movsb
jle
imul
dec
nop
subl
xchg
fmuls
pushf
jb
adc
mov
or
repnz
je
xchg
or
dec
mov
cmp
or
aad
lret
xchg
shrd
leave
sar
mov
fdivl
jl
ljmp
xchg
clc
scas
sub
add
pop
adc
dec
xchg
xchg
dec
push
inc
mov
andl
sub
and
mov
aas
mov
mov
xchg
jp
roll
push
and
sahf
mov
dec
sbb
scas
shlb
or
push
js
inc
adc
pushf
mov
sbb
fwait
mov
notb
push
in
icebp
mov
adc
fsubrs
inc
pop
movsb
test
cltd
sub
mov
push
out
pop
dec
pop
push
dec
not
mov
adc
add
xchg
loope
loope
cmp
mov
lret
aam
xor
dec
sub
sbb
cmp
sbb
mov
test
iret
arpl
fisubs
test
sarl
mov
cwtl
sbb
xlat
mov
clc
es
add
or
inc
popf
sbb
push
lret
ss
vmwrite
lds
mov
dec
mov
mov
negb
mov
sbb
arpl
adc
dec
jmp
pop
add
add
mov
push
add
inc
data16
repnz
orb
je
aas
int3
xlat
gs
les
xor
push
jns
or
mov
lds
jne
andb
pop
pop
imul
out
pop
jae
cli
push
cmp
dec
sbb
out
push
sub
inc
push
jo
adc
cli
push
ret
outsl
std
dec
pop
or
pop
push
pop
cltd
xlat
daa
das
fs
idiv
imul
ds
cli
cltd
sbb
sahf
rol
repz
pop
pusha
xchg
jg
sbb
aas
xor
loope
adc
int
mov
adc
int3
out
xchg
out
mov
addl
shrb
das
sbb
dec
pusha
mov
in
xor
aam
xor
sub
mov
addr16
in
test
into
xlat
pop
call
icebp
pop
int
insl
mov
or
subb
in
mov
jnp
jo
push
mov
sti
sbb
jne
or
das
xor
into
das
pop
xor
lcall
xchg
test
jp
xor
fcompl
jge
mov
lahf
rorb
mov
in
addr16
jle
repz
pusha
sbb
jg
xchg
or
mov
xor
rorb
mov
pop
mov
push
lret
or
in
push
lods
call
mov
es
adc
dec
dec
int
jbe
jp
pop
or
sbb
lea
aaa
std
mov
pop
andl
roll
iret
shl
push
cli
adc
jb
lcall
mov
sub
push
test
sub
or
or
pop
sbb
fstpt
cmpsl
pop
cmp
mov
andl
cmpsl
fs
ljmp
fsts
dec
out
ljmp
lea
push
adc
xchg
lret
or
daa
out
add
repnz
jnp
jmp
dec
add
dec
push
vmovd
push
add
adc
int
pop
es
es
cmp
int
jmp
pop
insb
cmp
je
fstpt
in
lods
loope
je
mov
mov
rcrb
imul
lcall
adc
bound
out
negb
fcoml
xor
ds
dec
mov
mov
xor
mov
std
push
mov
pop
lcall
mov
insb
mov
adc
xor
and
jns
push
mov
push
subl
iret
cmp
pusha
cltd
aad
es
add
inc
lahf
pop
sub
sbb
push
daa
es
jge
sahf
xchg
cmpb
out
sbb
push
jae
mov
inc
mov
dec
push
lods
in
mov
inc
shrl
insl
and
lock
aam
data16
cmpsl
mov
pop
inc
push
dec
ficomps
sub
mov
jp
dec
pop
es
xchg
mov
out
dec
fstl
inc
add
mov
sbb
mov
int3
pop
cld
xchg
fldenv
pop
dec
jmp
in
pusha
scas
fwait
in
dec
jb
mov
inc
xchg
js
and
inc
std
xor
add
mov
cltd
push
movsb
add
dec
lret
pop
shlb
adc
xchg
push
jno
or
mov
pop
push
imul
popf
popf
arpl
or
cltd
add
pushl
jae
pusha
jae
mov
sbb
jg
push
in
xchg
xlat
addl
cmp
rcrl
lret
dec
add
cmpsb
loope
xor
sbb
rorb
pop
jg
mov
lcall
inc
push
cli
mov
addb
ret
and
in
adc
pop
pop
or
or
popa
scas
push
push
jle
lea
mov
fsubl
or
rclb
movsl
ljmp
mov
aaa
int3
arpl
and
jo
into
xor
aaa
call
movsb
inc
pop
inc
inc
lahf
xchg
movl
cmp
jnp
xor
daa
cmc
sbb
lds
jmp
pop
mov
pop
sub
cmp
mov
shrl
jne
int3
in
mov
pusha
rorl
daa
and
mov
push
lods
popf
ret
and
pop
aaa
test
call
cmc
cmpsb
sbb
or
or
mov
pop
ljmp
and
jnp
dec
and
clc
pop
je
or
pushf
das
add
pop
nop
das
mov
ds
pop
outsb
pop
cmp
int3
jne
fsubr
scas
les
fs
push
hlt
lahf
sti
jl
xor
cmp
push
mov
fadd
test
jge
dec
movsb
xor
lcall
sahf
lods
pop
js
mov
lret
into
adc
mov
pop
es
icebp
les
ljmp
mov
adc
cli
add
loope
jnp
sbb
jecxz
adc
clc
in
fsubs
test
push
cwtl
jns
pop
dec
or
in
push
add
adc
sti
popf
pop
movsl
ja
in
sbb
scas
xchg
sbb
and
outsl
pop
mov
jge
dec
jge
push
mov
mov
lock
lock
push
xchg
int
rcl
sarb
test
imul
pop
pop
fsubr
mov
shrl
xchg
xor
test
xchg
xor
in
jnp
sbb
out
add
les
fstl
jg
stc
stos
add
or
pop
insl
js
xchg
xchg
pop
mov
xchg
inc
lret
aas
or
loopne
xchg
or
mov
into
sbb
fnstenv
mov
adc
repnz
fcmovne
add
xchg
inc
inc
outsl
push
out
movsl
in
loop
inc
scas
cli
in
xchg
or
sbb
loop
rorl
inc
adc
inc
mov
ret
enter
lahf
jge
je
cld
or
rcr
das
adc
jb
mov
or
pop
jmp
test
or
cmp
cmpb
dec
movsl
push
sbb
inc
fcmovu
fs
jmp
mov
push
insl
mov
adc
je
pusha
mov
insb
test
push
adc
jmp
adc
dec
idiv
mov
scas
out
and
cli
loopne
jo
sub
add
loope
pop
stos
cld
inc
mov
gs
leave
sahf
ret
mov
cmc
arpl
xchg
mov
adc
mov
adc
fldl
jbe
adc
push
pop
or
cmp
pop
mov
jge
clc
mov
mov
push
jp
push
test
inc
add
pop
cltd
push
push
popa
and
cmp
imul
pop
mul
adc
pop
dec
jbe
xchg
jl
sbb
xchg
stos
push
sub
or
dec
jnp
mov
mov
pop
int3
push
ss
je
adc
dec
jo
test
shll
sub
push
or
fcmove
outsl
xorb
or
stos
stos
in
stos
add
cltd
push
in
sarb
rcr
jl
sub
sarb
sub
pop
mov
cwtl
push
fistl
add
mov
adc
pusha
adc
jmp
mov
pop
push
push
sbb
cmp
mov
or
xor
lock
inc
mov
loopne
imul
push
adc
cmp
insl
enter
mov
movsb
jne
shr
cmp
inc
sub
xlat
sbb
sub
pushf
les
xchg
inc
sbb
push
in
jne
mulb
nop
shrb
and
push
mov
push
and
mov
aam
cli
fadd
rcr
enter
or
ret
cmp
or
adc
pop
insl
leave
inc
push
xor
mov
dec
mov
xor
mov
arpl
jl
shrl
ljmp
into
jb
js
into
mov
mov
mov
dec
int3
pop
jg
cmpsl
ljmp
push
sbb
icebp
hlt
scas
inc
pop
push
cltd
jecxz
xor
mov
gs
loop
cmpl
ds
fwait
xor
xor
fwait
push
bound
xchg
loope
ret
fsts
fstl
push
jg
mov
mov
fdivrs
pop
shrl
pop
jp
fldl2t
adc
or
dec
inc
insl
adc
movsl
fcoms
dec
out
aas
dec
nop
fcmovu
cli
sub
mov
xchg
js
mov
mov
xor
in
loopne
icebp
mov
sbb
decb
add
out
mov
in
mov
push
inc
nop
cmc
xchg
xchg
adc
in
push
inc
hlt
push
int
inc
sub
pusha
and
dec
push
add
sti
adc
cli
fimull
inc
sub
nopl
stos
test
psubsw
inc
and
adc
xchg
and
and
inc
movsl
loopne
jnp
movsb
rorb
sub
mov
das
stos
xchg
hlt
shlb
or
dec
fstp
cmp
jne
mov
pop
ss
sbb
pop
outsb
clc
cmp
loope
adc
jle
cmp
jne
push
popa
dec
int
sbb
xchg
sub
xor
outsb
or
pop
arpl
out
mov
int3
lods
mov
pop
push
push
in
jbe
cmp
adc
adcb
int
xchg
pop
or
cmpsl
stos
movsb
es
dec
stos
adc
push
scas
call
lcall
out
pop
pop
push
inc
divb
push
mov
mov
jne
stc
pcmpgtd
jg
roll
sbb
and
inc
push
dec
daa
fwait
rcrb
outsb
notl
out
stc
cmp
imul
inc
sbb
mov
xchg
xor
divl
outsl
ret
shl
jne
inc
test
add
push
or
jns
test
repnz
mull
cwtl
les
xchg
insl
das
mov
inc
sub
lahf
outsb
loope
popl
cmp
cmpsb
dec
pushf
lret
out
std
jp
push
mov
int
mov
adc
aaa
adc
ret
out
unpckhps
loope
sub
pop
adc
popa
std
icebp
mov
jmp
jmp
shll
sbb
or
add
pop
or
aam
or
data16
es
add
sarb
sbb
and
aam
mov
sbbl
test
mov
mov
ffree
std
cld
mov
and
sbb
push
idivl
xor
jo
inc
stc
xchg
xlat
ss
lods
icebp
jge
aaa
jbe
fmul
enter
scas
or
jno
and
mov
xlat
jle
bound
sbb
mov
shr
aas
sub
ss
repnz
xchg
mov
jecxz
jo
fimuls
push
adc
jbe
mov
scas
cmc
ret
in
fcomi
shl
jnp
or
mov
xchg
outsl
flds
and
inc
mov
dec
push
leave
ja
es
lea
adc
int
fcoml
out
inc
lods
or
pop
cmc
adc
into
push
jge
pusha
jg
and
mov
add
mov
cmp
mov
leave
stc
out
shrb
scas
jnp
add
sub
dec
adc
or
adc
shll
cmpsb
call
pop
rcl
shlb
test
sbb
mov
test
add
cmp
adc
lret
stc
dec
inc
jo
cmpsl
jb
xor
andb
or
notb
ljmp
loope
mov
test
mov
jg
or
mov
inc
pop
xchg
cli
scas
pop
cltd
push
repnz
out
aas
gs
sarb
inc
stos
mov
js
bound
xorl
sahf
into
xor
xchg
int
push
xchg
mov
mov
dec
push
int
dec
cmp
sbb
outsl
bnd
ret
popa
push
xlat
hlt
lock
or
add
jno
loopne
pop
pop
push
addl
adc
xchg
std
mov
lock
push
mov
xchg
xchg
add
mov
sbb
orb
loopne
movsl
mov
bound
jp
mov
std
inc
das
cmp
xchg
and
scas
cmp
sahf
xchg
mov
int3
mov
pop
outsb
fimuls
mov
dec
and
pop
dec
or
outsb
dec
mov
div
mov
xchg
fsts
lret
jge
mov
or
pop
cmp
addr16
push
add
lret
imul
cmpsl
jmp
push
mov
xchg
sahf
fidivl
xlat
jbe
loop
jp
mov
mov
mov
xor
xchg
mov
xchg
fcoml
sbb
cld
notl
lods
sub
in
addl
pop
sub
add
cmp
inc
roll
dec
rcrb
je
xchg
adc
es
nop
add
lock
dec
fsts
sub
incl
mov
lea
icebp
or
pop
out
movsb
cmp
cld
in
bound
sarl
repnz
clc
mov
jmp
inc
ss
add
inc
test
cld
test
and
fcomi
push
jle
dec
pop
and
sub
xor
or
and
adc
cmp
ds
cmp
int
out
mov
pop
and
jae
ds
push
add
jle
xchg
sbb
std
das
push
add
jo
sub
mov
push
mov
cld
pop
lahf
cli
sub
cmp
cmp
rclb
fwait
leave
xchg
cmp
pavgb
adc
lods
dec
pop
mov
loopne
mov
stos
sub
lods
dec
cld
pop
outsb
in
and
jne
mov
inc
mov
das
ljmp
push
sub
aad
test
dec
fs
pop
xor
aas
push
and
mov
mov
xchg
std
mov
cmp
jnp
xchg
push
push
sbb
in
shrb
ljmp
imul
addr16
xchg
push
sub
push
insl
icebp
daa
shr
mov
pop
fadds
fs
ss
push
popa
je
insl
xlat
xor
imul
jne
add
addb
aam
mov
mov
sub
addr16
jne
sbb
and
stc
cmpsb
scas
inc
subl
pop
sbb
mov
icebp
inc
xchg
and
or
movsb
test
mov
dec
sti
fucomip
xchg
sub
pop
mov
iret
jae
lock
mov
icebp
scas
cmp
sbb
cld
scas
jbe
jne
fsubs
popf
mov
xchg
cltd
ds
popa
sub
mov
fwait
lret
jb
aaa
inc
or
test
push
xchg
rorb
lret
jle
fmuls
aaa
adc
call
les
adc
xchg
xchg
xor
popw
cs
and
adc
xor
adc
sub
sub
xchg
push
cmp
pop
lods
in
movsl
loope
fs
data16
xchg
jge
and
xor
pushf
aam
push
xchg
xchg
cs
daa
stos
lahf
imul
ljmp
mov
fsubp
lahf
mov
adc
sub
pop
stc
scas
addl
lcall
xchg
cmc
gs
movsl
iret
movsl
mov
pop
das
sub
arpl
lods
sbb
insb
aad
mov
into
sub
jae
mov
adc
cld
bound
mov
popa
adcb
loop
imul
dec
xchg
andl
stc
movsb
mov
mov
jp
xchg
repnz
jp
insb
loopne
test
insl
jbe
jne
xchg
sbb
int
imul
jb
andb
sub
push
sahf
sahf
adc
mov
push
xlat
inc
inc
jns
mov
or
adc
sbbl
pop
and
dec
mov
jns
add
cli
mov
pop
mov
call
sbb
add
rcll
push
push
orb
pop
adc
push
ret
xchg
test
lcall
mov
jp
mov
pop
adcb
addr16
sti
cmpsb
xor
adc
jmp
lea
fcmovu
jp
mov
mov
adc
add
sar
ja
fmuls
or
mov
jo
je
dec
subl
icebp
xchg
add
inc
cmp
sbb
mov
fdivs
std
mov
gs
cmpsl
pusha
insb
xchg
insb
mov
add
and
cltd
mov
movsl
fwait
cld
shrl
jmp
mov
rolb
mov
xchg
sbb
push
inc
int3
insl
cmc
jb
or
pop
lock
pop
mov
jns
ret
push
js
jl
pop
std
xor
ljmp
push
or
pop
xchg
jae
mov
ljmp
inc
pushf
in
sbb
idivb
fmuls
adc
adc
xchg
into
orl
jb
dec
and
mov
cmc
xchg
popa
dec
pop
inc
mov
cli
and
add
xor
ja
adc
xor
sahf
cmp
push
mov
add
es
ja
aad
push
jp
and
sbb
cld
pop
iret
or
and
ficompl
cmpsl
test
or
adc
ret
test
repnz
stc
mov
push
dec
mov
inc
inc
xchg
and
xchg
push
jb
call
jg
push
and
sahf
xchg
movsb
jg
push
sub
xor
loopne
bnd
and
cli
or
cmpsb
sub
cmc
and
arpl
bound
loop
add
iret
mov
sbb
loopne
popf
test
std
or
mov
jg
sub
mov
incl
imul
adc
bound
pop
jge
and
dec
shlb
cli
mov
xchg
mov
mov
movl
push
rcrb
imul
push
xor
xchg
push
insb
jmp
add
sbb
push
mov
mov
out
daa
lds
push
jnp
jno
inc
orl
mov
adc
lea
sub
in
outsl
pop
xor
or
pop
in
repnz
cld
xor
pushf
subl
push
outsb
mov
data16
jge
add
and
mov
ds
dec
mov
xor
dec
adcb
mov
mulb
adc
mov
setae
pop
sbb
out
enter
ljmp
cld
fnstcw
ljmp
push
pop
cmp
inc
sub
cmp
jne
inc
jp
push
cmpsl
inc
push
mov
movzbl
push
or
push
xchg
jno
sbb
inc
mov
push
hlt
inc
and
iret
xchg
inc
mov
and
leave
sbb
mov
addr16
cmp
fdivl
pop
cmp
adc
fwait
xchg
xchg
out
in
sub
dec
hlt
push
xchg
dec
or
cmpb
arpl
data16
es
add
or
test
push
push
mov
adc
and
mov
jo
xchg
dec
icebp
int3
xchg
cli
or
inc
aad
dec
add
mov
jecxz
rcrb
insl
xchg
mov
outsl
lds
lahf
je
cmp
cmpsl
mov
cmp
xorb
jmp
dec
fsubs
xchg
fldcw
or
or
pop
sbb
inc
icebp
sbb
cmp
mov
mov
push
roll
sub
mov
fs
sub
rcr
xchg
or
mov
mov
hlt
sbb
adc
push
push
cmp
add
sahf
fstpt
lds
mov
jp
sbb
pop
cli
std
mov
or
sub
sub
testb
mov
add
or
nopl
dec
jnp
jb
fs
push
imul
daa
sub
push
pop
cmp
xchg
sbb
fisubrs
fildll
fdivrl
lahf
inc
add
inc
jno
push
loop
test
and
std
mov
push
clc
sbb
mov
lds
xlat
sbb
mov
sbb
lcall
shrl
imul
xchg
pop
in
or
lret
stos
js
jno
xchg
and
addl
pop
dec
mov
arpl
cwtl
lods
pop
jno
ja
dec
icebp
pusha
jne
cmp
je
fstps
sub
emms
pop
inc
adc
mov
imul
repnz
and
aad
jbe
sti
lods
inc
pop
das
jbe
push
sub
arpl
push
mov
enter
mov
leave
cltd
adc
int3
arpl
mov
xchg
and
mov
lahf
pop
inc
rcr
out
dec
lods
xchg
sbb
and
loop
sahf
imul
ret
push
icebp
stc
nop
pop
iret
mov
or
inc
in
orl
sbb
inc
inc
cwtl
stc
mov
cmp
test
int3
in
dec
inc
mov
xchg
pusha
lods
mov
add
pop
test
push
in
rcrl
jb
scas
imul
cwtl
stc
mov
xor
mov
cmp
ret
sub
adc
jl
lcall
adc
push
cmp
lcall
jne
mov
inc
inc
cmc
jl
push
inc
pop
sbbl
mov
adc
leave
in
jnp
mov
or
mov
jl
jecxz
mov
addr16
mov
cmp
out
rorb
cld
and
or
mov
cmp
jge
in
loopne
xor
scas
pop
jle
cld
cmpb
mov
lock
mov
jg
das
loop
mov
add
mov
pop
test
jae
nop
fbstp
ja
inc
cli
jo
mov
pop
test
test
inc
xor
cmp
push
pop
movsl
jae
or
jg
cmp
bound
insb
cwtl
ljmp
fprem1
nop
int
pop
sub
movsl
sbb
push
std
jmp
ficomps
xchg
jbe
cmp
dec
hlt
xchg
stc
and
push
mov
ror
sub
cmc
jbe
push
popa
pop
mov
xor
outsb
insb
les
mov
jp
add
gs
pop
push
dec
in
jg
add
lret
jg
dec
popa
rcrl
dec
lock
xor
call
mov
mov
pop
add
cmp
mov
mov
jp
das
data16
mov
hlt
and
sub
imul
push
test
ja
mov
mov
stos
sbb
mov
fisubs
jge
stos
das
das
rorb
out
pop
ds
fstl
cwtl
sbb
mov
insb
jb
not
popa
push
xchg
cltd
ja
xchg
pop
jb
fistps
add
or
dec
pop
cmc
push
push
pop
jb
mov
pop
subb
dec
andl
dec
pop
and
jge
fld
bound
aaa
sub
jmp
or
jae
sbb
mov
iret
pop
arpl
loopne
sub
xor
bound
adc
cmp
out
in
xchg
mov
iret
sbb
push
mov
testb
cmp
pushf
mov
xlat
dec
push
enter
sub
cli
aam
fisubl
add
dec
sahf
and
sarb
mov
pop
daa
js
add
lds
aaa
insb
xchg
clc
pop
ljmp
mov
mov
sbb
jp
sbb
repnz
jne
xor
mov
out
ds
out
aad
jmp
in
cmpl
sbb
adc
loop
mov
insb
cmp
mov
fcomi
insb
mov
enter
mov
arpl
mov
and
movsl
test
ljmp
inc
xor
mov
subl
mov
dec
sub
xchg
sbb
adc
mov
cli
lods
ret
ret
out
popf
les
cwtl
outsb
shrb
xchg
mov
xor
loop
arpl
mov
pop
push
fimuls
mov
sbb
in
mov
loop
rdmsr
inc
dec
dec
push
sub
mov
push
push
dec
push
pop
adc
aaa
ret
ss
hlt
dec
add
dec
push
fnstenv
es
lea
xchg
pop
jmp
out
pop
jne
negl
pop
sub
cmp
fbstp
add
sbb
into
push
xchg
shr
aam
add
xchg
je
je
aaa
mov
adc
and
dec
lds
and
and
lret
and
fdecstp
aas
ret
adc
cmp
fsubrs
xor
movsl
fnsetpm(287
test
inc
cmp
mov
bound
lods
sub
and
pop
int
in
dec
cmpsb
jo
hlt
cmpsl
fnsave
adc
scas
pop
pop
pop
mov
clc
jne
inc
jl
scas
daa
pop
mov
inc
mov
sbb
xchg
fisttpll
xchg
bound
in
xchg
fisubl
push
frstor
outsb
adc
adc
sbb
int3
repnz
insb
jp
aaa
dec
scas
faddl
jb
imul
out
pop
jmp
lods
leave
xchg
data16
jae
lahf
dec
push
in
icebp
add
dec
dec
movsl
push
cli
mov
ret
and
sub
dec
mov
test
jle
lcall
xor
mov
fs
cmpsb
rclb
xchg
das
test
jge
sub
test
shrl
sub
rolw
xchg
mov
rcrb
out
mov
push
mov
or
mov
je
les
andl
mov
jg
xor
ljmp
mov
sbb
lcall
lahf
mov
mov
orb
popf
adc
mov
mov
inc
and
inc
stc
adc
push
adc
xor
adc
mov
mov
std
adc
pusha
xor
hlt
and
or
lods
hlt
mov
sbb
sbb
jmp
pop
iret
xor
ret
fxch
xlat
jne
arpl
jge
adc
mov
jp
adc
mov
dec
adc
rdmsr
push
pusha
addb
sub
repnz
fwait
sbb
and
push
inc
dec
loop
xchg
ret
dec
xchg
pop
and
xor
cmp
xchg
sti
test
cmpl
inc
das
inc
loopne
cmpl
cli
mov
push
mov
inc
pop
shlb
push
mov
mov
add
xchg
mov
fimull
ss
popa
jns
mov
insl
ud0
rcrl
mov
pop
xchg
push
cmp
adc
jae
pop
inc
adc
out
adcl
fs
xchg
js
xor
cli
popa
and
sbb
mov
lahf
xchg
lds
xlat
cmp
int3
outsb
daa
xchg
inc
push
jne
clc
rcll
movsl
jo
lret
imul
ljmp
pop
xchg
cmp
std
dec
add
popa
and
data16
cmp
push
mov
sbb
jb
mov
ss
xchg
add
xor
and
sub
das
or
cmp
xor
scas
adc
fbstp
fnsave
jmp
daa
jge
dec
fwait
into
push
sar
fisttpl
imul
or
sbb
push
stos
and
rcrl
push
shll
test
fs
insl
pop
outsl
cltd
cs
mov
pop
xlat
xor
jl
xor
mov
int
xor
popf
loop
call
push
add
std
mov
adc
or
jl
les
aas
push
mov
mov
mov
lret
xchg
into
jg
mov
xor
add
inc
adc
or
dec
arpl
sub
int
je
or
and
sbb
push
lea
test
cmp
sub
xchg
pop
fdivrl
imul
jp
dec
imul
push
sub
daa
pusha
shll
push
mov
movsb
test
mov
loopne
cld
fiadds
dec
or
and
insl
ret
dec
adc
out
jne
push
xlat
xchg
rcll
std
push
mov
and
pop
adc
rcl
mov
mov
popa
jb
push
fbld
scas
adc
push
xchg
subb
push
sbb
popa
push
fcmovne
mov
push
mov
nop
push
int
addb
jae
and
mov
jnp
pop
fs
sbb
xor
sub
and
scas
adc
xor
in
fdivrl
xchg
pop
std
daa
je
cmp
jecxz
mov
cmpsb
enter
loop
je
xchg
jb
in
jmp
sub
cmp
sbb
mov
lods
in
push
shrl
add
mov
movsb
mov
mov
sbb
cmpsb
and
add
mov
cmpsb
and
dec
jg
adc
push
leave
jle
scas
lahf
jmp
imul
pop
push
and
aas
dec
pushf
out
rcrl
add
test
inc
out
incb
add
cmc
sti
xchg
iret
push
movsb
in
mov
add
push
xchg
and
cmc
or
jb
test
into
scas
fidivrl
cmpsb
repz
xor
xchg
xlat
jl
pop
addr16
xlat
clc
xor
subb
sub
leave
hlt
xchg
sub
or
sbb
cmp
pop
enter
xchg
cmp
mov
mov
push
xchg
and
sbb
ret
pushf
int
mov
pop
push
cwtl
ja
mov
ss
mov
int3
pop
cmpsb
loope
pop
cmpl
push
xchg
xchg
outsl
sarb
lret
cmpsb
notl
xor
push
into
and
cmp
insl
mov
popa
scas
mov
xchg
inc
repnz
xor
xchg
push
or
jmp
add
repnz
outsl
arpl
sbb
or
pop
jg
mov
inc
mov
fistl
cmp
leave
lahf
xor
mov
test
inc
je
xchg
mov
inc
push
mov
lcall
popf
adc
sti
fimuls
xchg
push
sub
push
lret
jo
pop
clc
fucom
cmp
add
adc
in
xchg
pop
mov
arpl
sbb
js
stc
sub
jns
cmp
xchg
add
sub
adc
mov
sub
mov
in
mov
scas
les
or
push
adc
mov
and
jecxz
mov
into
inc
xchg
dec
imul
mov
sub
in
or
and
push
fcmove
pop
jo
sub
push
cmpsl
aas
cmp
dec
lret
out
jo
mov
fistpl
adc
lods
sti
imul
push
jne
push
addr16
dec
les
xchg
mov
xrelease
or
aam
or
xchg
iret
mov
daa
xchg
shlb
sbb
rcl
inc
and
or
mov
inc
adc
mov
inc
into
cmp
in
orb
and
mov
mov
addr16
and
sub
loope
rcrb
pop
push
idiv
mov
clc
leave
dec
out
pop
movsb
test
mov
xor
hlt
or
insl
rcrl
lock
add
push
dec
mov
xor
sbb
sbb
sbb
pop
push
xchg
sbb
mov
jne
stos
rcr
std
repz
loop
stc
subl
jecxz
inc
outsl
jb
lods
sti
ret
stos
mov
mov
stc
rorb
std
inc
fdivrl
mov
cmp
stc
dec
xchg
or
scas
jecxz
mov
xchg
inc
add
mov
or
cwtl
outsb
lcall
push
push
dec
push
sub
out
loop
jmp
or
sub
mov
dec
stos
and
mov
xchg
lock
push
lahf
in
add
shrb
sti
cmp
fcmove
out
pusha
sub
xchg
lea
jne
adc
andl
lcall
mov
fst
les
sti
dec
push
dec
mov
push
cmc
movsb
notb
xchg
xor
inc
cmpsb
loop
and
loope
sbb
mov
test
push
lock
das
test
jae
mov
outsl
dec
inc
loope
push
add
icebp
xor
outsl
pop
das
mov
out
fldenv
or
mov
ss
loop
in
mov
ror
les
outsl
jnp
pop
jns
cmc
jno
test
icebp
fucomi
sub
lea
fidivrs
or
ret
xchg
popf
dec
aaa
insb
je
scas
lods
pushf
xchg
jne
lcall
popa
and
mov
jmp
and
jne
jmp
xlat
lods
sub
mov
jecxz
push
add
jae
push
repnz
std
inc
loope
ffree
lcall
mov
das
and
lods
cwtl
pop
add
aam
shl
dec
inc
andb
mov
pop
scas
fdivs
jle
pop
sub
outsl
pop
cmpsl
sbb
orb
xor
mov
sbb
lgs
mov
insb
shll
lods
stc
xchg
ja
inc
mov
addr16
loopne
filds
shr
xor
sbb
mov
orl
xchg
clc
out
adc
aad
mov
rcll
bound
sbb
and
mov
pop
scas
sbb
sti
addr16
lock
pop
in
and
out
in
push
sarl
mov
mov
jns
jge
jno
aam
pop
push
movb
sbb
ss
xor
and
ror
jmp
sub
push
aam
sub
push
stc
push
ret
jnp
mov
test
insb
ret
xchg
xchg
clc
test
stos
inc
imul
lds
push
adc
shll
mov
dec
mov
mov
mov
stos
cld
jo
pop
xlat
pusha
mov
dec
rclb
push
add
inc
ret
sub
inc
shll
fildll
pop
jne
mov
jne
arpl
test
arpl
adc
loope
pushf
out
ss
ss
ja
jmp
jge
mov
movb
xchg
xchg
repnz
mov
jne,pn
loope
pop
out
sti
push
and
call
cmp
addb
jecxz
frstor
inc
mov
sbb
push
fimull
cmp
leave
jg
roll
jle
inc
and
stos
mov
in
sbb
push
cltd
outsl
jle
pop
mov
xor
xchg
negb
movsl
xchg
or
stos
addr16
notl
adc
sbb
aas
push
ficoml
repz
push
dec
rcll
pop
sahf
or
idivb
jge
hlt
ret
in
xor
stos
inc
cli
test
push
mov
icebp
bound
arpl
sarl
cmp
mov
gs
mov
pusha
push
insl
inc
outsl
lods
inc
lcall
mov
cmp
adc
imul
pop
jg
sub
inc
and
aam
and
push
cmc
test
push
es
sbb
rcl
and
aaa
pop
pop
add
push
adc
int3
jne
add
in
stc
push
div
add
mov
jo
or
xor
daa
push
sub
in
lret
inc
xor
cmpsb
and
sbb
xchg
push
pop
mov
jo
mov
xchg
fsubrs
movsl
dec
fwait
ss
mov
mov
movsl
cld
jne
rcrl
jno
adc
and
jl
mov
and
scas
inc
add
insl
int3
dec
cmp
pop
mov
xlat
push
jbe
setbe
mov
scas
loope
mov
cmpsw
jbe
test
pop
cli
mov
enter
lods
pop
mov
fisubl
ret
cmp
neg
push
push
call
push
push
fucomi
sti
mov
pop
stos
popf
add
lock
lea
xchg
lret
mov
dec
mov
or
xor
lds
xor
dec
es
push
repnz
cli
mov
mov
in
insb
jbe
jp
xchg
fldt
xor
movsl
lret
mov
repnz
iret
jbe
mov
imul
stos
and
adc
cs
mov
jne
cmpsb
ljmp
xchg
mov
lret
xchg
or
fxch
fs
add
out
lods
repz
pop
cmp
shrl
jne
adc
xor
cmp
lock
or
test
jg
push
lock
add
out
lret
aaa
out
jno
hlt
xor
loop
pop
in
hlt
lock
clc
xchg
popa
mov
add
jnp
and
daa
xor
pop
lcall
test
lea
clc
fs
stos
out
sbb
sub
jns
movsl
lock
stos
push
xchg
add
sbb
sub
scas
repz
sbb
loope
loopne
mov
push
pop
sbb
iret
lea
mov
stc
jnp
push
xchg
mov
femms
enter
sbb
or
lret
pop
loope
push
jge
and
and
push
mov
stc
mov
lret
and
stc
and
adc
pop
cld
scas
jnp
inc
or
adc
int3
dec
sbb
iret
xchg
xchg
or
sub
sub
lcall
leave
inc
aad
add
js
mov
adc
dec
fstpl
pop
inc
push
popa
scas
jmp
lock
aaa
xor
push
fldcw
dec
add
and
mov
inc
pusha
sbb
inc
mov
fwait
mov
cwtl
cmp
mov
inc
or
arpl
fwait
mov
data16
xchg
mov
pop
inc
xor
fwait
test
daa
nop
loopne
xchg
mov
inc
mov
pop
stos
sbb
xchg
inc
lret
adc
cmp
xchg
mov
pusha
push
notl
inc
jnp
enter
and
repnz
xchg
test
mov
cltd
xchg
nop
imulb
or
mov
xor
sbb
push
cmp
mov
xor
in
test
add
sbb
in
xor
mov
push
arpl
mov
enter
rorl
icebp
mov
cwtl
das
loope
jge
and
shrb
sbb
xor
sub
cmpsb
sbbl
add
mov
scas
push
stos
test
lods
inc
xor
sub
mov
lahf
mov
jmp
dec
pop
inc
inc
popa
cld
iret
cmpsb
fimull
and
xor
mov
xchg
jmp
jge
ror
ret
inc
outsb
mov
xchg
sahf
xorl
leave
pop
xchg
mov
outsb
ss
mov
cmp
xchg
gs
fisttpl
dec
out
mov
ret
ret
out
loop
das
fdivs
bsr
jecxz
mov
mov
or
sub
mov
push
mov
pop
loop
cmc
call
xchg
pop
jno
add
into
fsubrs
je
mov
push
jp
int3
mov
enter
xlat
fwait
xchg
subb
int3
xor
imul
sbb
lea
inc
push
frstor
cmp
leave
mov
adc
imul
mov
adc
dec
mov
mov
shrb
pusha
xchg
es
ficompl
xchg
movsb
xchg
cmp
pop
rclb
jae
mov
ficoms
ret
add
movsl
mov
mov
rorb
pop
add
adc
idiv
push
add
aam
sub
xor
sbb
add
dec
scas
dec
rol
mov
mov
push
and
stc
int
cwtl
cmp
mov
in
daa
pop
cli
add
jecxz
dec
sbb
popa
out
scas
xchg
nop
jne
inc
movsb
adc
jns
rorl
lret
push
sub
shlb
cmp
cmp
sbb
mov
pop
and
std
and
cmp
mov
test
adc
inc
jne
pop
ljmp
scas
andl
xchg
sbb
push
push
loop
fstl
mov
fwait
jne
push
mov
inc
mov
jne
add
daa
ljmp
cli
out
mov
jbe
or
mov
jle
scas
nop
add
shll
into
push
sbb
push
repnz
cmc
add
mov
aam
pop
lock
sbb
mov
cmp
and
mov
pop
std
jle
std
adc
into
push
cs
add
cmpsb
scas
ret
sbb
add
pop
rorl
mov
popf
jmp
mov
ja
xor
and
addl
mov
sti
enter
mov
push
pusha
int
stos
ja
pop
enter
mov
adc
inc
pop
xor
scas
stos
mov
mov
adc
or
mov
xchg
push
test
dec
sub
lret
cmp
or
mov
push
fwait
hlt
pop
es
cmc
push
and
mov
fimull
xor
add
pop
stc
repz
or
adc
mov
test
rcl
xchg
in
out
fisttps
data16
inc
shrb
cmove
ficompl
xchg
mov
ss
mov
movsl
push
mov
loopne
sub
notl
mov
xor
xchg
lock
and
aam
inc
ficoms
icebp
dec
leave
jecxz
and
fsub
sbb
ljmp
insl
mov
pop
mov
lahf
cmc
cld
xor
movsb
push
gs
jp
int
jge
out
subb
push
lret
add
call
btc
test
es
or
adc
mov
or
mov
ds
out
pop
jp
or
aam
mov
lret
or
movsb
cmp
fimuls
stos
xor
movsl
leave
adc
shr
push
add
mov
mov
stos
jmp
imul
call
clc
pop
dec
stos
leave
lods
xor
mov
sbb
int
in
cmp
rcr
out
mov
pop
insl
movsl
mov
mov
fidivs
and
aad
push
cmpsl
dec
jle
xor
and
cmc
stc
addb
mov
sub
add
dec
insl
test
add
in
mov
sub
push
mov
repz
nop
xor
fcompl
xchg
call
jle
std
fwait
dec
sbb
test
out
cmp
mov
sbb
xor
rclb
sbb
sub
mov
addr16
movsl
and
out
ds
mov
lahf
pop
xor
jmp
subl
cmpsb
stos
cltd
xor
jne
dec
xchg
xchg
pop
push
in
sbb
cli
mov
cmpl
andb
mov
add
dec
das
lret
test
and
cmp
sub
aaa
mov
sbb
dec
mov
mov
stc
xchg
negb
and
insl
fcomps
popl
lds
ds
cs
cli
cmp
das
jge
jmp
pop
cmp
out
or
push
rcrl
pop
push
jno
push
leave
icebp
call
xchg
cmp
pop
iret
stos
jns
push
imul
movd
mov
gs
jnp
xchg
cmp
push
jo
repz
lock
inc
push
jb
push
pop
sbb
xor
in
nop
fisttps
shr
pop
push
jbe
adc
aas
mulb
inc
cmpl
xchg
and
lea
dec
sub
out
and
inc
sti
shll
xchg
pushf
imul
rolb
push
xor
loope
ljmp
fldlg2
xchg
add
stc
into
rorl
jmp
dec
mov
loop
in
in
gs
mov
mov
cs
les
fcoms
jg
mov
jge
iret
nop
push
and
add
xchg
sub
dec
imul
push
pop
and
or
sub
xlat
jne
adc
push
jl
or
pop
xorl
xchg
movsb
lret
movsb
sub
ds
mov
or
push
fwait
adc
lahf
mov
sub
daa
cmpsb
cs
push
es
in
sbbl
jmp
pop
mov
js
fistpll
sub
ror
ja
lea
popf
nop
push
pop
push
sub
sbb
subl
scas
push
sub
testl
lret
movsb
mov
and
fs
fcoms
add
add
fs
loop
lahf
xchg
mov
cmp
sti
mov
dec
cmp
mov
cmp
jmp
dec
sub
xor
cmpsb
adc
cli
sbb
loop
mov
cmpsb
movsb
adc
and
push
mov
jae
rcrl
jno
ret
push
outsl
pop
fsts
daa
fidivs
and
lea
mov
nop
enter
leave
sbb
in
add
icebp
int
loop
dec
rcll
adc
cs
js
sbb
xchg
mov
stc
cmc
testb
ret
test
hlt
lods
push
mov
push
xchg
push
hlt
pop
negb
jle
cmp
cmpsb
cltd
test
inc
aam
test
or
cmp
mov
pop
xlat
mov
iret
lcall
das
je
or
push
ljmp
lds
mov
repnz
cli
and
jecxz
add
pusha
inc
add
out
xor
int
mov
shrl
sarl
mov
leave
mov
add
in
xchg
inc
shlb
mov
mov
cmp
push
xchg
jo
sarb
dec
sub
jb
xchg
cmpsl
or
test
flds
jo
mov
mov
mov
pop
xchg
adc
push
push
inc
mov
inc
popa
dec
add
ds
jns
xor
in
icebp
cmpsl
mov
pop
sti
cmc
movsb
mov
dec
dec
sub
xor
and
mov
testb
mov
cmpsl
cmp
mov
push
push
cmpsl
cs
push
movsb
dec
lds
pop
mov
mov
sub
sbb
jns
inc
pop
in
dec
cmp
data16
loop
add
mov
fs
fwait
add
push
jnp
inc
ss
mov
jb
in
push
ds
movq
cltd
cmp
sub
dec
inc
pushf
ljmp
sub
stos
lcall
cld
hlt
sti
dec
dec
dec
aam
sub
xor
hlt
pop
arpl
or
fdivr
mov
push
mov
mov
jno
outsl
daa
sbb
test
push
fadds
icebp
hlt
movsl
or
pop
out
xor
jns
cmpsl
clc
imul
decb
pop
andl
jp
negl
or
cli
mov
fsubp
or
inc
sub
dec
mov
xchg
inc
lret
add
ret
out
gs
loop
dec
xchg
js
rcll
pop
jns
cwtl
cmpsb
popf
xchg
jecxz
repz
shl
xchg
fimuls
add
nop
mov
loop
cmp
sub
fidivs
shl
lods
jnp,pn
aaa
lock
mov
js
xchg
test
repz
out
cs
mov
xchg
inc
ljmp
stos
cmp
adcl
icebp
xor
cmpsb
ret
test
mov
push
mov
and
xor
fucomip
and
jge
and
jge
test
enter
pop
pop
jno
jl
lea
xchg
mov
fsubs
lcall
or
fwait
mov
xchg
ret
sbb
add
aaa
jnp
add
scas
pop
adc
jae
add
sub
pop
jns
cs
jge
filds
or
or
xchg
inc
sbb
inc
jae
int
ficompl
and
cmp
mov
daa
inc
inc
loope
cld
add
shrb
test
inc
into
jecxz
fs
cmp
cltd
xchg
in
lret
jecxz
xlat
mov
or
inc
out
fadd
repnz
mov
jl
clc
and
lahf
push
aad
ljmp
sbb
mov
sub
dec
sahf
test
lea
loopne
inc
mov
loopne
dec
outsb
or
in
adc
daa
xor
add
sub
xor
fdivl
bound
mov
jp
mov
dec
push
es
dec
mov
ss
movsl
nop
inc
loopne
xchg
cmp
add
pop
fiaddl
pop
scas
xor
jns
popa
mov
push
pop
aad
lret
cmp
imulb
lret
add
mov
aam
daa
js
aam
test
dec
ja
adc
xchg
mov
or
jl
xlat
pop
enter
sbb
xchg
xor
mov
adcl
xchg
jl
mov
cmp
jne
nop
add
pop
sbb
insl
arpl
jno
insb
outsl
sbb
adc
mov
mov
jp
ss
cwtl
push
xchg
xchg
nop
pop
test
das
in
stos
xor
pop
aas
movsb
loope
jl
icebp
sub
js
outsl
or
decb
cld
lock
jmp
adc
or
inc
push
add
adc
mov
lcall
andl
cmp
xor
mov
push
inc
jo
stos
insl
jecxz
cwtl
ret
xchg
lods
adc
imul
cmp
xchg
lret
xchg
inc
cmp
in
xor
dec
adc
fwait
shrl
xor
or
mov
in
incl
outsb
push
mov
xchg
jo
outsl
xlat
jge
fldt
aad
fsubl
xchg
sbb
mov
mov
arpl
xlat
jo
jbe
dec
mov
adc
ret
mov
sub
or
push
xchg
into
rcrl
xor
fnstenv
jae
jge
fstpt
mulb
aas
aam
out
outsb
and
xchg
out
and
outsl
insb
mov
cmpsb
jno
lock
cmc
cmp
and
mov
sub
and
test
lcall
fwait
sahf
adc
mov
xor
stos
add
push
pusha
shr
pop
addb
mov
push
aam
lods
jg
stos
mov
add
pop
add
xor
adc
mov
mov
cvtdq2ps
sbb
xor
mov
jmp
rcrb
push
inc
scas
ss
xchg
cmpsl
dec
mov
push
stos
pop
test
push
dec
in
jmp
xchg
xchg
pusha
cmpsb
mov
xchg
loope
aad
jbe
xchg
mov
lcall
iret
shl
out
sub
xchg
mov
push
dec
push
cwtl
xchg
pop
popl
jg
cli
out
call
aam
sub
jle
orl
aas
push
or
xor
popa
adc
insl
pop
mov
scas
pop
lret
imul
aad
mov
add
jecxz
xor
outsb
test
inc
leave
into
ja
dec
or
lock
lcall
stos
popa
jb
add
jge
add
fnstenv
test
dec
cmpsb
pusha
pop
push
pusha
loopne
mov
pushf
sub
icebp
fwait
cmpl
xchg
lcall
add
out
clc
xor
cmpsb
bound
xor
jno
fwait
out
jae
xor
pop
test
xchg
mov
or
std
lds
les
jne
inc
pop
jnp
sub
inc
leave
sbb
sub
rclb
xor
imul
mov
iret
push
out
lret
push
call
addb
lret
sbb
sbb
mov
sbb
fwait
jo
inc
or
pushf
call
or
roll
jbe
mov
and
and
aas
cmp
mov
mov
arpl
stos
lods
sub
cmpsl
fcoms
jg
and
out
pop
shlb
int
or
push
out
mull
fsubrs
rcrl
outsl
pop
in
xor
ret
xor
sbb
fnstenv
fs
test
cld
dec
add
pop
pop
pcmpeqb
inc
dec
mull
xchg
adc
clc
loopne
ret
aam
js
pop
adc
xor
popf
adc
outsl
xchg
dec
into
and
xor
cmp
mov
dec
movsb
add
in
mov
add
add
lret
stos
push
dec
jp
push
cs
mov
adc
or
out
pop
lock
jp
push
enter
jno
and
add
stc
mov
push
pop
cwtl
mov
je
sub
xor
mov
out
loopne
cs
jmp
xor
fstps
and
push
out
sarb
loopne
mov
jnp
pop
lds
andb
xchg
xchg
dec
jnp
push
pusha
orl
jbe
sbb
out
or
sbb
adc
jecxz
add
push
sti
fidivrs
push
mov
add
pusha
dec
sbb
rcr
movsl
xchg
adc
dec
nopl
dec
das
aam
sub
add
sbb
sub
outsl
xchg
and
mov
push
dec
daa
push
iret
dec
nop
int
pop
lods
mov
add
xor
sbb
sub
xchg
mov
or
jle
fisubl
scas
jmp
leave
push
dec
hlt
push
or
sbb
andl
xlat
inc
jge
stc
idivl
repnz
sub
repnz
lods
and
mov
pop
xchg
xchg
pop
add
pop
cmpsl
mov
dec
jle
jl
mov
fsubl
cmp
and
lcall
or
add
pop
cmp
sbb
sub
add
dec
out
mov
dec
sti
test
bound
aaa
xacquire
cmp
enter
sti
sbb
xor
cmp
mov
push
stos
dec
scas
jne
and
mov
mov
or
jp
mov
or
xchg
inc
pusha
and
into
jb
aad
xor
cs
shlb
sub
fstpl
lahf
pusha
cli
inc
jp
iret
inc
cwtl
inc
mov
push
rolb
mov
loope
divb
ja
or
mov
pushf
repnz
clc
dec
fbld
mov
fs
or
xchg
jno
ljmp
cld
mov
sub
push
jge
fwait
mov
fadds
push
push
dec
push
dec
jp
dec
xor
push
sub
pop
and
repz
lock
mov
mov
xlat
dec
add
mov
cmp
fsubs
mov
sbb
repnz
clc
or
sub
in
xchg
mov
aaa
fidivs
pop
mov
nop
sub
and
mov
mov
xor
arpl
fwait
pop
cmpsl
scas
test
pop
scas
rcl
negl
xor
scas
add
test
mov
jbe
mov
out
pop
sahf
lret
movsb
rolb
ljmp
push
fcoms
sub
sti
mov
fstpt
aaa
imul
or
out
dec
or
imul
call
mov
inc
sbb
add
xchg
push
sub
jbe
cmp
outsl
dec
push
dec
or
mov
mov
sbb
nop
ficoms
push
mov
pop
xchg
orl
jecxz
inc
scas
orb
repnz
mov
xor
repnz
insb
mov
mov
cmp
out
xchg
push
mov
pop
enter
pushf
adc
in
or
and
stc
sbb
pop
dec
lea
xchg
xchg
aam
mov
loopne
ret
std
or
mov
mov
js
rorb
out
rol
cmp
hlt
sub
xchg
jmp
add
push
popf
cld
nop
shl
xchg
movsl
and
inc
mov
xchg
das
mov
xchg
pop
fwait
cs
sbb
insb
das
das
lret
add
loope
insl
jb
mov
mov
mov
and
push
sub
orl
or
mov
iret
inc
out
cmp
cmp
testb
sbb
dec
std
cmp
adc
cmp
adc
cmp
mov
and
es
leave
pop
dec
insb
push
mov
subb
xor
lret
inc
push
add
mov
shll
sarb
push
test
aad
ja
je
rcrb
insb
push
std
mov
rorl
imul
fiadds
push
inc
push
mov
push
movsl
or
sti
push
mov
mov
out
add
mov
movsb
or
cltd
daa
mov
movsl
jmp
aaa
cs
sbb
or
inc
mov
ljmp
fistps
fs
xor
or
push
or
push
aas
or
add
imul
std
pop
sbb
shl
inc
adc
adc
shrb
rorl
sbb
fdivrl
stos
in
xor
pop
dec
movsb
jg
jno
adcb
dec
loop
lcall
shlb
leave
push
push
pusha
sti
cwtl
lcall
jb
shrb
call
sahf
push
adc
aam
and
xor
jl
aas
and
jnp
cwtl
arpl
out
sub
add
testl
mov
and
pop
xchg
inc
stos
sbb
shlb
cmp
js
lcall
push
bnd
xor
jmp
inc
hlt
dec
mov
inc
lahf
xor
stos
add
sahf
sahf
push
dec
mov
lcall
push
push
jb
pop
mov
dec
push
mov
push
addr16
dec
fdivrl
or
test
loop
jmp
add
imul
and
adc
push
jbe
cmovg
jns
add
lods
jne
into
or
lock
inc
sbb
negl
mov
ret
mov
aas
imul
mov
mov
outsl
frstor
jns
jl
stos
cltd
jne
pushf
shl
mov
push
loop
push
mov
test
mov
mov
out
mov
mov
gs
pushf
xchg
inc
cmp
loopne
xor
leave
enter
cmc
and
lahf
cmp
pop
stos
test
xor
repz
leave
lret
mov
subb
lret
fisttpll
dec
xchg
popf
repz
dec
and
mov
mov
pop
jo
call
repz
push
hlt
pop
push
popa
push
jne
js
cmc
in
lea
push
add
push
leave
add
out
popa
xor
or
repz
test
mov
testl
jecxz
sbb
cmp
lahf
lcall
or
es
add
in
push
add
jb
outsb
sub
or
icebp
pop
push
imul
push
cli
jl
cmp
dec
sub
int
pop
adc
and
dec
mov
push
or
das
mov
inc
jp
stc
cli
push
dec
rcrb
lods
pop
push
faddp
jno
clc
mov
test
sbb
and
push
pop
sbb
int3
jmp
sbb
xchg
cmp
loopne
test
dec
ja
or
push
add
fnstsw
es
lea
out
mov
and
push
int
shl
jae
push
and
adc
js
jl
into
inc
sahf
mov
adc
call
stc
push
xchg
icebp
jmp
clc
pop
sub
inc
pop
andb
sahf
jecxz
xchg
cs
push
test
outsl
sbb
mov
fdiv
push
mov
cmp
clc
cld
mov
adc
fwait
jbe
sub
inc
adc
jo
push
sbb
test
loopne
push
scas
in
icebp
mov
fs
mov
loope
sbb
inc
aad
ret
arpl
mov
mov
sub
lds
and
and
inc
icebp
sub
jle
push
sahf
push
mov
fcomps
xorb
sti
pop
mov
rorb
into
test
adc
mov
sbb
push
mov
xchg
dec
xchg
into
std
inc
add
jp
pop
movsb
stos
orb
bound
ja
inc
cs
iret
leave
or
ret
push
clc
fs
int3
mul
and
xchg
add
push
cmpsb
sti
mov
idiv
xor
xchg
pop
cli
dec
xor
inc
aas
out
jge
lcall
je
leave
shrl
dec
fmull
jno
fidivrl
fwait
arpl
fidivrl
and
repnz
xchg
mov
xlat
push
test
push
in
mov
sbb
inc
mov
pushf
orb
inc
pop
jnp
mov
pop
jmp
fcmovu
nop
fcoms
arpl
roll
stc
fimull
add
mov
icebp
and
jb
cmp
dec
pop
xor
sub
add
xchg
in
shlb
xchg
loope
ror
je
dec
aad
push
in
pop
or
mov
sbbb
movsl
xlat
mov
pop
cmp
fwait
pop
pop
iret
lret
popl
iret
pop
test
ja
sub
push
es
xor
in
loop
add
cli
cmp
mull
adc
sbb
cmp
call
or
icebp
push
jns
inc
mov
xor
mov
cmp
addr16
pop
pop
scas
jns
popa
adc
popa
out
fstpt
pop
movsl
pop
arpl
pop
xor
jge
out
push
cmp
enter
dec
mov
daa
sub
mov
aam
ficompl
mov
pop
sub
jnp
enter
adc
insb
mov
out
jle
stos
sti
das
mov
outsb
sub
push
jae
and
inc
cmp
mov
aam
ret
mov
inc
test
jb
imul
push
jb
or
xor
data16
aas
data16
mov
enter
rorl
repnz
jmp
mov
cmp
scas
popf
or
cmp
mov
sub
inc
jecxz
lahf
scas
push
push
stos
push
lock
inc
jle
dec
ret
repnz
sub
push
sub
jne
add
jl
push
adc
out
sub
cs
ljmp
xchg
inc
add
in
pop
xchg
pop
jnp
sbb
add
mov
clc
ds
xor
jne
xchg
popf
jno
shrd
cld
movsl
cltd
xor
stos
and
mov
in
repz
sub
fs
or
stos
mov
and
jg
js
outsl
aam
call
lods
cmpb
sub
stc
out
fcomi
test
adc
push
add
bound
add
push
push
mov
shll
loopne
fisubrs
mov
int
insb
inc
test
daa
test
dec
mov
stc
les
adc
and
push
xchg
lock
pop
popf
stos
mov
sti
repz
fcomps
imull
test
loope
sub
das
adc
insb
or
push
push
lahf
fstl
xchg
push
cmovae
out
loope
loopne
fs
dec
mov
in
cld
sbb
mov
add
fisubrl
mov
pop
arpl
xor
lret
xchg
mov
insb
pop
js
icebp
mov
fimull
xchg
daa
cmpsl
iret
pop
inc
in
push
shlb
mov
lcall
mov
pop
test
mov
aam
movsl
mov
jb
mov
adc
cmc
int3
pop
arpl
xor
imul
jns
xor
push
pop
std
ret
mov
adc
stc
call
mov
out
xor
xchg
into
inc
sbb
fcmovbe
mov
pop
xchg
daa
shl
mov
mov
and
pop
and
pop
popf
push
shll
in
add
scas
jae
dec
push
bound
sarb
scas
cmp
test
pop
das
ljmp
sbb
cwtl
ljmp
lret
je
pop
lcall
adc
aas
push
je
lods
adcl
rclb
pxor
scas
or
sub
xchg
ljmp
sahf
orl
aam
or
test
movsl
out
cmp
lea
sub
call
scas
jno
adcb
cmpsb
xchg
daa
mov
dec
or
pop
dec
hlt
data16
or
cmp
add
clc
mov
push
mov
lds
ss
cld
shr
pop
xor
dec
mov
or
bound
jecxz
imul
xchg
xchg
imul
sub
mov
fisubs
add
imul
jle
sahf
xor
stos
data16
movsl
rcrb
pop
das
sbb
lahf
iret
push
push
mov
mov
popf
stos
shll
lret
sbb
pop
ja
push
fsubs
jns
lret
gs
negb
jle
push
jbe
sub
xchg
push
xor
scas
mov
out
xor
lret
mov
dec
sub
jg
mov
cmp
xlat
test
adc
pop
and
nop
mov
popf
jae
lahf
xchg
test
in
loope
push
mov
inc
mov
loope
mov
dec
xor
aas
ljmp
cmpsl
adc
test
arpl
mov
mov
xchg
jns
sbb
int
xor
adc
js
push
xor
loopnew
adc
mov
pusha
rcrl
push
inc
lahf
popf
cmp
xor
sub
cld
and
mov
cmp
imul
lock
push
popf
or
movsb
adc
test
and
ljmp
inc
inc
cmp
outsl
ss
icebp
out
in
inc
scas
xchg
fbld
ds
scas
or
ja
sub
or
jecxz
fisubrl
inc
pop
mov
xor
adc
push
and
mov
iret
xchg
stos
cltd
pop
mov
fsubs
pop
mov
sahf
and
adc
jnp
push
and
fmull
cmp
push
dec
add
cmp
or
mov
adc
pop
fwait
mov
cld
or
sub
test
inc
call
lods
jl
mov
jns
add
xlat
add
or
imul
pop
inc
pavgw
pop
cwtl
cmp
hlt
mov
data16
aas
push
mov
ss
leave
imul
or
aaa
mov
pop
repz
inc
outsl
jmp
je
cld
sbb
xor
int3
ds
into
cmp
dec
loope
gs
xchg
dec
mov
movsl
ret
sub
adc
jmp
add
pop
push
or
loopew
jle
rorb
imul
mov
sub
in
mov
dec
xchg
fstl
addr16
xchg
mov
std
sbb
loopne
and
cmpsl
adc
arpl
dec
push
inc
mov
xchg
ror
xchg
pop
sbb
leave
and
lcall
adc
pop
add
jp
aaa
mov
pop
daa
xlat
xchg
mov
xor
sbb
adc
push
cld
lea
cld
mov
addr16
pop
pop
mov
inc
rolb
fcomps
test
xor
xchg
or
movsb
push
jnp
mov
push
sub
or
jp
aad
add
inc
insb
lret
pop
iret
cld
fcomps
jae
shlb
movsb
mov
inc
mov
bound
adc
cmp
cmp
push
dec
aas
je
pop
fsubs
mov
ds
jo
pop
nop
xor
lahf
aaa
pop
jno
adc
pushf
mov
sbb
pop
pop
ja
scas
push
notl
repz
js
adc
mov
dec
pop
pop
lea
insb
pop
add
inc
cli
adc
aas
in
or
out
push
out
sbb
leave
adc
sub
in
mov
xor
inc
stos
call
jecxz
inc
pop
mov
pop
movb
and
add
ja
arpl
fsubrl
push
rcll
cmp
xchg
jecxz
into
xlat
jg
lea
bound
fists
pop
fwait
xchg
popa
stos
inc
test
scas
movsl
ret
cmp
add
mov
mov
sbb
leave
stos
or
or
mov
push
je
push
mov
cli
sub
inc
stos
sub
addl
je
idivb
sub
jno
and
sbb
xor
shl
pop
lahf
in
sahf
shl
mov
in
loopne
jbe
pop
insb
fcmovnu
addb
sbbb
jne
and
jo
pop
cwtl
mov
xor
pop
repz
sti
shrl
jge
or
jle
cmp
or
mov
imul
cs
pop
ds
das
jl
xchg
inc
jmp
dec
lcall
adc
mov
mov
push
xchg
fcomps
repnz
outsl
es
jnp
mov
lcall
jle
jp
sbb
mov
pusha
in
test
cli
cs
or
loope
aad
pushf
dec
xchg
cmpsb
xchg
dec
or
xchg
mov
push
jge
pop
rolb
rcr
pusha
and
pmaddwd
sbb
out
loop
mov
xchg
es
fcoml
push
mov
push
icebp
fists
sbb
or
jnp
cmp
cltd
cmc
sbbb
roll
or
rep
mov
cmpsb
fmul
and
adc
loope
into
xchg
pop
push
mov
jg
cmpsl
lahf
in
pop
push
rcr
repz
and
pop
pushf
test
jmp
mov
sti
cs
rorl
pop
insl
push
jecxz
hlt
daa
std
pop
std
jge
add
mov
cmp
jae
pushf
arpl
push
insb
xchg
pop
mov
add
push
cld
arpl
sub
lahf
fstpt
or
div
inc
ja
jnp
jecxz
and
lahf
push
dec
pop
jns
lods
adc
lret
mov
imull
orl
adc
xlat
gs
iret
js
loope
mov
cmp
push
dec
out
and
ficomps
and
lcall
popf
sbb
outsb
popl
sub
dec
lcall
inc
xor
mov
cmp
xor
add
enter
popf
ds
sar
add
sub
mov
bound
dec
in
mov
lods
mov
mov
js
add
push
xor
test
dec
cld
in
inc
add
test
mov
sub
mov
loopne
adc
fsubrs
sbb
dec
and
roll
imul
shll
lret
jne
sbb
xchg
inc
pop
dec
dec
cmp
jmp
mov
add
adc
mov
rorb
out
negl
lods
in
inc
clc
pushf
addr16
mov
ja
imul
push
js
or
insl
dec
add
pop
jle
mov
pop
cs
sti
cmp
fistpl
insl
jle
pop
pop
mov
rcrb
mov
pop
or
aaa
add
sbb
sbb
jp
arpl
and
shlb
negl
sahf
mov
mov
dec
jmp
aaa
jno
mov
loope
mov
loope
and
add
cwtl
xor
cli
and
and
dec
xor
pop
cmp
adc
pusha
invd
mov
leave
mov
pop
in
xchg
pop
cmc
sahf
repnz
movsl
fnstcw
bound
push
popf
sub
pop
sbb
js
negl
jg
ror
int
ja
xchg
sbb
fwait
mov
dec
fimull
fsubs
mov
leave
mov
fists
sar
test
lcall
mov
loopne
dec
mov
dec
cwtl
mov
movsl
dec
xor
mov
popa
xchg
rorl
jl
pop
lahf
mov
add
inc
icebp
mov
out
in
jo,pn
rcrl
inc
xchg
leave
lock
pop
push
insb
in
pop
add
and
enter
out
add
mov
push
pop
mov
add
stc
test
push
or
fucomi
fwait
test
leave
out
das
aas
cmp
arpl
cmp
mov
stos
push
push
pop
test
dec
mov
jg
xchg
mov
push
in
and
sbbl
imul
cld
sbb
add
outsl
inc
test
insl
add
mov
xor
or
sbb
add
psadbw
mov
mov
cmp
xor
adc
sbb
push
and
dec
mov
push
pop
int3
sub
jb
cwtl
cmc
push
dec
or
adc
or
jmp
dec
fidivrs
or
rep
pop
aad
push
mul
loopne
out
mov
fwait
xchg
mov
mov
clc
lods
popa
xchg
gs
pop
repz
sub
out
outsb
xchg
out
or
addr16
js
enter
dec
xchg
lret
sbb
out
jmp
push
add
adcl
and
xor
and
cmp
add
xlat
dec
adc
sbb
lret
mov
test
iret
negb
push
lea
xchg
cmp
std
mov
lock
xchg
rorl
nop
in
cmp
scas
test
jp
adc
and
insl
mov
mov
cmp
cs
push
pop
and
xchg
adcb
or
clc
js
xchg
add
jecxz
jno
dec
ficoml
dec
fiadds
xchg
lahf
sub
inc
inc
jecxz
rcrb
std
cmpsb
mov
scas
xor
jbe
pop
les
mov
int3
test
js
aam
xchg
fists
push
int3
bound
mov
mov
mov
cmp
xchg
sahf
mov
aas
inc
insl
mov
adcl
mov
addr16
xor
pop
pop
xchg
aaa
xchg
mov
fidivrl
lsl
dec
xchg
add
mov
enter
std
fdivs
fdivrl
hlt
xchg
xor
out
or
fs
ljmp
popf
notb
arpl
mov
rorb
push
push
mov
in
xchg
pop
repnz
jge
or
and
lods
xchg
inc
daa
xchg
jae
into
lock
lret
out
mov
pop
call
jo
jge
sub
push
aaa
insb
sahf
jp
xor
lcall
push
or
sub
xchg
mov
sub
ficoml
add
mov
mov
clc
fdivl
mov
mov
ret
pop
aad
sub
dec
into
add
fs
sti
push
outsb
fcoms
jo
inc
js,pt
imul
mov
lods
and
dec
push
mov
int
push
dec
and
push
test
or
cld
push
push
rorl
sub
jg
outsb
insl
lahf
and
ja
sub
or
or
sarl
ja
pusha
ret
push
ret
jmp
adc
or
inc
je
or
cmp
clc
scas
xor
mov
js
and
out
stc
pop
pusha
imul
jo
dec
xor
pop
push
lods
fscale
sub
cmc
loop
lock
aas
jne
in
mov
sub
dec
insb
inc
rcl
xor
sbbl
clc
scas
aaa
fdivs
jmp
xchg
mov
js
cmpsb
in
inc
imul
mov
mov
iretw
xchg
loop
xchg
jo
lods
sub
sub
dec
xchg
add
add
out
dec
push
fildll
or
emms
adc
sub
lret
mov
iretw
and
pop
lahf
scas
pop
fdivrs
push
gs
pop
sub
add
repz
test
adc
dec
mov
out
sbb
in
lcall
mov
out
imulb
inc
popa
inc
push
ret
orb
xchg
enter
lds
loop
hlt
cmpsb
lods
jb
mov
leave
pop
xor
jmp
pop
jp
push
mov
push
add
loop
mov
movsl
je
into
xchg
sub
mov
mov
aas
pushf
and
xchg
adc
test
imul
xor
dec
jno
mov
repz
fidivs
loope
sbb
jg
lret
lret
aad
jge
cmp
xchg
push
xchg
mov
popf
fmul
mov
repnz
or
adc
jg
push
lds
push
mov
mov
das
jno
cmp
shrb
dec
xor
adc
adc
ret
mov
push
mov
mov
push
or
fwait
std
sub
jns
loope
negb
jmp
or
pop
rolb
sti
or
repz
nop
add
out
and
into
mov
lods
adc
sub
mov
inc
test
mov
and
hlt
adc
xor
jecxz
xor
addl
popa
stc
dec
sub
aam
push
lock
inc
push
pop
and
xor
mov
shl
and
stc
push
pusha
je
inc
xor
sbb
add
push
test
pushf
mov
test
mov
mov
sub
orl
fadds
int3
addr16
mov
iret
pushf
ja
pop
push
lret
dec
adc
xor
dec
loope
int3
mov
push
push
lret
out
xchg
add
pop
sub
movsb
outsl
aad
xchg
mov
sbb
xrelease
pop
insb
jbe
lods
stos
subl
add
scas
jno
icebp
repz
jns
xor
leave
mov
xchg
lods
popa
cltd
sub
popa
aad
xchg
mov
xchg
add
test
xchg
pop
push
lret
mov
or
dec
mov
cmp
pushf
test
movsb
sub
mov
lods
insl
cmpsb
test
repz
sarl
mov
stos
inc
repnz
sarl
shlb
lcall
sub
mov
push
sti
sub
dec
jno,pt
pop
push
jge
dec
cmp
push
subl
fyl2x
mov
or
test
push
push
push
pop
sbb
flds
sbbb
and
push
xor
dec
xor
sbb
xor
xor
ret
popa
jne
movsb
sti
fisubrs
jae
jl
in
inc
out
mov
xor
inc
xor
fisubl
xlat
cmp
adc
or
sarl
sbb
aad
imul
out
movsb
and
xchg
ds
adc
jo
pop
aad
pop
mov
adc
cmpsb
repz
shlb
out
ud1
cmpsl
icebp
pop
lret
cs
fs
cmc
dec
mov
ljmp
xor
jmp
cmp
outsl
pop
inc
xchg
imul
mov
add
push
xor
lcall
pop
lcall
mov
cmp
add
ficoms
mov
and
les
jne
mul
dec
inc
lret
dec
sarl
cmc
push
mov
adc
shl
add
sti
push
pop
mov
cs
inc
jns
push
loopne
dec
mov
sbb
outsb
push
mov
outsl
rolb
sub
fneni(8087
roll
add
int3
mov
sbb
dec
rorb
dec
sti
add
cmpb
rcl
mov
movb
add
pusha
xchg
inc
dec
sbb
or
js
mull
sbb
stos
testl
pop
jmp
lods
data16
arpl
jns
andb
dec
pusha
jnp
shrb
movsl
scas
stc
cmp
movsb
fistps
cld
push
adc
loope
enter
js
pushl
mov
outsl
ljmp
sub
dec
lock
mov
cmpsl
and
adc
repnz
fwait
adc
mov
jne
repnz
push
rolb
ret
outsl
aas
mov
pop
pop
sub
out
pop
push
insl
and
clc
out
scas
lds
xchg
mov
sbb
mov
rorb
jne
das
stos
movsl
sahf
test
stos
clc
in
lock
push
hlt
xchg
orb
lods
and
mov
add
icebp
or
mov
lds
addb
inc
pusha
xor
jle
stos
cmp
push
shrl
inc
mov
inc
push
push
sub
push
or
cmpb
cmp
inc
jne
push
sub
mov
loop
imul
rcrl
dec
movb
push
test
push
dec
dec
xor
mov
in
divb
xor
fldl
pushf
xor
clc
xlat
sub
lea
jp
jp
jns
xchg
cmp
lcall
test
and
mov
xor
fstl
leave
movsl
xchg
push
mov
lock
push
pop
mov
stc
cmp
movsb
rcl
xor
inc
xchg
mov
setbe
int
fs
sbb
or
addl
loope
push
push
stc
dec
dec
daa
cmp
inc
pusha
ret
in
adc
or
es
icebp
aaa
inc
and
fcoms
adc
and
inc
mov
pop
sub
mov
jmp
and
outsl
rolb
aam
imul
aad
or
sbbb
cmpsl
xor
mov
mov
pushf
xchg
int3
mov
repz
out
inc
fwait
xchg
js
and
mov
movsb
jecxz
loopne
scas
dec
test
imul
jne
sub
fiadds
inc
loope
xor
sbb
adc
insl
call
and
test
aad
jecxz
lcall
outsl
popf
rclb
sub
das
aas
xchg
inc
dec
repnz
sbb
imul
jo
addl
xchg
dec
mov
js
dec
cwtl
cmpb
jp
xchg
test
popf
adc
sub
std
jg
jne
out
pusha
into
addr16
addr16
mov
sub
rcrb
xor
xor
rorb
mov
fbld
iret
and
xor
lret
lock
inc
pop
shll
leave
int
jne
mov
fwait
mov
data16
rolb
loope
insl
inc
mov
mov
pop
clc
and
stc
stc
call
mov
mov
cmpsb
pop
fmuls
jnp
clc
popf
xor
jne
icebp
and
pop
cmp
icebp
jnp
jo
jbe
xor
clc
shlb
rclb
aad
sub
hlt
inc
mov
pop
gs
dec
jbe
lods
adc
pusha
movsb
jnp
pop
cltd
das
jae
lods
dec
cmpsl
rcrb
clc
xchg
push
inc
jno
cmc
mov
xchg
int3
popa
fcoml
sub
push
ds
pop
sbb
lea
and
xor
test
call
fists
lods
pusha
pop
into
mov
inc
in
enter
cld
in
movsl
jbe
repnz
idiv
fbld
outsl
arpl
popf
movsl
inc
push
imul
jnp
idivb
mov
mov
pushf
out
fldl
outsb
cld
lock
adc
sub
ret
test
jb
mov
in
dec
fnstsw
jp
inc
fcmovb
push
mov
mov
push
cwtl
into
loope
or
jmp
push
popf
mov
push
sarl
cld
es
cltd
mov
lahf
ds
sub
imul
ror
inc
enter
jecxz
repz
cmpsb
add
std
aaa
rcl
jle
jno
mov
sti
and
das
cmp
xor
movsb
inc
mov
insb
push
sub
and
repz
loope
iret
xchg
dec
push
rclb
outsl
iret
les
mov
push
scas
dec
jne
aaa
insl
out
add
inc
dec
mov
sti
ret
jmp
xchg
cmp
sub
pop
std
or
inc
inc
xchg
das
femms
dec
fistl
jbe
inc
add
cmp
cmpxchg
jae
mull
sbbl
fldt
cmp
div
mov
mov
mov
mov
jnp
adc
test
push
bound
lds
adc
aad
cltd
mov
push
es
mov
dec
dec
sbb
push
pop
mov
call
loopne
lret
nop
mov
xor
ret
stc
sbb
jns
test
cld
incl
mov
fstpt
shll
fidivs
add
lods
pop
out
call
aaa
gs
stos
js
ficompl
dec
jge
clc
jns
nop
test
push
mov
fiaddl
fwait
into
jg
fsubs
movsl
xchg
inc
xor
hlt
add
push
xor
lcall
xorl
jmp
sarl
les
sbb
sub
in
push
push
les
jb
in
es
xchg
mov
sahf
call
cmpsb
fucom
ljmp
and
in
push
inc
mov
orb
call
int
mov
push
lods
mov
sbb
jb
movsb
iret
fadds
mov
loopne
mov
cmp
aam
pop
sub
xor
sbb
pop
or
stos
and
adc
hlt
lret
pop
mov
mov
rcrb
cld
andb
xchg
lods
xor
adc
test
adc
mov
xor
repnz
xchg
in
cwtl
repz
cli
or
js
rcrb
pop
into
insb
sbb
cmp
cmp
or
data16
dec
push
sbb
mov
adcb
pop
jo
js
rsm
jnp
movsb
pop
dec
mov
sahf
mov
pop
inc
daa
lahf
in
mov
lret
cmp
inc
aad
mul
sarl
jecxz
pop
dec
cmc
push
repz
sbb
cwtl
popf
sub
in
jae
lods
jge
add
inc
rclb
aas
sbbb
inc
add
adc
pop
and
jge
xlat
ds
daa
repz
fimuls
jmp
dec
cltd
std
sub
or
push
aad
jno
lcall
push
mov
inc
xor
decl
xchg
jge
loop
jno
dec
sub
mov
add
mov
xchg
push
call
ljmp
icebp
sub
das
clc
xor
add
mov
xchg
pusha
push
add
sbbl
jb
insl
fs
enter
pop
xor
push
je
mov
mov
lret
xlat
xlat
aas
inc
and
fiadds
xchg
lcall
inc
stos
lods
scas
pop
jb
sub
fistps
in
popa
jg
pop
xor
cltd
stc
pop
stos
xor
and
mov
xor
mov
dec
stos
outsl
pop
cld
mov
fldt
idivb
pop
xor
add
adc
xor
inc
clc
jae
xor
bound
ret
repz
inc
gs
jle
rcl
or
xor
ds
bound
sahf
and
lret
test
cli
adc
cmp
sub
xor
dec
sub
lret
push
test
pusha
shll
pop
push
outsl
xchg
rcrb
mov
mov
sub
push
inc
out
leave
jl
mov
cmp
xor
mov
jl
jmp
shl
out
call
sbb
push
call
xchg
inc
ljmp
loope
jns
jns
fcmovnb
mov
loope
int3
cli
rcl
jp
lods
and
int3
push
in
dec
lret
sbb
loopne
lret
frstor
movsb
cld
sbb
pop
mov
popf
or
dec
mov
dec
sbb
sbb
mov
mov
cmpsb
push
sub
mov
fucomip
or
lods
adc
dec
mov
rcrl
pop
jb
push
je
nop
cld
sbb
bound
and
cmp
mov
mov
int
mov
or
pop
mov
fisubs
xchg
jb
jge
lahf
xor
rorl
mov
push
add
adc
aas
and
popf
loope
cmp
mov
pop
jo
add
andl
ljmp
adc
movsl
sub
sub
jnp
pop
lods
adc
or
adc
shr
scas
xor
xchg
add
mov
mov
xchg
mov
cmp
jne
inc
je
jecxz
mov
lea
cmpsb
pusha
pop
fisttps
sub
scas
fwait
lods
subb
and
imul
mov
sbb
pop
cwtl
push
dec
insl
out
dec
hlt
pop
outsb
popf
sub
fldt
jmp
xchg
pop
test
push
cmp
clc
cmp
jnp
ror
mov
adc
push
les
rolb
push
fmul
dec
repnz
mov
mov
cltd
add
adcb
test
add
fcoml
stos
imulb
inc
cli
mov
fsubrl
and
sub
loopne
dec
js
test
stc
loope
jge
adc
jge
xor
push
inc
repz
inc
xor
sub
mov
outsl
outsb
mov
mov
sub
rcrb
sahf
leave
gs
sub
xchg
lock
gs
cmp
psubsb
scas
xor
dec
test
pop
bound
xor
push
xorl
jns
pop
cmc
loop
call
lcall
or
pcmpeqb
pushf
mov
dec
inc
jg
xor
jbe
sub
cmpsb
xchg
pop
in
jb
mov
in
aad
or
mov
addr16
es
add
lret
mov
mulb
pusha
jg
lret
sub
sub
add
aas
jae
call
stc
and
or
jg
pop
sbb
xor
insl
test
andps
les
pushf
pop
dec
lds
rclb
push
dec
and
push
rorb
ror
rorl
mov
inc
lret
cs
push
sub
mov
pop
loop
sbb
imul
inc
cmp
cmp
das
sbb
sbb
cmp
shlb
testl
jns
std
inc
inc
rcr
das
inc
sbb
mov
dec
add
and
iret
out
sub
fs
adc
xchg
movsb
mov
xorb
call
mov
movsb
sbb
std
pop
testb
scas
push
dec
cmpsl
es
add
pushl
mov
icebp
imul
adc
inc
and
or
xchg
loope
clc
xchg
aad
mov
dec
mov
add
insb
sub
bound
or
data16
loop
cmp
lods
or
es
pop
dec
mov
and
xchg
jns
push
dec
pop
jns
cmp
stc
or
stc
loope
and
test
addr16
into
xchg
rcrl
mov
push
cmp
lds
stos
repnz
dec
sub
in
cmpsb
xchg
xchg
cmp
pop
data16
jbe
add
add
push
cmc
inc
mov
pop
mov
test
test
mov
imul
ds
fldcw
fucom
xchg
sbb
inc
sbb
mov
sub
stos
cmpsl
pop
and
mov
mov
pop
sub
xchg
sti
stc
or
stos
add
imulb
adcl
xor
add
lcall
xor
mov
jp
nop
pop
lret
imul
mov
adc
jne
dec
sbb
bound
jns
adc
inc
lock
daa
outsl
inc
ja
add
mov
cmpb
pop
jne
mov
lcall
ss
sub
xchg
lods
ret
push
fildl
aad
loopne
mulb
cmp
out
in
sbb
pop
out
xchg
push
mov
push
enter
sbb
cmp
sbb
rorl
mov
js
fwait
stos
ret
leave
jo
mov
xor
scas
lret
scas
out
in
daa
sub
xchg
push
push
sbb
popf
sbb
and
sub
scas
cmp
push
into
mov
pop
xor
push
mov
jle
int3
or
fwait
or
punpckhbw
sar
sub
dec
mov
xchg
outsl
xchg
aas
mov
shll
ret
push
divb
jne
je
scas
aam
mov
add
jae
int3
dec
icebp
les
outsl
std
or
jne
sub
cmp
fstps
or
jp
jae
xor
hlt
cwtl
andb
sbb
xor
lcall
mov
shlb
cmp
add
lods
mov
xchg
movl
sbb
xor
pusha
sub
imul
shll
xchg
push
inc
lock
mov
mov
push
testl
and
sub
inc
and
jge
in
sbb
dec
mov
xor
aam
fimull
call
add
lahf
fnstsw
test
iret
pop
in
add
aas
mov
leave
cmp
adcl
cmp
insb
mov
ss
out
cwtl
sahf
out
dec
pop
mov
insl
pop
insb
popa
inc
fwait
dec
popa
push
pop
push
or
adc
negl
faddl
adc
mov
fwait
xor
fidivs
and
lret
xlat
mov
sbb
xor
les
add
in
enter
dec
int
dec
out
jge
xlat
mov
stc
xchg
out
repnz
fisttpll
inc
and
or
pop
lret
ds
xchg
jo
dec
push
mov
add
rcr
sub
xor
in
pop
fnsave
es
shrb
or
imul
xchg
loopne
and
mov
pusha
imul
lods
push
add
add
xor
and
cmp
incb
mov
ret
sub
aad
lods
sub
outsb
leave
bound
scas
mov
fidivrs
lahf
iret
rcll
leave
inc
js
mov
aad
xchg
xchg
ja
xchg
inc
fs
loop
or
notb
fnstenv
rol
push
aas
jnp
popf
ret
mov
jle
imul
out
cmp
xor
cmp
mov
dec
es
sbb
inc
int
jnp
call
push
out
sahf
loop
sub
pop
mov
xor
dec
dec
sarl
xor
dec
mov
push
imul
mov
mov
jo
mov
imul
pop
xor
mov
lods
nop
std
push
in
and
inc
jae
fwait
sbb
pushf
mov
mov
inc
mov
add
jl
sbb
jmp
mov
adc
adc
or
adc
xor
cmp
iret
jp
test
dec
jbe
ja
jae
lods
jbe
js
lods
or
sbb
mov
pop
push
xchg
push
mov
mov
pushf
fwait
inc
mov
xchg
mov
dec
sahf
out
rorl
inc
xor
dec
nop
xor
inc
lret
mov
dec
jb
loop
pushf
iret
jbe
push
fadds
jnp
xlat
and
loopne
mov
addb
push
stc
dec
xchg
repz
or
in
and
and
push
jae
je
fsubs
jno
sbb
mov
ja
and
push
cli
test
cmp
out
outsl
mov
inc
dec
pop
loope
adc
ljmp
andl
pop
mov
lods
sbb
scas
jmp
jb
adc
bound
test
inc
mov
fnstsw
push
or
xor
movsl
iret
stos
xchg
lods
mov
adc
dec
fcoml
sbb
cmc
movsb
sub
push
iret
adc
imul
stc
sbb
repz
cwtl
adc
and
xchg
dec
int
scas
mov
dec
pop
sbbb
mov
dec
fwait
rcll
pop
adc
pop
sbb
push
or
fs
and
pop
cmpb
dec
push
push
mov
xchg
mov
cld
dec
mov
in
loope
pop
in
or
pop
daa
jle
xor
inc
cmp
imul
adc
rcrl
jge
in
push
xchg
ds
stos
xchg
dec
pushf
sub
mov
and
jle
clc
movsb
pop
adc
je
repz
scas
dec
xor
mov
sbb
fildll
cmp
or
rorl
je
cmp
push
adc
fs
fisubrs
push
xchg
and
xor
mov
inc
push
int
push
insl
add
and
int3
xchg
das
sbb
icebp
or
inc
out
sahf
lahf
iret
out
mov
popa
jne
adc
stos
outsb
adc
cld
arpl
std
jg
in
cltd
pop
cmp
jge
jle
or
push
out
or
sub
bound
leave
jno
cmp
xchg
mov
js
pop
mov
sub
nop
xchg
mov
and
sti
cwtl
xchg
cmp
jno
mov
sbb
fidivrs
stos
fsts
mov
add
mov
in
and
ret
iret
dec
sbb
testb
sbb
pop
in
mov
fcoms
ret
xor
adc
cwtl
idivb
mov
lds
pop
lds
sbbl
xchg
xchg
cs
jle
or
aas
sti
cmc
dec
loopne
rol
mov
sarb
jp
jae
ljmp
push
ss
sbb
xchg
inc
imul
nop
and
cwtl
push
jo
ss
mov
sub
movsb
leave
push
mov
mov
fucomp
inc
mov
or
jp
pop
adc
shl
jnp
out
inc
xor
ficompl
cld
and
lods
push
std
in
mov
insl
out
add
jae
cmp
cmpsl
adc
push
out
mov
imul
mov
dec
mov
fstps
sbb
cmp
mov
jnp
adc
xchg
lahf
jmp
push
push
xchg
cmp
inc
movsl
mov
rclb
and
fistpll
cmp
jmp
mov
xchg
data16
add
imul
movsb
cmp
std
cmp
cs
xchg
rclb
jne
sbb
push
mov
rorb
or
scas
or
cmpsl
pushl
and
xor
push
aaa
inc
push
pop
adc
mov
sti
cmc
ficoml
push
mov
jmp
push
push
lods
xchg
and
imul
xlat
loopne
cmp
lret
or
xchg
loop
leave
jle
sub
or
sub
outsl
icebp
gs
dec
andl
mov
repz
jns
push
cwtl
mov
mov
pop
sbb
scas
mov
test
add
test
daa
fsub
je
aas
add
movsb
fldt
dec
outsb
aam
mov
divb
jl
inc
jb
cs
sub
iret
jle
in
loop
or
in
xlat
icebp
mov
cmpsl
jp
push
movsl
pop
pop
jl
test
loopne
xor
mov
subl
or
dec
xor
sub
jg
xor
jmp
push
ret
mov
sbb
dec
mov
rclb
push
lods
fcoml
sbbl
cmp
push
outsb
adc
lahf
inc
pop
insb
xor
ds
fnstenv
push
repz
pusha
sub
jae
push
or
ja
inc
xchg
jo
adc
enter
xchg
pop
imul
std
mov
cmp
cmp
cs
ficoms
idivl
pushf
push
sbb
stc
sbb
and
out
ss
cld
jae
aaa
mov
dec
int
jmp
xor
in
pop
dec
ja
je
fxsave
imul
ja
in
arpl
mov
xor
lret
fstps
mov
cmp
data16
xor
stos
rcrb
mov
adc
imul
mov
xor
pop
rol
aaa
cmp
sbb
imul
pmaxsw
or
mov
cmpsb
jne
stos
hlt
sub
int
dec
xorl
push
enter
push
ds
dec
clc
cmp
xchg
mov
xor
stos
push
push
cltd
adc
or
out
sbb
sbb
into
cmp
jle
inc
fadd
out
nop
loop
into
adc
mov
insb
or
stc
sub
ds
hlt
repz
add
in
les
sub
pusha
cmp
aad
or
xor
lods
repz
xlat
push
xchg
in
mov
mov
decb
mov
add
jo
or
cmp
sarb
fmull
fs
xchg
lret
imul
into
std
dec
dec
dec
and
movsl
pop
and
add
dec
jno
cltd
bound
call
xchg
push
jb
mov
add
sahf
jl
xor
or
push
subb
and
inc
jnp
inc
xor
sub
mov
test
xchg
mov
and
mulb
adc
mov
icebp
movb
into
cmp
push
lds
pop
dec
int3
in
cmp
mov
push
loop
outsb
pushf
mov
mov
mov
jl
mov
daa
test
cmp
imul
pop
leave
mov
loop
adc
outsl
aam
inc
cmpsb
inc
xor
test
dec
cld
or
fwait
mov
cli
jmp
stc
stos
pop
clc
mov
xchg
and
scas
mov
cli
lret
adc
das
push
lahf
sbb
jg
into
rorb
test
fisubrl
cld
sub
jle
sbbb
icebp
jbe
loop
fidivrl
and
ficompl
adc
cwtl
mov
mov
shrl
out
xor
js
jae
sub
cmp
dec
pop
dec
push
icebp
mov
jb
out
testl
mov
pop
jne
lcall
scas
mov
pop
ficoml
or
cmp
or
out
rolb
add
mov
stos
scas
pop
mov
dec
cmc
cmpsl
inc
add
jne
mov
sbb
ljmp
xchg
jbe
mov
lea
or
insl
jmp
push
add
adc
pop
dec
jb
in
mov
xchg
call
insl
mov
mov
cmp
sarb
pop
xchg
lahf
mov
stc
ljmp
and
stc
aaa
iret
lahf
or
adc
sbb
adc
in
js
sahf
jns
andl
lret
in
sbb
out
dec
insb
xor
cmp
inc
jns
or
adc
outsb
jo,pn
iret
xchg
push
sub
cmp
cmpsb
fidivrs
ret
xchg
mov
movsl
pop
dec
sub
xorl
iret
mov
dec
add
stos
dec
and
inc
mov
mov
pop
mov
int3
adc
jmp
cld
mov
fidivrl
test
add
push
test
cld
cmp
jo
adc
xlat
ror
push
sbb
push
cltd
lcall
fdivs
out
jge
mov
cmp
scas
dec
scas
push
inc
shrl
enter
mov
jmp
lret
test
hlt
daa
jg
call
sarl
ljmp
pop
addl
lahf
dec
mov
inc
xor
adc
inc
adc
loop
push
data16
xor
mov
lret
pop
mov
imul
stc
pop
pop
jmp
je
sub
dec
adc
sub
pcmpgtw
mov
rolw
fst
loop
mov
scas
pop
push
xlat
fdivp
mov
xlat
shr
inc
or
loope
idivl
sbb
pop
sbb
xlat
and
mov
cltd
aaa
xchg
add
xlat
cli
jg
pop
pop
arpl
sub
inc
mov
and
out
popa
mov
dec
mov
sbb
add
cs
dec
mov
push
adc
push
inc
lods
arpl
lock
adc
int
adc
xor
clc
subb
cmp
dec
sub
mov
scas
xchg
or
or
outsb
cmp
stos
stos
in
pop
mov
add
xor
nop
xor
mov
lret
xor
jg
mov
dec
decb
mov
mov
dec
ss
aad
and
into
add
jmp
mov
stos
dec
clc
jp
mov
leave
mov
cmp
insb
sti
in
popf
out
mov
push
and
mov
pop
inc
adc
push
and
flds
pop
mov
cwtl
add
xchg
jns
ds
mov
cmpsb
cmp
or
imul
push
or
lea
daa
notb
loop
adc
orb
pop
mov
mov
mov
cmpsb
inc
push
das
cmpsb
jecxz
jnp
test
ret
add
add
das
jb
pop
stos
xchg
jecxz
jae
out
lea
imul
subb
outsb
and
aaa
imul
outsl
mov
sub
enter
sub
inc
les
cmp
adc
push
xchg
cltd
lods
jbe
jno
je
stos
push
stos
ffree
jb
sub
scas
aad
xchg
sbb
lea
push
test
in
cltd
jnp
pop
mov
push
int
outsb
mov
sbb
mov
enter
int3
movsb
icebp
mov
mov
adc
dec
orl
inc
sbb
and
or
xchg
outsl
loopne
dec
inc
add
aas
inc
cmpsl
andb
push
jns
add
fldl
xorb
pop
sti
pop
push
mov
sub
and
clc
popa
and
leave
push
sub
and
inc
insl
mov
iret
jge
js
or
mov
cmc
out
add
aaa
or
sub
cmp
rcrl
je
and
std
int3
fisubl
sahf
xchg
push
push
fmull
inc
lods
call
add
lock
cwtl
scas
and
lock
mov
adc
xchg
lock
adc
loope
out
test
sbb
mov
ficoms
sub
pop
outsl
inc
aaa
aas
or
xlat
cmc
fwait
mov
mov
stos
dec
imul
cmpsl
leave
dec
clc
ja
mov
pop
lret
stos
or
lea
nop
lea
add
jle
mov
adc
mov
pop
cmp
inc
inc
sub
push
jb
jnp
mov
mov
mov
sbb
mov
sbb
fisubs
push
into
pop
xchg
iret
int3
and
icebp
cwtl
inc
pushf
mov
popa
lret
cltd
jne
outsl
lods
pop
xchg
push
jle
imul
xorb
and
mov
mov
add
add
bnd
insl
rolb
xchg
xor
push
shrl
dec
scas
outsl
clc
idivl
lret
xor
popf
in
enter
xchg
pushf
sbb
rcrb
loop
rclb
mov
push
into
cmpsb
jp
mov
add
xchg
pop
sbb
movsb
mov
pop
in
negb
push
and
dec
lret
mov
cmpl
pop
pop
imul
sbb
mov
dec
daa
or
movsl
test
jbe
je
imul
push
push
repz
xor
shrb
and
out
or
rorb
addl
inc
push
bound
sub
ja
mov
std
mov
fisttpll
xchg
adc
pop
sti
xchg
mov
pusha
add
sbb
mov
movsl
dec
gs
out
cmp
popa
jnp
adc
or
mov
cmp
pop
scas
test
sub
add
jle
push
test
or
in
insl
xchg
fdivr
or
jp
je
cld
lds
jp
inc
push
push
cmp
sbb
push
fstps
cltd
push
xorb
aam
push
dec
ljmp
sbb
xchg
aam
out
cmp
insl
gs
xor
pusha
imul
inc
rolb
out
repz
cmp
addl
out
ss
cmp
jp
mov
cmc
adc
dec
or
cmp
lods
outsb
js
cmc
xor
sbb
mov
ret
pop
adc
lods
orb
les
adc
cmpsl
mov
pushl
lret
int3
jns
dec
ja
xchg
mov
and
lods
xchg
cmp
fcomip
in
aam
std
push
add
inc
fidivs
ss
xchg
dec
or
movsl
add
jmp
stos
mov
iretw
mov
adc
jecxz
sbb
sbb
xchg
jmp
cmovp
popf
shlb
das
int
jg
mov
jge
jge
dec
test
scas
jae
adc
leave
sub
adc
cli
sbb
xchg
add
insb
add
push
dec
cmp
iret
push
rol
jp
je
jae
dec
mov
into
xchg
sbbb
sub
and
cltd
dec
push
rcl
test
add
adc
scas
fldt
xor
ret
out
lds
jle
mov
loopne
or
out
mov
inc
lods
into
inc
bound
pusha
cmpsb
rclb
cmpsl
fidivs
or
add
sub
imul
pop
fstpt
sub
mov
mov
or
out
mov
dec
test
jns
inc
jmp
aad
out
loope
push
push
out
and
roll
aad
and
mov
shrl
inc
cli
cmp
xchg
das
imul
data16
ficompl
mov
int
dec
pop
sbb
or
mov
ds
or
fldl
shrb
cmpsl
xor
icebp
fiaddl
mov
movhps
jmp
inc
cmpsl
mov
repz
iret
outsb
mov
scas
inc
push
stc
sbb
mov
dec
jge
sbb
lock
xchg
call
ret
iret
mov
mov
dec
sahf
enter
or
shrb
outsl
add
cli
ja
adc
aas
aam
fisubl
sbb
mov
dec
and
xchg
push
ror
sbb
cmp
cmpsl
xchg
cmp
in
push
lds
jl
mov
dec
xchg
lods
mov
xor
mov
and
and
icebp
pop
cmp
pop
sub
ljmp
push
popf
insl
pop
test
into
xlat
out
les
aas
insb
iret
inc
add
lret
iret
fsubl
fidivrl
je
not
jecxz
mov
popf
adc
jnp
les
popf
rcll
bound
addr16
add
xlat
mov
les
sti
cwtl
push
pop
icebp
fnsave
ret
or
in
jo
adc
jnp
pop
fmuls
dec
sub
sbb
aad
xor
cmp
or
push
or
or
xlat
pop
xor
cmpsb
in
in
mov
jg
cs
push
add
adc
mov
pop
aaa
inc
stc
xchg
imul
stos
jp
cli
ds
add
dec
dec
ss
cld
mov
push
jge
sbb
pop
jmp
movsb
sub
xchg
call
and
loopne
sahf
push
jbe
fs
mov
arpl
repz
out
jmp
into
mov
mov
daa
inc
aas
mov
pop
flds
jmp
push
and
data16
dec
mov
mov
stos
loopne
push
sbbl
in
nop
pop
jb
mov
ficoml
sub
jo
add
aaa
jo
shl
test
dec
pop
pop
adc
cmp
and
sti
pop
jmp
stc
jae
mov
xor
sbb
push
in
cmp
sub
fnstenv
jecxz
xchg
pusha
mov
icebp
les
pusha
adc
mov
imulb
fiadds
rcr
add
fadds
ret
loope
mov
mov
dec
pop
push
inc
pop
pop
loope
push
push
push
inc
rorb
cmp
test
add
sti
mov
ljmp
idivb
pop
fs
rorb
xor
dec
pop
push
mov
loope
fidivrs
adc
in
mov
ret
inc
sbb
lret
pop
sahf
fcmovu
repnz
or
xchg
jecxz
outsb
inc
mov
push
cmp
mov
mov
sbb
push
jmp
push
shll
outsb
or
push
cmp
hlt
aad
jne
jno
dec
inc
push
add
in
jecxz
les
mov
ljmp
sbb
lock
subl
pop
loopne
out
adc
add
filds
mov
push
or
mov
and
bound
clc
fdivrp
xchg
aad
imul
xchg
sub
fnsave
les
jl
or
cmpl
insl
fiadds
mov
das
pop
push
scas
cmc
mov
loopne
repz
add
int3
and
inc
shl
add
mov
iret
push
adc
jnp
sbb
add
addb
cmpb
icebp
lret
mov
pop
push
pop
jns
pop
sub
dec
les
cmpsb
daa
out
or
out
lret
inc
and
inc
test
and
cli
pop
cmp
pusha
shll
dec
pop
inc
pop
cvtdq2ps
sahf
aad
xchg
ds
add
lds
mov
cwtl
adc
enter
stos
and
repz
adc
imul
popa
cmc
ret
xchg
int3
ret
cwtl
mov
mov
push
mov
dec
stos
push
add
push
sbb
mov
lret
fisubs
lds
cmp
pushf
add
pop
insl
push
test
pop
jnp
rol
adc
sbb
jp
sub
push
hlt
outsb
test
popf
jo
adc
sti
out
adc
arpl
xchg
and
jno
pop
pop
lcall
orl
jmp
lahf
sbb
mov
and
and
dec
iret
mov
inc
mov
mov
add
iret
mov
pushf
dec
scas
out
jmp
or
rolb
pop
in
pop
arpl
test
adc
push
ret
mov
js
inc
gs
sbb
xchg
shll
cmp
lcall
pop
or
test
push
add
xchg
cwtl
in
dec
mov
scas
push
shll
cmpl
sbb
sbb
push
in
sbb
adc
add
sub
or
cmp
xor
adc
popf
lahf
jle
pop
shrl
inc
jb
mov
mov
int3
call
and
lahf
or
mov
mov
insb
in
popf
and
jge
cmp
shr
sbb
inc
test
jb
push
inc
pop
sub
xor
or
popa
cmpsl
jo
inc
and
test
adc
lret
dec
cmp
jl
xor
pop
or
outsl
icebp
jbe
or
pop
jae
pop
push
mov
push
xor
adc
in
cmc
jmp
cmp
and
ja
or
cmp
fdivs
cmpsl
sub
or
loope
xchg
sbb
popf
enter
rclb
push
test
es
xchg
fcmovu
xor
cltd
sbb
dec
icebp
pop
xchg
adc
mov
inc
mov
jle
dec
mov
fidivl
and
sbb
insl
add
sbb
cmp
jle
lret
push
insb
cld
inc
icebp
cmp
fisubl
js
gs
and
rolb
icebp
mov
adc
aaa
add
jne
lahf
push
outsl
xor
add
jmp
push
cmpb
jmp
sbb
adc
loopne
push
mov
or
mov
pop
add
rclb
mov
lcall
fmuls
adcb
adcl
ret
sarl
lds
aas
iret
imul
mov
push
aaa
jl
ficoml
out
xlat
mov
in
mov
mov
ss
leave
lret
out
ret
loop
and
or
sub
sub
push
pmullw
hlt
xor
dec
sbb
fbstp
bound
negb
xor
in
dec
hlt
nop
or
imul
cmp
jecxz
and
sub
out
jbe
fsts
es
icebp
out
add
loop
xchg
out
out
mov
dec
pop
pusha
inc
push
in
pushf
mov
pop
cmp
insb
xor
shlb
test
xor
xchg
cmc
cs
adc
cmp
jmp
mov
addr16
sbb
adc
pop
in
mov
mov
dec
adc
popa
lock
mov
jge
dec
pop
jl
xor
fisttps
in
gs
pop
push
and
jnp
or
xlat
cmp
mov
dec
xchg
mov
jbe
scas
jno
sub
sbb
loope
mov
cmp
fsubr
pushf
out
adcl
leave
stc
movsl
xor
mov
cli
les
jb
mov
inc
add
in
xor
imul
insb
inc
in
xor
out
push
cld
add
pusha
pop
xchg
inc
test
dec
mull
push
mov
adc
aad
sti
sbb
ficompl
popa
adc
mov
jmp
inc
xchg
sar
and
add
sbbb
mov
jmp
jle
rcrb
insl
bound
cld
pop
imul
cltd
stos
inc
mov
imul
int
aad
adc
rdpmc
cmp
loopne
mov
mov
and
pop
jne
enter
add
lret
push
lret
bound
mov
fldl
mov
leave
xchg
sub
add
jbe
pop
data16
dec
push
out
inc
pop
add
jb
jecxz
stos
ss
or
or
sahf
xchg
mov
jmp
leave
adc
clc
fmull
sbb
xchg
jg,pn
ja
out
ss
arpl
dec
ret
lock
add
sti
adc
adc
xchg
sbb
push
inc
scas
js
pop
ljmp
dec
shr
inc
xchg
cli
ljmp
jnp
or
push
mov
xor
pop
std
ja
or
mov
xor
inc
push
rcll
arpl
pop
in
sbb
daa
xor
cmc
icebp
mov
xchg
push
ret
adc
xlat
call
test
test
push
pusha
andb
push
mov
popf
cmp
lret
adc
and
nop
jge
jns
leave
jno
sub
dec
dec
adc
jmp
ss
jmp
xchg
subb
in
out
mov
push
sub
test
pop
test
cmpsb
xchg
cwtl
xchg
das
sarb
adc
rcrb
mov
jae
mov
xorl
in
push
rol
sbb
int3
sbb
mov
lcall
adc
sub
xchg
stos
into
xor
jl
and
movsb
pop
fstl
and
mov
out
pushf
pop
jbe
mov
nop
ja
stos
cs
xchg
mov
cmp
adc
xchg
adc
xchg
insl
dec
jl
cmp
xor
nop
pop
bound
shlb
int3
pop
pop
psubq
xlat
lret
pop
jb
mov
fistpl
jle
je
sub
xchg
push
outsl
xchg
lock
test
ja
jge
leave
adc
sbb
outsl
jne
push
jbe
xor
or
cmp
inc
shlb
lds
lret
sbb
cmp
dec
or
test
xor
lret
and
xchg
leave
popa
mov
push
xchg
dec
daa
add
xchg
leave
je
mov
and
jg
std
pop
lods
scas
insl
xlat
repz
call
pop
sbb
mov
mov
into
dec
xchg
pop
enter
mov
pop
and
lahf
pushf
mov
test
stos
pop
sub
repz
pop
mov
mov
add
fcmovne
mov
push
rorb
jecxz
pop
jmp
mov
repz
loope
insl
clc
sub
test
jae
adc
cmp
jle
sbb
lahf
mov
add
adc
out
outsl
fdivrl
bnd
pusha
in
in
test
gs
out
mov
adc
cmp
pop
sti
pop
xchg
and
adc
mov
dec
std
jl
mov
xor
jnp
sbb
cmp
inc
outsb
les
ret
test
pusha
pusha
lock
pop
out
xchg
insb
cwtl
sbb
adc
jecxz
mov
test
or
out
test
call
cmc
dec
lods
jle
std
mov
rol
popf
add
outsb
xchg
mov
daa
sub
jmp
cwtl
pop
mov
adcb
add
fbstp
out
xlat
jns
fistps
nop
dec
add
push
lret
pop
sbb
add
fldenv
bound
lock
mov
cmpsl
push
xor
xorb
imul
cmp
inc
mov
outsb
fistpll
push
stos
mov
mov
lahf
mov
pop
fsubs
xchg
inc
pop
pop
aad
leave
out
cwtl
scas
popa
repnz
add
je
cmp
outsb
call
mov
push
dec
jnp
inc
mov
and
jo
inc
jmp
cmp
sbb
xchg
popf
cltd
push
xchg
ret
int
cli
insl
out
cmp
outsl
mov
mov
push
mov
cli
mov
mov
pop
int
test
cmovne
scas
insb
push
add
push
inc
and
popf
fldcw
xchg
inc
adc
shl
test
mov
stc
adc
jmp
imul
subl
fsubr
mov
xor
outsb
xchg
sbb
cmpsb
std
out
inc
cmpsb
outsb
xor
mov
sbb
dec
call
sbb
cmp
aas
sbbl
pop
inc
inc
xchg
adc
adc
shll
mov
sbb
addl
roll
push
adc
in
gs
pop
xor
sub
push
ret
sti
sti
pushf
sbbl
jg
or
pop
enter
call
adc
mov
shrb
adc
cwtl
sbb
sbb
xchg
dec
or
push
pusha
xchg
mov
in
je
cmp
pop
call
mov
sub
cmp
inc
aaa
or
pop
iret
push
push
fcomps
insb
mov
push
jae
shll
loop
push
fcomps
hlt
xchg
test
clc
lahf
mov
jns
jne
and
and
rorb
popf
lea
call
movsb
sarl
or
jno
and
sub
inc
loopne
mov
push
js
ja
stc
loope
lods
in
mov
xor
add
outsl
inc
or
adc
jno
outsb
add
mov
xor
mov
subl
xchg
or
scas
dec
mov
dec
mov
mov
movsb
sub
jne
xchg
adc
push
fwait
cmp
out
sub
mov
movsl
ror
call
dec
mov
and
push
sub
or
sbb
push
jl
mov
mov
rcll
cs
adc
loope
js
sahf
dec
icebp
ret
mov
xor
test
jns
jns
call
adc
xchg
aad
or
fs
pcmpeqw
repnz
xchg
test
jb
cmp
dec
xor
adc
test
in
outsl
pop
leave
inc
jnp
and
ret
push
jle
xor
xchg
push
pop
push
outsb
in
cmp
addr16
stos
hlt
xchg
rolb
mov
leave
outsb
mov
outsb
mov
fisttps
test
loope
push
cmp
jge
mov
sti
fldl
jno
ljmp
jmp
mov
imul
pushf
test
outsl
jbe
jl
insl
ljmp
push
je
insb
mov
xchg
cmpsb
add
inc
xchg
aad
scas
mov
adc
sub
mov
mov
mov
pop
or
push
testb
popa
cs
sahf
xchg
and
mov
lods
mov
pop
arpl
stos
mov
mov
xor
fnstsw
insb
bound
jno
sub
fstps
inc
mov
or
pop
xchg
cltd
mov
nop
ret
xor
mov
pop
subb
inc
fistps
repz
sbb
aaa
and
movsl
int
fsubrl
inc
test
lahf
dec
xor
mov
test
pop
cmp
and
and
rcrb
xor
fwait
outsl
in
xor
pop
jmp
add
ret
andb
enter
sbb
or
jge
stos
dec
in
jle
mov
push
mov
repnz
in
mov
cmp
or
shufps
or
pop
cmp
jg
ljmp
rep
ficomps
jle
or
sbb
or
jb
mov
sbb
inc
cld
or
test
sub
pop
mov
or
xor
inc
mov
jg
dec
jle
sarb
push
push
lcall
add
imul
pop
jnp
mov
jp
lds
mov
mov
cmp
gs
bound
xorb
and
insl
dec
lcall
lret
adc
outsb
scas
and
inc
out
push
repz
mov
jg
sub
aad
ret
mov
and
lcall
xchg
mov
dec
sarl
jae
push
jno
hlt
add
sbb
cmpsl
xchg
rclb
or
fcomp
cmp
jb
cmp
fadd
xlat
icebp
mov
lret
xchg
repnz
ss
mov
fcompl
xchg
cmp
sub
decl
xor
arpl
jg
scas
push
cmpsb
mov
aaa
pop
jge
or
in
pop
add
or
add
xchg
pop
push
jmp
jmp
ljmp
cltd
xor
aaa
imul
push
insb
pop
fcompl
xor
jle
ja
int3
rorb
push
pusha
cmpsb
js
aam
into
adc
mov
dec
sbb
ja
sub
int
orl
pop
cmpsb
sub
xchg
pop
xchg
mov
lock
sar
xor
enter
mov
aam
in
xchg
outsl
fwait
lods
movsl
sbb
test
je
jp
das
fs
xor
mov
push
ja
pop
in
repnz
xchg
dec
pop
int
in
movsb
push
adc
jne
lret
jno
cmp
and
mov
movsb
ljmp
cmpsl
aaa
push
cmpsl
mov
xor
or
adc
ficomps
inc
add
repz
cli
pushf
jg
xchg
cmp
in
testb
fsts
pop
filds
push
mov
push
shll
pop
and
xchg
outsb
ret
mov
push
js
xor
jle
dec
test
jp
ret
cli
fsub
mov
lahf
lret
loope
mov
jae
aaa
dec
fisubs
xchg
loope
out
sahf
int
pop
jbe
jle
or
int
and
mov
pop
xchg
and
and
pop
inc
fdivrl
mov
stos
or
mov
in
mov
pop
std
andb
xrelease
aam
stos
popa
in
es
mov
pop
cmpsl
nop
ja
nop
jno
cmpsb
mov
bound
cmpsb
pushf
xlat
jge
pop
loop
sbb
jecxz
add
movb
or
pop
out
jg
mov
loop
repnz
pop
dec
jns
mov
popf
push
sbb
fstl
xor
sti
jnp
or
insl
pop
fwait
mov
and
mov
adc
inc
movsl
pop
sbb
pop
or
push
xorb
mov
and
mov
cld
add
cltd
add
dec
xor
xchg
or
and
jmp
fdivrp
jl
mov
loope
fdivs
push
shrb
mov
or
faddp
dec
lret
mov
addl
test
adc
stos
cbtw
sbb
and
cwtl
repz
sub
adc
sarl
imul
jle
inc
mov
push
lret
push
clc
fmul
add
cmp
push
adc
mov
daa
push
ficoml
or
mov
sar
lea
jg
les
hlt
cmp
add
fbstp
sub
adc
adc
bound
fadd
push
pop
pop
pop
mov
adc
inc
jecxz
and
lods
ljmp
icebp
push
cmp
fstl
addr16
push
push
push
notl
add
and
push
hlt
sbb
xor
scas
mov
movsl
push
sub
je
and
rcrl
aas
stos
data16
bnd
loope
sgdtl
leave
inc
mov
dec
fsts
mov
movsb
out
cmp
add
fiadds
imul
sbb
cmp
outsb
push
mov
fcmovne
pop
or
push
call
ja
sub
iret
xor
js
mov
jnp
aas
cmp
call
dec
dec
sbb
mov
push
imul
sbb
out
rorl
test
push
test
jno
rcrl
in
mov
jns
ljmp
cmpsb
mov
add
xor
stos
dec
out
add
adc
mov
and
jno
sub
aas
sub
pop
and
hlt
mov
fisubl
and
lahf
mov
push
mov
shrl
dec
adc
sub
into
inc
push
mov
sub
lods
mov
fcmovne
push
or
rcl
mov
jns
push
lock
dec
ljmp
jle
jae
adcb
dec
in
repz
jbe,pn
cmp
fsts
stos
cli
and
fbstp
adc
gs
adc
pop
iret
jle
cmp
cmp
pop
jae
pop
clc
xchg
es
jo
adc
pop
ret
addr16
les
xchg
out
addr16
mov
shr
rcr
std
insb
movsl
dec
cmpb
xor
out
cli
stc
pop
jns
xchg
outsb
cmpsb
jmp
pop
mov
xchg
aam
orb
xchg
lahf
iret
push
add
sarl
fsubrl
ja
in
je
shll
fdiv
jno
subb
in
sti
pop
mov
ja
loop
sub
xor
shll
cmp
rol
sbb
jp
push
test
push
xchg
cli
rolb
dec
inc
jmp
das
xchg
inc
leave
push
sti
ffreep
mov
push
xchg
inc
or
and
cmpsb
jbe
mov
push
mov
aaa
adc
push
push
stc
push
dec
cmc
subl
not
es
cld
pop
cmpsb
adc
dec
inc
mov
aam
enter
mov
mov
mov
mov
add
fstpt
jmp
dec
outsb
bswap
or
popa
outsb
sbb
xchg
mov
dec
and
jl
scas
mov
std
andl
stos
mov
adc
sbb
inc
jmp
pop
adc
mov
mov
adc
pop
pop
lods
jle
cmp
shlb
pop
mov
into
jmp
or
sbb
mov
and
imul
out
aad
xor
ljmp
test
call
movsl
dec
jecxz
fnstenv
inc
aaa
jge
out
add
test
dec
mov
mov
popa
xlat
sub
aam
mov
dec
jb
lea
and
jnp
xchg
mov
adc
jmp
pop
cmp
loop
andb
popw
add
push
mov
jns
aad
insb
ljmp
jge
aas
pop
sbb
mov
mov
imul
sbb
add
fptan
outsl
sbb
or
and
sbb
and
push
popf
fiadds
in
push
mov
mov
mov
dec
cmp
je
lds
push
cli
cmp
iret
adcb
inc
push
fldcw
dec
ljmp
jo
in
xchg
push
cmp
clc
cmp
leave
xor
add
ret
movsb
mov
mov
pusha
push
inc
hlt
call
pop
pop
sub
mov
pop
mov
movsb
or
cmp
xchg
push
push
fisttpl
pop
and
fwait
orl
faddl
mov
ds
scas
dec
mov
dec
pusha
mov
pop
adcl
xchg
add
jecxz
cmp
enter
bound
addr16
sub
iret
cmp
xchg
shll
in
inc
sbbb
xor
push
into
xchg
test
jne
adc
lods
or
mov
js
mov
dec
rorl
inc
stc
adc
out
pop
adc
add
sub
les
lea
adc
rcrl
xchg
std
dec
lods
ret
clc
imul
int
sub
inc
push
sti
mov
int3
cmpsb
loope
xor
and
or
ds
lods
loopne
xchg
es
adc
daa
add
in
ds
xchg
cld
outsb
xchg
int
xchg
push
push
inc
ret
jns
testl
cmp
xor
into
fldl2t
addr16
inc
test
rclb
xor
pop
mov
sti
int
test
dec
sarl
xchg
or
sarb
ret
negb
push
aas
cmp
xchg
xchg
mov
in
cmpb
cs
fs
ret
cltd
jge
insb
ljmp
lret
call
push
test
push
je
mov
pushf
mov
cmc
jne
mov
jns
cmpb
popa
push
cmpl
dec
mov
stos
ror
repnz
dec
push
arpl
or
xor
mov
test
mov
sbbb
pop
add
push
gs
out
mov
sbb
imul
shl
lret
and
cld
add
jle
fsubrl
ja
arpl
mov
xor
adc
int
ss
push
or
dec
fidivrl
lea
nop
les
add
ret
lds
ss
lods
pusha
arpl
mov
adcb
movsb
jg
in
cmp
sub
repnz
imull
pop
mov
clc
clc
pop
rorb
insb
xor
inc
sbb
jecxz
jno
cmpsl
mov
jb
jne
push
loopne
subl
xor
sahf
xlat
inc
dec
add
clc
outsb
out
imull
fsubrl
or
lea
adcb
mov
lock
add
sarb
cmpsb
imul
inc
push
xchg
repnz
call
ja
jl
push
push
pop
out
scas
xor
cmpb
je
and
movsl
sqrtps
repnz
lahf
mov
shrl
xchg
mov
xchg
mov
insb
les
mov
mov
loopne
pop
and
outsl
push
xchg
aaa
sti
pmaxub
mov
adc
xchg
xchg
rcl
mov
mov
fdivrl
jne
andl
mov
out
in
into
pop
mov
mov
mov
pop
insl
popw
sbb
scas
sub
bnd
lcall
jb
jb
lea
inc
enter
out
pop
lret
sub
cs
pop
dec
cmp
adc
dec
jno
leave
sub
cmp
addr16
mov
push
nop
int3
out
loopne
jns
icebp
neg
cld
mov
sbbb
sub
cmp
mov
rorb
rorl
cli
cmpl
adc
push
mov
int3
fdivl
dec
pop
jno
int3
xor
rorb
ret
mov
mov
mov
or
adc
push
lahf
lcall
test
fistpl
mov
push
cmpsl
pop
push
jge
fisubl
rcrb
mov
arpl
jmp
cmp
inc
jl
movl
decl
out
sbb
mov
or
cli
dec
and
xorl
pop
in
rcrb
mov
imul
sub
dec
or
mov
dec
fcomps
jb
cmp
push
cmpsb
scas
sub
aaa
mov
aam
negl
xor
aaa
xor
dec
xchg
imul
popf
data16
rorb
jmp
or
pop
push
sahf
cmp
sbb
xor
scas
lds
sbbl
pop
out
or
fistps
cwtl
stos
imul
jg
das
leave
jno
cmpsl
cmpsl
jl
jo
pushf
rcll
adc
imul
add
push
in
into
scas
in
pop
mov
imul
push
inc
jae
aad
cmpsl
xchg
jns
pop
or
fs
les
pushl
and
test
rcrb
adc
xchg
push
out
add
sbbb
mov
jle
insl
add
xor
sbb
inc
and
sahf
and
jno
dec
sub
das
dec
arpl
inc
arpl
fs
rorb
ror
fwait
and
jb
and
push
gs
mov
or
ret
xor
pusha
mov
jmp
lods
hlt
dec
imul
push
push
js
stos
fcoms
aaa
out
xchg
sbb
sbb
ret
push
lock
add
mov
pop
fcomps
dec
test
lock
jmp
inc
inc
dec
nop
inc
stos
cmp
adc
mov
xchg
repnz
and
std
mov
cltd
ret
daa
mov
inc
pop
ljmp
push
mov
das
repz
inc
mov
xchg
adc
and
xor
pop
adc
fcomip
ret
sbb
popa
sub
idivb
xchg
scas
iret
adc
je
pop
mov
pop
fidivl
popf
xlat
enter
cmpsb
adc
mov
arpl
addl
test
push
mov
bound
arpl
cmc
xchg
cli
sub
pop
mov
sub
scas
imul
das
sbbb
pop
cmpsl
lock
mov
js
cmc
ja
andb
pop
shrb
mov
repz
dec
js
cmc
ret
cld
mov
and
test
sub
ret
and
add
cwtl
in
mov
out
lea
add
jle
jb
rol
mov
jp
mov
xor
orb
aam
andps
cmpsb
das
aaa
mov
ds
sarl
mov
ret
int
in
das
mov
xor
ss
aaa
out
add
imul
popa
dec
push
or
push
dec
cmp
rorb
cmc
or
pushf
popa
test
scas
pop
fs
add
jno
push
sti
mov
inc
repz
rolb
sbb
fimull
sub
push
bound
sub
adc
pop
xchg
cmp
push
push
pop
in
loopne
sahf
dec
pop
cmp
pop
cmp
ud2
inc
push
int3
mov
sub
pop
sub
test
sbb
dec
cld
pavgw
add
pop
sub
lods
push
add
push
stos
fdivs
mov
loope
jb
testl
jno
lods
push
cmp
mov
in
or
icebp
fnstenv
mov
xor
fdivrp
pushf
out
arpl
add
xlat
repz
xchg
jo
mov
and
jecxz
loop
sbbl
mov
aaa
jne
ret
jnp
mov
and
push
cmp
dec
sub
cs
mov
iret
add
sahf
repnz
and
aas
out
out
cwtl
xor
pop
push
dec
insl
pop
mov
outsb
mov
mov
sti
pop
pusha
jp
inc
sub
ret
jbe
outsb
movsb
cmpb
sbb
jp
sti
ret
andl
movsb
adc
in
fwait
mov
sub
jno
add
stc
mov
sub
pushf
jae
ss
fnstcw
mov
lahf
mov
inc
shr
loopne
and
xchg
nop
cmp
int3
dec
mov
push
sub
jl
arpl
inc
frstor
inc
lcall
and
or
loop
cmpsb
cmp
jg
xor
mov
inc
or
push
mov
mov
loope
or
addl
scas
pushf
das
pushf
add
sub
push
je
lret
and
leave
outsb
dec
mov
stos
int
mov
add
pop
mov
je
inc
sti
pop
jb
das
mov
sub
ss
ljmp
scas
jmp
mov
out
sub
sub
and
enter
ja
cltd
out
push
out
pop
sbb
push
aad
cltd
test
cmpsl
imull
pop
pop
lret
pop
fucom
dec
ss
or
mov
stos
cmp
adc
and
stos
jno
insb
pop
pop
enter
in
cwtl
jl
xor
xor
sbb
in
ret
icebp
inc
push
shrb
cmp
and
mov
andb
arpl
shl
loope
repnz
add
pop
and
jmp
lds
xchg
jmp
clc
mov
ljmp
fdivrs
test
int
push
mov
sub
inc
sti
adc
xchg
xor
mov
sbb
or
lret
popf
inc
ror
insl
pop
sub
out
iret
into
mov
cwtl
icebp
mov
repz
push
mov
sbb
out
ljmp
jns
cmp
ss
sbb
or
subb
inc
cmp
fnstsw
aad
jecxz
insl
shrb
arpl
push
dec
push
push
gs
lret
xchg
pop
mov
dec
pop
out
sub
div
dec
mov
in
sub
or
dec
mov
faddl
xchg
adc
cmp
out
xor
cmp
sarl
insb
mov
or
ds
and
push
movsb
or
push
incb
xchg
in
shl
mov
mov
push
lods
jae
xchg
movsb
add
pusha
rcrb
enterw
pusha
sahf
cmp
nop
push
adc
aam
mov
cmc
inc
mov
test
jns
adc
ret
daa
sbb
js
rcl
dec
add
mov
call
shl
rcll
call
and
out
mov
inc
cmpsl
mov
nop
outsb
cli
ret
dec
xchg
stc
add
mov
lret
jno
lret
sbb
scas
mov
shlb
jnp
xchg
push
in
pop
loop
and
popa
push
sbb
mov
shll
in
pusha
mov
xor
stos
inc
lret
in
lcall
es
add
xchg
xchg
adc
dec
aaa
ret
stos
leave
cli
sub
repnz
mov
loop
sub
xor
jle
add
ret
test
cmpsb
stos
out
ja
jns
xor
or
insl
je
mov
sub
add
int3
pop
xchg
js
cs
sub
bound
pop
jnp
in
jecxz
dec
push
enter
mov
xchg
rcrb
je
orb
pop
movsl
roll
sub
ja
imul
or
adcb
dec
repnz
pop
or
adc
sbb
ror
push
push
in
sti
jbe
lods
mov
mov
sbb
dec
add
adc
xchg
fbld
or
insb
test
cmp
sti
jmp
xchg
xchg
adc
mov
inc
and
mov
loopne
add
in
jb
outsl
cmc
in
hlt
inc
cmp
inc
pusha
mov
in
loopne
adc
inc
dec
cmc
adcb
fidivrs
out
xlat
pop
ljmp
push
xchg
lret
push
mov
cmp
iret
andb
pop
pop
lcall
test
xor
sarl
daa
shlb
add
js
sub
scas
leave
fisttpl
add
dec
mov
push
js
add
pop
jmp
int3
jge
mov
inc
test
shl
js
xorb
popf
jo
div
clc
popf
sti
mov
pop
cs
jp
mov
xor
aam
mov
notb
mov
pop
ret
scas
iret
lock
cmpsb
lahf
cmp
xchg
inc
aad
push
xchg
jo
icebp
shl
stos
inc
shlb
repz
sbb
nop
jne
pop
or
jmp
and
xchg
out
and
std
std
pop
sub
adc
icebp
pop
cmp
and
cmpsl
pop
push
and
push
stos
sub
fnstenv
mov
out
lea
xchg
mov
movsb
lret
dec
add
inc
fdivr
call
xor
mov
enter
sahf
popa
sbb
sbb
cmp
pop
mov
sub
xor
pop
and
cmp
push
push
mov
xchg
push
mov
cwtl
add
pop
rcr
ret
lret
or
loope
sub
lahf
mov
into
mov
inc
ficomps
dec
loopne
mov
xlat
mov
out
xor
push
push
xlat
mov
dec
pop
inc
mov
cmp
inc
push
dec
cmp
orl
adc
mov
mov
sub
fldcw
xchg
or
lds
adc
stc
cmp
jecxz
push
lds
push
loopne
push
cmp
adc
mov
add
lock
repz
imul
mov
push
aam
push
push
stos
repz
sbb
lcall
lods
mov
int3
xlat
int3
movsb
push
xchg
fadds
int
pop
loop
dec
iret
xchg
mov
xor
sbb
inc
popa
mov
fimuls
mov
mov
out
xchg
enter
sub
or
or
inc
test
or
mov
lahf
mov
adc
and
enter
add
jae
sub
stos
out
cli
pusha
mov
loope
add
leave
movsl
xchg
iret
bound
sbb
sbb
jae
or
jae
mov
lods
shrb
and
movsl
outsb
or
fstps
in
jp
jge
sbb
fdivrs
ror
xchg
into
pop
mull
pop
inc
dec
sbb
adcb
scas
inc
das
rclb
jnp
jmp
inc
cmp
sub
in
fldt
adc
sub
sbb
push
dec
imul
jl
lods
pop
aaa
int
mov
jb
xor
cmp
imul
sbb
mov
jecxz
repz
loope
lods
gs
add
ja
pop
or
clc
adc
inc
mov
pop
pop
mul
mov
cmp
or
inc
nop
scas
int3
xor
or
icebp
mov
jno
mov
nop
lds
mov
pushf
adc
cs
data16
rorb
js
dec
adc
loope
lret
adc
push
int3
stos
jmp
pop
shlb
mov
sub
xchg
dec
rcl
inc
shll
mov
movsb
mov
mov
lea
ret
les
sti
pop
push
hlt
rclb
aam
push
mov
cs
int3
mov
xor
xchg
imul
push
cmc
sbb
xchg
je
fwait
dec
imul
pop
test
in
call
push
pop
push
sahf
or
push
dec
xchg
cld
adcl
out
sarl
cld
call
jg
out
and
hlt
orb
ret
rorl
out
add
mov
push
jmp
push
mov
mov
outsb
inc
ret
pop
and
sbb
sbb
cwtl
stos
loopne
sub
jno
add
rorl
mov
adc
pop
xchg
mov
lcall
adc
push
aad
push
sub
mov
movsl
scas
jp
std
and
push
addb
mov
jecxz
and
orl
rclb
pushf
and
pop
out
cld
pop
shl
shll
jp
je
pusha
mov
shll
mov
and
push
leave
inc
pop
ja
and
fsubrl
ds
add
push
enter
cmp
iret
data16
fldenv
arpl
cwtl
pop
push
xchg
int3
test
outsb
gs
stos
inc
pop
fwait
xor
cmc
mov
fdivp
sbbb
mov
popf
jo
jae
pushf
mov
push
in
iret
adc
in
test
mov
jge,pt
imul
push
out
cmp
xchg
int
add
insl
mov
or
and
push
inc
cmpsb
repnz
jl
push
mov
cmc
inc
pop
sub
add
jb,pn
xor
insl
enter
lahf
add
add
xchg
fnstsw
pushf
popa
jae
mov
mov
inc
inc
scas
xchg
dec
inc
mulb
ljmp
cmp
mov
cmc
outsl
mov
sbb
stos
std
popa
pop
lret
aaa
or
pop
test
test
adc
int
xchg
sahf
call
ja
fnsave
mov
leave
push
mov
adc
jle
pop
push
aad
mov
mov
mov
and
int
jg
push
fisubrl
push
repz
cmp
push
jle
jo
xorb
test
das
mov
clc
mov
lock
insl
mov
and
sub
iret
in
out
fstpt
mov
rcpps
ret
pop
mov
lret
cwtl
push
pushf
cwtl
mov
popf
jp
inc
stos
enter
push
test
mov
test
cmp
cld
fcoml
shrl
out
pop
xor
mov
mov
add
or
xor
mov
jg
mov
or
or
mov
idiv
mov
loopne
jb
mov
mov
push
aam
jns
or
and
rolb
call
std
fimuls
stos
sbb
cmp
fcmovnb
lock
nop
mov
aad
popa
lods
sbb
aas
xchg
je
mov
test
stos
dec
sbb
push
inc
and
xor
mov
cli
jns
mov
cmp
test
ds
inc
lds
test
and
rol
push
incl
aaa
enter
mov
mull
mov
dec
arpl
xor
mov
mov
jp
or
sub
push
loope
jo
das
addr16
pop
hlt
test
jmp
mov
cltd
fmull
sub
loopne
loopne
iret
mov
inc
or
and
shll
iret
addl
jne
add
mov
in
jecxz
pop
bound
jae
mov
dec
push
jge
jno
mov
sbb
rolb
xor
into
and
sbb
ja
mov
lcall
mov
and
insb
aam
xchg
add
push
adc
mov
dec
les
popf
loope
das
xor
int
test
cli
lods
imul
arpl
jmp
jp
adc
cmp
sbb
jns
repz
mov
ficomps
xchg
test
add
pushf
and
stos
aad
aam
lahf
cmc
mov
stc
xchg
and
or
test
mov
or
adc
jno
sub
pop
xchg
ja
fs
sub
arpl
ret
cld
jmp
mov
xchg
insl
cmp
loop
sets
fsubrs
and
mov
sahf
jo
idiv
cld
cmc
sahf
iret
and
sub
data16
xchg
call
sarl
pop
in
dec
pop
inc
scas
lods
xchg
rcrl
cs
inc
shlb
inc
sub
lds
adc
into
out
inc
insl
dec
push
insl
adc
loope
xor
or
add
xor
adc
stos
mov
and
movsb
icebp
push
pop
inc
fdivrl
jl
les
xor
arpl
cmp
pushf
mov
fnstcw
cs
out
int
add
sti
fdivrl
arpl
test
sbb
sub
std
mov
xor
jae
sub
ss
mull
sbb
lds
imul
lea
fdiv
and
mov
pop
ss
vorps
and
insb
stc
sub
sbb
or
addl
imul
lock
leave
js
loope
dec
fnstenv
pop
adc
or
andl
fdiv
fsubp
mov
daa
fildl
in
push
jbe
mov
adc
and
cmp
xor
movsb
pop
xlat
cmp
adc
iret
pop
xor
fimuls
dec
and
pop
fwait
imul
mov
sbb
inc
inc
lahf
sbb
push
add
push
and
clc
stc
adcb
or
and
les
mov
cmp
clc
fwait
lea
insl
push
insb
call
pop
pop
nop
xchg
jecxz
subb
dec
cld
rcll
cmp
mov
stc
lret
or
mov
fadd
lods
adc
push
loop
jbe
jne
dec
idivl
lret
imul
dec
jno
sahf
jecxz
sub
inc
xchg
adcl
xchg
push
inc
cmp
adc
mov
test
cltd
mov
mov
cmp
lret
ss
xor
ljmp
adc
js
repnz
das
xlat
fwait
sbbl
pop
fwait
data16
arpl
mov
xor
std
clc
jo
dec
mov
test
sub
movsl
inc
adc
mov
xchg
jo
rcrl
pushf
insb
fs
cld
sahf
dec
cmpsl
outsl
push
fldcw
repnz
arpl
and
jg
and
and
jmp
lret
aam
xor
xchg
add
imul
jl
ret
rcr
lods
push
sub
fidivl
xor
roll
pop
ret
add
andb
sub
shr
js
inc
pushw
xor
or
xchg
ja
push
aaa
jp
pop
xor
xor
aaa
stc
lock
insl
or
add
test
jb
jl
jb
and
push
cmc
inc
inc
or
pusha
les
cs
and
in
adc
insb
push
add
notl
mov
jmp
dec
xor
iret
inc
imul
jno
push
enter
repz
mov
fimuls
mov
push
movl
not
adc
sub
rcr
dec
stos
mov
sti
test
mov
jl
sbb
mov
aaa
movsb
push
sbb
or
pop
push
out
add
xchg
mov
jecxz
push
outsl
jl
dec
adc
push
xor
iret
push
xor
cwtl
mov
stos
add
push
xchg
pop
adc
test
pop
sti
rcr
push
cmp
aad
orb
pop
sub
cmp
xor
mov
pop
cli
cmpsl
dec
es
dec
shrl
or
leave
mov
pusha
enter
fdivp
mov
int
xchg
pop
adc
push
ds
mov
gs
push
sbb
in
mov
and
inc
dec
inc
stos
pop
bound
scas
push
loope
mov
stos
mov
jl
fmul
js
clc
mov
std
cltd
out
aam
cs
push
bound
push
rolb
push
sub
or
mov
and
fistpl
cld
in
aad
jg
cmp
sbb
mov
ja
sbb
cmc
mov
leave
xchg
inc
clc
pop
inc
loopne
jecxz
test
xor
popa
sbb
pushf
and
mov
js
rorb
sub
es
cli
fisubrl
not
shll
mov
js
pop
das
nop
imul
mov
mov
mov
ret
icebp
push
popf
movsl
adc
mov
mov
jns
popa
fidivrs
mov
pop
push
cmp
add
roll
cli
add
mov
nop
xchg
adc
clc
incl
aad
mov
pop
sti
pop
pop
jb,pt
mov
mov
scas
pop
hlt
jmp
das
sbb
sub
pop
es
mov
js
sub
cmp
repnz
xchg
inc
hlt
adc
cmp
fmull
adc
stc
pop
mov
xchg
mov
shlb
subb
sub
loopne
shlb
shll
xchg
push
arpl
cmp
pop
hlt
xchg
lods
ljmp
adc
adc
add
adc
lret
push
dec
shl
cmp
std
clc
insb
jmp
jg
push
mov
ja
mov
ljmp
inc
inc
arpl
test
addb
pop
and
pop
inc
mov
and
jmp
adc
stos
xor
loopw
hlt
or
inc
and
sbb
sbb
out
lret
pop
enter
fisttpll
dec
cli
xlat
or
sub
in
inc
decb
in
mov
lea
or
movl
mov
jae
sbb
cs
shll
scas
and
cmp
push
and
jno
xchg
imul
sbb
mov
pushf
das
mov
mov
add
dec
mov
cld
aas
jo
mov
lahf
add
inc
in
dec
loopne
mov
hlt
jmp
mov
mov
jno
scas
jmp
cwtl
push
sahf
mov
and
outsb
sbb
or
fwait
mov
sbb
mov
data16
sub
hlt
es
imull
xchg
out
jnp
sub
cmc
test
call
test
mov
dec
mov
in
fdivs
dec
jmp
push
fisubl
xchg
push
mov
jp
mov
cmpsl
sahf
stos
push
cmc
mov
inc
fbstp
pop
jns
pop
mov
add
movsb
out
sub
jbe
popf
test
test
hlt
xor
push
and
fsts
out
js
sbb
inc
jecxz
xchg
push
push
inc
jp
popa
mov
in
dec
jp
enter
inc
lea
jne
mov
xor
iret
stos
and
jmp
mov
or
xor
addr16
inc
sub
repz
mov
mov
movsl
or
dec
mov
mov
sbb
dec
dec
adc
enter
add
sahf
fs
pop
cli
dec
daa
clc
xor
insb
lahf
shr
negl
pop
xor
inc
aad
ljmp
inc
scas
loopne
sub
and
sbb
into
xchg
jecxz
xchg
or
nop
jmp
push
mov
ja
insb
scas
sub
pop
insl
or
mov
inc
ljmp
mov
push
call
jns
or
jo
or
xor
nop
pop
inc
std
pop
insb
inc
cmp
mov
aaa
jae
pop
cmp
out
jo
popa
loop
lea
scas
mov
add
lcall
fists
jno
inc
mov
daa
fdivl
ljmp
ds
xchg
sbb
rcr
repz
jo
pop
nop
and
add
inc
sbb
gs
es
pop
fs
add
push
cmp
sub
jp
fisubrs
add
iret
pop
add
xor
out
mov
rcll
lret
dec
cmp
sbb
rcl
cmc
fcomip
and
add
out
inc
or
mov
inc
jne
lods
or
ret
xchg
into
lret
fimull
dec
jns
or
fiaddl
pop
adcb
hlt
xchg
jge
xor
outsb
nop
movsb
push
mov
out
shl
xor
push
aad
xor
cmpsb
out
jo
cs
inc
ffreep
inc
mov
pop
cld
scas
or
int
es
sahf
adc
lret
dec
lods
fimull
fiadds
xchg
cmpsb
shlb
pop
inc
push
mov
in
loope
push
sub
jne
push
aam
mov
dec
pop
leave
add
sbbb
lret
pop
dec
pop
cmp
and
xchg
cmp
xchg
int3
sbb
pop
nop
and
or
mov
subb
in
mov
jg
imul
loope
jnp
pop
mov
push
mov
xor
xchg
inc
mov
jle
aad
mov
mov
es
mov
int3
repnz
xor
or
mov
cmp
mov
push
adc
cmp
mov
cmpsl
mov
ds
pop
movsb
stos
nop
cmp
cltd
addr16
in
sti
dec
repnz
lahf
add
push
sbb
fs
pop
sbb
ret
cltd
inc
mov
cld
dec
loopne
dec
mov
mov
or
push
shl
in
stos
int3
into
hlt
mov
ja
mov
loopne
fdivr
inc
inc
enter
into
outsl
add
jle
and
ds
jg
rorb
bound
sti
xchg
pusha
adc
dec
mov
jg
inc
lahf
cmp
jg
jmp
mov
cs
cltd
and
dec
iret
ds
les
push
cmp
movsl
add
enter
push
and
adc
mov
pop
and
je
push
test
subl
xchg
fimull
fstl
stos
lret
sti
push
js
lock
xor
lahf
pop
inc
sub
push
xchg
movsb
je
or
or
jp
mov
pop
mov
sbb
scas
inc
pop
int3
xchg
mov
add
xchg
insl
mov
lcall
sahf
mov
adc
sbb
loope
or
popf
insb
cli
out
mov
xor
lret
or
xchg
cmp
les
cli
popa
es
cmpsl
adc
lret
stc
jo
sub
jp
jnp
loopne
mov
in
test
pop
addb
or
mov
jge
mov
push
sbb
mov
test
push
pop
or
decb
fisttpl
push
loop
arpl
stos
clc
aaa
js
inc
inc
mov
ds
cmp
push
push
sti
mov
mov
repnz
imul
mov
pop
fildl
sbb
cs
push
shr
das
xchg
mov
outsl
xchg
insl
adc
jne
cmp
mov
add
lock
push
cmp
push
pop
pop
sub
jge
es
repz
jno
inc
jnp,pt
jle
xchg
pop
je
hlt
fistpl
fldl
hlt
mov
or
test
cmpsb
mov
insb
daa
bound
jnp
sub
pushf
and
sbb
xor
mov
ja
push
and
lock
nop
jp
push
sub
dec
iret
sbb
mov
iret
pop
aam
xchg
push
dec
out
subb
dec
jno
cld
sub
in
fcmovnu
addr16
lock
scas
loope
cltd
ljmp
lds
lods
sub
dec
jno
dec
jae
mov
push
jne
cmpsb
mov
jg
sub
cwtl
sarl
insb
fmul
mov
xchg
pop
xchg
dec
leave
rolb
lods
fsubs
mov
push
cmpsl
data16
fwait
outsl
mov
mov
push
xchg
rorb
xor
ret
sarb
pop
mov
leave
insl
lahf
pop
cs
fcoml
pusha
xor
jb
xchg
je
inc
lds
ds
addb
and
shlb
stos
jmp
and
aam
add
dec
cmpsl
js
mov
aam
push
sbb
inc
or
cld
call
arpl
mov
push
cwtl
add
jno
xor
sub
cltd
xchg
dec
mov
mov
mov
and
xchg
shl
jp
pop
stc
pop
sahf
adc
testb
and
lods
in
and
or
push
add
ds
loope
push
sbb
xor
cmp
sub
mov
pop
xor
sti
sarl
and
stos
shl
lret
mov
leave
mov
in
les
xor
push
sbb
adc
xor
push
out
push
push
jecxz
pop
jg
sbb
sbb
insb
ror
enter
sub
or
sub
jmp
in
bound
sti
in
enter
in
clc
xor
sbb
mov
xor
mov
in
mov
sbb
int
mov
lods
add
xchg
cmp
or
fmul
xor
inc
data16
push
mov
push
leave
fbstp
or
cmc
loope
test
jns
loope
cli
sbb
imul
inc
shr
mov
adc
xchg
xor
xchg
aad
push
xchg
stos
xor
xor
sahf
rorb
mov
lret
xor
orl
and
rcrb
push
repz
das
mov
test
xchg
sub
sub
pop
aad
or
sbb
xor
pop
cmp
lahf
psubd
jb
push
neg
inc
add
jle
cmc
mov
cmp
inc
in
and
mov
fs
je
sarl
jg
ss
neg
icebp
cs
inc
pop
stos
push
xchg
les
jb
fiaddl
ret
ljmp
popf
sar
push
jl
xchg
cmp
push
push
mov
movsb
xor
iret
mov
bswap
sbb
xchg
pop
mov
jg
gs
cmp
pop
cmpl
sbb
dec
sbb
mov
lock
lea
ret
call
mov
ret
pop
dec
jnp
fstps
adc
inc
aad
enter
bswap
test
push
loopne
jp
mov
rorb
aad
adc
jl
jge
aaa
hlt
lea
add
into
xor
and
ss
repz
out
shll
loope
and
push
fisubs
imul
gs
push
mov
dec
fsub
ja
xchg
out
int
cs
mov
or
repz
nop
or
xchg
icebp
and
pop
xor
cltd
test
xor
sti
add
lds
jge
sub
pop
lcall
push
mov
or
lcall
cmovae
lret
adc
mov
daa
std
popa
and
xchg
lods
aad
inc
loopne
pushf
mov
sbb
inc
subl
mov
jnp
fisttpll
test
inc
ds
jb
pop
xchg
loope
mov
or
fisubrl
mov
and
dec
stos
add
hlt
gs
dec
add
in
sub
jns
jmp
cmp
pusha
push
cwtl
pop
push
arpl
mov
lock
mov
push
arpl
push
inc
sub
bound
jecxz
add
sarl
mov
push
xchg
cld
and
movsl
pop
loop
test
cmp
mov
test
popf
gs
pusha
rcl
and
or
adc
leave
or
stos
loope
mov
fstpl
jo
push
xor
stos
nop
pop
or
das
loope
add
add
xchg
shrl
scas
popa
push
outsb
or
xorb
pop
or
mov
xor
dec
push
les
adc
popa
repnz
lret
movsl
push
decb
xor
inc
fstps
push
xor
push
mull
cmp
jecxz
leave
jmp
jp
sub
leave
and
sbb
lea
xchg
sbb
cmp
dec
add
add
mov
pop
cwtl
xor
push
iret
lock
or
sbb
leave
mov
mov
jge
sub
push
sarb
fdivs
clc
dec
stos
mov
mov
dec
arpl
movsl
mov
push
inc
sub
and
adc
jo
push
sub
push
sub
pop
movl
xchg
stc
xor
es
push
pop
mov
lds
add
pop
mov
in
movsl
push
mov
fadds
and
andl
pop
pusha
mov
jns
stc
fisttps
sbb
in
inc
and
movsb
and
popa
outsl
cmpsb
and
inc
in
push
push
imul
clc
rclb
fisubl
cld
mov
adc
hlt
ret
stos
je
mov
lret
and
inc
repnz
and
adc
sub
lahf
popa
lcall
imul
pop
adc
loop
sub
cmp
mov
lods
sbb
pop
test
sbb
dec
loop
das
addr16
adc
push
cmpsl
cmp
adc
push
mov
push
outsl
sbb
add
icebp
dec
cmpsb
xor
sub
repz
pop
iret
lret
cwtl
adc
sbb
insb
mov
nop
daa
adc
xchg
mov
cmpxchg
cmp
int3
movsl
test
adc
lahf
in
out
int
mov
lods
xor
xchg
mov
dec
adc
lret
pop
mov
lock
mov
stos
push
dec
pop
das
aas
adcb
inc
jmp
sub
hlt
xor
cli
das
dec
icebp
shll
add
out
pop
and
sub
jno
js
or
mov
jb
mov
js,pn
sub
test
add
cmpl
dec
push
dec
out
cli
pop
ret
mov
pop
xchg
xchg
fsubrl
xor
adc
fidivrs
outsl
fcoml
fstpl
pop
arpl
mov
lods
popf
xchg
aaa
add
popa
insl
sbb
aaa
cmp
dec
and
shrb
jae
mov
rcll
cmp
xchg
std
xchg
enter
sahf
mov
sbb
cmp
mov
add
or
sub
icebp
adc
in
jb
fiadds
loopne
inc
outsl
or
xrelease
popf
shl
out
data16
inc
xchg
dec
fcmovnb
gs
inc
and
insl
js
or
shrb
jnp
jp
enter
cmpsw
adc
mov
stc
fwait
in
and
rclb
lods
jecxz
aas
mov
fcompl
and
imul
les
cmc
pop
add
add
aad
iret
pmovmskb
dec
imul
push
es
mov
insb
test
lret
jp
cs
pop
in
outsl
xor
imul
and
mov
stos
ret
xor
into
inc
aad
add
js
and
xor
inc
inc
popa
jp
setg
or
jbe
jg
test
popf
stc
xchg
sub
scas
mov
xor
cmpsb
mov
mov
cli
aam
js
mov
push
cmp
incb
sub
add
mov
push
mov
out
mov
dec
push
out
sub
mov
movb
int
test
orb
or
push
xchg
jp
out
ss
sbb
xchg
jle
std
sarb
or
shll
push
pop
and
mov
ret
es
mov
push
push
sub
rorl
pusha
mov
out
jle
or
pop
icebp
out
dec
jmp
cli
and
mov
ret
mov
scas
scas
outsb
es
lock
popa
mov
mov
adc
mov
jl
fwait
js
fadds
dec
push
mov
in
pushf
mov
xor
push
push
mov
sti
ds
out
pusha
inc
test
popa
subb
aad
jbe
mov
clc
aas
lahf
pop
addr16
or
sahf
and
insl
mov
movsl
cmp
call
xchg
cmp
daa
sbb
lock
cmp
mov
bt
lret
mov
ret
iret
adc
cmpsl
leave
imul
sbb
test
sbb
cmc
bound
dec
mov
popa
movsl
mov
push
push
cmp
outsb
mov
addr16
mov
repz
mov
sub
jmp
test
push
push
pop
sti
je
mov
test
push
lea
out
mov
sarl
cmp
inc
xchg
and
ss
roll
nop
xor
adc
jo
mov
enter
stos
je
shl
xor
mov
and
jl
and
imulb
push
stc
inc
mov
xchg
test
fimull
xor
mov
loope
jno
mov
lcall
add
orb
imul
nop
add
pop
or
scas
xlat
jle
and
xor
adc
shrl
out
sti
loop
mov
outsl
cmp
mov
test
jl
dec
clc
dec
cs
pop
and
push
xchg
or
nop
js
push
cmp
sub
jbe
adc
cmpsb
icebp
mov
pop
pop
clc
lds
je
pusha
call
xchg
inc
icebp
cmc
mov
aaa
loopne
add
sarb
fistps
mov
xchg
mov
stos
mov
xchg
arpl
cmp
js
popf
pop
js
xchg
mov
jbe
test
jmp
mov
ret
mulb
cmp
hlt
sti
jmp
sub
frstor
fsubrl
mov
xlat
hlt
ljmp
push
jae
xor
rclb
xchg
or
mov
xchg
addr16
popa
cli
hlt
loopne
enter
call
xor
adc
pop
in
dec
int3
mov
iret
push
and
insb
mov
mov
cwtl
sub
mov
lret
std
xor
sub
jns
js
xchg
outsb
cmp
jbe
in
bound
jns
sbb
clc
push
and
ja
dec
jae
nop
lea
ror
aam
xchg
lcall
xchg
sti
cmpsl
dec
loopne
push
dec
int3
jecxz
or
push
les
pop
mov
pop
scas
into
jno
out
jbe
add
ret
pop
jnp
mov
sub
notb
inc
push
and
push
mov
loop
aaa
xchg
and
inc
cmp
add
aam
sub
dec
xchg
jb
cltd
fistpl
cmpl
push
sub
cmp
loope
xchg
jno
rol
int
cwtl
int3
sub
hlt
inc
adc
lods
jl
pop
push
dec
sub
stc
out
cs
push
es
mov
cmp
dec
test
cmpsb
addr16
sarl
jns
cld
lret
sbb
call
xlat
sahf
std
loope
cmpsl
inc
sbb
cmp
repz
pop
iret
dec
jmp
mov
gs
xchg
in
orb
sbb
cmp
hlt
mov
fucomi
jecxz
fists
xchg
xchg
popf
jne
dec
mov
fcoms
mov
ret
push
js
mov
sub
or
sarb
xor
jg
push
ds
imul
lahf
ret
adcl
pop
xchg
std
or
sub
scas
add
popf
inc
lock
xchg
xchg
les
xor
adc
adc
fsubl
movsl
jp
xorb
sub
stc
mov
js
and
xor
jnp
mov
jae
roll
xchg
jo
iret
xorb
test
jae
js
sub
sbb
xor
fists
out
iret
add
sbb
adc
push
jnp
push
jg
in
push
or
pop
mov
push
cmp
mov
sub
xor
jmp
ja
xchg
out
jo
repz
and
cmp
xchg
ds
adc
xchg
ds
mov
insb
sub
xchg
xchg
shl
icebp
push
mov
out
add
pop
pop
fiaddl
stos
les
xchg
in
movsb
repz
jmp
or
cmpsl
sub
xlat
mov
cmp
jbe
push
mov
fwait
inc
push
mov
push
mov
dec
sub
movsb
sbb
mov
mov
dec
cld
mulb
adc
mov
arpl
pop
cmp
test
fnsave
addb
inc
sbb
dec
sbb
jno
and
xor
into
xchg
subl
dec
imul
jae
das
add
nop
push
test
jbe
mov
clc
insl
imul
sbb
into
enter
sbb
cli
sub
leave
add
outsb
ja
xorb
xor
out
mov
jmp
dec
imul
inc
popa
push
xor
lock
je
mov
push
jle
out
mov
xor
pop
jo
mov
mov
and
popf
icebp
iret
rdtsc
sub
jg
iret
jecxz
lcall
add
mov
outsl
aas
hlt
lds
cwtl
addl
aad
and
cmpsl
cmc
cmp
mov
jg
insl
dec
inc
push
or
sub
pushf
xor
cmp
mov
ficoml
sbb
jae
jle
jae
sar
mov
or
mov
cmp
adc
insb
lds
cmp
mov
sub
stc
rclb
push
iret
push
and
pop
mov
out
fnstsw
pusha
or
divb
into
mov
xor
xor
out
sbb
sub
sub
loopne
mov
push
lret
mov
cwtl
pop
andl
cmpl
mov
sub
sbb
sarl
adc
out
mov
mov
ret
add
jbe
xorl
in
mov
jno
pushf
mov
std
xchg
jle
notb
cli
pop
xchg
cmpsl
lds
adc
sub
daa
push
push
cmpb
fwait
jbe
test
dec
pop
xchg
add
loop
cwtl
mov
add
pop
sbbb
outsb
push
mov
adc
shrl
aam
push
in
dec
div
jne
cmp
jmp
in
mov
jo
pop
test
xorb
pusha
into
into
imul
leave
jae
std
stos
outsl
lock
sub
inc
cmpsl
pop
hlt
cmc
stos
and
jp
test
sbb
push
xchg
or
jns
hlt
loop
add
mov
mov
test
fisttpll
imul
and
xor
xlat
lcall
jns
jns
mov
in
sti
icebp
popf
fcoms
xor
xor
mov
lret
add
jne
in
inc
jp
xorb
shll
cli
sbb
rclb
pusha
aas
and
push
or
loopne
xor
xor
cmp
sbb
xchg
movsb
pop
add
mov
repz
and
aad
xchg
in
int3
or
dec
inc
sub
xchg
je
sub
push
aas
adc
mov
mov
pop
shl
xor
ss
mov
mov
sub
sub
sbb
mov
jmp
push
adc
andl
rcrb
jecxz
aaa
rorl
xchg
int3
jae
ret
es
mov
pop
fisubl
dec
repnz
cli
mov
xchg
hlt
scas
pushl
test
cs
shll
push
jae
mov
mov
aad
lea
mov
rolb
lods
cwtl
sbb
imul
sti
push
imul
push
clc
mov
push
push
call
xor
add
icebp
leave
xchg
sti
loopne
rolb
sub
or
jno
cmp
orb
adc
sbb
les
xlat
cmc
outsl
ja
stos
sti
stc
dec
rolb
cmp
inc
lret
push
lods
repnz
sub
outsb
dec
aaa
add
cmp
jg
xlat
cltd
xor
nop
test
sbb
dec
into
cltd
xor
gs
lea
lock
stos
aaa
imul
mov
mov
cmp
sarb
pop
adc
pop
cmpsb
lcall
icebp
mov
push
dec
xchg
sub
cmp
arpl
sub
cmp
mov
fimuls
popa
mov
dec
lock
sub
iret
xchg
cld
repnz
mov
mov
and
push
jecxz
and
jne
add
lret
xor
rol
rcll
sub
cmp
sti
nop
lods
popa
aad
insb
ja,pn
lahf
ss
push
mov
jne
scas
bound
adc
scas
mov
push
pop
cmpsb
add
cltd
push
dec
and
hlt
jle
adc
sub
fisttpl
je
rcll
sbb
ds
data16
jmp
iret
push
jl
testl
cmpsl
repnz
aaa
arpl
int
and
fadds
fucom
and
les
cmp
sahf
xlat
mov
lds
imul
inc
push
and
and
cmp
jl
jae
inc
mov
lret
jge
hlt
insb
mov
xorb
xor
cmpl
cwtl
xchg
push
out
sti
addr16
jne
cmp
pushf
fldt
dec
pop
aaa
mov
js
out
outsl
sub
repz
mov
je
inc
jl
jle
adc
mov
fisubrl
inc
lcall
push
les
xchg
es
ljmp
stos
lods
sti
jecxz
jbe
imul
loop
push
xor
fidivrl
add
xbegin
mov
wrmsr
test
adc
cmp
pushf
jg
adc
mov
arpl
loop
test
mov
lods
call
xchg
lret
xchg
mov
pop
lret
pop
popf
xchg
sub
mov
push
pop
mov
cli
testb
cli
xlat
mov
ror
mov
mov
imul
pop
xor
xor
movsb
xor
jnp
call
leave
add
xlat
pop
dec
in
sub
aam
cli
mov
cmp
outsb
insb
push
adc
pop
add
jp
test
inc
movsl
jnp
test
pop
jg
cmpsl
push
dec
or
stos
iret
push
push
sahf
and
sbb
pop
sub
out
cli
mov
inc
mov
data16
or
cs
jo
lret
inc
imul
jo
jno
or
inc
in
xchg
sti
pop
xor
imul
pop
jbe
sbb
and
idiv
ja
push
sub
xchg
sub
cs
outsb
sarl
jle
std
sub
js
push
daa
push
in
or
jo
xor
adc
les
pop
fwait
in
xchg
pop
ss
pop
mov
imul
std
hlt
dec
cltd
xchg
push
ficomps
add
and
fstps
jns
inc
sti
enter
lret
cmp
cmp
jmp
ss
lret
js
jecxz
and
or
jnp
push
or
in
pop
push
xchg
leave
lahf
shr
subl
or
push
pop
jb
inc
jmp
dec
scas
cmpsl
and
std
push
xchg
push
push
shll
xor
les
imul
adc
push
test
fprem1
divb
push
bound
lcall
jb
sbb
out
add
icebp
movsl
push
sar
imul
and
outsb
sub
or
adc
dec
jmp
data16
or
xor
repz
dec
out
gs
dec
dec
std
cvtpi2ps
fwait
add
mov
or
pop
lods
je
mov
clc
icebp
call
leave
daa
mov
mov
push
lahf
sub
adc
adc
sub
fcom
mov
jge
sub
inc
and
lret
lock
dec
sbb
xchg
add
mov
xor
cmpl
dec
xor
push
insl
js
and
sub
ljmp
gs
cmp
dec
scas
test
out
mov
sti
pop
enter
mov
adc
lcall
test
leave
xchg
in
xchg
adc
dec
jp
mov
sub
jmp
mull
std
push
imul
inc
lahf
push
cwtl
lods
mov
mov
push
fs
iret
inc
dec
mov
mov
cltd
test
loope
add
mov
imul
out
negb
pop
add
mov
js
popa
cltd
ja
cmp
pusha
mov
iret
adc
rcrl
dec
dec
fcmovbe
cmp
and
jae
and
testb
hlt
cmp
lock
xchg
push
jg
cmp
inc
xchg
addb
adc
sarb
mov
xchg
stos
test
adc
jae
push
popa
xchg
mov
jne
pop
clc
js
mov
mov
mov
and
bnd
mov
adc
mov
adc
out
cmp
and
push
push
stos
jge
mov
sub
shlb
add
and
mov
arpl
dec
pop
or
ja
ja
sarl
roll
xchg
sbb
add
ljmp
add
pusha
cmpsl
sbb
int
ret
fmul
popa
out
or
es
push
scas
cmpsl
dec
jp
enter
out
jnp
lea
movsb
push
shl
imul
push
cltd
sub
mov
rcrl
pop
xor
jecxz
sub
pop
cmp
adc
out
jbe
in
ds
push
inc
leave
mov
push
jno
adc
in
add
cltd
daa
inc
mov
xchg
ljmp
and
xchg
push
arpl
push
arpl
mov
jmp
mov
push
mov
sbb
out
inc
and
jecxz
shlb
pop
cmp
sub
sbb
div
mov
subl
fidivl
outsl
dec
mov
add
std
ljmp
test
inc
inc
enter
fbstp
pop
jmp
stos
arpl
dec
mov
adc
or
or
pop
pop
shll
mov
popf
push
lock
cmc
rorb
popa
outsb
in
inc
mov
xchg
shrl
xchg
std
rorb
push
jnp
jno
and
sbb
cmpsb
into
dec
lret
cmp
jno
lret
daa
and
aam
inc
add
and
mov
das
cmpb
and
fstl
inc
shll
cwtl
movb
inc
mov
rolb
and
pop
popa
popa
push
popf
add
inc
push
in
popa
incb
rcrb
mov
or
test
scas
xor
in
imul
iret
rolb
and
mov
xchg
mov
stos
cmp
into
adc
out
jo
inc
fbld
imull
jno
sti
movsb
mov
hlt
xor
imul
push
fisubs
repz
es
jb
dec
sbb
dec
test
and
mov
jae
test
into
xchg
pop
cmp
dec
int
std
stc
rcrb
inc
fmul
jb
loope
mov
ja
es
sub
sbb
cmp
cmp
dec
aas
lods
outsl
inc
popa
mov
sbb
icebp
add
and
add
testl
cmpb
mov
insb
test
add
xor
and
stos
jb
std
arpl
xchg
into
int3
adc
jnp
in
xor
out
mov
fisubrs
fs
mov
xor
sbb
xchg
push
movsb
int3
mov
movsb
mov
cmpsb
gs
mov
out
push
popf
xor
popf
push
das
pop
adc
push
aam
mov
or
mov
add
dec
outsb
fisubrl
js
push
sar
repnz
aaa
xchg
xchg
shll
dec
jg
dec
ljmp
cmc
cmpl
int3
in
sti
or
icebp
mov
push
js
mov
xchg
mov
fistpll
pop
popa
scas
cmpb
jnp
mov
inc
push
mov
test
es
aam
out
rol
stos
add
dec
lock
inc
add
repnz
mov
cld
loop
shll
nop
fidivl
call
je
inc
add
sahf
test
xor
test
mov
pop
push
xor
xor
fstpt
jno
dec
aad
aaa
xor
adc
daa
out
ljmp
push
mov
aam
pop
cmp
sbb
dec
ret
cmp
jp
cltd
and
mov
jge
jns
inc
or
xor
mov
mov
and
dec
mov
cmpsb
addr16
je
mov
jb
in
popf
inc
push
push
push
mov
lcall
jmp
cmp
notb
sarb
sub
pop
iret
mov
jmp
sbb
push
jmp
aaa
pop
aas
jecxz
into
add
mov
fmuls
or
cmpsb
cmp
mov
adcl
adc
xchg
xor
xchg
cmp
lahf
in
stos
inc
ljmp
pop
mov
daa
xchg
or
jl
mov
and
pop
pop
scas
xchg
addb
xchg
inc
ss
add
and
push
jns
divb
movsl
cmpsb
gs
scas
stc
fnstenv
ss
int3
scas
mov
sub
pushf
leave
data16
imul
push
sub
andnps
mov
jnp
mov
jp,pt
mov
stos
push
repz
or
cmpsl
xorl
pop
jle
jge
hlt
xor
lea
mov
pop
adc
push
xlat
mov
test
dec
in
subl
insl
out
inc
pop
push
js
icebp
pop
lea
lea
pop
out
or
adcb
pop
pushf
outsb
pop
ljmp
lea
outsb
add
fdivrs
jno
mov
das
sub
fisubrs
and
add
inc
popa
shrl
pop
pop
dec
stos
jmp
and
xchg
dec
push
std
movsb
pusha
sub
pushf
lcall
inc
popf
dec
xchg
mov
loopne
xor
pusha
stc
xchg
mov
mov
cmp
dec
adc
xchg
mov
inc
mov
ja
dec
fcompl
addl
dec
push
subl
pop
jo
popa
pop
add
mov
sbbb
aaa
aas
imul
mov
sti
or
pop
out
roll
add
inc
inc
adc
xorl
adc
loop
aas
pop
shlb
or
pusha
sarb
into
jno
addr16
mov
dec
arpl
ds
jle
fadds
add
enter
test
and
jo
clc
cmp
push
rolb
mov
jecxz
sub
mov
fdivrs
in
xchg
pop
inc
cmpsb
cmp
inc
into
rolb
ret
push
jle
lahf
lods
mov
nop
mov
shrl
xor
push
or
cmp
icebp
lods
iret
pop
fiaddl
push
or
iret
cwtl
lret
jecxz
in
sahf
std
and
out
shll
cmp
jp
fs
ret
xor
mov
jb
in
int
test
aad
imul
or
lods
cld
mov
js
shl
stos
push
inc
jo
scas
fimull
and
pusha
or
hlt
es
subb
mov
push
popf
adc
out
sub
push
sub
inc
in
mov
dec
dec
out
dec
ljmp
and
mov
xlat
pop
jne
stos
int
sbb
mov
ss
nop
stos
jmp
jns
les
mov
bound
push
push
sti
loope
imull
mov
ret
xor
pop
cmc
sbb
shufps
adc
enter
aam
dec
testl
inc
test
hlt
add
mov
icebp
rcrl
adc
mov
cld
data16
cli
push
add
mov
adc
adc
sbb
inc
in
ljmp
jne
mov
and
cmp
orl
call
xchg
popf
pop
icebp
cmp
xor
and
sub
xchg
inc
movsl
dec
in
inc
and
fs
shrb
lods
leave
aas
inc
aas
xor
push
jmp
jle
jmp
les
lods
and
adc
and
lea
js
adc
xlat
popf
cmp
in
fs
das
add
insl
push
out
push
adc
sub
xlat
and
or
lock
mov
test
dec
jmp
fisubrs
stc
sbb
data16
pop
jo
jmp
sbb
addr16
adc
cmp
scas
fnstcw
cs
enter
xchg
xchg
into
pop
xchg
inc
xor
insb
dec
pop
push
fcoms
daa
jge
inc
xchg
cmp
test
xchg
mov
test
jg
call
out
loop
dec
data16
pop
mov
add
mov
mov
push
xor
mov
out
jge
cmc
pop
dec
cmp
push
fdivs
fldcw
inc
xchg
add
xor
in
xchg
arpl
xchg
cli
and
ret
loop
push
mov
pushf
cmp
cli
int
js
jecxz
pusha
insb
pop
sub
cmp
and
imul
ds
icebp
popa
sbb
jp
loopne
cmp
mov
xor
add
adc
pushf
aaa
push
aam
sbb
inc
and
adc
jnp
cmpsl
lods
loope
push
decl
das
xchg
xor
lret
or
mov
cld
jb
out
dec
and
pop
inc
cli
and
or
mov
mov
int
js
inc
adc
jnp
sbb
add
out
push
mov
imul
pusha
xchg
ret
sub
mov
fdivrs
sbb
or
test
sti
pop
jb
rcll
and
out
pop
xchg
in
ret
xchg
mov
sarb
ds
push
push
cwtl
ret
clc
sarb
mov
push
pop
les
movb
das
rorb
pop
cmp
fdivr
mov
cmpsb
in
dec
mov
repnz
fwait
in
xor
inc
pop
mov
push
clc
jl
les
xchg
adc
jns
or
scas
loope
inc
cmc
andb
into
cmp
sahf
imul
fildl
push
mov
xlat
pop
add
es
in
mov
or
adc
and
push
sub
clc
test
or
mov
and
mov
or
inc
inc
xor
xor
sbb
or
adc
imul
xorb
leave
or
push
mov
inc
les
stc
sub
mov
mov
jg
cmpsb
push
fmull
fs
mov
or
mov
jp
andb
jo
scas
clc
jle
sti
mov
pop
stos
repz
sub
mov
pop
pop
into
call
pop
idiv
adc
outsl
clc
divb
or
mov
call
inc
mov
out
mov
xor
cli
adc
mov
call
daa
mov
mov
xchg
std
pop
jo
clc
adc
push
lock
xchg
imul
cmp
cmpsb
jno
scas
ds
pop
cmp
adc
aaa
das
les
loope
push
popa
int3
gs
loope
pause
jmp
inc
dec
int3
mov
icebp
popa
out
dec
dec
mov
sub
out
fnstsw
inc
add
sarb
or
sub
cwtl
out
call
lods
cmpsb
mov
pop
ss
adc
push
cmpb
fwait
mov
cmp
mov
pop
sbb
loope
divb
mov
ret
rorl
pop
movsb
sub
xchg
cmp
aam
push
inc
cmp
pop
cs
pop
inc
outsl
add
jno
cmp
jl
jne
imulb
into
shrl
sti
outsb
pop
jmp
outsl
add
cmp
pop
cmpsb
sti
out
xchg
popa
push
xchg
cld
jnp
ljmp
jbe
into
in
mov
pop
cmp
add
fmul
test
push
pop
sbb
test
repnz
outsb
ljmp
lret
xchg
jbe
test
icebp
mov
test
or
inc
fbstp
loop
mov
lods
sub
daa
roll
cltd
jle
lret
xchg
mov
pop
add
xchg
nop
iret
sub
xor
repz
sub
fisttpl
fdivl
ljmp
imul
xlat
jae
and
xor
xchg
add
mov
lds
xchg
loop
adc
push
mov
sbb
push
lahf
push
jno
or
adc
inc
dec
cs
pop
xchg
sub
sbb
push
cmp
dec
lods
inc
cmp
add
clc
in
jae
sbb
xor
out
iret
pop
jne
fmuls
enter
adc
jecxz
movsl
and
loope
jp
cmpsl
int
std
repz
arpl
pop
dec
lahf
jne
rorl
mov
xchg
in
out
adc
cmp
add
mov
fwait
mov
push
or
cmpsl
xor
ret
adc
xchg
xchg
dec
jno
dec
fwait
rclb
out
shrb
dec
jbe
out
out
ret
inc
outsb
sub
cltd
push
popl
sarl
sub
pop
imul
in
or
jb
lods
dec
jmp
xchg
shll
testl
movsb
xor
cmp
mov
lcall
mov
stos
xchg
repz
cli
xchg
mov
loope
bnd
mov
into
mov
jo
mov
push
dec
hlt
sahf
sbb
in
pop
out
cmpsl
dec
adc
sbb
inc
out
fiaddl
push
ret
jg
outsb
mov
dec
sbb
sbb
xlat
xchg
movsl
adc
mov
scas
and
andb
mov
push
stos
xchg
push
ljmp
js
outsl
cwtl
jl
in
pushf
rcrl
lahf
jle
enter
push
out
xorl
ret
lret
add
int3
mov
cmp
fs
mov
sub
pop
mov
jae
movsl
mov
stc
mov
dec
aad
mov
test
in
push
xor
cli
iret
or
mov
push
pop
movsl
or
sbb
cltd
xorl
das
lods
mov
ds
cmp
xor
adc
push
imul
hlt
ljmp
dec
or
mov
bound
mov
sahf
mov
inc
arpl
add
jg
push
outsl
push
stos
mov
jno
ret
jbe
aad
jle
iret
and
pushf
in
jns
cmpsb
cs
push
xchg
mov
or
mov
ret
in
outsl
negl
mov
push
sub
out
aam
adc
lods
stc
cmp
xor
xchg
ss
ret
div
jae
hlt
push
lcall
mov
lds
imul
xchg
mov
push
sub
adc
add
cmc
into
mov
sub
out
xorl
out
int
push
inc
adc
inc
and
inc
cmc
jno
xchg
dec
mov
cwtl
cmp
gs
fistl
out
mov
jne
iret
jg
inc
xor
jo
inc
xchg
xchg
nop
ljmp
mov
mov
xor
push
pop
lds
jecxz
cmp
in
push
data16
lret
dec
or
shrb
dec
lods
sarb
fstp
mov
movsb
fisubrs
mov
push
jo
lahf
rolb
xchg
mov
mov
jo
repz
jmp
pop
add
pop
push
sub
insb
outsl
jbe
mov
inc
jp
add
bswap
adc
pusha
dec
push
add
xor
into
aas
mov
mov
cmc
insl
lret
lret
xchg
inc
pop
lcall
xchg
inc
dec
iret
jae
data16
insb
cld
je
mov
je
scas
arpl
sbb
sub
je
subl
xchg
mov
je
cmp
or
pushl
sub
or
cli
xor
mov
jo
mov
xor
sub
insl
lods
leave
cmp
test
popa
add
push
fsubs
or
jbe
addb
in
adc
int3
sub
mov
pop
mov
lret
adc
jle
xchg
insb
jge
mov
dec
sub
mov
mov
mov
cmc
sbb
pop
dec
xchg
sti
inc
mov
scas
stc
cmp
shrb
ss
jl
and
int3
xchg
aam
rolb
ffreep
stos
lods
lret
and
or
jbe
cli
add
leave
out
inc
jle
popa
push
pop
jle
mov
out
lret
and
pop
lods
add
xor
fucomp
mov
sbb
movl
sbb
mov
jmp
mov
mov
sub
arpl
sub
adc
or
insl
push
lret
rclb
sub
push
out
xchg
cmp
test
lretw
pop
push
aam
pop
push
pop
mov
push
test
icebp
cmc
or
addr16
imul
push
lret
push
inc
sarb
lcall
add
shlb
pop
inc
mov
xor
std
sub
add
cmpsl
sti
out
jg
mov
xchg
mov
clc
xchg
mov
jecxz
xchg
push
addr16
mov
pop
jo
neg
pushf
stos
push
lcall
lcall
test
scas
or
repz
pushf
sbbb
sbb
dec
dec
jp
mov
daa
ja
and
stos
jb
ffreep
aaa
ljmp
or
xchg
test
jae
fcomi
xchg
mov
sub
pop
addr16
sti
negb
fbld
hlt
sarb
flds
jne
mov
pop
add
int
scas
loope
jb
jbe
lret
movsl
xlat
lock
call
mov
mov
inc
sbb
xor
repz
aas
inc
jecxz
cs
out
pop
mov
xchg
mov
and
dec
cld
mov
insb
ffree
sub
mov
rcll
call
fistl
mov
fldenv
adc
mov
jge
in
test
pop
xchg
jo
adc
add
ret
hlt
ret
cli
repnz
jge
mov
dec
cmp
sbb
ljmp
mov
pop
jno
dec
pushl
add
push
leave
sub
movsb
out
jne
int3
or
cwtl
sbb
dec
jge
or
loopne
int
adc
pop
dec
and
ja
pop
inc
jno
mov
in
in
jae
pushf
xchg
lret
inc
fcompl
fisubs
cmp
dec
fmulp
add
jecxz
pushf
sub
ficompl
xchg
icebp
adc
clc
jp
mov
xor
xor
mov
les
fisubl
mov
mov
test
aaa
inc
pop
adc
cmp
mov
mov
mov
push
leavew
mov
cmp
in
icebp
lods
out
mov
mov
stos
mov
hlt
mov
ss
mov
pushf
cmp
xchg
rcl
sbb
out
test
cmp
mov
shll
bound
shrb
into
dec
pop
xchg
xlat
mov
xchg
popa
and
xor
mov
jnp
lea
mov
mov
mov
iret
and
cld
pop
mov
xchg
mov
cmp
test
notl
push
or
inc
cmpsb
lods
mov
clc
mov
enter
cmp
sbb
push
mov
mov
call
enter
int3
lods
jne
mov
push
int3
dec
fstpl
adc
je
sbb
orb
or
push
test
aam
ror
das
add
adc
testb
jns
ret
inc
aas
pop
jno
or
loope
cmp
cmp
cmp
mov
ss
jns
int3
subl
adc
scas
je
repnz
sbb
mov
mov
mov
cli
dec
movsb
inc
int
lea
jg
and
outsb
xchg
xchg
pop
add
pop
jmp
inc
ss
add
sub
ror
mov
xlat
fwait
xchg
mov
push
shll
imul
push
xor
mov
adc
mov
faddl
sub
mov
fsubr
pop
hlt
xchg
mov
sbb
or
add
imul
daa
mov
stos
pop
add
xchg
or
in
div
fs
pop
stos
mov
dec
lods
cs
jne
push
aad
cmp
int
and
sub
xchg
cwtl
xrelease
push
adc
fsubrs
jp
xchg
cwtl
jmp
imull
inc
push
dec
pop
or
lret
cli
mov
inc
ljmp
mov
and
aaa
fisubl
pop
test
jae
ja
pop
inc
adc
test
cmp
push
xchg
mov
dec
cwtl
mov
xorl
xor
dec
dec
test
xchg
loope
xchg
lods
pop
jo
mov
inc
and
jo
xchg
and
in
mov
adc
ja
push
hlt
dec
xchg
imul
jb
cwtl
insl
ja
jb
stc
adc
outsb
test
jmp
push
fistl
mov
push
loopne
or
outsl
orb
cmp
out
int3
loop
dec
mov
movsl
fisubrs
sarb
sub
mov
mov
dec
hlt
jp
addr16
mov
icebp
xor
xchg
xor
cmc
mov
lods
add
aaa
popf
rolb
xchg
and
stos
call
inc
addr16
stos
lret
cmp
and
inc
dec
fldcw
cltd
mov
into
and
repz
out
adc
test
cmp
add
mov
sbb
xor
aad
xor
mov
bound
testl
cmp
sub
fmulp
push
arpl
dec
int3
js
arpl
ret
mov
test
dec
cli
pop
in
lock
in
push
sbb
mov
fmull
movsl
inc
sub
pop
push
call
bound
insb
test
mov
push
arpl
xor
mov
push
rclb
push
mov
andl
pop
push
xor
push
adc
xchg
xchg
inc
mov
jns
fiadds
jmp
inc
je
cwtl
inc
push
xchg
xlat
mov
imul
mov
icebp
and
pop
adc
mov
fsubrp
push
and
scas
mov
lock
jb
cld
cmp
rorl
cmp
lods
pop
xor
outsl
push
pop
or
fwait
mov
jns
xorl
scas
jmp
pop
loopne
push
adc
ja
push
adc
in
lahf
adc
sbb
clc
jmp
pop
je
mov
mov
imul
fs
pop
mov
std
out
es
les
loope
stos
aaa
mov
outsl
out
pop
and
repz
jne
xchg
mov
mov
jecxz
shlb
fimuls
sub
add
ficoms
lea
subb
sti
scas
sahf
cmp
xor
add
mov
movsl
push
aam
or
mov
popa
into
xchg
ds
xchg
cmpsb
movsb
loop
mov
notb
mov
out
outsb
xor
hlt
mov
pop
cmpsl
jle
jmp
pusha
or
dec
aam
shlb
cmp
ret
orl
xorl
xchg
inc
sbb
xor
push
pop
subl
lods
mov
test
into
stos
inc
in
xchg
icebp
lds
pop
data16
stos
lods
stc
mov
dec
arpl
ret
sbb
nop
dec
dec
or
lock
jbe
pop
adc
adc
pop
inc
mov
mov
add
out
cmp
or
xor
pop
xchg
adc
popf
fs
fs
adc
mov
arpl
aad
outsl
jle
ret
sub
pop
dec
push
and
adc
addb
cwtl
in
push
icebp
lods
pusha
daa
cmp
push
adc
and
movsb
mov
fsincos
mov
inc
fbld
xchg
mov
sar
das
loop
xor
adc
adc
je
push
mov
test
dec
imul
xlat
pop
scas
cmpsl
lea
inc
xlat
mov
mov
cmpsl
cmpsb
sti
mov
jecxz
cmp
loope
repnz
mov
fnstcw
jle
pop
inc
fwait
insb
pop
mov
xor
test
sbbb
mov
lahf
mov
jae
jl
and
aas
sub
fucomi
in
and
inc
adc
ljmp
addr16
jo
insb
cmp
rolb
data16
sub
push
daa
and
jo
pop
daa
jae
movsl
aam
or
ja
mov
push
ljmp
jecxz
lock
test
fst
sahf
imulb
cltd
popa
mov
xchg
in
fnstcw
xor
and
cmovl
arpl
sub
cmpsl
cmp
scas
popa
rcl
dec
insl
inc
orl
push
push
sbb
add
das
sbb
mov
or
xor
mov
and
push
mov
or
xchg
lods
int3
xchg
dec
inc
adc
pop
sahf
cmp
adc
add
inc
sub
cmp
mov
iret
push
add
leave
outsl
pusha
sbb
rol
fsub
pop
cmc
jbe
lea
or
int3
mov
js
scas
mov
mov
pop
ja
pop
fbstp
scas
aaa
pop
cmp
cmpsl
cld
out
cmpsb
sbb
lret
jne
jge
cs
sbbb
or
rcrb
lods
jae
and
leave
mov
inc
cmp
shll
mov
std
cld
jnp
xor
sbb
and
out
pushf
push
xor
ljmp
or
dec
mov
cmp
mov
sbb
mov
pop
loopne
rcr
jmp
mov
dec
add
test
gs
addb
lock
mov
or
xchg
mov
xchg
ret
cmpsb
mov
jno
mov
insl
sub
mulb
loopne
ficoml
or
in
push
arpl
adc
jle
sub
xchg
inc
test
imul
test
add
dec
pop
test
add
push
leave
xchg
add
ficomps
and
sub
testb
dec
xchg
pushw
scas
fldcw
aam
and
cmp
and
ljmp
adc
outsl
dec
push
mov
mov
adc
push
push
push
aad
mov
xchg
pop
add
fimull
push
inc
jge
jge
sbb
test
imulb
push
cltd
cmp
mov
add
les
pop
loop
fildl
cmpb
fnstcw
call
fistpll
lcall
xor
dec
jnp
imul
lods
pop
leave
or
mov
add
push
sub
pop
fsubl
jb
jl
adc
xor
outsb
enter
inc
pop
aas
popf
scas
jo
imul
in
pop
jmp
lea
add
push
push
gs
adc
mov
into
test
lods
jp
jmp
xor
cmp
inc
xchg
cltd
lret
lret
cld
outsl
push
into
cld
xchg
mov
inc
push
jnp
inc
adc
in
fldenv
in
add
inc
jp
cmovge
repnz
push
cmp
cmp
push
pop
scas
xchg
enter
dec
int3
rolb
scas
mov
push
mov
or
jp
std
dec
xor
lcall
cmp
mov
or
jecxz
mov
loop
xchg
dec
dec
loope
jnp
and
and
rorb
jl
shl
pop
mov
aas
pop
icebp
dec
sbb
jne
mov
push
mov
les
sbb
fldt
cmp
xchg
mov
mov
data16
cs
stos
mov
inc
in
pop
repnz
and
add
and
fprem1
xlat
addb
lock
hlt
pop
add
leave
xor
sbb
icebp
pop
sbb
or
xchg
jne
cs
lock
out
sub
int
out
cmp
pop
sub
mov
add
mov
insb
sbb
int
jbe
or
sub
pop
lcall
pop
outsb
mov
repz
adc
lret
push
jb
pop
mov
jmp
fcomi
mov
leave
mov
shll
cmpsb
lock
adc
jb
popf
adc
in
add
test
or
imul
imul
mov
inc
jo
xchg
gs
push
sbb
clc
dec
cmp
jecxz
xchg
sbb
loop
sbb
test
mov
lret
xlat
pop
ret
add
pop
inc
out
or
sub
loopw
lcall
dec
sbb
mov
stos
fldt
iret
icebp
test
movsb
repnz
fwait
xor
sbb
test
sub
lahf
pop
imul
sarb
icebp
jge
jo
inc
jns
xchg
adc
iret
outsb
or
adc
inc
pop
imulb
xchg
outsb
repz
dec
lcall
leave
push
pop
ja
xchg
jg
push
jle
jl
mov
xchg
cmp
jno
les
int
add
inc
or
mov
sub
into
mov
fcmovb
jb
sbbl
bound
add
jne
inc
pusha
hlt
push
adc
adc
and
sub
mov
repz
mov
or
cmpb
fcmovb
loopne
sbb
sub
out
pop
out
or
xchg
cmp
ficoms
and
xchg
pop
loop
jns
inc
stc
or
mov
inc
andl
pushf
lret
in
loopne
mov
repnz
addr16
jno
out
popa
sbb
xchg
add
cmpsl
das
adc
jno
test
lds
sbb
dec
mov
cmp
fisubrl
or
xchg
rorb
stc
cmc
in
xchg
sbb
ljmp
test
mov
cmpsl
popa
xchg
addl
xchg
adc
psrld
inc
jmp
lcall
mov
sbb
mov
fldenv
cli
xchg
jle
mov
mov
mov
pop
pop
push
int
fadd
loop
into
dec
adc
sbb
jb
in
cmp
test
pop
inc
lahf
loope
imull
bound
andl
ficomps
shlb
pop
sbb
aas
cmp
in
pop
pusha
mov
outsb
scas
call
cmpsl
jae
mov
iret
movsb
imul
jae
adc
dec
and
add
xchg
xorw
or
inc
push
lahf
lcall
dec
cmp
mov
add
add
mov
out
fdivs
jl
enter
mov
add
mov
gs
dec
mov
cmp
in
jg
mov
add
dec
pop
orl
push
mov
jl
or
stc
mov
arpl
movsl
push
fcoml
insb
mov
rorl
jp
int3
sub
mov
xlat
stos
inc
xor
mov
mov
cmp
inc
pusha
loope
cmp
dec
hlt
xchg
movb
cmc
shll
movsb
pcmpeqw
adc
push
cmp
std
add
in
xor
cmpl
test
push
mov
fmuls
mov
aam
outsl
add
in
pop
out
ffree
sub
inc
das
mov
aam
arpl
insl
pop
add
movsb
cld
lock
mov
inc
lcall
xor
mov
and
test
stc
dec
cmp
shrl
clc
mov
mov
dec
out
sti
xchg
pop
or
or
sub
shll
inc
dec
ss
dec
lea
ss
add
jecxz
mov
addr16
mov
aam
xor
mov
jge
ss
mov
int
test
cmp
mov
and
nop
ss
fld
and
dec
xchg
int
fwait
push
jle
jno
push
insl
cs
dec
and
mov
add
arpl
sub
add
loop
xchg
popf
jnp
aaa
bnd
mov
jp
int
ret
push
xchg
mov
xor
js
in
jnp
xchg
stc
push
dec
adc
cld
sbb
add
popa
in
push
pop
mov
in
cli
lods
das
jmp
andl
mov
or
sbb
pop
xchg
jecxz
xor
xor
push
test
sub
sbb
ds
pop
dec
stc
lds
inc
bound
mov
aad
adc
and
pop
popf
mov
fsubrs
inc
push
and
loopne
sub
sahf
dec
push
andb
inc
in
mulb
or
adc
and
cmp
fs
push
cli
outsl
es
cmpsl
ret
rcll
xor
aad
xchg
or
jmp
shlb
std
sub
cmp
cmc
push
ret
jmp
in
loop
pusha
or
ret
cwtl
addr16
push
bound
cmp
out
inc
data16
pop
out
pop
mov
clc
adc
push
mov
ror
icebp
dec
popf
adc
ds
cmpsl
mov
xor
pop
mov
sub
lahf
mov
mov
aam
rorb
or
sbb
hlt
jecxz
dec
xor
fcmovnb
cmp
scas
and
mov
dec
dec
sub
xor
subl
hlt
sub
pop
outsl
pop
leave
xchg
push
pop
das
pusha
mov
or
outsl
sarl
int3
xchg
cmp
sti
push
sub
sbb
push
jo
mov
lods
ds
shll
cmpl
mov
jg
sub
mov
das
jns
ljmp
shll
push
fwait
jbe
inc
jge
ret
cltd
popf
push
pcmpeqb
repz
sar
or
mov
dec
cmp
jge
cltd
push
repz
jecxz
das
in
or
push
push
pop
std
inc
xchg
xchg
push
pop
cmp
sub
subb
cmp
push
push
je
inc
push
fistl
gs
or
cs
jecxz
add
mov
mov
shlb
add
bound
sub
in
ljmp
pop
imul
movsb
add
adc
fucomp
pop
or
lods
insb
sub
aam
sub
jge
pop
imul
pop
mov
mov
insl
sbbl
notb
bound
sbb
jno
idivb
cmp
add
adc
xchg
pusha
sbb
add
dec
popa
and
imul
sbb
daa
xchg
sahf
inc
dec
pop
dec
mov
jne
outsb
and
pop
mov
rorb
add
jnp
aad
mov
in
pop
movsb
mov
les
mov
mov
ss
jg
pinsrw
jae
cmp
sahf
sti
fldt
imul
jo
adc
xor
into
sub
daa
cmp
stc
xchg
dec
lods
repz
inc
in
push
pop
or
add
sarl
aad
addr16
aas
sti
lahf
std
mov
loopne
inc
sti
adc
int3
das
inc
jae
dec
or
push
loope
mov
push
lret
ret
clc
mov
mov
sar
adc
out
push
dec
ja
imul
push
cmp
cmp
and
mov
nop
push
sahf
scas
adc
shrb
in
mov
movsl
adcb
xchg
loopne
bound
std
lcall
jbe
adc
pop
sbb
out
adc
pop
fdivs
pop
jb
fmull
jbe
lock
sbb
movsb
push
ffree
xorl
or
pop
dec
inc
and
cmp
push
in
dec
lds
push
inc
sbb
out
ret
dec
fnstenv
cmpsl
add
and
jnp
stos
or
cmpsb
ficoms
fdiv
popa
fndisi(8087
das
movsl
and
mov
sub
inc
mov
out
xchg
xchg
loopne
leave
sbb
add
adc
in
xor
pusha
jns
sbb
aam
sbb
repz
bound
xchg
fimuls
movsl
lahf
sub
scas
and
mov
or
mov
repz
in
cmpsb
jmp
shlb
pop
cmp
add
loop
pop
mov
xchg
inc
fwait
jbe
icebp
es
xchg
imul
loope
and
pop
xchg
je
cli
push
jns
pop
cmpsb
out
je
push
push
ja
sub
inc
test
pop
testl
mov
push
push
imul
ljmp
sub
adc
mov
stos
andb
mov
add
outsl
mov
insl
mov
leave
add
psrad
sbb
cwtl
and
in
fdivl
cli
jmp
inc
and
in
in
cmp
xchg
pop
fs
jge
mov
adc
pop
xlat
cmpb
jo
add
imul
xchg
in
rdtsc
push
outsb
dec
pop
xchg
gs
sub
sti
inc
push
fiaddl
mov
test
rcll
push
sbb
fscale
dec
int
jmp
dec
mov
mov
lret
hlt
push
pop
mov
mov
adc
ret
cmp
or
xor
jl
rolb
add
cs
sub
popa
xchg
push
ret
jp
mov
pop
xlat
add
cmp
in
inc
adc
negb
xchg
add
cmp
stc
mov
mov
dec
dec
iret
xlat
pop
test
pop
sahf
aas
inc
imul
xor
xor
ljmp
push
into
sbb
xor
push
jecxz
stos
hlt
clc
popf
cmp
fwait
mov
or
in
mov
sub
cs
xchg
cltd
mov
sahf
jge
jns
jne
popf
xchg
mov
outsl
jnp
xchg
popa
jecxz
sub
push
ficoms
push
loopne
push
inc
inc
js
xor
fisttps
std
inc
ja,pt
cmp
sbb
std
mov
fsubl
stos
sub
jmp
sub
daa
or
and
popa
push
sub
loop
imul
inc
stc
out
inc
fcom
movsl
push
dec
adc
lods
dec
fmuls
and
mov
test
mov
in
jmp
and
mov
sti
jne
in
cltd
mov
sbb
in
xchg
mov
add
es
rcr
insl
jbe
mov
neg
add
push
and
or
jmp
lods
icebp
and
cmp
mov
and
cli
repnz
mov
shrl
inc
aam
dec
adc
fisubl
jnp
xchg
pop
es
rcrl
jb
adc
insb
mov
movsb
mov
outsb
sub
dec
mov
in
or
mov
rcr
dec
lret
jb
add
add
pcmpgtw
sbb
and
push
cltd
push
sbb
add
mov
ja
push
arpl
sbb
lea
mov
sbb
jecxz
jne
inc
mov
mov
nop
insb
cwtl
push
push
ficoml
cmp
jmp
je
pop
add
lods
mov
pusha
lcall
jnp
pop
ljmp
imul
or
cmp
jle
fstps
sbb
mov
sbb
rcr
sbb
jl
add
or
push
mov
fwait
ret
mov
pop
mov
imul
out
mov
xchg
int3
mov
and
cmp
add
xchg
pop
scas
hlt
cwtl
adc
xchg
lods
out
push
test
int
cmpsl
test
int3
mov
push
mov
dec
ficompl
mov
mov
bnd
out
mov
out
xorb
shr
incl
jge
pop
cmp
stos
push
sbb
xchg
inc
les
dec
mov
pop
jg
sbb
xor
cmpsb
fnstenv
push
std
icebp
scas
sbb
loop
sub
bound
nop
outsl
adc
inc
shr
imul
mov
dec
fadds
fisttps
stc
cs
call
xor
inc
imul
jns
popf
pop
fcmovne
jns
inc
and
sarb
inc
and
daa
rorl
mov
adc
sub
jge
enter
dec
leave
jg
mov
imul
add
popa
lcall
add
imul
fildl
dec
das
sub
jge
fcmove
sti
and
xchg
jb
mov
icebp
xchg
dec
inc
xlat
daa
lea
cmp
xchg
cmp
repnz
icebp
ja
xor
pop
int
mov
adc
lock
sub
push
push
iret
mov
hlt
adc
addr16
jmp
mov
mov
add
or
xor
ljmp
xor
mov
mov
cmpsb
orb
fiadds
push
les
sahf
push
inc
test
out
sub
not
ret
fists
lock
mov
push
ds
and
jg
xchg
and
repz
lret
ret
sub
mov
jmp
shrl
push
ret
or
pop
stc
lea
push
jmp
sub
loope
lods
iret
add
in
daa
cmpsb
jns
mull
xor
addb
fildl
pop
fstl
imulb
adc
jo
jle
xlat
mov
pushf
inc
dec
sti
or
cmpsl
mov
arpl
scas
xchg
cli
mov
add
xchg
leave
fwait
fwait
stc
push
add
dec
fadd
pop
sbb
aad
add
and
xor
inc
lret
lods
fisubrs
mov
mov
std
push
inc
lret
xchg
mov
mov
push
xchg
sti
stc
mov
and
or
ljmp
mov
leave
fsub
in
sub
pop
loopne
ds
lret
lock
in
adc
mov
aad
pop
push
call
cmpl
add
test
cmp
push
xchg
in
es
test
add
and
or
cmp
jnp
cwtl
je
mulb
xor
or
mov
jmp
fwait
jne
mov
outsb
dec
addl
fwait
lods
sub
mov
add
nop
or
inc
call
mov
cmp
push
cmp
and
aaa
mov
mov
add
sbb
addr16
stos
test
lcall
pushl
int
std
pop
xchg
ret
ds
iret
push
cltd
loope
imul
in
dec
das
mov
repz
dec
lahf
cltd
lcall
push
mov
call
mov
xlat
clc
fidivrl
jo
adc
adc
insl
jg
or
sbb
jmp
dec
sub
xchg
xchg
jecxz
dec
in
mov
pop
outsl
loopne
jp
mov
xchg
shll
jnp
movsl
xchg
inc
dec
test
insl
jb
lods
cmp
pop
cs
xor
scas
fldcw
sbb
int
testb
add
inc
inc
dec
mov
adc
jecxz
addr16
xchg
notb
divb
subl
mov
jmp
or
bound
cmp
adc
add
add
fmulp
shll
xchg
or
bound
or
ret
les
or
lret
into
xor
fsubs
mov
out
xchg
add
scas
jl
xor
cs
pushl
adc
xor
sar
dec
mov
adc
or
mov
nop
pop
jbe
jae
movsl
setle
or
outsl
lds
je
mov
clc
loop
mov
fsubrl
test
aam
mov
adc
loopne
mov
xchg
pop
jecxz
sub
out
push
arpl
sti
xchg
sbb
scas
fdivrl
cli
xchg
jns
xchg
cwtl
mov
adc
mov
repz
out
sbb
int3
push
xor
sahf
ljmp
testb
in
cs
in
or
lds
jno
insb
jg
test
add
and
xor
hlt
push
and
cli
sub
int
ret
gs
stos
test
jno
rclb
in
movsl
les
test
jbe
add
cltd
jns
sbb
mov
inc
cmp
dec
in
add
pop
sbb
mov
mov
pop
sbb
stos
xchg
ret
data16
add
testl
inc
xor
dec
gs
sbb
loop
cmpsb
xchg
inc
insl
sub
std
mov
and
sub
shlb
pushf
xchg
into
sbb
xor
popa
xchg
push
sub
dec
add
sub
in
inc
xchg
dec
pop
xchg
xchg
les
push
inc
mov
mov
pop
add
out
outsl
jae
int3
pop
or
popa
lahf
pop
mov
inc
pop
jecxz
test
xchg
inc
sahf
or
inc
mov
stos
xchg
push
rcll
cwtl
scas
xchg
mov
daa
ja
or
pushl
or
xchg
cmp
je
mov
shrb
cwtl
xor
pop
pusha
and
mov
arpl
push
mov
adcb
pop
inc
xchg
mov
xchg
bound
popa
gs
outsb
inc
inc
pop
les
push
leave
dec
cltd
xchg
fistpll
dec
cltd
outsb
inc
call
je
adcb
dec
call
or
ljmp
push
bnd
clc
jl
or
mov
cs
sub
and
push
int3
outsl
adc
dec
jnp
rolb
in
cs
push
inc
aaa
cmp
mov
cld
pop
stc
jmp
fmull
lahf
cmp
lea
rol
sub
std
cmp
fbstp
pop
adc
jns
and
arpl
xor
xorl
jmp
mov
or
movzbl
sti
les
sbb
inc
mov
mov
and
xor
mov
gs
aad
shl
push
pop
loope
jl
dec
mov
ficoms
ret
jbe
or
or
dec
rcll
mov
dec
sbb
mov
push
cmp
flds
je
mov
cltd
sub
xor
fs
sahf
outsb
repz
cmpsl
push
xor
out
or
in
pop
aad
mov
aas
stc
test
mov
xchg
push
jbe
lcall
mov
or
mov
sub
scas
jge
fs
fidivrs
cmp
iret
dec
push
jnp
mov
scas
clc
shrl
xor
stos
divb
jg
push
repnz
enter
sbb
sarl
sbb
pop
inc
stc
mov
and
mov
or
jl
inc
cmpsb
shrl
lock
mov
xlat
fdivs
push
sub
shr
adc
jb
mov
lods
cli
mov
scas
jbe
xchg
imul
push
test
in
sub
dec
aaa
insl
xor
clc
fiadds
pop
lret
in
and
dec
pop
lret
cmc
ficoml
ja
cmp
cli
cmc
sti
xchg
lock
icebp
std
shufps
mov
das
nop
insb
roll
loope
jle
scas
pushf
cli
xchg
inc
fiadds
fidivrs
mov
in
mov
sub
out
pop
aas
xor
dec
add
xlat
inc
or
or
cmpsb
mov
repz
mov
popa
dec
inc
xlat
fcompl
push
out
test
pusha
xchg
fsubl
pushf
mov
dec
rcll
ss
call
movsb
mov
sbb
scas
rcl
fisubl
stos
test
cmp
mov
sahf
lds
pop
adc
jl
scas
mov
pop
jo
lods
or
inc
rolb
fnstenv
lods
aaa
inc
insb
out
mov
nop
xor
bound
push
xchg
and
loopne
ja
mov
mov
fcmovnbe
mov
cmpsb
or
pushf
sub
sbb
ret
mov
mov
in
jmp
pop
push
hlt
pop
dec
or
fadd
mov
adc
sub
cvtps2pd
sub
cmpsl
push
fldl
push
adc
mov
mov
stc
dec
sub
or
xchg
push
cmp
jne
jmp
add
cmc
or
sar
pop
out
test
sahf
jecxz
pop
lret
mov
cs
sarl
fisubs
aaa
lods
repz
inc
cmp
insb
aas
aas
or
stc
std
sub
idiv
jno
lds
fsubl
jb
mov
clc
sbb
ja
mov
ljmp
xchg
jecxz
mov
xor
dec
mov
scas
popf
enter
dec
idivb
loope
cmp
movsb
out
and
or
cmp
xchg
push
or
mov
cmc
add
cmp
or
mov
pop
daa
add
lods
push
movsl
and
adc
pop
in
nop
xor
loopne
pop
arpl
lods
xchg
mov
sub
rcrb
insl
cmp
lcall
push
ds
int3
mov
stc
pop
lcall
xlat
adcl
in
mov
mov
ja
or
jbe
xchg
stc
mov
repz
pop
mov
pop
mov
mov
push
xchg
in
and
dec
inc
jb
loop
ret
dec
sub
mov
aam
std
inc
dec
or
clc
enter
mov
xor
sbb
xorb
aas
add
sbb
imul
les
inc
pop
cli
add
aaa
data16
pop
xor
andl
lods
lods
popf
je
lret
pop
mov
cmc
add
jae
jns
std
adc
int
sub
int3
mov
fidivrl
mov
repnz
out
or
sub
js
out
jbe
mov
in
ret
lock
dec
shr
ret
ja
shr
sub
cli
sti
pop
fwait
push
push
dec
mov
out
cmp
jae
or
fwait
es
pop
mov
hlt
out
xor
ljmp
lods
mov
push
fcmovb
inc
sarb
jle
xchg
loop
mov
mov
add
sbb
xor
mov
or
aaa
pop
mov
dec
push
popf
mov
pushf
out
shlb
cmp
pop
push
loopne
dec
adc
jge
pusha
das
push
adc
ret
negl
lds
jne
mov
mov
ds
es
or
mov
arpl
int3
and
dec
inc
pop
lret
push
shlb
add
jp
icebp
jle
cmp
cmpsl
sub
cmp
sti
cmp
hlt
mov
push
stos
pop
inc
push
imul
or
and
roll
adc
and
jo
repz
cld
pusha
shll
jecxz
or
das
mov
in
sbb
dec
cmp
ret
popf
push
imul
dec
ljmp
cmc
ficoms
xchg
and
imul
xchg
outsb
pop
fcmovbe
pop
fcompl
in
test
push
jge
bound
jnp
cmp
lods
add
scas
cltd
push
or
repz
mov
adc
mov
enter
mov
xchg
xor
lcall
rcrl
aad
pop
test
dec
ficomps
pop
pop
movsb
inc
add
loope
imul
nop
mov
loopne
mov
inc
sti
fs
fistpl
subb
mov
subl
cmp
unpckhps
pop
sub
sub
and
sub
and
mov
incl
push
sahf
fcmovnu
iret
ljmp
xor
pop
or
int3
mov
jne
xchg
dec
mov
int
gs
jmp
inc
shlb
push
test
inc
lods
sub
pop
push
mov
inc
repnz
jp
or
inc
xlat
js
fimuls
pop
popf
repnz
jmp
mov
addr16
sub
vmread
inc
movsl
scas
mov
fisubrl
xchg
movsl
cmc
mov
add
pop
mov
pop
sub
dec
jle
fcomps
pop
clc
xor
mov
fs
mov
cwtl
out
sbb
insl
and
loope
inc
out
shl
cmpsl
xchg
fs
iret
jp
icebp
aam
addr16
in
mov
push
rcll
fsubr
jo
jo
push
stos
add
mov
movsl
fistpll
ljmp
and
push
adc
pop
mov
in
faddl
xchg
mov
cwtl
in
clc
jmp
push
lret
mov
pusha
int
pop
lcall
xchg
test
addr16
movsb
jne
pop
imulb
mov
fnstcw
mov
adc
lahf
je
bound
xchg
je
adc
and
scas
aas
cwtl
nop
inc
sbb
lret
xor
aas
roll
fsubrl
sbbl
add
jg
into
mov
sbb
out
mov
aam
outsl
push
xchg
xchg
sub
and
mov
mov
dec
mov
cmp
nop
lret
pop
clc
ja
push
or
sub
push
adc
lret
jl
mov
int
ret
adc
or
mov
xor
inc
xor
dec
bound
in
data16
xor
sub
out
nop
inc
jmp
fldt
aaa
dec
pop
xor
dec
int
xor
pop
sahf
jae
in
mov
int
mov
cld
inc
into
mov
pop
popa
fstl
jl
hlt
dec
xchg
xchg
add
cmp
or
and
in
hlt
leave
fs
icebp
or
ljmp
ds
jl
nop
push
scas
and
and
dec
pop
sub
jo
shl
lods
sti
insl
jb
aad
fbld
jnp
es
pop
sub
mov
pop
xchg
fists
aaa
xchg
mov
je
daa
imul
nop
pop
std
cmpsl
outsb
bound
sub
ffreep
incl
xchg
and
cs
jo
jns
mov
ret
jle
out
insb
cs
int3
mov
add
jnp
dec
mov
loop
repz
xor
sahf
sbb
mov
insl
scas
std
mov
aad
sub
and
fiadds
push
flds
pop
sar
push
cmp
adc
movsb
js
sti
jo
les
bound
mov
test
inc
xchg
mov
fnstsw
ljmp
mull
and
icebp
cld
scas
jl
orb
and
pop
push
sbb
mov
mov
in
outsb
or
pop
adc
call
cmpsb
fdivrp
jnp
mov
xor
leave
movsl
jge
loope
cmp
and
adc
daa
mov
hlt
adc
mov
popf
jae
and
mov
orb
dec
movb
mov
mov
aad
mov
jnp
daa
imul
push
mov
mov
and
inc
pop
xor
or
out
push
sahf
adc
xchg
aaa
fxch
or
cltd
and
lret
inc
pop
push
out
cmpsl
cli
popa
loope
xor
adcl
popf
xchg
jmp
dec
loop
or
shufps
pushf
xor
in
jo
daa
iret
pop
loopne
ret
gs
push
dec
inc
arpl
mov
loop
pop
aas
jg
jne
inc
xchg
lret
jo
push
fsubl
pop
and
push
pushf
insb
pop
pop
add
in
iret
fcoms
outsl
shrb
xchg
imul
push
addr16
fwait
jo
nop
add
xchg
movsl
jg
hlt
mov
es
or
pop
pop
loopne
ret
shlb
test
arpl
rcr
mov
test
and
sbb
mov
pop
jg
mov
inc
bound
sbb
mov
loopne
loopne
scas
test
subb
dec
fwait
xor
hlt
dec
jmp
xlat
loope
push
decb
inc
test
clc
hlt
aad
clc
pop
insb
into
nop
sbb
outsl
cmpsl
aaa
xchg
mov
shr
sub
xor
or
dec
pop
cld
sbb
test
subl
adc
aas
pushf
adc
fisttps
pcmpgtw
or
xchg
push
push
sahf
push
pop
in
dec
mov
lahf
cmpsl
dec
scas
into
xchg
push
movsb
imul
pusha
xor
and
push
test
lret
push
inc
pop
aad
inc
pop
rcll
lret
pop
leave
dec
outsl
sarl
int
shll
jb
ret
ja
push
xor
xchg
pop
shrb
mov
call
sahf
cmp
sub
insl
notl
out
popf
lret
xchg
pop
ret
and
fs
movsl
inc
mov
sbb
inc
inc
scas
ljmp
add
fcoml
jb
and
cmp
dec
scas
inc
ret
mov
fisttps
jmp
pushf
popf
jge
loopne
jle
mov
lea
or
cmp
inc
fisubrs
fsubr
mov
fcompl
push
or
mov
jbe
jp
pop
or
xchg
mov
daa
ja
cs
sbb
cmp
pop
add
and
adc
fdivrs
rcrb
je
push
fistps
enter
int
adc
loopne
out
or
aam
xchg
fwait
js
leave
cwtl
sub
mov
scas
push
sub
cli
or
in
xor
or
mov
add
and
movlps
ja
sahf
fidivrs
cmpsb
xchg
sbb
ret
fistpl
and
popa
mov
and
dec
push
call
pop
mov
stc
addl
out
in
in
jo
ret
xchg
jbe
mov
pop
pop
int
cmovle
xor
notl
mov
outsl
cmc
inc
mov
jg
inc
and
mov
test
mov
adc
adc
mov
cmp
rolb
push
sub
lods
stc
retw
orb
jge
loop
fwait
jmp
popl
out
out
fs
cmp
outsl
mov
sti
lea
daa
dec
add
sarl
out
mov
out
in
jae
and
or
loopne
dec
and
lahf
fs
ret
lret
xchg
out
push
test
adc
ret
or
jbe
nop
lock
ljmp
mov
hlt
scas
mov
popf
ja
movb
icebp
fcmovnb
repnz
xor
loopne
xor
mov
ds
ljmp
fildll
mov
or
popa
or
jecxz
push
xor
enter
xlat
and
in
add
xchg
pop
into
lret
inc
sbb
incb
shr
and
inc
mov
push
rcrb
mov
fwait
fwait
sbb
mov
cmp
mov
cmp
in
inc
mov
push
movsb
jg
mov
movsl
aas
push
add
cld
test
icebp
lock
mov
sbb
cmp
jae
popf
stc
jne
fldt
fsubl
negb
std
lods
mov
pushf
sub
icebp
in
inc
sub
sar
xchg
xor
fucomi
add
mov
jl
xor
adc
sbb
mov
pop
mov
movsb
dec
test
mov
push
mov
jmp
sbb
fisttpll
xlat
ds
popa
dec
cmp
or
and
out
cmc
push
arpl
fidivrl
aam
adc
out
icebp
out
jb
and
flds
sub
xor
and
inc
sub
jo
mov
scas
mov
jl
push
stos
andl
jecxz
rcll
test
arpl
xsaves
outsb
mov
inc
divb
cmp
pop
ja
dec
lahf
repnz
cmp
add
sub
mov
pop
fiadds
pop
xor
ljmp
std
aam
jae
sbb
out
pusha
cmp
dec
cltd
shrb
shrb
cmpsb
cmpb
mov
push
sbb
xchg
insl
adc
xor
mov
cmp
outsb
push
mov
insl
outsb
adc
roll
icebp
dec
out
cmpsl
cli
jo
inc
lahf
gs
ret
mov
push
mov
cwtl
pushf
popa
hlt
mov
xchg
and
add
xorl
and
cmp
xor
cmp
scas
fimull
inc
mov
or
mov
lea
push
jb
addr16
add
mov
xchg
insl
cld
cld
les
test
leave
mov
scas
adc
mov
inc
and
adc
push
jb
not
test
pop
or
xchg
je
sar
inc
and
sbb
cmp
jle
dec
inc
inc
loop
cs
mov
mov
mov
pusha
dec
mov
jno
popf
lcall
jb
shll
fnsave
mov
mov
lods
xchg
adc
enter
les
or
dec
mov
aam
add
adcb
fucomi
cld
sub
outsb
cmpsb
xchg
adc
sahf
movb
mov
rol
gs
inc
cmp
mov
movsl
cs
lea
add
js
xchg
cmp
push
jne
cwtl
adc
cs
xor
inc
sti
lds
iret
and
pop
scas
notb
aaa
inc
cld
mov
xor
dec
lods
cmp
jmp
out
sbb
dec
movsl
xchg
inc
push
fs
pop
jns
jl
jae
loope
mov
push
rorl
dec
push
sbb
or
cmc
mov
mov
scas
fisubs
addr16
xor
mov
hlt
or
sbb
push
cmp
idiv
mov
mov
push
push
or
mov
pusha
sarb
shlb
mov
push
ret
movsb
das
movsl
das
and
xor
jo
or
xor
mov
jae
add
push
push
sbb
sahf
sub
rcr
movsb
xlat
in
addl
shll
aad
jecxz
jo
adc
in
adc
repz
dec
aas
jb
mov
jae
insb
pop
mov
cmovbe
in
sub
sub
fimuls
scas
andb
nop
pushf
stc
aam
pushl
lcall
mov
xor
cld
pusha
mov
mov
int3
icebp
stos
mov
mov
fsubs
clc
mov
xor
mov
adc
jne
jmp
inc
int3
popf
stos
scas
pop
mov
mov
in
mov
cmp
bound
fwait
lret
mov
add
cmc
sahf
mov
lcall
loope
icebp
rclb
scas
or
fs
inc
add
sti
pushf
pushf
sub
les
bound
shrb
or
ret
jp
jge
adc
sub
cmp
sarl
pop
cmp
popf
daa
xor
mov
sbb
icebp
inc
mov
js
cmpsb
xlat
sub
subl
xor
dec
jo
fsubl
jge
push
xchg
shrb
push
das
scas
or
stc
add
push
hlt
jle
ss
jmp
jne
aam
mov
sub
xchg
mov
movsb
movl
les
xlat
nop
push
xor
lea
pop
sbb
ds
popa
rorb
rol
stos
mov
xlat
dec
ljmp
xor
out
cmp
les
xor
dec
mov
lret
jne
jnp
jae
sub
idiv
decl
das
jno
enter
call
test
xor
int
sub
fisubrl
mov
sub
and
les
paddsb
rolb
cs
aad
pop
dec
push
rcr
pop
sti
sahf
mov
xor
mov
sub
mov
mov
mov
dec
pop
adc
rorb
int
lret
ret
js
inc
jge
shl
rcll
xchg
into
inc
mov
das
clc
dec
or
add
dec
xchg
and
and
faddl
add
jae
adc
inc
andl
push
mov
jecxz
push
sub
popf
jns
push
mov
xor
mov
scas
fimuls
pop
xorl
jbe
es
mov
xor
cmp
stos
idiv
daa
mov
push
add
or
je
lods
sbb
repz
je
insl
mov
sub
leave
mov
iret
xchg
sub
jo
sub
iret
jno
cmp
arpl
cmp
push
fnstenv
adc
iret
mov
add
mov
mov
jae
cmp
rol
mov
jp
sbb
outsb
popa
cld
mov
andb
fnstcw
lds
fs
rorb
jae
sbb
sbb
sbb
clc
call
cmp
nop
jne
and
fnstsw
jmp
je
mov
and
xlat
cmp
cwtl
xchg
orl
and
mov
pop
gs
jmp
icebp
ret
xchg
lods
cmp
sar
xlat
and
inc
push
fucomip
insb
xchg
pop
rorb
add
not
adc
xor
sub
inc
lret
test
or
mov
sbb
test
stos
popf
xchg
out
decl
push
subl
loopne
fwait
push
cmc
add
dec
add
pop
and
push
fistps
jb
movb
mov
ds
sti
pop
jae
add
xchg
add
es
fistpl
lock
int3
xlat
arpl
add
aas
repz
imul
xchg
dec
push
jge
mov
addr16
push
int
int
xor
mov
xor
lret
sbb
sub
dec
xor
sub
pop
cmp
movsl
push
mov
inc
fwait
xchg
sub
mov
stos
add
arpl
xor
mov
push
mov
in
outsl
fldt
mov
test
inc
jge
jne
stc
scas
sbb
in
out
imull
lcall
mov
add
xchg
push
incl
sbb
push
push
aas
stos
jg
int3
shl
push
data16
mull
pop
inc
out
mov
sub
sbb
jecxz
out
andl
lahf
not
rcl
add
data16
jno
aaa
lahf
xchg
xor
mov
out
mov
mov
sahf
ja
mov
outsb
and
mov
test
nop
xlat
mov
inc
mov
jbe
and
push
bound
mov
mov
cmp
negl
adc
sahf
sarl
sub
sub
or
cmpsl
into
add
add
cmp
pushf
inc
adc
xchg
jmp
pop
xor
and
or
mov
mov
add
imul
out
inc
jge
das
push
sbb
enter
int
out
sbb
ljmp
adc
cmp
bound
mov
shr
hlt
jmp
popf
inc
test
insb
lods
sahf
and
pusha
xor
fstp
mov
shl
fistpll
push
and
mov
push
add
jbe
add
pop
sbb
testb
js
ss
mov
dec
fwait
repz
out
and
loope
dec
mov
enter
enter
lds
fwait
jbe
add
push
stc
xchg
loop
mov
xor
adc
push
cltd
adc
aam
dec
shll
dec
inc
cmpsb
fs
inc
out
es
jmp
jmp
or
dec
out
jge
mov
xchg
xchg
cmp
xchg
sub
aas
xlat
dec
and
cmp
lahf
jge
gs
out
ss
xor
jp
repz
xor
push
fsubl
sbb
dec
sbb
lcall
push
or
imul
rorb
mov
jno
push
rcrl
mulb
jp
imul
cltd
sub
xor
pop
clc
fiadds
inc
mov
ja
pop
pop
mov
inc
and
inc
test
fs
ja
push
js
pop
and
test
popa
sub
inc
mov
mov
movsl
adc
leave
push
mov
inc
aaa
jne
or
cmp
jae
in
or
or
or
mov
sub
jmp
add
mov
div
enter
pop
std
mov
mov
add
mov
das
aad
mov
cli
lods
jcxz
jecxz
adc
dec
lcall
pushf
mov
fld
mov
pop
fwait
mov
aas
adc
fnop
cli
lcall
jmp
mov
repz
iret
pop
inc
push
push
push
adc
push
repz
js
and
enter
mov
xchg
jns
test
pop
xlat
and
mov
popa
jle
adc
mov
mov
in
pop
stos
push
adc
out
mov
xchg
aam
add
xchg
inc
add
pop
mov
cmpsl
adc
pushf
pop
mov
adc
push
push
sub
cmpsb
iret
es
out
bound
ljmp
inc
jge
push
imul
jge
mov
inc
jns
sub
sbb
mov
ss
sbb
xorl
lcall
cwtl
pop
dec
jle
jae
mov
and
jae
clc
jnp
adc
lds
shlb
mov
insl
sbb
pop
mov
sbb
sbb
ds
movsl
addr16
mov
and
dec
jns
pop
pop
add
inc
lods
cmp
inc
loope
pop
loop
mov
fwait
add
fsubl
aaa
fadd
dec
cwtl
xchg
loopne
xor
dec
ja
xor
in
call
test
xchg
mov
daa
sahf
cmp
in
iret
pslld
fcoms
cmpsb
jmp
mov
je
inc
out
jle
push
lcall
push
roll
lods
je
mov
adc
popa
or
insb
out
inc
loop
lcall
sub
fldt
jg
enter
pop
sti
stc
xor
lahf
mov
mov
and
push
mov
pusha
rol
js
fdivrp
imul
cmp
jle
push
sahf
and
dec
add
fdivs
mov
scas
or
sbb
daa
jmp
fistps
jecxz
inc
mov
in
aas
in
in
and
das
xchg
ret
pop
sti
xchg
std
mov
mov
push
stc
xorl
push
push
movsb
popf
rcl
pusha
sbb
out
hlt
sub
inc
xchg
xchg
das
sti
and
mov
aam
xchg
mov
xchg
stc
add
sub
test
lock
pop
or
mov
jge
add
jecxz
loop
inc
dec
repz
andl
fbstp
and
mov
les
call
or
adc
mov
xchg
cmp
cmp
stc
ds
insl
inc
xchg
inc
loop
inc
push
lods
into
pop
pop
dec
sahf
pop
jns
pusha
mov
pushf
arpl
mov
push
loope
mov
add
cmp
popf
cmpsl
sbb
shrl
push
out
cmpxchg
push
outsb
xlat
and
xorb
cli
xor
pop
inc
inc
push
rol
pop
sbb
inc
adcb
or
inc
dec
cs
and
mov
jnp
xor
popa
shl
stc
fdivrl
xchg
push
xchg
and
andl
pop
sbb
aaa
loope
cs
stos
inc
push
leave
jl
pop
add
add
int3
fnsave
xchg
or
sub
push
aad
dec
adc
cs
ret
cwtl
out
aaa
sub
ret
popf
and
cld
xor
adc
sarl
push
xor
scas
mov
dec
daa
nop
jne
cmc
jp
inc
into
sbb
cld
sbb
test
and
push
add
aad
icebp
mov
int
into
jbe
test
arpl
stc
sbb
xchg
lret
dec
xor
sbb
pop
xchg
sub
cmp
mov
mov
lcall
jg
fsub
fisubrs
push
mov
hlt
int3
das
pop
push
mov
lds
xor
cwtl
idivl
mov
push
ficoms
or
adc
fistpll
pop
sub
add
test
mov
sbb
int
and
icebp
mov
out
jns
test
into
shll
push
inc
fistps
stos
jns
iret
sub
cmp
iret
stos
push
loop
adc
xchg
jbe
sti
out
lahf
clc
movsl
xor
adc
cmp
test
rorb
xchg
or
hlt
fcoml
or
mov
xor
je
sahf
inc
or
and
int
lcall
mov
pop
fiaddl
in
jno
adc
pavgb
inc
cmp
mov
aam
dec
xchg
push
imul
arpl
pop
adc
sub
aad
shll
jne
test
fistpll
mov
mov
int
shr
imull
mov
inc
fcmovne
outsl
stos
pop
add
or
xor
into
mov
sbb
cmpsb
out
lret
xor
stc
fists
pop
popf
sahf
je
std
pop
sbb
fistl
pop
insl
push
cli
sbb
inc
test
mov
mov
mov
int3
movsb
dec
outsl
and
push
pop
and
mov
lods
dec
aad
push
pop
jge
push
cltd
push
xchg
sub
dec
call
sbb
movsb
stos
out
sti
hlt
cmpl
sbb
and
mov
mov
or
xchg
stos
ficomps
jbe
into
add
mov
in
mov
mov
add
enter
out
xchg
inc
pop
xor
push
scas
cmp
cmp
and
jecxz
out
adc
mov
and
cmc
xchg
out
test
ficoms
fcomi
sub
mov
es
vxorps
pop
add
xchg
jmp
shlb
push
loop
lcall
daa
xor
push
rcll
lahf
outsb
cld
les
insb
js
mov
add
fdivs
and
or
repz
shll
sbb
cwtl
push
movsl
test
sub
es
imul
daa
es
inc
std
mulb
mov
or
lods
imul
jl
sahf
je
dec
jecxz
insb
nop
xlat
popa
cmp
jae
xchg
mov
sbb
ss
xchg
xchg
inc
out
jne
sub
pop
push
xor
testb
and
jl
ret
jae
icebp
jecxz
gs
pop
xlat
nop
aas
lds
mov
jg
call
inc
scas
xchg
mov
fcomp
mov
xchg
cmp
pop
dec
lret
sbb
stos
push
and
cmp
add
pop
mov
das
loope
shll
cmp
lcall
sub
pop
pop
xchg
fidivrl
jge
xchg
mov
cltd
push
cmp
sbb
popa
add
xor
in
mov
mov
leave
xor
jne
movsl
pop
ret
cltd
pop
xchg
nop
cmpsb
andb
jns
xchg
mov
cmp
dec
xor
sub
xchg
movsl
imul
test
pushf
adcl
and
mov
aaa
add
mov
loopne
jno
lret
sub
mov
nop
xchg
pop
inc
mov
xor
sti
mov
xchg
out
repz
mov
in
fcompl
jmp
cli
jae
cmp
ljmp
cmpsb
test
aad
adc
adc
sub
adc
xchg
insb
repnz
and
push
push
mov
xchg
es
stos
add
js
sbb
ret
or
and
cmp
and
fcoml
fsubr
fiadds
sbbl
pop
gs
les
dec
inc
mov
imul
xchg
add
ret
cmp
inc
jg
push
or
xor
xchg
inc
cld
cmp
mov
sti
subb
dec
cmp
jo
inc
jge
ljmp
inc
cmc
mov
mov
mov
fwait
enter
pop
push
and
mov
cld
iret
fidivrl
and
mov
xchg
push
outsl
out
or
cmc
sbb
outsl
bound
aas
popw
inc
sub
stos
dec
mov
imul
test
jmp
pop
test
xchg
not
insb
mov
lret
addb
mov
hlt
insb
jnp
inc
sub
xchg
lds
pop
sbb
mov
mov
std
push
mov
add
bound
inc
push
push
popf
sub
cwtl
jns
or
mov
inc
movsb
test
ljmp
mov
xor
mull
cmpb
in
lcall
sub
lcall
xorl
sub
mov
push
cmpsl
testl
rcl
mov
rcll
and
cmc
lret
xor
lahf
push
jge
out
bound
repnz
dec
movsb
cmc
push
inc
xchg
or
fistl
mov
sbb
mov
or
xor
inc
lds
push
cmc
push
sub
pushl
aas
or
rclb
mov
scas
popf
addr16
cli
into
push
dec
jo
les
dec
into
std
test
fs
shrl
sarl
dec
inc
jl
and
outsl
push
and
cmp
repnz
xorl
and
push
mov
cmpsl
mov
aaa
ficoml
addr16
xchg
rclb
aad
aaa
mov
mov
cmpxchg
pop
push
clc
repz
push
add
out
and
xchg
loopne
pop
mov
xchg
loope
cli
or
cli
shll
mov
and
nop
std
jbe
inc
int3
call
xlat
lea
cmp
mov
mov
cld
jge
cmpsl
xchg
dec
xchg
insb
xchg
vpminsw
cld
dec
subl
cmp
imul
popf
inc
mov
push
jno
dec
les
add
roll
shll
pop
or
packsswb
movsl
js
dec
gs
not
hlt
outsl
xchg
gs
addr16
ret
pop
sub
stos
xorb
adc
fwait
sub
jmp
add
imul
cli
jmp
les
or
mov
mov
aaa
pusha
js
js
or
dec
popa
arpl
jb
iret
fwait
lret
jns
out
adc
test
inc
aas
push
sti
cmp
sub
data16
mov
mov
or
xchg
shll
jmp
iret
xchg
push
cmpsl
or
ds
cmpsb
sbb
pop
mov
xor
aad
sbb
mov
movsl
sbb
call
imul
test
jge
lcall
lret
ret
scas
pop
mov
sbb
jmp
dec
xor
dec
pop
push
inc
mov
sub
sbb
test
pusha
pop
call
loope
imul
push
pusha
mov
lods
lcall
lods
mov
push
jp
adc
inc
jb
out
push
mov
cs
mov
sub
scas
sub
loop
inc
dec
mov
rolb
add
stos
xchg
aam
and
and
sbb
enter
pop
cmpsl
stc
dec
hlt
cltd
pop
inc
imul
outsl
outsl
push
fbstp
ret
inc
cmp
pop
dec
dec
adc
pop
loop
or
adc
lret
in
adc
xor
xor
jns
loop
es
aaa
inc
xchg
out
sbb
decl
pop
lahf
jmp
or
ja
dec
pop
xchg
mov
mov
lret
xchg
sbb
xchg
insl
cmp
ret
add
jle
cwtl
cwtl
jns
test
sti
cmp
sbb
cmp
imul
popa
push
lods
jne
loop
dec
cwtl
mov
rorb
mov
inc
jae
pop
out
stos
xchg
movsb
add
jecxz
imul
call
adc
xor
pushf
call
add
push
mov
mov
or
int3
adc
pop
in
repz
inc
insb
push
outsl
sub
scas
stc
xchg
add
or
orb
daa
inc
pop
dec
test
jl
out
mov
enter
jno
std
cmp
jmp
xor
cmp
arpl
push
inc
push
adc
lret
xchg
lods
sar
sub
mov
xchg
pop
mov
pop
jg
and
adc
mov
das
add
shlb
xadd
in
lods
adc
arpl
stos
push
cmp
mov
stc
mov
push
ljmp
xchg
mov
sub
xor
push
cwtl
mov
add
jne
pop
ror
or
sbb
xchg
mov
add
and
sbb
mov
fwait
int3
xchg
and
test
addr16
sbb
xor
mov
sahf
pop
rcrl
nop
push
and
dec
scas
shl
notl
fwait
and
cmp
sbb
jmp
mov
or
and
cmp
cltd
mov
mov
cmp
out
dec
jo
rcrl
outsb
pop
push
lods
mov
pop
aad
inc
push
sbb
cmc
pop
and
jns
mov
stc
xchg
lods
je
loopne
mov
daa
fs
sub
xor
inc
mov
jmp
adc
loopne
aaa
repnz
xchg
cmc
cmp
icebp
jmp
dec
sahf
stos
lret
jl
call
xor
stc
cltd
xchg
adc
jg
add
mov
ljmp
aaa
inc
cs
lds
popa
adc
mov
xor
int3
lret
pop
xor
out
add
fdivrl
xchg
xor
mov
cmpsl
lret
lcall
subb
jno
mov
stos
rcr
push
das
or
jmp
xor
jl
sbb
aad
or
xchg
or
or
enter
daa
cmc
bound
cmpsl
lahf
xor
mov
add
dec
mov
or
std
mov
test
inc
add
adc
loopne
ret
das
fisubs
cmp
add
stc
mov
cmpsl
sub
jmp
addr16
mov
mov
add
pop
push
fisttpll
sbb
push
movsl
loopne
mov
mov
stos
xchg
pop
shl
mov
in
push
inc
aaa
loope
inc
sbb
lock
mov
xorl
add
add
arpl
inc
sub
out
dec
push
push
clc
popa
out
je
je
pop
arpl
cltd
loope
loopne
add
mov
jns
push
sbb
aaa
mov
cld
add
es
rcll
aas
xor
fistl
pop
enter
push
push
and
std
xchg
loopne
push
in
movsl
adc
pop
adc
scas
sarb
leave
out
fcmovbe
fmuls
icebp
rcrl
cmpsb
and
in
and
pop
cwtl
sbb
ja
mov
push
sbb
fwait
mov
ret
mov
sbb
pushf
jle
movsl
pushf
pop
btc
outsl
push
push
out
outsb
js
into
stos
imul
jge
add
call
mov
popa
fsubrs
dec
mov
data16
mov
repz
and
popa
enter
loopne
roll
mov
cmp
stos
add
subb
inc
test
xchg
xor
scas
popa
cmp
pop
imul
xchg
xor
fwait
enter
and
scas
mov
dec
je,pt
xchg
dec
xchg
sub
cli
mov
sbb
xor
dec
and
rclb
and
push
mov
jns
cmp
mov
out
flds
je
inc
cmpsb
icebp
inc
arpl
int3
inc
jecxz
jecxz
lcall
hlt
iret
fmuls
mov
dec
mul
fildl
test
jo
fs
and
stos
cs
das
and
dec
jns
loop
lods
dec
das
nop
pushf
sti
add
mov
scas
xchg
es
lods
repnz
in
or
adc
mov
shrl
push
cmp
fidivrs
push
loopne
push
repnz
or
imul
stc
or
fnsave
lea
pop
movsl
pop
xchg
push
fsubrs
xchg
mov
xor
out
fcmovne
adc
loope
jno
and
mov
mov
daa
mov
xchg
sub
addr16
xor
cwtl
out
cs
pop
xor
xchg
xlat
adc
cli
lahf
sbb
inc
scas
xor
mov
xchg
xlat
movb
push
fiadds
iret
fldt
mov
fs
adc
dec
or
dec
nop
in
shlb
int3
mov
data16
lds
out
xchg
loopne
int3
mov
inc
out
stc
in
xchg
and
and
jnp
and
les
adc
xor
js
pop
push
lcall
jno
cli
aaa
lock
ja
and
fimuls
addb
cltd
mov
aaa
sahf
cmp
rcl
std
add
test
int3
add
dec
shr
scas
fwait
mov
inc
xchg
sub
jae
ret
dec
push
sub
cmp
repnz
xchg
push
jge
dec
cwtl
mov
sub
cmpsl
add
rclb
repnz
adc
mov
pop
cs
sahf
lret
cmpl
pop
imul
add
jbe
cmp
jp,pn
pop
mov
pop
movsl
repz
in
sub
scas
insb
push
not
roll
xor
sub
add
pop
aaa
and
aad
xor
stos
jno
adc
aas
in
repnz
pop
arpl
mov
cmp
cmpsb
pop
push
fcompl
roll
popa
movsl
mul
adc
hlt
das
dec
int3
std
jns
jne
push
jmp
sar
and
mov
orl
mov
loope
or
inc
repz
jmp
pop
pusha
inc
fildl
test
sbb
sbb
inc
adc
sbb
jmp
rcll
js
xor
bound
or
dec
mov
loopne
or
test
cmp
push
fistpl
int3
mov
fstpt
je
jle
xchg
mov
cmp
and
rorb
push
std
xor
outsb
sbb
das
aam
add
mov
jnp
lcall
sbb
mov
xor
leave
imul
push
xor
cltd
test
insb
or
and
ljmp
test
test
loopne
add
dec
xor
mov
add
inc
loopne
sub
adc
mov
push
hlt
int
sub
dec
or
into
mov
xor
out
sub
jecxz
scas
sub
inc
push
std
iret
inc
into
ja
in
into
adc
js
sbb
out
xchg
push
cli
test
sbb
pop
push
icebp
pop
adc
loope
lods
std
scas
cli
cmc
jnp
in
mov
js
loopne
jae
or
push
push
push
jb
inc
nop
mov
lock
xchg
pop
aam
mov
cmp
insl
movsl
scas
cli
push
xchg
sbb
iret
outsl
inc
add
sub
rol
sbbl
scas
out
enter
scas
sbb
fnstsw
xchg
outsl
xor
inc
or
pop
dec
lods
aas
push
loopne
jns
imul
or
ja
adc
mov
int
dec
dec
hlt
cld
mov
inc
jo
xchg
add
mov
mov
or
les
and
loopne
push
negl
mov
xchg
insb
or
insl
cli
repz
jp
or
loope
subb
pop
pushf
aad
fstps
ljmp
mov
sahf
js
inc
xchg
dec
repnz
or
pop
in
xlat
push
out
dec
icebp
dec
inc
ds
les
push
in
stos
adc
mov
push
push
dec
mov
cltd
inc
in
inc
aad
fidivs
rol
pop
daa
ds
or
shrl
inc
cmp
cmpps
mov
sub
xchg
jecxz
adc
repnz
pop
ret
daa
xchg
aaa
push
fldt
sub
adc
mov
aam
lahf
neg
pop
clc
nop
mov
call
inc
cli
mov
xchg
jmp
sub
int
cmp
and
mov
push
or
sub
push
in
adc
shrl
dec
and
repz
or
inc
jmp
or
lock
xchg
clc
hlt
fidivl
test
clc
dec
icebp
jp
cmpsb
and
mov
imul
fsubrs
pop
aam
rorb
nop
cmp
xor
ret
andl
push
pop
dec
mov
xor
lret
adc
inc
mov
add
sub
mov
in
inc
mov
shlb
mov
out
mov
mov
add
cmpsb
xor
jp
mov
cmp
push
sbb
sbbb
xchg
loope
int
les
add
jecxz
xchg
mov
ds
push
push
push
mov
add
scas
push
ja
fisubl
dec
mov
out
sbb
mov
cmp
inc
pop
add
ljmp
leave
iret
sub
incl
sub
jle
or
lods
xor
xor
nop
in
mov
fdiv
ss
into
notb
sahf
popa
xchg
push
outsb
push
cmpsb
adc
mov
addl
icebp
in
arpl
in
sub
sahf
imul
call
lcall
out
cmp
mov
ret
fstl
insb
xchg
repz
xor
aas
or
rcll
xorl
pop
pop
mov
jno
stc
sti
out
and
cmp
mov
inc
mov
mov
mov
loope
mov
add
mov
imul
repnz
outsl
sbb
movsl
stos
xchg
ret
arpl
pop
inc
xchg
xchg
cmpsl
dec
enter
dec
pop
scas
test
iret
outsb
adc
and
leave
sti
pusha
or
xchg
cmp
mov
lds
and
gs
pop
cmp
sbb
icebp
or
stc
cmpsl
push
popf
es
adc
cmpb
bound
mov
orb
push
lret
mul
sbb
mov
loope
loope
repnz
push
add
sbbl
pushf
mov
sub
inc
inc
int3
adc
mov
aas
in
mov
stc
mov
cmp
mov
adcb
lock
andl
cs
or
repz
mov
and
xchg
popa
popf
inc
test
iret
je
outsb
fildl
and
ret
aam
adc
cmp
and
notl
aas
inc
repnz
mov
jno
in
pop
das
add
pop
lea
jae
push
sub
inc
and
mov
xorl
xlat
cmp
xchg
push
sub
xchg
xlat
pop
xor
pop
xchg
bound
jns
or
addr16
or
adc
addb
outsl
cmp
xor
dec
mov
mov
lret
stc
and
pop
mov
lahf
ljmp
hlt
cs
int
ret
inc
add
enter
setp
cmp
scas
pop
cmp
xor
push
inc
test
xchg
sarb
push
test
sti
cmpl
out
insb
mov
jno
inc
xchg
push
push
mov
pop
xchg
sbb
mov
cmp
dec
dec
fndisi(8087
mov
pop
rorb
mov
stos
push
jns
xorb
nop
test
mov
push
out
aaa
cmp
dec
jnp
leave
cltd
dec
leave
cwtl
pop
dec
dec
shrl
aad
pusha
xchg
cmpsl
dec
inc
sub
fsubs
xchg
and
push
out
push
ds
cmp
xor
dec
push
pushf
aad
push
je
cwtl
subb
arpl
add
in
int
in
mov
jns
out
fs
mov
imulb
enter
cmc
cmc
sub
cmp
mov
or
pusha
xchg
sub
sub
popf
mov
arpl
div
dec
push
lret
sub
fadds
in
mov
add
mov
out
mov
mov
jbe
cltd
mov
cltd
test
xor
pop
adc
je
xor
and
cmp
imul
and
jl,pt
jns
test
mov
adc
nop
frstor
cld
push
pop
mov
fisubs
imul
fcomps
add
jl
push
adc
adc
int3
clc
pop
lods
add
cmp
lret
and
lods
mov
gs
mov
mov
orl
gs
jmp
sahf
jle
test
xlat
jl
dec
push
mov
jb
sbb
ja
mov
mov
ret
cmp
addr16
inc
sub
mov
add
shl
dec
cmc
inc
lds
inc
sub
lds
push
mov
popf
sbb
mov
mov
loopne
xchg
lds
jmp
sub
lds
jbe
addl
xor
mulb
cmpsb
rcll
mov
mov
insb
mov
jg
mov
lea
call
rorb
nop
fs
jb
ds
test
pusha
fbstp
adc
cmp
or
js
cld
jne
dec
in
scas
cmpsb
pop
fstpt
adc
dec
adc
inc
dec
inc
repnz
out
bound
and
or
push
jo
pop
mov
test
push
jbe
popa
aas
into
jle
enter
f2xm1
outsb
arpl
push
mov
call
xor
inc
xor
pop
mov
in
fstps
sub
pop
clc
mov
test
push
mov
jns
jecxz
sbb
scas
mov
popa
jl
and
add
push
add
fisttpl
lock
inc
xor
sarl
dec
cmpsl
loopne
fcoml
push
xlat
and
adc
insl
out
es
xchg
push
sbb
xchg
dec
mov
pop
or
mov
sub
xlat
lret
push
loopne
push
pushf
or
and
outsb
popa
mov
test
loop
push
pop
ret
jl
repz
lea
jnp
pop
fwait
push
fwait
xchg
mov
ud1
roll
or
test
jg
dec
inc
fidivrs
dec
fisttps
jae
or
les
push
pusha
dec
cltd
sahf
cmp
push
dec
mov
leave
or
lahf
clc
stc
dec
adc
daa
xor
das
daa
mov
addr16
into
sub
cmp
xor
in
repz
mov
cmp
cmpsb
cmp
pop
fucom
insb
jns
test
or
or
push
aad
mov
ret
popf
lahf
out
inc
xor
inc
popa
add
jle
jmp
sbb
rolb
and
mov
xchg
lea
mov
jae
push
inc
rorl
mov
and
insl
les
xchg
imul
repz
ljmpw
dec
icebp
idiv
mov
arpl
rcll
subb
jmp
test
adc
inc
cmpsb
shrb
sbb
mov
xor
pop
je
es
repnz
adc
ret
in
sub
gs
hlt
cltd
cmp
lret
mov
cmp
adc
cwtl
mov
andb
add
sti
les
int
loopne
cmp
rclb
sbb
fwait
hlt
inc
sub
jb
fs
sub
pop
pop
daa
push
xlat
sub
filds
sbb
jge
sbb
rcrb
int
lahf
mov
mov
jnp
inc
mov
inc
mov
jo
rcll
mov
push
jmp
pop
xor
dec
cli
pushf
std
cs
int
xchg
je
addr16
ljmp
in
fs
fxch
imul
inc
enter
sbb
inc
fmull
fdivrs
and
out
nop
cmp
int3
lahf
mov
cmp
xchg
sub
fsubs
or
sub
aam
inc
stos
test
les
mov
gs
sub
dec
mov
and
dec
insl
adc
mov
or
add
je
dec
cmp
rcrl
xor
mov
in
cmp
cli
push
outsb
mov
xchg
je
popf
fcoms
sub
insb
lods
push
jl
lcall
sub
das
xor
pushw
inc
push
xchg
ja
sub
xor
lcall
stos
outsb
mov
push
fsubl
pop
stos
jle
push
jae
mov
or
sarb
cmp
or
pop
dec
lds
mov
push
pop
es
pop
and
dec
or
hlt
mov
sbb
test
out
daa
add
js
jmp
ret
or
pop
daa
mov
out
add
jnp
fs
and
sub
sbb
pushf
push
mov
rcrb
fxch
mov
push
aas
mov
stc
cmp
adc
loopne
sahf
out
push
push
cmp
dec
leave
dec
ret
loope
lods
and
int
imul
cmp
or
jmp
jbe
cwtl
or
jb
xchg
push
test
jl
scas
cwtl
xchg
jle
mov
or
sbb
jo
stos
xchg
dec
pop
popf
scas
mov
std
call
mov
aam
aas
cmpsl
pushf
imul
or
lret
es
into
xchg
jb
mov
sbb
inc
xlat
nop
inc
insb
mov
xor
int3
xchg
jne
pop
dec
fimull
pop
mov
fldt
mov
adcl
out
jae
rcll
fwait
mov
into
imul
fidivrl
jg
fsts
jmp
adc
jecxz
mov
push
jg
cmp
ret
aad
lods
sbb
push
xor
cmp
mov
lock
repz
test
dec
popaw
and
aad
ljmp
adc
imul
xlat
inc
inc
jne
jge
aam
sub
xchg
jbe
jge
arpl
cwtl
rolb
adc
jg
es
mov
cmp
subb
daa
ss
fsubrs
sarl
or
jmp
adc
or
sti
lret
inc
mov
adc
call
xor
jno
ficoms
mov
lock
lods
in
sub
fstps
sarl
repnz
xor
test
out
movsb
or
out
mov
fsubrs
aad
sahf
sbb
mov
xchg
xchg
pop
clc
cmc
dec
sti
lock
dec
rclb
roll
sub
fwait
mov
xchg
adc
gs
subl
cmp
aad
xchg
imul
jns
ret
arpl
jle
pushf
fcmovu
not
inc
in
shrl
jge
fcoml
mov
xchg
addr16
aam
adcl
in
or
push
enter
mov
sahf
int3
stos
mov
or
push
shr
pop
sub
xor
jno
dec
pushf
sub
ss
pop
fcompl
dec
insb
popf
in
ror
sbb
repz
aas
insl
sbb
addr16
flds
mov
jecxz
lods
out
mov
mov
or
xor
cmp
mov
push
pop
imull
or
outsb
aas
addb
fnstsw
ret
fwait
lds
insl
iret
std
push
rol
cmpsl
fimuls
or
ret
push
call
jae
inc
xchg
dec
mov
ret
sbb
adc
scas
sub
jge
push
xchg
cmpsl
pop
sbb
cld
in
loope
std
xor
inc
lods
fimull
xchg
jp
cmp
add
mov
cmp
and
mov
adc
sahf
sub
loop
dec
mov
dec
insl
inc
and
sub
inc
dec
mov
ds
cmp
sbb
and
lret
movb
push
stos
or
dec
jb
and
movsb
inc
icebp
into
adc
inc
test
cmc
dec
fwait
fdiv
call
leave
cwtl
cli
sbb
fwait
jae
cmpsb
dec
dec
imul
push
std
call
stos
mov
loope
in
loop
sbb
cmp
push
popf
pop
pop
jle
repnz
je
lock
and
push
ret
jp
test
xorl
jge
das
mov
ja
mov
aad
cmpsb
mov
ror
loopne
sbb
and
sub
dec
mov
jb
stos
xchg
dec
mov
pop
sub
sub
sbb
js
test
pop
jmp
xchg
fwait
test
mov
xor
shr
sub
push
xchg
push
mov
mov
loopne
sbb
mov
sub
notl
add
cmpl
icebp
cwtl
inc
nop
movsl
sub
inc
push
out
stos
jne
bts
jne
bound
outsl
mov
sbb
loop
jl
popa
fwait
clc
xchg
cli
push
pop
xchg
fidivs
xchg
cld
cmpl
inc
xchg
fwait
pop
popf
cmp
cmp
out
mov
push
rorb
or
popa
imul
popf
cmp
test
xchg
pusha
pushf
cmp
lcall
mov
sbb
or
xchg
dec
pop
pushf
loope
mov
ljmp
sub
bound
dec
movb
aaa
push
scas
adc
push
push
ret
out
dec
xor
jbe
cltd
dec
loope
sub
push
frstor
shr
xchg
int3
push
add
xchg
mov
and
push
cmpsl
push
mov
gs
fs
in
shrb
mov
inc
push
mov
push
mov
imul
adc
iret
popf
ret
out
loope
movsl
je
pop
test
adc
fldt
mov
pop
jnp
fiadds
aas
outsl
push
rolb
mov
jp
pop
sahf
mov
mov
arpl
rcrl
gs
push
jnp
sbb
enter
push
in
xchg
test
adc
fs
data16
mov
nop
movsl
pop
mov
mov
insl
pop
aas
xlat
out
divl
loop
ds
sub
push
jnp
fstps
jmp
popa
push
and
cmp
push
les
mov
adc
jb
movsl
rolb
das
ret
stos
bound
dec
insl
sub
add
jne
adcl
movsb
xchg
cwtl
testb
repnz
shrb
push
cmp
sti
jmp
in
push
xchg
test
daa
shl
insb
jne
in
insl
jnp
mov
int
stos
jne
mov
sub
sub
mov
mov
aam
shrb
cmpb
jb
add
inc
ljmp
jb
outsb
es
adc
outsl
sub
aaa
insb
mov
push
lods
xor
sub
lea
or
in
gs
movsl
xchg
fisttps
adc
push
pop
pushf
pop
repnz
adc
xor
dec
and
xchg
out
sub
inc
and
pop
xchg
mov
ljmp
pop
pop
pop
xchg
xchg
fisubs
mov
sbb
mov
addl
jmp
dec
pop
jg
add
insb
push
sub
fsubl
outsb
cmp
push
lret
sti
in
sub
inc
test
lock
lahf
movl
ret
xchg
add
out
xor
pop
sbb
sbb
loopne
adc
fidivl
pop
jge
loop
adc
fisubrl
insb
inc
ret
adc
in
pop
push
add
lahf
mov
sub
orb
mov
pop
jae
pop
or
xor
or
in
inc
fidivl
jge
inc
dec
and
adc
movsb
ss
xor
in
lods
insl
popf
adc
mov
scas
cmpsb
xchg
sbb
nop
push
dec
adc
stos
push
xchg
xchg
cmc
push
ds
call
pop
data16
inc
lret
mov
hlt
jg
mov
sub
test
mov
outsb
or
mov
jae
jno
fildll
or
and
push
pop
cmp
test
pop
test
mov
das
pop
shlb
mov
test
jp
es
loopne
cltd
repz
mov
sub
jmp
jecxz
fcom
jae
sarb
int
stc
notb
mov
lock
sbb
mov
mov
sbb
mov
imul
xchg
xor
pop
mov
icebp
nop
xchg
jecxz
xor
dec
jg
pop
leave
subb
pop
sbb
mov
pop
stos
and
sub
fmull
test
sub
jnp
aas
rorb
out
xchg
movsl
pop
add
sbb
cmp
and
mov
or
push
dec
xchg
and
adc
rorb
inc
loop
mov
bound
fidivs
jae
add
xchg
add
pop
jnp
shll
pushf
pop
fildl
xchg
popf
pop
fmuls
jbe
fidivs
lcall
sahf
jmp
iret
shrb
cmp
andb
insb
mov
mov
sbb
xor
cmp
pop
or
mov
xor
aaa
push
xchg
jecxz
movsb
lods
ss
repnz
xor
jnp
je
in
or
or
cmpsl
rclb
lret
mov
clc
int
adc
sbb
xor
jnp
popa
add
add
out
add
dec
bswap
mov
testb
cmp
pop
jo
sbb
ds
cmp
push
aam
in
xor
cmp
push
xor
repz
adc
xor
cmpsl
sbb
xchg
lods
dec
out
push
mov
sahf
jge
das
adc
outsl
inc
sbbl
lds
inc
push
mov
mov
sbb
idiv
sti
inc
inc
popf
push
add
pop
test
jb
inc
addb
inc
jne
lcall
jmp
xchg
mov
ja
pop
adc
ret
hlt
add
popf
aad
inc
cmp
ror
es
jb
jmp
xor
mov
cmp
adc
jnp
pop
cmc
mov
popa
stc
xor
mov
adc
mov
sbb
push
xchg
and
imul
or
pop
push
fisttps
dec
mov
inc
add
ljmp
les
imul
bound
xorb
inc
ds
insb
adc
int3
fidivl
mov
inc
adc
clc
cmp
prefetch
fdivs
jmp
sbb
cld
adcb
cmpsl
add
inc
fdivl
add
jb
mov
push
ss
ret
insb
push
fldenv
mov
xor
je
sub
add
inc
mov
push
and
movsb
frstor
or
cltd
sub
sti
aas
mov
lods
pop
ds
adc
sti
fwait
lds
push
mov
push
rep
sarl
cmp
pop
lret
insb
mov
dec
pop
xchg
imul
or
aas
cmp
add
and
pusha
push
fwait
cmpsl
iret
in
in
sbb
push
std
mov
stos
enter
add
jmp
mov
sbb
pop
cmc
cmpsb
push
mov
aaa
imul
sbb
jnp
add
add
mov
shll
dec
ja
stos
or
mov
jbe
pushf
mov
xor
loope
sub
xchg
daa
cmp
adc
dec
outsl
xlat
mov
fbld
orb
je
adc
jg
fstps
inc
xor
bound
sbb
xchg
stos
enter
mov
in
cmp
lea
push
ss
cwtl
dec
mov
xor
jge
cmp
cmp
subl
sti
insb
movb
ret
lea
xor
mov
jl
es
push
push
int
mov
mov
pushf
clc
cmc
decl
loop
mov
mov
inc
rol
clc
jne
xchg
sti
pop
adcl
mov
stos
and
mov
ja
inc
mov
pop
mov
stos
jbe
insb
push
mov
in
addr16
cmp
dec
lock
fcomps
mov
dec
sub
xchg
xor
mov
cwtl
jb
out
imul
pop
sahf
push
ret
and
scas
shl
cmpsl
jl
jge
daa
roll
std
int
sbb
xchg
addb
and
xlat
xor
jo
cmp
sub
push
dec
dec
and
cld
mov
mov
xor
enter
sub
jo
imul
sub
jecxz
test
mov
pop
call
mov
movsl
mov
xchg
scas
inc
pushf
addr16
xchg
inc
stos
push
xorl
mov
xchg
shlb
dec
sti
mov
fs
rorb
out
out
or
arpl
out
into
jmp
pop
xchg
push
push
and
lock
jnp
jmp
adc
jns
inc
pop
repz
sub
fsubr
lret
and
cmp
pand
mov
shr
sub
mov
ljmp
cmp
xchg
testl
nop
sbb
adc
in
lret
out
sub
movsl
test
adc
rcl
fimuls
jno
mov
hlt
lret
and
insb
pop
jge
sarl
loopne
insl
mov
dec
pop
loopne
sub
jl
nop
add
aam
pusha
sbb
xchg
mov
dec
bnd
in
stos
and
mov
je
inc
push
push
sti
mov
ljmp
cmpl
rcll
xchg
mov
lahf
sahf
mov
shll
dec
movsb
fldcw
por
icebp
insl
or
mov
pop
mov
fisubrl
ss
adc
inc
mov
rolb
dec
aam
rcrl
xor
out
movsb
in
out
sub
and
xlat
and
xorl
std
xchg
ds
push
dec
dec
orl
dec
test
fsubl
mov
push
mov
mov
loope
leave
in
xchg
lock
jns
xchg
es
xor
jb
cld
cmp
adc
inc
cmp
xchg
cmp
and
int
fmulp
fs
cltd
outsl
mov
jge
mov
jo
xor
clc
push
cmp
out
fwait
sub
in
and
push
or
pop
xchg
xchg
lret
testb
inc
rcll
dec
mov
pop
sahf
cmp
ficomps
popf
hlt
sbb
jne
jl
adc
shr
and
lahf
push
cmc
test
or
mov
mov
xor
sbb
push
dec
mov
adc
bound
mov
inc
sarb
mov
addw
fs
xchg
pushf
lock
push
fdivrs
out
mov
cwtl
cmp
adc
ljmp
add
ja
jbe
pop
or
push
adc
arpl
jecxz
js
adc
xor
dec
test
dec
dec
scas
push
insb
mov
into
in
dec
pop
lret
mull
add
inc
mov
ret
cmpsl
mov
into
sub
shlb
jne
lea
aam
xchg
add
icebp
sub
loope,pt
mov
add
lret
sbb
pop
cmpsb
ror
adcl
and
imulb
cmp
mov
call
rcll
or
in
scas
dec
stc
nop
out
sbb
je
mov
les
mov
jns
sti
imull
adc
popf
adc
jbe
cwtl
inc
xorl
xchg
sti
push
lds
and
add
xor
sbb
stos
sti
test
cmc
xchg
fistpl
cmpsl
xor
jmpw
mov
or
popa
mov
cmp
jmp
push
push
dec
xorb
aam
dec
inc
pop
push
pop
je
testl
inc
cmp
and
mov
jg
bound
dec
mov
ds
ja
aad
and
mov
in
mov
popf
scas
xchg
xlat
aas
cmp
pushf
cli
jb
mov
loopne
xchg
inc
xor
sarb
outsl
lods
jmp
scas
loopne
adc
jecxz
mov
scas
add
dec
ja
mov
adc
inc
push
inc
and
fmuls
shl
or
inc
paddb
mov
rolb
loope
dec
test
mov
clc
mov
repz
addr16
sarl
addl
dec
shl
stos
in
pusha
bound
add
call
mov
cwtl
sahf
mov
jbe
sahf
outsb
add
subb
dec
jp
sbb
push
or
xchg
lock
mov
sbb
pop
jae
imul
and
mov
mov
adc
add
jecxz
mov
ror
mov
cld
cmp
dec
in
push
jge
jge
pop
es
shll
loopne
mov
sbb
mov
cld
add
in
add
dec
in
push
aas
mull
cmp
mov
dec
movsl
jge
add
mov
lret
stos
cmc
ss
or
out
mov
mov
mov
cmp
lods
mov
add
adc
inc
loopne
test
xchg
jge
mov
sub
mov
arpl
and
cli
fdivrp
lcall
dec
clc
outsl
test
mov
jo
out
mov
mov
pop
jbe
xor
sub
cmp
fs
loopne
ss
dec
pop
pop
inc
addr16
add
and
xchg
sub
loope
pop
jp
sti
loope
pop
pop
fwait
pop
lods
and
lcall
xchg
cmp
fwait
mov
xchg
xchg
sbb
xor
jg
popf
aad
cmp
mov
repnz
pop
loop
cmc
out
mov
inc
add
push
inc
add
xor
add
call
insl
ret
in
mov
rolb
cld
inc
rcll
ret
jl
arpl
mov
stc
arpl
adcb
inc
lret
nop
shlb
add
cmpsb
mov
add
cmpsl
inc
jmp
inc
repz
aam
sub
xchg
cwtl
ret
and
inc
add
into
mov
es
mov
adc
icebp
jge
push
add
pushf
add
je,pt
inc
call
sbb
dec
mov
filds
jb
add
sarl
outsb
aas
mov
into
in
stc
sub
outsb
dec
ret
int
sti
stos
orb
push
pushf
xor
andb
sbbb
imul
pop
mov
jae
mov
fisubl
mov
inc
in
jns
imul
bound
std
inc
lods
or
shlb
or
add
repz
mov
negl
stos
dec
push
or
rcrb
dec
push
sarl
jne
add
push
gs
aad
in
lret
pop
stos
sub
shlb
and
frstor
in
jae
pop
xor
mov
rclb
xchg
cs
push
mov
jle
mov
sbb
cmpsb
adc
andb
pop
enter
fsubr
push
ret
lret
fcmovbe
cmp
or
add
mov
inc
or
push
jl
lock
in
mov
jecxz
mov
leave
jb
in
sarb
fwait
addr16
inc
and
mov
and
lcall
repz
std
or
ss
pop
mov
and
lds
pop
xor
or
sub
movsl
mov
loope
fistl
or
xor
inc
push
popl
mov
cmp
aas
cmp
pop
mov
fwait
int
into
lods
inc
shrl
out
sbbb
and
push
mov
mov
dec
or
icebp
pushf
adc
mov
shrl
cmp
cmp
cmpsb
cmpb
xlat
sbb
and
dec
pop
lods
xchg
inc
mov
in
sbb
push
pop
pop
fcmovb
mov
je
pushf
fstpt
pop
or
inc
movsb
mov
add
jb
xor
mov
sahf
mov
in
sub
jb
pop
and
aas
mov
jns
dec
shrb
cld
push
jmp
push
fs
iret
in
subb
ret
outsl
mov
fbld
pop
xor
sbb
mov
pop
rclb
lea
push
into
inc
or
xor
or
pop
pop
lea
out
das
lea
xchg
jnp
mov
or
add
sbb
push
jg
movb
cld
rcrl
pop
mov
push
cld
sub
sbb
out
push
outsb
sti
lea
sbb
add
xor
and
loope
pop
mov
cmp
call
out
ret
lea
pusha
imul
iret
test
fs
hlt
int3
mov
push
pop
mov
push
fwait
inc
out
sahf
cmp
pushf
aam
mov
cmpsb
test
flds
inc
sarl
pop
xor
and
push
or
and
dec
push
insl
jno
repnz
test
clc
and
sti
ja
mov
push
sbb
xchg
sbb
fadds
enter
in
inc
pop
xchg
cld
mov
jnp
js
fucom
mov
push
dec
and
xlat
cltd
push
jle
jmp
enter
push
push
scas
mov
repnz
pushl
test
add
xchg
test
outsl
pop
xor
sub
in
push
mov
test
fs
sub
dec
mov
lods
outsl
xor
pop
and
rclb
ss
jmp
dec
fstps
mov
inc
dec
leave
iret
xchg
das
xor
mov
sahf
add
iret
pop
pop
lods
pop
test
and
arpl
imul
gs
mov
and
push
leave
subl
mov
push
sbb
test
imul
test
inc
ja
lahf
dec
cltd
mov
lret
mov
outsb
mov
xchg
enter
loopne
jnp
imul
add
loopne
shll
or
push
dec
adc
adc
cmp
or
jo
iret
pop
ret
or
aaa
rolb
sti
pop
inc
pop
mov
mov
lock
adc
or
dec
mov
mov
adc
pop
mov
mov
sti
lea
and
je
fsubrl
data16
cmpsl
and
ret
push
or
test
mov
lock
pop
nop
mov
push
xchg
test
xchg
test
inc
or
add
neg
or
mov
test
sbb
imul
icebp
ss
fcomps
outsb
fidivl
mov
sbb
pop
rclb
mov
mov
loopne
roll
or
xchg
jle
lret
into
les
bound
fstpt
jmp
les
clc
addb
mov
fstl
movsb
push
adc
mov
leave
mov
xchg
inc
popf
mov
lea
shufps
in
sbb
jb
loope
inc
dec
fcmovnbe
dec
and
out
mov
int3
jns
sbb
call
hlt
clc
outsb
jo
sub
out
sbb
insb
fildll
ja
adc
and
rcrl
roll
push
pop
pop
push
push
das
orb
xchg
sbb
push
mov
testb
and
jnp
mov
enter
cli
cmc
insb
add
mov
cmp
jecxz
mov
add
sbb
out
and
sbb
sbbb
mov
cltd
dec
subl
push
mov
cmp
pop
push
das
pop
xchg
lds
js
sbb
cmp
movsb
stos
stc
mov
addr16
add
gs
mov
pop
je
push
push
push
xchg
jp
lock
jb
mov
jo
fisttpl
mov
xchg
into
jmp
insb
cld
and
cmpsl
push
cmp
test
in
sub
push
dec
int3
fcmove
aad
xchg
mov
push
mov
cmp
lock
outsl
fistpll
dec
lea
daa
mov
jge
sti
popf
jnp
popl
dec
inc
push
shrl
ja
and
jae
add
cmpsb
mov
mov
add
lret
add
fidivrs
xor
adc
or
push
jecxz
or
in
jmp
push
fstpl
xchg
sahf
dec
mov
in
push
mov
std
cli
cmc
scas
gs
nop
pcmpgtd
fsubrl
add
lods
fs
sbb
jno
dec
mov
add
jbe
ret
mov
or
push
push
mov
sub
sbb
cs
xchg
loope
arpl
jno
sti
sbb
xor
ljmp
cmp
push
subl
pop
push
scas
xchg
js
loope
fidivrl
or
push
addr16
pop
pushf
or
in
mov
mov
lret
mov
mov
jecxz
mov
insb
adc
xchg
pop
xor
push
into
cmp
or
ljmp
fidivs
ffree
nop
sub
mov
mov
jl
mov
add
int3
cmpsl
adc
cmpsl
test
sub
in
in
and
mov
lret
or
add
in
call
pop
xor
push
xlat
inc
movsb
ljmp
out
push
mov
push
and
testb
cs
fidivrs
fs
mov
test
xlat
stos
push
xchg
fsubrs
lock
sub
xchg
jne
stc
fdivs
adc
or
iret
or
xor
xchg
cwtl
jge
mov
lret
or
cmc
jmp
dec
daa
dec
and
call
lret
jmp
xchg
xchg
in
inc
imul
push
push
push
dec
fs
std
and
ret
lock
cmp
or
outsb
aad
xor
aad
lret
pop
ds
sti
xchg
mov
cmp
dec
std
cld
sahf
and
jbe
or
in
stos
mov
pop
mov
inc
xchg
jnp
call
test
dec
adc
xor
sti
pop
adcb
xor
imul
jo
mov
mov
xchg
xor
in
mov
iret
andl
add
mov
mov
push
pusha
das
push
add
mov
push
cmp
and
lret
push
ss
xor
and
cmp
and
xor
out
mov
xor
and
aad
mov
pop
mov
jmp
xchg
pushf
ret
lock
add
rorb
shrl
aaa
inc
and
mov
and
pusha
imul
clc
je
lcall
imul
jp
push
imul
inc
inc
jl
fimuls
lds
mov
std
cmp
hlt
flds
jbe
in
test
sbb
mov
lea
fldl2e
int3
cltd
ljmp
insl
pusha
sub
xchg
out
adc
mov
popa
sub
std
mov
xchg
pop
mov
in
or
mov
xor
adc
rorl
lods
cmp
pop
clc
lea
scas
sbb
push
jle
inc
out
or
imul
insl
cmp
arpl
or
or
or
roll
mov
int3
rclb
repnz
and
repz
jno
cmp
push
cmpsl
notl
sbb
fst
mov
andl
xor
aad
push
mov
pop
scas
out
dec
jno
arpl
ret
pushl
lock
push
ficompl
push
xor
cmp
cmp
dec
pop
xchg
out
in
xchg
rol
roll
xchg
add
push
add
test
jmp
pop
lods
jae
addr16
out
or
sahf
push
ss
adc
xor
or
sub
fidivrs
ds
mov
ja
fwait
jns
cmpsb
mov
mov
jno
inc
jae
inc
jmp
gs
sub
and
dec
adc
fwait
inc
es
mov
aas
inc
fnsave
push
out
je
rclb
mov
aad
mov
pop
jnp
cmpb
mov
xor
mulb
cmp
aas
out
inc
mov
adc
xchg
xlat
arpl
dec
scas
xchg
pop
lahf
loop
inc
xchg
add
sbb
cld
lds
ret
data16
or
mov
xlat
andb
cmp
cmp
cmp
arpl
or
cmpsb
mov
dec
or
out
loopne
mov
test
inc
insb
adc
test
lret
sub
movsl
inc
aam
fisttpll
inc
cmpsl
cmp
shrb
mov
popa
jg
imulb
ljmp
stos
pop
repz
cmp
mov
push
jns
mul
and
ds
sahf
push
lahf
jmp
sub
fwait
mov
loope
jno
sbb
and
cltd
jno
sbb
fsubrl
cmp
sbb
push
pop
lods
sbb
jmp
out
mov
pop
gs
jp
sub
arpl
scas
mov
out
or
lods
push
xchg
hlt
jns
inc
jge
ja
mov
pushf
mov
xchg
lahf
and
jmp
cmp
jl
sub
adc
dec
sar
add
ret
or
shll
out
xchg
leave
and
and
sbb
push
sti
mov
pop
notb
rol
sbb
push
add
mov
mov
movsb
mov
sahf
pop
cltd
cli
lock
mov
repnz
xor
mov
jbe
xchg
popf
sbb
scas
cs
std
scas
xor
lods
imul
fstpt
jae
pop
pop
cwtl
xchg
or
test
lea
out
or
cmpsl
fwait
inc
push
jns
mov
ret
aad
inc
xchg
mov
adc
mov
jno
shll
mov
popf
fcmovne
ds
movsb
in
fs
mov
dec
jne
inc
std
popf
fstpt
mov
ljmp
pop
dec
mov
xorb
xor
fists
inc
dec
push
in
rcrb
in
sub
lahf
lods
loope
pushf
cmp
sarb
sbb
inc
aas
xor
sahf
scas
xor
pop
stc
mov
cld
jecxz
jb
xchg
fdivrs
sbb
adc
sub
push
lds
or
mov
sub
dec
js
sub
mov
dec
push
in
sbb
les
mov
adc
jae
js
call
sbb
jp
call
mov
mov
mov
and
add
bound
and
xlat
adc
test
pop
filds
jne
lret
fstps
push
xor
call
aaa
mov
mov
mov
aam
clc
push
imul
pop
ss
std
xchg
dec
test
imul
inc
into
ljmp
leave
sbb
jno
and
dec
jno
shl
mov
adcb
lahf
adc
dec
in
lret
mov
pop
shrb
std
lods
or
jb
lret
ss
mov
jp
hlt
mov
xchg
dec
jecxz
mov
pop
push
decb
dec
sub
cmp
stc
scas
push
nop
adc
cmpsb
shl
adc
or
outsb
or
lods
ret
mov
out
pop
jmp
or
mov
jp
mov
adc
insb
sahf
rcrb
pushf
add
jecxz
inc
pop
sbb
dec
mov
ret
gs
fisubrl
jle
testb
jb
enter
or
xchg
mov
sub
inc
mov
dec
push
push
lds
or
adc
jno
xor
dec
popf
divb
dec
mov
push
cmp
mov
cmp
andb
fsubrl
sbb
cwtl
jecxz
dec
and
nop
popf
cmpsb
sahf
ja
ret
pushf
fsubl
pop
data16
rclb
mov
aad
lcall
xchg
jl
inc
or
and
dec
js
push
jg
stos
cmp
cltd
mov
mov
or
lock
mov
jae
lahf
xor
push
adc
sub
xor
jnp
addr16
movsb
pop
xchg
adc
pop
jno
mov
xchg
jecxz
mov
mov
in
nop
fnsave
cmpl
inc
out
mov
aaa
mov
cmp
or
popf
pop
push
fistpl
jg
lods
cld
data16
cmc
cwtl
inc
jge
push
push
cwtl
inc
jl
aam
test
fcoml
pop
add
loop
add
fwait
and
lcall
add
pop
mov
inc
xchg
out
sub
in
push
add
dec
movsl
pop
ljmp
arpl
mov
cmp
xlat
sub
xchg
cs
addb
dec
pop
mov
push
lods
cmpsl
test
out
mov
dec
popa
in
addr16
fsub
or
sub
xlat
icebp
xchg
or
mov
dec
into
fwait
inc
and
jb
aam
into
iret
fisubrs
addr16
hlt
xor
lahf
xchg
int3
popf
mov
stos
scas
ret
jb
push
in
xor
outsb
lods
dec
sahf
add
mov
in
push
jno
arpl
pop
aad
sarb
pop
int3
adcb
outsl
xchg
jge
les
hlt
or
sahf
scas
int
push
rorb
push
inc
xor
orb
cmp
out
lea
mov
cmp
clc
push
pop
push
cmpb
ss
imul
inc
shll
mov
dec
cwtl
pop
sbb
dec
adc
mov
pop
xor
insl
mov
add
jns
or
inc
pop
out
sahf
in
lret
les
push
dec
mov
ds
notl
cmp
or
sub
int
mov
es
sub
cmp
sbb
out
js
cmp
lock
ror
sub
bound
int3
jg
add
xorb
mov
ljmp
rolb
cmp
mov
jmp
adc
cmp
fdivs
std
push
pop
mov
es
rclb
mov
or
aam
inc
and
or
aaa
popa
jne
ret
push
outsb
lock
ret
jo
mov
inc
aad
mov
jmp
ljmp
jae
adc
call
pusha
add
ds
cmp
iret
push
mov
lds
add
inc
add
xor
xchg
dec
in
jo
xchg
dec
shlb
test
push
mov
and
outsl
dec
xor
ror
jns
xor
dec
jb
add
shll
and
lock
scas
cltd
mov
icebp
add
mov
imul
cld
pop
addr16
mov
xor
and
mov
insl
sahf
cmp
sub
movsl
fs
mov
and
dec
jb
add
repnz
out
dec
call
gs
fildl
mov
call
cmpl
push
aas
and
cmp
jns
in
js
xor
mov
loope
push
jb
frstor
fcoms
ljmp
dec
and
enter
fs
xlat
pop
or
sub
inc
push
cmp
or
imul
outsl
insb
cmp
dec
xor
aaa
iret
int3
mov
mov
les
cmp
cwtl
sub
push
pop
inc
lret
dec
in
cld
out
push
aad
sbb
scas
xchg
repnz
icebp
adc
push
add
out
imul
or
inc
scas
jbe
mov
cld
dec
gs
leave
ret
fs
push
aam
rcrb
mov
arpl
jb
in
xchg
jl
adc
cmp
outsb
pop
nop
xor
popa
lcall
dec
xor
adc
loop
xchg
dec
xchg
not
sbb
push
into
bound
popa
out
or
nop
test
mov
stos
or
mov
aam
or
add
inc
call
xor
lods
rcrl
pop
push
jecxz
push
das
inc
mov
jmp
push
jnp
ljmp
and
adc
lret
enter
xchg
addb
inc
xchg
dec
mov
jle
ss
inc
or
scas
push
or
dec
movl
mov
adc
popf
testl
pop
dec
pop
sahf
mov
shrl
mov
in
leave
shlb
shl
push
xchg
fldenv
imul
push
mov
stos
inc
mov
loop
dec
outsl
iret
xor
and
adc
in
dec
inc
aad
mov
test
sbb
sete
pop
push
insl
call
jmp
xor
sub
add
shr
daa
clc
mov
pop
or
sbbb
or
mov
dec
sub
lret
hlt
cmp
mov
xchg
cmp
add
nop
cmp
test
sbb
popf
es
sub
cmp
sti
test
xor
fwait
bnd
shlb
pop
sarl
push
mov
or
inc
inc
setp
dec
sbb
sub
cwtl
and
and
sahf
jno
out
pop
xor
adc
push
push
add
push
push
lods
fdivr
rdmsr
scas
lret
add
movsl
cld
mov
mov
pop
aad
fwait
loopne
or
in
cltd
and
and
lods
mov
fidivrs
mov
pushf
je
mov
das
mov
ret
popa
or
js
mov
sbb
pop
cmp
ljmp
dec
in
mov
mov
inc
sub
mov
loopne
and
sbbb
jg
daa
inc
lahf
data16
lret
leave
loopne
mov
cmp
cmp
int3
in
mov
aad
lods
jg
ret
js
fs
xor
push
xchg
mov
repnz
dec
ret
xor
dec
stc
xchg
adc
stos
sahf
pushf
mov
push
popa
jne
xchg
enter
aaa
leave
inc
lcall
andl
int
add
lcall
push
fldcw
and
xchg
xchg
arpl
add
jb
mov
in
aas
push
in
fistps
data16
fcmovnu
frstor
cmp
in
or
mov
mov
mov
add
fcos
mov
imul
scas
pop
jecxz
fmul
fisttpl
pop
fbstp
cmpsb
dec
jecxz
lods
aas
push
shr
sbb
add
out
dec
sub
cwtl
inc
push
loop
inc
movq
cs
pushf
jnp
dec
push
mov
cmp
pop
int
lods
mov
xor
dec
push
mov
cmpsb
and
pop
push
inc
jne
in
pop
cs
fiadds
fxam
sub
pop
mov
cmp
repz
icebp
push
fimull
ds
in
adc
ret
stos
dec
lock
and
and
popa
addb
mov
in
mov
jmp
test
stos
in
int
pop
jnp
imul
mov
stos
movsl
minps
xchg
or
out
jg
jnp
xchg
notb
test
dec
lret
pop
mov
jb
leave
xchg
pop
repnz
jmp
out
inc
out
test
sbbl
cmp
out
inc
aas
pop
jo
inc
push
pop
cmp
dec
inc
fbld
scas
cmp
mov
mov
or
or
inc
xchg
repz
test
mov
rolb
fwait
sub
jg
pop
xchg
lahf
pop
orb
rcr
popa
push
icebp
lahf
ljmp
shlb
sub
fcomp
sub
and
mov
mov
icebp
cmpl
popf
lahf
cmpsb
cs
inc
add
ret
int
movsb
adc
lods
mov
cmp
add
gs
sti
cmpl
shll
sub
sub
sub
lods
adc
ds
je
dec
in
mov
addr16
mov
aam
xor
pop
stc
mov
mov
cmc
js
and
mov
inc
daa
inc
loope
mov
jns
mov
sbb
jne
cltd
aas
les
shrl
cmp
fiaddl
pop
inc
or
adc
aad
inc
fsubrp
xchg
in
out
leave
pop
cmp
or
adc
scas
pop
mov
sub
sub
xlat
xchg
mov
push
mulb
or
inc
in
icebp
mov
orl
pop
pop
or
xor
fs
movsb
cld
movsb
lds
les
lea
insb
mov
dec
leave
dec
js
sbbl
xchg
jle
push
xchg
lahf
mov
xor
sub
xchg
mov
icebp
sub
in
pop
cmc
dec
in
mov
xor
call
or
je
hlt
leave
lods
pop
scas
xchg
add
jbe
adc
sub
test
ss
insl
cli
jmp
into
and
add
xchg
sbb
pop
mov
lods
iret
out
add
push
addr16
gs
pop
pop
xor
jnp
jg
mov
push
add
lret
punpckhdq
xorl
pop
push
or
and
js
testb
pop
lcall
lock
xchg
pushf
imul
lcall
in
daa
jecxz
sub
inc
xor
ret
aas
mov
aad
in
adc
mov
fisubrs
add
movsb
js
out
adc
cmp
dec
outsb
add
mov
adcb
dec
fs
and
jge
icebp
xchg
test
and
push
xchg
mov
or
scas
pop
out
cmp
mov
nop
cmpb
add
jecxz
mov
mov
push
cmp
icebp
adc
mov
push
mov
cmp
hlt
inc
sti
test
mov
ds
or
js
repz
sti
sbb
dec
cmp
stos
lcall
rorb
dec
call
popw
mov
fs
sub
pop
adc
nop
out
adc
jge
test
rep
jo
xchg
repz
pop
xchg
jg
cmc
push
loopne
mov
push
pop
xlat
jp
fucomp
stos
cmp
push
hlt
add
jae
ficoms
jne
cmpsl
add
add
push
xor
add
dec
pop
push
pop
push
out
dec
arpl
pop
pop
lea
int
inc
popa
cmpsb
notb
shll
lret
test
aas
ficomps
std
loop
and
ret
es
dec
mov
sbb
xchg
inc
xchg
lods
mov
lret
inc
inc
add
das
inc
dec
add
and
cld
add
jb
hlt
push
sub
or
inc
adc
test
push
xor
cmp
adc
push
sub
mov
mov
adc
add
je
push
adc
xor
mov
arpl
pop
push
imul
jae
xchg
aas
pop
nop
ficoms
js
fldl
in
into
add
pop
cmc
mov
push
mov
pop
xchg
ljmp
adcb
mov
and
jns
pop
sub
sbb
out
add
js
popa
mov
bound
ja
ds
fwait
pop
loop
outsb
push
insb
mov
and
sbb
inc
inc
add
push
mov
cwtl
into
out
mov
adc
jecxz
stos
inc
popf
sahf
push
jmp
mov
pop
sub
in
aaa
pushf
lret
pop
mov
pop
cmpsl
test
fwait
int3
jbe
lds
rcll
movsb
gs
jno
xorb
lods
fnsave
ja
sub
enter
push
scas
dec
sub
mov
enter
adc
xlat
xchg
scas
insb
test
cmp
pop
aam
les
xchg
stos
pop
scas
mov
test
push
mov
pop
ss
faddl
outsb
popl
and
mov
cmp
inc
and
pop
or
jecxz
test
das
dec
out
imul
pusha
inc
adc
pop
les
add
cmp
rcl
or
cld
cmp
pop
popf
insl
add
jo
rcrb
stos
testl
lods
scas
or
dec
cmp
adc
add
cmp
testl
pop
pop
aam
nop
hlt
mov
adc
lea
into
pop
out
fnstenv
mov
push
daa
sub
inc
fsubs
je
or
cld
mov
jmp
xchg
jno
call
add
stc
cmp
pop
mov
push
lds
nop
push
jb,pn
jnp
test
and
int
imul
add
es
imul
into
add
dec
and
pop
xor
cmpsl
inc
cmp
add
and
mov
cmp
adcl
jle
xor
cwtl
mov
mov
dec
and
add
add
inc
or
lea
movsb
dec
push
outsl
pop
shl
gs
push
mov
das
inc
inc
lods
mov
pop
push
movsl
das
add
cld
lret
add
fisubrl
pop
inc
lret
mov
in
iret
lcall
jae
fsubrs
and
data16
and
jmp
in
aad
es
je
addl
sub
out
mov
and
sahf
cld
cmp
iret
aad
sbb
into
cli
xchg
insl
xchg
loop
shlb
inc
imul
out
jno
sbb
push
pop
dec
js
jns
mov
addr16
adc
push
mov
repnz
jbe
orb
or
out
push
inc
rolb
sbb
pop
insl
xchg
xor
jo
and
or
lods
pop
mov
shrd
out
adc
mov
fisubl
clc
push
jecxz
outsb
fst
mov
clc
and
inc
addb
lock
lret
push
lret
call
out
mov
xchg
gs
mov
xor
inc
adc
jecxz
gs
pop
imul
pop
and
ret
fwait
cmp
lods
sub
add
push
pop
scas
adc
outsb
add
ret
mov
inc
jo
movb
xchg
std
push
ror
daa
push
push
push
jnp
out
loopne
sub
add
pushf
and
aas
adc
sub
mov
lret
ljmp
jns
sub
mov
mov
sub
push
cltd
push
movsb
mov
ja
test
popf
mov
sub
or
and
repnz
rorb
dec
orl
and
test
in
fdivr
sub
mov
pop
mov
aad
movsb
enter
xlat
scas
pusha
outsb
sahf
or
enter
xchg
out
dec
mov
hlt
sbb
or
inc
mov
dec
or
mov
xchg
dec
sahf
ljmp
test
stos
aad
xchg
outsl
les
jecxz
sysenter
push
movsb
sbb
xor
cmp
cli
cltd
jecxz
aaa
pop
insb
scas
jb
inc
pop
scas
xor
mov
and
mov
sahf
sub
jno
daa
pop
je
movsl
sarl
mov
jo
in
pop
add
insb
and
out
or
test
nop
push
daa
push
sti
mov
std
call
andb
dec
add
mov
jge
pop
mov
xor
add
xor
popa
les
lret
cmp
mov
ss
cmp
lods
negb
cld
jg
inc
mov
xchg
imul
in
movsb
scas
scas
aad
and
arpl
push
add
mov
and
jno
cmc
scas
jmp
aad
cmpsl
mov
les
push
sahf
sahf
sub
inc
cmp
push
push
sbbb
cmc
aaa
push
mov
push
jmp
pop
repz
mov
into
test
vcmpps
daa
xchg
or
or
das
xabort
int
xor
and
mov
lcall
stos
outsb
dec
sbb
pop
jnp
pop
lea
mov
or
lea
ss
lock
mov
or
rorb
test
push
mull
lea
push
xorb
mov
and
sbb
loopne
out
out
inc
lods
inc
aas
rcr
lcall
dec
pop
fisttps
mov
mov
xchg
nop
mov
imul
into
por
sub
jge
mov
scas
inc
mov
and
test
xor
and
or
jg
popa
and
nop
int3
cmp
add
fcmovb
pushf
xchg
mov
popa
clc
enter
mov
jns
leave
adc
test
test
addr16
jns
adc
push
pop
jae
testl
lret
imul
add
int
sbb
cmp
aam
movsl
icebp
frstor
mov
or
lcall
pop
mov
push
loope
or
ja,pt
aaa
sub
inc
call
loopne
add
xor
imul
sbbb
outsl
dec
fdivrl
imul
movsb
pusha
sub
movb
rolb
repnz
test
xchg
jecxz
into
cmp
add
fbld
adc
adc
xor
insl
add
cmp
xchg
mov
fistps
insb
aad
adc
cmp
jno
ret
lea
cmc
cltd
in
outsl
test
insl
hlt
hlt
inc
daa
aas
outsb
lods
jno
test
jp
push
push
das
xchg
xchg
lock
arpl
popa
repz
pop
pop
cmp
leave
lcall
jp
and
push
adc
mov
pop
push
inc
or
pop
bound
dec
sub
xor
pop
ljmp
pop
popa
test
add
and
je
jg
dec
and
jg
in
leave
pop
pop
adc
pop
loope
jnp
movsl
stos
mov
pop
mov
pop
sub
ljmp
fnstcw
push
push
loope
mov
xchg
xchg
sub
push
cli
fchs
cmp
pushf
mov
pop
xchg
push
fldl
fstps
enter
and
cld
cmp
jg
and
rcl
test
into
sbb
inc
jl
jbe
xchg
xchg
ss
scas
push
xchg
ljmp
loop
push
cwtl
pop
repnz
add
or
mov
les
pop
cwtl
adc
ret
mov
fnstsw
mov
mov
loopne
loope
hlt
cmp
inc
fistpl
lret
adc
pushl
fnstenv
and
js
shrb
dec
dec
enterw
bound
cmp
mov
sub
imul
push
and
jp
leave
nop
call
aam
test
mulb
mov
sub
pop
sbb
push
push
sub
insl
push
loop
add
jp
popf
cmp
rorb
push
jmp
cld
fcoml
ja
xor
push
arpl
pop
jecxz
pop
sub
push
mov
inc
mov
adc
cltd
pop
lds
data16
and
repz
sub
mov
mov
roll
dec
xchg
mov
sbb
int3
jbe
dec
mov
cmp
arpl
xor
and
aad
push
movsl
adc
sbb
repnz
lods
test
mov
in
pop
pop
cwtl
data16
into
xor
mov
push
sbbb
test
xchg
cmpsl
int3
ret
mov
pop
leave
nop
adc
xchg
jle
add
push
stc
imul
adc
lret
mov
fs
cmp
mov
std
daa
scas
pop
sub
and
out
push
loopne
mov
arpl
iret
add
cltd
std
stos
inc
add
test
rcl
cmp
dec
mov
shll
sbb
xchg
dec
outsb
imul
xchg
inc
adc
jle
jbe
mov
sbb
xchg
cmpsb
enter
fistps
mov
test
mov
movsb
shll
and
push
faddl
cwtl
lcall
mov
xchg
lods
inc
aam
shlb
adc
vxorpd
push
and
rolb
hlt
scas
in
nop
adc
cs
bound
jp
pop
xchg
addl
rcr
inc
pop
cs
pop
icebp
push
pusha
push
stos
dec
popa
dec
repnz
adc
pop
fistpll
notl
jecxz
int3
fcompl
xor
sbb
mov
bound
sbb
rcpps
fisttpl
xchg
iret
lahf
rcrb
add
adc
sbb
lcall
add
call
push
add
test
shrb
test
dec
loope
xchg
lock
ljmp
xlat
enter
jb
out
inc
nop
out
lea
sahf
pop
jl
xchg
pop
je
push
mov
sub
dec
xlat
sub
adc
add
addl
jae
adc
fdiv
or
cmp
fildl
push
dec
cmp
js
imul
or
out
mov
subl
jmp
xor
enter
icebp
aad
bound
push
scas
pop
sub
ss
xor
or
shll
cmp
and
xor
and
mov
movsl
pusha
and
movsl
inc
movsb
or
push
stc
add
imul
movntps
incb
iret
lock
cmp
lock
mov
fdivrs
pop
jge
xor
lret
xor
mov
mov
js
cmpsl
fidivs
loop
les
test
and
cmp
std
jno
pop
mov
js
mov
fucomi
xchg
push
cmpsl
fcmovnb
push
jnp
out
cmp
mov
mov
aaa
lds
sub
jae
xchg
insl
lret
dec
push
or
cld
jmp
out
test
pop
outsb
sub
inc
imul
sub
int3
inc
fmull
loop
jmp
test
xor
outsb
stos
mov
stc
stc
mov
insl
add
jno
push
shl
or
pop
dec
and
xchg
call
xchg
jne
cwtl
mov
mov
ljmp
lock
outsl
push
ret
sarl
mov
dec
cmp
subb
mov
push
add
call
call
clc
mov
xor
pusha
icebp
add
js
int
mov
call
push
mov
and
mov
xlat
mov
and
loop
aas
mov
xlat
nop
xchg
mov
fcoml
pop
fidivl
dec
ja
push
lods
mov
iret
or
pop
repnz
fs
jbe
insb
popa
pop
lods
jb
inc
cmc
push
out
jns
pop
sbb
js
pusha
sub
mov
or
mov
lods
pop
pop
jo
xor
jecxz
pushf
jbe
sub
fdivrp
movsb
mov
imul
sbb
orb
pusha
push
das
dec
aas
test
inc
out
pusha
popa
xorb
je,pn
jmp
lods
or
call
mov
push
loopne
add
jb
mov
ret
push
mov
sbb
jg
fcomps
out
imul
adcl
in
ds
arpl
popa
and
cwtl
adcl
mov
pushf
jae
adcb
dec
jns
outsl
dec
orb
or
add
push
and
js
mov
aam
pop
fidivrs
shll
cmp
testl
sbb
hlt
push
xor
push
adc
mov
js
test
push
or
in
inc
inc
lock
or
mov
repnz
jge
pusha
jb
push
mov
cld
fs
out
xor
push
xchg
sub
out
fnstsw
ret
test
xor
daa
cli
cwtl
dec
pusha
inc
test
mov
inc
ds
testl
dec
sub
stc
add
inc
jae
mov
pop
pop
clc
rolb
jg
and
and
jae
into
mov
sbb
lods
cmp
js
popf
push
ja
mov
lods
mov
xchg
test
cmp
xchg
sub
adc
sahf
adc
push
jbe
lret
lret
xchg
inc
test
out
rcll
shrl
lods
das
or
fisubrs
out
xor
inc
repz
pop
daa
jno
push
pop
ret
xor
rol
arpl
and
js
inc
mov
ficoms
adc
or
sbb
sbb
shlb
ss
mov
enter
mov
je
outsl
divl
cmp
fmull
arpl
and
push
dec
test
fwait
cmp
outsb
push
mov
insb
test
cmp
xchg
mov
cmc
jmp
cmc
add
sbb
mov
push
shll
stos
fadds
jp
jmp
adc
xchg
arpl
pop
rclb
xchg
dec
cld
mov
dec
shrl
addr16
in
jne
ds
and
pop
xor
pop
std
gs
clc
insl
aam
push
and
dec
mov
push
mov
addr16
clc
and
rol
iret
fcmovnu
cmp
pop
nop
sbb
jmp
out
xchg
sub
or
mov
cmp
push
aas
cmp
movsl
inc
mov
inc
sub
push
xlat
xor
and
fisubl
shl
add
dec
dec
mov
scas
test
pop
leave
adc
fidivl
repz
lahf
adc
lahf
shrb
cmpsl
mov
hlt
rcll
mov
mov
or
test
imul
mov
push
mov
stc
jae
enter
ss
dec
push
outsl
imul
sub
les
and
fisubrs
cmpsw
fisubrs
push
push
pop
insb
pop
out
adc
pushf
cs
mov
jnp
mov
adc
and
je
push
cmc
shlb
aas
jp
and
bnd
arpl
and
sbb
jge
add
fdivrp
mov
sub
call
sub
xchg
in
pushl
shlb
ss
cmp
into
inc
jns
lds
jb
or
jne
daa
out
sbb
push
insb
add
mov
cmp
cmp
mov
sub
pop
push
lods
cmpsb
sub
mov
js
popf
sub
loopne
inc
pop
push
fstpl
push
push
fnstsw
and
sub
dec
les
mov
mov
add
gs
shrb
dec
xchg
insb
push
add
movhps
loopne
mov
pop
xchg
adcl
cmpsb
movsl
ror
adc
pop
sti
fwait
ret
ficomps
into
push
ljmp
mov
bound
inc
std
xor
jns
jp
stos
jecxz
push
mov
jp
mov
imul
xchg
iret
outsl
push
ret
loop
hlt
inc
rcrl
sbb
and
in
dec
aas
sbb
idivb
cwtl
sbb
inc
adc
shll
xchg
adc
mov
ss
sbb
jge
mov
xchg
dec
iret
sbb
sbb
orl
mov
cmp
imul
stc
sub
pusha
in
push
fidivl
jo
fiaddl
or
test
call
cmp
lock
in
jae
outsl
and
mov
xchg
movsl
jno
std
push
sbb
jns
dec
mov
jg
dec
adc
bound
lret
insb
jle
sbb
test
or
repnz
adc
pushf
mov
add
pop
cmp
call
push
jg
scas
scas
push
mov
data16
adc
and
lods
dec
jo
cld
cwtl
or
push
lcall
jns
outsb
jg
negb
pushf
jp
jb
mov
xchg
ljmp
cmc
add
mov
sti
mov
and
sbb
imul
out
dec
inc
and
fldl
mov
test
ret
insb
hlt
ret
cmp
add
jge
fmuls
cwtl
loop
ret
js
aad
push
xchg
push
fidivrl
jne
sub
mov
fwait
scas
push
and
sub
xor
adc
nop
inc
sbb
add
mov
fcmovu
hlt
jmp
das
push
jne
mov
movsb
mov
in
movsb
mov
adc
mov
jb
mulb
push
jle
cmp
mov
fnsave
in
xchg
aam
xor
jecxz
mov
loope
xchg
roll
push
dec
push
outsb
mov
scas
pop
jl
dec
rcrb
sub
shrb
test
push
repz
scas
and
lret
mov
sbb
jle
fidivs
movsb
rcrb
push
loop
jne
aam
cmp
cmp
fstps
imulb
mov
push
ds
and
xor
movsl
cmp
fcmove
sahf
inc
cli
inc
repnz
out
xor
or
cmp
stos
inc
sbb
xchg
sbb
into
roll
in
and
test
or
fnstcw
adc
bound
mov
or
pop
test
mov
es
fldcw
cltd
loop
dec
ret
adc
xchg
or
mov
cltd
pop
cmp
fcomps
sub
cltd
sub
stos
mov
pop
mov
pop
es
jecxz
sti
mov
cs
mov
mov
add
cwtl
jge
push
mov
imul
in
xchg
jno
push
ds
scas
loopne
jno
test
adc
jl
xchg
sub
jb
push
subl
lcall
mov
xor
mov
jmp
push
faddl
es
push
out
lret
mov
push
sbb
fsubl
xchg
pop
out
pop
negl
leave
and
rclb
mov
leave
adc
les
adc
dec
adc
pop
in
xor
add
imul
jge
shll
sub
mov
movsb
or
dec
cmpsb
mov
les
fadds
ja
dec
lds
mov
ss
popf
clts
sbb
loopne
addr16
popa
cltd
lods
arpl
lcall
test
or
sbb
into
aaa
mov
pop
out
xchg
lcall
repz
mov
mov
mov
lock
lret
cwtl
pop
and
inc
repnz
enter
xchg
pop
jne
loope
mov
sahf
fs
push
cwtl
into
xor
es
inc
add
cs
ja
xchg
pop
sub
in
mov
push
sti
jo
lods
jbe
mov
pushf
mov
test
dec
xor
test
sub
xor
sub
call
cmp
pop
imul
mov
add
lods
or
rcrb
ja
stos
stos
orl
stos
ficomps
mov
iret
add
popa
jmp
mov
inc
std
setl
inc
cwtl
and
rclb
mov
sbb
int3
pop
mov
cmp
inc
inc
cmp
add
aaa
aad
sbb
xchg
lretw
push
sub
jl
push
cli
nop
js
and
imul
out
dec
sub
pop
mov
hlt
cltd
pushl
cwtl
and
and
nop
xor
adc
sbb
sub
jne
pop
push
test
shll
pusha
test
dec
repnz
adc
push
or
addb
shrb
ss
pop
and
mov
call
mov
mov
je
inc
add
loop
js
mov
lret
inc
cmp
mov
lea
test
and
or
cmp
xchg
lock
sbb
iret
stos
push
adc
push
lcall
jae
adc
lock
adc
lods
mov
adc
jge
sbb
ds
pop
in
cmp
cld
or
push
pop
out
inc
sub
inc
or
add
inc
push
sahf
out
push
add
std
xor
aad
sub
sub
dec
ficomps
xchg
icebp
cli
and
sbb
into
cmpsb
insb
rclb
enter
rol
repnz
shll
push
setle
ror
dec
pop
call
adcb
cltd
adc
lret
mov
mov
popf
mov
mov
xchg
test
ret
in
or
jecxz
lahf
aad
or
xor
cmc
das
sbb
enter
imul
xchg
testb
and
or
xor
xchg
add
push
ficoml
push
enter
dec
xchg
pop
pop
in
xchg
add
adc
xchg
mov
or
sbb
mov
shlb
push
lods
jb
sarb
pop
cmp
int3
sbb
jb
mov
and
and
lock
mov
fsubl
insl
fsts
jl
stos
jp
testb
fdivrl
loope
daa
test
mulb
cmp
js
add
ljmp
dec
std
or
sub
popf
stos
aam
mov
lret
xor
in
rcll
loop
pop
inc
daa
lock
xor
sbb
ljmp
stos
loope
ret
or
movb
mov
ret
movsb
mov
adc
jne
xchg
push
cli
sahf
pop
test
xchg
dec
xchg
pop
jne
inc
mov
loopne
adc
movsl
icebp
pusha
loope
cmp
cmp
popf
mov
leave
inc
sti
jp
test
add
rorl
or
aas
js
addl
pop
jp
push
jo
xlat
ljmp
add
xchg
out
xor
imul
adc
rorb
mov
and
or
setg
mov
adc
int3
ret
frstor
mov
pop
push
lcall
rcl
data16
mov
sbb
scas
jb
cld
fstps
js
ja
dec
mov
test
sub
add
mov
xor
mov
push
lea
cmp
dec
cmp
popf
push
lds
add
in
and
jg
sbb
jle
push
sbb
dec
icebp
jbe
hlt
imul
out
jp
add
inc
in
loop
push
lea
adc
les
xor
fdivr
mov
lods
test
popf
testb
test
fwait
test
mov
lcall
dec
push
and
pop
mov
loop
int3
cmp
adc
fmulp
mov
pop
mov
jb
shll
jl
mov
ret
sub
adc
and
bound
test
jo
in
jnp
popa
sbb
jl
lahf
mov
gs
xor
pushf
out
and
mov
adc
pushf
daa
cmp
mov
cmp
leave
mov
pop
cli
imul
mov
mov
sbb
xchg
xchg
outsl
hlt
insb
mov
mov
xor
enter
addr16
sub
push
jmp
add
xchg
outsb
mov
sbb
or
pop
or
jl
scas
add
adc
arpl
sub
out
ljmp
sub
sub
data16
add
jns
mov
cwtl
lcall
lds
pop
jl
sarl
movsl
ret
mov
pushf
lahf
test
cmpsb
adc
shrb
push
mov
inc
mov
gs
jae
push
clc
movl
ss
pop
stos
mov
arpl
sti
jp
stc
cmp
jecxz
pop
dec
mov
jl
sbb
inc
data16
outsl
leave
movsl
pop
jb
lahf
les
inc
in
pop
or
sahf
and
push
inc
les
cmc
mov
adc
mov
sub
inc
push
mov
cmp
jne
enter
fcoms
mov
adc
xchg
mov
mov
int3
mov
and
xchg
pop
test
pop
ret
dec
scas
ljmp
push
imul
mov
imul
push
dec
and
addr16
shll
fmulp
push
or
into
sbb
repz
jmp
jmp
fistl
or
xchg
lahf
mov
xor
aad
dec
or
lret
gs
icebp
fwait
shll
popf
scas
cmc
int3
mov
rcl
sbb
jno
mov
inc
in
mov
mov
shll
cmpsb
daa
push
jmp
cmp
cmp
mov
std
jns
outsb
orl
adc
jns
dec
test
push
jb
lods
daa
mov
push
inc
xchg
push
sbbl
mov
scas
std
popl
daa
jge
push
inc
cld
test
popf
pop
sbb
in
jp
out
cli
mov
nop
jns
mov
xchg
pmaxsw
mov
fstps
xchg
mov
int3
or
test
inc
out
jo
mov
std
lcall
pop
ss
das
fisubl
push
movsb
jno
rolb
mov
jl
cmp
xchg
or
cmp
xor
outsl
lcall
js
es
mov
cmc
fxch
mov
mov
mov
pushl
push
cmpsb
add
das
mov
mov
pop
outsl
stos
iret
jns
mov
pop
test
jle
orb
insb
jle
ja
pop
mov
lea
or
fnsave
push
jecxz
mov
xlat
fnstsw
imul
jae
xor
dec
push
cli
in
cmp
popa
add
pop
fisttps
xchg
lods
lret
orb
test
int3
orl
xchg
int3
and
push
xchg
inc
dec
push
xchg
dec
inc
enter
inc
aas
mov
or
mov
pop
shrl
xor
xchg
insb
out
daa
xlat
dec
ljmp
push
cmc
addl
dec
or
pop
gs
je
adc
sub
pop
cmp
add
mov
xor
fs
sbb
mov
dec
das
fwait
xor
mov
jle
mov
repnz
das
ljmp
in
pop
xchg
mov
nop
test
enter
or
mov
clc
xor
jmp
or
and
mov
dec
jp
nop
and
enter
sbb
xchg
sahf
sbb
ret
push
pop
sub
out
fstl
pop
mov
mov
dec
inc
mov
jmp
inc
dec
shlb
sub
mov
cmp
or
ljmp
mov
test
pop
jge
dec
out
out
or
cwtl
test
mov
push
cwtl
sub
iret
shrb
and
add
repz
andl
shll
ljmp
test
das
int3
push
dec
mov
notl
pop
xchg
mov
mov
adc
or
pop
pop
popf
or
mov
mov
lods
lahf
jge
or
xchg
cmp
out
jg
add
pop
icebp
sbb
lods
jnp
mov
loope
jne
aas
cmp
mov
add
mov
xor
pop
shrb
pushf
add
cmp
shll
add
xor
dec
push
push
lods
mov
xor
adc
cld
sti
mov
mov
xor
lcall
adc
jle
xor
fbstp
loopne
mov
rcll
sbb
add
lcall
out
xor
js
out
aad
xor
pop
add
jl
repz
sub
decb
test
and
pop
dec
addr16
and
ret
pop
jle
mov
push
lock
insl
pushf
sub
cmpsb
in
inc
sbbb
xchg
dec
enter
dec
cmp
popa
notl
push
movsb
cmp
xchg
sbb
lods
ja
mov
dec
pushl
xchg
mov
fwait
cmpsl
iret
jnp
lds
loop
jp
mov
mov
dec
mov
dec
inc
cmpb
int3
fstps
mov
mov
lea
lock
out
ret
repz
les
decb
ds
mov
in
out
cmc
jb
dec
subb
mov
dec
cmc
cmp
stos
inc
add
pop
mov
mov
addr16
adc
daa
mov
or
daa
bound
nop
neg
aaa
mov
xchg
std
sub
js
xor
testl
sub
out
sbb
gs
lahf
adc
daa
cs
and
dec
jne
arpl
outsb
stc
loope
jb
jle
add
ror
loop
ljmp
mov
lock
adc
aaa
jg
cmpsb
inc
push
push
repnz
pushf
sub
cmpsb
xchg
cli
andl
xchg
jno
lahf
cmp
fisttpl
fnstcw
jbe
mov
dec
data16
inc
cmpsb
shll
mov
outsb
clc
mov
sbb
leave
sub
pusha
jo
cwtl
or
cs
neg
mov
push
clc
xchg
xchg
in
inc
fcom
mov
stos
orb
dec
int
mov
mov
fldcw
mov
mov
or
cmpsb
mov
subb
add
addr16
std
cmp
pop
sub
mov
jnp
sub
and
psubusb
sub
mov
push
sbb
mov
lock
adc
sahf
xor
mov
jecxz
pop
ja
scas
out
mov
xchg
dec
arpl
cmpsl
adcl
push
pop
push
mov
icebp
mov
cmp
mov
cmp
and
mov
cmc
xchg
pop
arpl
inc
dec
out
jno
mov
lcall
in
push
outsb
mov
adc
xchg
push
frstor
fdivp
push
das
push
cmp
mov
push
jns
inc
dec
mov
ds
push
and
sub
inc
cld
mov
xchg
xchg
mov
mov
mov
lret
in
cltd
dec
push
repnz
or
adc
mov
popa
adc
mov
clc
stos
sub
fdivr
mov
xor
xchg
int3
mov
push
push
fchs
dec
scas
nop
xchg
mov
int3
cmp
loop
pop
xor
mov
leave
push
lea
mov
mov
pusha
out
test
cmpsl
ljmp
xor
ss
jb
fidivrs
xchg
out
int3
push
andb
push
mov
inc
pusha
pop
or
add
pusha
cmp
inc
fisubrs
push
loop
adc
xchg
mov
jo
push
daa
pop
mov
shl
stc
into
and
mov
mov
fsts
arpl
add
lods
test
inc
insl
adc
or
or
scas
dec
dec
or
stos
cmp
icebp
mov
dec
lret
push
std
xorl
xchg
add
mov
pusha
outsb
imul
sarb
lods
adc
mov
mov
xchg
inc
enter
push
pop
jecxz
dec
cli
fsts
test
popa
cmp
sti
xchg
je
enter
and
sub
andl
and
mov
jmp
fsubs
pop
aaa
lds
fwait
js
iret
es
cltd
enter
sbb
scas
cmovle
popf
les
push
push
inc
out
shlb
inc
jae
fildl
xor
jnp
and
or
ljmp
rclb
stos
mov
and
cmp
outsb
cmc
push
jecxz
icebp
mov
pusha
add
pop
sub
cs
push
sti
jns
mov
jae
xchg
jb
faddl
mov
xchg
repnz
cld
loopne
mov
cmp
notb
dec
decl
aaa
inc
mov
cld
fistpl
jp
cs
or
in
leave
sarb
das
aam
and
scas
movsl
js
jp
dec
xchg
xchg
dec
inc
mov
std
fdiv
mov
adc
push
mov
mov
outsb
rcrb
add
into
call
test
lea
mov
lea
orb
lods
xor
push
in
sub
cmp
aam
adc
jae
xchg
out
mov
jae
out
mov
rorb
jno
inc
sbb
pop
xor
lea
xor
ficoms
xor
mov
out
ret
xchg
into
ja
inc
push
sahf
shl
mov
inc
imul
rolb
push
adc
pop
push
icebp
push
lret
adc
jmp
pop
pop
movsb
mov
nop
sub
pusha
inc
mov
sarb
dec
mov
xchg
repnz
mov
inc
mov
xor
mov
fstps
pop
xorb
pop
xlat
imul
xor
popa
xchg
jae
add
pop
sbb
ds
xchg
hlt
add
inc
loopne
test
xchg
jno
dec
out
test
push
sub
sti
leave
mov
insl
xor
pop
bnd
aam
shrl
jns
popa
outsl
test
popf
lds
jg
push
fisubs
inc
xchg
add
outsl
test
sub
daa
lahf
lock
jmp
or
lret
mov
call
mov
and
mov
xlat
inc
ret
inc
fnstenv
imul
add
enter
mov
aam
cmp
mov
jo
fbld
out
push
dec
add
test
loop
jg
hlt
int3
fwait
lock
daa
xchg
mov
mov
lret
loopne
daa
imul
imul
add
lahf
xor
dec
scas
and
xchg
movl
xor
or
or
sbb
cmp
orb
daa
xchg
push
clc
push
pushf
sarl
sub
pop
dec
fadds
mov
fwait
mov
stc
rclb
aaa
lods
adcl
or
mov
and
push
sbb
inc
daa
inc
or
shll
add
outsl
call
cltd
daa
cmp
scas
in
ret
mov
fnstsw
mov
and
xchg
popf
inc
dec
popa
jbe
mov
sbb
es
add
push
lea
stc
fcomps
cmp
outsb
pop
in
lds
mov
bnd
in
out
out
out
xor
out
mov
popa
addr16
push
push
cmpsb
xchg
or
lods
ds
push
or
inc
or
fcomps
push
xchg
mov
data16
sbb
testb
cltd
jb
xor
pop
popa
iret
ljmp
es
shrl
imul
dec
adc
lret
pop
in
je
pop
mov
jl
push
movsb
int3
sub
mov
pop
out
rcrl
xchg
repnz
xchg
aas
push
sub
das
pop
rorb
jno
push
lods
mov
and
stos
insb
add
xchg
xor
call
push
sbb
in
lods
inc
setbe
in
xchg
repnz
repnz
mov
daa
arpl
ds
push
divb
xchg
sbb
test
add
or
pop
pop
mov
insl
inc
jns
mov
jns
xchg
pop
or
adc
cmp
out
jnp
xor
mov
sub
xchg
mov
push
iret
cmpsl
jne
adc
jnp
mov
aas
sbb
xor
add
lds
xchg
into
pop
dec
jo
pop
dec
or
mov
sbb
andl
cmpl
js
push
out
frstor
std
inc
push
clc
pushf
xchg
mov
sub
push
or
std
rcrb
test
add
popf
notb
pushf
lret
pop
sbb
sbb
jge
cmpsl
pusha
push
and
mov
xor
or
out
dec
movsl
dec
cltd
insl
adc
fisubs
les
notb
jge
fsubr
shr
inc
imul
cs
test
int3
push
iret
mov
sub
imul
shlb
arpl
dec
int
xchg
aas
imul
popa
repz
lds
lahf
jo
add
adc
test
push
sbb
mov
ljmp
enter
cmp
insl
and
push
push
xor
imul
mov
sbb
mov
jae
in
xor
leave
shlb
imul
adc
fimuls
scas
jp
pop
xor
loope
cmc
sbb
jbe
push
pop
fsubrl
pop
lret
hlt
sub
mov
scas
xchg
push
test
in
mov
and
mov
and
push
movsb
sbb
mov
mov
aad
push
pop
mov
add
test
ja
add
pop
into
sbb
jecxz
cs
mov
das
movsb
xchg
xchg
mov
cli
mov
subb
sti
call
inc
or
stc
cmp
cmp
pcmpeqd
sahf
pop
inc
inc
dec
rclb
cmp
and
out
inc
insb
movsl
mov
repz
jp
stos
push
dec
push
mov
sub
lret
push
outsl
dec
mov
push
mov
push
push
mov
mov
sarl
orl
adc
xchg
arpl
mull
adc
inc
mov
mov
jge
jno
xchg
cmc
in
inc
pop
arpl
ss
cmp
enter
cmp
pop
enter
loop
mov
lret
mov
cld
pop
iret
sahf
dec
cmpsb
add
or
iret
lahf
mov
pop
pop
mov
adc
fcmovnu
out
andl
xor
aad
movsl
ljmp
das
add
xlat
cs
xchg
mov
sahf
push
xor
mov
dec
leave
test
and
sbb
mov
mov
sti
aaa
arpl
sub
lods
enter
outsb
pop
or
negl
or
sti
and
cmp
ljmp
jmp
enter
dec
mov
push
sub
test
pop
xor
cmpsb
xor
in
or
sbb
test
mov
xor
lret
rcrl
les
mov
cmc
jnp
lcall
xchg
mov
pushf
dec
push
dec
cmpsl
add
nop
es
fisubrl
movsb
sti
outsb
in
xchg
mul
inc
dec
fsubrl
mov
mov
pop
sbb
mov
sbb
mov
mov
nop
not
andb
add
into
icebp
pop
push
pushl
in
stos
lods
sub
mov
jle
sbb
sbb
inc
nop
stos
repz
popf
mov
test
xlat
idivl
dec
mov
add
adc
sub
add
push
js
bound
or
clc
dec
mov
push
sbb
jmp
sbb
xchg
adc
adc
pop
pop
sub
mov
out
div
dec
xor
hlt
out
pop
adc
outsb
sahf
js
mov
push
sub
jbe
out
push
mov
xchg
jb
mov
aam
lods
add
int3
mov
jae
scas
push
xor
xor
fidivl
pop
or
frstor
cltd
mov
push
sbb
mov
ret
push
dec
in
int3
sar
and
push
loop
rorb
add
daa
fisubrl
scas
inc
ja
pop
lahf
inc
xchg
cmp
or
mov
xchg
pusha
dec
enter
loop
mov
rcrb
and
sbb
pop
and
lret
xorl
mov
xchg
cmp
ljmp
repz
je
test
int
jecxz
pop
mov
mov
jl
outsb
decl
test
xchg
push
aaa
or
xchg
std
sub
imul
mov
ret
add
out
loope
pop
sar
mov
mov
loopne
hlt
shl
sub
cmp
popf
cmpsl
sbb
das
rcll
hlt
inc
cmpsl
or
lea
adc
sub
sahf
xchg
fstl
lret
add
fldt
dec
ret
mov
dec
cmp
jae
push
xor
mov
jb
movsl
stc
sahf
push
jecxz
adc
push
mov
sub
pop
fincstp
xor
fdivrl
int3
clc
dec
mov
imul
push
pop
push
mov
icebp
cmp
outsl
mov
and
daa
nop
mov
add
cmp
fidivs
fst
mov
out
std
stos
mov
ret
ficomps
dec
int
mov
mov
testl
gs
push
jmp
lea
out
cmpl
in
add
insb
ljmp
and
test
stos
and
and
mov
ror
push
es
xchg
testl
push
pushf
dec
dec
or
pusha
jne
out
mov
and
test
test
leave
sbb
lcall
and
mov
dec
sub
lea
mov
in
icebp
pop
xlat
inc
fdivs
and
mov
adcb
pop
test
popf
inc
ja
jl
pop
sbb
into
cld
mov
pushf
xchg
mov
adc
jo
gs
js
or
mov
stos
insb
mov
pop
insl
pop
add
bound
int3
fwait
cmp
dec
jns
xor
gs
mov
insb
mov
jbe
push
movsl
mov
push
movsl
add
subb
push
xor
and
cli
scas
stos
add
sbb
dec
imul
pop
test
push
sub
test
int3
aam
fiadds
inc
test
sbb
xchg
xchg
cmp
or
adc
jp
mov
jg
or
rcrl
stos
pop
push
and
arpl
jl
and
test
jne
dec
cltd
adc
pop
je
dec
mov
cmp
fcoms
das
dec
mov
jno
stos
popf
xchg
push
nop
xor
sti
loop
inc
js
rcrl
ror
fcomp
mov
jns
outsb
cli
dec
js
mov
push
shl
or
mov
scas
jmp
stos
sub
xchg
pop
je
not
stos
pop
cli
loop
clc
and
orl
push
mov
cmp
add
loop
jae
fdivrl
movsl
loop
or
cmp
stos
les
mov
pop
imul
lahf
ljmp
xor
sbb
xchg
cwtl
std
sti
dec
jp
lods
push
cltd
repnz
push
in
clc
inc
or
cmpsb
lods
lcall
rcr
int3
div
inc
movsl
push
ljmp
push
ss
popa
aam
or
and
inc
mov
lods
fwait
xor
cltd
mov
and
into
mov
fistl
cs
inc
fisubs
mov
jae
push
sub
ret
jle
inc
std
inc
xchg
mov
sub
dec
int3
xchg
stc
mov
push
imul
pop
pop
cli
xor
add
mov
mov
iret
in
xchg
xor
xchg
xor
inc
jns
in
sub
insb
sbb
pushf
cmpsb
sub
aam
popa
scas
popa
repz
jecxz
xor
cwtl
jo
daa
ds
scas
lret
jecxz
jg
pop
test
add
cmp
jle
lret
push
push
das
mov
je
push
mov
sub
fsubr
pushf
iret
fs
sub
lods
push
into
pop
std
arpl
xchg
fistpl
in
pop
lock
xchg
ljmp
inc
scas
sbb
push
aaa
pop
mov
mov
push
sbb
or
jmp
loop
out
cs
inc
out
cmpsb
or
or
adc
sti
scas
cmpsl
add
sbb
adc
jb
or
sbb
shr
nop
mov
inc
mov
aas
je
andb
repz
sbbl
sarb
into
ja
inc
repz
cmp
insb
lret
arpl
mov
inc
mov
cmpsl
push
mov
lea
cmp
inc
or
lods
fwait
stos
mov
mov
ffree
ljmp
sub
mov
sub
test
xor
stc
repz
imull
incb
cltd
sub
aad
scas
sub
jb
loop
arpl
subl
aad
push
test
lret
lret
jecxz
in
arpl
push
jecxz
int
repnz
ss
push
inc
btc
cmpsb
cmp
scas
imul
pusha
push
add
inc
adc
stos
stc
mov
leave
fimull
add
lret
in
lods
in
sub
cld
inc
je
xor
adc
outsl
ja
sub
mov
push
sub
dec
mov
dec
mov
and
sbb
or
xchg
addl
push
mov
xchg
cmpb
inc
fimull
fs
dec
addr16
ds
sbb
ljmp
data16
int3
fldt
icebp
mov
push
into
dec
cwtl
push
out
notl
aas
cmc
mov
enter
mov
sbb
jg
icebp
movsl
movsb
jge
dec
jge
nop
jg
stos
push
mov
lods
sub
jle
pop
jns
fistpl
cwtl
or
cltd
movsl
adc
jne
sbb
sbb
dec
inc
adc
ja
int3
lea
inc
xor
clc
dec
jle
lods
sbb
fdiv
push
popa
icebp
pop
add
sbb
dec
stos
xchg
loopne
in
je
out
js
roll
mov
lahf
sub
or
jp
stc
push
test
ss
shrl
int3
pushf
fldenv
mov
test
fnstenv
lret
pop
cmp
jl
ja
push
dec
mull
pop
cmpsl
pop
mov
imul
cmp
ret
aas
daa
or
scas
jns
push
or
fimull
pop
fucom
mov
adc
ret
mov
sub
and
xchg
fwait
xor
adc
cmp
lods
shll
xchg
push
mov
add
and
xchg
enter
lock
xchg
adc
into
nop
and
jae
mov
inc
in
rcll
outsl
cmp
inc
push
inc
fdivp
cmp
pop
enter
add
mov
ret
scas
dec
cld
nop
xor
jae
mov
adc
xchg
dec
jmp
leave
cltd
out
adc
jecxz
mov
xor
or
sub
sub
pop
fmuls
arpl
fbstp
nop
push
cmp
mov
arpl
and
mov
add
test
filds
outsl
movsb
inc
imul
test
cmp
xchg
and
mov
roll
mov
out
add
int3
mov
jns
ss
lods
add
popa
repz
stc
and
insb
sbb
cmp
sub
sbb
into
sub
inc
mov
scas
cmp
js
xlat
mov
loope
inc
shll
pop
xor
push
movsb
int3
adc
xchg
les
popa
dec
jno
mov
mov
add
lahf
push
mov
push
subb
dec
xchg
int3
in
and
push
gs
inc
and
add
or
jg
sbb
leave
outsb
mov
addr16
push
lods
aad
dec
push
cmp
or
hlt
inc
xor
add
dec
mov
stos
pop
iret
roll
cwtl
mov
jne
xchg
sub
mov
adc
cli
inc
mov
mov
arpl
insb
add
jmp
push
popa
mov
pop
xor
icebp
cltd
mov
mov
out
in
and
std
hlt
jns
pop
push
lea
call
scas
stc
inc
pop
mov
mov
mov
cmp
repz
mov
sbb
lcall
push
xor
xchg
in
rolb
roll
add
xor
enter
pop
dec
adc
mov
es
inc
push
jmp
pop
jne
test
enter
imul
nop
xchg
xchg
imul
pop
pop
inc
cmpsb
orb
out
shlb
xchg
pop
or
mov
je
push
fldt
push
adc
mov
bound
sbb
mov
clc
add
loopne
negl
out
mov
ret
pop
aas
mov
int3
push
pop
sub
push
test
sub
adc
mov
cs
dec
pushl
addr16
les
jp
lods
outsb
ds
ret
or
rcrl
int3
push
mov
hlt
incb
repz
sbb
cmp
adc
pop
pop
and
pop
xor
mov
inc
and
shll
jo
xchg
pop
mov
jecxz
test
sbb
push
lcall
mov
sub
sbb
das
popa
jl
xor
push
scas
inc
push
dec
call
jne
pop
dec
fsubrp
cmp
or
ljmp
arpl
pop
sahf
mov
test
adc
loope
xchg
mov
sti
clc
push
or
and
jecxz
cmp
and
cmpl
mov
mov
cmp
sub
push
enter
push
jb
sbb
idivb
push
int3
or
addr16
cmp
push
inc
mov
xor
sub
adc
and
dec
hlt
sbb
in
dec
jmp
xor
mov
gs
add
pop
cmp
jecxz
ror
push
clc
or
mov
jnp
jns
inc
push
lcall
sub
insb
sbb
in
jle
cmp
xor
cmpsl
inc
cs
jecxz
mov
mov
jne
cmp
inc
jg
enter
movsl
pop
mov
or
scas
xchg
or
push
sbb
dec
add
dec
in
push
and
push
out
test
inc
mov
fildll
sbb
xlat
lcall
mov
jns
jecxz
icebp
imul
mov
pop
in
mov
test
pop
lcall
xor
andb
push
pushf
fistl
inc
data16
inc
add
pop
pop
outsb
lock
push
inc
in
pop
mov
faddp
in
daa
xchg
push
inc
and
adc
rorb
divb
push
and
es
inc
mov
pop
xor
dec
cmc
dec
scas
and
sub
cmp
push
push
lret
push
das
pop
test
imul
sub
cmc
in
or
lods
pop
je
dec
sub
add
pop
push
and
or
mov
and
rorl
test
mov
es
or
xchg
xor
and
or
scas
and
push
cmp
fdivl
repz
push
fistpll
pop
pop
dec
mov
ja
adc
xor
jecxz
cli
xchg
dec
outsb
insl
inc
jo
lcall
jae
jecxz
pop
adc
jge
popf
shrb
fldt
test
and
out
mov
pop
loopne
test
shrb
push
xchg
push
cmpsb
ret
imul
sbb
mov
xor
in
pop
jno
mov
sbb
popa
ret
inc
or
fcompl
je
lahf
mov
in
enter
or
clc
sahf
adc
adc
ss
dec
les
data16
or
xor
dec
into
add
shr
sbb
mov
fldl
push
mov
movsb
sarb
lea
in
in
sub
sbb
push
ljmp
rorl
mov
leave
dec
das
and
flds
mov
sub
fs
xchg
dec
jae
mov
mov
in
or
or
ret
imul
xor
out
das
int3
xchg
and
sahf
or
push
push
dec
data16
shlb
push
mov
or
subb
movsl
gs
push
cmpsl
or
pop
dec
loopne
sbb
mov
pop
xor
xchg
pop
dec
and
add
add
sbb
adc
cmp
push
leave
movsl
and
mov
and
dec
add
fsubr
pop
leave
cltd
lds
stos
mov
popf
loop
insl
sub
stc
int3
hlt
aaa
scas
repz
fcom
adc
jecxz
jnp
or
xchg
in
mov
lds
clc
stos
or
data16
pop
outsl
cmp
mov
jno
ja
xchg
iret
mov
adc
fsubrl
jb
sbb
jmp
or
mov
fcmovbe
and
cltd
rcl
xchg
xchg
mov
orb
outsb
pop
fs
sti
scas
insl
aas
pavgw
cs
push
xchg
sub
xchg
nop
push
inc
repnz
mov
enter
icebp
mov
inc
fistps
test
jge
jno
push
loopne
icebp
in
add
mov
movsb
loope
mov
pop
rcll
or
or
test
in
inc
je
lcall
cmp
cld
sbb
ljmp
adc
leave
mov
mov
and
and
or
inc
sub
es
je
push
lods
add
aaa
mov
inc
mov
fadd
fabs
inc
xchg
mov
outsb
or
inc
mov
sub
shr
add
addr16
lods
fdivrl
shll
cmc
roll
or
shll
loope
sbb
pop
mov
mov
mov
loop
dec
mov
or
mov
and
mov
or
adc
and
addr16
fs
push
loope
test
and
leave
lcall
mov
in
adc
out
aad
outsb
shlb
xlat
popf
in
leave
roll
jge
mul
in
js
lea
jo
cmp
test
mov
out
nop
inc
mov
popa
mov
inc
adc
imul
inc
fs
adc
xchg
xor
dec
call
insl
je
pop
test
sahf
cmpsb
mov
pop
or
jb
clc
xor
mov
or
mov
sub
mov
inc
mov
iret
out
sbb
mov
mov
subl
in
push
es
test
ss
loop
lahf
xchg
or
add
xor
lds
iret
xchg
dec
pop
cmp
cmp
jmp
iret
aam
lea
stos
mov
scas
inc
xlat
jnp
add
fwait
cs
pop
scas
aaa
mov
call
flds
rolb
scas
stos
popf
lock
sbb
insl
sbb
leave
xchg
out
sarb
fdivl
mov
xchg
jne
lret
setbe
fsubp
push
mov
fsubr
add
adc
insl
inc
mov
dec
sahf
cli
loope
filds
testl
add
mov
repz
out
ja
dec
mov
and
xor
mov
xchg
fisttpll
push
mov
pop
clc
lea
je
mov
incb
pop
jnp
movsl
mov
test
inc
icebp
add
arpl
or
inc
js
sti
and
dec
jp
jae
mov
pop
push
pop
xchg
in
in
lods
movsb
in
std
je
sbb
imul
scas
mov
sbb
adc
push
jp
sbb
aam
bound
cs
mov
insb
negl
and
loope
pushf
leave
adc
das
mov
cltd
xor
xchg
xchg
cmp
shll
gs
adc
pop
mov
add
mov
cmpsl
mov
mov
pusha
fisubrl
sub
mov
cmpsb
leave
pushf
add
add
jne
cwtl
clc
pop
lret
lods
in
mov
icebp
xor
mov
in
fldt
loope
in
xor
int
jp
das
push
aad
dec
adc
cmp
mov
push
andb
mov
jno
and
xlat
push
test
jmp
push
adc
cli
push
cmp
cmpb
cltd
mov
push
popf
jbe
or
aam
jno
inc
add
pop
cmpsb
imul
hlt
lahf
mov
aad
in
stos
jle
ss
mov
popa
mov
lods
pop
jmp
pushf
mov
mull
jae
jmp
loope
shll
pop
jns
mov
lock
dec
cmp
pop
aas
xchg
mov
jbe
out
xchg
add
pop
lahf
cmp
test
mov
and
xor
mov
cmp
fimuls
dec
lret
lods
mov
or
or
movsl
push
mov
cmc
and
jnp
inc
adc
jnp
lea
fdivs
add
loope
push
clc
cmp
jg
xor
lret
xor
xor
int3
jmp
gs
and
jmp
and
inc
stos
cmp
sub
in
jo
sbb
loopne
and
leave
cmp
dec
jg
jp
and
cmpsb
xlat
xor
mov
push
inc
orb
in
xor
ljmp
jo
fidivl
sub
xchg
sub
and
xchg
and
enter
push
popf
popf
jno
cmp
xor
cli
sub
loopne
xor
loopne
lods
loop
mov
or
std
add
cwtl
jns
xchg
lods
lods
jnp
cmp
mov
mov
jmp
mov
fnstsw
nop
fdivs
stc
insb
mov
adc
jecxz
dec
and
xor
xchg
mov
cmc
pop
add
push
frstor
inc
lods
xlat
dec
xchg
or
out
or
xchg
xchg
push
jo
xchg
pop
jg
xchg
push
rclb
addl
bnd
rcll
dec
push
cmp
scas
lahf
lock
cmc
imul
pop
dec
pop
mov
out
pop
mov
aaa
xchg
fdiv
aad
push
dec
js
xor
out
mov
adc
xor
add
loopne
pop
mov
dec
mov
xor
push
jno
jl
fidivrl
mov
sub
sbb
cmp
sub
repz
popf
xchg
jp
or
pushf
ficoms
adc
sbb
xchg
dec
cmpsb
dec
leave
sar
cmc
daa
add
adc
in
pop
sub
push
hlt
je
adc
in
add
or
sub
add
dec
mov
push
imul
jnp
cmpsl
pop
fistpll
es
out
cli
dec
in
and
jg
push
mov
xchg
data16
and
jno
mov
dec
ljmp
sbb
aas
inc
rdpmc
jge
cmp
push
jbe
out
stos
jbe
jb
adc
mov
inc
sbb
sbb
pop
or
jo
ficomps
jns
jns
dec
xorb
addr16
sub
inc
jecxz
in
dec
mov
aad
xchg
es
loope
loope
mov
das
dec
out
jne
mov
inc
xor
cmc
lods
mov
dec
mov
test
aad
add
imul
daa
cmc
sub
dec
js
loop
push
mov
adc
dec
out
adc
scas
repnz
in
icebp
cmp
jl
stos
fstpt
pop
rcr
andl
loopne
ret
push
cmp
xor
jae
add
push
inc
mov
push
movsb
xor
pusha
push
insb
pop
fiadds
push
nop
arpl
xor
dec
lds
push
adc
outsl
ja,pn
sub
cli
mov
jl
add
sbb
jg
xchg
out
loop
xchg
es
popa
andl
dec
jge
sub
cmp
pop
sbb
in
push
lret
push
mov
mov
mov
push
fwait
jb
lea
mov
lods
add
cmp
ret
mov
adc
mov
paddw
push
mov
and
push
mov
xor
es
sbb
repnz
clc
mov
and
or
cmp
mov
xlat
stos
cmpsl
jb
nop
inc
pop
pop
pop
mov
mov
add
sub
inc
push
clc
adc
jecxz
mov
sti
add
movsl
loope
ret
xor
gs
and
jno
fcompl
add
pop
xchg
addr16
mov
in
dec
fbld
mov
movsb
rolb
xor
xchg
sbb
inc
cwtl
sbb
cltd
xchg
fs
or
insl
and
dec
pushf
mov
add
pop
lcall
lahf
ret
jmp
push
test
push
pop
int3
cli
dec
aad
add
mov
popa
push
lret
imul
ja
or
sub
mov
mov
mov
rcrb
mov
xchg
xchg
loopne
iret
xchg
add
cld
pop
sub
aas
mov
and
push
xor
in
fcomp
movsb
cmp
call
popf
mov
cmp
std
xor
lret
mov
cwtl
pop
sti
stos
lods
push
inc
mov
imul
lret
in
pop
mov
loopne
jno
iret
aad
popf
jnp
cltd
out
add
dec
dec
xlat
insb
loope
sub
xchg
outsb
push
shr
mov
inc
icebp
icebp
adc
data16
push
fdivrs
xor
or
xchg
pushf
daa
add
pop
setnp
xchg
scas
mov
es
cmpsb
fwait
pop
mov
add
xchg
inc
mov
loopne
xchg
push
pop
jne
dec
ficomps
add
clc
xorl
stos
fcmovnb
jno
pop
in
sbb
or
ljmp
test
xor
push
jne
sbb
mov
pusha
les
icebp
lea
ds
notl
in
xchg
add
jecxz
push
jns
mov
push
adc
arpl
adc
lock
stos
insb
insb
lcall
and
das
mov
fdivs
mov
adc
pop
cwtl
and
xchg
or
repnz
xor
leave
sub
dec
shll
and
mov
out
std
cld
test
cltd
jmp
xor
xchg
xor
and
lahf
and
movsl
sbb
das
adc
mov
sub
ds
int3
cmp
mov
ret
push
cmpsl
cltd
xchg
sub
xchg
mov
xor
fs
loop
jge
out
add
inc
mov
enter
push
and
js
aad
mov
adc
or
mov
sub
test
repz
daa
mov
inc
jae
or
lods
lods
xchg
mov
jae
dec
and
dec
ds
push
lcall
adcl
dec
and
hlt
and
push
xchg
xchg
lds
mov
loope
sub
ss
lds
pop
and
mov
mov
jb
in
in
jb
hlt
lds
rol
jmpw
xchg
xchg
pop
push
loopne
and
inc
lea
dec
mov
mov
add
inc
and
hlt
adc
inc
cmp
dec
jno
jge
sub
enter
add
popf
ljmp
into
idivl
mov
xchg
lods
push
mov
addl
rolb
sub
xlat
lds
sarl
inc
hlt
nop
insb
insl
dec
pop
popa
aad
loope
mov
out
and
jnp
mov
adc
mov
fs
aad
xor
or
test
mov
mov
test
mov
imul
and
xlat
xor
test
stc
daa
cmp
bnd
mov
xlat
sahf
sbb
add
inc
push
dec
add
and
in
push
mov
addl
ror
xchg
cmp
or
add
pop
cmpsb
or
pop
movsb
push
sti
sbb
arpl
in
push
mov
mov
pop
push
push
lcall
or
jg
adc
adc
pop
inc
arpl
fchs
and
das
in
add
jae
outsl
and
popa
aam
adc
dec
push
pop
dec
or
sub
call
sar
xor
movsb
aam
std
xchg
xor
push
jb
aas
inc
pop
push
or
pushf
xchg
mov
jmp
cmp
mov
aaa
mov
push
inc
pushf
jb
js
pop
xchg
fwait
into
pop
lret
scas
imul
cmc
test
or
nop
add
push
jmp
shll
and
jbe
sub
sbb
jns
xor
or
aas
adc
jae
clc
push
xchg
call
pop
jg
insl
sub
adc
fisubrl
sbbb
mov
mov
lret
test
add
rcll
popf
adc
pop
cltd
xchg
out
pop
sbb
sti
fldl2e
int3
push
stos
mov
pop
cs
jle
int3
popf
fimuls
inc
sbb
jno
popf
sbbb
cmp
push
imull
xor
popa
dec
out
mov
add
daa
in
mov
adcb
mov
or
xchg
push
dec
int
fildl
data16
je
xor
lahf
push
iret
push
addr16
cmp
sbb
or
cld
or
testl
jg
test
sbb
adc
cld
inc
mov
mov
sbb
xchg
mov
mov
js
loope
pop
sbb
scas
inc
outsb
add
push
mov
insl
in
mov
adc
push
lods
popa
pop
sbb
and
jne
cmove
cld
push
inc
inc
or
fs
pop
shll
das
pop
and
lods
sub
out
xchg
out
dec
movsl
lds
out
mov
test
inc
daa
cmp
push
daa
sub
rorb
push
xchg
pop
mov
or
push
sbb
dec
int
dec
shll
imul
mov
pop
stos
xchg
in
sti
mov
stos
sub
movsl
scas
lds
sub
sbb
int
out
lahf
out
in
jno
jne
movsb
aam
cli
jbe
rcrl
je
hlt
fmull
push
in
and
orb
dec
loopne,pt
mov
or
mov
pop
popf
loop
cmpsl
dec
pop
push
outsl
push
inc
mov
inc
lret
push
inc
xchg
fnsave
sub
cmp
add
out
sbb
ljmp
cmp
ffree
xor
push
or
mov
push
adc
out
lahf
cmp
repnz
mov
mov
xor
cmp
popa
dec
imul
adc
inc
inc
nop
and
dec
mov
sbb
mov
cmp
push
pop
cmp
pop
in
das
push
nop
movsb
lea
ja
xor
in
dec
test
stc
push
xchg
xchg
sbb
cs
fisttpll
push
dec
inc
popa
int
jno
cld
popa
push
movsl
pop
or
lret
cmp
cmp
cmpl
inc
adc
sbb
cld
lds
inc
nop
cltd
rcrb
jns
ds
sub
mov
cmp
xchg
in
cli
or
jmp
pop
incb
aas
mov
dec
ret
icebp
pop
and
inc
add
lahf
sub
jae
gs
fidivs
outsb
popa
idivb
mov
mov
pop
dec
pop
xor
aad
fs
cmc
push
mov
es
mov
sub
push
dec
ret
fsubrl
fisubl
fidivrs
out
aaa
add
pop
je
lock
lods
jl
ds
push
cmp
test
xor
outsb
sbb
frstor
jp
dec
mov
push
and
scas
push
shlb
out
push
inc
jg
xchg
test
imul
gs
sbb
mov
jne
loop
jns
test
lds
fucomp
push
or
out
out
inc
and
push
sbb
insb
pushf
cmpl
fcmovnbe
negb
jo
cmp
ljmp
inc
add
rcrb
popa
jg
js
add
lods
imulb
stc
lahf
int
lret
mov
in
xchg
enter
imul
add
icebp
sub
test
or
rcll
mov
adc
pusha
and
scas
pop
cs
sub
loopne
mov
pop
sub
adc
add
or
test
inc
cs
filds
adc
and
push
pop
cmpsl
mov
xor
add
decb
dec
adc
lods
jl
clc
push
jp
mov
movsl
lods
lcall
out
cmp
xor
in
sub
mov
add
cmp
movsl
dec
xchg
mov
push
outsb
outsb
sbb
inc
push
xchg
cli
adc
data16
jle
adc
outsb
movsb
in
cmp
mov
mov
mov
push
xor
pop
sti
cmpsl
mov
mov
shrb
lahf
xchg
cmp
shrb
cmpsb
sub
fldt
xchg
mov
sub
sarl
sbbl
jmp
add
inc
js
aas
stc
jge
mov
mov
data16
and
js
call
jb
js
imul
cs
pop
ds
sub
sti
out
ror
jns
or
dec
adc
xchg
sub
js
or
test
lods
mov
dec
adc
mov
ja
repz
aas
loop
lods
arpl
pop
dec
sub
and
lock
incl
popf
incb
test
mov
jbe
sub
bound
jnp
repz
sbb
pop
movsl
push
insl
cwtl
cmpsl
or
fstpl
je
inc
stos
push
shl
int3
cmp
lret
cmpsb
add
hlt
jmp
fs
dec
sbb
rcr
sub
mov
mov
sti
mov
scas
mov
fdivp
and
rcl
xor
enter
in
xor
scas
ds
fsubl
sub
test
and
in
push
popf
xchg
cmp
xor
lret
ljmp
mov
pop
xchg
fisttpl
xor
xchg
aam
movsl
popa
in
jbe
out
jo
mov
adc
movsb
lcall
xor
cmp
stos
fimull
mov
fcoml
loopne
inc
pop
cmp
stos
aam
cmp
cmp
add
iret
mov
repz
cli
jmp
aad
jae
cmp
dec
inc
loopne
mov
jbe
or
lds
in
dec
mov
incl
mov
dec
mov
insl
int3
sahf
or
enter
push
or
cmp
lods
jle
mov
add
mov
enter
loope
or
jnp
fldcw
or
test
adc
sbb
out
sub
les
imul
fs
push
jge
mull
dec
cmpsb
mov
mov
pop
jp
pop
mov
add
and
or
je
mov
sti
pop
lods
push
lea
in
test
fldt
std
mov
adc
test
aas
push
or
sbb
add
or
lcall
cmp
inc
sub
or
cli
jl
sahf
lods
insb
aas
in
roll
dec
out
xor
xchg
stos
lods
lret
mov
std
jp
out
cmpsl
test
dec
mov
and
ljmp
inc
test
fcomps
rcrb
mov
fst
mov
sbb
call
ret
add
add
ficompl
cld
jp
add
sub
jp
scas
sbb
lret
je
insb
and
popa
outsb
sbb
aas
xchg
out
adc
cwtl
int
in
gs
push
sti
in
push
out
jns
mov
out
jl
xchg
test
lea
in
mov
sub
mov
push
push
mov
push
mov
aad
pop
adc
fdivl
cwtl
push
adc
mov
add
mov
enter
das
mov
sbb
sbb
ljmp
repz
dec
aas
adc
xorl
mov
stos
incl
stc
aas
inc
adc
cmp
dec
jb
popf
fs
rolb
pop
fdivl
push
or
xchg
in
data16
mov
jae
lds
scas
pop
push
insb
adc
sbb
mov
sub
sbb
jns
push
xchg
pop
imul
out
lods
push
js
and
sbb
mov
push
daa
jmp
cs
stos
in
insb
sbb
cmp
mov
addr16
arpl
sub
lock
xorb
lret
pop
mov
mov
xchg
stos
mov
scas
push
fsubrs
xor
pop
add
mov
jnp
mov
mov
inc
jecxz
data16
push
push
or
mov
xchg
insl
cld
add
fstpl
aam
ret
dec
dec
adc
cmpsb
sbb
inc
jne
mov
dec
mov
dec
sub
movb
add
push
add
pop
pop
jg
xorb
dec
adc
push
fiadds
sub
fimuls
lods
rcll
lahf
xchg
dec
add
and
nop
bnd
pop
inc
das
andl
add
or
mov
movl
ja
aas
mov
int
sbb
and
mov
inc
jmp
mov
or
pop
std
js
loopew
add
lret
mov
addb
lods
push
sub
jns
jmp
sbbl
cwtl
cmc
push
mov
add
prefetch
xchg
repnz
lods
mov
test
call
andb
sub
jl
mulb
dec
sbb
or
in
xor
fsubrs
dec
push
xchg
orl
aaa
hlt
mov
add
pop
movsb
popa
jle
mov
mov
sbb
mov
jg
sub
hlt
roll
lea
jmp
and
subl
es
pop
cmpsl
xorb
fs
call
scas
xchg
scas
dec
pop
jl
add
add
rol
sti
popa
lcall
cmp
ja
stc
and
fucom
lea
push
andl
leave
or
pop
lods
or
mov
mov
and
cmp
mov
sub
cld
sbb
sub
daa
push
lds
aaa
orb
loop
sbb
dec
insl
out
dec
maskmovq
mull
xchg
inc
pop
jp
xlat
andb
cmp
cmp
inc
pop
cmp
leave
dec
out
push
cwtl
nop
mov
lods
imul
xor
xchg
std
inc
sbb
mov
pop
lods
cmpsb
movsb
dec
imul
fcoms
mov
ret
jmp
or
mov
push
xor
shll
adc
les
mov
xchg
dec
pop
push
je
not
jl
mov
ds
shlb
add
jl
popa
sub
or
push
adc
xchg
mov
pop
les
scas
xor
lea
decl
mov
push
adcl
push
xchg
xor
cmc
mov
test
inc
inc
daa
mull
pop
adc
mov
cmp
into
pop
sub
and
mov
inc
outsl
xchg
and
mov
in
jge
cld
pop
add
add
push
xchg
xrelease
rol
mov
jmp
repz
lahf
mov
and
and
cld
jle
and
and
sub
add
test
push
mov
pop
jnp
fimull
pop
es
lods
jno
dec
cli
mov
sbb
sub
pop
jno
arpl
outsl
and
shrl
jo
xor
add
addl
inc
mov
mov
and
icebp
insb
mov
adc
cmp
hlt
sbb
in
mov
das
sbb
xchg
iret
div
add
dec
outsl
repnz
inc
enter
sti
inc
adc
inc
inc
aaa
adc
push
ret
cs
in
sub
fadds
rorl
xchg
ud2
cmpsb
mov
sahf
mov
cli
add
icebp
insb
jecxz
adc
lret
iret
xor
arpl
xlat
gs
pushf
mov
xchg
int
pop
fstl
scas
pop
inc
ds
aaa
jg
sbb
fs
pop
int3
loopne
das
insb
jno
adc
jle
insl
mov
mov
idivl
bnd
mov
mov
add
ss
cmp
std
dec
fdiv
inc
push
test
sbb
sahf
or
xchg
insb
xchg
push
push
push
push
xor
je
adc
and
and
int
imull
jno
pop
mov
or
add
sub
xchg
pop
hlt
jo,pt
ret
or
leave
mov
inc
mov
mov
movsl
js
mov
jbe
imul
mov
in
jne
int3
testb
pop
ja
fidivrl
stos
mov
out
xlat
or
mov
outsl
or
test
xchg
scas
fdiv
cmp
add
stos
lea
sahf
add
ljmp
jo
test
inc
or
jae
push
cli
pop
push
lahf
push
xchg
dec
sub
xor
and
inc
into
xchg
repz
mov
jbe
loop
fcmovnb
enter
adc
cmovns
std
push
enter
lds
call
popf
mov
mov
jmp
ljmp
lret
imul
pusha
inc
gs
testb
aad
mov
sub
and
nop
in
jmp
mov
movsl
mov
aas
fnstcw
std
dec
insb
cmp
inc
or
add
pop
push
mov
iret
xor
ljmp
sub
fwait
cmp
mov
ds
mov
pop
sahf
inc
adc
sbb
sbb
repz
sub
adc
clc
leave
insl
push
jns
sub
loop
repz
pop
je
leave
and
mov
mov
cmpsb
decl
push
lods
movsl
pop
shll
sbb
and
ljmp
cmp
adc
sub
int3
and
rcrb
test
xchg
cmp
iret
cs
push
pop
pop
bound
push
into
loopne
cmp
mov
mov
imul
push
pop
cmp
movsb
mov
inc
jmp
and
adc
inc
cmpb
and
shld
repz
sub
mov
data16
jmp
add
test
pop
lea
push
jle
loop
xor
jo
das
in
movsl
xor
or
mov
jbe
scas
sbb
jle
std
cli
idivl
inc
mov
iret
xchg
mov
mov
in
mov
xor
rorl
lods
es
pusha
or
lret
fstps
inc
jne
inc
leave
lds
imul
and
adc
test
push
out
ret
mov
inc
lcall
ss
mov
mov
cmpsl
adc
or
xchg
pop
int3
mov
cmc
cs
jns
jns
mov
cmp
push
xor
dec
cmp
jecxz
jmp
jg
jo
jg
pop
mov
sbb
mov
dec
pop
addr16
fdiv
adc
xchg
push
mov
hlt
pop
stos
ret
push
subl
push
push
dec
aaa
cmp
sub
add
ljmp
cmp
rcll
xor
sbb
jmp
rcl
push
or
fcmove
leave
sub
mov
sbb
dec
cld
jg
xorl
insl
push
xor
pop
nop
push
sarl
or
fiadds
xchg
inc
cmpsb
push
jmp
jo
clc
jg
push
lcall
int3
xor
dec
or
inc
xchg
xchg
pop
imul
sarl
sub
jne
add
mov
lret
add
or
jl
and
or
mov
fldt
ljmp
inc
mov
fmul
mov
jae
or
xor
cmpsb
add
bound
loope
mov
stc
cmpsb
dec
mov
xor
inc
stos
inc
dec
push
lods
pusha
fcmovb
xchg
fwait
xor
push
add
xchg
je
sub
arpl
sbb
addr16
mov
adc
shrl
or
fidivs
jge
js
mov
scas
mov
sub
popf
pop
dec
sti
cwtl
iret
lahf
stos
dec
lret
sti
mov
mov
add
imul
subl
mov
jnp
sbb
xor
sbb
inc
dec
push
loopne
pop
adc
in
or
mov
pushf
rorb
pop
mov
or
movsl
jp
jae
pop
sti
push
sbb
aam
ss
mov
jae
push
popf
imulb
andl
mov
dec
or
sub
lcall
mov
mov
mov
stos
mov
push
sahf
add
stc
out
scas
mov
push
adc
xor
test
aaa
push
and
shrb
mov
aas
sbb
cmp
sti
in
mov
and
cmpsb
addr16
inc
jge
xor
hlt
or
xchg
push
dec
mov
mov
inc
aas
pop
adc
mov
icebp
dec
jp
popa
dec
push
cmp
rorl
xor
ja
sbb
mov
adc
mov
jecxz
adc
or
inc
in
fnsave
sub
flds
push
push
ret
sbb
loopne
jnp
fnsave
and
addb
xor
in
mov
pushf
je
scas
leave
push
mov
jecxz
inc
pop
lods
sti
movsb
iret
in
mov
in
sbb
or
mov
inc
push
pop
stc
add
mov
loopne
sahf
ds
xor
adc
jae
lcall
in
cli
sbb
sub
jns
and
sbb
bswap
bound
fsubs
jno
lock
mov
add
outsb
sahf
insl
loopne
rcrb
cmc
mov
imul
xchg
sbb
mov
mov
out
mov
fs
mov
lret
push
shl
cli
mov
xor
out
inc
loope
jecxz
call
push
xchg
adc
push
aad
enter
mov
xor
lods
test
or
xlat
stos
jp
data16
fmull
shll
mov
sbb
fcmovu
lret
dec
mov
and
cs
pavgw
mov
dec
cmp
jmp
mov
xor
jbe
add
ljmp
ljmp
xchg
mov
or
repnz
or
data16
sub
adc
gs
dec
mov
lahf
and
lret
ds
into
xor
mov
hlt
xchg
int3
xchg
xchg
xor
shlb
fwait
jns
add
rorb
xor
pop
mov
mov
out
mov
xor
mulb
mov
outsl
push
mov
bound
popa
dec
loop
jne
pop
jnp
enter
mov
divb
pop
mov
adcl
in
xchg
in
out
cld
mov
adc
imul
sub
inc
pop
iret
in
inc
dec
mov
jp
jmp
sahf
ficompl
mov
mov
adc
pushf
cli
ret
fnstcw
mov
outsl
loope
mov
push
pop
or
adc
sarb
add
jle
and
cmp
inc
or
ficompl
xchg
xor
pop
fcomi
je
test
push
fimuls
fdivrs
add
push
cmp
and
mov
mov
test
xchg
cmp
cmc
lret
push
dec
mov
push
jb
mov
addb
add
lods
pusha
mov
ds
in
cld
adc
fxch
and
aaa
sahf
cmc
movl
ss
push
or
out
lods
ror
sub
cwtl
jmp
insl
sbb
or
vpunpckhbw
inc
int
jl
xchg
inc
pop
lcall
leave
pushf
mov
jl
shll
jbe
xchg
mov
mov
mov
sub
inc
and
jmp
or
xchg
add
xchg
lds
stc
cld
mov
dec
in
xchg
out
movsl
mov
mov
and
pop
mov
mov
dec
mov
in
lods
cmc
ljmp
add
jns
xchg
movsb
mov
sbb
outsb
push
leave
push
jo
sbb
flds
or
popa
movsl
std
std
pop
xor
leave
out
add
les
push
and
arpl
or
lahf
inc
insb
xor
test
movsl
mov
or
lock
cld
fwait
gs
jmp
xor
mov
jecxz
push
inc
sbb
mov
jp
shlb
jp
push
jae
xchg
lret
sbb
dec
pop
adc
adc
aam
xchg
jle
dec
lock
mov
mov
test
ja
fldenv
pop
dec
cwtl
or
cmp
ret
pop
lret
adc
push
mov
mov
rclb
mov
mov
pop
add
adc
cmc
clc
fwait
scas
dec
mov
jge
aas
not
or
and
xchg
out
mov
inc
pop
pop
ret
inc
adc
in
pop
sbb
and
sbb
repnz
ss
and
lds
stc
cld
cwtl
sub
mov
push
xor
mov
lret
jne
push
pop
jp
pop
std
fpatan
cld
xchg
js
out
mov
dec
and
adc
sbb
fidivrl
repz
daa
sbb
push
push
repnz
xchg
xor
push
dec
lock
stos
or
pop
xchg
jmp
ret
mov
lock
scas
cmp
jl
test
sub
pop
sbbl
daa
xchg
clc
sbb
lret
icebp
sub
fbld
inc
or
lods
lds
dec
loope
and
rcr
mov
stos
scas
sti
dec
mov
ljmp
xchg
ds
outsb
test
push
fcoml
sbb
sbb
or
sbb
dec
inc
mov
das
arpl
ja
js
out
mov
and
shl
jg
testb
mov
ret
inc
test
push
mov
movsl
add
scas
pop
in
movzbl
mov
out
sub
sbb
dec
ss
xchg
call
loop
bswap
jecxz
pusha
mov
pop
les
pop
pop
ja
or
cli
stos
dec
xor
add
adc
jnp
and
mov
push
nop
out
test
fstpl
dec
ss
jle,pn
inc
push
leave
lods
push
xor
pushf
mov
lods
jp
xchg
fcomp
push
sub
outsl
xor
rolb
pop
sub
adc
mov
push
sub
in
mov
enter
inc
imul
movsl
sti
jecxz
out
stos
lock
or
mov
jnp
int3
cmp
pop
mov
dec
inc
or
js
aas
mov
jp
shlb
cld
push
cmpl
fnstenv
cmp
pop
dec
lahf
lahf
push
mov
mov
int3
sub
push
stos
testb
mov
repz
pop
jg
add
icebp
jg
test
scas
xchg
out
or
fnstcw
clc
lods
dec
mov
pushf
push
sahf
jns
jo
lret
pop
imul
cmp
fistl
add
adcl
dec
fsts
sub
mov
sarb
in
clc
pop
and
jns
movsl
xor
call
ds
inc
jecxz
nop
cmpsl
lock
daa
popf
rcrb
pop
packsswb
in
fisttpl
mov
stos
test
adc
and
inc
leave
faddl
or
or
inc
iret
inc
pmulhw
fcomp
cmp
lahf
icebp
xor
daa
xchg
test
or
adc
cltd
mov
leave
push
xchg
int3
mov
mov
loopne
inc
lret
add
aas
aam
xchg
in
add
bound
mov
pop
or
jnp
out
adc
cmc
mov
daa
popa
lar
lahf
mov
into
xor
pop
cld
xor
fildll
sub
push
and
push
cltd
fwait
jge
add
xor
or
push
xlat
inc
inc
testb
sbb
mov
call
rorl
adc
cwtl
les
in
mov
rclb
dec
das
cltd
in
cmp
pop
enter
scas
and
cmpsl
xor
mov
mov
mov
int
ss
xchg
xchg
enter
fmull
and
xchg
mov
sub
xor
adc
bound
in
scas
int
mov
jle
aas
mov
pop
jmp
inc
lcall
sub
aas
stc
cmp
inc
int3
in
jecxz
or
pop
xchg
xor
mov
enter
aaa
jp
incb
xchg
xchg
inc
decl
and
pop
sub
xlat
shrb
jbe
insb
sub
push
je
or
mov
mov
das
sub
testl
lods
pushf
mov
repz
cltd
mulb
dec
decl
dec
add
sbb
pop
out
cmpsl
push
pusha
jbe
xlat
xchg
mov
lret
cli
jb
xchg
push
inc
sub
insb
fwait
mov
imul
sahf
cli
mov
sub
out
or
dec
mov
in
mov
push
lods
dec
fisubs
out
sbb
into
mov
daa
sub
xchg
loop
xchg
add
dec
sahf
fstps
xchg
xchg
cli
and
stos
and
loop
mov
insl
rorb
rorb
dec
push
arpl
bound
mov
or
dec
pop
mov
rol
push
ficoms
adc
sbb
insb
or
hlt
in
daa
repnz
int
push
xchg
inc
add
movsl
lret
jecxz
in
xor
push
inc
ret
and
sub
sti
lods
ret
sbb
stos
lock
lods
inc
xchg
test
inc
cmp
dec
jb
sti
pop
xchg
adc
shlb
test
dec
mov
dec
test
cwtl
cmp
push
inc
mov
mov
outsl
xchg
loope
mov
xor
cmp
dec
cmp
daa
out
push
ds
pushl
imul
jno
and
andb
push
push
addr16
sub
clc
cli
mov
push
aaa
pop
stos
mov
rorb
cli
xchg
mov
sahf
dec
mov
mov
or
pop
mov
mov
imul
lret
pop
or
arpl
jle
into
std
sub
fwait
jne
packuswb
dec
mov
sub
das
push
mov
fmuls
xchg
jl
dec
cld
xchg
fstps
stc
arpl
scas
ret
xor
jg
push
add
dec
sbb
add
aaa
ljmp
pop
ret
or
fisttps
fadds
cmpsb
mov
stos
jb
mov
call
ljmp
xor
popa
xlat
or
sbb
dec
pop
jl
je
cmp
xchg
xor
ret
mov
sub
call
dec
pop
xchg
cmp
jbe
adcl
test
and
imull
movsb
outsl
ja
pop
les
notb
jg
lret
imul
mov
repnz
scas
int3
aas
adc
pop
aam
mov
gs
lea
fucomip
mov
xor
fbstp
cli
iret
push
dec
fsubrp
aaa
das
sbb
push
pop
in
mov
cmc
xor
gs
jg
int3
cmp
shll
cli
sub
pop
jle
jbe
mov
jmp
cs
add
push
xchg
dec
mov
mov
pop
popl
jecxz
mov
enter
jg
xor
xlat
call
je
enter
and
pop
mov
cli
mov
xlat
roll
mov
inc
test
dec
xchg
ja
mov
in
push
mov
out
shlb
cmc
in
roll
pop
loopne
inc
aaa
push
test
mov
enter
cmpsb
andb
mov
push
push
dec
dec
stos
adc
sti
jp
adc
testb
mov
mov
cmp
xor
xor
xor
addr16
inc
aam
dec
sbb
fwait
mov
add
add
roll
popf
inc
roll
pop
push
sbb
fmuls
mov
jmp
and
aad
inc
push
lea
xlat
jg
or
sbb
mov
add
push
push
aad
aaa
das
or
add
rcll
or
adc
xor
xor
out
cmpsl
and
inc
js
movsb
gs
mov
shll
sahf
dec
adc
jbe
das
movsb
divl
pushf
push
and
std
sub
aam
mov
iret
sbb
shrb
sarl
dec
pop
jmp
jge
mov
insl
add
mov
addr16
xor
call
sub
imul
adc
sbb
lds
mov
cmpsb
dec
mov
jno
into
push
gs
nop
mov
das
xor
lret
inc
jmp
pop
add
jp
repnz
dec
pop
das
push
sbb
adc
js
mov
fsts
ss
loope
outsl
xor
and
nop
sub
or
mov
and
emms
jbe
out
pop
and
test
or
mov
pop
dec
outsl
aaa
test
add
imul
ss
sub
sub
push
cli
cs
pop
mov
mov
in
xchg
cmp
sub
rorl
or
pop
adc
fidivs
jb
pop
jl
stc
adc
jo
ds
test
cltd
test
cmp
mov
cmpsb
pop
xchg
or
call
insb
or
push
test
in
imul
fstps
pop
pop
dec
cmp
xor
sub
inc
jl
das
call
mov
inc
pop
cmp
cmp
xchg
or
cmp
xchg
and
mov
pop
std
ljmp
push
shlb
cmp
mov
pop
mov
mov
and
mov
jb
mov
xchg
lock
pop
inc
adc
jne
aam
clc
mov
jge
xchg
push
pop
push
xchg
jge
sbb
aas
jno
jmp
insb
xchg
jmp
loop
fstl
xor
and
pop
mov
je
sub
and
decb
mov
inc
inc
push
and
pop
sbb
mov
int3
sbb
mov
movsb
imul
mov
jb
dec
shl
js
jae
add
jg
mov
xor
int
sbb
icebp
test
add
push
push
jno
das
add
lret
insl
jecxz
lahf
inc
jb
fwait
jmp
mov
xchg
mov
push
scas
xchg
jo
push
ja
jg
lods
xchg
mov
dec
dec
out
ror
scas
pop
test
mov
jnp
sbb
repz
icebp
fwait
inc
jne
pop
xlat
mov
lods
jo
cld
dec
dec
mov
adc
outsb
cmp
add
popa
minps
cwtl
outsb
mov
mov
xchg
push
adc
nop
push
push
cltd
push
xor
insb
inc
in
xlat
inc
insb
dec
lret
into
sub
loopne
mov
fsubl
dec
data16
jb
mov
mov
push
cmp
mov
outsl
mov
sbb
lods
movsl
lret
xchg
fldl
ljmp
mov
adc
and
or
push
mov
sti
jecxz
push
cmc
add
fdivs
sti
pop
mov
ret
pop
ljmp
cmc
pushf
popf
inc
inc
nop
rcrb
dec
clc
shll
sbb
push
dec
lcall
xchg
push
fildl
sahf
pop
adc
and
jge
inc
and
xchg
icebp
adc
scas
insl
out
mov
sub
lahf
xchg
cmpsb
movsl
jle
js
dec
fiadds
cmc
and
daa
pop
mov
xlat
movsl
cld
daa
rolb
push
add
dec
adc
jmp
push
xchg
popa
and
scas
jge
cwtl
fldl
xor
dec
inc
and
xor
ds
lcall
aaa
je
inc
jecxz
push
and
rclb
dec
cwtl
divl
mov
sub
lds
repz
jle
std
test
mov
sbb
push
mov
test
pop
fcmovnb
ljmp
fs
ret
int3
popa
fdivr
popa
pop
fisubrs
arpl
pop
and
inc
and
xchg
push
add
jno
hlt
add
pop
jne
or
cmp
xchg
sub
rolb
cmc
mov
lahf
push
sti
stc
lods
es
and
movsb
scas
pop
sbb
cmp
orl
push
loopne
sub
andb
push
xor
ret
nop
dec
dec
movsb
dec
lods
sub
aaa
test
or
jg
cmp
or
cmp
xchg
add
cmp
sbb
inc
mov
das
push
sets
fsubrl
xor
je
fst
popf
mov
stos
pop
addr16
fists
lcall
sbb
sbb
popf
imul
sub
scas
das
mov
jne
xor
adc
into
inc
mov
xor
std
dec
pop
xor
inc
pop
dec
test
fwait
std
adc
cmp
fs
int3
mov
xchg
lds
sbbl
aad
lock
minps
pushf
in
dec
mov
push
lret
aam
pop
popa
adc
cmp
sbb
in
mov
out
jmp
cltd
pop
mov
mov
pop
sbb
aas
cmpsb
push
pop
inc
enter
insb
mov
xchg
mov
sbb
loop
adc
fimuls
out
lods
push
mov
in
inc
add
test
mov
add
sti
cmp
test
in
cmp
cmpb
ficomps
stc
jne
dec
sarb
les
orl
xchg
sahf
js
fdivs
fbld
push
data16
mov
loope
jle
inc
add
and
pop
and
mov
addr16
sub
adc
mov
and
jle
arpl
data16
rclb
sbb
add
nop
push
inc
push
dec
aam
xor
outsl
xchg
or
mov
push
fwait
lods
icebp
inc
mov
cmp
in
cmc
scas
ds
pop
cltd
dec
adc
xchg
sub
lods
shll
js
fidivrl
push
add
lea
cmpsl
call
loope
push
jecxz
mov
repz
fs
jg
xchg
jl
dec
and
loop
nop
test
pop
mov
pop
cmp
gs
adc
cmp
and
out
jno
inc
ljmp
roll
mov
movsb
or
mov
outsl
daa
scas
add
dec
pop
ljmp
pop
fisubrl
and
test
cli
pop
addl
repz
jecxz
pop
inc
jle
cmpl
cmpsb
leave
xlat
ds
mov
icebp
sbb
sub
or
pop
int3
pop
data16
sub
jnp
scas
and
shlb
notl
fcompl
mov
das
pusha
lret
pop
sbb
jo
inc
ficoms
cmp
inc
add
push
test
sbb
dec
or
ret
mov
aas
cmpsb
sub
int3
pushf
or
sbb
call
imul
add
mov
xor
mov
push
sub
push
loope
cmp
xchg
dec
sub
sbb
and
jne
lcall
sahf
pop
ljmp
dec
and
out
dec
addr16
sbb
push
mov
shlb
mov
add
dec
pop
mov
test
pop
lock
adc
gs
push
daa
lods
loop
daa
call
adc
push
loopne
pop
sarl
xchg
sbb
int3
shl
xor
mov
cmp
mov
adc
pop
fidivl
jge
push
inc
and
loopne
idiv
adc
mov
add
or
jle
hlt
out
and
push
jo
loop
test
inc
mov
mov
mov
mov
fstpl
dec
shlb
xchg
subb
mov
mov
xchg
jae
and
fchs
out
jmp
adc
mov
fs
aaa
xor
clc
shrb
cwtl
shl
sbb
pop
pusha
mov
sbb
pop
lds
pushf
imul
push
xchg
mov
push
in
mov
xchg
dec
mov
stos
mov
sbb
xor
push
cmp
xchg
lahf
mov
lods
lock
and
mov
fnstcw
pop
test
clc
add
push
outsl
mov
pop
sbb
mov
leave
cmpsl
mov
or
cmp
mov
pop
sbb
test
aas
push
xchg
outsl
in
add
in
cmc
cli
dec
sub
pop
fisubrl
push
addr16
andl
std
popa
int3
js
pop
dec
push
ss
sbbl
mov
jp
sub
cmpsl
jno
sahf
xchg
dec
jmp
pop
sti
cmp
js
loop
xor
inc
movsl
adc
and
jo
fwait
outsb
in
mov
movsb
xchg
jle
lret
inc
cmpsl
mov
push
push
cmp
call
adc
insb
xchg
mov
mov
push
out
inc
popf
cs
icebp
cli
hlt
fldcw
je
into
loop
xchg
inc
or
xor
lret
fildl
loope
jge
bound
mov
ja
out
out
add
loopne
movsl
jns
mov
jg
pinsrw
and
cltd
outsb
and
sbb
fnsetpm(287
inc
push
loope
ljmp
ja
mov
jnp
sbb
jne
pop
in
add
imul
xchg
adcl
lahf
fldt
cmp
mov
insl
jae
sub
jle
movsb
stos
test
or
in
cmp
push
sbbl
pop
ja
xor
jl
jnp
pop
sbb
je
test
jge
push
cmp
add
je
dec
pop
jecxz
or
cmp
jl
dec
add
repz
pop
dec
out
cmp
sbb
dec
pop
adc
popa
inc
daa
jb
lods
dec
aas
and
inc
mov
popf
xchg
mov
fsubrl
inc
xchg
icebp
mov
mov
dec
in
test
add
sub
dec
ror
sbb
lock
rorb
mov
out
mov
inc
dec
adc
rcrl
lods
hlt
jge
dec
push
stos
cmpsb
lds
add
push
in
pusha
pop
pop
js
push
imul
subl
jns
push
inc
pop
in
mov
mov
lods
pop
shll
jecxz
xchg
push
lods
scas
push
and
and
sbb
sbb
or
mov
aas
loope
jecxz
stos
ret
popf
lret
cmc
lcall
adc
jae
ret
aad
jno
fs
mov
stos
mov
loop
mov
cli
cld
and
rorb
int3
mov
fnstsw
lahf
or
shll
xchg
subb
adc
lahf
adc
push
jo
rolb
pusha
dec
mov
dec
leave
xchg
inc
aaa
stos
divb
or
xchg
xorb
dec
aas
push
pop
je
test
daa
inc
jge
cld
leave
fbstp
shlb
xchg
ret
xlat
pop
fimuls
mov
outsb
pop
int
or
mov
cltd
out
out
mov
xor
ljmp
and
mov
lret
mov
repz
push
imul
lcall
add
scas
aam
mov
push
sahf
push
ret
and
stc
jb
jnp
call
xchg
int
ds
and
aam
mov
test
test
cs
cli
out
dec
cmp
cltd
mov
das
and
scas
add
ds
push
mov
adc
xchg
jge
aam
push
or
push
das
je
loopne
sbb
pop
nop
nop
jns
loope
loope
mov
daa
pop
inc
jnp
mov
push
push
lods
pop
lods
shrb
adc
or
and
je
pop
pop
jne
sbb
fucomp
xchg
ret
lret
outsb
sbb
jmp
push
out
arpl
sbb
aam
sbbb
jae
or
lea
push
push
adc
cwtl
inc
add
loopne
or
push
adc
and
inc
addb
mov
pop
xor
xor
or
xlat
sarb
mov
lods
pushf
out
cwtl
shrb
xchg
cmp
sbb
fidivrl
mov
testb
sbb
dec
lods
stos
shll
call
jbe
test
xlat
data16
daa
aaa
jp
pop
test
lods
movsl
mov
pusha
xchg
cltd
mov
cltd
mov
sub
data16
fdivs
ret
cli
aaa
push
mov
and
repnz
cmpsl
and
lcall
gs
and
aas
shlb
stc
mov
adcb
add
adcb
gs
movsb
jae
out
push
enter
sub
mov
insb
xchg
mov
mov
push
mov
dec
push
add
xchg
mov
fwait
cmpsb
add
adc
mull
adc
jnp
in
imul
ret
fdivrs
sbb
test
mov
out
fnstenv
icebp
incl
ja
jo
add
repnz
mov
rorl
jo
sbb
in
inc
and
add
mov
xor
andb
daa
xorl
loop
mov
in
xor
pop
or
faddl
xor
add
insb
dec
sarb
add
jae
popa
mov
pop
inc
outsb
xchg
pop
adc
stc
mov
rcrl
mov
inc
jp
js
xlat
js
int
stos
pop
and
out
mov
outsl
scas
sti
test
outsb
ss
pop
insl
fs
xchg
cmp
ss
and
enter
cmpsl
in
sbb
nop
cmp
lret
sub
jecxz
push
fcoms
pop
xor
cwtl
sbb
mov
inc
push
into
and
rol
adc
push
shrb
cli
jmp
mov
adc
int
rorb
mov
xchg
add
stos
mov
bound
cld
enter
punpcklbw
mov
jae
inc
mov
out
mov
aas
xchg
cmp
xor
or
jge
pop
sti
inc
sbb
cmc
mov
jecxz
out
cmpsb
dec
or
jns
jge
gs
mov
and
shlb
xlat
lret
mov
xchg
incb
add
jns
dec
cmp
jge
dec
hlt
insb
jns
fs
in
stos
js
xchg
test
inc
push
pop
mov
sub
int3
push
shlb
pop
sub
jo
fbstp
xchg
hlt
imul
sbb
std
xor
or
push
dec
fidivs
enter
lcall
int
xor
dec
sub
repz
xchg
ds
sar
lds
outsl
cli
mov
push
pop
stos
enter
add
sub
cltd
mov
push
int3
cs
in
scas
jecxz
aad
iret
call
loop
test
inc
repnz
test
mov
jl
sbb
jno
mov
aad
and
fs
nop
xchg
add
jb
pop
out
rclb
xor
add
pop
idivl
inc
mov
pop
in
or
aad
mov
repz
cmpsl
jbe
inc
pop
mov
lds
push
fstpt
std
js
pusha
out
shlb
push
or
sub
rol
push
and
lea
mov
in
pushf
arpl
inc
nop
out
js
test
ret
mov
push
and
fdivrl
out
mov
mov
insl
xlat
mov
into
mov
mov
mov
adc
popf
aas
fmul
std
mov
jne
hlt
adc
cmp
test
sbb
dec
xlat
sub
lret
and
add
out
mov
mov
jns
in
addr16
mov
push
cmpb
inc
or
fistl
out
ffree
mov
sub
mov
inc
ret
testb
pop
pusha
jecxz
dec
mov
or
not
dec
jp
xor
leave
mov
push
ja
push
cltd
pop
inc
xor
inc
sbb
scas
pop
mov
jo
inc
rclb
jecxz
std
sub
fs
out
loope
sub
and
inc
mov
sbb
mov
fsubs
les
dec
pop
int3
imul
xchg
mov
in
cmc
push
push
lds
pop
pop
js
pop
test
push
lret
out
out
jno
dec
data16
out
das
sbb
sbb
inc
pop
fs
xchg
rorl
inc
inc
push
test
ror
add
popa
dec
leave
orl
dec
xor
sbb
dec
pop
mov
fsubrp
or
hlt
lahf
sbb
dec
push
rorb
sbb
cmp
mov
xor
inc
mov
mov
mov
cs
sub
dec
and
fnstcw
jle
loope
lahf
or
cmp
notb
ljmp
das
stos
test
loop
add
xchg
cmpsb
fisubs
dec
xchg
sbb
mov
ret
cmp
cmp
xchg
cltd
jbe
int3
mov
jl
gs
push
hlt
push
cmp
test
jge
pop
jl
lea
rol
not
dec
repnz
test
sub
xlat
mov
xor
fstps
stc
mov
push
mov
and
out
or
into
xor
sub
popa
add
sbb
repnz
dec
es
aas
inc
decb
sbb
call
ss
jmp
sahf
in
lcall
jle
push
iret
sbb
loopne
scas
xor
cmp
mov
cmp
push
mov
or
cwtl
leavew
push
test
xchg
dec
dec
mov
scas
adc
scas
lods
jp
xor
scas
in
out
adc
icebp
stos
dec
movsl
sbb
xor
lahf
inc
fnstcw
or
cmpsb
mov
imul
cmp
in
dec
mov
pop
inc
add
or
push
cmp
in
push
aas
test
out
dec
mov
gs
movsl
sahf
int
or
shrl
imul
scas
push
mov
cs
mov
adc
inc
pop
aad
cmp
xchg
mov
mov
je
test
imul
cmp
sahf
inc
mov
bnd
mov
lods
sahf
adc
push
sbb
adc
mov
or
ss
sbb
sub
dec
data16
mov
sarb
stos
mov
jl
call
or
jb
jle
shll
sbb
ret
mov
fistps
xor
push
cmpsb
mov
mov
ret
xchg
xchg
fbstp
jmp
mov
adc
sbb
lret
int3
sbb
mov
mov
sbb
das
pop
push
mov
xor
jae
cmp
das
std
or
icebp
dec
mov
imul
es
xor
mov
sahf
ljmp
std
scas
xchg
out
or
mov
rorl
cmp
arpl
pop
fistpl
cmp
or
test
xchg
xor
pusha
jge
jb
addr16
sbb
mov
pop
inc
and
cmp
mov
jae
push
xor
enter
ret
pop
add
orl
idivb
repz
mov
or
frstor
inc
pop
jmp
mov
aad
in
lods
sarl
push
mov
je
loop
and
sbb
pop
ret
pop
aad
dec
adc
mov
jb
rorl
jno
adcb
push
mov
xchg
addb
add
mov
test
pop
xlat
cmp
icebp
pushf
rorl
ret
xchg
mov
insl
out
repnz
xor
outsl
data16
jg
loop
lahf
fiadds
stos
mov
cmp
iret
mov
or
mov
jbe
repnz
push
dec
loop
call
insb
sub
mov
es
movsl
xor
fwait
inc
add
ror
jno
sar
sbb
lcall
push
mov
negb
ret
push
xchg
jnp
insl
ds
push
xor
mov
adc
shlb
cmp
sbb
mov
cmp
mov
jae
mov
xchg
js
mov
push
sbb
ja
pop
ja
mov
xchg
shrb
les
in
xchg
sub
sub
sbbl
pop
push
stos
shlb
loope
andl
mov
jno
cmp
and
xchg
pop
mov
in
bound
shrb
stc
xchg
fsubr
cmp
xchg
cmp
ja
inc
dec
fsts
hlt
repz
jg
jmp
mov
jg
xchg
ljmp
shr
push
dec
cmp
lret
and
loopne
mov
sahf
imul
cmp
jne
xlat
add
repnz
mov
imul
and
jmp
lret
jge
sbbb
and
subb
int
sub
and
ret
aas
das
rcrb
fs
mov
mov
push
jae
cmp
mov
cli
push
lahf
sbb
je
mov
cmp
fcompl
mov
pop
popf
mov
mov
clc
shlb
clc
or
pop
cmpsl
in
icebp
jns
xor
je
push
aad
lahf
les
inc
add
fwait
jg
and
imull
test
add
cmp
addr16
mov
adc
je
cltd
mov
icebp
xchg
inc
jle
sub
fnsave
imul
pop
xor
movsl
xchg
sub
jecxz
cmpsl
mov
push
sub
ja
aaa
div
xor
mull
jge
dec
push
daa
cli
insl
push
fistpl
sbb
std
inc
in
sti
push
xor
mov
stos
imul
jg
stos
xchg
sbb
add
roll
cltd
mov
icebp
pop
loop
mov
sbb
notb
mov
jno
sbb
pop
inc
jnp
mov
xlat
leave
xchg
mov
xlat
cmp
ja
dec
mov
in
icebp
cs
and
add
pop
stos
mov
fildll
dec
out
jle
scas
xchg
jnp
adc
add
adc
or
in
pop
cmp
subl
push
lahf
xor
pop
adc
jp
fidivl
ss
scas
pop
jl
or
in
adc
xchg
xchg
popa
inc
sub
pop
xor
fbld
mov
out
dec
pop
mov
mov
movsb
pop
in
into
lret
sbb
push
jmp
movsl
mov
lcall
or
mov
mov
outsb
lcall
into
mov
jbe
popf
push
pop
hlt
test
insb
and
jg
or
xchg
mov
dec
jmp
mov
out
pop
rcll
test
jb
xor
and
fsts
pushf
test
adc
fmuls
cs
cmp
call
jl
nop
push
lods
ret
xchg
jns
xor
idivb
ljmp
pop
je
dec
push
mov
adc
outsl
mov
mov
repnz
fldenv
test
ret
sbb
data16
cwtl
test
cmp
add
das
aam
dec
and
repz
mov
sub
mov
jp
sub
inc
repnz
dec
rclb
push
ret
and
lods
mov
cs
gs
jecxz
sbb
out
out
push
lock
sahf
and
fs
bound
icebp
push
loope
cmp
sarl
and
sahf
mov
sbb
imulb
push
mov
shlb
sti
mov
add
mov
ds
fimuls
mov
cmpsl
push
sahf
xchg
cmp
pushf
in
fnstcw
lea
pop
adc
dec
mov
ret
mov
dec
or
jp
xlat
roll
jecxz
lret
mov
aad
xor
arpl
call
fdivl
cmp
lods
mov
shlb
mov
sub
pop
mov
jmp
addr16
xor
repz
mov
in
dec
notl
fildll
test
or
clc
push
mov
cmc
outsb
andb
pop
mov
call
lock
movsb
or
or
andb
outsl
push
and
lods
xchg
mov
mov
movsl
int3
push
sub
ffree
sti
mov
jo
lods
and
adc
clc
mov
insl
push
iret
dec
push
xor
mov
ficoms
scas
fcomps
push
jl
push
pop
addr16
xor
cmc
pop
inc
jno
in
jae
push
fwait
sahf
push
sbb
loop
je
mov
popf
mov
xchg
incl
sbb
pop
mov
outsl
cld
pop
mov
mov
in
pop
in
in
xchg
arpl
cmp
mov
jecxz
xorb
lds
ds
mov
ja
lret
fwait
sbb
pop
mov
mov
dec
sub
repz
sbb
sub
push
fldl
cmp
adc
adc
xor
sarl
repz
sarl
cwtl
ror
mov
std
pop
xchg
in
repnz
add
mov
into
pop
add
dec
inc
pop
mov
sahf
es
inc
shlb
and
add
pop
ficomps
loop
xor
test
mov
dec
jne
test
add
aaa
test
add
cmc
fsts
pop
cmp
mov
sbb
xchg
mov
gs
xchg
sbb
sub
jle
mov
imul
shr
fwait
popf
lret
inc
mov
pop
push
dec
push
notl
push
shrl
cmp
addb
xchg
js
stc
orb
in
scas
es
aad
addb
sbb
and
aas
cmpsl
inc
jmp
dec
leave
mov
notb
testl
push
inc
das
imul
test
sub
dec
aam
push
aad
mov
sbb
pop
adcb
fnsave
into
lret
test
push
arpl
dec
pop
int
mov
push
inc
sub
dec
sahf
xchg
shll
test
jne
cwtl
scas
pop
pushf
cmp
jle
rcll
push
mov
pop
es
sbb
ds
mov
fldcw
add
pop
add
xchg
cs
nop
adcl
idivb
jecxz
jle
adc
mov
dec
add
dec
xchg
cmc
cmp
sub
out
repz
inc
or
rcrb
sub
fs
push
scas
in
fdecstp
out
add
gs
aad
jbe
jno
aam
dec
scas
rcr
addb
cmp
mov
inc
dec
pop
movsl
cmp
xor
out
cli
and
xchg
jg
in
int3
jmp
mov
pop
adc
fstl
ret
rol
push
in
xor
add
loop
mov
xchg
xorb
aaa
inc
popf
test
or
sti
mov
push
fisttps
push
lock
loop
adc
lret
add
ror
inc
movsb
jnp
bound
loope
mov
pop
insb
or
icebp
or
lods
ja
lods
mov
add
outsb
xlat
mov
cmc
cmp
addr16
out
popa
or
lea
sbb
mov
adc
stc
mov
or
jb
lods
int
dec
mov
pop
xor
ljmp
adcl
iret
fldcw
mov
mov
cli
adc
rclb
adc
mov
cld
ja
mov
add
adc
scas
xchg
cmpsb
divb
adc
pushf
ficompl
adcb
sahf
je,pn
jecxz
pop
aam
sahf
xchg
in
out
xlat
jne
push
push
and
mov
adc
push
bound
fbstp
mov
or
cwtl
orl
inc
mov
testb
mov
pop
js
dec
aas
mov
addr16
push
xchg
xor
shll
cmp
jns
push
rol
jp
mov
xor
inc
shll
push
int3
rcrb
inc
icebp
sahf
add
int
inc
push
ja
pop
loope
mov
mov
jno
popl
xlat
pop
repnz
dec
adc
inc
out
push
clc
cmp
iret
pop
pop
adc
jl
std
cmpsl
lcall
dec
mov
sub
mov
dec
aas
scas
outsb
cld
test
in
scas
and
sbb
pop
mov
test
dec
sarb
fiaddl
cmp
loop
cmpsl
pop
stc
mov
cmpsb
out
xchg
nop
popa
jge
lock
jp
or
unpckhps
ds
lret
and
jno
out
dec
and
hlt
lahf
testb
xchg
or
fdivl
dec
outsb
icebp
test
mov
ret
mov
stos
lods
sarl
mov
sub
pop
push
push
movsb
out
push
aas
jge
mov
outsl
in
push
shlb
cmp
cmp
xlat
dec
jg
lcall
out
push
mov
ljmp
ds
mov
or
and
add
or
js
adc
pop
fstpl
lcall
aas
dec
xor
mov
sbb
mov
fsubl
fwait
adc
mov
fisubs
adc
sbb
repnz
rcll
pop
cld
push
jno
push
inc
loope
cld
pop
mov
lret
jae
and
call
jge
out
xchg
cmpsl
inc
daa
stos
push
mov
mov
js
das
xchg
loop
clc
pusha
mov
ficomps
lahf
xor
loope
imul
cmp
or
arpl
jmp
aad
sub
adc
push
pop
ljmp
sub
fcompl
fstps
cmpb
outsb
popa
leave
xchg
xor
jae
sub
cmp
adc
mov
mov
and
mov
inc
push
in
setge
add
shlb
mov
jp
or
pusha
lea
mov
test
mov
cli
mov
lods
outsl
and
add
jbe
add
cltd
in
mov
add
dec
mov
into
push
jnp
fcmovnb
into
test
mov
sarl
xchg
rcll
add
mov
push
mov
aad
daa
sub
imul
xor
and
ja
xlat
inc
loop
inc
cli
dec
add
jecxz
sbb
or
out
xchg
xor
mov
push
xchg
lock
sbb
dec
fldl
ljmp
or
addr16
cltd
insl
pop
jne
test
dec
push
shrb
pop
cmp
dec
in
lds
adc
jmp
inc
mov
or
pusha
mov
cmc
and
dec
sahf
repz
and
daa
call
push
fldt
fisubl
nop
cmp
cmpsl
in
sub
mov
adc
jg
cwtl
mov
roll
andb
dec
add
or
sub
jnp
int3
stos
xlat
mov
adc
cs
mov
xor
xlat
mov
jge
mov
mov
in
inc
rcr
mov
sub
loop
jno
shll
push
cmp
mulb
mov
pop
cmp
jp
xor
mov
lock
pop
and
lock
fdivrl
pop
lds
xlat
xchg
inc
js
xchg
popa
push
jp
xchg
xchg
mov
mov
inc
pop
xor
jb
xor
fisubrl
sub
dec
and
inc
jb
inc
nop
enter
out
lret
xchg
dec
jnp
es
pop
jge
lea
js
sub
outsb
ds
and
xor
out
cwtl
dec
loop
in
xor
push
icebp
in
lahf
scas
std
out
ret
mov
adc
inc
push
cltd
enter
data16
add
jbe
clc
sbb
push
xchg
adc
test
xchg
inc
cmp
cmp
cmp
decb
mov
loope
imul
pushl
pop
lret
sbb
pop
bound
push
stc
and
loope
lods
push
mov
jg
sub
mov
inc
sub
mov
add
mov
sbb
test
aaa
gs
int3
inc
adc
jp
pop
iret
push
mov
push
push
or
cmpsl
dec
lahf
and
ss
and
fisubrl
fwait
jns
in
xor
mov
sub
mov
inc
xchg
aam
xchg
ds
in
jae
xor
int3
xchg
add
test
pushf
aaa
pop
pop
xchg
int
cmp
add
sub
cmpsb
into
pop
nop
adc
xor
aad
icebp
test
das
adc
add
js
in
icebp
mov
adc
sbb
imul
sub
push
mov
xchg
ds
in
repnz
fwait
xor
mov
arpl
mov
negb
adc
mov
bound
testb
lods
out
enter
inc
push
xchg
pop
hlt
stos
cmp
or
lods
pop
mov
jle
fistps
jmp
imull
mov
sbb
lret
dec
mov
xchg
push
cmp
repz
out
adc
ja
sub
xchg
mov
inc
mov
inc
insl
out
iret
inc
xchg
test
ret
push
ret
sti
ss
in
popa
icebp
add
mov
stos
add
daa
or
ss
stos
dec
fs
xchg
adc
jno
jmp
cmp
cltd
sbb
ss
mov
fstpl
int3
or
xor
pcmpeqb
xchg
push
lods
fsubl
enter
adc
mov
movsb
or
sub
mov
adc
push
push
adc
sub
imul
add
popf
fdivl
test
pop
or
lret
xor
adc
fwait
xchg
inc
push
xchg
lods
icebp
jecxz
mov
test
sub
xchg
xchg
cld
ret
xchg
push
pop
lret
or
outsl
in
and
pop
subb
inc
cmp
je
xchg
outsb
fisubs
popf
or
and
lcall
fsub
sub
mov
sbb
es
sub
filds
shrl
gs
repz
xchg
enter
fcomps
outsb
push
push
neg
test
sub
cmp
mov
mov
pushf
adcb
lds
icebp
insl
push
pop
jnp
jns
stc
cmp
add
push
movsb
sbb
frstor
jne
xor
sbb
sbb
insl
sbb
mov
int3
sbb
cli
mov
jb
dec
pop
mov
lcall
lahf
jbe
add
cmc
and
push
sub
movsl
or
inc
popf
hlt
adcl
test
das
xchg
mov
xchg
loop
mov
sbb
ret
pop
repz
and
jnp
or
in
imul
lahf
cmp
rcr
add
sbb
mov
jae
xor
mov
int
xor
jge
inc
jne
mov
or
imul
fwait
lea
outsl
popa
in
subb
dec
sub
or
popa
pop
jmp
movsb
or
xor
xor
dec
adc
xor
mov
mov
cmp
pop
sahf
aas
data16
jg
test
add
ret
out
jg
jnp
mov
mov
cmp
sub
ret
or
jmp
out
nop
jmp
mov
sub
js
pop
push
inc
ficoml
mov
loop
std
jl
jno
sub
mov
call
in
inc
aas
xchg
stos
subl
imul
cmp
sbb
inc
sub
incb
hlt
push
xor
inc
aas
xor
dec
jl
test
dec
fcomip
xor
mov
hlt
push
adc
mov
dec
lods
aaa
lods
in
cwtl
or
jbe
push
in
ss
push
movsl
mov
or
or
ret
das
push
jne
pop
push
sarl
pop
lods
push
pop
andl
in
inc
lock
xor
mov
mov
mov
lahf
xchg
cmpsb
push
fwait
or
mov
dec
adcl
insb
adc
arpl
pop
sub
and
roll
scas
push
jmp
pop
pop
iret
xchg
mov
idivl
push
pop
scas
xor
cmp
xchg
je
pop
pop
shr
xlat
sub
test
add
fcomip
xchg
cmpsb
in
push
jb
and
adcb
ljmp
int3
jp
test
sbb
xchg
xchg
ljmp
jno
ret
test
iret
inc
inc
inc
orb
mov
sbb
xchg
pop
mov
add
inc
cs
and
repnz
adc
or
add
inc
test
mov
lretw
loop
mov
mov
imul
cmp
mov
lcall
outsl
xchg
popa
mov
jno
inc
mov
sub
fdivs
push
call
push
cmpb
pop
cs
dec
addr16
mov
jnp
cmp
out
xchg
cltd
aam
icebp
cmpl
loop
flds
pop
mov
stc
fsubl
int3
popf
push
cld
dec
mov
push
mov
enter
repnz
pusha
test
dec
add
les
dec
sarl
jne
mov
adc
mov
sarl
push
xor
push
mov
dec
dec
and
scas
cmp
out
or
loop
repnz
add
mov
push
repz
dec
and
cld
dec
pop
xor
testl
or
push
pop
inc
sbbl
xchg
xchg
inc
js
push
push
in
sub
push
repz
jnp
adc
xchg
inc
mov
nop
scas
dec
int
fcmovnb
test
and
jae
insb
gs
mov
pop
ljmp
in
adc
pop
rorb
mov
subl
jb
int3
adc
mov
adc
cwtl
icebp
jo,pn
xchg
aas
add
lods
pop
xor
mov
test
lea
lcall
ss
add
mov
sbb
std
call
xchg
int
clc
movsb
pop
dec
pop
ja
ret
testl
fsubs
push
mov
ret
inc
cmp
ret
addr16
cwtl
repnz
push
movsb
push
sti
pop
pop
adc
jb
cltd
xchg
arpl
sbb
mov
mov
sbb
push
int
xchg
ljmp
fbstp
inc
add
mov
decb
sti
popa
ljmp
loopne
xchg
sub
xchg
int3
cmp
and
sub
leave
jb
fcomps
out
les
fcmovnbe
fwait
jnp
insl
mov
jbe
mov
leave
lock
in
repz
pusha
xchg
clc
pop
orb
add
mov
add
sbb
sub
mov
lea
cwtl
call
xor
outsl
imul
ds
icebp
lds
bound
lcall
test
push
shl
pushf
inc
mov
leave
lret
or
xor
in
jns
push
nop
push
fnsave
fs
mov
fists
dec
lret
repz
push
mov
pop
imulb
cmpsb
popf
sub
mov
loope
ror
fcmovnbe
mov
jo
lret
mov
lahf
xchg
ljmp
mov
flds
in
test
shrb
icebp
inc
mov
mov
xor
and
cmpsb
pop
jmp
clc
hlt
sub
or
inc
pop
cmp
xor
std
dec
jae
fdivl
add
popa
inc
and
dec
xchg
inc
bound
and
scas
jl
loope
cmp
push
jmp
js
mov
mov
outsl
lods
mov
sbb
lret
mov
xchg
stc
aaa
lea
pop
daa
rorl
cli
test
outsl
addr16
jmp
dec
cld
mov
or
jo
sbb
xor
mov
fildll
fiadds
lock
add
dec
lret
inc
lods
add
cmp
enter
jle
pop
subl
sub
mov
outsb
andb
insl
mov
mov
jg
mov
lret
andl
mov
xor
cmp
jle
mov
adc
shrb
pop
inc
sub
int
icebp
cld
add
es
out
pop
addl
movsl
stos
movsb
and
fwait
push
in
xchg
mov
push
call
fwait
das
or
icebp
in
pop
jns
dec
push
pop
jnp
enter
push
jo
ret
cld
aad
rcrb
jno
hlt
mov
sahf
jecxz
imul
subl
and
sub
jmp
call
repz
dec
dec
adc
or
cwtl
mov
iret
scas
push
clc
sbb
int
xchg
mov
aad
js
xchg
lods
xor
jo
inc
lret
jge
test
and
adc
and
sub
dec
outsb
fwait
adcb
out
mov
bound
test
xchg
inc
push
cmp
cmpsl
pop
sti
xor
or
rorb
sub
gs
mov
clc
xchg
lcall
and
sbb
imul
rcr
or
dec
enter
mov
mov
lret
jmp
inc
mov
jno
pop
jne
movsb
xchg
sub
into
scas
xlat
mov
push
dec
movsl
test
mov
out
flds
add
sbb
jge
fstpl
aam
imul
ljmp
inc
cmp
hlt
sahf
iret
pop
je
sbb
into
cmp
flds
cs
and
je
mov
sbb
gs
daa
push
dec
inc
mov
xor
xchg
and
mov
js
or
mov
xlat
adc
mov
icebp
mov
aas
push
inc
in
or
mov
ds
ds
sub
xchg
cmp
clc
jo
js
or
adc
push
xchg
pop
jle
push
scas
pop
divb
cmp
dec
or
dec
mov
sbb
outsl
mov
push
xchg
xchg
movl
xorb
popa
push
movsl
or
pop
inc
es
cmp
mov
jmp
pushf
inc
xchg
jmp
xor
dec
push
sti
inc
addr16
loopne
mov
sub
scas
adcl
shr
or
addr16
jno
jg
pop
in
mov
pushf
arpl
in
insb
sub
dec
push
popf
bound
js
daa
sub
sahf
jg
jne
in
std
pmuludq
mov
jg
xchg
inc
in
pmullw
js
add
xchg
dec
push
repz
test
push
mov
sub
cld
dec
pop
and
stos
push
xchg
mov
imul
fs
shll
into
jnp
xor
push
nop
pop
stos
lock
xor
xchg
pop
sbb
sub
or
loop
aaa
insl
rcrb
push
sub
pop
pop
cmp
aam
mov
cmp
in
cmp
movsl
jno
mov
mov
pop
push
divl
and
mov
xlat
cli
jmp
cs
je
sbb
dec
push
xor
jp
jl
or
cmpsl
repnz
jmp
lret
je
mov
jno
dec
jb
mov
dec
sub
hlt
aam
int3
mov
mov
push
cltd
sldt
mov
inc
fwait
repnz
inc
and
int
flds
jge
mov
dec
adc
push
mov
mov
mov
or
xor
mov
popf
movsl
push
or
jge
xor
stos
shll
add
ffree
call
mov
fcom
inc
dec
add
fisttpll
mov
pop
or
cli
ja
pop
pop
and
dec
imul
sbb
xor
push
cmpsl
gs
jl
and
and
lods
ret
jl
insl
pop
jnp
pop
in
in
mov
orb
jb
in
data16
sti
inc
int3
test
xchg
int
mov
adc
jp
xlat
mov
pop
inc
sbb
pop
xchg
rolb
mov
leave
fs
cwtl
andl
mov
cmc
lret
xor
push
mov
je
call
mov
sub
int
arpl
pop
xor
xchg
aaa
adc
rclb
aad
push
add
jo
add
sti
jbe
arpl
mov
loop
fsubrl
inc
mov
clc
daa
dec
dec
and
bound
jnp
mov
rorb
cwtl
or
xchg
aaa
mov
repnz
add
pop
adc
mov
mov
pop
out
inc
and
loopne
shlb
cmp
out
xchg
pop
jnp
pushl
rcrl
gs
mov
mov
fxch
push
scas
cs
and
sub
imul
xor
dec
dec
mov
push
dec
push
imul
incb
rorl
icebp
push
test
mov
lods
gs
add
sub
shrb
add
js
cvtdq2ps
adc
adc
mov
ja
cmp
js
pop
or
lea
xchg
insb
dec
loop
dec
clc
jmp
insl
xchg
out
xlat
cmpb
cmp
scas
or
adc
lds
jge
fldl
mov
pop
jge
out
mov
insb
iret
and
jmp
mov
popf
loopne
lea
mov
lds
sahf
mov
cltd
jle
ret
push
push
and
push
dec
pop
xchg
dec
mov
push
mov
add
sub
mov
ljmp
cmpsl
lret
add
inc
ds
sbb
lret
fs
addl
pop
stos
pushf
imul
js
push
sahf
addr16
cmp
lods
mov
adc
into
mov
lcall
dec
out
in
in
insb
fidivrl
es
pop
and
jo
orb
popf
inc
jg
out
cmc
cmc
int
dec
sbb
mov
repz
xchg
mov
cwtl
xor
dec
aas
fldcw
push
mov
movsl
sub
cld
sahf
lea
imul
movsl
mov
lea
out
jnp
push
and
js
adc
das
adc
mov
inc
sbb
xor
incl
ret
push
scas
and
adc
pop
dec
hlt
sbbb
jo
cmc
mov
jne
pushf
clc
xchg
cmp
lods
cmp
sbb
adc
je
addb
rcrl
stos
inc
jg
pop
mov
xor
mov
cmp
inc
pop
mov
and
jmp
insl
aad
jnp
mov
xchg
and
cltd
jecxz
push
leave
iret
in
enter
daa
mov
and
pop
sub
mov
pop
jae
jae
mov
sbbl
lahf
leave
pusha
fstl
pop
fildl
cmc
sub
pop
sub
push
insl
sti
mov
test
movsl
pop
mov
pop
pop
jno
jmp
add
repnz
hlt
cmpsl
mov
call
push
jmp
jno
jmp
inc
in
jle
xor
fidivrs
fisttpl
mov
aas
imul
clc
arpl
arpl
mov
cmp
mov
ds
call
and
pushf
daa
or
lret
push
mov
sub
mov
cs
dec
cmp
jg
loopne
insb
cmpl
imul
pushf
icebp
push
pop
loope
test
rcrb
lret
mov
insb
ja
fsubrl
fst
cmp
cs
adc
idiv
cs
xor
fstpt
imul
repz
cmc
xor
mov
cs
dec
xor
cwtl
std
push
jge
or
jns
adc
xor
inc
scas
push
pop
addb
popf
adc
sti
inc
pop
and
loope
and
jb
stc
je
daa
add
cmpsb
adc
jp
aad
frstor
hlt
sbb
add
inc
cmp
push
mov
jg
add
shl
lock
mov
dec
sbb
sbb
idivb
cmpxchg
mov
js
xchg
and
dec
das
faddl
cs
pushf
jns
movsb
pop
aam
lock
dec
sub
jle
pop
xchg
mov
mov
and
or
mov
aas
jne
or
xchg
xchg
lret
push
js
adc
std
sub
inc
shll
mov
ficompl
ret
stc
xchg
mov
mov
pop
push
pushf
sub
push
add
or
aad
dec
imul
pop
mov
rclb
jb
fs
dec
mov
and
xor
add
loope
fdivrp
hlt
lds
add
jp
aam
xchg
mov
jo
xor
sbb
mov
out
push
nop
adc
sub
push
ds
pop
bound
testb
int
push
shrb
xor
das
pop
mov
ret
aad
aad
xchg
push
flds
insl
push
jns
aam
stc
clc
sahf
sbb
jg
sar
cmp
in
jle
ret
inc
sbb
rorb
push
fs
lret
addb
ds
push
mov
divb
fisubs
xor
xchg
sbbl
xor
shlb
xor
mov
and
hlt
jg
mov
ss
mov
aam
cmpl
push
dec
push
repz
shrb
ret
pop
aad
sahf
pushf
cmc
pop
nop
icebp
sbb
cmp
orl
sub
lods
test
dec
lods
call
add
insl
dec
fcompl
dec
xchg
sbb
shll
out
dec
xchg
stos
jo
pop
pop
inc
push
inc
inc
sub
insl
add
or
xor
push
pop
loope
sbb
and
test
dec
rorl
xchg
inc
aaa
stos
fadds
inc
cmp
xor
or
xor
cli
faddl
cwtl
push
sar
mov
clc
sub
cmp
or
sbb
sti
gs
jge
stos
inc
pushf
mov
xchg
push
popa
cmpsl
jmp
sub
jecxz
sbb
imulb
cmp
adc
sbb
aam
pusha
jnp
fcmovnb
or
pop
push
repnz
mov
cmc
cmp
int
and
mov
sub
pop
adc
cs
xor
lret
adc
mov
les
pop
mov
mov
push
pop
push
cmp
lret
add
mov
jle
test
dec
out
xchg
jg
jb
gs
les
shrb
sub
jne
push
mov
aaa
cli
in
and
ror
enter
inc
and
mov
and
xor
das
xor
xchg
push
cmc
cmp
mov
popa
push
push
xor
test
out
stc
shrb
jnp
xor
push
js
or
mov
xlat
outsl
mov
mov
jmp
test
popf
mov
and
out
pop
cmpsb
pusha
inc
mov
pop
aas
xor
rcrl
jg
scas
add
adc
call
ret
gs
out
shl
add
jg
cmc
mov
not
add
jg
lret
lods
xchg
cld
test
popf
sub
insl
loope
mov
lea
inc
cmp
dec
iret
cwtl
pop
loope
add
std
aad
or
inc
mov
sub
inc
cmc
add
xor
pop
cmp
mov
pop
xor
dec
xchg
dec
loop
cwtl
adc
lahf
pop
int
out
jns
lret
repz
mov
stos
push
mov
cmpsb
lret
int3
stos
inc
mov
adc
mov
sub
adc
pop
mov
push
fnsave
orb
sti
ret
or
mov
movsb
jnp
rolb
repz
mov
pop
fsubl
cmp
iret
test
jnp
je
dec
out
aaa
iret
loop
pushf
call
mov
jb
mov
mov
mov
pop
and
sbb
sub
dec
xchg
jnp
sub
popf
rcrb
cmp
push
cmp
mov
dec
push
xor
shll
mov
mov
jmp
mov
pop
cltd
xor
leave
into
and
popa
push
push
jl
sbb
loopne
arpl
or
xchg
sbb
out
push
mov
xor
out
push
enter
inc
movsb
pop
sbb
int3
test
js
mov
push
aas
leave
cmpl
dec
cld
aaa
daa
sbb
loopne
pop
jle
xorl
hlt
sub
lods
int3
sbb
loopne
pop
ja
mov
dec
fs
loopne
sub
push
jno
lret
dec
xchg
ret
mov
or
inc
in
xchg
aad
ret
popf
mov
jns
mov
dec
rclb
jbe
jnp
jne
mov
xor
add
mov
mov
int
icebp
outsb
sti
scas
push
xchg
jbe
and
jbe
pop
sbb
fucom
cmp
push
xlat
inc
mov
or
sbb
cmp
or
and
cltd
ret
jecxz
fimuls
jb
jae
loopne
or
push
fs
mov
add
insb
gs
xchg
mov
sub
leave
sbb
icebp
aad
stos
in
popa
sub
stc
jae
adc
mov
jge
pusha
cmp
adc
mov
cmp
in
mov
stos
xlat
enter
mov
push
cltd
iret
inc
call
xchg
add
movsl
into
addr16
add
out
add
inc
testl
xor
aad
pop
pop
pusha
ss
outsl
adc
fbstp
stc
ljmp
push
push
xchg
insb
push
and
cmc
fwait
std
xchg
pop
jae
cmpsl
mov
sbb
xor
push
mov
sahf
test
cmovp
stc
idivb
std
enter
push
dec
pop
leave
add
jmp
mov
stc
xor
test
fistps
inc
adc
cmp
cmp
and
mov
pop
jo
iret
inc
rcl
and
or
mov
mov
cmp
out
into
lret
lret
enter
test
lods
xor
fwait
sbb
mov
arpl
cmp
jae
stos
xor
jno
adc
daa
adc
out
xchg
leave
addl
xchg
cs
mov
or
mov
pop
fs
add
jg
jb
inc
enter
push
out
call
dec
shr
es
push
les
lret
add
mov
mov
xlat
pop
scas
xchg
jecxz
dec
jne
dec
in
or
mov
add
xor
sbb
mov
scas
fisubs
mov
or
leave
add
stos
adc
jae
int3
mov
sbb
adc
lods
jg
xchg
jns
push
in
cwtl
ja
loopne
sub
in
xchg
ret
push
sub
cltd
jne
movsb
mul
out
loopne
shrl
push
shlb
jo
or
push
push
mov
adc
mov
fs
pusha
dec
xor
pop
pop
mov
jo
lcall
or
cmp
push
ds
sbb
cmp
sti
pop
movsl
fnstsw
arpl
jae
loopne
cwtl
ljmp
adc
call
popf
data16
test
cmc
sbb
mov
mov
mov
add
gs
sbb
int
mov
mov
mov
stos
lcall
sub
popf
orl
icebp
test
std
scas
sti
push
pop
sub
addr16
clc
jg
push
ss
lock
fstpl
int
enter
ds
inc
adc
into
add
dec
mov
aas
scas
loopne
add
pop
in
mov
or
rcll
xchg
pop
add
cmc
jne
jecxz
xor
leave
xor
ljmp
mov
pop
int
mov
pop
lds
jno
iret
mov
mov
push
nop
les
jp
adc
shl
and
ficoms
adc
test
mov
cmc
aaa
inc
or
push
stc
stos
bound
mov
inc
or
mov
fdivrl
in
pop
dec
inc
fwait
mov
cmpsb
dec
mov
dec
ret
fcmovbe
pop
adc
scas
sub
adc
mov
outsb
imull
imul
rcrb
int3
in
scas
xchg
inc
cmp
out
fcomp
pop
xor
int
mov
outsl
mov
xor
rol
adc
int
cmpsb
ja
arpl
mov
jae
jmp
mov
cmp
shrl
and
cmp
sub
xor
jmp
popa
in
cli
jae
shl
pusha
lret
lret
ljmp
cmc
subb
add
out
pop
pop
xor
push
inc
adc
mov
cmpsb
jnp
mov
cltd
jle
cmc
mov
in
jbe
lea
fdivrl
ss
jl
dec
or
mov
xor
mov
out
dec
enter
stc
pop
in
ljmp
ja
lock
je
cmp
daa
push
xor
mov
xor
mov
adc
ret
mov
jnp
dec
insb
aas
and
xlat
lret
cltd
mov
dec
push
mov
xor
adc
adc
mov
lods
aaa
push
ret
or
enter
mov
push
or
dec
cs
repz
dec
hlt
jae
cmp
and
insb
lods
pusha
int
sbb
out
or
icebp
push
int
loope
jmp
lock
imul
push
xor
out
ljmp
out
mov
pop
adc
dec
pop
mov
repz
mov
lcall
push
dec
adc
cmpb
xchg
cmp
dec
xchg
insb
outsb
sbb
push
xlat
push
dec
bound
and
sub
imul
inc
hlt
fsubrl
xor
xchg
stc
and
push
imull
push
jbe
mov
adc
adcl
xor
mov
data16
dec
stos
mov
outsl
shl
inc
pop
test
jecxz
push
mov
adc
adc
push
xchg
mov
add
repnz
mov
shlb
icebp
inc
inc
shr
push
out
push
jb
pop
and
xchg
push
inc
inc
dec
test
add
xchg
cli
fistps
aaa
fisubrs
xchg
sbb
add
cmpl
mov
dec
mov
lea
mov
in
dec
test
test
adc
repnz
scas
lock
inc
dec
nop
or
adc
test
out
cld
in
xchg
bound
mov
test
jl
lods
insb
lret
xchg
sarb
stos
test
in
push
loopne
sbb
push
in
mov
sbb
cwtl
in
cld
add
lock
xor
add
xor
push
dec
fmuls
lret
movl
xor
jne
fsubrs
cmp
pop
loop
jp
les
sbb
and
mov
aas
push
fwait
imul
cmpl
mov
sbb
std
leave
arpl
mov
inc
xchg
dec
xchg
sub
rorl
cmp
test
cmp
xor
push
mov
add
dec
mov
cwtl
ret
inc
stos
rcl
popf
mov
clc
sbb
xchg
xor
adc
xor
push
or
xor
dec
dec
lret
test
and
sbb
out
pop
loope
and
aam
test
aam
pop
xchg
imul
cltd
sbb
add
inc
popf
push
mov
xchg
and
movsb
lcall
inc
out
ljmp
jle
sbb
xor
les
fimull
or
out
inc
hlt
jecxz
jl
cld
push
inc
out
fstps
hlt
adc
movsl
pop
pop
or
inc
mov
cmpsb
stc
pop
test
sahf
cltd
ljmp
fdivrs
mov
lock
rcll
xor
push
push
pop
dec
and
mov
pusha
sbb
cmp
cmp
lea
mov
sub
mov
inc
adc
mov
or
jl
cmpsb
jb
in
rcrb
inc
jae
outsl
fdivrl
push
jno
dec
rorl
mov
pop
in
mov
int
sub
testb
cmc
mov
into
test
adc
ret
stos
fiadds
jmp
dec
and
fidivrs
fcmovne
arpl
in
push
xor
add
jp
sub
push
ficoml
jmp
mov
mov
pop
or
pop
dec
add
push
negl
sub
sub
rorb
pop
push
push
daa
mov
insl
fsubrs
dec
xor
inc
jae
insb
pop
std
pop
mov
cld
mov
adc
cld
xchg
sarb
repz
les
nop
in
cs
xor
jne
dec
cmp
sbb
jno
es
sahf
dec
cs
aad
jp
ja
hlt
ss
cmp
cmpsb
xor
pop
or
lds
lea
or
add
xchg
ja
and
inc
sbb
cmp
fnsave
sti
cmp
and
mov
inc
lcall
arpl
lea
fisubrl
dec
int
fdivrp
fdivrp
movsb
insl
int3
lret
jb
sbb
inc
jmp
data16
enter
aam
pop
xlat
pop
mov
xchg
jae
mov
inc
push
or
cld
out
stc
pop
or
mov
shrl
stos
adc
xor
mov
mov
sbbb
imul
push
inc
mov
into
adc
scas
pushf
mov
ja
in
jecxz
jne
je
mov
xchg
mov
in
and
pop
xchg
mov
je
int3
jg
daa
or
push
jno
lods
ss
sti
nop
sub
jbe
fsts
xchg
pop
adc
jne
cs
sbb
or
out
xor
jb
xchg
into
or
push
xor
gs
int
sub
ss
jb
push
jo
std
xchg
add
pop
sbb
scas
loope
outsl
imul
jp
sbb
and
rcr
xchg
lods
xor
or
and
int
xor
cltd
mov
jnp
or
fs
pop
xchg
scas
fsubp
lds
mov
aad
pop
inc
imul
movsb
or
aaa
dec
scas
repnz
bound
mov
dec
jl
jns
jmp
jne
movsb
pop
sbb
test
sbb
mov
cmpb
push
pop
push
and
xor
xchg
orb
add
ljmp
dec
jbe
loopne
push
add
add
das
mov
pop
push
shll
add
movsb
test
cwtl
shrb
xchg
xor
xor
pop
xchg
aad
adc
add
icebp
sub
stc
sbb
xchg
aas
imul
mov
inc
jb
sbb
imul
sbb
xchg
cmpsl
and
xor
or
daa
adc
xor
inc
jno
hlt
and
ljmp
andb
inc
fiaddl
stc
push
push
cmpsl
dec
cmpsl
cmc
aas
gs
xchg
cmpsl
ss
jecxz
imul
loope
dec
cwtl
in
shrl
mov
decb
adc
das
ljmp
xor
jmp
mov
cmp
int
orb
mov
push
lods
lahf
mov
xchg
push
repnz
idivb
stos
mov
pop
shll
xor
adc
call
out
pop
sub
push
out
out
cmp
lock
sub
loopne
jl
icebp
test
stc
and
or
jbe
lret
inc
stc
mov
xor
lret
mov
xchg
or
fwait
dec
and
add
and
mov
cmp
lock
mov
fcmovnu
inc
out
push
stos
cmp
pop
xchg
and
rorl
push
pop
mov
pop
add
into
inc
ljmp
pop
dec
rol
outsl
xor
fndisi(8087
mov
cwtl
inc
xor
prefetchwt1
rcpps
cmp
aam
cmp
in
lods
int
dec
out
lahf
dec
loop
and
push
xchg
jg
jp
lret
jno
lcall
xor
add
loope
out
sahf
iret
out
mov
insl
popf
xor
dec
dec
jns
add
inc
sbb
xor
out
dec
and
sbb
pop
hlt
cmp
push
sahf
mov
jo
in
mov
mov
sub
insl
pop
cmc
mov
fcmovnbe
push
pop
jne
mov
lds
mov
movsb
in
repz
arpl
add
sbb
adc
adc
inc
cmp
jg
imul
or
inc
test
dec
test
adc
cs
subps
pop
lret
int3
cli
cwtl
loopne
sub
cmp
stos
roll
aad
pop
pop
mov
popf
sbb
add
adc
adc
or
sbb
mov
stc
in
aam
insl
fisttps
flds
cwtl
fs
les
dec
cmp
adc
xchg
mov
popf
mov
lods
or
add
fwait
pop
test
xchg
or
or
mov
iret
stos
adc
xor
mov
call
xor
add
pop
int3
fcmove
add
call
stc
shrl
loopne
push
fnstsw
shrl
cmp
mov
cmpsl
insl
mov
sbb
xchg
push
push
scas
fnsave
nopl
sbb
fistl
enter
xchg
jo
cmp
mov
aam
loopne
cmp
mov
pop
ja
or
sbb
ret
add
or
push
fildl
xadd
push
mov
xor
inc
mov
xchg
xchg
nop
mov
imulb
jns
out
fnstsw
sbb
imul
cmp
mov
cltd
addr16
aas
sbb
ret
mov
xor
scas
lcall
xchg
dec
out
add
xor
push
bound
lahf
or
test
les
jge
mov
push
test
xchg
sub
aas
and
mov
shr
enter
mov
jg
fdivr
iret
lock
inc
xchg
jo
int3
xor
push
mov
inc
sub
sbb
daa
aad
psrlq
rorl
or
ds
outsb
mov
dec
cmp
sub
ret
bound
mov
paddusw
vhaddpd
out
or
inc
mov
orl
addr16
mov
mov
sahf
xor
mov
shrl
aad
xchg
sbb
pop
pop
sbbb
sub
test
inc
mov
lahf
insb
test
stc
mov
ja
cs
leave
mov
daa
or
mov
lods
mov
cmp
ss
pop
scas
aaa
popa
in
in
jge
sahf
les
or
dec
jb
inc
hlt
pop
and
jg
xor
inc
pop
adc
aas
push
enter
mov
ret
sub
scas
insl
lea
push
and
mov
aad
or
mov
jp
sarl
sub
push
sbb
fcompp
xlat
inc
adc
mov
and
pop
mov
rorl
cmp
cwtl
movsb
add
xchg
inc
xor
lret
nop
hlt
jl
adc
out
shrl
ja
pusha
pusha
xor
and
or
mov
jp
divl
fadds
mov
and
cmp
frstor
pop
movsl
xchg
mov
loop
cs
jl,pt
rorb
clc
mov
sbb
cmc
inc
mov
imul
pop
and
and
dec
addb
xor
adc
ds
push
enter
pop
jb
sbb
sahf
cmpsb
cmpsb
mov
pop
lahf
xchg
sub
sahf
out
adc
ss
in
or
mov
push
mov
mov
sbb
rcrl
pop
pop
add
xor
insb
or
jge
mov
sbb
stos
jmp
pop
pop
add
nop
sbb
sub
ret
adc
ds
icebp
mov
pusha
mov
notb
idivl
out
movsl
into
mov
mov
jne
pop
add
mov
aas
jle
push
sbb
fcoms
push
pop
out
push
insb
jmp
gs
mov
xchg
jmp
filds
fisubrs
sub
dec
push
test
push
push
and
push
insl
mov
subl
int3
shrl
rcrl
inc
mov
or
and
and
mov
bound
and
add
sbb
aam
push
mov
or
insb
test
repnz
adc
rcrl
lods
and
push
loope
stos
xchg
jecxz
jnp
pusha
pop
enter
shr
push
ss
dec
mov
movsb
imul
imul
fsts
lcall
jle
jnp
push
mov
aaa
addr16
outsl
loop
cmp
pop
insb
add
scas
orps
pop
ljmp
pop
pop
mov
cmp
cltd
mov
inc
xor
mov
jge
mov
cs
cwtl
fst
fsts
add
scas
fbstp
add
xor
pop
push
lret
and
call
bound
sub
mov
mov
mov
mov
out
aam
inc
adc
subb
cmpsb
pop
and
lahf
sbb
pop
es
dec
and
inc
adc
sbb
xor
test
icebp
and
cmp
jl
sbb
add
cmp
jae
arpl
mov
jl
dec
and
movsb
mov
pop
out
jmp
pop
jo
fisttpl
or
shll
push
mov
in
mov
in
aas
subl
and
push
sysexit
in
popa
pop
pop
xchg
punpckldq
into
push
add
call
aad
aas
popa
out
mov
into
jg
push
mov
leave
fbld
shlb
lret
int3
jmp
aad
push
mov
add
mov
push
cmpsb
xchg
or
hlt
mov
ja
cli
cmp
and
xchg
fxch
ret
out
cltd
adc
lahf
mov
mov
sub
fwait
mov
call
sahf
mov
repnz
enter
lret
pushl
mov
lret
mov
fbstp
pushf
out
jo
fidivs
in
clc
scas
int3
pushf
pop
push
xchg
jbe
out
cwtl
outsb
inc
test
jnp
fisttps
sbb
movsb
push
sbb
cwtl
lock
lods
mov
sar
ffreep
imul
mov
fucom
dec
cmp
push
in
xchg
fnstenv
ja
jge
add
aas
out
cmp
xchg
mov
adc
popf
icebp
dec
add
inc
adc
outsl
cmp
xchg
xchg
ret
jno
sbb
std
cmovns
ret
cmp
lret
insb
icebp
rcrl
int3
sub
mov
dec
incl
ret
loopne
xor
in
xchg
jmp
sbb
mov
xchg
xchg
je
aam
aas
imul
xchg
xlat
pop
cltd
lcall
sti
bnd
movsb
es
sub
or
xor
jge
mov
stos
dec
xor
out
lds
jns
nopl
mov
mov
in
lods
orb
std
and
cmp
lret
out
or
sub
into
xor
fstpl
aas
xor
xchg
shll
adc
mov
js
out
ljmp
daa
dec
dec
pop
sub
std
lret
mov
clc
in
in
outsl
in
inc
insl
mov
out
xor
lods
frstor
loop
in
movsl
in
movsb
adc
ljmp
jge
lahf
bound
adc
inc
mov
pop
test
clc
callw
sbb
inc
xor
jmp
mov
jbe
lret
mov
repz
add
lods
imul
dec
jl
dec
mov
ja
test
cmp
xchg
in
dec
int
int3
stc
je
orb
or
enter
les
or
ljmp
and
adc
xchg
jnp
divb
insb
pusha
int3
or
or
sahf
icebp
scas
xchg
dec
clc
push
cmp
dec
push
mull
mov
movsb
sbb
lahf
xchg
mov
fwait
out
sub
push
mov
cwtl
dec
mov
and
inc
cltd
scas
sbbb
push
sarl
fwait
nop
out
sti
xchg
or
inc
xor
test
push
ret
hlt
xor
inc
mov
pusha
fnstsw
pop
stc
lahf
rcl
pop
mov
aaa
jns
cmp
add
pop
mov
dec
and
and
jbe
or
add
xor
rcr
out
add
cmp
adc
enter
mov
cmp
int
test
dec
mov
sub
pop
mov
insl
xchg
jne
lret
jae
aaa
es
nop
inc
mov
fcompl
sub
mull
je
mov
test
pushf
ljmp
mov
fimull
insl
stos
cs
xor
ret
lret
cwtl
xchg
ud1
mov
loope
xor
or
cli
and
jb
bound
arpl
iret
test
aaa
xor
mov
pusha
jecxz
sbb
pop
push
stos
inc
mov
push
mov
add
ds
lds
stos
outsl
inc
mov
leave
xchg
test
mov
add
xor
jg
pop
jl
xor
jp
and
popf
pop
popa
push
out
fs
mov
dec
sbb
jne
ja
aam
pop
sbb
pop
adc
xor
lret
jnp
push
mov
jmp
pop
add
mov
push
pop
lret
lcallw
fiadds
sbb
cmp
push
icebp
xor
mov
enter
sti
pop
into
xor
les
mov
shlb
pop
mov
in
popf
pushf
pop
push
sbb
js
jg
fisubl
cmpb
add
add
leave
scas
dec
dec
xlat
in
mov
repz
push
fwait
pop
jle
sti
lcall
jno
scas
in
mov
pop
cs
lahf
jno
test
mov
add
fsub
inc
inc
aaa
mov
ret
sbb
jb
in
and
mov
push
fstpt
fdivrs
stos
outsl
fcmovne
movsl
int
pop
enter
inc
in
push
pop
push
fs
mov
aaa
mov
pop
xchg
std
ss
inc
sbb
fildll
sub
xchg
gs
icebp
rclb
push
leave
aad
mov
fwait
sub
fsubl
pop
and
sti
pop
add
in
stc
icebp
daa
mov
mov
ret
sub
inc
lret
std
xadd
testb
inc
aas
mov
add
fldcw
jmp
fcmovnbe
movsb
out
dec
mov
cltd
adc
jp
mov
stos
mov
insb
test
pushf
mov
cltd
xor
test
mov
push
jge
bound
push
out
xor
xchg
mov
popa
data16
arpl
lret
push
add
stos
lret
or
stc
bsf
add
pop
arpl
jo
push
push
mov
in
xor
pop
int
push
mov
ss
xchg
mov
int3
in
in
jbe
mov
xchg
jmp
rcr
mov
call
fisubl
js
mov
fucomp
mov
jo
fdivp
pushf
divb
lock
lret
test
dec
sub
int
xor
popa
movsl
daa
mov
inc
sbb
stos
mov
gs
mov
sub
push
push
mov
or
jno
push
xor
loopne
mov
xchg
sbb
call
jbe
jecxz
js
sub
xchg
out
int
clc
xor
push
jb
mov
shl
xlat
jb
out
leave
incb
jecxz
push
cs
dec
ret
insb
push
pop
mov
stos
mov
gs
push
pop
xor
sbb
enter
out
cltd
scas
xor
jb
xchg
addr16
sub
movsb
int3
fnstsw
sbb
mov
lods
ficomps
adc
dec
or
mov
aaa
jno
jbe
rorl
fwait
jl
loopne
pop
fsubr
mov
pop
test
shll
pop
cmp
in
mov
xchg
adc
neg
cmpsl
fimuls
repnz
mov
leave
cmpsb
mov
fadd
popa
orb
aad
aad
mov
jmp
or
sarb
fwait
mov
or
sub
movsb
xor
inc
pop
fidivrl
mov
fcmovnb
or
aaa
aam
lea
jb
cs
mov
mov
leave
rcrb
mov
int
sub
adc
xchg
jno
loop
adc
mov
movsl
mov
lahf
hlt
xor
push
and
lret
in
fisubs
jo
add
cld
xchg
pop
xchg
mov
cmp
mov
mov
jae
cmp
or
jb
mov
jle
icebp
outsb
xor
repz
repnz
or
popa
pop
jg
out
sarb
mov
test
aaa
mov
loop
ljmp
cli
cmp
stos
sub
mov
cmc
pop
push
mov
xchg
xchg
mov
daa
push
xor
out
lea
push
nop
cld
aam
out
sbb
xor
fnstsw
inc
jno
pushf
lret
sbb
adc
sbb
xchg
sub
rorl
xlat
sub
hlt
push
xor
push
adc
xchg
mov
pop
shll
fcompl
xor
sbb
mov
jg
ja
mov
push
cmpsl
outsb
insl
push
inc
dec
daa
xchg
incb
lds
dec
imul
mov
push
inc
lahf
testl
mov
push
fld
mov
arpl
cli
sub
fidivrs
popf
fwait
mov
int
inc
mov
cmp
insb
clc
jo
jno
pop
fucomip
push
mov
mov
fldl
in
mov
xor
inc
leave
ds
cs
iret
xor
jmp
lods
aas
shrl
sbb
je
pop
test
inc
bound
inc
aaa
imul
inc
mov
cmc
jo
add
mov
sbb
add
mov
ret
call
daa
mov
push
pop
rorl
repz
ja
shll
imul
imul
jb
adc
incb
mov
mov
jns
cmp
and
popf
pop
test
or
je
xchg
shlb
aaa
mov
inc
pop
mov
adc
ror
jecxz
jecxz
sbb
rcrl
sbb
and
lock
faddl
or
and
push
mov
in
or
outsl
adc
gs
psubd
fs
in
loope
and
je
test
arpl
xor
pop
loopne
xor
rclb
arpl
xchg
mov
arpl
daa
out
mov
pushf
subl
daa
jnp
lds
sbb
xor
outsb
outsl
sub
cmp
cmc
shll
mov
lods
into
sbb
mov
into
pop
das
lcall
pop
imul
mov
mov
in
scas
inc
lahf
lods
pop
ja
sti
inc
into
sub
cltd
test
dec
mov
sub
dec
fs
gs
das
pop
cmp
ljmp
cld
inc
inc
pop
cmpsb
adc
scas
leave
mov
inc
mov
test
add
jns
dec
imulb
shlb
fistpl
arpl
dec
push
out
cmpsl
inc
cmp
push
pop
inc
pop
sub
loope
and
faddl
mov
mov
fnsave
es
mov
adc
pop
dec
out
js
loope
and
js
loop
adc
int
sub
cmpsl
loop
enter
jo
xor
aaa
push
jne
movsb
or
inc
addr16
addb
mov
sahf
cmpsb
sbb
call
and
cmp
xor
jge
sti
jg
ret
add
cli
arpl
add
gs
mov
inc
push
adc
movsl
test
mov
gs
jnp,pt
loop
sbb
add
jns
sbb
jmp
and
pop
in
daa
js
lret
fdivs
call
fadds
rcrl
mov
fnstcw
ljmp
enter
addr16
aaa
lods
test
inc
jge
or
mov
xchg
dec
shr
fimull
movsb
iret
jns
fisttps
sbb
js
into
jecxz
fdivl
dec
mov
sti
add
iret
add
scas
leave
outsl
mov
cmp
out
xchg
pop
dec
cwtl
sbbb
mov
popa
rcl
in
ret
pusha
jecxz
pop
js
out
fstpt
aaa
enter
mov
loopne
sbb
sub
cmpsl
push
xor
push
push
cmp
jnp
out
mov
jb
push
jnp,pt
bound
roll
push
jb
pop
add
cs
mov
mov
adc
scas
lret
adc
inc
js
cmp
vmovhps
loop
sub
enter
mov
sbb
ja
and
divb
xchg
mov
ds
sub
xlat
std
nop
aad
push
push
add
mov
xchg
lds
rorl
es
mov
sub
lods
dec
inc
cmp
fisubs
xor
mov
jl
addr16
stos
sti
jbe
je
int3
lret
ja
leave
les
pop
xlat
adc
jbe
shll
out
jb
lods
push
ret
dec
push
loopne
jnp
xchg
call
sub
stos
jb
jp
and
lods
xchg
and
test
cmc
inc
lret
mov
inc
or
push
aas
lret
movsb
das
pop
xchg
xor
inc
fs
pop
aad
jne
dec
pop
aas
icebp
and
or
mov
pop
pop
mov
push
mov
mov
scas
fwait
xchg
mov
out
push
dec
iret
popf
ds
jl
ja
pusha
out
mov
fdivl
xor
in
mov
loopne
adc
xor
mov
fucomip
iret
aas
xchg
sbb
xlat
js
std
outsb
loop
push
subl
pop
clc
int3
push
mov
outsl
popa
ud2
movsb
jae
jl
sbb
xorl
add
jb
dec
xchg
inc
lods
dec
inc
push
arpl
dec
cmp
fwait
push
popf
push
pop
inc
adc
lods
cmpsb
or
xor
es
lahf
pop
xor
repz
push
xor
popf
daa
sub
sub
jle
xchg
in
cli
cld
std
imul
or
and
mov
dec
jecxz
pop
stc
fmul
dec
xchg
jno
xchg
mov
out
mov
or
inc
pop
cs
adc
in
fadds
sub
pcmpeqb
iret
push
cwtl
jo
in
pop
ret
xor
mov
and
pop
ds
enter
and
mov
xchg
aam
cmp
rcrb
or
scas
add
fistps
cltd
sub
cmp
aam
and
cmp
inc
stc
mov
xchg
mov
sbb
jae
cmp
or
push
es
iret
das
mov
and
out
out
sbb
ret
popf
les
loopne
repnz
repz
leave
in
enter
ja
cmp
pop
flds
loope
subl
mov
mov
jbe
cmp
loopne
nop
inc
adc
add
mov
ss
data16
adc
scas
jmp
pop
sbb
outsb
sbb
pop
outsl
mov
adc
push
add
adc
cmp
inc
xchg
jne
mov
xchg
mov
cltd
xorb
in
mov
es
dec
pop
insl
jnp
aam
pop
jns
xlat
push
test
fwait
int3
aaa
inc
mov
mov
aaa
xchg
jae
xchg
and
pop
popa
mov
fbstp
inc
dec
aaa
lds
clc
adc
in
arpl
cmc
mov
nop
dec
lret
ret
loop
adc
xor
inc
push
sub
in
cmp
pop
lcall
testb
fnsetpm(287
xchg
add
test
dec
sbb
cmp
xor
lahf
stos
mov
mov
and
lds
xchg
data16
push
loop
jmp
or
nop
mull
pop
adc
test
adc
pop
lea
xchg
push
or
movsb
insl
sbb
jo
in
pop
outsl
pop
xor
mov
xor
mov
mov
dec
mov
aas
pop
hlt
push
mov
out
pop
inc
adc
imul
push
enter
out
sbb
add
dec
jo
mov
sub
out
popl
test
or
lods
imul
jbe
xor
jnp
push
adc
xchg
cmpb
dec
popl
pop
xor
mov
ljmp
push
mov
pop
fwait
imul
dec
ffreep
lcall
ficoml
inc
fwait
inc
add
cmp
das
pop
inc
enter
iret
sbb
test
inc
stos
pop
xor
or
mov
es
dec
push
or
mov
and
scas
add
seto
faddl
mov
outsl
movsl
jnp
movsl
ret
inc
in
mov
subb
subl
outsl
push
mov
cmpsb
sbb
sub
mov
jle
push
leave
mov
add
jl
fsubl
adc
lahf
adc
fstl
aam
pop
and
push
subb
pusha
adc
lds
push
test
and
push
adc
mov
xor
aam
in
jbe
arpl
pusha
xchg
and
lds
jl
or
xchg
imul
sbb
pushf
repnz
jno
lods
lret
fimull
sbb
cmp
push
inc
sbb
int3
mov
mov
ljmp
add
xlat
cmpb
mov
stos
mov
dec
sbb
scas
dec
testl
sub
adcb
inc
and
shll
jp
test
repnz
sahf
or
jae
jns
sarl
xchg
test
cmpsb
mov
cmpsb
pop
jne
add
gs
rcr
mov
arpl
repz
aam
mov
std
lds
arpl
fmulp
inc
push
incb
shrl
xchg
pop
lcall
xchg
mov
jg
mov
or
adc
and
cmp
mov
lods
cld
out
and
ret
mov
leave
dec
xchg
loopne
loope
xchg
xor
int
sub
push
xchg
xacquire
sbb
sbb
stc
in
add
movsl
jnp
sub
mov
cmp
jle
mov
xchg
mov
pop
xchg
adc
rolb
or
pop
adc
iret
push
sub
pop
rclb
popa
and
add
mov
jb
stos
mov
movsb
imul
cmp
sub
xchg
jmp
test
pop
xchg
push
pop
mov
adc
dec
xor
out
stc
dec
push
pusha
std
sbb
jns
addb
xor
and
dec
inc
lret
arpl
or
dec
inc
fcompl
out
add
inc
popa
neg
lret
jns
dec
or
mov
and
into
es
jl
push
sbb
mov
insb
aas
jnp
orb
cmpsl
lds
test
daa
push
jns
push
je
scas
outsb
cmp
in
pushf
or
gs
fwait
cmp
jno
outsl
subb
sbb
and
push
popa
jl
jbe
mov
xor
faddl
xor
adc
push
je
shl
out
pop
fmull
sahf
aaa
cmpsl
or
test
ds
and
xor
adc
cmpsl
rcrl
repnz
nop
cwtl
je
inc
xchg
xchg
inc
out
sub
adc
inc
jno
jne
mov
test
push
popa
and
mov
faddl
leave
paddsb
mov
sahf
arpl
adc
mov
loope
or
inc
loopne
mov
adc
aas
jnp
cmp
jno
push
xor
loop
sbb
popf
lahf
aam
hlt
sub
jne
cwtl
jae
jmp
ljmp
adc
dec
mov
imul
push
jg
es
insl
xchg
push
adc
or
pop
mov
arpl
lahf
dec
xor
pop
out
adc
sbb
andl
adc
inc
sub
ds
shlb
clc
push
in
xchg
scas
and
cmpsb
sahf
jae
subb
imul
cmpsl
repnz
hlt
decb
mov
icebp
mov
add
clc
mov
test
insb
xchg
fiaddl
loop
push
cmp
mov
mov
mov
scas
aad
int
inc
push
xchg
mov
aad
and
dec
cmp
je
out
cld
ja
add
sarb
and
ficomps
jns
cmp
cmp
or
xchg
lcall
movsb
data16
imul
mov
movsl
adc
push
jmp
subl
fstpt
push
mov
outsl
in
test
aas
dec
std
data16
jno
bound
cmp
loop
sub
push
xchg
or
test
test
daa
rclb
push
addr16
into
into
or
dec
iret
fs
mov
xchg
jnp
test
mov
adc
mov
mov
outsl
jb
movsb
jp
add
imul
push
sub
adc
sub
sub
cltd
sub
push
push
add
and
jmp
pop
mov
pushf
arpl
jbe
test
pop
mov
dec
pushf
insl
sbb
push
mov
and
fwait
pop
push
addl
lock
pop
dec
mov
addb
pop
inc
pop
addr16
adc
mov
or
or
mov
cmp
leave
subl
inc
xor
lret
push
notb
push
jnp
mov
jecxz
add
jne
sub
xchg
jecxz
mov
mov
test
push
push
mov
lods
in
xchg
adc
test
jcxz
adc
loope
dec
daa
mov
mov
and
mov
cld
sbb
arpl
mov
xchg
sbb
sbb
popa
jno
pop
push
inc
adc
iret
fldl
in
adc
orl
inc
or
mov
inc
push
popfw
mov
push
scas
pop
stc
mov
add
outsb
and
push
and
sti
fnstenv
into
outsl
pop
negl
cli
adc
pop
lods
stos
js
adc
outsl
mov
dec
xor
cmp
fcoms
push
xor
add
aaa
mov
hlt
lds
xlat
cld
or
lods
pop
and
out
cltd
xor
sub
dec
les
adc
jne
lret
daa
push
jecxz
pop
pop
xchg
aaa
int3
loope
mov
sub
pop
adc
add
sahf
fidivrl
jns
pop
lds
dec
fists
out
loope
out
fnstenv
adc
xor
cli
popf
mov
shr
jnp
push
xlat
inc
mov
xor
jo
in
lds
xchg
dec
pop
sub
addb
daa
loopne
jne
adc
lds
movsl
enter
aad
cmp
addr16
shlb
hlt
jno
mov
test
mov
pusha
add
cmpsb
push
cmp
roll
lock
dec
xlat
push
sbb
clc
pop
xlat
sbb
mov
out
jae
fbstp
xor
jp
pop
pop
bound
das
push
sub
pop
sbb
add
leave
daa
mov
fwait
xchg
jmp
mov
jge
adc
into
mov
fmuls
mov
sbb
cmpsl
xchg
cmpb
sbb
loopne
cmp
jb
dec
push
lsl
and
dec
lret
int
js,pn
jns
in
sti
and
and
mov
adcb
push
jno
xchg
loop
lea
mov
pop
ret
lret
fistps
mov
mov
mov
mov
cltd
ds
ret
jmp
in
test
xchg
xchg
cmp
mov
or
dec
pop
push
jne
cmp
out
sbb
pop
pop
jecxz
inc
iret
out
outsl
jno
mov
add
mov
xchg
insl
ljmp
push
or
jbe
xchg
sub
out
jns
push
aaa
xchg
jmp
cmpsl
jbe
jge
jbe
lea
test
imul
mov
iret
xor
aad
bound
out
sahf
jb
dec
arpl
loopne
fcom
jg
push
sub
outsb
in
out
ja
in
loope
jne
sub
fsts
lahf
sarl
popf
dec
gs
or
jns
insb
inc
mov
ja
jae
mov
shrl
inc
sbb
clc
repz
rcrb
add
or
les
xor
mov
mov
gs
pop
mov
or
andb
lds
into
jb
adc
adc
std
mov
push
in
mov
or
jbe
adc
mov
mov
or
into
mov
jge
sub
sarb
clc
fwait
shl
add
pop
inc
pop
pop
add
popa
jmp
test
dec
out
jno
cs
cmpsl
dec
sahf
je
xor
xor
sahf
mov
adcb
and
dec
stos
mov
lret
imul
jb
or
sub
push
inc
dec
jnp
mov
cld
sbb
pop
xlat
jae
adc
mov
lcall
pop
popf
shl
mov
add
adc
jo
call
in
repnz
xchg
frstor
ljmp
mov
mov
and
mov
rcl
lret
lcall
inc
aas
push
pusha
cwtl
sahf
jle
or
mov
iret
mov
iret
pop
xchg
test
pusha
or
sub
sbbb
cmp
leave
sub
scas
mov
daa
inc
mov
and
mov
es
sub
jno
aam
or
push
out
or
scas
in
cmpsb
sbb
stc
int
ss
mov
out
outsb
shl
fidivs
daa
mov
arpl
xchg
adc
mov
xchg
jae
jle
ret
lret
call
in
dec
out
mull
adc
jmp
pop
jp
js
xor
jg
lods
dec
adc
jb
sbb
rorb
jp
or
adc
ljmp
pop
aas
rolb
cltd
jecxz
sub
scas
lret
aam
xchg
loopne
or
scas
jl
out
push
xor
clc
mov
stos
movl
sub
mov
xor
sbb
scas
push
out
lcall
mov
jno
mov
rep
inc
push
dec
test
cmp
sbb
into
jae
lods
mov
dec
cmpsb
push
pop
jmp
lcall
scas
test
add
xor
outsb
add
cld
sub
adc
dec
lock
fstps
push
pop
lahf
imul
mov
imul
icebp
mov
lods
jge
mov
mov
sbb
xor
mov
or
idivl
sbbl
sbb
mov
mov
in
dec
xchg
in
jle
mov
lock
loop
int3
adc
pop
pop
rcr
adc
cs
sub
push
rolb
push
shlb
dec
adcl
loope
popf
in
sbb
push
outsb
mov
das
dec
data16
scas
ret
scas
push
jno
jp
popl
adc
push
mov
ffree
xchg
mov
xor
mov
pushf
add
jge
mov
add
fimuls
nop
aaa
mov
ljmp
dec
popa
bound
push
dec
fldt
jae
cmpsl
ss
jo
inc
pop
lods
mov
mov
mov
insb
sub
ds
cwtl
dec
out
pop
fldl
cwtl
out
add
mov
dec
xor
jb
mov
inc
push
push
dec
and
dec
adc
nop
int3
inc
pop
test
fucomip
stc
out
enter
and
xlat
mov
es
or
dec
xor
sbb
jecxz
imul
dec
subl
mov
lahf
dec
inc
jle
leave
lcall
in
bnd
mov
ficompl
in
lods
dec
ret
in
push
daa
cmp
les
lret
xchg
lret
fisttps
mov
cs
es
sub
leave
cmc
sub
add
pop
push
jge
add
add
mov
inc
mov
push
int3
inc
out
pop
movl
mov
push
cli
dec
addl
push
mov
rcll
mov
into
mov
xchg
and
mov
in
dec
fisttpll
dec
cltd
pop
shrb
insb
xor
js
cmc
out
dec
adc
ja
lret
sub
xchg
orl
add
pop
inc
mov
pop
sti
fisubrs
adc
sub
ds
je
scas
pop
scas
pop
inc
push
push
xor
adc
xchg
mov
push
push
xor
mov
icebp
jp
sbb
jne
fiaddl
xchg
pop
sub
aas
movsb
std
ljmp
mov
mov
mov
add
inc
dec
sub
fwait
aad
inc
and
jp
mov
fldt
cmpsb
cmpl
fmull
adc
push
mov
fscale
add
push
cmp
sub
dec
and
mov
push
scas
aam
sbb
outsl
loope
mov
mov
pop
sbb
jno
and
add
jno
movq
mov
add
aad
in
jp
inc
and
call
das
test
push
mov
movsl
push
sti
les
test
mov
add
xor
mov
add
dec
mov
jg
mov
push
xchg
sub
loopne
mov
aas
rcl
bound
push
lret
and
out
xchg
xlat
sbb
pusha
shr
mov
add
cmp
mov
pop
out
push
out
jle
sub
xor
pusha
or
dec
out
jno
lret
push
in
mov
cmpsb
add
inc
adc
test
pop
roll
je
shll
xchg
call
dec
inc
sti
lret
loope
sub
dec
addr16
and
cmpsb
dec
and
fcmovnb
pop
stc
jp
shl
mov
pop
and
sbbb
jle
lea
cmp
sub
popa
jnp
or
adc
mov
add
sub
fwait
mov
dec
clc
fcmovne
adc
sarb
push
cld
gs
cmc
jle
mov
movsb
das
mov
ret
xchg
or
in
data16
sub
dec
sbb
jmp
pushf
stc
ret
outsb
cmc
push
jg
jnp
sarl
push
lods
mov
adc
es
and
cli
inc
std
adc
pop
std
push
aas
lcall
icebp
add
bound
call
mov
adc
sbb
add
fucomip
popa
rclb
jl
cld
stos
push
negb
pop
lock
sbb
jns
mov
test
cmp
je
js
inc
imul
clc
rorb
and
in
pop
xchg
dec
or
fistpl
xor
pfcmpeq
ljmp
adc
push
shlb
cwtl
stos
jecxz
sbbb
pop
add
lret
mov
pop
mov
pop
add
mov
int3
mov
cltd
test
xor
les
dec
jns
dec
xor
std
jge
mov
das
dec
sti
cld
sbb
mov
mov
mov
sub
sub
insb
clc
movsl
adc
push
cwtl
dec
out
mov
nop
fcomps
fs
dec
insl
xor
sbb
xor
int
mov
outsl
xchg
lea
sub
pop
cmp
jp
fwait
dec
scas
iret
stos
xor
jbe
pop
sub
popf
aaa
movsl
mov
test
add
mov
aam
inc
pop
jbe
aaa
mov
unpckhps
push
push
jle
pop
cmp
mov
insb
mov
mov
aam
jecxz
sbb
cmc
lcall
adc
test
fcoms
mul
roll
push
adc
aaa
in
sub
clc
imull
mov
insl
add
add
cmp
cli
add
in
sbb
pop
sub
movsl
inc
aas
jle
xor
xchg
mov
and
xchg
adc
inc
add
fsubrl
jecxz
xor
iret
ficomps
mov
sbb
aaa
aam
mov
sbb
fnsetpm(287
mov
sti
jmp
dec
cld
push
fdivp
xchg
out
lods
cmp
in
dec
andl
mov
loopne
or
repnz
push
mov
out
mov
lahf
pop
xor
push
add
mov
xchg
jl
inc
sbb
shll
mov
orl
jmp
and
mov
or
and
push
jmp
fdivrl
out
jne
lea
mov
int3
mov
mov
push
push
call
cmp
mov
dec
or
jl
das
pusha
movsb
and
mov
inc
mov
dec
mov
popa
push
test
or
cmpsb
or
mov
call
ficoms
sbb
insl
xchg
imul
fidivrl
xchg
pop
sarb
lret
js
cwtl
stos
mov
outsb
adc
mov
cmp
xorl
adc
jle
inc
pop
or
push
mov
mov
lret
lret
test
cli
and
stos
cmp
and
jecxz
scas
and
out
jno
add
ret
and
inc
clc
adc
mov
cmpb
jb
subl
dec
adc
out
scas
insl
sahf
pop
or
xor
call
in
scas
cld
nop
frstor
leave
fists
stc
inc
dec
movsl
pop
cmp
mov
ror
pop
dec
jnp
adc
les
mov
jns
jp
int
or
sub
push
jbe
add
xchg
fs
inc
orb
dec
mov
and
adc
dec
fcom
js
mov
fidivrs
call
cld
fsubrl
push
mov
fmuls
pop
jecxz
or
repnz
adc
stos
xchg
test
xchg
fidivrs
rcl
xorl
push
dec
adc
sbb
ja
push
cltd
loopne
loope
sub
ret
add
mov
or
mov
bound
arpl
xchg
mov
mov
sbb
jge
mov
pop
sbb
jp
in
adc
cmpsl
dec
cwtl
dec
test
out
les
imul
push
jge
in
gs
divb
insl
sbb
mov
lret
fisubrl
inc
shll
sub
cmpsl
adcl
loopne
imul
dec
pop
dec
sbb
lahf
inc
daa
push
fdivr
push
inc
sbb
icebp
bound
insl
aas
cld
mov
addr16
sbb
out
rorb
mov
sub
test
fcomps
loop
push
inc
sub
dec
ss
push
push
shll
movsb
paddusb
enter
data16
pop
arpl
lret
int3
sbb
sahf
lds
nop
and
fcoms
push
aam
int
stos
pslld
or
xchg
insb
and
mov
add
and
jl
adc
dec
lea
testl
sub
and
or
clc
xchg
push
inc
mov
test
dec
testl
sub
or
clc
jmp
addr16
jecxz
ja
das
or
in
mov
sub
daa
daa
jne
jg
shrb
imul
fs
enter
ss
sub
or
mov
jge
push
mov
sar
xor
sub
lret
mov
mov
mov
fwait
pusha
jb
cwtl
inc
sub
sub
icebp
mov
sub
rorb
aad
pop
cmp
sbb
add
push
adc
xchg
stos
jne
or
pop
test
mov
xor
inc
loope
mov
push
dec
shll
out
nop
mov
bound
push
mov
mov
mov
mov
mov
add
or
clc
push
fisttps
adc
mov
std
adc
jle
movsb
inc
nop
bound
cmc
mov
fldl
push
xchg
popf
or
sbb
push
push
ss
pushf
jae
dec
pop
jns
scas
xor
adc
aaa
adc
cmpb
fsubr
addr16
aaa
popl
jbe
mov
push
lret
mov
push
dec
adc
es
cmovns
adc
adc
ret
lcall
jno
repnz
daa
data16
rol
adc
aaa
les
and
pop
jp
add
mov
daa
cmp
sti
ljmp
xchg
mov
mov
jnp
sub
jge
sbb
inc
sbb
mov
push
pusha
jge
xchg
das
sub
aaa
sti
mov
data16
ljmp
xchg
jns
mov
jno
sub
pop
sub
push
fildl
mov
xlat
push
mov
sbb
call
fimull
adc
adc
xor
bound
cmp
jne
mov
pop
add
aam
lret
inc
inc
xchg
in
es
jo
sub
pushf
in
dec
js
inc
int3
rcrb
mov
sahf
ss
mov
imulb
js
loopne
mov
dec
add
push
xor
jo
sub
push
or
fwait
mov
and
pop
stos
inc
scas
popa
fisubrl
mov
mov
or
mov
stc
movsl
subl
dec
cmc
adc
and
inc
dec
mov
fldenv
sar
cmp
inc
les
dec
insl
mov
jp
sbb
xlat
mov
mov
fcmovnu
loopne
inc
nop
loopne
ja
and
leave
into
out
aaa
dec
and
fcompl
xchg
mov
push
xchg
icebp
cmpb
xchg
jne
cmp
mov
ficoms
lea
or
and
ret
dec
insb
adc
lahf
and
add
push
sub
add
cmp
jb
lret
sbb
push
sbb
cmp
push
mov
repz
fadd
jns
mov
xor
popf
pop
ja
or
push
xchg
pop
push
sbb
dec
push
add
movl
mov
in
mov
aam
sbb
mov
jnp
jnp
and
mov
sbb
lods
inc
icebp
xchg
fcompl
cmp
mov
or
filds
and
fistl
mov
and
std
movsb
sub
ja
or
cmp
pop
repz
add
adc
cltd
nop
ror
mov
stos
sbb
and
arpl
out
jecxz
stos
idivb
pop
movsb
pop
popf
xchg
pop
cmp
inc
bound
inc
mov
mov
enter
bound
and
mov
push
inc
movsb
or
sarl
out
jae
sarb
xor
jo
jno
lea
inc
mov
xlat
mov
mov
jb
sbb
or
addb
xchg
mov
je
sbb
ds
stos
repz
mov
push
addr16
stos
lods
lea
js
lea
vpcmpeqb
dec
inc
xchg
mov
call
aad
sbb
adc
add
cmpsb
ret
jno
js
adc
outsb
aaa
inc
pop
movsb
mov
push
sub
outsl
jmp
xor
in
cmp
cli
mulb
jl
ret
icebp
push
orb
cli
cld
cmp
xor
in
lds
mov
divl
or
sbb
fsubrl
out
pop
pushf
in
inc
add
popa
in
std
aas
test
add
jp
dec
repnz
xchg
loope
inc
push
jb
imul
jmp
dec
dec
xchg
pop
sub
insl
xchg
daa
mov
xor
mov
rcll
repnz
xchg
pop
jo
pop
add
outsb
mov
fildll
in
lret
mov
push
cmc
sti
ret
mov
leave
roll
xchg
mov
sub
lcall
int3
and
or
cmp
pushf
test
dec
jl
cltd
int
lahf
or
scas
xorb
mov
lret
test
and
repz
andl
hlt
inc
cli
add
outsb
and
imull
icebp
jbe
popa
xchg
test
xor
cmpsl
inc
fsubl
push
aaa
push
add
ret
adc
cmpsb
hlt
mov
ss
push
mov
xchg
popa
aam
sbb
jbe
push
sbb
dec
mov
jae
pop
pop
xor
leave
aaa
faddl
insb
nop
sub
cmp
addr16
clc
out
xchg
mov
pop
and
xor
rcl
push
sub
inc
fildll
or
shlb
mov
mov
push
jmp
add
push
xchg
mov
mov
mov
push
aaa
test
fisttpll
or
icebp
in
movsl
cwtl
fcmovu
xchg
hlt
mov
fs
pop
cmp
shlb
divl
push
scas
pop
and
movsb
sub
outsb
xchg
nop
inc
dec
xor
mov
dec
cmc
scas
shll
fsubrs
xor
gs
mov
out
cld
xorb
js
jmp
inc
mov
dec
add
cmp
fs
fmuls
mov
cmc
outsl
int
or
push
cmc
mov
testl
pop
sbb
xor
push
add
outsl
xchg
fadds
stos
js
and
lahf
or
mov
mov
fs
xchg
test
mov
add
xchg
cmp
xchg
lahf
mov
fsubs
pop
sub
not
pop
xchg
imul
mov
inc
add
arpl
pushf
stos
jg
inc
and
insl
daa
les
pop
and
push
cmpsl
cld
xchg
xchg
fists
inc
mov
jp
enter
andl
jne
negb
pop
add
push
jne
clc
inc
cwtl
jmp
and
cmp
mov
mov
lahf
add
mov
cmp
incl
aas
test
mov
je
push
faddp
cmp
mov
shl
in
clc
cmpsl
mov
mov
mov
sub
movq
jge
xor
inc
ljmp
mov
hlt
adc
mov
dec
std
in
loop
fisttps
sub
fbld
mov
repz
out
ret
mov
push
fistl
cmp
inc
cld
gs
iret
sbb
dec
xor
mov
dec
iret
adc
jns
xor
cli
ror
jbe
in
push
mov
xchg
into
icebp
movsl
xchg
inc
sbb
aaa
or
outsl
dec
pop
sub
fst
cmpsb
int3
pop
in
fistps
xor
mov
adc
ljmp
mov
andl
jae
xorl
bound
or
loopne
clc
jne
push
mov
push
fisttps
dec
xchg
adc
pushf
adc
loop
and
xchg
gs
push
dec
adc
xchg
xor
lret
or
or
iret
cwtl
aad
cwtl
dec
dec
pop
mulb
xor
pop
in
mov
mov
cmp
cli
shl
test
adc
lcall
mov
push
cmpsb
push
jbe
xor
int
adc
scas
fbld
fsub
pop
int3
out
test
test
dec
xor
push
mov
rorb
imul
adc
fimuls
cli
inc
adc
mov
enter
jl
fistpl
ret
push
mov
cmp
test
xchg
scas
aad
xchg
fiadds
pop
clc
sbb
ljmp
mov
lret
call
push
xor
dec
ret
push
sbbb
mov
gs
xorb
jo
mov
mov
mov
nop
jge
in
mov
test
stos
inc
jnp
pop
test
xchg
push
mov
sarl
int3
dec
stos
push
lret
xor
lahf
push
jb
les
inc
push
sub
rcrb
fimuls
hlt
cltd
jl
insl
jno
mov
imul
mov
pop
adc
insl
cmp
pop
adc
sbbl
js
or
sub
dec
out
fs
enter
push
in
pop
mov
les
cmp
insb
adc
add
dec
out
sub
insb
pop
adc
sub
fidivrl
jecxz
pushf
adc
xchg
push
inc
out
fs
loope
aad
adc
inc
in
push
pop
mov
xor
cmc
test
mov
push
push
sbb
sti
std
iret
shr
add
ja
and
fldcw
mov
pop
inc
xchg
repz
rorb
cmp
inc
inc
jae
cwtl
pop
adc
add
sub
inc
lret
sub
arpl
jo
dec
loopne
roll
test
repnz
inc
fwait
xchg
jae
test
mov
mov
push
lahf
imul
push
outsb
outsl
fistpll
sbb
pop
dec
aas
sub
jl
push
in
aas
adc
loop
or
imul
or
testl
not
out
mov
sub
movsl
mov
add
cmp
jle
adc
sub
cli
dec
sub
daa
xor
iret
sbb
push
jo
addr16
call
in
inc
sub
je
cs
je
aaa
neg
rolb
sub
icebp
add
sbb
ss
and
popa
mov
dec
jbe
dec
ficoms
std
mov
lret
ret
imul
jbe
stos
pop
insl
mov
scas
ret
lea
insb
cs
movb
mov
dec
loop
je
inc
call
mov
mov
inc
adc
xchg
scas
xchg
xor
mov
stc
mov
xchg
xchg
subl
xchg
popa
add
jp
inc
xchg
lds
jb
pop
dec
push
outsb
xor
push
fptan
sti
out
xchg
repz
dec
int3
push
jne
ret
dec
repz
aaa
lcall
clc
and
push
mov
std
inc
fwait
inc
loopne
and
cmp
out
test
cmp
cs
sub
xlat
rclb
pop
jmp
pop
push
mov
jne
xchg
leave
mov
popf
lcall
dec
mov
ficomps
aad
clc
movsl
mov
loope
inc
xor
dec
sub
jecxz
ss
loop
pop
rclb
adc
fwait
adc
out
sti
aas
xchg
dec
lods
jae
jns
stc
inc
lods
rcrl
cmpsl
jb
pop
scas
shl
cld
or
bound
cmc
dec
inc
adc
test
push
pop
jg
xor
sub
clc
or
leave
in
lds
mov
inc
cli
loopne
mov
sub
movsl
rcl
sub
mov
mov
jmp
xor
mov
push
fnstenv
pop
or
pop
xor
add
and
and
pusha
mov
scas
push
stc
add
xor
xor
jge
or
or
add
or
rcll
cld
scas
bnd
inc
sub
cltd
xchg
rorb
rcrl
cmpsb
mov
fs
pop
push
mov
push
dec
cld
out
nop
scas
iret
or
push
std
mov
loopne
mov
xlat
test
sbb
ret
and
lret
inc
push
test
xor
xchg
add
adc
fcomi
stc
pop
fisubrs
bound
sub
mov
stc
jns
dec
or
loope
lods
push
mov
rorb
cld
scas
cs
arpl
in
mov
xchg
sbb
jb
lcall
xchg
testb
push
push
fdivrp
jg
jl
add
jne
lods
aas
nop
pushf
scas
fs
mov
lcall
dec
iret
test
pusha
push
or
arpl
xchg
cmp
lret
add
sbb
adcb
mov
or
inc
stos
jecxz
or
imul
cmp
not
stos
mov
xor
xlat
mov
decb
inc
lock
mov
xor
mov
cs
leave
push
push
arpl
mov
sub
dec
andnps
popa
mov
loope
jge
loopne
js
movsl
ret
addl
pop
cwtl
or
movsl
push
mov
inc
jl
mov
leave
fisttpll
sbbb
cltd
ret
push
jnp
adc
sti
addr16
add
fists
adc
lods
push
insb
dec
mov
iret
xchg
push
leave
mov
insb
mov
scas
fnstcw
sbb
in
or
add
pop
xor
sahf
pop
fidivs
nop
mov
inc
outsl
stc
fists
cwtl
cmpsb
cmpsl
xor
lods
jle
mov
xchg
ss
mov
xchg
shrb
pop
fldl
mov
sbb
into
mov
rorb
or
mov
sbbb
or
or
js
jmp
push
jo
mov
sub
push
pushf
lods
mov
test
sbb
pushf
push
gs
fcomps
mov
icebp
fnsave
and
mov
stos
add
push
mov
dec
popf
daa
aaa
pop
cmp
inc
inc
inc
jae
fmulp
lock
sbb
jecxz
xchg
pop
push
mov
push
xorb
clc
test
cmp
popf
mov
or
push
or
call
xor
repnz
cmp
add
xchg
test
pop
sbb
cmp
pop
pushf
mov
mov
test
mov
test
dec
inc
cmpsl
pusha
movsl
adc
lret
lret
cmp
mov
jl
fcoml
xchg
test
xchg
mov
out
or
adc
push
and
push
ljmp
inc
jnp
xchg
cmp
mov
or
mov
pop
adc
sbb
mov
push
pop
push
add
inc
repz
gs
mov
mov
out
ss
dec
mov
aad
fstp
and
xor
xor
add
xchg
xchg
fadd
inc
lock
sub
aad
mov
mov
bound
pop
popf
out
or
jns
mov
lock
jno
pop
mull
out
pop
pop
pop
and
test
pop
fidivs
nop
sbb
leave
or
out
or
adc
clc
test
call
mov
xchg
or
mov
data16
test
adc
bound
cmp
cmp
aam
movsb
jg
stc
cmc
or
inc
or
cmp
stos
movsb
ljmp
fwait
rcl
cltd
call
mov
lods
inc
lea
jne
in
jbe
cmc
aad
push
sbb
mov
mov
aam
xchg
cmp
xor
jns
cmc
xor
xor
shll
xlat
je
mov
mov
scas
mov
fisubs
test
push
push
mov
into
data16
arpl
mov
data16
sbb
mov
and
mov
lock
scas
push
mov
xor
mov
cs
xchg
xorb
adc
stos
lret
out
mov
movsl
rorb
jno
sbb
cmp
push
fisttpll
in
ljmp
gs
or
sarb
hlt
aas
or
out
mov
add
andl
adc
lock
push
sbbl
inc
into
lea
cli
sbb
ljmp
and
mov
repnz
test
ret
cltd
mov
xor
fisttpl
leave
idivl
enter
jg
cmp
push
add
ja
dec
les
aad
frndint
sbb
push
aas
int
xor
insb
or
pop
push
fldcw
xor
pusha
movsb
movsl
lret
inc
mov
jle
push
pop
mov
mov
cmp
inc
movsb
cmc
cld
mov
enter
lods
xchg
and
imul
loopne
jo
inc
or
aad
sahf
test
lcallw
iret
mov
or
out
inc
jne
sub
add
repnz
and
fidivrl
xor
dec
xor
fstpt
pop
dec
fldenv
inc
inc
adc
cli
shlb
mov
pop
sarb
jle
pop
and
jmp
scas
scas
or
lahf
fbstp
inc
and
pusha
test
pushf
cmp
pusha
gs
mov
cmp
pop
pop
loop
pop
stos
mov
fs
mov
fcoms
pusha
sbb
inc
mov
jp
ljmp
scas
xchg
lahf
xor
test
sbb
mov
or
lds
out
mov
and
stc
roll
or
pop
dec
leave
repz
stos
cmpsb
mov
in
push
jg
mov
invlpg
enter
xlat
imul
mov
add
inc
shll
add
add
jo
icebp
cmp
push
push
dec
add
cmp
jbe
mov
in
popf
push
xchg
or
push
dec
icebp
addb
dec
xchg
pop
int3
mov
clc
push
movsb
lret
sbb
xchg
into
xor
outsb
jb
xor
xchg
mov
cmp
cltd
mov
pop
jne
inc
mov
bound
jne
test
sub
jo
push
mov
addr16
nop
jp
dec
mov
mov
mov
jns
je
into
cmp
sub
or
add
mov
cwtl
mov
repnz
xchg
jae
adc
imul
movsl
cwtl
or
out
lahf
add
outsl
inc
jno
roll
inc
inc
mov
inc
xlat
and
or
push
push
xor
push
lcall
adc
mov
sti
mov
pop
jns
filds
dec
repnz
push
sub
inc
jmp
shrl
jg
sub
or
or
cmc
lret
lds
push
xchg
push
pop
mov
jecxz
jbe
testb
xor
jbe
leave
jge
jae
and
push
sub
dec
rorb
jne
pop
sbb
aas
xor
xchg
sub
and
xor
cs
sub
mov
in
pop
fisttpll
inc
xor
add
mov
repz
out
popa
mov
mov
push
cmpsl
sahf
jnp
mov
into
fcomps
out
add
mov
fsts
je
mov
int
rcr
je
adc
pop
add
sar
sub
pop
mov
jae
or
mov
mov
roll
sarb
jne
cmc
scas
sub
ss
mov
mov
mov
pop
and
call
cmp
or
test
rorb
ror
pop
lods
loope
lcall
inc
mov
jge
clc
mov
test
adc
and
jecxz
pushf
sbb
sti
imul
pop
dec
dec
int3
mov
sub
mov
faddp
in
xchg
outsb
lahf
lcall
leave
jle
js
loop
jmp
test
sahf
cmp
outsb
sub
lret
mov
xchg
jl
sub
fldcw
stc
xor
xchg
mov
pop
or
xchg
dec
inc
loop
jae
ror
jb
mov
clc
mov
mov
mov
mov
mov
xor
mov
xlat
adc
push
push
sbb
lret
add
mov
mov
add
ljmp
xor
and
mov
cmp
jo
and
xor
adc
and
cmp
fldt
divl
and
pushf
jne
cmp
pmuludq
les
stos
repnz
jle
mov
jae
inc
lret
pusha
cmp
ss
loop
sub
daa
call
push
and
dec
aas
test
je
js
mov
mov
fistpll
sub
mov
add
in
jle
adc
fcmove
imul
fidivs
gs
test
pushf
jns
outsl
pop
hlt
lcall
stc
imul
loopne
iretw
fldenv
call
mov
fldt
and
mov
push
repz
sub
shlb
lret
sub
test
mov
movsb
sub
push
lds
xchg
sbb
push
shlb
mov
in
inc
dec
in
mov
jle
mov
pop
ss
movsl
pop
shrl
adc
pushf
loope
xchg
outsb
lea
imul
icebp
jnp
and
xchg
bound
popf
sbb
xchg
cwtl
pop
sbb
adc
sub
shl
xchg
and
push
jne
inc
jne,pt
mov
adc
xor
mov
scas
sbb
and
lods
push
inc
and
aad
data16
mov
cmpsb
and
or
mov
sbb
xor
mov
or
cs
mov
pusha
xchg
cmpsl
repnz
shl
repnz
rcrb
inc
jo
fdivl
shr
push
mov
ret
pop
xor
pop
flds
idivl
imull
xchg
sti
xchg
icebp
sti
outsb
pop
movsb
mov
inc
adc
lock
leave
pop
mov
jne
lods
cmp
std
mov
sbb
jl
loopne
jg
stos
scas
or
mov
dec
bound
icebp
mov
mov
icebp
negl
cli
xor
gs
jnp
xchg
inc
test
cmpsl
and
in
std
jge
lahf
inc
aas
lcall
push
shlb
mov
mov
mov
inc
dec
or
inc
enter
mov
outsl
jmp
add
mov
xor
or
cs
sub
inc
or
and
sub
and
xchg
cmp
jle
cs
ret
inc
xchg
out
mov
add
outsl
dec
rcl
dec
mov
neg
sbb
cmp
mov
mov
imul
pop
popa
lahf
leave
cmpsl
add
into
jo
icebp
xor
sub
jp
cwtl
fidivrs
jle
sub
push
or
lods
rorb
adc
mov
outsl
xor
mov
mov
and
sbb
test
mov
mov
mov
lret
test
dec
cmp
and
jb
push
mov
sbb
cltd
push
in
pop
inc
xchg
lret
mov
int3
cmpsb
and
fnstsw
test
or
mov
pop
andw
ja
xchg
xchg
sti
or
daa
pusha
dec
mov
mov
adc
cmp
pop
popf
jmp
adc
mov
pop
insb
and
push
out
into
and
shll
sub
mov
add
cld
aam
jae
fcompl
mov
and
cmp
shlb
fildl
pop
hlt
test
cmc
pusha
dec
insl
mov
cwtl
int
daa
sub
dec
push
pushf
insb
dec
enter
fs
nop
jge
mov
mov
imul
push
inc
xchg
jg
lds
inc
add
cmp
fcomps
daa
dec
imul
lret
call
lcall
movsb
cs
cwtl
ret
ja
inc
fbld
or
push
int3
sbb
addb
xchg
ljmp
cmpsb
or
les
lock
mov
lret
lock
xor
in
rorl
in
lahf
dec
pop
xlat
mov
push
cmpsl
sbb
lock
push
roll
iret
outsb
pop
mov
fs
aam
movsl
bound
pop
dec
inc
mov
and
cld
xchg
or
lahf
dec
jno
insb
aaa
stc
xor
xchg
xor
xor
lods
dec
sbb
fcmovb
out
out
mov
jmp
dec
adc
out
push
mov
or
das
dec
xor
inc
sbb
jecxz
fstpt
pop
mov
adc
xor
or
daa
popf
jno
clc
sub
mov
or
test
pop
lds
shr
push
jbe
in
sub
jp
jne
mov
lods
or
push
xor
cltd
mov
das
push
push
mov
enter
dec
aad
sbb
rol
jno
daa
cmp
push
sahf
out
add
negl
cmpsl
or
mov
mov
and
loope
lods
jp
stos
imul
add
pop
imul
dec
les
subl
in
mov
and
out
leave
mov
pop
push
rclb
mov
mov
push
inc
mul
out
mov
mov
or
xchg
xchg
mov
shll
xlat
fs
push
fisubrs
or
hlt
in
cmpsl
fmul
mov
mov
dec
add
jge
mov
popa
add
popa
or
push
pushl
or
loope
mov
adc
daa
mov
nop
lods
xor
pop
std
mov
inc
pop
mov
or
test
xor
xchg
inc
sbb
in
stos
imul
imul
sub
sahf
out
es
js
jge
push
or
mov
out
call
push
mov
mov
es
jecxz
jmp
pop
push
mov
ljmp
jmp
add
imul
in
and
xor
lods
insl
inc
stc
mov
fdivl
in
popf
mov
sub
or
fistpl
and
push
mov
dec
mov
sti
lcall
sahf
inc
pusha
sub
pop
inc
sbb
gs
inc
mov
xchg
popf
cmpsb
lcall
inc
mov
mov
cld
jns
cmp
push
insb
scas
push
cmpsl
mov
add
ljmp
in
mov
mov
pusha
inc
out
mov
push
jmp
outsb
pop
fs
addr16
mov
decl
sbb
icebp
inc
jl
out
adc
add
mov
addb
push
pop
pop
mov
lock
mov
mov
mov
sub
outsl
cmp
loopne
cmpsl
mov
sub
into
pop
clc
jl
imul
jp
nop
jg
cmpsb
pop
inc
inc
or
mov
out
push
xor
adc
rorb
sbb
stos
add
scas
sbb
sbb
fldt
or
mov
mov
arpl
cmp
push
cmpsb
add
push
inc
roll
dec
into
lret
push
daa
fadds
jle
out
adc
popa
lret
mov
mov
mov
adc
jp
jns
movsb
movsb
insb
fcmovnb
cmp
repnz
imul
loope
in
jp
or
es
push
sub
fisubl
mov
mov
sub
addr16
cmpsl
outsb
outsl
xchg
jecxz
adc
jmp
sbb
aad
adc
shll
adc
sbb
add
and
inc
call
ret
mov
cmp
out
pop
testl
les
mov
lock
fwait
cmpsb
cwtl
jb
adc
inc
add
int3
pop
pusha
orb
data16
mov
sub
rcrb
mov
ds
outsb
xor
adc
inc
push
mov
mov
mov
lret
or
cmpsb
xor
iret
bound
std
push
inc
mov
xchg
fwait
sub
shr
and
mov
inc
mov
repz
sub
ss
add
pushf
jp
push
andb
push
je
daa
cmpb
ja
outsl
sahf
adc
or
scas
ss
scas
pop
xchg
mov
or
lods
xchg
lods
sti
ret
shll
enter
aaa
add
push
and
emms
and
xchg
jns
sbb
inc
jl
push
sub
pop
insl
jbe
pop
and
loop
or
pop
xor
xchg
dec
cmpsb
jp
loope
adcl
mov
add
movsl
stos
mov
and
push
mov
inc
add
dec
ja
cmp
xchg
js
xchg
nop
dec
mov
xchg
xchg
xchg
adc
pop
and
in
mov
mov
data16
adc
inc
lods
sti
loope
mov
dec
jo
lahf
mov
arpl
daa
stos
xor
int3
mov
hlt
cmpsl
out
mov
push
in
mov
push
rorb
mov
scas
nop
pop
inc
popa
rorl
mov
mov
and
push
loopne
int
cmp
mov
das
inc
inc
rclb
xor
nop
inc
add
and
lock
aam
and
fdivl
and
lods
ret
and
stos
insb
adc
mov
nop
std
sarb
std
mov
inc
out
cmp
sbb
inc
into
pusha
loop
shrl
pop
inc
mov
cld
jg
clc
or
stos
sub
and
jp
jno
xchg
out
xor
and
add
mov
lds
scas
pushf
pop
jb
js
in
es
in
mov
mov
mov
xchg
fadds
scas
push
pop
push
adc
inc
ret
fnstenv
jle
out
out
scas
cmp
cmp
loope
mov
addb
inc
fcmovu
clc
call
push
mov
lret
loope
and
mov
xor
daa
pop
dec
ja
cltd
mov
sbb
aas
mov
fcmovu
testb
sub
test
or
add
and
or
call
push
dec
notl
cmpl
xchg
jg
xchg
aad
mov
test
xchg
arpl
and
bnd
adc
jge
loop
xor
add
lcall
cs
dec
sub
ficoml
leave
scas
push
push
popa
sub
iret
movsl
scas
fcomip
arpl
addr16
xchg
and
mov
jecxz
dec
sti
shrl
and
push
add
dec
fiaddl
aad
pop
sub
stc
adc
mov
cmpsl
bound
into
out
mov
mov
in
mov
fdiv
xor
cmp
adc
xchg
inc
pop
and
cmc
xchg
adc
out
outsb
jp
cltd
and
push
ss
mov
es
icebp
adc
mov
ljmp
icebp
call
adc
mov
lods
jnp
jle
mov
mov
fld
stos
xor
jb
adc
stos
rorb
fstl
cmp
imulb
int
push
sbb
inc
sbb
push
dec
rcrl
es
stos
fwait
mov
dec
mov
out
push
dec
rclb
imul
mov
or
stos
out
fimull
adc
sub
xchg
in
cmp
loop
cmc
sahf
fs
outsl
dec
add
repnz
stc
divb
inc
les
rcl
xchg
mov
jnp
xlat
xor
test
pop
mov
int
add
leave
std
shl
test
adc
test
out
dec
and
mov
adc
dec
mov
dec
jnp
cmpsl
cmpsl
call
arpl
fcom
fiadds
mov
daa
es
ficoml
insb
shrb
ret
lret
sbb
jg
push
clc
mov
pushl
leave
mov
aad
mov
je
jmp
push
mov
pop
sub
insb
xor
or
lds
icebp
fdivr
stos
xor
inc
or
jb
leave
movb
out
mov
sbb
pop
mov
dec
pushf
cmp
mov
ljmp
mov
stos
outsl
push
jle
repz
dec
fwait
ljmp
dec
mov
push
xchg
test
jae
test
pop
lods
push
xchg
adc
les
cmpsb
sub
movsl
sub
dec
nop
adc
sbb
dec
sbb
fwait
js
fsubl
vcvttss2si
push
mov
xchg
push
scas
xor
inc
push
xor
fcmovne
dec
mov
lahf
into
notl
fwait
cmpsl
aaa
outsb
stc
es
sbbl
mov
dec
sub
mov
and
jne
jb
pop
push
inc
or
mov
mov
cs
dec
jb
cmp
inc
add
sub
xor
sbb
notb
cmp
mov
and
and
scas
mov
iret
xor
jp
fadds
inc
aam
imul
js
in
test
adcb
adc
xchg
mov
test
loop
sub
test
sub
cmp
sbb
jno
jle
mov
jecxz
or
jns
sub
pop
imul
push
add
in
pop
or
out
cld
mov
stos
xor
mov
pushf
jle
lcall
add
and
movsl
stc
mov
adc
adc
adc
mov
xchg
fdivrs
mov
adc
jmp
shll
mov
mov
jmp
fwait
push
dec
clc
roll
mov
sub
scas
lock
aad
int
cli
into
cltd
jnp
inc
jp
inc
int3
das
aaa
inc
test
lods
cwtl
pop
mov
push
and
mov
and
dec
sysret
and
mov
add
dec
lock
push
mov
js
fdivs
pop
inc
enter
test
jae
fisubs
jl
dec
rorl
enter
mov
pushf
fwait
inc
jns
outsb
pushl
pop
sbb
popf
xor
hlt
xor
out
or
divl
sbb
daa
vaddsubpd
xchg
cld
mov
cmpsb
lods
mov
insb
ljmp
fld1
cmp
ljmp
out
ss
inc
dec
dec
decl
pushf
mov
aas
mov
mov
repnz
jl
adc
icebp
push
cmp
jnp
iret
iret
push
xchg
inc
leave
sbb
or
andl
sti
jno
jnp
sti
cld
dec
loopne
cltd
test
or
mov
and
stos
mov
mov
iret
inc
stc
int3
divl
cmp
mov
bound
insl
repnz
mov
rorb
add
cwtl
cltd
jl
orb
test
adc
add
pushl
cmp
lcall
mov
sbb
push
mov
xlat
sub
add
popf
fucomp
cmpsb
mov
adc
sub
inc
lds
fdivs
and
pop
das
dec
mov
cmp
sbb
loopne
pushf
push
add
enter
lock
and
pop
jmp
cmc
jns
sbb
sub
or
mov
movsl
jp
mov
dec
push
std
jge
pushf
sarb
cltd
aam
cwtl
cmc
loope
xchg
cmpsb
dec
sbb
cli
and
adc
es
mov
bnd
mov
push
cmp
aam
jp
inc
jb
pusha
cmp
add
les
fcmovb
and
in
mov
outsb
faddp
std
cld
jmp
into
cmpsb
sti
inc
mov
leave
jne
outsl
fwait
or
jo
pop
loopne
in
pop
cs
int3
pop
jl
addb
push
jg
data16
int3
jbe
push
jo
daa
adc
cmp
jmp
pop
or
stc
fnstsw
lret
jbe
push
adc
adc
and
mov
in
std
jo
xor
mov
idivb
jne
push
push
cmp
pop
cmpsb
imul
outsl
jbe
jae
imul
lahf
das
pop
std
in
and
icebp
mov
xorl
and
aas
shrl
cmp
ja
mov
fs
insl
aas
add
push
out
push
daa
out
fsts
mov
and
leave
stc
int
and
popl
fsubl
pop
test
lods
mov
scas
cmpsb
mov
test
add
lret
mov
loopne
and
sbb
ss
clc
xlat
in
pop
iret
imul
insb
je
mov
dec
push
out
sub
adc
jl
jge
sub
je
dec
cs
lahf
ficoms
hlt
adc
stc
jo
test
adc
es
ret
faddl
decb
insb
inc
xor
pusha
adc
mov
roll
adc
roll
stc
dec
in
fdivrs
das
cmp
and
pop
mov
fstl
leave
ds
and
jne
cmp
xchg
les
add
lock
push
xor
pop
and
xor
pop
clc
mov
and
out
sub
je
imul
dec
in
mov
mov
sarb
pop
pop
mov
nop
test
outsl
adc
jae
mov
adc
pop
xchg
xor
dec
lds
cmp
mov
jge
xchg
test
in
xchg
mov
xchg
lea
imul
sahf
xchg
out
lods
add
hlt
test
mov
xchg
movsl
xor
fstpt
ds
push
or
xchg
pop
into
lahf
call
daa
or
hlt
std
lret
push
in
loope
push
cmp
add
jns
xchg
jle
mov
imul
inc
in
cmp
int
push
out
addr16
cmp
cli
add
dec
and
push
xchg
mov
xlat
cmc
push
shl
pop
inc
jle
testl
push
xchg
in
inc
inc
cmp
insb
push
and
out
loopne
adc
xchg
and
add
filds
jle
add
out
mov
in
adc
imul
push
leave
xor
cmp
popa
fidivrs
nop
mov
xchg
pop
sbb
pop
jg
dec
call
mov
xchg
inc
cld
adc
mov
repz
xchg
enter
push
mov
into
sbb
lret
adc
rcll
dec
push
stos
repnz
mov
int
dec
xor
adc
in
cltd
std
push
movsl
aas
mov
ss
aad
fcomi
add
enter
cmp
or
test
or
cmc
ja
bound
inc
xor
jb
add
insb
dec
lock
xchg
mov
cli
icebp
mov
jno,pt
pop
ret
xor
xchg
or
inc
aam
add
adc
sub
lret
js
pop
dec
mov
enter
inc
cltd
call
cmp
inc
cmp
xchg
mov
adc
sarl
mov
mov
add
rorb
add
xchg
jl
repz
mov
add
pop
pop
pushl
aam
xchg
cmp
xor
dec
sbb
iret
xchg
imul
and
pop
mov
lret
dec
sbb
and
pusha
cmpsl
hlt
int3
test
or
cmp
imulb
sar
and
nop
jecxz
push
gs
mov
xlat
fwait
in
mov
mov
in
dec
lahf
mov
mov
add
pop
insb
sbb
fbstp
push
jl
xor
or
push
mov
inc
insl
sahf
adc
push
cwtl
dec
movsl
jae
mov
or
dec
data16
inc
stos
pop
cld
rol
mov
clc
xchg
aaa
inc
fcomi
aam
cmp
inc
push
iret
mov
jae
or
pop
jns
ljmp
pop
ss
cmp
out
call
sahf
rolb
jb
je
or
sbb
incb
add
loop
fstpt
lret
xlat
push
fisubrs
push
inc
sub
fisttps
gs
scas
nop
lock
add
push
sub
mov
cltd
sbb
sbb
mov
sbb
mov
leave
or
jbe
imul
fisttps
xor
icebp
push
jbe
pop
xor
push
sbb
mov
mov
scas
testl
push
sbb
popf
cmc
xor
push
pop
sbb
lock
mov
gs
scas
cmp
sbbb
shll
rol
ss
and
pop
pop
mov
repz
dec
adc
loopne
inc
cmp
adc
rcr
xor
ret
xor
xchg
xchg
pop
mov
gs
fwait
mov
adc
movsb
mov
stos
repnz
rolb
ja
in
shlb
jns
mov
jne
cmp
xchg
dec
movsb
cmp
jns
cmp
fisubrs
push
shr
in
repnz
xlat
adc
jp
pop
mov
lret
dec
cmc
xchg
in
or
mov
ja
arpl
and
sub
push
sti
push
xor
fnsave
or
jbe
xchg
push
cmp
jl
fiadds
stos
push
loop
inc
addl
adc
and
aam
insb
aaa
mov
jbe
aam
cmp
mov
push
xor
aas
xchg
cwtl
outsb
xchg
adc
jmp
std
mov
lahf
sbb
push
insl
cmpsl
xor
nop
int3
dec
inc
mov
mov
pop
bound
push
stc
sub
scas
aas
adc
add
push
mov
out
aaa
sbbb
loopne
adc
and
fstps
jbe
int
pop
popf
adc
jecxz
rol
dec
nop
repz
shlb
ljmp
jge
add
std
cs
imul
adc
cs
rol
cwtl
test
inc
cmp
in
jl
lods
mov
or
aad
xor
popf
and
add
in
pop
nop
pop
pushf
pop
mov
push
mul
push
push
xchg
dec
cmp
add
push
jnp
cmp
aam
stc
add
iret
pop
xchg
mull
xchg
mov
cmp
lods
pop
and
dec
dec
loopne
adc
out
scas
xor
or
out
dec
adc
mov
mov
push
and
sbb
aad
mov
sbb
cmp
xchg
cli
stc
jl
cmp
pusha
scas
mov
lea
movsb
or
loope
popf
out
dec
in
pop
imul
pop
insl
mov
icebp
ds
inc
add
jbe
popf
ss
inc
or
aas
test
sarl
adcb
push
cmp
mov
pop
movsl
movsb
jb
cmp
pop
pop
jmp
jne
push
pop
cmp
cli
jo
and
iret
lcall
push
sub
sahf
lods
inc
push
in
dec
es
daa
dec
rcrl
ret
mov
cltd
je
clc
jge
xchg
jbe
into
mov
loop
inc
popf
sub
xor
xchg
out
cs
push
cmpsl
mov
mov
xor
mov
adc
scas
popf
dec
cmp
xor
add
jg
and
out
lret
inc
adcl
mov
or
xchg
das
ret
jbe
bound
xchg
pop
fs
data16
mov
xor
and
aaa
xchg
jl
mov
int
push
data16
lea
outsb
ja
sub
andnps
es
enter
dec
jmp
repnz
arpl
fcmovb
mov
add
andl
or
mov
jl
fdivrl
adc
and
ret
and
jnp
and
pop
mov
sbb
cmpsl
pop
inc
mov
daa
sbb
jecxz
cmpsl
adc
vpminsw
aas
mov
mov
sbb
mov
mov
aas
dec
out
xlat
aas
add
adc
fildll
test
push
xchg
push
jl
sahf
xchg
nop
in
xchg
inc
popf
xchg
or
stos
mov
mov
cs
push
mov
rcr
out
push
add
cmp
jl
push
sbb
sbbb
fists
out
xchg
or
xorl
push
sti
fidivrs
add
sub
dec
lret
and
ror
mov
xchg
mov
mov
shrb
dec
sahf
inc
test
mov
or
cmp
aas
insl
mov
roll
pop
push
xlat
adc
orb
rorl
inc
mov
add
pop
loope
jns
test
and
data16
enter
push
outsl
lret
xchg
mov
add
sub
icebp
add
push
mov
fnstcw
mov
aaa
mov
divps
sahf
int3
mov
cmp
mov
lret
je
aad
dec
xor
push
repz
in
mov
adc
mov
sub
ljmp
jo
jo
mov
stos
shl
lds
sub
fs
sub
xchg
adc
and
mov
mov
adc
adc
test
xchg
xchg
nop
xchg
jl
pop
mov
shl
mov
mov
call
push
ret
adc
sbb
push
rorl
inc
pop
jne
mov
popf
mov
adc
lahf
cmpsl
push
inc
out
mov
fcmovu
mov
cs
add
cmpsl
lock
adc
and
fimuls
adc
add
mov
inc
test
in
pusha
rcr
push
and
push
fs
and
jp
in
add
xor
or
insl
or
dec
das
mov
pushf
mov
push
lret
in
push
push
ljmp
add
out
jne
movsb
or
lods
call
inc
add
je
loope
jl
dec
add
push
mov
insb
cli
ret
xchg
mov
andw
inc
arpl
aam
sub
repnz
aad
aaa
int3
dec
cmp
adc
and
xor
jns
in
push
stos
push
inc
in
jg
cli
mov
aam
pop
in
add
clc
adcl
cwtl
sbbl
cld
pop
test
inc
mov
lds
aaa
icebp
pop
sbb
xor
jge
pop
inc
nop
scas
test
adc
and
and
cs
int
and
lahf
rcrb
sti
scas
jmp
add
ljmp
jae
lock
dec
and
fmulp
fwait
jg
xor
cmp
xor
inc
scas
add
xchg
add
loopne
ja
arpl
mov
push
and
loop
mov
fst
in
jp
gs
int
out
test
sub
test
push
jmp
cmp
arpl
loope
call
push
ret
inc
xlat
adc
and
jle
push
adcl
in
xchg
push
jg
xchg
icebp
in
cld
lret
out
stc
lods
in
dec
out
inc
mov
mov
js
cmpsb
inc
fisttpl
shl
int
test
dec
fistl
sub
loop
jmp
xchg
rorl
aaa
adc
out
ficomps
sub
into
xchg
popl
mov
jno
adc
sub
aam
inc
lcall
pop
cmp
pushf
jl
pop
dec
lea
bound
xchg
insl
shl
xchg
nop
inc
repnz
sahf
ss
xchg
clc
mov
adc
rclb
jns
mov
rcll
mov
jecxz
cltd
test
cmpsl
out
cmp
int
lret
bsr
pop
shll
pop
adc
push
enter
insb
inc
xchg
je
sti
clc
sbb
cld
pop
ret
mul
lock
and
scas
inc
mov
or
das
and
cli
dec
out
add
fidivs
iretw
ljmp
aad
and
js
out
mov
push
lds
pushf
test
adc
push
cmp
dec
and
xor
mov
imul
dec
sub
push
je
dec
fimull
fstl
xchg
cmp
mov
adc
and
cmpsl
mov
stos
enter
mov
dec
ja
lcall
mov
cmpsb
fcmovu
cwtl
pop
sbb
rcll
mov
mov
fidivs
and
pop
sub
mov
add
ficompl
movsl
jae
dec
fildl
lret
mov
rcrb
jle
mov
sbb
iret
fisubrs
xchg
jb
mov
adc
cmp
das
in
mov
sti
call
fadds
add
or
jno
xchg
js
jg
mov
or
jbe
mov
mov
mov
push
adcl
inc
fcmovnb
ljmpw
js
imul
xchg
shl
add
mov
pusha
cmpsb
inc
sbb
xchg
inc
add
aas
imul
fdivp
stos
or
adc
test
pop
dec
out
fcmovb
test
push
dec
mov
movsb
mov
cltd
daa
lahf
orl
out
stos
std
mov
rorl
sti
dec
scas
xchg
test
sbb
dec
dec
push
repz
imul
xchg
pop
pop
dec
sbb
lret
sti
push
mov
xchg
inc
cld
imul
sbb
lods
adc
sahf
dec
xchg
push
prefetch
or
shrl
or
pop
inc
inc
sti
dec
push
ret
mov
subb
cmpsl
sahf
xorl
insb
inc
sbb
loop
cmp
aad
and
xchg
xorb
shlb
push
ret
jle
mov
mov
add
int
xchg
in
mov
cmp
xchg
sbb
scas
ffreep
pop
mov
add
mov
dec
int3
and
call
cmp
roll
call
ljmp
nop
int3
mov
mov
int3
nop
out
jno
and
pop
das
xor
xchg
dec
xchg
add
sbb
mov
xor
pop
and
fcomps
cmp
inc
ds
js
stos
rcll
adc
push
xor
jns
xchg
btr
nop
sub
outsb
cmpsb
clc
jmp
jbe
pop
mov
xchg
push
cmp
addb
bnd
cmp
cmp
fwait
sbb
jge
sub
mov
mov
in
aaa
addr16
xor
ja
ljmp
mov
pusha
add
mov
and
xchg
pandn
push
iret
jg
cmp
sbb
push
outsl
xchg
outsl
pop
es
jge
lea
jae
fwait
or
adc
dec
scas
dec
cmp
lods
mov
mov
in
xchg
dec
mov
sti
push
push
pop
js
sbb
dec
sti
xchg
in
adc
pop
shll
sbb
sub
pop
aam
sbbb
icebp
leave
xor
sbb
pop
xchg
gs
punpckldq
jge
std
mul
mov
pop
fdivl
lods
lret
push
aam
in
push
adc
fstpl
repnz
push
daa
lods
cltd
xor
adc
add
pop
pop
pusha
out
pop
in
sub
add
or
out
fsts
insb
dec
js
add
loope
fwait
jno
adc
jns
push
lcall
popf
xchg
adc
sbb
or
inc
mov
fistl
jp
sbb
aaa
pop
and
jmp
mov
outsl
sub
jne
push
test
ret
cs
xor
sti
insb
pushf
jmp
cs
or
dec
lret
adc
inc
or
jecxz
in
std
dec
cmp
ds
pop
repz
neg
add
outsb
push
shlb
fs
pop
mov
in
dec
icebp
mov
outsl
fnstsw
fisttpl
push
shlb
decb
add
int
sub
add
xor
mov
leave
xor
inc
push
sub
pop
pop
pushf
push
rcll
push
cmpsl
out
fmuls
and
insb
fwait
and
jge
mov
mov
data16
push
push
das
scas
adc
jno
paddsb
inc
test
xchg
and
inc
xchg
lods
ss
fldl
ficomps
cwtl
into
scas
adc
jno
push
imulb
ss
bound
mov
cmp
inc
in
jmp
cs
pop
jmp
movsb
outsl
push
ret
aaa
pop
cmp
loop
mov
or
or
stos
mov
hlt
ljmp
mov
call
out
les
adc
and
int
clc
cmp
pop
mov
data16
dec
fsubrl
fsub
jg
push
and
jmp
xor
inc
sub
inc
push
les
fs
pop
stos
into
xchg
push
fisttpl
lret
shrb
imul
push
rcrl
mov
mov
stos
push
jno
jo
jmp
add
lcall
rorb
in
pop
jns
ljmp
mov
cmp
mov
jae
icebp
in
push
test
rclb
mov
xor
inc
in
adc
push
shlb
mov
int
jecxz
int3
xorl
push
orb
out
fwait
mov
cmpsb
sar
rorb
cmovno
outsl
popa
stc
adc
fadd
dec
mov
push
xchg
arpl
dec
adc
xchg
daa
ret
cwtl
fldenv
addr16
mov
inc
fiaddl
push
inc
mov
push
lock
inc
ss
or
arpl
lds
mov
xorl
and
sub
mov
and
cmp
pop
js
or
in
das
or
cmp
mov
add
add
push
js
inc
cmp
mov
xchg
leave
les
xor
rcrl
mov
mov
add
std
or
js
decb
xchg
daa
dec
cmp
bound
stc
xchg
and
xchg
insl
fnstsw
dec
call
and
imul
mulb
add
jnp
leave
mov
mov
inc
pop
cmp
lret
and
mov
outsl
jo
fs
jmp
jg
cmp
xor
mov
dec
pusha
mov
lret
or
int3
adc
out
ret
ret
mov
xchg
or
movsb
in
xor
mov
jle
into
or
jl
xchg
ret
lcall
mov
sarb
enter
mov
lret
stos
jae
pop
clc
add
sbb
push
insb
mov
imul
orb
mov
cmp
fucom
or
mov
mov
pop
sbb
lahf
cmc
in
inc
xor
xchg
push
xlat
dec
or
xchg
adc
shlb
stos
ds
cli
push
shlb
push
push
jns
mov
mov
test
jne
inc
mov
push
dec
pop
repz
loope
sub
push
lcall
popa
hlt
cmp
mov
add
sbb
insb
rcl
adc
imul
xchg
push
test
test
lods
cmp
and
inc
mov
xchg
pop
sbb
jo
ds
out
es
or
aad
addr16
es
push
fsubl
popf
add
cltd
js
mov
sub
iret
lods
or
jmp
sub
ss
lahf
cld
js
jge
mov
call
rcll
jb
xchg
dec
fidivrs
negl
mov
jnp
dec
orb
xchg
incb
data16
or
fnstsw
or
xlat
cmc
mov
and
loope
push
inc
add
mov
add
out
mov
mov
jle
fadds
outsb
inc
cli
sub
imul
dec
test
fisubrl
lret
add
mov
dec
push
pop
inc
out
lods
stos
movsb
xchg
cmp
pop
or
jns
pop
or
fsubl
test
push
inc
jne
add
or
xor
and
fadds
in
imul
inc
aam
out
sub
lea
push
push
lcall
lods
fbld
xor
mov
mov
xchg
mov
dec
push
mov
je
std
int3
add
je
mov
jns
mov
cltd
adc
sub
flds
fmull
outsb
sub
and
xor
dec
sbb
jb
xchg
fwait
xor
pusha
orl
das
sbb
jns
push
std
mov
mov
mov
or
aas
mov
mov
cmpsl
xor
scas
in
pop
movsb
push
movb
fstpl
mov
sahf
or
xchg
jg
scas
lahf
xchg
test
mov
dec
insb
orb
popf
pop
jp
cmc
mov
out
dec
xchg
push
mov
push
inc
mov
fistl
push
cmpsb
or
ds
mull
je
insl
ret
push
inc
popa
lock
pop
xlat
xlat
inc
out
mov
inc
xlat
inc
ss
daa
out
out
je
lods
pop
lods
lods
push
push
movl
scas
push
cmpsl
inc
fs
lea
and
sti
pop
and
rcrb
xchg
outsb
sub
xchg
mov
test
push
mov
bound
mov
rcl
push
mov
sub
das
std
xchg
push
xchg
cmc
dec
popf
aad
jns
and
sub
mov
xchg
rcrl
les
mov
push
push
popa
in
fmul
pop
cmp
add
call
out
dec
pop
addr16
mov
scas
lods
scas
lods
fst
rclb
push
jl,pt
jl
clc
scas
sbbl
movsl
push
push
shll
and
mov
insl
movsl
or
lret
sbb
xchg
dec
in
dec
jo
jl
dec
adc
inc
pop
shr
xchg
clc
int3
rorl
push
jns
mov
sub
mov
outsl
pop
lcall
stos
sbb
dec
pop
in
sbb
aad
inc
int
sub
sub
into
in
je
inc
sbb
aam
push
mov
sbb
sbb
incl
out
xor
fcmovne
inc
cmp
xchg
cmp
pop
les
xchg
cmp
mov
lret
aas
mov
mov
bound
in
lods
out
loope
movsb
inc
mov
jnp
add
popf
fs
and
mov
pusha
jns
mov
sbb
test
lods
mov
adc
arpl
push
xchg
mov
stos
mov
pop
aam
add
cmp
rorl
test
xchg
mov
pop
sbb
aad
nop
mov
push
shrb
cmp
das
dec
xlat
adc
jne
lods
cmp
mov
sub
or
pop
adc
popa
pop
loop
cmp
mov
imul
add
outsb
cmc
sbb
xchg
add
jge
imul
test
add
sub
pusha
js
ret
mov
aas
nop
dec
enter
push
repz
das
notl
mov
subb
aas
iret
call
mov
test
and
pop
sbb
mov
mov
loop
or
mov
mov
jb
mov
fucomp
mov
insl
cmc
jmp
pop
insl
add
cmp
and
xlat
or
int3
adc
aaa
scas
std
mov
sub
lret
mov
scas
sub
mov
dec
ret
daa
loope
mov
fimull
dec
add
in
jns
fisubs
icebp
push
xchg
cs
mov
or
push
adc
xchg
scas
pushf
scas
je
xor
dec
adc
sub
loop
pushf
adc
push
mov
ret
fsts
sub
fidivrl
push
lret
pop
lret
outsb
mov
nop
gs
das
stc
sub
cmpsl
inc
dec
cmpsl
mov
sti
out
faddl
test
cmc
cmpsb
test
cmp
fsub
jnp
adc
divb
out
into
popa
movsb
xor
lret
je
mov
mov
inc
in
xchg
out
enter
xchg
sbb
pop
leave
psubw
int3
scas
add
add
or
mov
dec
or
push
leave
fsubr
daa
insb
xchg
sti
push
mov
cmp
out
movsb
xor
adc
out
adc
xor
js
lcall
lret
jmp
arpl
xchg
enter
pop
inc
cmp
mov
div
adc
test
mov
call
inc
sbb
push
jo
sub
bnd
repz
out
push
sub
sbb
lock
sarb
or
pushf
imul
mov
repz
mov
xor
push
mov
out
lcall
lcall
pop
and
lock
pop
or
dec
repz
mov
mov
into
cmpsl
jns
mov
dec
and
movsb
lds
push
enter
pop
ljmp
loope
xchg
add
fimull
push
pop
ds
mov
stos
insb
stos
lods
sti
movsl
sub
add
push
std
cmp
sbb
mov
pop
aad
or
adc
mov
push
icebp
loop
flds
xor
cltd
mov
mov
xor
pusha
push
sar
push
cwtl
xor
loopne
test
loopne
xor
std
repnz
jmp
fstpl
icebp
inc
or
pusha
shrl
mov
sub
xchg
testl
xchg
incb
aas
das
dec
jl
add
mov
push
adc
dec
pushf
or
xchg
adc
jbe
out
in
mov
repz
fstpt
mov
pop
add
push
daa
adc
mov
cwtl
mov
mov
push
and
jnp
mov
jno
push
xor
mov
int
fnstsw
cmp
popa
and
lahf
mov
out
xor
sub
mov
lahf
and
subl
cmp
pusha
test
ja
clc
jg
test
jne
and
test
scas
add
cmp
in
dec
inc
sbb
mov
pop
jns
popf
arpl
mov
jp
xor
adc
stos
jl
test
cmpsb
xor
push
cmpsb
push
out
dec
inc
xlat
sahf
jle
roll
xchg
cwtl
jge
icebp
in
jo
inc
int3
fdivs
loopne
and
jns
shlb
fisubs
jecxz
add
pusha
add
pop
roll
aad
mov
cmp
pushf
pop
pop
loop
lea
fs
arpl
out
cmc
das
mov
lret
into
cmp
inc
les
mov
inc
adc
adc
mov
mov
lahf
sbb
pop
xchg
lock
xchg
cmp
aaa
dec
ret
sub
rolb
fwait
mov
mov
icebp
push
jno
mov
inc
jmp
ficomps
hlt
cmp
hlt
mov
mov
xor
sbb
test
adc
jae
sbb
les
sbb
sahf
fdivrl
mov
jle
mov
push
imul
xchg
ror
mov
es
pop
fsubl
lahf
std
mov
mov
popa
cs
hlt
sub
das
int3
lret
push
fchs
int3
rorl
jno
mov
jnp
std
push
cli
sbb
rorl
movsl
pop
push
push
xchg
mov
dec
push
jmp
scas
out
push
pop
pop
or
popa
sbb
mov
stc
mov
inc
cmp
jb
pushf
add
mov
call
imul
mov
shlb
aaa
adc
scas
popf
out
in
repnz
jge
adc
sbb
push
rcll
leave
sub
clc
hlt
rolb
xchg
mov
xor
mov
push
idiv
idivl
jae
xor
not
mov
out
leave
and
lret
rorb
or
dec
xor
dec
or
pop
test
mov
sti
ret
stos
xchg
cltd
clc
xchg
dec
adc
roll
and
enter
dec
sbb
cwtl
int
repnz
sahf
into
push
cmp
fadd
jmp
dec
cwtl
movb
dec
add
mov
push
popf
pop
icebp
xchg
out
sub
mov
inc
push
sbb
jl
test
mov
lret
xor
jg
mulb
add
sub
mov
ja
rcrb
dec
xlat
xchg
pop
push
cmp
mov
adc
push
push
mov
xor
hlt
shr
mov
test
int
inc
fstp
sub
xchg
adc
and
sbb
imul
sub
es
arpl
movsl
jg
push
aam
lock
fcoml
fcmovb
pop
stos
enter
cmp
out
daa
jmp
push
fists
and
js
fwait
mov
ds
mov
xor
lret
or
mov
mov
addr16
call
loopne
push
cmpb
inc
dec
mov
sub
push
inc
mov
dec
imul
dec
push
ss
movsl
fmull
out
inc
dec
aaa
cld
ret
insb
or
fsubl
pop
push
ss
lock
push
mov
inc
rcll
and
inc
test
aad
xchg
test
push
fiadds
dec
repz
mov
dec
adc
xchg
mov
ljmp
mov
jg
pop
jmp
xchg
xor
repnz
mulb
and
mov
cmp
dec
fwait
push
and
dec
cld
inc
test
xchg
loop
mov
xchg
jae
negl
jecxz,pn
rcll
xor
iret
push
arpl
test
iret
stc
jnp
push
or
outsl
cmp
daa
fldt
mov
inc
mov
mov
jle
cld
ret
call
adc
mov
xchg
jp
and
maskmovq
testl
mov
jecxz
cs
lods
enter
and
lret
movsb
in
push
fstl
test
leave
xor
insb
out
mov
popf
jl
cmp
xor
inc
adc
aaa
sbb
imul
pop
push
adcl
pop
std
add
shl
in
pop
sub
push
and
adc
sti
jo
adc
sub
mov
add
mov
subb
xchg
adc
mov
and
mov
scas
and
dec
inc
jl
add
ja
or
inc
les
stos
mov
sar
push
adc
lods
dec
xor
and
inc
pop
repz
xlat
push
mov
shl
mov
stc
nop
cmp
push
fstl
adc
stc
xchg
mov
push
mov
and
xchg
int3
hlt
into
int
lcall
mov
cmp
sub
sub
out
dec
loope
xchg
sub
gs
fwait
popa
test
out
iret
pop
mov
ret
sbb
dec
jge
cld
sarl
adc
std
sbb
je
int
sbb
cmpsb
mov
sbb
xchg
cmc
pop
push
out
mov
cwtl
addr16
push
xchg
xor
in
test
mov
mov
in
sbb
sbb
stos
inc
inc
cmp
jbe
fdivp
rcll
fcoml
int
in
out
andl
pop
out
xchg
xchg
inc
rorl
or
leave
pop
lock
cld
push
rcl
mov
aam
mov
sbbb
inc
cmp
loope
push
pop
jl
push
lods
add
or
in
xor
dec
sub
pusha
sbb
add
int3
or
xor
call
push
movsb
adc
cmp
dec
repnz
filds
addr16
mov
fdivr
mov
mov
aad
or
ret
sbb
jp
xor
xchg
jge
aad
inc
popf
cmc
insl
sub
push
mov
les
subb
jae
adc
jl
mov
adc
rclb
mov
cmp
ds
cmp
movsb
dec
jecxz
and
xchg
or
mov
leave
and
mov
xchg
xchg
jns
int3
pop
mov
push
lea
mov
in
mov
or
jnp
mov
jle
ficompl
clc
imul
jecxz
cmp
mov
sahf
shll
pop
scas
clc
jae
fs
sbb
test
push
lods
mov
out
cmp
jecxz
scas
rcll
add
fdivrp
fs
dec
lcall
sti
fsub
cli
xchg
das
subb
push
ljmp
pusha
nop
int3
sbb
mov
rolb
xchg
call
jo
add
shlb
lret
gs
or
jecxz
cli
loope
stc
mov
jne
insb
les
adc
inc
fisttpl
mov
pop
hlt
adc
jg
lods
dec
xchg
pop
adc
and
int3
sbb
mov
sub
pop
add
test
sbb
inc
int3
mov
jl
jle
fsin
mov
in
ret
andl
inc
jecxz
clc
lahf
in
xchg
test
les
dec
call
mull
mov
add
int
cmpsl
outsb
xor
out
aaa
xlat
call
js
incl
pop
sbbl
mov
or
pushf
ret
stos
xchg
pop
jnp
sbb
imul
sub
test
pop
adc
sarb
decl
repnz
xchg
lea
cld
dec
cli
push
jnp
cmpsl
loop
imul
in
push
sub
negl
fnstsw
xlat
push
push
or
stos
shll
addr16
pop
dec
movsb
sti
aaa
inc
iret
add
fisubrs
or
jecxz
rep
fstl
data16
mov
add
xor
add
or
mov
jmp
test
jg
movsl
lds
das
imul
lock
mov
xchg
subb
push
lods
cmp
lods
lock
push
push
jb
jb
imul
fisttpll
xor
lods
push
sub
mov
add
xchg
idiv
mov
pop
mov
sbb
and
lods
adc
mov
xor
test
push
push
mov
or
je
or
mov
rcr
das
add
push
xor
arpl
xchg
repnz
mov
dec
mov
pop
shr
jnp
test
and
mov
js
lret
jl
xchg
das
jne
pop
bound
push
xchg
lahf
enter
mov
in
jl
jno
xor
mov
inc
icebp
lea
mov
add
cmp
cmpsb
shr
shlb
push
sti
cmova
xchg
fsubs
imul
iret
jecxz
imul
mov
jo
mov
push
jnp
push
pop
adc
adc
adc
add
aam
xchg
mov
adc
popf
aas
cmpsb
adc
cmpsb
nop
test
sbb
sub
mov
adc
test
pop
in
adc
and
lods
fwait
and
jl
arpl
jg
xor
sahf
xchg
loopne
dec
adc
stos
lock
cld
xchg
out
lret
adc
pop
xor
mov
mov
pop
mov
adc
orb
imul
clc
ret
js
das
xlat
xchg
push
xchg
jl
push
lahf
sbb
mov
mov
pop
xor
jbe
aas
xchg
xor
arpl
subb
pushf
arpl
nop
gs
js
jecxz
or
jno
push
mov
or
movsl
inc
call
inc
in
pushl
mov
sbb
or
xor
stos
loopne
imul
out
push
xchg
test
inc
stos
hlt
and
xor
outsl
pushf
test
stos
mov
lcall
test
mov
xchg
and
aas
out
mov
insl
inc
push
pop
mov
and
mov
fstpt
ss
int3
aas
insb
pop
stc
aam
mov
insb
cld
bound
xchg
cld
pop
loop
fsubrs
int3
xchg
sbb
imul
fimull
or
jecxz
push
push
pop
and
fldcw
dec
in
pop
out
mov
push
pushf
clc
aaa
shr
cmc
mov
mov
jb
sbb
mov
out
xor
jne
xor
ds
add
pop
adc
ss
movd
adc
xor
dec
andl
pop
call
insb
add
lret
lds
nop
movsb
test
xchg
call
ret
ss
or
jg
add
lods
jbe
mov
jecxz
xchg
insb
push
add
jg
cli
pop
lods
xchg
ds
push
sub
pop
out
lahf
addl
dec
xchg
mov
cmc
and
test
in
inc
pop
mov
push
push
add
sarb
dec
std
bound
xlat
mov
mov
movsl
fimuls
imul
lret
lret
fnsave
outsb
rcrl
jae
pop
push
pushf
cmp
fcomps
push
inc
adc
push
mov
sbb
push
mov
jne
jg
gs
pop
pop
cltd
nop
adcb
mov
and
xchg
shrl
jae
shrl
shlb
fisttpl
fstl
or
decl
sbb
mov
jno
inc
xchg
xor
xor
das
aas
bound
into
test
lret
lods
out
dec
sub
cwtl
movsl
inc
into
xchg
sbb
int3
outsl
cmp
cltd
data16
popa
inc
push
pop
mov
cmc
xchg
mov
jg
out
pop
mov
jge
pop
gs
mov
movsl
ficompl
xlat
leave
outsl
pop
shll
nop
movsl
je
cmp
sub
mov
jb
lock
cmc
pop
cs
cwtl
into
dec
sbb
xor
mov
sbb
js
popa
jb
out
mov
mov
xchg
idiv
add
or
mov
lahf
xor
mov
mov
add
std
insl
xor
inc
push
add
mov
push
inc
cmp
scas
xor
cld
mov
xor
mov
lods
frstor
aad
ja
add
hlt
add
in
and
pop
roll
sub
jbe
sub
mov
cmp
add
insl
adc
imul
leave
mov
or
push
adc
pop
out
cmp
leave
cmp
pushf
cmp
pop
test
and
stc
or
es
mov
inc
loope
cmp
jbe
inc
mov
ja
xchg
stos
xor
push
stos
xor
out
ss
pop
dec
adc
aas
mov
clc
pop
andb
add
lods
aas
xchg
scas
cmp
inc
gs
xrelease
sub
inc
pop
movl
xchg
inc
nop
popa
mov
rorb
jecxz
pop
pusha
fists
xor
xor
and
sbbl
push
push
lods
fmulp
ret
inc
dec
pop
daa
bound
push
or
das
jmp
out
pushf
dec
sub
mov
dec
jae
lcall
pop
xcrypt-ecb
cmpsl
leave
outsb
lret
ds
adc
insb
jp
das
ss
jno
xchg
push
ficoml
aaa
dec
and
pop
xchg
in
mov
scas
sub
testb
cmpsb
mov
push
adc
xor
push
movsb
mov
cli
imul
jp
jl
aas
sub
cltd
sbb
bound
xchg
test
xor
rcrl
ret
xor
push
xor
adc
fists
cli
mov
mov
mov
cmp
fimull
xchg
fisubl
and
mov
cli
out
test
rcrl
cltd
push
lahf
or
mov
or
inc
js
xchg
xor
inc
dec
pop
rcl
mov
outsb
xchg
mov
push
add
lahf
inc
hlt
sub
movsl
pop
in
stc
stc
jmp
cmp
rorb
es
inc
aad
adc
dec
es
push
push
adc
js
pop
jg
cmpb
std
cmp
push
cmp
add
cs
push
mov
movsl
pop
clc
fwait
aas
insb
popl
aad
gs
jno
xchg
add
jl
insl
icebp
int3
sbb
outsl
stos
loope
movl
aad
xchg
in
jp
fxch
ret
xchg
imul
inc
daa
lcall
scas
call
jne
shlb
or
pop
fldl
xchg
shrb
jge
xor
nop
hlt
dec
jne
or
leave
mov
adc
outsl
xor
add
repnz
adc
or
aam
push
repnz
adcb
mov
call
sbb
in
xchg
sub
and
jmp
cmp
mov
loope
or
popf
mov
loop
cwtl
nop
push
lods
lods
pop
adc
inc
lret
adc
addl
inc
out
mov
out
out
movsl
shl
fxch
sbb
fdivrl
sahf
mov
pop
mov
lahf
pushf
rclb
out
add
mov
and
dec
dec
dec
fwait
push
rolb
push
ret
jecxz
sub
mov
pop
shlb
bound
and
inc
xchg
test
test
adc
xor
les
rcrl
sub
dec
and
out
or
and
js
mov
addr16
ds
and
dec
loop
test
jbe
push
pop
adc
sbb
fdivrp
aaa
adc
jge
sti
lcall
out
addr16
rolb
xor
add
dec
cmpsb
jns
sub
inc
and
daa
sarl
lret
adc
ret
or
into
add
cs
jne
sub
lcall
fdivl
cmp
pop
xor
cmp
aam
out
lods
dec
mov
jo
sahf
ret
repz
in
enter
ja
clc
lea
nop
push
mov
mov
push
xchg
jo
xchg
fmulp
adc
lahf
cli
mov
fisubrs
mov
jb
fwait
xchg
imul
jo
scas
movsl
fsubl
sub
jb
in
cmpsb
push
dec
test
xor
scas
sub
cltd
sub
insb
or
adc
icebp
jecxz
in
out
jne
lods
fstp
xor
xchg
inc
push
leave
mov
cmpsl
pop
or
in
dec
adc
dec
jmp
cmp
xor
mov
mov
sarb
sbb
adc
cmp
mov
imul
dec
xchg
push
sub
sahf
call
xor
xchg
outsb
sbbb
or
xchg
mov
and
mov
jns
call
les
mov
mov
sbb
cmp
ds
mov
sahf
mov
pop
lock
in
push
insl
int
ret
lods
fbstp
cli
addl
mov
test
sti
stos
es
pop
leave
repnz
dec
sbbl
push
imul
push
std
lahf
rcrb
inc
push
dec
lock
dec
scas
iret
stos
neg
and
mov
xchg
sbb
inc
sub
mov
mov
les
mov
ja
or
xor
push
imul
lahf
fsubs
stos
pushf
fbstp
outsl
sbb
sbb
cmpsl
andl
adc
lods
dec
push
inc
inc
xor
jmp
insl
cmp
dec
rorb
mov
popf
adc
dec
stc
mov
shrb
cmp
aaa
faddp
xchg
xor
cmpl
pop
jns
iret
push
stos
into
jle
inc
scas
out
orl
adc
pop
mov
fildll
scas
mov
and
sub
lahf
pop
cltd
xor
movzbl
mov
or
les
les
jmp
orl
pop
add
arpl
test
fisubrs
mov
mov
lahf
test
and
hlt
aas
mov
xor
inc
pushf
lcall
mov
xlat
push
imul
stos
cmp
mov
fbstp
sbb
mov
or
les
or
inc
dec
sar
add
cmp
add
mov
test
inc
xchg
adc
sbb
cmp
lds
xor
das
sub
scas
jo
pop
push
es
inc
jae
push
push
xor
jg
jg
mov
shll
outsb
push
stos
inc
mov
cmp
jmp
mov
fisttpl
jo
daa
mov
movsl
loope
adc
sahf
into
scas
dec
into
cmpb
mov
xchg
cmpl
xlat
mov
pushf
icebp
stos
fistps
or
xor
out
pop
jb
push
push
jecxz
and
cmp
push
jecxz
icebp
pop
popl
fwait
cwtl
daa
xchg
out
xchg
xor
mov
fisubl
mov
shrl
dec
insb
jbe
repnz
outsl
imul
nop
pop
jmp
sub
cltd
jbe
imul
add
jg
xchg
int
in
mov
fdivs
adc
outsb
jg
ja
out
fcoms
mov
push
sub
sbb
sbb
mov
icebp
jbe
mov
das
push
cmpsl
fisubl
cs
cld
incb
ss
sub
aas
push
or
sbb
scas
in
inc
cmp
inc
sbb
test
mov
adc
adc
cmp
out
mov
pop
xor
andl
out
xchg
adc
pop
es
sarb
lds
mov
mov
dec
sahf
test
xor
das
mov
subl
cmp
push
pop
inc
add
filds
push
inc
jl
and
ja
push
pusha
aam
int
rcrb
or
loop
mov
push
jmp
push
stc
aaa
xchg
cmp
cld
mov
inc
in
cltd
jno
fidivs
leave
fsubp
add
rol
push
negl
add
iret
jp
rclb
mov
fstpl
or
imul
jge
dec
mov
or
mov
int
or
xchg
jp
or
push
adc
adc
aam
inc
mov
loopne
inc
lcall
or
movsl
sti
dec
and
jnp
push
mov
sbb
test
mov
fiadds
lret
and
xor
or
sar
add
mov
leave
push
push
data16
daa
mov
fstl
cmp
lock
lods
push
loopne
sbb
stc
sbb
in
clc
movsb
jae
inc
mov
aam
mov
rorl
add
cli
sarl
out
xchg
fmul
lds
or
mov
int
sub
pop
dec
lods
out
push
dec
dec
cld
pop
xchg
insb
cmp
rol
jg
dec
test
cmp
out
out
ret
rorl
push
pop
pop
xor
out
cltd
lcall
roll
loop
sahf
shll
gs
mov
or
loopne
push
cli
ret
pushf
inc
testl
sti
mov
fs
jl
sahf
sahf
lea
test
lods
pop
xor
andb
bound
or
xor
cltd
test
sub
adc
add
xor
fsubrs
sarb
mov
adc
jbe
pop
jg
aaa
inc
stos
pop
mov
cmp
xchg
adc
stos
cmpsl
pop
aas
lods
pop
mov
loopne
cld
cld
pusha
int
out
pop
sbb
and
pop
jo
pop
adc
cmp
pop
cli
jbe
je
sti
pop
pop
inc
inc
jle
lds
sbb
scas
pop
imul
sbb
andl
enter
sti
dec
shrb
cld
test
ljmp
pop
ds
mov
outsl
pop
adc
and
loop
repz
pop
aam
mov
dec
jge
out
jno
and
mov
addl
jns
inc
nop
xor
gs
cmp
add
mov
or
daa
movsb
adc
hlt
daa
int3
dec
or
mov
pop
insb
jno
and
mov
loopne
call
sbb
stos
arpl
test
xchg
dec
or
mov
jmp
xchg
jnp
cli
movsl
ljmpw
or
inc
adc
enter
je
cld
sti
leave
movsl
out
push
inc
es
addl
dec
xchg
in
pop
fimull
lods
inc
ret
ljmp
arpl
inc
out
and
cmpsl
adc
cmpsl
jg
test
in
pop
cli
mov
xor
rclb
scas
mov
pop
lods
sahf
scas
es
push
jp
mull
fstps
jmp
xor
shlb
clc
jne
je
adc
shr
xor
aaa
dec
pop
mov
and
xor
jmp
jo
and
fwait
mov
xchg
popf
xor
inc
and
lret
insl
mov
je
ret
mov
daa
pop
sub
shl
aam
aaa
jnp
xchg
out
repz
or
pop
fidivl
mov
movb
sbb
aam
stc
xchg
bound
inc
test
jne
leave
mov
sub
dec
pop
push
sbb
fisubrl
lock
cmp
xchg
push
aam
or
and
add
cltd
arpl
cwtl
xor
jns
jae
mov
jb
mov
mov
scas
sarl
sub
push
popa
cmp
nop
inc
pop
in
jno
sub
cmp
cmp
arpl
stos
mov
outsl
xchg
popl
dec
clc
pop
stos
lret
cwtl
sub
xor
jb
and
imul
xchg
add
dec
ljmp
add
jns
xchg
or
pop
mov
lret
aas
sbb
push
nop
repnz
adc
push
pusha
imul
fs
sub
jo
shll
push
add
insl
out
push
pop
adc
push
xchg
fucomp
pop
ja
xchg
lsl
mov
inc
dec
fsts
rorl
cwtl
flds
pop
adc
cwtl
add
jo
leave
ffree
loop
pop
jae
outsb
dec
sub
iret
stos
mov
in
ss
cmp
outsb
rorb
push
daa
jno
push
insb
arpl
loop
adcl
add
pop
or
pop
lods
jnp
dec
dec
inc
insl
jne
sbb
out
adc
test
inc
mov
js
in
mov
insl
jmp
cmc
push
mov
mov
ret
xchg
leave
add
xor
imul
and
or
xor
xchg
push
repz
dec
mov
xchg
test
outsl
mov
mov
cltd
xchg
lods
mov
ret
loope
pop
xchg
clc
pop
dec
or
int
xchg
data16
mov
je
pop
push
aas
add
insb
or
push
js
scas
adc
ret
test
test
mov
xor
xchg
pop
adc
sbb
lea
fs
xchg
sub
dec
ds
scas
xor
out
xchg
or
mov
pop
xchg
fnstcw
ljmp
pop
cltd
test
cwtl
pop
mov
push
jmp
adcb
rorl
mov
stos
xchg
call
dec
mov
mov
jl
mov
xchg
jge
sbb
mov
dec
mov
push
mov
cs
loope
ret
adc
fcmovu
xchg
lods
popf
sub
sti
cmp
test
sub
mov
dec
mov
in
outsb
cwtl
mov
popa
pop
inc
sahf
jae
inc
cmpb
sbb
mov
repz
lock
inc
inc
mov
out
outsl
sub
push
cltd
adc
cld
cmp
pop
outsl
sbb
cmp
or
xor
jo
mov
dec
out
inc
mov
add
pushf
rclb
mov
cmp
xchg
fisubs
push
jecxz
add
popa
rorl
call
xchg
inc
xchg
not
movsl
xchg
jo
xchg
in
xor
jb
aas
dec
loope
shlb
pop
pop
inc
lcall
shl
out
into
mov
bound
shlb
mov
push
dec
insb
ja
mov
jbe
into
aas
pop
jne
in
cmpl
add
xlat
in
aas
sbb
inc
imul
ja
flds
xor
inc
mov
insl
xchg
mov
rcrl
pop
fcmove
in
sti
nop
incb
mov
xchg
push
insl
sbb
sub
xchg
fldenv
pop
mov
mov
cltd
adc
push
mov
stc
cmp
push
call
pop
ret
fmuls
pop
inc
or
scas
lock
scas
insl
jmp
in
cmp
jmp
dec
add
rcll
cld
pop
fsqrt
bound
cwtl
movsb
shrb
incl
add
mov
test
push
ds
mov
das
sub
pop
pop
lahf
jmp
push
sub
inc
mov
xchg
sbb
js
shlb
cs
fcmovne
lret
addr16
sti
dec
in
jle
popa
or
inc
js
mov
mov
sub
in
jae
andb
or
mov
jle
xorb
push
mov
std
push
lahf
test
je
imul
arpl
push
inc
xlat
arpl
fs
cmp
imul
pop
pop
xchg
jp
mov
in
jne
outsl
mov
pop
lcall
loopne
ljmp
inc
in
out
cmpsl
dec
and
cli
sbb
or
jbe
jmp
adc
add
pop
xor
jmp
mov
movsl
stos
xchg
call
and
fildll
lea
and
aad
andl
stos
shl
lret
hlt
cmp
into
xlat
jge
lcall
mov
mov
mov
ffreep
std
pop
int
dec
insb
test
pop
jns
jge
xchg
push
mov
iret
mov
dec
jle
dec
lret
arpl
jb
push
cmp
mov
aad
loope
and
and
daa
push
sub
jge
pushf
out
xchg
cmc
punpckhwd
mov
dec
ss
push
addr16
cmp
cmpsl
inc
push
dec
adc
pop
outsb
xchg
pusha
ja
add
pop
jns
addl
xchg
loopne
cmpb
pop
xchg
inc
mov
push
xchg
daa
xor
in
mov
lret
sub
insl
fbld
push
or
mov
jns
sub
ror
push
and
repz
testl
mov
mov
lahf
pop
in
dec
xorl
movb
scas
lret
mov
hlt
iret
les
inc
jp
outsb
sahf
push
or
psubq
out
ljmp
inc
mov
inc
mov
xor
cs
jns
inc
cmp
mov
call
aaa
lret
nop
hlt
mov
push
jno
leave
lds
lods
sub
inc
adc
adc
sahf
es
mov
add
mov
mov
dec
int3
jne
add
notb
mov
scas
sub
iret
flds
mov
sub
lea
cmp
pop
mov
and
and
inc
imul
xor
pop
add
ret
sbb
cld
and
and
test
sub
lcall
das
mov
jl
mov
jmp
daa
es
cmc
lret
pop
addl
fwait
sahf
loopne
jb
mov
aad
push
call
ja
pop
cmp
add
neg
xor
xchg
loopne
clc
mov
mov
mov
mov
popf
fs
jns
cmp
nop
xlat
adc
jne
push
xor
add
std
xchg
in
cmp
cmpsl
pop
pop
mov
cmp
aad
aam
insb
cwtl
push
fsubs
fcom
pop
mov
inc
popf
andb
cmp
adcb
jns
lahf
mov
ret
cmp
enter
mov
loop
or
inc
int
add
out
sbb
leave
dec
sbbl
cmp
clc
ja
mov
add
dec
or
les
pop
add
and
cmp
dec
push
das
mov
stc
and
mov
scas
mov
cmp
mov
and
push
push
jl,pn
cmc
es
or
mov
mov
data16
push
xchg
cmp
xchg
out
xor
adc
or
or
outsb
movsb
mov
scas
mov
cmp
pop
out
dec
adc
cmpsb
loop
jecxz
cmp
xor
sub
pmuludq
inc
mov
xor
es
das
test
ss
push
cmp
daa
imul
popa
subl
adc
loopne
cmp
dec
cmp
mov
add
and
inc
popl
ljmp
flds
xchg
or
pop
jl
pop
int3
or
ds
dec
mov
sub
mov
add
mov
in
cmc
mov
adc
and
rcrl
fsubl
out
mov
cmp
iret
std
xchg
sbb
jecxz
jb
and
sbb
jp
shrl
dec
std
push
pop
fsubrl
das
in
lea
xchg
divb
xor
inc
fiadds
insb
pop
cmp
add
pop
roll
mov
addr16
fcomps
cmpb
loop
sub
sbbb
or
pop
data16
jo
or
dec
shlb
pop
sbb
jns
jecxz
cmpsb
jne
lcall
aad
xor
or
imull
add
call
mov
push
push
cmp
jb
dec
bound
je
mov
adc
sub
xor
adc
pop
jo
fs
mov
stos
jbe
pop
sbb
lds
int
inc
mov
leave
gs
outsl
leave
mov
loop
sub
cmpsl
sbb
ds
sbb
xor
inc
dec
or
sti
mov
lock
sar
roll
in
mov
lods
std
aam
inc
ficompl
add
icebp
aas
stos
int
aas
add
mov
repz
mov
enter
mov
in
mov
mov
cmc
mov
arpl
xorb
test
jae
mov
sahf
fs
mov
push
mov
es
lods
adc
js
or
aaa
mov
push
fcmovnb
adc
and
movsb
lods
decl
xchg
push
lret
sbb
ja
xchg
xchg
in
or
push
pusha
gs
sbb
sbb
add
sarl
daa
mov
shl
lock
imulb
dec
gs
or
pushf
inc
clc
sub
xor
or
lret
or
mov
and
mov
sbb
add
icebp
xchg
fs
xchg
adc
mov
adc
fwait
mov
imul
loope
addl
dec
lock
mov
add
push
movsb
dec
pushf
adcl
mov
and
es
shlb
cmp
lcall
inc
jmp
lahf
xor
aam
fnsave
les
add
rol
fisttpl
lock
loope
cmp
gs
dec
sbb
ret
enter
push
mov
jbe
jg
inc
shrl
div
sti
inc
sbb
pop
insb
lock
je
hlt
iret
enter
ds
test
mov
inc
leave
add
rclb
cld
mov
fwait
jg
fiadds
cmp
test
sub
xor
pop
nopl
test
enter
into
add
sbb
fiaddl
mov
aam
pop
nop
cmpl
jnp
jl
cmpsb
mov
lret
add
scas
xchg
sub
cs
mov
das
unpcklps
and
mov
in
inc
or
mov
cmp
dec
rcl
and
xchg
pop
xor
lcall
pop
xchg
add
jns
int
test
fstpl
jecxz
xor
adc
shr
test
push
les
mov
cmpsb
jbe
and
inc
je
or
movsl
out
mov
ljmp
mov
or
into
es
es
mov
lcall
mov
push
inc
in
fninit
sti
flds
push
adc
inc
addr16
leave
test
stos
mov
aas
scas
repnz
icebp
add
or
jmp
cmpsl
inc
es
push
ret
adc
in
popf
int
fisubl
xchg
das
dec
mov
mov
jns
mov
fcoms
inc
fnstsw
scas
cmpsl
cltd
dec
mov
and
into
adc
add
out
jmp
cmp
mov
or
movsb
jl
mov
sub
mov
test
pusha
pop
pop
sahf
dec
inc
jle
cmpsb
rcrl
add
inc
cmp
add
pop
divb
fnstcw
and
mov
inc
add
jb
mov
sbbl
xor
lret
icebp
lods
add
push
mov
outsl
inc
sarl
ret
mov
adc
mov
lods
xchg
lret
imul
jl
addr16
jb
nop
fisubrl
iret
call
xor
sbb
data16
cmp
xchg
ret
or
cld
pushl
add
sbbb
xlat
and
cmpl
fmuls
add
sub
sub
sbb
in
jp
loopne
sub
xor
movsl
add
and
push
mov
cwtl
lahf
mov
scas
cmpsb
neg
xor
cmpsb
outsl
xor
mov
push
lock
xor
nop
jl
or
cmc
lea
sahf
outsb
add
call
cs
scas
adc
jb
sub
inc
es
jo
mov
outsl
push
mov
rcll
and
into
addr16
call
filds
gs
lret
insb
xor
leave
jecxz
pop
xchg
shll
hlt
xchg
inc
leave
ret
push
test
jnp
fcmovne
stos
push
aas
push
pop
dec
std
mov
out
mov
icebp
loopne
pop
jns
sbb
push
pop
loopne
mov
jecxz
les
push
jp
dec
ret
add
xchg
mov
xchg
jns
sti
std
daa
outsb
sub
je
xchg
push
adc
add
jecxz
mov
and
push
adc
add
lds
pop
sub
ja
sub
mov
popa
xor
mov
clc
jb
adc
xor
mov
js
addr16
xchg
cmp
loop
and
mov
loop
les
xor
jl
outsl
out
add
outsl
fimull
popw
mov
push
cld
cmpsl
jo
add
inc
or
fwait
cltd
mov
shrd
dec
lods
imul
repz
adc
xchg
mov
pop
test
je
mov
mov
push
jg
stos
jmp
sub
cmp
adcl
inc
adc
pop
push
pop
into
cmp
mov
mov
mov
cwtl
adc
jne
mov
add
pushl
jmp
cmp
sbb
dec
sti
jl
outsb
jo
mov
sbb
mov
popf
mov
lds
loop
bound
or
mov
rcr
arpl
mov
js,pn
fiaddl
push
cmp
in
xlat
xor
imul
adcl
push
or
incl
pop
and
pop
inc
int
or
pop
mov
mov
add
out
stc
push
test
sbb
je
inc
mov
or
stos
sbb
jle
mov
int3
pusha
or
out
call
and
adc
and
mov
or
mov
shrb
ds
dec
les
clc
dec
push
out
pop
xor
daa
push
test
sub
and
flds
fwait
adc
sbb
pusha
mulb
popw
xchg
lret
add
mov
jp
dec
add
cli
pop
adc
add
mov
lock
mov
and
jno
cmp
sbb
in
lahf
or
sar
test
divl
loopne
aam
xor
jnp
loope
xor
inc
mov
cmp
sti
test
lods
pop
fidivs
and
xchg
test
dec
and
push
test
xchg
daa
mov
mov
pop
push
ror
stos
fdivs
cmp
lds
cs
sub
pop
fwait
pop
loop
call
sub
divl
je
cmp
fmuls
fisubrl
popf
hlt
cmp
dec
in
push
addr16
dec
outsb
mov
les
mov
xor
adc
jg
bound
stos
and
js
loope
jp
and
js
stos
addr16
sarl
pushf
lds
mul
mov
push
jne
cmp
jmp
call
ret
cmp
mov
push
xchg
sbb
or
cltd
rcll
mov
cmp
into
mov
push
push
mov
mov
cmp
add
push
sbb
mov
dec
mov
pushf
cmp
mov
hlt
stos
fs
popa
mov
mov
leave
out
stc
fnstenv
xor
dec
rcl
mov
mov
push
dec
or
xchg
push
and
jp
fwait
mov
xor
repz
insl
sbbb
aaa
mov
insl
mov
into
jmp
dec
adc
xorl
int3
lods
jl
mov
mov
mov
and
jb
gs
fs
stos
test
jnp
add
pop
rcrl
jo
mov
fcomps
push
pop
enter
repnz
jle
imulb
mov
dec
pop
adc
pushf
adc
add
cld
add
ljmp
lret
out
and
ljmp
sbb
pop
adc
cmc
xor
scas
mov
cwtl
mov
inc
inc
push
into
dec
sahf
ret
xlat
in
mov
sahf
pushf
pusha
test
inc
xchg
sbb
add
in
push
or
addl
testl
fxch
pop
push
dec
mov
mov
sbb
rorb
rorb
aas
pop
test
outsl
sbb
inc
les
and
jl
xor
or
mov
add
rcrb
lahf
orl
sbb
jle
fistps
scas
stos
mov
out
jb
addr16
popf
fs
mov
je
pop
or
fisttpll
mov
addr16
imul
lcall
rclb
jecxz
jp
and
mov
lahf
ret
fidivrs
lods
xor
repz
orl
orl
mov
cs
repnz
push
mov
pop
sbb
mov
out
adc
test
inc
mov
or
sub
aas
jecxz
xor
sbb
fildl
lahf
test
sbb
aaa
ds
idivb
fcmovnb
or
cli
outsb
cld
cmpl
inc
adc
fldl
push
push
das
jno
and
loope
and
xchg
jbe
popa
push
lods
mov
jle,pt
sub
fstpt
dec
dec
add
mov
and
dec
and
cltd
addr16
mov
adcl
icebp
dec
adc
xor
daa
or
les
movsb
pop
xchg
les
jae
call
cmc
repz
or
xlat
sbb
pop
mov
pop
pushf
iret
decb
or
pop
lock
mov
push
mov
push
adc
cmp
mov
push
xchg
cmp
loopne
mov
aad
bound
dec
ret
rcl
arpl
scas
mov
add
xor
aam
cld
fildll
jno
stos
shll
pop
jae
xchg
or
outsb
and
dec
jle
sbb
dec
and
and
ret
push
add
decl
leave
adcb
or
inc
inc
xor
pop
fistps
iret
xor
sbb
sub
sarb
xchg
outsb
cwtl
mov
bound
jmp
and
mov
xrelease
dec
jp
xchg
or
or
inc
inc
cmp
mov
inc
in
cmp
sub
lods
leave
or
sbb
push
xor
jae
jno
les
shll
cld
mov
sub
jb
mov
lcall
sti
and
push
fistpl
inc
cli
cltd
inc
sbb
das
incl
mov
xor
push
pop
mov
sbb
xchg
movsl
rclb
mov
mov
xor
nop
fildll
aaa
andl
inc
mov
outsb
jo
call
push
les
mov
and
flds
int3
adc
jo
int3
dec
fists
jle
lcall
xlat
xchg
loop
fwait
cmpsl
mov
outsl
lods
pop
ret
and
cld
push
inc
inc
jno
stos
dec
fsubs
loopne
rorb
mov
adc
push
sub
jmp
mov
mov
pop
incb
aad
add
lret
mov
mov
jp
repnz
mov
sub
std
mov
jb
imul
aad
and
fidivrs
push
test
sub
ljmp
lret
sub
jo
jmp
out
sbb
jp
insb
sub
mov
in
rolb
lret
inc
inc
push
cmp
decl
popa
jae
adc
out
pop
ffree
lcall
inc
jns
pop
jb
dec
xlat
pushf
ljmp
es
lret
in
inc
mov
sbb
cmp
mov
cmp
xchg
fidivrl
xchg
xor
xlat
mov
inc
cltd
lret
dec
jge
sbb
lods
xor
push
cmp
cmp
push
lods
pop
mov
movsl
sbb
xchg
dec
rorl
repnz
push
ljmp
or
xchg
addr16
test
lret
and
sub
fpatan
ja
repz
stos
and
mov
add
fisubl
lods
call
cmp
push
sub
adc
fldcw
jle
sbb
outsl
imul
imul
push
je
out
cmpsb
test
push
fs
sahf
rcrl
fdivrl
loope
insl
repz
in
pop
push
popa
and
mov
mov
mov
or
movsb
stos
sub
out
push
lret
xchg
push
pop
rolb
inc
rolb
pop
push
out
jne
and
fisubrs
adc
dec
testb
mov
add
xchg
push
mov
inc
xchg
mov
ror
adc
pop
xor
push
and
push
hlt
jecxz
notb
daa
mov
push
mov
jnp
outsl
leave
sti
icebp
adc
pop
lea
sbb
or
ret
inc
dec
mov
xor
push
stos
sarb
sbbb
mov
fxch
loop
xchg
and
aas
test
jmp
arpl
sahf
pop
mov
jg
jbe
and
lods
into
lcall
stos
movsb
ret
scas
xor
or
js
push
je
jnp
pop
sbb
mov
ss
xlat
shrb
cwtl
or
insb
hlt
sbb
push
adc
xchg
xchg
adc
popa
ja
mov
and
rcrb
cmp
ja
iret
leave
dec
jbe
jne
jecxz
icebp
stos
mov
mov
je
push
gs
mov
and
cmp
bound
jno
insb
push
in
iret
test
inc
sbb
mov
jnp
test
icebp
ss
dec
rcr
ret
push
jmp
sub
cmc
imul
insb
or
jge
aas
gs
xchg
outsb
shl
jae
test
xchg
into
push
pop
imul
fucomp
movsl
inc
xchg
pop
sti
xorb
adcl
cs
mov
dec
push
jmp
xor
fcmovb
push
sbb
insb
mov
lds
ja
push
lods
out
cs
xchg
int
pop
jb
jmp
sub
xor
inc
ret
xor
es
push
add
mov
or
adc
lret
scas
jne
cwtl
sub
leave
test
sub
shll
and
and
stc
dec
in
lock
fsubl
int
cmp
movsb
adc
pop
int3
std
and
je
ret
insl
lods
subl
xchg
xor
test
hlt
push
mov
push
mov
xchg
popa
xor
xchg
pop
out
pop
jbe
pop
inc
insl
sbb
cmpsb
add
ret
fidivrl
xlat
loop
mov
add
adc
loop
and
jmp
je
fwait
in
xchg
mov
xchg
mov
push
mov
imul
mov
mov
sbb
jle
add
or
lahf
push
xchg
mov
dec
xchg
fldenv
daa
inc
std
ret
cmp
sbb
cltd
aam
inc
in
ds
test
xchg
sub
mov
sarl
push
stc
test
loope
mov
js
sub
pop
jp
dec
ret
es
imul
pop
loop
xor
in
lods
mov
inc
std
mov
loope
ss
mov
ret
in
and
out
fcompl
mov
out
xor
or
push
jnp
sbb
pop
lods
adc
adc
imul
aas
sub
pop
stc
leave
and
pop
jle
adc
mov
imul
sbb
jnp
or
sarb
insb
cs
out
push
shl
pop
inc
mov
ret
daa
add
bound
sar
movsl
pop
push
sub
mov
lds
inc
cli
mov
xorb
xor
rcr
roll
or
jno
scas
pusha
push
sub
jno
punpcklwd
mull
into
sub
mov
jmp
je
pop
jns
sahf
xor
mov
push
xchg
or
mov
testb
mov
pusha
cmp
into
push
cli
adc
mov
inc
je
jg
xchg
lods
xchg
lods
and
jo
imul
test
out
sbb
sbb
jb
cmp
aad
dec
repnz
inc
out
in
das
mov
jnp
jg
mov
arpl
push
pusha
sub
out
ret
in
mov
inc
jle
jmp
into
add
fdivrs
ret
dec
iret
jns
out
lcall
nop
mov
fildll
enter
pop
fwait
pop
xchg
stos
enter
sti
ss
lahf
scas
rol
mov
int3
fcmove
je
adc
and
push
xlat
or
out
dec
push
loope
and
stos
adc
jnp
sub
ds
cmp
mov
xchg
stos
aad
cmp
mov
lret
mov
leave
es
cs
ljmp
les
jo
ret
mov
mov
jl
push
push
add
pop
mov
ret
and
sbb
lret
jl
add
fisubrl
pop
test
xor
inc
mov
dec
sbb
inc
push
loope
aam
mov
mov
add
pushf
push
roll
jnp
insb
or
shll
cmp
mov
leave
pop
xor
sbb
xchg
add
mov
jecxz
mov
ret
jle
divb
ds
dec
push
mov
jo
cmp
push
adc
xchg
dec
pop
pop
lea
jge
ss
stc
adc
and
idivb
adc
jge
cltd
mov
pusha
sub
mov
jne
jmp
out
shlb
lock
cmp
in
push
sbb
jmp
mov
inc
mov
jg
js
jbe
jle
mov
mov
and
or
dec
sub
out
jmp
aaa
in
pop
mov
faddl
cwtl
cmpsl
test
dec
out
loop
mov
lock
int
ret
cmp
jne
adc
and
notl
gs
cmp
rorb
add
popa
mov
lds
and
add
sbb
add
mov
adc
dec
inc
pop
cmpsb
mov
scas
cmc
dec
pusha
out
out
pop
xchg
stc
cmp
mov
pop
or
loopne
out
call
outsb
and
cmpsl
mov
sti
fidivrl
mov
pop
insb
frstor
imul
cmp
aaa
cmp
mov
out
mov
popa
mov
orl
xchg
mov
and
cld
jecxz
iret
rcrl
daa
stos
jp
loope
jo
icebp
pushf
data16
sar
ret
inc
jae
mov
sub
cmp
push
fdivrp
pop
inc
mov
aaa
shr
inc
dec
lret
iret
sub
test
fstpl
and
ss
sub
sbb
sahf
ds
push
sar
inc
push
movsb
push
xor
scas
add
xor
dec
push
ja
jmp
imul
lods
divb
out
lret
pop
cs
add
rolb
push
cld
popf
aaa
scas
shlb
sarl
xor
mov
jns
rolb
bound
shr
lea
and
sub
in
arpl
pop
xor
aas
aas
out
fisubs
xor
shll
and
inc
out
mov
cmpb
xchg
add
pop
shl
outsb
repz
pop
adc
sarl
sub
inc
pop
jo
fcoms
xor
bound
repnz
add
mov
lods
mov
inc
cmp
xchg
mov
add
cmpsb
xor
mov
mov
int
sub
jecxz
lahf
jno
hlt
lea
mov
add
icebp
sub
cwtl
add
lods
testl
lret
mov
lock
sub
add
pop
add
hlt
push
cmpsl
xchg
imul
lods
and
add
sub
mov
sbb
insl
mov
push
lret
bswap
in
jle
imul
pop
adc
mov
xchg
or
add
mov
inc
mov
rcrl
das
fistpll
mov
or
and
aad
lods
mov
sub
pusha
inc
iret
jge
movsl
push
sbb
bound
pop
stos
xchg
pop
mov
mov
pop
mov
mov
outsl
jbe
and
daa
fistpl
outsl
add
mov
mov
pop
rclb
sarb
and
imul
cmp
mov
fildll
mov
jge,pn
bound
jns
ljmp
xor
cli
sub
shll
xor
fstl
mov
fcmovbe
jno
dec
pop
jl
test
mov
xchg
dec
es
push
test
pop
or
imul
mov
leave
xchg
dec
jge
pop
add
mov
out
jns
inc
push
popa
mov
xor
fimuls
negl
ret
inc
push
orb
lea
aam
fmull
pop
jo
mov
mov
in
imul
pop
dec
pop
add
mov
jge
mov
mov
lret
nop
pop
enter
in
or
testb
std
jp
mov
adc
mov
test
sub
arpl
cwtl
xchg
in
popa
mov
movsl
fistps
mov
inc
push
imul
das
cmp
pop
cmp
lret
push
das
or
addb
arpl
cmpsb
sbb
rorb
cmp
push
pop
adc
pop
ret
int
das
movsb
sub
out
or
adc
outsl
stos
ret
push
xchg
mov
pop
int3
jbe
dec
sbb
push
cmc
aad
jge
addl
add
sahf
sub
mov
mov
in
fisttpll
xlat
cs
cld
out
fwait
icebp
leave
popa
mov
sar
jecxz
lods
in
jl
inc
subl
fdivr
or
add
mov
data16
push
adc
notb
fisttpl
and
xchg
aas
js
xchg
int3
shl
mov
sbb
and
sub
arpl
xchg
jb
dec
in
mov
xchg
mov
push
test
adc
inc
insb
mov
xchg
mov
nop
fwait
add
stos
imul
stos
and
scas
push
or
into
dec
addr16
lods
rcll
cmp
je
add
stos
mov
sti
mov
stos
lret
fstps
iret
fiadds
mov
xor
insl
scas
dec
je
sbb
fcmovnu
sub
jecxz
xor
mov
mov
push
or
cmp
mov
sti
sbb
jb
dec
gs
dec
loop
int3
mov
lock
mov
xor
addr16
jmp
insb
mov
push
lds
int3
or
clc
mov
dec
mov
add
scas
movsl
pop
mov
add
push
adc
jb
sti
sub
cs
imul
inc
sbb
aaa
ret
out
rcr
aad
call
add
xchg
jle
cmpsl
or
xchg
lret
inc
rcll
cli
push
inc
add
stc
cmpb
adc
call
xor
adc
add
rorl
or
or
ficomps
mov
jns
ret
sub
jl
scas
pop
leave
das
ret
scas
mov
shrb
mov
xorl
out
int
add
xor
mov
mov
mov
enter
jne
lret
push
dec
mov
mov
mov
pop
fbstp
fldt
pop
sub
adc
arpl
pop
mov
ret
push
lods
and
push
mov
lcall
or
ret
fs
in
cmp
lret
mov
push
push
xor
mov
loope
adc
xchg
or
mov
stos
push
sub
sub
cs
sub
cmp
mov
sti
fistl
mov
mov
xor
test
xor
outsl
imulb
mov
ret
adc
int3
jb
lret
adc
sbb
jo
jg
es
mov
cmp
rorl
xor
divb
and
mov
jo
movsb
rorl
jmp
or
ja
cmpsb
inc
push
adc
fwait
push
test
mov
lods
int
mov
add
cmpsl
lds
adc
lods
cmp
sub
mov
push
arpl
adc
cwtl
cwtl
clc
add
int
clc
js
jbe
sub
aaa
cltd
pop
mov
popa
mov
test
add
stc
push
or
stos
movsb
les
in
les
push
cmp
cmpl
jmp
cmpb
dec
call
cmc
or
movb
adc
dec
lcall
mov
addr16
mov
sbb
insl
add
adc
sub
out
xor
fwait
movsl
leave
rcll
pop
aas
push
adc
rcrb
push
faddl
rolb
sbb
push
ret
or
clc
ret
dec
mov
stos
jo
stc
lret
xchg
mov
testb
stos
jae
dec
jp
lcall
imul
mov
js
shll
xchg
cmp
dec
inc
push
inc
xlat
xor
pop
push
bound
shll
lods
mov
fidivrs
repz
jmp
adcl
jbe
ss
mov
add
xor
add
sbb
mov
xchg
mov
mov
bound
into
pop
push
dec
inc
xorl
movsb
adcb
pop
rcl
cmp
lock
pop
xor
lret
mov
and
jl
add
cmp
mov
dec
xchg
add
ret
pop
sub
lock
mov
push
lods
scas
inc
jb
mov
add
xchg
mov
fistl
cli
inc
jo
xor
loope
sub
mov
fcoml
sbb
ljmp
xchg
mov
sub
jns
mov
fst
fs
shl
pop
data16
xor
repz
push
cmp
jns
dec
ljmp
xchg
mov
push
cmp
mov
popf
push
les
jmp
and
pusha
sub
adc
in
mov
ja
inc
out
push
jle
insb
loope
les
ds
mov
push
daa
xor
scas
cmp
pop
jge
shl
xchg
shlb
adc
pop
cmp
insb
xchg
notb
lds
fdiv
rcr
repnz
mov
xchg
sbb
pop
scas
movsl
jne
fcoml
pop
lea
inc
pop
pushl
int
lret
je
cmpsb
std
add
sbbb
dec
inc
xchg
pop
test
jge
mov
stos
adc
add
in
jp
mov
movsb
cmp
aam
pop
decl
lmsw
xchg
ds
test
pop
leave
pop
nop
les
clc
add
pushf
scas
push
sti
push
xchg
cli
lods
rorl
dec
push
jle
mov
cmp
sti
sub
pop
jmp
push
stc
sbb
sbb
add
jae
adc
leave
mov
dec
iret
dec
push
push
sub
mov
xchg
fs
and
das
mov
jecxz
shll
repz
lods
xchg
mov
pop
mov
cld
xchg
ljmp
lds
dec
popa
daa
mov
jecxz
pop
call
loop
sbb
loop
out
pushf
das
and
test
mov
dec
push
ror
push
mov
jo
aaa
fwait
add
xchg
fadds
iret
mov
mov
add
sbb
dec
jnp
ljmp
jo
mov
shll
add
add
push
xor
cmp
cmp
filds
divb
inc
sbb
mov
les
sub
mov
pop
add
arpl
jg
mov
in
jl
add
andps
ja
sbb
mov
xchg
xchg
xor
mov
shll
mov
pop
xchg
movsl
cs
test
fmuls
cmp
sbb
sbbb
roll
jo
imul
mov
adc
or
lret
cmp
fwait
loop
xor
daa
ret
cli
cli
test
insb
test
lea
lea
add
push
xor
jne
mov
adc
xorl
mov
negl
jbe
daa
int3
and
test
sub
dec
gs
int
or
pop
xor
mov
movsb
push
dec
mov
sbb
adc
xlat
cmp
aad
pushf
sbb
repnz
xchg
cmp
aaa
xchg
sub
clc
fs
mov
rorl
fdivrl
ljmp
fmul
mov
pop
xor
imul
jnp
nop
jno
and
mov
xchg
mov
ljmp
icebp
mov
in
aam
sbb
and
sti
cmp
cmpl
push
and
mov
inc
pop
psubq
push
insb
inc
sbb
mov
mov
dec
mov
cwtl
pop
aas
and
into
insb
sarb
js
fsubrl
shrb
pushf
adc
stc
sub
cmc
push
add
add
or
lock
pushf
movsl
aam
int3
pop
outsb
cwtl
out
test
insl
jno
fs
mov
insl
push
in
mov
jmp
mov
pushl
sub
xor
xor
push
fildl
xor
lcall
add
lahf
in
adc
lods
outsl
loopne
lock
mov
out
nop
jl
push
dec
scas
sbb
mov
pop
xlat
xor
pop
andb
inc
cmpsl
btc
jp
ror
nop
and
cmc
jns
and
mov
fadds
mov
push
nop
add
incl
mov
or
pop
cmpl
sar
push
push
jne
push
mov
decb
and
mov
adc
test
sub
test
xor
dec
test
icebp
repz
jecxz
mov
pop
add
cld
psllw
xorb
and
sbb
xchg
adc
cmpsl
js
in
jo
lods
cmp
repnz
mull
out
pop
pop
lods
mov
mov
push
mov
sbbb
add
les
mov
dec
and
in
pop
arpl
into
icebp
lcall
jge
jb
cli
xor
aad
pop
add
cmp
or
enter
inc
mov
js
popf
jae
mov
fmuls
mov
cwtl
divl
adc
sbb
lret
jns
hlt
jae
mov
xor
sbb
push
test
and
jno
fwait
mov
mov
inc
in
add
arpl
test
push
push
xor
daa
fdivl
xor
adc
jne
in
pushf
aam
mov
leave
test
shr
sarl
jg
cld
mov
repnz
sbb
movsb
out
mov
aas
cwtl
add
or
sbb
or
cmp
outsl
or
and
push
jb
ss
ljmp
pop
out
ret
adc
ds
dec
outsl
fwait
outsl
jle
xor
aaa
popa
jns
adc
push
pop
xor
movsb
sbb
pop
jmp
push
dec
cmp
mov
xchg
inc
lret
test
fidivs
jno
popa
cmp
ret
adc
jle
xor
repnz
leave
sti
push
subb
mov
ret
or
jecxz
in
cld
mov
cmc
cmpsb
cmpsb
push
sysexit
cwtl
sar
out
pusha
jno
inc
cmp
sbb
loopne
sbbb
add
call
mov
adcl
out
pushl
into
shll
fwait
int3
rol
push
gs
push
ret
xchg
push
lret
jecxz
lods
jne
add
cmpsl
or
jb
cld
push
test
sbb
mov
and
pop
xchg
rolb
fidivrl
xor
sbb
sub
out
pop
xchg
pop
mov
dec
push
mov
lds
into
add
jmp
mov
aad
mov
adc
test
jbe
outsb
sbb
lcall
enter
mov
icebp
jp
out
mov
mov
iret
outsl
lret
xchg
inc
adcl
xchg
sub
inc
inc
dec
out
push
mov
inc
and
push
xchg
dec
mov
js
mov
fsubl
mov
outsl
adc
sbb
inc
mov
dec
and
popa
add
jp
jno
push
inc
aas
inc
inc
popf
dec
adc
scas
inc
je
xchg
inc
lock
aaa
loop
mov
mov
les
sbb
jo
xor
xor
mov
adc
add
fbstp
outsl
pop
popa
pop
mov
clc
test
pop
jb
mov
mov
pusha
pop
xchg
stos
mov
dec
sarl
push
nop
sbb
imull
jno
xlat
iret
outsb
cmp
mov
popa
arpl
cmpb
addr16
fs
or
std
mov
and
or
mov
in
fucomip
mov
fbstp
and
daa
sbb
out
sub
xchg
add
or
fimull
shrb
adcl
mov
imul
pop
fdivrl
daa
and
push
pop
jne
into
mov
xchg
inc
or
das
lcall
popa
xchg
mov
push
mov
test
xchg
mov
rcl
sahf
xchg
and
inc
popa
mov
jnp
scas
mov
mov
inc
mov
mov
adc
outsb
insb
lock
and
out
sub
push
sbb
je
push
lods
lods
mov
outsb
xor
sbb
sub
cmp
cmc
pushl
mov
cmp
sub
cli
jecxz
push
sub
push
sbb
adc
push
and
vmwrite
insl
cmpsl
push
sub
pop
push
cmp
negb
and
pusha
popf
ror
and
sub
cltd
sub
dec
shll
stos
jbe
div
or
adc
jne
cmp
jmp
incb
pusha
aaa
dec
push
stc
xor
data16
aam
imul
test
xor
sub
repz
adc
mov
cwtl
push
loopne
push
cld
fdiv
ja
mov
mov
ds
fcmovnu
mov
cmp
cmp
xchg
or
adc
dec
stos
in
insb
pop
mov
push
mov
sbb
nop
ss
rorl
dec
insb
repnz
push
xchg
sub
mov
ror
xor
daa
scas
lods
shll
flds
and
mov
mov
xor
les
inc
inc
dec
inc
stc
mov
lds
add
push
and
sbb
cmp
test
and
inc
xor
cmp
dec
push
mov
jmp
dec
xor
in
in
xchg
lcall
int3
mov
jae
jbe
movb
push
push
gs
aas
or
cs
aaa
push
pusha
sub
loop
mov
sti
mov
outsl
or
ret
add
and
pop
int3
sub
lds
lcall
fs
jbe
sti
scas
fstps
push
sarb
adc
out
cli
addl
shl
daa
inc
fstp
mov
cmp
push
rclb
daa
lret
add
ds
mov
cmp
adc
test
out
add
arpl
test
addr16
mov
lds
pushf
cwtl
movsl
sbb
clc
in
cwtl
sub
jae
jnp
cli
pop
mov
push
inc
arpl
mov
pop
mov
jno
xor
shll
mov
shrb
cmp
xor
lods
in
addr16
dec
sbb
adc
cli
stos
push
pop
dec
jle
scas
stc
int3
xchg
sub
mov
ja
push
cmpsb
add
sub
sub
xor
inc
int3
mov
xorb
je
jnp
imul
and
js
mov
cmp
fsubrl
clc
fstpl
fdivl
outsl
adc
mov
iret
in
gs
dec
cmpsb
xchg
cwtl
mov
xorb
fcmovu
xchg
xchg
pop
push
adc
cltd
rcrl
fdivrl
push
std
pop
in
adc
mov
push
sub
loopne
popl
add
mov
inc
iret
fistl
shlb
push
cmc
xor
test
jno
pop
jg
inc
push
inc
jb
dec
sub
dec
xchg
jae
push
int3
bound
jl
movsb
pop
cwtl
jmp
pop
cmp
inc
mov
xor
test
mov
cli
aam
push
ds
nop
das
push
pop
fists
dec
xchg
sub
add
push
mov
repnz
sub
aas
mov
xchg
test
inc
sbb
lret
mov
fs
jns
inc
push
andnps
cmpsl
lods
hlt
mov
outsb
inc
cwtl
cld
xor
mov
push
out
jne
int3
jl
int
sub
jno
or
mov
btc
cmp
inc
jmp
and
pop
xor
mov
jl
outsl
add
fcompl
in
pop
fsubs
sbb
scas
jge
cmpsb
mov
out
xor
flds
es
out
mov
xchg
mov
add
ljmp
xor
aas
lea
test
cmp
mov
xchg
out
cs
aad
xchg
out
into
sub
push
shr
in
decl
loope
sub
dec
pop
mov
lds
clc
mov
jle
sti
imul
out
sbb
fidivs
dec
jecxz
pop
pop
and
aas
insb
mov
lret
or
ror
cmp
xchg
cli
dec
loope
imul
dec
dec
fwait
lret
das
rorb
or
lods
cmpsl
dec
push
ja
jb
pop
fsub
icebp
mov
stos
sub
int
adc
sub
int3
jecxz
sbb
leave
or
xchg
shl
aas
mov
mov
cmc
cmp
std
movl
pop
lds
clc
pop
push
add
popf
or
xor
int3
add
sbb
sbb
fiaddl
ss
adc
pushf
in
lret
or
dec
dec
ljmp
add
push
dec
test
cli
push
jmp
pop
xchg
test
sbb
pop
inc
lret
fnsave
aas
sub
mov
jno
ljmp
mov
popf
pop
pop
pop
or
sub
add
nop
push
fistps
mov
jecxz
mov
mov
shrl
hlt
adc
into
sbb
adc
push
mov
aam
imul
mov
in
mov
mov
cmpb
mov
inc
imul
das
push
push
aad
inc
push
xchg
lock
cmp
mov
jns
mov
std
xor
pmullw
or
nop
xchg
scas
pop
inc
sbb
mov
enter
mov
dec
or
cmpsl
roll
mov
and
js
repz
push
inc
shl
aas
add
xchg
call
dec
push
pop
push
dec
mov
in
push
xlat
inc
xor
inc
push
out
insl
mov
xchg
and
cs
jae
ds
dec
vmaxsd
cmc
movsl
scas
xchg
in
or
scas
xor
cltd
stos
int3
mov
jle
cltd
inc
jle
scas
fcoms
xor
lret
fdivp
mov
mulb
cmp
dec
pop
lods
ret
sub
repnz
mov
repnz
or
xchg
ss
cltd
out
stos
inc
add
xchg
int
or
movq
in
or
jp
cmc
in
cmp
mov
es
jo
fs
data16
mov
addr16
mov
or
cs
decb
cmp
inc
ror
and
jae
movsl
mov
fwait
popf
add
and
repz
jp
push
xchg
shr
xor
sahf
add
clc
shlb
mov
dec
pushf
in
push
cmp
push
adc
ret
adcb
and
daa
addr16
pop
mov
pop
mov
loope
adc
sarl
xchg
jae
add
xor
lds
inc
mov
insb
data16
and
mov
adc
push
clc
sub
gs
cli
pop
outsb
xor
into
lret
nop
push
xor
sbb
adc
push
aad
inc
xsave
daa
cwtl
js
or
dec
and
xlat
xchg
add
cwtl
cmp
imul
adc
xor
test
pop
pop
mov
cmpsl
pop
xorb
dec
and
dec
inc
push
lods
xchg
add
mov
mov
push
jge
sbb
jns
int
and
dec
shl
outsl
lea
lret
xchg
cmpsb
jp
call
jae
popa
pop
xor
xchg
mov
inc
stos
aam
sbb
loop
inc
jl
data16
jno
xor
test
shlb
mov
ret
mov
stos
or
push
push
mov
enter
push
sbb
ss
or
dec
jb
mov
shll
dec
sub
lret
test
cmp
pop
bound
popf
pop
sub
lcall
sbb
xor
xchg
aam
cltd
mov
clc
incl
lods
mov
ficoms
push
adc
ss
pushf
scas
lcall
or
xlat
call
cmp
xor
xor
fisubrs
imul
stos
and
repz
stos
std
adc
int3
pop
mov
dec
vpcomw
adc
push
sub
test
movsl
jg
test
js
int3
mov
mov
and
xor
daa
add
pop
mov
jnp
ljmp
rcll
mov
push
mov
mov
sub
btr
mov
fs
out
daa
clc
jnp
cmp
cli
cmp
in
mov
pop
bound
jl
stc
in
out
arpl
ss
lea
cltd
xorl
lret
jmp
movsb
clc
aas
jbe
and
mov
jbe
add
xchg
push
jo
mov
sub
pop
jmp
data16
shrb
mov
outsl
ljmp
mov
or
mov
testl
mov
aaa
adc
int
cld
or
push
rorl
xor
test
leave
outsl
cmc
or
das
sarl
int3
push
jp
cmp
test
xorb
int3
daa
pop
in
cld
cli
mov
in
jbe
jp
pop
aam
xor
dec
xor
sub
xadd
cmpsb
inc
adc
mov
addr16
mov
jno
into
call
iret
xor
pop
pop
pusha
les
fwait
sub
mov
mov
movzwl
pop
xchg
or
push
sbb
repz
aaa
dec
in
pop
insl
aas
je
push
lret
jns
jmp
bswap
push
repz
dec
xor
inc
jecxz
repz
in
call
fcomip
lds
nop
stos
sbb
sbb
inc
ljmp
andl
adc
and
insb
data16
rcrb
lcall
in
jns
push
push
inc
sub
lock
in
lret
xor
out
rcll
or
pop
aaa
dec
mov
jnp
inc
gs
jg
sbb
and
sub
jp
jge
popa
lock
pop
mov
outsb
mov
es
xchg
loope
push
decl
cmp
pop
mov
lock
lahf
and
out
mov
test
sti
mov
andl
or
add
shl
popa
js
xchg
xchg
into
mov
fidivrs
or
call
out
movsb
mov
hlt
cmp
ret
leave
std
icebp
sub
push
or
pop
pop
inc
sub
pop
xlat
adc
daa
rcr
into
mov
nop
pop
mov
out
int
or
popa
xor
dec
pop
push
cmp
sahf
or
push
mov
loope
adc
push
test
sub
cmp
fld1
inc
data16
and
or
popf
dec
fmuls
in
js
movsl
and
sarl
aad
pavgb
das
stc
out
dec
call
sbb
mov
jl
mulps
cmp
push
and
mov
pop
leave
cld
out
pushf
mov
daa
sub
mov
sbb
movb
mov
ror
push
push
aaa
test
les
add
in
cld
in
mov
scas
aam
mov
pushf
or
cwtl
push
fucomp
jns
xchg
outsb
jno
adc
push
adc
das
jno
in
cmp
jmp
lods
outsb
xchg
bound
sbb
leave
pop
mov
clc
daa
outsl
ss
mov
rcll
jp
fs
aaa
insl
pop
and
mov
lock
xchg
or
xor
adc
sbb
repz
int
mov
lock
xor
ja
cmp
fnstsw
and
js
cltd
mov
or
sbb
in
inc
lret
sub
sub
ret
leave
pslld
ja
test
loop
cmp
cld
pop
push
sti
pop
fcmovne
cmp
lret
arpl
jmp
cmp
dec
sbb
bound
inc
mov
add
imul
push
in
mov
push
xchg
sbb
std
xchg
clc
out
or
mov
iret
bound
cmp
jno
pop
inc
sub
movsb
or
xchg
pop
fwait
inc
test
imul
lcall
fcompl
mov
pop
mov
in
add
por
int
xor
fs
pushf
cmp
ljmp
aas
movsb
pmuludq
xor
adc
imul
popa
xchg
test
outsl
rorl
sub
and
inc
mov
bound
std
imul
dec
jecxz
mov
pop
lea
addr16
test
inc
hlt
lret
pop
jg
aaa
mov
jmp
jbe
push
int
sub
mov
pop
pop
mov
js
notl
jo
jb
push
cmpsl
loop
aad
test
out
push
mov
mov
sbb
pop
fisttpl
adc
vpsrlq
mov
or
and
cmpb
pushf
pop
jae
push
stc
clc
xor
add
push
orl
les
fisubrl
xchg
cmp
stos
dec
ds
sbb
cmp
fisttpll
and
inc
sbb
jmp
inc
jns
sbb
dec
push
push
orl
sbb
sbb
cmp
add
adc
cwtl
and
xchg
popl
xchg
mov
mov
xorb
out
fldl
or
or
aad
xor
js
sahf
addr16
movsb
inc
xchg
adc
bound
push
inc
fs
mov
test
mov
sti
pop
adc
xchg
popa
and
mov
pop
test
ffree
sub
loopne
xchg
rorb
jb
jle,pn
popf
mov
fdivrs
xchg
sete
and
fsubrs
push
lahf
orb
xlat
and
je
lcall
rorl
and
inc
dec
movsb
inc
xchg
jo
dec
inc
out
adc
mov
cmpsl
push
imul
loope
pop
imul
jnp
mov
push
add
dec
sub
pop
adc
fs
xor
lcall
cmp
mov
outsb
or
xchg
cmc
sahf
pop
mov
mov
das
cmp
adc
pop
mov
push
xchg
les
rorl
sbb
lcall
testl
dec
call
fstpl
jno
and
aas
sub
dec
ret
push
gs
mov
xor
jo
mov
pop
adc
fwait
jb
and
fstpt
add
pop
mov
js
mov
out
push
mov
push
test
push
adc
inc
jbe
scas
ficoms
stc
xchg
out
inc
inc
dec
pop
fimuls
popf
iret
sbb
cmp
in
fwait
jle
mov
hlt
ret
push
mov
je
inc
mov
and
xchg
sbb
repnz
out
mov
outsb
aad
roll
xor
jp
dec
les
jg
mov
mov
ds
cld
fs
rclb
lcall
mov
scas
jno
cld
lock
cmp
cld
in
cmpsb
bound
or
mov
pop
pusha
adc
cwtl
cmp
aad
shll
jbe
imul
fidivs
lcall
jmp
dec
lods
xchg
fcompl
inc
adc
test
shl
dec
stos
loopne
cmp
jmp
xchg
add
stos
cmc
or
pop
push
js
shll
sti
bound
adcb
inc
add
mov
add
lret
sub
or
leave
mov
xchg
jg
add
cwtl
jbe
andb
in
pop
cltd
sbb
adc
or
fdivrl
lcall
push
or
ret
scas
cld
scas
fildll
repnz
push
icebp
cmc
pop
jne
sbb
inc
call
call
mov
pop
jecxz
pop
sub
inc
sub
add
or
gs
test
lahf
cmc
inc
xchg
pop
adc
sbb
dec
mov
mov
mov
mov
xchg
fildll
pop
sbb
loop
mov
test
cwtl
dec
flds
rcll
push
pop
adc
xor
cmpsl
int
loope
nop
mov
add
dec
mov
adc
mov
dec
scas
mov
cld
push
test
xchg
xor
mov
sbb
rcl
icebp
loop,pt
xchg
sbb
jmp
lret
scas
aam
test
movsb
push
mov
mov
cmpsl
jg
mov
jecxz
sbb
mov
shlb
pop
hlt
mov
iret
inc
data16
bound
pop
add
subl
addr16
pop
fs
shrd
aaa
dec
rclb
repnz
mov
lock
bound
lods
leave
notb
leave
notb
sub
push
and
gs
cltd
adc
inc
sbb
loop
pop
out
pushf
dec
les
jb
dec
pop
sbb
push
inc
inc
jg
mov
lcall
add
dec
or
dec
cmp
jne
lods
and
cs
loopne
outsb
imul
loope
out
push
xchg
jb
sub
repz
mov
lret
sub
mov
maxps
cmp
pop
push
in
push
or
fld
fadds
inc
sub
dec
push
pop
jge
movsl
testb
rcrl
add
out
jne
leave
mov
fmuls
jmp
mov
sahf
inc
and
or
xchg
sbb
add
cmp
jns
adc
inc
xchg
lods
nop
mov
xor
push
stos
adc
les
xchg
xor
fidivrs
into
mov
xor
ret
jo
addr16
mov
sub
shrb
pusha
out
sub
mov
adc
mov
ret
cmp
or
dec
lock
fisttps
sub
cltd
call
adc
jp
add
mov
arpl
mov
movsb
out
lahf
jge
cwtl
loop
mov
pop
test
sbb
sbb
outsl
mov
jb
mov
adc
aaa
mov
in
or
mov
ja
int3
push
imul
adc
loopne
xor
and
sub
ss
xchg
push
mov
sbb
ret
in
and
nop
xchg
nop
pop
clc
pushf
push
adc
aas
or
and
sbb
mov
mov
es
xchg
xchg
add
enter
push
out
test
popa
repz
push
cmp
push
dec
fdiv
ret
push
aad
mov
lahf
stc
stos
push
loop
or
sahf
mov
or
test
add
pop
cmp
cmp
in
pop
leave
hlt
pushf
sub
pop
push
push
push
je
xchg
movsl
pop
stc
sub
test
push
mov
fists
adc
sub
mov
pop
xchg
pop
push
leave
jnp
jl
out
xor
jecxz
add
mov
inc
ret
out
dec
jge
lods
jmp
mov
mov
mov
dec
pop
pop
or
fsubrl
mov
test
int3
pop
sub
add
leave
insb
jg
push
aas
ja
inc
xor
shrl
pop
mov
std
or
test
xor
pusha
push
xchg
jb
out
inc
inc
jnp
or
add
fwait
sbb
inc
movsb
mov
data16
xlat
test
outsl
push
test
mov
adc
dec
push
mov
and
into
and
stos
sbb
lds
ss
es
arpl
sbb
test
aaa
pop
jmp
addr16
imull
mov
adc
rorl
cmp
jg
push
shrb
fxch
sbb
aam
add
mov
cmc
inc
movsb
cltd
arpl
in
push
or
or
bound
test
sbb
iret
dec
mov
popf
lods
out
mov
jmp
push
mov
xor
data16
add
fbstp
lds
cwtl
mov
ffree
jo
and
mov
in
xchg
pushf
xor
lds
mov
lds
pushfw
outsb
aad
ljmp
aam
sahf
jbe
clc
sub
fiadds
push
insl
sub
mov
mov
dec
inc
icebp
jecxz
cli
xor
xchg
fdivrl
mov
mov
jl
push
sub
movsl
push
pop
mov
fcoms
inc
leave
ror
or
jmp
jno
shrl
jmp
rolb
push
xlat
jl
das
test
pop
sarb
orb
mov
dec
lahf
ljmp
mov
clc
movsl
test
dec
pop
aam
sub
dec
int
pop
add
in
outsb
andl
clc
jg
jp
inc
das
dec
xlat
inc
ret
lcall
mov
dec
repnz
mov
push
data16
push
cld
push
pop
cmpl
or
movsb
mov
mov
or
xor
rcl
sahf
push
push
dec
xchg
sti
xor
arpl
fs
mov
mov
adc
in
stc
das
push
jbe
cmp
stos
mov
int3
inc
push
enter
push
mov
jb
and
adcl
sub
pop
sbb
sti
fsub
lds
fs
mov
xor
xor
jnp
icebp
xchg
test
pushf
cmc
shl
sbbl
mov
bound
mov
xor
stos
jne
mov
push
mov
pusha
cmp
call
sbb
mov
mov
es
jo
and
out
lock
jl
sahf
push
mov
dec
sub
sub
xor
xorb
movsb
push
iret
mov
jae
repz
mov
aam
sbb
mov
stos
imul
data16
mov
mov
lahf
es
push
mov
or
sahf
adc
dec
fidivl
inc
adc
jmp
or
mov
pop
push
insb
xor
arpl
data16
jno
lock
push
dec
cmc
dec
mov
mov
mov
fs
andl
cmc
sahf
lret
mov
hlt
std
in
lods
andb
adc
lret
push
xchg
mov
mov
mov
cmp
cwtl
pop
jg
add
arpl
arpl
push
jle
push
jle
jecxz
lahf
ss
jb
lcall
inc
out
push
pop
sbb
int
test
xor
mov
int
ja
add
decl
les
fdivrl
mov
insb
jb
insl
add
fcomps
pushf
je
insb
shrd
or
test
stc
fldenv
adc
adc
xor
dec
jb
fs
cmp
cld
sbb
jge
lods
pop
xchg
gs
mov
negl
fidivrs
adc
out
jg
ret
popf
in
flds
and
mov
dec
shll
push
sub
fildl
jge
sarb
idivb
out
leave
iret
ja
sbb
or
xchg
dec
cmpsb
and
sbb
jns
pop
xlat
inc
cmc
cli
imul
inc
push
adc
push
inc
out
dec
jmp
xchg
fcomip
cmp
jecxz
and
or
mov
ja
loope
out
cmp
cltd
sbb
lea
or
bound
jbe
aad
scas
xor
add
cmp
dec
gs
add
pusha
les
jbe
xchg
mov
mov
pop
lods
mov
rol
pop
in
cmp
push
int3
sbbb
mov
ret
xchg
mov
pop
push
mov
xor
movsl
lods
pop
jb
pop
lods
pop
stc
int
mov
or
les
cwtl
lret
fxch
mov
ds
sub
push
outsl
out
sub
jl
push
mov
hlt
mov
popa
pop
jg
shl
mov
test
cld
mov
dec
orb
mov
and
outsl
fcomps
xor
js
xchg
xlat
xorb
aam
cmpl
push
aam
ret
cmc
es
in
mov
fcomps
push
fwait
adc
mov
in
mov
jecxz
fdivl
imul
insb
inc
rclb
insb
enter
es
pop
hlt
xchg
rorl
xor
leave
or
pushf
sub
jae
dec
fsubrs
sahf
loop
sub
repnz
mov
imul
pop
shrb
add
mov
mov
mov
sbb
aad
mov
pop
pop
xor
xchg
fldenv
jmp
xlat
lock
cmp
pop
lods
test
mov
loop
mov
movsb
mov
mov
xor
cmpsb
stos
sub
loopne
cmpsl
mov
rcrb
cli
fs
mov
and
movsl
or
sbb
lret
add
stos
std
fwait
rorl
cmp
aam
fs
les
cmp
cld
je
lods
or
mov
lds
call
push
pop
lret
sahf
jmp
add
icebp
int3
jae
js
mov
pop
xchg
cwtl
out
mov
mov
mov
mov
inc
mov
dec
je
adc
stos
lret
jno
xchg
jno
sub
fsubrs
movsl
mov
aad
cli
sbb
or
jns
inc
and
sub
cmp
and
mov
cld
dec
rcrl
dec
fists
cli
test
js
jecxz
sar
fnstcw
enter
fsin
mov
jbe
xchg
adcl
mov
jmp
cmp
mov
pop
pop
sbb
jl
dec
pop
mov
xchg
lret
insb
arpl
push
mov
xor
jle
dec
stos
dec
pop
sbb
pop
stos
iret
inc
mov
aam
or
mov
inc
imulb
cmp
or
aas
das
es
mov
sub
add
xchg
shr
adc
loopne
jnp
xchg
shrl
div
in
xlat
in
fisubs
sub
jle
in
pop
mov
loop
scas
cmpsb
sahf
adc
stc
push
sbb
imul
rcrl
inc
rcr
aas
sub
popf
add
repnz
pop
inc
jo
fimull
cltd
int3
shlb
ret
inc
adc
in
adc
loope
xchg
leave
mov
mov
and
push
dec
jbe
rcll
push
call
jle
and
adc
sbb
add
shrb
xorl
out
jbe
lods
mov
push
mov
std
test
cmp
loope
cs
lods
push
test
fmull
and
imul
dec
aam
call
imul
cmp
lock
or
dec
arpl
shlb
imul
jg
loope
mov
add
lahf
js
xor
in
push
push
xlat
inc
bound
sbb
in
sar
and
xchg
xor
ret
dec
fsts
push
pop
repnz
clc
cmc
and
and
mov
jp
adc
lock
mov
insb
mov
jbe
in
dec
leave
jae
shrl
lods
ds
push
out
dec
jecxz
dec
movsl
mov
in
mov
cmp
pop
xchg
mov
sub
jle
dec
push
jl
lcall
xor
mov
scas
adc
xchg
and
call
loope
jl
pusha
lahf
subb
jbe
popf
stos
orb
div
and
and
xchg
mov
pop
iret
adc
push
enter
jl
push
mov
pop
jg
pushf
cld
mov
lret
icebp
dec
add
pop
add
lret
push
arpl
test
es
movsb
icebp
push
and
cmc
add
push
lock
add
in
lods
mov
cld
push
dec
xchg
aad
cmp
out
dec
sti
leave
mov
fstps
pop
fsubs
lods
fadds
rcl
and
or
mov
or
test
inc
jmp
pmulhuw
cmp
in
adc
mov
mov
imul
lret
popf
mov
jecxz
adc
mov
cltd
dec
call
ret
cmpb
or
inc
in
sahf
cmpsl
jle,pt
int
cmp
mov
les
pop
stc
les
addr16
mov
fidivrl
pushf
lea
out
jo
scas
and
fldcw
popa
repz
adc
jl
icebp
xchg
mov
or
inc
ret
xchg
add
inc
inc
dec
icebp
sub
mov
pop
stos
ds
xchg
lock
lock
fcompl
xchg
stc
or
inc
adc
jae
aas
fucomip
lods
sub
push
pushf
popf
dec
sbb
insb
rorl
or
jbe
jnp
dec
int3
incl
repnz
daa
mov
xchg
mov
pusha
ss
int
jp
sub
je
sbb
mov
cmpsl
push
push
jb
shl
jle
in
negl
cmp
inc
ja
movsb
in
inc
outsb
xor
adc
adc
das
mov
jge
push
adc
outsl
jecxz
mov
orb
outsb
bound
loope
lock
and
pop
sub
sub
lods
pop
aam
xor
lcall
push
fidivs
cmc
lahf
cltd
lods
push
out
adc
mov
loopne
sbb
xor
mov
pushl
hlt
push
push
jp
cltd
cmc
jno
jne
mov
and
add
pop
fwait
dec
call
ret
xorb
jge
or
inc
push
aaa
dec
fwait
leave
repnz
cmp
cmp
push
aaa
xor
sub
mov
nop
ljmp
xchg
inc
add
cmp
lds
mov
fnstenv
pmaxub
xchg
cmc
xor
and
push
mov
add
sub
pop
shl
cmp
nop
push
inc
gs
pop
or
mov
mov
and
mov
loop,pn
push
xor
cs
rcrl
stos
bound
clc
xchg
inc
fisttpll
push
adc
cmpl
rcll
imul
mov
adc
outsl
cli
aam
pminsw
push
push
std
lahf
scas
jns
sub
adc
xor
mov
push
sub
mov
pop
mov
mov
int3
jmp
adcb
into
out
ficompl
insb
pop
jp
inc
js
jbe
stos
and
cmp
inc
push
dec
xchg
push
cltd
xchg
inc
sbb
in
push
sahf
sbb
outsl
js
and
in
mov
popa
push
or
mov
push
add
pop
add
cmp
cli
xchg
jno
sub
xchg
push
shll
pop
sbb
inc
sub
push
lret
mov
test
aas
and
lods
cmp
andb
push
inc
test
sahf
lea
push
insb
xchg
pop
jecxz
rcrl
in
cmc
fs
cmpsb
rcll
aad
jo
cmp
mov
xor
push
push
adc
jl
enter
sub
pop
sbb
insb
fsub
add
inc
out
mov
sub
or
or
lds
call
xor
mov
mov
test
pop
movsb
jb
dec
dec
sahf
cmp
dec
xor
adc
loope
mov
repz
fstps
mov
dec
pop
clc
xor
dec
ds
int
dec
test
jge
xor
xor
cmpsb
popa
stc
mov
mov
out
jnp
ss
je
jne
je
xchg
or
std
push
mov
push
in
fst
mov
scas
bound
bound
subl
pop
jle
sbb
cmpl
cli
jg
aaa
cmpsl
jns
and
xchg
or
pop
lcall
frstor
dec
adc
and
jb
aaa
aad
jecxz
sbb
ja
xor
in
sbb
test
dec
adc
cmpsb
or
fwait
ja
inc
ja
cs
mov
mov
jnp
ret
jnp
in
sub
dec
push
in
sbb
xor
mov
pop
mov
aaa
lret
jns
sbb
sub
insb
aaa
test
scas
push
aam
cmpsb
adc
push
xchg
add
pop
fisubl
clc
mov
cmp
xchg
pop
cld
or
inc
cmp
sbb
inc
mov
add
pop
jge
lcall
negb
ret
sbb
dec
adc
pop
int
or
and
dec
add
cmc
in
cmp
inc
pop
rorl
pusha
data16
inc
stc
das
jmp
adc
out
nop
dec
pop
push
pop
lods
fcompl
dec
mov
xlat
cld
movsb
adc
pop
out
adc
aad
insb
add
add
addr16
lock
fsubp
or
outsb
add
addr16
xchg
xor
adc
add
decb
js
sub
mov
and
inc
xor
ret
imul
pop
leave
in
mov
jg
mov
in
data16
fisubrl
jbe
add
call
fisttps
fs
and
xchg
sahf
mov
imul
mov
popf
bound
dec
repnz
jnp
inc
and
or
add
ss
fldenv
push
arpl
xchg
out
pop
inc
pop
loopne
jb
xchg
loope
mov
pop
dec
int
mov
adc
dec
add
dec
inc
or
fisubrl
cmp
mov
dec
and
scas
es
jb
push
add
shlb
cmpsb
cltd
jmp
aam
xchg
repnz
adc
scas
lods
int
xchg
ds
in
cmpsb
adc
and
pusha
popf
pop
sub
sbb
ss
nop
sub
pop
scas
mov
repnz
ss
cmc
out
pop
pop
inc
mov
or
mov
inc
inc
adc
pop
stos
sub
movb
jbe
adc
mov
pop
mov
mov
xor
or
ja
push
sbbl
and
xchg
ds
bound
loop
stc
sub
push
push
adc
out
dec
xchg
dec
mov
xor
xor
in
push
es
adc
les
pushf
push
in
and
mov
adc
pop
fldl
add
pop
inc
pop
sbb
mov
mov
add
inc
jmp
pop
jl
data16
popf
cli
sub
das
mov
xchg
cmpsb
push
inc
mov
push
rorb
jb
negl
test
or
adc
test
enter
or
pop
and
test
fucomp
dec
movsl
out
enter
cmp
fwait
push
mov
cmp
mov
mov
add
pushf
jae
popa
ss
xchg
andb
decb
sbb
xor
int3
mov
in
stos
outsl
loopne
fsubs
in
jl
mov
and
adc
push
push
sahf
fsubrl
and
rcll
gs
stc
scas
lcall
in
fdivr
push
and
out
jae
mov
fistpll
jmp
push
xchg
mov
and
popa
mov
xorl
andnps
xor
inc
call
andb
andb
movsb
movsl
aad
stc
clc
mov
dec
repz
inc
lea
lret
ret
cs
inc
ljmp
mov
lret
movl
enter
sub
cmp
lods
xor
insl
aam
and
cmc
mov
ss
adc
jg
pop
mov
je
inc
frstor
daa
or
cltd
mov
sbb
std
je
cmp
push
scas
fistps
stos
out
fidivs
lahf
loopne
xor
xchg
stos
mull
aas
jb
mov
filds
jge
push
cltd
push
orl
sub
add
dec
fiaddl
rep
and
mov
insl
cmpsb
jno
fs
jg
sub
bound
into
test
pop
sub
mov
outsb
shll
or
cmp
stos
jno
jns
arpl
xor
add
push
fs
push
out
jo
das
fucomp
aad
pop
data16
jmp
ret
or
lret
test
arpl
mov
pmovmskb
pop
stc
and
not
jnp
cmp
aaa
cmp
mov
jmp
fisttpll
int
mov
es
dec
decl
mov
jno
aas
inc
lea
mov
cli
push
pop
inc
mov
bound
aam
out
pop
icebp
dec
mull
fiaddl
dec
test
sub
sbb
jno
sbb
or
imul
aaa
dec
pop
je
in
jge
cmp
xchg
mov
and
mov
or
repnz
lahf
add
mov
pop
mov
or
pop
and
dec
cmp
je
jmp
subb
push
jl
std
pop
icebp
outsb
movl
push
cmp
jmp
out
cmpsb
dec
inc
test
adc
imul
fildll
inc
inc
mov
or
roll
aas
test
pusha
dec
jno
nop
mov
sbb
lock
incl
incl
ficoms
mov
push
lcall
and
mov
addr16
lret
cs
or
mov
add
xor
xchg
outsl
add
mov
and
ret
sbb
repnz
fadds
lcall
les
out
or
das
sub
outsl
jl
push
cmpsl
sub
mov
xor
mov
adc
pop
lcall
leave
cmpl
jo
mov
jg
add
sarl
push
ljmp
out
push
cmpb
out
lcall
rcll
cwtl
sub
fnstsw
ret
loope
imul
pop
cmp
ret
cmp
ljmp
xlat
in
adc
xor
mov
arpl
mov
insl
mov
loopne
cmc
mov
loop
push
mov
je
pusha
sbb
gs
hlt
imul
mov
add
or
dec
pop
loopne
jecxz
and
sub
xchg
lret
xor
sub
dec
xlat
movsl
dec
adc
sbb
mov
push
popa
imul
mov
jnp
sti
and
scas
test
cmpb
mov
out
push
out
je
sbb
pop
insl
xchg
adc
xor
xor
dec
or
inc
xchg
inc
and
or
adc
std
adc
xor
jo
jbe
push
cwtl
loope
sbb
shl
sarl
cmp
mov
pushf
xchg
inc
shll
ja
mov
jne
mov
cmp
add
mov
scas
cmpb
movsb
jo
or
std
subb
nop
adc
and
push
push
sbb
xchg
addr16
ljmp
arpl
imul
jo
stos
divb
fucom
rclb
mov
mov
fnsave
add
pusha
fisubrs
push
xchg
fisttpll
shlb
mov
xor
loop
push
or
pop
rcll
mov
mov
data16
push
nop
push
lcall
push
test
lret
pop
mov
repnz
inc
add
ljmp
or
aam
mov
rorb
aad
pop
push
jle
xor
popa
mov
mov
dec
je
fnstcw
es
and
sbbl
push
mov
adc
nop
mov
jge
repnz
mov
cmpsl
loope
and
jnp
mul
mov
xchg
fiaddl
sub
xor
pop
insb
dec
or
das
mov
das
pop
syscall
jecxz
sbb
mov
movsl
cmp
hlt
xchg
das
jmp
popf
xchg
lods
mov
jne
fimull
inc
dec
repz
out
jmp
mov
mov
popf
mov
push
sub
out
fldl
gs
xor
or
push
adcb
aam
push
mov
xor
push
dec
lahf
or
inc
xchg
push
adc
int
xor
push
scas
pop
jmp
loop
test
push
mov
insb
je
adc
mov
mov
sarb
push
iret
out
add
xlat
xchg
sbb
jg
lods
roll
push
sub
mov
out
mull
hlt
xor
xorl
js
or
jg
fnstsw
adc
cmp
pop
lea
mov
lock
fistpl
adc
fsubrl
mov
imul
rcr
lods
jl
push
pop
dec
ret
cltd
stos
dec
dec
mov
push
dec
movd
dec
rorl
cmpsl
test
aam
sub
and
and
test
out
and
xor
jmp
pop
pop
adc
dec
mov
or
lahf
shll
fcoms
pusha
jnp
mov
lock
frstor
pop
popl
cs
mov
outsb
inc
push
adc
jae
sbb
sub
int3
out
sbb
xlat
adc
xchg
push
xor
inc
stos
xchg
cmovl
xchg
jle
cld
lcall
das
dec
roll
cmc
mov
inc
icebp
adc
xor
rol
int3
xor
incb
out
mov
pop
sbb
push
xchg
sbb
popl
sbb
fidivrl
sti
xchg
test
call
rcrb
std
sub
cwtl
cltd
into
push
ret
fiadds
sub
jecxz
mov
adc
cli
push
aam
and
sarl
cmc
daa
out
sbb
xor
inc
lea
and
cmp
fmul
rcrb
push
xor
inc
jb
sbb
cmpsl
add
subb
iret
xchg
test
pop
mov
fcomps
fildl
test
mov
xor
inc
fisubrl
sub
mov
cmp
push
sub
jbe
rclb
insb
jp
pop
inc
fiaddl
in
jecxz
jmp
dec
jecxz
daa
adc
mov
xchg
push
mov
popf
xchg
lock
aad
pop
rcrb
xor
mov
fsubp
mov
push
dec
ds
adc
mov
cmpsl
cs
rclb
jae
xor
mov
rcl
les
pusha
sub
sti
xchg
test
mov
fildl
movsl
xor
int
lds
mov
push
ss
pushl
xor
repz
cmp
aad
fneni(8087
xchg
ljmp
cmp
xchg
aas
lea
movsb
icebp
push
insl
lea
jl
mov
movsl
lods
pop
xchg
or
call
cwtl
loope
fldl
pop
ret
or
insl
andb
push
scas
and
test
or
in
xchg
movsb
inc
ror
int
dec
jecxz
pop
pusha
xchg
mov
or
xchg
add
hlt
repz
mov
or
mov
push
bound
or
jg
repnz
push
lods
pop
adc
jbe
mov
inc
jp
pop
sbb
sahf
sbb
dec
loopne
xchg
mov
jp
adc
cwtl
and
pop
shrb
mov
out
shrb
mov
call
out
dec
popf
fldl
enter
pop
xor
mov
sahf
dec
in
and
addr16
pop
in
addr16
jl
in
cmp
sbb
pusha
cmp
cld
imul
jmp
mov
jbe
mov
mov
les
cli
pop
das
jno
mov
push
int
outsl
inc
mov
or
dec
pusha
les
jne
insl
cmp
fadds
jecxz
js
les
xchg
dec
or
loope
mov
pop
aam
or
xchg
mov
xchg
outsl
jp
and
xchg
ret
pusha
xchg
inc
in
add
rcr
and
mov
adc
arpl
cs
out
nop
das
les
push
rcrl
pusha
test
rcl
and
sub
icebp
mov
std
out
add
hlt
jae,pt
or
inc
pop
repnz
sub
addr16
mov
xor
mov
mov
sbb
push
xchg
bound
scas
cld
cmp
ret
jle
adc
lret
mov
dec
arpl
mov
int
ds
ljmp
rcll
xchg
dec
or
and
pop
mov
push
in
ljmp
loop
shlb
sbb
stc
lret
jnp
inc
adcb
in
ss
ret
sbb
adc
stos
xchg
inc
sti
and
inc
add
test
jmp
pop
cmpsb
jns
int
int
or
sub
xchg
dec
mov
in
push
sbb
les
mov
test
mov
push
mov
icebp
adc
ja
dec
fwait
roll
ss
je
rorb
pop
int3
and
cmp
pop
mov
test
imul
rcll
add
shr
clc
lods
sbb
cli
cli
xor
stos
in
ret
js
sbb
stc
jbe
push
int3
adc
mov
daa
push
jp
test
out
out
and
sub
loop
pop
inc
push
pop
sub
dec
pushf
cmc
mov
rorl
adc
and
shr
mov
sbb
cmc
repz
dec
mov
repnz
jp
pop
fwait
pop
adc
mov
lcall
push
and
jae
cmp
outsb
cmpb
sub
or
xorl
dec
or
push
sbb
xchg
lods
adcb
incb
push
jle
adc
add
iret
push
shlb
test
sbbb
cmp
push
push
adc
cmp
and
push
dec
inc
and
adc
bound
push
mov
cli
mov
xchg
jne
es
pop
lcall
or
inc
sub
lret
pop
popf
mov
fs
push
out
and
insl
xlat
xor
inc
push
rorb
push
leave
lods
sar
into
push
fbld
mov
test
inc
enter
arpl
xchg
imul
shr
jecxz
and
cmpsl
pop
xor
mov
push
adc
pushf
mov
stos
neg
inc
repnz
addr16
push
mov
mov
pop
cmp
xorb
mov
inc
aam
cmp
pop
mov
and
dec
gs
js
stc
sbb
repnz
and
add
popf
inc
pop
push
imul
mov
scas
xor
xchg
scas
inc
out
lret
clc
push
add
in
jmp
jno
xchg
cmp
rolb
jge
inc
push
dec
sub
and
bound
lock
loope
and
es
loope
cmpsl
in
mov
fnsave
loope
cltd
jmp
mov
xchg
mov
repz
test
or
sub
fcomi
mov
call
inc
int
jnp
das
lcall
fimuls
outsb
jle
push
mov
mov
sub
xor
push
es
jle
dec
mov
negb
xlat
push
add
sub
sbb
icebp
xor
dec
aam
cmp
mov
movsb
decl
jne
adcb
mov
dec
xchg
int3
ficompl
iret
inc
jno
xor
call
add
pop
sbb
in
imul
push
aad
inc
sub
push
add
fs
outsb
mov
mov
call
jp
or
loopne
repz
pop
es
gs
xlat
push
push
mov
adc
cmp
mov
and
pand
add
lods
icebp
xor
xor
cld
mov
cmpsb
cmp
out
mov
sahf
mov
aas
push
cmp
pop
mov
mov
dec
adc
pop
into
inc
je
jnp
loop
xchg
inc
leave
cmp
fwait
pushf
and
in
loopne
pop
addr16
xor
ja
push
inc
pop
mov
pop
and
sahf
clc
adc
loopne
sbb
mov
xchg
mov
pop
dec
adc
jb
mov
push
jp
cld
repnz
jmp
lea
xchg
jbe
xlat
lcall
in
shlb
test
ret
dec
cld
or
inc
push
cmp
sahf
gs
mov
test
cld
fnsave
mov
xchg
jo
stos
add
pushf
je
outsb
sbb
xor
dec
pop
dec
aas
push
popa
lock
cwtl
cmp
mov
and
sahf
pop
sbb
push
iret
sbbl
imul
out
popf
lds
test
arpl
push
std
rorb
shr
rcrb
dec
push
jo
test
daa
in
push
inc
stc
mov
in
push
cld
sub
xor
jnp
rclb
pop
in
test
push
popa
pop
jl
add
xor
inc
mov
push
scas
stos
dec
mov
push
xor
cmpsb
push
jl
pushl
xchg
lods
leave
enter
cmpb
push
or
ljmp
das
cld
xor
out
lods
subb
push
mov
cli
dec
repnz
or
xchg
outsl
jbe
adc
into
push
leave
jmp
orb
push
xlat
dec
or
fisubs
aas
popa
stc
adc
mov
mov
pop
sbb
iret
inc
repz
adc
jge
pop
in
fcomp
fidivrl
shll
adc
lods
adc
imul
std
stc
scas
push
pop
and
repz
movb
jl
jecxz
aaa
pop
aas
imul
push
pop
jge,pt
insb
mov
ja
sub
in
sbb
adc
inc
or
mov
xchg
scas
lret
in
push
bound
pop
push
push
leave
pushw
fsubrl
push
arpl
je
lea
jns
xchg
test
popf
xor
movsb
push
divb
mov
iret
je
outsb
jg
jns
and
fists
aad
rcr
and
cmpsl
aad
stc
push
jns
nop
or
and
clc
subb
inc
repnz
mov
aaa
or
mov
arpl
cmpsb
mov
push
xchg
adc
test
and
add
pop
dec
pop
mov
test
imul
xor
push
imul
insb
push
outsl
xchg
jne
add
enter
negl
cmp
xchg
xchg
bound
cltd
sarl
cmp
push
push
fldt
xchg
sub
lods
and
mov
imul
mov
test
pop
les
dec
mov
cmp
faddp
mov
fstl
jg
cmc
sahf
int3
sub
retw
mov
loopne
mov
insl
jmp
xchg
mov
add
mov
clc
in
sub
mov
into
dec
xchg
scas
inc
shlb
and
lret
fistps
mov
es
mov
imul
loopne
mov
pop
ret
test
mov
fstp
add
scas
ds
bound
dec
dec
test
pop
test
int
mov
sti
lcall
jae
arpl
mov
enter
push
and
ja
call
push
adc
out
cmp
mov
loope
mov
icebp
in
aad
lods
and
hlt
xchg
push
jp
lea
mov
rcr
loopne
mov
js
inc
adc
adcb
cld
stos
lahf
mov
mov
inc
jne
scas
cli
sub
popa
xchg
cltd
outsl
subl
pop
aaa
or
cmpsl
fdivrl
adc
aam
push
std
or
scas
idivb
dec
xor
pop
lds
mov
daa
sbb
jmp
jno
inc
repnz
loop
sbb
test
stos
dec
mov
push
and
lods
daa
shll
sbb
fiaddl
pop
sbb
xchg
dec
cmp
jl
lret
daa
cmp
sub
jecxz
mov
movsb
pop
mov
icebp
cmp
scas
movsl
movsl
data16
push
fdivl
sbb
ret
sbb
cli
in
adc
xor
inc
sub
add
push
nop
mov
jae
push
jmp
in
ja
sbb
stos
movsl
stos
pop
inc
add
aaa
push
cltd
notb
pop
hlt
std
push
ss
mov
testb
mov
and
push
loopne
movsb
adc
dec
dec
int3
outsb
stos
or
fucomi
lods
lret
mov
dec
and
pop
pop
dec
jae
rcrl
jnp
outsl
adc
in
loopne
add
cmp
shl
std
fstps
cmp
xor
sub
push
jl
sbb
cmc
addr16
jecxz
jne
dec
cmp
shlb
pop
mov
xchg
loopne
enter
rorb
xor
out
push
ds
fists
call
xor
mov
sbb
jecxz
ljmp
jle
jnp
andl
add
inc
rorb
cmp
daa
xchg
shl
and
add
inc
test
cmp
sbb
adc
push
call
jb
lret
fnstsw
lods
or
insb
jns
out
xor
or
pop
cmpsb
mov
sbb
imul
xor
leave
scas
ret
addl
fistpl
xlat
inc
or
cld
cmp
pusha
sub
loopne
leave
fbld
cmp
pushf
cs
lret
sbb
push
xchg
push
loopne
lcall
lock
jb
mov
je
inc
cmpsl
ljmp
push
pop
sub
or
adc
jmp
inc
movb
adc
dec
adc
jno
fldcw
lock
subl
inc
inc
daa
addr16
jl
mov
cmpsb
pop
shlb
sbb
test
mov
fs
hlt
fwait
pop
fmulp
xchg
add
push
dec
cmc
je
insl
not
sbb
subl
cs
pusha
xor
iret
test
xor
mov
and
xor
dec
out
bound
pop
loopne
das
add
pop
gs
ret
jg
lcall
bnd
lret
push
jns
cmpsb
dec
adc
fsubrp
inc
inc
cmp
inc
movsl
fs
mov
ret
cmp
adc
jge
pop
ss
jg
outsb
divl
call
sub
sbb
frstor
pop
xchg
or
fldt
inc
ds
lahf
imul
lods
jnp
inc
ret
in
xchg
inc
cwtl
outsb
inc
es
aaa
in
into
aas
movsl
cmc
mov
sbb
push
dec
lahf
ret
imul
std
std
test
jns
lea
adc
dec
movsb
lret
xor
push
nop
inc
pushf
sbb
xchg
add
pop
dec
add
dec
insl
sti
jo
mov
insb
notb
adc
mov
rolb
mov
cmp
pushf
lods
cmp
dec
and
addl
aam
pusha
jmp
in
and
adc
mov
cwtl
or
ds
push
pop
push
stos
push
cmc
mov
pushf
aam
sti
rcll
lods
ficoml
iret
mov
repz
icebp
test
push
push
mov
movb
sub
cmp
pop
inc
lock
inc
or
cld
stos
xchg
jns
jg
jne
add
and
sbb
out
inc
dec
in
pop
mov
xchg
leave
mov
xchg
mov
add
mov
jp
xchg
lods
call
mov
ret
call
and
sahf
push
mov
in
and
mov
jg
add
add
or
mov
js
stc
sbb
sbb
test
cltd
xchg
pop
je
fsubrl
js
add
ja
jae
mov
sub
movsb
in
arpl
icebp
xlat
mov
mov
dec
call
pop
xor
in
jae
mov
mov
out
jecxz
cltd
stos
into
dec
lds
push
inc
adc
addr16
hlt
std
jnp
jge
and
mov
add
fcmovnu
fisubrs
xor
xchg
adc
push
popf
cmp
adc
jne
xchg
addb
pusha
daa
fadds
dec
xlat
jno
mov
sarb
xor
sub
sbb
pop
dec
xchg
outsl
nop
xor
mov
sub
xor
sbb
repnz
push
push
sub
sar
mov
insb
pop
cmp
nop
icebp
clc
pop
loope
sub
aam
mov
or
les
sub
sbb
cmpb
sub
mull
pusha
mov
and
sti
mov
dec
sahf
popa
fwait
hlt
nop
jae
jb
cmp
xchg
adc
inc
push
mov
jl
imul
imul
inc
sub
mov
into
addr16
cwtl
sbb
or
jb
aas
in
pop
sub
fcmovnb
fmuls
adc
mov
xchg
mov
shlb
adc
mov
mov
in
or
stos
ret
mov
aam
jns
rcrl
insl
sub
out
sub
icebp
cmpsb
push
loop
sbb
adc
stc
popa
fildll
xchg
jo
mov
lret
das
jge
das
dec
mov
dec
add
fstpl
mov
out
out
xchg
jbe
dec
filds
jg
inc
sbb
sbb
push
insb
cmc
cmp
cli
xchg
xchg
movsb
lods
pop
rcrl
es
pushf
xchg
test
bound
ret
int3
lahf
cld
iret
fwait
inc
push
je
loopne
ret
cmc
push
fwait
sbbl
adc
iret
std
xor
je
and
stc
xchg
push
lea
sbb
adc
and
jnp
out
shrl
mov
sbb
cmp
stos
dec
dec
movsl
cwtl
ret
mov
rcll
cwtl
sub
gs
rcrb
les
jbe
ds
jge
outsl
cli
or
mov
adc
adc
xchg
imul
mov
adcb
mov
mov
mov
jo
fildl
js
push
test
add
outsl
mov
int
lahf
xchg
lock
sub
adc
cmp
push
pop
cwtl
or
fwait
iret
loope
gs
outsl
mov
mov
jns
jmp
js
add
mov
outsl
xlat
shlb
jg
adc
pushf
xchg
aam
add
mov
mov
mov
jge
insb
cld
jns
mov
hlt
mov
cmp
sub
mov
jl
mov
adc
mov
repnz
jmp
ret
push
cmp
sahf
or
fimuls
fwait
pop
cmp
fidivrs
in
jp
enter
lea
fstl
adc
sbb
add
int3
call
inc
popa
inc
loopne
mov
cmc
sub
inc
xchg
pop
repnz
inc
jne
iret
dec
shlb
inc
xlat
mov
loopne
mov
lods
aad
in
or
jle
mov
scas
ss
cmp
inc
mov
inc
dec
lahf
or
xor
push
idivl
push
adc
movsl
cs
jg
add
push
sub
cli
cwtl
sub
mov
and
int
loopne
imul
inc
jbe
mov
outsl
and
push
jne
shr
jp
push
stos
sbb
int3
mov
jmp
hlt
pop
or
ret
bnd
mov
mov
mov
mov
adc
pop
nop
xor
loope
cmpsb
inc
jb
dec
pop
mov
cmp
add
sub
cli
xchg
mov
or
dec
add
scas
push
adc
and
out
xchg
clc
inc
scas
jne
fnsave
cmp
into
repnz
in
lret
adc
sbb
fwait
pop
dec
mov
fcom
sbb
test
cmpsl
shll
add
pop
add
mov
inc
mov
pop
jnp
cmp
or
imul
out
pop
loopne
mov
xchg
cmp
flds
sbb
orb
xor
mov
mov
or
jbe,pn
cwtl
ja
push
sub
lret
inc
push
out
push
icebp
and
int3
ds
add
cltd
ss
lds
inc
fldl
jg
dec
adc
cmp
lret
je
add
out
or
arpl
sarb
sbb
dec
jno
sahf
adc
test
push
sbb
cmp
pop
sahf
sub
lret
lods
nop
enter
mov
mov
cmc
fwait
outsl
push
aad
mov
jmp
bound
jbe
std
cltd
lea
lahf
movsb
xor
dec
xor
xchg
inc
push
pop
fdivrl
ror
xor
cmp
mulb
dec
cmp
cld
adc
roll
push
andl
sub
sbb
testl
rorl
jp
dec
mov
call
or
ja
inc
jecxz
dec
fsts
jno
pop
add
sbb
aaa
xchg
sub
fcmovnbe
mov
push
out
jecxz
push
sbb
clc
inc
xchg
out
stos
mov
cli
imul
dec
mov
or
sahf
cld
sarb
cmpsb
lret
or
frstor
pop
test
aam
mov
imul
iret
sti
jle
leave
sub
mulb
cmpsb
mov
clc
out
sub
out
mov
notl
outsl
lret
fbld
add
push
pop
push
pop
pop
pop
sarb
call
lcall
stos
mov
fstpt
adc
xor
mov
jl
xlat
mov
fistl
shlb
sahf
rcrl
popa
call
cli
fisubrs
fisttpll
sahf
mov
and
xchg
push
cmp
fcoms
xor
jo
imul
aaa
notl
movsl
hlt
in
mov
xor
xor
mov
iret
cmp
jae
sub
mov
or
inc
adc
out
cmp
enter
lret
inc
loop
rcll
idivb
mov
hlt
mov
nop
xchg
mov
push
ja
jmp
jnp
gs
fwait
xchg
stos
les
jmp
test
push
aaa
imul
push
adc
into
shll
or
mov
dec
shrl
push
bound
sub
lret
shll
jmp
cmovp
fwait
xchg
dec
sbb
add
std
jnp
cwtl
dec
pop
aas
xchg
adc
sub
jno
hlt
jge
sbb
insl
mov
mov
pop
xlat
push
ss
adc
jle,pt
pop
push
call
sbb
mov
int3
or
rcrl
mov
call
add
not
jae
adcb
mov
iret
dec
mov
push
sahf
fdivl
loopne
xchg
jbe
push
cmp
fistpl
cmp
pop
jg
shll
jns
lea
fs
scas
push
dec
mov
sahf
push
cmpsb
negb
lods
lret
xchg
sbb
lods
subb
or
int
int3
xchg
jp
cmpsb
dec
pop
aas
movsl
in
jmp
inc
xchg
inc
pusha
loopne
int3
or
jecxz
outsl
nop
shrb
jmp
sbb
dec
mov
xchg
add
or
cmpl
jne
or
cmp
push
popf
in
fstpt
call
cld
std
pop
mov
or
cmc
jmp
or
sub
lods
xor
popf
or
popf
loop
clc
movsb
or
jne
dec
stos
xchg
mov
mov
jno
mov
inc
sub
cmp
nop
add
lds
or
push
mov
ds
cld
into
sahf
xchg
xchg
mov
cmp
add
push
iret
addr16
es
push
daa
hlt
xchg
mov
outsb
aad
pop
outsb
in
test
jl
jle
mov
lcall
out
aas
mov
push
in
imul
fisubl
adc
mov
add
dec
daa
or
cmpl
mov
repz
mov
xchg
movl
cmc
cmpsl
rcrb
cmp
xchg
sbb
or
iret
and
mov
cwtl
cs
and
cmc
and
mov
pop
push
lret
jnp
jno
inc
jno
dec
nop
mov
fidivl
pop
lret
pop
nop
in
push
inc
ret
sub
jnp
cwtl
lcall
stc
in
or
out
sbb
cmp
cmp
ret
add
dec
cmpsl
pop
xlat
inc
inc
repz
stos
add
addb
push
inc
pop
and
das
dec
sub
mov
cltd
inc
fnstcw
mov
adcb
xlat
insl
and
jns
sub
add
jge
dec
sarb
das
inc
fcmovnbe
push
loopne
jmp
mov
aam
push
aaa
lds
or
popf
cli
leave
add
sub
sahf
and
add
mov
xor
aam
adc
mov
movsb
jb
inc
push
imul
movd
fcmovnu
cmp
and
pushf
sbb
xchg
add
sub
test
icebp
sub
add
mov
test
enter
push
jge
jae
add
adc
cld
fisubl
or
jb
jle
xor
icebp
dec
jl
cmp
test
inc
push
bnd
cmpsb
add
jmp
repz
inc
pop
mov
mov
xor
sub
repz
dec
lret
xchg
sub
loopne
cmc
jno
dec
add
cwtl
mov
mov
lcall
lods
imul
insl
ljmp
insb
gs
loop
int
popa
or
negl
jmp
hlt
lock
jae
jne
xchg
xor
pop
jns
push
mov
mov
mov
bswap
pop
scas
cmp
sbb
out
popa
xor
xchg
jbe
xchg
cld
dec
jp
jmp
out
xor
pop
bound
mov
repz
es
scas
jg
push
int
mov
xchg
push
outsb
jl
push
mov
mov
lods
sti
lret
stc
in
inc
push
mov
pusha
push
mov
mov
mov
xchg
out
and
inc
fdivr
cmc
leave
rorb
ret
inc
test
enter
xor
adc
jo
mov
mov
orl
add
mov
out
xor
cmp
pop
call
mov
mov
popf
mov
mov
scas
leave
xor
jle
dec
sbb
cmpsl
ret
loop
xor
popf
sub
xchg
and
inc
fsubs
aaa
ret
imul
rclb
fcmovbe
pop
mov
out
imul
mov
pop
sub
loop
cmp
jns
jecxz
cld
cmp
push
das
and
mov
cmp
xor
loop
inc
cmpsl
sbb
fbstp
jecxz
pop
aam
sbb
sub
outsl
jns
ljmp
adc
stos
call
lahf
dec
int3
inc
or
fdivs
aad
xchg
ficoml
repnz
jo
sbb
in
xchg
lret
aas
jge
mov
jbe
cmp
stc
repz
add
bound
xor
sbb
mov
mov
out
pop
ffree
rorb
pop
sub
jl
mov
mov
jbe
js
outsb
pop
jmp
imul
cmp
xchg
insl
sub
pop
packuswb
cmp
inc
iret
lret
pop
ficoms
mov
push
in
fs
movsb
jge
cmp
push
sbbb
push
in
xor
cmp
les
pop
mov
xor
rcrl
xchg
cmovo
orb
jmp
ret
pop
and
sub
jl
cs
sub
jae
push
or
jg
sub
sarb
icebp
or
jp
mov
ss
orl
pop
sub
mov
cmpsb
enter
cmovb
hlt
fcomps
dec
cmpsl
adc
adc
je
sub
mov
xchg
mov
repnz
aaa
jbe
pop
jmp
adc
repz
jge
add
inc
imul
repz
pop
cwtl
add
xchg
ja
outsb
clc
hlt
pop
mov
pop
mov
dec
out
cmp
movsl
aam
xor
mulb
fwait
test
cmp
inc
xor
xchg
cmp
pmullw
enter
rol
mov
lret
comiss
mov
stos
mov
shrl
and
out
jo
cmp
add
xchg
insb
cmp
gs
shr
xchg
je
xchg
movl
out
ror
shrb
bound
pop
aas
jnp
pop
fwait
jmp
insb
jne
jne
cs
pop
adc
jmp
arpl
xchg
subb
jmp
ret
bnd
pop
in
or
mov
in
adc
rorb
cli
repnz
fcoml
insl
loopne
push
ljmp
push
mov
jmp
push
xchg
xchg
nop
stos
xor
and
les
jae
fs
mov
dec
negl
jae
push
cwtl
mov
cmp
je
and
mov
xor
fdivrs
push
repnz
sub
leave
clc
jb
xor
dec
xchg
or
fucomp
aam
mov
cmp
jns
push
inc
xchg
fdiv
addl
sti
inc
push
leave
push
roll
pop
pop
sbbl
adc
popa
cwtl
out
shll
mov
stos
sub
jno
push
jl
push
sub
in
insl
jle
mov
sub
cmp
and
es
insl
pop
test
addr16
push
test
cltd
or
pop
jo
cmp
xchg
mov
xchg
dec
mov
stc
mov
xorl
mov
int3
push
jmp
add
imul
out
lods
out
das
call
int
pop
fsubrl
das
rolb
mov
sbb
push
das
pop
pop
sbb
xchg
jmp
in
jo
cmp
div
dec
sbb
fnstcw
jns
xchg
sub
sub
pop
pop
ljmp
cmp
cmpsb
jmp
mov
push
idivb
or
cmp
and
inc
cmpsl
adc
testb
pop
cmp
test
test
arpl
sbb
clc
ficompl
mov
mov
shr
je
stos
pop
inc
inc
hlt
clc
jns
mov
xchg
sub
cwtl
push
lock
pop
xchg
or
sbb
mov
addr16
mov
mov
sbb
icebp
call
inc
stos
mov
js
add
scas
icebp
mov
pop
mov
pop
test
and
lcall
jecxz
movl
push
xchg
loop
or
push
mov
fnstenv
sbb
or
mov
cltd
les
ret
sub
xor
loopne
je
or
mov
xchg
mov
mov
scas
stos
push
mov
in
sbb
imul
shlb
in
sub
rorl
inc
pop
loope
mov
scas
fidivs
fisubl
sub
js
ffree
rorl
cmp
or
inc
or
mov
jg
daa
and
cwtl
js
xchg
stos
jo
jbe
pop
sbb
shlb
xorb
inc
lcall
or
sahf
mov
xor
enter
push
mov
adc
fdivrs
inc
mov
daa
mov
decb
das
into
push
je
push
loopne
movsb
or
cmpsl
cmp
xchg
cmp
mov
or
scas
push
rcrb
pop
inc
test
and
popa
addb
leave
mov
setb
shlb
pop
fneni(8087
out
mov
addl
outsl
cli
je
test
addr16
cmpsb
lret
sub
jne
loop
or
inc
stos
shlb
lret
fimull
sbb
std
add
sub
into
lcall
pop
jno
popa
inc
pusha
dec
xor
int
lcall
testb
repz
cmpsl
and
xchg
movsb
cmp
xlat
test
je
mov
and
mov
mov
clc
mov
loop
cmpsl
pop
mov
inc
sbb
fwait
repz
loope
mulb
xchg
push
mov
cmp
adc
ds
sub
mov
out
fimuls
ret
movsb
rcll
fistl
ja
gs
incb
lahf
sub
iret
es
push
stc
sbb
push
sub
adc
cmp
mov
mov
lcall
int
dec
jg
cmc
test
mov
xor
std
cmp
push
ds
rorb
fldenv
hlt
and
add
mov
sub
jecxz
test
push
test
xor
cmp
push
insb
ss
mov
or
cli
cmp
add
mov
cmp
pop
jmp
pop
cli
rcrl
nop
lock
jnp
fcomps
dec
ret
adc
out
cmpsb
clc
pop
mov
mov
mov
pop
xchg
or
ret
mov
fdivrl
inc
inc
pop
or
fcomi
outsw
push
cli
cmpsl
cld
xchg
cmp
cmp
icebp
jbe
pop
or
xchg
outsl
daa
std
insb
dec
mov
xor
and
rorb
mov
lods
in
sub
pop
add
cmp
sbb
fisttpll
adc
xchg
add
sbb
ljmp
nop
cwtl
test
addr16
sti
jle
xor
ljmp
test
daa
sar
dec
or
mov
mov
cmp
popf
xchg
mov
dec
xchg
cmpsl
xlat
into
dec
and
insl
scas
subb
and
mov
jae
adc
shll
cmp
imul
sbb
cmp
int
dec
mov
xchg
enter
mov
and
xchg
test
test
lret
dec
mov
cmp
test
loopne
ja
cmpl
sub
add
jo
sub
cmpb
outsb
lea
icebp
mov
sbb
jecxz
mov
cmp
and
sub
int
aad
or
mov
pop
jg
fcoms
xchg
cmp
dec
mov
cmp
movsl
sbb
dec
das
and
pop
mov
jmp
add
in
pushw
jge
sub
add
mov
loop
jnp
adc
sahf
pop
pop
adc
cld
xchg
shll
popa
outsb
pop
stc
mov
mov
js
push
lock
in
je
andb
or
stos
jle
xor
movsl
xchg
xchg
and
icebp
ret
cltd
sbbl
test
add
lahf
in
xor
push
xchg
cld
test
ret
shlb
lock
aad
insb
sub
sbb
int
fs
cld
in
jno
in
push
jge
es
aaa
cmc
jle
dec
scas
mov
cs
bound
sub
sbb
and
push
dec
std
cmpsb
ret
add
add
xchg
daa
jbe
jnp
pop
inc
loop
std
test
xchg
xor
arpl
mov
fs
add
jb
cmpsb
enter
mov
push
lea
lcall
lds
xorb
jmp
cmpsb
sarl
mov
imul
outsl
jl
popa
mov
or
and
xor
push
je
lcall
cld
scas
xchg
cmp
in
pop
nop
pop
jmp
sbbb
pushf
in
xor
xchg
cmp
test
stc
mov
mov
stc
cmp
stos
pop
sbb
mov
jecxz
pop
pop
inc
iret
loop
or
push
das
or
roll
xchg
push
ds
fwait
lock
or
adc
lods
sbb
iret
sbb
and
cmp
std
movsb
shll
icebp
rclb
push
bound
xchg
sbb
lds
repnz
push
pop
bound
jne
popf
mov
mov
not
test
mov
sub
adc
add
call
xor
xor
jb
cmp
sub
mov
pop
push
mov
in
and
call
xor
xor
adc
xor
leave
mov
fnsetpm(287
xor
es
frstor
sub
inc
adcb
popa
and
insl
push
sbb
iret
ret
mov
sbb
mov
inc
mov
daa
fs
jp
mov
jne
mov
adc
int3
jmp
dec
adc
ret
mov
cmp
pop
test
imulb
pushl
fmull
bound
cmp
adc
aas
or
push
xorl
out
push
cmpsb
in
sub
pop
or
xchg
add
sbb
sub
aad
mov
out
fnstsw
mov
mov
inc
push
daa
mov
adcl
fdivs
adc
mov
xor
mov
mov
mov
cmp
push
test
dec
out
fwait
mov
sbb
inc
aaa
sub
add
cwtl
dec
pop
out
cld
xor
mov
dec
std
adc
clc
idivl
xchg
mov
movsb
cmp
fisubrl
into
ficomps
inc
jb
pop
jmp
lock
and
repnz
mov
imul
xchg
std
repz
mov
jge
xor
ret
cltd
sub
xchg
mov
fwait
dec
hlt
push
popl
je
in
mov
xor
pusha
dec
sarb
pusha
or
mov
mov
sub
stc
testb
push
mov
test
add
insb
jo
out
mov
push
stos
xor
mov
dec
clc
std
pop
daa
push
inc
cmpl
lock
lods
xor
jecxz
mov
enter
jle
mov
xchg
call
xchg
push
dec
mov
xor
hlt
xorb
sti
adc
push
sarb
fstpt
or
test
adc
lahf
dec
in
cmp
pop
or
test
cwtl
inc
add
mov
imulb
cmpb
pushf
aas
pop
gs
jmp
repz
into
and
repz
ljmp
mov
xchg
subb
out
js
sbb
dec
enter
dec
or
popa
and
fdivp
pop
nop
stos
sbb
xor
cli
pushf
xchg
ret
js
lods
inc
rorl
mov
notl
clc
sub
mov
jmp
dec
cmp
inc
xor
loope
fdivs
adcb
sbb
sbb
test
mov
testb
jl
ret
fildl
enter
xchg
ja
in
movsl
lret
or
xorb
sbb
mov
mov
mov
bound
mov
and
jmp
das
ret
int3
jge
inc
outsl
repnz
popa
or
scas
xchg
push
add
adc
push
jge
loope
dec
ret
mov
test
cli
sahf
xchg
bound
inc
sub
enter
repnz
inc
sub
dec
mov
mov
aad
aam
jle
and
js
sub
cmc
add
push
lahf
mov
mov
out
sbbl
and
stc
or
popf
jl
mov
or
push
jb
pop
mov
adc
pop
push
cmp
in
enter
mov
movsb
sbb
int
jae
int3
cmp
lahf
adc
inc
hlt
test
push
add
jnp
cmpsl
fistpll
sahf
out
push
or
sti
popf
dec
mov
sub
add
cmp
cmc
sbb
jbe
sahf
dec
sub
cmpsl
xchg
in
xchg
jmp
push
imul
adc
dec
sbb
fwait
cmp
fistl
cmpb
inc
mov
or
movaps
and
push
xchg
repz
hlt
sub
push
js
mov
sub
out
push
jo
in
push
and
jo
insl
out
mov
aas
lsl
je
jp
icebp
test
fadds
fcomps
cmp
sbb
jb
das
sub
xor
xor
out
scas
sahf
fs
sar
lea
cmp
stos
jge,pt
mov
pop
fwait
adc
mov
inc
faddl
pop
sub
into
stos
icebp
pushf
or
cmp
loop
ljmp
ds
sbb
stos
mov
xchg
mov
mov
cmp
repnz
roll
imul
inc
call
mov
xchg
push
mov
adc
enter
call
inc
insb
xor
je
out
pop
add
gs
ljmp
rcll
out
aas
pushf
jne
out
push
sarb
or
xchg
daa
sbb
mov
stos
inc
pop
cmp
arpl
mov
pusha
js
xchg
and
fnstcw
and
mov
sbbb
or
clc
inc
pop
in
push
sbbb
push
inc
lahf
fcompl
mov
pop
test
das
in
movb
scas
enter
pop
or
pop
adc
fistps
adc
xchg
pop
mov
mov
xchg
addr16
lahf
push
mov
cmp
pop
xchg
jns
jbe
push
lea
push
movsb
xchg
in
mov
mov
push
and
push
dec
or
add
cmpsl
out
dec
addb
jbe
push
xchg
repnz
xchg
bnd
sbb
adc
adc
mov
lds
aad
ss
push
mov
jge
jbe
xchg
push
pop
lret
jns
push
mov
sti
adc
mov
mov
nop
test
ss
pop
jne
mov
clc
or
shrl
lcall
push
test
pop
cmp
shll
pop
fldcw
xchg
mov
fwait
sub
or
hlt
fldcw
and
popa
pop
xchg
in
inc
stos
mov
in
daa
xchg
jne
stos
sbb
jb
xchg
imul
jge
rorl
sarl
sub
enter
mov
mov
test
mov
xchg
xchg
sbb
mov
shlb
mov
add
adc
xchg
mov
mov
jmp
mov
add
push
mov
int
andb
jp
das
push
in
pop
or
je
sbb
push
push
inc
shlb
imul
push
test
adc
int
call
dec
lods
repnz
addr16
scas
pop
repnz
or
add
xchg
fbstp
or
push
call
mov
ficomps
xor
mov
inc
mov
out
aas
iret
mov
stc
lretw
lret
mov
jle
xchg
in
inc
adc
xchg
cmpb
ficomps
ss
or
pop
les
inc
jno
les
lahf
idivl
xchg
lret
lahf
fiadds
cli
movsb
cmc
sbb
mov
cmp
aaa
in
fwait
mov
es
icebp
xorb
inc
ja
out
loope
mov
pushf
repnz
lret
mov
mov
dec
sbb
out
aam
jg
mov
rcll
inc
or
movsb
inc
cwtl
push
add
dec
cmp
lcall
data16
cmpsb
sbb
pusha
inc
push
ja
repnz
pop
push
popf
jne
cmp
and
lret
inc
sti
cmc
inc
inc
loope
insb
insb
daa
ds
ret
xor
and
scas
jmp
sahf
push
daa
push
inc
sarl
scas
inc
lret
sub
rcll
aam
mov
int3
or
pop
xchg
movsl
mov
sub
or
cltd
jg
fstpl
or
dec
inc
pushf
pop
pusha
aad
add
and
sbbl
jecxz
lock
adc
out
cmp
pop
in
mov
popf
mov
adc
movsb
shl
xor
jg
jle
pop
mov
out
je
lcall
aaa
outsb
fcoml
jae
test
fs
loope
jp
sub
lret
jnp
sbb
mov
into
cmp
mov
outsb
rcr
cld
push
aas
ss
ret
out
fcmovbe
fldenv
push
pop
push
push
mov
or
pop
jmp
aas
cmp
icebp
pop
lods
je
mov
loopne
xchg
incb
and
out
cmpsb
cmc
or
movsb
rorl
lret
fcoms
shll
and
and
fstpt
int
fwait
test
sbb
fidivrl
and
mov
dec
frstor
imul
xor
cmp
sub
mov
mov
rorl
out
pushf
inc
pop
jbe
repz
movsl
or
imul
pop
sub
cwtl
push
inc
mov
xchg
jp
or
pop
adc
cmp
and
or
push
jge
and
clc
std
jle
cmp
in
loope
das
mov
pop
stos
xorl
les
pop
xchg
xor
jo
dec
mov
test
or
add
cmc
mov
sbb
mov
pop
mov
rcl
inc
lret
sbb
bnd
push
stos
push
out
inc
out
add
or
xchg
mov
jo
xor
jmp
pop
dec
popa
popf
xchg
or
cmp
stos
daa
lock
xor
pop
and
pop
dec
xchg
jbe
lods
ficompl
push
adc
stos
insb
inc
pop
pop
ret
mov
push
sbb
mov
out
jnp
ret
inc
hlt
addb
int3
aaa
and
mov
insl
das
sub
outsb
lret
imul
loop
mov
jge
loopne
xor
or
lea
push
cmp
inc
cs
pop
clc
mov
mov
fisttpll
push
in
mov
fs
movb
adc
ljmp
lahf
jecxz
sub
bound
xchg
xlat
inc
addl
mov
sbb
pop
jmp
pop
mov
not
movsl
xchg
jecxz
push
in
jo
arpl
inc
mov
push
movsl
mov
int
mov
pop
lods
sub
hlt
jae
sub
xchg
lahf
jno
lahf
jae
adc
jle
cmp
xchg
cmpsl
dec
enter
into
xorb
pushf
popa
xchg
pop
mov
xchg
imul
loopne
cmp
sub
and
mov
mov
into
adcb
mov
cld
xchg
jnp
add
repz
out
adc
rcrl
and
jne
dec
stos
outsb
or
ret
adc
mov
dec
in
pop
fbld
aad
addr16
sbb
adc
xchg
push
mov
mov
jns
into
sub
jno
lret
fmul
adc
jmp
sbb
lock
outsb
data16
xorb
lret
movups
stc
mov
scas
fwait
xchg
mov
xchg
fs
out
mov
mov
add
scas
push
shlb
mov
mov
jbe
es
inc
pop
jnp
pop
es
xchg
leave
and
pop
lods
cmpb
insb
ljmp
add
pop
cmpsl
lahf
add
ds
jl
or
mov
push
jo
jmp
mov
jo
xchg
pop
jae
sbb
cmp
cmp
lock
or
test
push
bound
jl
fstps
fisubs
mov
adc
lock
imul
inc
stos
sbb
fcom
cmp
cltd
jmp
cmp
call
test
nop
test
rcrb
mov
cltd
push
push
pop
lea
add
pop
mov
test
int3
push
push
pushf
cmp
jno
pop
or
test
jl
cwtl
lret
pop
repz
mov
addr16
lcall
popf
cmp
mov
mov
je
sub
pushf
mov
mov
adc
lcall
mov
lds
inc
jnp
jg
push
push
ss
iret
or
jne
mov
push
enter
pop
xor
ljmp
adc
mov
or
mov
add
movsb
test
mov
std
int3
and
mov
pop
lods
push
sbb
enter
loopne
aaa
lret
ret
dec
test
cwtl
xor
fistpl
adc
aas
sarl
je
and
ss
mov
jbe
or
xchg
sbb
rcrb
int
dec
xor
mov
pop
sbb
movsb
add
aad
inc
adc
add
repnz
cmpb
pop
mov
xchg
out
lea
daa
call
sbb
jo
cltd
shll
adc
mov
outsb
adc
add
imul
mov
push
test
icebp
xchg
call
mov
pop
jae
rcrb
xor
aam
xor
jnp
mov
sbb
xchg
push
mov
arpl
cmc
pop
call
repnz
loop
xchg
sub
mov
mov
nop
jle
stos
cmp
pop
mov
cmpsl
mov
mov
test
imul
cmp
mov
in
in
jne
dec
cmpsb
xor
inc
mov
cmp
fwait
enter
scas
shrl
xor
outsl
leave
insb
aaa
sbb
jns
jg
int
xchg
push
cs
jmp
jb
shrl
ret
data16
nop
mov
cmp
outsl
shlb
daa
test
iret
pop
pop
sti
insl
cmpsb
dec
push
hlt
mov
or
sub
mov
jmp
sbb
lcall
pop
jb
lea
mov
insb
jae
and
sub
push
into
push
ljmp
insb
lret
popf
mov
push
cmpsb
pusha
fcmovbe
in
xor
cltd
cmpsl
cs
ds
popa
stos
push
lods
inc
pop
pop
jp
imul
add
dec
int3
lods
clc
adc
mov
sbb
push
data16
xchg
mov
add
pushl
mov
mov
cmp
or
add
push
xor
leave
loope
in
fwait
add
out
js
lret
scas
lret
leave
add
xchg
icebp
aad
and
jne
repz
jecxz
xor
mov
out
jecxz
lcall
andl
sbb
xor
call
sub
sub
loope
pushf
mov
cwtl
iret
ret
add
pop
adc
jecxz
xchg
or
xchg
movsb
outsl
notb
dec
mov
xchg
repz
ljmp
jnp
fistpll
mov
fcoms
adc
push
or
stos
mov
adc
and
xchg
cmp
xor
dec
repnz
aas
xchg
stos
mov
leave
jno
es
xor
mov
dec
ret
sbb
repnz
sbb
insl
pop
rcr
sub
rolb
mov
xor
repnz
xchg
mov
and
mov
es
mov
fmull
ret
icebp
or
ror
pop
sbbb
pusha
jno
jb
addr16
leave
add
sub
aad
xor
cld
add
mov
flds
es
jbe
push
es
push
push
popa
jb
pop
repnz
out
pop
sbb
adc
loopne
pop
subl
insl
jmp
dec
sbb
lret
jb
insl
ret
pop
xchg
insb
xchg
inc
adc
test
out
add
pop
sbb
pop
aad
mov
fistpl
aad
nop
inc
sahf
out
xchg
adc
xchg
addr16
aaa
fbld
adcb
ja
out
adc
mov
lds
lcall
or
add
std
js
icebp
mov
dec
fs
pusha
fs
nop
sbb
dec
in
dec
sub
loope
mov
int
pop
shlb
gs
adc
inc
mov
xor
rcrb
inc
outsb
lock
arpl
mov
inc
and
mov
adc
lds
jbe
das
ret
adc
mov
lcall
mov
cmp
sub
addr16
push
stos
lock
sbb
add
dec
xchg
out
xor
xor
mov
dec
shlb
pop
gs
cmp
stc
shlb
leave
mov
repz
dec
xchg
jecxz
mov
sbb
lea
ds
arpl
test
mov
jnp
sub
shrb
test
pop
push
jl
jne
lds
mov
pop
mov
int
nop
and
cmp
dec
je
dec
test
lcall
cltd
fsts
dec
xchg
mov
add
js
adc
aas
js
loope
fnop
sub
cmp
das
xchg
xor
xchg
sti
sub
push
imul
inc
add
push
sub
jge
jne
mov
ficomps
repz
lret
ret
jno
cmp
cltd
adc
adc
xchg
jp
mov
dec
or
stos
cmp
xchg
and
xlat
fsubrs
mov
cmpsb
pop
in
rcrl
push
daa
sub
xor
out
popf
mov
cmp
pop
jge
rclb
enter
je
xchg
outsb
xchg
outsl
loopne
mov
in
push
jecxz
test
push
mov
dec
lcall
add
int3
mov
ja
dec
fcmovnbe
fdivrs
ss
std
adc
mov
data16
push
inc
fisttpll
jbe
addr16
jne
testl
outsl
je
or
repnz
scas
or
ss
add
inc
ret
int3
xchg
adc
imul
in
shr
pop
pop
cmpsl
stos
out
pop
dec
pop
sub
jnp
mov
aad
xchg
inc
aam
in
or
and
imul
push
or
arpl
cmp
and
add
inc
in
enter
and
jo
cmp
or
pop
mov
jnp
or
mov
pusha
pop
es
hlt
push
cmp
or
lods
out
insb
sti
xchg
push
push
dec
pop
push
ljmp
or
xchg
adcl
stos
sbb
fldt
push
and
sub
cwtl
insl
and
add
stos
adc
in
stc
sbb
stos
mov
rcr
icebp
cmp
imul
xchg
push
and
inc
mov
xor
cmp
jmp
mov
outsb
sub
and
inc
popa
or
test
subb
mov
jae
inc
fildl
inc
or
in
or
pop
jmp
test
and
dec
cmp
test
cmp
outsl
sahf
mov
cmc
setnp
mov
das
xchg
das
loope
ret
push
jb
xor
aam
jnp
dec
les
adc
fwait
test
cmpsb
jb
fstpt
pop
and
testb
leave
fs
adc
push
in
and
mov
lods
dec
xchg
adc
ljmp
inc
enter
das
mov
cmp
iret
js
pusha
shll
push
std
shl
stos
outsb
or
clc
jp
pop
mov
cmp
cltd
pop
xchg
popf
jmp
and
xor
jns
mulb
cmp
divb
in
or
addr16
shlb
fmulp
push
jo
inc
xor
inc
insl
mov
setg
or
or
sbb
std
imul
mov
cmp
mov
shl
movsl
xchg
jno
clc
mov
jnp
and
loop
add
decb
push
and
and
pop
adc
out
imul
fwait
jb
mov
or
cmpsl
mov
xchg
test
inc
cmp
add
loopne
mov
mov
hlt
xchg
xchg
gs
popa
dec
lcall
xchg
mov
inc
sub
mov
xchg
pusha
call
add
incb
das
and
adc
add
je
mov
mov
sub
stc
adc
sub
addr16
mov
shlb
jmp
jmp
or
std
pop
popa
shll
lock
lret
shll
shl
jno
sub
inc
mov
xlat
into
pop
cmp
mov
fisubrs
lods
call
push
out
and
imulb
aam
adc
arpl
scas
xor
jnp
or
pop
pop
mov
daa
cli
shll
out
dec
ljmp
add
xchg
out
jb
sbb
and
cs
cmc
jmp
sti
mov
inc
movsb
pop
fsubl
or
fwait
add
incb
pop
jae
fisttpl
std
inc
andb
xchg
ror
in
lds
pop
add
pop
imul
or
jmp
int
xchg
or
movsl
adc
int3
or
mov
push
rcrb
data16
cwtl
jp
daa
pop
fbstp
rorl
dec
movsl
je
sbb
ljmp
or
add
cmpsl
mov
aad
push
sbb
adc
popa
and
sti
dec
add
out
jae
mov
jmp
notb
push
mov
or
cmp
mov
cmc
in
sbb
sub
pop
sbb
repnz
in
out
es
dec
mov
mov
rcl
mov
push
push
rcrb
jl
out
jmp
sub
and
leave
xchg
and
sahf
xor
lahf
pop
test
and
fisttpll
insl
dec
cmp
inc
mov
test
push
mov
cmp
aas
lods
shlb
adc
fs
cmp
flds
cld
add
mov
mov
lret
dec
in
popa
jge,pt
test
mov
insb
popa
xor
cmpb
pop
iret
adc
sub
and
sbb
sbb
inc
xor
sub
dec
nop
push
pop
pop
and
fldenv
lahf
mov
pop
pop
inc
push
clc
sbb
sub
xchg
std
pusha
cmp
mov
dec
jge
out
addr16
das
push
lods
insl
lds
cmpsb
in
jmp
sbb
jno
mov
sbb
xor
mov
mov
push
xchg
push
out
cmp
dec
sub
test
clc
push
iret
jg
movsb
lret
push
in
xchg
xor
add
pop
inc
mov
cmp
dec
add
jbe
psrlw
lock
mov
movsb
xor
lcall
jl
xchg
push
rol
jbe
add
add
cmpsl
push
push
dec
jg
jnp
test
jno
test
pop
jg
push
mov
dec
lods
cmpsb
lret
adc
es
jecxz
xchg
dec
mov
jmp
sahf
and
filds
adc
and
test
jg
and
lock
push
dec
cmpsb
push
inc
push
sbb
fists
lock
dec
test
mov
call
xchg
cmpl
push
inc
add
ja
scas
jo
mov
inc
aaa
nop
out
adc
pop
lret
dec
sub
xchg
mov
dec
push
outsb
insb
inc
stos
ja
bnd
xchg
dec
int
mov
aas
aas
cwtl
lods
test
jae
sarb
aaa
es
fimuls
out
sarb
xor
xchg
sbb
es
loope
inc
cmpsb
pop
lahf
shlb
das
cmp
dec
push
cmp
cmp
das
mov
out
push
jbe
sbb
sub
loopne
or
fldenv
popa
cmp
and
xchg
pop
rclb
xchg
jecxz
into
js
ss
imul
mov
xchg
shl
lret
jns
call
arpl
shlb
push
xor
outsl
stc
rcrl
pop
in
mov
aam
bound
fucomi
nop
inc
dec
push
test
les
divl
mov
mov
imul
sub
pop
out
loop
arpl
cs
punpckhwd
cmp
sub
sub
mov
mov
lods
std
fwait
ljmp
push
and
daa
sub
jo
xchg
jns
push
adc
fldcw
sbb
scas
mov
dec
pop
fildl
and
push
sahf
imul
jle
and
loopne
inc
cs
sub
das
cwtl
imul
cmc
or
shlb
xchg
or
into
mov
out
dec
ja
movsb
test
inc
les
jl
stos
push
adc
pushf
les
les
repnz
out
cwtl
arpl
loop
push
push
xadd
ja
or
and
pop
icebp
cltd
and
xchg
xchg
lock
or
cmp
xchg
addl
cs
inc
inc
add
shrb
fwait
and
int
je
xor
pop
jae
sub
nop
scas
in
add
inc
test
inc
hlt
and
iret
pop
inc
add
leave
jno
iret
push
cltd
or
data16
lods
sti
xor
dec
leave
or
stc
mov
dec
add
and
and
fs
loope
pop
cs
inc
fsub
jns
push
inc
movsb
ret
xchg
mov
xchg
adc
mov
or
mov
mov
dec
pop
xchg
mov
imul
lcall
movsl
jle
jecxz
or
call
pop
jnp
or
pop
fcmovnbe
push
xor
mov
divl
push
insl
pop
insb
cmp
imul
popa
mov
add
mov
pop
adc
into
aas
jnp
cmp
iret
test
or
sbb
and
int3
xchg
push
js
iret
or
int
aaa
les
push
fnstenv
inc
add
stos
push
stos
enter
cmpsl
xchg
add
mov
jbe
popa
cwtl
in
ljmp
dec
mov
add
scas
call
hlt
sub
shll
adc
les
jmp
adc
scas
jge
xchg
pushf
dec
cmp
stos
insb
leave
fstl
ds
adc
mov
clc
and
push
in
fcomp
mov
decl
cmp
fidivs
cmp
cmpsb
mov
jge
add
fists
out
dec
add
cmp
xor
aaa
out
push
mov
repz
repnz
mov
sbb
push
push
sbb
popa
mov
out
cmp
dec
add
xor
mov
addr16
shl
mov
and
push
xchg
jns
mov
data16
ror
out
into
cwtl
dec
sub
je
inc
arpl
jbe
add
jno
inc
mov
ret
lods
fmull
aad
jle
in
hlt
cli
out
jns
fs
cmpsb
inc
jae
jne
sti
push
int3
jae
aaa
dec
pop
ds
test
sbb
int
or
sti
adc
shrl
or
and
inc
lods
sbb
dec
push
mov
test
pop
inc
lahf
dec
sbb
loop
cwtl
enter
lods
mov
sti
mov
xchg
cmpsb
int
or
dec
int3
movsb
scas
arpl
mov
loopne
mov
sub
ja
in
pop
add
mov
jne
pop
sbb
or
std
and
pushf
int3
loope
mov
leave
outsl
add
ficomps
gs
repnz
jbe
dec
bound
cmp
push
repnz
mov
push
scas
lds
lahf
arpl
cmp
gs
fstpl
jle
lods
fildll
cmc
out
negl
mov
ficomps
ficoml
mov
in
or
and
and
and
cli
xor
pcmpgtd
cwtl
xor
int
or
lods
and
repnz
int
dec
mov
xor
sub
aas
xchg
lcall
xchg
scas
xchg
jnp
push
xchg
loop
mov
inc
or
or
pop
test
pop
adc
push
ret
call
out
xchg
pop
mov
cli
fwait
and
push
shll
filds
cmp
movsl
add
inc
in
icebp
int
xchg
das
cmpsb
adc
add
shrb
mov
fiaddl
inc
into
fbstp
js
insl
fs
addr16
lea
push
ds
push
inc
inc
adc
xchg
and
cmp
or
dec
xchg
ret
pop
cld
sub
pop
dec
mov
test
sub
call
clc
sbb
mov
out
fistpll
or
jge
sub
sbb
jnp
add
jl
cli
mov
ret
dec
insb
xchg
jnp
inc
test
cmp
call
pop
sub
adc
inc
mov
pop
jg
inc
mov
jg
xchg
loope
movsl
xchg
out
fisubs
out
inc
mov
idivl
loopne
gs
repnz
ja
fisttpll
push
scas
scas
sarb
mov
pusha
push
jmp
sahf
and
sbb
cli
jmp
out
inc
pop
div
ljmp
scas
mov
sub
les
rclb
ss
mov
mov
adc
mov
mov
lock
mov
cmp
mov
jne
adc
imul
es
daa
rorl
test
movsl
pop
jle
push
sub
int3
popa
out
xor
xor
push
inc
add
sahf
fldenv
adc
jbe
xorl
mov
in
mov
jb
pop
sahf
sub
push
push
push
insl
ljmp
cwtl
test
int3
adc
test
iret
clc
inc
test
int3
outsb
push
sbb
test
pop
xrelease
dec
je
fcmove
push
scas
int
outsl
pop
popa
sub
add
jb
lahf
ret
fmuls
das
sbb
fiaddl
ss
shr
push
mov
jbe
or
and
in
adc
and
or
movb
mov
mov
insb
in
push
es
das
std
shl
push
inc
sbb
pop
shr
adc
divb
mov
ds
and
int
xchg
or
ret
popa
andb
outsb
iret
xorb
lds
or
testb
mov
and
push
jge
mov
add
adc
lret
and
outsb
aas
and
jl
sahf
shll
ret
fidivrl
cmp
stos
sbb
add
fdivr
jno
sub
xor
adc
mov
inc
fimull
mov
inc
or
in
lods
js
addr16
lret
dec
mov
inc
mov
les
mov
shlb
pusha
inc
add
mov
xchg
sbb
sbb
sub
sbb
nop
sbb
jl
ds
jnp
sbb
flds
push
push
xor
pop
stos
cs
repz
inc
es
int3
test
mov
in
lret
jnp
sub
out
mov
jbe
dec
and
or
inc
fldcw
mov
xchg
jb
shr
mov
push
les
addr16
pusha
and
mulb
fstpl
and
das
and
mov
and
fstpt
xchg
mov
cmp
shlb
mov
dec
mov
stc
lcall
and
and
outsl
cs
test
add
add
or
add
mov
cli
jns
lods
mov
filds
fisubrs
cmp
test
fmull
mov
fnstenv
jge
mov
daa
pop
in
aaa
repz
enter
push
int3
add
out
push
and
or
shl
into
icebp
jbe
cli
dec
cmp
dec
loopne
mov
or
int3
xchg
popa
push
lret
push
jns
pop
js
rcrb
dec
mov
dec
enter
sub
daa
gs
iret
imul
testl
popa
add
daa
repnz
les
sub
fidivl
imul
clc
ds
xor
add
aad
mov
jecxz
sub
and
fistpll
aam
cld
mov
pop
aad
jbe
aas
xchg
ffreep
aas
in
pushf
mov
jecxz
andl
pop
rorb
das
jg
iret
test
in
ret
ljmp
imul
outsb
or
outsl
jle
xchg
sbb
and
into
or
push
outsb
popa
test
xchg
out
inc
jl
push
pop
std
sahf
sbb
adc
hlt
pop
sub
sbb
sub
mov
sub
add
addb
xchg
rcrl
xchg
push
faddl
push
cmp
int3
inc
shl
sub
mov
ret
xchg
push
jmp
dec
fadd
push
mov
sahf
or
rep
push
mov
adc
lret
mov
cld
add
gs
ss
fwait
shl
add
xchg
mov
inc
dec
inc
in
out
fsubrs
push
push
and
jp
je
mov
and
cmpsb
push
cltd
in
xchg
pushf
je
lahf
test
rcll
lahf
sbb
or
inc
loope
lds
cwtl
test
and
ds
inc
xor
adc
inc
cli
sub
call
lret
jae
jb
jne
mov
sbbb
lds
mov
int3
push
loope
mov
ret
mov
or
and
push
in
jp
leave
pushf
das
xor
lods
mov
dec
inc
aas
push
cmpsb
lods
test
push
and
out
std
cmp
jno
add
or
leave
in
mov
push
push
dec
mov
push
cmc
loop
fmul
sbb
sub
popa
inc
dec
mov
sub
pop
enter
inc
sbb
cmp
and
push
sbb
mov
stc
mov
pop
cmp
mov
outsl
out
mov
std
rcrb
jbe
xor
adc
push
add
ds
int
dec
clc
fs
testl
or
and
fnstcw
bound
test
xor
inc
jl
xor
adc
mov
mov
lcall
pop
jo
fnstcw
mov
lcall
sbbl
in
int
jecxz
stos
or
adc
mov
mov
fsin
cmp
fs
push
inc
mov
imul
sti
es
jmp
pop
popa
push
lock
mov
and
and
aas
xchg
xchg
mov
js
xchg
or
and
mov
pop
and
ljmp
aaa
icebp
add
fisttpl
and
cmp
shrb
out
sahf
jg
in
jnp
fcmovne
dec
aas
test
in
mov
jp
addl
xchg
rcrb
negb
adc
je
fwait
mov
pop
dec
add
xchg
icebp
es
mov
scas
and
cmc
sub
pushf
xchg
and
jl
cld
ljmp
adc
mov
pusha
addl
in
test
dec
shll
ret
int
cmp
push
and
mov
sub
mov
sub
popf
xchg
ljmp
cmp
stos
inc
xchg
loope
sub
inc
adc
decb
dec
pop
mov
jnp
cmc
shrb
ss
push
les
sub
push
aad
cwtl
and
mov
js
push
pop
dec
jge
fiaddl
and
push
out
pop
jae
cmp
inc
dec
std
sbb
fdivp
in
fcmovnu
sti
mov
sbb
fstl
xchg
rcrb
in
jmp
mov
and
jp
leave
ljmp
sbb
cmp
cmp
loopne
lods
mov
insb
add
add
mov
xlat
sarb
jo
ds
cmp
repnz
mov
cmpl
popa
data16
insl
add
in
push
insl
xchg
leave
lret
in
scas
sub
gs
inc
cltd
sub
xor
subb
sub
mov
jle
pushf
and
xchg
andl
ja
loop
pop
sbb
fstps
out
add
jl
push
call
push
scas
jl
fsubs
cli
add
lock
fstpl
popa
mov
push
cli
and
or
das
sub
xchg
divb
sti
iret
int3
rclb
push
into
dec
les
ss
rolb
cmp
repz
add
xchg
outsb
push
push
mov
sti
repnz
enter
inc
mov
adc
icebp
jb
jl
adc
les
insb
mov
mov
inc
fidivrs
jae
pusha
mov
enter
dec
and
pop
shlb
repz
in
rorb
movsl
roll
xchg
jle
xor
or
mull
jb
sahf
mov
adc
add
fcompl
pop
ret
push
test
pop
in
xorl
mov
xchg
leave
ljmp
lods
in
push
push
cmp
mov
stc
inc
popa
pop
push
jg
cmp
mov
dec
scas
jo
dec
int
push
dec
xor
mov
cltd
insb
or
imul
inc
movsb
lret
mov
cmp
movsb
pop
in
mov
xchg
pop
test
les
mov
lcall
aad
aad
jno
inc
add
pop
xchg
adc
push
outsl
pusha
aam
push
cld
xor
jl
mov
add
jnp
lods
xor
xchg
and
sub
popa
cmp
movsl
add
fisttps
lret
xor
leave
sbb
sub
xchg
lock
imul
lcall
push
push
inc
dec
push
out
push
inc
xor
jl
sub
cmp
pop
push
dec
and
cmc
push
inc
sbb
lcall
arpl
lea
mov
pop
ss
rorl
data16
jl
sbb
push
mov
jmp
data16
out
push
adcl
push
pop
stos
push
adc
and
adc
out
add
mov
ret
es
aaa
add
jmp
fmuls
xchg
mov
mov
xchg
out
mov
lcall
cmp
les
jbe
pop
adcl
add
lods
pop
aaa
fimull
stos
adc
and
or
imul
mov
fstps
xchg
int3
call
sbb
and
pushf
mov
addr16
mov
adc
ja
cwtl
or
les
fld
cltd
or
lcall
xchg
jne
pop
imul
dec
and
cmp
out
fcomip
pop
inc
jno
adcb
ja
hlt
cmpsl
pop
and
sti
inc
pop
pop
pop
pop
mov
roll
cwtl
punpckhdq
xor
push
fnstenv
or
insb
cli
cmp
mov
movsb
adc
push
mov
fadds
ss
test
stos
pop
sarb
arpl
out
mov
and
adc
stos
add
out
and
jge
cmp
add
test
xchg
fisubrl
xor
pushf
mov
xchg
clc
std
cmp
mov
fs
xorb
loope
stos
mov
loop
add
aad
insb
sbb
jg
xchg
cmp
xchg
in
mov
mov
repz
lods
je
xor
dec
ja
add
mov
pop
sbb
add
repnz
lods
lea
or
dec
push
test
test
fimull
push
adc
scas
pusha
jge
mov
mov
sbb
xchg
aam
or
pop
pusha
or
dec
sub
fisubs
push
add
fsubl
aaa
filds
push
jg
jl
enter
cmp
mov
gs
mov
pop
push
sarl
sbb
inc
daa
fisubrs
jg
cmc
push
or
or
inc
jo
xor
inc
fs
clc
jae
pop
lret
inc
mov
jno
pop
dec
andl
in
and
and
push
js
dec
out
movsl
cmp
mov
xchg
iret
bound
xor
popf
daa
fsts
fists
nop
push
cmp
clc
add
arpl
and
dec
pop
rclb
jle
not
sbb
lea
or
xchg
aam
mov
pop
ss
add
xchg
mov
pop
pop
scas
lock
pop
add
enter
adc
hlt
test
loop
adc
testb
xor
fs
roll
movsl
pop
cmpsb
hlt
imul
pop
push
dec
sub
test
pop
mov
mov
inc
or
add
in
sahf
mov
sahf
or
rcrl
xor
js
lea
into
lahf
xor
sbb
ja
mov
mov
enter
adc
lahf
pop
test
arpl
inc
and
pop
ljmp
out
jns
sbb
xor
test
mov
jge
cmp
loope
jb
jb
scas
bound
cmp
sahf
xchg
mov
adc
adc
xor
mov
das
xlat
push
xchg
cmp
jl
add
and
lds
mul
mov
push
push
sbb
fwait
cmp
cmp
jbe
icebp
in
mov
or
mov
and
out
bound
xchg
xchg
lds
push
iret
dec
xchg
sub
jmp
push
imul
add
mov
cmp
cmp
insl
xchg
xchg
inc
pop
pushf
movsl
and
jne
movsb
cmp
mov
push
adc
std
mov
addr16
push
xorl
fsubrs
pop
bound
iret
xor
and
and
sarb
shlb
and
ss
adc
aam
xchg
mov
in
xchg
xor
pop
cs
arpl
push
lds
movsb
das
cs
aam
dec
ret
roll
iret
lcall
test
sti
in
js
movsl
mov
gs
add
js
sub
scas
sub
fnstenv
sbbb
jp
sub
jmp
and
mov
std
pusha
sbb
shlb
ljmp
dec
pop
xor
sbb
push
adc
cli
leave
mov
xor
inc
or
sbb
and
sbb
push
out
push
sahf
sahf
push
xor
stos
jmp
aam
jmp
cmp
leave
mov
adc
out
adc
enter
test
pop
cmp
shrb
movsb
vprotw
iret
sub
lods
cmp
pop
xor
fnsave
and
scas
pop
imul
std
or
sub
sub
sbb
incl
mov
and
cmpsb
fsubp
loopne
dec
jo
iret
mov
mov
pushf
sub
push
jne
sbb
dec
sub
mov
jge
sub
xchg
push
das
je
jge
test
pop
xchg
lds
fbld
jp
xor
or
or
mov
icebp
adc
xchg
jno
daa
mov
int3
sbb
cltd
add
jecxz
lahf
xlat
xchg
push
dec
mov
int3
insl
mov
xor
lea
mov
lret
push
mov
scas
mov
and
aas
xchg
mov
lods
imul
sarl
pop
jno
pop
mov
mov
lds
sti
dec
lahf
inc
data16
icebp
dec
inc
jns
sub
aas
jg
mov
or
add
and
dec
cltd
dec
cmp
mov
insl
adc
jecxz
cli
push
pusha
loopne
jmp
push
or
pop
cmp
mov
repz
ja
add
cmp
push
aaa
xchg
pop
lods
insb
mov
cmp
lock
inc
pusha
add
push
inc
and
dec
xchg
lods
xor
enter
pushf
shlb
xchg
push
push
mov
sahf
ss
enter
sbb
inc
rcrb
clc
repz
mov
mov
cwtl
mov
push
and
lea
out
push
mov
xchg
xchg
rcrl
jns
lods
out
add
mov
push
xchg
xor
add
jmp
iret
jae
jg
insb
loope
sbb
sahf
add
lds
xor
xor
pop
pop
sbb
xor
sub
cwtl
addl
popa
cs
js
mov
outsb
jecxz
jns
pushf
xchg
punpckhbw
dec
lods
andb
push
mov
push
add
bound
cmpl
and
repz
mul
mov
sahf
xchg
call
repz
test
ret
inc
pop
or
pop
loopne
leave
xchg
sub
and
hlt
mov
pop
cmp
push
xor
divl
aaa
outsb
lea
pushf
adc
ret
pop
jne
jp
mov
std
cli
loope
xchg
fwait
notb
inc
stc
outsl
dec
mov
or
mov
add
inc
sbb
cmpsl
push
arpl
dec
out
xlat
sbbl
xchg
stc
cs
rclb
add
addr16
adc
lods
inc
aaa
test
data16
xor
and
fistpll
mov
adc
mov
outsb
lea
pushf
ss
push
mov
stc
cmp
cmp
test
mov
jge
inc
push
dec
mov
iret
subb
mov
cmp
cmp
mov
mov
mov
cli
mov
mov
cmc
inc
mov
call
mul
pop
ja
mov
cld
mov
fcmovbe
add
movsl
or
dec
cli
test
pop
dec
push
lret
imul
sub
push
add
xchg
xor
stc
ljmp
fdivrl
inc
xchg
mov
pop
push
aaa
in
xchg
mov
cli
cmp
xor
add
leave
sbb
adc
add
dec
inc
aam
pop
dec
xchg
pop
push
outsb
mov
repnz
jo
out
xor
cld
pop
dec
pusha
mov
add
das
fldenv
add
jnp
mov
or
in
cltd
out
sub
push
and
xor
pop
lret
vpaddd
sub
push
pop
push
cmp
jbe
adc
pop
sub
out
divb
les
jae
push
test
das
leave
imul
jno
cmp
ja
dec
fisttps
das
outsb
add
jns
enter
adc
push
decb
out
test
xchg
decl
adc
sbb
inc
sbb
ficomps
dec
push
mov
enter
or
pop
cwtl
imul
jne
cmp
test
movsl
adc
or
pop
lret
jge
add
mov
scas
or
push
or
mov
cltd
fldt
cmp
xchg
mov
imul
pop
fwait
in
jecxz
cmpsb
mov
mov
rcr
sbb
mov
xor
fwait
xlat
rolb
jno
cmp
push
sbb
bound
pop
decb
push
sub
push
mov
cmc
loope
lcall
cmp
into
cmc
jae
xchg
sub
mov
xchg
sub
cmp
lock
xor
cmp
dec
data16
or
inc
stc
lods
dec
adc
adc
nop
nop
mov
test
in
jo
test
nop
lea
in
in
pusha
in
in
pop
cli
cmp
mov
ds
mov
icebp
push
fwait
pop
ficoms
in
cmp
out
lea
lds
movsl
cli
xor
enter
sbb
ficoml
adc
das
adc
lret
mov
xor
xor
out
xchg
rorl
aas
pushf
sbbl
insb
sub
xchg
jo
test
popf
cmc
xor
adcb
xchg
lcall
pop
aad
lcall
lds
lods
sub
stos
pusha
inc
movsb
aam
test
xchg
jecxz
aas
int
jmp
movsb
outsl
xchg
jge
rol
in
pop
cmpb
xchg
pop
jl
stos
ret
mov
push
and
xchg
adc
test
adc
jb
mov
inc
xchg
sub
pop
mov
push
adc
aas
xor
sbb
nop
xor
outsb
jge
imul
mov
test
jne
cmp
cltd
out
mov
xchg
and
push
sbb
sbb
shl
and
mov
cltd
mov
lret
aaa
cmp
outsl
scas
cmp
mov
push
je
xchg
cli
subb
push
mov
mov
cmpsl
lock
mov
int
scas
fistl
mov
int
popf
jo
pop
mov
into
repnz
add
mov
and
sbb
and
xchg
cld
sbb
dec
sub
scas
movsb
jns
sbbb
sub
and
xchg
imul
xchg
pushf
xchg
lret
filds
rclb
je
out
in
lcall
dec
cmpsl
cli
pop
sbb
rcl
mov
adc
rol
fnsave
mov
and
mull
lcall
adc
sti
popa
cmpsb
lahf
mov
ret
enter
pop
aas
mov
enter
sbb
mov
mov
leave
mov
xchg
pusha
xlat
push
cli
dec
inc
jno
mov
lahf
popf
icebp
and
subb
icebp
mov
out
dec
pusha
mov
call
sub
add
mov
divb
xchg
jp
frstor
aaa
jno
cld
repnz
mov
icebp
adc
es
popf
imul
mov
dec
sbb
inc
nop
xchg
mov
cmpsb
jno
insl
in
dec
jnp
lahf
das
addr16
mov
das
jae
jmp
in
dec
mov
push
test
iret
and
rclb
xor
dec
push
loop
fistpll
mov
jp
mov
ljmp
jge
lods
lret
data16
push
mov
iret
out
not
addr16
inc
jecxz
mov
test
xor
cld
stos
jmp
gs
loope,pt
push
ja
xorb
push
mov
cmp
sbb
insb
das
xor
mov
test
inc
xchg
icebp
mov
je
xchg
lcall
add
in
mov
add
outsb
mov
testl
pop
pop
adc
arpl
movsl
or
jge
scas
sbbb
xchg
lret
rcrb
push
fsubrs
clc
aam
cmc
in
sub
xlat
mov
fimull
jecxz
ret
and
out
in
sub
pop
mov
xlat
lock
mov
sub
sub
mov
pop
and
dec
xchg
popf
scas
dec
inc
sbb
mov
push
enter
or
stos
out
mov
leave
fisubl
fldl
jns
inc
leave
cmp
adc
lret
pushf
add
push
cld
mov
sub
fsubl
and
push
js
xchg
call
leave
xor
loopne
pop
aam
fstpl
clts
mov
popf
idivl
test
sbb
and
pop
dec
jp
push
or
xchg
xor
cmp
mov
cmp
fldcw
inc
cltd
or
sahf
inc
push
imul
icebp
mov
and
jnp
mov
jp
xor
test
fidivrs
cmpsb
ret
lret
addl
insl
mov
mov
loop
push
pop
push
xchg
adc
inc
or
push
cmpsl
pop
cli
pop
fldt
sbb
cmp
mov
push
or
dec
xlat
adc
ret
in
into
jmp
cmpsl
push
out
test
loop
loope
and
dec
nop
sbb
daa
sub
cs
push
cmp
cltd
adc
bound
jg
mov
cli
cmp
pushf
inc
int3
js
pop
aam
dec
leave
xchg
xchg
js
mov
fidivrs
ficoms
push
adc
sahf
pop
ss
and
and
fcoms
adc
or
and
mov
push
push
pop
fdivrs
fistpll
jge
loop
movsb
imul
push
rclb
mov
mov
xlat
shll
ljmp
mov
sbb
xchg
push
or
into
in
lahf
negb
subb
movsb
mov
rcrb
test
xor
arpl
test
icebp
ficomps
sub
rcrl
mov
fiaddl
shrb
adcl
int3
pop
call
pop
test
or
cs
jnp
jge
popf
ja
mov
ret
push
daa
pushf
xchg
int
es
decb
std
sbb
outsb
iret
test
sbb
fisubl
or
mov
sahf
lahf
xchg
add
mov
fstpt
mov
xchg
outsl
inc
in
push
scas
call
dec
mov
mov
out
pushf
mov
cmp
lcall
push
in
inc
jb
test
gs
insb
stos
jecxz
sarb
push
xor
jge
int
fisttpll
lret
xchg
and
and
adc
pop
cmp
or
cltd
pop
pusha
fstpt
loope
outsb
adc
jge
or
dec
adc
jg
movsl
cltd
cmpb
cmp
xchg
and
push
lods
movsb
test
inc
scas
ficoml
inc
sub
popa
jl
test
jns
outsb
into
gs
cld
jge
lret
add
mov
xor
mov
pop
pusha
push
mov
movsl
push
sub
sub
lock
push
push
int3
or
jo
adc
fbld
jne
scas
movsb
push
or
dec
mov
movsl
sub
push
and
inc
cmp
and
and
add
loopne
in
lahf
mov
mov
addr16
das
adc
repz
out
mov
sub
mov
xchg
sbb
push
pusha
mov
xchg
jnp
ret
xchg
xchg
dec
add
mov
cmp
lcall
jo
ret
push
les
push
dec
or
mov
cmp
into
xor
stos
cmpl
cmp
andl
adc
daa
xchg
out
call
std
nop
pop
dec
pop
push
cmp
in
sbb
std
pushf
cmpsb
mov
pop
mov
push
mov
bound
enter
out
xor
gs
xlat
dec
lock
sar
mov
popa
je
jnp
sbb
pop
into
jle
jp
push
fisttpl
aas
jl
dec
fdiv
pop
rol
cmp
hlt
mov
and
xor
or
fstp
dec
mov
mov
pop
jb
arpl
push
std
in
xchg
adc
push
jbe
popa
loope
pushf
mov
push
in
dec
jle
std
sub
sub
lds
leave
sarl
xchg
dec
and
loopne
jae
dec
mov
ret
and
rol
jecxz
dec
and
add
mov
push
mov
call
in
or
pop
sub
mov
push
and
gs
cld
stc
and
rcll
mov
dec
js
andb
lahf
inc
xor
js
adc
add
dec
inc
bound
nop
cmpsb
jae
inc
add
mov
in
dec
xchg
dec
pop
insl
aad
sub
aad
and
in
out
pop
outsb
push
jp
cmc
rcrl
sub
outsb
adc
xlat
fwait
or
jne
mov
and
lahf
adc
dec
sbb
jle
out
movsb
jge
and
int
icebp
movsb
jp
or
test
pop
out
mov
sbb
hlt
adc
pop
push
repnz
in
jecxz
in
inc
data16
mov
fnstsw
jae
test
push
pop
mov
pop
push
dec
xchg
jmp
jbe
mov
and
mov
jmp
adc
mov
cld
adc
lods
in
jle
add
pushf
dec
or
xchg
clc
xor
clc
cs
sub
jns
aam
mov
mov
aad
mov
std
lods
fistl
mov
xchg
out
push
jnp
and
push
shl
mov
ljmp
jns
out
aas
xlat
loopne
pop
pusha
xlat
xchg
cmp
dec
adc
mov
insl
aaa
sbb
dec
mov
in
sahf
out
jmp
arpl
rcr
cmp
add
push
jno
repnz
movsl
add
push
clc
pop
mov
movsb
mov
mov
fisubrs
jnp
ss
mov
cmp
aaa
mov
lcall
or
pop
jo
shlb
sub
lea
outsl
or
cmc
jbe
jmp
mov
frstor
incb
push
dec
sub
in
setle
das
fcmovne
imul
mov
pusha
dec
push
sbb
jecxz
sbb
inc
cmp
bound
xor
stos
ret
gs
sbb
mov
dec
addb
pop
imul
mov
jp
outsb
daa
shlb
jle
mov
pushl
inc
inc
fwait
pop
leave
sbb
jbe
adc
rorl
cmp
cmp
cmc
push
mov
out
adc
mov
and
lds
ds
ss
push
sbbl
mov
cmp
int3
mov
stos
mov
jns
int3
pop
loopne
mov
je
mov
movsb
popa
mov
rcll
notl
mov
pusha
decb
mov
mov
daa
popa
mov
jbe
cltd
int
push
mov
inc
and
mov
jnp
fstpt
mov
cld
inc
inc
add
cld
mov
or
sub
ss
ja
aas
jge
pusha
ret
ficoml
fsts
dec
test
shll
es
rorl
cs
scas
push
pop
les
sbb
and
out
stos
xchg
rcl
or
jne
cmp
ja
cmp
mov
xchg
sbb
sbb
rcr
push
scas
pop
andb
subb
add
inc
sbb
add
jns
dec
mov
ljmp
jb
out
adc
rcl
fnstenv
shrl
mov
or
sub
inc
imul
mov
mov
shlb
sbb
sub
mov
lods
aaa
lahf
mov
xchg
lods
adc
out
xor
mov
aaa
pop
ret
int
andl
mov
test
lret
xchg
lea
and
adc
dec
push
ljmp
add
sub
lret
jecxz
jb
cmp
xor
cmpsl
xchg
mov
mov
xor
inc
sti
out
pop
mov
push
sub
out
lea
leave
insl
dec
loopne
dec
jns
mov
scas
add
mov
adc
and
ret
icebp
xor
or
mov
pop
repz
loopne
fidivl
cmp
sub
fistps
out
jg
inc
jae
push
jg
sub
stc
push
std
inc
out
cwtl
push
mov
mov
lds
xchg
addr16
adc
loop
movsl
jno
sti
lcall
lods
leave
pushf
repnz
xchg
cs
test
std
les
test
iret
inc
lods
sti
mov
cmpsb
repnz
pop
std
cmp
cmp
imul
mov
pop
sbb
in
fmuls
push
fnstenv
sti
inc
mov
xor
insl
int
and
sub
loope
cltd
sbb
inc
lods
jo
dec
push
cmpsb
cmpb
sar
sub
les
xchg
fwait
scas
mov
mov
out
loopne
lods
xchg
or
push
and
imul
movsb
enter
sub
and
xor
jne
sbb
mov
add
push
cmpsl
out
aam
add
negl
mov
cmc
adc
adc
sbb
movsb
xorb
jno
mov
loopne
or
scas
out
adc
out
dec
mov
movb
push
in
aam
insb
leave
test
sub
mov
push
xchg
mov
in
bound
dec
pop
xor
stos
mov
adcb
xchg
pushf
xchg
push
inc
ret
mov
scas
add
mov
leave
lret
sar
pop
out
sub
or
or
jns
and
lock
fnsave
int3
add
mov
mov
dec
daa
jnp
ret
int3
pop
xor
xchg
dec
sti
mov
out
mov
push
cmp
ljmp
push
out
cmc
push
push
mov
cmp
inc
test
sbb
in
add
mov
mov
add
in
jl
add
cmp
inc
mov
jle
hlt
fadd
inc
lcall
stos
insb
mov
cltd
jae
movsb
and
cs
mov
icebp
rolb
pop
popf
repz
jecxz,pn
mov
dec
add
ror
fisttpll
pop
push
lret
stos
push
dec
repnz
push
rcrb
jb
jp
lea
lock
and
xor
cmp
sub
sub
adc
push
stos
mov
repnz
push
enter
stc
mov
mov
shll
sub
movsb
flds
pushf
pop
leave
mov
add
ret
icebp
mov
dec
lods
sub
inc
xchg
or
mov
sub
bound
ret
jb
loope
sbb
std
pop
or
out
scas
out
iret
iret
or
hlt
cmp
mov
xchg
sbb
xchg
test
fwait
fwait
cs
pusha
jg
mov
fnsave
stos
push
call
lods
dec
or
or
push
dec
push
lahf
ret
xchg
jae
insl
or
mov
aaa
fdivrs
mov
and
push
jo
push
cmpb
out
and
jl
jg
clc
std
pusha
shrl
xchg
lcall
jl
cld
ss
insl
ret
dec
imul
push
sarb
pushf
call
in
or
jmp
sbb
push
inc
into
testb
mov
pop
dec
lret
sub
adc
aad
mov
mov
cltd
xchg
adc
iret
xor
movsb
stos
mov
movsb
or
adc
cmp
mov
sub
cmp
mov
mov
xchg
cmp
and
mov
mov
sub
jmp
sti
lcall
push
jl
jmp
js
xor
pop
push
xor
cmp
insl
jmp
aad
jle
adc
cmp
add
mov
loopne
cmpsl
pushf
cltd
pop
cmpsb
xchg
lret
adc
stc
cli
test
cmp
push
xchg
dec
fsubl
sub
pushf
mov
lret
hlt
push
and
xchg
mov
or
xchg
dec
xor
cmp
call
sub
mov
loop
mov
pop
jge
xlat
or
sub
mov
inc
add
xor
std
cmp
jo
push
stos
int3
iret
push
jb
in
mov
aaa
sti
das
xorl
bound
data16
add
sbb
loope
mov
ret
jmp
jg
and
outsb
movsl
cmp
inc
push
std
outsb
lret
inc
xor
and
test
sti
mov
mov
dec
dec
pop
test
xor
bound
sti
or
std
repz
popa
fs
mov
fdivl
xor
jb
loopne
pushl
fsts
repz
pushl
adc
lds
mov
outsl
or
int3
ret
arpl
mov
mull
cmpsb
jbe
cmp
xchg
call
aad
lods
rcll
cld
out
add
loopne
ret
movsb
and
xchg
addr16
ljmp
nop
jnp
inc
mov
aad
rclb
xorl
xor
lahf
dec
fcomps
mov
fmull
aaa
jne
or
test
loop
addr16
repz
outsl
mov
and
adc
mov
lret
push
push
cld
mov
push
ds
lret
icebp
xchg
andl
scas
adc
jne
pop
cmp
ja
and
mulb
call
sub
scas
std
mov
mov
dec
sub
repz
dec
mov
ss
jmp
arpl
adc
cmp
int3
dec
push
repz
push
jo
adc
mov
in
push
cmpsl
rcr
call
je
mov
cwtl
sub
stos
in
je
stos
mov
insl
mov
in
push
sti
lcall
rdtsc
cmp
or
jg
ss
xorl
add
jo
jmp
xor
pextrw
ret
imul
xchg
sub
mov
divl
in
int3
and
into
jnp
sub
addr16
in
rcr
pusha
nop
inc
add
lcall
call
out
addb
sub
push
mov
pop
es
js
fcmove
fisubrs
jl
add
sbb
xor
inc
fnsave
ja
lret
add
cli
insl
in
dec
pop
lods
xchg
dec
add
stc
cmp
inc
mov
fs
test
fldt
dec
mov
andb
push
sub
xchg
ret
adc
andb
cmp
jl
jl
jg
imul
les
push
push
popa
adc
push
xchg
cmp
addr16
xor
scas
repnz
xlat
call
inc
scas
aad
mov
sbb
fadd
xor
mov
ret
mov
gs
sbb
mov
inc
fs
imul
lahf
movsl
lods
enter
mov
stc
inc
and
lcall
mov
mov
xchg
push
mov
jge
enter
xchg
popf
icebp
jg
push
or
fsincos
jg
in
pusha
cmpsb
mov
add
gs
pop
xchg
sub
xor
jecxz
into
lfs
loope
inc
in
and
or
inc
pushf
xchg
fiaddl
das
and
mov
aas
stc
mov
fisubrs
sbbb
clc
push
inc
mov
push
jmp
in
and
loop
sub
outsb
sbb
mov
mov
test
mov
pop
push
inc
cmpsb
add
bnd
stc
gs
sbb
xchg
xchg
push
addb
dec
cli
mov
cmpl
mov
xchg
push
call
dec
and
into
jp
nop
jp
sbb
enter
in
jnp
mov
cmp
sbb
jmp
mov
push
scas
and
xchg
inc
stc
mov
rcrl
int3
movsb
pop
jb
call
jns
clc
or
cmpsb
fsubr
push
jae
pop
pop
mov
xor
xor
jmp
xlat
mov
xchg
les
xor
push
adc
js
or
jl
mov
popw
push
push
cltd
test
insb
fsubl
add
lock
mov
mov
sbb
mov
sub
imul
jno
add
jg
push
enter
in
nop
mov
jge
mov
or
dec
mov
fildll
scas
mov
movsl
dec
testb
out
mov
mov
imul
stc
shr
out
and
je
cmpl
adc
jae
inc
imul
dec
xor
xor
mov
mul
jne
jnp
mov
lods
inc
jne
fwait
push
sbb
mov
inc
inc
lock
sub
jnp
cli
fwait
lds
or
push
pop
cmp
push
pop
cmpsl
in
jb
jbe
jecxz
dec
lret
popf
fmull
sahf
mov
cmc
bswap
push
sub
add
xor
mov
dec
stos
pusha
rclb
add
ficoml
lret
jnp
pop
jmp
push
and
das
mov
add
sbb
cwtl
add
mov
xor
bound
mov
sub
in
dec
rclb
int
dec
in
aaa
stc
ret
adc
jo
xchg
in
sub
dec
pop
out
sub
ret
lret
and
xchg
sub
iret
add
mov
rcrl
in
jbe
stos
jmp
dec
mov
add
sub
out
movb
mov
hlt
icebp
push
rcll
jg
adc
inc
daa
push
cmp
and
in
dec
in
lahf
ret
cmp
or
inc
je
flds
jp
daa
adc
rcr
leave
test
popf
in
sub
lcall
cmpsb
and
jecxz
or
iret
dec
movsb
and
outsb
movsb
dec
pop
pop
std
arpl
loope
xchg
mov
lcall
push
dec
imul
subl
mov
dec
call
insb
cmpsb
sbb
sub
pop
je
pop
inc
inc
lods
push
mov
dec
mov
lret
adc
in
xor
push
lock
xor
xor
jnp
sbb
test
test
movsb
out
sub
xchg
js
dec
or
cmp
push
push
lahf
insb
ret
mov
dec
lahf
mov
inc
syscall
push
push
lods
mov
daa
add
and
jbe
xor
leave
je
mov
std
addl
nop
repnz
dec
gs
lret
out
out
xor
fcmovb
jae
insl
mov
push
js
ss
inc
or
mov
sub
arpl
outsl
into
inc
incb
in
xchg
xchg
lods
outsb
xchg
pushf
movsl
hlt
cmp
cmp
out
xchg
ja
ds
add
mov
add
in
bound
test
test
pop
mov
or
push
adc
cmp
sbb
and
xor
call
pop
push
das
subl
stos
clc
mov
std
jg
mov
out
test
and
inc
dec
push
mov
fcoml
pop
leave
jmp
push
imul
xor
shll
sbb
pushf
loope
xor
sbb
int
lret
mov
mov
xchg
mov
add
jl
xor
test
sub
jns
lods
fldenv
add
push
xor
fidivrs
pop
xor
icebp
jo
ljmp
pop
test
push
iret
or
outsl
jmp
insl
imul
movsb
dec
fwait
xor
mov
mov
adc
fsts
or
mov
cmpsl
jmp
push
pop
xor
xor
addb
sub
dec
mov
out
aad
add
xlat
cmpsb
xor
inc
popa
and
cmpsl
rcl
cld
push
jmp
aam
dec
pop
subl
pop
push
mov
mov
cmp
dec
mov
pop
mov
stos
jge
xor
pop
lcall
cmpsb
pop
fninit
mov
loope
dec
and
in
in
cli
ret
or
cltd
push
stc
and
dec
dec
ss
testb
mov
int
sbb
sub
ret
out
cmpb
inc
mov
iret
data16
in
add
jo
pop
test
push
push
ret
cmp
insb
push
jne
cmp
inc
loope
and
push
lds
stc
jp
rorl
sbb
out
scas
cmp
adc
fistps
jp
daa
push
jle
inc
jo
icebp
movsl
inc
xchg
sahf
push
mov
sbb
xchg
push
add
mov
ja
and
sbb
imul
movsb
test
jns
fisubl
push
sbb
pop
cltd
inc
or
out
and
out
adc
sbb
adc
pop
add
ds
loop
push
inc
data16
xor
mov
cwtl
xor
out
lret
test
lods
cmpl
add
lea
je
xchg
sub
mov
mov
cmp
jno
push
js
lret
xchg
je
mov
repz
xor
and
jge
inc
xchg
mov
stc
outsb
rol
jno
and
add
rclb
adc
cltd
cs
push
dec
repnz
pusha
inc
sub
test
in
push
shlb
stos
rcr
imul
fucomip
push
adc
int3
jecxz
xor
jg
into
clc
and
cmpb
fisttpll
or
out
ret
add
movsb
mov
pop
jle
int3
push
fdivr
fdivp
hlt
into
out
dec
xor
and
mov
repz
ljmp
cwtl
or
mulb
sub
xorb
outsl
inc
mov
loopne
cwtl
pushf
scas
cld
lret
popf
enter
dec
ljmp
lds
add
repz
hlt
inc
clc
pop
outsl
dec
inc
out
jle
dec
int
shlb
xor
or
ret
push
negb
dec
jne
adc
add
dec
mov
sub
in
icebp
loop
dec
sub
out
jp
mov
ret
stos
lahf
data16
js
dec
inc
aad
fdivs
mov
into
mov
or
mov
aad
call
loop
mov
dec
push
inc
adc
les
aas
cmpsl
cmpsb
pop
adc
cs
insb
fs
jg
dec
and
dec
dec
xor
inc
add
push
and
adc
cmp
add
pop
shlb
div
inc
movsl
sbb
add
daa
add
repz
cmc
pop
ss
xchg
enter
rcrl
out
jmp
sbb
and
int3
push
push
xor
ja
mov
and
dec
int
jmp
mov
ja
add
push
dec
or
lods
mov
inc
cmp
pop
xlat
hlt
mov
mov
movsl
shlb
jle
out
lahf
popa
mov
shlb
rcll
subb
cltd
inc
in
jo
lea
push
adc
mov
jecxz
add
pop
sub
pop
pop
fwait
mov
xchg
pop
adc
mov
mov
xchg
int3
pop
movsl
mov
push
cmp
test
ss
int
adc
out
push
or
pop
in
pop
xor
or
xor
sub
fldcw
sbbb
imul
or
lea
adc
mov
test
xor
or
lcall
aad
xchg
test
mov
sub
add
rcr
inc
or
or
mov
push
add
push
int3
cmc
cmp
fdivrl
add
xchg
sub
xchg
les
xchg
inc
jbe
mov
cmpsl
jb
je
insl
lahf
mov
lock
or
in
fstl
adc
pop
mov
test
outsl
dec
int3
inc
adc
cli
icebp
sub
imul
pushf
jno
mov
mov
mov
mov
insl
jmp
mov
sbb
enter
xor
xchg
pop
sub
sub
not
sbb
add
sbb
inc
or
cmp
and
pusha
aad
ja
test
xor
inc
push
jecxz
aas
jne
cmpsl
cwtl
pop
in
inc
push
ret
mov
test
mov
aad
inc
loope
repnz
stc
xor
xor
or
xchg
imul
adc
ficoml
outsb
dec
subb
mov
inc
popf
shll
mov
push
dec
dec
xor
lea
mov
add
sahf
pop
jno
mov
push
xor
lcall
test
aam
cltd
adc
jecxz
or
jmp
lret
cmp
cmp
popf
and
mov
testl
cli
daa
push
mov
or
mov
ret
stos
in
sub
inc
dec
xchg
movsl
ret
call
mov
cmp
and
push
jnp
movsl
or
lret
cmp
cs
je
pop
mov
fs
shll
pop
pop
jmp
leave
pop
cltd
xchg
mov
xchg
testb
inc
mov
and
dec
push
mov
dec
sbb
cltd
pop
jle
inc
addb
cs
lret
in
jbe
popa
ret
mov
test
cmpsb
lcall
shl
scas
cmp
loop
movsb
mov
mov
pushf
je
or
and
adc
dec
hlt
leave
push
loopne
xlat
jne
inc
dec
cmp
mov
scas
out
mov
or
xor
push
fldt
mov
stc
add
ja
es
lret
ficompl
icebp
insb
and
and
inc
adc
fbstp
cmp
pop
mov
lcall
mull
push
clc
jmp
ret
mov
test
sti
mov
lock
mov
or
fxch
popf
push
fcomps
imul
or
mov
dec
aas
adc
pop
mov
pop
jmp
test
inc
mov
pop
and
xor
lcall
bound
mov
dec
scas
flds
repz
cmp
mov
push
shll
test
lea
sbb
ljmp
xchg
mov
sbb
xchg
push
lret
out
nop
mov
dec
shll
jg
xchg
insl
pop
stos
ret
mov
aaa
sbbl
movsl
adc
lock
leave
filds
cmp
test
cmpl
ret
mov
sbb
enter
popa
cmpsl
cltd
repnz
pop
stc
insb
pop
insb
xor
pushf
add
mov
push
sbbb
out
mov
sub
cmp
cmpsb
or
or
outsl
sub
ja
call
xor
popf
add
adc
pop
es
mov
inc
push
jne
stos
dec
xor
xor
push
inc
or
add
ret
mov
mov
imul
mov
bound
push
test
lea
call
dec
test
xchg
cmp
mov
jne
lock
fadd
push
pop
and
mov
sub
lods
scas
xchg
repz
inc
sub
je
xchg
and
imulb
cmp
lahf
and
sti
jne
pop
jg
add
inc
mov
add
inc
mov
push
mov
cmp
cld
pop
fistl
mov
out
push
lea
lea
test
xchg
das
popf
jo
arpl
js
int3
adc
fnsave
adc
add
sbb
xor
jecxz
fstpt
add
adc
xor
mov
jo
add
enter
push
dec
pop
fcoms
fstps
push
cwtl
or
push
sbb
rcrl
gs
jb
pusha
scas
int
not
imulb
pop
and
jl
xchg
adc
inc
dec
sub
inc
mov
lcall
movsl
pop
mov
jae
jno
in
jle
sti
ret
mov
testl
push
dec
daa
and
repz
mov
sti
leave
xchg
dec
mov
or
push
popa
outsl
pop
xlat
fimuls
aaa
lods
sahf
imul
dec
pop
inc
jne
push
adc
push
jmp
mov
pop
sahf
sbb
hlt
mov
sub
mov
mov
add
mov
xor
cwtl
insb
inc
sbb
adc
cld
mov
ss
xor
jb
jne
pop
hlt
in
mov
dec
jo
testb
adc
and
incl
add
pop
or
add
fwait
or
rorb
add
aad
push
fcompl
arpl
outsl
ret
lods
and
std
sbb
push
shlb
aad
sub
dec
ss
xchg
push
lods
ja
imul
jle
fsin
dec
arpl
jbe
div
mov
fsubs
xchg
adc
in
pop
in
pop
dec
lcall
filds
es
test
mov
mov
pop
pop
jg
sub
sbb
mov
inc
sar
dec
and
dec
test
pusha
cltd
in
loopne
jo
jmp
push
push
fnstcw
lea
push
lods
dec
mov
sub
cli
loope
cs
mov
mov
lock
fisubrl
add
xor
data16
pop
andl
imul
add
call
cmp
std
xchg
daa
mov
jnp
movsb
rcl
adc
lods
cmc
mov
xchg
sbb
pop
cmp
fld
jb
bound
pop
leave
and
sarb
and
mov
mov
scas
jne
daa
stos
sbb
int3
shll
iret
push
imul
push
push
add
call
fwait
test
scas
in
and
sub
sbb
add
loopne
xlat
loope
out
pop
mov
inc
adc
mov
daa
pusha
xchg
inc
lret
push
adc
cmp
mov
mov
in
and
jae
mov
pop
xor
mov
dec
in
adc
mov
cmc
popf
dec
cld
fstl
xor
movsl
rorl
cs
push
loop
mov
and
iret
dec
or
sub
fisubrs
xor
aam
lret
mov
cmpb
mov
test
call
fdivl
jle
xchg
cmpsl
ljmp
inc
lret
or
pop
dec
sbb
mov
sbb
adc
or
cmp
xchg
lret
and
sar
xchg
push
sbb
notl
push
adc
add
fdivrs
sbb
adc
mov
cmp
stc
dec
mov
sar
loope
mov
mov
mov
mov
in
push
int
clc
lcall
stos
mov
scas
fisttpl
cli
or
outsl
dec
lahf
rcrl
jne
fs
mov
stc
cli
lret
in
out
loopne
lgs
mov
jne,pt
shrb
aas
lea
cwtl
cmp
pop
negl
mov
arpl
push
mov
sbb
int3
push
jb
fcmove
clc
outsl
mov
sarl
xor
jle
adc
jns
adc
scas
adc
and
aad
cmpl
sub
jae
inc
jp
aas
sub
jb
pop
add
add
jl
mov
push
jecxz
inc
xor
in
dec
fcomps
sbb
in
out
mov
cli
jb
movsl
sbb
add
adc
iret
sub
push
cwtl
idivb
push
jo
imul
push
mov
ret
mov
push
lcall
fwait
sbb
push
les
jl
lret
outsb
ror
js
fnstsw
mov
jo
div
sahf
jmp
pop
mov
ror
push
mov
mov
pop
or
pop
pop
jg
enter
sbb
shrl
scas
mov
ja
dec
mov
add
mov
push
jge
adc
push
shll
nop
inc
sub
pop
mov
xchg
xchg
sub
sub
dec
rcl
lret
test
dec
fcoml
mov
cmp
outsb
pop
inc
lods
mov
jl
loope
adc
adcl
sbb
add
jns
inc
and
in
arpl
and
ljmp
imul
popf
sub
or
sub
add
pop
test
clc
and
sahf
and
pop
and
jno
add
mov
adcb
pop
mov
rcr
dec
cmp
cmpl
add
push
outsl
ja
mov
add
pop
cmc
add
cmpsb
xchg
arpl
mov
ja
addl
sbb
out
xchg
pop
pop
mov
testl
cmp
and
test
xlat
repz
bound
lcall
sti
inc
fisubrl
cmp
push
dec
dec
leave
loopne
sub
sub
cli
jg
inc
movsl
sbb
aaa
mov
sub
pop
or
jecxz
jno
push
mov
loopne
rclb
rcll
es
leave
cmp
adc
dec
adc
outsl
cwtl
addb
lods
dec
cmpsb
dec
outsl
adc
xchg
mull
xchg
jnp
xchg
sub
or
lahf
mov
lock
pop
test
mov
call
jmp
cltd
push
pop
lea
test
jle
sub
test
icebp
cs
cmp
fwait
ret
pop
aaa
lcall
mov
iret
mov
sub
fistpll
mov
sbb
out
push
pop
mov
repz
xchg
mov
test
mov
leave
inc
adc
xchg
pop
das
mov
push
push
adc
push
push
and
js
jo
ret
xor
lock
sti
outsl
cmc
sub
jbe
adc
das
cmp
add
std
cltd
jne
mov
inc
imul
mov
adc
out
cmp
sarb
into
nop
in
pop
push
sbb
scas
and
pop
into
sbb
hlt
push
out
xchg
sub
mov
cmc
popf
lock
jns
and
add
aad
jo
cltd
mov
aaa
push
inc
inc
ret
into
lock
in
jo
test
outsb
mov
push
mov
fcoms
in
imul
imul
das
adc
cwtl
xchg
mov
dec
out
lods
cld
push
fsubrp
loope
ljmp
outsl
xor
pop
cwtl
push
sbb
das
mov
mov
arpl
add
lret
adc
xchg
sbb
sahf
stos
xchg
sbb
loopne
push
sub
es
dec
shrb
in
push
mov
mov
xchg
mov
frstor
cwtl
enter
xchg
jnp
add
inc
sub
xor
fdivl
loop
shrl
incl
adc
jp
jnp
aaa
inc
stos
mov
sbb
movsl
xor
push
push
pop
invd
inc
sti
xor
lods
and
dec
add
pusha
stos
and
out
jle
movb
add
cli
sub
sti
lods
push
daa
call
aaa
xchg
xchg
cli
cmp
int3
lahf
dec
lret
jno
cmp
jmp
pop
xchg
sti
sub
push
mov
sbb
push
mov
adcb
jbe
push
xor
inc
aam
dec
push
push
mov
push
dec
loop
pop
fidivl
xor
sub
mov
adc
mov
js
lahf
or
inc
or
lods
lock
std
push
mov
mov
rorl
addl
sahf
inc
stos
cmp
jb
repnz
loop
mov
cmp
dec
sbb
and
cmpsl
pop
lret
out
add
out
adc
inc
pusha
push
xchg
mov
xchg
inc
cmc
pop
adc
jne
xor
sub
pop
cmp
mov
fildll
sbb
sub
push
sbb
mov
rcll
xor
push
repnz
loopne
scas
xor
jp
adc
mov
pop
aaa
clc
lock
cli
jg
lea
enter
std
add
mov
aam
dec
pop
sub
inc
fsubl
clc
dec
call
test
sbb
lods
into
dec
xchg
xor
or
jae
cltd
mov
cmpsl
xchg
cld
push
and
xchg
push
les
add
sbb
orb
cltd
jmp
jns
iret
adcl
add
xor
push
xchg
rorb
lods
movsb
xor
add
mov
fdiv
push
mov
cmpsb
add
fistpll
repz
leave
roll
sub
insb
pop
xor
pop
push
jmp
adc
cmp
ror
lea
add
add
add
movsb
xor
je
xchg
xor
cmp
lods
dec
in
inc
mov
out
dec
or
sbb
stos
xchg
fwait
mov
fst
in
stos
mov
push
jnp
data16
call
inc
push
xadd
or
cmpsb
cli
aam
add
test
cmovp
and
inc
test
push
daa
call
or
lds
pop
cmc
cmpsl
clc
mov
mov
das
jnp
popa
jae
popf
jmp
jno
xor
add
adc
jp
xlat
jge
dec
mov
iret
or
shl
cmp
mov
popa
roll
dec
xchg
xchg
mov
xchg
pop
insl
imul
in
shll
mov
xlat
mov
js
mov
fxtract
fs
out
mov
andb
cmc
aas
adc
divb
push
push
and
sub
stos
push
sti
mov
loope
fcompl
js
cmp
push
test
mov
loope
lcall
lcall
inc
movsb
fidivs
scas
es
sub
pop
cmp
mov
jno
mov
jl
call
mov
xor
cld
out
outsb
mov
sbb
xchg
and
and
cli
adcl
mov
rolb
movsl
mov
fwait
mov
lock
les
in
push
das
insl
push
popf
cs
cmp
test
das
adc
in
sub
inc
sbb
cmp
add
fdivp
outsl
and
sbb
and
rcll
es
mov
lcall
test
jo
sbb
in
or
xor
xchg
jecxz
mov
or
movsb
inc
test
iret
repnz
outsl
bound
mov
push
jo
fs
mov
call
push
jnp
push
test
sub
jns
xchg
ds
loopne
fcmovb
outsb
test
je
in
lods
mov
call
lods
lahf
xchg
cmpsl
in
and
cwtl
insl
mov
and
lods
dec
xchg
cmc
out
sti
xor
shl
xchg
mov
incl
or
lods
into
sahf
push
ret
pop
ds
mov
push
hlt
lahf
shll
jle
sbb
mov
sub
push
add
inc
push
mov
inc
adc
xor
push
movsl
sti
inc
cs
and
xor
pushf
mov
mov
xchg
push
rorb
sub
mov
cmpsl
paddsw
pshufw
int3
jns
push
add
mov
jecxz
or
popf
arpl
jge
mov
in
fs
inc
sarb
popa
lcall
cmp
inc
or
adc
cmc
sub
dec
inc
push
dec
push
push
xchg
sbb
lock
xor
es
ja
cli
inc
scas
ret
mov
pop
xlat
mov
adc
push
popf
fsubs
cmpsb
imul
add
pushf
adc
pop
movsl
shrl
ret
inc
jg
mov
imul
mov
daa
jb
push
or
sti
out
mov
or
pop
in
ja
mov
dec
sbb
dec
lcall
out
jle
inc
xchg
in
int3
dec
fstpt
aad
or
scas
add
rorb
push
test
cltd
dec
inc
jle
stos
sbb
out
fcmovnbe
or
xor
out
adc
xor
popf
and
adc
pushf
mov
inc
cmp
in
fdivrl
out
adc
or
lods
sbb
jp
pop
push
sub
lret
mov
imulb
rorl
mov
imul
adc
adc
jno
arpl
in
lods
enter
out
test
adc
jbe
addr16
or
jne
ret
ret
dec
mov
jg
cmpsl
stos
fwait
mov
aas
inc
or
out
insb
push
popa
pop
jge
mov
scas
pusha
push
gs
xor
inc
fnstsw
pusha
or
fsts
add
das
mov
ret
sbb
xchg
sbb
daa
xor
dec
loopne
lret
aad
mov
rcll
sub
inc
xchg
cmpsl
mov
cmpsb
and
in
xor
rolb
std
and
xchg
mov
in
cmp
dec
test
inc
rcrl
rorl
inc
adc
pop
ficoms
or
jo
xchg
leave
cmpsb
sti
dec
xchg
inc
lock
mov
out
inc
cmp
sub
mov
aaa
bound
lock
or
dec
mov
inc
fdivl
stos
jl
fs
mov
insb
loope
push
adc
mov
pop
xor
adc
or
jl
push
xchg
mov
inc
inc
clc
repz
fcmovbe
xchg
sbbl
scas
iret
test
xchg
btc
popa
pusha
adc
sbb
rcll
and
call
and
mov
mov
mov
lock
dec
push
ret
push
ret
adc
mov
sub
aas
pop
push
push
inc
xchg
arpl
scas
fiaddl
cmp
pop
in
push
cwtl
std
mov
cmc
cltd
mov
les
nop
sub
push
loope
aas
divl
xchg
add
and
lahf
jp
scas
cmp
outsb
mul
roll
push
mov
lods
fldenv
call
adc
aas
lret
jb
sub
or
and
ja
loop
jecxz
out
adc
pop
fstpl
lret
or
jae
sti
int
mov
push
pop
mov
cmp
cmpsb
gs
push
in
test
and
mov
aaa
cmpsb
shll
dec
sub
push
jb
aam
adc
divl
push
cmp
xchg
in
adc
jo
js
push
xchg
inc
or
les
sbb
cmp
mov
lods
inc
sbb
adc
lahf
jg
jne
jo
xchg
dec
cmpsl
adc
pop
fidivs
std
add
push
cmp
fnsave
sbb
or
jmp
test
mov
test
jp
scas
out
add
add
ss
cmpsl
sbb
std
mov
into
outsb
hlt
in
sbb
loopne
or
scas
sbb
push
lods
shl
sbb
out
pusha
push
mov
out
push
push
mov
insb
test
xor
jnp
mov
outsl
fstpt
jl
call
inc
adc
pop
orb
cs
xchg
in
pop
clc
ficompl
push
in
call
aam
jp
ja
jecxz
in
cltd
push
adc
mov
or
or
or
or
lea
or
fstl
es
mov
into
shll
insb
cmp
pop
sub
js
out
jge
loop
aas
adc
xchg
enter
lcall
insb
inc
nop
outsl
mov
cld
inc
icebp
ja
sbb
sbb
out
push
cmp
xchg
cmpb
int3
inc
test
xor
push
jecxz
dec
test
jmp
pop
loope
or
and
shl
push
scas
dec
fadds
mov
mov
sub
jae
cmp
shrl
add
lret
sub
push
shll
lahf
sahf
jns
cs
test
xchg
mov
mov
repz
sub
jmp
sar
push
fcmovu
add
popf
dec
fiadds
dec
test
cltd
pop
mov
mov
inc
ret
xor
mov
add
mov
pop
mov
mov
mov
push
add
fcmovbe
enter
pop
btc
jno
fs
add
mov
mov
cmpsb
aam
add
pop
jnp
fldt
divl
ja
mov
mov
repnz
mov
jmp
xor
pop
gs
jns
add
aam
mov
fwait
imull
aad
lods
or
aad
rolb
cwtl
aaa
and
and
add
and
cmp
mov
mov
lods
ss
cmpsl
mov
call
pop
jl
pop
or
mov
inc
ja
cwtl
or
stc
test
or
jge
push
rcrl
adc
movsl
test
mov
sbb
add
sti
push
pop
inc
sub
scas
test
xchg
rcrb
mov
sub
lcall
sahf
fldenv
cmc
add
pop
leave
imul
lock
outsl
push
rcr
imul
addr16
add
sbb
xchg
shlb
mov
push
aaa
mov
nop
add
push
xchg
adc
jo
jg
xchg
adc
pop
enter
or
pushf
int
push
xchg
out
aad
aaa
or
pop
inc
xchg
mov
adc
test
inc
cmp
popa
mov
orb
sub
and
mov
fistps
pusha
cmpl
repz
cmp
add
dec
push
sub
adc
stos
fisubs
push
popl
sbb
push
and
or
into
inc
xor
stc
jno
addr16
cmc
leave
mov
std
xor
xchg
and
aas
rcrl
add
sbb
push
jb
mov
add
scas
pop
out
clc
test
sub
push
pop
jae
push
jmp
add
out
cmp
popf
xor
movsb
negl
mov
mov
dec
xchg
lods
and
pop
data16
push
ja
xor
cmpsl
xor
clc
add
sete
jne
xchg
sub
inc
mov
jno
outsl
into
dec
xchg
cmp
shll
dec
mov
sub
stos
negb
jl
shlb
xchg
mov
jle
lds
inc
int
lret
aad
call
mov
cltd
sbb
loope
lods
sub
xchg
mov
push
enter
and
test
adc
or
mov
adc
scas
mov
or
lret
gs
sbb
or
xchg
mov
adc
xor
sbb
and
cmp
sbb
mov
cmp
sub
outsb
in
jge
sbb
sbb
adc
push
mov
jno
jg
inc
pop
sti
test
in
call
push
mov
push
rorb
adcb
shrb
cmp
loope
jecxz
add
scas
mov
ret
mov
dec
xchg
xor
call
sbbl
stos
mov
out
loop
test
dec
push
inc
leave
jle
js
lret
insl
pusha
mov
bnd
mov
icebp
lds
stos
or
pop
les
repnz
push
cli
jno
pusha
sbb
mov
ret
or
mov
cld
xor
jbe
add
push
daa
push
sarl
jbe
cmp
and
jle
push
sbb
fnsave
mov
add
les
jno
jbe
cld
or
test
push
adc
dec
push
mov
aaa
rorl
dec
stc
fisttpll
mov
cs
fimull
lods
mov
cmp
dec
pushf
mov
das
cwtl
and
push
out
jae
add
sub
cmp
popl
lret
hlt
outsl
loop
clc
inc
fldenv
jge
lret
and
addr16
mov
ret
test
dec
add
rcrb
in
jno
mov
daa
in
ficoml
test
fdivr
insb
xchg
push
fsubl
ret
inc
inc
pop
sarl
jns
test
mov
and
movsl
stos
mov
pushf
fwait
xchg
lea
or
adc
jl
add
add
out
pop
cmpsb
mov
sbb
in
xor
add
mov
pop
cwtl
cli
adc
sub
lret
mov
mov
push
leave
jmp
mov
xchg
outsl
test
inc
outsl
js
jae
sbb
push
jmp
dec
test
aaa
mov
jb
cmpsl
jnp
in
inc
cmp
inc
xchg
add
mov
les
repnz
push
jbe
dec
sub
popa
movsl
scas
mov
xchg
in
in
lret
int3
sbbb
mov
mov
mov
int3
or
sbbb
lret
inc
pop
setnp
sti
cmp
fstl
push
rcl
mov
xor
arpl
sub
cmp
pop
adc
das
mov
cmp
sahf
dec
jne
mov
cwtl
mov
jecxz
subl
jno
test
pusha
lcall
jmp
lods
pop
enter
add
js
fcompl
inc
repnz
arpl
sub
xchg
aam
jge
cli
fbstp
aad
mov
rcrb
jle
sbb
movsl
mov
inc
es
mov
dec
dec
pop
arpl
es
push
sub
push
dec
pushf
int3
insl
jge
popf
sub
mov
jl
fiaddl
lods
insl
mov
aam
xchg
loope
mov
pop
xchg
loopne
out
pusha
mov
sub
insl
aas
sub
outsb
cmp
in
and
sbb
sti
sub
xchg
adc
rcrb
and
outsw
and
xor
arpl
inc
movsb
add
in
inc
sub
pop
pop
and
fsubs
mov
push
ret
or
dec
mov
lods
decb
movsb
sbbl
ss
scas
lds
xchg
sub
sub
mov
add
dec
jmp
xor
and
jecxz
lds
in
je
into
adc
add
mov
push
sub
lock
outsl
iret
mov
bound
adc
ljmp
hlt
and
mov
lds
dec
test
sbb
mov
sbb
orb
das
inc
mov
ficoml
sub
jmp
iret
gs
mov
add
pop
cld
int3
pusha
std
rclb
fcoml
xor
or
adc
test
movsb
push
pop
lret
sbb
decb
xchg
cwtl
mov
cmp
mov
inc
push
std
jp
pop
int
xchg
stc
sub
mov
pop
jb
popa
jmp
mov
sbb
jnp
push
add
and
mov
cli
mov
push
sbb
jno
gs
xor
pushl
mov
test
adc
icebp
fwait
shll
movsl
push
cwtl
add
popa
pop
pusha
dec
jle
mov
pop
in
xchg
push
das
scas
pop
loop
xchg
cmc
popa
jns
adc
inc
adc
lods
xor
adc
filds
in
mov
mov
xchg
enter
negl
lcall
mov
cmp
pop
icebp
add
and
inc
jno
gs
or
adc
aad
arpl
add
and
notl
stc
dec
push
mov
jae
enter
inc
fimull
add
loopne
jle
call
xchg
mov
adc
pusha
in
or
pop
add
outsl
pop
lds
push
mov
adc
inc
add
ja
jae
sarb
xchg
outsb
stos
dec
mov
pop
lret
repnz
das
loopne
push
sub
push
xchg
mov
jno
rorb
gs
add
unpcklps
das
adc
out
cltd
loope
add
popf
sub
and
imul
test
sub
mov
sub
icebp
popa
pop
add
dec
mov
in
sbb
ja
aas
add
lcall
cs
aam
mov
sar
dec
add
loope
pop
inc
popf
rcr
cmp
sub
jmp
aaa
jg
mov
cld
push
insl
add
mov
cmc
fadds
mov
xchg
xchg
addb
inc
int
push
int3
jp
xor
test
xor
outsb
mov
ret
push
inc
cmp
mov
out
inc
xor
fisttps
add
mov
add
inc
lea
xchg
pop
inc
gs
mov
cmp
cmp
mov
pop
jnp
pop
cs
sarl
mov
or
dec
into
pusha
push
into
ficompl
jmp
gs
or
int
push
stos
jbe
movsl
dec
mov
scas
subb
rcl
dec
test
fsts
jo
icebp
scas
mov
jno
sbb
push
fiadds
or
mov
sbbb
mov
xorb
cmp
dec
cmp
lret
loop
ss
xchg
inc
int
fisubs
stos
in
call
or
inc
and
cmp
nop
subb
loope
fldcw
add
or
dec
insl
jmp
cmp
pusha
in
decl
jmp
push
adc
sub
sub
loopne
push
inc
shrl
inc
lret
add
add
adc
cli
push
call
jne
mov
addr16
inc
mov
xor
subb
sbb
xchg
cmpsb
popf
stos
scas
xchg
in
mov
inc
loopne
sub
arpl
jnp
xchg
pop
cs
xor
mov
cmpsl
out
or
xchg
insb
mov
clc
cs
sbb
fstpt
into
inc
div
sub
jbe
in
inc
adc
or
push
jge
data16
sar
dec
mov
iret
test
push
push
dec
inc
dec
movsb
push
xor
inc
les
jl
push
jno
dec
pop
pop
hlt
test
jno
sbb
repz
out
popf
inc
in
in
lahf
mov
out
sub
mov
xchg
nop
sbb
jecxz
pusha
push
hlt
rep
fcomps
test
xchg
sub
or
jo
fidivs
xchg
mov
mov
jle
jle
lcall
jo
dec
fistpl
and
push
sbb
xor
daa
and
push
xchg
fbstp
movl
outsb
xor
jg
inc
outsb
outsl
mov
mov
sub
xchg
fisubs
int
push
out
xchg
cmp
lret
pop
jmp
xor
xchg
dec
and
pop
cmpsb
jo
xor
int
xchg
mov
jl
cmp
jl
sub
push
fstpl
and
push
aam
sbbb
lcall
jb
arpl
jle
mov
xchg
xchg
dec
repz
jns
das
mov
jns
into
pop
outsb
sub
fs
imul
std
or
nop
into
and
push
dec
adcl
push
aad
xor
mov
dec
or
outsb
popa
xchg
cmpsl
pop
add
or
fs
sub
notb
push
xor
sbb
int
ss
fcompl
jmp
jns
sub
mov
adcb
push
dec
mov
sub
pop
mov
stc
add
enter
scas
fwait
cmp
lds
je
adc
mov
repz
inc
push
pop
mov
fdivl
shl
sarl
outsl
mulps
popf
xchg
mov
or
cmp
inc
ds
js
aam
adcb
mov
cmp
mov
adc
fistl
scas
add
sub
loop
jnp
jbe
pop
mov
pop
fisttpll
xchg
aas
pop
sti
shlb
mov
adc
andb
sti
je
jmp
inc
xchg
js
je
pop
jno
inc
ja
jo
sbb
nop
movsl
test
sti
mov
mov
in
out
in
push
int3
cmp
fwait
out
dec
mov
jbe
mov
cltd
lea
daa
aam
test
daa
sub
mov
xchg
in
sbb
and
mov
xor
cmp
inc
loopne
jnp
push
in
adc
shl
pop
mov
test
jecxz
pushf
push
adc
sub
push
enter
push
shl
jo
sub
in
scas
lock
inc
mov
fimuls
inc
div
cld
lret
or
mov
fadds
jo
sub
lds
xor
test
divb
test
test
jg
xchg
push
xor
dec
mov
xchg
jb
dec
jo
scas
fldt
push
test
loope
mov
mov
xchg
loop
ret
sub
add
bswap
test
xchg
in
add
mov
sbb
iret
test
cmpsl
lods
fwait
mov
ret
cmp
xor
negl
mov
sarb
xchg
faddp
push
xchg
test
or
in
outsl
and
push
out
ljmp
xchg
mov
lret
xchg
testb
dec
push
jno
xor
inc
add
sti
les
add
pop
pop
sbb
in
loop
sub
inc
adc
push
scas
jo
loope
lock
lods
push
mov
fcmovbe
jg
mov
int3
push
push
pop
sbb
push
mov
mov
mov
out
ror
lods
fimull
add
xchg
mov
jecxz
xor
add
or
sbb
or
sti
loop
add
cmp
and
pop
sub
mov
loop
loopne
out
popf
jae
push
les
sub
jge
sbb
imul
fnstcw
mov
add
data16
inc
fistpl
mov
mov
or
inc
jnp
pop
or
add
dec
cmp
cs
xor
add
pushf
aas
stc
daa
mov
jle
xor
jb
data16
dec
mov
gs
cmp
cmp
and
xor
leave
add
pop
daa
scas
gs
xor
call
lods
int
mov
cmp
arpl
das
insl
mov
ljmp
sbb
shl
push
dec
xchg
aaa
and
sbb
add
aad
mov
std
sbb
xchg
in
sbb
pop
xor
xorl
and
cmp
pop
enter
mov
jg
jnp
dec
and
cmp
mov
mov
cmp
sub
jb
mov
mov
dec
pusha
lods
ret
cmp
sarb
loop
cld
mov
shll
fwait
xchg
mov
vmptrst
in
dec
mov
out
jo
jns
jmp
mov
icebp
xchg
ja
and
imul
adc
incl
xor
xor
cmc
pop
push
inc
arpl
dec
jecxz,pn
andl
das
add
jbe
xlat
aas
enter
repz
mov
xchg
rcll
test
jns
js
or
cmpsl
icebp
mov
fadds
push
add
dec
mov
mov
adc
or
sub
inc
cmp
leave
lods
push
sub
or
xchg
mov
test
jbe
adc
cmp
cmp
pop
adc
mov
inc
mov
jnp
dec
inc
call
in
es
inc
cltd
push
xchg
add
popa
adc
inc
sarb
sbb
cld
in
and
inc
outsb
cmp
sbb
popf
pop
pusha
jmp
scas
std
push
adc
mov
cmp
andb
and
push
cmc
fistl
fistpll
aam
ret
enter
leave
rcrb
fisubrs
xchg
jle
rol
movl
orl
mov
nop
pop
decl
sbb
je
jmp
mov
sbb
popf
arpl
add
std
jae
int3
sub
pop
add
push
or
aaa
mov
inc
aad
adc
das
divl
and
lods
mov
test
pop
pop
jae
aad
or
pop
mov
scas
mov
imul
cld
fcom
int3
add
out
dec
es
dec
push
nop
lret
jp
dec
adc
test
jbe
mov
cwtl
mov
add
into
sbb
mov
mov
push
fisttpl
iret
test
insb
or
inc
call
push
lods
add
scas
xor
lret
mov
pop
cmp
jl
popa
test
lods
lret
movsb
loope
adc
fisubrl
addb
movsl
pop
add
and
jl
sub
pop
jo
pop
sahf
jae
mov
xchg
lds
loopne
out
mov
stc
fldenv
je
mov
cld
lcall
ret
pop
rclb
mov
inc
jmp
xchg
sub
mov
enter
mov
cs
stc
pop
or
jl
push
jge
xor
push
and
cmp
lret
sub
jg
pop
cltd
ror
xchg
fwait
cmpsl
pop
add
cltd
xor
js
leave
sub
ljmp
imul
xor
pop
rolb
xchg
mov
fcomi
mov
in
inc
fisttpl
scas
icebp
push
and
inc
lcall
xor
adc
adc
lret
jne
mov
xchg
mov
xchg
out
cmpsl
lea
dec
push
inc
jecxz
push
cld
fsubs
divb
mov
fcomps
cmp
mov
jnp
repz
lcall
scas
nop
xchg
inc
jne
out
jno
sti
jmp
jmp
fcomi
xchg
push
leave
inc
lock
add
icebp
mov
and
cmpsb
and
pushf
lret
nop
jge
pop
pop
mov
aam
out
sub
lock
clc
or
ret
clc
cmpsl
std
mov
cmp
or
dec
faddl
cmpb
jae
pop
jnp
sub
fimuls
mov
push
hlt
or
ja
xchg
imul
push
iret
nop
pop
js
repnz
mov
cmpsb
adc
cmp
mov
loop
notl
ret
gs
mov
add
pop
sti
ds
fistps
and
lods
fwait
inc
hlt
loopne
out
sbb
subl
hlt
adc
lods
shlb
daa
push
in
jge
mov
jge
adc
push
lret
jmp
cli
push
sbb
push
stos
das
jno
fsubrs
push
dec
cmp
xchg
inc
jmp
cmp
divb
sub
xchg
mov
jle
loop
sbb
mov
gs
stc
lods
jecxz
in
cmp
jg
repz
add
test
out
fistpll
iret
leave
into
xchg
jno
js
loope
nop
mov
push
inc
enter
push
sti
aaa
daa
xchg
xor
mov
cmp
push
sti
and
xchg
ja
shrl
aas
ret
ljmp
add
loopne
adc
jge
add
je
cmc
int3
stos
je
fdiv
cmp
push
add
in
pop
inc
xor
xchg
bound
jg
incl
lock
jnp
xor
scas
add
or
sti
icebp
fnsave
fwait
das
xchg
aaa
ret
xorl
gs
inc
js
jne
xchg
mov
push
cld
pop
and
and
or
daa
enter
aad
int3
xchg
pop
cmpsl
adcl
cmpsb
mov
rcrb
add
pop
ret
xchg
mov
fs
or
icebp
adc
pop
je
fnsave
out
xchg
cmpsb
dec
nop
jno
test
pop
addr16
lods
push
faddp
cmc
ja
int3
mov
mov
shr
push
sbb
push
popa
pop
jmp
pop
rclb
movsl
push
fcoml
push
dec
push
inc
pop
cmp
push
xor
adc
sti
or
ffreep
xorb
outsb
and
les
fst
pop
inc
sub
or
cmp
xchg
shr
pop
arpl
mov
mov
mov
dec
in
stos
fucomi
xor
in
add
inc
out
dec
cmpsb
inc
and
xchg
pop
or
jmp
das
mov
lahf
roll
aas
enter
addr16
cli
mov
adc
das
mov
xor
and
adc
pop
inc
pop
push
xchg
inc
or
jno
bound
sub
leave
jl
out
or
ja
rol
dec
leave
adc
jmp
inc
mov
rcll
imul
subb
je
imul
dec
repnz
imul
jge
hlt
popf
pop
ss
pop
outsb
or
xor
push
stos
or
sub
dec
mull
ss
push
push
xchg
inc
sub
or
mov
push
jle
or
cmp
mov
mov
test
aam
cs
sarl
jbe
xor
insl
xor
repnz
flds
cmpsl
repz
js
adc
xchg
jno
or
xor
pop
and
icebp
xchg
aad
loopne
insb
punpcklwd
inc
flds
mov
xor
mov
fstpt
jle
jmp
rclb
pop
scas
mov
stc
mov
scas
stc
adc
inc
pop
aaa
jbe
jmp
push
aam
in
fdivrl
adc
test
dec
aaa
enter
in
sub
enter
inc
popa
and
adc
nop
push
ds
and
adc
imul
lahf
push
push
dec
shll
and
outsl
sbb
inc
jno
xchg
pop
insl
pop
cmpsl
xchg
ficompl
add
mov
popf
pop
rcrb
add
sub
fwait
shrb
pushf
daa
mov
dec
outsl
sbb
and
jl
out
sbb
data16
int
clc
jb
or
add
xchg
loop
xchg
xor
je
mov
inc
es
mov
mov
and
mov
mov
inc
mov
push
pusha
shrb
in
pop
sbb
pop
nop
xor
mov
fdivrs
sti
insl
ret
fldl
imul
rorb
lds
mov
scas
jp
int
or
enter
rol
inc
mov
ret
adc
clc
ret
pop
mov
outsl
js
fsubrp
xor
sub
je
jmp
add
test
orl
insl
into
sbb
mov
sub
pop
into
enter
ds
and
sub
add
sarb
cmc
xchg
dec
or
cmp
sbb
iret
popa
mov
ret
mov
adc
add
lret
call
dec
jnp
mov
adc
sbb
mov
call
pop
sub
clc
push
add
pop
or
pop
and
mov
pop
xchg
sub
xchg
sbb
imul
stos
daa
mov
in
jmp
inc
in
test
pop
lods
nop
fcoml
sub
cmpsl
xchg
sub
sub
and
ret
sub
lods
add
mov
sbb
jo
and
add
into
adc
ljmp
fwait
push
sub
ror
jge
bound
shlb
scas
cld
pop
iret
adc
push
inc
je
hlt
movsl
addr16
cmp
pop
cmp
fnsave
dec
pop
xlat
in
cmp
ss
stc
push
mov
adc
push
jle
inc
sbb
dec
sub
ja
jp
clc
mov
scas
adc
dec
je
dec
jmp
adc
jbe
out
es
fimuls
mov
push
lods
lea
lret
or
mov
jp
sbb
sbb
or
popa
sub
sti
push
fs
cmp
inc
das
ja
roll
pop
lds
out
push
ds
or
dec
push
cmovp
push
popa
and
xor
int3
mov
sbb
movsb
js
in
lea
outsb
pop
jo
out
dec
mov
pop
cmp
sub
rolb
jb
pop
inc
test
pushf
lds
fdiv
mov
bound
mov
in
stos
lcall
cmp
sub
lret
push
mov
ljmp
and
mov
cmp
movsl
negb
addr16
mov
add
xchg
int3
or
movsl
shl
pop
les
mov
inc
and
mov
pop
mov
in
inc
dec
aad
jo
outsl
sub
dec
or
into
scas
fildl
rolb
jg
sbb
in
mov
test
cmp
lods
cmp
scas
mov
rorl
mov
movsb
push
std
xlat
vpcmpeqd
xor
lods
pop
ss
int
mov
cwtl
aad
out
aam
sbb
pop
jbe
mov
adc
cmpsl
in
mov
aad
xchg
push
pushl
iret
fsubrl
adc
mov
add
mov
cmp
xor
out
jb
sbb
mov
and
mov
add
jbe
xlat
mov
ret
dec
pusha
jl
adc
jle
insl
subb
das
cltd
xchg
or
out
pop
sbb
in
loope
clc
xor
call
fisttpll
in
push
push
and
inc
pop
enter
mov
fwait
cmc
xchg
loope
mov
cmp
cmpsl
or
lds
xor
jb
push
and
in
shlb
pop
enter
sbb
dec
xchg
and
xchg
jbe
int3
xchg
flds
jle
pop
sbb
dec
cli
xchg
jno
int
mov
aam
or
and
leave
xchg
sub
movsl
sbb
sbb
mov
push
leave
divl
sub
mov
in
cmp
cmp
mov
cmp
insb
mov
cmp
xchg
inc
jmp
ljmp
faddl
and
pop
clc
jo
lret
dec
sbb
inc
and
inc
jecxz
insb
les
int
mov
adc
rcr
push
aaa
or
sub
lds
stos
mov
sub
add
xor
mov
les
add
sbb
xchg
nop
outsb
ret
pop
mov
int3
in
lcall
cs
pop
mov
aas
pop
bound
movsb
mov
and
jnp
aam
aaa
jae
jno
ja
mov
in
sbbb
inc
rorb
fldl
decb
cmp
sbb
ret
insl
insl
pop
push
push
sahf
jecxz
pop
test
inc
jb
std
sbb
jnp
mov
mov
add
xchg
mov
out
jbe
lcall
mov
idivb
and
lods
lret
mov
lret
dec
or
or
jbe
cmp
push
imul
fsubl
jge
out
lds
cs
push
mov
xchg
stc
cmp
scas
or
ficoms
out
pop
or
mov
into
pcmpeqw
add
jo
pop
push
or
adc
hlt
std
xchg
adc
popf
or
inc
ja
and
push
int
insl
sbb
sub
push
fisubs
fdivrs
pop
push
or
fildl
mov
sbb
inc
push
and
adc
insb
pushf
rol
add
fcmovnu
mov
testl
addr16
in
xchg
fs
add
div
adc
sarb
bound
jnp
pop
test
mov
out
inc
data16
mov
pop
xor
dec
xchg
pop
mov
leave
add
inc
mov
inc
pop
mov
repnz
inc
dec
xor
popf
pop
je
call
mov
mov
mov
mov
jp
sti
sub
sti
mov
mov
int3
jge
sub
pop
cmpsl
inc
scas
aaa
stos
or
lahf
sub
mov
dec
add
imul
packuswb
push
mov
inc
addr16
rcrb
fbstp
dec
cmp
sbb
and
fimuls
stc
sbb
pop
mov
aas
push
jl
fldcw
sub
les
movq
out
dec
cmpsl
cmp
mov
out
bnd
sub
icebp
xchg
test
daa
sbb
adc
inc
stos
mov
ja
in
lock
out
outsb
xlat
pop
sub
in
sbb
sub
out
pushf
dec
lods
cmp
push
sbb
pop
shr
movsb
cmpsl
inc
sarb
cmpsb
dec
gs
scas
cmc
fcoms
pop
lcall
pop
repnz
notb
xor
cmpb
popa
and
ss
dec
vmovaps
gs
ror
pop
pop
das
sti
push
loop
adc
je
js
sbb
and
seta
lahf
mov
clc
jecxz
sahf
ds
jp
jbe
add
es
shll
sbb
fcomps
mov
repnz
jecxz
rorb
ret
ds
pop
ds
arpl
fistpl
sbbb
xchg
or
pop
int
jae
popf
shll
or
fs
lret
rorb
in
jmp
sbbl
ror
pop
adc
push
sarb
or
dec
or
imul
jbe
fistl
mov
mov
and
int
adc
jns
icebp
fildl
xchg
xchg
inc
sub
insb
mov
cmp
mov
lret
fadd
insl
cmpsb
imul
jbe
pop
stc
insb
lahf
add
pushf
xchg
lds
pop
fwait
mov
shrb
test
cmp
mov
mov
cmp
mov
fs
pop
out
lahf
sbb
jp
ret
jne
outsb
sub
xlat
xchg
in
mov
scas
ret
nop
dec
push
enter
push
jl
pushf
and
in
scas
mov
inc
call
loop
push
add
mov
inc
jl
jae
cli
mov
pushf
cli
cwtl
jp
dec
sbb
adc
outsb
loopne
and
dec
imul
adc
mov
cmp
fimuls
sbb
jecxz
mov
gs
add
test
and
sbb
mov
movsb
fbstp
lcall
sub
mov
dec
mov
jle
movsb
push
add
iret
lds
xchg
nop
fmull
add
arpl
cmp
dec
push
mov
pop
pop
and
cld
pop
adc
xorl
cmp
and
adc
movsl
es
aad
insb
mov
mov
ss
je
pop
lcall
cmc
or
or
sbb
daa
mov
int3
iret
push
sbb
cmp
cmp
in
test
xchg
test
jmp
ror
leave
in
mov
cld
vpcmpeqw
std
cmp
les
push
adc
call
hlt
sbb
adc
test
xchg
andb
lock
ljmp
inc
stc
xchg
and
push
inc
das
fadd
cmpsb
gs
out
mov
inc
xchg
cltd
xor
adc
les
fs
cmp
popa
jno
add
add
xchg
xlat
cmp
sbbb
addr16
mov
cld
mov
xor
sub
push
repz
sub
jp
or
sub
out
outsl
pop
mov
in
pop
dec
pop
adc
add
xor
adc
cmp
push
or
pop
movsb
jbe
push
scas
sahf
xchg
rorb
cld
test
int3
test
cmc
cmpsl
flds
adc
push
push
repz
dec
arpl
and
and
pop
fldl2t
adc
int3
push
daa
stc
jnp
repz
lea
outsl
mov
cmp
pmaddwd
cwtl
dec
stos
or
jnp
mov
push
xor
neg
out
daa
mov
or
mov
gs
insl
push
sbb
aam
inc
inc
mov
cmc
mov
push
pop
inc
push
lock
sbb
push
push
fimull
inc
cmp
sti
lret
dec
inc
push
int3
cld
pop
xor
sub
cld
mov
sbbb
sahf
ljmp
adc
sti
outsl
mov
das
add
and
repnz
mov
jge
jo
xchg
jg
dec
icebp
sub
push
arpl
pop
mov
orl
pop
cltd
mov
dec
adc
dec
subl
outsl
sarl
mov
ss
push
mov
dec
loopne
add
cmpsl
jnp
scas
outsb
hlt
and
imul
mov
and
cld
sbb
addl
cmpb
insb
and
out
mov
jmp
inc
xor
add
xor
adc
rolb
inc
in
es
outsb
cmp
loopne
imul
dec
jl
jnp
xlat
cmp
jno
rcrb
pop
pop
jle
dec
scas
xor
dec
fs
xor
sub
cmp
shl
adc
int3
mov
cmp
lods
jb
fidivrs
int3
lcall
bound
sbb
xor
or
pop
push
rcll
fsts
jne
push
push
int
inc
sahf
jl
sbb
stc
xchg
fdivs
xchg
or
adc
into
ljmp
push
or
fcoms
test
mov
and
add
sub
pop
rolb
call
dec
mov
fisubrl
and
sub
jmp
xchg
test
xlat
lods
repnz
jne
cmpsb
sbb
insb
xchg
rcrl
out
aam
sysexit
mov
sub
fcmovnb
cmp
jb
int3
lret
lods
dec
or
data16
scas
push
sbb
movsb
mov
nop
sbb
addl
stos
adc
js
xchg
arpl
fdivr
jle
filds
xor
jne
es
jns
xor
or
or
xchg
data16
outsb
gs
jge
lea
icebp
aam
mov
sub
inc
jp
movsb
icebp
out
cmp
mov
shll
in
int3
aas
pushf
and
gs
out
cld
ljmp
ret
xlat
xor
ret
inc
fldcw
cmp
int3
das
in
sbb
xor
leave
bound
shl
lahf
int3
orb
out
outsl
mov
div
into
and
outsl
addl
xlat
adc
das
mov
pop
mov
and
and
nop
cli
jecxz
popf
push
pop
inc
ds
push
bound
dec
or
pop
and
inc
inc
jg
push
mov
imul
lods
cmpsb
aas
dec
outsl
adc
imul
aas
pop
aaa
dec
xchg
test
jbe
loopne
int3
clc
pop
out
jmp
je
pop
cmpsb
into
sub
pop
and
cmpsb
fcoml
daa
stc
lret
outsb
sbb
push
fs
push
inc
cmp
stos
xor
pop
push
xchg
pop
jbe
mov
push
clc
nop
loop
xlat
mov
ret
lahf
pop
outsl
mov
push
insb
mov
mov
add
pusha
mov
sub
xchg
bound
mov
imul
lret
mov
xlat
stos
dec
in
scas
pop
add
sbb
xchg
mov
imul
movsb
sbb
sub
loop
jnp
out
shll
ret
jno
dec
mov
add
cmc
push
dec
push
in
or
call
xchg
test
lcall
adcl
popf
jmp
xor
jl
aad
arpl
mov
mul
fistpll
sbb
jp
test
sbb
outsl
cli
adc
xchg
test
fsubr
stos
lock
pop
iret
lcall
in
lret
lret
fdivrl
rcr
add
enter
mulb
fcoms
mov
mov
or
ja
xlat
aas
decb
pop
imull
inc
in
or
push
insl
lret
mov
or
jns
sub
aas
out
xlat
and
push
int3
loope
rclb
jle
mov
jecxz
mov
stc
push
sbb
std
or
cltd
loope
push
stc
test
loop
adc
mov
fidivrs
repnz
ror
fisttpll
mov
and
rorl
lret
mov
repz
xor
jl
rol
jg
mov
pop
push
sub
js
adc
pop
xchg
out
sub
int3
mov
mov
xor
mov
push
pop
int3
rcll
daa
pop
lahf
test
push
out
sbb
cmc
xchg
xor
jmp
jnp
js
and
sahf
jbe
jnp
mov
adc
rolb
inc
fcomip
pop
insb
int
mov
add
mov
shlb
mov
pop
cmp
pop
out
call
inc
cmp
inc
jnp
mov
pop
jbe
in
add
or
mov
jl
sti
stos
lcall
xor
sbb
fxch
addr16
dec
out
arpl
ljmp
repnz
mov
push
mov
sub
sbb
push
jb
aas
icebp
dec
mov
mov
push
sbb
int
popa
fs
test
sbb
ss
mov
sbb
int3
mov
sub
inc
dec
fiaddl
fidivrl
cmp
xor
dec
std
rol
notb
cmc
les
in
xchg
jae
dec
xor
imul
pop
imul
mov
test
lea
add
clc
push
xchg
cmp
cs
xor
cmpsl
imul
jbe
push
mov
mov
xchg
dec
jle
loop
ror
repnz
addl
cmc
sahf
push
fnsave
dec
sahf
or
adc
pop
inc
shrb
mov
mov
sarb
mov
insb
enter
outsb
nop
pop
aam
test
xor
lea
pop
repnz
jno
scas
inc
or
inc
push
push
add
xchg
jmp
sti
int
mov
test
adc
jns
mov
sarl
sar
adc
hlt
mov
jb
adc
mov
sbb
jo
xchg
fstp
jmp
mov
dec
push
mov
sub
and
jge
sub
mov
mov
pextrw
and
mov
jns
mov
mov
push
fdivs
lcall
cmc
cmpsl
dec
push
inc
mov
movsb
mov
pop
loop
fwait
decb
lret
inc
xor
aad
movsb
mov
xchg
sub
clc
dec
or
xchg
dec
test
lahf
loope
inc
in
push
mov
inc
movnti
scas
xor
fisttpl
pop
lea
sbb
mov
cmp
stc
pop
xchg
mov
repnz
xlat
and
fsubrs
adc
aas
test
mov
mov
ret
jns
pop
push
push
movsb
roll
sbb
jl
cltd
es
cs
insl
mov
and
mov
push
lods
xor
push
lods
push
sub
xor
test
pop
inc
mov
movsl
dec
cmpsb
push
and
data16
and
sbb
xor
daa
adc
mov
dec
notl
mov
bswap
out
jno
iret
enter
add
int3
add
das
xor
cmp
lahf
push
xor
rcrb
and
shlb
pop
jle
pusha
pop
add
bound
ficoms
das
mov
dec
jmp
ret
inc
sub
imul
mov
xor
inc
cld
jne
inc
mov
insb
aaa
jnp
fnstsw
inc
push
jns
adc
sub
xchg
orl
sbb
jecxz
ss
pop
ret
pop
dec
cltd
dec
inc
add
dec
sub
jno
lods
and
nop
in
xor
shrb
add
push
test
push
push
and
loopne
push
sub
push
arpl
movsb
ficoms
pop
mov
pop
call
ljmp
and
adc
jp
jge
push
test
andb
rorb
add
fdivp
sbb
jo
dec
iret
cmpsb
and
xor
rol
int
test
jne
mov
mov
lahf
ss
outsb
ja
js
and
jno
pop
add
mov
ds
gs
xor
sarl
inc
stos
mov
orb
cmp
in
scas
into
sub
aad
cmp
out
lret
ja
movsb
mov
cli
mov
inc
out
negb
mov
shrl
lahf
fwait
push
clc
popl
enter
dec
xchg
jmp
inc
push
mov
inc
mov
fstps
push
push
jb
stos
or
test
mov
lcall
mov
jns
push
push
jp
int
daa
pop
iret
mov
push
or
push
sbb
sub
sbb
mov
popa
mov
mov
jno
lea
ds
inc
push
xchg
das
mov
jecxz
pop
cmp
cmc
jb
mov
roll
lods
cmp
mov
lret
mov
popa
jmp
movsb
sub
aas
aad
push
rcrl
test
std
fildll
in
lods
xorl
inc
lcall
or
push
sub
repz
test
nop
subb
cmp
fwait
dec
movsb
or
adcl
lahf
addr16
out
or
cmp
mov
add
shrl
push
sti
pop
jbe
sbb
sahf
cwtl
dec
scas
imul
and
ret
ret
and
bound
fisubl
test
xchg
mov
lahf
or
mov
cmpl
push
pop
cli
cmc
rcrb
mov
push
jne
in
nop
jmp
sub
fadd
xlat
mov
rcr
or
sarl
mulb
out
add
xchg
fwait
dec
xchg
adc
push
dec
jnp
lret
mov
xor
in
push
insl
adc
fs
jg
inc
inc
push
aad
insb
lahf
or
lock
push
scas
out
dec
popf
cmp
test
adc
cmp
push
lea
mov
adc
push
xchg
hlt
dec
insl
call
icebp
insb
insb
cmp
xchg
sub
jecxz
lods
mov
mov
adc
nop
xchg
add
sbb
jg
cmc
pop
pop
and
and
leave
stc
roll
sub
push
cs
sbb
jmp
xor
test
pop
movsb
lret
pop
xorl
int3
pop
sbb
lret
mov
ss
pop
adc
push
stc
iret
push
lds
adc
ljmp
sub
jae
adc
js
mov
bound
mov
push
rclb
andb
pop
jecxz
xchg
sbb
repnz
stc
into
mov
push
jns
add
lods
pop
out
mov
outsb
pop
pop
push
xor
jbe
aam
test
add
jmp
and
xchg
ficoml
std
push
push
and
push
aad
dec
pop
add
jle
popa
xor
mov
cld
xor
shl
sbb
pop
inc
arpl
or
jle
xor
stc
xor
jo
jno
rolb
orl
mov
and
inc
cmp
mov
jo
test
cmp
popf
fists
mov
lock
jge
inc
arpl
jecxz
pop
hlt
pop
clc
jl
pop
pop
outsb
and
stos
sbb
mov
mov
js
ljmp
jmp
cwtl
and
adc
mov
mov
xor
dec
inc
test
adc
cmp
pop
adc
push
sbb
movsb
iret
jg
stos
jnp
inc
mov
gs
rorl
mov
jne
cmp
sub
into
gs
xchg
lods
xchg
jg
pop
fmul
mov
xor
mov
mov
xorl
test
jmp
rol
mov
outsb
push
pop
out
push
cmp
lret
xor
cmp
aam
xchg
pop
lcall
fsub
out
cmp
sarb
mov
mov
pop
push
or
incb
test
and
cmpsb
cwtl
and
dec
xchg
inc
add
sub
bound
lea
sbb
pop
call
mov
leave
jae
lcall
or
and
pop
and
mov
sub
jnp
movsl
jno
cld
inc
push
cltd
bound
push
or
push
mov
imul
adc
dec
mov
mov
mov
push
imul
dec
jmp
cmpsb
cs
je
stc
shr
scas
sub
add
sub
imul
jle
test
mov
add
pop
push
daa
fwait
iret
ds
add
xlat
and
pop
jbe
inc
mov
cmpsb
mov
mov
fistpll
sbb
xor
lahf
xorps
mov
mov
test
mov
clc
push
cmpb
and
and
je
pop
cli
cwtl
jo
ja
lahf
or
and
aaa
and
bound
sub
ret
pop
mov
sbb
add
loop
mov
push
or
rcl
and
pop
jbe
or
sub
xor
sub
loopne
push
je
test
leave
aas
fwait
popa
cli
rcll
mov
pop
out
dec
out
sarl
jmp
inc
xor
add
xor
cli
negb
jb
sbb
pop
pop
scas
cmp
jg
jo
lea
into
jle
mov
push
fsubrl
ret
insb
rcll
fimull
adc
cmp
pop
cmpsl
push
pop
inc
cld
out
and
fcomps
mov
in
inc
adc
test
sub
pop
mov
cs
aad
je
mov
outsl
pop
fsubs
mov
outsl
movsb
lods
mov
in
in
or
xchg
cmpsb
pop
sbb
xor
cmp
cmpsl
dec
sbb
xchg
je
mov
js
daa
jmp
jecxz
cs
mov
js
orb
mov
sub
cmp
push
xchg
and
push
sbb
mov
cmp
add
ljmp
jg
in
cli
sbb
jns
icebp
in
rorb
xchg
sahf
lcall
lcall
icebp
nop
lods
add
xor
das
or
sub
fwait
aam
movsl
shl
fisttpl
or
push
push
lret
outsl
mov
push
add
mov
test
loop
ljmp
xchg
xlat
int
dec
insb
fidivrl
pop
sub
push
adc
fcoms
mov
lods
cwtl
rcrl
mov
pop
stos
imul
push
push
pop
into
jnp
neg
and
pop
jle
fidivrs
sbb
cmp
mov
fst
insl
push
aaa
loopne
pop
and
scas
in
push
sahf
sbb
and
xor
sti
jge
jg
or
les
ror
xor
ljmp
jbe
sahf
test
mov
push
push
cwtl
add
inc
fisubrs
push
ja
clc
stos
iret
cltd
outsb
mov
xor
push
fs
stos
sub
pop
sti
add
sti
cmp
daa
pop
lret
push
jl
scas
pop
mov
pop
icebp
lahf
sbb
in
sahf
mov
sub
pop
repnz
push
fistpl
sbb
out
movsb
mov
or
rclb
cmp
push
pop
push
mov
sub
push
fldenv
xor
flds
inc
incb
fistpl
out
cltd
std
or
or
sub
inc
mov
jmp
ret
int
ja
sub
xchg
das
adc
dec
shrl
pop
out
rcl
and
pop
test
pop
lock
dec
imull
push
jle
data16
test
xor
xchg
hlt
imul
je
test
jmp
cli
and
cmc
xchg
scas
test
adc
mov
mov
pop
pop
daa
xchg
pop
mov
sahf
jb
lcall
push
dec
ja
stos
fsubrs
mov
push
aas
insb
sbb
inc
mov
jmp
lret
pop
jg
es
xor
jg
dec
pop
rclb
int3
js
scas
subl
add
mov
out
jp
ds
jae
mov
jns
shrb
fwait
lea
cld
insb
pop
pop
push
sbb
push
mov
push
dec
int3
or
push
iret
ret
dec
xor
das
push
icebp
sarl
push
add
pushf
push
xchg
sub
push
cwtl
add
push
pop
dec
stc
push
fimuls
ret
mov
lods
jecxz
aam
shlb
in
dec
repz
repnz
pop
stos
inc
inc
sbb
outsb
mov
inc
mov
dec
pop
sub
and
ret
js
mov
xor
xor
adc
imul
in
sub
dec
enter
sbb
aad
xor
clc
pusha
test
dec
and
push
jns
push
inc
xchg
mov
out
popf
sbbl
je
fwait
outsb
int3
dec
push
cmc
das
mov
mov
das
clc
or
mov
ret
mov
iret
xor
mov
xchg
in
arpl
ret
mov
lea
ljmp
push
pop
lret
lods
xlat
test
test
enter
and
jp
filds
mov
xor
xchg
fisubrl
lcall
jge
jp
dec
mov
sbb
xchg
cwtl
dec
mov
xchg
rolb
mov
xchg
push
ror
pop
sarl
stos
mov
jle
xor
mov
pop
mov
jbe
fdivp
lret
dec
mov
aaa
xchg
push
into
outsl
popl
aaa
test
cmp
push
enter
lret
test
xchg
outsb
xchg
mov
js
mov
fs
jns
push
mov
test
cmpsl
push
scas
push
je
daa
repnz
repnz
mov
xchg
jp
and
mov
lods
cmp
shlb
and
out
in
jg
push
pop
mov
js
xchg
xchg
call
and
xchg
cmp
test
sbb
push
and
std
push
mov
jg
lds
lock
pop
mov
inc
adc
dec
hlt
arpl
dec
push
in
push
les
cmc
cmp
or
dec
mov
outsb
push
movsb
push
cmp
and
call
sahf
dec
pop
mov
or
aam
inc
xchg
or
orl
inc
adc
incb
aam
push
jl
pop
aad
fucomip
sub
ja
mov
adcb
mov
test
cmp
mov
push
jmp
icebp
out
push
adc
inc
cmp
jnp
adc
sbb
sbb
inc
inc
add
inc
push
jmp
xchg
fsts
and
xchg
add
sbb
sub
test
fnop
dec
popa
sub
lds
xchg
jmp
jl
dec
in
dec
and
rol
mov
call
test
mov
sbb
push
pop
pandn
inc
mov
push
push
pop
lret
push
sbb
cmc
lcall
orb
shlb
sti
xor
je
and
push
cmp
in
push
sub
cmp
jecxz
pop
mov
mov
test
pop
daa
cmp
pop
les
dec
adcb
repz
fdiv
xor
shlb
mov
jge
in
lahf
ljmp
mov
fldln2
div
cmpsb
movsb
popf
nop
mov
jne
push
add
mov
aam
sub
mov
xchg
pop
sub
testb
ret
stc
popaw
or
stos
and
and
mov
jnp
sub
cltd
icebp
in
or
xor
aad
dec
dec
pop
jge
inc
ret
into
call
cmp
sbb
mov
ss
data16
fdivrl
mov
repnz
lods
ficomps
rorb
addr16
stos
insb
inc
and
je
pop
add
mov
fstl
fs
inc
iret
enter
sbb
movsl
enter
mov
sbbl
bound
imull
sbb
repnz
orb
adc
push
fcompl
mov
scas
mov
xchg
das
addr16
xchg
mov
mov
mov
pop
xchg
pop
cmp
xchg
jge
lahf
xor
pusha
iret
mov
sub
shll
jbe
pusha
rclb
repz
xlat
fmull
push
repz
and
out
add
inc
pop
lret
addr16
bound
cmp
cmp
mov
sbb
lret
or
clc
cmc
ss
seto
je
jne
xchg
jo
faddl
xchg
push
pop
mov
imul
mov
mov
fsubr
or
xchg
sbb
rcrb
rcl
inc
out
mov
xor
and
dec
lds
pop
ss
mov
inc
sub
mov
int
sbb
pop
mov
enter
jne
xchg
sub
or
cmp
sbbb
fcomi
adc
jge
repz
inc
inc
aas
push
inc
dec
xor
lds
sbb
lcall
push
push
pop
push
addb
enter
add
sub
inc
xchg
push
ds
add
or
vpcmov
add
inc
jmp
inc
mov
fs
rolb
pop
add
cmc
jmpw
mov
cmpsl
mov
fs
ret
sub
xchg
lds
adcl
mov
fistpll
icebp
and
or
movsl
mov
sbb
inc
push
sbb
push
sbb
std
xchg
push
lds
outsb
mov
add
cmp
fnstenv
mov
mov
test
xchg
les
sbb
aam
mov
cli
mov
jp
lret
in
lods
push
out
xchg
pop
test
sub
movsb
aaa
cmpsl
add
jmp
jp
dec
add
lock
inc
aas
cltd
stos
mov
imul
vmwrite
js
loop
mov
orl
insb
les
jno
iret
mov
jo
movsl
or
dec
aas
cltd
and
push
cmp
hlt
or
jecxz
lcall
shl
fldt
adc
xor
jmp
xor
sbb
lods
jg
bound
ret
add
xor
and
loopne
xchg
sarl
or
xchg
fs
into
movsl
inc
cmp
push
addl
mov
cwtl
ja
xor
clc
cmp
mov
sub
fcmove
sbb
addb
jg
inc
dec
insb
pop
test
out
dec
lret
xchg
daa
fistps
ljmp
jmp
dec
lret
ja
adc
out
or
ja
pop
ret
ret
pop
or
shlb
out
adc
push
movsl
add
in
push
dec
jge,pt
jne
loop
lods
lret
test
fwait
pop
enter
arpl
inc
push
les
and
imul
sahf
mov
adc
aaa
xor
iret
adc
in
mov
push
cmp
push
jmp
loope
sbb
fs
je
subb
xacquire
fidivrs
mov
adc
mov
push
mov
pop
sub
mov
andl
xor
icebp
fnstsw
pop
mov
mov
mov
push
sbb
mov
cli
pop
cmc
xchg
and
cmp
mov
ja
test
lret
clc
loopne
xchg
inc
je
add
pop
lcall
pop
shlb
call
sub
push
xchg
inc
cmpb
pop
test
out
cmp
nop
les
cmpsl
ds
repnz
push
fisubl
ficoms
fmul
aad
pushf
out
out
or
or
fstps
sub
test
ljmp
mov
sbb
dec
or
dec
xchg
nop
push
add
stc
jg
push
mov
mov
pop
lods
gs
xchg
lret
dec
ljmp
jae
lds
sti
inc
mov
cmp
inc
cmp
sbb
xchg
lret
xchg
cmp
imul
or
mov
jns
fildll
test
in
inc
adc
js
mov
std
rcll
loopne,pn
sub
out
cmp
cmp
or
movsl
xor
mov
sbb
clc
lret
add
cltd
xchg
mov
xchg
dec
and
cmpsl
cmp
mov
popw
js
movq
and
aad
mov
shll
es
es
lock
push
pop
movsb
pop
sbb
stc
in
adc
cmpsb
push
add
push
ja
mov
jge
sub
xchg
mov
push
ja
add
pop
mov
xor
and
jecxz
rorb
pop
fsubrl
mov
push
aas
prefetch
lds
rorb
in
out
cmp
je
jl
popf
addr16
adc
lds
icebp
cmp
js
mov
push
repz
adcb
lods
mov
add
scas
shrb
es
cmpsl
pop
mull
aam
xchg
sbb
js
gs
lods
into
mov
mov
inc
stos
sbb
pop
gs
and
cwtl
lods
xchg
inc
sub
pop
cmp
sbb
gs
popa
sub
sub
scas
rolb
cltd
sub
fimuls
cmp
pushf
in
xor
je
shll
bound
std
mov
mov
adc
iret
xor
mov
xchg
mov
cmc
jo
mov
xchg
aad
or
and
out
mov
cli
out
pop
in
mov
lods
aam
push
lret
and
and
loopne
or
outsb
lret
cmp
inc
pushf
mov
jmp
test
pop
ret
inc
jno
not
dec
mov
xor
sbb
push
push
fadds
cmp
sbb
dec
in
mov
call
pop
xchg
fwait
nop
andb
fstpl
loope
or
adc
insb
shrl
testl
int
in
outsb
lret
inc
cmp
fnstsw
ficomps
in
inc
fisttpl
hlt
hlt
out
je
jnp
xor
mov
cli
lea
leave
stos
flds
mov
mov
push
adc
icebp
int
insb
push
ss
test
xlat
cmpsb
bound
and
or
std
xchg
loopne,pt
or
add
inc
call
pusha
xor
jge
int3
ja
cmpsl
mov
dec
pusha
adc
lods
lcall
pop
aaa
lods
mov
dec
cli
cld
xchg
inc
bound
sarb
jnp
lahf
dec
push
data16
or
cwtl
mov
lea
jmp
jecxz
lods
jno
sbb
test
inc
mov
cmp
dec
mov
fwait
jle
add
mov
inc
and
sub
data16
repz
xchg
cltd
loope
rcr
push
iret
out
sbb
loope
imul
int
push
cmc
jnp
add
or
int
pop
jmp
aam
testb
mov
outsb
mov
xor
mov
push
jge
jno
ret
pop
decb
mov
stos
nop
fsubrl
mov
incl
xor
sbb
cmpsl
in
test
cmpb
push
push
xchg
inc
in
lret
mov
mov
dec
cmp
mov
adc
cmp
adc
inc
pop
and
hlt
loop
scas
xchg
lds
pop
mov
fsubp
jmp
and
aad
sbbl
aad
ret
jae
and
mov
and
inc
arpl
adc
jnp
loopne
add
push
and
ret
mov
adc
lods
xchg
push
dec
shrb
lcall
xlat
fisubrs
sub
movl
insb
pop
sub
das
iret
shrl
cmp
aaa
mov
inc
jno
movsb
mov
xlat
mov
ret
mov
cmp
jo
decl
rorl
dec
push
addr16
int
movsb
push
mov
sbb
jg
les
jg
bound
adc
and
orl
and
mov
adc
dec
int3
mov
stos
mov
inc
mov
jbe
aaa
adc
mov
sbb
mov
addl
cltd
insl
lcall
sub
dec
mov
inc
lods
nop
mov
je
frstor
outsl
xchg
sbb
sbb
pop
shlb
dec
pop
add
lahf
out
shrb
ds
pushf
es
lcall
adc
fmull
movsl
mov
cwtl
mov
cmp
stos
fldenv
jno
xor
or
mov
sbb
push
xor
int
adcl
xor
in
ret
ss
test
sbb
xchg
inc
rclb
lret
repnz
mov
cs
test
xor
xchg
rorb
jb
cmpsl
xor
inc
adc
or
ja
aad
shll
bound
mov
sbb
pop
stc
xchg
sbb
mov
xchg
mov
add
test
out
lods
xorb
fsubrl
adc
pop
mov
push
test
pop
mov
shll
xlat
icebp
frstor
dec
rcl
sbb
xor
outsl
std
jne
lcall
call
mov
pop
repz
js
and
jl
inc
cmp
fnstcw
popf
nop
jle
jno
iret
push
mov
imul
jns
sbb
jnp
repz
add
sub
pop
dec
push
add
mov
sbb
push
testb
adc
cmp
mov
pop
mov
mov
push
ficoms
faddl
out
push
xchg
lods
inc
ja
pop
and
shll
adc
cmc
jmp
xchg
loope
inc
mov
fs
jle
in
cld
mov
and
push
outsl
mov
daa
xor
addl
notb
jmp
outsb
sbb
sub
dec
aam
sbb
mov
mov
scas
lods
pop
cmpl
jp
push
nop
fistl
rclb
sub
pop
out
int
mov
js
leave
in
lock
test
adcb
inc
jmp
das
xchg
loope
pusha
jno
dec
fs
dec
outsl
hlt
popf
push
and
les
loop
inc
pop
insb
xor
xchg
cmp
aaa
mov
rclb
cmp
jl
add
sub
and
dec
xor
dec
cmp
inc
cld
mov
pop
jb
add
mov
xor
stos
sub
mov
sub
push
xor
pusha
aas
jmp
jp
test
mov
push
xchg
push
icebp
fiaddl
push
test
push
mov
push
mov
test
lahf
cli
ds
shrl
fwait
jmp
sbb
lahf
cmpsb
dec
movsbl
xor
cmc
or
negb
pop
dec
arpl
jno
sub
std
div
cmpsb
mov
jg
ljmp
push
cmp
jnp
mov
cmp
mov
dec
cld
pop
or
stos
mov
lock
lock
cwtl
stos
or
cmp
fimuls
lods
cwtl
cmpl
inc
xor
popa
sub
sbb
popa
xadd
lret
push
and
test
inc
test
lahf
lods
cmp
leave
adc
fs
rolb
outsl
dec
in
outsl
lret
int3
outsl
cmpb
es
js
pop
cli
call
pop
adc
pop
xor
xchg
icebp
and
push
cld
orb
call
into
mov
out
push
int3
mov
mov
call
dec
cmp
insb
sbbb
push
jp
movsl
movsb
pop
sub
jge
inc
and
fisubl
scas
es
or
jmp
and
test
jae
repnz
cmp
push
loop
pop
loopne
mul
push
xchg
inc
mov
andl
inc
aaa
fidivrl
pop
test
jb
xchg
clc
or
in
ja
and
mov
or
rcrl
loope
pushf
test
rol
andb
out
xchg
sbb
cmp
or
xchg
scas
lea
push
adcb
enter
ret
enter
outsl
add
cmp
ficoms
dec
aad
mov
mov
push
mov
es
repnz
lea
popf
sub
ret
add
les
mov
jecxz
adcb
jnp
sub
sub
cwtl
sub
pop
in
cmpsl
mov
lods
sub
cmp
adc
lods
dec
cmp
inc
stos
xchg
test
icebp
cmp
divb
testb
inc
and
push
aad
mov
rcrl
add
push
dec
data16
adc
aam
addr16
dec
push
cld
xchg
pop
js
push
jle
cwtl
push
gs
lds
out
lret
lock
movl
stos
jb
roll
or
data16
scas
ret
adc
mov
outsl
nop
ja
pop
pusha
out
pop
addb
cli
jbe
inc
pop
inc
call
inc
test
test
repz
push
pop
sbb
test
ljmp
pop
lahf
inc
pop
js
jbe
cmc
mov
push
push
inc
adc
into
push
ds
pop
frstor
clc
mov
arpl
daa
lds
sti
daa
cmp
cwtl
adc
sbb
xchg
cmp
and
shll
inc
jae
pop
or
scas
les
popa
xor
add
lcall
push
sub
push
push
stos
aad
dec
fcmovbe
mov
addb
loopne
jo
aas
int3
ror
pusha
je
mov
cmp
mov
imul
sbb
test
jns
ret
ja
out
scas
mov
ret
jmp
cmp
and
fstps
fsubs
ror
into
dec
xor
pop
das
mov
out
adc
cmp
lret
shll
mov
outsb
fcomps
dec
inc
adc
cmp
jle
sahf
jecxz
lret
shll
mov
fwait
sbb
nop
sub
mov
sbb
adc
stos
sub
sub
sub
dec
rcrl
mov
push
lock
test
pop
mov
cmp
ja
daa
shrb
mov
or
adcb
inc
pop
sub
cmp
adc
dec
inc
iret
lods
cld
jp
sbb
stos
or
shl
inc
pop
std
movsb
and
adc
aaa
adc
cmpsl
mov
push
and
dec
into
push
loope
aas
jge
ja
cmpsl
das
push
in
les
or
cld
rcrl
inc
jge
jp
cld
and
add
or
int
dec
adc
out
in
push
jae
aaa
inc
enter
sbb
rolb
sub
xlat
aas
mov
xor
test
cmp
jns
les
cmpsb
into
lock
pop
mov
fdivrl
loopne
pop
mov
adc
cmp
sub
pop
sub
scas
dec
jnp
pop
add
jb
push
lock
pop
idivl
push
mov
xor
ret
movsb
pushf
fisubrs
pop
push
mov
aaa
in
dec
hlt
jecxz
test
divl
dec
jne
lea
jle
lcall
or
push
loope
push
jae
mov
jae
adc
and
jge
cli
pop
xchg
cmp
xor
stos
mov
loope
inc
mov
fildl
mov
jge
dec
push
push
or
sbb
shll
jmp
pop
mov
xchg
push
and
push
xor
ss
insl
add
jecxz
aaa
imul
int3
dec
jmp
orl
mov
out
or
lea
push
leave
gs
rcrb
adc
pop
xchg
aam
daa
jmp
mov
pop
inc
xor
fsubr
lds
lret
mov
mov
inc
mov
popf
mov
gs
rcll
mov
pop
cld
repnz
ljmp
cld
mov
adc
add
jp
icebp
mov
loope
add
dec
ja
adc
mov
in
out
dec
into
xchg
call
or
mov
mov
notb
movsl
xchg
sbb
adc
cmp
pusha
insb
cmp
pop
pushf
sbb
xor
jb
gs
divl
push
sub
icebp
jp
repnz
mov
mov
adc
mov
mov
imul
mov
scas
lar
fidivrs
mov
mov
jns
addr16
sbb
dec
sti
or
cmp
inc
in
out
cmp
pop
mov
push
sbb
dec
add
and
mov
mov
in
cld
adc
dec
lds
idivb
shlb
sbb
or
xchg
push
in
mov
leave
jns
mov
gs
push
mov
or
sbb
jbe
shl
cmc
test
adc
cwtl
into
lods
lock
jo
sbb
mov
mov
loopne
adc
jmp
popa
add
cmpsb
push
mov
dec
jo
xor
andl
xchg
aas
jo
push
mov
xchg
bnd
fmulp
pop
add
pop
loop
test
jle
iret
mov
adc
leave
xor
sub
out
dec
test
mov
lret
mov
iret
jle
add
xchg
adc
insb
mov
shll
mov
js
push
push
les
dec
pop
or
arpl
xchg
or
sub
jmp
aad
or
or
jns
jae
xchg
jle
sub
xor
push
xchg
cli
leave
icebp
sbb
loopne
in
in
inc
dec
sbbb
push
imul
js
adc
rcr
pop
cmp
mov
or
push
arpl
lahf
sbb
popw
es
add
leave
jle
scas
movsb
push
lds
iret
adc
ja
mov
int
sub
lods
ja
fcomip
int
into
push
xchg
xor
push
xchg
xchg
inc
loope
into
hlt
cld
test
cmp
dec
jns
push
inc
push
repz
fsts
aam
pop
in
stc
mov
sub
nop
sub
mov
fsubr
pop
or
mov
in
inc
das
jae
rolb
fisubrs
movl
andl
xlat
or
xchg
pusha
cltd
insl
mov
jmp
leave
fs
fldl
xor
cmp
lahf
xchg
pop
or
add
jbe
lock
lods
lret
sbb
nop
mov
mov
arpl
mov
sub
nop
adc
mov
pop
cmp
cs
ficoms
push
inc
adc
push
fisubl
pop
icebp
aaa
fstpt
dec
fistl
subb
dec
ljmp
push
cmpsl
dec
lret
popf
out
mov
daa
jb
ds
sbb
xor
push
fwait
stc
mov
fs
sbb
jnp
sub
hlt
leave
ret
cmp
enter
iret
sar
fwait
shl
or
sub
add
xor
jl
adc
xor
imul
repz
imulb
jns
sar
or
mov
outsb
xlat
ds
push
xchg
subl
addr16
cmp
fwait
cmp
notb
pop
stos
add
aad
data16
add
mov
xor
sub
loopne
pop
out
jo
insb
cmpl
ffreep
dec
dec
pop
test
pop
push
cmp
loope
add
xchg
mov
inc
ds
mov
aas
inc
js
mov
jle
xchg
cwtl
sbb
and
rcrl
sbb
dec
in
scas
addr16
adc
sar
sbb
ja
notl
fwait
imul
mov
add
sar
pushf
and
mov
fidivs
movb
leave
and
fnstenv
mov
inc
mov
call
jl
aaa
or
push
jns
jecxz
cmpsl
mov
push
pusha
mov
sbb
addl
lcall
movsb
mov
xorb
pop
ret
das
aad
push
dec
mov
mov
mov
clc
sbb
jb
imul
test
mov
push
movsb
rclb
mov
push
int
lea
cli
dec
popf
mov
loop
and
jns
adc
adc
ret
pop
xlat
das
xorb
stc
sbb
xchg
arpl
sbb
pop
test
push
iret
mov
insl
mov
repnz
mov
push
cmp
pop
jae
or
fidivrl
inc
xchg
push
mov
sbb
add
aas
inc
scas
out
pop
fldenv
or
mov
push
push
sub
mov
hlt
pop
adc
push
in
cmp
popf
xlat
xor
icebp
dec
xchg
fisttpl
lahf
mov
inc
scas
sbb
test
popa
push
add
or
and
outsb
roll
ss
fs
jb
pusha
sbb
inc
push
fdivp
jge
push
push
mov
xor
xchg
arpl
or
mov
scas
loope
or
ljmp
inc
scas
cld
aas
mov
mov
adc
sub
inc
jbe
jne
sti
sub
xor
cmpsb
iret
in
xchg
or
jge
jp
inc
mov
out
mov
push
or
or
or
int
aad
dec
gs
fisttpll
fs
pusha
mov
sub
mov
in
mov
mov
adc
jae
dec
or
icebp
mov
das
and
and
cltd
dec
dec
xor
into
mov
adc
cmp
mov
pushf
push
leave
lahf
sbb
lcall
testl
loopne
cltd
fwait
shl
call
aas
out
std
imul
jns
mov
hlt
std
mov
notb
mov
mov
sub
xchg
scas
fucomi
lret
cmp
in
jge
imul
pop
or
into
in
aam
push
adc
fldt
in
cmc
jb
sbb
leave
mov
mov
inc
das
lret
pop
xchg
jle
insl
lods
cmp
jns
incl
jp
mov
mov
adc
call
dec
out
pop
stos
test
divl
and
lea
mov
inc
out
outsl
push
pusha
repz
lcall
mov
cmp
dec
fcom
flds
sbb
jbe
enter
aam
les
mov
loopne
inc
adc
lods
push
xchg
mov
aas
sub
test
inc
xchg
xchg
into
negl
stos
xorl
push
in
or
mov
in
sub
mov
sub
xor
cmp
inc
ret
mov
pop
int3
rclb
sahf
fnstcw
push
ds
mov
mov
sub
inc
inc
rcrl
shll
fisubs
gs
in
or
lock
faddp
das
dec
test
lock
aaa
pushf
and
push
clc
shlb
push
fldenv
ss
test
stc
dec
icebp
cs
xchg
push
out
mov
fsubl
sub
push
insb
outsl
call
dec
cmp
or
lds
cmpsb
pop
jge
jg
stc
xchg
or
fidivrl
ret
pop
lret
sbb
pop
or
sbb
pop
ljmp
in
add
push
jo
mov
movsl
pushf
ljmp
pop
je
shll
int3
cmp
add
push
push
adc
push
test
rol
test
pop
add
test
in
adc
inc
les
mov
and
dec
jle
inc
inc
pop
cmpsl
cld
sbb
mov
inc
loope
mov
repnz
mov
jle
xchg
push
jno
dec
addr16
addl
add
sbb
inc
sbb
and
in
cmp
bound
dec
mov
pop
xor
or
adc
negl
sahf
or
outsb
bound
das
jmp
push
and
imul
sbb
jae
fadds
pop
jle,pn
jb
dec
cmpsb
hlt
movsb
divb
pop
sub
cmp
dec
mov
leave
sub
push
push
popf
ds
add
fldl
arpl
inc
sub
andl
cmp
inc
mov
adc
sahf
push
cmp
push
cmp
test
leave
aas
cs
pusha
in
inc
cltd
mov
movsl
shr
lods
pushaw
sub
test
imul
mov
out
jb
jnp
pop
gs
jo
shrl
cmpl
insb
pushf
pop
sbb
inc
jle
mov
xchg
ja
adc
sub
mov
push
imulb
xor
daa
cmp
movsl
mov
xchg
lcall
cmp
pop
outsb
aad
inc
jne
subb
mov
test
aam
or
es
hlt
clc
adc
roll
pop
jge
outsb
adc
pop
add
cmc
cli
push
ljmp
dec
and
aad
aad
ja
push
fwait
das
and
ss
in
sbb
fcompl
test
addb
jp
push
popa
pop
push
push
cmp
lods
push
rcll
xor
and
dec
mov
mov
loopne
jae
xor
inc
fbstp
test
jno
lea
adc
inc
mov
mov
fcoml
das
mov
dec
test
cmc
and
sahf
ljmp
movsl
jb
shlb
lods
jge
scas
test
out
and
jb
add
repz
xchg
adc
adc
ljmp
xlat
es
nop
repnz
pop
mov
push
imul
es
add
mov
and
enter
dec
lea
push
xchg
repz
cmpsl
xor
cmp
xor
sbb
repnz
mov
xor
pop
push
outsb
int3
cmp
mov
call
or
ljmp
dec
imulb
subl
mov
int
mov
fnstcw
xchg
dec
mov
mov
and
cmp
scas
mov
fnstcw
add
ds
roll
scas
jnp
xchg
iret
add
in
mov
or
push
leave
pop
or
sub
pop
call
or
sbb
testl
aas
fisubrs
mov
pop
cwtl
pusha
jo
mov
inc
stc
push
push
jo
sbb
out
nop
adc
out
pushf
mov
pop
or
rclb
aad
push
adc
call
push
cmp
sub
aam
popf
or
aaa
ds
faddl
fnstenv
cltd
fildll
jmp
inc
push
roll
test
xlat
xchg
push
in
leave
outsl
gs
xchg
push
jnp
fwait
cmp
in
push
pop
cmp
xchg
std
movsl
cmpsb
and
pop
into
jg
push
aad
mov
cwtl
inc
mov
das
sarb
jmp
mov
jno
lret
repnz
xchg
push
test
rcll
mov
loop
jl
or
fdivl
enter
mov
mov
xor
mov
push
icebp
jns
nop
in
fsubrl
inc
lods
shll
inc
in
cmp
fndisi(8087
lods
fisubrs
pushf
pusha
enter
addr16
push
inc
xor
arpl
xor
cmp
adc
loope
in
lret
pop
mov
ret
mov
mov
push
adcl
test
cmpsl
mov
and
scas
jp
push
scas
pop
xchg
es
adc
bound
addl
xorl
push
push
sub
in
push
cltd
out
mov
push
ficomps
and
dec
dec
cmp
add
imul
pop
xchg
outsb
sub
mov
mov
cmp
push
cmc
mov
jl
cmp
nop
add
nop
out
lea
push
nop
mov
fwait
aam
scas
lcall
repz
mov
add
in
test
jno
jb
loopne
inc
mov
cmc
rclb
mov
test
jecxz
cld
inc
mov
push
repz
int
cmpsb
mov
in
xlat
imul
add
shll
test
sti
fimuls
movsb
lods
mov
and
add
cmp
adc
lods
inc
add
jle
xor
mov
repz
mov
cmpsl
xchg
jge
popf
mov
ds
jae
out
int3
cli
xchg
push
jge
stos
stos
rorl
out
cmp
jge
cld
jl
or
xor
jne
out
jne
sbb
es
mov
pop
push
mov
cmp
in
lret
xor
movsl
sbb
sub
iret
pop
mov
dec
push
and
xchg
xor
adc
inc
xor
adc
add
test
rcl
xchg
js
imul
and
sub
xlat
ret
fnsave
adc
fs
mov
je
mov
pushf
xchg
int3
jb
and
push
mov
mov
adc
in
pop
mov
add
cmpsl
xchg
outsb
in
cmpsl
and
pop
or
pop
mov
or
mov
aad
sbb
jae
cmc
test
push
mov
ffree
sbbl
sarb
cmc
pop
into
data16
cmp
push
pop
ja
and
fisttpll
sbbb
pop
stc
pop
cmp
mov
sbb
pop
ret
sbb
jge
mov
xchg
or
mov
jnp
gs
mov
pop
leave
pop
mov
arpl
fidivrl
fsubr
bound
mov
sbb
push
jecxz
js
adc
sbb
sbbl
fimull
scas
sub
cmp
enter
out
cwtl
pop
ds
clc
fsubs
lret
lock
pushf
notl
xor
insl
ljmp
icebp
xor
and
daa
imulb
pop
pop
jo
jle
push
mov
pop
rcrl
frstor
outsl
xchg
cmpsb
pop
mov
and
push
lahf
mov
adc
pop
jo
fs
add
stos
and
mov
xlat
stc
add
xor
sbb
mov
dec
xchg
arpl
vpmacswd
ljmp
push
scas
lock
leave
imul
test
ljmp
es
xchg
scas
pop
dec
jae
dec
cmpsl
and
push
test
jecxz
addr16
ljmp
movsl
ficompl
xor
jmp
repnz
inc
cmpsl
rclb
hlt
std
inc
inc
xor
iret
add
imul
out
sbb
js
push
js
and
pop
hlt
adc
mov
pusha
jmp
mov
and
jg
bound
pop
in
nop
into
mov
fldl
ja,pt
les
fidivrs
clc
callw
maxps
ret
cmc
push
daa
stc
insl
or
xor
out
nop
sub
push
mov
xchg
test
out
push
rcl
jb
insl
das
cmp
push
cs
mov
andl
pop
inc
flds
loope
arpl
xchg
repnz
push
mov
jno
add
arpl
ss
fisttpll
xchg
inc
add
mov
fmulp
mov
jae
fisttpl
out
mov
xchg
cltd
arpl
sahf
sbb
out
bnd
mov
inc
out
insl
mov
test
dec
cltd
inc
lock
iret
test
mov
push
pop
imull
jno
cmp
mov
loop
pusha
mov
cmpsb
out
add
dec
cmp
movsl
adc
sbb
fcomps
lahf
inc
lock
fs
jp
bound
in
pop
enter
stos
fwait
push
mov
loope
add
sub
jg
push
pop
fstpt
neg
inc
inc
jle
jg
dec
repz
and
in
enter
dec
adc
mov
push
mov
mov
sahf
cmpsl
xor
rol
ja
sub
das
out
jg
cmp
clc
inc
pop
or
dec
dec
lds
loop
loope
and
pop
push
pushf
in
mov
gs
jmp
jmp
sub
jge
dec
sbb
add
fdivr
gs
insb
hlt
std
lods
push
inc
jg
sbb
daa
mov
cltd
xchg
ljmp
popf
notl
cmpsl
cmp
sbbb
xor
or
cmp
adc
cld
pop
movsl
inc
and
stos
xchg
rorl
inc
test
or
jp
repnz
in
lret
cltd
add
mov
pop
jno
ljmp
and
sbb
pop
test
scas
out
shl
daa
loop
outsb
aaa
call
push
shll
cld
pop
int3
sbb
imul
addr16
push
sbb
sub
adc
pop
push
and
mov
mov
mov
and
mov
adcl
sarb
jno
test
loopne
mov
sbb
dec
sub
cld
das
je
mov
bound
fstp
sbb
jne
push
pop
pop
sub
push
mov
insl
les
jnp
add
xor
add
jae
cmp
xchg
pop
add
aas
or
fidivl
adc
fdivrs
rcrl
flds
mov
jns
js
sarl
push
xchg
mov
rcrl
loop
mov
fcmovne
or
lcall
rep
cld
and
pop
pop
inc
js
xor
jo
mov
std
scas
and
test
jmp
adc
adcl
mov
and
icebp
lods
jns
and
xchg
lcall
pop
xor
add
fbstp
popa
push
das
mov
aaa
popf
inc
repz
pop
xchg
cld
icebp
ret
pop
pop
jp
test
in
imull
ret
cmp
ss
jo
xchg
mov
push
jbe
mov
xchg
repnz
iret
inc
insl
xor
cmpl
mov
sub
mov
cmc
jns
and
in
cmc
cmp
sub
xlat
add
scas
ret
imul
out
adc
enter
out
in
inc
jl
add
fsubs
daa
or
sub
mov
leave
or
mov
and
inc
jno
ficoms
dec
pop
jecxz
test
arpl
ss
push
pop
jle
in
push
jae
jl
sahf
jno
stos
out
stos
int
xor
pushf
mov
cmp
push
lret
jl
add
lods
mov
or
in
dec
jmp
out
fldenv
pop
addl
jns
push
xchg
mov
adc
and
out
jmp
mov
mov
push
cli
push
aas
cmp
mov
jae
inc
hlt
ljmp
outsl
or
mov
fs
or
and
pop
lcall
push
xor
cmp
or
cmp
cmpsl
pop
dec
mov
mov
dec
nop
imul
adc
insw
mov
mov
adc
jae
lret
mov
inc
shlb
jmp
test
or
es
test
sub
cld
xor
jmp
int3
xor
pop
jp
ljmp
sbb
orl
jg
lods
sub
xor
dec
pop
mov
push
mov
jge
outsl
sahf
mov
jo
jae
mov
fistps
push
xlat
stos
pushf
or
stc
adc
leave
fs
stc
add
jmp
xor
pop
ja
sbb
sbb
and
imul
cmp
inc
mov
pop
push
mov
imul
push
cli
push
mov
daa
movsb
dec
xchg
popf
dec
setp
int3
or
xor
fcoms
adc
movsl
cmp
out
xor
add
adc
jo
sub
lods
lock
xor
ret
and
xchg
lret
jp
repz
or
sub
scas
jb
fs
dec
push
fidivs
mov
push
jmp
aam
cld
inc
jge
dec
mov
aam
lahf
adc
cltd
and
adc
in
stc
xor
fisubrs
roll
sbbb
push
pusha
inc
and
mov
setbe
push
insb
xchg
int
std
or
aam
cwtd
push
lret
sbb
jecxz
scas
mov
sahf
and
jno
jae
mov
add
das
psllq
and
jo
test
push
fnstcw
rorl
add
push
cld
scas
pop
ficompl
in
mov
outsb
sbb
mov
mov
jmp
packuswb
sub
scas
push
lock
out
jb
pop
adc
sarl
dec
pop
add
bound
movsl
lahf
pop
pusha
jae
inc
jns
aad
std
in
jo
sbb
sbb
repz
mov
daa
stos
xor
xchg
xchg
stos
pushf
jecxz
jge
gs
lret
es
insb
fsub
add
addl
outsb
adc
mov
xchg
mov
xchg
imul
xchg
ss
mov
adc
jnp
into
pop
shll
cli
and
or
jnp
xchg
pop
push
jmp
sub
push
sbb
or
in
popa
das
notb
gs
lcall
js
mov
dec
lds
sbb
scas
fdivl
add
insb
cmp
int3
out
and
aad
mov
inc
flds
add
cmp
aas
add
loope
mov
bound
mov
dec
lahf
mov
mov
dec
test
lahf
mov
aad
repnz
xchg
sub
insl
mov
and
mov
les
push
cli
notb
movsl
loop
loopne
jae
pop
or
mov
add
xchg
mov
stc
xchg
adc
xor
rolb
repnz
jae
or
fs
data16
mov
cmp
and
insl
sub
push
aas
loopne
dec
outsl
ficomps
popa
sbb
sbb
push
sbb
ret
hlt
mov
jmp
les
jns
cmp
subl
pushl
push
out
or
nop
or
loop
aad
mov
lods
daa
or
mov
add
outsb
es
push
xor
enter
add
jns
outsl
pop
mov
imul
rorb
jl
test
in
pop
push
push
mov
push
mov
or
mov
nop
cmp
lods
dec
das
mov
jge
mov
js
cmp
jae
inc
shr
jmp
sti
shrb
movsl
lods
xchg
sub
dec
mov
cmp
xchg
loope
inc
xchg
lods
jae
push
ds
ds
lods
lahf
das
xor
imul
or
popf
lods
mov
push
jmp
xchg
insb
aad
inc
inc
push
mov
add
pop
ror
rorb
leave
and
push
fsubp
lcall
cmpsl
dec
inc
fnstcw
xor
cmc
jp
or
xchg
push
ss
xor
fistpll
pop
clc
adc
ret
add
jnp
or
int3
cmp
pop
aas
fcoml
je
idivb
ss
rcl
push
movb
js
in
inc
dec
sub
cmp
xor
test
and
add
daa
call
and
mov
enter
add
imul
cmp
in
mov
test
mov
pop
add
ffree
fadds
fsubs
sbbl
xlat
jp
pop
sbb
mov
jno
aaa
mov
xchg
sub
xchg
xchg
ljmp
inc
js
pushf
add
push
inc
mov
outsb
jp
xchg
jb
pop
ja
pop
dec
and
loope
pushf
pop
loopne
mov
loopne
add
aam
xlat
orl
mov
adc
adc
pop
push
aas
imul
cld
scas
ficompl
rclb
mov
int
lock
dec
pop
sbb
pop
aam
sub
or
into
xchg
dec
cmp
cmp
stos
and
mov
arpl
cmpsl
sub
movsl
jne
sbb
adc
push
xor
xlat
mov
sub
sbb
push
sub
dec
out
jle
jge
dec
loopne
cmpsb
mov
filds
sbb
je
cmp
clc
repz
aaa
push
cmc
push
pusha
cli
xor
movsl
scas
leave
inc
jle
sbb
pusha
jl
das
out
andb
and
imul
sub
and
jnp
dec
lods
jecxz
rcrb
mov
out
sub
insb
aam
mov
or
xor
in
jbe
btr
sbb
mov
cwtl
xchg
jno
inc
inc
cld
test
int
xchg
cmp
jp
push
addb
dec
aaa
sbb
adc
mov
and
xchg
es
fisubrl
mov
and
push
xchg
pusha
cmc
shll
xchg
xchg
pop
jo
jg
and
mov
cli
push
inc
sarb
call
jne
mov
loop
cmp
push
pop
adc
adc
leave
push
jl
rorl
sbb
add
cmp
dec
pop
add
add
or
mov
push
xchg
pop
and
cmp
fildl
cmp
and
lret
jns
fisttpll
repz
pop
pop
pop
pop
test
mov
and
or
xchg
ficompl
jb
xor
push
dec
sbb
xlat
dec
jnp
jnp
inc
int3
cmp
mov
xchg
fmulp
add
pop
jbe
enter
das
fs
adc
push
cmp
mov
jns
fisubl
outsl
out
pop
sarb
or
sahf
dec
xchg
mov
xchg
popf
cld
cwtl
lds
xchg
cld
inc
lock
mov
adc
pop
jl
push
jb
cmp
insl
dec
out
adc
xor
jo
xor
sub
xchg
in
scas
dec
dec
repz
xor
ljmp
and
adc
and
ret
pop
push
push
sub
call
xlat
pop
je
pop
sbb
fwait
sbb
pop
fldt
insl
imul
addl
xchg
fdivrs
lret
push
fmuls
lahf
sbb
pushf
jae
cmc
clc
bound
push
sbb
pop
scas
xor
xlat
enter
cmpsl
xor
jge
lret
fwait
xchg
jns
adc
or
js
push
call
andb
pop
fs
sti
imul
js
sub
push
and
adc
xor
jmp
cwtl
sbb
push
movsb
inc
repnz
pop
mov
fildl
rcll
lods
adc
fisttps
cltd
mov
fwait
adcb
adc
test
add
mov
mov
sub
push
xchg
mov
push
add
imul
xor
add
ror
fdivr
icebp
dec
cmp
pop
jg
adc
or
cmpb
fisttpll
jno
pop
out
std
ret
xchg
test
push
test
xchg
insb
and
stos
sub
divb
lret
test
jecxz
dec
mov
fistl
mov
fcoms
and
pop
imul
out
shll
jp
adc
pop
ret
mov
cmpsl
icebp
mov
movsb
pop
loop
rorl
cld
sub
cmc
jae
imul
cmpsb
shll
test
add
jp
add
imul
and
test
sbb
dec
xchg
test
ljmp
mov
lock
push
xlat
movsb
xor
in
shl
rcll
mov
aas
int3
push
jae
xchg
repnz
push
xchg
pop
js
mov
fsubrl
fimuls
stos
mov
ljmp
add
xor
or
scas
push
popf
stc
push
and
imull
call
out
mov
xchg
and
lea
rcll
or
inc
and
mov
sbb
movsb
jmp
jg
xor
cmpl
dec
xcrypt-cbc
cmpsl
xchg
mov
dec
repnz
pop
fdiv
fcomi
pushf
dec
iret
stos
xorl
repz
cltd
and
jl
sub
leave
cmp
dec
ficoms
std
push
test
das
push
ror
test
sub
pop
adc
pop
ret
add
out
cmpsb
push
adc
pop
roll
xor
or
add
fmulp
jg
and
les
in
ja
add
clc
adc
mov
mov
flds
fisubs
mov
lret
and
test
sti
mov
pop
mov
or
fistl
nop
xor
jp
jl
jge
in
popa
mov
jb
jge
mov
xor
jecxz
dec
cmp
mov
repnz
movl
imul
cmp
cmp
dec
es
popa
pop
fwait
cmpsl
jg
cmp
jecxz
inc
test
fwait
dec
adc
mov
into
sbb
cmpsb
mov
and
adc
pop
rorb
jns
aad
mov
in
insl
pop
flds
xchg
test
scas
xchg
hlt
adc
push
xchg
pop
cmp
pop
aas
dec
aas
sub
sbb
sbb
rclb
xor
imul
and
jl
nopl
mov
and
mov
mov
repz
out
mov
aam
orl
insl
movsl
call
push
js
lea
les
xlat
into
mov
add
lret
jb
insb
les
bound
mov
inc
pop
xchg
cs
imul
fistpl
scas
adc
flds
movsb
cltd
fmul
mov
cli
ds
mov
push
and
sbb
xor
and
mov
push
loopne
cmp
and
fildl
mov
out
out
inc
mov
js
jmp
jmp
stos
jnp
push
pop
push
mov
pop
ficoms
out
and
nop
int
dec
add
pop
subl
mov
push
icebp
inc
push
insl
mov
test
mov
cmp
mov
lods
mov
pop
nop
ss
in
dec
adcb
loope
xor
sti
mov
pop
aam
jae
push
orl
shrb
imul
mov
adc
jb
cmp
add
or
and
pop
jmp
in
lcall
imul
push
xchg
imul
mov
jmp
mov
jg
dec
xchg
fists
mov
add
inc
int3
pop
and
cmp
loope
inc
mov
cwtl
test
inc
aam
loopne
sbb
dec
push
aas
push
push
mov
jns
lahf
lds
push
cld
mov
sub
out
movsl
xchg
icebp
sti
ficoms
notl
fadds
sub
js
shll
jg
xchg
dec
call
andl
inc
nop
in
aam
cs
xor
mov
jg
pop
xlat
push
lret
in
lock
adc
mov
dec
dec
daa
xor
dec
movsb
mov
lcall
cltd
mov
sahf
mov
ljmp
sbb
and
loope
sarl
xchg
into
dec
js
push
std
pop
adc
xlat
repz
repz
adc
cld
jno
sbb
or
jmp
dec
aaa
push
push
notl
and
iret
mov
fwait
or
xorl
sbb
mov
mov
mov
or
imul
lret
inc
push
jge
out
inc
xor
xchg
xchg
cwtl
mov
pop
bnd
lcall
int3
test
cld
scas
jnp
push
mov
push
subl
adc
js
push
jecxz
xchg
xchg
mov
test
lock
and
and
xor
pusha
and
gs
dec
mov
orb
fisttpl
and
repnz
cmpsl
mov
fistps
pop
imulb
or
jmp
mov
xchg
push
xchg
xchg
pusha
aad
scas
mov
pop
dec
into
fisubrl
jge
popa
js
and
in
aam
imul
mov
stc
mov
sarl
test
lret
sbb
and
mov
xchg
cmp
adc
imul
sbb
aaa
clc
out
dec
mov
and
mov
mov
pop
xor
push
das
movsb
rclb
push
mov
mov
fs
pop
inc
shl
les
cmp
sub
xor
frstor
jns
push
cli
outsb
adc
gs
mov
pop
add
sub
andl
pop
shlb
mov
jecxz
and
xchg
lock
cli
aaa
jae
mov
imul
mov
jge
push
cwtl
cltd
icebp
inc
jae
or
sub
jne
jl
dec
call
or
add
gs
faddl
std
mov
daa
loope
loop
mov
dec
std
rorl
scas
dec
pop
mov
inc
fwait
jl
into
call
loope
push
mov
fdivrs
in
mov
cmp
repnz
mov
dec
mov
fs
xlat
jecxz
jmp
aaa
scas
insb
mov
insb
divb
sub
popa
cwtl
pextrw
iret
pop
add
jge
add
pusha
int3
cmp
mov
ret
aas
sbb
xchg
aam
mov
jl
insl
outsb
dec
lock
dec
in
sbb
loopne
inc
shlb
decl
cmpsb
push
or
jns
movsl
push
test
stos
fimull
sbb
push
jo
jp
jnp
jbe
movntq
repz
pop
add
ret
adc
sbb
daa
or
je
mov
mov
lret
mov
jmp
in
dec
mov
push
mov
and
and
icebp
push
repz
dec
nop
cs
in
dec
data16
jecxz
push
lock
push
cmp
int
jmp
pop
test
push
stos
xlat
sub
lods
popf
shll
mov
stos
xchg
xchg
cltd
aad
sbb
pop
and
add
notl
in
add
fnstcw
xor
push
ljmp
test
dec
ret
cmp
out
xor
adc
fisttps
dec
shrb
pop
std
pushf
movsb
outsl
into
dec
jge
sub
fimull
in
lds
ja
int3
jmp
bound
mov
pop
push
jns
sub
enter
into
rolb
and
cmp
dec
loop
mov
sub
ficoml
mov
testb
in
addl
sub
push
cmp
das
inc
inc
fisubrs
sbb
sbb
out
pop
je
in
idivl
adc
sbb
lods
adc
in
add
ficoms
jo
add
xchg
mov
mov
lahf
movsl
cld
fcompl
mov
push
out
add
push
dec
mov
mov
adc
mov
jnp
cmc
mov
enter
xor
cmc
repz
out
push
mov
push
mull
lret
insl
aam
ret
fwait
in
pushf
xchg
dec
sbb
push
insb
mov
xor
jbe
pop
inc
jmp
gs
mov
jle
in
popa
mov
outsl
nop
pop
xor
hlt
in
jb
mov
xchg
push
xchg
inc
ss
xchg
repz
cmp
push
int3
cmp
stos
mov
test
movsl
or
xchg
pop
sahf
in
out
push
inc
push
inc
movsb
ffreep
mov
outsb
cmp
scas
sbb
pushf
repz
jne
ja
loope
scas
movsl
data16
aad
addr16
cmp
inc
dec
cmp
gs
sbb
sbb
aam
or
lds
pop
jp
push
xchg
lea
pop
pop
xor
jecxz
sbb
cmp
insb
dec
ror
outsl
xchg
outsb
data16
pop
push
xchg
popf
out
lods
arpl
mov
adc
daa
adcl
xor
xchg
xchg
rorl
pop
sbb
push
lods
test
inc
mov
rcrb
sbbl
dec
sub
stos
xchg
inc
aaa
jecxz
push
and
or
ss
arpl
ret
pop
outsb
mov
cmp
cltd
lcall
inc
pop
dec
mov
jmp
mov
mov
in
insb
mov
lret
iret
aaa
lds
arpl
nop
mov
inc
cltd
pop
into
mov
sbb
xor
sbb
ret
adc
lcall
shll
xor
cmp
mov
sub
test
xchg
or
lcall
inc
or
cmpsl
fs
filds
rcll
int3
inc
pop
loope
adc
push
or
shr
loope
fsubrl
mov
psubd
inc
pop
sub
in
or
push
stc
and
iret
mov
pop
cmp
or
or
inc
ret
mov
imul
xchg
sbb
or
mov
jnp
or
push
loope
test
fs
inc
pop
out
lahf
imul
in
les
push
sub
pop
adc
cmp
int3
inc
stos
xchg
mov
js
sbb
push
mull
insl
and
lock
lea
pop
cmpsb
lret
outsl
pusha
je
ss
inc
icebp
dec
mov
shr
and
or
sub
pop
insb
pop
add
stc
xchg
dec
xchg
lret
lret
ret
out
adc
sarb
xor
daa
xchg
mov
lcall
std
xchg
xchg
mov
fldenv
inc
mov
xlat
xchg
add
push
xor
cltd
jmp
popf
and
xor
or
scas
and
insl
out
push
mov
fistps
dec
fists
cmp
lahf
fdivrl
insb
lea
popf
dec
imul
clc
or
jnp
loopne
out
sbb
lds
jle
mov
inc
xchg
rcrl
cmpsl
or
insl
dec
stc
popf
imul
shl
mov
incb
int
or
arpl
and
addr16
lret
pop
xor
adcb
mov
fldl
jne
adcb
xchg
repz
iret
outsb
add
cld
xor
cmp
xor
mov
inc
xor
and
and
fildll
or
dec
popa
cpuid
mov
jbe
jg
mov
xchg
arpl
insl
jl
out
or
mov
std
popf
mov
and
and
rcr
imul
sub
and
cmpsl
shll
iret
xchg
icebp
cmpl
push
jb
jno
bound
lret
push
std
cmovs
pop
cmp
loope
inc
push
add
cmpsl
inc
loope
call
les
popf
or
fldl
xchg
movsl
push
ds
cld
out
loop
or
arpl
cs
jo
xor
mov
rcll
cmc
sub
popa
adc
cmp
sbb
jp
add
mov
call
inc
jl
adc
int
inc
leave
lahf
adc
stc
dec
sbb
fdivrl
push
leave
das
ds
jmp
adc
dec
pop
cmp
lods
adc
sarl
std
cmp
push
inc
inc
in
xchg
mov
mov
test
sbb
mov
inc
push
adc
repz
lret
inc
dec
orb
rolb
mov
adcb
inc
and
in
addr16
jecxz
inc
dec
arpl
mov
lret
test
loope
lcall
lock
std
mov
test
movsl
dec
add
gs
xchg
mov
or
repnz
sbb
aas
jbe
rcrl
int
movups
inc
jo
add
test
leave
mov
int
cmc
sti
push
cmpsb
std
scas
dec
fistpl
xchg
push
fstpt
outsb
aas
jge
inc
imulb
addr16
in
fwait
cltd
cmpsb
lahf
and
enter
into
cmc
out
cli
rol
or
add
jle
mov
sub
pop
clc
xchg
fcmovnu
and
hlt
imul
adc
ret
out
ret
cs
mov
jmp
adc
or
fwait
dec
rolb
insl
aad
imul
mov
fsubs
push
pop
shrb
aaa
je
jge
mov
jp
inc
shl
stos
test
mov
adc
and
orl
jne
sbb
dec
insb
imul
leave
fstpl
sbb
aam
aam
mov
rcrl
sbb
mov
in
ficoms
dec
lods
test
mov
leave
xchg
aam
aad
or
adc
imul
push
outsb
jno
sbb
sahf
popf
jb
insl
xor
int3
cmc
inc
sbb
pop
xor
aaa
mov
sub
jb
dec
cmp
hlt
mov
sbb
aaa
pop
inc
mov
test
cmp
xor
in
inc
push
fs
sbb
mov
test
inc
test
stos
and
test
imul
xchg
test
js
dec
xchg
mov
pop
xchg
clc
mov
pop
out
adc
rorl
lret
xlat
jl
je
cmp
adc
arpl
mov
inc
sbb
xchg
or
rcll
mov
push
xor
sub
push
xchg
add
cld
adcl
cmp
fisttpll
lods
cltd
inc
sbb
loope
sbb
and
add
scas
jmp
popa
or
ret
mov
add
or
dec
arpl
ss
rol
mov
jb
in
sbb
cmc
mov
in
cmp
jmp
pop
packssdw
les
add
out
jecxz
inc
ss
pop
not
add
aaa
add
mov
into
xchg
aad
sar
and
fs
jmp
pushf
movsl
js
loop
pop
xchg
or
std
cmp
xchg
inc
mov
fidivrs
cmpsl
bound
pop
mov
leave
fists
lods
es
stc
cs
mov
xor
pop
rcrl
pusha
mov
xor
mov
push
out
jp
xor
fildll
xor
fwait
cmp
cmp
roll
ret
xchg
out
gs
xchg
nop
fnstcw
cmp
loope
cs
outsb
mov
push
mov
outsb
es
xor
or
es
lret
mov
ds
pusha
imul
mov
cmpsl
or
dec
clc
test
adc
sti
out
cs
hlt
out
das
std
pop
dec
pop
js
mov
push
jmp
xchg
pop
nop
cmp
mov
mov
hlt
adc
adc
rolb
push
test
push
aam
orl
or
sbb
mov
test
out
icebp
pushf
lods
xlat
jl
push
xor
mov
dec
mov
insl
call
out
loopne
xor
jo
xor
imulb
repnz
or
stc
adc
test
out
add
jle
fsubr
hlt
mov
add
pop
cmp
arpl
movsb
leave
pop
sbb
push
xchg
ds
adc
rorb
fs
fstp
mov
in
mov
and
add
fildl
scas
cmpb
pop
int
add
sub
outsl
push
movsl
dec
fnstcw
or
shrb
adc
add
pcmpgtb
sbbl
mov
adc
in
mov
fs
fcoml
mov
test
imull
and
xchg
pushf
push
cmp
jg
fs
hlt
xchg
inc
lret
xchg
bound
je
dec
or
dec
inc
mov
cmp
cmp
shlb
sarb
bound
jl
and
inc
into
inc
ljmp
jmp
fdivr
std
push
cmp
rorb
pop
mov
dec
lds
mov
rcrl
sbb
jbe
outsb
insl
int3
pop
mov
jno
ss
sub
push
out
cli
sbb
addr16
iret
mov
lods
ss
or
rcll
loope
leave
ja
mov
push
inc
arpl
and
or
ds
push
fs
inc
clc
ss
movsl
push
sarb
ja
cmp
or
mov
pop
dec
and
es
mov
test
inc
or
lods
sar
jnp
jbe
cmp
sub
cmp
cld
imul
or
and
push
sub
into
iret
out
rorb
cmpsb
rcrl
in
and
sbb
aam
or
test
push
js
shlb
cmp
in
cmp
roll
imul
mov
adc
cltd
jbe
add
sub
mov
shll
mov
dec
dec
loop
mov
and
add
mulb
adc
mov
cli
push
hlt
pusha
xchg
inc
mov
scas
lods
loopne
sbb
push
cld
xor
loope
lods
loope
loopne
pop
loope
adc
xchg
out
fdiv
icebp
and
into
iret
mov
inc
sub
fs
sbb
scas
std
mov
pop
loopne
aas
mov
jo
sahf
or
arpl
mov
adc
or
sub
xchg
dec
sti
loope
out
xor
dec
cmp
sub
add
xor
adcb
roll
xchg
mov
cmp
ret
cmp
and
mov
cwtl
inc
push
jge
stc
mov
dec
clc
lds
bound
jns
outsb
dec
notl
jp
sbb
pushf
pop
and
shlb
out
lret
aaa
xor
lahf
xlat
mov
aad
mov
pop
iret
inc
xchg
sbb
jl
pushl
cs
and
jl
lret
jg
arpl
pop
in
xchg
dec
inc
mov
cwtl
mov
fcompl
mov
xchg
cs
xchg
inc
mov
xchg
add
sbb
add
movsb
inc
cmpb
pop
or
cld
inc
adc
jne
mov
dec
push
pop
stos
fidivrs
adc
adc
add
mov
xchg
jb
loopne
scas
js
stos
cwtl
lods
sbb
mov
jb
jnp
and
pop
jno
sbb
add
xor
inc
dec
sub
cmp
sub
into
mov
dec
mov
dec
sbb
sub
mov
xchg
mov
lea
loope
or
outsl
mov
outsl
dec
or
adc
mov
imul
sbb
adc
hlt
aaa
out
iret
adc
lret
mov
add
out
adcl
pop
imul
ret
adc
mov
fsubl
daa
pop
in
stc
dec
push
hlt
fdivl
mov
scas
sub
shlb
in
cs
push
xchg
ret
inc
icebp
pop
out
pop
mov
push
lods
es
cmp
xchg
inc
std
fmuls
cmpsb
xchg
outsb
mov
pop
adc
out
push
and
ja
xchg
addr16
mov
push
mov
stos
inc
shll
add
js
cmp
push
icebp
adc
pusha
and
sbb
pop
and
pop
adc
or
daa
daa
pop
xchg
dec
jbe
leave
lds
loopne
ljmp
mov
es
adc
dec
loope
or
adc
bound
mov
ret
icebp
faddl
sbb
xor
cwtl
popa
cmc
xor
cmp
cwtl
icebp
xchg
rcl
movb
xor
pop
mov
stos
pop
xlat
sbb
in
pop
mul
cmp
in
and
andl
outsb
xchg
pop
sarl
jmp
push
mov
mov
inc
ljmp
lret
jge
adc
clc
mov
test
imull
test
add
mov
mov
divb
cmp
lahf
subl
and
into
cmp
xchg
xchg
and
test
jo
inc
cwtl
stos
mov
inc
mov
out
imul
fnstcw
addr16
mov
outsl
es
adc
xor
lahf
das
adc
adc
imul
pop
sbb
xchg
jge
shlb
cwtl
call
mov
xchg
mov
mov
test
jne
shll
adc
stc
cmpsb
pop
scas
shlb
jle
pop
and
stos
pop
popf
xor
mov
call
fadds
ss
xor
pop
push
add
sbb
popf
ret
lea
or
cltd
and
or
fwait
xchg
xchg
dec
mov
push
ss
insb
sub
xchg
test
mov
sahf
xchg
popa
stc
pusha
mov
add
or
fs
insl
aaa
popf
add
xor
mov
fcoms
repnz
call
out
mov
add
movsb
aam
mov
inc
nop
xor
xchg
stos
les
sbb
pop
inc
jae
popf
in
or
and
movd
or
xchg
call
adc
xchg
dec
shl
push
and
inc
mov
popf
cmpb
repnz
imul
outsl
xor
dec
rorl
mov
xor
xor
loopne
xor
jb
inc
push
fisubrl
orl
inc
mov
push
out
lods
les
xchg
dec
xor
sub
pop
mov
jnp
adcl
jb
mov
adc
mov
stos
insb
ss
add
mov
sbb
std
test
cltd
sub
inc
mov
in
lret
xor
or
jo
scas
rorl
scas
cli
daa
ljmp
cmp
test
mov
mov
pop
jecxz
fdivrl
movsb
inc
cmp
dec
lods
mov
out
or
jmp
add
and
and
daa
add
pop
outsb
scas
adc
stos
pop
les
fcmovnbe
jle
stos
push
add
cmp
mov
cmp
push
xor
dec
adc
jne
jg
icebp
icebp
clc
and
mov
popf
insb
adc
jmp
inc
adc
inc
sbb
js
xlat
lods
gs
ljmp
and
pop
xor
mov
call
xor
adc
lret
iret
jecxz
push
filds
ret
add
imul
xor
scas
jne
ret
mov
fs
pop
mov
into
cmp
repnz
jg
andb
lods
sbb
inc
add
mov
gs
outsb
jbe
add
hlt
lea
js
hlt
jb
scas
mov
sbb
cmc
mov
xchg
xchg
dec
rolb
add
sub
cwtl
je
or
or
mov
hlt
mov
leave
cltd
push
jmp
fiaddl
mov
or
iret
shll
cmc
loope
out
sbb
scas
cmpsb
pop
xchg
js
mul
sbb
mov
mov
or
ret
sbb
sbb
pop
xchg
jg
out
cmp
je
insb
fdivrl
mov
or
push
mov
jno
mov
jne
jnp
mov
popl
fwait
inc
lods
jge
mov
dec
cmp
lea
ds
test
outsl
mov
or
xor
inc
cmp
jl
jo
aad
cwtl
fsubrl
mov
cmp
inc
sub
jo
scas
pop
jbe
insl
and
inc
jne
loope
push
iret
lret
add
dec
mov
pop
push
mov
sub
and
inc
mov
nop
mov
out
lock
jns
cwtl
enter
adc
iret
ljmp
pxor
js
fnsave
aad
jns
out
inc
dec
or
and
add
lds
or
and
shlb
outsl
sahf
push
mov
out
and
mov
push
and
ljmp
sbb
inc
cli
mov
enter
xor
mov
jmp
fcompl
dec
sub
xor
sub
pop
enter
das
mov
jmp
inc
mov
sbb
in
das
adc
mov
mov
sbb
loope
outsb
sahf
dec
pop
stc
add
lds
outsb
dec
cmp
pop
outsb
cmp
xchg
movsb
call
sub
and
ljmp
xorb
dec
sbb
or
sub
add
aam
cli
mov
pop
dec
mov
push
test
mov
adc
inc
mov
xchg
pop
out
fcmovbe
mov
xor
push
sbb
push
fwait
out
faddp
sbb
sti
ficomps
mov
xor
mov
fucomi
inc
xchg
movsb
or
or
je
adc
jecxz
ret
push
push
xlat
test
ds
pop
loopne
scas
xor
test
out
xchg
in
adc
sub
or
push
mov
shrb
test
jns
dec
pop
pop
lock
cmc
fsub
jb
jmp
xchg
push
push
mov
or
pop
insb
mov
iret
outsl
aaa
sub
and
adc
dec
xchg
shll
lock
xchg
cmpsb
in
pop
jg
sarb
jns
inc
add
push
xchg
mov
mov
fcoms
sbb
and
repz
lock
fwait
jnp
jg
fwait
addb
icebp
sub
ja
fsubrp
cwtl
insb
dec
enter
xor
cld
mov
sub
ret
jecxz
jns
icebp
mov
sbb
mov
add
add
stos
ret
add
enter
add
mov
int
imul
cld
mov
cmpsb
je
test
pop
jp
jbe
js
popa
mov
jl
outsb
cmpsl
jo
test
jbe
cmp
inc
xor
int
pop
jbe
inc
add
int
je
add
sti
movsl
mov
add
push
mov
fimuls
dec
mov
mov
movsb
add
test
icebp
lock
aam
mov
cmp
and
addr16
inc
ret
inc
andb
or
adc
sub
push
and
push
test
fisttpl
jg
mov
dec
out
sbb
push
lock
cmp
cld
xor
push
or
sbb
push
fdivr
jo,pn
xor
test
insl
pop
jno
mov
cmp
jmp
inc
hlt
mov
lcall
out
ret
push
cwtl
les
mov
ficoms
inc
into
cmpsb
mov
jmp
mov
pop
adc
sbb
mov
loope
and
int
or
sub
loope
mov
lods
mov
inc
sub
test
rsqrtps
and
mov
in
mov
movsb
loopne
xlat
test
test
rcrl
and
dec
aam
mov
loope
aam
mov
ret
sub
addb
pop
add
shlb
mov
sbb
xor
jns
mov
dec
popa
pop
lea
lock
test
push
loop
clc
jns
scas
int3
jbe
mov
cld
cmp
adc
outsl
mov
mov
push
pop
jecxz
pusha
gs
int3
pushf
xor
add
mov
imul
nop
xchg
iret
xor
jbe
jne
dec
ss
outsb
jg
and
jmp
lahf
gs
insb
or
fistps
xchg
push
in
pop
adc
cld
hlt
ficomps
xor
mov
push
test
cmp
lahf
xchg
jmp
and
jns
cmp
in
jp
pop
cmc
lds
es
into
dec
shrl
dec
sbb
and
aas
mov
add
hlt
sub
stc
aaa
and
adc
cli
icebp
mov
lock
into
dec
cmpsl
cmp
add
filds
xlat
jmp
push
jb
mov
jo
pop
jo
pop
and
dec
cld
js
jmp
cmp
mov
jno
test
les
cmp
pop
mov
cli
ja
sub
lock
jge
hlt
ret
imul
sbb
insb
pop
xchg
xor
ljmp
es
jg
das
into
or
lret
sbb
je
inc
xlat
jp
mov
xor
int
scas
imul
pop
pusha
or
push
jns
stc
loop
xlat
cmpl
imul
in
and
mov
cwtl
je
fbstp
or
leave
pop
mov
in
xchg
and
loopne
decb
cmp
outsb
jp
aad
or
inc
xor
push
sub
mov
cmp
cmpsl
mov
das
fdivrl
inc
jmp
mov
xchg
sarb
fldenv
add
xor
mov
scas
je
fldcw
cmp
xor
sahf
push
adc
roll
mov
pop
repz
shlb
loopne
in
sgdtl
out
out
outsl
aaa
or
ja
mov
loop
fcom
xchg
cli
orl
js
xchg
cmpsb
dec
mov
xor
xchg
loop
inc
stc
pop
cmp
xchg
jns
inc
push
lea
dec
notl
jmp
cmp
add
cmp
push
idivb
inc
sub
push
adc
pushf
adc
adc
in
out
mov
cwtl
inc
sbb
cmpb
sub
and
sahf
adc
xlat
xlat
dec
push
xchg
xchg
jno
push
nop
adc
jecxz
sub
fs
int
lret
pop
sbb
mov
push
adc
dec
adc
adc
jl
test
adc
xorb
mov
sbb
inc
dec
add
pop
xor
in
jmp
pop
adc
cmc
mov
fwait
pop
lea
test
or
jnp
xchg
jb
int3
fisubrs
sarl
fcmovnu
addb
mov
jb
mov
pop
fsts
rcrb
mov
adc
push
lcall
mov
rcrl
lds
inc
mov
add
scas
shrl
std
push
add
ror
push
add
mov
fisttpl
dec
and
test
inc
push
sbb
notl
movsb
aad
insl
adc
lcall
pop
mov
daa
mov
roll
mov
scas
mov
or
adc
pusha
dec
fisttpl
and
mov
inc
mov
stos
loopne
cmpsl
test
out
adc
push
jge
pop
les
nop
mov
lds
neg
mov
iret
adc
pop
push
outsb
and
jle
mov
sbb
int3
repnz
jmp
bound
jmp
add
xchg
adc
fs
fnstsw
mov
nop
mov
out
push
jle
pusha
sub
sbb
adcb
loope
jp
dec
insl
dec
insl
jg
xchg
rclb
add
enter
test
and
loop
movsl
out
icebp
jmp
pop
and
dec
inc
clc
aam
xchg
add
sti
add
test
sub
mov
cltd
mov
fs
call
xchg
pop
add
arpl
fiaddl
and
sub
push
add
adc
pushf
jl
pusha
mov
jg
mov
mov
aas
inc
mov
or
loopne
xor
adc
insl
lock
imul
push
mov
lock
shrb
jp
mov
daa
dec
ljmp
mov
xchg
jge
mov
mov
repz
ljmp
roll
mov
cs
in
xor
aaa
cmc
imul
push
and
shll
adc
jno
inc
adc
fwait
dec
and
hlt
loope
xchg
push
cld
imul
add
fisubrl
pop
jnp
mov
dec
pop
dec
cmp
ret
and
sbb
push
cmp
xchg
push
ss
or
cmp
mov
xor
jae
ss
or
mov
int3
sbb
and
xorl
movsb
lret
adc
lock
ja
xor
fistps
call
out
adc
add
pop
push
outsb
add
dec
sbb
jp
sbb
bound
out
jge
shll
adc
cmpl
pop
mov
loop
jg
sti
into
cmp
filds
cmp
xchg
sub
add
xor
out
cwtl
data16
das
cmc
rclb
std
pop
dec
dec
out
xchg
push
sahf
fmuls
and
fisttps
inc
loope,pn
mov
xchg
in
jns
xchg
pop
je
push
insb
js
movsl
je
push
xchg
dec
mov
shrb
inc
mov
dec
iret
int
xchg
ret
mov
and
sub
out
dec
inc
movsb
test
in
adc
leave
int3
jno
or
sub
inc
leave
mov
jl
xor
mov
dec
jnp
ds
or
shlb
pop
es
inc
add
fidivs
call
push
mov
and
fnstsw
daa
in
stos
add
jle
mov
repnz
std
icebp
push
mov
outsb
enter
fisttpl
js
rcr
cwtl
pushf
push
adc
adcl
jbe
in
ds
mov
inc
faddl
sub
push
jnp
mov
std
repz
add
jno
pop
inc
xchg
and
fstl
lock
xor
xchg
mov
out
mov
jnp
push
dec
push
mov
xor
leave
movsb
ret
loope
mov
push
jmp
addr16
cmpb
int
vshufpd
dec
jg
add
shlb
xchg
clc
mov
pop
repnz
xor
mov
repnz
push
mov
push
jmp
inc
sbb
push
test
mov
ds
fistl
adc
dec
sub
xor
inc
inc
xor
mov
lret
mov
cmp
inc
pop
das
repnz
mov
sub
fldt
fisttpl
lock
xor
mov
xor
adc
xor
push
lods
dec
and
sbb
ljmp
movsl
clc
adc
or
jmp
xlat
rclb
int
sarl
inc
nop
shrl
fcomps
pop
push
mov
lods
jne
jl
loop
leave
xor
jmp
sahf
xchg
int
xchg
sbb
mov
sub
test
fsts
or
sub
fs
shrb
imul
aad
add
mov
or
or
pop
jno
xchg
fcmovnbe
lret
das
sub
pop
or
sub
test
mov
imul
call
jge
sub
test
ss
int3
jg
imul
test
and
xchg
pop
and
xchg
sbb
cmp
cmp
vpunpckhqdq
scas
or
repz
and
hlt
into
xchg
mov
scas
cmp
xor
ss
xchg
shrl
xor
mov
mov
dec
insl
fwait
inc
push
push
mov
ja
hlt
sub
mov
xchg
mov
popa
mov
cmp
dec
mov
push
sub
popf
adc
add
in
sbb
lahf
mov
test
dec
dec
mov
pop
mov
das
xchg
dec
xor
mov
pop
or
push
bound
inc
pop
cltd
adc
int3
mov
jl
inc
rcl
adcl
sbb
inc
mov
mov
in
ja
mov
pop
xor
push
je
stos
lret
mov
orb
xor
inc
sti
mov
jns
dec
enter
sbb
rcrb
ja
fs
and
lcall
mov
add
ret
lcall
xchg
sub
lds
jg
push
pop
jmp
lret
loop
scas
cmpsb
xchg
xchg
lods
inc
jns
repnz
add
mov
jecxz
cmp
xchg
add
cmp
xchg
stos
pop
into
adc
je
xor
lret
mov
mov
push
lahf
mov
pop
cmpb
adc
dec
add
add
and
js
jnp
mov
popf
jno
fwait
mov
addr16
pop
mov
jae
mov
push
sbb
mov
ret
and
lret
push
mov
ficoms
stc
sarb
mov
or
jbe
push
sub
jge
pop
inc
std
or
enter
sahf
insb
pop
or
push
into
ja
ret
mov
sub
leave
enter
fsubr
mov
adc
jg
ret
or
mov
inc
cmpl
les
mov
rol
pop
mov
mov
dec
leave
xchg
js
divb
rcl
pusha
pop
dec
mov
ljmp
mov
dec
xchg
mov
fisubrl
jo
movsl
ds
mull
lcall
dec
pop
add
jbe
out
icebp
mov
decb
push
dec
fistpl
jne
cmpsl
mov
or
mov
imul
cwtl
scas
cmpsb
jecxz
movsb
and
inc
pusha
mov
lcall
bound
stc
stos
xor
cmp
fst
gs
js
mov
idivb
mov
or
bound
aaa
adc
push
mov
repz
dec
add
iret
pop
sahf
adc
test
lret
stos
pop
mov
xor
lcall
insb
mov
mov
std
inc
in
xchg
inc
lds
cmpl
pop
ja
ja
xchg
sbb
lods
and
lahf
in
push
iret
fisubrs
fnsave
or
sarl
je
lock
ss
sbb
xchg
lret
mov
mov
push
mov
test
insb
fdivl
test
adc
mov
dec
or
mov
enter
xchg
inc
push
cld
xor
inc
and
addr16
or
nop
addr16
mov
and
sbb
pop
gs
adc
xor
push
imul
test
pop
cmpb
lods
es
imul
gs
sub
xor
lahf
ljmp
rcll
adc
orb
out
inc
movsb
decb
mov
sbb
and
dec
out
push
icebp
fstpt
mov
movsl
mov
lods
movl
and
inc
icebp
jecxz
lds
lock
cltd
push
pop
into
or
xchg
add
insb
loopne
orl
cwtl
je
adc
push
fcomps
out
mov
pop
xchg
mov
mov
das
xlat
push
in
daa
or
shr
sub
movsl
xchg
dec
xor
push
iret
shll
mov
mov
and
imul
xor
repz
pop
or
addb
push
mov
loopne
inc
sbb
adc
int
movsl
push
xor
push
pop
mov
ljmp
sub
fcoml
push
imul
arpl
xchg
repnz
sub
push
and
fisttpl
jl
mov
and
pop
or
jnp
push
cmp
icebp
fldl
in
dec
test
fadd
push
imul
in
push
xchg
and
push
popf
cltd
pop
jb
dec
inc
cs
or
ret
adc
outsb
inc
mov
popa
add
jle
repz
addr16
jb
push
adc
mov
mov
out
fucomi
mov
bnd
sub
mov
stos
push
ret
movsb
stos
in
fcoms
adc
popf
mov
cmp
jle
sbb
cmpb
insl
push
iret
cmpsl
sahf
xor
inc
mov
mov
fistpll
jnp
dec
out
xchg
add
lds
sbb
push
cmp
xor
fsubs
bound
cmp
fisttpl
xchg
or
movl
repz
and
jne
cmpsl
jp
sbbb
xchg
mov
arpl
or
testb
sub
mov
ds
test
mov
mov
push
inc
sub
and
xchg
inc
xchg
mov
sahf
cmp
pop
mov
lcall
jne
mull
cmp
dec
mov
pop
sbb
mov
es
test
je
mov
mov
pop
stc
je
shrl
subb
and
mov
clc
mov
fwait
jl
mov
std
mov
xchg
repz
test
insl
adc
into
mov
and
lock
add
ljmp
add
call
adc
xlat
je
dec
adc
insb
adc
or
mov
pop
mov
sti
jno
insb
mov
cmpl
and
rcl
loop
mov
popf
xor
push
ret
data16
ror
add
addr16
adc
lea
stos
ficoms
mov
popa
pop
mov
xor
test
jl
lcall
nop
pusha
dec
movsb
test
lock
shlb
jg
fisubrs
clc
pop
sarb
rcr
inc
push
push
movq
fnstsw
lods
mov
sar
stos
out
pushf
xor
aaa
jbe
mov
dec
mov
ljmp
mov
ja
cmp
xlat
adc
mov
lahf
lock
pop
popa
rcr
sub
lock
mov
scas
or
loope
insb
sub
dec
das
mov
and
ret
ljmp
aam
push
andl
inc
xchg
or
adc
jge
clc
mov
add
cli
xlat
xchg
push
push
xor
add
cmp
in
mov
pusha
xor
and
stc
andnps
mov
into
mov
rclb
push
jle
scas
dec
out
fldcw
rcl
xchg
mov
sbb
rorl
jne
sbb
movsl
in
push
int
ret
or
xchg
add
test
jo
sahf
int
xor
pop
aam
mov
loopne
adc
mov
sub
sbb
std
cs
daa
dec
jp
inc
roll
es
sub
mov
xchg
mov
or
add
inc
xor
stos
in
dec
or
iret
adcl
dec
cmp
arpl
movsl
pop
imul
and
lea
xor
sub
dec
sub
add
add
stc
rcl
ficomps
and
sub
outsb
sbb
out
mov
mov
xchg
jl
inc
and
sbb
stos
sbb
cltd
dec
loopne
inc
push
lds
js
out
fcmovnb
call
sbbb
shlb
outsl
lcall
rorl
repz
fbld
push
cltd
add
sub
sub
in
jmp
jl
and
jmp
es
aad
fisubl
scas
inc
xor
xchg
push
jmp
vrsqrtss
dec
cltd
pop
sbb
dec
mov
lret
mov
xchg
cmpsb
mov
mov
mov
mov
fstpt
cmp
loopne
mov
ljmp
pusha
pop
ljmp
sti
jno
xchg
outsl
inc
sbb
cld
dec
lcall
int3
fcmovu
mov
cmc
adc
xchg
sub
out
jle
rcll
sbb
imul
hlt
jnp
xchg
xchg
ss
or
imul
test
jp
movsl
add
imul
and
mov
sub
add
sub
lret
adc
nop
jmp
loopne
inc
sbb
push
aas
or
xchg
sahf
std
mov
loope
stos
bound
popa
or
lcall
cwtl
cmp
mov
out
inc
repnz
sbb
lds
add
mov
sarl
clc
mov
cli
out
in
lcall
jb
mov
and
add
add
and
incl
enter
in
pop
mov
push
jmp
pop
sub
dec
movsb
sahf
insb
aad
in
inc
test
pop
sub
xorb
fildl
add
lock
and
pop
jle
insb
ret
pop
inc
call
pop
adc
pop
dec
push
add
rcr
sbb
mov
pushf
dec
fistpll
xchg
fs
bswap
push
out
xchg
push
push
bt
push
adc
in
repnz
ror
scas
inc
fwait
pop
cmp
es
fwait
shl
mov
push
idivl
jl
cmp
pop
jmp
mov
mov
push
xchg
push
rorl
stos
add
lret
in
adc
jmp
pushf
xchg
arpl
jne
jmp
cmp
cmp
aas
in
lret
dec
xor
jg
or
test
cmp
loope
sub
in
imul
addr16
loopne
dec
inc
mov
sbb
shr
loop
dec
mov
xchg
loope
push
xor
repnz
fmuls
lods
jmp
test
push
pop
cmp
popf
shl
adc
cmp
and
cmp
stos
cmp
movnti
add
pushf
jne
std
fdivl
xchg
sbb
outsb
test
and
loope
or
in
loop
in
push
mov
dec
subl
push
and
jo
pop
mov
mov
sub
dec
out
pop
dec
or
aam
pop
mov
icebp
aaa
mov
sbb
xchg
jmp
adc
icebp
jnp
mov
xor
lcall
cmc
rcll
outsl
push
mov
mov
pop
test
inc
ljmp
and
sub
add
sbb
push
shrl
add
je
test
mov
daa
dec
sbb
and
int3
rorl
inc
add
cs
mov
push
cltd
clc
mov
cmp
dec
fists
sub
icebp
loope
push
aaa
into
lahf
enter
push
jbe
in
and
addr16
std
adc
mov
and
sub
out
outsb
xor
js
int3
loope
lcall
test
ja
test
ss
mov
outsb
pop
jbe
clc
in
mov
ljmp
push
outsb
inc
dec
mov
popf
mov
lea
pop
in
pop
in
add
les
test
ja
xor
cmp
pop
xchg
xchg
in
push
jo
leave
sbb
mov
xor
clc
test
cwtl
in
nop
ds
outsl
xor
xchg
jl
arpl
test
fldcw
and
sbb
cmp
push
fists
and
mov
add
rorl
jnp
ja
or
sub
enter
mov
mov
daa
adc
jl
sbb
in
mov
repz
mov
cmp
cld
xchg
push
lcall
and
cld
shrb
push
cmp
xchg
repz
aas
xlat
stc
test
mov
sahf
mov
out
pop
cltd
jno
jne
xchg
sbb
stos
sub
out
jmp
test
xor
fcmovnb
dec
stos
subb
pushf
push
push
push
inc
dec
bound
lock
hlt
jne
dec
xor
loop
arpl
bound
lcall
jae
xor
imul
insl
jecxz
fsts
imul
mov
stc
jo
pusha
adc
das
or
sub
out
sub
and
push
adc
mov
pop
push
sub
ficomps
jl
popa
pop
cwtl
andl
mov
fimuls
test
sub
pop
jge
mov
mov
push
sbb
repz
mov
inc
cmp
clc
cmp
outsb
inc
fnstcw
dec
jnp
clc
dec
mov
xor
xor
mov
cli
jbe
add
lret
scas
rolb
into
mov
xchg
imul
jmp
push
adc
mov
hlt
aaa
push
cmc
out
movsl
push
rol
int
jle
dec
inc
jb
cmp
test
das
iret
arpl
dec
mov
lods
xchg
mov
sbb
stc
fidivs
adc
adc
loopne
shll
inc
inc
add
add
outsl
push
mov
or
pushf
pushf
std
sub
push
xor
dec
enter
push
xor
jmp
sub
add
push
inc
mov
std
mov
imul
add
movsb
pop
push
cmp
cmp
pop
cmp
cmp
jp
xchg
fldt
out
xchg
call
test
inc
jmp
pop
cltd
in
cmp
bound
mov
inc
inc
sbb
pop
mov
mov
and
insb
push
mov
sub
push
fwait
push
addl
gs
int3
xor
lahf
pop
insl
movsb
lcall
call
loopne
loopne
test
leave
xor
inc
sub
cmp
scas
out
jmp
add
add
adc
mov
push
ret
mov
mov
pop
jl
xchg
sarb
cld
xor
xor
pop
fdiv
push
loop
repnz
mov
dec
dec
dec
jge
dec
mov
daa
xchg
add
cs
mov
sub
imul
cmp
shlb
ds
dec
dec
stos
jecxz
mov
mov
cmp
sub
outsb
int
push
mov
int
push
pop
push
mov
xor
movsl
add
mov
jp
imul
pop
in
inc
frstor
test
lods
outsb
dec
std
mov
fidivs
sti
pushl
add
les
enter
cltd
mov
xorl
or
cmp
aam
inc
loopne
ja
push
daa
int3
rclb
fwait
stos
dec
pop
xorl
lock
jae
nop
jmp
loopne
push
jl
aad
test
xchg
out
and
in
out
test
add
mov
mov
jecxz
roll
pusha
jmp
mov
dec
add
addr16
xlat
jnp
es
cli
inc
add
test
mov
cmpsb
push
and
insb
aas
add
sbb
sbb
aas
ja
leave
jl
fucomi
xchg
dec
push
add
mov
push
push
ret
lahf
je
dec
mov
data16
jae
sbb
sbb
xchg
lea
or
mov
and
push
mov
xor
fadds
pop
inc
inc
addr16
test
push
push
jae
popf
stos
cmc
pcmpgtd
lret
out
loop
cmp
jbe
loopne
ret
imul
in
push
setb
notl
andb
es
inc
dec
js
sti
pop
inc
sahf
sbb
andb
es
mov
sti
jno
mov
insl
outsb
lahf
push
or
jb
and
mov
sti
imul
and
lods
mov
sti
in
gs
in
jbe
addl
hlt
in
outsb
xor
shl
xor
cmpsb
mov
push
out
jno
push
scas
jne
sbb
jl
push
xor
xor
jmp
int3
jb
xchg
lahf
xor
mov
and
out
add
pop
loopne
add
sub
mov
mov
push
mov
jp
cmc
mov
xchg
jb
xchg
mul
mov
cmp
ds
bound
pusha
lods
inc
fcoms
jne
add
dec
orb
sub
adc
mov
out
lods
pop
mov
das
ss
les
push
clc
fmull
lock
ficomps
fmull
je
adc
repnz
nop
xor
xor
inc
ret
mov
loopne
inc
cmp
add
aam
jecxz
nop
divb
lcall
adc
adc
inc
mov
ret
mov
sub
adc
cld
int3
js
in
scas
in
add
pop
mov
out
jb
sti
or
popa
push
int3
mov
push
fdivs
pop
or
stos
mov
ja
and
jge
pop
and
mov
cmp
fdivp
lods
std
push
xor
hlt
pusha
fimuls
roll
pusha
cmp
inc
bnd
popa
cmp
ret
push
ljmp
mov
push
lods
pop
iret
mov
in
je
or
sub
movsl
fidivs
stos
inc
pop
add
inc
sbb
mov
or
mov
movsl
inc
xor
stc
fcomip
push
out
mov
movsb
adc
jg
or
or
test
adc
add
aaa
sub
mov
jp
push
adc
or
add
add
jecxz
ljmp
bound
clc
divb
adc
xchg
and
xchg
cmpsl
xchg
jne
push
cmp
add
dec
ficoms
sarl
pop
pop
dec
aam
sbb
sub
sub
es
aaa
pop
iret
loop
add
rolb
and
push
out
stc
fsubrl
sbb
fwait
jno
xchg
test
fdivl
mov
stos
dec
outsb
leave
xchg
stos
mov
mov
test
orb
pop
push
adc
mov
test
xchg
push
jbe
pop
shrb
xchg
jbe
mov
xor
movsb
popf
jbe
shl
aaa
test
cmp
flds
push
int
sub
push
insb
push
xor
mov
filds
sbb
mov
movsl
adc
adcb
jb
rorb
xor
fs
das
sub
push
inc
js
imul
and
dec
push
mov
ds
push
jb
int
test
test
and
fneni(8087
cmp
rcll
pop
lcall
add
outsb
cmpsb
and
sbb
sbb
es
xor
jl
sub
sti
test
adc
push
lcall
cli
bound
cwtl
sub
in
dec
pop
js,pt
insl
push
add
ret
arpl
movsl
push
cli
xchg
mov
sarl
stc
xor
jne
sub
movsb
xchg
mov
mov
adc
daa
das
jmp
push
pop
xchg
nop
add
pop
or
lods
jb
push
xchg
mov
lods
jmp
jnp
push
xchg
dec
sti
jae
pop
mov
mov
int3
fnstcw
adc
dec
daa
mov
jbe
mov
jns
outsb
pop
movsl
mov
loop
test
pop
aas
aam
inc
std
push
push
popa
insb
lea
jmp
aad
jmp
jg
je
shr
inc
out
loop
mov
xchg
add
inc
fstpt
mov
dec
clc
inc
scas
add
test
xor
adc
dec
mov
iret
ss
adc
cli
fstl
adc
mov
mov
mov
inc
jno
sbbb
popf
test
jecxz
ds
jae
fnstsw
out
lds
repz
repnz
andb
cmpsl
lret
dec
mov
jmp
xchg
cmp
jo
sub
pop
popf
inc
xchg
and
aad
loop
lret
mov
pop
insb
adc
jp
movsb
addr16
xchg
push
add
movsb
xchg
scas
jge
ret
push
nop
or
call
push
add
ljmp
sbb
call
ja
stc
aam
pusha
add
lahf
sub
and
adcb
dec
inc
mov
scas
push
cltd
and
jmp
sar
sbb
movb
ficompl
push
dec
movsb
xor
cmpsb
add
xchg
adc
sbb
mov
add
pushf
dec
push
ljmp
incl
in
iret
fcmovnu
insb
cld
mov
cs
mov
nop
int3
add
sub
inc
xorl
shr
pop
mov
imul
out
je
inc
mov
sub
stos
push
imul
mov
add
mov
movsl
cltd
sbb
jns
addr16
push
or
and
out
push
xchg
popf
in
mov
adc
xor
aas
xchg
test
notl
mov
rorb
mov
das
test
add
arpl
mov
push
cmpsl
shrb
push
mov
loope
inc
fsubrs
xor
jne
jo
addr16
fsubrs
add
movsb
cld
pop
push
fcmovnb
rcrb
fdivrs
jno
cmp
adc
mov
push
push
mov
push
fsubp
lock
jns
fidivs
lcall
movsb
and
pop
iret
pusha
xor
lds
adc
push
or
test
int3
fcmovne
mov
pop
inc
mov
and
hlt
sbb
je
movb
and
xchg
mov
rolb
add
into
jne
mov
in
loop
jl
or
test
ret
out
ret
inc
int
mov
pop
pushf
or
pop
loope
sbb
mov
mov
repz
int3
gs
in
outsb
lahf
iret
fistpll
pop
cmp
xor
imul
push
stos
and
loopne
xor
movb
lods
aad
in
pop
movsl
mov
nop
bnd
loope
gs
repnz
cli
mov
aas
arpl
sub
mov
mov
inc
das
mov
adc
and
insl
in
clc
int3
pop
push
rcrl
icebp
dec
xchg
mov
lea
das
icebp
pop
div
xor
mov
cltd
lods
fwait
loope
cltd
pop
sbb
xchg
and
cmc
lret
add
icebp
xchg
sbb
imul
aam
inc
jbe
push
test
xor
inc
sti
cmp
xor
jae
aam
mov
cmpsb
adc
mov
jle
push
adc
daa
and
test
inc
mov
xor
or
rorb
movsb
mov
mov
jae
cmc
popa
pop
add
in
fs
fldenv
imul
cmp
rol
add
repz
xor
adc
sbb
xchg
mov
mov
push
sbb
adc
pusha
xchg
sub
or
and
xchg
jge
cmc
int
and
lret
sbb
popf
dec
and
cmpb
jae
cmp
or
add
add
arpl
or
pop
jge
sbb
add
sub
jns
mov
cmp
out
xor
inc
pop
sbb
fcompl
lcall
in
xchg
inc
es
dec
xlat
sbb
rcrl
fdivrp
dec
push
xchg
addl
dec
pop
cmp
dec
stos
mov
pop
xchg
imul
lcall
enter
lods
dec
mov
dec
xchg
jb
bound
dec
and
jge
push
push
iret
add
daa
mov
sub
aaa
leave
add
push
rolb
into
pop
xchg
lahf
adc
mov
and
pop
pop
mov
xchg
xchg
sbb
jae
cli
fsub
lock
imul
adc
mov
sbb
pop
adc
orb
dec
cmp
sar
cld
mov
adc
popa
jns
out
pop
cmp
sti
jo
cmc
or
jb
xchg
xor
and
in
scas
into
xchg
or
cli
jecxz
rcl
adc
ret
insb
push
aaa
data16
dec
jmp
add
dec
push
dec
imull
add
lods
lcall
mov
dec
xchg
xlat
fmull
push
lds
jmp
jmp
insb
or
xchg
cmp
stos
push
dec
or
inc
repnz
dec
push
insb
adc
mov
cmp
inc
fnstcw
repz
outsl
in
or
mov
pop
xchg
sbb
mov
mov
sbb
sub
das
das
sub
add
pop
cmp
mov
cmp
add
inc
scas
lock
shrb
xor
sbb
jp
and
or
lcall
mov
sahf
pop
pop
jle
lret
add
iret
jmp
xor
mov
ss
lret
mov
mov
mov
out
js
sbb
jnp
sub
dec
jo
jae
cmc
ficoms
push
das
mov
mov
lcall
jno
or
fcoml
sub
sbb
push
jle
scas
daa
outsb
xor
sbbl
mov
jp
aaa
loop
je
pop
fbstp
outsl
push
pop
lock
into
and
cwtl
test
rorb
push
adc
dec
adc
push
mov
jo
aam
jecxz
or
pop
decb
dec
xor
cmp
dec
ds
fsubs
mov
or
rcl
popf
loop
shrl
cmpb
out
mov
arpl
icebp
imul
out
aad
and
mov
pop
sarl
mov
cwtl
fmull
lcall
int
mov
adc
ja
lds
and
movsb
pop
lret
sub
xor
sub
mov
xchg
ds
sub
adc
add
sub
das
mov
cmp
lods
rcll
loope
aad
lods
xor
test
sub
mov
in
addr16
fs
mov
scas
mov
ror
mov
add
xlat
aas
stc
inc
jno
ja
cs
mov
fwait
mov
mov
mov
xchg
jle
inc
jne
stos
popa
pushf
lds
stos
jecxz
mov
pop
adc
push
mov
bound
cmp
xchg
or
and
fnstsw
dec
in
jnp
pop
lcall
xchg
adc
cmpl
push
inc
mov
jns
sub
or
pop
roll
push
jge
shrb
jle
imul
pop
xor
and
in
or
ret
fdiv
mov
push
xchg
clc
in
mov
aas
push
rolb
dec
mov
push
sub
fwait
sub
cli
inc
jmp
data16
lahf
cmc
repz
dec
push
out
or
add
xlat
dec
iret
test
jp
push
icebp
fbstp
shll
sbb
imul
movsb
dec
mov
cmpsb
sbbl
push
or
dec
stos
imul
and
inc
scas
push
leave
sbb
xchg
jb
jg
and
jne
and
mov
cmp
or
xlat
inc
xor
mov
int
mov
adc
jo
mov
mov
in
gs
lods
addr16
scas
out
add
pop
daa
jae
imul
lods
push
repnz
push
data16
jmp
ds
xor
bound
or
mov
xchg
sahf
jbe
sub
icebp
loopne
pusha
sbb
pusha
push
mov
jl
shrb
mov
adc
imul
push
jnp
mov
bound
fucomi
xchg
lock
incb
cld
clc
aas
add
xchg
inc
lahf
jl
int
jae
rolb
xor
cmp
xor
fiadds
push
pop
insb
jecxz
psubsb
fstpt
add
ja
pop
aas
push
adc
xchg
jle
rol
lret
and
lds
ds
lret
in
mov
test
xor
stc
adc
out
push
arpl
enter
jne
mov
pop
std
adc
das
ss
fs
mov
and
mov
in
mov
flds
dec
in
jne
adc
mov
cmp
push
jns
test
pusha
sahf
mov
mul
pop
ret
rcll
psubw
jmp
cmp
fldcw
xchg
mov
and
imul
dec
in
jg
data16
lock
aam
or
xorb
in
sahf
dec
mov
test
and
mov
xor
mov
lcall
movsl
adc
inc
mov
arpl
mov
cmp
pop
or
cmp
daa
fistl
lcall
sub
xlat
loope
rolb
into
andl
inc
hlt
test
out
das
mov
xchg
std
scas
adc
rcll
lods
push
push
and
sti
das
ljmp
int3
loope
and
cs
and
jecxz
pop
scas
lahf
pusha
xor
dec
jle
addr16
mov
fnstsw
sahf
inc
mov
jno
filds
jle
jo
pop
sbb
push
jae
cmp
pop
fdivrs
xchg
insl
xor
iret
add
or
adc
or
xor
fildl
jb
ss
into
xchg
pop
or
iret
sub
rcrl
mov
mov
xchg
icebp
cmp
inc
sub
adc
push
mov
gs
mov
lds
push
stos
ret
inc
popa
mov
sub
jmp
fstpt
hlt
push
cmpsl
pop
and
mov
sbb
adc
cmc
test
jb
jl
cld
mov
and
ret
xor
fs
push
js
jne
roll
dec
and
jb
loopew
sub
test
jmp
add
jbe
push
test
iret
pop
or
and
push
fdivrs
ja
test
fisttpl
dec
add
repz
cmpsl
push
shlb
testl
fisttpl
xor
or
inc
jg
or
bound
lcall
outsl
nop
sarb
ja
imul
int
stos
cmpsl
loop
adc
ret
sahf
lds
mov
fmull
stc
mov
orl
pop
stos
push
sbbl
mov
dec
push
mov
bound
outsb
pop
sub
mov
sub
in
push
rolb
addl
mov
repnz
scas
in
dec
std
movsl
aas
xor
pop
je
lret
lea
dec
add
fists
cli
or
cmpsl
inc
inc
popf
and
fdivrs
xchg
jg
add
or
iret
mov
rorl
pop
add
roll
sub
xor
and
mov
xor
sar
mov
add
cmp
mov
mov
lahf
es
dec
jge
ret
aad
ds
leave
inc
inc
cmpb
pop
fwait
stos
dec
movsb
push
push
xlat
shlb
sub
or
sahf
les
xlat
push
adc
rorl
or
mov
mov
mov
insb
cmc
pop
cmpsl
pop
adc
cmp
cld
adcb
repnz
popf
pusha
mov
call
sbb
jge
sbb
notb
mov
push
out
or
pop
jmp
adc
xchg
xlat
jns
div
lret
ja
scas
leave
fwait
push
fs
push
fs
xchg
adc
sub
pop
lods
in
das
test
shll
inc
or
outsl
cwtl
out
add
jl
push
scas
lods
loop
dec
jle
xchg
sub
mov
es
xor
out
mov
daa
in
out
mov
movsb
dec
pop
pop
push
jmp
jno
arpl
mov
addr16
dec
stos
adc
jg
ret
jb
jge
leave
enter
push
cli
sub
and
js
mov
fucom
mov
adc
pop
inc
in
dec
stc
ficoms
or
enter
or
adc
adc
or
inc
dec
sub
xchg
mov
mov
xchg
dec
lds
fnstenv
xchg
mov
repnz
aad
push
adc
pop
jb
lock
cmp
in
out
js
mov
out
addb
int
dec
int3
mov
int
pop
test
push
mov
shlb
repnz
in
pop
loopne
xor
subl
mov
stos
jl
data16
xchg
xchg
lret
jg
xor
loope
call
pop
push
ja
push
xorl
cmp
out
popf
rclb
mov
sbb
inc
sub
xlat
sub
ds
xchg
in
fcmove
push
adc
js
sub
add
out
add
jns
ss
rorl
int3
xor
bound
mov
fisubs
ret
mov
mov
rcll
pop
jbe
lcallw
xchg
in
cmp
insl
out
and
in
inc
push
jns
and
and
mov
and
test
aam
cmp
mov
xchg
in
push
inc
dec
fsubs
lock
fisubrs
cmp
adc
test
and
ds
and
xchg
xchg
pop
and
rcll
test
xor
sub
mov
pop
mov
ret
int
stc
into
pop
shrl
mov
sbb
mov
int
pusha
subl
adc
mov
sub
into
cmc
in
fmull
mov
scas
push
loop
mov
test
inc
add
insb
push
daa
ret
sub
jle
sahf
adc
out
jmp
push
add
push
aas
sub
gs
xorl
loope
sbb
cmp
int3
add
and
mov
cmc
shl
hlt
mov
push
orl
lcall
mov
scas
data16
add
test
jmp
and
add
nop
inc
cmp
mov
ret
sbb
call
inc
push
dec
jge
xchg
int
jle
add
and
aad
or
jle
rcll
ret
jmp
adc
insl
ljmp
fcomp
enter
test
xor
pop
sub
mov
cltd
gs
sub
mov
in
push
movsb
dec
sti
ds
xchg
mov
scas
adc
adc
mov
out
out
pushf
xchg
dec
xor
repnz
aad
dec
fiadds
pop
imulb
std
cmp
imul
sbb
jge
sub
jmp
cmp
dec
ss
pop
jo
imul
pop
or
cmc
and
xchg
xchg
aaa
orb
pushf
jns
pop
dec
sar
mov
in
mov
outsb
test
adc
jno
inc
std
mov
mov
in
mov
push
cld
mov
pop
in
mov
mov
sbb
pop
enter
jnp
mov
lret
fists
inc
sbb
inc
mov
or
sub
jmp
xchg
or
cmp
je
push
bound
ljmp
daa
int3
loope
cld
xchg
inc
jmp
stos
sbb
repz
adc
sub
and
movsl
mov
push
clc
xchg
jae
daa
add
decb
mov
or
mov
ret
stos
push
jne
push
sbb
sbb
cli
push
call
mov
inc
or
mov
outsl
lret
pop
out
les
jmp
jp
ljmp
out
movsl
push
jecxz
pop
mov
dec
out
push
pop
fldenv
lahf
dec
daa
xor
or
gs
mov
ds
clc
pop
jecxz
xor
pop
inc
xchg
pop
xor
lret
push
or
xlat
addl
jecxz
mov
stos
repnz
dec
jg
fcos
sbb
divb
mov
xchg
test
inc
jge
sarl
shl
sub
outsb
jae
pop
fwait
lea
or
mov
sbb
cwtl
cmp
lds
adc
lods
sub
pop
sbb
dec
xchg
sti
pushf
dec
inc
movsb
leave
or
jmp
xchg
fdecstp
fistps
jmp
je
cs
mov
popa
fidivs
in
xchg
mov
test
ja
int3
pop
sub
sub
cmp
lods
jbe
cmp
fwait
and
in
mov
xchg
pop
cmp
sbb
pop
icebp
mov
push
outsb
push
fnsave
fcompl
mov
outsb
mov
ret
add
in
dec
test
xor
sub
cmpsb
fnstenv
jecxz
mov
mov
jmp
cmpsl
fcomps
fisttpll
fstpt
loope
sahf
and
mov
je
cli
fsubr
push
push
sub
test
sub
stc
cmp
pusha
shlb
lcall
jl
mov
hlt
fildl
dec
inc
mov
jl
push
add
lods
dec
faddl
scas
popa
inc
or
adc
pop
push
test
sub
cmp
insl
mov
insb
sbb
or
dec
jae
cmp
sbb
test
movl
inc
outsb
jle
sbb
pop
or
shl
aas
cmp
sbb
je
in
and
sbb
bound
bound
sbb
and
xchg
aad
cmp
xchg
and
cld
pushf
mov
in
lret
into
js
lods
mov
sbb
xchg
add
mov
xor
ds
js
aas
cld
mov
mov
stc
add
scas
or
inc
sar
sub
nop
fxch
mov
jno
push
jl
int
inc
sub
dec
hlt
adc
outsb
outsb
dec
repz
sub
dec
sbb
mov
int
jae
in
inc
or
cwtl
outsl
fsub
scas
sub
inc
add
dec
out
push
push
xor
push
mov
mov
mov
mov
lea
sbb
cmc
pop
cbtw
inc
mov
mov
mov
pop
dec
or
mov
imul
cmp
adc
mov
adc
orb
mov
mov
and
inc
hlt
rcrl
cmp
ret
nop
cmp
icebp
jmp
outsb
ret
inc
or
mov
lods
movsb
xor
movsb
dec
sahf
shl
and
mov
push
lock
dec
push
mov
movb
dec
out
outsb
push
enter
es
push
pop
adc
mov
insl
inc
pop
jle
lods
rorb
add
pop
and
popa
cltd
mov
mov
enter
ja
repnz
mov
jo
push
scas
dec
fnstenv
pop
dec
fwait
jb
inc
mov
fisubrl
js
jb
pop
mov
mov
or
dec
sub
movsl
rcll
add
das
dec
cld
loopne
pop
push
add
das
xchg
jne
outsl
sahf
out
rcl
fadd
push
ss
xchg
in
xor
xchg
and
lods
dec
test
fs
add
jne
mov
adc
add
call
inc
imul
add
insb
out
add
dec
adc
in
add
jmp
sbb
inc
sub
dec
xchg
andl
roll
xchg
lcall
popf
shll
push
xchg
sahf
std
dec
jmp
das
nop
fidivrs
les
addr16
fisubs
xor
dec
xchg
popf
adc
sahf
sub
jo
lret
mov
comiss
xchg
cli
mov
popf
loope
xchg
push
cltd
mov
push
mov
adc
int3
rcrl
push
negb
mov
cwtl
out
mov
sub
pop
stos
pop
pop
sbb
movsl
cs
imul
mov
outsb
mov
fabs
push
cmp
mov
mov
enter
mov
aam
xor
adc
dec
push
gs
push
mov
ret
das
fs
lods
in
in
stc
std
shlb
push
cltd
imull
les
pop
jo
leave
and
adc
stc
xor
leave
or
shrl
mov
xchg
push
cs
mov
in
pop
push
mov
xchg
daa
mov
pop
dec
add
test
sbb
push
fisubl
cmp
decl
xor
ljmp
jae
inc
mov
ja
test
ljmp
rcrl
push
dec
xchg
out
fs
mov
ffree
push
mov
scas
roll
lahf
test
inc
cs
subl
call
arpl
adc
xor
cltd
cld
jge
adc
lcall
mov
mov
and
loopne
adc
faddl
inc
lret
sbb
pop
jae
mov
adc
js
pop
xor
fnstsw
in
jno
and
fcoms
jns
cwtl
jl
inc
shl
pop
sub
cld
push
xchg
js
xor
xor
ss
pop
divb
mov
push
mov
hlt
ds
mov
mov
rorl
inc
lods
jno
scas
jnp
pop
es
pop
mov
sbb
aam
popf
jne
mov
in
stos
xor
push
insb
cmp
add
jl
sbb
or
adc
mov
aaa
fcmovnbe
outsb
mov
cmp
fcomip
dec
dec
mov
int3
xchg
ret
cmp
sbb
sarb
into
fsubr
les
mov
daa
aam
std
ds
push
in
mov
shll
adc
aas
mov
push
and
out
mov
mov
jge
ret
cmpsl
xor
out
xchg
mov
aaa
lods
les
push
cmpsl
scas
add
mov
sub
fstl
inc
aas
mov
push
pusha
xor
test
sbb
adc
int
stos
push
mov
scas
scas
cmp
lret
into
daa
push
mov
addr16
mov
repz
pop
pop
negb
xchg
sbb
bound
xor
cld
sub
inc
push
not
jbe
pusha
stc
pop
and
jp
pushf
xchg
js
dec
out
das
testl
adc
push
adc
movb
movsb
pusha
scas
fs
sub
pop
mov
shlb
mov
shll
pop
out
dec
imul
inc
or
cmp
dec
or
mov
push
or
sub
in
adc
scas
sti
and
mov
dec
fxch
lds
sub
adc
push
negb
lahf
mov
js
or
out
stos
ret
jae
adc
in
enter
ret
fisubs
jle
push
xlat
sbb
mov
xor
push
inc
mov
jle
xchg
xchg
es
subb
leave
pop
or
outsl
add
aaa
cmp
sub
mov
pusha
dec
pusha
mov
mov
stos
daa
in
add
sub
sti
cmp
in
out
inc
mov
repz
fs
out
fnstenv
add
imul
js
mov
mov
dec
cmpsb
aam
lods
inc
ror
inc
dec
hlt
mov
jp
inc
stos
xchg
hlt
and
jo
push
enter
push
push
jnp
xor
clc
aad
cmpl
loope
imul
addr16
adc
sbb
movsl
mov
xlat
mov
movsl
imul
scas
pop
sbb
clc
repnz
fstps
cmp
hlt
out
mov
adc
jle
xchg
mov
jmp
and
fistpll
jae
loopne
sbb
inc
ds
clc
cwtl
shlb
loope
nop
pop
xchg
mov
dec
cmpsb
mov
inc
add
push
pop
adc
push
divps
incl
repz
sti
popf
std
stc
popf
sub
xrelease
aaa
mov
add
jmp
push
adc
sub
push
int
inc
xchg
lds
cmp
mov
cltd
faddl
xor
mov
mov
mov
mov
mov
int
dec
jecxz
aaa
ss
xor
shll
adc
add
repz
inc
push
shll
cmpsl
jg
cmpb
les
or
or
xor
lds
push
inc
dec
scas
mov
sub
lock
add
outsl
jae
mov
cwtl
pop
fstpl
xor
loopne
mov
push
jo
xchg
add
arpl
push
adc
jnp
loope
test
or
add
sbb
idiv
jne
jge
test
test
loopne
xchg
or
jno
rolb
cmp
repz
insb
aam
pop
cmp
addr16
inc
inc
lret
adc
jle
cmp
std
leave
mov
in
int
call
ja
push
outsl
dec
mov
mov
out
or
cmp
lret
add
sub
sub
xor
add
adc
fwait
inc
clc
addb
clc
loope
js
jp
and
adc
inc
loope
and
pop
and
mov
sbb
scas
mov
addr16
ljmp
inc
insl
push
pop
es
lahf
aam
jne
leave
fs
xchg
adc
sub
ljmp
adc
aas
push
jae
divl
pop
pop
repz
lods
test
repnz
repnz
push
jmp
mov
cs
test
aaa
jecxz
push
inc
jmp
or
jnp
shl
stc
loope
je
pusha
push
push
cltd
mov
xor
and
ja
sub
mov
jb
jle
filds
push
pop
outsl
inc
inc
or
std
out
mov
insb
inc
dec
cmp
jnp
pop
xchg
jo
pop
and
fs
call
loope
or
sbb
sbb
add
lock
xor
incb
test
ss
andl
ds
cmpsl
or
sti
dec
push
stos
in
ficoml
leave
dec
notb
sahf
repnz
aas
push
lea
enter
roll
cmc
adc
and
mov
and
pop
inc
push
push
add
mov
andl
clc
cmp
jle
pop
enter
push
pop
daa
lahf
out
nop
or
xchg
adc
fistpll
outsl
mov
xchg
adc
xchg
sub
dec
inc
push
mov
sub
cmp
mov
xlat
sbb
iret
das
xor
push
mov
and
inc
movsl
dec
xchg
inc
push
mov
sbb
mov
push
fwait
xor
pop
lret
mov
xor
sbb
pop
push
sbb
jmp
xor
lret
call
inc
xlat
add
test
leave
mov
jge
mov
test
addb
dec
jnp
ljmp
xchg
stos
push
lds
jnp
jmp
dec
mov
in
cld
add
loopne,pt
mull
mov
addr16
mov
in
rcr
mov
mov
or
or
test
hlt
pushf
cmpsb
fildll
imul
xchg
sti
cli
aad
adc
inc
push
push
ret
push
gs
jecxz
dec
push
push
addr16
roll
imul
ficompl
scas
or
jno
int
shll
sub
fisttps
inc
jo
push
in
cmp
xchg
mov
and
push
jmp
in
pop
jbe
ret
fdivp
test
adc
aam
fwait
or
roll
xor
mov
inc
lret
fwait
pop
movsl
add
icebp
aaa
dec
scas
shlb
xor
xor
daa
adc
aam
stos
inc
mov
pop
sub
mov
and
push
mov
cmp
xchg
nop
add
ss
ficoms
inc
xchg
xchg
cltd
jbe
inc
mov
sub
xchg
or
insb
dec
mov
jecxz
clc
push
jge
pop
xor
rorl
lds
push
dec
repnz
jb
repnz
jle
sbb
fstp
jnp
sbb
ss
sub
data16
nop
lds
mov
pop
inc
lahf
rcrl
scas
into
rorb
ret
add
jge
cltd
in
movsl
ja
imul
fisttps
int
dec
jae
ljmp
dec
fcomip
adc
jnp
pop
jmp
nop
jle
cltd
dec
cltd
insb
js
xlat
xchg
std
cli
inc
js
cld
leave
xchg
imul
lock
jns
mov
andl
and
fnsetpm(287
push
sarb
stos
xor
loop
push
out
mov
jmp
xor
jmp
mov
ficoml
mov
rorb
pusha
lods
push
dec
push
gs
cmc
add
dec
fsub
les
dec
stc
outsb
mov
popf
and
mov
lods
adc
or
inc
push
shrb
lahf
rol
aas
call
pop
pop
mov
cwtl
scas
lahf
fwait
int
cs
sbb
xor
sbbb
adc
cmp
mov
push
inc
in
into
and
into
mov
xchg
aad
xchg
xor
loopne
or
dec
shlb
sbb
mov
jae
xchg
add
ljmp
notb
aad
fldt
or
and
xor
add
add
dec
outsb
mov
mov
pop
xchg
negl
cmc
xor
data16
cmpsb
mov
add
push
xor
mov
mov
hlt
xchg
mov
push
aam
rorl
adc
or
adc
and
mov
lret
int
mov
mov
mov
xchg
dec
inc
and
mov
scas
xor
nop
ss
or
into
test
mov
div
jl
mov
addr16
cmp
xor
loopne
push
mov
xchg
add
lcall
and
iret
mov
xor
lret
or
fstl
lock
mov
scas
int3
dec
inc
lcall
pop
sub
lock
sbbl
and
data16
gs
loope
push
add
aaa
mov
xchg
shll
fcoml
arpl
dec
mov
fdivl
movsl
in
xor
mov
xchg
sbb
push
enter
add
fbld
jge
xor
jle
stos
subb
push
loopne
push
dec
enter
in
fbstp
nop
and
sub
faddl
jle
pop
mov
stos
in
loopne
fildl
inc
daa
push
in
or
pushf
les
out
icebp
ds
push
jnp
sbbb
shl
dec
sbb
mov
dec
call
inc
jbe
into
jns
cmpsl
hlt
adc
mov
hlt
xchg
cld
inc
icebp
or
movsl
push
pop
or
cmc
adc
std
andl
xlat
lods
clc
aad
aaa
sub
xchg
int3
jnp
mov
sahf
jmp
mov
cmp
pop
clc
adc
xchg
cld
outsl
mov
xchg
lret
sbb
outsb
mov
push
es
insb
pusha
fstp
fs
hlt
pop
push
inc
lock
int
ss
dec
mov
mov
mulb
test
pop
pop
inc
fidivs
xchg
rcrb
loope
pop
lea
stos
fnstcw
sbb
cld
clc
popa
mov
fisubrl
icebp
or
jl
sub
imul
xchg
mov
or
xchg
sub
sbb
punpckhdq
jbe
or
addr16
movsl
pusha
adcb
shlb
jmp
loop
add
sbb
sub
iret
fistpll
popf
push
ret
push
mov
call
sub
enter
xor
sbb
sbb
sub
test
loopne
jp
jb
or
andb
cmpsl
imul
lea
popa
mov
add
and
lea
add
adc
imul
inc
out
fcmovnu
cmp
sbb
ficoms
sbb
in
xchg
jne
in
xchg
data16
mov
mov
subb
mov
stos
xorb
test
sub
add
sbb
andb
data16
or
and
fdivr
test
call
sti
divl
lods
xchg
rorb
repnz
call
into
mov
int3
dec
test
fisttps
xchg
pusha
cmp
andl
dec
aaa
jl
js
sarl
jecxz
les
cs
push
adcl
in
jle
js
jnp
cs
ljmp
pop
mov
cmp
mov
add
xchg
xchg
xchg
ret
std
inc
enter
adc
stos
les
sub
jle
adcb
add
rorb
mov
leave
xlat
outsb
das
pop
push
push
mov
fsubl
ret
adc
pop
push
dec
xchg
int
lea
and
cld
cmp
xchg
jmp
xchg
mov
push
stc
fxch
pop
jge
daa
cwtl
xor
aas
loop
add
popf
fnstenv
dec
lret
mov
pop
jmp
jle
mov
cmpl
mov
jecxz
and
notl
xor
adc
push
xchg
xor
push
mov
into
adc
jo
nop
inc
xchg
mov
cmp
mov
cmp
dec
dec
push
add
mov
add
jns
adc
mov
mov
lret
enter
mov
scas
std
xor
or
ss
ljmp
out
mov
push
add
xchg
pop
fsub
inc
add
or
and
and
popf
ret
push
mov
mov
shrl
dec
jno
xlat
ja
push
sub
mov
in
xlat
or
andl
pop
rorb
cld
sar
orl
sbb
pop
sub
sub
pop
jb
mov
cmp
xchg
mov
xchg
jb
or
add
lret
pop
outsl
and
mov
pop
push
mov
xchg
cmp
add
xor
sbb
mov
mov
in
imul
aaa
cmp
loope
in
insb
xchg
lret
push
mov
push
mov
and
fsubr
sbb
adc
or
adc
out
loop
sbb
dec
add
jne
jae
xchg
test
jo
add
cmp
lods
les
sahf
xchg
lods
in
cmc
dec
pop
aad
add
dec
daa
hlt
xchg
outsb
push
add
fnstenv
jp
sbb
stos
pushf
ror
add
cmpb
adc
xorb
mov
test
enter
icebp
imul
js
push
rclb
add
les
pop
xor
in
shrb
add
shlb
sahf
sti
xor
push
nop
jne
in
mov
insb
add
outsl
rcrb
imul
hlt
nop
add
xor
lcall
mov
insb
addr16
daa
mov
hlt
add
push
inc
pop
mov
stos
into
sbb
mov
lds
pushf
pop
mov
dec
outsb
nop
dec
lea
addr16
and
js
pop
jne
les
fwait
add
aaa
push
bnd
jmp
cmp
mov
push
lcall
lods
int
push
hlt
insl
mov
cmp
scas
push
lahf
inc
adc
push
leave
lea
ret
pushf
mov
fs
xlat
aad
and
or
pop
cli
xor
inc
push
lea
xchg
lds
lcall
mov
orb
mov
jne
add
pop
push
sti
lret
insl
clc
dec
fldt
push
popf
out
mov
adc
push
mov
sti
push
dec
mov
sub
push
movsl
xor
out
push
sbb
stos
es
cld
vpand
xor
fstpl
sub
enter
sub
mov
xor
pusha
xchg
stos
mov
les
movsb
adc
fldl
inc
mov
out
mov
and
cmp
mov
or
shrl
mov
mov
xor
repnz
lods
or
lds
rcr
xor
and
dec
push
loopne
inc
sub
mov
jp
cwtl
std
lea
cltd
out
shll
sbb
stos
sub
fwait
sti
pop
jmp
or
mov
and
cmp
push
jmp
jl
inc
cmp
inc
xor
int
or
cwtl
clc
push
cmp
mov
popf
stos
add
jnp
into
mov
jbe
push
mov
push
movsb
add
daa
cmp
int
cmc
mov
jmp
aaa
addr16
pop
jae
sbb
fucomp
popf
jne
shll
or
lods
lahf
push
repnz
add
sbb
jle
xor
xchg
loop
add
xchg
and
cltd
std
shrb
push
or
push
adc
adc
and
and
sbb
sbb
cltd
je
pop
inc
lock
movb
imul
jb
test
jecxz
cli
jp
xor
add
mov
repnz
push
xor
pop
jne
jmp
stc
cs
sbbb
xchg
icebp
outsb
xor
imul
daa
jmp
cmpsl
push
or
stos
sbb
sbb
leave
sbbb
hlt
nop
repz
jp
lds
in
aas
dec
fsubs
sub
mov
aad
push
or
add
incb
push
lcall
push
dec
sub
popf
cmc
bound
pushf
test
push
or
cmpsl
inc
mov
mov
int
idiv
or
fimuls
mov
rorb
repz
cwtl
icebp
stc
in
dec
jbe
in
les
jns
adc
cs
mov
xor
inc
aam
aas
scas
hlt
xchg
xor
lret
into
inc
cmpb
int3
and
divl
xchg
cld
rorb
shll
jg
cs
mov
jecxz
sbb
popa
cmp
mov
jbe
dec
sbb
sub
xor
xchg
enter
mov
call
sbb
ljmp
es
sbb
sbb
pop
lahf
pop
jae
push
test
or
addr16
sbb
push
test
mov
lods
xchg
in
mov
std
mov
fwait
xor
repnz
and
sub
stos
sbb
inc
cmp
aas
stos
and
ret
in
xor
adc
clc
dec
jge
pusha
mov
add
push
popa
mov
adc
sbb
stos
mov
mov
cmc
inc
mov
out
lcall
icebp
sub
out
ja
scas
jne
xchg
incl
std
lock
xor
xor
mov
dec
dec
sub
inc
sbb
cmp
mov
mov
sub
xchg
into
daa
mov
inc
mov
subb
xchg
add
insb
arpl
out
loope
sub
pushf
push
shll
jmp
mov
outsb
sub
daa
or
iret
lret
cmc
test
push
xor
mov
fisubl
ror
pop
pop
xchg
lret
int3
repz
jg
pop
cli
lods
pop
dec
and
sbb
xor
push
inc
call
cmp
ds
mov
and
lock
xchg
repz
das
inc
cmpsb
mov
leave
mov
in
inc
out
mov
scas
mov
adc
adcl
outsb
sahf
xchg
scas
sbb
mov
and
mov
in
or
dec
or
inc
adc
jb
mov
xchg
push
shll
sahf
jnp
mov
xchg
mov
mov
out
dec
outsb
popf
insb
cli
fisttpll
mov
and
scas
test
mov
or
cmc
add
shrl
push
ljmp
data16
push
sub
push
sarl
je
sub
arpl
arpl
andb
mov
stos
mov
lahf
jg
or
cmc
pop
sarb
sbb
push
enter
push
clc
mov
lret
fcoml
cmp
roll
int3
mov
mov
mov
scas
xorb
jnp
dec
pop
xchg
insl
mov
mov
and
push
stc
stos
sbb
inc
orb
cmc
cmpb
pushf
shlb
sub
mov
sub
sbb
mov
mov
ja
scas
cmpb
loopne
and
popf
jmp
aas
pop
jmp
pop
sti
dec
es
call
adc
stos
inc
stos
mov
inc
or
data16
hlt
add
push
add
cltd
out
push
cmpsl
sub
mov
sahf
or
sbb
cmp
les
jge
sub
enter
mov
mov
sbb
dec
xor
or
jge
add
int
push
sub
test
xchg
or
test
pusha
in
ret
cmpsb
fstl
xchg
lahf
ret
fwait
loopne
in
inc
sti
push
add
adc
es
ljmp
sbb
or
adc
mov
mov
push
push
bound
std
jge
mov
cmp
arpl
repz
out
out
mov
push
cltd
ret
mov
gs
adc
inc
sahf
push
sbb
mov
lea
xor
xor
imulb
cs
fmuls
jmp
inc
idivb
fs
cmpsl
sub
xor
pop
or
pop
push
scas
sahf
sub
adc
jmp
mov
xchg
or
out
xor
mov
test
mov
sbb
push
out
loope
xor
pop
out
stc
pop
jb
int3
xor
fs
outsl
cmpsb
ficompl
push
pop
fdivrs
lret
fsubs
xchg
out
adc
pop
mov
pop
jo
pop
xchg
outsl
xor
jbe
dec
inc
outsl
mov
cmp
and
cmp
fstps
mov
inc
mov
cmc
pop
jmp
data16
ds
test
mov
and
jecxz
sub
cmc
test
jb
mov
and
mov
mov
inc
inc
sbbl
imul
icebp
and
int3
scas
popa
mov
fstpl
cwtl
mov
adc
test
pop
push
aam
add
dec
push
mov
ret
sarl
loope
sub
inc
insb
jecxz
sub
pop
mov
cmc
mov
cld
cmc
xor
mov
mov
jnp
cmp
xor
in
pop
adc
push
pop
xchg
xchg
jge
push
les
and
and
xlat
sub
addr16
into
mov
cltd
arpl
adc
stos
add
lea
add
dec
leave
in
clc
insb
icebp
jl
sbb
sub
xor
add
xchg
ss
push
inc
stos
imul
test
mov
addr16
push
add
sbb
stos
jecxz
out
fwait
int
or
les
sbb
xchg
stos
pop
jmp
daa
movsl
mov
mov
pop
addl
dec
lret
sbb
std
test
jae
mov
jg
inc
xor
call
movl
stos
mov
movsb
aam
push
mov
and
outsl
je
jo
mov
aaa
ss
test
push
fcompl
popa
mov
push
dec
xchg
nop
test
insb
inc
mov
xchg
mull
cmp
outsb
aas
xor
lcall
xor
pop
push
mov
add
or
or
pushf
outsb
mov
popf
and
pop
jno
enter
or
loope
rol
rorb
add
fstpl
inc
and
sub
repnz
js
sbb
iret
mov
mov
cmpsl
mov
jle
jg
cmc
cmp
sbbl
dec
bound
mov
ficompl
lods
popa
xchg
pushf
andb
sbb
xchg
xchg
inc
add
fstpt
ret
fimuls
inc
aas
mov
lahf
mov
pop
push
stc
xchg
jb
mov
add
inc
orps
sbb
mov
push
cmpsb
dec
mov
mov
mov
cmc
enter
lcall
dec
fsubs
pop
call
xor
mov
xchg
pop
in
and
dec
jmp
test
aad
mov
test
bts
mov
lret
cmpsl
mov
jge
std
push
add
fisttpll
mov
lea
ss
mov
testb
lret
pop
stc
lcall
dec
ds
fimuls
bound
lods
hlt
mov
sbb
push
es
jg
ret
loope
inc
cltd
xchg
mov
lcall
push
pop
mov
add
pop
xor
cmpsl
sub
std
xchg
rolb
imul
in
dec
cltd
rep
or
mov
jmp
jge
insb
insl
pop
push
add
loopne
loope
xlat
cld
push
daa
fildl
andb
push
jp
pavgb
gs
adc
inc
push
mov
lahf
std
inc
mov
or
dec
mov
test
shll
sbb
std
jg
rcrb
adc
lcall
inc
pop
mov
and
stos
ss
jl
repz
sub
cwtl
outsb
stos
mov
into
push
mov
pushf
cmp
adc
jnp
repz
mov
subb
pop
in
mov
dec
xor
push
xchg
rorb
stos
decb
xchg
movsb
adc
sbb
lcall
xchg
sub
dec
stc
pop
jl
test
in
pop
push
pop
pop
jp
mov
fisubrl
push
pop
stos
add
and
mov
or
add
ret
mov
aaa
jmp
xor
push
imul
and
in
ss
fnstsw
stc
jge
inc
into
push
mov
lods
mov
jns
rcrb
mov
mov
inc
insl
inc
cmpb
mov
push
jae
sub
pop
and
xor
mov
xchg
sub
and
dec
jnp
xlat
jnp
test
fdivp
lret
fwait
imul
xor
push
and
inc
xchg
andb
sbb
test
lock
sub
dec
xchg
sarb
add
jb
fimull
mov
insb
std
sub
fists
mov
xor
mov
lret
cmp
test
sub
xchg
aam
cs
sbb
cmp
jecxz
nop
sbb
xchg
adcb
sub
jecxz
imul
mov
movsb
jns
jno
imull
add
sub
sahf
loop
and
pop
jl
pushf
cs
ret
lods
cltd
mov
les
bound
insb
push
xchg
adc
mov
aad
xchg
cmpsb
push
mov
mov
xchg
fwait
pusha
or
xchg
mov
je
scas
movsb
jae
outsb
xorl
ds
and
ljmp
mov
rorb
or
xor
mov
movsl
mov
out
xlat
xor
cmpsb
pop
mov
jnp
xchg
cld
sub
call
aam
inc
sub
add
adc
loop
jge
int3
cmp
std
adc
imul
pop
roll
or
add
xchg
jecxz
cmp
aaa
hlt
or
xor
cmp
sahf
in
sub
fnstsw
movsl
and
imul
cmpsb
fdivr
sub
xor
cs
mov
rol
sub
sub
negl
inc
inc
pop
les
mov
xchg
jg
mov
xor
insl
mov
pop
jb
xchg
and
xchg
push
out
js
mov
push
loop
rcll
popf
arpl
data16
ljmp
and
dec
xchg
insb
pop
cmp
lcall
lret
pop
mov
add
push
push
mov
sbb
jge
hlt
and
jmp
add
out
jge
je
pop
jbe
cwtl
loopne
sbb
icebp
rcrb
aad
adc
add
aad
add
jg
xchg
cmc
sbb
enter
jne
nop
sub
jno
push
jo
loopne
adc
fcmove
jae
enter
and
shl
repz
fidivs
sub
pop
decb
xchg
adc
cmp
jg
jb
fimuls
fistps
fnstenv
leave
test
mov
pop
and
push
add
pop
sub
loope
dec
mov
jg
sbb
enter
jo
cmp
inc
pop
mov
test
add
push
movsb
adc
rcrl
cltd
mov
shlb
mov
repz
jo
jno
pop
cmpsl
inc
je
sub
loope
mov
idivl
mov
push
xlat
jne
leave
daa
imul
lock
cmp
arpl
push
loopne
cli
mov
xchg
stos
lahf
scas
xchg
push
cld
or
inc
stc
inc
lret
sub
xor
push
mov
outsl
dec
jns
into
sar
cmc
pop
rcrl
sub
and
pushf
aam
pop
jl
sbb
inc
in
and
aad
pop
scas
lahf
cmp
stos
xor
sti
sbb
fwait
lea
cmp
aam
mov
sahf
lret
insl
rorl
jge
shrb
and
setnp
cmpsl
mov
inc
shl
call
test
add
push
add
in
jg
inc
mov
sbb
jns
adc
push
es
into
fisttpl
xor
sub
cmc
add
fdivrp
xorb
loopne
cs
rorb
xchg
loope
loope
inc
sub
dec
imull
mov
and
adc
inc
pusha
ficoms
rcrb
shrl
fcomps
sbb
mov
jle
repz
test
fimuls
dec
and
mov
psllw
adc
imul
cmp
jp
jne
jle
sbb
push
xor
mov
fbld
aad
jbe
xor
shlb
sysexit
sbb
shrb
mov
pop
xor
loop
jae
xchg
dec
pop
and
std
les
fucomp
mov
sti
and
insl
xlat
aad
outsb
sub
shlb
dec
fcomi
sahf
pop
add
bnd
outsb
lcall
into
test
out
movb
mov
fisubs
fildll
imul
adc
mov
ret
or
xor
in
push
pop
shll
movsb
xchg
sbb
push
shrl
or
ret
dec
push
daa
ljmp
gs
sub
aam
cmp
sub
int3
stos
popa
mov
push
cmc
mov
inc
fcmovne
xor
cmp
mov
pop
cmc
mov
leave
and
adc
in
out
outsb
push
xchg
loop
push
call
cmpsb
stos
adc
dec
cmpsl
daa
cs
outsl
sub
pop
and
xlat
out
jne
inc
lock
inc
sbb
in
popf
jo
icebp
movsb
add
push
in
int3
xchg
jp
pusha
hlt
andb
outsb
and
popa
jne
ja
mov
or
push
cmpsl
xor
pop
cmpsb
mov
push
leave
mov
mov
pop
hlt
lock
das
pop
movsb
sti
mov
popa
imul
es
aam
push
fadds
jnp
iret
out
aad
add
pop
cmp
ds
push
enter
aaa
mov
stos
andl
cltd
sbb
push
movsb
leave
sub
movsb
shrb
add
sbb
xchg
xchg
xor
test
mov
pop
sub
adc
or
mov
mov
sbb
jmp
or
lock
aad
push
insb
add
out
loop
jns
xor
push
xchg
cmp
repz
pop
mov
or
dec
js
push
stc
inc
dec
fs
cmp
psrld
mov
mov
inc
sub
dec
ret
faddl
sti
or
adc
pop
into
aam
sbb
in
stos
mov
lds
jnp
in
cmpsl
adc
xchg
mov
enter
cs
adc
mov
lret
adc
out
imul
data16
cltd
jecxz
add
lahf
dec
cwtl
cmpsl
clc
movsb
lahf
cmp
lods
cmpsb
pop
sbb
mov
jne
fsubrs
jg
xchg
dec
xchg
jle
and
cmp
xchg
js
lret
dec
xor
xor
xlat
adc
dec
out
outsb
stc
ss
or
lock
inc
insl
lret
cltd
or
add
stos
mov
call
iret
movsl
scas
jmp
mov
push
xchg
jle
mov
cmpsb
rcl
adc
sar
and
add
xchg
cmp
add
sub
cmp
or
push
lcall
adcl
cmc
push
lea
sub
stos
insb
dec
add
daa
dec
repnz
and
pop
inc
mov
icebp
inc
iret
cmc
repz
push
pop
inc
cmp
mov
stos
test
iret
inc
cmp
sub
gs
cmp
push
shll
add
jge
mov
fsubrl
jle
jns
or
push
xor
mov
mov
int3
cltd
mov
cmp
sahf
repz
and
pop
xor
jb
xchg
rcl
xor
imul
mov
ljmp
cmc
mov
adc
bound
sbb
notb
es
fcompl
mov
movsl
mov
fidivl
xor
or
cmp
imul
or
into
jle
pushf
xor
je
mov
lods
and
lock
mov
in
lret
js
pop
push
pop
push
hlt
popa
mov
cmp
inc
mov
push
cs
sub
sbb
mov
mov
xor
pop
hlt
aam
mov
pop
imul
enter
jne
aam
out
push
and
loopne
int
out
sub
push
add
in
test
mov
push
jmp
sub
push
int
loope
aam
mov
push
in
mov
cli
push
mov
or
popa
icebp
push
mov
aas
ss
dec
std
jmp
aam
das
test
aas
lahf
ss
sbb
shll
das
cmp
lods
out
lds
fwait
xor
sub
dec
in
lds
jbe
loop
out
out
test
sbb
dec
lahf
in
int
scas
insb
dec
and
shl
mov
sbb
push
fisubrs
movsb
bound
cmp
jle
mov
add
divb
mov
loope
cmpl
stc
stos
inc
pop
mov
cmp
rcr
mov
and
or
mov
xchg
mov
dec
jle
icebp
stc
mov
outsl
rcrl
dec
or
push
ds
mov
int3
pop
in
ja
lods
repnz
stos
scas
sub
jnp
dec
rolb
movsl
inc
mov
jle
or
fwait
rorb
cli
dec
xor
and
dec
lret
mov
mov
cli
and
push
repz
push
cmp
push
ljmp
sub
inc
push
jno
jnp
mov
in
and
lcall
jecxz
jle
pop
outsl
jle
rclb
mov
add
in
icebp
dec
push
stc
ds
xchg
rcll
aad
cmp
nop
daa
jb
mov
ss
repz
xchg
imul
fwait
mov
cmp
dec
andb
lret
dec
cwtl
fsubrl
and
mov
cmp
push
and
jg,pn
loop
cld
iret
jae
stos
sub
jmp
dec
sub
and
xor
pop
or
mov
pop
inc
xor
fwait
mov
repz
lods
pop
imul
lcall
lahf
jmp
jle
js
sub
mov
lret
cmc
int
push
dec
enter
xor
loop
mov
aas
lcall
jno
mov
mov
mov
cli
movsb
sarl
inc
or
stos
lea
and
sub
xor
dec
add
fldenv
cmpsl
test
outsl
movsb
test
cmp
dec
mov
push
mov
inc
cli
adc
adc
push
push
xorl
int
and
loopne
or
mov
insl
jecxz
sub
jno
jmp
jmp
dec
dec
icebp
outsb
mov
add
inc
pushf
fs
les
push
mov
adc
rclb
jp
dec
test
lcall
lods
fs
shr
data16
sbbl
push
rcrb
subb
dec
movsb
or
stos
and
xchg
test
das
ss
lea
sbb
ret
call
jo
cmc
push
sub
mov
cltd
ljmp
stos
push
jg
xchg
cltd
cli
lcall
shl
mov
push
hlt
push
dec
je
xchg
sub
dec
shrb
inc
insl
push
jle
out
add
pop
stos
mov
mov
or
shlb
xchg
data16
fidivl
fs
inc
data16
shlb
inc
out
xor
jno
cld
repnz
push
xchg
xor
push
adc
negb
mov
fidivrs
push
mov
adc
xchg
je
inc
mov
xchg
imul
cmp
dec
sbb
or
insl
adcl
test
mov
fs
inc
test
bound
pop
cmp
adc
lds
mov
fcomps
out
out
lcall
testl
xor
mov
xor
mov
aam
push
pop
sbb
repz
and
jl
pop
push
je
nop
mov
mov
mov
pushf
adc
sub
lret
pop
push
xor
js
dec
outsb
icebp
xchg
insl
adc
mov
mul
and
xor
data16
ficomps
inc
sbb
mov
inc
test
lret
lods
jecxz
xlat
fidivl
aas
jb
addr16
mov
add
xchg
or
xchg
jo
cltd
aaa
or
add
add
in
mov
int3
sbb
push
cmp
mov
arpl
fs
int
hlt
xchg
aam
lret
adc
or
sahf
cmpsb
fisubrs
gs
popf
push
or
inc
pop
sbb
jecxz
mov
shll
std
sub
push
call
pusha
stos
aad
inc
lods
sbb
mov
mov
lods
fwait
add
imul
jmp
mov
test
mov
xchg
outsl
xchg
mov
frstpm(287
sub
sbb
movsb
fs
and
pop
pop
xor
mov
xchg
sub
push
orb
cwtl
outsb
out
in
mov
int
mulps
mov
shlb
inc
std
add
add
xchg
in
push
push
sti
sbb
pusha
jnp
pushf
inc
outsl
or
dec
mov
mov
cs
imul
lret
mov
xchg
ds
jne
and
mov
cmp
loop
fsubl
add
mov
mov
adc
das
lds
in
int
adc
lret
rcll
pop
cs
mov
push
fwait
imul
enter
sub
xchg
sbb
repnz
cmp
mov
sbb
loopne
int
ss
adc
in
in
mov
pusha
inc
movsb
stos
ljmp
or
push
mov
fstpl
sub
ja
loope
cmp
imul
add
sub
jne
out
out
dec
cmp
loope
gs
aam
push
in
loopne
js
jl
xor
pushf
loop
mov
test
outsl
jg
mov
cmp
fsubrs
mov
sarl
xchg
inc
stos
dec
pop
cli
mov
add
test
stos
inc
and
out
mov
inc
xor
push
dec
scas
es
movsl
decl
inc
movsb
jo
lret
mov
push
pop
bound
mov
shr
lods
in
bound
rcll
movsl
sbb
dec
jb
xlat
xchg
inc
cs
sbb
push
pop
fdivs
rcl
mov
pusha
pop
xchg
dec
dec
int3
lods
movsb
push
roll
loope
jnp
arpl
popa
cltd
fxch
pop
cmp
push
push
imul
loopne
popa
fldl
mov
push
ret
mov
xor
mov
dec
jecxz
sbb
pop
or
pop
and
inc
inc
movsl
mov
ljmp
or
xchg
inc
test
cmc
jl
stc
jg
pop
cmc
jo
add
or
sbb
jne
aad
xchg
mov
dec
xchg
dec
lock
sbbl
fdivl
or
add
subl
mov
or
arpl
sahf
sub
ficompl
mov
cmp
inc
inc
lret
fisubl
out
mov
and
adc
sub
or
mov
jno
pushf
pop
in
fsubr
pop
test
sbb
push
in
leave
lods
mov
gs
insb
test
ret
pop
add
lods
add
mov
xor
sbb
mov
and
inc
push
ret
pop
lcall
xlat
out
inc
stos
push
cmp
xor
jo
aaa
in
test
push
xchg
jbe
jle
fsubrs
gs
rcrl
fiaddl
dec
popf
pop
sbb
mov
faddl
inc
jbe
xor
call
lea
out
xchg
call
fstl
dec
inc
inc
je
and
int3
pop
int3
gs
xlat
sarb
cmp
jne
ljmp
cmp
stos
mov
gs
mov
daa
dec
dec
jge
fdivl
ljmp
test
out
sbb
or
popf
cmpsb
mov
stos
lods
and
or
mov
jo
rcrl
repnz
pop
mov
push
push
and
cli
mov
outsl
add
or
jnp
mov
rcl
sbb
add
mov
test
xor
ret
push
push
adc
bnd
xor
or
mov
out
xchg
xchg
add
push
imul
push
imul
xchg
jae
scas
push
popf
pop
loop
xchg
sbb
movsb
pop
inc
mov
jp
ja
mov
enter
adc
out
add
cltd
push
cmp
cmp
mov
xchg
jge
xchg
pushf
inc
add
stos
cmc
mov
push
nop
fs
xor
dec
sub
stos
loope
enter
and
adc
mov
inc
pop
sbb
mov
ds
shlb
mov
fwait
out
repnz
test
popf
cmp
sbb
mov
shrl
arpl
dec
movsl
adc
pop
mov
push
sahf
cwtl
cmp
lds
shrl
jmp
push
adc
fimull
dec
push
mov
int
std
aad
jmp
push
loop
dec
push
es
clc
dec
mov
inc
mov
xor
loope
xchg
inc
push
xchg
fistpll
mov
movsl
es
xchg
out
sbb
xchg
xchg
cmp
rcrl
inc
mov
out
repnz
shrl
inc
push
scas
iret
and
dec
xor
pop
scas
push
subb
xchg
loopne
or
xor
shl
mov
mov
jp
mov
jmp
test
stos
test
dec
cmp
dec
je
mov
xor
add
sti
loope
pop
stos
pop
jecxz
push
arpl
imul
ret
insb
adc
inc
rcl
pop
cmp
loop
adc
aaa
in
stc
lret
or
jo
xor
or
jmp
push
push
dec
psubusb
push
cltd
push
inc
sahf
sbb
lret
test
cmp
lcall
stos
into
ljmp
in
mov
fiaddl
push
cwtl
dec
jno
jae
lret
imull
mov
add
aas
xchg
rclb
xchg
xor
xchg
push
lret
rclb
loop
add
movsl
decl
mov
and
fs
mov
in
mov
jp
mov
or
stc
ret
xor
cwtl
dec
lcall
imul
and
int3
push
in
mov
xor
dec
mov
lahf
cli
in
mov
fistpl
or
jl
sub
out
push
add
xchg
enter
xor
or
clc
push
cmp
mov
mov
xor
notl
cli
test
adc
fs
add
adc
test
dec
push
mov
adcb
mov
xor
mov
leave
in
and
sbb
cmc
cmc
fsubl
aam
mov
push
push
pop
push
xor
mov
sbb
jno
and
pop
pop
xchg
rorl
or
jno
test
loope
in
cmp
mov
dec
xor
fsubr
mov
and
adc
movsl
ss
jge
sub
xor
test
in
mov
dec
testb
mov
and
cmp
js
es
fcomp
ss
xchg
and
inc
push
pinsrw
test
cwtl
push
push
pop
movsb
jns
les
jge
sub
fdivrs
adc
inc
inc
pushf
mov
add
mov
orb
pop
pop
shlb
in
push
loop
cmp
xchg
xchg
mov
int
or
cld
xchg
dec
mov
je
jae
inc
dec
mov
dec
mov
mov
or
sbb
sbb
mov
push
cli
in
pop
enter
mov
mov
gs
xchg
jp
shlb
sti
jg
mov
and
fildl
adcl
pop
mov
push
pop
xchg
repnz
shl
inc
stos
add
insl
jecxz
scas
jb
xchg
sub
adc
jmp
std
mov
test
repnz
test
pop
sub
jb
fldl
sbb
scas
cmp
outsl
in
test
mov
clc
push
xor
add
cld
adc
pushf
in
imul
jmp
mov
insl
sar
xchg
cli
mov
out
adc
pop
fimull
jns
cwtl
adc
loopne
in
fnstsw
pop
cmp
data16
push
cmp
movsl
and
cmp
push
sbb
jl
aaa
mov
ss
lods
ret
pop
fistl
add
xchg
dec
icebp
jle
ss
pop
cmpsb
inc
out
cmpsl
push
inc
fs
lods
add
lret
or
xchg
jb
xor
mov
xchg
xchg
cmp
jbe
popf
xor
dec
daa
lahf
mov
inc
sub
aas
lods
mov
repz
fdivp
dec
add
mov
sub
mov
adc
loope
inc
fwait
xchg
sbb
pop
cs
cmpsb
xor
push
imul
inc
adc
inc
mov
mov
add
cmc
adc
subb
cmpsl
jae
cmc
mov
xchg
push
leave
cmpsb
adc
cld
add
enter
jne
add
push
str
dec
pop
dec
inc
push
jp
mov
stos
sub
xorb
add
jne
bound
or
in
pop
sub
fsubl
and
push
adc
idivl
jae
daa
cld
sti
jmp
outsl
cs
scas
fcoms
mov
jbe,pn
ss
sub
inc
pop
sub
fmulp
and
aam
adc
mov
push
xor
sub
repnz
cmp
mov
and
lods
negl
fs
xchg
mov
rorl
add
fildll
and
pop
dec
push
lahf
mov
cmpsb
dec
addr16
fcmovu
inc
clc
mov
sub
push
push
outsb
mov
pushl
pop
in
clc
mov
and
inc
popl
push
jno
pop
adc
mov
xor
jle
clc
in
std
mov
push
test
leave
xchg
push
pop
fsubp
mov
mov
and
gs
xchg
add
jb
test
add
cmp
and
ljmp
insb
push
sbb
add
orb
dec
cmp
aad
arpl
les
into
cmp
xor
in
mov
pop
flds
xor
loop
lea
adc
leave
scas
add
addr16
or
addr16
stos
cmpb
lret
nop
push
adc
and
mov
dec
xchg
pop
xor
pusha
in
add
and
pop
pop
fbld
cld
in
scas
inc
mov
addr16
mov
loope
imulb
sbb
insb
push
xor
push
push
xor
push
mov
add
mov
call
stos
push
and
cmp
mov
pop
lea
insb
mov
mov
push
xor
add
or
fst
cs
icebp
sbb
pop
mov
and
ds
push
orl
popf
jae
je
ja
mov
lcallw
mov
mov
jge
adc
xchg
ret
subps
mov
push
cmp
and
add
aaa
xor
repnz
jecxz
inc
movsl
and
repz
outsb
addr16
xchg
pusha
adc
faddl
mov
outsl
adc
mov
xchg
adc
movsb
aam
test
test
xor
push
repz
jecxz
dec
and
cmp
xor
or
jne
xchg
pop
push
pop
add
mov
lcall
aaa
or
out
add
insl
daa
cmp
ror
test
xor
jnp
mov
or
lock
push
dec
fists
out
icebp
fst
add
bound
mov
iret
stc
hlt
daa
push
or
fsubs
shl
mov
add
sub
loope
dec
rcl
mov
movsb
pushf
cmp
mov
cmpsb
xchg
in
inc
lea
cmp
mov
stc
inc
jmp
popa
aam
ss
xor
pop
jbe
sti
jge
adcl
jl
or
jmp
mov
push
push
xchg
dec
add
test
push
push
movsl
add
fwait
jns
sub
sbb
sbb
sub
rorb
loop
aad
mov
notl
test
dec
std
xor
xor
ljmp
ljmp
hlt
loop
mov
stc
in
ds
xchg
mov
jbe
xor
cmp
xlat
push
loopne
adc
push
and
xchg
pop
pop
sbb
mov
jmp
pop
adc
xchg
jge
mov
mov
movsb
pop
sti
es
in
cli
cmpsb
lahf
xchg
add
les
outsl
aaa
jl
sbb
in
sbb
and
insb
or
inc
cltd
cmp
test
push
call
xor
pop
ja
mov
jp
ds
push
mov
cmp
xorl
xor
fisttps
xlat
xor
sub
sbb
sub
sub
lods
mov
dec
cli
pop
sub
pop
fldenv
xchg
sub
jmp
cmp
mov
stos
arpl
dec
shlb
and
arpl
sub
mov
lret
or
pop
push
xor
pop
ret
xor
dec
pop
xor
sarl
push
enter
aas
out
and
mov
and
or
sub
in
mov
mov
pop
fidivrl
mov
stc
insl
xchg
xchg
inc
fsubrl
out
xor
test
cmp
cmpsb
push
inc
mov
addr16
pop
xor
xlat
outsb
or
pop
adc
xor
outsl
insl
into
jmp
push
inc
ja
xchg
jb
xor
gs
jge
pop
jp
scas
jnp
cmpsl
ljmp
aas
arpl
call
inc
adc
loope
scas
push
xor
xor
lahf
sahf
mulb
imul
cmp
hlt
mov
notl
push
in
jns
fldt
jne
xchg
out
pop
cmpsb
pop
mov
mov
daa
mov
stos
out
inc
data16
popa
pop
scas
xchg
popa
imul
mov
mov
aad
add
lock
jp
rcrb
mov
push
push
mov
jmp
lahf
movsl
and
push
nop
out
mov
fisubrs
es
xor
xchg
sti
lds
mov
xchg
pop
jp
jge
ds
insl
and
push
ja
rcrl
adc
idiv
jge
push
repnz
xchg
ret
ficompl
lock
imul
jnp
test
and
ss
daa
sub
stc
mov
cs
pop
into
sbb
adc
pop
push
ret
icebp
jne
mov
sbb
mov
mov
add
xor
pop
lahf
inc
inc
xlat
and
push
jmp
aam
mov
data16
imul
dec
fs
fistpll
or
stos
jmp
pop
lret
ffree
cmp
and
sub
pushf
xchg
push
xchg
shll
loop
stos
mov
pop
or
jmp
add
cmp
clc
xchg
xchg
leave
fstps
pop
xchg
test
mov
push
cltd
test
inc
pop
adc
xor
cli
enter
push
dec
dec
push
adc
outsb
fists
mov
cld
in
js
fbstp
loope
xchg
cs
movsl
mov
xchg
jg
push
mov
bound
xor
lret
cmp
jo,pt
mov
inc
cmp
jns
stos
dec
jnp
popf
jb
filds
loopne
mov
testb
inc
and
shrl
mov
fnop
test
stos
sbb
aad
push
adc
mov
jns
mov
mov
or
and
insb
loop
rcrl
pop
pop
add
pop
ljmp
add
jecxz
scas
mov
jnp
xor
cmp
pop
outsl
ds
or
sbb
shlb
adc
lret
ss
push
jnp
push
jno
inc
insb
stos
das
movsl
mov
or
out
sbb
test
mov
pushw
mov
dec
inc
xchg
adc
or
outsl
ja
fdivrl
inc
fs
xchg
dec
xchg
pop
inc
cs
lahf
sub
mov
pop
lods
or
testl
in
xor
or
mov
mov
add
ficoms
frstor
or
dec
es
out
pop
jge
das
test
fsubrl
adc
mov
sbb
aam
mull
repnz
push
out
in
clc
mov
mov
stos
sbb
cli
push
push
out
nop
sub
shlb
sub
cmpsl
sbbl
stos
loop
or
jge
cld
jb
jge
in
cwtl
testb
pop
scas
add
scas
or
call
subl
mov
leave
mov
sbb
add
cld
xchg
sbb
aas
pop
xchg
mov
add
xor
sbb
popf
lea
push
jne
mov
mov
das
ret
rorl
inc
sub
and
jo
lods
cmp
das
cmpsb
jle
pop
int3
in
mov
pop
xor
fwait
and
mov
in
imulb
repz
bound
and
xchg
jmp
outsl
pusha
jp
push
jno
mov
pop
outsl
dec
cmp
push
jle
mov
sbb
push
cwtl
out
cwtl
add
call
mov
mov
call
adc
int
cltd
add
jo
repz
mov
std
call
xlat
cmp
stc
in
xor
bound
fnstcw
and
int
jmp
out
ret
addb
push
adc
arpl
push
push
push
adc
cmp
les
call
insb
stos
orl
and
xchg
lea
into
rolb
clc
mov
xlat
jl
orb
mov
pop
jp
push
and
mov
sbb
mov
lcall
icebp
cmpsl
js
mov
jo
pop
outsb
jbe
rorl
jns
jge
xchg
mov
jmp
and
inc
shrl
push
cli
pop
pop
cmp
cmp
pop
xor
out
cmp
sarl
outsb
int
jb
or
ljmp
nop
test
push
push
mov
popa
lret
inc
inc
mov
or
and
and
or
adc
mov
add
xchg
pop
clc
mov
cld
test
or
mov
mov
daa
pop
data16
movsb
pusha
adc
into
pop
into
outsl
fdivrl
fisttps
push
cld
add
jb
pop
out
testl
cltd
push
outsb
xchg
xor
jg
mov
push
mov
shr
loope
std
in
push
popf
andb
lock
andl
cmp
es
fwait
and
fxch
iret
lahf
bound
inc
jge
dec
in
adc
cli
fstps
loopne
push
std
stos
mov
adc
push
negl
and
mov
add
inc
test
xorb
test
dec
test
repz
in
fstps
outsl
icebp
sbb
dec
add
in
stc
popf
push
mov
das
xchg
jb
dec
dec
scas
pushf
or
pusha
sub
mov
mov
jo
mov
adc
inc
mov
xchg
xor
mov
data16
cmc
mov
push
push
mov
mov
xor
popa
or
push
inc
sbb
adc
add
ret
inc
xchg
mov
repz
push
or
fadds
xorb
loop
cmpl
sub
nop
scas
cmp
movsb
mov
imul
dec
js
or
mov
push
sub
andl
pop
test
inc
xchg
negl
or
fldcw
imul
rcrb
out
xor
pop
test
dec
or
adc
aam
dec
xor
pusha
outsl
lods
adc
imulb
push
iret
aad
mov
outsl
dec
push
insb
gs
jae
sub
or
xchg
xorb
pop
dec
addr16
out
or
aad
vcvtdq2pd
mov
mov
sub
ret
push
sarb
sub
aam
mov
mov
lcall
cmp
push
call
icebp
insl
movsl
xchg
pop
mov
bound
fisttpll
jne
adc
inc
fadds
mov
inc
imul
jb
lds
subb
mov
dec
lock
shlb
pop
testl
jle
subb
rcrb
sti
fisttps
enter
bnd
xchg
test
dec
fistps
arpl
fisttps
add
adc
stc
dec
je
dec
mov
jns
pop
mov
dec
xlat
scas
mov
xor
sub
jle
ret
jmp
mov
ret
xchg
lret
push
add
in
aam
mov
jae
xchg
pop
cmp
jns
jl
out
shrb
sbb
jne
inc
add
mov
cmpl
faddl
movsb
xchg
or
jp
loope
das
jp
mov
cmp
stc
jge
shl
mov
mov
fsts
lock
jbe
mov
cwtl
sub
shrl
push
cmpsl
push
dec
sbb
adc
and
ss
ljmp
cs
flds
push
and
push
pop
pusha
pop
dec
leave
enter
mov
into
iret
aas
mov
mov
add
jl
insl
aad
popa
sbb
lret
xchg
add
icebp
shrb
lea
lea
in
add
push
mov
pop
ds
push
std
push
out
repz
out
adc
push
xchg
jbe
jns
jle
mov
int3
inc
add
ret
push
fnclex
jp
test
jae
adc
xchg
sub
push
push
popf
mov
mov
mov
or
aaa
lods
js
adc
cs
shlb
scas
dec
xor
cmp
jno
mov
int3
and
es
in
cwtl
sub
lcall
xchg
clc
mov
jg
and
xchg
sbb
hlt
cld
sbbb
adc
pop
push
mov
js
notl
fcmovne
cmc
sahf
sub
mov
or
fidivrs
push
mov
dec
inc
daa
cmc
sub
insb
or
fidivs
xchg
bnd
scas
push
xor
jne
mov
mov
jmp
dec
pop
mov
or
add
imul
dec
xchg
fdiv
xchg
shll
dec
push
aas
int3
xor
imul
fcmovnb
xor
jg
pop
addl
addr16
fidivs
dec
jecxz
int
dec
or
cmp
shl
push
add
pop
ret
cld
pop
mov
cmp
lret
mov
pop
sbb
ficompl
xor
and
sub
rcl
xchg
in
cmc
mov
jnp
out
les
lcall
aas
inc
les
cmp
mov
mov
or
repnz
lret
aaa
xchg
leave
pop
and
mov
inc
xlat
push
lods
icebp
xchg
popa
cld
idivl
sub
cltd
mov
add
les
cmp
dec
mov
ds
jmp
mov
insl
push
insl
mov
fstps
inc
lea
mov
and
sbb
std
jle
enter
mov
mov
xor
mov
cmp
fwait
push
or
adc
mov
addl
sub
inc
addr16
call
lock
into
hlt
push
fs
mov
iret
dec
xlat
or
in
jnp
jg
inc
pop
pop
stos
inc
mov
aaa
je
out
and
cmp
mov
inc
mov
in
outsb
sub
addb
movsl
and
pop
iret
jge
pop
push
push
sbb
je
xor
repz
test
pop
into
xchg
inc
mov
xchg
pop
jne
movsb
fwait
xchg
jbe
inc
and
dec
inc
int3
jmp
out
push
xchg
rcl
scas
or
cmp
fisubrs
frstor
dec
push
xor
and
repnz
outsb
lea
xchg
sbb
shr
cmc
pop
pop
stos
in
mov
test
aam
sbbl
sub
bnd
mov
testl
mov
test
adc
cmp
imul
mov
test
loopne
push
aaa
fcomps
ja
sbb
ljmp
fwait
or
cs
inc
pop
xlat
int
call
inc
rorl
cld
lock
into
xchg
insb
or
inc
ficoml
xor
sub
xchg
movsl
test
dec
push
pop
inc
int3
xchg
pop
pop
jno
dec
jo
orb
lock
cmp
cmp
jne
and
fs
cmpsl
outsl
mov
jg
js
test
hlt
daa
jecxz
fnstsw
ret
dec
clc
pusha
add
clc
fadd
imul
adc
insb
push
xchg
enter
insl
cmp
notl
mov
xchg
into
sbb
ljmp
jns
sbb
inc
mov
pop
into
int3
jge
mov
sub
out
jmp
aas
mov
cmp
pop
mov
into
or
cmp
jmp
aad
mov
sub
ss
ss
pop
mov
dec
adc
push
and
mov
inc
mov
daa
add
mov
dec
fisttps
pop
mov
std
clc
pop
sbb
jmp
pop
inc
pop
ljmp
sub
cli
dec
mov
mov
and
andb
jbe
pop
aad
fucomi
inc
pop
xor
mov
int3
cmc
shrb
cmp
daa
inc
cld
dec
cld
inc
lret
dec
adc
pusha
adc
scas
out
mov
cmc
gs
inc
out
fnstenv
xchg
mov
pop
mov
and
cmp
aas
and
xor
xchg
push
loope
popa
dec
pop
push
subb
adc
inc
inc
mov
sub
push
repnz
xor
in
mov
fldt
pop
jnp
sti
mov
aas
ss
mov
lods
inc
dec
fs
sbb
push
xchg
in
incb
clc
adcl
mov
pop
mov
dec
stos
xchg
sbb
add
add
mov
das
cmovg
mov
dec
cmp
jno
add
pop
adc
rcr
jg
dec
cmpsl
test
jbe
ret
mov
sub
or
shl
fwait
imul
in
lock
outsb
es
add
incl
data16
jb
sub
xchg
sub
cmc
test
xchg
lahf
mov
mov
add
fbld
stos
sbb
mov
pop
clc
jne
push
sub
adc
outsb
push
pop
mov
mov
pop
adc
sub
iret
mov
xchg
insl
popa
rclb
mov
scas
sbb
filds
ljmp
and
xlat
rcrl
mov
inc
popa
sub
jge
adc
mov
test
pop
lods
fidivrl
cmc
xchg
add
dec
loopne
scas
push
in
pop
testb
inc
fldl
loope
push
clc
sbbl
and
clc
jns
or
outsl
loope
sub
pushf
addr16
sti
mov
fwait
in
add
adc
stos
jb
dec
fwait
pop
mul
data16
pop
mov
mov
rorl
fsub
mov
cs
ret
enter
std
loop
movl
inc
rcll
xor
dec
or
cmpsl
sbb
cmpsl
mov
push
out
xor
xor
int
dec
js
leave
mov
push
add
push
fimull
jns
in
mov
lret
mov
movsl
adc
and
ret
negl
push
lea
movsl
inc
push
and
dec
daa
int
mov
out
jno
or
pushf
sahf
fwait
or
psubusw
adc
cmp
dec
mov
in
icebp
jnp
fmull
xor
or
jg
je
out
mov
mov
mov
push
adc
xor
mov
dec
pop
jne
jmp
movb
xchg
dec
sbb
lcall
in
or
push
cmp
cmp
cmp
inc
aam
mov
into
cs
pop
incb
sahf
dec
push
loopne
sub
and
adc
adc
add
inc
iret
cmp
fnstenv
mov
in
xor
popl
and
scas
out
adc
stos
bound
add
negl
pop
pop
mov
sbb
adc
jns
xchg
inc
jnp
rol
sub
shl
imul
inc
sbb
sub
sbb
inc
rorb
adc
xlat
pminsw
dec
aas
sub
inc
sbb
mov
enter
cmp
test
add
ljmp
lods
xorl
push
lods
push
jnp
dec
sub
out
xchg
sbb
push
or
mov
push
cld
push
dec
adc
or
pop
out
dec
jge
push
or
dec
push
or
loop
loopne
sub
int
in
mov
fsub
mov
fdivr
sub
cmp
mov
fucomip
jae
mov
jnp
add
push
xchg
lret
sub
push
test
mov
lahf
movsl
ja
push
jne
dec
sub
daa
insb
cmpsb
dec
push
leave
mov
stos
int3
mov
sub
adc
jmp
inc
cmpsb
adc
mov
cwtl
and
imul
adc
and
imul
in
test
and
ss
xchg
fldt
je
movsb
adcb
cmp
dec
mov
jo
or
pop
mov
gs
xor
sub
and
or
dec
add
cmp
ds
cld
mov
cmp
shll
lahf
out
xor
mov
dec
pop
jnp
sbb
and
fisttpl
adc
cmc
sub
mov
cmp
or
xlat
fdivrl
sbb
jno
adc
pop
jge
mov
call
pop
pop
aaa
ret
sub
ja
call
sbb
cmp
mov
ret
pop
jne
sti
mov
ret
xor
push
ljmp
in
lahf
xchg
lcall
mov
lcall
loope
icebp
cmp
cmp
add
xor
xor
mov
push
into
or
sbb
pop
ficoml
push
mov
mov
cmp
lcall
mov
mov
add
fwait
ljmp
pop
ret
addr16
jbe
fcoml
sub
push
cmp
inc
jnp
push
loope
inc
leave
xchg
dec
mov
scas
sub
push
shll
mov
fildl
pop
mov
xor
imull
xchg
testl
lods
in
test
dec
call
arpl
dec
test
data16
les
ficomps
dec
aas
ja
mov
pop
dec
scas
cmp
xchg
push
sti
je
jp
hlt
imul
pop
push
std
mov
add
jnp
jp
jbe
clc
outsl
inc
push
std
push
test
jb
and
f2xm1
cmp
sub
mov
push
pop
ja
cmp
pusha
in
add
lods
call
push
mov
adc
jb
cmp
push
cltd
lea
fdivr
push
xchg
dec
cs
test
xlat
insl
mov
addr16
xchg
jecxz
pusha
inc
rorl
lds
xchg
jns
xor
test
xor
out
jno
je
lods
jle
mov
cs
leave
sahf
push
adc
mov
jmp
cs
andb
out
add
out
xlat
jle
and
jp
out
xor
loope
loope
add
adc
sarl
mov
inc
dec
dec
popa
test
sub
push
push
pop
addb
jp
arpl
fadds
mov
push
mov
jp
mov
xor
mov
xor
sub
mov
inc
sub
mov
sbb
adc
mov
add
mov
test
cs
mov
outsl
and
outsl
shl
addl
and
imul
out
push
mov
arpl
jbe
add
cmp
xor
xchg
test
mov
movsl
inc
xor
inc
out
xchg
dec
jo
lret
inc
sbb
lahf
dec
and
cli
push
repz
and
loopne
cmpsb
out
xchg
test
out
cmp
add
xchg
pop
sbb
outsb
push
orb
xchg
inc
popf
dec
scas
scas
mov
xor
inc
xchg
lcall
sahf
idivl
out
and
fwait
lret
pop
mov
push
int3
sbb
scas
mov
fiadds
sbb
scas
dec
mov
rcll
subl
add
lret
jp
rolb
in
pop
mov
cmp
loop
jge
push
add
lea
xchg
test
push
call
push
fsts
mov
adc
loope
lods
hlt
clc
clc
mov
test
inc
clc
cmp
xor
cmp
dec
mov
mov
insb
outsl
in
or
pop
fistpl
xor
out
into
les
nop
pop
sub
loope
mov
push
lea
mov
movsl
adc
clc
lret
lds
pop
mov
icebp
push
scas
cmp
cwtl
cs
cmp
setne
dec
jge
inc
ret
daa
out
jg
xchg
jno
push
cltd
enter
mov
frstor
sub
int3
mov
mov
or
mov
jne
jl
and
dec
cmp
mov
xchg
or
pop
mov
in
mov
mov
lret
push
fsts
fsubrs
sub
sub
outsb
rclb
outsl
cmp
gs
lahf
cld
push
pop
dec
xchg
xor
xchg
push
hlt
add
cmp
jp
andb
jge
xchg
jo
movl
es
fsub
xchg
or
add
cwtl
ret
xlat
dec
or
fidivrl
jno
mov
or
or
es
mov
pop
imul
dec
andl
cmc
push
jns
pop
fimull
push
pop
push
and
les
out
jnp
mov
mov
jbe
fdivs
sbb
ss
test
ret
outsb
sti
mov
push
insl
mov
mov
jp
mov
rol
inc
cmp
ljmp
cmp
fwait
mov
dec
ret
inc
lods
sbb
clc
sbb
aas
jb
add
mov
pop
lcall
cmpsb
add
inc
test
aas
popf
inc
or
inc
popa
mov
outsl
mov
cld
int3
jo
std
shll
dec
dec
push
fmuls
hlt
in
and
aad
cmpsb
adc
push
lods
dec
xchg
inc
pop
testb
insl
pop
push
and
into
scas
ss
jmp
adc
add
rclb
fdivl
dec
xchg
rorb
inc
sbb
mov
xor
imul
push
pop
xchg
imull
test
inc
negb
pop
movsb
mov
fdivrs
cmc
xchg
mov
sahf
in
sub
sbb
adc
push
add
test
sbb
ret
rcrl
call
js
mov
xchg
push
out
inc
cmpsb
arpl
js
lret
iret
inc
daa
and
pop
sbb
add
js
ror
adc
mov
ret
fwait
aas
adc
adcl
stc
leave
movsb
jbe
test
mov
icebp
cmp
pop
jmp
mov
mov
lods
test
mov
out
or
pop
cmp
addl
mov
je
notl
cmp
in
cli
fwait
std
mov
mov
mov
or
dec
mov
lods
mov
xchg
xchg
ret
adc
psubsb
sub
testl
lcall
xchg
das
adc
enter
jo
dec
rcrb
sbb
xchg
push
pushf
add
pushf
fdivs
and
jnp
jg
out
cmp
xlat
sbb
stos
int
movsl
inc
jns
mov
adc
enter
jp
shrb
nop
push
test
pop
pop
sbb
pop
pop
lods
and
mov
iret
xchg
or
stc
mov
es
xchg
inc
cmp
test
ljmp
mov
sub
xor
mov
add
fidivrs
out
jne
lds
xchg
jb
adc
add
mov
jns
out
pop
xor
adc
xchg
repnz
pop
pop
adc
cmp
mov
jge
add
or
popf
ss
scas
pop
dec
movsb
jo
pop
mov
pop
rclb
ficoms
inc
cmpsl
fdivrp
mov
pushf
subb
pop
outsl
sbb
icebp
ror
out
iret
adc
push
cmp
jo
sbb
subl
add
jns
repz
arpl
dec
mov
cmp
daa
ret
stc
mov
sub
inc
out
outsb
inc
insb
test
in
cmp
adc
mov
mov
enter
and
pop
sbb
bnd
mov
or
lds
xchg
insb
jmp
mov
mov
filds
clc
mov
mov
movsb
aas
shlb
xor
jbe
sbb
mov
lea
ret
int3
jmp
xor
hlt
jae
xchg
push
xor
pop
xchg
rcr
pop
xorb
dec
outsb
dec
hlt
data16
enter
push
pop
decb
cmpsb
sbb
imul
and
repnz
shrb
js
je
or
in
and
push
add
mov
js
dec
push
bnd
adc
push
popf
andb
por
cli
repz
mov
fwait
xor
popf
mov
xchg
cmpsb
pop
popa
push
fdivr
mov
jle
pop
adc
sub
xchg
hlt
call
in
jne
inc
xor
add
movsb
in
push
cs
aas
pop
outsl
cmp
sub
add
xchg
out
fsts
pop
aad
or
or
inc
fldenvs
inc
scas
pop
cwtl
leave
scas
mov
pop
jbe
push
js
adc
ret
lret
mov
sub
leave
mov
cmc
xor
fidivl
shlb
pop
push
cmp
dec
push
rclb
and
jb
nop
loopne
jp
lret
xor
pop
fisttpll
aad
es
and
push
push
icebp
in
mov
adc
mov
mov
jle
add
mov
outsb
sub
xchg
add
repz
scas
add
jae
mov
add
mov
xchg
xlat
cmpsb
push
jecxz
xchg
inc
jno
out
mov
leave
dec
sub
gs
inc
and
shrb
cmpsb
scas
mov
add
jne
jge
or
jno
aas
push
rorl
mov
add
ficompl
mov
xor
stos
rclb
into
xlat
ret
add
sarl
jmp
xchg
xlat
in
fucompp
pusha
cmc
adc
daa
repnz
ljmp
adc
gs
mov
and
rol
fcmovu
dec
mov
fimuls
inc
insb
pusha
sbb
mov
inc
stos
dec
and
lods
sub
pop
divl
popw
insb
pop
shll
mov
xlat
pusha
inc
inc
dec
das
lahf
cmpsl
mov
pop
xchg
add
dec
popa
mov
shl
mov
ret
mov
jb
adc
cmp
arpl
sbb
fwait
or
daa
ss
xchg
cmpb
addr16
aam
sti
pop
cmp
mov
cmpsl
dec
inc
lock
mov
inc
jle
mov
xchg
pop
jb
lea
fsub
jo
xor
xchg
push
cmp
test
hlt
and
int
push
jno
push
sbb
adcl
cmpl
fs
shrl
mov
cwtl
xchg
adc
mov
shll
push
and
iret
icebp
imul
xor
out
or
loopne
lea
xor
rorl
mov
out
out
xchg
in
xchg
xchg
xor
jg
in
loopne
cmp
clc
cld
outsb
sbb
bound
out
jnp
adc
xchg
popa
fdivs
jae
negl
int3
enter
push
push
nop
stos
cmp
shll
popa
cmpsl
loop
push
cmp
enter
daa
hlt
repnz
movsb
cmp
cmc
dec
mov
mov
test
inc
es
outsl
lret
les
jb
mov
mov
xor
inc
xchg
pop
or
roll
sti
adc
aaa
add
rcrl
pop
mov
lock
imul
popa
jmp
pop
and
incl
sbb
mov
mov
ss
jae
dec
mov
repz
sbb
or
lock
jmp
cmpsb
adc
lret
sub
ret
rol
sbb
js
repz
clc
adc
pop
or
cmp
mov
pusha
test
iret
idivl
xor
popf
inc
mov
in
fistps
lods
gs
sbb
sbb
jge
iret
xchg
mov
lahf
stos
mov
popa
lahf
shrl
mov
fstpl
int3
xchg
cmp
rcl
test
inc
shlb
pop
sub
test
sbb
push
jmp
xchg
mov
test
inc
mov
jbe
pop
push
mov
pop
xorl
call
pop
sbb
imul
bound
cmp
andb
cmp
stc
inc
mov
mov
jnp
sbb
mov
aas
and
jae
add
inc
xor
popl
xchg
jmp
cmpsl
fdivrs
pop
out
jne
add
lcall
cltd
sub
jo
pushf
sbb
jnp
loope
jl
ss
push
testl
sub
dec
test
sub
outsl
fsubrs
rclb
test
aaa
test
dec
xor
xor
inc
mov
adc
push
mov
or
adc
cwtl
mov
sub
pop
shl
inc
xchg
dec
repz
fdivs
cli
rcl
inc
cmp
or
cmp
in
sbb
push
add
insl
mov
mov
pusha
xchg
mov
int
outsl
push
and
aas
jbe
in
les
cmp
cmp
adc
cmp
sbb
add
sbb
jecxz
mov
jne
in
fisubs
aad
inc
fsubl
and
mov
dec
jns
aad
jmp
adc
adc
stos
dec
pop
jno
sub
xchg
push
push
mov
mov
fisubrs
movsb
dec
sub
adc
aad
push
add
mov
mov
xchg
fnstcw
pop
je
adc
push
mov
test
mov
imul
aad
lods
push
seta
push
aam
push
push
inc
pop
adc
xchg
je
ss
sub
and
xor
loop
mov
pop
cmpb
pop
jp
flds
enter
and
inc
add
cmp
push
or
mov
aad
xchg
fs
xchg
xor
dec
loope
adcl
outsl
scas
into
cwtl
sub
test
cli
clc
hlt
aad
push
inc
aas
xor
repnz
add
int
xor
test
loope
mov
sub
test
cmp
and
add
or
lea
mov
insb
sbb
loope
pop
stos
daa
cltd
ja
test
out
cmc
pop
inc
mov
aaa
shrb
andb
push
inc
je
cmc
pop
in
insl
cmpsb
daa
mov
ds
mov
cmp
test
call
adcl
cmpb
push
jle
cltd
mov
adc
sahf
cltd
aaa
in
loope
inc
in
in
in
iret
mov
push
jmp
orb
dec
inc
ret
inc
adc
insl
jno
fsubp
xchg
rep
adc
test
xor
and
pop
dec
push
mov
cmp
push
add
push
inc
nop
sub
cmpsl
addr16
mov
pop
dec
sbb
xor
into
xlat
push
pop
fisubl
aam
loope
cmp
std
cmp
fisttpll
sub
in
rorb
js
fsubr
movsl
xor
sbb
in
mov
jg
push
fsub
hlt
dec
xchg
pop
sbb
or
adcl
inc
lods
sbb
aad
cmpsb
cmp
mov
xor
shlb
pop
int3
cmp
mov
mov
lea
cmp
sti
inc
imul
lret
ja
dec
dec
outsb
scas
inc
mov
pop
push
jae
rcrb
dec
hlt
mov
mov
negb
sti
jg
int3
mov
mov
jnp
adc
inc
pushf
push
int
cmc
jo
mov
sarl
sbb
int
dec
shlb
xchg
jmp
sub
push
mov
pop
mov
pop
loopne
daa
jmp
dec
rorb
mov
sahf
jl,pn
call
mov
sbb
or
imul
pop
mov
sbbb
sub
fcompl
and
sub
stos
ficomps
push
push
lea
dec
xor
clc
js
dec
cltd
ret
sub
movsb
jne
dec
xchg
add
movsb
sub
xchg
push
xor
sbb
mov
ja
and
adc
out
jno
and
jnp
cmp
js
xchg
adc
jnp
cltd
cltd
xchg
pop
bound
dec
repz
jl
movsb
cmp
sub
mov
cwtl
xor
dec
xchg
sub
sbb
adc
pop
and
mov
mov
xchg
test
fwait
add
add
inc
nop
leave
cmpsl
std
mov
adc
or
sub
xor
inc
mov
xchg
pop
adcb
add
cld
mov
pop
int
scas
notl
les
mov
gs
cs
push
xor
pop
pop
xor
pop
push
sub
out
dec
jns
mov
lods
hlt
ljmp
idiv
mov
fiaddl
mov
clc
pop
movsl
fists
jecxz
cmp
push
lock
lods
test
ror
lods
dec
adc
jne
cld
mov
mov
xor
jo
aaa
mov
inc
push
dec
inc
mov
xor
pop
sbbb
movsb
cmp
sub
aad
inc
xchg
insb
out
jno
in
cwtl
xchg
mov
movsl
jno
imul
mov
cmp
into
mov
out
sti
dec
xor
push
pop
imul
inc
popf
ret
jmp
inc
mov
ja
jmp
fisttps
adc
imul
add
lods
push
xchg
jg
push
popa
int3
mov
cmp
loop
adcb
les
popa
jp
xchg
sub
repz
sbb
inc
loopne
ljmp
mov
push
and
into
cmpsl
push
jnp
mov
push
std
xchg
push
stos
jbe
dec
xchg
popf
call
xlat
mov
out
jge
jbe
je
std
imul
or
sbb
jns
adc
cld
push
hlt
es
lock
xor
push
pushf
lcall
aaa
xor
inc
lret
cld
and
xchg
add
xor
idivb
gs
clc
or
pop
jmp
ljmp
cmp
pop
lods
xchg
mov
adcl
imul
sub
fistpl
stc
shl
mov
lods
dec
pop
mov
push
daa
jbe
ljmp
dec
ret
ds
mov
cmpsl
sub
pop
mov
dec
sar
les
sub
jnp
push
lahf
cld
nop
sub
push
sbb
iret
xor
and
mov
scas
add
mov
out
dec
xchg
xor
push
cmc
add
add
push
int
shr
mov
and
mov
ret
or
push
xchg
or
nop
mov
add
fldenv
aas
lcall
dec
ds
fstl
pusha
test
outsb
mov
inc
pop
adcb
mov
lcall
sub
mov
mov
aam
inc
add
jecxz
ss
out
test
lea
add
add
in
adc
outsl
add
jnp
scas
lcallw
add
std
loopne
pop
stc
cmp
ds
mov
ljmp
aaa
mov
xchg
ret
sbb
stc
bound
shlb
jnp
push
cmp
mov
adc
sub
add
xchg
ja
sbb
inc
filds
mov
pop
lock
cs
std
mov
leave
inc
in
leave
sub
fisubrl
or
in
fidivrl
mov
sbbb
push
inc
outsb
movsb
push
cmpsb
cwtl
sub
repnz
out
popf
stc
les
pusha
hlt
dec
imul
sub
sub
lahf
out
shlb
rclb
dec
scas
lock
call
mov
lahf
andb
mov
repz
jmp
xor
xor
mov
and
xchg
sbb
mov
or
int
mov
enter
movb
lock
push
push
sub
fisubrs
cmp
pop
mov
lock
jnp
cmpsl
loop
aaa
add
sub
daa
insb
jno
mov
mov
pop
sub
inc
jae
lods
sub
lea
scas
mov
or
push
jb
xchg
mov
cltd
inc
lret
ljmp
fiadds
in
xor
inc
nop
mov
lret
cmp
mov
xor
out
xchg
push
lea
xlat
cmp
inc
xor
imul
pop
lods
pop
stos
lahf
mov
aaa
push
pop
loop
call
ds
sub
dec
mov
or
pop
out
sbb
loopne
push
fs
in
cmpsl
adc
push
cltd
data16
pop
or
push
push
mov
mov
into
js
pop
lcall
sbb
fmulp
rcr
adc
in
lods
ret
enter
xchg
pop
pop
mov
lods
inc
fucomi
repnz
pop
dec
cmp
aad
sahf
dec
out
popf
xor
push
cmp
mov
ljmp
imul
mov
xchg
lock
bound
mov
sub
mov
imul
sbb
leave
push
push
xor
xchg
mov
jmp
or
insb
pop
cmpsb
inc
mov
adc
subl
fdivl
ja
fdivrs
xor
js
cmpsb
or
mov
sbb
jge
inc
nop
pop
icebp
aaa
shlb
and
bnd
test
scas
sbb
sub
mov
ret
jo
je
or
inc
and
hlt
fistpl
cmp
loope
dec
or
xor
popl
fwait
push
pusha
into
inc
sbb
sbb
mov
dec
jnp
and
dec
pop
test
mov
xchg
add
xchg
mov
mov
and
ja
out
mov
daa
dec
bound
out
cmp
out
test
or
stc
lock
shlb
xchg
dec
js
mov
mov
cmpsl
lea
push
loop
sbbb
or
or
out
inc
out
push
pop
xor
cltd
cld
push
mov
out
inc
mov
bound
or
adc
out
dec
xchg
add
mov
sbb
loop
lds
lret
cli
nop
mov
stc
push
fsubl
jp
inc
jne
sub
roll
xchg
cmpsb
std
inc
mov
xchg
lret
das
xor
add
ficoml
in
mov
fwait
fs
mov
jo
iret
mull
fidivl
addr16
jge
pop
xor
push
imul
add
in
jp
fwait
mov
mov
sbb
sbb
mov
jecxz
rorl
inc
loop
adc
test
sbb
lea
roll
test
pop
cmc
xchg
in
pop
ja
fimull
repnz
jmp
add
outsb
mov
pop
mov
fsubp
xchg
outsb
popa
push
cmp
mov
cwtl
or
mov
sahf
mov
sub
aaa
add
add
fists
mov
fwait
and
dec
scas
mov
stos
fiaddl
lds
mov
ret
lret
pop
sarl
fdivrl
jns
xchg
mov
icebp
fcomip
push
add
cld
es
push
loope
loopne
cmp
xchg
add
dec
mov
sub
xchg
fsubrs
cmp
mov
mov
sbb
cmp
jae
mov
loope
fcmovnbe
push
rolb
add
enter
pop
mov
in
xchg
ja
dec
cmc
and
add
push
in
adc
mov
lock
add
sub
daa
stos
fimull
push
mov
mov
sub
jg
sahf
mov
icebp
mov
jnp
subb
fistps
loopne
clc
cltd
adc
dec
in
cmp
adc
popf
cmpb
jbe
call
leave
popa
or
int3
test
pop
jae
stos
movsb
xor
ja
lea
xchg
stos
mov
testl
jbe
nop
dec
out
test
mov
sbb
leave
out
sbb
and
out
mov
mov
pop
int3
pop
mov
sub
jne
xor
cwtl
call
call
inc
inc
out
xorl
pop
jae
inc
mov
xor
dec
pusha
retw
ret
aam
lods
int
fs
sbbb
push
subb
test
adc
loop
scas
sbb
sbb
cmpsl
add
add
cmp
sub
inc
mull
loop
xor
cmp
cmp
mov
cmpsl
xchg
out
xor
xlat
out
cmp
jns
lock
lret
mov
loopne
push
pop
xor
and
sub
sub
dec
arpl
sub
cli
jbe
sub
cs
sbb
xor
jb
hlt
inc
repz
testb
push
xor
fisttpll
stc
xlat
in
mulb
leave
sbb
test
clc
das
or
ljmp
jecxz
cmp
fldt
in
out
insl
shlb
adc
fstl
sbb
hlt
jnp
aas
test
push
int3
xchg
pop
mov
stc
mov
test
xchg
icebp
xchg
xor
aad
add
mov
lods
stos
mov
lds
out
add
cmp
push
inc
orl
daa
jno
in
rcrl
ds
testb
and
pop
lods
cmpsl
sub
icebp
into
mov
push
inc
cmc
adc
xchg
mov
sti
scas
mov
arpl
pushf
pushf
jne
fcmovnu
cmp
xchg
ds
jl
mov
mov
out
lods
je
fnstsw
push
pop
xor
mov
popf
adcb
cmp
imul
adc
int3
repnz
pop
push
les
lods
sub
cmp
or
xor
push
pop
outsb
gs
dec
orl
mov
cwtl
inc
mov
pop
sbb
xor
aaa
mov
pop
in
mov
ss
pop
sub
sarl
jno
xor
clc
popa
hlt
outsb
add
mov
adc
out
jge
push
call
jl
jne
xchg
dec
idivb
pop
xchg
sbb
dec
push
mov
dec
nop
sub
insl
dec
clc
push
jns
cmp
in
lea
and
dec
mov
pop
fldz
sub
and
scas
add
mov
cmp
mov
push
iret
jg
loope
leave
xor
es
aad
jns
in
cmc
xchg
ja
mov
dec
jmp
xor
ja
outsl
lret
leave
cmp
bnd
bnd
bound
jl
rorl
leave
loop
xchg
cmpsb
mov
jne
fisubs
mov
push
psubq
arpl
addr16
or
aad
adc
in
push
dec
mov
push
std
lds
pushf
shll
outsb
arpl
add
es
dec
or
in
sbb
lods
imul
mov
xchg
cmp
js
adc
imul
sbb
cmp
das
test
adc
int
ss
in
mov
xor
pop
arpl
lahf
xor
rolb
jecxz
and
sbb
test
jl
loopne
jle
enter
sbb
std
hlt
push
pop
mov
cmp
or
adc
ror
pop
aaa
ret
xor
lcall
push
sbb
imul
push
push
or
mov
ds
sub
add
cmp
or
mov
nop
push
icebp
push
aam
addr16
push
mov
and
lcall
xchg
xchg
dec
fists
xchg
jb
adc
pop
cmc
cmp
and
inc
cmp
jecxz
into
flds
lds
cwtl
repnz
pop
in
and
cmpsb
sbb
adc
mov
rolb
cltd
mov
mov
mov
iret
in
sbb
mov
push
cmp
dec
test
pop
in
xchg
stos
add
outsl
pop
sti
inc
popf
stc
push
cmpsb
in
ss
sub
dec
jecxz
cmpsb
dec
out
les
add
fadd
call
lea
lods
aad
mov
xor
aam
daa
mov
push
ljmp
sub
adc
push
pop
pop
leave
cwtl
xchg
push
icebp
mov
and
and
fsubrp
enter
xor
sub
add
jmp
mov
jmp
lds
fidivl
stos
lcall
cmp
cmp
fwait
pop
push
notb
dec
gs
iret
push
stos
cwtl
inc
xor
dec
jge
lcall
sub
mov
push
repnz
aam
jo
inc
inc
xchg
xor
push
mov
cmp
jmp
inc
lcall
sbb
pop
xchg
adc
add
pmulhuw
testl
dec
shrl
std
incb
cmp
test
pop
mov
jbe
dec
jne
cltd
hlt
cmp
adc
cli
xchg
stos
test
int
jmp
jns
pop
sbb
or
test
adc
insb
xor
sub
aam
jle
push
mov
call
jns
inc
fdivl
jbe
jns
inc
or
mov
sub
pusha
inc
push
inc
mov
scas
jg
sbb
xchg
xchg
jmp
mov
mov
mov
ljmp
mov
popa
xchg
insb
leave
push
test
cli
sbb
xchg
rclb
cmp
cmp
mov
push
ja
in
xchg
cmp
add
inc
sbb
scas
or
sub
mov
fldcw
ljmp
and
inc
rclb
lcall
fs
test
dec
jae
pop
pop
mov
add
xchg
xor
cwtl
xchg
pop
mov
dec
pop
sbb
jp
les
divb
xor
stos
dec
xlat
sahf
or
mov
loope
sbb
push
loope
sahf
iret
jg
jo
shl
cmc
jbe
jb
popf
jecxz
subb
arpl
aas
dec
or
hlt
sbb
mov
test
dec
cmp
dec
notb
std
shll
sbb
pop
das
dec
xchg
pop
jo
jbe
out
gs
xor
mov
mov
bound
in
nop
dec
rorl
adc
mov
mov
mov
cmpsl
dec
lods
push
mov
lea
pusha
subl
push
popa
lods
loop
test
adc
sbb
mov
push
inc
and
mov
enter
cmp
sub
or
imul
dec
dec
std
lahf
shll
sub
lcall
hlt
cmpl
mov
mov
jns
popf
inc
cwtl
or
sub
js
jge
fidivl
loop
jae
pop
sarb
popa
sbb
fwait
movsb
insb
add
mulb
mov
mov
stos
lret
repz
dec
mov
sbb
and
aaa
xchg
rolb
je
outsb
sub
into
pop
add
pop
popa
cmp
cmp
mov
pop
negb
mov
sub
ret
lcall
jg
mov
mov
jge
mov
mov
aaa
mov
jnp
fisubs
or
in
pop
pop
fwait
jo
lods
lea
stos
aas
rcll
scas
inc
aaa
pop
int3
or
push
pop
sub
loop
sub
pop
leave
xor
popf
inc
push
add
fnstcw
or
cmovb
mov
cli
dec
or
cli
loope
divb
cltd
insb
mov
outsb
ja
mul
mov
fiadds
sub
shl
jnp
ja
fisttpll
push
jp
push
sbb
cmc
inc
call
xchg
xchg
imul
and
ret
out
mov
mov
not
xchg
xchg
mov
inc
gs
lods
and
push
push
hlt
loopne
push
pop
sar
in
push
lods
scas
mov
shrl
dec
test
sub
imul
shlb
scas
sbb
es
sbb
out
pop
xor
sub
imul
popf
rol
push
ds
arpl
xor
adc
jle
dec
mov
ss
cmp
in
dec
in
sbb
adc
pop
int
mov
adc
shlb
push
inc
sub
xchg
push
jle
pushw
sbb
dec
lret
mov
dec
mov
in
sti
sbb
or
std
mov
in
cmp
inc
cmp
xor
xchg
dec
stos
cltd
push
scas
ret
jp
inc
mov
pop
sbb
mov
cmp
push
mov
mov
jbe
mov
aam
inc
cmp
jmp
outsb
xchg
fsubr
push
aad
xor
test
mulb
ds
sbbl
cmpl
mov
leave
cmpb
leave
and
and
sbb
outsb
lea
dec
and
stos
push
pop
inc
and
fsub
popf
adc
cld
push
jecxz
and
jle
movsl
cmpsb
ljmp
push
or
sub
lock
popa
insl
je
push
cs
jae
dec
or
adc
push
inc
sub
std
movl
sbb
xor
test
jb
out
fs
shlb
inc
mov
mov
mov
movsl
push
hlt
add
fildll
mov
pop
add
rep
cmpsb
dec
in
mov
js
punpckhwd
jge
ret
dec
jne
or
and
cmp
cmp
hlt
movsl
mov
add
and
out
xchg
pop
pop
xchg
inc
push
ror
sub
data16
lret
push
push
enter
lods
arpl
jmp
pop
mov
sbb
subl
cmp
or
cld
jbe
xorb
xor
adc
ljmp
pop
lcall
lock
cli
stc
jecxz
adcl
xchg
insb
xchg
sbb
mov
xchg
out
cltd
dec
lcall
subl
dec
fstl
sbb
and
or
cmpsl
push
inc
icebp
mov
js
push
shr
or
cs
push
dec
jmp
xor
es
leave
jnp
or
mov
int
jb
lret
fsubrp
ficoml
into
mov
dec
or
cmpsl
cs
movsl
movsw
cmpb
test
jo
mov
pop
fsubs
cmpsl
popl
dec
aam
cmpsl
sahf
xor
test
sbb
nop
jb
sti
out
pop
adc
inc
imul
sbb
fdivs
add
push
incb
ss
fmuls
cmp
mov
les
ret
mov
shlb
mov
daa
or
mov
adc
subb
inc
loopne
fisubrl
imul
dec
sbb
jp
cwtl
and
aam
fbld
cmp
clc
je
shrb
outsb
sub
call
mov
mov
cli
cmc
lcall
xchg
pop
or
call
pop
scas
jmp
inc
add
mov
jmp
lret
rorb
loope
xor
sub
push
movsb
jge
comiss
or
pop
aad
icebp
inc
imull
scas
movsb
add
pop
stos
fs
test
dec
lcall
sahf
mov
pop
mov
imul
dec
push
xor
mov
pushf
pcmpgtd
les
insb
and
dec
mov
cmc
into
in
mov
fst
adc
push
sbb
ret
arpl
cmp
mov
sbb
imul
insl
jg
pop
ja
sarb
push
ret
movsl
je
out
mov
je
cmc
inc
or
push
aaa
cwtl
push
xor
sub
push
popa
push
stos
pop
in
nop
or
cwtl
fsubl
rorl
mov
ljmp
inc
test
je
scas
fwait
cltd
mov
ss
stos
fwait
mov
add
dec
push
inc
add
adc
outsb
setae
xor
pusha
add
pop
punpckhbw
sti
mov
aas
loope
or
in
dec
es
dec
fstp
sub
adc
inc
xorb
je
xlat
dec
mov
xchg
mov
jle
and
and
arpl
pop
loop
dec
jae,pt
fwait
ret
sti
imull
mov
shrb
ljmp
aas
inc
sbb
test
call
clc
xor
sbbl
jo
cmc
or
stos
sbb
inc
sarl
push
mov
cmp
adc
mov
mov
mov
nop
mov
mov
dec
rclb
hlt
dec
mov
cli
test
loopne
icebp
rcl
shl
push
lea
mov
rclb
adc
and
decb
sub
sahf
jle
ds
out
jg
cltd
ss
jno
or
fmuls
sub
pushf
movsl
cmpsl
mov
cmc
and
inc
clc
xor
test
or
stc
xor
mov
jp
stc
sbb
pop
out
pop
outsb
mov
jnp
lret
movsl
or
cltd
ljmp
pop
call
pop
pop
jo
cs
or
push
testb
insl
movsb
loope
leave
jne
xor
add
imul
lcall
mov
push
push
dec
movsl
fwait
into
or
or
mov
adcb
xchg
out
dec
or
call
sarb
loope
aad
leave
roll
pop
and
xchg
jmp
les
insl
sti
inc
fidivrs
sti
xchg
pop
cmp
and
aas
mov
cmp
jge
push
cmc
aaa
aas
je
shl
lcall
jo
sub
mov
gs
ficoms
stos
clc
pop
fcoml
sub
mov
cmc
dec
mov
push
ss
and
jmp
sub
out
stc
shll
adc
outsl
aam
subb
mov
mov
shrl
fists
jg
mov
cld
add
in
and
fcmovne
push
jno
jns
cmp
cltd
outsb
jnp
cmp
pushf
mov
jmp
sbb
adc
andb
ljmp
popa
dec
push
or
repnz
call
lret
das
mov
test
mov
roll
imulb
shlb
mov
cmp
add
or
test
out
xor
inc
jnp
enter
test
sub
adc
dec
xchg
stc
dec
jne
pop
push
pop
mov
cmp
in
lret
xlat
xchg
mov
sbb
in
mov
sbb
mov
testl
push
subl
fwait
out
mov
cmpsb
sub
jns
mov
stc
frstor
ret
arpl
dec
mov
in
loope
inc
scas
sbb
in
sahf
xor
jg
mov
repnz
repnz
sbb
jnp
cld
test
xchg
ljmp
scas
dec
lea
pop
mov
dec
cld
decb
test
xchg
mov
sbb
xchg
out
mov
mov
xor
mov
lock
data16
jp
pop
inc
pop
hlt
fcomi
xor
sahf
adc
test
mov
lods
mov
cmc
sub
cltd
stos
pop
lcall
popf
pop
adc
add
repz
xor
sub
lods
rcr
test
adc
jns
insb
leave
xor
out
xor
subb
push
or
pop
icebp
fcmovnb
addr16
inc
outsl
rcll
mov
movsl
sbb
pop
inc
push
pusha
dec
movsb
and
movsb
xchg
iret
notl
push
dec
pop
mov
rcrl
push
dec
mov
jl
mov
mov
test
mov
aad
insl
fwait
mov
loop
mov
push
mov
js
inc
cmp
loope
mov
fs
rorl
icebp
mov
and
stos
or
incb
sbb
push
lret
mov
bound
sbb
xchg
jae
mov
jae
mov
es
sub
xor
add
cmp
movsb
sub
mov
out
xor
adc
jl
mov
jo
ljmp
xchg
bound
cmp
in
fwait
mov
add
sub
xchg
mov
cs
inc
jmp
mov
lret
cmp
cmp
adc
stc
or
nop
rcrl
xor
and
setp
jg
stos
cmp
mov
inc
shll
xchg
call
pop
sbb
into
dec
and
incb
out
sub
mov
sar
dec
pop
ljmp
xchg
mov
push
mov
push
addb
push
push
pop
adc
mov
xor
out
mov
adc
lods
and
ror
adc
jecxz
xor
inc
popf
jo
in
pop
mov
iret
js
jae
out
pop
rorl
mov
mov
loope
cli
inc
adc
or
les
add
jbe
cmp
or
cmpsl
sbb
popa
mov
xchg
dec
shlb
add
push
pop
xchg
movsl
ja
in
pop
cmp
aaa
stos
xor
xchg
xchg
movsb
xor
pop
sarb
imul
nop
mov
dec
ret
dec
test
xorb
dec
cwtl
inc
mov
push
andl
jp
cmp
hlt
inc
lods
stos
fs
out
int3
daa
xchg
outsl
jae
je
jnp
pop
aad
sbb
mov
ficomps
repnz
dec
imul
xor
push
or
mov
enter
pop
in
mov
or
sub
and
cmpsb
cmp
je
push
cld
mov
add
mov
js
push
xchg
mov
xchg
stos
sbb
push
mov
sbb
mov
sarl
jbe
dec
sbb
addr16
lahf
xor
or
call
sub
shll
mov
out
push
out
and
sub
add
mov
arpl
jmp
pop
cmp
sar
pop
aad
ret
or
icebp
repnz
add
cmp
push
xor
and
stos
lcall
push
in
push
lret
les
lcall
push
push
out
mov
loopne
push
xor
sahf
js
inc
out
mov
fdivl
cltd
lds
ds
fsubrl
pop
xchg
scas
or
mov
mov
or
push
aad
popf
inc
sub
test
push
cltd
shll
mov
loop
popf
shl
ljmp
dec
push
das
lea
cmp
xlat
xor
and
mov
nop
outsb
aam
pop
lds
push
or
xchg
pop
push
cs
xorl
enter
mov
nop
pusha
test
lock
loope
add
inc
mov
push
fidivrs
cli
test
ja
loopne
int3
scas
fidivrl
iret
lods
sbb
adc
xchg
mov
lock
adc
xchg
pop
aad
fs
pop
sahf
lock
xchg
mov
loop
lcall
fsts
jp
add
loop
fbstp
fidivs
imul
push
jle
jb
testb
fsubs
mov
stos
and
and
dec
loop
mov
cltd
add
jge
mov
ror
call
mov
aam
xor
pop
or
test
out
out
leave
adc
rclb
stos
inc
sbb
ja
jg
test
shlb
int3
aas
cmp
mov
push
mov
jnp
fs
dec
clc
jp
jge
test
ret
arpl
jb
mov
sahf
xchg
sub
xchg
cld
cmp
arpl
and
xor
or
insb
add
or
test
jne
icebp
adc
xchg
mov
mov
shll
gs
inc
shll
cld
lret
dec
mov
mov
mov
mov
or
pushf
jecxz
or
add
mov
leave
mov
stos
imul
jl
add
sbb
and
pop
repz
xchg
xor
mov
dec
out
mov
mov
mov
sub
sub
add
test
in
out
test
mov
pop
std
push
loope
xchg
shll
jb
inc
and
fs
bound
incl
imul
jnp
sbb
aam
imul
fstps
adc
loop
jne
lds
sbb
neg
cmp
mov
or
imull
cwtl
cmpsb
outsl
mov
add
lret
fs
mov
fsubrp
aam
jno
sub
stc
popf
jmp
dec
sti
in
push
fsubr
lret
adc
xor
rorl
ret
jne
sti
imul
jae
jle
mov
xlat
in
out
mov
and
lds
aaa
int3
push
xor
inc
ret
popf
fisttps
jbe
push
movsl
insl
push
lret
and
add
and
data16
dec
dec
leave
cmpsl
rorb
push
popa
mov
sti
ljmp
xor
mov
mov
dec
mov
or
outsl
jl
xor
iret
jge
jge
pop
in
adc
sbb
cs
dec
cli
or
ficoml
out
mov
frstor
loope
xchg
jae
inc
fs
ja
popf
sbbb
mov
icebp
xor
cmc
test
in
fnstenv
adc
vpshlb
ds
sahf
test
lock
push
pop
ljmp
movsb
jmp
cmp
scas
inc
mov
fiadds
mov
mov
outsl
inc
inc
mov
pop
fs
pop
gs
pop
sahf
xor
iret
out
mov
inc
sub
iret
push
xchg
push
adc
ret
dec
ret
cmpsb
sub
mov
xchg
mov
scas
mov
xlat
daa
push
fldpi
loop
add
addr16
ret
in
adc
xchg
aaa
in
xor
nop
shr
test
and
inc
jp
jbe
dec
aaa
ficoml
scas
and
test
cmpsl
dec
clc
push
cmp
das
push
pop
push
imul
daa
fcmovnu
out
imul
xchg
mov
lret
jne
cmp
repz
mov
lret
adc
dec
shll
je
adc
pop
pusha
mov
lahf
cltd
push
adc
pop
mov
in
add
xchg
xor
test
rcrl
popa
negl
nop
mov
das
push
mov
pop
sbb
fsubl
shrb
rorb
sub
jp
push
add
pop
mov
cmpsb
insl
call
jno
int3
mov
and
fstps
dec
adcb
js
lock
and
dec
mov
cmp
imul
inc
imul
fstl
mov
mov
out
push
je
ja
movaps
ljmp
add
aas
loopne
inc
pop
or
xchg
xor
xchg
imul
pop
std
push
pusha
xchg
fidivs
sti
jmp
pop
jg
in
fisttps
shll
gs
mov
out
stos
sbb
mov
mov
jl
cmp
or
jp
loopne
xor
dec
mull
inc
scas
fistpll
jge
push
mov
je
imul
mov
jne
stc
repnz
inc
in
add
sbbl
das
dec
mov
in
clc
mov
lahf
cmp
mov
mov
and
bound
mov
out
or
cmp
add
sub
jg
push
push
rcrb
ljmp
cmpsb
or
scas
sbb
repz
jle
iret
add
out
inc
push
sti
clc
popf
jmp
push
xchg
lock
or
mov
and
and
adc
fcmovb
push
dec
mov
and
andl
sahf
test
fidivrl
adc
xchg
sbb
repz
mov
add
or
add
je
push
shll
pop
sub
clc
pop
cwtl
adc
popa
in
mov
sub
lret
int3
jecxz
fdivl
mov
filds
scas
jns
sbb
mov
lret
sbb
mov
cmp
jno
mov
push
das
es
cmp
hlt
or
test
add
repnz
mov
dec
add
std
dec
aaa
cmp
call
and
in
mov
xchg
jne
add
and
mov
shlb
call
pop
push
stos
in
shlb
imulb
popf
mov
es
or
pop
cmpsb
stc
fcoml
adc
jae
push
insl
cmp
xchg
sub
inc
fs
imul
mov
sub
cli
xchg
enter
inc
loop
fstpl
jne
inc
push
xchg
rclb
les
push
into
into
mov
adc
dec
dec
fmull
fbld
punpckldq
ret
ret
and
add
or
pop
decb
fnstcw
fsts
pop
xchg
push
inc
ss
mov
jno
sbb
jne
nop
push
fwait
jb
pop
bound
data16
cmp
add
dec
push
sbb
rcll
scas
ds
push
dec
js
mov
add
mov
xchg
mov
mov
mov
fdivrp
or
or
fdivr
dec
jle
pushf
add
xor
cmp
mov
mov
imul
sbb
push
jne
cld
lret
dec
lret
mov
pop
mull
std
ficoms
cmp
loope
out
cmp
clc
or
jecxz
pusha
fstl
cwtl
xchg
xor
lret
imul
pop
jle
add
sbb
insb
sbb
mov
cmp
fiaddl
adc
iret
add
mov
dec
je
mov
xor
pop
aam
or
shl
loope
pop
and
lods
xchg
mov
inc
in
dec
imull
popf
imul
adc
outsb
cltd
mov
jnp
imul
imul
dec
or
imul
push
and
cmp
out
inc
call
insb
or
pop
and
mov
xlat
fsubr
push
cmpsl
inc
arpl
cmp
pop
insl
sbb
inc
out
xchg
cmpsb
sbb
ret
and
mov
pop
pop
imul
push
add
mov
shl
xchg
jp
push
xchg
out
push
enter
mov
out
xor
stos
add
push
mov
stos
jecxz
and
or
mov
jae
pop
lahf
xchg
inc
rcrl
adc
lods
sbb
iret
ret
cs
mov
push
mov
sbb
mov
mov
add
rclb
xchg
or
adc
test
push
push
bound
adc
xor
sti
xchg
sub
mov
lret
adc
sbb
ss
lahf
mov
inc
aaa
fsubrs
adc
test
lock
cwtl
sbb
xor
es
ljmp
dec
jle
jnp
or
mov
cwtl
cld
push
xchg
mov
sbb
rol
xchg
ret
push
pop
or
jle
mov
mov
out
sbb
mov
test
sub
add
out
xchg
test
and
negl
or
out
pop
data16
outsl
xchg
pop
add
jb
cmp
xor
xor
or
test
push
divl
inc
push
jecxz
dec
scas
push
pop
shr
gs
adc
sbb
hlt
xchg
andl
andl
xchg
rolb
mov
xchg
decl
xlat
iret
dec
mov
pop
loopne
les
repnz
iret
outsb
mov
hlt
push
or
xor
and
mov
and
jmp
or
push
and
jp
xor
ret
pop
push
out
aas
int3
stos
lods
dec
hlt
es
mov
repz
fdivrp
inc
ss
aad
cmc
mov
xchg
jb
push
jmp
pop
inc
cmpb
pop
cmp
pop
push
jp
ret
sbb
insb
lock
cs
mov
dec
into
leave
mov
ja
xchg
push
push
cmp
das
mov
imul
dec
push
pop
xor
sub
std
push
shl
mov
lahf
out
cmp
xor
xchg
pop
sub
movsl
roll
mov
xor
jne
cmpsl
jecxz
cmp
imul
mov
fcomps
push
inc
imul
add
pop
aaa
push
sub
int
sbb
aad
and
cmpxchg
sub
push
sub
pop
fs
adc
fiadds
enter
rcll
fucom
mov
sbb
pop
and
mov
int
push
in
and
cmp
popa
sub
scas
mov
mov
subb
divl
jl,pt
push
in
or
xor
and
shll
pop
mov
and
adc
pop
and
daa
dec
cltd
clc
rclb
stos
sub
adc
mov
fwait
push
and
loope
stos
cld
and
pop
pop
pop
jmp
imul
jl
outsb
mov
test
test
cwtl
adc
loope
daa
or
fwait
stos
dec
nop
js
jmp
fisubl
mov
xchg
sbb
or
in
hlt
jge
cmp
push
scas
push
add
cs
xor
pusha
decl
sti
lods
mov
loope
bound
sarb
push
je
push
jl
jmp
pop
push
mov
ret
xchg
or
pushf
mov
xor
xor
rcl
int3
mov
sbb
xor
inc
addr16
ffree
pop
dec
stos
pop
insb
and
push
shrb
test
and
mov
nop
ljmp
pushf
mov
fwait
jmp
hlt
xor
rcrb
sti
aaa
jge
dec
pop
mov
dec
fcomps
scas
adc
lret
dec
jg
leave
out
ret
testl
loop
lock
xchg
lds
stc
fsubl
popa
fwait
das
pop
fidivl
xchg
arpl
movsb
bound
and
jge
ficomps
xor
or
mov
xchg
icebp
mov
lods
xchg
imul
pop
mov
mov
into
data16
les
inc
xchg
cltd
push
aad
jp
fdivrs
push
pop
adc
mov
lods
aaa
pop
stos
push
xor
sbb
add
push
mov
push
test
imul
and
dec
lcall
push
fs
mov
dec
jne
popa
notb
push
sub
xor
mov
sbb
add
psubusb
add
shrl
frstor
outsl
cmp
bound
movsl
mov
xor
sahf
pop
add
cmp
or
insl
mov
int3
sub
sbb
fmulp
je
fs
jns
push
jb
sahf
and
push
push
mov
fcmovnbe
fs
push
cwtl
adc
lea
push
add
xchg
ret
loop
mov
sub
mov
jl
repz
jl
es
inc
fidivrs
cmc
and
cltd
outsb
aad
leave
sbb
sub
inc
fiadds
orb
or
add
jno
inc
imull
and
lret
dec
stc
mov
dec
sbb
test
nop
and
push
std
movsl
xor
xchg
xchg
movsl
rorl
add
and
into
clc
dec
jmp
ret
popa
fwait
pop
cmpsl
adc
or
xchg
push
nop
out
in
out
jmp
int
idivl
inc
mov
push
adc
add
ljmp
stos
cwtl
stc
test
cwtl
push
loopne
or
shrb
inc
push
add
push
jecxz
push
stos
xchg
xor
pop
mov
cs
mov
fs
cmpsl
ret
jbe
mov
daa
and
adc
mov
xchg
xor
mov
sub
adc
cmpsl
cltd
xchg
out
mov
lahf
sbb
fimuls
jmp
in
cs
pop
fnstsw
dec
adc
lret
enter
addr16
or
fwait
inc
lods
push
push
mov
pop
jmp
divl
add
pop
shll
inc
jl
and
cmp
jge
scas
sub
call
mov
push
hlt
popf
xor
outsl
push
movsbl
enter
pop
jmp
aaa
xor
lahf
bound
mov
mov
or
inc
sbbl
pop
ds
push
call
nop
cmp
adc
pop
out
aam
push
and
les
add
shl
rcr
mov
in
sub
stos
xchg
mov
fdiv
cmc
insb
cltd
push
mov
pop
mov
ja
nop
popf
lret
adc
sub
mov
data16
js
sbb
or
rep
push
add
daa
sub
fists
inc
inc
xor
add
iret
repz
mov
icebp
lods
sub
ret
push
or
jae
cmpsl
imulb
call
inc
fdivs
cmp
ret
xor
mov
xchg
cmpsb
jp
sub
outsb
insb
fcomi
movsb
adc
cmpsl
jbe
lock
push
fisubrs
mov
jne
or
xor
in
inc
fwait
int
xor
mov
and
ljmp
dec
dec
shlb
sarl
cmp
insl
mov
mov
roll
insb
insb
cwtl
fisubrl
mov
movb
xchg
jl
mov
xchg
fidivl
mov
jno
or
lods
adc
jl
pop
sbb
inc
xor
and
adc
jnp
xchg
dec
cmp
mov
repz
push
cs
jge
outsb
pop
hlt
xor
pop
sbb
enter
mov
jmp
xor
daa
dec
decl
mov
mov
notb
mov
test
out
aad
dec
cwtl
sub
add
or
nop
cltd
add
adc
xchg
out
mov
and
mov
xchg
sub
rcll
inc
sbb
das
cmp
adc
fldt
out
cmp
push
push
dec
and
test
es
int3
add
rcll
aas
push
jg
mov
sbb
test
push
add
cmc
sub
lds
add
push
inc
arpl
data16
jae
fstpt
clc
sub
ret
pop
xor
cld
out
or
cmp
movsb
fstpt
dec
imul
dec
shrb
cmp
lret
mov
and
insl
xor
loopne
mov
inc
loopne
mov
dec
scas
sbb
pop
pop
subb
xor
ret
ljmp
cmpsb
mov
pop
xchg
sbb
inc
fwait
or
dec
lock
mov
push
mov
xchg
mov
add
jecxz
cs
pop
ja
movsb
mov
test
inc
push
sub
sbb
dec
sbb
cltd
mov
push
push
jnp
mov
jbe
mov
or
fidivs
popa
lret
in
sbb
mov
cltd
pop
jmp
rcl
mov
cmc
shll
mov
mov
pop
dec
jmp
mov
dec
mov
add
repnz
cs
jecxz
out
mov
lret
in
cmp
icebp
ss
add
pop
sub
into
mov
lcall
mov
roll
xchg
outsl
xchg
out
lea
xchg
imull
ss
cmc
stc
inc
mov
lods
cmp
ficoml
popa
cmp
jbe
test
and
repnz
test
add
sbb
clc
jmp
int
mov
and
div
call
pop
pop
ret
out
stos
inc
scas
inc
jbe
icebp
sahf
dec
sbb
lcall
mov
and
fmuls
or
pusha
sbb
mov
pop
add
loope
outsb
push
sub
call
and
adc
into
add
jge
dec
mov
cmp
frstor
add
xchg
push
cmpsb
cmp
cli
mov
and
mov
test
mov
mov
push
int
xchg
sbb
imulb
dec
pop
lcall
cmpsb
cmp
sbb
fisttpl
gs
cmpsb
cld
das
in
addr16
int3
sub
adc
add
jnp
orl
ud2
out
mov
loop
push
cmp
imul
aad
ds
repnz
mov
out
add
repnz
sbb
cmp
add
adc
mov
sub
in
adc
push
pop
adc
stos
add
xor
mov
mov
mov
xor
es
into
xor
and
inc
ljmp
dec
xor
and
pusha
mov
repz
pop
jo
fidivrs
lea
xchg
hlt
icebp
out
cs
popf
mov
jl
bound
lods
jg
or
movsb
mov
push
xor
scas
movsb
push
scas
lret
sarl
dec
mov
stos
lock
out
jae
cwtl
xchg
mov
cld
test
in
cli
jno
ret
mov
stos
cltd
repz
stc
fstpt
and
lods
mov
mov
mov
jbe
sub
mov
lea
mov
pushl
andb
or
fldenv
aam
cmpb
jecxz
imul
cmp
push
insl
adc
xchg
lret
jmp
adc
lret
aas
pop
push
lret
lods
and
mov
in
sbbl
mov
mov
push
cmp
jecxz
lea
fs
push
negb
lret
mov
icebp
sub
std
scas
or
cmpsl
shlb
daa
scas
mov
shl
movsb
aad
cld
add
mov
hlt
scas
outsb
and
out
scas
xor
test
in
inc
jb
fidivl
dec
leave
repz
sbb
out
aaa
mov
or
aaa
add
negl
movsb
mov
int
xor
sti
nop
aaa
pop
dec
or
push
sbb
out
xor
adc
mov
push
call
sbb
jno
mov
into
movsl
pop
and
adc
mov
cmp
cli
sbb
loop
sahf
push
out
in
adcl
cmp
shlb
ret
mov
popf
adcl
jb
pop
scas
lcall
adc
popf
dec
arpl
xlat
in
fwait
inc
or
mov
subl
xchg
in
mov
mov
mov
mov
fiaddl
or
imul
nop
hlt
jnp
enter
pop
enter
int3
in
and
inc
fcomp
fdivrs
pop
xchg
rcrb
mov
cmp
test
and
jb
push
fs
sub
dec
sarl
sbb
cmp
fiadds
mov
and
inc
mov
jg
stos
sbb
xorb
enter
and
test
sub
pop
aaa
jne
or
jns
push
popa
cmpsl
mov
push
adc
sarb
dec
lret
xchg
test
sbb
mov
test
or
dec
fdivs
bound
push
aam
jecxz
test
add
lcall
lods
push
pop
repz
int
popa
adc
adc
xor
iret
mov
arpl
cld
ja
push
stos
push
adc
inc
int3
rol
popf
aas
cli
fnstenv
cwtl
out
test
out
std
xchg
mov
xchg
and
sahf
sbb
jl
call
add
and
out
movsl
imull
mov
cli
mov
js
jl
push
sbb
fsts
sub
es
js
add
popf
push
sti
add
fisubl
clc
pop
rorl
or
push
xchg
aam
loope
jp
xor
notl
mov
pop
jmp
jge
mov
cmp
inc
pop
mov
data16
jp
mov
loopne
push
push
and
push
fwait
std
int3
xlat
int3
test
cmp
sti
push
cld
sbb
cs
loop
mov
inc
mov
jne,pt
mov
mov
out
cmp
cmp
cmp
ret
jge
pusha
ds
inc
test
xor
add
bound
mov
xor
pop
cmp
test
outsb
lods
rcr
sub
test
xlat
mov
add
mov
cmp
dec
jno
or
xchg
adc
sbb
andl
sbb
sbb
adc
cmp
xor
pop
and
movsb
push
add
enter
xor
sti
add
cs
ret
and
pop
push
shll
cmp
or
sub
xor
or
mov
xchg
and
mov
pop
ljmp
inc
cmp
mov
xor
xor
jmp
jns
stos
and
aad
xlat
addb
xor
dec
mov
loopne
roll
sub
test
fdivr
cwtl
push
stc
push
sub
pushw
jb
jns
scas
pop
sub
push
mov
mov
mov
push
cmp
pop
jecxz
sbb
ret
pop
dec
rorb
jge
or
push
pop
fsubs
mov
mov
cmp
arpl
add
sbb
mov
push
mov
sub
xchg
gs
dec
sub
lret
add
sahf
cmp
cli
inc
pop
fs
repz
pop
je
sti
sbb
sbb
sbb
xchg
rcl
loop
hlt
jmp
int3
xchg
addr16
fldcw
stc
dec
cmpsb
pop
xor
test
fmul
inc
cmp
add
inc
imul
lods
in
xor
arpl
xor
dec
shl
inc
movsl
pushf
rcrb
lret
out
jbe
out
cwtl
insb
mov
lahf
xorb
shlb
out
stos
es
inc
or
icebp
sbb
dec
mov
jg
push
jge
mul
jo
pop
int3
test
ret
sub
cmc
xchg
cltd
out
xchg
dec
adc
jmp
aad
jl
mov
sbb
xor
xorb
xchg
jae
stos
js
jmp
inc
adc
mov
inc
mov
mov
loope
enter
and
ret
push
mov
adc
push
pop
bound
jo
adc
inc
fiadds
out
cmpb
mov
out
mov
pop
imul
push
pop
rorl
push
mov
ss
dec
dec
inc
cmpsb
hlt
inc
loopne
inc
pop
sub
sbb
ror
inc
testl
mov
inc
fwait
cmpb
out
dec
aad
repz
neg
ds
js
test
lahf
cmpsb
mov
inc
stc
fldcw
shrb
inc
sti
test
enter
pop
lds
lahf
ret
test
mov
js
cmp
sti
lods
jp
push
cli
inc
in
cmp
jb
ss
cmc
mov
xchg
aad
xorb
sbb
or
ja
cs
pop
loopne
mov
cmp
push
and
push
pop
data16
call
pop
mov
dec
aas
mov
out
cli
scas
sub
sub
xor
in
jnp
pushf
and
jne
imul
mov
les
ljmp
push
pop
sbb
aaa
mov
sbb
ret
jne
jmp
in
push
fbld
xchg
bound
call
sbb
test
mov
sub
inc
dec
test
outsb
mov
and
lds
pop
pop
xor
lds
dec
js
out
sbb
fsubl
sbb
out
ja
fs
xor
mov
sub
pushf
iret
test
in
pusha
outsb
or
fdiv
push
icebp
mov
push
hlt
ret
je
xlat
sahf
jmp
jns
pop
mov
popf
test
jno
xchg
xchg
cmp
and
mov
cmp
aad
jae
mov
mov
mov
imul
xor
mov
xor
int
ret
mov
negb
mov
nopl
pushf
mov
sub
jno
cmpsb
sti
and
push
lret
push
fdivs
hlt
and
cmpb
mov
dec
fistpl
mov
xchg
sbb
in
adc
xor
nop
adcl
dec
sub
rcr
cltd
lods
loopne
inc
andb
mov
stos
jecxz
or
xchg
dec
push
mov
les
xor
cltd
pop
pextrw
cmp
push
xor
jmp
xor
aad
inc
imul
xor
push
test
mov
stos
jbe
fsubp
xchg
ret
psraw
dec
fld
pop
aad
and
loopne
fstpl
cmpb
push
leave
data16
add
lea
call
or
push
negl
rorb
jecxz
dec
and
mov
dec
xchg
xchg
std
cmp
imul
jne
xchg
insl
repnz
add
call
test
popf
sbb
fcomip
push
xlat
adc
mov
lret
cmp
jl
push
loopne
aam
fadds
inc
adc
cmp
push
roll
push
or
jp
es
loopne
adc
das
xchg
jg
je
sub
mov
repnz
jb
les
out
addr16
mov
insb
fcmovnu
fcompl
pop
pop
xchg
xchg
imul
inc
mov
adcb
xor
add
clc
shlb
xor
enter
jne
adc
mov
and
xchg
cltd
call
rclb
or
xor
iret
mov
nop
and
jmp
icebp
xchg
adc
pop
inc
ds
pop
inc
cltd
jg
xchg
std
adc
scas
das
add
jp
loop
and
test
mov
or
gs
cmp
lds
andb
lcall
inc
stc
and
push
mov
pop
jge
jb
push
adc
lret
jnp
xorb
shll
push
dec
mov
cmp
cmpsb
jns
xchg
mov
sahf
outsl
mov
inc
push
mov
add
fdivrl
pop
sbb
shl
jb
add
cmc
adc
loopne
cmp
jbe
mov
mov
push
sarb
dec
cmp
mov
repz
scas
nop
xor
shlb
mov
icebp
add
inc
mov
xchg
adc
adc
xorb
mov
xorb
icebp
aam
pop
xor
xchg
incb
add
pop
inc
and
pop
sbb
dec
mov
or
int3
add
mov
lcall
mov
ss
test
mov
lahf
pop
sbb
xchg
cmp
cmp
enter
xchg
iret
jl
push
mov
mov
adc
repz
pop
jns
mov
mov
mov
sbb
pop
fcom
push
adc
fwait
scas
xchg
cltd
pop
and
jo
xlat
arpl
mov
jnp
adc
inc
cmp
add
in
neg
add
push
jl
sbb
mov
cmpsl
pop
into
pushf
fs
lock
test
sbb
and
fbstp
aam
shrb
fldl
pop
icebp
mov
cmp
xor
inc
mov
insl
or
add
xor
add
ret
in
add
mov
jns
test
sbb
and
imul
dec
repz
test
ja
mov
sub
xchg
pop
iret
xchg
sbb
jo
repz
ror
mov
mov
leave
cmp
loopne
xor
enter
cmp
fmull
inc
fs
mov
pop
cmp
loop
or
xchg
dec
push
jl
int
inc
movsb
mov
lock
and
fdivr
pusha
jno
jae
mov
jp
dec
mov
sbb
cmp
jmp
shrb
addr16
mov
ds
dec
fdivl
es
inc
add
mov
ret
and
dec
cwtl
and
xchg
jne
pop
pop
into
incb
jp
xor
cld
inc
stos
xchg
mov
cld
or
and
push
fistpll
hlt
inc
adc
jns
push
dec
add
cmpsb
xchg
and
aaa
shlb
push
add
clc
call
clc
lret
shll
inc
pop
leave
insb
lock
movsb
in
sbb
adc
lods
dec
xchg
test
insl
fmull
xlat
mov
xchg
fsubs
movsl
jp
and
add
in
cltd
add
ror
in
jle
ss
xchg
fimuls
adc
fsubrs
addr16
rorl
icebp
xchg
dec
sbb
push
pop
aaa
pop
lock
or
xchg
test
rorb
push
push
rorl
push
mov
pop
movb
pusha
out
adc
dec
addl
xor
cmc
mov
imul
sub
cltd
les
andl
mov
nop
jg
sbb
enter
push
es
ljmp
sub
mov
xchg
jnp
cmp
cmpsl
jmp
add
push
cmp
mov
aas
or
icebp
out
lret
aas
ja
ficompl
icebp
repnz
cltd
inc
dec
aas
xchg
mov
xchg
xchg
addr16
jb
lcall
lret
mov
sub
dec
adc
sub
push
inc
and
xchg
push
sbbb
nop
sbb
cmpsl
push
mov
sbb
lcall
mov
pop
or
pushf
lods
xor
mov
clc
xlat
xor
aam
xchg
cmpsb
xlat
cs
cld
add
pop
push
imul
shlb
push
je
fmulp
insl
adc
pop
xchg
test
lods
jl
mov
ret
add
addl
cmpxchg
es
cld
jle
stos
popf
ds
stos
sbb
stc
das
push
rol
mov
sbb
mov
and
jae
pop
dec
xor
out
sar
subb
rorb
adc
or
cwtl
xchg
add
stos
cltd
pop
or
rcr
mov
icebp
daa
mov
aaa
adc
adc
subb
stos
and
jle
loopne
and
pop
mov
cmp
cltd
call
inc
loopne
or
mov
ret
mov
cli
je
shll
xor
je
cs
rol
xor
pop
popa
cmp
cmp
cli
es
mov
outsl
dec
mov
add
aad
call
shl
inc
xchg
gs
bound
test
pop
pusha
add
push
rcll
cld
shrl
movsb
fisttpll
mov
and
mov
dec
int
int3
ret
mov
in
dec
icebp
mov
pop
cmp
dec
mov
jg
pop
mov
and
dec
sub
sar
mov
pop
les
cmpsl
mov
test
adc
ljmp
push
into
mov
pushf
insb
mov
mov
add
sbb
stc
push
pushf
jno
dec
xchg
pushf
pop
inc
jno
xor
scas
add
add
pop
stos
outsl
xchg
cmpsl
jns
aam
testl
pop
es
pushf
mov
enter
cltd
and
fwait
cli
aas
out
daa
test
and
gs
mov
test
lret
xor
xlat
dec
xor
adc
dec
outsb
xor
mov
mov
cmp
and
pop
xchg
jae
test
jge
gs
outsl
inc
jnp
mov
fdivp
mov
mov
mov
iret
std
andl
insl
pop
fiaddl
loope
ret
pop
test
dec
iret
inc
lahf
jae
xor
scas
out
add
imul
dec
call
adc
inc
mov
and
push
xlat
push
sar
out
sub
sbb
outsb
mov
jbe
cvtps2pd
pop
pop
lahf
call
pop
xorb
nop
dec
dec
out
mov
xchg
add
adc
mov
jb
xchg
out
sbb
jb
ja
outsl
lret
lock
orl
cmp
cmp
or
je
dec
add
dec
xchg
test
dec
sub
xor
enter
jmp
int
gs
repnz
leave
jae
sub
jno
popa
pushf
sub
push
gs
jns
inc
cmp
lods
icebp
ss
sahf
cmpl
and
gs
lock
mov
pop
jmp
lock
enter
xchg
out
pushf
lret
adc
jno
mov
shl
lret
jecxz
fiadds
sar
and
int3
jg
mov
std
stos
fidivrs
ljmp
pushw
add
xor
jl
sbb
cwtl
frstor
jb
imul
push
jbe
jecxz
or
cmpsl
cwtl
xor
push
mov
add
in
and
stc
ret
stos
fwait
pop
lret
data16
mov
push
adc
xorl
dec
data16
mov
sub
push
int3
or
add
rclb
cmp
xchg
rorl
jl
sahf
and
bound
ljmp
mov
arpl
je
pop
andl
xchg
rclb
xor
push
jmp
fildl
rcl
cs
push
xlat
and
outsb
jle
dec
sbb
jmp
xlat
ss
push
push
or
xor
jl
sbb
push
mov
xor
sbbl
push
bswap
stos
stc
mov
jae
enter
ljmp
dec
mov
or
mov
loop
ds
and
push
mov
mov
lahf
mov
testb
push
mov
dec
inc
dec
pop
sbb
xor
cmpb
push
ss
arpl
jle
lock
in
pop
fstpl
loope
xor
jge
xor
roll
clc
repnz
cltd
fadds
jb
inc
ja
jp
xor
cmp
sub
push
jecxz
pop
pushf
xor
mov
push
lods
insb
out
jmp
es
lock
xchg
mov
jo
push
inc
and
mov
stos
xchg
jne
les
mov
sbb
dec
ds
cmp
js
cmp
sbb
mov
scas
mov
gs
push
pop
jle
mov
movsb
shll
je
mov
test
inc
fldt
pop
jns
jl
movsb
js
add
arpl
or
dec
imul
fidivrs
cmc
sbb
lods
imul
pop
sbb
sub
mov
in
repnz
xor
inc
cmpsb
push
inc
jg,pt
mov
jnp
rol
or
orl
push
outsb
and
jmp
in
adc
and
or
sbb
das
sbb
xor
xchg
nop
jmp
repz
in
rorb
dec
fcmove
in
sub
pop
mov
push
lret
jecxz
fsubr
shlb
ret
mov
fisttpll
fdivr
lock
xor
inc
dec
add
mov
out
mov
data16
mov
pop
cwtl
push
jb
mov
fsub
mov
imul
aas
and
sbb
or
das
mov
jns
pop
mov
inc
cmp
int3
mov
pop
cmpsb
dec
test
es
xlat
pop
andb
loope
stos
xchg
shll
shl
mov
pop
xor
test
pop
or
or
shll
push
bound
xchg
pop
add
pop
sbb
dec
xchg
std
lods
cmpsb
jp
popa
insl
pusha
add
jecxz
push
dec
pop
xor
inc
insl
aad
lret
inc
or
insl
mov
lea
jnp
ds
sbb
ja
dec
mov
mov
das
je
adc
xchg
popf
popf
or
xchg
xchg
push
cmpsl
xchg
pushf
ret
sbb
test
cmc
pop
push
sbb
sbb
fdivl
add
inc
jmp
nop
and
dec
mov
aad
gs
rcrl
inc
pop
ret
xchg
mov
xor
js
lea
sbb
daa
adc
and
lret
outsb
cmp
movb
jecxz
xchg
ljmp
inc
scas
xchg
jne
in
insb
sub
mov
sbbb
es
pop
xor
cmp
mov
les
out
sbb
outsb
fistpl
jae
mov
jns
xchg
sub
repnz
ficoml
lea
mov
outsb
inc
mov
call
nop
cld
divl
jge
mov
xor
xchg
sub
pop
cmpsl
inc
bound
sbb
xor
subl
inc
push
mov
repnz
push
sarb
push
inc
push
mov
and
sahf
std
test
pop
jmp
mov
jnp
xchg
fldenv
ds
adc
xor
jne
das
cmpsl
ret
jle
pop
das
cmc
dec
stos
aam
adc
mov
cmp
xor
stos
jnp
mov
dec
jmp
add
jae
xor
aas
outsl
jp
sar
inc
ja
inc
out
movb
loop
rcrb
mov
sub
int
ret
sti
out
jg
aam
enter
cmpsb
mov
das
loopne
cs
stc
popa
mov
inc
loop
push
cmpsb
scas
outsl
and
add
fists
mov
push
sub
cwtl
aad
mov
jle
lret
imul
stos
pop
xlat
cmp
or
jmp
jecxz
adcl
adc
push
cmpsl
push
mov
pusha
cli
cld
xchg
mov
dec
and
dec
add
in
adc
pop
clc
and
adc
dec
std
rorl
pop
add
sarb
lahf
xchg
hlt
sub
lret
cmp
and
cmp
push
je
ljmp
xor
fidivrl
ljmp
add
jmp
insb
cmpl
or
scas
adc
ficomps
fisubrl
fsin
adc
out
inc
lock
insb
sub
adc
add
mov
pop
push
sub
cmp
mov
sbb
mov
xchg
mov
and
pop
cmp
out
pop
xchg
pusha
xor
mov
xor
jns
sub
inc
jmp
call
add
sub
sub
je
add
push
mov
sbb
jp
sahf
out
mov
mov
mov
decb
jnp
push
negb
mov
xchg
scas
pop
sti
loop
ficoml
dec
jge
or
rol
lock
repnz
test
loop
pop
push
loope
xor
sbb
push
sti
sbb
and
adc
xor
out
daa
sbb
xor
pop
adc
subb
rorl
jmp
xchg
fcmovbe
xchg
fadds
pop
mov
outsl
test
pop
sbb
pop
lcall
jbe
lea
mov
pop
cs
cwtl
push
fbld
maxps
cmc
adc
movsl
push
lcall
int3
inc
xchg
jge
rclb
roll
mov
cmpsb
inc
or
adc
lock
xor
testl
push
cmp
xchg
jns
test
lcall
stos
loope
bound
pop
sahf
in
in
mov
dec
inc
xor
jbe
shll
stos
stos
aam
xchg
rorb
cwtl
mov
push
dec
cmp
lret
pop
popf
or
push
fnstenv
and
adc
pop
mov
push
dec
and
cmp
scas
lret
in
fidivrl
pop
repz
mov
pushf
or
fs
xor
lret
jle
lret
sahf
ljmp
out
leave
and
push
pop
pop
fcomi
sub
dec
outsb
scas
iret
scas
sarl
or
je
pop
jae
push
arpl
gs
cmpsl
jae
iret
adc
out
adc
in
inc
cld
pop
rorb
jns
xchg
enter
cmp
test
jno
int
dec
pop
jecxz
cs
jae
mov
adc
aam
push
sbb
mov
adc
rcrb
sbb
test
popa
icebp
inc
mov
in
jno
mov
scas
push
pop
and
add
push
adc
inc
stos
mov
ret
jecxz
lds
imul
repz
cmpsb
jp
mov
sub
push
sbb
push
jp
cs
cmp
cmp
inc
pop
mov
push
cmpsb
stc
out
sub
inc
nop
and
cmp
xor
jp
mov
jae
inc
mov
out
cmp
sbb
pop
ss
leave
sbb
pop
cmp
insb
loope
push
mov
inc
test
sahf
dec
add
mov
xor
adcl
aaa
dec
xchg
jnp
fwait
dec
popl
add
pop
call
or
or
iret
jle
dec
testb
or
ds
inc
mov
int
push
das
push
cld
add
aam
fstps
pusha
cmp
jbe
push
mov
ret
dec
idivl
ret
or
ret
aam
repz
sbb
cwtl
pop
push
rcrl
cmp
dec
in
xchg
push
lret
inc
ja
jb
push
pop
shr
ds
mov
shrl
mov
sub
xor
lds
and
jecxz
sub
outsl
in
push
mov
cmp
dec
lods
xchg
cld
inc
jns
fsubs
inc
idiv
gs
xor
out
mov
fdivl
mov
inc
std
pushf
icebp
xchg
sbb
stos
lds
mov
sbb
test
sbb
enter
ja
test
aaa
mov
popa
repz
rclb
mov
inc
add
xor
rcll
aam
dec
jmp
and
jge
mov
add
jge
dec
jo
lods
xor
adc
and
subb
inc
xchg
sub
shlb
dec
mov
sti
cwtl
int3
out
adc
push
sub
movsb
jb
ja
sahf
add
cltd
out
jbe
and
stos
nop
jle
sbb
movsb
gs
or
mov
in
xor
test
xchg
adc
inc
inc
xchg
in
aad
shl
add
add
out
pop
pop
out
cmp
cld
scas
movsl
inc
cmpsl
push
dec
std
and
aad
jae
mov
dec
iret
dec
gs
dec
test
xor
sbb
xchg
imull
mov
and
mov
cmpsl
mov
xchg
adc
or
mov
jbe
xor
faddl
jb
subb
movsl
fdivr
fcmovb
sbb
push
adcb
cli
movsb
fildll
and
cmp
or
adc
adc
aad
test
scas
cmp
xchg
inc
cli
xchg
adc
pop
cmp
ds
and
test
loope
push
in
and
ss
pop
cli
xor
mov
push
sti
scas
std
sbb
lret
aaa
das
into
fildll
inc
in
mov
ret
xchg
push
jmp
or
mov
js
std
cs
cmp
and
stos
inc
sti
imull
dec
mov
mov
xchg
xchg
push
xor
push
or
cli
dec
leave
cmp
mov
push
ret
mov
mov
adc
sahf
fsubrs
cmp
push
shlb
xchg
mov
ret
mov
push
into
mov
dec
mov
and
movsb
mov
lret
divl
imul
sub
or
in
jg
sub
and
stos
test
pop
into
xchg
rorb
ss
and
sub
push
jae
insl
popf
fdivrl
mov
insl
mov
ja
mov
les
fidivrl
ljmp
push
jmp
fsubl
sti
mov
notb
movsl
xchg
fbld
inc
mov
mov
ret
jle
nop
lods
jo
mov
and
mov
out
xchg
pop
sbbl
pop
jno
mov
clc
lds
lods
sbb
lods
cmpsl
pushf
jge
out
xchg
shrl
es
mov
sete
jmp
andb
jp
inc
add
pop
sub
in
jno
hlt
rcll
in
lods
sahf
xor
outsl
jbe
xchg
inc
mov
hlt
or
adcb
mov
fcmovnu
jne
test
mov
inc
test
test
inc
jecxz
sti
fnstcw
subb
xlat
pop
adc
ljmp
repz
jnp
sub
jns
enter
jle
cs
scas
pop
mov
scas
test
shrl
arpl
pop
iret
xor
xor
mov
stc
lods
test
cmpsb
cltd
xor
sub
xchg
xor
cmp
mov
mov
ficompl
scas
test
daa
mov
mov
mov
pop
test
flds
inc
cmc
ret
stc
gs
add
xchg
fsubrs
and
mov
enter
xor
jge
mov
out
leave
adc
push
sub
popf
jns
les
repz
aam
mov
lods
ror
pop
and
test
test
in
mov
fsubl
add
std
loop
push
inc
jne
inc
xchg
in
bound
lods
mov
aas
pop
js
das
dec
jecxz
sub
xchg
mov
repz
pop
aam
fildl
imul
or
and
or
scas
repnz
outsl
stos
or
jb
test
inc
mov
outsb
ds
mull
loope
ljmp
adc
mov
mov
mov
sbb
push
push
das
fdivs
mov
in
xor
dec
fnstcw
adcl
mov
jmp
sahf
fnsave
fsubs
mov
stos
outsl
lods
adc
scas
push
inc
cmp
jb
inc
pop
cwtl
outsb
sbb
sahf
push
add
test
imul
dec
dec
push
ret
jp
and
sbb
mov
fistl
sbb
cmc
out
fistps
push
hlt
cli
jmp
cli
aaa
movsl
push
and
stos
lds
xor
insb
xorl
shlb
fwait
and
ljmp
push
int3
pop
insl
mov
mov
outsb
enter
sbb
mov
in
movsb
fistpll
call
test
sub
jmp
popf
adc
cmp
daa
icebp
xor
subb
cmp
fwait
sbb
and
add
sahf
xchg
xchg
pop
jns
fdivs
subb
sub
mov
mov
pop
jae
mov
jl
rorl
sbb
pushf
jns
adc
in
mov
repz
lret
mov
push
xchg
mov
xorb
nop
mov
mov
decb
rorl
pop
fdivrl
mov
or
pop
mov
cmp
inc
and
or
repnz
and
inc
push
arpl
sub
inc
daa
push
mov
out
cltd
push
jb
lret
mov
ja
in
aaa
add
push
les
mov
mov
mov
and
pop
sbb
pop
cmp
sub
popf
xchg
xchg
lahf
pop
imul
mov
sbb
filds
xlat
enter
enter
adc
mov
lds
adc
adc
repz
sbb
shlb
push
push
jb
cmpsl
xorb
out
ret
jg
adc
movsb
sub
sub
stos
and
sub
push
xchg
pop
data16
setg
outsl
or
mov
faddl
push
inc
dec
adc
sahf
repz
xlat
fsubrl
or
cs
aad
xchg
fnstsw
push
dec
mov
jge
call
inc
mov
jne
out
outsl
mov
jp
jbe
xor
sbb
pop
xchg
outsl
push
sub
loopne
cmp
stos
push
cmc
nop
cmpsb
addr16
jo
inc
lret
pushf
sub
push
dec
and
in
mov
push
sbb
mov
sti
sti
int
xor
addl
insb
jp
repnz
pop
jnp
push
inc
scas
popa
xor
roll
nop
js
jp
fadd
mov
lock
xor
sub
xor
mov
test
xchg
inc
and
fld
ljmp
push
inc
das
xchg
insb
rorb
sub
mov
jmp
nop
inc
rolb
repnz
lea
mov
stos
cwtl
push
mov
mov
cld
stc
imul
rcl
jbe
jle
and
filds
ficoml
out
and
dec
gs
hlt
sbb
stc
mov
jbe
mov
jb
in
pop
testb
lret
arpl
mov
mov
cli
cmpsl
mov
fadd
icebp
shrb
scas
les
out
sub
jo
clc
push
pop
xchg
or
dec
test
lcall
push
push
ss
loopne
lcall
adc
nop
pop
xlat
mov
js
inc
push
dec
add
dec
lret
ret
inc
jbe
push
pusha
rcll
fwait
sti
cld
push
mov
js
ret
fdivs
aad
call
or
mov
pop
or
cli
mov
cmpsb
cmp
mov
mov
imul
pushf
addr16
dec
mov
push
inc
xor
hlt
lea
insl
sbb
inc
xchg
lret
dec
loopne
cmp
xor
nop
in
movsb
pop
shl
xchg
jmp
out
mov
out
mov
or
jg
pop
sbb
sub
cmp
lret
nop
sbb
mov
in
ljmp
cs
sahf
jno
pop
fpatan
outsb
cmp
dec
dec
sbb
push
push
test
or
adcl
shll
cmp
imul
in
movsl
pop
jmp
jb
mov
ret
nop
inc
popa
outsb
inc
jnp
pusha
xor
adcb
dec
add
loop
cmp
mov
fcompl
aad
pop
lahf
lret
data16
xor
pop
loope
dec
dec
ret
push
or
mov
cmovb
cmc
xor
xor
pop
and
push
mov
aas
data16
std
adc
rcrb
mov
inc
jnp
movsb
xchg
xlat
mov
xchg
arpl
xchg
sub
lods
mov
adc
popf
cmp
into
jb
mov
repz
dec
js
movsb
in
mov
pop
dec
out
mov
mov
jo
fistpl
jb,pt
cmp
rol
scas
pop
xchg
mov
test
insl
andl
clc
mov
ret
jne
rorl
cld
orb
push
lret
jg
cwtl
xchg
fmull
pop
or
dec
mov
cvtps2pi
daa
roll
xchg
fwait
xor
inc
std
jmp
and
push
out
jp
pextrw
mov
fwait
dec
test
lret
add
jge
ds
sub
fdivrp
test
push
insl
sahf
adc
inc
dec
mov
stos
je
dec
ficompl
repnz
add
push
data16
xchg
xlat
and
out
push
push
hlt
orw
jl
jmp
test
adc
test
jmp
inc
push
mov
and
subl
mov
mov
call
das
movsb
into
pop
push
push
inc
jne
xor
cmp
scas
andb
shl
sbb
pop
mov
stos
cwtl
mov
and
mov
ja
dec
inc
nop
popf
xlat
imul
inc
xor
addr16
test
sbb
sub
stc
adc
push
add
fxch
arpl
int3
psubb
out
dec
or
popa
cmp
out
mov
inc
adc
dec
xor
sub
popf
jecxz
insl
mov
push
jp
adc
xor
dec
lods
push
enter
shl
cld
xchg
out
jmp
cmp
jb
maxps
xor
dec
sbb
cmp
push
clc
xchg
pop
rcl
shrb
add
add
push
push
pop
mov
xor
imul
je
xlat
push
pop
xor
testb
or
push
cmp
stos
fwait
jbe
jge
bound
xor
pop
addl
adc
jo
sub
dec
push
cmp
sbb
cmp
mov
jl
xor
test
jnp
inc
call
mov
stos
test
in
loope
imulb
jmp
push
subl
popf
loop
insl
cmp
pop
shrl
sub
nop
mov
insl
addr16
inc
adc
in
xlat
test
nop
icebp
ss
ret
fimuls
call
lret
sbb
lods
mov
cmpsl
js
pop
enter
jmp
lock
push
jo
sarl
sti
frstor
es
movsl
and
pop
xor
jle
dec
aam
or
pop
cli
fdivs
pop
insb
push
stos
pop
in
cmp
insb
adc
idivl
xchg
fs
and
or
jbe
sar
cmp
dec
ja
out
lea
and
stos
lret
jne
lahf
jmp
pop
mov
subl
and
movsb
mov
lcall
inc
push
ss
cmc
js
or
sub
mov
in
cmp
es
mov
pop
lcall
test
mov
lock
dec
std
pop
lock
nop
sahf
je
adc
iret
add
xchg
shll
mov
je
fsubrs
jb
sbb
rclb
pop
push
push
stc
outsb
fisttpl
mov
rcll
jmp
add
or
mov
stc
xchg
out
je
inc
in
mov
adc
jnp
stc
pop
stos
inc
hlt
in
sbb
pop
js
aam
lods
aam
mov
and
jmp
inc
lret
push
and
pop
sbb
mov
je
enter
mov
lods
mov
fildl
in
xchg
test
add
dec
loope
push
mov
insl
hlt
pop
jb
ljmp
data16
es
int3
in
mov
add
ret
and
jecxz
jnp
jno
fcomp
orl
pushf
in
xchg
xchg
add
pop
les
jecxz
xor
int3
scas
hlt
testl
push
outsb
lods
and
pop
ret
enter
dec
push
cmp
aas
imul
int3
add
pop
lods
inc
cmpsl
cmpsb
dec
push
and
pop
pop
loop
xor
test
aas
fistps
mov
mov
hlt
add
out
into
in
stos
nop
push
test
mov
inc
sbb
das
gs
pop
sbb
pop
fwait
cmp
jle
add
push
or
movsl
mov
rorb
sbb
xor
testl
vzeroall
clc
stos
sbb
dec
push
mov
add
add
add
mov
cltd
pop
push
aam
sbb
xor
adc
int3
aam
mov
or
xor
pop
pop
push
or
out
out
test
cmc
adc
out
xchg
adc
insb
cmpsl
inc
enter
xchg
dec
mov
push
loopne
ljmp
mov
mov
mulb
movsb
pop
movb
lret
sbb
inc
in
dec
adc
lahf
popa
ds
scas
movsb
leave
cmc
ja
cmp
loopne
push
in
sbb
or
movsl
roll
shl
or
movb
into
mov
bound
pop
sbb
pop
cmp
adc
fs
outsb
int
aad
jecxz
mov
sub
cltd
adc
call
jae
sub
cmp
jp
cltd
jecxz
fbstp
xchg
lock
loopne
sbb
addb
sbbb
jmp
lock
mov
dec
je
mov
mov
add
jne
add
popa
sbb
jp
push
jg
inc
jno
add
jmp
xor
jecxz
inc
sti
imul
jmp
pusha
fimull
fstpl
dec
ret
cltd
inc
pop
mov
add
imul
lcall
and
fisttps
lods
and
push
into
stos
sbb
in
adc
out
fists
xchg
jo
fidivrl
out
out
int3
fdivs
aas
jae
jle
pop
test
mov
pop
popf
cmp
mov
scas
outsl
sbb
xor
out
insl
lock
lods
lods
xlat
pop
add
outsb
mov
sub
imul
adc
push
push
inc
xor
test
adc
mov
test
icebp
xlat
fs
jns
gs
jnp
jg
inc
or
jae
xor
bound
stos
stc
out
sbb
popf
mov
xor
rolb
repz
push
mov
rolb
sub
mov
ror
fcmovnu
es
inc
cmp
mov
jae
int3
hlt
sub
push
mov
xor
xchg
fwait
leave
dec
in
lret
int3
andl
adc
clc
movsb
xorl
int
jo
ljmp
or
push
mov
mov
jae
nop
fdivl
jb
adc
push
adc
pushf
fisubs
mov
cmp
das
xchg
addb
or
mov
and
int3
and
scas
push
jae
outsb
push
cmp
mov
mov
xor
add
mov
data16
aaa
adc
xor
push
sub
leave
push
mov
sbb
inc
ret
xchg
sub
test
jle
pop
ds
gs
xor
jbe
out
pop
ljmp
popa
popa
pop
testl
rcl
or
icebp
js
rcl
cmp
loopne
lods
xlat
dec
movsb
mov
js
fadds
sub
int3
fdivl
inc
sbb
in
pop
xor
out
xchg
lods
jno
mov
pop
fnstenv
xor
inc
gs
mov
fisubrl
mov
inc
xor
sbb
out
mov
clc
cmp
xchg
outsl
inc
pop
jo
xor
and
int
mov
decb
sbb
pop
xor
aas
xchg
popa
inc
js
out
dec
fcoml
pop
mov
ss
ret
xlat
cmp
xorl
int3
sbb
fs
mov
lret
sti
jecxz
popf
data16
cs
jno
mov
mov
adc
movb
outsb
es
outsb
mov
stos
dec
inc
pop
mov
sbb
stc
pop
or
out
loop
cmp
daa
insb
stc
and
loope
fwait
jno
iret
and
xchg
and
inc
test
sbb
mov
or
mov
cli
lea
dec
inc
out
cmpsl
rcrl
or
sbb
dec
das
add
mov
mov
loopne
add
dec
insl
pop
iret
dec
mov
push
fwait
cwtl
sub
mov
pop
sti
les
or
xor
andl
enter
out
andl
adc
enter
jae
adc
fisttpl
adc
mov
imul
cmp
sti
popa
pop
sub
negl
add
xchg
fndisi(8087
addr16
and
xor
je
push
xchg
xchg
jns
icebp
test
shlb
jb
inc
hlt
sub
xchg
xor
fs
adc
rcrb
rorl
aad
flds
dec
aam
sahf
in
mov
fists
add
mov
sub
imul
xor
mov
arpl
jae
iret
push
insb
push
les
dec
adc
push
inc
xor
sub
lods
ret
xlat
loop
pop
sbb
inc
lahf
lea
or
rcrb
movsl
fistpl
jmp
pop
jmpw
pusha
add
push
out
adc
lret
or
xchg
mov
or
rol
das
aas
mov
push
adc
ljmp
fucomip
mov
pop
sahf
xor
cmp
sahf
xor
jnp
xchg
mov
or
leave
pop
sbb
push
sub
push
mov
mov
mov
fldl
add
lea
loopne
lahf
and
mov
cmp
mov
or
pop
mov
outsb
mov
sbb
and
std
jl
shlb
xor
cmpb
xor
in
popf
cmpsl
popf
jbe
pop
jo
pop
mov
push
fisubrs
call
and
and
sub
inc
add
mov
ds
xlat
jecxz
mov
ret
push
int
aam
sarl
lock
cmp
mov
out
mov
cmp
pop
test
outsl
jl
lcall
outsl
sub
ja
mov
into
inc
mov
shll
lock
adc
stos
xchg
or
cmp
push
pop
imul
nop
xchg
mov
push
or
imul
leave
mov
rcrl
cwtl
ja
cmpsl
inc
sub
push
pop
cmpsb
jo
movsl
repnz
push
mov
loope
inc
xchg
adc
out
mov
cmp
add
jo
bound
adc
jne
jle
out
daa
mov
add
push
bound
jb
rclb
dec
ss
cmp
sub
jnp
out
ret
cld
inc
arpl
jb
les
popa
sub
cmp
xor
ss
cwtl
jae
inc
xor
jp
xor
mov
or
inc
push
mov
xchg
into
cld
aam
mov
addl
adc
gs
pop
dec
mov
inc
mov
sub
in
fcomps
popf
loop
mov
cmp
xchg
fstl
ret
add
and
jg
inc
push
call
out
sbb
lods
std
mov
jb
adc
xlat
jae
arpl
or
push
lcall
dec
popa
sub
and
cmc
mov
adcb
xor
gs
enter
mov
jno
repnz
sbb
test
movsbl
das
adc
sub
push
in
push
inc
and
imull
out
repz
inc
or
imull
pop
loope
cld
sbb
scas
sbb
dec
nop
xor
mov
push
mov
jno
dec
fistps
mov
mov
les
fnsave
mov
or
jp
clc
and
jmp
loopne
mov
scas
dec
mov
pop
imul
jb
mov
hlt
add
pop
nop
add
insl
stos
dec
into
mov
jp
into
outsb
and
divl
mov
jbe
mov
sahf
or
out
cltd
scas
cwtl
inc
cmpsl
xchg
imul
xor
test
jl
pop
cmp
and
mov
add
aam
neg
jg
pop
das
xor
ds
movsb
movsl
rcr
stos
scas
xchg
int3
push
ret
pop
popf
inc
xchg
pop
xchg
and
adcb
mov
test
jl
mov
sbb
je
cmp
and
daa
dec
pop
mov
adcl
mov
and
int
sbb
push
test
leave
scas
mov
pushf
lahf
jge
mov
jmp
test
add
jo
inc
xchg
mov
test
sbbl
sub
mov
pop
mov
test
ret
mov
push
aad
pop
inc
push
icebp
outsb
ljmp
jmp
lods
in
inc
dec
push
mov
lods
mov
cwtl
xchg
in
rcrl
xchg
jo
lahf
jno
cmpsl
jne
andl
or
pushf
mov
or
pusha
sahf
sbb
xor
mov
xchg
and
loop
and
fucomi
loopne
pop
mov
in
cmp
in
imul
in
dec
in
test
imul
dec
sbb
stos
adc
adc
repnz
add
popa
xor
mov
push
jnp
incb
in
cmp
sub
jns
sub
jmp
js
inc
shl
cmp
cmp
test
and
jbe
mov
loopne
mov
outsl
fmul
mov
popf
ss
data16
jnp
mov
cmp
adc
cmp
cmp
mov
sub
xchg
jg
in
pop
jmp
leave
inc
xor
addl
dec
shlb
icebp
sub
ds
out
mov
xor
add
jnp
mov
lahf
sti
adc
into
adc
pop
jo
ret
outsl
mov
aad
divl
imull
sti
mov
adc
outsl
out
mov
lods
out
or
stos
pushf
sahf
movsb
test
movsb
lret
stos
in
data16
jne
push
jnp
insb
aam
mov
mov
shr
sbb
movsb
mov
test
out
mov
in
cvttps2pi
xchg
repnz
dec
add
xchg
push
mov
rcrb
push
sub
outsb
in
mov
addr16
int3
cwtl
or
call
add
inc
out
orb
pop
sbb
jno
sbb
dec
adc
arpl
sahf
cmpsb
sbb
je
inc
adc
dec
cmpsb
adc
push
fs
scas
pop
imul
xor
fwait
hlt
sub
or
cli
int
mov
mov
mov
mov
adc
mov
repz
mov
pop
xchg
insb
sub
decl
out
popa
sub
jle
iret
daa
fdivl
jnp
push
and
sub
pop
ds
cwtl
lahf
loop
pop
faddl
fidivl
mov
cmp
mov
inc
pop
insl
adc
fs
in
add
or
pop
jb
lds
lock
adc
addr16
mov
jle
jl
mov
mov
jns
add
insb
jo
out
aaa
inc
je
push
or
cmpsb
cmpsb
jno
lret
out
arpl
sbbb
fsub
scas
outsl
xchg
leave
jecxz
scas
shll
mov
rcrl
rcll
std
sbb
in
das
jno
and
push
pop
imul
lods
cld
addb
add
in
clc
push
or
sahf
inc
repz
push
lahf
dec
pushf
cmp
aam
and
rcrl
addr16
mov
mov
dec
or
aam
ss
and
push
pusha
xlat
fmuls
scas
jmp
mov
cmpsb
popf
imul
adc
je
fcomps
xchg
jecxz
xor
cli
call
outsl
pop
push
repnz
mov
test
dec
mov
sub
mov
push
es
loope
cltd
push
aad
xor
data16
jg
sahf
fisubs
imul
push
xchg
jbe
pop
or
cmp
mov
push
add
xor
nop
lea
push
mov
test
aam
jae
add
and
scas
mov
outsl
outsl
pop
jg
jnp
push
shrb
xchg
push
sbb
adc
fdivrp
les
jnp
fiadds
mov
sub
daa
and
jo
in
std
das
mov
push
and
mov
xchg
in
popa
mov
adc
xchg
leave
mov
fnstcw
jae
push
ja
mov
push
push
shl
dec
lock
push
xchg
lock
dec
pop
or
add
sub
mov
sbb
aas
lret
or
push
popa
add
adc
data16
in
lahf
mov
xchg
push
mov
test
jp
les
inc
adc
xor
iret
push
dec
addb
xchg
frstor
fdiv
out
shlb
push
cmp
int
add
pop
cli
cld
clc
ss
jnp
push
jne
sub
jne
add
xchg
inc
xor
daa
mov
popa
add
sbb
mov
xor
sbb
hlt
add
ja
ret
add
sbb
dec
mov
xchg
dec
dec
insb
cld
sti
jb
sub
cmp
dec
ret
inc
sbb
lahf
jp
fcoml
or
dec
xchg
rclb
test
cli
sti
xor
pop
fdivr
arpl
inc
jle
and
out
sub
or
les
arpl
sub
lock
addb
shlb
fwait
lcall
pop
mov
mov
add
cld
nop
popf
mov
out
xor
imul
pusha
jbe
sub
xchg
into
mov
pusha
mov
sub
inc
push
mov
cmp
pop
mov
inc
and
popa
ss
adc
adc
outsl
mov
mov
add
int3
ret
add
sbbl
pop
push
mov
sbb
cmp
mov
xchg
adc
or
iret
cmpsl
aam
xchg
sbb
push
dec
call
sub
pop
cli
mov
enter
sbb
jl
insl
add
iret
dec
xchg
cmp
inc
push
imul
repnz
mov
vpsrlw
cwtl
inc
sub
add
xor
scas
xchg
add
pop
or
aam
imull
xor
adc
hlt
sub
scas
and
xor
lahf
movsl
xchg
xor
push
cmp
push
pop
fcomp
mov
xchg
add
add
lods
mov
add
inc
loopne
daa
or
decl
pop
rcl
lods
stos
ja
mov
hlt
pop
addr16
adc
dec
xchg
push
repnz
test
xor
pop
call
scas
adc
pushf
imul
inc
scas
cmp
or
cmp
add
insb
scas
lea
add
ja
and
pop
test
push
shrl
push
loopne
inc
inc
inc
sbb
out
popf
mov
or
pop
dec
or
pop
pop
jo
rcrb
pushf
rolb
repnz
shlb
pop
xor
sbb
aam
xlat
jb
movsb
insb
dec
dec
imul
clc
pop
adc
xchg
mov
mov
xchg
sbbb
out
stos
lret
imul
xchg
push
out
scas
mov
lds
pop
mov
out
je
pusha
cmp
ja
mov
subl
push
inc
cmp
pop
jno
arpl
mov
or
sbb
pop
test
mov
pop
imul
push
jle
jmp
adc
daa
test
sbb
push
movsl
or
mov
loope
rolb
push
stc
imul
add
inc
dec
rolb
stc
jb
orb
es
cmp
push
xchg
ror
pop
daa
push
loopne
and
das
jle
mov
mov
mov
addr16
xor
jbe
pop
xchg
add
mov
imul
cli
sub
outsl
loope
gs
inc
mov
enter
add
mov
dec
aaa
push
xor
sahf
mov
inc
movsl
insb
call
sub
fdivrl
test
mov
and
mov
sti
inc
fdivrl
cmc
xchg
jbe
cli
repnz
pop
test
xchg
dec
ret
and
adc
xor
aaa
inc
jae
insb
dec
scas
sub
or
mov
ret
xchg
ljmp
std
out
sahf
jae
addr16
xchg
inc
add
faddp
fnsave
mov
shr
dec
loop
mov
out
xor
sbb
dec
sahf
mov
jne
mov
xchg
leave
jge
leave
loop
inc
jg
loope
fsubrs
rorl
jnp
mov
cmc
repz
inc
cmpsl
cmpsb
mov
mov
adc
loopne
test
popa
add
loope
mov
jmp
push
adc
leave
mov
arpl
sbb
movsb
fwait
or
stc
mov
push
sarl
and
fs
push
push
dec
sub
je
fiadds
jp
mov
je
icebp
outsb
xchg
and
cmp
mov
and
pop
dec
loop
and
push
mov
add
fistpl
rclb
lret
shlb
mov
negb
lods
inc
lcall
inc
and
cmpsl
xchg
inc
mov
inc
lret
lock
mov
mov
inc
sbb
cmpsl
jbe
xchg
pop
mov
cmc
push
testb
mov
mov
ret
or
jle
ljmp
sub
push
lods
and
push
into
pusha
dec
out
in
mov
push
xor
lods
inc
sbb
jb
dec
cmp
xlat
jbe
data16
push
pop
mov
iret
sub
lret
pop
cltd
pop
ljmp
ret
ds
mov
js
or
pop
jns
hlt
das
or
leave
sarb
insl
mov
ja
popa
lds
iret
jp
add
out
in
idivl
jge
adc
aad
loop
ret
push
sahf
or
pop
push
xchg
xor
ljmp
lods
pop
movsl
test
flds
mov
in
addr16
dec
or
adc
jo
mov
test
inc
mov
or
inc
adc
ud2
sbb
mov
sti
jmp
stc
or
fildl
jg
por
decb
cmp
mov
movsb
mov
lret
insb
das
cmpb
push
xor
mov
push
fbld
ljmp
andb
fcompl
jg
xchg
hlt
inc
ja
stos
das
jno
add
mov
jns
fwait
xchg
or
aas
ret
sbb
pop
xor
push
and
je
rcr
xchg
dec
push
movsb
fisubrs
mov
je
dec
in
pop
mov
mov
xchg
out
dec
add
aas
insl
inc
dec
mov
sub
out
xor
cmp
mov
push
mov
jns
fwait
sbb
pusha
out
ds
pop
mov
mov
in
push
cld
aaa
fucomip
repnz
add
lods
arpl
lret
dec
gs
mov
xlat
loope
pop
mov
ret
add
or
repz
pushf
jbe
js
xor
mov
rorl
pushf
shll
mov
lahf
mov
cs
mov
mov
dec
sahf
xchg
jnp
pop
aam
inc
repnz
popf
mov
mov
rcrb
xchg
pusha
fbstp
fwait
insb
mov
mov
inc
xchg
lods
jbe
pusha
in
push
es
repz
pop
xchg
aaa
xchg
aas
fcmove
mov
inc
ret
xor
neg
cld
cmp
cmp
aad
xor
in
daa
pusha
cmp
xorb
stc
ret
lahf
insb
bound
pushf
mov
inc
add
cmpsl
pop
mov
js
pop
or
stos
fwait
xor
mov
test
int3
test
adc
cmc
jge
repnz
out
mov
jne
inc
push
dec
mov
xchg
cmp
sarb
test
xor
mov
and
test
daa
cmp
roll
inc
hlt
test
or
testl
inc
jle
mov
cmpsb
sbbb
aaa
pop
dec
push
aam
inc
adc
cmp
test
imul
outsl
xchg
enter
lock
mov
inc
xor
xchg
jg
scas
lret
inc
lock
mov
push
fsubs
lcall
and
dec
fnstcw
xor
lret
sti
mov
in
fadds
mov
mov
cwtl
cmp
pop
add
xchg
lahf
add
cld
ficompl
xchg
fsubr
adc
cmovl
inc
cli
xchg
ljmp
mov
bound
push
push
mov
sbb
andl
or
rorb
lret
or
dec
mov
movsl
sub
lcall
mov
mov
mov
movsb
cmpsl
jo
cmp
push
out
cmpsb
aaa
xor
hlt
mov
and
pushf
xchg
ja
pop
or
jge
idivb
cltd
repnz
ss
xor
in
test
rol
or
insb
push
or
xor
jmp
xor
jl
out
and
cltd
pop
or
in
add
and
xchg
cmc
and
xchg
mov
test
jnp
ja
cmp
mov
push
std
dec
push
cmpsb
fsubs
jmp
sub
ss
jl
sbb
repnz
cmp
pusha
faddp
xor
ret
pop
aad
mov
and
jmp
sahf
cmp
inc
push
sbb
ss
cmp
clc
xor
jne
mov
inc
pop
inc
sub
insl
mull
and
and
sbb
mov
cmp
jno
cwtl
push
idiv
cmp
dec
xchg
cli
std
push
popa
push
jne
or
int3
das
inc
push
cltd
jl
int3
ss
or
adc
je
lods
icebp
jne
stos
pop
dec
add
ret
dec
and
xchg
popa
cmp
ljmp
jno
insl
xor
stos
dec
cmp
movsb
fwait
xchg
movsb
insb
fldenv
push
js
cwtl
stos
sti
out
fsubrs
aad
and
mov
repz
dec
xchg
call
push
mov
lods
add
cli
jae
scas
fcom
adc
adc
or
cltd
fcomip
fbstp
push
sbb
xor
fstpt
movsl
mov
js
push
outsb
cwtl
test
cmp
es
jb
jbe
pop
call
jae
push
lock
leave
lods
jmp
push
pusha
xchg
scas
enter
arpl
mov
in
jnp
test
pop
push
inc
es
cld
push
nop
adcb
sub
aad
test
ret
repz
mov
xchg
adc
test
inc
or
scas
and
inc
cmc
mov
mov
push
fsubp
xchg
and
daa
push
jo
out
jo
aas
sbb
rorb
inc
xchg
mov
bndstx
cmp
icebp
jne
pop
pop
subl
inc
or
or
andl
cmpb
outsl
add
and
lods
mov
pop
pop
adc
adc
and
sbb
lahf
call
xchg
mov
faddl
sub
jns
or
mov
inc
scas
adc
sub
stos
dec
mov
icebp
add
arpl
jecxz
mov
pop
adcb
in
aaa
cmp
and
int3
fwait
nop
ret
jae
sbb
ficoml
inc
sbb
insl
loope
jmp
icebp
push
in
sbbb
and
add
cwtl
jns
aad
in
popa
fnstenv
fsubl
adcb
lcall
in
cmp
xchg
sti
lcall
mov
nop
ljmp
sub
mov
jns
leave
sbb
inc
push
cmp
mov
sbbb
out
add
addl
dec
jecxz
hlt
call
lcall
or
addr16
nop
add
sub
adc
adc
sub
mov
into
dec
popa
loope
jno
dec
add
lcall
in
mov
std
push
out
mov
gs
lea
adc
xchg
inc
and
cmp
push
fmulp
adc
mov
lea
mov
movsl
pushf
xor
out
clc
pop
pop
or
ja,pt
sbb
cli
add
fwait
arpl
add
adcb
mov
xor
xor
ret
lcall
pop
jnp
ljmp
enter
xchg
nop
push
push
cmp
fidivl
cwtl
pusha
push
cmp
div
inc
adc
inc
lods
dec
cwtl
xor
adc
mov
js
cmp
dec
mov
mov
mov
movsb
adc
xor
test
jecxz
ret
arpl
cmpsl
or
or
jg
adc
outsl
inc
movsb
je
imul
xchg
aas
add
rorb
pop
enter
cli
aam
fdivrs
jae
mov
aas
mov
stos
scas
xor
xlat
dec
push
loope
ret
in
xor
sti
jge
or
and
iret
sbb
push
xor
ljmp
mov
popf
test
call
xchg
icebp
cmp
rcr
idivl
mov
or
movsl
xchg
mov
sbb
xor
add
ds
fsubr
mov
pop
inc
push
popa
in
insb
daa
pop
and
cmp
mov
loop
inc
fadd
orb
rcll
and
aas
jge
xchg
add
cmpsb
sub
or
and
mov
jle
dec
xchg
dec
repz
cmp
mov
jp
mov
pusha
imul
in
and
sub
lods
mov
les
lea
addr16
cwtl
cmp
push
test
lods
cmp
xchg
mov
mov
lds
cmp
enter
mov
shlb
dec
jle
loopne
jbe
sbb
pop
or
cmpsl
popf
pushf
daa
ret
dec
xor
in
add
jecxz
mov
mov
arpl
lret
xor
pop
xorb
mov
fstps
push
aaa
outsl
cmp
sahf
sbb
sbb
xor
loopne
es
push
sbb
dec
mov
mov
test
and
pop
rol
push
int
xchg
xor
add
daa
cmp
push
icebp
cmp
leave
jae
lret
mov
or
lret
cmp
add
mov
sbb
ds
shll
aas
inc
jp
and
and
jge
lods
sub
mov
faddp
test
jno
pusha
std
xor
pop
push
adc
xchg
shlb
and
ss
fadds
xchg
jno
inc
lods
mov
stos
and
mov
daa
rorb
push
cmpsl
sahf
dec
jb
push
ds
xor
aaa
negb
test
out
jg
mov
pop
shrl
aad
sahf
jo
fdivrs
fcmovnb
cmc
xchg
xor
nop
out
ds
cmpsl
adc
push
push
jg
dec
sbb
ljmp
addr16
gs
or
pop
jmp
inc
mov
out
xor
es
jne
or
sub
xor
aaa
imul
nop
mov
pop
popa
sbb
and
mov
out
xchg
dec
cmc
scas
xchg
outsb
movsl
stos
xchg
dec
lea
mov
pop
pop
stc
fiaddl
add
mov
scas
cwtl
inc
aam
adc
sbb
sub
scas
js
cmp
jge
and
sub
fdivrl
push
ficompl
and
sub
dec
fwait
das
and
lods
push
jecxz
jge
mov
in
adc
ret
cmp
test
movsl
leave
cmp
gs
outsb
movsb
cwtl
test
sbb
cmp
sub
clc
fstpl
ret
in
sti
sahf
adc
xchg
insb
pusha
test
or
movl
rcrb
lock
mov
aad
sub
dec
scas
mov
pop
push
sub
cmpsb
cld
and
insb
stos
outsl
inc
sub
mov
xorl
push
xchg
repz
push
out
cmpsl
lret
mov
mov
cs
sarl
into
jbe
out
xchg
out
insb
inc
cltd
lahf
aad
xchg
outsl
inc
stos
jle
pop
cli
sbb
ds
cltd
jns
cmp
ret
push
and
sub
movsl
and
jg
and
das
dec
imul
xchg
fs
pop
cmp
lods
pop
adc
push
pop
push
icebp
xchg
shrb
fwait
pop
les
jg
sub
and
outsl
jb
lods
fs
sarl
dec
fwait
sub
les
push
divb
fistpll
rcll
add
popa
cmp
xor
inc
sbb
mov
fisttps
cmp
mov
sbb
popa
stos
scas
dec
mov
ss
mov
loopne
inc
mov
jecxz
sbb
inc
leave
inc
in
sub
stos
add
std
loop
push
daa
dec
daa
jg
and
cwtl
fmulp
sub
lret
xchg
fwait
jnp
loope
push
sub
enter
pop
xor
scas
loopne
pop
and
or
lcall
or
mov
cwtl
setge
dec
mov
adc
cmpsl
mov
inc
sub
lret
cmp
mov
rclb
and
sub
pop
sbb
mov
push
repnz
jb
imul
add
iret
std
dec
ret
jge
aaa
daa
ret
lods
sbb
in
cmpsl
jbe
les
inc
pop
scas
or
mov
stc
lods
sbbl
dec
mov
gs
mov
dec
andb
xlat
mov
dec
stc
scas
or
out
je
xchg
addr16
push
les
inc
lret
xor
adc
mov
pop
aam
inc
filds
das
add
inc
cmpsl
xlat
nop
adc
lods
sub
movsb
ljmp
mov
lret
xor
aas
add
rorl
fiaddl
cld
cwtl
leave
mov
jae
cmpl
mov
mov
pop
xchg
mov
mov
push
je
pop
cmp
sub
ret
sbb
out
add
out
inc
sarl
cmp
mov
cltd
popf
sti
fwait
lahf
fldcw
jle
or
fcomp
pop
mov
mov
shlb
repnz
and
mov
lret
sbbl
imul
xchg
insl
dec
push
int3
and
cmp
mov
jecxz
and
adc
aaa
je
lods
fidivrs
jbe
jmp
push
xchg
fsts
mov
insl
dec
inc
pop
rcr
std
div
mov
or
or
xorb
imul
cltd
loopne
mull
icebp
push
fistps
hlt
mov
mov
insl
cmovno
mov
ficoms
adc
int
dec
add
outsl
and
jne
xchg
or
cwtl
movl
lods
js
push
adc
adc
lret
decb
fisubrl
roll
dec
pop
jne
xlat
sub
nop
clc
inc
and
mov
or
jns
push
sub
jnp
push
test
add
inc
jmp
inc
mov
pop
cmp
sahf
and
add
jne
jns
and
movsb
test
xchg
inc
mov
out
ror
jle
jb
mov
jno
jg
cmp
test
pop
gs
dec
dec
pop
mov
ret
fwait
mov
cmp
mov
push
int
mov
mov
or
ljmp
out
add
sub
pop
mov
xor
mov
jbe
mov
mov
fcomp
push
mov
and
lods
jge
sbb
test
dec
inc
in
aaa
stos
out
push
test
ja
push
or
call
and
or
xchg
js
add
sub
pop
sbbb
jg
in
flds
dec
sub
push
pop
xlat
test
jb
int
xchg
xor
sarb
cltd
test
gs
pop
push
dec
es
dec
fdiv
and
adc
xchg
jo
mov
cmp
out
mov
in
or
mov
stos
sbb
mov
js
incb
ss
mov
in
in
xchg
push
lock
shll
daa
push
push
mov
sub
rorb
es
icebp
test
out
in
mov
ss
addr16
cld
pop
imul
lret
sbb
insl
pop
fsubr
inc
hlt
scas
pop
imul
mov
or
lret
imul
inc
mov
and
xor
addb
jbe
jmp
mov
in
and
jbe
add
lock
rclb
sub
mov
lea
in
out
stc
nop
stos
xor
lret
lcall
bound
ja
or
sbb
push
in
adc
dec
cmp
aad
sub
mov
xorl
mov
jno
lock
xlat
push
sub
inc
jg
and
sub
mov
fisubl
inc
sbb
xor
xlat
lcall
lock
push
shl
dec
dec
and
decl
xor
mov
mov
in
push
ja
lds
and
jnp
sub
adc
push
mov
or
mov
sti
stos
or
mov
loope
jbe
imul
in
insb
lock
nop
dec
mov
out
mov
pop
pop
leave
xor
repnz
mov
cmp
addl
pop
jp
cmpsb
aad
xlat
push
jnp
movsb
aaa
mov
mov
jl
and
push
std
jmp
or
dec
mov
mov
in
test
clc
rcr
fcoms
and
push
and
jge
in
push
or
stc
std
sub
jbe
stc
add
subl
xchg
shl
int
jne
aaa
add
outsb
sarl
sarb
xor
hlt
xor
xchg
push
cmpsl
test
mov
movsl
jmp
bound
sub
xchg
outsb
add
fiaddl
adc
or
pop
clc
scas
jp
out
sub
fistpll
pop
adc
jle
inc
mov
or
cltd
out
fdivr
inc
ss
jle
lods
mov
scas
adc
xor
sub
pop
in
mov
mov
pop
mov
jecxz
push
jno
jae
and
sbb
cld
jne
lcall
jmp
rclb
int3
jb
addl
adc
test
in
gs
sti
xor
cmp
rclb
inc
jge
adc
movsl
les
fdivp
loopne
lret
movb
out
inc
dec
xor
push
inc
bound
jbe
add
inc
jmp
test
mov
enter
add
hlt
lahf
je
aas
xor
xchg
loopne
in
sub
mov
jmp
outsb
inc
sbb
je
fs
xor
xchg
sbb
aad
cmp
in
push
pusha
cld
mov
sub
int
sahf
fbld
into
sahf
add
rcll
ja
ja
pop
addb
ret
mov
pop
test
mov
sahf
iret
testl
ss
or
lea
cmc
adc
mov
out
rcl
cmpsl
loopne
mov
push
test
subl
or
cmp
jb
mov
adc
fsubs
adc
or
jbe
roll
mov
movl
loop
jbe
cmc
cmp
and
push
inc
test
ret
xor
push
imul
test
imul
imul
inc
es
into
or
test
add
gs
cld
js,pn
je
mov
mov
sub
sub
lret
bound
push
inc
push
mov
jmp
pop
jns
notl
add
and
or
pop
fadd
pop
xlat
jne
and
mov
jne
out
nop
jmp
jno
pop
sbb
jo
cli
sbb
sub
in
inc
cmp
mov
sub
fisttps
inc
mov
mov
js
stc
addl
sub
cmp
push
adcb
jb
dec
jb
inc
sbb
popf
jle
ret
rolb
hlt
sbb
xchg
mov
mov
adc
out
add
fdivl
or
adc
lock
add
in
mov
add
mov
push
add
push
lods
mov
in
int3
adc
sbb
push
sub
mov
pop
fcmovnbe
testl
inc
enter
pop
fidivl
lods
sar
xor
cmpsb
pop
mov
mov
cmp
or
jno
sub
aam
fimull
pop
mul
xchg
rolb
jle
mov
jmp
sub
aam
and
insl
push
insl
in
xchg
jns
mov
rcll
pop
mov
cmp
and
add
sub
jp
dec
and
insb
push
pop
out
repnz
lcall
mov
loop
jp
clc
sahf
inc
inc
and
mov
nop
pop
roll
add
in
das
pop
inc
int3
xor
adc
cwtl
and
int3
dec
mov
or
je
xlat
xor
lods
cmpsb
mov
dec
push
gs
inc
xchg
mov
xchg
jmp
mov
or
in
cmp
mov
cmc
lock
iret
xor
loop
pop
mov
inc
add
fsubl
lock
loope
sbb
sub
adc
fildl
push
xor
cmp
mov
int
pop
xor
fcomps
or
out
mov
jns
inc
lds
jecxz
int3
dec
daa
cwtl
pop
push
inc
cmp
sbb
cmpsl
sbb
arpl
cmp
push
aam
imul
pop
fisubl
jae
pop
add
or
adc
divl
pop
jns
jbe
insb
mov
outsl
and
or
addr16
mov
aas
sub
movsl
call
ds
xchg
pop
dec
push
inc
scas
popf
xchg
inc
fdiv
leave
adc
sbb
xchg
scas
fstpl
sbb
mov
add
fisubs
pop
int3
pop
and
pop
imul
enter
mov
hlt
add
mov
repz
adc
cli
mov
lret
out
outsl
xor
push
push
fwait
jnp
jnp
movsb
test
test
push
call
mov
fdivrs
xor
call
aad
xor
int3
data16
inc
les
push
dec
pop
scas
cmp
inc
cs
pusha
pop
adc
sbb
inc
repnz
inc
sbb
mov
or
out
les
ret
fidivrl
icebp
ret
and
int3
lahf
jmp
popf
pop
push
xchg
test
add
into
inc
mov
stos
dec
subb
mov
push
push
cmp
repz
dec
dec
lahf
mov
jno
imul
mov
das
sbb
or
sarb
jg
cld
push
inc
and
inc
and
lret
or
mov
pop
popa
or
js
aad
lods
xchg
cmp
sub
shll
lret
jle
sbb
mov
insb
das
xor
test
xchg
cmp
pop
ror
inc
scas
inc
arpl
cmc
cmp
inc
std
cmp
movsb
rcl
dec
xchg
mov
addr16
aaa
shll
test
lahf
filds
xor
in
push
fwait
int3
mov
and
push
xchg
cmp
out
dec
lock
adc
sbb
and
out
lahf
xchg
push
fs
loope
outsl
pusha
test
jno
and
add
jg
push
sbb
iret
clc
iret
mov
jb
testl
popf
subl
cmp
xchg
popf
out
xchg
and
or
imul
push
lcall
out
aam
jle
sti
in
add
cmc
iret
xchg
mov
jp
mov
fwait
dec
push
int
cwtl
dec
mov
push
stos
adc
sub
sbb
iret
cmpsb
orb
sbb
inc
test
roll
std
jno
nop
cli
jl
std
movsb
in
jle
imul
pop
fdivp
adc
cmp
push
in
hlt
add
addr16
lds
mov
inc
arpl
ficoml
cld
jbe
fistl
mov
or
iret
or
pop
out
or
test
test
sahf
andl
out
inc
cs
mov
ja
fisubrs
xchg
dec
hlt
cwtl
push
filds
inc
fnstsw
and
xchg
rcll
je
inc
pop
pop
std
movsl
dec
xlat
push
lret
lods
cmc
shl
scas
add
pop
fistpl
int
je
mov
xchg
push
push
xorb
test
or
push
cmpsb
pop
fcmove
fidivs
mov
lods
pop
fwait
cmp
jns
das
ret
xchg
lods
mov
sbb
orb
cmc
cmc
test
mov
out
mov
mov
adc
adc
sbb
sub
mov
inc
inc
andb
push
inc
sbb
clc
pop
dec
leave
xchg
popf
mov
pop
scas
in
add
out
xchg
fwait
cmp
and
add
pop
fsubp
fisttpl
lret
and
mov
lahf
test
in
stc
xor
bound
mov
addr16
pushf
scas
pushf
xchg
icebp
dec
adc
push
mov
mov
mov
adc
pop
aad
sbbb
push
fdivl
outsb
mov
loopne
test
popa
sahf
stc
sbb
fisubrs
dec
jnp
cmpb
in
test
ja
and
or
pushf
inc
mov
loop
mov
inc
in
out
stc
mov
movsb
insl
pop
jl
jne
popf
rolb
jmp
aaa
sarl
mov
cmp
out
pop
hlt
jle
sub
jl
sbbb
add
jne
push
sub
sub
loope
inc
jle
test
mov
cmp
sarl
mov
sbb
test
mov
mov
mov
push
jnp
cld
mov
mov
xchg
imul
add
imul
dec
loope
popa
cwtl
push
sbb
sub
sbb
xor
mov
std
dec
pushf
push
lcall
xor
mov
pushf
dec
iret
movsl
push
mov
inc
adc
sub
or
inc
sub
aaa
jbe
push
movsb
pushl
lahf
ljmp
cmpsb
sub
outsw
sbb
xor
fmull
fprem1
setg
cli
and
pop
daa
and
pop
dec
rolb
imul
sbb
das
and
repnz
mov
stc
pusha
mov
sub
lds
jnp
jg
cmc
mov
dec
daa
ficompl
in
mov
or
imulb
jl
out
mov
and
pop
inc
sbb
or
cs
fwait
and
push
inc
push
pop
clc
das
adc
cmpsl
mov
or
or
sub
mov
adc
icebp
and
mov
xchg
mov
sub
pushf
stos
xchg
addb
jge
mov
test
push
dec
jge
es
insb
add
cmp
xchg
enter
hlt
cmpsb
andl
loopne
cmp
rorl
mov
sub
jp
adc
iret
or
and
add
fsubs
jae
bound
cmp
enter
icebp
imul
lea
xor
dec
sub
xor
and
sar
rcll
pusha
push
dec
or
std
ret
inc
xchg
sbb
imul
xchg
sub
jp
dec
add
iret
std
cwtl
inc
mov
push
mov
adcl
jl
pop
imull
add
addr16
nop
push
lods
iret
xor
ss
cld
adc
cmc
cmp
push
mov
mov
dec
jecxz
cltd
mov
imul
jb,pt
sbb
aas
sarl
sub
test
mov
and
es
and
movsb
mov
mov
sub
mov
pop
gs
lcall
stc
sarl
and
frstor
sub
cmp
adc
call
mov
sub
xor
pushf
push
bound
shlb
mov
int
xor
arpl
fs
mov
mov
dec
dec
sarl
loop
adc
cld
adc
loope
or
or
jl
mov
shrb
lea
xor
push
mov
sbb
aaa
xchg
dec
popf
aaa
pop
dec
lret
cltd
mov
pop
or
popf
or
shll
jbe
fsubrl
xchg
cmp
bound
inc
dec
popa
leave
imul
push
pusha
push
out
pop
xor
push
and
repnz
lods
aad
inc
iret
popa
pusha
xchg
out
out
imul
out
mov
test
mov
xchg
xchg
call
hlt
lahf
pop
mov
cmc
sbb
adc
sahf
sahf
inc
mov
imul
mov
adc
jecxz
je
adc
test
sbb
pushf
aaa
inc
cmpsl
adc
ds
dec
pushf
addr16
adc
jb
sbb
cltd
daa
jge
cmpsb
movsb
pop
jp
sbb
add
mov
or
cmp
cld
and
cmp
lds
push
aad
std
xor
insb
iret
and
sbb
and
lahf
and
test
aam
push
jge
mov
out
push
sbb
push
jge
cmpb
out
mov
idivb
lret
mov
and
dec
xchg
jb
xor
mov
inc
out
bound
cmp
mov
pusha
imul
sub
stos
inc
dec
mov
daa
jg
call
mov
in
aas
cli
enter
std
int
test
fsts
mov
pushf
add
mov
sbb
xchg
mov
cmp
sbb
mov
pop
stos
inc
cmpsl
push
loop
movsl
gs
xlat
js
pop
push
dec
dec
and
lods
insb
in
lret
mov
repz
adc
adc
pusha
jbe
aas
push
cmp
pop
and
cmp
xor
and
add
mov
bound
or
stc
clc
or
fstps
pop
xchg
sub
out
movsl
adc
push
loop
dec
les
adc
push
dec
add
cmp
data16
pop
jecxz
shll
rcrl
popf
movsb
pop
aas
adc
pop
dec
and
mov
jno
ret
lret
mov
xchg
mov
in
mov
daa
jb
dec
daa
nop
jns
lcall
dec
jge
in
jmp
ljmp
mull
adc
and
pushf
mov
mov
pop
aam
loop
jge
flds
cmp
into
inc
test
test
xor
xchg
push
mov
mov
cmc
jbe
into
and
sti
mov
stos
inc
loope
mov
xorb
mov
hlt
and
jecxz
mov
stos
mov
lea
jecxz
or
xor
push
pusha
inc
push
movsb
xor
movsl
in
sub
push
xor
sbb
dec
imul
loop
jno
iret
or
out
jno
cltd
dec
das
int
push
pop
lods
xchg
mov
sbbl
or
xchg
dec
mov
xchg
add
iret
cltd
sti
xchg
addb
xchg
inc
insl
adc
rcll
sbb
dec
arpl
adc
daa
scas
xlat
mov
jb
xor
and
xor
test
sbb
ljmp
out
mov
pop
subl
stos
and
push
sub
popf
mov
inc
int3
dec
xchg
mov
scas
add
rcrl
rclb
daa
mov
dec
mov
or
sub
out
iret
sub
shll
push
mov
aad
adc
jae
jno
loope
and
mov
nop
lcall
mov
cld
orb
inc
mov
call
xchg
jmp
mov
sub
into
push
rcrl
movsl
cmp
jb
sbb
scas
pop
loope
pop
sahf
push
insb
dec
into
adc
rolb
pop
adc
xchg
int
out
imul
das
inc
mov
out
cmp
icebp
test
cmp
fimull
adc
mov
cwtl
cmp
jg
mov
mov
dec
or
and
leave
pop
std
mov
mov
lcall
sub
adc
mov
aad
adc
cwtl
in
loop
dec
add
xor
add
fistl
popf
rolb
popa
lahf
mov
cld
imul
push
jnp
and
js
enter
sbb
aas
adc
sbb
and
lcall
fstpl
sbb
fwait
addr16
cwtl
adc
mov
adc
rcrb
inc
adc
push
sahf
ljmp
and
cmp
sbb
xor
jne
mov
inc
pop
xchg
cmp
scas
lret
cmp
adc
pop
inc
sub
mov
loope
cltd
push
clc
dec
adc
mov
sti
pop
push
repnz
outsb
pop
leave
addb
push
jne
rcl
inc
test
cltd
adc
inc
stos
cmpsb
ljmp
xor
jp
mov
pop
js
iret
push
imul
outsl
xlat
out
repz
ret
sub
test
pop
add
mov
inc
pop
pop
adc
push
call
cmp
test
dec
xchg
in
adc
mov
mov
sbb
sahf
fsubrs
mov
fcomps
jp
outsb
and
sub
jno
pop
sbb
and
test
mov
loop
xor
adc
sbb
rcll
xor
or
pop
cmp
inc
test
clc
mov
into
sbb
popa
dec
sub
or
mov
mov
dec
imul
xchg
cmp
test
repz
pop
cmp
movsb
iret
push
aas
push
lcall
xchg
sti
adc
out
adc
shll
ficompl
outsl
mov
mov
in
int3
std
les
jle
jmp
fimull
ja
das
xor
cmc
lcall
fs
sbb
push
popf
clc
mov
jo
ss
sbb
cltd
adc
cld
mov
jno
mov
mov
sbb
dec
fisubrl
je
push
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
subl
movq
mov
sbb
mov
cld
and
xchg
std
jmp
stos
push
fs
rcr
movsl
inc
and
movsb
xchg
leave
imul
sub
cld
or
ljmp
push
add
xlat
scas
ja
xlat
test
mov
ffree
ljmp
mov
push
push
mov
fldcw
leave
popf
pop
test
and
pop
push
inc
fsub
int3
rorb
cmp
in
aam
xor
push
leave
push
push
test
std
enter
pushf
aad
fldcw
inc
mov
jns
in
cmp
loope
mov
jmp
inc
out
fs
jno
push
in
mov
jne
push
mov
test
mov
inc
cmp
cvtpi2ps
orl
jmp
jp
mov
ficoml
test
xlat
jle
dec
roll
pop
sub
fstpt
pusha
jo
mov
push
dec
mov
in
mov
dec
mov
enter
inc
jl
sub
aam
mov
std
insb
jae
icebp
add
or
adc
scas
loope
pop
sbb
insb
push
jae
repnz
mov
and
jp
pop
ret
insl
stos
sub
out
cmc
inc
cmp
fiaddl
push
mov
pop
xor
popf
mov
add
roll
rol
dec
or
stos
mov
ljmp
out
xor
fisubrs
movsb
sarl
and
inc
outsb
iret
and
dec
and
mov
popa
push
mov
push
das
jp
scas
dec
scas
and
daa
inc
ret
mov
jp
mov
cld
cmp
nop
in
shll
sahf
test
test
imul
popf
iret
jne
enter
jne
mov
ficomps
cmp
jbe
jo
xchg
je
test
jae
icebp
in
mov
aas
and
aad
decl
cmp
ret
pop
push
into
hlt
pop
dec
into
in
mov
push
mov
hlt
fcoms
xorl
bound
cmpsl
fwait
sbb
insl
mov
loopne
into
inc
inc
ret
pop
out
in
movsl
adc
sbb
aad
mov
jno
les
pop
pop
test
mov
push
push
test
cli
adc
and
jmp
fisttpll
mov
mul
adc
cltd
lock
xor
nop
mov
shlb
pop
or
xlat
js
loop
pop
sbbb
cwtl
imul
negb
jg
les
data16
dec
in
fdiv
hlt
outsb
push
push
xor
xchg
xchg
xchg
mov
divb
subb
fisubl
mov
and
loopne
sarb
sub
fisubrl
int3
cld
bound
lea
lods
mov
add
adc
or
int
out
sbb
xchg
mov
out
mov
xchg
fsts
and
leave
sbb
or
pop
xor
mov
add
adc
xchg
and
adcl
daa
push
fsubl
mov
imul
mov
cmpsb
mov
xchg
push
xchg
lds
mov
mov
rclb
lcall
call
fmuls
and
pop
dec
out
loope
pusha
mov
out
push
jo
movsb
rcrl
fstl
push
stc
adc
mov
sti
es
pop
and
cmp
jns
test
pop
jl
pop
adc
dec
jl,pn
mov
sbb
insb
clc
outsl
pop
fcomps
or
xchg
aad
or
pop
insl
in
pop
inc
cmp
lahf
xchg
jne
mov
frstor
mov
xchg
xchg
stos
mov
push
lock
ret
add
sbb
stos
sti
mov
das
cwtl
jbe
lret
rolb
mov
fidivrl
loop
loopne
lahf
push
jnp
in
sbb
mov
mov
imulb
mov
lcall
or
add
rolb
add
lods
xor
scas
mov
pop
mov
cmp
mov
sbb
cmp
fldcw
je
push
adc
add
outsb
sub
pop
cmp
sub
adc
jge
popf
xchg
xor
mov
testl
into
mov
loop
andb
push
dec
inc
in
cmp
push
dec
mov
mov
repnz
lds
movsl
pop
lock
pushf
mov
xor
mov
or
sbb
lea
cltd
imul
sbb
lahf
dec
fcoms
cmpsb
sbb
xchg
xchg
sbb
dec
mov
fsubrp
lods
loope
mov
inc
push
adc
jp
jecxz
sbb
loopne
jnp
and
mov
sar
pop
pop
cwtl
ja
jns
sahf
adc
jg
lret
ljmp
dec
xchg
and
out
adc
fstp
cmp
fwait
xor
ja
call
fdivr
fidivrl
stos
adc
mov
inc
imul
jno
mov
icebp
in
pop
fsubrs
lds
cmp
lods
aaa
aad
into
sub
push
xchg
popf
mov
push
stc
bound
in
push
adc
inc
fadd
push
inc
and
lahf
ror
mov
mov
cmp
dec
mov
jl
push
jne
pop
pop
sbb
sbb
test
aad
xchg
leave
mov
push
cmpsb
sti
in
nop
mov
bound
insl
jo
aad
or
stos
or
daa
push
mov
adc
sub
xchg
rolb
add
jecxz
fdivs
cmp
xchg
push
mov
jbe
mov
ljmp
aaa
lea
lret
ja
add
ret
imul
insb
jge
mov
ja
push
pusha
xchg
test
jl
xorl
add
imul
sub
jecxz
cmp
iret
xchg
sbb
mov
fs
sar
add
push
jmp
repz
bound
stos
xchg
mov
fldenv
addr16
mov
mov
dec
pop
rorl
push
xor
nop
stos
push
repnz
popa
xchg
jns
xor
mov
adc
mov
cmp
adc
xchg
fldcw
xsavec
insl
add
movsb
aaa
in
add
les
or
and
pop
fucomi
je
pop
jae
xor
mov
lea
jp
push
jg
repz
cwtl
js
xor
in
imul
loope
scas
mov
mov
fnstsw
mov
hlt
dec
mov
out
enter
or
inc
mov
or
jp
in
jbe
popf
xchg
int3
pushf
sbb
pop
pop
xor
imul
ds
push
or
push
mov
cmp
pop
cmp
pop
dec
imul
sub
mov
sbb
jge
in
outsl
jg
adc
xor
lea
dec
xchg
pop
mov
sbb
mov
pop
out
gs
push
dec
stos
fiaddl
dec
ss
push
bound
fidivl
or
inc
and
loopne
push
arpl
xor
ret
xor
jle
jge
out
insl
sahf
dec
rolb
push
outsl
lods
mov
iret
shl
pop
cmp
pop
or
mov
inc
push
fadds
enter
push
movsl
ds
push
mov
or
dec
dec
cmp
add
scas
cmp
rcll
movsl
int3
cmc
pop
test
insl
adc
ret
inc
mull
stos
movsb
and
xchg
sbbb
jnp
mov
mov
pop
adc
pop
aad
pop
and
adc
sbb
movsb
mov
pop
xchg
sahf
xchg
jns
daa
xchg
mov
jno
andb
mov
jl
sahf
xchg
loop
xchg
mov
inc
or
add
and
mov
into
xorl
cmp
xor
pop
jg
mov
adc
pop
cs
push
adc
dec
cmp
pop
hlt
popf
mov
mov
jbe
sbb
mov
int
ret
adc
dec
jbe
pushf
adc
mov
test
popa
mov
mov
sbb
test
and
pop
sbb
inc
cwtl
pop
pop
sbb
cmpsb
fcoml
mov
shrl
or
loopne
mov
aaa
in
in
pop
stos
mov
jbe
inc
jo
sbb
mov
jge
sarb
pop
jne
jne
jle
cmp
xor
pusha
mov
xchg
adc
fs
push
jo
sbb
xor
cmc
lret
dec
inc
movsl
iret
mov
inc
das
lock
test
xor
mov
lahf
push
cmpsl
sbb
push
mov
cs
lds
pop
icebp
push
xor
addb
or
lcall
js
mov
mov
dec
divb
jmp
sub
lret
add
mov
xchg
cli
aaa
jl
sub
cmpsb
popw
dec
mov
jmp
mov
ja
hlt
sub
xchg
dec
jo
shrl
mov
ljmp
and
and
pushf
push
fildl
iret
test
jp
push
mov
imul
jl
outsb
mov
mov
pop
lea
jns
in
nop
notb
inc
pop
sub
subl
js,pn
and
adc
sbb
xor
movsl
lret
fsubs
lret
out
jnp
inc
mov
xchg
std
jl
and
dec
push
mov
mov
bound
mov
mov
cmpsl
cmpsl
adc
xchg
xchg
adcl
xchg
out
xor
dec
xor
ja
jg
outsl
dec
daa
cli
jecxz
sbb
jnp
adc
mov
and
nop
gs
jb
push
call
sub
ss
inc
jmp
rcr
sbb
hlt
int3
jno
cmp
xor
jl
pop
dec
cwtl
adc
fistpll
cmpsl
mov
in
ja
push
mov
pop
dec
fisubrs
dec
inc
test
das
sub
cmpl
cs
adc
and
out
pushf
mov
cmc
adc
test
pop
imul
pop
ret
sahf
add
sbb
pop
mov
and
push
adc
popf
hlt
roll
push
cmp
dec
out
dec
jno
fadds
xor
fwait
push
aaa
jne
xor
xor
iret
push
pop
loope
fs
add
adc
cmpsl
popf
cmp
fidivl
subb
lcallw
cmp
hlt
inc
bound
dec
pop
inc
lret
pop
adc
adcl
loop
out
xchg
push
nop
push
adc
xchg
dec
pop
jecxz
and
outsl
mov
jne
arpl
pop
lahf
pop
lahf
rclb
push
mov
fdivrp
mov
sbb
popa
pop
lcall
xor
iret
sbb
dec
int
addr16
int3
imul
daa
and
ret
cmpsb
cmc
in
sbb
rorb
mov
jp
xor
and
loop
mov
and
cmpsb
outsl
dec
xchg
jb
popa
mov
mov
push
adc
test
mov
fsubr
mov
mov
sti
daa
jecxz
inc
or
or
sbb
cmpsl
aas
cld
pop
insl
sbb
dec
nop
push
lods
push
jno
xchg
repz
inc
je
test
jge
pop
icebp
xor
sbb
lds
gs
clc
je
negl
jl
add
lods
sub
hlt
cmp
ret
das
ret
pop
lret
inc
inc
in
sub
push
int3
test
push
cwtl
rorl
pop
mov
mov
sarl
xchg
xor
push
xor
mov
lock
in
dec
cmp
jl
stos
and
mov
push
jb
jae
mov
cltd
lds
icebp
idivb
sub
sbb
add
mov
test
notb
cltd
xchg
popf
imul
mov
in
pop
push
xor
jb
jecxz
lahf
rcll
loop,pt
in
sub
imul
pop
pop
ficompl
xchg
addl
inc
subb
mov
pop
divb
cmpb
stos
pop
hlt
pop
and
into
dec
cmp
insb
mov
jns
lcall
enter
call
fwait
jg
pushf
cmp
lea
dec
mov
enter
fwait
jae
inc
mov
xchg
movsb
mov
push
stos
inc
jle
jecxz
rolb
sbb
xor
das
insl
sarb
ss
in
data16
mov
mov
insl
mov
and
dec
add
jge
pusha
pop
inc
lret
call
hlt
push
rorb
pop
repz
dec
shll
leave
leave
rolb
mov
xor
xchg
mov
fistps
mov
dec
clc
mov
loope
mov
jg
iret
pop
lahf
clc
imul
scas
mov
fucomp
cltd
std
inc
repz
mov
aad
adc
aam
push
in
test
push
sbb
into
and
les
into
jae
xchg
cmp
aam
in
and
pop
lret
xor
das
int3
push
xor
dec
push
sub
adc
and
dec
sbb
loopne
fwait
or
insl
cmpsb
je
inc
ljmp
cwtl
or
fldenv
jo
shrl
mov
sub
mov
into
xor
test
std
push
and
xchg
cmpsl
cmp
adc
pushf
xchg
fcmovnu
sbb
jbe
mov
dec
mov
outsl
lds
mov
fs
in
xor
sarb
push
and
adc
xchg
insb
lods
cmpsl
inc
imul
mov
popf
push
in
roll
sub
push
mov
jmp
out
icebp
cs
ficoms
or
mov
cltd
stc
dec
outsl
and
mov
test
push
aad
dec
cwtl
or
mov
iret
mov
or
jne
inc
pusha
or
xchg
fsts
sbb
pop
or
mov
icebp
sub
lcall
xor
out
enter
pop
sub
mov
rorb
aad
bound
pop
sbb
mov
add
mov
inc
addr16
in
sbb
xor
push
xor
pop
dec
xchg
repz
jmp
ljmp
sub
loope
push
jae
xlat
mov
jb
or
stos
cs
push
pop
inc
ficomps
cmpsl
push
push
sub
and
ss
les
push
jmp
mov
mov
push
jle
inc
cmp
pop
pop
dec
movsb
mov
jp
insl
imul
jmp
jno
imulb
iret
insb
ja
fdivrs
cltd
sbb
cmp
shr
push
jl
sub
mov
leave
inc
lcall
scas
cmc
inc
in
jp
test
call
dec
hlt
push
cld
xor
shrl
push
fsubrl
cmp
jnp
sbb
jge
add
lcall
jl
mov
movb
cwtl
cwtl
xchg
add
enter
jne
add
add
popf
dec
dec
cmp
pop
in
add
xchg
ror
inc
sbb
jae
ljmp
subl
and
dec
xchg
cs
leave
mov
hlt
xchg
mov
mov
xchg
sbb
or
xchg
aaa
xchg
add
call
ret
bound
test
push
mov
xor
enter
xchg
and
and
xchg
mov
pushl
cs
jne
push
jmp
sbb
ret
mov
pop
loope
loope
cmp
shlb
rcl
push
or
inc
lods
stc
outsl
xchg
loopne
inc
add
scas
push
out
jp
push
dec
or
inc
lsl
push
xor
sbb
sahf
mov
xchg
fdiv
add
mov
dec
sarb
aaa
xor
add
cmpsl
adc
nop
aam
pop
lock
insb
adc
inc
or
test
jge
sbb
cmpsl
mov
or
iret
mov
nop
jge
mov
int
loope
mov
popa
fdivl
and
scas
push
fiadds
fwait
shlb
lcall
stos
push
xchg
clc
repz
leave
mov
sbb
mov
popf
lods
push
push
mov
scas
ss
mov
cltd
dec
lret
cli
daa
insl
andb
add
cs
jno
or
mov
aaa
out
push
jmp
dec
pushf
div
lds
lahf
test
in
fisttps
fidivs
sub
pop
and
lock
arpl
fimull
adc
roll
jb
inc
mov
movsl
inc
shlw
daa
jns
rcrl
push
and
hlt
fadds
sbb
ja
add
ds
adc
sub
scas
or
std
std
out
mov
fucom
dec
scas
dec
and
gs
push
stc
sub
jns
test
pxor
std
fwait
dec
test
jae
popa
mov
lahf
adc
out
call
cmp
mov
sub
xchg
repnz
inc
js
xor
xchg
mov
jns
mov
fcompl
add
or
popa
jo
mov
lods
or
mov
push
or
inc
pop
and
cmpsb
shrl
push
sbb
mov
leave
ficomps
jle
rolb
pushl
xor
icebp
out
pshufw
bound
jmp
inc
sub
jp
nop
cmp
mov
fstpl
sub
sub
fadd
mov
pop
add
add
cli
jle
adc
xor
out
and
mov
mov
outsl
test
mov
test
xor
iret
arpl
dec
mov
inc
add
inc
xor
pop
ret
pop
mov
sbb
jp
push
pusha
mov
cmp
mov
mov
mov
mov
cmp
mov
cli
pushf
or
mov
cwtl
stos
in
bound
jb
shrb
mov
loope
dec
or
pop
std
inc
fcoml
das
xchg
aas
cmp
add
jo
push
mov
lock
sbb
gs
incl
ds
pop
aad
xor
cmp
in
push
push
or
popa
push
rcll
mov
add
dec
jbe
jge
orb
jg
into
out
orb
jg
fiadds
pop
sbbl
in
test
mov
lea
push
sub
jp
icebp
xor
popf
subb
cmp
into
clc
sub
ds
test
mov
cs
sub
mov
push
js
xchg
jge
and
mov
pop
sbb
outsl
stc
stc
shll
jg
addr16
pusha
stc
cmpsl
mov
cmpsl
mov
push
ja
cmp
jno
or
aam
int3
dec
mov
shr
adc
cmpsb
jb
xor
fimull
sbb
data16
shl
fildl
pop
inc
movsl
fbstp
xor
mov
rcrb
jl
rorb
cmc
lahf
jbe
out
movsl
shll
pop
insl
jge
test
aas
xor
jb
lods
dec
imul
pop
pop
inc
xchg
stos
xchg
lahf
mov
pop
jmp
out
and
nop
push
sbb
std
aas
insl
test
mov
jno
add
clc
add
inc
sub
mov
xchg
orl
jo
fisttps
xor
jae
jo
push
lcall
mov
jno
ja
sbb
xor
jle
xchg
mov
ss
outsl
call
ja
jbe
mov
xchg
stos
outsb
inc
sbbl
sbb
in
lods
mov
js
cs
xor
shlb
popa
push
mov
insl
pop
outsb
decl
lods
repz
push
std
jg
xchg
cwtl
stos
push
mov
mov
or
inc
or
sbbl
aaa
sbb
cmp
lods
ss
loop
lahf
push
jno
test
pop
cmp
ss
xchg
lret
or
and
mov
lea
aaa
cmp
aad
dec
jle
addb
mov
mov
push
jnp
out
sub
push
xor
jnp
gs
bound
push
jno
or
adc
mov
mov
call
push
cwtl
imul
ret
mov
add
loop
stc
mov
mov
stos
jmp
iret
push
jmp
jns
nop
jecxz
jmp
bswap
xchg
ss
insb
or
jae
cmp
orl
push
inc
jle
xor
outsb
lods
push
sti
xchg
sbb
mov
cmpb
test
jmp
lds
imul
jnp
sbb
clc
cmp
dec
sub
xchg
mov
sub
imul
pop
push
push
fmuls
lods
loop
sahf
out
cmp
or
call
out
rcrb
cmpsb
lret
add
mov
das
repnz
dec
inc
add
mov
xchg
jmp
add
and
sub
out
dec
fisubl
roll
add
imulb
sbb
movsb
div
inc
jmp
test
jge
add
mov
adc
xor
leave
aaa
fisttps
sti
aam
jle
in
add
dec
inc
movsb
cmc
shl
out
mov
jmp
jne
andb
cmpsl
dec
ja
fidivs
std
add
inc
push
mov
repz
pop
xchg
push
mov
sub
dec
sahf
jo
cld
lret
orb
jmp
adc
inc
scas
icebp
shll
bound
lods
or
incl
insb
pop
stos
aaa
mov
mov
fildll
mov
add
push
push
test
inc
mov
in
rorb
int3
inc
ret
imull
xchg
jnp
mov
inc
pusha
jmp
es
xchg
ret
outsl
inc
jbe
push
lods
mov
cmpsl
loope
out
mov
inc
xor
mov
test
arpl
lret
popf
into
rolb
ja
fmul
sub
sub
fcoml
mov
rorb
push
fstl
in
out
inc
adc
enter
shlb
je
lcall
add
push
jb
hlt
loopne
pop
hlt
mov
sbb
scas
dec
jne
xchg
movsb
movsb
jns
das
jo
nop
pop
popf
inc
shrb
push
push
mov
mov
test
push
jle
mov
or
inc
rol
lret
inc
pop
jbe
push
add
aaa
pop
or
ds
dec
pop
hlt
push
imul
jle
mov
mov
sbb
mov
cmp
enter
xchg
aam
dec
jle
push
popa
aad
xchg
jle
push
shll
pop
enter
mov
stos
mov
test
loop
xchg
jns
sbb
xorl
mov
mov
dec
nop
xchg
mov
ret
mov
xlat
ss
pushf
pop
xor
fldt
xchg
mov
adc
add
pop
out
orb
bound
negb
mov
aam
cltd
insl
xlat
jmp
mov
addr16
adc
fwait
shrl
mov
mov
dec
sbb
push
lods
xchg
imul
push
jns
lods
cmp
ficoml
sub
and
sarl
fdivrs
sub
jno
les
sub
and
mov
rorb
xchg
test
xor
arpl
stos
lds
rorl
mov
ret
in
add
lock
shl
adc
out
and
jle
imul
jbe
sar
and
sbb
pop
mov
out
hlt
and
jns
cmp
movsb
mov
add
sarl
mov
repz
lcall
testb
xchg
pop
adc
icebp
pop
icebp
cmp
fwait
and
rcrl
pop
in
pusha
sub
or
int
mov
push
add
push
mov
mov
in
jg
ljmp
xor
cmp
or
loopne
aas
icebp
cmc
into
je
pusha
mov
loop
jp
loopne
pop
out
mov
aam
and
xor
fiadds
repz
test
sbb
imul
jns
leave
test
test
jo
lret
dec
cli
test
stos
dec
fnsave
pushl
nop
fmul
sbb
mov
inc
add
jne
push
adc
cmp
mov
pop
clc
loopne
jecxz
and
or
push
movd
add
sub
leave
sbb
dec
adc
fnstsw
jbe
pushf
mov
lret
jnp
das
in
or
inc
xchg
mov
stos
jnp
lea
sub
dec
outsb
cltd
in
push
loope
inc
out
insl
xor
aam
sbb
xlat
cmpl
dec
push
imul
pop
and
sbb
enter
arpl
fisttpl
dec
aad
inc
jno
adc
loope
sub
les
cs
daa
push
adc
xor
mov
cmc
xchg
es
loopne
aam
aaa
stc
mov
pop
cmp
movsb
xchg
repnz
imul
insb
push
add
cmpsl
shl
ss
aad
sahf
xor
adc
push
enter
out
jnp
dec
insb
xchg
cmpsl
mov
dec
and
into
out
mov
jg
es
mov
lahf
push
int3
sbb
test
or
add
pop
test
xchg
mov
inc
mov
aad
enter
fisttps
cmpsb
lds
mov
or
into
or
xor
out
push
sub
subl
rol
adc
sbb
add
popf
ret
adc
sub
pusha
je
sbb
rorl
stc
rcll
push
fldt
xor
test
xchg
push
sub
popf
or
scas
cs
mov
adc
lods
fcmovb
lahf
test
inc
jmp
sub
mov
popf
xor
jne
dec
aas
jmp
cmc
mov
pop
fs
out
jle
out
xchg
clc
shrl
dec
fs
pop
jmp
push
pushf
movsb
xor
movsl
loope
sub
xorl
pop
ds
xor
pop
mov
pop
dec
ja
mov
sti
mov
pop
and
ja
rcl
rcll
jl
out
rcrb
mov
enter
xchg
and
xlat
stos
fcomps
stos
mov
jb
dec
dec
mov
popf
daa
inc
and
mov
push
fcmovnu
nop
jp
mov
das
pop
pop
inc
pushf
mov
dec
int
inc
fwait
insl
jo
shl
icebp
add
sub
sti
jmp
xchg
push
pop
xor
dec
mov
inc
lods
mov
mov
icebp
lea
push
dec
cmp
push
push
outsb
jmp
add
jbe
jge
jns
push
cs
movsb
pop
test
mov
xlat
nop
sub
scas
sub
push
int
int3
sbb
mov
sbb
pushf
dec
push
daa
orb
je
in
fidivs
mov
jl
clc
pop
fcmovnu
shrb
push
add
mov
or
pop
ljmp
xchg
xor
jnp
je
xchg
hlt
imul
or
inc
test
arpl
mov
int
mov
push
or
out
arpl
test
cmpsb
cmp
mov
dec
and
sbb
test
pop
je
push
jb
pusha
mov
movsl
cmp
push
mov
inc
mov
mov
in
cs
inc
arpl
insl
mov
push
je
mov
popw
out
mov
mov
push
jo
les
dec
sub
adc
mov
mov
mov
inc
fldcw
push
dec
cmpsl
jno
movsl
or
ss
push
and
call
push
push
test
test
add
int
ret
in
sub
pop
xor
xor
subl
dec
aam
or
pop
fldl
jnp
xorb
mov
jp
xor
push
xchg
jne
js
xchg
or
int3
fdivl
and
mov
sbb
xor
std
and
insb
cmp
jne
sub
lcall
ljmp
rolb
or
mov
out
xor
test
movsl
pop
lret
push
dec
push
xor
add
fwait
shll
hlt
ret
mov
movsb
pop
popf
mov
jae
loope
xor
iret
xchg
pop
jb
mov
push
push
inc
test
xchg
push
adc
pop
adc
lds
in
loope
rorl
push
cli
mov
dec
mov
idivw
inc
push
mov
push
arpl
jne
sub
cmp
or
inc
in
xchg
ja
fnstsw
adc
xchg
adc
and
pop
xor
lcall
xchg
push
inc
scas
ljmp
or
iret
inc
mov
sahf
shlb
insl
push
mov
lcall
add
dec
mov
cmp
daa
mov
push
pop
dec
lcall
push
pop
stos
aam
sub
push
stos
mov
sbbl
xchg
into
or
mov
lods
sub
je
out
sbb
rcrl
or
aad
push
mov
inc
in
data16
cltd
sbb
fildll
fisttpl
mov
popf
push
sub
ja
sbb
fmull
loope
mov
sbbb
dec
and
ret
shlb
in
cld
outsl
sarl
push
or
mov
int3
push
js
arpl
das
push
jae
stos
jbe
loopne
psllq
shlb
add
call
add
cmc
xor
dec
jle
cs
inc
fwait
add
dec
fldl
fbstp
add
xor
ljmp
addb
pop
repz
sbb
test
add
inc
repnz
shrb
sbb
test
sub
lds
cwtl
jnp
sbb
lds
jno
shll
idiv
jge
xchg
xchg
xlat
push
icebp
add
out
adc
xchg
ret
loop
sbb
pop
mov
rcll
cmp
jp
aaa
dec
outsl
sarl
pop
xchg
or
adc
scas
or
fs
jnp
cmp
out
pusha
cmpsl
mov
inc
das
jle
add
mov
push
pop
pop
in
dec
pop
popf
lods
adcb
rcrb
imul
fsubrl
jp
sbb
fcmovne
loope
inc
fidivs
aam
test
fistpll
jp
pop
sti
or
push
jne
mov
bnd
loope
test
xchg
and
out
xchg
cmp
push
jnp
movlps
shlb
mov
mov
add
xor
fstl
push
xchg
xchg
jl
push
fistpl
outsl
cltd
std
sbb
dec
adc
push
sti
xor
jnp
outsb
ret
insb
mov
xorb
aas
xchg
iret
pop
and
dec
aaa
sbb
lcall
or
push
aas
xchg
rcrl
xchg
mov
jp
into
or
stos
ret
push
dec
dec
mov
lcall
gs
mov
sti
clc
or
and
mov
adc
aaa
mov
pop
mov
test
pop
pop
out
ss
ljmp
pop
jecxz
cld
or
and
sub
les
mov
push
scas
mov
bound
sbb
daa
sub
jg
push
mov
inc
add
xlat
fmuls
mov
andb
call
imul
jge
mov
and
cmp
sahf
sahf
sub
push
iret
sbb
adc
mov
or
pop
enter
rcll
jmp
fstpl
movl
dec
das
fs
fbstp
add
rclb
dec
pop
mov
inc
cmp
pop
add
inc
xchg
jno
mov
dec
imul
mov
mov
enter
inc
fisttps
add
scas
pop
lcall
rorb
sub
push
ds
aaa
fs
push
push
and
xchg
mov
mov
push
sbb
mov
fildll
pop
dec
mov
addr16
rep
mov
xorb
jp
jbe
aas
cmp
xchg
mov
icebp
cwtl
das
test
scas
pusha
adc
pop
inc
lcall
lds
js
and
and
mov
imul
jge
mov
cli
flds
repz
inc
mov
xor
jl
std
add
test
dec
xor
inc
cltd
fidivrs
popa
mov
int
popf
sub
loop
enter
lods
in
cwtl
mov
sub
dec
aaa
mov
insl
fsubrl
and
insl
addb
sbb
in
add
cld
push
and
test
or
and
pop
lret
sbb
rorb
ror
sub
mov
inc
dec
jae
out
cmp
inc
stc
aaa
cli
mov
in
sti
adc
shll
ja
out
into
in
shll
jnp
sub
mov
rolb
dec
jl
xor
pusha
and
add
test
scas
ss
jne
icebp
fiadds
mov
mov
or
xor
loop
add
aam
inc
into
jb
fcmovbe
sub
and
sbb
subb
mov
int
mov
in
outsb
fwait
push
jno
jnp
jge
daa
xchg
or
jg
inc
test
int3
mov
call
mov
xor
pop
daa
mov
add
aad
mov
loopne
lods
jmp
mov
stos
stos
in
dec
stos
jecxz
fidivs
jle
sub
cmpsl
sbb
into
hlt
mov
js
out
pop
dec
dec
add
lret
adc
inc
adc
add
shl
ret
filds
jne
stc
es
mov
fcomps
fs
xorb
das
inc
lods
cmp
jne
sub
lds
mov
test
enter
push
mov
sub
and
fisubl
sbb
js
mov
inc
loopne
cld
cmpsl
loop
lahf
push
jne
xor
cmpsb
pop
repz
loope
clc
gs
mov
mov
daa
shll
mov
es
and
pop
or
and
mov
cmp
xchg
inc
aad
ret
pop
inc
aad
fs
std
jbe
aad
rclb
sub
xchg
jmp
setp
inc
pop
out
icebp
sti
cmp
loope
outsl
fldpi
adc
cs
test
or
mov
dec
xchg
call
pop
js
xchg
adc
into
cmp
mov
rcrl
add
es
mov
cmpsb
jno
movsl
neg
popf
ss
and
adc
adc
cmp
in
cld
mov
inc
push
pop
movsl
dec
sti
out
into
and
pop
cmpsb
pushf
add
enter
repz
les
or
mov
lods
movsb
out
push
jmp
das
call
popa
inc
cs
pushf
sub
pop
pop
inc
inc
jmp
add
mov
sub
stos
call
dec
adc
and
inc
and
fnstsw
jmp
add
add
loopne
ljmp
xor
xchg
cltd
push
xchg
push
test
inc
gs
or
test
add
popf
xorl
pop
mov
popf
xor
ljmp
nop
das
cwtl
push
jne
lret
lods
xchg
test
mov
ss
jmp
xor
dec
fistpl
aas
adc
ss
clc
nop
mov
sub
cwtl
and
jl
sub
aaa
loope
movsl
negl
leave
cs
arpl
jp
sti
push
mov
imul
add
repnz
xchg
les
out
mov
lcall
jle
adc
sub
push
mov
cld
jmp
jle
and
cmp
shlb
ds
pop
adc
lods
adc
mov
call
insl
idivb
adc
inc
mov
rcrb
pop
ljmp
into
data16
popf
inc
sbb
in
mov
pop
ret
lock
xchg
mov
xchg
shll
pop
flds
sbb
adc
inc
mov
ja
mov
hlt
pop
outsb
incl
mov
mov
jne
xchg
push
outsl
in
and
cmpsb
movsl
and
push
dec
sbb
dec
xor
lods
pop
lret
sub
mov
pop
or
aaa
jle
std
sub
movsb
add
dec
jge
sbb
cs
jb
jo
movsl
stc
jbe
out
sbb
movsb
icebp
fsubs
dec
mov
imul
add
subb
mov
sub
inc
mov
fiaddl
call
inc
mov
mov
mov
and
xchg
lock
cmp
push
mov
or
xchg
cmpsl
jae
test
adc
adc
es
aad
outsb
cli
in
mov
test
testb
aad
insb
aas
imul
mov
sub
jecxz
mov
mov
rorb
push
cmp
mov
add
cmpb
sti
pop
lcall
jnp
add
je
cmpsb
inc
mov
sbb
cli
test
das
imul
movsl
xor
mov
jp
imul
sub
xor
push
inc
or
pusha
mov
hlt
cmpsl
inc
out
cli
and
jg
dec
lods
push
in
jae
add
inc
xchg
data16
mov
sbb
outsb
ret
dec
mov
jae
es
out
pop
sub
adc
mov
test
push
push
cmc
xor
or
loope
cmp
fld1
xchg
in
lods
into
cmpsl
pop
inc
add
inc
outsl
out
jmp
test
cmp
pop
dec
or
xchg
insb
gs
movsb
sub
hlt
xor
xchg
sbb
into
iret
cmp
and
xchg
push
sub
and
inc
add
ret
cmp
mov
and
lock
movsb
stos
mov
ds
mov
repnz
out
sahf
and
inc
or
mov
mov
addr16
movsb
lock
mov
leave
sbb
sbbb
in
mov
das
movsl
push
cmp
sbb
xchg
ret
movb
adc
dec
mov
sahf
jnp
cmp
fcomp
xor
inc
je
xchg
loope
add
ficompl
xchg
les
sbb
lret
mov
jne
call
mov
repz
xchg
sub
popf
xchg
shll
and
inc
repnz
cmp
dec
sub
std
movsb
movsl
add
sbb
inc
dec
sbb
or
repnz
dec
and
negb
dec
or
pop
aam
push
mov
jne
jp
or
mov
into
pop
je
out
mov
pop
vpmaxsw
adc
sti
in
mov
into
and
cmp
ret
xchg
mov
arpl
push
cmc
adc
pop
decl
pand
mov
out
scas
lahf
mov
sub
push
in
dec
lds
dec
xchg
addr16
je
dec
inc
pop
stos
cli
cld
sbb
outsb
dec
jb
mov
sub
push
mov
pushf
nop
dec
fiaddl
ds
test
sysexit
xor
fst
fnstenv
out
mov
jne
mov
jle
out
mov
cmp
dec
js
fisubrs
jnp
sbb
iret
or
xchg
movsl
cmc
jg
jne
imul
cmpsb
mov
xchg
or
pop
xor
shlb
sbb
inc
xor
push
scas
jne
xchg
mov
enter
or
vxorps
rcr
mov
push
or
fucom
int
out
add
and
push
add
enter
xor
int
arpl
and
xor
ds
inc
es
cmc
enter
cmp
mov
mov
and
fcomps
and
das
pop
mov
adc
jns
int3
xor
push
mov
lock
lods
push
jnp
popa
dec
sbb
daa
enter
repz
lret
cmp
mov
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
dec
outsl
add
