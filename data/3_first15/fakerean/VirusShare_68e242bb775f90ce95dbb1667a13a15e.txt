jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
ja
inc
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
and
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
stos
adc
push
push
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
jecxz
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
out
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
stc
inc
add
add
push
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
pop
add
pop
jo
pop
je
pop
js
pop
jl
sahf
addb
add
sub
popf
adc
or
add
inc
inc
dec
add
add
push
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
testl
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
mov
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
inc
cld
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
in
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
daa
repz
add
cmp
je
mov
outsl
call
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
aas
add
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
and
inc
add
lea
mov
mov
inc
and
cmp
inc
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
setne
mov
lea
call
mov
lea
mov
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
test
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
push
call
mov
out
int3
add
fst
lret
add
add
mov
sti
push
fildl
add
testb
addl
nop
lahf
insb
jp
add
mov
ljmp
test
add
push
add
filds
mov
jecxz
mov
addl
lea
add
shl
ja
add
push
mov
add
push
push
push
push
lea
push
call
add
jno
lock
mov
shll
add
xchg
mov
imul
int3
popa
jmp
mov
xchg
popa
add
filds
fdiv
add
out
aam
add
add
int3
outsl
fistl
add
pop
add
in
lock
popl
push
push
push
call
add
add
mov
add
mov
mov
rcll
jl
loop
jle
mov
add
add
cltd
test
add
add
lcall
push
push
lea
push
push
call
xchg
add
cmpsl
out
out
pop
add
mov
mov
mov
movsl
add
add
add
xchg
add
add
mov
ja
addr16
add
add
add
mov
mov
mov
out
test
sub
pop
push
push
push
push
push
push
push
call
int
mov
out
add
lods
add
in
popf
lea
add
imul
add
aam
jno
add
add
call
imul
out
mov
cltd
mov
lcall
push
push
push
push
push
push
push
push
push
push
call
out
add
pop
add
xchg
mov
bound
cld
add
add
add
pusha
add
out
mov
add
xchg
add
addb
rolb
movl
mov
shll
scas
add
mov
xchg
add
sub
pop
call
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
addl
mov
in
in
pop
mov
xchg
pop
loop
add
add
add
lods
push
add
ljmp
mov
add
add
lcall
popf
add
add
push
push
push
push
push
call
fadds
popf
add
cld
add
in
fldl
add
add
add
mov
add
leave
add
add
add
xchg
and
add
xchg
add
add
push
push
push
push
push
push
lea
push
push
call
add
test
add
shrl
cmpsb
add
add
mov
mov
mov
lods
add
stos
lock
add
add
xchg
xchg
les
lcall
push
lea
push
push
call
out
add
test
jp
jmp
out
call
add
pop
je
add
add
add
cmc
lods
add
sub
pop
mov
mov
push
push
push
push
lea
push
push
lea
push
push
call
xchg
movsl
add
cli
add
icebp
add
mov
test
add
stos
incb
xchg
pop
int
mov
add
imul
aad
push
add
add
sub
pop
add
push
lea
push
call
test
add
mov
subb
add
add
in
jae
mov
int
pop
add
pop
mov
add
popa
push
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
add
add
test
add
fildl
add
add
jecxz
add
add
add
add
into
add
add
stc
fucomp
mov
sub
pop
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
iret
jge
add
add
enter
mov
lock
data16
xchg
mov
add
add
sahf
mov
add
mov
mov
mov
loopne
lcall
pop
add
repz
push
push
push
shr
sub
dec
add
push
push
pop
add
sub
shl
pop
rol
xor
shl
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
ja
in
mov
add
fdivrl
stc
xchg
jecxz
jnp
add
je
cmpsb
mov
add
in
add
add
add
add
ret
add
xchg
aad
loop
mov
rcrl
mov
jne
add
in
loopne
lcall
jne
call
push
push
push
push
push
push
call
mov
xchg
shl
push
clc
stc
std
mov
mov
lahf
imul
stc
stos
clc
add
in
call
mov
push
lea
push
call
mov
pusha
scas
mov
add
lret
stos
pop
add
add
jmp
mov
add
add
sar
add
lret
add
rclb
test
add
cli
add
add
add
lret
pop
loope
xbegin
add
lcall
inc
call
push
push
push
push
lea
push
push
push
push
lea
push
push
call
fidivs
loope
add
jecxz
mov
push
out
out
stos
mov
je
mov
pop
bound
pop
sahf
add
add
fdivr
lcall
inc
call
lea
push
lea
push
push
push
push
push
push
call
add
add
add
std
lods
cltd
fildl
testb
test
add
pop
cli
lods
sti
add
add
add
add
add
lcall
jne
push
push
push
push
push
push
push
lea
push
push
call
icebp
call
xlat
add
push
add
push
add
lea
pop
jl
lea
add
lcall
mov
xchg
push
add
jo
add
xchg
cmpsl
repnz
add
add
sub
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
movsl
mov
adcl
mov
lods
fcmovnbe
pop
popa
jo
jno
add
fadds
mov
mov
mov
in
fcompl
jae
add
push
push
push
call
jno
mov
add
add
mov
jae
pop
mov
sahf
jo
add
jns
lret
negb
mov
add
add
jmp
add
mov
leave
add
lret
add
add
test
in
hlt
pop
pushl
pushl
push
push
push
push
call
mov
add
shrb
call
pop
mov
mov
out
in
mov
aam
fldl
aam
add
loop
sub
pop
call
push
push
shr
push
or
not
add
add
sub
not
add
rol
lea
pop
not
shl
shl
inc
pop
push
push
push
lea
push
push
call
mov
add
pop
movsl
xlat
pop
mov
movsb
mov
add
add
mov
rclb
call
add
mov
loop
lahf
mov
pop
add
add
add
std
je
movb
lock
push
push
push
push
push
push
lea
push
lea
push
call
add
add
push
loope
je
add
push
addl
mov
pop
add
add
add
add
jecxz
mov
sub
pop
call
push
push
push
sub
not
push
xor
add
sub
not
sub
sub
dec
rol
pop
ror
pop
push
push
push
call
add
clc
add
idivb
add
add
push
jb
addr16
iret
pop
mov
push
add
add
pop
shlb
out
add
add
add
loop
add
add
cmc
mov
add
mov
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
int3
ror
jmp
add
pop
jmp
mov
test
into
add
add
xchg
xchg
negl
add
xlat
add
push
rorl
push
test
movsb
in
pop
pushf
xlat
add
add
fcomps
rorb
push
push
push
push
push
call
cld
add
lret
loopne
addl
jmp
mov
outsl
push
fadds
add
add
add
add
lcall
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
filds
jnp
mov
xchg
add
xchg
add
into
add
pop
add
add
stc
jl
add
add
jmp
mov
aam
add
mov
jp
test
fstl
jne
add
imul
pop
sti
add
add
add
lcall
mov
push
push
call
fiaddl
push
add
add
fsub
mov
add
cmc
repnz
add
jne
add
testb
add
je
subb
outsl
add
sar
lods
mov
xchg
add
add
out
push
stos
add
mov
add
in
popa
mov
lcall
pop
in
add
push
lea
push
push
push
lea
push
push
call
mov
add
add
add
add
fnsave
test
imul
icebp
mov
add
add
lcall
ret
sub
add
jae
push
push
call
add
add
add
xchg
mov
add
add
scas
outsl
iret
fadds
add
mov
add
mov
add
add
push
add
add
pop
iret
test
enter
popf
add
jp
cmpsl
mov
add
jmp
add
sub
pop
xor
push
push
push
lea
push
push
push
push
push
call
mov
add
popa
jle
add
add
adc
add
addb
les
addr16
add
cmc
push
pop
int
add
add
mov
cli
add
jmp
add
lock
add
add
add
loopne
add
push
push
call
movsb
add
add
test
xlat
mov
push
add
add
mov
add
push
add
add
add
add
add
cmpsb
cltd
jl
movsb
movsb
add
add
xchg
mov
mov
mov
je
fldl
outsl
mov
shl
jns
shr
add
add
add
jne
push
push
push
push
call
jl
arpl
add
ret
popa
mov
add
add
add
lcall
mov
loop
test
add
jne
enter
cmpsl
push
popl
incb
cmpsb
imul
mov
add
sarl
xlat
add
iret
add
push
imul
outsl
int3
sub
pop
mov
xor
push
push
push
call
xchg
clc
add
fiadds
sar
add
outsl
add
add
add
add
mov
add
test
add
insb
add
add
pop
loope
roll
mov
lret
pop
cmpsl
sti
add
add
shl
add
add
cli
add
pop
add
push
push
push
push
lea
push
push
push
push
push
push
call
pop
add
lea
add
in
aad
movsl
add
add
nop
subb
add
test
loop
cmpsb
test
add
push
add
gs
add
add
sub
pop
pop
push
push
push
push
push
push
call
add
iret
mov
mov
push
loopne
add
repnz
mov
mov
iret
add
imul
add
add
lds
sar
pop
xchg
add
add
mov
push
data16
add
add
addb
in
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
xorl
add
shll
add
lods
add
lods
jle
enter
add
xchg
mov
add
cmpsl
mov
xchg
add
mov
loope
add
pop
add
std
mov
scas
mov
add
or
push
push
push
push
push
push
push
push
push
lea
push
call
hlt
add
add
add
iret
mov
clc
mov
add
add
pop
mov
mov
jo
sahf
mov
mov
call
add
xchg
lea
sub
pop
add
push
push
lea
push
push
call
add
add
mov
lret
loopne
pop
sti
loope
in
les
add
int
add
xchg
add
jmp
add
jno
mov
loopne
mov
add
loop
fisubrl
in
lock
push
push
lea
push
push
call
mov
clc
add
aam
add
add
mov
fwait
int
add
add
fcoml
add
enter
testb
pop
in
addl
jmp
data16
inc
or
pop
jae
push
push
lea
push
push
call
jnp
pop
add
cwtl
vsqrtss
lods
add
out
nop
add
out
test
add
shll
add
pop
add
cwtl
add
loop
in
lock
xor
push
push
push
lea
push
call
add
add
add
add
mov
insb
add
in
mov
add
addb
add
add
testb
xchg
add
mov
mov
addb
add
insb
out
add
movb
in
lock
lcall
les
push
push
push
push
push
call
add
add
lods
add
add
xchg
test
add
cltd
cltd
mov
add
add
add
pop
push
decb
sub
push
push
lea
push
push
lea
push
push
call
mov
test
loope
les
add
jp
add
add
xchg
add
mov
add
loopne
add
add
ret
add
add
push
add
ret
in
jne
in
call
pop
rep
push
push
push
push
push
call
leave
add
add
je
cld
add
mov
out
test
rcrb
aad
add
std
add
pop
jo
add
xchg
in
add
add
lahf
insb
sahf
jb
add
add
push
imul
pop
in
xchg
ret
mov
add
jmp
in
in
pop
pop
push
push
push
push
push
push
push
lea
push
call
js
pop
je
xchg
stos
xchg
add
mov
add
jl
add
js
rorl
push
add
add
add
jecxz
lcall
pop
add
jp
xchg
imul
mov
lcall
pop
hlt
add
push
push
push
push
push
push
push
lea
push
lea
push
call
xchg
push
enter
xchg
add
add
add
mov
popf
lods
add
push
add
add
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
xchg
add
add
pop
add
jp
and
add
in
js
popa
mov
loop
shr
cmpsl
mov
mov
add
add
stc
mov
pop
add
mov
fcomps
sahf
add
add
add
add
int3
fadds
jl
in
fcomps
ret
sub
add
adc
xchg
push
push
push
push
lea
push
lea
push
lea
push
call
mov
mov
xchg
popf
add
int3
les
in
add
add
imul
add
add
jo
add
lods
hlt
lock
fdivrs
out
sub
loopne
lcall
inc
and
push
push
lea
push
push
push
push
push
push
push
call
fdivrp
add
out
add
xchg
add
test
in
rcrb
int3
jge
jp
add
repnz
mov
add
ljmp
cwtl
add
add
push
and
test
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
push
push
add
sti
fisubl
add
scas
add
add
mov
pushf
jnp
add
std
outsl
stos
addb
add
push
push
mov
xchg
push
add
les
out
fstps
add
js
in
fcomps
adc
push
lea
push
call
add
mov
add
fs
add
add
add
hlt
mov
add
lods
add
roll
outsl
add
add
loope
stos
jecxz
add
cmpsb
hlt
sub
pop
add
push
push
lea
push
call
add
icebp
movsb
lcall
add
add
ja
add
fildl
add
jmp
add
gs
scas
sti
lea
push
add
add
pop
aam
add
xchg
loopne
add
add
mov
mov
loop
add
aad
add
jno
shrb
add
fwait
stc
sub
pop
mov
push
push
push
lea
push
push
push
call
ja
add
add
jp
push
mov
add
add
lods
add
add
pop
add
rolb
mov
insb
scas
sahf
out
xchg
fidivl
mov
pop
add
xor
push
push
lea
push
push
push
push
call
add
add
insb
clc
mov
lahf
add
push
rcll
mov
clc
xchg
add
push
xchg
add
mov
ret
add
add
mov
call
add
test
add
rcrb
out
xchg
andl
lcall
les
push
push
push
push
call
fiadds
pushf
add
jge
jae
jo
jge
add
sub
stos
push
add
out
sahf
add
hlt
add
aad
lret
lahf
push
nop
pop
add
std
leave
loope
cltd
add
add
add
xchg
mov
cld
jge
ja
sub
pop
add
push
lea
push
push
push
call
add
iret
add
push
sti
shlb
clc
xchg
add
add
test
add
add
pushf
add
add
mov
add
add
add
jl
movsb
arpl
add
add
lcall
in
lock
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
mov
jo
jmp
in
add
fadds
mov
gs
mov
add
add
lahf
pushf
mov
repnz
int
add
test
out
mov
fsubs
add
add
add
add
add
sub
pop
mov
push
push
ror
rol
xor
push
or
inc
add
shr
shr
sub
shr
shl
pop
inc
xor
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
add
add
jb
mov
add
mov
fldl
add
add
movsl
orb
fcomi
in
add
mov
ljmp
incb
add
push
lcall
jne
call
push
push
push
call
mov
add
add
push
pop
jecxz
roll
add
clc
add
std
add
enter
mov
sahf
xchg
cmpsl
add
add
ja
pusha
ja
test
mov
movsb
add
hlt
lcall
add
fistpl
add
leave
dec
push
push
pop
add
rol
not
shr
shl
sub
dec
inc
sub
pop
ror
add
ror
pop
push
push
call
xchg
add
jne
mov
add
pushf
jae
stc
sbbb
out
mov
mov
data16
pop
pop
add
fists
add
sub
pop
push
push
push
xor
pop
call
push
not
shr
sub
pop
mov
push
lea
ror
not
pop
push
push
lea
shr
pop
push
push
lea
not
lea
pop
mov
push
dec
xor
pop
add
push
lea
push
call
xchg
mov
mov
xchg
cmc
add
int3
add
sti
fiaddl
add
mov
fidivrl
fmull
std
add
mov
add
sti
mov
add
sahf
sub
pop
add
push
lea
push
call
mov
xorl
add
add
lea
add
add
mov
pop
icebp
loopne
sti
add
mov
mov
movsl
icebp
add
arpl
rolb
add
push
js
mov
nop
arpl
test
add
cli
pop
add
add
sub
pop
add
push
dec
shl
pop
mov
push
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
cmpsl
neg
add
add
push
mov
out
sarl
add
lods
add
add
mov
movsl
add
add
add
in
fdivr
lcall
xor
push
lea
push
push
push
push
push
push
push
push
call
mov
addb
lods
add
jae
add
mov
add
data16
pushaw
movsl
add
js
add
fwait
add
test
addl
into
scas
std
int3
add
add
add
add
push
push
lea
push
push
lea
push
call
stc
lahf
add
mov
call
ja
jecxz
add
add
add
push
out
aam
js
jbe
add
add
pushf
fiaddl
add
mov
fcmovbe
add
lret
pop
add
stos
push
add
mov
jl
data16
jb
in
in
pop
add
push
push
lea
push
push
push
lea
push
lea
push
call
add
outsl
scas
test
add
frstor
faddl
add
icebp
stc
shlb
add
lock
add
mov
add
mov
mov
add
xchg
add
mov
lods
sub
pop
push
push
add
inc
pop
mov
xor
push
rol
add
add
pop
add
pop
push
xor
add
inc
xor
pop
mov
push
push
push
lea
push
lea
push
push
call
mov
std
aad
add
add
pop
add
add
mov
add
add
sarb
cwtl
add
add
lcall
or
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
lret
add
add
imul
mov
add
mov
add
add
fdivs
push
popl
jmp
add
sub
pop
add
push
shr
dec
pop
rep
push
lea
push
push
call
test
nop
add
add
add
push
movsl
add
mov
add
jb
test
add
nop
stc
jae
mov
js
mov
pop
mov
add
mov
add
add
add
add
clc
add
add
add
add
mov
jne
lahf
sub
pop
mov
xor
push
shr
shl
pop
or
je
mov
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
jle
popf
loopne
insb
jle
add
jl
iret
add
cmpsl
add
cltd
add
add
push
add
lods
add
add
add
les
mov
add
imul
rolb
clc
mov
add
xchg
testb
mov
sub
pop
xor
push
lea
push
call
xchg
call
mov
cmpl
mov
mov
push
mov
hlt
leave
jnp
add
add
add
add
xlat
mov
filds
push
add
nop
std
add
add
mov
addb
sub
pop
add
push
pop
mov
push
push
push
lea
push
push
call
add
lods
roll
mov
mov
gs
mov
add
clc
push
add
stc
add
add
add
pop
add
add
call
imul
lcall
adc
push
push
push
push
push
push
call
clc
add
add
cmc
add
nop
cwtl
add
add
shll
imul
add
mov
iret
add
add
mov
xlat
mov
mov
push
add
jo
leave
lods
incb
out
addb
mov
in
add
jmp
in
call
add
push
inc
rol
pop
add
push
lea
sub
pop
add
push
push
push
push
lea
push
push
push
call
add
imull
add
add
out
add
mov
rolb
add
mov
add
mov
mov
add
test
outsl
mov
add
in
add
add
add
fildl
icebp
add
testb
stos
add
add
xlat
add
add
add
mov
bound
outsl
xchg
sub
pop
push
mov
xor
push
push
push
push
push
push
push
push
lea
push
call
int3
movw
movsb
mov
cltd
je
xlat
addr16
add
add
add
lods
lods
xchg
add
add
enter
lea
add
pop
mov
add
mov
jmp
addb
add
addr16
cmp
scas
sub
pop
add
push
push
call
pop
mov
xchg
icebp
int
pushf
faddl
add
add
pop
add
add
add
leave
add
gs
cmpsb
add
add
sar
add
add
into
pop
lret
xchg
mov
add
mov
js
ja
fbstp
sub
pop
pop
rep
push
lea
push
lea
push
push
push
call
jae
push
add
jecxz
aad
shr
ror
outsl
add
jb
add
sti
popa
add
cmc
jmp
mov
in
in
lcall
dec
sub
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
xlat
popf
push
push
testl
add
scas
add
add
into
sbb
add
je
lods
icebp
jbe
jno
fcoms
xchg
mov
mov
pop
jp
fidivs
nop
incb
mov
add
jle
add
add
cltd
fs
add
add
mov
mov
mov
iret
sub
pop
or
je
mov
push
inc
pop
add
push
lea
push
push
lea
push
lea
push
push
call
add
mov
test
add
stos
add
rolb
jmp
cmpsb
rcr
pop
push
push
add
add
incb
add
mov
add
popa
fs
sar
mov
jl
add
lcall
movb
add
rep
push
push
call
hlt
leave
add
imul
roll
insb
add
add
scas
add
lock
faddl
call
lcall
roll
mov
hlt
sub
pop
pop
push
push
xor
push
or
inc
add
sub
sub
pop
add
pop
push
xor
xor
pop
pop
mov
push
push
push
push
push
push
lea
push
call
mov
mov
add
fs
mov
pushf
mov
test
call
jns
out
fidivs
add
add
pop
add
add
push
add
lret
fs
mov
mov
add
add
add
add
lds
add
add
add
mov
lcall
insl
hlt
push
lea
push
lea
push
push
push
push
call
add
xchg
add
add
mov
lahf
push
xor
mov
jl
stos
xchg
scas
test
ret
add
xchg
xlat
xlat
pop
add
add
jae
sahf
add
lret
mov
pop
add
add
jbe
sub
pop
mov
push
inc
not
dec
pop
jmp
push
push
push
push
push
lea
push
call
add
add
in
out
in
add
imul
popa
call
les
jo
add
pop
addl
js
mov
jmp
fwait
jno
jge
add
jb
lds
shrl
xchg
test
add
xchg
add
addb
in
add
imul
out
sub
pop
push
mov
push
push
push
push
push
push
call
test
push
add
add
int3
repnz
add
add
int3
and
add
add
mov
jae
mov
cwtl
out
add
movsl
push
add
jl
push
add
js
jb
sahf
gs
sub
pop
add
push
push
push
push
push
push
call
lds
gs
sbbb
mov
add
add
jmp
mov
add
leave
lahf
add
add
out
add
add
jmp
add
push
push
push
add
rol
pop
push
push
lea
push
push
push
call
jle
fildll
xor
lock
add
add
pushf
out
jae
jecxz
add
mov
aad
jp
test
push
repnz
add
pushf
mov
jle
add
sahf
add
fs
add
add
add
in
lock
push
push
push
push
call
imul
mov
add
aad
sar
add
mov
xchg
lret
arpl
cld
push
rolw
fmull
pop
add
xchg
add
xchg
add
sub
pop
mov
push
push
lea
push
push
call
sahf
stos
add
lret
mov
pusha
fsubl
aad
xlat
mov
ret
out
pop
out
scas
add
cli
add
add
add
pushf
nop
add
fsubp
add
imul
ja
sub
pop
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
out
jnp
add
hlt
mov
stos
mov
mov
add
jmp
add
add
aad
xchg
add
pop
nop
ljmp
in
pop
push
ror
pop
pop
push
push
lea
push
lea
push
push
push
call
arpl
push
pusha
push
add
add
add
std
jge
outsl
xchg
push
add
pop
stos
push
pop
mov
pusha
mov
out
add
add
jae
mov
lea
push
jmp
xlat
sub
pop
leave
ret
push
push
push
push
push
push
push
call
add
leave
pop
enter
jo
mov
clc
scas
add
popf
mov
lock
lret
add
add
add
pop
add
mov
jecxz
lret
add
mov
xchg
add
add
add
sub
pop
push
push
dec
rol
rol
pop
mov
push
lea
push
push
call
add
add
pop
xchg
add
jp
ljmp
add
add
mov
in
hlt
pop
add
push
push
shl
xor
sub
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
pop
cld
add
add
addl
pusha
add
mov
cmc
mov
pop
lret
add
mov
add
fmul
out
je
add
jne
add
mov
add
sub
pop
push
movl
push
pop
addl
push
push
push
push
call
add
add
jnp
gs
push
outsl
subb
add
xchg
mov
add
add
add
add
mov
add
pusha
roll
xorl
add
into
push
add
lcall
rorb
xchg
add
add
test
inc
jae
push
loope
int
xorl
lcall
inc
pop
push
push
push
lea
push
call
push
aad
lcall
loope
xchg
add
sbb
add
jae
mov
add
test
add
insb
fucom
mov
pop
rolb
add
add
aad
add
add
mov
roll
add
orl
popf
fildl
add
jecxz
pusha
xchg
add
add
add
sub
pop
pop
push
xor
shl
dec
pop
pop
push
add
inc
pop
pop
push
lea
add
pop
pop
push
shr
pop
leave
ret
push
dec
inc
xor
pop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
push
add
xchg
addl
add
add
add
mov
xchg
cli
add
test
jo
add
add
mov
add
mov
fldcw
push
jne
fldl
test
mov
add
mov
xchg
xchg
add
sub
pop
mov
push
push
push
call
roll
mov
jae
loope
push
pushf
pop
xchg
js
iret
cmpsl
push
add
add
add
je
roll
test
add
mov
add
lahf
add
test
pop
movsl
jne
cld
lea
sti
add
fisubl
arpl
test
data16
lcall
pop
add
push
not
pop
push
push
shr
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
std
xchg
divb
mov
int
add
add
push
out
pop
mov
push
jo
add
add
push
add
add
jo
jo
lea
mov
add
add
incb
pop
sub
pop
push
push
push
inc
sub
not
pop
testl
push
inc
not
dec
lea
pop
addl
push
inc
dec
sub
sub
pop
push
push
shr
dec
xor
pop
call
push
sub
xor
xor
pop
mov
push
rol
pop
pushl
push
push
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
mov
lods
add
int
add
hlt
fdivs
clc
lahf
cmc
test
add
add
popa
outsl
into
jno
into
data16
mov
cli
add
mov
addr16
pop
call
push
lea
ror
pop
cmpl
jne
pop
push
lea
push
push
push
push
push
push
push
call
jb
add
mov
popl
add
movsl
pop
add
add
test
add
add
insb
hlt
jl
add
orb
add
loope
fsub
lds
xchg
mov
jo
iret
add
lods
jae
cli
add
iret
add
fisttps
jns
in
loopne
pop
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
test
add
add
int3
js
mov
mov
in
xchg
pop
mov
in
lcall
pop
push
lea
push
push
push
lea
push
push
call
add
add
outsl
ja
add
add
popa
add
mov
les
add
je
movsb
add
imul
mov
add
in
out
nop
mov
add
movsw
push
jb
movsl
mov
push
add
mov
add
push
in
add
add
sub
pop
leave
push
push
lea
push
call
push
in
add
cld
fstpt
add
test
jge
add
push
add
fbld
shlb
mov
je
roll
lcall
add
mov
popf
mov
add
add
push
add
add
cmpsb
add
in
hlt
pop
ret
push
push
push
push
call
fucom
cld
add
pop
in
add
out
add
data16
mov
fucomp
add
push
fiaddl
jp
mov
add
insb
jp
jno
filds
icebp
add
out
divb
add
mov
in
hlt
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
sahf
imul
xchg
add
push
popf
mov
add
arpl
add
pop
ficoml
mov
push
add
movl
add
add
add
add
rolb
fiaddl
add
ret
fiaddl
add
pop
add
in
fdivr
lcall
cld
push
push
push
lea
push
push
push
call
insb
pop
hlt
stos
add
add
mov
ror
add
jp
cli
mov
aam
fists
jns
add
add
sub
pop
push
push
push
push
push
call
add
cltd
xchg
mov
add
rcl
add
add
shll
jp
add
addl
add
xchg
jge
mov
add
lret
add
mov
mov
jle
fisubl
add
add
call
lcall
push
shr
pop
push
push
lea
push
push
call
mov
stos
shr
mov
jno
je
add
addl
add
mov
movsl
mov
xchg
loopne
jbe
ffree
int
cmpsb
cmpsb
add
loope
push
pop
jnp
add
sub
pop
movl
push
push
push
call
ja
addr16
lahf
add
add
add
xchg
lcall
call
out
add
pop
popa
add
add
into
data16
add
fldl
jae
call
add
push
frstor
add
popa
push
add
stc
in
lds
pop
add
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
repnz
add
mov
outsl
pop
stc
add
jb
hlt
add
add
mov
add
nop
in
int3
xchg
scas
test
test
je
in
fcompl
xchg
idiv
ljmp
push
dec
not
pop
call
push
push
call
insb
xchg
mov
mov
xchg
mov
add
xchg
add
jp
add
in
lcall
rcll
add
add
add
lcall
insl
cld
add
test
call
fistl
cmp
xor
add
jecxz
popa
lahf
mov
push
jecxz
mov
popa
jge
out
xchg
mov
flds
lcall
out
add
add
cmpsl
lods
popf
push
add
add
add
xlat
sub
pop
pop
pop
push
add
pop
pop
push
shr
pop
pop
push
push
push
push
push
push
push
lea
push
call
outsl
out
arpl
insb
arpl
add
test
add
jne
icebp
jnp
add
pushf
push
add
stc
int3
add
add
add
add
ret
push
rol
pop
push
mov
push
lea
push
push
push
push
push
lea
push
push
call
add
add
xchg
out
mov
jbe
add
pop
aad
xchg
add
xchg
faddp
add
add
add
cld
push
sub
inc
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
jnp
push
cltd
add
add
add
mov
insb
add
xchg
fcompl
add
fadd
add
stos
fstl
jnp
add
cmpsb
pop
jns
xchg
fiaddl
add
add
pusha
jo
add
std
mov
bound
scas
pop
testb
shlb
jmp
add
cwtl
add
loopne
lcall
push
inc
sub
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
test
add
test
lcall
cmpsb
cmpb
pop
out
mov
jnp
add
nop
fwait
add
add
ficomps
mov
pop
lods
pop
add
icebp
stc
mov
sub
pop
mov
push
push
call
out
cltd
ljmp
add
out
sti
jp
in
mov
xlat
jp
mov
roll
xchg
cli
add
out
add
jnp
add
iret
mov
add
add
mov
adcb
add
add
add
mov
movl
add
add
fcmovnu
add
push
push
sub
pop
lea
push
ror
add
add
ror
pop
sub
push
push
push
push
push
lea
push
push
push
push
push
call
testb
faddl
add
add
add
jo
mov
add
add
add
add
pushf
mov
pop
add
in
fcomps
add
pop
adc
push
call
imul
not
cltd
mov
neg
add
add
test
add
cmpsl
jge
bound
mov
add
rcrb
out
bound
scas
loopne
add
repnz
pushf
int3
add
mov
mov
sub
pop
shr
push
sub
pop
add
push
lea
push
lea
push
push
call
clc
add
mov
stos
mov
jbe
fistps
add
mov
loope
mov
clc
call
add
lahf
test
add
sub
pop
mov
push
push
push
push
push
push
push
call
into
cmpsb
add
into
add
jae
xchg
je
mov
add
mov
add
add
roll
add
add
add
jae
add
scas
add
add
mov
repnz
pop
xchg
stc
add
popf
aam
in
in
lcall
andb
out
pop
add
push
push
call
xchg
int3
jb
add
pop
add
add
add
add
hlt
add
add
cld
add
sahf
add
call
add
jne
rcrb
xchg
ja
add
push
add
cmpsl
add
add
add
add
fsubr
jne
bound
shlb
add
add
pop
mov
mov
push
xor
pop
cmp
jne
push
shl
pop
cmp
jne
mov
push
push
push
lea
push
call
mov
shrb
xchg
jp
add
add
mov
add
mov
add
add
jge
in
lock
movl
push
add
not
inc
shr
pop
jmp
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
add
lahf
pop
fldcw
imul
shlb
lea
out
add
ljmp
hlt
add
roll
loopne
sti
nop
add
pusha
jge
add
subb
add
orb
lcall
inc
cld
mov
push
rol
pop
sub
jne
mov
push
push
push
lea
push
push
push
push
push
push
push
call
push
add
testb
lret
add
add
add
add
add
sbbb
add
add
mov
stc
addl
mov
jmp
add
jb
add
push
cltd
test
xlat
stc
into
in
add
mov
add
addb
fdivr
lcall
add
add
jmp
push
push
push
push
push
push
call
add
ja
popl
in
jns
add
pushf
push
add
rcrb
scas
add
insb
lea
shll
add
movsl
cld
ja
add
xor
ja
push
push
cli
mov
mov
sub
pop
mov
mov
push
sub
not
add
pop
cmp
jne
mov
push
lea
pop
movl
push
not
sub
pop
jmp
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
add
stos
add
add
movsb
mov
fldl
mov
add
outsl
add
nop
add
mov
add
enter
add
movsl
add
add
add
add
add
enter
add
ret
push
vcvtps2dq
ret
mov
lcall
cmpl
jne
push
push
lea
push
call
jbe
add
add
hlt
pop
add
add
rolb
arpl
scas
jnp
cmpb
lods
add
add
add
cmpsl
xlat
mov
stos
rorb
xchg
out
fidivs
int
add
popa
sub
pop
mov
push
add
not
shr
pop
movl
push
push
call
add
lock
data16
mov
aad
pop
add
sarb
lahf
add
add
add
popf
add
lret
add
fadds
js
push
clc
lods
aam
add
call
stos
add
in
clc
lcall
popa
or
add
nop
lea
push
push
lea
push
push
push
push
push
lea
push
call
xchg
add
add
add
sahf
push
jo
test
add
add
in
roll
mov
add
rolb
std
add
mov
add
jne
add
lock
cwtl
add
movl
in
fcomps
pushl
push
push
push
push
call
mov
addb
mov
xchg
aam
mov
insb
lds
add
out
add
add
add
bound
add
lahf
add
in
fldl
add
pop
aam
jae
add
jbe
lret
std
jae
fsts
shlb
add
add
je
add
mov
mov
nop
jae
sub
pop
pop
push
lea
push
push
push
lea
push
call
iret
add
add
lods
mov
jmp
add
add
mov
mov
shrb
mov
je
add
in
mov
sti
add
gs
add
cmpb
in
lcall
inc
or
inc
sbb
rol
xor
ror
ror
pop
mov
push
push
inc
dec
push
and
add
inc
rol
add
sub
not
pop
ror
pop
push
lea
push
push
push
push
lea
push
call
push
add
incb
repnz
mov
add
mov
xchg
cwtl
mov
add
add
mov
outsl
out
aad
add
jae
int3
add
enter
lods
iret
into
add
ror
add
add
popf
jb
push
add
push
push
flds
add
call
push
push
sub
shl
pop
call
push
push
push
lea
push
push
call
mov
cwtl
mov
fld
jp
add
jecxz
add
push
add
add
rolb
add
mov
scas
add
and
add
pop
test
add
add
test
out
mov
bound
sub
pop
cmpl
je
push
push
add
shr
dec
rol
push
or
not
add
shr
shr
xor
xor
sub
inc
add
pop
lea
sub
shr
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
leave
add
movsb
add
add
addl
jp
stc
add
lock
shrl
mov
push
leavew
jmp
add
cld
add
mov
xchg
xchg
add
add
add
popa
lahf
mov
je
lods
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
lea
rol
sub
push
sub
add
shr
ror
xor
ror
sub
inc
pop
shr
sub
xor
pop
push
rol
shl
pop
push
call
push
dec
pop
cmpl
je
push
push
lea
sub
push
and
add
not
rol
sub
xor
dec
pop
xor
pop
push
lea
pop
push
push
push
push
call
mov
roll
cmc
xorb
roll
je
xchg
add
out
pop
pop
fcompl
add
add
mov
test
mov
jbe
lods
xchg
fistpll
add
add
mov
hlt
lcall
xchg
cmp
add
push
rol
sub
pop
cmpl
je
push
push
add
shl
xor
push
sub
add
lea
sub
dec
sub
add
pop
pop
push
not
shr
pop
push
call
push
push
lea
push
push
push
call
xchg
mov
lcall
rclb
mov
loop
push
add
lods
jnp
add
xchg
outsl
push
sahf
add
add
in
in
lcall
cmp
rol
je
push
push
sub
lea
push
xor
add
shl
shr
sub
pop
xor
shr
shl
inc
pop
push
push
push
push
push
push
push
push
push
push
call
mov
movsl
lret
sarb
mov
add
xchg
cmc
in
add
add
add
aad
mov
loop
add
movsl
add
rclb
add
xchg
mov
stc
mov
sub
pop
push
push
push
call
add
add
je
test
add
movsb
mov
movl
in
arpl
icebp
push
fwait
popa
lds
mov
sub
pop
call
cmpl
je
push
push
dec
shl
push
xor
add
shr
shr
xor
shr
sub
add
pop
inc
inc
pop
push
inc
sub
pop
push
push
push
push
push
lea
push
push
push
call
je
std
lea
add
jp
add
int
add
popa
int
add
add
add
push
add
in
mov
stc
imul
aaa
add
push
dec
shl
shr
pop
cmpl
je
push
push
push
or
inc
add
not
sub
add
lea
pop
shl
sub
pop
push
sub
sub
pop
push
call
push
ror
pop
cmpl
je
push
push
add
xor
xor
push
and
add
xor
sub
sub
pop
rol
add
dec
pop
push
lea
pop
push
call
push
lea
push
push
lea
push
lea
push
call
add
lods
popa
fildl
insb
sbb
je
out
xchg
or
add
add
add
add
rol
add
jle
jecxz
add
add
pop
enter
rcr
std
lock
test
add
pushf
popf
add
cmp
rol
je
push
push
not
ror
not
push
or
not
add
sub
ror
rol
sub
shr
shr
pop
add
sub
sub
pop
push
push
push
lea
push
push
lea
push
call
enter
add
add
mov
jp
repnz
mov
push
imul
xchg
push
add
add
add
jns
mov
test
ja
stos
add
add
add
add
mov
add
add
add
push
add
lea
inc
pop
call
push
pop
cmpl
je
push
push
ror
rol
sub
sub
push
sub
add
add
inc
sub
sub
shr
rol
pop
shr
ror
dec
pop
push
add
add
pop
push
push
lea
not
pop
call
cmpl
je
push
push
ror
shl
ror
push
sub
add
lea
sub
xor
pop
ror
pop
push
push
push
push
push
call
jmp
cld
add
push
in
jns
add
add
add
add
add
scas
add
add
add
add
mov
lods
out
fs
fwait
pop
subl
add
movl
pop
mov
pop
faddl
aam
mov
add
xchg
popa
jle
in
jp
add
add
mov
lcall
call
push
lea
push
lea
push
push
call
aam
in
loopne
movsb
mov
add
add
add
cmp
scas
add
call
add
popf
add
add
les
add
call
push
rorl
repnz
jge
jno
add
xchg
add
sub
pop
cmpl
je
push
push
add
push
or
not
add
shr
lea
sub
shr
add
add
pop
ror
xor
dec
pop
push
xor
pop
push
call
push
push
push
lea
push
call
lcall
int
cld
jno
add
data16
add
cmpsl
jmp
movsl
iret
loop
add
mov
add
mov
cmpl
add
pop
out
add
js
filds
popf
addl
mov
xchg
add
std
imul
mov
lock
cmpl
jne
push
not
sub
shl
dec
pop
mov
push
xor
add
add
pop
movl
push
rol
sub
rol
pop
jmp
push
sub
inc
xor
pop
xor
pop
push
lea
ror
xor
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
add
jge
sahf
mov
test
nop
movsl
gs
fs
cli
add
jl
jmp
mov
stc
add
jecxz
jle
mov
mov
add
add
fldl
jmp
fildll
sti
add
mov
scas
sub
pop
pop
push
push
push
call
call
add
lods
add
mov
add
lahf
add
add
add
add
jnp
jmp
hlt
ljmp
pop
push
dec
pop
leave
ret
push
push
push
call
push
add
mov
jo
add
add
add
add
rcl
scas
pop
add
xlat
arpl
fldl
add
call
in
hlt
lcall
push
lea
xor
shl
add
pop
mov
push
not
xor
rol
xor
pop
add
cmpl
jne
push
push
lea
push
xor
add
sub
inc
pop
ror
sub
pop
push
add
shr
inc
ror
pop
pushl
call
push
push
push
call
movsb
push
movsb
ljmp
pop
add
push
xorb
add
add
mov
mov
leave
lahf
add
push
add
add
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
add
mov
add
jno
ret
add
iret
movsl
pusha
add
roll
into
add
add
flds
pusha
test
pusha
add
loopne
std
add
sahf
ficoms
jp
je
aam
in
add
xchg
lea
add
lret
mov
add
sub
pop
call
push
ror
add
add
pop
jmp
push
push
push
lea
push
push
push
push
push
call
mov
add
mov
data16
jne
add
popa
add
movb
add
add
add
add
jmp
add
fsts
fisubrs
add
fdivr
add
out
add
loopne
lcall
jge
add
test
add
add
test
lea
pop
leave
push
sub
rol
pop
add
pop
push
lea
push
push
push
push
push
push
push
call
add
add
add
fimuls
mov
fwait
xchg
lds
add
add
decb
std
add
add
pop
add
lcall
pop
push
inc
pop
pop
push
pop
leave
push
not
shl
pop
add
ret
push
pop
jmp
push
add
inc
not
pop
cmpl
jne
push
push
shl
ror
sub
push
or
not
add
inc
sub
rol
not
pop
lea
pop
push
inc
pop
pushl
call
push
push
call
add
add
add
jb
add
scas
add
add
faddl
repnz
not
jbe
roll
test
movl
ja
mov
fldl
add
add
add
add
add
in
add
into
mov
lcall
add
rclb
pushf
mov
push
push
push
call
fwait
pop
std
mov
add
mov
pushf
outsl
outsl
xlat
xchg
pop
xchg
shlb
jns
add
rcr
add
add
add
mov
call
jmp
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
stos
loope
in
xchg
enter
push
vcmpss
add
mov
scas
std
mov
test
xchg
add
jl
scas
add
add
addr16
test
pop
add
xchg
testl
mov
add
add
pop
aad
mov
fcomps
jge
add
test
add
add
push
dec
lea
xor
sub
pop
mov
jmp
push
push
push
lea
push
push
push
push
call
mov
mov
xchg
into
add
lea
add
out
push
add
add
pop
shll
add
jge
lods
add
push
enter
lcall
push
push
lea
dec
inc
push
xor
add
shl
sub
add
sub
not
lea
pop
pop
push
lea
push
push
push
call
loopne
sahf
insb
movsl
imul
gs
add
popf
out
enter
pop
int
sti
popl
cmpsb
add
nop
add
mov
in
fmulp
add
add
call
fisttps
add
mov
jecxz
add
mov
pop
lret
lock
add
push
add
add
mov
jne
call
push
push
push
push
push
call
add
jle
add
add
lret
add
ljmp
out
in
sti
xchg
std
mov
in
pop
call
push
push
add
push
or
inc
add
xor
xor
dec
sub
not
not
sub
pop
shl
dec
xor
xor
pop
push
push
push
push
lea
push
push
call
push
push
push
pop
test
add
popf
add
rcrl
mov
movsb
add
cmc
in
add
add
sub
pop
pushl
push
dec
pop
call
push
sub
sub
pop
call
push
push
add
dec
push
xor
add
shr
add
inc
sub
not
pop
pop
push
push
lea
push
push
push
push
call
sahf
mov
nop
add
vsqrtpd
add
xchg
add
jmp
enter
add
in
loop
add
push
cltd
add
ljmp
stc
jmp
pop
out
ja
fwait
add
call
fs
add
add
jp
pop
jnp
add
push
mov
pop
jae
add
lcall
jne
push
lea
push
lea
push
call
jns
add
mov
mov
jl
add
test
cmc
lret
shr
add
push
fists
add
loop
loop
lcall
in
hlt
lcall
jmp
shrb
sbbb
shl
xor
add
sub
push
sub
add
sub
dec
inc
not
pop
not
add
pop
push
sub
ror
pop
pushl
call
push
push
push
push
call
roll
add
add
fdivr
cmpsl
push
xchg
out
test
add
cwtl
pushf
add
add
add
fs
mov
add
pushf
sahf
loop
add
pushf
xchg
xchg
add
aad
sub
pop
call
push
push
lea
not
push
and
add
sub
ror
shl
shr
sub
not
shr
sub
pop
xor
pop
push
inc
add
shr
pop
pushl
push
lea
add
inc
add
pop
call
call
push
push
sub
push
sub
add
rol
rol
shl
sub
sub
dec
shr
pop
not
xor
pop
push
rol
inc
xor
inc
pop
pushl
push
dec
sub
pop
call
push
push
push
push
lea
push
call
add
fldl
scas
jo
jmp
xchg
popf
add
lret
add
in
fidivrs
push
add
xchg
jne
add
mov
push
leave
add
loopne
add
push
add
add
add
add
add
add
pop
add
add
rcrb
in
in
pop
call
push
push
shl
push
or
inc
add
shr
sub
add
inc
pop
dec
pop
push
pop
pushl
push
push
push
call
add
add
enter
lods
add
cld
fadds
add
in
jno
rorl
imul
sub
pop
call
call
push
push
add
xor
push
and
add
ror
sub
sub
add
not
inc
ror
pop
shr
add
pop
push
add
rol
pop
pushl
call
push
sub
pop
call
push
push
lea
shr
sub
ror
push
xor
add
sub
sub
shr
pop
rol
inc
shr
pop
push
push
push
push
push
lea
push
push
call
add
rolb
add
push
popf
scas
mov
popf
pop
loopne
fcmovne
add
cmpsl
arpl
add
xchg
add
mov
push
add
mov
leave
int
fdivs
aam
mov
mov
add
lret
adc
add
push
stos
enter
sub
pop
pushl
call
push
push
lea
push
push
push
push
call
pop
movsb
add
xchg
in
add
lret
into
add
lea
lret
add
aad
mov
enter
out
mov
jbe
add
test
sarl
enter
mov
mov
add
add
xchg
insb
cwtl
jp
add
out
aad
arpl
shrb
cld
das
mov
inc
lea
push
push
pop
add
sub
pop
xor
pop
push
inc
inc
rol
pop
pushl
call
push
add
pop
lea
push
pop
push
push
sub
inc
pop
call
push
push
ror
ror
xor
push
and
add
lea
sub
sub
shr
pop
xor
pop
push
lea
push
push
call
add
lods
add
test
test
add
mov
add
clc
nop
aam
add
into
cltd
mov
add
fmull
xorl
lahf
add
add
add
mov
loopne
shll
scas
mov
mov
fwait
aad
shlb
movsl
testb
pop
pushl
push
push
push
lea
push
push
call
push
mov
mov
jns
add
fists
orb
add
push
add
add
insb
fisubs
stos
outsl
add
mov
add
add
ficompl
mov
stos
std
sahf
add
fadds
xchg
add
push
mov
pop
add
rolb
jle
in
in
lcall
or
add
call
push
push
add
push
sub
add
ror
add
sub
sub
rol
not
pop
sub
shr
pop
push
shr
sub
pop
pushl
call
push
push
lea
push
push
call
add
add
xchg
add
outsl
out
add
aad
push
add
cmc
push
cwtl
push
aam
add
add
add
mov
loopne
sarl
jno
add
add
add
out
jno
xchg
jo
add
add
mov
mov
mov
repnz
pop
call
push
push
rol
push
push
pop
add
rol
xor
shr
sub
xor
pop
sub
pop
push
xor
ror
pop
pushl
push
lea
push
push
push
push
push
lea
push
lea
push
call
ja
mov
add
add
fs
add
mov
add
jb
add
call
lcall
in
and
sub
pop
call
lea
push
push
add
xor
shl
push
or
inc
add
shl
dec
shr
sub
inc
rol
pop
add
lea
dec
pop
push
push
lea
push
lea
push
push
lea
push
call
out
jbe
mov
add
mov
jne
int
add
gs
push
movsb
add
aad
add
in
call
push
push
push
push
lea
push
push
push
push
call
sahf
fmull
jae
add
push
test
repnz
cwtl
push
jp
mov
lahf
arpl
pop
loopne
mov
jb
mov
clc
add
mov
lods
add
add
icebp
add
add
add
jmp
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
int
lret
cmc
clc
add
popa
xchg
cmc
scas
in
xchg
mov
add
mul
lret
fildl
mov
add
fs
add
add
jge
mov
add
js
outsl
int
add
aam
add
aad
add
subl
add
imul
jp
add
hlt
mov
mov
lcall
push
push
lea
push
push
lea
push
lea
push
push
push
call
xchg
push
add
push
sbbb
add
sarl
fstpl
js
add
push
lea
jno
movsb
sahf
loop
pop
xlat
or
ljmp
jl
add
test
add
cld
out
lea
cmpsb
mov
xchg
add
lcall
shrb
mov
push
push
add
add
push
and
add
dec
dec
sub
ror
sub
sub
pop
ror
not
pop
push
sub
shl
dec
pop
pushl
push
push
push
push
push
call
fisttps
cmpsl
push
add
lcall
add
fwait
xchg
push
add
add
pusha
mov
cmc
push
lahf
imul
add
jp
jno
pop
add
cmpsl
add
add
in
pop
call
call
push
dec
rol
shr
pop
mov
push
push
push
push
pop
add
shl
sub
inc
sub
shl
rol
ror
pop
lea
dec
add
shr
pop
push
add
pop
pushl
call
push
dec
shr
lea
pop
push
push
sub
ror
pop
pushl
push
lea
push
push
push
call
lds
mov
imul
lret
lret
mov
add
filds
add
xchg
int
loop
jp
add
add
add
jge
add
mov
push
add
add
add
out
xchg
outsl
add
pop
add
pop
add
cld
add
add
mov
add
hlt
sub
pop
call
push
push
sub
sub
push
or
not
add
add
ror
sub
lea
add
inc
pop
lea
shr
shl
sub
pop
push
sub
shl
inc
pop
pushl
call
push
push
xor
sub
push
or
inc
add
ror
inc
rol
sub
shr
shr
shl
pop
add
shl
pop
push
push
add
ror
push
or
inc
add
add
sub
sub
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
cld
add
mov
mov
out
roll
rcr
gs
fdivr
bound
xchg
add
add
mov
xlat
add
movsl
pop
jmp
mov
add
add
add
loop
addl
jbe
mov
add
out
add
sub
pop
call
push
push
add
add
add
push
or
not
add
shr
shr
sub
not
sub
rol
shr
pop
sub
sub
add
pop
push
add
rol
pop
pushl
push
push
call
les
incb
sti
lret
mov
enter
jle
lret
roll
add
mov
mov
test
sar
xchg
scas
mov
add
xchg
pop
fwait
add
jne
rolb
xorb
lods
push
add
add
popa
lods
je
add
in
clc
pop
call
mov
push
add
sub
inc
pop
lea
push
ror
add
add
pop
lea
push
push
push
push
call
add
add
movsl
add
fsts
mov
add
ljmp
add
outsl
pop
in
add
ja
add
add
mov
add
rorb
add
mov
out
fwait
mov
add
add
add
jno
sub
pop
push
push
push
push
call
out
jge
mov
mov
add
arpl
add
mov
add
mov
jecxz
xchg
push
frstor
xchg
add
xlat
jae
sub
pop
push
push
push
push
push
call
xchg
add
cmpsl
loop
add
add
mov
mov
imul
jle
mov
add
add
mov
add
pop
xchg
mov
add
roll
sub
pop
push
push
push
push
push
push
push
call
mov
mov
add
mov
push
add
ret
jmp
add
add
add
add
mov
mov
add
add
cli
add
pop
push
push
push
lea
push
push
push
call
mov
shrl
call
add
push
add
je
push
popf
lods
add
mov
add
add
aad
stos
add
addl
icebp
mov
imul
out
test
xchg
pop
sahf
xlat
jbe
loop
in
in
pop
push
push
push
push
push
push
lea
push
call
movsb
add
add
mov
jae
pusha
add
cmpsb
xchg
push
out
push
add
in
push
in
mov
pop
lret
mov
add
in
add
add
fsubp
mov
jl
mov
mov
add
xchg
lret
les
add
add
xchg
add
leave
je
pop
xchg
add
lea
pop
xchg
add
rolb
sub
pop
push
push
push
push
push
push
call
mov
add
fstps
adcb
popa
cld
mov
jl
add
addr16
jae
add
mov
xchg
add
push
add
add
add
scas
add
xlat
add
add
add
add
mov
lahf
push
push
lea
push
push
push
push
call
add
add
mov
xlat
mov
add
hlt
stos
mov
jmp
add
test
jns
mov
clc
mov
movsl
gs
add
push
add
cwtl
add
jbe
add
in
data16
add
mov
clc
cmp
call
nop
out
add
cli
fldl
jne
push
push
call
iret
add
xchg
movsl
nop
data16
cwtl
add
mov
add
into
mov
mov
mov
scas
add
cmpsl
hlt
ret
add
add
std
push
add
add
add
mov
cli
movb
mov
lcall
add
push
hlt
push
push
push
or
not
add
add
dec
rol
rol
sub
inc
ror
dec
pop
xor
shr
add
pop
push
push
lea
push
lea
push
push
call
test
add
add
add
jae
push
int
add
xchg
add
add
add
add
roll
jl
add
jne
push
push
push
push
push
push
push
call
push
mov
add
lea
xchg
pop
movsb
fbld
in
mov
loope
add
push
jle
mov
add
cltd
ja
add
addb
jns
loope
jno
rolb
test
add
rclb
add
pop
test
lea
push
push
lea
push
push
push
call
jecxz
add
clc
leave
add
arpl
lea
add
add
imul
test
add
jb
lahf
add
out
add
fildl
mov
iret
jle
push
ljmp
lcall
inc
clc
push
push
push
lea
push
push
lea
push
call
mov
roll
lea
pop
add
ljmp
out
fwait
add
add
pop
add
test
sub
add
mov
cmpsb
fisubl
add
arpl
sub
pop
pop
push
ror
sub
pop
dec
jne
push
push
call
leave
scas
fdivl
ret
stos
mov
push
test
cld
jle
xchg
in
fiaddl
add
in
mov
add
stos
add
mov
push
add
mov
lods
add
jne
cli
add
add
cltd
loopne
xchg
repnz
mov
add
faddl
les
add
clc
lcall
lock
add
xor
leave
push
or
inc
add
rol
sub
sub
add
pop
dec
shl
not
pop
push
sub
pop
pushl
call
push
pop
push
call
push
push
push
lea
push
lea
push
lea
push
call
mov
add
jmp
add
add
lret
add
add
push
mov
push
add
jge
jae
push
push
jle
cli
cli
xchg
add
mov
cmpsl
add
bound
add
add
push
add
pop
lea
push
push
push
or
not
add
ror
sub
shl
add
not
pop
ror
pop
push
sub
pop
pushl
push
add
rol
rol
pop
call
push
push
sub
inc
dec
dec
pop
call
push
push
add
ror
dec
push
sub
add
sub
add
lea
pop
ror
ror
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
scas
add
scas
notb
mov
iret
pop
pop
imul
int
in
mov
cmpsl
imul
jns
in
add
fcompl
jne
push
inc
sub
lea
pop
call
push
push
push
push
push
push
push
lea
push
call
iret
add
push
mov
add
add
push
add
stos
je
add
add
add
mov
add
add
add
std
lcall
mov
scas
cld
pop
add
mov
add
addl
into
add
les
add
add
lods
add
push
cltd
loope
add
add
in
loopne
call
mov
push
inc
ror
not
pop
lea
push
push
sub
push
or
inc
add
add
shl
add
sub
lea
pop
dec
not
pop
push
push
call
xchg
movsb
cld
sarl
jbe
jp
pushf
push
cmpsl
add
add
xorl
add
pop
pop
add
outsl
jmp
add
xchg
add
sub
pop
pushl
push
sub
shl
shr
pop
call
lea
push
inc
sub
shl
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
stc
add
clc
ja
imul
loopne
jl
lahf
cld
loope
xchg
add
push
push
mov
push
pop
jmp
fnsave
out
add
shlb
mov
push
jmp
jge
mov
in
lods
sub
pop
push
pushl
push
push
sub
push
or
not
add
xor
sub
inc
dec
rol
pop
shr
sub
shl
ror
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
movb
mov
add
push
push
loopne
add
add
je
sar
popf
pushf
fnstsw
mov
sti
xchg
pop
pushf
add
add
add
add
add
add
in
sub
lcall
call
push
push
sub
push
sub
add
add
rol
sub
add
inc
pop
shl
pop
push
push
lea
push
call
add
add
push
lret
js
lds
rcl
clc
enter
add
push
add
movb
lcall
pop
pushl
call
push
sub
pop
push
push
ror
ror
pop
call
push
push
lea
ror
push
push
pop
add
shr
sub
xor
not
not
pop
rol
pop
push
push
push
push
push
push
push
call
add
xchg
push
add
jno
mov
add
mov
test
mov
loop
lock
cwtl
add
pop
lods
scas
scas
flds
add
add
icebp
mov
add
add
add
jne
jmp
add
pop
pushl
call
push
inc
ror
add
pop
call
jmp
push
add
inc
pop
pushl
push
push
push
call
ffree
into
aad
pop
cli
pop
out
loope
add
insb
add
add
fisubl
lds
pop
test
add
add
add
add
add
xchg
add
jl
jp
add
add
jl
in
hlt
pop
mov
push
add
add
not
pop
jmp
push
push
inc
dec
add
ror
push
sub
add
lea
rol
sub
shl
pop
not
shr
pop
push
push
push
push
call
fiaddl
add
mov
mov
add
into
movl
cmpsl
rcrl
mov
bound
sub
pop
pushl
push
push
push
push
push
push
call
stos
sarl
push
pop
add
pop
leave
add
add
add
add
xchg
add
add
push
lock
imul
call
push
push
lea
push
lea
push
lea
push
lea
push
call
push
add
add
add
bound
add
fstl
addr16
ffree
rclb
lret
mov
add
add
add
add
cwtl
repnz
mov
add
add
jae
mov
pusha
add
sub
pop
push
push
push
push
lea
push
push
push
call
or
add
aad
add
add
shll
add
lahf
add
add
fisttpl
jp
pop
add
mov
add
mov
add
add
add
add
roll
addl
sub
pop
call
push
push
shr
push
and
add
sub
shr
shl
sub
sub
not
not
pop
sub
pop
push
push
call
in
push
add
add
add
loope
add
mov
scas
lret
imulb
sub
add
popa
xchg
ja
add
add
add
rol
add
clc
add
mov
add
pop
icebp
fadds
jne
push
push
lea
push
call
add
add
fdivrp
add
jbe
add
enter
pop
pop
add
add
add
enter
imul
out
in
hlt
lcall
jp
add
push
push
push
push
push
push
push
push
push
call
add
add
add
mov
movsb
nop
add
movsb
arpl
add
add
add
mov
add
int3
add
add
stos
add
add
xlat
add
in
sub
pop
push
push
push
push
call
mov
push
iret
add
filds
add
mov
add
imul
lea
fstpt
jge
add
add
ja
add
jle
push
sub
pop
call
push
shl
add
not
pop
leave
push
pop
add
push
shr
rol
pop
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jp
mov
pop
rorb
ja
pop
pop
filds
add
loope
imul
push
push
add
add
scas
stos
add
mov
ljmp
add
add
les
pop
add
fildl
xchg
add
pop
mov
mov
add
jnp
sub
pop
pop
push
push
push
call
add
mov
scas
add
add
jbe
shrb
add
add
popa
incb
mov
enter
cltd
pop
add
fs
xchg
add
jne
pop
out
out
cld
xchg
push
nop
add
lret
add
add
jbe
add
add
add
xchg
jae
rclb
loopne
xchg
jle
in
hlt
pop
pop
push
shr
sub
dec
pop
pop
leave
push
push
lea
push
push
call
aam
add
mov
push
rolb
data16
lods
push
cld
mov
add
push
add
mov
add
push
insb
addl
lahf
movsb
add
add
mov
fisttps
pop
add
push
lea
inc
not
not
pop
ret
push
lea
push
push
lea
push
push
call
stos
gs
pop
add
bound
xchg
mov
xchg
outsl
add
out
mov
add
add
test
add
add
mov
movsb
lret
cmpsb
add
cmpsb
add
push
xchg
xchg
out
cwtl
add
push
add
leave
cmpsb
add
add
sub
pop
leave
push
push
call
add
testb
jle
mov
add
mov
sar
into
add
test
imul
jne
jne
add
add
popf
add
in
lret
add
jge
stc
jae
addb
subl
xchg
lahf
fistpll
clc
pop
ret
push
lea
add
shl
add
pop
push
push
ror
rol
shl
pop
mov
push
push
lea
push
push
push
call
add
add
add
lods
stc
popa
popl
jp
add
testl
enter
lret
pop
mov
push
ret
in
add
rclb
push
data16
out
xchg
add
add
xchg
push
sti
add
mov
add
pushf
add
lcall
jge
add
test
add
push
lea
push
call
xchg
mov
pusha
cmc
add
in
push
pop
add
add
lea
mov
add
cwtl
add
add
push
stc
add
testb
scas
int
les
jne
imul
add
ret
mov
add
clc
pop
mov
push
add
pop
jmp
push
pop
mov
push
push
push
push
push
push
push
lea
push
call
mov
jecxz
add
add
xchg
in
std
add
add
add
add
add
mov
xchg
jmp
cwtl
fxam
lcall
add
lcall
and
push
push
call
mov
rclb
add
add
jmp
add
cmc
rolb
in
fld
ret
add
add
fiaddl
leave
add
movsb
imul
pop
xor
xor
push
push
push
push
push
push
lea
push
call
add
iret
insb
mov
testb
cmpsl
jbe
in
jle
pusha
add
aad
add
jmp
scas
mov
in
add
add
enter
iret
add
movsl
add
out
out
in
jno
fnsave
add
mov
add
push
add
lahf
in
leave
push
xchg
fwait
sub
pop
add
xor
push
push
push
push
lea
push
call
add
add
add
add
add
add
pop
mov
add
jmp
mov
add
fildl
add
add
in
in
lcall
push
not
sub
pop
sub
jmp
push
push
push
lea
push
push
push
call
lahf
xchg
xchg
insb
add
add
add
xchg
cwtl
add
jnp
add
add
add
push
mov
push
add
mov
pop
stos
xlat
add
clc
clc
mov
add
loope
in
aad
test
push
push
jb
imul
int
stos
add
gs
sub
pop
sub
push
push
push
lea
push
push
push
push
lea
push
call
xchg
bound
lea
imul
nop
add
nop
cli
test
add
flds
js
add
lcall
xchg
add
mov
add
out
shrl
in
loopne
pushl
pop
push
not
pop
sub
push
pop
cmp
jne
mov
push
push
push
push
call
jmp
cmpsb
add
jecxz
lods
ror
add
lock
add
lock
push
add
pop
faddl
add
jnp
push
add
jno
add
int3
push
mov
add
add
add
jge
add
add
test
add
add
add
in
lock
lea
push
push
push
lea
push
lea
push
call
mov
mov
jns
in
mov
leave
mov
lods
aad
add
push
xchg
jge
add
add
enter
add
add
add
add
add
mov
stos
add
add
pop
mov
hlt
add
fistpl
int
js
mov
pusha
popl
push
add
add
lods
roll
pop
sub
mov
push
sub
dec
add
pop
shr
push
pop
add
push
inc
pop
sub
pushl
push
push
lea
push
push
push
call
add
fdivr
add
add
add
insb
lahf
push
add
add
int3
add
bound
add
push
add
scas
add
int
add
mov
sti
push
add
fstl
dec
add
add
mov
fsubrp
sub
pop
pop
push
sub
add
not
pop
shr
and
push
push
lea
push
push
push
lea
push
push
call
add
add
test
idivb
call
add
add
js
add
iret
out
push
cli
into
out
mov
jns
fldl
insb
out
add
add
jecxz
add
jecxz
incb
iret
sub
pop
sub
cmp
jne
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
pop
shrb
fnstenv
lods
add
andl
add
pop
add
add
addr16
imull
mov
pop
in
mov
cmpsb
push
add
in
fdivr
lcall
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
int
xlat
stos
push
add
push
pop
bound
add
pop
lods
add
jae
in
bound
add
mov
into
filds
rcl
mov
jmp
mov
testl
push
lret
fcompl
add
push
rol
add
shl
pop
push
push
add
shr
pop
mov
push
rol
shl
not
xor
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
add
add
out
in
add
ret
add
movsl
filds
shll
jl
add
in
add
in
ljmp
cwtl
xorl
sti
xchg
sarl
jle
clc
cwtl
add
add
push
mov
popa
std
sub
pop
push
push
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
jae
add
add
aam
add
add
add
mov
hlt
add
add
stos
jge
add
pop
outsl
rolb
add
ret
in
fcomps
push
push
push
push
lea
push
push
call
arpl
push
add
cltd
add
pusha
add
add
data16
lahf
jno
add
add
mov
in
pusha
add
pop
push
stos
mov
cmpl
add
in
in
pop
mov
push
shr
add
sub
pop
lea
push
push
lea
push
push
push
push
push
push
push
push
call
arpl
fldl
xchg
xchg
add
loopne
mov
add
add
mov
add
mov
enter
add
lock
cld
in
add
mov
loop
push
add
add
jns
leave
std
pop
mov
ror
pop
add
ljmp
add
pop
mov
push
push
push
call
pop
ret
add
add
xchg
add
add
add
je
bound
fwait
xchg
add
jle
add
pop
mov
roll
scas
in
in
hlt
lcall
ljmp
je
dec
push
call
mov
sahf
imul
fadd
xchg
int3
icebp
xchg
fildl
leave
enter
lahf
lcall
je
in
cmc
add
push
add
in
push
add
add
sub
pop
mov
add
push
rol
pop
mov
push
push
push
push
push
push
call
push
loopne
add
jl
add
add
cmpsb
mov
add
mov
stos
cld
popa
movsl
add
jmp
add
mov
movsl
ja
pop
in
add
add
xchg
add
pop
mov
add
pop
jno
sub
pushf
add
add
loopne
add
jge
test
pop
jne
mov
add
xor
push
push
push
push
push
push
call
stos
in
push
mov
add
add
add
movsb
testl
push
movsl
imul
xorl
add
arpl
loopne
mov
ljmp
lock
mov
roll
pop
add
lcall
xlat
push
add
add
shr
pop
and
rol
push
dec
pop
rol
push
pop
xor
push
pop
inc
push
push
push
push
push
push
lea
push
push
push
push
call
jae
push
lret
fstpl
pop
mov
pop
addr16
test
mov
add
mov
add
add
rcrb
add
pop
pop
add
add
fdivr
lcall
cmp
jne
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
push
add
mov
popf
jae
push
add
cmp
jb
pop
add
popa
jnp
push
pop
push
fiadds
push
jb
fcomip
addb
add
imul
lcall
enter
push
hlt
andw
add
xchg
call
jl
add
xchg
mov
in
fdivr
lcall
inc
or
test
add
add
shrb
xor
pop
cmpl
jne
push
rol
shr
sub
pop
xor
push
inc
shl
pop
pop
push
sub
sub
pop
pop
push
not
inc
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
shl
push
out
mov
fld
rol
fdivrl
add
stos
sahf
mov
add
insb
jl
int3
cmc
add
jl
add
xchg
mul
add
aad
add
test
push
cmc
test
add
loope
test
gs
add
add
push
popa
in
mov
std
add
cmpsl
add
mov
loop
in
loopne
lcall
pop
push
shr
ror
pop
leave
push
shl
pop
ret
push
push
push
call
popl
xchg
mov
ret
in
addl
movsb
mov
pushf
add
int3
lea
cmc
mov
fldl
add
test
lods
jae
add
mov
add
lcall
push
adc
push
or
adc
aas
lea
pop
push
push
push
push
push
call
jne
add
cmp
add
shrl
add
sbb
add
loop
add
fs
nop
mov
sub
pop
push
add
push
add
pop
mov
testw
push
lea
push
push
push
push
call
out
add
int3
cmpsb
mov
add
add
add
rolb
cmpsl
into
add
add
std
stos
stos
cld
pop
hlt
clc
jmp
rclb
push
jp
add
cltd
mov
add
fwait
movl
popf
add
ljmp
xchg
lcall
lcall
push
push
push
call
iret
add
jecxz
add
add
add
mov
iret
xchg
outsl
add
loop
mov
scas
add
out
add
xchg
add
add
sub
pop
pop
push
sub
dec
pop
mov
push
push
push
push
push
push
push
lea
push
call
xchg
mov
je
add
add
ja
add
imul
jge
sarl
add
mov
movb
loope
mov
mov
test
lock
xchg
add
add
lret
negb
loopne
jbe
lock
mov
in
loopne
lcall
push
lea
push
push
push
call
add
loopne
jbe
mov
add
test
add
stc
add
pop
add
loope
mov
loop
add
insb
shrl
add
add
add
add
add
aam
mov
add
add
lcall
add
ljmp
lock
call
push
add
pop
xor
push
shl
pop
pop
push
push
push
lea
push
push
push
call
xlat
movsb
fwait
stos
add
add
add
js
jl
scas
cmpsl
scas
add
add
gs
ffreep
push
loope
add
movl
insb
ja
lea
xchg
add
mov
mov
enter
int
add
xchg
sti
mov
add
in
call
pop
push
sub
xor
sub
inc
pop
pop
push
push
lea
push
push
lea
push
push
push
call
ja
add
xchg
push
mov
cli
push
mov
push
mov
add
mov
add
jecxz
jnp
mov
mov
fwait
push
xchg
mov
rorb
addl
pop
add
add
add
add
fdivs
test
mov
pop
pop
push
lea
push
lea
push
push
push
call
call
cli
cmp
add
add
cmpsl
ljmp
in
add
add
lea
into
jnp
pusha
bound
mov
add
fdivrs
addl
push
sub
pop
pop
push
push
call
add
push
add
not
add
add
mov
pop
cmpsb
pop
push
add
add
lods
add
xchg
add
jb
add
popf
outsl
in
cwtl
add
xchg
push
stc
jne
mov
mov
les
lock
add
xchg
call
mov
gs
add
push
push
push
lea
push
lea
push
call
add
mov
popa
int3
jecxz
lds
push
mov
jle
testl
add
xchg
imul
add
imul
test
pop
out
nop
jb
cwtl
fildl
or
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
jo
mov
add
add
testb
aad
lods
in
jo
mov
sarl
add
push
add
mov
lcall
into
mov
fidivs
shll
sub
ficoms
push
jno
add
lcall
push
shr
xor
pop
mov
push
inc
pop
add
push
dec
pop
push
push
push
push
call
lds
cwtl
out
add
out
add
mov
roll
fisubrl
add
imul
mov
hlt
pop
push
push
sub
sub
shl
pop
push
push
push
lea
push
push
push
call
add
fiaddl
lcall
fiaddl
fs
mov
loopne
test
lahf
add
cmpsb
mov
stos
arpl
fdivr
rolb
in
lock
mov
push
push
push
push
push
push
push
push
push
push
call
into
fs
lock
mov
add
add
in
sahf
add
insb
add
sti
jle
push
add
jge
mov
lods
xlat
lcall
xchg
xchg
jecxz
mov
in
add
jp
jl
pushf
mov
in
sub
pop
pop
push
lea
add
xor
pop
lea
push
push
push
push
lea
push
call
add
add
fiadds
add
add
mov
shl
add
mov
add
cmc
ljmp
sub
pop
sub
push
add
not
ror
rol
pop
mov
push
dec
not
shl
pop
shr
push
dec
pop
add
mov
push
add
ror
shr
inc
pop
add
push
lea
push
push
call
jl
add
test
lds
add
add
add
mov
lds
add
stos
pop
sub
pop
pushl
popl
push
not
pop
mov
push
rol
rol
shr
pop
add
xor
push
add
dec
pop
lea
push
inc
pop
mov
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
ja
mov
add
lret
call
repnz
add
add
mov
add
add
add
rclb
add
push
add
test
pushf
pop
mov
add
mov
addb
push
mov
mov
add
lcall
rclb
pop
rol
push
pop
nop
nop
push
shl
shr
pop
xor
nop
push
add
pop
nop
push
push
push
push
lea
push
push
push
push
call
roll
clc
add
hlt
add
in
add
out
jb
add
add
mov
arpl
in
push
add
addr16
lcall
push
loop
add
cmpsl
fldl
sahf
add
xchg
pop
cwtl
add
xlat
add
add
mov
add
push
dec
inc
pop
nop
push
lea
add
pop
nop
push
add
not
inc
pop
cmpb
jne
push
shl
add
add
pop
add
push
push
lea
push
push
push
call
push
lods
add
pop
rcl
mov
in
clc
xchg
loop
add
add
int
pop
scas
add
cwtl
sahf
ret
pop
add
bound
popf
jno
xchg
sub
pop
nop
push
sub
not
xor
pop
nop
cmp
je
push
push
lea
push
push
push
push
call
popf
add
loop
add
popf
testl
fdivrl
mov
add
scas
add
jno
add
add
add
int3
sti
cmc
push
add
add
out
xchg
add
add
push
add
in
call
nop
nop
push
push
call
add
imul
add
add
add
add
add
mov
add
add
add
stos
fs
fnstenv
push
push
add
jne
ljmp
add
add
lods
add
cli
add
lcall
push
inc
not
pop
nop
nop
push
sub
sub
pop
cmp
jb
push
push
push
push
push
push
call
add
cmpsl
add
js
add
negl
jge
add
scas
push
add
negl
sahf
add
imul
fadds
mov
mov
add
movsb
loope
jnp
push
add
mov
add
jno
in
call
push
push
push
push
lea
push
push
call
add
loope
push
stos
add
add
add
mov
add
lods
add
add
add
out
push
add
add
mov
leave
mov
loop
ljmp
jmp
add
jge
xchg
test
add
fisttpll
sub
pop
jmp
push
push
push
lea
push
lea
push
call
add
pop
mov
mov
pop
add
faddl
addb
add
add
add
add
jp
ficoml
jno
add
add
add
shrb
andb
pop
negb
add
add
sub
pop
mov
add
push
add
ror
ror
pop
movzwl
push
rol
sub
sub
pop
mov
push
not
not
pop
add
push
push
lea
push
push
push
push
push
push
push
call
stos
cmpsb
add
xchg
jno
push
xchg
mov
xchg
add
add
popf
dec
mov
add
push
mov
add
add
push
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
pop
fbld
add
add
add
add
add
add
lahf
jmp
pop
in
xchg
pop
mov
add
popa
lret
add
vminss
push
roll
add
outsl
loop
add
add
stos
scas
push
testl
sahf
bound
add
lret
sub
pop
xor
xor
push
lea
push
push
call
int
popf
xlat
les
cmc
subl
test
cld
mov
add
ja
mov
jbe
sub
pop
shl
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
stos
add
add
fwait
add
add
add
pop
les
add
shll
test
cld
jne
xchg
jbe
add
movsl
push
jo
add
popa
jnp
mov
jmp
lcall
dec
nop
add
loope
push
lea
push
push
call
add
clc
in
add
add
out
ljmp
out
jno
add
add
add
add
add
jbe
js
call
xchg
add
mov
mov
pop
ja
add
fcmovnu
int3
scas
std
pop
addb
mov
movsb
lahf
roll
dec
nop
add
loope
push
pop
xor
mov
push
push
push
push
push
call
add
mov
pop
loopne
lcall
ret
push
add
mov
clc
mov
mov
add
popf
add
xchg
arpl
mov
jae
jge
arpl
out
mov
add
rol
add
jo
jmp
in
in
pop
add
push
add
not
lea
pop
pop
push
shl
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
repnz
add
mov
pusha
cltd
test
mov
mov
add
add
push
lock
aad
enter
pop
jl
add
fwait
add
mov
clc
add
in
jbe
out
add
int3
hlt
faddl
movsb
xchg
sti
mov
mov
add
in
add
add
out
lds
int3
sub
pop
pop
push
lea
push
call
fiadds
outsl
aad
fstps
push
fiaddl
js
add
pop
add
add
aad
add
jae
add
sub
pop
pop
push
push
push
push
push
push
call
jge
test
xchg
add
add
add
iret
rol
add
movl
add
mov
mov
out
js
add
sub
pop
leave
ret
push
shr
pop
push
push
push
push
push
call
add
movsb
lock
add
mov
add
mov
add
add
add
xchg
add
jmp
add
xchg
add
int
sub
pop
mov
push
lea
push
push
push
call
add
add
add
mov
mov
jne
add
fmul
add
add
incb
loop
add
loopne
add
sahf
add
andb
add
cltd
push
out
fs
out
pop
loop
roll
add
add
lds
add
add
mov
gs
sub
pop
push
push
ror
rol
shr
rol
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
push
scas
cli
stc
add
add
enter
arpl
lret
sahf
add
loop
add
repnz
ja
add
cltd
ja
loopne
add
push
lea
pop
lock
test
addr16
arpl
pop
add
add
je
add
sti
xchg
stos
add
add
ret
js
jecxz
add
mov
add
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
push
cmp
mov
mov
add
mov
scas
incb
add
add
les
roll
add
add
add
add
fsubr
add
mov
add
popl
mov
ljmp
into
add
fdivr
lcall
push
lea
push
push
push
push
push
call
add
add
shlb
ret
jle
add
add
add
add
xchg
scas
movsl
jl
add
mov
add
add
lods
pop
add
cli
add
add
add
pop
add
add
add
add
pusha
jb
add
add
mov
lcall
dec
or
lea
push
push
lea
push
push
push
call
add
mov
mov
add
add
imul
imul
adc
sarb
int
lret
addb
jge
lods
add
lcall
adc
lea
push
push
push
push
call
insb
std
add
mov
addl
fadds
cwtl
xchg
addr16
add
add
cmpsl
roll
je
jne
test
add
add
les
sub
pop
mov
test
je
push
push
push
push
push
call
mov
repnz
popl
out
movsl
xchg
movsb
mov
mov
clc
jno
lret
leave
add
aad
mov
mov
in
in
pop
mov
push
rol
lea
dec
sub
pop
test
je
push
push
call
pop
add
out
imul
cwtl
add
add
jmp
loopne
add
xchg
mov
add
js
clc
iret
add
arpl
add
out
cmc
mov
push
xchg
add
hlt
add
sti
icebp
xchg
outsl
in
ror
fnstcw
add
fildll
js
add
add
add
notl
xor
add
cmc
add
add
add
movl
add
les
test
lret
stos
in
fisubrl
add
mov
mov
push
add
ror
pop
mov
push
push
lea
push
push
push
push
push
call
add
push
mov
add
rolb
pop
movsb
movsl
add
jo
lahf
pop
loopne
add
mov
add
iret
jecxz
test
mov
add
pushf
add
test
clc
push
add
jl
add
add
test
lcall
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
jge
ljmp
ljmp
fldz
shll
lret
scas
call
rolb
neg
jp
mov
add
lcall
rorb
test
add
add
add
push
shl
sub
pop
mov
push
ror
pop
inc
push
xor
pop
cmp
je
push
push
push
lea
push
push
push
call
cmpsl
add
std
add
xchg
mov
mov
aad
cld
flds
fs
andl
add
add
mov
mov
out
add
test
add
test
sbbb
add
sar
jmp
add
sub
pop
test
jne
push
push
lea
push
push
push
push
call
add
mov
add
mov
mov
jge
mov
add
add
fstl
add
add
call
xor
ror
pop
pop
pop
push
shl
add
inc
pop
pop
push
sub
sub
add
pop
pop
leave
push
dec
pop
ret
mov
push
sub
xor
add
ror
pop
inc
cmp
jne
push
push
push
call
add
xchg
je
mov
add
push
filds
add
test
addb
add
add
mov
sub
pop
lea
push
push
push
push
push
call
mov
push
add
add
fwait
add
add
mov
stos
mov
xchg
addr16
add
add
mov
je
in
sbbl
cwtl
add
add
add
add
cmpsl
outsl
jo
andl
fdivp
sub
pop
mov
test
je
push
push
push
call
push
mov
leave
lahf
adcl
add
movb
add
add
cmpsb
add
into
mov
add
ret
add
mov
call
add
pusha
mov
sub
pop
mov
push
push
push
push
push
call
call
imul
fildl
lcall
jne
add
jmp
clc
push
in
lahf
test
add
hlt
add
stc
pop
mov
ljmp
add
filds
imul
js
add
push
jne
add
add
add
scas
rcrb
sti
sub
pop
add
push
push
call
jecxz
pop
mov
lahf
cltd
add
rorl
add
fiadds
loop
hlt
lea
arpl
movsl
fs
rcl
lods
xchg
scas
pop
add
mov
push
fsave
xchg
add
pop
add
les
hlt
add
xchg
cmpsb
cmpsb
rolb
jnp
add
sub
pop
cmp
jne
push
pop
mov
test
je
push
push
push
lea
push
push
push
push
push
call
rcr
sahf
jno
pusha
add
decb
popl
fincstp
orl
add
push
outsl
add
push
add
fildl
outsl
movsb
push
popf
add
add
add
add
lcall
callw
jb
push
lea
push
lea
push
push
push
push
push
call
add
add
add
mov
mov
ja
add
lods
loope
jns
mov
scas
add
mov
addb
roll
add
push
add
xchg
movsl
in
add
add
mov
xchg
add
cltd
in
xchg
add
test
mov
pop
add
roll
push
lea
push
push
push
push
call
std
push
mov
ficoml
addb
add
fs
lea
add
subl
add
add
lods
push
enter
aad
mov
mov
push
fdivrl
xchg
add
sti
mov
add
addl
add
lcall
loopne
test
call
or
inc
add
add
int
leave
add
bound
add
mov
add
jl
testl
add
mov
add
enter
addb
jmp
mull
add
fiaddl
sub
pop
jmp
push
pop
xor
push
xor
add
xor
pop
pop
pop
push
dec
pop
pop
push
push
push
push
push
call
add
xchg
mov
add
test
add
in
add
sti
add
mov
mov
add
pop
movsl
push
out
add
add
mov
push
jle
in
in
lcall
push
sub
pop
leave
push
sub
pop
ret
lea
push
lea
pop
pop
push
push
push
push
push
lea
push
lea
push
call
js
xorb
scas
add
add
add
scas
cmc
data16
in
add
jp
pop
mov
in
push
add
add
mov
add
cmc
out
flds
add
add
addl
push
push
add
add
add
ja
xchg
push
in
in
pop
push
sub
pop
pop
pop
push
push
push
push
push
push
call
addb
les
xchg
jl
cmpsl
push
mov
data16
jne
fiadds
add
in
loope
rcll
add
jns
add
leave
mov
mov
xchg
add
pop
xlat
add
cwtl
enter
pop
leave
ret
push
xor
dec
pop
mov
pop
push
push
push
push
lea
push
push
push
push
push
call
in
add
mov
add
movsb
fwait
add
aam
jbe
test
add
add
add
cltd
push
jne
pop
add
add
lahf
cmc
imul
add
add
lahf
add
add
cmpsb
add
add
sub
pop
pop
push
push
lea
push
push
push
push
call
add
add
icebp
add
add
mov
add
jae
jmp
add
std
mov
stos
hlt
filds
pop
jl
jl
sti
lahf
add
add
hlt
add
pop
mov
cwtl
jp
push
xchg
mov
test
iret
addr16
push
add
pop
jo
mov
xchg
jle
add
pushf
stos
jge
add
sub
pop
pop
push
rol
dec
pop
pop
push
push
push
push
push
lea
push
lea
push
call
mov
jns
enter
mov
add
add
jl
mov
pop
add
lds
addr16
mov
lret
pop
push
add
fildll
push
cld
pop
push
mov
jecxz
les
push
add
test
add
pusha
add
fwait
add
fwait
jb
jb
sub
pop
leave
push
push
push
push
call
push
add
add
add
jae
add
mov
cld
divb
xlat
ljmp
movsl
jbe
mov
add
leave
add
lods
add
pop
jae
test
jecxz
cltd
fs
les
lret
in
pop
mov
lcall
or
test
jae
mov
lret
jo
test
jb
sbb
das
xor
jae
test
jae
fs
add
mov
icebp
sbb
fcmovnu
or
jecxz
repnz
jp
int
sti
int3
in
sahf
jp
jecxz
out
jl
aaa
adc
add
dec
cmpsb
enter
and
cmp
dec
mov
mov
push
mov
call
cmp
fcoml
xor
loope
fistpl
dec
iret
jg
push
push
arpl
mov
mov
push
adc
mov
push
and
add
xor
das
xchg
or
inc
les
bound
stos
lods
outsb
push
add
sbb
pop
dec
xchg
aaa
mov
scas
push
dec
push
push
mov
push
add
pop
sub
das
cmp
xchg
loop
inc
jmp
inc
push
cmp
inc
inc
loope
pop
ja
dec
outsb
mov
sub
pusha
or
sbb
clc
cmp
movb
fs
cmp
push
loop
sub
and
shlb
enter
stos
add
lods
inc
mov
cltd
and
adc
dec
inc
mov
int
cltd
in
push
inc
dec
add
mov
movb
cmp
fsubs
mov
sahf
xchg
jb
xchg
and
cmp
jg
sub
clc
fwait
enter
stc
in
cmp
es
nop
jns
xchg
cld
mov
fadds
xlat
lods
add
ret
stc
sbb
stc
nop
mov
sarb
cwtl
ret
inc
sbb
in
out
jne
fstps
dec
sbbl
ljmp
shrb
or
mov
lods
filds
cmpsb
mov
gs
dec
add
mov
pushf
push
pop
loope
pop
lds
stc
testb
stos
mov
ret
dec
lcall
pop
fs
mov
cli
mov
ret
jg
aas
aam
sub
dec
dec
push
push
int3
mov
mov
mov
repnz
sbb
or
in
sub
mov
add
shlb
add
inc
fadd
pop
push
pop
mov
xor
daa
add
fldt
adc
cltd
add
and
cmp
scas
std
mov
and
xchg
xor
or
sbb
outsl
inc
arpl
or
and
push
mov
popw
dec
loope
push
loop
cwtl
jae
or
add
scas
sbb
ljmp
or
enter
adcl
es
mov
mov
pusha
mov
pop
mov
popf
lds
mov
sbb
cmp
mov
subb
or
dec
pushf
scas
cmp
stos
das
movsl
cmpsl
jp
cmp
ret
bound
add
xor
lret
lods
jmp
sub
ja
lds
rcrl
dec
jl
movsb
out
andb
jge
xchg
mov
pop
fnstcw
jae
mov
lock
rorb
sbb
in
aam
fcmovnb
insl
shlb
rcrl
movsbl
mov
mov
stos
xchg
add
cli
mov
popa
push
xor
adc
and
scas
jns
jbe
xor
je
mov
dec
repz
rorl
pop
mov
out
add
jno
mov
mov
and
mov
dec
mov
stc
js
fcmovu
ret
and
push
stos
cmp
clc
or
xchg
popa
sub
int
mov
cmp
out
lods
ret
call
pop
shlb
push
push
clc
or
ja
cwtl
inc
out
xchg
cld
cmpsb
jge
mov
nop
ss
cmp
fisttpl
scas
dec
scas
out
xor
int3
mov
inc
sysenter
pop
mov
inc
adc
ja
inc
cmpl
iret
pop
push
cmp
sub
fisttps
xlat
loope
xchg
pop
repz
repz
pop
in
sbb
int
cmp
mov
push
mov
xchg
cwtl
dec
mov
out
cmp
jge
jo
repnz
xor
sahf
pushf
shlb
call
pop
xor
ret
repz
push
outsb
js
mov
ljmp
or
fcomps
js
adc
mov
out
fldl
cwtl
bound
mov
xchg
or
push
pushf
pop
cmc
xchg
pop
add
dec
jae
mov
dec
lahf
or
push
xchg
fcoms
into
dec
cmp
adc
int3
pop
lahf
xor
lcall
mov
cmpsl
std
add
mov
or
mov
pushf
iret
fdivr
repnz
repz
jb
pause
negl
lahf
lahf
sub
add
bound
jp
leave
cld
xchg
xchg
out
or
outsl
jmp
lcall
jmp
cmp
jb
ljmp
mov
dec
das
mov
mov
imul
mov
sti
das
repnz
xchg
cwtl
cmp
enter
dec
arpl
leave
ret
js
push
dec
mov
xlat
dec
xchg
inc
xchg
inc
jbe
in
bound
xchg
negb
xchg
push
sahf
loope
and
push
pop
in
loop
loop
jae
cwtl
fcoms
cli
jge
xchg
call
ret
ja
dec
aam
and
mov
ret
inc
subl
lret
cmp
aaa
fs
lcall
incl
pop
pop
nop
or
int
inc
fists
mov
aam
in
rol
mov
orb
mov
stos
adc
jge
mov
xor
repnz
loope
movsb
es
mov
js
inc
dec
jnp
roll
cmp
mov
mov
pop
adc
pusha
in
fcomi
pusha
mov
es
iret
push
icebp
jns
sub
dec
sbbl
mov
mov
xor
push
loope
cmp
iret
xchg
mov
pop
mov
fildll
cmp
in
loop
pusha
mov
or
adc
sbb
scas
push
cmp
or
sbb
aas
mov
cvtpi2ps
inc
and
mov
sahf
notl
out
push
sti
push
rorb
xor
or
xchg
fwait
inc
inc
mov
in
and
sahf
movsb
aad
test
cmp
loopne
mov
rorb
ds
pop
mov
lcall
stc
gs
mov
mov
mov
repnz
fnstenv
out
pop
loop
push
inc
add
cmp
jae
les
mul
lret
lods
scas
lds
ret
repnz
push
jle
dec
shll
popa
je
cld
fstpt
jge
mov
fistpll
mov
mov
shll
xchg
in
dec
pop
cmp
sbb
jno
dec
aaa
adc
mov
cwtl
and
cmpl
fisttpl
mov
mov
or
aad
aas
dec
in
ret
mov
mov
sub
or
mov
or
mov
inc
cltd
insb
loop
imul
sbb
inc
xor
imul
inc
aam
notl
cmp
mov
sbb
int
mov
xchg
orb
mov
int
addb
cmp
sbb
push
cltd
fwait
test
arpl
pop
and
and
mov
pushf
bound
pop
and
out
dec
ret
jnp
ja
push
sub
subl
icebp
sbb
je
cmpsl
jl
ds
shll
jbe
mov
shll
push
mov
aam
sti
repz
cmp
add
cwtl
fsubs
pop
fstps
arpl
mov
stc
lock
push
jb
ss
iret
mov
and
and
jge
cs
test
jb
jmp
icebp
stos
daa
aam
test
insb
clc
aaa
pushf
adc
sbb
add
aas
filds
lcall
out
outsb
or
daa
cwtl
lret
stos
mov
pop
addb
ja
push
jmp
add
loop
frstor
fstpt
outsl
mov
daa
cmp
fcmovne
push
out
xchg
std
icebp
mov
jecxz
sub
outsl
rcrl
add
mov
mov
pop
repnz
fiadds
cld
xchg
mov
jb
test
inc
sti
dec
xchg
test
movsb
push
mov
aaa
push
scas
sub
fldl
or
pop
inc
sub
movsb
sbb
cmpsl
sbb
or
and
cmp
aad
xchg
add
mov
jl
adc
shlb
cmp
push
loope
xor
adc
sub
sub
lahf
lods
mov
js
xchg
pushf
push
xchg
or
int3
test
shlb
pop
sbb
xor
xchg
mov
mov
sub
cs
out
push
or
push
xor
lea
lret
enter
push
arpl
int3
shl
push
dec
adc
in
int3
js
cmovbe
in
inc
cwtl
mov
pop
mov
add
adcl
gs
push
and
sub
insl
dec
movsb
or
mov
mov
dec
sub
sub
sub
sbb
cmp
cmpsl
loopne
sbb
mov
sub
ss
sbb
jmp
add
ss
mov
scas
int
int
mov
stc
loope
sub
or
std
adc
repz
and
pusha
into
adc
arpl
push
loope
call
mov
fdivr
andb
bound
addb
inc
adc
addr16
int3
enter
mov
cmp
lahf
cmp
nop
mov
insb
xor
cmp
rorb
mulps
test
and
inc
sub
sbb
icebp
or
adc
sub
in
daa
ss
and
dec
xor
jl
mov
sbb
insb
sub
outsb
xlat
pop
sbb
stos
ret
dec
mov
jmp
mov
xchg
inc
mov
or
push
into
stos
popa
repnz
rcr
das
xchg
adc
add
push
jae,pt
in
sbb
insl
std
shrl
jae
adc
insb
mov
dec
or
cmp
inc
negl
rcrb
movsb
inc
add
jne
jno
cmp
and
sub
jb
cli
movsb
mov
xchg
jg
fninit
imul
lcall
sbb
arpl
mov
out
fdivr
sarb
or
cvtps2pd
jg
xchg
mov
and
fdiv
adc
mov
fistl
mov
mov
add
loopne
sub
imul
in
mov
test
or
fstpl
sbb
out
int
lods
mov
stos
pop
or
dec
or
xchg
shlb
aaa
push
into
aas
into
orb
cmp
fbld
out
test
in
push
data16
xor
mov
xlat
je
jmp
jno
dec
popl
lret
cmp
stc
pop
int
and
call
dec
adc
or
insl
and
dec
cmpsl
movsl
rclb
divl
pop
xchg
xchg
jo
int
fstp
pushf
sbb
test
dec
sub
aas
stc
test
push
insl
rcrl
xor
test
ja
andb
iret
test
ja
xchg
sbb
into
xchg
lahf
andl
sbb
mov
xorb
test
sbb
mov
or
js
mov
jns
dec
iret
pop
cmp
in
pop
mov
jg
mov
jnp
lds
cmp
and
adc
das
cmp
xchg
fsubr
movsb
mov
xlat
fsubr
pop
push
lcall
mov
adc
ror
lods
or
mov
jno
xchg
lret
xchg
insb
cwtl
push
pop
adc
jle
xchg
jae
sbb
adc
mov
fbld
push
jmp
xchg
adc
sbbb
jns
fs
test
dec
jae
fidivrs
or
mov
repz
loop
jae
fldcw
sub
inc
lds
ss
jae
xchg
pop
xchg
mov
lods
leave
test
jecxz
sub
ret
and
pop
adc
push
dec
push
lods
cmp
jecxz
movlps
push
fldenv
sarl
or
dec
sbb
xchg
fs
adc
add
inc
mov
repz
js
es
xchg
mov
fldt
outsb
pop
aad
ret
out
sbb
fsubrl
xchg
enter
push
xchg
sbb
pop
sub
jl
aam
push
jmp
rolb
aam
cmp
lcall
fidivl
mov
and
shll
jl
pusha
push
hlt
jo
in
ret
jno
or
pushf
xor
push
push
mov
pop
jae
into
sahf
inc
scas
add
pop
xchg
mov
mov
mov
mov
add
sub
test
pushf
xorb
pop
add
push
mov
add
xchg
adcl
and
pop
pushf
outsb
repz
adc
pop
scas
mov
sub
lods
mov
popf
xlat
iret
push
jl
dec
xor
sbb
fs
divps
sbb
sbb
addr16
add
mov
andb
fbld
cli
test
dec
dec
and
inc
lods
xchg
xlat
jecxz
jo
xorb
xor
shld
inc
pmovmskb
in
mov
or
movsl
daa
cmpsl
mov
popf
cmp
andb
jge
ret
sbb
outsb
imul
push
outsl
dec
pop
push
roll
pop
mov
mov
jl
or
push
js
lds
int3
mov
mov
and
test
xor
pop
dec
lahf
fwait
cmp
insb
inc
aaa
mov
sbb
test
enter
test
xlat
and
fwait
sub
mov
mov
ret
dec
into
std
out
jae
cwtl
jae
stos
lret
xchg
mov
pop
fidivrs
fidivrl
adc
mov
insl
pusha
mov
stc
jae
fxch
add
mov
or
daa
int
jp
test
je
aam
je
push
fs
testb
pop
inc
outsb
bnd
or
dec
pop
es
pop
or
cmpsl
test
out
int
xor
push
push
and
inc
and
adc
insb
xor
push
cmpsl
aas
cwtl
mov
cmp
adc
cld
xor
dec
push
std
test
in
repnz
or
mov
mov
mov
das
arpl
mov
jbe
pushw
daa
jmp
push
rolb
subl
loop
out
ss
xchg
arpl
call
mov
popf
les
in
out
cwtl
repz
or
repnz
subl
pop
mov
iret
decl
pop
cmp
daa
xor
stc
inc
fdivrs
cmpsl
scas
or
fcompl
pop
in
int3
popa
or
or
inc
pop
adcl
push
mov
xchg
arpl
mov
rcrb
test
mov
ret
push
cltd
xchg
lods
cwtl
or
xor
insl
imul
cli
adc
movsl
add
dec
inc
and
dec
mov
sbb
push
mulb
jecxz
out
movsb
sub
popfw
adc
jge
out
je
aam
mov
push
push
push
nop
push
mov
xor
cmp
orb
push
jg
mov
push
add
sti
mov
sub
sub
push
imul
dec
movsb
lahf
enter
shrl
cmp
mov
mov
mov
inc
push
xchg
ret
adc
div
clc
pop
or
mov
rorl
mov
push
mov
or
sbb
mov
fdivrp
jmp
pop
inc
pop
xor
dec
xchg
bswap
cmp
mov
dec
sti
call
test
das
lock
add
in
sbb
adc
lcall
fcomps
loope
scas
adc
test
pushf
fs
xor
jl
xchg
inc
ljmp
push
mov
int3
jge
mov
mov
scas
test
mov
mov
test
sub
nop
pop
add
out
xchg
xchg
mov
fldenv
frstor
sti
add
push
mov
es
test
and
incb
call
jb
push
mov
shl
add
jg
mov
popf
imul
and
jecxz
imul
or
mov
in
add
pop
push
add
push
inc
dec
adc
cmp
push
lcall
jecxz
cmp
pushf
movsl
xor
sbb
pop
sub
mov
leave
dec
pusha
inc
sub
mov
cmp
and
push
rcrb
sbb
sub
push
out
xor
xchg
jle
bound
out
jmp
sbb
bound
cmpsl
andb
mov
dec
push
cmp
testb
sub
mov
mov
mov
scas
mov
add
mov
pusha
inc
into
das
cs
enter
out
jg
xchg
out
fsts
or
insb
pop
scas
repz
adc
pop
pminsw
pop
cmp
add
and
jl
mov
int
push
dec
das
insb
dec
mov
or
ficoms
mov
jo
push
lods
push
clc
fbld
cld
ret
mov
test
call
sbb
out
leave
ret
add
int3
sbb
and
fs
cli
testl
test
inc
push
sbb
aam
sub
xchg
add
hlt
scas
pop
dec
popa
stos
push
push
xor
adc
push
cs
push
icebp
adc
add
pop
fwait
sub
int
cld
push
inc
cld
pusha
or
arpl
out
mov
mov
imul
mov
das
jb
mov
rorb
divl
lock
out
femms
fistps
adc
pushl
das
fistl
nop
xor
or
adc
pop
jnp
xor
jg
or
ret
outsb
out
inc
mov
inc
inc
inc
jp
adc
sbb
mov
push
ljmp
insl
imul
pop
out
fs
xlat
xchg
add
out
shr
xor
mov
or
loopne
loope
das
mov
jo
out
xchg
mov
pop
aaa
pop
cmpsb
sbb
cmp
movl
das
dec
pop
xor
es
idivb
es
and
icebp
daa
dec
cmp
movsb
ds
lea
out
call
sub
mov
sahf
int
mov
dec
fbstp
cli
int
xchg
jle
out
adc
cmp
cmp
adc
mov
inc
mov
into
ret
lret
mov
dec
pop
jecxz
scas
in
pop
sub
popa
cmovs
dec
jp
fmull
adc
cmp
jnp
rcr
pop
or
lds
or
sbb
orl
cmc
rolb
popa
test
jnp
lock
daa
or
std
das
insl
mov
sbb
xorb
popa
dec
enter
dec
imul
xor
jg
stos
jnp
cmc
pop
ds
aam
jne
aaa
lods
and
cmp
dec
ja
sub
and
stc
sub
dec
rcrl
imul
mov
add
shl
or
jo
add
in
mull
fwait
rorb
dec
mov
data16
sub
inc
adc
xchg
orl
cld
lahf
mov
cli
and
mov
outsb
mov
push
inc
cld
mov
mov
in
cmc
or
jns
jae
lods
pop
scas
daa
mov
push
sub
sbb
fdivr
lods
add
jnp
leave
pop
je
mov
sbb
push
pop
xchg
jb
stc
sbb
mov
or
pop
dec
test
leave
sti
pushf
mov
clc
roll
jge
or
cmpsl
mov
inc
dec
xor
cmpsb
cmp
cwtl
sbb
inc
fstpl
jl
xchg
jne
cmp
and
xchg
sub
adc
subb
or
pop
adc
xchg
jbe
js
jmp
mov
in
pop
or
clc
push
mulb
nop
test
jmp
jne
arpl
jb
cmp
add
adc
pop
pop
lahf
cmp
xchg
decl
dec
or
mov
repnz
fmuls
push
cmp
cs
cmp
nop
shlb
mov
or
test
adc
rorb
inc
or
and
xchg
push
or
inc
jle
es
inc
mov
pop
add
mov
ficomps
pushf
adc
std
mov
dec
dec
stos
popa
mov
cmp
pusha
movsl
mov
ret
xor
pop
push
test
jg
outsl
rcr
push
stos
sbb
jno
mov
sbb
pop
push
les
mov
clc
in
daa
mov
inc
pop
push
inc
add
fcompl
push
push
adcl
ficoms
mov
ja
sbb
adc
push
shll
xor
push
fcmovnu
sarl
hlt
dec
sbb
pop
or
fsubp
push
outsl
jg
mov
add
mov
lds
roll
jge
out
and
mov
inc
xor
xor
sbb
push
ficoms
les
pop
fldpi
aad
add
fs
mov
je
and
or
jo
icebp
push
mov
mov
cmp
dec
jg
imul
adc
les
xchg
hlt
lahf
fbstp
cs
enter
insb
xor
bound
inc
pusha
push
data16
in
jo
cmpl
dec
mov
jnp
imul
mov
jno
pop
idiv
mov
inc
mov
sub
fwait
je
cmp
loop
mov
dec
xchg
hlt
pop
cmpl
xchg
cmp
gs
shll
je
pop
scas
idivb
mov
mov
pop
outsl
mov
cmp
repz
xor
jb
jae
mov
call
adc
pop
jmp
scas
mov
out
pop
addr16
mov
push
and
pop
pop
inc
xchg
enter
sub
inc
dec
inc
mov
arpl
in
fs
rorb
jge
jbe
push
pop
mov
call
frstor
fsubrl
push
cltd
insb
out
push
pop
push
imul
mov
ret
cli
or
pop
cmp
cltd
jns
movsb
jle
adc
mov
and
faddl
addr16
ret
cmpsb
or
je
mov
xchg
pushf
out
mov
ret
in
out
test
cmp
dec
adc
test
cmp
pop
push
clc
mov
pop
pop
lcall
lcall
jle
aad
xchg
push
lods
nop
inc
jae
mov
dec
cmp
cs
mov
add
and
ljmp
adc
cli
and
mov
mov
sbb
cmpsl
imul
hlt
in
push
inc
jbe
pop
js
test
pop
inc
movsb
sub
jo
jns
lds
in
sbb
sar
outsl
lahf
push
or
sbb
cmp
icebp
mov
xchg
call
cmp
mov
clc
rclb
cmp
inc
ret
pop
int3
push
lcall
cmp
jmp
aam
fucomip
fdivl
adc
xchg
or
jecxz
jmp
js
pop
cmpsl
pop
insb
pop
jmp
inc
xchg
adc
call
repz
sbb
stos
mov
mov
into
scas
outsl
jo
lret
in
fbld
test
test
les
pop
xchg
adc
push
xlat
into
xor
fstpl
dec
call
ljmp
sarb
fsubrl
leave
bound
lea
sbb
in
dec
lcall
test
or
int
shl
into
jno
add
jne
in
fdivl
add
popf
pop
sbb
mov
sbb
and
add
jb
sub
movsl
insl
or
add
inc
add
and
xchg
int3
arpl
xchg
inc
mov
stc
setp
mov
dec
inc
sbb
inc
inc
adc
inc
out
push
jle
sub
mov
shll
in
jle
cli
adc
fcomi
jge
sbbb
mov
xchg
push
das
and
rcr
in
lret
mov
mov
pop
sub
fsincos
push
push
dec
leave
and
sbbl
lock
inc
xor
ljmp
dec
rorb
enter
add
mov
push
rorl
test
test
or
mov
int
or
cmp
cmp
push
push
pop
jl
sbb
dec
ss
jge
lret
sbb
fs
mov
and
mov
out
push
fidivl
mov
and
std
sti
outsl
inc
divl
dec
in
enter
mov
or
leave
and
cmpb
lahf
je,pn
fwait
test
add
rcrl
leave
cmp
sarl
mov
movsl
adc
mov
jmp
and
sub
sbb
pushf
mov
pop
insb
pop
jb
aam
filds
add
loope
mov
in
cmp
add
in
sbb
mov
mov
mov
movsl
testl
xor
scas
inc
pop
out
out
sbb
push
inc
mov
push
dec
andl
out
shlb
pop
cmp
add
pusha
mov
daa
pop
sub
cltd
xchg
loopne
aas
enter
cwtl
mov
pop
lock
mov
pusha
push
fcmovnbe
mov
fcom
or
cmp
insl
jmp
icebp
outsl
xor
scas
or
aas
fisubs
xchg
sti
mov
ret
gs
and
and
out
jbe
pop
jecxz
loopne
sbb
pop
lods
add
jge
sub
sub
push
dec
add
sbb
mov
dec
lods
insb
hlt
mov
rorb
xor
loopne
pop
lods
mov
add
gs
ret
pop
idivl
test
inc
cmp
push
cltd
das
jp
ds
xchg
daa
fxtract
dec
in
xor
jae
cld
sbb
mov
adc
jne
mov
loopne
andl
dec
push
cmp
aad
call
cmpsb
test
es
cmpsb
or
xor
out
dec
sti
or
rolb
jbe
mov
aam
jg
mov
jmp
inc
dec
xchg
push
mov
out
popa
rorb
jo
sbb
mov
and
inc
cmp
mov
xchg
mov
jle
bound
leave
out
xlat
jns
mov
xchg
stos
ret
sbb
insl
pop
mov
pop
dec
push
dec
jecxz
mov
es
inc
or
mov
pop
xchg
sbb
sub
or
add
fs
ret
pop
and
or
ror
mov
mov
jle
mov
sahf
ss
add
lock
ja
mov
mov
jmp
cmp
pop
xor
ds
add
xlat
xchg
adc
mov
jp
lds
mov
fs
and
lods
loopne
mov
mov
popa
mov
orl
pcmpeqw
push
les
outsl
cmp
push
imul
or
int
aam
rolb
mov
xchg
rcrb
ret
sub
inc
fisttpll
xchg
movsl
xor
push
cli
xor
hlt
scas
test
mov
test
xor
stos
jecxz
rcll
shl
mov
inc
mov
imul
in
mov
jno
mov
or
shlb
pop
movsb
test
sub
gs
jmp
in
clc
cli
cwtl
mov
cmc
or
jle
pop
call
cld
fisubrs
iret
pop
adc
lock
lahf
stos
push
sub
and
jmp
jge
xor
push
cmp
push
inc
pop
pop
push
xchg
jne
bound
sarb
xor
ror
cmp
add
das
jae
lds
icebp
dec
in
push
mov
movsb
lahf
xchg
and
ret
enter
lds
je
pusha
mov
pop
faddl
int3
inc
push
push
add
dec
or
adc
cltd
jmp
sub
rcr
clc
xchg
loope
movsl
sub
jnp
pop
sbb
inc
icebp
add
fstps
ret
and
adc
stos
pop
jo
push
inc
pop
pop
adcb
rolb
mov
add
sub
daa
dec
mov
popa
jp
lea
mov
mov
shl
subb
push
xor
mov
add
stos
inc
mov
jbe
pop
rorl
jno
sahf
data16
pop
pushf
adc
cmp
outsb
push
in
arpl
les
movsb
sub
ljmp
mov
imul
pop
stos
std
mov
push
mov
inc
sahf
lods
popf
clc
adc
pop
mov
xlat
ja
cmpsl
flds
lcall
mov
sbb
lea
jle
int3
or
sbb
mov
repnz
ja
scas
fisubs
iret
push
inc
xor
xchg
mov
cmp
xchg
push
mov
gs
daa
adc
ja
mov
mov
rorl
imul
int
orb
lock
inc
jnp
cmp
adc
mov
stos
dec
mov
js
mov
loope
mov
inc
fwait
hlt
cmc
aaa
xchg
in
inc
subb
push
enter
das
xchg
sbbb
xor
sahf
jo
push
mov
subl
push
outsb
xchg
negb
ffreep
mov
adc
dec
mov
jne
lods
adc
fwait
sub
adc
adc
mov
test
les
aam
mov
lds
dec
mov
ret
rsqrtps
shrb
push
test
xor
adc
jnp
mov
pop
mov
xchg
insl
xchg
sub
stc
leave
mov
adc
push
rcrl
adc
adc
mov
adc
sub
add
fbld
aas
mov
or
xor
cltd
mov
xor
add
sarb
in
xchg
mov
push
jnp
inc
and
sbbl
arpl
test
fwait
movsl
test
fnsave
adc
mov
and
xor
outsl
jbe
insb
je
ja
fstl
pop
gs
xor
addr16
mov
sbb
fwait
inc
xor
push
jo
inc
mov
sub
pop
sbb
scas
sbb
inc
mov
ficomps
push
xor
adc
xor
or
mov
addr16
inc
shlb
out
aad
xor
inc
cmpsb
fmulp
test
je
pop
dec
incb
loope
lret
xchg
mov
sbb
cmpsb
or
cmp
inc
lret
mov
mov
out
popa
mov
sbb
es
pop
jne
je
in
test
sbb
add
fstl
fsubs
int
pop
jle
dec
xchg
addr16
and
sbb
aaa
mov
fwait
pop
sbb
push
insl
inc
int3
sub
aaa
in
xchg
fisubrs
das
scas
mov
or
cmc
in
scas
out
or
in
shl
in
push
lea
pushf
jnp
jecxz
daa
pop
xor
add
inc
aam
sbb
outsl
movsb
add
dec
xor
inc
adc
fwait
cwtl
or
dec
and
pop
push
in
mov
and
xchg
pushf
jbe
shlb
int
mov
pusha
clc
ljmp
sub
pop
andb
mov
arpl
sub
in
mov
add
data16
add
addr16
xor
mov
lock
repnz
gs
add
sub
imul
je
enter
xor
dec
or
leave
popw
call
adc
xor
mov
jno
push
xchg
stos
push
push
push
stos
xchg
cld
mov
in
out
insb
pop
push
mov
cmpb
jnp
enter
mov
mov
xchg
fadds
movb
jns
sub
pop
lods
dec
push
mov
repz
sub
stos
gs
xlat
movsl
out
mov
inc
jo
push
sub
loope
mov
pop
shl
mov
fnstsw
mov
ss
insb
push
out
jg
pop
outsl
sahf
inc
cmp
repz
in
sub
mov
xchg
mov
mov
or
repz
cmp
fwait
mov
pop
cli
pop
sbb
mov
or
cmp
xor
sbb
dec
je
sub
jo
mov
and
or
sbb
daa
test
mov
or
adc
add
mov
push
jle
aad
push
pop
and
loopne
dec
mov
xlat
popf
mov
xchg
xchg
aas
sub
leave
ret
inc
jae
sub
xchg
push
xchg
cmp
mov
loop
mov
inc
pop
jp
xor
cmp
jae
hlt
mov
mov
leave
incl
gs
sbb
adc
in
jbe
scas
xor
xchg
fs
cld
xchg
push
mov
push
addr16
mov
or
dec
push
mov
mov
outsb
sarb
sbb
cmp
and
push
dec
ret
push
inc
or
cmp
jno
cs
push
stos
movb
int
sbb
sti
push
jg
ljmp
stos
in
sbb
aaa
mov
aad
in
popa
pop
mov
lods
pop
pop
jge
xchg
in
add
stos
jne
push
ret
and
loop
push
decb
pop
sub
lock
pop
repz
lods
cmp
push
sbb
adc
dec
rcl
pop
cwtl
cmp
cmp
jbe
and
out
repz
rcrb
sbb
testb
sub
outsb
fucomip
test
out
push
pop
jb
ds
push
into
jnp,pt
cwtl
lds
cmp
daa
cmp
mov
mov
sub
xchg
jbe
cmp
or
jo
cmc
addl
jne
and
and
jg
aam
cmp
jae
jp
mov
insl
or
dec
iret
shrl
data16
fsts
mov
loop
inc
push
ja
adcl
loope
in
mov
inc
sub
inc
xor
mov
adc
and
mov
jno
std
mov
or
jb
jmp
jbe
clc
nop
inc
inc
push
pusha
das
les
pop
push
test
mov
cmp
jo
loope
add
jle
adc
jo
xchg
rcpps
test
add
pusha
inc
inc
stc
and
or
jo
inc
imul
repnz
and
lahf
cli
repnz
leave
xchg
aas
cmpsl
xor
push
push
mov
pop
cmp
dec
fwait
stos
std
jbe
orb
outsb
outsl
dec
std
mov
push
adc
enter
fiaddl
int
test
adc
mov
mov
mov
into
xor
outsb
out
xor
inc
cmpb
loope
int3
push
fsubl
dec
sub
out
lahf
push
jae
mov
pop
xor
xchg
adc
insl
into
test
aaa
movsl
lds
aaa
aad
ss
test
adc
in
mov
sub
shll
push
scas
into
mov
es
and
and
dec
jnp
popa
rep
mov
xor
cld
ret
out
mov
int3
inc
pushfw
and
outsb
or
ljmp
dec
jmp
ja
pushf
jg
mov
outsb
pop
pop
pushf
mov
mov
jns
mov
shr
jno
and
out
out
jmp
adc
lahf
outsb
xor
xchg
jb
jmp
in
and
icebp
flds
xchg
pop
ljmp
sbb
or
or
xchg
and
test
bound
pop
jg
and
outsb
movsb
nop
fsubrl
call
push
shr
push
or
sub
xchg
jle
dec
std
subl
xlat
jle
mov
shr
loope
orb
inc
push
cli
rclb
pop
pop
popa
movsl
inc
inc
mov
xchg
xor
pop
mov
add
fs
push
ret
push
mov
sub
sti
in
je
jae
rorb
or
mov
push
xor
sbb
xchg
push
filds
xor
mov
mov
mov
imul
add
aad
psubsb
inc
unpckhps
mov
popf
jb
jb
stos
movsb
push
jo
pop
xchg
icebp
imul
xchg
sub
insb
movsb
add
or
sbb
test
and
lahf
pop
jo
push
out
imul
xchg
or
scas
and
test
flds
daa
out
xadd
push
sub
popa
xor
push
iret
push
mulb
adc
push
mul
push
leave
fucompp
mov
sbb
cmovp
adc
pop
test
pop
mov
cmp
movsb
es
sub
std
sub
in
ds
xor
push
jg
dec
push
jge
orl
mov
push
ljmp
or
scas
mov
xor
roll
pop
cltd
push
xchg
shll
sti
nop
mov
mov
fldl
hlt
stos
mov
lock
out
push
or
into
push
push
das
fsubrs
es
push
outsl
call
add
cmpsb
aas
add
imul
std
test
add
out
push
and
pop
mov
or
lods
mov
mov
fs
pop
jle
or
jmp
adc
jmp
jp
fwait
and
fsubs
adc
mov
in
shr
add
mov
pop
shrb
sbb
ss
mov
out
aaa
jae
xor
push
fdivs
fistpll
stos
and
push
xor
dec
sub
iret
xchg
xchg
mov
or
dec
cmpsb
insl
mov
fs
push
out
jbe
lcall
push
out
outsl
mov
iret
arpl
daa
outsl
jns
push
push
cmpsl
addr16
mov
push
inc
lret
push
lds
movsb
in
lret
fxch
or
cmp
fildll
insb
sti
cmp
inc
xor
call
repz
cli
or
xchg
sub
mov
loope
scas
je
scas
pushf
sbb
loop
repz
ficomps
sub
mov
push
pop
inc
adc
add
adc
hlt
push
and
jmp
cwtl
imul
loope
outsl
fisttpll
inc
inc
je
les
xor
les
roll
add
push
in
mov
mov
fucomp
dec
mov
inc
jno
add
pop
sbb
and
jle
and
push
pushf
pop
pop
leave
stc
mov
loop
out
cs
push
mov
out
call
std
shll
mov
push
xlat
xor
bound
sbb
mov
in
iret
dec
inc
insl
imul
mov
addr16
icebp
les
sub
popa
imul
outsl
xlat
sahf
mov
sbb
sbb
jl
inc
mov
cmpsb
aaa
or
rcll
xor
push
test
repz
cmc
ret
je
pop
jnp
pop
sbb
dec
stc
add
outsl
jo
test
fimuls
dec
loop
arpl
push
jnp
xlat
mov
sahf
xor
mov
stc
jp
mov
je
or
xor
nop
subb
enter
push
repnz
dec
dec
enter
cltd
shl
push
pop
add
hlt
call
xlat
adc
adc
scas
roll
mov
aaa
push
aam
cld
sbb
dec
add
push
addr16
vpmacssdql
scas
out
inc
test
and
mov
push
js
pop
push
mov
push
dec
aas
movsb
pop
pushf
cli
fsubl
push
out
in
cmp
in
je
xor
loopne
and
lock
fisubrs
sti
inc
cmpsl
pop
arpl
int
std
push
mov
les
or
sbb
cwtl
rep
mov
fnstenv
test
sub
out
xor
mov
inc
test
lds
inc
js
xor
cmp
shlb
pop
cld
and
loopne
fcompl
ljmp
dec
clc
dec
test
imul
mulb
xor
or
out
aaa
mov
xchg
jne
ret
and
or
insl
je
cmpsl
loope
mov
and
sarl
jns
mov
fs
xor
lret
cmp
movsl
xchg
outsl
loope
inc
sbb
lods
cmpsl
test
adc
out
dec
movsl
ds
insl
mov
fdivrs
movsb
loop
out
jmp
or
adc
pop
add
loope
jg
sub
xor
popa
adc
orl
dec
divb
push
shl
mov
movsbl
stc
pop
mov
aas
cmpsb
test
push
ss
les
inc
jnp
je
xor
and
imul
in
xchg
mov
cmp
mov
shl
adc
shl
inc
jbe
xchg
aad
add
add
jl
add
pusha
scas
or
pop
xchg
dec
inc
xor
mov
jp
mov
movsl
insb
js
iret
lcall
fisubl
add
sarl
scas
mov
std
or
pushf
lret
xor
movsl
stc
cmp
enter
enter
xchg
popa
cmpsb
jge
lret
test
leave
add
push
js
mov
add
cmc
add
mov
push
jno
cwtl
ljmp
pop
rol
mov
mov
mov
push
loope
jne
cmp
stos
inc
sahf
std
push
adc
popf
cmp
mov
inc
and
cmpsl
lods
loope
pop
dec
dec
movsl
stc
adc
rolb
adc
sarb
lock
push
pop
bound
icebp
jns
jae
shrb
mov
lods
popa
addr16
cmp
push
xchg
fs
mov
fstps
ss
mov
and
outsl
shll
jmp
or
bound
mov
sub
mov
out
movsb
cld
xchg
jns
lds
jl
push
mov
into
sbb
mov
fs
shrl
xor
mov
cmp
frstor
mov
std
andb
bswap
jbe
insb
call
cs
jp
data16
and
push
ret
xchg
push
or
popa
mull
popa
js
cmc
push
scas
mov
clc
test
scas
xchg
cld
mov
mov
in
xor
push
mov
pop
sbbb
add
in
pop
push
and
dec
mov
or
jnp
adc
mov
gs
ss
xchg
and
dec
pusha
xlat
push
xlat
lcall
rclb
push
rol
test
xor
das
push
inc
fs
cmp
cmp
pop
push
mov
add
xlat
adc
push
push
inc
sar
adc
inc
notl
gs
push
sub
add
clc
jge
inc
inc
mov
inc
jne
mov
mov
negb
jmp
add
adc
jle
rolb
aas
jle
or
mov
mov
push
imul
and
add
in
adc
push
mov
jae
icebp
sub
std
clc
push
imul
fldl
gs
fdivl
jnp
sbb
imul
xchg
movb
fnstcw
push
repz
sbb
arpl
test
xchg
aam
scas
xchg
arpl
mov
xor
sub
add
fldenv
adc
mulb
dec
add
mov
xlat
push
stos
aam
jo
lret
xchg
push
fwait
and
aad
sub
and
in
xor
int3
mov
fnsetpm(287
mov
cmp
stc
pop
or
std
lock
daa
mov
push
push
push
lcall
enter
fld
in
mov
aam
adc
and
sti
jbe
pop
icebp
mov
rclb
in
int
movsl
cmp
cmpsl
ljmp
lea
cmpsb
dec
adc
enter
fbld
ds
inc
fnsave
pop
rorb
jbe
ss
sarb
fdivs
pop
andb
call
inc
dec
arpl
lds
outsb
stc
fadds
and
push
xchg
sub
arpl
js
sbb
out
das
movsb
mov
add
adc
jbe
dec
and
mov
pop
and
xor
mov
adc
aam
dec
insl
fmuls
das
jne
andb
fistl
mov
or
xchg
push
clc
xor
push
in
idivl
mov
insb
dec
arpl
mov
fcoml
addl
jne
lret
lds
popf
fisttpll
add
mov
mov
jbe
ret
sbb
mov
xor
mov
xchg
or
in
cwtl
or
lea
js
xchg
aaa
and
pusha
mov
mov
sbb
nop
jecxz
les
adc
fdivs
sbb
insb
in
push
call
out
xchg
pop
mov
xor
sub
cli
inc
add
jae
xor
cmp
movsb
fsts
divl
cmp
jl
cmp
xchg
call
dec
jp
insl
sbbl
sub
push
mov
scas
shrl
in
lret
stc
jl
mov
lcall
addr16
xchg
shr
adc
in
das
hlt
mov
mov
out
pop
jle
mov
jns
das
ds
dec
in
jle
scas
jae
pop
or
jle
add
xchg
in
cmp
hlt
rcll
out
cmp
ror
lock
rol
movsb
outsl
shrl
sbb
push
jp
lods
and
sarl
repnz
push
fwait
out
lds
hlt
ja
push
xor
adcb
or
mov
imul
xchg
outsb
lock
xchg
xchg
nop
and
ret
notl
fsubs
adc
adc
movq
dec
mov
sbb
cmpb
or
mov
or
mov
mov
cmpsb
and
stc
mov
subb
lcall
inc
jmp
pop
mov
ja
xchg
mov
outsl
mov
xor
xor
inc
scas
bound
cs
pop
jp
sub
in
sub
jecxz
dec
cmp
cmc
push
clc
sbb
xchg
movsl
in
popf
mov
lods
mov
push
and
sbb
enter
pusha
xor
add
cltd
xor
outsl
pop
sbbb
je
pusha
inc
push
fsts
inc
out
fildl
xchg
test
in
addr16
inc
sbb
mov
ljmp
adc
add
mov
fwait
xlat
mov
cwtl
adc
mov
js
outsl
stos
jne
lret
mov
dec
int
xchg
dec
loop
push
movb
push
outsb
xor
cmpsl
je
fmuls
ret
dec
mov
test
and
in
pop
test
adc
scas
push
icebp
mov
mov
fadd
add
sarb
sbb
sti
imull
scas
jo
lds
negb
inc
aam
sbb
fs
sahf
lods
xor
insb
fs
testb
adc
xlat
mov
les
test
pusha
data16
cmc
rcll
xor
sbb
pushf
push
xor
cmpsl
fistpl
out
mov
mov
cmpsb
mov
mov
cld
pop
jg
and
inc
into
pop
pop
add
vpmullw
imul
mov
mov
pop
hlt
push
imul
out
xchg
mov
push
lret
and
and
inc
push
pop
iret
add
lods
in
lds
jne
xor
jge
dec
ss
xor
int3
int
inc
dec
jnp
mov
xor
xchg
ret
div
pop
clc
ret
fcmovnu
notl
cmp
movsb
shlb
leave
mov
mov
int3
push
jae
hlt
nop
loop
xchg
fwait
push
or
dec
mov
scas
push
add
sbb
jns
sahf
jno
pop
jmp
jg
addl
mov
stos
ss
inc
icebp
add
cwtl
repz
inc
int3
daa
add
stc
mov
cmp
jecxz
and
pusha
mov
out
pushf
inc
sahf
lea
outsl
pop
jge
scas
fisubs
push
stos
sub
in
pusha
repnz
push
js
sar
xor
lods
cmpb
jl
mov
test
pushl
test
mov
sub
dec
gs
fsubr
push
scas
loope
cmp
pop
ds
sbb
mov
fmuls
fs
adc
cmpl
daa
imul
in
adc
test
fwait
xor
iret
xor
add
inc
nop
pop
repz
pop
xchg
rcrb
push
stos
nop
xchg
enter
pop
stos
repz
lods
outsb
push
lcall
sub
fwait
fs
xor
mov
push
add
xchg
pop
jmp
leave
outsl
jno
sub
jle
loop
out
adc
stc
and
mov
lods
inc
addr16
xchg
mov
xchg
aaa
addr16
ljmp
adc
and
sub
movsb
daa
ret
xchg
push
js
negl
fidivrl
inc
sbb
push
mov
add
fstl
clc
loope
xchg
test
pop
push
sahf
imul
sub
xor
jle
jmp
mov
std
fwait
push
inc
divb
out
pop
or
test
xchg
lahf
ds
xchg
arpl
fsub
cltd
ret
lods
xor
loop
repz
xchg
icebp
add
sub
popf
jl
xchg
pop
lods
sub
mov
adc
xor
sbb
loope
scas
sub
dec
clc
sub
in
mov
les
les
xor
fwait
daa
loope
mov
fsub
or
mov
js
add
pop
into
mov
adc
fsubs
cld
fidivl
cmp
xchg
mov
sahf
in
xlat
sub
faddp
out
fwait
jo
mov
pop
int3
fidivrs
push
into
cmp
xchg
ret
cmp
and
out
out
pop
aad
fsts
ret
cwtl
jge
xor
jo
outsl
pusha
push
add
fs
sub
ja
jno
lahf
xlat
sub
mov
jo
and
push
fsubrp
push
enter
adc
sbb
xchg
sub
jmp
sbb
and
test
sbb
cmc
or
add
mov
mov
inc
push
inc
jge
or
xchg
or
jns
xchg
ss
sub
or
arpl
dec
adc
jl
cld
icebp
fs
and
in
xchg
popf
jbe
imul
fwait
stos
dec
lds
aam
sbb
les
xchg
xadd
inc
insl
add
lods
lea
das
sub
sbb
sarb
mov
push
xchg
push
jb
push
bound
push
outsl
fimuls
imul
popa
xor
cli
jb
arpl
jmp
adc
dec
xchg
adc
inc
xor
push
mov
xor
mov
fs
push
rcrb
pop
mov
adc
cmp
das
lods
push
and
fcoml
jbe
pop
push
sti
cmpsl
cmpsl
mul
push
cmp
loop
inc
daa
into
push
or
dec
divl
stos
cmp
pop
loopne
jmp
and
outsb
push
out
sti
mov
dec
cmpsl
les
dec
cmpsl
xchg
addb
shrb
inc
mov
adc
ja
ljmp
adc
fstpt
pop
gs
xchg
ret
sbb
addl
pushf
icebp
inc
fs
lret
pushw
add
xor
and
mov
cmp
inc
cmp
or
push
test
out
jge
test
jns
ljmp
mov
popf
dec
fsts
cmp
popf
pop
mov
in
cmp
sahf
loope
decl
dec
addr16
push
mov
and
mov
jecxz
and
pushf
lcall
and
ret
sbb
lcall
adc
or
mov
incl
inc
daa
fildl
int3
mov
jle
cmp
les
aas
mov
inc
jo
or
lods
ds
mov
lock
mov
mov
mov
test
cmp
or
sarb
bound
jo
jb
pushf
shrb
out
or
imul
mov
div
pop
rol
in
les
imul
mov
cmc
push
imul
xchg
add
mov
adc
and
repz
mov
in
dec
fadds
movsb
push
test
mov
sub
xchg
mov
scas
sti
lods
out
test
enter
lret
sub
push
out
rcrl
mov
enter
pop
pop
mov
and
jg
xchg
mov
aam
cmp
lods
lret
in
mov
scas
sub
mov
jne
sbb
test
scas
and
pushf
push
dec
pop
lods
gs
mov
aam
or
jle
icebp
adc
je
push
aaa
ljmp
xlat
cmp
xor
js
inc
icebp
lret
fmuls
lock
adc
push
and
cmpsl
xchg
push
cmp
stos
jbe
add
dec
xor
xlat
or
and
ss
outsb
fcoml
loopne
mov
iret
cmp
add
daa
or
jbe
and
sub
int3
leave
aas
in
adc
stos
jno
lds
mov
inc
loope
sbb
pop
fidivrs
push
outsb
push
mov
push
mov
xor
or
or
out
jmp
mov
pop
jg
mov
dec
pop
movsb
mov
idivl
dec
xor
outsl
adc
push
sahf
inc
jp
sbb
outsb
lahf
mov
rclb
xchg
insb
and
dec
sbb
dec
roll
inc
lods
jmp
xor
test
sbb
push
nop
jg
and
push
mov
sar
dec
bound
fldt
mov
mov
jp
stos
dec
mov
jecxz
sub
clc
dec
movsl
cli
cld
jb
sub
mov
ljmp
or
mov
jp
cmp
rep
and
cwtl
sti
mov
jg
cmp
mov
cltd
loopne
pushf
mov
pop
stos
loopne
dec
das
cmp
jbe
sub
jmp
xchg
lods
push
and
jmp
fldcw
and
push
popa
adc
jno
test
insl
aaa
mov
repz
mov
fmuls
mov
pop
stc
loop
mov
mov
inc
and
clc
in
sbb
add
mov
repz
jge
and
sub
dec
xor
xchg
rorl
out
sahf
test
dec
cmovl
xchg
mov
push
ss
jg
jg
rolb
jne
or
cmpsl
enter
and
ljmp
ja
sub
xor
inc
mov
lea
and
cmpsl
and
xchg
ljmp
and
sub
fisttpll
lea
jle
jno
jo
push
push
in
xchg
add
ret
gs
mov
push
cmc
rcr
test
xchg
mov
inc
sbb
push
and
fldcw
cli
ficomps
stc
inc
das
mov
pop
stos
mov
xchg
cwtl
mov
jb
dec
xchg
and
syscall
fmuls
sahf
xchg
mov
push
sub
push
inc
xchg
scas
ss
add
xchg
pop
sub
fnsave
dec
xor
icebp
sub
sbb
flds
pop
pop
push
popa
mov
inc
outsl
and
imul
cmp
call
xchg
sub
fimuls
jno
shl
fistl
nop
push
jg
imull
jo
inc
arpl
sbb
add
jnp
call
xlat
pusha
jp
inc
das
es
outsl
xchg
jae
fsubrs
mov
xlat
shrl
std
pushl
pop
jae
jno
stc
pusha
xchg
and
negb
es
xchg
shl
adc
popf
clc
mov
sbb
fsts
pop
push
ret
and
pop
xor
pop
call
scas
call
les
pusha
xlat
inc
mov
xchg
inc
negl
dec
daa
push
mov
and
sti
mov
gs
ret
das
stos
push
into
stos
daa
mov
pop
subl
mov
and
fidivrs
jae
ficoms
int3
jb
or
in
push
adc
stos
sub
lcall
arpl
cmp
test
xchg
xlat
test
inc
loop
addr16
sub
inc
out
sti
mov
jbe
lret
cmpsl
iret
pop
scas
ret
xor
inc
jb
push
mov
mov
lcall
jnp
mov
in
testl
jmp
std
sub
call
out
int
jo
cmp
js
shl
in
insb
add
cmp
hlt
jmp
push
insl
dec
sub
icebp
jno
lret
aam
fiadds
int3
cmp
add
jno
stc
aas
sub
jbe
dec
xchg
push
dec
cmc
and
push
sahf
aas
enter
cmp
fnstsw
cmc
fs
std
xor
mov
loopne
in
jl
sub
sbb
xor
sub
or
mov
int
cld
jno
push
stos
out
push
fidivl
bound
das
je
lahf
fdivrl
adc
iret
fdivs
cmpsl
lahf
xchg
pop
jno
push
pop
and
inc
or
cmpsl
ljmp
out
push
out
xor
jecxz
outsb
jns
dec
jmp
add
jp
adc
sarb
dec
and
mov
pop
adc
adc
je
xor
lret
aam
inc
inc
inc
je
pop
js
popa
lret
repnz
test
mov
mov
xor
ss
xor
cmp
cmpb
and
aas
xor
in
mov
push
enter
jno
in
test
xchg
or
les
dec
inc
jbe
int
addl
mov
mov
pop
cmp
adc
add
cld
jbe
outsl
or
jle,pn
daa
mov
mov
xchg
jg
mov
inc
imul
or
sti
push
loope
jb
mov
lods
push
mov
in
shlb
xchg
push
xor
mov
outsl
push
and
pop
mov
ret
cmp
dec
cmp
lock
sahf
jne
test
pusha
les
jnp
push
test
mov
fs
into
cmp
xchg
inc
sbb
lock
out
or
fimuls
dec
ret
xchg
pop
mov
jo
inc
add
mov
and
aas
dec
ret
push
and
stos
aaa
xchg
mov
fstps
stc
popf
pop
pop
inc
jecxz
ja
aaa
popf
loope
jbe
in
out
mov
clc
in
dec
lret
jae
fcom
fimull
xor
xchg
adc
push
roll
cld
insl
xchg
pop
xor
add
icebp
outsl
and
push
pop
imul
mov
cmp
cmp
popf
mov
mov
sub
and
push
adc
add
lds
cltd
inc
lods
cwtl
out
repnz
pop
jns
cmp
aad
pushw
mov
sub
xchg
pusha
sub
lods
mov
dec
es
cmp
add
mov
arpl
fsts
out
jl,pt
lock
in
clc
test
ret
sbb
cli
loop
icebp
scas
sbb
shl
lret
mov
stos
aam
xor
fcoml
adc
popa
outsl
sbb
idivl
sbb
mov
in
lds
test
lret
pop
cmp
push
shrb
stc
xchg
lods
int
or
ret
ret
pop
jo
xchg
movsb
int3
inc
push
into
add
adc
sarb
or
jg
jbe
mov
call
inc
in
mov
movsb
xor
or
dec
pop
daa
outsl
cmpsb
jp
mov
ljmp
mov
in
hlt
xrelease
out
fbstp
mov
xor
or
xor
insl
std
push
inc
in
push
std
divb
lds
mov
or
dec
data16
movsl
in
inc
pushf
pop
fiadds
mov
jle
jbe
xchg
xor
xor
xor
pop
inc
xchg
and
fmuls
pop
mov
repnz
cli
scas
scas
mov
aam
xchg
ja
xor
loop
test
outsb
mov
mov
icebp
xor
bound
cli
das
or
testb
push
ljmp
iret
mov
push
dec
pop
mov
pop
leave
mov
ficompl
lahf
int3
testl
repnz
jb
sbb
inc
in
shlb
mov
pop
mov
popa
or
push
std
push
xor
xchg
xlat
imul
xlat
ret
sub
add
adc
push
xor
mov
gs
faddp
or
mov
aas
and
negb
es
sti
mov
dec
call
leave
shll
xchg
jbe
and
and
out
stc
outsl
adc
cmp
fdivr
mov
pop
or
pop
add
mov
jecxz
stos
test
fdivl
mov
mov
mov
xchg
enter
in
jp
mov
add
rorl
jbe
mov
pop
and
pop
in
xchg
adc
push
lcall
mov
andb
dec
add
sbb
es
ds
lods
adc
clc
pop
stc
push
xor
nop
rorl
repnz
repz
loope
sub
or
mov
outsb
mov
les
cmp
dec
fcmovu
mov
andb
push
adc
xchg
push
jecxz
xor
pop
lods
and
cmp
popa
insb
cmp
pop
or
jbe
inc
and
mov
or
jmp
cmc
xorl
adc
stc
and
mov
inc
or
aaa
lret
loope
add
cld
pop
sti
jne
sbbb
nopl
dec
sti
jl
dec
push
sahf
push
dec
cmp
jbe
and
insl
pop
fwait
dec
xor
push
sbb
popf
mov
sub
jo
sub
movsb
shlb
mov
rcr
dec
or
into
lea
sar
into
add
addr16
mov
mov
int3
and
data16
pushl
jge
cld
sub
xor
fnstenv
xchg
int3
fwait
ss
mov
push
lcall
mov
sbb
mov
je
sbb
rcrb
jl
cwtl
xor
mov
sbb
insb
popa
shld
pushf
pushf
add
xchg
pop
dec
fstps
fwait
lret
insb
xchg
nop
cwtl
pusha
stc
push
ljmp
mov
pop
push
push
xchg
enter
xor
cmp
dec
cmpsb
xchg
es
push
lahf
xlat
cwtl
sub
inc
or
cmp
jae
dec
fimull
sub
mov
xor
dec
pop
into
daa
xchg
jmp
or
push
inc
sub
mov
sbb
addr16
aam
loopne
inc
incl
mov
aam
inc
cmp
pop
enter
test
les
xor
push
xor
jge
jg
popa
sub
pushf
mov
mov
mov
std
fisubs
jb
dec
push
jg
aaa
in
dec
cwtl
fnstsw
mov
xchg
in
mov
mov
push
jb
imul
fistpl
imull
pop
inc
mov
sahf
sahf
call
je
pop
jno
cmp
nop
cmp
cli
lods
adc
dec
arpl
mov
sub
add
or
sti
js
cs
in
adc
add
add
adcl
repz
pop
pop
addr16
jo
icebp
shrb
push
dec
add
push
bound
push
dec
or
popa
push
pop
pusha
idivl
test
and
add
and
filds
lds
xchg
or
cmp
jmp
fiadds
or
push
das
mov
mov
pop
sub
xor
out
fsub
push
ds
arpl
adc
nop
cli
mov
sahf
cmp
pop
into
add
cmp
loope
call
cltd
call
adc
cmpsl
nop
xor
and
cld
sbb
ja
scas
pop
push
jns
or
xchg
or
and
cwtl
int3
lret
dec
or
icebp
repz
loopne
push
add
jg
repz
dec
in
pop
aad
or
aaa
addr16
pushw
push
loop
pop
push
sti
mull
xchg
jmp
lret
jnp
and
mov
ror
int
andl
adc
lahf
mov
into
fidivrs
js
xchg
out
nop
cltd
iret
sbb
pop
in
xor
mov
fisttpl
mov
les
lahf
imul
test
jns
fstl
adc
xor
mov
call
and
popf
push
or
sub
mov
stc
popa
xchg
dec
mov
ds
divl
add
fnsave
xor
aas
xchg
lret
insl
jmp
cmc
sbb
orb
loopne
dec
jne
xchg
mov
push
cmc
lea
imul
mov
lods
mov
ds
ret
and
ds
xor
pop
adc
push
push
dec
aas
test
mov
fisubs
aas
lret
and
ss
push
xchg
aas
mov
aaa
adc
jbe
add
jge
fwait
add
cmpl
cmc
push
fistpll
repnz
inc
fstl
outsl
inc
fcompl
add
adc
lret
fcomip
je
daa
pop
push
pop
and
or
xlat
lret
or
push
jecxz
push
loopne
jg
pop
sbb
and
inc
insb
push
xchg
dec
sub
adc
leave
or
inc
mov
push
lahf
test
jns
movsb
jo
mov
or
rcrl
mov
inc
divb
sub
xchg
mov
je
mov
adc
dec
sub
pop
outsb
push
xchg
loop
mov
repz
rolb
negl
or
sbb
das
ja
loopne
sti
mov
mov
cli
xor
push
add
jmp
sti
push
mov
fistps
xchg
pop
jns
nop
ljmp
dec
mov
mov
adc
mov
in
jecxz
test
in
arpl
and
add
aad
mov
call
push
movsb
cmp
or
js
or
das
jnp
push
push
adc
xorb
fisubs
pop
mov
fstpt
and
jmp
ret
into
mov
adc
fst
arpl
fsubr
movsl
lods
xchg
repz
repz
add
dec
or
pop
in
callw
out
add
test
cmpl
leave
fcoml
in
jae
jmp
cmpsl
idiv
icebp
add
mov
imul
mov
dec
xchg
xchg
inc
fsubl
mov
jmp
push
fidivrs
inc
xchg
adc
xchg
sub
dec
pop
shlb
in
xchg
mov
or
inc
or
mov
inc
aas
cmp
mov
cmp
mov
or
pushf
sub
mov
hlt
jecxz
add
mov
in
xchg
test
xchg
out
adc
jg
jbe
adc
jl
sti
add
add
jno
mov
mov
ret
int
mov
inc
filds
js
pop
std
push
nop
hlt
in
xchg
aas
scas
mov
repz
or
xor
jns
inc
mov
xchg
add
ss
or
in
cmpsb
adc
add
inc
jnp
in
test
dec
push
outsl
imulb
cli
cmp
pop
pop
test
leave
sahf
cmpsl
push
inc
scas
cmp
xchg
js
hlt
shrb
mov
lock
clc
mov
sahf
jecxz
jmp
inc
stos
pop
movsb
xor
cmc
pop
hlt
movsl
jns
cmpsb
adc
inc
iret
xor
jecxz
dec
dec
in
sbb
int3
and
cmp
cwtl
or
dec
xchg
mov
call
inc
adc
xchg
in
and
int3
iret
or
test
rcrl
loop
sbb
jmp
cli
mov
mov
movsb
xlat
xchg
sti
sti
enter
fwait
or
adc
mov
dec
in
dec
lret
cmp
pop
mov
pop
cmc
lret
jne
sbb
lods
lock
jae
push
lods
mov
adc
insb
jb
lods
mov
mov
jg,pn
inc
or
aam
leave
es
js
push
mov
int
cwtl
fmuls
ret
inc
rcrb
cmpsb
cmc
mov
xchg
mov
xlat
pop
push
xchg
dec
inc
add
loopne
scas
fwait
jle
mov
out
subb
loope
faddl
negb
sub
push
pop
mov
pop
leave
std
xorb
out
not
ret
jp
sub
fs
sarb
push
fisubrl
loope
push
sarl
mov
push
dec
and
pop
rorb
shrb
jb
cmp
xchg
fisubrs
mov
cmp
xor
push
xchg
stos
enter
icebp
xchg
stc
call
aam
scas
inc
inc
xchg
cmp
mov
adc
repnz
dec
mov
sbb
jb
lea
movsl
outsb
inc
sub
imul
xchg
loopne
sub
push
fdiv
insl
mov
push
jp
push
sub
lahf
scas
pop
jp
cld
int
decb
jo
test
leave
loop
cmp
out
inc
mov
mov
rcrb
and
std
ja
das
hlt
pusha
inc
adc
adc
leave
adc
loope
cs
push
inc
dec
jl
cld
pop
call
mov
test
scas
adc
inc
dec
mov
fidivs
or
xchg
mov
lds
xor
mov
daa
mov
fnstenv
jg
sahf
mov
in
jg
call
stos
sbb
pusha
aas
sbb
test
dec
cmp
pop
aas
sub
in
jb
jno
cmp
hlt
cmp
sub
dec
add
push
stos
inc
pop
arpl
jb
pop
pop
cmc
insb
shlb
and
movsl
sub
std
pop
mov
out
lds
js
cmp
xor
add
aam
out
jns
cmp
aaa
js
mul
dec
jp
out
icebp
sahf
mov
orb
imul
adc
repnz
and
das
insl
push
jnp
dec
jne
pop
and
jno
jle
mov
test
dec
cmp
mov
dec
lret
insb
outsb
mov
mov
shlb
push
sbb
jmp
adc
sbb
adc
jle
dec
lret
shrl
ss
testl
ja
jno
inc
ds
xchg
loope
adc
jns
fisubs
cs
pushf
jnp
add
adc
jnp
lahf
lods
cmp
xchg
inc
xchg
and
stos
outsb
or
cli
jmp
pop
jge
imul
test
and
mov
movsl
outsb
sub
testl
fldcw
sub
cmp
mov
mov
js
add
xor
ret
mov
mov
jno
out
test
ljmp
add
cmp
mov
jg
fcoml
addl
lock
pop
jo
jno
jno
into
pusha
pop
mov
lds
adc
push
inc
push
fdivl
test
shrl
inc
clc
cmp
in
jp
repz
inc
cmp
iret
or
out
adc
pusha
adc
xor
xchg
xor
insl
add
push
mov
pop
test
popf
push
sbb
jp
cmpb
insl
sbb
xor
or
cmp
mov
lret
shr
dec
jo
inc
pop
pop
cltd
mov
iret
xor
psrad
pop
mull
push
popf
cld
filds
jnp
pushf
mov
daa
sbb
inc
insb
fistps
sub
int
andb
testl
jge
sub
movsl
inc
lds
cltd
movsl
cmp
mov
fildll
popa
call
mov
add
add
popa
xchg
lock
cmpsl
inc
repz
stc
inc
test
shrl
cmp
mov
fmuls
icebp
in
dec
xchg
mov
push
sub
repnz
mov
pop
pop
xor
les
outsl
aaa
mov
stc
adc
pop
push
aas
icebp
sbb
jl
cmpb
mov
pop
dec
or
add
xchg
and
xor
jg
sbb
dec
mov
mov
cltd
lret
divps
test
inc
jge
pop
dec
not
xor
in
cmc
mov
inc
pop
nop
push
call
pop
cwtl
mov
imul
pop
push
ret
jno
test
repnz
jmp
loope
and
mov
inc
sbb
hlt
add
jmp
xor
shlb
mov
xorl
notl
fwait
push
xchg
imul
ljmp
mov
mov
scas
test
movsb
jae
pop
mov
rorl
jl
push
cmc
loopne
mov
sub
test
pop
cs
sub
and
repz
dec
dec
insb
push
sub
mov
cmpsb
mov
or
in
inc
adc
cmc
cmp
jle
pop
int
dec
push
push
ss
in
mov
ja
dec
cs
lcall
sbbl
pop
insb
add
outsb
inc
push
mov
mov
adc
mov
xchg
cmpsb
jne
repnz
fistps
adc
push
mov
aam
repz
in
aad
jg
mov
push
or
ss
sbb
out
icebp
lret
mov
addr16
ljmp
jae
mov
add
mov
ret
sbb
rcrb
dec
pop
loopne
mov
or
test
fisubrs
in
std
mov
or
xchg
cmp
mov
outsb
xor
stc
dec
ja
popa
enter
mov
test
les
mov
push
sbb
mov
mov
push
loop
mov
insb
ret
xchg
pop
fidivl
and
mov
lahf
xchg
mov
and
in
inc
pop
clc
ds
and
daa
lods
mov
pop
xor
aaa
sub
pop
pop
jo
mov
jno
jnp
push
leave
enter
fdivl
pop
andb
ja
pop
pop
test
mov
xchg
out
mov
xlat
scas
cmp
mov
or
dec
lahf
clc
inc
push
cmp
fsubl
mov
xchg
mov
dec
pop
into
push
and
push
mov
int3
pop
js
outsb
ljmp
cs
std
cmpsb
cmpb
sahf
popf
cmpsb
and
xor
addr16
loope
cli
dec
sub
cmp
loop
cmp
and
sub
add
jno
pop
mov
xchg
xchg
jae
out
jbe
add
mov
push
stc
jb
pop
and
push
mov
or
add
mov
dec
jno
mov
lcall
lods
xchg
jb
in
js
ja
inc
sbb
sub
and
cmpb
aas
aam
or
inc
lods
cmp
ss
xor
dec
ret
mov
test
or
insl
push
push
jo
mov
lods
push
and
fwait
adc
cmp
mov
fisttpl
xor
cmc
rcr
pushf
adc
fadds
pop
sub
pop
imul
out
xchg
inc
dec
push
inc
and
and
test
scas
adc
cwtl
in
loop
mov
in
pop
je
or
cmp
xchg
mov
and
sbb
xor
scas
in
fistpll
adc
cmp
adc
lods
pop
fimuls
into
mov
cld
pop
nop
xchg
jns
or
ljmp
xlat
adc
mov
lret
stos
or
inc
cld
testl
ret
cmp
sti
mov
orl
pop
jo
push
hlt
xchg
cltd
adc
mov
pop
lock
iret
cmp
cli
lods
lahf
and
ret
dec
iret
ss
jno
pop
hlt
jnp
mov
inc
clc
and
sub
cli
push
dec
cmp
mov
sub
mov
pop
add
xchg
lret
adc
mov
pop
and
inc
ss
sbb
inc
dec
mov
sub
ss
ds
mov
pop
jecxz
mov
popf
nop
popf
adc
and
sti
outsl
fimuls
mov
sub
xlat
js
mov
in
or
lahf
test
arpl
xor
add
pop
xor
xchg
or
jae
jmp
arpl
rcll
inc
sub
xchg
jno
dec
loop
fmull
or
pop
mov
adc
clc
jo
shlb
icebp
and
cmpsl
mov
mov
out
lea
xchg
aad
xchg
in
jne
push
mov
roll
jl
push
sahf
dec
or
in
and
js
xchg
fs
xchg
test
movsl
push
scas
je
repnz
sub
fidivrl
dec
lds
dec
xchg
adc
lods
push
fucomi
and
inc
negl
inc
icebp
sti
dec
roll
lret
mov
sub
mov
mov
notb
mov
pop
dec
sub
jle
xchg
out
out
xchg
xchg
xchg
stos
out
xor
cmc
sub
ljmp
lods
xchg
lcall
dec
inc
mov
xchg
dec
imul
add
outsl
add
daa
sbb
jno
lret
push
cld
pop
scas
add
pop
jecxz
sub
sahf
inc
pusha
sub
sub
and
cwtl
mov
lods
mov
inc
and
loope
adcl
imul
sbb
aaa
jp
mov
and
mov
lret
mov
inc
dec
adc
popf
ret
mov
lret
rcrb
rorb
test
out
pop
loopne
stos
jp
fisubrs
mov
in
jne
pop
or
inc
sub
pop
and
mov
outsl
push
rcrb
xor
dec
mov
and
addr16
ds
push
outsl
sub
mov
lea
mov
push
test
subb
xlat
xchg
loope
jbe
jae
push
jle
inc
xchg
scas
in
push
out
in
nop
or
orb
sbbl
stos
adc
out
xor
push
jbe
cmp
js
mov
adcl
aad
jle
lods
xor
mov
mov
jno
and
jge
dec
jmp
jno
into
sub
lahf
sbb
mov
mov
pop
lahf
mov
pmaxsw
xchg
lea
sub
clc
mov
pop
inc
jnp
loopne
or
outsb
mov
cmp
pop
jo
dec
lock
stc
inc
or
cmp
cltd
inc
pop
rclb
aas
cmp
mov
cmp
lret
outsl
xor
pop
jl
mov
cmp
pop
fs
sbb
pop
mov
push
stos
decb
add
jnp
xchg
je
cld
xchg
dec
jecxz
in
dec
xchg
addr16
repz
in
mov
les
decl
aad
or
dec
jg
sub
icebp
or
dec
cmp
pop
adc
cmc
addr16
adc
xor
jg
sub
test
popa
popf
push
or
ss
movsb
repnz
sbb
sbb
mov
stc
out
icebp
jb
popa
iret
in
insl
mov
imul
movsb
or
mov
and
mov
cwtl
jne
adc
flds
cli
inc
xorl
jg
dec
xor
sub
adc
mov
sbb
dec
add
push
push
lds
fsts
dec
add
inc
mov
dec
int3
mov
add
mov
or
push
shlb
push
fsubrs
pop
leave
mov
lcall
sbb
xchg
inc
lahf
sub
xchg
test
mov
inc
js
arpl
iret
in
loopne
arpl
fsubr
ret
or
adc
faddl
into
sub
leave
xor
icebp
lods
xor
mov
xchg
pop
sub
sbbl
jg
sub
add
xor
les
scas
push
lcall
jnp
pusha
pop
jns
mov
jp
or
cmpsb
dec
inc
imul
popa
or
inc
dec
leave
cmp
lods
adc
and
dec
fcomps
mov
mov
loope
inc
mov
or
add
jb
pop
clc
dec
call
adc
or
add
inc
cltd
cli
lahf
mov
and
push
xor
inc
or
xor
inc
sarl
mov
shlb
xchg
imul
ja
decl
or
mov
mov
ljmp
popa
jo
push
xlat
cmp
bound
jnp
inc
xor
add
jmp
inc
xor
push
add
idivb
mov
dec
cltd
cli
inc
in
shrl
and
pop
xor
stc
sbb
jbe
add
sub
mov
adc
into
out
sti
push
lahf
xlat
dec
inc
cmp
jae
scas
push
or
sub
push
inc
imul
cmc
add
call
pop
push
sub
mov
cmp
aad
push
popf
addr16
addl
xchg
test
test
push
je
movsb
jmp
aad
clc
mov
fnstenv
insb
and
lock
cltd
xor
pop
std
xchg
pop
cmc
stos
pusha
mov
jae
testb
addb
push
outsl
push
addr16
sbbb
jle
or
sbb
pushf
cld
fimull
mov
stos
pop
mov
arpl
xlat
out
inc
iret
push
mov
xchg
shll
push
pop
add
cmp
fcoml
por
inc
cli
pop
into
lret
sbb
inc
ret
in
clc
xchg
dec
jb
addr16
sub
pop
movsb
sti
popf
dec
adc
fcomp
mov
dec
push
pop
sub
cmpsl
out
jno
lret
sub
jp
push
leave
pop
stc
jne
std
sub
push
adcl
leave
cwtl
inc
insl
cmp
leave
pop
sbb
in
mov
mov
fdivr
mov
sbb
mov
cmpsl
mov
outsl
push
push
test
xor
divb
push
sbb
test
test
test
inc
outsb
add
movsl
jg
imul
mov
lahf
mov
push
mov
scas
insb
ja
cmc
jnp
std
rcr
mov
mov
lock
ljmp
in
fs
mov
popf
pop
ja
pop
sub
dec
and
out
dec
mov
inc
dec
lods
cmpsl
inc
lods
adc
xchg
jp
jne
sbb
pop
cli
cmp
fcoms
mov
add
push
cmp
ss
ds
ja
xchg
bound
push
mov
mov
lods
mov
mov
push
pushl
mov
repnz
mov
gs
cmc
xchg
lret
std
lret
mov
sub
xlat
popf
jnp
pop
rolb
stc
mov
lods
in
jns
push
scas
and
sti
adc
daa
adc
fstpl
sbb
in
jl
mov
stc
addb
pop
and
mov
mov
mov
lret
idivb
out
sub
mul
stos
and
gs
sub
incb
fidivrs
pop
inc
pop
es
iret
popa
hlt
loop
outsl
lds
movsl
into
rolb
call
fdivl
gs
lods
aas
daa
mov
xor
inc
xor
push
cmp
mov
push
inc
cmp
nop
jle
pop
cmpsl
cmp
lods
lock
aam
sbb
jmp
test
ss
stos
aaa
movsl
jg
out
push
mov
or
lret
cmp
mov
xor
and
add
js
pop
es
in
ja
mov
fnstsw
mov
xchg
lock
stos
mov
jb
in
je
scas
clc
nop
adc
les
jae,pn
or
pop
inc
das
jae
enter
daa
add
adc
lret
push
push
daa
pop
movsb
mov
into
jg
sub
xchg
lahf
mov
mov
or
and
add
andl
cmp
jecxz
in
pop
sti
movsb
fstpt
push
fcomps
inc
out
movsl
test
lahf
int3
inc
mov
inc
mov
adc
push
pop
or
push
out
inc
int3
pop
sub
mov
in
jne
fisubl
and
cmc
test
cmp
mov
jg
les
jnp
and
test
mov
adc
fdivr
mov
inc
and
and
jle
daa
xor
sub
sub
mov
imul
mov
fbld
fwait
out
imul
int
pop
scas
pusha
xor
imul
dec
icebp
stos
jb
in
xor
icebp
fcmovne
dec
and
push
mov
pushfw
scas
adc
push
push
in
adc
pop
sbb
adc
sub
mov
lret
pop
mov
filds
mov
mov
addr16
pop
and
add
stos
mov
lods
sti
sbb
fdivl
bndldx
adc
loop
and
pop
aaa
andb
xchg
test
mov
pop
adc
mov
dec
lret
or
bound
and
ja
sbb
or
mov
sbbb
xor
dec
jge
pop
test
adcl
mov
jl
inc
mov
xchg
fstpt
stos
leave
mov
mov
mov
pop
mov
call
or
pop
popf
jno
mov
push
or
data16
mov
jge
add
dec
push
sub
adc
js
mov
lods
xchg
cld
pop
sub
cmp
push
jecxz
xchg
sub
gs
gs
les
in
stos
pop
nop
ja
xlat
lret
daa
push
push
adc
mov
jo
or
push
test
popf
ljmp
mov
sub
enter
pusha
lret
dec
lcall
rcrl
mov
pushw
jg
adc
mov
sub
mov
push
call
orb
call
jbe
imul
in
mov
ret
jecxz
cmc
lahf
cmpsl
lock
fucomp
and
adc
push
inc
sti
ret
lods
loopne
jne
mov
popa
cltd
xor
fcomi
dec
mov
mov
cmp
add
jno
add
decb
dec
inc
pop
cmp
jne
and
in
mov
dec
fadds
sub
and
cmp
pop
jp
aam
jl
fwait
repnz
mov
sub
lret
mov
popf
sub
fadds
popf
dec
or
pushf
pushf
punpckhdq
cmp
fldl
adc
mov
sub
outsl
dec
gs
mov
scas
push
xchg
add
div
xchg
icebp
nop
call
sub
mov
push
push
scas
or
scas
push
jecxz
mov
jo
shll
jge
cmp
pop
popf
mov
jg
xor
test
in
xchg
rcr
in
push
jmp
add
sahf
pop
rcr
mov
lahf
xor
push
dec
jle
push
cmp
les
mov
pop
mov
out
dec
das
dec
ja
sbb
ljmp
lahf
mov
jl
call
scas
or
jo
jns
mov
arpl
pop
mov
dec
rol
sub
adc
mov
push
orb
inc
sbb
scas
arpl
out
adc
adc
jns
shll
nop
sahf
add
pop
int
fs
lods
jbe
inc
out
loopne
or
mov
cld
fistpll
cmpsb
iret
mov
push
ds
xlat
incb
mov
sub
push
cmp
xchg
add
push
imulb
test
stc
pop
push
dec
push
sub
mov
jo
pusha
or
push
or
std
xchg
fwait
lret
movsb
popa
xor
loop
shlb
fs
pop
add
jo
jnp
sti
jle
decb
mov
jno
les
push
and
cli
lcall
lds
or
jmp
test
loop
and
mov
mov
cld
adc
jg,pt
mov
sbbl
and
shlb
test
outsw
int3
jecxz
jb
outsb
dec
dec
jnp
int3
sub
jmp
dec
cmp
repnz
cmp
mov
sti
jb
gs
sub
sub
imul
icebp
dec
dec
inc
jbe
test
push
out
lahf
jno
xlat
daa
sbb
adc
cmp
mov
pushf
add
andl
cmp
lds
and
lcall
mov
push
imul
cld
fistl
out
mov
inc
je
mov
hlt
mov
fdivl
cwtl
std
add
outsb
mov
xor
cmpsb
cwtl
add
push
push
inc
mov
push
rorl
sbb
jns
aad
mov
clc
popf
stos
inc
test
and
loop
xchg
jg
mov
ja
shlb
stos
iret
lret
lcall
das
mov
out
outsl
xor
inc
out
sbb
imul
repnz
push
adc
out
adc
lret
sub
sub
push
adc
jmp
mov
lods
inc
movsl
fs
pop
mov
mov
fdiv
push
pushf
popf
cmp
cwtl
lcall
loopne
fisttps
jb
movsl
mov
push
shlb
insb
ja
cmp
push
jge
hlt
mov
and
imul
push
mov
sbb
adc
lahf
add
scas
fldt
into
xor
xor
mov
ss
mov
outsb
push
xor
ljmp
shlb
call
sbb
in
int3
fucom
in
mov
mov
roll
adc
mov
inc
push
push
daa
push
cmpsl
outsl
pop
cmpsl
dec
and
aam
fdivs
mov
push
imul
xchg
popl
cs
inc
lods
adc
dec
pusha
jg
adc
cld
push
mov
dec
mov
xchg
push
mov
mov
pop
jbe
xchg
lock
movsb
fwait
imul
mov
pushf
or
xchg
test
jmp
or
ss
mov
mov
popf
inc
out
enter
cli
test
cmp
xchg
adc
repnz
mov
fildll
in
addb
mov
inc
fs
movsl
xor
sub
inc
xchg
dec
gs
movsb
ret
xchg
adc
movsb
sbb
push
or
add
jecxz
mov
shr
xor
mov
addb
addl
in
xchg
mov
popa
mov
or
sbb
and
pop
push
aad
and
push
hlt
inc
push
aad
inc
fmul
pop
bound
inc
sub
jmp
add
call
cwtl
aas
insl
in
adc
add
das
inc
movsb
lret
push
std
inc
out
insb
imulb
int3
xor
pop
inc
cltd
push
cmp
lcall
pop
xchg
out
rorl
pop
or
xor
mov
cmp
mov
xchg
xor
or
mov
stc
mov
fs
or
negb
jge
fldenv
mov
mov
je
jne
push
cmp
test
sub
xor
or
inc
loope
inc
sbb
adc
cwtl
xchg
test
mulb
inc
mov
lds
mov
add
mov
imul
xor
dec
pop
xchg
add
jg
inc
xchg
lock
cmp
nop
mov
cwtl
es
sub
imul
adc
into
or
or
and
sbb
pop
ds
or
pop
ja
std
jb
xor
xchg
inc
out
pop
mov
sub
jno
lock
outsl
inc
popa
jp
call
pusha
jl
push
popf
mov
mov
das
add
in
pusha
shlb
add
gs
je
lcall
out
cmp
xchg
sub
orl
xor
mov
adc
hlt
push
outsb
xor
pusha
mov
repz
xchg
push
movsb
je
dec
leave
fadds
popa
out
push
jns
cltd
test
loopne
popa
test
mov
or
jg
imul
pusha
xlat
dec
jns
out
dec
and
lods
mov
pop
shl
ds
xchg
xchg
loop
out
sub
pop
aas
push
out
and
jo
push
jno
xchg
dec
mov
xchg
and
xlat
repz
std
dec
cmp
leave
inc
xor
mov
sti
push
rep
xor
jo
cmp
sbb
pop
push
loope
shll
pop
je
jmp
mov
cmp
imul
in
sbb
pop
dec
shl
inc
fcomp
fistps
out
xor
push
ret
ret
add
test
mov
push
enter
dec
fldl
aad
xlat
push
outsl
nop
cmp
imul
out
push
or
push
xor
mov
lea
jp
es
adc
pop
loop
mov
xchg
mull
xlat
xchg
loop
cld
mov
andl
shl
int3
xchg
cmp
icebp
jmp
int3
data16
popa
enter
enter
jo
cmp
xchg
fst
cli
lahf
lods
mov
leave
daa
lea
cs
mov
sbb
sarl
xchg
scas
movsb
push
out
jo
mov
mov
jg
jbe
pushl
mov
sbb
adc
dec
mov
push
fstpt
outsl
push
or
xor
jo
and
iret
pop
mov
and
adc
sbb
adcl
aaa
push
fildll
cld
stos
stos
pop
adc
scas
dec
enter
and
les
mov
inc
rcrb
cmc
mov
fildl
inc
inc
ror
sub
pop
mov
jno
roll
or
mov
sahf
xor
mov
stos
sub
repnz
add
ret
roll
sar
popa
sbb
jno
shll
notb
adc
dec
cmc
loop
mov
mov
fimull
jae
icebp
dec
aad
mov
push
dec
pop
sub
clc
mov
cld
mov
jmp
dec
cwtl
dec
cwtl
mov
notl
xor
stos
fcoml
loopne
and
imul
bound
mov
jmp
cmp
mov
cli
aaa
sub
fucomi
dec
aad
mov
shrl
hlt
aaa
push
movsl
leave
stos
jmp
push
ds
lret
push
dec
add
cmp
adc
xchg
outsl
jbe
push
cltd
push
mov
and
js
mov
jne
and
sub
adc
mov
fsubs
or
adc
shlb
aam
adc
pop
leave
lea
push
bound
sub
out
int
test
jmp
mov
dec
loop
rorl
mov
pop
cmp
fucomp
fnstenv
movsl
jp
inc
push
loopne
jmp
ja
xchg
dec
fistpl
popf
cmpl
sti
xchg
jmp
fnstsw
out
enter
loope
je
jne
loope
sti
nop
loope
mov
xchg
sub
mov
push
mov
push
sub
cmp
add
push
out
dec
lcall
cmpsb
les
cmp
and
bound
aas
inc
add
mov
shll
sar
repz
icebp
push
in
add
adc
lret
mov
jle
xchg
add
rolb
xor
sbb
dec
cmp
call
ss
jecxz
pushf
jns
or
mov
shrl
inc
nop
mov
mov
rcrb
cmpsl
std
popa
pop
hlt
addl
inc
out
jns
inc
sbb
xchg
lea
xor
xorl
sbb
inc
in
pop
mov
and
jae
sub
push
sub
or
sbb
mov
jne
mov
shl
or
mov
pop
pop
out
test
push
or
inc
xchg
xor
dec
mov
imul
shrl
roll
sub
cld
mov
xchg
cmp
mov
int
outsb
mov
xlat
jg
repnz
sbb
test
xchg
arpl
sub
mov
cld
jne
mov
and
mov
addr16
jb
testl
ljmp
xchg
dec
lds
aam
add
cmp
jns
mov
int3
push
jne
cs
lcall
add
outsb
aaa
push
aam
jae
jne
pop
pushf
lcall
hlt
in
dec
cs
pop
xor
lods
outsl
mov
fcom
add
iret
insb
ljmp
pop
ljmp
idivl
jno
lods
inc
sbb
sbb
push
cld
jge
pop
add
and
enter
into
pop
pusha
dec
jbe
sbb
push
sub
mov
mov
sub
mov
mov
and
mov
jmp
mov
lds
test
lods
lcall
incl
push
loopne
adc
fs
arpl
cld
add
add
cmpsl
les
and
mov
cmpsl
sub
mov
decb
rorb
mov
mov
stc
adc
leave
jnp
iret
add
xchg
negw
icebp
dec
mov
cs
jno
pop
je
pop
dec
add
cmp
push
iret
add
sarb
mov
in
adc
out
xor
aas
push
les
pushf
std
pop
insl
sbb
cmp
sbb
inc
cmp
dec
push
mov
xor
loope
test
ljmp
or
jb
faddl
xchg
ljmp
xor
decb
mov
int3
fcmovnu
int
inc
insb
jmp
adc
push
mov
mov
mov
xor
hlt
push
cli
mov
mov
test
sub
roll
jecxz
mov
inc
or
in
push
jecxz
aaa
ficompl
jb
repnz
lods
sub
loop
or
ja
enter
pushf
adc
les
fcomps
sar
out
pop
or
cmp
mov
fadds
dec
std
testl
push
jle
dec
mov
jno
push
les
lret
imulb
imul
pushf
shrl
les
inc
dec
adc
mov
imul
stc
repz
mov
mov
add
and
sbb
out
jl
pop
lds
jae
add
aas
stc
es
sub
mov
mov
insb
sub
push
gs
imul
pop
aas
mov
loop
sbb
xchg
neg
fstpt
into
in
and
dec
rclb
lretw
imul
notb
mov
cli
iret
rcll
jbe
sub
daa
or
sub
mov
or
inc
das
insb
std
cmp
outsl
sub
xchg
clc
jle
int3
popa
mov
popf
cmpsl
stc
sub
repz
cli
ret
pop
sbb
jb
adc
ljmp
popf
popl
dec
and
push
lock
sarb
sub
call
nop
and
iret
enter
rcll
add
xor
leave
rclb
xchg
sub
cmp
sub
push
xor
pop
ja
hlt
push
add
movsb
jb
dec
mov
and
js
lods
or
movsl
or
fidivl
fldenv
shrb
js
or
adcb
clc
xchg
pop
push
popf
pop
adc
dec
dec
and
lock
sub
mov
mov
cmpsb
jnp
push
xchg
std
fwait
inc
les
and
mov
leave
cwtl
add
lret
sub
cmpsb
dec
dec
jg
xchg
std
movlhps
lret
sub
push
push
cmpsl
sbb
ljmp
xchg
adc
imul
push
inc
dec
sbb
lea
mov
jno
xchg
mov
adc
popa
sbb
nop
pop
cmp
sarb
or
or
in
repnz
pop
mov
mov
mov
sbb
fldt
push
test
push
mov
icebp
xchg
add
jb
movsb
sub
in
mov
rorl
xchg
sbb
imul
movsl
leave
pop
push
push
cmp
fbstp
imul
jge
sbb
loope
hlt
jns
nop
cmc
xchg
daa
xor
inc
addr16
sub
gs
les
cmp
test
mov
jge
out
mov
ss
insb
jle
ja
cmp
js
xor
imul
mov
cmp
cld
mov
add
mov
loope
and
sbb
inc
cmpl
push
xchg
dec
pop
mov
js
jnp
test
je
hlt
leave
aad
es
push
aaa
idivl
and
jecxz
push
sub
cmc
dec
out
adc
outsl
outsl
sbb
mov
sahf
and
adc
or
pop
cmpb
aas
pop
test
out
ss
bswap
sbb
mov
mov
fs
lcall
lcall
xchg
adc
sbb
insl
cltd
xor
mov
test
fs
pop
orl
jmp
test
sti
sbb
clc
pusha
sbb
mov
aas
cmp
xor
popf
dec
add
dec
pop
scas
ds
and
in
pop
shlb
sti
ror
fldenv
jg
jne
mov
push
out
out
add
test
mov
dec
in
push
xchg
addr16
push
shlb
js
aas
jne
pop
and
mov
enter
xchg
sbb
add
dec
xchg
add
scas
push
sti
pop
pop
adc
mov
adc
mov
daa
add
sub
data16
shll
fcompl
sub
fsub
inc
xchg
loop
push
adc
lods
push
bound
lahf
incl
addl
and
insl
repnz
or
inc
inc
sbb
cltd
dec
addr16
int
scas
xor
lret
sub
cmp
or
cltd
je
scas
test
pop
iret
xchg
cwtl
sub
nop
jb
push
and
jbe
mov
adc
adc
push
xchg
sti
dec
popa
xchg
insl
fimull
xchg
test
aaa
sbb
in
cs
lds
mov
xchg
shrl
addl
sbb
mov
or
sbb
out
movsl
mov
lret
hlt
ret
sub
cmp
aam
out
in
enter
loopne
bound
pop
mov
fdivl
rcl
jne
pop
repz
ret
iret
data16
sub
jno
add
mov
arpl
lret
and
lret
movsl
nop
add
es
mov
adc
repnz
test
sahf
cwtl
imul
outsl
int
out
pop
rcll
xor
dec
cmp
jo
mov
jno
jbe
jg
push
ficoml
pop
ja
pop
cmp
cmpsl
int
xchg
gs
cmp
xchg
xor
test
jo
imul
ds
bound
mov
xor
out
adc
movsb
jnp
dec
mov
fcoml
dec
pop
notl
add
or
sahf
push
idivl
lods
mov
cmc
repnz
cmc
repz
in
xor
ror
dec
add
fstl
int3
cltd
dec
stc
neg
and
enter
cltd
fistpll
xchg
mov
or
stos
add
sub
sub
pusha
sub
add
pop
in
es
aas
imul
dec
ljmp
dec
cs
popf
hlt
fistl
cli
jge
in
push
dec
sarl
pop
lret
jnp
andb
pop
push
loopne
cmp
fidivrs
mov
loop
pop
jp
xchg
add
dec
subb
loopne
mov
repz
push
mov
xor
insb
xor
push
mov
adc
fcoms
jnp
imul
pop
popa
mov
shll
xchg
nop
pop
ja
insl
fidivs
xchg
out
subb
imul
and
mov
mov
fsqrt
cltd
sub
pop
cli
xchg
push
mov
jae
aaa
lea
shll
xor
imul
mov
xor
pop
call
xor
and
sub
pop
fmull
push
mov
jg
jb
loop
cmp
inc
adc
xchg
xchg
adc
inc
and
ret
add
lods
in
push
shrl
test
inc
daa
jae
jnp
dec
clc
lcall
jbe
cmp
xchg
addr16
cmp
mov
xchg
stos
subb
fcomi
or
fldcw
mov
iret
sbbl
pop
xchg
mov
mov
mov
pop
aaa
mov
jo
jo
xchg
int
sti
shll
adc
add
cmp
insl
mov
xchg
cmp
cltd
push
push
add
incb
mov
outsl
sbb
push
pop
pop
je
mov
ja
cmp
and
ljmp
cmc
fisubs
aad
adc
sbb
adc
adc
dec
jmp
sbb
jno
movl
out
aaa
pop
adc
mov
adc
xor
in
repz
inc
xchg
adc
push
inc
pop
iret
popf
loop
lds
aaa
push
mov
xor
or
pop
out
jae
sbb
call
pop
out
scas
inc
pop
dec
popl
cmpsb
cwtl
sbbb
insl
test
dec
icebp
xchg
imull
sahf
fwait
std
dec
pop
mov
dec
lods
lret
repnz
lret
ljmp
popa
push
inc
in
clc
pop
popf
push
test
xchg
cmp
int3
mov
hlt
inc
js
cmp
xor
xlat
xor
jbe
lea
fsts
lods
nop
frstor
ds
imul
jmp
shrb
sbb
cmp
dec
sbb
jbe
sub
sbb
decl
test
or
sbb
jb
outsb
jl
pushf
jge
mov
sbb
fs
cmp
clc
roll
and
lahf
insl
fimuls
fcompl
ret
into
push
xor
icebp
or
lock
push
das
dec
rcrb
ret
jle
ret
es
adc
cwtl
mov
inc
mov
insl
daa
jl
stc
pop
clc
xchg
xchg
mov
add
gs
or
pop
stos
pop
dec
lahf
cld
inc
incl
xor
dec
or
mov
fldl
lods
push
leave
mov
pop
xor
sub
adc
sbb
mov
es
fcoml
adc
test
insb
push
add
sahf
call
inc
shll
cli
mov
lahf
lahf
popa
loopne
cmpsl
add
mov
shl
or
clc
add
loop
or
jae
shll
dec
mov
jae
decl
roll
or
call
xor
adc
xor
into
adc
lret
inc
inc
xchg
pop
int
sbb
mov
xchg
pushf
or
mov
lods
jp
jle
push
stc
and
popa
inc
pusha
stos
rcrb
add
jge
cs
cmp
fwait
aad
jg
or
movsb
popf
xlat
mov
push
ret
adc
jb
and
movb
inc
mov
outsb
insl
cmp
sahf
ljmpw
push
pop
inc
jmp
out
in
jecxz
push
sbb
cmp
add
imul
and
daa
enter
bound
or
sti
iret
negb
imul
movsl
xchg
ds
js
and
sbb
test
mov
aam
pop
test
jmp
mov
dec
dec
lds
sub
xchg
adc
push
sub
sub
jecxz
or
test
popa
inc
add
mov
mov
cltd
int3
mov
or
lahf
cmpsb
ljmp
sub
xlat
cs
mov
mov
xor
int
cmp
push
and
pop
popa
sub
mov
xor
dec
push
sahf
jo
lods
cltd
loopne
cltd
iret
sub
jno
jmp
pop
jns
mov
repnz
scas
lret
mov
lods
sub
pop
pop
push
cld
mov
loopne
test
daa
sbb
or
test
aaa
addb
add
daa
fbld
or
jo
clc
das
enter
enter
push
push
pop
pop
dec
and
in
fistpl
push
test
mov
aas
sub
sbb
dec
int
xchg
pop
cld
sahf
in
pop
push
push
inc
mov
sbb
xlat
mov
cs
nop
push
and
insl
lret
loope
and
mov
in
call
adc
mov
inc
test
xor
ljmp
sbbl
cmpl
or
popa
mov
jmp
dec
js
xor
dec
adc
and
and
mov
mov
ret
and
rolb
cmp
xor
adc
xchg
testb
push
clc
sub
ja
out
cmp
rorl
fildl
aaa
aam
mov
and
das
sahf
inc
std
or
ljmp
sub
push
lds
mov
cwtl
mov
xor
test
loop
mov
cmp
insb
insl
push
jne
cmpb
cld
push
int
sti
or
xor
inc
mov
jb
pop
sub
sbb
sbb
xor
cld
shr
sbb
xchg
push
popf
or
add
and
xor
es
xor
into
lods
pop
xchg
xor
jl
lret
cmp
js
pop
negl
outsl
shlb
mov
cld
inc
cmp
jns
stos
rorb
popa
dec
add
push
dec
in
inc
fimull
jle
test
pushf
gs
and
mov
xlat
inc
shrl
enter
out
daa
lcall
inc
ficompl
imul
and
add
push
es
mov
test
loop
jbe
mov
jp
outsl
addl
rcl
sbb
jge
das
or
push
out
push
ret
mov
mov
pushf
out
fwait
dec
fdivr
imul
cmpsl
xor
into
stos
decl
push
test
or
cmp
lods
mov
negl
loopne
jb
xchg
dec
inc
cmp
out
inc
bound
jmp
leave
out
inc
fcoms
in
cwtl
sbb
xor
lret
jno
fs
dec
and
xor
ja
pop
mov
push
dec
mov
stc
daa
movsb
test
out
mov
sbb
mov
xchg
aad
fnstcw
scas
mov
add
hlt
in
push
xchg
and
inc
mov
lret
fdivrp
aad
or
les
adc
or
inc
je
lret
int
ficompl
sub
push
pop
fbld
jp
ja
jno
mov
cmp
and
or
xor
mov
mov
sbb
loop
add
int3
into
jmp
sub
enter
repnz
sahf
in
mov
xor
into
aaa
idivl
mov
or
shll
and
cmp
inc
mov
sub
push
pop
push
ja
rcll
mov
gs
or
jge
jmp
out
xchg
jne
loope
sbb
loopne
insb
mov
outsl
loope
aam
mov
push
adc
test
mov
nop
lret
jae
jmp
mov
test
push
lea
idiv
movsb
arpl
mov
fsubr
ss
xchg
in
seto
push
push
add
sarb
xchg
adc
adc
out
mov
nop
pop
xchg
repz
int
sub
fwait
mov
jne
dec
dec
sub
mov
adc
and
pop
xlat
in
mov
adc
adc
pop
fstpl
mov
sbb
mov
test
cmp
call
inc
insl
or
rorb
iret
cwtl
jmp
sub
jecxz,pn
xor
jbe
jecxz
stc
mov
sti
sub
add
mov
int3
and
cmpsl
jns
leave
jge
std
xor
adc
dec
xor
hlt
push
loopne
cmpsb
cmp
jbe
dec
into
lods
dec
xchg
or
std
cli
out
cltd
out
ljmp
or
inc
addb
sub
cld
mov
dec
pop
mov
pop
mov
xchg
fadd
inc
sbb
xor
repz
test
add
in
jmp
mov
popl
fidivl
jae
push
mov
shl
gs
mov
add
bound
insl
mov
movsl
pop
xor
lods
dec
inc
jge
xor
gs
pop
repnz
mov
mov
inc
sbb
ljmp
gs
lea
fcompl
leave
jle
aaa
das
pop
in
call
sub
xor
mov
pusha
and
scas
mov
lret
and
jno
sbb
jb
jl
mov
clc
adc
fsubl
pop
xchg
xchg
add
in
dec
mov
inc
in
cwtl
enter
jle
lea
jbe
icebp
repnz
add
sub
leave
dec
dec
inc
rorl
cld
pop
mov
and
pop
push
lret
push
test
and
jecxz
jp
leave
jae
and
cmp
xor
pop
mov
fcoml
jbe
xor
pop
xor
xchg
cmp
addr16
sti
dec
adc
and
jge
xchg
jl,pn
daa
sahf
clc
nop
mov
xchg
inc
mov
pcmpgtb
fsubrs
and
les
xchg
mov
mov
flds
mov
pop
dec
outsb
stos
jb
push
stc
shrb
int
adc
popa
adc
push
mov
shl
and
js
mov
pusha
shl
xlat
idivl
mov
cmpsb
push
scas
sub
fcomp
inc
xchg
leave
xor
mov
cmp
jg
outsb
dec
fs
mov
outsb
repnz
popf
mov
ss
mov
push
fwait
sub
cmpsb
rcll
push
adc
sub
mov
jo
push
ret
adc
xchg
or
xlat
mov
popf
inc
mov
inc
pusha
mov
and
inc
mov
nop
nop
in
iret
jns
jb
xorb
mov
xor
outsl
emms
xchg
mov
fadds
cmpsb
mov
pop
cmc
bound
jp
push
cld
and
fildl
xchg
and
mov
into
sub
push
in
cmp
sahf
mov
addl
ret
in
and
jae
and
cs
lods
out
pop
xchg
flds
or
pop
outsb
inc
jne
adc
jge
push
adcl
int
sti
pop
insl
xor
rcrl
idiv
lret
add
call
sti
cmp
sbb
int
inc
rcrb
mov
rcl
cpuid
mov
fsub
adc
dec
adc
mov
cmp
push
jb
mov
enter
les
loope
jecxz
bound
adc
mov
fmull
fistl
adc
jo
fsub
jmp
gs
mov
stos
or
push
stos
cmp
add
js
divl
or
add
cwtl
and
mov
fcmovb
or
addb
inc
in
repz
mov
jae
rcrl
jle
and
cmpsl
add
cli
mov
sbb
ret
lea
and
mov
lods
or
mov
xchg
ljmp
sub
adc
pop
das
mov
xchg
xor
push
inc
cmp
mov
add
xor
push
adc
or
loope
sbb
mov
jg
decl
mov
add
jmp
lret
imul
test
cmp
rolb
mov
aas
or
in
and
repz
in
mov
aas
ja
pause
dec
cmp
movsb
xor
aad
shll
aam
comiss
out
lret
ret
dec
fwait
xchg
push
inc
imul
imull
in
out
jnp
mov
shrl
push
sti
sti
add
loop
jns
fmuls
xchg
add
cmp
mov
inc
ds
mov
xchg
mov
or
inc
ficomps
or
inc
mov
push
adc
out
dec
nop
mov
mov
dec
sbb
fidivl
insb
pop
mov
push
cmp
xchg
in
test
or
mov
cmp
addr16
in
xchg
inc
enter
jge
push
outsb
cmc
aad
add
out
cmpsl
test
push
xor
out
cwtl
ret
or
std
dec
arpl
xor
mov
lods
scas
mov
lea
imul
sub
pushf
pop
sub
and
cmp
subl
cmp
jmp
pusha
jnp
cmpsl
xor
xchg
shl
mov
adc
cmp
jb
mov
rcrb
lcall
jnp
dec
movsl
cli
repz
cmpsl
mov
adc
into
int3
push
call
dec
mov
mov
push
and
ret
or
scas
cmpsl
xchg
imul
xchg
aam
adc
dec
sub
mov
mov
or
cmp
jp
inc
test
test
ja
arpl
shr
inc
mov
or
jg
outsb
add
sub
cld
scas
jl
cmpsb
adc
in
inc
push
or
push
xchg
pop
inc
jo
insl
push
ror
fidivrl
sbb
mov
insl
push
out
mov
or
shrl
and
aad
neg
bound
mov
sub
jmp
xchg
mov
insl
and
pop
scas
xchg
mov
in
and
mov
mov
mov
imull
mov
mov
cs
or
dec
int3
bound
sub
and
xor
mov
cmp
inc
jbe
mov
xor
cltd
mov
xor
xor
popa
xchg
rolb
je,pn
pop
ja
jns
movsl
dec
scas
or
mov
mov
loopne
jg
int3
ds
pop
lcall
pop
mov
jge,pn
sub
xor
mov
aad
sub
in
sbb
xchg
in
mov
adc
push
sbbl
ja
scas
cld
cmp
push
xchg
jmp
inc
pop
mov
out
aad
push
arpl
scas
int3
pop
pusha
pop
bound
filds
test
rol
mov
sub
into
and
mov
cltd
out
pop
iret
sbb
outsb
fld
or
popa
pop
jmp
push
pop
pop
ljmp
decl
decl
inc
xchg
dec
sahf
xchg
push
popf
inc
jbe
xchg
jle
outsl
imul
loope
out
fisubs
push
push
push
adc
sub
in
mov
inc
jl
outsl
mov
xchg
sbb
xlat
dec
xlat
xor
bound
and
data16
sub
jnp
negl
call
in
loop
mov
data16
push
pusha
fldpi
and
cmp
dec
fwait
mov
movsb
cmp
sub
add
mov
sub
inc
mov
push
mov
cmc
int3
mov
add
dec
loopne
cmp
sub
or
fs
shl
mov
add
lea
nop
xor
jo
push
mov
loop
jle
scas
jnp
jmp
sti
test
xchg
push
sbb
inc
push
xor
add
fisubs
je
xor
insl
pop
pusha
aad
test
jns
lahf
imul
lret
sub
imulb
rclb
dec
addr16
xchg
cwtl
jo
push
es
bound
mov
or
dec
pop
jno
jb
rclb
mov
sbb
dec
mov
pop
inc
mov
pop
fldenv
dec
push
jmp
inc
imul
sahf
cld
stos
pop
mov
push
cli
cmp
inc
cmpsb
clc
adc
jg
mov
fisubrl
cld
xor
std
mov
add
mov
jl
mov
iret
push
in
daa
imul
scas
mov
add
ss
pop
hlt
lcall
pop
movsl
xlat
stc
inc
pop
jno
jecxz
mov
adc
pop
loope
mov
orb
mov
leave
mov
roll
and
stc
stos
pop
xor
xor
sbb
repz
lock
jl
out
mov
jo
mov
cmpsb
dec
mov
cmpsl
push
cmc
xor
pop
dec
pop
test
out
xchg
loopne
xchg
imul
sub
add
fbstp
adc
mov
shrb
mov
add
mov
out
mov
xchg
into
xchg
dec
mov
shll
mov
xor
add
pusha
insl
cwtl
push
push
clc
pop
mull
std
mov
sbb
sbb
sub
fmuls
popf
test
xor
sub
xor
xor
and
mov
into
mov
dec
inc
divb
hlt
out
mov
inc
add
pop
inc
dec
fwait
call
popa
jecxz
pop
jnp
mov
xchg
pusha
jle
sbb
xor
pop
inc
sub
out
loop
xchg
pushf
outsl
xor
fmull
outsb
inc
fmul
mov
int3
lret
adc
mov
stc
fnsave
mov
push
fisubrs
add
sub
xchg
xchg
test
mov
mov
cmc
jb
xchg
ret
and
cmc
or
scas
jl
dec
popf
mov
or
xchg
das
divb
stos
jecxz
lret
mov
push
jecxz
push
call
xor
push
rclb
sti
mov
or
cli
lods
push
das
and
adc
pop
pop
xor
push
pushl
sbb
movsl
sbb
lods
shlb
jmp
test
xlat
pop
inc
mov
xchg
push
mov
scas
jg
xchg
jbe
testl
add
clc
movsl
ljmp
jge
mov
pop
mov
loope
cs
fldenv
sbb
frstor
mov
loopne
dec
inc
xchg
cmp
test
and
sub
jb
jns
mov
xchg
jg
jle
adc
cltd
cs
mov
xchg
in
fidivs
ret
mov
jge
loope
pop
jno
mov
mov
pop
ja
jns
dec
cmp
dec
rcrb
pop
mov
call
inc
ret
sub
pop
fldl2t
lods
cmp
imul
fwait
mov
add
adc
ja
test
mov
mov
call
lcall
mov
or
mov
sar
sbb
adc
sar
or
pop
push
xchg
mov
cmp
push
mov
shl
xor
jle
cmp
fisubrl
add
stos
aam
repz
push
fnstenv
dec
insl
stos
mov
dec
test
jo
imul
outsl
mov
insb
test
xor
sub
jg
dec
and
ljmp
xchg
rorl
cli
call
fistpll
cltd
out
xor
fistl
icebp
test
lods
jae
xor
xor
inc
lock
push
cmp
mov
or
inc
dec
inc
popa
jge
push
gs
xchg
adc
xchg
and
decl
fistpll
pop
sub
inc
add
and
add
mov
cwtl
in
aam
mov
fldl
fucomi
mov
push
out
hlt
cld
adc
pop
mov
cmpsl
cmp
dec
rclb
xor
dec
push
mov
push
int3
out
icebp
ljmp
cli
jb
int3
sbb
add
cmpsl
mov
mov
xorb
and
mov
sbb
dec
fidivrl
push
cmpb
sub
mov
std
mov
test
test
aaa
sbb
lea
fdivs
mov
mov
fs
jo
xor
shr
dec
imul
push
mov
das
push
xchg
jg
jge
or
data16
repz
jp
xchg
or
mov
inc
pop
push
fs
mov
adc
cmp
add
out
xchg
mov
jecxz
out
and
mov
or
inc
mov
inc
or
andb
xor
stos
fistps
cmp
mov
shr
xchg
popf
xchg
jae
imul
insb
into
sarb
int
add
xor
stc
fmuls
loop
cltd
ret
and
mov
je
add
mov
pop
xchg
jmp
repz
push
lock
pop
lds
insb
or
in
pop
fmuls
adc
xor
mov
out
shl
movsb
shl
mov
jae
and
cmovb
imul
jge
adc
fimuls
outsb
sti
test
loope
inc
sbb
out
das
aad
dec
xchg
pop
jbe
mov
add
ljmp
mov
out
push
shlb
adc
xor
js
imul
mov
xor
mov
testl
dec
mov
or
xchg
pop
in
push
pop
xor
stos
dec
sub
cmp
outsb
lret
push
fbstp
add
movsl
fdivs
nop
jle
das
ret
data16
lea
sarl
jo
shlb
hlt
nop
add
out
outsb
push
or
data16
dec
mov
test
aam
roll
int
or
rorl
scas
clc
outsl
std
pop
cmp
sub
push
add
lcall
mov
popf
scas
xchg
sub
push
cmpsb
dec
and
mov
nop
jae
inc
shlb
rorb
mov
sbb
bound
mov
cmp
repnz
jne
leave
and
xor
lock
ret
mov
mov
cs
xchg
sahf
xor
icebp
sbb
mov
pop
out
pop
mov
sahf
ds
out
stc
mov
push
aaa
sbb
pop
add
pop
mov
fcmove
pop
xor
sub
inc
adc
xor
scas
xor
push
addb
bnd
inc
sahf
dec
rorb
mov
and
mov
cmp
add
jae
mov
mov
jo
pop
rorb
xor
ret
jno
cmp
hlt
jns
nop
dec
push
xchg
xor
fbstp
sbb
test
inc
push
pusha
movsb
cmp
sub
lret
or
push
jbe
lret
popl
cmp
sbb
jbe
push
cmpsl
scas
and
and
push
insb
pushf
imul
cs
pop
rcl
imul
loop
loopne
push
in
mov
cmp
push
mov
pop
sub
cltd
repz
movl
jbe
mov
or
nop
or
xorl
pop
inc
adc
xchg
xchg
inc
pop
test
movsb
pop
xor
mov
pop
push
std
stos
adc
dec
aam
add
emms
mov
cli
stos
inc
out
cmpsl
and
xor
push
cmpsb
pop
popl
sbb
shrl
int
addb
loopne
aad
mov
addr16
fcoms
in
lcall
or
sub
shlb
notb
adc
mov
dec
fisubrl
cwtl
movsb
xchg
ljmp
mov
xchg
test
jb
jns
jl
xor
adc
and
les
and
sub
adc
cmp
mov
cmp
sub
aad
cmp
loopne
int
cmc
mov
in
or
jmp
mov
outsl
or
xor
aaa
cmp
mov
and
pop
ljmp
aas
sarb
ret
dec
out
xchg
dec
shrb
push
push
mov
shll
cmp
push
notl
sti
rcll
into
mov
mov
sar
push
stc
pop
out
sub
pusha
cli
pop
arpl
jl
and
ret
insl
fwait
loope
pusha
xlat
mov
cmpsl
add
iret
into
mov
pop
add
imulb
pop
iret
mov
xor
dec
dec
xchg
pop
jmp
jno
and
cmp
inc
mov
jge
sbb
cmp
xor
scas
icebp
jo
fidivs
adc
sbb
pusha
mov
push
mov
call
push
add
push
enter
dec
mov
cmc
mov
loopne
icebp
jmp
mov
cli
pop
or
add
lock
sub
ljmp
mull
mov
sub
sub
or
adc
sti
push
out
cmpsl
jmp
push
xor
xchg
aam
sbb
ds
out
ljmp
js
pop
sbb
inc
daa
dec
loope
int3
sahf
dec
push
add
sbb
add
out
jle
push
arpl
mov
mov
or
popf
decb
es
enter
cmp
in
aaa
jne
arpl
iret
scas
xor
cmp
xchg
mov
or
dec
gs
push
or
jge
inc
xor
movl
data16
out
pop
out
pusha
jle
xchg
stc
mov
loope
lock
jecxz
xchg
hlt
sbb
or
mov
ljmp
ss
mov
js
jno
in
push
cmp
jne
mov
and
loopne
sti
pop
shll
xchg
sbb
shrl
imul
cmp
mov
pushf
sub
dec
mov
faddl
ljmp
test
mov
jns
cld
pop
sub
sbb
cmp
loop
mov
sub
lock
sub
mov
cmp
jmp
shll
pusha
stc
push
lods
mov
xchg
pop
lret
enter
adc
js
lret
push
ret
mov
adc
mov
or
jnp
mov
lcall
jmp
aas
into
lock
push
pop
jae
outsl
mov
xor
adc
fninit
jo
and
lcall
sub
jb
mov
mov
mov
push
je
test
sar
xor
mov
test
dec
movsb
and
lods
sbb
leave
dec
inc
or
xchg
ljmp
push
sbbl
add
mov
xchg
or
add
clc
aas
push
mov
fldcw
or
mov
and
int
inc
mov
in
fsubrs
jns
hlt
inc
add
and
dec
dec
in
rclb
test
sbb
icebp
jbe
xchg
stos
jg
fsub
cmp
sbb
out
mov
in
inc
add
bound
push
fsubs
imul
pop
or
jo
jmp
pushf
cli
sbb
pop
repnz
sub
hlt
mov
mov
inc
jmp
push
fsqrt
imul
push
out
je
inc
push
in
sub
pop
dec
and
jbe
lds
stos
lret
int
das
sub
rcrb
fistpll
mov
inc
push
mov
adc
adc
pop
sub
ja
imul
lret
fsubs
hlt
fs
and
pop
adc
scas
outsl
loopne
sub
push
xor
in
and
sub
jmp
sub
in
test
push
das
shlb
pop
xchg
add
add
sub
dec
mov
icebp
out
cmp
dec
popf
aad
mov
mov
cmp
cmp
stos
into
inc
sbbl
sbb
clc
add
negb
sarb
test
filds
xchg
push
cmpsl
roll
insl
ja
out
xchg
jle
roll
push
add
add
icebp
jne
push
push
fstpl
inc
out
fwait
stc
cmp
outsl
addr16
and
dec
push
push
cmp
or
ljmp
cwtl
sbb
cmp
je
lock
sub
out
inc
enter
inc
fnstcw
rorb
cmp
mov
enter
or
ss
cmp
cmp
push
sub
jecxz
cmp
pop
pop
mov
sbb
enter
jle
imul
cli
movsb
rclb
adc
mov
dec
data16
add
fists
lods
movsb
jmp
mov
push
leave
push
mov
and
dec
or
push
fisubrl
imul
cwtl
test
js
imul
cltd
shlb
push
cmpb
mov
pusha
mov
mov
flds
xchg
add
xor
sarb
pop
and
jecxz
push
fimull
loopne
cmp
imul
pop
in
mov
or
in
lret
inc
negb
insb
enter
push
lods
or
dec
xchg
pop
repnz
inc
cli
xchg
mov
xor
movsb
or
or
lahf
icebp
push
inc
xor
dec
ret
sub
sub
aam
daa
into
jb
pop
in
dec
sub
imul
push
cmpsl
dec
jmp
fiaddl
ds
scas
cmp
jg
test
cmp
push
add
inc
iret
jecxz
arpl
and
fcmovnb
dec
inc
mov
mov
pop
push
sub
push
cmp
or
push
aas
out
jns
inc
repz
loope
cmp
mov
dec
mov
cli
lock
clc
mov
dec
in
push
iret
stos
push
push
or
sub
test
push
and
or
lods
fadd
add
jecxz
imulb
cli
hlt
mov
mull
push
int
pop
mov
inc
lret
jns
xchg
loop
mov
fistpll
add
xchg
cmc
scas
test
add
andb
in
jno
movlps
add
sub
in
push
push
fdivs
adc
fdivr
testl
lods
dec
mov
jg
jecxz
pop
sub
sbb
xchg
leave
add
cmpsb
pop
dec
popa
sub
mov
fwait
sub
repnz
mov
out
shrb
cs
jp
leave
xchg
cmpb
loope
jl
sub
test
popa
fldenv
daa
std
scas
loopne
and
notl
push
fstpt
inc
inc
cmp
out
loop
outsl
mov
or
pop
push
or
mull
sbb
cs
das
outsb
pop
sbb
pop
adc
jmp
test
jp
push
cltd
push
mov
jo,pt
mov
mov
test
imul
mov
int
jge
xor
out
std
sbb
and
call
inc
and
mov
hlt
sti
pushf
call
lods
sbb
ret
or
mov
push
jle
add
jg
mov
out
mov
sbb
pop
mov
xchg
mov
cvtdq2ps
int3
xor
adc
or
push
ss
addr16
lods
and
test
mov
hlt
cltd
jmp
stos
je
fs
test
dec
push
xchg
movsl
or
fwait
jle
xchg
pop
mov
testb
sub
fldl
sbb
pop
push
test
ret
xor
movsb
leave
mov
stos
inc
push
mov
outsl
adc
arpl
mov
scas
adc
enter
das
pop
or
xchg
sub
add
notl
inc
mov
push
insl
nop
jge
stc
mov
jg
imul
xor
push
add
xor
push
movsl
sti
sub
cmp
jp
mov
sub
shrl
jge
mov
fimull
xlat
aam
std
hlt
sbb
add
push
jecxz
mov
xlat
cwtl
pop
js
xchg
and
mov
enter
hlt
shlb
pop
or
es
cmp
rcll
dec
add
test
mov
dec
pop
or
daa
jnp
push
xor
dec
adc
scas
test
jno
mov
xor
mov
cmp
imul
cwtl
mov
adc
jp
pop
sub
dec
xchg
cmc
subb
pusha
ja
stc
add
outsl
mov
push
cmpsl
enter
sub
mov
jnp
mov
xlat
mov
sub
sti
xchg
stc
outsb
cmpsb
stos
adc
iret
add
jae
jp
shll
xchg
pop
and
push
or
xchg
cmp
sbb
sbb
xor
xlat
push
push
ss
add
andl
add
pop
push
repz
sahf
js
icebp
inc
add
out
outsl
ret
mov
and
push
mov
lret
stos
mov
mov
dec
lods
or
lret
setb
or
dec
push
push
adc
pop
negb
sbb
inc
xchg
add
lods
and
shll
mov
dec
mov
or
cmpsl
dec
and
shlw
or
cmp
ret
or
fadds
lahf
inc
test
mov
push
rcll
int3
movsb
pop
add
sub
sub
dec
iret
repnz
mov
and
sbb
mov
push
pop
cmp
sahf
inc
pop
xchg
adc
jns
cmpsl
fstpl
xchg
stos
xor
mov
es
or
sub
leave
pusha
stc
dec
adc
push
dec
cmc
jno
jnp
cs
push
clc
adc
or
or
push
mov
les
lods
out
mov
mov
popf
cmp
inc
mov
orl
mov
std
cs
push
scas
pop
sar
loopne
inc
and
inc
cmpsb
xor
nop
add
jmp
mov
jmp
mov
mov
push
mov
lock
gs
mov
movsb
pop
adc
jg
fistps
rclb
pushf
out
adc
inc
jl
fcmovu
add
orb
xor
xchg
lods
scas
cmpsb
fcoml
add
mov
hlt
xchg
add
js
add
pop
rcrb
and
cmpsl
pop
jecxz
add
inc
push
push
call
push
xchg
scas
mov
and
jo
in
nop
hlt
pop
fwait
and
arpl
das
call
mov
pop
mov
push
jl
scas
xchg
cmp
aas
cwtl
fsubrs
add
jp
inc
sbb
out
jne
adc
incl
sub
mov
pop
cld
iret
push
xchg
cld
lret
xchg
mov
out
xor
dec
outsl
inc
mov
mov
cmp
notb
add
sub
test
test
nop
les
aad
or
mov
pop
add
mov
mov
xchg
iret
test
jp
xor
test
leave
inc
lods
mov
test
addr16
ljmp
fcompl
mov
gs
leave
jnp
add
inc
out
add
fcomi
xchg
fidivrs
pop
cmp
mov
popf
pop
lods
mul
xchg
popa
mov
push
sub
mov
mov
xchg
add
or
xor
ja
rorb
or
roll
xor
add
jge,pt
or
addr16
es
xor
xchg
sub
ss
push
stos
jns
mov
subb
cli
push
das
dec
xchg
int3
push
test
fnstsw
xor
mov
leave
jp
call
imul
jbe
jmp
pop
and
popf
xchg
jge
pop
xchg
or
popa
in
cltd
fisubrl
push
into
xor
or
add
cs
incb
or
jcxz
lods
and
pop
fcomip
lahf
fistpll
add
loopne
sub
repz
add
xor
cmp
pop
push
pop
jg
cmp
cmp
pop
orl
mov
rcll
es
les
loopne
lock
sbb
lea
hlt
add
pushf
mov
add
cld
das
xchg
push
icebp
push
mov
test
fstl
test
jno
mov
jge
sub
mov
push
sub
pop
cmc
out
es
cs
adc
in
or
test
int3
cs
arpl
mov
repz
cli
rcpps
jns
call
xchg
mov
cmp
pop
cmp
mov
mov
fs
movsb
fstps
gs
xchg
cs
in
outsb
sti
mov
sti
add
addl
pusha
jns
aas
jbe
add
jbe
pop
scas
or
rolb
mov
add
sbb
cmp
or
add
adc
mov
xchg
push
mov
shrl
dec
fldcw
ja
xchg
dec
sahf
cmc
cmc
push
push
pop
xor
pop
xor
inc
push
cmp
mov
aaa
inc
jmp
je
xor
or
es
mov
jl
leave
jno
lcall
js
pop
arpl
cmp
jmp
in
or
out
stc
loopne
out
scas
insb
lock
jbe
dec
js
pop
lods
sti
pop
sub
test
pop
js
fisubs
or
fcoml
movsb
lods
jno
mov
push
sbb
lock
xor
add
dec
xor
shlb
mov
fs
mov
icebp
aam
cmpsl
iret
nop
ljmp
stc
adc
loop
data16
sub
stos
jb
mov
cli
addb
dec
pop
mov
mov
xchg
pop
test
scas
xchg
sub
out
pop
and
push
sbbl
lret
and
lock
in
push
xchg
push
mov
or
jle
mov
push
mov
es
les
mov
inc
test
fidivl
jbe
repz
stos
inc
dec
or
outsb
data16
cmp
icebp
inc
mov
jbe
push
arpl
add
out
sub
sub
rcll
stos
mov
pop
and
jecxz
cltd
adc
int
dec
xorl
sar
sub
mov
push
add
and
mov
pusha
pop
ja
fstl
test
sbbb
into
aam
outsl
sub
lds
sub
jmp
inc
or
iret
mov
and
pop
sub
adc
adc
sub
inc
rep
sbb
mov
or
pusha
push
imul
sbb
mov
xor
push
sarl
popf
imul
pop
sbb
jb
xchg
mov
add
addl
loope
dec
aad
clc
sub
cmp
test
jmp
jg
mov
mov
push
les
or
rcrb
in
shl
xchg
sub
mov
testl
icebp
sbb
clc
push
pop
ret
adc
fists
sbb
xchg
and
pop
lahf
and
sub
mov
sub
push
mov
mov
int3
cs
insb
and
cmpsl
pop
hlt
push
dec
inc
jae
sbbl
mov
mov
or
pop
repnz
mov
xorb
add
lock
dec
mov
clc
mov
hlt
mov
pop
and
pop
fisttpll
sbb
xor
sbb
xchg
clc
out
test
dec
mov
std
popf
mov
pop
dec
adc
cld
test
fsubrl
jmp
mov
das
fbld
test
rclb
cmpsl
or
inc
mov
repz
cmp
test
jmp
jnp
mov
imul
jb
sarb
mov
movsl
adc
loop
inc
add
sbbl
imul
mov
shlb
sub
in
and
mov
rorb
jmp
xchg
leave
and
test
inc
push
mov
out
es
xlat
inc
jne
adc
jle
mov
mov
mov
into
sub
sub
mov
jge
xor
and
mov
and
inc
and
adc
and
testb
mov
adc
call
mov
pop
jmp
mov
dec
fldenv
shll
subb
mov
js
xor
mov
cmp
dec
mov
leave
jle
outsl
cmp
inc
cmp
pushf
push
lahf
shrb
cmp
jo
jno
inc
test
push
stos
lea
mov
jnp
out
hlt
insb
mov
daa
jo
sub
je
aaa
lcall
adc
jb
repnz
add
in
mov
jbe
dec
lock
pop
sbb
push
shl
add
mov
mov
mov
fldcw
sti
mov
sub
jnp
jbe
jo
or
inc
xor
jle
out
pop
mov
push
imul
add
pop
lahf
jg
xor
jb
fbld
mov
ret
ljmp
ret
push
add
cmpsb
fidivrl
jl
aaa
fisubrs
dec
jmp
dec
sti
stos
inc
lds
xchg
lods
lcall
mov
sbb
imul
in
cmp
outsb
mov
je
xchg
mov
fisubs
jb
mov
push
ret
sub
in
jmp
mov
imul
scas
outsl
dec
fsubl
rclb
xchg
and
movsb
pop
or
sbb
sbb
mov
pushf
dec
insl
fcoml
pushf
mov
out
ljmp
xchg
mov
sub
ss
out
in
loope
push
in
loope
inc
xor
cmp
clc
in
stos
and
lock
inc
imul
inc
je
inc
lods
adc
adc
cmp
lds
pop
rorb
pop
push
mov
lock
lea
inc
jle
cmp
dec
int
scas
fs
in
jmp
inc
cmp
jne
add
pop
insb
mov
cmpsl
ja
jp
hlt
push
outsb
lret
adc
popl
jle
loopne
mov
fs
or
mov
mov
ljmp
xchg
push
rep
sbb
sbb
pushf
mov
or
xchg
dec
in
fistl
ja
rcr
push
loopne
jmp
mov
mov
xlat
loopne
or
mov
fisubs
out
mov
xchg
outsl
push
cmp
sub
js
adc
test
and
fstpl
ficompl
dec
jnp
fbstp
sub
aad
scas
lea
mov
add
jl
sbb
gs
lods
jo
sahf
pop
inc
mov
loop
iret
fcmovnbe
scas
and
sub
out
std
mov
push
stos
rol
ficoml
lcall
sbb
pop
add
testb
sub
xor
cmp
inc
rorl
add
mov
sub
in
test
fadd
mov
mov
mov
packuswb
ret
xchg
dec
xor
outsl
xchg
test
mov
lea
xor
sub
test
stos
or
mov
outsl
or
mov
and
pop
mov
out
mov
jmp
out
enter
sarb
xor
dec
sbb
add
loope
in
xor
sbb
mov
mov
xchg
lock
and
jecxz
inc
rcl
aam
mov
dec
or
movsl
stos
outsl
xchg
inc
jle
in
frstor
mov
imul
dec
inc
jmp
fldcw
pushf
jns
call
cmc
fcomip
popf
pop
mov
fdivrp
lods
bound
mov
je
inc
and
pop
xorl
subb
mov
out
push
xchg
lds
icebp
xchg
mov
inc
js
add
or
and
push
dec
mov
movsb
jge
orb
sbb
outsl
data16
jmp
rcrl
insb
out
fs
sbb
mov
push
js
inc
aas
push
xchg
dec
push
in
mov
xlat
mov
xchg
jno
scas
fistps
dec
jb
hlt
dec
enter
xchg
rol
out
nop
jge
fdiv
sbb
scas
sub
aaa
ret
gs
insb
mov
neg
jg
pop
push
out
test
pop
fcompl
test
cmp
leave
push
pusha
outsl
stc
mov
ret
pop
push
sub
int
in
pop
sbb
aam
call
pushf
sub
sti
dec
mov
nop
pushf
mov
stos
xorb
push
xchg
shll
movsl
add
das
push
outsb
into
sub
fdivs
cs
xchg
inc
in
sti
mov
and
mov
dec
mov
mov
xlat
xor
mov
nop
or
mov
clc
jmp
movsl
dec
imul
fistl
push
mov
cmp
mov
aas
push
in
push
jecxz
loope
icebp
enter
mov
lahf
int3
xchg
sahf
popf
or
lea
mov
mov
fwait
int3
adc
ret
or
inc
leave
in
cltd
fstl
xor
jge
adc
cmpsl
andb
fst
ds
subb
call
das
mov
clc
inc
sbb
lock
daa
sbbl
mov
ficoml
decb
mov
sbb
pushf
mov
sub
mov
dec
mov
xchg
out
cmpl
lds
mov
in
fisttpll
repz
xchg
mov
add
out
pop
or
lea
rolb
fdivl
into
bound
mov
inc
inc
aad
aas
ret
push
cmpsl
add
pop
or
cmp
sub
js
mov
sub
mov
xchg
out
dec
xchg
cld
mov
fisttpl
push
into
jecxz
std
outsb
dec
sub
xlat
ja
pop
pop
int3
pop
fwait
jo
mov
sbb
decb
mov
je
inc
adc
xchg
adc
stc
push
sbbb
loop
xor
mov
addr16
mov
hlt
push
cmc
adc
mov
movsl
sbb
jae
out
scas
add
mov
loop
popa
and
push
call
and
sub
in
or
or
data16
add
mov
pop
cmp
ss
scas
popf
pop
push
or
mov
int3
adc
cmp
stos
jge
jge
in
or
outsb
ja
scas
mov
push
repz
leave
movsb
or
gs
arpl
fnstsw
jbe
and
loopne
xchg
push
aam
scas
in
fcmovnbe
cmpsb
or
cmp
insl
cmpsl
dec
pop
sbb
push
icebp
add
int
jb
jo
xchg
and
cltd
in
push
jp
sub
jp
mov
enter
xor
adcb
js
push
or
scas
lahf
movlps
int3
mov
jmp
les
adc
leave
and
sub
subb
fwait
sub
mov
jo
jne
adc
push
push
mov
jp
loopne
pop
repz
jecxz
or
clc
arpl
xchg
sub
ret
cld
mov
out
out
loop
lods
stos
pop
into
mov
mov
mov
aas
cmpsl
jno
aaa
cwtl
in
add
mov
pop
cmpsb
push
mov
xchg
inc
cmp
cltd
loop
jmp
js
rcrb
clc
xor
jb
loop
aam
sarl
test
mov
lcall
mov
scas
cmp
scas
lret
adc
std
mov
lcall
stc
dec
pop
jo
inc
jb
movl
push
cs
xchg
inc
jne
sbb
gs
sbbl
xor
stc
fidivs
es
xchg
dec
nop
push
and
std
dec
out
push
jbe
arpl
mov
ja
cmp
fsubrs
enter
fimuls
inc
cmp
data16
and
dec
loopne
insl
addr16
mov
xor
in
inc
arpl
out
imul
push
ljmp
or
jno
mov
inc
outsb
sbb
push
pop
repnz
cmpsl
movsb
pop
outsb
adc
add
cmpsl
sbb
push
mov
hlt
loop
jno
sbb
inc
xor
popf
mov
orb
out
fcom
movsl
sysenter
inc
out
add
push
mov
shll
xor
mov
das
xor
leave
sub
adc
and
xchg
adc
fdivrs
push
in
jae
sbb
pop
mov
xchg
clc
sub
push
jmp
jo
jbe
sarb
and
sbb
loop
pop
in
dec
pop
dec
add
mov
fistps
pop
cmpl
shlb
lcall
xchg
sahf
xchg
xor
or
cwtl
pop
sbb
test
fcmove
rclb
mov
xlat
sub
xchg
mov
or
lret
roll
mov
pmaxub
jbe
int3
cmp
mov
add
push
jecxz
insl
lods
movsb
jns
lock
test
cmp
push
sub
rclb
sbb
cs
jns
pop
xchg
adc
repz
popa
js
pop
leave
jg
lcall
addb
stos
xor
or
mov
push
pop
in
inc
push
fwait
sbbb
push
gs
adc
popf
sti
xchg
adc
jg
test
adc
add
lds
sub
pop
jp
and
divb
push
or
nop
aas
lret
dec
or
inc
jg
mov
or
leave
les
pop
mov
arpl
test
aaa
call
cwtl
push
xchg
pop
and
aas
lcall
cmpsb
pop
jecxz
aas
shlb
mov
lds
fstl
or
outsb
pop
mov
fs
addr16
push
test
fldenv
push
jecxz
aad
pop
xor
push
rol
pushf
push
push
pop
inc
mov
loop
mov
addr16
inc
je
inc
mov
sub
arpl
aas
inc
xor
fneni(8087
pop
out
les
mov
aas
sti
in
cmc
cmp
or
fidivl
and
fdivrs
pop
aas
incb
fst
test
xchg
nop
jb
mov
jb
xchg
push
std
js
fldl
xchg
push
cli
xor
push
loopne
push
inc
or
sub
scas
inc
mov
and
xor
lahf
test
in
bnd
inc
jp
fwait
mov
sarb
cmp
xchg
enter
push
push
jne
xor
pop
sub
daa
cltd
movsl
loopne
add
aas
mov
lret
dec
ss
pop
ret
xor
fcoml
cmp
xchg
adc
mov
lret
test
incb
push
sbb
sbb
fucomip
mov
sub
sti
jb
and
test
mov
aam
and
fmull
nop
xor
into
dec
sbb
push
add
inc
push
and
fwait
cmpsb
out
add
decb
pop
xor
daa
jmp
scas
outsl
movsb
lret
jge
inc
mov
push
jecxz
sub
imul
xchg
lahf
icebp
pop
mov
aad
mov
and
or
sbb
ljmp
sbb
mov
into
repnz
xchg
clc
xchg
or
mov
icebp
shlb
sbb
stos
and
push
push
lahf
lods
mov
or
test
jp
popf
and
stos
and
ret
sbb
loope
ret
adc
pop
or
mov
pop
jge
mov
imull
inc
adc
pop
mov
pop
jnp
out
sbb
mov
in
mov
inc
es
dec
mov
ja
add
addr16
or
stc
aam
mulb
sub
insl
and
test
aam
xlat
mov
pop
or
mov
mov
in
movsl
push
jg
out
icebp
aaa
or
aam
loop
mov
jge
inc
push
and
ja
push
out
lret
stos
or
fucomi
mov
pop
bound
sbb
hlt
orl
lds
js
hlt
pushf
cwtl
test
stos
bound
xor
vmovss
adc
xchg
xor
jle
cmp
mov
xchg
push
push
dec
xor
hlt
xor
mov
out
and
and
sbb
sub
xor
xchg
sub
test
mov
sbb
pop
lret
hlt
or
sbb
in
je
inc
ss
pusha
mov
nop
mov
lock
dec
dec
fidivrs
xor
call
out
outsl
xchg
test
in
out
add
mov
xchg
lods
hlt
adc
dec
insb
jne
sti
sub
je
inc
cld
loopne
adc
leave
mov
adc
cmpsb
lcall
pushf
pop
pop
add
clc
and
jp
xlat
mov
jb
sub
cwtl
repz
es
mov
cltd
dec
ret
repz
jl
and
pop
sti
pusha
pop
jmp
pop
or
sub
pop
push
insb
mov
pop
jo
out
pop
and
div
inc
sbb
fs
ret
lods
pop
mov
aad
das
mov
dec
or
jae
push
in
xchg
inc
jecxz
lret
mov
adc
jle
lea
mov
in
fnstsw
fsts
sahf
clc
fs
xor
and
jle
inc
testl
xchg
iret
into
xchg
mov
mov
aas
inc
push
push
les
hlt
xor
mov
cs
pop
outsb
test
xchg
out
sbb
shll
jnp
or
roll
popa
push
or
fwait
mov
push
or
mov
dec
scas
jle
mov
mov
sbbb
out
dec
out
jmp
inc
push
imul
movsb
mov
jo
dec
fisubrs
jns
jno
loop
sbb
jle
adc
loop
sub
push
add
in
cwtl
ror
inc
xchg
mov
sbb
sub
pop
adc
lods
mov
or
or
or
or
ja
lcall
mov
mov
fdivl
mov
xlat
movsl
testb
push
lret
lods
lods
mov
sub
lods
mov
sbb
aaa
dec
mov
popa
sbb
mov
dec
int3
mov
mov
jnp
roll
pop
fcoms
cmpsb
mov
das
add
mov
add
lds
leave
inc
xchg
in
popa
or
dec
jb
insb
or
xchg
jbe
ret
sub
mov
or
daa
mov
imul
scas
mov
std
sti
xor
push
cltd
mov
ficoms
jns
ffree
outsl
sub
xor
movsb
js
icebp
pop
sbb
jae
push
xor
bound
xchg
jl
jne
pop
mov
cltd
xchg
jno
imul
scas
adc
adc
jo
mov
aad
adc
dec
jge
sub
ret
fwait
jno
pop
pop
cwtl
mov
push
mov
insl
stos
lcall
popl
sti
pop
stc
inc
or
xor
push
jnp
jecxz
mov
mov
imul
add
inc
cmc
or
pop
movsb
scas
stc
pop
loopne
xchg
adc
scas
shlb
dec
mov
push
aad
mov
xchg
jno
ret
mov
jmp
enter
dec
add
sbb
mov
push
aaa
mov
push
pushf
jle
jno
pushf
adc
out
out
frstor
mov
popa
mov
adc
iret
sbb
loopne
gs
jnp
push
pop
cmpsl
mov
movsb
fdivr
and
pop
lock
xorl
lea
sbb
shrb
aas
data16
dec
jp
sbb
fnstenv
fistpll
aaa
mov
jmp
push
mov
and
mov
lea
pop
sbb
jle
xchg
sub
out
mov
icebp
rorl
fcmove
xchg
lcall
xor
and
gs
mov
xchg
pushf
jecxz
idivl
mov
sub
decb
or
rcrl
pop
int
cmp
mov
jbe
int3
lods
ja
andb
cmc
test
jecxz
iret
mov
add
out
loop
int
xlat
sub
and
jl
push
subl
movl
cs
outsl
cli
loop
jns
push
inc
sbb
dec
and
inc
test
sbb
mov
dec
lods
jge
mov
sahf
cmp
shrl
sarb
cmp
cli
dec
xchg
rolb
aas
movsl
lcall
cwtl
stc
mov
fsub
jno
shrl
sbb
cmpl
sbb
sbb
lret
test
pushf
out
push
mov
dec
les
cmpsl
dec
pop
sub
shr
mov
mov
xchg
orb
jp
add
icebp
dec
ret
ror
jbe
std
mov
xchg
mov
adc
loop
xchg
add
movsb
cs
lods
xchg
data16
pop
pop
push
mov
pop
inc
stc
jg
in
mov
adc
call
jg
pusha
aas
push
jbe
xchg
and
loopne
push
leave
scas
lea
push
xchg
stc
cmp
cmc
mov
push
in
inc
mov
sub
mov
out
mov
stos
in
pop
imull
test
test
xlat
jl
data16
jne
cld
nop
sub
push
mov
pop
sub
cltd
xlat
dec
or
mov
sbb
fcomps
xchg
sbb
test
fstl
outsl
adc
loope
pop
push
xchg
repnz
sti
enter
out
adc
pop
xchg
add
aam
fcoms
imul
dec
push
mov
pop
into
pop
hlt
cmp
cli
jnp
push
dec
lock
push
sub
int
xor
add
and
push
cmp
push
int
cmp
mov
jo
mov
push
xchg
add
xor
out
xchg
mov
mov
scas
sub
and
lcall
fidivrs
xchg
pusha
sub
dec
scas
sbb
cmpsl
sbb
into
mov
shrb
test
pop
xchg
xchg
loope
rclb
xlat
inc
stc
adc
xor
jns
stos
shlb
jle
sti
mov
or
push
and
fnstcw
insl
push
aas
or
adc
out
and
scas
mov
repnz
pop
cmp
xchg
divl
cmp
stos
cld
inc
or
mov
adc
push
push
mov
xor
push
mov
pop
pop
xchg
mov
adc
ja
ds
lret
sahf
mov
mov
cmp
inc
std
ficompl
adc
pop
jl
mov
outsl
sub
xlat
in
xchg
loop
or
sbb
por
xor
inc
and
adc
iret
adc
stos
mov
lcall
adc
aaa
mov
add
xor
push
faddp
dec
jge
fdivr
ror
adc
pop
dec
jle
cltd
jne
jo
adc
xchg
fsubs
push
clc
loopne
jp
dec
push
sub
jo
cld
out
popa
negl
icebp
inc
jg
loope
inc
iret
xchg
adc
rcll
arpl
mov
pop
out
test
sbb
jb
pop
xchg
xor
dec
push
das
sbb
lea
shll
pushf
lret
hlt
add
fisubrs
fbld
js
mov
cli
mov
fidivrs
pop
mov
scas
fsubrp
arpl
mov
and
mov
lcall
xchg
cmp
loope
sub
push
cmp
clc
add
test
cmpsl
std
pushf
jno
es
sub
orl
sbb
pop
push
xor
fistpll
inc
jno
loope
sar
cs
lock
mov
mov
sti
jmp
mov
pop
mov
jae
sub
add
jmp
popa
adc
inc
push
in
add
or
call
pop
subb
jns
jecxz
test
popf
inc
fbstp
sub
les
popf
insb
test
add
mov
inc
adc
es
mov
inc
pop
add
add
mov
test
adc
jp
jle
cmp
pop
sub
xchg
adc
addb
pop
mov
jns
mov
lods
xchg
cltd
inc
or
dec
lret
cli
mov
pop
dec
and
jbe
add
int3
jno
and
shrb
stos
pop
rorl
sti
pop
pop
pop
mov
mov
pop
adc
xchg
xchg
xor
dec
jbe
cmp
and
adc
fisubrl
aaa
sbb
add
test
js
add
std
push
jle
adc
aas
xor
into
mov
xchg
outsl
xlat
lds
or
cmp
xchg
xor
xchg
xchg
xchg
xor
pop
adc
popf
lods
in
mov
leave
cld
cmc
iret
enter
cs
mov
and
inc
or
push
call
in
xor
fcmovne
repz
les
mov
fldcw
inc
xchg
push
setg
fs
ret
loop
add
cmpsb
js
mov
adc
sahf
fnstcw
sti
push
and
or
sbb
mov
sbb
test
pop
pop
mov
lret
adc
inc
shl
ret
in
cmpsl
popa
jecxz
clc
fs
lock
cmpsb
in
xchg
je
insl
sahf
aas
pop
loope
bound
mov
stos
xor
xchg
imul
sbb
movsb
cld
jo
xchg
sbb
jp
ret
aaa
or
or
sub
jge
push
sub
sti
lret
push
adc
cmc
mov
loope
jmp
sub
js
mov
xchg
shl
ljmp
sbb
sub
inc
test
or
xor
jns
sti
mov
xchg
mov
cmp
push
lods
adc
in
sbb
out
jmp
mov
sbb
push
sbb
lcall
test
test
imul
xor
sbb
std
int
pop
jb
ficomps
mov
bound
insl
mov
pop
sub
cltd
lds
sub
or
and
inc
push
ret
jmp
mov
imul
lods
dec
push
pop
inc
mov
lods
addr16
enter
in
imul
mov
ror
std
lretw
bound
cltd
inc
xchg
dec
test
shll
scas
insb
and
dec
xor
pop
inc
and
sub
mov
aaa
adc
jns
pop
adc
sub
push
loop
fwait
negb
jmp
xchg
mov
sub
push
rol
inc
call
push
subl
inc
jnp
jns
adc
adcl
sbb
push
cli
addb
cmp
jbe
mov
insb
sbb
cmp
rcll
add
lods
jnp
mov
adc
ret
fbstp
xchg
add
bound
or
stos
or
jmp
sti
sub
leave
xchg
icebp
popa
push
popa
pop
push
dec
aaa
pop
xchg
add
dec
jmp
push
movsb
rcrb
sbb
sub
sbb
pop
pop
les
inc
fisttpl
aaa
sub
cwtl
push
test
dec
ret
aaa
ror
movups
mov
test
push
in
or
and
pop
js
test
sarb
stos
es
arpl
adc
mov
cwtl
mov
xchg
push
and
call
xchg
fcomip
mov
push
mov
cmc
ret
mov
adc
add
jl
leave
daa
into
pop
loopne
jg
or
push
adc
or
popf
fsts
mov
scas
fstpl
scas
test
movsb
dec
xor
or
loopne
sti
cmpsl
cmp
add
xchg
jp
rcr
arpl
out
sbb
or
inc
xchg
pop
in
mov
mov
xchg
xchg
ds
sbb
xor
lods
jge
sti
pop
or
cltd
pop
cs
scas
lcall
sbb
push
into
push
mov
xor
cs
push
pop
sub
imul
mov
aaa
fnstenv
mov
mov
pop
xchg
rolb
xor
in
mov
push
dec
jb
insb
jl
pop
outsb
pop
pop
addl
jg
cmp
orb
mov
ss
roll
fdivs
pop
mov
inc
add
jmp
mov
inc
pop
lods
cmp
dec
and
shll
dec
or
xchg
mov
lcall
ja
test
into
das
inc
lods
rorb
mov
or
shll
mov
icebp
cmp
rcll
cli
mov
sub
pminsw
cmc
nop
test
pop
sarl
shll
rcrl
loope
sbb
movsb
xchg
jmp
lds
clc
push
add
inc
mov
inc
jo
std
push
push
rcll
fwait
loop
mov
cwtl
dec
jmp
xchg
cmc
out
sbb
int3
fimull
popf
or
rcll
and
mov
and
add
dec
fnstenv
cmp
ja
mov
nop
jle
fs
sub
xchg
xor
adc
add
jns
sahf
dec
inc
icebp
or
into
and
add
jp
insl
mov
jno
lret
add
jno
xchg
in
ja
push
mov
push
bound
dec
stos
test
fistpll
addr16
sub
xor
lods
mov
push
lock
scas
arpl
fst
mov
fsubl
notb
push
jmp
std
lods
xchg
lea
add
sbb
xchg
rcl
data16
add
fldz
cltd
xor
loopne
lahf
leave
pop
rcl
mov
adc
xor
push
mov
aam
mov
cld
xor
xchg
shld
lahf
or
fidivrs
add
mov
add
push
lahf
pop
cs
fs
xchg
inc
bnd
add
out
mov
jno
or
test
mov
jg
and
jnp
mulb
add
dec
ret
mov
mov
push
jo
jge
shr
scas
push
and
out
push
and
fmul
and
pop
pop
test
xor
out
push
push
lret
and
divb
xchg
mov
lret
or
inc
lods
enter
push
mov
movsb
pop
stc
jl
lea
cmp
pop
out
inc
push
inc
movsl
mov
daa
rcrb
xor
nop
mov
and
xchg
pop
lcall
jg
xchg
or
test
xchg
mov
imul
cmpb
sub
xchg
ss
mov
sub
iret
rcrb
lahf
out
sub
sbb
sbb
vpshufb
scas
out
push
dec
jno
rclb
shl
scas
int
leave
adc
pop
shll
mul
rcll
push
jae
frndint
sub
jae
mov
mov
adc
test
mov
dec
mov
jle
cs
das
ljmp
fwait
sub
sbb
flds
inc
mov
xchg
aam
and
cmpb
xor
out
pop
pop
js
daa
inc
fsts
lds
sub
and
outsl
cmp
aas
rorb
mov
lods
bnd
mov
inc
sub
mov
fadd
sub
xchg
scas
xchg
aaa
adc
mov
cmp
imulb
and
ret
jp
pop
fadds
cmp
cmp
sbb
inc
sub
xor
stc
cli
jle
jmp
mov
jo
and
fsubl
outsl
xor
fsub
inc
mov
cmp
xor
stc
pop
pop
cld
scas
xchg
xchg
lea
dec
hlt
sbb
mov
and
loop
mov
mov
xchg
mov
add
xor
cmp
cs
mov
cltd
and
daa
inc
mov
jb
stos
mov
cmpsb
push
mov
stos
mov
mov
loopne
std
jp
ljmp
jbe
rolb
dec
pop
add
mov
mov
insl
arpl
xlat
xchg
pusha
mov
cltd
mov
xor
ret
xor
mov
mov
shr
and
test
mov
mov
push
cmp
push
fwait
sbb
xchg
add
and
inc
xor
cmpsl
arpl
and
sbb
xchg
push
add
scas
xorl
rcll
xorl
dec
and
cmc
pusha
adc
stc
les
lea
ret
cmp
hlt
subb
sbb
fwait
and
pop
xor
ror
in
imulb
mov
mov
inc
clc
xchg
mov
das
je
mov
rclb
cmpsl
nop
dec
inc
cld
mov
in
popf
adc
cld
cmp
bound
dec
arpl
leave
mov
xor
ja
xlat
jecxz
iret
mov
ret
jbe
pop
push
jmp
sub
fldcw
lcall
xorl
push
mov
leave
sbb
std
cwtl
push
add
stos
lret
dec
cmp
xor
shr
lcall
or
lods
cmp
movsl
sub
ljmp
imul
call
aam
aad
shrl
dec
repz
outsb
sbb
jb
dec
mov
xchg
movl
cmpsb
into
mov
pop
jle
add
cli
ds
and
imul
xchg
movsb
insl
stc
jge
xor
fildll
mov
stos
push
lock
mull
xchg
cmp
cmpsl
clc
xchg
jae
filds
mov
imul
jne
outsb
in
push
and
iret
imul
add
addr16
add
fisubrs
adc
add
lret
insl
sti
loop
jg
mov
or
cwtl
mov
sub
rolb
stos
loop
push
lret
sub
mov
scas
jmp
mov
mov
pop
jno
or
or
and
mov
xchg
xchg
adc
mov
subl
fs
insl
les
sbb
mov
les
xor
dec
sbb
call
push
repnz
pop
mov
out
add
pop
sub
cmp
lods
xchg
mov
mov
xchg
pop
pushf
add
dec
mov
lods
and
jne
push
inc
outsl
pop
jl
movsl
sbb
or
ret
mov
fisubrs
jo
shlb
cmc
xchg
ret
aad
cmc
xlat
sbb
mov
adc
sub
add
mov
mov
loopne
rorl
cwtl
imul
jmp
xchg
mov
mov
mov
cwtl
mov
cwtl
pop
imul
mov
test
mov
sahf
mov
xchg
jnp
push
push
adc
je
xlat
sbbl
aam
jae
orb
pop
push
cmp
rcll
stos
mov
aad
jecxz
daa
lea
adc
test
cmp
adc
sub
mov
lcall
lea
mov
and
cmpl
stc
sbb
rol
test
or
mov
push
sti
add
scas
imul
int3
push
add
test
xchg
add
jne
scas
and
shll
loope
add
adc
pop
stos
mov
ja
cld
in
sarb
add
adcb
addr16
in
dec
dec
rcrb
test
movsb
out
out
loope
xor
sti
xor
push
mov
or
ret
pop
sbb
std
lea
or
mov
ljmp
mov
arpl
std
jle
adc
clc
xchg
popa
lock
je
mov
sbb
pusha
int3
rclb
popa
and
movsl
mov
pop
out
out
cwtl
cmp
hlt
js
lock
mov
in
mov
addr16
or
pusha
cmp
subb
sub
jp
js
inc
inc
pop
and
testb
pop
push
dec
jecxz
outsl
and
jecxz
fisubrl
or
add
jge
call
push
ret
loope
add
mov
sub
cmpb
sahf
ljmp
je
mov
mul
test
dec
sub
sub
inc
jl
popf
lret
insl
adcl
js
mov
insb
shr
and
lods
inc
lock
jge
and
insb
lods
add
adc
push
aam
fidivs
ret
xchg
dec
clc
lret
push
sub
emms
cmp
fwait
sti
stos
loope
js
pop
add
adc
inc
hlt
push
cmp
addb
loop
data16
adc
mov
cmc
xchg
insb
adc
push
xor
jl
xor
cmp
iret
fists
mov
inc
subb
out
mov
repnz
gs
fiaddl
xor
addr16
pop
incb
fimuls
jo
mov
xchg
aad
outsb
rclb
fildll
push
sub
sub
lds
mov
or
xchg
inc
aaa
in
push
stos
xchg
pop
fisubrl
mov
xor
and
xlat
lret
enter
ljmp
mov
pop
iret
ret
sbb
and
mov
adc
push
cli
test
push
and
and
push
jnp
push
add
idiv
iret
adc
jmp
xlat
mov
mov
les
xor
mov
mov
jne
jno
sub
mov
stos
aad
scas
push
imul
inc
enter
gs
mov
cs
aas
pop
pop
fcomps
arpl
rcll
smsw
inc
fistpll
lods
test
out
pushf
iret
clc
ja
cmp
in
adc
les
addr16
into
test
test
jb
pop
out
pop
and
lahf
rorb
and
add
scas
jmp
adc
lods
pop
std
sbb
pop
xor
xor
push
pop
and
mov
push
cli
jnp
hlt
cli
jecxz
negb
subl
inc
std
daa
cli
adcl
xor
mov
loopne
not
xlat
insb
xchg
pop
ret
in
test
sbb
xchg
les
clc
jbe
push
insl
push
sbb
push
imul
xlat
pop
icebp
or
pop
aam
xor
cmp
aas
js
popf
mov
repnz
push
xchg
cs
jmp
aaa
and
sub
pop
push
and
das
push
adc
and
or
sbb
movsl
pop
dec
adc
pop
ret
sbb
push
push
cli
push
adc
xchg
ja
push
mov
stos
ljmp
dec
fcoms
mov
repnz
cmp
xor
jmp
int3
bts
cmpsl
xlat
pop
mov
es
add
jno
sahf
outsl
cld
jge
dec
ja
fidivrl
ret
mov
int3
push
nop
push
leave
mov
adc
rcrl
movsb
jge
ret
in
jno
or
in
fisubs
fs
sbb
ficoml
cltd
mov
mov
call
cltd
jmp
in
in
adc
cmp
cmp
pop
push
in
mov
cmp
ret
add
ds
in
fsub
sbb
mov
orb
or
push
mov
daa
int
push
ret
in
sti
cmc
adc
in
inc
js
mov
imul
iret
lret
xrelease
repnz
popf
sub
jo
subb
and
cmp
mov
shl
arpl
cmp
ret
cmp
jne
fadds
push
in
mov
and
test
jne
xor
test
test
loop
sub
mov
leave
mov
divl
pop
hlt
mov
negb
lods
mov
pop
and
testb
adcl
mov
daa
test
adcl
jle
lock
ja
stc
cs
cmp
nop
je
repnz
rolb
cmpsl
sbb
ret
adc
mov
push
mov
lock
mov
in
mov
scas
cltd
jb
loop
iret
dec
bound
adc
xchg
mov
xchg
sahf
cs
sbb
loop
jl
repz
shrb
addl
or
sahf
sti
sarl
xchg
mov
dec
call
mov
or
test
mov
xchg
repnz
inc
xor
rorb
mov
mov
arpl
sub
mov
inc
mov
pop
ret
adc
lret
mov
cltd
pop
mov
pop
mov
cltd
pop
lods
cmp
dec
std
push
out
lahf
jne
mov
sar
mov
mov
xchg
loope
push
mov
pop
mov
cld
add
push
pop
mov
xchg
sbb
and
lret
int3
sbbb
das
lds
jge
jg
movsl
int3
pop
ds
mov
repz
dec
cmpsl
movsl
mov
jo
jmp
insb
mov
rolb
cltd
mov
in
lcall
jl
or
ret
push
xchg
push
fbstp
femms
mov
sub
std
dec
les
or
cmp
arpl
push
rolb
movsb
push
mov
clc
repnz
pop
pop
es
inc
adc
sub
xchg
into
inc
lods
in
inc
dec
mov
mov
mov
fistl
dec
or
mov
xlat
and
xchg
gs
dec
orb
outsb
lcall
mov
jp
mov
js
xchg
daa
out
jp
fs
lcall
push
test
adc
repz
sub
in
jp
pop
mov
insl
push
lahf
arpl
or
js
jne
adcb
andb
jae
lret
cmpsb
or
gs
out
ljmp
bound
test
out
add
stos
push
mov
pop
push
sarl
loope
cmp
inc
fwait
xchg
rcll
push
jne
or
daa
mov
lock
adc
jno
shlb
pop
daa
leave
mov
mov
dec
pushf
mov
xchg
sbb
mov
int3
cwtl
in
psubb
jns
inc
pop
mov
iret
repz
dec
or
iret
ljmp
aad
std
jecxz
fbstp
push
pusha
inc
mov
pop
cmp
xorb
popf
out
repz
shlb
add
pop
fisttps
xchg
push
sbb
bound
add
imul
lret
pop
add
out
jg
add
mov
loopne
pop
outsb
add
jne
aam
mov
into
xchg
ds
adc
dec
mov
out
aaa
mov
mov
xor
mov
insl
outsl
nop
incb
stc
jmp
repnz
inc
arpl
sbb
mov
mov
ret
or
pushf
ss
inc
sbb
xchg
dec
mov
mov
mov
lods
cmp
add
test
jnp
pop
mov
aam
jmp
sbb
shrl
pop
lock
mov
xor
add
pop
insl
call
mov
cld
dec
dec
mov
pusha
mov
movd
pusha
insb
lahf
mov
xor
mov
xor
ljmp
mov
fcoms
cmc
scas
push
icebp
sti
je
lcall
jp
insl
xor
hlt
add
cmp
sbb
fidivrl
xlat
xchg
fdiv
sbb
dec
jne
pushf
mov
add
mov
and
sbb
data16
fwait
jne
and
ficoms
mov
push
in
testl
pop
sub
sti
mov
mov
pop
into
mov
lret
out
cmpl
out
xchg
nop
pop
mov
sbbl
sbb
cmp
mov
cs
mov
xchg
xor
pushf
notl
bound
cmp
cwtl
xor
jnp
pusha
jl
in
mov
ds
sbb
jl
andl
pop
xor
addr16
ret
jg
adc
pop
push
xchg
dec
dec
lds
push
movsl
out
pop
dec
xor
rcrl
xchg
mov
push
pop
insl
mov
jge
push
lea
dec
inc
jo
mov
dec
insl
mov
enter
icebp
rcll
ret
test
arpl
rol
dec
and
push
or
dec
cmp
pushf
ljmp
xchg
push
xor
dec
test
push
fidivs
adc
adc
push
gs
nop
pop
jecxz
in
xchg
shr
ror
int3
in
xchg
xor
pop
mov
ret
and
out
nop
insb
xorps
rorl
xlat
inc
fsubs
outsl
xchg
movsb
scas
lods
repnz
stos
mov
addr16
ficomps
lea
xlat
pop
sub
xor
cs
jmp
call
fdivrl
ret
cmpl
jbe
mov
mov
or
testl
mov
push
mov
fstps
pop
movsb
mov
adc
lods
or
add
mulb
jbe
jb
mov
xchg
cld
imul
or
lahf
inc
sbb
or
sbb
push
jp
fdivl
mov
addr16
cld
adc
add
outsl
test
pusha
ljmp
ss
add
jne
sbbl
nop
lods
sub
push
xchg
pop
call
push
imul
cwtl
ja
cmpsb
or
dec
pop
adc
cmc
scas
or
bound
ds
dec
and
dec
mov
fnsave
int3
cmp
out
fs
inc
rcl
jns
mov
jb
pop
cs
in
jge
push
cs
xchg
lock
movsl
stos
icebp
jns
enter
jnp
aam
cmp
inc
cmp
loope
xchg
movsb
mov
test
js
fstps
dec
stc
push
fs
dec
dec
cld
out
push
push
xchg
xlat
lcall
cli
pop
scas
or
cli
test
xchg
inc
je
mov
std
mov
lods
lea
je
fisttpl
xor
icebp
mov
popa
sbb
sar
push
in
ja
lea
nop
and
mov
lds
mov
aam
enter
lret
fmuls
sub
fldcw
rcr
jecxz
mov
mov
jnp
xchg
out
and
clc
push
jne
add
lret
ds
fwait
mov
scas
mov
add
adc
repz
dec
adc
js
or
inc
xchg
mov
push
dec
pop
add
out
aaa
xchg
xchg
ret
hlt
popa
cmp
mov
fcmovnbe
or
mov
arpl
lahf
sbb
xchg
jle
mov
fbld
popf
jae
test
adc
mov
and
xchg
cmpsb
shl
add
or
or
cltd
jmp
inc
adc
mov
inc
add
pusha
sti
loopne
mov
fsubrp
lods
cmp
jle
cs
sahf
dec
outsl
add
js
or
out
adc
xchg
and
sub
sub
bound
jle
lret
sbb
mov
pop
call
xchg
add
cmpsb
or
rorb
stc
cmp
sub
xchg
inc
movsb
lea
add
shll
rclb
les
jns
in
out
repz
sbb
fs
and
inc
mov
sbb
push
pop
adc
test
fsubr
sbb
shlb
xchg
jecxz
cwtl
adc
mov
or
bound
xchg
pop
or
pop
xor
xchg
fldenv
and
js
mov
mov
aad
in
push
xchg
lds
loop
mov
mov
pusha
dec
xor
mov
int3
pop
sbb
incl
pop
movl
les
test
roll
addr16
int
mov
jge
sar
xor
mov
inc
sbb
sub
idiv
lret
out
mov
hlt
aam
adc
push
sbb
lods
inc
sbb
jmp
adc
ret
lds
leave
andb
or
pushf
adc
popa
xchg
fwait
pop
ds
push
jmp
dec
mov
test
mov
mov
out
rorb
pop
lcall
xchg
add
jns
mov
and
xchg
outsb
sub
jmp
push
mov
or
sub
inc
movsl
fdivs
rolb
mov
cmc
cwtl
jg
jle
xor
push
jmp
jmp
pushf
jbe
cli
fisttps
add
stc
fnop
push
pop
loope
cmp
jp
mov
in
iret
mov
mov
mov
mov
loop
xor
jns
loop
leave
sbb
add
pop
dec
sbb
dec
addr16
fisttpl
mov
pop
xor
fmuls
cmp
or
or
rclb
jne
add
std
mov
push
mov
pop
repnz
sti
pop
dec
dec
into
cmp
jb
add
cmc
cmp
xor
rcrl
call
push
enter
pop
cwtl
loop
mov
int
push
call
cmp
bound
pop
push
ret
and
in
mov
stos
lahf
lock
ja
int3
xchg
test
add
fcoms
xchg
cmp
in
xchg
xchg
jg
outsb
test
xor
pop
xchg
arpl
mov
mov
fwait
push
adc
push
movsb
out
imul
sbbl
mov
inc
sbb
out
pop
sub
xchg
xchg
imul
ds
sbb
hlt
push
xchg
sub
xchg
stos
sbb
sub
xor
aas
addl
dec
pop
inc
push
test
mov
xchg
push
mov
ss
xchg
fucom
and
adc
lods
xor
or
fnstenv
cmc
xor
es
xor
sbb
sarb
mov
call
in
int3
inc
jne
scas
enter
into
lret
adc
lds
ss
mov
cmp
jo
jmp
and
popf
add
popa
add
sub
iret
insl
adc
dec
jl
or
rorb
push
scas
nop
pop
mov
mov
test
add
mov
xchg
movsl
xchg
rcl
in
gs
mov
iret
insb
outsl
sub
nop
pop
pop
and
test
int
cmp
out
pushf
mov
mov
sbb
ficoms
arpl
jns
sbb
add
mov
and
jle
hlt
jl
pop
jl
iret
and
add
insb
lea
ljmp
dec
hlt
xchg
pop
gs
add
pusha
fdivs
jno
jg
xchg
xchg
fidivrl
sahf
cmc
xor
lcall
repz
out
out
sub
inc
popa
int3
std
stos
add
test
subl
insl
inc
pop
lea
cmovp
popa
test
jecxz
mov
pop
mov
test
out
and
xlat
mov
pop
mov
jo
mov
xlat
stc
dec
jl
test
inc
sbb
sbb
push
xchg
cwtl
sbb
mov
add
dec
jle
lcall
cs
mov
adc
and
jg
or
xlat
xchg
add
jo
xchg
push
mov
lea
shrl
jae
lds
insb
lods
imul
and
das
xchg
ss
pop
out
xchg
pop
adc
insl
add
push
jno
shlb
out
pop
add
mov
gs
loop
mov
out
jle
mov
pop
cmp
or
cmp
lret
xor
xor
outsl
in
mov
jns
leave
mov
lods
add
inc
insb
pushf
jge
cmp
jg
jle
test
rol
mov
adc
adc
aaa
mov
rcrl
cmp
push
and
popa
loopne
outsb
mov
imul
cmp
sub
in
cmp
mov
xchg
jae
push
xchg
cld
cwtl
mov
stos
dec
pop
push
sub
push
xor
push
out
arpl
push
and
push
cmp
js
stos
popa
cld
push
sbb
pop
jge
or
xchg
sub
push
cmp
rdtsc
jb
movsl
rol
inc
in
xchg
jns
mov
std
push
adcl
call
insl
insb
xor
adc
fbstp
ja
mov
test
enter
pushf
call
andl
and
or
ljmp
mov
inc
pop
pop
pop
xor
ds
aas
mov
adc
push
jbe
or
and
sub
stos
add
stc
imul
cmp
fildll
movhps
aaa
sbb
jmp
pop
fiaddl
clc
stc
xor
add
or
xor
adc
in
jmp
mov
mov
and
fadds
test
cs
subl
out
mov
mov
mov
cs
lods
dec
or
cmp
mov
fs
aam
repz
imul
movsl
repz
jns
cmpsl
cmpsl
lcall
mov
mov
pop
jge
mov
push
fcompl
jae
pop
add
xchg
stos
add
adc
mov
jo
xor
icebp
mov
cmpsl
sub
filds
mov
pop
dec
push
push
psrlw
insl
aad
ret
mov
cs
xlat
xchg
mov
mov
inc
pushf
addr16
mov
adcl
inc
js
mov
push
lret
jno
fwait
xchg
add
idivl
xor
push
gs
sbb
ret
mov
jns
xchg
cld
jg
xchg
inc
mov
pushf
xchg
or
ja
cmpl
pusha
mov
stos
cmp
inc
cmpsl
ja
cmp
in
dec
daa
call
add
lea
jns
iret
nop
lahf
or
mov
subl
cmp
push
push
dec
pop
inc
js
pop
nop
cmpsb
scas
push
mov
xor
fstp
push
adc
cmp
scas
push
outsl
lea
sti
dec
dec
rcrl
xchg
sbb
out
cmp
js
loope
lret
pop
push
test
mov
test
add
jecxz
cmp
int
adcl
lcall
and
mov
inc
pop
adc
loop
sbb
mov
sbb
mov
daa
scas
std
jl
pop
and
ds
jns
jbe
je
xchg
pop
and
and
mov
sbb
cltd
jne
jae
sub
rclb
test
mov
loopne
fdivrl
mov
ret
xchg
test
pop
subb
push
out
and
jge
add
sbb
sub
mov
sbb
aad
cmp
frstor
js
cwtl
sar
mov
sub
fisubs
push
outsb
std
inc
loopne
rol
arpl
xor
std
pop
sub
inc
repnz
mov
jae
insb
or
leave
jmp
mov
cmp
xchg
fwait
push
mov
in
cwtl
adc
lea
inc
clc
and
or
mov
add
ret
adc
push
mov
into
test
jbe
outsb
ljmp
add
pop
lahf
jecxz
xchg
pop
jbe
stos
wrmsr
stos
mov
es
pop
pop
pushf
stos
dec
and
mov
ret
push
flds
push
test
mov
jge
mov
hlt
into
lcall
ficoml
or
shl
xchg
fimuls
ficoms
mov
andb
add
sub
dec
test
mov
jg
dec
daa
in
mov
jno
adc
push
inc
jne
push
sbb
outsl
packsswb
xchg
xchg
jmp
jecxz
or
push
mov
xchg
arpl
add
je
fsubrs
pop
mov
mov
and
in
scas
dec
pushf
aad
xor
push
jl
dec
push
cmp
cltd
outsb
mov
out
sbb
cmp
cmp
loope
stos
add
dec
xor
mov
roll
sub
pop
pop
imul
adc
nop
leave
int3
jle
outsb
xchg
clc
dec
or
and
nop
jmp
mov
and
sub
enter
mov
jno
in
imul
popa
divb
in
cwtl
sbb
outsl
aam
mov
int
sub
mov
jl
cmp
int3
bound
addb
pop
fistpll
mov
inc
xchg
jbe
les
mov
or
dec
jne
mov
scas
inc
test
orl
std
sbb
or
pop
inc
fmulp
pusha
xor
enter
sbb
leave
pop
push
aad
push
das
test
mov
mov
out
hlt
xorl
cmp
sbb
aas
add
push
hlt
test
sub
repnz
jmp
inc
fs
adc
in
mov
pushf
push
jle
xchg
dec
lods
test
clc
mov
adc
dec
test
mov
pusha
cmp
scas
aaa
cmp
out
jmp
add
test
xchg
jecxz
les
fidivrl
inc
xor
mov
aas
addl
repnz
lock
jno
mov
or
nop
adc
and
mov
sub
int3
xchg
xchg
outsb
mov
subl
fldenv
and
push
xlat
iret
xchg
outsl
cli
mov
cmp
stc
push
sbb
or
pop
cs
ss
jae
cmp
in
jns
int
inc
inc
les
stc
add
cltd
lock
xor
and
jmp
xor
daa
push
or
test
sub
jg
add
push
mov
scas
push
and
cmpsb
rcrb
add
cmp
aaa
inc
scas
gs
out
xchg
and
cmp
pop
push
and
stos
or
ret
divl
test
movsb
cmpsl
sub
mov
add
dec
inc
xor
sub
adc
adc
cld
movsl
add
inc
cmc
mov
leave
pop
stos
add
mov
aam
dec
mov
jnp
jne
and
outsl
mov
sub
pop
jecxz
fwait
xor
fcomps
inc
stos
aaa
pop
jp
sahf
mov
jg
cwtl
pop
jmp
mov
iret
aam
or
hlt
jmp
adc
mov
in
lcall
adcb
dec
adc
aam
dec
inc
mov
in
jle
mov
arpl
push
cmpsl
imul
nopl
aad
and
aas
pushf
arpl
lds
js
mov
ror
mov
push
not
push
and
pop
inc
imul
mov
fidivs
mov
push
pop
lea
sarl
repz
call
cmp
pop
sbb
rol
clc
cmp
sbb
popa
repnz
ret
jo
pop
imul
adc
mov
adc
and
pushf
xlat
inc
jnp
push
arpl
insb
cmp
ja
loope
loope
xor
pop
mov
xchg
pop
int3
mov
popa
lods
sub
and
pop
pop
daa
dec
ss
inc
xor
adc
xor
adc
pop
pop
and
add
sarb
jnp
xor
jae
sub
add
add
cwtl
mov
pop
clc
test
insl
inc
mov
mulb
push
lods
dec
cld
jl
pop
lcall
and
push
repnz
orb
cmp
ljmp
es
xor
push
push
cmp
adc
adcl
stos
fildl
aaa
xchg
and
adc
popa
dec
adc
movsl
aad
outsb
dec
xor
in
inc
shrl
inc
orb
pop
cmpsb
or
pop
mov
les
dec
aad
inc
push
and
xchg
in
cmc
cli
cli
loop
push
pop
dec
xor
ret
jle
out
xchg
movsb
mov
adc
sarl
push
call
inc
movsb
jae
pusha
negb
mov
cmp
mov
pusha
or
xchg
test
les
ret
sbb
les
jle
fldt
mov
rolb
shrl
push
push
add
adc
aam
add
enter
add
dec
loope
and
pop
mov
lods
gs
dec
mov
sahf
mov
aam
jp
and
adc
mov
outsb
mov
jmp
or
aad
sbb
cmpsl
mov
mov
test
stos
dec
mov
or
fiadds
xchg
adc
adc
adc
push
lahf
jno
fcomip
es
bound
jb
arpl
xlat
out
mov
enter
xor
jo
fcmovne
push
push
cli
in
add
lahf
adc
nop
xor
sub
mov
mov
xchg
or
movsb
mov
and
sub
mov
sub
mov
inc
in
sub
idivb
xor
and
dec
cmpsl
jg
mov
push
xchg
ret
sbb
not
mov
and
cmp
mov
pusha
enter
xor
fldt
lret
dec
or
sub
in
xchg
dec
ret
lahf
bnd
dec
ret
inc
xor
push
inc
enter
mov
inc
repz
cmp
or
in
mov
push
and
push
scas
mov
outsl
cld
lods
push
sbb
push
adc
dec
push
stos
out
xchg
dec
or
je
cli
roll
xor
inc
int
xor
out
mov
xor
repz
jns
addr16
pop
pop
jb
in
je
pop
jge
arpl
mov
frstor
cmc
sbb
sub
xor
jno
cli
mov
jl
sbbb
in
pop
push
add
push
out
sub
lods
int3
adcl
adc
mov
sub
push
scas
inc
loope
sbb
out
push
xor
add
and
sbb
pop
enter
sbbl
adcb
jnp
std
fidivs
dec
xchg
cmpsl
scas
dec
in
mov
std
stc
mov
mov
das
sub
movsl
jne
mov
jbe
imull
mov
repnz
icebp
idivl
bswap
sub
nop
lret
outsl
mulb
loopne
mov
pop
cwtl
out
push
mov
shlb
cmpb
jne
loop
pop
jl
imul
pop
inc
scas
shl
stc
or
jne
mov
xchg
fnsave
pushl
mov
pop
and
push
addr16
test
pop
sti
xchg
mov
ljmp
icebp
dec
sti
jnp
cmpsl
dec
out
dec
xchg
mov
cltd
insb
data16
or
scas
lcall
and
lahf
arpl
in
std
pop
push
cmp
test
mov
cmp
mov
xor
pushf
mov
daa
jge
or
fldt
mov
mov
in
cmp
test
mul
sbb
aam
out
mov
ret
xlat
xchg
cmp
adc
in
xchg
xchg
arpl
add
stc
cmp
or
push
in
inc
pop
lds
shr
imulb
or
popl
lret
add
in
lods
add
std
stos
fs
shrb
mov
adc
and
mov
dec
stc
xor
cli
in
outsb
push
add
pusha
ja
addr16
jno
xor
shll
sub
rdmsr
outsb
aam
in
mov
jne
cs
sub
cmp
ljmp
cmpl
dec
in
inc
mov
jnp
sub
adc
sbb
das
out
rcrb
mov
pop
lret
xchg
movsl
lahf
sti
inc
jge
adc
rol
orb
xor
mov
orl
outsb
hlt
mov
aad
inc
inc
or
int3
jb
dec
sub
ret
adc
pop
xor
pop
lea
jne
mov
mov
repnz
lods
mov
sbb
rclb
insb
lret
mov
std
xor
cltd
dec
push
pop
jbe
mov
xchg
stos
jb
test
mov
add
ds
xchg
lret
xor
test
cli
ljmp
mov
jp
lahf
push
call
push
adc
sbb
cmp
lahf
lods
mov
fadds
xor
jle
mov
jge
dec
jp
cmp
seta
sbb
inc
les
add
into
or
out
adc
lret
test
in
ret
jno
fwait
cmp
fildll
mov
or
movsb
bound
jnp
mov
shl
push
das
mov
pop
and
subl
int
das
std
ret
xlat
mov
int3
fstpt
adc
dec
sbb
inc
dec
test
mov
ret
xchg
scas
repnz
in
fildll
out
dec
sti
jae
sbb
es
scas
pop
insb
pop
cmc
call
cmc
push
jae
in
mov
mov
adcb
mov
into
mov
roll
test
jl
adc
dec
push
arpl
mov
cmp
cmpl
push
fsubs
jle
les
xlat
int3
sbb
shrb
cmp
cld
mov
ds
push
mov
jbe
or
push
rolb
in
cmpb
call
mov
add
mov
sub
icebp
lcall
gs
pusha
jb
js
or
sbb
xchg
movsl
outsb
fs
imul
mov
lahf
lea
jg
sub
lcall
lcall
jo
ret
loop
xchg
popa
je
xor
jmp
xor
pushf
test
inc
scas
les
js
push
adc
call
test
lret
mov
dec
push
test
test
lcall
mov
outsl
movl
sub
fstl
stc
sahf
jecxz
aaa
cli
andl
stc
mov
or
outsl
push
mov
and
insb
aaa
push
xchg
push
jp
fwait
sarb
xor
in
jae
scas
pop
jp
and
in
and
andl
shrl
cs
clc
mov
xchg
cmpsl
pop
sbb
mov
pop
jne
aaa
fstpl
ljmp
mov
int
jge
cmpsl
adc
mov
mov
pop
and
inc
pop
or
and
pop
jo
pop
lds
notb
fidivrl
push
insb
jo
cmpsb
xchg
aas
sbb
out
outsb
and
into
xchg
insl
lcall
ret
mov
jo
sub
notl
icebp
pop
ror
pop
inc
test
rorb
rorl
sub
pop
fcoml
es
and
addl
jb
mov
les
ds
scas
icebp
lock
mov
jecxz
pop
cwtl
test
xchg
jmp
inc
imul
jae
cmp
std
addl
cmc
mov
imul
mov
jae
std
das
stc
dec
jge
push
push
test
xchg
add
mov
fstpl
bound
loopne
sbb
xor
aam
dec
push
and
or
cmp
lret
xchg
xor
pop
jae
inc
sbb
push
ss
jecxz
packsswb
loop
jg
sahf
inc
aaa
nop
lahf
pushf
inc
adc
imul
mov
mov
mov
cmp
in
call
mov
cmp
ljmp
push
mov
outsb
mov
jl
jmp
xorb
lahf
andl
push
insl
test
int3
sbb
xchg
xchg
pop
fcmove
mov
mov
shr
or
dec
jg
push
jbe
xchg
xor
jge
push
dec
jo
jno
mull
add
sub
pusha
push
daa
leave
call
subl
hlt
shll
enter
dec
sar
insb
xchg
push
enter
lods
mov
int
xorl
inc
test
pop
push
push
rcl
lods
and
int
scas
dec
push
mov
mov
daa
add
ficompl
dec
or
mov
lret
jp
pop
stc
mov
jnp
sti
shrl
lmsw
push
dec
add
getsec
push
pop
push
or
jnp
fwait
std
adc
pslld
mov
mov
icebp
xchg
out
je
sub
cmp
dec
jmp
jecxz
xchg
add
mov
add
mov
hlt
bound
sub
mov
push
cmp
adc
outsb
fldt
shlb
xor
ret
cli
sbb
pop
rcr
or
adc
sub
ds
mov
sti
outsl
in
pop
and
sahf
daa
cwtl
test
mov
and
gs
and
xchg
aad
adc
adc
movsl
and
sbb
pop
or
mov
pop
push
rorb
and
cmp
and
aas
xchg
fwait
adc
lods
sub
inc
out
stos
mov
test
cltd
xor
add
xchg
xor
clc
push
inc
and
jle
pop
testl
cmpsb
xor
lds
adc
ja
pop
out
mov
and
ja
movsl
sub
pusha
lcall
es
mov
push
mov
push
mov
lock
scas
jbe
clc
mov
cmp
repz
jno
mov
popf
stos
add
and
or
fiaddl
iret
adc
adc
adc
push
push
cld
lds
fisubrl
fcomp
push
pushf
cmp
mov
insl
inc
push
fwait
mov
ss
xchg
into
push
mov
fldt
les
xchg
cmp
sbb
jle
sub
mov
imul
bnd
fisubrl
mov
test
mov
push
xor
mov
fwait
and
fldenv
mov
inc
mov
rorl
mov
ds
idivb
adc
repnz
out
fcom
cmc
repnz
ds
push
mov
xchg
jp
xlat
push
pop
test
push
jle
gs
das
sub
sarb
ficomps
xchg
sub
hlt
cmpsl
lds
jns
pushf
inc
mov
cmp
jmp
dec
xor
test
leave
int3
push
xor
mov
sub
ror
pop
dec
pop
cmp
or
inc
ja
dec
sub
cmp
div
cmp
aad
mov
adc
roll
jmp
xor
ja
in
push
loop
add
dec
or
push
mov
scas
cmp
mov
pop
shrl
sbb
mov
ret
mov
test
cmp
push
lea
and
inc
pop
jne
add
sub
lock
xchg
sahf
fisubl
je
inc
hlt
xchg
test
and
xchg
pop
mov
jae
inc
mov
leave
iret
xor
lahf
sahf
or
sahf
iret
pop
mov
or
inc
rcr
jne
aaa
out
mov
mov
mov
push
fwait
das
cmp
das
jae
je
inc
or
test
fcmove
in
sub
aam
repz
ret
push
jg
sub
or
popf
mov
mov
cmp
sub
jmp
mov
xchg
test
lds
outsl
std
sbb
dec
testb
pop
int
ret
inc
pop
out
push
inc
mov
and
xlat
rcll
fstpt
jl
dec
or
jl
and
sbb
sbb
lock
insb
ja
sub
subl
shr
inc
lods
push
cmc
inc
lret
push
es
pop
fistpl
jge
test
lds
jl
cmp
sub
adc
jbe
in
pop
adc
pop
or
test
pop
mov
into
sbb
sub
in
sbb
cmc
adc
pusha
sbb
out
das
push
cli
cmpb
sbb
ret
mov
xchg
dec
xchg
inc
lret
dec
sub
xchg
imul
lcall
test
jmp
jl,pn
sbb
sub
fstpt
pushf
lahf
sbb
push
mov
lods
bswap
stos
nop
sub
dec
test
lcall
aam
add
popa
aaa
jno
dec
test
cwtl
cmp
push
jnp
mov
pop
pop
adc
push
testb
in
outsl
rcrb
dec
imul
mov
cs
lret
addl
push
dec
mov
insl
cmpl
scas
adc
lcall
pop
lea
jl
fwait
imul
stos
shl
xor
sub
movsl
aad
fiaddl
addb
aas
xchg
fildll
ja
push
test
pop
stos
clc
xor
cmp
xlat
xchg
push
sti
scas
mov
lock
cmp
and
xlat
idivl
pop
in
sub
into
mov
or
test
cltd
dec
xor
repz
cld
hlt
mov
mov
push
mov
aaa
cmpsl
leave
fwait
add
addr16
push
sbb
xchg
mov
jl
jle
and
xorl
jbe
push
xlat
rep
test
inc
and
sub
sahf
sbb
fucomip
xchg
mov
lock
jecxz
add
adc
movsl
xor
sbb
sbb
or
repz
les
out
bound
pop
or
hlt
mov
sbb
push
xchg
arpl
verw
loop
adc
mov
pop
dec
sbb
scas
ds
call
dec
inc
pushf
fxam
vpandn
push
adc
and
dec
es
not
push
dec
sti
mov
out
pop
int
adc
fisubl
sub
mov
sbb
add
test
jmp
xchg
stos
dec
mov
rcrb
mov
outsb
mov
icebp
push
mov
test
lods
imul
mov
movsl
clc
sub
in
mov
xchg
xchg
jecxz
xchg
pop
fwait
mov
xor
addr16
xchg
iret
sbb
in
jp
sub
and
and
push
push
mov
xorl
mov
inc
cltd
rcrl
xlat
outsl
or
scas
out
or
sti
daa
jmp
push
lods
jecxz
dec
jbe
test
xor
xor
notb
repnz
or
aas
rclb
sahf
xor
or
fidivrl
test
into
roll
int
sub
pop
out
out
mov
cmpsl
push
mov
mov
in
repnz
cmpsb
jns
in
notl
icebp
out
mov
dec
add
xchg
enter
aad
push
pop
inc
mov
xor
shrb
mov
mov
cmpsb
or
into
sti
loop
cs
call
push
sbb
loopne
std
jnp
js
inc
xchg
mov
mov
enter
popf
in
xchg
lock
clc
rorb
mov
inc
mov
movsb
daa
mov
pop
sbb
jle
inc
mov
sbb
aam
push
pop
fistl
xor
test
int
testb
sub
xlat
mov
adc
or
and
cmp
cmp
mov
out
push
btr
jne
push
les
inc
pop
xchg
inc
call
and
dec
push
adc
icebp
nop
dec
sbb
pop
jge
stos
xor
iret
mov
mov
outsl
sbb
jle
je
std
inc
mov
insb
rcrb
repz
adc
jecxz
inc
xorb
iret
out
test
dec
mov
sbb
inc
and
or
sahf
sbb
xchg
push
jl
ffreep
imul
cltd
pop
lds
push
out
sbb
lock
push
pop
mov
mov
xchg
pop
lock
pop
add
cmp
add
aas
mov
pop
mov
dec
fstpt
xchg
mov
movsl
or
xor
insl
popa
ljmp
imul
cmp
stos
and
test
jmp
pop
cmpsl
sahf
fs
ljmp
mov
cltd
push
inc
scas
xchg
xor
inc
pop
imul
cmp
sarl
dec
dec
dec
jno
xor
dec
fistpll
push
cmc
repz
test
push
mov
pop
inc
lea
aad
xlat
adc
fists
xchg
testl
dec
out
and
popf
jl
mov
mov
loope
and
add
ror
adc
lret
jle
push
cmp
sti
add
arpl
cmp
loope
or
cwtl
mov
add
xchg
imul
lret
lock
das
sbb
mov
lds
jno
mov
je
jl
mov
mov
mov
cmp
aas
push
jge
iret
xchg
inc
mov
lock
test
inc
xchg
bound
sbb
jmp
pop
mov
inc
mov
sbbl
or
pop
fisttpl
mov
pop
ret
test
fs
jl
cltd
cmpl
pop
imul
mov
mov
push
scas
outsb
les
pop
mov
movsb
pusha
pop
das
je
sbb
test
sub
arpl
and
out
cmpsb
into
stos
pop
pop
push
fdivl
push
adc
rorb
ss
push
fiaddl
addb
xchg
lret
push
jbe
fidivs
mov
mov
add
sub
test
cmp
xor
mov
or
mov
es
cmpsb
testl
movsl
icebp
jmp
xchg
in
xchg
and
inc
shll
mov
push
sbb
push
clc
pop
loopne
les
xchg
fimull
jns
xchg
iret
or
sbbb
xor
mov
xchg
mov
add
mov
xchg
add
sti
xchg
sub
sub
pop
and
leave
dec
cmp
je
mov
mull
or
fwait
push
mov
jno
fidivrs
pop
arpl
push
jbe
cmpsb
and
push
lahf
outsl
repz
xchg
xchg
sbb
xor
pop
out
push
out
jmp
push
push
ds
outsb
stc
or
fwait
jge
les
jge
daa
sti
lods
mov
jle
fwait
or
js
jge
pop
or
je
jo
subb
dec
push
outsb
fidivrl
jmp
pop
loopne
movsl
mov
add
js
fadds
mov
in
push
popf
inc
sub
out
cmpb
add
loop
cmp
out
cmp
mov
and
mov
sti
ljmp
out
hlt
hlt
adc
jno
aas
mov
movsb
lret
sbb
adc
xchg
bound
test
sub
cmp
movsb
lea
mov
mov
jmp
pop
ss
sbb
xchg
out
ret
mov
jle
outsl
shlb
fmul
test
push
fld1
enter
inc
mov
mov
sbb
inc
xor
fdivrs
addb
cld
mov
pop
adc
clc
jl
dec
aad
sub
mov
jle
mov
mov
push
sbb
stos
insl
dec
add
popa
jmp
sub
jp
mov
test
test
mov
push
repz
int
cmp
nop
cmp
jg
dec
add
sti
sbb
mov
mov
push
sub
repz
mov
cmpsb
cs
jecxz
lds
sub
pop
jbe
mov
or
popf
in
push
mov
ds
add
add
add
jno
pop
xchg
repz
push
int3
fcompl
ficoml
scas
out
in
nop
mov
or
cmpsl
push
ljmp
std
leave
adc
imul
and
or
xor
stos
ret
leave
aam
out
push
movsl
xchg
jbe
cmc
or
das
stos
movsl
or
mov
das
dec
pop
add
imul
push
dec
lea
dec
mov
xchg
mov
insb
dec
movb
mov
inc
lahf
ds
push
pop
jp
rol
cmp
xchg
sub
loopne
inc
insl
mov
xchg
xor
stc
icebp
mov
outsb
cmp
sub
cmp
mov
pop
imul
or
pop
push
cs
mov
xor
or
es
imul
mov
test
xor
imul
int3
ss
test
jg
adcb
add
pop
sub
mov
mov
push
pop
or
sahf
mov
loope
pop
lods
and
mov
sub
pop
mov
stc
es
push
jp
jns
arpl
int3
add
dec
fsub
sub
stc
mov
icebp
cmp
fdivl
jo
jmp
xchg
sti
jg
add
fcmovne
mov
dec
and
cld
jbe
movsw
sbb
cli
arpl
push
aas
jne
mov
jae
shll
cwtl
mov
push
jmp
push
stos
int
xor
aam
mov
adc
imulb
mov
sbb
jmp
dec
add
decl
clc
dec
cmpsl
xchg
pop
push
inc
xor
dec
hlt
push
out
push
cmp
ss
jae
mov
rorb
out
mov
xor
dec
bound
dec
sahf
mov
mov
out
lahf
int3
or
dec
pushf
rorl
cld
stc
sub
xchg
test
xor
mov
pop
jl
in
outsl
jecxz
jle
jg
sbb
sbb
leave
aad
ja
pop
sbb
test
sub
enter
inc
test
xorl
sub
xor
lods
sub
jl
out
mov
jecxz
cmp
repnz
shlb
addl
sub
ficoms
cld
pop
scas
jnp
mov
das
push
cmp
add
ret
loopne
andb
xchg
mov
cmp
mov
orl
push
lea
mov
jp
in
outsb
clc
fwait
cwtl
lods
and
aas
mov
xchg
push
sub
std
sub
mov
sbb
out
test
shl
pop
pusha
leave
popa
cmp
fsub
sbb
out
nop
sub
add
jg
daa
pop
rolb
and
xor
pop
push
outsb
cmp
xor
xchg
and
aad
xor
jl
xchg
sbb
mov
ret
aaa
fbstp
lahf
nop
xchg
mov
inc
jle
inc
jmp
mov
int3
or
stos
dec
out
dec
loope
cld
inc
fisubrs
ljmp
jae
mov
xchg
je
lods
scas
add
pop
jnp
and
popf
push
outsb
jbe
jbe
cmpsl
xor
mov
or
cmp
stos
mov
sbb
jge
in
in
jae
jp
mov
incb
mov
add
gs
cld
xchg
mov
xchg
jb
das
mov
lods
cmpb
icebp
shrb
fistl
cmp
js
insl
sub
mov
fistpl
mov
scas
clc
imul
jp
sbb
mov
inc
fisubrl
push
and
push
outsb
scas
xchg
cltd
and
test
out
lret
inc
loop
and
movsl
pusha
pushf
clc
pop
hlt
xchg
push
xlat
sahf
les
mov
push
into
pushf
das
jmp
push
movsb
shl
stc
jmp
mov
xchg
push
mov
push
dec
dec
mov
push
mov
test
mov
popf
mov
mov
movsb
fdivrs
jnp
cmc
mov
cli
cmc
cld
mov
mov
dec
aam
and
push
pop
dec
jecxz
ja
pop
subb
in
push
cmp
vmptrld
cs
cmp
incl
or
mov
scas
scas
push
push
cmp
js
fmuls
jecxz
sub
sub
out
xor
add
leave
xchg
push
aam
cmp
pop
dec
cld
sub
or
jle
adc
lock
inc
jns
mov
popf
xchg
jmp
xor
ds
xchg
int
fcom
stos
mov
jp
in
inc
mull
sbbl
insl
emms
mov
push
push
call
movsl
cs
sub
mov
push
mov
jl
adc
ss
mov
add
mov
lcall
xor
lcall
daa
fwait
mov
scas
in
imul
sti
or
lret
outsl
pop
lock
insl
lods
mov
iret
push
mov
pop
sarb
jge
in
inc
sbb
and
and
test
adc
mov
mov
shl
inc
xor
cmp
add
cmpsb
cmp
mov
lret
cmpsb
into
xor
fld
sbb
icebp
push
push
insl
cmc
mov
dec
repz
and
inc
mov
mov
pop
xchg
cltd
in
in
scas
pop
pop
cmc
sahf
and
sub
pop
insl
loop
daa
mov
or
popl
gs
notl
shlb
fcomp
sub
or
rcrl
adc
pop
and
test
sbb
andb
push
sbb
mov
int
xchg
push
push
cmc
xchg
sub
movsl
jo
aaa
cwtl
xor
inc
push
add
adc
add
js
shrl
xchg
xchg
stc
cld
push
lods
lods
mov
and
mov
stc
mov
enter
push
xchg
subb
or
pusha
cmpb
daa
push
leave
push
ss
pop
jne
xchg
cmp
mov
mov
stos
aad
ficomps
and
jnp
neg
dec
negb
sbb
jbe
pop
in
mov
push
mov
xor
imul
jle
xor
loop
sub
dec
jno
or
fdivs
xor
pop
pushf
int3
lcall
insb
aad
dec
mov
inc
dec
jae
and
dec
jns
sbb
cmpsb
in
jmp
mov
xchg
mov
dec
out
adc
stc
insl
or
jecxz
stc
stc
adcb
shll
test
xlat
adc
push
inc
gs
mov
lds
add
and
sarb
pushf
sub
les
mov
mov
push
int
scas
push
stos
test
adc
pop
fnstcw
adc
outsb
icebp
ss
jmp
mov
scas
loopne
rcrb
imulb
lods
ljmp
clc
shl
pop
push
xor
push
int3
adc
add
add
cmpsl
popf
adc
push
mov
pop
push
and
add
sbb
jae
xchg
hlt
adc
pop
ds
in
sbb
jg
mov
adc
repz
sub
icebp
shrl
cld
pop
cmp
cmp
pop
jg
fs
mov
sbb
sti
adc
test
jno
outsl
and
add
jne
pop
cmp
pop
popa
xchg
rcr
jbe
mov
and
lcall
je
cmp
mov
bound
jecxz
jb
stos
mov
xor
loope
add
rcl
push
cmpsl
pop
in
add
push
pop
mov
adcb
adc
je
inc
push
test
bound
notb
out
sub
orl
aaa
sbb
cmp
push
jle
fs
push
ret
sbb
xchg
xor
fildl
stos
mov
outsb
cld
jecxz
roll
js
leave
test
mov
pop
lds
add
add
pop
and
jns
lods
imul
inc
imulb
movsl
sbb
pcmpeqd
adc
sub
jae
das
je
pop
das
jno
pop
adc
out
pop
adc
loop
xor
fdecstp
inc
orl
cltd
gs
mov
out
push
push
cmp
pushw
fidivs
sahf
imul
push
sbb
mov
cmpsl
mov
or
adc
dec
pop
pop
xchg
xchg
movsl
outsl
dec
mov
xchg
xor
inc
dec
xlat
and
andl
push
xor
loop
lea
aad
lea
daa
fstpt
inc
xchg
add
ss
addr16
scas
mov
ret
push
aas
mov
push
sbb
cmp
jnp
out
add
inc
addr16
popa
inc
imul
movsl
addr16
jp
fldt
iret
shrl
pop
xchg
mov
mov
jo
test
jns
in
adc
add
or
test
add
inc
or
int3
lock
mov
jo
mov
das
mull
dec
pop
testb
push
mov
jl
mov
out
cmp
xor
mov
jle
ret
pop
cmpsb
test
sub
jecxz
repnz
stos
or
and
xlat
insl
inc
adc
cmp
fisttps
cld
lahf
addb
push
fstl
fwait
call
or
adc
ljmp
xchg
daa
ljmp
in
in
xchg
mov
add
out
jge
int3
push
add
sti
test
jbe
leave
inc
jnp
mov
sbb
cmpb
sub
shrl
jns
repz
dec
popa
inc
jp
lods
and
or
inc
sub
xor
outsl
pop
mov
fdivr
in
shrl
std
mov
fldcw
sbbb
loop
inc
and
sub
js
repnz
xchg
dec
jnp
pop
ss
les
pop
mov
sub
pop
jne
lds
cli
or
lret
jp
in
dec
into
fsubp
pop
push
lock
jne
and
pop
pop
mov
inc
sub
adc
lds
or
scas
data16
dec
sub
fdiv
jne
push
test
xor
cwtl
cmp
mov
js
xchg
mov
inc
cmpsb
xor
inc
je
mov
xchg
sbb
sbb
mov
mov
aad
add
jl
add
mov
jno
bound
mov
rcrl
inc
dec
and
ret
sub
inc
mov
jl
mov
arpl
push
mov
and
adc
cld
inc
push
js
lahf
aaa
xor
test
inc
iret
into
mov
ret
popf
data16
jb
push
fstl
push
push
inc
fists
in
ja
dec
stc
mov
aas
dec
jge
jo
mov
jne
movsb
mov
fstps
mov
mov
push
popa
mov
cli
out
xlat
arpl
sahf
jge
inc
pop
mov
pushf
jp
repnz
inc
sbb
hlt
and
jmp
adc
orl
scas
cltd
pop
sub
mov
cmp
lods
ds
outsl
dec
push
mov
cmp
lcall
aam
out
dec
mov
push
lods
loope
pushf
cmpsl
xchg
adc
iret
mov
test
shll
test
jle
daa
jbe
lahf
icebp
fchs
into
jnp
jns
stc
fnstenv
adc
xor
jno
push
daa
fcoml
and
cmp
fbstp
mov
gs
out
test
popf
sti
push
test
popf
sbb
clc
mov
dec
cmp
lock
xor
mov
in
test
xchg
testb
pmaddwd
jmp
sbb
jae
jbe
xor
flds
or
jmp
data16
jg
adc
jmp
xchg
jns
iret
push
xor
lods
xchg
movsb
je
mov
and
mov
mov
imul
ss
fwait
mov
jnp
call
imul
xchg
ljmp
lods
jnp
lahf
repnz
cmpsl
push
mov
enter
xchg
out
mov
dec
push
je
jne
sbb
ret
push
ss
xlat
insl
sub
mov
xchg
push
adc
xor
cli
cmpsl
aam
jbe
test
stos
xchg
push
mov
je
mov
pop
cmc
mov
lret
ljmp
clc
jecxz
ss
outsl
xor
ja
jp
test
arpl
movl
iret
mov
pop
cmp
mov
pop
pop
stos
inc
hlt
sub
lret
stc
push
pop
cwtl
gs
xor
push
cmp
xchg
jbe
jo
pop
push
rol
testl
fnsave
cld
test
jbe
ror
pop
shufps
inc
lock
stos
mov
and
sub
into
rcll
cltd
loope
sub
adc
ds
sbb
test
ljmp
mov
divb
aam
imul
and
xchg
or
popf
dec
mov
pusha
scas
xor
adc
jne
es
and
xchg
pop
push
gs
shll
mov
pushf
xor
popf
xor
mov
or
xor
jle
lret
leave
cmp
dec
insl
mov
inc
cld
js
dec
mov
nop
shll
scas
push
jae
cwtl
pop
dec
out
scas
rorb
aam
incl
stos
icebp
in
inc
in
dec
hlt
ret
pop
hlt
cmp
push
or
rcrl
in
mov
cld
clc
sub
inc
jge
scas
jle
and
jecxz
int3
sub
enter
mov
roll
mov
rcl
lds
out
test
xchg
sub
jmp
adc
ljmp
enter
sbb
push
fnstcw
pop
push
leave
cmc
and
xchg
insb
push
xchg
adc
addr16
mov
popa
lods
xchg
push
call
int
aas
addl
dec
and
jne
jecxz
and
and
or
mov
inc
lret
call
mov
andl
mov
or
cli
js
fisubrs
jecxz
fs
scas
xor
cwtl
mov
mov
int3
call
loopne
or
sahf
push
inc
cmpsb
inc
shlb
arpl
xchg
dec
shl
dec
rcll
lods
xlat
rclb
xchg
sbb
dec
jbe
xchg
out
out
jg
addr16
xor
ljmp
ss
push
mov
sub
mov
pop
movsl
pop
xor
mov
mov
in
jp
push
xor
mov
add
push
xor
pop
bound
out
mov
adc
sahf
stc
jbe
mov
mov
sbb
inc
mov
mov
xor
out
comiss
aad
in
add
out
xchg
mov
je
xchg
cmp
nop
xor
mov
sub
mov
jbe
fwait
cmpsb
mov
je
jno
xchg
iret
mov
aam
dec
xchg
test
into
lcall
jnp
jae
lods
pushf
sarb
push
in
xor
insl
icebp
push
cmp
icebp
xchg
jge
push
cmp
rcrl
arpl
mov
movsl
arpl
push
push
xlat
hlt
xor
fldcw
scas
push
lcall
lret
fidivl
mov
add
mov
jbe
imul
inc
pop
push
shrl
mov
pop
pusha
mov
popf
inc
pushf
push
pop
or
mov
iret
jno
insb
xchg
cmpsl
jbe
mov
lcall
jno
xor
out
dec
fdivl
cmc
hlt
or
scas
popa
mov
arpl
sti
aad
push
mov
outsl
dec
jo
mov
dec
and
push
shl
lret
jnp
xchg
movsb
sbb
push
xor
dec
outsb
sub
out
incl
insb
scas
mov
or
jmp
adc
fcmove
lcall
jle
shll
out
pop
popa
sbb
pop
add
inc
mov
mov
or
ljmp
std
push
pop
pop
cmp
lds
mov
addr16
jo
test
jnp
push
or
fxch
leave
xor
dec
mov
outsl
jp
push
mov
cs
shll
push
je
push
sub
pop
add
iret
int
add
lods
enter
data16
fs
pop
pop
jmp
loope
fsts
mov
movsb
fcomp
cmp
into
xor
mov
mov
mov
adc
fwait
add
xor
insb
out
rol
jne
pop
in
mov
sub
shlb
jl
rclb
sub
frstor
scas
outsl
outsb
fimull
mov
dec
ja
push
scas
notl
dec
es
mov
mov
push
ljmp
adc
mov
push
and
dec
test
sub
cmp
inc
imull
test
and
push
adc
loop
repz
or
int
sub
push
push
xchg
xchg
adc
in
lds
jns
adc
xor
sub
or
mov
mov
insb
sbb
lret
sub
cmp
jl
sarb
lret
dec
iret
sub
fistpl
xor
inc
or
loope
int
outsl
shrl
inc
dec
in
ljmp
jnp
adc
xlat
je
xor
mov
mov
fwait
insl
mov
pop
pop
adc
push
sahf
mov
adc
pop
sbb
cmc
add
insl
test
inc
jecxz
fcom
mov
push
aam
push
fsts
and
push
out
xchg
jb
pop
dec
adc
idivb
xor
adc
adc
shrl
add
jle
insb
aaa
mov
out
push
shr
sbb
test
fists
push
popa
aaa
push
lods
icebp
lods
xchg
push
test
sbb
mull
iret
inc
mov
pop
lods
jle
push
add
out
adc
mov
mov
rorb
jl
fsts
clc
push
mov
sahf
into
aaa
pop
les
popf
int
fidivl
push
lcall
pop
fadd
inc
popf
or
pop
sbb
out
cwtl
repnz
imul
xorl
mov
cmp
data16
test
dec
inc
pop
sub
inc
jne
or
movsl
loopne
pop
cmpsb
test
xchg
nop
mov
inc
iret
push
dec
push
push
xchg
inc
push
cmp
dec
push
ja
xor
mov
sub
dec
popf
bound
stc
xchg
cwtl
pop
shrl
pop
inc
mov
inc
pop
inc
adc
or
pusha
adc
subl
test
loope
adc
outsb
insl
sbb
in
clc
jmp
repz
dec
mov
pushf
mov
lret
inc
pushl
xchg
fs
das
xor
xchg
xchg
test
loope
mov
aad
testb
cli
inc
pusha
sbb
mov
popf
inc
sbb
fldenv
lret
mull
and
cwtl
or
xchg
in
iret
ja
push
icebp
pop
imul
into
aas
loopne
mov
fistpl
fildl
sub
cmpsl
jb
mov
push
jp
and
in
push
xchg
lock
fsubl
cmp
test
in
movsl
aad
clc
add
subl
adc
out
ja
out
cli
xchg
xchg
push
insl
les
lods
push
lds
jnp
xor
mov
je
sti
sarb
add
cmp
icebp
cmp
mov
in
inc
push
in
test
push
adc
in
mov
lds
loop
test
popf
push
adc
fcomi
jo
sub
jnp
mov
repnz
xchg
pop
or
subb
xor
and
jns
sub
jge
loopne
mov
andb
jnp
add
jo
mov
mov
ljmp
mov
ds
sbb
push
sbb
pop
and
add
mov
push
in
add
xchg
lds
cmpsl
cmpsl
xlat
inc
test
dec
push
mov
in
aam
int3
idivl
clc
js
mov
xchg
test
fstpt
loopne,pt
out
lret
pop
popa
lahf
sub
jns
stos
xchg
inc
fcomp
lret
shll
xchg
push
or
xor
push
orl
xor
loope
push
lds
cmp
jle
insb
cltd
ss
in
ror
mov
shll
pop
fisttpl
mov
in
orl
fs
and
xchg
inc
loop
mov
inc
xor
jl
add
mov
lods
mov
negl
and
dec
pop
mov
jns
leave
ljmp
fsts
lea
or
test
jmp
add
adc
jno
sub
push
lock
xchg
leave
adc
test
mov
ret
xor
dec
adc
les
pop
add
arpl
icebp
cltd
cmovg
fistl
xchg
ljmp
jae
xchg
dec
dec
call
sbb
pop
adc
or
pushf
pop
add
jl
adc
or
dec
xor
xchg
outsb
pop
nop
push
xchg
add
fildll
rolb
insl
ret
jae
cmpb
mov
fsubrl
jmp
stos
pop
imul
or
mov
std
clc
mov
sub
mov
lds
mov
clc
cmc
push
sahf
movsb
adc
incl
frstor
fildl
mov
lahf
xor
and
xchg
inc
sbb
call
sub
xchg
outsl
mov
pop
es
nop
outsb
fdivrs
adc
pop
mov
cmpsl
push
daa
xor
sub
flds
mov
fwait
hlt
out
inc
pop
ss
jbe
repnz
dec
mov
sub
pop
dec
jp
fwait
sub
ror
jge
sbb
test
hlt
mov
xchg
sbb
push
lret
cmpl
inc
xchg
movsb
mov
icebp
mov
andl
pop
movups
mov
adc
pushf
sbb
pop
mov
bswap
adc
adc
xchg
sub
adc
pop
push
dec
pop
inc
dec
and
cmpl
dec
xor
jno
cmp
mov
arpl
ljmp
mov
xor
and
test
cmp
push
lret
cld
mov
popa
add
repz
ljmp
data16
lods
adc
decl
xchg
mov
loopne
je
das
jmp
loope
sub
sbb
je
fnstenv
jp
ret
sub
fidivl
mov
dec
repz
xchg
or
mov
inc
xor
push
mov
ret
xor
dec
mov
push
cli
jge
cmp
cld
mov
sub
test
and
lahf
mov
ja
outsb
cmc
inc
push
ja
bound
push
mov
dec
pop
inc
loopne
pop
cltd
sbb
pop
insl
fsubl
sbb
mov
sbb
hlt
lret
sub
sub
jmp
mov
mov
lret
xor
xlat
jle
jl
and
and
jno
and
sbb
aaa
inc
fidivl
xchg
cmc
and
push
push
ror
fwait
inc
dec
cli
adc
or
xchg
xchg
mov
pop
jnp
das
pop
jmp
xchg
or
fcmovnb
jns
or
fs
jp
call
mov
pushf
mov
pop
sbb
xor
clc
add
ja
jnp
pop
loopne
mov
push
ret
inc
sub
xchg
jns
lods
jnp
movsb
call
xor
idivl
mov
dec
vphaddubd
loope
sub
push
fadds
mov
jecxz
dec
enter
adc
pop
cli
ret
pop
das
wbinvd
pop
adc
pop
pop
xchg
or
fistl
push
or
dec
jmp
mov
mov
jno
gs
add
dec
or
movsb
aas
scas
jns
xchg
inc
out
lret
idivb
dec
push
jns
movsb
cld
cmp
outsb
sahf
sub
dec
aas
pop
xor
pushf
jo
fsubl
or
mov
imul
add
push
pop
pop
inc
cmpsb
mov
fcmovu
cld
sub
fdivrs
inc
in
dec
add
ljmp
fldcw
iret
add
out
xchg
add
lcall
xor
adc
loopne
call
imul
rolb
xchg
cld
jp
pop
stos
sbb
sbb
subb
push
popa
icebp
push
pop
add
arpl
dec
add
outsb
movsb
movsl
xchg
mov
fwait
xor
lds
repnz
loope
adc
icebp
sub
mov
cmpsl
jmp
loopne
arpl
es
lret
rolb
push
and
mov
pop
int
lea
inc
je
movsb
test
mov
out
imul
xorb
pop
lds
leave
ja
lret
pop
jmp
jmp
fsubrl
push
pop
ljmp
mov
out
scas
mov
add
shlb
sahf
adc
rolb
jecxz
sbb
ret
ss
cs
pop
jbe
jle
stos
mov
dec
xor
outsl
mov
cmp
or
es
add
into
inc
lock
es
adc
mov
cmpsl
xor
push
sti
stos
mov
mov
shll
es
or
jp
cld
dec
push
call
daa
inc
imul
out
push
scas
push
xor
xor
fucomp
jg
xchg
mov
mov
fs
mov
fstpt
andb
and
inc
xchg
mov
inc
adcl
mov
out
nop
and
or
cmp
int
decb
in
xchg
xor
jg
jae
jns
xor
pusha
cmp
sbb
or
mov
pop
or
loop
ret
lea
in
test
push
jge
or
stc
cwtl
fs
das
movsl
lahf
data16
inc
inc
jnp
out
fidivs
mov
int
fidivl
and
popa
sub
mov
sbb
insb
cld
pop
pop
test
clc
xor
cmp
ret
rol
das
inc
std
jno
int3
mov
cld
and
in
insb
and
mov
jne
push
int3
aam
xchg
les
or
push
mov
repnz
mov
mov
sub
ret
jo
pop
jne
cmp
scas
leave
in
and
inc
cmp
xor
lahf
sub
pop
imul
out
jnp
sarl
or
adc
mov
movsb
aad
addb
movb
push
in
stos
movsl
jns
sbb
and
add
lea
jae
iret
lods
scas
dec
xchg
push
or
jp
push
xor
aas
mov
mov
addl
out
push
mov
sub
mov
addr16
cs
out
scas
and
cwtl
cs
aas
daa
jp
mov
sbb
je
add
mov
mov
push
adc
cld
xor
mov
cmpsl
cmp
cmp
movsl
mov
push
cmpsb
adc
xchg
out
popf
push
jnp
sbb
xchg
mov
sub
xchg
adc
scas
mov
xor
mov
or
cmp
xchg
xorb
scas
mov
xchg
and
mov
mov
and
add
in
insl
mov
cmc
in
inc
and
lods
push
fcoms
dec
mov
mov
sbb
mov
mov
jno
test
ja
fidivrs
xchg
mov
subb
aad
push
push
dec
sbb
cmp
jns
lret
and
daa
and
shl
add
fcoml
nop
into
rorb
cmpsb
cld
test
inc
push
sub
cltd
sbb
push
faddl
adc
mov
out
cld
psllq
pop
push
xor
filds
mov
rorb
xchg
sbb
inc
cmp
push
pop
int
push
mul
jnp
insl
test
decb
cld
xor
int3
sub
rclb
sti
push
dec
ds
mov
sti
fnstsw
and
inc
adc
xor
mov
in
into
xor
jle
iret
lds
fdivrl
sarb
jecxz
jecxz
jbe
in
jbe
cmp
jb
jmp
jg
push
add
enter
lahf
sub
xor
sbb
mov
out
filds
pop
push
xor
hlt
movsl
rcll
or
add
pop
adc
inc
bound
cmp
pop
imul
xor
adc
andl
int
int
lds
xchg
mov
sar
outsb
xchg
sub
or
jl
popf
add
pop
es
out
inc
mov
mov
dec
data16
jl
adc
mov
mov
daa
mov
ret
push
loope
push
mov
pop
sbb
add
sub
and
push
outsb
dec
aaa
push
sbb
test
orb
add
pop
xor
push
sbb
push
pop
mov
or
ljmp
mov
xor
je
push
mov
lods
das
out
stos
loope
xlat
sbb
ret
and
xchg
repnz
cld
shlb
out
push
push
jg
int
dec
outsl
mov
sub
inc
jnp
adc
cmp
mov
inc
mov
adc
popa
rorb
aad
aam
pop
mov
cmp
out
mov
stc
or
pop
es
fidivrl
jbe
mov
cmpsb
mov
add
test
cmp
les
xchg
inc
lods
insb
or
xor
xchg
xor
std
popf
mov
sbb
xchg
dec
mov
lret
aas
pop
jge
push
cmpsl
dec
jle
xchg
data16
int3
fs
adc
repnz
fst
or
mov
inc
pop
pop
cmp
dec
andl
cwtl
add
in
je
aad
movsl
in
fstenv
aas
movsl
outsb
jl
and
mov
add
jle
imul
icebp
dec
xchg
xchg
in
mov
and
cmp
andb
mov
int3
pushf
adc
scas
pop
stos
mov
mov
in
popa
cmp
inc
inc
sbb
int
dec
xorb
lcall
dec
and
cmp
test
fwait
push
jp
cmp
es
push
outsb
std
lods
mov
daa
lahf
pop
and
shll
out
jge
int3
mov
inc
add
jb
dec
vpmuludq
insb
repnz
cld
js
mov
push
mov
xchg
or
push
push
outsb
pop
xor
ror
cmp
outsl
or
dec
mov
pop
in
insl
fnstenv
inc
test
fdivrs
pop
pop
dec
pusha
mov
sbb
push
fidivl
xor
sti
rol
dec
in
and
jp
xlat
adc
cwtl
ret
sub
inc
inc
sbb
mov
inc
cmp
xorl
adc
imul
dec
iret
stos
mov
push
push
pop
and
mov
ljmp
and
push
xchg
scas
fucomi
sahf
cs
frstor
and
sub
or
pop
sub
sub
jge
std
inc
sahf
test
sti
dec
in
cmp
loop
je
lods
cmpsb
es
inc
stc
push
ss
pop
movsl
push
cmpsb
sahf
sub
xchg
xor
adc
mov
ret
push
add
movsl
insl
icebp
and
mov
xchg
idivl
cmpsb
mov
aad
mov
lcall
pusha
repz
fstps
mov
xlat
mov
into
and
outsb
repz
cmpsl
daa
les
out
push
int3
sbb
xchg
movsl
add
sub
jle
cmp
clc
xor
mov
or
es
fwait
les
js
jg
mov
push
push
orl
mov
cmp
xor
mov
out
js
mov
bound
mov
sub
pop
pop
sub
mov
pavgb
lods
mov
adc
sarb
leave
jg
cmp
sti
imul
je
pop
add
loope
cmpl
paddsb
jns
xchg
xchg
jb
dec
ficompl
stos
shrl
les
adc
subb
mov
adc
or
xor
dec
in
mov
and
mov
stos
fldenv
adc
sbb
imull
jo
and
sub
ss
cmpsb
inc
lret
jp
inc
mov
loope
ret
or
repnz
sub
jb
in
pop
and
arpl
dec
scas
or
xlat
and
pop
je
add
fisttpl
repnz
xchg
out
lcall
inc
aas
push
leave
cmp
mov
mov
mov
lret
arpl
add
sbb
cltd
mull
adc
or
jl
inc
xchg
stos
ret
scas
adc
xchg
dec
les
adc
arpl
sbb
or
mov
out
and
mov
or
mov
je
pop
xor
andl
push
or
adc
jecxz
loopne
add
push
aaa
into
lcall
xchg
inc
rolb
pop
je
out
adc
jge
lods
cmpsl
inc
popfw
lret
aaa
mov
pusha
shl
stc
mov
mov
adc
push
sub
into
sbb
sbb
data16
xchg
rcr
mov
les
inc
mov
test
sub
pop
xchg
es
pop
push
cmp
inc
lock
cmpsb
movsl
pop
lret
out
pushf
out
orb
outsl
sti
pop
cltd
divl
mov
fwait
push
mov
push
sub
inc
int3
arpl
fcmovne
and
pop
ds
insb
test
mov
mov
pop
scas
ja
cltd
and
sbb
decl
dec
movsw
sbb
xor
pop
push
pop
push
mov
rcl
jl
jae
js
sbb
push
inc
addr16
inc
inc
mov
mull
mov
or
push
or
push
fildll
loopne
fs
lret
lods
xchg
out
out
stc
negb
adc
negb
mov
push
adc
inc
jae
xor
movsb
rdmsr
imul
push
mov
or
cmp
mov
icebp
dec
pop
arpl
cs
add
xor
xchg
dec
mov
mov
sarb
les
les
mov
mov
push
cmp
nop
cli
cmp
mov
bound
out
mov
or
sub
cmp
add
mov
enter
in
push
punpckhdq
mov
out
xor
hlt
aad
xchg
xor
das
adc
mov
or
pop
jp
arpl
adc
call
imul
mov
pop
lods
push
mov
xchg
lods
cmp
int
inc
outsb
into
adc
shl
sbb
cmp
jb
and
data16
or
inc
lock
iret
sarb
pop
adc
mov
test
push
xchg
mov
shrl
fiadds
out
pop
loopne
dec
les
mov
repz
or
mov
fs
cltd
sbb
xor
sarb
sbb
sub
cmpsb
subl
push
xor
cmp
mov
arpl
lret
mov
jbe
push
or
and
repz
push
ljmp
mov
out
mov
jbe
adc
insb
shll
fimuls
fcmovnbe
ja
repz
jle
xchg
dec
add
xchg
mov
pop
jp
mov
cmc
stos
dec
es
mov
pushf
mov
xor
loope
popf
insb
stos
mov
mov
fcmovbe
js
je
icebp
aam
xor
mov
or
push
xchg
cmpsl
sbb
xor
std
xchg
fisttps
popa
add
dec
iret
ret
xchg
test
data16
sub
in
and
xor
mov
out
cmc
mov
mov
js
cmp
stc
xchg
lahf
mov
cmp
add
and
mov
jg
jo
inc
push
hlt
cmpsl
xchg
lret
testb
mov
orl
mov
out
das
fsub
mov
jo
xchg
xor
xchg
cmp
mov
mov
shr
jb
jg
mov
insl
adc
inc
cmp
xor
jb
fwait
and
jne
mov
or
in
into
dec
sti
push
ret
mov
jb
mov
sub
mov
xchg
leave
ret
mov
jne
dec
lods
enter
dec
int
mov
fisttps
ljmp
icebp
jnp,pn
cmp
xor
fistpl
pop
pop
push
sub
das
in
test
mov
adc
xchg
pop
bound
sti
cmc
xor
xor
scas
mov
jl
jecxz
ret
jne
add
insb
pushf
fistps
cli
ror
loope
aaa
mov
jb
inc
jo
mov
mov
push
sub
inc
sub
adc
sbbb
aaa
in
cmp
jmp
pop
jno
fisubs
arpl
add
push
sbb
dec
pop
push
addr16
cmp
cmc
movsl
mov
fistpl
pop
pop
movhps
cmp
mov
add
xchg
outsb
adc
out
aad
inc
add
push
lds
push
sbb
lcall
add
cmp
mov
repz
outsl
ret
jmp
jl
cmp
insl
movsl
fsubrs
mov
fidivrs
out
adc
popl
shll
repnz
jecxz
add
mov
mov
add
sbb
sahf
repnz
scas
fwait
into
ljmp
cmpxchg
cli
mov
aaa
dec
and
rorl
test
jbe
adc
sbb
out
cltd
mov
lods
and
cmp
addb
mov
jnp
cld
fildl
pop
aad
shll
jb
lcall
rclb
jg
jle
call
ljmp
push
out
rclb
test
dec
add
in
mov
mov
jge
cmc
lahf
add
or
mov
mov
divb
ds
cmp
jl
lods
cld
push
test
add
mov
or
xchg
and
mov
jae
movsb
sbb
out
movsb
sbb
mov
cmp
jp
xchg
int
int
xor
mov
dec
push
sahf
xor
sahf
mov
push
fwait
ljmp
sbb
push
dec
es
sahf
out
adc
repz
fisubs
pushf
dec
mov
mov
test
pop
arpl
in
inc
movsb
and
test
mov
pop
and
aad
cmp
cmp
mov
out
mov
out
mov
and
sub
rcr
sahf
mov
pop
shlb
xor
jecxz
inc
pop
aad
mov
fildll
jb
cmpsl
cmp
lret
xchg
mov
xor
pop
ret
inc
testl
push
jmp
lea
sti
push
out
push
jo
jae
mov
outsl
imul
lcall
bound
jns
push
jmp
mov
mov
and
sub
enter
dec
xor
push
or
bound
bound
jp
xlat
loopne
outsb
sti
inc
sub
inc
push
repz
jo
add
aad
popf
cmpsb
jg
insb
xor
fimuls
sbb
fsubl
jmp
testb
loope
rcll
popa
push
cltd
push
and
cld
pushf
ucomiss
mov
gs
movsb
or
cmpb
xchg
push
jns
sub
xor
rdtsc
mov
aas
nop
jne
imul
push
iret
in
add
sbb
mov
dec
data16
add
push
and
adc
lcall
nop
sbb
call
stc
jb
enter
ret
push
push
sbb
out
adc
arpl
xchg
fcom
out
enter
leave
loope
push
sub
mov
scas
lea
lret
and
cwtl
xchg
inc
gs
and
mov
cmovb
push
dec
ficoms
xchg
cmp
int3
ljmp
fidivrs
rcl
inc
das
pop
sbb
out
pushl
jae
cltd
push
gs
outsl
in
fs
fwait
mov
xchg
xadd
mov
lcall
popa
into
mov
dec
jae
xchg
ds
scas
insl
lods
cmc
mov
loope
ret
roll
in
sbb
enter
xor
in
lock
shll
lea
or
std
mov
fadds
cwtl
xchg
loopne
push
or
inc
pusha
inc
leave
movhps
out
and
mov
out
inc
movsl
iret
cmpsb
xor
pop
in
movb
sbb
pop
mov
or
stos
outsl
shlb
pushl
push
mov
push
loope
ja
insb
stos
mov
mov
lds
mov
mov
xchg
add
idivb
xor
data16
add
arpl
add
sub
pop
out
fadds
dec
or
mov
outsl
into
repnz
mov
cmpsb
pop
sti
enter
fwait
int
pop
movsl
and
out
xor
fnstenv
aaa
and
mov
fldcw
test
xor
inc
aad
push
push
push
fucomp
mov
lds
push
int3
in
andl
loopne
sub
jns
pop
mov
and
mov
pushf
xchg
xchg
adc
xchg
bound
sub
bound
inc
call
pushf
ds
int3
lret
cltd
cmp
popf
jo
pop
sub
orps
es
or
xchg
pop
push
adc
notb
cmpsl
movsb
pushf
cmpl
and
outsb
mov
and
mov
adc
int
orl
mov
xor
and
repz
inc
sub
or
add
mov
pop
mov
movsb
test
xor
rcrb
movmskps
mov
or
clc
push
sbb
mov
rolb
lock
fiadds
pop
mov
arpl
cmp
lods
sbb
jle
int
bswap
outsb
sbb
and
xor
pop
loopne
pop
cmp
jb
cmp
jge
dec
cs
push
lock
mov
dec
add
jl
out
xor
add
or
pushf
cmp
mov
fsub
pop
je
daa
jmp
loope
movsb
mov
daa
sahf
roll
sti
bound
faddp
cmp
xorb
cmc
adc
ljmp
cmp
outsb
fstpl
insl
pop
xchg
aam
lret
icebp
out
dec
cltd
ss
sbb
scas
je
pop
cmp
pop
xlat
mov
lcall
pop
jmp
xor
inc
jge
cmp
shll
pop
sbb
imul
add
sub
push
xchg
test
sbb
mov
adc
pop
mov
idiv
ret
jmp
lods
jnp
xchg
std
adcb
or
pop
aad
mov
out
add
mov
sub
sbb
andl
aad
xchg
push
sub
leave
imul
add
and
dec
jnp
shr
testl
push
mov
sbb
jo
pop
jg
push
mov
or
sti
cmp
cmp
loop
dec
mov
push
sbb
jmp
xchg
xchg
pop
sahf
cmp
mov
push
fwait
repnz
inc
pop
pop
xor
xchg
push
inc
ss
leave
xor
or
movsl
call
sub
xchg
inc
inc
imul
mov
divb
fcmove
pop
push
sbbl
scas
sbbl
jno
int
call
pop
push
mov
cmp
in
xor
xor
dec
in
int
inc
xchg
sbb
bound
sbb
inc
scas
lahf
add
ljmp
pushf
test
sbb
mov
filds
xchg
or
into
cmp
ja
lods
dec
rcll
das
jg
pop
pop
lret
sub
testl
addr16
repnz
imul
icebp
xor
and
jo
jno
adc
addr16
popa
and
addr16
mov
fistps
bound
jae
pop
inc
dec
loope
xlat
lea
xchg
test
lock
pop
dec
sub
pop
outsb
dec
dec
loopne
pusha
add
mov
jo
jbe
or
test
leave
arpl
sarl
jns
imul
dec
add
xlat
or
bound
pop
sub
pop
add
mov
dec
sub
jp
pushl
fmuls
pop
test
cmc
sbbb
cmp
mov
lcall
gs
mov
out
xchg
cmpsb
mov
dec
pop
shlb
lahf
and
mov
pushf
and
or
sub
dec
inc
add
fwait
push
sub
sub
mov
stos
sub
hlt
es
pop
test
pop
out
fcomps
mov
out
xor
mov
call
iret
lock
aaa
mov
aas
jmp
lret
push
in
jbe
add
scas
xor
pop
fsubrl
or
lock
mov
clc
lahf
xor
sbb
scas
lret
cmpsb
or
dec
pop
sub
in
popa
pop
outsb
shlb
inc
sbb
adc
je
ret
jne
movsb
adc
jns
mov
sub
dec
adc
and
into
ds
outsl
mov
or
in
lahf
bound
jl
dec
and
jnp
js
and
leave
in
faddl
pmaxub
sbb
ret
outsb
das
rorl
rorb
mov
popf
xchg
mov
mov
das
sub
pop
sbbl
sbb
push
and
loope
scas
dec
lcall
pop
adc
mov
clc
cli
push
lods
out
mov
or
adc
rcr
jp
loope
inc
mov
cmp
xchg
and
repnz
mov
test
jb
add
jl
ret
sub
test
fwait
cmpsb
mov
jmp
cmp
xchg
fmuls
mov
addr16
adc
xchg
loopne
pop
loope
sbb
mov
xchg
or
mov
sbb
in
iret
sub
mov
mov
lods
mov
mov
inc
mov
in
xor
cmp
in
stc
movsl
nop
mov
sub
mov
into
mov
insl
cmp
rcll
fs
push
test
fs
inc
mov
mov
or
pop
rorb
push
mov
ja
leave
outsl
xchg
jno
fcomps
fldl
in
add
es
pop
cmp
adc
sub
divb
jge
inc
test
imul
adc
ror
dec
pop
cli
mov
jbe
push
push
loope
and
mov
inc
mov
into
insb
sub
insb
cmp
hlt
je
inc
xor
push
dec
mov
mov
hlt
add
pop
shrl
addb
movsl
in
scas
xchg
and
mov
pop
adc
mov
shrl
out
enter
xchg
cmp
nop
sub
cmp
pushf
inc
in
mov
add
cs
xor
or
or
jg
xor
movsl
dec
jl
mov
adc
pusha
addb
pop
pop
frstor
imul
notb
leave
cwtl
pushf
mov
jg
jge
jnp
jbe
xchg
shll
mov
xchg
mov
mov
xor
gs
mov
cmc
pop
dec
cs
pop
pusha
hlt
insb
mov
mov
xchg
cmpsl
sahf
stos
dec
and
mov
or
mov
mov
sub
and
and
insl
in
mov
fstpl
cmp
mov
shlb
daa
test
out
xchg
cmp
inc
test
cmp
fs
orl
lock
push
rorl
push
push
or
js
fxch
pop
cltd
xchg
and
push
bound
dec
out
bound
jb
inc
or
xor
outsb
push
outsl
sbb
mov
repz
neg
mov
push
stos
sub
shl
jne
add
dec
ja
aam
test
and
xchg
pop
lds
jnp
cs
jae
ja
jnp
inc
addr16
adc
mov
pusha
in
testb
mov
pop
stc
testb
cld
add
insl
or
lods
sbb
addl
adc
dec
lcall
repnz
push
cmp
in
fmul
push
shrb
mov
cmp
inc
xchg
pop
sbb
lret
fwait
icebp
int3
aad
dec
sti
rcrb
es
int3
cmpsl
lea
add
mov
xor
ficomps
adc
call
dec
mov
in
cmp
aas
xor
adc
movsb
ds
insb
in
adc
mov
shrl
shrl
stc
inc
xorb
xor
outsl
rol
out
shrb
cs
cmp
cmp
lahf
rcr
cli
imul
loop,pn
adc
jae
into
test
ss
mov
lods
jg
test
jle
inc
dec
jbe
add
mov
aaa
mov
and
and
lret
sub
shrb
aaa
inc
pop
les
push
loope
movsb
iret
scas
mov
out
scas
cmp
sub
popf
gs
rolb
mov
call
popa
iret
inc
ja
mov
sbb
int3
std
cmp
lret
lret
out
or
popa
xchg
repz
xchg
ja
and
sub
jp
push
sub
dec
add
push
and
dec
pop
adc
jmp
or
addr16
add
dec
ja
or
sub
xor
cmp
jnp
ficoml
and
int
xor
jmp
mov
and
xor
xlat
fidivrs
mov
jnp
push
arpl
xchg
mov
xor
movsl
xor
cmpsb
divl
loop
loope
daa
out
outsl
or
shrb
lcall
xor
or
lods
and
incb
mov
pusha
ret
popa
hlt
xchg
test
dec
inc
mov
cmp
sti
xor
dec
xor
dec
stos
lods
mov
sub
popa
ljmp
cld
dec
lret
hlt
or
daa
xor
fsubl
dec
iret
mov
dec
sahf
stc
and
mov
cmp
pop
dec
movsl
push
or
repz
ror
std
sarb
fucomip
imulb
aaa
jo
outsb
mov
inc
mov
imul
repnz
aas
xchg
mov
mov
xor
xchg
push
fstpt
and
jnp
sbb
int3
test
pop
leave
into
and
sbb
repnz
fcomps
mov
shl
imul
test
pop
mov
sub
sbb
pop
inc
pushf
pusha
jle
fistl
pop
jnp
in
int
test
add
inc
in
jg
xor
mov
test
cmp
mov
loope
imull
add
dec
in
pop
cmpsb
decb
fwait
mov
popf
cmp
mov
lret
mov
subl
mov
test
xchg
in
pop
movsb
clc
adc
xchg
fcmovnu
inc
dec
aam
xchg
sbb
rcrb
orl
pushf
sub
and
mov
aad
sbb
adc
mov
pop
push
int3
cmc
jo
jo
sbb
rorb
enter
loopne
dec
mov
ficoms
ss
jbe
in
jae
mov
dec
test
gs
xor
jns
out
dec
mov
mov
dec
loope
xor
push
sbb
fdivl
test
lcall
subb
cmp
cmp
inc
subl
jmp
sbb
add
in
add
je
and
aaa
mov
call
jbe
mov
cmpsl
cmp
inc
adcl
lret
call
lcall
movsb
inc
cltd
sub
imull
sub
jnp
push
inc
pushf
fiaddl
fidivl
pop
cld
outsl
loopne
xchg
mov
or
pusha
or
inc
stos
add
imul
push
and
push
or
ror
mov
inc
stc
mov
fnstsw
xor
inc
lcall
inc
aam
out
sub
loopne
neg
lea
shr
shlb
or
es
sbb
xchg
dec
mov
add
aad
sub
cmc
out
xor
jns
sub
fcmovu
sbb
sub
sbb
jne
mov
jno
xor
adc
inc
es
mov
popl
pop
jl
addr16
lods
lods
idivb
aam
sub
mov
fwait
pop
push
sbb
cmp
mov
pop
mov
adc
or
pop
or
lahf
sub
adc
mull
mov
or
lret
iret
fdiv
mov
jecxz
inc
ja
in
or
push
in
ret
xor
icebp
inc
movsb
pop
inc
xchg
hlt
mov
outsl
aad
je
ljmp
mov
mov
repnz
sub
repz
lret
push
pop
sbb
mov
jl
clc
adc
jnp
pop
xchg
inc
ja
ds
jae
push
jp
and
mov
cmp
pop
dec
and
jge
dec
jb
test
enter
jmp
insb
mov
bound
std
divb
adc
fdivl
outsl
ret
sbb
pop
scas
push
insb
loope
xchg
mov
bound
jg
bnd
aad
imul
je
adc
inc
outsb
push
in
ret
imul
sbb
sub
mov
ja
push
test
mov
cmp
mov
mov
cwtl
jle
adc
movsb
outsb
pop
push
pop
mov
dec
ljmp
mov
mov
sti
out
movsl
sub
mov
mov
leave
fwait
pop
pop
enter
mov
mov
cld
dec
ds
push
add
push
popa
or
mov
leave
fdivrl
xor
fstps
gs
dec
pop
jmp
lock
xor
loop
outsb
mov
xchg
push
clc
cmp
insb
inc
jecxz
inc
incb
sbb
jbe
pop
xorb
leave
cmc
sarb
mov
in
sbb
adc
insb
ret
ja
jo
ret
mov
hlt
mov
push
lret
cmp
daa
mov
andb
lea
pop
jge
xchg
mov
mov
rcl
cli
pushf
and
dec
fnsave
iret
pop
ds
je
push
cli
clc
out
dec
jb
pop
mov
mov
and
inc
push
xchg
adc
cmp
pusha
and
ja
sub
push
mov
push
mov
decb
sub
out
fsts
pop
rcrl
pop
in
push
xchg
ud1
dec
lds
in
mov
push
push
in
pop
out
fs
jno
psubusb
insl
mov
daa
fisttpll
xchg
mov
icebp
mov
and
push
pop
adc
mov
fcmovnu
psubw
imul
fimuls
sbb
imul
sbb
or
push
mov
mov
and
ss
push
sub
mov
mov
xorb
add
repz
inc
fwait
mov
mov
inc
pop
lock
push
sub
sbbl
cmc
lahf
push
push
in
out
inc
cmpsl
dec
cmc
in
jge
or
int3
shrb
jge
jl,pn
pop
push
mov
xchg
xchg
and
movl
cmpsl
dec
add
movsl
fsub
push
in
mov
or
sub
push
mov
mov
sbb
jne
pusha
or
pop
bound
cld
test
cmpb
repnz
iret
jl
inc
fiaddl
xchg
inc
leave
inc
push
aaa
sbb
cmp
or
cs
pushf
mov
pop
xor
pop
leave
inc
jne
mov
and
cmp
mov
mov
ljmp
mov
dec
pop
jl
outsl
cmpsl
pop
sahf
ret
loopne
addr16
and
dec
sbb
mov
sub
mov
aaa
cmc
negb
aam
sub
repnz
mov
arpl
mov
mov
loop
arpl
push
insl
or
add
mov
repz
push
loop
jl
imul
add
jbe
push
or
cmp
mov
mov
roll
cli
push
jo
pop
shll
adc
daa
xchg
mov
jl
or
loop
adc
fdivs
out
cmp
jnp
pop
ret
sub
shlb
dec
bound
subl
imul
add
mov
push
lods
mov
dec
pop
shlb
loopne
and
mov
fisubl
addr16
xchg
fdivs
push
js
adc
icebp
repz
inc
or
adc
push
into
daa
mov
adc
mov
and
pop
in
xchg
ja,pt
clc
jge
add
sub
out
mov
sub
dec
ljmp
mov
xchg
or
push
nop
iret
ret
das
and
jp
cmpsl
fiadds
data16
sahf
push
clc
or
cltd
and
lret
cmpsl
repz
out
std
pop
fcompl
mov
pop
mov
sbb
mov
add
cltd
js
insb
pop
fsubs
cmc
xchg
mov
sub
lahf
mov
lods
int
push
add
rcr
cmpsb
xchg
movsl
xor
pop
daa
push
xchg
or
xchg
test
mov
stos
add
ja
cmp
xlat
xlat
mov
xor
cmpsl
insl
jb
aaa
pusha
sub
popf
repz
xor
mov
push
mov
cltd
ljmp
mov
test
lea
jo
mov
test
sub
aaa
jle
and
out
cs
ja
mov
sbb
or
aaa
jecxz
icebp
inc
fyl2x
scas
rcll
leave
pop
jne
aaa
push
adc
icebp
cmp
in
jb
xchg
outsb
mov
js
in
mov
mov
popa
jno
pop
xchg
scas
mov
std
loopne
mov
or
fst
adc
call
pop
imul
call
sbb
pop
sub
nop
out
into
fwait
jb
dec
pop
dec
jmp
mov
sahf
popf
test
inc
mov
push
insb
or
js
pop
stos
push
sub
sarb
mov
mov
fs
pop
jp
sbb
cmpsl
xchg
lret
scas
xor
lds
jns
lahf
or
test
xchg
xchg
pushf
or
push
pop
xchg
dec
fwait
gs
mov
dec
jnp
add
mov
mov
iret
or
das
fmuls
aas
sub
mov
add
push
jmp
out
xchg
adc
aad
ret
out
arpl
fidivrl
aad
pop
les
mov
dec
lret
xchg
xor
addr16
xor
pushf
addr16
int3
repz
in
dec
add
sbb
fsubrp
fmull
mov
add
sti
mov
sub
or
bound
sub
lcall
stos
rorl
inc
adc
rorb
add
sar
outsl
jmp
testl
and
inc
imul
mov
test
cmp
adc
lahf
out
mov
pop
mov
inc
jmp
js
jp
inc
xchg
hlt
mov
xlat
pop
dec
nop
jae
inc
out
test
pop
repz
in
test
ljmp
sahf
subb
lock
js
mov
pop
leave
push
nop
cmpb
xlat
mov
sub
popl
inc
add
gs
mov
and
push
mov
outsl
cmpsl
or
stos
mov
mov
out
fldenv
dec
mov
sbb
mov
jp
int3
fcomip
jp
push
or
or
jns
in
mov
cmpsl
xchg
sub
xchg
lock
cld
jmp
scas
shlb
or
ljmp
and
aaa
cmp
cmpb
ret
pop
rorl
xchg
add
mov
mov
xor
and
rorl
cmp
outsl
add
cmp
inc
push
js
iret
shll
push
add
testb
sbb
lea
test
jns
dec
scas
and
pop
aas
mov
mov
fwait
sbb
dec
and
pop
mov
xchg
dec
push
je
xchg
hlt
and
pop
in
fmul
sbb
aas
adc
test
jns
cmovb
and
push
jmp
dec
push
out
xor
jb
mov
pop
sbb
pop
fcoms
test
cmpsl
bound
inc
stc
push
dec
xor
scas
mov
bound
outsl
inc
cltd
scas
adcl
add
lds
sbb
dec
mov
outsb
shl
sub
cld
jmp
icebp
jmp
loope
mov
add
jnp
dec
ds
mov
mov
push
xchg
pop
add
jl
je
in
push
out
in
sub
add
or
or
inc
cmp
in
jno
mov
arpl
inc
lret
adc
mov
push
xchg
call
ret
in
sbb
adc
shlb
ja
pop
repnz
jl
aam
lds
mov
dec
fwait
stos
sbb
inc
sbb
stos
xor
fcoml
movl
inc
and
mov
lret
and
js
adc
loopne
cwtl
jge
sub
lret
sub
xchg
leave
xor
pop
fiadds
push
mov
fs
ss
add
lods
out
in
dec
cmpl
aad
out
mov
test
mov
nop
add
or
jecxz
cmp
idiv
mov
inc
call
jnp
inc
dec
je
push
jae
popf
cmpsb
scas
sbbl
lods
xchg
movsb
xor
fidivs
insl
cmp
lcall
les
mov
data16
push
loopne
sbb
cs
iret
sahf
sub
pushf
push
add
out
adc
mov
test
addr16
in
int3
adc
mov
adc
rcrl
push
inc
mov
sbb
lahf
or
cld
adc
cwtl
int
adc
mov
inc
mov
or
sub
ss
adc
or
or
cltd
lods
mov
pop
dec
or
inc
push
pushf
into
popa
aad
jno
pop
sahf
int3
mov
lods
outsl
out
clc
je
popa
pop
shlb
jge
rcll
sbb
add
mov
insl
leave
mov
imul
jns
pop
mov
insb
loope
push
fwait
jmp
mov
jnp
pop
mov
imul
and
add
inc
mov
add
nop
add
jo
fidivrs
dec
pop
lahf
jns
and
sarb
pop
in
arpl
fidivs
enter
pusha
cmp
sub
into
scas
je
mov
sub
loop
daa
add
push
dec
cmp
stc
arpl
in
loop
fsts
fbld
test
xchg
mov
sar
sarb
push
lock
mov
sub
nop
push
xchg
out
test
push
sbb
flds
pop
xchg
and
jne
adc
sti
movsl
cld
icebp
pusha
inc
fadds
fadd
stc
insl
cwtl
push
xor
aad
imul
arpl
pusha
mov
push
js
std
negl
cli
out
cmpsl
and
hlt
and
inc
in
adc
pop
jecxz
std
shlb
test
or
sub
sub
adc
add
cwtl
popa
xchg
pop
imull
xchg
ja
les
loop
loope
or
pop
pop
adc
push
or
pop
xlat
mov
fisubrs
cld
loop,pn
mov
repz
xchg
jno
lods
jno
pop
fimull
gs
mov
mov
cltd
imul
pop
into
pushl
idivl
pop
leave
ljmp
adc
dec
cmpsl
sbb
mov
jae
aam
push
ffree
push
or
jne
ss
add
mov
fwait
mov
jecxz
out
mov
andb
rorb
in
xchg
insl
scas
mov
fcoms
je
and
fidivl
xchg
stc
dec
fptan
sbb
push
lret
inc
lods
lods
adc
jecxz
or
imul
push
daa
jne
hlt
pop
sbb
mov
enter
fsts
sub
cmpl
and
test
jl
call
outsb
or
loop
idivb
or
mov
sbb
ja
pop
pop
loope
cli
cmpsl
shlb
push
lahf
into
jecxz
outsb
dec
les
lret
jns
jge
or
xchg
or
jecxz
daa
iret
adc
fcomip
mov
mov
mov
or
dec
push
insl
ljmp
jle
or
jg,pt
push
jge
jns
cli
add
rcl
or
into
push
imul
mov
fbld
jae
testb
popf
mov
mov
dec
insb
xchg
sbb
cwtl
jo
add
cmpsb
xor
pop
cmp
sbb
adc
nop
or
cmc
xor
and
loopne
mov
mov
icebp
js
cmpsb
pop
stos
dec
mov
loop
lret
xchg
sbb
out
inc
int
inc
pop
ja
xor
clc
jmp
jne
pop
mov
pop
daa
push
daa
cmc
mov
enter
pop
mov
mov
jp
js
sbb
jmp
fcmove
out
icebp
pop
xchg
adc
ret
xor
lock
xchg
out
bound
sbb
int
shrb
out
mov
push
fcmovnb
or
push
push
sar
cld
mov
bound
inc
xor
lcall
pop
and
add
dec
sbb
lcall
fcomi
sbb
jmp
inc
push
sbb
xor
shrl
add
sbbl
mov
lcall
hlt
adc
test
lods
xchg
adc
push
fistpl
and
mov
push
mov
aam
lods
mov
fdivs
push
sub
shlb
nop
or
stos
rcl
pop
imul
mov
pop
sbb
mov
mov
xor
jl
adc
ret
stos
xchg
enter
xchg
push
enter
dec
mov
bound
dec
push
subl
add
ja
mov
cmp
rolb
push
cld
dec
fdiv
add
mov
push
cld
call
mov
arpl
push
jb
or
lods
jp
push
xlat
cli
lcall
xchg
in
and
xchg
subb
cmc
pop
ret
sub
or
je
or
pop
out
adc
sahf
inc
push
xchg
push
cmpsl
test
pop
int
clc
icebp
fcmovne
push
or
repnz
addl
jp
pop
out
mov
sbb
push
shll
mov
lods
ucomiss
mov
xchg
shlb
xor
sbb
pop
or
mov
mov
ss
cmp
out
mov
push
dec
dec
cmc
jge
xor
cld
inc
addr16
lahf
rolb
movd
cmpsl
sbb
fsubs
sbb
sti
mov
mov
cmpsb
inc
inc
jbe
inc
xchg
inc
inc
insl
xlat
add
dec
lcall
cmp
test
scas
shll
icebp
push
sub
bound
call
or
out
adc
sar
sub
jg
xor
pop
scas
pop
inc
or
sbb
clc
outsb
mov
movsb
cmp
subb
xchg
aad
xchg
test
pop
ret
pop
mov
cmpb
dec
sbb
mov
and
mov
mov
loopw
sub
push
int
clc
sub
ljmp
inc
push
sbb
test
add
rorb
test
push
pusha
ds
lret
mov
mov
push
inc
add
adc
cmp
pop
cmp
shlb
dec
lahf
cmp
test
xchg
shrl
mov
mov
cmp
cld
mov
xor
lea
push
and
mov
pop
fcmovu
mov
mov
fistpl
dec
xchg
cltd
xchg
push
jnp
jge
bound
jp
add
mov
and
xchg
inc
imul
subb
mov
enter
imul
faddl
mov
js
jl
imul
adc
rorb
xchg
int3
es
add
mov
movsl
testl
imul
push
aaa
fwait
mov
clc
mov
xchg
jns
sub
test
add
andl
outsl
push
ret
aad
in
mov
jmp
icebp
push
in
xchg
mov
mov
orb
push
scas
inc
call
push
gs
iret
sbb
push
clc
mov
add
mov
pop
daa
adc
push
scas
lods
dec
pop
pop
notl
fsubrl
lock
iret
int
lea
fildl
xor
jg
or
add
cs
cmc
jb
popf
jns
xchg
pop
notb
bswap
mov
in
adc
mov
push
stos
stc
mov
mov
movsl
lods
fsubs
jne
pop
cmpsb
fmull
pop
sub
lds
test
jne
loop
mov
in
push
pop
js
sub
and
test
adc
in
in
into
cmp
cmc
push
mov
push
in
and
shll
aam
pop
gs
movsb
aam
jge
nop
xchg
aam
shll
aad
sarb
imul
fidivrl
out
and
pop
cmpsl
adc
mov
rcrl
dec
mov
leave
arpl
ja
clc
sbb
divb
icebp
cmpsb
mov
lods
ja
inc
ja
popa
mov
stos
dec
sub
push
xchg
xchg
repz
xor
insl
ret
shrb
inc
movsb
inc
inc
lea
fisttpl
movsl
jle
leave
jo
fldcw
push
adc
adc
jne
rolb
sbb
scas
pusha
or
mov
inc
clc
outsl
mov
aas
ss
xor
out
int
movsl
add
call
lods
ss
lods
mov
cmpsl
jae
ret
pop
call
dec
hlt
into
call
cmc
inc
inc
pop
fstps
sub
or
mov
push
mov
test
jno
cmp
cli
mov
cmp
jbe
mov
int
cmp
addr16
mov
xchg
xchg
jb
shl
cmp
sub
push
cmp
mov
xchg
lcall
mov
jg
cld
pop
lret
mov
pop
pop
mov
add
in
pop
fnstcw
test
rorb
pop
out
out
mov
xchg
add
in
scas
xchg
inc
and
adc
push
arpl
xchg
outsl
sbb
in
or
shrb
xor
sub
lret
scas
push
fwait
mov
iret
jmp
add
les
repnz
dec
mov
xchg
shl
xchg
sbb
test
dec
push
cmpsb
xor
xchg
mov
jne
or
daa
xorb
xchg
pop
and
dec
cmp
pop
sub
mov
ja
lods
push
loopne
xchg
icebp
xchg
ret
out
cmp
mov
das
push
lcall
jns
push
sub
enter
cltd
push
mov
je
adc
mulb
mov
push
out
push
sbb
addr16
cltd
or
push
pushf
repz
adc
fwait
inc
pop
sarl
subl
in
mov
mov
in
data16
jge
ds
pop
pop
rcrl
fdivrs
cmp
stc
lock
mov
xor
and
movsb
mov
jbe
jae
add
or
cmp
jb
mov
repz
shl
add
jle
addb
adc
mov
cli
pop
pop
pushf
ljmp
mov
jecxz
push
sub
faddl
fld
pop
fstps
test
insb
std
pop
adc
pop
cwtl
dec
cltd
scas
xchg
shl
push
pop
or
xor
add
and
push
mov
lahf
das
and
ret
add
mov
jecxz
idivb
xchg
cwtl
scas
pop
add
pop
dec
fcoml
pop
push
stc
stc
adc
pop
test
ficoms
mov
mov
cmc
lret
xor
stc
xor
pop
int3
mov
xchg
std
pop
fsts
test
mov
and
push
push
push
repz
aam
pop
addl
outsl
fdivrs
adc
in
jge
sarb
and
shrl
push
xor
into
movl
das
add
xchg
cwtl
leave
mov
sub
push
mov
arpl
push
cmpsb
sub
shll
and
pop
dec
dec
sbb
stc
xchg
and
hlt
or
and
int
mov
dec
movsl
or
mov
mov
push
aas
stc
sub
inc
xor
pop
xor
into
jnp
sbb
sbbl
inc
push
pop
sahf
and
jecxz
jnp
xchg
mov
add
imul
xor
dec
fimull
mov
inc
adc
or
popf
fistps
lods
stos
xchg
test
mov
out
add
iret
jge
xor
les
into
jbe
sahf
ljmp
sub
in
arpl
add
add
mov
stc
imul
aaa
arpl
dec
mov
inc
sub
sub
rcrl
jae
or
icebp
or
cmpsl
lock
mov
hlt
mov
sbb
dec
outsl
loop
mov
dec
je
outsl
adc
cmp
dec
dec
andl
jns
dec
js
or
cmpsl
lcall
cmp
push
loopne
mov
sub
ficoms
sahf
movsl
mov
int3
sub
stos
jne
sbb
out
xchg
out
cmp
jge
mov
fidivs
sbb
inc
jge
loopne
movsl
insl
xchg
adcl
dec
les
jnp
fsubs
adcl
or
mov
mov
push
sbb
sub
pop
mov
dec
out
data16
mov
jmp
jnp
repnz
mov
shl
pop
repz
sub
pop
enter
cmp
pushf
add
jp
stc
or
je
and
iret
pop
nop
and
sub
sbb
push
push
cmp
cltd
mov
cmpsl
dec
adc
pop
pop
bound
dec
lea
dec
xor
dec
lea
mulb
lods
fcompl
jp
mov
aaa
mov
icebp
cmp
mov
and
mov
test
sarl
mov
jbe
jge
cmpsl
arpl
mov
jns
xchg
xchg
dec
mov
lods
push
aad
sbb
loop
or
lds
adc
sub
repz
push
jle
movsl
addb
push
inc
sbb
sub
sbb
test
cmc
in
or
sbb
arpl
or
and
scas
inc
add
nop
outsl
rorl
cmp
or
mov
stc
adc
ret
push
cmp
push
dec
dec
mov
push
inc
pop
mov
mov
or
fwait
add
mov
adc
add
xor
add
push
and
out
and
hlt
inc
push
adc
xchg
mov
jge
insb
jl
inc
xchg
stc
fdivl
pop
jnp
or
mov
fnstsw
test
adc
dec
jne
xchg
pop
lea
cltd
adc
or
sbb
aas
or
and
and
mov
into
jmp
jne
xchg
into
jbe
bound
in
or
sahf
add
ds
daa
lods
push
iret
sub
mov
xchg
mov
pusha
pop
dec
sbb
insl
mov
pavgb
xchg
mov
aaa
lock
adc
orl
add
loopne
sbb
int
ja
addb
pusha
popa
pop
pop
mov
push
jle
imul
mov
cmpsb
mov
xchg
inc
push
mov
or
or
push
sbb
test
cmpsl
popf
push
sti
pop
or
sarb
inc
test
ret
cmc
neg
std
cmpsl
or
cmp
nop
data16
inc
outsl
adc
xor
xchg
sub
sbb
adc
fstps
dec
push
cltd
jp
fidivs
cwtl
sub
outsb
jo
leave
out
test
movsb
ret
imul
cmc
and
insb
insl
pop
add
mov
sub
outsl
nop
jle
mov
mov
dec
stos
adc
bound
pop
loop
shlb
rolb
test
imul
aas
out
sub
mov
mov
xchg
or
mov
jbe
insb
inc
dec
jns
lahf
sahf
dec
push
imul
xchg
divl
int3
mov
sub
pop
out
out
add
insl
pop
sti
sbb
fistpl
int3
mov
rorb
adc
ret
xor
sub
dec
pop
inc
adc
mov
pop
test
push
pop
fistps
push
push
xchg
rorl
push
addr16
mov
repnz
shll
outsb
cmc
mov
test
mov
popa
sbb
jge
mov
mov
add
test
fsubrp
call
sahf
int
imul
push
test
xorb
mov
inc
dec
sarb
sub
fcmovnbe
outsb
cmp
xchg
test
stc
iret
adc
test
or
std
cld
scas
sub
cld
or
mov
mov
lret
inc
loopne
lock
fldenv
lods
and
out
mov
pop
adc
mov
arpl
lock
xchg
jne
sbb
push
mov
movsb
shll
fsubrl
repnz
mov
jnp
xor
es
dec
dec
xchg
fucom
std
mov
fdivl
das
pop
nop
mov
test
sub
xchg
loope
into
add
orl
andb
in
add
ret
sub
xor
addb
stc
push
mov
sub
or
fsub
mov
loope
xchg
mov
or
pop
xor
and
or
xlat
je
jne
les
std
rclb
outsb
in
lock
addl
adc
mov
icebp
test
aad
sbb
push
test
in
xlat
mov
cmp
adc
lcall
call
scas
inc
xchg
cmp
sub
xor
pop
lcall
mov
sbb
or
mov
mov
push
add
adc
cmpsb
loopne
test
cwtl
pop
jne
das
jg
mov
movsb
ds
stos
jp
mov
movsb
cmc
andb
lds
or
ret
push
shlb
xorb
push
push
and
popa
hlt
push
sub
xchg
mov
rep
arpl
dec
add
add
xchg
notb
mov
mov
dec
icebp
outsb
add
insl
repnz
call
xchg
je
mov
fistpll
add
out
aaa
xor
jge
je
sub
lods
scas
jo
mov
in
cltd
fsubrl
outsb
js
fdivrp
stos
cs
adc
jl
mov
outsb
leave
mov
sub
lock
lret
jne
icebp
jecxz
out
outsb
sub
sub
jp
hlt
in
add
pop
jge
movsl
mov
out
in
mov
mov
rol
dec
push
testl
cli
adc
std
lahf
js
call
cmp
lea
mov
pushfw
xchg
in
jb
fs
jg
iret
inc
xor
jp
int
jge
xchg
sub
mov
test
outsb
or
ds
push
std
ret
pop
dec
fcoml
outsl
out
ljmp
cmpsb
les
lahf
out
cmp
out
xlat
jo
pop
inc
aaa
es
sbb
sub
xchg
or
cmp
into
or
mov
pop
gs
mov
aas
push
dec
inc
dec
push
std
fistl
loope
int
cli
cwtl
outsl
sub
cmp
popa
sub
mov
pop
dec
pop
mov
cld
popf
mov
test
mov
cltd
inc
mov
push
jl
and
jp,pn
inc
fidivs
mov
pop
int
mov
pop
fwait
outsl
pop
je
mov
dec
mov
stos
es
jge
hlt
je
adc
dec
cmpsl
pushaw
push
mov
mov
mov
pop
xorl
int
mov
dec
jge
fcoms
lret
push
aad
in
xchg
mov
mov
xlat
rcrl
inc
and
xchg
bound
mov
aam
mov
and
push
cmp
jmp
mov
fistps
jns
icebp
mov
lds
jge
es
out
and
std
jbe
jnp
push
push
jle
lea
mov
add
pop
ret
mov
movsl
mov
pop
xchg
cmpsl
cli
das
sub
jb
dec
ss
in
mov
ret
adc
cmpl
xchg
cmp
add
add
ret
mov
xor
mov
fldt
jg
inc
inc
push
int3
push
add
mov
add
shrl
cwtl
stos
cmc
adc
and
jb
xor
mov
pop
mov
cmp
mov
movsb
and
stc
fsubrl
mov
cmpb
dec
dec
idiv
mov
mov
jb
cmp
mov
loop
paddw
lock
mov
repz
rolb
jae
inc
iret
hlt
and
cmp
fs
add
push
jp
in
xchg
cltd
xchg
add
idiv
les
mov
sub
test
test
jmp
lods
mov
mov
and
or
outsb
rol
test
sbb
jae
mov
and
push
ss
mov
adc
sub
mov
js
dec
jmp
inc
jmp
test
jecxz
mov
inc
lea
pop
add
nop
repz
insb
jnp
pop
mov
ret
jge
scas
xchg
sub
stos
fisttpll
mov
dec
and
jmp
mov
sbb
xor
js
cmp
adc
mov
cltd
pop
adc
adc
jne
push
xchg
out
and
orl
mov
cwtl
imul
sub
clc
sbb
dec
out
cmp
aad
lock
es
xor
push
cmp
test
int
sbb
jbe
push
xor
mov
xorb
cmc
sub
popf
mov
jmp
cmp
fwait
scas
imul
mov
popa
inc
inc
lret
lret
and
fldenv
mov
loop
xchg
xchg
inc
lea
insl
cmp
out
or
loope
mov
add
pop
pop
es
jno
enter
fiaddl
push
pop
test
adc
xor
mov
mov
jge
xlat
push
in
movsl
sbb
adc
aas
pushf
ja
push
loop
jno
inc
add
push
lods
movsl
in
mov
in
ret
outsb
ds
jge
xor
or
outsl
sbb
push
lock
inc
and
xchg
fcom
lret
jb
aas
int
sti
pop
test
cmpsb
je
mov
jl
std
jbe
cmc
cmp
mov
push
adc
adc
addl
aam
xchg
or
xor
inc
sub
xor
dec
movsb
fs
mov
xchg
js
out
jmp
or
into
insb
loop
add
add
push
out
sbb
or
mov
xor
into
test
pop
mov
repnz
sti
jno
xchg
icebp
enter
mov
jo
loopne
lods
add
popf
sub
cmp
sub
mov
repz
in
mul
pop
push
es
aam
sub
jo
jne
push
icebp
insb
sbb
mov
mov
sub
push
test
repnz
pusha
and
insb
pop
pop
xchg
out
mov
adc
es
popa
xchg
pop
mov
push
jne
and
rcll
mov
dec
mov
xor
push
lahf
hlt
fcoml
or
ja
adc
sti
scas
std
mov
cmp
ljmp
cwtl
dec
movsl
lahf
and
movb
cld
and
out
ss
ss
ljmp
pop
repnz
cli
mov
aad
push
jge
jb
lods
fildl
sbb
dec
pop
rorl
call
push
dec
and
add
aad
jp
push
jge
cmp
mov
ret
nop
push
mov
mov
in
push
fildl
in
andb
inc
lcall
xor
cwtl
insb
fisubl
ja
pop
jl
out
push
cli
xor
jb
fnsave
out
jbe
loopne
push
cmp
ja
push
adc
fildll
dec
pop
aaa
cmp
repnz
fcompl
test
sub
xor
in
andl
xchg
hlt
nop
fsub
int
into
imul
sarb
inc
les
lods
imul
cmpb
hlt
nop
int3
add
jae
int3
call
int3
lahf
adc
sbb
sbb
hlt
inc
mov
jno
mov
popf
sbb
fcomi
movsb
repz
mov
or
repnz
sarl
jge
hlt
pop
add
movsl
jp
stos
cmp
iret
pop
pop
bound
xchg
jne
inc
dec
leave
jle
test
sub
fwait
scas
movsl
sti
xorl
cmp
inc
shlb
mov
xchg
jmp
sbb
push
mov
ret
jae
fisttpl
jp
insb
xchg
arpl
jmp
shll
xchg
cmp
bound
insl
pop
mov
xchg
xor
add
gs
xchg
fldt
ljmp
xchg
xor
aam
sub
jecxz
push
jo
add
cwtl
fwait
push
fnstsw
and
xchg
push
and
jbe
ret
cmp
in
lock
in
jl
dec
pusha
mov
jb
sbb
dec
int3
addl
inc
fiadds
xor
sbbl
scas
lods
fsubrl
jecxz
xchg
lret
lds
cmp
fs
xor
inc
add
sysenter
mov
xor
or
xor
push
xchg
pop
dec
fdivl
jle
sbb
sub
mov
adc
sbb
pop
hlt
jmp
pop
dec
pushf
or
stos
subb
cmpsb
out
jl
lea
aas
push
add
inc
sti
stos
jecxz
jnp
inc
xchg
int
imul
test
repnz
cli
repz
inc
scas
aad
or
std
add
jl
jg
pop
stc
sbb
dec
push
mov
scas
sarl
dec
mov
cmp
jmp
pushf
sub
imul
and
test
iret
test
int
jle
sbb
lret
out
mov
imul
cmpsl
je
dec
ss
and
mov
cmp
and
jae,pn
cli
fidivl
mov
mov
jl
lahf
lea
sbbb
cmp
pushf
mov
cltd
loopne
aas
push
ss
cmp
repz
push
faddl
stc
sahf
sub
xchg
jo
sbb
dec
ja
jle
loop
sbb
andb
sar
fcomps
xor
xchg
push
push
inc
jge
xchg
test
clc
ffreep
or
movsl
icebp
lahf
fwait
loope
push
add
mov
sub
mov
xchg
add
out
sbb
fldenv
popf
mov
mov
mov
pop
jbe
leave
pop
data16
xor
jne
test
outsb
pop
icebp
out
mov
cmp
dec
fiaddl
aam
jp
mov
or
ds
mov
adc
cmpsb
dec
fs
arpl
inc
adc
jmp
subl
and
shl
lcall
mov
sub
popf
ljmp
cltd
mov
inc
xchg
lgs
or
inc
xchg
rclb
ja
not
xchg
daa
jl
and
inc
push
cmp
addb
inc
or
nop
or
push
adc
mov
stc
ljmp
inc
hlt
shlb
insl
dec
dec
ja
inc
shr
iret
mov
mov
jg
pushf
cmp
dec
ret
cmp
mov
sbb
inc
xchg
inc
jne
cli
das
emms
je
ss
dec
ja
das
lahf
jns
fwait
imul
inc
mov
pop
cmpsb
inc
leave
mov
dec
cwtl
leave
push
adc
fwait
movsb
ljmp
sbb
mov
pop
pop
popf
or
adc
mov
push
jno
push
shrl
push
pushf
lods
das
mov
push
lea
push
hlt
flds
push
sahf
cltd
push
inc
xchg
cmp
mov
je
inc
mov
push
and
jae
out
jmp
fisubrs
push
sbb
dec
cmp
sub
into
pcmpgtb
scas
push
outsb
jmp
push
test
jae
lds
mov
ficomps
aam
out
xchg
inc
adc
movl
shll
mov
xor
ret
ret
pop
into
add
mov
imul
mov
mov
ljmp
jbe
aam
push
adc
insb
jb
xchg
and
insb
sti
jge
mov
mov
cwtl
mov
dec
in
adc
jp
pop
stos
adc
xlat
in
pop
adc
cmp
sub
and
adc
pop
inc
lock
mov
sti
adc
faddp
fs
aas
cmp
xchg
push
fbld
xor
out
inc
inc
or
and
dec
shr
xor
and
jne
movsb
cmc
pop
or
adc
out
fs
dec
js
and
std
add
fsts
das
mov
shll
jmp
push
and
add
adc
in
or
jle
pop
pop
adcb
mov
sub
push
cmp
xchg
sbb
add
xor
adc
jle
test
sub
sar
or
std
cmc
sub
mov
mov
add
fdiv
mov
sub
lret
popl
outsl
enter
das
and
icebp
jp
cmp
jle
pusha
fsubs
cwtl
push
in
movsl
insl
lods
test
pop
mov
dec
leave
jb
testb
mov
lcall
sbb
stos
xchg
cltd
aad
outsl
pushf
inc
nop
dec
mov
loope
lcall
inc
stos
pop
popa
gs
jg
mov
add
fbld
or
shlb
dec
loop
xchg
adc
imul
ds
add
scas
jns
jp
aad
scas
das
std
jmp
xchg
push
das
aad
cmp
and
or
xor
mov
fbstp
lret
adc
jecxz
popl
and
iret
push
fadds
pushf
jo
arpl
addr16
aam
dec
sbb
jno
xorl
lods
jnp
adc
adc
subl
ffree
sub
dec
int3
repz
pop
in
adc
lahf
mov
bound
dec
and
das
iret
pop
push
lods
mov
mov
repz
cmpsb
adc
mov
sbb
movsb
sub
movl
pusha
fisubrl
addb
jae
orl
sub
sahf
iret
or
xor
js
inc
push
xchg
add
cwtl
dec
jmp
ret
push
or
int
aas
jnp
call
decb
sbbb
jne
iret
xchg
xor
andl
adc
pop
sbb
leave
add
punpckldq
ja
ret
cmpsb
shlb
call
test
inc
xlat
mov
add
leave
sbb
test
inc
adc
xchg
sbb
push
mov
pusha
jb
push
lods
das
out
inc
dec
inc
movsb
pop
cmp
or
push
and
repnz
push
scas
stos
xor
sub
les
in
xor
pop
cmp
out
mov
fsts
mov
xor
ja
xor
inc
in
loop
fisubrl
je
adc
sbb
sti
xor
xchg
or
test
sbb
sub
or
pop
test
sbb
out
pusha
fs
mov
jecxz
xor
sarb
outsb
sub
adc
and
les
fld
fwait
out
and
mov
xchg
iret
xlat
adc
das
and
push
andb
dec
sbb
cmp
push
xlat
ss
lret
inc
pop
mov
lcall
mov
pop
mov
cwtl
arpl
xchg
fsts
jnp
or
pop
ds
fdiv
xchg
jmp
rcr
cmp
fnstsw
pop
xor
and
and
or
pop
xchg
cmp
sub
ret
mov
call
popa
cmc
and
fildll
adc
add
out
mov
insb
aas
sub
fstpt
cmc
sahf
push
stos
mov
inc
sub
mov
jno
outsl
pop
sub
imul
sbbb
es
loope
push
pop
stos
jbe
jns
icebp
hlt
adc
dec
out
insb
cmp
fmuls
ss
leave
sti
stos
pop
lds
leave
xchg
dec
sub
add
xchg
mov
mov
cmp
dec
inc
ffreep
cmpsb
insb
push
xchg
pop
adc
bound
cmp
mov
pop
je
cmp
adc
sub
mov
jmp
ret
cmp
pop
das
jl
mov
xchg
push
ljmp
hlt
std
cmpb
mov
add
sub
inc
pushf
sahf
and
xchg
xchg
cltd
mov
sub
mov
and
sbb
gs
into
pop
divl
push
loop
push
ljmp
insb
sub
jl
mov
adc
mov
mov
lods
cmc
shlb
movsb
or
mov
or
outsl
pushf
mov
pusha
jmp
fisttpll
jb
imul
imul
pop
jns
xchg
imul
jne
or
fdivl
loopne
pop
in
fidivrs
mov
fcompl
push
jnp
mov
pop
iret
fs
dec
aam
bound
dec
and
daa
repnz
mov
pop
and
xor
out
mov
imul
arpl
inc
test
cwtl
mov
xchg
add
mov
xor
dec
push
push
jmp
xchg
mov
lret
mov
pushf
cld
int
xchg
fimuls
mov
dec
pop
or
daa
repnz
push
in
mov
xchg
test
add
lock
sbb
adc
arpl
sub
call
jne
loopne
jmp
inc
xchg
dec
ds
mov
fistl
jg
jae
out
lods
dec
add
imul
pop
mov
pop
push
cmp
scas
xchg
add
mov
sbb
jle
push
pusha
adcl
push
and
push
repnz
mov
orl
and
enter
dec
jae
test
pop
fnsave
ja
sub
mov
sbb
push
mov
out
pop
cmpsl
pop
dec
mov
jp
add
mov
loope
cmp
fldenv
js
mov
fisttps
ss
dec
roll
fisttpll
cmp
xchg
imul
sbbb
push
daa
out
sbb
and
push
jmp
pop
inc
loop
inc
and
jg
aad
push
push
mov
hlt
incl
aaa
ret
je
fistpl
xchg
mov
mov
dec
gs
mov
jne,pn
fwait
jge
dec
or
pushf
mov
das
aaa
cltd
adc
sbb
sub
mov
jle
sub
fstl
jno
mov
jns
into
xchg
out
mov
xchg
popa
popa
xor
mov
or
jmp
mov
or
inc
lahf
in
and
jge
sub
xchg
inc
adc
pop
cmpsl
push
test
mov
xchg
mov
xor
mov
les
sub
inc
mov
pop
push
cmp
sbb
icebp
sub
jo
mov
inc
inc
pushf
mov
shlb
xchg
mov
mov
mov
inc
hlt
lcall
fadds
xchg
in
shrl
cmp
jg
pushf
add
insl
mov
add
jp
imul
inc
mov
push
and
push
mov
addr16
add
sub
xor
sub
icebp
xor
add
dec
jne
mov
pop
dec
sbb
or
enter
xor
int3
sbb
movsb
cmp
xor
lea
add
imul
add
scas
in
pusha
push
pusha
stos
adc
jle
iret
clc
xlat
sbb
iret
icebp
pusha
aad
mov
bound
xor
xchg
ret
fxam
call
rcl
mov
lahf
jb
lcall
sub
xor
cld
loope
sub
fcmovbe
pushf
insl
and
jae
leave
push
and
int3
mov
test
jns
sub
sbb
loopne
inc
ljmp
popf
inc
ds
mov
loop
sbb
jae
adc
jl
les
jp
xor
sub
insb
mov
rol
ljmp
stos
xchg
out
mov
xchg
inc
or
or
xor
lea
and
xorb
movsl
jnp
mov
call
and
insb
cwtl
in
add
rorb
dec
mov
jp
add
push
xchg
adc
in
or
in
dec
sbb
pop
inc
sbb
xchg
fidivs
fstpl
daa
mov
push
adc
movsb
pop
out
scas
or
inc
fldl2e
sbb
dec
dec
add
jl
pop
in
iret
mov
cld
mov
jno
aad
in
mov
sti
mov
sbb
mov
jne
sti
nop
dec
or
das
lret
lret
add
and
inc
or
cltd
mov
and
popf
push
es
mov
mov
jnp
shll
lods
fs
jl
xor
je
adc
jl
mov
and
call
xor
dec
mov
pop
hlt
in
adc
test
inc
ljmp
clc
push
sub
or
xchg
xchg
inc
and
add
and
mov
mov
clc
icebp
dec
insb
lahf
cmp
xlat
pop
jp
dec
out
pop
mov
sti
mov
mov
cmp
out
xor
fdiv
les
addb
int3
cmp
mov
jae
add
and
jbe
outsl
fidivl
push
aas
mov
mov
inc
repnz
mov
add
xchg
lods
and
pop
cmpsl
xchg
inc
ret
mov
xlat
push
cld
pop
push
divb
fbstp
xchg
push
repz
sub
pop
incl
outsl
inc
xchg
popa
iret
mov
push
out
inc
jae
jne,pn
lods
arpl
jnp
push
nop
aas
lcall
push
adc
push
pop
int3
sub
cld
or
jp,pn
adc
jno
packsswb
daa
inc
mov
lret
cmc
jg
sbb
lahf
repnz
dec
lds
outsb
fsubrs
mulb
or
ret
in
cld
daa
sub
add
inc
loopne
cmp
ljmp
outsl
mov
mov
jp
xor
and
jg
nop
inc
inc
dec
add
jnp
enter
cmp
mov
mov
int
and
adc
js
adc
ljmp
sbb
cmp
push
les
pop
dec
inc
dec
das
mov
pop
push
dec
lcall
xchg
dec
movsl
ret
stos
icebp
sub
jp
cli
pop
push
mov
sub
stos
rclb
clc
add
gs
adc
inc
sbb
push
pop
push
popf
int3
sub
dec
push
adc
pop
neg
mov
xchg
mov
jbe
ret
pop
sub
sub
xchg
cmp
dec
xchg
ds
xchg
pushf
fisttpl
xlat
inc
xchg
scas
mov
fwait
push
fidivl
or
jle
or
xchg
pop
xchg
jp
jmp
pop
test
pop
push
pushf
cmp
inc
scas
mov
arpl
xor
aas
jg
popa
xor
mov
push
sarb
sub
sbb
je
nop
push
pop
cmp
leave
lods
test
lods
sti
inc
pushf
out
xchg
dec
cmpsb
cs
add
das
xchg
fcoms
ja
aad
lock
lret
sar
call
cmp
inc
push
dec
out
jno
dec
stos
scas
icebp
sti
mov
push
jbe
adc
mov
xchg
xchg
dec
addr16
call
aaa
mov
into
dec
jmp
push
mov
mov
jbe
mov
and
aaa
mov
sub
adc
push
dec
lcall
lods
out
cltd
pusha
sub
aam
mov
inc
ret
scas
les
mov
push
jo
mov
pop
mov
stc
sarl
cmp
imul
ret
xchg
sbb
or
sub
jmp
ret
frstor
rcrl
shr
aas
mov
ja
xor
orb
ret
mov
mov
xor
inc
icebp
pop
imul
outsb
repnz
pop
stc
mov
jo
addr16
cmp
jo
push
lods
movsl
outsl
divl
adc
int3
loope
cmp
jo
and
inc
xor
imul
xchg
or
pop
push
sbb
lret
scas
and
fs
iret
repnz
lret
or
arpl
in
and
xor
mov
test
jo
insb
fnstenv
adc
dec
imul
push
mov
sub
sbb
in
lahf
lea
and
adc
mov
xorl
mov
add
lods
movsb
push
lea
mov
fldcw
in
iret
out
shr
sbb
and
sub
nop
in
fists
stos
jl
cmp
nop
inc
es
lret
jae
mov
jo
adc
xchg
mov
xor
pop
sub
push
repz
xchg
or
inc
pop
xor
adc
mov
popa
loop
push
outsb
roll
popa
sbb
cs
sub
loop
lea
jge
scas
dec
mov
inc
fildll
mov
jmp
pop
test
sbb
icebp
add
mov
dec
xchg
and
pop
sub
rclb
arpl
test
or
cmp
pop
push
add
stos
popa
fcmovnbe
into
mov
mov
sbbl
push
mov
repz
inc
shr
fisubl
test
rolb
ret
push
mov
sbb
fstpt
divb
sbb
xor
jns
scas
shrl
pushf
jle
and
jge
and
into
jmp
push
xor
sbb
mov
aaa
insl
test
sbb
mov
xor
inc
cmp
stos
pop
mov
mov
mov
lods
push
fmuls
mov
inc
sbbl
xchg
outsl
arpl
inc
mov
inc
pop
lret
repnz
and
jecxz
repz
js
mov
sbb
push
mulb
sti
stc
xchg
adcb
andl
xchg
pop
fst
adc
xor
push
add
enter
out
dec
adc
sub
dec
inc
andl
inc
jmp
jae
cmp
scas
fdivrp
xor
or
sbb
mov
clc
mov
enter
jns
lahf
mov
divb
sbb
cltd
push
test
ss
pop
movsb
sub
mov
les
push
pop
insl
jb
popf
cs
call
test
in
fsub
sub
lock
nop
cmp
inc
add
pusha
pop
xchg
pop
xchg
pop
pusha
inc
js
mulb
das
inc
insb
or
sub
cmp
data16
in
add
sahf
std
sbb
inc
sub
and
ja
cmp
bound
sub
and
js
sbb
or
scas
cmpsb
mov
andl
mov
fimuls
shll
clc
pusha
xor
add
std
imul
add
repz
popf
mulb
inc
jge
call
clc
shl
pop
js
jl
insb
jb
xor
inc
or
add
adc
imul
jmp
insb
pop
jne
or
sarl
stos
sub
inc
mov
mov
ror
inc
cmp
mov
hlt
and
jp
shlb
enter
mov
xlat
pop
pop
cmp
push
mov
mov
mov
lahf
cmpsb
aad
mov
sub
iret
data16
cwtl
cmp
ret
pop
out
inc
xor
in
ret
add
pop
mov
les
popf
cmp
gs
pop
push
xor
add
test
icebp
and
push
call
or
mov
int3
sbb
js
call
mov
push
mov
inc
sub
and
sbb
mov
in
fisttpl
cltd
jmp
test
add
cli
in
mov
push
xchg
mov
mov
push
enter
and
and
inc
mov
icebp
sbb
dec
lods
inc
sub
or
xorl
xor
scas
pushf
jno
mov
add
add
pop
filds
mov
mov
enter
mov
inc
aam
mov
sub
adc
dec
cwtl
mov
clc
push
pop
loopne
out
push
popa
inc
push
scas
mov
ja
inc
out
push
lock
xor
or
and
aas
fildl
nop
test
add
mov
out
mov
in
inc
add
push
cltd
iret
and
jno
push
pop
aaa
xchg
arpl
je
cmp
std
nop
xchg
mov
imull
xchg
pop
fs
or
sahf
push
sti
out
inc
and
sub
mul
and
mov
cwtl
mov
movsl
add
lahf
sbb
scas
pop
shrl
xor
adc
push
pop
scas
sbb
fsts
mov
or
add
stc
and
fists
cmp
or
mov
xchg
pop
les
mov
outsb
pusha
jbe
sbb
xchg
jo
pop
jmp
je
xchg
pop
jge
xchg
aaa
mov
and
dec
cld
das
fwait
loope
sbb
mov
cmpsl
add
enter
xchg
jmp
pop
or
lock
lock
bound
cmpsb
cmp
or
mov
or
inc
jmp
cltd
jmp
cwtl
mov
lcall
inc
mov
notl
cltd
mov
les
xor
mov
mov
out
xor
rcrl
mov
sbb
pop
test
dec
sub
enter
xlat
movsl
mov
in
and
movsl
push
push
cwtl
pop
xorl
or
jmp
insb
push
lahf
and
hlt
add
loop
out
mov
jne
lahf
jl
push
nop
jo
add
or
sar
scas
adc
sub
je
repz
xor
mov
mov
xor
add
xlat
ss
push
test
sub
mov
leave
pop
jae
mov
xchg
addl
call
or
or
insl
aas
xlat
mov
cmpsl
pop
ffree
push
loop
mov
fdivrs
xor
xlat
inc
ja
jo
loope
jmp
mov
mov
or
mov
aas
xchg
int
push
cmc
xorb
push
sub
cwtl
ret
mov
out
aad
hlt
imul
cmp
inc
push
add
xchg
je
test
push
jne
add
pop
int
fistpll
inc
add
mov
mov
std
leave
or
sub
mov
jno
pop
dec
ret
adc
pop
cmp
fisubl
pop
mov
sub
aas
pop
add
icebp
cmpsl
sahf
jbe
xor
lcall
je
add
into
adc
cli
clc
mov
mov
sbbl
xor
or
fsubrl
lods
sti
mov
push
add
adc
dec
push
test
pop
int
inc
pushf
cmp
in
mov
push
or
das
jnp
ror
xchg
and
add
mov
movsb
mov
and
pop
ret
mov
jmp
pusha
fs
das
mov
push
rep
imul
ljmp
push
test
int
test
pop
or
jmp
jnp
mov
lcall
xchg
mov
in
inc
add
dec
mov
push
xchg
js
pop
adc
daa
inc
adc
jo
jmp
push
testl
js
sbb
data16
jnp
jb
mov
inc
cmp
inc
int3
xlat
loop
lcall
sub
jl
fimuls
cmp
push
fcomp
mov
mov
sub
sbb
mov
xchg
jno
lret
je
pop
jg
push
sub
ret
jle
lret
lahf
repnz
push
inc
sub
mov
cmp
push
jnp
fldcw
data16
sub
popa
sub
push
jae
lahf
push
add
sar
dec
int
or
dec
shlb
or
mov
ret
adc
xchg
mov
jmp
mov
cmp
sub
jb
xchg
dec
dec
xor
mov
push
insb
lret
mov
out
mov
jb
cmp
push
jb
sbb
inc
lret
mov
popl
nop
je
addr16
push
fisubl
nop
inc
add
movsl
adc
loope
and
pop
das
xchg
sarb
dec
and
call
pop
or
pop
mov
stos
pop
mov
mov
dec
enter
aaa
lret
sbb
jb
sbb
dec
adc
pop
outsl
xor
out
pop
fbstp
sbb
fldl
andb
push
test
jnp
lret
insb
leave
arpl
dec
sbb
clc
ret
mov
dec
mov
aas
loope
lahf
lods
movsb
aaa
insb
jecxz
cwtl
sub
dec
out
mov
dec
bound
lret
call
popa
sub
test
push
sub
push
mov
fwait
adc
and
pop
sub
std
test
xchg
in
pop
or
pop
inc
dec
ret
mov
push
push
mov
rcl
dec
cmp
arpl
das
inc
sub
inc
push
and
ds
adc
gs
sub
into
inc
repnz
sbb
out
stos
inc
dec
adc
std
stos
xchg
inc
push
addr16
inc
mov
cmpsl
out
repz
push
mov
cmc
arpl
mov
mov
sarl
and
aas
mov
jg
dec
in
jg
cmp
int
data16
test
jb
xor
cmc
clc
mov
cmp
jle
mov
sub
and
cwtl
mov
insb
push
jbe
or
adc
adc
push
jmp
dec
sub
stos
lds
dec
je
icebp
sub
xchg
sbb
cmc
xor
jnp
cwtl
cmp
ficompl
scas
sub
jo
xchg
push
in
je
lret
outsb
fildll
repz
repnz
pop
testl
sahf
xchg
cmpsb
test
or
inc
pushf
mov
mov
mov
dec
in
dec
wbinvd
mov
adc
jp
jg
or
mov
push
cmpsl
fwait
mov
out
icebp
mov
stos
jae
lea
cmc
jnp
cmp
imul
aam
jbe
popf
out
inc
mov
sbb
data16
sub
lds
test
and
shlb
jne
inc
mov
push
and
mov
movsb
call
bound
mov
jo
inc
jg
inc
bound
mov
arpl
jmp
xor
inc
and
fs
movsl
rolb
ss
out
sbb
pop
mov
add
xor
out
sub
lods
mov
mov
hlt
or
fistps
rorb
adc
js
or
lcall
dec
jns
or
or
cmp
sub
xchg
dec
stos
enter
aas
mov
sbbl
jl
into
seta
jle
and
mov
inc
push
ret
lods
jne
cmp
ret
xchg
jnp
test
hlt
cld
mov
je
mov
push
mov
inc
jno
rolb
repnz
pushf
fsubrs
aaa
sbb
lea
das
mov
mov
shll
pusha
test
inc
mov
cwtl
gs
out
les
adc
sub
js
ds
mov
dec
mov
adc
test
fwait
xchg
inc
xchg
fistl
add
pop
aad
lds
popf
pop
add
pusha
stos
insl
adc
inc
cld
adc
mov
repz
xchg
or
gs
out
pop
rcll
stc
cmp
add
insb
push
out
addr16
lods
push
jb
jl
sub
cli
cmp
lds
jnp
stc
lods
add
mov
sub
stos
cmc
fimull
dec
mov
sbb
fldcw
xchg
and
xor
in
fidivs
inc
scas
mov
ret
iret
mov
jne
xchg
test
mov
xchg
push
add
mov
daa
adc
cmp
lods
pusha
mov
dec
testb
aam
in
sbb
dec
push
or
rorl
pop
in
jl
subb
sub
movsl
fnstsw
xor
cmp
cmp
mov
xor
sahf
mov
movsl
push
roll
adc
xchg
mov
in
shr
call
sub
out
inc
and
pop
xchg
std
cld
jl
mov
xor
adc
inc
dec
std
je
out
dec
and
aas
out
xor
cmp
add
rcrb
cld
cmp
push
out
mov
out
and
mov
mov
xchg
xlat
xchg
dec
push
sbb
or
sub
outsb
xor
fisubrs
jno
mov
mov
fcomp
les
pop
pop
out
inc
ret
in
pop
sub
inc
paddb
orb
mov
push
mov
mov
pushl
enter
rol
stos
outsb
stos
xor
jae
dec
xchg
sub
loopnew
add
sub
dec
sub
pop
daa
add
adc
cmp
and
dec
push
adc
fldl
orl
sub
pop
sbb
test
enter
leave
repz
test
or
orl
sarb
dec
enter
xor
mov
call
mov
pop
cltd
dec
pop
aas
xchg
and
into
in
push
push
sub
pushf
mov
mov
jnp
mov
pop
sub
hlt
aaa
dec
fildll
or
cmp
jl
xchg
sub
mov
pusha
loopne
sub
jnp
pop
mov
in
cli
std
adc
data16
add
loope
adc
fadd
lahf
cltd
test
fnstcw
in
push
lcall
or
lea
and
mov
pop
std
dec
lret
inc
ret
jg
xchg
cs
xchg
shrb
mov
push
sub
idivl
jge
lods
push
mov
lea
dec
adc
add
jg
cmpsb
nop
adc
and
cmc
out
sub
loop
sti
xchg
push
cmc
inc
add
out
push
push
stos
clc
int3
jno
xor
xchg
pop
or
mov
mov
test
std
enter
push
sti
dec
ljmp
subb
in
mov
dec
mulb
and
push
add
mov
mov
xchg
rorl
or
lods
rcll
add
push
xchg
popf
cld
sahf
test
push
dec
dec
jbe
adc
inc
xor
movsl
mov
repnz
sub
ljmp
sub
and
test
lock
arpl
xor
cmpsb
int3
pop
je
mov
sbbb
out
mov
sub
or
out
fldt
stos
pop
cltd
xchg
inc
lret
les
loop
pop
pop
mov
in
cmp
push
hlt
push
mov
sub
stos
loope
test
jl
mov
or
mov
xchg
sub
lea
jae
pop
ds
cld
and
xchg
call
jae
jbe
lret
cmpb
sbb
dec
fidivrl
mov
movsb
xsaveopt
jmp
mov
cli
pop
das
into
mov
out
pusha
jle
sahf
test
pop
mov
inc
sbb
cmp
add
pop
mov
push
mov
pusha
repz
and
push
pop
rcrl
cli
jo
sub
mov
sub
push
add
pop
push
sahf
push
lcall
cmp
pushf
cs
pop
pop
shl
test
scas
fcompl
int3
mov
pop
daa
cltd
xchg
aas
jbe
push
lods
adc
cmp
jge
out
sub
insl
fbstp
xor
ljmp
push
fs
aas
pop
fdivrl
dec
or
scas
inc
pusha
push
dec
mov
rolb
addl
push
inc
push
int3
cmp
push
loop
xchg
xchg
mov
xor
inc
cmpl
xchg
pop
adc
out
lahf
fidivrs
or
fsubrs
adc
out
xchg
xchg
aad
test
scas
ret
mov
mov
xchg
xchg
jg
xorb
push
and
les
xor
hlt
jbe
es
std
inc
pop
cmp
sbb
cmp
jl
cwtl
jecxz
clc
push
inc
adc
les
jg
and
jge
push
or
lds
inc
and
ss
pop
dec
sti
sbb
push
inc
cwtl
inc
sbb
xchg
sbb
rorb
jno
loop
mov
jnp
dec
lods
adc
xchg
add
movsb
lcall
and
xor
movsb
mov
sub
mov
xchg
dec
mov
jp
jge
stos
stos
sbb
subl
xor
dec
in
xchg
leave
jecxz
cmp
rorl
mov
or
test
faddl
jb
insl
push
movsl
enter
sub
and
and
incl
pop
push
fcoml
sub
iret
add
rclb
aas
lcall
push
lock
movsb
aas
and
fdivr
inc
out
ljmp
mov
jne
lret
aad
mov
fldcw
or
push
push
push
dec
or
scas
mov
and
dec
xor
test
imull
mov
insb
movsl
lret
push
xor
add
cmpsl
xchg
nop
jo
cmp
xor
lahf
and
fnsave
pop
mov
andb
cmc
mov
adc
pop
add
iret
dec
adc
js
xchg
popa
mov
jl
leave
mov
test
lahf
rcrb
flds
ja
mov
xchg
hlt
fsubs
cmpsl
ja
shlb
or
or
or
addr16
xor
mov
cmp
ret
imul
jo
sbb
jecxz
xor
mov
fiaddl
mov
mov
pop
add
pop
inc
orb
daa
jnp
add
adcb
mov
jecxz
nop
dec
cmc
adc
mov
xor
das
decl
daa
les
mov
add
adc
xor
mov
ja
scas
xor
jg
ret
rorl
inc
shl
rorb
pop
in
xchg
dec
add
dec
mov
pop
jo
rorl
adc
mov
fisubl
addr16
jl
insl
dec
xor
cmc
mov
hlt
loope
rorl
lea
jno
mov
jne
adc
cmpb
sub
and
xor
adc
sahf
neg
and
push
adc
or
xlat
push
mov
ds
jg
imul
scas
dec
jmp
xchg
aaa
fwait
adc
xor
aam
neg
mov
push
jp
sbb
push
sbb
hlt
ljmp
xchg
lea
push
hlt
xorb
mov
xor
mov
popa
mov
jl
add
sub
ljmp
daa
sbb
ja
arpl
pushf
xchg
ret
push
xchg
ja
pop
add
sahf
imul
jne
inc
sub
inc
jnp
lock
pop
inc
mov
mov
inc
inc
shll
test
mov
sub
sbb
or
ljmp
or
out
ss
sarb
loopne
and
push
xor
xor
jmp
idivb
mov
movsb
sub
mov
gs
repnz
sbb
xchg
add
ss
mov
stos
fistpl
ljmp
loopne
or
jbe
xor
in
sub
xlat
pop
pop
mov
adcb
cld
add
mul
addr16
flds
xor
mov
fstpl
xchg
dec
mov
pusha
sbb
popf
daa
movsl
fistpll
daa
or
sbb
cmp
cltd
jmp
ficoms
inc
jne
mov
cmp
xor
and
test
sahf
int3
push
outsl
xor
xor
pop
push
bound
fcoms
fimull
popa
fidivs
jp
xchg
sub
mov
push
adc
xchg
jecxz,pn
inc
cmp
inc
sbb
stos
popf
xor
aaa
aaa
sahf
lret
rcrb
add
out
pop
dec
das
xor
mov
mov
addb
les
push
pusha
loope
repnz
lret
push
dec
mov
fstl
xor
ret
pop
xor
stos
in
pusha
mov
lea
pop
inc
add
push
ds
push
rclb
xor
add
mov
sub
adc
add
xchg
call
ficoms
xor
enter
xchg
ficomps
outsl
push
cltd
jo
sub
jns
xor
enter
cmp
fmull
xchg
or
rorl
and
es
lahf
int3
and
je
std
cmp
mov
mov
aas
mov
pushf
lret
int
in
inc
jmp
mov
repnz
in
lret
sub
add
inc
inc
cltd
xchg
and
in
add
mov
stc
adc
sar
mov
pop
sbbb
xchg
hlt
dec
movl
lcall
mov
or
imul
lcall
clc
ret
mov
and
dec
les
call
sub
stos
ss
xor
repz
and
inc
lds
push
dec
neg
sbb
cmp
fwait
xor
sbb
insl
mov
push
mov
out
pop
lret
movl
mov
xor
je
fisubl
xor
scas
pmullw
out
data16
lds
fstpl
mov
cmpsl
mov
les
mov
fsubl
xor
inc
hlt
sub
cld
gs
mov
mov
outsl
movl
sub
xchg
pop
aas
std
cmp
pop
or
push
mov
dec
fyl2xp1
mov
test
xor
jl
ud2
fsubrl
and
nop
push
popf
jns
roll
imul
insb
fstpl
int3
in
xchg
outsb
pop
push
and
xchg
mov
mov
rclb
nop
xchg
push
sub
push
shr
cmp
int3
dec
in
or
jne
push
paddusw
or
fwait
inc
lret
jns
mov
push
cli
in
gs
push
xchg
inc
cwtl
jae
inc
inc
subb
les
fcmovne
bound
stos
push
js
mov
pop
adc
int
repz
jmp
lds
or
xchg
les
es
sub
test
clc
call
jb
inc
xor
aam
cmp
lea
in
push
in
fdivl
scas
and
arpl
adc
leave
pop
in
pop
jle
repz
xchg
jb,pt
cmp
ret
ja
stos
adc
cwtl
xchg
jne
je
xchg
sbb
add
mov
and
push
aaa
inc
ss
es
inc
adc
pop
bound
jnp
loopne
in
addl
mov
mov
jmp
imul
call
pop
lret
in
rorl
add
mov
call
mov
pop
and
test
pop
sub
cltd
icebp
xchg
mov
xor
pushf
mov
ficompl
ljmp
xor
xor
in
mov
jp
roll
das
hlt
dec
cmc
lret
enter
sbb
dec
daa
mov
xchg
mov
xor
dec
ljmp
cs
cmpsb
inc
push
mov
add
mov
test
shl
and
lcall
lcall
or
mov
pushf
insl
push
or
aam
adc
or
ds
mov
iret
ficomps
xor
cmp
pop
into
leave
repz
repz
push
ret
into
outsl
inc
sub
dec
cmp
xchg
mov
jo
or
lea
xor
inc
jb
cld
aad
scas
pop
je
push
push
push
ljmp
inc
dec
mov
outsb
mov
dec
sarb
out
aaa
add
movsl
mov
mov
cmc
outsl
arpl
aam
jge
pushf
fisttpll
dec
sbb
xor
mov
inc
mov
faddl
ds
fsubs
andl
pop
pop
clc
lods
inc
test
lods
rclb
add
xchg
cmpb
jp
sub
sbb
cmp
out
nop
mov
mov
mov
jmp
lcall
repz
dec
add
es
add
je
push
or
shrl
ja
std
adc
enter
aas
and
imul
sbb
aaa
arpl
mov
jmp
lret
xchg
lret
in
xchg
jb
pop
into
movsb
add
inc
mulb
or
push
mov
mov
pand
mov
pop
shl
int3
mov
aas
push
adc
mov
mov
mov
jnp
inc
xlat
inc
inc
mov
insb
ljmp
and
jns
add
lods
mov
or
push
fsub
iret
and
stc
imul
or
js
ret
inc
imul
mov
fcompl
mov
xor
mov
xlat
insl
cmpsb
sbb
insl
jae
sub
sub
bound
mov
imul
fsubl
mov
sbbb
dec
dec
push
aad
jns
cmp
int
jno
js,pn
sbb
xchg
push
xchg
cmp
incb
add
mov
icebp
sbb
sub
lahf
push
fiaddl
adc
lods
rorl
scas
cwtl
lods
in
adcl
enter
jge
mov
cltd
int3
cmp
and
pause
cld
out
in
in
popa
cmp
mov
mov
or
push
dec
loope
leave
push
gs
cli
pop
out
lods
test
outsb
cwtl
out
add
push
push
ss
or
pop
mov
mov
lock
mov
in
xchg
inc
repnz
jb
inc
or
sbb
push
dec
or
outsb
lds
xchg
add
pushf
lods
iret
xor
stos
insl
adc
scas
shl
mov
jne
add
mov
mov
jno
enter
leave
inc
push
cmpsb
imul
sub
lds
rcrl
jno
lahf
andb
int3
mov
stos
ljmp
push
pop
test
dec
inc
adc
cmp
dec
sbb
ret
or
and
sarl
jmp
cmp
push
movsl
rorb
push
mov
mov
mov
mov
sbb
sbb
das
jecxz
rcrl
push
cmovbe
pop
fsts
cmp
dec
dec
sbb
mov
leave
jns
cwtl
jns
ret
sbb
xchg
sbb
call
mov
adc
push
lods
mov
sbb
mov
cmp
push
lods
push
pop
add
lock
pop
push
fs
jg
mov
test
imul
addb
fiaddl
and
lods
adc
sbb
push
jno
jmp
mov
xchg
call
fs
test
sbbl
std
and
xchg
bndstx
adc
mov
stos
out
scas
dec
insb
lds
mov
ljmp
cmp
xor
adc
dec
faddl
ljmp
icebp
mov
mov
std
hlt
stc
int3
and
pop
fildll
rcr
pop
jbe
nop
mov
ficoms
daa
in
mov
inc
fcompl
mov
xchg
jno
stc
jecxz
lds
cwtl
in
or
mov
add
cwtl
in
inc
adc
mov
xor
mov
ret
dec
mov
dec
sbb
fdivrs
adcl
push
hlt
jb
cmpsl
test
and
mov
mov
test
jg
push
xor
mov
andb
cltd
test
lea
pop
add
cmp
jnp
xchg
xchg
out
dec
shrb
das
inc
loope
adc
dec
inc
or
into
ret
idivb
and
xchg
and
mov
lea
sbb
mov
scas
jne
lods
dec
adc
fucomi
mov
mov
sbb
push
popf
inc
xchg
loope
mov
xchg
jae
in
sahf
xchg
sub
jmp
shll
mulb
mov
nop
arpl
lock
mov
add
cmc
test
pusha
cwtl
add
lahf
sbb
cs
call
data16
dec
xor
nop
cmc
data16
or
cmp
fs
xchg
push
stc
sub
pop
arpl
dec
jle
jl
cmpsl
xor
jg
jmp
or
add
jne
jp
mov
fwait
rol
out
xchg
mov
out
sar
or
sbb
leave
lock
in
aas
outsb
xorl
xchg
adc
xor
cmpsb
push
ss
dec
popa
mov
mov
mov
in
xchg
add
xlat
loope
insl
cmc
out
jnp
jmp
add
popf
das
inc
pushf
adc
pop
dec
add
fldl
lret
jmp
repz
shrl
fucomi
rcrb
lods
mov
imul
push
lds
lods
rolb
in
shl
loop
lock
lods
sbb
addr16
mov
mov
in
fs
test
mov
sub
ja
or
hlt
push
addr16
imul
fdivr
fcomps
mov
mov
jns
scas
fnstenv
mov
pop
push
hlt
sti
leave
popa
in
cmpl
jo
or
shll
cmp
filds
dec
andb
sbb
pop
inc
stc
xchg
mov
insb
inc
cmp
cmpsl
mov
mov
xor
sbb
stos
je
sbb
leave
sub
es
loop
arpl
dec
movaps
push
js
sub
nop
repz
jnp
pop
aam
pxor
adc
jp
fldcw
out
in
xchg
jne
das
mov
int3
jp
test
mov
nop
repnz
jae
adc
dec
ljmp
jb
push
call
adc
dec
inc
cmc
add
pop
pop
clc
stc
or
xchg
out
inc
ret
dec
lahf
inc
adc
xchg
lcall
add
daa
push
add
repz
mov
dec
mov
pop
xchg
cmc
mov
or
sbbb
fisttpl
outsl
lods
cld
in
jno
mov
loope
pop
imul
fimull
pop
test
fwait
cltd
in
jge
repz
sbb
cs
aas
mov
loop
xchg
adc
jl
jns
add
cmp
adc
dec
test
xchg
scas
xchg
sbb
xchg
outsb
xchg
cmp
pop
jg
adc
adc
ds
fmuls
cmp
into
fadds
jmp
mov
lock
test
fldenv
les
push
push
outsl
sti
orl
sub
fisubl
jno
or
cmovle
addr16
inc
add
fdivr
xchg
add
lods
jl
sub
xchg
loopne
xor
mov
cmc
add
ja
call
daa
mov
stos
lret
dec
or
push
mov
xchg
mov
sub
cmp
xchg
add
cmp
popa
mov
mov
push
repz
pusha
ds
inc
xlat
jns
add
mov
dec
sbb
sub
adc
cmp
out
data16
jnp
dec
jl
push
adc
xchg
mov
sub
popa
lahf
push
sub
dec
jbe
inc
jl
dec
jbe
inc
mov
inc
mov
aad
sar
cld
mov
jmp
xchg
and
mov
mov
loop
xchg
xchg
mov
cmp
sub
mov
dec
cltd
iret
pop
push
or
mov
jge
lret
jb
push
cmpsl
js
popa
push
sbb
lahf
push
inc
cmp
dec
fisttpll
jl
xchg
shrl
adc
fisttpl
ljmp
add
jns
retw
popa
mov
mov
or
imul
out
ret
lahf
subb
push
pop
repz
jbe
in
outsb
cmp
cmp
push
add
scas
jo
push
pushf
xchg
sub
frstor
lock
cmp
push
psubusb
in
into
scas
fidivrl
mov
jb
xor
popf
cli
icebp
lahf
adc
adc
lret
imul
insl
dec
ds
xor
sub
sub
shrl
mov
sbb
pop
jnp
mov
insl
mov
add
mov
loop
jge
fs
adc
lods
and
shlb
jae
daa
ljmp
sub
repnz
into
xchg
pushf
push
and
push
xchg
push
fwait
es
xor
inc
jle
lods
push
add
add
sub
dec
lock
cmp
jmp
cmc
pop
adc
stc
or
add
jmp
minps
fstps
mov
jae
xor
mov
sti
lret
sub
bound
pusha
pop
js
jns
std
or
mov
sub
dec
dec
and
lds
dec
cmp
pop
or
mov
mov
cwtl
adc
xor
xlat
into
and
andb
imul
cmp
nop
cmp
mov
jmp
sub
mov
iret
out
stc
js
cmp
xor
out
xchg
mov
in
pop
ret
pop
ret
rclb
insb
sbb
cld
pop
mov
lret
mov
daa
mov
aas
out
mov
or
ret
es
jne
jg
adc
jg
jmp
xor
xchg
pop
add
in
in
gs
push
outsb
in
mov
int
es
cli
mov
cmc
test
rdtsc
dec
inc
imul
into
xchg
mov
jno
jmp
and
mov
fldl
sbb
loope
cs
repz
mov
lea
pop
in
pop
pop
test
addr16
in
aas
add
jg
insl
or
pop
iretw
jmp
sub
outsb
stos
pop
xchg
sub
scas
sub
xchg
mov
cmpsl
repnz
add
adc
loope
ficoms
dec
je
cli
arpl
cmc
and
add
push
lds
clc
outsl
cmp
xchg
nop
aas
imul
outsl
std
cmp
add
jecxz
xor
loope
rolb
out
lods
xchg
clc
test
cmc
cmp
cmp
jae
push
lods
mov
rcr
fidivl
insl
mov
hlt
into
fists
and
inc
aas
mov
enter
cmp
decb
or
dec
pop
sub
mov
mov
fxch
stc
aaa
test
lret
mov
test
int3
xchg
inc
popf
adc
mov
icebp
jmp
sbb
and
cmc
inc
jl
std
cltd
cmpsb
popl
out
fistps
fcmovb
inc
inc
loopne
vpaddsw
xchg
nop
dec
jl
cld
cli
sbb
and
lcall
lahf
lds
pop
xor
mov
lcall
xchg
and
int
or
daa
test
push
xchg
movsl
add
cmp
outsl
test
movsl
and
sub
jae
push
push
decl
jbe
jp
xchg
and
jecxz
mov
xchg
movb
mov
stc
sbb
lods
cmp
mov
pop
arpl
xor
icebp
push
pop
lahf
push
out
push
push
sbb
and
sbb
fstpl
inc
add
push
mov
push
dec
push
stos
push
stos
movsb
fldl
mov
jmp
cmp
out
mov
jmp
sbb
std
inc
insl
test
sti
or
fisubrl
loop
loopne
inc
cmp
push
lds
cmp
or
scas
jb
adc
dec
bound
stos
cld
adc
daa
addb
aam
cmp
cld
mov
push
mov
xchg
add
cmp
ja
cltd
sub
add
jb
inc
jg
in
mov
popa
xchg
or
mov
leave
fsubs
fistps
daa
hlt
xchg
enter
and
xchg
je
cmp
cmp
dec
dec
add
fs
pop
sbb
das
lock
scas
pop
inc
jmp
clc
inc
daa
mov
ja
sti
or
ja
cmp
xchg
sub
shll
push
lods
dec
lret
add
cmpsb
mov
dec
mov
ljmp
push
sbb
mov
fwait
cmp
inc
mov
mov
and
std
xchg
xchg
push
xor
icebp
add
mov
ja
inc
lahf
sub
sub
cwtl
in
add
test
stos
jno
cmp
xor
mov
icebp
or
push
cmp
call
pop
push
mov
adc
and
ljmpw
movsl
imul
adc
and
mov
leave
ficomps
mov
cmp
cmp
or
adc
fs
mov
jno
jns
mov
movsl
bound
stos
loopne
add
pop
push
pushaw
sar
xchg
mov
or
jae
mov
mov
fs
sub
mov
inc
arpl
pop
aaa
mov
loopne
lahf
je
xor
fsts
sbb
addr16
call
lret
or
jge
xchg
clc
xor
push
mov
scas
pop
pop
data16
fs
xor
and
fidivl
xchg
jns
arpl
and
sbb
repz
loopne
sub
cmc
adc
hlt
dec
in
ror
aas
pop
mov
adc
int
in
adc
jns
push
mov
icebp
mov
xchg
xchg
ret
incl
or
push
subb
adc
pop
pop
aaa
cmp
jnp
mov
mov
xchg
xor
inc
cmpsl
xchg
imul
sbb
aam
xor
push
xchg
pop
xor
jne
je
push
ficoml
out
daa
mov
std
push
xorps
aaa
sahf
nop
arpl
lret
mov
pop
sub
in
icebp
stos
push
sahf
inc
dec
xor
sub
add
xorl
test
fs
scas
mov
jge
fisttpl
dec
fisttpl
jmp
xchg
push
enter
lret
int
andb
mov
mov
pop
test
arpl
imull
adc
cmpsb
inc
mov
mov
xchg
xchg
clc
inc
popf
loope
daa
push
sbb
or
jb
jno
adc
push
or
inc
subb
js
ret
sbb
test
imul
push
lds
push
lcall
adc
in
push
pop
xchg
movsl
aaa
mov
shrl
mov
pop
outsb
les
hlt
sub
lcall
leave
push
test
mov
mov
in
js
lods
insl
jge
sbb
cs
mov
cmc
cmp
jo
in
stc
sub
xor
movsl
ds
and
rcrl
ret
xchg
xchg
jle
xchg
je
cmp
pop
adc
cmp
pop
das
call
dec
pop
jp
in
clc
pmulhuw
cmpsb
mov
xor
sahf
fsubrl
or
mov
sbb
fildl
clc
aam
je
add
mov
dec
or
fildll
lret
jnp
cld
mov
aad
je
aad
dec
pop
lods
sbb
jl
sbb
call
lret
mov
es
stos
sub
js
push
rcrl
outsb
hlt
scas
iret
or
sahf
mov
fimull
push
mov
subb
push
add
sbbl
cmc
inc
pop
fs
dec
inc
repnz
jp
or
and
cmp
jb
adc
or
sub
iret
leave
out
and
and
push
je
dec
pop
dec
jo
xor
push
xchg
xor
cmp
and
out
mov
sub
jne
adc
inc
addr16
and
lahf
daa
stos
jns
stc
dec
cmp
sub
mov
mov
mov
pop
cli
push
dec
mov
pop
in
icebp
in
mov
in
stos
imul
add
and
lret
or
sar
xor
mov
clc
xor
xlat
adc
or
sub
sahf
ret
xchg
aaa
or
cmc
int
inc
dec
inc
cli
fwait
push
sub
in
push
ror
sbbb
or
pop
xor
loop
dec
mov
imul
cld
jg
scas
scas
stos
pop
xchg
ljmp
ret
mov
jmp
inc
adc
gs
into
mov
aad
add
int
pop
cmpsb
imul
jns
mov
inc
mov
dec
je
repnz
jp
push
sti
mov
mov
ja
outsl
xchg
call
mov
faddl
jp
and
imulb
std
scas
ds
pop
mov
and
dec
scas
lcall
pop
xchg
popf
mov
or
or
xlat
inc
mov
das
mov
push
addr16
mov
subl
movsl
xor
int
in
sub
push
stos
movsl
movsl
mov
test
xchg
test
or
push
lret
subl
sbb
jmp
ffreep
xor
pop
daa
inc
in
inc
popw
dec
push
mov
cwtl
pop
push
out
rolb
fs
fcoml
dec
add
cmp
cmpsl
test
loope
nop
in
movsb
cmc
push
das
jbe
or
mov
imul
push
hlt
mov
dec
jl
adc
cli
out
lahf
push
out
xor
std
dec
sbb
cmc
popf
add
mov
or
add
pop
fwait
arpl
or
mov
inc
fs
push
mov
or
rolb
mov
movsl
pop
imul
cmp
dec
mov
popa
cmp
mov
xorl
hlt
cmp
pop
push
fmuls
sub
push
das
roll
or
outsb
push
fimuls
icebp
orl
and
addr16
aas
int
jmp
jge
mov
pop
adc
fwait
je
test
test
std
fisubl
clc
pop
outsb
pushw
sub
add
les
aas
in
int3
pop
adc
leave
sarl
les
cmp
inc
sbb
sbb
add
loopne,pt
xorl
jle
test
mov
pop
pop
cmp
add
xor
imul
pusha
lahf
mov
jg
loope
xor
adc
loop
add
inc
pop
xchg
ret
es
stc
push
cmc
push
sub
adc
cmp
ja
inc
loope
enter
inc
mov
lea
pushl
mov
ja
mov
xor
repz
mov
xchg
sub
ficompl
sub
mov
clc
mov
out
pop
movb
mov
cmp
scas
ss
and
lock
in
fimuls
mov
or
imul
mov
jbe
insl
adc
xor
push
iret
push
add
negb
cmp
cld
loope
ret
lcall
ds
or
or
enter
pop
bound
cmpsb
stos
xchg
shrl
mov
call
xlat
and
adc
xor
out
pop
pop
sbb
popa
mov
daa
pop
in
fistpll
lahf
or
sub
int
nop
into
es
sbb
outsl
mov
xchg
sub
insb
out
and
mov
or
sbb
ret
xchg
push
pop
shl
scas
mov
lock
mov
lods
je
pop
mov
push
loope
insb
mov
or
int3
cmp
add
inc
jl
pop
push
inc
scas
out
fstpl
sahf
mov
or
in
nop
icebp
sub
pop
cmpsb
in
mov
jl
loope
arpl
push
pop
jle
ror
push
ss
dec
xor
inc
cmpsb
mov
sbb
sbb
movsl
jns
or
cmp
insl
imull
pop
ds
insb
and
add
dec
xchg
aad
cmp
shll
cmpsl
sti
cld
push
add
adc
daa
sbb
mov
mov
adc
mov
testl
insl
out
inc
pop
ret
and
popf
imul
fwait
repnz
sbbb
adc
movsl
iret
ror
inc
xor
fwait
pop
stos
in
icebp
shrb
aas
enter
sub
sbb
dec
push
or
push
call
cmovno
adcb
pushl
jno
inc
push
outsl
mov
jle
jns
arpl
pop
cwtl
push
sub
xchg
mov
into
stos
repz
xor
es
dec
loopne
rcrl
add
inc
ss
int
jno
loope
jne
and
pop
outsl
sahf
xchg
pushf
call
add
jnp
lret
cmp
sub
les
call
and
imul
push
push
dec
jl
cltd
cmp
aam
loopne
jp
push
jbe
hlt
adc
push
cmc
cs
dec
and
pop
mov
adc
aas
ja
and
lret
push
fisubs
mov
jns
test
mov
or
xchg
mov
popf
cwtl
js
xchg
loopne
push
inc
pop
xor
mov
xchg
jmp
xor
cwtl
adc
push
loopne
mov
or
test
and
bnd
and
ds
sbb
sbb
sbb
add
mov
dec
cwtl
fistps
je
cmp
aas
stos
add
xor
sbb
dec
mov
lock
insl
daa
movsb
call
scas
movsb
xor
arpl
mov
jmp
inc
add
cmpsl
mov
divl
lods
jge
lds
xor
jbe
popa
addr16
mov
data16
and
or
hlt
cwtl
iret
pop
sbb
inc
add
xlat
dec
sub
sub
lods
fcmovbe
and
xchg
add
clc
js
test
pop
scas
adc
addb
scas
test
mov
push
cld
pop
jne
mov
cmp
pop
iret
mov
out
data16
xor
insl
adc
insb
sub
and
push
inc
dec
call
sbb
popf
testb
lds
jl
mov
test
jo
or
pushf
pop
mov
jae
mov
jg
dec
int3
push
fwait
jbe
and
mov
les
ret
push
and
out
and
lcall
pop
mov
cmp
out
jg
les
and
mov
mov
stos
pop
push
adc
cli
mov
pusha
loop
jae
xchg
xorb
pop
and
adc
dec
je
out
mov
stos
jnp
fdivrl
add
shrl
mov
fidivs
or
xchg
cmpsl
fadd
loopne
push
icebp
add
mov
push
xchg
nop
sub
ja
rcll
test
pop
mov
mov
leave
xchg
mov
add
and
cwtl
addr16
inc
ljmp
adc
mov
dec
xor
dec
mov
or
or
push
cbtw
pop
push
fidivrl
ja
call
sbb
div
adc
adc
inc
inc
pop
and
in
push
dec
fwait
int3
test
mov
or
mov
stc
int3
cs
scas
dec
cmp
pop
mov
fistps
les
scas
push
jns
in
popf
inc
lret
xchg
or
and
lods
iret
mov
push
sbb
ss
pop
mov
in
pushf
lret
sub
mov
cltd
dec
mov
sti
push
mov
in
dec
in
scas
arpl
jns
enter
adc
mov
inc
sbb
aas
inc
jecxz
orb
repnz
sub
jb
push
jb
iret
rcll
inc
mov
push
mov
repnz
adc
leave
fucomip
mov
arpl
sub
lods
push
cmpsb
stc
pop
in
aas
icebp
iret
je
cld
push
cmp
pop
lock
sbb
cmp
lcall
and
bound
inc
cmp
mov
dec
lea
pop
adc
xor
int
inc
in
lods
xlat
loopne
int
inc
aas
sub
jbe
push
adc
adc
inc
cmpsb
outsb
cmp
in
cmp
roll
jmp
pop
mov
leave
imul
sbb
sub
ret
cli
jmp
mov
xchg
rcrl
xchg
outsl
leave
xchg
jmp
mov
adc
mov
inc
int
fmull
daa
xlat
xchg
cmpsl
mov
rcrl
int3
add
arpl
xchg
cmpsb
movsl
and
push
cmc
lahf
ljmp
adc
cmp
out
sub
push
movsb
lahf
dec
pop
clc
xor
mov
dec
mov
in
add
clc
mov
mov
movsb
arpl
lahf
pop
ss
xchg
int3
mov
cmp
stc
cmp
lahf
xchg
cmp
xchg
add
imul
add
add
mov
mov
dec
pop
mov
pop
jecxz
into
adc
jg
mov
aam
xor
push
fcmove
outsl
sar
cmpsb
xchg
ja
cli
loop
jnp
iret
cmpsb
and
lret
jl
repz
faddl
loop
mov
cmp
adc
dec
mov
ficoml
in
cmc
sub
out
and
flds
repz
mov
wbinvd
lea
loopne
aam
fwait
sbb
stos
roll
jle
pop
add
shl
or
aas
sbb
or
xorb
xor
lods
and
jle
push
mov
ffreep
ret
fucom
xor
cltd
push
and
ret
dec
imul
call
rorl
mov
mov
stos
lea
and
lahf
jge
sbb
mov
inc
pop
mov
cmpsl
adc
dec
push
outsl
pop
lret
out
aad
mov
daa
pop
bnd
pop
loop
ret
sub
sub
xchg
jecxz
jnp
jbe
and
cmpsb
lahf
rcrl
sbb
pop
fldcw
adc
mov
out
out
cli
xchg
and
add
cltd
jo
stos
push
lods
push
pop
jl
es
sbb
mov
xchg
in
mov
cmpsl
add
cmc
xlat
push
inc
xor
in
sahf
dec
inc
lret
xchg
adc
push
arpl
pop
into
icebp
aam
sub
or
repz
add
fwait
iret
sti
and
push
dec
mov
arpl
test
add
out
aam
je
pusha
push
mov
stos
jo
stos
sub
mov
push
lock
mov
sti
clc
sbb
inc
xor
push
jmp
ds
fadds
cld
ret
inc
sbb
mov
ret
ficompl
mov
aas
cmpsl
lret
xchg
mov
movsl
cmp
xor
xor
inc
loopne
sub
jmp
mov
xor
xchg
dec
xchg
hlt
push
mov
cmp
push
js
das
jl
pushf
pop
out
sar
inc
jecxz
cmc
sarb
sahf
add
xor
js
mov
fimull
out
lret
mulb
popf
jns
dec
insl
rcll
sti
sbb
sbbb
adc
pop
outsb
lods
outsl
xchg
sbb
dec
repz
sub
in
xlat
sarb
repz
pop
push
cmp
scas
sti
inc
or
fidivrl
mov
mov
je
xchg
out
pop
lods
std
rcll
sbb
ret
jg
adc
inc
test
popf
mov
cltd
jbe
mov
jl
cmp
jl
mov
add
xchg
sub
add
stos
dec
dec
cmpsl
adc
add
aaa
push
pusha
xchg
xchg
lds
test
mov
xchg
div
pop
cmp
jge
out
mov
out
add
sbb
mov
mov
ret
jnp
scas
leave
mov
packsswb
insl
adc
in
xchg
or
mov
sahf
dec
out
aas
das
popf
and
lahf
orl
mov
lret
push
add
pop
xchg
outsb
fnsave
pop
clc
adc
adc
dec
sub
decb
sub
lahf
dec
jns
lock
sub
fstl
push
sbb
int3
sarb
or
jge
mov
xchg
enter
lcall
int
aad
inc
lret
pop
mov
or
loope
add
add
stos
fisttpl
mov
sbb
gs
jo
mov
mov
pushf
and
fstl
xchg
data16
scas
and
decl
shlb
sub
mov
jbe
std
sbb
jge
jno
jno
dec
outsb
pop
mov
daa
push
rclb
mov
mov
sbb
sbb
inc
sub
outsb
xlat
pop
in
jb
mov
mov
jmp
movsl
and
std
fsubl
movsb
in
xchg
movsb
sub
outsl
das
int3
lcall
lret
adc
cmc
cli
cmp
mov
roll
add
in
cli
xchg
push
pop
sub
iret
test
add
and
inc
cmp
push
pop
jg
and
in
popf
loope
bound
sub
jmp
sub
gs
or
inc
dec
or
mov
test
iret
xchg
pop
xchg
inc
cmp
mov
xchg
adc
lock
jbe
insb
fidivrl
inc
scas
mov
pop
mov
mov
popf
ficomps
and
dec
jecxz
or
or
jbe
sahf
repz
inc
mov
mov
cmp
xchg
movsl
out
jnp
aas
mov
cmp
hlt
bound
pop
inc
cmp
sub
pop
mov
outsl
jne
add
push
daa
lahf
ljmp
les
scas
gs
pop
xchg
popa
out
out
enter
imul
adc
inc
or
xlat
inc
or
add
push
daa
lea
or
mov
ja
pusha
cltd
jl
fwait
je
xchg
jne
push
lods
inc
mov
push
pop
fcmovnu
add
out
xchg
std
std
jmp
mov
ljmp
int
inc
rcr
out
and
cltd
addb
pushf
les
ds
lcall
sarb
cmp
mov
mov
lahf
icebp
sbb
mov
insl
and
sub
inc
leave
jl
popa
push
jnp
test
inc
or
mov
pop
dec
or
jbe
jb
pop
cmpsl
jge
sbb
stos
xchg
insb
add
lods
psubw
jo
and
push
dec
xrelease
clc
jb
ja
cmp
cmc
push
dec
in
sbb
shlb
sbb
sbb
push
js
xor
dec
xchg
add
add
cltd
mov
cmp
or
ret
mov
or
inc
in
jmp
dec
popf
sbb
add
xor
jp
mov
fdivrs
fwait
sbb
push
xor
cmpsl
add
shll
imul
lods
add
negb
out
fs
in
add
sub
jne
push
mov
aas
lcall
cmpl
and
xor
mov
adc
push
je
dec
fistpll
es
jo
in
xlat
sarl
insb
prefetch
or
add
xchg
les
add
incl
fists
sub
push
jp
jp
lds
subl
xchg
outsl
lock
gs
cld
dec
and
cmpb
scas
dec
stc
int3
lahf
jmp
xor
test
nop
jge
add
or
rcrl
in
out
lds
add
dec
pop
ret
add
pop
pop
xchg
out
add
dec
aas
pop
cld
add
mov
enter
jmp
xchg
push
pop
cmp
inc
fadds
out
cwtl
subl
bound
jb
add
sbb
fidivl
mov
inc
rorl
test
dec
cs
xor
xchg
push
jmp
subb
xor
mov
jle
sub
or
repnz
int3
popf
push
repnz
loopne
mov
test
add
mov
mov
lcall
gs
idivb
jno
imul
aas
icebp
or
popa
lret
lds
and
aam
push
sti
xchg
xchg
insl
mov
data16
inc
test
rorl
push
out
js
or
pop
enter
push
flds
pop
insb
fisttpll
popa
adc
lret
fisubs
push
push
xchg
fsubrl
js
sub
pop
mov
add
sahf
in
and
cmp
sub
add
in
jo
les
pushf
sub
bound
pusha
xchg
repz
xlat
fs
sbb
stos
inc
loop
std
xchg
fcomp
gs
inc
aam
xchg
fsubl
adcl
mov
cld
in
rorl
pop
clc
mov
gs
push
jno
scas
fsubs
inc
dec
lds
sub
ret
adc
jns
sbb
adc
mov
cli
push
lret
xchg
push
inc
jge
mov
mov
stc
js
jbe
mov
mov
out
daa
xor
cmc
int
cli
pop
cwtl
push
pop
jno
pop
pop
lcall
mov
inc
dec
mov
lock
push
sbb
lcall
jle
stc
sub
paddsw
popf
test
jg
mov
adc
xchg
sub
sbb
xchg
sar
ja
aam
push
ja
in
aam
inc
fs
out
fdivs
push
pop
icebp
and
ljmp
insl
push
lods
subb
in
inc
xchg
mov
mov
jns
lods
add
inc
add
sub
stc
scas
adc
sub
das
or
sbb
lock
repz
push
pop
divb
sbb
mov
cltd
mov
js
cmp
sbb
jp
push
sub
add
xchg
add
add
cli
add
dec
adc
loope
xor
rcll
iret
mov
or
xor
mov
push
out
jecxz
cmc
sahf
mov
pushf
fisttps
xchg
mov
mov
int
leave
sarb
imul
cmp
sbb
les
jle
xchg
xchg
inc
sub
arpl
insl
push
push
push
mov
icebp
pop
rorl
sbb
into
mov
pop
jnp
mov
into
adc
cmp
pop
jno
xor
mov
or
mov
test
or
push
and
ret
insb
iret
add
mov
fcoms
and
lods
andl
ds
inc
adc
mov
mov
add
mov
arpl
xchg
fldt
in
test
pusha
and
cmp
or
cmp
mov
fiaddl
push
dec
jmp
add
add
sbbb
cli
cmp
in
pop
mov
xor
test
cltd
push
cmp
bound
add
sub
jmp
or
repnz
in
mov
stc
jl
cld
cmc
lods
mov
xor
xchg
push
insl
mov
push
jge
sbb
or
aam
iret
jbe
add
subl
push
xchg
xor
xlat
cmp
jl
dec
sub
pop
test
xchg
or
aaa
pop
jae
push
add
xchg
inc
inc
push
das
pop
jecxz
in
fnsave
sbb
mov
sub
rcr
gs
jae
out
pop
fsts
adc
mov
add
and
ss
cmc
jge
pop
imul
aam
ds
clc
notl
addb
addr16
aam
and
fnstsw
fisubrs
fistl
xchg
mov
or
shlb
cld
or
insl
cmpsb
insl
outsb
into
inc
jmp
jb
test
jne
cmp
int
negb
lea
and
add
fldenv
aas
add
fisubl
sbb
xor
inc
out
out
mov
xchg
and
sub
fwait
loopne
sbb
sbb
fs
ljmp
imul
xchg
outsb
addl
xchg
aad
and
and
loope
mov
jecxz
std
call
jge
pop
push
push
lods
jns
jmp
aas
cs
push
push
in
push
cmp
bound
cmp
adc
cld
fiaddl
and
push
mov
inc
cli
fsubl
movsb
sbbl
mov
sub
push
cmpsb
and
mov
out
jnp
stc
mov
inc
xchg
push
mov
jle
popa
les
dec
xor
clc
pop
imul
lret
outsb
dec
loopne
in
or
xor
mov
pop
jo
addr16
out
sti
ret
pop
or
ret
fbstp
push
mov
bound
pop
mov
push
push
mov
inc
and
push
lret
add
lcall
stc
mov
push
sbb
in
fcomps
add
or
outsl
push
mov
ja
into
leave
jnp
jbe
shrb
cli
aas
mov
ret
stos
lret
movsb
mov
dec
fs
test
lahf
ficomps
pop
andl
adc
add
push
jne
std
jl
movzwl
inc
sub
mov
test
cmp
nop
lcall
push
aad
sub
outsb
ret
jecxz
cmpsl
mov
add
jge
adc
loopne
jno
sbb
mov
popf
add
dec
push
pop
add
mov
xchg
pushf
mov
sub
adc
mov
pop
enter
dec
scas
fsts
lds
cs
stos
and
test
mov
pop
out
lret
enter
xchg
sahf
subb
push
je
cmp
xor
mov
push
push
sub
push
sub
adc
dec
ljmp
inc
cs
iret
lods
in
out
pop
and
inc
dec
cltd
mov
cmpl
popf
sahf
cmc
inc
pop
xchg
mov
inc
imul
adc
cwtl
jl
idivl
mov
imul
xor
out
push
ret
xorl
push
test
fsts
divl
push
in
pop
leave
pop
je
jnp
jmp
xchg
les
hlt
out
push
insl
xorl
add
fcmovu
cld
mov
add
mov
fsubr
sbb
scas
jb
andl
jae
or
loope
and
and
cld
xchg
dec
push
jnp
push
repz
pop
imul
adc
xor
mov
sub
mov
or
jns
push
mov
sub
adc
jp
lret
xchg
stos
inc
mov
imul
add
jae
mov
mov
add
xor
push
push
in
out
in
lcall
sub
jge
ret
out
orb
cs
sarb
cmp
pop
call
mov
insb
mov
mov
xor
shrl
leave
inc
test
idivb
dec
lds
shll
sbb
mov
in
mov
mov
sarl
fbstp
xor
pop
or
movsl
hlt
bound
mov
loop
dec
das
aam
push
popf
scas
add
mov
out
repz
ja
ss
push
or
arpl
sahf
mov
mov
stos
xchg
in
adc
push
call
stos
pop
andl
int3
push
jmp
and
push
mov
loop
out
arpl
cmpsb
mov
jp
inc
jb
adc
sti
sbb
push
stos
dec
xchg
dec
inc
scas
dec
jge
repz
popf
dec
xlat
clc
ds
push
les
add
mov
xchg
in
adc
pop
mov
jg
cmp
outsl
pop
add
enter
repnz
dec
add
sub
js
lock
mov
push
shll
es
decl
ds
rol
imul
or
cld
sbb
loopne
addr16
and
arpl
cmpsl
test
fwait
inc
sbb
pop
aas
int3
and
adc
add
mov
loopne
test
fwait
mov
dec
dec
jbe
insl
and
sar
jp
insl
icebp
xor
scas
daa
imul
pop
popf
jmp
cmp
neg
scas
xor
add
or
mov
lods
xchg
je
and
fdivrl
jmp
jno
mov
lods
xchg
call
rclb
outsb
mov
inc
mov
dec
sub
in
xor
jo
lahf
test
mov
jg
out
pop
xor
inc
lods
cwtl
add
mov
mov
out
scas
ret
fwait
cmp
mov
add
mov
inc
mov
gs
push
in
xchg
lcall
inc
push
je
push
hlt
mov
dec
add
mov
push
cmp
xor
push
dec
data16
ja
xor
aad
int3
pop
mov
add
pop
mov
push
loope
xor
cltd
ljmp
lcall
and
push
adc
and
mov
add
add
fs
scas
test
jae
imul
and
mov
repz
xor
adc
icebp
ds
shrl
jmp
push
ret
push
sub
sub
std
scas
arpl
imul
jl
loope
loop
xor
mov
mov
test
jl
add
push
enter
sarl
xchg
lea
xchg
and
insb
xlat
xor
ja
fildll
and
pop
les
mov
dec
ss
in
cmp
add
push
sti
jle
lea
xchg
lods
pop
je
sahf
and
xchg
sbb
mov
cmp
jmp
pop
push
adc
sarb
add
dec
cwtl
sti
dec
out
jmp
inc
pop
xchg
in
bound
push
xchg
pop
or
insl
call
pop
ds
jmp
ret
cmpsl
mov
jle
mul
out
in
mov
mov
sub
in
cmp
aad
add
or
sarl
and
dec
ds
and
cld
adc
popf
es
dec
bnd
mov
jle
fcomip
xorb
jl
sbb
pop
ja
dec
movsl
adc
and
xchg
sti
xor
fwait
xchg
push
lds
add
sti
fildl
sbb
dec
mov
repnz
and
xor
push
xor
pop
popa
lods
lret
pusha
lea
add
sub
loop
push
mov
cltd
mov
lods
shrl
dec
xor
nop
pop
jmp
add
xor
adc
mov
jns
loop
xor
xchg
sub
loope
and
fsincos
insl
mov
imull
sar
push
je
cli
mov
cltd
cmpsl
xchg
into
ret
adc
call
fptan
hlt
lock
lds
stos
mov
pop
dec
pop
lock
rol
cmpsb
jbe
cld
push
dec
out
pop
and
ja
lcall
and
cmp
mov
sbb
sahf
inc
cmp
inc
cwtl
or
imul
cltd
jmp
clc
daa
shlb
mov
jecxz
add
imul
sbb
mov
add
sbb
sbb
in
jecxz
mov
sub
dec
mov
shl
xlat
push
in
inc
sub
adc
and
mov
aaa
loopne
push
popa
sub
or
sub
fsts
iret
enter
dec
cmp
sbb
cmp
or
mov
stos
jecxz,pn
dec
mov
pushf
inc
inc
gs
imul
sbb
leave
ljmp
int
push
jecxz
int3
mov
arpl
leave
cmp
mov
pop
pop
add
dec
mov
imul
or
es
nop
cmpsb
xchg
xchg
lret
int
mov
lock
inc
hlt
cltd
mov
imul
jl
test
ret
or
mov
data16
iret
and
stos
push
lods
popa
dec
xchg
test
stos
push
xchg
xchg
pop
je
test
fwait
nop
jmp
fistps
notl
sub
std
dec
mov
clc
fcmovnb
enter
xchg
mov
cld
repz
je
jmp
push
pop
stc
mov
adc
xchg
adc
mov
or
mov
dec
lods
dec
call
jne
das
mov
dec
lcall
jb
mov
mov
and
outsb
imul
xchg
mov
xchg
or
add
xor
cltd
cmp
cwtl
loopne
cli
jae
enter
jns
lahf
push
or
push
ret
pop
loopne
std
aam
in
pop
ljmp
stos
mov
aam
repz
sti
mov
dec
or
mov
out
xchg
repz
inc
sbb
fiaddl
cmp
mov
inc
into
sbbl
add
rcll
push
adc
xor
jg
popf
bound
sub
mov
into
cwtl
mov
or
hlt
adc
push
ss
mov
xor
aas
fwait
pop
mov
jae
add
sbb
into
push
in
popa
lcall
fdivrl
fbstp
lahf
in
push
xor
and
sub
rolb
xor
inc
test
scas
sub
std
mov
stos
mov
push
dec
mov
subl
es
adc
push
ja
inc
das
pop
sub
mov
movsl
loope
xchg
and
jo
jnp
loopne
daa
loopne
xchg
dec
mov
xchg
mov
xor
fdivl
push
sbb
push
or
jno
jno
inc
js
push
pop
xor
inc
push
jmp
adc
add
mov
pextrw
push
mov
push
lahf
imul
mov
loop
fiadds
loop
sub
cs
jbe
mov
scas
or
popa
sub
fstpl
cmc
nop
xchg
jecxz
and
and
sub
outsl
ja
jo
mov
inc
mov
outsl
call
cmc
push
test
or
sbb
stos
lods
enter
sub
push
cmpsb
ret
in
decl
pop
sahf
fcomp
cmp
fsubrl
std
cltd
sbb
sarb
loopne
or
mov
jo
mov
add
jg
cmpb
pushf
stc
lahf
out
insl
test
ss
fldcw
divl
int
mov
cmc
mov
rclb
jmp
sub
popw
or
loopne
rol
dec
dec
adc
fucomi
cmp
imul
xor
test
push
mov
dec
push
mov
sti
repz
out
jp
lahf
and
test
xchg
jbe
aam
in
push
mov
and
cmp
sti
adc
hlt
cltd
into
add
pop
xchg
data16
cmp
jnp
xchg
sbb
outsl
test
popf
xlat
cmp
in
adc
adc
sti
daa
lock
mov
adc
xchg
mov
push
shrl
pop
bound
push
pusha
out
jae
push
ja
sub
enter
cmc
ljmp
add
subl
lods
pop
hlt
leave
push
jle
ss
or
sbb
sub
and
popa
ja
outsl
lret
xchg
loop
mov
test
rolb
pop
push
frstor
clc
int
call
cmp
xlat
mov
and
in
ds
xchg
fadds
fwait
sub
mov
in
sub
mov
sbb
dec
sub
xor
icebp
inc
mov
aaa
addr16
xorb
jle
int3
or
xor
sub
jno
and
sub
or
jl
fwait
xor
outsb
push
mov
gs
int
dec
add
repz
sub
into
sbb
mov
inc
inc
daa
pop
xchg
ret
or
or
leave
add
aaa
repz
sub
cmpsb
lods
stc
sbbb
mov
mov
mov
cmp
inc
lcall
pop
test
mov
icebp
fidivl
mov
or
cmpb
xchg
cltd
outsl
lds
stos
jp
jmp
rcrb
int3
stos
lock
adc
ds
xor
dec
cmp
rorb
or
sub
int3
mov
lods
leave
mov
jae
jge
add
xlat
movsl
call
mull
and
dec
pop
ficompl
icebp
std
mov
inc
scas
pushf
hlt
fnsave
cltd
adc
sbb
push
in
cmc
mov
icebp
movsl
pop
jg
add
shll
stc
push
pop
dec
jmp
push
pop
testb
and
cmpsl
dec
jg
cmp
jns
xchg
xchg
in
cs
and
cmp
sysexit
sub
sbb
cmpb
ss
pop
repz
pop
bound
insl
xchg
out
andl
lret
test
mov
cmp
scas
push
es
mov
aaa
or
push
adc
addr16
inc
mov
movsl
rcl
sbb
lods
pop
lods
repnz
pusha
lret
aad
pop
fdivl
inc
inc
mov
inc
aam
mov
mov
insb
scas
jne
je
popa
arpl
mov
cltd
mov
and
adc
aas
loope
test
mov
imul
cmp
scas
fwait
jmp
xor
adc
mov
add
nop
or
xor
fisttpl
xchg
xchg
pop
dec
sub
xchg
imul
pop
adcl
mov
das
jns
xchg
dec
push
xlat
sti
push
mov
mov
pusha
push
fsubl
fsubr
bound
mov
idivl
xchg
lds
mov
fwait
cmp
rorb
pop
leave
test
pushf
mov
pop
xor
pop
mov
pop
mov
fwait
adc
mov
mov
fstl
mov
dec
inc
fldl
in
xchg
pop
mov
ja
les
stos
cmc
enter
push
shll
mov
push
mov
xor
in
mov
in
nop
iret
xchg
xor
adc
movsl
cld
mov
pop
out
dec
xchg
push
sti
mov
jl
ficoml
call
sahf
mov
movsb
divb
pushl
sub
mov
das
or
dec
mov
addr16
mov
xchg
inc
adc
dec
jl
mov
cmp
or
push
xbegin
aad
pop
pop
or
sbb
fstps
outsl
pop
cli
ret
popf
ljmp
pop
push
lods
push
ds
dec
call
out
shrl
inc
cmpsb
pop
pop
lods
xchg
mov
jp
lahf
movsl
inc
mov
xor
aam
pusha
mov
push
xlat
ss
push
xor
aas
lods
mov
adc
mov
mov
nop
jle
mov
leave
out
or
mov
cmp
scas
sub
insb
out
test
jp
push
push
addl
aas
stos
pop
adc
das
popf
and
test
mov
popa
add
pop
loop
or
es
test
loop
testl
cmp
jge
mov
sbbl
mov
adc
jo
sbb
adc
jb
adc
add
loopne
loopne
scas
cli
dec
out
push
in
jb
and
jns
das
mov
dec
mov
jns
popa
lods
sti
sub
or
dec
jg
dec
mov
push
jns
subl
adc
push
inc
xor
enter
xlat
jne
mov
call
adc
imul
pop
insb
in
pop
lret
enter
cmp
cmp
sub
pop
push
and
jp
clc
ret
lret
jae
int3
dec
add
pushf
movsl
push
push
inc
imul
jmp
xor
sbb
xor
lret
insl
xchg
xor
or
sbb
cmp
lods
dec
adc
xor
push
push
scas
adc
mull
mov
popa
sahf
jne
push
add
jbe
push
std
int
notb
int3
test
mov
cwtl
rcll
sub
sub
sahf
cmpsl
std
sub
sbb
cmc
and
xchg
sbb
cmpsb
in
and
scas
stc
xchg
mov
xchg
cmp
bound
aad
shr
popf
cmp
pop
or
loopne
scas
sahf
fs
add
adc
sub
cmpsl
mov
int3
lea
mov
xor
push
xchg
adc
push
nop
out
dec
mov
and
pop
arpl
mov
popa
repnz
inc
in
js
std
xor
daa
push
loopne
out
dec
test
cmp
push
push
push
out
push
popa
les
ret
ss
push
xor
and
dec
mov
std
std
or
icebp
scas
and
adc
loopne
xchg
or
ja
mov
sti
mov
sbb
or
cmp
jo
jb
push
lea
inc
cmpsl
pop
pop
mov
pop
mov
sbb
out
sbb
in
pop
jne
jg
push
adc
mov
dec
xor
idiv
clc
rorb
xor
xor
inc
lock
adc
ret
nop
inc
mov
int
ljmp
xchg
ss
pop
js
mov
aad
xchg
mov
add
xlat
in
call
dec
mov
add
subl
cmp
test
hlt
mov
mov
jge
xchg
or
jecxz
mov
push
cmp
sub
out
test
test
dec
lea
sahf
adc
out
cmp
lret
mov
lret
push
mull
scas
insb
lock
nop
push
jne
jae
or
ss
outsb
aas
xor
jmp
inc
out
lods
data16
mov
pop
iret
inc
adc
xlat
cmp
lahf
jb
and
fistps
out
dec
clts
pushf
sub
jle
in
mov
mov
lret
cmp
std
movsb
adc
sub
mov
pop
jne
test
mov
movsb
movsb
sbb
aad
adc
fsts
xchg
xchg
cwtl
outsl
jp
pop
xchg
sub
cmp
mov
push
adcl
out
or
cmpl
xchg
and
jge
push
inc
in
add
or
inc
imull
xchg
bnd
jp
roll
cld
sbb
push
mov
mov
push
imul
pop
lods
fwait
xor
adc
pushf
cli
int
mov
mov
xchg
loope
inc
fdivs
sub
inc
inc
aaa
xlat
jp
aas
mov
push
mov
arpl
sbb
cmp
addl
decl
jp
mov
aad
je
sti
sti
mov
jle
pop
inc
sub
cmp
ja
pusha
xor
cld
loope
xor
sahf
mov
or
inc
inc
insb
pop
xlat
push
sbb
ds
je
push
or
mov
jmp
jp
rolb
aad
mov
notl
mov
xor
mov
inc
mov
idivb
testb
or
inc
push
mov
mov
lock
jns
cwtl
push
push
push
cmpsl
mov
jmp
mov
ficoms
dec
pop
hlt
repnz
xchg
pop
jmp
add
push
pop
push
sbb
sub
aaa
pop
cmp
push
fists
xchg
mov
jno
xor
mov
pop
mov
pusha
xlat
xor
sub
push
popl
push
pop
icebp
push
pop
pop
jb
sub
adc
mov
cmpl
fisubs
lods
xchg
cmp
flds
lcall
out
aad
lret
out
and
jp
pop
out
push
fisubrl
push
mov
mov
int
add
lea
enter
pop
and
mov
ret
ljmp
divl
inc
mov
lcall
cwtl
jo
mov
lcall
repnz
hlt
cld
out
cmp
jg
ds
mov
outsb
rcrl
rcll
ja
pop
lods
loopw
sarl
popf
pop
fadds
leave
sbb
cmp
dec
adc
loope
mov
xchg
mov
outsb
fs
das
addr16
sub
out
cmp
outsb
mov
das
xlat
arpl
adc
and
bnd
pop
cmpsl
mov
cwtl
inc
mov
arpl
or
xor
mov
sub
cs
fidivrl
pop
lahf
adc
push
mul
jge
mov
lcall
hlt
add
movb
jge
or
lcall
dec
repz
pop
mov
iret
pop
dec
xor
cltd
fisubrl
shr
cmpsb
push
out
mov
adc
adc
or
test
dec
or
mov
rcrl
pushl
mov
cmp
addr16
lret
pop
sbb
jnp
cli
push
jg
call
lcall
out
cmp
push
lcall
cmp
test
xor
sub
jge,pn
dec
pop
and
fstpt
rol
sub
jecxz
mov
and
stos
dec
imul
jle
sbb
cmp
push
fyl2xp1
inc
decl
jns
jnp
cmp
lret
loopne
cwtl
pop
scas
mov
int
sbb
arpl
xchg
dec
lods
ds
fcomp
mov
sub
mov
rcrl
cmp
or
push
pop
or
sbb
jg
fsub
push
cmp
cltd
pop
xchg
adc
lods
xor
scas
xchg
les
fsub
inc
inc
cmp
inc
pop
fistpl
scas
and
mov
xchg
loop
icebp
int
dec
into
fbstp
inc
sub
and
ljmp
or
enter
fstl
sbb
lds
sub
and
sbb
rolb
pop
aad
mov
ss
arpl
shrl
scas
sbb
ljmp
imul
outsb
mov
scas
clc
xor
adc
mov
sbb
jmp
leave
mov
call
mov
add
repz
repnz
insl
sub
mov
mov
lcall
mov
adcl
mov
mov
inc
stos
int3
rol
pop
adc
in
mov
je
push
jbe
sbb
int3
mov
push
mov
out
push
mov
cmp
es
mov
mov
shlb
lret
mov
add
add
cmpsb
pop
fwait
jnp
lds
xchg
mov
inc
lret
lret
dec
push
dec
push
push
movsb
inc
pop
mov
xor
push
in
inc
fcomps
cmp
adc
icebp
jecxz
dec
xchg
orb
sub
sbb
add
leave
xor
cmpsl
lret
pop
mov
lock
dec
into
bound
and
mov
aaa
mov
inc
xchg
jb
fnstcw
push
scas
jle
sbb
faddl
sub
inc
xchg
in
repnz
xor
pop
cmp
push
lock
push
shrl
testl
mov
inc
pop
mov
mov
scas
imul
and
cmpsl
fisttpl
sbb
sbb
dec
mov
int
sub
daa
cmpsl
sti
fstpl
or
mov
hlt
hlt
aam
cld
sbb
mov
notl
test
clc
popf
cmp
push
and
scas
mov
xor
add
sbb
inc
or
insb
ret
popa
ds
hlt
sbb
jb
out
psrlq
pop
imull
out
je
dec
xchg
call
rcrb
inc
push
mov
test
test
adc
test
push
mov
jne
sub
int3
movsl
fcmovu
mov
xchg
popa
sub
mov
out
adc
fistl
stc
std
movsb
dec
lods
js
fwait
decl
js
adc
push
stc
ret
imul
jno
and
fsubr
xor
add
jno
sub
add
and
iret
dec
jno
test
cwtl
lock
xchg
mov
cmp
jmp
lcall
mov
mov
data16
flds
ja
jmp
push
pushf
ljmp
cld
fwait
xor
pop
dec
xor
pop
jae
cli
out
jns
mov
inc
mov
jg
ds
shr
sbbl
jp
gs
icebp
or
pop
js
adc
adc
in
shlb
push
ja
inc
and
lods
repz
stos
xor
repz
repnz
push
push
xchg
sbb
fists
nop
imul
pop
or
push
sub
les
jecxz
pop
mov
std
pop
dec
rcr
lods
xor
flds
inc
mov
iret
mov
aaa
fcomi
in
arpl
mov
push
sar
fists
fwait
jp
clc
in
add
fistl
xorb
xor
push
roll
xchg
sbb
cwtl
mov
bound
mov
jbe
scas
mov
dec
stc
call
mov
push
popf
push
scas
repz
mov
cmp
sbb
iret
cmp
xchg
sbb
adc
ficoml
push
pop
inc
sub
push
pop
popa
inc
repnz
dec
inc
inc
int
sub
dec
ror
pop
jmp
mov
jo
adc
pop
and
pop
xlat
fwait
pushf
int3
orb
pop
dec
sbb
pop
inc
mov
repz
sbb
out
sub
sbb
imull
aaa
jne
xchg
cmp
lods
loopne
xchg
xchg
pop
jo
sub
push
gs
jl
test
mov
fmuls
mov
lock
clc
lahf
sahf
push
inc
std
sbb
xchg
sar
dec
je
std
ja
or
cltd
scas
inc
mov
push
xchg
mov
rol
push
mov
dec
xor
xor
into
pop
ret
xor
rcll
inc
or
jmp
scas
jae
xchg
int3
jmp
pop
push
es
ret
pop
mov
pop
push
mov
fbld
scas
jns
mov
mov
adc
fs
in
imul
stos
stos
add
mov
jle
cmp
popa
stc
std
jmp
ret
push
sbb
jge
mov
icebp
or
leave
test
pop
ret
xchg
inc
pop
jge
jae
scas
or
pop
jb
adc
or
pop
leave
mov
sub
hlt
mov
push
xor
aam
add
inc
rcrb
xchg
js
in
ret
insl
xchg
loop
and
std
imul
lret
in
mov
movsb
push
mov
dec
es
cli
push
and
mov
or
add
jno
push
ss
dec
jecxz
gs
push
getsec
rorl
stos
xchg
out
or
insl
sub
fbstp
dec
pop
lret
sbb
jle
sbb
movsb
adc
movntps
cmp
or
sbb
add
mov
mov
pop
xor
jl
in
jns
addr16
or
clc
pop
orl
je
movsl
and
xor
jae
mov
jb
mov
xor
fmul
mov
scas
xor
cli
add
lcall
push
push
fisttps
sbb
xchg
cmp
inc
insl
les
shrl
std
je
mov
loope
lcall
in
mov
xor
sahf
push
fs
inc
cwtl
jp
jno
inc
in
add
lock
add
clc
cli
adc
xchg
mov
das
insl
push
mov
jbe
sbb
push
stc
sbb
or
xor
xchg
push
mov
les
pop
cltd
pop
sub
mov
adc
scas
enter
add
xlat
xchg
inc
cmpsb
dec
adc
jmp
lock
nop
inc
mov
test
lahf
inc
push
push
dec
jge
movsl
xchg
call
pusha
pop
bound
pop
xchg
leave
repnz
in
test
out
dec
or
and
in
clc
add
nop
xor
cmp
into
adc
in
stc
mov
jbe
mov
pop
fbld
imul
lret
rcll
out
test
jecxz
aas
xor
and
pop
sbb
vprotd
test
lods
stc
jge
ffreep
nop
xor
mov
shr
jmp
jmp
cmp
repnz
push
mov
sahf
jmp
dec
inc
adc
pop
mov
xchg
mov
and
xor
lcall
repnz
or
xchg
mov
inc
or
mov
xchg
clc
addb
xchg
cmpsb
inc
dec
xchg
das
adc
fistpll
ds
insb
out
pop
lahf
xlat
js
gs
data16
jecxz
mov
leave
cmp
mov
pop
lcall
popa
popa
fisttpll
test
xor
mov
and
das
stc
or
dec
sub
and
cmp
js
addr16
bound
ss
add
mov
pop
mov
pop
dec
in
std
xchg
rolb
xchg
push
lds
imul
xorl
xchg
mov
or
popa
pop
add
orl
and
jl
jns
ret
int3
jno
pop
mov
aas
ss
xor
or
test
pop
push
cmc
jl
push
scas
pop
xchg
cmp
pushf
cmp
and
or
ja
test
movsb
jp
aas
test
bound
sub
pop
xchg
sahf
outsb
adc
jge
pop
out
pop
jo
pop
mov
dec
cmp
inc
mov
xchg
mov
lahf
int3
imul
test
out
ljmp
test
inc
add
fsubrp
or
adcb
mov
fstl
xor
inc
pop
pop
dec
cmp
pop
xor
out
fstpt
movsb
outsb
pusha
mov
mov
scas
je
and
in
sub
cmpsb
cmc
stos
sti
in
mov
fs
dec
sub
pop
imul
inc
pop
fdivrs
push
dec
or
inc
mov
test
jl
xor
fbstp
stc
add
sub
ds
rolb
iret
push
or
fidivl
gs
cs
jle
sti
mov
xchg
inc
mov
jecxz
fsts
mov
int3
mov
mov
in
jnp
stos
sbb
xchg
cmp
sahf
cmp
xlat
jg
ds
hlt
dec
in
ret
pop
sub
imul
pop
sub
gs
cmpsl
sti
dec
or
mov
arpl
ss
mov
push
mov
lcall
cwtl
dec
imul
mov
insl
sbb
out
jg
mov
adc
inc
aad
pop
xor
in
pop
sbb
adc
popa
add
dec
jns
jno
push
out
xchg
popf
cmp
mov
inc
rcr
add
es
jle
sub
hlt
cmpsl
lods
push
dec
orb
push
xor
enter
data16
and
rcrl
xor
mov
aaa
push
sarb
testb
jae
dec
pop
jle
and
fsubrl
pop
xchg
dec
xchg
jecxz
lahf
cmp
sahf
xchg
mov
cmp
push
mov
push
inc
fldt
xor
nop
enter
mov
mov
mov
divb
rolb
popf
jne
xchg
lcall
int
jle
mov
dec
jbe
fldt
xor
into
xor
adc
out
adc
lcall
jmp
fsubr
xchg
inc
sub
push
xor
pushf
cmp
add
fsubrl
mov
fsubs
lret
outsl
adc
push
pop
or
dec
aam
stc
inc
out
aaa
push
cs
daa
dec
cmp
leave
pop
push
ret
out
in
add
into
inc
into
xor
repz
push
cmc
jo
mov
lcall
and
sarl
lahf
dec
ret
int
lcall
dec
mov
xchg
fldenv
and
jno
dec
into
outsl
sti
xchg
iret
push
add
test
jno
fmulp
add
ds
push
rorl
or
lcall
filds
xor
ds
push
rcrb
in
cmp
cmpb
adc
mov
and
repnz
mov
lahf
cltd
arpl
push
mov
test
mov
ficoml
call
adc
push
pop
nop
jge
mov
out
popa
popa
or
pop
call
cs
shr
push
fnstenv
dec
inc
xchg
sub
shll
mov
sahf
rcrb
iret
mov
js
jl
cltd
rorl
repnz
inc
add
xor
jne
lahf
or
scas
pop
popa
dec
outsb
test
sub
cli
fidivrl
xor
pop
push
push
frstors
xchg
cmpsl
aad
jg
daa
orb
clc
and
push
mov
into
fistpl
jns
imul
cmp
packuswb
pop
dec
out
jle
mov
sbb
enter
outsl
mov
fwait
mov
cli
and
add
lret
scas
testl
push
negb
mov
inc
mov
sbb
pop
mov
loop
fstl
or
mov
mov
cwtl
ljmp
lds
stc
scas
imul
stc
jae
imul
int
cs
dec
mov
push
loop
or
imul
fdivs
fldenv
scas
cmp
jp
mov
in
mov
cs
or
jmp
leave
mov
sbb
stos
pop
clc
stos
mov
popa
outsl
mov
pop
bound
sbb
inc
or
insb
test
iret
movsb
scas
xchg
cli
scas
sbb
scas
cld
nop
or
out
mov
clc
sub
fcmovne
cwtl
aaa
aaa
sub
jae
rclb
push
subb
push
mov
ret
and
cmp
pop
movsb
movsl
dec
stos
cli
pop
mov
rolb
or
mov
add
xchg
fisttpll
ds
jg
and
mov
cmp
sarl
push
push
ss
stc
and
pop
kxnorw
das
inc
pop
cmc
adc
push
es
mov
pop
enter
or
cmp
xor
jle
rorb
icebp
imul
rolb
cmp
insb
xchg
pushl
and
or
scas
cli
in
fs
les
inc
or
pop
push
aas
inc
add
pushw
lret
test
dec
gs
pop
scas
or
scas
push
ds
mov
les
adcb
sub
orb
cltd
out
idivb
dec
and
test
int3
lcall
data16
pop
lea
push
mov
cmp
dec
push
sbb
inc
mov
mov
cwtl
icebp
cmpsl
ret
xor
mov
leave
mov
addr16
sub
rcl
shrl
and
inc
jmp
fwait
pop
push
sbb
out
push
add
or
xchg
cmc
arpl
shl
xchg
pop
push
mov
push
daa
xor
test
and
js
xor
scas
mov
les
add
shl
lods
test
in
jge
push
cltd
add
lea
jns
fdivrs
dec
xchg
enter
das
push
inc
and
test
cmp
jb
sahf
and
jbe
cmpsb
loope
imul
lods
adc
push
mov
jecxz
xor
inc
xor
jl
repnz
pushf
rcr
rorb
insl
push
xor
arpl
mov
call
sbb
mov
lret
das
int3
cmpsl
pop
ljmp
pop
scas
or
fldenv
add
xchg
gs
push
xor
je
jg
in
sahf
das
out
mov
add
insl
mov
xchg
lds
mov
inc
mov
and
xchg
insb
loopne
push
fstp
add
inc
js
insb
xchg
or
popa
inc
push
loop
ds
add
mov
adc
fldcw
into
int3
testl
fwait
adc
idivb
adc
shl
inc
movsl
and
xchg
jne
inc
les
inc
xchg
cwtl
orb
or
cmp
out
call
aas
scas
ja
test
sti
jo
mov
push
ret
xchg
mov
lahf
mov
cli
xchg
sub
jae
test
lods
outsb
test
out
inc
arpl
bound
dec
xchg
test
mov
aaa
jge
adc
add
enter
or
lock
fstps
xor
insl
pushf
int
popa
mov
dec
icebp
xchg
adc
loopne
and
xchg
jp
push
add
hlt
xlat
sbb
and
in
pusha
pop
push
jne
inc
divb
jno
outsb
int3
pop
inc
xor
sbb
jmp
dec
xchg
inc
push
jl
scas
inc
faddl
fdivrl
xor
lcall
lds
cld
mov
outsb
ss
fisttpll
addr16
xor
add
xchg
mov
mov
jnp
repnz
movsb
test
in
fstps
cli
lret
in
mov
rcrl
ficoml
xchg
jl
repnz
notl
pop
sub
pop
cmpsl
rorl
daa
imul
mov
jno
mov
inc
lods
fdiv
ja
sub
inc
jno
mov
mov
mov
in
mov
ja
sub
sub
insl
sub
inc
lds
aas
imul
jmp
imul
xor
stos
sbb
and
jb
cltd
jecxz,pt
testb
pop
mov
ss
mov
xor
pusha
push
call
jns
add
mov
sbb
cli
xchg
jne
repnz
and
and
movsb
fisubrs
movsb
fcompl
mov
rorb
sarl
lret
or
sbb
dec
cltd
cwtl
mov
popa
lock
inc
mov
jno
push
lcall
imul
jb
xchg
pop
adc
inc
xchg
adc
repnz
loop
dec
lock
pop
mov
loopne
cltd
daa
ljmp
fsubrs
jl
xchg
cmp
lret
sbb
xor
je
cmp
jbe
add
mov
iret
je
jg
sub
sbbl
orb
inc
jge
in
stos
mov
sub
pop
stc
add
pop
inc
sbb
sub
push
sub
je
xor
sbb
pop
ficoml
mov
enter
mov
mov
lock
jecxz
or
push
into
push
mov
add
mov
pop
pop
push
cmp
mov
sbb
mov
lret
jb
mov
loop
sub
push
js
ror
loopne
sub
mov
stos
inc
dec
sub
mov
sbb
loopne
pop
push
enter
fs
scas
movsl
mov
and
dec
test
add
pop
xor
ja
scas
nop
loope
cmp
jmp
push
push
data16
jo
or
in
or
push
cmp
jle
dec
inc
out
sub
ss
cli
jg
lret
imul
sub
inc
mov
movsl
aas
mov
imul
mov
repz
jl
lret
pop
inc
aad
sub
adc
mov
inc
xor
mov
popf
in
mov
sbb
loope
cmp
ljmp
push
or
xchg
mov
jbe
cltd
or
mov
daa
hlt
adc
or
mov
fcoms
mov
pop
fs
outsb
jle
sub
push
stos
xchg
daa
dec
cld
jecxz
and
fistl
pop
ss
incb
add
xchg
mov
push
mov
je
xchg
or
jle
dec
push
mov
jecxz
clc
filds
lret
sarl
jb
enter
shrl
sar
pop
adc
popf
sub
xchg
or
imull
push
cld
pop
push
loope
mov
or
inc
mov
fs
and
jg
nop
lds
and
daa
stos
inc
daa
test
xchg
sub
hlt
fimuls
ja
mov
sub
in
rcrl
add
cmp
clc
xchg
das
or
inc
icebp
push
popa
fisubl
adc
aaa
adc
leave
pop
cld
mov
dec
fbld
lcall
cmp
cmp
pop
hlt
sub
sbb
shrb
aas
cltd
adc
cwtl
xor
rorb
sub
sbb
iret
mov
dec
push
jbe
sub
lds
inc
jno
cltd
and
in
dec
addr16
jbe
mov
sahf
inc
pop
je
pop
gs
ja
scas
jmp
push
or
xchg
xchg
fbld
fidivrs
pop
lret
adc
mov
stos
pop
iret
push
push
cltd
jmp
movsl
add
push
lret
jl
mov
lahf
cmp
pop
jne
mov
incb
scas
nop
aam
mov
mov
or
lods
jmp
push
and
and
xchg
dec
jp
mov
stc
or
dec
mov
inc
mov
repnz
out
sub
dec
sub
pushf
test
add
outsb
mov
lahf
mov
popa
cmc
xchg
add
fldt
js
mov
roll
push
jnp
sbb
imul
sbb
jns
lods
insb
xor
aas
jge
push
fidivrl
sahf
xchg
cmpsb
mov
xchg
jg
pop
nop
mov
push
add
mov
mov
adc
mov
in
rcl
stc
ret
jnp
or
mov
push
inc
fisttps
addb
pusha
shrl
xor
mov
test
xor
out
or
sbb
rolb
pop
imull
xchg
push
repz
outsl
cltd
repz
decb
or
cmp
xchg
stos
gs
pop
xchg
fidivl
or
and
rcll
pop
mov
nop
xor
adc
rcrl
jnp
imul
rolb
out
nop
cmp
xor
test
mulps
jbe
adc
xchg
fstpt
mov
fcompl
add
fwait
or
dec
je
into
sbb
lds
mov
loop
cmp
cli
pop
xor
adc
mov
loop
jecxz
scas
inc
out
test
test
adc
mov
out
jmp
jns
sub
xlat
jmp
aas
sbb
mov
ret
jp
adc
sbb
fdivr
std
xchg
shll
test
mov
dec
subb
in
pop
push
test
mov
push
movsl
or
push
hlt
dec
jecxz
lods
jmp
push
decb
pop
xor
movb
les
lods
in
popl
sbb
sbb
pop
test
cwtl
and
xchg
popa
cmpl
lret
or
stos
in
push
jo
push
aas
fcompl
jp
testl
roll
and
mov
push
imull
cmp
sbb
stos
sbb
frstor
fs
xor
and
mov
test
out
jp
mov
inc
dec
lods
add
stos
imul
fwait
lret
outsl
int3
data16
icebp
sub
sub
cmp
mov
popf
dec
lods
aad
mov
ds
ljmp
xchg
pop
call
shlb
in
mov
ret
pushf
or
ds
ret
das
push
mov
lea
and
lea
ljmp
mov
dec
rclb
pop
mov
outsb
push
and
push
aad
cmp
jne
mov
fildl
pop
jae
clc
leave
push
pmulhw
xor
loope
scas
mov
dec
out
mov
popa
lcall
mov
repz
clc
push
mov
test
scas
and
and
sti
mov
xchg
sarb
mov
pop
mov
or
push
mov
cmp
xchg
push
add
roll
fidivrs
cld
in
fidivrs
jge
jl
repz
inc
or
xor
fmul
into
sti
push
out
cmpsl
stc
out
mov
je
xchg
cmp
and
jmp
in
rolb
dec
dec
inc
add
or
mov
loope
and
pinsrw
sbb
pop
push
pop
aaa
cmp
pop
fwait
lds
adc
jmp
arpl
inc
iret
jp
mov
or
call
sbb
adc
jg
sbb
shll
dec
je
shlb
push
lcall
jp
sub
lods
sbb
sbb
or
sub
movups
push
inc
sbb
fdivs
pop
sub
cmp
adc
xchg
pusha
push
sub
stc
jo
clc
sbb
icebp
je
xchg
out
mov
dec
inc
dec
andl
ret
xchg
push
push
mov
inc
data16
pop
icebp
je
and
xor
rorb
sub
inc
push
and
fs
les
leave
stos
test
and
mov
adc
cmp
mov
pop
lret
movsl
loop
jg
inc
sbb
jle
lret
mov
jns
xchg
rolb
or
pushf
stos
and
ds
xorl
mov
dec
sbb
jl
sbb
lods
sub
imul
sub
mov
outsb
dec
es
push
sub
sbb
mov
test
add
inc
clc
cmpsl
out
push
adc
xchg
cmc
push
adc
xorb
inc
das
jne
and
movsb
cmpsl
in
jns
aas
sub
cmp
and
pop
sbb
arpl
push
mov
sbb
iret
hlt
bound
pop
mulb
xchg
pushf
push
mov
outsl
inc
xor
xor
cmp
lock
sub
ja
popa
lret
leave
mov
mov
imul
fisttpll
mov
cltd
xchg
popf
nop
inc
sti
fwait
adc
testl
push
fsts
pop
mov
fnstsw
test
shr
and
xabort
outsl
subl
jg
dec
lret
jne
jge
lock
pop
aam
jg
push
mov
loope
and
cmp
inc
mov
mov
notb
dec
or
shll
push
or
mov
inc
sbb
add
cmp
and
or
pop
adc
or
sub
mov
roll
cwtl
fnsetpm(287
mov
xchg
nop
popf
or
ja
inc
shll
das
cltd
sub
or
nop
lret
std
xchg
movsb
xchg
rep
sub
sbb
pop
cltd
adc
cmp
scas
mov
add
fdivrs
ret
pop
jp
or
and
decl
in
lahf
mov
pop
adc
sbb
cmpsl
add
repnz
int3
sbb
push
lahf
sti
scas
mov
xchg
mov
sbb
fcompl
fstps
loopne
mov
je
ja
push
push
lret
push
adc
lock
and
pop
pop
sbb
dec
orl
cmpb
cmp
and
cmpsb
movsb
mov
mov
push
sub
enter
in
inc
dec
or
adc
xor
and
out
rol
xchg
jbe
fistl
jbe
sub
xlat
add
mov
fwait
xlat
xchg
scas
lahf
fisttps
sub
dec
ror
or
jl
js
or
sub
sbb
push
ja
mov
mov
cmpsl
outsb
cmp
loop
ja
shll
aad
mov
cmp
or
add
test
mov
xchg
mov
mov
and
aam
lods
inc
sub
jmp
mov
xchg
cmpsl
and
push
jge
pop
and
icebp
xor
clc
or
fisubs
call
xchg
ja
push
add
imul
or
sub
push
jns
dec
mov
adc
ljmp
push
fldcw
dec
xlat
push
or
pop
xor
mov
cmp
push
or
adcb
adc
cld
das
outsb
andb
dec
xor
and
push
std
mov
xchg
iret
xor
out
test
and
xchg
adc
out
cli
mov
insl
mov
fs
out
xor
int
ja
inc
inc
dec
test
mov
ds
out
push
mov
sbb
pop
loop
lds
loopne
rol
mov
jecxz
and
push
lret
lret
or
pop
in
movsw
cmpsl
stos
hlt
sub
push
std
into
cmp
lods
and
cmp
xor
adc
xlat
in
or
cli
jl
iret
es
xchg
repnz
cltd
xchg
pop
mov
mov
pop
mov
add
shr
clc
inc
rclb
mov
mul
jecxz
or
xor
outsl
add
jp
lock
in
jge
filds
mov
aaa
divb
scas
scas
pop
xchg
aam
pop
insl
out
cld
out
rcrb
inc
dec
dec
cmp
xacquire
aas
push
dec
dec
mov
cmpsl
shrb
sti
out
fidivl
cli
xchg
xor
push
mov
mov
imul
shlb
or
jecxz
fs
cltd
jo
xlat
lcall
insb
xor
or
es
mov
loop
imul
mov
inc
mov
pusha
data16
jge
mov
mov
sbb
sbb
mov
push
stos
xchg
inc
inc
divb
pushf
xchg
dec
push
mov
xor
mov
insb
cmc
aam
xor
mov
daa
repnz
pop
inc
push
addr16
and
push
cmp
shlw
stc
sbb
jecxz
sbb
xchg
mov
sbb
jg
rorl
idiv
loop
mov
adc
fdiv
out
push
cli
xchg
loop
inc
pop
lea
orb
xor
jne
popa
xor
mov
scas
nop
enter
sub
test
and
scas
jae
inc
popf
icebp
push
dec
dec
jecxz
push
xor
pop
pop
mov
jge
cmp
and
mov
out
mov
or
sub
jle
test
xrelease
and
push
in
push
in
aaa
orl
adc
shl
mov
add
jbe
add
mov
icebp
pop
and
out
mov
pop
scas
outsl
lahf
mov
xchg
aas
dec
scas
adc
inc
aas
mov
dec
add
mov
out
ljmp
xchg
xchg
xor
lahf
push
mov
rcll
or
out
mov
pop
arpl
clc
inc
dec
gs
jo
icebp
xorl
adc
out
sub
push
cmp
mov
inc
xor
mov
lea
mov
shl
decb
inc
ljmp
mov
pop
adc
dec
adc
mov
loop
lret
lret
rclb
outsb
cmp
adc
mov
rclb
mov
je
push
mov
jne
or
cmc
aad
mov
movsl
lahf
jnp
pop
jmp
xchg
inc
mov
jnp
ds
bound
leave
cmpsl
xchg
jnp
adc
mov
stc
loope
or
or
mov
pop
add
push
fwait
sbb
loop
or
clc
pop
aam
fistps
add
ret
add
mov
dec
jne
mov
adc
fwait
mov
cli
stos
enter
int
orl
cmp
xchg
xchg
jbe
lods
daa
pop
in
aas
pop
lret
xchg
and
movsb
jne
hlt
enter
out
sub
push
fiaddl
mov
lret
adc
adc
fcmovu
dec
push
pop
dec
bound
movsb
mov
xchg
idiv
add
sub
decl
push
lock
scas
mov
add
pop
int3
or
xor
xor
push
inc
in
je
notb
xor
clc
mov
stc
in
jle
mov
jae
js
les
cltd
xor
scas
xchg
mov
cwtl
inc
sbbb
and
mov
ja
sub
popa
scas
roll
cmp
loopne
mov
out
or
pusha
push
lock
ret
lods
testl
jo
lcall
cmp
or
jmp
sbb
out
cmc
test
cs
jno
cmpsb
rcrb
pop
popa
notl
inc
das
pushf
pop
dec
xchg
xor
lret
lcall
aam
mov
mov
sbb
xor
adc
addr16
bound
cli
and
repnz
jo
stos
inc
stos
lods
mov
jbe
shll
jae
div
jnp
loop
js
aaa
jp
jle
scas
push
lods
filds
push
xchg
xlat
cmp
