sbb
add
adc
or
insl
inc
addr16
popf
sar
jae
insb
mov
or
roll
push
push
add
cmp
es
movsl
lds
pop
add
orb
movsb
ds
pop
lds
out
push
push
push
push
mov
and
jge
push
aaa
xlat
mov
cmp
pop
data16
cltd
rcl
sahf
shl
adc
inc
loop
sub
sub
fxch
into
fisubs
cmp
pop
adc
dec
or
push
fwait
lea
sbb
mov
dec
mov
fs
xchg
xchg
stos
xor
jae
out
cmp
aam
sahf
loop
or
lods
sub
inc
hlt
push
or
repnz
mov
jl
cmpsb
mov
cltd
xchg
mov
add
dec
push
in
shrb
inc
rcrb
pop
fs
sbb
icebp
fwait
adc
push
mov
ljmp
adc
lret
loopne
push
pop
xchg
push
add
push
js
xchg
dec
repz
xlat
dec
fdivrs
sahf
and
enter
mov
rcrl
cmp
jmp
cmp
sub
cmp
je
add
repnz
jne
xchg
cmp
stc
lods
imul
add
jno
ja
mov
dec
into
bound
popf
bnd
and
sbb
xchg
sub
clc
sub
or
into
mov
mov
cmp
jb
fisttps
cmp
pop
dec
push
mov
push
cs
push
repz
mov
es
xor
cs
pop
movsl
jp
pop
or
fildl
cmp
and
mov
mov
gs
mov
jne
push
out
shlb
sbb
add
pop
push
pop
dec
xor
scas
cmp
icebp
cwtl
push
xchg
jbe
js
loopne
out
gs
in
fnsetpm(287
mov
mov
ljmp
mov
movsl
in
dec
push
jnp
cwtl
adc
mov
adcb
movsb
or
mov
divl
cmp
cmpsl
push
add
call
fistps
pop
notb
lahf
push
fldt
fiaddl
jle
xchg
push
lret
fld
stc
mov
fcomi
adc
or
repz
cld
testb
jae
cld
dec
bound
cmovb
inc
pop
andb
outsb
iret
data16
out
movaps
dec
jno
mov
jbe
jl
mov
inc
mov
loop
jmp
in
pop
daa
bnd
aam
inc
pop
lods
icebp
pop
sub
repnz
pop
iret
sbb
inc
mov
xor
test
movsl
addr16
xor
xchg
xchg
dec
cmpb
lea
pop
mov
idiv
ljmp
bnd
outsl
dec
inc
in
mov
cwtl
cmp
xor
stos
xor
aas
popa
lret
mov
mov
push
inc
cmp
test
mov
mov
cs
sbb
and
std
mov
jg
adc
mov
stos
fs
cwtl
push
or
or
leave
sbb
in
in
in
adc
mov
mov
scas
pushf
and
clc
xor
and
in
nop
cltd
cmpsb
mov
mov
mov
ds
fdivl
pop
jl
imul
mov
dec
xlat
mov
inc
stc
repz
int3
rcrl
rcll
into
mov
into
jb
sub
dec
test
fcmovne
inc
push
popf
or
mov
rorb
outsb
fldt
jne
xchg
pop
mov
and
push
rolb
cmc
and
in
popa
flds
lahf
push
inc
daa
es
cmp
sub
mov
xchg
jp
stos
jbe
lods
jne
in
dec
sbb
push
lds
jge
inc
insb
out
cmpsl
popf
insl
inc
add
lret
sbb
push
xor
into
ljmp
out
pop
aad
mov
dec
mov
test
ja
call
mov
cmp
mov
and
pop
fildl
jecxz
add
pusha
mov
imul
sar
mov
fistpll
cmp
jne
es
fwait
jae
lds
test
mov
and
jecxz
push
add
idiv
ljmp
jl
mov
cmp
adc
xchg
xor
je
xchg
or
outsl
push
or
jge
cmpsb
fwait
or
sub
push
adc
cmp
and
mov
fstps
and
shrb
dec
ss
arpl
popl
xchg
adc
dec
sahf
out
cwtl
test
push
dec
mov
ja
imul
imul
jbe
mov
mov
adc
test
or
js
mov
sar
lds
or
add
xor
pushf
xchg
add
lret
lahf
scas
aas
mov
push
sbb
sbb
jl
xlat
xlat
fcmovbe
pop
mov
ljmp
test
and
sub
ficompl
imul
push
dec
loop
std
cmp
leave
xchg
mov
inc
bound
mov
add
das
inc
js
shrl
stos
push
stos
cmp
mov
pop
sti
cmc
xchg
aas
pop
fldl
scas
mov
or
dec
out
mov
cmp
cli
mov
cmpl
dec
mov
jb
mov
mov
push
pop
scas
sbb
push
jecxz
fwait
cmp
mov
and
mov
das
xor
pop
jl
push
pop
jnp
cmpsb
pop
jl
mov
xor
cltd
jns
scas
nopl
jg
subb
mov
fildll
mov
push
movsb
cmc
sbb
mov
push
pushf
stos
inc
inc
loopne
jg
sub
mov
inc
inc
lret
or
es
sub
mov
out
push
out
pop
out
int
mov
fwait
cmp
xor
xor
jns
mov
inc
dec
jb
jbe
fistpll
out
in
fnsetpm(287
sub
inc
jno
dec
sub
aam
roll
test
repz
ficompl
ja
mov
mov
and
popa
pop
push
fisubrl
push
arpl
lahf
xchg
mov
push
divb
loope
mov
shl
fdivrs
lds
or
adc
fisubl
and
shlb
lds
jecxz
cmc
jne
inc
adc
and
inc
popa
inc
inc
jle
jmp
addr16
xlat
or
sub
mov
cmp
xor
inc
sub
cmp
cltd
rol
sbb
aas
cmpsb
loop
sub
lods
in
loope
cmpsl
clc
loop
cmp
pop
js
sub
lea
movsb
adc
push
ror
xchg
mov
cmpsb
jp
int3
cmp
movsl
cwtl
call
pop
idivl
push
mov
arpl
loopne
xlat
pop
lods
rcrb
jp
xchg
jae
pop
mov
sbbb
mov
or
clc
loop
cwtl
push
test
xor
lcall
cli
pop
jne
xor
and
adc
mov
add
mov
push
rcl
and
adc
pop
lea
mov
and
pushf
sti
insl
lcall
inc
ds
cs
push
cmp
scas
push
jle
jnp
fisttpl
xchg
inc
mulps
adcb
adc
dec
std
int3
inc
stc
mov
push
inc
test
aad
add
cs
int3
or
int3
loopne
fcmove
fdivl
pop
mov
push
stos
sbb
fcomps
lods
jle
dec
shlb
out
outsb
les
idiv
dec
xor
push
jnp
ficomps
scas
and
xchg
test
scas
pop
adc
bound
popf
cltd
es
push
cli
arpl
sub
loope
adc
daa
je
pop
test
sub
adc
adc
mov
sbb
in
push
mov
add
arpl
ficoms
cs
jmp
dec
push
loope
push
lret
jae
xchg
lret
xchg
ljmp
add
dec
or
aad
ror
ret
dec
mov
xor
jb
push
inc
xlat
pinsrw
mov
nop
mov
out
mov
int3
fsubrs
xchg
cs
loopne
sbb
pop
dec
mov
test
inc
call
jp
mov
sbb
mov
mov
push
push
sub
dec
addb
jno
popf
scas
lahf
ret
sbb
std
es
mov
mov
and
xor
daa
jg
and
or
add
loope
xor
jne
addb
mov
dec
movsb
incl
addr16
js
and
fldl
clc
inc
maskmovq
testl
xchg
mov
adc
xor
or
das
push
aas
pop
xor
mov
sbb
jns
pop
cwtl
push
mov
hlt
inc
mov
mov
push
mov
in
gs
mov
sbb
js
push
push
add
adc
cmp
cmc
cmp
stos
or
rcrb
xor
iret
aaa
sbb
test
pushf
bnd
ds
lock
inc
cmpsb
mov
inc
fidivl
jmp
aaa
push
add
je
pop
jge
or
push
ljmp
cs
lock
popf
ffreep
mov
xor
rol
popf
outsl
loopne
sub
push
adcb
mov
outsl
xor
xchg
int
or
mov
ljmp
xor
fldl
xchg
xor
insl
add
dec
push
cwtl
notl
fsubrs
daa
mov
jge
sti
jns
cmpl
xchg
jns
adc
add
mov
cs
hlt
mov
dec
dec
mov
popa
lods
cmp
push
les
mov
fcomip
lcall
not
cltd
cwtl
sub
movsl
inc
and
mov
sub
and
scas
outsl
pusha
xchg
sub
pop
scas
mov
icebp
sub
xchg
and
jno
jge
jmp
dec
jnp
mov
jns
int3
cwtl
dec
pop
mov
test
push
cli
push
or
ljmp
lock
in
mov
or
hlt
dec
lret
mov
sub
dec
mov
or
add
out
js
movmskps
enter
mov
or
sbbl
clc
mov
in
push
cwtl
outsb
pop
add
je
out
movsb
xchg
in
notb
mov
jo
test
das
lret
inc
cmp
les
mov
scas
enter
stc
inc
xchg
xchg
lock
shrl
pop
sbb
or
cmpsl
rclb
push
xor
scas
mov
std
inc
enter
jmp
inc
stos
loopne
hlt
sbb
mov
pop
dec
or
or
negb
aad
div
push
mov
in
addl
lock
jne
add
cld
ja
or
aaa
hlt
inc
or
push
mov
pop
je
sbb
sbbb
and
pop
les
inc
xor
test
lock
adc
add
mov
pop
stc
sub
inc
loope
cmpsl
pop
or
xchg
push
inc
xchg
jns
sbb
fimuls
pop
es
dec
sbb
push
or
and
fwait
push
adc
jae
loopne
jg
int3
jnp
cmp
sbb
ret
std
bound
lock
and
lahf
xor
lret
jmp
mov
pop
add
pop
mov
sub
and
fcomps
sbb
push
jnp
mov
mov
call
mov
dec
aaa
inc
pop
mov
jecxz
call
pop
out
jl
sahf
cltd
jmp
stos
outsb
clc
xchg
xor
push
in
xor
mov
addps
mov
cltd
shlb
std
jecxz
ds
out
push
popf
gs
and
loop
inc
and
mov
test
cmc
movl
push
or
dec
rclb
push
mov
xor
cmpsl
cmp
ret
rorl
call
dec
mov
test
fnstsw
loope
test
shrb
mov
push
inc
test
or
xlat
jbe
sub
js
sub
mov
sub
lahf
loope
add
daa
jns
mov
xchg
imul
sti
xor
stos
pop
push
sbb
ss
mov
aam
mov
loop
or
out
dec
hlt
stc
jge
push
stc
or
nop
pushf
lods
iret
sbb
or
lahf
sti
mov
outsl
test
inc
mov
and
rcr
mov
sbb
popf
cmpsl
nop
mov
and
xor
xor
inc
pop
xchg
cmc
push
loope
cmpsl
push
mov
movl
cmp
adc
aam
push
repz
xor
mov
push
sbb
inc
fnsave
cwtl
sub
aas
and
sti
popf
fsts
push
inc
shl
jb
and
popa
lret
inc
push
xlat
fwait
lcall
mov
clc
inc
nop
mov
push
popa
or
cli
pmulhuw
mov
or
mov
jl
aaa
stos
in
push
pusha
call
hlt
aam
fcoms
lahf
repz
sbb
push
xchg
hlt
dec
movsb
stos
push
lret
lea
inc
adc
lret
push
iret
rcr
std
xlat
pop
pop
inc
insl
cli
lock
arpl
sub
or
cs
push
add
mov
shrb
nop
ljmp
leave
sub
adc
mov
fisubl
loope
mov
cmp
out
jno
std
jae
mov
mov
loop
cli
adc
xchg
stc
mov
test
loopne
inc
xchg
xchg
scas
pop
nop
in
inc
mov
push
push
aam
sub
imul
arpl
test
sahf
or
add
pop
cmp
bound
mov
nop
mov
xchg
push
push
flds
outsl
nop
clc
insl
jg
icebp
gs
mov
or
sub
mov
dec
icebp
ds
sub
xchg
in
add
adc
xor
pop
ret
xchg
adc
ljmp
test
sbb
stos
popa
imul
sbbb
ja
push
loopne
adc
sbb
insb
pop
rcrb
cmpl
cwtl
int
xchg
movsb
jmp
fmuls
xor
or
pop
or
cli
and
pop
dec
inc
insb
cmpb
push
sbbb
push
pop
sbb
dec
adc
fistpll
je
es
inc
mov
xchg
jnp
js
inc
test
and
test
cmpsb
repz
in
incl
inc
xlat
xchg
dec
adc
or
lea
clc
fsubs
push
adc
xchg
cmpsb
out
jo
dec
inc
in
lods
cld
leave
sub
fmuls
xchg
repnz
mov
lret
or
ss
xchg
inc
clc
gs
lods
pop
loope
rcr
leave
scas
es
shlb
sub
loopne
loop
mov
in
jg
inc
mov
loopne
in
dec
dec
or
imul
xor
inc
jl
lret
push
add
stos
cmc
adc
push
inc
dec
adc
sub
mov
dec
push
test
cmp
lock
sub
push
inc
cmp
mov
mov
adc
hlt
test
cmp
sbb
add
insl
add
icebp
xor
mov
push
jb
or
mov
cmc
shl
adc
fnstenv
cli
push
add
enter
sub
jmp
pop
push
clc
cmp
cmp
cmpsb
cmp
mov
fdivl
pop
inc
lods
sbb
push
mov
fwait
mov
and
xor
hlt
js
fmul
xlat
push
ret
sub
sub
mov
test
out
mov
clc
jae
sub
cmp
mov
xchg
cli
inc
xchg
jo
xchg
xlat
push
ja
push
xor
sbb
and
rorb
push
testb
mov
ds
dec
adc
movsb
aas
and
aaa
mov
mov
sbb
adc
ss
fs
in
or
adc
arpl
sub
aaa
mov
mov
pop
pushf
insb
pop
push
adc
je
cmp
outsl
mov
cmp
adc
call
pop
push
sub
cmp
mov
mov
mov
in
jge
pop
mov
mov
dec
aam
adcl
jp
lods
std
push
movsl
dec
fimull
aaa
insb
push
sbb
xchg
mov
push
cmp
push
jb
adc
idivb
pushf
xchg
push
fwait
in
mov
roll
repnz
inc
sub
mov
int3
rcl
jl,pn
xchg
or
pop
mov
cmpsb
jmp
sbb
dec
fisubrl
sub
fld
and
adc
xor
xchg
outsl
pusha
or
lea
mov
pop
pop
dec
andl
cmp
testb
fimull
mov
outsb
pop
push
lahf
sbb
cltd
push
imulb
xor
adc
or
inc
sbb
adc
mov
popa
jle
shll
xchg
mov
mov
pusha
pop
loopne
xchg
lahf
mov
add
clc
mov
cmp
add
mov
out
fnsave
jmp
jmp
pop
pop
out
push
dec
ret
fidivrs
jo
inc
mov
out
xor
sub
mov
lds
jmp
pop
push
ds
xlat
adcl
add
leave
xchg
not
pandn
sahf
mov
adc
sbb
xchg
iret
cmc
daa
outsb
inc
call
mov
or
xchg
bound
rcrl
psraw
cmp
adc
cld
lods
sarb
push
xor
inc
sub
pop
jmp
jno
rcrb
inc
cmc
icebp
adc
les
dec
pusha
mov
pusha
stos
jne
push
pop
jae
aad
add
stos
movsb
dec
out
cltd
imul
loop
cmpsb
mov
sbb
xchg
lods
mov
jae
adc
inc
jl
jo
popf
in
push
push
test
jge
lcall
sub
mov
scas
decb
push
jne
or
xlat
push
test
jo
loope
push
mov
shrb
movsl
sub
and
xchg
fdivrs
cmc
outsl
xor
pop
call
stc
test
in
cltd
adc
or
or
pop
sbbl
fcoml
gs
or
inc
les
and
push
popa
inc
in
dec
mov
movsl
sub
cwtl
shll
xchg
je
jle
xor
leave
xchg
mov
pop
pop
or
jae
add
or
cmp
pop
or
call
and
xchg
sub
in
xor
jae
mov
es
in
loop
jg
adc
repz
sbb
cmp
arpl
inc
inc
shlb
cmpsb
scas
cmovo
and
scas
mov
pop
inc
in
push
outsb
cmp
out
gs
jb
out
addl
rorl
sbb
dec
repz
cmp
int3
dec
cmp
jg
out
insl
mov
je
lods
and
lds
jae
aaa
push
std
or
roll
rorb
iret
cmp
push
xor
mov
movsl
push
into
repz
lock
fs
pop
xchg
or
mov
ss
xchg
sar
xchg
push
jb
mov
lcall
pop
lock
sbb
adcb
mov
aaa
lret
lods
xorl
dec
mov
aas
mov
jno
mov
ljmp
push
adc
mov
ss
push
and
imul
jl
push
hlt
mov
stos
xor
mov
ret
les
xchg
xchg
in
std
mov
dec
fldt
dec
sti
sbb
mov
repnz
insb
inc
dec
or
and
in
jne
ljmp
dec
out
or
and
aaa
fs
cmc
jecxz
or
imul
add
adcb
mov
mov
dec
dec
push
mov
mov
loop
ss
mov
dec
sub
mov
test
push
imul
cmc
pushf
fcomps
mov
mov
mov
lret
popf
int3
aam
fs
xchg
push
add
fldcw
clc
arpl
repz
dec
popa
mov
adc
push
push
fisttpll
in
imul
mov
xchg
fs
add
xor
and
arpl
sar
mov
dec
ja
add
dec
jl
out
ja
fistpl
or
mov
push
mov
cmc
cmp
icebp
nop
mov
push
jp
lods
repnz
and
dec
fisttpl
jecxz
jb
sbb
dec
cmp
sbb
cwtl
out
sahf
popf
or
mov
push
aaa
cmp
and
ud1
xchg
inc
sti
adc
stc
int3
push
mov
mov
dec
sub
cmpsl
repz
sbb
cmp
jb
frstor
xlat
cmp
ja
aas
jle
stc
ss
lret
dec
fsincos
push
and
jl
pop
lret
pop
xorb
fwait
movb
les
movsb
sbb
xchg
aas
sbb
xor
dec
dec
mov
ja
pop
shr
jne
jb
sbb
xor
xchg
aaa
fistpl
es
out
in
sub
clc
push
movsl
pop
push
push
xor
loop
cli
nop
out
xchg
dec
mov
sub
frstor
cld
jle
dec
pop
jle
mov
fimuls
cwtl
testb
loop
fmull
jg
jg
xchg
cmp
inc
int3
js
mov
stc
cld
aam
loope
js
imul
fisubrl
xchg
out
shl
addl
dec
dec
cmpsl
jb
jle
lcall
stos
sti
jbe
jge
int
rcrl
mov
xor
or
cmp
pop
imul
je
mov
out
loop
das
adc
xor
mov
ret
movb
cmp
inc
adc
std
dec
adc
ss
iret
orb
ja
jg
lea
inc
stc
sbb
jp
jno
lret
inc
shll
or
sub
xchg
cmp
pop
mov
rcl
sub
js
sub
bound
out
filds
fld
in
imul
fwait
xchg
test
popf
fwait
test
hlt
xlat
adc
cmp
jecxz
sti
pushl
push
rolb
lock
cmp
sub
arpl
mov
xor
push
sub
xchg
mov
pop
xchg
aaa
push
sbb
xor
hlt
rcrb
int
inc
jp
in
loopne
iret
jae
rorl
inc
ds
mov
cmp
fdivrl
adc
decl
and
dec
mov
movl
cmp
add
push
std
cs
cwtl
clc
add
out
aaa
mov
mov
mov
jns
mov
dec
pop
out
cmpb
es
aas
fcmovu
inc
pop
or
subl
ret
xchg
dec
mov
add
push
cmpsb
pusha
call
jp
pop
test
call
push
add
fidivrs
cmpb
jne
dec
push
enter
inc
scas
sub
jbe
inc
das
adc
pushf
xor
mov
xlat
dec
imul
imul
mov
jg
push
mov
jnp
mov
pop
cmp
mov
dec
push
sub
inc
cmp
mov
jne
xor
xchg
pop
test
int3
test
jae
clc
xchg
mov
filds
lcall
jnp
mov
fisubs
or
and
push
shll
mov
mov
insb
test
mov
mov
loop
or
stos
sti
mov
insl
pop
mov
fisubrs
and
enter
es
xor
pushf
lea
stos
push
ljmp
fstl
loopne
mov
mov
adc
inc
test
xorl
push
cmpsl
fiadds
popf
dec
xor
mov
add
and
jno
daa
js
add
bound
inc
cltd
insb
jmp
cmpsb
sbb
loopne
into
or
int
sarb
int
iret
sub
mov
or
paddb
pop
loope
cmp
push
mov
mov
nop
dec
mov
ret
pusha
ss
inc
xchg
shl
clc
fbld
sbb
call
push
cmp
mov
push
add
xor
aad
shr
in
cmp
mov
shl
cltd
or
cmp
jae
jbe
mov
cld
aaa
das
lahf
push
mov
jp
jge
test
pop
inc
sahf
sub
repz
pop
nop
xor
pop
cli
or
mov
shl
lret
out
insb
pop
push
xor
mov
xchg
cld
mov
fneni(8087
outsl
push
popa
dec
arpl
push
mov
in
jnp
dec
pop
addr16
mov
jb
and
xchg
mov
sbb
loope
outsb
std
lods
je
pop
data16
lret
pop
mov
popa
sub
sbb
std
add
lret
int
xchg
pushf
loop
lret
jmp
shlb
cmpsl
sbbl
mov
jge
in
adc
movq
dec
inc
pop
in
sbb
pop
cmpsl
pop
pop
xchg
in
and
jmp
cmpsb
adc
mov
pop
jmp
jle
dec
jo
mov
xchg
jne
inc
lods
loope
ss
inc
subl
adc
jb
jns
out
jge
jnp
outsb
js
mov
cmp
push
repz
rcr
stc
jmp
sub
stc
shl
jg
mov
and
push
push
pop
mov
xor
pop
xorl
cmc
mov
movsb
ret
inc
or
leave
sbb
pushl
adc
cmp
inc
divb
mov
jns
mov
and
lcall
push
outsl
cld
pop
pop
scas
ficompl
fisubrs
inc
or
inc
loop
cmc
add
aad
adc
add
out
jl
ds
xchg
test
data16
subl
cmp
scas
sub
pop
aaa
inc
xchg
xor
push
fmulp
pop
xchg
dec
icebp
jb
push
push
add
xor
cmpl
scas
pop
nop
jl
lods
repz
mov
sub
cli
inc
js
push
push
or
stos
out
mov
push
push
mov
adc
imul
cmp
insb
mov
loopne
outsl
lods
ror
mov
imul
mov
arpl
es
cmpsl
test
fiaddl
mov
cli
inc
mov
int
fistl
imul
jno
mov
pop
cmp
mov
subl
add
movsl
rcrb
addb
or
and
ja
loope
es
cmp
mov
lock
andl
dec
push
nop
xchg
in
in
dec
and
jle
add
mov
dec
xchg
movsl
emms
mov
sbb
and
pop
jo
push
inc
loop
fisttpll
inc
or
ja
frstor
mov
cmp
fcompl
into
mov
push
enter
les
fmull
dec
fistpl
aad
xor
add
jecxz
dec
xor
cltd
es
popa
adc
popa
hlt
xchg
mov
in
lcall
mov
mov
in
out
es
xchg
je
dec
inc
fwait
popa
cli
xchg
out
and
aad
sbb
pushf
inc
sub
pushf
adc
iret
xor
mov
jae
pop
movsl
imul
pop
mov
or
fnsave
sbb
cmpsl
add
lods
mov
test
test
mov
les
mov
iret
xor
sub
xor
sbb
inc
jecxz
mov
loope
push
aad
scas
data16
repnz
roll
adc
dec
cmp
push
gs
popf
ret
xor
cmpsl
test
ljmp
and
dec
xchg
cmovg
pop
dec
arpl
cwtl
or
jmp
mov
pop
adc
xchg
std
mull
imull
xchg
xor
fisttps
aad
clc
xchg
movsl
je
xchg
lea
pop
mov
xor
shl
aaa
jp
lea
sbb
cwtl
sub
cwtl
orb
cmp
sbb
lock
sub
mov
and
pop
push
cmpsb
sbb
lods
loop
js
inc
movsb
jns
sub
xchg
fldt
iret
mov
ret
je
xchg
inc
in
fcmovnbe
inc
mov
scas
mov
cmp
outsl
sub
rolb
pop
mov
ljmp
adcb
push
iret
and
sbb
push
shll
into
push
add
cld
lret
gs
pop
iret
out
aam
xchg
inc
imul
mov
push
je
out
insl
inc
stc
pop
cmp
inc
xchg
xchg
push
test
aad
xor
hlt
mov
mov
movsl
test
cmp
jl
cmp
mov
test
cmpsl
ret
cmp
inc
inc
ret
dec
xor
scas
sahf
push
cmpsb
mov
mov
fdivl
js
rorl
mov
cmp
lret
mov
sub
and
cmp
sub
mov
stos
push
jno
fcompl
mov
dec
jmp
repnz
fxch
data16
mov
pop
pop
mul
cwtl
lret
cld
cmp
jecxz
pop
and
sbb
xchg
sbb
xchg
ss
fisubrs
dec
mov
or
sbb
jae
jnp
fwait
cmp
fldcw
sbb
push
add
add
cld
cmpsl
mov
mov
sub
sbb
jae
outsl
fcomps
mov
scas
pop
mov
add
jecxz
cmpsb
pop
repnz
cmp
adc
cmpsl
dec
ds
pop
xchg
mov
jo
clc
cmp
adc
adc
mov
test
cmp
into
je
faddl
xchg
add
nop
in
dec
jbe
and
fcoml
js
daa
mov
out
push
out
nop
shlb
mov
jne
es
cltd
das
bound
cli
inc
pop
imul
add
sub
xchg
pop
inc
lds
les
mov
lods
enter
cwtl
lock
pop
pusha
nop
mov
dec
out
in
shlb
repz
adcl
mov
inc
jg
fdivrs
push
sub
adc
sub
or
dec
lods
cwtl
jmp
addr16
pushf
ljmp
push
pop
adc
mov
dec
or
int
jb
mov
andb
lock
adcl
cmp
xor
xor
pop
clc
xchg
pop
jl
sbb
das
pop
out
mov
push
or
add
sub
mov
fwait
inc
ljmp
xchg
lahf
enter
insl
into
xor
dec
scas
jns
inc
icebp
or
or
push
cs
pop
add
jg
xorb
xor
hlt
es
push
pop
aaa
jecxz
popf
cmp
inc
xchg
add
mov
xchg
dec
les
add
nop
mov
hlt
fmulp
mov
xor
sub
adc
cld
cmpsl
lahf
sub
xor
ret
adc
cwtl
hlt
inc
sahf
ret
pop
jl
lcall
inc
imul
jne
push
sub
dec
push
loopne
lahf
in
leave
jp
rolb
pop
fisttpll
push
xchg
stos
mov
movsb
pushf
cwtl
push
ficompl
aad
mov
enter
stos
aad
inc
xlat
std
xor
imul
dec
jns
xchg
mov
push
push
rcrl
or
negl
out
clc
inc
or
push
push
xchg
aam
mov
gs
stc
lret
imul
sarl
repz
mov
push
setge
inc
inc
jle
aad
bound
cmp
je
inc
mov
xor
inc
inc
mov
add
cli
xchg
sub
adc
xor
aad
or
sbb
lahf
xor
icebp
fisttpl
cld
stos
push
pushf
pop
pop
ja
shll
add
lods
gs
imul
mov
sbb
jb
jmp
daa
scas
push
mov
sub
and
js
div
jecxz
push
ljmp
sbb
sahf
xchg
es
lcall
dec
popf
adc
push
or
je
mov
inc
leave
leave
outsb
mov
dec
dec
aaa
adc
sub
mov
das
aaa
push
sbb
imul
dec
sbb
adc
add
mov
or
sub
imul
xor
adc
jmp
mov
nop
daa
pop
xchg
sbb
incb
xor
jl
xchg
ret
cmp
test
ret
rcrb
and
fisubrs
push
fmulp
cmp
mov
sbb
adc
inc
cmp
je
sti
jne
sub
xor
xchg
imul
andb
rcrl
fabs
lret
fwait
pop
call
sbb
add
or
aad
imul
cmp
xorb
add
lahf
inc
stos
outsl
jnp
sahf
adc
bound
data16
jns
pop
je
test
jg
and
pop
dec
push
mov
test
es
inc
xchg
or
push
cli
mov
sbb
std
mov
push
cld
lret
dec
add
push
ja
or
and
adc
imul
in
shrl
adc
pop
cmp
stos
imul
mov
sub
insl
shl
push
fwait
aas
scas
push
lcall
xchg
ret
imul
and
xor
xor
push
sub
daa
cmp
ret
jp
sbb
jl
popaw
push
lods
push
sbb
sub
jecxz
or
test
fcomps
mov
xlat
sbb
mov
inc
ljmp
daa
mov
pop
lods
lock
and
add
je
pop
or
mov
xlat
pop
jbe
jno
or
icebp
enter
or
das
mov
push
jb
push
mov
dec
lahf
sbb
out
in
add
comiss
and
cmp
out
mov
lret
out
mov
push
sub
adc
in
in
lods
ret
xchg
jns
inc
mov
inc
cld
ss
daa
push
cmp
lock
dec
aas
mov
popa
stc
insb
mov
icebp
inc
jle
addr16
icebp
xor
pushf
inc
mov
mov
mov
pop
or
pop
mov
push
xchg
pop
mov
push
jecxz
jecxz
fsubs
mov
out
lock
cmp
push
gs
or
out
inc
cmp
cmp
aad
pop
stc
xor
loope
inc
insb
add
jl
data16
xchg
sahf
xor
jnp
testl
scas
pop
in
adc
inc
pop
or
test
call
mov
mov
fldpi
and
sub
jbe
movsl
fwait
mov
and
mov
mov
inc
loopne
push
xor
pop
pop
cmpsb
icebp
insl
call
sub
repnz
and
ret
fmul
data16
adc
and
xor
sub
arpl
pusha
pop
mov
addr16
outsb
push
inc
add
jns
xlat
test
and
test
shrb
cmp
imul
jbe
inc
xchg
aad
jae
xlat
ficompl
aam
push
fisttps
sbb
sub
dec
movsb
sbb
add
dec
mov
stos
or
lds
push
add
shr
mov
xchg
fidivrs
xchg
inc
lock
mov
movsb
daa
cwtl
fcomps
andb
cmp
add
std
mov
lods
add
mov
inc
jge
sar
xor
clc
add
xchg
adc
sar
mov
into
push
jno
js
and
fstpl
ljmp
jg
pushf
and
push
pop
mov
add
hlt
aaa
jp
imul
lods
or
xorb
or
and
pop
mov
pushf
and
and
dec
mov
popa
push
cmc
les
xchg
popa
and
cmp
or
into
ret
enter
pop
clc
std
sbb
mov
out
stos
ja
sbb
icebp
jne
sarl
adc
cmp
jmp
pop
lret
fs
dec
cli
lods
test
sbb
pop
pop
int
pop
or
into
mov
mov
lock
popa
gs
pushf
dec
mov
scas
dec
and
rcrb
mov
ret
int
bound
inc
mov
out
popa
sub
sti
push
lds
dec
inc
ret
fs
xor
in
pop
cld
pop
out
xchg
or
arpl
pop
and
mov
jle
adc
mov
jbe
ret
pop
push
sub
rclb
mov
sbb
ret
or
scas
inc
xchg
mov
sub
in
mov
mov
or
out
jp
pop
inc
and
scas
out
int
xchg
out
and
jb
sub
loope
rorb
cmp
sar
mov
int3
iret
loopne
dec
xchg
iret
inc
pop
jns
jg
sub
ret
xor
inc
in
enter
test
sbb
or
mov
loope
cmc
stos
mov
fidivrl
cmp
adc
movsl
sub
inc
insb
mov
jne
xchg
xchg
sub
ficompl
lahf
aam
and
jbe
sub
test
inc
dec
ja
test
adc
fisubrs
je
mov
out
movsb
xchg
and
jbe
les
mov
xchg
sub
xchg
push
out
int
sbb
sub
lret
jmp
adc
mov
hlt
into
sub
iret
sarb
mov
out
shl
or
mov
sbb
mov
enter
cmp
sub
dec
xor
ss
arpl
popf
daa
shl
cmp
sub
es
add
in
push
xchg
insb
clc
mov
push
loop
mov
xlat
bound
outsl
shlb
aam
pop
into
xor
repz
or
pop
pusha
js
ffreep
xchg
scas
nop
test
test
daa
enter
mov
mov
cld
xchg
dec
jg
and
icebp
push
cmp
dec
popa
stc
adc
mov
mov
push
pop
xor
or
lea
mov
push
popf
aam
mov
push
xor
cmpl
subb
aas
push
loope
add
jmp
jmp
movsb
aad
mov
xchg
xorb
pop
mov
jno
subb
lcall
mov
mov
popa
cmp
lea
xchg
mov
add
jb
jle
enter
ja
mov
lret
xorl
inc
fstpl
je
dec
or
mov
shrb
xchg
sahf
mov
outsb
subb
fsubr
pop
inc
movsb
lea
fidivrl
nop
jmp
dec
and
ficoms
stos
or
mov
in
outsl
xchg
xor
push
dec
lock
js
xchg
mov
icebp
sbb
mov
push
pushf
das
mov
mov
push
in
inc
loopne
shld
lds
iret
and
cmp
inc
mov
xor
cmp
cmp
leave
stc
subl
add
jbe
mov
pushf
ret
loopne
xor
insl
mov
mov
bound
ljmp
addb
ljmp
ja
mov
add
xor
test
push
fldl
lcall
mov
and
jno
ja
sub
in
push
pop
ljmp
sbb
hlt
fstp
sub
mov
dec
vminss
dec
push
test
ds
push
jg
or
cmp
jmp
jmp
cmp
dec
mov
ja
xor
shll
mov
hlt
xchg
cmpsb
adc
arpl
and
xchg
mov
scas
test
loope
mov
popa
cs
inc
out
push
inc
add
and
xor
fadd
sbbb
fwait
orl
sbb
xchg
insl
test
sub
push
pop
sbb
cmpsl
or
pop
mov
pop
gs
mov
mov
ds
ja
and
sbb
in
inc
cmp
push
into
pop
jmp
jo
sbb
stc
sbb
and
push
cmpsl
orb
mov
ret
test
sbb
pushf
movsb
jno
add
fdivrp
jb
adc
or
or
xor
push
in
sahf
fdivrl
in
lods
pop
sbb
into
loop
repnz
lods
xchg
inc
xlat
popw
or
mov
push
in
and
loop
sub
jp
out
inc
loope
cwtl
xchg
xchg
sahf
or
mov
sub
imul
out
fdivs
les
popf
and
cmp
xchg
dec
and
scas
add
lahf
nop
ja
aaa
popa
mov
xlat
out
sbb
mov
std
dec
push
fiaddl
pop
flds
lea
and
int
pushf
pop
jbe
jmp
hlt
int
xchg
enter
inc
jnp
xor
cmpl
sahf
or
ss
mov
cmp
xor
jb
addl
cld
mov
lret
js
sbb
pop
aaa
mov
dec
mov
mov
jo
mov
cmpsb
in
lds
mov
jle
mov
nop
ja
lea
inc
xor
cmp
rclb
insl
xchg
nop
xor
scas
int
cld
and
scas
ret
mov
loop
mov
push
cmp
sbb
dec
iret
xor
je
aad
mov
adc
int3
inc
shrl
in
push
shlb
mov
push
imull
int3
addr16
xchg
fidivl
inc
jae
xor
cltd
xor
dec
jb
pop
jae
mov
jbe
xchg
out
mov
aam
inc
sbb
icebp
sbb
pusha
pop
push
jns
pop
push
cli
pop
push
xorb
pop
jbe
mov
addl
xchg
sub
js
sub
test
fisubrs
js
divl
mov
mov
jge
in
pop
cs
and
mov
xchg
std
sarb
test
mov
jle
shll
in
into
repnz
mov
and
inc
jmp
out
fsubrl
mov
stos
cmp
push
sbb
movl
les
push
lods
jae
push
loope
or
mov
gs
scas
jb
inc
rcrl
jae
and
loop
mov
push
adc
notl
arpl
cld
push
fxch
cwtl
and
cmp
pop
sbb
pop
cmp
stos
inc
jmp
or
cmp
into
shll
and
lock
jmp
lea
jo
xchg
push
pop
xchg
lds
and
push
sbb
xor
addr16
jg
inc
cmp
pop
imull
mov
xor
dec
mov
mov
add
jns
push
push
cmp
xor
cltd
add
int3
jns
push
ficomps
jns
sub
cli
ret
xor
push
sbb
or
hlt
add
mov
xor
sbb
mov
adc
iret
xor
push
cmpsl
jl
lahf
cld
mov
push
dec
jle
mov
dec
dec
into
test
sbb
pop
jns
push
inc
ret
scas
inc
jecxz
pop
loop
movsl
mov
add
pop
mov
imul
jo
xchg
dec
movsl
fs
fldt
cli
or
arpl
outsl
jbe
fildll
mov
stc
xchg
int
aad
insb
in
pop
clc
pusha
adc
pop
sbb
pushf
insb
sti
sti
sub
fwait
jp
orl
shll
ret
push
pusha
je
int
dec
mov
imul
dec
cwtl
push
repz
pop
gs
mov
inc
adc
push
xchg
push
lock
out
push
mov
lods
jne
or
cmpsb
mov
jmp
push
mulb
xchg
pop
arpl
mov
repz
push
mov
mov
or
xlat
sahf
inc
jb
mov
mov
lock
adc
jecxz
out
out
std
test
hlt
fmull
in
xchg
pop
cmp
or
mov
test
mov
add
jp
mov
jne
mov
sub
and
or
imul
jbe
pop
int
dec
sahf
adc
xor
cli
lret
mov
sbb
cmp
nop
and
lods
jmp
cmc
jb
decb
mov
testl
fldenv
inc
adc
mov
push
sub
mov
outsb
data16
movsb
and
lds
cmpb
repz
sbb
push
cli
decb
cmp
and
adc
fcoml
mov
lock
stc
mov
stos
jne
jecxz
jno
es
add
pop
dec
mov
add
out
jmp
ficomps
mov
push
je
pop
mov
cmp
stc
ret
xlat
inc
mov
cmp
dec
cmp
imul
insl
hlt
jecxz
fnsave
sub
jl
fdivs
in
fisttpll
sar
movsb
pop
adc
push
xchg
or
xchg
xrelease
cmc
jae
pop
sub
inc
into
cmp
jecxz
inc
imul
sbb
mov
xor
cwtl
fcoms
enter
out
fimull
mov
cmp
jmp
cmp
arpl
inc
inc
and
sub
stos
call
popa
aaa
mov
je
das
in
inc
mov
dec
cmp
out
push
sbb
in
sub
mov
sbb
pop
es
push
sbb
sub
pushf
dec
addl
fadd
dec
xor
or
mov
iret
or
adc
repnz
outsb
sbb
adc
test
cld
add
mov
shl
jmp
mov
fwait
mov
inc
mov
loopne
es
test
cmp
pop
and
jle
xor
pop
sbb
fiaddl
fst
xor
or
adc
adc
cwtl
movb
mov
loope
push
cmpsl
mov
mov
mov
add
inc
dec
fcompl
pop
shlb
in
ret
cwtl
sub
pop
dec
repz
jl
int3
stos
aam
lods
mov
xlat
xchg
xchg
dec
push
sbb
add
clc
pushf
jns
mov
add
aad
sbb
xchg
push
and
inc
jmp
in
ret
in
das
outsb
mov
mov
cmc
adc
movsb
sbb
dec
rorb
mov
pop
jno
test
jp
mov
aad
xor
jmp
movsb
mov
lds
leave
mov
mov
mov
sbb
add
xchg
imul
test
pop
add
daa
mov
aas
loop
pop
cmp
mov
and
inc
mov
ret
inc
or
inc
inc
adc
mov
hlt
scas
mov
xor
out
outsb
cs
mov
xor
mov
add
jmp
or
dec
loopne
les
in
mov
je
fstps
xchg
je
mov
mov
push
scas
out
push
and
loope
lods
ficomps
lret
mov
push
jnp
shl
sub
jmp
xchg
mov
xchg
and
nop
jb
repnz
mov
add
mov
aad
xchg
lea
shrl
lret
push
dec
mov
ljmp
scas
xor
rol
fimull
mov
data16
test
ja
jnp
popf
sub
dec
data16
dec
ror
adc
pop
jecxz
add
inc
add
int3
daa
bndldx
or
xchg
xchg
sub
loopne
jnp
inc
and
jle
and
pop
or
es
mov
or
call
push
mov
jle
dec
push
lahf
out
fiadds
inc
push
mov
in
repnz
push
repz
lret
add
xchg
push
mov
sub
add
and
lret
ffree
js
test
pop
and
mov
push
test
pop
or
inc
mov
arpl
int3
test
inc
aaa
xor
push
imul
push
repz
adc
inc
dec
sti
cmpsb
jp
or
incl
movsl
nop
or
add
push
mov
sbb
mov
xor
jge
je
xchg
xchg
lods
popa
ja
movsl
dec
dec
scas
pushf
arpl
out
xchg
fwait
ret
jno
dec
jge
pop
push
arpl
insl
push
jmp
pop
shll
aad
lret
or
inc
imul
call
imul
popf
jo
loopne
xor
fsubs
shr
add
cmp
rcrb
mov
add
addl
pop
dec
shr
mov
insl
and
dec
mov
imul
jge
loop
enter
xor
mov
add
cmp
lret
xor
ds
bswap
mov
test
mov
aas
sub
adc
mov
popa
insl
inc
xchg
leave
inc
repz
pop
jge
fs
loopne
push
insl
add
pushf
addl
les
ja
jo
jecxz
mov
push
dec
andl
movb
push
mov
cmpsl
lods
lret
fadds
mov
push
mov
pusha
outsl
subb
or
mov
arpl
in
sar
insl
es
repz
add
stos
xor
jl
popf
and
repz
sub
mov
push
fisubl
out
popf
mov
stos
aad
and
cmp
hlt
cmp
int
mov
test
pop
sti
push
xchg
fnstenv
cmp
push
adc
push
lcall
cmpb
leave
jg
inc
cmp
rclb
repz
lret
dec
mov
imul
hlt
cld
icebp
in
xor
dec
sahf
stc
jle
adc
cld
mov
imul
push
and
add
cwtl
mov
or
mov
test
fnclex
push
loopne
orb
mov
iret
addr16
leave
jmp
xor
js
mov
mov
fbld
lret
test
push
loop
clc
cwtl
or
ds
cld
lcall
aaa
or
fs
pop
dec
sbb
test
dec
pop
xor
loop
orb
dec
rorb
xchg
mov
mov
and
and
push
cs
insl
and
idiv
xchg
add
aaa
gs
xchg
repnz
enter
imul
pop
jns
test
lds
xchg
repz
mov
pop
jp
push
fisubs
in
test
rorl
shrl
xorb
dec
mov
cld
inc
stos
fstpt
xlat
mov
out
cmp
in
add
rcl
lahf
leave
mov
push
jecxz
xchg
cmpsl
lcall
out
rdmsr
mov
mov
dec
xlat
mov
repz
fisttps
dec
movsl
movsl
int
les
lret
data16
les
lcall
jecxz
adc
ljmp
cmp
xor
xor
sub
inc
push
mov
sbb
das
fistpll
inc
pusha
cmp
mov
aaa
pop
sbb
mov
aas
mov
xchg
ret
jae
add
pop
mov
stos
shrb
movsb
adc
xor
fs
jmp
add
mov
mov
mov
ds
loope
test
ret
dec
inc
mov
pushf
movsb
and
pop
fbstp
push
leave
push
test
test
push
push
jl
fsts
jp
xchg
sbb
xchg
cmp
pop
repnz
aad
cli
aad
and
jbe
mov
sbb
jb
push
xchg
ret
pop
mov
test
test
cmp
pop
or
jg
das
pop
xor
lret
pop
fcomi
dec
andb
lock
call
xor
jle
pop
out
push
dec
jb
xchg
sbb
adc
mov
nop
sub
sbb
xchg
or
mov
loope
sub
mov
mov
add
or
sbb
iret
jmp
mov
mov
adc
push
and
jnp
ret
lods
mov
jo
cwtl
test
mov
clc
jp
mov
sbb
repz
or
cli
int3
pop
sti
jne
adc
bound
aas
or
push
testb
dec
push
xchg
xor
push
push
xchg
inc
hlt
clc
xor
mov
sete
out
scas
loope
cmp
add
or
pop
hlt
addl
mov
and
sbb
inc
cli
mov
repz
sahf
enter
outsl
cmpsb
movsl
nop
icebp
mov
mov
shlb
bound
jns
mov
mov
sub
cltd
and
inc
mov
fs
cmp
push
in
pushf
sub
mov
xlat
rorl
pop
call
mov
dec
jb
bound
lahf
imul
mov
jg
sub
cld
xor
cwtl
cmp
sub
hlt
out
test
adc
fistpll
sbb
pushf
loope
mov
fsubl
mov
mov
cmp
xlat
jo
lcall
aas
and
xor
daa
jbe
ljmp
dec
inc
in
idivl
jb
pusha
repz
inc
cmp
jns
mov
aad
pop
add
xchg
aad
int3
dec
mov
leave
cmp
mov
or
pop
adc
sbb
dec
jbe
add
mov
into
dec
mov
mov
repnz
scas
in
addb
mov
sbb
and
loopne
add
std
or
mov
jo
xchg
stos
mov
inc
xchg
popa
js
in
inc
xchg
ret
movsb
mov
test
ret
ret
push
lock
loop
cmp
inc
xchg
pop
fcoms
icebp
sbb
call
lea
shll
jmp
in
or
andnps
jne
and
pop
sub
jl
mov
mul
ret
shll
adc
pop
or
and
aaa
jnp
adc
gs
imul
ficoms
in
in
pop
xor
jle
popf
outsb
xchg
sarl
mov
xchg
sbb
fmul
and
test
sti
nop
repz
push
addr16
cld
fbstp
cmp
or
jp
dec
pop
ret
fidivrl
test
mull
lods
fnstenv
movsl
lcall
sbb
enter
paddb
lods
mov
add
test
imul
std
dec
enter
jae
mov
stc
fstl
jbe
leave
test
mov
test
sub
jo
jl
scas
data16
fisttpll
xor
das
cld
jg
mov
js
pop
xchg
mov
jecxz
mov
aad
popf
ljmp
mov
jns
movb
idivb
jmp
repz
xchg
in
jns
or
mov
jecxz
fisubs
ds
push
int
call
ja
mov
sub
leave
jnp
aam
into
or
xor
and
mov
jo
sub
adc
rorl
loope
rcll
fldt
jle
icebp
ror
popa
arpl
mov
pop
int
or
fiaddl
or
ds
arpl
sbb
in
movsb
rcll
mov
dec
and
out
ljmp
fcompl
sbb
xlat
gs
cmp
add
inc
pop
cmp
inc
xchg
and
roll
or
inc
dec
or
pushf
movsl
dec
mov
mov
cs
in
int
inc
mov
inc
mov
test
dec
repnz
mov
and
and
mov
mov
pop
add
and
std
jmp
js
lods
mov
xchg
fs
jmp
ljmp
dec
add
ret
push
cltd
out
inc
mov
and
push
mov
xlat
hlt
sub
cmpsb
inc
pop
dec
and
call
or
mov
lahf
xchg
test
or
dec
pop
jmp
loop
jo
and
movl
enter
and
leave
in
insl
ret
dec
adc
and
fsub
inc
and
inc
je
sbb
gs
loopne
cli
add
adc
push
mov
lret
in
adc
aad
test
or
inc
cmpsl
cmp
pusha
fxch
fnstsw
push
lea
sub
mov
int3
push
scas
adc
adc
aaa
fcmovne
hlt
jg
scas
push
inc
fwait
cmp
sbb
rol
and
leave
test
xchg
sbb
sub
mov
mov
cmp
dec
fistps
outsb
push
push
or
aaa
insl
xor
push
icebp
es
push
xlat
add
dec
jge
pop
inc
cld
pop
lea
add
test
and
inc
xor
test
jno
adc
cmp
insb
jb
data16
mov
mov
adc
adc
gs
lods
jp
jge
test
mov
jecxz
int3
rol
movsb
lea
outsl
dec
movb
mov
mov
fldl
or
scas
xchg
jae
or
popf
push
xlat
sbbb
lea
insl
loop
or
fs
fisttps
sarb
inc
jne
fs
push
out
movsb
faddl
mov
xlat
xchg
jo
call
jmp
xor
cmpsb
sti
gs
sub
mov
mov
cld
mov
adc
rcrb
add
push
xchg
push
push
cli
push
js
jns
sub
xlat
push
lea
inc
iret
mov
arpl
mov
inc
cli
mov
push
fcompp
dec
mov
icebp
push
push
leave
test
mov
test
mov
mov
fldt
cmpsl
inc
pop
mov
jne
xor
mov
or
ja
icebp
movsl
arpl
mov
cs
lret
jmp
js
das
xchg
adc
adc
adc
lds
popa
xor
sbb
dec
sub
add
rolb
sahf
dec
loope
popl
test
test
push
out
push
push
push
jl
mov
lds
lods
mov
shl
dec
fcoml
jp
pop
test
lock
lods
and
and
dec
bound
sbbb
cmp
mov
int3
jg
jmp
icebp
push
dec
jbe
xchg
imul
inc
push
dec
sbb
ss
repnz
mov
repz
sub
lea
ss
test
cmp
adcl
add
adc
xlat
dec
mov
ficoml
cli
xlat
cli
imul
ljmp
test
jl
and
popf
mov
xor
inc
aam
movsb
push
xchg
mov
push
insl
pusha
cmp
jmp
push
xchg
fisubl
xor
xchg
bound
mov
ror
lret
test
mov
sub
lock
movsb
outsl
inc
mov
pop
lock
int
mov
subb
popf
push
rep
pop
or
mov
aas
icebp
jo
jg
push
rcll
outsl
stc
inc
hlt
addl
sub
nop
inc
inc
aam
lret
push
les
pop
or
test
push
mov
jo
loop
ja
jge
jl
rolb
push
stos
cmpsb
mov
in
aas
sub
fnstenv
mov
adc
psllw
popa
mov
sbb
adc
mov
inc
cltd
fistpll
repz
jb
xor
push
out
jecxz
mull
pop
fisttps
pusha
cwtl
mov
cmp
mov
and
outsl
xchg
jp
push
dec
inc
leave
adc
mov
adc
sahf
std
xchg
mov
fnstsw
imulb
leave
pop
or
push
mov
gs
aad
test
pop
lret
test
push
mov
jae
xor
jg
pop
inc
inc
call
jp
xor
sbb
push
lret
lods
add
add
inc
mov
mov
adc
es
jbe
jo
cmp
fcmovnbe
icebp
xchg
cmp
fmulp
xchg
xchg
jge
ljmp
inc
gs
push
mov
lret
mov
fdivrl
cmpsl
in
shll
adc
xchg
scas
lock
push
int
dec
push
xor
dec
mov
push
jmp
pop
dec
mov
push
dec
sti
sub
insl
adc
xchg
pop
lods
rorl
out
ret
mov
jp
clc
dec
loope
push
jne
or
sub
push
cmp
xor
fwait
das
ret
insl
push
addl
pop
shr
and
imul
sub
repz
loop
push
nop
sub
les
jmp
and
and
into
int3
lret
arpl
sub
lcall
imull
clc
fdivl
mov
in
jecxz
jnp
fldt
int3
rorb
in
dec
or
pop
xchg
push
insb
mov
mov
mov
imul
xor
dec
sbb
leave
int
cmp
jecxz
or
jg
outsl
data16
pop
adc
cmp
jae
scas
int
pusha
jmp
fldenv
aam
shll
mov
mov
dec
les
jg
sbb
popf
xor
mov
out
loop
sub
jl
push
push
cmc
fsubrp
jne
jecxz
adc
push
adc
fwait
lret
jns
mov
pop
jne
sub
sbb
dec
xor
xor
dec
notb
add
push
rcll
lds
mov
and
lret
pop
imul
adc
jnp
mov
jge
rcrb
inc
push
jno
sub
and
mov
in
rcrl
cmpl
mov
and
mov
fidivs
aaa
stc
mov
pop
cltd
push
popa
outsl
and
jg
mov
scas
or
dec
cmp
mov
mull
bextr
adc
xchg
iret
ljmp
test
push
push
in
sub
cld
outsb
xchg
cmp
xor
sub
daa
and
cmp
inc
andl
std
mov
stos
mov
cmp
notb
cs
das
pop
cmp
add
fsubs
mov
xor
aas
mov
xchg
add
js
les
enter
xor
mov
test
mov
lea
orl
or
or
add
cld
sahf
fxch
adc
xchg
mov
fsub
jecxz
jnp
or
int
add
sub
push
imulb
rcll
pop
fwait
pop
mov
fmuls
jbe
mov
scas
pop
xchg
push
addr16
cmp
ror
cld
andb
lea
xchg
sbb
mov
sub
cmc
pop
adc
add
push
scas
addl
pop
and
loop
sbbl
fstl
add
mov
es
pop
or
push
stos
call
aaa
xor
push
insb
jg
mov
mov
xor
imul
xor
dec
xchg
imul
cltd
lahf
cld
rorl
idivl
out
les
cmp
xchg
xor
imul
pusha
add
sub
out
repz
aam
fldl2t
sarb
cwtl
mov
ss
rcll
mov
add
stos
mov
nop
icebp
lret
mov
push
in
sbb
lods
xchg
or
icebp
mov
repnz
dec
lcall
pushf
push
sti
lea
cmp
popf
daa
add
dec
loope
stc
and
fwait
stc
sarl
popa
sub
in
cmp
leave
or
insl
psrld
rcrb
ret
lods
popf
sub
jo
movsl
jecxz
imul
ljmp
fiaddl
xchg
popf
mov
aam
int3
je
inc
cs
fadd
int3
pop
leave
cmpsb
and
je
dec
lahf
mov
test
dec
out
pop
cli
repnz
inc
pop
push
je
test
pop
fistpl
popf
mov
ljmp
mov
push
repz
xor
adcl
stc
adc
inc
in
cmpsb
pop
mov
push
jg,pt
xchg
test
aas
mov
loop
loope
cli
push
add
mov
aad
les
gs
mov
cmc
addr16
sbb
dec
sub
and
mov
or
xor
inc
cwtl
sub
mov
mov
jae
add
dec
fs
insl
and
rep
out
std
xlat
dec
ret
notb
dec
ljmp
enter
jne
insb
pop
jb
lahf
mov
push
cltd
mov
xor
out
cmc
push
sub
stc
xchg
jmp
mov
rcll
dec
fiaddl
xlat
sbb
jns
shll
add
lock
outsl
in
mov
mov
mov
adc
aad
dec
cmp
sbb
xchg
mov
int3
cwtl
cld
mov
cli
xchg
and
adc
mov
jo
call
sbb
cmp
adc
jno
push
lcall
or
rcl
xchg
and
imul
push
cmpb
sub
cwtl
mov
nop
push
rcl
jg
xor
cltd
push
add
notb
or
sbb
insb
pop
push
cltd
mov
pop
aas
mov
jo
mov
dec
pop
pop
ljmp
push
push
and
xchg
push
popa
movsl
movb
scas
mov
xchg
loope
aad
mov
inc
or
popf
repz
sar
xchg
xchg
or
les
or
arpl
xor
and
xchg
negl
mov
leave
lret
jg
movsbl
mov
int3
dec
ss
sbb
addl
aad
jbe
fimull
in
sarb
or
jno
insb
out
in
aad
call
rcrl
outsb
mov
addr16
or
sub
and
mov
sub
jmp
popf
xchg
mov
leave
int3
cmp
push
inc
mov
inc
cmp
mov
mov
adc
xlat
inc
push
push
popf
shlb
nop
into
mov
mov
mov
mov
dec
xchg
sbb
andb
inc
cmp
rcll
maxps
pop
andl
loop
inc
xlat
lods
lcall
inc
xchg
ret
pop
pop
push
movsl
stc
iret
iret
popa
addr16
cmpsb
mov
cmp
cmp
adc
loopne
fimuls
das
push
pop
ja
mov
add
in
outsl
ja
popf
add
and
push
lret
fsts
out
sbb
dec
je
mov
sbb
insl
sahf
or
ror
out
adc
je
and
in
dec
fsubp
mov
and
adc
ret
cltd
adc
clc
leave
and
js
aam
xchg
mov
cltd
insl
std
pop
push
xchg
sub
inc
dec
dec
fsubrl
pop
mov
sub
js
sub
outsb
push
add
aaa
dec
shrb
jne
js
sub
pushf
or
and
nop
repnz
pop
lds
lret
fcompl
and
sub
adc
pop
mov
imul
ss
or
mov
xor
rorb
fs
je
cmovs
inc
sub
das
xor
repz
sarb
fbld
aad
imul
in
notw
bound
int
lds
or
cmpb
inc
scas
jecxz
stc
sbb
inc
pminub
loop
lahf
enter
and
jae
mov
repnz
sub
adcb
popa
xchg
pop
insb
in
mulb
idiv
mov
and
ljmp
jge
push
sbb
adc
faddp
stos
sub
enter
and
lret
out
insb
in
dec
dec
lock
mov
push
push
fiaddl
mov
xchg
test
hlt
in
pop
and
mov
inc
sub
push
sub
jmp
lock
push
push
insl
cmpsb
jo
push
fcomp
add
jecxz,pn
add
push
push
ret
dec
pop
rorb
or
jge
mov
pop
ja
icebp
ljmp
sbb
ss
sbb
xchg
cmc
ja
bound
scas
xchg
adc
jbe
aad
hlt
add
outsl
cmpl
pop
mov
mov
test
cltd
jne
or
cmp
out
cld
mov
sub
aad
int3
mov
mov
cvttps2pi
and
je
adc
sub
shlb
in
xchg
movsl
lea
pop
xchg
or
aaa
jecxz
in
or
iret
push
mov
xchg
mov
leave
roll
and
pop
adc
and
add
cmp
xchg
int3
fildl
jg
and
leave
mov
fstps
adc
sahf
mov
mov
out
pop
mov
nop
push
mov
mov
sbb
xor
jmp
cmp
lock
dec
inc
xchg
jmp
cmp
adc
iret
test
xchg
jns
fsubl
lret
dec
adc
test
ret
loop
sub
std
call
clc
cmpsb
clc
icebp
scas
mov
lods
adc
xchg
sub
or
pop
sbb
andl
add
adc
dec
fmuls
xchg
pop
adcl
outsl
dec
out
add
std
dec
push
loopne
sbb
fs
dec
mov
mov
add
lahf
aad
xchg
lret
fistpll
stos
jge
jo
sub
ror
lds
loopne
dec
cmp
adcl
insl
xchg
pop
sahf
add
test
push
inc
mov
inc
subl
pop
arpl
adc
shl
push
jnp
xchg
add
or
incb
arpl
adc
sub
pop
inc
scas
push
popa
int3
pop
mov
add
xchg
aas
sbb
popf
xor
xor
or
push
lret
adc
gs
push
outsb
xchg
orb
pop
out
mov
sbb
push
mov
push
and
push
mov
mov
lahf
lea
loop
push
mov
pop
scas
cmp
jne
sub
mov
mov
dec
cmp
xchg
add
xor
inc
stc
xor
mov
ja
int
xor
imul
xchg
insb
pop
push
pop
adc
mov
hlt
call
mov
hlt
sbbb
mov
pop
push
dec
sub
and
sahf
xchg
pushf
pop
and
sbb
cmp
enter
les
mov
aaa
mov
mov
jno
stos
int3
cmpsl
cmpsl
mov
mov
movb
and
xchg
int
fdivrs
outsl
dec
inc
bound
mov
lds
test
inc
daa
nop
jne
mov
cld
mov
adc
and
add
cs
gs
inc
xchg
mov
cmpl
or
or
and
fsubl
sbb
aaa
arpl
out
push
adc
push
clc
push
mov
hlt
push
shlb
pop
xchg
pop
mov
cmp
add
mov
xchg
adc
popa
aaa
push
loop
sbb
ficoml
aad
add
pop
stc
xor
in
push
jle
insb
xlat
fisubl
sbb
xchg
xchg
xchg
outsl
cmpsb
lret
loop
cmc
sbb
jg
push
imul
rolb
lret
iret
inc
loop
add
js
xchg
gs
jns
cmp
inc
sahf
clc
dec
lds
cmp
sub
fmuls
xchg
cmp
fstp
fdivs
insl
dec
aam
addr16
lahf
gs
cmp
inc
xchg
push
push
pop
insl
xor
pop
movsl
aas
inc
sub
dec
outsb
inc
and
scas
or
outsb
sahf
repz
inc
or
shlb
punpckldq
loope
sbb
jbe
jecxz
insb
repz
mov
inc
add
call
cmpsl
rclb
sbb
pushf
pusha
dec
arpl
jl
repnz
insb
ficoms
cmpsb
cwtl
hlt
jl
add
mov
adc
jb
daa
sti
sbb
add
sub
push
test
and
xor
mov
jo
dec
mov
das
dec
cmpl
xchg
xor
loop
dec
fcomps
push
xchg
aad
inc
imul
xchg
ja
loop
dec
fldln2
cltd
scas
fidivrs
push
lahf
sub
mov
test
loopne
lock
adc
push
inc
or
cltd
dec
mov
in
loope
lods
repz
sbb
cmpsl
xor
mov
inc
int3
je
and
sbb
imul
fisubs
rcrb
fwait
pop
scas
ja
jmp
popf
fsubrs
loope
dec
mov
movb
cmp
repnz
push
movsl
enter
jg
dec
int
arpl
mov
or
in
pop
and
push
push
shl
mov
or
add
sbb
cmp
bound
iret
loopne
mov
xchg
inc
jo
std
js
gs
jp
pushf
pop
loop
sub
popf
push
imul
xchg
out
mov
or
xchg
xor
cmp
mov
jno
and
daa
int
lods
test
arpl
je
sbb
and
xchg
arpl
adc
cmpsl
xchg
pop
lret
incl
rcr
mov
scas
in
outsb
out
or
push
adc
sti
ds
mov
rolb
cmpsb
imul
leave
mov
pusha
push
lahf
or
cli
mov
mov
cmpsb
or
in
jmp
mov
push
or
jno
push
adcl
out
cmpl
ds
sbb
lahf
xor
scas
cmpsl
mov
jle
stos
xorps
mov
push
push
stos
ds
mov
jge
fnstenv
ret
or
pop
outsb
mov
pushf
jae
insb
out
and
fadds
pop
loop
jne
aam
loopne
ds
inc
mov
fsubl
fldl
out
sbb
push
nop
xor
movsl
push
scas
stc
xlat
push
xchg
xlat
sar
push
and
cltd
insb
sbb
movsb
xchg
scas
mov
xchg
orb
add
cmp
xchg
cmp
or
clc
out
popf
loop
icebp
jle
pop
lahf
pop
subb
lock
push
push
mov
cmpsb
cs
inc
dec
push
enter
test
fwait
mov
sub
push
lds
inc
pop
pushf
clc
push
push
lcall
lods
cmpsb
jno
mov
push
sub
in
sub
inc
cmpsl
cli
mov
movsl
jl
mov
outsb
cmp
jmp
test
mov
jecxz
pushf
mull
pushf
jp
les
and
fidivrs
add
lret
jge
cli
adc
jns
adc
stos
add
fiaddl
xor
push
xchg
sbb
aam
pop
dec
mov
jns
push
add
add
jmp
pop
bound
cltd
cmp
xchg
inc
lahf
mov
xor
movsl
cltd
mov
pushf
push
mov
ret
mov
xchg
das
jnp
jo
je
adc
mov
cwtl
xor
adc
insb
cmp
sbb
pop
fidivl
or
dec
popf
lds
adc
inc
int
xor
sbb
inc
jge
mov
filds
int
aaa
pop
inc
and
xchg
add
mov
ds
mov
jecxz
cmp
roll
out
xchg
test
sub
aam
nop
mov
lods
adc
add
jmp
xor
xorb
idiv
call
rcrb
lret
data16
and
mov
add
push
jne
pop
adc
xchg
insl
jl
or
pop
push
push
setns
inc
xorb
sub
ljmp
and
or
movsb
inc
jo
push
mov
or
inc
loope
pop
xchg
into
loop
popa
les
and
out
sub
pop
or
roll
das
int3
push
hlt
enter
mov
loope
loop
pop
mov
pop
iret
inc
shll
out
jle
loope
into
inc
mov
push
dec
hlt
lods
xor
fwait
cld
xlat
imul
scas
ljmp
cmp
mov
xchg
je
js
push
xlat
xor
jb
xchg
inc
jmp
sbb
popa
in
mov
mov
inc
or
mov
pop
loopne
add
jge
jns
loopne
movb
lcall
in
out
cmp
jne
in
inc
imul
jp
cmp
adc
addb
out
push
out
lods
push
popf
xor
shl
fisubl
push
adc
cmp
or
das
cli
or
mov
ja
icebp
pop
inc
mov
mov
or
add
pavgw
pop
jg
xchg
sub
popf
jl
push
std
fbstp
jg
mov
dec
mov
adc
push
mov
xor
scas
js
and
fwait
jns
les
sub
in
mov
push
clc
fcomps
or
leave
call
aas
push
rorb
jge
ret
out
push
fcomps
mov
sbb
cwtl
popa
in
mov
jo
popa
jmp
gs
mov
xor
daa
sub
mov
sub
fidivs
call
jne
orb
inc
and
insl
sbbb
dec
rcrb
and
shll
mov
push
sarb
insl
mov
stc
fstl
imul
int
mov
push
inc
jmp
sbb
test
test
roll
outsb
lea
mov
dec
loopne
icebp
fsubrs
mov
jo
pop
mov
pop
sahf
sub
xchg
mov
mov
sub
addr16
movsl
loope
dec
xor
pop
add
iret
sub
cmp
dec
lahf
loop
mov
in
xor
inc
repz
popf
or
jno
fisubl
stc
les
scas
imul
out
xor
mov
imul
stos
popf
out
adc
add
push
ss
sbb
jo
aam
sub
inc
xor
in
sbb
xor
xchg
push
push
pop
sub
aas
sbb
mov
adc
or
jg
push
scas
fcmovnb
dec
ss
jae
sub
shll
mov
data16
xchg
cwtl
push
adc
cltd
fdivrs
inc
adc
stos
xchg
test
lret
inc
pop
mov
sub
aad
xor
mul
fwait
xor
pop
loop
nop
sub
jp
sar
cmp
pop
sub
sub
adc
jle
cld
loop
mov
xor
push
push
jl
pop
ja
push
push
pop
imul
lock
int3
mov
hlt
hlt
sub
add
xchg
jbe
cmp
hlt
ljmp
or
repz
fwait
push
mov
sbb
das
fistpll
xchg
sti
mov
cmp
mov
es
or
sbb
repz
repz
cmp
jg
xchg
addr16
stos
out
lret
out
xor
mov
sub
call
scas
repnz
sbb
jnp
cmp
cmp
mov
sub
pop
addr16
adc
or
sub
inc
or
subl
lahf
dec
inc
xchg
insl
and
imul
or
sahf
stc
xor
imul
xor
inc
stc
stc
loopne
imul
pop
mov
fidivrs
call
inc
aas
inc
jb
cmpsl
popa
mov
cltd
inc
sbb
xor
lret
add
iret
push
jo
mov
mov
add
and
mov
fdivl
dec
rolb
xor
in
jl
xor
pushf
loopne
xchg
mov
mov
ret
arpl
test
xor
add
out
xchg
push
stos
daa
lods
mov
pop
sub
iret
rcr
dec
imul
vunpcklps
mov
aas
test
mov
xlat
outsl
cmp
scas
dec
cmc
and
pusha
jl
out
add
sub
dec
add
mov
mov
adc
and
jp
inc
push
or
testb
or
xchg
push
outsl
push
dec
shlb
test
aam
flds
repz
icebp
test
leave
outsb
les
fsub
lds
and
sub
mov
std
push
lock
or
xchg
push
aad
push
je
pop
jns
popf
xor
insb
aaa
or
cmp
adc
aaa
push
pop
mov
sbb
popf
pop
mulb
and
push
fdivs
inc
adc
out
andb
leave
int3
pushf
jno
dec
xchg
jg
fs
cltd
or
fscale
outsl
jl
in
xor
and
sub
sbb
pop
les
mov
xorb
fldz
jge
fidivrs
dec
cmp
mov
popa
sub
bnd
js
and
pusha
push
pusha
fstpl
and
adc
test
xchg
daa
jp
out
mov
jne
xchg
and
mov
ds
ret
out
xchg
push
sub
gs
mov
mov
test
pop
xchg
in
adc
xchg
nop
adc
sahf
imul
push
push
cmpsb
jmp
ret
push
bound
stc
int3
adc
jp
scas
pop
sbb
adc
out
stos
sahf
or
cli
dec
or
push
mov
lcall
pusha
ret
and
adc
add
and
hlt
push
hlt
out
mov
ja
xchg
cmp
fdivp
clc
lds
and
jmp
jge
mov
addr16
faddl
test
cmp
mov
push
xchg
cltd
push
jecxz
mov
fiadds
push
add
and
mov
je
cmp
stos
clc
lock
adc
jns
xor
xchg
aam
in
cmpsb
imul
mov
lret
cltd
jb
test
push
repz
push
divl
xchg
cs
jmp
rcl
pop
xchg
scas
lret
shrl
lods
les
xlat
jle
insl
dec
mov
fcoml
or
push
xchg
subl
mov
insl
enter
iret
fsts
test
mov
popa
jle
jge
rcll
into
xchg
pop
loop
mov
insl
lret
rolb
mov
jge
push
mov
lods
in
jnp
loopne
xchg
adc
jmp
xchg
mov
xchg
stc
push
shrb
mov
add
mov
ret
mov
jnp
shlb
push
ret
ja
adc
adc
dec
mov
push
dec
dec
cmp
loop
push
aas
sub
xchg
adc
movsl
iret
pop
lods
loopne
insl
ss
sbb
push
or
fisubrs
mov
hlt
out
dec
inc
push
std
cli
lret
mov
adc
lds
inc
in
mov
cs
push
mov
inc
int3
rdpmc
fucom
push
int3
dec
leave
lahf
clc
insl
fidivrs
loopne
and
jge
push
or
std
je
sub
pop
adc
xchg
cmp
std
lahf
cli
arpl
push
xor
std
pop
rclb
dec
jbe
ret
adcb
hlt
sub
pop
mov
push
push
es
fsub
fstps
arpl
cwtl
fwait
in
std
movl
mov
out
insl
mov
aaa
mov
or
in
repz
loop
ret
jbe
or
jo
and
lods
push
inc
jo
push
sahf
lahf
outsb
jge
xchg
mov
int
mov
add
inc
scas
cwtl
icebp
movsb
mov
lret
iret
xchg
fs
enter
aas
fnstenv
cmp
rol
lcall
push
xchg
or
sbb
adc
out
lcall
mov
mov
add
add
cs
or
dec
xchg
xlat
xor
xor
out
ljmp
adc
mov
enter
mov
pusha
or
add
in
ret
fwait
push
nop
cmp
push
cld
stos
outsb
xor
rol
and
fdivrs
mov
or
popa
mov
rcrl
imul
mov
mov
outsl
nopl
adc
scas
stos
jp
aad
mov
out
mov
pop
inc
pusha
mov
fbld
cmp
jge
imul
arpl
sbb
cmp
cmp
jo
imul
daa
iret
mov
mov
clc
sub
ja
imul
test
sbb
pop
mov
test
dec
pop
add
shll
mov
rorl
xor
sti
lret
lcall
pop
dec
add
sti
mov
cmp
rcrb
mov
pop
adc
sbb
outsb
frndint
pusha
movsl
jle
or
dec
imul
fnsave
xlat
mov
mov
pop
popf
adc
push
sti
cmc
xor
movsl
cmp
je
pop
cmc
pop
adcb
jbe
inc
loope
sub
dec
add
movsl
mov
mov
pop
adc
add
xchg
jecxz
pop
addr16
stc
mov
popa
or
dec
and
in
mov
aad
pop
push
loopne
std
mov
mov
decl
fs
sbb
mov
push
sub
fldenv
jge
xlat
adc
push
lcall
sti
xchg
push
icebp
pop
cltd
shlb
rorl
mov
jns
mov
jne
mov
mov
jb
out
add
lcall
cltd
je
add
jl
clc
mov
out
loopne
mov
jg
fstpl
dec
dec
sbb
xchg
pop
jp
jnp
cmpsl
popl
mov
stos
mov
inc
dec
movsb
loop
cld
shll
out
push
test
imul
dec
adc
mov
mov
fisubl
fwait
dec
movsb
sub
inc
xor
cmp
leave
fildl
enter
pop
loop
adc
add
dec
jle
or
inc
push
iret
lret
push
sbb
pop
js
push
and
imul
fdivr
jns
and
xchg
mov
int
mov
xchg
stos
sbb
or
xchg
stos
mov
push
lock
je
rcl
pop
add
xchg
pop
mov
pop
cmp
dec
jo
scas
sbbl
outsb
mov
or
and
lcall
repz
fcmovb
and
not
in
add
push
dec
scas
mov
sbb
fsub
sub
inc
bound
push
jns
pop
outsb
cs
xlat
push
fadds
stos
jnp
xlat
lock
es
insb
rorl
pop
sub
xor
lret
out
push
lock
ljmp
pushf
inc
scas
xor
sbb
notl
xchg
out
jnp
push
adc
mov
and
mov
imul
push
cld
mov
imul
cmp
in
cli
mov
mov
out
sub
sub
sub
out
pop
or
out
push
lcall
cmp
movsb
mov
push
outsb
sub
or
hlt
popa
mov
insl
ret
loope
xchg
add
pop
pop
push
andb
inc
scas
adc
test
outsl
add
cwtl
scas
sbb
inc
aad
ss
or
jb
pop
movsl
movsb
sarb
cmc
sbb
xchg
sti
sub
mov
cmpsb
test
cmpsl
dec
sub
pop
push
jle
outsl
jecxz
push
and
jle
insb
jge
add
decb
add
test
shl
mov
push
insb
lret
rorb
mov
mov
sbb
rcrl
mov
push
popf
es
pop
adc
xchg
push
sub
and
pop
push
dec
sti
pop
adc
or
in
xlat
mov
insb
jbe
iret
sbb
lock
stos
mulb
or
pop
push
xchg
aaa
cmp
andl
test
jbe
push
fyl2x
jle
lods
lret
out
outsl
jne
inc
dec
testb
int
in
rcr
es
in
mov
mov
hlt
sbb
int
sbb
mov
addr16
enter
popa
mov
shll
mov
negb
stc
pop
pop
adc
jmp
sub
mov
lahf
adc
and
adc
add
je,pt
adc
cmpsl
out
in
jecxz
or
mov
mov
loopne
inc
int
xchg
data16
xchg
inc
orb
xor
mov
mov
and
mov
jbe
sti
and
int
in
ficoml
insb
xor
jae
jne
mov
adc
filds
mov
clc
addl
push
or
or
jbe
pop
adc
mov
dec
push
cmp
push
in
pop
insl
cmp
aad
mov
mov
pop
decl
cltd
adc
and
fists
sub
jmp
dec
mov
adc
test
outsl
and
or
adc
inc
and
out
ret
scas
inc
in
leave
cmpsb
and
cmp
xor
in
int3
add
inc
lods
jo
ret
cltd
int3
mov
mov
sub
push
or
adc
adc
pop
sbb
les
pusha
jmp
mov
testb
mov
pop
ljmp
sub
mov
repz
outsb
inc
mov
inc
or
jmp
call
ja
and
sbb
xor
push
push
mov
cwtl
or
or
mov
or
lea
popf
notb
or
sub
lds
xchg
cmc
jecxz
mov
in
mov
jg
lods
stos
pushl
aam
add
les
sbbb
cli
lret
rcll
into
daa
repz
jne
mov
xchg
jne
aam
into
cmp
xchg
ss
std
sahf
jmp
or
pop
jb
jmp
push
jmp
in
pop
mov
into
aad
pop
xor
or
mov
aaa
aas
and
nop
cmp
pop
pop
sub
aad
xor
push
scas
es
int3
dec
iret
mov
iret
test
imul
ds
xlat
mov
push
dec
xchg
adc
sub
pop
es
mov
pop
je
hlt
scas
mov
pop
or
jnp
sarb
pop
testb
mov
pushf
mov
cmp
jl,pn
ret
lret
jnp
or
sbb
inc
sub
dec
leave
sub
mov
lds
outsl
push
mov
loop
sahf
mov
push
and
gs
ret
push
mulb
dec
pop
shl
icebp
into
inc
repz
fsubrl
sbb
mov
jl
inc
divl
jle
nop
sbb
fisttpl
push
gs
movntq
push
rcr
push
fs
hlt
push
insb
sbb
mov
mov
cwtl
loopne
push
movsl
sbb
adc
jb
xor
lds
mov
add
xor
iret
icebp
mov
cmp
and
nop
xor
push
inc
pop
xor
addr16
jno
mov
lods
xchg
mov
mov
fs
fbld
enter
mov
fsubrl
pop
mov
cmp
mov
enter
adc
pop
lcall
es
dec
dec
mov
xchg
sbb
adc
dec
dec
xlat
pop
icebp
ds
ljmp
je
jne
sahf
pop
dec
dec
leave
push
das
imul
sub
add
inc
movsb
mov
mov
divl
mov
test
dec
push
int3
ds
pop
loopne
dec
lret
out
mov
mov
sbb
cs
sub
sbbb
inc
or
movsl
jae
sti
mov
xchg
jne
sub
icebp
pop
rolb
loop
lea
cmp
insl
dec
pop
mov
fcomi
dec
inc
leave
rolb
sub
inc
fisubl
inc
mov
loope
loopne
cmp
push
push
add
fwait
pop
movl
add
sbb
into
mov
push
cmp
mov
pop
push
ja
or
bound
push
push
sub
xchg
or
pushf
jo
add
cmp
iret
roll
mov
adc
rcrl
mov
test
imul
dec
sub
lea
fstp
sbb
fadds
sub
rcll
insb
popf
sbb
ljmp
into
aas
bound
orb
inc
sub
sbb
sbb
call
icebp
cs
mov
adc
out
xchg
cmp
lahf
lret
dec
cmp
test
push
xor
cli
pop
es
mov
add
ljmp
hlt
ret
dec
add
sbb
neg
mov
xlat
lret
outsl
push
imul
fisubs
frstpm(287
jns
repz
mov
jg
jnp
inc
outsl
sub
faddp
mov
pop
std
xlat
insl
insl
jnp
dec
sbb
in
adc
cmpsl
call
idivl
outsb
ret
mov
mov
sub
sbb
test
pop
sbb
jl
cld
xor
nop
push
jnp
iret
pop
xchg
jb
inc
jmp
pop
jl
lret
sbb
repnz
adc
push
dec
mov
push
iret
shrb
shlb
hlt
jns
inc
add
mov
test
xor
test
push
push
or
dec
arpl
mov
lock
movl
add
das
outsb
sbb
sarb
incb
in
jne
lock
inc
xlat
popa
nop
jl
add
lods
pop
test
cmpsb
mov
ret
sbb
push
das
mov
mov
push
daa
cltd
outsb
mov
insb
dec
mov
lea
stc
mov
std
nop
sbb
inc
jbe
and
lods
fdivl
mov
js
gs
push
jb
mov
dec
or
or
xchg
int3
loope
mov
sub
cmp
cmp
cmp
jg
lods
sub
movntps
mov
sbb
ljmp
lret
gs
in
icebp
fmuls
lcall
or
fcmove
mov
test
dec
loope
mov
fsubrl
ds
flds
xchg
jg
pop
push
aam
cmp
inc
push
pop
cmp
mov
jb
add
inc
pop
cmp
jp
push
in
andb
je
pushf
cmp
enter
inc
ljmp
xchg
or
es
ds
rcrl
pop
int
push
stc
or
pushf
mov
mov
hlt
jle
xchg
outsb
xchg
pushf
dec
icebp
es
shrb
std
stos
sub
jmp
xchg
adc
jmp
fbld
dec
shr
dec
dec
mov
rol
mov
mov
gs
cs
mov
and
xchg
loop
dec
popf
test
jnp
lcall
lods
add
popa
jno
pushf
jnp
cwtl
add
pop
push
add
lods
fnstenv
rcrl
popf
inc
xchg
and
lea
addr16
pop
in
andl
xor
and
iret
mov
jae
mov
scas
fstpt
mov
push
es
ds
icebp
mov
pop
add
clc
jecxz
in
ret
xor
and
clc
insb
or
out
stos
pusha
gs
cltd
jns
adc
or
loopne
pop
push
popa
scas
outsl
jp
push
ret
stos
jg
enter
je
test
jno
lods
rolb
ret
cld
sub
and
mov
int3
hlt
mov
data16
push
push
stc
jns
dec
or
mov
cmp
pushl
pop
or
or
add
insl
ja
jge
int3
pushf
ss
push
xorb
out
rcll
cmpsb
jae
nop
fcoml
jecxz
mov
push
mov
push
jecxz
pop
cmp
test
pop
jp
es
push
cmpsb
aaa
adc
jae
lods
inc
inc
or
adc
cmpsb
inc
cli
sar
in
nop
mov
jno
sbb
into
dec
ljmp
cmpb
xor
sub
push
fdivr
sbb
fsubrs
into
sbb
popa
call
jge
jns
loope
aas
cmp
das
fildl
mov
sahf
xchg
mov
nop
call
push
leave
pushf
push
outsb
or
mov
stos
dec
xchg
lds
insl
xchg
lods
mov
push
add
mov
and
fwait
cltd
fdivr
into
xchg
add
xchg
pop
sbb
mov
or
filds
repz
dec
jl
push
repnz
dec
scas
add
jmp
ret
xor
sub
sbb
and
mov
ror
pushf
xchg
inc
mov
cmpsl
in
shrl
pop
sbb
xchg
sub
aaa
mov
push
inc
shrl
enter
push
clc
push
push
mov
mov
pop
fistpl
imul
shrl
xchg
pop
fstps
int
and
test
test
aad
out
adc
mov
jno
mov
ljmp
insl
data16
xchg
cmpsb
pop
fiaddl
or
cmp
mov
lcall
sub
push
pop
ja
adc
mov
xchg
adc
sbb
cltd
xor
call
mov
repz
sbb
or
test
movsb
fsts
jnp
sub
sbb
push
scas
jne
jge
les
dec
ficomps
or
fstpt
fldt
cmp
pushf
pop
pop
add
lods
dec
add
clc
cmp
ljmp
imul
pop
ret
mov
in
lods
push
mov
or
cs
stos
fisttpll
and
add
subb
or
dec
aas
das
xchg
and
lcall
xor
leave
inc
es
rorb
insb
xchg
mov
mov
fdivrs
insl
rorb
sub
or
mov
scas
leave
push
andl
xchg
push
shr
mov
out
inc
or
scas
test
cmp
dec
push
test
loope
add
out
cmp
or
or
in
iret
jb
daa
mov
jg
add
gs
cmc
adc
push
punpckhdq
loope
pop
xor
mov
xchg
inc
mov
add
ret
insb
sub
mov
adc
sbb
ds
daa
insl
repnz
cmp
out
sbb
inc
push
lret
mov
fstenv
inc
cmp
fmull
mov
mov
push
cmp
push
mov
and
popf
mov
ret
xchg
fisubs
leavew
inc
aas
andb
sbb
lods
mov
adc
add
or
sub
xor
push
push
test
pop
enter
lret
fcoms
frstor
ss
or
popa
incb
sbb
int3
xchg
lret
pop
scas
mov
sub
ja
push
rcr
sbb
rclb
loope
pop
lret
fldt
divb
xchg
and
lea
sub
jg
lods
cmc
mov
addr16
add
pop
out
ljmp
in
sbb
xor
dec
push
xchg
jo
dec
pop
out
mov
xor
push
fwait
inc
adc
rcrl
sub
mov
jle
mov
jne
sbb
mov
out
pop
test
popa
add
addb
sub
pop
push
loope
or
xor
cmp
sbb
cwtl
hlt
sub
fs
sbb
orl
mov
mov
pop
jecxz
dec
ljmp
pop
cmpsl
in
inc
sbb
cmp
push
je
int3
lahf
movsb
mov
or
insl
mov
xchg
cmc
adc
sub
mov
mov
ljmp
jnp
sar
std
dec
cmc
cmc
cli
aaa
ljmp
sarb
pushf
outsl
lret
dec
xor
inc
loopne
dec
es
lock
inc
jl
dec
pop
adc
adc
mov
out
inc
outsl
sub
jge
fs
insl
mov
mov
test
int
xor
inc
xlat
outsb
sub
cmpsl
sbb
cmp
pop
sbb
scas
mov
mov
mov
call
mov
or
imul
imul
or
jae
xchg
imull
add
loopne
mov
lret
xchg
fnstcw
and
cmc
mov
adc
push
mov
mov
test
aaa
movsl
add
pop
or
sub
and
daa
push
inc
cli
push
cmpsl
mov
mov
popf
mov
loop
push
sbb
dec
or
inc
std
adc
jno
or
lcall
jle
jg
fidivrl
push
xchg
subl
test
sub
je
jne
dec
mov
xchg
cmp
mov
or
dec
mov
shlb
cmpsl
repz
mov
or
or
jns
mov
sti
pop
cmp
add
xlat
xchg
lods
inc
mov
out
mov
mov
loope
test
pop
test
sbb
cmc
mov
push
sbb
inc
aaa
bound
inc
xchg
dec
xor
xchg
lock
arpl
xor
cmpsb
push
and
rcll
mov
inc
mov
ret
out
pop
lods
popf
das
mov
sub
ljmp
dec
pop
xchg
cmp
shlb
inc
shll
gs
in
dec
out
bound
sub
in
adc
ret
lock
inc
jp
shlb
aad
mov
in
lcall
test
push
sub
and
mov
and
xchg
test
popf
imul
inc
lea
pop
pop
mov
fs
repnz
mov
orb
mov
cmpsl
mov
mov
push
xor
hlt
aad
pop
xor
lock
cs
ret
push
lds
aas
inc
test
xor
lahf
dec
movsb
mov
out
cmpsl
sti
jl
sbb
out
xor
xor
lds
mov
les
pop
or
sub
jmp
or
xchg
mov
cmp
lret
adc
cmp
inc
sbb
push
push
lret
cmpsb
cmp
mov
push
dec
pop
lea
in
call
icebp
jmp
inc
cmp
xchg
ds
or
ljmp
les
popl
fldl
pop
insl
mov
ret
jecxz
icebp
idiv
fs
push
repnz
fstpt
sbb
jp
mov
adc
repz
repnz
cmc
hlt
adc
call
imul
mov
test
rcr
mov
cltd
sbb
out
fs
fldenv
in
mov
dec
jnp
test
popa
test
inc
add
xchg
lods
adc
cmp
shl
jl
out
outsl
mov
pop
and
lcall
xchg
imul
inc
aam
mov
cli
jp
or
jb
out
push
sbb
sub
jb
adc
cltd
lret
das
js
arpl
mov
fsts
movsb
pop
pop
daa
xchg
jbe
jns
cmp
pop
adc
pop
test
std
adc
es
daa
insb
sarb
inc
fmuls
dec
jp
sub
jmp
jecxz
ret
insl
mov
inc
std
shlb
mov
push
adc
lea
and
cld
or
aam
inc
ljmp
xor
add
popa
adc
sbb
fsubl
bound
add
in
rolb
jno
fistl
sub
push
mov
push
cmc
mov
mov
outsb
ret
movsb
adc
lret
push
sub
adc
inc
lret
fidivrl
mov
and
xchg
into
out
out
or
dec
sub
mov
or
cmpsb
push
test
divl
shlb
mov
out
and
mov
xchg
dec
mov
lret
add
out
outsl
lahf
lods
cmpsl
xor
push
mov
pop
fidivs
jo
sub
scas
mov
dec
pop
cmpsb
pusha
push
xchg
movsl
out
jecxz
in
test
fwait
mov
dec
ds
mov
dec
mov
in
cmp
push
add
pop
or
and
mov
imul
fwait
mov
add
xor
add
or
mov
jbe
movsb
adc
fwait
and
fimull
pusha
int3
je
jmp
or
fcmovbe
sahf
xlat
push
or
xor
or
fbstp
pop
stos
push
jge
popa
cmc
jge
ss
out
mov
gs
int
xor
scas
rcrb
lock
xchg
gs
test
sbb
mov
fisubl
and
mov
shl
jp
sbb
push
ds
xchg
cltd
outsl
pop
mov
fdiv
xchg
lcall
and
dec
in
dec
mov
cmpsb
push
cs
inc
sarl
loope
rorb
mov
sbb
push
fistl
sub
icebp
loope
xchg
lods
sub
mov
mov
pop
jmp
int
jmp
xchg
ret
clc
jg
xchg
cs
dec
shl
enter
shrb
loop
adc
xchg
fbld
lahf
add
xor
add
jnp
add
dec
dec
icebp
xchg
inc
dec
adc
or
adc
jbe
and
aam
dec
sbb
sbb
mov
push
push
addr16
push
jle
movsb
sub
movsb
lock
jmp
xchg
cltd
iret
xchg
test
xchg
dec
popa
dec
test
ljmp
add
inc
cmp
aas
and
test
mov
or
cwtl
arpl
jno
cmp
stos
test
cmp
and
sbb
cltd
int
xor
push
outsb
push
dec
fistps
adc
push
daa
sbbl
aam
in
leave
sarb
jmp
icebp
daa
int3
jnp
jmp
cmpsl
fucompp
sbb
sbb
test
data16
out
test
js
sti
rcrb
int
sub
push
test
movsl
mov
shr
aas
mov
dec
imul
mov
sub
testl
pop
and
imulb
jno
bound
aad
insl
insl
and
xchg
lods
cmpsl
pop
iret
lcall
ljmp
mov
insb
add
imul
mov
mov
cmp
jae
xor
mov
cmp
cmp
test
sub
mov
divb
sub
or
or
push
inc
ljmp
std
xor
cltd
jmp
jne
lret
cltd
aaa
push
shll
fs
mov
xor
mov
sub
cmp
fs
ljmp
negb
push
pop
cmp
sbb
gs
xchg
lcall
jbe
scas
in
and
cli
idivl
xorl
loop
loope,pt
mov
adc
inc
dec
cwtl
int3
mov
fidivs
inc
rcl
or
out
mov
sahf
mov
addl
sbb
outsb
fwait
lds
clc
xchg
cld
outsb
mov
push
xor
inc
push
and
stos
or
sbb
mov
es
mov
repz
negl
sub
mov
cmpsl
enter
xchg
fisttpll
mov
ret
inc
or
leave
xchg
outsb
fstpt
ja
jb
jge
call
imul
sub
dec
xor
out
sub
pop
dec
mov
xchg
pop
dec
xor
stos
mulb
mov
cltd
repnz
inc
push
mov
sbb
ljmp
or
test
es
movsb
repnz
repz
imul
shrl
cmp
out
fldcw
and
fistl
ss
mov
pop
fwait
out
jl
add
sub
mov
sbb
je
xchg
or
mov
aam
outsl
xchg
or
outsl
ret
lcall
in
das
push
jp
jo
add
dec
push
jne
aaa
xchg
dec
data16
sub
pusha
and
cmpsl
sub
popf
inc
add
in
or
les
into
cmp
aam
out
or
add
sbb
dec
insb
adc
xchg
cli
mov
add
fstpt
repz
add
mov
xchg
push
dec
jns
hlt
cmp
pop
test
pop
or
shrl
loope
or
mov
xchg
push
arpl
rorl
rorb
sub
mov
mov
dec
jnp
mov
cmp
sub
mov
mov
insb
les
into
dec
aaa
xlat
je
sub
xchg
dec
push
jae
movsl
dec
out
mov
jge
cmpsl
fwait
hlt
fsts
cmp
pop
stc
pushf
fildll
call
dec
mov
pusha
cmp
das
icebp
pop
sahf
negb
sbb
xor
std
inc
fs
imul
sub
rol
mov
add
sbb
sbb
push
cmpsb
jbe
addr16
add
mov
pop
jmp
jo
or
lret
xchg
leave
pusha
xchg
push
jecxz
popa
popa
mov
insb
xchg
test
jl
daa
daa
jne
sbb
fwait
ret
mov
mov
lcall
pop
sub
push
inc
jmp
push
and
jge
push
outsl
cmp
cli
pusha
sbb
adc
xchg
leave
mov
loop
sbb
sub
gs
xor
inc
stos
out
sub
xor
jnp
jb
je
test
cmp
bound
movl
mov
cmp
xor
add
cmc
cld
ljmp
or
xor
adc
cwtl
push
sub
adc
jns
push
mov
mov
filds
stc
cmp
sahf
imul
sbb
rolb
aam
pop
or
xchg
ret
push
dec
divl
ret
lret
pushf
xchg
mov
inc
stos
out
cmp
push
int3
dec
xchg
js
aas
sub
test
imul
sub
xchg
or
subb
xchg
stos
push
xor
and
sub
mov
cmp
add
adc
rcrb
pop
jl
push
popa
or
jg
in
sbb
sub
ret
dec
or
in
shll
push
push
cmpsl
xor
icebp
mov
xor
mov
cmpsb
cmpsl
jne
cmpsb
inc
rcr
jge
or
in
sub
test
xchg
cld
xchg
into
push
cwtl
subb
fcompl
fs
and
mov
mov
je
repnz
pop
mov
aaa
out
imul
out
jmp
inc
pop
sub
bound
cli
cwtl
ljmp
gs
dec
imul
fdivrl
std
mov
and
and
inc
int
sbb
cmp
push
addb
push
lds
in
dec
jl
mov
adc
sahf
dec
adc
mov
in
loop
jne
push
loopne
mov
shr
pop
fsubrs
xchg
loop
aad
sbb
fsubl
roll
add
xor
pop
fsubr
jg
mov
sbb
lahf
lcall
sub
lcall
xor
xchg
arpl
int3
sti
dec
fidivrl
mov
mov
addr16
daa
pop
bound
jno
cli
pop
cwtl
mov
hlt
mov
and
pop
fcmovne
stc
push
shl
in
xchg
push
cmp
inc
test
mov
cld
or
cmc
cmp
jg
test
out
dec
ljmp
test
adc
rcrb
push
lods
out
shll
loop
jae
sbb
jb
sub
ds
fwait
add
xchg
mov
inc
movsb
pop
imul
inc
dec
icebp
imul
test
popa
push
sub
adc
inc
dec
je
sub
fisttpll
cltd
stos
xor
cltd
insb
leave
out
cld
fimull
cmp
pop
cmp
adc
lret
adc
ljmp
fwait
dec
jbe
or
test
dec
mov
movb
xchg
enter
xchg
mov
movsb
xchg
xchg
push
cmp
jo
in
dec
and
dec
sub
sub
sub
inc
or
mov
mov
inc
sbbl
xchg
nop
fnstsw
xor
xchg
jae
movsl
popa
shrl
stos
in
sahf
mov
or
lods
and
insl
lock
or
int
imul
loop
cmp
inc
mov
jecxz
mov
loop
je
cs
dec
xchg
mov
nop
or
fldt
inc
add
popa
fnstcw
fdivp
jle
mov
sub
and
aaa
gs
shl
mov
pop
mov
popf
push
insl
ret
and
sub
xchg
sub
cmp
pop
mov
xor
inc
push
mov
or
mov
pusha
cmpsb
xchg
fists
jecxz
cmpb
pop
cmp
imul
idivb
jmp
lcall
cs
and
mov
push
add
sub
hlt
bound
add
cmp
daa
push
into
cmp
xchg
or
loop
fstpl
lods
enter
sbb
insb
jp
cmp
sbb
clc
and
cs
add
lahf
mov
mov
xchg
lods
stos
mov
out
jno
mov
pop
mov
dec
add
out
in
cs
jp
pop
inc
imul
xor
out
mov
fstp
push
push
adc
in
test
xor
inc
test
cwtl
sahf
in
inc
xor
mov
dec
loopne
fcompl
sub
jge
dec
push
loope
sub
cmp
add
out
fs
in
mov
aam
add
andl
pop
mov
xchg
lea
dec
std
in
mov
mov
out
inc
push
arpl
push
sbb
mov
mov
not
mov
jne
jno
pushf
lds
repz
mov
mov
sub
nop
dec
or
inc
push
mov
stc
mov
cs
inc
xchg
divl
roll
inc
mov
xor
daa
in
fs
aam
daa
mov
cmovnp
push
or
or
bound
stos
mov
pop
sbb
int
cld
push
mov
add
mov
mov
ljmp
in
movsb
mov
test
cld
dec
popf
mov
testb
push
sub
cwtl
mov
jne
cmp
cld
or
jmp
out
ja
jno
add
std
into
lds
xor
sahf
mov
push
mov
fdivs
sub
test
xchg
mov
insl
imul
push
outsb
pushf
out
mov
cld
addr16
fistps
sti
adc
je
test
lcall
ja
and
xor
lods
adc
mov
outsb
lds
jecxz
mov
add
insl
adc
xchg
rcr
faddl
push
shlb
and
lea
into
test
loop
xchg
mov
ds
xchg
popa
xchg
ljmp
dec
testb
push
out
inc
stos
add
aas
mov
enter
push
mov
test
mov
test
test
into
jle
scas
sbb
inc
mov
insb
fildl
pop
ja
adc
pop
push
dec
jmp
jns
pop
xlat
divb
adc
add
pop
sahf
jno
dec
dec
add
push
sub
adc
lods
imul
push
into
lock
mov
test
inc
pusha
inc
jp
dec
sbb
cmp
into
int3
mov
lcall
sahf
xchg
inc
outsl
movsb
jg
in
insl
daa
push
pop
in
out
sub
shl
insb
stos
inc
push
xor
xor
jecxz
stos
icebp
dec
shrl
movb
adc
or
mov
inc
pop
xor
adc
repnz
cli
test
jp
ja
dec
movsb
negb
xlat
dec
mov
cmp
dec
cwtl
inc
add
cmp
in
filds
outsl
pop
fisubs
fsubl
jl
leave
rol
stos
test
mov
test
cmp
testb
ret
imul
or
fwait
in
call
push
pop
xchg
jp
cmp
push
jmp
sbb
pop
dec
lcall
decb
or
fiaddl
cmp
mov
inc
xchg
rorl
stc
push
cmp
jne
push
test
push
lds
cli
hlt
dec
ja
out
fcomps
stos
mov
daa
cmp
repnz
mov
pop
loop
imul
add
mov
mov
xor
jo
fimuls
mov
rclb
jnp
mov
loop,pt
imul
add
es
cmp
mov
jmp
scas
adc
clc
sahf
arpl
out
cmpsb
es
jae
mov
push
fildll
jbe
hlt
out
out
push
leave
cld
rclb
outsl
ds
xchg
cmp
int3
jge
clc
es
fwait
and
inc
scas
les
je
cmp
inc
adcl
dec
mov
sbb
jmp
call
sarl
sub
repz
inc
icebp
xor
test
out
mov
mov
add
push
mov
das
fbld
ss
lret
lret
xchg
std
pop
adc
push
jno
negl
out
rorl
jmp
idiv
jmp
and
fldenv
repnz
and
mov
scas
cmp
xchg
je
out
ljmp
cs
and
push
pusha
dec
std
jmp
add
gs
in
lock
xor
outsl
adc
mov
xchg
fistps
sahf
je
test
and
dec
jle
in
xchg
add
sub
mov
inc
push
mov
repz
cmpsl
orb
sub
mov
aad
xor
jb
fbld
mov
pop
and
fisubs
ret
add
out
cli
pop
push
dec
mov
or
sarl
xchg
mov
test
sbb
or
loope
push
out
dec
and
leave
test
inc
add
jge
sahf
mov
icebp
lock
add
mov
push
icebp
sbb
test
insl
fcoml
out
xchg
shrl
jbe
mov
sti
pop
sub
daa
int3
lods
bound
pop
insb
mov
dec
mov
jno
push
fisubl
inc
cmpb
or
push
icebp
nop
shlb
movsb
and
inc
jecxz
xor
inc
nop
mov
push
lods
imul
sarl
rolb
push
fstpl
mov
xchg
mov
in
jne
sbb
cmp
cltd
mov
sbb
lock
mov
cli
adc
push
test
sti
pop
outsb
and
test
adc
sbb
test
or
aaa
dec
adc
adc
pop
pop
adc
cld
in
pop
addb
lock
add
and
jne
out
nop
outsl
push
push
xchg
dec
mov
out
mov
pop
fucom
lret
xor
je
es
arpl
cli
hlt
or
fisubrs
dec
in
inc
and
inc
scas
jge
popa
or
stos
mov
inc
fildll
pop
dec
sub
cmp
ds
mov
flds
paddsb
cmpb
mov
mov
xor
out
aad
insl
jecxz
out
xchg
cmp
sub
dec
insl
jb
popa
dec
pop
cmp
scas
or
cmpsl
nop
pop
push
jns
cmc
add
mov
inc
pop
scas
sahf
pushf
add
dec
mov
movsb
xor
aam
lods
addr16
mov
mov
and
call
and
push
mov
cld
mov
aaa
aaa
mov
mov
push
add
dec
inc
push
popf
lea
cmc
adc
mov
jno
dec
xor
push
pop
js
insl
sbb
mov
imul
divl
jmp
in
jbe
sti
shlb
mov
adc
adc
jmp
les
dec
mov
push
int
push
imul
or
mov
xchg
or
dec
add
orb
fsubl
ret
repnz
mov
mov
rclb
lea
sbb
push
iret
sbb
insl
out
sbbb
sub
cmpsl
repnz
dec
pop
jp
sti
pop
pusha
pusha
inc
adc
xchg
sahf
stos
push
fsubr
lahf
loope
add
mov
sbb
cltd
mov
mov
adc
add
xor
cltd
xchg
add
add
push
push
mov
mov
sub
jne
pop
repz
push
ret
sahf
push
mov
dec
out
in
push
and
mov
bound
jno
jnp
dec
cmpsb
out
or
iret
cld
jb
mov
jecxz
int3
push
mov
mov
stos
pop
pushf
push
leave
mov
cmpsb
adc
loopne
cmc
or
pop
into
mov
jnp
or
add
add
pop
cld
xchg
scas
pop
push
outsb
lahf
inc
cs
popa
ficoml
stos
xchg
jo
adc
loopne
loopne
ljmp
mov
ficompl
fwait
push
and
aam
inc
enter
inc
jecxz
add
mov
mov
push
and
adc
js
cmp
lcall
or
jno
rclb
mov
sbb
add
and
ds
je
or
ja
orl
stc
cmp
adc
out
xchg
out
in
dec
lods
xchg
fucomp
imul
test
scas
mov
lock
test
push
inc
aaa
jecxz
jmp
jns
ret
pop
push
jno
ret
mov
push
lds
pushf
icebp
adc
cli
into
movsb
inc
mov
adc
lahf
xlat
loope
push
sahf
aaa
aam
jmp
dec
es
xlat
out
jae
inc
xchg
dec
push
jecxz
inc
jecxz
jae
adc
add
inc
push
imul
addr16
fsubl
rcll
std
notl
push
hlt
test
loop
es
das
inc
mov
mov
lds
mov
ja
insb
mov
iret
sbb
mov
imul
xlat
inc
mov
scas
add
lahf
iret
mov
and
aaa
mov
pop
ror
jo
fiadds
inc
lahf
inc
pop
inc
out
push
mov
js
mov
push
lock
push
daa
movsl
js
inc
ds
shrb
fsubrl
mov
fdivrs
and
sahf
jmp
cmpsb
sbb
pop
or
in
sub
in
ret
fnstenv
xlat
test
dec
sub
jmp
xchg
cmpsl
cmp
hlt
iret
mov
imul
and
fcmovnu
or
and
pop
outsb
sub
adc
clc
add
jle
test
in
push
and
fcmovnbe
xorl
and
sbb
je
lret
not
bound
shll
sub
pop
mov
pushf
cmc
mov
inc
mov
int
imull
mov
jg
addr16
mov
xor
test
cmp
test
or
cmpsb
or
adc
sbb
or
inc
push
dec
sub
pop
mov
sbb
repz
push
pop
cmpsl
lock
test
ret
rcrl
addr16
add
xchg
out
and
stc
inc
and
dec
lods
xor
jns
jg
movsb
fnstsw
ret
and
stos
push
cltd
sahf
mov
jb
xchg
dec
mov
jge,pn
mov
imul
mov
aam
and
pop
call
xor
shrl
and
ds
xchg
push
dec
inc
inc
and
mov
cld
mov
dec
or
subl
sub
sarl
lcall
pop
add
fbld
fneni(8087
insb
cmc
mov
lret
scas
dec
jecxz
xchg
add
fs
and
inc
mov
mov
jns
adc
adc
xlat
inc
dec
sbb
frstor
or
pop
push
nop
ds
adc
ret
rcrl
shlb
adc
push
xor
pusha
pop
mov
jno
mov
test
call
int
inc
cmc
in
mov
lcall
xchg
and
leave
pop
jg
xor
push
sub
mov
adc
mov
xchg
mov
repz
dec
pop
pop
pop
out
addr16
pusha
push
mov
lods
push
inc
cs
jbe
scas
add
popa
mov
or
roll
aas
shrl
inc
adc
sbb
xchg
cmp
mov
test
jl
xchg
mov
pushf
es
xchg
mov
fwait
xor
sbb
add
leave
mov
inc
push
xor
insl
pop
out
sbb
popa
roll
adc
fnstenv
iret
fldenv
mov
sub
fimull
cmp
inc
dec
xorb
add
push
cmp
push
pop
mov
sub
sbb
sbb
in
jae
pop
mov
test
test
cld
cmc
jp
test
mov
mov
insl
cs
nop
xlat
dec
lahf
xchg
add
fsubr
das
xchg
pop
mov
add
xchg
out
rorb
push
movsl
jl
out
sti
cmpsl
daa
xchg
jecxz
mov
cmpsl
movsb
vcvttss2si
push
fcom
sbb
stc
insb
ret
mov
fdivrs
add
dec
rorb
fisttpll
add
inc
std
popf
rorb
leave
ret
dec
bound
inc
arpl
aam
into
push
sbb
xchg
sub
pushf
test
xor
sbb
inc
je,pt
xor
and
out
push
xchg
or
shr
xchg
push
insb
adc
cltd
mov
xchg
adc
sbb
jle
out
sbb
jp
stc
push
or
scas
ss
xchg
pavgb
jg
fstpl
and
inc
js
rcrb
inc
mov
sub
mov
rorb
adc
imul
pop
adc
test
das
adc
xchg
mov
xchg
push
lds
jb
pop
add
stos
mov
loope
cld
ret
cld
xor
std
jp
cmp
sbb
inc
das
imul
xchg
cmp
mov
sti
xor
jecxz
pusha
sahf
rolb
cmp
xchg
out
mov
nop
fs
clc
push
and
xlat
pop
mov
mov
jns
xor
in
xchg
aas
dec
mov
iret
loop
incb
push
nop
sbb
xor
xor
repnz
cmp
sbb
xor
not
pop
addb
lret
fninit
xchg
sub
ja
inc
test
scas
sub
cmc
pop
push
ss
xchg
pop
fdiv
loope
push
mov
add
sbb
cmp
dec
xchg
imul
push
nop
push
sbb
je
mov
lret
outsl
add
orb
adc
xchg
out
clc
inc
sbb
icebp
inc
aad
mov
xor
cmp
stos
jle
imul
push
xchg
ficoms
call
cwtl
shlb
iret
or
idiv
adc
jns
xchg
mov
rolb
pop
push
sbb
fnstcw
push
test
movb
int
call
mov
jp
push
loope
mov
and
into
orl
clc
inc
pop
cltd
and
es
mov
imul
mov
aad
mov
adc
jno
jmp
mov
push
sub
and
repnz
andl
rorb
ds
sub
mov
adc
mov
xlat
xchg
imul
outsl
adc
out
je
or
js
mov
testl
loopne
aam
add
aad
repz
fcmovnbe
and
imul
push
push
fisttps
mov
add
pusha
cmpsl
ret
in
push
pop
push
pop
dec
push
inc
int
add
fs
inc
enter
andl
out
out
xchg
popa
add
mov
ss
fnstsw
mov
leave
lods
scas
pop
lods
lret
inc
adc
loop
imul
adc
data16
scas
jnp
push
mov
cli
sub
xchg
mov
jnp
sahf
in
stc
icebp
pop
jnp
std
nop
bound
push
fisttps
xchg
jl
xor
mov
out
sbb
and
mov
std
xor
icebp
push
mov
dec
add
shll
shr
and
sbb
pop
sbb
xor
std
pop
leave
xlat
or
sub
and
gs
sbb
or
bound
mov
sti
je
push
les
add
or
ficoms
gs
mov
adc
xor
inc
or
lret
ret
push
mov
push
vmread
jo
dec
mov
jl
jnp
cli
xchg
xlat
xchg
mov
mov
insb
and
cmp
sub
xchg
ds
test
push
jnp
in
sbb
add
add
ss
cli
movsl
mov
into
jno
nop
dec
inc
daa
add
cwtl
xchg
mov
jbe
dec
es
lea
sbb
sub
lahf
jbe
add
addr16
xchg
call
push
fcomps
adc
xchg
dec
dec
shll
mov
sub
jo
adc
jnp
xlat
or
call
mov
in
sarl
xchg
pop
sub
repnz
adc
hlt
in
xor
lahf
mov
jo
mov
pop
jecxz
data16
in
ret
pop
cld
jp
push
ds
mov
test
test
aam
and
aam
xchg
push
pop
pop
or
fadd
pop
dec
cmp
push
mov
inc
jno
xchg
ret
fsubp
mov
cmp
xor
adc
and
jno
xor
xchg
shrl
cmc
inc
cmp
and
and
test
xchg
std
hlt
testb
sub
mov
hlt
sti
ss
aam
fsubp
push
stc
xchg
negl
push
or
jmp
inc
xor
mov
cmp
rorb
sub
outsb
int3
or
cltd
stos
sub
lcall
jecxz
add
sti
pop
adc
pop
and
cs
ret
mov
add
repnz
xor
sub
xor
stc
stos
enter
movsb
leave
pop
in
fbstp
pop
fistpll
arpl
loop
rorl
cmpl
paddq
push
and
sbb
jp
cwtl
mov
pusha
inc
sahf
div
scas
mov
orl
je
cltd
jno
push
movsb
aas
cli
fcoml
fisttps
and
xchg
inc
cmp
cmp
fs
jb
mov
sbb
sbb
and
dec
jp
mov
repnz
outsl
ja
cwtl
rcr
into
jnp
inc
mov
mov
push
cmp
sahf
jl
clc
add
fld
pop
jl
and
jb
cmpb
dec
and
leave
lret
mov
or
jle
jg
xor
bound
pop
dec
mov
adc
popf
icebp
jle
push
call
mov
inc
jge
std
pminsw
in
movb
mov
call
sub
and
push
in
mov
dec
push
int3
fstpt
ja
leave
pop
aad
jb
cld
sub
xor
sbb
xchg
xchg
fs
xchg
mov
in
loop
enter
sbb
pop
cltd
ljmp
dec
xchg
jne
lds
jno
inc
fldt
imul
pop
loope
and
inc
mov
cmp
orb
incl
adc
sub
iret
and
insb
ja
and
leave
out
jl
mov
pusha
lahf
xchg
lods
popf
mov
loopne
jno
lea
cwtl
nop
adc
dec
aaa
sbb
jns
jnp
push
mov
sub
and
add
cmp
pop
xchg
stc
pop
add
popa
push
mov
loopne
push
nop
xor
iret
sub
and
arpl
leave
in
jno
in
push
imul
sbb
je
push
xchg
xchg
push
add
push
mov
pop
call
inc
mov
jge
pop
lahf
filds
push
mov
test
int
scas
ljmp
je
clc
add
aaa
xor
sub
mov
outsl
cli
push
aam
inc
bound
loope
call
mov
mov
sub
pop
sub
xor
insb
adc
or
icebp
pop
adc
sbb
pop
mov
repz
mov
inc
lahf
filds
daa
cmpsl
in
mov
xor
inc
pop
std
aaa
int
mov
lea
mov
stos
addr16
pop
cmp
inc
push
mov
dec
fcmovnbe
mov
xor
stos
loopne
xor
inc
cltd
sbb
push
jnp
dec
call
cmc
in
push
mov
jo
lock
inc
xchg
xchg
mov
or
cld
mov
adc
ret
add
sti
leave
ljmp
or
lret
adcb
jne
inc
scas
lods
xlat
add
jae
or
and
or
mov
or
rcrl
insb
out
push
ja
addr16
mov
insl
dec
fwait
daa
cmpsb
dec
mov
lahf
arpl
xor
push
and
inc
repz
mov
lcall
ss
lahf
pop
jne
xchg
xlat
sub
repz
sbb
add
in
jo
jecxz
pop
adc
jg
sahf
dec
push
in
fwait
jbe
jp
mov
cmp
push
inc
jp
imul
ret
pop
mov
movsb
fstpl
fistpll
push
mov
pop
dec
xchg
mov
ror
lret
push
sbb
cmp
adc
lret
ret
cmc
mov
add
or
rcrb
test
lock
inc
and
pusha
pop
sub
mov
xchg
jne
xchg
std
dec
repnz
xor
imul
mov
sub
loope
ret
out
jecxz
push
cmp
sbb
adc
ja
mov
jp
insl
jmp
imull
inc
jbe
sub
rclb
pusha
mov
pop
sbb
fsts
fcmovu
push
cmp
dec
sarl
test
lea
cmp
sub
mov
sub
mov
shll
cmp
pop
mov
out
cmpsl
inc
fisubl
mov
mov
adc
ljmp
push
mov
push
fistps
cmpb
xchg
and
add
dec
mov
aam
xor
lret
mov
sub
insb
xor
movsl
jnp
cmpsl
xor
jl
adc
mov
lods
ljmp
push
mov
sbb
inc
movsb
xchg
mov
and
push
fnsave
hlt
nop
xor
subl
and
iret
sbb
mov
addb
push
shlb
filds
pop
dec
sbb
and
push
cwtl
mov
cmp
cld
xchg
out
pop
mov
mov
test
mov
and
pop
adc
mov
jno
ds
lret
jns
or
jecxz
sbb
adcl
insl
xorl
mov
loopne
cli
sahf
rcll
xchg
rcll
mov
popa
push
pop
inc
adc
stc
sub
sub
sbb
repnz
pop
xor
daa
xchg
push
add
inc
xchg
cmp
inc
cmpsl
or
stos
fs
jo
jecxz
push
inc
or
sbb
loop
lea
pop
test
mov
fldcw
xchg
and
dec
dec
sub
fs
data16
adc
cmp
xchg
cmpsb
mov
mov
shll
add
mov
je
jg
or
hlt
jmp
sbb
dec
aaa
jge
jle
jnp
xor
sub
jns
lahf
sub
mov
sbb
jmp
orb
leave
xlat
ret
pop
xor
push
pop
mov
pop
jp
shl
pop
ffree
push
dec
dec
ror
in
inc
je
and
imul
xchg
in
push
xor
cmp
mov
and
cmp
mov
enter
in
les
bound
es
adc
movsb
fdiv
mov
fisubrs
ljmp
push
addb
lahf
cld
jo
test
xchg
sbb
in
mov
xchg
xchg
jno
and
sar
stos
adc
stos
clc
data16
sub
push
sub
imul
xor
adc
mov
sar
repnz
daa
jg
ror
push
movsb
inc
push
imul
add
lret
shrl
fadds
dec
stc
or
pop
or
sahf
ljmp
jecxz
cli
sub
cmp
out
shll
push
jle
rcll
mov
push
inc
sti
sbb
pop
adc
pop
jno
inc
lcall
imul
dec
jnp
es
sbb
adc
add
adc
or
mov
sbb
xchg
adc
jbe
test
push
jno
push
sub
lock
int
out
test
pushf
push
aam
rorb
cwtl
xor
dec
dec
shl
sub
inc
jmp
sbb
mov
out
pop
cmp
xor
lcall
icebp
jle
jge
adc
xor
loopne
mov
shll
jbe
inc
out
ret
mov
and
jne
cmp
add
aaa
or
sub
xchg
add
pop
dec
adc
leave
inc
pop
lret
sub
adc
gs
mov
dec
jge
fst
sub
push
sbb
jno
lret
lahf
cmp
outsb
popa
mov
or
es
test
or
cmp
out
inc
hlt
adc
insb
mov
inc
ret
add
mov
shll
mov
mov
lahf
add
jg
aaa
adc
push
xor
sbb
rcrl
xorl
xor
sti
aam
sub
xlat
lcall
mov
out
cld
sub
fidivrs
outsb
imull
neg
adc
arpl
cmp
mov
sahf
lods
pop
add
jl
xchg
dec
push
cmp
inc
mov
nop
std
mov
mov
cmpsb
arpl
cwtl
push
arpl
mov
insb
fildll
cmc
sti
es
mov
inc
adc
sbb
dec
mov
cs
jns
mov
outsb
mov
test
iret
inc
xor
jnp
inc
les
add
xchg
xorb
rcrl
cmp
sbbl
push
mov
ficoms
add
pop
fwait
jae
push
cmp
cwtl
inc
lcall
sub
cld
lcall
into
or
sbb
jns
sub
pop
mov
loop
aad
and
icebp
or
xlat
mov
push
out
cld
jmp
les
jns
test
mov
test
adc
jno
ficoml
fidivrs
adc
xor
pop
dec
cmpsb
and
je
icebp
cmp
cwtl
out
dec
mov
rol
repz
ret
int
cmp
mov
push
cmpsl
movsl
mov
jecxz
je
mov
add
push
cmp
shll
inc
push
push
outsb
shl
xchg
cltd
adc
xor
mov
mov
xlat
pop
in
add
and
ficoms
add
enter
mov
or
enter
das
js
mov
js
add
and
push
mov
fdivr
popa
aad
sbb
push
jmp
mov
andl
or
inc
leave
stos
xchg
jmp
insl
xlat
je
jo
jbe
idivl
fstl
mov
jl
nop
add
xchg
inc
subb
rol
ljmp
stos
xchg
sub
pop
pop
dec
iret
dec
sbbb
jbe
movsb
sbb
sub
sarb
jnp
gs
mov
jmp
and
mov
and
xor
sbbb
stos
cmpsl
mov
in
add
xchg
lea
leave
out
push
aam
fs
ret
js
inc
lret
stos
mov
jo
xlat
mov
dec
fsubr
jl
movsb
jg
xchg
out
daa
int3
nop
and
mov
or
pop
lahf
and
pop
rolb
negl
div
xor
mov
fsub
repz
cmp
push
cmp
add
mov
test
lcall
stos
mov
cmp
bound
mov
push
mov
or
pop
lds
mov
pop
test
cmp
jnp
or
insl
ja
mov
scas
inc
dec
rol
dec
sbb
dec
adc
rclb
sub
mov
add
xor
xchg
push
cmp
mov
roll
push
scas
mov
jmp
lods
test
in
divl
and
mov
nop
cld
data16
sahf
inc
add
test
scas
testl
sub
aam
fwait
mov
lret
insb
pop
popa
pop
aam
pusha
push
in
test
dec
cltd
mov
js
movsb
xor
xchg
xor
push
cmp
adc
rorb
xchg
or
add
fldt
out
sbb
ss
jbe
push
sbb
lock
lock
mov
lods
xchg
stos
mov
pop
test
push
push
aas
mov
pop
jno
jmp
test
jne
stos
aaa
or
jne
clc
cli
xchg
cmpsb
gs
mov
xchg
in
repnz
mov
jle
add
mov
ss
rcrl
rorl
push
add
sarl
xchg
cltd
loope
int3
mov
mov
out
pop
add
pop
sub
sub
push
xchg
testl
mov
adc
sbb
fbstp
push
mov
outsb
fwait
ret
cltd
and
push
stos
call
sub
shlb
jbe
mov
push
out
repnz
lods
imul
mov
mov
jecxz
mov
sbb
push
test
cmpsb
push
out
mov
and
or
jle
int3
mov
in
jne
mov
imul
adc
ljmp
mov
clc
dec
leave
test
dec
in
imul
xor
and
sbb
setg
jge
xchg
push
fs
or
ret
ret
push
cmp
out
and
enter
pop
adc
popa
shlb
xor
sarb
cmc
daa
mov
bound
jecxz
leave
pop
out
cltd
insl
insl
aam
adc
cld
dec
lcall
and
stc
or
lret
dec
mov
push
and
xchg
lret
insb
push
jns
pushf
xchg
inc
mov
sbb
adc
jle
call
and
outsl
and
ss
xchg
sub
and
je
cmp
outsl
cmpsl
stos
jmp
loop
xor
cmpsl
mov
in
aas
fwait
jle
and
out
push
inc
adc
jmp
scas
jp
mov
sub
lods
fwait
cmpsl
mov
inc
jp
xor
xor
adc
push
ret
or
in
jb
cmc
es
dec
loop
inc
lret
xchg
adc
movsb
push
fnstsw
out
inc
jbe
lock
gs
fdivrs
adc
pushl
add
sahf
mov
pop
xchg
push
nop
mov
adc
adc
push
inc
negl
test
enter
insb
push
adc
sub
sarl
sub
push
lret
pop
dec
mov
push
rcrb
dec
push
dec
push
fisttps
adc
in
or
movsl
sar
outsb
and
pop
fwait
arpl
pop
int3
sbbl
sub
add
sbb
daa
pop
and
sbb
xor
popf
sti
mov
int
jg
popa
mov
lods
mov
push
subl
iret
xchg
addb
loopne
enter
nop
js
sbb
inc
das
jp
fsubrs
xor
gs
ret
aam
jo
test
call
and
lcall
in
mov
cmp
jb
cmpsl
das
adc
ds
jno
lods
imul
mov
inc
aas
sbb
push
gs
push
dec
and
jnp
sbb
and
sub
adc
popa
xchg
js
inc
imul
jge
and
pop
leave
les
pop
pop
dec
popa
sbb
stos
pop
sub
test
push
adc
fisttpll
sbb
xor
ret
cmp
add
loopne
mov
push
sbb
bound
jecxz
pop
popa
outsl
shrl
sahf
aad
jmp
orb
pop
inc
pop
mov
dec
jbe
lahf
clc
and
sbb
mov
repz
mov
or
xchg
roll
inc
fisttps
or
pop
jl
pop
insb
pushf
mov
imul
icebp
dec
xchg
dec
xchg
pop
pop
popf
ljmp
sbb
ret
out
xor
insl
push
mov
sbb
ret
add
ror
sub
jbe
jns
bound
fs
fmuls
pop
les
sbb
andb
pop
lea
mov
clc
lea
push
imul
cmpsb
push
push
push
movsl
test
js
or
inc
rcrb
pop
pusha
fcmovnu
repnz
int3
int3
aam
out
out
add
jle
sarb
shrb
int3
mov
add
test
xor
add
mov
pop
into
ss
popa
mov
popa
add
push
test
imul
aas
stos
jl
lods
out
sub
cmc
imul
shll
cmpsl
aad
adc
adc
out
pop
lds
insl
inc
loope
fldt
adc
xchg
jb
aas
xchg
mov
xchg
aam
aad
mov
mov
pushf
popa
pop
stos
aam
sbb
add
adc
sub
xorl
mov
adc
ret
sahf
jo
push
xor
or
ljmp
icebp
mov
sub
pop
imul
mov
aas
into
pop
mov
xor
ret
adc
inc
push
mov
cmp
mov
mov
inc
xor
cs
push
cmp
fs
ja
push
sti
shl
stc
loopne
inc
negl
add
lahf
sbb
loope
dec
mov
pop
outsb
lods
push
adc
sub
mov
fisttpl
xchg
mov
sbb
js
rcrb
repz
mov
test
sbb
pop
popf
addl
mov
sub
mov
clc
cltd
lret
imul
cmpsb
lret
and
mov
insl
les
sub
cltd
mov
repnz
ljmp
outsl
add
inc
xor
popf
lods
test
lahf
jbe
dec
ret
nop
mov
push
clc
mov
test
xchg
jns
xchg
ljmp
shl
pop
or
std
cmpsl
pusha
jne
popa
or
imul
fisubrl
out
icebp
nop
mov
jbe
sub
sti
mov
negb
dec
mov
cltd
gs
lret
push
sar
and
xchg
pop
mov
xchg
scas
push
nop
cmpsl
push
mov
inc
ret
and
idiv
sbb
shrb
xor
lret
es
out
lret
mov
stos
jg
sub
imul
shlb
int3
jae
xchg
lds
in
stos
jns
addr16
nop
dec
add
clc
sbb
mov
jno
pop
cmp
cmc
repz
sub
fdivp
xchg
aaa
sbb
test
xor
pop
clc
lds
enter
sub
and
dec
mov
lret
mov
lock
push
mov
addr16
shr
lock
mov
fsts
push
sbb
pusha
sbb
addr16
pop
cmp
mov
pop
lret
dec
push
pop
stc
loopne
popa
xchg
sbbb
pop
std
outsb
mov
and
stc
sbb
xorb
sti
stos
or
rol
or
fsubs
inc
das
dec
outsb
ret
nopl
mov
lods
fs
cltd
subl
call
cltd
lret
push
mov
bnd
fistps
cmpsb
push
icebp
jmp
dec
jg
test
xchg
cmpsb
rol
clc
cpuid
shr
stc
jae
call
jnp
sbb
dec
xchg
das
adc
xlat
adc
addr16
cmp
xor
pop
cwtl
and
insb
in
cmpsl
xchg
test
das
xlat
adc
jp
push
fsub
sbb
ror
jae
sub
int3
insl
lods
je
repnz
stos
cs
xchg
xchg
pop
and
dec
andl
mov
addr16
push
sarl
xor
insl
mov
push
inc
cmp
dec
jno
test
mov
hlt
mov
inc
push
or
jo
jecxz
out
dec
xchg
adc
fidivl
insl
mov
adc
leave
mov
inc
cmp
in
iret
popf
adc
lock
enter
pop
jno
fstpt
mov
adc
xlat
push
les
xchg
add
or
lcall
adc
sbb
inc
sahf
stc
xchg
cld
in
dec
cli
bsr
stos
popf
push
sbb
add
sub
xor
cwtl
ss
push
inc
jecxz
and
xchg
sub
cmp
ret
pop
lret
sub
cmp
mov
shlb
in
inc
testb
shrb
pusha
mov
jnp
jno
dec
pop
xchg
lods
jns
fists
sub
addl
fidivrs
inc
neg
mov
cmpl
cltd
jbe
movsl
and
fistpll
pop
cwtl
cmp
test
mov
or
frstor
jb
pop
mov
adc
add
test
lods
mov
aam
add
hlt
iret
dec
jp
mov
scas
or
sbb
rorb
out
fs
jecxz
movsb
scas
cmp
adc
dec
cmp
orb
lcall
test
add
push
repnz
pusha
fiadds
loop
pusha
cmp
addr16
add
xchg
repz
push
in
jb
mov
push
inc
clc
push
dec
mov
in
xor
pop
les
lcall
sbb
bound
mov
out
inc
shl
inc
aad
shl
inc
and
cmc
or
jle
rol
in
adc
jge
pop
aam
int
pop
dec
out
cmp
jne
pop
ds
xchg
mov
mov
xchg
mov
insb
pop
sub
mov
sti
pop
cltd
pop
jno
sub
mov
cmpsl
loopne
xchg
pop
mov
mov
jp
sub
in
sahf
inc
add
push
adc
cmp
das
inc
dec
test
insb
jb
pop
gs
jae
mov
jb
scas
fldenv
arpl
imul
insb
cmp
outsl
lods
sbb
das
ss
push
popf
xchg
jno
sbb
mov
inc
call
sbb
mov
imul
or
call
mov
mov
sub
sub
mov
int3
lods
mov
hlt
xchg
sbb
jne
mov
lea
mov
dec
and
mov
xchg
fdivl
mov
imul
imul
xchg
fimuls
mov
xor
call
pop
xor
ss
jecxz
in
mov
iret
cmc
mov
and
fucomp
fistpll
inc
mov
ljmp
inc
imul
mov
sbb
mov
push
cmp
mov
test
inc
rolb
pop
push
test
shl
cmpsl
dec
pop
adc
in
pop
push
fwait
les
in
mov
cwtl
add
cltd
xchg
inc
cwtl
in
into
cmp
andb
mov
rclb
sbb
mov
cmp
lret
xchg
or
xchg
fisubl
jg
sahf
dec
jle
les
leave
ss
int3
sbb
and
mov
out
testb
dec
pop
jle
mov
pop
jp
or
fdivp
and
shr
movsl
mov
or
mov
push
scas
insl
clc
push
jle
int3
lods
call
mov
cmpsb
cmp
jb
in
hlt
cmp
sahf
out
push
imull
lcall
int3
inc
sub
sub
push
xor
lcall
mov
sub
xchg
stc
shl
sbb
mov
in
stos
mov
aad
mov
add
les
jne
scas
mov
std
clc
fstp
test
pop
out
insl
add
inc
mov
xorb
adc
jmp
out
mov
ret
xlat
repz
js
or
ficomps
and
dec
out
pop
pop
and
push
and
aas
adc
lock
sub
pop
add
push
orl
daa
pop
xchg
or
or
sub
loop
mov
adcb
stc
mov
sub
fldcw
les
loope
rcrl
xchg
push
sti
and
mov
push
in
aam
mov
xchg
out
fwait
test
fcmovu
pop
mov
dec
or
inc
sti
pusha
jns
loop
incl
cmc
dec
adc
movswl
xlat
aas
mov
jle
andb
repnz
les
enter
xor
or
scas
add
xchg
sub
loop
add
xchg
mov
out
adc
fisubl
sahf
sub
je
std
mov
repnz
add
inc
out
fldl
cmpb
mov
stos
sbbb
sbb
mov
add
es
cmp
xor
aad
sti
push
je
xchg
insb
repz
cld
jg
or
cmp
iret
xor
dec
cld
pop
dec
pop
inc
lahf
dec
inc
daa
cmpsl
fiaddl
test
mov
out
sub
mov
push
scas
add
mov
sub
sub
rclb
add
push
inc
adc
push
lret
sbb
dec
cmp
xchg
test
shlb
les
popa
or
lret
shlb
sti
aam
xor
push
mov
in
aam
pop
loop
cltd
jne
je
adc
loope
or
xchg
add
and
cmp
dec
cmc
mov
aas
popf
call
xor
fidivrl
jecxz
cmp
fcomps
jo
jmp
fwait
cli
inc
inc
cmp
addr16
cld
js
xchg
out
lcall
and
ja
in
and
out
nop
xor
inc
iret
lahf
pop
dec
lahf
out
out
push
movsl
jns
mov
mov
sahf
add
push
orb
pusha
js
iret
push
inc
fistl
mov
imul
int3
add
lds
cs
and
push
aam
jle
adc
mov
push
and
mov
lods
push
and
cli
mov
cli
call
aas
in
imul
xor
aaa
pusha
nop
rol
shll
pop
dec
test
gs
cmp
hlt
dec
jmp
push
sbb
int
jge
in
adc
xchg
pop
fwait
jmp
in
jne
xchg
jmp
cmpsb
inc
cmp
ret
or
mov
cmpsl
xor
mov
push
pop
insl
les
xchg
imul
aam
pop
test
mov
in
imul
sbb
adc
push
push
cmp
adc
mov
movsb
insb
shll
cmpsl
add
xor
out
jno
lahf
and
aam
cmp
movb
das
dec
fwait
aaa
rorb
into
lahf
cmpsb
cmc
xor
jae
movsl
movnti
mov
data16
add
xor
fwait
ljmp
pop
call
jmp
lock
scas
aad
cltd
inc
mov
stc
and
test
and
xchg
sbb
and
hlt
xchg
or
adc
mov
or
ret
and
push
sahf
les
jl
jle
call
iret
mov
mov
out
or
or
movsb
loopne
loope
sub
dec
dec
cmp
adc
shlb
stos
jnp
cmc
pop
lock
ja
movsb
js
sbbl
ds
lods
dec
lea
adc
loop
jl
mov
xor
lea
sbb
and
xor
ljmp
mov
cmp
mov
jb
push
add
mov
ja
insl
cmp
popf
ror
dec
sbb
inc
sete
fld
mov
insl
mov
inc
scas
sahf
cltd
out
and
cmpsl
sbb
xchg
loop
adc
shlb
jp
cmp
popf
das
rcrb
test
jae
and
ljmp
pop
stc
leave
xlat
test
lret
lods
pop
lock
dec
test
push
movsb
cmc
fwait
mov
sub
sub
fcmovb
dec
pop
sub
pop
cwtl
cmp
sti
loopne
inc
cmp
movsb
cmpsb
fistl
inc
push
jbe
mov
cmpsl
data16
std
mov
mov
inc
stos
add
orb
push
lcall
sti
sbb
mov
fistps
out
cmp
adc
movsl
and
adc
lods
jl
push
and
inc
lods
lcall
hlt
out
adc
sbb
xchg
inc
inc
inc
popl
xchg
scas
pop
adc
mov
in
add
or
cmp
cmp
xor
scas
aad
repz
aam
sub
arpl
pop
fiadds
jl
shll
xchg
mov
xchg
xlat
and
fdivrs
xor
xchg
mov
xorl
xchg
pop
jmp
cmpsl
inc
cmp
insl
sti
ret
mov
sub
rep
and
lahf
gs
icebp
add
nop
xchg
int
sub
and
mov
pop
xor
dec
rcrl
cmp
test
in
or
jae
mov
or
bound
aad
ds
pop
aas
xchg
cmp
sbb
and
cld
lahf
add
mov
mov
inc
xor
stos
adc
xchg
shrb
sub
add
lods
lret
jne
insl
mov
inc
leave
mov
fcomps
lds
lcall
mov
outsl
mov
jle
dec
jl
mov
lcall
inc
xchg
sti
icebp
sbb
enter
mov
mov
jne
fcom
add
mov
call
int3
loope
add
outsl
std
mov
ljmp
and
fmuls
or
or
ret
or
inc
inc
mov
sarl
jle
xor
cwtl
xchg
xor
cld
xchg
mov
adcl
sub
mov
add
enter
xchg
dec
or
jg
jbe
inc
call
adcb
jmp
addr16
rcr
sub
cmc
stos
adc
pop
sbb
xchg
jg
test
lods
loop
cmpb
ret
ret
roll
std
shll
jmp
jmp
into
sub
or
cmp
cmp
clc
incb
mov
insl
dec
rclb
xchg
pop
mov
hlt
mov
shll
fstpl
js
mov
je
in
outsb
jg
mov
lds
or
lock
xchg
je
pop
sub
or
sub
cmp
adc
jnp
mov
xchg
stc
ja
pushf
add
or
cli
sbb
mov
mov
roll
hlt
mov
xchg
mov
or
imul
jmp
lods
mov
iret
add
test
jb
dec
popa
cld
cltd
imul
sti
stos
mov
and
fwait
clc
fsubs
shl
inc
sti
arpl
xor
sbb
mov
or
loopne
adc
mov
jbe
std
std
pop
out
test
push
rclb
dec
adc
aam
and
push
inc
or
jne
mov
mov
mov
sbb
push
mov
dec
cmp
cli
ja
mov
sbb
jl
fyl2x
ret
popa
loopne
out
jp
out
cmp
ss
sub
xchg
stc
cmp
aad
jecxz
mov
fsub
imul
mov
pop
pop
push
in
orb
popf
stos
lret
xor
imul
pusha
inc
push
inc
lods
mov
pusha
jle
cli
outsl
adcb
je
out
lods
jle
push
push
push
icebp
jl
xchg
or
nop
pop
xchg
sar
loop
mov
scas
int
jg
and
jbe
mov
subl
fsqrt
xorb
int
pop
pop
scas
xchg
out
jl
mov
andb
pop
add
fwait
in
push
jnp
sbb
pusha
lret
movsb
sbb
lods
ret
imul
loop
in
orb
dec
icebp
add
fstpt
jl
movsl
xchg
cmp
les
ficompl
pop
lea
dec
out
ffreep
ja
jmp
mov
push
sar
sbb
jnp
adc
dec
lock
add
aad
fstpt
adc
in
and
push
and
lea
lcall
call
jns
mov
cmc
lods
and
sub
xchg
jb
inc
push
insb
push
inc
add
repz
dec
add
inc
roll
and
mov
mov
xchg
pop
scas
test
mov
xor
scas
mov
push
xchg
sbb
cmp
jecxz
test
loope
out
add
fistl
lret
stc
mov
pop
fwait
mov
or
stos
add
sbb
lds
shlb
pop
mov
cli
fwait
mov
adc
rcrb
pop
dec
sar
mov
inc
mov
sahf
in
lahf
jb
inc
fnstsw
movsb
dec
lds
ret
outsl
cs
cmpsl
or
stos
mov
xor
int
shll
movsl
cmc
lret
and
push
push
sbbb
in
xchg
cs
fcomi
movsl
aaa
cmp
xor
jae
xchg
xchg
add
sub
popf
jl
les
dec
stc
dec
negl
mov
and
repnz
mov
push
shlb
xchg
in
dec
jae
repz
decb
sahf
mov
arpl
dec
push
inc
dec
add
jae
fsubrs
sbb
daa
push
iret
add
lods
mov
inc
aas
pushaw
sbb
mov
dec
das
in
mov
out
cmp
mov
addl
or
lods
je
in
pop
andl
inc
fs
push
fcoml
fwait
loop
cld
shlb
pushf
dec
mov
mov
xchg
loopne
or
aas
aas
ret
adc
dec
dec
mov
pop
out
mov
es
loop
cmc
int
mov
test
shrb
ret
mov
out
cli
clc
scas
or
dec
ds
and
popa
adc
adc
adc
movsl
push
aad
arpl
fsubp
pop
xor
push
cmp
xchg
lret
cld
in
sarl
hlt
inc
add
shlb
xor
bound
std
pushf
add
fcomps
in
in
pop
fsubrs
push
idivb
int3
add
shll
inc
hlt
ret
add
data16
and
gs
lea
mov
test
dec
adc
dec
and
or
stc
bound
pop
aad
sub
push
sarb
pop
adc
push
jne
cmc
sub
mov
cvtpi2ps
icebp
outsb
fdivp
push
pop
imul
arpl
jl
stc
pop
sub
aad
js
push
jmp
inc
lea
int
cmpsl
and
popa
pop
mov
enter
cld
cmp
cmp
mov
cmp
subl
jno
cmc
shr
pop
xor
loope
sarl
lret
adcl
es
fsubrl
shll
dec
stos
pop
stc
loope
int
xor
mov
ss
out
int
xchg
push
jno
xchg
movsl
ret
jnp
fdivl
cmp
and
call
cmp
std
loopne
movsb
xchg
push
call
out
add
xor
nop
dec
sub
frstor
mov
mov
xchg
scas
cmp
pop
daa
les
push
nop
mov
dec
nop
inc
xor
lahf
shlb
mov
lret
shll
bndstx
sbb
push
add
push
ret
lcall
mov
jno
jl
mov
imul
mov
test
and
jge
aas
nop
add
cwtl
add
nop
aaa
cmp
sub
cmpsl
inc
cmc
adc
mov
outsb
or
adc
jb
stos
inc
xor
cmp
inc
shrl
jo
ja
int
mov
mov
out
int
lcall
cmpsl
daa
inc
insb
sub
xchg
jp
dec
jbe
gs
push
shl
sbb
divl
cmp
mov
xor
frstor
mov
adc
rolb
jae
insl
mov
mov
icebp
mov
rorl
out
jne
into
scas
das
les
xchg
inc
mov
jg
adc
dec
gs
in
adc
mov
and
dec
inc
jbe
inc
mov
adc
test
pop
xor
mov
repz
dec
lock
test
mov
cwtl
and
sti
popf
dec
dec
outsb
movsb
adc
push
adc
les
dec
pop
mov
dec
xor
mov
ficomps
mov
sti
enter
rcrl
mov
push
adc
fucom
mov
loope
icebp
mov
xor
mov
jno
and
or
xor
xor
inc
not
fcoms
incl
scas
sub
dec
push
dec
das
push
mov
cld
dec
mov
jbe
jg
pop
inc
lea
mov
lcall
idivb
testl
mov
mov
loope
addr16
lret
stc
cs
mov
adc
or
das
scas
and
pop
int3
add
in
cmpsb
mov
or
sysenter
adc
push
adc
rcr
in
inc
imul
and
jb
inc
ljmp
sub
jmp
dec
push
push
xchg
dec
xlat
subl
push
enter
lfs
pusha
outsb
pop
mov
push
jne
sub
jge
sbb
inc
push
mov
dec
push
mov
jg
xorb
push
mov
jmp
nop
add
lret
and
scas
xor
push
mov
sarl
sub
mov
jnp
std
sarb
jl
adc
shl
lds
rol
ss
mov
fcomi
xchg
mov
iret
rcrb
iret
sbb
xor
loope
add
cmp
in
sbbl
add
pop
dec
xchg
dec
mov
lahf
push
ficompl
cltd
test
or
test
pop
loop
sarl
es
lcall
sub
nop
mov
and
insb
pop
inc
lcall
mov
call
xchg
pushf
shrl
add
mov
cld
rcll
inc
js
adc
push
jge
mov
xlat
sbb
mov
rcrl
sub
pop
push
aas
outsb
jecxz
fisttpll
cmp
dec
fxch
mov
or
stos
mul
cld
iret
adc
or
jns
xchg
mov
pushf
inc
xchg
sbb
out
xchg
adc
mov
dec
mov
lods
cmp
mov
sbb
xor
and
pop
ja
movsl
mov
push
in
mov
rolb
mov
cmp
or
jl
pop
sbb
mov
pmuludq
imul
mov
xor
test
mov
push
out
sbb
stos
imul
adc
xor
insl
imul
shl
jl
outsb
or
pushf
cmp
xor
mov
fucom
rolb
test
mov
gs
mov
gs
jnp
mov
mov
or
pop
mov
das
xchg
cmpsb
das
mov
mov
xchg
popf
pop
iret
data16
adc
inc
push
lahf
push
pop
add
inc
out
repz
into
jne
mov
cld
outsb
mov
xor
das
adc
xor
xchg
pop
push
shr
sbb
adc
scas
pop
add
jo
popa
ds
xor
and
mov
jecxz
sbb
movsl
adc
pop
daa
mov
jmp
cmc
add
cmp
ss
cmp
inc
jl
pop
fwait
loop
mov
enter
les
out
int3
repz
jmp
lock
mov
mov
rorb
mov
aam
inc
adc
stos
mov
dec
mov
mov
shl
add
xchg
in
js
fildl
loop
frstor
xchg
fstpl
aam
fsts
dec
inc
mov
cmp
mov
fldt
test
xchg
in
inc
cmpsb
rol
cmpsl
sub
xor
loopne
pop
mov
pushf
nop
scas
fadds
dec
add
push
in
testb
xor
iret
das
pop
mov
int3
ja
testb
test
outsl
in
mov
insb
push
repnz
mov
xchg
mov
shlb
push
jge
movsl
push
sub
xor
cmp
scas
lock
and
dec
mov
bound
arpl
cmp
rorb
push
cmp
dec
xor
push
jp
cmc
fsubl
dec
or
mov
xchg
enter
repnz
test
lcall
dec
mov
fstps
xchg
fs
xor
dec
lcall
and
bound
testl
repnz
aaa
cmp
jg
int
pop
adc
xor
loope
subl
sahf
shlb
out
call
pop
xor
addr16
push
fistps
or
les
in
stc
xor
mov
out
mov
cmp
cmpsb
js
adc
call
jnp
or
pop
movsb
imull
xchg
add
loope
xor
pop
xchg
ds
mov
pusha
pop
movsb
loop
inc
iret
scas
xchg
push
and
pop
mov
leave
pop
loopne
xor
cmpsb
movsl
jnp
dec
mov
mov
and
gs
data16
pushf
sarl
inc
xchg
xor
movsl
cmp
xor
dec
rcll
arpl
and
xor
in
lods
jmp
lea
pop
push
lea
fldcw
and
aaa
fcmove
sbb
ds
jb
pop
in
mov
loop
or
lods
mov
mov
jnp
mov
fcmovb
mov
xchg
jbe
add
lahf
add
adc
xor
cmpsb
xchg
jmp
jge
test
or
lcall
or
xor
and
sub
push
jno
cmp
mov
rcrb
push
stos
pop
sub
imul
pop
je
ret
movsb
out
xor
roll
movsb
jge
shrl
aad
inc
stos
sub
mov
ret
out
lret
mov
aad
jno
and
inc
scas
jbe
jecxz
sar
pop
mov
ror
adc
movsb
push
ficoms
pop
or
loop,pt
pop
sbb
faddl
push
insl
pop
bound
jge
sub
sbb
adcb
xchg
out
jnp
jnp
fdivrs
jns
lods
decl
pop
std
xor
jno
les
dec
sbb
sbb
jl
ret
adc
lds
hlt
sub
pop
xorl
sub
stos
pop
sub
cmp
sub
aas
in
sarb
lret
clc
xchg
mov
lods
fadds
lods
or
jbe
dec
pop
sub
cmc
hlt
es
clc
out
adc
push
and
pop
jns
jge
xor
dec
push
mov
add
cmp
popf
mov
or
cltd
xor
out
sbb
ljmp
mov
fcompl
adcl
popa
test
xlat
xor
in
inc
lods
mov
cmc
push
daa
or
push
in
sbb
xlat
mov
iret
jl
pop
cmp
jl
call
stos
push
mov
mov
stos
xor
add
jmp
mov
rcrl
push
popa
dec
cld
lds
push
xchg
jne
fcoml
mov
fwait
mov
in
outsb
nop
mov
mov
or
pop
idivl
and
xor
or
data16
push
mov
and
adcb
cmp
shll
pop
test
cmp
cmp
lds
pop
imul
mov
repz
mov
data16
xor
and
stos
stos
icebp
jl
xchg
adc
repz
cli
push
xor
int
mov
data16
ljmp
shll
lcall
into
loopne
sarb
xchg
jl
fistpl
inc
push
dec
setbe
pop
or
push
into
sub
minps
cmp
mov
cmp
imul
add
je
xchg
popa
movl
and
into
out
in
xor
and
lds
or
nop
daa
cmc
sub
cmp
adc
clc
aam
loopne
in
loop
jns
pushf
sub
cmp
paddd
adc
pop
mov
mov
pop
and
pop
sub
stos
lret
sbb
arpl
gs
add
stos
jle
test
mov
xlat
test
dec
mulb
dec
or
jns
sbb
adc
add
inc
add
iret
test
dec
jecxz
movsl
jl
mov
sub
out
into
in
arpl
dec
cmp
adc
ret
je
sub
xchg
jp
mov
and
in
mov
leave
popa
dec
jmp
clc
adc
aas
testb
stos
cmp
xchg
aam
scas
ds
and
data16
ljmp
out
jo
test
mov
jge
xchg
dec
cmpsb
xor
ret
rcrl
roll
pop
push
and
shrl
mov
xchg
fidivrs
mov
sub
lods
decb
fldcw
sbb
mov
mov
ss
mov
add
cltd
int3
lcall
jns
cmpsb
fcoms
fsubrs
mov
cmp
iret
pop
or
sar
sbb
push
frstor
in
adcb
nop
shlb
mov
addr16
stc
dec
jbe
test
clc
mov
pop
mov
add
adc
xor
js
push
out
out
mov
pop
roll
pop
mov
clc
dec
push
sbb
cmc
sbb
les
pop
fs
insb
out
ja
enter
pop
ja
jne
idivl
add
inc
outsb
xlat
dec
arpl
xchg
cmp
mov
xor
mov
rsm
aaa
pop
std
jp
inc
cmp
xlat
fnstsw
and
fcmovnu
adc
mov
inc
js
incl
inc
cmp
cs
shrl
xchg
inc
mov
in
test
cld
lods
fsubl
fstps
inc
xor
fidivs
mov
clc
out
insb
jl
push
cmovp
lds
sub
push
lock
pop
es
cmpsb
adc
mov
inc
shll
cmp
loop
loopne
xchg
in
enter
dec
mov
jle
xor
imul
jl
fcoms
xchg
pop
cltd
pop
aas
cmp
lds
stc
int
shll
mov
lcall
in
inc
pop
xchg
std
rolb
dec
cli
pop
icebp
jnp
push
aaa
repnz
out
push
jae
mov
ficoms
push
aaa
jp
sub
push
push
jbe
cmpsb
fsubrl
dec
and
sbb
ficompl
dec
int3
sbb
popa
jns
or
mov
pop
add
or
lcall
add
fisubs
and
ljmp
ss
adc
push
sbb
lret
mov
cmpsb
add
jbe
call
adc
test
ret
fwait
mov
push
mov
jg
sbb
bound
out
les
xchg
xor
push
lds
xor
pop
xchg
shrb
lock
push
sbb
add
pushf
xorl
lds
add
xor
or
popa
jg
imul
mov
popf
cmpsl
xor
jns
xor
mov
lds
sarl
jge
int
add
int
and
inc
ja
pop
aaa
fsubrp
jbe
adc
xchg
fisttpl
inc
andl
jns
dec
mov
pop
sbb
mov
rolb
and
cmpsl
in
test
rorl
add
mov
push
jo
cmp
aad
jne
outsl
ja
adc
jmp
leave
mov
scas
rorb
clc
sbb
mov
stos
mov
xchg
ds
ret
dec
xor
adc
cld
rclb
push
ficomps
ret
adc
and
insb
vmaxsd
mov
cmpsb
push
jg
push
aas
sahf
push
sbb
mov
in
arpl
or
mov
iret
rorl
or
dec
push
mov
jl
or
ss
mov
fisttpll
jbe
dec
mov
incb
xchg
inc
imul
call
jg
jge
cs
sahf
mov
sub
nop
or
faddl
cs
pusha
mov
ja
int3
sub
fmull
in
and
outsb
or
add
stc
fisubs
add
pop
shll
mov
or
leave
cmp
adc
xor
repz
mov
dec
mov
inc
push
stos
cmovae
dec
mov
lds
jbe
cmp
pusha
das
pop
ja
into
insb
outsb
sbb
fldenv
fidivrs
imull
call
and
sbb
mov
cli
ficoml
adc
adc
lea
lret
insl
shrb
loop
lea
in
pop
pop
sbbb
ja
mov
or
and
push
cmp
shll
test
nop
fiaddl
mov
jno
or
xor
and
and
clc
mov
xchg
sub
push
sub
push
mov
movsb
into
xlat
bswap
cltd
pop
cli
push
and
inc
mov
imul
mov
loopne
push
stc
mov
mov
jle
dec
in
outsb
mov
repz
movsl
mov
xor
out
rcl
or
cmp
xor
lret
rcrl
movsl
insl
sub
shlb
and
fildll
fcomps
jno
sbb
mulps
mov
or
xor
fldenv
jle
xchg
insl
and
or
pop
push
dec
inc
inc
test
mov
mov
mov
mov
idiv
pushf
es
pusha
push
or
out
mov
stc
pop
ljmp
imul
xchg
mov
divl
aam
stc
inc
cmp
push
cmp
repnz
mov
sbb
push
call
adc
adc
out
les
or
jb
inc
lret
cmpsl
lods
mov
es
adc
int
mov
jge
nop
push
or
loope
lahf
jg
xor
dec
jo
ret
xchg
sub
fs
inc
xchg
push
dec
lret
call
mov
js
xor
pop
out
es
test
push
jns
adc
mov
mov
cmp
mov
mov
mov
out
xor
sub
jno
dec
and
test
dec
sub
xor
or
or
cmp
inc
fdivp
pop
in
mov
adc
push
sarb
xchg
leave
adc
insl
out
pop
mov
jecxz
mov
pushf
cmp
icebp
jns
test
sbb
or
out
mov
out
xchg
dec
clc
or
inc
sub
incb
xchg
add
jbe
cwtl
mov
inc
dec
pushf
call
pop
insb
pop
mov
pop
ret
add
pop
ss
cmp
insl
cmp
pop
push
pop
scas
ss
jecxz
incl
test
add
ret
and
lds
pop
xchg
mov
jmp
test
das
dec
pop
inc
mov
mov
fadds
and
sbb
mov
or
arpl
sti
push
sbb
mov
jge
xor
pop
adc
pop
jl
in
aaa
sahf
adc
pop
xor
adc
inc
sub
xchg
ret
jo
insl
pop
ljmp
pop
cmp
rcl
aam
pop
and
lods
xchg
iret
push
or
stos
cmp
adc
sub
inc
or
ljmp
sbb
ret
mov
lret
andl
fists
scas
scas
out
jnp
sbbb
es
jp
data16
ret
andb
std
std
into
mov
sahf
pop
mov
cmp
rcrb
cltd
pop
push
adc
fdivrp
movsb
adc
fxsave
inc
dec
mov
mov
loopne
dec
mov
cmp
lret
int3
or
in
outsl
mov
xchg
add
mov
je
loope
inc
aaa
cmp
cmpsl
es
inc
add
adc
scas
cwtl
cmpsl
fisubs
scas
inc
lret
sbb
mulb
xchg
cmp
ja
jle
jb
dec
pop
pop
cmp
outsb
arpl
das
lds
stc
addr16
add
pop
sub
dec
ds
jno
sub
cmp
js
add
lret
or
outsb
mov
jae
pop
jno
and
sahf
insl
insb
pop
mov
aas
cmp
sbb
mov
leave
hlt
dec
adc
insb
lods
jnp
cld
aam
sub
jbe
mov
fnstenv
inc
sbb
dec
loopne
sub
nop
jle
pop
test
dec
cs
test
push
mov
xor
jbe
push
subl
sub
dec
and
repz
inc
fwait
dec
jns
in
and
xchg
mov
lods
dec
sub
mov
fwait
add
push
in
jle
sbb
inc
out
jnp
aas
jp
add
pop
pop
imul
cwtl
mov
imul
jmp
bound
jge
lock
repz
fwait
movsl
pop
ficompl
add
imul
jno
sub
xor
push
iret
xor
sub
mov
xchg
lahf
jl
sbb
pusha
sti
and
filds
push
adc
inc
xlat
icebp
cmp
pop
pop
sbb
std
sbb
cmp
mov
fcoms
stc
movsb
stos
in
dec
pop
hlt
xor
add
adc
sti
sub
xchg
fwait
sbb
bound
stos
mov
pop
or
loop
std
sbb
bound
je
cld
xorl
xor
bound
xor
xor
mov
push
and
fdivl
repz
sub
push
add
and
dec
iret
ret
rolb
decl
add
loop
or
sbb
rclb
sahf
pushf
int
add
mov
jno
mov
sbb
loope
xor
lcall
or
cld
xchg
lret
jb
sbb
inc
dec
lock
pop
pop
xor
dec
rclb
push
jnp
repnz
pop
lock
ljmp
jg
adc
or
ret
adc
lea
out
dec
jb
imul
sub
pushf
sub
mov
jmp
into
push
aam
push
mov
or
cmp
repnz
jp
dec
repz
cmp
leave
lods
loop
les
sahf
adc
push
jb
stos
and
outsl
push
mov
xorb
inc
inc
bound
xchg
xor
stos
cld
jecxz
sbb
call
pop
mov
cmp
jge
pushf
popf
iret
cltd
out
dec
or
in
data16
mov
dec
adc
mov
push
jl
jmp
push
subb
in
movsl
pop
mov
enter
push
mov
cmp
test
lcall
cli
sbb
ljmp
pop
repz
mov
pop
sub
xchg
cmp
lds
sbbl
cmp
inc
xor
cmp
jecxz
xor
pop
or
cmp
daa
test
sub
fnstcw
pop
sahf
lds
test
scas
data16
in
rclb
or
and
cmp
movsl
sub
pop
xchg
xchg
js
arpl
shl
jp
mov
sbb
out
jae
insb
sbb
pusha
cmp
call
into
mov
pushf
xchg
and
xchg
arpl
jl
hlt
xchg
dec
imul
dec
cmpsb
call
or
add
inc
push
dec
push
das
jnp
pusha
cltd
inc
sbb
dec
push
cmc
or
idivl
push
nop
xlat
mov
or
lret
xor
mov
loopne
movl
sub
jmp
std
bnd
sbb
jp
sbb
cltd
fcmovb
jg
int
in
mov
iret
out
icebp
mov
xchg
sahf
xor
push
push
lea
adc
dec
daa
data16
pop
or
push
xchg
cli
enter
out
fcmovnb
and
xor
mov
insb
sbb
push
push
jbe
lds
mov
int
push
ret
jl
jecxz
cltd
or
stos
insl
fsubl
jnp
addr16
gs
in
int
cmp
add
inc
jae
lds
adc
push
push
inc
fwait
xchg
dec
mov
jle
cmp
pop
inc
inc
push
or
cmp
lahf
and
dec
cwtl
sbb
sbb
inc
jno
jno
cmp
rcrb
je
addr16
scas
sarl
jmp
sarb
sub
mov
pop
xchg
jmp
add
push
cli
cltd
cmp
scas
and
loopne
or
sahf
xor
add
add
mov
sbb
or
in
xchg
divb
xlat
mov
imul
mov
pusha
adc
loope
outsb
test
mov
xchg
xor
mov
jo
lret
or
inc
cmpsl
pop
adc
or
fwait
leave
ficompl
daa
lods
jp
add
pusha
iret
fmuls
scas
add
popf
push
or
push
gs
lahf
push
mov
jl
pop
cwtl
dec
fstl
and
jns
add
repz
add
dec
aad
into
push
adc
push
push
sbb
cmpsl
mov
pop
mov
xlat
test
jle
xchg
pusha
mov
pop
mov
out
and
fistpll
lcall
imul
scas
and
adc
cmp
push
adc
pop
stos
cmc
mov
pop
pop
data16
das
or
sub
xchg
adc
mov
shll
mov
push
pop
dec
lcall
addr16
loopne
mov
inc
out
sbb
pop
ja
shrl
dec
xchg
imul
sub
add
push
fdivl
leave
mov
sub
clc
or
cmp
xor
fsubr
jecxz
out
icebp
push
lcall
cltd
aad
icebp
loope
aaa
scas
dec
push
sbbb
adc
int
mov
xchg
scas
cmpsb
aas
sub
js
mov
loop
cmp
ds
sbbb
das
xor
dec
cmc
int
sub
mov
and
dec
cld
mov
clc
mov
mov
mov
push
sbb
out
jb
out
movsb
out
inc
push
rorb
cli
cs
ljmp
pop
pusha
jnp
mov
pusha
sbb
dec
movsb
pop
jp
mov
lea
adc
and
add
or
test
xor
dec
xor
cmc
jnp
cmp
outsl
or
insl
xor
and
mov
es
xor
and
adc
mov
sbb
sub
jns
testl
mov
jae
lret
pop
hlt
mov
lahf
stos
dec
jmp
mov
adc
cmp
pshufw
subb
add
xor
push
in
scas
sarb
stos
ret
jne
out
sub
xor
inc
mov
andl
fs
jl
aad
adc
inc
push
rcrl
aad
sub
or
dec
xchg
mulb
cli
in
mov
inc
loopne
jbe
add
sarb
jnp
rcll
mov
mov
and
jno
xor
mov
adc
arpl
dec
fsubl
mov
push
xor
push
pusha
mov
mov
outsl
cli
fwait
or
mov
popa
pop
sub
gs
mov
imul
mov
push
mov
lcall
movsb
pushf
aaa
mov
mov
cmpsb
daa
push
or
leave
std
mov
sahf
fs
fcmove
leave
cmp
sbb
push
cmpsl
fisubs
pop
ret
ret
sbb
cld
push
out
loop
jne
repnz
sarb
out
push
movsb
ja
inc
xchg
xchg
ja
fists
iret
ret
dec
ror
imul
lock
pop
lret
movsl
addl
xorl
out
jg
push
xchg
jb
jns
add
pop
insl
cmp
sar
inc
sub
push
inc
ss
repz
or
jp
jo
stos
shlb
push
mov
cmp
xchg
dec
mov
xor
jnp
enter
xchg
pop
mov
fs
jno
dec
das
mov
std
pop
inc
jmp
incb
repnz
dec
adc
or
insl
sub
clc
mov
xchg
shrl
bound
jns
pop
xor
fdivl
cmp
repz
push
inc
lret
push
xor
jle
jmp
scas
or
jb
jge
dec
dec
inc
out
or
or
mov
push
adc
jle
fwait
cmp
push
and
cmp
mov
push
or
bound
adc
push
popf
les
arpl
xchg
mov
fs
imul
dec
iret
ss
xchg
dec
lret
cmp
mov
ja
mulb
call
mov
lock
sub
jmp
movsl
add
sub
lahf
mov
inc
jge
fbstp
cli
xchg
popf
pop
cmp
sti
loopne
incb
or
add
iret
loope
inc
cmp
lds
test
jge
xchg
pop
mov
out
jns
xor
cld
divb
cmp
xor
sti
pop
outsl
xlat
adc
out
mov
mov
mov
out
or
mov
jns
xchg
cli
xlat
lock
mov
loopne
das
cmp
xor
pop
adc
lock
fstps
inc
add
add
dec
jmp
jmp
jg
aam
rclb
mov
loope
sub
xor
inc
pusha
jno
inc
lods
adc
fstpl
sarb
lret
pusha
or
enter
xor
pop
xor
pop
cltd
into
add
pop
jne
cmp
cmp
adc
cmp
jo
pusha
in
inc
stos
push
sub
xor
lds
outsb
inc
dec
test
sub
push
xchg
xchg
jae
pop
in
mov
bound
loope
ljmp
mov
rcr
jne
mov
fucomip
xor
push
lods
xchg
ss
and
dec
jl
or
test
outsl
cld
dec
pop
je
ror
faddl
scas
movsb
test
mov
pop
aam
lock
rcrl
pusha
mov
ds
mov
aam
ljmp
jb
jb,pn
gs
out
mov
dec
push
daa
lahf
rclb
cwtl
je
pop
in
jl
aad
out
xchg
aad
ss
sbb
sbb
push
test
jl
test
incb
sub
das
add
pop
sarl
xor
data16
cltd
mov
aad
clc
jl
fnstenv
les
loopne
pop
lods
inc
ja
mov
sub
sub
fdivrl
cmp
call
daa
sahf
leave
lods
enter
mov
fiaddl
mov
hlt
ficoml
jbe
pop
mov
and
adc
test
jo
insl
rolb
popf
mov
sub
pop
push
sti
ss
sub
mov
push
jle
cmpsb
sbb
shlb
imul
cwtl
fwait
mov
jp
ds
jno
pop
jecxz
lods
mov
sbb
mov
and
mull
push
inc
mov
sbb
xchg
jg,pt
pushf
xchg
xchg
xlat
inc
sbb
xchg
xchg
ds
loopne
add
dec
add
xor
pop
sub
lods
mov
nop
mov
out
insb
and
ss
fistl
push
shrl
sbb
or
rcrb
adc
movsb
dec
push
cmc
out
xor
ds
in
add
xor
push
xor
and
mov
or
aas
mov
add
js
jne
jmp
dec
push
push
sbb
push
cmp
bnd
mov
xor
leave
adc
test
arpl
mov
lret
mov
imul
adc
iret
scas
mov
int3
mov
lods
push
lods
cmp
iret
mov
popa
pop
addr16
das
test
je
mov
aad
sub
jae
jb
inc
mov
pop
cmc
push
adc
int3
or
add
test
fs
loopne
dec
call
add
mov
sub
xchg
xor
dec
stc
jecxz
cmp
not
test
ds
daa
call
ds
and
lcall
mov
cli
movsl
popa
pop
rclb
or
pop
adc
test
lahf
adc
mov
push
mov
sahf
rol
inc
cs
lds
xchg
xor
daa
out
das
or
outsb
cmp
adc
mov
mov
push
fucomip
ds
sbb
addr16
xor
mov
fildll
jnp
adc
scas
mov
les
xchg
xchg
daa
loop
sub
pushf
jmp
fildll
fbstp
cmpsb
jl
loope
aad
or
fistpll
movsb
loop
pushf
pop
mov
dec
popa
sarb
sbb
aam
mov
cmc
aam
clc
or
das
inc
and
stos
subb
xor
jno
xchg
in
sub
sar
test
inc
pop
rol
and
leave
seto
jo
adc
jl
in
call
jno
shll
sbbl
push
xlat
data16
add
out
adc
cld
ljmp
jns
mov
jmp
out
sbb
mov
cmpsl
in
rorl
push
out
mov
dec
add
or
add
or
dec
mov
xchg
pusha
jne
xor
and
jnp
movsb
pop
loope
out
mov
mov
dec
mov
push
push
out
cmp
dec
insb
mov
xchg
repnz
pop
loopne
leave
dec
loope
push
iret
icebp
into
aas
mov
loope
aam
dec
out
ffreep
cmc
xor
push
jo
das
xchg
mov
adc
adc
shrb
lods
loope
decl
add
push
aad
xchg
xor
in
mov
ja
mov
rolb
cmpsl
out
repnz
ljmp
popa
push
xor
lock
xor
sahf
cli
test
adc
adc
ret
rorb
rcrb
push
lds
shl
test
add
fs
aam
not
int3
test
push
lret
jns
mov
fwait
jmp
push
addr16
das
insl
jb
cmpl
sbb
and
adc
jmp
test
out
dec
ret
mov
mov
xlat
sti
and
xchg
or
mov
mov
jae
sbb
cmp
pop
sbb
lods
push
int
push
je,pn
mov
call
push
mov
je
mov
adc
or
xor
loopne
cmp
push
movsb
mov
or
outsb
add
mov
mov
pop
xor
hlt
or
leave
ljmp
es
xchg
mov
mov
aaa
sbb
in
mov
jno
iret
sub
dec
loop
lock
mov
testb
mov
ja
pop
mov
lea
mov
repnz
xchg
call
icebp
lock
rcrb
inc
xchg
test
movsl
pop
lcall
jge
push
imul
ds
pop
push
sub
xor
call
lds
push
pop
inc
movsb
aad
out
xchg
cmp
xchg
leavew
dec
or
push
sbb
push
fs
mov
and
push
push
out
cmp
jmp
jecxz
outsb
mov
cmp
and
push
mov
or
push
out
loop
jne
push
adc
and
pop
sti
cmpsl
xchg
pushf
and
movsb
aas
sbb
xor
cs
flds
or
mov
add
sbb
push
lods
adc
cs
pop
into
mov
icebp
shll
data16
cli
scas
pusha
out
das
jmp
int
lock
rolb
xor
enter
add
rcrb
sbb
fcompl
dec
cmp
subl
mov
rolb
stc
popa
or
mov
fs
notl
mov
sbbl
mov
mov
mov
adc
mov
mov
cmp
xor
mov
xchg
out
sub
push
pop
into
lds
mov
or
or
lods
pop
js
mov
xor
mov
mov
ja
sub
repz
es
addl
jmp
out
adc
jbe
subb
dec
inc
jmp
pcmpgtd
sub
lcall
and
out
fstpt
inc
sub
push
movsb
push
sbb
inc
in
test
dec
fs
cmpsl
push
sbb
fwait
repnz
inc
jo
mov
sub
insb
mov
lcall
sub
sti
prefetch
mov
push
aaa
xchg
adc
outsb
xchg
xchg
lret
sub
cmp
mulps
fcoml
imul
fdivs
pop
or
adc
and
out
add
cmp
mov
cmpsl
inc
repnz
stos
pop
xlat
mov
out
sub
cli
shl
aam
pop
scas
jo
push
fmuls
leave
add
pop
xchg
inc
mov
fisubrl
insl
mov
aas
cmp
outsb
mov
fdivrp
enter
push
adc
scas
fimuls
fs
pop
test
mov
loop
jae
cmc
add
outsb
dec
leave
jns
jmp
or
lea
dec
into
ret
inc
mov
sub
mov
mov
mov
mov
mov
push
xor
out
cs
in
mov
pop
sbb
mov
pop
pop
stc
xor
addr16
or
lods
mov
and
cmp
insl
daa
sti
sub
lea
mov
inc
jmp
fisttpll
in
stos
mov
mov
ss
push
inc
xor
add
jns
sbb
xor
inc
jno
stos
rcl
xor
bound
fwait
lea
sbb
mov
dec
xchg
notb
jnp
add
inc
das
aaa
or
push
daa
lods
inc
pop
dec
push
mov
pop
data16
add
loope
push
rcl
hlt
jns
xor
pop
jns
jecxz
cmp
jg
in
pop
or
or
push
sub
ljmp
repnz
pushf
aad
out
pop
jne
cmc
nop
movsl
cmp
movsb
push
mov
cmp
adc
cmpsb
lods
test
sbb
movsl
negl
pop
mov
mov
xchg
enter
das
and
call
mov
rcl
mov
adc
cld
popl
lds
fsubs
int
les
push
sti
xchg
push
xor
jns
cmp
adc
inc
imul
in
push
les
popf
es
in
clc
mov
xchg
or
cltd
pop
pop
sub
pop
cld
lahf
lret
jno
sti
xchg
jne
ljmp
jp,pt
dec
pop
and
or
adc
ss
lcall
or
xchg
outsl
repnz
or
jmp
mov
adc
in
push
test
adc
or
out
mov
orl
data16
sarl
mov
andl
enter
dec
xor
inc
or
cs
pop
mov
pop
dec
xor
aaa
mov
hlt
movsl
mov
and
adc
pop
adc
mov
mov
in
cmpsb
insl
mov
scas
into
sub
sub
int3
adc
adc
loop
xchg
aas
pop
ret
mov
in
pop
push
fsubrl
sbb
mov
sbb
mov
out
andb
jno
and
ja
inc
mov
int3
cmpsb
or
ljmp
jg
adc
les
mov
loope
mov
aam
jmp
push
mov
ds
xor
fmul
mov
sub
sub
xchg
int3
push
cs
mov
data16
adc
ficomps
orb
and
adc
push
pminsw
into
dec
pop
adc
and
inc
std
fcomps
xor
sti
stc
sbb
scas
dec
sbb
adc
cmpsb
decb
mov
add
fbld
std
and
mov
int3
push
jae
lcall
mov
dec
clc
inc
lock
test
jg
sub
jl
lds
cmp
mov
call
shlb
jno
mov
push
das
push
inc
mov
jmp
stos
sub
loop
or
out
imul
jg
xor
mov
shrl
adc
or
imul
push
fs
bnd
imul
cmp
xor
pop
jbe
lods
imul
inc
leave
sarl
iret
sbb
pop
inc
xor
mov
shrb
mov
hlt
or
mov
or
leave
popa
cmc
jne
xor
jns
loope
jg
cld
fs
aas
xor
add
lock
ja
mov
into
xor
fidivrl
lods
adc
push
lret
aas
fcomip
jmp
aas
sbb
cld
push
adc
xlat
push
adc
nop
pusha
and
push
scas
cld
aad
xchg
cmp
je
fs
aas
jp
and
mov
cs
dec
test
loopne
ljmp
mov
push
or
mov
inc
je
in
sarl
pop
daa
ds
adc
jae
xchg
sub
nop
rcll
mov
ss
ja
pop
adc
sub
scas
shlb
insb
inc
ret
cld
sbb
jmp
iret
call
aam
xchg
popa
pop
scas
pop
loop
ret
ret
cmp
jl
test
mov
xlat
addr16
mov
pop
push
pop
sar
mov
lods
add
adc
cltd
dec
xor
clc
ss
or
gs
lret
pop
and
xor
mov
add
sbb
pop
adc
setns
cwtl
pop
or
sub
inc
jnp
punpcklwd
scas
xor
idivb
xchg
pop
push
fldcw
jbe
xchg
xchg
xor
cld
cli
stos
in
xchg
aas
fmul
bnd
xchg
repz
mov
push
pop
lock
mov
xchg
jb
sti
push
jne
mov
negb
xchg
mov
push
iret
pop
es
sub
fldcw
cmpsb
nop
ss
push
lods
or
enter
push
xchg
jge
stos
icebp
enter
fldenv
mov
out
adc
jns
movsl
testb
sbb
dec
sub
sbbl
jle
jne
or
cwtl
mov
xor
jnp
jns
ret
pop
add
inc
outsl
hlt
in
jae
lcall
push
sbb
fmull
pushf
or
adc
mov
sahf
push
mov
movsl
aam
xchg
jle
into
fcom
mov
pop
push
inc
push
lock
loopne
sbb
mov
mov
jecxz
mov
or
je
dec
sbb
hlt
cmpsb
cmc
push
fisubrs
inc
adc
out
ja
and
pop
dec
xor
dec
mov
inc
stos
mov
jg
push
imul
mov
jb
iret
in
xchg
cmp
jbe
sbb
cmc
xchg
scas
mov
sarb
es
mov
and
or
imul
in
push
sbb
arpl
sbb
enter
jp
lods
xor
cmp
pop
cmc
push
repz
fimuls
insb
mov
jp
aam
stos
flds
jae
jge
sub
frstor
mov
mov
stc
je
fidivrs
and
leave
movsb
or
ror
imul
add
add
push
lods
popf
jo
daa
stos
and
hlt
jmp
xor
cmp
dec
cmp
cwtl
cwtl
push
and
out
cmp
inc
sbb
sub
push
or
movsb
cmp
push
mov
push
cmp
in
push
loopne
xchg
pop
xchg
and
add
adc
cmp
mov
into
fdivrl
adc
nop
sub
mov
mov
cmp
lods
mov
inc
add
mov
int
gs
sub
lds
cld
xor
xchg
push
lret
aaa
jl
rcl
js
adc
pop
lods
mov
in
pop
int
loope
ja
add
inc
cmp
mov
aas
es
and
lods
and
std
jg
movsl
rol
jp
xlat
push
out
stc
out
rorb
clc
jp
inc
movsb
imull
cltd
testb
addl
gs
sbb
repz
movsl
add
add
pop
loope
xchg
push
xchg
popf
shll
repz
imul
inc
cmp
or
fldenv
cmc
cwtl
pop
call
imul
pop
cmp
xchg
push
lods
out
xchg
dec
rorl
and
movsl
add
pop
sub
pop
cwtl
sbb
ror
dec
xor
cld
mov
lret
out
js
sbb
pop
sbb
jne
push
out
or
call
mov
gs
arpl
fsub
or
xchg
imul
or
fidivs
mov
call
shl
mov
or
jnp
pop
xchg
pop
pop
icebp
or
dec
pop
lret
adc
mov
ds
test
imul
cwtl
add
je
xchg
mov
mov
pusha
notb
cmp
inc
cli
out
outsl
ret
xorb
xchg
loope
movsl
jge
sbb
mov
inc
xor
adc
ret
pop
cli
mov
stc
push
decb
mov
jmp
std
pop
enter
jg
add
imull
push
stos
jge
movsl
daa
sbb
repnz
pop
push
and
add
xor
pop
out
aas
or
mov
mov
push
sbb
test
xchg
rclb
mov
es
add
cmpsl
cltd
mulb
jecxz
push
or
or
cli
cwtl
jge
or
hlt
mov
push
std
xchg
dec
sbb
adc
pushf
rorb
stc
pushf
mov
and
pop
add
or
inc
and
stc
shrb
fadd
call
mov
or
ja
mov
pushf
imul
cmp
fnstsw
loope
cmp
lahf
pop
adc
addr16
test
xor
pop
push
insl
xchg
jmp
and
iret
ds
stc
ret
test
ss
xlat
aad
xchg
xor
inc
repnz
ljmp
inc
repz
mov
test
out
dec
sbb
lahf
insl
mov
push
enter
outsl
cmp
rclb
lods
xor
xchg
and
shlb
and
add
jecxz
std
push
add
aaa
mov
inc
and
pushf
adc
add
fs
mov
pop
pop
rolb
mov
xor
push
scas
mov
mov
jp
loopne
or
jnp
dec
in
jp
in
sub
mov
into
fistpl
mov
cmp
xor
or
dec
mov
int
mov
cld
sbb
mov
adc
rolb
xchg
jne
or
fsubl
sbb
fimuls
sbb
adc
clc
sbb
das
mov
in
dec
sbb
mov
test
push
or
test
xchg
or
cmp
mov
inc
je
pop
shl
jbe
popf
adc
lahf
std
fldt
pop
fwait
das
mov
push
mov
mov
mov
mov
ror
and
pop
jne
lock
stos
mov
jle
add
pusha
movsl
mov
mov
shll
push
xchg
xchg
dec
sub
cmp
add
mov
cmpl
jecxz
bound
loop
push
out
add
ds
push
push
out
add
push
inc
into
scas
adc
dec
lods
dec
arpl
bswap
xchg
mov
fldt
rorl
das
push
cwtl
jbe
shrl
fsubrl
mov
pop
dec
arpl
sbb
jb
call
outsb
sbb
inc
xchg
paddd
adc
lock
pop
pusha
fisttpll
aaa
add
fwait
adc
nop
je
bound
mov
pop
jno
ds
and
clc
ja
mov
sar
movsb
call
dec
pop
jmp
lds
lret
ja
mov
sbb
call
rcrl
clc
fwait
mov
push
ret
cli
lcall
inc
imul
aad
push
into
out
sbb
jg
in
sbb
repnz
das
imul
enter
insb
dec
pusha
clc
stos
push
aad
jnp
rcl
sti
fidivrs
icebp
dec
shll
dec
aad
cmc
jns
movsb
cmp
sbb
push
mov
in
roll
ja
mov
ror
fisttpll
jns
ljmp
es
stc
in
jge
or
sbb
imulb
test
push
cs
scas
cs
ja
pushf
das
or
mov
mov
mov
ljmp
aaa
and
sbb
in
mov
ret
jo
pusha
fwait
adc
and
and
cmpsb
fidivs
sbb
mov
lret
fdivrl
sub
jnp
mov
insb
setge
and
sbb
and
add
in
ss
pop
jo
bnd
imul
ret
mov
or
sub
mov
test
push
ja
jle
icebp
dec
jmp
push
xchg
incl
clc
jle
fnstenv
lahf
fwait
outsb
out
in
aaa
sub
mov
in
inc
adc
or
scas
insl
cmp
push
mov
mov
ja
fmull
mov
fmul
rcll
lods
mov
jmp
add
mov
cmp
or
jae
ss
jo
adc
repz
push
movsl
in
addr16
inc
xor
mov
and
lods
xchg
jle
roll
xchg
into
cmp
jp
inc
insl
mov
imul
inc
in
mov
mov
mov
mov
cmp
mov
or
sub
fsts
jp
inc
sub
in
jmp
dec
test
outsb
and
jge
or
mov
push
xchg
sahf
and
outsl
imul
jp
sahf
fisubrl
out
add
mov
pop
or
test
insl
cmp
in
jae
daa
sbb
fisubrl
adc
fldenv
inc
loop
in
xchg
ds
or
pop
adc
mov
mov
enter
loop
or
or
hlt
cld
arpl
add
mov
sbb
cwtl
adc
push
lret
cmp
xor
cs
cltd
jge
jl
cmpl
add
fisubl
add
popa
dec
mov
mov
or
filds
add
loop
mov
or
test
out
sbb
imul
mov
aas
clc
pop
fbstp
inc
shll
loopne
test
jecxz
sbb
or
aaa
loopne
inc
fdivrl
divb
sbb
loop
shll
adc
adc
dec
mov
hlt
frstor
sbb
popf
outsb
add
nop
notl
jmp
pop
push
xchg
mov
push
outsb
repz
lret
push
subl
test
pop
sbb
add
jp
push
jmp
popa
das
sbb
cmp
out
jecxz
mov
ss
cmp
fdivr
xlat
rorb
inc
sub
mov
in
push
dec
jns
lods
mov
mov
out
gs
inc
iret
and
and
sub
nop
shl
cmp
popa
sbb
push
push
pushf
test
in
jle
sub
or
popa
fstps
hlt
loopne
xchg
cltd
cmp
lcall
mov
push
sub
lods
mov
shll
mov
mov
fs
pop
in
sbb
lock
add
arpl
out
mov
jo
test
shrl
mov
clc
or
shl
inc
call
adc
cwtl
ja
fistl
movsb
pop
out
mov
push
pop
cld
loopne
or
movsb
or
jecxz
loope
mov
sbbb
adc
loope
jle
stos
fistpll
xchg
mov
cmp
inc
or
ret
hlt
fbld
subb
cld
sahf
mov
stos
shrb
lret
pushf
sub
sarl
ficoml
sbbl
fidivl
dec
or
cmp
dec
adc
js
vpaddd
pop
lods
andl
xchg
mov
js
or
movsb
rcr
push
mov
mov
fisubrl
inc
sbb
fiadds
fadds
mov
gs
mov
cld
push
fdivs
and
cwtl
pop
xchg
inc
cmp
stos
cmp
fwait
fwait
lds
jmp
lret
push
outsl
mov
lea
cmp
push
sti
dec
std
push
sub
mov
aad
outsl
add
dec
mov
and
jns
lahf
mov
pushf
mov
xor
ljmp
js
repnz
into
mov
mov
cmp
sahf
cmp
mov
mov
cmpsl
outsl
mov
xorb
stos
adc
lds
push
ljmp
dec
push
bound
xor
jp
fildll
xchg
pop
push
dec
lods
out
in
mov
stos
test
sbb
call
es
jle
jne
enter
rorl
test
stos
sahf
pop
adc
jno
cltd
pop
add
or
dec
cli
mov
repnz
leave
xor
shl
pop
ss
xchg
cwtl
push
outsl
test
je
mov
pop
pop
or
sbb
fcompl
pop
test
cli
ljmp
push
mov
cld
test
jle
scas
adc
mov
in
call
ljmp
xchg
xchg
bound
pop
sub
dec
icebp
shll
fsubrl
cmp
out
leave
sbb
jmp
mov
pushf
push
fwait
and
mov
fldl
mov
loopne
mov
mov
pop
clc
pop
scas
push
mov
xorl
scas
mov
xchg
or
or
mov
jle
ss
inc
into
sahf
addl
pop
fcoms
arpl
xor
mov
add
sbb
mov
test
out
and
cmc
inc
xchg
test
mov
sbb
test
jnp
std
or
mov
jo
aas
xor
or
rorb
sbb
lock
dec
std
jmp
mov
jecxz
jb
dec
scas
cmpsb
inc
divl
push
es
int3
or
adc
pop
fmull
jo
jno
sub
add
rcrb
call
xor
std
mov
bound
shr
push
or
jle
mov
insb
mov
and
sbb
lods
xor
ja
imul
add
pop
cwtl
adc
adc
dec
sub
aad
mov
es
inc
sbb
or
cltd
arpl
jbe
or
mov
in
lods
fisttpll
lahf
push
jp
les
aam
and
mov
cwtl
test
sysret
mov
mov
fists
cmc
call
rcrb
xor
lret
dec
jo
xor
inc
mov
add
in
cmp
leave
sti
dec
jle
xchg
xchg
jns
in
cs
xchg
loop
jecxz
dec
sbb
shlb
xchg
lock
or
cmp
stos
data16
pop
shrb
and
jbe
mov
or
inc
push
xchg
rcr
in
pop
push
mov
xor
add
call
arpl
stos
fdivl
jle
and
cmp
shll
es
pop
dec
mov
dec
ljmp
out
pop
loop
sub
sbb
dec
sub
push
out
dec
sbbl
push
jbe
xchg
stc
and
cld
stos
jp
mov
leave
clc
aam
inc
lret
jno
xor
jl
sarb
repz
xchg
add
pop
jbe
ljmp
cmp
mov
dec
movsl
lock
arpl
out
and
jbe
shlb
adc
xor
scas
pop
fsubs
jg
xchg
imul
faddl
push
outsl
sti
sbbl
inc
inc
fidivrs
and
jmp
push
xchg
push
inc
xor
push
sbb
sub
jecxz
jnp
out
mov
xor
xchg
fisubs
data16
push
in
stos
xchg
add
mov
pop
cmp
cs
test
add
scas
push
xor
xchg
shrl
adc
jno
inc
aam
push
and
fmull
push
pop
outsb
sub
xor
jle
and
jns
xor
ret
or
fcom
cwtl
repnz
test
addr16
push
or
sbb
inc
ljmp
imul
out
insb
push
fwait
rcll
sub
rcrb
icebp
lea
add
sub
push
in
inc
popa
mov
cld
dec
in
mov
movsb
mov
and
dec
pushf
lret
inc
sbb
push
mov
aam
aam
mov
daa
and
or
ret
fbld
inc
mov
movl
mov
dec
popa
and
dec
arpl
jecxz
push
out
in
mov
into
aaa
rorb
jae
jp
and
or
mov
xchg
das
xchg
iret
scas
mov
es
repnz
in
mov
push
pop
lret
mov
and
add
nop
lock
bound
jle
inc
jnp
dec
adc
orb
pop
pushf
xlat
xchg
gs
add
into
imul
xor
int3
jmp
mov
out
push
lock
and
fisubrs
mov
pushaw
mov
push
and
in
ficompl
enter
shrb
ret
sub
and
repz
lcall
popf
lret
pop
or
dec
stc
into
mov
outsl
aaa
cmp
jb
out
inc
dec
add
cmp
and
push
or
adc
cmc
xchg
pop
stc
cmp
imul
dec
mov
cld
bound
insb
scas
loopne
int
push
xor
loopne
ljmp
pusha
rolb
or
int
xchg
mov
out
pop
pop
push
icebp
out
in
test
sub
sar
xchg
lock
in
aaa
bound
into
insb
mov
xor
sbb
inc
setnp
mov
xlat
jp
mov
pushl
sbb
pushf
inc
out
les
enter
and
leave
dec
sahf
jo
popf
and
dec
add
mov
mov
test
cs
dec
js
dec
insb
cs
fmulp
mov
mov
cld
and
ret
mov
mov
fsub
dec
decb
scas
sub
jp
mov
shl
jns
jle
jno
mov
jp
push
pop
mov
packssdw
ds
mov
cmpsl
inc
push
mov
pop
xchg
clc
out
test
inc
push
dec
out
es
jnp
or
adc
les
or
mov
lret
jbe
lods
cmp
pusha
stos
nop
shll
xchg
xor
lea
pop
mov
cmpsb
mov
xchg
ss
stos
jge
push
jg
rorl
mov
pop
out
mov
mov
sub
pop
sbb
fwait
cmp
mov
jle
imul
mov
mov
lahf
repz
jb
or
mov
and
push
into
pop
add
and
leave
push
pop
shll
mov
jge
shll
inc
ficoms
push
mulb
add
ja
inc
mov
add
pop
sub
cmp
aad
fildll
cltd
imul
jp
mov
adc
dec
popf
inc
add
movsl
fisubs
jecxz
test
clc
nop
int3
stos
adc
and
jge
test
lods
lret
fbld
das
int3
clc
mov
imul
pop
or
mov
or
jno
jle
test
fldl
pop
jmp
popf
lahf
mov
add
lock
stos
int3
xchg
fstl
mov
enter
flds
inc
pushf
imul
jbe
movsb
add
sub
inc
test
cmp
xor
push
cmp
add
dec
push
icebp
inc
int
shll
push
mov
mov
mov
and
fcmovnu
pop
ds
dec
adc
jns
xchg
xchg
bound
mov
shl
mov
jle
push
mov
mov
xor
pop
lods
inc
pop
or
je
xchg
mov
xor
scas
nop
lock
lret
inc
fistpl
sub
add
js
fwait
cmpb
push
popf
gs
scas
pop
add
repz
mov
sarb
in
mov
inc
ret
jge
sahf
pusha
jecxz
xor
sahf
and
nop
xchg
icebp
mov
rorb
fistps
outsb
dec
lods
add
dec
push
or
rcll
arpl
lcall
filds
or
cmc
shll
mov
sbb
push
mov
inc
mov
hlt
icebp
shlb
mov
and
rcll
xlat
rol
inc
nop
sbb
outsl
pop
or
mov
fisubl
daa
mov
arpl
iret
dec
test
cli
dec
pushf
cmp
xchg
or
push
mov
xchg
sbb
ljmp
jno
dec
stc
mov
adc
add
repz
inc
push
pop
mov
rcl
jle
mov
add
pop
or
pop
movsl
fsubrp
lds
mov
or
loopne
dec
je
lea
cltd
inc
loope
jmp
int3
and
sbb
or
in
stos
xor
push
pushf
jo
jbe
adc
ret
xchg
jle
in
jmp
xor
add
cld
push
or
add
aad
fisttpll
filds
jae
xchg
test
fdivr
ss
js
movsb
mov
sbbl
inc
loope
into
xchg
imulb
dec
pop
insl
xchg
mov
negl
andl
xchg
mov
les
in
ds
mov
icebp
cli
dec
xor
pop
test
adc
sbb
and
in
xlat
xchg
lods
xor
jmp
xchg
xlat
fdivp
pop
mov
sub
mov
adc
pop
lcall
push
pop
jbe
cmp
adc
out
jl
push
rol
jmp
jle
aas
xchg
mov
out
popl
adc
mov
test
or
mov
or
pop
jo
leave
mov
fsubrs
cmpsl
mov
xchg
mov
pushf
add
pop
cmpsb
mov
aas
sti
aad
mov
adc
clc
xor
gs
mov
call
push
mov
into
rcrl
mov
mov
std
push
mov
push
jecxz
inc
shrb
and
jmp
insb
or
and
in
sbb
movsb
sub
imul
mov
xchg
ret
jne
adc
and
mov
and
cli
add
dec
jae
pop
dec
pop
mov
add
leave
mov
inc
es
in
cld
out
daa
stc
pop
sub
data16
das
lds
movsl
hlt
ds
cs
sbb
mov
fimull
sub
lods
lods
cmp
xchg
rolb
cwtl
adc
out
jmp
inc
xchg
in
mov
in
mov
xchg
sbb
pushf
cs
cmp
outsb
out
int3
mov
inc
cmp
mov
fldenv
xchg
gs
bound
iret
xor
daa
push
xor
push
adc
test
adc
jnp
insl
mov
mov
iret
lret
xorl
cmp
aad
nop
sbb
xchg
clc
neg
outsb
sahf
pushw
lods
xor
pop
push
data16
ret
dec
pop
jae
scas
addl
stos
stos
cmp
add
inc
mov
aaa
imulb
dec
ss
neg
cmp
in
jge
and
cmp
sbb
or
sbb
xchg
mov
loopne
inc
into
out
and
testb
out
jae
lds
add
cmpsb
push
jp
dec
pop
popa
iret
sbb
and
jbe
int3
popf
mov
adc
pop
jg
or
mov
aam
movsl
add
add
dec
aas
ret
xchg
xor
dec
in
pusha
mov
or
arpl
shl
in
sub
fwait
imul
add
mov
into
jl
xchg
scas
xor
inc
push
pop
outsb
test
or
in
push
cltd
leave
pop
gs
mov
mov
jns
xchg
xchg
sub
xor
std
ret
mov
out
mov
mov
xor
insb
lock
in
xchg
xchg
cwtl
add
lret
lods
mov
mov
cli
lds
dec
mov
fwait
pop
xor
shrb
jb
mov
jns
jecxz
push
aam
add
aaa
xor
mov
xchg
or
jp
popf
nop
hlt
aam
andb
pop
flds
out
popa
mov
push
cmpsb
push
xchg
aad
lret
mov
ds
stos
ds
cmp
inc
jle
and
inc
sbb
adc
and
push
xchg
dec
fld
mov
and
cmc
add
xor
mov
mov
shll
je
adc
icebp
or
cmp
cltd
xor
sahf
mov
insl
mov
sub
and
xor
jns
dec
pop
das
and
into
add
xor
xor
dec
sub
scas
sti
push
fildl
cld
repz
loop
jmp
mov
jg
sti
mov
add
xor
aaa
inc
adc
dec
mov
adc
cmp
fnsave
xor
out
mov
dec
repz
bound
sub
and
mov
jb
out
stc
xor
pop
mov
add
add
xorb
sub
es
lock
pop
shlb
fbld
pop
insb
jae
jle
ljmp
lret
jmp
out
cmp
and
sti
aad
sbb
sti
hlt
adc
cld
aam
cmp
ret
jmp
insl
xchg
adc
clc
ficompl
out
pop
jecxz
push
inc
pop
insl
ret
leave
call
bound
scas
sub
and
and
stos
aam
jg
dec
fisubrs
fisttps
scas
xchg
mov
sub
and
push
mov
xor
mov
js
xor
imul
inc
push
loop
pop
lods
cmp
mov
movl
mov
xor
das
lahf
rorl
jp
mov
lret
sub
inc
subb
ljmp
test
fbstp
imul
out
dec
es
jmp
insb
sbb
ja
push
ja
jle
pop
dec
orb
sahf
xchg
push
xor
fisubrl
xchg
mov
fcmovb
mov
mov
push
fiadds
sbb
fnstcw
inc
lcall
mov
jne
mov
test
jae
call
xchg
push
outsl
aad
add
in
push
inc
jg
add
mov
jb
lret
sub
popa
xchg
cmp
rorb
lods
push
mov
dec
repz
lods
test
ja
jle
sbb
adc
rcrb
cwtl
ljmp
dec
lods
cmp
das
inc
shrb
call
out
stos
test
ds
stc
popf
cli
mov
add
dec
cli
xlat
xchg
and
mov
cmp
dec
lcall
mov
inc
sbb
sti
xchg
pushl
jl
dec
add
mov
jl
int
pop
push
in
dec
iret
mov
pop
fldcw
orb
insl
jno
lods
pop
cmp
arpl
mov
mov
ret
negl
pusha
mov
push
adc
cli
xchg
jecxz
cld
nop
jno
mov
pop
mov
sti
or
sbb
test
lahf
xor
lock
out
push
xor
enter
cs
jl
cmp
mov
jo
out
lahf
pop
push
pop
xchg
jg
mov
inc
test
hlt
paddq
and
lods
pop
push
mov
fnstsw
push
add
mov
lods
outsb
xor
and
pop
pusha
push
test
ss
lods
xor
mov
or
jno
das
ret
pop
sti
xchg
mov
jl
xor
mov
lcall
hlt
inc
mov
dec
shr
lds
stos
mov
cmp
daa
xor
fmull
fidivl
repz
iret
push
jg
fsts
jnp
iret
divl
mov
les
fisttps
int
addr16
or
pop
or
dec
loop
int
adc
sub
mov
adc
in
popa
mov
negb
cmpsb
mov
sub
cld
nop
imul
inc
dec
mov
pop
lahf
movsb
mov
inc
sbb
push
add
mov
pop
cs
fcmovnu
mov
add
pop
xchg
mov
popf
xor
aas
loopne
pusha
mov
and
leave
jge
test
cmpsl
sbb
es
insl
jne
jno
sbb
add
mov
add
pop
in
or
mov
xor
xchg
loop
pop
int
add
scas
cmpsb
sbb
addr16
sub
test
ljmp
enter
xchg
stos
sub
aaa
and
pop
out
and
xchg
in
jae
adc
mov
fnstenv
ljmp
mov
and
inc
cmc
sbb
pop
jecxz
hlt
sbb
outsl
aas
nop
lcall
pop
mov
int
inc
sahf
bound
jle
mov
mov
ja
push
ror
and
imul
shrb
xor
bound
xchg
gs
mov
or
in
add
scas
jnp
popa
inc
jo
imul
sbb
mov
loope
repnz
push
jae
mov
inc
gs
fistpll
jae
push
and
lret
and
inc
fiaddl
or
adc
fmul
push
stc
mov
jb
scas
mov
stos
pop
ds
push
nop
xlat
rcrb
rcrl
rorb
jbe
int3
dec
mov
pop
jmp
pushf
cmc
jecxz
sub
cmp
out
pushw
rcr
or
or
testl
out
push
pop
mov
daa
sti
lds
and
sub
scas
and
push
jnp
mov
adc
xor
les
out
inc
inc
daa
jg
out
iret
sti
jle
int3
inc
pop
lods
adc
mov
inc
inc
in
js
lods
inc
into
cltd
mov
jnp
addl
rclb
mov
shrb
repz
cld
dec
flds
cmp
fcmovu
inc
and
mov
xlat
fs
mov
mov
pop
mov
fsubr
xor
xchg
xchg
adc
xchg
lcall
cwtl
out
pop
sbb
es
test
lret
xchg
test
clc
inc
roll
es
cwtl
or
cmpsb
xchg
xlat
dec
aaa
leave
gs
in
xchg
dec
cmp
out
js
sbb
es
push
xchg
std
adc
scas
push
mov
mov
push
cli
adc
jecxz
pop
or
daa
push
jecxz
mov
mov
sbb
xor
mov
addb
cmp
dec
fxch
loop
mov
pop
out
and
inc
repz
jle
dec
mov
push
enter
fs
out
ret
cvttps2pi
out
inc
movsb
in
shl
sub
loope
repnz
add
or
sub
push
jmp
jo
cs
xorb
inc
xchg
push
dec
iret
and
pop
stos
xor
lock
les
sbb
mov
push
xor
mov
push
insl
dec
gs
aas
insl
and
sarb
xchg
in
dec
rcll
mov
pop
sub
push
mov
into
push
mov
test
test
in
jb
sub
popa
mov
loop
popf
test
imul
loopne
xchg
mov
std
bound
cld
push
mov
jns
fcmovnbe
jb
rclb
lcall
aaa
mov
cli
mov
mov
ret
inc
cmpsl
pop
cmpsb
xchg
adc
in
hlt
push
add
sti
push
cmpsb
and
outsl
pop
in
cmp
xor
adc
fucomip
fstpt
jb
test
pop
or
mov
xlat
mov
lret
xor
out
pop
sbb
test
or
fsubrs
stos
popf
push
push
xchg
sti
mov
mov
pop
mov
push
in
mov
aas
sti
mov
std
push
or
aad
dec
xorb
outsb
int3
lret
popf
shrb
mov
pushf
phaddw
push
mov
inc
adc
xchg
push
imul
lods
enter
inc
sbb
xchg
mov
and
mov
bound
pusha
cmp
mov
push
std
push
repnz
inc
push
push
ret
sbb
mulb
ror
loope
adcb
inc
shlb
or
movsb
add
sub
mov
jb
clc
std
jecxz
int
fldl
fcompl
mov
pop
ljmp
idivl
push
jle
packsswb
repnz
loopne
pop
and
stos
stos
outsl
sbb
adcb
repz
enter
dec
pop
gs
xchg
mov
test
loopne
and
push
test
es
idivb
gs
dec
pop
ror
cmpsb
adc
nop
rclb
jnp
rcr
daa
add
movsb
sti
lret
mov
insb
ficompl
xorl
out
in
lret
ljmp
sbb
fs
and
and
adc
inc
shlb
adcb
out
xchg
mov
pushf
ficoms
add
clc
pop
sub
rcrb
pop
mov
mov
rcll
cmp
jo
ficompl
rcrl
in
in
jmp
jmp
sbb
cmpsb
std
mov
adc
popf
pusha
xchg
mov
test
mov
arpl
push
pusha
mov
lods
sar
push
mov
lret
xchg
and
lcall
mov
inc
xor
inc
in
inc
jno
inc
xor
movsl
call
mov
divl
shlb
mov
das
adc
push
lahf
popa
in
cwtl
adc
rclb
in
xchg
pop
or
scas
cmpsl
loope
hlt
xchg
shl
inc
mov
mov
cmpb
inc
jle
lea
std
ret
dec
inc
mov
xchg
add
pop
push
cs
xlat
lods
dec
add
inc
xchg
mov
xchg
xorb
dec
ret
enter
clc
add
mov
cmpsb
sarb
ror
sub
aam
sbb
mov
insl
int3
inc
sub
leave
cmp
stos
mov
ljmp
mov
mov
or
sbb
das
push
fucomi
ds
inc
mov
aam
hlt
mov
cmp
xchg
test
cmpsl
stc
jl
int3
loope
int
shrl
bound
in
into
inc
test
into
sbb
xor
cltd
lahf
lea
fisubl
into
sbb
mov
or
shlb
arpl
cwtl
ret
imul
fmuls
scas
divl
fmuls
scas
lret
dec
out
sbb
xor
mov
mov
out
mov
clc
das
push
add
sub
aaa
test
lods
dec
mov
xor
push
aas
or
adc
xchg
push
inc
es
inc
popa
orps
icebp
or
sbb
jmp
xchg
jle
aam
push
pop
mov
xor
rorl
fnstcw
xchg
mov
lods
sbb
int3
adc
mov
sub
dec
sbbb
dec
and
push
cmc
ds
jno
push
sub
and
aas
xchg
xor
sahf
sbb
into
mov
inc
xchg
jge
mov
icebp
mov
roll
imul
call
dec
or
jg
lahf
xor
inc
stos
outsl
int
divb
in
adc
jle
adcb
test
cmc
sbb
mov
stos
pop
aam
sbb
sbb
push
out
pop
add
inc
cmp
mov
inc
mov
ficompl
dec
add
or
mov
dec
andb
aaa
pop
repnz
pop
mov
jg
jge
ret
in
stc
add
push
popa
push
ret
lock
sbb
scas
sub
or
or
jmp
adc
aad
or
sub
cmc
push
push
mov
aaa
dec
imul
jle
fldl
adc
xor
stos
out
cmp
pusha
bound
push
gs
outsb
jbe
hlt
push
jecxz
mov
adc
sbb
in
jbe
mov
fistps
add
outsb
bound
les
mov
les
ljmp
movsl
jo
ljmp
movsl
sbb
adc
sub
fsubl
test
popa
popf
cmp
popa
sub
fsub
and
aam
inc
loope
or
xchg
cmpsb
mov
push
push
in
push
and
cmp
andl
das
push
cmpsl
cli
cmpl
jge
and
xor
imul
sub
clc
scas
jae
adc
imul
cmpsb
aad
mov
shl
pushf
cmc
sub
jp
adc
scas
add
daa
sub
xchg
mov
mov
movsl
mov
hlt
data16
xchg
adc
mov
dec
test
push
mov
mov
in
data16
sub
repz
iret
jbe
sarb
rcll
sarl
jge
dec
fdivl
push
lods
mov
mov
stos
mov
aam
mov
cwtl
push
bound
sbb
call
ja
inc
adc
test
in
add
adc
mulb
mov
lcall
sub
fildll
dec
push
andb
ret
or
mov
test
xchg
push
push
or
fdivl
mov
mov
rcrl
test
and
xchg
adc
add
clc
es
mov
enter
xchg
ljmp
movsb
lds
fimuls
pop
pop
push
aaa
lods
sub
add
jb
mov
jp
int
fs
cwtl
jns
in
jg
pop
jnp
loopne
test
shlb
jbe
je
xor
insl
int
inc
jl
gs
mov
jmp
lods
xchg
push
mov
aaa
or
jno
popa
add
push
sti
cmpsb
and
add
ret
adc
add
clc
sbb
andb
movsb
inc
movsb
inc
push
call
hlt
xlat
xor
dec
sbb
cmpsl
cmp
mov
testl
hlt
and
dec
mull
call
cli
xchg
pop
in
imul
dec
xor
xchg
xlat
add
push
fcmovnb
dec
push
movsb
lods
mov
fucom
inc
daa
xchg
je
fwait
cmp
in
lret
add
sbb
int
sub
cmp
or
loop
in
xchg
sbb
insl
or
movsl
pop
test
sub
rcl
push
enter
in
sub
xchg
loop
and
imul
fiaddl
sbb
lods
push
push
push
in
test
xchg
push
mov
push
test
jne
push
ds
cli
lea
rcl
cwtl
cmc
add
ja
push
lods
ja
push
mov
mov
adc
and
push
popa
push
cld
adc
jno
jl
pushf
sahf
adc
cmp
adc
or
xchg
enter
push
mov
cmp
fistl
mov
push
ror
jmp
mov
in
jp
ficoms
sbb
inc
enter
jno
cli
mov
clc
push
inc
mov
shrd
jne
mov
xchg
fsub
lahf
and
ds
cmp
xchg
adc
push
pop
pop
adc
call
js
xor
rolb
fisubl
inc
pop
call
jmp
movsl
adc
ret
cmp
mov
and
arpl
lea
jecxz
xor
push
test
add
test
in
out
xor
cld
scas
xchg
rclb
push
push
or
dec
addr16
pop
adc
out
mov
lahf
xlat
inc
mov
pop
adc
cmp
mov
mov
cmp
mov
cmc
in
dec
add
test
lods
add
scas
and
sub
xchg
adc
push
sahf
cmp
sbb
aad
lock
es
in
insb
in
jp
psrlw
enter
jbe
sub
negb
inc
add
mov
cmpsb
adc
and
push
leave
and
fisubs
xchg
or
jne
in
sub
lahf
inc
test
xchg
jb
ds
test
scas
fwait
es
sahf
jb
add
mov
mov
outsl
xchg
test
inc
inc
xchg
sarb
andl
inc
sbb
or
push
incb
fldenv
sub
in
jge
dec
ret
dec
xlat
adcl
out
fisubrl
jns
lods
into
mov
push
fwait
xchg
push
test
add
cmpsl
in
fs
into
adc
mov
inc
dec
aaa
fsubrl
leave
sti
cmc
sub
lret
outsb
mov
cli
push
das
aaa
out
orb
mov
test
sbb
push
lock
xchg
sahf
jp
jnp
inc
or
call
mov
bndldx
add
push
inc
lcall
pop
xchg
adc
mov
mov
outsl
push
add
mov
fld
fadds
xchg
rcll
pushf
aam
aad
rolb
lret
sar
ja
in
mov
or
ljmp
sbb
stos
enter
push
stos
cs
xchg
push
andb
sub
sbb
mov
nop
add
adc
jle
jle
pop
jbe
mov
jmp
lds
add
and
out
mov
ret
mov
dec
in
inc
xor
and
mov
enter
and
data16
mov
fistpll
in
ror
cs
in
pop
mov
loopne
call
jp
sub
les
imul
xchg
jno
popa
mov
sti
sub
jle
rolb
adc
sbb
in
mov
sbb
sub
mov
mov
jmp
cld
mov
cmpsl
popf
aaa
lods
je
outsb
pop
addr16
iret
sti
outsb
cwtl
leave
ret
cltd
mov
mov
xchg
sub
cwtl
sbb
call
incl
mov
add
jmp
push
dec
pop
pop
sbb
and
fwait
pop
rcll
jl
xchg
es
and
fwait
imul
pop
sub
xchg
sub
sub
aas
sub
rclb
jo
inc
popa
cmp
lds
stos
xor
pop
xor
lahf
xchg
jmp
rcrl
mov
mov
xor
mov
push
cmp
ljmp
aam
ret
cmp
nop
mov
iret
lret
adc
or
sarb
in
ss
sarb
mov
out
les
sub
dec
ja
data16
jae
lret
mov
push
stos
cld
outsb
or
xor
hlt
lret
test
lret
mov
jmp
out
testl
xchg
cmc
cmp
sbb
jae
popa
ljmp
repz
jl
dec
mov
cld
fisubl
subl
movsb
lahf
mov
out
pop
sub
cmpsl
cwtl
cld
and
daa
hlt
mov
mov
pop
adc
xor
pop
xchg
lret
pop
das
cwtl
repz
pop
mov
pop
jp
mov
iret
and
cwtl
roll
xchg
adc
pop
loope
xchg
or
fnstenv
int
jp
mov
adc
call
in
int
xchg
xor
in
cmp
pop
xchg
outsl
imul
adc
mov
scas
repz
iret
hlt
push
mov
subl
xor
push
jg
xchg
xchg
icebp
pusha
loopne
cwtl
leave
rcll
movsl
cvttps2pi
jge
xchg
in
dec
dec
btr
scas
add
imul
arpl
cmp
mov
xor
imulb
xchg
adc
rcrb
je
mov
inc
mov
out
ss
std
mov
jb
ljmp
cmc
sarb
adc
xor
xor
sbb
imulb
dec
imulb
pushf
fisubrs
jecxz
sbb
cmp
dec
int3
push
insl
pusha
mov
sub
mov
gs
movsl
test
xchg
lods
out
sbb
int
dec
dec
jo
lds
fs
adc
xor
movsl
adc
mov
imul
les
add
add
sbb
mov
movsb
mov
sbb
or
xor
mov
enter
lods
mov
subb
add
cmp
rcrb
mov
cmp
call
hlt
jmp
das
call
dec
cmp
jmp
lea
incb
decb
sbb
sti
adc
das
mov
dec
shlb
sahf
loop
fprem
movsl
jl
lea
dec
inc
hlt
scas
cmpl
lods
xor
ds
mov
outsl
adc
ret
fnstsw
cmc
repz
ja
sub
mov
mov
ret
mov
notb
cltd
push
fmull
orl
loope
pushf
push
in
hlt
jo
imul
shlb
shll
cs
sbb
sbb
add
mov
cli
ficoml
leave
jbe
ret
sbb
fmul
xor
aam
add
and
add
cmp
dec
pushf
jg
inc
sbb
push
mov
or
test
mov
call
add
push
aad
mov
push
push
test
shlb
mov
and
cmp
jg
cs
or
outsl
pop
les
clc
mov
stc
push
pop
inc
jnp
nop
mov
cmp
dec
ret
jno
imul
xor
xor
arpl
shl
and
inc
jo
lods
repnz
jo
notl
movsb
xchg
sub
repz
jne
xchg
dec
mov
jae
fcompl
xchg
cmp
jns
push
leave
mov
mov
daa
inc
cli
ret
lcall
xchg
fidivrl
cmp
rol
je
into
in
test
out
sbb
fidivl
adc
in
mov
lea
mov
shll
test
repnz
cmpsl
dec
mov
jle
xor
popa
sub
push
jnp
loopne
insl
mov
cs
fnstenv
push
push
cmpsb
dec
push
or
mov
fldl
ja
inc
xchg
cmp
cmp
aam
data16
cmp
cli
fidivs
outsb
adc
xchg
xor
bound
fsubrl
dec
and
ret
aam
into
adc
repz
dec
adc
sub
js
fisttps
in
stos
pop
mov
mov
push
or
fsubrs
push
sub
mov
movsb
and
fs
mov
push
jle
test
cld
enter
jg
shlb
scas
mov
jns
dec
jp
dec
mov
cs
shr
cmp
call
mov
jg
push
jnp
je
fsubr
lods
or
in
movb
clc
stos
mov
mov
lock
jbe
push
sbb
fnsave
pop
repnz
rolb
int
clc
adc
jo
dec
notl
sbb
sbb
mov
xorl
notl
out
int
scas
popf
cs
rorb
pusha
cmp
dec
mov
inc
aam
or
outsl
icebp
jbe
in
std
jmp
lea
add
cltd
inc
test
mov
fldt
xchg
sti
fsubrs
adc
mov
into
ja
sbb
je
popa
sub
pop
cmp
out
push
das
sbb
mov
insl
rolb
push
jnp
orb
add
lds
xchg
in
cmp
mov
add
flds
sub
mov
in
or
jge
dec
out
mov
lock
push
jb
inc
jbe
jno
cltd
cmc
push
pop
xchg
outsl
pop
fdivr
xchg
fistpl
xor
jg
mov
add
and
inc
add
jle
add
cmp
ljmp
and
les
inc
lret
xchg
loop
jp
pop
addb
jge
add
loope
ljmp
jae
sbb
add
repnz
ds
push
je
clc
cmc
lcall
repnz
dec
cmp
test
mov
lret
sub
stc
xchg
sbb
ret
lds
fstps
ret
addl
mov
adc
mov
and
pop
int3
adc
or
shlb
push
pop
test
push
sub
mov
lcall
sbb
pop
test
push
addr16
mov
pop
into
jbe
je
sti
popf
fbld
cs
mov
xchg
dec
add
out
lods
push
fscale
xchg
dec
add
stos
cmp
xor
pop
push
loope
js
insb
pop
xchg
xchg
lods
inc
lds
sahf
mov
icebp
jp
or
jne
enter
pushf
mov
aaa
jge
xchg
je
scas
mov
in
sti
and
mov
mov
mov
shll
push
and
dec
pop
lea
jge
stc
or
hlt
cmp
push
enter
inc
push
test
pop
xchg
sub
cwtl
push
stos
push
pop
mov
iret
mov
aam
push
cld
xlat
jno
pop
xchg
sbb
stc
push
enter
xlat
xor
adc
adc
sbbl
push
test
pop
ss
sbb
push
sub
jo
arpl
xchg
cmp
popa
test
jb
cmp
inc
push
lods
sbb
fisttpll
mov
lcall
inc
lds
dec
dec
or
fnstsw
scas
mov
inc
xchg
sub
mov
fwait
and
mov
dec
nop
insb
enter
pop
sarl
sahf
loopne
leave
int3
push
pop
rclb
mov
js
divb
addl
orb
mov
cli
fcmovnbe
mov
sbb
pop
sub
or
stc
mov
jl
adc
ja
cld
mov
fdivs
outsb
mov
pop
add
or
mov
nop
pop
dec
lea
dec
inc
cmc
cmp
add
jno
stos
cltd
lods
adc
adc
jo
es
cmc
rorl
sbb
push
mov
pop
ficompl
das
sub
mov
or
sbb
sbb
fdivs
push
inc
or
cmc
cwtl
pusha
mov
adc
int3
mov
test
int3
mov
cmp
sub
lods
popf
push
cmp
push
fiadds
inc
andb
pushf
negl
and
js
outsl
test
loopne
xor
pushf
xchg
xchg
fstps
leave
sbb
inc
mov
jne
popf
sahf
pop
outsl
cs
je
jo
test
cmp
xchg
lods
pop
lock
sbb
pop
imul
popa
mov
test
testl
ljmp
mov
xchg
les
inc
xchg
movsb
cmp
scas
mov
sbb
jecxz
ret
sub
insb
cmc
push
dec
push
or
loopne
xor
pop
rorl
lds
sbb
push
gs
and
addl
out
stos
inc
mov
push
fsubrl
loopne
stc
mov
cmp
push
fisttpll
or
mov
inc
xchg
xchg
nop
roll
in
push
add
pushl
xor
repz
daa
popf
push
in
ret
setle
imull
mov
push
inc
aas
dec
call
sub
mov
add
push
adc
insb
lret
daa
and
test
xorb
ret
pusha
add
mov
ffree
or
xlat
jbe
jno
mov
les
clc
xor
movsl
lea
sbb
cmc
int
outsb
lea
ja
cmpsb
dec
mov
ja
clc
cwtl
xchg
das
es
ret
push
mov
cli
in
jo
push
lock
adc
aad
xchg
dec
stc
repz
sbb
das
sete
movsl
leave
adc
scas
inc
fmull
mov
cmp
pop
in
xchg
insl
jmp
insl
cli
outsb
sub
mov
popa
jno
aad
add
push
icebp
xchg
ljmp
sti
pop
xchg
aad
push
lods
sub
jecxz
in
arpl
or
in
cmc
xchg
lds
xor
scas
fldt
and
push
mov
in
outsb
mov
icebp
in
pop
and
lahf
roll
out
inc
iret
and
lods
jae
add
loop
jmp
xor
popa
dec
or
push
and
cmpl
inc
adc
xchg
jnp
and
push
test
sbb
inc
sbb
jg
call
lcall
jge
dec
jmp
ds
add
int
mov
cli
mov
cmp
lret
push
jmp
into
inc
jle
out
pop
push
push
dec
pusha
inc
sar
pop
sbb
dec
mov
sti
mov
dec
fcomi
std
int3
mov
cmp
test
movsb
adc
fistpll
add
push
fs
dec
or
and
ss
leave
push
mov
dec
sbb
aam
dec
mov
add
adc
leave
cmp
xchg
mov
mov
aam
xlat
add
mov
addr16
mov
jle
aad
and
xchg
jge
jle
xchg
aad
xchg
push
jge
fs
mov
jbe
pop
push
pop
je
xor
into
rcl
out
loop
push
mov
das
adc
xchg
or
dec
pop
cmp
fwait
and
out
pushf
mov
int3
rcl
je
leave
mov
shll
into
out
les
call
cmp
stos
cmp
movsl
sbb
std
orb
mov
mov
mov
push
aas
mov
or
ja
scas
fstps
int3
ds
mov
lock
addr16
sbb
adc
cmp
inc
jmp
xchg
fstps
push
sub
push
push
int3
xchg
mov
add
cltd
mov
sbb
xchg
jg
sbbl
fwait
das
test
add
dec
sub
rolb
stos
shlb
push
dec
ljmp
pop
mov
imul
insl
lock
aas
add
push
nop
mov
cli
jp
mov
mov
andl
mov
repz
stos
push
jbe
lods
aam
cmpsl
mov
cli
fidivs
mov
xor
and
mov
mov
mov
dec
or
test
dec
lret
cltd
adc
scas
ja,pt
mov
daa
cmpsl
mov
jne
sub
mov
into
inc
xchg
fcoml
pop
add
cltd
add
icebp
repnz
gs
cmpsl
popf
pop
mov
lea
xlat
jecxz
adc
pop
int3
lock
roll
mov
mov
or
pop
mov
daa
adc
push
cli
mov
cmp
lock
bound
jb
jo
xor
mov
xchg
or
rclb
jae
push
pushf
cmc
rcrb
aaa
mov
scas
int
pop
imul
hlt
mov
pop
arpl
sub
je
xchg
inc
stos
addl
and
scas
inc
cs
aaa
lods
mov
jmp
or
mov
push
mov
or
ja
inc
inc
icebp
inc
xchg
int
cmp
inc
xor
fbstp
sub
jecxz
test
dec
enter
aad
test
clc
mov
pop
mov
dec
js
dec
and
xchg
fidivs
mov
mov
into
dec
fstps
inc
mov
cmp
xor
ds
out
fdivrl
push
in
loopne
fldt
test
add
jmp
data16
shl
hlt
ss
cltd
push
push
dec
dec
mov
fisttpl
or
adcl
jnp
les
das
pop
push
cmp
out
rcrl
in
cli
dec
and
xlat
mov
jle
mov
flds
lcall
jo
fwait
pop
mov
xor
mul
pop
fdiv
mov
jnp
mov
jae
orl
mov
cld
jae
fdivr
sbb
clc
lret
mov
mov
cld
shll
or
fs
gs
mov
imul
adc
leave
adc
pop
shl
jecxz
or
cld
int
pushf
dec
imul
fwait
lret
mov
xor
push
cltd
lods
adc
cmp
scas
push
xchg
je
icebp
jg
aad
cmpsb
aas
jp
inc
adc
repz
out
int3
pop
jns
aam
and
push
add
idivb
scas
sbb
in
jae
outsb
push
or
mov
fidivrl
fistps
push
in
mov
mov
dec
out
dec
mov
mov
xchg
mov
mov
inc
mov
add
xor
or
xchg
into
cmp
xchg
mov
popa
pop
xchg
xor
rcll
ret
xchg
mov
sbb
sub
pop
and
iret
pmaxsw
jecxz
movsl
or
xor
leave
outsl
xor
sub
popa
pop
sub
sub
ss
into
xor
jne
mov
adc
call
xor
jcxz
jns
and
push
and
jge
push
mov
push
dec
jbe
fcoms
pop
mov
hlt
sahf
into
repz
mov
inc
and
pop
xor
xchg
adc
lret
or
dec
jecxz
loopne
xchg
jne
cs
cs
jmp
movsb
pop
inc
addb
imull
push
pop
dec
cmp
xor
outsb
push
push
jno
xor
adc
mov
and
add
push
in
xor
inc
sbb
cmp
xlat
rclb
or
lret
popf
xchg
adc
adc
mov
fs
jge
loop
aas
push
sub
cltd
xor
icebp
adc
add
sahf
push
popf
adc
popa
ja
and
mov
jne
inc
sub
mov
gs
dec
movsb
movsb
push
mov
mov
pushf
es
int
sub
repz
ficoml
or
inc
bound
lods
call
push
pop
lds
xor
mov
insb
mov
fistl
mov
mov
xchg
push
push
ret
gs
add
xchg
dec
pop
push
jno
pop
std
repz
lret
jno
cli
aad
xchg
mov
pop
lret
mov
mov
fcmovbe
stc
sbb
iret
ljmp
data16
inc
push
popa
xor
fcoms
sub
xchg
cmpsb
punpckhdq
icebp
fisttps
flds
int3
add
pushf
loopne
loope
push
xchg
mov
sti
shl
xchg
adc
jmp
loopne
imul
pop
mov
repnz
jne
push
repz
mov
cld
sbb
dec
fcoml
sub
push
sbb
div
cmp
cmpb
lahf
dec
out
sbb
dec
push
push
xor
lcall
push
or
or
fs
fwait
insb
push
je
subb
mov
inc
stc
mov
push
in
sub
lods
dec
sarl
loop
mov
popf
divps
mov
jne
lret
mov
adc
cmpsl
cwtl
fs
cmp
jle
push
jecxz
jecxz
mov
mov
psubsw
inc
fistl
sbb
xchg
mov
insb
loope
xchg
mov
cltd
es
pop
hlt
out
sub
cmc
dec
push
xchg
arpl
out
jnp
jge
xlat
lods
test
das
inc
nop
xchg
jle
inc
add
scas
fsubrs
aad
fadd
push
daa
inc
mov
popa
mov
push
cwtl
xchg
or
es
jge
lds
int3
sbb
sbb
dec
mov
scas
mov
pop
sbb
xchg
sub
push
pusha
push
push
or
or
xchg
inc
in
int3
push
repnz
int3
add
jne
repnz
pop
mov
xor
test
jl
cmp
add
call
adc
fstl
repnz
lret
mov
push
xor
mov
jmp
add
and
jae
adcl
xchg
push
addr16
aas
fbstp
jp
mov
ljmp
sbb
and
int
data16
lahf
sub
and
add
jns
out
shrb
ljmp
adc
xchg
xor
inc
lods
popa
fwait
dec
adc
dec
mov
dec
rorb
pusha
adc
cmp
pop
sbb
mov
adc
dec
cltd
mov
or
cmp
out
inc
int
jnp
scas
ss
push
dec
pop
insl
xor
insb
je
mov
imul
fdivp
mov
or
push
es
je
addr16
xor
inc
gs
inc
pop
xchg
aam
cmp
in
nop
xchg
jl
and
push
fstl
sbb
mov
cs
scas
xchg
out
push
xor
lcall
stos
shrl
aad
mov
xor
adc
xor
dec
leave
xchg
mov
inc
fldl
and
rorb
mov
inc
sub
and
xorb
inc
push
add
dec
movsb
adc
xor
mov
lea
and
mov
mov
cmp
adc
mov
pop
xor
or
hlt
mov
sbbb
rclb
mov
cwtl
mov
push
mov
and
cmp
mov
lret
minps
mov
js
test
in
jp
cs
xchg
or
imull
in
and
push
mov
std
nop
jne
sbb
xor
add
xor
mov
or
xchg
movsb
aaa
scas
push
inc
fnstsw
and
pop
or
addl
in
test
jno
xlat
ja
mov
subb
cld
leave
jb
ret
pop
mov
loopne
test
ds
roll
xchg
loop
in
ret
loopne
repnz
pop
push
dec
sti
int
fsubs
faddp
fildl
loope
mov
cmp
xchg
das
xchg
sub
mov
clc
lds
push
lock
mov
and
clc
xor
sahf
sahf
scas
mul
inc
lret
insb
jo
and
rolb
xor
and
dec
repz
jmp
mov
push
mov
xor
or
popa
movlhps
jp
pop
iret
cmc
cld
xchg
add
bound
dec
jl
cmc
inc
popf
test
rorl
and
xor
js
push
or
lods
arpl
mov
sarl
push
out
orb
and
nop
loope
push
dec
fisubrs
pop
sbb
aam
xchg
mov
je
push
imul
jge
fcomp
mov
cld
stos
in
shr
and
pusha
or
inc
loopew
js
ret
scas
data16
cmpsl
adcl
cmpsl
push
push
in
enter
stos
ljmp
dec
inc
jmp
push
pop
repnz
mov
mov
add
sti
bound
jecxz
xor
inc
xchg
xlat
push
xchg
cld
xlat
gs
test
ja
sub
mov
imul
mov
mov
push
ret
mov
scas
pop
add
test
sbb
into
lret
mov
push
in
fidivl
aaa
sub
xor
push
aaa
insb
lods
cmpb
mov
pop
mov
pushf
mov
lea
mov
cwtl
sub
int3
push
push
lea
and
sub
movsb
push
xchg
imul
out
fs
pusha
aas
cltd
addr16
jnp
xchg
lahf
xor
add
mov
lret
mov
push
adcl
stos
pop
push
aad
dec
in
lret
push
ret
xchg
iret
add
xchg
shll
push
pusha
dec
bound
jbe
aaa
cmp
mov
add
ljmp
mov
aaa
test
loopne
mov
dec
or
push
jp
sahf
adc
adc
jg
cmpsl
mov
cmp
push
mov
xchg
adc
pusha
int3
cltd
and
cmp
xlat
push
loop
clc
lods
adc
mov
and
mov
xchg
push
fwait
push
subb
push
add
loope
pop
daa
push
add
scas
clc
clc
rcrb
shr
jnp,pn
sbb
pop
clc
rcrl
push
cmc
push
fdivl
arpl
sub
gs
mov
loope
mov
add
imulb
push
dec
sbb
sbb
lea
mov
cmp
pop
cmpsl
test
mov
mov
push
cmp
push
fisubrs
test
mov
pop
icebp
int3
imul
jno
dec
push
sbb
push
adc
lcall
inc
aas
adc
push
orl
jnp
dec
pop
add
imul
jge
ljmp
jecxz
cwtl
mov
add
mov
imul
xorb
dec
pushf
sub
push
sub
clc
adc
nop
cmp
cmpsb
xorl
fnstsw
mov
int
scas
mov
lods
push
lods
test
pop
dec
lcall
cmp
or
sub
shl
and
jle
xor
jecxz
jnp
sahf
pop
or
cmpsl
repnz
scas
cmp
fdivrl
iret
mov
test
push
pop
addr16
popf
loop
lods
ret
push
gs
sbb
and
aas
cmp
pop
mov
mov
adc
scas
ljmp
jo
dec
popf
mov
pop
sbb
mov
fmull
cmp
jo
sub
jecxz
cwtl
rcl
push
jl
fbstp
dec
mov
rcrb
mov
fisubs
or
mov
and
insl
mov
dec
popf
xchg
jle
xchg
fucomip
pop
lock
lods
fisubs
lret
mov
pop
jns
enter
mov
push
push
je
pop
fldt
out
movsl
jp
aas
jle
or
and
les
scas
push
mov
sti
hlt
orl
dec
dec
pop
sub
repz
xor
dec
push
mov
pop
dec
into
and
pop
mov
mov
jge
jg
cmc
sbb
xchg
adc
outsl
rcr
add
and
mov
and
insl
pop
hlt
lea
lahf
sbb
scas
aad
push
lcall
test
jp
dec
lret
add
scas
loopne
enter
ret
mov
mov
adc
fs
fstpl
fdivrs
or
lret
dec
test
sti
out
dec
mov
mov
shr
mov
jae
sbb
sbb
in
mov
imul
gs
enter
or
imul
lret
xchg
pop
pushf
das
mov
testl
mov
imul
xchg
fldt
mov
idiv
out
ss
mov
pop
sbb
movsb
sub
rolb
pop
stos
iret
lea
push
test
popf
or
and
push
stc
cmp
ja
in
cmp
iret
adc
fwait
jae
nop
int
push
mov
sbb
adc
rolb
xchg
inc
jp
sub
cmp
test
sub
jno
jae
inc
les
cli
stos
out
mov
jns
and
lahf
cmp
xchg
stc
adcb
jecxz
rcrb
and
int
sbb
in
pop
lret
aas
pop
ret
jecxz
bound
cmp
lds
pop
mov
pop
sub
out
out
aaa
pop
sbb
enter
je
mov
scas
cmpsb
dec
dec
stc
fs
or
xchg
lea
ret
out
push
shll
xor
movsb
cmpsb
out
enter
aaa
and
das
movsb
mov
add
lcall
inc
aaa
sub
shrl
loop
cltd
aad
in
sbb
out
mov
pushf
mov
jl
add
ret
fisubl
cmp
push
out
pop
mov
cld
and
cld
int3
xor
add
fsubs
push
arpl
fsts
cmpsb
test
xchg
mov
scas
inc
mov
leave
push
in
ljmp
das
jnp
sbb
dec
gs
or
adc
aad
popa
mov
push
xorb
jbe
mov
mov
lret
push
cmc
mov
push
dec
jle
inc
dec
in
jbe
into
cmp
mov
add
cmpsl
push
xor
inc
adc
push
outsb
mov
imul
movl
xor
dec
pop
pop
xor
mov
xchg
fucomi
test
adc
mov
cwtl
mov
push
in
sbb
push
cwtl
das
or
cs
lret
std
add
push
insb
sahf
mov
cmp
jecxz
adc
out
push
adc
and
sub
mov
mov
or
mov
nop
jb
stos
das
adc
cmp
nop
and
xorl
gs
mov
sbb
jl
xchg
fcmovb
and
cmp
push
pop
call
sub
lds
sbb
pop
notb
mov
cmp
push
lcall
cmpsl
ljmp
xchg
mov
mov
std
popf
xchg
inc
std
cmp
outsb
adc
dec
js
cmp
out
sub
rcr
jmp
and
fldenv
cmpsb
stos
scas
jge
dec
cs
xor
cld
out
cmp
and
stc
rcrl
jae
cmp
mov
or
mov
or
das
pop
shrl
pop
mov
imul
cmpsb
lods
int
inc
ret
dec
mov
sub
add
xacquire
and
inc
push
lret
pop
push
js
cmc
or
cltd
xchg
stos
div
iret
sub
lea
push
mov
mov
and
ds
sbb
in
sbb
sub
jl
pop
inc
or
adc
sbb
aad
movsl
cvtps2pi
mov
mov
sbb
sbb
das
and
std
xor
pop
mov
shl
ret
fadds
int
in
sbb
ja
sbb
or
cmp
lock
sti
gs
xchg
add
push
shrl
push
cltd
clc
lahf
pop
les
push
mov
scas
mov
jmp
aas
in
lds
mov
sub
xchg
outsl
cmc
push
dec
cwtl
adc
push
test
ret
loope
inc
out
sbb
fwait
daa
sti
cmc
pop
ret
nopl
mov
jmp
inc
lock
lret
push
insl
out
add
pushf
lea
std
mov
push
or
adc
cmc
inc
push
dec
xor
mov
sub
sbb
pop
or
jecxz
push
xchg
pop
cli
pop
daa
insb
cmpsb
push
in
jo
insb
adc
cmc
xchg
repnz
mov
fisttpll
ljmp
xchg
cs
inc
or
add
push
pop
clc
insb
add
lods
insb
scas
dec
lods
pop
outsb
inc
sbb
in
in
lret
stos
stos
sbb
push
clc
imul
jnp
lcall
mov
adc
dec
outsb
lea
mov
fs
or
out
sbb
cli
stc
je
cmp
jmp
xchg
inc
inc
sahf
dec
inc
test
pop
push
add
inc
xchg
and
mov
cmp
mov
test
mov
cwtl
jmp
adc
std
push
pushf
xor
mov
das
push
pop
ret
push
jno
push
popf
pop
xor
repnz
push
gs
mov
adc
pop
in
or
adc
outsl
aaa
int
out
lea
sub
jecxz
jae
popa
adc
push
push
fistpll
jl
jb
xchg
inc
pop
sbb
sub
mov
pop
or
sub
fmull
ficoml
xor
je
mov
fstp
dec
mov
xchg
push
mov
sbb
mov
sbb
pmulhuw
push
mov
and
sbb
rol
jecxz
cmp
andb
sub
fisubs
aas
ret
xor
jno
mov
insb
push
int3
das
xor
daa
or
and
cmc
jg
call
jle
outsb
add
in
sub
stos
push
cmp
movsl
shr
and
dec
js
lds
js
mov
jg
pop
and
movsl
dec
scas
sub
popa
mov
dec
popa
into
cmc
mov
sarl
clc
add
adc
in
inc
jo
xchg
push
stos
add
ljmp
lcall
xchg
inc
ss
mov
mov
dec
push
jns
fldl
xlat
add
push
and
or
dec
mov
xlat
icebp
leave
idiv
cmp
or
jmp
cld
sub
out
stos
inc
je
mov
adc
popa
push
inc
int3
scas
sbb
aam
mov
in
inc
push
inc
int3
push
adc
sub
pop
mov
dec
pop
pop
dec
add
mov
pop
sub
push
loopne
sbb
fwait
mov
clc
push
cmpsb
or
aaa
iret
pop
lds
in
mov
mov
outsl
iret
adc
addr16
sub
ret
sbb
mov
icebp
xchg
scas
addb
sarb
push
popa
aaa
push
in
scas
lret
adc
imul
push
jmp
add
addr16
mov
and
push
xchg
lcall
loopne
dec
and
mov
push
inc
and
imul
test
inc
insl
xor
and
pop
push
and
call
pop
adc
mov
jmp
cltd
mov
in
lds
sti
mov
and
in
pop
dec
push
pop
and
sahf
push
sti
jae
cmpb
xchg
dec
sub
xorl
push
xor
push
dec
pop
jge
and
sbb
xor
inc
fs
cltd
push
sbbl
sahf
lds
mov
inc
sbb
mov
ja
call
inc
xchg
cs
add
negl
mov
mov
or
rcrb
jmp
clc
std
repz
sbbb
pop
lock
jnp
push
jmp
nop
jge,pt
aam
cmp
outsb
leave
push
add
scas
or
in
mov
push
and
push
in
mov
popa
mov
sbb
and
mov
jne
bound
iret
push
cmpsl
inc
mov
cmp
cmp
cmpsb
lds
hlt
inc
and
insb
mov
cmp
and
lods
dec
popa
cmp
in
gs
pushf
cmp
push
sbb
in
push
test
inc
shr
cmp
add
jmp
sub
inc
pop
psubb
mov
js
xlat
adc
inc
shrb
inc
sub
sub
xchg
ds
repz
fcompl
cmc
or
movsl
mov
mov
aaa
sub
and
rcl
mov
cmp
stos
int
and
dec
and
pop
shll
dec
xor
cmp
cmp
jge
adc
and
cmpsb
imul
and
call
sbb
fs
and
dec
and
dec
lods
sbb
movsl
and
jb
scas
xchg
jo
add
xor
es
adc
xchg
sub
xor
insl
mov
mov
dec
xor
ljmp
popa
pop
shrb
jl
jae
es
data16
movsb
dec
dec
add
push
clc
or
jle
inc
loopne
pop
jl
lods
cmp
fsubp
dec
mov
sti
xchg
pop
imul
sbb
cwtl
outsb
fidivs
les
or
push
or
sub
ljmp
lock
xchg
imul
std
pop
addb
push
inc
pusha
loope
ret
mov
scas
xchg
mov
mov
mov
mov
inc
cmp
sub
xchg
dec
jle
es
fwait
es
aam
sub
pop
and
test
mov
adc
movsl
jmp
jg
out
mov
stc
sub
es
ljmp
lret
xchg
push
sti
or
pop
mov
xor
push
mov
or
cwtl
ret
pushf
dec
jmp
xchg
pop
test
je
xorb
mov
cwtl
ret
out
outsb
imul
out
or
xor
sbb
mov
pop
adc
xchg
cli
xor
outsb
mov
int3
adc
dec
push
popf
mov
cmpsl
push
jmp
pushl
leave
cmp
jp
sbb
inc
sub
xlat
mov
lods
xchg
mov
aad
xor
fiadds
mov
adc
inc
cmpsl
rcrl
jne
push
aad
pushf
ja
and
aaa
insl
inc
leave
mov
enter
shrb
inc
cli
aad
in
push
add
loopne
push
mov
xchg
lahf
dec
leave
fs
ljmp
inc
xor
push
loopne
dec
idivl
popa
lods
lock
xchg
rol
repz
imul
jns
or
gs
pop
push
ret
fisttpl
and
call
adc
hlt
mov
insb
and
cmc
repz
leave
lcall
iret
bound
lods
rep
gs
add
popa
ret
rorb
add
cmp
test
ds
pop
dec
lods
jno
sub
cmp
push
insl
lock
pop
das
xchg
imull
daa
fidivrs
cmpsl
imul
dec
fistpl
pop
push
popf
jne
inc
aad
ss
xchg
pop
sbb
pop
or
mov
push
arpl
in
insb
xchg
popa
arpl
enter
js
push
popf
into
jecxz
jb
mov
es
cmpsb
int
les
push
jno
out
add
push
notb
add
pop
pop
dec
mov
xlat
shrb
xor
std
cmpsb
popa
cmc
cli
or
jbe
ficomps
mov
sar
aas
lea
in
repz
sub
testb
aas
xchg
jecxz
movsl
inc
mov
cmp
pusha
rol
xchg
adc
xchg
xor
scas
jp
and
mov
ds
fisubrl
repz
adc
faddl
repz
or
jle
add
inc
sub
stc
imul
hlt
out
and
add
push
daa
repnz
dec
and
sbb
out
or
lods
xchg
out
jp
outsl
out
sbb
xorl
insb
dec
xchg
mov
rclb
sbb
jmp
adc
out
adc
jle
int
adc
add
int3
jnp
bound
and
adc
xlat
lods
and
sub
xchg
adc
loopne
add
pop
lods
bound
and
cwtl
sbb
popf
out
loop
mov
xchg
inc
popf
popa
sbb
mov
mov
dec
add
ret
and
lds
imull
ficoml
ret
sbbb
and
inc
mov
outsb
or
fisttpll
leave
mov
add
ficoms
mov
fucom
mov
sbb
mov
int3
inc
lahf
out
mov
mov
xchg
stos
add
das
mov
movsb
add
pop
rcll
dec
das
jl
dec
cmp
push
aas
adc
jnp
ret
mov
jecxz
clc
lods
shl
mov
cltd
clc
in
sub
testl
sub
sbb
lret
and
pop
lret
adc
mov
sub
lret
faddl
xor
lea
movsl
cs
lds
pop
stos
loope
lret
movsb
cltd
mov
jl
cmc
mov
pop
sbb
pusha
inc
sahf
cwtl
cld
sbb
cmp
jp
sub
sbb
push
xchg
addr16
scas
out
aas
fistpll
mov
push
in
jle
xor
lret
xor
inc
test
mov
sbb
adc
call
mul
mov
sub
dec
mov
pop
jb
jae
pop
ljmp
scas
js
cmp
xchg
sbbl
sbb
outsb
lahf
stos
fs
lods
sbb
push
adc
adc
aam
in
xchg
std
fistl
or
int3
stos
or
inc
mov
pop
xor
or
fld
add
test
mov
xor
insl
add
test
adc
aam
shll
cmc
adc
mov
aad
xor
sbb
push
xchg
add
notb
pop
fs
int
dec
shr
rorl
mov
cmp
mov
sbbb
clc
icebp
pop
incl
jae
nop
test
cmp
out
jne
adc
xchg
ss
cmp
movsl
pop
scas
pop
out
xor
xor
fs
xchg
cmpsl
mov
mov
test
and
cmp
les
jmp
pop
push
stc
adc
xor
mov
and
ss
lcall
adc
nop
pop
lods
and
jge
add
mov
outsl
and
lcall
rol
es
std
inc
inc
mov
jb
mov
xchg
je
mov
mov
cmp
test
pusha
sbb
adc
mov
jb
add
mov
jg
sbb
dec
mov
les
fsubs
push
sbb
pop
or
xchg
mov
repz
xchg
loopne
cmc
pop
cli
stos
fucomi
add
adcl
or
not
mov
mov
insl
or
xor
jecxz
sbb
inc
push
scas
cmc
push
xchg
cs
cli
push
push
stos
bnd
push
and
scas
inc
adc
jg
fldt
dec
push
pop
cmp
scas
js
cs
mov
mov
mov
add
lcall
shlb
in
xorb
jge
rcr
cli
push
jmp
imul
je
pop
or
cld
outsl
mov
jg
loopne
fisttpll
pop
jo
push
dec
test
dec
cld
mov
hlt
sub
je
dec
data16
rcrb
fstpl
and
push
adc
cld
insb
adc
pop
xchg
stos
call
rorl
fs
movsl
inc
or
movsb
mull
icebp
test
sbb
hlt
mov
stos
mov
cmp
jge
push
xor
jle
mov
push
sbbb
and
push
push
es
xchg
mov
adc
dec
scas
out
pop
push
push
out
jo
mov
mov
add
adc
dec
xlat
pushf
ljmp
call
fidivrl
add
jge
in
mov
cli
mov
mov
push
mov
push
stc
rcrb
xor
hlt
and
iret
inc
lret
out
adc
ds
les
push
test
arpl
jne
lret
rcl
sub
cmp
and
in
les
jno
or
jg
test
cltd
mov
rolb
fists
lods
push
or
xchg
and
test
sbb
mov
xor
dec
arpl
lods
mov
adc
in
inc
cmp
out
hlt
add
fs
sbb
add
cmp
scas
mov
enter
inc
subl
int3
scas
cwtl
jne
ficompl
jae
pop
cli
xchg
testl
int3
mov
mov
out
test
mov
mov
hlt
rcrb
test
jb
adc
xlat
out
inc
xor
lret
or
sub
adc
fstp
xchg
shrl
or
sub
jl
addr16
pop
psubsb
jle
sbb
mov
cmpsl
imul
jecxz
insl
pop
push
pusha
xchg
mov
xlat
cs
in
xchg
aam
push
test
dec
push
aam
repz
mov
pop
inc
lock
shll
sub
cmp
loope
mov
leave
data16
scas
add
push
jns
lock
jp
adc
mov
jns
inc
mov
jne
mov
push
test
test
fdivs
out
push
fstl
dec
lods
je
rclb
ret
int3
push
lods
jmp
inc
mov
and
xchg
jno
dec
call
push
cmp
das
sahf
jg
enter
dec
mov
sbb
and
cmp
xchg
mov
jnp
xchg
data16
mov
sub
insb
sbb
popa
je
mov
xor
cmp
mov
or
xchg
int
sbb
jge
fcmovb
mov
jne
mov
mov
jl
sbb
xor
mov
aas
iret
xchg
outsl
add
inc
add
add
mov
loopne
sbb
push
sub
sub
pop
jnp
push
lock
inc
add
and
xchg
push
push
inc
jns
jge
fisubrl
inc
lahf
ss
jmp
add
xor
pop
lods
call
sbb
sub
imulb
mov
aad
movsb
cmp
gs
ss
loope
and
pop
rcrl
adc
pop
mov
mov
pop
insl
or
or
gs
lret
and
jb
mov
sub
out
mov
pop
mov
das
cmp
imul
sub
loopne
sub
adc
lret
fs
adc
pop
sub
addb
imul
adc
loopne
jne
sbb
loope
mov
jmp
test
test
in
jo
xchg
push
sub
sti
ss
sub
xor
push
fisttpl
inc
jecxz
iret
xor
ljmp
mov
pop
mov
mov
mov
test
popf
dec
call
cmpsb
mov
mov
and
lods
fidivrl
add
sbb
sarl
mov
outsb
push
pop
jb
xor
xor
push
int
into
lret
fldenv
ret
shrl
push
push
test
push
shrb
aam
push
es
outsb
dec
add
shll
push
imull
cld
and
daa
mov
jno
je
mov
pop
ret
cmpsl
fidivrs
sub
stos
cmp
push
cltd
insl
mov
sbb
push
and
or
or
mov
test
lock
int3
inc
fs
dec
mov
hlt
subb
das
dec
test
push
sub
and
jnp
sbb
aad
cmp
xor
add
enter
mov
jmp
or
insb
adc
add
pop
jl
out
jp
out
push
aaa
ss
out
jne
mov
push
push
mov
std
ret
xchg
les
cmpsb
sti
pop
push
mov
mov
mov
mov
std
sbb
cld
sub
je
loopnew
xchg
iret
subl
mov
push
xchg
add
das
jl
cld
outsb
or
lods
popa
loope
pop
repz
ds
loope
pusha
or
test
push
lcall
ret
sub
out
test
bound
stos
movl
addl
les
pop
pop
sbb
mov
pop
mov
mov
adc
js
mov
lea
mov
pop
int3
ret
imul
loope
cs
in
lock
lods
pop
out
fwait
and
ret
mov
daa
shl
pop
jle
xchg
scas
loope
push
loop
fidivs
mov
inc
lods
in
and
cwtl
repnz
sbb
lods
push
popf
push
cs
jo
cmp
jnp
lcall
jecxz
push
adc
push
or
or
jle
mov
enter
out
js
sbb
mov
xchg
in
sub
cmpb
sbb
sub
je
dec
pop
in
dec
repnz
fsubrs
mov
mov
pop
cmp
movl
cwtl
push
jle
dec
fdivl
mov
mov
and
xchg
inc
and
pop
push
dec
lea
dec
add
cmpsb
xchg
jbe
xchg
mov
aas
enter
sub
jbe
outsl
out
jmp
pop
sub
clc
xchg
shl
xor
cmpl
cli
mov
push
mov
push
xor
jb
clc
ret
pop
jge
mov
fildll
xchg
sbb
mov
inc
mov
shlb
push
and
sub
sbb
std
or
mov
sbb
pushf
test
xchg
loopne
jb
inc
xor
pop
aas
jl
cmc
dec
mov
cs
imul
jp
outsb
sub
lds
adc
es
adc
pop
xlat
or
mov
dec
adc
popf
ret
mov
pushf
dec
test
test
lock
jmp
pop
xchg
add
cmp
movsl
out
pop
fstpl
in
dec
adc
enter
in
cli
loope
rorb
mov
inc
lret
and
lods
loop
and
xchg
xchg
in
lahf
hlt
or
inc
in
push
xor
dec
jo
jns
sub
popa
cmpsl
adc
fisubrl
or
cmp
pop
mov
sub
inc
fsubrl
push
inc
push
inc
sub
xor
jl
inc
inc
pop
xchg
sub
lret
gs
mov
repz
xchg
mov
loopne
test
imul
sbb
inc
mov
cmp
lods
ret
nop
jg
add
adc
test
lcall
cmp
sub
repz
fadd
sub
mov
xor
pop
pushf
cltd
mov
sub
cld
mov
rcrl
jne
add
and
sub
adc
xor
cmc
cmp
sbb
xchg
test
push
dec
rorb
adc
push
cmp
pop
mov
sub
call
scas
repz
jl
and
out
cmpsl
jg
fnstsw
cmp
je
and
ret
xchg
int
lret
imul
add
mov
pop
mov
adc
imul
cltd
imul
loop
mov
in
cmpsl
pop
add
out
cltd
stos
pop
cld
negb
dec
dec
push
mov
pop
mov
xor
jbe
mov
sub
mov
rol
cmp
cmp
loope
cld
inc
or
movsb
sub
hlt
sub
gs
mov
popf
mov
clc
xorl
divb
adc
roll
lods
sub
inc
or
add
rclb
cmpsl
jne
std
fsubl
sti
xchg
loope
in
stos
inc
bound
or
jno
or
es
pop
lahf
insl
add
loop
in
mov
dec
add
xchg
sub
cmp
outsl
insl
dec
pop
cmp
lret
mov
cmc
out
enter
add
filds
bound
pop
insl
sbb
add
sub
pop
mov
mov
test
popa
gs
das
movsl
mov
add
adc
xor
nop
or
jecxz
pop
or
cmp
cmp
mov
add
stos
or
insb
ljmp
rep
push
cld
scas
es
lods
push
or
mov
pop
out
push
pop
daa
cmp
in
inc
push
xlat
cld
cmp
fstps
sahf
xlat
pop
dec
ret
pushf
mov
mov
out
xor
pop
cmp
pop
loope
jo
xor
ret
in
cmp
or
push
dec
leave
mov
fisubrl
mov
sub
add
int
sbb
xor
lret
fsubrs
fldenv
out
addr16
shlb
dec
cmp
jp
rcr
popf
mov
lret
cmp
add
fisttps
jmp
in
or
xchg
stc
pushf
pop
rcr
pushf
movsl
rcl
std
ja
sbb
test
shrl
pop
xchg
ss
in
ret
mov
lahf
push
inc
dec
inc
hlt
sti
and
xor
nop
lret
out
pop
and
or
lahf
cmpsb
mov
cmp
cmp
lods
mov
push
push
loope
add
mov
outsl
jle
xor
mov
or
mov
cwtl
leave
mov
and
jbe
aam
in
int
cmpb
add
add
push
jo
xchg
pop
int3
fs
inc
fwait
mov
mov
bound
mov
jge
xor
jb
rorl
lods
ss
std
ja
mov
insb
movsl
imul
and
cwtl
xor
clc
inc
ret
mov
outsl
fsubp
cmp
pop
les
ret
adc
shlb
into
stos
fdivrs
inc
in
mov
sub
xor
dec
add
and
test
ds
insl
sub
mov
cld
movsl
push
jae
and
lock
fisttpl
mov
bound
sbbb
push
inc
in
xor
aaa
mov
test
push
cmpl
ja
sub
sahf
out
xchg
cmpsl
aad
cld
jle
sti
stc
faddl
sbb
hlt
adc
clc
add
mov
scas
ss
cs
push
test
cli
dec
cwtl
mov
stos
push
into
jae
in
fidivl
daa
lret
data16
call
inc
cs
xlat
or
lcall
jge
arpl
or
mov
fists
xlat
xor
stc
mov
test
sub
ror
popf
xlat
jecxz
and
adc
test
sub
mov
in
pop
imul
insl
lahf
mov
sbb
fidivs
adc
fldt
pop
and
push
lret
adc
push
hlt
js
test
lods
adcl
push
ja
in
shr
popf
mov
dec
and
sub
dec
ret
aas
mov
push
jl
inc
dec
jle
push
cmc
sti
push
pop
add
sub
pop
pop
dec
orl
dec
ds
mov
push
repz
or
insl
scas
mov
cmpsb
imul
adc
inc
pop
loopne
mov
lds
sub
pop
mov
push
mov
aas
ds
stos
cmp
pop
push
fistps
ficoml
cs
xor
sbbl
dec
inc
push
daa
daa
jns
and
lret
xchg
cmpb
test
in
int3
pop
sub
cmp
cli
pop
int3
jne
sub
mov
lret
mov
outsb
andb
cmpsl
xchg
sahf
pop
rorb
in
push
xor
in
gs
push
mov
add
xchg
add
and
pusha
loope,pt
scas
xor
es
sarl
dec
jne
push
rorl
movsl
jne
jg
sub
sahf
gs
sbb
and
or
aad
cmp
pop
jmp
scas
ret
push
sub
test
cmp
or
inc
and
cmp
pop
ds
repnz
push
neg
push
lea
sub
add
pop
sbb
in
or
aad
lret
loopne
mov
add
out
xchg
incb
ret
or
out
push
xchg
in
clc
pop
jae
enter
loop
xchg
push
push
ret
test
jge
movsl
aam
or
xchg
jle
sbb
xor
pop
pop
shrb
mov
xor
repz
xchg
sbb
test
inc
rorl
pop
push
pop
mov
jo
adc
and
sub
lret
dec
dec
jbe
inc
jl
cmp
popf
mov
shrl
or
sbb
pop
cmp
cmpsb
xlat
dec
mov
clc
cmpsb
or
fadds
adc
movsb
sub
cmpsb
lea
sti
pop
jmp
insl
push
in
mov
cmp
mov
lock
movsl
xor
xchg
cmp
insb
sbb
xor
pop
fsubrs
dec
add
aam
mov
lea
sbb
push
out
aas
pushf
lea
inc
push
aad
sub
mov
dec
mov
cmp
cli
or
and
in
xchg
add
cli
mov
rclb
dec
mov
inc
sub
addl
push
dec
jns
xor
mov
cmpsl
pop
jg
mov
jb,pn
lret
mov
mov
lcall
pusha
mov
push
pop
adc
or
sbb
cmp
sub
sbb
out
mov
push
ret
call
sbb
inc
cld
loope
add
or
mov
adc
mov
inc
out
dec
xlat
adc
int3
nop
bound
cltd
fisttpl
xchg
arpl
push
test
std
movsb
adc
cmpsl
insl
movsl
sbb
adc
jl
mov
pop
mov
js
mov
xchg
xor
je
xchg
sub
push
push
jle
iret
es
test
gs
ljmp
sbb
mov
in
ret
adc
dec
shll
into
lock
dec
sahf
dec
sub
fnstsw
into
idivl
or
add
movsl
and
fistpll
cmc
pop
sbb
fcmovu
or
pop
xchg
cmp
push
xchg
push
sbbl
notb
faddp
xchg
sbb
jae
sbb
dec
rcll
push
nop
sbb
out
mov
das
bound
popa
inc
jb
fdivl
jno
fdivrp
lcall
push
out
xchg
add
dec
add
xor
test
sub
jo
mov
test
gs
out
shl
xor
push
js
shr
dec
repnz
mov
add
lahf
jnp
andb
stos
mov
push
mov
mov
sarl
out
xchg
inc
sub
std
arpl
rcr
pop
outsl
or
adc
mov
loop
xchg
dec
sahf
jecxz
ret
in
cwtl
xchg
jb
mov
sbb
cmp
or
mov
xor
sbb
sbb
sbb
jl
loopne
dec
nop
subl
add
xchg
jg
aam
scas
or
inc
sub
add
repz
adc
adc
adc
bound
jg
sbb
pop
sbb
adc
mov
cltd
mov
dec
adc
cld
push
push
sbb
adc
insl
ss
je
leave
mov
test
inc
adc
test
and
test
mov
fimull
dec
fs
lods
movsbl
mov
mov
fistps
mov
cmp
mov
fmull
test
shll
sbb
pusha
sahf
adcb
addr16
cwtl
xchg
pop
jle
push
dec
ja
adc
xor
insl
test
fsts
mov
outsb
lods
popf
test
mov
xchg
fimull
jbe
test
mov
or
jae
icebp
fmul
cmp
or
mov
mov
inc
ficoms
jmp
jns
or
out
rolb
xchg
subl
adc
inc
test
xor
adc
xlat
hlt
adc
and
sti
cwtl
push
xor
mov
bndldx
lock
xor
into
addr16
sub
sub
sbb
gs
mov
inc
stos
xchg
mov
insl
test
scas
shlb
push
jmp
ret
in
loopne
ret
adc
jg
popf
inc
or
xchg
sahf
inc
ret
ret
and
ret
push
jecxz
cmp
dec
or
int3
int
pop
pusha
xlat
mov
pop
or
inc
out
mov
mov
std
mov
mov
xor
cwtl
in
inc
std
lahf
add
pop
scas
lcall
incl
imul
jecxz
push
jge
xor
cltd
je
scas
fiaddl
or
push
movsl
test
add
lock
mov
pop
cmp
sbb
add
add
xor
movsb
out
add
dec
cmp
or
push
jp
icebp
mov
jp
add
or
imul
dec
ffreep
lret
outsl
cld
add
insb
rcrb
mov
push
or
rorl
in
stc
rorl
push
hlt
inc
repnz
pusha
jo
mov
ds
imul
cmp
and
ja
add
fcmovnu
sub
jge
test
mov
jl
dec
dec
std
inc
mov
adc
push
fistps
sub
loope
push
andps
mov
jecxz
jae
bound
fwait
cmpsl
pop
mov
xchg
jno
lret
fidivs
xchg
mov
ljmp
dec
lods
pop
hlt
cmp
jb
mov
cmc
pop
and
xlat
pop
sub
je
add
jg
in
lock
ret
test
scas
cld
pop
iret
mov
stc
push
dec
lea
stc
xor
popf
sti
sbb
popa
add
repnz
inc
mulb
and
mov
fwait
mov
xchg
test
pop
cmp
mov
sub
lods
sub
dec
out
clc
mov
movd
push
push
cmp
pop
or
fadd
repz
pop
fwait
or
pop
shlb
cmp
sbb
cmp
jmp
rorb
fadds
xchg
dec
push
mov
loope
mov
push
or
pop
aas
sub
jnp
xlat
scas
or
dec
mov
scas
and
pop
out
sbb
into
mov
test
push
outsb
pop
popf
test
push
pop
xor
mov
stc
push
jnp
add
mov
pop
dec
and
repz
adc
mov
add
mov
mov
xchg
in
sbb
nop
icebp
dec
das
arpl
pop
xor
dec
cmc
sub
aaa
jb
or
adc
sti
fcoml
and
push
mov
dec
sub
pop
movnti
push
add
icebp
cmpsl
shll
insl
xor
push
jne
cmp
repz
push
aad
jecxz
mov
jo
lea
jne
es
sar
data16
sbb
sbb
jg
mov
loop
push
push
xchg
in
dec
sti
mov
mov
dec
inc
push
xor
mov
scas
testb
std
mov
test
and
fwait
adc
pushf
and
adc
pushf
cmpsb
mov
push
lds
jmp
gs
push
mov
lret
add
xchg
and
dec
cmp
mov
and
ss
mov
cmc
fstl
add
mov
int
or
out
sti
fstpl
cltd
sbb
test
test
je
and
adcl
ljmp
mov
cli
test
addl
cmc
ljmp
or
test
xchg
sub
jecxz
lods
inc
lret
popf
testb
adc
fidivrl
fwait
nop
inc
inc
mov
mov
sbb
iret
mov
add
aam
rolb
incb
ljmp
jge
pusha
push
cmp
scas
mov
jne
add
or
push
mov
adc
push
addr16
icebp
adcl
shl
mov
jg
push
xchg
cmp
imul
shlb
or
ret
movsb
jno
cmp
and
jge
fistpll
and
or
aaa
icebp
adc
js
xor
rorl
jo
test
inc
jb
ret
repnz
dec
mov
rcr
cmpsb
inc
cld
loop
inc
jecxz
daa
mov
jl
xchg
push
jnp
jp
xchg
jae
push
out
repz
shr
jp
add
xor
divl
out
xchg
xorl
xor
adc
xchg
push
aam
outsb
lret
adc
cld
fwait
out
pop
aaa
mov
push
xchg
xchg
sbb
cs
aas
or
push
mov
pop
pop
cmp
loop
mov
loope
push
cs
pop
mov
xchg
push
jnp
push
jnp
repnz
dec
xor
out
xor
mov
ja
test
cmp
add
mov
push
shrb
fnstenv
pop
imul
cmp
sbb
repz
adc
fnstcw
fwait
nop
or
rcl
setb
xor
mov
xchg
mov
mov
sahf
jo
rolb
movsb
ss
jg
fnstcw
mov
push
popf
pusha
loop
cmp
jne
and
ja
xlat
xor
jecxz
test
ret
sub
and
mov
cmp
inc
sahf
rcrb
xor
push
xchg
mov
sub
xor
iret
jmp
scas
pop
sub
dec
loope
cmc
push
cmp
and
adc
jecxz
mov
push
xchg
pop
stc
data16
pop
lods
cs
sub
jle,pt
addr16
dec
stos
cltd
dec
mov
mov
test
jle
push
push
pop
mov
push
mov
ljmp
pop
xor
mov
jg
xchg
ror
inc
cmpsl
or
enter
cmp
ja
and
repz
stos
popa
mov
ja
sbb
pop
fisubs
mov
ret
or
sub
jne
jecxz
scas
add
push
iret
imul
jae
push
into
push
inc
dec
insl
xor
cmp
jecxz
xor
or
sub
ds
mov
dec
shrl
xor
jns
pop
aaa
mov
js
scas
hlt
mov
ss
mov
sarb
sbb
pop
loope
clc
sub
add
test
xor
add
xor
lea
hlt
push
shrb
repnz
cli
addb
push
imul
pop
pop
rclb
lods
cld
cmpsb
sbb
xchg
addr16
or
push
jle
repnz
pop
mov
inc
repnz
mov
mov
fisttpll
jp
daa
sahf
push
and
fadds
and
xor
shl
in
lea
mov
adc
cmp
cli
cmp
xor
test
sub
pop
pop
inc
xor
sub
xlat
or
adc
jmp
pop
push
out
das
pusha
andl
pop
stc
jbe
stos
dec
movsl
lahf
jnp
fwait
mov
cmp
and
fildl
push
cmc
mov
jno
es
lret
addr16
push
rolb
les
sbb
inc
fildll
pop
arpl
sbb
cmp
fwait
int
adc
mov
mov
xchg
inc
pop
mov
lds
mov
xchg
dec
outsl
loopne
cmp
cmpsl
lods
int3
sub
mov
imull
int3
jge
adc
sub
sti
mov
stos
mov
mov
insb
adc
movsl
push
add
or
jbe
daa
mov
jmp
cmp
sub
pop
or
lea
jnp
mov
xor
jp
in
movsb
adcl
pop
stos
pop
icebp
es
mov
or
and
and
add
xor
insl
jge
dec
lods
insb
roll
ja
jge
das
into
dec
cmp
mov
sbb
adc
mov
pop
imul
jae
scas
out
jns
scas
push
mov
sti
mul
jne
les
xor
loope
and
cs
rcrl
push
insb
sbb
icebp
fadds
add
test
imul
test
or
push
out
mov
les
mov
in
nop
stos
dec
inc
clc
leave
rclb
leave
push
and
jp
and
inc
jnp
std
sbb
out
xor
push
cmp
in
fcompl
sbb
jbe
jmp
jae
pusha
xchg
daa
cmpsl
jne
ds
cld
push
inc
icebp
adc
or
ds
dec
mov
add
imul
add
outsb
fsubs
push
xchg
lret
xchg
movl
add
cmp
testb
loope
push
fdivp
fmuls
mov
push
test
fadds
sub
cmc
and
bound
or
sbb
imul
mov
and
mov
daa
cs
enter
add
fdivs
mov
dec
and
inc
movsl
movsl
aam
adc
cli
or
movsl
xchg
jle
pusha
into
dec
push
jmp
cmpsl
movsb
enter
imul
cmpsl
arpl
xorl
stos
ficompl
jae
xchg
loope
movsl
mov
test
push
add
cvtps2pi
jns
push
in
call
jmp
xor
or
xchg
jmp
xor
jb
int
test
mov
aam
cs
rcll
gs
outsl
loop
leave
xchg
xchg
call
je
xchg
gs
test
loopne
loopne
sbb
pop
pop
push
dec
in
adc
jp
jmp
sbb
push
jmp
imul
pop
fimull
inc
push
xchg
insb
xor
xorl
sbb
and
push
dec
mov
and
push
pop
rclb
jp
rcll
mov
xor
or
cmc
cmpsb
pop
push
aam
cmp
mov
movsl
mov
lret
mov
test
movb
mov
out
rcrb
inc
sub
add
andl
flds
xor
mov
dec
adc
ja
cmc
dec
imul
movsl
add
mov
movsb
fistpll
nop
fldl
xchg
sti
push
les
inc
sti
aad
cld
scas
cld
icebp
pop
je
mov
mov
sbb
push
pusha
lret
stos
jb
mov
lds
and
rorl
rcr
pop
repnz
cli
add
xchg
dec
mov
dec
cmp
mov
sub
movsl
fmulp
in
add
and
mov
leave
xor
sub
pop
mov
sub
je
xchg
sbb
dec
das
cmp
shll
pop
pop
fwait
inc
pop
arpl
ljmp
std
fwait
push
rdpmc
sbb
push
lea
fldl
jmp
inc
jl
adcb
ficoml
jb
lret
test
jmp
pop
jns
ret
aaa
sti
je
inc
ja
arpl
subb
mov
dec
sbb
push
popa
mov
jnp
push
into
aad
das
pusha
int
xor
xchg
mov
jge
xchg
aaa
push
mov
jp
sub
data16
stos
stos
xchg
mov
adc
repnz
or
sbb
push
dec
leave
add
orps
dec
add
roll
jno
icebp
or
or
ret
jl
add
jnp
es
sbb
mov
jnp
clc
fwait
mov
test
adc
inc
add
add
cmc
mov
push
push
iret
popa
xchg
mov
push
cli
or
pop
jns
pop
lods
mov
call
mov
mov
fsubrl
and
std
loop
xchg
cmp
repz
mov
pop
stos
outsl
sub
and
jne
loop
mov
out
fdivl
aam
mov
xor
dec
pop
jb
call
xchg
lock
pop
lret
js
add
cmpsb
pop
daa
jno
xor
movsb
fwait
inc
pop
jle
ds
lcall
iret
jo
lahf
enter
lds
sbb
mov
jb
cmpsl
outsb
mov
xchg
inc
inc
enter
clc
out
sub
popa
xchg
movsb
pop
cld
repz
out
sbb
xor
lea
mov
inc
aad
in
mov
shl
inc
and
add
push
inc
addr16
in
insb
out
add
jp
aaa
mov
jmp
adc
loope
add
sub
addr16
xchg
xor
xchg
fildll
fsts
or
mov
push
xchg
imul
lds
cli
push
xor
add
adc
jmp
inc
mov
loop
ret
clc
push
out
pop
movsl
jl
int
cltd
sub
stos
dec
adc
cld
rcrb
cmp
xchg
cmc
int3
push
test
cmp
push
jo
insl
sbb
pop
jl
jge
loopne
ret
xchg
int
pop
jmp
call
fcmovnb
push
je
jo
pop
push
out
repnz
or
push
mov
dec
into
test
xor
lret
jae
mov
aas
out
std
push
xor
jp
loop
or
std
test
lds
push
dec
sub
sbb
rcrl
dec
add
mov
xchg
mov
int
xchg
jns
nop
push
std
ds
insl
sub
fs
cmp
dec
jae
xor
dec
mov
test
jb
sbb
mov
sbb
adc
xchg
inc
jae,pn
sbb
xorl
mov
xchg
sub
lahf
imul
in
pop
repz
cmpb
cld
lcall
iret
les
fstl
sahf
xchg
jmp
push
xlat
xchg
mov
mov
dec
aaa
xlat
mov
in
test
and
insl
jmp
cmp
and
mov
dec
mov
xor
and
out
popa
push
inc
shrl
repz
loope
dec
aad
js
imul
lahf
shrb
or
ljmp
into
lds
in
xorl
inc
out
mov
jbe
aas
inc
jae
xor
ret
cmp
mov
push
jl
loop
in
lret
xchg
fists
xchg
add
mov
mov
or
cwtl
pop
pop
jo
das
lcall
jnp
push
push
ss
pop
out
mov
cmp
in
sbb
add
jge
xor
and
insb
adc
cmp
in
mov
mov
mov
cli
je
mov
cld
in
aas
aas
and
ss
pop
ds
adc
mov
lods
dec
jae
or
leave
or
lods
jle,pn
mov
inc
add
mov
pop
mov
dec
loope
pushf
or
pop
ja
cmpsb
ds
iret
xchg
mov
jb
add
or
sbb
aas
push
mov
pop
popa
imul
fwait
scas
pop
pop
add
inc
and
lods
lcall
push
aad
pop
rcll
fcomps
xchg
dec
mov
sbb
cmp
iret
aaa
pop
sar
pop
mov
lods
gs
jae
sahf
jns
xor
js
fiadds
cmp
mov
xor
xor
sbb
scas
insb
mov
cmpsb
shll
mov
movsb
mov
cmp
sar
or
and
add
adc
enter
sbb
cld
lock
adc
in
cmp
in
push
orb
decl
nop
stos
pop
addr16
inc
pop
inc
pop
repnz
les
jnp
xchg
rorb
lret
mov
scas
dec
fs
cli
cmp
lods
sbb
pop
ja
mov
mov
ret
sarl
addr16
adc
mov
cld
sahf
loope
sbbb
test
pop
adc
fstpt
dec
pop
ret
xor
mov
stos
xor
and
xchg
cmp
lods
sbb
dec
mov
pop
xchg
jmp
pop
test
pop
cld
mov
sub
push
push
sub
cld
ret
and
outsb
cmp
mov
inc
lret
pop
add
pop
fdivrl
push
push
jmp
call
push
pop
je
push
das
jae
adcb
inc
addr16
icebp
dec
jns
insb
mov
xchg
cmc
jle
pop
lahf
outsl
and
adc
pop
addr16
sub
jb
cmp
pop
popf
testb
sub
mov
out
pop
dec
sti
push
adc
out
scas
jle
jae
sub
xchg
roll
xlat
cmpsl
cltd
es
cmp
jg
push
addb
into
js
xor
xchg
sub
sbb
insl
cmpsb
shlb
aaa
push
cmp
das
mov
jo
jno
jns
in
jnp
inc
mov
insl
push
sub
dec
repz
xchg
inc
jbe
leave
mov
push
jmp
out
jae
sub
or
mov
dec
bound
sbb
lcall
or
jle
or
dec
negl
adc
mov
and
dec
and
jno
or
rclb
sub
sbb
push
pusha
add
in
xchg
jo
pop
and
push
xor
divb
incl
sbb
mov
popa
test
iret
out
fdivrp
es
or
lret
pushf
add
add
mov
pop
sbb
lea
movsl
xlat
mov
add
lret
pop
jbe
pop
pop
stos
scas
mov
inc
fmuls
pop
or
adc
arpl
popa
lea
int
mov
xchg
mov
data16
pop
mov
cmpl
outsl
test
dec
adcl
and
inc
scas
push
and
out
mov
cmp
movsb
jle
adc
test
fs
add
mov
xchg
and
mov
cmp
pop
inc
jle
shll
or
push
cmp
je
mov
loopne
add
add
movsb
ror
sub
dec
mov
stc
push
lods
cmp
jne
cmc
mov
pushf
cmc
mov
xor
js
pop
cli
daa
sbb
push
mov
pushf
cmc
fcompl
fisttpll
mov
inc
and
add
pop
cmp
xchg
pop
ljmp
mov
or
aam
pand
push
mov
leave
add
lods
je
stos
jp
out
kmovb
jne
add
js
aad
jecxz
sbb
inc
jo
or
shll
dec
add
out
icebp
adcl
fisttpl
mov
test
mov
stos
faddl
inc
pushf
out
xorl
push
addr16
cmpl
fwait
inc
les
xchg
lcall
mov
sti
jmp
lods
sub
cmpsb
sub
push
fucomi
outsl
cmpsb
xor
sub
sub
scas
push
xor
popf
pop
and
inc
loopne
inc
push
jb
cmpsb
fdivs
cmovb
ljmp
out
mov
es
jo
les
stos
pop
in
popf
pop
cs
insl
lret
scas
push
mov
jbe
pushf
jge
push
jnp
in
lcall
xor
fwait
mov
rorb
out
pushf
cmp
lret
stos
add
cltd
in
pusha
mov
mov
lret
nop
popf
mov
and
incl
cs
aad
cmc
in
rcll
lret
xor
mov
lock
neg
jp
pop
xor
mov
mov
aam
push
sbb
sbb
repz
hlt
rolb
movsl
orb
xor
xchg
add
cmc
mov
icebp
jno
fbstp
test
inc
fdivs
pop
xor
push
fadd
add
sahf
jmp
out
sub
mov
testb
out
cmp
cli
ljmp
cmpsb
popf
leave
mov
push
mov
into
stc
or
dec
subl
sub
std
mov
movsb
inc
adc
inc
add
aas
or
push
scas
sbb
sub
push
stos
aam
jns
stc
sahf
mov
xchg
pop
add
aas
cli
rclb
in
popf
rcrb
adc
movsl
scas
clc
test
lcall
cli
test
enter
adc
fwait
jl
lcall
mov
sbb
sbb
adc
cltd
inc
xlat
mov
pop
inc
movsb
addl
xor
xchg
aad
popa
cmp
cmp
int
outsl
loopne
dec
ja
sbb
pop
incl
sbb
xchg
mov
and
pop
pop
push
cmp
std
adcl
out
ja
lret
insl
out
dec
lcall
pop
fs
dec
outsl
stos
inc
scas
popa
repz
nop
xor
fnstenv
jl
mov
mov
int
out
dec
adc
xchg
std
outsl
mov
add
mov
add
inc
ja
nop
cmpsl
push
pop
in
xorl
pop
inc
sbb
jg
xor
xchg
shrb
fbstp
or
mov
es
pop
outsb
push
out
mov
mov
dec
clc
test
dec
outsb
mov
cli
mov
push
jnp
mov
cmc
paddd
fisttpll
dec
push
jg
sub
xor
fwait
daa
pop
movsb
and
adc
cbtw
mov
ret
rcrl
inc
fisubs
push
sbb
sub
lea
sub
dec
jp
sub
xor
mov
adc
or
sub
inc
sbb
push
push
dec
xchg
out
lds
or
jbe
test
push
xlat
mov
jne
inc
daa
pop
add
mov
repz
mov
add
mov
sbb
loope
outsw
add
mov
icebp
and
xor
xlat
sub
mov
xor
leave
ss
xchg
jno
dec
cld
xor
mov
mov
push
adc
pop
and
mov
jne
imul
in
scas
gs
push
js
iret
stos
dec
daa
int3
xchg
cmpsb
jecxz
rolb
cs
mov
sbb
cmp
mov
pop
sbb
xchg
ja
jle
and
fistpl
xor
fcomp
sbb
sti
dec
fnstenv
push
sub
mov
push
sub
adc
cmp
add
jp
test
push
fnstsw
pop
sahf
jg
bound
mov
pusha
xor
vpmacsdqh
mov
or
out
mov
orb
into
arpl
test
inc
adc
into
xchg
lcall
pop
jne
pop
adc
mov
das
sbb
pushf
pop
dec
cmp
ss
dec
imulb
cmc
mov
jnp
dec
push
jge
clc
xchg
imul
cwtl
pop
xchg
mov
add
shlb
mov
jmp
pop
fnstenv
or
jmp
faddl
mov
cmpsb
xchg
cmc
pusha
xchg
je
mov
xchg
mov
pop
outsb
push
adc
and
jae
jmp
push
imul
lods
std
fwait
mov
cmpsb
jns
sbb
push
mov
mov
mov
sbb
js
xchg
mov
in
sarb
int
inc
hlt
lods
mov
mov
ljmp
ja
imul
jae
sub
orb
test
loopne
sarl
mov
hlt
sbb
mov
mov
dec
add
jl
inc
cmp
mov
lea
jecxz
sbb
xchg
dec
and
insl
ffreep
push
and
fcos
pop
jns
lahf
mov
fnstenv
ror
in
js
cmp
sub
stc
sbb
enter
inc
std
call
jg
pop
or
push
and
popf
lcall
xchg
pop
bound
xor
pop
stos
sbb
push
dec
jge
roll
and
adc
push
int
or
xor
stos
lret
sub
xor
cmp
insb
outsb
push
rcl
cld
daa
outsb
and
ds
daa
mov
test
pusha
push
scas
insb
or
mov
and
pop
mov
xchg
cmpsl
cmpsl
mov
push
jbe
jae
out
lcall
mov
into
inc
cmpsl
and
sub
sahf
ds
aam
inc
faddl
int
inc
out
pop
sahf
xchg
and
cmpb
cmp
stc
ljmp
sarl
add
cmpl
insl
popa
and
inc
leave
es
adc
add
xchg
xchg
mov
push
out
adc
out
arpl
sub
sbb
mov
into
jmp
xlat
fsts
daa
xor
js
mov
movsb
push
push
xor
aad
int
or
cwtl
dec
push
ret
cmpsl
xchg
inc
mov
push
enter
sub
xchg
inc
inc
enter
cmp
mov
in
js
mov
andl
jge
clc
test
push
mov
dec
xlat
pop
adc
mov
or
mov
sahf
push
les
dec
adc
jge
in
mov
pop
push
insb
fistpl
js
loope
xor
inc
xchg
dec
mov
lods
fcomip
ds
leave
adc
ret
push
in
push
enter
push
mov
out
or
pop
pop
cmp
pop
inc
das
push
xor
and
adc
inc
sbb
inc
jnp
or
ret
sub
jecxz
fistps
mov
xchg
cmpb
sbb
adc
adc
pop
outsb
mov
xchg
es
xor
out
out
ds
xchg
push
maxps
xor
pop
sub
jecxz
pop
sbb
cmp
out
jb
aam
insl
add
xor
idivl
fdivrl
jge
xor
pop
mov
mov
push
mov
xor
xlat
xbegin
movsl
int
insb
dec
sarl
cmp
xchg
sahf
arpl
cmc
add
sub
andl
pop
pop
fidivrl
popf
jge
push
lods
fwait
dec
dec
cmpl
fdiv
sbb
dec
popa
or
cmc
inc
sbb
dec
lret
fistl
dec
insl
dec
add
cmp
dec
mov
and
dec
ljmp
push
ja
jecxz
add
inc
mov
and
pop
sbb
pushl
pop
and
xor
push
ret
nop
inc
jae
pop
fsubs
movsl
je
stc
loop
sbb
pop
iret
sbb
mov
mov
pop
ret
cltd
xor
imul
or
ret
inc
mov
xor
or
sahf
out
test
fbstp
iret
outsb
in
push
cmp
pop
mov
sub
push
add
sbb
adc
ja
mov
dec
mov
adcl
mov
push
int
fwait
js
fisubrs
leave
int
and
push
jnp
xchg
push
and
dec
inc
mov
mov
pop
std
jmp
xchg
mov
inc
cmc
ja
arpl
cli
sbb
jle
rcll
lods
outsb
xchg
stc
into
pop
lea
in
mov
sbb
ja
and
push
and
adcl
pop
mov
pop
fistpl
xor
call
mov
xchg
scas
loop
int
sub
inc
pushl
cwtl
xchg
mov
ljmp
mov
push
cmpsb
sbb
jb
mov
xlat
test
inc
jbe
xlat
lea
stc
out
push
lcall
xor
push
adc
jmp
mov
inc
mov
push
out
lret
mov
cmpxchg
sti
es
inc
adc
push
sbb
sbb
hlt
xchg
jg
leave
fwait
sbb
cmp
adc
and
fnstcw
in
push
inc
sub
pushf
and
dec
sbb
inc
scas
testl
in
jno
jl
aad
xchg
ret
xchg
fbld
cmp
in
push
xchg
jp
enter
cld
das
cmp
ret
in
stos
pushf
insb
jg
xchg
ja
inc
pop
xorb
loopne
aam
jb
frstor
and
inc
push
push
xchg
orb
rcl
add
cmp
test
dec
cmp
cmp
mul
pop
repnz
add
out
push
mov
jge
push
dec
jl
lods
push
out
aam
subb
lock
imul
inc
lahf
fs
jge
fisubrl
popf
aas
addr16
imul
xchg
pop
arpl
jle
addl
sub
stos
mov
lods
subb
sbb
subb
mov
and
xchg
out
mov
inc
movsl
shrb
js
dec
pop
pop
xchg
arpl
push
repnz
xor
out
mov
jmp
insb
sub
adc
adcb
data16
xlat
push
xchg
pop
sbb
cld
push
lods
xor
sbb
adc
jae
in
push
adc
push
mov
sbb
jle
push
loop
sub
fldenv
pop
xchg
sub
push
mov
lahf
imul
pminub
in
jno
movsb
jecxz
pop
stos
pushf
int
inc
pop
jl
jns
in
xchg
das
mov
jmp
mov
clc
jmp
pushw
pop
pop
call
shl
push
stc
xchg
jl
movsb
inc
sbb
jle
int
and
pxor
jns
pushw
data16
or
int
or
les
sbb
call
movsl
push
mov
lds
adc
cmpsl
cwtl
rorl
sbb
arpl
inc
jecxz
out
shll
iret
push
sti
cmp
out
testl
adc
stos
sbb
mov
cld
sub
add
mov
test
adc
inc
pop
repz
cwtl
inc
enter
fs
sti
js
jb
mov
lea
sti
or
cmc
cld
jbe
push
scas
imul
push
jp
mov
xchg
gs
cmpsb
arpl
out
mov
jge
push
cmp
arpl
mov
and
insl
insl
iret
mov
lret
fldl
cli
xor
out
jo
cli
andb
or
repz
fcmove
cwtl
push
pop
mov
pop
add
push
or
subl
pop
pop
mov
add
insb
shl
loop
add
push
jmp
adc
dec
daa
jae
lds
inc
mov
mov
inc
pop
popw
xor
int
ljmpw
mov
test
sub
mov
rorl
in
clc
lret
outsl
jecxz
pop
mov
hlt
imul
adc
and
jb
out
daa
xor
icebp
dec
dec
xchg
stc
jns
icebp
out
fwait
sbb
mov
int
jne
dec
insl
add
js
into
jo
jl
out
adc
pop
dec
psrlw
sbb
jp
adc
iret
into
push
xchg
push
fs
test
jecxz
jmp
bound
dec
cmp
and
xchg
mov
lods
shll
fdivrs
push
xchg
xor
mov
push
sarb
movsl
cmpsb
repnz
das
mov
call
xlat
xor
sti
xchg
shlb
or
sbb
sub
mov
js
js
add
sub
mov
in
fcoml
or
nop
mov
push
pusha
push
imul
inc
stos
outsb
mov
xchg
rcr
imul
sbb
in
stc
rorb
neg
ljmp
jno
mov
inc
aad
pop
dec
lret
in
js
pop
xlat
and
push
fistl
push
sub
add
mov
bound
add
xchg
jle
mov
pop
push
pop
fdivp
out
add
add
and
push
mull
pop
sub
jbe
icebp
scas
and
aaa
or
aaa
push
sub
in
sti
adc
pop
daa
out
mov
repz
imull
mov
bound
and
mov
test
shlb
loop
pop
xcrypt-cfb
cmpsl
popa
xchg
repz
fs
fwait
insl
nop
mov
jnp
fmuls
xchg
gs
mov
push
in
stos
cwtl
cmp
push
in
das
pop
mov
mov
loope,pn
out
lret
jg
clc
xor
cmp
and
cmp
lock
lods
lods
pop
xchg
push
pop
ret
cmp
cmp
pop
and
jmp
sub
jne
in
jg
add
es
mov
aam
push
push
mov
jae
add
insl
xor
insb
inc
lods
icebp
mov
faddl
sub
outsb
lahf
cli
xor
cmpsb
lea
dec
ja
test
mov
or
adc
fwait
nop
and
adc
sbb
in
jbe
xchg
cli
addb
fbld
sub
xchg
out
cmp
mov
ds
out
in
xchg
jmp
mov
pop
push
out
sbbl
rcrb
out
call
scas
popf
push
pop
jno
xchg
and
out
push
aad
sbb
gs
and
mov
lret
repnz
ffreep
int
loope
jnp
fnstenv
inc
or
ss
iret
cmpsl
fs
mov
pop
jo
adc
mov
gs
or
insb
inc
add
push
add
in
cmc
es
test
sbb
test
adc
popa
daa
xchg
sbb
push
push
ss
sbb
pushf
outsl
mov
mov
cmc
imul
xchg
pop
mov
inc
xor
mov
test
or
shlb
mov
xor
push
cmp
mov
cld
cmp
jmp
fadds
popa
mov
sub
nop
test
xchg
mov
ret
repnz
cmp
cld
mov
pop
lret
xor
cmp
movswl
jnp
push
xor
or
inc
imull
inc
mov
sti
cld
and
aam
js
lods
push
dec
sbb
push
test
rclb
mov
push
sbb
cmp
cs
add
cmp
int3
daa
nop
xchg
push
xor
push
sub
pop
mov
jnp
imul
fldl
cmpl
inc
les
jno
jl
lea
mov
adc
cmp
loopne
loopne
stos
jmp
sub
into
loopne
pop
cmp
fwait
jp
inc
jg
fs
lret
js
fcoms
cmp
xlat
insl
dec
push
mov
mov
call
add
mov
lret
pop
jge
dec
cld
and
pop
mov
sbb
push
sbb
mov
inc
xchg
push
mov
addr16
sub
push
adc
and
int
mov
incb
std
jle
popf
enter
fsubr
shrl
sbb
mov
sub
out
adc
pop
mov
notb
clc
out
push
je
iret
adc
popa
adc
js
add
jecxz
inc
sti
and
inc
out
daa
adc
pop
ljmp
pop
std
and
pop
sub
cmp
fs
cmp
ds
mov
or
xor
sub
jp
and
fisubl
cli
fsubrl
mov
mov
popf
xchg
addb
fwait
push
sub
jge
xchg
dec
adc
loopne
adc
sub
mov
sbb
xchg
and
lods
add
imul
mov
mov
in
jle
xchg
push
sarb
adc
mov
sti
sub
pop
test
mov
inc
lods
cmp
pushf
adc
xchg
adc
pop
daa
pop
stos
in
cmp
cltd
int
mov
aaa
dec
inc
fidivrl
push
fisubrs
jae
push
add
mov
in
fmuls
imul
gs
ljmp
stos
cmp
lock
das
pop
xchg
mov
push
add
roll
xor
push
cmp
cmp
push
iret
pop
je
pop
mov
ljmp
repz
jnp
test
dec
push
into
push
xor
sub
cmpsl
popf
sbb
dec
push
pop
push
jmp
cmp
movsl
cmp
xchg
sub
rcll
gs
push
mov
adc
or
cmp
stos
mov
repz
aaa
push
bnd
jne
mov
mov
inc
mov
xor
shl
in
test
jle
cmp
dec
dec
fwait
daa
fstp
xchg
imul
adc
dec
rol
cmpsl
imul
into
pop
pop
mov
scas
xor
ds
lock
push
jp
inc
cmp
cmpsb
lea
sub
push
rolb
cltd
mov
xor
stc
test
mov
lods
adc
jne
adcl
add
dec
insb
mov
push
jl
insb
jns
mov
xor
scas
mov
clc
iret
add
dec
sub
es
loopne
push
stos
fdivrs
scas
test
subb
dec
nop
movsb
aam
cltd
xchg
push
jp
stos
data16
sbb
push
out
imul
jp
adc
incl
clc
int
sbb
xor
jmp
add
xor
mov
mov
insb
add
mov
pop
and
xor
pop
sbb
cmpsb
leave
lock
pop
push
cmp
mov
in
cmc
cmp
daa
fsubs
inc
push
add
add
sub
clc
sbb
xchg
xchg
ljmp
stc
cmp
jnp
jmp
cmp
cmpsl
clc
sbb
test
rorb
addr16
insl
rclb
mov
push
out
cmp
aaa
sub
testb
dec
cmp
ret
dec
mov
add
push
loopne
cmp
mov
dec
fnsave
call
pop
pop
push
faddl
add
pop
cwtl
xlat
and
lds
fstp
loop
and
cmp
mov
pusha
push
incl
xchg
sbb
subl
insl
adc
xlat
mov
pop
fdivrs
cltd
push
pushf
imul
cmp
inc
jns
push
mov
out
inc
jb
lret
pop
into
in
inc
jo
sub
mov
dec
sub
test
mov
les
xorb
dec
repz
data16
data16
mov
movsb
jnp
mov
xor
std
or
insb
dec
mul
stos
xchg
xchg
or
inc
in
push
cmp
loop
push
mov
sub
loop
xor
jg
icebp
jno
mov
xchg
inc
aad
fistps
pop
jecxz
test
cmc
sbb
imulb
mov
or
push
orl
cmpsb
jno
ljmp
fsub
pusha
fidivrl
jmp
fst
pushf
push
push
pop
aam
add
gs
cmp
ret
adc
loopne
ja
imul
inc
lret
in
adc
cmp
daa
sub
xchg
into
jmp
mov
and
jnp
out
in
movsb
push
pushf
subl
xor
into
movsl
jb
sub
leave
fwait
jne
sbb
bound
pop
mov
ret
add
scas
xlat
dec
into
cmp
lea
clc
xchg
jge
adc
fs
xchg
stc
lahf
adc
cmpsl
pop
sub
movsl
gs
mov
fldl
sub
inc
ja
icebp
repnz
iret
fcoms
push
leave
adcb
cltd
pop
in
push
inc
jno
out
cs
push
imul
mov
stos
add
pop
fsubrl
negl
enter
movb
jl
push
xlat
push
out
sub
pop
adc
fistpl
add
test
jl
mov
fidivs
scas
jns
in
or
in
adc
bound
mov
incl
andl
sub
hlt
jle
dec
mov
push
js
add
das
mov
xor
add
shl
fdivrl
das
jb
scas
lods
and
lea
aaa
sub
push
jge
cltd
push
mov
jb
test
jmp
mov
in
insl
shll
push
outsl
out
or
push
mov
jbe
es
stos
jecxz
dec
shll
inc
mov
andl
int
lret
pop
xchg
testb
inc
add
aad
jp
mov
and
cmp
sbb
call
push
cmpb
jo
dec
or
incb
insl
pop
dec
mov
add
ja
dec
mov
sbb
mov
orb
xor
sahf
mov
daa
lods
and
test
cmp
fcoml
mov
fisubl
js
inc
loope
scas
fadds
in
push
ret
mov
cltd
and
adc
adc
jnp
sti
and
jge
jae
into
adc
in
loope
cmovnp
push
adc
leave
cmpsl
mov
dec
xchg
cli
or
lds
sbb
pop
or
imul
mov
sub
pushf
loopne
cli
je
mov
push
fstl
in
iret
mov
cmp
cmp
je
popf
xchg
stc
mov
test
movl
stos
cmp
mov
test
lds
adcl
pop
ret
mov
js
nop
out
aad
sbb
insl
into
mov
pop
test
hlt
ret
lcall
stos
mov
cmp
jb
cwtl
shrb
lret
lock
out
addr16
push
mov
and
xchg
imulb
sarb
add
stos
ljmp
cmp
cmpsl
pop
jno
sahf
cwtl
mov
lcall
mov
rcl
insb
jns
push
sbb
cmpsb
into
pushf
mov
xchg
sub
sbb
or
movsl
fnstcw
jge
icebp
cmp
and
int
jb
add
inc
inc
sub
imul
dec
push
xor
xor
dec
outsb
daa
pop
push
push
movsl
xchg
call
pusha
or
insl
dec
mov
movsb
pop
mov
gs
jg
pop
sbb
xor
adc
add
inc
loop
cmp
push
pop
stos
sarl
sbb
xchg
inc
cs
add
imul
push
jmp
mov
icebp
dec
add
or
push
movsl
fsubl
gs
mov
sbb
fistps
jno
scas
movb
je
bound
push
fs
or
movsl
adc
mov
stos
pop
pop
rclb
add
xchg
xchg
jl
push
imul
push
dec
and
jecxz
jo
add
popa
test
outsl
push
mov
aaa
js
cmpsb
add
test
in
jnp
aaa
mov
int3
lahf
ret
push
ret
adc
xchg
fadds
je
aas
mov
dec
fyl2xp1
xchg
jmp
fs
add
and
add
nop
je
cmpsl
xchg
daa
xorb
cmp
and
inc
out
in
pop
andl
shlb
cmc
imul
adc
inc
stc
mov
mov
fcomi
adc
xchg
stc
incl
rcl
sarl
fldl
inc
outsl
lret
fisubl
or
or
and
loop
sahf
jno
sbb
mov
cmp
cmc
sub
negb
jecxz
jecxz
mov
ret
test
ljmp
mov
das
xchg
test
push
pop
fstp
in
push
movd
mull
pop
inc
and
push
jmp
jae
loop
es
dec
imul
lret
sti
mov
mov
or
mov
dec
ss
mov
in
jnp
dec
or
imul
sub
sbb
sahf
dec
push
mov
arpl
mov
push
mov
loop
lods
stos
xlat
mov
mov
sahf
movsl
fwait
loop
idiv
sahf
xchg
sbb
and
psubq
xor
jle
xchg
lods
lds
xor
std
mov
mov
sar
mov
xchg
inc
cmp
or
cltd
xor
lods
inc
stos
fcoml
pop
fwait
cwtl
jge
outsl
cmc
enter
nop
cwtl
leave
jb
lret
cmp
dec
lahf
cmp
inc
mov
lods
adc
jge
mov
cmp
dec
push
or
inc
sub
and
ffreep
clc
dec
fadds
movsb
cltd
imul
mov
sbb
xchg
jge
repz
xchg
shlb
jmp
out
les
repnz
cmpsb
into
or
jb
adc
jle
pop
cmp
pop
imul
lcall
jbe
lods
xor
outsl
xchg
outsl
xor
loop
add
jne
sub
pop
pop
add
mov
adc
sub
pop
dec
add
xor
inc
dec
inc
mov
or
sbb
mov
jbe
mov
and
mov
xchg
dec
jmp
out
xchg
mov
jnp
fists
pushf
xor
jne
xor
call
inc
out
dec
aas
jb
call
hlt
pop
pushf
mov
and
mov
paddq
lcall
add
mov
push
inc
test
jl
testb
mov
out
out
out
mov
test
or
dec
scas
sub
pminub
mov
popf
mov
adc
ret
push
mov
cmc
jg
repz
std
xchg
inc
push
and
and
dec
jmp
or
adc
jno
pushf
cpuid
movb
mov
adc
or
xor
cs
dec
mov
inc
sar
int3
mov
or
jo
test
push
cmpsb
jmp
or
mov
xchg
lcall
mov
sbb
xor
and
inc
jbe
ljmp
lds
out
testb
xchg
pop
dec
cs
rcr
sbb
pop
pushf
dec
pop
int3
lea
daa
sarl
pop
fldl
scas
adc
adc
mov
in
pop
js
sub
repnz
adc
cs
pushf
imul
inc
sub
int3
pop
mov
shll
adc
mov
imull
pop
lock
js
mov
addr16
lret
dec
jnp
mov
pop
daa
mov
data16
sbb
faddl
out
and
and
mov
pop
in
lahf
add
rorl
pop
addr16
inc
mov
daa
fwait
mov
lahf
sub
movsb
scas
cmp
sti
enter
add
dec
xor
ds
insl
mov
lret
aas
sub
and
insl
sarb
dec
lahf
shll
aad
enter
adc
jle
push
jp
outsb
ljmp
push
inc
ds
fcomps
js
repnz
sbb
inc
mov
iret
jne
push
dec
push
pop
out
and
popa
nop
outsb
jg
in
inc
or
out
fxam
dec
or
adc
lods
inc
add
cli
pop
imul
fsts
loop
cwtl
fists
testl
push
movsl
mov
mov
je
into
dec
mov
loope
cli
mov
int
test
in
mov
in
cmpsb
xor
js
jb
loope
jno
lret
lds
adc
push
std
clc
lds
fistpl
cmp
xor
or
hlt
cmp
sub
pop
add
xor
or
mov
xchg
addr16
sahf
in
add
xor
push
mov
in
jns
mov
cmp
call
dec
sbb
je
jmp
loop
jmp
inc
sbb
cmp
jne
jbe
and
cltd
scas
out
xchg
fdivp
inc
mov
dec
and
stos
cwtl
inc
sbb
std
and
lret
popa
dec
dec
popf
pushf
jo
inc
shll
test
mov
popf
das
pusha
shlb
pop
insb
adc
cmpsb
adc
inc
xchg
pushf
dec
movsl
jbe
mov
cmc
imul
mov
dec
lahf
xchg
push
and
movsb
jge
je
mov
loope
fnsave
out
hlt
inc
cmc
cmp
xor
sub
mov
cmp
popa
cs
rcrl
push
mov
xor
shlb
cmp
mov
jecxz
dec
jbe,pn
bound
mov
add
les
das
add
fstpt
jecxz
mov
mov
jne
xchg
adc
dec
jecxz
jne
test
mov
sar
dec
push
stos
addr16
lret
leave
pop
shll
ficomps
pushf
mov
pop
sbb
daa
push
movsb
mov
fidivrs
xchg
cmp
dec
and
push
xor
lea
imul
lods
or
jge
jo
push
push
xchg
xchg
push
mov
lods
arpl
mulb
jne
out
xchg
mov
jno
loope
clc
js
arpl
loopne
mov
xchg
inc
loope
cmp
jl
xchg
je
sub
xor
mov
dec
mov
bswap
cwtl
xor
bound
fldenv
imul
xor
addb
cmp
sub
dec
repz
and
or
loop
das
xor
mov
pop
push
xchg
loopne
pop
or
adc
cld
scas
mov
sub
scas
sub
popa
aas
xchg
add
push
subb
leave
xor
cmp
add
addr16
push
xlat
inc
ret
inc
pop
mov
lock
jne
xchg
xchg
insb
scas
into
xchg
xchg
fnsave
xchg
lcall
xor
pop
stos
aad
call
push
xchg
xor
xchg
and
sahf
pop
pushf
fcoms
pop
imull
pop
jmp
add
into
sbb
xlat
mov
aas
cmpsb
imul
test
mov
jge
inc
mov
mov
push
push
iret
imul
inc
sub
push
lods
mov
cld
dec
cltd
sarb
rorl
pop
in
push
sbb
out
pop
sub
or
int3
mov
les
or
cmc
fcomps
aaa
cmp
dec
fnstcw
mov
inc
scas
inc
idivl
fistps
loope
pop
sub
sbb
xor
fidivrl
cmp
decl
pop
sahf
mov
stos
imul
fsubp
mov
pusha
jnp
push
sub
imulb
ss
xchg
inc
rol
stc
push
rcll
aas
mov
mov
test
adc
roll
mov
adc
cmpsl
jnp
mov
jns
sbb
lret
add
pop
cmp
xchg
repnz
insl
shlb
sub
repnz
cmp
lods
xchg
rcll
lock
imul
mov
clc
cmp
jns
roll
push
fistpl
dec
pop
pop
mov
sbb
arpl
repnz
cwtl
inc
or
movsb
dec
mov
sub
sub
inc
mov
mov
lods
jle
lahf
mov
test
call
scas
xchg
fnstenv
jge
aaa
nop
ret
pop
cmp
std
jno
sbb
xchg
dec
jne
push
ds
inc
and
out
ret
inc
stos
sub
pop
std
pop
aaa
hlt
clc
jne
push
dec
insb
xor
and
pop
addr16
push
jg
xor
outsb
imul
push
xchg
inc
xor
lea
aaa
push
xchg
leave
loope
mov
jae
mov
inc
sub
push
outsl
scas
shlb
xor
push
jmp
daa
jb
pop
mov
and
sbb
mov
jno
push
cmc
repz
mov
jnp
xor
mov
jne
mov
push
cld
and
inc
xchg
inc
vpsubw
sbb
ljmp
aas
sti
xchg
lret
inc
int3
and
add
jno
repz
push
idivl
xor
xchg
mov
int3
ja
mov
cs
adc
aas
mov
ja
outsb
shll
jbe
std
inc
cld
sub
xchg
push
xchg
xchg
sub
xchg
mull
stc
xor
andb
subl
lret
mov
mov
jmp
pushf
dec
pop
movsl
stos
fs
push
imul
jle
insb
aaa
loop
hlt
pop
or
stc
jae
pcmpeqd
jae
pop
jns
dec
dec
lahf
and
inc
sbb
fnstcw
adc
arpl
inc
mov
add
jmp
adc
ficomps
shll
xlat
mov
push
xchg
out
enter
int
dec
aas
pop
dec
cwtl
pop
push
movsb
cs
xlat
es
cltd
jo
mov
cmp
cmp
cmp
std
ficomps
test
gs
inc
arpl
inc
mov
or
ror
mov
mov
and
repz
jae
testb
dec
mov
nop
es
inc
add
inc
mov
cmpsl
mov
cli
jge
sbb
popf
test
ret
cwtl
sub
lahf
xor
fcompl
add
mov
cli
add
pop
in
test
xor
inc
xor
repnz
pop
aad
and
ret
pop
sbb
inc
cwtl
and
mov
dec
out
stc
sub
sbb
lds
iret
sub
push
iret
cmpsl
daa
sti
cmp
inc
pop
popf
cltd
out
jne
test
iret
xchg
xchg
push
sbb
cmc
andb
dec
or
mov
sub
push
xchg
outsb
lcall
push
jbe
hlt
jae
or
adc
sub
mov
js
xchg
sti
cmpl
test
sbb
sbb
adc
and
scas
es
aaa
arpl
pop
outsb
jle
cmp
sub
xchg
repz
or
fldenv
sub
xor
mov
movsl
outsl
loop
cmpsl
cwtl
mov
andl
pop
out
loopne
fists
mov
jne
mov
sbb
ljmp
int
sub
data16
sub
adc
ss
sub
repnz
mov
nop
and
fcoms
dec
adc
adc
inc
sti
jo
stc
fnstcw
push
fcmovnb
ljmp
inc
orl
sahf
mov
dec
out
fidivrs
cld
pushf
jecxz
scas
inc
imul
jmp
jo
mov
sub
xchg
xor
lock
dec
fcmovne
or
outsb
imul
shrl
gs
imul
imul
outsl
sbb
pop
insl
test
lcall
push
mov
mov
sbb
or
push
aaa
popf
rcr
xchg
or
mov
add
loopne
xchg
xchg
rcrb
or
jo
std
enter
xlat
sub
mov
into
lods
pop
cmovp
cwtl
cmpsb
xchg
xchg
adc
dec
inc
push
jnp
add
cmpsb
repz
rcl
dec
pop
aaa
cs
je
sbb
dec
dec
cmp
lock
clc
jl
sub
lods
sub
pop
pop
sbb
pushf
jle
aam
inc
aad
outsl
add
adc
pop
cltd
mov
mov
pop
xchg
push
mov
pushf
sbb
jne
test
insl
inc
leave
fwait
pop
test
int
test
test
add
add
cltd
add
enter
xchg
xorb
das
popa
ret
not
outsb
jbe
les
repnz
xchg
xor
out
pushf
bound
mov
pusha
les
add
testb
jae
xchg
xchg
insb
icebp
pop
sbb
pop
js
loope
sub
nop
and
xchg
fimuls
xlat
fildl
dec
dec
add
in
pop
push
jle
out
cmp
mov
xchg
imul
push
push
in
pop
insb
jnp
das
push
ja
jle
jl
jno
rorb
or
mov
jl
dec
adc
inc
xor
out
xor
bound
push
nop
enter
jno
inc
and
pop
aaa
cs
mov
clc
rcrl
push
dec
es
loope
jno
fimuls
mov
sub
jg
dec
cwtl
pop
push
xchg
jno
ja
jo
sbb
stc
lfs
cltd
jnp
or
mov
dec
xchg
and
mov
pushf
outsl
imul
mov
xlat
cmpb
mov
mov
adc
rclb
es
arpl
iret
inc
test
inc
pop
push
mov
mov
hlt
lods
std
xchg
pop
cmc
invd
bound
xchg
repz
jle
in
sub
pop
cs
icebp
add
mov
in
shll
jle
add
aas
loope
and
mulb
adc
subw
ds
mov
pusha
and
repz
shlb
adc
jne
or
loop
bound
jns
lcall
stc
cmpb
ffree
sub
iret
fmuls
add
flds
push
pop
jp
scas
loop
gs
adc
jp
inc
vfnmadd213sd
fwait
lods
sbb
jne
enter
cmpsb
mov
pop
repz
aad
neg
or
xor
out
mov
inc
push
inc
jne
mov
flds
cmp
cltd
jg
jle
jmp
pushf
jns
dec
cmp
pop
stos
es
adc
lock
sub
out
mov
pop
lret
repnz
sub
or
ret
shrb
pusha
das
jmp
les
popf
ss
cld
out
ss
adc
mov
arpl
mov
sbb
push
dec
sbb
lock
or
les
and
andb
and
outsb
ds
jle
mov
je
and
sbb
inc
cmp
sahf
testb
testl
repz
lcall
aas
mov
cmc
pop
gs
in
sbb
das
sahf
pusha
adc
pop
pop
pop
sbb
lret
cld
pop
cmpsl
decb
enterw
dec
call
nop
inc
cmp
xor
mov
rcrl
insl
jle
jb
fdivrl
call
in
sub
xor
xchg
mov
dec
dec
dec
js
fldenv
sub
jne
das
or
jecxz
test
mov
push
repnz
xor
int
cmpsb
cwtl
jmp
mov
push
xchg
popf
pop
stc
lret
mov
and
adc
in
pop
cmpsl
outsl
dec
bound
icebp
lds
and
mov
mov
and
inc
push
xchg
lret
xor
pop
cmpl
mov
sbb
jb
mov
pop
add
and
dec
xor
stos
cmp
or
and
movsb
cmp
pop
lods
xchg
pop
xor
outsb
mov
cmpsb
inc
and
loope
aas
aas
and
les
xchg
pop
loopne
jle
stos
adc
scas
movsb
cltd
mov
test
mov
pop
test
insb
push
ja
lahf
fs
xlat
fdivs
icebp
inc
mov
int
jbe
mov
dec
movl
mov
rcr
sub
fdivrp
lcall
dec
pushf
sub
or
push
inc
dec
push
les
sbb
mov
mov
inc
test
les
loop
in
andb
repnz
loop
push
push
aam
push
mov
dec
shr
arpl
adc
add
idivb
pop
jge
xor
inc
mov
add
mov
es
rol
sub
mov
jns
xchg
dec
out
cmp
add
test
jmp
xchg
std
inc
cmp
in
push
out
sub
int3
hlt
inc
test
sub
mov
pop
movsb
mov
lret
add
fbld
cmp
xlat
adc
mov
fiaddl
cli
or
dec
aas
int3
cwtl
push
stos
pop
mov
mov
pop
adc
je
adc
and
fidivrl
jp
cmp
jae
add
shlb
aad
jb
imul
popl
testl
pop
and
lods
bound
data16
push
jnp
jmp
ja
mov
sub
push
ss
mull
or
jmp
imul
adc
pop
loopne
push
test
ret
sbb
xchg
cmp
dec
mov
pop
mov
sbb
lcall
cmc
adc
insb
jmp
pop
ficoml
mov
dec
xor
and
pop
notl
imulb
push
int
mov
xchg
mov
jns
sbb
cmc
lcall
dec
cwtl
es
add
inc
pop
dec
jns
lea
clc
dec
and
xor
and
enter
xchg
push
sub
xor
cs
xor
test
lret
pop
dec
push
es
or
in
push
cmp
jp
jg
pusha
mov
mov
jns
sub
out
loopne
add
xchg
pop
stos
sub
cs
add
mov
in
das
inc
mov
addl
loope
icebp
fcmovnbe
adc
leave
pop
je
in
mov
ja
jne
iret
pop
push
cld
pushf
sarl
stc
inc
mov
stos
lcall
mov
shlb
adc
sahf
sub
leave
arpl
mov
adc
int
mov
sub
sahf
pop
cmpsl
ds
mov
adc
mov
popa
outsl
push
or
pop
xor
xor
movsb
adc
adc
adc
pop
fistpll
loop
adc
lea
adc
jne
cmpsl
arpl
mov
loope
mov
test
dec
mov
out
dec
pushf
add
in
aaa
push
jle
aad
aas
ja
cwtl
add
xor
fisttps
jne
mov
pop
es
dec
in
push
mov
int
mov
aam
jo
jne
and
xor
faddl
mov
insl
mov
lcall
popa
xchg
sub
jno
out
adc
pushf
clc
pop
jp
or
stc
stos
pop
push
jl
loop
jle
js
stos
dec
add
or
vandnps
jge
jecxz
inc
imul
push
imul
fiaddl
push
jae
jns
push
adc
je
push
sub
stos
cmp
iret
pushf
cld
rclb
xor
or
mov
or
inc
outsb
push
ds
dec
pop
inc
xor
stc
mov
fsubrl
push
dec
aam
mov
xor
push
dec
clc
repnz
adc
ret
sbbl
mov
stos
jae
stc
mov
fstpl
lea
fwait
adcb
xchg
xor
push
js
push
out
push
subl
xchg
fisubrs
int
test
popa
pop
jo
lods
sbb
pop
adc
xchg
fdivr
call
mov
fcomps
shlb
dec
push
push
dec
push
ficoms
jnp
mov
adc
pop
ss
push
xor
push
rol
push
fistl
js
mov
inc
sub
enter
out
push
push
and
jmp
test
jp
mov
into
cmp
xor
cmpsb
daa
or
lock
and
mov
loop
add
nop
push
mov
aas
xchg
call
xchg
adc
dec
lods
xor
dec
sub
adc
dec
test
fcompl
movsl
mov
or
pushf
out
fisttpll
daa
ds
xor
pushf
cmpsl
mov
movsb
rcl
jnp
sahf
and
clc
lds
mov
mov
cmc
pop
mov
outsb
xchg
repz
insb
nop
bound
lods
mov
xor
pop
fwait
adc
cmpsl
adc
sahf
add
xchg
jno
ds
ljmp
push
pushf
sbb
push
iret
aam
data16
sub
push
loop
popa
ja
frstor
rorl
mov
dec
add
das
add
shlb
insb
xor
inc
hlt
xorb
call
sbb
out
cmp
push
cmp
in
imul
xor
fsubr
into
jno
insl
pop
dec
aaa
nop
or
test
push
in
jns
xlat
pop
cmp
outsb
bnd
lea
cmpsl
sbb
xchg
and
ljmp
stc
jl,pn
jg
mov
fiaddl
dec
in
dec
pop
lods
fsubrs
push
lods
dec
pusha
and
xchg
xor
xchg
sub
and
sub
loop
jnp
ss
lods
addb
icebp
push
mov
mov
push
pop
jno
and
mov
push
pop
fcmovb
mov
aam
idivb
outsb
popa
dec
aaa
stos
or
arpl
mov
jno
ffreep
imul
xchg
xchg
push
mov
mov
test
jno
stos
dec
cmp
adcl
pop
or
add
iret
pop
fucom
scas
and
add
dec
ljmp
jge
mov
jbe
mov
test
xor
add
leave
fdivs
dec
add
cmp
aam
xor
pop
lret
iret
jg
arpl
daa
int3
sbb
in
loope
imul
fwait
pop
or
imul
in
fisubrs
das
jne
pop
cltd
xchg
shrb
cltd
lahf
in
dec
test
mov
push
out
test
dec
rcr
fstl
mov
mov
ss
fcoml
cwtl
lods
pop
jb
push
fistps
and
mov
jmp
sbb
add
rclb
popf
aam
inc
mov
aas
dec
lret
inc
mov
scas
les
sub
mov
cli
jns
jg
rcll
lret
pop
xor
mov
or
sti
push
outsb
push
cli
sub
jmp
sti
push
sub
dec
stos
ja
in
std
in
mov
sub
xchg
mov
dec
sub
xchg
insb
xor
lea
sbb
in
add
insb
mov
cmp
lret
imul
lret
mov
add
add
es
adc
pop
xchg
push
or
adc
sub
pop
sti
sahf
push
push
cwtl
inc
push
cmpsl
mov
mov
lds
add
lods
xchg
outsb
daa
test
outsl
ds
int3
cmp
xchg
test
mov
ret
jmp
loop
aaa
repz
jle
insb
and
btr
scas
or
lcall
xchg
push
out
inc
stos
ret
repnz
adc
fdivrl
xor
lock
adc
lret
fnstsw
cmpsb
push
pop
movsb
es
cmp
ds
sub
sbb
sub
and
sbb
pop
and
scas
add
and
icebp
daa
test
xchg
icebp
mov
and
test
cmp
neg
jo
pop
and
lods
jle
mov
outsl
dec
xor
push
fcmovnbe
mov
orb
cmp
test
jno
pop
pop
add
sbb
jecxz
lahf
sbb
aaa
aam
aaa
out
xchg
ljmp
xor
xchg
xor
dec
ret
pop
mov
jb
arpl
add
sbb
dec
add
pusha
pop
xor
das
dec
adc
cmpsb
add
mov
fidivl
in
shlb
mov
pop
or
mov
out
cmp
sbb
das
lret
inc
in
xchg
imul
push
scas
divb
add
out
push
jge
sbb
or
sbb
sub
incb
push
inc
adc
aaa
lea
in
mov
mov
mov
idivb
xor
sub
mov
les
inc
adc
inc
insb
sub
stc
xor
je
fisubl
test
popa
mov
repz
adc
inc
imul
pusha
out
movsb
push
in
out
inc
dec
ror
movsl
fstpl
daa
lods
mov
push
insb
ret
roll
repz
mov
test
pop
pop
sbb
jne
cmpsl
push
loope
mov
fsubrl
inc
scas
cmpsl
pop
xorb
or
in
leave
xor
adc
imul
mov
addl
arpl
push
scas
ss
jns
mov
push
pop
pcmpgtd
fcmovu
push
aad
jmp
jns
nop
mov
mov
inc
sahf
in
jne
insb
ds
scas
and
mov
in
pushf
test
jp
pop
mov
popa
jno
xor
sbb
clc
sub
jl
xchg
stos
xchg
into
push
es
rorb
and
xchg
inc
lods
aam
loope
int
mov
roll
and
pop
or
je
into
std
mov
push
andl
sbb
or
loop
xchg
cmpsb
mov
lods
xchg
xchg
mov
mov
pop
pop
dec
sbb
in
cmp
adc
cmp
call
lret
into
push
push
iret
mov
add
cmc
ret
sub
test
arpl
and
pop
orl
ds
xor
dec
or
push
dec
pop
into
sahf
push
push
cmpb
out
add
in
je
mov
pop
adc
sbb
mov
jmp
lcall
pop
into
mov
ror
jne
xor
adc
lret
in
xor
stos
loopne
cmpsl
and
sub
push
test
cld
dec
or
mov
addr16
and
sub
icebp
push
adc
in
clc
cltd
mov
and
cmp
cwtl
rolb
sbb
les
pop
sub
cmc
pop
shll
imul
stos
push
loopne
push
jbe
cld
jge
icebp
mov
sbb
cld
lea
pop
cmc
aam
mov
incl
dec
mov
dec
filds
inc
ss
cmp
xor
popa
iret
scas
aad
push
mov
cmpb
jno
sub
test
sub
jmp
cmc
pusha
sub
fistpll
add
cmp
and
in
xor
mov
and
fists
xchg
add
cmp
je
es
notb
adc
jmp
mov
push
aaa
pop
ljmp
lods
outsl
jne
pusha
rol
cwtl
sarb
jl
mov
pop
js
into
push
pop
ja
jnp
fstps
jle
mull
int3
mov
std
add
and
inc
out
shll
adc
fnstcw
xchg
leave
lcall
fsubs
fidivs
out
mov
loopne
add
add
popf
enter
jp
imul
loop
hlt
das
in
inc
push
aaa
cmp
fimuls
in
sets
imul
sub
outsb
mov
bound
int3
xchg
lcall
pop
lds
adc
sbb
jae
sbb
dec
or
dec
mov
and
add
lret
imul
xchg
inc
jl
sub
pop
xchg
adc
xchg
lret
dec
fisubl
aas
sarl
mov
mov
pop
jl
mov
xchg
lcall
mov
jmp
outsl
clc
mov
rcrb
adc
mov
mov
nop
adc
jns
mov
rorb
inc
in
bound
sti
enter
and
cld
jmp
and
jnp
dec
lcall
aas
les
data16
jns
outsl
test
fdivrl
cmp
stos
ret
xchg
mov
mov
outsb
lods
and
dec
fstp
or
hlt
cmp
js
jnp
mov
fcomi
in
push
mov
push
stos
or
rorb
scas
or
mov
cmp
push
repnz
and
mov
mov
stos
sbb
jle
stos
fs
jecxz
sbb
icebp
push
push
pop
mov
call
cmp
push
dec
rorb
cwtl
cmp
sbb
int3
or
mov
mov
fadds
cmp
stos
inc
outsb
cltd
push
test
dec
xchg
mov
pop
sbb
mov
pop
sbb
popf
dec
fisttpl
push
insb
sub
aaa
es
ret
pop
stos
mov
jno
shll
movsb
push
cmp
scas
cmp
movsb
and
fs
sbb
mov
or
jl
popa
cld
adc
outsb
and
sbb
push
into
xor
fucom
jbe
mov
push
lret
in
inc
xchg
mov
and
fdivrs
xchg
cmp
pop
rorl
setp
cmpl
aad
pop
sbbb
mov
into
mov
sti
lret
add
push
pop
shll
mov
cld
div
mov
cmp
cmp
hlt
pop
fucomip
lods
push
mov
div
addr16
xchg
mov
aaa
jmp
es
fidivs
mov
xchg
add
jle
dec
in
mov
mov
fxch
jo
gs
push
inc
or
nop/reserved
lea
ret
jo
mov
pop
pop
mov
push
add
mov
add
dec
dec
xlat
push
xor
pandn
and
std
pop
popa
pop
mov
mov
mov
data16
andl
mov
jne
jno
inc
pop
mov
jne
xchg
xchg
lods
stc
movsb
sbb
test
sbb
inc
pop
pop
in
mov
lea
adcb
or
ror
xchg
push
loope
pop
lret
xchg
cmp
push
scas
ljmp
sbb
jge
jnp
lods
les
mov
insb
aaa
shlb
scas
ds
jl
xchg
xchg
outsb
push
inc
sbb
mov
inc
cmp
xor
std
insl
rolb
insb
sbb
shr
sbb
and
xchg
enter
pop
jmp
mov
ljmp
iret
mov
jne
in
cld
frstor
jle
push
cmp
pop
dec
sbbl
mov
scas
and
andb
sti
lods
es
add
popf
insl
sub
mov
stos
push
pop
push
cld
test
data16
jmp
ds
ds
jnp
les
push
aaa
xor
das
testl
aaa
mov
fbstp
mov
rclb
aas
test
push
jle
cmp
out
mov
imul
jp
or
xchg
das
adc
daa
je
pop
inc
dec
ror
xor
movsl
fisttpl
loope
test
sub
inc
pop
out
mov
popa
fdivs
adc
repnz
test
jl
dec
push
lods
jecxz
and
add
mov
mov
arpl
pushf
lret
mov
mov
mov
mov
mov
scas
popf
int3
pop
rol
or
and
mov
leave
or
mov
and
jp
cli
sahf
lds
pusha
hlt
jmp
sub
test
fwait
pop
adc
lods
add
dec
imul
movsl
mov
pop
jnp
push
jmp
add
mov
pop
movsb
cmpsl
push
cmp
bound
or
aad
cmpsl
mov
scas
xchg
movsb
inc
push
pop
leave
push
mov
cmpsl
pop
mov
in
mov
mov
rorb
jae
push
bound
pop
and
aad
push
out
push
ljmp
or
shll
xchg
or
fwait
lret
jno
scas
jae
mov
ss
ficompl
and
jo
lret
filds
jno
mov
sub
cmc
xor
nop
add
outsb
in
insb
insb
cmpsl
movsl
sbb
xchg
push
push
inc
adc
stc
mov
dec
filds
hlt
jl
movsl
daa
xchg
cmp
test
cmp
sub
dec
pop
mov
mov
out
xor
das
cwtl
movsl
fcmovnb
mov
popa
sbb
out
into
std
je
test
lods
jg
push
ja
mov
push
imul
stos
aaa
ror
lock
inc
das
out
bound
nop
aam
leave
add
add
ljmp
nop
mov
xchg
fcomps
pop
movsl
das
out
mov
loop
push
int
pop
sub
mov
push
jbe
fldenv
aam
cmp
push
bound
push
inc
mov
mov
xchg
pop
popf
test
sar
pop
adc
loopne
fadds
mov
inc
push
cwtl
outsb
sbbl
cld
aad
xchg
sti
repz
leave
push
shlb
dec
bound
movsb
clc
xchg
push
cmp
cmp
ds
cmpsl
mov
or
fcmovbe
icebp
cmp
push
pushf
iret
cltd
ret
imul
xchg
pop
jp
pop
push
inc
push
inc
shrb
sbbl
mov
mov
mov
add
movsb
ljmp
inc
adc
roll
movsl
repz
sub
pushf
cmp
shl
cli
or
cmp
adc
mov
mov
push
sbb
cmp
or
rolb
add
andb
pop
imul
test
mov
bndstx
fs
push
test
clc
call
xlat
fnstenv
mov
jp
daa
arpl
adcb
addr16
movsb
ss
cltd
jnp
ret
jnp
addr16
loopne
mov
out
jb
ret
scas
mov
out
mov
add
adc
jl
mov
aam
xchg
push
pop
push
cwtl
jo
and
cmp
mov
mov
mov
push
shl
rorb
mov
rcll
daa
rcl
outsb
cmpsb
cmp
in
inc
into
cmp
repnz
test
orb
jg
inc
add
les
add
enter
call
fsubl
push
lahf
aaa
dec
ss
xchg
je
mov
add
push
sti
mov
push
lock
fidivl
les
mov
dec
lret
sbbl
int
xchg
xor
test
sub
test
imul
xlat
xor
jle
and
out
stc
subb
xchg
jle
push
mov
dec
sbb
jge
in
xchg
clc
sub
xchg
cwtl
jns
dec
push
jl
sahf
loopne
into
into
leave
or
fdivl
sbb
cwtl
lds
ret
test
insl
sbb
loop
xchg
pop
add
cmp
push
and
je
ret
bound
test
mov
das
call
pop
fistpll
loopne
or
and
xor
hlt
lea
add
mov
scas
mov
xor
ljmp
pop
mov
lahf
scas
in
push
jbe
pop
push
pop
leave
mov
ds
ss
ror
mov
mov
cli
adc
jmp
mov
cmp
roll
fisttps
imul
stc
push
sbb
stos
stos
sub
inc
fcomps
add
ss
lea
insb
lods
sub
xor
jo
aas
dec
push
sub
xlat
fists
lock
repz
cmpsl
xor
xor
enter
jno
cli
movl
push
daa
out
push
es
lcall
loopne
adc
mov
push
sahf
loop
ljmp
testb
xor
fwait
mov
cwtl
mov
fstpl
and
jno
sbb
arpl
jl
jb
daa
mov
fmull
mov
mov
push
xchg
cs
xor
inc
or
inc
xor
inc
leave
mov
arpl
cmp
mov
adc
loope
aaa
xor
and
xchg
movb
pop
aam
in
loop
clc
sbb
cli
jp
addr16
push
push
lods
mov
jecxz
mov
mov
call
add
push
cmpsl
dec
sahf
into
inc
and
stc
sub
nop
and
mov
push
add
xor
mov
xchg
mov
cmp
lock
rol
jle,pt
cli
sbbb
jmp
inc
lea
nop
adc
lret
mov
pop
adcb
lret
insb
iret
and
cmpsb
fwait
shrl
and
sub
inc
lods
in
or
inc
outsb
arpl
popf
jno
out
mov
inc
pop
or
xchg
inc
loop
outsl
mov
dec
jle
insb
cmp
sahf
add
ficoml
pushf
cmp
or
adc
loopne
pop
nop
outsb
ret
daa
aas
dec
inc
xor
js
pusha
dec
xchg
push
clc
sub
jnp
mov
inc
rorb
push
scas
jl
ss
mov
jle
sub
mov
inc
dec
rorb
add
push
data16
ret
sub
push
xor
jno
call
rcll
or
sub
bsf
jle
xchg
lea
cmpsl
mov
cmpsl
inc
clc
inc
inc
in
orl
cmc
mov
rolb
add
mov
add
in
sub
push
stos
jge
enter
xchg
cltd
movsl
mov
lds
pop
or
outsb
aas
pop
cs
xchg
flds
sbb
adc
and
xor
mov
dec
mov
xor
dec
out
fwait
iret
xchg
fdiv
les
xor
and
cltd
push
pop
jmp
outsb
cmc
or
fwait
aam
ja
xchg
outsb
sbb
jnp
or
mov
outsb
mov
dec
js
clc
sbb
rcrb
test
cmpb
jb
dec
add
movsl
icebp
in
sub
xor
sub
out
mov
rol
or
dec
push
cli
mov
into
aas
loope
fcoms
imul
outsl
fdivr
fucom
les
lcall
or
inc
xchg
push
jns
repz
xchg
push
jmp
rclb
adc
xchg
dec
mulb
dec
mov
lret
pop
push
cmp
ret
mov
push
in
daa
aam
mov
lods
inc
xor
inc
into
jns
insb
rcrl
stos
xchg
mov
cld
mov
cmp
arpl
pop
push
imulb
mov
jno
leave
mov
test
sbb
cmp
into
iret
in
rolb
shr
push
pop
daa
ret
dec
mov
pop
rorb
push
mov
add
movsl
fistpll
enter
popf
call
mov
test
or
add
hlt
or
sub
decl
imul
and
push
ds
ret
xchg
mov
fidivrs
mov
fsubl
push
xchg
shrl
imul
lock
mov
test
je
fstl
das
clc
mov
and
pop
lahf
mov
mov
sarb
lea
jp
icebp
jb
and
cld
push
es
insb
leave
xor
sub
pop
jno
mov
test
or
adc
cmpsb
repnz
and
cltd
pop
testl
adc
mov
jecxz
xchg
lea
pop
mov
mov
sbb
jle
xor
idivb
pop
jg
mov
ljmp
out
testb
insl
mov
push
xchg
sub
das
cmp
sub
jbe
rcl
jle
fnstenv
mov
xchg
xchg
fsts
mov
or
dec
mov
mov
out
inc
pop
test
and
dec
fdivrs
xchg
stos
ror
cmp
pop
idiv
adc
lods
sub
stc
jmp
arpl
gs
scas
xchg
xchg
and
imul
mov
jecxz
sub
pop
ret
cmp
cmp
in
out
sahf
lret
cmpsb
jle
stc
lret
cli
pusha
flds
mov
je
cmp
iret
mov
inc
dec
movsb
insb
movsl
lock
js
cmp
mov
mov
cli
xor
ja
arpl
and
je
add
fmuls
outsl
leave
in
xchg
sub
xchg
and
clc
shl
push
xor
fs
hlt
or
out
insb
pop
arpl
mov
push
stc
mov
cltd
sbb
clc
jno
fldlg2
lret
lea
sub
loop
int3
testb
mov
clc
stos
adc
fsubr
dec
jns
pop
lret
jb
cmc
pop
icebp
in
cmpsb
xor
in
int
icebp
scas
pop
test
loopne
jp
in
jo
movb
leave
cltd
insb
mov
push
xchg
daa
jge
push
fstpt
xchg
pop
inc
or
pop
pop
push
imul
scas
inc
cmp
xchg
xchg
btc
sbb
mov
mov
jno
call
shll
sahf
daa
add
and
in
mov
jo
testb
ljmp
int
xchg
xchg
in
sbb
push
sbb
sbb
mov
cmpsb
divl
xor
das
sbb
push
ror
inc
mov
rol
pop
xlat
pop
cmpsb
inc
sbb
mov
aad
jo
negb
and
das
push
in
ficoms
les
sub
or
cmpsb
imul
inc
mov
jecxz
mov
jnp
mov
testb
mov
aam
std
repz
pusha
pop
jg
in
stos
pop
mov
fimull
jmp
fisubl
mov
out
add
xchg
cmpsb
xlat
lea
aaa
or
jno
les
loop
sahf
arpl
add
testl
out
ffree
outsl
xor
sub
repz
test
and
xor
aad
lods
sbb
fwait
xchg
inc
les
pop
push
idivl
or
xchg
jns
push
ljmp
mov
jp
mov
jmp
lods
repz
cli
sahf
outsl
xor
aam
jno
fsts
insl
mov
jo
loopne
inc
jo
clc
add
stos
ret
sub
in
call
adc
and
enter
adc
fmull
xchg
call
or
icebp
cwtl
add
fdivs
pop
imul
in
scas
pushf
stc
dec
xchg
xchg
adc
mov
xchg
andb
jne
pop
aas
pop
insb
iret
mov
daa
das
xlat
and
sub
mov
xor
ja
xchg
test
add
jo
ds
outsb
inc
adc
cmp
xchg
jmp
xchg
xor
loop
loope
js
rorl
outsb
movsb
ds
mov
pop
sbb
xchg
divl
shll
adc
ljmp
inc
push
and
pop
cli
inc
fists
fnstcw
cmp
dec
lds
aaa
paddd
push
cmp
inc
push
xor
cltd
shrb
cli
pop
insl
jae
scas
mov
inc
arpl
lea
insl
sbb
and
sub
mov
cltd
fldt
repz
jno
and
add
dec
imul
pop
insl
out
xor
iret
mov
push
dec
cmp
inc
imul
enter
lock
aam
mov
push
lret
test
mov
inc
daa
loopne
push
xor
lret
sti
xchg
jo
xor
scas
push
push
roll
cwtl
movsl
mov
inc
and
push
xchg
dec
shrb
inc
je
mov
add
add
sbb
sbb
mov
jge
jle
cmp
push
popf
mov
sub
pop
or
loop
lock
fnstcw
popf
je
fwait
mov
movsb
fcompl
insb
jl
or
mov
cmp
inc
adc
jle
inc
pop
cli
into
inc
mov
cmpsl
pop
pushw
sub
push
pop
sbb
push
cmp
sti
inc
popa
rdtsc
fsubrl
test
mov
cltd
adc
lret
pop
xchg
sbb
outsl
paddb
inc
loopne
add
sub
incb
loop
jmp
push
dec
fstl
popaw
rolb
add
sbb
or
repnz
cmc
add
sbb
out
aas
sub
sub
inc
mov
xchg
ficompl
jbe
rcl
inc
leave
mov
sub
mov
pop
inc
sbb
xchg
movsl
jae
icebp
out
pop
lret
adc
sbb
xor
fnstenv
lcall
es
mov
sbb
sahf
jns
xor
push
dec
ret
outsb
aam
repnz
xor
cmpsl
mov
scas
vfrczsd
jnp
xchg
inc
scas
daa
xor
mov
mov
clc
dec
push
in
adc
rcl
fs
inc
decb
fists
fstp
mov
xchg
aaa
cmpsb
int
sbb
pop
add
adc
and
mov
xchg
daa
cld
pop
cli
repz
pop
bound
dec
dec
shrb
cmpsb
test
dec
add
enter
test
adc
push
and
mov
orl
repz
test
cmp
jmp
inc
push
imul
mov
scas
cld
in
and
mov
sbb
rcrl
adc
lds
mov
cld
or
inc
mov
jp
sub
sti
je
scas
fdivrp
or
int3
int
cmpsl
jl
aaa
movsl
adc
aas
mov
or
outsb
pop
daa
push
ja
xchg
aad
sub
mov
fidivl
sub
mov
and
in
nop
xchg
loopne
add
in
sub
dec
cli
in
movsbl
push
mov
xor
push
lcall
push
or
lock
out
jb
jns
call
ficoml
add
pushf
test
dec
insb
mov
data16
sti
hlt
data16
addl
mov
adc
fucomp
mov
jae
int
inc
out
fwait
int3
sub
xchg
lahf
or
movsl
outsb
inc
clc
call
icebp
dec
ret
jnp
mov
jmp
arpl
dec
jne
cmpl
into
dec
and
adc
add
jo
cmp
leave
into
mull
add
inc
out
fcompl
fsubs
fs
inc
adc
out
fadds
mov
stos
push
jle
xchg
das
imul
sbb
inc
enter
add
das
mov
push
scas
les
xor
jmp
mov
jmp
mov
mov
out
pop
dec
aas
bound
mov
dec
mov
aad
data16
add
outsb
rorb
or
dec
fs
inc
loopne
dec
imul
sbb
mov
pop
das
aaa
sti
sti
scas
or
negb
mov
insl
je
xlat
xor
lret
xorb
or
adc
jl
sub
cmc
add
dec
jecxz
js
inc
mov
or
fists
mov
sarb
adc
xor
or
mov
stos
ret
add
jb
xchg
test
push
adc
in
inc
jge
xchg
add
in
leave
sub
icebp
adc
pop
aaa
daa
lret
test
aaa
pushf
ja
push
int3
in
sbb
insl
sbb
jne
and
mov
daa
sbb
xchg
cld
mov
sub
mov
mov
clc
aas
jge
loopne
fmull
pop
cs
aam
subb
call
in
adc
pop
add
adc
xchg
daa
cmp
scas
rcrl
stos
xchg
test
dec
or
incb
test
popf
mov
and
dec
sbb
les
cmpsb
lods
fxch
stos
ljmp
inc
int
mov
or
lahf
dec
stos
mov
pusha
int
rclb
pop
cwtl
jbe
fadd
ficompl
or
mov
xchg
cmpsb
jo
les
repnz
xor
iret
pop
push
or
jmp
sub
shl
mov
jl
data16
pushf
cmpb
inc
rorl
sub
sub
mov
jae
jno
sbb
loopne
cs
icebp
das
mov
mov
dec
lock
std
outsl
or
xchg
sub
sbb
neg
pop
push
push
les
insb
enter
or
pop
sbbl
fwait
test
int3
pushf
mov
jae
sar
and
addr16
sub
or
sub
sbb
sub
xor
gs
mov
sbb
mov
jb
mov
shrl
pop
or
outsb
cmp
outsl
icebp
leave
cmpb
sbb
rcr
sbb
xchg
xchg
loope
ljmp
push
lds
aad
sahf
push
shll
mov
dec
push
scas
pop
push
aaa
ficompl
lahf
add
push
dec
sub
xor
iret
addr16
sbbl
cmp
pop
rcrl
sbb
loope
orb
mov
push
ljmp
sbb
mov
jl
jg
lods
xlat
pop
in
lcall
dec
jecxz
sbb
cli
push
xchg
out
std
loop
aaa
xor
rol
pop
pop
and
and
push
cs
or
push
or
sub
cmp
push
movsb
and
int
dec
mov
cmp
sbb
xor
push
cmp
sub
imul
int3
repnz
inc
rcrl
shlb
fsub
cwtl
scas
add
dec
add
neg
and
jae
inc
movsb
insl
pop
add
mov
fsubrl
xor
leave
sub
mov
cmp
dec
out
jne
dec
push
movsb
arpl
xor
lea
aam
aad
clc
stc
aaa
dec
fbld
jg
imul
inc
clc
inc
out
pop
push
popa
push
inc
jb
xchg
mov
rorl
adc
leave
sub
inc
mov
xor
jne
test
add
mov
jnp
outsb
call
push
pop
xchg
adc
pop
aas
mov
add
not
daa
daa
sti
fidivl
movl
mov
adc
push
loope
jmp
roll
cmpl
adc
loop
cs
xchg
das
mov
dec
dec
repnz
out
das
les
mov
je
push
xchg
lods
or
push
mov
gs
dec
in
ret
popf
or
ja
lds
negl
ret
cmpsl
shll
ds
pop
push
popa
inc
cli
rcll
xor
cmp
mov
fnstsw
std
xchg
mov
xor
and
mov
cmp
dec
mov
xor
xchg
call
hlt
xchg
mov
push
fmuls
adc
imul
mov
mov
adc
cs
ljmp
xlat
sarb
xchg
push
popf
dec
inc
cwtl
nop
mov
out
jno
push
jg
or
and
mov
jl
loop
mov
iret
jno
loopne
imul
aam
iret
ficompl
mov
pop
ja
push
movsl
adc
xor
mov
cmp
in
aam
lcall
sbb
cwtl
push
cwtl
cmp
pop
xchg
xor
std
inc
sub
pop
and
mov
or
inc
ja
jge
fwait
add
mov
mov
adc
jno
and
test
in
and
jnp
fwait
push
lcall
xor
xlat
sbb
lcall
mov
adc
dec
sar
mov
xor
mov
push
out
xchg
mov
std
imull
into
pop
mov
std
lock
inc
mov
jb
jle
out
test
lret
fisubs
mov
and
int
add
or
push
nop
pusha
outsl
sub
xchg
adc
adc
sahf
in
pop
in
std
and
mov
fidivrs
sub
out
cmc
imul
dec
xor
cmp
jb
pop
fisubl
jecxz
mov
repz
sahf
out
data16
xor
jb
or
sahf
mov
sub
add
es
jae
stos
mov
rcr
scas
movsb
roll
sti
dec
outsl
out
loop
leave
sbb
jae
push
dec
pop
xlat
pop
pop
loopne
rorb
xchg
push
cmpsl
xor
pop
mov
movsb
push
and
add
xor
xchg
mov
ja
xor
int3
jge
mov
sti
in
dec
cwtl
add
sbb
imul
sub
jle
mov
pop
sub
mov
into
jae
mov
push
inc
mov
sub
inc
cld
xchg
jo
push
in
imul
out
dec
mov
subl
push
inc
ret
mov
mov
lret
adc
and
xchg
mov
xor
in
pop
adc
inc
sbb
xchg
cld
or
pop
in
leave
pushf
jge
movsb
push
test
xchg
cmp
test
shrb
or
mov
ja
ret
scas
fdivl
repnz
jno
jle
pop
xlat
mov
dec
mov
fsubs
push
sbb
dec
js
adc
imul
and
adc
mov
and
inc
push
push
mov
inc
dec
mov
dec
xor
adc
xor
mov
sub
jmp
mov
iret
sbb
iret
and
xadd
and
test
fistpll
shr
and
out
stos
ja
mov
shlb
in
test
popa
mov
fdivp
pop
or
lods
test
es
mov
jne
leave
pop
mov
jl
xor
mov
xor
cmp
movsl
mov
gs
jge
fwait
dec
add
cld
loope
fwait
pushf
fcmovb
fcoms
nop
xor
xor
pop
lcall
sahf
fiaddl
into
mov
mov
push
iret
je
cmp
mov
int3
xor
nop
push
lock
movsb
jecxz
xorb
call
pushf
cmp
xchg
mov
push
sbb
shlb
mov
or
cmc
pop
into
xlat
sbb
pop
pop
cmp
dec
xor
dec
push
xor
jb
or
sub
cld
xchg
fwait
pop
shlb
pop
cwtl
imul
repnz
xchg
stos
shl
aam
frstor
out
push
sti
sbb
roll
jbe
push
cwtl
adc
in
aas
test
mov
mov
sub
and
push
loopne
and
mov
mov
push
in
adc
in
mov
notb
out
test
cli
jg
testl
pop
lods
pop
inc
ljmp
loope
nop
mov
xor
mov
mov
fdivrl
sbbl
mov
mov
in
and
mov
xchg
sbb
sbb
jmp
in
pop
je
sub
fwait
adc
cmp
cmpb
push
sbb
mov
outsb
adc
push
aam
test
jg
inc
mov
dec
pop
nop
roll
dec
call
push
adc
pusha
das
add
push
pop
fiaddl
idivb
jl
nop
mov
jne
js
insb
mov
dec
mov
pop
add
or
and
cld
dec
insl
or
lahf
xchg
mov
jg
jnp
add
or
jg
push
jmp
fsts
test
or
leave
inc
ss
fcmovbe
or
int
lods
inc
rcll
mov
pop
add
and
sub
sub
cmpsl
mov
ret
loope
lods
xor
ss
out
pmulhw
mov
ss
data16
mov
add
push
loope
movsl
or
jo
cmp
aam
pop
jl
xchg
sbb
sarb
out
cmp
sbbb
sub
or
int3
rolb
ror
ja
imul
push
jnp
inc
jb
jo
movsb
add
push
sbb
gs
sub
je
bound
xor
dec
lret
jo
sub
fisttpl
gs
ret
pop
add
pop
mov
stos
push
cmc
daa
sub
jns
pusha
in
sti
pop
inc
rolb
add
push
add
imul
jl
adc
cld
mov
inc
jecxz,pn
call
mov
sub
insb
sub
mov
jecxz
adc
out
sub
jmp
fildll
adc
fcoms
cmc
push
push
orl
pusha
loop
sub
cmc
sahf
pusha
push
jmp
mov
in
hlt
mov
mov
jo
dec
pop
stos
in
sbb
dec
mov
xor
in
shlb
xchg
and
dec
mov
pop
mov
loopne
repz
fbld
jmp
js
std
xchg
push
cmpsl
fld
outsl
xor
rcpps
mov
xchg
pop
mov
dec
movsb
rcl
pop
shr
in
stos
lret
cltd
jecxz
xchg
insb
lret
adc
sahf
mov
adc
loope
ds
out
test
mov
call
cld
or
lods
xchg
in
xchg
ss
or
jecxz
jl
clts
iret
push
mov
in
jo
popf
lret
push
hlt
out
ljmp
and
or
pop
popl
pop
mov
pushf
dec
test
jl
data16
lret
jnp
lock
cmpsl
rcr
mov
aaa
movsb
leave
xor
fwait
mov
aad
mov
movsl
mov
adc
test
push
lret
adc
push
mov
mov
jmp
cltd
lock
test
cli
ds
cmpsl
mov
loope
or
xchg
xor
repz
sti
fidivrl
mov
inc
je
imul
add
push
cmp
int3
xchg
cld
iret
mov
add
hlt
dec
adc
cmp
test
inc
inc
jg
dec
out
js
sbb
sar
les
xchg
and
xor
mov
add
xchg
dec
nop
jg
and
scas
and
int3
rorb
pushf
xchg
sbb
pop
fidivrs
xchg
mov
rolb
xor
pop
aad
and
popf
cmp
and
mov
iret
ds
adc
mov
clc
pop
dec
inc
dec
pop
xchg
mov
jl
int3
orl
aam
gs
and
outsl
shrl
inc
cld
movsb
and
add
ficoms
dec
test
roll
mov
int
adc
and
mov
mov
cltd
fs
movsl
stc
int3
xchg
out
adc
aaa
adc
and
jg
push
xor
testl
sub
xlat
sbb
add
xor
loope
repnz
mov
jge
jmp
aad
push
movsb
jg
stos
mov
adc
inc
ret
ljmp
clc
mov
dec
pop
lea
push
test
mov
std
push
push
cmp
or
dec
xor
lods
cmp
ret
pushf
xor
pop
mov
push
fsts
into
sahf
push
mov
sub
mov
arpl
add
sbb
daa
fwait
pop
in
mov
mov
clc
push
xchg
lods
adc
jecxz
mov
je
cmp
inc
jno
adc
adc
xchg
sbb
movl
arpl
fcom
cmc
and
int3
fstl
nop
imul
stos
mov
cmpl
mov
inc
adc
lock
data16
ljmp
in
ds
nop
ja
aas
cli
jmp
sub
loop
movsl
pop
sti
notl
rorl
fadds
cmpsb
orl
dec
popa
loopne
ret
push
lods
jmp
fisttps
movsb
popl
add
in
movsl
sub
int3
dec
rolb
jecxz
mov
adc
lods
sbb
jg
dec
or
dec
insl
adc
or
add
js
xchg
in
imul
sahf
je
lods
jmp
jno
in
mov
ja
pushf
jle
pop
xor
fwait
jecxz
inc
scas
filds
sbb
div
and
xor
inc
pushf
lds
mov
mov
xchg
fisubs
sbb
push
cmp
jns
adc
xor
aas
mov
int
dec
dec
cs
jp
mov
imul
test
xchg
lcall
fld
xchg
pushf
movsl
jmp
jnp
outsb
enter
jp
aad
enter
addl
sbb
faddl
popf
xchg
cli
jo
prefetch
stc
daa
jle
jle
xchg
xor
sbb
loopne
inc
push
sbb
add
pusha
inc
insb
add
std
adc
in
xlat
pop
dec
push
testl
jp
adcl
loop
add
jmp
sahf
push
xchg
arpl
pusha
fsubs
jle
fildl
rcrb
call
out
push
xchg
adc
sbb
mov
and
jg
and
mov
mov
push
out
dec
pop
jb
lods
lock
ret
sahf
cld
push
je
fcoms
jb
push
sub
and
bt
mov
aam
mov
repz
fnstcw
add
mov
dec
lods
mov
cld
aas
xlat
neg
and
mov
mov
scas
push
inc
jo
dec
inc
ja
fwait
push
sahf
loop
cmp
ret
mov
sahf
sub
pop
repz
pcmpeqd
add
fiadds
sub
cmpsb
cmp
mov
imul
jb
mov
lods
or
hlt
test
in
jg
adc
stc
aam
arpl
mov
jmp
fmull
dec
mov
sub
jo
pop
jecxz
mov
loope
cltd
push
push
fwait
mov
push
js
jge
and
scas
mov
sub
cmp
sub
pop
int
and
and
ds
and
hlt
popf
push
into
stos
outsl
xor
adc
faddl
data16
mov
adc
jmp
add
inc
cwtl
mov
cmpsl
hlt
pop
in
xlat
pop
in
or
inc
xchg
adc
xchg
test
sbb
sub
adc
dec
jmp
call
adc
test
cmp
xor
sub
out
aad
cld
aaa
in
xchg
insl
fsts
outsb
and
fninit
outsb
inc
popf
or
jl
push
add
std
scas
test
cmp
pop
cmpsb
out
outsl
sbb
push
mov
xor
seta
gs
aad
xchg
push
xchg
test
stc
push
jbe
movsl
mov
push
pop
or
movsb
stos
mov
sub
ret
jne
jo
dec
ljmp
or
mov
mov
mov
mov
insb
into
stos
sbb
sbb
imul
push
sub
in
mov
pop
out
out
sbb
mov
arpl
sarb
xlat
cli
add
mov
push
cmp
jl
hlt
sbb
lock
mov
pop
and
jno
jle
in
xchg
mov
das
cmp
jl
lods
adc
ret
push
dec
xor
nop
xor
xchg
mov
cld
xchg
das
mov
mov
and
es
xlat
movsl
stos
lods
aam
mov
lods
mov
add
jno
test
add
lods
lret
sbb
mov
adcb
dec
add
es
mov
dec
movsl
dec
and
inc
push
mov
cli
mov
pop
mov
cwtl
adc
ds
stos
lods
repnz
stc
out
pop
test
mov
scas
out
mov
jecxz
in
jmp
out
cld
out
jb
bound
jno
pop
shll
lcall
pop
ja
cld
fstl
aad
stos
xchg
ljmp
and
sbb
insl
jmp
dec
cmpsl
add
or
fs
sub
ja
inc
cwtl
test
jns
push
cmp
sbb
add
push
faddl
aam
mov
or
cmp
adc
adc
mov
and
lahf
int
xorb
mov
idiv
popa
loopne
and
mov
push
push
jns
xor
sbb
mov
out
pop
pushf
lahf
adcb
outsl
push
jno
daa
jg
fstpl
push
lcall
shlb
pop
jb
fidivs
rcrl
arpl
xor
jg
cmp
jmp
or
xchg
adc
int
roll
fdivs
jmp
inc
std
xchg
loopne
xchg
add
stos
int
sahf
pusha
add
fldenv
xchg
adc
lret
add
in
shll
jecxz
dec
leave
cmp
aam
out
xchg
sub
mov
dec
test
inc
aad
mov
testl
fistpl
repz
nop
mov
sbb
inc
lcall
out
test
push
mov
sub
jmp
test
xchg
movsb
mov
and
ljmp
lcall
dec
in
testb
inc
pop
or
fs
and
mov
scas
in
inc
fsubr
out
push
or
dec
jnp
lret
pop
adcl
and
nop
xchg
insb
fimuls
out
xchg
mov
cmp
sbb
mov
in
rclb
and
xchg
repnz
jg
inc
dec
ljmp
imul
pushf
mov
dec
adc
fistpl
inc
pop
fstps
mov
lret
cmp
rclb
push
add
aam
pop
stos
pushf
repnz
cltd
ror
sub
mov
repz
xor
jl
lods
or
mov
sbb
and
out
shl
mov
pop
sub
fstps
mov
or
cmp
insl
and
push
xchg
sbb
sbb
mov
jmp
push
cmpsl
and
ret
loopne
mov
xlat
lret
push
ss
add
jmp
jo
shl
push
adc
inc
out
or
fsubrl
mov
lock
mov
lahf
cmp
add
add
mov
clc
daa
fidivrl
insb
xor
imulb
xchg
mov
bound
inc
xlat
cld
mov
add
imul
jecxz
mov
dec
jp
xor
out
pop
add
mov
mov
jne
lods
dec
xor
mov
rclb
and
lret
xchg
xchg
cltd
int3
adc
mov
arpl
loope
jle
xlat
cmp
sarb
adc
mov
cmp
or
cmp
sahf
xlat
pop
jecxz
fs
movsb
je
sti
cmp
call
xor
sub
jmp
and
inc
sbb
enter
ds
sbb
xor
and
add
adc
fstpt
xlat
add
sbb
mov
loopne
shll
push
imul
and
or
fcmovbe
mov
ret
mov
mov
dec
roll
add
mov
cwtl
test
ret
aad
imull
jae
test
je
push
inc
xchg
jmp
xchg
shll
add
dec
or
enter
xlat
push
popa
dec
push
jmp
xchg
cs
sub
mov
out
push
mov
sahf
xor
test
cmp
push
scas
scas
ret
sbb
xor
adc
jno
sbb
xchg
jmp
loop
and
pop
in
repnz
ja
loopne
or
call
adc
ret
popa
sti
mov
lock
sarb
icebp
cmp
out
in
int3
enter
add
addl
pop
dec
aam
xor
xlat
adc
clc
push
push
int
xchg
and
inc
insb
rorb
and
in
test
retw
leave
sbb
lret
cmpsl
fnstenv
cmp
adc
icebp
ret
fsubl
xor
cld
and
jb
pop
je
pop
dec
lods
sub
adc
nop
cmp
nop
jg
insl
shll
cmp
jnp
rcrb
push
or
sbb
cmpsl
cmp
sti
push
ret
push
jmp
mov
sub
jns
and
fdivs
mov
loopne
jl
outsl
cmp
push
pop
arpl
and
adc
push
add
das
ret
ret
in
lret
aaa
lea
mov
xchg
sti
sub
jmp
inc
cli
xchg
cmpsb
xorb
mov
cmpsl
sub
or
mov
jae
mov
pop
test
ficoml
cmp
mov
int3
jno
into
cmpsl
fwait
insb
mov
rorb
mov
cmp
mov
jb
cwtl
shrl
pop
movsl
cmp
sbb
imul
mov
in
cs
xchg
shll
je
ljmp
inc
mov
pop
lret
jl
sub
and
mov
roll
test
fldt
xchg
into
push
mov
mov
sbb
fcom
repz
imul
add
jo
in
sub
or
xor
jle
sub
ja
enter
add
add
inc
push
dec
and
inc
push
cmp
sub
outsl
cmp
add
add
xor
fisttpl
jge
or
stc
mov
aad
das
mov
out
pop
inc
or
dec
lock
or
and
inc
sahf
jbe
popa
pop
dec
mov
xor
out
cmc
inc
lcall
sub
mov
push
repz
cwtl
nop
cli
or
call
adc
pop
addr16
cmp
rcl
imul
int
adc
gs
mov
xlat
xchg
jp
jmp
inc
addl
push
mov
fmull
shr
pop
lea
or
dec
stos
lcall
inc
xchg
dec
mov
cmpsl
dec
mov
rcl
aad
pop
cmc
mov
xchg
jns
push
xchg
cmp
cltd
mov
mov
pop
xchg
js
push
add
mov
scas
push
push
mov
or
into
ret
cmc
pop
cmc
adc
andb
pop
jno
shrl
cmp
in
cmp
pushf
int
popa
jno
push
xor
fcompl
push
mov
sub
cmp
loope
out
xchg
lock
mov
sti
in
imul
or
mov
xor
shll
or
mov
iret
out
pop
lret
or
clc
in
pop
mov
mov
cli
stc
mov
icebp
add
push
popf
xchg
sarl
push
or
cwtl
rolb
cmpsb
aam
jge
xchg
xchg
mov
or
xchg
rcr
xchg
aaa
mov
xor
mov
subb
leave
jp
jb
ss
mov
inc
adc
cmp
loop
fwait
shrl
dec
mov
and
mov
popa
xchg
mov
pop
sbb
mov
pop
mov
pop
or
mov
sbb
cs
mov
dec
inc
push
rcl
in
add
loope
jo
je
divb
cli
mov
xchg
and
push
pop
add
cmpsl
pop
iret
adc
aas
cld
or
push
dec
jp
mov
jnp
mov
jns
mov
ja
push
sub
inc
fcoms
out
xchg
out
fisubrl
push
inc
push
xor
xor
xchg
sbb
xor
stos
adc
xchg
fisubl
ja
sbb
xchg
dec
mov
push
jbe
inc
daa
cmp
pop
xor
ss
aaa
ljmp
jo
push
adc
repz
cmp
in
dec
xchg
and
xchg
xchg
and
lods
insl
and
jno
outsb
into
inc
mov
jg
xor
add
or
dec
aad
call
les
fs
adc
dec
xchg
in
add
xor
cmpsl
popf
jge
in
push
fistpll
inc
fisubrl
das
mov
js
mov
mov
ja
mov
out
dec
add
mov
sbb
sub
jge
fdivr
push
hlt
xchg
mov
out
stc
xor
sub
push
lret
aam
push
stos
ret
xor
popf
cmp
addr16
fcomps
and
nop
dec
jle
out
fwait
cmp
push
iret
lods
repz
cwtl
insl
addr16
pop
mov
nop
test
xlat
cmpl
inc
cmp
lea
xchg
out
outsb
jmp
inc
into
je
rclb
push
adc
mov
popa
jb
pop
leave
fcmovnb
xchg
cmpb
push
mov
leave
movsb
in
jo
std
out
cmp
and
mov
fcoml
stc
fidivrl
js
cmp
xchg
dec
ret
dec
cmp
cmp
push
sbb
inc
xchg
fwait
sarb
test
mov
jg
adc
push
adc
cmp
jle
ljmp
mov
jmp
cwtl
sbb
xor
xor
fs
lret
mov
ss
push
std
es
add
scas
xchg
mov
or
mov
sbb
add
xor
xor
ret
xchg
add
daa
push
pop
std
xchg
cwtl
jle
jne
push
int3
and
sub
ljmp
sbb
imul
ret
jecxz
xchg
jnp
mov
pop
rolb
test
imul
and
xchg
dec
xorb
pop
cwtl
dec
adc
inc
add
sub
fisubs
dec
fidivl
out
into
pop
rorl
std
push
and
loopne
jge
mov
adc
jne
test
cltd
mov
icebp
test
xchg
dec
mov
sbb
xor
lock
lahf
mov
push
mov
push
pop
jbe
cmpsl
pop
push
fistpll
fistl
mov
add
inc
jae
add
cmp
aam
sbb
fdivp
mov
or
sahf
shlb
and
jno
push
pusha
pop
jnp,pt
enter
push
les
add
sbb
pop
mov
mov
push
or
push
test
out
mov
leave
mov
push
ljmp
sbbl
inc
adc
cmp
pop
xchg
cmpl
dec
aad
pushf
je
push
jb
lock
xchg
lods
and
mov
lret
data16
nop
imul
mov
adc
test
loope
in
shrl
inc
push
dec
xor
inc
cmp
inc
popa
push
orl
add
rcrb
js
and
lcall
hlt
lret
cwtl
sub
inc
test
sub
jmp
movsb
adc
and
xor
or
xchg
inc
movsl
rcll
add
rcrb
imul
xchg
fcmovnb
fbstp
xlat
mov
mov
mov
sti
mov
popa
repz
test
mov
and
cwtl
sbb
push
jge
std
push
cmp
outsb
jp
negb
lret
xor
out
mov
mov
testl
pop
xchg
sub
movsl
add
xchg
jne
push
std
insl
dec
inc
lock
cmp
ds
mov
adc
lahf
test
outsl
rcrb
dec
or
jl
ds
push
imul
adc
mov
aad
mov
enter
stc
mov
fadd
cmp
xor
arpl
or
lahf
xor
pop
lcall
pop
add
jp
cmp
sbb
lds
bound
aaa
ss
test
ret
orb
cmp
fstpl
push
and
jns
cltd
pushf
or
adc
test
xchg
ljmp
jo
inc
push
jmp
ljmp
cltd
loope
mov
push
cli
mov
addr16
pop
test
ds
sub
add
mov
and
fcmovu
test
mov
aam
into
sbb
rcrl
lret
jp
out
int3
test
scas
filds
orb
cmpsb
out
and
test
xor
in
push
nop
mov
cmp
insl
cmp
cltd
mov
push
xor
jmp
cmp
cmp
sti
fnstsw
in
call
jns
lret
cmp
cmpsb
adc
pop
je
cmp
xchg
in
pop
push
enter
es
xchg
add
data16
movsb
cmc
sti
aaa
dec
jmp
nop
pop
adc
mov
imul
dec
xor
add
stc
stos
ret
orl
pop
repnz
cmc
into
push
aam
aas
sbb
add
mov
pushl
mov
mov
mov
aas
and
movb
aas
push
mov
dec
mov
jnp
loop
ss
pop
call
mov
dec
mov
jmp
add
push
inc
lret
orb
icebp
in
push
sub
dec
sbb
mov
loop
icebp
stc
movl
je
push
pop
dec
cld
sub
dec
xchg
xor
adc
cmp
popf
sbb
call
sub
cs
jo
pop
pop
in
push
push
stos
int3
pop
in
xlat
lret
mov
mov
call
mov
cmp
xor
rolb
cmp
adc
mov
pop
mov
adc
sub
pop
cmp
inc
push
xchg
addr16
sbb
popf
aaa
imulb
imul
xor
push
shlb
mov
int3
cmp
movsl
into
xlat
ret
jno
stos
pushf
cmp
pop
push
cs
xchg
jno
test
jmp
stos
sub
clc
push
mov
inc
int
or
rcrl
sub
and
fld1
imul
jne
jmp
ret
imul
mov
fistl
movsl
add
rcrl
daa
jge
xlat
imul
pushf
ds
orl
pop
xchg
dec
sub
dec
push
lock
dec
loopne
add
insb
cmc
or
push
mov
mov
or
inc
je
and
cs
jne
outsb
fwait
je
addr16
inc
ljmp
add
sbb
and
jo
aad
sbb
movsl
mov
in
sbb
inc
cmp
outsl
dec
dec
push
xchg
stc
jg
int3
std
outsb
jae
and
jo
cmp
int3
jo
inc
mov
popa
push
dec
jl
enter
enter
mov
frstor
std
xchg
xchg
mov
hlt
add
in
and
jle
addr16
xchg
arpl
xor
clc
sbb
jmp
imul
ret
cs
sti
arpl
sub
cmpsl
jo
push
repz
pop
xchg
lds
cmpl
xlat
cmp
xchg
jae
jge
jae
in
cli
push
roll
adc
lock
iret
xor
push
lcall
repz
sub
aaa
je
into
stos
int
mov
out
inc
fsts
std
pushf
es
mov
stc
fwait
inc
dec
pusha
lds
xor
bound
mov
shrl
shll
bound
out
push
mulb
movsl
jbe
lret
ret
add
in
fadds
icebp
jmp
out
std
xchg
jp
loop
mov
mov
shll
out
mov
pop
jo
cli
jmp
test
ds
jbe
mov
push
xchg
dec
call
adc
xor
or
outsb
xor
jae
cmpsl
ds
xor
and
cli
repnz
add
sub
test
mov
mov
mov
aad
add
inc
in
cmp
and
jbe
outsb
outsb
push
rorb
and
lods
int
and
xchg
jae
int3
cmpsb
das
mov
popa
iret
mov
idiv
mov
fucom
fdivrs
mov
mov
out
xor
cmp
pop
mov
sbb
cs
jns
lret
dec
xchg
xchg
push
repz
fstpl
popf
pop
dec
jns
out
test
mov
sbb
cmc
test
pop
cmp
mov
test
add
fldl
sahf
mov
orb
and
cs
fmul
mov
mov
into
shlb
push
test
dec
jo
adc
mov
jge
inc
shll
int
sbbb
imul
mov
iret
pop
lods
rorb
call
int
and
or
jmp
inc
sub
jne
addr16
iret
lret
jecxz
mov
mov
in
push
adc
cld
je
lcall
popf
cmp
xchg
xchg
es
mov
xor
lcall
pop
xchg
xchg
dec
cmpsl
cli
pop
dec
loopne
and
je
and
aam
out
out
insb
lret
push
out
test
sub
xchg
das
dec
cli
cmp
lods
pop
or
test
adc
movsl
push
xchg
imul
mov
fisubrl
sbb
adc
loop
into
xchg
das
cli
mov
push
mov
cmp
shll
mov
push
dec
cmp
leave
mov
fucomip
and
push
dec
cs
jae
mov
dec
cs
sub
shll
sub
mov
jnp
out
fidivs
scas
adc
pop
cmp
addl
add
dec
mov
outsb
mov
imul
das
pop
cmp
or
sbb
cmp
mov
mov
xchg
imul
insl
push
cmp
inc
out
cmp
aad
bound
sbb
or
sbb
lds
imul
add
push
cmpsb
in
js
jge
cli
mov
sbb
sti
dec
movsl
sub
xchg
pop
outsl
je
jnp
pop
jecxz
push
aad
loopne
mov
cmp
sub
pop
xor
fwait
or
add
cmpb
aam
nop
xchg
fwait
sub
pop
jle
emms
imul
out
dec
xchg
sarl
or
add
add
movsb
les
push
loopne
xchg
mov
xor
bnd
cmp
cmc
in
mov
insl
fistpl
jbe
in
lods
and
test
testb
shrl
dec
xchg
cmp
testb
adc
pop
mov
lcall
cmp
adc
pop
ds
or
mov
aaa
add
mov
cmp
loop
dec
sbbl
clc
out
xchg
js
lods
mov
add
aaa
andb
dec
mov
repz
js
sub
repz
xchg
dec
rcrb
sarb
jae
into
push
push
and
insl
mov
mov
cld
jg
mov
test
test
cmp
imul
push
inc
test
pop
mov
mov
pop
int3
jns
aas
fsts
pop
mov
mov
out
cmpb
call
jnp
mov
popa
ljmp
sti
mov
inc
and
adc
dec
sub
loop
xchg
insl
adcl
test
xchg
jae
add
xchg
arpl
mov
and
cwtl
sub
daa
or
rep
xor
cmp
das
push
inc
bound
dec
xchg
add
lcall
mov
pop
sub
outsl
mov
sub
aad
pop
push
add
pusha
jg
inc
testb
cli
pop
sbb
adc
jg
jnp
ljmp
jl
push
add
sub
gs
scas
pop
arpl
sub
cmp
sbb
push
fidivrl
scas
sub
scas
pop
int3
aam
push
scas
push
and
cmp
xchg
sub
sbb
mov
xchg
xchg
sub
fbld
sub
pop
out
popf
push
xor
cmpsl
jb
lds
mov
sbb
mov
push
fistpl
jo
cmp
sbb
push
dec
push
jg
in
jae
lods
mov
ja
pop
mov
jo
dec
xor
cmp
fcomps
adc
mov
push
rorb
subb
out
bound
scas
push
inc
mov
outsb
sbb
es
or
mov
lret
dec
movsb
std
cmpsl
push
int
or
xchg
sbb
push
in
hlt
popf
jp
sbb
xchg
cmp
pop
lock
cltd
sbb
shl
mov
add
frstor
cmp
mov
mov
xlat
sub
mov
xor
or
dec
pusha
and
and
movsb
sub
pop
dec
cmc
pop
adc
sub
and
cltd
push
dec
sti
inc
insb
dec
adc
mov
daa
sti
or
inc
jge
fstpt
mov
fs
ret
fsubs
cmp
mov
scas
mov
lods
xchg
into
xchg
xchg
xchg
arpl
aad
mov
push
dec
sarb
ror
add
jae
cmp
repnz
shrl
sub
add
shlb
add
repnz
inc
push
mov
push
dec
ja
insl
xor
imul
cmpsb
pop
out
ficompl
lret
mov
inc
jns
push
pop
stos
outsl
adc
lret
push
sbb
and
fnstsw
pop
leave
mov
pop
jnp
aam
in
inc
mov
xor
std
pusha
movb
mov
lfs
out
das
pop
push
push
add
insb
out
mov
lret
jns
dec
ret
mov
and
loop
test
out
imul
inc
fstps
addl
dec
xor
lea
sub
rcrl
fdivr
mov
and
adc
sub
icebp
das
and
nop
and
fldl
inc
sbb
add
je
push
sbb
push
push
or
cmp
popf
es
jg
cltd
cmp
fstpt
bound
lret
sub
das
mov
mov
lock
xchg
jbe
xorl
dec
jl
daa
out
mov
push
movsb
insl
cmp
popa
jo
mov
ljmp
xor
into
das
lods
xor
xabort
push
push
out
mov
data16
popf
sbb
add
in
jns
cmpb
sub
mov
aaa
pop
in
imul
mov
jle
pop
sub
ret
inc
into
mov
xchg
in
loop
outsb
pop
cmp
pushf
adc
ret
xlat
mov
inc
mov
xor
cmp
mov
adc
xor
cmp
adc
mov
xchg
out
xor
fs
fisttpll
cmc
fbstp
and
pop
mov
addr16
mov
imul
in
lock
cs
std
sbb
out
ds
add
push
das
fadds
fwait
pop
test
xchg
mov
pop
loope
and
stos
in
xchg
out
jmp
enter
in
lods
pop
push
jne
push
cmc
pop
cmp
lock
aas
es
repz
nop
inc
add
mov
mov
add
out
jge
addb
jne
repnz
dec
push
jg
dec
std
pushf
push
adc
sub
inc
test
fcompl
cli
lcall
adc
mov
dec
jl
push
push
ljmp
pop
xchg
data16
shr
lods
inc
mov
sub
jne
sub
pop
jbe
lods
sub
loop
mov
inc
es
fsub
cmpsb
pop
cs
xor
adc
int
pop
jns
arpl
lret
jnp
daa
mov
cmp
dec
bound
mov
mov
imul
jle
adc
int3
inc
fdivrs
ljmp
mov
push
push
call
and
dec
in
pop
stos
push
adc
xchg
js
mov
sub
push
mov
xor
dec
jno
movsb
pop
fisubs
xchg
stos
test
jecxz
lods
jb
jp
in
push
imul
pop
shlw
jno
mov
les
outsl
pop
xor
sub
enter
aam
test
push
pop
xor
fmuls
daa
cmp
pop
lock
xchg
xchg
lock
fcmovnb
mov
ret
repnz
outsl
jns
shl
add
cmp
xchg
xlat
hlt
cmp
inc
mov
sub
arpl
xor
outsb
and
mov
pop
pop
addb
xchg
call
push
mov
aam
loopne
sti
add
cmp
fcom
sbb
pop
cmp
sub
std
push
in
repz
pop
arpl
push
and
mov
leave
xchg
stos
bound
and
insl
sbb
and
sbb
loopne
jnp
scas
lods
rcl
setl
fildl
andb
and
mov
andl
mov
arpl
pop
ds
jmp
sbb
paddusw
mov
negb
repz
ds
loop
in
mov
jge
orl
or
out
mov
mov
mov
std
lahf
add
std
inc
xchg
push
add
loop
ss
xor
pop
xor
pop
out
ret
icebp
lret
xchg
inc
call
mov
dec
jns
sarb
add
pop
iret
cmpsb
jne
mov
mov
out
fld
cli
fildll
rcrb
repz
scas
je
stos
test
mov
jl
into
mov
data16
dec
and
mov
adc
adc
addr16
xor
or
roll
fucomi
aad
mov
push
in
jbe
push
orb
shl
movsb
push
jmp
add
push
and
push
cwtl
jns
sub
sti
cmp
jge
cmpsl
pusha
popa
out
gs
andb
lea
shl
adc
dec
adc
sub
adcb
rcrl
jbe
add
mov
jmp
add
loopne
inc
cmp
ja
push
insl
ss
push
cld
or
fs
movsb
cmp
and
iret
inc
inc
lock
or
movsl
mov
sbb
mov
jnp
jmp
inc
sbbl
rcll
mov
shll
es
mov
cmpsl
addr16
xor
or
test
and
sqrtps
pop
xchg
cmpsl
clc
sbb
mov
add
addr16
shrl
out
xchg
xchg
mov
stc
in
and
vxorps
sar
std
jge
add
jmp
pop
mov
outsl
subb
adc
jno
cmc
or
sbb
cmp
mov
or
adc
push
mov
imul
sub
rcll
mov
je
out
lods
loopne
mov
pop
dec
insl
mov
sbb
adc
popa
test
add
mov
testl
push
fdivs
sub
push
fisubrl
div
out
push
cs
call
subl
sbb
jecxz
cmp
call
test
rclb
push
lcall
scas
inc
xor
add
cli
scas
int3
jae
icebp
jl
loope
mov
cmp
pop
xor
pop
stos
adc
shlb
or
xchg
in
fists
orl
lds
jmp
dec
jne
xor
mov
mov
sub
push
jmp
lds
adc
call
cmp
fadd
stos
dec
jnp
das
mov
hlt
in
aad
testl
aam
xchg
sbb
xor
or
xchg
sbb
and
fidivrl
adc
lods
scas
and
lahf
rcl
mov
aam
aas
mov
push
xor
push
mov
pop
sbb
or
adc
sub
out
dec
xor
loope
push
in
lea
push
sahf
push
in
inc
icebp
enter
aas
dec
jne
in
std
or
es
decb
jl
adc
mov
adc
js
js
push
inc
arpl
nop
add
push
push
mov
in
pop
push
shll
cmpsb
out
xchg
xor
push
dec
aaa
aam
in
pop
mov
inc
or
xchg
test
and
in
xor
dec
jbe
dec
jns
jp
jns
hlt
dec
mov
push
cmpsl
push
enter
inc
cmpsl
cmpsb
es
pop
mov
das
cmp
lods
lret
cs
movsl
insl
pop
stc
sbb
pushf
sub
and
pop
or
sbb
dec
jp
push
sub
adc
aas
dec
xor
dec
push
mov
sbb
mov
adc
imul
inc
sub
mov
je
mov
xchg
fildll
clc
sbb
push
push
pop
pop
push
push
adc
inc
xchg
fwait
movsb
clc
add
jo
aad
mov
rorb
inc
sbb
inc
inc
in
in
in
mov
sbb
mov
mov
push
test
iret
pop
popf
or
mov
cmp
fwait
in
pop
dec
sub
stc
adc
enter
sub
mov
adc
icebp
add
add
inc
mov
in
pop
sbb
mov
mov
popf
or
xchg
inc
dec
cmp
cmp
shlb
leave
andl
dec
lods
rcrb
jne
or
pop
add
mov
adc
addr16
adcb
lds
sub
int
push
add
add
aad
cwtl
lahf
lea
mov
jl
int
dec
sub
sar
adc
xlat
mov
push
pop
test
sti
dec
push
sub
xor
xlat
cmpsl
test
jg
ja
leave
cmp
push
dec
push
inc
xlat
cs
jmp
aam
cmc
test
stos
ds
lds
jae
jnp
or
jbe
scas
sub
out
popa
jne
dec
scas
popa
ret
frstor
in
pop
add
adcb
sahf
inc
dec
movsl
fs
jae
mov
inc
add
mov
call
sub
pop
mov
add
std
inc
es
mov
mov
cmc
shll
pop
push
out
inc
mov
bound
mov
lock
pop
icebp
fidivrl
cmc
or
mov
xchg
xlat
loope
and
repz
adc
movl
mov
and
inc
push
sbb
imul
inc
jle
adc
jno
mov
add
loope
mov
cmp
daa
movsl
pop
ret
call
outsb
leave
mov
sbb
dec
js
sbb
daa
aaa
xchg
xchg
or
lret
sub
pop
pop
outsb
lretw
mov
pop
into
xorb
jecxz
rcll
in
js
aaa
mov
sahf
push
adc
jmp
push
int
bound
add
mov
mov
or
aam
in
inc
jle
push
outsl
and
loopne
test
fdivrp
inc
aaa
repz
sbb
adc
jbe
inc
shlb
inc
push
es
js
lret
cs
movsl
xchg
add
cwtl
sarl
fcompl
dec
xchg
inc
loop
mov
jno
in
add
notb
jb
mov
fs
add
mov
mov
jns
jb
repnz
sub
sahf
pop
lahf
xchg
xchg
inc
lock
outsl
sub
xor
jno
lods
inc
push
jno
pop
iret
sub
dec
daa
pop
fstpl
cmp
mov
out
loop
aaa
push
loope
jbe
test
add
daa
xchg
jnp
mov
add
ret
or
bnd
jo
push
pop
rclb
inc
hlt
loope
xchg
xor
push
outsb
xchg
mov
cmpsl
inc
lock
repz
add
lea
xor
ja
jmp
das
loope
out
sub
push
inc
scas
hlt
sub
shrb
ljmp
mov
in
adc
mov
ret
xor
fstl
loope
lods
fidivrl
nop
lods
mov
cmp
rcll
bound
dec
data16
stc
jecxz
jns
mov
pop
jmp
cmc
insb
push
or
ror
lea
adc
mov
les
cwtl
inc
test
or
and
push
test
or
je
sbb
andl
cltd
sbb
adc
mov
fs
pop
xchg
xor
shlb
push
xchg
xchg
pop
mov
fimull
sarb
xchg
arpl
sub
in
fidivrl
cmp
insl
hlt
push
xor
and
insl
lods
psubsw
xchg
xor
testb
dec
bound
lea
clc
sarl
jecxz
notl
cmp
ret
sub
push
cmpsb
cmp
fldcw
aam
xlat
jo
dec
lds
lods
cmc
jecxz
mov
das
clc
mov
mov
sbb
adc
jmp
sbb
leave
mov
sbb
xchg
or
push
ficompl
xchg
pop
mov
fwait
test
sub
jmp
jg
sbb
mov
loop
pop
stos
cmpsb
pop
in
mov
subl
test
ret
fcomps
daa
iret
out
cmp
push
sub
pusha
sub
fsts
xchg
pop
out
test
data16
jnp
lods
push
xchg
xor
xor
arpl
push
shl
xchg
mov
pop
lea
lahf
mov
mov
mov
outsl
xor
xor
fcomps
lods
cli
lock
sub
jne
xor
pop
mov
jo
mov
in
shlb
jno
pop
gs
scas
mov
imul
adc
je
dec
ja
sub
push
pop
lods
ljmp
test
mov
fldl
adc
cs
aam
sbb
repz
add
lcall
jg
cmovl
int3
out
mov
daa
cld
inc
push
sub
pop
inc
mov
ljmp
aad
jbe
stos
mov
sub
sbb
push
in
jge
lahf
fmull
xchg
xchg
lds
dec
and
lods
push
mov
bound
pop
xor
mov
mov
insl
adcl
ret
dec
xchg
inc
ret
cmp
pop
mov
outsl
adc
sbbb
fwait
incl
fstpt
je
dec
paddw
push
dec
ror
rcl
xor
loope
mov
lods
mov
adc
sub
xchg
fwait
sub
jl
mov
mov
fstps
enter
out
shrb
adc
mov
xor
dec
lcall
mov
nopl
out
out
and
push
ret
mov
xor
movsl
sub
sti
ja
add
pusha
push
sub
xor
cs
imul
xorb
mov
outsl
xor
sbb
sub
and
test
pop
imul
ja
xchg
mov
lret
pop
jns
aas
std
add
sahf
cmp
xchg
sub
push
jmp
js
xor
mov
inc
rclb
ds
inc
ss
dec
stos
arpl
mov
push
iret
popa
cmpsl
push
sahf
push
inc
lods
jb
add
mov
popa
repnz
in
xor
pxor
xorb
sti
hlt
cld
fists
or
dec
outsb
adc
inc
xchg
loope
mov
sub
lahf
mov
mov
out
jg
xchg
jnp
cmp
mov
jo
icebp
clc
ficompl
loope
jp
dec
add
lret
in
mov
mov
mov
in
enter
adc
mov
in
shlb
sbb
xchg
ja
divb
cmpsb
cmc
push
sub
insl
sbb
ljmp
dec
fidivl
pop
js
xchg
mov
dec
xor
or
mov
cmp
cwtl
scas
pop
mov
dec
dec
std
sahf
cli
mov
hlt
fistps
push
cwtl
mov
cmc
push
dec
or
imul
movsl
jmp
cltd
jg
popf
xor
stos
iret
bound
lret
fists
aas
mov
js
inc
leave
cmp
cmp
loop
and
insb
stos
cld
mov
cmp
daa
fstp
mov
inc
cmp
bound
sub
int3
sahf
ja
push
lret
in
pop
dec
fstp
out
movsb
popf
fsub
pop
dec
inc
jno
insl
aaa
lock
out
or
std
sub
mov
fstl
movb
sub
ret
push
adc
fadds
xchg
push
loop
or
loope
in
pop
lods
or
bound
or
pop
sti
outsl
xor
scas
adc
jne
push
in
mov
cwtl
pop
repz
lea
repnz
mov
punpckhwd
loopne
xchg
mov
popf
scas
out
jmp
xor
xchg
mov
adc
push
xchg
xchg
cli
outsb
dec
mov
je
xchg
loop
addr16
sub
fsub
mov
out
in
lahf
sub
jne
jl
das
pop
cli
cmpsl
cwtl
push
add
pop
fstp
xor
mov
nop
dec
mov
and
ret
out
sahf
imul
lock
aad
pop
inc
fwait
leave
faddl
std
inc
cmpsb
es
lock
dec
pop
add
std
out
inc
in
arpl
sub
pop
fmulp
insl
mov
jg
mov
mov
cli
and
mov
movsl
pushf
mov
bsf
ss
xchg
xor
mov
dec
mov
mov
cmp
pop
push
push
aad
xor
adc
clc
jg
mov
mov
repnz
sub
jmp
jecxz
pop
mov
xchg
lret
and
pop
sahf
lods
jae
jo
fldt
adc
imul
fcomi
loop
mov
jns
dec
or
pop
out
sub
and
or
mov
add
xchg
push
loopne
mov
jmp
cmp
sub
jne
and
mov
and
cmp
xchg
lods
test
xchg
lods
push
jge
ja
fisttps
mov
jno
aam
fwait
cltd
ss
fnop
mov
lods
jb
mov
imul
inc
jno
jno
fistl
test
jb
jg
jb
in
cmp
pop
call
aaa
movsb
xlat
mov
jbe
pop
push
cmp
xchg
les
push
icebp
pcmpeqb
sbb
imul
movsb
idivl
fstps
mov
sbb
hlt
inc
jo
mov
jbe
dec
mov
and
dec
mov
push
cmpsl
dec
xchg
cmp
adcl
dec
shlb
insb
test
outsb
push
test
push
std
and
mov
xlat
sti
insb
cmp
xchg
mov
and
imul
dec
ret
and
adc
and
inc
and
mov
inc
lcall
push
daa
repnz
clc
dec
xchg
stos
mov
xchg
incl
repnz
jle
aas
inc
mov
ljmp
adc
jle
pop
fisubrs
mov
ljmp
mov
dec
out
mov
lds
pop
and
push
jno
clc
js
add
xor
cmpsl
lcall
into
sub
push
dec
jno
ficoml
pop
js
in
call
sbb
scas
xchg
adc
push
push
orb
loop
cwtl
mov
add
loope
aas
cmp
jp
xchg
out
and
stos
mov
pop
add
adc
jg
fs
pop
push
fcom
sbbb
or
mov
adc
mov
cmp
popa
fcmovne
xlat
mov
mov
ljmp
pop
pop
repz
push
rorl
xchg
ret
mov
movsl
pop
cli
lahf
xor
jl
or
mov
insl
cld
loopne
add
lods
cmp
mov
out
fisttps
arpl
xchg
outsl
ret
push
xchg
sbb
mov
adc
or
cmp
out
sahf
jl
lret
rorl
jno
pusha
xchg
leave
jge
pushf
add
add
mov
inc
stos
popf
jp
sub
sahf
jnp
shr
jge
add
cmp
mov
push
iret
jg
or
sti
or
ficomps
std
adc
mov
scas
out
fmul
cmp
sti
sarb
iret
push
and
repz
mov
ret
dec
mov
lcall
loopne
or
jle
add
sub
push
sahf
loopne
repz
pop
aas
inc
lret
dec
dec
push
pop
xorb
cltd
lock
mov
inc
mov
cmc
fwait
inc
inc
movsb
and
mov
xlat
inc
pushf
inc
sarl
jecxz
int
and
inc
xchg
xchg
out
outsb
sub
fsts
neg
xor
cltd
nop
jo
jp
test
ljmp
mov
sbb
jne
xchg
repz
test
shlb
dec
dec
mov
jle
mov
jnp
push
pop
push
add
sub
jbe
cmp
arpl
and
aas
mov
cld
xor
mov
incb
faddp
in
mov
mov
jecxz
mov
imul
ret
mov
mov
cmpsl
aaa
out
shrb
xchg
daa
xor
sbbb
sub
js
sarb
jns
push
loope
outsl
mov
push
test
sbb
cmpsb
and
cmp
jle
push
push
lock
cmp
push
ja
lods
sub
shrl
ret
adc
rorb
sbb
inc
cltd
mov
rcrb
sbbl
aam
test
fidivrl
retw
lock
outsb
push
push
cld
stos
dec
push
dec
pusha
and
and
and
pushf
dec
and
sub
in
stos
aam
inc
stos
dec
loop
mov
or
aaa
lcall
mov
pushl
popf
shll
lods
mov
cmp
dec
mov
and
mov
xor
mov
movsl
loopne
and
in
xor
push
je
rcll
sub
mov
loopne
mov
dec
out
push
das
cmpsl
aas
mov
clc
lods
mov
jae
testl
lds
clc
jp
cwtl
orl
stos
fucomi
cmpsb
mov
add
pop
xchg
inc
pop
out
sub
cmc
les
popf
and
ficomps
bound
mov
mov
testl
cmp
pusha
loop
loope
andb
xchg
popf
pop
jno
push
sub
pop
adc
adc
outsl
pop
inc
inc
pushf
fwait
pop
jbe
fldcw
daa
mov
data16
lods
sub
sub
imul
mov
mov
xlat
cltd
and
xor
in
cmp
cli
add
mov
push
and
mov
lret
arpl
aaa
mov
add
inc
pusha
jnp
sub
mov
movsl
push
jb
test
jle
int3
cli
in
jge
adc
and
cmp
out
repnz
mov
shll
mov
repnz
dec
adc
lret
call
dec
mov
inc
pop
push
cltd
enter
outsb
push
jns
out
push
mov
adc
pop
test
int
or
cmpsb
inc
adc
pop
mov
fsts
push
mov
inc
xor
outsl
repz
jno
jbe
stos
cwtl
repnz
lock
in
incb
call
call
xor
sbb
rclb
jl
inc
enter
and
xchg
adc
test
jnp
xchg
aam
mov
es
fstl
push
outsb
std
popa
leave
sbb
fwait
inc
outsb
arpl
adc
movl
push
cmp
push
inc
jle
sbb
lret
jae
ret
test
test
es
lret
ja
sub
enter
dec
pop
push
inc
hlt
push
fcomp
insb
ret
or
dec
push
sub
push
insl
aad
inc
or
sub
jmp
aas
xor
sbb
loop
outsb
cmpsb
lret
mov
inc
inc
mov
cmc
clc
jmp
mov
or
add
cld
arpl
roll
mov
sub
in
fucomi
je
sbb
rcl
insl
fidivs
icebp
pop
mov
rorb
popf
fwait
out
push
inc
inc
adc
xor
mov
data16
xchg
lock
or
dec
mov
inc
repz
movb
movsl
push
dec
push
dec
loop
jp
sti
mov
or
or
xlat
stos
stos
clc
sub
call
pop
adc
ss
fs
sbb
lcall
sbb
repz
mov
loopne
dec
push
insb
lret
jno
loope
push
loop
cmp
push
cmp
lcall
stos
lods
les
js
inc
fidivl
push
scas
cmp
or
aam
dec
sti
or
cmpsb
jle
cmpps
inc
adc
lret
das
cmp
pop
push
sahf
jnp
mov
stc
mov
in
cwtl
pop
xor
out
stos
xor
icebp
cmp
sar
mov
loopne
cmc
dec
jge
addb
mov
mov
pop
sti
xchg
push
aas
or
xor
dec
push
test
and
in
aas
sub
pop
or
cmp
addl
movsb
std
lods
mov
test
arpl
std
loopne
xor
jbe
push
mull
sub
sbb
jge
loope
outsl
add
fcomip
nop
cmp
jp
cli
shll
repz
test
xchg
rorb
sub
lret
pop
and
xchg
xchg
stos
xchg
popl
adc
pop
ss
push
jmp
cmp
stc
mov
popa
mov
out
jno
mov
jbe
mov
sub
mov
dec
jae
jg
jge
xchg
movsl
jmp
cmp
imull
pushf
dec
rcrl
pop
sarb
or
clc
stc
andl
das
jo
inc
data16
cld
stos
pop
flds
fisttpl
ljmp
pop
test
cmp
sub
stos
push
sub
cwtl
movsl
cmpsl
mov
xchg
and
add
push
loopne
daa
push
pop
cmp
jo
push
std
sub
jno
lret
mov
mov
pushf
push
sahf
std
ss
inc
ds
push
jle
ret
xchg
insl
in
pop
jle
push
test
adc
jo
popa
lock
jmp
pop
push
or
push
add
sti
int
incb
movsb
push
xchg
popl
mov
sbb
aam
push
jle
jmp
inc
dec
cli
aas
inc
insb
rclb
inc
stos
xor
fcomp
out
mov
ret
push
ret
repz
push
adc
gs
fstps
add
mov
fst
push
jge
loop
inc
dec
dec
sub
mov
cmpsl
scas
lea
arpl
lcall
cmp
cmc
xchg
fwait
push
sub
jg
aas
nop
inc
xor
sbb
icebp
mov
cld
dec
call
mov
cli
leave
sbbl
inc
arpl
rorb
push
pusha
lret
and
mov
sbb
cmp
lods
test
and
hlt
add
les
cmpl
cld
inc
pop
aad
mov
adc
mov
push
sti
es
xor
jle
sbb
hlt
or
in
cmp
cmc
cmp
inc
insl
fnstsw
incb
pop
jnp
stos
or
sbb
add
in
add
mov
xorl
mov
cld
xchg
enter
push
lock
inc
dec
sbb
mov
xor
adc
leave
popa
js
and
xorl
clc
addr16
pushf
cmp
jge
inc
les
sub
mov
test
test
push
push
or
inc
out
xchg
std
jnp
or
cwtl
push
orb
xor
mov
inc
add
icebp
repnz
arpl
or
fs
test
arpl
data16
testb
aad
xor
das
push
push
push
mov
or
test
push
in
jge
pop
and
jne
mov
mull
aam
lock
lds
push
pop
xchg
pushf
and
cld
jmp
incb
cmp
cli
mov
sbb
pop
mov
lcall
icebp
add
or
mov
pop
aad
std
add
mov
mov
pop
push
dec
bound
pextrw
pop
mov
inc
insb
gs
cmp
add
rcl
aam
aam
sbb
aad
popa
xor
sbb
xchg
inc
mov
ljmp
sub
pop
add
and
mov
pop
inc
jno
mov
test
xchg
fucompp
es
jge
sub
mov
and
mov
push
and
sub
mov
pop
mov
add
jnp
add
lahf
pop
or
xchg
inc
scas
mov
mov
pop
std
inc
repnz
shlb
inc
or
pop
imul
and
push
inc
jp
or
xor
mov
pop
pop
pop
aaa
sbb
mov
ds
test
fildl
inc
adc
je
cmpb
fs
shll
cmc
push
jne
sbb
data16
lock
aam
push
arpl
fadds
mov
mov
sub
daa
add
jle
adc
in
xlat
repz
scas
push
negl
aas
sti
sbb
sbb
or
test
test
adc
xor
hlt
imul
and
jbe
call
call
lods
inc
mov
fdiv
loopne
mov
ljmp
insl
bound
arpl
mov
sub
in
insl
cmpsb
arpl
popa
movsl
sbb
dec
popw
or
cmpsl
outsb
xchg
adc
sahf
xchg
fs
insl
bound
pushf
inc
and
sti
test
pop
cs
add
add
xchg
testl
lods
dec
xchg
int
test
mov
xor
ss
insb
popa
sbb
insb
cmp
and
xchg
mov
movsb
mov
out
jo
int3
insl
pop
cmpsl
out
sub
mov
inc
popa
sti
fucomp
mov
pop
ds
sub
mov
popa
mov
fsubrs
dec
or
imul
sub
jle
insl
push
bound
push
test
cmpsl
pop
jae
jo
mov
inc
add
in
mov
jno
hlt
xabort
push
push
inc
mov
sbbl
pop
push
mov
jns
sarl
mov
ss
out
fistl
insl
int
mov
jecxz
push
sbb
mov
sbb
inc
stos
fsqrt
add
iret
adc
inc
out
and
frstor
mov
out
jae
push
pop
out
xlat
mov
imul
mov
cld
pop
xchg
and
clc
sbb
icebp
out
cs
pop
fadds
mov
jmp
scas
roll
xor
or
and
xor
jge
aaa
arpl
inc
loopne
cltd
fnstcw
stos
movl
btr
sub
or
jg
dec
lods
and
mov
inc
xchg
fstpt
mov
pop
daa
mov
add
sbb
mov
dec
mov
sbb
fwait
imul
jle
push
jg
fbld
insb
aaa
cmpsb
ror
lds
lcall
xor
jmp
mov
mov
pusha
scas
xlat
pop
lods
jae
sahf
mov
cmp
in
hlt
cmpsb
cmp
jl
popf
jae
jne
dec
shrb
call
stos
jbe
adc
xor
mov
imul
dec
adc
xchg
shlb
roll
stc
push
dec
mov
mov
mov
mov
jle
mov
pop
sub
add
xchg
xchg
mov
outsb
jne
loop
bswap
out
ja
push
test
mov
pushf
fnstenv
cmp
loop
push
lods
imul
outsl
jbe
insl
push
data16
xchg
adc
cmp
hlt
push
pop
adcl
iret
scas
xor
int
xchg
pushf
xor
inc
lahf
popa
aad
xlat
mov
sub
cwtl
andl
or
or
stos
clc
xor
sbb
pop
mov
or
stc
mov
push
lcall
pusha
mov
mul
cltd
pop
mov
test
sbbb
pop
xchg
in
fdivs
movsl
loope
aam
jmp
and
shlb
repz
adc
jo
pop
and
pop
cmpsb
mov
cli
adc
adc
popf
add
inc
jecxz
jp
pop
insl
in
cmp
std
fisubl
fs
mov
inc
lcall
push
dec
or
call
xchg
daa
cmovle
jo
in
nop
aas
dec
adc
dec
pop
mull
jae
push
loopne
into
or
push
fdivrl
xchg
xor
arpl
loop
sub
cmp
pushf
mov
gs
cmpsb
outsl
push
mov
orl
or
insb
xchg
jnp
adc
push
sbb
jae
sar
stc
xor
dec
insl
ficoml
jne
fptan
mov
xor
cmp
enter
in
sub
nop
mov
cs
out
push
push
ds
imul
je
lea
ljmp
mov
mov
test
aam
xor
pop
shl
or
add
or
jmp
mov
ret
cmp
loop
mov
mov
pushf
mov
xor
leave
out
xchg
mov
pop
aad
ret
movsb
mov
aam
inc
lcall
push
stc
out
adc
int
xchg
cwtl
mov
mov
adc
shrb
mov
mov
daa
push
mov
jns
lahf
lods
in
or
addr16
jb
adc
sahf
lcall
lds
stos
sub
inc
enter
xor
icebp
sbb
jmp
cld
icebp
sbb
ss
lods
push
sbb
xor
xor
mov
pushf
and
inc
sbb
xchg
in
ljmp
or
into
cld
push
inc
pop
out
fisubrl
jp
fiaddl
inc
sti
pop
sub
cmp
xorl
cmp
lahf
jo
pushf
insb
xchg
ss
push
lahf
mov
adc
inc
jnp
ss
sub
dec
cmp
xor
xor
dec
jne
push
sarb
int
shrl
jne
leave
xlat
add
mov
bound
rep
cmp
mov
int
sarb
mov
and
mov
dec
adc
cs
xchg
imul
sbb
mov
ss
or
lea
maxps
bound
aas
adc
scas
add
dec
push
jl
hlt
dec
dec
cld
sbb
outsl
sub
movsb
mov
les
jo
jecxz
and
and
dec
cwtl
jno
lock
popf
andl
sub
mov
push
popa
mov
jmp
jle
sub
jmp
mov
cli
xchg
out
and
mov
jb
dec
aad
imulb
adc
out
jl
sub
sti
cmp
shrl
and
mov
imul
insb
or
cmp
adc
fdivrl
mov
scas
lea
test
mov
xor
adc
les
pop
test
fnstcw
aas
test
add
sub
jle
cmp
or
cmp
outsl
test
cmp
mov
xchg
xchg
jecxz
int
pop
insl
mov
mov
les
xchg
adc
mov
in
pop
push
lcall
xchg
xchg
jp
mov
pushf
xor
test
pop
fistpll
jl
cwtl
cmp
ss
daa
subl
adc
sbb
xor
cld
aas
les
cmp
andb
or
sub
xchg
xor
mov
hlt
mov
pop
mov
cli
mov
imul
movsl
adc
and
pop
aad
ds
lea
pop
test
xorl
test
pushl
cmovns
fmuls
repnz
push
and
movb
les
bound
pop
mov
pop
sbb
test
cli
inc
movsb
mov
in
pop
inc
cwtl
data16
adc
inc
ret
insl
sahf
fistl
popa
test
mov
xchg
loopne
xor
roll
insb
clc
sub
push
outsb
fs
lds
pop
push
xor
lds
jecxz
sbb
inc
rolb
inc
mov
test
into
sub
xor
in
into
pop
jp
jne
xchg
push
jns
mov
pop
jns
push
icebp
sub
fneni(8087
std
push
test
clc
repz
lret
mov
in
pop
sti
cld
sbb
repnz
mov
sbb
movsb
push
hlt
aas
mov
lds
and
push
xor
clc
push
call
les
in
xchg
mov
das
cmp
and
in
subl
pop
jecxz
mov
mov
cmc
sahf
sti
insb
dec
insb
sub
and
dec
adc
cmpsb
ja
push
aaa
mov
dec
stos
and
popa
jne
push
push
jg
jecxz
into
adc
mov
xlat
fnsave
add
data16
mov
cmc
push
sbbb
ds
leave
mov
push
aaa
insl
rcrl
cmc
je
lahf
xor
fmull
das
mov
push
and
loope
pop
mov
sbb
sahf
cli
lahf
cmp
movsl
sti
mov
add
repnz
inc
ja
shll
xchg
popf
cmp
arpl
push
add
clc
mov
call
imul
pusha
xchg
jecxz
xor
shll
lock
xchg
dec
cmp
push
mov
dec
or
add
cmp
add
das
cmp
in
adc
mov
jmp
xor
icebp
xor
sbb
cs
xor
inc
lcall
jl
mov
add
jnp
cltd
xchg
out
push
cmc
sbb
mov
out
cwtl
cmp
fninit
xchg
lock
mov
push
jecxz
push
jecxz
mov
insl
sub
mov
cmp
arpl
dec
dec
or
mov
in
repnz
jno
pop
popf
or
sbb
clc
or
fldl
test
lret
repz
or
clc
mov
aad
cltd
fst
sbb
insl
es
sbb
fdivrl
lret
je
mov
push
jnp
mov
test
sub
push
daa
mov
sbb
push
pusha
inc
mov
add
clc
fsts
dec
cmp
xlat
and
mov
inc
jno
subl
sbb
gs
jge
inc
mov
rol
jns
mov
les
ja
adc
inc
xchg
and
test
mov
aam
xchg
inc
fstl
inc
mov
mov
jge
es
mov
mov
test
cmc
cmpsb
push
ss
cmp
pop
pop
rol
clc
into
lea
pop
sahf
clc
stos
sti
pop
mov
dec
mov
sub
in
and
push
inc
movsb
ds
pop
xchg
dec
movsb
inc
scas
ror
mov
adc
add
add
lock
repnz
pop
sbb
outsl
hlt
mov
movb
in
stos
sbb
rorl
and
inc
add
fists
fwait
mov
pop
out
mov
out
cmp
mov
out
out
xchg
pop
or
ds
jae
or
xchg
mov
dec
xchg
pop
cmp
push
test
sub
dec
nop
fs
call
push
mov
call
sub
test
and
xchg
mov
insb
std
icebp
cmc
xlat
push
decb
in
xchg
adc
push
add
sbb
cwtl
pop
cmp
das
sub
pop
adc
loopne
sbb
icebp
test
repnz
in
data16
sbb
and
cmp
repnz
aaa
fidivrl
push
xchg
mov
scas
cwtl
test
xchg
mov
mov
inc
sar
bound
jo
into
inc
push
xlat
xchg
add
hlt
inc
push
or
sbb
cs
mov
imul
sarb
push
dec
push
adc
dec
lods
xlat
lea
add
ljmp
sbb
mov
mov
sbbl
adc
mov
sbb
fmul
jae
xchg
stc
dec
call
hlt
repz
movsl
and
and
xchg
ljmp
adc
pop
loop
stc
adc
dec
pop
cli
inc
xchg
pop
pop
js
loope
ja
cmpsl
adc
mov
mov
mov
xor
inc
jmp
les
dec
mov
cmp
es
shlb
mov
dec
mov
sahf
jge
sbb
jbe
inc
bswap
inc
xchg
fdivl
enter
fnstenv
jp
jb
fisubl
mov
jne
fmulp
and
mov
fsubl
fstpt
out
aas
insl
mov
or
cwtl
dec
xchg
push
pushf
adc
push
fdivs
ficompl
xlat
cmpsb
inc
arpl
outsl
scas
movsb
inc
imul
xchg
adc
lcall
gs
adc
or
cmp
adc
xchg
rcrb
pop
push
inc
scas
movsb
lcall
adc
mov
bound
neg
pop
js
in
iret
mov
adc
lods
cwtl
jbe
xlat
test
dec
enter
out
repnz
pop
fs
pop
mov
jmp
out
dec
scas
adc
cltd
cmc
dec
inc
cmpsb
push
es
addb
lock
inc
fnsave
cmp
out
daa
inc
sub
cli
lea
ljmp
jb
adc
cmc
mov
cmpsb
pop
jmp
test
prefetch
or
divl
loopne
or
or
cmpsb
pusha
repz
and
xchg
xchg
sbb
icebp
ret
mulb
inc
shrl
and
sarl
mov
orl
lahf
aas
xor
scas
push
xchg
aam
jmp
ds
in
ret
pop
insb
inc
xchg
cltd
push
cmp
sbb
dec
xchg
pandn
testl
jno
lea
pop
mov
inc
inc
sub
or
mov
int3
stc
mov
push
bound
or
out
fcomps
aaa
mov
sub
and
add
in
mov
or
pop
jbe
fs
cmc
shufps
mov
imul
jle
adc
test
insl
jecxz
inc
sub
mov
push
dec
iret
loop
cmpsb
cmp
arpl
push
scas
lods
and
dec
mov
sbb
or
les
pop
xchg
nop
insl
cmpsl
gs
jecxz
addl
sti
jnp
push
stc
addr16
jge
into
sti
cmpsb
sub
adc
dec
test
pop
jns
lods
bound
xchg
fisttpl
or
loope
enter
cld
or
shl
lods
aad
adc
int
push
sbb
adc
mov
push
sahf
jl
repnz
pop
xor
sub
mov
jbe
ret
ds
lock
popa
mov
jecxz
pop
sbb
leave
mov
or
push
jg
dec
mov
test
pop
outsb
outsb
xchg
and
rorl
fstps
jmp
hlt
ret
ret
stc
ds
fsubrl
stc
sub
insb
movb
xor
adc
push
clc
gs
cwtl
cmp
scas
or
and
xchg
aaa
or
push
cmpsb
xor
add
mov
mov
jge
mov
jb
inc
sti
jae
rcrl
mov
inc
insl
lods
rorb
sub
xchg
fsubrl
fistpl
dec
aas
or
jp
mov
js
sub
sbb
ds
repnz
negl
lea
mov
ret
out
stos
cmp
cmp
ja
jmp
mov
hlt
out
inc
sub
sub
add
neg
cmpsb
mov
ja
enter
xchg
leave
popf
fwait
jl
in
xlat
mov
mov
cli
mov
dec
icebp
in
dec
push
jmp
add
je
scas
cmp
cmpsl
mov
push
loope
enter
jnp
cs
repz
test
mov
inc
enter
inc
xchg
aaa
test
add
sbb
mov
rcll
sub
scas
add
dec
ss
jne
push
addb
into
insl
mov
mov
or
les
testb
notb
bnd
fsubr
or
call
xchg
les
mov
dec
leave
lahf
inc
test
nop
add
pop
push
fldl
ret
push
daa
ret
or
sub
insb
out
xchg
mov
push
test
add
mov
repz
push
test
mov
mov
lock
and
aas
fsubl
fs
sub
push
mov
icebp
cmpsb
cmpsl
mov
jge
add
clc
xor
lahf
out
cmpsl
jnp
mov
ret
ret
filds
cli
xchg
and
outsb
mov
movsb
mov
xchg
push
scas
pop
adc
icebp
data16
adcb
aad
adc
inc
pop
lods
insb
fsubrs
lret
adc
adc
pushf
dec
ljmp
ret
add
fstpt
mov
ror
or
add
hlt
andl
add
outsb
add
ljmp
lods
out
dec
xor
mov
and
sahf
or
mov
or
repz
cmpsl
repz
sub
lea
jmp
xchg
inc
mov
mov
lods
imul
ret
xor
insb
inc
rorl
push
popa
jns
test
cmpsl
push
and
jns
sbb
jg
sbb
jl
js
outsb
insb
jb
dec
jb
in
xlat
push
gs
xchg
daa
fistl
mov
lea
or
out
cmp
xchg
divl
mov
lret
icebp
mov
push
push
xchg
and
jne
imul
fucom
arpl
loopne
lds
sub
pop
push
adc
daa
or
out
dec
push
pusha
add
mov
loope
or
mov
div
mov
fimull
test
fnsave
sbb
mov
mov
scas
cmp
std
cmp
jo
fwait
xchg
jl
cld
test
xor
jo
mov
imull
mov
sub
notb
sub
adc
push
loop
fidivl
jne
push
xchg
jns
fdiv
dec
sub
insl
ja
hlt
xor
shrb
sub
ja
scas
and
inc
add
call
mov
inc
mov
sub
mov
push
fsubrl
push
fdivs
or
test
cmpsb
add
push
bnd
cmp
sbb
mov
into
test
inc
scas
jb
lcall
mov
jmp
push
lret
cltd
in
unpcklps
or
ret
add
jl
rol
jmp
mov
xor
call
imul
andl
adc
daa
fcompl
lds
orb
imull
cmpsb
stos
fbstp
in
pop
inc
dec
cmp
xor
pop
push
push
adcl
cwtl
cltd
aam
adc
xchg
or
cmp
enter
adc
gs
aad
insl
cmpl
inc
or
fimull
xchg
mov
dec
clc
xor
das
mov
test
jmp
fstp
ja
dec
mov
xlat
lcall
sbb
adc
xlat
mov
mov
mov
rcrl
les
shll
shl
daa
shlb
lcall
sub
jle
push
or
cld
rolb
push
testl
into
das
sub
sub
sub
cmp
rcll
lea
jno
mov
mov
pusha
pop
dec
push
pop
in
in
nop
inc
repz
aam
insb
and
call
dec
imul
push
inc
rolb
jno
add
outsb
cwtl
xchg
inc
mov
mov
xor
sbb
push
mov
adc
jmp
cltd
aas
jnp
mov
int
jge
lahf
hlt
int3
loopne
test
dec
mov
hlt
cld
lods
repnz
sub
add
sbb
push
rolb
sbb
negl
data16
jb
and
roll
adc
cmp
push
pop
or
mov
sar
mov
xchg
mov
adc
mov
adc
addr16
cwtl
imul
mov
sahf
aaa
or
sbb
dec
cmpsb
cmp
fsubrs
sbb
jne
ljmp
cmpsl
scas
lds
or
adc
mov
ret
and
cmp
sahf
movsl
lret
adc
push
mov
dec
ss
into
or
jmp
xchg
lods
sbb
xor
repz
mov
mov
test
add
jne
inc
pop
outsb
xlat
mov
js
orl
xchg
les
push
jge
enter
lea
mov
xchg
fstl
out
loope
decl
cli
push
ret
jl
push
cmp
mov
mov
sub
adc
and
dec
ret
insl
lds
leave
addb
loop
adc
arpl
push
out
jge
xlat
xchg
mov
push
sbb
cmovae
inc
insl
rcll
lods
sbb
les
loopne
xchg
out
xor
sarl
addr16
leave
push
lock
push
xchg
iret
push
jmp
jle
and
andl
sub
dec
push
xor
xchg
mov
jp
add
mov
jecxz
insl
xchg
adc
or
outsb
orb
fwait
jnp
push
bound
dec
inc
push
test
je
dec
sbb
pop
mov
out
jns
out
push
clc
sub
fisubrs
out
add
sub
scas
iret
jne
subl
aad
or
in
les
cltd
pop
jl
dec
adc
movsl
jae
dec
mov
mov
rcll
fs
lea
sbb
inc
and
ljmp
add
sbbl
int
out
cs
push
lahf
jb
mov
cmc
imul
mov
mov
filds
push
push
pop
gs
xor
std
das
fnstenv
jno
repnz
in
jge
fbld
push
test
mov
lods
lcall
xchg
imul
test
cmpsb
test
insl
je
nop
js
sti
dec
test
ficompl
mov
push
aad
in
mov
or
cmp
jmp
push
inc
cmp
out
sti
shll
mov
movsb
mov
lcall
xchg
dec
pop
lds
xor
mov
aam
push
enter
or
cmp
add
pop
sbb
push
adc
pop
dec
mov
xorl
movsb
incb
imul
lea
fwait
test
ret
leave
mov
out
or
push
call
loopne
rcll
flds
scas
mulb
pop
dec
xchg
xor
stos
mov
fisubrs
fcompl
leave
mov
add
pop
push
xchg
insl
bound
mov
push
dec
push
mov
dec
xchg
pop
push
icebp
ret
test
adc
fisubrs
arpl
mov
push
imul
xchg
dec
std
fdivr
negb
or
scas
fwait
mov
roll
sbb
dec
dec
cmp
xchg
movsl
push
je
lods
mull
filds
mov
insl
loope
sbb
shlb
jmp
adc
into
push
mov
js
fs
xchg
cmc
daa
mov
test
cmc
push
jmp
movsl
lret
cmp
sub
adc
xchg
dec
inc
mov
or
push
sub
dec
insl
mov
jg
std
jg
push
jb
inc
mov
mov
addr16
test
mov
adc
sahf
ja
lock
and
mov
push
sahf
adc
aaa
fcmovnb
dec
ds
adc
add
outsb
aaa
fsubl
scas
adc
cmp
out
hlt
add
jmp
or
xchg
aaa
adc
sbbb
movsb
jo
inc
and
fdivrl
push
es
push
xor
nop
loope,pn
push
pop
add
fsubr
mov
scas
sub
pop
js
mov
addr16
loop
in
push
call
mov
inc
lods
push
pushl
je
in
mov
outsb
pushf
xchg
loopne
scas
xor
mov
fsubrs
insb
add
or
cmp
daa
jecxz
add
pop
mov
dec
popf
rcr
aam
xor
sub
lcall
or
sbb
jno
cmp
xchg
dec
pop
imul
insl
shll
sbb
add
cld
in
fwait
sub
repnz
push
cltd
int3
js
push
xorl
daa
popa
xor
jle
and
mov
mov
and
and
fstp
pop
loope
cmp
das
jnp
pop
pop
fnstsw
jp
mov
xor
repnz
sub
in
stos
mov
mov
loopne
or
pop
leave
outsb
add
inc
jg
adc
idivl
ret
sub
sub
bound
mov
sub
clc
pop
fdivs
sub
loopne
dec
lea
xchg
lahf
xchg
mov
call
in
cltd
jg
rcll
adc
std
xchg
inc
jmp
cmpb
push
sub
mov
sbb
and
in
cli
roll
test
mov
jno
jbe
into
loop
push
mov
xor
pop
enter
fldl
mov
in
and
cmc
mov
inc
clc
pushf
mov
cmp
xchg
xor
adc
sti
xchg
in
mov
lds
test
cld
inc
icebp
jo
lock
mov
imul
or
imul
xor
fs
aam
dec
cmp
adc
dec
outsl
clc
sub
and
arpl
in
push
cwtl
ljmp
loop
test
stos
leave
int
mov
or
insl
insb
adc
outsb
scas
push
add
mov
outsl
add
mov
xchg
or
sbb
sti
cmp
loopne
mov
jl
add
rorb
rcrb
push
in
in
lcall
stc
aas
xor
test
jg
dec
and
loope
dec
sbb
cltd
dec
pop
pop
cmpl
aas
sub
inc
scas
dec
add
subb
jp
rsm
mov
pop
testb
sar
xchg
lods
loope
cltd
adc
stc
jp
or
popa
pop
fdivs
ljmp
fcomp
ja
push
not
push
enter
push
dec
pop
xlat
cmp
jnp
shr
sbb
mov
mov
cmp
pop
pop
stos
inc
fsubl
cmc
ja
dec
in
jbe
ret
out
jns
xor
cmp
mov
mov
and
aad
out
hlt
fbstp
shrb
cmpsb
xor
cld
push
inc
and
pushf
sub
out
jl
xorb
or
mov
jle
sbb
mov
mov
or
stc
or
jne
popf
inc
icebp
movsb
lods
fs
xchg
push
sbb
dec
sbb
mov
jl
call
sbb
mov
inc
loope
ja
mov
scas
jp
inc
jnp
mov
aaa
add
cmpsb
scas
mov
fistps
sbb
xor
add
popf
in
jle
cmp
jno
adc
mov
pop
push
incl
fldt
mov
fdivrs
mov
mov
cmp
jo
imul
sbb
daa
push
mov
loop
pop
and
pop
mov
mov
mov
test
cmp
adc
clc
add
sahf
and
vmread
out
imul
sub
push
and
jne
lret
loopne
inc
scas
push
add
sub
loopne
or
fld
xor
adc
inc
popa
in
movsl
add
xchg
mov
and
push
das
out
pop
push
push
sbb
push
push
loope
in
xlat
push
imul
adc
addr16
sub
fdivrs
and
cmp
fsubl
pop
aaa
inc
lods
mov
xor
bound
stos
sbb
mov
xor
mov
xchg
sub
sub
pop
cmp
adc
push
push
jp
push
lds
xchg
insb
mov
add
stc
cmp
or
xorl
jg
mov
iret
inc
fisubs
pop
das
xor
jb
sarl
sub
jne
ret
daa
cmp
hlt
cmp
inc
cmp
popf
xor
jp
jne
les
xor
fs
mov
xor
mov
mov
adc
mov
push
jne
aam
and
cmp
sbb
ds
int3
loope
jp
mov
dec
dec
jae
push
add
pushf
lods
inc
sub
repnz
mov
pop
jl
test
or
jmp
mov
push
shlb
sbb
shl
jns
popa
sbb
loop
cmpsb
mov
push
adc
dec
dec
adc
sti
das
and
adcb
or
scas
sti
mov
icebp
inc
outsl
imul
in
cmp
sub
lcall
add
xor
insb
ja
outsl
arpl
bound
aas
add
movsb
xor
outsl
cmc
dec
test
adc
lahf
imul
and
mov
rcrb
cmpsl
and
mov
lds
mov
push
bound
repz
ret
mov
xchg
inc
je
movsl
ljmp
popf
aam
mulb
pop
jne
dec
ret
gs
enter
push
iret
in
mov
loope
jno
imul
aas
repnz
lock
cltd
mov
movsl
sti
subb
mov
jbe
sarl
and
outsl
adc
frstor
inc
lcall
addl
dec
repz
sbb
in
icebp
push
dec
nop
les
mov
xchg
setns
mov
lea
out
iret
jne
pop
xor
cmp
ret
xor
aas
lcall
jb
out
add
icebp
push
cli
enter
adc
push
cmpsl
xchg
sub
mov
fstl
repnz
mov
jle
sub
rcrl
leave
cmp
cmp
mov
aaa
inc
jne
stos
add
ret
mov
in
sbb
test
addr16
jmp
repnz
add
jl
lods
mov
and
data16
addr16
push
or
jno,pt
inc
mov
sub
lds
cs
pop
std
xchg
mov
and
push
popa
adc
adc
loopne
sbb
sbb
or
pop
xor
mov
ret
insl
ficoms
movsl
jp
test
test
inc
push
pop
sub
imul
pop
sub
xor
push
fcomip
int3
fisttps
or
inc
xchg
xchg
clc
jp
call
inc
fwait
pop
push
outsb
xor
cmp
cltd
push
xlat
enter
wbinvd
mov
cld
push
andl
cmp
sub
sbb
movsb
add
or
jmp
fcoms
cmc
jg
push
in
dec
inc
jmp
rorl
mov
test
sahf
sub
scas
xor
lea
mov
ss
inc
cwtl
rcr
outsl
int3
std
das
mov
mov
loope
mov
jg
sub
mov
mov
jmp
test
pop
ja
mov
in
aas
xchg
mov
cmp
clc
sub
adc
inc
ficoms
shll
xlat
adc
xchg
ljmp
adc
sti
xor
fdivl
jecxz
cld
pushf
fnsave
mov
cmp
test
rcl
stos
xor
divl
or
ds
lock
dec
or
and
stc
jp
push
fidivs
inc
push
and
sbb
push
lock
subb
mov
aad
aaa
add
pop
subl
repz
or
ret
jp
leave
fimuls
dec
fldl
push
aam
mov
add
and
add
sbb
jnp
mov
leave
outsb
lahf
pop
xchg
xor
test
jno
pop
decb
outsl
xor
dec
xchg
fisttps
cmp
lret
mov
jns
stos
jnp
mov
add
test
ficomps
mov
gs
fwait
dec
push
push
cmp
xor
out
xlat
pop
inc
pop
pop
jae
les
jl
inc
arpl
dec
dec
mov
pop
dec
mov
ss
sub
out
fmulp
negb
out
sub
enter
cmpsb
popa
lock
jl
popl
inc
les
pop
jne
subb
inc
ja
or
sbb
mov
pop
aas
rcr
mov
aas
xchg
sarl
std
or
or
fildl
pushf
clc
hlt
sub
mov
mov
lea
xor
xor
inc
mov
and
sub
mov
andb
insl
roll
sbb
or
push
mov
pop
cmp
or
test
mov
pop
stc
cmpsl
lds
les
aad
pop
sbb
dec
iret
rolb
xchg
sbb
jnp
xchg
aam
adc
std
mov
xchg
dec
pop
popf
in
aam
stc
and
sahf
pop
and
xor
mov
push
mov
push
loopne
sub
into
xchg
sbb
jl
cmc
hlt
add
sub
pop
cs
jo
push
test
push
add
xchg
and
imul
xor
pop
daa
or
rcrb
stc
dec
pop
add
dec
sarl
jecxz
xchg
xchg
adc
shll
fs
shl
push
cmpsb
sub
push
imul
add
cmp
orl
pop
xor
ss
push
les
push
lcall
inc
popa
cmp
data16
idivb
rorl
sbb
in
adc
push
or
jle
or
lret
or
jno
in
xchg
pop
cld
icebp
or
xchg
push
and
xchg
and
add
stos
cmp
sar
xlat
inc
sahf
adc
xchg
sbb
inc
mov
inc
movsb
push
mov
hlt
fistl
push
stos
daa
xor
and
mov
adc
fs
repz
sub
xor
das
insb
std
mov
push
dec
mov
lret
test
loopne
iret
push
divb
add
dec
jnp
hlt
xor
and
ljmp
cltd
dec
xlat
xor
mov
sbb
aas
mov
mov
sub
pop
pop
cmp
ja
fld
push
and
push
popa
jecxz
xchg
ljmp
imul
mov
cmc
mov
mov
scas
pop
jno
ja
push
add
sbb
mov
repz
xor
clc
dec
adc
jg
in
push
push
cmc
cli
adc
add
rcl
xor
sarl
popa
sbb
mov
and
mov
xchg
or
sti
and
fdivrs
dec
sub
push
call
into
dec
iret
ljmp
aas
inc
fnstsw
rcl
imul
jge
dec
lret
fdivrs
sub
dec
xor
loopne
gs
movsl
push
mov
js
repz
lods
push
dec
hlt
sbb
pop
xchg
add
loop
fdivrp
xchg
or
mov
dec
sbb
inc
fistl
lea
in
in
nop
data16
movsb
fbld
sbb
icebp
mov
inc
repnz
movsb
sub
cld
jle
shlb
pop
cmp
jne
in
mov
mov
test
ret
aaa
xor
add
mov
xor
dec
cmp
push
into
pop
xlat
in
popl
sbb
lahf
test
jmp
cs
jle
adc
inc
fsubl
insb
cmp
push
bound
and
mov
dec
int
cmpl
sub
push
push
pop
xor
or
dec
call
out
or
jns
jbe
inc
cmp
jbe
jecxz
into
adc
pusha
popa
imul
sbb
mov
fstp
gs
mov
lods
cmpl
mov
xor
xchg
pop
push
imulb
xor
sbb
mov
mov
repnz
repnz
rcl
add
aas
outsb
jecxz
addr16
add
push
push
out
add
das
mov
jns
leave
mov
and
dec
scas
mov
sbb
push
cmp
xchg
pop
or
xchg
jno
test
loope
outsl
add
sbb
lret
add
jge
dec
mov
into
fidivrl
in
loopne
in
and
dec
jg
push
mov
enter
mov
mov
adc
xchg
adc
xor
cli
sub
jg
mov
pop
mov
mov
jge
mov
xchg
adc
adc
push
jle
cli
xor
fsubr
int3
lret
aad
xchg
bound
lahf
setnp
les
arpl
mov
lret
mov
in
mov
pavgb
js
xchg
insl
mov
mov
je
dec
les
int3
loopne
loopne
arpl
xorl
add
popa
lcall
stos
cmpsl
scas
add
test
and
xchg
sbb
leave
add
test
pop
jo
clc
es
lods
mov
adc
ret
mov
pop
inc
push
push
pop
cltd
jb
sahf
outsb
das
mov
fcoml
mov
frstor
xchg
jae
mov
mov
cmp
sub
mov
pop
sti
imul
push
xchg
mov
mov
fwait
push
pop
jge
xchg
sti
inc
sub
or
dec
lahf
inc
je,pt
in
adc
xor
jo
jbe
sub
mov
cwtl
iret
or
addl
mov
xor
or
dec
stos
icebp
hlt
arpl
mov
mov
lds
loopne
pushf
pushaw
jl
loop
pop
fwait
lcall
pop
mov
ljmp
add
jmp
movsl
mov
addr16
adc
or
push
andl
gs
add
add
cwtl
adc
push
pusha
mov
and
stos
cmpsb
dec
cli
or
ret
fisubrl
push
mov
or
fsubr
inc
sti
fwait
rclb
test
decb
push
jg
inc
cld
out
les
mov
outsb
hlt
xchg
data16
notb
pushl
pop
sti
movsb
adc
xchg
and
jo
aaa
rcrb
cmc
ret
sub
push
pop
cmp
or
xchg
in
in
shr
clc
and
push
js
lock
mov
dec
stos
inc
inc
sbb
pushf
or
sbb
inc
lock
push
cmc
stc
add
stc
mov
push
push
jp
imul
jns
dec
jnp
xchg
hlt
rcrb
mov
leave
pop
or
testl
loop
or
popf
iret
mov
fstpt
arpl
js
stos
aaa
sub
xchg
dec
pop
jmp
adc
in
pop
sbb
icebp
nop
xchg
sti
cli
pop
push
or
ret
mov
xor
lret
mulb
loope
loope
mov
insb
inc
push
addr16
dec
mov
fimuls
sti
xchg
sbb
pop
in
imul
add
pop
add
mov
or
pop
ret
xchg
mov
pop
pmuludq
scas
insl
inc
or
mov
lds
cmp
stos
insb
add
sar
mov
ret
vmovdqu
jae
std
or
scas
outsb
jecxz
mov
aaa
jno
in
add
idiv
pop
and
or
xchg
cmp
mov
fs
xchg
pop
out
icebp
xchg
inc
enter
add
scas
js
push
pop
aam
cmp
inc
loope
dec
xorb
enter
pushf
mov
je
cmc
pusha
mov
jne
loopne
cmp
repnz
or
mov
loop
pop
adc
lea
fildl
ja
icebp
add
ljmp
es
lds
mov
pop
add
cmp
jmp
cltd
imulb
push
jmp
mov
clc
aaa
rol
cwtl
mov
jns
addr16
jb
inc
add
fidivrs
push
repnz
lea
scas
adc
mov
js
outsl
pop
mov
loope,pt
push
insb
sub
rorl
mov
in
cmp
mov
mov
orb
inc
add
fldenv
cmp
adc
and
mov
pop
fs
icebp
scas
sub
push
repz
popa
pop
cmpl
sub
pop
idivb
insb
xlat
lds
jecxz
test
inc
testl
jp
addr16
nop
cmp
sbb
fwait
push
das
mov
ret
pop
add
cli
push
cmpsl
test
push
push
hlt
mov
fmuls
mov
dec
jmp
lcall
out
stos
cmp
sub
pop
jb
mov
in
pop
out
sti
mov
and
testl
das
lret
dec
test
cmp
push
imul
pop
inc
mov
pop
and
ret
lahf
addr16
inc
jl
lods
ret
xchg
cmp
mov
loopne
call
dec
xchg
xchg
outsl
mov
push
lret
xchg
je
dec
int
adc
dec
sub
test
scas
adc
jo
mov
shll
push
lahf
lods
popa
add
loopne
dec
stos
cld
lods
mov
xorl
aad
fisttps
fiadds
sahf
push
out
int3
mov
incb
xor
lret
in
arpl
gs
mov
cwtl
mov
je
xor
es
jne
inc
sub
imul
lds
adc
outsb
lea
out
add
or
js
or
dec
push
ds
ss
je
and
or
insl
test
xor
push
adc
bnd
mov
shll
clc
xor
bound
jl
xor
dec
sub
or
rcl
lret
rcrb
mov
lret
push
ret
jle
test
xchg
sbb
loope
pop
jecxz
push
sub
add
stc
addr16
bound
jns
dec
cwtl
out
andb
inc
sti
cmp
and
adc
popa
notb
ret
mov
iret
lahf
cmc
push
arpl
ljmp
add
je
mov
jp
xchg
cmp
mov
pop
lea
add
dec
cli
cmp
or
dec
iret
add
mov
adc
mov
inc
arpl
adc
xor
insl
unpckhps
and
test
or
fwait
sarb
and
movsl
aas
bnd
rolb
mov
outsl
pushf
dec
push
into
das
outsl
adc
mov
je
xor
pushf
jg
push
int3
and
and
pop
mov
xchg
in
mov
fmuls
lods
xor
pop
aas
les
in
movsl
jno
aaa
pusha
or
inc
and
push
jp
push
sbb
jnp
lahf
mov
cmp
test
jle
sub
outsb
int
bnd
sbb
mov
pop
scas
shrl
outsl
hlt
in
aas
daa
or
jge
fdivrl
jp
test
je
scas
orb
pop
inc
cmp
aad
adc
or
sbb
xorl
sub
mov
add
pop
cld
rolb
es
xor
add
sub
adc
add
jecxz
std
xor
ret
cmp
ss
or
sbb
and
mov
xchg
lds
xchg
push
lods
and
xor
test
xor
jecxz
imul
and
pop
mul
inc
xchg
inc
lret
push
cltd
push
mov
in
push
mov
outsb
pop
add
dec
jbe
or
or
imul
inc
inc
call
cli
popa
mov
mov
pushf
or
mov
imul
and
mov
in
mov
sbb
call
fsubrl
cmp
test
enter
jecxz
xor
test
gs
fwait
repz
jnp
mov
push
sbb
adc
clc
inc
pop
aam
aad
mov
inc
fists
jmp
cmp
mov
int
frstor
sbb
jns
int
scas
mov
mov
adc
cli
out
insb
or
das
das
loope
out
addr16
inc
and
cltd
ret
dec
jbe
jb
aam
xchg
std
jecxz
sahf
shr
lock
ds
and
aam
or
push
rclb
aaa
ret
adcb
ljmp
lret
mov
or
dec
inc
icebp
pop
daa
ret
dec
pushf
push
loope
add
fsts
sub
inc
popa
sub
mov
ja
push
xchg
shll
jecxz
cltd
cmpsl
xor
roll
cmp
jo
loopne
jno
or
adc
and
out
jae
repnz
ds
ror
nop
pop
sub
hlt
jno
sbb
xsavec
lods
add
inc
mov
pop
cmp
rol
pop
pushf
adc
xchg
sbb
sub
dec
out
js
cmp
xor
cmp
pop
mov
jge
cmp
out
jle
mov
popa
clc
push
mov
jb
jl
and
enter
pushf
pusha
stos
push
dec
push
adc
sbb
inc
or
mov
jge
sbbl
imull
add
push
outsl
sahf
mov
xchg
push
insb
loope
pmaddwd
inc
mov
mov
pop
out
adc
repz
add
jbe
repz
out
repz
cmc
xor
mov
aaa
out
xchg
push
push
call
int3
shl
add
fistps
jne
jo
pop
mov
xlat
add
dec
sbb
sub
in
sub
adc
mov
mov
mov
and
add
mov
stos
and
mov
cmp
mov
sub
add
fiaddl
or
fistps
test
dec
xor
jp
dec
mov
adc
and
fnstenv
cmpb
jle
sub
inc
or
lds
xor
inc
clc
lea
mov
leave
jmp
mov
les
cmp
inc
xor
or
xor
add
inc
in
xor
adc
movsb
cmp
cmp
sahf
lcall
out
lods
dec
sub
and
repnz
mov
int3
sahf
outsb
mov
pop
push
inc
push
mov
scas
cvttps2pi
push
jecxz
sub
test
int3
daa
jns
fsubl
mov
xlat
daa
in
jl
aas
lds
inc
aad
adc
scas
iret
sarl
cs
mov
inc
push
pop
add
sbb
fstl
mov
js
loopne
sti
cmpsb
pusha
xlat
pop
jb
testb
lahf
sbb
stos
nop
fs
movsl
movb
fildl
test
cld
ljmp
or
xchg
push
adc
mov
push
sbb
shll
lock
push
mov
lret
sub
xor
xor
mov
jp
cmp
pushf
sub
xchg
lds
in
mov
aad
pop
push
fst
in
aaa
aaa
cmpsl
pop
adc
push
add
lahf
mov
popa
add
sbb
fdiv
jbe
cmpsl
jl
mov
sbb
out
ss
xchg
aam
fs
sub
sub
dec
lcall
call
lods
mov
test
xchg
nop
xchg
stc
test
add
pop
mov
js
movsb
mov
mov
jbe
sbb
add
sub
mov
ljmp
stos
int3
cwtl
mov
lods
ret
ficoms
cmp
xchg
adc
out
imul
push
std
xor
cmpsb
xor
negl
inc
sbb
fstpt
xchg
imul
and
pop
xor
mov
inc
or
out
xchg
jne
xor
sub
cmp
sbb
cmc
mov
out
sub
xlat
fcoms
cmp
dec
aad
adc
mov
jae
pop
ficoml
mov
mov
das
mov
in
jo
shld
fidivl
insb
mov
test
fbld
and
sti
loope
les
xor
stos
ds
inc
push
jno
xor
dec
daa
pop
add
mov
inc
jmp
or
push
sub
fwait
pop
data16
test
std
outsl
popf
dec
std
lret
fsts
and
test
repnz
stc
fnsave
popa
xor
inc
rorl
mov
lret
inc
sub
out
notl
mov
push
xchg
ret
repz
cmp
lods
xchg
icebp
cmp
mov
push
rcrb
imul
mov
mov
cmp
mov
push
push
xlat
add
mov
push
cmp
mov
push
xchg
sahf
add
mov
js
ret
pop
mov
cmpb
or
adc
in
insl
dec
lock
mov
add
cld
loope
divl
add
jno
xor
adc
push
rorb
adc
repnz
xchg
repz
les
aaa
stc
mov
push
jl
push
add
pop
add
mov
or
cli
add
push
jp
push
inc
xor
icebp
ja
add
icebp
and
cmp
dec
mov
roll
in
nop
mov
push
enter
sub
lock
ss
mov
push
ja
mov
dec
pop
jae
pop
adc
leave
shrb
sahf
shl
in
addb
cmpb
cmp
adc
add
push
mov
fbld
xor
push
jp
mov
inc
sub
lea
adc
xchg
pop
test
cmc
mov
xchg
xor
es
pop
test
out
test
ret
test
cltd
aas
stos
das
inc
push
jecxz
sub
push
jge
ljmp
adc
push
pushl
mov
mov
sbb
mov
xchg
lret
jmp
mov
sub
cmp
ret
cmp
jge
inc
add
push
or
jl
adc
push
push
ljmp
in
cmp
mov
cld
jns
cmp
int3
rorb
lret
clc
dec
test
jg
clc
xor
stc
outsb
push
out
test
and
xor
cltd
in
mov
inc
or
adc
mov
add
mov
or
mov
xor
pop
lcall
and
daa
xchg
push
and
aad
push
cs
ja
sub
out
inc
xor
and
mov
push
pop
scas
out
cmpb
out
in
adc
lahf
add
mov
add
cmpsb
inc
cwtl
mov
je
out
scas
adc
mov
lea
cli
daa
sub
push
cmp
enter
mov
mov
jns
std
jns
ret
sub
mov
fwait
dec
minsd
push
jl
mov
cmp
xlat
xlat
out
cltd
loop
stc
std
xorb
out
scas
stc
mov
sub
pop
mov
mov
lret
jge
ljmp
jb
sub
int
cmp
jecxz
loop
lahf
cmp
arpl
dec
fbld
negl
push
mov
or
inc
inc
iret
in
test
test
fbld
cltd
test
je
daa
sbb
dec
test
add
sub
stos
inc
or
or
insl
fwait
or
adc
pop
cltd
and
sbb
into
lahf
loopne
mov
cwtl
dec
pop
xchg
mov
add
dec
stos
xlat
push
test
mov
repz
ficoms
sbb
lret
enter
in
adc
scas
add
in
and
pop
xchg
fwait
inc
xchg
mov
cmp
xchg
ret
out
cltd
mov
jbe
jge
inc
xchg
movsb
test
cmp
inc
cmp
xchg
and
movsl
aam
shlb
or
xor
sahf
push
cmpsl
test
mov
adc
insb
ds
and
add
pusha
xchg
clc
cmp
mov
inc
ja
dec
add
out
xor
popa
and
inc
add
mov
cwtl
out
sbb
lret
sub
inc
add
mov
cmp
inc
mov
adc
mov
add
fstsw
mov
in
mov
lcall
pop
dec
int3
jecxz
sub
sbb
pop
add
pop
xchg
pop
cmp
mov
imul
inc
fs
sub
mov
aam
sbb
decl
mov
das
fwait
pop
cmpsb
cwtl
mov
popf
call
push
cmpsl
and
jns
in
sarb
adc
mov
push
add
in
cmp
and
push
cmp
jnp
xor
data16
push
test
xchg
or
out
and
xor
and
call
or
inc
shlb
xchg
mov
xor
stos
addr16
adc
out
lret
push
mov
mov
mov
mov
pop
inc
outsb
mov
cmp
mov
pop
ljmp
sub
cmc
fsubr
adc
je
mov
adc
inc
sub
pusha
dec
and
movsl
xchg
dec
and
jae
out
push
mov
das
aas
xor
xor
pop
dec
lods
jp
addr16
bound
mov
dec
mov
and
and
cli
mov
fnsave
jnp
push
push
mov
test
inc
repz
pop
sbb
rol
cltd
lea
roll
jns
std
cmp
loope
fmuls
sbb
nop
pop
mov
out
adc
imul
data16
jmp
popl
ret
dec
jae
mov
out
test
xchg
rorl
mov
dec
push
or
aas
add
push
jg
sbb
fcomps
insl
jno
push
and
and
add
adc
fs
bound
jecxz
es
fisttpll
jbe
push
jge
rorb
jns
scas
jg
add
fwait
xor
and
mov
ss
pop
xchg
mov
jbe
add
imul
jo
sub
or
push
xchg
dec
mov
stos
push
orb
test
sbb
dec
fistpll
sub
mov
mov
test
mov
lret
inc
repz
cld
out
std
adc
cmp
cltd
popa
and
jl
pop
sub
inc
sarb
add
stc
pop
test
inc
test
sbb
les
cmc
cmp
xor
and
les
sbb
subb
int3
dec
xor
loop
mov
mov
xchg
dec
pop
mov
mov
xchg
movsb
jge
push
jp
mov
in
in
lods
jns
sti
jecxz
mov
sbb
xlat
cmpsb
es
popf
hlt
dec
mov
cs
pop
lock
adc
mov
xchg
sub
inc
neg
cmp
shl
popf
cmp
je
push
mov
lds
stos
out
insl
mov
ret
jecxz
xor
and
pop
daa
mov
repz
xchg
lds
outsl
lcall
jns
add
enter
imul
sub
inc
ror
push
xchg
fidivrl
cmc
jnp
test
movsb
xchg
jae
fwait
into
and
loope
test
cmp
sub
cltd
xchg
dec
mov
ret
xchg
fcmovnu
mov
pop
ljmp
cli
push
sti
arpl
imul
jns
inc
mul
mov
cld
jns
ffree
imul
scas
adc
or
mov
or
inc
pusha
push
popa
xchg
data16
pop
cmp
cwtl
cmc
cli
lahf
xor
dec
mov
xchg
jle
mov
push
jle
add
rorb
dec
adc
mov
inc
mov
test
divps
mov
into
xchg
data16
inc
sbb
out
neg
and
push
mov
jo
int
sahf
aaa
daa
add
add
adc
dec
in
dec
psrad
lds
shlb
enter
jl
lcall
mov
enter
imul
sbb
sbb
movsb
lock
mov
sbb
mov
push
inc
sbb
repnz
add
xchg
stos
inc
in
pop
sub
negb
dec
sbb
and
fsts
pop
xor
lcall
xchg
movl
daa
insb
shrb
pusha
std
mov
or
xor
out
push
in
int3
jecxz
daa
loopne
mov
sub
je
inc
out
cmp
sub
push
popl
and
shrl
sbb
or
shrb
lret
xchg
mov
push
push
out
clc
dec
sub
ss
or
pop
mov
xlat
xchg
lods
lods
cmp
jl
sbb
cld
cld
add
mov
push
clc
or
or
imul
out
popf
sbb
stos
inc
mov
jo
ret
mov
fcoms
int3
cmp
mov
mov
xor
pusha
dec
jnp
mov
pusha
and
xor
stos
jbe
pop
pop
add
add
out
jmp
lret
ret
aad
mov
lock
imul
pop
in
sub
dec
int
out
clc
mov
dec
xor
mov
jg
jno
fucomip
enter
lret
arpl
push
mov
inc
cmpsb
inc
adc
int
xor
mov
inc
imul
test
push
xor
daa
aaa
in
xor
inc
and
les
add
inc
xchg
arpl
adc
jbe
test
mov
jle
mov
mov
loop
jnp
cmp
stos
scas
push
inc
fisubrs
loope
stos
dec
fbld
mov
mov
mov
sub
jnp
test
mov
addr16
jl,pt
pusha
rclb
jge
outsl
mov
sub
pop
and
ljmp
pop
xchg
rcrb
dec
xchg
jge
cmp
mov
enter
add
push
loop
xor
and
push
jne
xchg
ds
stc
test
testb
aas
add
jl
cmp
and
sahf
bnd
sbb
mov
imul
lea
push
popa
xlat
stc
fsub
xchg
and
aad
adc
jmp
jle,pn
jmp
jl
push
outsl
leave
xchg
lahf
and
inc
xchg
xchg
push
out
bound
js
ss
inc
cmpsb
sub
cmp
inc
mov
mov
and
ret
iret
imul
mov
fwait
push
sbb
js
jecxz
cs
flds
call
sbb
cmpsl
mov
push
mov
jmp
addr16
xor
stos
xor
mov
scas
sub
inc
loop
aam
cmp
ds
clc
push
mov
mov
mov
and
gs
movsb
dec
ljmp
mov
add
ret
pop
pop
repnz
sbb
jae
fs
adc
push
push
das
sub
loop
rol
in
mov
sbb
movb
aam
mov
sbb
loope
loopne
leave
pop
push
dec
or
add
cmp
mov
filds
int3
jae
mov
jns
mov
or
aad
sbb
adc
shr
js
jns
and
jnp
jle
out
data16
jle
cld
lds
sbb
enter
adc
jbe
into
pusha
mov
cltd
inc
cmp
test
aam
popf
aas
sar
jp
jno
sub
into
push
push
daa
mov
xor
scas
aas
xchg
push
xchg
test
jnp
sub
daa
mov
out
pop
das
push
adc
gs
sbb
mov
cld
sbb
stc
dec
and
inc
ret
shl
inc
pop
cmpsl
popa
insl
cmp
sub
push
adc
dec
mov
pop
fstpt
xchg
adc
mov
cmp
or
add
je
std
ret
andps
or
cmpsb
inc
test
aas
lds
outsb
sub
cmpsb
mov
je
sbbl
aas
jne
leave
jae
pop
ret
adc
aam
insl
push
or
lods
out
loop
test
fistpll
lret
sbb
ds
adc
mov
lcall
inc
xor
dec
sbb
testl
pop
stos
je
mov
roll
push
mov
hlt
push
mov
mov
jmp
push
mov
sub
adc
sbb
mov
lret
inc
xchg
sbb
test
mov
addb
cmp
push
rcll
xchg
or
sbb
and
cmp
cli
js
lahf
aaa
jnp
pushl
push
and
jne,pn
sbb
out
nop
loopne
sarl
or
cltd
and
imul
shr
out
popa
xchg
sahf
lock
mov
loopne
popa
jb
subl
decb
or
dec
adcb
ret
push
dec
sbb
and
jl
cmpb
inc
call
mov
xchg
incl
push
inc
mov
popf
test
in
sbb
and
outsl
loopne
aas
pop
dec
inc
push
imul
shl
mov
lds
push
dec
adc
loope
mov
gs
iret
insb
push
cli
cltd
call
mov
mov
out
cli
sbb
dec
inc
loopne
gs
adc
lcall
dec
jb
jge
xchg
fldcw
push
imul
jmp
hlt
hlt
mov
adc
lret
loopne
mov
mov
out
xor
ret
out
and
mov
adc
sub
push
xor
fneni(8087
jl
outsb
or
shll
lods
scas
stos
outsl
leave
and
mov
xchg
lret
ja
pop
lods
push
mov
pop
inc
push
sbb
dec
xchg
mov
jle
lret
test
js
xorl
fistpll
test
in
sub
push
jecxz
xchg
pop
and
fldenv
cmp
ljmp
sub
aad
int
mov
dec
dec
pop
adc
clc
arpl
rcrl
inc
and
fdivs
pop
dec
es
jnp
push
lds
inc
adc
xor
fldenv
aas
cmpsb
inc
adc
sti
cmpsl
jne
int
out
or
lcall
hlt
clc
adc
insb
mov
out
and
add
mov
adcb
enter
loopne
inc
jecxz
or
mov
xchg
mov
jecxz
jecxz
adc
sub
dec
hlt
sub
cmp
icebp
rcrl
push
mov
add
xchg
jl
jp
mov
lods
loop
dec
aam
loop
sub
aam
add
xor
es
inc
fiadds
and
mov
arpl
jl
xor
sahf
inc
mov
xor
xchg
dec
lcall
add
inc
call
mov
mov
dec
into
mov
sbb
cld
jecxz
pop
mov
jmp
mov
pandn
sti
cmp
add
movsl
idivb
test
xchg
out
pop
cld
add
cmp
stos
pop
pushf
inc
xchg
pop
push
xchg
dec
in
or
jns
add
jge
pop
popa
imul
out
cs
push
shlb
jns
xchg
sub
jnp
xchg
sahf
dec
cli
movsl
dec
lret
pop
add
inc
and
sub
in
push
cmpsl
dec
stos
or
jo
inc
in
sbb
jbe
xchg
daa
mov
jge
or
pop
stc
dec
imul
mov
fs
push
xchg
sub
jge
lods
jp
aaa
mov
pop
sti
pop
mov
bound
xor
dec
out
jo
mov
or
and
ficompl
ret
js
repnz
mov
data16
idivl
pop
adc
sub
pop
inc
mov
test
lock
add
push
negl
or
fnsave
cltd
rcrl
das
push
sahf
inc
jb
mov
inc
imul
mov
popa
cmp
mov
jmp
dec
mov
fs
or
cmpsb
push
or
out
xchg
push
xchg
sub
test
xchg
adc
sbb
div
popa
scas
inc
imul
pop
or
sbb
in
adc
jae
nop
ds
cmp
loope
jg
in
mov
inc
nop
mov
scas
pop
shrb
adcl
incl
rclb
shrl
mov
fwait
enter
xchg
lds
es
movsl
cld
push
repnz
jmp
insb
lea
movsl
adc
ret
sbb
or
xor
xlat
mov
arpl
insl
and
mov
roll
data16
cmp
jl
ret
xor
bnd
stc
jecxz
inc
test
or
cmp
add
rcrb
cmp
push
jg
andb
mov
jb
aam
dec
jp
lods
outsl
out
jg
push
into
lcall
lahf
jge
mov
or
xchg
push
jns
imul
ret
mov
lahf
jge
xchg
ljmp
lea
xor
xor
jge
adc
movsl
aas
insl
popa
loope
mov
mov
xchg
xchg
jne
cwtl
cmc
dec
dec
pop
call
aad
push
rorb
fcoms
adc
sbb
outsl
jecxz
test
mov
xchg
push
test
fnstcw
flds
cmpsl
fisubs
scas
sub
out
sbb
js
mov
leave
push
jp
sbb
cmc
sbb
dec
and
test
dec
popa
dec
jl
mov
fcmovne
js
in
outsl
adc
push
lahf
mov
mul
mov
mov
das
test
shrl
mov
and
or
es
repz
into
test
mov
jecxz
scas
push
imul
dec
xchg
sub
or
scas
sbb
pusha
push
andl
or
cmpsl
sub
imul
fisttpll
rorl
shl
push
imul
int3
push
inc
out
stc
or
aaa
out
jle
out
lds
pop
iret
sbb
out
aad
popf
xor
sub
mov
stos
bound
stos
xchg
and
mov
mov
clc
and
popf
aas
mov
or
fs
popa
aas
jecxz
cltd
jp
out
or
mov
rep
sbb
mov
push
push
pop
pop
stos
or
hlt
pop
es
nop
mov
test
dec
add
adc
inc
jmp
push
cmpl
or
dec
clc
popl
rclb
add
push
mov
imul
stc
cmp
pop
xor
lret
stos
sbb
jl
push
cmp
loop,pn
push
fnstcw
and
in
arpl
inc
jae
mov
sbb
push
jle
jle
mul
jnp
or
cwtl
cmp
rcll
mov
call
lea
sti
and
pop
into
push
lock
jb
push
add
and
push
jb
dec
pop
adcb
lret
jo
mov
lret
sarb
sbb
adc
push
mov
inc
jno
push
lds
adc
shrb
or
ss
lret
mov
movsl
add
push
lods
jbe
lcall
iret
add
fistpll
mov
orb
into
shrl
xchg
icebp
sub
jno
faddl
data16
adc
mov
mov
repz
pop
inc
inc
adc
jge
push
sbb
lods
imul
or
ret
stc
inc
ljmp
loop
inc
adc
int
and
inc
or
mov
test
adc
out
leave
and
pop
jecxz
std
dec
sbb
xchg
fdivl
xchg
popa
shll
jle
push
clc
sub
dec
adc
into
jnp
fstpt
sbb
in
out
mov
data16
pmuludq
in
push
xchg
mov
out
adc
in
gs
sub
fucomip
jge
jp
movsb
lret
jl
cld
loopne
pop
xor
fdiv
dec
pusha
inc
dec
push
push
out
mov
fsubl
dec
adc
outsl
pop
jmp
outsb
mov
cld
stos
test
mov
loope
sub
adc
pop
push
xchg
mov
xchg
stos
push
cmp
pop
clc
xorl
mov
dec
shrl
push
jle
push
or
call
inc
jp
mov
outsb
sarb
in
imul
mov
aad
jnp
out
out
sar
js
popa
adc
clc
mov
stos
insb
dec
fstp
mov
shll
ss
daa
xlat
popf
inc
daa
xchg
lcall
lds
sbb
add
push
aam
mov
mov
push
js
ja
repz
mov
mov
rorb
leave
push
or
pop
lock
outsb
icebp
and
push
fmull
push
outsb
imul
ss
fwait
inc
icebp
in
mov
out
loop
xor
imul
std
cs
sbb
cmpsb
xchg
sub
xor
pop
pop
jns
mov
mov
in
mov
inc
imul
andl
out
jge
add
cmpsb
cmp
add
adc
xor
and
fstps
pop
or
add
mov
jnp
scas
int
jg
and
scas
push
and
jns
pop
outsl
rclb
imull
je
mov
hlt
dec
and
jp
fxtract
repz
and
mov
dec
stos
dec
add
sbb
test
and
xor
sbbl
jg
hlt
fwait
cmp
mov
or
repnz
out
push
push
roll
repz
popf
cmp
cmpsl
fwait
add
xlat
and
daa
inc
pop
pop
xchg
mov
push
mov
inc
ficoml
push
callw
inc
sahf
dec
aas
mov
dec
repz
out
jno
in
ret
inc
xchg
test
mov
inc
pop
dec
enter
push
xchg
cld
push
or
dec
sbb
push
inc
cmpsb
xor
xor
mov
xchg
dec
xor
sbb
or
scas
sub
push
lret
fwait
jge
aam
and
shrl
ret
ss
into
inc
cmp
push
sbb
dec
repnz
popf
cmpsl
loopne
push
lds
mov
sbb
shll
mov
pop
mov
adc
adc
pop
addb
jno
or
mov
in
or
dec
movsl
sub
mov
pop
ljmp
push
pushf
mov
mov
mov
js
xchg
popf
movsl
int3
adc
mov
aaa
adc
sub
push
ljmp
mov
push
or
decl
pop
xor
and
jmp
mov
mov
loopne
shll
testl
mov
cmc
mov
mov
into
subl
dec
pusha
call
out
loope
and
inc
adc
push
ds
insl
aaa
in
mov
jge
push
and
dec
loope,pt
xchg
inc
fsubrs
pop
mov
mov
xchg
mov
sbb
int3
fldenv
ljmp
pop
iret
ljmp
movsb
and
lods
stos
pushl
fnstsw
sub
xchg
in
mov
mov
les
outsb
rcrl
inc
mov
xor
repz
lea
out
mov
repnz
shrb
popa
fnsave
pop
adc
adc
inc
pop
in
xor
push
push
ret
ljmp
lret
insl
lret
cmp
or
js
ljmp
xchg
mov
cmp
fwait
call
inc
push
rcrb
shlb
movsl
inc
and
fistps
test
pop
loop
sub
jp
xor
jp
repnz
cmp
xchg
and
cmp
mov
leave
loopne
inc
xchg
fistpl
dec
mov
pushf
inc
mov
pop
loope
xor
nop
cltd
mov
adc
rorb
inc
and
enter
sub
or
adc
mov
push
test
imul
or
jecxz
xchg
lcall
push
adc
push
mov
or
int3
sti
and
jg
leave
adc
call
sarb
int3
add
jge
data16
sar
cwtl
push
push
fs
xor
cmp
mov
mov
or
pushf
xchg
test
adc
shr
push
push
pop
adc
das
cmpsb
in
cmpsl
mov
lods
mov
mov
enter
add
dec
aad
lcall
xchg
push
js
popa
jmp
loopne
scas
int3
mov
xor
and
sbb
or
xchg
sti
add
xchg
mov
scas
je
and
pop
adc
daa
inc
test
xor
outsb
mov
or
cmp
cmp
sbb
cmp
jge
repnz
inc
clc
push
ss
adc
test
jno
lahf
int
ja
cwtl
cmovbe
rol
xchg
xchg
xor
sarb
into
xchg
rorb
adc
roll
xor
add
aam
add
xchg
int
sub
js
cli
arpl
ss
mov
xchg
insl
sti
jns
lods
adc
push
mov
mov
inc
mov
rcrb
cltd
enter
mov
roll
aad
out
lcall
cmp
mov
test
jae
imul
cmpsl
push
in
adcl
std
xchg
sar
movsl
jecxz
xchg
test
mov
adc
mov
add
jecxz
jg
iret
fdivrl
loop
cmpb
pop
ds
in
xor
lcall
sub
push
fwait
and
enter
jp
fcompl
jle
mov
add
insl
jp
mov
mov
mov
mov
xor
xor
inc
repz
cmp
addr16
mov
dec
xor
xor
sub
mov
jae
loopne
cmp
pushf
andl
std
loope
das
dec
mov
clts
outsl
sbb
xchg
outsb
add
fisubl
cltd
movsl
dec
mov
xor
dec
add
gs
inc
cmpsb
rcr
xchg
pop
sbb
cmc
int3
mov
lret
jg
jl
cmp
dec
fisttps
mov
and
test
mov
cmpsl
inc
leave
dec
sbb
and
mov
out
mov
mov
aas
aam
in
test
gs
cmp
test
scas
mov
cmovg
xor
movsl
mov
out
sub
jns
pop
dec
fld
mov
push
std
jmp
cli
bound
xchg
rcl
fdivl
xchg
mov
mov
lcall
std
xor
scas
push
out
xor
adc
sbb
insb
jns
lcall
sub
inc
add
add
fcmovb
xchg
sbb
push
xchg
mov
gs
push
sbb
cltd
pop
xchg
jno
ds
sub
mov
stc
add
fnsave
inc
lahf
xor
jne
mov
mov
mov
fbstp
cld
test
mov
imul
pop
pop
xchg
push
js
fsubp
cmp
lret
jecxz
and
sbb
movsl
divb
js
mov
add
cld
xlat
and
jo
lds
push
subl
mov
in
xchg
adc
out
loop
cld
adc
cmp
je
aad
cmc
adc
inc
stos
dec
inc
jecxz
mov
loopne
gs
push
out
jns
clc
adc
out
push
mull
bound
inc
sub
scas
mov
sub
xor
lods
mov
jae
roll
or
mov
test
das
xchg
push
sbb
into
loop
lods
push
pop
add
imul
into
mov
enter
stos
sub
and
andl
fldt
push
mov
pop
ja
fstl
and
movsb
leave
mov
fsubs
sub
xlat
in
and
xor
or
ljmp
roll
push
mov
scas
daa
ret
inc
test
push
dec
xor
cs
cmpl
fildll
scas
or
divl
incb
les
ja
dec
out
mov
push
stos
mov
data16
fstps
xor
popf
not
cmpsl
sbb
roll
das
loope
es
repz
lea
and
add
pop
sub
mov
bnd
or
call
jne
loopne
loope
add
xor
inc
xchg
sahf
sbb
jb
mov
shll
enter
push
lods
pop
aad
jp
gs
xorb
repz
fwait
mov
mov
stos
test
inc
sub
dec
iret
leave
std
push
imull
sbb
popf
lock
push
inc
daa
pop
sub
test
inc
sub
popf
rclb
fstps
adc
sahf
sub
shlb
pushf
aaa
ret
in
push
inc
mov
mov
lods
and
and
pop
jno
fsubrl
push
cmp
int
sti
push
jecxz
add
rolb
popf
daa
lret
fstl
pop
xchg
adc
jno
test
pop
imul
stc
sbb
mov
push
jle
xor
pop
mov
pop
push
xor
out
call
dec
inc
mov
into
push
or
mov
xchg
pusha
fwait
lds
enter
por
or
ja
test
sbb
jo
pop
es
xchg
push
divb
jbe
dec
pop
sbb
fldenv
fcoms
flds
mov
sar
jge
scas
js
loopne
and
into
fyl2xp1
and
aam
in
loopne
pop
sti
jae
jb
sub
popa
dec
push
sub
and
or
inc
inc
push
sub
fdivr
mov
dec
mov
outsb
sbb
adc
movq
mov
or
test
push
out
in
mov
fdivs
mov
mov
jp
pop
mov
daa
hlt
into
jle
lcall
ret
lods
xchg
add
add
enter
shrl
mov
imul
dec
test
daa
stos
aam
jne
cmp
das
ss
cmp
push
push
adc
sub
push
add
stos
imul
xlat
dec
mov
hlt
add
mov
loope
sti
or
dec
arpl
lods
mov
inc
push
lock
jo
loopne
or
and
mov
stc
ds
or
jb
out
xor
xchg
mov
mov
imul
push
push
insb
stc
cmc
movsl
lods
scas
push
cmp
inc
xor
mov
pop
in
out
cmpsb
push
fimuls
xor
add
sub
mov
repz
pusha
adc
mov
add
and
jns
aam
jns
loop
out
imul
sub
cltd
sbb
rcll
and
nop
lods
repnz
fldcw
cmp
jecxz
cmp
xor
test
push
mov
cmp
and
jne
popa
outsb
mov
jne
pusha
out
popf
movl
iret
adc
and
push
sbb
sub
cli
fdivrl
int3
rorl
mov
aas
and
sarb
pop
dec
pushf
jae
sbb
pop
addb
rolb
lea
inc
push
stos
scas
divl
add
mov
leave
jo
test
cmp
push
xor
icebp
push
sub
cmp
push
sbb
mov
fs
cld
inc
mov
test
inc
jecxz
xchg
inc
inc
cmp
cmpb
std
jne
xchg
mov
cmpsl
push
mov
popf
cmp
mov
outsb
push
aam
mov
dec
mov
adc
subl
enter
pop
int
sbb
xchg
lea
cmpl
pop
fisttpl
js
sbb
out
aam
or
push
mov
test
xchg
aad
sahf
lahf
in
pop
xchg
push
popa
or
ffree
fmuls
add
add
push
dec
sbb
lods
dec
and
mov
cmp
jg
in
adc
cmp
dec
pop
dec
push
cmp
test
pop
in
mov
pop
mov
es
inc
addr16
or
enter
mov
push
dec
lods
or
jmp
pop
lea
or
orb
xchg
xchg
std
cmc
sbb
ds
push
inc
arpl
jne
out
inc
sub
aam
pop
push
popa
cwtl
cmp
hlt
and
fdivp
shll
and
dec
jno
jne
add
or
imul
or
ljmp
adc
xchg
sbb
fstpl
outsb
movsl
xor
filds
jne
jns
jle
hlt
push
fldcw
ds
sbb
sar
mov
and
dec
rcrb
inc
jnp
add
pop
mov
adc
push
and
enter
stos
or
mov
adc
mov
insb
cmp
push
icebp
push
ja
shll
dec
adc
sbb
sbb
xor
dec
or
sahf
sbb
rcrl
jge
xor
xor
mov
mov
push
or
cmp
push
cmp
sub
cmp
mov
test
sbb
add
adc
cmpb
aaa
pusha
out
jae
out
loopne
sub
test
sbb
xchg
mov
mov
loopne
xchg
into
dec
mov
push
mov
stc
stc
movsl
fwait
xchg
and
outsb
out
xchg
mov
dec
pop
and
mov
sub
sarb
out
cmpsl
mov
xchg
cmp
leave
cmp
push
mov
xchg
xor
jno
bsf
add
cmp
jnp
xor
mov
sub
es
adc
jmp
push
push
loopne
jge
cmpl
ss
stos
imul
dec
stos
mov
push
lds
clc
lods
inc
and
sbbl
popa
test
jnp
jnp
add
div
fldz
std
mov
mov
dec
sahf
cmc
and
pop
adc
push
int
push
push
pop
pop
push
jo
dec
int3
jno
push
adc
test
mov
lods
int
and
fwait
lret
mov
mov
mov
loope
int
sub
or
ret
adc
fcmovnb
out
rcrl
xchg
in
add
popa
cmpsb
popf
sbb
arpl
sub
mov
bswap
xchg
incl
clc
pop
insl
js
mov
push
xor
push
mov
sub
arpl
call
add
imul
cmp
push
mov
cmp
sub
movsb
dec
shlb
mov
mov
out
xchg
ljmp
xor
out
das
xchg
and
add
testb
dec
in
lea
adc
adc
loopne
fsubs
and
test
pop
stos
cmp
pop
fsubrl
nopl
es
xor
adc
call
sbb
pop
mov
es
int3
cmc
scas
pop
or
inc
sahf
daa
cpuid
cmp
cmp
fcom
or
cltd
enter
ficomps
es
sub
xor
aaa
ds
andl
rorb
xor
push
andl
adc
aas
dec
mov
in
rcrb
fsubl
nop
pusha
sbb
mov
out
push
test
fidivs
mov
ffree
push
push
leave
push
es
xlat
and
outsb
pop
mov
lock
mov
insl
sub
inc
mov
shrl
lcall
notb
test
and
cmp
pop
cs
rcrl
ror
cld
mov
cmp
dec
or
clc
pop
enter
int3
icebp
xchg
lcall
mov
jle
add
add
or
add
and
rcrl
push
mov
aad
push
adc
adc
or
add
frstor
imul
push
dec
es
stos
mov
dec
xor
add
loop
daa
pop
push
cld
scas
jne
call
nop
daa
or
fidivs
push
testb
je
mov
cmp
push
cltd
pop
sti
fimuls
inc
adc
xchg
repnz
lcall
inc
inc
xchg
jnp
push
movsl
cltd
cmc
cmc
pop
add
out
push
fs
imul
add
lcall
mov
ret
and
loopne
out
pop
xor
mov
insl
push
ds
enter
xchg
std
in
jbe
cmc
test
out
mov
xor
or
sub
dec
pop
popf
jmp
psraw
std
adc
pop
stos
mov
test
push
mov
adc
cwtl
mov
fwait
lea
scas
in
xchg
adc
dec
jp
popa
cld
sub
jae
push
inc
data16
or
inc
jle
or
xor
sub
ljmp
jp
ret
mov
sbb
xor
jnp
stos
xchg
insl
mov
mov
sub
lret
jne
push
cmc
or
lods
pop
inc
xchg
enter
ficoms
mov
cwtl
sub
in
jmp
push
mov
bound
sbb
leave
out
adc
jp
sarb
cmpsl
in
scas
dec
call
stc
push
out
test
push
cmp
pop
icebp
nop
clc
xchg
int
sbb
imul
imul
push
sbb
stos
pop
lcall
push
inc
loopne
xor
xor
adcl
and
loop
fldt
mul
and
cmpsb
add
mov
and
pop
pop
xchg
add
stos
jnp
xlat
add
ja
aad
movl
jmp
dec
incb
ds
addl
push
add
or
mov
add
sbb
popa
fucomp
cwtl
jg
loop
int
xchg
std
sub
repnz
push
sub
xchg
in
or
xor
mov
pop
sub
jb
xor
aas
mov
enter
movsb
mov
sarb
imul
lret
pop
xchg
push
out
push
outsl
push
ljmp
push
dec
ss
hlt
adc
ffree
fisubs
jp
mov
mov
mov
jmp
sub
pop
lods
and
scas
cmp
jmp
mov
cmpsl
add
and
add
cwtl
pushf
mov
aaa
jbe
xchg
xchg
int
mov
jp
xor
imul
mov
imul
cmp
add
or
dec
and
ja
cmpsb
pop
xchg
push
sbb
push
mov
les
jecxz
mov
push
dec
movsb
stos
push
xor
jp
lcall
push
daa
aaa
ss
adc
or
and
out
mov
xor
call
mov
pusha
cwtl
push
sahf
ret
pop
adc
xlat
mov
xor
aaa
gs
add
mov
rcrb
test
cmpsl
adcl
in
in
jmp
mov
mov
sarl
pop
push
aam
test
xchg
in
and
cmpsb
and
sbbl
push
inc
pop
std
scas
data16
fsubs
fcmovne
pop
inc
sub
lds
mov
cltd
lret
out
mov
pushf
and
jbe
or
addl
xor
mov
jmp
test
sti
jle
outsl
into
xlat
mov
out
in
into
adc
arpl
jbe
jne
int3
scas
sti
mov
jl
sbb
daa
inc
rcl
push
adc
dec
sbb
xchg
sarl
pop
nop
fcomp
enter
es
in
cmpb
sti
negl
jb
in
add
cmpsb
or
clc
dec
sbb
fwait
es
xorb
out
adc
cmpsb
and
imul
loop
subl
shl
mov
out
mov
xor
cltd
push
test
stos
insl
je
sbb
cmp
cmpb
and
inc
das
xchg
shl
ljmp
inc
inc
xchg
xor
dec
pop
mov
das
ljmp
sbb
fcmovbe
pushf
rclb
pop
mov
cli
jne
sub
sub
insb
inc
fbld
iret
notl
pop
sbb
adc
mov
xor
lock
dec
scas
jge
lret
mul
mov
sbb
loope
sbb
mov
sub
ds
sub
ljmp
lds
bound
divl
test
outsl
aaa
push
pop
out
mov
lds
sbb
addb
or
pop
loopne
cltd
dec
stos
daa
xchg
dec
das
mov
scas
mov
adc
movsb
iret
adc
sbb
nop
in
add
les
adc
aaa
and
pop
mov
xchg
in
test
inc
outsb
inc
sub
aam
mov
pusha
fisttpl
sahf
pop
test
or
repnz
pushf
fadds
ror
andb
outsb
or
xchg
jo
push
jno
cmp
mov
fdivp
arpl
and
and
in
sti
aas
mov
icebp
push
mov
push
daa
mov
sbb
jecxz
xchg
das
jg
lea
icebp
fdivrl
lods
insl
sbb
sbb
std
sub
and
ss
lock
xchg
mov
and
test
mov
mov
inc
mov
jge
jl
add
or
out
add
cmp
out
cmp
jle
out
mov
cmp
fmull
push
inc
fldenv
in
sbb
xchg
add
daa
into
dec
loop
mov
sbb
js
or
addl
xchg
push
scas
mov
xchg
pop
or
push
dec
enter
daa
aam
repz
fmuls
and
data16
and
iret
lods
loop
inc
sahf
stos
mov
jmp
mov
loope
cs
push
push
fidivrl
shll
cmp
adc
clc
je
sahf
jle
arpl
inc
addr16
pop
jg
push
into
push
rcrl
inc
flds
jno
bnd
int3
mov
ja
loop
adc
rcl
mov
xor
push
sbb
inc
jle
push
or
cmp
fdivl
inc
add
loopne
xor
dec
stos
jecxz
mov
cli
mov
shl
sahf
cs
adc
pushf
rcrl
xchg
sarb
dec
mov
imul
scas
mov
xor
xchg
pop
mov
les
pop
mov
into
cld
push
push
in
dec
and
cmp
test
ret
negb
jbe
push
jae
in
jbe
neg
mov
mov
xchg
mov
mov
push
jge
sub
sbb
dec
mov
outsb
sahf
imull
das
add
lret
fsubs
sub
test
mov
icebp
std
mov
xor
inc
movsl
sbb
mov
sti
les
sbb
jnp
adc
cmp
adc
push
imul
jbe
or
lret
mov
les
xchg
insl
ja
call
mov
and
ja
ss
mov
imul
inc
lods
mov
hlt
pop
cld
es
and
pop
xchg
shrb
and
lea
ds
adc
mov
add
pop
pop
push
shrl
sbb
dec
inc
leave
jbe
dec
pusha
outsb
adc
xchg
ss
add
ret
xor
repnz
cmpsb
je
pop
insb
mov
lods
mov
popa
or
jmp
inc
adc
push
fildll
cld
jnp
sarl
mov
fildll
mov
int
adc
push
in
icebp
sub
jmp
call
int3
push
hlt
adc
xor
inc
mov
dec
imul
sarl
rclb
hlt
cld
jg
mov
out
pop
inc
xor
int
sti
fwait
push
pop
inc
hlt
push
jne
bnd
xchg
sahf
jp
or
mov
inc
mov
int3
mov
fcoml
test
xor
in
jge
mov
pop
clc
or
loopne
sbb
sub
fcmovb
sub
insl
sti
mov
push
scas
repnz
scas
mov
jne
pop
xor
mov
and
inc
cmp
xchg
mov
nop
sbb
icebp
repz
imul
lods
outsl
adc
outsb
and
ljmp
lds
pop
xor
mov
mov
insl
inc
fmul
cs
cmpb
out
adc
test
fucom
outsl
repz
loope
lcall
jbe
pop
xabort
jecxz
jp
lods
lods
repnz
pop
in
daa
mov
sti
xor
insb
loop
mov
es
sti
outsl
std
lret
and
scas
fs
movsl
fistl
pop
stos
sbb
sbb
xchg
fstp
fbstp
mov
cmpsb
push
push
push
cmp
mov
insl
xchg
ret
test
xorb
mov
pop
call
push
stos
push
pop
push
jg
mov
mov
xorb
mov
and
xor
mov
sbb
int3
sbb
ja
adc
sbb
imul
ret
jo
repz
inc
add
and
in
adc
imul
arpl
cmp
adc
ret
sub
jnp
ss
push
and
add
or
ret
int3
dec
pushf
sub
notb
out
aam
imul
outsl
inc
shll
dec
out
dec
ss
leave
cld
call
jl
movsl
pop
pop
mov
mov
push
mov
lret
jnp
xor
sub
pop
lahf
int
push
cmp
je
jmp
mov
xchg
pop
push
loopne
inc
daa
mov
stos
lret
cmc
jb
pusha
ficomps
ja
fcomip
mov
inc
les
lahf
inc
jno
jne
cmpsl
fisubrl
mov
mov
daa
pop
mov
and
aad
rclb
inc
xchg
adc
mov
sub
call
mov
js
xchg
gs
lock
mov
pop
jns
and
sti
dec
stos
cmpsl
fldcw
jmp
das
outsb
mov
scas
jg
mov
pop
into
jae
in
cmp
pop
aad
cwtl
movsl
cmp
mov
or
ss
or
out
mov
jo
or
cmp
test
xchg
sbb
jge
mov
popf
fnsave
pusha
out
fstpl
mov
sarb
jne
movsb
lods
mov
popa
nop
sarb
pop
mov
enter
insl
xchg
adc
fadds
inc
in
mov
mov
cmpsb
aam
fwait
adc
xchg
sub
call
aad
pushl
iret
je
inc
fimuls
xchg
jnp
adc
repz
repnz
xor
add
insb
add
mov
adc
or
in
mov
inc
lea
cmpsb
into
adcl
sahf
cmp
push
jl
push
xorb
mov
jae
sbb
cmp
inc
call
sub
lea
sar
xchg
jl
out
fstl
and
fisttpll
pushw
jecxz
pop
lods
xor
push
test
pop
jp
fmul
hlt
xchg
push
and
and
push
mov
mov
dec
sub
adc
pushf
sub
aad
pop
add
cmp
jle
lret
mov
xor
push
or
test
sub
or
xchg
clc
imul
fidivl
dec
mov
push
inc
mov
movsb
imul
ljmp
cmp
inc
lods
aam
inc
xor
lods
add
inc
cmc
loopne
rcll
cld
insl
cld
jecxz
sbb
fcoms
adcl
dec
aas
test
xchg
fs
iret
and
xchg
outsb
out
push
test
jnp
mov
mov
imul
or
test
dec
and
out
adcb
inc
leave
mov
jp
jo
dec
out
sti
sbb
std
out
into
lds
cmp
xor
rcrb
or
pop
cwtl
sub
cmpsb
adc
adc
jmp
lods
inc
push
call
or
adc
outsl
adc
add
jo
out
daa
cmpsb
lock
dec
pop
inc
ss
dec
jp
inc
cli
push
out
in
pop
add
or
les
jns
mov
jge
xor
mov
out
xchg
and
xor
inc
dec
outsl
test
ss
cmp
insl
addl
mov
mov
adc
xor
jmp
mov
lock
xor
mov
mov
push
sbb
imul
xor
add
pop
mov
add
jb
xor
xchg
cmpsl
mov
daa
out
mov
ffreep
aad
xor
adc
incb
pop
icebp
mov
adc
sub
fcmovnbe
mov
sub
sbb
xlat
ljmp
std
mov
sbbb
mov
adc
jbe
push
dec
movl
mov
ja
out
mov
lock
movsb
add
popa
pop
sti
or
into
cmpsb
sahf
imul
mov
imul
clc
jle
loopne
mov
mov
mov
repnz
fidivrl
push
ret
pop
dec
imul
notb
sub
mov
jnp
lret
push
in
add
push
mov
fimull
mov
mov
repz
or
cmp
push
les
pushf
andb
xor
mov
push
mov
scas
gs
mov
pop
xchg
mov
imul
outsl
repz
pop
xchg
movsb
out
xchg
or
leave
pop
jne
push
insl
popa
loopne
cmp
mov
aam
and
rolb
pop
mov
and
mov
and
adc
and
mov
jbe
cmp
adc
sti
clc
je
push
imul
movsb
push
jl
mov
mov
mov
pop
lret
es
aad
repz
mov
rcrl
lret
test
dec
dec
xor
inc
mov
int
mov
sbb
andl
leave
xchg
pop
jmp
stos
fldenv
xchg
mov
call
cmp
mov
fisubl
jae
pusha
dec
pushf
filds
ret
dec
out
adc
ja
add
sti
and
pop
and
leave
ss
mov
pop
fisubs
jo
xor
in
sbb
fsubrs
jno
and
sbb
inc
push
sti
cmpsl
push
jl
repnz
push
sbb
cmp
test
andl
mov
adc
fildll
stos
fcompl
cmpsb
and
iret
ss
inc
icebp
or
xchg
dec
xor
pop
cmp
inc
mov
sbb
sbbl
adc
push
cmp
inc
adc
and
fisubrs
sub
mov
cli
loop
jne
mov
and
jno
rcrb
scas
lods
push
imul
sbb
mov
add
icebp
xchg
cmc
out
shll
rolb
xlat
int
inc
fiaddl
add
outsl
pop
sbb
jne
and
lods
xor
add
mov
std
sti
mov
pmulhuw
lret
push
inc
enter
cmp
ss
push
out
push
fwait
shll
cmp
pop
arpl
or
mov
cltd
cmp
pop
xchg
xlat
push
sub
inc
call
add
mov
or
sub
aam
into
es
rcll
cmc
mov
lds
lahf
test
lcall
mov
mov
or
and
testb
ja
shl
in
cs
imul
pusha
mov
cmp
fdiv
rcrb
inc
inc
cmpsb
arpl
and
jnp
pop
pusha
jne
lea
sbb
insb
add
cmp
inc
xor
fmuls
mov
mov
push
mov
mov
pop
pop
inc
xchg
pop
outsb
mov
mov
sbb
xor
movsb
lret
or
push
xor
mov
xor
outsb
push
mov
insb
pop
dec
enter
out
xor
inc
xor
inc
insl
adc
push
lods
arpl
sbb
aas
insb
pop
bound
and
sub
loope
gs
or
jle
xor
and
dec
jns
subl
iret
jo
out
dec
loope
ja
or
jecxz
js,pn
popa
pop
jo
outsl
in
mov
sbb
mov
loop
cld
in
les
mov
repnz
sbb
imul
jae
insb
pusha
mov
or
jg
inc
adc
xorb
fs
daa
enter
bswap
sbb
and
mov
adc
or
cmp
sub
or
push
mov
cmp
int
cmp
fwait
leave
mov
aad
rcpps
out
sahf
mov
inc
xor
cmpl
mov
xor
fldcw
and
or
shlb
xchg
scas
mov
xchg
leave
lods
popa
jo
rol
add
mov
aas
gs
bnd
lods
jbe
pop
xor
loop
and
xlat
aas
mov
cmpsl
jno
sti
out
aas
imul
shlb
sub
popa
inc
cli
sub
int3
sbb
arpl
loopne
in
loopne
cmpsl
insb
sub
imul
lods
mov
dec
mov
add
sbb
or
pop
aas
push
daa
fs
popa
push
xor
sahf
lret
jae
lods
movsl
cltd
xor
sti
or
adc
out
xor
lods
mov
push
lds
loop
dec
mov
xchg
jns
mov
cltd
mov
xchg
mov
cltd
cmp
mov
xlat
stos
pop
mov
push
in
or
jo
inc
sub
mov
xchg
adc
int3
pop
pop
push
sbb
xor
inc
in
mov
jecxz
or
shll
enter
aad
inc
cmc
jmp
imul
stos
lahf
nop
imul
mov
push
jo
sbb
lcall
or
mov
jb
adc
stos
shll
pop
xor
jmp
xor
sub
iret
mov
xor
addb
fmulp
xchg
test
lret
xor
adc
filds
adc
cmp
inc
xor
in
dec
gs
push
cmc
icebp
ljmp
adc
insl
mov
pushf
dec
dec
mov
dec
add
mov
mov
cwtl
pop
pop
push
icebp
arpl
out
aad
and
mov
pop
xlat
pop
loope
imul
ds
jb
pop
scas
sub
data16
and
mov
xor
stos
mov
shll
push
xchg
inc
push
pop
sbb
add
ret
xchg
xor
sbbl
cmp
inc
jl
jnp
inc
lcall
lcall
push
test
xchg
mov
popf
xchg
in
jae
insb
sub
loop
fcoml
dec
mov
and
dec
sbb
out
test
mov
lods
adc
cmp
xor
sub
push
push
icebp
rol
cld
adc
cmpsb
sbb
ljmp
adc
scas
inc
mov
loop
fadds
jmp
or
xlat
mov
or
test
mov
pop
stos
call
loopne
mov
add
mov
lods
shlb
jnp
mov
fdiv
scas
jl
mov
loope
mov
cs
xor
int3
cli
call
jbe
cmp
adc
cmpb
dec
inc
mov
dec
mov
dec
dec
or
fs
sahf
pop
lcall
iret
test
lea
mov
xchg
pop
adc
inc
lods
xlat
xor
imull
sbb
pop
jno
push
dec
ror
daa
xor
insl
pop
rorb
notb
data16
inc
inc
push
mov
imul
stc
popf
sarb
test
std
test
pop
lret
adc
xchg
std
insb
adc
out
aaa
mulb
scas
or
stc
stos
aam
pushf
rcr
mov
xor
mov
fsubs
mov
xchg
pop
rorb
ret
mov
movb
or
jecxz
jp
mov
lahf
leave
push
int3
jmp
sub
inc
stos
fistl
mov
push
jno
sub
xchg
xor
test
enter
cwtl
scas
sti
and
cli
lret
adc
stos
out
sbb
xchg
mov
adc
popa
push
jbe
adc
or
xor
scas
mov
popa
jmp
push
lods
or
aas
mov
push
jns
enter
fldcw
test
jo
arpl
sahf
cwtl
lods
mov
in
pop
adc
mov
out
xor
mov
mov
lods
sbb
push
lock
inc
in
and
clc
dec
mov
subl
cwtl
push
cli
shrl
sub
cmpsl
jo
push
and
inc
mov
push
push
rcll
sub
push
mov
jecxz
and
xorb
jns
push
inc
repnz
into
movsb
ds
loopne
jne
idivb
mov
jl
scas
nop
sbb
stos
sub
enter
nop
pushf
and
addr16
cmpsl
or
adc
fnsave
rorb
push
orb
out
sub
sub
popf
pop
fsubs
invd
pushf
adc
mov
jmp
inc
jg
popf
lds
in
sti
xchg
add
mov
mov
cmpsl
test
insl
mov
pop
movsl
dec
addr16
jno
leave
push
ds
ljmp
push
sub
and
sub
clc
add
in
aaa
hlt
inc
mov
mov
or
sub
pop
bnd
sub
pop
lods
and
mov
gs
jp
out
mov
arpl
inc
ret
sub
cmp
fildll
sub
test
scas
adc
jne
test
push
mov
xchg
mulb
pop
arpl
adc
hlt
cld
sbb
ja
dec
mov
or
push
aad
sub
xchg
andb
and
fcoms
popa
ret
inc
sbb
mov
jb
in
movsl
mov
jns
and
pop
mov
jg
jo
add
loope
mov
test
pop
mov
lods
jne
andb
pop
loope
or
mov
xor
and
xchg
dec
into
dec
xchg
ds
jns
mov
sub
lahf
in
pop
or
sbb
jb
iret
add
add
and
mov
ficomps
xchg
or
push
xorl
dec
mov
inc
pop
dec
pop
out
and
out
and
pop
push
jmp
inc
xchg
fidivl
xor
add
cli
xor
adc
push
jno
fisubl
jae
fs
lahf
dec
outsb
dec
dec
lcall
pop
test
sub
enter
dec
scas
mov
fldl
pop
push
xor
add
inc
xchg
leave
sbb
repnz
add
push
xlat
arpl
insl
fidivl
imul
mov
pop
inc
fisttpl
pop
lea
stos
mov
cmp
lea
mov
mov
push
cmpl
js
xchg
mov
fidivs
in
jge
mov
add
xchg
jo
adc
ret
push
shl
out
adc
fisubrs
sub
out
sbb
stos
dec
imul
mov
in
jl
test
and
sub
popf
test
mov
inc
in
xlat
and
shl
fldln2
add
ror
adc
nop
in
pop
ret
les
adc
fcmovne
into
jmp
add
int3
mov
jg
xchg
cmp
jmp
xor
and
jmp
inc
add
sub
xchg
movsb
push
shll
popf
adc
enter
and
orl
cmp
jno
das
mov
les
cmp
bound
inc
jno
mov
push
fcomip
shlb
loop
fimull
fdivs
scas
sti
cmp
popf
mov
xor
fstpl
int
xor
and
es
std
repz
push
shll
add
push
dec
adc
sbb
int
std
jmp
cli
imul
lcall
scas
xor
cld
data16
and
and
mov
sub
mov
jmp
jb
in
push
cmp
repz
inc
ljmp
loop
fs
jae
xchg
pop
stos
pushf
lods
imul
cmp
in
lods
mov
leave
mov
adc
push
xchg
mov
outsl
sub
dec
and
jnp
fisttps
cmp
addr16
icebp
scas
jle
out
gs
push
or
mov
push
leave
mov
aaa
adc
mov
jb
adc
gs
pop
or
daa
sti
cmc
push
sbb
dec
clc
cli
imul
xchg
pop
push
mov
andl
lock
lahf
and
adc
cmp
fcoml
stos
and
adc
sti
or
jnp
pop
mov
mull
mov
pop
jmp
fimuls
cld
mov
pop
and
addr16
out
cmp
mov
mov
ss
lods
gs
lcall
xchg
shrb
add
inc
mov
xor
ret
xchg
lods
rdpmc
mov
dec
adc
popa
add
sahf
fbstp
sub
into
repnz
ret
test
adc
and
and
push
adc
jnp
test
inc
mov
xor
inc
jnp
clc
jns
popa
fadd
loop
mov
sbb
lret
push
xor
sahf
cmc
mov
mov
repz
movhps
fnstenv
inc
call
mulb
push
push
add
ret
xrelease
sbb
mov
insb
fidivrs
pop
xor
jo
pop
mov
push
clc
in
shr
roll
std
xor
inc
cmc
fcmovne
enter
fwait
mov
pop
adc
and
insl
roll
clc
sbb
dec
fistpl
bound
and
cmp
xchg
imul
push
or
sarl
dec
loope,pt
push
mov
insl
out
sti
lahf
insb
shll
sub
jo
pop
sti
cmpl
filds
push
rcrl
add
out
fxch
hlt
mov
je
xchg
mov
aad
push
mov
adc
xor
bound
and
inc
lcall
mov
lods
popf
push
dec
das
sbb
inc
mov
sti
inc
xlat
ficoml
adc
sub
sub
add
sahf
inc
mov
insb
xchg
inc
push
sti
lea
xchg
and
or
adc
xor
or
or
mov
mov
pop
fistpl
sub
sub
aam
add
pop
push
stc
outsl
xchg
inc
inc
sub
xchg
sbb
pop
jl
loopne
mov
mov
xor
jecxz
ljmp
les
mov
inc
xor
xchg
cmp
test
sub
mov
mov
imul
and
jnp
jo
sub
outsb
or
fwait
or
dec
popf
push
scas
fldpi
mov
pushf
pop
lcall
fsubrp
pop
cmp
push
pop
push
fistpll
lret
jo
push
lahf
push
mov
or
sarb
jbe
cmc
imul
stos
xchg
push
push
ret
das
push
hlt
push
shll
fcom
pop
and
adc
and
push
mov
cmp
mov
push
lahf
mov
inc
add
imul
lock
aam
cmp
loope
cmpb
jl
enter
adc
ja
inc
in
adc
xchg
orl
jb
dec
push
push
xor
cld
sbb
int3
hlt
into
mov
fxch
xor
push
out
outsb
adc
lret
xor
jle
clc
lcall
sub
mov
sbb
lahf
lods
ret
push
pop
sub
popf
xchg
imul
xlat
mov
das
pop
pop
sub
dec
test
cli
test
hlt
fwait
cmp
fwait
cmp
mull
aad
cmc
out
filds
mov
popf
es
mov
addl
scas
push
sub
fsts
or
cmp
mov
enter
data16
mov
in
push
mov
popa
test
ret
mov
mov
xlat
stos
cmp
lock
gs
clc
cmp
jae
mov
gs
rolb
test
fcomps
xor
mov
or
jne
in
pop
imull
lds
push
xchg
xor
popa
out
fldenv
call
sbb
pop
jge
loopne
xchg
sahf
outsb
sbb
cmp
stc
das
cmp
cmpl
sub
rolb
mov
enter
or
arpl
in
jp
dec
inc
gs
out
dec
repnz
xchg
jnp,pt
je
mov
fsubr
sti
xchg
sbb
push
xor
push
cmp
dec
cmp
test
xchg
sbb
divb
sub
stc
inc
lock
fidivl
and
cld
hlt
test
cld
jmp
adc
xchg
stc
jge
roll
lock
push
cli
test
mov
inc
mull
movsb
xor
pop
fnstenv
das
ss
xchg
sbb
fldt
or
mov
mov
popf
ds
jbe
inc
int3
call
and
and
sbb
imul
push
push
scas
add
fsubl
sub
adc
cli
adc
xchg
and
gs
mov
js
scas
and
or
push
ljmp
xchg
adc
push
jno
repz
xor
or
testb
xor
std
ja
push
iret
and
insb
leave
pop
mov
inc
and
and
dec
or
fisubrl
jbe
imul
fmull
mov
xor
cmp
scas
add
test
icebp
lds
pop
mov
decl
das
fstl
cmpsl
xchg
push
es
inc
mov
sub
push
or
push
into
mov
cmp
jl
push
stos
and
int3
mov
addr16
mov
fwait
repnz
dec
mov
mov
out
and
loopne
xchg
jge
dec
push
into
sub
jle
stc
fs
mov
out
jl
loope
pop
test
cmp
in
pop
out
into
test
mov
push
sbb
lret
dec
xchg
jle
ret
inc
rcll
nop
js
and
mov
push
inc
int
xor
add
sub
in
mov
test
push
in
sub
lods
scas
add
pop
clc
or
scas
jmp
pop
daa
filds
mov
and
push
add
leave
scas
std
jb
mov
bound
adc
pop
adc
push
jl
add
push
pop
aad
xchg
push
pop
stos
xchg
jbe
int
mov
dec
add
and
fcoms
cmp
ljmp
dec
sti
fs
mov
std
cmp
or
dec
jnp
push
test
dec
jge
inc
lret
std
jne
adc
inc
fiadds
inc
mov
xchg
sbb
loope
sub
dec
frstpm(287
push
lea
cmp
push
push
jne
insl
push
dec
xchg
mov
fstpt
mov
fimull
loope
addb
cwtl
fiadds
movd
ja
mov
pop
movsb
cmp
sub
js
sub
push
xor
mov
lret
sbb
stc
xchg
ret
cmp
js
stc
fwait
or
repnz
test
popa
sbb
leave
push
push
pushf
push
movsb
in
fs
pop
out
or
pop
lds
inc
push
andb
adc
pop
push
mov
addr16
sbb
push
aam
call
popa
repz
jbe
sbb
lods
mov
roll
les
bound
aam
jbe
iret
popf
pop
aam
imul
into
pushf
adc
pusha
movsb
mov
test
shlb
jecxz
fldcw
lds
sti
mov
push
add
ss
mov
int3
inc
mov
inc
iret
add
mov
inc
insb
roll
pop
push
dec
cmp
adc
xlat
xor
in
push
divb
icebp
sub
lret
cmp
dec
roll
cmp
repnz
roll
xchg
mov
and
or
jle
and
push
mov
or
add
leave
cld
mov
push
pop
xor
xchg
rclb
adc
and
ret
sub
cmc
ja
pop
pop
rorl
cmp
inc
mov
mov
ret
inc
pop
push
test
sti
lods
pop
lea
dec
jmp
sub
arpl
dec
insl
arpl
ficoms
add
rcrb
and
mov
pop
repz
sbb
or
lret
int
addl
and
popa
scas
xor
jge
das
push
cmc
mov
stos
jg
scas
mov
adc
pop
jge
movsl
and
rcll
xor
push
enter
hlt
imul
xor
xchg
cmpsb
jmp
dec
fsubp
mov
pop
out
dec
push
inc
imull
in
sub
fimull
xchg
aad
or
sbb
dec
pop
stos
gs
xlat
or
and
xchg
jecxz
push
cmp
lcall
outsb
cmpsl
mov
dec
mov
mov
insl
mov
push
mov
aad
inc
sbb
jns
inc
dec
jae
mov
fwait
loopne
pop
jmp
call
out
or
dec
leave
cmp
sahf
scas
jmp
jmp
pop
stos
adc
inc
xlat
mov
jp
mov
sbb
cmovge
pop
xor
xor
pusha
inc
lahf
and
push
loop
repz
push
outsl
lret
push
cmp
cmp
stos
popf
lcall
add
cmpsl
sub
int3
mov
addb
jno
push
aam
pop
pusha
jb
ja
or
xchg
pop
adc
sub
or
dec
mov
or
pushf
ss
mov
ficoms
xor
mov
out
lcall
jp
jl
dec
inc
das
popf
mov
je
lea
mov
mov
dec
jno
std
or
cmp
cltd
push
scas
mov
jne
idivl
dec
push
les
jae
mov
scas
daa
lods
in
rcrl
xchg
mov
repz
push
stc
sbbb
jl
cltd
cmp
test
imul
out
stos
mov
inc
adc
cltd
jo
mov
orb
xor
imulb
fistl
outsb
fistps
dec
ja
rcrl
mov
dec
and
shrb
fstpt
inc
or
leave
stc
stos
xor
push
jl
inc
shrl
or
outsb
es
mov
fs
lahf
aas
cmc
and
lock
lods
sbb
lret
leave
xchg
popf
push
and
je
add
push
jne
icebp
mov
jge
pop
stc
lcall
jmp
adc
movsb
loopne
pop
mov
push
mov
fcom
xor
lret
imull
jl
and
call
mov
div
dec
nop
or
imul
out
ja
stc
cmp
mov
cwtl
jnp
jb
cld
mov
cmp
outsb
aas
inc
rclb
mov
push
movsb
pop
xor
mov
lock
icebp
cltd
ljmp
jb
cld
cmp
pop
jns
inc
adc
add
imul
pop
imul
lods
popf
mov
or
sahf
je
jl
push
fidivrs
hlt
cmp
mov
dec
pop
movsb
jp
jne
cld
inc
int3
cmp
sbb
imul
xor
sub
jle
add
idivb
int3
out
xor
mov
push
push
jbe
add
jmp
daa
test
pop
pop
push
inc
add
jbe
sbb
cmp
or
xlat
mov
fwait
or
jns
out
adc
dec
lock
out
mov
and
arpl
into
stos
insb
loop
xlat
stos
or
out
add
sub
pusha
adc
mov
shl
push
daa
cmp
dec
orb
lds
cli
int
adc
inc
xchg
loop
bound
sar
xchg
movsb
fwait
testb
in
or
call
cmp
mov
aad
lret
cmp
mov
int
data16
cmp
call
xor
cmp
sub
daa
ja
cwtl
iret
repz
push
aam
ja
aad
nop
and
pop
cmp
adc
mov
and
arpl
xchg
adc
mov
popf
pop
cmp
jb
jnp
mov
mov
pusha
mov
loop
int3
push
out
sub
ret
outsb
jnp
imul
or
jbe
sub
xchg
jo
jb
jp
lock
pop
scas
jnp
negb
cmpsl
subb
add
insl
xor
movsl
movsl
ja
dec
push
sbb
mov
movsb
and
xor
pop
cmp
je
pusha
cmp
sub
imul
mov
xor
shll
int
mov
popf
lods
adc
jns
sbb
cmc
mov
sbb
jecxz
mov
adc
push
sub
imul
hlt
jg
aas
xor
jle
leave
adcb
cmc
lock
cmpsl
push
or
cmpb
adc
mov
sahf
fiadds
or
xor
sahf
push
pop
dec
sub
cmp
lret
ret
jne
mov
xchg
adc
cld
lds
cmpsl
fsub
ja,pt
jl
mov
mov
stos
sbb
daa
pop
fistps
imul
shrl
lods
fisubrl
shll
movsl
jl
bound
ljmp
outsb
mov
leave
ja
mov
pushf
push
cltd
push
or
shl
cld
mov
xchg
mov
mov
stc
mov
cmp
stos
out
mov
mov
push
pop
jecxz
cmp
cmp
xor
adcb
adc
pop
mov
scas
mov
inc
sarb
mov
pop
mov
enter
sub
ret
test
adc
xor
pop
loop
fcmovu
sub
mov
shlb
fcomi
mov
jbe
push
xor
jne
negb
adc
pop
dec
jns
out
and
jb
mov
sub
into
xchg
insb
es
clc
jb
inc
or
pop
lret
loope
stos
jp
pop
clc
dec
push
clc
in
adc
mov
dec
jge
inc
pop
ljmp
jecxz
push
orl
insl
pushf
cmp
push
sub
sbb
ja
popf
and
pushf
mov
dec
inc
lcall
mov
mov
orl
mov
psadbw
test
lcall
push
pop
pop
dec
aas
rclb
and
add
inc
ret
ss
in
ss
cmp
mov
out
and
popf
aad
adc
or
add
loop
in
xor
adc
sbb
sarb
dec
add
xchg
scas
pop
jbe
mov
sti
mov
jae
fcomps
movsl
cwtl
inc
cld
out
push
or
mov
daa
pop
loopne
mov
cmp
es
xchg
jp
mov
sub
les
aad
inc
mov
rcrl
push
pop
sub
sti
inc
imul
shlb
fstpt
ret
loopne
sbb
popf
dec
xor
nop
jl
mov
outsb
adc
popf
cmp
push
xchg
sti
int3
hlt
mov
and
add
les
orl
inc
jbe
xchg
fistl
insb
lahf
xchg
jmp
pop
test
jle
icebp
rolb
mov
outsb
pop
imul
add
lea
sahf
ret
adc
gs
push
mov
leave
into
jle
and
sbb
es
pop
imul
fstps
mov
daa
lds
and
nop
cld
pop
std
inc
out
jmp
ror
adc
jae
mov
mov
sbb
mov
sub
adc
aam
scas
or
mov
and
or
stos
jecxz
cmp
push
stos
int3
mov
pop
mov
mov
dec
addr16
add
test
mov
cld
fcmovne
pop
push
aas
stc
xchg
xor
in
mov
out
dec
or
xchg
sub
test
leave
ret
adc
aad
jns
adc
add
jns
sub
test
shr
mov
mov
add
xchg
cmp
popa
add
in
out
int
xchg
loop
push
pop
mov
add
leave
jnp
ret
lock
fmuls
xchg
repz
cmp
jp
lahf
and
fcoml
inc
xor
mov
int
lcall
clc
push
out
and
add
mov
in
je
push
cmp
arpl
cld
jl
mov
jmp
imul
sbb
ljmp
testb
mov
push
mov
inc
and
hlt
xor
out
shlb
movlps
push
xchg
or
cwtl
mov
sahf
ret
adc
jle
xchg
xchg
movl
pop
add
sbb
test
mov
cmp
adc
mov
cmp
imul
adc
aaa
cs
jb
int3
sbb
bnd
jbe
call
popf
sub
pop
js
xchg
fucomip
inc
lahf
adc
ret
xlat
outsl
push
xchg
movsl
sub
out
mov
out
lret
cmc
int3
cmpsl
or
mov
out
fldenv
fistps
lods
push
push
sahf
cmp
shl
xchg
loop
pop
pop
inc
or
repnz
gs
lods
out
jne
lock
cmp
enter
xchg
je
jno
rcrl
ret
add
add
cmp
adc
ds
stos
dec
iret
xor
jle
out
mov
outsb
jge
fidivrs
jg
popf
push
cmpsl
xor
adc
sbb
dec
dec
repnz
scas
jnp
mov
jns
fcmovne
pop
jne
sbb
inc
sub
inc
sbb
in
iret
std
sub
jge
push
inc
test
or
pop
jmp
and
cwtl
fldenv
adc
inc
out
mov
or
jbe
popa
mov
int
mov
test
jp
mov
call
xchg
fmul
sbb
lcall
cs
xor
pop
outsl
mov
xlat
push
and
loope
mov
cmpsb
mov
xor
sub
bnd
push
inc
stc
inc
mov
std
mov
insl
dec
ss
add
dec
mov
sbb
push
inc
xchg
fsubrl
mov
inc
fsubr
inc
and
add
push
jno
cld
das
data16
add
mov
jp
push
sbb
mov
or
push
aam
mov
repz
leave
mov
push
xor
add
mov
sbbb
js
pop
xchg
cwtl
jle
adc
out
push
jnp
fnstsw
cld
fstp
or
mulb
aaa
push
jge
js
fwait
imul
repnz
aam
mov
xor
fdivl
mov
fdivs
cmp
push
mov
sbb
xchg
dec
jno
push
cmp
pop
add
arpl
adc
idiv
flds
jne
jno
mov
imul
pop
out
add
js
aad
imul
dec
add
push
addr16
dec
fisubs
or
mov
fucomp
xor
mov
push
add
xor
xchg
pop
mov
xchg
jg
es
xchg
pushl
sti
xchg
or
stc
ret
out
jnp
inc
sbb
mov
lret
daa
or
outsl
mov
xor
js
mov
mov
ficompl
inc
push
adc
ss
adc
rorl
bound
mov
xchg
into
fwait
shr
sbb
repz
inc
arpl
lds
scas
cmc
mov
rorb
je
sbb
xchg
mov
jne
shlb
jmp
sti
pop
insl
push
cmp
aas
loopne
mov
sahf
outsb
pop
pop
je
int
popf
cmp
pop
fcompl
push
xlat
mov
andb
pop
scas
pop
xchg
pop
push
cmp
fistl
je
in
mov
cwtl
in
orps
push
shl
sub
loop
fwait
dec
sti
mov
add
dec
ret
jg
add
in
sub
xor
and
aam
sarl
pop
inc
or
int3
mov
movsb
mov
pop
dec
sar
pop
mov
xor
test
push
imul
popa
mov
mov
cmp
sbbl
inc
shlb
dec
fstpt
push
aaa
dec
mov
cmpsl
outsl
push
lret
sahf
and
pop
and
scas
pushl
inc
pop
lret
pop
jl
dec
fbld
lcall
pop
popf
in
lret
pop
adc
and
jns
sbb
out
ror
ret
loope
orw
push
cli
imul
mov
fucom
adc
loope
rcrb
stc
iret
cld
or
jmp
mov
cwtl
or
ret
dec
add
xor
jae
fwait
push
lods
loope
mov
jb
in
mov
lods
push
mov
pop
push
inc
addr16
rorl
cmpb
fistpl
mulb
mov
arpl
push
ret
mov
adc
add
int3
mov
shll
push
test
sti
insb
and
xchg
xchg
push
push
psraw
es
lods
jo
aad
push
ror
lds
jb
fs
movsb
addr16
push
sub
cmp
es
sub
mov
cmpsl
mov
mov
mov
scas
dec
mov
hlt
mov
jmp
xchg
lds
sub
int
add
gs
and
cmpb
mov
mov
cmp
hlt
scas
xchg
and
jae
push
sub
xorl
sbb
mov
outsl
inc
add
sub
fisubl
popl
mov
shrb
mov
cmp
call
sbb
mov
or
push
push
mov
stos
xchg
bound
sti
cmp
and
aam
imul
mov
ljmp
dec
pop
dec
mov
cs
sub
add
clc
shr
pusha
xchg
movsl
jecxz
dec
push
fisubl
xor
or
stos
movnti
xchg
mov
and
dec
pop
xchg
add
xchg
scas
add
call
pop
cmp
nop
push
adcb
adc
sbb
movsl
mov
test
xor
sbb
cmp
sub
or
insl
jmp
inc
inc
and
jae
mov
mov
fsubs
jl
sbb
inc
loop
or
add
and
cmpsb
lods
mov
call
out
mov
imul
fistps
lds
subb
jae
mov
adc
int
or
inc
inc
out
xchg
sti
arpl
xor
out
sahf
jbe
addr16
lret
xor
cmp
nop
mov
dec
sbb
sbb
fcmovnu
mov
or
ljmp
sbb
stc
ffree
pop
adc
movsl
insl
and
jb
pop
inc
sbb
or
out
jmp
lock
aad
ret
popf
pusha
rorb
pop
cmp
add
in
mov
adc
call
pop
xor
lahf
fiaddl
cmp
lret
xor
inc
or
mov
adcb
add
dec
cmp
out
out
or
scas
xchg
sub
adc
sar
and
mov
push
and
shr
cwtl
fstps
ret
loopne
pcmpgtw
fisubrl
in
dec
ss
and
add
shrl
imul
jmp
sub
out
mov
sbb
sub
or
lea
cmp
jp
mov
aam
ret
sub
add
jge
cmc
push
and
ret
aas
jl
inc
out
in
popa
in
mov
dec
inc
cmpsl
les
std
repz
mov
test
xor
das
push
cmpl
jl
add
mov
call
pop
js
imul
cmp
mov
jno
pop
ljmp
adc
mov
hlt
lret
sub
pop
out
outsb
ljmp
sbb
pop
push
insl
movsl
movsl
sub
push
xchg
jae
xor
stos
cwtl
add
addb
pop
mov
pusha
adc
sub
pop
aam
dec
push
lea
rcrl
push
js
test
xorb
add
ror
xchg
popl
ja
or
insl
lcall
sub
imul
clc
dec
adc
aaa
bound
js
insb
loop
jo
sahf
outsb
mov
out
or
and
leave
sarb
mov
add
test
mov
adc
rsqrtps
xchg
mov
fsubl
leave
sbb
cli
mov
ret
cmp
or
adc
ljmp
xchg
addl
popl
cs
mov
inc
pop
mov
jle
mov
cwtl
pop
and
fwait
sbb
mov
aad
xchg
int3
push
loope
sbbl
mov
fdivs
push
imul
mov
jmp
dec
data16
pop
jae
xchg
fnsave
loope
popf
insl
add
sbb
cwtl
lea
das
jmp
fstpl
xchg
dec
xor
insb
mov
pop
test
in
dec
xchg
push
inc
mov
xchg
aad
scas
and
cmp
push
ds
sbb
push
unpckhps
xchg
movsb
fcoms
popa
and
pusha
push
sub
sbb
test
pushf
xor
add
rcrl
sbb
mov
bound
outsl
mov
pushf
ret
std
fs
sbb
lea
enter
das
fiadds
mov
pop
push
pop
pop
sbb
jp
enter
sbb
insb
das
dec
sbb
jecxz
push
cwtl
mov
pop
sbb
or
lcall
nop
scas
test
fdivrl
sub
xchg
push
addr16
or
jnp
push
ss
mov
or
cmp
mov
test
adc
jmp
dec
push
shrb
je
sbb
test
scas
mov
fnsave
inc
pop
ret
dec
lret
or
mov
out
jb
dec
mov
jbe
cmp
xor
fidivs
int
imul
mov
mov
cmp
push
push
bound
jbe
insb
add
inc
and
xchg
sbb
repnz
and
hlt
xchg
add
jo
inc
cmpsl
mov
xor
xchg
cmp
or
xchg
push
dec
repz
dec
aam
inc
cld
fcmove
ret
add
insb
roll
push
ret
mov
inc
scas
push
loop
jge
add
inc
dec
cmp
cs
inc
aam
inc
fstps
sbb
inc
mov
in
push
jmp
push
gs
pop
xchg
scas
loope
jns
sahf
sub
mov
mov
inc
sub
pop
sub
push
mov
ljmp
inc
sub
fs
sbb
mov
lcall
inc
sbb
adcl
arpl
shll
shl
cmpsl
jbe,pn
fnsetpm(287
add
xlat
das
pop
push
cmp
in
out
sbb
movsb
jae
xchg
into
aas
mov
sub
jbe
sti
adc
push
popa
mov
dec
mov
repz
push
push
arpl
aad
lret
inc
jl
push
daa
leave
sub
mov
pop
mov
mov
mov
mov
xor
cmpsb
mov
push
cmp
push
fisttpll
xor
test
sbb
pop
sub
iret
sub
jne
js
pop
sbb
push
icebp
inc
push
push
pop
push
sub
mov
pusha
ljmp
jp
sub
mov
cli
pop
adcl
jecxz
imul
pop
aad
imul
shlb
test
movsb
and
inc
mov
negb
add
cltd
int3
mov
mov
mov
xlat
dec
mov
and
loopne
pop
fldcw
add
xor
jmp
xor
mov
dec
loope
jmp
in
pmaddwd
sar
pop
or
ds
inc
dec
pop
mov
or
mov
out
int
add
xor
int3
dec
call
scas
mov
add
sbb
sarb
pop
stos
fldt
popa
fmull
jg
push
aad
sub
cli
lds
pop
xor
push
push
mov
enter
jnp
lock
sbb
gs
fdivrl
outsl
hlt
fdivrl
cmp
jge
and
fcompl
cmc
loopne
dec
cs
rclb
lahf
pop
xor
lret
xchg
pop
and
popf
roll
dec
or
pusha
fimull
mov
or
mov
in
insb
ja
lds
jns
xor
jp
push
sbb
jo
js
roll
dec
andb
mov
xlat
pop
mov
outsb
sub
adc
mov
push
testl
push
cmpsl
nop
cmpb
int
xor
jl
std
mov
pop
ftst
dec
inc
pop
inc
xor
sub
dec
sub
add
and
push
fistl
cmp
push
dec
xchg
push
clc
int3
aad
jbe
push
jmp
dec
test
pusha
sbb
sub
jge
sarl
cmp
dec
ljmp
add
inc
mov
jo
xor
jl
jecxz
sub
xor
and
test
xor
stos
push
lret
aad
dec
jl
test
mov
scas
mov
xchg
cli
adc
inc
add
add
popf
mov
or
repnz
jg
and
or
mov
xchg
inc
inc
dec
icebp
xor
jb
sbb
lcall
push
lods
lock
jbe
bound
push
sbb
mov
adc
dec
iret
push
adc
mov
outsl
nop
popf
fsubr
mov
inc
mov
dec
sub
or
cmp
in
mov
jmp
mov
cmp
decl
pusha
dec
xor
add
out
stos
or
or
mov
xchg
push
ret
loop
push
cwtl
adc
repz
dec
sub
rcrb
push
lods
push
push
iret
jmp
das
xchg
stos
push
aam
fnop
xchg
lret
addr16
fidivrs
lahf
into
inc
jmp
lods
jmp
testl
xor
mov
sar
cli
mov
out
sbb
jl
cs
out
sti
insb
or
cmp
lea
mov
adc
sub
nop
aaa
push
aad
add
sbb
xor
stc
jecxz
mov
mov
mov
jg
cmc
movb
int
push
mov
adc
sti
push
inc
mov
stos
insb
lcall
les
mov
mov
sub
mov
mov
mov
test
fwait
and
iret
mov
mov
stos
xchg
sub
xor
lahf
test
jb
xlat
ss
adc
test
jp
es
xchg
lahf
test
test
mov
insl
xlat
xor
jno
enter
lock
or
call
rcrl
mov
loop
pop
stos
call
rcll
out
mov
jnp
sbb
mov
adc
xor
dec
or
pop
and
outsl
popf
das
shlb
mov
sub
push
insb
jl
ficoml
das
xchg
add
rcl
divl
out
mov
add
shrl
sbb
mov
lods
adc
xchg
push
cmpsl
out
dec
mov
adc
jbe
data16
sbb
outsb
or
pusha
std
pop
int
iret
push
pop
add
cmp
or
pop
or
sub
push
and
out
mov
adcb
mov
push
inc
lds
mov
mov
sub
decb
xchg
adc
sub
pop
xchg
enter
movsl
push
xor
sbb
loop
sub
xchg
movsl
adc
rclb
jno
fstl
inc
outsl
aam
adc
or
mov
fists
cmp
jno
add
out
cmp
adc
sbb
mov
in
cmpsb
jo
jmp
inc
lahf
mov
rclb
inc
mov
inc
cwtl
jge
add
mov
pop
loop
dec
mov
jp
addr16
cmc
jmp
rcr
add
ljmp
nop
je
sbb
jb
out
out
and
push
inc
cwtl
scas
loope
xor
add
loopne
ds
and
pop
and
push
movsb
add
fwait
push
sbb
dec
test
sbb
mov
mov
ror
mov
into
in
pop
aam
mov
adc
mov
inc
sbb
mov
xlat
stos
and
push
xchg
arpl
std
dec
push
xchg
jmp
mov
cmc
rclb
jle
sub
and
movsl
sbb
cmp
add
push
mov
mov
sub
shll
clc
and
inc
jle
sub
push
rorl
in
lahf
and
pushf
sbb
or
fisubrl
mov
jmp
dec
fs
data16
inc
mov
and
xor
mov
gs
js
jp
rcrb
mov
add
scas
fs
or
mov
pop
jne
sub
jge
and
or
pop
int3
addl
clc
lcall
xchg
shr
mov
loope
test
cmp
mov
enter
insl
cmp
lods
and
xor
mov
popf
loopne
inc
dec
and
add
stos
aad
dec
adc
cs
subb
add
jge
enter
push
xor
inc
mov
jge,pt
dec
or
jne
push
cltd
cmp
data16
mov
xchg
imull
adc
pop
in
cmp
mov
mov
cmp
icebp
popf
fisttps
js
test
dec
jne
cmp
pop
les
jl
inc
sbb
out
stos
inc
ja
test
xchg
push
lock
std
mov
push
cmp
lcall
xchg
fisttpll
ja
and
cmp
jle
ja
out
arpl
mov
pop
dec
cwtl
loope
push
jl
ficoms
cmp
sbb
sub
inc
popf
xor
insl
lds
pop
repz
in
dec
mov
xchg
aam
rol
std
insb
aaa
out
cmp
fmull
es
bound
cltd
nop
ljmp
mov
mov
push
jge
push
dec
insb
sbb
enter
and
mov
sahf
xchg
inc
fiaddl
repnz
test
rcr
ja
cmp
mov
mov
mov
pop
push
test
daa
adc
rcrl
aas
xor
bound
ret
cmp
push
add
loopne
and
push
pusha
inc
cmpsb
dec
cmpsl
std
inc
scas
loope
nop
dec
cmpsb
loopne
sti
mov
inc
decl
movsb
adc
push
loope
mov
cmp
lcall
movb
adc
dec
mov
ret
or
nop
popl
mov
incb
fistl
call
mulb
jmp
lds
cmpsl
mov
sub
sbb
push
fstl
push
and
rcll
dec
lcall
ds
pop
fidivrs
xchg
mov
sub
es
sbb
negb
les
or
push
xchg
cs
adc
cmp
test
loope
pop
out
scas
mov
cli
lock
jno
sbb
mov
std
cmp
sbb
push
adc
fdivs
rclb
or
mov
mov
lds
in
and
push
xchg
sbb
popa
and
push
push
sbbb
test
push
pop
jmp
hlt
and
jge
jecxz
mov
gs
push
mov
rcrl
adc
and
mov
dec
aad
dec
hlt
add
shrb
mov
adc
cmp
mov
int3
test
sti
jb
loop
push
jb
push
dec
sbb
mull
cmpsl
push
fsubp
dec
push
push
movsl
sub
loope
stc
fst
push
adc
pop
call
cmp
cmp
sub
fidivrl
dec
aaa
push
ret
jnp
call
shlb
movsl
and
test
sbb
out
subl
xor
jns
jne
and
dec
pop
outsl
addb
daa
xlat
xchg
aaa
out
xchg
jne
lret
xchg
popf
jmp
push
cld
lret
jecxz
shrb
lock
sub
lcall
xchg
cmp
fistl
out
lret
cmpsb
xchg
pop
lahf
adc
inc
cmpsl
mov
push
sbb
lea
sti
cltd
or
jl
jge
shrl
xchg
dec
das
mov
sbb
imul
add
xchg
or
scas
ret
orb
inc
insb
aaa
pop
ret
jb
aaa
sub
dec
mov
sti
in
pop
fisttps
enter
inc
sarb
rcll
mov
mov
sbbb
std
imul
jae
push
int3
mov
xchg
lea
jbe
jns
mov
sub
aad
jnp
jnp
adc
push
adc
cltd
push
inc
leave
pop
hlt
xor
adc
inc
dec
push
or
mov
cmp
cli
lahf
xchg
adc
adc
mov
inc
adc
pop
leave
gs
sahf
jmp
xor
fs
repnz
mov
cli
pushf
jg
mov
cld
and
sbb
lock
push
jge
call
and
testb
mov
aaa
sub
stos
popf
inc
jnp
shll
pop
cmp
pop
or
rcr
subb
push
add
subb
lds
das
sbb
mov
fnsave
lret
fisttpl
imul
dec
push
pop
sbb
es
out
inc
jae
inc
adc
ret
mov
cli
xor
out
popa
mov
cmp
and
jle
test
inc
push
cltd
daa
add
out
adc
push
loopne
mov
inc
fdivl
pop
adc
inc
pop
or
pop
imul
inc
jbe
xchg
stc
cmp
pop
leave
out
out
mov
adc
sti
xor
out
loopne
test
mov
add
inc
mov
jmp
or
popa
add
jmp
push
mov
pop
cmpsl
cmpsl
iret
testl
pop
test
insb
xlat
int
nop
std
je
ja
fld
jmp
movsb
cmp
jb
cmpsb
scas
inc
jno
icebp
mov
and
test
cmp
mov
and
jne
js
mul
mov
js
dec
cli
pusha
mov
xchg
in
and
ficompl
insl
data16
aad
icebp
in
lock
imul
dec
iret
xchg
push
or
pop
jbe
or
mov
sbb
aam
inc
dec
xor
in
div
enter
pop
sbb
addr16
inc
insl
data16
dec
sbb
or
xchg
pop
push
popf
push
test
lret
out
inc
aad
je
in
jo
movsl
outsl
mov
mov
js
inc
mov
lods
out
aaa
xchg
dec
dec
leave
test
sbb
out
dec
pusha
mov
mov
leave
dec
and
enter
jne
inc
lahf
mov
lods
pop
xchg
fsts
sbb
cmp
mov
inc
out
movsl
aam
pop
cmpsl
lahf
push
sub
addr16
xchg
adc
or
in
or
lds
ret
push
pop
rorl
mov
inc
pop
lcall
lahf
add
sub
xchg
adc
pop
sbb
inc
jp
pop
cli
je
lret
cld
jmp
pop
cmp
push
and
mov
cs
shr
pop
push
daa
rcl
sub
imul
push
dec
inc
push
ja
subb
ret
pop
lret
mov
shlb
mov
in
in
mov
inc
inc
add
lret
jmp
mov
in
mov
scas
sub
mov
mov
mov
je
pusha
lods
sahf
sub
pushf
out
bound
mov
adc
jbe
fcomps
ret
push
repz
enter
sub
int
and
in
es
mov
mov
faddp
mov
shrb
iret
flds
pop
lahf
cltd
stos
cmp
mov
fs
pop
pop
icebp
ljmp
scas
or
mov
jno
mov
xor
bound
jnp
mov
sahf
cld
and
add
adc
and
sbbb
push
iret
jge
push
push
pop
data16
bound
faddp
dec
std
rcrb
loopne
enter
mov
mov
lret
pop
inc
jb
push
cmp
mov
push
aam
fcomps
push
imul
pusha
ficomps
xor
test
or
movsb
mov
rol
aas
lahf
lds
pop
or
pop
cwtl
int3
add
cmp
sarb
and
mov
sub
cltd
call
addl
mov
xor
orb
mov
jp
cltd
xor
xchg
mov
jle
push
jecxz
jo
aas
js
pop
out
imul
cli
and
cld
cmp
xor
arpl
repz
dec
arpl
ds
fadd
addr16
jae
sbb
movsb
mov
call
leave
shrb
fildl
and
push
cmp
mov
jae
dec
dec
addr16
sbb
in
and
adc
sub
into
stc
mov
xchg
mov
mov
je
insl
lea
xchg
sub
dec
test
jae
aas
push
or
xchg
fnsave
mov
push
jmp
lcall
ja
mov
gs
fimull
inc
notb
dec
xorb
popf
outsb
lea
add
int
and
or
pop
aam
and
mov
mov
xor
add
sub
cmp
cwtl
pusha
dec
push
stos
fsubs
or
int3
xchg
sbb
mov
xchg
adc
jg
pop
fnsave
pop
punpckldq
cld
dec
xor
and
add
push
mov
test
mov
mov
jmp
xchg
xor
loopne
dec
jno
mov
jb
insb
and
dec
std
xor
icebp
test
xor
or
cmp
outsl
cmp
sub
xlat
lods
pusha
fwait
lahf
xor
dec
jg
mov
dec
lret
dec
fbld
mov
mov
pop
jg
outsb
push
scas
xor
gs
push
mov
pop
ljmp
inc
mov
dec
inc
adc
push
cmpsb
cmp
and
cli
pop
aam
push
out
jns
fdivrl
pop
test
sti
out
mov
roll
or
mov
orb
push
lods
xchg
js
rorb
and
push
add
cmp
dec
sub
decl
sbb
cmc
add
mov
jmp
pop
jb
xchg
inc
mov
add
es
add
xor
cwtl
jbe
ficompl
push
xlat
jge
sbb
dec
shrl
outsb
repz
mov
movb
test
icebp
adcb
mov
add
sbb
nop
push
jne
mov
inc
cmp
inc
je
xor
pop
iret
mov
sti
mov
sub
push
cmp
testl
rcrb
repz
lret
sbb
cmp
fsts
test
sbb
inc
push
jmp
push
jae
mov
sti
mov
adc
mov
rorb
popa
sahf
xor
negl
adc
adc
push
loop
popf
je
jns
xor
test
adc
inc
inc
stos
xor
dec
pop
sbb
fisubrs
add
adc
mov
out
jecxz
xor
pop
loope
outsl
jmp
sub
cmp
imul
outsb
sub
xrelease
repz
andl
dec
leave
mov
test
stos
call
dec
aaa
jl
jno
cld
lds
xlat
cltd
push
xchg
in
and
mov
sbb
lock
add
push
stc
leave
mov
ljmp
xor
xchg
shll
outsl
outsl
aam
sahf
andb
faddl
sarb
pop
cmc
jmp
mov
inc
inc
jns
add
pop
shll
lcall
sub
sbb
mov
into
imul
xorl
mov
aaa
mov
sbb
les
ss
cmp
xchg
mov
jp
fs
or
jo
jecxz
push
adcb
out
arpl
jp
adc
jl
or
jg
andb
outsl
sbb
add
mov
mov
xchg
les
das
mov
fimull
mov
inc
ljmp
jecxz
inc
lock
xchg
insl
add
data16
addr16
pop
out
pusha
daa
cmp
jnp
iret
cmp
cmp
cmp
xlat
aad
dec
aad
bound
sahf
xorb
ret
jnp
add
scas
ret
fs
and
stc
inc
push
jnp
mov
mov
mov
ret
dec
fildl
out
adc
cmpsb
fs
outsl
ja
push
int3
and
cltd
aam
push
add
pushf
cwtl
dec
fidivrl
ja
sbb
sub
ss
or
int
dec
imul
mov
xchg
sub
xchg
testl
xor
loopne
add
xor
or
repz
aas
jle
repz
hlt
sbb
popf
push
cld
out
das
fmull
pop
shl
imul
inc
xor
fcomps
rcl
jo
or
ret
repnz
pop
and
sbb
outsl
packsswb
gs
addl
ret
ret
xor
or
popf
fiaddl
cltd
mov
mov
lock
sbb
test
arpl
lea
adc
je
xchg
aam
and
add
add
fs
lea
shlb
call
push
out
dec
pop
in
icebp
and
das
push
push
jo
xchg
lahf
and
cwtl
test
std
jo
jp
fdivrl
test
adc
pop
dec
movsl
or
dec
cs
insb
jae
mov
dec
in
cwtl
push
int3
mov
jecxz
add
pop
stos
or
push
aam
xchg
sub
mov
lahf
sbb
pop
push
pop
loop
cmp
popf
mov
mov
fiaddl
xchg
jns
mov
sbb
push
mov
sti
call
es
pusha
dec
push
lock
loope,pn
jo
call
out
add
dec
xchg
ja
mov
orb
add
cmp
pop
lret
pop
jecxz
pop
add
mov
das
sbb
out
dec
subl
mov
fildll
lea
ja
push
cmp
cmc
xlat
fs
inc
fs
arpl
icebp
test
popa
push
ljmp
and
xor
mov
xchg
scas
lock
jnp
cmp
mov
lret
cmpl
mov
mov
cmp
add
negl
pop
add
pop
or
pop
in
out
outsl
je
cmc
out
fistl
lods
inc
sbb
rcl
hlt
mov
jns
sub
mov
ss
sti
and
xchg
add
push
lods
iret
in
add
jmp
daa
and
leave
loopne
mov
ss
test
sub
fwait
rcrb
stos
clc
lock
cltd
mov
icebp
insb
push
imul
mov
aaa
ret
ret
into
mov
mov
cmp
and
push
or
and
xchg
outsb
popf
pop
sti
jns
jno
shr
scas
js
push
arpl
popa
cmp
cmp
push
sahf
js
sbb
xchg
adc
xor
sarb
outsl
sahf
and
pusha
icebp
fwait
xor
push
mov
fcmovne
lahf
sub
mov
jmp
sub
cld
xor
sub
lods
pusha
jl
mov
pop
fwait
lahf
daa
stos
pushf
mov
out
mov
inc
or
lea
and
roll
dec
gs
sbb
push
pop
pop
test
add
fs
add
fnstsw
outsb
add
push
add
je
push
add
arpl
std
inc
dec
sub
mov
mov
shlb
pop
lods
cmc
popf
pushw
mov
xchg
popa
xor
call
rcll
fcompl
hlt
arpl
pop
and
inc
sbb
sbb
bound
rorb
xor
push
fs
mov
int
aad
mov
test
insb
cmp
loope
notb
fisubl
xchg
pop
out
and
lock
sbb
sbb
sub
pop
mov
dec
das
inc
jg
das
loopne
inc
jo
movsb
outsb
cli
ljmp
test
sbb
cli
jp
sub
xlat
inc
adc
xchg
test
adcb
stc
adc
xchg
ret
es
mov
sgdtl
dec
jo
xlat
sarl
xchg
mov
mull
cmp
nop
repnz
cmpsb
ficoms
sub
bound
jbe
sub
dec
and
pop
filds
dec
arpl
xor
pop
subb
mov
adc
dec
pop
adc
mov
mov
inc
repnz
xor
add
das
fadd
jl
push
mov
mov
stos
repnz
out
in
pop
sbb
push
in
in
and
push
cmp
rcrb
pop
push
jecxz
sbb
aas
in
sbb
mov
cli
mov
es
cmpsl
rclb
pop
xchg
fdivs
fwait
pop
xchg
xchg
sub
aad
push
test
ret
vcmpps
push
lret
xchg
jns
jecxz
push
jge
clc
fiaddl
or
mov
cmp
outsb
mov
push
mov
adc
loope
push
fisttps
fistl
or
loop
call
mov
js
push
dec
push
enter
lcall
in
hlt
push
xchg
aad
push
mov
shlb
insl
fsubrp
push
pop
xor
cmp
shll
hlt
sub
add
cmp
lea
sbb
loope
popa
push
sahf
cmp
imul
scas
addr16
jl
aam
out
into
add
ss
dec
movsb
gs
clc
cmpb
out
movsl
xchg
jg
add
sbb
sbb
ljmp
movsb
add
cmpsl
jle
clc
or
xchg
mov
jecxz
mov
cmp
cmp
mull
int3
ret
xchg
push
mov
sbb
inc
dec
loopne
packsswb
test
cmp
xchg
js
mov
bound
push
ljmp
fwait
push
mov
ljmp
test
add
jno
call
mov
mov
sbb
xor
xor
jmp
dec
rcr
mov
testl
add
jp
nop
and
jno
insl
pop
aam
ret
dec
xchg
icebp
mov
sbb
or
or
cmpsb
mov
jecxz
out
lcall
sub
cs
mulb
add
xchg
lret
jmp
loopne
sub
rcrl
push
xor
jo
cmp
cmp
mov
and
rcrl
or
sub
pusha
rcr
or
cmp
or
push
fnstenv
jbe
sbb
pop
sbb
sbb
xor
xchg
ds
outsb
testl
mov
and
xorl
mov
pushf
cwtl
mov
sbb
jl
push
push
cmp
inc
rorb
clc
mov
adc
imul
cmp
std
cmpsb
push
lret
ret
mov
add
push
cs
into
cmp
test
mov
sub
and
push
cmpsl
dec
ret
xchg
mov
loop
cli
pop
je
push
sbb
mov
xor
push
xchg
fisttps
cwtl
rcr
rcll
add
dec
pop
push
push
dec
in
test
mov
add
push
hlt
ds
mov
into
inc
sub
outsl
lods
pop
nop
dec
mov
dec
sbb
ret
cmp
lock
xchg
xchg
in
mov
dec
dec
mov
mov
ret
repz
in
add
add
sahf
push
mov
popf
rclb
rcrb
in
jmp
adc
aam
or
movsb
pop
mov
outsl
push
test
addr16
fists
xor
mov
mov
shl
je
test
sbb
sbbl
shrl
sub
imul
jmp
push
xchg
out
bound
xorb
fnsave
mov
imul
adc
push
test
jecxz
xorb
mov
cmpsb
nop
pushf
dec
fdivrs
push
mov
xor
mov
cmp
ss
rol
jle
xor
sbb
jnp
mov
adc
incb
pusha
popa
mov
xor
push
test
sub
adc
pop
xor
adc
push
fisubrl
scas
scas
jo
outsb
xor
call
inc
outsb
loop
insl
xor
mov
or
pop
jnp
aad
add
adc
mov
int3
in
sub
sub
sbb
insl
cmpsl
jg
mov
push
sbb
cld
in
fwait
xchg
pop
add
sahf
lret
clc
lods
mov
mov
or
into
lock
adc
outsb
aaa
shlb
fwait
rorl
push
loopne
mov
pop
jno
mov
adc
pop
jle
cld
xlat
mov
mov
adc
ss
shr
push
insl
push
in
lods
cmp
movzwl
into
dec
ss
and
call
push
cld
mov
sarb
mov
xor
test
arpl
sub
addr16
sub
movsb
sub
mov
call
cmp
fstpt
data16
int
xor
jl
jp
je
je
outsb
loop
inc
mov
movsl
jae
or
cmpsb
and
cli
and
int
loope
or
jne
mov
dec
inc
xchg
jo
out
icebp
incb
sbb
and
adc
repnz
outsb
mov
jecxz
nop
cmc
inc
and
shll
push
test
in
xlat
push
shl
int
jae
rorb
outsb
in
and
xchg
std
ja
or
add
sti
test
mov
xor
cmp
rcll
fistpl
loopne
add
fwait
loopne
add
cmp
jg
sbb
in
inc
xor
sbb
mov
adc
fisubs
dec
pop
sti
mov
popf
push
lock
or
stos
insb
in
mov
arpl
fwait
xchg
jne
pop
arpl
shll
cli
push
or
loope
xor
addr16
aam
mov
imul
or
ss
pop
xor
add
lea
inc
test
push
in
cmp
ret
jmp
stos
and
and
pop
sub
pop
mov
and
add
hlt
sub
test
std
mul
sbb
sti
add
mov
icebp
insl
out
inc
ljmp
sbb
jne
push
call
xor
add
call
xor
pop
xchg
cmp
adc
enter
jo
dec
xchg
pop
stos
insb
jl
outsl
and
aam
out
and
cmpsb
aas
daa
loopne
sti
ss
lret
jmp
jg
mov
clc
stos
inc
jp
jmp
pop
aaa
call
int3
jo
or
and
pop
cmp
hlt
in
mov
jge
cmpl
mov
push
inc
or
ss
sbb
add
xor
mov
xchg
enter
push
subb
mov
cmc
mov
adc
push
mov
pop
push
pop
scas
dec
sbb
sub
mov
std
xchg
push
mov
xchg
cld
inc
sub
clc
daa
inc
pop
and
outsl
mov
lret
dec
or
jae
shrl
cmp
push
mov
and
push
mov
or
repz
mov
mov
sarl
int3
test
test
lea
dec
in
mov
insl
push
icebp
fdivl
movsl
push
cmp
mov
aam
lcall
mov
and
sbbl
and
pop
mov
or
enter
cmpsl
ja
lods
pop
rclb
sbb
push
pusha
int3
or
xor
in
les
xchg
pop
pop
insl
mov
mov
dec
or
js
mov
sub
stos
mov
ret
iret
ds
arpl
sbb
sbb
sti
mov
cltd
fs
lcall
loopne
gs
mov
add
cmp
rolb
inc
pop
pop
sub
sbb
mov
out
add
gs
inc
test
fwait
hlt
or
mov
mov
pop
pop
lcall
add
shr
mov
std
clc
inc
call
les
aaa
push
mov
ss
outsl
mov
jp
or
sub
cmpsb
outsb
xor
push
lds
pop
stos
test
ja
mov
jl
mov
pop
loop
push
jl
addr16
xor
jge
cmp
addr16
addr16
fidivrs
jnp
jmp
or
out
lods
pop
dec
movsb
es
or
push
pop
pop
mov
and
sub
adc
add
xor
rclb
jo
in
adc
push
xchg
cltd
js
add
sbb
sbb
imul
dec
mov
pop
mull
loopne
iret
sti
push
jo
inc
dec
push
or
mov
jge
inc
dec
inc
aas
add
mov
aas
sti
addr16
jo
or
sub
jae
mov
mov
icebp
push
fildll
outsb
jg
test
ds
cmp
jg
cmpsb
enter
pushf
push
in
cli
dec
pop
test
aaa
fistl
decl
cld
movsb
push
inc
lds
les
sub
std
mov
sbb
test
lods
int3
stos
inc
mov
add
xchg
dec
xor
mov
pusha
mov
es
push
aam
or
mov
subb
scas
in
pop
fsubrl
punpckhwd
rcrb
sti
out
lret
cmpl
cmpsb
dec
push
add
cwtl
xchg
pop
adc
mov
push
mov
rcr
adc
or
jmp
sahf
push
ret
and
push
push
add
and
ds
xor
ret
dec
test
mov
push
pusha
clc
sar
aas
dec
les
jns
or
jg
and
pop
shrl
mov
addr16
shl
std
pop
ficoms
cld
fsubr
jecxz
push
aad
lea
sbb
xor
addr16
lods
ljmp
xchg
xlat
jns
pop
in
lds
stc
xchg
or
sbb
popl
or
je
push
push
xor
inc
dec
outsb
stos
adc
repz
imul
add
adc
push
pop
dec
pop
out
mov
dec
rcll
mov
insb
adc
and
cmpsl
cld
dec
repz
jo
xor
and
test
sub
push
stos
aad
mov
outsb
pop
pop
mov
arpl
fs
mov
push
pop
sbb
mov
pop
mov
sbb
sti
cmp
pop
scas
cmp
insb
loop
movsl
mov
sbb
pop
andl
leave
outsl
cmp
xchg
or
hlt
xchg
call
cmp
icebp
dec
xchg
jnp
pushl
inc
push
add
cmp
or
outsl
mov
add
int
mov
or
cmp
stos
mov
push
test
lret
mov
push
fldcw
test
mov
repz
and
add
out
cmp
add
push
jecxz
test
loope
xchg
gs
sub
pop
je
mov
out
insl
sbb
ficoml
mov
movsl
mov
adc
pushf
loope
test
push
cli
jnp
add
pop
test
dec
es
pop
cmp
fldt
jnp
adc
jecxz
sbb
push
sub
icebp
jp
or
into
test
xchg
add
mov
cwtl
into
adc
lcall
mov
scas
pusha
in
mull
push
inc
or
push
aam
loope
xchg
adc
je
aad
stos
lret
or
scas
fcmovbe
jae
andb
cmp
into
sti
sbb
add
jns
xchg
in
dec
hlt
enter
sub
cmc
and
sbbb
cmpsl
in
loope
mov
ficompl
mov
pop
push
sti
es
fcmovb
mov
dec
or
lcall
hlt
xor
inc
xchg
mov
adc
jb
mov
enter
aaa
push
notl
cwtl
lret
or
push
rolb
jbe
inc
fwait
inc
or
outsl
dec
sub
out
sub
insb
je
test
or
add
mov
fdivrs
lods
inc
mov
push
cmc
jl
add
xchg
cli
and
jl
scas
cmc
dec
iret
jg
dec
or
ret
or
jns
sub
xor
jmp
or
in
push
iret
mov
inc
or
repnz
cli
or
jmp
nop
dec
aad
sub
mov
pop
test
mov
sti
jle
jno
sarb
inc
into
loopne
xor
inc
jp
cmp
cmpsl
enter
cwtl
bswap
sahf
jmp
xor
roll
dec
subb
ja
push
pop
loop
or
mov
and
mov
xor
fnstsw
into
insb
or
or
jne
inc
add
pop
dec
icebp
shl
fwait
sti
adc
dec
popl
mov
jno
insl
std
cs
out
mov
and
daa
lcall
mov
aas
xor
adc
leave
sub
mulb
lahf
xchg
add
mov
shl
jp
into
xor
dec
cmp
mov
scas
arpl
pushf
int
add
sub
cmpsb
push
imul
fcmovu
movsb
adc
mov
pop
jae
jnp
daa
mov
aad
out
pop
jbe
jne
push
mov
aaa
sbbl
pop
push
xchg
std
andl
lahf
adc
fstpl
xchg
dec
call
push
pop
push
test
jecxz
repnz
pop
pop
loop
and
cmp
es
fdivr
pop
cmp
lahf
fstl
inc
push
jmp
sbb
scas
cmovo
and
rcl
ffreep
sarb
inc
xor
js
aas
enter
subb
sub
in
and
imul
ja
cmp
push
sbb
push
lahf
jb
jb
loope
cmp
lret
xor
xchg
push
mov
pop
mov
das
cmp
add
insb
mov
mov
fucomi
das
jl
sar
mov
mov
adcb
xor
cmc
pop
jo
add
inc
cmp
xchg
inc
mov
jne
rolb
stc
mov
pop
sub
push
push
adc
xor
dec
decl
das
dec
mov
mov
jg
fldz
sahf
mov
xchg
push
lret
cmp
pop
push
mov
xchg
jns
hlt
dec
xchg
hlt
int
push
jmp
les
xchg
fmull
not
sbb
and
ss
cmpsb
sbb
cmp
dec
push
leave
inc
xchg
out
push
lods
enter
jns
jo
or
and
test
push
add
xchg
leave
imul
jbe
mov
into
lock
or
cmp
ds
sbb
mov
sbb
jg
adc
inc
dec
add
arpl
mov
adc
jbe
xor
cli
cwtl
push
push
ret
jle
dec
std
xchg
fistpl
hlt
xor
add
pop
rclb
xchg
pop
inc
mov
mov
dec
outsl
sbb
add
lret
xchg
pop
lods
ja
enter
das
cmc
enter
push
mov
lds
xchg
test
jmp
loop
jae
inc
sbb
imul
hlt
lock
mov
in
push
repz
lea
or
into
cwtl
or
push
imul
popf
aas
and
or
hlt
mov
or
sub
adc
pop
cmp
mov
push
not
sbb
push
xchg
cmpsb
out
int
mov
insl
fadds
es
fidivrl
cltd
outsl
aaa
cmp
je
pop
or
pop
stos
jnp
cltd
sub
pop
shrl
ud2
push
push
sub
mov
mov
lea
sbb
and
ret
push
shrl
push
clc
out
inc
pop
pushf
and
mov
mov
xchg
es
fdivrl
xchg
push
add
mov
push
test
pop
pop
mov
inc
jle
jecxz
push
inc
pop
mov
cmp
and
or
insb
adc
stc
inc
xor
xor
mov
fs
sub
dec
add
adc
push
test
dec
inc
testl
xlat
stos
jl
mov
and
pop
and
xor
je
pop
mov
icebp
popf
aad
lret
arpl
adc
jb
pop
jmp
push
cld
adc
roll
sub
xor
jl
xchg
stos
or
sbb
dec
je
cmpsb
gs
insl
out
cmp
mov
fucomp
lret
ja
sub
cmp
xchg
add
add
pop
sar
cmp
lea
sub
insb
in
mov
mov
gs
xchg
xor
repnz
jg
cmpsb
mov
add
push
push
call
je
inc
aaa
ret
mov
arpl
inc
fildll
sbb
or
sub
jns
push
dec
loope
dec
cmp
sbb
push
fcompl
inc
mov
or
mov
pop
jl
dec
gs
in
in
fbstp
mov
arpl
mov
sub
aad
jg
sti
and
pop
test
push
push
insl
dec
mov
idiv
es
fs
or
fisubrl
jg
jmp
ja
and
pop
dec
push
sahf
call
stos
ja
cmp
push
lds
mov
mov
ret
xchg
insb
enter
xorps
lret
adc
jae
aam
adcb
ss
insl
insb
ljmp
adc
scas
cwtl
dec
mov
xor
popa
out
xbegin
and
sub
lcall
rol
jecxz
cmpsl
sub
sbb
mov
call
dec
rol
leave
dec
mov
or
mov
outsb
loopne
ret
call
mov
int3
add
cltd
cmp
add
lods
gs
ss
bound
jne
sub
or
mov
pop
out
pop
test
or
fcom
mov
outsl
mov
mov
and
in
fs
dec
mov
clc
imul
stc
pop
pop
or
insb
pop
push
pop
rolb
jae
jle
test
addl
gs
ss
push
push
push
mov
fs
push
mov
lods
repnz
out
jbe
outsb
enterw
daa
sbb
mov
aas
insb
ret
int
cmp
xlat
mov
lahf
adc
lahf
ss
faddl
add
sub
call
ja
aam
les
outsb
xchg
mov
les
push
cltd
xchg
lret
insl
lret
push
je
and
out
fcomp
jge
xchg
jge
daa
sbb
movsb
out
push
in
repz
sbb
out
int
dec
addr16
test
xchg
je
xor
and
ret
mov
sub
mov
jno
test
dec
cli
movsb
bswap
je
pop
fnstcw
aas
push
pop
xchg
xchg
lods
cmpsb
jl
and
dec
adc
pop
pop
scas
in
inc
xabort
mov
mul
mov
mov
paddsb
pushf
pusha
cmp
stos
add
in
xor
sbb
jmp
or
mov
dec
int
jl
imul
in
add
push
dec
ljmp
jge
js
dec
push
test
mov
push
mov
inc
xor
mov
cmp
mov
dec
out
aas
test
mov
cmc
mov
xchg
pushf
test
mov
pop
cld
push
mov
out
pop
stc
jge
and
sysret
mov
sbb
mov
sbb
cmp
jge
out
cmp
lret
jge,pn
cmp
shrl
iret
imul
mov
cwtl
jo
push
popa
movnti
or
mov
loopne
and
fdiv
decl
orl
arpl
jge
ds
out
aam
loope
out
or
sub
xor
add
shll
mov
in
das
ret
enter
movsl
ds
push
idivl
call
jle
or
xchg
scas
cld
loopne
mov
push
faddl
push
or
xor
xor
and
je
pop
mov
adc
xor
js
add
mov
xor
int3
xchg
arpl
subb
cwtl
lods
pop
sbb
mov
mov
or
sub
ja
rcrb
pop
dec
sbb
movsb
mov
jp
dec
dec
ss
mov
scas
cli
cmp
fcmovb
pop
lcall
lods
sbb
mov
lea
ret
inc
xor
jb
or
dec
dec
sti
xlat
cld
add
xchg
movsb
cmp
mov
inc
push
repnz
push
inc
shl
shl
xchg
add
lahf
daa
mov
es
icebp
pushf
add
subb
aas
add
jbe
xor
cmp
pop
test
mov
icebp
icebp
dec
in
push
lea
pop
js
lea
popf
out
rclb
sbb
and
repz
adc
out
js
lret
pushf
pop
fildl
and
jle
pop
or
sub
mov
fdiv
jg
lcall
dec
insb
dec
add
ret
xor
aaa
inc
mov
sub
pop
int3
jne
movb
sarl
xchg
jno
xchg
pop
jae
cld
fcmovne
int
sub
rolb
in
mov
ljmp
jecxz
cmovne
cmc
leave
inc
insl
and
pop
pop
cmpsb
imul
inc
inc
adc
cmp
xchg
mov
push
movsl
sub
in
add
or
cmpsb
lea
sub
test
push
push
jp
and
mov
jl
add
sbb
pusha
push
pushf
push
adc
pop
cwtl
es
jne
sub
xchg
pusha
call
mov
mov
ljmp
lock
call
ffree
shll
mov
xchg
cmc
cltd
push
mulb
dec
add
int3
add
mulb
lret
jmp
shll
dec
cmc
adc
in
gs
subb
icebp
repnz
out
and
sub
fiaddl
push
add
or
daa
fwait
pop
or
lea
xor
and
fwait
xchg
dec
push
je
insb
int3
fwait
les
jns
stc
jmp
call
andnps
xchg
push
in
divl
mov
faddl
out
add
es
iret
sbb
ret
lcall
arpl
shrl
sub
mov
dec
outsb
sahf
cli
mov
out
adc
xchg
movsb
stos
sbb
leave
andw
and
pop
cmc
adc
push
ljmp
xor
in
mov
xchg
mov
jle
lahf
xor
jb
pop
sar
fisubl
mov
and
testb
mov
sub
ss
jg
or
lcall
pop
inc
mov
ret
mov
aad
cmp
inc
hlt
aas
dec
and
sub
inc
xor
repnz
shll
iret
push
add
pushf
sbb
jge
and
divl
sbb
mov
push
mov
fiaddl
jo
inc
and
js
pusha
add
popa
xchg
lahf
mov
lret
xchg
mov
out
jg
sbb
push
in
outsl
cmp
jbe
jns
movsl
mov
call
cli
aam
test
mov
call
ds
xchg
mov
les
lahf
push
xchg
mov
mov
outsl
cld
inc
hlt
xlat
je
out
inc
fists
aaa
movsb
int
xchg
add
stos
xchg
push
rol
les
shl
and
lock
jle
jno
xchg
and
jecxz
inc
cmpsb
sahf
outsb
clc
sarl
daa
int3
xchg
adc
mov
and
call
data16
ljmp
aad
test
dec
xchg
add
sbb
pop
mov
xchg
jae
or
stos
loop
sbb
pop
sub
mov
popa
call
rcrb
sbb
cmp
les
mov
call
xchg
jns
push
pop
mov
cmpsb
lods
cmp
mov
xchg
adc
cld
dec
pop
insl
popa
fmull
mov
bound
dec
adc
mov
jno
push
scas
sub
lret
and
add
adc
pop
enter
pop
loop
sbb
cwtl
sbb
fidivrl
or
sahf
hlt
and
subl
cmp
cltd
cwtl
sbb
imul
xlat
out
inc
and
mov
loop
push
mov
xor
jo
pop
xchg
arpl
xlat
rolb
or
cmpsb
or
das
int3
aad
add
jg
push
cltd
dec
int3
test
cld
lds
test
lods
or
mov
xchg
cmp
mov
lahf
dec
add
fmull
sbb
ret
and
das
enter
push
std
jmp
out
bound
int3
inc
addr16
clc
pop
mov
jb
in
into
sbb
pop
pushf
xor
jle
es
add
mov
jg
dec
xor
xchg
cmp
frndint
pop
dec
push
dec
adc
mov
fstpt
add
mov
or
mov
rorb
mov
dec
addb
shll
dec
pushf
dec
popa
pusha
je
add
ja
minps
addr16
jmp
sub
pop
repz
lahf
jne
shrl
and
cmpsb
mov
je
test
mov
pop
dec
sub
icebp
sbb
cltd
popf
cmpsb
jge
push
jnp
adc
xchg
in
fisubrs
mov
fucom
mov
sub
es
cmp
dec
in
inc
scas
mov
sbbb
xor
inc
mov
mov
mov
adc
test
pop
es
and
clc
imull
fistps
xchg
lret
sub
inc
xchg
scas
xor
push
insb
in
mov
jns
mov
adc
dec
dec
mov
clc
push
mov
scas
and
pop
mov
jl
fcmovnbe
jecxz
mov
push
or
jno
mov
xchg
mov
out
fdivr
pop
xlat
mov
out
jl
frndint
jno
fidivrs
pop
dec
pop
lret
sbb
test
rorl
test
bound
testl
aaa
sub
jle
jbe
mov
sahf
dec
ljmp
push
hlt
ss
gs
xor
ss
scas
imul
lcall
in
xchg
scas
xchg
stc
jp
std
inc
mov
mov
add
clc
popa
or
fwait
pop
sub
out
test
dec
xchg
sbb
stos
adc
xchg
ret
repz
add
lcall
testl
iret
push
mov
mov
pop
sbb
sbb
sbb
aas
sbb
pop
jp
xchg
push
setp
repz
idiv
or
cld
pop
in
pushf
pop
les
fnsave
lcall
mov
jp
add
cmp
inc
inc
or
aam
jmp
jnp
lods
lea
pop
xor
and
dec
sarb
mov
dec
xor
push
lods
outsb
loop
je
out
rorl
clc
xor
outsl
loop
xor
cmp
dec
mov
inc
les
mov
cmp
mov
xor
jge
jecxz
imul
cwtl
adc
and
add
pop
and
test
mov
xor
xchg
inc
adc
cmp
inc
push
negl
mov
ss
rclb
aaa
and
xor
mov
insb
int
aaa
gs
xor
vcvtps2dq
or
jns
pusha
shll
test
lcall
pop
push
push
das
mov
push
mov
jg
mov
pop
imul
es
xor
sub
int3
pop
mov
cmc
pop
lret
adc
mov
mov
mov
xchg
mov
js
xor
lcall
cmp
mov
sar
sub
cmp
jmp
jno
cltd
popa
shl
cmp
pop
mov
repnz
in
testb
push
pop
push
jb
test
std
jle
jl
nop
sub
add
sbb
orb
je
or
push
addr16
imul
lcall
adc
jmp
inc
ds
cld
xchg
sahf
jg
cmp
mov
sub
xchg
test
clc
fiaddl
shll
or
icebp
enter
std
je
cmc
mov
inc
movsl
leave
call
jp
je
lahf
sbb
lods
jp
aad
adc
ljmp
xor
push
shrl
cmc
fdivs
pop
lret
scas
push
push
addr16
pop
push
pusha
mov
aaa
imul
out
mov
pop
xlat
int3
lcall
repnz
and
sub
andb
cli
enter
mov
or
out
pop
jmp
sahf
outsl
int3
push
mov
cli
movsb
in
jecxz
adc
fstpl
jmp
pop
sub
leave
movsl
mov
insl
in
mov
jns
cmp
add
ret
push
xor
pop
into
sbb
push
xchg
jne
jns
lods
mov
out
daa
mov
into
jo
mov
mov
addr16
lock
test
stc
mov
mov
int3
imul
mov
jb
cmp
pop
lahf
xchg
push
clc
dec
in
jl
jnp
cmp
in
xchg
into
andb
add
test
push
jecxz
lea
mov
fldl
add
or
push
sub
sbb
leave
sub
pusha
inc
shrl
mov
xchg
stos
mov
jnp
push
sbb
addr16
mov
pop
jp
pop
lret
xchg
imul
sar
jns
sub
sub
inc
negb
loop
ljmp
les
sub
dec
xchg
sbb
or
sbb
or
sbb
hlt
ljmp
clc
sub
push
fnstenv
loope
leave
mov
add
or
pushf
pop
lcall
cmp
pop
cmp
arpl
and
and
aas
or
filds
push
rorl
pop
mov
stc
push
popf
mov
sbb
inc
rol
pop
cmp
dec
mov
mov
dec
jb
mov
in
fs
sbb
push
divb
sbb
mov
jmp
mov
inc
add
lods
shl
pop
lcall
cmpsl
ja
movsl
adc
mov
push
push
roll
push
cmpsb
pop
aad
xor
and
pushf
ret
and
or
add
and
ljmp
arpl
and
test
xchg
mov
ljmp
std
arpl
sub
inc
stc
pop
lds
jo
or
add
push
popa
dec
inc
jmp
xchg
repnz
sbb
xchg
sbb
push
mov
loopne
cltd
inc
lcall
gs
mov
jo
repz
popa
insb
subl
adc
andb
pusha
fsts
data16
popf
test
push
xor
adc
jge
inc
sahf
jle
xchg
push
test
gs
inc
mov
xchg
test
jp
inc
and
lahf
push
pop
and
mov
xlat
stos
mov
dec
in
cmpsb
or
mov
dec
pop
icebp
mov
push
push
outsb
mov
addr16
mov
push
fdivrl
std
dec
out
test
std
add
insl
adc
cmpb
cmp
xor
jb
pop
test
jp
mov
pusha
xchg
pop
loope
ja
push
mov
add
cmp
inc
mov
mov
push
clc
rcll
sahf
and
cmpsb
and
rcll
iret
xchg
pop
pop
xchg
mov
lea
sbb
dec
shrl
ss
adc
bound
mov
sub
or
sarb
scas
outsl
mov
aam
sbb
fs
mov
sbb
push
mov
mov
in
mov
or
dec
mov
and
out
stc
pop
mov
mov
cmp
icebp
dec
push
and
jbe
and
sub
xchg
push
add
push
test
lock
mov
fstp
xchg
push
dec
out
inc
jmp
push
dec
rcl
hlt
lods
ret
outsb
xor
push
push
rclb
lahf
cmp
mov
int
and
mov
mov
jg
sbb
dec
insb
xchg
les
int3
and
ror
scas
push
clc
cltd
pop
cmc
lock
add
mov
out
fstps
pop
lods
repnz
cmp
cmp
add
push
pop
clc
imul
pusha
fbld
pop
cmpb
dec
cmp
sbb
sub
stos
push
push
jecxz
sub
fcompl
jnp
sbb
lahf
adc
pop
stos
xor
dec
test
stc
adc
pusha
orb
or
and
aas
aaa
sarl
enter
jmp
rorl
arpl
mov
mov
mov
stc
sub
add
insb
aam
fcmovbe
mov
pop
pop
xor
fbld
xor
adc
or
fsts
inc
xor
xlat
xchg
lods
pop
push
xchg
mov
popa
test
jmp
cmp
xchg
mov
add
lea
cli
sub
mov
xor
mov
insb
jno
inc
outsl
jg
pop
daa
sahf
movsb
lds
std
sahf
dec
cmp
fcmovbe
pop
xor
cwtl
iret
xchg
xchg
push
xor
inc
cmpsl
add
aam
inc
xchg
repnz
push
push
sbb
mov
sti
js
xor
loope
push
sahf
ss
addr16
loopne
fmuls
adc
cmpsb
movsb
sub
out
fnstcw
xor
jg
xorb
das
add
xchg
sbb
dec
leave
daa
mov
add
xor
xchg
lds
and
aaa
xor
sarb
mov
into
insb
push
pop
ljmp
imul
and
and
jno
lods
pop
jb
fs
fcomps
test
insb
repnz
jge,pt
into
adc
cmp
jl
nop
adc
shll
xchg
clc
add
popa
push
movsl
inc
daa
xchg
sub
ljmp
ret
lret
cmpsl
testl
add
mov
sahf
inc
pop
push
pop
push
popf
add
loope
xchg
sbb
push
push
mov
push
xor
pop
or
jp
fwait
cld
mov
push
pusha
leave
lret
lea
scas
adc
fldl
ret
arpl
ret
inc
or
sbb
mov
inc
fsubs
push
sti
cmpsl
icebp
or
xchg
dec
in
pop
xchg
mov
xchg
movl
pushf
out
sub
sbb
xchg
push
incl
aas
dec
insb
call
icebp
or
mov
push
test
sbb
add
stos
jno
sbb
clc
repnz
sbb
mov
pop
adc
or
call
or
or
pop
fbld
icebp
xlat
dec
subl
sub
inc
test
jmp
push
jno
out
cmc
mov
dec
shrl
in
xchg
sub
mov
fadds
push
mov
roll
xorl
lods
into
cmp
int3
pop
add
mov
xor
cmc
mov
sahf
fdivl
push
stos
and
sub
cmp
leave
push
dec
scas
sarb
data16
and
mov
orl
inc
mov
or
rcrb
sub
ljmp
mov
cld
out
or
enter
or
sbb
jmp
mov
into
adc
xchg
mov
hlt
lods
dec
fcoml
jg
or
pusha
cmp
aam
sub
into
cmpsl
inc
fidivrl
subl
or
or
pushf
insb
dec
jne
add
in
jne
jecxz
push
xlat
dec
sub
xor
or
inc
mov
inc
hlt
push
pushf
daa
mov
imul
js
lret
cmp
shl
xchg
mov
stos
jecxz
mov
loopne
push
ss
bound
push
or
fidivs
inc
jo
es
fsubrl
lock
rolb
or
dec
mov
out
push
jmp
bound
scas
pop
inc
dec
jmp
and
and
test
fbstp
sub
sti
rorl
mov
dec
fidivl
jle
add
and
cmp
xor
dec
clc
fwait
jg
mov
push
insl
fstpl
mov
aas
cltd
test
jl
mov
cmp
ljmp
fldl
loope
aad
movsb
pop
loope
push
fcoms
xchg
adc
lcall
ja
mov
cs
jo
sbb
sbb
add
push
mov
rol
fmull
cmp
jmp
mov
mov
ret
add
sub
sar
jl
jp
mov
inc
cmp
xchg
jno
mov
sysret
cmpsb
add
das
fnstcw
adc
mov
dec
shll
push
pop
repnz
push
inc
mov
les
pop
and
cmpsb
cmp
jle
inc
fcompl
jnp
test
fcmovnbe
inc
push
lcall
cwtl
lret
clc
imul
scas
push
xchg
jnp
mov
lret
cwtl
pop
mov
inc
dec
arpl
in
arpl
in
ds
mov
or
jns
jo
stc
shll
mov
push
dec
pushf
xor
add
xchg
ljmp
or
add
pop
jmp
repnz
jae
xlat
outsb
ss
inc
andl
adc
jno
push
out
and
add
mov
lret
or
jo
mov
lods
lock
mov
sahf
rcll
mov
push
jne
xchg
jg
xor
nop
mov
mov
pop
mov
popf
cmpb
dec
pop
pop
jecxz
loopne
lock
cwtl
jne
jb
jnp
addr16
cmp
or
ret
fildll
insl
aaa
xchg
mov
jae
pop
jmp
cli
loope
push
lea
add
and
fwait
jecxz
inc
sub
aaa
pop
xor
arpl
outsb
addl
xchg
sub
cwtl
pop
or
sahf
xchg
adcl
push
sti
mov
inc
hlt
mov
bound
out
add
cmpsl
push
add
fsubrp
xchg
lock
push
gs
push
mov
mov
jg
xor
pop
les
xchg
pop
lahf
cmp
pop
es
outsl
divl
mov
insb
scas
jnp
and
jmp
clc
rcll
sbb
mov
notb
push
test
loop
mov
jb
cmpsb
cmp
lock
scas
jb
mov
cmp
fsubl
xchg
fmull
adc
cmp
push
and
mov
pop
mov
aam
movsb
add
cmpsl
clc
test
or
or
or
repz
mov
scas
xor
sub
inc
jo
lahf
and
or
sbbb
jne
les
jmp
mov
xchg
inc
fs
lahf
fs
rol
stos
stos
mov
leave
mov
fwait
push
jbe
ljmp
xor
out
stc
sbb
xor
dec
add
cmpsb
pop
andl
sar
jb
call
out
cmp
out
mov
adc
add
mov
repnz
add
das
insb
jmp
lcall
or
lods
lahf
sbbb
mov
repz
or
cmp
ja
xchg
push
inc
out
iret
sbb
sub
sbb
jle
xchg
aaa
cmpsb
das
mov
xor
ja
mov
inc
cmpsl
add
rcrb
push
aad
fisttpll
fcoms
inc
mov
inc
inc
dec
mov
dec
sub
xchg
inc
add
repz
test
jecxz
add
stos
imul
cmp
cld
movsl
sti
push
xor
dec
adc
mov
mov
cmp
pop
push
sub
push
lea
cmp
xor
movsb
jle
mov
cmp
mov
addl
or
add
mov
aaa
in
jp
orb
lret
jl
mov
add
lcall
cmpsl
ljmp
push
outsl
sub
jnp
cmpsl
shlb
movsl
fucomip
call
mov
and
jp
cwtl
fucomi
jb
lahf
jmp
push
lcall
dec
or
push
jle
fists
and
movsb
fwait
and
adc
es
jl
out
or
cmp
push
lcall
pop
or
and
or
jle
lret
imul
in
and
jae
pushf
push
push
sbb
push
and
sbb
fsub
pop
adc
mov
adc
pushf
das
cltd
sbb
stc
ljmp
sbb
and
cmc
ss
bound
cmp
scas
frstor
adc
pop
addr16
fcmovne
rcl
ret
aam
in
insb
jmp
jo
push
and
stc
fwait
cmp
into
cmpsb
clc
mov
addl
sbb
jl
mov
leave
mov
ja
in
inc
inc
or
sbb
add
dec
fmul
xchg
add
mov
sar
ljmp
es
jo
mov
adcb
xchg
mov
clc
idivb
xor
sub
pop
mov
or
cli
sub
fucomp
clc
sbb
bound
and
iret
adc
cli
lods
fwait
scas
add
cld
pusha
es
bound
into
int
cwtl
inc
dec
insl
mov
femms
ret
rcrb
cmp
or
and
mov
leave
cwtl
lahf
int3
es
stc
and
pusha
cmp
lret
push
and
fimuls
cmpsb
mov
mov
cld
loop
iret
nop
or
mov
scas
lcallw
cmp
pop
fcmovb
repnz
and
adc
enter
push
ret
xor
into
movl
cmc
pop
pop
lea
xchg
test
loope
popa
das
dec
lods
or
fwait
notb
orl
push
add
orl
mov
pop
lock
orl
dec
outsb
and
aaa
insb
mov
mov
cld
in
in
lea
in
jecxz
test
push
insb
jb
clc
mov
xchg
sbb
pusha
data16
fcoms
aas
mov
stos
ficompl
or
sarb
test
xor
daa
clc
shrl
add
adc
das
fwait
xor
jb
sahf
roll
movsl
xchg
imul
popf
and
lock
aad
scas
jge
stc
mov
pop
mov
lret
inc
xchg
dec
mov
sbb
nop
add
cli
in
fimuls
aam
mov
sub
lret
add
movl
mov
loope
jo,pn
sbb
push
into
test
loop
pushl
testb
pusha
je
and
push
std
jbe
lahf
lock
xchg
sbb
lahf
pop
aam
pop
cmp
push
shll
sub
xor
lret
int3
test
das
sbb
je
jbe
arpl
add
roll
or
lds
push
inc
mov
cmp
or
mov
sahf
enter
imul
fcmove
xor
xchg
push
mov
addr16
fidivl
dec
rcrb
pusha
das
sub
add
adc
xor
xlat
sbb
push
lahf
jmp
jae
addr16
xchg
test
and
xchg
push
cmp
adc
pop
push
pop
jo
or
ret
pop
pop
sub
les
mov
jb
mov
rcrb
mov
aam
mov
pop
sub
dec
adc
xchg
sub
inc
inc
les
inc
or
cmp
mov
xor
lock
test
mov
xor
xchg
mov
lods
jae
dec
fwait
cli
jp
sarl
fnsave
cmp
push
ja
adc
xchg
enter
imul
cwtl
adc
stc
into
ds
movsl
add
adc
sbb
inc
jg
cs
add
xor
inc
cli
push
pop
ficompl
mov
and
test
pop
js
lods
icebp
push
mov
cmp
dec
pop
xor
dec
mov
inc
sbb
push
adc
out
lahf
dec
in
in
dec
adc
repz
insb
xlat
xchg
call
sahf
jp,pn
dec
mov
les
mov
aaa
je
std
and
sbb
cmp
inc
mov
repnz
push
jno
cmc
push
jmp
mov
push
mov
xchg
iret
xlat
es
decl
pop
lods
cmp
cmp
sahf
fidivl
loopne
or
lds
clc
stc
mov
int3
mov
adc
rcrb
pusha
mov
pop
mov
push
fnstenv
pop
clc
sbb
push
pop
mov
jmp
enter
and
mov
repz
pop
pusha
mov
roll
add
cld
lahf
mov
arpl
testb
xchg
xchg
adc
dec
test
adc
pop
and
dec
pop
xchg
jg
dec
imul
scas
int3
daa
add
inc
les
mov
aam
sbb
in
das
divl
pop
pop
xchg
and
pop
dec
sub
jns
lret
add
jns
and
dec
test
adc
xor
popa
sti
bound
jne
ret
adc
in
ret
xorb
daa
xor
xor
test
aaa
adc
mov
or
fcmovnb
das
add
leave
stos
jmp
or
scas
lret
insl
popf
pop
mov
ja
test
pop
mov
stos
arpl
rcll
fidivrs
bound
icebp
xchg
and
outsl
test
push
insl
ja
repz
mov
test
sub
fld
lods
cmp
sub
push
movsb
negl
jnp
xchg
leave
addr16
dec
mov
mov
adc
mov
add
pushl
test
mov
repz
fwait
and
shrl
cmp
out
repz
inc
cmp
and
cmovs
out
inc
into
and
ss
pop
js
inc
mov
cmp
mov
jecxz
pop
sbb
dec
aaa
jbe
dec
sbb
lds
insb
hlt
popf
cmovno
or
out
fsubl
inc
xchg
je
jns
std
into
dec
sbb
jb
pusha
sub
add
lds
push
mov
mov
movsb
sbb
mov
outsl
enter
add
nop
leave
push
jmp
push
and
les
in
pop
jnp
inc
movsl
cld
cs
or
int
scas
clc
cmp
push
in
arpl
sbb
push
fstpl
lret
sti
rolb
xchg
sub
mov
cmp
int3
and
shll
imull
loope
icebp
jnp
mov
pop
push
lret
xorl
inc
add
aad
adc
cmp
insl
inc
fldt
or
push
xchg
divl
ffree
daa
push
ljmp
call
mov
push
mov
cmc
out
les
ret
mov
rcll
push
cmp
dec
lods
xor
mov
out
pop
in
jmp
fstps
jl
jnp
pop
mov
data16
add
scas
sbb
push
out
ret
ss
pop
sbb
pop
mov
push
int3
scas
ljmp
pop
lahf
or
int
loopne
popf
dec
sar
loope
jbe
sti
shlb
imul
leave
test
loope
fisubs
fnstsw
or
jle
inc
dec
inc
mov
add
aad
in
outsb
lret
sbb
aas
and
push
movsl
jg
xor
scas
pop
sti
cmpb
sbb
vmread
and
sub
insl
or
and
scas
fimuls
sub
jbe
mov
call
cmp
out
fimull
out
or
jo,pn
inc
lcall
jae
in
mov
xchg
shlb
cmp
into
jg
or
jnp
jge
mov
pushf
sub
lret
or
mov
mov
pushf
xor
dec
push
test
xchg
jmp
inc
sbb
jnp
lahf
push
xorb
push
movsb
test
or
mov
mov
adc
inc
push
xchg
mov
popf
stos
mov
popf
rcrb
ss
out
lret
leave
shrl
les
notl
mov
mov
mov
pop
cmp
pop
xor
add
in
sbb
jge
inc
cmp
pusha
fcomps
xchg
xor
rorl
js
subl
mov
mov
xchg
adc
mov
and
popa
lods
lods
fidivl
sbb
push
repnz
sub
mov
pop
in
lea
adc
xor
jno
xchg
or
in
daa
dec
in
sbb
pop
sbb
dec
call
shll
push
pop
mov
cmp
arpl
leave
orl
xchg
jne
or
jmp
xchg
cmp
sub
cmp
push
mov
inc
pop
std
ss
mov
stc
or
cltd
aam
jle
cld
adc
shrb
stos
push
pusha
or
jne
call
or
out
test
push
jb
and
mov
or
jmp
xchg
add
inc
jle
lcall
out
movsl
scas
xchg
idivb
mov
out
cmpsb
or
pop
jmp
sbb
and
dec
cmp
cmpsl
in
pop
mov
cwtl
test
push
xor
cli
cmp
cwtl
and
rcl
mov
int
push
inc
fmulp
jge
hlt
mov
ficompl
sbb
push
jmp
test
xchg
outsb
mov
shll
push
pop
cmpsl
cmpsl
std
inc
insb
flds
leave
mov
test
and
lcall
test
cmpl
add
loope
imul
int3
cmpsb
or
mov
xchg
jg
clc
cmpsb
add
cmp
sbb
xchg
dec
or
cld
mov
sbb
xor
xchg
int
aas
add
cmp
je
push
inc
not
inc
movb
repz
or
dec
mov
movsl
fldenv
sbb
cmp
into
sub
aad
mov
in
jb
fiaddl
out
in
pop
mov
push
pop
and
cmp
pushf
or
mov
loop
sub
subl
mov
lret
stc
adc
popa
rolb
add
mov
and
ja
mov
test
inc
sbb
movsb
imul
xor
mov
popf
dec
push
ret
in
je
adc
dec
mov
mov
or
cltd
and
shrl
xor
xchg
pop
test
mov
mov
add
aad
sbb
int
out
out
and
sahf
orb
jae
sub
jne
xchg
jl
cli
pop
js
mov
std
rorl
push
sahf
jnp
push
jnp
jb
ss
das
and
mov
dec
out
xchg
push
push
sarl
add
jge
int3
adc
xor
adc
cmp
outsb
std
js
cs
jns
push
inc
or
cmpl
in
lods
fcmovnb
add
fisubrl
out
lods
sbb
mov
xchg
outsb
mov
or
aas
ds
scas
mov
aaa
push
and
inc
inc
js
jae
lods
inc
pop
fs
mull
or
xor
aad
jg
lods
mov
mov
cmp
and
jne
lds
notb
sub
outsl
push
mov
adc
adc
mov
add
rclb
jbe
or
pop
cli
cmpsl
cmpl
pop
cli
inc
jecxz
xchg
push
pop
call
clc
mov
pop
pop
adc
sbb
ror
xor
add
xorb
ljmp
mov
jo
mov
push
iret
xchg
and
or
loope
outsb
pusha
jb
int3
call
xor
push
push
arpl
mov
stos
lcall
pop
mov
or
xor
popa
dec
dec
xorl
aas
lret
popa
push
lods
push
jns
test
lret
sub
das
sbb
pop
and
flds
shr
test
mov
andb
sbb
addr16
lret
xchg
rol
add
add
cmpl
sbb
insb
leave
jge
pop
xchg
pop
and
shl
fwait
and
jecxz
scas
in
cmpsl
cmp
in
sahf
arpl
test
cmpsl
shll
into
insl
inc
test
pop
lds
jge
dec
sub
int3
and
or
movsb
mov
dec
push
out
add
xor
cmpb
fiaddl
loope
loopne
cmc
jb
pop
mov
cmp
fstl
scas
xor
nop
jns
aad
jnp
sub
pop
js
cli
xchg
xchg
pop
adc
scas
int
leave
imul
pusha
sub
pop
stc
jae
add
out
ficomps
dec
push
stos
cmpsb
fwait
adc
leave
lock
jo
enter
cwtl
cld
xchg
repnz
sbb
and
not
fimull
adc
leave
adc
xchg
pop
fs
les
pop
es
cld
lahf
cli
lea
je
mov
ljmp
shlb
mov
sub
mov
xor
sahf
mov
outsb
push
fcoml
out
mov
adc
xor
fbstp
mov
dec
jbe
push
adc
mov
dec
cli
inc
mov
pop
xchg
xor
insl
inc
std
cmc
mov
mov
imul
and
lods
mov
loope
pop
push
lcall
ja
xlat
inc
mov
inc
call
aaa
or
sub
adc
push
or
mov
shl
iret
jecxz
out
lock
adc
sbb
lea
sub
adc
xor
mov
jg
out
adc
jp
xor
ret
mov
in
pop
push
push
mov
fmull
imul
push
int
cmp
outsl
dec
test
pop
out
cmp
push
add
lea
lods
or
repz
fisttps
mov
pop
mov
xchg
pusha
test
cmp
sbb
pop
nop
push
jb,pt
mov
add
cmpsl
cmp
out
xor
decl
adc
mov
aam
cmp
pushf
testb
lods
scas
pop
mov
and
cmpsb
jecxz
pop
inc
lods
sbb
pop
cmp
xor
xorb
movb
shrl
and
sbbb
xchg
mov
daa
pop
jg
inc
or
xor
or
dec
out
mov
pop
imul
popa
clc
add
sbb
aas
cmp
mov
lahf
mov
inc
fwait
and
pop
sub
dec
mov
lret
adc
jbe
insl
in
nop
and
cmp
lcall
fisubl
add
xchg
mov
ficoms
movsb
lret
or
mov
add
mov
dec
icebp
cli
jne
jecxz
add
test
cwtl
xor
testl
mov
test
mov
test
jno
add
and
cmc
mov
sub
data16
add
loope
cmpsb
xlat
int
push
outsl
sbb
jg
lea
xchg
imul
flds
xor
ljmp
nop
mov
dec
xlat
or
enter
sbb
xor
nop
shlb
add
sbb
fbld
push
out
mov
ror
jb
jmp
rclb
adc
sahf
sub
rclb
or
fdivl
je
dec
dec
xchg
cld
pop
add
xchg
aad
xchg
adcb
xor
in
or
mov
or
xorl
adc
dec
aam
push
xor
xchg
incl
aad
fiadds
jo,pn
or
cmp
aam
int
hlt
rorl
or
bsf
mov
mov
mov
ficompl
push
add
mov
xchg
shrb
mulb
or
sub
ljmp
sbb
int
or
fxch
std
stos
sub
cwtl
pop
dec
call
mov
loope
jmp
ja
ss
and
insb
push
leave
dec
scas
roll
fnstenv
mov
mov
pop
add
idiv
push
mov
xor
outsb
xchg
imul
mov
sahf
fiaddl
ds
enter
adc
hlt
xchg
jmp
lret
jnp
in
mov
jns
jns
dec
push
sub
push
pop
lea
xchg
je
xchg
xchg
insl
int3
push
push
dec
cmpl
jns
shll
pop
bound
push
loop
ret
mov
pop
andb
inc
add
cmp
clc
xchg
sarb
je
test
in
hlt
lock
scas
adc
movsb
or
shr
daa
lahf
loope
pop
xacquire
jmp
sub
outsb
pop
mov
pop
cmp
mov
add
or
adc
xchg
test
cmpsl
mov
aaa
mov
adc
insl
int3
mov
out
mov
sub
mov
out
test
dec
sbb
lock
es
xlat
incb
lods
sbb
std
bound
movsb
add
pop
into
and
repz
jp
ret
sub
add
ret
mov
inc
mov
jb
add
outsl
loop
call
shll
sar
add
shll
fadd
shr
insb
gs
lret
pusha
cmpsl
rolb
fld
cli
xchg
push
push
pop
push
dec
sti
lods
mov
lods
in
shrb
stc
and
pop
pop
ja
cmp
outsl
cmpb
ljmp
sbb
mov
sbb
xchg
mov
loope
cmp
test
aam
push
pop
fcmovne
lea
nop
scas
add
jle
cmp
pop
mov
adc
cmpsl
aam
pop
push
sbb
xchg
cmp
notl
int
xchg
jle
cmp
fiadds
mov
loopne
imul
jl
mov
out
lahf
mov
dec
sbb
out
insb
andl
cld
sbb
sarb
sub
xor
clc
nop
xchg
jns
xchg
je
xlat
xor
pop
fbstp
xchg
pop
push
fistpll
ja
cli
lahf
and
xor
mov
jnp
out
jge
sarb
xor
inc
pushl
mov
xchg
imul
push
ljmp
aas
popf
out
faddl
movsb
push
push
or
lds
inc
das
xchg
push
jg
mov
lock
bound
mov
mov
iret
loope
pop
in
lock
sub
aad
pop
dec
and
int3
sub
addb
jle
in
jae
sub
lea
sbb
jp
leave
mov
jno
dec
add
in
xorl
push
int
adc
mov
test
sbb
and
adc
scas
xchg
insl
clc
push
xor
mov
push
dec
inc
out
cwtl
or
and
xchg
mov
adc
xchg
mov
mov
mov
dec
mov
into
lds
int3
rcrb
dec
sub
cmpsb
cli
popf
sub
rcrb
jle
xor
clc
rorl
inc
cmp
fdiv
jne
cmp
push
mov
adc
cmpsb
and
lods
fisttps
ret
or
push
dec
pusha
and
popa
push
cmpsl
dec
mov
jmp
stos
fdivl
jge
popf
sti
popa
out
scas
push
sbb
jo
enter
or
jns
xor
jg
add
jecxz
fidivl
and
and
inc
repnz
xor
mov
or
mov
pop
cmp
rcr
push
dec
mov
mov
or
iret
xor
and
pop
add
sbb
pop
outsb
in
add
pop
int
xchg
sarl
jle
es
push
dec
xchg
insb
inc
jmp
xchg
test
je
adc
jnp
cmc
push
clc
imul
xchg
out
popa
clc
rcrb
loopne
data16
je
sbb
mov
mov
sti
adc
adc
es
sub
aam
mov
sub
mov
daa
ljmp
lods
and
mov
jge
sub
xchg
fs
in
cmp
jle
cmp
jbe
sub
jp
jl
sbb
mov
xor
ret
xor
mov
xor
outsl
adc
pop
cld
jmp
pushl
or
mov
or
lret
inc
sub
sahf
fsubl
test
cltd
add
pop
outsl
sbb
movsl
mov
and
add
push
sbb
dec
fistl
fstpt
adc
pop
gs
outsb
outsl
cmp
pop
or
xor
int
xor
ret
je
cmpsl
inc
imul
stos
adc
cmpsb
dec
adc
or
ja
test
fsts
out
adc
ret
lods
push
lods
pop
cmp
int3
movsb
sti
add
movsb
inc
nop
stc
adc
xchg
std
cmp
xor
fsub
mov
mov
mov
int
sbb
xor
cmpl
pop
xchg
xchg
outsl
xchg
cmp
mov
loop
mov
pop
push
out
cld
cmp
fadds
pushf
out
or
jg
dec
ljmp
repnz
jno
js
or
stos
pop
pop
lret
inc
fstps
icebp
cld
jmp
cmp
sbb
dec
hlt
and
pop
and
aaa
out
clc
inc
jb
pop
loopne
in
or
icebp
add
jb
pop
jl
adc
stos
das
movsb
mov
and
ss
xlat
xor
push
sub
add
movsb
stc
jg
shlb
fstl
mov
xor
jnp
ljmp
jnp
test
insb
pop
xlat
pop
ret
out
inc
rol
js,pt
xor
adc
add
adc
xor
fiaddl
adc
pop
scas
jno
sbb
push
mov
pop
and
mov
mov
call
adc
mov
mov
xchg
fstps
xchg
shl
or
cwtl
inc
inc
jb
out
movsb
outsb
mov
ficompl
in
negb
xchg
test
push
loop
sahf
jno
cmp
popf
into
and
pop
cmp
xlat
shrb
outsl
add
lret
inc
movsb
mov
mov
xchg
dec
clc
push
das
cmp
dec
call
ret
or
sub
sub
rcl
lret
les
fs
pop
insb
call
jns
ja
inc
imul
and
push
idivb
xor
or
test
and
fwait
and
push
subb
movsl
push
iret
mov
cmp
rorl
pop
in
mov
call
test
in
fisubrs
les
das
dec
sub
push
adc
push
inc
adc
out
clc
or
or
lret
in
scas
test
xchg
inc
pushf
dec
arpl
addr16
lea
mov
cmp
inc
bound
es
mov
push
sub
movsl
or
jae
fdivp
dec
in
cmpsb
nop
xchg
push
cmc
out
sahf
test
mov
or
xchg
pusha
push
sbb
cli
or
mov
out
addr16
push
shl
xchg
adc
repz
test
sahf
fdivrs
ss
fmull
xor
test
or
or
fs
aas
lret
xchg
xchg
sub
insl
pop
data16
imul
cmp
enter
in
xchg
fwait
int3
ja
xchg
fidivl
int
push
aas
xchg
rol
rolb
ljmp
mov
add
jmp
sti
cmpsl
add
push
lret
xor
jb
andl
popa
popf
dec
popf
push
int3
cli
mov
daa
or
pop
loopne
daa
jle
or
cmp
sub
es
nop
jp
mov
outsb
int
in
push
ss
xchg
mov
cmp
outsb
rcrb
inc
aam
push
mov
cs
jmp
cmp
mov
mov
inc
dec
mov
adc
cmp
cmp
popfw
fildl
movsl
jns
aam
fucomp
xor
nop
xor
pop
mov
push
lea
popf
cwtl
cltd
sahf
jmp
cmp
mov
mov
std
in
cltd
shrl
inc
inc
dec
mov
jmp
enter
ljmp
pop
dec
cmpsl
bound
cwtl
cmp
mov
jns
cli
sub
out
negb
sub
ret
call
jge
pop
shll
inc
push
aaa
insl
adc
mov
in
aaa
mov
rclb
mov
xor
outsb
inc
popa
sbb
les
push
in
cmpsl
cmp
pop
repz
mov
add
rcrb
pop
mov
sub
or
adc
jno
popf
pop
sbb
pop
icebp
mov
jae
cltd
jecxz
icebp
fldcw
lahf
add
add
mov
and
mov
loop
loop
fidivrs
negl
xlat
jp
mov
add
push
pop
pop
inc
imul
mov
scas
insl
push
xor
jmp
clc
incl
push
and
sbb
adc
dec
mov
out
lods
cmp
in
in
jae
sub
pop
dec
pop
out
sub
popa
or
inc
sbb
add
in
dec
and
dec
les
sub
jecxz
jp
push
push
jle
in
jg
jne
sub
out
insl
sub
outsl
push
add
inc
dec
and
xlat
movsb
movsl
cli
ljmp
repz
ret
insl
push
push
cmpsl
das
bound
jo
addb
mov
mov
sbb
push
jle
push
adcb
test
ds
aas
aam
fwait
leave
icebp
aas
rep
add
divb
sarl
adc
decb
jno,pt
sub
repnz
sub
mov
jge
dec
rorb
pop
insl
ret
adc
cmp
cmp
pushf
jo
or
iret
sahf
mov
ja
inc
dec
incl
ret
fisttps
jge
cltd
aam
movsb
sahf
xchg
mov
in
mov
lretw
repnz
xchg
fdivl
pop
in
cmp
rcrb
push
push
sub
inc
bound
jae
mov
jle
xchg
dec
push
gs
outsl
incb
cmp
fistpl
xorl
imul
add
sbb
and
stc
das
or
xchg
sub
and
mov
arpl
push
lret
adc
dec
lods
incl
ror
sub
fs
xchg
adc
pop
jo
out
add
or
sub
and
dec
push
mov
dec
add
sub
outsl
xlat
and
imulb
repnz
push
and
add
jb
pusha
mov
sbb
repnz
movsl
daa
add
sahf
mov
in
jnp
fstpt
mov
cmp
mov
push
movsb
dec
imul
xor
xlat
mov
fcoms
fmuls
stos
dec
dec
mov
stc
mov
dec
mov
add
lock
mov
mov
std
mov
pop
test
stos
loopne
mov
rorl
dec
xchg
sbb
aaa
pop
icebp
in
imul
popf
push
incb
daa
imul
imul
inc
and
sbb
pop
iret
in
xchg
sbb
into
dec
insl
dec
outsl
jecxz
subl
push
pop
push
sti
or
pusha
add
xchg
push
mov
adc
clc
das
lods
jne
cmpsb
into
or
dec
test
nop
out
repnz
aam
push
ja
mov
out
sahf
es
mov
jg
je
xor
push
sahf
and
jno
inc
cmp
bound
xor
pop
or
mov
scas
cmp
mov
int
das
jecxz
inc
cs
cs
mov
movhps
int
pop
in
shll
add
repz
ljmp
hlt
fdivrl
and
push
sub
repnz
test
xchg
mov
aam
dec
sahf
int
mov
mov
ja
hlt
push
out
xor
push
dec
pop
mov
sbb
sbb
adc
fisttpll
gs
mov
cmp
push
jecxz
sbb
xchg
jns
sti
and
or
aad
call
push
aaa
dec
lea
adc
pop
xor
pushf
hlt
ret
loope
je
rcrl
sub
mov
xor
mov
bound
inc
je
or
pop
sbb
inc
pop
inc
mov
add
xor
adc
stc
and
aad
rcll
pop
les
jbe
mov
push
mov
int3
aas
and
mov
ja,pn
pop
pushf
xchg
rcpps
shll
jmp
daa
repnz
mov
mov
or
dec
cli
jbe
xchg
mov
or
sti
mov
test
in
addl
jo
mov
cmp
ret
jl,pt
dec
pop
pop
mov
ret
xlat
pusha
mov
xchg
mov
mov
andb
dec
repnz
inc
add
push
fsub
sub
sbb
daa
mov
loop
clc
ficompl
sbb
call
mov
lock
aas
sub
add
sub
cmpsl
dec
pop
mov
movsl
iret
cs
in
mov
xor
sahf
lods
fists
inc
bound
jno
jecxz
clc
jnp
mov
repz
xor
mov
push
pop
sahf
nop
jno
out
or
mov
and
jbe
rorl
lea
es
jmp
xor
mov
arpl
adc
mov
mov
xor
dec
dec
faddl
loope
jl
or
mov
xor
inc
mov
inc
fdivs
cmp
mov
mov
adcl
sub
dec
dec
mov
mov
xor
scas
mov
fisttps
clts
movsb
cmpsl
out
nop
mov
cmp
pop
dec
dec
sub
adc
mov
jno
loop
pop
dec
mov
pop
and
cmpb
jno
and
and
movb
lods
sbb
in
mov
and
stc
jmp
jo
pop
pop
je
add
mov
xor
hlt
mov
jl
jp
and
repz
out
in
dec
pop
mov
mov
addr16
jl
das
test
add
imul
in
jle
daa
idivb
pop
pop
or
mov
inc
fistpl
jnp
lret
jns
inc
inc
xchg
pop
pushl
jg
and
adcl
push
dec
mov
and
ficoms
sub
sti
push
scas
aad
fdivrs
js
add
push
jp
shlb
popa
push
js
stos
data16
xchg
inc
scas
jno
mov
jne
xchg
inc
insl
es
inc
mov
jl
shll
ret
sbb
sub
jbe
repnz
and
sbb
inc
cmp
mov
dec
mov
pop
filds
test
pop
mov
stc
js
mov
jo
inc
movsl
sahf
pop
lds
push
outsl
inc
push
popf
or
sti
iret
testb
shll
fcmove
into
stc
mov
std
xor
inc
cmpsl
xor
sbb
sarl
xor
sbb
cmc
xchg
cld
dec
clc
leave
testb
popf
xor
outsl
mov
inc
xchg
jbe
imul
ret
pusha
dec
lock
inc
aas
loopne
mov
push
push
cwtl
sti
imul
sbb
fmuls
sub
add
addb
mov
out
or
and
jnp
fwait
jbe
mov
cmp
xchg
add
hlt
or
mov
int3
lret
int
in
xor
test
les
mov
lret
xchg
jle
out
std
test
icebp
subl
mov
and
and
mov
add
fcmovnb
sub
in
out
xor
push
repz
ja
inc
jp
fwait
jns
lcall
int
xor
xor
scas
mov
pop
pop
fcoms
inc
inc
ret
pop
popf
mov
add
sbbl
insl
sbb
dec
xchg
fdiv
movl
or
stc
rcrb
pop
pop
sahf
inc
cmc
sbb
fwait
aas
js
add
mov
xor
xor
shrb
test
mov
mov
jge
mov
pop
cmp
rcl
sbb
mov
sbb
mov
repz
out
int3
mov
sub
add
or
push
pop
sub
int
push
mov
out
inc
das
xor
and
xchg
test
pushf
loope
sub
ret
push
cmp
dec
mov
pop
test
mov
xor
shlb
aad
sbbb
in
flds
int
aas
es
mov
repz
lods
nop
sub
sub
addr16
sti
cld
jmp
ss
cmpsb
jp
xchg
pusha
scas
jno
push
scas
incb
cmc
jne
adc
fldenv
cmc
ljmp
outsb
adc
lret
cmc
or
aam
and
inc
in
adc
xor
cmp
out
cld
adc
sub
lds
fsub
dec
and
in
inc
mov
ficomps
push
xchg
inc
into
xchg
xor
jp
inc
out
adc
fwait
ja
jno
loope
pop
rcl
push
xchg
pop
pop
out
mov
mov
icebp
mov
hlt
pop
cmc
jp
or
jge
dec
aas
pop
pop
enter
jnp
jle
cmp
sub
mov
sbb
sbb
in
stos
push
ds
jns
loop
rol
inc
mov
xchg
xor
rcrb
jl
dec
test
nop
rol
mov
jb
sahf
xor
mov
push
fs
dec
mov
stos
mov
jl
je
cmp
pop
pop
mov
jae
jbe
loop
push
push
pop
lods
push
add
or
add
mov
and
loopne
out
and
or
andl
fidivl
cmp
ljmp
fisttps
jmp
dec
ret
mov
cmpl
sbb
mov
into
sbbl
and
jns
or
pushf
push
mov
cmpsl
fmuls
inc
xchg
push
and
dec
icebp
mov
stos
mov
push
out
orb
sti
mov
testb
jno
xorl
adcl
mov
mov
rolb
repz
jmp
pop
je
aaa
stc
add
mov
ffreep
mov
fistps
xchg
pop
ss
mov
cmp
pop
std
fnsave
les
dec
mov
push
pop
cmpsb
push
dec
mov
inc
test
fs
jne
xchg
std
out
je
fimuls
shlb
adc
inc
or
sbb
push
sub
int
cmpsl
jp
jbe
aam
daa
sbb
sub
sub
lcall
mov
pop
dec
cwtl
shll
clc
add
movsb
push
ret
out
and
dec
add
xchg
testb
jo
inc
push
outsb
out
jg
repnz
mov
dec
das
sbb
loope
adc
xchg
pop
clc
and
outsb
adc
sub
push
or
rolb
dec
push
push
movsb
shrl
sahf
jmp
add
and
in
cmc
adcb
adc
aas
scas
sbb
das
adc
outsl
ret
xchg
lcall
shlb
repnz
adc
outsb
lahf
pop
pop
mov
test
int3
push
jbe
mov
int3
rolb
push
test
mov
pop
loope
insb
dec
cmp
es
iret
mov
insl
and
mov
push
jns
mov
dec
push
mov
test
xchg
xor
in
sbb
int
xchg
push
jp
sbb
mov
push
adcl
sbb
lret
mov
mov
mov
inc
mov
daa
mov
pop
lcall
shlb
xor
mov
loope
and
xchg
cmp
cvttps2pi
adc
dec
mov
xchg
es
mov
lock
mov
shll
lret
out
int
lret
sbb
cli
sti
push
xchg
jp
jb
fisttpl
xchg
out
in
xchg
add
pop
xchg
add
rcll
inc
xchg
cmp
test
pusha
mov
aas
jl
ljmp
fstpl
inc
int
xchg
mov
pusha
aas
pop
pop
mov
out
arpl
mov
or
mov
aaa
xchg
or
jo
jecxz
fistl
adc
rcll
xchg
js
jbe
or
roll
jb
rcr
sbb
mov
icebp
xor
mov
fisttpll
pop
ret
xchg
ret
inc
nop
mov
cmp
xchg
lret
pop
sub
cmp
pop
arpl
sbb
cmp
mov
sbb
mov
ja
imul
rcr
imul
and
movsb
fcmovbe
and
mov
add
or
sbb
mov
adc
fwait
leave
icebp
test
adc
jmp
in
or
jle
int
scas
jp
cmp
xlat
lahf
mov
mov
cli
addr16
aad
cltd
enter
push
sti
sub
in
test
mov
fisttps
pop
inc
aad
adc
imul
sarb
inc
add
mov
mov
js
and
cmpsb
inc
inc
dec
lock
mov
pushf
int3
sbb
stos
or
sub
int
addr16
sub
pushf
add
inc
rorl
push
sub
shrb
jnp
mov
lock
jmp
test
cmp
inc
add
loopnew
push
jmp
cmpsb
lea
mov
and
push
fs
mov
cld
jo
pushf
rorl
negl
xchg
nop
add
je
aam
mov
pop
neg
sub
test
shlb
in
lds
loope
aas
lock
mov
jne
mov
outsb
stc
mov
daa
repnz
out
pusha
sub
fwait
jnp
pop
bound
bound
and
hlt
xchg
cld
push
sbb
pop
repnz
stos
sub
jo
lds
loop
jle
jns
pop
or
mov
and
int3
ss
and
jae
push
xchg
scas
cmp
in
test
sub
xlat
and
xchg
aaa
and
pop
add
hlt
add
and
fdivrs
stc
jne
addr16
outsl
mov
gs
outsb
cmc
rorl
inc
push
mov
pop
lods
sub
insl
jl
stc
cmp
dec
pop
icebp
xchg
mov
movsb
jle
xchg
sub
xchg
cld
icebp
lahf
xor
sti
sbb
cmp
cltd
jns
pushl
fdivrs
push
xchg
cmp
mov
add
lods
dec
jmp
xchg
hlt
decl
sbb
push
outsb
pop
xor
xchg
mov
imul
or
inc
cmp
push
daa
and
or
cmp
pop
fnstsw
sbb
and
add
lret
mov
cmpsl
push
push
adc
les
in
nop
xchg
jns
mov
mov
stos
dec
aaa
dec
js
daa
xor
aam
cmc
jmp
mov
repnz
lret
call
push
adc
push
aas
test
loop
iret
mov
out
inc
mov
call
push
xchg
fsubrl
xchg
test
mov
test
pushf
mov
or
mov
cmpsb
testl
dec
test
pop
sub
lea
jne
xchg
sti
xor
sub
mov
mov
aad
adc
add
addb
test
addl
cmpsb
lods
ret
add
adc
xchg
adc
cmp
xor
sbb
push
aaa
dec
fstp
inc
mov
lret
repnz
idivl
loop
adc
pop
rolb
test
imul
testb
roll
shll
outsb
fists
mov
call
or
xor
shlb
jne
pop
arpl
mov
push
push
pop
sbb
stos
enter
pusha
fwait
in
jg
outsb
cmpl
xchg
xchg
jns
push
jecxz
pop
in
out
in
cs
mov
add
or
sbb
ja
popa
push
jp
lods
cmp
cmpsb
in
add
sbb
cmp
sbb
test
adc
xor
shll
xlat
inc
and
ljmp
data16
rcr
mov
idivl
mov
mov
sub
xor
jp
sbb
aam
xlat
testl
fcoml
cmp
lock
dec
loopne
das
or
add
jnp
fidivl
pop
insb
jae
sub
shl
xchg
imul
ds
xchg
dec
aam
xchg
movsl
nop
ffree
mov
cmp
push
or
push
cmp
movsl
lahf
fst
into
test
jp
push
or
lds
into
popa
mov
pop
sub
ss
sub
add
inc
jnp
sbb
pop
cmpsl
stc
cmp
rcll
sbbl
dec
push
jl
push
adc
cmpsl
and
mov
lock
out
popa
pop
shlb
and
push
cltd
push
jb
clc
sarb
dec
fwait
or
and
jno
fsubrs
sbb
dec
out
pop
arpl
adc
clc
nop
inc
shll
mov
xor
jb
mov
popf
scas
inc
cmp
jae
fmul
stos
jne
inc
sbb
ljmp
dec
aas
jno
mov
xlat
sub
push
pop
gs
ret
sbb
ret
push
inc
ss
lret
xor
adc
bound
test
fiadds
mov
push
pop
mov
xor
or
inc
mov
mov
testb
push
insb
mov
xor
cmpsb
lods
test
add
mov
sbb
sbb
add
ss
pop
mov
call
roll
xlat
hlt
int
cmp
mov
call
outsl
jne
pop
jo
pop
lret
cmpsl
lds
add
movsl
xchg
int3
add
or
add
iret
mov
sbb
pop
mov
or
jmp
mov
dec
idivl
test
or
or
sbb
mov
xor
shll
lock
mov
or
jge
lock
ds
mov
pop
sahf
jnp
mov
pop
lods
hlt
int3
sub
push
aaa
insb
mov
bnd
js
popa
dec
arpl
das
dec
shr
mov
mov
inc
jae
inc
cmc
mov
insb
and
aad
pushf
mov
inc
push
repz
mov
outsb
xor
xchg
add
cli
dec
mov
and
rcrl
lret
xor
mov
negb
inc
mov
adc
push
adc
insb
data16
dec
int3
out
mov
push
mov
cmpsl
cmpsl
push
xchg
inc
jl
lahf
mov
gs
push
lds
nop
imul
lea
adc
pop
aam
jge
sbb
mov
incl
jbe
inc
add
or
and
mov
push
xor
leave
les
fmuls
icebp
out
sub
add
or
mov
jmp
mov
mov
xchg
jmp
jl
add
enter
dec
add
mov
mov
cmp
scas
std
xchg
dec
push
loopne
push
inc
ss
cmp
mov
mov
pop
insb
lcall
daa
mov
ret
mov
lret
idivl
imul
and
xchg
test
cli
mov
mov
or
pusha
imul
sub
jbe,pt
xchg
in
dec
dec
ss
push
cmp
add
test
sbb
sbb
sarb
lahf
cltd
lds
notl
lcall
repz
mov
mul
and
rolb
stos
rcrl
adc
inc
sbb
scas
imul
cmp
cld
jg
dec
or
dec
mov
je
stc
cmpsb
add
push
mov
shrb
aam
scas
rcrb
inc
xchg
iret
dec
xor
mov
xor
push
or
rorl
inc
jne
loope
stc
cld
aad
cmpsl
out
fsubp
cmp
lods
fs
xor
mov
addb
into
xchg
and
and
outsl
xchg
push
xor
mov
add
roll
jb
sbb
mov
pop
push
out
lods
loop
arpl
inc
mov
cmpsl
sbb
lods
seta
xlat
cli
js
rcrb
push
sub
andl
mov
lods
jo
test
push
out
adc
lret
pop
insl
sbb
sarb
mov
cmp
pop
das
sub
lcall
jnp
jb
stos
xor
or
scas
andl
add
push
xor
aas
pop
lea
or
movsb
and
inc
mov
jno
inc
mov
or
inc
lock
pop
cmp
sub
mov
jno
sbb
div
lods
mov
aas
xchg
push
or
sub
mov
js
and
adc
mov
cmp
pop
pop
jo
icebp
jmp
jae
mov
xchg
cmp
outsl
cmpsl
push
clc
pushf
jge
mov
mov
aam
or
nop
jae
sahf
jp
mov
inc
mov
rorb
mov
gs
std
enter
dec
sub
dec
dec
xor
inc
addl
xor
aaa
out
or
popf
jge
mov
pop
push
scas
adc
inc
rcr
dec
test
int3
es
sarb
inc
std
push
adc
sbb
mov
andb
pusha
cmp
lahf
jbe
cmp
jmp
mov
das
or
push
icebp
js
fidivrs
and
addb
icebp
mov
flds
fwait
adc
fs
push
sbb
shrb
stos
xchg
mov
shl
cli
stos
mov
daa
filds
in
adc
lret
jno
fldenv
in
daa
pop
iret
ljmp
xor
jecxz
into
pop
cmp
in
ret
dec
sahf
movsb
dec
or
insb
mov
xchg
popf
pushf
ljmp
adc
test
nop
cmpl
in
aas
scas
push
outsb
in
xlat
mov
rolb
or
cli
in
out
je
mov
movsl
adc
sbb
mov
jb,pt
pushl
daa
pop
loope
sahf
mov
push
leave
inc
aam
inc
dec
mov
rorb
fbld
pusha
sbb
cmpb
mov
mov
xor
push
sbb
in
jb
dec
out
mov
jns
enter
sbb
outsb
add
xchg
inc
sbb
mov
cwtl
aas
cltd
test
cli
dec
loope
jmp
and
imul
enter
data16
adc
push
sub
es
dec
loop
enter
xor
imul
cmp
es
and
mov
or
sbb
or
in
mov
imulb
cwtl
adc
pop
xor
ficompl
popf
sbb
jg
push
jnp
cmpsl
xchg
mov
lret
push
pop
ret
fadds
arpl
loopne
inc
mov
push
lock
inc
pop
aad
sub
std
lahf
mov
cmp
ljmp
jmp
cs
fldt
xchg
mov
stos
push
ds
addr16
push
ret
adcb
cld
cld
fsubrl
ret
jp
or
sub
nop
pop
add
pop
pop
sbb
pop
pop
push
xchg
fwait
ror
outsb
imul
mov
fwait
cli
imul
pop
push
cwtl
aam
psrad
loop
mov
popf
fistpll
jo
bnd
lret
jne
mov
add
hlt
and
bound
inc
fcoms
js
cld
sub
adc
mov
dec
out
popf
lods
or
scas
mov
xchg
fiaddl
jp
ljmp
popl
loope
notl
adc
adc
outsl
into
je
hlt
out
sti
repz
dec
cltd
xchg
icebp
inc
clc
das
je
stos
out
mov
ret
cmpsl
dec
jecxz
adc
shl
mov
pop
loop
ds
cs
fiaddl
xchg
aad
mov
out
into
leave
sbb
cmpsb
popf
adcb
repz
mov
daa
mov
repnz
mov
or
push
out
ficoms
pop
inc
loopne
movsb
inc
lahf
orb
dec
xchg
pushf
aas
cltd
ss
inc
jp
rcrb
jne
push
gs
pop
mov
dec
mov
pop
or
adc
fsts
cld
add
cltd
sbb
or
data16
xor
outsl
mov
mov
and
jmp
fwait
push
fwait
push
jbe
or
pop
and
pop
test
add
dec
and
adc
popf
add
cmpsb
mov
je
stc
cmp
push
jp
push
popf
js
std
or
rcll
arpl
push
inc
aam
inc
jne
clc
pop
lret
sub
push
xchg
scas
dec
pop
adc
xor
add
ret
in
push
sbb
add
mov
mov
movsb
mov
aas
aam
or
shll
icebp
mov
pop
sub
jne
fsubrs
data16
sbb
sub
cmp
pop
repnz
mov
cmc
jl
inc
loopne
pop
xor
cmp
mov
lret
aad
pop
sbb
ja
stos
into
mov
lods
scas
movsb
adc
ljmp
rcl
jl
push
out
push
cs
add
jno
aam
dec
cmp
sbb
push
fst
add
cmc
in
mov
or
iret
cmp
xchg
adc
mov
pusha
stc
sar
add
fwait
xchg
jbe
pop
mov
push
cmp
push
mov
mov
sub
jae
or
adc
cmp
jbe
push
mov
sbb
lret
cmp
inc
sbbb
fstpl
loope
ret
aad
daa
or
mov
cmp
loop
push
out
repz
inc
test
or
adc
mov
and
rol
mov
gs
in
loop
outsb
enter
sti
mov
in
out
ja
push
inc
dec
cmc
pop
lea
popf
out
fstpt
ja
mov
dec
aaa
pop
in
and
rorb
sub
lret
jmp
cmpsb
adc
faddp
lcall
jno
scas
pusha
lcall
movsl
lcall
shll
mov
xchg
and
out
mov
mov
push
jno
sbb
mov
imul
pushf
inc
stc
add
fwait
popa
adc
jge
xor
pushf
mov
bound
cmp
mov
movsl
mov
enter
test
mov
ret
xchg
or
push
pop
mov
xchg
movsl
sti
lds
add
mov
test
and
add
xor
cmp
hlt
add
fisttpl
movsl
mov
ljmp
and
ss
mov
outsb
mov
enter
pop
pop
dec
push
push
push
add
cmp
inc
dec
dec
sbb
mov
fsubs
ficomps
loop
loop
sahf
jp
jne
pop
loop
out
je
inc
lret
sbb
cltd
mov
sbb
push
lods
and
jae
mov
out
xchg
shlb
mov
mov
mov
inc
push
push
sbb
pop
jo
pop
repnz
lods
roll
lds
lods
adc
inc
xor
mov
les
das
push
mov
imul
aas
ret
loopne
add
int3
pop
sub
and
test
mov
outsl
or
rcrb
cmpsl
test
mov
xor
and
mov
iret
lea
mov
xchg
sub
inc
movsb
mov
cmpsb
lock
mov
sbb
inc
push
mov
hlt
mov
repz
test
stos
js
sbb
dec
cmp
loope
lahf
xchg
jae
push
cmp
lret
imul
pop
mov
xchg
leave
lods
ljmp
icebp
mov
insb
cltd
es
leave
test
fcmovnb
iret
xlat
jae
xchg
pusha
fstpl
jo
cld
loopne
pavgw
pop
cmp
push
pusha
mov
out
rorl
add
movsb
fiadds
ds
hlt
call
ss
dec
fwait
mov
imul
roll
ret
pop
xor
dec
std
mov
cmp
push
jo
pop
mov
and
gs
mov
aaa
cmc
and
jmp
and
push
mov
hlt
fcmove
jl
inc
or
mov
sbb
outsb
loop
iret
jecxz
push
sub
dec
dec
sahf
push
mov
inc
sar
jp
and
sar
adc
pop
adc
iret
jnp
lds
pop
cmp
lds
imul
mov
lods
mov
loope
pop
push
jp
es
and
inc
daa
push
sbb
lahf
ret
or
insb
adc
insb
in
insb
int
pop
enter
loop
in
into
js
sbb
outsl
push
enter
inc
enter
jae
std
dec
mov
repnz
mov
lods
jne
stos
pop
push
nop
int3
dec
lret
mov
mulb
pop
mov
dec
sti
pop
lea
pusha
jle
in
mov
mov
dec
test
lock
lret
cmp
push
cmpsb
jae
fsubrp
pop
sbb
xor
cmpsb
rcll
idivb
add
xor
in
pop
repnz
or
jp
push
ja
xlat
int
jmp
sub
hlt
sbb
stc
cmp
xchg
bound
adc
dec
push
test
xchg
add
add
lea
test
xor
loop
test
enter
add
jge
mov
inc
pop
imul
push
lret
xchg
jo
test
cmpsb
xor
jae
pop
inc
or
add
add
cmp
out
fwait
mov
and
in
and
mov
sub
add
mov
pusha
lods
pop
aam
rcrb
push
int3
xlat
in
xlat
sub
dec
mov
dec
neg
arpl
cli
dec
jno
outsb
test
sub
enter
mov
aad
outsb
rol
subl
fistpl
or
sarb
jno
and
and
out
aas
inc
cmp
mov
es
cmp
cmp
sbb
pop
pop
mov
and
mov
jo
jbe
std
cmp
loop
xchg
or
mov
adc
push
jno
test
jl
shr
mov
and
dec
fiadds
out
and
lds
add
arpl
jno
add
push
imul
out
xchg
jnp
and
adc
leave
out
pop
pop
pop
jge
subb
push
cmp
stos
dec
mov
repnz
hlt
loopne
in
leave
xchg
push
lds
mov
ljmp
jecxz
push
arpl
movsl
cmp
scas
push
lahf
pop
sbb
test
es
popa
cmp
out
push
mov
jecxz
decb
sbb
fsincos
add
push
rcll
stos
out
sub
add
xchg
mov
and
clc
mov
stos
and
enter
jmp
xor
mov
lcall
cmp
cmpsb
pushf
ror
stos
inc
ds
sti
scas
xchg
mov
xchg
inc
loopne
push
pop
adcb
cld
sti
and
imul
pop
jp
xchg
cli
jno
jle
xchg
shll
inc
jbe
arpl
gs
sub
sti
dec
loopne
cmp
int
cmp
loopne
cmp
sbb
jmp
jb
das
xor
sbb
notb
movsl
inc
je
mov
inc
adc
cmovg
jae
push
daa
push
les
mov
std
and
add
inc
bound
cs
jmp
inc
mov
or
cld
cli
ret
mov
js
xchg
push
mov
aaa
pop
fnstcw
lea
mov
mov
jo
rcr
xchg
das
jb
pop
inc
push
clc
push
test
and
addr16
sub
mov
push
shlb
sub
rcrb
lret
sub
cmc
int
lds
sbb
sarb
sarb
movb
and
into
cmpsb
mov
nop
mov
push
icebp
xchg
cmp
lock
sbb
insb
jp
test
pop
ljmp
aas
dec
clc
inc
jns
jg
punpckhwd
hlt
sub
loopne
call
push
in
ljmp
pop
leave
cmp
ja
push
inc
loop
cltd
js
mov
es
fdivr
or
inc
sarb
out
test
mov
daa
inc
sahf
lds
mov
cmp
out
xchg
xor
add
fs
scas
cwtl
lods
dec
jo
mov
outsb
insl
cmc
pop
cli
and
inc
lea
sub
cmp
mov
cmp
hlt
adc
mov
fnstsw
sub
jle
in
fildl
jbe
xchg
popf
cmpsl
fcmovbe
cs
or
aad
adc
cld
xchg
mov
outsl
add
fwait
pop
das
fisubl
mov
sub
mov
jns
jp
or
cmc
mov
pop
insl
xchg
lret
insl
mov
dec
jno
add
iret
mov
jnp
add
dec
pop
out
jne
fs
push
xchg
jns
clc
cwtl
cmp
aam
push
xchg
dec
adc
arpl
mov
and
sub
nop
inc
sub
xor
mov
lahf
pop
push
dec
imul
outsl
jns
addl
pop
inc
mov
xor
stos
xchg
cmpsb
xchg
fs
arpl
leave
in
jbe
aaa
bound
notb
loop
adc
out
imul
enter
jno
mov
xlat
jmp
inc
mov
lock
dec
inc
fisttps
mov
mov
scas
push
frstor
shrb
cmp
clc
xor
outsl
pop
in
daa
dec
cmpsb
mov
push
jp
sub
mov
dec
cmp
inc
ss
es
in
jns
push
sub
js
in
mov
cmp
mov
mov
sub
adc
shll
xchg
xor
fs
pop
cmpb
or
gs
xchg
or
hlt
lret
stos
stc
mov
pop
lret
fstps
mov
cmpsl
sub
mov
jno
rcll
push
sbb
sti
push
imul
sarb
mov
mov
dec
or
adc
filds
adc
icebp
or
jg
inc
data16
cmpsl
hlt
lods
out
mull
mov
xor
cld
adc
xchg
clc
roll
out
repz
push
cmp
es
or
daa
and
fwait
adc
xchg
fdivrp
sub
stos
call
mov
lock
lea
cli
adc
rolb
inc
cltd
out
adc
add
xchg
cltd
in
pop
xchg
inc
ret
xchg
call
xor
mov
mov
aad
leave
push
mov
push
jmp
push
inc
int
ret
movsb
jb
les
ficomps
cli
pop
cmp
cmp
dec
pop
xorl
cmp
adc
push
or
or
mov
add
or
rorb
loop
cmp
hlt
and
mov
movsl
jnp
add
adc
add
or
and
xor
int
push
mov
fldcw
xchg
jns
imul
cmc
jmp
outsl
inc
push
sub
sbb
jmp
cmpl
fsubrs
mov
pop
call
ret
pop
add
mov
pop
aad
xchg
inc
dec
jecxz
inc
out
pop
fsubs
aaa
loope
add
mov
xor
call
ficompl
sahf
test
sub
mov
mov
xchg
inc
cmp
cli
lds
add
cld
cmp
cmp
out
into
cli
mov
inc
into
mov
jb
cld
xor
adc
mov
xchg
cmp
mov
xor
pop
pop
pusha
adc
cmpb
xor
divb
jno
clc
stc
mov
testl
mov
push
xor
sub
cmpsb
or
sub
mov
xchg
mov
xor
mov
and
lods
rorb
xor
outsl
dec
sbb
cmp
mov
adc
pop
test
adc
popf
mov
xchg
xchg
test
and
insl
xchg
jne
add
popl
mov
addr16
xor
fmulp
mov
enter
xchg
push
adc
loop
cmpsl
mov
mov
mov
mov
adc
lock
es
sbbb
sbb
mov
mov
sbb
push
xchg
dec
into
ficoms
imul
ljmp
mov
jbe
adcl
dec
inc
inc
mov
fadd
shlb
xor
mov
les
sbb
sbbl
jecxz
loop
lds
dec
stos
push
push
jno
fisubrl
int
movsb
jl
push
push
cmc
aam
insl
outsb
pop
das
mov
mov
cwtl
dec
sub
add
hlt
push
pushf
adc
sar
int3
mov
and
insl
or
mov
or
fldcw
insb
popf
mov
inc
inc
push
mov
cmpsl
repnz
loopne
jl
adc
dec
adc
arpl
jle
mov
stos
sub
jb
subb
out
mov
add
cmpsb
push
js
mov
and
xchg
push
jbe
ja
push
mov
ret
mov
mov
rol
ds
or
loope
jg
xchg
adc
push
pop
lods
sub
fidivrl
or
jne
sahf
inc
mov
inc
cmpsb
mov
jmp
jp
lea
mov
ret
lods
push
push
or
lods
in
sub
sub
mov
mov
aas
out
daa
sahf
subb
test
loopne
rclb
jno
test
push
jmp
cld
and
std
cmp
xor
xor
xorl
pop
aaa
mov
xor
jg
mov
loopne
jb
test
sbb
sub
shl
movsl
aad
pop
push
sti
adc
sbb
in
nop
sub
pop
mov
push
mov
and
dec
pop
imul
enter
sti
mov
loopne
lret
int
add
sbb
jecxz
sub
test
mov
and
stos
aad
pusha
dec
pop
adc
mov
cwtl
pop
push
jae
pop
mul
pop
ret
hlt
insb
push
push
aam
mov
clc
fdivrl
push
xchg
pop
dec
aaa
push
sub
add
lea
or
sbb
stc
in
dec
outsb
sub
xchg
xor
cmpsl
mov
ret
nop
push
push
data16
jmp
push
mov
xorl
insl
pop
js
popl
mov
dec
out
iret
fldl
and
adc
out
ret
xor
or
mov
xlat
add
dec
bound
daa
fwait
icebp
lea
sub
f2xm1
sarl
pop
and
mov
inc
mov
mov
jge
test
mov
cwtl
push
hlt
pop
mov
mov
push
popf
dec
insb
inc
out
xchg
jmp
add
jbe
add
fwait
pop
js
int
xchg
js
retw
sub
add
cmpsb
rolb
xlat
xchg
xchg
mov
mov
push
xor
push
cmpsl
jmp
fstps
repz
adc
in
push
mov
test
out
sub
stos
jle
mov
inc
inc
icebp
push
outsb
pop
popa
jmp
aaa
sbb
and
push
aaa
jmp
test
jno
adc
lds
stc
xchg
dec
ja
rorb
cwtl
push
push
roll
lock
add
mov
add
sbb
test
mov
mov
insb
stos
push
bound
vpperm
push
xchg
sub
inc
add
call
push
dec
les
rol
or
inc
adc
jl
out
sbb
jmp
leave
push
push
sahf
pop
test
mov
mov
idivb
repnz
jnp
push
sbb
xor
add
adc
mov
xchg
adc
out
jae
push
add
xchg
xchg
nop
xchg
mov
aam
sahf
inc
das
cmc
xchg
cli
movsb
or
inc
add
cwtl
lcall
cmp
shll
test
cli
jle
iret
lcall
jmp
push
stc
jl
push
sub
cld
rolb
int
push
lea
cmp
les
mov
mov
inc
lea
push
xor
xchg
scas
test
hlt
mov
test
mov
and
add
sti
outsb
cmpsl
inc
cmp
lcall
push
or
inc
out
xchg
ror
sbb
jle
test
and
int
xor
jecxz
fcomps
sarb
pop
mov
jmp
vmovq
sub
stos
sbb
cmp
lret
iret
ss
ss
nop
xor
mov
scas
mov
cwtl
push
iret
cmpsw
mov
addl
xor
adc
adcl
test
out
pop
mov
cltd
sub
daa
cmpsb
pop
pop
jl
mov
cli
ds
clc
sbb
xor
rcrl
bnd
dec
js
cs
mov
or
stos
in
dec
test
mov
movsl
pop
cmpsl
sbb
add
cmp
jo
mov
and
xchg
push
out
ret
sbb
insb
adc
push
jle
sbb
mov
inc
lret
outsb
adc
and
cltd
cmp
mov
adc
dec
xor
lcall
shrl
or
out
mov
movsl
adc
in
or
xchg
cltd
mov
loope
lea
cmpsl
sbb
cltd
mov
sbb
ss
cmpsl
rorl
outsl
xor
push
and
mov
movsl
mov
push
mov
insb
das
fwait
std
movl
insb
fldl
decl
dec
inc
dec
and
cmpl
inc
insb
xchg
cmpsb
cs
andl
cmp
xor
pop
dec
sub
xor
imulb
jle
dec
jecxz
pop
mov
ja
lock
bts
inc
in
test
jl
push
jl
mov
inc
int3
xor
insl
pop
movsb
int
lret
lods
dec
test
pop
into
xor
mov
outsl
repz
lret
add
jecxz
and
add
shlb
pop
jnp
roll
loop
lds
cli
mov
loop
add
pushf
jg
inc
mov
imul
popf
or
mov
arpl
mov
pop
inc
adc
fsubrs
pop
cmpsl
jae
jae
pop
cmpsb
imul
cmp
mov
clc
lea
in
sub
pop
mov
mov
mov
pusha
leave
xchg
pop
mov
pop
push
into
stos
es
xchg
mov
sub
sub
dec
outsl
sub
fwait
xchg
sbb
cmp
cmc
testl
push
lock
or
orb
pushf
jnp
in
repz
cmp
lock
dec
repz
loop
mov
mov
or
out
cmpl
ja
mov
sahf
mov
mov
stos
je
mov
shlb
push
into
stos
mov
push
mov
in
nop
adc
sbb
aas
stos
dec
mov
or
pop
lods
out
xchg
outsb
or
insl
es
in
mov
mov
sub
insb
jecxz
mov
rclb
sub
push
ret
pop
lods
lock
addl
xor
jb
push
sahf
cmp
xchg
add
inc
insl
jmp
mov
shl
fstps
sbb
add
fistpll
mov
int3
int3
jecxz
xchg
jnp
repnz
mov
cltd
mov
in
sbb
addr16
shrb
call
mov
push
push
data16
lcall
int3
insl
stc
fisttpll
jle
pop
mov
xor
sbb
repz
adc
lods
pop
sti
and
mov
push
xchg
je
inc
mov
xchg
sub
in
xchg
dec
outsl
lcall
daa
sbbb
mov
cld
xor
shlb
fs
std
mov
daa
jmp
fnstenv
and
ret
add
pop
mulb
mov
ret
stos
scas
daa
cmp
mov
xchg
push
mov
mov
repnz
sub
jbe
and
and
mov
push
push
jno
inc
dec
sbb
lods
je
or
cmpsl
mov
fisttpll
mov
fwait
mov
stos
push
adc
fistl
cmpsl
and
sbb
mov
out
jae
adc
dec
dec
xor
xor
pop
ret
pop
js
daa
or
push
pusha
inc
or
shl
lahf
sbb
test
cmc
push
ret
pop
pop
mov
in
pop
sbb
aaa
test
mov
inc
popf
cwtl
dec
sti
xchg
push
dec
repnz
jmp
loope
leave
jecxz
loop
or
std
leave
rorb
cmp
or
push
adc
std
test
jnp
adc
add
or
aas
sub
jno
ja
lcall
mov
push
sub
pop
mov
cmpsb
jge
addl
cmp
bound
leave
into
xor
loop
push
imul
adc
in
aas
out
cmpsl
mov
push
sub
pusha
repz
aam
sub
mov
les
xlat
addr16
cmp
mov
pop
cmc
ret
data16
enter
test
adc
jns
sahf
xor
xchg
gs
lret
pop
mov
stc
insb
push
jl
cmp
pop
outsl
das
mov
int3
jle
mov
mov
sub
shlb
push
cmc
mov
inc
jecxz
iret
test
push
loopne
jp,pt
push
loopne
lea
mov
in
stc
iret
adcb
lret
in
inc
mov
mov
mov
pop
jns
sub
sub
mov
mull
sti
adc
jg
push
mov
andl
icebp
pop
pop
int3
dec
xor
ja
ret
orb
push
xchg
lret
fcos
or
leave
pop
out
or
movsl
and
push
push
roll
js
cmp
fs
add
leave
les
fisttpl
sar
pop
push
pop
in
shr
lcall
push
sbb
add
mov
push
jp
xor
out
cs
repnz
dec
and
out
mov
imul
je
jbe
lea
test
push
and
subb
shll
dec
fstpl
shlb
or
int
mov
outsl
stos
cwtl
inc
sarl
test
sahf
lods
pop
mov
or
ja
ss
fisttpl
daa
mov
inc
cwtl
jle
inc
in
lds
adc
insl
mov
sub
inc
or
mov
xor
hlt
jl
jne
into
aas
das
std
das
push
lods
adc
ds
push
icebp
scas
jmp
or
xchg
push
mov
mov
sbb
inc
loopne
and
mov
lods
mov
mov
inc
adc
std
sahf
inc
shl
pop
lods
xchg
int
xor
sbb
daa
stc
mov
lods
sbbb
lods
adc
inc
pushf
rorb
or
xlat
repz
mov
in
jbe
lahf
bound
mov
fcmove
jo
jmp
push
mov
cld
push
ss
xor
xchg
jecxz
mov
bound
scas
dec
xor
ds
xor
in
out
in
push
dec
mov
mov
mov
dec
out
fnstsw
in
mov
lds
mov
push
and
adc
sub
add
ret
xor
rclb
mov
jmp
rcll
jg
cmpsl
adc
dec
in
add
es
pop
mov
sub
inc
test
out
fisttpll
inc
lret
call
sub
adc
fisttpl
int3
ss
pop
sub
or
dec
fidivrl
les
pop
addr16
in
enter
xchg
hlt
les
mov
sub
cmp
das
and
mov
in
iret
adc
fwait
fwait
cmpsb
clc
dec
cltd
fstpt
pushf
inc
jb
cltd
xlat
push
scas
or
stc
shll
std
adc
int3
and
popf
iret
xchg
jle
mov
fisubl
push
call
mov
test
icebp
in
std
jns,pn
ljmp
idivb
test
push
repnz
mov
adc
cmpb
and
push
enter
xchg
lds
call
inc
fnstcw
push
fnstenv
stc
maskmovq
mull
push
push
fcmovnb
sbb
push
mov
add
les
add
and
jl
mov
rolb
push
ret
out
mov
jo
push
sahf
jns
jo
inc
adc
loope
insl
jbe
cmp
movsl
pushf
xchg
lcall
aam
jmp
jg
iret
add
xor
cli
xor
stos
push
shll
jg
sarl
pop
aaa
jg
jno
and
ss
mov
cmp
dec
mov
adc
or
jo
fsubrl
shr
es
mov
fsubl
ds
dec
xlat
insl
cmpsb
or
mov
sahf
fwait
mov
nop
dec
sub
and
pop
test
mov
movsb
dec
insl
jns
pop
ffree
repz
push
add
pop
xor
fistpll
xor
mov
in
sbb
mov
push
pop
sbb
push
push
test
ds
jle
jl
xlat
je
and
xchg
rcrl
loopne
loopne
xchg
enter
push
adc
lods
ja
cld
cwtl
jbe
lods
cmp
add
sub
add
push
lret
mov
cld
push
lods
sti
xchg
fwait
mov
jne
test
or
mov
aas
mov
cmp
cmpsb
inc
mov
cmpsl
adc
mul
jae
fisubs
mov
xor
cli
std
mov
lahf
aaa
cmp
test
dec
sbb
pop
mov
clc
stc
outsb
fnstsw
lcall
cmp
push
int
mov
lcall
sbb
jnp
iret
xor
or
in
inc
xor
enter
mov
xor
insb
in
lcall
mov
fistpll
add
cmp
out
inc
mov
out
lock
jl
mov
mov
stos
cmp
mov
and
xor
cmp
xor
ja
and
inc
mov
cld
lret
sbb
jge
mov
cli
lods
repz
das
mov
cwtl
imul
sub
sbb
movb
mov
shr
imul
xor
gs
xchg
fwait
mov
test
pop
xlat
sahf
pop
jge
mov
lret
push
loop
scas
jo
add
inc
filds
je
fsubs
pop
ja
jecxz
push
cld
call
insl
std
je
arpl
fimuls
jl
fldcw
ja
hlt
pop
das
fisttpl
adc
jns
sub
xchg
ret
rorb
sbb
cmp
and
adc
jae
sbb
pusha
lock
adc
mov
shlb
sub
int3
cmp
cmp
inc
cmp
out
pop
and
enter
es
lahf
push
pop
pop
sub
in
mov
inc
add
imul
cmp
std
push
mov
push
cmp
lock
aas
subb
sbb
jle
pop
jp
sahf
xchg
ljmp
xchg
mov
sub
xchg
ret
jmp
lret
sahf
or
lcall
pop
mov
and
cmpsb
stos
leave
and
sub
sub
add
pop
jp
or
cmc
sbb
sbb
ds
lock
pop
mov
das
stos
push
pusha
les
out
rol
mov
mov
jae
and
push
mov
fildl
cli
popf
pop
push
imulb
cwtl
sbb
daa
in
daa
jg
push
test
and
jae
lahf
add
inc
pop
fidivrs
sbb
in
adcb
or
iret
movsb
out
add
inc
mov
ds
cmp
mov
xchg
lcall
mov
aam
mov
out
and
xchg
dec
and
iret
push
pop
cwtl
or
jns
mov
mov
push
lds
rcrb
sbb
inc
imul
mov
pop
sub
subl
sti
pop
stos
stos
jno
pushf
jle
inc
dec
inc
push
sbb
leave
dec
push
push
stc
loopne
repnz
imul
xorl
lea
or
mov
xchg
sbb
push
or
repnz
lcall
sti
or
push
mov
inc
pushw
stos
iret
sbb
aad
nop
push
jg
lea
cmc
pop
aaa
xchg
xor
stos
psrlq
mov
out
out
les
mov
lahf
jecxz
dec
cs
lahf
in
cmp
ret
sbb
test
int3
loope
fldt
stos
inc
divl
mov
iret
aas
sahf
shr
pop
adcl
clc
cmp
test
popf
stc
add
decb
ficomps
jmp
ret
jno
xchg
test
push
add
pop
orl
in
jbe
in
insb
stc
and
pop
and
and
jl
jae
dec
paddd
int
mov
cmp
out
js
cli
adc
jnp
cmp
loope
cmc
jl
cwtl
lret
pop
out
std
lcall
pop
outsl
icebp
enter
mov
std
mov
daa
mov
adc
cmp
aas
mov
icebp
pop
sti
scas
sahf
pop
mov
mov
jbe
ja
jle
cmpsl
scas
jp
mov
cltd
sbb
roll
push
dec
dec
mov
and
out
mov
insb
mov
fistpl
clc
shlb
cmp
sbb
addl
lods
mov
push
mov
aam
imul
sti
mov
orl
imul
pop
pushf
push
lret
mov
and
in
adc
mov
mov
rclb
scas
add
jno
mov
cmp
dec
std
mov
add
jo
es
stos
and
jmp
lods
fcmovnu
adc
rcll
repnz
mov
fmuls
cmp
cmp
scas
and
xchg
daa
pop
fmulp
push
jp
pusha
lcall
mov
or
sub
je
inc
xchg
pop
push
inc
xor
stc
dec
mov
lret
call
mov
clc
cltd
aad
dec
jmp
xchg
add
je
lahf
enter
stc
inc
push
add
test
xor
xor
adc
je
and
sbb
pop
filds
mov
dec
and
sbb
popa
imul
clc
jl
in
into
pop
adc
adc
popa
and
add
fsubl
inc
fisubl
sub
invd
jmp
test
sbb
in
mov
lea
pop
js
jnp
hlt
in
and
dec
data16
xor
sahf
xchg
gs
popf
aam
xor
divl
push
add
dec
xor
sahf
dec
test
stos
inc
in
mov
inc
repz
push
stc
imul
clc
mov
add
xor
cmp
stc
and
sub
ret
ss
lahf
and
add
inc
gs
xchg
and
mov
sub
jae
lret
push
jge
notb
int
in
jmp
fisubrs
mov
mov
mov
cmpsl
call
jo
adc
sub
fwait
dec
dec
and
jg
test
mov
test
pop
enter
and
out
dec
data16
cwtl
sbb
andl
cli
scas
lods
rorb
jl
ja
pop
push
cli
xchg
pop
popa
mov
ss
cmp
fwait
mov
and
mov
clc
and
aaa
cmp
pandn
push
inc
outsb
blcs
js
sbb
ret
jge
pop
pop
mov
xchg
into
push
gs
adc
repz
cmc
in
fstps
arpl
mov
push
mov
or
imul
ljmp
cmp
push
les
movsb
pop
aaa
repz
fsubrl
xchg
in
or
cmp
insb
test
imul
addl
test
std
and
and
cld
orl
fsubrs
or
pushf
fistl
js
inc
fsubs
out
and
xchg
lock
mov
sahf
ret
fs
and
lock
lcall
in
cmp
ret
fwait
sub
orb
xchg
mov
pop
sub
cmpsl
push
sbb
bound
cmp
ret
loopne
dec
subb
fcomps
adc
mov
loopne
stc
ret
cmp
into
dec
mov
push
xchg
push
and
jnp
addl
mov
and
fwait
in
shrl
jb
pop
aas
pop
lds
inc
dec
sbb
repz
jno
lods
daa
mov
push
je
shrl
mov
mov
xor
mov
push
repnz
jbe
clc
mov
in
cmp
cld
xchg
sbb
or
push
insb
cmc
pushf
xor
cs
sub
mov
das
aad
inc
iret
push
out
orl
popa
fisubl
pop
pop
sub
out
jle
out
jg
jns
or
cmp
mov
cmp
mov
cmpsl
mov
montmul
cmpsb
inc
xor
add
daa
xchg
cmp
add
jne
cli
stos
popf
pop
imul
push
and
int3
daa
in
test
mov
mov
dec
stc
pop
pushf
sbb
adc
mov
mov
lods
or
sub
in
fwait
mov
xor
loope
aas
inc
sub
jbe
sti
lock
rcrb
out
jns
or
rolb
push
mov
jmp
repnz
cmp
ret
fwait
fwait
clc
mov
stc
sbb
pop
mov
clc
push
fimull
pop
imul
sub
push
or
mov
dec
jno
jnp
xor
xor
mov
mov
lcall
scas
nop
rcll
cmp
insb
je
jg
mov
fsubr
dec
loope
inc
xchg
push
inc
cltd
data16
mov
insb
push
cmp
sub
loopne
push
pop
and
div
icebp
ret
xlat
out
mov
and
pop
mov
bound
daa
sbb
jmp
cli
add
std
mov
nop
xchg
std
pop
es
ror
pop
jp
sti
push
and
addl
jmp
sbb
cmpsl
push
mov
cwtl
and
push
dec
and
lock
jp
jo
js
xchg
gs
in
mov
popa
push
popa
aaa
inc
hlt
stos
lcall
repz
mov
xchg
mov
clc
push
lret
sahf
lds
std
pop
fnstenv
in
or
push
imul
stos
lahf
sbb
fidivrl
mov
repnz
xchg
dec
adc
cmc
inc
inc
jbe
xor
subb
enter
mov
mov
loope
fisubs
mov
inc
imul
int3
test
imul
lods
adc
push
dec
ss
in
xor
in
out
cmp
mov
hlt
jle
ror
add
inc
out
inc
adc
ret
jo
push
shll
push
and
enter
dec
ja
icebp
fsubp
or
imulb
stos
xor
and
fdiv
push
fcoml
loop
ljmp
push
pop
aas
insl
sti
xor
into
test
cs
outsb
lret
push
out
sti
or
or
xchg
vmread
pop
test
jp
dec
pop
xchg
mov
aad
cwtl
inc
lods
lds
sub
fcmovb
pop
xchg
xchg
jg
test
out
jbe
xchg
icebp
inc
pusha
stc
fs
scas
faddl
es
xorl
dec
pop
push
fmuls
enter
ds
cmp
cmp
mov
or
mov
or
sbb
xchg
pop
cltd
repnz
cltd
fldl
out
insb
aas
and
jg
add
mov
mov
lock
stos
bound
push
dec
clc
out
or
xor
les
loope
fldcw
pop
cli
jne
mov
lcall
cmpb
or
or
inc
pop
push
lahf
aaa
or
jne
and
in
or
fisubrl
stos
or
fdivs
dec
bnd
add
into
xchg
ret
data16
pop
push
cltd
pop
sbb
lods
imul
mov
orb
int
adc
xchg
pop
sbb
int3
adc
push
cltd
sub
rcr
xlat
out
cmp
pop
jb
jmp
fistpl
nop
insb
int
fildll
addr16
push
outsl
aad
sbb
and
mull
pop
add
push
imul
xor
fadds
inc
fcoms
xchg
or
lock
mov
mov
jbe
push
mov
shrl
pop
xchg
das
xor
scas
adc
xor
jp
mov
jnp
cmp
jg
xchg
jnp
mov
add
sbb
popa
or
lcall
dec
sbb
mov
leave
stos
xchg
xchg
push
push
popa
pushl
out
xchg
sub
cmc
adc
arpl
push
xlat
loopw
and
xor
xchg
push
std
js
in
push
jge
movsl
push
xchg
push
ficoms
movsl
push
pop
adc
into
sub
mov
pop
pop
iret
jno
ret
mov
mov
jle
fistl
cmc
mov
mov
push
unpcklps
aam
fsubrp
aas
repnz
mov
lods
scas
mov
jp
jmp
xchg
lea
cmc
or
push
andb
add
sbb
fmul
jp
cmp
adc
andl
cli
test
mov
scas
bnd
mov
xchg
popf
add
ret
cmpsl
test
pop
loopne
out
lahf
push
jp
inc
sub
iret
jnp
fs
and
cltd
mov
loop
fadds
push
fisubrs
fmuls
fst
loop
xchg
mov
xor
stc
pop
adc
pop
pop
movsl
push
xchg
pop
or
xor
mov
je
in
lea
mov
jnp
jo
cli
iret
arpl
xchg
clc
pop
mov
les
mov
push
repnz
cmpsl
leave
outsl
loopne
dec
sbb
mov
xor
jns
lahf
ror
out
jno
cmp
ds
mov
add
into
incl
mov
movsb
mov
xor
xchg
dec
lock
jmp
test
and
repz
clc
xchg
mov
sahf
stos
ret
pop
fcompl
sub
mov
xor
pop
lods
cld
in
pop
sub
pop
jmp
jmp
mov
dec
leave
sub
jle
faddl
ljmp
aas
adcb
stos
aad
ljmp
aad
dec
xchg
jnp
mov
fcmovnbe
jmp
lods
icebp
push
xorl
pop
jbe
jecxz
jg
mov
push
gs
adc
aad
cmpsb
cmpsb
mov
pop
pop
fists
mov
sbb
data16
dec
jns
lock
xchg
jnp
cld
shll
jmp
outsb
sub
inc
xchg
lods
imul
imul
sbb
gs
enter
imul
movsb
jp
and
sub
push
push
insb
fmul
or
sbb
xchg
xchg
loope
les
repnz
pop
pop
push
rorb
je
dec
mov
pop
mov
fwait
mov
arpl
push
pop
rolb
out
xchg
cli
xlat
pop
lahf
inc
sub
xor
jb
xchg
mov
jecxz
inc
adc
int3
test
and
shrb
stos
push
mov
mov
scas
xchg
sub
ret
dec
lods
push
lea
insb
pop
adc
leave
sarl
push
jne
jo
mov
dec
out
dec
inc
jecxz
femms
ss
xor
sub
push
xor
push
in
aad
mov
repz
test
call
cmp
push
popa
aam
fwait
and
mov
ret
sbb
push
mov
adc
ja
jno
or
lret
inc
add
mov
lcall
mov
js
test
push
jle
movsb
sarb
inc
and
imul
lahf
or
fs
dec
or
stos
fistps
xchg
clc
xchg
inc
inc
adc
loopne
ss
adc
and
lds
aaa
push
mov
popa
xchg
inc
iret
lret
mov
int
adc
xchg
pop
lea
mov
adcl
sub
push
fwait
adc
pop
movsb
mov
jne
mov
xchg
sub
mov
lret
sub
aad
inc
call
stos
inc
into
es
jl
jae
sbb
pop
mov
or
xor
test
jns
xor
data16
fildll
lea
in
sub
cmc
hlt
jmp
mov
sbb
les
call
sbbb
pop
lock
fwait
dec
mov
cwtl
sub
mov
test
xchg
iret
pushf
pop
mov
leave
jle
xchg
cld
push
mov
or
xchg
movsl
mov
sti
int3
sbb
cmp
pop
mov
xchg
sbb
rorl
jno
and
xchg
popa
out
mov
sub
xchg
push
jg
mov
sub
pop
sbb
xor
push
inc
jo
push
mov
and
subb
mov
aad
jg
jg
lods
mov
cmp
into
dec
rcr
inc
inc
pop
xchg
scas
sub
mov
add
and
dec
add
popf
xchg
sbb
test
repnz
fisubs
hlt
xchg
cmp
lea
inc
pop
in
in
inc
fdivl
bound
pop
inc
xor
inc
cwtl
subb
sti
in
mov
lock
push
lods
mov
dec
dec
push
pushf
das
mov
test
sahf
pop
mov
insl
adcl
and
xor
add
sbb
push
decl
jg
loope
pop
xorb
push
shll
mov
cmp
xchg
pop
dec
xchg
push
fs
std
scas
push
dec
xor
cwtl
lret
cs
shll
mov
icebp
adc
popf
cld
imul
mov
fs
jne
scas
adc
push
lods
mov
int
ret
pop
in
insl
les
shlb
fld1
or
cld
adc
xchg
inc
jbe
cmp
jae
aaa
mov
shrb
push
movsl
dec
sbb
and
jne
mov
loope
dec
push
popf
sbb
ret
xor
nop
mov
jo
leave
xorb
lods
sub
mov
xchg
adc
test
aam
lods
insl
stc
mov
dec
mov
mov
scas
repnz
in
mov
ret
jb
pop
nop
ljmp
or
inc
push
jne
aam
ss
lahf
or
fwait
imul
jo
lock
xor
adcl
cli
sbb
movsb
xchg
lods
pop
movsb
mov
les
or
push
pusha
jnp
sarb
inc
addb
sahf
jmp
shlb
jns
xlat
add
rorl
sbb
sub
mov
or
sbbl
mov
add
ljmp
mov
xor
jge
cmpsb
imul
jmp
call
and
push
shrb
adc
sub
fwait
push
lock
xor
jae
xlat
inc
inc
shll
shl
ret
jle
imul
push
cli
adcl
insl
mov
cmp
mov
or
movsb
shrb
arpl
and
jmp
stos
ljmp
int3
push
push
add
es
rorl
test
xchg
stc
mov
adc
add
shll
xchg
or
fisttpl
leave
std
mov
dec
sub
and
add
add
jmp
cmp
or
pop
dec
add
xchg
outsb
mov
std
adc
adc
sbb
and
mov
sub
ss
je
cld
mov
and
cld
ret
stc
pop
lcall
jp
mov
daa
push
push
mov
movb
js
sbb
pop
pop
adc
sub
ret
or
mov
inc
in
std
dec
mov
roll
in
pop
insl
icebp
dec
es
sbbb
sahf
xor
popa
xchg
mov
inc
movsl
shl
gs
ds
jmp
sbb
cmp
inc
fwait
mov
mov
fcmovnb
in
cmp
xor
fcompp
cld
add
popa
call
push
mov
inc
test
jo
mov
push
mulb
pusha
pop
cld
leave
cwtl
lret
jbe
test
push
cmpl
rorb
and
fimuls
fstpt
push
outsl
pop
cwtl
icebp
add
addr16
cld
cmc
cmc
cwtl
call
sar
jp
pop
cwtl
lret
add
lret
test
popa
ficoms
in
xrelease
popf
adc
dec
jae
loope
push
xchg
mov
out
xchg
dec
or
adc
shrb
cmp
and
ja
leave
out
sbb
sub
xchg
jg
xchg
pop
adc
insl
sub
pop
repnz
or
loopne
cli
lea
mov
xchg
mov
mov
loopne
sbb
cmp
push
aaa
insl
int
xchg
std
dec
ss
jno
int
dec
ret
je
test
sub
shll
add
rcrb
cmp
or
sub
lea
into
push
out
inc
pushf
xor
dec
pop
scas
in
scas
xor
int3
mov
outsb
lods
shrl
jb
lret
add
lret
push
add
push
pop
lret
scas
ss
jecxz
lahf
dec
ss
scas
ret
popa
fmull
ljmp
lds
adc
loopne
ja
in
xchg
sub
mov
xchg
mov
or
inc
sbb
or
inc
push
pop
andb
std
mov
adc
inc
shlb
jb
push
es
jl
mov
out
xor
mov
push
or
in
dec
pusha
xchg
aam
mov
js
inc
outsl
movsb
mov
popf
cmpsl
sub
inc
icebp
lcall
insb
not
dec
sbb
lds
ret
gs
andl
dec
cmp
sar
aad
inc
add
ret
inc
jg
pop
add
filds
adc
movsl
push
les
mov
cmpsl
and
dec
mov
jns
jge
leave
push
hlt
in
fistps
mov
xchg
mov
jecxz
cld
sti
sbb
push
mov
pop
jo
mov
in
mov
hlt
mov
ja
rclb
mov
mov
imul
mov
insb
add
out
ret
notl
loopne
mov
sbb
pop
xchg
dec
sub
cmp
loope
and
sbb
inc
pop
mov
ja
sub
push
jnp
filds
push
jnp
inc
sub
pushf
jl
push
arpl
adc
scas
or
add
lods
xchg
pop
and
jmp
dec
scas
loope
xor
push
push
cmp
aad
jae
xor
push
mov
jmp
pop
mov
jbe
scas
mov
xor
sub
js
xor
stc
push
js
cmp
popa
cli
mov
stos
sbb
and
sarb
lods
inc
imul
and
xor
lds
jle
data16
pop
mov
add
jecxz
push
or
hlt
mov
clc
rcr
es
loop
add
xchg
imul
adc
add
nop
pop
sub
xlat
jmp
loopne
icebp
cmp
lds
push
xor
out
sysexit
sti
fcoml
jge
test
test
imul
repnz
rol
mov
dec
gs
xor
cli
leave
ret
fisttpll
sub
test
add
ret
out
lcall
mov
inc
inc
and
sbb
lret
adc
inc
xor
xor
cs
fwait
mov
xor
inc
scas
fcmovnbe
xchg
scas
adc
hlt
push
or
xchg
std
stos
sub
mov
fldt
and
out
imul
sbb
and
cltd
inc
es
out
mov
adcb
push
sbb
enter
repz
shr
addb
add
std
mov
test
add
jge
or
daa
or
or
lret
fldenv
ljmp
adc
test
sub
jae
cmpsb
aam
sbb
adc
add
and
dec
mov
test
arpl
out
bound
sbb
xchg
in
pop
shrb
movsb
mov
cmp
hlt
jno
scas
jmp
xor
in
in
cmp
push
and
pushf
shlb
rcr
aaa
jo
jge
mov
push
jl
cltd
or
iret
movsl
mov
dec
cltd
imull
mov
pop
cmp
jp
pop
adc
inc
es
sbb
or
int3
testb
sarl
insl
lret
sbb
mov
ret
test
stos
rorl
in
popf
mov
and
push
int
push
mov
xchg
aaa
push
hlt
sbb
mov
push
pop
fnstsw
sbb
rcll
push
int
fnstcw
loop
das
xchg
dec
fadds
jmp
arpl
mov
adc
call
cld
dec
pushf
inc
push
inc
push
popf
or
or
push
and
mov
xchg
aad
dec
mov
jmp
out
cltd
sbb
xchg
dec
mov
push
cmp
scas
out
sbb
lock
mov
cmpsb
sbb
cld
fstl
rcll
cmpl
outsl
add
adc
pop
sbb
fldcw
imul
lods
cld
imul
lds
xchg
jne
push
mov
mov
or
ret
add
cwtl
jle
cwtl
dec
pop
sub
les
loop
ds
sarl
jmp
lret
cmp
fwait
in
mov
loopne
dec
scas
jl
mov
sahf
bound
xchg
pop
ds
into
scas
adc
lcall
loop
cld
mov
xor
xchg
imul
push
scas
jecxz
push
xchg
dec
and
jle
popa
les
outsb
push
jae
or
add
mov
adc
mov
repnz
cmp
push
imul
inc
je
xorb
sbb
push
icebp
push
pop
push
icebp
inc
mov
add
pop
sbb
mov
into
sbb
js
dec
lds
aas
enter
jo
cli
sub
js
add
ds
inc
fldenv
es
fucomi
in
gs
inc
adc
dec
ds
ret
ljmp
and
popf
mov
dec
scas
xchg
cmp
sub
cs
js
out
adcl
jl
aad
pop
outsl
cmpsl
mov
adc
sbb
sarl
sub
xlat
sbb
jge
test
dec
mov
jnp
aas
jle
cli
jno
into
push
push
in
jae
test
dec
je
cmp
icebp
gs
fildll
aaa
roll
mov
sub
adc
addb
out
dec
xor
mov
std
mov
pop
jne
xor
cmp
into
ficomps
movsl
std
adc
pop
sub
pushf
pop
cmp
mov
movsl
test
mov
insb
rcrb
jnp
sub
mov
arpl
jmp
addl
xchg
add
call
pop
stos
sub
fcomps
les
icebp
inc
rolb
fwait
mov
dec
pop
mov
ret
xor
xorl
addr16
mov
add
sarb
cmp
jp
rol
and
stos
and
jae
js
pop
iret
jecxz
and
or
lods
mov
int3
ficoml
mov
test
mov
mov
inc
or
scas
fldenv
mov
jbe
ffree
or
sbb
lods
lcall
or
cmp
push
lret
adc
cbtw
push
add
sub
push
sub
dec
cmp
rcrb
cmp
xchg
rclb
pop
or
insb
jne
inc
loop
scas
subl
lret
shll
dec
and
loopne
fmuls
xchg
call
jns
iret
lds
add
cmp
add
mov
negl
or
mov
ret
jl
and
and
into
and
lea
pop
xchg
push
mov
jnp
out
pop
imul
mov
jnp
cmpsb
sub
into
xchg
cmpsl
aad
mov
fildll
enter
jae
jmp
mov
jle
mulb
or
ficoms
pop
mov
scas
into
ficompl
jne
adc
mov
cmp
call
xchg
pushf
aaa
sub
movsb
add
jne
sahf
add
adc
pop
cmp
repnz
leave
xorl
mov
inc
push
nop
js
out
inc
ds
xor
cmp
imul
xor
push
shrb
aam
sub
mov
pop
adc
cld
push
iretw
clc
sbb
inc
subb
add
push
or
xor
jl
inc
xchg
cmp
sub
jne
jb
js
fsubl
lock
sahf
shlb
jnp
out
lds
test
dec
pop
or
stos
inc
cmp
scas
ret
adc
pop
xchg
jge
adc
das
sbb
clc
ja
testb
push
push
pop
arpl
mov
les
imul
cltd
push
mov
jb
int3
cmp
cmpsb
call
vandnpd
inc
jb
xor
cmp
mov
loope
or
inc
add
jb
insb
repnz
dec
mov
mov
ret
jecxz
cmp
mov
jmp
cwtl
shll
leave
adc
push
cmp
push
scas
xor
or
daa
add
mov
xlat
jne
mov
mov
in
inc
sbb
inc
xchg
sub
testl
cmp
ds
pusha
cmpsb
push
and
rcrl
andl
fcom
inc
shlb
mov
xchg
cltd
adc
lock
push
addr16
in
sub
fldenv
xchg
out
imul
hlt
xorb
inc
jl
cli
lret
dec
add
jle
mov
jl
and
mov
push
leave
pop
mov
inc
jae
fiaddl
dec
mulps
imul
std
mov
bound
in
jnp
mov
or
add
cmpsl
xchg
cmp
mov
lods
sbb
dec
dec
sub
call
and
mov
cld
test
fists
xchg
test
cld
xchg
mov
mov
add
insb
pop
sbb
mov
sub
dec
push
jae
xchg
push
inc
sarl
jmp
cmp
cmpsb
idivl
jae
sahf
push
mov
lds
insb
out
sbb
mov
in
arpl
pop
sbb
push
xchg
lods
or
push
stos
pusha
add
pusha
push
test
mov
insl
and
out
lcall
sub
adc
je
xor
and
insl
in
mov
cld
leave
cli
faddl
cltd
es
negl
pushl
xor
out
pop
stos
add
push
xchg
cmpsb
push
mov
popa
and
dec
hlt
out
push
fsts
fsubrl
mov
stos
xchg
scas
iret
ror
mov
ror
mov
jl
inc
out
dec
lea
pop
jg
stos
rcll
adc
push
dec
xchg
hlt
push
fstps
shlb
gs
lea
fnsave
leave
in
jbe
jp
pop
jp
cmpsl
lock
lea
in
adcl
mov
rcrl
mov
inc
add
or
dec
push
adc
inc
and
movsl
call
push
mov
xchg
andb
daa
jbe
insb
mov
rclb
xchg
loopne
jg
test
pop
ds
jmp
add
loope
repnz
xor
mov
ds
fimuls
call
sbb
jg
push
pop
jl
add
pop
jo
outsb
dec
in
pop
mov
xchg
int
fistl
stos
sbb
inc
xchg
pop
into
or
js
push
jns
or
push
adcl
nop
pop
enter
push
insb
xor
cmc
inc
mov
dec
adc
gs
das
sub
movsl
mov
jns
mov
js
bound
and
add
and
out
in
mov
add
movsl
out
test
and
dec
push
inc
cmp
ja
gs
push
cmp
inc
xchg
lret
cwtl
mov
dec
int
shll
jno
push
imul
or
das
shll
out
aas
insb
mov
lods
mov
or
pop
ja
push
add
repz
fisttpll
scas
loop
or
ja
jge
adc
adc
push
add
fstl
cld
jecxz
test
repnz
and
jp
outsb
jl
mov
mov
push
addr16
sti
nop
dec
cs
jg
std
jo
pop
in
iret
sub
or
out
andl
inc
lods
and
push
mov
scas
pop
adc
jns
lock
das
sub
outsb
imul
xchg
sub
iret
sub
daa
xchg
mov
dec
pop
loop
mov
xchg
lea
ret
push
pushf
rcl
or
les
testb
fcmovb
push
sub
mov
cmp
xchg
popa
adc
test
cwtl
daa
add
and
pop
scas
xor
ss
mov
call
or
push
sub
fnstsw
mov
js
xchg
loopne
mov
mov
insb
js
cmp
ftst
andb
int
xor
jecxz
xchg
cmp
jo
in
icebp
inc
nop
or
push
pop
jo
je
jg
fisttps
into
jecxz
push
jle
imul
xorb
or
int3
sub
or
mov
xor
movsb
push
cmp
sub
and
add
jp
sub
jns
jge
out
popf
cmp
test
pop
cmpsb
pop
xorb
push
add
push
fistps
shll
shl
and
sub
orl
mov
cmpsl
mov
in
fcoml
ja
bound
or
xchg
inc
inc
sbb
les
inc
jge
pop
daa
call
fsubrl
ljmp
cmpsl
nop
out
aaa
fistpl
repz
rol
addr16
mov
addr16
pop
or
xchg
xor
xor
lret
stos
push
xchg
mov
test
insb
mov
dec
les
jle
lahf
xchg
rcl
jns
push
insl
in
call
out
imul
cmp
jp
push
jo,pn
lea
out
pop
mov
push
sbb
xchg
imul
add
fldt
js
jno
dec
ds
dec
mov
xor
ficoml
aaa
andl
push
mov
pop
xor
clc
push
fwait
call
test
jnp
mov
scas
testl
cltd
xchg
out
and
sub
outsl
add
dec
or
push
ljmp
jmp
cmp
shr
scas
insb
add
adc
xchg
std
ljmp
cmp
shll
jge
mov
push
jl
cs
popa
ds
or
rcll
das
les
sbb
cmp
dec
xor
arpl
inc
adcb
jecxz,pn
jmp
and
setg
mov
sar
int
mov
xchg
lods
inc
add
sbb
inc
imul
sub
insb
mov
adc
das
hlt
jmp
push
pop
sub
cmp
cltd
cmc
mov
xor
addb
push
push
pop
sbb
pop
jns
jae
jmp
das
xor
icebp
cmc
add
cmpl
rol
cmp
lret
or
cwtl
ret
mov
into
jg
std
mov
jns
rcl
je
xchg
xor
jae
rorl
push
jge
xchg
fistpll
or
in
mov
sti
inc
sbb
in
sahf
leave
mov
cmp
lret
sbb
jle
jp
aas
push
popl
pop
das
xor
icebp
add
std
jae
in
xchg
out
jo
cmp
aad
jmp
push
sub
mov
dec
idivl
aad
cld
lods
ljmp
mov
jno
das
jle
jg
adc
jno
pop
sub
leave
sbb
mov
cmpsb
and
enter
fisubrl
xchg
mov
mov
mov
push
push
jns
sub
xchg
fcmovbe
clc
push
leave
lcall
jmp
leave
jle
jbe
mov
sub
add
ficomps
push
imul
cmp
and
test
mov
mov
cwtl
jb
xchg
hlt
shlb
dec
dec
cmp
lods
stc
and
xor
mov
in
daa
cmp
or
outsl
bswap
sbb
adc
adc
mov
mov
fwait
add
xchg
daa
data16
xchg
dec
test
cmp
jae
push
xchg
pop
test
push
mov
shll
xchg
leave
int3
jge
and
sarb
mull
mov
mov
leave
jg
add
sbb
lret
cwtl
scas
cwtl
stos
js
cld
sub
jecxz
or
pop
push
pop
adc
subb
push
cmp
sub
mov
xchg
movsb
dec
mov
sub
out
dec
xchg
lds
fdiv
xlat
sub
aam
or
xorb
mov
cwtl
rol
cmp
xor
and
sub
push
clc
fists
ret
jb
adc
add
mov
loop
cmp
jb
fdivrs
mov
test
push
lds
shlb
data16
rorl
sub
cmp
xlat
sti
xor
gs
cltd
cmp
leave
mov
jg
int3
aaa
pusha
mov
cmp
lds
adc
cmp
ret
sbb
notb
xor
xlat
pop
sbb
repnz
lods
xor
mov
cli
xchg
add
add
test
and
xchg
subl
add
and
insb
xlat
repnz
add
movsl
mov
mov
jb
insl
dec
adc
dec
pop
lds
nop
fdivrs
pop
and
xor
lock
or
pop
sti
decb
add
pop
jl
mov
dec
xor
xor
xchg
push
aaa
adc
sbb
mov
out
aam
xor
push
xchg
gs
inc
mov
lods
lock
pop
mov
mov
in
andl
in
subb
mov
or
jmp
movsl
sbb
sbb
push
inc
mov
fsubrl
mov
popa
pop
fistl
js
out
adc
mov
in
pop
sbb
ljmp
adc
mov
add
adc
int
inc
mov
mov
add
xchg
xlat
jecxz
popf
in
dec
test
xor
cmp
xchg
aam
mov
and
mov
fbstp
shll
mov
gs
nop
lret
je
fcoms
test
mov
loop
and
push
push
dec
adcl
loopne
daa
lods
adc
ja
pusha
fcmovnb
cmp
sbb
xor
fstps
cmpb
bound
loope
xor
inc
movhps
and
jge
movsl
inc
aaa
movsl
inc
dec
mov
loop
xchg
daa
add
mov
mov
ret
in
mov
sbb
sahf
and
notb
arpl
fcomps
xchg
movsb
mov
es
stos
fisttpll
ja
xlat
clc
xorb
and
scas
mov
arpl
sub
mov
mov
scas
jae
cwtl
pop
inc
lods
pop
push
sub
movsb
fwait
cmpb
mov
loopne
rclb
mov
stc
subl
stc
mov
daa
movsbl
outsb
std
mov
inc
mov
rolb
cli
adc
mov
stos
in
das
aas
lret
sarl
stc
sub
mov
or
jb
and
imul
test
lea
mov
sbb
outsl
fwait
movsb
lret
daa
pop
push
pop
clc
iret
bound
test
loopne
add
add
ja
icebp
adc
shrl
ss
pop
mov
movsl
repnz
lcall
subb
push
out
adc
sub
test
outsl
test
jp
sahf
xchg
fmuls
or
insl
gs
ds
std
aaa
out
xorl
inc
mov
mov
cmp
sub
dec
jl
push
mov
add
xor
test
dec
push
out
subl
or
arpl
insb
mov
mov
dec
xchg
cmpsl
push
mov
cmpsl
pop
adc
push
dec
outsb
mov
add
shrw
add
push
sub
push
add
jno
push
shll
dec
mov
fsubrl
ljmp
sbb
rcrb
xchg
fdivl
add
xor
data16
push
imul
test
call
rclb
lock
fcoms
ja
mov
shr
dec
test
icebp
mov
lahf
sbb
jp
or
xchg
mov
xchg
loop
sbb
xor
aas
mov
sbb
cltd
ja
cmp
inc
add
jo
add
pop
inc
and
xor
fnstsw
and
dec
sbb
cmp
test
mov
cwtl
and
inc
dec
aas
push
pop
jge
and
or
or
repnz
xchg
pusha
jno
sub
out
jnp
jmp
popf
ja
pop
push
adc
insb
jp
nop
out
jb
shrb
in
jecxz
into
adc
in
jbe
and
insl
add
sbb
int
xor
mov
and
sub
jle
popf
fcoms
sub
jle
aam
movsl
les
xor
lock
clc
fwait
dec
or
repnz
mull
sub
sti
pop
pop
jno
aaa
call
lds
inc
test
mov
push
push
inc
xchg
shrl
or
inc
je
std
sub
or
push
jnp
push
fcoml
arpl
enter
test
enter
pop
repnz
or
mov
xchg
in
jmp
or
clc
fcom
cmp
pop
ds
pop
adc
ret
sbb
loope
mov
popl
lahf
xchg
in
sti
add
pushl
add
nop
lcall
pop
cmp
mov
stc
lds
repnz
lret
test
xlat
jge
jo
cmc
sub
xlat
dec
cmpsb
lret
cwtl
fmull
ljmp
lods
ljmp
xchg
dec
je
out
jb
or
fstps
push
push
imul
cmp
inc
mov
mov
jmp
mov
dec
mov
pop
ljmp
inc
cltd
js
xor
push
stc
lret
sbb
cmp
jb
sbb
insl
add
push
in
inc
ds
je
fs
xor
mov
jecxz
and
jecxz
push
mov
adc
fsubrs
rorb
or
push
fiadds
mov
inc
loopne
lock
ja
push
cmovno
sahf
mov
jae
ljmp
sbb
xchg
mov
ds
add
js
jo
aam
jbe
add
add
push
stc
xor
out
scas
adc
jns
ds
aas
inc
into
xchg
andl
inc
fnstcw
jge
jno
repz
ljmp
ja
jnp
sub
enter
mov
je
in
shlb
test
adc
imul
adc
shl
pop
or
loopne
sahf
gs
cmp
call
pop
jns
sar
dec
push
out
ret
ja
repnz
jbe
popf
lods
test
mov
sub
subb
fiaddl
loop
std
adc
insl
movsb
lret
xor
rolb
rcrl
stc
push
push
incb
int
and
mov
xor
or
jmp
xlat
stos
cwtl
xchg
or
sub
call
or
inc
add
out
sarl
jge
stc
pop
sbb
add
jae
sysret
mov
inc
btc
xchg
inc
xor
jb
xor
sub
stos
push
cmp
ljmp
mov
adc
inc
lods
add
dec
sbb
jns
lods
dec
in
push
call
and
test
out
push
scas
add
mov
mov
sub
ja
dec
jg
mov
in
cmp
mov
mov
dec
pushf
test
xor
out
adc
stos
mov
sbb
enter
inc
mov
mov
in
and
sub
adc
mov
out
scas
loopne
pop
mov
or
mov
sbb
movsb
jb
mov
jmp
test
lret
add
test
or
jg
cmpsl
jbe
js
ret
pop
mov
or
xor
adc
add
lock
mov
mov
jne
adc
faddl
mov
push
repz
xchg
idivl
sbb
xor
lret
add
mov
dec
loop
data16
in
mov
xor
inc
fs
out
add
jge
cs
inc
pop
sahf
fwait
addl
dec
out
int
or
push
shll
dec
push
add
sbb
lahf
mov
loop
shlb
sbb
dec
in
lahf
pop
mov
inc
ret
outsl
adc
icebp
xchg
test
clc
sub
dec
adc
les
lea
xchg
mov
inc
paddq
dec
jne
push
sti
sub
leave
mov
adc
cmp
test
or
ffree
out
dec
and
inc
imul
cmp
mov
add
sti
dec
pushf
xchg
iret
jns
xor
mov
push
mov
ja
shll
xchg
je
enter
or
mov
pusha
mov
and
scas
fisubrs
pop
jnp
add
inc
hlt
xor
sbb
push
pop
lret
pop
pop
aaa
xor
les
sahf
pop
mov
xchg
dec
mov
in
cltd
popa
jg
out
mov
popf
mov
popa
pop
mov
pop
pop
and
loop
or
ret
aaa
movsb
negl
sub
jo
pop
addr16
adc
or
mov
bound
icebp
rcr
sbb
je
xor
test
stc
add
sbb
cmpsb
clc
fst
or
nop
cmpsb
loop
jo
and
fisttpl
imul
cs
repnz
adc
mov
adc
shrl
inc
ret
iret
shlb
stc
mov
inc
sbb
adc
in
inc
cmpsb
dec
call
jo
iret
js
aam
sub
subb
outsb
inc
push
mov
je
mov
daa
lock
sub
adcb
lds
mov
movsb
jge
out
lret
mov
fists
imul
pusha
dec
mov
xchg
sub
mov
cwtl
sahf
les
pop
stos
gs
and
pop
pusha
sub
or
jecxz
add
fwait
pop
mov
test
push
insb
cmp
inc
cmc
jo
and
cmp
pop
sbb
mov
xchg
pop
shrb
subps
aas
inc
cli
cmpb
add
adc
enter
mov
mov
sub
dec
mov
fsubl
jne
arpl
xchg
jo
push
jg
pop
adc
out
xlat
or
push
and
aam
inc
shl
das
addr16
sbb
aad
sahf
fcom
xor
in
inc
push
mov
mov
jge
dec
sarb
jo
jno
in
push
incl
xorl
mov
or
pusha
in
inc
fldt
xor
outsl
out
or
ss
mov
dec
imul
lods
or
inc
mov
scas
sbb
das
xchg
movsb
inc
cmpl
inc
lods
fsub
mov
mov
fcmovnbe
inc
mov
out
lods
mov
xor
pop
loop
pop
cld
add
orl
repz
cli
je
lret
sub
push
aaa
dec
adc
mov
inc
es
push
test
aas
jge
movsb
xchg
cmpsl
fdivl
movsl
out
mov
lcall
adc
mov
mov
in
test
aaa
ret
hlt
lret
mov
pop
and
sub
call
jb
xchg
mov
scas
sub
ljmp
je
mov
push
xor
leave
ficoml
andl
outsb
sbb
cltd
mov
int
prefetch
mov
lret
mov
add
jno
decl
xchg
jp
enter
sub
mov
mov
pop
rorl
and
icebp
ss
aaa
jb
rcl
rclb
inc
xor
adc
jmp
mov
pop
push
arpl
test
mov
xchg
test
pop
pushf
dec
pop
pop
adc
push
mov
adc
pushf
sbb
xor
faddl
movsb
xor
movsl
xchg
fdivs
bound
push
pushf
test
mov
inc
movsb
push
cltd
daa
aas
dec
leave
or
callw
mov
sti
xchg
popf
sub
lret
dec
je
rorl
and
mov
aam
add
mov
aaa
push
cmp
push
dec
int
push
pop
jle
mov
adc
leave
sbb
dec
mov
mov
mov
xor
add
jle
jmp
aas
mov
or
xchg
cmp
pop
pushl
push
and
or
pop
adc
incb
je
jne
push
test
jo
mov
mov
add
test
pop
push
jg
sub
cmc
inc
into
xlat
add
xchg
ljmp
cmp
fs
mov
mov
push
lret
lock
rolb
jp
lods
popf
call
int3
out
ds
cmpsw
pop
add
xor
fucomip
adc
sub
rdmsr
cmp
pop
je
cmp
cs
cmp
push
push
adc
pushf
popf
push
sub
ja
jp
fcompl
sbb
mov
shlb
dec
rclw
sbb
fimuls
jecxz
sbb
loop
jl
int3
in
sbb
push
cs
out
scas
sub
adc
sub
lock
sub
push
cmp
jne
cmp
outsw
dec
mov
push
popf
sbb
mov
movsl
mov
repnz
in
leave
dec
dec
sbb
and
enter
nop
adc
cmp
cmp
push
sub
ret
jo
inc
lret
fcom
push
hlt
jnp
fstps
push
push
jge
in
jge
jns
std
or
imul
inc
sub
pop
andl
aad
loope
or
mov
dec
cli
sti
mov
jb
les
and
aas
xchg
pop
and
std
jg
pop
or
add
test
or
jnp
inc
insb
mov
jne
xor
insb
inc
lds
nop
scas
aad
mov
sub
aaa
popf
leave
sub
cmc
mov
les
push
test
cs
lret
push
jl
sub
jo
push
das
lea
lds
mov
repz
aaa
mov
mov
push
bound
mov
frstor
insl
or
cli
cmp
push
adc
and
cli
adc
ljmp
stos
push
lods
loop
jb
fcmovbe
xchg
push
loop
push
into
fstps
inc
mov
lock
test
ss
xchg
cmpsl
push
ret
popf
mov
pop
mov
sbb
ja
ret
popf
sbb
push
sbb
out
and
aad
pusha
dec
push
push
inc
xor
sub
inc
jl
jb
mov
sub
andl
inc
jnp
pushf
cwtl
fld
adc
jb
push
mov
pushf
mov
lods
ret
subl
icebp
add
cmp
adc
dec
mov
xor
mov
xchg
mov
lahf
push
xchg
jnp
sbb
insl
out
xchg
dec
cmpsb
push
mov
ds
loop
imul
pop
push
cmp
add
pop
faddl
mov
sti
cmpsl
inc
push
shrb
push
push
fsts
mov
mov
adc
iret
jno
arpl
stos
sub
xor
mov
mov
mov
into
ret
mov
adc
mov
es
cmp
or
mov
cmp
sub
pop
jecxz
cli
mov
inc
fdivrl
scas
fbstp
jns
jb
add
test
xor
scas
int3
mov
scas
adc
movsl
cmp
loop
rolb
push
fwait
in
cwtl
fmull
fwait
icebp
repnz
hlt
scas
ret
dec
sbb
iret
js
inc
push
pop
imull
push
sbb
jecxz
push
data16
lahf
lock
jle
popa
mov
sahf
fistpll
cmp
mov
or
and
fdivrl
stc
scas
mov
ljmp
sbb
out
jge
fwait
js
fwait
add
adc
mov
sbb
cli
and
mov
jns
popf
jb
pop
aas
ss
xchg
ficoms
jg
stos
mov
and
mov
gs
mov
shll
jne
pop
fnsave
adc
adc
push
fistl
pop
sub
nop
push
dec
js
mov
shlb
leave
aaa
sti
jae
gs
xchg
dec
roll
lret
pop
sub
sbb
add
xor
dec
mov
jmp
and
out
mov
bsf
lods
loopne
cmpsb
loopne
push
mov
xchg
push
adc
or
aad
or
in
adc
out
xor
push
mov
push
sub
mov
roll
cwtl
inc
mov
out
jl
popa
push
jnp
push
sbb
bound
mov
or
hlt
popf
jmp
addb
test
loopne
shl
mov
divb
xchg
sbb
shrb
fs
xor
adc
lea
mov
out
pop
cmp
xchg
leave
xor
pop
mov
mov
jecxz
jmp
push
out
mov
add
pop
sub
push
push
js
inc
cmp
adc
in
pushf
push
pop
cli
movsl
sub
shl
lods
mov
aas
into
dec
lret
and
nop
or
idivl
mov
lret
sub
mov
xchg
imul
cli
mov
dec
cmpsb
add
jo
jge
cmp
push
jp
dec
cmpsb
dec
push
jl
sbb
xorb
and
jp
sti
out
jnp
jns
xor
stc
xchg
jo
inc
xchg
repnz
imul
push
push
cld
mov
fcmovnbe
popl
mov
popf
data16
lods
mov
push
lds
sbb
mov
pop
xchg
sbb
data16
leave
jl
stos
xchg
cmp
addr16
adc
jne
xor
xchg
aam
and
jne
gs
push
dec
and
sub
add
jns
mov
stos
and
cmpsl
loopne
sub
aad
cmc
popw
int
notb
scas
push
add
fisubrl
nop
jns
sub
mov
dec
sbbb
mov
pop
loopne
inc
mov
mov
outsb
sbb
ret
jbe
rcrl
cmpb
add
xchg
xchg
xor
addb
aaa
inc
movntq
movsl
fcmovb
xor
sbb
and
pop
leave
cmp
inc
sahf
cmpsb
inc
push
iret
mov
out
jl
fwait
mov
cs
xor
lock
mov
xchg
cwtl
ljmp
test
iret
inc
mov
pop
mov
jo
jg
xor
sbb
ret
mov
hlt
in
pop
movsb
out
cli
xchg
add
push
xor
popl
xor
and
aaa
pop
daa
push
add
pop
pop
push
daa
sbb
xor
loope
lea
xchg
dec
in
outsb
mov
xchg
movsl
adc
cmp
add
and
mov
pushf
gs
sub
sbb
inc
mov
xchg
adc
mov
jg
dec
or
daa
jge
sti
lock
pop
jge
nop
dec
rcrb
mov
icebp
clc
mov
mov
repnz
outsl
mov
xchg
lock
test
in
pop
fdivl
inc
xor
mov
lret
push
outsl
mov
rcll
xchg
aas
and
jle
aam
test
or
pop
ror
mov
cmp
cmpsl
add
xor
mov
push
pop
scas
movsl
mov
mov
shl
testb
jmp
jl
jne
subl
jns
mov
aam
cwtl
scas
repnz
inc
lds
stc
add
insl
pop
xchg
push
push
inc
mov
jb
loopne
shr
clc
hlt
insb
xchg
repnz
pop
cmpl
pushf
push
and
jmp
or
push
in
fcoms
add
cmpsl
dec
icebp
push
jle
dec
aad
fwait
imul
xchg
mov
movsb
dec
pop
push
add
imul
or
adc
das
test
sub
adc
testl
aas
dec
test
sbb
in
lods
scas
or
xor
hlt
mov
jo
jg
mov
pop
iret
jns
mov
les
data16
pop
pop
sbb
sub
cmpsb
mov
test
jl
lea
push
mov
inc
loopne
repnz
mov
sbb
and
xchg
dec
dec
es
push
xchg
fiadds
scas
push
cld
popf
inc
fildll
xchg
mov
rcll
and
mov
adcl
push
push
cmpsl
mov
insl
or
adc
cli
sub
xor
add
lret
stos
psubq
sub
psadbw
pop
int3
and
sarb
jbe
push
or
push
mov
dec
sahf
out
lods
lock
fwait
xor
jge
pop
iret
fcmovnbe
sub
stos
xchg
adc
jp
jbe
cmpsb
sub
pop
outsl
arpl
je
ss
sti
aas
loop
fs
stc
movsb
cmp
shrb
adc
dec
sub
push
or
imul
inc
push
addr16
push
pushf
mov
ret
fistpl
and
adc
mov
push
jmp
iret
ds
or
std
cmpsb
jge
aam
xor
in
sti
cmpsl
and
xchg
mov
dec
lea
test
hlt
pop
jnp
les
dec
rorb
sbb
pop
inc
sub
out
xor
jecxz
xchg
jl
jl
xor
or
popa
aaa
sub
pusha
sub
pop
jne
sbb
pop
aad
hlt
cmp
jnp
sub
lods
mov
data16
imul
popa
mov
pusha
jmp
lock
or
lock
lea
fs
insl
ret
xchg
shll
loop
jle
add
cmpsb
jb
and
mov
divb
aam
jns
mov
in
cmp
mov
int3
cmpsb
imull
inc
cmp
jno
sub
aam
mov
dec
dec
sbb
je
mov
out
fwait
leave
and
shll
mov
outsl
outsb
push
mov
out
or
subb
ljmp
inc
lods
fbld
rorb
add
xor
jae
pop
push
mov
popa
or
inc
lahf
mov
sahf
int
cmpsb
sub
loopne
xor
add
inc
pop
repz
or
mov
cmp
push
test
fwait
jle
pushf
icebp
mov
std
imulb
das
int
fcoms
xchg
jmp
pop
mov
imul
dec
mov
mov
sti
lahf
push
mov
cmpsb
and
rolb
aas
mov
mov
jne
jmp
sub
mov
adc
das
and
hlt
pushf
lahf
push
cwtl
sub
divl
mov
stos
or
jg
out
adc
push
out
sahf
mov
hlt
xor
push
pop
idivl
xchg
add
push
mov
mov
fmull
jge
xchg
push
jae
pusha
jae
call
add
inc
push
in
xor
fstpt
ss
jge
xor
cmp
jae
sarb
or
sub
pop
popaw
inc
mov
push
adc
mov
pavgb
mov
adcb
mov
mov
jle
xor
cmp
into
mov
into
jo
push
std
test
xchg
push
scas
ret
stos
mov
mov
clc
sub
fs
mov
repz
sbb
xchg
jmp
cmp
sbb
ret
cmp
popl
aam
inc
adc
xor
pop
add
inc
or
repnz
in
insb
xor
das
popf
cs
stc
add
subb
mov
out
pop
adc
cld
xchg
pop
jne
loopne
fnstcw
je
aam
cmp
movsb
sti
test
pop
jle
popf
push
dec
insl
mov
sbb
test
in
fldl
and
mov
sahf
mov
push
int3
ret
neg
sbb
pop
mov
sbb
sub
pusha
cmc
mov
call
cwtl
adc
pop
add
fstps
testb
mov
mov
adc
push
aam
add
add
jl
int
lcall
mov
fnstcw
xor
iret
fidivrs
jae
shr
icebp
loopne
ja
outsl
cmp
cmp
std
outsl
cli
mov
push
mov
add
sbb
push
rorb
fistpll
mov
lods
inc
cmp
sbb
rcll
in
call
cs
sti
sbb
data16
or
push
push
popf
fnsave
xchg
dec
aad
movsb
push
lock
mov
icebp
jnp
cmp
add
xchg
and
sbb
cmpsb
adc
cli
js
dec
push
fsubl
jecxz
xchg
pop
cmp
mov
cmp
mov
dec
lret
scas
repnz
jb
and
or
mov
xor
jmp
fmuls
es
ja
add
mov
mov
pop
xchg
and
mov
int
or
xor
jg
mov
inc
jmp
mov
mov
shr
mov
jl
push
jle
into
mov
jecxz
jb
insb
or
sbb
into
jae
int3
mov
fwait
mov
data16
cmp
cmp
push
hlt
jp
xor
xchg
inc
movsl
lds
pop
dec
cltd
addr16
jb
and
inc
outsl
jb
cmp
out
pushf
cmp
push
pop
jmp
cmp
iret
outsl
psubd
fadds
lea
pop
add
sti
jge
inc
pushf
loope
jne
scas
or
xchg
inc
popf
fwait
mov
icebp
mov
jns
les
cmpsb
movsl
movsl
inc
mov
cmp
call
hlt
ss
jge
pop
jo
push
loopne
jo
lret
popa
sti
lods
cmp
lea
adc
push
mov
jbe
add
add
cld
es
pop
insl
test
rcrb
sub
pushf
mov
cmp
sub
inc
inc
iret
dec
lret
pop
cmp
jp
adc
push
push
aad
inc
and
jnp
fdivp
popa
and
dec
imul
jle
add
outsb
pop
call
dec
mov
movsb
stos
dec
jo
push
push
or
lret
sbb
lds
push
xor
dec
mov
sub
lret
sub
int
push
out
push
inc
jnp
or
pop
pop
test
mov
xchg
mov
std
fxch
cmp
lahf
jae
shl
jmp
dec
nop
mov
stc
sarb
adc
adc
fs
sub
xchg
push
add
and
inc
js
lahf
fcomps
mov
scas
jb
jg
dec
testb
push
inc
or
data16
cld
imulb
ret
inc
lret
int
dec
mov
mov
pop
imul
inc
shl
jns
push
fdivrp
or
mov
adc
inc
cltd
cld
lods
into
pop
push
outsb
xlat
test
xchg
sub
add
push
clc
jae
outsb
and
ret
cmp
call
out
xchg
dec
mov
xchg
adc
call
push
gs
rolb
movsb
inc
lock
add
xchg
lret
orl
inc
or
jecxz
insl
nop
out
imul
mov
lret
data16
xor
push
test
push
cmp
add
ret
mov
aad
sarl
and
imul
mov
or
xor
push
pop
movsl
mov
lock
and
or
pop
data16
inc
daa
push
and
icebp
jmp
push
out
push
pop
js
xor
aaa
xor
jmp
pop
cld
cmp
loope
aas
in
add
ja
fidivs
lock
stos
mov
loopne
loop
cmp
jge
lods
pop
adc
cmp
lods
push
rcrl
push
int3
ret
shll
iret
mov
sub
mov
inc
fwait
push
daa
orl
or
add
gs
sti
dec
das
jbe
jns
jl
sbb
fnstenv
rolb
repz
push
dec
xor
popa
jge
mov
xchg
fdivl
push
movsb
push
jae
into
add
in
pop
ds
cmc
sub
jnp
mov
push
out
cwtl
inc
sti
xchg
call
bound
ror
ret
xor
cs
xchg
xchg
cmc
xchg
xchg
jbe
fnstcw
ja
and
gs
out
push
xlat
mov
inc
js
mov
add
add
test
mov
gs
sub
or
adc
sbb
cmp
adc
aas
cmp
gs
sbb
fisubl
mov
inc
inc
add
sbb
int3
sahf
lahf
adc
adc
rorb
sahf
cmpsl
dec
sbb
inc
arpl
mov
inc
fdivrs
dec
clc
dec
loopne
mov
test
test
cmc
push
mov
push
aad
mov
jnp
mov
sbb
ja
jl
xor
ficomps
shll
insb
xor
and
cmp
and
and
push
loop
lea
add
or
push
stos
ss
andb
fistl
or
mov
jb
out
xor
pop
or
jecxz
xor
and
sub
mov
cmp
idivl
mov
data16
pusha
jo
imul
insl
rcrl
pop
adc
adc
sbb
scas
mov
xor
sub
jmp
test
sti
movsb
je
sbb
popl
dec
mov
sub
fisubrs
popf
adc
fists
xor
xor
clc
shl
cs
test
xor
addr16
movsl
jl
jae
mov
out
fadds
or
xor
jl
jle
xchg
repnz
jl
or
bts
sti
and
xor
or
sahf
es
sub
jne
lds
dec
cli
hlt
and
adc
cmovae
adc
sbb
lods
ret
jmp
ret
int
and
mov
inc
int3
mov
add
adc
add
push
cld
js
sub
mov
aam
das
mov
or
inc
fisubl
out
iret
xchg
cmpsl
imul
nop
cmp
mov
xchg
pop
adc
pop
sahf
clc
aas
cli
sub
xchg
fs
jne
aaa
dec
cmp
add
loop
sahf
mov
inc
outsl
call
or
pop
inc
xor
addr16
fistps
push
inc
push
ret
xor
int3
ret
cmp
push
outsl
and
pop
mov
xchg
ljmp
out
pop
divb
adc
cmp
orb
fs
pop
mov
add
and
call
pushf
mov
xorb
push
push
mov
jmp
lods
fisubl
push
push
push
and
jbe
inc
fsts
fdivr
mov
ret
sti
pushf
jne
or
cli
int3
xchg
cmp
pop
jp
adc
and
jmp
mov
dec
aad
adc
mov
dec
in
inc
out
imul
in
sbb
stos
insl
sub
xor
fwait
push
pop
stos
rcrl
loop
pop
aaa
cwtl
inc
popf
jmp
lds
inc
dec
xchg
push
and
xor
inc
mov
fcmovnbe
sbb
in
jae
or
jg
and
mov
sbb
roll
jnp
mov
iret
jmp
or
pop
jo
in
jbe
pushf
dec
xlat
jp
add
push
or
rsm
outsl
packsswb
pop
push
and
xlat
test
out
call
stos
nop
insb
cld
jle
dec
pop
nop
jno
pop
sbb
xchg
add
or
je
pop
rclb
scas
adc
xor
aaa
mov
shr
lock
lods
sti
movsb
movsl
push
push
or
pop
xor
movb
jo
dec
shll
inc
dec
and
mov
shlb
scas
inc
dec
insb
jnp
mov
jnp
cmpsl
mov
push
jnp
sarb
leave
adc
out
sahf
jle
jmp
or
ja
pushf
jno
pusha
ffree
push
push
xor
pop
add
xor
mov
adc
ss
adc
inc
dec
sub
cmp
push
loop
jne
sbb
sub
or
daa
or
push
pop
dec
out
and
mov
xchg
stc
int
mov
xor
or
cmp
xchg
xor
iret
mov
jns
scas
mov
lss
mov
jmp
aam
insl
dec
scas
pop
xchg
sahf
add
add
jno
das
mov
mov
lahf
jmp
push
shr
lock
dec
ret
mov
neg
into
sub
cltd
jae
int
inc
mov
std
int
gs
fdivrl
insl
inc
push
mov
arpl
xorb
lock
popa
pop
daa
outsl
push
and
pop
aam
or
fnsave
bnd
adc
fcmovu
arpl
inc
mov
jno
jle
mov
scas
call
xchg
out
into
sbb
pop
jp
ja
mov
jmp
stos
and
and
mov
pop
test
dec
ja
test
sub
mov
mov
jb
shrl
cld
xor
jns
mov
mov
mov
mov
addr16
subl
and
and
shll
sub
repnz
mov
mov
mov
xor
std
in
pop
mov
push
push
mov
dec
addr16
adc
roll
ret
lret
cmp
xchg
leave
out
pop
xchg
sub
fnstcw
loopne
cmp
test
xor
stc
push
aad
add
pop
jb
pusha
clc
out
pusha
sbb
icebp
ds
ljmp
inc
loope
and
out
xor
mov
ds
fnstenv
mov
push
mov
xchg
ret
daa
stos
cmp
cltd
les
aam
int3
pop
cmpsb
jns
shrb
sbb
or
int3
dec
out
inc
movsb
jl
idiv
out
test
jge
pop
push
clc
mov
push
or
movsb
push
push
fdivrp
pop
mov
xchg
mov
enter
add
jne
orl
and
loopne
cmpsl
sub
add
and
loope
arpl
jmp
inc
jmp
sub
int3
lods
adc
loope
fdivr
sar
jnp
push
mov
push
mov
aaa
mov
insl
leave
push
mov
loopne
jo
test
sar
mov
roll
lods
xor
and
mov
lcall
leave
mov
stc
ret
and
inc
xchg
test
repz
loope
jno
je
lret
sbb
shlb
scas
repz
test
mov
xorb
pop
xlat
icebp
test
or
daa
mov
in
ljmp
sub
jg
int3
or
xor
sub
push
and
cld
les
push
jne
sub
jmp
sbb
lahf
daa
sbb
push
cmpsb
cmp
lods
negl
fwait
cmc
das
jle
xor
sbbl
mov
ds
mov
xchg
cltd
xchg
outsb
mov
filds
mov
fimull
dec
shlb
jbe
pop
movsb
fsubrs
and
sub
fimull
mov
jl
les
push
push
xor
mov
clc
test
int3
or
repnz
cmp
sti
js
inc
xchg
cmpsb
or
stos
or
push
push
lods
pushf
add
rolb
cmpsb
repz
mov
in
lea
mov
mov
mov
dec
ja
jp
push
daa
cwtl
lods
or
hlt
fwait
mov
xlat
rcr
xor
jmp
loopne
cmc
or
jp
jle
movq
mov
aas
fsincos
daa
mov
fcoml
push
mov
arpl
outsl
scas
adc
mov
movsl
fidivrs
sahf
pushf
xchg
cltd
lret
out
mov
or
inc
and
pop
push
xchg
pushw
shll
adc
jnp
dec
arpl
mov
adc
or
rolb
insl
mov
fdivrp
out
pop
mov
mov
pop
insl
lods
mov
stc
aam
or
nop
jg
fildll
inc
pop
fists
sbb
cmc
lret
cmp
enter
xchg
rcr
sub
adc
gs
xor
dec
push
lods
mov
cwtl
mov
jecxz
insl
mov
test
pavgw
sbb
xor
xor
movsb
push
xor
push
push
mov
xchg
outsl
xchg
and
fnstenv
cmpsb
lahf
and
into
addr16
iret
daa
add
popa
aam
adc
xchg
mov
jl
int
mov
fimuls
icebp
mov
sbb
mov
inc
mov
or
xlat
subb
cmp
and
das
pop
adc
add
mov
aam
xchg
test
fisubrl
insb
mov
sbb
mov
sub
and
jmp
sti
enter
cmp
inc
push
fucom
sti
xchg
test
fnsave
rcl
inc
test
icebp
loopne
add
dec
adc
jb
loopne
adc
imul
lods
mov
test
dec
xchg
mov
stos
loope
sahf
xchg
or
jmp
movsl
cltd
jo
les
or
push
add
scas
sub
jmp
pop
dec
jnp
fldt
sti
pushf
hlt
inc
stc
adc
cmc
mov
enter
scas
in
add
mov
rclb
mov
mov
push
push
sub
mov
lods
add
jle
sub
cmp
lods
ficoms
out
loope
sahf
inc
add
push
mov
iret
mov
jns
repnz
push
cmp
insb
xorl
addl
mov
jae
lcall
scas
push
dec
pusha
xorl
ret
mov
lock
ss
add
cmc
mov
lahf
fxch
pusha
xchg
push
dec
and
insb
xchg
or
sub
rcll
icebp
jnp
test
outsl
or
dec
cli
sahf
jp
enter
fwait
mov
jne
jp
xchg
imul
inc
fdivrl
les
cmpsb
jne
sarb
outsl
add
hlt
subps
and
lods
or
mov
mov
notl
bound
jno
dec
loop
adcb
data16
pop
jo
and
xor
mull
fimull
mov
push
fnstsw
fwait
mov
jno
fs
cmp
sbb
xor
ja
mov
mov
dec
out
shrl
cs
sets
lahf
popa
aam
insl
xor
gs
ret
mov
pop
sbb
sbb
sbb
lret
loopne
js
mov
lea
cld
fistpl
push
sbb
mov
repnz
sbb
lea
outsl
fdivl
fidivrl
aad
sub
sbbb
fnstenv
inc
jp
loop
jnp
or
js
fsubs
or
mov
pop
add
push
or
dec
lret
or
cltd
loop
lret
add
lods
es
mov
adcl
and
and
cmp
add
mov
clc
pusha
out
add
orb
shrl
sub
mov
cmp
stos
push
pop
inc
pop
ja
sti
jl
dec
mov
xchg
ret
push
sbb
int3
pop
mov
imul
push
xchg
pop
xor
jno
out
movsb
fadds
pop
scas
out
push
roll
xchg
fstpt
or
in
dec
pop
add
sbb
add
fistps
ret
jle
es
adc
mov
cmpl
mov
rorl
test
mov
and
test
pop
aaa
or
mov
out
adc
pushf
das
mov
push
fcoml
test
dec
repnz
loop
and
mov
xlat
popa
les
mov
pop
xorl
or
aad
mov
mov
lea
or
push
or
sbb
xlat
sarb
inc
lcall
and
mov
sbb
popa
mov
test
rol
inc
mov
jae
xchg
jecxz
mov
adc
repz
in
ljmp
mov
or
xchg
scas
mov
xor
xchg
xchg
enter
cmc
lds
cld
dec
add
icebp
sbb
aad
frstor
lds
fdivl
push
lds
sub
pshufw
lcall
lret
addb
clc
rol
pop
jnp
mov
stos
xor
xchg
mov
shll
outsl
outsb
jl
pop
stos
push
insl
jp
mov
nop
push
imul
movsl
ret
or
jne
push
mov
jmp
js
xchg
cwtl
pop
sbb
mov
hlt
mov
std
and
icebp
add
mov
in
jae
jb
andb
fdivl
test
lock
dec
pop
mov
add
or
and
adc
adc
into
out
cmp
jg
jg
dec
sub
fadd
negl
push
mov
cmp
mov
test
jmp
sbb
mov
icebp
xchg
vmptrld
test
adc
lods
js
fldt
mov
je
stc
pop
ret
dec
add
inc
and
pusha
xchg
iret
push
push
inc
lea
rcl
inc
pop
jmp
jle
psubq
sbb
cltd
idiv
mov
cmp
mov
dec
das
sub
pop
jno
sbbb
jbe
push
popf
and
mov
int3
mov
cmp
lock
sbb
cs
xor
test
xchg
push
idiv
arpl
jmp
jae
bound
pxor
fdivrs
lret
xor
xor
popl
fdivs
ds
sub
dec
inc
push
sub
jno
call
or
ret
lds
jle
lret
jnp
lret
rol
mulb
inc
call
push
jg
outsb
jbe
sahf
mov
dec
xor
and
dec
nop
addl
sub
push
lret
mov
ret
stos
lcall
aad
push
jnp
insl
xchg
fadd
insb
push
fmuls
adc
mov
pop
imul
push
scas
les
movsl
into
mov
jbe
push
xchg
inc
inc
lret
push
jo
pop
inc
xor
pop
es
out
sub
fimull
sarb
jne,pt
movw
aam
aaa
test
ja
sub
test
ficoml
test
in
pop
push
lds
cmpsl
add
jmp
clc
sbb
dec
jge
cmp
xchg
dec
enter
add
neg
test
popa
pop
or
push
test
mov
out
shlb
sbb
data16
loopne
and
mov
add
dec
mov
mov
pop
add
jecxz
out
cmc
cld
and
jmp
lahf
test
hlt
jmp
icebp
fcmovne
mov
or
and
imul
sub
and
stos
cmp
jb
and
fisttps
nop
xchg
add
pop
xor
mov
mov
xlat
pop
js
jne
dec
loopne
inc
or
popl
push
cld
stos
jae
icebp
in
out
ljmp
pop
xchg
dec
cmpl
or
sbb
fcmovnbe
cwtl
cmp
ja
jae
cmp
shrd
inc
jno
les
lds
cwtl
push
rolb
cmc
rorb
inc
and
cmp
add
sub
inc
enter
xor
adc
cld
xor
or
cmp
in
sbb
repnz
dec
ljmp
add
xor
leave
sbb
in
push
and
ss
xor
or
outsb
mov
fdivs
pop
adcl
push
ja
jg
pop
negb
jg
dec
xor
fdiv
lock
pop
jne
mov
and
imul
enter
lods
pop
push
xchg
dec
es
add
leave
insl
and
or
pop
cmp
in
movl
lods
leave
or
or
push
inc
mov
mov
stos
xor
clc
dec
out
rol
inc
stos
lahf
fisubl
mov
cwtl
jmp
xor
dec
out
scas
lcall
out
cli
xchg
add
stos
push
scas
adc
or
push
std
fwait
push
jg
repz
test
lret
mov
xor
pusha
int3
inc
xor
lret
cmp
rorl
add
mov
cltd
mov
cmpl
sbb
pushf
decl
inc
arpl
xchg
sub
adc
test
out
imul
pop
dec
xlat
js
push
cmp
fcomi
loope
daa
or
out
call
test
lcall
call
arpl
mov
rcr
fs
test
test
jbe
out
rcrb
and
pop
dec
jle
pop
push
push
push
mov
adc
imul
mov
cmp
xor
addl
out
jne
cltd
cli
or
push
mov
and
arpl
das
jae
xchg
push
idivb
jno
int
xor
inc
ficoml
test
in
daa
mov
push
jg
mov
lahf
mov
jo
test
push
loopne
cs
xor
out
es
sbb
add
xchg
add
sarl
enter
inc
mov
test
sub
jp
lds
xchg
dec
lret
std
or
in
pushf
rorl
add
hlt
adc
and
insl
inc
cmp
xchg
xchg
sbb
aaa
repnz
fiadds
inc
and
or
int
repz
bound
jbe
movsl
push
xchg
xlat
inc
into
adc
add
repnz
jmp
movsl
loop
out
lahf
stos
ret
loope
add
out
pop
loopne
lcall
push
dec
mov
loop
adc
jno
mov
inc
jnp
lds
lcall
jle
jb
mov
inc
sbb
mov
lea
imul
in
mov
sbb
clc
insl
daa
ret
cmp
mov
adc
jp
test
jecxz
icebp
dec
sub
sti
dec
sbbl
dec
outsb
xlat
imul
sbb
push
pop
mov
and
mov
pop
jmp
or
mov
adc
mov
loop
pushl
ss
push
mov
pop
mov
push
jge
aaa
sbb
in
lds
xor
iret
out
dec
pusha
incb
push
lock
adc
inc
jecxz
dec
and
insb
add
jle
cwtl
les
loope
sub
and
cmovo
xor
in
mov
push
aaa
jbe
fstps
fcomps
pop
lods
push
push
or
add
int3
mov
test
lock
mov
jecxz
or
dec
sub
dec
xchg
mov
bound
nop
shl
add
dec
sub
lret
mov
mov
mov
aad
ficoms
xchg
js
push
jae
mov
jns,pt
add
movsl
mov
jg
mov
xor
lahf
add
addr16
out
loope
sbb
dec
xchg
fsubl
in
inc
int3
push
rcl
pop
push
pop
mov
data16
sbb
fldenv
dec
push
inc
pop
or
and
add
cli
cs
mov
insb
add
pop
xchg
mov
mov
push
lret
xor
pop
ljmp
cmp
dec
sub
cli
pop
in
into
cmp
mov
and
sbb
mov
rcrb
fildl
stc
pop
lret
rol
mov
jmp
dec
add
push
movsb
or
pop
xchg
cmp
cli
dec
cmc
add
push
mov
push
cld
push
sub
sbb
ret
jp
cmp
icebp
insb
add
pop
dec
sahf
jb
pop
and
push
xor
fwait
and
push
fmull
adc
test
sbb
cmp
gs
jge
pextrw
xor
mov
flds
cmp
shrl
negl
cmp
test
mov
add
adc
aaa
mov
push
pop
fmuls
dec
pushf
mov
dec
inc
mov
insl
icebp
sub
pop
es
sarl
sbb
pop
push
loop
enter
aaa
mull
cmp
jecxz
lahf
jmp
sti
mov
icebp
rorb
push
addr16
jnp
shrl
ret
lods
into
int3
mov
les
and
push
sub
out
jnp
push
js
lret
sub
push
sbb
adc
fstl
jg
flds
push
cltd
lds
xlat
push
pop
add
nop
dec
pop
jb
mov
adc
cmp
sbb
xchg
fsubrp
mov
mov
mov
andl
dec
repz
cmpsl
add
adc
lods
jnp
sub
add
sarb
stc
sub
ja
lods
in
sbb
repz
leave
flds
in
push
inc
jle
push
stos
inc
stc
push
les
xor
inc
and
stos
adc
into
fwait
fs
pop
cs
mov
sahf
in
xor
push
sti
pop
jo
inc
dec
in
es
dec
data16
dec
fdivrp
add
int
xor
cli
or
mov
mov
and
push
shll
inc
and
push
daa
lock
inc
dec
loop
cs
pop
mov
dec
shrb
rorb
fcoml
mov
cmc
jbe
mov
push
and
xchg
add
int3
dec
push
jl
push
jo
inc
movsl
push
dec
das
cli
outsb
jge
mov
rorl
jo
mov
sbb
fidivrl
fistl
adc
mov
jg
lods
sti
adc
ljmp
mov
mov
xor
jg
xchg
stos
ror
xor
imul
pusha
mov
in
sub
movsl
jecxz
lret
int3
shr
push
cmpsb
insl
cmc
shll
hlt
and
pop
fists
sbb
sti
movsb
mov
push
mov
scas
cmp
jp
and
stos
clc
jle
and
mov
adc
cmp
xor
inc
xor
xchg
jge
aam
out
js
mov
icebp
pop
cmp
daa
popf
js
loopne
jge
int3
rorb
es
lds
mov
push
nop
push
pop
sahf
or
in
out
pop
mov
adc
in
inc
lret
enter
out
pop
call
pop
push
into
rcr
jecxz
adcb
cmpsb
xor
fcmove
sar
sub
pop
add
scas
adc
push
movsl
lahf
and
sub
mov
scas
dec
repnz
push
mov
push
adc
loopne
inc
imul
inc
js
addl
decl
ret
ret
xchg
mov
adc
mov
cmp
adc
stc
shrb
inc
cmpl
adc
stos
push
jae
ljmp
cmc
adc
out
mov
adc
call
adcl
ret
aaa
in
cmc
and
sbb
mov
cld
sbb
mov
push
push
pop
pop
loope
hlt
cmp
stos
adc
mov
push
scas
inc
dec
out
push
xor
push
call
insb
and
arpl
fcompl
repnz
ljmp
in
xor
stos
cs
lret
mov
loope
call
inc
enter
push
dec
ss
icebp
inc
outsl
push
mov
jae
push
mov
pop
hlt
dec
sbb
aad
cmp
mov
fists
sub
std
loopne
loop
lock
insb
mov
or
mov
addr16
in
mov
cmp
je
loope
iret
jb
arpl
enter
pop
out
or
xor
orl
or
pop
jne
fcomi
dec
push
cmp
dec
test
in
push
sbb
call
popa
add
mov
pop
out
cmpb
or
js
mov
adc
lods
mulb
movsl
enter
es
jbe
orb
adc
rcrb
pop
loop
out
fwait
pop
xchg
gs
jae
adcl
fwait
es
lea
sub
sbb
ss
insb
lods
imul
cld
xor
pop
jle
test
arpl
pop
mov
push
aam
jb
dec
cmp
pop
in
test
sub
nop
xchg
ds
mov
aas
loope
fs
jge
xor
mov
push
mov
adc
out
mov
ret
mov
mov
movsb
adc
sbb
xlat
push
dec
push
jnp
insb
pop
mov
xchg
cwtl
and
cld
inc
push
cmp
pushl
xor
cmpsb
push
mov
jge
jnp
das
ret
jne
mov
push
test
sbb
pop
jg
dec
xchg
xorl
pop
and
xor
into
movsb
add
mov
lods
add
popf
test
fildl
bswap
rcrb
push
lock
inc
mov
cmp
cli
test
pushf
leave
aaa
outsb
nop
into
adc
das
push
ret
lock
dec
inc
cli
add
icebp
ss
adc
adc
xchg
mov
and
ret
test
sbb
movl
popa
adc
loop
or
push
cmpsb
pop
imul
in
mov
divl
sti
loopne
stos
dec
jnp
ffree
dec
cmp
shrb
jp
xor
jns
insb
sbbb
xor
dec
jne
fwait
mov
int3
jecxz
jno
sub
loop
cltd
cmp
xchg
inc
cmpsb
ja
dec
lods
leave
loope
mov
mov
mov
sbb
rorb
mov
xchg
dec
add
dec
push
ret
dec
test
test
cld
adc
gs
out
mov
sub
test
enter
scas
lahf
pop
insb
pushl
lea
insl
in
push
or
cli
mov
idivb
cmp
sub
or
push
and
or
pop
popw
jmp
pop
icebp
add
aas
scas
adc
imul
mov
into
jae
sub
add
fadds
add
cld
aam
sub
bound
mov
popf
psubb
dec
cltd
ljmp
aam
test
and
popa
ja
and
jb
pop
fnstsw
xchg
insl
cmp
test
push
xor
xor
add
fildll
in
xor
stos
notb
adc
in
mov
cmp
push
mov
test
push
popf
cmp
adc
jno
add
testl
mov
mov
in
cmpb
sbb
add
cmp
jo
dec
sub
ljmp
cwtl
sbb
mov
into
inc
jno
mov
jmp
xor
leave
fldl
das
daa
in
stc
notb
cltd
xor
xchg
jb
sub
jecxz
adc
lods
or
lret
pop
jle
imul
ror
clc
imul
lahf
pop
mov
rorl
cld
xchg
cltd
fdivl
mov
cmp
sbb
aas
loop
xchg
jge
jg
mov
and
test
aas
arpl
adcl
aad
pop
mov
sti
cmp
addl
imulb
mov
pop
aad
cmp
lret
mov
pop
daa
int3
or
sbb
and
pop
xor
dec
and
pop
lds
mov
gs
ja
push
fs
lds
and
push
jp
inc
xor
fcomip
push
jbe
add
or
adcb
add
push
xor
scas
add
ret
clc
ror
jo
nop
cmp
mov
cltd
shll
adc
xchg
and
out
out
mov
adc
pop
dec
in
jmp
xchg
inc
inc
aam
fildll
push
cmc
mov
icebp
in
cltd
sbb
add
movsb
scas
mov
stc
push
adc
jb
bound
xchg
xor
out
cltd
xchg
inc
inc
xchg
cltd
lahf
std
repnz
nop
and
aaa
push
rclb
add
ret
loop
and
mov
lea
jae
stos
mov
pop
cmp
or
lods
mov
or
mov
push
pusha
icebp
jno
test
xor
ss
xchg
sti
data16
or
pop
sub
lret
push
popf
adc
xchg
loopne
mov
rorb
mov
adc
cmp
add
das
xor
pop
cmp
in
sbb
jae
pop
mov
jl
data16
xchg
sub
imul
cmpb
insl
lahf
movsl
addb
push
push
sbb
jge
call
out
movsl
ret
xchg
mov
inc
adc
sub
mov
adc
dec
test
sub
push
in
pop
mov
inc
pop
popf
add
movsl
dec
dec
and
fsubr
into
les
or
sub
icebp
jae
sahf
ljmp
int
xor
popf
ds
or
ret
dec
std
push
rorb
mov
out
push
xchg
cmp
cmovb
int
cmp
sbb
scas
mov
inc
scas
sbb
jae
inc
adc
jecxz
orb
and
mov
stos
mov
xchg
mov
pushl
sub
mov
cs
ljmp
or
lods
xchg
mov
mov
std
ret
ds
cmpsl
pop
sub
aad
adc
pop
ss
xchg
add
out
cmpsl
in
daa
rcrl
xor
in
xor
push
inc
xchg
cs
jle
sti
fsts
inc
jbe
fdivl
push
push
ss
pop
adc
push
push
insl
dec
fs
out
shrb
mov
mov
out
push
out
adc
jo
inc
adc
push
movsl
insl
shlb
sub
je
adc
sbb
sbb
clc
subl
dec
push
mov
push
jmp
dec
out
pop
je
xor
mov
pop
push
inc
js
adc
sub
data16
push
sub
pop
in
mov
jmp
mov
jo
cltd
icebp
daa
push
fs
stc
pop
inc
xchg
hlt
sahf
icebp
addr16
aad
mov
add
scas
repz
dec
xor
aam
in
jno
cmpsb
push
loope
fiaddl
cmp
dec
jno
jecxz
or
dec
sbbb
inc
cmp
gs
shlb
xor
in
mov
dec
or
or
movsb
or
jnp
mov
mov
lret
loop
cmpsl
aas
leave
into
add
stc
cwtl
sahf
push
sub
mov
roll
call
pop
jbe
sbb
lret
push
idivb
sbb
lar
insb
cmp
sbb
dec
pop
sahf
or
xchg
sub
inc
add
addr16
fwait
mov
call
sahf
cmp
push
and
imul
in
cmpsb
adc
outsb
lock
add
cltd
jecxz
pop
mov
mov
out
insl
dec
bound
jb
inc
push
movsl
pop
xor
jmp
hlt
sub
aaa
jbe
iret
xchg
loop
mov
inc
mov
ljmp
mov
enter
and
dec
jg
push
mov
test
fisttpl
stos
xlat
cmp
in
pop
push
repz
pop
imul
ret
dec
cmp
mov
dec
mov
xor
es
fcmovnu
mov
std
mov
ja
movsl
loopne
lods
or
fstpt
cmp
push
popa
jno
shr
hlt
std
add
lret
jne
push
or
ja
inc
lock
vmovntps
and
inc
jecxz
jmp
sahf
scas
and
call
js
fimull
int3
jns
je
jle
jmp
lea
stos
mov
iret
pop
pusha
int
mov
cmpsl
mov
std
jne
bound
mov
mov
push
int
and
cmc
clc
gs
mov
in
out
sar
aaa
mov
pop
cmpsb
repnz
sbb
mov
mov
or
dec
negl
fcoml
xor
jmp
mov
dec
in
popf
adc
arpl
outsl
imulb
mov
mov
lods
imull
repz
and
nop
or
icebp
mov
movsb
mov
push
aaa
sbb
xchg
sbb
es
and
out
lahf
in
add
push
jb
mov
ja
sub
xchg
loope
sub
out
jns
fistpll
iret
std
cmpsl
and
and
xchg
in
aas
sbb
sbb
mov
jmp
cmp
fdivrp
in
jecxz
adcb
mov
ljmp
andl
out
jne
mov
xchg
mov
jo
cmpsb
cmp
jge
mov
cmp
scas
dec
imul
dec
jmp
xorl
push
dec
add
mov
xchg
xor
mov
push
gs
daa
sbb
xchg
mov
sbb
icebp
mov
ja
mov
fimull
mov
push
sbb
loopne
inc
cs
jecxz
cmc
xor
negb
test
call
add
push
arpl
push
loopne
cmc
rorl
inc
dec
dec
in
xor
dec
imul
or
jb
orb
inc
dec
in
insl
sti
inc
xchg
addr16
out
popa
outsb
ret
sti
lea
cmc
repz
fs
inc
loop
outsl
xor
sbb
js
mov
aas
mov
inc
lahf
lcall
jns
sbb
cmpsb
hlt
ret
xor
mov
leave
in
loop
jle
mov
test
clc
xchg
das
xor
xchg
ret
cmp
hlt
adc
xchg
mov
aaa
cmpsb
or
or
and
pop
fwait
lea
xchg
lock
xor
push
sbb
cli
ljmp
dec
mov
xorb
aam
and
in
bound
xchg
cmpsb
cmpl
loopne
std
rcrl
stc
add
mov
popa
stc
rcr
mov
xchg
jns
loop
push
xchg
in
in
and
ret
pop
arpl
sub
test
ja
cmpsl
sbb
adc
pop
or
sub
idivl
cmp
and
dec
sbb
hlt
inc
adc
cli
cmp
fs
xor
xchg
adc
adc
mov
mov
ljmp
rorb
sbb
push
jle
adc
imul
mov
inc
jecxz
test
sbb
mulb
js
jle
cmp
fbstp
lahf
mov
int
and
nop
add
in
sbb
pushf
mull
mov
arpl
sub
inc
aas
mov
push
jle
push
xchg
gs
mov
adc
pop
fs
fs
ds
mov
dec
enter
sub
jbe
imul
sbb
pop
sub
ja
xor
les
fistpll
out
sub
mov
arpl
enter
mov
mov
notl
subb
leave
rorl
and
jb
jmp
push
rcl
xchg
roll
lock
and
icebp
outsl
xor
lret
and
jge
jnp
pop
jnp
pop
sarl
mov
dec
lahf
push
add
cltd
sbb
pop
add
movsl
pop
arpl
push
cmp
into
pop
jne
rcrl
adc
pop
hlt
shrl
pop
mov
add
fildl
and
inc
movsl
test
push
push
xor
lret
add
andb
adc
icebp
dec
mov
dec
std
cmp
push
ljmp
xchg
outsb
les
push
repz
lods
mov
mov
inc
mov
inc
js
or
pop
lock
push
push
push
pop
dec
dec
mov
scas
mov
pop
scas
xor
dec
and
jp
fnstsw
popf
sahf
sbb
out
dec
mov
xor
clc
inc
sbb
scas
and
lock
inc
mov
out
pusha
imul
mov
and
sbb
fs
lock
and
call
and
daa
jb
mov
mov
ljmp
inc
mov
dec
sbb
mov
imul
add
push
push
popf
or
test
xchg
leave
and
popf
xchg
stos
shlb
scas
push
xchg
loope
and
aam
outsl
hlt
arpl
test
dec
sub
data16
inc
loopne
cmpsl
push
xchg
jns
popf
jle
cmpsl
loopne
inc
jg
pop
push
mov
aaa
out
loope
bswap
sbb
repnz
mov
in
out
repnz
pop
scas
jne
sbb
ljmp
inc
js
mov
dec
push
sbb
or
adc
pop
add
lock
pop
lods
jl
lret
cmp
shll
cmp
das
mov
sub
outsl
ret
cmp
stos
sbb
xlat
into
stos
or
lret
and
lds
mov
dec
xchg
cmpsb
leave
cvtdq2ps
sub
or
repnz
mov
xor
mov
inc
imul
pop
dec
fsubrp
and
jecxz
loopne
orb
bound
not
out
xchg
cmp
out
pop
pop
jne
lea
dec
fs
mov
jnp
daa
test
xchg
and
push
jecxz
mov
nop
lret
shlb
push
jp
stc
aam
pop
fs
push
xchg
sub
inc
std
jno
dec
movsl
lods
add
rorb
incb
or
movsb
fidivrs
adcl
jne
or
inc
mov
mov
lods
adc
or
add
cmpsl
sbb
push
mov
xor
mov
or
xor
pop
cwtl
rcrb
nop
pop
xor
lds
sbb
cmp
sahf
mov
lods
xchg
int
adc
xchg
pop
into
cmpsl
jns
xlat
in
lea
mov
pusha
repz
adc
cwtl
jns
pop
jns
shl
enter
jno
mov
sbb
inc
xchg
adc
xor
xor
pop
leave
jge
pop
hlt
push
hlt
lods
add
movsb
fwait
xchg
pop
push
xor
cmovp
mov
pop
cmpl
and
addr16
and
outsl
inc
gs
xchg
daa
pop
mov
cmp
js
inc
outsl
roll
repz
cwtl
and
jb
loope
add
dec
in
push
xchg
subb
push
in
sbb
dec
sub
jmp
or
leave
adc
push
push
cmp
iret
pminsw
and
jg
lcall
ds
ljmp
xor
popf
xor
cmpsl
sub
out
lods
push
pop
push
movl
pop
mov
jns
push
mov
cmp
ffree
pop
and
pusha
mov
out
cmp
filds
jo
inc
adc
push
fcoml
ja
loopne
push
push
ja
lret
xchg
es
cli
add
push
leave
imul
fildll
inc
fs
fisubrs
xor
adc
mov
out
outsb
mov
pop
lahf
test
hlt
sub
xchg
shll
loop
sbb
mov
mov
or
hlt
jo
test
adc
jo
aaa
inc
cmpsb
sbbb
cmp
shl
pop
add
std
addb
cltd
in
xchg
xorl
addl
sub
dec
mov
sub
movsb
std
into
loope
lock
daa
pop
mov
and
pop
not
or
dec
jle
rolb
leave
sub
inc
mov
fstps
push
fadd
jb
push
clc
pop
addr16
and
aad
cmp
or
mov
movsl
int
xchg
xor
cmp
or
or
push
fisubs
push
imul
outsb
popf
inc
dec
push
out
hlt
cmp
push
mov
ja
gs
adc
pop
pop
int
leave
pop
or
mov
call
push
add
mov
xorl
outsl
movsl
in
outsb
mov
adc
int3
mov
gs
xchg
test
mov
inc
sub
stos
jg
mov
sbb
int3
xchg
mov
push
repz
cmpsb
xorl
mov
pop
xor
dec
jo
stc
mov
xor
add
mov
iret
scas
sbb
xchg
push
cmpsb
test
xchg
in
inc
or
iret
dec
bound
aad
sbb
scas
nop
nop
mov
push
sbb
mov
add
push
add
mov
cmp
aas
fistpl
and
mov
pop
mov
cwtl
lods
push
or
incl
inc
aas
cmpsl
in
pop
std
sbb
sub
clc
dec
inc
insb
adc
and
mov
jle
xchg
lcall
dec
repz
sub
push
lods
sub
pop
in
add
mov
sub
dec
rol
cmp
filds
negb
xchg
or
or
lret
cld
jb
pop
aas
jno
repz
sti
mov
or
add
push
dec
movl
dec
or
stos
sbb
adc
jp
aam
sub
jp
jno
cmp
cmpsb
mov
inc
data16
and
mov
test
sahf
push
in
dec
movsl
jecxz
outsb
std
mov
add
cmp
int3
or
mov
add
test
mov
jle
ret
fnstenv
or
cli
or
pop
and
icebp
cwtl
das
pop
lea
dec
fsubr
ja
addr16
aad
jnp
rcrl
push
xchg
mov
sbb
js
cwtl
fstpt
lahf
jne
xchg
and
adc
data16
adc
pop
mov
lret
push
insl
lds
int
lret
mov
cmp
daa
lcall
cmp
mov
gs
pop
outsb
test
mov
hlt
mov
add
scas
lcall
outsb
std
aam
sub
inc
push
add
mov
and
jg
stc
ret
aad
std
es
inc
sub
or
into
repz
out
pop
sbb
aad
pop
out
add
inc
sbb
orb
xor
and
aam
sbb
mov
js
xchg
or
sti
mov
add
hlt
lret
imul
fstps
popa
leave
incl
cmpsl
add
bound
mov
test
lret
stc
inc
jle
sub
xchg
popa
bound
xchg
dec
jno
inc
sub
jecxz
std
pop
rcr
pop
es
push
dec
sub
and
cmp
scas
cmpl
sub
jbe
mov
insb
in
lahf
cmp
adc
fcmovu
ss
lods
cmp
xchg
jl
pop
and
test
xchg
lret
add
xchg
sub
push
add
imul
mov
mov
and
jge
fs
lods
cmpsb
xor
jl
addr16
push
dec
out
push
fildll
mov
hlt
mov
movsb
cmp
inc
jmp
gs
pop
aad
adc
xchg
and
int3
loop
cmp
inc
and
lods
mov
icebp
push
ret
push
ret
push
fwait
pop
jg
cmp
push
mov
std
jnp
mov
fmuls
sub
jmp
push
xchg
or
adc
pop
imul
xor
and
les
xchg
sbbb
xchg
in
push
les
ficompl
mov
xchg
sbb
xlat
test
xchg
test
xor
aaa
push
xchg
mov
push
cmp
mov
leavew
dec
mov
rolb
mov
xchg
and
minps
out
cmovo
cs
mov
or
cmpsl
repz
orl
bound
cmpsb
pop
int3
pop
jbe
test
cmp
fimull
jns
push
push
jns
add
pop
push
scas
loopne
dec
in
add
fimull
xchg
out
sub
jl
cwtl
mov
fisttpl
jge
rorl
icebp
stos
or
pop
mov
imul
inc
jg
cmp
lods
or
outsl
dec
scas
sub
adc
dec
sti
movsl
shll
cmpxchg8b
mov
push
push
adc
mov
push
cmp
shlb
or
fisubrs
pop
lods
jp
inc
push
dec
cmpsb
cld
and
adc
mov
lds
mov
mov
loop
out
jecxz
or
or
cmp
mov
mov
or
xchg
or
lcall
xchg
test
lret
or
popa
xchg
inc
orl
daa
sbb
popa
mov
pushf
jg
push
push
icebp
xchg
ljmp
les
ret
into
xchg
fistpl
pop
fcmove
pop
xchg
cld
rcl
xor
out
mov
inc
stos
pop
cmp
in
cmp
mov
cmc
mov
icebp
mov
add
push
pop
adc
adc
loop
loope
sbb
fucom
repz
push
inc
or
dec
daa
dec
sbb
mov
and
cmpsl
push
or
mov
mov
and
ljmp
adc
mov
aaa
lds
mov
incl
jmp
mov
xlat
xchg
push
jmp
fstps
jne
jb
xor
adc
test
jg
mov
repz
rol
pop
cs
push
adc
ret
lcall
int3
mov
pop
cmp
add
clc
xchg
inc
mov
jns
icebp
in
insl
push
cs
loope
adc
xor
cltd
pop
out
push
andb
xchg
cmc
xchg
xchg
scas
test
push
mov
outsb
dec
imul
subl
fistpl
hlt
push
leave
fwait
dec
cwtl
and
mov
test
adc
movsb
add
cmp
stc
int
bound
aas
mov
jmp
push
pushf
gs
push
das
inc
mov
roll
idivb
dec
es
out
fucomip
push
loopne
bound
lret
cmp
nop
movsl
fimuls
lods
mov
leave
jge
dec
cld
mov
jbe
push
push
popa
fldenv
icebp
mov
jmp
jge
mov
push
sub
dec
adc
fsubs
iret
ffreep
or
and
sbb
lcall
leave
adc
and
cmp
call
pop
lods
jbe
loopne
lods
inc
mov
xchg
mov
cld
lods
cmp
ficoms
outsl
jae
or
xchg
mov
sub
jge
xchg
xor
and
fsubl
es
fnstenv
das
push
and
lcall
adc
xchg
dec
xchg
int
addr16
push
inc
xor
jge
mov
mov
out
mov
push
cmc
pop
out
daa
jmp
js
test
int
cmp
in
lods
lahf
add
cmp
orl
cmc
cmpsl
mov
cmp
adc
lea
fnstcw
jge
push
or
xchg
lock
jne
cmp
sarl
adc
xchg
xchg
xorb
icebp
or
fs
fsts
cmp
mov
push
sti
jg
xchg
inc
mov
cmp
pushf
outsb
jmp
xchg
mov
cmpsl
pop
js
xlat
pop
inc
dec
insl
out
shlb
cmp
mov
pop
or
daa
xorl
cvtps2pd
subb
mov
jbe
lret
jae
pop
fldt
add
xacquire
call
adc
mov
ss
lea
dec
insl
or
sbb
mov
dec
jno
insl
mov
cmc
nop
xchg
mov
inc
cmp
lret
bound
jb
cmp
loopne
je
add
push
rol
push
ja
subb
gs
cmp
push
inc
jmp
or
adc
push
or
popf
xor
call
test
das
cld
xchg
ret
xchg
stos
out
enter
inc
stos
jb
push
dec
mov
push
scas
inc
xorb
out
subb
popa
ds
adc
sub
mov
xor
es
fdivrs
pop
pusha
addl
aaa
mov
push
aad
clc
cmp
add
xor
in
fdivrp
jge
test
mov
sbb
mov
pop
mov
add
sub
lods
les
mov
or
pop
test
mov
fistpl
in
cmp
inc
mov
mov
adc
sti
xor
inc
call
dec
in
jmp
outsl
dec
inc
push
pop
mov
cli
mov
int
test
int
in
test
push
dec
xlat
fcoml
aad
int3
and
fxch
mov
push
imull
adc
xchg
cwtl
cli
fwait
div
inc
add
inc
add
or
push
ficomps
test
xor
adc
jecxz
pop
mov
aad
sbb
ret
xchg
loopne
jo
inc
dec
fsubrs
sub
mov
jle
pop
cltd
je
jmp
in
jns
mov
mov
negb
out
or
mov
filds
jno
les
mov
xchg
addb
stc
sbb
shll
adc
clc
adc
mov
or
sarl
xchg
pop
adc
xchg
orl
adc
mov
test
icebp
int
out
ror
pop
dec
mov
aam
mov
dec
clc
jl
shlb
jle
movsb
push
iret
in
push
dec
in
add
out
das
xor
push
pop
sbb
and
jb
sti
xlat
aaa
mov
pop
pop
sbb
cmp
inc
inc
ljmp
push
cmp
fisubrl
fwait
mov
mov
xchg
adc
pop
dec
xor
xor
jo
push
lods
mov
cli
clc
push
and
lea
adc
sub
stos
std
sarb
pop
ss
dec
xorb
data16
in
pop
inc
mov
sahf
mov
jge
mov
push
xor
xor
cmp
mov
out
xlat
jg
and
mov
fisubl
push
outsb
mov
mov
stos
popa
dec
pop
insb
jo
mov
dec
ret
inc
cmc
hlt
loop
mov
dec
dec
mov
mov
and
sub
pusha
or
std
jbe
aad
iret
push
fsubr
pop
adc
and
pop
mov
pusha
xchg
nop
add
addr16
into
fidivrl
fimuls
lret
push
mov
decb
stc
add
push
mov
xchg
test
test
adc
rcll
inc
mov
stc
addr16
dec
and
pop
lods
insl
and
pop
fnstenv
shll
popa
sahf
dec
xchg
cli
aaa
daa
lahf
jl
pop
inc
jp
aam
jb
mov
loopne
addl
adc
dec
das
xchg
pop
adc
fucom
inc
push
push
jecxz
xor
push
int
xchg
sub
iret
fistps
std
inc
leave
dec
or
mov
dec
jge
adc
lea
cmc
sbb
push
ss
push
xor
sbb
iret
es
cmp
xlat
jae
test
lea
mov
push
test
cmpl
bound
cld
fldt
add
cmp
mov
movsl
ds
ds
ret
outsl
in
pop
pusha
mov
inc
lcall
push
ljmp
sub
jnp
inc
cmpsl
rol
mov
mov
inc
sub
push
cmp
loope
loop
imul
push
pop
stos
or
jp
cmp
cmp
mov
push
mov
xor
jecxz
stos
repnz
xchg
cs
ficomps
xlat
cld
nop
cwtl
xchg
movsb
loope
push
and
xor
and
jl
cmp
mov
in
inc
jmp
mov
inc
imul
xchg
add
jmp
sbb
push
shrb
enter
mov
icebp
adc
cmc
movb
mov
xchg
xor
dec
lret
fldt
pop
dec
adc
inc
mov
test
fdivs
in
cmp
mov
jnp
mov
lret
mov
jae
xchg
in
es
jecxz
out
out
test
add
jg
pop
sbb
out
mov
inc
add
ds
jmp
stos
jmp
pushf
cmc
sbb
lahf
les
mov
push
xchg
mov
push
ud0
dec
jns
jecxz
outsl
in
insb
leave
sbb
insb
stos
pop
inc
push
scas
in
mov
xchg
mov
cmp
pop
add
icebp
adcb
xchg
and
pop
ficoml
daa
xchg
pop
mov
adc
or
fwait
mov
jbe
mov
inc
roll
mov
lea
testl
pop
ret
int
mov
mov
sbb
or
insb
inc
mov
into
xchg
mov
xchg
adc
sbb
mov
dec
jmp
or
inc
loope
mov
sub
push
or
ret
sbb
outsl
push
in
rolb
inc
mov
das
arpl
mov
std
or
insl
out
aas
jg
leave
xor
mov
push
dec
mov
sbb
imul
xlat
and
gs
jno
shr
es
mov
inc
sub
jg
jecxz
rsm
icebp
stos
sub
push
dec
decb
mov
in
ja
add
jo
dec
jae
inc
ja
repnz
clc
mov
out
aaa
int3
mov
dec
cltd
iret
push
fmull
pop
jp
push
mov
repz
jecxz
sbb
xor
xchg
in
fdivl
sbb
js
out
jg
jnp
jecxz
repnz
mov
cmc
dec
mov
or
mov
stos
inc
mov
fisubs
push
stos
inc
sbb
xorb
inc
ret
inc
and
inc
in
repnz
test
orb
xor
icebp
iret
push
lcall
push
fbld
js
sbb
pushf
cmp
jae
mov
and
shlb
call
fsub
jb
adc
cmpsb
adc
stc
adc
pop
adc
mov
jno
xor
or
sub
icebp
and
pop
dec
cmc
mov
iret
xor
mov
in
or
mov
cmpsl
sub
lds
sub
or
ja
aam
cmp
lods
cs
jns
cmc
in
cmpl
xor
mov
out
rclb
out
adc
adc
js
jge
xor
jae
movsb
or
shll
cmpl
mov
inc
cmp
dec
cmp
ja
insl
mov
or
jmp
hlt
mov
mov
dec
and
mov
inc
stc
out
int
push
add
sbb
adc
xchg
cmp
mov
cmpsb
addr16
mov
xchg
popf
push
lcall
ds
outsb
dec
mov
pusha
les
insb
loopne
push
pop
cmc
clc
icebp
push
jmp
pushl
dec
pop
add
pop
dec
fistpl
jecxz
inc
movsl
arpl
fcmovnbe
and
or
or
iret
cmp
dec
xchg
adc
mov
dec
scas
std
add
clc
pop
rcll
ret
xchg
in
in
pop
sbb
push
xchg
rcrl
rolb
adc
ja
and
or
test
mov
into
enter
out
mov
loopne
mov
mov
push
jbe
push
mov
pop
cmp
mov
xor
ja
out
add
cmp
or
mov
aad
mov
push
mov
std
cmp
insb
lret
scas
outsl
inc
jns
xor
lock
sbb
loopne
loopne
inc
mov
insl
daa
jae
cmpsb
out
jmp
iret
dec
imul
jmp
dec
inc
push
lds
lock
sti
scas
inc
pop
sti
inc
cs
sahf
jns
cli
xchg
dec
inc
adc
dec
repz
mov
cmc
in
hlt
adc
push
fnstcw
sahf
cmpsb
lcall
scas
mov
mov
fldl
sbb
insl
mov
shrb
xchg
ret
shrb
mov
push
lret
cmp
cmp
inc
sbb
cmpl
insb
cmp
out
pop
mov
fs
xor
mov
add
push
stos
shlb
cli
cli
in
data16
and
jge
roll
aas
and
pop
push
jb
std
les
lret
cmp
add
insl
jo
push
mov
stc
mov
cmp
in
cs
push
mov
loope
mov
lcall
push
mov
and
xor
cltd
lods
jmp
cs
mov
dec
lods
sub
or
shlb
test
mov
enter
sbb
fildl
into
clc
inc
hlt
push
into
xor
xor
incl
mov
mov
xchg
cmp
cmp
std
mov
aas
sub
inc
imul
push
push
cld
das
xchg
jnp
pop
aam
addr16
mov
cmc
fsubs
mov
enter
in
mov
add
add
adc
add
xor
xchg
ds
fsubs
xor
fcmovnb
cmpsl
test
cwtl
jno
sbb
jns
ja
es
subl
pushf
mov
hlt
fnsave
xchg
mov
push
mov
stos
push
stc
loopne
mov
hlt
data16
xor
mov
dec
mov
pushf
cmp
fwait
cmp
out
outsl
xchg
ret
jl
mov
dec
icebp
into
pop
jmp
xchg
addb
sub
cmp
inc
stc
popf
jl
add
dec
jnp
stos
xrelease
mov
cmc
ror
lret
cmpsb
jecxz
add
or
mov
dec
jno
cmc
mov
jp
arpl
outsb
std
lret
xor
pop
loope
rolb
xchg
pop
xchg
jle
ja
popf
sbb
cmpsb
ds
mov
roll
fbld
dec
push
xor
int3
ljmp
xor
cmp
jne
fnstenv
data16
mov
push
inc
mov
xchg
jecxz
test
outsb
sti
cli
mov
and
hlt
mov
and
lock
mov
into
out
ret
adc
mov
popl
jnp
xlat
and
aaa
jo
xchg
adc
les
xor
push
mov
daa
jp
lahf
in
jb
leave
in
sbb
outsb
sub
push
mov
or
lret
gs
loope
add
pop
jecxz
inc
cmp
mov
or
pop
ficomps
subl
sbb
inc
in
mov
aaa
mov
aam
stc
sub
repz
and
push
jp
jno
cs
xchg
sub
pusha
mov
in
jb
adc
notl
dec
inc
rolb
dec
xchg
jecxz
arpl
std
push
mov
test
rcll
int3
pop
and
xchg
out
cmpsb
insl
pop
insb
aad
dec
fmuls
push
repnz
mov
hlt
hlt
adcl
jecxz
fldcw
push
incb
pushf
adc
xor
icebp
jno
in
push
ljmp
cmp
xchg
gs
lds
xchg
inc
ss
lock
mov
push
pop
jno
aas
xchg
mov
and
pushf
pop
adc
clc
fadd
dec
inc
gs
dec
pop
mov
jno
outsb
mov
in
push
pop
outsl
enter
je
sbb
push
cmpsl
jne
pop
fdivp
aaa
add
nop
out
aad
jmp
and
jmp
outsb
xor
inc
push
roll
mov
inc
cli
nop
shll
icebp
rclb
inc
xor
int3
mov
sub
adc
shll
fdivrl
cltd
sahf
pop
leave
mov
fmuls
mov
xchg
data16
filds
jmp
jmp
add
jae
scas
and
xchg
inc
call
push
gs
cmp
imul
mov
cmp
cmc
adc
inc
leave
jne
sub
mov
push
call
mov
jp
int3
je
adc
jno
cltd
popa
xor
stos
fbstp
int
outsb
lcall
adc
jne
das
sub
cmp
push
cli
jo
sub
test
sbb
or
mov
or
xlat
push
hlt
repz
adc
or
jmp
out
gs
fistpll
arpl
cwtl
test
lods
and
imul
iret
aam
int3
pop
cmp
test
insl
mov
pop
leave
mov
inc
outsl
and
out
fcomps
loop
mov
sbb
je
std
test
loop
in
pop
xchg
test
clc
in
mov
call
mov
mov
es
out
adc
cmp
lahf
fcomps
lock
les
inc
mov
adc
xorl
cli
rclb
or
sahf
loopne
jbe
sub
inc
dec
sub
cmp
daa
mov
out
mov
insb
and
test
lods
pop
sub
xor
fcoms
lret
outsb
cmpsl
stc
out
fs
lds
in
cmp
mov
dec
es
jecxz
lret
call
lea
mov
int3
push
test
repnz
in
cmp
adcb
jl
jl
jmp
inc
sbbb
ja
mov
arpl
mov
test
sbb
mov
jbe
stos
dec
pop
mul
inc
pushf
addr16
pop
mov
sarl
cmc
rcl
fisttpl
leave
sbb
push
test
mov
xchg
push
fcomip
nop
shlb
xchg
inc
adc
mov
or
in
or
mov
and
pop
aad
mulb
pop
or
mov
cmpb
xlat
sub
daa
mov
in
in
fs
push
fstpl
xor
and
lods
out
push
scas
rcr
jle
les
lock
ds
je
adc
daa
or
dec
mov
call
or
rorl
addl
mov
and
out
test
lahf
aam
pushf
xor
inc
ret
cld
icebp
rcl
xchg
add
or
xor
jp,pt
enter
mov
xchg
mull
nop
outsb
mov
adc
std
aaa
not
mov
push
lods
popf
notb
jmp
pop
es
xor
in
iret
lahf
cmp
push
jb
ret
aaa
dec
mov
movswl
enter
jecxz
mov
dec
dec
cwtl
mov
cmpl
outsl
inc
mov
sbb
and
and
stos
rcr
out
mov
inc
jge
mov
cmc
cmp
mov
int3
adc
ljmp
lret
push
mov
stc
addb
les
adc
cltd
cmp
stos
and
pop
jae
or
xor
and
data16
xchg
incl
jno
and
pop
std
test
mov
repnz
lods
sub
add
adc
cltd
ret
pop
sbb
lock
roll
sti
push
aad
popa
lods
or
push
xchg
add
repnz
shl
jp
mov
push
mov
rorb
testb
addr16
dec
push
mov
stos
pop
shlb
test
dec
mov
inc
movsb
add
dec
mov
dec
sub
jne
add
fstl
mov
adc
mov
roll
jb
jge
or
test
pop
jb
cmp
jbe
rclb
fadds
push
data16
jns
fisttpl
sbb
lret
mov
outsb
xchg
enter
test
or
rcll
dec
inc
mov
mov
dec
jmp
jno
in
test
insb
pop
push
fdivrl
jmp
add
push
mov
pop
push
push
aam
adcl
imul
push
mov
xchg
sahf
outsb
call
shll
sub
sub
jp
rorb
mov
sbb
sti
scas
fprem
dec
adc
inc
cmpsb
fmull
jl
ret
mov
insb
test
enter
and
jbe
jno
in
bound
push
push
mov
mov
data16
lahf
jle
test
ljmp
jg
sbb
pop
popa
ret
adc
mov
push
add
lock
js
cmp
jbe
mov
xchg
xchg
out
sub
jecxz
mov
sbb
daa
mov
inc
cwtl
inc
dec
mov
mov
sub
mov
imul
xchg
xchg
sahf
aam
adc
mov
cmp
pop
pop
mov
jmp
insl
inc
es
push
fs
sbb
std
dec
cmp
and
ficomps
xor
jmp
mov
testb
ret
or
jmp
ja
pop
cmpsl
inc
xor
pop
mov
imul
addr16
mov
aas
in
lret
inc
jge
mov
jae
and
jno
push
pusha
negb
adc
out
out
sarl
in
aam
aaa
jge
inc
mov
aam
jle
fbstp
lods
cmpsb
stc
dec
sbb
outsb
stos
movsl
cmpsb
dec
sbb
and
pop
stos
xor
insl
xchg
inc
inc
lock
adc
pushf
xchg
add
sbb
lret
xchg
push
sarl
fcmovnbe
mov
repz
xor
or
or
jge
movb
sbb
push
xchg
inc
jnp
sbb
data16
jnp
fs
mov
cmpsb
pusha
mov
xchg
in
in
sbb
adc
xchg
push
jle
add
xchg
sub
nop
push
jne
pop
and
notb
in
icebp
dec
lods
mov
jmp
pop
cmc
dec
cli
push
test
movsl
lret
xchg
adc
hlt
inc
in
insl
mov
sar
mov
xchg
add
mov
inc
or
push
arpl
push
in
mov
int3
adc
stos
ret
xchg
lds
mov
out
in
out
lock
icebp
sbb
aaa
and
leave
mov
and
fwait
pop
lret
clc
pusha
pop
jecxz
mov
aad
mov
push
lods
lea
gs
mov
push
pusha
inc
xor
or
lea
sbb
flds
pop
leave
cmp
cmpsl
inc
je
ret
mov
mov
scas
jne
das
loope
subb
daa
and
add
pop
mov
mov
shr
jb
cmp
in
xlat
sub
loope
dec
xchg
loop
pop
das
adc
mov
xchg
into
mov
rcr
adc
mov
adc
aaa
out
pop
jmp
rcl
rsm
mov
aas
cmp
rcrl
push
pop
hlt
or
aam
stos
cld
inc
xchg
rcrl
fbld
pop
dec
mov
movsl
std
mov
and
ljmp
jmp
mov
or
dec
jno
lds
mov
mov
xor
or
and
push
imul
fs
fildl
shll
jl
mov
add
cltd
in
je
mov
push
ret
idivl
sarl
lds
fisubs
push
jle
leave
xor
xchg
xchg
sbb
jb
mov
lods
adc
shrl
jae
in
add
mov
mov
and
pop
lcall
hlt
out
insb
movsl
lock
xor
dec
jns
push
dec
arpl
mov
mov
stos
adc
ret
lcall
cmp
add
mov
adc
xchg
lock
sbbb
push
mov
or
pop
mov
addr16
ds
scas
add
cmp
lcall
addr16
dec
popf
adc
lods
sbb
mov
loopne
clc
arpl
jle
fs
push
lret
sbb
sub
fbstp
and
sarb
inc
jp
inc
dec
rolb
xchg
aas
xor
packssdw
jo
jae
or
xchg
dec
stc
cmp
pop
cmp
mov
sub
jecxz
jl
adc
sbb
mov
jb
out
mov
lock
pop
les
dec
lds
sbb
ljmp
cltd
dec
into
inc
fwait
scas
sub
pop
add
test
add
in
ret
dec
or
pop
mov
js
test
jecxz
xchg
push
fsubrs
nop
daa
and
and
push
fwait
inc
leave
hlt
xchg
test
push
dec
ret
popf
movl
inc
xchg
push
popa
lds
int
scas
push
and
sub
out
cmpsb
push
imul
out
push
lods
scas
or
push
je
pop
scas
push
fsubs
into
das
into
sub
and
jbe
adc
gs
imul
fldt
ret
fildll
jg
mov
jle
inc
xchg
lods
mov
outsb
outsb
es
inc
pusha
push
push
aam
pop
stos
mov
cmpsb
fistl
ss
rcll
orb
sub
mov
push
leave
mov
or
xchg
inc
adc
sbb
out
cs
popa
mov
sub
leave
mov
filds
mov
out
lods
movsb
ss
mov
addr16
xor
daa
cld
iret
mov
dec
and
adc
inc
in
int3
xchg
dec
cmp
jmp
mov
xor
pop
xor
xor
in
or
add
adc
fs
aam
pop
push
fimull
into
aaa
sub
adc
pop
or
or
cmp
mov
or
orb
add
and
jae
cmp
pop
or
mov
cs
lcall
jg
xor
mov
fdivrp
shll
fsubr
js
roll
fdivs
mov
or
cld
mov
arpl
and
xchg
mov
pop
jne
lock
jo
sub
dec
adc
std
lock
ss
leave
sub
sbb
pop
cmp
mov
lds
add
add
push
xor
xlat
xor
into
add
outsb
dec
in
cs
fldl
xchg
lcall
lahf
push
pop
add
mov
inc
loop
jecxz
hlt
je
popa
sbb
les
adc
xchg
outsb
xchg
int3
pop
sbb
cvtpi2ps
test
cmp
idiv
mov
cmp
fidivs
mov
cmp
dec
cltd
ret
jmp
paddd
lock
add
jno
mov
and
mov
and
test
push
rorb
outsb
out
movsl
xchg
adc
sub
add
xchg
dec
push
insl
lods
test
addr16
adc
fsubl
sub
js
add
cmp
das
jp
pop
cs
or
inc
jbe
inc
test
pop
gs
pop
pop
repz
loopne
fs
or
pop
pop
fists
adc
cmp
xor
cli
lea
imul
and
pop
and
test
inc
pop
stos
arpl
jge
xlat
pop
lds
repz
jo
or
or
les
pop
cltd
aaa
mov
pusha
ror
aaa
insb
ret
xchg
cmp
adc
iret
push
hlt
repz
cltd
ret
jg
lret
mov
rep
aam
mov
lea
and
xor
push
push
add
test
push
mull
jge
ret
xchg
addr16
pop
movsb
push
mov
sub
push
stos
dec
imul
cmp
push
mov
cld
mov
out
and
mov
repz
out
das
pop
push
test
scas
and
dec
jl
push
xorl
sbb
stos
dec
mov
ja
ss
jo
repnz
or
add
dec
pop
pop
cltd
fdivrs
cmp
sti
mov
add
sti
stos
mov
pop
clc
or
or
out
jb
push
pop
pop
push
loope
cs
dec
nop
or
iret
lds
xchg
and
std
pop
push
ror
sbb
xor
jge
lret
sbb
pop
arpl
pop
add
iret
mov
dec
ja
sbb
xchg
enter
pop
sbb
push
xchg
test
jno
inc
je
aam
into
or
addl
outsl
arpl
mov
xchg
loope
wrmsr
sbb
fdiv
mov
jae
dec
sub
cmc
fldcw
sub
add
cmp
add
sbb
push
out
pop
outsl
pop
out
fisubl
mov
push
fs
in
mov
xchg
and
pushf
imul
nop
push
inc
mov
dec
xor
mov
arpl
xlat
imul
shll
and
pop
fmuls
negl
mov
repnz
sbbb
enter
pop
cmp
pop
loop
test
aam
xchg
adc
rcrl
lea
sbb
insb
jno
push
andl
ret
and
push
subb
aas
pop
pop
xchg
iret
test
outsb
cwtl
lea
add
test
add
or
fsub
das
xchg
xchg
mov
movsb
ret
inc
rcll
out
andl
cld
sub
sub
jle
roll
sbb
mov
and
and
dec
daa
ds
addr16
jl
and
mov
sub
mov
cwtl
xchg
imul
lods
or
cmp
dec
inc
cmp
fucom
hlt
pop
jg
fwait
outsl
xor
lock
mov
outsl
int
inc
mov
sbb
sarb
testl
and
xor
jnp
pop
mov
iret
jbe
aam
fsubrl
lds
adc
xlat
pop
das
inc
adc
pop
sbb
jl
mov
out
jae
repz
and
sub
add
test
lea
inc
inc
pop
mov
out
sbb
jp
or
mov
inc
cmp
ljmp
les
push
jne
sbb
shrb
shl
cmp
stos
push
inc
pop
xchg
outsb
das
push
out
or
pop
xchg
out
lcall
insl
mov
mov
in
sbb
mov
sbb
fimuls
out
sub
xchg
adc
xor
repz
add
xor
lock
dec
in
outsb
push
sub
insb
mov
jns
add
add
xchg
push
das
sarb
pop
pop
add
pop
cmp
adc
xlat
sti
aad
mov
rep
push
sbb
xchg
mov
in
sbb
stos
call
out
sub
sbb
xchg
jbe
pop
xlat
movsb
sti
sarl
xorb
pop
inc
pop
out
jle
xchg
pop
sub
or
add
ja
pop
jae
and
das
jbe
lret
or
and
ret
lahf
mov
call
enter
or
imul
mov
inc
stos
ret
or
inc
and
inc
mov
adc
mov
in
roll
fmuls
mov
loopne
addr16
fsubrl
jo
ljmp
andl
xchg
fdivp
push
je
or
test
pop
cltd
in
push
sub
cwtl
mov
xor
shr
data16
xor
jo
addr16
dec
lcall
xchg
and
cs
in
imul
adc
xchg
cltd
sub
push
jo
daa
es
add
mov
fldpi
mov
les
fs
inc
xor
push
dec
insb
and
jge
daa
fs
lods
jl
lret
clc
cmp
pop
adc
xchg
sbb
push
dec
icebp
addr16
jl
or
sbb
xchg
cld
ret
xchg
jne
lcall
insl
ds
cmp
jmp
adc
xlat
cmp
mov
mov
sbb
sub
add
inc
mov
dec
fmuls
adc
sub
clc
scas
push
dec
shlb
sahf
push
xchg
mov
mov
and
cmp
xlat
loop
mov
testb
pop
pop
lock
fwait
test
sarb
sub
into
movsb
adc
pushf
xor
loop
cmp
add
fcmovb
aad
pop
lea
pushf
push
cmc
jne
out
pop
xlat
jl
cmc
aas
repz
lret
or
bound
inc
adc
push
rcrl
sahf
cli
rol
loop
mov
fisttpll
pop
int
add
jo
jnp
leave
cwtl
outsl
cmp
mov
xchg
sub
movsb
add
ja
icebp
jb
cmp
sbb
lcall
rep
pop
fsubrs
pop
xchg
ja
sbb
movsb
jbe
rcrb
rcr
es
mov
fwait
stos
lods
mov
out
jecxz
leave
pushf
ja
mov
sub
mov
out
inc
push
leave
lahf
shll
sbb
jmp
imul
push
sub
sbb
scas
pop
sahf
cmp
add
mov
mov
les
push
dec
imul
adc
negl
inc
fcoml
adc
xchg
push
xchg
jmp
les
or
add
call
hlt
js
dec
mov
les
sbb
mov
stc
pop
push
mov
or
add
lds
pop
pushl
push
cmp
adc
in
scas
jg
dec
lret
mov
xor
xchg
adc
sets
sub
dec
lds
mov
jo
add
jg
insb
and
aad
jl
ljmp
rdpmc
xor
fnstcw
push
jnp
inc
sub
aas
lret
fwait
test
mov
pop
popl
lds
int3
xchg
stos
cmpb
mull
pop
int3
mov
test
sub
iret
out
sti
movsl
push
dec
fistps
testb
dec
lock
pop
outsl
jle
repnz
xor
fstp
adc
jno
out
push
lock
mov
ja
fisubl
add
sbb
mov
aaa
out
push
add
lea
shl
sbb
sbb
cmp
mov
sub
cwtl
shrb
adc
xor
jle
mov
lea
out
arpl
dec
gs
pop
sub
mov
sbb
pop
lock
test
mov
arpl
jp
pop
push
mov
loop
iret
aaa
dec
ret
xchg
sub
in
sbb
lods
push
outsb
lds
mov
push
loope
fsubrs
leave
pop
arpl
inc
or
pop
sbb
imul
call
in
xor
xchg
lret
push
fisubs
adc
jb
add
sub
dec
or
cltd
mov
repnz
mov
scas
cmp
enter
mov
loope
daa
add
mov
aaa
ss
ds
lock
xchg
out
xor
dec
mov
dec
pop
js
sbb
repnz
pop
or
movsl
subb
xchg
push
aaa
mov
sub
popa
iret
mov
in
pop
add
idiv
int3
lea
outsl
inc
test
mov
aas
aaa
mov
fiadds
push
out
shll
add
aaa
sub
add
xorl
mov
insl
inc
sbb
or
sub
xchg
push
mov
in
cmp
hlt
icebp
inc
cmpsb
mov
stc
arpl
push
jmp
nopl
jns
dec
or
lret
mov
pop
inc
pusha
shlb
pop
add
xchg
xor
inc
jp
add
lock
int3
movsl
insl
dec
mov
sub
dec
sbbb
or
jge
push
mov
sub
leave
add
xchg
cli
ja
notb
pop
and
addr16
jo
cmpsb
popa
out
cmc
sbb
out
dec
mov
mov
dec
jp
shlb
adc
mov
mov
mov
addr16
add
push
mov
jne
inc
shll
mov
std
mov
out
xchg
and
xchg
or
out
cli
cld
addr16
pop
adc
insb
mov
or
or
cmp
loope
ja
std
insb
cli
repnz
mov
movsl
xchg
dec
sub
pop
test
mov
mov
adcb
adc
popa
push
sbb
sub
dec
xchg
dec
notb
push
push
sub
mov
fisubs
je
mov
test
push
push
mov
and
hlt
mov
jle
lea
lods
jle
pop
push
add
pop
lret
push
aaa
loope
ret
and
pop
or
pop
pop
mov
out
das
ljmp
rolb
or
dec
dec
hlt
out
mov
add
inc
out
jl
inc
dec
jle
adc
pop
dec
inc
push
push
mov
push
and
faddl
dec
xor
cmp
adc
imul
mov
cmpl
and
mov
outsb
notl
adc
jecxz
repz
lret
mov
call
sbb
xor
add
mov
repz
andb
sub
enter
push
in
test
cmp
rorb
mov
clc
shrb
sbb
push
jl
pop
mov
mov
and
fwait
call
lds
adc
out
movsl
cmpsl
sub
shl
negb
stos
cmpsb
inc
mov
sbb
out
or
pop
pop
cld
mov
les
mov
push
hlt
sbb
adc
sub
out
ficoms
ja
xchg
inc
inc
dec
test
das
in
clc
arpl
adc
arpl
enter
ljmp
loope
or
sub
cmp
sub
xlat
and
mov
xchg
mov
int
sub
je
and
inc
xchg
sbb
mov
push
or
jge
aam
movsl
jecxz
call
dec
cmp
outsl
pushf
mov
movsl
or
nop
ja
insb
cli
sbb
enter
test
add
rcrl
cld
or
sub
clc
adc
xlat
pop
and
cld
fcoml
sbb
ljmp
push
subl
mov
jnp
addb
jbe
nop
fucomi
adc
and
icebp
cli
cmpsl
mov
mov
sti
pop
scas
outsl
adcb
insl
insb
or
push
out
inc
lret
dec
jns
out
movsb
adcb
pop
mov
mov
dec
xor
ret
arpl
adc
cmpsl
push
or
dec
mov
das
enter
inc
and
pushf
push
jl
jnp
fwait
dec
sbb
adc
pop
sbb
nop
insl
cmp
into
test
test
fbld
std
in
stc
cmp
test
xchg
push
leave
pop
mov
fbstp
jp
imul
lcall
inc
jg
sti
sub
jns
test
sbb
xor
rolb
mov
mov
fdiv
mov
adc
push
pop
adc
jno
xchg
andl
lock
ret
cmp
jb
adc
dec
or
and
adcb
cmp
jle
inc
stc
scas
add
orb
sar
push
into
aad
aaa
insb
mov
xchg
je
insb
mov
fldcw
mul
jno
lret
jns
sbb
lcall
fstpt
push
xchg
int3
dec
fcmovnu
jno
in
cmp
and
push
push
jp
insb
xchg
and
shlb
inc
adc
bound
std
fsubrs
or
insb
pop
mov
outsb
or
test
mov
fisttpl
fisubrs
test
stc
iret
push
cld
dec
pop
scas
stos
mov
sahf
lea
mov
xor
ss
xlat
aam
in
pop
adc
push
lea
xor
fs
pusha
sbb
test
cs
je
or
ds
dec
dec
repz
sub
pusha
xor
dec
sbb
jp
hlt
mov
xor
in
mov
fbld
add
xor
dec
add
cs
and
jns
call
hlt
ljmp
mov
rorb
adc
jb
push
mov
push
mov
cli
pop
adc
mov
fwait
mov
push
sti
cmpsl
jle
mov
dec
xchg
in
sbb
pusha
out
mov
sub
mov
cmp
lock
add
addr16
fsts
cmp
sarl
imul
nop
test
aaa
xchg
lds
dec
int3
mov
xchg
cwtl
xor
loope
and
jl
push
movsl
mov
in
mov
cmp
mov
xorb
pop
cmp
xchg
aas
sbb
aad
test
mov
mov
xorb
mov
loopne
int3
sub
notl
or
out
pop
aaa
kxnord
cmc
mov
lret
mov
fsts
cwtl
mov
fstpt
jns
pop
nop
mov
add
testb
lea
inc
mov
fldenv
aad
dec
adc
stos
mov
test
mov
ficoml
in
mov
xorl
mov
jnp
lahf
stos
aad
push
xor
arpl
jae
jae
mov
pop
mov
stos
insl
pop
in
dec
jp
pop
sbb
aaa
negl
add
inc
xlat
rorl
cmp
add
and
loopne
mov
mov
mov
cmp
insl
push
leave
decl
shlb
das
fldl
or
in
pushf
xchg
addl
push
mov
sti
push
insl
cmp
int3
mov
push
xor
std
push
movsb
lock
sbb
cmp
data16
daa
addr16
xchg
insl
lods
dec
mov
stos
push
std
lret
movsb
add
pop
repz
out
or
out
adc
aas
decb
ja
add
pop
sub
sbb
push
dec
bound
mov
or
in
lock
xor
icebp
xchg
jge
out
push
dec
mov
or
leave
loopne
mov
mov
imul
mov
ffree
pop
mov
xchg
xor
and
pop
pop
add
push
and
mov
in
js
xor
andb
sub
in
push
sub
push
shll
jno
mov
xchg
dec
mov
mov
xor
mov
into
inc
andnps
leave
int3
and
push
daa
stos
jp
outsb
lret
repz
stos
and
out
xor
outsb
sub
xor
add
out
dec
sub
sub
xor
movsl
outsb
mov
adc
mov
jo
mov
xor
and
push
cmp
mov
sar
int
jg
mov
jle
xchg
lret
mov
stc
xchg
mov
push
out
lds
lods
pop
mov
dec
mov
mov
sbb
push
inc
decl
pop
push
cmp
pop
scas
mov
cmpsl
pop
push
testb
ds
jg
cmp
xchg
jo
lock
mov
mov
pop
dec
es
add
cltd
popf
call
push
xor
pop
sub
stos
jle
dec
outsb
push
lcall
jge
clc
inc
lods
push
popa
jg
cmpsl
dec
insl
enter
int3
ja
cmpb
xor
fmulp
outsl
mov
lods
sbb
adc
lret
ds
out
xchg
loopne
popa
xchg
or
lahf
lea
leave
sub
fstpt
push
cmpsb
mov
xor
stos
xchg
and
test
adc
loop
icebp
mov
adc
cmp
mov
add
orl
rolb
fldcw
sub
addr16
sub
adc
hlt
incb
cmpsb
scas
xchg
or
dec
lock
jns
pushf
push
push
out
inc
xchg
in
test
cmp
sub
ffreep
sahf
call
movsb
jl
adc
dec
js
aas
sub
imul
pop
int
rorb
loopne
insl
sub
xchg
push
xchg
popf
sub
aam
jmp
in
dec
mov
jne
cmpsb
in
andb
push
xchg
test
xlat
mov
stos
add
sbb
or
xchg
adc
daa
bnd
adc
lea
push
dec
pop
andb
cld
mov
cs
test
sub
inc
xor
jnp
push
pop
data16
in
sbb
sub
fwait
xor
loopne
pop
push
fwait
sub
nop
dec
jnp
pop
hlt
hlt
xor
xor
push
adc
fwait
arpl
jmp
xor
inc
xchg
cmp
pop
xor
mull
sbb
in
xor
or
sbb
fists
mov
fdivrl
fmulp
ljmp
lret
inc
sbb
test
or
cmpsb
je
sahf
rorb
in
pop
sbb
clc
mov
mov
dec
mov
scas
fpatan
in
mov
cmp
addr16
mov
cmp
out
lret
repnz
push
mov
mov
push
adcb
inc
fdivl
xchg
cmp
aam
add
jge
push
pop
xchg
test
and
imul
popf
mov
frstor
loopne
in
and
and
pop
jb
xor
mov
xchg
dec
loopne
push
fbld
in
repnz
andl
or
cmpsl
int
dec
lcall
mov
aaa
call
and
stos
or
mov
dec
dec
and
out
scas
out
mov
test
mov
lds
jne
dec
push
mov
loope
imul
jle
outsb
test
stos
jne
icebp
and
aas
test
inc
fwait
add
ret
sahf
out
mov
iret
mov
lcall
in
icebp
shrb
in
mov
jp
cmp
in
fs
or
cld
xchg
sbbl
mov
ss
cld
lret
leave
jmp
pop
dec
sub
inc
push
or
or
cmpsl
pop
outsb
cmp
cmp
es
ret
jle
test
push
push
xor
sbbl
xchg
push
aad
push
insb
and
bound
sub
lret
push
in
xchg
sbb
cmpsb
add
cmp
dec
aaa
xor
js
mov
addr16
sub
mov
mov
mov
test
push
les
xlat
test
inc
popl
movsl
mov
jns
xchg
sub
dec
pop
sub
shll
call
cmpsb
mov
cld
cmovns
jnp
pop
into
popa
imul
insl
or
adc
std
dec
mov
fistl
dec
jbe
out
add
andb
test
cwtl
sub
jbe
std
mov
xchg
test
scas
lds
add
dec
xchg
ds
lea
sub
subb
jns
pop
cmp
addr16
jo
data16
cwtl
xchg
add
mov
mov
leave
sbb
pop
mov
lds
inc
loopne
outsl
das
test
and
std
xor
xchg
js
xchg
lock
push
jge
and
dec
neg
pop
cmp
mov
icebp
lock
pop
bnd
sbb
dec
mov
xorb
and
push
add
mov
add
cmc
push
popf
int3
movsb
dec
mov
out
pop
hlt
outsb
sub
push
inc
or
aaa
outsb
lret
in
sbb
sub
pop
lret
push
js
mov
lret
and
fisubs
sub
sbb
lock
cld
fldcw
addl
addl
cmpsb
add
stos
xorl
js
inc
mov
imul
mov
xor
cmp
cmp
cmp
les
gs
sub
data16
test
fstps
das
or
insl
in
idivb
cmpsl
xor
cwtl
lahf
mov
add
jmp
movsl
xchg
add
popa
test
xchg
sbb
sub
xchg
dec
popf
in
test
lods
push
cmc
cmp
push
mov
lea
jae
push
imulb
fimuls
and
jmp
aam
sbb
daa
lcall
movsb
pop
rcl
and
or
xor
loope
movsl
aaa
int
fs
adc
int
movsl
xchg
pop
push
sbb
movsb
jecxz
xor
into
push
cmp
or
and
sbb
sub
jb
out
aas
out
pushf
out
cmpsl
fs
sbb
mov
test
mov
movsl
jge
into
adc
sub
adc
ljmp
xchg
mov
or
pop
push
jl
push
pusha
mov
pusha
das
stc
push
aas
mov
sbb
dec
test
fstp
andb
subb
sbb
mov
or
jmp
pop
subb
sbb
rclb
arpl
xor
je
sbb
inc
mov
jl
jb
fwait
mov
pop
mov
in
call
or
and
push
cmp
fcompp
cmc
push
inc
mov
mov
stos
mov
adc
xchg
dec
dec
jp
dec
mov
mov
stos
sti
xchg
in
push
and
xchg
xor
test
out
je
sti
push
aas
test
cltd
dec
xorb
ficomps
sbb
les
inc
jg
mov
lea
or
jmp
adc
insl
xchg
mov
fnstenv
push
push
aad
push
shrl
in
sub
test
pop
or
cmp
sbb
push
iret
mov
or
cmc
push
mov
jbe
and
ljmp
mov
push
mov
ss
push
xlat
int
xchg
sbb
cmp
fcmovu
pop
bound
cmp
fbstp
lret
testl
test
inc
inc
push
mov
cmp
jne
push
mov
insb
or
push
mov
lods
in
add
out
dec
loope
cmp
inc
sbb
cmp
push
mov
fs
and
mov
loopne
fimull
and
imul
lods
fsubs
jae
lcall
js
es
sub
stos
push
out
adc
stos
out
and
daa
out
pop
lods
div
je
xor
xchg
adc
lret
mov
jo
and
cmp
push
and
in
push
rcr
sahf
mov
mov
jb
repz
mov
and
mov
adc
xlat
mov
push
inc
cmp
xor
xor
mov
mov
jne
jae
movb
loope
lcall
push
cmp
stos
dec
and
xchg
mov
test
sub
cmpsl
pop
out
ja
jmp
mov
inc
jnp
cld
xchg
mov
cmp
hlt
sar
jmp
and
cwtl
aad
pop
jge
xchg
dec
adcb
and
arpl
adc
mov
ret
jmp
outsb
add
adc
and
dec
inc
jbe
test
adc
jp
loopne
add
cmpsb
cli
leave
mov
in
xchg
mov
sub
ss
add
punpckhdq
stos
or
cmp
out
testb
outsb
rorb
cmp
ja
cmp
mov
out
popf
mov
std
push
xchg
push
dec
jno
inc
lret
repz
push
inc
addl
divb
fdivl
insl
mov
adc
aaa
js
dec
sbb
add
or
cmpsb
out
imul
jno
xor
xchg
and
mov
adc
loopne
xchg
mov
mov
mov
add
mov
in
rcl
pop
pusha
mov
mov
in
cli
inc
lock
pop
pop
jo
int
stos
out
mov
aas
out
arpl
mov
cmc
dec
fimuls
cmc
fidivrl
add
pop
cmpsb
movsl
sbb
xchg
adc
addr16
stos
cmp
test
gs
pusha
aad
push
inc
faddp
dec
leave
jecxz
jno
push
test
in
dec
pop
fadd
insl
push
push
sbb
adc
int
std
loope
cli
test
fstpt
sbb
mov
and
sbb
aas
rcl
test
cwtl
inc
pop
jge
cmpsl
xchg
sub
sbb
not
add
push
fs
xor
mov
outsb
jl
call
into
fidivrl
lea
mov
outsb
mov
xlat
mov
or
aaa
cs
inc
mov
fnsave
push
cmpsl
adc
sbb
aas
arpl
lods
fcoms
jg
xchg
ja
popa
enter
and
test
push
test
fimull
xor
addb
mov
js
mov
jnp
jmp
adcl
xchg
cmp
loopne
lea
fsubrs
movsl
inc
sbb
mov
leave
xchg
aas
std
push
sub
xor
daa
mov
or
add
in
jl
cld
loop
fsts
push
lds
sub
adc
xchg
lret
xor
cltd
mov
jge
xor
cltd
sub
fldl2e
in
shlb
jg
push
repnz
mov
aam
popa
sahf
mov
gs
cmpsb
inc
push
jns
lret
pop
ja
jg
aas
mov
mov
jmp
mov
jp
nop
out
jge
push
das
sub
mov
ss
mov
sub
popf
sar
sub
stos
pop
dec
lods
mov
push
jmp
pop
mov
inc
sbb
lcall
sbb
loope
jno
mov
loopne
push
sub
fidivrl
mov
jne
scas
cli
adc
in
shl
in
push
out
lea
pop
adc
lea
pop
xchg
push
rclb
xchg
out
jns
cmp
mov
push
jp
mov
or
popf
push
ficoms
add
in
loope
test
insb
imul
enter
fmulp
test
push
ret
add
sub
push
mov
inc
in
jne
je
enter
xor
inc
dec
scas
lgs
scas
hlt
push
gs
pushf
push
push
sbb
push
push
xchg
jl
mov
and
ret
mov
pusha
popf
in
jle
fwait
jl
testl
testb
je
scas
in
imul
mov
push
sbb
mov
sub
sbb
andb
push
jg
xchg
in
fwait
xor
insb
or
out
and
mov
sbb
inc
fstl
mov
test
jp
aas
shufps
dec
mov
fs
addl
add
jns
xchg
xchg
or
add
jns
inc
cmp
repnz
cltd
xchg
push
sub
xchg
out
cmc
sbb
pop
jae
jnp
int3
sub
sbb
fdivr
ficompl
mov
pop
sbb
outsb
pop
push
or
les
int3
sbb
mov
jge
or
bnd
data16
add
and
repz
arpl
mov
test
sbb
sbbb
pusha
mov
scas
xchg
sahf
xchg
mov
imul
push
aam
aaa
in
cmp
jne
cmp
std
xchg
ret
lock
mov
pop
dec
xchg
div
fistpl
mov
dec
icebp
cld
add
sub
in
jecxz
popf
sarb
mov
and
les
pop
roll
fnstenv
mulb
aad
aad
mov
sbb
xor
es
fwait
insl
xchg
sti
out
adc
imul
inc
dec
xorl
lds
jl
push
and
and
push
inc
repnz
in
adc
sbb
cltd
pop
add
dec
push
push
rolb
repz
dec
pop
add
jb
pop
pop
cwtl
mov
mov
cmp
insb
fnstenv
lret
mov
cmp
lods
rcr
and
arpl
push
inc
sbb
test
mov
fs
push
xor
pop
lret
fs
mov
insb
lcall
insl
aad
cld
scas
adc
xor
gs
mov
mov
daa
mov
addr16
sub
pop
leave
mov
mov
push
xchg
daa
and
out
dec
cmp
outsb
push
out
mov
add
enter
vmovapd
mov
test
or
xchg
sub
aas
inc
adc
lea
add
sbbl
jb
lods
bound
scas
test
mov
lods
test
jl
push
popa
lea
or
nop
out
popf
pop
insb
sarb
lea
cmp
push
xlat
cs
jae
pop
mov
mov
xchg
shlb
fucomi
out
xchg
cs
jo
jb
lahf
jae
jae
mov
imul
cmpsl
dec
pusha
insl
jle
push
sub
push
rclb
bound
jl
inc
xchg
and
xchg
cmp
xorb
cmp
mov
out
outsb
sub
add
fs
lds
std
xchg
sahf
mov
xchg
sarb
daa
inc
lds
mov
xlat
sti
out
mov
imul
icebp
or
adc
mov
dec
test
shl
jno
stc
cs
aam
sub
into
int
fcomps
cmc
shlb
inc
sahf
lret
mov
add
xchg
inc
push
test
mov
pop
mov
in
out
js
jo
shlb
adc
test
fnsetpm(287
mov
test
pop
das
add
call
mov
int
sahf
cmp
push
jp
scas
mov
mov
pop
ffreep
mov
xor
mov
mov
inc
jae
xchg
ja
xchg
jecxz
ja
xor
das
mov
cs
push
dec
lcall
push
outsb
adc
xor
aas
mov
in
mov
xor
stc
and
cmpsb
lcall
cmp
scas
lea
xchg
leave
rorb
jecxz
mov
dec
cmc
xchg
cmp
cmpsb
mov
aas
arpl
ret
adc
push
sahf
or
cli
xchg
lahf
aaa
mov
test
xorb
and
test
mov
aam
sbb
ss
cmpsb
adc
insl
fistps
cmp
mov
lock
pop
add
dec
lock
lea
cmc
cli
push
repz
jmp
daa
js
xchg
aam
in
mov
ja
add
lcall
mov
push
push
xchg
out
pop
lods
lret
test
jnp
inc
push
fstps
lahf
sti
inc
jb
cltd
out
pop
add
xor
xchg
loop
mov
mov
idivb
test
mov
loope
jmp
repnz
rcll
cwtl
imul
fdivrs
dec
pop
int
je
dec
push
movsb
lcall
aad
jp
lret
lds
xchg
jge
ja
and
adc
gs
xchg
pop
test
mov
lahf
pop
pushf
mov
sbb
rolb
lret
imul
jecxz
sbb
jo
popf
stos
stc
insl
ljmp
mov
sub
fdivrl
sub
push
push
xor
mov
test
mov
clc
jmp
jno
nop
mov
out
mov
pop
aad
out
loop
xchg
icebp
push
add
push
popa
out
in
in
and
jo
mov
jb
and
jmp
int3
adc
xchg
mov
fisttpll
shll
adcb
ret
in
push
dec
mov
xor
fs
inc
dec
outsl
push
and
mov
sbb
out
push
push
les
cltd
cwtl
mov
cmp
in
leave
dec
adc
outsl
out
popa
xchg
push
add
mov
lock
sbb
out
add
aam
dec
xor
int
orl
data16
mov
int
mov
inc
lcall
out
jae
test
or
push
in
test
hlt
lds
cmp
scas
shrb
jmp
outsb
jno
out
inc
dec
adc
test
sbb
sub
sub
add
pop
pop
cli
pop
test
hlt
data16
jne
enter
xchg
sbb
or
inc
cmc
ret
xor
aas
add
daa
jg
and
rcll
aas
into
adc
je
outsb
daa
xchg
hlt
cmpsb
pop
sbb
mov
push
or
sbb
out
mov
addb
fsubs
mov
scas
aad
dec
outsb
sbb
ret
sub
jns
push
xlat
lea
out
inc
lock
data16
sarl
scas
loope
mov
dec
push
jecxz,pn
and
dec
repnz
inc
sbb
les
outsl
cmp
andb
and
rol
movsl
ss
dec
test
inc
pop
cli
jns
lods
push
or
jge
negb
mov
hlt
loopne
sbb
mov
add
or
iret
adc
insb
jne
sbb
pop
add
xor
cmp
test
int3
arpl
je
jno
xchg
and
xchg
pop
sub
pop
dec
mov
adc
mov
orb
sub
cmc
xchg
push
das
xchg
bound
jecxz
andb
pop
enter
add
enter
lret
push
cmp
and
mov
jb
mov
push
sbb
jle
and
ss
fldenv
pop
adc
gs
push
jb
in
ja
stos
enter
mov
pushf
outsl
and
lods
enter
ljmp
jmp
xor
sbb
repnz
or
mov
or
inc
mov
pop
insl
add
cmpsl
add
xor
add
or
pop
xchg
pop
fsts
test
xor
addr16
scas
xor
or
adc
loope
lea
mov
lds
arpl
popa
xchg
fildl
repnz
lods
out
aaa
sbb
imul
inc
fdivrl
push
scas
mov
xor
arpl
stc
dec
push
test
jb
fisubs
mov
lret
xchg
mov
les
jmp
xor
adc
mov
lcall
push
fimull
sbb
ds
mov
out
das
cmp
pusha
fwait
sbb
stos
stos
sbb
cmp
out
iret
lods
ljmp
mov
adc
push
pop
test
insb
jae
mov
roll
and
mov
jb
xor
xlat
and
pop
xchg
dec
or
adc
dec
cmp
insl
mov
mov
js
push
rorl
bound
imul
xor
mov
or
and
add
loopne
inc
xchg
pop
push
ret
subb
jno
bound
or
fldt
scas
push
mov
mov
stos
mov
stos
cmp
push
xchg
sub
mov
leave
jge
fisttps
pop
jne
cltd
fists
inc
pop
pop
cmp
push
data16
xchg
xchg
push
outsb
inc
out
inc
xlat
mov
ss
test
out
dec
imul
ss
sbbb
jp
fwait
cmpsl
push
jg
cmpsb
push
loopne
mov
jns
shrl
mov
xor
inc
and
add
nopl
aas
divb
ret
xor
sub
out
fadds
sbb
pop
into
dec
and
xor
or
loope
cmpsb
or
sbb
mov
mov
mov
lods
pop
ja
jae
lods
push
test
mov
inc
and
lods
xchg
inc
out
ret
mov
jecxz
push
add
sahf
jmp
fwait
xor
inc
or
or
mov
xchg
mov
lret
mov
dec
roll
sbb
sub
repz
mov
sbb
lds
stos
mov
movsb
inc
test
push
sbb
out
xchg
int3
and
sbb
cmpsb
push
pop
cltd
ret
loope
enterw
jns
adc
popa
xchg
sbb
outsl
lret
fcmovb
xor
push
sbb
scas
mov
sbb
jno
sbb
inc
sahf
mov
fisttps
push
dec
inc
jae
ret
mov
inc
cmp
xchg
icebp
pop
adc
or
jp
push
test
pop
cmp
mov
xchg
bound
rcrl
pusha
outsb
xor
testl
cmp
lret
bound
int3
fcompl
jecxz
test
add
mov
in
shl
cmp
pop
lds
jbe
push
pop
pop
rorl
das
in
cmp
lret
mov
or
add
cmpsl
mov
xchg
adc
idiv
jb
cmp
not
arpl
outsb
jle
xor
jbe
je
mov
mov
sbb
mov
imul
or
mov
xor
mov
lods
test
jp
push
popf
jns
jp
push
popf
mov
out
in
es
mov
and
push
insb
lods
js
pushf
inc
add
sarb
pop
push
iret
das
lcall
ljmp
xlat
clc
push
or
sbb
scas
pop
daa
imull
jo
leave
cmp
js
test
aaa
loopne
mov
orl
int3
or
jnp,pt
out
push
fwait
dec
arpl
popf
es
push
cmp
dec
mov
jnp
mov
cmp
fwait
push
les
je
xchg
je
pop
add
pop
add
mov
pop
sbb
lods
xor
xor
sar
pop
das
xchg
fcmovnu
push
outsb
and
cmp
in
xor
call
loope
xchg
sbb
nop
cmp
pop
push
das
pusha
xor
push
xchg
mov
popa
push
jnp
sahf
imul
aad
mov
pop
imul
data16
mov
aas
and
jo
xchg
sbb
mov
aam
aas
pushf
xchg
xchg
call
mov
hlt
pushf
icebp
in
mov
mov
lret
mov
sub
jb
xlat
daa
jge
loopne
ljmp
jmp
push
sbb
xchg
jbe
lods
adc
repz
xor
mov
pop
outsl
fcompp
sbbb
arpl
sbb
aas
xchg
loopne
sub
xchg
jne
mov
fs
popa
mov
lret
pop
adc
adc
xchg
pop
mov
cmc
cmp
icebp
test
cmp
icebp
and
pushf
cmp
ja
pusha
cs
and
mov
dec
jl
icebp
clc
shl
dec
sti
data16
jp
in
sbb
cmp
adc
dec
out
jb
push
sub
jecxz
fcomps
xor
insl
loopne
js
jo
cltd
xor
jecxz
test
push
add
loop
and
movsb
xchg
jmp
pop
adc
mov
imul
enter
sbb
aad
xchg
xchg
push
mov
xor
xchg
hlt
or
das
lret
xor
test
out
pop
cmp
nop
xchg
mov
scas
cmc
mov
sub
in
daa
lret
pop
test
push
or
mov
popl
jo
outsb
jno
scas
andb
rorb
pop
testl
jns
add
xchg
les
cmpsl
xor
jo
js
pushf
arpl
stc
in
fdivl
fxch
pop
dec
lods
call
movsb
in
jae
xor
xchg
push
jg
lcall
xchg
mov
pop
jle
mov
enter
xor
mov
lods
movsl
xor
mov
cli
enter
lret
psadbw
scas
adc
testl
lods
pop
sbb
cwtl
push
cmp
pusha
lea
mov
call
repz
mov
out
or
push
push
or
and
sarl
cmpsb
int3
dec
cltd
push
xchg
fidivs
lea
mov
jb
xchg
mov
leave
out
ja
jle
jp
mov
popa
push
sbb
mov
loopne
outsb
lock
cmp
andl
dec
dec
lret
outsb
imul
xchg
testb
test
outsl
mov
cmc
adc
or
lahf
lret
pop
adc
ret
mov
mov
jecxz
ret
jge
xlat
repz
pop
in
inc
dec
sbb
pop
mov
andl
xchg
ja
mov
cmpsl
loopne
push
mov
lods
xlat
xorb
out
xchg
popa
sbbb
cmp
outsb
and
ret
repz
test
inc
pop
inc
sbb
movsl
push
lock
es
mov
mov
and
data16
cmpsl
mov
imul
or
xchg
aam
push
mov
int
js
adc
mov
test
inc
movsl
pushf
dec
mov
mov
lock
xchg
pop
inc
out
xor
test
push
aaa
sahf
in
es
adc
fbstp
push
inc
mov
out
outsb
call
fisttps
fwait
sti
adcb
inc
cmp
aas
sbb
dec
xchg
sub
or
sub
pop
xchg
push
jl
add
cli
sub
fnstenv
dec
sbb
sub
jae
cmpsb
rorb
fcmovne
or
int3
addb
mov
sub
fwait
xor
decb
cmc
test
div
xchg
sub
loop
insl
idivb
sub
push
out
mov
jge
xlat
add
out
or
cld
cmpsl
aaa
nop
and
imul
mov
lock
jo
jo
and
push
jecxz
sbb
and
mov
or
jnp
add
inc
inc
xor
push
mov
sbb
dec
xor
fadd
aad
repnz
int
mov
cwtl
imul
hlt
mov
pop
rcr
jb
adc
inc
xlat
mov
inc
test
sub
or
inc
cmp
movsb
dec
mov
cmp
stos
clc
lahf
out
pop
pop
incb
daa
mov
jbe
cs
cmc
sbb
insb
jne
call
subl
and
fwait
mov
add
int3
fcompl
lahf
mov
or
mov
adc
and
lds
repz
pop
lds
test
shrb
push
fldenv
mov
adc
call
push
sbb
mov
inc
cmpsl
mov
or
add
sub
mov
jns
mov
pop
pop
cmp
cmp
clc
cmp
dec
or
or
ret
pop
movsl
imul
test
cmp
adc
mov
lods
mov
frstor
jae
jno
rol
adc
imul
inc
or
push
rcll
das
pop
adc
jb
scas
mov
jl
inc
fsubs
xor
xchg
xor
adc
push
enter
lret
lahf
jne
or
ljmp
pop
sub
xchg
in
add
dec
push
jne
test
rorb
sbbl
add
push
push
enter
arpl
shlb
xchg
daa
mov
cmp
int
xrelease
test
repnz
jnp
imul
test
mov
dec
cmp
cs
test
icebp
xchg
cltd
sti
dec
xor
mov
push
push
adc
cmpsl
dec
and
push
pusha
test
nop
shrb
lods
inc
pop
sub
repnz
xor
xor
mov
into
aam
int
cmp
adc
das
or
jmp
and
lods
or
pop
sub
cli
pop
sub
push
inc
pop
mov
mov
mov
lret
xor
cmp
or
mov
xor
xchg
into
push
push
mov
ss
add
jne
and
mov
aad
cmc
mov
orl
inc
mov
add
cmp
je
pop
inc
ss
sti
in
dec
dec
clc
movsb
pop
mov
inc
adcl
faddl
sub
push
subl
lahf
sub
add
add
ja
and
sub
pop
pop
lea
push
jae
xchg
mov
sub
push
pop
or
pop
outsb
jp
test
mov
lock
dec
popf
nop
pop
dec
cli
mov
lods
lock
bound
push
push
loope
jmp
lahf
movsb
test
pop
mov
stos
xchg
xchg
ja
testb
fimull
fs
lods
das
dec
mov
lods
jle
push
mov
stc
and
sub
loopne
int3
sub
xchg
sub
ret
inc
lods
push
cmp
pop
inc
and
out
or
xchg
cmc
loop
mov
lods
xchg
pop
out
insb
arpl
dec
subb
mov
adcl
or
mov
flds
leave
aas
jp
js
ljmp
cmp
orb
or
xor
jle
jo
mov
sarb
xchg
int3
mov
push
mov
xlat
or
inc
xlat
jnp
mov
inc
div
jg
aas
loop
ljmp
pop
sbb
push
ljmp
mov
inc
or
pop
sbb
aas
imul
xor
test
inc
cmp
dec
adc
jo
mov
mov
mov
rcll
ror
cmp
sbb
push
out
jmp
lds
ficoml
push
rorl
fisttpl
aad
push
jbe
pushl
mov
inc
adc
jge
scas
bound
in
pop
es
aam
ds
mov
ja
jmp
int3
push
sahf
inc
mov
cmc
xchg
sub
mov
into
dec
add
add
scas
cmp
fwait
mov
inc
stos
sub
out
xor
repz
jno
leave
add
inc
sub
adc
daa
call
js
pop
cmp
rclb
inc
out
js
cmp
xchg
push
xor
mov
xor
filds
in
adc
in
jp
jmp
stos
or
jge
sbb
out
stc
test
shrl
adc
xor
stos
fadd
dec
imul
outsl
xchg
sbb
callw
mov
imul
lea
dec
pop
lods
cmp
push
fsubs
pop
dec
loop
lahf
xchg
push
jnp
shrl
testb
nop
and
mov
and
fsts
test
cmp
test
pushf
mov
enter
fisubrs
sub
cli
sub
inc
out
ss
mov
mov
pusha
lock
dec
ds
cmp
loopne
mov
les
dec
and
jge
jle
lret
mov
sbb
dec
stos
push
jb
lock
mov
ret
jne
mov
sub
pop
or
xchg
pop
inc
dec
cli
out
icebp
inc
inc
and
pop
xor
pop
jo
imul
lcall
cs
mov
loope
test
or
lods
push
adc
adc
pop
lcall
aam
test
dec
jb
mov
sbb
jo
andb
jns
push
or
mov
mov
or
lods
add
sbbl
push
mov
xor
test
cmpsl
or
push
jl
mov
push
pop
rcrb
dec
sub
in
and
jmp
jbe
orb
movsb
lahf
lds
idivl
addr16
scas
out
movsl
xorb
cmp
sub
popf
mov
mov
outsb
xchg
pop
jmp
ss
sbb
pop
jns
test
popf
mov
xor
fwait
jbe
mov
and
movsb
or
cwtl
inc
pushf
std
add
fcoms
lahf
aas
pusha
add
mov
xchg
in
imul
in
inc
outsl
pop
lods
aam
sbb
adc
mov
les
stc
repz
pop
aad
jb
dec
lods
and
movhps
js
out
push
inc
rcll
sbb
inc
xor
inc
orl
popf
js
insb
lcall
mov
mov
cmp
pop
idiv
dec
cmc
xchg
cld
and
sbb
cmp
popl
mov
arpl
lds
cmp
outsb
cmpsb
push
inc
jo
push
xchg
mov
test
in
jmp
in
les
inc
or
mov
jb
add
aaa
stos
mov
inc
dec
or
push
rorl
pusha
fistps
sbbb
dec
sub
adc
push
nop
sub
jg
faddl
mov
loop
pop
lods
mov
dec
pop
sub
dec
add
jp
inc
cmp
inc
or
sub
fs
pop
mov
int3
popf
xchg
mov
xor
call
mov
fsubl
jle
mov
mov
fld
in
push
repz
push
xchg
shll
mov
arpl
ret
jecxz
add
cmp
aam
lods
arpl
sub
sbbb
bound
test
cmp
mov
out
cmp
xor
pop
xor
cmp
or
jnp
loop
sub
ret
push
mov
inc
sub
mov
pop
aam
inc
pusha
pop
inc
push
enter
cmpsl
mov
xchg
movb
je
inc
movsl
in
das
loope
pushl
les
mov
mov
loop
inc
ljmp
dec
jns
cmp
leave
call
lret
sbbb
cmp
hlt
imul
adc
shll
pop
dec
vandps
jae
aaa
adc
in
fyl2x
inc
out
mov
ret
fs
out
leave
rcrb
jmp
xchg
mov
push
mov
loope
pusha
rolb
movsb
sub
mov
aas
fld1
jnp
imul
int3
test
sub
outsl
in
mov
add
nop
mov
mov
enter
push
push
insl
xor
nop
cmc
jae
lret
sub
push
xchg
fcomps
loop
push
adc
dec
orl
ror
out
fists
jmp
jg
sub
xor
pop
jecxz
mov
jbe
cmp
push
xchg
lcall
fwait
push
outsb
jge
sbbb
mov
inc
add
pop
jp
xor
sub
insb
pshufw
pop
imul
xchg
int3
and
jne
aaa
imul
sbb
outsl
pushf
test
movsb
iret
mov
das
mov
and
cmpsl
incl
dec
mov
adc
das
inc
out
scas
out
jb
or
and
inc
cli
adc
and
cmp
jnp
pop
adc
cmp
push
cmp
cmp
dec
gs
out
loope
notl
push
mov
push
and
sub
out
fsubl
xor
dec
mov
xor
pop
fs
or
dec
lahf
xchg
mov
es
std
subl
repz
mov
xchg
adc
xorb
out
add
mov
mov
icebp
adc
cmp
lea
loopne
imul
scas
or
sub
cmpsb
sub
test
test
push
sbb
mov
sarl
dec
jns
pop
out
int
mov
fsubrs
jmp
pop
dec
orb
lret
push
push
xchg
fcoms
and
mov
push
cmp
or
mov
sti
shrl
or
jge
test
dec
sbb
das
mov
repnz
lahf
xor
idivb
or
test
stos
mov
sub
pop
mov
in
mov
and
rclb
test
cwtl
in
inc
xor
mov
mov
testb
jle
decb
pop
enter
and
loop
test
incl
sub
and
pop
lock
nop
loopne
sti
in
cmp
cmp
push
adc
insb
ds
fcomp
bound
enter
ss
pop
dec
mov
fstpt
stc
push
inc
rol
pop
fistpl
data16
lret
mov
mov
mov
xchg
xchg
jle
mov
or
dec
sub
movsb
cmp
push
in
fwait
mov
popa
cwtl
jge
mov
mov
sub
xlat
adc
or
addl
mov
loope
mov
ss
jmp
inc
lret
fisubrl
add
cmp
adc
dec
jp
or
pop
and
xchg
jne
mov
nop
push
cmpsl
jge
ljmp
imul
pop
mov
push
cmpsb
repz
in
mov
stc
shrl
cmp
and
mov
xchg
mov
daa
jle
jno
shrb
mov
mov
jmp
lahf
xor
lods
sub
cs
mov
outsb
mov
sbbb
jae
jg
lds
mov
or
in
inc
mov
popf
mov
rcr
in
movsb
mov
dec
mov
scas
sbb
arpl
mov
loop
subl
sbb
int
adcl
xor
dec
pop
inc
fldt
movsl
repz
mov
lock
add
dec
insl
jbe
xor
std
es
push
sbbl
sub
scas
dec
test
jp
xor
lahf
pop
pop
inc
adc
jle
push
sub
lock
push
xchg
push
push
popa
mov
je
loope
and
cmpsl
dec
scas
sub
mov
iret
adc
add
pop
pop
stos
jl
add
stc
mov
and
xchg
mov
dec
cs
mov
fcmovbe
mov
scas
cmc
sti
pusha
xchg
adc
dec
lcall
repz
xchg
mov
pop
scas
push
add
dec
insb
fsubl
mov
fcmovb
pop
or
fistl
adc
add
aam
mov
xor
loope
adc
push
lods
lods
mov
fisubrl
imul
dec
inc
scas
cmp
jge
repnz
sbb
in
popf
and
scas
mov
push
mov
cmp
adc
mov
lea
imul
stos
adc
sub
mov
sbb
mov
mov
pop
movsl
push
imull
cmpsb
aam
mov
fcoml
clc
push
pop
or
hlt
push
lods
cwtl
imull
js
jl
filds
mov
jbe
sub
clc
stos
jle
or
out
shlb
dec
mov
push
outsl
jle
pop
push
sub
mov
dec
lods
dec
je
sbb
or
pop
xchg
jmp
push
adc
push
repnz
sbb
cld
xchg
aas
push
push
pop
shl
lock
mov
inc
xchg
inc
cmp
lret
scas
jge
mov
call
imul
xchg
xchg
cmc
push
clc
cmp
cltd
add
out
sbb
adc
xor
rcrl
push
stos
add
ja
es
pop
jle
stos
stos
pop
pop
push
cwtl
fwait
repz
pop
xor
xchg
mov
xor
and
pop
insb
mov
push
imul
sbb
add
sbb
dec
scas
out
add
mov
push
stc
jbe
cmc
in
fisubl
xchg
fisubrl
adc
cmc
push
out
adcl
popf
mov
xor
sub
mov
insl
loopne
scas
and
cmc
add
jge
pusha
es
imul
push
popf
das
xchg
insb
inc
push
dec
pop
sub
inc
les
cmp
sub
fs
pop
cmpsb
testl
adc
in
popf
cmp
les
test
xor
imul
jecxz
bound
and
fbld
cwtl
rcl
cld
pop
leave
xchg
mov
dec
xchg
es
jg
or
ds
xchg
test
shr
int
sub
fs
mov
scas
out
sbb
jbe
hlt
fcompl
pop
loop
lea
aad
mov
pop
out
jle
imul
sub
jle
push
daa
ja
int
sub
pop
dec
push
and
jnp
out
rcrb
stos
jno
lret
adc
jmp
insb
cmp
jmp
clc
sub
mov
outsb
inc
jmp
jg
fstp
jmp
add
mov
lock
popa
add
fwait
out
das
fildll
ret
pop
and
pop
pop
mov
jbe
cwtl
imul
jne
mov
xlat
scas
dec
jae
aas
dec
inc
loopne
test
mov
stc
mov
xchg
icebp
mov
or
loope
sbb
mov
dec
cmp
push
movsl
lcall
aas
icebp
dec
push
push
push
enter
cmp
mov
sub
inc
inc
push
mov
pop
adc
mov
pop
imul
pop
stos
imul
adc
or
out
inc
push
test
fcmovu
aam
sub
add
jnp
test
clc
in
xchg
lock
ficoml
mov
mov
mov
jmp
push
dec
sbb
sbb
scas
inc
push
pop
cld
aad
outsl
push
loop
mov
inc
pop
mov
sub
dec
das
lret
cmpsb
aaa
in
in
ret
cmp
jo
jg
xorl
or
iret
in
int3
scas
inc
rorl
sub
ret
es
pop
jo
inc
andb
lds
mov
leave
je
out
push
lea
fisubrl
add
pop
pop
mov
push
fld
cmp
sbb
pushf
dec
sti
imul
adc
bound
dec
sbbb
mov
in
in
mov
sahf
mov
cs
daa
pop
outsl
cwtl
rorb
mov
stos
pop
jbe
in
cmpsl
or
and
das
xor
ret
lret
xchg
push
sbbl
loop
std
adc
daa
pushf
xchg
mov
mov
fucom
lret
add
mov
and
dec
jmp
cmovns
cltd
lock
inc
incl
push
adc
jle
stos
pop
adcl
cld
lods
int
jne
aaa
push
fidivrl
lret
fwait
or
out
popa
fmuls
ss
cmp
stc
in
and
add
aaa
dec
xor
shl
fdiv
jo
jl
pushf
sahf
cmp
test
push
sub
fmull
daa
xor
dec
adc
dec
xchg
and
fistpl
lods
or
mov
repnz
mov
roll
cmpsl
outsl
cmpl
lcall
and
sbb
adc
bound
push
sarl
pop
insb
cmp
mov
cmp
mov
dec
mov
shlb
sbb
pop
lea
mov
jo
call
xor
hlt
jge
push
orl
cli
daa
inc
fildll
dec
test
int3
imull
and
shlb
add
aam
outsl
push
nop
loope
jmp
dec
cs
jae
or
scas
and
sbb
icebp
sub
fcoml
data16
cmpsl
aaa
add
je
jg
pop
jno
xchg
jo
add
xor
jo
xchg
cltd
pushf
ss
jle
mov
push
pop
mov
mov
or
addb
movsl
or
jo
xchg
testl
and
and
aaa
push
inc
lcall
fidivrl
div
sub
push
loope
bound
inc
mov
in
push
ds
ja
test
test
stos
rclb
inc
ret
pushf
jo
adc
loop
xchg
rcrb
mov
lahf
sbb
in
mov
les
mov
pop
cmpsl
push
scas
mov
mov
lahf
and
inc
xchg
xor
lods
data16
fnsave
pop
or
fisubs
pusha
xchg
xorl
sub
or
lods
push
cmp
add
inc
out
xchg
add
mov
outsl
mov
ja
hlt
and
in
push
sub
and
test
movsb
dec
mov
roll
or
cmp
in
sbb
cltd
push
loop
es
xlat
dec
fwait
and
mov
push
stos
decb
mov
movsb
fidivrl
jl
or
mov
shll
xor
sub
inc
xchg
push
push
int3
mov
loopne
test
inc
sbb
jo
out
mov
jp
int3
push
out
enter
cmpsl
push
insl
jmp
push
sti
push
fdivl
mov
cs
fisttps
xchg
aam
jmp
call
les
inc
cmp
add
je
cmp
lds
cld
cmp
in
and
pop
ss
stc
andb
jns
add
and
cmp
jne
cwtl
lock
nop
rclb
mov
push
and
fadds
mov
xlat
pop
jno
and
mov
adc
imul
pop
in
movq
mov
popa
out
xlat
cwtl
adc
mov
cwtl
mov
jecxz
dec
sub
push
lcall
inc
movsb
scas
lcall
ret
cli
xor
xor
adc
adc
in
sbb
xchg
xchg
call
shlb
push
frstor
lea
push
pop
pop
jmp
mov
out
jle
sub
xor
dec
sub
mov
cmc
dec
addr16
pop
inc
push
pop
ret
push
ror
sub
cmp
in
stc
mov
sbb
xor
lcall
or
outsl
aam
in
js
adc
test
insb
divb
mov
out
xchg
sbb
sub
dec
rcr
and
das
ret
dec
or
mov
or
sub
cmp
xchg
enter
mov
or
pop
addr16
lea
mov
push
sub
out
das
adc
cld
and
cmp
lods
mov
loope
push
cltd
xor
andl
stos
mov
addr16
pop
adcb
imul
mull
inc
int
push
mov
scas
cmp
gs
cs
lock
mov
insb
add
cmp
mov
xchg
in
mov
jne
imul
pop
inc
mulb
movb
sti
jbe
inc
cmpsb
add
pop
test
test
outsb
std
mov
xor
in
mov
dec
push
sbbl
int
or
mov
lcall
icebp
ficoms
in
popf
shll
out
or
loope
dec
push
dec
sbb
clc
inc
es
sub
add
xor
lock
fstp
sub
ss
mov
cmpsb
add
lods
adc
fldl
data16
sbb
sbb
push
out
or
xor
sbb
call
jle
mov
or
add
inc
mov
sbb
iret
rcr
ss
mov
or
sbb
das
pop
lock
repnz
test
add
stc
gs
enter
jbe
or
mov
jb
lcall
int3
xchg
push
mov
inc
dec
aam
pop
sbb
mov
or
mov
sbb
push
mov
or
imul
xlat
into
cmp
inc
pop
xchg
shll
sub
or
je
insl
jbe
dec
aad
cmpsl
or
xchg
and
mov
mov
mov
pop
and
and
jl
add
xlat
dec
rorl
dec
push
pop
fadds
sbb
adc
and
dec
sub
dec
mov
pop
adcl
jecxz
daa
jecxz
sbb
add
or
aaa
cmpsb
jbe
call
sbb
jne
ja
jg
add
scas
cmpl
aaa
jge
inc
mov
repnz
jmp
lods
aad
push
adc
sar
push
jno,pn
div
cs
xor
mov
sti
andb
sbb
int
pop
sub
jo
fldenv
add
add
jecxz
sarl
test
jle
cltd
sbb
es
push
mov
fmuls
test
jne
push
pop
sub
jb
sub
add
hlt
jmp
insb
mov
sbb
mov
jne
fstl
stos
imul
push
push
xor
mov
das
push
pushf
fs
dec
pop
lret
pop
pop
push
iret
lcall
inc
push
mov
movsb
or
test
mov
sbb
fiadds
push
lods
popa
pop
push
inc
push
add
mov
xchg
lea
xchg
ds
and
in
sbb
push
sbb
jl
add
fwait
mov
mov
dec
jno
push
sub
xor
mov
dec
jbe
enter
sbb
jp
push
cmp
in
mov
jmp
loop
inc
int
push
lret
adc
mov
mov
sbb
or
out
fimull
mov
mov
mov
out
mov
xchg
mull
xchg
sub
push
push
inc
ss
mov
out
enter
mov
das
jecxz
fwait
sbb
in
in
in
dec
sbb
xchg
pop
subl
or
or
pop
icebp
mov
or
sub
xor
push
sub
in
dec
je
or
ja
xchg
stc
pop
xchg
arpl
mov
enter
add
lea
shrb
push
popf
les
add
pop
daa
mov
or
push
aas
sub
mov
lods
jecxz
adc
mov
inc
fs
in
add
mov
mov
mov
xchg
mov
orl
sbbl
push
push
aad
mov
push
in
aaa
sbb
ds
add
or
popa
mov
pop
xor
cmp
xchg
adc
iret
dec
xchg
add
cli
bound
push
loope
cmp
out
or
mov
cmp
sub
imul
xchg
jg
leave
call
mov
imulb
rcr
xor
xchg
movl
inc
loop
adc
out
cmp
dec
jae
adc
iret
jl
jne
in
clc
fwait
adc
pop
dec
push
por
push
xlat
jbe
lahf
fisttps
mov
out
cld
cmp
add
repz
into
push
xor
stos
or
adc
xor
out
dec
inc
mov
inc
add
sarl
icebp
movsl
sub
xor
add
mov
xor
jle
les
xchg
fildll
lods
in
jno
push
arpl
jne
loopne
mov
add
inc
movsl
jp
ds
imul
pop
push
aad
mov
inc
inc
jae
add
cli
or
sbbb
add
scas
int3
cmp
mov
pop
ret
ret
add
or
mov
dec
mov
push
sub
int3
push
daa
and
and
decl
pop
fnsave
jno
dec
push
addr16
sub
mov
xor
scas
pop
imul
iret
pop
or
jae
cmpsl
lcall
sbb
inc
dec
sbb
insb
sbb
or
cmpsb
daa
loopne
xchg
iret
rorb
fs
jne
lods
int
loopne
jb
sub
pop
xor
mov
mov
cmp
pop
xchg
fwait
push
cmpb
cmp
pop
jb
xchg
sbb
or
sub
xor
in
pushf
sahf
notl
pop
popa
push
sbb
icebp
js
fsubl
mov
push
aas
in
mov
das
loopne
push
ss
inc
adc
xchg
push
data16
sub
cwtl
mov
or
mov
aam
dec
inc
mov
jle
dec
pop
mov
test
pop
pop
adc
mov
gs
dec
sub
adc
pop
mov
xor
inc
mov
push
sahf
jle
push
popa
and
xchg
pop
add
push
xor
cwtl
fldz
mov
xchg
sub
inc
dec
adc
repnz
fwait
repnz
dec
push
xchg
mov
popf
nop
adc
rcrb
fidivrl
std
lock
scas
adc
cltd
loop
out
pusha
sbb
shr
jmp
out
jns
adc
ds
inc
leave
mov
sbb
xchg
ljmp
xchg
jmp
cmp
adc
adc
dec
cwtl
bound
fsubs
jo
jge
out
mulb
negl
fcoms
sub
cs
push
xchg
adc
xor
jbe
adc
push
movsb
adc
dec
shlb
movsb
decb
sbb
cmpsl
sbb
mov
aad
in
call
cltd
mov
lods
push
cmp
inc
cmc
sub
ret
mov
mov
add
and
popf
mov
sub
pop
mov
fstpl
les
push
andl
test
lret
or
jp
sub
xor
insl
ftst
nop
in
sub
scas
gs
popf
jno
add
roll
inc
jb
sti
xchg
mov
leave
sbb
lods
stc
movsb
jns
into
mov
mov
push
sub
sub
xor
adc
mulb
push
add
pop
push
sarl
and
sub
or
push
cld
enter
sahf
lcall
scas
mov
nop
cwtl
mov
cmp
das
ret
sub
and
xchg
inc
fists
lahf
dec
push
pusha
scas
daa
subl
or
lds
std
dec
repz
xor
adc
lea
hlt
dec
pusha
rorb
adc
in
movsb
fcmovbe
adc
inc
cmp
push
lcall
adc
jmp
push
inc
sarb
adc
push
jp
shrl
imul
in
notb
sbb
pop
xchg
ret
popa
pop
stos
add
arpl
mov
cld
push
sti
add
add
negl
add
mov
iret
push
mov
sbb
iret
jecxz
dec
add
xchg
adc
or
add
movl
or
xor
dec
xchg
sbb
cmp
xor
dec
rcll
mov
mov
sbb
aad
pop
dec
arpl
rorb
adc
adc
pop
mov
inc
imul
inc
aad
ret
adc
loope,pn
ja
imul
cld
frstor
adc
data16
pusha
mov
mov
push
js
dec
into
mov
popa
inc
pmulhuw
cmc
pop
pop
cld
mov
mov
xchg
mov
aad
leave
jne
xlat
mov
inc
std
fstl
enter
sub
cmp
jb
pusha
cli
pop
sbb
push
mov
xor
mov
in
mov
es
push
inc
push
scas
mov
lock
cmpsl
mov
stos
js
dec
mov
mov
loopne
out
sbb
xchg
insl
repz
cli
fdivrp
or
or
lds
fcmovnbe
lods
cmovl
jmp
shll
mov
or
das
jle
or
xchg
dec
mov
inc
sub
das
dec
lock
mov
rcrb
pop
push
data16
sub
arpl
adc
cmp
xchg
mov
xchg
fsubl
insb
out
pop
xchg
fistpll
rorl
jg
mov
das
sbb
adc
loopne
add
mov
inc
dec
push
dec
sbb
iret
lea
lcall
inc
sahf
sub
addb
and
in
int
stc
jb
xchg
xchg
lea
or
nop
pusha
shlb
or
test
xchg
sub
aaa
xor
inc
ljmp
push
or
adc
xor
xchg
push
cwtl
rcll
dec
add
aas
nop
mov
mov
mov
adc
pop
sub
mov
lock
xchg
xchg
aaa
mov
dec
mov
xchg
test
or
ret
icebp
movsb
mov
ret
xchg
adc
and
lahf
lahf
dec
out
insl
xlat
out
rorl
lcall
bswap
scas
jo
inc
jns
das
stc
stos
cmp
movsl
shrb
movsl
cltd
bound
xchg
int3
sub
mov
rolb
pushf
sbb
stos
mov
add
jmp
sbb
fisttpll
xor
sbb
jns
push
xchg
jno
mov
push
inc
insl
cld
jo
into
inc
jo
adc
cli
add
clc
sub
outsb
mov
lcall
sbb
cmp
jns
roll
xor
mov
xlat
in
mov
out
fists
or
roll
aas
sub
xchg
leave
pop
cltd
lea
lret
pusha
gs
ss
inc
dec
imul
adc
mov
push
mov
int3
or
or
gs
loopne
hlt
dec
adc
iret
add
hlt
cltd
sub
mov
mov
mov
repz
jae
out
inc
mov
sahf
sub
or
adc
pop
mov
in
pop
ljmp
jmp
mov
dec
cmp
mov
f2xm1
addr16
aad
jmp
pushl
jbe
loop
dec
movl
push
jne
xchg
add
bnd
inc
cmp
inc
push
jecxz
xor
sahf
je
popf
roll
mov
jbe
leave
out
call
insl
out
sbb
jb
cmpsb
mov
add
mov
aad
xor
sub
sbb
add
xor
jle
das
or
adc
fcmovnb
and
mov
jmp
lcall
mov
outsb
rol
mov
clc
and
mov
or
fucomp
icebp
cmp
mov
inc
mov
xor
aam
mov
subl
je
das
shll
push
adc
fisubl
and
shrb
fadds
int3
outsb
shlb
js
cmp
sti
inc
lds
cmp
aaa
dec
push
xor
jmp
and
mov
das
nop
fisubrs
ja
push
cli
dec
adc
jns
insb
mov
inc
lock
add
icebp
repnz
mov
ficoml
cmp
inc
fisubrl
bound
push
pusha
jno
xor
or
insb
push
out
sub
notl
lds
icebp
out
push
xor
add
pop
add
ffree
imul
push
pop
gs
mov
inc
popf
popf
xchg
mov
adc
mov
out
pushf
repz
or
push
dec
aad
inc
adc
lcall
imul
fmuls
mov
xor
out
hlt
mov
xchg
jmp
xor
mov
cmp
jns
mov
pop
addr16
mov
jecxz
lcall
sbb
sub
shr
jne
inc
sbb
inc
ja
xor
sbb
pop
or
mov
mov
leave
fwait
addb
cmc
jg
cmp
pusha
mov
leave
sub
mov
imul
enter
lret
lods
sbb
dec
push
mov
cmpsl
pop
loop
imulb
test
shrl
pop
call
lret
mov
sahf
sbb
std
gs
repz
ja
sbb
jg
repnz
mov
mov
adc
in
xchg
pop
daa
sbb
or
je
xor
dec
bound
fisubl
lea
mov
xor
jl
fcoml
mov
or
mov
or
stos
stos
xchg
das
fwait
cmp
cltd
push
and
xchg
mov
int3
data16
dec
clc
mov
stc
scas
push
test
fwait
or
imul
js
push
jl
jo
and
jns
std
adc
fsub
lcall
xchg
hlt
jno
mov
pop
xchg
aam
and
insb
lock
jbe
sub
adc
sub
xchg
push
or
xchg
ds
out
fwait
or
popf
shl
sbb
in
pushf
in
jnp
aam
ss
lea
dec
ljmp
sbb
xchg
stos
or
add
jne
sbb
inc
mov
aas
cwtl
cld
repz
test
push
pop
es
fldl
or
popl
jo
and
shlb
mov
pop
cltd
loopne
jae
sub
xchg
pop
mov
adc
cmpsl
gs
ljmp
orb
fistps
pushf
mov
jl
filds
sbb
jno
inc
sahf
jb
and
or
loopne
and
insb
fs
or
add
das
jecxz
pop
fnstsw
daa
xchg
pop
jnp
pop
mov
xchg
je
in
adc
ror
and
rcrb
mov
pmaddwd
sbb
ds
push
inc
jae
push
nop
mov
jge
mov
mov
hlt
adc
mov
clc
or
dec
push
add
mov
pop
mov
icebp
popf
xchg
xor
xchg
in
mov
aad
inc
fsubl
out
push
js
vshufpd
cmp
pushf
test
clc
jb
enter
adc
iret
adc
outsl
lods
push
jmp
cld
pop
imul
adc
in
xor
fwait
scas
lods
push
or
mov
cmp
or
rcrl
push
shlb
in
mov
cmp
or
rcrb
mov
idivb
push
lea
mov
mov
pop
insb
pusha
sub
push
lcall
scas
stc
and
xor
repnz
pop
cltd
jns
movsl
jecxz
insl
ret
cwtl
sub
aad
xor
xor
ljmp
fcmovb
lret
aas
xchg
jl
rorb
sbb
js
outsl
pop
das
push
call
int
sbb
push
addl
rolb
inc
lret
sub
pop
pop
in
jle
es
scas
jnp
stos
rorl
leave
std
icebp
add
or
mov
sar
xor
test
jmp
jmp
shll
jl
push
sarb
xlat
xor
aam
imul
iret
ficompl
inc
das
cmp
pop
mov
frstor
es
cltd
jle
mov
js
aam
add
mov
push
aas
pop
mov
jbe
int3
pushf
aas
sub
les
jns
sub
cmp
ja
mov
iret
jmp
push
in
aas
add
lock
or
daa
rclb
xchg
aaa
mov
push
cmp
or
fwait
daa
sbb
lock
jne
add
jmp
mov
mov
stos
jp
sbb
gs
mov
lret
xorb
push
sahf
cs
pop
push
ret
push
mov
mov
jo
inc
std
or
push
mov
cmp
and
sub
cmp
pop
arpl
mov
gs
sbb
xor
lods
sbb
int3
mov
lds
mov
jo
fdivrs
inc
ret
subb
dec
push
test
call
lock
push
fdivrl
jo
adc
popa
data16
fidivrs
popf
or
inc
cmpsl
mov
rorb
cmp
dec
push
jg
cmpsb
fsts
lret
cld
mulb
xlat
fwait
xor
adc
inc
fwait
in
in
cli
stc
sub
pop
sub
jp
xchg
mov
dec
pop
or
ret
sub
pusha
mov
cmp
lret
xchg
dec
pop
cwtl
dec
rcrb
test
or
test
stc
imul
aaa
popf
jbe
pmullw
fwait
adc
clc
test
jg
les
jecxz
sbbb
sbb
cld
out
add
lods
lds
sbb
inc
mov
or
imul
sub
push
mov
sahf
std
rclb
jecxz
mov
cmc
sti
and
inc
sub
mov
xchg
ret
std
push
push
xchg
pop
test
adc
jae
daa
adc
mov
je
loopne
jl
mov
shlb
aaa
pop
cs
and
cwtl
sahf
mov
cmp
sub
loopne
dec
xchg
sbb
push
mov
fdivrp
incb
mov
gs
lods
fstl
mov
cmp
push
add
adc
mov
jge
cmpsb
cmp
std
push
fisubrs
inc
jo
mov
pop
imul
cmpsl
ja
iret
outsl
in
or
arpl
xchg
inc
ljmp
lods
mov
or
mov
cmpsl
jle
add
sbb
call
mov
pop
jle
addr16
push
mov
push
mov
es
fwait
cmp
xchg
jp
lret
sbb
push
popf
xchg
int3
lahf
sub
dec
add
cmp
and
mov
std
stos
pop
xor
pop
push
dec
shlb
jne
adc
jmp
cmp
push
rorl
xor
jnp
into
jns
nop
inc
movsl
and
cmpsb
sbb
add
repnz
mull
inc
outsb
xor
call
ret
jnp
nopl
arpl
sub
hlt
jg
xlat
sub
mov
cmc
testb
sub
aad
cli
xlat
sbb
cmpb
mov
lret
btr
xchg
fldenv
ds
arpl
push
repz
push
or
in
insb
fdivrp
scas
mov
push
syscall
cmp
aad
add
lods
std
lret
push
cmpsb
mov
inc
sahf
mov
in
jne
sub
cld
jle
sti
pop
jns
pushf
gs
movsl
xlat
leave
pop
pop
xor
aaa
lds
push
loopne
outsb
push
ja
adc
loopne
aas
cmp
mov
inc
xorb
fwait
pop
sbb
inc
fildll
lret
js
push
iret
shl
xor
push
mov
pop
push
jg
sub
jo
cld
inc
or
cmc
push
orl
rcll
sbb
scas
iret
cmp
loop
inc
pop
imul
mov
stos
rcl
push
jae
aam
mov
xchg
mov
xor
mov
aam
push
std
out
dec
lcall
xchg
adc
dec
in
negl
cmp
or
rcrb
adc
iret
das
jb
mov
mov
jbe
mov
mov
insl
ucomiss
sahf
sbb
xor
mov
mov
popf
push
mov
jecxz
mov
roll
ljmp
mov
pop
push
jnp
pusha
in
insb
mov
cmp
xchg
fisubs
and
sbb
icebp
bswap
push
cwtl
push
cmpsl
js
adc
mov
sub
jne
int
xor
repz
fsts
add
mov
mov
ss
mov
aas
dec
jnp
and
out
and
adc
dec
sbb
sbb
adc
loope
jnp
lret
cli
add
jg
imul
cmpsl
cmp
mov
fidivrs
push
mov
add
inc
mov
js
mov
lret
cmp
and
or
pop
test
mov
adc
ret
sbb
dec
and
cmp
pop
fsubrs
je
loop
cmp
jecxz
fsub
je
cmpsb
add
mov
jno
repnz
imul
enter
sub
xchg
dec
fdivs
sti
xchg
mov
inc
les
fsts
test
and
ret
or
xchg
pushf
fdivr
mov
add
cmp
mov
loope
test
dec
add
mov
orl
sarb
sub
movsb
jecxz
or
rorb
push
enter
sbb
sub
divl
es
mov
ss
insb
in
cmp
cli
jle
dec
mov
xchg
dec
add
push
ds
ret
in
mov
dec
daa
inc
add
lret
sahf
jo
mov
pop
xor
xor
jecxz
popa
cmp
rclb
cltd
pop
add
lds
pusha
aam
cli
push
fs
mov
flds
loopne
sbb
ds
out
in
xchg
add
ljmp
jmp
int3
rorb
inc
lods
xchg
lods
adc
push
sar
xor
in
mov
inc
xor
cs
movsb
mov
scas
into
push
aas
imul
and
pop
sti
pop
add
insb
mov
add
cmp
roll
push
jns
mov
out
jp
enter
roll
sub
out
sbb
push
ret
cmp
out
shl
in
mov
cmp
cmp
mov
mov
mov
mov
jnp
pop
rcrl
mov
fucomi
dec
sti
jo
add
mov
mov
xchg
xchg
pop
in
pop
xor
xor
or
jl
xchg
std
cmp
pop
sub
sti
inc
daa
mov
jl
ss
adc
mov
or
cwtl
sub
call
dec
test
add
sbb
es
cmp
sbb
insb
inc
jns
rorl
jg
fwait
cmp
roll
mov
sti
xor
xchg
insb
push
data16
cltd
push
pushf
xlat
mov
hlt
daa
push
imul
cmp
or
add
jns
add
pop
xor
mov
xchg
hlt
jne
aaa
subl
shrl
pop
or
dec
push
cltd
mov
pop
xlat
sub
fs
pop
or
sub
movsb
mov
mov
jbe
pop
push
xchg
and
test
dec
jg
pushf
sub
xor
loopne
xor
sbbb
arpl
mov
mov
adc
mov
int3
push
mov
insl
je
cmp
jbe
add
push
stos
mov
fidivs
sub
imul
or
dec
les
pop
dec
mov
or
popf
stos
push
xchg
inc
pop
sbb
pop
orb
sub
shl
push
loope
or
mov
mov
ds
loopne
repnz
shlb
fldenv
icebp
mov
add
leave
scas
cmp
sbb
jae
loopne
inc
pushf
push
std
movl
cmpb
loope
les
repz
push
or
std
or
insb
jl
inc
cmc
iret
jae
lret
sbbl
add
pop
enter
into
or
insb
lods
rorl
or
jnp
cmpsb
pop
jecxz
lods
cltd
pop
cmp
jge
push
xchg
adc
dec
adc
cmp
or
bound
out
xor
push
mov
xchg
in
jb
adc
mov
int3
adc
jmp
int3
sbb
repnz
xor
cmp
aaa
in
cli
mov
dec
pop
stos
push
icebp
sbb
xchg
and
mov
aam
sbb
outsb
adc
imul
lcall
sub
ja
movsl
orl
adc
pushf
fimull
jge
aaa
adc
sbb
mov
mov
subb
adc
and
sahf
enter
pop
pop
inc
incl
xor
aam
pop
xor
push
adc
hlt
leave
mov
cmpsl
jecxz
xlat
iret
or
icebp
hlt
push
enter
std
add
xchg
dec
loop
repz
test
xor
jne
push
add
je
xlat
mov
in
cmc
hlt
in
push
out
cvtdq2ps
mov
test
rcrl
mov
mov
icebp
in
xchg
sbb
mov
cmp
stos
out
das
inc
ret
outsl
mov
push
addr16
lods
lret
xchg
inc
push
mov
mov
jo
es
and
xchg
fs
in
jecxz
mov
push
cltd
mov
mov
leave
lahf
mov
aam
lods
push
push
dec
cmpsl
sub
cmp
lahf
int3
xchg
roll
mov
mov
sub
je
das
or
mov
repz
pop
push
pusha
sub
imul
mov
das
sbbb
outsl
test
inc
loop
jl
movsl
leave
dec
push
cmp
cmp
in
lods
data16
pop
pop
xchg
xlat
mov
rclb
movsb
cs
test
mov
xlat
into
add
lds
sub
dec
mov
es
stc
mov
pop
or
cld
xchg
lds
fld
cmp
push
sub
jnp
test
jmp
fmulp
enter
outsb
pop
push
push
jmp
aam
scas
mov
or
sbb
and
movsb
pusha
xlat
jle
mov
imul
or
cmp
test
into
outsb
fs
cwtl
hlt
and
fldcw
cwtl
mov
inc
xchg
into
loop
pop
fnstenv
push
jge
and
jmp
add
les
sub
data16
sub
cs
ss
aad
xchg
mov
xchg
xor
jae
mov
int
sbb
call
sti
rcrl
movsb
xchg
jbe
push
subb
sbb
fwait
jle
jnp
rcrb
cmp
jns
bound
and
fwait
jne
dec
mov
add
out
push
inc
xor
or
mov
adc
ret
pop
addr16
sub
pop
shlb
addl
xor
mov
pushf
cmp
movsl
mov
mov
and
sub
je
lea
fcmovnb
movsl
mul
int
js
aam
ret
loopne
call
sub
in
es
enter
xchg
xchg
gs
movl
inc
jecxz
cmovns
stos
out
jg
jae
mov
sub
shrb
or
movl
mov
xchg
fadds
xchg
mov
cmp
aas
pop
mov
pop
aas
jecxz
mov
pop
push
aam
or
iret
or
movmskps
sub
lods
movsl
sbb
fsubp
lahf
mov
lock
imul
rorl
adc
mov
jbe
fsubs
mov
pop
es
ret
push
aam
mov
mull
mov
jnp
repnz
loop
jmp
stc
int3
and
pop
sub
inc
lds
mov
int3
dec
cmp
mov
mov
iret
lods
jno
rolb
std
dec
stos
lcall
push
sub
xor
fisubrs
sub
lods
xor
clc
mov
pop
xchg
aaa
jb
inc
jb
jecxz
adc
cwtl
shlb
stos
sub
mov
jb
mov
xor
jnp
iret
xchg
stc
cs
cmc
dec
js
sbb
ds
call
bound
sbb
inc
jg
mov
xor
loopne
jnp
es
cmp
rorl
cmpsl
out
mov
jbe
negb
add
add
fbstp
mov
popf
dec
outsl
pop
jns
add
adc
ljmp
jecxz
mov
jne
mov
push
mov
movsl
out
cmpsl
lret
das
loope
sbb
shlb
aam
and
and
xchg
mov
xor
ret
jno
xor
add
std
mov
dec
inc
dec
add
lret
jns
lock
cmp
jbe
aad
ret
cs
insb
or
add
cltd
adc
pusha
cmpl
dec
rcrl
sbb
lock
gs
iret
and
test
das
adc
xchg
scas
push
jl
cmova
mov
outsl
xchg
mov
and
pop
mov
mov
pop
lds
mov
sbb
or
sub
add
cmpsb
adc
fldl
pushf
push
sub
aaa
jle
cmp
adc
push
jmp
add
pop
dec
jbe
dec
ss
loope
dec
pop
repz
dec
xlat
inc
ja
jle
mov
in
int
dec
xorb
push
rep
sbb
jp
mov
mull
scas
push
gs
cmp
push
adcb
pusha
test
mov
inc
xchg
sub
rclb
cld
loopne
push
adc
clc
arpl
inc
or
mov
insb
mov
insb
xchg
call
jne
lods
test
add
dec
jb
fs
ljmp
pop
js
data16
test
inc
add
mov
jnp
rolb
lods
aad
push
int3
fs
sbb
pop
pop
lret
pusha
out
and
adc
sub
push
inc
insb
cwtl
mov
push
outsl
push
xor
sbb
ljmp
ljmp
push
pop
loopne
xor
xor
cmp
repz
shrl
pushf
cwtl
inc
sti
xchg
cmp
mov
pop
mov
cld
jnp
repnz
data16
in
pop
mov
subl
fmul
subb
gs
test
mov
adc
mov
adc
cmp
shrl
pop
icebp
popa
or
xchg
bound
testl
sbb
mov
cmp
sarb
adc
lcall
xchg
and
jmp
cmp
in
test
into
addr16
aas
in
clc
push
ret
dec
sbbl
cli
out
hlt
jecxz
cmp
lods
sbb
inc
popf
sub
repnz
push
out
outsl
dec
testb
dec
pop
ljmp
jne
mov
scas
push
in
mov
xchg
xchg
xchg
xchg
out
adc
sbb
clc
out
sub
daa
insl
xor
pop
adc
dec
cs
fidivrs
stos
insl
lret
in
repz
stos
daa
repz
and
mov
addr16
fcmovu
aam
adc
adc
jmp
cmp
mov
in
sbb
or
pop
lods
addr16
fcmovbe
test
mov
ja
pop
jecxz
lcall
popf
or
aad
fnstsw
lret
cltd
es
shll
scas
dec
mov
imul
lds
jg
lret
xchg
sbb
mov
call
push
add
insl
push
pop
lock
cmp
rorb
dec
fldl
fidivrs
push
mov
push
mov
mov
aad
cmc
test
dec
ffreep
sub
pop
jmp
icebp
push
adc
add
les
dec
rclb
mov
fisttps
fisttpll
outsb
rclb
stos
bound
pop
lret
push
pop
ja
aad
cmp
imull
outsb
push
and
jl
mov
xchg
push
push
clc
jno
xor
sub
rol
xchg
mov
mov
loopne
aam
lcall
xchg
push
jle
outsb
xchg
push
xchg
rol
inc
stos
lahf
nop
and
inc
cmc
cld
pop
sbb
hlt
leave
adc
rcr
dec
mov
and
int
jae
mov
imul
repnz
mov
daa
lods
dec
push
push
fmulp
jp
push
call
aaa
mov
push
rol
andb
imul
outsl
lods
es
out
loop
in
add
dec
xor
cld
mov
addr16
jbe
sub
fcoml
aad
ret
js
and
cmp
adc
adc
mov
lcall
pop
jl
inc
and
cltd
outsl
daa
push
xlat
pop
inc
scas
dec
sete
fidivrl
xor
push
call
mov
push
add
aaa
cmp
out
pop
jecxz
mov
ret
in
push
out
test
test
sub
and
daa
mov
outsb
aam
dec
popf
or
adc
out
dec
xor
mov
push
outsl
insl
cmp
cmp
repz
push
je
lock
cmpsl
sub
fcmovnu
dec
mov
pusha
outsb
add
mov
mov
in
ret
fwait
loop
add
movsl
out
ret
mov
imul
nop
inc
dec
mov
add
ret
aam
xchg
inc
push
aaa
out
insb
add
cli
out
shl
inc
jmp
jae
loop
mov
xchg
rorb
ret
clc
mov
xor
cltd
inc
mov
push
push
pop
sahf
cmpsl
cld
imul
jo
adc
jmp
xchg
mov
and
jmp
push
inc
add
jge
sub
cmp
or
imul
adc
lods
sbb
adc
pop
lea
inc
es
mov
cli
inc
stc
arpl
sbb
mov
ds
aad
mov
xlat
out
inc
inc
hlt
in
sub
pop
push
mov
xor
sbb
sub
sbb
and
mov
or
stos
xchg
mov
mov
xor
add
rcrl
mov
adc
xchg
add
pop
inc
rcrb
push
pop
sbb
xchg
std
mov
imul
and
rolb
call
jl
mov
inc
pop
out
add
gs
cmpl
mov
mov
loopne
cltd
sbb
inc
loop
add
jbe
fcomps
iret
sahf
nop
sbb
sahf
push
test
aam
scas
filds
sub
cmp
dec
dec
sub
mov
dec
sbb
mov
shll
jge
lock
push
jle
mov
sbb
xchg
mov
gs
or
cs
mov
jge
stc
js
inc
xchg
dec
out
pushf
loope
pusha
mov
das
out
cmp
out
ja
movsl
dec
add
dec
mov
sahf
or
jno
mov
add
xchg
inc
jg
jecxz
jp
lods
pop
inc
sarl
sub
leave
xchg
enter
sub
xchg
in
jecxz
out
aad
rolb
pop
jbe
idiv
pop
mov
xchg
test
imul
jnp
or
pushf
xchg
les
lods
mov
jb
inc
sub
or
es
fs
or
dec
sbb
call
popf
mov
cltd
lods
iret
push
bound
arpl
scas
data16
les
sub
jbe
jo
xchg
ds
xchg
out
push
nop
iret
xchg
lock
lock
jno
dec
mov
xchg
sbb
mov
pop
cmc
les
scas
stc
dec
jno
test
push
rcrb
movsb
dec
scas
and
ret
mov
dec
dec
prefetcht2
ret
jl
jns
sbb
sbb
movsb
jbe
int
push
pop
dec
insl
lock
cmpsl
ror
push
lods
pop
fisttps
add
xor
adc
jo
js
pop
fdivr
sub
out
xor
dec
mov
shll
pop
mov
jnp
pop
xchg
jmp
shll
inc
or
adc
fistl
int
popf
xlat
sub
insb
cmp
jne
out
mov
outsb
inc
fnsave
movsl
or
xchg
ljmp
cmp
and
std
cmp
fdivrl
ja
adc
or
pop
adc
lods
out
fnstsw
popf
pop
cmp
aad
mov
add
sub
mov
xchg
js
push
jne
ja
std
loope
or
mov
inc
sub
xchg
lods
cmp
add
pop
push
or
je
and
mov
jns
and
movsb
jmp
inc
jle
xchg
xor
jge
les
xor
int3
scas
lock
shl
or
push
jecxz
dec
out
mov
inc
fisttpll
xor
sbb
outsb
arpl
nop
fmuls
out
popl
xchg
mov
shl
out
mov
leave
shl
inc
nop
pop
pop
or
lcall
mov
pop
leave
jmp
push
insb
cmp
jl
mov
cmpsl
mov
sbb
xlat
sub
xchg
cmp
sbb
cli
push
mov
cs
push
out
fwait
adc
gs
mov
sub
inc
lahf
adc
cmp
in
mov
fs
cmpsb
sub
roll
lock
aaa
std
je
fs
shl
ja
shll
sbb
push
mov
mov
jns
sub
scas
pop
loop
dec
lods
shlb
jnp
push
jge
in
lcall
pop
leave
cmp
add
or
int3
push
mov
xchg
inc
aaa
or
aas
jl
cmpl
add
mov
xor
mov
dec
aam
sub
mov
pop
add
dec
call
inc
add
aaa
mov
xchg
dec
out
idiv
mov
mov
outsb
mov
pop
push
ds
xchg
push
cmp
pusha
rclb
cmp
xor
xchg
loopne
leave
jmp
push
in
jp
cld
stc
lea
xchg
in
sbb
mov
iret
jp
rcrb
push
mov
loop,pt
jl
sbb
and
or
out
adc
xor
lcall
dec
bound
lds
jbe
outsb
es
push
jg
cmp
pushf
fcoms
inc
jns
cmp
sahf
lret
mov
sbb
fwait
dec
and
jl
and
imul
xor
push
and
xor
mov
or
fs
pop
lret
xor
mov
aas
sarb
adc
adc
jecxz
imul
test
push
lret
popa
mov
lret
sbb
and
cwtl
mov
imul
je
mov
sbb
daa
ficoml
arpl
pop
add
leave
fsubrs
pop
data16
pop
push
cmpb
add
in
addr16
ret
and
adc
mov
int3
scas
rcrb
fadds
sbb
mov
xor
mov
mov
push
jns
sub
ret
mov
sbb
leave
repnz
mov
adc
iret
hlt
mov
enter
popf
test
xlat
cmp
mov
cmp
pop
cmp
mov
bound
sub
flds
les
inc
ja
ret
lds
cmp
cmpsb
xchg
stos
mov
fdiv
cmp
gs
outsl
push
popa
pop
pop
cld
xchg
pusha
rolb
decl
cld
add
xlat
xor
insb
add
mov
testl
mov
in
fnsave
push
fwait
je
and
in
iret
jbe
mov
lods
testb
mov
push
jne
faddl
and
mov
jmp
int3
adc
pop
pop
aaa
xchg
push
jp
jle
mov
es
sub
push
fsubl
movsb
cltd
mov
js
daa
ljmp
out
test
repz
gs
jmp
dec
inc
fsubl
iret
xchg
mov
xor
sbb
stos
adc
xor
mov
je
sub
ret
scas
dec
lods
shl
ss
in
and
out
or
repz
add
cmp
jb
adcb
insb
mov
out
orb
fdivrp
jge
hlt
pushf
test
jl
jae
mov
aas
sarb
in
xchg
jecxz
ja
sub
movsb
mov
popf
adc
mov
enter
jp
jno
push
aas
cmp
adc
jecxz
mov
xor
sub
mov
sub
rclb
xchg
fs
mov
jmp
das
push
in
cltd
lds
clc
es
and
sub
leave
and
dec
jmp
jge
pop
loop
mov
xchg
icebp
cmp
icebp
ret
mov
push
sub
out
adc
cld
add
jmp
pop
insb
and
ret
cwtl
test
mov
mov
xchg
jb
outsb
jae
push
or
in
mov
ds
push
ja
lods
je
add
lods
stos
jno
stc
notb
mov
cmpsb
pop
lea
sub
ljmp
and
xchg
mov
into
nop
sub
hlt
cli
push
xor
insb
mov
pop
jb
cmp
push
idivl
scas
dec
adc
bound
adc
xabort
mov
sahf
je
push
and
jmp
scas
std
testb
stos
or
fstpt
inc
scas
cmp
or
inc
push
daa
clc
movl
jmp
movsb
jp
test
sub
fisubrs
pop
push
xor
mov
lahf
mov
xor
incl
mov
mov
in
push
push
enter
sub
sbb
fcmovu
pusha
movsl
lods
out
stos
repz
test
mov
sbb
pop
and
inc
mov
xchg
mov
fs
test
sahf
mov
lods
fnsave
mov
dec
aas
mov
aam
mov
aaa
sub
mov
movsb
test
gs
iret
scas
and
pop
mov
and
scas
xor
sub
cli
sub
push
dec
or
popf
inc
inc
aaa
and
in
es
cld
subl
fdivrs
ja
dec
in
adc
sub
push
int
movsl
sbb
movsb
push
xchg
jne
sbb
jns
ja
and
test
loopne
mov
mov
sbb
pop
pop
das
xor
sbb
dec
adc
inc
repz
add
pop
cmp
hlt
xor
call
inc
lahf
xchg
psrlw
mov
mov
mov
mov
repnz
sub
jb
sahf
jb
dec
dec
xchg
dec
nop
adc
icebp
bound
imul
pop
sub
mov
xchg
push
rorl
push
lcall
fisubs
mov
fdivs
bound
stos
cld
mov
into
ss
ss
push
scas
loopne
mov
add
jg
flds
icebp
add
es
adc
dec
sbb
nop
je
cs
cmp
push
add
jns
cmp
pop
mov
add
push
mov
and
mov
cmp
jne
cmpsb
inc
inc
popaw
xor
ja
rcrl
aad
cmpsl
fldcw
push
ret
xchg
dec
popf
mov
pop
fbstp
pop
rcll
loopne
jne
or
je
divl
mov
jns
rorb
in
ja
imul
xor
orl
push
push
inc
int3
dec
jb
dec
rclb
and
fwait
cmpsl
in
pushf
jle
push
xor
add
xor
sti
dec
adc
mov
dec
lods
enter
mov
int3
xor
ret
mov
lock
js
test
addl
xchg
lret
mov
sti
push
inc
mov
into
in
in
loope
rcll
dec
jp
sbb
or
lods
lock
in
loope
movsb
add
cmpsl
mov
jnp
mov
enter
mov
jl
jmp
movsb
cmpsb
test
mov
push
and
cmpsb
fldenv
lods
xchg
in
fimuls
jo
jae
popa
pop
mov
fsubrl
adc
icebp
out
pusha
mov
dec
into
data16
pop
movsl
ljmp
testl
push
enter
xlat
ret
movsl
cli
xlat
mov
fdivrp
rolb
psrlw
jno
clc
orl
lret
addr16
inc
rcrl
inc
xchg
ret
pop
dec
sbb
sti
or
lret
loopne
jbe
inc
notb
xor
mov
je
dec
imul
hlt
into
std
fsubl
and
mov
inc
daa
or
dec
mov
ret
pop
addl
xchg
xchg
pop
push
xor
test
in
mov
pop
cmp
xchg
cmc
dec
les
fwait
push
jb
ret
cmpsb
add
lahf
cmpsl
inc
fstpl
pop
loope
sbb
adc
fnstcw
push
mov
popl
leave
add
ja
jl
idiv
pop
push
mov
adc
pop
repnz
jmp
imul
inc
jl
dec
cltd
rorl
scas
push
jnp
repnz
dec
xchg
lods
test
push
test
loope
sub
rol
xor
out
out
pop
pushf
scas
dec
ds
das
inc
es
cmpsl
mov
repnz
or
mov
or
jecxz
ljmp
test
push
push
mov
and
mov
mov
es
jae,pn
xchg
leave
lret
cmpsb
mov
mov
pop
xlat
mov
ffreep
push
cmpsb
mov
dec
mov
pushf
outsb
lcall
xchg
les
loop
sbb
fs
xchg
adc
cmp
aad
xchg
dec
push
and
les
mov
xor
adc
mov
mov
jnp
loopne
fstpt
lds
fisubl
or
pop
dec
subl
fs
xor
fldcw
adc
sub
lock
std
push
pop
rorl
outsb
pop
jecxz
sarb
lret
movsl
jg
aam
adc
jp
out
sub
pop
nop
fsubp
mov
or
popa
or
aad
sub
push
jg
cmc
inc
addr16
out
data16
lret
insb
dec
sar
sbb
lods
and
lret
pop
fcomi
dec
add
fmul
mov
sub
popf
and
lods
inc
mov
push
loope
cli
and
stos
inc
inc
mov
sub
or
mov
or
shlb
aas
xchg
aad
scas
loopne
or
mov
andl
cmp
dec
rcrb
or
andb
sahf
pushf
mov
mov
ja
push
mov
push
dec
push
repz
scas
jp
or
sti
popa
lcall
push
pop
lcall
push
mov
leave
sbb
faddl
outsb
mov
lods
nop
or
pop
call
mov
sub
ja
cmp
fs
cmpsb
pop
js
inc
outsl
xchg
mov
jbe
ljmp
in
xlat
mov
jae
mov
ljmp
sub
divb
xchg
cmp
sub
xchg
xchg
cmova
jmp
mov
push
cs
aad
jle
cmp
jle
add
jl
sub
dec
stos
xlat
xor
clc
nop
lret
mov
push
inc
sbb
sub
fstl
push
and
mov
subb
add
sub
sub
in
jge
es
movb
mov
loope
lret
xchg
inc
movsb
jmp
dec
cmp
test
les
int
movsl
out
and
adc
repz
cld
push
sub
jmp
adc
js
sub
lods
xor
imul
sub
testb
fcoml
test
dec
dec
divl
in
dec
cmpsb
jmp
int3
nop
iret
cmp
xor
and
sbb
imul
addb
orb
lds
lret
mov
int3
jbe
mov
stos
fbstp
mov
in
inc
cmpsl
and
cwtl
insl
sub
add
cmp
xor
out
mov
shlb
mov
sub
xchg
push
pop
int
jge
fsubp
pause
sub
cmp
lret
sub
mov
int3
nop
add
add
rolb
xor
xor
or
stc
push
push
and
cmp
and
push
adc
test
cmp
mov
and
inc
movsb
mov
icebp
xchg
arpl
movsb
sub
aad
sahf
pushf
cwtl
ss
mov
add
jb
scas
mov
mov
xor
cmp
xor
sbb
subl
dec
push
imul
inc
and
movsb
inc
sub
xor
std
ret
push
shr
mov
xchg
xor
xchg
mov
sub
sti
pop
lods
jnp
imul
pop
xchg
pusha
pop
push
jno
lock
scas
lret
sub
adc
arpl
add
sub
cwtl
pop
leave
xchg
sbbl
pop
gs
scas
jle
jl
sbb
jle
lea
cld
lods
mov
jae
sbb
pop
ja
xor
sub
adc
add
adc
shrl
out
pop
mov
je
gs
adc
push
pop
dec
out
mov
das
jno
loope
test
pop
mov
xor
mov
adc
push
shl
out
inc
shl
push
xchg
jne
jg
jg
and
mul
sbb
cmp
pop
inc
psubsw
hlt
mov
dec
mov
sbb
adc
aas
pop
stos
into
push
jle
loope
lret
dec
and
pop
lcall
gs
xor
mov
insb
in
out
mov
cmp
jno
fstpt
fimull
std
dec
das
cmp
arpl
adc
inc
adc
daa
push
leave
int3
adcl
out
cltd
mov
push
inc
mov
push
and
daa
lret
push
jl
jno
push
push
jno
jb
xor
jg
in
insb
mov
lcall
mov
dec
and
xor
bound
push
mov
jle
adc
add
jmp
addps
and
pop
jmp
outsl
arpl
cld
cmpl
sub
adc
mov
sarl
pusha
fiadds
jmp
hlt
out
mov
lcall
jecxz
aam
clc
and
cmp
enter
fidivs
lret
ret
daa
divb
push
dec
and
sbb
movsb
xchg
mov
in
mov
mov
lcall
lret
pop
adc
push
mov
and
push
insb
scas
in
xchg
js
ret
mov
fldcw
sbb
ret
inc
das
outsl
xchg
push
mov
sub
les
mov
dec
aaa
pop
pop
in
jg
add
cli
popf
clc
jle
in
xor
cmp
test
bound
and
pop
out
outsb
sti
adcb
pop
pop
push
int3
aad
cmpsl
inc
gs
jecxz
ds
push
jb,pt
cmp
push
fidivrl
into
jb
out
sbb
shrl
dec
and
xor
sti
shlb
xchg
div
pop
cli
or
es
repnz
jmp
sbb
mov
jns
stc
add
push
and
push
or
push
test
xchg
push
in
xchg
push
in
cltd
mov
ss
int3
push
jnp
lcall
in
addr16
bound
and
push
mov
or
aad
fwait
mov
or
xchg
or
shlb
ja
sbbl
mov
psrad
mov
push
push
jne
push
and
push
or
push
xchg
jle
sbb
xor
mov
mov
mov
push
mov
xchg
xor
inc
test
std
lret
lods
popa
xchg
call
clc
loope
fcomps
aam
jl
scas
pop
jle
mov
std
icebp
inc
scas
ds
add
pop
xchg
pop
shl
daa
movsl
pop
inc
pop
adc
and
icebp
cmpsl
xor
cli
cltd
pop
add
loope
mov
cmp
out
push
repnz
cmp
add
jl
imul
lea
pop
adc
icebp
mov
push
mov
outsl
xchg
je
ljmp
pop
mov
arpl
scas
imul
jo
out
inc
add
or
sar
cmp
xchg
pop
sub
sbb
jmp
clc
int3
lahf
jne
adc
insb
loope
je
push
dec
sbb
rcrb
jnp
rol
loop
sahf
xchg
hlt
faddl
mov
xor
xchg
loopne
and
xchg
inc
push
enter
fucomip
pop
jmp
test
and
jge
adc
pop
and
inc
out
jg
aas
cmc
imul
jecxz
into
mov
xchg
jle
sub
mov
push
aaa
popf
jbe
dec
mov
and
fiaddl
and
lea
and
add
push
push
mov
icebp
mov
xor
fldcw
dec
stos
lock
call
xchg
xor
imul
mov
xchg
sbbb
jno
xor
sub
pop
repnz
cltd
or
arpl
cld
sbb
shrl
jns
mov
insb
mov
pop
xor
jecxz
negb
jne
pop
cmpb
push
nop
jmp
pop
movsb
data16
into
popa
pop
pushf
pushf
ljmp
decl
rcrl
leave
daa
mov
in
ja
cmp
inc
pop
mov
xor
sub
and
pop
faddl
or
gs
xchg
xchg
fcmovu
inc
lret
xor
jge
imul
sbb
ret
rcrl
cmp
call
push
gs
aas
sub
xor
and
sbbb
sbb
sub
mov
push
or
hlt
in
into
out
loope
int
pop
add
xchg
test
pop
es
push
dec
fstpl
aaa
imul
adc
mov
jnp
mov
repnz
cmp
stc
ror
xchg
sub
push
or
dec
adc
sarl
cltd
fisubl
leave
stos
inc
dec
mov
in
jns
arpl
imul
mov
pop
fnstsw
repz
fsubrs
gs
fwait
stos
loop
and
lods
cmp
jb
and
das
stos
in
pop
outsb
out
or
cmp
addl
fldt
xlat
sbb
cltd
fsubrl
sub
jnp
enter
jae,pt
xor
jecxz
out
ss
mov
xchg
jnp
cmp
pop
test
mov
mov
jbe
sub
xlat
inc
push
pop
sub
jmp
and
lds
ss
mov
scas
add
orl
and
push
pop
in
xchg
and
cmp
or
iret
int3
inc
loop
mov
pop
or
jbe,pn
dec
mov
pop
sbb
cwtl
inc
mov
je
jo
stos
or
xchg
push
hlt
inc
cmp
leave
aaa
lds
add
addr16
in
cld
inc
jmp
nop
fwait
or
xor
cmc
out
mov
imul
loope
mov
cmpl
sti
mov
insl
ja
push
xor
xlat
pushf
cld
jmp
mov
mov
inc
cmp
adc
les
stc
jns
int3
mov
dec
insb
mov
or
aad
cmp
imul
dec
add
ss
and
mov
mov
aas
mov
jl
pop
inc
mov
sub
dec
inc
bound
fldl
mov
iret
xchg
movl
mov
out
or
and
cmp
push
push
jae
inc
mov
mov
into
mov
cld
loopne
in
push
test
mov
addb
jnp
cmpsl
dec
xchg
lahf
push
mov
mov
cmpsl
sysenter
jle
in
dec
stos
cwtl
andb
adc
mov
pop
jp
paddb
rcll
push
mov
jb
fucomi
nop
inc
test
adc
cmovp
and
add
cmp
adc
jl
int3
pop
lock
add
sbb
shlb
lods
pop
sbb
xor
nop
cmpsb
jp
movsl
dec
subl
or
xor
cmpsl
pop
cltd
inc
jecxz
ja
insb
pop
in
mov
pop
pop
out
mov
jp
adc
jns
ret
mov
aad
sbb
xchg
mov
jae
jle,pn
mov
jns
js
sbb
push
push
adc
xchg
jno
jecxz
inc
mov
jno
mov
jne
dec
sahf
mov
mov
push
repnz
arpl
addb
mov
adc
in
ds
adc
push
popf
cmp
movsl
jo
or
out
xchg
adc
cmc
scas
sahf
sbb
fsts
push
imulb
push
push
push
in
or
call
mov
mov
dec
sbb
jg
sbb
fst
mov
in
into
and
xchg
fisttps
mov
scas
push
lods
nop
fbld
es
iret
cwtl
movsl
inc
loopne
xlat
int3
daa
popa
addr16
inc
js
or
enter
mov
in
add
and
cli
push
xchg
or
dec
fsubrl
jecxz
sbb
clc
enter
cmp
pslld
cmpsl
outsl
icebp
xchg
fs
cmp
out
outsl
lock
xlat
pop
mov
dec
add
lock
adc
jbe
gs
out
sub
rclb
out
dec
jo
lods
in
mov
mov
sahf
fdecstp
leave
cld
aam
shlb
insb
test
aaa
lods
mov
or
xchg
or
cmp
cmpl
jle
sub
lret
and
inc
popa
stos
sub
icebp
sub
mov
inc
bnd
dec
std
add
pop
subb
sbb
jl
adc
test
dec
lods
add
push
mov
adc
pop
loop
rorl
iret
shrb
push
clc
call
stos
pop
notb
clc
lahf
push
adc
nop
cmp
or
jle
movsb
adc
rcrl
push
dec
sbb
mov
push
sub
cs
mov
push
sub
jne
loopne
aas
sbb
ret
jl
pop
test
adc
adc
orb
loope
push
xchg
loope
testb
fstp
cmc
or
repz
mov
adc
pushf
lcall
test
lret
or
push
inc
inc
or
push
mov
sub
outsl
and
cmp
movaps
push
cmpb
adcb
adc
iret
into
and
mov
pop
test
jb
jg
in
xchg
test
and
mov
inc
addr16
pop
sbb
out
bound
inc
dec
mov
daa
pushf
jle
push
add
imul
ljmp
sub
xor
or
mov
and
pop
aad
adc
popf
lea
or
mov
std
mov
leave
fsubrl
pop
frstor
and
dec
xor
add
push
inc
out
sarl
jmp
enter
pop
xor
rcrl
lcall
mov
jmp
add
mov
outsl
fnstcw
xor
into
leave
xchg
dec
mov
into
and
xchg
pusha
in
xor
leave
dec
data16
mov
sbbl
cwtl
pop
xchg
mov
lods
cli
adc
xchg
sub
adc
imul
mov
ret
push
cmp
ljmp
cmp
push
and
jns
adc
lea
add
aaa
or
lock
ret
ficomps
mov
pop
sbb
xor
or
mov
mov
mov
mov
add
cld
mov
jl
in
movsb
sub
mov
pop
jmp
shll
xor
xchg
stos
sarl
cld
xchg
jne
fsubl
orl
and
fdivl
push
iret
addr16
dec
mov
lods
push
jle
pop
out
push
sbb
adc
dec
mov
add
std
xor
ds
or
mov
dec
fisubl
scas
movsl
das
pop
dec
ss
dec
filds
gs
pop
dec
out
cmp
jge
fcom
pop
inc
imul
aas
andb
cld
das
dec
aas
adc
aas
add
lret
mov
cmp
cmp
das
dec
pop
xchg
dec
flds
call
out
aad
or
icebp
sbbl
arpl
pop
in
out
inc
out
ret
adc
popf
push
test
sbb
xchg
pop
mov
pushf
adc
or
jp
call
and
jmp
cli
mov
or
push
std
cld
adc
out
imul
je
sbb
jno
mov
iret
jmp
les
jns
add
test
out
xchg
mov
ljmp
adcb
xchg
xchg
imul
push
addr16
das
xchg
test
xchg
je
fdivr
push
int
mov
jne
xchg
flds
xchg
int
inc
and
and
ret
xor
aaa
sub
lods
xchg
xor
imul
std
mov
sbb
ret
jnp
bound
in
add
push
sti
push
enter
imul
mov
pop
imul
lahf
inc
mov
adc
dec
lock
fcomi
mov
orl
xor
adc
sbb
dec
add
movb
out
mov
pop
xchg
rorb
cmp
mov
scas
mov
test
loop
dec
pop
jno
imul
pop
jp
addr16
xor
cmp
out
sahf
dec
lret
xchg
mov
push
imul
push
sahf
scas
adc
add
and
into
lods
jl
orb
das
mov
xchg
cltd
dec
push
inc
add
sbb
fistps
stos
fmulp
fs
inc
cmp
int3
aaa
add
stos
sti
push
mov
xchg
jl
sbb
in
mov
icebp
fsubrs
jle
add
int
clc
xchg
nop
mov
mov
daa
icebp
das
mov
pop
push
add
mov
int
stos
mov
andb
in
mov
dec
xchg
xor
push
insl
rcr
xchg
not
faddp
mov
adc
jbe
lock
fdivrl
sbb
or
jle
push
push
push
ds
aad
lret
das
lret
mov
jnp
adc
adc
sbb
in
movsb
cmpsb
push
and
mov
je
pushf
xchg
push
dec
outsl
std
scas
mov
jb
loope
xchg
and
xchg
xchg
dec
push
inc
cmc
nop
adc
and
push
mov
mov
test
sub
incb
mov
rol
aam
mov
xchg
dec
or
add
mov
les
sub
mov
mov
fsubrs
shrl
pop
inc
push
lock
clc
out
lret
lahf
or
test
ret
mov
data16
xor
dec
test
mov
enter
adc
std
inc
cmp
adc
cmp
xchg
xchg
fistps
jge
sbb
pop
into
out
pop
addl
xor
dec
cmp
dec
lcall
sub
je
xor
pop
pusha
cmp
mov
out
movsb
sbb
pushf
dec
mov
ret
je
rclb
mov
jecxz
dec
sbb
hlt
jnp
movsb
sub
fidivrl
scas
sbb
sub
jo
vhaddps
aam
sub
sbb
cltd
mov
sbb
cmp
jno
push
mov
data16
jo
or
test
in
jecxz
jb
mov
xor
sbb
sahf
cmp
cmpsl
notb
pop
cmp
cmp
lret
mov
jo
jbe
test
inc
int3
mov
arpl
xor
pop
inc
jnp
adc
in
inc
out
dec
mov
dec
lahf
test
clc
and
adc
cld
and
xor
mov
and
jnp
jmp
stc
and
mov
stos
push
idivb
fstl
fdivrl
and
and
jl
popf
repnz
lods
inc
popa
mov
sbb
and
clc
sub
shrl
mov
sbb
ret
insl
leave
mov
out
aam
push
push
out
or
or
push
jmp
scas
testb
nop
insb
push
lret
dec
sbb
mov
pop
out
mov
inc
or
mov
ret
jge
pop
jns
in
cld
ss
dec
ss
push
xor
jp
xchg
mov
xchg
or
rclb
sbb
push
enter
mov
cs
inc
es
add
lea
xor
cmp
push
je
out
cltd
insb
cli
xchg
pushf
xor
out
pop
and
sbb
mov
pop
mov
adc
int3
sti
and
enter
ds
call
inc
dec
fldenv
push
pusha
jecxz
mov
aaa
pop
and
sti
push
ds
loop
xor
cltd
cmp
push
add
jecxz
rorl
push
pop
jecxz
sub
sub
iret
stos
popa
enter
and
aaa
and
adc
sti
int
jns
inc
cmp
jns
pop
adc
jg
mov
std
or
cmpb
jge
repz
repnz
cmpsl
imul
cmpsb
enter
repz
test
push
cmp
stc
scas
adc
xchg
pop
jp
and
or
testl
fisubrs
mov
push
dec
lret
negl
add
inc
and
xor
pusha
xorl
pop
sub
xor
jp
jecxz
dec
jae
mov
popf
repnz
jnp
loop
pop
pop
fsubs
rcll
jp
jmp
jnp
add
addb
mov
rcrl
pop
in
mov
in
lret
xor
aaa
inc
push
xor
cmpsb
and
hlt
sbb
lods
out
xlat
pop
sub
stc
pop
lret
arpl
and
aaa
and
mov
ror
push
stos
stc
stc
hlt
xchg
bound
pop
flds
subb
push
and
daa
pop
repz
xor
shll
frstor
pop
mov
mov
decb
and
jp
arpl
mov
std
aaa
xchg
push
lods
xchg
gs
cmpsl
mov
cmp
sub
xor
icebp
imul
xchg
faddl
outsb
inc
addl
push
and
popf
jnp
pushl
mov
sub
std
add
stos
test
cmpl
mov
sub
mov
mov
imul
and
xchg
jnp
xor
notl
sti
shlb
mov
inc
addr16
loopne
daa
out
mov
sbb
repnz
sbb
sbb
arpl
jmp
push
loope
outsl
popa
push
sub
mov
push
je
outsl
loope
imulb
scas
xchg
int
cmc
mov
inc
sbb
lea
es
pusha
hlt
and
mov
adc
pop
and
std
sbb
test
inc
mov
pop
mov
xorb
mov
stos
mov
and
sbb
xchg
inc
and
loopne
jp
jmp
or
jge
xor
lods
xor
fistpl
jle
into
call
xchg
mov
sub
insl
push
sub
pop
xchg
add
ret
test
mov
mov
fistpll
mov
sti
or
fs
movsb
mov
pop
push
jb
add
addr16
cmp
scas
push
mov
sbb
outsl
add
movsb
adc
push
jno
enter
push
sub
out
cmp
push
scas
in
sub
mov
jnp
int
and
and
jle
out
xchg
in
dec
pop
imull
aam
insl
mov
out
push
std
out
mov
inc
mov
addl
aas
xchg
mov
loop
push
inc
jecxz
and
ja
push
mov
dec
mov
xchg
mov
shlb
inc
adc
push
and
jmp
xchg
jns
repnz
out
jnp
rcrb
sbb
sub
sub
push
xchg
stos
std
lods
mov
clc
jne
push
jecxz
or
into
popa
popa
cwtl
std
push
pop
data16
shll
jo
rol
mov
jmp
sub
jl
lret
aaa
pushf
jmp
mov
dec
ficompl
push
mov
test
test
mov
inc
jne
in
je
add
mov
sti
lcall
in
xor
stos
imul
or
shll
js
xor
sahf
daa
pop
cmp
je
movsb
sbb
adc
lret
push
in
inc
inc
repnz
dec
and
imul
mov
cmp
loopne
jbe
fcmovnu
inc
lods
ret
dec
sti
setb
pop
aas
mov
pusha
mov
ret
push
orb
pusha
mov
sbb
lods
lahf
dec
xor
and
cli
mov
xchg
iret
and
lret
hlt
shl
xor
inc
popa
or
outsl
push
dec
aas
and
das
je
std
mov
ret
loopne,pt
test
mov
or
xchg
and
inc
addl
or
testb
adc
popa
xlat
push
pshufw
adc
ss
fistpl
in
test
add
xorb
out
ds
notl
mov
stc
stc
or
leave
push
es
imul
xchg
lcall
mov
stos
xor
mov
or
into
dec
je
loope
adc
ret
push
jno
add
test
push
jnp
pop
mov
push
out
xor
mov
cmp
add
ss
out
cltd
shrb
loopne
push
cmp
dec
add
sub
add
out
mov
movsl
out
mov
mov
iret
cmp
xor
int
and
pop
imul
movsb
xchg
or
inc
push
xchg
out
jns
pop
add
lea
fld1
movsb
xchg
les
popl
and
bnd
in
and
push
outsl
or
movsb
mov
xlat
bndstx
addr16
jg
mov
lret
mov
scas
loop
lret
mov
movsb
fs
pop
mov
ficomps
movsl
lcall
pop
out
aas
dec
cmpsl
cld
sbb
sar
idiv
sahf
lret
shrl
lret
inc
popa
cltd
fidivl
or
mov
push
clts
outsb
jbe
lock
pop
and
push
mov
clc
push
cli
outsb
imul
stos
fwait
sbbb
jns
lods
jns
fwait
mov
loopne
pop
jp
adc
data16
xor
mov
or
inc
je
mov
add
mov
orl
movsb
loop
xchg
xor
std
cs
jb
inc
stos
mov
xchg
adc
rclb
movsb
sar
test
shlb
add
mov
mov
mov
inc
mov
jp
js
fwait
push
mov
popf
pusha
or
inc
cmp
sub
gs
lods
decl
leave
push
pop
dec
adc
cltd
scas
enter
fnsave
jl
outsl
movsl
mov
mov
push
dec
cmp
data16
mov
add
mov
add
xchg
out
pusha
popf
dec
mov
mov
jb
ds
mov
mov
xor
inc
mov
and
and
adc
or
popf
sbbb
out
xchg
mov
pop
leave
push
mov
std
or
push
dec
xchg
xor
inc
roll
dec
push
pushf
sbb
dec
mov
sub
jb
pop
jg
cwtl
imul
lods
loop
pop
adc
into
out
outsb
cmc
leave
pushf
cmp
adc
or
faddp
cmp
popf
and
jb
test
pop
popf
pop
push
aam
add
leave
inc
das
jl
lret
xchg
xor
cmc
jmp
and
aaa
mov
addr16
in
lret
sbb
sbb
jne
test
xor
stos
adcb
mov
mov
inc
mov
push
cmovbe
lret
push
lock
inc
test
pushf
scas
jmp
aas
pop
jnp
pop
pop
out
aam
shlb
jg
sbb
repz
out
adc
int
pop
xlat
enter
xchg
out
pop
dec
test
or
cmpsl
xchg
jge
mov
mov
push
or
push
mov
fisubrs
mov
add
cs
jg
add
cltd
dec
mov
cmp
sti
imul
add
adc
mov
insl
sub
sti
pop
dec
lods
and
pop
cmp
sub
or
stc
outsb
mov
pop
aas
sbb
mov
insb
jg
hlt
add
jb
ja
call
xor
pop
test
lret
dec
cmp
mov
lret
rcll
sub
mov
mov
cmp
or
shrl
and
mov
les
xchg
lds
adc
xchg
loopne
fbstp
daa
pop
xlat
or
mov
and
enter
sub
cmpsl
fsubrs
sbb
jmp
dec
dec
sub
hlt
and
lods
mov
sarb
icebp
pop
dec
add
ljmp
daa
pop
cmpsl
test
and
and
ret
and
inc
xor
cmovne
fidivrl
faddp
stos
fdivrs
inc
mov
mov
fs
mov
inc
add
dec
sub
sub
jb
aam
push
je
stc
loope
jecxz
aaa
mov
rcrb
lret
dec
aad
ds
hlt
jmp
out
ficomps
rcrb
jecxz
std
sbb
or
mov
mov
xchg
int3
push
xor
xchg
roll
inc
pop
or
jecxz
dec
xchg
xor
rep
xor
fnsave
loop
push
mov
push
mov
jl
movsb
xor
mov
xor
jnp
dec
test
mov
je
cmp
adc
cmc
or
in
mov
std
mov
push
dec
inc
loop
or
dec
fistps
sub
jl
gs
xchg
movsb
test
cmp
adc
jnp
adc
ljmp
int3
test
push
mov
imul
outsb
jg
mov
movsb
sub
int
xor
adc
lds
out
push
into
andl
cmpl
push
movsl
pop
in
jns
xchg
sbb
inc
xchg
dec
cmpsl
xor
mov
nop
pop
hlt
lea
lea
jle
add
idivb
andb
test
xchg
fwait
cmp
stos
xlat
mov
iret
add
imul
in
dec
test
insb
mov
and
mov
aam
lods
clc
fldenv
pushf
xor
mov
and
mov
dec
pop
imul
fucom
dec
mov
lret
aad
outsl
fwait
mov
test
out
sti
xchg
inc
adc
mov
pop
mov
sbb
sbb
pop
pop
sub
cld
adc
jo
ss
stc
stos
pop
dec
mov
out
enter
and
sbb
inc
sbb
xchg
mov
lock
cld
mov
test
ret
lods
lret
fstps
inc
stos
pop
and
lcall
fwait
das
sub
mov
jge
sub
sbb
and
stc
cld
xor
push
out
jecxz
mov
jo
insb
and
movsl
mov
inc
insl
xor
ds
dec
inc
lcall
xchg
cmp
sbb
jns
mov
iret
xchg
sbb
push
mov
imul
fldcw
and
andl
jo
ds
leave
push
jge
or
mov
and
repnz
lcall
es
addr16
mov
js
cmp
and
mov
adc
add
lahf
jmp
int3
jo
cmp
dec
mov
mov
push
mov
daa
cmp
test
neg
and
push
jae
das
mov
mov
les
inc
mov
pop
inc
xchg
mov
rorb
test
add
pushf
enter
adcb
loopne
adc
mov
addl
pop
dec
add
mov
dec
pop
lds
call
mov
inc
into
xor
stos
test
pop
jmp
fucom
das
pop
arpl
inc
add
mov
push
leave
sbb
cmp
push
fwait
cmp
sbb
enter
xchg
scas
sbb
lods
rorl
scas
into
arpl
adc
cli
xor
lock
xor
rol
sbb
xor
dec
ljmp
cmp
cmp
add
xlat
xor
or
loopne
aas
scas
and
shll
lret
daa
cli
inc
shll
jbe
jbe
mov
xchg
shll
outsl
and
or
mov
movsl
sub
pop
xor
xchg
adc
mov
enter
push
cs
push
cmp
jnp
pop
inc
cld
out
fdivrp
or
cltd
js
adc
mov
push
mulb
popa
mov
test
repz
xchg
pop
enter
mov
xchg
andb
enter
push
shr
fstpl
mov
cmp
mov
cmpsl
xchg
std
fld
and
and
ja
cmpsl
sbb
push
sahf
ds
sub
or
adc
xchg
mov
cmc
shlb
xor
jbe
jecxz
dec
xor
cmp
shll
xchg
es
lcall
mov
rcl
mov
jnp
sbb
clc
ljmp
add
inc
lret
ja
std
and
xor
adc
or
or
ss
iret
sub
dec
aas
push
cs
imul
pop
and
or
xor
mov
cltd
sbb
mov
jmp
inc
mov
xor
dec
pop
icebp
and
outsb
sub
test
repz
push
test
sub
pop
pop
nop
ja
inc
ja
test
xchg
xor
mov
dec
mov
mov
and
jns
fldcw
adc
sarb
add
mov
sbbl
dec
movsb
sbb
and
pop
mov
add
sub
or
xor
in
rolb
call
push
jmp
and
movsb
and
adc
and
jbe
sbb
outsl
inc
in
out
mov
jnp
call
cmpb
and
lock
movsb
sub
aam
cmpsb
xor
or
rcl
mov
scas
jns
cmpsb
cmp
int
cmpsl
inc
mov
xor
and
jae
rorl
aas
push
mov
mov
js
lret
fstpl
insb
not
cmp
add
mov
jle
insl
sbb
push
jge
call
or
inc
cmp
or
loope
mov
imul
popa
push
xchg
mov
sub
or
push
jmp
xor
pop
sbbb
imul
dec
fdivrs
sarl
mov
dec
pop
andb
push
push
add
fists
dec
aad
mov
pop
dec
pushf
leave
dec
and
loopne
dec
cmp
lcall
cmp
movsb
loope
movsb
lock
ljmp
loope
xor
push
repz
xchg
insb
lcall
fcom
mov
outsl
xor
dec
xchg
sbb
test
inc
mov
jae
cmp
lcall
push
and
xchg
repz
loop
mov
dec
pushf
repz
je
jae
in
mov
aas
xchg
fucomip
xchg
jno
call
sub
lods
sbb
lcall
scas
push
outsl
add
jo
mov
mov
adc
pop
mov
jns
sti
outsl
fxam
mov
or
sarl
es
mov
int3
aas
shlb
add
and
inc
insl
sub
or
mov
xor
mov
mov
addr16
ret
scas
test
lahf
mov
or
sub
inc
mov
es
jnp
adc
or
in
mov
mov
jp
pop
sbb
dec
subl
dec
mov
xchg
gs
mov
aaa
xor
pop
lods
notb
jp
push
lods
mov
enter
shlb
outsl
lahf
push
clc
xchg
jo
dec
jo
sahf
scas
add
add
stc
add
and
mov
sbb
mov
sub
rclb
outsb
mov
sbb
aam
sar
movsl
ljmp
push
jge
inc
clc
push
scas
sub
adc
outsb
addr16
xchg
and
call
pop
xchg
into
add
ret
mov
xchg
fildll
push
push
add
mov
das
xchg
xlat
mov
loop
enter
repz
test
push
inc
cli
in
push
mov
add
pusha
pop
scas
pop
and
lcall
mov
mov
loop
fidivl
push
int
jp
aam
cmp
pop
push
mov
in
or
mov
stc
daa
push
int
xchg
movsb
mov
xchg
xchg
loopne
data16
aam
xchg
fcomi
mov
loop
insl
iret
and
mov
xchg
push
leave
flds
out
cmp
into
sar
mov
aaa
or
rcl
orb
ljmp
popa
mov
pop
mov
xor
xor
notl
xor
aaa
mov
test
xchg
mov
or
fstps
sbb
js
sbb
mov
pop
unpckhps
das
dec
and
mov
push
pop
in
lahf
dec
inc
sarb
int
lock
outsl
add
test
push
pop
cs
ss
xor
popf
scas
pushf
imulb
ja
fdivs
imul
push
adc
mov
sbb
incb
push
sbbl
cmp
stos
sbb
mov
nop
or
push
xchg
repnz
inc
inc
outsb
sub
jmp
lods
pusha
gs
add
movsl
or
and
dec
js
test
icebp
and
arpl
in
mov
in
cld
sahf
and
outsl
inc
mov
dec
adc
mov
inc
loop
loope
jp
dec
mov
test
outsb
lcall
cmp
aam
adc
dec
ficomps
int3
out
cmp
mov
and
and
loope
xchg
aad
pop
jb
repnz
xor
pop
adc
and
out
add
ret
cs
in
addr16
scas
js
fisubl
loopne
pop
inc
fwait
pop
pop
movsb
loopne
adc
mov
pushf
mov
aam
iret
adc
sbb
ja
mov
xor
in
inc
maxps
xor
in
cs
cmp
cmp
stc
stos
adc
or
xchg
jae
or
push
cmp
sub
jmp
jno
pop
mov
test
adc
add
push
mov
in
loope
lret
adc
add
cltd
dec
psraw
popa
xor
out
xor
in
and
fcoms
hlt
xchg
mov
in
scas
sub
and
xchg
lahf
inc
ja
pushf
xor
das
js
xor
pusha
inc
std
inc
cmp
shll
cmp
int3
cs
add
or
mov
cmp
dec
fstpl
mov
addr16
pop
sub
int3
jp
jne
add
mov
xchg
dec
mov
or
jno
xchg
add
fdiv
les
mov
iret
mov
adc
fiadds
jnp
test
jno
into
push
xchg
mov
ret
jp
mov
jecxz
idivl
jbe
cmpl
sbb
lahf
inc
push
adcl
xchg
lock
fisttps
and
dec
call
rcl
js
and
jp
mov
inc
jmp
and
inc
sub
cmpsl
xor
pop
mov
dec
adc
fwait
stos
jmp
stos
pop
fcoml
mov
jg
in
dec
pop
lods
mov
arpl
outsl
pop
ret
mov
sub
divps
out
rol
ret
les
add
mov
and
divb
xorb
cmp
push
pushf
int
shll
stos
push
ds
dec
sahf
out
fdivr
cmp
arpl
mov
push
ss
inc
in
lods
int3
in
mov
insb
ljmp
shlb
inc
mov
std
cltd
xchg
or
shl
mov
pop
add
mov
adc
mov
or
out
sub
jl
inc
xchg
xchg
stc
jmp
jp,pt
xchg
pop
and
mov
mov
inc
imul
dec
in
add
inc
ret
xchg
adc
repz
outsl
push
mov
mov
cmp
aam
push
bound
xor
xor
inc
push
pop
inc
cmp
daa
pop
dec
andb
pop
fcoml
jne
rcrb
icebp
mov
push
clc
push
scas
mov
je
adc
xchg
addr16
imul
mov
mov
iret
addb
in
add
std
or
popa
cmpb
fs
push
cld
lods
pop
jne
jnp
pop
das
aam
inc
xchg
lods
sub
push
jo
dec
xor
mov
repz
cmp
mov
aam
cmp
int
lock
inc
jnp
int3
dec
cmp
jne
or
add
es
xchg
mov
sbb
adc
lahf
rolb
sti
jle
adc
push
jns
inc
loop
mov
gs
std
in
cmp
add
sbb
pop
js
mov
rol
and
je
fdiv
enter
sbbl
scas
sahf
fsub
pushf
out
iret
dec
stc
ja
mov
loop
out
sarl
lret
pop
jmp
out
and
outsl
call
xor
loopne
jbe
arpl
js
inc
lea
neg
in
pushf
add
xor
mov
in
or
jmp
insl
push
mov
sbb
bnd
add
jmp
jl
inc
jnp
aad
pop
enter
xchg
xor
lcall
shlb
jecxz
fs
cli
add
mov
jecxz,pt
pop
loop
mov
clc
les
adc
lret
out
lea
stos
cmpsl
ss
pop
mov
in
in
push
or
dec
mov
js
fcmovbe
push
je
adc
jbe
pop
xor
inc
mov
rcll
inc
in
push
push
mov
clc
shl
xchg
cmc
xchg
stc
call
lret
add
shll
xor
xchg
outsl
sbb
test
test
mov
enter
xchg
sub
test
or
push
addr16
data16
mov
outsb
xchg
mov
testl
mov
add
adc
push
repz
jmp
outsl
iret
leave
cmpb
cmpsl
adc
push
add
or
push
xchg
sar
test
push
xchg
mov
push
cli
data16
adc
inc
dec
adc
bound
jmp
lods
jnp
or
xor
mov
push
popl
and
lds
icebp
mov
push
push
ljmp
loopne
stc
jecxz
sbb
clc
pop
call
aad
out
loopne
cmp
sub
mov
in
out
shrl
int
xlat
adc
and
repnz
mov
mov
loop
aad
aam
xor
lods
adc
pop
jnp
push
sub
shrb
pop
push
xchg
cmp
inc
in
xor
xor
orl
addl
fmul
imul
mov
cmp
insb
inc
and
aaa
pushf
pushf
nop
out
pop
jge
cli
lods
imul
cmp
xchg
pop
mulb
and
or
push
dec
xchg
dec
cmpsb
mov
cli
sbb
iret
or
test
out
pop
into
inc
in
and
push
mov
mov
and
test
lcall
ret
ja
mov
clc
pop
jno
xor
push
xchg
sub
jae
push
sahf
dec
fwait
in
imul
jo
hlt
pusha
xor
xchg
cltd
pop
lock
gs
mov
cmp
ret
addr16
int3
jno
mov
aam
out
cmp
mov
mov
xchg
divb
imul
or
popf
add
xchg
push
into
shlb
or
clc
movsl
sub
fdivrs
stos
test
aaa
xlat
dec
add
sbb
roll
mov
jl
sbb
lea
cmp
out
shl
push
sub
in
shl
test
mov
pop
xlat
cmp
xabort
out
mov
jecxz
xchg
rcrl
cmp
mov
cmpsb
mov
and
mov
jb
add
in
movsl
xchg
cmp
jb
xchg
jp
xchg
sub
sub
dec
call
dec
mov
jae
xor
cld
cmp
in
addb
and
mov
ljmp
mov
mov
xor
cmp
push
add
mov
cmp
inc
adc
push
xchg
nop
loopne
popf
in
jbe
jb
sbb
add
jle
sbb
inc
leave
loope
or
push
iret
sbb
mov
xor
scas
mov
ret
ja
in
or
les
int3
jae
mov
mov
jae
adc
test
ja
cmp
xchg
cs
jle
push
in
xor
mov
cmp
jo
les
pusha
xlat
ja
leave
push
lret
push
jecxz
push
and
int
adc
loopne
push
stos
pop
xchg
mov
popa
mull
loop
sbb
xchg
out
xchg
and
movsb
popf
outsb
mov
ret
loop
sub
test
adc
cmp
fnstsw
dec
mov
inc
jmp
int
adc
mov
sti
cmc
fs
pop
adc
data16
adc
jp
sbb
imul
ret
xchg
pop
mov
sbbl
mov
mov
cmp
sbb
and
hlt
fnstcw
test
int
lods
jbe
and
jb
xchg
rcrb
push
rol
ret
testl
pop
xlat
sbb
and
and
arpl
shrl
sub
and
push
mov
inc
out
dec
pop
mov
jbe
cmpsl
mov
mov
pminub
push
pop
mov
xor
inc
mov
mov
sti
lcall
pop
xchg
pop
jbe
mov
pusha
adc
clc
jge
sbb
mov
cmc
mov
mov
sub
and
inc
jbe
jns
mov
sbb
mov
mov
aas
cmc
in
mov
popf
test
jmp
mov
lret
repz
in
sbb
and
aad
add
dec
fistps
mov
and
jg
clc
lods
std
and
push
or
mov
pushf
gs
pushf
mov
pop
sarl
pop
mov
pop
shl
fwait
sarb
lcall
out
std
cmpsb
pusha
mov
test
jge
add
gs
sbb
xchg
push
mov
fcmovne
sbb
test
sub
jns
movsl
fsubp
jb
mov
or
mov
daa
mov
sbb
cld
faddl
add
lcall
sbb
mov
inc
test
dec
mov
mov
mov
jns
jns
mov
xor
loop
jmp
cbtw
pop
iret
inc
andb
mov
xor
cmp
lret
xchg
out
inc
sub
orl
inc
lret
dec
rcrl
mov
jnp
std
fwait
pushw
inc
in
lret
jl
lret
adcb
stos
sbb
lcall
and
insb
loope
test
int3
frstor
cmc
sbbb
mov
cmpsb
ffreep
fcoms
sub
xchg
sub
clc
inc
shll
loop
inc
mov
pop
repz
sbb
hlt
rcrl
lea
add
xchg
shl
enter
pop
fnstsw
pop
pusha
pop
adcl
pop
addr16
out
mov
adc
lret
or
adc
ljmp
mov
sub
cmpb
outsl
xlat
and
sbb
outsb
movsb
lret
sub
jecxz
test
jne
sahf
mov
stos
or
xchg
xor
or
jno
pop
adc
jbe
icebp
cmp
movsb
cmpsw
xchg
mov
jle
pop
rcl
stos
inc
push
pop
pop
inc
lods
and
out
xor
sub
mov
dec
dec
jp
enter
sbb
in
xor
xchg
stos
sbb
pop
adc
shlb
js
into
pop
leave
sub
jge
scas
pop
clc
cld
jle
iret
and
sbb
and
add
mov
push
xchg
mov
sbb
das
or
mov
stos
int
aaa
lcall
data16
lods
and
jg
int3
loope
loope
xchg
jp
shlb
jecxz
lods
mov
mov
and
sahf
out
mov
jnp
sub
lcall
lods
ds
mov
pop
pop
cltd
lcall
rolb
add
das
cmpsl
mov
jle
ret
mov
mov
push
lods
lods
into
cmc
push
pop
sbb
mov
sub
xchg
imul
aas
pop
jae
or
mov
push
push
pop
pop
mov
lcall
aas
das
push
les
fdivs
push
fsubrl
and
jnp
and
add
cmp
dec
hlt
ss
cs
pop
xchg
or
inc
fcompl
stos
jo
fs
xor
inc
loop
ds
or
int
ret
push
or
dec
jno
lds
imul
cld
xor
push
sbb
inc
test
lods
clc
subl
xchg
cmp
pop
ficompl
mov
andl
ret
pop
mov
or
clc
mov
add
dec
or
adc
jmp
scas
pop
js
or
imul
int
push
pop
jbe
jg
pop
push
xorl
fisttpl
jo
and
add
and
mov
lea
enter
cmp
movb
fdivl
mov
cld
and
sti
imul
xor
aad
dec
into
push
jecxz
shrb
add
mov
xor
repz
cmpsl
pop
pop
sahf
and
push
lcall
pusha
cmp
cwtl
pop
cmp
shr
std
add
push
cs
mov
push
stos
xchg
testb
es
cmpsb
loope
pop
pop
and
xchg
sti
push
adc
fs
adc
xchg
adc
cmc
mov
in
call
cmpsl
leave
push
cwtl
or
sub
mov
mov
das
pushf
xchg
xchg
xchg
xchg
jmp
insb
pop
adc
mov
pmaxub
fadd
mov
mov
shlb
add
xor
jno
mov
or
jle
pop
ljmp
fisttpll
cwtl
pop
pop
mov
jns
push
mov
add
ss
test
insl
inc
dec
imul
mul
cmp
lret
and
shr
sub
frstor
rclb
cmc
push
push
mov
dec
dec
call
mov
mov
gs
out
fistps
mov
xchg
cld
cs
fwait
mov
mov
pop
repnz
add
gs
or
loopne
loopne
das
cmp
mov
into
test
loopne
stos
mov
mov
sub
jnp
das
push
aam
iret
jmp
cmp
mov
fistpll
cmpsl
dec
stos
mov
sub
sti
mov
and
sbb
xor
xor
inc
sahf
out
pop
jl
sbb
adc
push
mov
and
and
sub
push
loope
adc
inc
add
mov
mov
dec
push
xchg
subl
bound
jecxz
dec
cmp
les
subl
sarl
push
lods
jmp
stos
push
fcoms
int3
cs
sbb
inc
inc
adc
cmp
popf
push
out
xchg
or
into
stos
enter
aaa
jae
or
shlb
test
xchg
dec
mov
fsubr
mov
out
sub
aas
mov
jge
cmp
cmp
pop
cli
dec
ljmp
add
xchg
insl
mov
sub
sti
lcall
mov
ret
adc
add
xor
or
mov
mov
inc
xor
xchg
ja
jmp
pop
sbb
fst
roll
add
inc
test
xchg
inc
repz
dec
and
pop
add
cmp
sub
xchg
divl
int3
xchg
xor
jmp
xchg
sub
repz
mov
jecxz
into
jmp
jbe
pop
sbb
in
jge
subb
push
xor
sti
leave
test
and
movsl
scas
test
ret
pop
sbb
push
int3
jmp
adc
lods
jb
push
push
xor
es
sbb
mov
leave
bound
out
mov
enter
cmc
scas
aaa
cmp
sub
sub
pop
sbb
xchg
mov
mov
add
inc
js
enter
into
insl
in
adc
shll
and
ret
ja
out
bound
sbbb
loope
sbb
pusha
aad
or
mov
icebp
mov
ret
dec
xchg
xor
aad
stc
mov
pop
sbb
sbb
test
notl
enter
outsl
inc
cli
faddl
imul
pop
mov
jmp
outsb
and
mov
cmp
xor
out
sub
add
lods
push
aad
es
mov
sbb
in
push
mov
xlat
addl
jge
xor
xor
sub
and
pop
sub
ret
fildll
imull
adc
jge
mov
dec
xlat
mov
adc
dec
push
repnz
outsb
xlat
add
packssdw
testb
dec
add
jmp
xchg
aam
cmc
cmpsb
adc
or
sub
mov
ret
idivb
test
call
and
je
sub
inc
inc
adc
cmpb
inc
or
fmull
add
mov
aas
sub
rorb
add
mov
and
lret
lods
lds
mov
cmp
dec
adc
xchg
jno
ja
or
cwtl
icebp
loopne
inc
and
jae
rclb
mov
out
mov
inc
sahf
or
test
das
lods
pop
stos
push
icebp
ds
int3
leave
sbb
loopne
dec
xchg
outsl
cltd
mov
imul
inc
xor
and
mov
mov
pop
cwtl
aaa
inc
fadds
pop
in
dec
fcomps
cmp
and
cs
mov
pop
push
mov
imul
mov
mov
enter
jno
jb
leave
add
into
push
fiaddl
gs
gs
inc
lds
push
outsb
movsl
and
mov
sub
dec
sub
mov
mov
mov
xor
dec
jmp
push
jne
dec
push
test
adc
adc
test
cmpsb
shl
scas
aad
xchg
test
pop
cmp
out
lret
neg
mov
frstor
rclb
cwtl
insb
sub
and
adc
sbbl
fcmovbe
jg
push
cmc
jmp
inc
pop
mov
mov
pusha
dec
test
scas
mov
arpl
icebp
cltd
scas
not
push
cmpsl
xchg
jnp
mov
lods
or
gs
ja
mov
add
push
outsl
int
xlat
shl
in
adc
jo
jle
push
xor
das
sbb
cmp
xchg
jne
cmp
test
out
cmp
push
pop
into
lahf
cld
fdivl
adc
push
out
jecxz
push
jl
cmp
andb
out
nop
test
and
stc
lds
clc
ds
mov
sbb
adc
sbbb
sub
mov
fs
pop
ret
pop
cli
inc
bound
lock
mov
and
or
lret
add
jnp
jecxz
xlat
inc
mov
pusha
outsb
divb
mov
inc
lock
cmpsb
dec
movsl
pop
imul
aas
xor
or
sub
pmaddwd
sub
rclb
lea
gs
and
dec
scas
sti
fwait
mov
jb
fldt
lea
mov
or
push
repz
loope
sbb
test
cmp
lds
arpl
icebp
xchg
rcll
mov
mov
ja
sbb
push
mov
mov
in
outsb
test
scas
mov
test
push
shrl
xorb
push
rorl
inc
sub
filds
or
sbb
inc
mov
or
xchg
push
push
es
roll
inc
stc
fcmovb
mov
mov
and
xchg
mov
add
add
shlb
ret
dec
pop
sbb
cmp
inc
push
and
out
cmp
jbe
jmp
fcmovnu
pop
jl
repz
icebp
sar
xchg
mov
ss
outsl
sbbl
dec
stc
in
mov
mov
jmp
add
xor
lret
dec
or
dec
scas
push
loop
ftst
lea
mov
ja
sbb
adc
pop
xorb
push
movsl
xchg
sbb
les
inc
jle
jle
inc
nop
inc
adc
and
mov
cwtl
aam
sub
push
aad
mov
stc
bound
pop
cmp
inc
mov
fwait
and
shrl
pop
sti
sub
pushf
xor
add
inc
int3
paddb
jbe
adc
fcoms
sbb
lcall
push
mov
sub
lahf
mov
popf
inc
mov
sar
jmp
mov
stos
push
inc
cmpsb
in
lods
addr16
insl
mov
mov
aaa
lret
mov
gs
fildll
stc
icebp
out
push
adc
pusha
iret
jecxz
dec
pop
call
push
inc
sbb
or
mov
adc
and
dec
or
mov
das
fmuls
scas
in
sub
aad
js
ret
pop
test
insl
insb
jns
add
cmpsl
into
mulb
push
push
xlat
xor
pop
mov
mov
adc
xor
int
stos
mov
pushf
dec
daa
bound
push
xchg
add
inc
lahf
push
xchg
sub
inc
movsl
cmp
bound
in
out
testl
dec
sub
dec
push
and
jno
cmp
fcom
js
imul
dec
mov
lock
or
dec
push
and
fistpl
pavgw
sub
jo
popf
es
xchg
in
lods
add
loop
fcmove
ds
imul
sub
xor
xor
mov
decl
or
das
and
pop
imul
adc
lock
insb
popa
int3
scas
jo
or
shr
cmp
aaa
pop
xchg
dec
dec
sbb
jmp
shrl
mov
cmovs
xchg
pop
and
xchg
movsl
cmovne
in
dec
mov
cs
ds
xchg
fst
gs
pop
sbb
aaa
jle
xor
sub
xor
daa
movsb
bound
sub
or
xor
test
lods
movsl
inc
insl
sub
lock
mov
rorb
cwtl
sub
dec
rolb
mov
pop
and
imulb
cmp
inc
jne
and
sbb
jl
aas
adc
ds
inc
mov
subl
into
push
lock
push
sbb
dec
out
sub
sub
push
out
insl
mov
sub
std
int3
mov
adc
ja
sarl
cmp
cmp
inc
addr16
adc
movl
out
clc
pop
andl
add
jp
iret
cli
in
dec
or
sbb
xchg
xor
jns
aas
cmpsl
push
test
sub
jns
sub
fsubrl
in
jg
pop
loope
and
dec
xor
pop
add
jl
xor
cltd
mov
in
push
xchg
xchg
pop
rcll
pop
push
sub
neg
ucomiss
xor
addr16
cmp
pop
inc
mov
inc
mov
mov
inc
cltd
out
mov
jno
cld
or
sbb
sub
les
js
xchg
test
fs
scas
das
jne
mov
add
adc
push
or
mov
lock
cmp
insl
cmp
xchg
addl
mov
sub
cmp
sahf
inc
or
pop
dec
mov
inc
cld
push
mov
mov
jo
xorb
mull
adc
orl
ja
mov
mov
cli
enter
fwait
div
int3
out
inc
push
fcmovnbe
sbb
jle
jecxz
push
inc
aaa
adc
sub
cmpsb
mov
pop
and
fldenv
xlat
sbb
and
cmp
cmp
push
lods
adcl
icebp
mulb
dec
jecxz
push
or
stc
push
lret
xchg
out
jbe
flds
lret
lret
popf
fld
mov
or
cmp
test
aas
sbb
nop
cmp
and
test
cwtl
jns
sbb
stc
inc
inc
adc
gs
mov
stos
xor
outsb
add
adc
fucomi
movsl
and
mov
icebp
mov
sub
dec
gs
mov
xchg
fcmovnu
mov
test
pop
mov
fbstp
test
dec
xchg
jecxz
jmp
movsb
sbb
notl
and
adc
or
lds
in
out
cli
icebp
leave
or
outsb
mov
lods
xchg
test
loop
push
outsl
daa
add
imul
xchg
jns
imul
insb
leave
mov
add
test
repz
pop
andb
outsl
imul
in
jmp
xchg
cmp
fnstenv
jae
stos
sub
push
xchg
aaa
js
out
and
sub
sbb
dec
fnstcw
cmp
adc
xor
sub
stos
lods
lea
imul
pop
pushl
add
push
pop
mov
pop
ret
in
out
ret
in
or
aam
popa
sbbl
jbe
mov
in
stos
enter
cmp
js
sub
push
mov
xchg
sbb
or
or
rcll
dec
cmc
sbbb
push
ds
ficoms
lea
lahf
movsb
mov
cmpsl
popf
add
or
jbe
mov
mov
mov
jbe
mov
fnstenv
sbb
shlb
repz
rolb
dec
push
arpl
mov
daa
pop
pop
ja,pn
push
pop
lret
sub
push
pop
mov
sbb
push
jge,pt
add
das
or
repnz
lods
adc
inc
sub
sbb
aas
inc
addr16
inc
icebp
addr16
push
pushf
pusha
cmpsl
daa
std
addl
mov
cmc
into
jnp
push
popa
cltd
mov
and
mov
jb
xor
add
lods
cmp
lret
cli
jo
inc
dec
pop
stos
ja
outsb
movsl
or
fdivs
cmp
cs
pusha
ret
test
adcb
mov
cmpsl
jnp
sbb
loope
push
shlb
mov
test
cmp
and
aad
insb
cmp
repz
cmp
cli
dec
std
jo
insl
push
adc
cld
mov
cmpb
dec
imull
adc
xor
jo
push
dec
push
or
and
jmp
inc
aaa
add
popf
xchg
and
mov
mov
and
pop
clc
es
cmp
adc
jecxz
jae
add
and
pop
popa
out
stc
push
ret
mov
mov
jne
adc
jns
daa
dec
sahf
testl
add
test
stc
cli
rolb
jno
es
and
leave
cmpsl
sbb
shlb
fdivrp
mov
jmp
xor
push
lock
jmp
dec
dec
dec
mov
inc
dec
loopne
pusha
mov
pushf
jbe
flds
jno
pop
mov
sbb
pop
push
mov
scas
sub
fsubrs
sub
or
cmp
xchg
push
cmpsl
jp
ret
clc
pop
lret
out
cmp
insl
xchg
jns
or
push
insb
dec
adc
ja
push
mov
mov
pop
push
sub
xchg
fwait
jbe
mov
jne
jmp
lea
mov
out
dec
popa
jg
addr16
loop
enter
int3
ss
xchg
add
mov
cmpsb
hlt
inc
push
mov
aam
xchg
fnsave
push
gs
add
xor
lahf
pop
js
arpl
dec
fildl
nop
rcrb
mov
in
xchg
pop
es
scas
shl
sbb
pop
int3
pusha
sbb
lock
scas
dec
stc
movsb
test
cmpsl
mov
mov
sub
addr16
nop
cs
push
mov
pushf
inc
bound
mov
daa
iret
sbb
ret
cs
sub
in
and
sti
cmc
pop
xorb
jo
jns
jmp
pop
sar
movsl
push
lret
ret
pop
sub
cmp
push
mov
pusha
rcl
outsl
repnz
mov
imull
cmp
repz
repnz
mov
dec
sub
add
mov
jecxz
lods
mov
popf
addr16
fimull
loope
movsl
fiaddl
hlt
lret
outsl
pushf
cmpsb
adc
push
mov
pop
adc
inc
inc
cld
push
out
adc
fnstenv
sub
sub
mov
sbb
notl
dec
pop
jge
outsl
into
xchg
insb
rcrb
add
inc
rcrb
pop
rcll
iret
jge
pushf
pop
cli
fidivrs
scas
xor
frstor
jae
jns
pop
mov
std
roll
jge
iret
bound
and
xor
cli
cmp
jp
xorb
popa
ret
outsb
add
repz
sarb
adc
test
in
pop
jecxz
xor
xor
mov
pop
bound
into
es
js
gs
repnz
or
jg
jnp
scas
loop
out
mov
dec
mov
or
scas
jmp
and
ret
cmp
adc
push
stc
test
xchg
jl
mov
enter
sbb
xchg
ficompl
sub
repz
sub
add
lcall
jg
scas
aas
jmp
movd
test
shl
imul
fwait
inc
and
shlb
pop
mov
xchg
ds
cs
shll
jne
jo
repz
movsb
call
mov
mov
mov
movsb
lea
insl
sub
or
and
push
add
cmpsb
xor
inc
dec
dec
inc
rcrb
xchg
cmp
push
mov
mov
jns
aaa
push
sbb
mov
fisubs
jg
ficoms
ja
cld
dec
xor
fldcw
movsb
push
inc
pushf
cs
mov
mov
lret
movsl
mov
aad
mov
lods
arpl
xor
mov
add
pop
add
xor
int
cli
xor
pop
ret
sahf
dec
lcall
outsb
or
fdivrl
mov
mov
pop
jl
dec
lods
push
inc
lcall
repnz
fidivrl
pop
cmp
sar
jle
cmpsb
pop
lcall
std
les
xor
push
adc
shl
jno
and
imul
inc
push
test
cld
outsb
scas
xchg
dec
or
mov
adc
andl
dec
cli
dec
pop
shrl
cmp
rcrb
out
push
neg
sbb
cmp
stc
js
fs
insl
imulb
mov
fcomps
pop
push
in
pop
je
dec
hlt
ret
and
jae
inc
test
xorl
subb
xchg
loop
add
lea
dec
xor
repz
aam
inc
and
pop
addr16
sub
imul
mov
test
add
push
xchg
dec
inc
pusha
cmc
arpl
jne
mov
pop
mov
out
test
je
mov
push
mov
pop
bnd
jl
xor
sbb
or
or
icebp
cmpl
mov
mov
es
fiaddl
icebp
sbb
or
push
mov
je
sbb
mov
mov
sub
sbb
xor
pop
cmpsb
or
ja
pop
or
sar
inc
fs
js
pop
or
sbbb
cmpsb
nop
fs
out
push
sbb
insb
inc
sbb
mov
lahf
hlt
roll
push
push
pop
pop
mov
icebp
lcall
mov
add
sarb
ss
sarb
rorl
arpl
mov
push
mov
icebp
into
or
jg
adc
xor
sti
mov
aaa
or
je
cmc
loope
xchg
loop
pop
or
adc
mov
cmp
ljmp
sub
sbbl
enter
js
lret
cltd
test
cmovo
hlt
xor
sub
pop
rolb
movl
imul
and
fucom
dec
and
xor
sahf
jae
outsb
mov
stc
outsb
cld
push
movb
mov
dec
js
ret
pop
test
cmp
mov
inc
and
push
sub
mov
sub
shlb
xchg
mov
mov
mov
pushf
jmp
fsub
mov
add
loopne
mov
out
pop
sti
sbb
add
inc
cmp
lea
mov
sub
insl
aaa
stos
aaa
push
scas
and
stc
outsl
pop
ret
je
inc
push
hlt
add
stos
je
mov
pop
add
in
pop
fcmovne
pop
and
sahf
add
push
divl
dec
pusha
and
mov
clc
xchg
mov
adc
mov
arpl
dec
call
test
icebp
sbb
cmpsb
push
mov
insl
push
movb
or
scas
push
lret
inc
popl
xchg
ret
lret
aam
and
mov
pop
int
or
ja
cmp
addr16
adc
jne
push
test
aaa
push
xor
in
mov
sahf
mov
lds
stos
add
xor
jb
popf
popa
jp
lods
sti
jge
mov
lea
movsb
mov
mov
or
sbb
outsl
or
test
mov
nop
push
ja
in
rol
xchg
mov
mov
inc
sbb
stos
stos
pop
push
and
xorl
adc
fdivr
mov
xlat
and
dec
enter
push
adc
cli
scas
mov
push
xchg
jecxz
dec
cltd
xor
inc
pop
lds
mov
pushf
lret
jae
cltd
mov
out
dec
cs
arpl
fidivl
insb
lods
jns
jecxz
mov
addr16
jmp
das
aaa
mov
add
sbb
jb
pop
adc
in
push
dec
mov
leave
mov
sub
xor
xlat
clc
cli
stc
rcr
rcr
jbe
mov
lahf
mov
je
push
test
jmp
pop
mov
movsb
cltd
mov
addr16
add
mov
inc
aad
push
cmc
loopne
sub
and
push
mov
inc
movsb
xor
ja
pop
xor
iret
mov
rolb
xor
xor
sbb
sub
repz
aaa
mov
cmp
aaa
inc
xor
sub
cmp
rcll
les
mov
xchg
push
and
ret
mov
add
adcb
insl
scas
and
push
loopne
data16
or
mov
xchg
and
xchg
popf
lods
sub
ret
fucomp
adc
ljmp
inc
in
push
inc
mov
stos
sub
jmp
scas
cmpsb
xor
dec
out
dec
bound
ficomps
dec
push
adc
arpl
jb
cs
and
push
xor
lds
sub
ret
pusha
xchg
shrl
jnp
mov
imul
dec
push
sbb
outsb
je
jecxz
cmp
add
rorb
mov
test
and
jbe
mov
stos
sbb
xchg
out
push
stos
mov
push
stc
cmp
sbb
or
sub
cwtl
std
jmp
rol
sub
jge
mov
pop
push
mov
xchg
mov
xchg
shll
jp
xchg
cmp
and
sbb
or
stc
dec
loopne
imul
fimull
out
xor
cld
punpckhwd
jg
sbb
push
push
add
out
bound
ret
and
cld
adc
pop
dec
xor
js
push
xor
sub
out
test
mov
push
push
imul
leave
outsl
mov
mov
pop
rorl
scas
callw
jg
pushf
mov
jne
cmp
out
cmp
sub
and
stos
mov
lods
ljmp
xchg
mov
push
std
stos
in
pop
das
stos
in
imul
cltd
jnp
dec
out
xchg
out
dec
and
mov
iret
cwtl
and
pop
add
add
adc
andb
imul
sbb
cmc
movsb
enter
adc
inc
cwtl
loope
xchg
popa
in
push
ret
in
call
fsubs
mov
mov
popa
dec
imul
imul
dec
loope
sbb
loopne
sub
mov
fistl
jnp
or
into
push
scas
arpl
ja
sub
iret
int
pop
inc
adc
rorl
out
mov
decl
or
andl
shrb
cli
movsl
clc
stos
fcmovu
adc
push
jg
xlat
aad
dec
ljmp
aaa
push
out
shl
fdivrl
cmpl
lods
fiadds
jne
int3
lods
and
jge
xor
loopne
add
lret
pop
fisttpll
stc
daa
mov
imul
bound
enter
xlat
adc
iret
js
outsb
repnz
cwtl
mov
sbb
sub
and
jnp
fcmovnbe
imul
clc
push
mov
push
xchg
pop
adc
roll
sbb
jge
das
inc
stos
or
movsb
out
out
jbe
mov
pop
int
adc
cwtl
xchg
push
adc
mov
xlat
mov
inc
lcall
outsl
cmp
scas
imulb
mov
dec
sti
call
lcall
lods
and
push
add
cmp
or
cmp
dec
mov
movsl
and
mov
icebp
xor
inc
enter
pusha
icebp
test
mov
and
pop
pop
movsb
cmpsb
mov
adc
pop
sahf
shr
mov
out
xchg
mov
xchg
and
in
out
aaa
mov
hlt
adc
fdiv
or
sub
mov
popa
leave
jnp
adc
push
daa
ret
rorb
roll
sbbl
mov
sbb
icebp
xor
inc
loope
arpl
jl
add
mov
inc
int
arpl
scas
shr
movsl
mov
and
jl
mov
outsb
test
fcom
xorl
insb
jnp
mov
cmpsb
cs
pusha
test
jecxz
dec
add
mov
fucomp
sub
jecxz
lock
pop
or
out
mov
or
inc
divl
jne
int
lret
mov
test
cmpsb
inc
test
xor
int
xor
cli
push
ds
rorl
pop
sbb
add
sbb
mov
pop
push
jg
daa
xchg
push
aad
fcoms
xchg
ret
mov
out
cmpsb
fstl
or
dec
dec
imul
lods
pop
mov
push
mov
push
nop
or
jbe
movsl
std
dec
mov
hlt
icebp
push
inc
fwait
shll
pop
xchg
push
dec
in
movsl
sub
or
ret
pop
push
ljmp
xor
rol
jbe
repz
call
into
dec
cmpsb
shl
push
mov
je
movsl
lods
es
call
rcr
outsb
dec
mov
fsts
add
stc
divl
push
pop
xchg
cmp
inc
pusha
paddd
mov
lea
xor
pop
jbe
test
mov
xor
movsb
inc
push
loope
xchg
sbb
ss
mov
sti
into
outsb
insb
xorb
mov
xor
mov
mov
push
cwtl
push
lea
sbb
bound
push
cmpsb
pop
mov
dec
mov
imul
lds
mov
outsl
repnz
jo
mov
sahf
add
dec
cwtl
shr
add
adc
rcrb
jmp
inc
jo
int
fstp
pop
push
pop
or
mov
adc
es
inc
fsubl
sbb
ss
int3
popa
sbb
out
adc
mov
mov
setl
sub
mov
mov
sbb
mov
and
cltd
mov
jecxz
pop
icebp
dec
in
adc
cmp
dec
loope
sarb
inc
mov
das
int3
insl
xchg
jnp
in
sbb
jo
sarl
mov
sub
mov
adc
pop
das
lods
lcall
fldenv
fdivl
loope
mov
cmp
mov
and
stc
lahf
faddl
rol
add
cmp
dec
mov
aas
adc
sbb
push
lret
jae
mov
fwait
dec
mov
fildl
xor
adc
lahf
push
aam
push
or
stos
cmp
rcll
fcomps
ds
insl
push
test
shll
repz
imul
sbb
mov
inc
xor
push
mov
jmp
dec
xchg
jl
adc
mov
xchg
xor
idivb
jbe
sub
sub
hlt
loop
outsl
mov
xor
dec
fwait
push
lea
mov
lcall
mov
xchg
jns
and
jne
sub
and
rclb
jl
nop
push
mov
popaw
xor
sbb
imul
or
xchg
jb
add
pop
inc
push
call
push
sbb
mov
mov
repz
jmp
imul
pop
inc
pop
mov
cmpsl
movsb
js
cmp
gs
insl
jp
clc
sub
pop
mov
fdivs
lahf
pusha
jp
xor
inc
xor
rcrl
int
sub
cmc
stos
lret
test
loop
mov
popl
jge
repz
addr16
add
aam
pop
inc
repnz
xorl
cmp
xchg
sbb
jns
adc
or
and
jl
or
rorl
dec
xchg
mov
mov
cmc
mov
lds
sarb
dec
sbb
mov
xchg
or
jnp
sub
idivb
xor
or
shl
cmp
mov
sbb
sub
rol
push
shrb
fisttps
sar
imul
jbe
sarl
sub
in
mull
in
xlat
xchg
dec
sti
adc
test
xor
imul
mov
aaa
sub
cmp
and
ja
xchg
cli
int3
iret
lea
nop
mov
cmp
or
nop
test
rcrl
sbb
les
jl
pushf
int3
outsl
mov
mov
daa
bound
into
out
mov
pop
sub
int
insb
fs
bound
outsl
dec
adc
outsb
jb
ljmp
push
dec
addr16
fdivrp
push
xchg
jne
outsl
lahf
lock
jnp
sbb
rorl
movsl
sbb
je
push
insl
xchg
test
or
dec
movsb
test
push
mov
add
inc
fsts
pop
mov
vunpcklps
sbb
add
repnz
call
jmp
mov
sar
lock
mov
and
test
cmp
loop
jne
or
test
ss
dec
and
pop
ret
cmpsl
push
clc
cmp
inc
sahf
movsl
pop
cmc
cmp
jp
cmpsb
adc
in
xchg
pop
std
fsubl
lds
dec
cld
es
sti
mov
addr16
mov
jnp
sarb
pop
in
insl
pop
jno
out
cld
sbb
mov
add
mov
jmp
aas
aam
rorb
lahf
xor
cmpsl
push
maskmovq
testl
idivl
cmp
test
push
call
stos
icebp
lds
in
subb
push
jns
hlt
out
or
scas
jmp
mov
adcb
pop
jp
nop
fldenv
es
pop
stc
push
jo
and
push
pop
jg
mov
dec
mov
mov
clc
jecxz
cmc
js
push
xchg
or
pop
xchg
cmpsb
mov
and
or
jecxz
fwait
ss
sbb
add
addl
cmp
popa
xor
mov
pop
test
cmp
inc
in
mov
lea
cwtl
movsb
adc
sub
mov
mov
cltd
dec
pop
and
lods
dec
nop
inc
push
sub
ret
push
push
loop
sub
or
rolb
xchg
js
adc
cli
inc
and
inc
test
lret
outsb
fwait
inc
aad
dec
popf
sbb
dec
xor
push
xchg
ds
and
je
insb
adc
lret
aaa
gs
icebp
xor
jecxz
arpl
cmp
sub
fadds
lret
mov
cmpsb
inc
negb
pushf
and
movsl
xchg
pop
fisttpll
or
push
pop
popa
into
pushf
mov
inc
aad
into
aas
test
jae
sbb
jbe
mov
cltd
xchg
inc
sti
imul
sbb
lds
adc
lea
rep
jl
inc
pop
push
push
scas
dec
mov
mov
cmp
cmp
and
pushf
stc
and
hlt
dec
data16
stos
xchg
lret
mov
shr
xor
push
lock
xor
adc
xchg
pop
fs
pop
xchg
jmp
dec
mov
and
popa
ss
stc
xchg
adc
push
pop
call
cmpsb
std
fnsave
hlt
repz
xlat
dec
inc
xor
cmp
es
cmp
bound
ds
and
mov
in
sbb
lea
push
sbb
mov
sbb
out
lret
mov
mov
xor
add
lret
cmp
je
outsb
push
ljmp
dec
jb
pop
lcall
jbe
cs
fcoms
pushl
stos
mov
xor
xchg
jle
inc
addr16
arpl
adc
out
mov
cs
pop
push
neg
outsb
repnz
stos
xor
mov
inc
repz
dec
data16
sub
out
sub
fnstsw
push
fisubrs
imul
mov
aam
scas
sarb
hlt
adc
leave
push
mov
jg
xor
shlb
rcrb
xchg
jae
xchg
sub
lret
cmpsb
push
ja
test
stos
xlat
mov
push
push
aad
mov
xchg
sbb
dec
adc
fcompl
into
test
sbb
add
push
xor
dec
push
and
sbb
aas
xor
stos
xchg
cmp
icebp
testb
push
jmp
cmc
fucom
xchg
dec
cmpsl
dec
xchg
insl
test
in
mov
mov
sbb
movsl
aam
repz
push
mov
ret
xchg
push
pop
test
mov
ret
stc
out
cmp
ds
int
adc
int3
xor
sub
lods
movsl
imul
jge
test
cmp
dec
mov
in
mov
or
push
decb
movsl
shrb
fisubs
mov
dec
sbb
test
scas
inc
daa
mov
push
scas
dec
jle
cmp
rcrb
mov
jo
pop
push
sar
jo
sbb
scas
mov
mov
mov
adc
cs
call
idiv
repnz
dec
js
lods
push
sbb
xchg
add
test
je
leave
cwtl
sub
cmp
cwtl
jl
adc
sbb
and
xor
inc
stos
push
adc
aaa
jne
add
jae
mov
xchg
adc
push
mov
pop
in
aaa
mov
pop
inc
fstl
ja
loopne
jg
or
mov
sbb
arpl
pop
adc
andl
mov
jmp
cmp
ftst
pop
movsl
dec
and
aad
into
ds
jle
and
loope
lahf
mov
sbb
fbstp
adc
sbb
setns
or
xorb
xchg
test
add
mov
movsb
jb
sub
iret
out
jae,pt
leave
or
add
adc
lock
push
xchg
pushf
ja
pop
pushl
dec
and
int3
cmpsb
cs
insl
clc
mov
push
xor
test
jge
xlat
mov
shll
ret
imul
cmpsl
aam
xchg
cmp
shrb
sbb
sti
punpckhwd
in
push
sbb
dec
cmc
add
xchg
jbe
xor
test
xor
imul
cli
es
push
adc
xchg
popa
jle
sahf
test
xor
pop
fsts
rcrb
fcmove
push
add
xchg
jl
out
lea
js
cwtl
cmp
mov
xchg
out
nop
stc
stc
jo
pop
subl
or
push
je
pusha
xchg
mov
stos
ror
push
pusha
dec
cmp
fsubrp
xchg
push
xor
stc
xlat
mov
lods
cmp
xchg
jns
pop
sbb
xor
sub
add
jmp
rclb
sti
clc
pop
adc
hlt
jnp
mov
xlat
sbb
jecxz
pop
mov
cmpsb
pop
pop
xchg
mov
jmp
ds
xchg
mov
in
in
das
mov
fistpll
add
aad
movl
push
sbb
jp
jg
sbb
xor
dec
mov
jmp
add
and
dec
and
xchg
cmp
outsb
jmp
pop
jnp
icebp
sbb
shrb
pushf
add
and
aad
push
in
pop
in
adc
insb
es
mov
sahf
in
lea
cld
xchg
inc
sub
fnstsw
mov
lods
rol
or
adc
xchg
adc
ss
in
push
loope
out
xchg
fdivr
in
sub
push
popf
pop
push
push
or
ret
add
sbb
movsl
les
loope
in
adc
and
xchg
cmp
adc
xchg
stc
sub
push
jmp
lods
imul
test
dec
outsb
push
mov
add
test
es
daa
out
pop
xor
mov
fildll
xor
sbb
push
pop
jl
es
test
std
subl
cmp
mov
dec
ret
aas
insl
xchg
arpl
stos
xchg
mov
aaa
dec
pop
es
mov
int
sbb
push
xchg
decb
enter
push
aas
pop
cmp
sbb
in
daa
clc
stos
push
or
outsb
add
aas
inc
sbb
sbb
mov
mov
out
sub
xor
in
daa
adc
in
push
ljmp
add
xlat
jmp
fwait
push
aas
fldt
repnz
dec
jb
add
xor
aam
cs
popa
stc
sub
xchg
xor
ja
pop
mov
jbe
add
fisubrl
call
sub
xor
pop
shll
test
jno
std
adcl
loope
ficomps
loope
aaa
or
mov
std
and
bound
sub
clc
imul
cwtl
mov
pop
push
jmp
jl
lret
nop
cwtl
jl
push
xchg
sahf
mov
enter
hlt
push
icebp
inc
les
adc
sarb
mov
fcoml
aaa
sahf
xchg
pop
data16
cwtl
mov
fcomip
lcall
enter
test
inc
dec
lret
pop
mov
cwtl
outsb
out
pop
repz
sbb
inc
andl
jb
and
stos
inc
and
and
pushfw
or
sbb
aas
or
ret
repnz
mov
xor
pop
add
jno
ds
jp
push
jnp
sahf
lret
mov
jmp
mov
mov
mov
cs
adc
je
mov
imul
xchg
repz
fistpll
cmp
mov
add
pop
xchg
dec
rclb
cmp
imul
and
cmp
dec
sub
pop
or
mov
jns
inc
cmp
ret
sahf
mov
mov
ds
sbb
gs
arpl
shrb
movsl
fwait
sub
sbb
lret
push
xchg
and
dec
iret
movups
adc
and
js
mov
es
aas
clc
call
pop
idiv
xchg
repnz
dec
jle
cltd
jp
ss
or
sbb
sub
xor
dec
push
or
in
in
insl
aad
sbb
xchg
mov
or
mov
xchg
adcl
pop
and
sub
push
add
xchg
jae
pop
mov
sahf
xchg
jle
sarb
xchg
popf
xchg
lahf
jl
shlb
inc
mov
scas
fidivl
sbb
jmp
pop
mov
dec
pop
pop
dec
pushf
jl
loope
mov
jb
fimuls
sub
mov
pop
or
or
pop
std
sbb
adc
pusha
fwait
jns
fstpl
out
xchg
xor
pop
lods
sahf
les
arpl
inc
adc
xor
hlt
bound
imul
cmp
push
xchg
mov
cmp
test
js
cmp
pop
out
subb
subl
sbb
leave
movsb
mov
loope
fcom
pop
adc
mov
popf
pshufw
jl
orb
divl
add
mov
pop
push
cmp
jns
pop
aaa
xchg
xchg
movsb
add
sub
jne
pop
adc
or
inc
dec
mov
xchg
dec
dec
push
dec
rcrl
push
out
jg
push
and
sbb
mov
vmulpd
inc
sbb
and
xlat
insl
or
xor
jecxz
ret
inc
jecxz
aad
inc
aaa
lcall
pop
loopne
packsswb
out
pop
sbb
inc
ret
lahf
xor
xor
cmp
add
adcb
sub
inc
jnp
popl
or
mov
fwait
testb
leave
inc
fwait
pop
in
jmp
scas
or
cwtl
stos
xor
mov
and
cli
xchg
dec
add
jp
sbb
xor
sbb
das
arpl
shlb
popa
pop
dec
jbe
cmc
mov
fdivs
int3
stos
mov
cmp
outsl
test
dec
fisubl
in
xchg
add
cmc
sahf
mov
push
push
mov
add
ljmp
andb
lock
pusha
adc
test
pop
ficompl
inc
inc
clc
push
bound
jne
out
movsb
inc
and
mov
ficomps
aad
mov
mov
aas
cmp
leave
or
pop
push
ret
sbb
in
sub
push
fimull
dec
dec
xchg
push
dec
movsl
push
adc
add
adc
fldcw
pop
sub
jnp
mov
fiaddl
push
sub
add
pop
imul
jae
cmp
outsb
pop
lock
ror
hlt
mov
insb
cmpsb
inc
loopne
daa
dec
mov
in
aas
mov
xchg
sub
mov
mov
shrl
jns
pop
mov
xchg
das
das
or
jecxz
outsb
push
mov
sub
bound
or
pop
mov
movsb
inc
mov
pop
scas
mov
in
add
mov
pop
jns
sbb
xchg
or
lods
lahf
push
push
inc
and
pop
imul
jo
mov
icebp
jno
aas
js
and
cmpsb
test
or
adc
jp
or
pop
pop
clc
rcl
cmc
insb
and
js
sbb
adc
scas
in
mov
or
cmp
fs
lret
std
mov
shlb
mov
icebp
sti
insl
cmp
test
push
mov
jp
lods
insl
pop
loopne
cmpsl
xchg
aam
jp
push
xor
out
and
fildl
cmpsl
mov
pushf
loopne
insl
and
mov
xor
adc
mov
cmc
push
mov
add
adc
mov
jno
scas
in
inc
into
xor
push
push
push
push
xchg
je
fstl
pop
cltd
ja
dec
pop
mov
iret
mov
lret
cltd
add
pushf
stos
cmp
add
outsl
pop
push
out
fldl
repz
sub
and
es
sub
mov
movsl
xchg
adc
mov
test
imul
cmpsl
sarl
in
cmp
insb
jg
repz
enter
cli
add
cmp
ja
xor
jbe
out
imul
sahf
arpl
pop
mov
rcrl
jnp
cltd
jp
inc
mov
pop
out
inc
test
add
add
cmp
lahf
jbe
push
repnz
sbb
out
sub
push
stos
arpl
inc
flds
int3
nop
push
dec
popa
and
cmp
sbb
idivl
xchg
inc
xchg
push
das
out
adc
cli
mov
nop
call
pop
cmp
push
adc
pop
push
xchg
inc
hlt
pop
pop
mov
dec
sub
push
pop
xor
xorl
xchg
mov
pop
enter
xor
inc
jbe
je
int
pop
and
push
outsl
xor
dec
cmp
out
insl
gs
cmp
stc
rol
aam
cmp
sub
in
mov
iret
movsb
jbe
and
xor
adc
movsb
sub
test
rcr
decb
adc
cwtl
xorb
ret
inc
inc
movsl
xor
cmp
xlat
enter
pop
cs
cmpsb
lcall
in
enter
dec
sbb
jle
cmc
inc
push
inc
dec
inc
loop
jno
stos
repz
sahf
loop
popa
sub
mov
mov
jb
repz
fisttps
sbb
out
mov
xor
fsubl
pushf
push
dec
sub
divb
outsb
jg
nop
lods
outsl
mov
ret
mov
add
and
cli
insb
xor
jnp
sub
cmpl
inc
dec
daa
mov
xchg
xrelease
es
add
pushl
shrb
pop
dec
sbb
cmp
xchg
jl
in
stos
aam
push
push
iret
adc
repnz
adc
mov
fs
aam
jb
jo
stc
add
pop
test
sub
cmp
and
les
test
jbe
push
xchg
xchg
cmp
lret
xor
fcomps
adc
cmp
jp
jo
mov
mov
das
xlat
lret
in
ljmp
xchg
pop
mov
dec
mov
sub
mov
stc
mov
pop
into
sub
adc
outsl
stos
xchg
pop
cmp
cld
push
aaa
or
fsubl
xor
sahf
dec
fiaddl
mov
push
aad
aaa
xor
push
roll
xorb
jge
aad
jg
xlat
inc
mov
test
adc
inc
push
mov
call
sarl
ret
daa
cwtl
push
or
xchg
ret
jb
or
inc
hlt
and
std
ret
fldlg2
inc
inc
add
xlat
cmc
cmp
xchg
lock
inc
pop
ss
dec
test
dec
pop
and
pop
in
sbb
mov
add
pop
test
loope
or
enter
xchg
mov
cmp
clc
cltd
loope
loop
add
sbb
push
sub
repnz
loope
loope
push
inc
lahf
fcoms
enter
testl
inc
lds
into
or
mulb
push
ss
scas
mov
rol
std
lret
add
jns
je
arpl
roll
imul
js
sahf
orb
jno
lret
call
ret
cmp
push
mov
cmc
ficomps
xlat
aam
sbb
scas
add
mov
test
inc
popf
inc
mov
and
cmpsb
adc
cmp
jle
adc
icebp
pop
mov
push
push
push
jno
insb
int3
mov
add
lcall
rorb
lock
lahf
lods
mov
lods
adc
mov
insl
insb
mov
jge
push
fucompp
lcall
nop
dec
jne
lret
stc
xor
iret
pop
sbb
or
lock
aam
jnp
call
mov
sbb
es
fwait
sbb
push
jno
imul
xchg
pop
mov
out
and
repz
dec
push
jns
add
mov
dec
fsubrp
in
sbb
subl
popa
es
in
add
mov
cmpsl
cmp
cmp
pop
sub
push
loope
addr16
das
js
out
add
out
adc
ficompl
int3
cmpsl
sbb
jp
faddl
inc
out
out
flds
sub
lret
mov
int
sbb
push
imul
popf
pop
mov
xchg
pop
adc
pop
divb
in
cmp
sahf
dec
data16
roll
xchg
loop
ror
dec
pop
sti
and
mov
fisubrs
xor
or
xor
out
sbb
jbe
lcall
popf
pop
ss
xchg
and
jb
jle
testl
or
push
pushf
pop
or
inc
sbb
mov
and
int3
dec
xchg
xor
mov
and
and
arpl
push
and
out
in
arpl
mov
out
pop
sbb
xchg
pop
adc
imul
xchg
pop
push
push
lahf
sub
xchg
enter
sub
mov
mov
repnz
dec
cmp
scas
add
xor
pusha
mov
xor
mov
test
popf
inc
xchg
jecxz
fmulp
push
lock
out
cs
inc
enter
sub
jb
outsl
ja
movsb
push
test
inc
fmull
movsl
jae
cmpsb
mov
in
add
xchg
out
lret
icebp
popa
add
sbb
add
and
lahf
and
sub
mov
rclb
ja
sub
test
cmp
add
ss
cmp
xchg
dec
pop
push
mov
mov
aaa
or
push
incb
aaa
inc
data16
jge
rorl
jns
into
and
pop
fwait
test
mov
pop
xor
sarl
out
lds
adc
fisttpll
sti
xchg
std
fcoms
popf
xchg
ja
mov
xor
setns
xchg
ret
jp
mov
sbb
loop
add
pop
lods
xchg
push
push
xchg
jle
les
jbe
mov
ret
xor
dec
lret
nop
and
cld
pusha
jns
xor
into
dec
sbb
xchg
test
jge
xor
scas
lret
cli
ljmp
bound
mov
aaa
imul
jmp
scas
adc
cmp
cli
cs
sarb
movsl
xor
loope
enter
pop
inc
mov
sarb
hlt
stos
lcall
dec
aas
pop
dec
aas
jp
jp
push
scas
xchg
int3
xchg
sti
pushf
je
cmp
fistl
lret
out
xchg
lret
cmp
push
xor
jmp
lret
push
adc
test
sbb
cli
repz
rorb
cwtl
or
fs
push
fldl
in
dec
xor
imul
or
pop
jecxz
outsb
ret
cmp
push
out
push
dec
cld
or
adc
xchg
mov
loop
and
push
mov
loop
movsb
fs
out
fisubrs
lahf
fildl
adc
lret
out
jmp
mov
daa
fimuls
mov
mov
mov
xchg
adc
push
fst
mov
add
andb
ret
leave
aaa
inc
adc
icebp
sbb
loope
in
pusha
lea
xchg
dec
sub
mov
mov
push
mov
jne
scas
shlb
lret
xor
popa
cmp
jo
mov
arpl
push
leave
mov
sbb
out
jno
sti
ss
and
pop
adc
gs
ljmp
push
mov
or
mov
pop
jo
mov
out
mov
push
sbb
pop
addl
popl
mov
icebp
ja
adc
rcrb
ja
sub
test
sub
add
js
sbb
mov
push
imul
enter
imul
inc
adc
pop
inc
pushf
in
and
push
pop
dec
xor
adc
sti
dec
add
dec
test
pop
push
dec
outsb
cli
push
push
push
cmp
pop
in
jno
mov
fldcw
sub
fndisi(8087
pusha
mov
dec
jno
jb
lahf
lock
or
popa
sbb
sbb
jecxz
dec
fwait
mov
cmp
add
mov
mov
push
xchg
cmp
jl
pop
sub
mov
mov
xchg
cld
inc
or
adc
nop
aad
adcb
jae
test
push
pop
pop
mov
jo
scas
into
sub
and
adc
cwtl
mov
add
mov
daa
aam
cli
dec
pop
jo
add
daa
xlat
into
addb
jnp
int3
dec
loope
add
test
mov
data16
mov
sub
push
sbb
pop
popa
mov
fs
bound
gs
push
push
push
xlat
mov
dec
repz
jg
aaa
rcrl
cmp
mov
dec
jge
inc
push
or
push
xchg
movsl
outsb
adc
stos
pop
inc
shl
inc
sub
xchg
fbstp
out
xchg
dec
jp
sbb
es
or
mov
add
mov
cmp
test
push
and
dec
aaa
cmp
xlat
mov
enter
push
out
push
mov
scas
jp
xor
and
push
xchg
enter
ret
in
out
inc
and
cmp
inc
out
jge
aas
sti
fs
aaa
sub
xor
pop
xchg
and
cmp
or
cmpsb
addr16
inc
in
ficoms
call
sbb
loop
loope
inc
cld
js
aas
sbb
cld
les
add
add
add
test
imul
sbb
out
fcomip
in
std
and
rcrl
xor
cmp
push
cmpsl
mov
xchg
xor
arpl
push
and
add
inc
mov
lcall
adc
rcrb
xlat
pop
cmp
and
mov
mov
cltd
mov
jg
fisubl
or
negl
dec
cs
rcrl
stc
neg
dec
adc
xor
dec
xor
popf
pushf
sub
adc
sbb
push
mov
cmpsb
sahf
in
lret
lcall
iret
xor
push
cmp
jecxz
mov
mov
js
stos
ret
pushf
retw
dec
dec
enter
outsl
lret
mov
dec
loopne
stc
push
pop
and
pushf
out
ja
adc
dec
sahf
imul
scas
mov
mov
and
adc
repnz
inc
jl
js
sbb
mov
ret
add
jne
mov
inc
sti
or
js
sbb
adcb
arpl
mov
les
clc
int3
jns
jmp
ds
inc
mov
cmpsb
and
movsb
or
scas
data16
pop
addr16
leave
hlt
and
pop
inc
je
leave
flds
addr16
sbb
subl
leave
and
push
ret
rorl
cld
cmc
push
insb
and
adc
shlb
dec
add
popa
xchg
sub
clc
xor
fstps
fs
push
jb
push
or
mov
cmpsb
lods
ret
pop
aam
push
test
bound
pop
pop
sti
lahf
dec
das
sahf
sbb
cs
adc
movsb
xlat
test
sbb
mov
mov
aaa
pusha
cltd
test
or
out
lea
into
mov
lcall
fistpl
push
out
fcomi
push
icebp
andl
cltd
mov
cmp
int
cmp
repnz
jbe
and
ljmp
xor
mull
shl
adc
push
scas
outsb
rclb
sbb
icebp
and
sti
popa
xchg
lods
imul
in
mov
imul
jo
pop
mov
sbb
push
pop
rcll
lcall
lock
xchg
xchg
test
or
leave
mov
push
cwtl
fmull
mov
mov
mov
lock
rorl
or
fcmovbe
fs
mov
rcll
shr
lea
hlt
cli
cmp
push
shlb
push
hlt
cmp
sub
enter
xchg
jmp
je
sub
and
or
lahf
jne
stos
pop
ljmp
or
xor
fdivr
inc
popf
hlt
jl
inc
out
cmp
addr16
push
pop
xor
out
inc
ud0
jbe
out
inc
push
inc
les
repnz
adc
sahf
inc
cmpsl
fistpl
push
adcb
push
inc
call
and
pop
and
test
or
call
sub
sub
sti
cmp
pop
aas
andb
xchg
push
pop
leave
jle
inc
add
out
out
stos
xor
imul
subl
jle
out
iret
adc
xlat
aad
imul
pop
adc
cmp
cmpsb
push
add
add
out
add
push
test
push
xchg
sub
mov
test
pop
sbb
std
aad
xchg
or
pop
cmc
jb
xchg
addb
sbb
jmp
outsb
iret
repnz
xor
out
push
dec
add
cmp
out
shlb
push
loope
daa
or
daa
xchg
push
adc
int3
je
call
arpl
andl
fisubrl
and
insb
adc
repnz
insl
aad
mov
dec
sbb
sub
cmp
ja
or
leave
sbb
mov
inc
stos
icebp
cwtl
pop
push
xchg
mov
nop
mov
lret
cmp
dec
outsl
int3
popf
push
or
adc
or
inc
sub
in
sub
and
push
lahf
cld
es
mov
jae
add
fdivrs
int3
sti
call
jg
dec
adc
fstpl
lcall
adc
jae
pop
jno
push
xchg
jbe
push
je
cli
mov
fsubr
rcl
jge
scas
fsubrs
adc
rdpmc
repnz
fs
and
shll
jmp
scas
pop
lds
jle
test
add
aad
xor
pop
fdivr
push
add
or
jo
in
cmp
sbbb
mov
mov
sub
sub
sahf
pop
mov
jge
je
lds
sbb
mov
pusha
subl
cs
xor
sarb
stos
gs
mov
cld
imul
faddl
test
pop
gs
and
shll
movsl
push
out
inc
cwtl
or
push
or
sub
sahf
mov
and
push
outsl
fbld
in
loopne
jnp
or
mov
shll
lret
outsl
mov
pop
mov
out
and
into
push
jb
sbb
xor
cs
nop
xchg
mov
je
xchg
out
xchg
in
leave
pop
daa
push
push
and
dec
sub
cmpsb
push
jns
cli
mov
mov
stc
sub
add
cmp
dec
add
sub
mov
jmp
mov
or
test
adc
mov
cli
lods
pop
or
mov
or
mov
addb
mov
push
movsl
jb
or
in
lcall
stos
repz
lea
add
sub
mov
loopne
cmc
xchg
cmpsb
lret
sub
adc
outsb
mov
cmc
aad
xor
push
cmp
shlb
pop
push
jbe
sahf
test
mov
stc
ja
insl
pop
roll
cmpsb
lcall
push
push
dec
mov
imul
adc
sahf
out
jg
mov
push
std
ret
push
insl
cmp
sti
das
imulb
loopne
pop
mov
pop
xor
stos
jo
ds
fwait
cs
daa
fldenv
aad
aaa
addb
sbb
add
add
dec
mov
out
fsts
lock
and
bound
js
sbb
popf
mov
xchg
lahf
push
in
mov
jbe
cmp
cltd
xor
mov
std
stos
or
aas
sub
cmp
dec
xor
pop
mov
pushf
cmc
mov
pop
test
mov
fcmove
or
sahf
mov
jnp
and
or
jnp
cmpsb
sub
add
inc
movsl
dec
pop
nop
pop
pop
lret
ret
push
jg
rolb
iret
imul
out
aad
cmc
xor
addr16
popa
xchg
adc
mov
or
adc
test
lcall
push
push
mov
bound
ffreep
bound
add
xchg
inc
xlat
or
cmpb
xor
pop
aam
xchg
jge
mov
sbb
mov
aam
pop
bound
jp
dec
xchg
fisttpl
fwait
and
pop
shrl
or
aad
xchg
mov
rorb
popf
push
jnp
mov
jae
iret
out
adc
or
push
repz
or
push
sahf
stc
outsb
mov
pop
out
sbb
insl
loopne
notb
rolb
clc
add
push
xor
or
enter
in
sbb
fisttpl
stos
sarl
xor
cs
out
mov
sti
lcall
cmc
lods
addb
xchg
pop
mov
dec
decb
fnstenv
pusha
enter
roll
push
or
pop
mov
fldt
fsubs
pop
inc
ljmp
sbb
iret
aas
aam
adc
jle
adc
xchg
into
cmp
inc
sarb
shrb
jl
ljmp
cld
pop
ds
ja
inc
mov
stos
inc
xor
iret
mov
lcall
adc
add
sub
arpl
pop
insl
aad
jge
jo
es
sub
nop
sahf
andl
ja
xchg
xchg
xlat
push
shrl
pusha
movsb
fs
lods
or
iret
cmp
jecxz
sbb
and
dec
ja
xor
mov
dec
rolb
fbld
push
xchg
out
and
cmp
jle
mov
pop
xchg
jmp
cli
enter
clc
or
aad
fnstsw
call
sub
popf
pushf
stos
pop
ret
dec
lret
pusha
and
mov
jg
add
push
mov
mov
scas
mov
inc
mov
lods
push
cmp
mov
sub
iret
mov
sahf
mov
pop
in
movsb
cmp
rclb
xchg
imul
xchg
stos
pushf
lds
inc
rcll
pop
cld
or
std
pop
in
mov
or
sbb
inc
cmp
ret
jo
out
mov
movsb
jo
pop
mov
sub
mov
pop
mov
sbb
pop
jo
dec
inc
aas
or
negl
mov
idiv
sbb
add
cs
and
fsubrl
jae
jle
push
aam
outsb
adc
loope
xor
hlt
lock
add
insb
xor
inc
sbb
sub
daa
mov
ret
xchg
jbe
sub
filds
push
add
addr16
mov
gs
cmpsb
lahf
in
out
roll
and
testl
sub
xchg
and
jle
sub
ss
shlb
and
mov
leave
sub
xchg
daa
sbb
mov
jnp
pop
xchg
mov
mov
stc
loope
jg
sarl
adc
jno
xlat
test
inc
add
mov
cmp
inc
jb
and
push
hlt
data16
push
outsl
fcomps
cmp
cld
fidivs
aam
cmc
sub
mov
scas
addr16
push
xchg
orl
jne
fisttps
push
fcom
mov
mov
pop
bound
mov
inc
cmp
xchg
stos
mov
xchg
fimuls
cmp
pop
loop
repnz
sub
lods
cmp
repnz
cwtl
lcall
sub
mov
push
in
xor
out
sub
loope
xchg
pop
pop
jbe
and
mov
mov
push
cmp
outsl
inc
pop
lds
data16
loope
cs
leave
mov
aad
adc
and
adc
adc
scas
and
dec
inc
gs
mov
fdivr
or
or
sti
loope
fnsave
push
xor
aad
jp
les
dec
xchg
inc
cmp
gs
in
enter
and
dec
inc
int
xor
ljmp
scas
mov
dec
jge
add
and
fsubrs
int3
aad
xor
pop
cmpsb
jns
enter
and
xchg
mov
fcomps
mov
imul
nop
mov
add
mov
adc
mov
mov
sahf
jge
mov
inc
hlt
rorl
mov
int3
inc
out
sub
push
movsb
loope
jge
push
cli
out
pop
jne
int
adc
sbb
aam
sbb
sahf
ljmp
jl
loopne
loopne
and
or
movmskps
adc
rcll
cmp
leave
jp
inc
cmp
dec
cmp
pop
push
dec
sub
sub
adc
aas
ss
gs
pop
mov
pop
lcall
aam
pusha
mov
clc
inc
and
dec
cmp
addr16
insb
cmp
push
adc
xchg
dec
nop
shrl
das
sbb
ljmp
sahf
movsb
xor
push
pop
push
icebp
fistps
jo
cmp
fsubrl
into
jmp
aas
or
es
andb
xchg
adc
jmp
mov
icebp
repnz
push
add
es
test
add
divl
jae
jbe
xor
or
js
test
mov
iret
xchg
shlb
ds
push
xor
sahf
or
dec
push
pop
xchg
jne
lahf
js
mov
out
scas
add
xchg
push
icebp
cmp
shlb
decb
ret
jo
adc
femms
pop
xchg
jmp
jno
cmp
cmp
xchg
scas
sti
movsb
mov
push
scas
jo
adc
xor
fcoms
pop
pop
sti
mov
data16
imul
es
xlat
cs
fsub
mov
test
xchg
xor
or
test
sbb
jecxz
in
lods
mov
outsl
jnp
jb
sti
sbb
sub
out
sbb
testl
add
pop
mov
sub
xor
ds
fmuls
add
rorb
rcrl
dec
dec
je
data16
cmp
pop
xor
xchg
cmp
js
nop
xchg
mov
inc
shlb
add
adc
jg
in
pop
adc
add
mov
test
mov
mov
add
inc
ss
outsl
lock
sbb
fs
jecxz,pt
aaa
mov
xchg
jnp
cmpsb
in
sbb
mov
pop
push
fildll
repz
test
mov
pop
pop
xchg
xorl
cmp
inc
fwait
pop
mov
inc
pop
jmp
jns
shrl
sub
xchg
cmp
pop
imul
shll
idivb
test
call
into
mov
jno
xchg
pop
stc
add
xchg
inc
rclb
pop
lret
int3
add
idivl
out
fmull
mov
std
jecxz
or
cli
fcompl
dec
mov
xor
jne
adcb
out
or
mov
mov
jae
pop
insl
dec
or
mov
inc
push
out
inc
xchg
mov
sbb
jns
ljmp
sarl
or
or
out
cwtl
loopne
addr16
push
mov
test
inc
or
rclb
mov
jmp
fwait
jno
shlb
jo
bound
mov
mov
es
and
or
adc
mov
adc
and
adc
ds
cmp
pop
fnstenv
add
into
sbb
add
xchg
add
sub
sahf
fdivs
cmp
mov
fimull
inc
add
popa
dec
fwait
inc
out
adc
or
mov
lcall
push
icebp
cmp
or
inc
dec
lret
mov
out
sbb
adc
push
dec
mov
sbb
jno
jns
je
mov
aam
add
cmp
dec
inc
ds
push
shl
cld
inc
popa
adc
testb
aaa
clc
cwtl
in
pop
popa
sti
mulb
xchg
push
push
loope
out
mov
int3
add
popf
out
lock
or
push
adc
cmp
mov
test
sub
sbb
js
cmp
fisubs
hlt
js
inc
push
mov
mov
out
dec
test
xor
lods
aad
bnd
pushf
insl
stc
aad
add
push
add
push
aad
jl
cld
es
mov
push
mov
push
inc
out
rolb
in
in
push
ret
mov
daa
shr
sub
mov
or
or
xor
adc
movsb
mov
xor
pop
sbb
xor
and
cmc
sbb
inc
mov
lock
clc
jl
add
xorb
fsub
into
cmp
imul
mov
outsb
add
pop
and
ds
call
fwait
cld
shrl
lock
cltd
enter
bnd
xor
and
gs
and
xlat
sbb
lock
jns
ret
lock
fbld
mov
sti
cmp
jae
fs
and
out
pop
mov
pusha
rclb
jle
hlt
add
inc
loope
scas
mov
fwait
jb
repz
dec
stos
outsl
fcomps
jno
pop
fisubrl
repnz
jbe
loope
ret
int
cld
notl
pop
mov
push
inc
cmpsl
fisttpll
std
fcoml
stc
dec
sbb
enter
jo
mov
mov
push
aas
or
fstl
mov
popf
pop
incl
pop
vfmsub231ps
dec
movsl
cmpsl
adc
and
rclb
lret
jae
addr16
lahf
sub
add
and
vsubsd
enter
pop
mov
data16
pop
das
dec
or
or
cmpsl
call
xrelease
fxch
repnz
ss
dec
vucomisd
pop
cmpsb
cmpsb
xchg
fbld
sbb
movsl
or
jg
push
jno
in
daa
mov
mov
scas
pcmpeqd
adc
lea
cld
cwtl
movsl
js
out
repz
mov
sbb
mov
mov
xchg
out
push
xchg
jge
xchg
push
xchg
popf
push
push
or
dec
xor
pop
inc
cmp
fstl
mov
imulb
jae
xchg
into
inc
enter
aad
adc
pop
mov
out
mov
sub
jge
and
mov
insb
mov
ret
add
xchg
sub
pop
and
repz
ljmp
add
xchg
cltd
sbb
pop
jmp
mov
push
xchg
pop
mov
out
cmp
test
jl
sti
push
sarl
enter
les
in
sub
jb
daa
xchg
outsl
shrb
xor
movsl
pop
fldenv
in
sub
push
cmp
scas
xchg
add
fistl
adc
xor
jne
jno
fdivr
xchg
lods
imul
inc
push
pusha
push
and
push
or
pop
lods
lods
call
test
mov
in
mov
shl
cwtl
xor
pop
es
inc
mov
or
sbb
jle
mov
orb
cltd
js
sbb
fisttpll
inc
fs
dec
add
xchg
inc
loope
movsl
push
mov
sahf
dec
out
ss
insl
add
int
adc
rorl
incb
mov
jo
mov
mov
mov
mov
sbb
jle
mov
ljmp
sti
loop
in
sbbl
cmp
adc
imul
pop
lret
xor
jg
test
movsb
dec
pop
fs
es
dec
icebp
das
lock
fldt
cmp
push
jg
mov
sbbl
and
hlt
addl
outsb
inc
pusha
adc
les
xchg
xchg
dec
sbb
adc
xorb
lea
andb
mov
je
sub
push
testb
push
mov
int
sbb
fstpt
arpl
lds
inc
xchg
outsb
mov
addr16
dec
mov
cmpb
jmp
mov
xchg
cltd
xor
mov
push
xchg
xlat
jp
pusha
xchg
jns
sbb
mov
mov
mov
xchg
xchg
test
add
xlat
jecxz
xor
sbb
push
mov
xor
dec
and
pop
popa
add
push
cmc
push
push
pop
inc
shrl
dec
dec
aam
ret
inc
lods
push
inc
lret
and
mov
sub
pop
out
xchg
jg
rclb
stc
adc
bound
scas
fs
rclb
cltd
xchg
ja
add
fstps
iret
pop
inc
mov
jbe
dec
stos
shlb
je
cli
testl
sti
cmpsl
push
adcl
sub
sbb
xor
negb
stc
pop
icebp
popf
and
mov
jb
pop
stc
cmpsl
inc
xchg
push
outsb
sub
call
lret
int
lahf
popa
pop
test
push
and
rcll
out
inc
mov
dec
pop
mov
pop
ds
das
mov
xchg
movsb
les
arpl
mov
popf
mov
aam
outsl
flds
fnstenv
ret
into
and
ljmp
sub
ds
mov
or
cwtl
push
call
fmul
mov
cltd
rcrb
fwait
jge
cli
shlb
lret
or
lcall
mov
clc
xchg
test
and
xchg
pop
cmp
sbb
clc
jns
fbstp
in
arpl
test
add
negl
mov
inc
sbb
and
shlb
adc
add
aad
loopne
inc
shrl
jp
into
loope
add
in
push
mov
mov
out
xchg
mov
icebp
sbb
mov
xor
inc
dec
pop
xor
xorl
icebp
in
push
mov
test
jle
inc
lret
aaa
out
add
add
mov
test
insb
dec
inc
hlt
sbb
fidivl
jge
pop
repz
jecxz
xchg
mov
mull
int3
jns
or
or
mov
stos
jl
sbbb
andb
sarb
int3
outsb
pusha
les
sahf
xor
nop
stos
lods
jl
fsubr
stos
xor
fidivrl
lds
outsb
insb
adc
pop
ret
or
and
test
dec
sarb
cs
cmc
scas
sbb
sub
mov
xorps
int3
push
sbb
dec
movsb
test
mov
xor
rcrb
repz
outsl
mov
jecxz
movsl
clc
fistpl
xor
adc
lock
pop
adc
stos
out
cmp
jbe
sbb
mov
xor
mov
jae
push
mov
lea
mov
jns
scas
push
push
sub
mov
cmp
test
or
mov
cmp
addb
lahf
mov
ja
mov
das
aas
repz
xchg
ds
sub
leave
stc
loope
sti
dec
jge
fcom
lods
ret
fidivs
or
clc
aaa
insl
inc
mov
mov
lcall
pop
pusha
ja
push
or
pop
fidivs
sub
call
lret
mov
and
sbb
or
adc
xchg
arpl
add
jbe
mov
insb
add
push
lods
movsb
lahf
inc
imull
mov
repz
xchg
mov
fimuls
loop
scas
pop
mov
jb
shl
push
imul
or
jo
mov
jg
repz
mov
inc
xor
adc
call
mov
mov
gs
test
push
aad
fwait
pop
and
pop
sub
cld
fcmove
inc
fucomip
in
imul
je
cmc
mov
sbb
fiadds
ret
mov
insl
in
dec
mov
inc
fadds
ss
pop
cmc
and
add
and
aas
mov
jnp
mov
add
push
jge
je
xchg
in
lods
jge
mov
xchg
fwait
mov
cmp
insl
rorb
cmp
xchg
aaa
rol
movsb
into
adc
daa
pop
movsl
rorb
cltd
scas
mov
iret
repz
mov
sti
shll
inc
mov
mov
mov
pop
xchg
sub
adc
pop
enter
mov
mov
jbe
sub
sahf
imul
ficoml
pushl
jno
lods
dec
mov
dec
dec
push
shlb
lret
jno
and
repnz
nop
mov
icebp
xchg
dec
xchg
mov
mov
sbb
mov
mov
repnz
aam
push
or
and
adc
ret
adc
shlb
pop
cmp
repz
ja
sub
filds
xor
insb
jl
cs
shlb
adc
loop
and
sti
or
inc
inc
ret
cmc
xchg
daa
cs
ds
mov
dec
dec
lock
mov
bnd
stos
test
fisttps
repnz
push
jnp
pop
sub
jg
cli
into
icebp
jecxz
data16
mov
punpckhwd
adcb
es
jne
xchg
icebp
mov
mov
inc
add
mov
lea
inc
xor
in
pop
jp
mov
js
pop
xor
cwtl
or
aas
or
out
mov
dec
cs
pop
xchg
pop
add
lahf
cmpsl
orl
sub
aam
ret
cmp
sub
inc
insl
push
dec
push
fs
inc
pop
scas
sahf
jbe
push
cmp
push
loope
fdiv
movsl
cld
outsb
xor
pusha
arpl
dec
mov
test
out
and
push
outsb
jge
mov
in
xchg
int
sbb
hlt
aas
cmpsb
test
andl
in
stos
lods
enter
jp
mov
mov
mov
xchg
xlat
popf
imul
outsb
in
dec
mov
int3
es
or
mov
test
mov
movsl
jbe
mov
lock
mov
cmp
mov
xchg
push
sti
pop
pop
shll
inc
ret
xchg
ret
es
jmp
cli
dec
jmp
push
xchg
test
lret
xorl
cmp
lahf
sub
repz
xor
inc
int3
scas
mov
add
xchg
and
push
inc
mov
jmp
enter
or
adc
inc
movd
jae
xchg
xchg
out
push
inc
popa
icebp
cmp
xor
xchg
nop
scas
xchg
mov
push
rcl
cwtl
notb
mov
pop
test
daa
inc
out
aam
or
inc
scas
out
pop
xor
cli
and
sbb
movsl
dec
call
dec
sub
sub
insb
pusha
or
push
in
movsl
out
aad
push
pop
mov
insb
cmp
jae
cmp
vmovntdq
lock
lods
or
rclb
std
addr16
scas
jae
push
movb
fnstsw
mov
ds
sbb
jecxz
xor
sti
jle
rcrl
push
cmp
test
dec
or
mov
sbb
mov
rcll
adc
fs
lds
iret
inc
and
dec
mov
fstpl
fcomps
loope
push
add
movsl
ss
sbb
sbb
packsswb
xchg
inc
adc
pop
or
push
lds
sbb
mov
pop
sub
bound
int3
inc
aaa
and
rol
mov
rcr
cmpsb
inc
es
xor
popf
jae
orl
inc
jo
xor
ss
pop
fldl
sbb
adc
jo
mov
inc
pop
repz
inc
mov
int
aas
cltd
jnp
push
andl
mov
cltd
fwait
cmp
add
daa
cmpsl
std
fistl
pop
stos
test
repz
mov
not
adc
inc
xchg
sbb
mov
adc
mov
pop
cmpsl
mov
js
adc
mov
xchg
scas
movsb
lods
cmp
dec
xchg
jmp
pop
push
dec
das
stc
dec
insl
push
fisubrl
mov
nop
or
scas
push
movsb
out
add
sbb
mov
fstpl
mov
js
inc
dec
int3
jno
pop
pop
pop
xchg
jbe
movsb
adcb
je
je
shl
lahf
fneni(8087
pop
pop
aas
test
popf
xchg
fs
lods
or
sbb
imul
pop
or
loopne
repz
pop
popf
cmp
bound
dec
add
inc
jno
fsubs
cmpsb
push
xor
cmpsl
push
xchg
pop
xchg
push
mov
ja
fwait
mov
adc
daa
iret
sub
pop
adc
leave
jno
sub
out
icebp
jo
inc
xchg
sbb
and
dec
ret
jg
jp
aaa
cbtw
sbb
push
push
xchg
jo
pusha
fcomps
jge
jecxz
out
mov
iret
and
and
fs
inc
adc
or
cmc
in
pushf
or
cmp
out
xor
test
cs
jno
inc
cmpsb
lds
popf
push
pop
insl
repz
mov
ds
add
mov
or
imul
call
shlb
ja
test
cmpsl
or
mov
idivl
insb
pop
imul
addl
test
or
or
sbb
xor
jecxz
cwtl
movsl
pop
ss
popf
mov
sub
out
dec
aas
xchg
push
xchg
test
mov
pop
addr16
les
lock
sub
mov
fs
ret
push
jae
jns
and
aad
movsb
fistpll
inc
xor
enter
xchg
adc
and
jns
pusha
enter
hlt
xchg
mov
inc
jne
outsl
ficompl
subb
and
dec
enter
or
popa
xchg
jbe
rcrb
push
call
adc
sub
rcrb
je
movsbl
js
add
jne
mov
out
xchg
outsb
mov
sub
jae
in
push
cmpsl
xchg
jecxz
in
pop
int
xor
loope
test
fldcw
or
sub
cmp
fsubs
jle
inc
movsl
and
arpl
data16
jbe
jnp
movsb
data16
or
mov
mov
cmp
je
push
in
cmp
push
push
add
lea
mov
mov
and
xchg
dec
pop
mull
and
fs
jle
and
or
test
jmp
push
push
fdivs
jl
inc
inc
leave
dec
inc
cmp
adc
leave
mov
repz
pop
dec
cmp
gs
add
xor
fcomp
pop
cmpb
mov
movsb
dec
add
xlat
inc
or
shll
push
sbb
pusha
push
mov
sub
shrb
add
dec
lret
inc
mov
xchg
add
dec
cli
and
into
adc
xchg
pop
test
imul
ja
mov
adc
mov
movsb
xchg
dec
sub
ret
push
lds
dec
cltd
sbb
mov
js
or
and
int
add
mov
and
push
dec
inc
mov
jmp
lret
mov
mov
xor
pop
out
and
out
out
dec
imulb
std
lret
lret
sub
lock
aam
sti
es
mov
mov
int3
sub
mov
cmp
leave
movsl
sub
data16
mov
outsl
psrlw
sarb
mov
mov
push
add
popa
mov
clc
adc
xchg
jb
imul
or
test
xchg
int
sbb
push
inc
push
push
outsl
ss
popa
enter
popa
or
pop
cmp
mov
cs
xchg
inc
push
std
cmp
test
in
inc
xchg
je
lahf
mov
repnz
stos
add
test
mov
push
jno
fistps
cmp
and
xchg
stos
mov
into
icebp
inc
test
push
jno
scas
je
dec
mov
fidivs
das
push
out
imul
push
clc
lds
cld
push
xchg
mov
push
outsb
jg
rorl
cltd
mov
stos
pop
jmp
jl,pt
outsl
test
aam
mov
into
ficompl
mov
test
jae
cmc
enter
out
mov
cmpsb
lret
fadd
repz
dec
andb
scas
xchg
push
mov
mov
jo
sahf
lcall
mov
push
movsb
add
pop
loopne
imul
scas
inc
sub
call
sarb
or
mov
jno
dec
test
mov
gs
push
cld
adc
jno
sar
adc
sarl
add
xor
mov
into
shlb
sbb
jbe
in
or
stc
mov
add
arpl
lock
daa
loop
cmp
loop
add
icebp
lods
data16
or
lds
jp
lret
jne
scas
jo
outsl
adc
adc
mov
fidivl
enter
fimull
pushf
xchg
decb
add
lret
mov
adc
push
push
jg
jmp
int
pop
fistpl
adc
cwtl
xchg
movsb
push
mov
jb
push
pushf
mov
push
pusha
jl
lods
cmpsb
outsl
fs
push
cmc
nop
or
sbb
sar
icebp
jo
std
xchg
scas
insl
mov
loope
cmp
jbe
enter
dec
xor
dec
adc
jl
mov
bound
or
fs
sbb
imul
dec
std
into
data16
mov
es
int
fidivrl
mov
mov
fldenv
mov
jbe
das
jmp
add
sub
in
mov
xchg
mov
bound
out
shll
jb
mov
popa
sub
jnp
adc
dec
mov
dec
xchg
aas
data16
stos
xchg
mov
dec
jnp
or
outsl
adc
or
adc
or
xchg
clc
pop
push
adc
inc
or
mov
cmp
inc
dec
mov
dec
call
nop
xlat
push
adc
ret
mov
pop
cmpsb
das
jbe
or
cmp
cmpl
test
cwtl
jmp
mov
call
push
push
in
outsb
push
test
stos
push
mov
mov
test
xor
fiaddl
shll
or
ljmp
adc
cmc
into
arpl
mov
jnp
mov
js
push
sarb
sbb
mov
dec
pop
daa
pop
adc
or
lret
push
loope
dec
rcrl
add
xchg
push
ret
call
aaa
push
fldenv
fs
scas
xor
or
sub
mov
movsb
rcrl
cmp
mov
loop
loope
pop
dec
sbb
jg
mov
sub
cld
loopne
jmp
into
push
cli
pop
lcall
stc
loopne
fnstcw
push
and
gs
lcall
es
mov
pop
arpl
lods
sub
pop
imul
adc
scas
and
cmp
arpl
pop
or
in
jecxz
aas
enter
mov
push
js
fadds
or
and
add
pop
test
jno
into
lods
ds
in
lds
jne
jns
adc
jns
xchg
into
xlat
js
sti
fdiv
testb
push
xorb
sbb
pop
sub
lds
pop
cwtl
mov
dec
cmc
sti
fs
fistpl
notl
mov
pop
stc
mov
lods
pop
xlat
add
imul
fisubrl
xor
cmp
sbb
mov
cmpsb
mov
cli
loopne
or
outsb
add
xor
pop
pmaddwd
jbe
cmp
or
cltd
xchg
mov
push
add
pop
jecxz
mov
outsb
add
mov
jle
xchg
cmp
ja
sahf
loop
sub
in
and
pop
out
xchg
je
je
jbe
ret
lret
jp
ss
xor
jbe
xchg
push
add
fcmovb
sub
sub
pop
in
lods
jg
xchg
iret
sbb
xchg
add
jle
ljmp
inc
cmpsb
cwtl
aaa
jge
loop
rol
mov
sbb
out
jne
mov
lods
lcall
clc
dec
xlat
in
out
xor
fidivs
popa
orb
adc
test
lahf
mov
inc
lret
or
gs
rcll
loopne
jae
and
adc
mov
fldl
push
adc
jne
push
push
cmp
xchg
inc
and
hlt
loope
xchg
pop
fidivl
xchg
dec
outsl
mov
cmc
lret
push
jb
pop
push
aaa
ret
bound
cwtl
xchg
bound
mov
mov
inc
js
insb
aas
cmp
stc
add
adc
lods
lahf
mov
insl
cmp
testl
and
dec
dec
movsl
and
mov
cmp
mov
jb
mov
sub
cmp
mov
test
and
and
es
loope
call
rcrb
outsl
mul
cmpsb
sub
inc
in
mov
cmpsl
sub
mov
sbb
jae
mov
mov
jecxz
xorl
push
iret
das
es
arpl
sbb
test
aam
ss
jns
push
fadd
and
sbb
dec
cs
xchg
jp
cmpsl
rcll
push
add
rcrb
lret
enter
out
jge
push
loope
mov
fisttpll
sbb
out
mov
xlat
subb
mov
std
adc
push
in
pop
pusha
lret
ja
cmc
test
iret
aam
xor
loopne
je
dec
mov
aam
and
cli
mov
pop
inc
xchg
daa
roll
push
cmpsl
lret
inc
fs
test
cld
sbbb
push
js
loope
int3
stos
mov
test
addr16
data16
cs
in
outsl
cmp
int3
std
outsb
add
pop
mov
mov
jno
inc
jecxz
inc
jmp
or
lcall
lods
xchg
cmp
call
sbb
push
daa
push
movb
jno
jge
jb
icebp
jno
aaa
in
mov
xchg
fndisi(8087
sub
inc
pop
lret
hlt
fldl2e
dec
fdivl
pop
sub
daa
or
shrl
cmp
out
lret
push
rcrl
cmp
mov
push
es
mov
and
imul
fiadds
sbb
lcall
jne
nop
outsb
cmp
push
int3
out
inc
pop
sti
test
cwtl
in
mov
push
pusha
or
pop
inc
mov
jbe
insb
push
cs
enter
aas
jae
test
out
xor
cmpsb
cmpsl
lods
adc
bound
ret
mov
mov
mov
cld
mov
mov
adc
insb
sbb
addb
mov
fidivl
jl
jnp
push
cmp
add
xor
dec
int3
cmp
in
xchg
jle
lock
jb
mov
xor
stc
in
leave
xchg
pop
hlt
out
movsb
lret
in
push
sbb
aad
mov
dec
sbb
cwtl
cmp
push
popf
mov
sbb
jae
pushf
inc
rol
xchg
sub
in
sub
outsl
or
sub
mov
mov
inc
adc
jnp
mov
mov
test
das
fsubrs
mov
hlt
adc
mov
or
test
sahf
in
sbbl
or
sbb
and
sub
push
insl
bound
cmp
fnsave
jae
add
ss
stos
cmp
gs
mov
jno
or
and
sbb
cmp
xor
sub
adc
cmp
add
mov
std
jne
xor
xchg
repz
and
push
stc
xchg
fisubrs
jnp
jae
jno
mov
into
cmp
dec
bound
aam
in
or
or
xchg
clc
sahf
push
jecxz
mov
push
nop
adc
lret
dec
push
xchg
jp
or
adc
sbb
fimull
fsubr
rorb
les
and
mov
arpl
xchg
out
mov
stos
insl
or
test
lods
push
ss
xchg
sub
ljmp
sub
dec
push
loop
imul
push
in
xor
rorl
push
pop
and
mov
push
dec
and
cwtl
jecxz
das
ja
push
mov
in
adcb
addr16
fadds
mov
cmp
int3
sti
xlat
push
rcr
mov
cld
mov
out
cwtl
into
out
cmp
xor
cwtl
ficompl
movsb
leave
ffree
inc
mov
in
imul
dec
inc
add
push
dec
lret
dec
xchg
fldt
push
xlat
dec
les
repz
push
cmp
add
ss
mov
inc
shll
add
es
repnz
imul
push
jo
test
push
jns
repz
leave
pop
das
inc
shlb
mov
jle
mov
jmp
jb
sbbl
in
xchg
rcl
xor
clc
repz
cli
dec
mov
pop
aas
js
call
add
popf
sub
add
jle
jg
addl
jmp
inc
pop
out
mov
ret
mov
enter
aaa
aam
test
inc
andl
xchg
int3
adc
mov
std
in
mov
push
ficoml
dec
cltd
xchg
gs
sbbl
clc
mov
dec
data16
addr16
shrl
pushf
jae
nop
adc
inc
in
push
mov
dec
std
pop
outsb
cmpsb
pop
std
das
inc
cwtl
lods
xchg
adc
adc
mov
pop
nop
setae
push
add
xor
push
xlat
dec
jb
subl
in
sti
filds
cmp
and
lcall
mov
xchg
xchg
daa
cmpsb
sbb
jmp
dec
dec
lret
call
sti
ret
insb
inc
and
pushf
cmp
cmc
out
or
ret
outsb
clc
push
pusha
adcl
sbb
mov
loop
fiadds
inc
test
mov
sub
sub
sub
imul
jno
fisubrs
and
pop
jl
test
nop
inc
sbb
inc
fbld
sbb
lcall
in
mov
data16
inc
in
pop
sbb
leave
test
inc
pop
sbb
enter
xchg
sbb
jo
adc
mov
scas
inc
pop
push
stc
cmp
adc
scas
mov
jbe
in
nop
test
lahf
adc
icebp
orb
stc
push
push
pop
mov
sti
cltd
lds
es
insb
sarl
addl
or
jo
popf
pop
push
and
or
adc
mov
mov
aas
add
and
xchg
repnz
fcom
cmp
scas
mov
pop
imul
cmc
hlt
lret
out
imul
test
out
pop
and
js
cmp
mov
xchg
outsl
and
add
jns
sbbb
ror
jge
nop
icebp
jae
mov
lds
jmp
fmull
fs
sbb
mov
sub
dec
push
jnp
adc
jno
repz
pop
fcmovnb
ror
jno
pusha
xor
or
lahf
push
xlat
add
lcall
adc
add
sbb
insb
cmp
arpl
and
cmp
pop
movsl
addb
fscale
xchg
dec
adc
filds
inc
cmp
add
jl
daa
jne
rol
jmp
test
fxch
daa
add
and
ds
mov
mov
in
lcall
mov
popf
cs
in
push
mov
xchg
push
mov
mov
imul
push
fldcw
lds
cmp
div
push
dec
movsl
in
mov
cmp
sub
pop
jmp
jnp
or
adc
lret
bound
ficoml
arpl
ss
cmp
push
lds
mov
jns
mov
rcr
movsl
inc
inc
les
xchg
lea
mov
mov
cmp
mov
shl
movsl
popa
dec
jmp
int3
pusha
out
xor
xor
xchg
mov
or
loopne
and
adc
add
xchg
mov
sub
enter
push
push
ja
aas
out
or
lock
pop
insb
xchg
sar
in
push
mov
inc
orb
mov
rcrl
cmpsl
mov
jo
dec
add
pop
xor
jns
and
out
jo
loope
lods
jge
sub
shrb
sti
jb
inc
pop
add
mov
sahf
aam
push
outsb
les
or
inc
icebp
fidivrl
cmp
imul
push
addr16
pop
cwtl
ret
mov
push
test
xchg
bound
je
cmpsl
sub
rcrb
mov
lahf
push
frstor
arpl
sahf
push
test
arpl
popl
outsb
push
andl
xchg
hlt
cmpsl
jle,pt
in
xchg
popa
xor
fdivl
sbb
or
sub
imul
xor
fucomi
xacquire
mov
xchg
mov
xchg
and
stos
adc
pop
fdivl
sub
fists
add
es
jle
push
adc
call
sbb
int
js
mov
rol
mulb
add
test
orb
std
loop
and
inc
mov
pop
rol
jb
scas
lret
shlb
stos
sbb
lahf
inc
loope
out
xor
inc
mov
lds
mov
jnp
cmp
loop
lea
lods
mov
stos
xlat
sti
mov
cwtl
cmp
jg
fidivl
xchg
inc
daa
repnz
jecxz
out
lcall
mov
cmp
notl
mov
in
pop
push
push
loope
cmp
cmp
lock
mov
adc
pop
or
or
cmpsb
cld
mov
push
or
xchg
jne
fdivl
jmp
jg
add
sub
or
jae
pop
or
outsl
movsb
ficomps
loopne
outsl
sbb
adc
ljmp
mov
or
enter
xchg
inc
fcomp
lret
push
int
adc
aad
jns
and
dec
add
insb
jge
rorl
cmc
sub
enter
int
pop
and
pushf
adc
xchg
fs
pop
xor
pusha
popa
mov
cmpsl
jmp
cmp
aas
pop
xchg
push
add
push
push
pop
cs
mov
call
outsb
je
push
pop
jg
scas
rcrb
mov
in
lret
jb
jb
mov
test
pop
inc
popf
divl
push
xchg
mov
xchg
sbb
loope
mov
push
cwtl
out
adc
outsl
aad
adc
loop
cld
push
popa
sarl
or
shll
sahf
test
jo
add
add
mov
hlt
les
hlt
or
ss
sbb
ret
lods
inc
jg
test
movswl
cltd
adc
mov
push
mov
aam
shll
ja
fs
fidivrs
out
inc
leave
call
sub
insb
rolb
jle
movsb
js
mov
rcrl
dec
ret
lcall
cs
fwait
jmp
aad
test
add
pop
mov
cmc
sahf
jns
mov
icebp
dec
mov
mov
push
data16
test
in
push
cltd
xor
sti
xor
and
adc
pop
mov
inc
or
jp
add
xchg
sahf
fmuls
jmp
test
icebp
adc
lods
repnz
lds
cmp
mov
divl
inc
and
in
test
psrlq
cmpsb
sti
mov
pop
mov
dec
push
push
adc
call
push
mov
aas
cmp
pusha
jmp
adcb
inc
cmp
and
push
fucomp
sub
scas
sbb
xchg
popf
loop
jge
fsubrs
mov
test
cltd
in
adc
and
outsl
or
je
push
aaa
pusha
aad
xchg
pop
js
push
xlat
ja
adc
or
testl
pextrw
andl
dec
add
loope
lret
jge
orl
or
mov
sbb
out
adc
pop
sahf
xor
aas
je
mov
cmp
unpckhps
inc
mov
sahf
ja
xchg
arpl
mov
xchg
pop
push
pop
dec
jg
sti
out
and
jae
mov
subb
push
or
lahf
mov
inc
mov
nop
jmp
jns
subb
out
outsb
or
out
stc
push
outsb
imul
xlat
enter
adc
adc
xchg
in
dec
inc
sti
xchg
ret
inc
clc
inc
les
inc
jge
leave
lock
cmp
test
adc
pop
scas
out
sub
cmp
xlat
es
mov
mov
mov
dec
in
dec
pop
sbb
inc
dec
mov
pushf
dec
pushf
jle
les
xchg
aaa
mov
cltd
mov
push
xchg
add
test
ret
insb
xor
fsts
xlat
das
sub
loop
push
jmp
fwait
lock
xchg
leavew
xchg
sbb
je
mov
aam
ss
popa
cmp
dec
dec
in
dec
fadds
add
test
inc
jns
insb
orb
mov
mov
and
or
adc
shrb
jmp
sbb
jno
xchg
in
ds
pusha
inc
adc
push
jo
sti
aad
insl
stos
imul
push
xlat
push
ja
pop
int
imul
mov
sahf
notb
js
dec
dec
mov
lret
fstpl
cwtl
lret
nop
sbb
movsb
xor
ret
mov
xchg
cltd
and
jl
mov
in
jle
icebp
xabort
into
mov
fsts
jns
ljmpw
dec
imul
mov
inc
adc
add
ficoms
test
ja
pop
faddl
mov
sarl
add
mov
in
cmp
sub
xchg
pop
pop
fists
sbb
dec
mov
xchg
mov
add
out
xor
test
ret
mul
jnp
mov
adc
push
jg
shlb
mov
pop
inc
fdivs
and
xlat
les
cli
out
cmp
out
xor
push
leave
sub
xchg
test
in
mov
or
cmp
mov
mov
movsb
jmp
cmp
scas
mov
ror
sub
inc
pop
jmp
adcb
lods
mov
testb
jmp
cmc
or
pop
push
shlb
dec
ja
jo,pt
xchg
test
adcb
notl
inc
jbe
jge
mov
ja
cmp
into
dec
sub
out
xor
int
sbb
and
pop
xchg
jo
sahf
and
dec
arpl
lahf
mov
ds
pop
mov
adc
xchg
test
pop
mov
jns
and
mov
lahf
mov
xor
adc
nop
cmp
dec
loope
mov
mov
pop
or
xlat
lds
popf
mov
cs
test
cltd
repz
mov
aas
cli
fsubp
ret
ljmp
das
lahf
in
mov
or
in
cmp
cs
lea
pop
cs
xchg
daa
inc
and
scas
test
outsb
int
mov
mov
xor
push
cs
fidivrs
int3
inc
xchg
push
sub
loopne
xorb
cmp
rcrb
cmc
aam
inc
cmp
out
les
lds
negl
mov
sub
xchg
stos
sbb
add
in
jmp
dec
arpl
xchg
aam
push
repz
mov
das
mov
xchg
orb
lcall
cmc
mov
cwtl
pushl
imul
addb
stos
mov
ficompl
rcrb
repz
repnz
xor
imul
mov
and
dec
mov
pop
sbb
mov
sub
xlat
adc
add
push
mov
add
in
and
jecxz
clc
jp
cmp
push
or
outsl
jbe
imulb
pop
mov
test
sbb
mov
mov
scas
add
push
push
idivl
jmp
xchg
jbe
cmp
daa
jb
jmp
jnp
arpl
push
in
adc
stos
ret
dec
ret
mov
gs
sahf
add
movsw
outsb
fnstcw
cmpsl
push
sbb
push
fdivr
add
cmpsb
ja
test
repz
ljmp
mov
scas
in
sbb
push
mov
jo
cmpsb
jl
pop
mov
pop
sbbb
nop
insb
sub
pop
jecxz
inc
les
popf
adc
arpl
and
sbb
cmp
daa
xchg
add
mov
idivb
inc
push
xchg
mov
lret
sub
mov
inc
mov
mov
inc
xor
lcall
push
xchg
mov
mov
or
xlat
mov
repnz
fistl
cmp
gs
or
sub
jge
lret
sti
and
cld
add
xchg
and
popa
pop
or
xchg
pop
movsl
pop
mov
or
iret
xchg
cltd
sub
mov
int
pop
push
add
das
mov
es
mov
int3
jnp
repnz
xor
jmp
aad
out
lcall
inc
dec
xorl
das
data16
sti
xchg
adc
in
aam
push
jecxz
shl
sub
repz
outsb
out
into
xchg
or
in
test
movsl
popa
pop
imull
test
push
sub
popf
inc
xchg
nop
jnp
mov
lret
jge
sbb
data16
fucomp
lea
leave
or
adc
mov
outsb
add
ss
xlat
sti
xchg
inc
xor
sub
mov
in
fs
mov
mov
out
mov
dec
mov
cmpsb
insl
imul
andl
and
loop
and
imull
add
mov
aad
sahf
adc
xor
mov
mov
xor
xlat
dec
adc
xchg
inc
stos
test
dec
leave
ret
repnz
or
nop
mov
ss
xchg
cs
aas
jmp
and
and
jmp
frstor
lock
out
pop
sbb
push
aam
testl
lea
test
es
adc
divl
sbb
jnp
xorb
stos
sbb
mov
hlt
lods
jbe
rcr
pop
inc
adc
fimull
faddp
ficomps
data16
test
mov
jg
add
sbb
push
mov
sbbb
mov
xchg
enter
sti
inc
pop
cs
imulb
adc
movsl
outsl
xor
dec
or
push
pushf
sti
mov
push
add
out
cmpsb
xchg
inc
pop
shll
adc
mov
mov
push
adcl
lea
in
jl
sub
test
mov
sub
les
sbb
hlt
or
sbbl
xchg
int3
imul
std
jns
and
in
mov
add
ja
dec
outsb
mov
push
mov
cmp
mov
movsb
movsl
mov
scas
mov
in
adc
bound
xchg
jmp
push
mov
stos
mov
bsf
add
ficoms
sub
lock
outsb
bound
mov
mov
movsl
xchg
shlb
sbb
loope
addr16
rcrl
sub
or
jne
jns
mov
ds
ja
jne
into
fstpt
mov
psubusw
lret
cmp
pop
out
cmp
inc
pop
in
aaa
adc
cmp
outsb
push
jmp
out
mov
popa
inc
fidivrl
xchg
jmp
mov
lcall
cmpsl
mov
enter
mov
dec
andl
jmp
pop
or
test
mov
push
cmp
mov
cmp
fidivrs
push
loopne
subl
xor
adcb
js
in
sbb
mov
xchg
aas
sahf
les
cmc
bound
push
mov
dec
lds
xor
mov
xchg
pinsrw
leave
ret
xor
xor
mov
inc
ja
arpl
mov
ja
dec
negl
sbb
mov
imul
or
dec
inc
cmp
movb
push
fstps
scas
xor
cli
outsb
daa
add
xchg
fisttpl
inc
in
rorb
imul
arpl
rcll
jl
ds
imul
aas
mov
fs
mov
fisttpll
jle
shrb
adc
fdivp
icebp
cmp
test
dec
sti
subb
mov
dec
in
adc
mov
negb
add
das
or
push
fldl
lahf
dec
jl
mov
mov
int3
imul
jg
sub
fs
hlt
fldt
add
dec
sbb
xor
stc
inc
pop
in
lods
out
cmp
scas
stos
addb
sti
les
mov
outsl
andl
inc
adc
add
sub
imul
dec
lahf
and
push
sbb
fcmovnbe
into
loop
hlt
icebp
cvtpi2ps
cltd
testl
jge
xchg
pop
jmp
push
adc
fdivrl
inc
xchg
in
dec
pushf
cwtl
sub
add
jns
rolb
mov
xor
xchg
or
mov
test
dec
mov
push
cmp
mov
pop
out
out
mov
shlb
jno
cli
pop
adcb
addl
fsubl
dec
mov
test
and
xor
adc
in
and
or
rol
and
and
outsb
add
xor
jl
daa
pop
jbe
inc
pop
adc
pop
out
mov
or
cwtl
stos
mov
sbb
jns
and
mov
and
add
call
mov
mov
fs
pop
xchg
dec
mov
mov
push
sub
jbe
cmc
inc
lods
lea
call
dec
hlt
sub
inc
lods
sti
xor
stc
pop
test
aam
or
and
test
movsl
out
ja
lcall
inc
mov
hlt
sbb
in
adc
inc
es
mov
mov
aad
cltd
movsl
dec
scas
ret
mov
mov
push
mov
sub
and
shrl
jle
and
call
call
dec
xchg
ljmp
and
xor
add
out
and
jns
dec
pop
lret
and
add
cmp
and
or
mov
pop
aad
call
and
xchg
sub
int
inc
add
push
aaa
jl
adc
cmpsl
popf
fdivrs
mov
imul
cmp
pop
insb
push
stc
cltd
nop
mov
add
call
cmpb
lock
mov
jge
mov
mov
jge
ja
dec
lea
lret
bound
cmp
xchg
and
sub
fimuls
ret
cs
cmpb
pusha
loop
sub
mov
xor
or
add
fdivrs
sahf
xor
fmuls
add
jge
or
push
les
cmp
inc
ja
repnz
ja
in
pusha
xor
add
aas
sbb
out
es
cmp
or
push
dec
rcrb
ret
jbe
inc
sub
cmp
fucomp
add
mov
dec
or
andl
pop
out
sbb
stos
pop
xchg
push
inc
insl
xor
or
lock
roll
popa
jbe
leave
push
xlat
dec
add
and
mov
fwait
sbb
mov
and
scas
inc
lahf
jp
repnz
jns
pop
insb
fbstp
and
std
jmp
pop
mov
pop
fnsave
or
pusha
push
dec
lock
mov
clc
or
cltd
testl
insb
or
icebp
and
ja
pop
mov
xbegin
fwait
enter
sub
popf
outsb
jnp
jecxz
mov
jo
in
push
divl
les
int
ljmp
inc
pop
in
inc
lock
cltd
cltd
cwtl
jno
sarb
adc
mov
xor
pop
dec
or
aaa
mov
and
mov
mov
dec
and
add
mov
imul
xor
int
xchg
mov
jge
jmp
test
shlb
pop
call
inc
leave
inc
aam
call
outsb
jge
lcall
movl
xchg
push
xchg
pop
iret
mov
pop
in
jne
outsl
mov
in
mov
xor
mov
add
out
jo
lcall
dec
loope
pusha
incl
dec
bound
cmc
and
add
sahf
push
jle
cmc
ret
dec
in
imul
sub
sbb
lods
fdiv
int
jb
cmp
emms
sahf
cld
mov
xchg
mov
add
mov
adc
pop
int
push
das
fstp
xchg
arpl
enter
inc
das
mov
lret
jp
lods
pop
mov
aad
sbb
mov
or
into
in
xchg
mov
cmc
dec
cmp
jns
in
push
aam
std
pop
jo
push
sub
in
movsl
dec
lahf
add
cli
jns
leave
mov
dec
push
popa
out
stc
mov
cmpsl
inc
fsubr
xchg
pop
test
xchg
jg
mov
push
or
arpl
pop
nop
push
rolb
popa
xchg
cmp
xor
mov
in
mov
and
push
aas
jle
pop
in
out
push
pop
pop
xchg
ljmp
sbb
and
mov
stos
repz
xor
sbb
pusha
jno
xor
adc
pop
into
jae
jg
mov
nop
loop
fsubrs
in
dec
and
xchg
pop
shrl
nop
sub
hlt
dec
outsb
mov
inc
stos
sti
test
inc
jmp
adc
jp
stc
mov
je
movsl
lds
int
movsb
loope
mov
xchg
xor
jge
bound
inc
sub
lds
outsl
xor
adc
mov
aad
pushf
ja
push
bound
push
fsubp
fiadds
xor
into
mov
sub
lods
fadds
dec
ljmp
push
mov
jg
sbb
loopne
aas
jnp
leave
cmp
es
inc
fcoml
inc
cltd
movsb
cmp
mov
lahf
pop
pushf
test
int
xchg
jmp
nop
pop
rcr
popa
sub
fbstp
sbb
push
pop
loop
add
push
loope
mov
and
mov
push
mov
add
or
mov
xchg
and
ljmp
enter
mov
int
dec
ss
push
sbb
idivl
ret
mov
xor
bound
imul
les
cmpsb
scas
mov
pop
xchg
cmpsb
xchg
daa
test
push
call
adc
pop
dec
loope
scas
mov
in
adc
jb
push
add
loopne
adc
or
or
push
inc
psubb
inc
and
leave
mov
dec
push
mov
xorb
push
aaa
ds
pop
shll
xor
xor
sub
pop
out
push
jbe
mov
int
clc
stos
jmp
sub
dec
movsb
and
std
mov
xor
sbb
ljmp
mov
add
ffree
mov
add
jp
scas
rorl
add
fwait
mov
and
adc
xor
dec
dec
dec
test
dec
xlat
sbb
fucomp
lahf
imul
fwait
pop
insb
mov
adc
mov
or
sub
push
lcall
ljmp
lret
xor
inc
dec
or
sbb
xlat
inc
mov
push
lcall
call
add
lock
mov
cltd
cmp
dec
jne
aam
fwait
add
jnp
cmp
dec
clc
or
mov
jge
mov
aad
imul
movsb
movsb
scas
bound
jo
clc
rcr
cmp
shlb
stc
repnz
inc
gs
addl
lock
cmp
lret
in
fisubl
jae
je
subl
dec
in
or
mov
out
cmpb
mov
jns
dec
fwait
movzbl
pop
mov
stos
repnz
fstpt
vmovups
call
cli
mov
nop
divl
pop
daa
cmp
rcl
sbb
ljmp
test
mov
shlb
fldenv
mov
enter
pushf
pop
mov
pop
sbb
sbb
or
adc
sub
push
adc
jp
dec
cld
add
pop
add
ret
aas
mov
and
inc
xchg
xchg
test
cmpb
repnz
psubsb
lret
sbb
roll
mov
lods
inc
fists
out
pop
insl
mov
xor
xchg
pop
aad
aam
dec
jle
push
mov
push
popf
nop
or
add
ficompl
or
xor
mov
xchg
sub
push
xor
sbb
adc
sbb
pop
arpl
scas
insl
ret
inc
in
iret
adc
mov
add
and
xor
outsb
dec
push
jae
cs
je
imul
ffree
popa
mov
jno
in
movsb
push
pop
lret
mov
xchg
nop
shlb
push
test
shlb
and
les
icebp
add
ja
sbb
mov
daa
dec
fiaddl
push
icebp
data16
mov
rcll
test
fsub
lock
jns
sub
jne
lods
xchg
cltd
and
sub
stos
ss
rcl
mov
inc
push
imul
fbstp
imul
add
cmp
sbb
movsl
and
mov
iret
sub
fstpl
mov
int
mov
imul
cltd
xor
jnp
mov
jns
mov
adc
sub
and
mov
mov
fiadds
sub
cltd
dec
xor
test
sbb
out
imul
sbb
xchg
sahf
subb
and
jnp
adc
sub
cmpsl
aam
mov
dec
addr16
mov
cmp
stos
mov
rcl
pop
push
aad
test
aaa
inc
dec
mov
sbb
bound
jne
add
test
sbb
jb
inc
jns
add
ffree
les
xor
jno
cs
adc
and
repnz
filds
mov
xchg
je
je
pop
mov
add
push
fdivrl
or
mov
xlat
fcomps
into
adc
jae
pop
fldln2
test
mov
jb
pop
mov
rcll
jecxz
xchg
loope
jl
xchg
push
ljmp
push
daa
mov
hlt
add
dec
sub
add
orl
or
sbb
cwtl
ret
test
insl
out
shr
xchg
push
ja
cmp
mov
pop
push
rcll
push
sti
lea
and
cmp
lods
mov
lea
mov
push
adc
mov
aas
pusha
rclb
mov
lods
jbe
push
jmp
je
enter
sub
cmp
mov
arpl
rorb
cld
inc
xchg
and
shl
jecxz
andl
add
loop
adc
adc
les
inc
add
adc
mov
sar
ljmp
fstp
mov
mov
push
sbb
jbe
sub
jae
mov
jne
inc
das
xor
rorl
fbstp
mov
jge
adc
pop
das
fstpt
fbstp
fildll
cmp
push
call
pop
fmul
xor
popf
mov
push
stos
pop
psrlq
int3
dec
pop
mov
stos
inc
bound
mov
ja
iret
outsb
or
mov
scas
test
inc
pop
dec
in
sbbb
jns
fldt
or
xor
sbb
stos
scas
leave
sbb
fidivrs
or
mov
pop
pop
in
add
pop
pop
jno
lods
dec
mov
sub
pop
pop
or
adc
sub
aaa
cmpb
adc
mov
lcall
movsb
mov
repnz
negb
insl
imulb
sbb
inc
jg
rcrl
inc
outsb
rclb
jge
dec
lea
sarl
sbb
ja
repz
xchg
arpl
stos
mov
jg
scas
dec
cwtl
mov
xor
xchg
mov
cmpsl
add
mov
and
in
fs
iret
sbbb
lods
fildl
aam
iret
sti
pusha
call
subl
sub
lock
push
fptan
js
xchg
push
pop
orl
sub
add
push
push
loope
add
adc
sub
sub
fldl
lods
out
cmp
push
pop
inc
test
out
sbb
stc
push
pop
mov
test
fcom
add
scas
dec
sub
inc
pop
or
icebp
push
adc
fwait
ret
xchg
sti
push
dec
push
scas
adc
stc
test
test
jmp
pop
jns
sub
movsb
pop
add
int3
lahf
cmp
mov
ror
push
fcomps
test
cmp
xchg
repnz
insl
mul
fldt
mov
push
mov
std
jmp
insb
popa
and
push
addl
fcmovu
call
loopne
pop
pop
mov
xchg
fisubl
rclb
pop
inc
mov
jno
pop
mov
lret
arpl
fcoms
incb
mov
pushf
movsl
lods
out
mov
loope
addr16
out
test
aaa
mov
jl
mov
or
mov
hlt
inc
push
cs
cmp
push
aad
xchg
and
dec
lds
adc
repnz
call
pop
int3
adc
xorb
dec
jle
jo
fs
fistps
xchg
movsb
daa
mov
les
pop
adc
stc
aam
ljmp
dec
xor
jge
test
ds
outsl
mov
repz
add
push
adc
xchg
icebp
fiaddl
dec
jle
cmp
rolb
mov
into
inc
js
enter
push
sti
xor
xchg
into
mov
cmp
push
in
jbe
add
add
js
sbb
daa
and
call
inc
or
xlat
xchg
jmp
mov
test
ds
loopne
insl
xor
pusha
popf
jecxz
cs
stos
dec
sub
jecxz
xchg
xchg
in
mov
mov
pop
nop
cmp
stc
ret
popf
clc
and
icebp
ficompl
out
ss
daa
in
sarl
test
repnz
xchg
enter
xchg
pop
add
in
repz
or
push
loopne
in
xor
and
and
enter
sub
rorl
push
xor
bound
loope
mov
stos
mov
insb
adc
mov
inc
push
je
adc
adc
and
in
adc
in
scas
repz
loop
pop
dec
repz
fstp
cli
and
xorb
fcoms
sbb
pop
das
sti
sbb
ret
or
arpl
rorb
ret
mov
rcrl
inc
test
dec
rorb
push
test
pop
arpl
rolb
mov
and
ja
stos
pop
mov
int3
dec
insl
addb
mov
mov
in
push
pop
mov
dec
shlb
js
pushf
mov
sub
and
pop
or
dec
adcb
xorps
pop
mov
push
pop
clc
jbe
mov
mov
jae
lret
je
push
push
dec
sti
aam
fsubs
and
mov
das
ss
xlat
push
xor
push
jbe
sub
idivb
mov
ret
mov
cmp
cli
int
sub
mov
mov
sub
push
xor
sub
add
addb
shl
out
jp
lret
push
and
cli
dec
push
mov
mov
jecxz
mov
or
in
pop
mov
test
mov
push
scas
shlb
cmp
jmp
rolb
mov
jbe
cmc
insl
fdivrl
push
dec
ss
pop
stos
lock
jmp
iret
dec
push
ret
insb
cmp
clc
nop
addr16
xor
mov
in
sbbb
sbb
xor
sub
fcomi
mov
ret
xor
push
cmpsl
mov
sub
stos
inc
mov
sub
inc
sbb
xor
dec
aaa
sub
dec
sbb
lock
lods
mov
pop
or
push
xor
mov
aas
inc
sbb
adc
cmpsb
inc
add
out
out
adc
jg
cld
fadds
cmp
inc
cli
daa
sbb
in
mov
bound
sti
or
dec
xlat
xchg
mov
aam
mov
loopne
mov
push
fs
push
push
stc
mov
add
mov
lea
ljmp
mov
clc
sub
jbe
mov
fistps
dec
add
lahf
sub
je
int
xchg
cli
mov
inc
nop
xchg
xchg
stos
addr16
adc
add
js
je
sbb
cwtl
or
repz
lret
mov
vmwrite
cmpsl
and
cld
jp
dec
imul
mov
jno
dec
loope
test
and
out
mov
mov
outsb
mov
adcl
mov
jo
sub
mov
test
nop
sub
imul
lea
jnp
jnp
pop
sbb
mov
pop
arpl
out
outsl
jae
mov
fwait
mull
int3
and
aam
movsl
outsl
push
add
sub
mov
xlat
pop
ficompl
cvtpi2ps
out
je
notb
aam
adc
inc
std
jno
std
jns
iret
ds
xor
mov
jl
add
fisttpl
popf
add
jecxz
jno
sbb
jecxz
fists
hlt
and
jl
sbb
jae
inc
fisttpll
pop
sub
cwtl
fwait
cwtl
jg
and
call
nop
mov
in
loop
xor
clflush
adc
icebp
sarl
std
adc
jb
xchg
dec
int
sbb
adc
jbe
test
push
shrl
mov
cmp
popa
mov
sti
mov
jle
sub
int3
cld
dec
mov
add
lods
ss
fmull
sub
adc
lods
pop
fildl
mov
pop
mov
or
adc
add
test
add
scas
inc
iret
dec
pop
pushf
cmpsb
ftst
popf
in
scas
mov
xor
xchg
push
loopne
jbe
mov
ficoml
pop
pop
dec
push
pushf
or
add
stos
add
pop
out
xchg
dec
js
loope
jmp
das
xor
or
imul
add
mov
fisubrl
xchg
push
popa
xchg
daa
lret
jp
jae
stc
shrl
mov
push
rcrl
ret
into
repz
rorl
sub
ds
idivl
inc
cmp
movsl
xchg
xor
addr16
pop
or
inc
fcomps
lcall
dec
dec
mov
mov
int3
jg
pop
jecxz
sbb
imul
sti
out
cmpsb
out
repz
mov
push
loopne
pop
in
xchg
jmp
jno
mov
repz
dec
adc
popa
fs
cmpb
or
ret
and
daa
jp
inc
and
sbb
push
cltd
fidivl
test
rcrl
std
xchg
sti
push
adc
pop
add
xchg
sub
loopne
add
xchg
push
sub
daa
cmp
popa
lock
pushf
lock
addl
in
xor
repnz
mov
dec
dec
daa
into
stc
outsb
out
xor
mov
mov
pop
or
in
cld
stos
or
adc
out
insb
test
mov
adc
movsb
dec
cwtl
and
dec
dec
mov
push
xchg
or
mov
sbb
sub
fs
mov
test
pop
loopne
arpl
movb
shll
pmulhw
repz
cmp
sbbb
sarl
pop
lea
xchg
sbb
lret
push
int
int
aaa
xchg
mov
dec
xor
mov
push
movsl
notb
xor
jno
das
scas
in
mov
cltd
stos
inc
jmp
fwait
into
push
adc
and
hlt
dec
jns
or
xchg
jp
add
pusha
inc
and
push
outsb
je,pn
add
pushf
cli
dec
cmp
lock
sbb
sbb
add
mov
xchg
mov
sub
ret
jmp
mov
xor
xchg
xor
mov
push
stos
jmp
sub
mov
mov
das
scas
scas
test
movsl
adc
sbb
mov
mov
cmp
dec
test
jle
push
lahf
adc
jmp
popf
jb
sbb
mov
pop
push
out
std
jb
fdivs
pop
fsubl
xchg
bswap
loop
mov
xchg
cmp
in
lea
dec
or
pushf
sub
cmp
lds
pop
inc
jnp
nop
in
push
mov
mov
and
jmp
pushf
xchg
repnz
jmp
adc
cmpsb
js
sub
jle
icebp
js
stc
nop
mov
shlb
fcmovb
push
xlat
add
popf
sub
cs
icebp
sti
dec
lret
sti
test
cli
lret
push
jge
fsubr
sahf
xor
pop
ljmp
setg
icebp
and
xchg
fstl
mov
sarb
xchg
movsl
rol
push
scas
sub
push
mov
in
sbbb
cmp
out
jno
lcall
pop
fs
xor
mov
and
add
ss
add
mov
shlb
scas
jnp
pop
in
rolb
out
xor
jnp
int3
cmp
loop
sbb
mov
test
test
push
movsl
mov
dec
pop
sub
jnp
shrl
push
in
xchg
pop
lods
jo
jge
inc
cli
in
adc
mov
outsl
cmpsb
pushl
sbb
cmpb
xchg
add
cmp
mov
xchg
mov
sub
pop
jne
leave
std
jne
xchg
and
inc
sub
adc
test
stos
int
shrl
aad
cmp
pop
orb
negl
nop
or
test
loopne
mov
sub
cmp
jecxz
je
or
pop
je
mov
std
xlat
push
in
xor
les
das
lods
and
test
mov
les
sbb
imul
ja
test
in
rclb
dec
fwait
scas
push
loop
mov
out
shll
mov
repnz
lret
or
imul
dec
repnz
test
mov
mov
shrl
insb
jg
orl
int
mov
or
push
lret
outsl
jo
jb
inc
in
mov
stos
sub
scas
xchg
adc
sbb
mov
mov
test
scas
mul
aas
mov
and
mov
add
mov
jns
mov
in
into
addr16
dec
pop
dec
lods
fsubs
xchg
mov
mov
mov
call
push
mov
jg
cmp
scas
lea
int3
and
pop
sub
add
paddusb
dec
fsts
mov
call
mov
fdivrl
scas
adcl
sbb
inc
nop
add
rol
int3
inc
mov
push
sbb
lock
cs
sbb
sub
hlt
jne
cmp
mov
mov
sahf
dec
inc
push
fstp
arpl
adc
dec
push
lods
sahf
mov
cltd
jno
test
cmp
bound
bnd
and
dec
adc
push
daa
mov
mov
js
out
dec
jle
jne
jae
jns
xchg
jmp
jge
push
dec
ds
jo
push
mov
pop
or
int3
loop
or
cmp
inc
jg
jns
call
mov
in
add
dec
repz
nop
jge
mov
sub
sbb
popf
jne
jbe
jge
xchg
std
or
inc
mov
in
mov
negb
shlb
in
mov
out
sub
jno
rol
test
inc
arpl
je
ss
push
negl
scas
in
add
sub
add
dec
subb
xchg
cmpsb
mov
pop
fcompl
jae
add
cmp
push
xchg
push
push
test
push
daa
mov
cmpsb
sub
clc
xchg
lea
es
enter
test
xchg
sub
mov
xchg
add
mov
cmc
mov
sub
insb
or
arpl
cwtl
mov
pop
stos
gs
je
mov
mov
faddp
loope
test
xchg
icebp
sbb
lahf
mov
inc
incl
jmp
dec
push
cmpsl
mov
das
das
mov
mov
cmpsl
jo
aam
aad
adc
and
mov
icebp
xlat
fisttps
inc
mull
hlt
xor
pop
fs
and
cmp
inc
jno
add
and
test
lock
xlat
push
repnz
incl
adc
pushf
jno
xchg
push
mov
jne
jle
mov
daa
clc
sbb
and
je
jp
pop
ror
jge
test
add
mov
xchg
mov
pop
popa
xchg
stos
mov
inc
popf
lcall
push
and
pop
pop
jle
sbb
xor
cmp
fisttpll
movsb
imul
nop
xorl
pop
inc
inc
and
mov
xchg
xor
jmp
cmp
pop
into
mov
test
jne
lahf
rep
jae
cld
int3
jge
mov
daa
testb
jne
jg
mov
ret
xchg
cmp
lods
cltd
popa
dec
jno
arpl
int
jne
xchg
pop
or
mov
std
fnstsw
lock
mov
sub
adc
sub
push
add
sti
testb
daa
out
xchg
inc
es
mov
adc
shl
pop
popa
incl
xchg
sub
adc
push
fstps
bound
cli
setle
shl
cmpl
out
jae
add
pop
add
movsl
icebp
aas
cs
push
fwait
popa
sbb
dec
clc
or
sub
add
jnp
enter
mov
add
into
cwtl
loopne
cmp
outsl
mov
inc
adc
out
out
les
mov
rcrl
dec
stc
enter
lcall
test
add
popa
cmp
adc
bound
cmc
rcrb
ss
dec
inc
out
xorb
cltd
cmp
mov
lret
push
adcb
pop
dec
jle
cmp
sbb
fdivrs
fildl
adc
xchg
fnstsw
sub
dec
rolb
cmp
and
sarb
xor
add
jbe
call
or
mov
push
xchg
xchg
outsl
ljmp
xchg
popf
inc
pop
push
cmp
mov
push
inc
scas
aam
push
and
iret
incl
xlat
icebp
ffree
scas
push
push
mov
add
and
mov
jge
xor
cmp
sub
iret
fsubr
repnz
shll
cmp
in
sbb
shr
push
movsl
pop
jnp
or
jge
loope
mov
in
sub
ljmp
into
cmpsl
push
js
mov
xchg
cmp
notb
pushf
mov
in
push
stos
add
mov
and
pop
pop
xchg
test
dec
add
cmpb
mov
sbb
and
addb
cltd
notl
jecxz
aaa
int
xor
cmp
les
pop
shll
mov
sbb
sahf
pop
mov
pushf
xchg
mov
xor
dec
out
pinsrw
dec
pop
imul
mov
jnp
sti
or
adc
cmpsl
add
pop
shlb
jo
mov
jb
loope
movb
aas
push
es
pusha
ja
sbb
pop
dec
xchg
cld
loop
stos
lds
mov
or
mov
js
lock
fimuls
movsl
es
ficomps
rorb
in
divb
pop
mov
push
movsl
sahf
jae
pop
scas
mov
sub
outsl
repnz
stos
jl,pn
jb
ret
movsl
push
cmp
das
int3
xchg
mov
cltd
cli
jne
addr16
sarl
dec
leave
inc
dec
sbb
xchg
add
std
fadds
xchg
testl
pop
mov
or
sbb
cld
or
mov
push
mov
xchg
mov
daa
jb
and
xchg
dec
ret
lods
scas
dec
sbb
sahf
aaa
mov
shlb
add
sub
in
pop
inc
std
push
es
out
ffreep
mov
pop
data16
mov
lcall
xchg
ja
mov
push
xchg
jo
mov
das
adc
out
int
cs
inc
cmp
ss
adc
or
pop
jne
xor
sti
cwtl
jns
pop
inc
mov
hlt
lahf
lcall
outsb
push
and
lock
xchg
dec
xor
sbb
mov
cli
xchg
fsub
je
sahf
out
cld
iret
xor
lock
mov
mov
jb
int
out
xor
out
mov
aad
sub
ljmp
lds
sbb
in
push
cmc
popa
xchg
fiaddl
pop
add
sub
xor
pushf
add
in
add
pop
jno
xchg
mov
dec
les
mov
fstpl
loope
push
adc
xchg
cmp
mov
jmp
out
cmp
test
add
enter
or
and
xor
inc
mov
repz
lret
xchg
xchg
mov
popa
pop
xchg
insb
nop
adc
push
scas
lock
pop
adc
jno
insl
lods
std
adc
int3
mov
cmp
and
and
in
in
mov
mov
xor
mov
mov
dec
imul
lods
ror
mov
aaa
mov
or
or
sub
pop
jnp
xor
loope
mov
pop
adc
std
out
xor
mov
sub
leave
add
cli
mov
cwtl
shll
std
mov
test
or
rorb
in
jbe
insb
fwait
cltd
jb
fnsave
gs
ljmp
je
sub
pop
xchg
pop
nop
cmp
clc
push
sub
push
gs
inc
jnp
js
mov
add
bound
fiaddl
fistpll
xchg
jne
mov
hlt
jecxz
xrelease
dec
add
mov
imul
cmp
pop
movsl
push
and
adc
mov
ret
mov
dec
mov
dec
aam
sbb
and
inc
mov
pop
sub
mov
sub
inc
mov
sbbb
cmpb
pushf
pop
stc
sub
mov
aam
push
xor
sub
std
cwtl
stos
cmp
rol
push
sbb
ror
lret
jo
inc
mov
add
imul
mov
lret
scas
pusha
mov
lret
xchg
enter
out
add
loopne
rcrb
and
mov
sti
sbb
arpl
test
std
pop
pop
mov
leave
arpl
stos
divb
jle
inc
int3
sub
cmp
addr16
mov
lcall
leave
mov
clc
sub
inc
pop
les
dec
test
cli
stos
xchg
adc
cmp
ja,pt
test
and
cmc
aas
adc
and
inc
pop
dec
lods
inc
test
cmp
jb
jnp
lds
mov
mov
stos
decl
pop
ds
jle
mov
inc
sub
lds
jmp
push
xor
lods
add
sub
adc
int
in
dec
mov
cmp
jg
movsb
mov
pop
lcall
aad
pop
xor
mov
adc
sub
cwtl
sbbl
fs
jmp
inc
add
pop
aaa
sub
fistpll
shlb
movsl
arpl
repnz
add
cmp
jecxz
jp
movsl
not
cmc
or
mov
scas
inc
rcll
fwait
stc
xor
inc
shrl
sti
sub
out
adc
pop
test
add
xchg
xorl
push
inc
and
dec
jp
test
mov
cmp
mov
bound
inc
movsb
dec
adc
call
or
test
xor
push
xlat
stos
sarl
pop
or
jecxz
in
xchg
mov
adc
mov
adc
fldt
mov
std
jl
mov
stos
cltd
mov
scas
popf
loop
mov
jmp
lds
or
sbb
sbb
outsb
movsb
dec
ja
ret
add
mov
or
fcomi
push
jg
jg
xchg
sub
js
jecxz
test
in
loopne
jge
mov
fyl2x
sub
xor
aam
and
xor
add
out
mov
pop
cmp
xchg
aas
je
mov
push
sbb
xor
gs
fidivrs
push
in
xchg
add
adc
push
and
sbb
mov
divl
pop
rol
ss
xor
cs
pop
test
xchg
insl
fdivs
cmp
cmp
insl
dec
cwtl
or
pop
fbld
in
movsb
in
mov
imul
mov
xor
and
add
fsubr
cli
mov
ja
push
mov
lds
mov
in
push
push
push
adc
inc
scas
sbb
cmp
cltd
mov
shlb
sub
mov
sahf
add
xor
aas
std
les
shll
pop
sub
ss
les
cmp
in
in
sub
inc
aam
push
jns
or
cwtl
enter
loop
stc
repnz
adc
cmp
lods
jno
pop
xchg
popl
mov
and
pop
es
bound
out
les
outsb
ret
lds
add
loop
mov
stc
pop
or
mull
repz
xor
in
hlt
jmp
jge
scas
std
push
rorb
test
and
jne
imul
sbb
dec
push
scas
loope
fs
push
enter
mov
mov
movsl
lds
sub
test
add
and
pop
in
push
stos
pop
lcall
mov
lret
scas
cmp
pop
xchg
or
mov
cmc
clc
jecxz
mov
stos
adc
lods
outsb
dec
sub
imul
lds
cmp
pusha
movsl
popa
add
pop
fstpl
aad
sbb
mov
cwtl
dec
lahf
cltd
xlat
push
out
loopne
jo
mov
sub
pop
sub
jg
sub
push
inc
in
push
out
lods
mov
add
imul
mov
dec
into
sbb
icebp
sbb
dec
xchg
inc
xchg
push
inc
sub
cmp
sbb
jbe
pop
inc
pop
add
loope
call
xor
mov
pop
push
test
and
outsl
mov
out
jmp
jmp
cmp
cmp
push
lods
stos
stc
cwtl
test
push
push
in
jnp
imul
std
test
push
mov
sahf
iret
fisttpl
fadd
lret
mov
roll
xchg
cmpsl
popl
fldenv
inc
cli
xor
movsb
adc
sub
sbb
test
xor
pusha
or
gs
test
cltd
sub
or
sub
sbb
push
xor
mov
movsl
stos
popf
push
mov
lahf
enter
leave
popa
mov
xchg
mov
xchg
aaa
out
jmp
loop
xor
and
push
fbld
inc
xchg
aaa
and
push
mov
fidivl
mov
jge
adc
mov
mov
dec
movsl
loopne
pop
xchg
push
and
jb
dec
in
das
sbb
mov
loopne
outsb
sbbl
jl
pop
lret
insl
nop
xchg
jns
xchg
sbb
cmpl
fwait
lock
sub
das
lds
inc
pop
xchg
and
lds
cmp
fsubp
scas
cmp
fstl
sbb
fstpl
mov
outsl
cbtw
inc
fists
pusha
and
sub
lods
xor
lcall
stos
pushl
bound
dec
fdivp
lea
xlat
mov
fwait
cmpsl
add
jle
xchg
jne
arpl
push
xor
jp
cmp
cmp
xchg
ret
rolb
sub
push
out
push
or
fs
rolb
insl
pop
test
stos
jno
sbb
push
pop
mov
inc
xchg
ljmp
popf
push
enter
fsubl
pop
inc
xorb
aam
lret
pop
push
das
jbe
xor
imul
repnz
ficoms
add
xchg
aam
and
jne
roll
sub
out
adc
scas
packssdw
or
jb
cmp
adc
cld
movsl
jmp
cld
out
loope
stos
enter
mov
sti
std
and
jo
xchg
fs
jg
clc
mov
xorl
cmpsl
jnp
inc
lcall
mov
test
in
mov
mov
out
gs
cmp
in
adc
xchg
flds
jb
jmp
inc
dec
shll
or
fs
fs
add
test
enter
jbe
scas
mov
rep
sbb
das
int
clc
push
jb
test
ficomps
xchg
insl
popa
adc
mul
insl
jbe
xorb
add
ss
ret
mov
jne
adc
adc
xor
mov
mov
in
popf
dec
pop
pop
pushl
or
idiv
jo
popf
push
int3
sarb
jns
jbe
pop
out
jge
mov
and
cmp
out
movsb
mov
inc
subb
lret
pop
lahf
iret
mov
jnp
add
sbb
shll
lock
sub
dec
adc
lock
xchg
xlat
test
arpl
out
cmp
fimull
dec
sarl
cltd
mov
add
mov
sub
add
mov
in
adc
hlt
gs
test
sub
sbb
fmulp
push
fstpl
jmp
push
out
push
mov
sub
sbb
sub
add
adc
fwait
adc
pop
push
dec
leave
mov
arpl
dec
mov
inc
in
push
xor
xsaveopt
hlt
leave
cmp
or
addl
inc
cmpsb
pop
mov
add
push
popf
add
dec
xchg
fsubrl
xchg
and
jge
fidivrl
cmpsl
xor
js
ret
cmpsb
stc
pop
lret
pop
or
sbb
pop
pusha
cli
mov
xor
cli
adc
sbb
loopne
dec
cmp
icebp
push
and
jo
test
jecxz
fisubs
popf
pop
pop
pop
dec
mov
mov
rcll
pop
push
mov
gs
les
xchg
cmp
and
push
xchg
mov
mov
mov
fistpll
imul
jecxz
lahf
xchg
mov
shr
cli
pop
les
jnp
insl
inc
lock
cmp
adc
stos
or
popf
pusha
in
jl
outsb
sbb
jecxz
and
adc
div
inc
int3
push
inc
adcb
fdivrs
xchg
pop
dec
daa
sti
cmp
xchg
push
sub
fcompl
mov
adc
xor
xor
dec
arpl
cmp
cmpsb
add
in
lds
iret
mov
sbb
pop
cltd
shlb
in
and
iret
popa
lcall
xor
mov
cmp
std
pop
gs
sub
lods
push
sub
arpl
inc
push
dec
sub
mov
mov
test
xchg
inc
fistps
mov
mov
pusha
pop
add
cmp
mov
dec
cli
dec
pop
dec
pop
push
aas
mov
movsl
mulb
scas
test
out
popf
inc
adc
inc
xor
inc
ljmp
push
jbe
notrack
push
push
mov
repz
fmulp
int
jecxz
sbb
repz
pushf
popa
jae
shrl
sbb
fs
and
adcb
xorl
in
stos
pop
jp
test
cmp
xchg
out
mov
ljmp
sbb
dec
xor
pop
xchg
mov
test
dec
test
jb
or
cmpsl
mov
repz
push
call
outsl
pop
ss
jg
mov
jnp
and
mov
in
decb
out
rorb
mov
inc
jecxz
jne
sub
dec
divl
jae
mov
jmp
popf
mov
mov
rcrl
ja
inc
mov
aad
cli
push
push
pushf
out
jle
lea
rcrl
outsl
inc
scas
mov
sub
xor
push
cs
lea
mov
das
fbld
mov
call
xlat
imul
xchg
sub
das
pop
dec
push
add
push
cwtl
jno
fmuls
dec
fnsetpm(287
test
in
mov
ja
int
popa
xlat
inc
fs
mov
adc
ficomps
call
loop
inc
lods
or
xor
ds
sub
cld
dec
and
arpl
jp
into
jns
or
xor
dec
test
mull
xchg
jno
inc
inc
xor
xor
mov
or
or
mov
pop
and
cmc
jnp
push
push
and
fwait
adc
add
dec
popa
add
leave
mov
push
push
out
jle
bound
jl
int
iret
pop
and
test
lock
and
es
dec
sbb
test
scas
and
dec
cs
ds
jle
push
insl
ja
ss
shll
xchg
xchg
adc
test
test
sub
mov
mov
shrl
and
mov
inc
push
xor
js
pop
sbb
int
add
pop
ret
xchg
lds
inc
cli
dec
xor
aas
sub
ret
or
in
negb
lock
fsubrl
pop
bound
aaa
mov
jle
sar
mov
jl
add
cltd
bound
or
lock
mov
push
pop
cmp
mov
xor
test
fimull
cmp
mov
mov
cmp
in
adc
in
and
inc
les
mov
mov
test
push
adc
arpl
faddl
xchg
into
lahf
and
or
std
dec
jno
movsl
shll
sub
pop
xchg
out
fdivrs
cmc
dec
sub
jecxz
lock
mov
mov
push
push
and
cmp
out
jmp
and
push
mov
or
dec
sbb
mov
sarl
or
cmc
lods
dec
lcall
xor
cmp
sbb
rcr
cmp
xchg
imul
scas
movsl
insb
lahf
in
mov
jp
je
outsl
scas
cli
sub
xchg
stos
xor
xor
pop
sbb
dec
sub
gs
xchg
std
xor
ja
and
jecxz
pop
cmp
inc
test
push
repz
int
ret
xor
sbb
mov
push
test
jp
add
leave
xchg
xchg
or
mov
add
push
mov
sbb
and
sbb
sti
sub
aam
lahf
xchg
xchg
mov
or
lods
outsb
mov
test
pop
inc
out
xchg
subb
push
jge
rcll
dec
cmpsl
lahf
pop
add
mov
outsl
in
sbb
aaa
sbb
mov
ja
cmc
add
or
pop
jns
les
jnp
sbb
push
sbb
mov
mov
mov
push
jnp
test
mov
loopne
testl
dec
pop
and
hlt
mov
adc
cmpb
icebp
aam
or
daa
test
cmpsb
insl
pop
jg
inc
mov
ret
dec
mov
dec
dec
sbb
loop
and
stc
mov
outsl
lret
mov
mov
out
and
xchg
and
mov
outsl
cmpsl
or
push
aad
jecxz
and
stos
dec
imul
fwait
xchg
jg
mov
and
addl
mov
std
add
popf
or
rcrb
std
loope
dec
jno
das
mov
lods
in
xchg
lahf
xorl
lods
insb
sbb
testb
gs
jle
pusha
sbb
add
and
cld
fsubl
cwtl
stos
mov
cmpsb
sub
out
xorl
and
imul
sbb
push
pushf
jecxz
adc
int
aam
shl
orl
out
insb
dec
mov
out
mov
or
jbe
xchg
popf
sbb
fsub
sub
ret
movl
pop
or
xchg
out
shrb
mov
sub
mov
outsl
insb
jl
sbb
push
push
mov
pop
gs
das
aas
pop
sub
jb
jmp
sbb
xchg
xchg
movsl
dec
jg
enter
dec
cmp
out
or
call
orl
scas
sbb
inc
lock
mov
adc
ficomps
mov
and
jle
nop
je
call
mov
mov
xchg
pop
das
lea
jnp
clc
bsr
push
or
mov
out
ja
and
mov
xchg
sbb
jl
mov
ljmp
mov
adc
les
fnstcw
enter
add
call
jg
mov
flds
movsb
jle
dec
outsb
pop
gs
ss
lods
scas
in
or
dec
sbb
mov
xchg
add
sbb
pop
data16
lea
pop
xor
in
sbb
inc
or
lea
into
adc
xchg
lds
cmp
lock
sarb
sub
push
xor
or
inc
js
xchg
roll
icebp
dec
les
pop
jne
add
fstps
stos
mov
xchg
inc
popa
cmpsb
out
jnp
pop
icebp
call
push
adc
test
xor
push
and
inc
mov
lods
sub
in
mov
sub
xor
xor
orb
fildl
mov
and
inc
stc
push
sbb
sbb
out
jp
dec
out
dec
mov
sti
in
xchg
aas
fidivrs
inc
xchg
mov
push
es
jge
movsb
or
push
push
add
scas
push
cmp
std
add
mov
sbb
push
xor
stos
cs
push
add
aad
add
push
cmpsb
iret
shl
push
cmpsl
movsb
adc
jb
into
into
xchg
sbb
jbe
test
fcoms
push
pusha
cltd
cmp
dec
adc
shll
mov
movsl
andb
and
cmpsb
fdivl
mov
repz
sbb
not
mov
adc
fwait
sbb
mov
xor
or
ss
xchg
mov
out
mov
test
fs
aaa
inc
lea
fnstenv
lods
push
sub
add
pushf
mov
xor
push
mov
sbb
ss
cmp
xor
test
outsb
call
aaa
fs
mov
and
outsb
pop
scas
js
jge
sahf
cld
sub
mov
rcrl
in
lea
loop
cld
cmp
or
adc
dec
dec
pop
repnz
jbe
push
cs
shll
cmp
fstl
loopne
loope
jb
push
in
push
sub
pushf
arpl
lods
int3
lea
cmp
jbe
clts
mov
push
scas
lods
ss
ja
push
jge
stos
movsb
or
or
mov
add
jl
lret
pop
add
mov
jno
outsb
push
and
inc
jle
mov
shl
dec
mov
cld
xor
and
or
ljmp
adc
stc
ja
push
int
lcall
xchg
fdivrs
adcl
mov
aam
iret
inc
xor
outsl
inc
icebp
out
push
sub
mov
cmp
mov
int3
dec
andb
sahf
jb
stos
in
mov
mov
aas
jbe
ja
icebp
xchg
cmpsl
inc
mov
popa
or
mov
loopne
sbbb
or
int3
fs
pop
mov
jecxz
ret
and
mov
cwtl
stos
xchg
mov
xchg
add
test
movsl
or
fdivrl
daa
push
and
mov
mov
xor
int3
and
ljmp
dec
loopne
dec
test
daa
add
outsb
jne
sub
ds
xlat
mov
add
adc
mov
in
push
mov
aam
fcomps
loope
ds
mov
xchg
pushf
add
or
rorb
jmp
mov
push
fstl
adc
push
lahf
xor
movsb
mov
mov
cmp
inc
jmp
jnp
andl
fistl
movsb
and
xchg
gs
sahf
add
cmp
jno
adc
mov
dec
push
mov
icebp
inc
xchg
inc
divl
xor
pop
mov
mov
decl
das
inc
fldt
test
fwait
mov
aam
mov
and
dec
cmc
cmc
jbe
test
dec
push
inc
mov
stos
stc
push
adc
mov
rclb
inc
movsl
scas
fsubrs
push
idivl
jp,pn
outsl
addr16
adc
scas
adc
mov
std
rolb
icebp
push
jnp
imul
cmc
jb
pop
pop
xor
lahf
pop
sbb
push
adc
sbb
mov
cmpsl
add
jae
loope
sti
xor
mov
or
xor
lret
roll
out
cli
xor
fisubl
fdivrs
inc
pushf
cmp
sahf
pusha
into
aam
add
test
js
jne
dec
xor
add
mov
lea
icebp
jg
adc
in
add
in
inc
push
mov
ret
icebp
fcoms
fisubs
push
sub
lret
inc
push
out
scas
shlb
add
js
fisubrs
arpl
xor
negl
inc
arpl
cli
mov
lahf
sbb
scas
fisubl
cmp
jb
pop
xor
xor
cmp
jg
sub
adc
xchg
inc
sti
jl
jnp
cld
adc
mov
xchg
and
testl
hlt
push
loope
fs
lcall
xor
xchg
dec
in
adc
fnstcw
xchg
adc
push
cld
shrb
jle
mov
push
insb
dec
xsaveopt
jge
lret
sub
jmp
lret
cmpsb
xor
rol
fildl
xchg
push
sar
push
jmp
pop
cmp
cmpsb
idivb
shrb
cmp
xor
jbe
push
mov
mov
outsl
imul
imul
adc
push
test
sbb
pop
sbb
push
dec
imul
jle
jecxz
push
pop
adc
rclb
push
sbb
jle
push
adc
sbb
push
jecxz
shr
dec
mov
cmpsl
iret
jb
das
cmp
idivl
dec
popf
lea
xchg
jge
clc
ss
push
pop
push
lods
adc
or
decl
imul
shr
inc
sub
ss
jo
rcrl
jae
adc
or
int3
mov
bound
xor
xor
and
mov
sbb
jecxz
push
inc
and
lods
and
pop
xchg
cmp
adc
icebp
inc
jo
pusha
push
mov
inc
sub
lret
idivl
movsl
cmp
cs
jl
mov
pop
xor
pop
repnz
xchg
loope
inc
xchg
ljmp
sbbl
xlat
mov
nop
out
repnz
cmc
inc
dec
fs
xor
mov
xchg
sbb
cmp
and
into
push
fs
jge
mov
aas
in
push
daa
test
dec
das
in
ds
test
leave
mov
cmpsb
insl
cmp
out
mov
push
aam
int
push
and
or
nop
das
and
adc
or
adc
adc
lods
sbb
pop
push
inc
ret
loop
sbb
clc
xchg
push
repz
inc
in
out
xchg
adc
outsb
rclb
adc
and
dec
xorl
xchg
in
lret
sub
pop
clc
push
lock
mov
xchg
xchg
xchg
add
adc
cmp
push
fdivr
xchg
or
xchg
xor
cmpsb
adc
add
adc
stc
pop
cmc
and
hlt
sbb
mov
push
or
loop
fldcw
insl
outsl
push
dec
jmp
ret
jo
addl
enter
push
popa
mov
mov
push
lahf
lahf
pop
pop
cmp
ss
fdivl
jb
mov
out
ret
mov
jmp
mov
pop
inc
xchg
jno
ret
popa
pop
jge
jl
fldenv
std
stos
aam
mov
sbb
mov
notb
cmpsl
inc
add
adc
fidivrs
or
and
pop
push
sub
out
hlt
mov
sub
add
and
addr16
js
pop
lahf
aam
push
jns
xor
dec
mov
and
fninit
sub
adc
push
push
subl
jmp
dec
test
int
push
out
mov
sti
lcall
push
pop
push
adc
sahf
arpl
xchg
pushf
cmpsb
xor
jno
mov
fwait
xor
push
add
push
in
fwait
xor
xchg
loopne
fsubs
mov
hlt
sbb
fwait
mov
arpl
call
call
cmp
das
mov
jb
rclb
lock
mov
das
je
pop
aaa
dec
jb
lahf
ret
or
pop
adc
scas
cld
inc
ja
xchg
icebp
mov
loop
jg
mov
pop
lea
pop
xchg
pushf
sbb
and
sub
cmp
movsl
add
lcall
xchg
xchg
mov
lahf
jb
test
std
xchg
pop
sar
xor
pop
shll
mov
into
cmp
scas
rorb
adc
leave
sahf
shlb
mov
mov
pop
popf
cmp
popa
test
nop
dec
push
mov
roll
push
ss
pop
aaa
sbb
jbe
icebp
lods
mov
dec
sarl
xlat
push
mov
cmp
fwait
xor
daa
jg
orl
imulb
andl
in
lret
inc
and
out
fdivrs
sbb
xor
xchg
ss
repz
sub
pop
xchg
mov
jp
aad
inc
push
imul
inc
inc
adc
lret
jns
or
cli
and
dec
gs
jp,pt
xor
mov
outsb
xchg
leave
pop
mov
or
hlt
shr
out
test
mov
xor
mov
mov
int3
cwtl
add
aas
push
shlb
shrd
insb
lock
mov
jle
inc
leave
scas
mov
mov
xchg
int
jbe
mov
pop
pop
xchg
push
add
xchg
cmp
pop
adc
and
pusha
xor
mov
push
mov
arpl
adc
pop
push
repz
fstps
jl
gs
mov
sub
and
jns
push
adc
call
rcl
pop
adc
aam
or
mov
cmp
sbb
push
cmp
stc
aas
outsb
xor
pop
mov
clc
int3
fs
cmc
fdiv
mov
outsb
cmp
decl
addr16
imul
sub
dec
add
test
mov
cmp
jecxz
push
xor
daa
sub
xchg
cltd
jp
in
lret
aaa
lahf
scas
faddl
fdivr
mov
jae
pop
movsl
mov
movsl
cltd
nop
adc
mov
shlb
and
bound
mov
or
mov
es
movsl
mov
scas
pop
cmp
popf
cmp
gs
lret
dec
push
mov
scas
jmp
pop
cmovnp
fistl
fwait
test
addr16
xchg
adc
pop
repz
dec
cmp
dec
arpl
lock
stc
out
leave
shll
stc
add
lock
and
dec
sub
jmp
fs
ja
mov
loope
dec
aas
jbe
jl
push
test
push
or
jnp
ds
mov
sarl
push
xor
mov
call
in
cmp
rolb
rcr
pusha
mov
and
fistps
mov
mov
and
mov
stos
pop
push
clc
push
fwait
fs
inc
xchg
or
pop
lods
scas
lods
push
mov
jns
fists
and
xchg
jle
in
cltd
addr16
adc
mov
adc
xlat
in
push
imul
iret
sbb
sub
xor
inc
xorl
inc
push
inc
mov
mov
jo
or
outsb
jg
call
pop
cmp
dec
mov
sub
cmp
cltd
in
popa
iret
cmc
adcl
or
jge
enter
fstpt
mov
shlb
lds
sti
scas
dec
sbb
sub
mov
rol
pop
lock
dec
jecxz
sbb
adc
or
in
adc
rcr
sbbb
outsb
into
testb
stos
mov
dec
int3
cmpsb
add
sbb
cmp
push
movsb
sbb
inc
inc
mov
es
cmp
xchg
imul
scas
jns
fcmovne
in
mov
out
pop
adc
and
ret
inc
xorl
int3
lock
out
ja,pn
rcr
jl
js
shlb
xor
int
enter
inc
mov
arpl
std
pop
pop
ror
loop
xchg
lods
pop
mov
loope
in
scas
insb
outsb
mov
repz
mov
cmc
mov
negl
ret
dec
sub
ljmp
hlt
adc
inc
fldenv
xor
and
xchg
popf
add
or
or
inc
mov
lcall
sti
mov
dec
sub
pop
clc
iret
lods
lret
adc
cwtl
fisttpl
je
lcall
mov
mulb
aaa
push
push
cmp
push
xchg
jo
sbb
push
ljmp
lods
xchg
es
cli
or
inc
push
addr16
aaa
aas
sbb
cs
mov
cmp
testl
nop
subb
xor
jno
in
cmp
mov
add
and
jno
or
fdivp
or
fiaddl
mov
jbe
add
mov
shrl
push
lret
adc
or
cmp
cld
aad
in
call
pop
add
sahf
add
and
xor
jp
bound
pop
loopne
mov
mov
enter
scas
xor
repnz
jae
adc
enter
xchg
lds
xlat
mov
mov
inc
xorl
dec
movsb
xchg
enter
ficoml
lea
rorl
shl
repz
cmp
rolb
jmp
arpl
pop
mov
popf
mov
out
stc
jle
jmp
dec
or
xchg
insl
xorb
lea
testb
adc
or
and
call
bound
jae
cmp
mov
insb
mov
sbb
or
adc
pop
fnstenv
push
cmpxchg
mov
rorb
sbb
out
cli
mov
and
pop
repnz
int
in
xchg
jns
inc
hlt
jo
lret
push
out
aaa
sbb
sbb
sbb
mov
push
lods
leave
std
ljmp
or
cmpsl
rorb
dec
jns
gs
mov
loope
or
shr
lods
add
and
pop
movb
imul
in
sbb
push
je
lods
je
inc
popa
xor
inc
or
aam
test
mov
xor
cmpsl
xor
loopne
or
inc
arpl
int
loop
cmp
gs
cld
mov
negl
std
fldl
adc
sbb
adc
outsl
and
xorl
mov
add
scas
fcomip
inc
mov
lret
push
inc
int3
mov
mov
xchg
sub
fcmovu
inc
aam
out
fs
fwait
shlb
ljmp
iret
cmp
hlt
scas
es
imul
incl
gs
push
pop
icebp
push
imul
jl
and
imul
push
lea
cmc
mov
jo
int3
dec
dec
rorl
jle
mov
jns
pop
insb
cmp
scas
shr
jne
lcall
or
imul
dec
call
aad
popf
ljmp
mov
xchg
or
dec
dec
inc
or
jge
adc
test
cs
mov
mov
fsub
out
cmp
test
mov
dec
xor
push
sub
popf
xor
push
out
loope
jns
xchg
push
pop
stos
rolb
jle
imul
xchg
push
mov
cmp
adc
lea
lcall
pop
lcall
or
ja
xchg
stos
push
lods
lock
addr16
pop
lahf
sbb
hlt
sub
leave
pop
dec
mov
lahf
insl
pop
xchg
sub
loopne
adc
inc
xchg
xchg
movsl
push
pop
jns
je
mov
sub
sbb
add
dec
ret
adc
dec
mov
lcall
pop
repz
cwtl
jns
subb
mov
dec
shlb
repnz
jle
test
mov
icebp
test
sub
xor
movsb
mov
sub
jg
mov
jp
les
xsha1
cmpsb
dec
inc
and
jp
mov
mul
jmp
enter
sbbl
aam
sbb
stc
rcrl
adc
bound
movsl
mov
imul
pop
dec
xor
xor
xlat
mov
push
push
or
mov
adc
js
or
jb
cwtl
int3
or
in
mov
push
jle
or
push
fstl
arpl
stos
mov
or
insl
xlat
lods
push
scas
in
insl
int3
mov
aad
inc
xchg
cmp
cmc
push
out
shrl
nop
cmp
mov
adc
jmp
in
repz
sbb
repnz
leave
call
sbb
xlat
arpl
inc
xchg
and
push
pop
inc
out
addb
pop
sub
stc
mov
xor
adc
cmp
cmpsb
mov
sub
sbb
icebp
adc
adc
jno
pop
push
mull
loopne
xorb
sbb
out
arpl
mov
add
movsl
stos
ljmp
mov
cs
or
dec
sbb
in
xchg
jnp
cmpsb
loopne
add
jg
sub
mov
push
add
daa
and
insb
dec
push
adc
jecxz
add
ficomps
mov
scas
or
addr16
jns
mov
dec
adc
dec
repnz
pop
mov
loop
cld
and
adc
fs
adc
ja
imul
shlb
lcall
xor
mov
sbb
hlt
and
mov
fwait
test
cmp
sbb
out
mov
cmp
jle
mov
and
jo
inc
shrl
mov
jo
cs
xor
ret
lock
out
mov
into
xor
into
mov
push
icebp
call
iret
push
add
sub
dec
mov
stc
fcomps
xchg
repnz
mov
loopne
mov
jno
pop
dec
add
fnstenv
xchg
pushf
movsl
inc
repz
mov
lahf
hlt
push
lret
daa
mov
mov
cltd
fs
jp
popf
fisubl
cwtl
ljmp
mov
pushf
leave
jb
pop
mov
in
or
pop
sub
adc
fidivrs
shlb
and
dec
xor
inc
test
into
jb
testb
test
pop
imul
inc
adc
out
jno
or
xor
mov
leave
and
sahf
xchg
test
xchg
out
mov
pusha
xchg
push
mov
jle
mov
popa
mov
ret
xor
test
cmp
add
add
ret
lret
shll
test
cmp
dec
aam
jp
mov
sti
aas
sub
std
cs
aas
arpl
xor
cmc
push
jecxz
pop
sbb
out
subb
xchg
and
out
out
jl
xchg
or
mov
jp
out
cli
jno
out
fnstsw
enter
in
mov
shlb
push
fnstcw
enter
mov
test
jns
mov
xchg
mov
mov
stos
sbb
pop
cmp
fstpt
dec
lahf
xor
andb
jno
xor
sub
into
cmp
xorl
adc
out
inc
addr16
sub
jae
pusha
fldenv
adc
cmp
int
add
enter
ja
addr16
mov
dec
test
mov
rclb
add
mov
sbb
scas
add
push
mov
xchg
add
mov
mov
mov
sar
lret
adc
mov
push
xchg
clc
ja
jno
aaa
push
mov
add
aam
sbb
mov
pop
mov
repz
sahf
test
push
xor
js
pop
sbb
inc
pop
xor
in
xor
hlt
js
dec
adcb
mov
das
xchg
fistps
dec
fmul
pop
cmc
push
fwait
movsl
xchg
cmp
adc
ja
push
arpl
mov
jg
sbb
xor
pop
mov
insb
cwtl
mov
fldenv
sub
mov
pop
pop
pusha
sbb
cltd
xor
in
jmp
imul
mov
pop
mov
je
mov
lods
daa
or
push
in
ljmp
cmp
mov
aad
test
imul
or
cmpsb
jl
mov
and
pop
shl
bswap
shl
mov
dec
scas
push
mov
cli
cli
pop
rol
jmp
mov
lock
sbb
mov
dec
mov
pushf
sub
stc
dec
xlat
outsb
mov
dec
push
xchg
dec
and
jmp
xchg
push
sahf
loope
jns
ljmp
loop
outsl
insb
lret
dec
dec
push
std
mov
sub
inc
cwtl
xchg
jnp
jecxz
jno
ficomps
test
insl
outsb
stos
jl
lea
ret
cmpsb
mov
adc
mov
cmp
push
inc
sub
and
fdivr
clc
popf
pop
rcl
les
in
push
mov
adc
jb
mov
lahf
xor
idivl
arpl
xchg
jno
repnz
xchg
scas
imul
shr
roll
push
in
jns
adc
iret
rcll
mov
and
adc
out
insl
xor
pop
xchg
dec
shl
stc
jge
ljmp
push
nop
jnp
or
push
push
push
neg
sbb
mov
fs
sbb
xor
inc
dec
test
add
jns
sub
add
fidivrl
add
and
dec
loope
dec
icebp
popf
xor
pop
push
dec
lcall
jno
call
std
add
dec
cmp
fmull
fistl
inc
mov
sbb
xor
sarl
cwtl
push
fbld
inc
pop
inc
pop
fisttps
pop
or
lds
pop
pop
or
aaa
adc
cmp
sub
inc
or
mov
push
jmp
jo
mov
push
mov
xor
andb
add
inc
outsb
adc
cmp
out
out
test
cmp
orb
add
lahf
inc
jmp
dec
in
cmp
sub
dec
inc
cmp
jnp
sub
imul
mov
js
fbld
pop
push
xchg
cmp
andb
xchg
inc
cld
mov
push
sub
sub
cmp
jnp
in
pop
xor
add
mov
scas
call
in
dec
shl
push
out
jns
jmp
dec
ret
jmp
cwtl
idivb
push
adc
inc
adc
mov
mov
dec
mov
mov
xor
mov
mov
and
sbb
jg
shlb
sub
inc
cld
pusha
and
fisttpl
fsubr
jmp
call
minps
fmuls
iret
stos
pop
and
dec
pop
xor
jns
jp
addl
in
aas
or
jno
inc
cwtl
mov
sub
jg
or
jle
push
xchg
xor
mov
mov
imul
pop
aaa
adc
jb
and
xor
imul
and
adc
sub
jecxz
fcompl
xchg
pop
out
in
gs
or
mov
mov
pop
popa
stc
call
fldl2e
lcall
int
lea
jnp
jmp
out
bound
sbb
sbb
mov
mov
cmp
pop
ret
fists
inc
or
stos
ss
arpl
subb
sub
push
jecxz
dec
mov
push
pop
jl
xchg
cwtl
es
fdivrl
mov
movb
fucomip
sti
stos
mov
std
or
adc
shll
cs
inc
push
aaa
iret
mov
xchg
mov
xor
xchg
mov
ret
addr16
xchg
mov
xor
or
adc
fldt
pop
cmc
add
or
sbb
and
fsts
mov
cmp
mov
out
insb
xor
in
loope
int
lods
sbb
lods
out
stos
xor
push
push
lods
aad
sti
sub
stos
cmp
push
cmp
aas
scas
dec
sub
addr16
arpl
stc
rorb
loop
inc
dec
jle,pn
out
mov
mov
sti
js
adc
mov
push
movsl
jns
mov
fmull
ret
outsl
js
cmp
cs
cmp
in
mov
jnp
cmc
into
call
idivb
adc
xor
dec
adc
cmp
mov
jl
je
and
dec
mov
pop
mov
rcll
clc
cmp
test
push
mov
cli
loope
enter
les
out
adc
scas
cmpb
pop
push
and
ja
mov
sub
es
jecxz
fwait
xchg
mov
push
in
clc
xor
push
dec
pop
or
jae
test
cmpsl
movsl
inc
rol
jae
ds
jmp
xor
mov
scas
pop
jecxz
loopne
gs
call
or
test
jnp
sub
mov
aaa
mov
in
inc
fdivp
or
stos
cld
xor
ret
rorl
ret
sbb
leave
das
mov
fimull
stos
mov
aad
mov
lock
add
cli
aaa
xchg
push
test
push
aam
xchg
in
int
pop
mov
fnstsw
lock
hlt
pushf
cld
test
pop
outsb
pop
ldmxcsr
leave
lods
xchg
dec
es
sub
cmp
inc
es
loop
ret
jecxz
divb
data16
sub
loope
ss
push
adc
xchg
les
push
lds
jmp
jo
fisubs
jle
and
test
fnsave
and
dec
notb
mov
add
fldt
cld
popf
xchg
imull
push
je
xchg
inc
xor
and
lret
pop
in
mov
xor
popa
mov
lret
test
mov
pop
or
cmp
in
add
jns
pushf
or
imul
test
sbb
jae
mov
fistl
je
cmpsl
fldt
jmp
ljmp
lea
outsl
jmp
repz
mov
or
mov
fdivl
jmp
repnz
mov
mov
adcb
je
int3
pushf
jo
js
xchg
stos
xchg
repz
shrb
add
jbe
jp
insb
pop
ret
adc
ss
imul
sarl
xor
inc
jp
inc
mov
stos
pop
push
aam
mov
lcall
loopne
adc
popa
icebp
cli
loopne
jb
jae
dec
neg
sbb
jo
mov
stos
pop
test
aad
dec
xor
mov
add
aad
js
and
jp
pop
les
shll
cs
or
int
ficompl
sahf
push
mov
nop
cwtl
pusha
xchg
scas
xor
sti
sub
cs
icebp
dec
stos
xchg
shlb
std
out
scas
cmpsl
adc
pop
or
and
pop
dec
fimull
and
das
lcall
les
lods
lahf
dec
dec
add
fnstenv
inc
cmc
adc
test
adc
fmull
test
fsubs
cmp
mov
mov
popa
mov
xchg
mov
jecxz
adc
bound
imul
add
cltd
out
inc
fimuls
pushf
dec
pop
adc
enter
xchg
pop
jb
ret
mov
xchg
pop
xor
xchg
mov
dec
pop
mov
rorl
inc
adc
clc
enter
clc
rcrl
call
pusha
aam
repz
sub
sbb
das
xchg
jecxz
fisubrs
jl
pop
stos
pushf
dec
lea
shlb
fimuls
pop
inc
je
add
aad
mov
push
xor
rorl
ja
cmp
cwtl
and
fsubrs
aam
push
mulps
sub
push
pop
sbbl
inc
adc
jmp
xor
je
jnp
aad
mov
jmp
fidivrs
push
stos
scas
fs
inc
aas
cmc
xor
and
into
dec
mov
lret
mov
cld
fildl
and
add
rcl
lahf
rolb
repz
lea
xchg
fidivl
out
xor
daa
mov
adc
xlat
idivb
cli
mov
jne
lds
int
mov
jl
scas
inc
jle
notl
pop
mov
mov
cld
push
fistpl
mov
iret
fwait
xor
lahf
jle
mov
insl
mov
and
push
call
mov
outsb
and
sub
cmpsb
push
jl
mov
mov
out
cld
dec
pop
andb
mov
mov
inc
aam
imul
incb
mov
mov
lods
jge
fnstcw
add
imul
or
ja
andl
clc
adc
lods
jmp
sbb
pop
xchg
push
dec
iret
and
imul
fsubl
dec
mov
movsb
add
gs
lea
cmpsl
xor
sbb
dec
insl
shll
push
mov
fs
adc
mov
repz
and
ficoms
sbb
mov
popf
ds
jecxz
jl
inc
shll
int3
mov
sbb
sbb
xlat
das
xchg
push
mov
bound
sbb
roll
ja
out
mov
mov
sahf
mov
dec
push
sbb
ss
stos
popf
jmp
cmc
data16
jns
jle
lds
push
pop
or
out
scas
sub
jle
fs
call
xchg
xchg
cli
inc
pusha
testb
lods
xchg
jnp
stos
pop
jle
cmp
outsl
add
jae
inc
xchg
xchg
sbb
add
out
inc
fcomip
loop
movsb
imul
pushf
decb
test
std
lcall
mov
or
fs
xor
add
jp
or
rclb
cltd
jge
int
jp
jp
hlt
ja
mov
pop
sub
fwait
shll
arpl
adc
pop
and
mov
push
push
inc
cmp
jl
movsb
add
pop
xor
xchg
aas
es
in
push
dec
jmp
sbb
insb
or
add
mov
jmp
push
pusha
mov
jne
mov
gs
push
je
cwtl
add
push
and
stc
cmp
lret
aas
mov
and
xchg
test
sbb
jecxz
xchg
sbb
and
push
cli
mov
aad
negb
orl
xchg
faddl
sbb
insl
outsb
dec
into
push
push
mov
push
ds
mov
sbb
mov
mov
push
shrb
or
arpl
jge
jg
xchg
sbb
push
mov
lcall
outsb
movzbl
mov
sub
ljmp
inc
mov
xchg
mov
adc
xchg
dec
adc
cmp
push
movsb
xor
xorb
mov
mov
test
jge
or
pop
das
pushf
pop
jecxz
add
lahf
loopne
lret
jmp
jg
and
icebp
fsts
mov
xchg
pop
popa
and
std
cmp
daa
cmpsb
rorb
pop
or
jbe
iret
decb
cmp
inc
sub
dec
jns
push
xlat
cmc
sub
pop
cmp
sbb
push
and
inc
adc
pop
mov
or
and
ljmp
sbb
lods
mov
pop
cli
sub
test
mov
sub
pop
inc
mull
fcomp
cmp
push
add
inc
enter
cmp
ljmp
in
aam
pop
cld
push
popf
push
mov
pop
jno
push
fcmovnu
xlat
je
lods
popf
cmp
aad
and
lcall
xor
out
fwait
xor
es
and
jmp
in
mov
ja
enter
scas
subl
adc
ficoms
stos
add
sub
mov
mov
dec
jnp
adc
outsb
bound
nop
sbb
mov
dec
add
fidivrs
lea
sub
int3
in
xor
ljmp
jmp
aaa
sti
inc
fcmovu
mov
push
or
testb
jl
jno
pop
or
addr16
adc
movsl
jns
xchg
mov
jp
iret
or
pusha
sbb
repnz
test
loope
mov
popa
or
leave
adc
movntq
pusha
ds
xchg
push
add
sarl
loop
fbstp
add
sbb
sbb
mov
shll
push
lcall
cld
adc
xor
adc
outsl
pop
ja
test
bound
mov
mov
cmp
in
adc
std
sub
mov
mov
xorb
xchg
fs
mov
mov
ror
aaa
xchg
jl
aam
fst
xlat
rcrb
notb
rorl
jg
and
clc
xchg
jmp
loopne
sub
sub
xor
popa
adc
jno
fstpl
xchg
add
lret
loopne
push
mov
loope
inc
push
pop
lahf
popl
fcoms
repnz
inc
dec
xor
pop
pop
inc
xchg
pop
cwtl
int3
add
rcrl
loopne
push
mov
adc
mov
inc
xor
push
sarb
fldl
pop
lods
stos
cmp
inc
push
cmpsb
fsubrl
xor
xlat
cld
loopne,pn
and
sub
jne
std
or
out
cmp
mov
pop
jne
add
mov
adc
nop
lock
stos
and
adc
and
movsb
and
mov
or
add
test
leave
dec
pop
test
add
in
xchg
mov
imull
jecxz
rorb
scas
arpl
pop
adc
jbe
mov
mov
rcr
inc
mov
loopne
outsb
add
aam
push
cltd
out
fimull
push
fistpl
inc
into
cmp
cld
iret
mov
or
push
dec
jmp
mov
mov
mov
pop
push
fistpl
jle
mulb
mov
inc
imul
les
jg
dec
pop
lds
fcoml
dec
sahf
adc
lret
out
movsl
scas
and
and
and
lds
mov
push
repz
mov
sbb
rol
cs
xor
outsl
fsubs
popf
mov
push
es
sbb
rclb
icebp
and
cltd
or
in
or
pop
gs
fwait
test
ds
xor
clc
xor
scas
mov
loop
mov
adc
fs
pop
outsl
xor
data16
fnstenv
and
adc
in
popf
push
aaa
and
addr16
sub
push
dec
int
fmuls
lea
lahf
mov
mov
push
imul
mov
push
mov
jbe
call
pusha
sbb
scas
rcrb
leave
cmp
pop
punpckhwd
sbb
sbb
pop
idivb
cmp
iret
xchg
xor
add
rol
push
mov
enter
cld
dec
add
inc
out
outsb
xchg
int3
arpl
mov
xchg
xor
add
cmp
mov
dec
sub
cmp
add
sti
adc
mov
pop
xlat
or
mov
mov
jmp
push
into
enter
imul
mov
pop
insl
dec
inc
push
and
mov
icebp
adcl
aas
fnsave
lcall
pushf
addl
cwtl
aam
mov
nop
xchg
mov
xchg
xlat
xor
fisttps
andb
push
push
loop
inc
push
inc
andb
or
ret
fnstenv
mov
mov
cmp
jo
xor
jecxz
daa
pop
xchg
cmpsb
and
ret
hlt
and
cld
outsl
out
adc
sbb
fidivrl
mov
out
int3
je
xor
sbb
sbb
cltd
ud1
add
push
cmp
jle
sbbl
cmp
pop
or
in
lret
les
xor
xor
push
inc
call
pop
dec
ficompl
ja
push
test
imul
mov
fistpl
shll
sub
aad
aaa
and
add
ss
out
fs
pop
jb
pushf
cmp
lods
dec
cltd
inc
xchg
mov
rcl
test
popa
scas
aad
cwtl
pop
lock
sti
push
fwait
test
jge
divps
sub
xchg
aaa
in
les
lea
repnz
mov
bnd
ret
cmpsl
or
pop
pop
orl
mov
add
xchg
jmp
cltd
cmc
lds
fsub
add
sub
jbe
mull
and
imul
scas
and
cmp
insl
es
cmpb
pop
shl
jge
insb
dec
test
or
testl
push
xchg
jge
mov
and
int3
loopne
test
out
inc
cmp
ficoml
sbb
xchg
test
push
out
dec
into
xchg
scas
adc
pusha
cs
and
dec
or
xlat
and
adc
ficoml
gs
fwait
mov
cmc
lods
inc
add
test
jns
cmp
push
pop
outsb
mov
jp
sti
pop
scas
adc
mov
in
add
movsb
add
jae
test
jo
movsl
shll
and
adc
dec
jge
insl
ss
aaa
pop
fisttps
fnstenv
adcl
adc
lock
out
sub
fwait
insl
mov
lods
xor
cmpsl
shl
mov
popf
fstpl
mov
mul
xchg
mov
pop
mov
in
and
sbbl
mov
outsl
mov
test
push
xor
pop
inc
jo
sub
test
push
cltd
subb
popl
pop
pop
inc
mov
jns
mov
cmpsl
push
pop
mov
sbb
jnp
mov
adc
loop
leave
or
sub
fcoml
divb
pop
pop
out
inc
push
fwait
xor
dec
dec
and
mov
mov
stos
and
dec
push
mov
mov
lcall
jns
sbb
lock
imul
xorl
pop
lods
lcall
imul
mov
or
dec
out
movsb
addr16
inc
into
mov
xor
sbb
xor
call
lret
stos
shlb
loopne
lahf
xchg
icebp
sti
and
sarl
push
xchg
mov
ds
loope
jns
and
jnp
daa
pop
push
sub
test
lods
aaa
fcompl
xor
xlat
mov
mov
inc
or
and
dec
rorl
mov
popf
dec
cltd
xchg
pop
mov
cli
addl
aas
movsb
sbb
sbb
sahf
mov
cmp
aam
xchg
fldl
insb
nop
push
shll
mov
out
pop
movsl
pop
popf
add
rol
dec
mov
jmp
sbb
mov
nop
fcoms
mov
data16
jp
mov
dec
jecxz
or
lds
mov
aad
dec
loop
stc
xchg
mov
shlb
and
cld
push
cmp
sub
into
popa
jle
adc
ljmp
push
adc
adc
pop
or
pop
adc
imulb
push
mov
push
adc
sbb
xor
mov
xchg
in
or
and
push
inc
loopne
int
mov
mov
fsubrs
lock
or
jecxz
and
cwtl
stc
xchg
pop
sti
ret
lds
out
sbb
mov
js
xor
jg
dec
sbb
pop
mov
pop
inc
jb
jae
ror
out
and
lcall
xchg
fbstp
in
cltd
xor
xchg
cmp
decb
loop
mov
mov
lock
and
stos
fdivrs
sub
scas
notb
mov
sbb
clc
scas
and
push
xor
jle
daa
inc
or
aad
jae
pop
ljmp
popa
and
xor
icebp
push
sarb
andl
and
cltd
ja
les
dec
fsubs
stc
mov
rorl
sti
shl
xchg
xchg
xor
xchg
cmp
inc
insb
repnz
push
cli
lock
xchg
ss
sbb
test
push
sub
mov
repnz
sub
mov
das
sbb
sar
inc
pop
cli
fwait
addr16
mov
popa
stos
jnp
dec
out
sub
and
into
and
sets
out
mov
aam
popa
icebp
pop
add
lret
out
mov
test
sub
push
xchg
jnp
aad
icebp
ds
call
fwait
outsb
pop
cmp
stos
aas
inc
add
fcomip
mov
lea
das
movsb
xchg
dec
xlat
je
stc
add
adc
pop
ficompl
add
push
inc
out
outsl
sbb
test
sahf
inc
mov
and
js
popf
mov
mov
insb
jge
enter
arpl
ljmp
push
sub
inc
lea
fmuls
mov
push
rol
mov
jl
push
data16
pop
mov
movsl
mov
xchg
out
leave
or
and
call
mov
xchg
push
repz
pop
dec
inc
jg
popa
cmp
ja
jmp
loopne
push
dec
aam
pop
jb,pn
xchg
jns
scas
div
lds
jp
adc
push
push
xchg
pop
fstps
add
decl
xchg
mov
pop
inc
mov
clc
adc
push
xchg
cmp
inc
clc
aaa
jno
imul
xor
jns
sarl
cs
xchg
ja
in
popa
mov
ljmp
fisttpll
mov
and
call
jb
fldl
jno
sub
ja
ret
aas
push
pop
mov
cmp
dec
mov
pop
popa
ds
in
xor
cmpsl
insb
add
push
mov
mov
addr16
in
xchg
sub
jns,pn
mov
inc
xchg
xor
test
push
and
adc
not
push
ret
dec
xor
jecxz
cmp
daa
mov
sub
sub
add
dec
mov
divb
lock
xor
jg
mov
arpl
xor
addr16
pop
cmp
test
inc
xorb
mov
xor
call
data16
adc
add
sbb
pop
das
adc
outsl
xor
pushl
or
jle
fidivl
scas
stc
and
in
leave
and
bound
inc
outsb
scas
xchg
push
adc
xchg
fidivrl
rol
cmovbe
mov
add
xor
jns
jmp
push
and
in
sbb
add
outsb
addb
push
or
pop
sbb
daa
cmp
add
dec
pushf
aaa
cwtl
leave
fstl
enter
and
jnp
out
or
loope
mov
jg
jmp
inc
xchg
outsl
fildll
arpl
add
cmp
dec
adcl
xchg
xchg
lods
dec
push
aam
decb
mov
into
insb
in
mov
bound
jmp
inc
and
rcrl
daa
adc
je
add
and
mov
fsub
adc
fldenv
sbb
and
jle
jmp
shr
mov
jne
imul
mov
dec
cmp
and
addb
cwtl
hlt
mov
in
pop
dec
inc
push
cmpsl
xor
mov
mov
lock
push
jge
push
pop
repz
cld
scas
out
and
out
mov
enter
mov
xchg
shrb
jne
mov
xchg
int3
rorl
sub
pop
push
xchg
shlb
dec
adc
daa
push
pop
movsl
cmpl
pop
and
aas
mov
add
lods
ja
sahf
mov
out
das
jecxz
push
les
pop
adc
sub
fnstenv
ret
ds
jne
das
mov
mov
arpl
in
cmp
adc
les
in
adc
pop
enter
sub
imul
push
stos
stos
add
cld
and
psubw
fs
or
jns
loopne
loop
lock
or
ret
mov
loopne
fwait
push
lock
xor
out
call
test
stos
inc
cmc
shll
sti
cmp
lods
cmp
aaa
das
pop
mov
or
pop
mov
inc
negl
xchg
cmp
aam
or
adc
jg
test
fdivr
mov
fcmovnu
idiv
adc
test
incl
mov
push
arpl
addb
idivb
dec
add
add
dec
push
repz
lods
dec
shlb
ja
inc
inc
repz
sbb
push
sbbl
cs
cmpsb
fucomp
addb
sbb
push
mov
sbb
pop
cmp
and
mov
push
push
xchg
insl
mov
and
jp
mov
fstl
inc
cs
ret
repz
test
xchg
hlt
cs
xchg
outsb
jecxz
insb
in
or
call
xor
insl
xchg
xchg
daa
and
mov
jg
inc
iret
pop
dec
jmp
pop
push
out
jl
call
bound
pop
push
lahf
mov
lods
insb
mov
mov
jecxz
add
aaa
hlt
mov
jmp
xor
mov
push
neg
sbb
dec
aaa
adc
mov
in
and
std
add
mov
push
adc
scas
enter
mov
mov
mov
arpl
inc
fildll
xlat
jb
mov
push
jnp
in
and
dec
push
aad
movsb
and
fdivrl
lahf
sbb
inc
and
pop
dec
fsubl
xchg
cwtl
pop
pushf
inc
stos
adc
shll
sub
mov
xlat
insb
cmp
std
mov
and
out
push
or
hlt
sub
xchg
cltd
pop
sub
pop
push
js
mov
clc
mov
jnp
jmp
clc
sub
sarb
ds
jge
fistpll
xchg
dec
sbb
mov
push
std
pop
in
movsb
xor
dec
mov
lcall
push
mov
nop
jmp
scas
add
loope
cld
iret
xchg
sbb
dec
jle
pop
add
pop
push
sbb
repnz
jecxz
aaa
and
or
and
cmpl
call
outsl
add
lock
sbb
jecxz
loop
xchg
mov
hlt
out
inc
fsubp
imulb
in
pusha
cmp
popa
mov
jno
jp
imul
outsl
ljmp
sti
adc
cmp
dec
outsl
stc
mov
pop
push
std
aaa
dec
cmpsl
push
sbb
les
sbb
or
xchg
test
adc
xor
or
enter
movl
add
ja
ja
xor
shlb
ftst
xor
push
push
mov
lods
lahf
stos
cli
les
xchg
xchg
ficomps
mov
sub
lea
mov
enter
cmp
and
mov
sub
dec
cltd
test
fwait
push
cmp
sub
dec
dec
sub
jecxz
adc
and
dec
loop
ljmp
cmp
xor
outsl
lods
dec
cmpsl
and
lea
jmp
das
sub
cmp
pop
inc
sbb
push
mov
push
or
jo
aam
loope
leave
and
shlb
xchg
lds
or
mov
add
cld
sub
bound
mov
sub
xchg
cmp
fimull
nop
push
dec
push
mov
les
icebp
ljmp
fld
cld
dec
and
dec
xchg
movl
xor
mov
xor
mov
inc
jmp
outsl
outsb
xor
push
sub
jnp
popf
lcall
sbb
xchg
inc
xor
sbb
call
aas
dec
sahf
aaa
xchg
xchg
shl
sarb
pop
push
push
mov
adc
dec
mov
addr16
jno
out
jb
scas
ljmp
cmpsl
pop
and
ds
loop
cmpsl
jno
cs
jno
add
loope
das
mov
adc
in
addr16
dec
add
xor
shrl
je
fistps
mov
add
sahf
xor
jge
push
js
es
mov
xchg
adc
fldl
rcrb
call
sbb
std
cmp
clc
jle
add
pop
repz
sub
or
xor
or
xor
mov
push
sub
scas
aaa
movsl
lea
mov
ljmp
push
es
frstor
ds
stos
inc
add
in
pop
call
or
inc
xchg
push
lods
arpl
test
lret
cmpsb
push
xor
in
lahf
enter
mov
sbb
lods
cltd
pusha
aam
lea
xchg
loop
out
mov
jle
pop
lock
sbb
jnp
push
fcmovbe
cmpsl
and
adc
sbb
cmp
jbe
cmp
push
imul
push
movsl
hlt
inc
aaa
cmc
mov
jae
clc
mov
mov
pop
xchg
clc
jae
jg
sti
cmp
xchg
mov
iret
sarl
jo
out
and
leave
xlat
pop
add
pop
les
clc
imul
call
dec
xor
loop
push
aam
mov
andl
stos
mov
pushf
addl
insl
and
clc
jl
and
sub
loop
test
cs
incb
fdivl
cmp
sub
pop
push
stc
pop
cld
es
jbe
xor
sbb
dec
shlb
testl
xchg
test
adc
xchg
push
fisubs
xor
les
inc
mov
xor
jbe
pop
inc
adc
cmpb
jmp
sahf
mov
std
xor
fidivrl
jo
pushf
notl
pop
cmp
ret
xor
cld
testb
es
fimull
pop
stos
pop
add
sahf
adc
cltd
pop
inc
out
sub
imul
mov
rcl
jmp
insl
xchg
add
jmp
movsl
jns
scas
adc
loope
inc
mov
mov
mov
mov
in
ds
loopne
andl
divl
or
pushf
push
hlt
inc
jo
dec
leave
xchg
push
lods
pop
sbb
into
push
jge
sub
and
cld
dec
lea
ror
and
push
popf
jl
xor
std
in
adc
dec
add
or
jbe
mov
or
ds
push
push
mov
movsl
dec
lods
mov
cmp
out
sarl
mov
fwait
sub
gs
mov
aad
sbb
and
push
prefetcht2
insb
out
push
add
insb
lahf
hlt
mov
push
cmp
pop
sarl
push
mov
inc
sbb
aad
xchg
ds
xor
pop
add
inc
js
arpl
sub
lock
pop
movsb
sbbl
mov
xor
push
rcll
jge
cld
addr16
subb
fwait
lods
mov
outsb
outsl
insb
int
hlt
cltd
sbb
or
adcl
or
xchg
mov
rolb
xchg
add
mov
sahf
mov
cmp
mov
addl
mov
test
fistl
rolb
clc
mov
pusha
ss
pop
add
imul
xor
pop
mov
leave
aas
into
fistps
adc
scas
std
sbb
add
jnp
pop
cmp
pusha
mov
ret
lds
xor
repz
pop
mov
cld
xchg
pop
insl
pop
inc
push
push
push
ja
xchg
sbb
mov
cmp
pop
dec
cmp
or
mov
push
mov
jbe
sbb
dec
dec
mov
imul
int
test
movsb
loope
test
push
mov
xor
xor
mov
mov
aas
movsb
adc
adc
ds
or
pop
push
imul
fldz
daa
jae
rcll
mov
or
adc
and
cmpsb
int
fwait
sti
lret
pop
xchg
xchg
addl
and
inc
or
adc
jl
mov
mov
movsl
and
mov
push
stc
dec
pop
lods
call
xchg
in
lods
mov
movsb
rol
lret
push
push
dec
mov
sub
ds
bound
stos
mov
pushf
push
jl
jno
jae
test
adc
mov
push
addr16
jle
push
mov
fbstp
sub
pop
lcall
jge
rcrb
das
mov
addr16
imul
ret
test
adc
jl
jo
pop
push
adc
fstl
or
rcl
mov
adc
dec
outsl
call
jno
xor
mov
pop
sub
sub
or
inc
daa
test
dec
lcall
js
and
pop
push
push
lds
add
jo
js
dec
push
dec
dec
adc
or
cmp
pop
leave
mov
in
sbb
mov
jne
xchg
sarl
daa
push
lahf
int3
cltd
sub
dec
mov
adc
lock
pop
cmpsl
push
scas
push
sbb
pop
xchg
jge
loopne
add
je,pt
jae
dec
cmc
bound
cmp
dec
and
ret
pop
fsubp
xchg
fstps
in
mov
cs
div
jnp
lds
lahf
or
mov
dec
int3
mov
enter
fcmovbe
shl
dec
icebp
rorb
inc
inc
sub
push
pop
mov
adc
push
test
push
mov
outsb
push
mov
mov
orl
push
pusha
jmp
mov
fistpl
jecxz
push
xor
or
dec
dec
std
xor
pop
loop
cmp
mov
ljmp
add
int
out
push
mov
cmp
enter
xchg
repz
dec
out
daa
lock
pop
sbb
roll
insb
rol
fidivl
mov
xchg
adc
gs
ljmp
stc
mov
pushf
xor
inc
xor
repnz
mov
xchg
push
fisubrs
sahf
stos
sub
adc
shll
cmc
fldenv
es
adc
nop
jmp
movb
adc
repz
inc
pop
push
sub
in
call
or
add
sbb
pop
je
xlat
addl
mov
movsl
imul
sub
inc
gs
mov
fstps
xchg
sub
repz
and
pop
in
adc
dec
hlt
sbb
cmpsb
dec
and
rcl
cmpsb
mov
or
scas
pop
test
pushf
in
imul
pmulhuw
push
test
inc
cmp
push
cltd
inc
or
xor
xchg
mov
jge
stos
imul
xor
ret
roll
loopne
mov
jae
mov
xor
inc
xchg
mov
or
imul
mov
mov
int3
inc
or
mov
std
dec
mov
pop
cmpsb
add
push
xchg
sarl
lret
sub
push
sti
or
xchg
jbe
pop
adc
mov
cmp
xchg
andl
cwtl
loope
mov
test
or
std
pop
cmpsl
adc
clc
dec
imul
mov
pop
sbb
cmp
imul
subl
mov
xchg
add
push
dec
jg
shlb
fwait
mov
xchg
into
outsl
repnz
test
mov
dec
sbb
dec
xchg
xchg
sbb
mov
mov
adc
jmp
addl
in
inc
sbb
jmp
ds
sahf
fldcw
push
xchg
jmp
or
jl
sub
sbb
push
repnz
sub
sbb
pop
pusha
incl
in
dec
inc
mov
or
scas
test
andb
lock
mov
mov
stos
sti
test
repnz
lcall
mov
push
stos
fcompl
jecxz
repz
xchg
adc
mov
test
cli
sub
movsl
mov
bound
xorl
push
mov
arpl
lret
xchg
int3
out
push
fdivp
push
movsl
cmc
and
mov
push
js
mov
dec
mov
xor
addr16
sub
pop
scas
mov
ss
fstpt
mov
fcomip
or
fstpt
push
rolb
pop
lods
js
sarb
das
inc
xlat
sbb
fcomi
lds
dec
push
inc
pop
aad
fsts
sbb
mov
pushf
sbb
sbb
fnsave
mov
adc
xor
ss
inc
add
inc
xor
xchg
xorl
bnd
fnsave
stos
xor
add
aam
loop
xchg
imul
xchg
push
mov
jp
pop
hlt
fwait
mov
xor
mov
insb
shlb
sbb
sbb
rcll
mov
movsl
pushf
inc
inc
lcall
inc
aam
cmc
sub
dec
iret
les
push
incb
jle
nop
adc
loope
push
cwtl
ret
sbbb
cli
les
icebp
test
ljmp
sub
test
mov
lret
jg
test
aad
out
inc
xor
mov
dec
out
and
ret
inc
rcrl
cmp
xor
inc
loopne
arpl
mov
cltd
mov
push
pop
adc
movsl
ret
fdivrl
jg
iret
sbb
rcll
fimull
fwait
out
jg
movsl
dec
aaa
jb
fmul
xor
pop
and
cwtl
mov
mov
fucomp
gs
pushf
mov
mov
jp
xchg
out
pop
mov
movsl
ss
mov
out
lods
inc
add
jne
mov
lcall
pushf
or
pop
outsb
neg
repnz
repnz
je
aad
jmp
inc
mov
push
ret
aaa
jnp
nop
jns
in
inc
jp
add
orl
dec
lods
and
inc
sbbb
mov
pop
mov
test
xchg
sti
xor
pop
ss
bswap
mov
std
xorb
jns
mov
rcrb
out
lds
sub
out
mov
fwait
scas
or
popf
in
test
xor
sub
jg
inc
fwait
push
adc
cmpsl
mov
adc
jp
cmpsb
stc
dec
push
nop
mov
mov
pop
outsb
nop
jne
imul
xor
jo
add
inc
sub
jle
jecxz
mov
push
or
jmp
xor
push
mov
nop
cmc
cmp
dec
pop
pop
loopne
lret
bound
iret
or
mov
or
sub
jo
scas
jmp
lret
or
pop
push
je
push
or
shl
mov
fwait
shlb
jae
push
subl
or
dec
sbb
test
jle
sbb
test
movsl
cmc
test
jns
add
lcall
jp
add
cwtl
ljmp
ror
rorb
cmc
xchg
mov
divl
cmp
stos
dec
push
insl
pusha
ret
repz
lods
adc
or
shll
adc
xlat
jmp
sbb
xchg
dec
xchg
mov
or
push
pop
out
scas
in
jbe
icebp
icebp
fidivrl
nop
inc
inc
aad
jl
push
sub
pop
lret
ds
fcmovnbe
push
push
mov
in
push
addr16
out
mov
pusha
lock
pop
or
or
dec
push
xchg
scas
pop
push
sbb
dec
push
arpl
push
add
or
out
jbe
adc
rcrl
fiaddl
lret
pop
mov
mov
mov
mov
shrb
push
shrl
inc
jp
mov
lahf
out
inc
push
in
sbb
fs
sbb
pop
jp
cmpxchg
inc
mov
pop
mov
test
push
loopne
mov
test
in
sbbb
jecxz
mov
dec
push
adc
sub
cmp
jno
test
imul
cmpb
pop
mov
push
roll
std
xchg
ret
pop
cltd
inc
push
xlat
aas
push
jl
sub
push
loope
adc
int3
cmp
scas
push
popf
lcall
mov
or
lret
sub
mov
xchg
xlat
stos
jmp
mov
mov
adc
sbb
sarb
testl
push
int3
lock
xor
in
test
outsl
xor
push
add
out
dec
push
ret
popf
or
lret
push
adc
and
mov
lock
outsl
sub
pop
add
jle
scas
and
cmp
inc
out
xchg
dec
pop
dec
cmpsl
roll
movsl
outsw
mov
popf
nop
aam
pop
test
jecxz
test
jno
adc
pop
adc
pop
push
xchg
scas
xor
dec
mov
leave
sub
xchg
dec
pop
xor
into
cmpsb
cmp
pop
imul
push
pop
loopne
sub
hlt
dec
fsubrl
in
pop
sub
add
test
mov
lret
mov
xor
shrb
mov
add
leave
addr16
int3
adc
enter
ss
xchg
jge
adcl
rol
xchg
adc
mov
ret
lock
dec
test
lret
pop
sbb
mov
inc
xlat
fbld
out
pop
fildl
mov
inc
decl
push
mov
fnstcw
repnz
in
sbbb
jbe
sub
xor
sub
shl
mov
pop
mov
ss
and
mov
pop
or
add
out
ss
adc
mov
sar
aaa
pavgw
add
rcrb
and
stos
mov
loope
adc
xchg
add
in
dec
sarl
ja
and
xor
and
push
sub
loopne
fisttps
mov
push
stos
sbb
into
inc
xchg
mulb
sarb
fs
dec
adc
and
inc
ja
push
in
popf
fists
inc
lcall
rorb
mov
ljmp
out
xchg
xchg
mov
scas
loopne
mov
mov
das
iret
mov
mov
xchg
push
mov
aad
cli
adc
dec
cwtl
mov
fwait
in
push
lods
icebp
jno
cmp
std
inc
adc
loope
pop
test
and
mov
loopne
inc
lcall
pop
adc
pop
fmull
lods
adc
jg
mov
adc
push
mov
dec
jno
mov
iret
insl
mov
les
sbb
imul
fs
push
je
inc
into
in
insb
xor
add
xchg
movsb
push
lods
pop
testb
loope
xchg
out
rorl
out
xchg
out
push
ja
lahf
sahf
outsb
enter
jbe
pushf
inc
inc
fwait
test
cmpsb
fadds
mov
jmp
mov
ss
cld
in
lock
jg
les
fdivl
aad
jo
in
or
stos
push
push
push
hlt
lock
adc
sbb
inc
in
insl
popa
xlat
pop
pushf
lahf
iret
rorb
xchg
or
outsl
pop
std
popa
or
imul
sub
fs
rclb
jmp
push
aaa
adc
add
jo
pop
dec
xchg
iret
ficoml
fstps
inc
or
int
cmpsl
adc
mov
roll
add
jle
xor
pop
int3
push
sbb
jae
jbe
insb
lret
cmpsl
cmp
in
adc
ss
addr16
jecxz
or
cmc
add
sbb
or
cwtl
sub
fisttps
test
arpl
clc
cmpsl
icebp
push
shll
mov
add
pushf
xor
push
movsl
cmp
push
cwtl
data16
cwtl
mov
jp
mov
imul
movsb
dec
loope
push
cmp
dec
sbb
cmc
out
decb
push
repnz
inc
inc
int3
push
jae
jl
pushl
leave
sbb
pop
xor
daa
in
repz
inc
sbb
hlt
fmull
out
icebp
test
sbb
cli
daa
imul
addr16
mov
xchg
lock
subb
sar
shll
mov
pop
scas
out
fimull
mov
pop
fstpt
lds
inc
shrl
xchg
add
cwtl
lods
xchg
clc
mov
lea
xchg
dec
mov
mov
xor
sti
sahf
cli
mov
pop
fildll
sbb
push
popa
aaa
add
js
lahf
mov
dec
xor
pop
rclb
enter
fisubl
rorl
mov
mov
cwtl
std
xchg
sbb
and
dec
mov
xor
subl
in
pop
fs
stos
not
mov
filds
fsubrl
iret
inc
xor
aas
dec
repz
and
mul
fistl
add
add
test
sbb
sbb
cwtl
ret
pop
pop
xchg
xlat
bound
inc
mov
dec
ljmp
loopne
rcll
dec
in
mov
popa
jecxz
cmp
into
adc
addr16
xor
sub
adc
xchg
insb
cli
nop
lret
cltd
mov
mov
fs
pushf
pop
scas
mov
lret
leave
cmpsb
sti
in
xchg
lret
or
fstpl
outsb
mov
lods
lods
stos
call
xlat
or
fwait
movsl
outsl
test
cld
dec
lret
cmp
inc
aad
rcl
sbb
pop
sbb
adc
sub
jb
inc
scas
andl
inc
mov
mov
jmp
push
cs
mov
adc
out
ss
mov
cltd
dec
push
mov
or
mov
push
push
call
jp
sub
cmp
fdivrs
xchg
rcr
jmp
out
js
outsl
ds
sub
sub
das
ljmp
stc
mov
push
jge
daa
mov
mov
sub
adc
testb
stos
enter
pop
mov
mov
sar
fadd
sti
cwtl
xchg
stc
sbb
inc
cmpsb
loop
dec
sub
imull
sub
jge
je
jne
mov
sub
movd
sbb
push
es
pop
shlb
stos
inc
mov
sub
inc
jle
adc
cltd
mov
sub
popf
enter
mov
add
movsb
xchg
push
jp
pop
stos
movsl
sub
jnp
jp
jecxz
lds
add
mov
test
out
rcrb
lods
sub
aas
es
in
or
repz
fs
cmpsb
lea
jae
mov
mov
incb
cmc
inc
inc
xchg
shrl
cltd
mov
mov
cmpsl
mov
push
imulb
in
loope
imul
mov
neg
popl
adc
outsb
addr16
fldenv
fldt
inc
gs
adc
mov
xchg
cmp
out
and
jg
dec
and
popf
gs
leave
jl
movsb
or
jb
ja
mov
mov
cmc
push
std
inc
fwait
pop
push
or
cmp
movsbl
cmpsb
adc
lahf
cmpsl
pushf
lds
dec
inc
or
mov
clc
stos
in
cli
in
movsl
cmc
call
jl
lret
push
ret
frstor
adcl
jno
fld
adc
nop
sahf
xor
lods
mov
inc
sub
rcrl
int
fstpl
add
mov
enter
fnsave
ja
sub
outsl
inc
int
in
mov
mov
xor
shll
aas
xchg
inc
and
test
test
dec
loop
xor
aad
les
popa
lods
mov
jb
push
je
adc
lods
decb
cmc
enter
insl
xchg
xorl
mov
pop
push
xor
xor
mov
ret
dec
rep
push
jge
lret
add
jae
mov
push
add
cmp
rcl
or
jmp
daa
les
adcb
shll
mov
cmp
jnp
mov
andl
push
insl
out
and
in
xchg
enter
std
dec
jbe
lcall
rorl
jg
gs
or
scas
into
enter
dec
or
pop
cmp
insl
test
cmp
push
aad
jecxz
add
out
mov
sub
movsl
fimuls
pusha
mov
xor
xor
inc
roll
adc
cmpl
insb
loop
sub
xchg
cmp
add
mov
cld
push
mov
hlt
in
pushf
xor
sub
out
incl
inc
xchg
mov
stos
mov
lods
incl
pop
mov
scas
nop
sub
icebp
inc
xor
push
iret
addr16
adc
stos
push
cmc
sub
pop
mov
aam
add
sbb
and
mov
add
mov
pop
int3
mov
mov
push
dec
mov
sbb
jb
lcall
sti
or
adc
subl
ds
mov
nop
pop
jge
and
fdivrl
inc
jge
mov
and
xchg
rol
call
lock
icebp
fdivl
xchg
mov
sbbb
jbe
cmp
xchg
andl
jg
stc
add
cmpsl
jbe
js
mov
pop
mov
mov
in
dec
fnstsw
adc
scas
push
mov
sbb
mov
leave
lahf
stc
lahf
stc
div
mov
jno
jb
dec
pop
out
pop
inc
pop
popa
lock
ret
test
push
daa
out
in
mov
int3
out
cmpsb
sub
jecxz
out
xchg
adc
inc
ljmp
pop
addl
fidivrs
lahf
jle
aas
mov
test
out
insb
push
add
lock
pop
fistpll
cmp
inc
mov
cmp
aas
add
and
in
jle
test
cmp
fcmovb
xchg
cmpsl
mov
jp
push
addl
or
pop
mov
in
mov
loop
wrmsr
decl
add
movsb
js
testb
jge
fimull
xchg
xlat
mov
loope
mov
cmp
out
outsb
std
push
outsl
gs
xchg
jmp
xor
lock
std
jnp
adc
push
push
mov
jg
into
xchg
fsubrl
loop
outsb
and
mov
pop
lods
repnz
cmp
out
pop
jo
adc
cmp
adc
jecxz
sub
out
aam
cwtl
mov
ds
dec
dec
pop
pop
dec
mov
call
fs
mov
fimuls
outsl
cmc
and
aad
jo
loope
leave
dec
mov
fmuls
lret
xchg
int3
push
outsl
loopne
popf
mov
jge
cmpsl
push
or
cld
cmp
fildl
iret
aaa
out
xorb
dec
cmp
ss
aam
xor
xchg
repnz
test
add
cs
rcll
cwtl
cmp
lock
movsl
or
aaa
adc
in
push
popa
mov
fsubrl
cs
iret
subb
loopne
xorl
data16
sahf
dec
or
testl
scas
imul
mov
xchg
roll
jbe
xchg
jg
aaa
and
sbbl
mov
cwtl
xchg
out
mov
cltd
jmp
stos
popl
sub
sti
adc
in
inc
mov
sub
add
sbb
pop
inc
adc
or
or
jl
into
out
lods
popf
jae
or
cmpsl
or
icebp
sbb
or
push
or
sub
movsl
adc
bnd
cmp
mov
sbb
sbb
xor
add
mov
ret
jg
pop
mov
push
test
outsb
call
dec
xchg
jl
xchg
repz
lds
flds
or
mov
popf
jp
fidivrl
hlt
lods
sbb
or
inc
aam
popf
jle
aad
dec
xlat
xchg
add
xchg
divl
adc
lea
loop
pop
insb
and
sub
fcompl
lock
inc
mov
add
push
and
xchg
test
inc
fiaddl
loopne
ucomiss
xchg
inc
je
mov
leave
fnop
cltd
lea
cmp
adc
adc
dec
out
mov
out
dec
jl
nop
push
scas
pop
adc
sti
xor
xlat
rolb
imul
sti
jno,pn
icebp
add
outsb
mov
aad
stos
mov
sub
pop
xchg
into
jae
and
dec
add
jp
sub
mov
in
or
sti
add
and
xchg
inc
mov
in
test
cli
mov
cmpb
pop
outsb
xor
or
mov
dec
inc
jae
ds
add
repnz
dec
stos
jge
mov
pop
mov
mov
or
in
mov
sbb
dec
aad
xor
out
jnp
cs
mov
push
pop
scas
outsb
or
dec
jecxz
cmp
stc
js
push
jne
enter
jns
jecxz
add
cmp
mov
shr
mov
out
js
ljmp
pusha
lret
mov
test
add
and
add
or
lods
xorb
js
mov
icebp
iret
ret
addl
jg
pop
jo
add
cld
jb
push
movsb
lret
mov
push
mov
xor
sbb
push
into
pop
gs
push
xchg
test
cwtl
xlat
sbb
hlt
out
adc
sub
jne
fildl
out
mov
mov
inc
test
imul
jb
data16
or
rorl
popf
jle
xchg
repz
jb
pushf
xor
sbb
fnsave
add
das
mov
push
pop
cld
scas
stos
adc
push
fstpl
push
add
fdivrs
call
addr16
sti
movsl
lret
ret
fsubs
jle
add
add
nop
arpl
jo
popf
fdivr
jmp
jb
cmp
dec
es
lahf
mov
push
dec
jle
outsb
dec
add
cmp
addr16
cmp
push
jle
mov
push
imul
inc
jge
cmpsb
fistpl
xchg
gs
outsl
jb
fcmovne
enter
push
sahf
sbb
cwtl
gs
or
mov
mov
mov
or
mov
jbe
jp
push
in
jnp
push
icebp
sarb
scas
inc
jmp
or
mov
cmpsb
mov
sarl
push
or
fisttpl
lods
push
in
lahf
lret
out
or
cmp
inc
push
lcall
or
cmp
into
sbb
jg
ret
and
sbb
pop
pop
out
inc
scas
jo
popa
mov
test
mov
adc
or
inc
lahf
inc
jb
jecxz
jb
xchg
movsb
fsubrl
repnz
dec
rcll
leave
addl
icebp
imul
mov
adc
add
movsb
jns
out
push
out
mov
das
dec
mov
popa
jg
lret
repz
mov
fstl
lcall
movl
mov
xchg
pushf
adc
xchg
cwtl
pushf
aam
lea
push
popf
les
into
dec
or
ror
addr16
pop
loopne
popa
lcall
insb
icebp
lcall
mov
insb
addr16
popa
cmpsl
dec
jg
add
sub
arpl
push
mov
sub
mov
mov
dec
shll
xor
inc
enter
pushf
js
insl
cmpsl
jno
test
cltd
repnz
lret
sub
ss
pop
sub
ret
lret
mov
pop
out
lcall
sub
ljmp
xchg
movsb
mov
dec
pop
pop
out
jae
sbb
mov
pop
push
xorl
mov
mov
dec
cmp
sbb
lds
mov
inc
jnp
rol
sub
mov
or
ret
mov
inc
out
sbb
push
push
loopne
pop
push
lods
sub
sbb
repnz
std
sbb
xor
fisubs
movsb
push
cmp
or
xchg
and
xchg
sbb
jmp
sbb
xchg
stos
mov
adc
nop
dec
xor
xchg
imul
pop
mov
jp
or
xchg
mov
in
push
mov
pop
js
subl
ror
pusha
mov
add
pop
lret
shlb
out
jmp
lods
mov
xor
and
jecxz
rcrb
insl
int
mov
into
xor
ja
repz
dec
sti
dec
xor
dec
in
mov
lret
and
sub
mov
mov
pop
mov
shl
sub
mov
call
mov
jecxz
push
movsb
mov
dec
mov
jp
pop
xlat
popf
or
pop
cmpl
jg
pusha
pop
jno
je
in
or
add
movsb
icebp
xorl
mov
lret
adc
shlb
mov
pop
push
aad
dec
cli
nop
jmp
addr16
pushf
mov
gs
push
sbb
dec
mov
ljmp
arpl
je
cld
pop
jecxz
jno
imul
add
pop
arpl
add
lds
loopne
jne
lret
pop
adc
cltd
cld
jnp
fdivl
xchg
loopne
aaa
sub
dec
fldenv
inc
push
flds
test
mov
jae
subb
mov
xchg
cmp
es
mov
insl
xchg
pop
insl
mov
adcl
adc
pop
aaa
orb
popf
outsl
in
out
js
mov
clc
mov
call
push
scas
out
lods
or
movsb
xlat
dec
cmpsb
inc
out
sarb
out
push
repz
daa
in
mov
in
sub
pushf
sub
shr
lds
popa
incb
mov
mov
popf
push
clc
pop
int
jge
movsl
stos
testl
xchg
stc
xor
push
xchg
sbb
adc
movsb
repnz
aas
cmp
jmp
movl
rcrl
adc
ret
mov
pop
test
sbb
cwtl
clc
out
push
xor
adc
sbb
cmp
out
test
outsl
arpl
add
sbb
xchg
loop
push
sub
mov
xchg
pcmpeqd
arpl
push
cltd
mov
pop
ljmp
in
aad
push
sarb
dec
les
jno
ja
jmp
int
out
mov
pop
in
cmp
xor
mov
mov
add
push
inc
es
or
loopne
ffree
inc
fcomps
jmp
push
in
mov
call
stos
je,pt
jae
jmp
pop
lea
xchg
jno
sub
mov
daa
adc
xchg
mov
adc
xlat
pusha
adc
dec
sub
into
xchg
insb
push
add
arpl
mov
mov
pop
out
in
push
sahf
stos
outsl
and
push
fbstp
adc
subb
aad
shrb
sbb
dec
stos
test
mov
sbb
jp
imul
sbb
pop
mov
cld
xchg
imul
mov
daa
test
dec
iret
out
jne
mov
lret
mov
sbb
cmp
mov
cs
push
sbb
addr16
inc
jb
xchg
push
mov
push
inc
fdivs
clc
add
loopne
mov
adc
sar
mov
sub
aaa
mov
shll
cmp
mov
cmp
ret
dec
movsl
sbb
sbb
out
stc
lret
xchg
and
arpl
lods
xor
adc
in
into
pop
stos
push
xchg
mov
das
sbb
cltd
push
mov
xchg
jo
repz
shll
mov
mov
stos
jmp
clc
inc
sti
lret
fwait
jne
push
aaa
jno
lods
xor
xchg
lcall
sti
sub
out
ljmp
dec
jne
adc
sub
stc
sub
das
pop
mov
jne
jbe
cmpb
cmp
xor
sbb
pop
add
jmp
dec
mov
movsl
ja
into
rcrl
add
xchg
aas
xchg
dec
aas
jecxz
lods
xor
sbb
movsb
test
stos
stos
iret
repz
adc
push
jmp
dec
ds
ret
jo
inc
clc
stc
fld
adc
mov
mov
shr
xchg
ss
adc
out
ss
pop
mov
cli
enter
enter
fisubrs
mov
mov
jbe
sbb
test
push
pop
xor
mov
push
cwtl
inc
xchg
popa
gs
fwait
rcll
mov
push
inc
inc
mov
push
ret
aad
pop
popa
ljmp
mov
inc
sub
lret
add
outsl
iret
jp
enter
mov
jae
add
xor
lcall
dec
mov
mov
sbb
jp
push
cmp
inc
mov
or
bound
inc
xchg
lahf
cmp
es
lea
mov
ss
imul
js
nop
aaa
mov
orl
fldpi
ret
mov
or
xchg
push
push
pop
rolb
scas
outsl
das
and
out
fs
xor
sbb
mov
mov
ret
jle
js
add
arpl
inc
mov
push
dec
aaa
scas
and
mov
adc
aaa
bound
fsubs
je
shrl
shll
icebp
xchg
xchg
imul
rclb
mov
xorb
cmp
popf
rclb
pop
das
jns
sbb
mov
out
mov
push
cmp
inc
cli
xchg
sub
and
cmp
dec
and
dec
imul
es
or
scas
mov
mov
bound
aad
stc
mov
andl
enter
push
and
push
jbe
out
cmp
sub
cmp
sub
lahf
int
mov
sahf
jle
push
sbb
rol
cmp
mov
jae
add
daa
arpl
aas
leave
sub
xchg
js
or
lods
sub
lock
insl
sahf
jnp
xchg
jae
inc
adc
scas
sbb
inc
lahf
inc
cltd
cmc
and
cltd
or
fisttpl
lret
shll
jno
in
dec
cs
push
addr16
sub
mov
lods
jmp
cmp
and
xorl
pop
xor
push
push
dec
pop
loop
adc
pop
xchg
fcmove
sbbb
subb
cltd
call
loopne
fildll
popa
or
cli
mov
test
xor
pusha
fisubrl
out
xchg
xchg
pop
lret
pop
cmp
icebp
loop
fucom
jge
aaa
fnsave
pop
out
xchg
subb
dec
jno
jnp
shlb
mov
or
dec
push
in
arpl
mov
lahf
popa
push
fadds
rcrb
cwtl
add
js
dec
repnz
fildll
iret
pop
pusha
mov
fdivrs
mov
nop
jmp
xor
mov
test
mov
sub
in
out
ret
push
inc
icebp
xor
xchg
idivb
push
scas
aam
ret
pop
cmp
pop
pop
pushl
jge
mov
pop
insl
mov
or
sbb
lods
sub
adc
test
cmpsl
pop
and
adc
jl
outsb
pop
dec
xchg
mov
mov
in
dec
into
inc
xchg
jle
mov
mov
sub
sar
repnz
daa
pop
movsb
mov
fmulp
inc
fsubrs
mov
add
ljmp
lods
dec
idivl
jmp
jle
and
lahf
xor
in
and
lods
jmp
inc
movsl
or
xor
je
pop
add
imul
mov
and
lds
jns
out
scas
push
xchg
in
daa
ss
lock
cli
cmp
pop
aas
mov
xchg
push
pop
pop
clc
inc
mov
cmp
aaa
cli
movsl
fildl
xchg
popa
enter
and
add
repnz
ret
out
push
inc
dec
mov
sub
mov
cmc
idivl
cwtl
test
xchg
jne
ror
add
int3
int
lret
out
mov
sbb
xlat
mov
jns
lods
jb
fbld
and
mov
fmull
or
add
pop
jne
cli
add
mov
jnp
mov
mov
add
scas
lock
inc
adc
pushf
jmp
mov
and
js
call
lods
jge
and
scas
push
sbb
mov
push
stos
xchg
aaa
jge
xchg
fwait
dec
mov
inc
dec
shlb
mov
pushf
sbb
inc
jp
or
push
xor
pusha
dec
xlat
rcr
mov
movsl
pop
int3
sub
xchg
gs
sbb
lock
sbb
sbb
mov
idivl
jbe
in
mov
xchg
xchg
or
popf
aas
insb
jo
jbe
xlat
dec
mov
cltd
cmp
pop
jp
int3
pop
lods
scas
fadds
test
sti
mov
xchg
out
xchg
dec
and
pop
flds
xchg
lahf
arpl
inc
cmp
cmp
mov
in
sahf
fisttps
jecxz
popf
test
clc
adc
jns
mov
test
jle
pop
loopne
adc
push
movsb
fadds
pop
in
scas
mov
cmp
xchg
cmc
scas
test
loope
mov
popa
xlat
jo
sub
daa
cmp
ljmp
ljmp
mov
iretw
cmc
lods
cwtl
test
adc
fwait
jno
adc
xchg
in
jb
push
icebp
inc
push
and
inc
fdiv
push
sbb
insl
mov
ret
mov
mov
jle
idiv
xchg
insl
add
cmp
or
push
mov
add
fstpt
and
call
adc
lcall
cs
xchg
fwait
inc
lods
lods
mov
idivb
aad
out
std
sbb
loopne
jp
in
and
aas
sbb
xor
sub
jp
cwtl
lds
pop
or
bound
out
dec
inc
lea
lcall
ret
mov
data16
test
or
adc
out
inc
notl
in
jg
push
insb
std
fists
pop
sbb
sbb
mov
das
and
int3
outsb
cmp
mov
pop
mov
lds
lret
and
in
bound
notb
popa
xlat
lds
mov
mov
sub
jbe
xor
dec
cltd
pop
push
pop
insb
cld
shl
pop
shll
clc
call
pop
ja
popa
sub
add
cmp
rorl
cmp
loop
ljmp
mov
fisubl
fsubl
jmp
and
adc
iret
xchg
stos
push
push
jbe
sub
int
insl
aas
sub
sbb
sub
xchg
pop
shlb
adc
dec
mov
push
inc
rorl
or
pop
test
daa
idivb
inc
in
dec
or
push
subl
in
insl
or
shrd
out
pop
scas
pop
dec
cs
aaa
sbb
movsb
stos
cltd
movsb
fistps
pop
gs
mov
adc
loope
pop
xchg
jecxz
mov
inc
mov
test
fimuls
test
and
adc
test
gs
pushl
gs
cld
ljmp
fmull
dec
int3
sub
add
xorb
lods
popf
mov
testb
loopne
push
fistpll
xchg
scas
rclb
dec
scas
daa
testl
pop
adcb
dec
sbb
mov
jmp
data16
bnd
add
inc
push
test
and
xchg
test
xor
mov
inc
daa
lret
and
lret
ja
inc
int
push
nop
cmp
mov
push
sti
dec
inc
xor
out
jbe
and
jg
iret
sbb
insl
inc
insl
clc
fnstcw
fdivl
xchg
or
popf
xchg
and
sbbl
and
xchg
sub
in
test
mov
lds
xchg
int
sub
sub
shll
dec
ja
xchg
xchg
arpl
mov
sti
add
or
mov
mov
inc
fcmovbe
sub
mov
lods
inc
iret
sbb
push
xor
push
pop
ret
lods
stos
lock
or
ds
xchg
xchg
fwait
dec
push
and
dec
or
adc
dec
dec
leave
mov
aad
ljmp
inc
movsb
jbe
and
out
mov
add
test
in
ret
pop
shlb
std
or
flds
lcall
rcrb
cs
mov
push
aam
cltd
mov
pop
add
mov
out
pop
scas
mov
sub
stos
out
dec
push
rorl
sbb
dec
out
jbe
shlb
jne
mov
pop
mov
in
mov
jnp
shrb
aas
and
loope
fcmovnbe
int3
in
push
fisubs
adc
pop
cmp
popa
dec
into
lret
mov
xchg
insb
push
mov
sub
mov
add
add
jl
fs
sub
mov
orl
cmp
insl
jmp
xor
sbb
dec
jp
mov
enter
mov
mov
cmp
scas
lret
jnp
pop
mov
dec
mov
aad
sub
arpl
push
imul
sahf
cmp
mov
stc
loopne
rcrl
icebp
lods
rcll
jno
inc
mov
fildl
dec
roll
fcoms
sub
insl
xbegin
in
popf
outsl
jne
ljmp
xchg
shrb
xchg
sahf
push
in
sbb
adc
cmp
mov
into
loopw
xchg
mov
xor
repnz
shll
dec
add
int3
jmp
rorl
pop
orb
sbb
movsb
aas
or
in
adc
mov
jne
cwtl
pop
push
mov
xchg
sahf
movntq
outsl
stos
mov
cld
mov
dec
sbb
sub
pop
mov
sub
repz
notb
add
gs
les
lods
cltd
mov
xor
xor
dec
adc
jne
jnp
ret
cmp
pop
movb
shll
sub
adc
aam
cwtl
inc
xor
lock
jg
in
xchg
cmpsl
inc
das
jne
mov
pop
mov
sub
jne
adc
pop
xchg
add
test
jp
rorb
inc
sub
mov
cmpsb
cli
mov
push
pop
inc
mov
std
pop
scas
aaa
rcrl
xchg
pusha
iret
xor
inc
jle
test
scas
jp
mov
xor
es
iret
cmp
pop
loopne
fs
pop
mov
dec
addr16
fildll
jge
sub
test
and
inc
mov
imul
push
orl
ret
mov
mov
push
or
paddusw
lret
sbb
loope
ficoms
adc
xchg
fimuls
insb
test
xchg
ficomps
cmp
test
xor
test
inc
in
jmp
popf
stos
and
cmp
xorb
add
jle
mov
sbb
cmp
cmp
inc
sub
mov
lahf
orl
aad
lea
out
mov
mov
dec
jo
pop
and
insb
inc
cmc
mov
cmp
lea
sbb
or
mov
mov
mov
mov
int3
xchg
xchg
push
push
cmc
hlt
dec
mov
inc
cmp
lahf
cli
sub
jp
mov
adc
subl
mov
scas
pop
mov
pop
or
mov
fdivr
fisubrl
leave
shl
fimull
outsb
in
xchg
xchg
jg
cmp
push
xchg
iret
popl
clc
int
stos
je
les
xchg
push
insl
pusha
stos
jmp
fnstsw
cltd
push
subb
daa
adc
fsub
jnp
push
push
push
sbb
std
xchg
jne
xor
sub
std
jp
fxch
fsubs
inc
out
dec
pop
mov
jg
stos
mov
sub
leave
jecxz
stos
test
xchg
xchg
cmp
sub
int
popa
ret
push
pop
and
push
ja
daa
sti
jns
jmp
adc
xchg
inc
add
cmpsb
in
js
fsubs
stc
aaa
movl
and
cmpsb
jecxz
cwtl
into
iret
sbb
xchg
or
and
and
dec
int3
lods
cwtl
mov
fimuls
push
fildl
inc
insb
mov
rcrb
lcall
data16
fistps
push
mov
mov
jp
ja
sahf
push
outsl
fs
mov
icebp
out
shrb
clc
or
cmc
mov
and
or
and
shll
xchg
sti
dec
addr16
lods
or
ss
xchg
dec
orb
inc
cmpsb
mov
mov
mov
mov
iret
mov
int3
adc
jle
and
movsl
add
repnz
lods
inc
jo
dec
or
lods
and
sti
mov
xchg
mov
dec
or
lret
aad
pop
mov
dec
mov
adcl
shr
rcll
xor
jmp
jle
fisubrs
jg
cmc
xorb
and
adc
loopne
adc
rcll
int3
sti
cs
mov
sbbb
stos
je
outsl
test
test
rorb
bound
mov
test
mov
sub
cs
xchg
pop
jns
jg
movsb
cmpsl
push
filds
cmpsl
pop
cmp
add
lret
je
push
pop
dec
shl
mov
and
lods
dec
addr16
xchg
sti
scas
fsubs
mov
paddq
mov
push
lock
div
jecxz
push
jns
mov
fidivrs
or
push
pop
adc
jns
in
mov
int3
add
das
cmp
mov
and
mov
test
sbb
fchs
enter
mov
imulb
call
xor
fsubp
jbe
stc
add
sbb
jg
insl
test
out
loopne
jge
push
repz
mov
ljmp
pop
lret
inc
adc
imul
iret
inc
mov
cmp
or
jnp
je
or
inc
out
jle
mov
cmp
sbb
mov
aas
data16
push
pop
ret
repnz
and
pop
mov
jbe
or
aaa
pop
jbe
movsl
xor
push
push
xor
inc
push
repnz
dec
sbb
mov
daa
mov
mov
sbbb
sbb
pop
subl
jg
dec
les
sbb
call
out
fdivr
sub
push
cwtl
add
in
add
add
nop
sub
dec
ficomps
std
bnd
sbb
call
mov
cmp
and
jnp
cmp
xchg
mov
jmp
inc
cmpsl
ds
aad
fcoml
adc
insl
or
sub
fldt
movsb
adc
pop
jne
jecxz
stos
or
or
mov
push
arpl
pop
out
aad
stos
outsb
xorb
xor
push
mwait
mov
xchg
add
pop
adc
xchg
stos
or
and
dec
stc
push
pop
into
test
lcall
cmp
mov
adc
aam
pop
orl
in
pop
movsb
pop
mov
sbb
insb
inc
leave
sbb
cmpl
xor
lret
and
mov
pop
outsl
mov
dec
test
jb
pop
mov
jp
aaa
mov
in
push
mov
leave
cmp
sub
cli
fs
hlt
pop
rclb
mov
push
or
nop
and
scas
lods
pop
loop
mov
divl
inc
sbb
mov
lahf
loope
pop
cmpsl
cmp
mov
dec
mov
jnp
int
test
push
mov
hlt
jl
sub
xor
push
dec
pop
mov
mov
cwtl
std
push
das
out
jns
and
fistps
sahf
mov
shlb
out
adc
adc
sahf
add
jne
jo
and
lahf
cwtl
lahf
cmpsl
cmp
or
dec
int
add
xor
dec
cmp
mov
or
dec
or
inc
sbb
dec
cwtl
mov
outsb
pop
xchg
push
or
inc
cmp
pop
inc
dec
scas
xor
mov
push
xchg
or
andb
dec
xchg
adc
sbb
push
test
sub
inc
push
add
mov
stos
push
xchg
mov
out
shll
sbb
push
std
mov
orl
hlt
lock
add
sti
popa
subl
and
mov
test
shll
push
std
push
xor
mov
bound
je
sub
cmpsb
lahf
mov
jmp
rorl
mov
cld
add
pop
fisubl
adc
mov
add
cmc
xor
subb
xchg
push
ret
fstl
xlat
xchg
push
and
popl
xor
or
mov
inc
out
mov
lods
or
sub
sbb
xor
adc
repnz
inc
sbb
inc
sbb
lcall
aad
lret
ret
clc
pop
push
mov
enter
sbb
shl
in
pop
mov
pop
mov
pop
add
jb
nop
pop
mov
je
addl
mov
pushf
jge,pn
dec
lret
push
cmp
pop
pop
ret
pusha
cs
shlb
insl
jnp
or
dec
mov
add
xchg
add
mov
sub
loope
icebp
and
pop
dec
ja
add
jns
pushf
mov
rorl
pop
mov
leave
xor
sub
pushf
fwait
outsb
data16
xchg
xchg
clc
lods
stos
sub
movsb
std
sub
add
push
or
arpl
and
xchg
cmp
dec
push
jmp
jae
insb
jne
mov
mov
ds
int
call
jmp
pop
push
mov
add
movsb
cli
movb
cli
add
mov
cmp
fstps
fmuls
inc
and
adcl
and
sub
and
into
popf
pop
pushf
jno
out
repz
sub
sub
xor
add
into
adc
mov
dec
cmp
mov
mov
xchg
sub
fisubrl
aam
mov
mov
xchg
std
jmp
ret
add
xchg
pusha
pop
dec
rorl
xchg
mov
xorl
or
inc
lods
fwait
iret
adc
xchg
pusha
imul
cmp
add
mov
lret
loop
fiadds
clc
xor
push
or
pusha
xor
add
add
outsl
pop
sbb
hlt
icebp
and
addr16
jmp
xchg
cmpl
push
outsl
mov
jbe
mov
push
arpl
jmp
ds
inc
div
mov
or
push
out
xchg
lock
movsl
adc
cltd
mov
sub
xchg
outsb
adc
dec
push
loope
jnp
adc
insb
in
cmp
int3
xchg
jl
add
stos
pop
jge
shrl
rorb
sub
pusha
mov
mov
imul
shl
mov
dec
into
lret
decl
insb
gs
lret
sub
ss
ja
sub
and
jnp
mov
sub
imul
fmuls
mov
fwait
idivb
mov
push
repz
xchg
push
inc
adc
or
pop
or
out
add
jnp
adc
cs
lds
ja
movsl
dec
les
int3
xchg
adc
and
test
cli
push
mov
aad
pop
movswl
fidivs
pop
shll
fdivl
and
fbld
jb
xor
xchg
lods
jb
adc
sub
jb
repz
mov
sub
or
adc
mov
push
push
add
or
sti
xor
rolb
bound
ret
push
sub
adc
jg
into
xchg
add
xor
cmp
test
rolb
jno
js
cmp
imul
xchg
je
cli
sbb
int
adc
and
out
push
add
push
aas
fs
sbb
add
add
mov
add
into
mov
push
xchg
mov
arpl
lock
push
add
cmp
mov
fs
into
mov
jp
in
out
mov
push
movl
insl
call
into
ja
xlat
sbb
pop
lahf
sbb
mov
mov
xor
pcmpeqb
movsl
jle
jo
cmpsb
or
dec
push
and
sub
ljmp
xor
inc
outsb
jno
push
push
inc
insl
sahf
jae
mov
movb
jb
dec
daa
les
mov
cli
add
shll
pop
ucomiss
test
xor
shlb
fisttpll
sbb
out
mov
adc
fs
sub
add
aas
es
lea
jno
aad
inc
jecxz
mov
adc
mov
xchg
push
push
cmp
arpl
xchg
cld
mov
pusha
fs
and
loope
add
adc
ret
mov
in
or
sub
xor
add
inc
inc
push
rclb
pusha
cmpb
ret
jne
sbb
fs
sub
cmp
cmp
in
movsb
out
dec
dec
or
scas
xchg
rclb
into
jge
mov
mov
xor
lock
push
mov
subb
stos
xor
lock
test
mov
cmp
pushl
cs
loopne
jge
or
mov
fsubrs
push
stos
rcrb
mov
fs
and
mov
or
xchg
adc
lahf
mov
addr16
inc
imul
jb
pushf
imul
xor
imul
inc
sbbl
enter
icebp
lret
inc
push
sub
sbb
into
inc
or
mov
push
push
cmc
aaa
mov
inc
stc
movl
popf
sbb
data16
cmp
mov
pushf
inc
arpl
sbb
jae
test
daa
stos
cs
insw
fwait
pusha
mov
or
sbb
out
scas
test
add
or
movsb
push
outsl
xlat
sbb
cmp
xor
push
mov
fidivrs
or
enter
es
movsb
out
mov
xchg
add
inc
jne
or
scas
sub
and
dec
mov
popf
pop
sub
test
in
lret
jnp
push
mov
mov
pop
xor
mov
repz
addl
fimull
out
mov
mov
mov
mov
aas
push
clc
push
or
pop
push
aam
adc
xor
stos
push
mov
inc
mov
arpl
xor
imul
loop
mov
mov
fdivl
out
in
xchg
push
xor
nop
jge
jge
cltd
test
lods
push
dec
jg
xor
jle
xlat
or
and
scas
cli
xor
out
xor
mov
aas
lea
cmp
xor
jmp
push
scas
iret
shrb
bound
daa
or
lcall
xor
popf
sub
out
stos
adc
and
daa
xchg
lods
sti
mov
pushf
pop
sbb
adc
insb
pop
mov
dec
or
pop
pushf
push
add
sub
inc
test
aad
nop
pop
sbb
movsl
push
cmp
pop
jmp
add
jp
lods
movsb
outsl
sti
jl
ret
and
pop
push
cmp
out
ret
loop
push
add
idivl
outsl
bound
xor
pop
xchg
sbb
loop
mov
lods
cmc
dec
jns
int3
out
and
jl
fsubs
jb
and
xchg
aas
or
sub
mov
jg
mov
adc
shlb
cmp
out
push
lea
je
ds
or
lahf
shl
ss
mov
cmc
in
test
daa
out
xor
pusha
mov
test
arpl
cmp
or
out
inc
add
cmp
cmp
xchg
std
inc
cmp
xor
aam
sbb
mov
outsl
sbb
xchg
test
add
mov
pop
add
sahf
rcrb
add
aaa
nop
sub
inc
sbb
jne
ljmp
sbb
fdivs
sub
mov
pop
cs
jecxz
xchg
test
inc
mov
sbb
mov
subl
out
mov
loope
iret
xor
sub
in
pushf
xchg
xchg
mov
enter
pop
add
xchg
push
xchg
sbb
movsb
jp
les
jo
mov
cs
in
mov
mov
ret
sbb
mov
movsb
xchg
into
les
cmpsb
add
adc
gs
jo
adc
sub
jecxz
pushf
mov
sub
enter
test
xchg
iret
adc
gs
rclb
es
stos
dec
lahf
pop
adc
insb
dec
leave
sahf
pop
add
nop
sub
xchg
faddl
fs
in
orb
jle
lock
mov
fadd
xor
jno
push
jle
test
push
mov
das
in
inc
mov
jno
movl
jg
jbe
stos
ds
sub
out
jl
pop
cmp
xor
lock
jge
arpl
jo
fisttps
stos
in
shrd
clc
xchg
push
rcrl
xor
xchg
clc
and
int
ja
test
outsl
sahf
pushf
stc
mov
jae
jo
cmp
cs
mov
mov
push
cwtl
push
ljmp
cmp
inc
fmul
inc
movsb
mov
addr16
arpl
xchg
mov
inc
jno
std
iret
mov
mov
xchg
imul
pop
in
dec
sbb
out
add
iret
incb
in
cmp
stc
xchg
push
jo
push
in
sbb
dec
test
lret
mov
pop
pop
fimuls
popa
dec
je
int
fwait
cld
xor
inc
sbb
mov
pop
mov
les
xor
xlat
cmc
js
push
xor
lcall
xbegin
fwait
out
jae
mov
fbstp
mov
mov
mov
adc
jo
sbb
ja
adcl
repz
out
xor
out
lock
mov
js
repz
xchg
sub
adc
lock
lock
xchg
push
xchg
add
sub
sub
sub
out
icebp
test
fldcw
fldt
dec
xchg
rolb
jno
pminsw
pop
mov
testb
xor
add
orb
int
outsb
cmp
arpl
popa
cwtl
daa
mov
test
nop
mov
in
jmp
adc
cmp
lods
aad
movsb
outsb
dec
loop
in
movsb
mov
in
iret
or
imul
lahf
sub
push
xor
adc
test
and
sahf
lcall
js
add
xor
cmp
xchg
icebp
roll
xchg
sbb
repz
or
sbb
sahf
enter
loope
out
das
loop
push
jmp
stos
jmp
dec
cmp
adc
fstpl
xor
ret
pop
pop
adc
fisubrs
rol
mov
test
add
icebp
aas
rep
xchg
adc
cmp
inc
lock
fldenv
sbb
mov
ja
leave
into
jmp
js
scas
mov
movsb
jae
xchg
in
sub
push
and
lea
repz
cmp
insl
mov
in
pop
stos
sbb
maskmovq
notl
lret
push
sub
inc
or
mov
push
int3
mov
movsl
bound
sbb
jl
mov
pop
shlb
cwtl
push
mov
cmp
pusha
incl
adc
add
test
inc
hlt
or
outsl
dec
or
sarb
mov
cmp
fsub
pusha
adc
mov
insb
xor
mov
daa
jle
jl
shlb
scas
pop
mov
jno
xor
imul
xlat
pop
mov
adc
inc
ss
dec
les
mov
adc
cwtl
xchg
iret
xchg
push
sar
iret
scas
adc
mov
scas
aam
dec
or
test
pusha
adc
ret
ja
outsb
or
and
scas
and
push
out
cld
hlt
ficomps
or
mov
popa
hlt
iret
jmp
sar
mov
out
insb
xor
sbb
push
adc
pop
jmp
cs
sbb
sub
and
out
stc
jp
mov
lods
inc
mov
mov
fucomip
push
cmpsl
nop
mov
add
gs
xchg
shrl
cmpsb
push
mov
mov
cmp
lret
out
mov
and
jb
cmc
or
pop
pop
or
inc
sbb
inc
pmaxub
pop
pop
mov
fcoml
test
pop
testl
mov
pop
mov
xchg
and
cltd
adc
lods
rclb
mov
or
hlt
and
repnz
ret
fs
aam
push
push
xor
out
mov
push
mov
test
xor
add
xlat
fcom
push
dec
fbld
add
bound
push
push
insl
lahf
sub
push
inc
push
or
lret
pushf
cld
stos
outsl
shlb
fwait
daa
sub
sbb
sub
jg
inc
loope
xchg
add
or
dec
sahf
std
pop
mov
pop
ljmp
jecxz
mov
pop
add
pop
inc
sub
or
outsb
xchg
xor
jae
das
push
loopne
mov
test
mov
mov
movsb
jae
jle
pop
aam
or
adc
add
cwtl
lock
fstl
add
pop
push
adc
or
add
mov
cmpsl
mov
add
test
jne
int
imul
mov
mov
ljmp
mov
jecxz
stos
fcmovb
das
mov
mov
les
pop
out
jns
mov
sbb
mov
pop
ljmp
push
jns
insb
imul
pusha
rcrb
fisttpl
ss
sahf
dec
mov
push
mov
out
fildl
xchg
pop
outsb
mov
sti
jp
xor
sbb
sub
add
xor
sbb
daa
testb
sub
mov
call
das
adc
fdivs
test
aad
xchg
xor
nop
aas
mov
jecxz
jo
mov
lahf
stc
and
sbb
fdivrp
dec
testb
inc
pop
jno
repz
inc
adc
sahf
inc
mov
mov
lds
jg
push
add
mov
mov
aad
add
ret
mov
outsb
jae
push
mov
lds
arpl
das
dec
dec
sub
push
push
inc
and
data16
adc
cs
xlat
jp
or
mov
cwtl
mov
repnz
in
mov
xchg
or
or
pop
leave
hlt
movsl
in
xchg
outsb
sbb
aad
ret
fnstcw
nop
scas
xchg
pop
insb
fcompl
jae
jle
inc
adc
jecxz
dec
lods
jle
int
mov
clc
mov
mov
xchg
pop
xor
scas
inc
add
mov
jle
dec
in
setbe
pop
push
cld
cs
mov
cmp
negb
stc
std
inc
mov
aas
dec
outsb
lret
adc
mov
mov
or
shl
cmp
ja
push
vorps
repnz
jmp
mov
adc
dec
es
mov
pop
fidivl
std
jae
shrb
add
add
push
mov
not
arpl
cmp
cltd
pop
pop
sbbb
push
sbb
out
mov
ds
fsubrl
push
incl
sbb
or
loope
out
sbb
cmp
stos
push
enter
out
sbb
jg
xor
xor
cmp
in
cmpsb
jnp
stc
push
arpl
xorl
jecxz
add
mov
mov
lahf
jge
push
loopne
in
and
test
rcll
rorl
fdivs
push
insb
aas
or
dec
jecxz
mov
pop
adc
mov
and
or
xchg
cwtl
or
mov
mov
dec
adc
test
addr16
ds
push
xor
enterw
bound
inc
repnz
lods
fabs
push
sub
mov
and
mov
jae
enter
pop
fwait
xchg
mov
sti
and
mov
shlb
xchg
jae
cmc
xor
xor
push
mov
fwait
jbe
xor
loopne
add
mov
mov
jmp
mov
sbb
fldl
cmp
in
cmp
push
push
add
shl
mov
mov
cli
popa
jmp
sub
stos
xchg
sub
out
xor
jg
outsl
adc
push
mov
mov
sub
pop
mov
aas
lcall
bswap
cli
add
push
ss
sarl
scas
xchg
sbb
dec
lcall
cltd
es
or
scas
movsl
push
repnz
inc
inc
popa
inc
push
pop
jbe
xor
dec
aam
mov
sub
or
lods
dec
sub
mov
jge
dec
adc
jo
ss
nop
sbbl
in
jle
mov
push
in
mov
pop
pop
idivl
sbb
cld
dec
push
xchg
orl
mov
pop
adc
sbb
clc
push
xor
pop
sub
insl
xor
push
lcall
addr16
inc
ljmp
and
push
inc
cli
inc
fadd
sbb
mov
gs
inc
cmp
xchg
fdivr
leave
aas
clc
test
mov
fsubl
add
xchg
out
sub
push
push
cmp
out
mov
cmp
or
stc
add
push
pop
fnsave
mov
push
xchg
pop
lahf
or
add
xchg
js
les
push
ret
and
xchg
jecxz
movsl
add
jmp
jl
cmp
decb
fcmove
int3
cltd
std
and
push
shrb
aaa
mov
add
out
pop
jnp
sub
leave
add
inc
fistl
int
add
sub
in
dec
rolb
test
xor
test
lcall
hlt
add
aaa
cmpb
test
adc
inc
cmpsl
add
fsubrs
adc
mov
outsl
out
mov
pop
push
idiv
push
xor
filds
sbb
pop
push
inc
std
sbbb
aaa
lods
in
ljmp
adcb
fnstcw
pushf
sbb
mov
dec
cwtl
hlt
sbb
adc
data16
ret
pusha
es
push
xchg
dec
mov
push
xor
xchg
xchg
mov
lock
das
inc
xor
cmp
cwtl
sti
dec
pop
imul
jge
or
dec
je
sbb
test
outsb
dec
iret
iret
xor
sbb
mov
outsb
mov
inc
or
std
and
jmp
lds
mov
addr16
xchg
inc
subl
pop
addr16
mov
pop
dec
sbb
xorl
pop
clc
fsubrs
imul
in
hlt
and
cmp
jae
cmp
push
mov
xor
dec
inc
outsl
loope
shlb
xchg
jle
mov
jl
gs
dec
in
and
pop
push
dec
push
cld
in
in
xor
pop
shll
dec
jle
mov
cli
loopne
rcrl
mov
cmc
inc
out
xlat
or
mov
aaa
pushf
into
push
int3
fidivl
inc
popf
bound
jne
dec
pop
jno
push
repz
push
xchg
cmp
daa
push
hlt
test
loopne
xchg
mov
mov
lods
pop
pop
cmpsb
and
shrb
jae
hlt
adc
cmp
or
ret
sub
sub
pop
fs
jmp
loopne
sub
inc
stos
push
dec
dec
test
out
push
scas
jns
std
add
push
lahf
mov
push
mov
cltd
fdivr
xchg
shrl
pop
sub
push
aad
iret
fsts
outsl
adc
aad
ficomps
daa
imul
sbb
cltd
mov
jmp
inc
mov
jo
adc
scas
jmp
cmpsb
sbb
dec
call
arpl
pop
mov
gs
sub
xor
xchg
scas
mov
in
jge
push
cmc
sub
inc
cli
jbe
stc
sub
pop
mov
fimull
stos
insb
cmp
sbbl
dec
adc
inc
add
pusha
sub
cmpsl
sub
in
aas
lods
cmc
mov
fnstenv
xor
pop
dec
cmc
mov
pop
push
aam
leave
jb
mov
lods
add
repnz
add
roll
dec
mull
aad
cmpsl
jecxz
andb
mov
popf
inc
dec
mov
js
mov
in
push
rcll
pop
add
dec
out
inc
mov
repz
in
jnp
push
push
xchg
stos
mov
jo
decb
dec
gs
dec
cmc
or
shrb
rcrl
ficomps
leave
inc
cmc
nop
in
dec
enter
mov
mov
andb
rorb
cmpsb
or
cmp
mov
test
in
mov
lea
enter
cld
int
test
int3
cmp
insl
inc
in
shrb
cmp
xorl
sti
push
sbb
int3
stos
fsubrp
and
adc
adc
je
cmc
inc
fwait
mov
push
mov
dec
jge
inc
mov
or
and
push
mov
mov
cmp
popa
pop
jl
pop
pop
and
stos
xor
pop
xor
arpl
xchg
jecxz
rorb
dec
cltd
imul
pop
dec
notl
std
enter
shrb
mov
imul
inc
aaa
ffree
xchg
in
gs
test
mov
adc
mov
adc
mov
cmp
clc
mov
and
cltd
ss
in
cmp
in
call
loope
xorl
imul
idivb
sbb
mov
sub
jmp
xchg
mov
scas
cmp
scas
clc
xor
and
stos
sbb
and
sbb
loopne
les
out
es
or
cmp
js
jo
xorl
inc
inc
aad
shr
or
ret
mov
add
or
outsl
xchg
ss
sub
jmp
add
mov
pushf
scas
xchg
adc
jecxz
mov
mov
mov
aaa
or
test
or
out
ss
daa
aad
inc
push
test
sub
xor
das
data16
cmp
clc
pusha
lcall
push
mov
in
cmc
stos
pop
cmp
jb
xor
inc
push
and
sub
lds
xchg
mov
xchg
dec
ficoms
jl
jns
adc
xchg
aam
push
daa
mov
push
mov
loop
ret
imul
aaa
out
rcr
mov
fldcw
sub
lods
leave
push
jp
repz
sub
pusha
sbb
sbb
add
sub
out
push
push
decb
lea
fxch
sub
stos
mov
sbb
in
pop
out
in
fs
out
repz
int3
and
xor
cmc
adc
push
jle
ljmp
pop
lods
iret
into
or
push
inc
out
rol
ljmp
jp
hlt
fisttps
push
test
hlt
testl
das
push
fwait
das
aaa
pushf
pop
jo
mov
mov
inc
cmp
mov
cltd
mov
pushf
or
pusha
fcomps
xchg
lret
loopne
fabs
push
les
mov
and
mov
add
inc
sub
mov
and
xchg
das
cld
adc
aas
adc
adc
sbb
dec
mov
cmp
adc
dec
xchg
addr16
popa
mov
ljmp
cs
pushf
mov
mov
loopne
jecxz
jnp
jp
out
das
push
inc
pop
jnp
sbb
jbe
cld
das
and
cmpsl
jno
xor
std
adc
ds
mov
jge
cmp
mov
jecxz
adc
sub
lahf
or
mov
jns
jp
nop
push
sbb
mov
sbb
jp
mov
pusha
mov
popa
sbb
push
je
imul
pusha
out
jg
jp
outsb
fmull
cmp
pop
inc
jecxz
sbb
loope
popf
int
fsubr
arpl
xchg
add
jo
adc
mov
pop
xchg
jp
or
js
or
rcrb
jmp
shrb
fdivs
jle
sbb
xor
inc
cmp
pop
mov
jp
dec
jns
jl
inc
scas
das
loop
es
imul
or
clc
push
cmp
lcall
lahf
xor
push
fistps
loop
xor
adc
fistl
es
sub
or
adc
hlt
xchg
or
sbb
or
fdivp
nop
stos
pop
xor
adc
bound
push
jnp
dec
mov
inc
sbb
je
adc
lret
sarl
sub
xchg
stos
inc
xchg
and
and
das
ja
xchg
pop
xchg
dec
insl
mov
add
mov
fistl
cmp
jp
sarb
iret
dec
pop
insb
add
mov
js
arpl
out
cmp
xchg
daa
xor
iret
bound
cli
icebp
mov
shlb
adc
aas
inc
mov
mov
inc
popf
mov
pop
loopne
or
jecxz
aaa
cli
jnp
cli
sbb
fcompl
hlt
xor
pop
jne
frstor
daa
sub
mov
and
sti
das
test
jg
cltd
and
push
ja
inc
repnz
xchg
stos
sbb
rcrl
cmp
xchg
pop
or
jmp
aas
stc
int3
repz
jecxz
sarl
aas
insb
add
xor
pop
fcoml
insb
cmc
stos
lock
pushf
clc
sbb
or
sub
add
pop
and
pop
push
call
pop
div
sub
je
pushf
push
and
sbb
shl
dec
rcll
and
cmpsl
pop
int3
into
and
mov
xlat
cwtl
cmp
int
inc
out
pop
sub
pop
int3
mov
jb
stos
jnp
mov
cltd
cmc
call
andb
push
out
xchg
cmpsl
dec
jns
negl
fcoml
out
jmp
xor
jnp
inc
shll
push
xchg
mov
and
fisttpl
push
jmp
adc
shrb
fimuls
or
push
and
mov
mov
in
stc
add
inc
pop
pop
inc
cwtl
adc
jne
sbb
xlat
or
and
lods
insb
xchg
std
pop
clc
and
pop
sti
xchg
lods
jns
in
pop
push
fcomps
mov
call
mov
push
js
mov
or
in
pop
inc
and
push
and
jae,pt
or
pop
in
aas
mov
cmp
and
pop
jnp
fmuls
mov
cmpsb
outsb
mov
enter
cmp
pop
test
jae
ds
mov
fwait
inc
sahf
mov
ret
push
cmp
leave
sbb
cmp
lods
cmp
mov
add
test
sbb
popa
cmpsb
or
mov
push
dec
cmp
or
adc
ljmp
cmp
jnp
in
and
addr16
lea
loop
jp
lods
sub
jg
pop
movsl
push
mov
stc
pop
sbb
repnz
push
jns
rcrb
mov
ret
ds
inc
in
test
push
test
sub
pusha
sub
mov
sub
testl
jmp
movsl
fbld
je
xor
cmp
ss
pop
repz
jbe
lea
pop
cmpb
arpl
xor
fildl
push
mov
mov
rcr
mov
movsb
xchg
push
pop
xor
in
mov
add
dec
pop
push
push
orl
xchg
lea
pop
lret
aaa
shll
stos
popl
scas
in
jl
sbb
pushf
dec
pop
jl
lret
cmp
arpl
lcall
jbe
in
sbb
add
sbb
dec
mov
push
or
and
out
lea
pop
icebp
or
jns
mov
sub
in
and
dec
xchg
movsl
test
filds
fimuls
mov
cmp
es
mov
adc
fidivrs
xlat
dec
mov
pop
push
aam
cmc
sbb
mov
lods
insb
sub
gs
push
loope
push
test
outsl
push
inc
adc
in
rol
inc
scas
sbb
popf
icebp
cmp
ss
mov
repnz
lock
push
jg
out
ficompl
sahf
in
subb
mov
xor
test
lds
cmp
daa
cmp
jns
rclb
fs
in
cmp
mov
cld
lea
jl
cmpsl
xchg
loopne
and
jmp
cmpsl
adc
int
mov
ret
sbb
je
rcl
fwait
cmp
in
mov
add
out
movsl
cmpsb
mov
psllw
dec
adc
bnd
cmc
int
fcompl
into
push
lods
jle
cmpb
mov
inc
ja
cltd
push
loopne
aaa
push
nop
jle
es
daa
popl
test
cwtl
sbb
jle
js
gs
in
jnp
sub
xor
cltd
fbstp
or
es
scas
jno
js
mov
mov
mov
ror
pop
inc
shll
push
lcall
inc
add
arpl
cmpsb
pushf
xchg
rclb
xchg
iret
jbe
xor
mov
fsubrs
dec
ss
adc
lods
push
xor
rol
mov
xchg
push
push
mov
and
out
jl
xor
mov
dec
jb
mov
daa
dec
xor
adc
mov
gs
jnp
mov
cwtl
pop
cmp
lods
je
jno
lods
xchg
jmp
push
cwtl
cld
push
sbb
push
sar
mov
rorb
test
test
add
sarb
mov
add
orb
mov
inc
aaa
das
jnp
push
and
jbe
insl
or
sbb
outsb
fidivrl
sbb
in
cmp
outsl
add
cmpsb
mov
cwtl
sbb
sub
mov
jae
sub
sub
sbb
mov
and
shrb
lcall
movsb
cmp
bound
jns
mov
cmp
adc
cmpsl
enter
sbb
pop
push
shll
roll
mov
xchg
cltd
mov
push
in
xor
outsb
inc
xchg
jnp
addl
data16
dec
mov
rcrb
in
mov
cld
xchg
fucomip
sar
xchg
stc
int3
arpl
lret
jmp
insl
jbe
xor
inc
data16
bound
loopne
mov
inc
pop
outsl
jecxz
adc
popa
jno
mov
push
xchg
push
jl
push
sbb
xorl
fs
lods
lea
fs
cmp
add
popa
add
cltd
rolb
jns
lods
push
xor
int3
cli
cmp
pop
push
jmp
xchg
jge
cmp
fldcw
cmp
mov
cmc
mov
xchg
das
add
std
xchg
pop
lahf
and
sbb
jne
sbb
stos
push
xorl
xchg
lods
aaa
call
notb
ror
out
pusha
orb
dec
mov
test
pop
xor
cli
mov
sub
fwait
and
push
mov
push
mov
shll
lock
rcrl
and
jmp
and
sbb
lahf
xchg
mov
pushf
mov
xchg
lock
inc
lods
or
or
popf
leave
bound
mov
jg
ljmp
std
and
stos
xor
fcomp
xchg
iret
jl
ficompl
push
mov
xchg
jbe
in
mov
dec
fiadds
jne
call
outsl
xlat
xor
mov
push
das
loopne
getsec
pop
dec
loopne
in
push
push
mov
mov
mov
loope
in
sbb
imul
sub
push
mov
int3
test
iret
xchg
jg
imul
cmp
jbe
ret
push
es
mov
sub
mov
xor
sbb
xor
mov
adc
mov
ljmp
insl
nop
pop
addl
or
cmpsb
movsb
sahf
jp
cltd
push
movsl
jle
lock
popf
aas
xchg
lods
mov
int
fdiv
inc
outsb
in
cmp
xchg
test
fdivl
cmpsl
cli
cmp
inc
test
cmp
divl
add
hlt
xor
sti
lahf
xor
sbb
mov
xor
xor
adc
aaa
dec
mov
mov
das
cwtl
jno
cwtl
clc
or
sbb
push
cmp
lods
mov
or
mov
lcall
dec
fdiv
pushf
mulb
push
sbb
imul
mov
ds
sbb
daa
mov
ljmp
scas
mov
cli
arpl
mov
adc
sbb
popa
jmp
fsubrs
pop
repz
xchg
xchg
cmpsb
js
aam
and
or
adc
popa
shl
sahf
test
push
push
sub
dec
mov
sub
lock
cmc
in
mov
cwtl
movsb
mov
dec
icebp
adc
inc
push
inc
cmp
jmp
xchg
aam
mov
lods
adc
bound
adc
sbb
stos
arpl
push
push
movsb
mov
push
mov
out
inc
stos
out
or
jmp
xorl
nop
mov
sub
gs
not
fldenv
fdivs
cmp
xor
aam
push
in
testb
mov
int3
rorb
lock
das
outsl
ss
pop
cltd
sbb
mov
inc
outsb
xchg
loope
and
int
inc
jle
mov
movsl
rorb
js
test
test
out
lahf
fmull
aad
repz
outsl
popf
cmp
push
rcrb
loopne
mov
pop
jle
mov
ror
mov
xchg
out
inc
test
fadds
mov
cmpsl
subl
sarb
movsl
out
xchg
add
push
testl
loope
sub
gs
add
sub
lahf
jae
mov
mov
lods
bnd
sbb
insl
xor
sti
push
cmp
popf
sub
dec
aad
loop
inc
leave
mov
pop
inc
cwtl
jl
andl
and
test
jbe
add
xchg
outsb
lock
mov
xchg
xchg
xor
inc
push
push
nop
fsubl
mov
add
loopne
cmp
call
fldenv
jecxz,pt
addr16
xchg
jne
mov
js
loope
in
les
inc
fsts
inc
scas
sti
lock
adc
sbb
or
and
push
adc
sub
in
fcmovnu
cltd
push
and
and
icebp
jo
sbb
mov
cmp
fdivl
lds
std
jnp
add
cmpsb
dec
mov
cld
or
inc
aas
inc
or
int3
inc
imul
pop
sub
mov
insl
popa
xchg
inc
rcrb
popf
push
adc
inc
push
adc
and
pushf
mov
cmpsb
jecxz
xor
imul
sub
pop
push
das
lods
sbb
movsl
mov
pop
mov
loopne
test
mov
or
jle
je
in
cltd
pop
ret
mov
gs
push
dec
lret
cmp
les
in
in
imul
inc
lret
adc
jne
xor
clc
ret
stos
fwait
test
mov
sub
dec
jp
andb
xlat
mov
xchg
xor
sbb
add
out
mov
js
mov
mov
rorl
ss
add
pop
scas
mov
std
xchg
js
xchg
inc
inc
fistpl
lcall
and
frstpm(287
cmp
xor
ds
lcall
push
shl
into
dec
adc
loop
xchg
dec
mul
mov
xor
sbbb
pop
inc
subl
jle
add
lods
push
mov
mov
pop
sub
std
jns
jmp
movsb
mov
lret
hlt
lock
or
add
and
mov
xor
pop
mov
jp
inc
js
ret
test
xlat
jge
sar
mov
mov
dec
divl
jmp
fiadds
stos
je
fwait
push
cmp
ficoms
xchg
jge
mov
mov
xchg
imul
in
xchg
dec
inc
inc
popf
push
xchg
test
mov
out
add
data16
push
std
push
das
testl
dec
iret
test
lea
mov
xor
lods
mov
mov
gs
mov
mov
mov
aam
stc
rcl
cmpsl
xchg
sbb
dec
dec
and
fwait
test
es
fildl
in
mov
rclb
fwait
adc
jno
push
xchg
push
mov
clc
jb
rcrb
ljmp
paddd
push
pusha
jl
lock
insl
pop
in
pmaddwd
adc
adc
lret
outsb
dec
lret
xchg
cmp
cwtl
rolb
xorl
test
rcl
cs
dec
adc
jg
int3
movb
sub
sub
decb
daa
push
adc
adc
int3
lods
fsub
leave
inc
mov
cmp
js
adc
jp
mov
call
or
loope
mov
jno
jg
jg
scas
push
js
popa
and
stc
cmp
jg
cwtl
cmc
imul
inc
mov
xchg
jmp
stc
inc
enter
mov
stos
mov
divl
xchg
and
movsb
mov
sub
shrb
sub
jns
inc
pop
and
pop
repz
and
imul
dec
ljmp
pop
jbe
aaa
arpl
inc
dec
add
and
sbb
xchg
dec
xor
sbb
imul
push
sahf
add
sub
pop
adc
insl
hlt
fcomip
cwtl
jp
repz
jge
lahf
orl
cld
jge
sub
gs
sbb
std
movsb
rcl
mov
xor
cmp
sbb
mov
inc
fsub
roll
out
pop
xor
mov
aas
in
jle
ret
popf
or
cli
out
and
inc
test
or
mov
fistpl
push
push
sbb
add
jne
inc
cmp
cmpsb
stos
nop
aam
mov
inc
xchg
test
into
divl
sahf
xchg
mov
mov
data16
idivb
mov
jno
xor
push
mov
ficoml
je
rcll
mov
jns
insb
notl
add
add
pop
out
icebp
mov
adc
xor
lea
ret
xor
int
mov
clc
xchg
pop
xchg
jnp
adcb
cmp
pop
adc
adc
ss
sbb
cmc
outsl
dec
push
sub
arpl
fcoml
fmuls
and
jle
jle
imul
mov
cmpsl
sbb
sub
or
arpl
adc
inc
jmp
cs
push
hlt
and
int3
sbb
xorb
xlat
cmpsb
add
stc
adc
pop
xor
icebp
add
cli
sbb
ds
insl
cmp
clc
push
lahf
in
aam
fsubs
jno
add
decl
adc
pop
je
xor
in
into
mov
aam
cwtl
mov
movsl
cmp
int
fwait
movsl
inc
and
test
outsb
in
inc
loopne
add
push
out
push
cs
or
pop
cmp
sub
add
testb
aad
insb
push
mov
repz
outsl
imul
ss
scas
dec
mov
nop
fnstsw
push
jp
enter
and
add
mov
mov
adc
dec
adc
lret
enter
pop
add
test
test
lea
test
and
cwtl
sbb
repz
enter
lods
out
testb
or
pop
in
cmpsb
insl
in
out
jmp
lcall
stos
sti
out
dec
stos
pop
pop
xchg
xchg
cmp
xor
pop
xor
pushf
push
jl
push
push
or
in
mov
test
test
push
and
les
sub
sub
add
ja
sbb
add
ja
aas
in
inc
sahf
adc
test
sbb
sbb
outsb
pop
adc
insl
fsts
add
push
mov
jb
xchg
mov
xor
mov
out
sbb
push
cmp
filds
or
sub
sarl
outsb
test
dec
mov
jns
sar
xchg
dec
inc
push
sbb
push
jns
lret
adcl
sub
movsb
in
xor
jns
nop
jb
pop
shrb
sub
addr16
cmc
hlt
mov
ljmp
inc
cmp
add
xchg
push
mov
mov
push
push
mov
push
ret
lods
outsl
xchg
mov
xor
imul
pop
sub
or
mov
pop
pop
incb
xchg
mov
cmp
dec
xchg
xorl
sbb
mov
insb
mov
jne
dec
dec
jmp
add
push
adc
movsb
test
aaa
aam
insl
inc
subl
insl
pand
shrb
call
adc
xor
mov
rcrl
inc
adc
iret
inc
je
pop
and
inc
mov
cmp
push
imul
push
out
stc
mov
imul
stc
and
mov
xchg
lods
test
insl
fwait
insl
xor
adc
add
add
jo
push
mov
jecxz
insb
daa
xor
dec
fs
sarb
jmp
jle
loope
cmp
addr16
mov
mov
pop
int3
loopne
cli
sbb
pop
ss
push
sahf
mov
dec
sahf
cmp
xrelease
out
idivl
or
pusha
mov
gs
dec
rcll
dec
jp
push
loope
jl
popa
cmp
inc
or
mov
or
xor
int
test
fidivrl
test
pand
inc
lcall
out
push
daa
decl
lahf
push
and
push
shlb
out
add
fisttpl
xor
jle
mov
pop
dec
adc
btsl
sub
test
repnz
jnp
xchg
dec
cmc
jae
iret
and
aad
dec
imul
and
jge
push
jl
adc
xor
loope
in
jbe
orl
cmpsb
mov
fnstenv
aam
repnz
xchg
int
mov
inc
push
mov
cld
shlb
sti
cwtl
jg
fldcw
pop
push
pusha
sbb
test
insl
ret
dec
push
dec
int3
sub
fucomi
cs
cmp
dec
add
or
mov
jnp
rcll
dec
push
repz
test
jle
push
aam
int3
stos
pop
in
cmp
lods
xor
jno
jnp
loopne
cmp
xchg
icebp
push
cvtps2pi
fwait
pop
sbb
aam
add
test
leave
inc
push
add
inc
cmpsl
bound
sub
mov
dec
and
ljmp
out
jmp
orps
dec
rcll
xlat
push
out
imul
imul
dec
and
ljmp
sbb
lcall
jmp
imul
scas
xchg
lahf
pop
enter
stc
jmp
pop
ljmp
mov
aaa
lods
cs
sahf
call
push
cmp
imull
ud0
inc
cmp
and
or
lock
xchg
das
lock
pop
jno
outsl
lock
pop
stos
sub
fisubrs
pop
xchg
sub
push
xorb
mov
pop
pushf
stos
sti
and
pop
iret
lods
mov
mov
mov
jle
fucom
jae
test
cltd
popf
push
aad
xchg
fstps
cwtl
push
mov
enter
jne
aaa
mov
pop
pop
add
testl
bound
sub
int3
and
sbb
insb
mov
fnstcw
push
xchg
cmp
int3
adcl
adcl
negb
sub
sub
inc
dec
jno
nop
push
mov
cmc
addr16
push
and
add
add
inc
mov
fcoml
dec
jae
and
inc
jle
cmpsb
lahf
jae
test
jge
aad
push
les
popa
adc
sti
jnp
out
shrb
ljmp
adc
adc
xchg
lret
fisubs
movd
xchg
push
add
shlb
rcrl
int3
leave
enter
pop
sbb
adc
fdivp
xchg
outsl
imul
add
mov
push
sub
xor
sbb
mov
push
xchg
jb
push
dec
popa
jp
outsb
pop
pop
ficoms
push
rorb
mov
loope
pop
sbb
xor
jmp
mov
xor
les
sti
ljmp
xor
mov
loop
addr16
nop
fcomp
ret
das
repz
outsb
add
sub
or
push
dec
jle
mov
fstpl
mov
jo
or
sti
mov
push
iret
stc
sub
mov
and
test
xor
sub
push
loope
inc
and
mov
nop
inc
into
out
popf
push
jo
mov
xor
pop
adc
ds
into
push
xor
sbb
lcall
push
pusha
cmp
push
test
cmpsl
fidivrl
cmpsl
and
cmp
xor
dec
cmpsb
cli
test
lds
adc
xor
xchg
pop
and
pop
add
pop
fistps
lret
lock
test
xor
into
pop
pop
cmc
into
mov
xchg
adc
enter
dec
mov
dec
cmpsl
repnz
lret
in
sub
enter
data16
ret
pop
xchg
cmp
mov
arpl
mov
addb
mov
rcr
cmp
and
mov
sub
and
mov
ja
or
dec
cmp
inc
jb
or
shlb
ja,pt
mov
mov
addr16
cmpb
hlt
movsb
in
in
mov
mov
and
push
xchg
inc
shl
push
outsl
mov
fadd
mov
xchg
lock
out
cmp
dec
pop
fsts
mov
inc
jp
adc
ud0
add
mov
aas
adc
inc
ret
jnp
cmp
scas
pop
lahf
int3
lds
cli
insb
jb
mov
jo
lret
call
push
or
xor
xlat
leave
jl
imul
aam
scas
pop
lds
xchg
clc
sub
shrl
jnp
test
pop
imul
mov
mov
int
jg
inc
test
sub
inc
imul
jle
mov
fstps
push
inc
mov
cli
xchg
pop
dec
sub
jae
inc
push
pusha
movsl
aam
scas
xor
les
xchg
jne
rorl
cmp
cmp
shll
fimull
repz
cmp
fnstsw
add
lahf
out
pop
jnp
lcall
dec
icebp
or
xlat
lock
mov
xchg
jae
cmovg
fisubl
lea
dec
rclb
mov
mov
cmc
popa
xchg
jnp
mov
pop
xchg
cmp
shrb
xor
std
inc
aad
adc
in
loopne
and
arpl
mov
dec
xor
add
cmp
outsl
fs
clc
inc
cmp
popl
add
lds
push
loopne
adc
mov
pop
cmc
mov
inc
cmp
insb
scas
mov
pop
xchg
aad
daa
cmp
xor
mov
mov
enter
mov
jb
dec
imul
popf
push
adc
aaa
push
add
sub
lcall
push
inc
jecxz
shlb
dec
subb
bound
in
xor
mov
push
inc
andl
inc
std
jbe
adc
pop
mov
inc
fdivl
rorl
test
sbb
rcrb
push
push
jnp
adc
stos
call
xchg
inc
dec
sbb
jne
pusha
std
sbb
xchg
adc
push
sbb
or
ds
mov
ficoms
call
mov
and
lods
mov
enter
imul
mov
push
lea
out
testl
add
ret
cmpl
dec
dec
enter
sbbl
xor
xchg
cmpsl
int3
pop
jle
jae
push
stc
rol
sub
repnz
mov
std
or
lret
jae
sub
divl
cmc
stc
pop
pushf
cmp
xchg
stos
fisttpll
xor
cwtl
dec
inc
xchg
movsl
mov
mov
mov
out
xchg
rol
divl
fstl
xchg
mov
fnstsw
mov
dec
xchg
push
jecxz
jb
sahf
ljmp
movb
dec
lds
pop
mov
loope
xor
dec
lea
and
push
mov
mov
fcmovnbe
rclb
dec
fidivrl
jmp
lock
ljmp
mov
jo
dec
mov
jnp
push
xchg
add
aas
mulb
scas
mov
in
rcr
rcrl
icebp
sbb
xchg
cld
xchg
movsb
inc
sub
sbb
fdivs
jnp
and
inc
in
arpl
jne
int3
lahf
aam
cmp
xor
fsubs
mov
cmpsl
xor
mulb
or
stc
subb
push
dec
adc
mov
cmp
test
fldl
pop
inc
xlat
imul
push
rolb
jbe
or
insl
pop
pop
stos
push
xlat
popa
sbb
sbb
push
pusha
pop
pop
adc
out
cwtl
enter
imul
inc
mov
frstor
or
and
adc
push
outsb
int3
data16
pop
cmp
popf
xor
pop
mov
ljmp
push
xchg
or
pop
icebp
adc
mov
imul
push
dec
cmp
xchg
imul
inc
push
out
stos
pop
in
jbe
dec
daa
cmpl
out
movsl
jbe
jne
add
imulb
inc
adc
or
mov
mov
cmp
pop
fisttpll
popf
mov
lock
andl
jge
or
in
mov
pushf
shr
mov
ja
lods
inc
arpl
push
add
cld
insb
cmp
dec
pop
lock
dec
shlb
xor
in
pop
es
jmp
fs
or
out
inc
and
sbb
cmp
jne
cmc
movsb
rorb
or
push
lea
fsubrl
sbb
inc
rol
sbb
or
js
into
rol
mov
movsl
dec
jmp
inc
mov
shl
xchg
mov
notl
push
sbb
push
rorb
pop
and
fxch
mov
imul
mov
ja
inc
mov
bound
loop
jb
xor
sbb
jns
lods
push
in
jae
mov
xlat
xor
in
mov
lock
or
fdivrl
xchg
pop
and
push
in
popa
aas
loope
mov
movsb
fsub
cmp
mov
mov
jb
xchg
arpl
push
in
dec
ret
pop
test
sub
aaa
loop
push
adcl
adcb
lea
bound
fwait
cmp
push
pop
movsb
push
cld
call
lods
sbb
sbb
mov
test
cltd
jmp
sbb
mov
lea
or
flds
dec
dec
mov
outsb
iret
ss
xor
loopne
dec
and
std
loopne
push
mov
push
cmpsl
addr16
pop
test
mov
xchg
repnz
loop
fs
rorl
and
addr16
enter
lods
pusha
sub
xor
cmpsl
sbb
mov
mov
pop
test
inc
xchg
xchg
test
sbb
aam
mov
xchg
adc
xchg
mov
in
cli
xor
pop
mov
fnsave
mov
js
icebp
fidivl
sub
or
subl
lret
pop
enter
and
jp
sub
shlb
leave
lahf
scas
neg
jne
dec
xchg
xor
push
in
pop
cwtl
or
inc
mov
lods
fldt
cmp
lods
sub
cs
bound
sbb
loopne
sbb
add
or
pop
inc
loopne
mov
mov
je
nop
jmp
mov
shll
cs
mov
popa
imul
cwtl
pop
sar
je
fsubl
push
or
addr16
mov
mov
lcall
loop
add
or
cmpsb
test
xchg
jp
addl
sbb
leave
shlb
in
jl
cmp
or
adc
dec
cmp
repz
pop
sub
xor
jg
popa
cmpsl
jae
test
lds
mov
cmpsl
sbb
movsb
push
shrl
xor
pop
cmc
cmp
mov
stos
inc
ret
jg
or
insl
cmp
mov
mov
fdivr
jns
mov
repnz
fistpll
sbb
xchg
fwait
mov
mov
cmp
mov
push
repnz
xor
mov
push
mov
pavgb
inc
stos
dec
mov
dec
repz
sub
into
js
sub
std
in
push
jnp
jge
pop
sbb
add
je
leave
pushf
add
xchg
repz
and
and
movsl
and
loope
in
sub
and
xor
xor
int3
ljmp
je
dec
js
and
cmpsb
xchg
pop
sahf
inc
popf
cmp
pop
xor
push
ret
add
push
mov
mov
dec
outsl
jne
dec
outsb
daa
ss
lcall
push
int
mov
stos
push
les
scas
xchg
cmp
sub
sub
xor
and
adc
mov
jge
cmp
sub
inc
sbb
pop
es
or
adc
into
mov
adc
inc
pop
dec
jne
test
push
ja
or
out
cmp
inc
pcmpeqb
or
stos
ret
daa
sbb
xor
arpl
test
fdivl
clc
into
leave
dec
inc
mov
adc
xchg
pushf
les
inc
jo
inc
xor
imul
push
cmp
push
repz
xor
jb
or
std
jmp
pusha
mov
iret
adc
setno
cwtl
stos
add
pop
out
aad
push
out
addl
lahf
push
int3
jg
pop
lods
movsl
dec
mov
leave
cmpsb
ds
cwtl
mov
aas
jmp
movsl
sbb
sarb
dec
aad
test
xor
dec
cmp
fldenv
pop
fs
scas
les
sbbl
mov
push
loope
pop
push
andl
iret
push
sbb
shll
nop
neg
xchg
dec
movsl
aam
mov
test
sbb
inc
mov
stc
stos
jge
out
and
lock
mov
dec
data16
pop
jl
pop
mov
idivl
popf
adc
jnp
ljmp
lret
jno
imul
inc
push
xchg
or
icebp
mov
fs
mov
mov
adc
popf
pusha
mov
es
stos
push
mov
adc
shrl
lods
add
xadd
roll
jbe
push
mov
adc
daa
jb
vandps
dec
stc
hlt
wrmsr
mov
inc
adc
fildl
rcr
mov
adc
insl
xor
mov
add
repz
pop
ds
or
cmp
fnstenv
gs
lret
addr16
stc
push
and
sahf
xor
or
and
push
adc
pushf
adc
mov
loopne
xchg
or
shlb
lods
repz
je
loope
incl
scas
xor
aam
cmpsb
es
cli
or
cmp
push
mov
adc
mov
inc
insb
outsb
mov
xchg
in
js
int
fcomps
imul
add
mov
pop
addr16
outsb
clc
dec
cmpsl
pusha
ljmp
mov
mov
sub
sub
pop
xchg
fcoms
scas
lahf
sub
jb
add
or
fsubrs
loop
mov
loopne
movsb
mov
xchg
rcrb
cltd
subb
lret
mov
inc
stos
sub
int3
cmc
mov
mov
sub
xchg
ret
jns
inc
inc
dec
sar
push
push
gs
xlat
xchg
add
inc
stc
add
cmc
sti
xchg
sub
mov
dec
jbe
dec
or
push
push
ds
bound
pusha
ret
sbbl
push
adc
sub
arpl
mov
setno
xchg
fcmovu
mov
scas
push
or
cmp
xor
xor
sub
inc
fsqrt
mov
call
jg
cmc
mov
sbb
aad
sbb
push
addb
cmp
rcll
xor
push
fimuls
cmp
fwait
cli
adcl
sbb
pop
mov
movsl
ret
and
ljmp
mov
sub
cmp
cmp
mov
or
pusha
ret
adc
add
push
insl
dec
inc
roll
sub
push
or
or
push
addl
xor
mov
cmpsl
sbb
dec
pop
rcll
fbld
andb
sbb
adc
lea
imul
add
popf
pop
and
add
cli
filds
sbb
or
adc
push
mov
aam
les
out
inc
vmovaps
push
dec
mov
pop
or
push
cmpsb
jecxz
enter
xchg
cltd
sub
ja
lods
or
xor
cmp
xchg
sub
mov
pushf
jns
dec
ret
xchg
rclb
stos
dec
sub
cltd
or
mov
cmp
xchg
movsl
les
lds
or
scas
mov
icebp
clc
jge
cmpsl
pop
add
pop
xorl
push
lahf
jg
mov
pusha
ljmp
out
cmp
insl
cli
testb
fdivs
adc
dec
sbb
and
loopne
aaa
cltd
addr16
jg
fmuls
inc
push
inc
mov
pop
loope
adcb
push
cmpsl
pop
and
stos
xchg
outsb
std
xor
add
mov
mov
sbb
cli
loope
dec
in
pop
sbb
shlb
dec
scas
in
ret
popf
aas
mov
mov
mov
lock
or
nop
lods
inc
data16
cltd
sbb
stc
inc
adc
roll
jg
imull
int3
ss
repz
movsb
cltd
ljmp
mov
xchg
repz
jle
movsl
mov
mov
xchg
mov
movsb
rclb
es
push
push
jo
and
fwait
xchg
ret
outsl
repz
jecxz
push
add
or
movsb
pop
push
test
lret
sub
mov
lods
into
filds
pop
sbb
stos
mov
or
mov
popa
jmp
mov
insb
popa
jns
into
and
and
jl
cmp
inc
pop
jecxz
sbb
enter
xchg
cli
xor
es
jge
sbbb
mov
pop
and
mov
and
lret
lret
and
or
xchg
fstp
mov
das
decl
or
sub
and
test
ret
pusha
push
test
les
inc
pusha
add
lods
xchg
sbb
and
faddl
xchg
jle
loopne
aad
fdivrs
in
xor
fstl
dec
xlat
lcall
leave
xor
xchg
xlat
mov
mov
push
loopne
test
sbb
or
push
fwait
adc
xchg
hlt
aaa
arpl
or
xchg
jp
and
cmpsl
sbb
cwtl
pop
test
arpl
inc
mov
mov
pushf
insl
push
inc
lds
push
lods
dec
stos
pop
adc
jge
popa
int3
mov
stos
sahf
mov
mov
push
fs
or
mov
loopne
add
std
test
repz
js
jmpw
jno
mov
or
push
rcpps
scas
shlb
or
cmpsl
jp
sbb
lahf
mov
xor
mov
clc
je
lret
bound
lcall
fcoml
mov
jg
lahf
push
xchg
lahf
dec
pop
mov
mov
mov
sbb
fwait
or
mov
push
fists
pop
jo
ds
dec
das
xchg
mov
jecxz
stc
test
xor
and
std
mov
test
mov
cld
sub
or
ret
mov
daa
les
jmp
bound
inc
inc
jge
lea
add
inc
dec
jmp
daa
je
sti
mov
test
js
jmp
testb
push
mov
in
pop
daa
xchg
lahf
push
dec
and
jne
cwtl
jb
in
mov
pop
cli
xor
pop
pop
add
mov
enter
dec
ss
adc
test
adc
cmp
mov
sbb
jge
jge
fildll
add
xchg
bound
fldcw
jbe
or
rorb
enter
enter
sbb
enter
add
xor
xchg
ficoml
jl
sahf
mov
ret
inc
scas
jne
and
js
aad
xor
ficoms
notb
jnp
test
dec
adc
jb
pop
ljmp
sub
pushf
add
popf
out
cmp
in
pop
scas
or
clc
fidivrl
sbb
cmc
and
pusha
test
push
arpl
fldl
sub
fcoms
shlb
pop
rcrl
push
rorl
mov
and
inc
pop
scas
das
movsl
stos
mov
dec
mov
dec
lea
cmc
lcall
dec
xor
jo
mov
int
jne
sti
mov
mov
lcall
pop
int
mov
jbe
adc
in
fs
mov
jb
popf
jge
jl,pt
pop
cmp
repnz
sbb
mov
jae
loopne
mov
mov
adc
pop
xor
mov
xor
insl
nop
cmpl
pop
push
mov
aas
repz
push
loop
jg
cmc
je
addr16
inc
add
push
jecxz
movb
in
fcmovnb
pop
out
jnp
lods
or
mov
mov
xor
loop
sar
push
dec
or
outsl
mov
xchg
dec
mov
pop
popa
popa
xor
imul
bound
mov
inc
mov
idivl
in
repz
movsl
dec
sbb
pop
lock
xchg
xchg
jnp
cld
test
test
test
outsb
imul
hlt
into
adc
xlat
test
and
mov
into
pusha
inc
pop
mov
test
jns
loope
repz
mov
jle
xor
and
daa
inc
sub
popf
mov
sub
xchg
sbb
loop
add
loop
add
cmpsl
sahf
dec
imul
and
push
rorb
jbe
lods
test
jge
mov
jne
sarb
pop
jle
cltd
js
dec
sbbb
jb
aaa
sahf
push
lret
fisubs
mov
sub
sub
inc
and
notl
leave
ret
cmc
mov
jmp
in
and
loopne
adc
xchg
dec
add
pop
mov
xor
stc
pop
xchg
cmpsb
add
inc
cmp
adc
fcomp
sahf
je
mov
les
sbb
pop
sti
mov
jo
mov
fstps
sbb
incl
fs
movsl
mov
inc
lcall
aad
push
mov
sub
jecxz
add
fisubs
sbb
ds
ficoms
out
sub
add
lds
test
leave
pop
mul
bnd
lods
and
scas
mov
loopne
ja
cmp
push
in
subb
xchg
aaa
fisubrl
jmp
jecxz
push
dec
sti
inc
mov
loop
inc
arpl
aad
push
and
jno
arpl
pusha
adc
or
jne
pop
sbb
mov
mov
xchg
psubb
jle
push
mov
and
add
sub
mov
add
add
fdivs
inc
shl
jmp
sub
mov
das
iret
sub
es
ret
les
cli
sub
movsl
int3
pop
add
xchg
or
addr16
sbb
jb
mov
out
movsl
jae
mov
mov
pop
nop
mov
mov
test
mov
xor
and
adc
aam
loope
test
dec
shll
jg
inc
rorl
push
mov
ficompl
adc
sub
and
in
or
xchg
push
cmp
mov
out
hlt
sub
inc
cmp
cmpl
adc
inc
scas
fisubrl
outsb
dec
call
sub
and
inc
enter
inc
cld
test
cmp
dec
push
test
jne
sub
lea
fildll
fimuls
sub
mov
test
mov
jns
xchg
jecxz
mov
or
sbb
movsb
jle
in
push
sbb
jb
dec
sbb
jbe
pop
jbe
add
movsl
push
or
mull
aad
mov
xchg
adc
add
ret
rorl
mov
imul
sbb
jb
dec
ret
ds
rcr
nop
ds
mov
dec
push
mov
aaa
fldcw
in
jg
and
pop
jnp
mov
jle
test
aaa
shrb
sbb
shlb
imul
push
andb
rcll
sbb
jmp
sarb
jo
cmp
add
sub
sub
cmp
xor
addb
mov
xlat
xor
jmp
mov
sub
cmpsb
test
loope
js
xchg
popa
ds
and
popf
dec
dec
hlt
aad
jmp
loopne
cmpsl
bound
xchg
loop
mov
push
fsubrs
scas
rolb
pop
mov
cli
dec
inc
cmpsl
cwtl
ljmp
mov
mov
push
or
in
lret
das
in
nop
pop
or
fdivrs
inc
add
fwait
aam
loopne
cmp
lcall
aas
into
xor
add
bound
sub
jp
je
cmpsb
dec
jmp
aaa
sbb
xchg
dec
push
adc
inc
push
cli
movl
out
sbb
pop
sbb
or
outsl
push
repnz
jns
leave
out
adc
rolb
sbb
dec
sub
es
int3
out
lods
pop
stos
pop
dec
xchg
mov
mov
push
pusha
mov
mov
test
sub
jnp
outsb
shll
inc
lahf
xchg
or
out
sub
mov
lods
cli
xchg
dec
aas
je
adc
add
pop
add
sub
das
out
cmp
ficoml
repz
pop
jbe
or
or
sar
fsubr
add
loop
jge
xor
sbb
into
popf
test
dec
and
jae
pop
pushf
xor
int
xlat
inc
mov
mov
sub
mov
jp
loop
scas
cmp
lret
fcomip
ds
fisttpll
loop
imul
insl
stos
xchg
sbb
adc
jno
aam
jg
aaa
or
lock
xchg
leave
jb
sbb
in
in
jns
jge
mov
mov
scas
test
ficoml
xchg
cmc
fisubrl
imul
lret
xor
adc
sbb
je
cmpsb
mov
icebp
jnp
pop
dec
stos
imul
negl
int3
fs
adc
xor
and
mov
stc
mov
xlat
cmp
rep
inc
mov
fwait
pushf
clc
popa
shrb
fwait
push
out
dec
lret
inc
mov
lock
mov
rcll
je
adc
sbbb
pop
arpl
adcl
add
jg
stos
mov
adc
dec
mov
out
mov
in
mov
add
and
dec
dec
les
mov
and
repz
or
outsb
insb
in
test
or
sbb
xchg
rcll
sub
mov
sahf
mov
sbb
add
jmp
in
mov
mov
add
push
jnp
fbld
cld
xchg
pop
or
loope
mov
push
fcompl
imul
mov
inc
lea
mov
cmpsb
fcoms
sub
dec
sarb
inc
daa
mov
in
js
and
inc
repz
ljmp
sbb
hlt
dec
and
ficompl
cmpsb
scas
in
dec
int3
mov
mov
push
pop
in
jmp
jecxz
pushf
out
xchg
leave
rcl
push
adc
jae
push
shl
pushf
pushf
push
les
in
or
call
mov
into
fisubl
test
mov
outsb
jg
lret
sbb
xchg
dec
int3
cwtl
mov
in
movsb
inc
fidivl
icebp
imul
adc
cmpsb
pop
push
mov
clc
pop
dec
arpl
mov
xchg
jne
fbstp
xor
not
push
into
dec
inc
fldcw
dec
sahf
mov
jne
imull
or
inc
cmc
xchg
inc
sub
test
mov
lock
mov
xchg
movsl
inc
inc
cmc
push
fmul
arpl
imul
test
pop
mov
imul
sti
stc
arpl
pop
test
lea
movsl
push
mov
cmpsl
enter
inc
test
lds
jae
sub
xchg
add
iret
xlat
andb
cmpsb
mov
mov
add
mov
std
pop
push
in
and
aaa
and
sbb
inc
fidivrl
lcall
fisttpl
data16
mov
xchg
or
dec
lret
outsl
mov
fidivrl
dec
cmc
fwait
mov
xchg
test
mov
roll
arpl
aam
icebp
xor
mov
jnp
dec
dec
sub
fcmove
lds
xchg
outsl
data16
aaa
cmpsb
push
out
cmp
call
dec
testb
adc
iret
push
inc
adcl
mov
rorb
imul
notb
loop
adc
mov
out
adc
inc
jb
out
rorl
xchg
repnz
mov
int
ret
ret
mov
mov
xorl
popl
mov
js
mov
jmp
stc
and
push
add
or
test
mov
int
jo
xchg
jae
mov
std
ror
mov
stos
mov
popf
sti
lret
imul
cmp
jecxz
xchg
ljmp
lahf
dec
daa
arpl
fsub
mov
sbb
jecxz
jp
xor
subb
sti
jb
lahf
lods
mov
mov
push
sahf
push
insl
movb
sbb
mov
jle
xchg
out
pop
loop
sarl
jge
xchg
jbe
adc
mov
in
ss
push
push
adc
add
sbb
sbb
fwait
das
xchg
lcall
lds
dec
jbe
jnp
xchg
dec
add
aaa
js
mov
call
sub
xchg
mov
aam
mov
mov
xchg
fnstcw
and
imul
pop
clc
push
lock
cmp
dec
iret
shlb
sub
adc
push
adc
iret
xor
pop
adc
pop
cwtl
adc
in
stc
mov
inc
jl
ljmp
jae
ds
je
aam
mov
jbe
push
mov
mov
mov
mov
out
and
add
cmp
xchg
das
lods
push
inc
loope
mov
push
dec
push
xchg
inc
into
jne
mulb
outsb
imul
gs
mov
pop
jno
repnz
call
divl
test
shll
sbb
fcoml
push
mov
sbb
pop
and
inc
xchg
repnz
sub
in
xchg
mov
dec
flds
sub
xor
inc
push
fsubrs
lret
xchg
push
sahf
call
push
fwait
xchg
ds
push
bound
sbb
xchg
push
pop
push
idivb
mov
inc
test
loop
lcall
shll
adc
jnp
in
dec
std
lods
in
sbb
inc
mov
out
jns
jmp
mov
rol
or
loope
movsl
or
clc
add
push
lret
pushf
mov
jl
insb
data16
adc
imul
dec
mov
adc
out
notl
mov
arpl
push
icebp
cmp
xchg
aam
test
sbb
pop
or
sub
out
or
jmp
jg
mov
clc
push
xlat
jle
mov
jg
sub
xchg
cmpsl
stos
and
out
outsl
nop
pusha
pop
and
out
notl
push
mov
pop
into
jg
in
test
xor
inc
rcrb
sub
adcb
scas
dec
mov
ljmp
negb
pop
pop
rol
test
adc
neg
incb
cmpsl
stos
dec
pop
push
loop
dec
aam
add
scas
mov
dec
pop
enter
popa
loope
mov
shll
fs
mov
xchg
sbb
cmpb
and
xor
call
pop
dec
xor
mov
pop
add
pusha
loope
push
pop
fdivs
insb
fstl
cmc
add
out
cmpsl
fdivrl
jge
stc
ret
adc
in
jmp
dec
notl
gs
dec
outsl
std
mov
int
mov
push
bound
push
add
cmp
jne
loop
shrb
pusha
pop
fidivs
mov
stc
iret
movsl
xor
loopne
sarl
ret
jmp
xchg
inc
mov
push
out
testb
and
loop
sub
inc
cmp
aas
repz
add
inc
and
cwtl
les
push
pop
test
xchg
cs
dec
push
cmp
mov
stos
testl
int
inc
mov
pop
jae
push
inc
cli
pop
adc
dec
push
jmp
out
pop
mov
mov
and
pop
jb
in
test
dec
push
aad
or
loope
dec
mov
mov
and
repnz
sbb
push
xchg
clc
out
pushf
push
mov
stos
push
push
xchg
mov
add
rcl
xchg
fnsave
pusha
mov
int
das
mov
mov
std
and
in
jo
mov
sbb
sub
dec
iret
mov
repnz
les
stos
jge,pt
cld
les
add
push
push
outsl
test
xchg
mov
adc
xchg
in
mov
cmpsb
sbb
add
mov
out
stos
jmp
inc
in
push
nop
pop
xchg
sbb
cwtl
cmp
mov
mov
mov
ffree
test
inc
in
ljmp
xlat
sbb
mov
cmc
cmp
sub
test
arpl
or
inc
mov
sub
insb
das
dec
scas
insl
test
xchg
cmp
imul
adc
bound
adc
movsl
insl
mov
mov
insl
or
mov
call
pop
jmp
test
mov
mov
add
push
dec
jge
mov
cmc
sbb
pop
push
test
cmpsl
sub
clc
sub
sbb
push
push
dec
ss
and
outsl
jns
mov
clc
in
shrb
shrl
dec
in
test
sbb
xchg
test
cmp
and
mov
dec
mov
gs
lds
xchg
lret
repz
retw
fdiv
sub
sbb
pop
or
adc
in
bound
ss
jmp
fldenv
fmull
sub
loopne
xchg
mov
mov
and
pop
lahf
sbb
fildll
mov
loop
sbb
shll
in
fidivs
push
xchg
in
adc
push
fcoml
pop
mov
pop
jbe
fmuls
xlat
pop
xor
inc
pop
outsb
test
mov
cmpsl
sub
les
mov
mov
xor
hlt
pop
jecxz
pop
and
shlb
div
push
insb
test
mov
test
mov
cmp
cmpxchg
jnp
inc
rcrl
push
sub
rorb
cmpsb
add
sbb
in
into
leave
jns
sbb
rclb
cmp
pop
aad
stos
inc
xchg
mov
or
inc
mov
push
lods
call
icebp
shll
adc
ret
insb
mov
fdivl
ror
fwait
pop
shufps
dec
pop
xor
inc
mov
pushf
fucomip
push
adc
sub
movsl
or
add
ss
jo
pop
add
mov
sub
mov
mov
xchg
xchg
xor
inc
std
xlat
movsb
adc
stos
adc
push
nop
ret
pop
mov
sbb
lock
lret
fcmovnb
sbb
pushf
xchg
mov
cmpsl
or
xor
dec
xor
in
stos
dec
jecxz
and
cld
loop
nop
scas
dec
mov
mov
dec
mov
push
or
loopne
mov
and
adc
cmp
dec
xor
xorl
push
adc
and
push
mov
dec
mov
xor
test
ss
jae
insb
sahf
imul
into
test
repnz
int
cmp
stc
xchg
lods
imul
cwtl
push
pop
mov
mov
xchg
sub
clc
jg
add
sbb
sbb
movsb
dec
push
test
ja
sbbb
scas
out
movsb
mov
ds
stc
mov
in
pop
arpl
jne
sbb
pop
jno
aad
push
outsb
addl
fnstcw
pop
push
lcall
out
or
clc
mov
insl
fcmovu
push
cmpsb
lret
jp,pn
scas
and
nop
dec
fisubl
mov
jne
ss
xchg
mov
pop
fildll
lahf
lock
push
addb
xchg
out
fbld
bound
mov
cmp
add
add
in
dec
cs
stc
ljmp
cli
rorb
inc
fmulp
popf
mov
pop
insl
clc
loop
and
lret
jnp
xchg
mov
sub
cld
fcmovb
mov
inc
shll
dec
pop
push
mov
mov
pop
popa
mov
fcoml
xorl
push
push
pushf
pop
pop
xlat
and
cmp
pop
pop
add
sbb
pop
push
add
push
imul
push
mov
ss
inc
add
rorl
or
scas
data16
rcl
stos
andb
clc
push
lret
adc
ljmp
mov
jp
mov
lds
popf
fisttpll
je
test
xchg
lret
xchg
pop
ljmp
cmp
aad
cmp
lods
ret
add
out
cli
cmp
jp
mov
xchg
adc
cmp
adc
push
cmc
dec
xor
mov
clc
lods
js
push
pop
adc
jge
aas
arpl
sub
cmc
lahf
push
jge
push
sub
scas
add
sub
movsb
and
sub
fs
cltd
jg
mov
jl
bswap
jp
inc
xchg
mov
sbbl
and
dec
push
enter
or
int
mov
fucomi
jnp
or
adc
stc
push
lret
mov
pop
mov
mov
outsl
mov
cmc
mov
sub
insb
mov
mov
into
insb
fcos
jnp
push
out
test
enter
mov
fidivs
adc
popf
sbb
popf
xchg
insb
cwtl
adc
adc
jecxz
popa
pop
cmc
push
xor
mov
pushl
xlat
lock
push
loop
adc
mov
mov
loopne
lock
cmp
mov
scas
mov
lahf
inc
ret
decl
jb
and
sbb
add
xor
jl
jne
fbstp
cmp
int3
shl
push
and
push
enter
push
add
lret
jne
int
inc
jge
jnp
fcomps
or
popa
divb
mov
add
cmc
xor
add
fsin
jno
sbb
sbb
sub
sub
jae
push
fwait
xlat
iret
adc
lds
push
sub
lret
stos
shlb
mov
dec
repnz
popf
add
or
cmp
movsb
jo
ss
stos
mov
inc
dec
sub
sub
lcall
lret
scas
sti
arpl
cmpsb
push
pusha
xchg
cwtl
rdtsc
mov
rol
jo
mov
add
leave
cmp
ret
sub
inc
xor
inc
sbb
loope
mov
or
xchg
ss
popa
sarb
mov
fistl
in
jno
adc
inc
add
sahf
dec
std
mov
jecxz
pop
lret
cmpsb
xchg
add
repnz
jne
pusha
xor
ret
push
add
aaa
outsl
xchg
test
sarl
orb
in
movsb
dec
mov
pop
pop
int3
inc
shl
pusha
sbb
test
mov
repz
inc
jb
cmp
shrl
rclb
inc
out
add
jp
call
fistpl
mov
mov
adc
adcl
fildll
push
adc
jp
jb
cmpl
loopne
nop
outsb
push
je,pt
js
cmp
xlat
lds
mov
hlt
stc
test
repnz
insl
dec
xchg
and
cmpl
ret
pusha
xor
aaa
aaa
pop
outsl
fsubp
add
inc
insl
mov
dec
idivb
adc
orb
js
sbb
pop
in
push
mov
inc
pop
sti
lea
je
mov
mov
aad
xchg
xchg
negl
adc
pop
test
adc
repz
popf
pop
out
jne
out
or
jge
cld
push
or
outsb
mov
sbb
mov
mov
mov
aad
sub
push
rcll
or
into
jb
jnp
jecxz
and
mov
xchg
add
jmp
testl
pop
push
rol
loopne
iret
out
jno
push
mov
mov
and
loopne
fnsave
mov
dec
addr16
mov
jmp
outsb
int
mov
xor
add
xchg
dec
clc
push
mov
jns
push
or
jp
mov
int3
imul
loop
inc
mov
out
push
pop
jne
imul
mov
push
test
pop
ficoml
pop
pop
repnz
mov
mov
xchg
inc
xchg
sub
mov
int
aaa
shl
movsb
push
xor
pop
fcomps
and
dec
leave
push
js
pusha
push
cmpsl
shlb
hlt
mov
mov
xchg
neg
mov
and
pop
dec
dec
ss
into
ja
push
lcall
cmp
int
sub
xor
lcall
push
mov
cwtl
es
leave
sbb
adc
shrb
xor
push
push
mov
mov
rcll
hlt
and
xchg
jl
dec
addr16
subb
dec
jno
js
aaa
or
push
mov
mov
js
ss
shll
ficoml
clc
adc
insl
cwtl
mov
arpl
lea
xchg
pop
mov
aaa
cmp
adc
mov
outsl
push
pusha
nop
jmp
inc
out
lds
jns
dec
js
popf
pop
out
jbe
lret
mov
or
mov
movsb
add
out
push
mov
enter
fidivrl
cmp
leave
mov
push
sbb
pop
mov
or
mov
les
jno
push
xchg
cs
icebp
movsb
adc
lock
nop
ffree
pusha
ret
ret
jns
sbb
scas
mov
and
mov
out
in
adc
movl
jge
stos
cmp
scas
in
pop
pop
lds
jecxz
mov
mov
xchg
xor
out
out
jb,pn
inc
xchg
movsl
mov
mov
inc
in
sarb
in
mov
mov
insb
pop
mov
adc
adc
pop
out
sub
mov
inc
scas
out
dec
xor
loope
pop
scas
pop
jb
jl
ret
into
repz
fbstp
dec
xchg
mov
imul
mov
arpl
loopne
add
mov
jecxz
xchg
push
jnp
xchg
push
add
dec
sti
jecxz
inc
xchg
push
add
cmp
js
jo
cmp
xchg
dec
pop
add
or
cmpsl
cmp
lock
mov
inc
push
ret
scas
flds
cmp
cld
pop
popf
iret
pop
leave
icebp
xchg
addb
push
mov
test
jns
xchg
jge
andl
inc
adc
mov
jle
ret
mov
inc
les
push
sarl
shl
or
jbe
and
mov
out
mov
popf
test
mov
clc
fnsave
inc
mov
mov
addr16
mov
inc
inc
xor
rolb
fimull
shlb
arpl
lcall
mov
pop
jo
push
mov
movl
add
fs
jg
jbe
pusha
aaa
xchg
lahf
cmpsb
sub
or
push
int
out
cltd
test
loope
mov
push
cmpsl
data16
sbb
out
sub
rcl
rorb
inc
mov
das
popa
icebp
andb
and
mov
lcall
xchg
inc
xchg
psubsw
inc
and
movsl
iret
std
addr16
rcll
xchg
mov
test
add
jno
cmc
mov
notb
repnz
cmp
push
add
aad
stc
xlat
iret
dec
sub
test
cmp
jae
mov
out
aad
sub
into
fs
mov
pop
mov
sub
hlt
lods
sbb
dec
xlat
pop
dec
jecxz
inc
push
dec
mov
popf
and
mov
leave
xchg
xchg
jbe
rol
jg
dec
mov
and
push
mov
andb
ficoms
xchg
btsl
mov
and
repz
xor
dec
sbb
addr16
cmp
sbb
iret
lahf
ja
cli
ja
xor
jmp
jno
xor
fisttpll
jnp
repnz
fisubrl
subl
push
push
sub
addl
pop
jmp
fwait
xchg
mov
xor
mov
pop
das
adc
inc
adc
les
or
addr16
fucom
imulb
mov
insl
adc
nop
cmp
rclb
scas
pop
nop
inc
mov
out
test
lret
xor
push
stos
insl
cmc
aaa
pusha
jbe
pop
xchg
pop
adc
dec
sar
jecxz
jl
jnp
mov
sbb
int3
mov
les
out
aas
test
inc
ds
jmp
add
pop
lret
jle
jae
jmp
out
stos
mov
int
loop
xor
mov
lcall
inc
bound
sbb
or
dec
mov
xor
push
mov
loop
mov
rorl
nop
or
lods
xchg
cwtl
movsbl
iret
push
sub
mov
add
push
push
mov
mov
in
mov
pushf
insb
jb
in
pop
pop
dec
movd
ja
std
sub
adc
fiadds
movsb
out
add
test
std
sti
es
shll
sti
int3
pusha
adc
aad
jbe
test
push
mov
mov
xor
outsb
cli
add
dec
mov
xchg
push
incb
call
int
aad
mov
popa
mov
add
pop
out
push
rclb
movsb
cmpsl
sub
sbb
inc
imul
mov
movsl
in
fcom
xchg
icebp
lock
aaa
orb
inc
in
lret
aaa
aaa
rclb
rorb
je
mov
push
sarl
enter
sub
add
movsb
jl
int
jne
jns
shlb
jns
add
mov
add
mov
movsb
sti
lahf
push
lock
pusha
mov
in
imul
jnp
adc
test
add
repnz
in
mov
sbb
pop
dec
lret
nop
xorl
jnp
andl
inc
aas
jbe
mov
int
mov
loop
add
daa
mov
and
sbb
mov
push
mov
inc
or
push
dec
popl
test
mov
xchg
jl
cmp
scas
inc
sub
lahf
ja
aam
adc
std
adc
xor
fcomps
aaa
mov
jns
jmp
decb
into
loopne
adc
pop
push
and
int3
int
jb
xchg
xor
pop
mov
or
mov
test
pop
jns
shrl
jge
jbe
enter
or
cmp
stos
sti
inc
mov
sub
jo
orb
dec
xchg
jnp
mov
dec
add
lcall
mov
rcr
jne
xchg
or
xchg
lods
aad
or
push
pop
xchg
sahf
dec
aas
xor
loope
outsl
int
mov
and
pop
push
mov
inc
into
add
mov
aas
movsl
mov
mov
sbb
outsl
sbb
mov
inc
adc
xchg
pop
mov
sub
aas
xor
jbe
sbb
mov
ljmp
iret
sahf
jo
loopne
or
imul
cs
mov
hlt
inc
cwtl
leave
insl
aas
stos
dec
fucompp
push
dec
jmp
mov
js
or
push
sub
dec
mov
lret
push
ja
and
mov
push
xlat
andl
stos
test
scas
push
stos
gs
push
lds
jo
out
je
sarl
lcall
pop
mov
enter
addr16
lock
sub
pop
pop
lret
hlt
aas
dec
add
ja
xor
stc
mov
push
pop
rol
push
clc
jge
leave
inc
adc
cmp
icebp
aam
mov
out
cmp
gs
or
push
mov
lods
jle
jl
std
in
xchg
fcmovnb
mov
xchg
into
mov
push
fsubr
sub
into
mov
inc
testb
jp
cmpsl
sarl
dec
rclb
fcmovbe
and
sub
cmp
cmp
outsl
dec
and
imul
xlat
inc
repnz
popa
xlat
jae
sbb
nop
mov
add
pop
or
das
xchg
dec
mov
sub
sub
jmp
add
or
push
mov
testl
jne
sti
cmpsb
daa
xor
add
or
in
inc
pop
cmpsl
add
dec
pop
cmp
inc
mov
or
sarb
daa
lcall
loop
mov
inc
xchg
mov
and
lock
out
cmp
dec
mov
ret
loop
and
in
sub
lret
cmp
xchg
je
lret
ljmp
dec
enter
inc
std
cli
pop
out
jnp
mov
lds
dec
and
sub
scas
adc
jo
stos
fs
not
cmp
dec
mov
or
sub
push
add
sti
pop
loopne
mov
adc
je
inc
jns
loope
data16
jecxz
sub
mov
dec
jnp
orl
cmpsl
sbb
rclb
mul
popa
xlat
xor
shl
xchg
add
jbe
push
ljmp
or
jb
jg
sbb
sbb
push
dec
xor
mov
orl
les
andl
jp
into
cmp
scas
gs
adc
sti
adcb
dec
jnp
pop
roll
jmp
cmp
into
cmpsb
in
daa
pop
jle
mov
cmp
add
jg
jp
xor
stos
jne
pusha
nop
iret
iret
mov
mov
pop
or
pop
idivb
and
pop
sbbb
adc
sub
mov
sahf
ja
adc
mov
cwtl
xor
push
dec
rorl
and
sbb
pop
adc
push
outsl
insb
mov
sub
inc
jecxz
ss
cmp
loope
mov
inc
pop
push
mul
push
rorb
xchg
sub
dec
loopne
add
test
sti
lret
daa
cs
cmc
sbb
xor
cmp
insb
lret
add
ds
mov
cwtl
mov
pop
sub
inc
push
in
inc
dec
cli
and
mov
fstp
mov
adc
ret
mov
push
adc
movsl
sub
cmova
les
jns
and
pop
xor
pushaw
push
jnp
mov
cmp
into
mov
lock
xchg
test
mov
lods
mov
cmpsl
xor
lret
iret
shlb
add
or
inc
and
js
push
stos
adc
jge
fcompl
shlb
popf
jecxz
sub
xor
mull
jmp
insl
xor
pop
add
mov
clc
mov
imul
adcl
add
roll
stc
adc
jae
mov
ja
repnz
in
movsl
into
and
jns
enter
aaa
inc
dec
test
mov
xchg
inc
jecxz
pop
mov
cld
pop
pop
fsubs
xor
ds
add
pop
push
mov
cmp
adc
insb
pop
lahf
sub
xor
pop
nop
in
jns
dec
fs
in
dec
adc
mov
aad
fistpll
dec
loop,pn
dec
fmulp
hlt
hlt
fisttps
inc
js
pop
xchg
sbb
xchg
mov
pop
pop
xor
out
pushf
sbb
adc
data16
xchg
out
mov
xlat
push
adc
sub
push
cmpsb
jmp
loopne
mov
repnz
and
dec
rorb
int
in
in
adc
xchg
push
push
mov
mov
adc
lods
fs
inc
jecxz
add
sbb
sahf
cld
loop
mov
enter
dec
scas
out
pmulhw
add
pop
pop
xchg
and
inc
jnp
arpl
push
inc
call
mov
push
ss
adc
or
mov
outsb
cmp
inc
fidivrl
fimuls
out
adc
pusha
cmp
sahf
or
scas
and
fcoml
jne
mov
dec
sahf
lods
jb
icebp
fisttpl
les
nop
loop
call
cmp
mov
lds
sbb
xchg
jl
dec
loope
cld
gs
mov
imul
cmp
pop
aaa
dec
cmpsb
jl
sub
cmpsb
mov
mov
ret
ss
lea
cltd
mov
pop
inc
gs
gs
sbb
test
jp
aam
jo
mov
out
fwait
fwait
in
sub
pop
adc
shlb
cmpsb
add
mov
hlt
add
xchg
daa
loop
xchg
and
adc
out
ss
into
int
add
inc
jne
push
fdivrs
xchg
cli
shrb
imul
sbb
mov
jb
data16
and
shrl
rcrb
cmp
gs
jmp
imul
sbb
jns
rclb
fsubrl
lock
lods
mov
ja
test
xchg
fwait
punpcklwd
push
mul
sbb
jle
out
lret
stos
and
mov
xor
inc
fs
push
es
shlb
lret
outsb
testl
dec
movsl
fldt
das
cmp
out
repnz
jl
and
xor
js
addb
pop
in
mov
shr
mov
sbb
pusha
mov
outsb
inc
loope
xchg
insb
in
sbb
cmp
dec
popf
add
jno
push
pop
add
sub
push
mov
sub
repz
push
jne
pushf
sub
ficompl
nop
or
lods
repz
push
jecxz
into
mov
mov
xor
jl
mov
scas
loop
mov
sub
pop
dec
xor
sub
cltd
mov
mov
xor
enter
mov
iret
ljmp
negl
movsl
lds
leave
xlat
fcomip
mov
push
pop
fdiv
dec
push
adc
pop
jbe
mov
ficoml
ljmp
pop
inc
sahf
xor
cmp
adc
jno
rol
aam
and
xchg
in
push
bound
push
xchg
in
mov
repz
push
clc
jns
mov
xchg
mov
movsl
sti
and
sti
pop
test
sub
xchg
pop
int
inc
cmp
adc
lock
mov
push
push
xchg
xchg
nop
leave
sarb
dec
xlat
inc
mov
int3
clc
xchg
sti
pop
and
movsb
or
loopne
pop
ds
into
jge
mov
pop
loope
js
test
inc
xchg
cmp
push
shll
lcall
ss
cltd
inc
dec
sbb
add
jo
or
shrl
sub
cmc
xor
mov
loop
in
cmp
lods
fnsave
sbb
xchg
out
dec
enter
insl
sahf
jge
stos
int
cmpsl
xlat
cld
shl
movsl
jle
mov
call
xchg
or
mulb
xor
push
lock
cli
sub
and
mov
outsl
dec
sbb
adc
pop
loop
mov
inc
dec
std
inc
cmc
insb
jae
mov
test
pop
fisubrs
or
adc
std
mov
sub
ror
les
lcall
push
and
hlt
pop
push
es
out
push
js
mov
adc
inc
mov
cmpsl
or
mov
in
adc
jp
lret
mov
add
loop
fstps
cmp
lret
dec
jecxz
lods
mov
sub
fdivrs
xchg
cmp
ds
add
mov
call
cmp
jo
imul
call
or
inc
push
or
xchg
pop
arpl
sbb
lods
sub
cmp
inc
pop
xchg
adc
jne
and
push
dec
icebp
mov
push
std
out
pusha
scas
mov
mov
sub
insl
cwtl
in
xchg
lcall
inc
fwait
xlat
push
mov
push
sub
jbe
les
hlt
dec
call
mov
loopne
xchg
mov
lahf
movsb
subl
test
xchg
popa
notl
movsb
pushf
dec
call
int
iret
addb
or
mov
jl
push
push
scas
out
push
inc
ja
cmp
xchg
cltd
lcall
repnz
mov
clc
mov
sub
pop
or
xlat
mov
repz
lret
mov
js
sbb
add
dec
test
jno
pop
cmp
arpl
pusha
leave
mov
enter
jne
cmp
aad
xchg
test
aaa
lods
mov
dec
push
repz
pusha
xor
ljmp
aam
insb
xlat
xor
std
ficomps
pop
lods
les
inc
inc
xor
xor
push
jmp
dec
out
das
xchg
movsl
cmp
hlt
adc
jp
mov
imul
rcr
mov
dec
and
lahf
dec
in
cmp
call
adc
pop
iret
clc
or
test
sub
xchg
shr
mov
js
mov
jge
fstpl
or
pusha
ljmp
pushf
repz
sbb
les
arpl
dec
ret
int
xchg
sbb
mov
ljmp
adc
ljmp
jle
ss
call
inc
cmp
dec
dec
aas
xor
push
jecxz
dec
xor
clc
pop
ret
clc
xchg
test
xor
popa
sub
mov
arpl
adc
add
mov
add
out
mov
repz
cmp
mov
fisubrl
dec
aad
lahf
mov
inc
movsb
clc
lea
mov
sub
push
daa
mov
cmp
add
sub
sub
orb
scas
cli
into
and
xor
pop
cmpsb
inc
adc
or
mov
adc
call
cmpsb
pusha
xor
sarb
jae
jns
pop
pop
cld
dec
pushf
rol
movsb
cltd
cmp
xor
lret
pop
jb
pop
xor
sbb
orb
lret
test
in
sub
mov
mov
roll
in
mov
adc
jle
in
and
pop
xchg
repnz
adc
fldl
call
stos
mov
xor
jbe
popa
and
xor
ret
ds
pop
push
hlt
add
sbb
outsb
inc
outsb
mov
mov
loopne
add
repz
jae
mov
shlb
ja
mov
ja
add
rolb
iret
adc
mov
addr16
mov
sub
cmpsl
cmp
add
pop
lods
outsb
inc
or
pop
or
mov
pop
add
mov
inc
add
pop
ja
les
inc
push
or
lds
dec
lahf
iret
xor
mov
ja
jbe
test
cmpsl
shrl
mov
inc
gs
in
les
sub
or
lret
mov
fcom
lds
gs
bound
cmp
jne
fdivl
push
sbb
sub
std
test
sahf
mov
outsb
testb
mov
mov
movsb
xor
jp
inc
insl
xchg
adc
sti
xlat
rcrl
int3
mov
aaa
mov
lcall
xchg
sbb
subl
adc
ss
xor
adc
push
into
jno
xlat
xor
push
cmc
scas
cmp
fildll
add
ss
mov
roll
and
jne
mov
push
mov
push
jp
jae
pop
cmpsl
ljmp
in
jbe
sub
and
roll
daa
int
and
stos
or
jl,pt
push
loop
sub
sbbl
mov
ret
mov
pop
daa
ret
xor
mov
icebp
pop
lods
int3
jg
sub
sahf
fldlg2
fcmovnu
inc
sar
cmp
cwtl
fs
sbb
jecxz
pop
out
sti
test
into
mov
xchg
sbb
add
adc
adc
add
test
cmp
fwait
ret
nop
jle
mov
xor
sbb
and
xchg
jle
xchg
jbe
pop
cmp
ja
jae
enter
je
adc
ljmp
mov
cmp
mov
add
lods
add
dec
dec
jnp
cmp
sub
cld
mov
sti
mov
jl
mov
and
cltd
sti
leave
aas
pop
mov
ss
push
xchg
int
pop
cmc
cmpsl
pop
mov
xor
mov
cld
xor
pop
ss
xchg
scas
or
sti
ja
lcall
pushf
inc
movsl
adc
test
sarb
lret
shr
stos
sbb
lds
mov
xchg
push
icebp
sub
sub
int3
or
cltd
into
aaa
adc
mov
arpl
subl
xchg
jmp
adc
jecxz
repz
or
pop
mov
push
sub
and
mov
jne
jno
mov
xorl
mov
jl
test
adc
mov
or
aaa
mov
lea
pop
xor
iret
out
mov
mov
pop
pop
test
inc
dec
mov
loopne
jmp
daa
pusha
push
dec
sti
fwait
cmp
sar
in
iret
hlt
enter
mov
aas
sbbl
call
insl
lock
xor
js
or
fiaddl
pop
add
loop
push
push
inc
jmp
imul
cwtl
scas
ja
xor
push
imul
push
mov
mov
adc
scas
shr
cmp
frstor
or
loope
xor
into
aas
xchg
sbb
mov
cmp
aam
sbb
mov
push
movsb
dec
sbbb
jbe
or
ds
sub
test
loope
or
movsb
mov
and
into
or
cld
hlt
subb
inc
pushf
lods
stos
sbb
loope
xchg
shl
push
xor
xor
es
xchg
in
and
cmp
sbb
cmc
inc
cmp
pop
xlat
adc
and
adc
inc
pop
and
mov
aad
sub
pop
mov
pushl
andb
addl
jns
push
es
pop
pop
bound
cmpsb
shl
xchg
push
sub
andb
bound
mov
sbb
in
into
mov
test
clc
add
idiv
mov
shr
sub
nop
push
rcl
sub
js
xor
xor
mov
lcall
cld
xchg
adc
dec
dec
shl
fwait
sbb
mov
jae
inc
decb
aaa
mov
lret
test
lods
je
mov
int3
xchg
xchg
and
in
sub
aas
int3
or
mov
mov
inc
pushf
cld
cmpsl
or
mov
jns
out
cmp
in
mov
adc
jne
inc
mov
jnp
nop
scas
aaa
jnp
fdivs
sbbl
addb
adc
mov
xchg
and
or
lock
aam
int
pop
fiadds
mov
cli
xor
fisubrl
inc
sbb
inc
int3
pop
push
fucomip
xor
leave
jnp
mov
fnsave
test
cli
and
mov
mov
xchg
sbb
aad
cli
and
or
jg
adc
push
and
lds
mov
ret
push
xbegin
mov
pop
mov
lahf
or
in
pop
je
insb
cmp
in
dec
aam
repnz
mov
xchg
flds
pop
jne
jle
xchg
push
dec
xchg
daa
add
outsb
sahf
adc
notl
arpl
sarl
sub
mov
je
stc
push
daa
jle
add
dec
ja
or
das
add
xor
mov
push
mov
cwtl
ljmp
aam
jge
inc
xchg
pusha
xchg
add
push
shll
dec
scas
mov
imul
xor
orl
add
dec
jne
mov
shlb
in
ret
sbb
mov
js
cmp
in
mov
or
jl
std
lahf
cmc
js
mov
cmp
xorb
mov
mov
mov
xor
fbld
movsb
cld
out
cmp
and
mov
out
jle
movsb
push
push
out
jmp
shrl
sub
in
movsl
in
adc
ss
popa
sbb
mov
lahf
fdivrl
xchg
mov
add
pop
lret
in
aaa
lock
push
clc
push
sub
addb
inc
jne
les
lds
stos
mov
lret
add
mulps
in
cmp
arpl
add
fsubl
push
div
call
ret
into
mov
adc
adc
js
in
mov
aaa
mov
adc
xchg
scas
add
testb
jbe
lods
arpl
shll
in
and
movsl
pop
add
les
xchg
cmc
sub
loope
mov
scas
repz
sub
sti
jp
fisubl
shlb
sbb
dec
faddl
clc
cmpsl
sbb
and
leave
adc
ret
mov
cmpsb
jp
or
leave
mov
scas
inc
hlt
fmul
addr16
xchg
cs
add
cmp
lea
gs
pushf
adc
adc
xor
aam
cltd
mov
jo
pop
pop
mov
mov
outsl
stos
adc
xchg
xchg
push
sbb
pop
ja
inc
cltd
in
or
mov
jae
pop
add
dec
sti
inc
shr
lahf
push
cltd
inc
fwait
add
fmuls
lahf
mov
push
fldl
and
mov
and
lahf
jbe
rclb
lea
and
enter
xorl
stos
test
mov
outsb
add
sub
mov
cmc
cltd
outsb
cmp
iret
lea
lahf
and
or
sub
call
mov
pop
mov
mov
mov
mov
xor
in
clc
cmp
mov
icebp
loopne
das
mov
push
je
or
adc
pop
mov
mov
adc
test
orl
pop
add
arpl
icebp
mov
push
mov
jle
cmpsb
pusha
inc
mov
int3
aam
cs
pusha
push
xchg
add
cwtl
xchg
out
push
cmp
cmc
movsb
nop
mov
and
push
or
cmp
pop
sub
out
mov
sbb
pop
mov
rcr
pshufw
add
in
mov
inc
adc
dec
ja
test
inc
jmp
pop
mov
xlat
mov
imul
adc
sbb
pop
cmp
inc
mov
sbb
rolb
push
pushf
jb
adc
mov
jns
pop
int3
leave
enter
cli
mov
cmp
testb
testb
insb
cs
add
aam
dec
adc
cmpl
push
inc
adc
dec
iret
jmp
fcmovu
mov
xor
push
mov
imul
mov
das
cmp
pop
out
popa
sbb
adc
adc
cmpsl
push
fldenv
xchg
xor
pop
mov
adc
cmp
scas
fistpll
mov
jge
jnp
xlat
fwait
out
test
out
iret
mov
sti
fsubl
ret
sbbb
in
pushl
push
jg
lods
rol
jno
or
fistpll
mov
loope
and
mov
sbb
and
in
loope
lahf
xchg
int3
mov
addr16
mov
outsl
out
outsb
lcall
in
scas
inc
mov
inc
leave
push
lods
ss
mov
cltd
sub
inc
mov
mov
mov
fcoms
mov
jo
xchg
into
push
shl
rcrb
or
and
sub
adc
sbb
movsl
push
loop
inc
out
mov
mov
sbb
stc
sbb
dec
push
scas
add
add
test
imul
bound
out
cli
pop
js
rorl
in
loope
sbb
fstps
cmp
nop
fmuls
xadd
arpl
cmpsl
push
insl
xchg
adc
insb
sub
mov
jg
lock
int
cmpsb
repz
pop
mov
jo
inc
pop
sub
daa
dec
mov
dec
inc
or
mov
push
fbstp
cmpsb
cmp
or
movsb
adc
mov
xchg
fisubl
fucomi
fwait
mov
pop
sub
lret
push
dec
out
mov
call
inc
mov
sbb
push
mov
and
in
pop
jmp
push
jo
cmc
add
jo
js
mov
xchg
cmp
pop
xor
pop
clc
pop
sub
shrb
adcb
jl
clc
std
or
shlb
test
inc
int3
xorps
iret
je
mov
out
shll
xchg
jmp
sbb
add
mov
push
xchg
sbb
loopne
ret
data16
int
xor
js
ret
mov
icebp
mov
jne
add
clc
pushf
fildl
jae
movsb
loop
xchg
cli
inc
jb
jbe
xchg
mov
test
sub
das
les
jne
xor
push
pop
dec
xlat
lds
sbb
add
cmp
jno
push
cmp
jns
cmp
ljmp
ja
mov
mov
mov
leave
cmp
in
pop
stos
aad
xchg
repnz
xchg
push
das
mov
jno
loop
in
jae
xor
loop
orb
stc
dec
sti
stc
xchg
add
inc
inc
pop
jns
add
sbb
and
aas
call
cmpsb
adc
jmp
sahf
outsb
xor
mov
push
leave
lret
mov
or
adc
std
loop
sub
mov
adc
push
add
lahf
mov
mov
popf
jb
jno
xchg
addl
std
pop
dec
call
add
outsl
adc
push
xchg
repz
inc
add
add
ss
jmp
ljmp
lods
leave
mov
cmc
iret
mov
stc
add
arpl
and
out
aas
xlat
call
sbb
cltd
xor
shlb
sbb
xor
cli
mov
ja
pop
or
andl
jp
jne
push
shrl
add
mov
sbb
dec
pushf
mov
into
movsb
scas
test
add
and
sti
mov
mov
jle
cmp
dec
jnp
add
pop
mov
jge
addb
out
mov
push
adc
cmp
dec
add
negb
jge
push
cltd
adc
add
in
pop
bound
out
sbb
dec
aad
sbb
daa
outsb
add
in
push
mov
insb
adc
ljmp
stc
mov
inc
pop
dec
orl
push
xor
rclb
pop
add
aad
fmull
mov
or
push
xor
or
mov
xor
push
aam
loope
add
sbbb
xor
pop
inc
in
sbb
xor
mov
push
shrb
outsb
xor
adc
jecxz
repz
add
sub
or
fistps
das
test
mov
mov
lock
repnz
cmp
inc
push
ret
rep
mov
test
or
mov
push
popf
les
and
dec
pop
testl
xchg
mov
jo
adc
shrb
mov
jp
repz
aas
push
inc
adc
imul
mov
or
les
cmp
cwtl
dec
push
imul
adc
sbb
or
jbe
testb
jecxz
movsl
in
sbb
nop
dec
add
pop
scas
int
pop
pop
mov
dec
roll
jb
insb
mov
mov
pop
mov
pop
insl
sti
mov
es
mov
or
js,pt
push
dec
scas
add
push
repnz
add
outsb
imul
popa
mov
xor
sub
subl
mov
jb
addb
data16
add
mov
xchg
jl
mov
jb
into
loop
fisttpll
lock
ljmp
xchg
jl
ret
jns
nop
stos
js
or
testb
pop
loope
xchg
jnp
imul
cmp
cld
push
push
adc
add
or
loope
lds
xor
cmpsl
mov
mov
test
mov
lea
cli
push
add
adc
addr16
nop
sub
fcoms
pop
test
dec
add
jg
shlb
lods
pushf
and
rorb
mov
pop
cltd
push
fcmovbe
dec
gs
iret
push
lods
std
aad
mov
das
cmp
mov
test
xchg
imul
xor
call
jb
sbb
xor
scas
jo
popa
fildll
enter
int3
clc
shrl
mov
xor
pop
adc
fiaddl
in
mov
scas
lods
adc
incb
and
jmp
stc
imul
mov
mov
jne
ret
and
pop
pop
sbb
lock
jmp
cmpsb
sar
gs
in
fwait
ror
and
mov
push
std
aam
scas
mov
jbe
push
mov
sub
jne
loop
popa
mov
push
lret
push
adc
sub
pop
adc
ret
or
jg
fsubrl
fistpl
stos
andb
cmp
rclb
pop
mov
sbb
adc
inc
lds
xor
sbb
lahf
jno
xchg
jp
mov
sar
or
mov
test
mov
and
out
sahf
js
nop
loope
test
mov
push
movsb
iret
jp
mov
inc
dec
jecxz
out
sub
das
jmp
adc
ss
or
dec
aas
dec
add
push
xor
imul
loop
push
xchg
cmpb
xor
out
sbbb
repz
cli
cmp
std
mov
jg
cmp
cltd
mov
xor
ljmp
push
inc
out
out
in
pop
sub
add
rorb
xchg
call
popf
popf
data16
dec
pusha
rol
fistl
movb
dec
mov
fcomps
cmp
jne
push
push
jl
adc
or
scas
adc
xor
daa
mov
cmpsl
adc
cld
enter
adc
pop
inc
sbb
xchg
pop
loopne
cmp
sbbl
sbb
push
inc
pop
push
shll
dec
ja
fs
sbb
jmp
mov
mov
mov
je
loop
negb
les
pop
cwtl
int
js
inc
mov
into
sbbl
and
negb
out
stos
test
fcmovbe
outsl
lcall
pop
scas
and
cmp
je
mov
add
mov
fnstsw
cmp
frndint
lds
and
std
bound
in
loopne
sub
stos
cs
pop
jp
jns
aaa
ficoml
es
cmp
adc
push
aaa
sub
out
push
in
and
cmp
movsl
push
aas
mov
adc
lret
bound
loope
ljmp
cmp
fisubl
mov
outsl
subb
pop
xor
xchg
call
js
scas
test
dec
xchg
addr16
adc
aad
mov
out
cmc
pop
mov
cmc
sub
dec
push
ss
lods
test
mov
xlat
jo
stc
inc
mov
add
bound
in
or
cli
lea
rol
cmp
jg
pop
mov
sub
adc
es
sub
push
gs
sub
sti
and
jmp
sbb
test
movsb
cmpl
sbb
xchg
in
pop
test
jg
fsubl
xchg
shufps
sbb
xchg
aas
dec
imul
xchg
idivb
or
outsb
lret
popf
mov
push
int3
jg
sti
mov
shrl
sarb
mov
pusha
iret
jnp
leave
test
test
push
fbstp
enter
cmp
sbb
mov
pop
cwtl
das
icebp
sbb
inc
push
dec
addr16
mov
jmp
xchg
jo
inc
loop
mov
test
mov
in
cli
sbb
push
mov
push
add
popf
pop
loop
push
pop
fwait
sbb
push
mov
add
rcrl
imul
pop
mov
sbb
dec
mov
push
dec
ret
mov
xor
sbb
adc
lods
outsl
repz
sbb
test
jl
popa
lahf
inc
dec
jle
inc
mov
ljmp
outsl
mov
jns
mov
inc
pop
adc
adc
enter
sbb
sub
int3
dec
mov
xor
cmp
mov
loope
mov
mov
mov
pop
ss
add
jnp
ljmp
xchg
mov
popf
out
in
adc
mov
push
mov
hlt
adc
xor
mov
fld
rcl
push
movsb
mov
fldenv
enter
jns
rorb
ja
fsts
add
add
xchg
and
push
les
or
push
sbb
mov
jl
xchg
icebp
inc
fdivp
cmp
psubb
sbb
pop
out
mov
popf
mov
mov
sbb
pop
vunpcklps
arpl
shrl
push
mul
fsubr
fsubrl
dec
jae
divl
lcall
fidivl
addb
subl
inc
sub
stos
rcll
loop
and
adc
cltd
jns
and
pop
mov
int
jne
aaa
pusha
addb
test
or
mov
xchg
cmc
repz
inc
arpl
pop
add
mov
push
repz
add
hlt
ror
je
in
lds
enter
adc
pop
cs
mov
negl
ss
dec
jle
js
inc
rclb
fdivrl
int3
jns
cmpsb
aaa
leave
flds
sbb
push
sti
jne
rcrb
insl
cmp
sub
insb
sarb
addb
call
jp
jmp
sub
mov
cmpsb
xor
mov
test
mov
add
outsl
sub
cmp
outsb
adc
mull
repz
ljmp
mov
daa
pop
mov
sbb
lret
rorl
dec
lret
out
jbe
jecxz
push
sub
out
ret
mov
por
mov
aad
mov
es
jp
and
test
xor
repz
and
xor
mov
icebp
mov
adc
clc
jmp
push
jbe
outsl
loopne
jmp
jns
outsl
filds
and
sti
rcl
icebp
or
ret
ret
sahf
fildll
imul
icebp
out
test
clc
push
inc
xor
adc
xchg
adc
test
cmp
mov
test
popf
test
sbb
inc
lret
movsb
test
jp
jns
push
mulb
dec
and
mov
pop
sbb
jbe
imul
cld
cmc
rolb
fcom
enter
fildl
out
add
daa
pop
loope
xchg
jge
dec
ljmp
dec
testl
test
imulb
xchg
test
lret
inc
lcall
dec
cmp
inc
xchg
dec
push
or
sbb
inc
add
fwait
and
push
lret
dec
pusha
push
arpl
cmpsl
arpl
inc
sbbb
xchg
out
ficompl
cmpsl
xchg
lret
and
movsb
push
sar
xchg
add
pop
roll
jns
pushf
mov
bound
jae
push
inc
fnstcw
push
jb
mov
faddl
dec
data16
cmpsl
mov
hlt
insl
jl
ret
push
bound
xchg
xor
js
cmpsl
sbb
out
fildl
lret
lds
fcompl
sti
out
out
inc
push
scas
inc
insb
inc
mov
or
out
mov
es
inc
lods
mov
push
xchg
mov
sub
std
adc
push
dec
add
mov
test
sahf
cmc
fisubrl
addr16
fbstp
outsb
add
loope
push
aaa
and
jne
retw
bnd
rorl
test
roll
out
out
in
sbb
aad
inc
lods
lret
sub
sbb
les
cmp
imul
sbb
add
dec
cmp
push
in
fidivrs
sub
or
mov
or
push
int
daa
xor
jno
jecxz
push
xchg
fucomip
pop
sarb
mov
mov
fwait
int
insl
pusha
in
in
mov
jg
mov
iret
arpl
adc
mov
add
mov
xchg
pop
dec
push
outsl
cmove
mov
mov
sbb
mov
pop
test
leave
mov
insb
mov
les
jl
scas
xchg
jbe
adc
stos
int3
pop
mov
je
mov
or
test
pushf
push
ds
or
test
pushf
loop
sbbl
sahf
pop
sahf
jnp
sarl
negl
jl
mov
sub
mov
mov
sbb
push
clc
sub
sbb
mov
push
inc
scas
clc
add
add
adc
arpl
or
stos
call
ljmp
sub
pop
mov
lods
js
sub
push
bound
icebp
lahf
and
cmp
sub
pop
mov
xchg
stc
iret
scas
push
sbb
stos
mov
jbe
inc
cmp
or
mov
aam
pushf
xor
lods
imul
movsb
jno
mov
jbe
sysexit
xchg
or
xchg
mov
sub
popf
mov
les
divb
dec
pop
outsb
imul
xchg
test
std
jl
pusha
jae
mov
cs
and
sbb
cli
repnz
push
in
movsb
lods
lock
mov
and
in
jns
mov
cmp
adc
add
iret
mov
xchg
insb
dec
push
xor
icebp
xchg
sahf
xchg
ds
into
xor
push
pop
jno
mov
cmp
bnd
cmp
inc
inc
and
cmpsl
imul
pop
ss
xlat
lret
inc
or
push
pusha
sarb
repnz
push
fninit
add
ret
mov
mov
stos
pop
bound
push
cmp
mov
outsl
ljmp
add
mov
push
push
or
dec
mov
jmp
xchg
mov
cwtl
xlat
pop
adc
shrb
cmp
sahf
xorb
jnp
inc
add
in
ss
push
outsl
push
pop
loopne
in
subb
mov
movsl
addr16
xchg
lahf
gs
add
mov
addb
aas
cmpsb
out
dec
xchg
xchg
lcall
ljmp
addr16
sbb
xchg
pop
pusha
fs
jge
mov
cmpl
in
dec
in
inc
cltd
movsb
dec
stos
shlb
movsl
cmpsl
mov
cmp
ljmp
enter
sbb
lea
movsb
paddusb
mov
cmpsb
cmc
mov
ljmp
mov
pop
dec
insl
pusha
movsb
pop
or
mov
jg
test
and
movsb
xchg
xor
into
xchg
adc
mov
outsl
lret
cltd
add
stos
inc
out
fistpl
lods
and
adc
pop
xchg
mov
repnz
sub
push
repnz
aam
shlb
out
or
pop
jg
jmp
lds
roll
push
les
inc
ret
push
mov
cmpsl
test
pop
fisttpl
and
sbb
pop
mov
cmp
jl
or
rcrb
adc
adc
mov
cmc
push
jge
mov
lcall
pusha
pop
movb
mov
mov
pusha
sbb
shrb
mov
mov
cmpb
xchg
add
sti
shrb
test
arpl
std
loop
call
rcrl
inc
adc
je
addr16
sarl
sbb
pop
adc
mov
mov
pop
imul
pop
stos
shrl
xor
leave
cli
clc
sbb
aam
fcompl
and
sbb
jnp
mov
pop
jge
mov
fs
dec
lret
push
ftst
mov
adc
xchg
and
hlt
sbb
adc
in
into
in
je
mov
sbb
mov
stos
mov
fs
ljmp
push
lock
popf
jmp
mov
leave
xchg
and
or
mov
jle
jg
out
mov
xor
nop
fistps
xchg
xor
jle
and
outsl
xchg
into
jecxz
popf
dec
pop
lock
sti
jne
ret
cld
test
fcmove
in
int
mov
fisubrl
cli
adc
pop
cld
cwtl
sti
sbb
lret
les
and
out
jns
pop
sbb
ja
sbb
shll
add
mov
xlat
sbb
inc
xchg
divb
adc
xor
mov
jle
mov
lcall
or
dec
and
sub
push
sbb
mov
dec
rcl
cmp
xchg
aad
pop
pop
aad
movsb
std
es
inc
pop
adc
jge
push
push
cmp
sbb
aaa
mov
test
add
icebp
fcompl
sbb
out
arpl
xor
loop
in
mov
mov
adc
addr16
and
pop
out
cmp
jge
dec
xor
inc
xor
out
scas
push
dec
xchg
xchg
mov
sbb
fdivrs
mov
jnp
sbb
xor
rclb
mov
cmp
inc
movsl
mov
int
gs
jge
and
sahf
call
or
sub
in
stos
pop
xchg
sub
pop
mov
outsl
jl
inc
out
xor
jne
cmpsl
add
jg
icebp
mov
rorl
out
jb
push
out
mov
stos
mov
adc
adc
imul
stos
iret
ror
or
dec
bound
push
push
insb
pop
dec
mov
mov
in
xlat
xor
cmp
cld
sub
add
sub
sub
shrl
xchg
jb
cmp
mov
es
xor
cmpsb
arpl
cmp
adc
dec
sub
sbb
add
xchg
jmp
inc
call
movsl
nop
fucomp
pop
xor
inc
sti
icebp
xchg
stos
xor
pop
repz
mov
xchg
dec
push
xor
mov
mov
stos
lods
icebp
inc
sarb
call
xor
add
ss
and
xchg
jno
mov
push
xchg
dec
cmp
push
and
fstps
ret
adcb
repz
sti
lods
dec
shl
and
adc
daa
fadds
push
push
lock
mov
mov
aam
cmp
cmp
es
dec
inc
sbb
mov
mov
pop
ljmp
cmp
mov
mov
ljmp
pop
aas
cmp
xor
loopne
add
dec
lahf
dec
in
xlat
aaa
orb
sarl
inc
es
xchg
loope
mov
addl
pop
xor
mov
mov
push
mov
jno
xchg
mov
push
xchg
dec
push
or
sbb
fildl
icebp
pop
xchg
loop
add
out
pop
test
test
jns
lret
rcrb
xchg
xor
jo
add
aad
or
push
fdivs
les
push
xchg
jno
test
jmp
test
cld
in
in
pusha
push
inc
jl
xchg
scas
movsb
fbstp
push
sub
sbb
sti
xor
mov
jbe
mov
xchg
out
imul
stc
sub
std
sbb
mov
dec
stos
push
sub
test
pop
lods
dec
stos
push
sub
mov
out
ds
adc
xchg
mov
insb
cmp
test
test
loope
or
test
pusha
and
cmp
mov
dec
pop
insb
cmp
xor
imul
and
xchg
inc
daa
push
cmpsl
scas
lahf
pop
popl
je
xlat
mov
fisubs
into
push
adc
mov
stos
push
popa
vmovapd
xor
sub
sub
push
and
into
scas
into
call
jns
cmpb
int3
js
into
test
pop
mov
sbb
mov
mov
jo
mov
pop
cwtl
fbld
xor
jo
fs
lret
stos
inc
sti
push
call
fstps
add
xchg
jle
sti
add
mov
or
cmp
or
pop
incb
aad
push
lcall
add
sbb
fists
das
test
mov
nop
rol
inc
cmpsl
push
test
push
pop
test
sti
mov
jno
popa
filds
int3
lods
push
push
testl
mov
cmc
test
mov
movb
in
call
addb
js
or
fldcw
fs
repnz
jo
lds
mov
enter
mov
imul
daa
sbb
xor
sub
loope
add
inc
jne
stos
hlt
adc
hlt
fsubrp
sub
pop
ds
mull
aad
arpl
fcmovnbe
add
sahf
mov
push
call
pop
cli
sbb
add
ret
rclb
mov
or
cmpsb
lds
pop
pop
mov
xor
loopne
push
cmpsl
dec
or
or
rcrl
jne
lcall
out
imul
cmp
std
test
jns
pusha
fidivl
std
push
jmp
sbb
movsb
adc
xchg
lret
xor
mov
ret
es
in
pop
scas
repz
int
mov
vmread
test
xor
jg
xchg
xchg
dec
cmp
lods
js
sub
or
test
mov
out
cs
mov
mov
push
loopne
push
dec
mov
pop
cmp
aad
pop
xchg
sarl
mov
mov
mov
mov
shrl
push
into
js
xchg
add
or
push
arpl
js
xchg
or
das
sub
inc
jp
push
xor
mov
repnz
xor
sub
js
cs
dec
imul
jmp
stc
xor
push
scas
or
lea
cwtl
push
ret
orb
jecxz
popf
insb
icebp
xor
inc
xchg
fisubs
sarl
cmp
neg
cmp
inc
adc
rcll
stos
mov
cmp
mov
dec
inc
mov
popa
mov
pop
dec
xchg
pop
xchg
or
sbb
push
decb
sti
push
mov
lock
outsl
flds
inc
nop
pop
cwtl
and
insb
mov
xchg
or
loopne
jns
fstpl
jp
mov
sub
jge
inc
and
sahf
xor
stc
out
push
inc
leave
fs
mov
test
sub
or
and
and
add
ljmp
test
inc
xchg
push
test
in
mov
pusha
sub
dec
dec
xor
inc
add
nop
test
push
je
pop
jno
add
ja
pop
mov
sbb
stc
scas
push
scas
hlt
pop
ret
jge
icebp
jns
es
jb
jge
repnz
addr16
outsb
xchg
cmp
imul
xchg
scas
push
sbb
pop
leave
out
lods
stos
cmp
aad
int
xchg
loopne
idivb
jns
jnp
fmull
jns
xor
loope
and
pop
in
shlb
and
jp
xorl
sti
push
insl
popf
pushf
adc
lahf
daa
repz
cld
and
notb
popf
shll
jb
sub
call
call
mov
scas
outsb
xor
in
dec
ret
lds
sbb
xchg
popf
mov
test
dec
add
js
mov
cltd
mov
cmp
lret
into
sbb
fdivl
and
ficomps
adc
aaa
jo
mov
repz
push
cmp
mov
jae
xor
test
mov
test
jp
mov
pop
mov
stos
adcl
pop
std
repz
or
sub
or
mov
outsl
negb
addr16
jno
jo
lods
mov
cltd
call
sub
cmova
push
stos
je
lock
or
js
mov
lret
lods
call
les
pop
clc
subl
cli
mov
ss
call
mov
mov
out
mov
mov
leave
inc
cmc
or
push
int
bound
repz
add
aaa
jmp
int
dec
cmpsl
call
js
mov
cmp
lock
in
mov
add
mov
adc
shl
sti
arpl
cld
scas
icebp
fldl
call
jge
nop
fidivs
fsts
out
mov
or
loopne
adcl
dec
pop
jae
mov
cmc
xor
ret
clc
in
xor
sbb
mov
subb
pop
pop
adc
and
sub
xchg
outsb
jbe
stc
imul
js
mov
xor
ljmp
leave
inc
jbe
push
mov
addr16
cmp
push
addr16
loope
xchg
les
loop
pop
sub
sbb
andb
stos
repz
sub
cmp
jl
or
mov
inc
push
popa
bound
sub
xor
stos
jmp
icebp
cmpsb
not
arpl
mov
ficoml
cmp
pop
xchg
dec
sbb
outsl
pusha
mov
lods
ret
inc
push
add
push
lds
divl
loope
faddl
enter
vmwrite
or
sub
push
aas
pop
in
shrb
push
aam
loopne
adc
jae
dec
jno
pushf
fwait
movsl
js
fucomip
xor
lahf
add
mov
xchg
and
xor
ret
cmpsl
daa
out
pushl
mov
insb
shrl
lock
addr16
mov
pcmpeqd
push
ss
jb
enter
fnstenv
mov
pop
sub
mov
lahf
xchg
faddl
and
or
in
jmp
rorl
xchg
push
call
mov
in
int3
jl
mov
push
xchg
sbb
sub
les
xor
mov
pop
in
mov
les
mov
xchg
jnp
adc
scas
jmp
roll
mov
xchg
xlat
jl
push
gs
pop
dec
push
cmp
add
cmp
mov
cmpsb
test
dec
push
push
outsl
pop
sub
mov
jne
pop
dec
das
aaa
xchg
and
dec
mov
adc
xchg
jns
jg
aaa
loopne
pop
out
gs
cmp
scas
fidivl
cmp
aam
and
xor
sbb
movsl
loope
mov
mull
push
xor
sbb
jg
cld
mov
lret
repz
jae,pt
pusha
xor
sub
stos
das
and
xchg
sbbb
stc
int3
jo
xor
mov
daa
das
xchg
xchg
clc
or
cs
sub
pop
xor
mov
sub
and
push
adc
das
loope
xchg
jg
adc
int3
pop
dec
mov
ret
stos
outsb
mov
jbe
dec
cmp
inc
mov
or
in
pop
pop
or
mov
sub
rcll
push
xchg
cmpsb
dec
les
loop
daa
loop
imulb
pop
pop
mov
in
cwtl
sbb
mov
xbegin
adc
popf
mov
inc
sahf
and
scas
sub
inc
test
imul
pop
inc
lret
sbb
jno
xchg
adc
stc
xchg
push
xor
mov
cmp
sub
push
ret
mov
xor
fs
pop
lods
sti
add
cwtl
divl
sub
add
jg
pop
adc
cmpsb
sub
ficoms
dec
push
adc
out
or
or
xchg
repz
cltd
dec
mov
pushf
cltd
clc
sahf
shll
push
sub
sar
in
loopne
pusha
jmp
decb
jmp
dec
jge
stos
iret
iret
mov
outsl
hlt
call
lahf
rorb
jp
sub
pushf
enter
popa
adc
adc
add
gs
xchg
cmpsb
jecxz
data16
push
aad
aas
ret
jp
push
pop
in
jb
push
sub
or
adc
shrl
arpl
das
mov
test
jl
inc
adc
cmp
les
jne
mov
inc
cwtl
adc
cmpb
scas
dec
add
addps
sahf
mov
lret
pop
fwait
push
ficomps
int3
mov
das
aam
repnz
test
mov
out
stc
mov
lds
dec
movsl
or
dec
insb
add
idivb
pop
push
int
sbb
inc
pop
dec
inc
mov
test
cmp
lret
sub
scas
jno
inc
dec
test
pop
fidivl
xor
fcoml
mov
lods
in
mov
arpl
int3
cmp
mov
xchg
sub
jnp
sbb
popf
out
icebp
pusha
leave
sbb
dec
push
cli
jle
aaa
xchg
inc
or
test
lock
cmp
in
mov
adc
lock
loop
sbb
jne
sub
mov
test
mov
mull
movsb
inc
lock
cmp
cmp
push
or
fdivs
test
mov
enter
and
jnp
xor
into
aaa
rcl
fnstsw
xchg
outsl
sub
pop
notl
adc
pop
and
sbb
sbb
inc
xor
inc
push
loope
and
fadds
or
cmpsl
or
push
fistpll
dec
nop
or
fisubs
nop
mov
mov
add
mov
shl
sub
idiv
and
sub
sbb
jg
andb
imul
inc
sbb
jo
cmp
outsb
ljmp
lret
loop
mov
aam
jbe
add
cmp
lahf
stos
dec
scas
jb
lcall
jb
xor
jno
das
fwait
aas
pop
pushf
jae
jno
jb
add
stos
dec
mov
rorl
cmp
dec
jp
or
jno
fisubrl
pop
roll
clc
pop
dec
mov
fbstp
ficoml
jbe
dec
or
flds
xor
stos
adc
xor
ret
cmp
add
mov
addr16
loop
lea
jle
mov
or
mov
sbb
cmp
inc
push
sbb
adc
pop
xchg
call
inc
mov
mov
filds
ljmp
adc
mov
xchg
ret
lcall
lahf
dec
ret
mov
adc
pop
push
dec
shrb
jle
push
daa
ljmp
sub
mov
movsl
ret
test
mov
shlb
dec
mov
inc
push
jns
inc
adc
iret
lret
dec
jle
in
test
pop
rcrb
mov
cmp
lock
sub
arpl
sbb
lea
cltd
test
xorb
ja
cmpsl
lret
in
leave
push
cld
mov
lea
rcr
outsb
jp
mov
int3
jmp
push
loop
addr16
cmp
dec
push
dec
sti
jb
clc
std
imul
sub
sbb
or
mov
shll
jbe
ficoms
sahf
lock
inc
subb
mov
sti
ljmp
jnp
inc
cli
push
jbe
das
xchg
pop
mov
lret
addr16
jge
out
mov
sahf
fmull
inc
ja
outsb
mov
std
ljmp
movsb
addr16
aas
pop
push
push
jbe
les
orps
and
sbb
stos
mov
lods
push
mov
rclb
sti
pop
scas
mov
mov
ljmp
sbb
data16
jno
pop
sub
push
daa
mov
mov
push
pop
fwait
push
leave
cmpsl
ljmp
dec
mov
push
sub
ds
and
out
mov
ja
lea
cmp
adc
in
cli
ret
pop
insb
dec
out
aas
mov
dec
mov
mov
or
in
xor
jp
adc
lock
push
scas
cli
imul
aam
fisubs
jp
fcmovbe
gs
insl
cmp
out
pop
sbb
xor
pop
mov
idivb
rcl
fxam
cltd
pop
xchg
adc
int3
push
xor
fnstsw
and
jbe
loop
xor
test
adc
pop
pop
es
mov
mov
test
enter
ret
or
add
mov
inc
mov
inc
jl
je
or
ljmp
fs
rorb
stc
cmp
jne
fwait
sbb
je
call
or
das
add
aas
add
push
adc
dec
sbb
popl
cmp
xchg
jo
pop
ljmp
mov
sbb
mov
sbb
pop
xor
in
or
test
inc
jmp
xchg
push
mov
shrb
push
adc
push
lea
ds
mov
xor
and
rep
incl
aas
pusha
loop
cmp
mov
inc
data16
cmp
lret
jno
xchg
shr
mov
lea
popa
repnz
jp
mov
fcoml
push
jmp
outsb
xchg
adc
xor
lods
or
lcall
or
icebp
sub
in
sahf
test
js
sub
add
in
out
fildll
pop
jnp,pt
inc
ljmp
pop
ja
fstpt
xor
inc
sub
or
ja
add
test
icebp
dec
rol
lcall
in
sub
mov
sub
or
lods
jns
lret
mov
pop
out
movsl
je
jns
lock
pop
ja
fs
enter
das
adc
cmp
scas
mov
mov
pop
imul
ds
aas
or
rorl
call
add
jg
dec
push
dec
add
adc
push
push
mov
xchg
pop
aad
pop
dec
pop
xor
loopne
ja
cltd
mov
or
pop
push
loope
push
aam
daa
das
xchg
jno
inc
push
adc
sbb
inc
dec
mov
int3
and
lret
cmpb
outsl
scas
inc
and
cmp
pop
xchg
ror
imul
insb
cmp
and
dec
xor
cmp
cmpsb
pop
repnz
popf
xchg
gs
pop
lret
ja
rcrb
fidivrl
xchg
ja,pn
xor
mov
bound
insl
cmpsl
mov
xlat
int3
adc
lods
mov
loop
lahf
mov
jbe
imul
pushf
sub
arpl
adc
mov
pop
inc
cmp
movsb
leave
xor
pop
fnstsw
and
filds
mov
sub
and
movsb
sbb
sarl
dec
popa
fbstp
mov
pop
or
sbb
cmp
xor
loope
scas
jae
lret
mov
and
xchg
or
call
outsl
jnp
repz
pop
adc
psraw
nop
popa
cmp
mov
xor
pop
movsb
mov
fsubrl
movsl
das
jge
test
xor
nop
ljmp
xor
rcll
push
jmp
and
inc
xchg
sahf
add
aam
roll
rclb
or
push
push
pop
mov
rorl
pusha
mov
mov
ret
lea
lea
movb
adc
leave
mov
aaa
loopne
jle
sbb
test
in
jg
mov
ds
popf
mov
mov
mov
cld
fdiv
pop
cltd
sub
ljmp
mov
inc
xchg
outsl
xor
sub
adc
xor
inc
push
mov
scas
cld
sbb
ret
mov
and
mov
adcb
jg
jmp
add
sbb
mull
dec
xchg
shl
cmp
ror
jno
jb
out
pop
push
cmp
int3
sti
sahf
sti
test
mov
xor
dec
into
aaa
lods
sub
mov
pop
jecxz
scas
loop
leave
pop
int
enter
js
lods
xorb
or
sub
out
adc
das
cmp
xor
jns
push
or
cmc
sbb
lcall
int3
dec
scas
addr16
cmc
cmp
mov
mov
push
bound
jbe
pavgb
or
cmp
fadds
or
fmuls
popf
fucomi
cmc
data16
es
cmpsl
adc
inc
fildll
xchg
lret
add
popf
decl
xlat
in
jne
mov
or
lret
inc
call
mov
into
ja
xchg
inc
mov
dec
jmp
jns
ss
scas
cmc
jmp
stos
int
xchg
cmp
inc
adc
dec
in
mov
insb
repnz
loopne
lods
pop
sbb
addr16
sub
jbe
inc
std
int3
cmc
cmc
jecxz
pop
mov
sub
xchg
stc
xchg
lods
push
imul
mov
popf
dec
inc
push
push
sbb
jae
cmp
lds
xchg
cmp
ss
cmp
mov
andl
sahf
mov
cmp
inc
clc
push
arpl
mov
fsubrs
or
xchg
xor
fsubl
adc
out
dec
jecxz
cmp
xor
loope
or
inc
mov
pop
or
lcall
jmp
mov
adc
push
mov
push
pop
enter
xor
addr16
pop
xchg
adc
inc
in
mov
and
mov
inc
lods
mov
js
shrb
pmullw
icebp
jmp
notb
jle
rolb
mov
jo
add
jge
pusha
and
add
mov
pop
lods
divb
and
clc
push
jmp
jbe
mov
aas
lds
dec
add
fnstsw
pop
ja
sub
xor
test
nop
and
imul
pop
sub
sub
mov
inc
in
add
movsb
hlt
cli
lret
mov
lods
pop
loop
or
jge
leave
movb
xchg
push
xor
outsb
mov
or
outsb
jmp
or
sbbb
or
je
or
dec
mov
adc
insl
and
cwtl
jecxz
sub
dec
lods
sub
pop
in
pop
outsb
mov
pop
aam
dec
cmp
jl
mov
out
mov
fisttpll
mov
inc
and
sub
mov
adc
pop
inc
scas
enter
cmc
pop
outsb
push
mov
add
jns
hlt
outsb
aam
mov
and
mov
fcos
and
out
insb
into
mov
add
mov
xchg
adc
int
and
pop
fwait
pop
jecxz
adc
cli
adc
jne
icebp
add
inc
push
jp
xchg
or
push
inc
cmp
ret
pop
add
lret
xchg
adc
test
cmp
push
cs
add
sahf
in
notl
imul
push
inc
movl
mov
cmp
push
push
in
push
cmp
cs
mov
notl
in
or
aaa
arpl
mul
dec
push
ret
inc
ds
xchg
dec
sub
pop
or
sub
ss
dec
pop
or
lods
xor
into
outsl
out
js
mov
ja
xchg
jmp
sti
or
cli
xor
insl
cmp
or
imul
out
sbb
cmp
sarl
sub
and
sbb
and
inc
jbe
andb
cmc
or
dec
cmpsb
add
rorl
and
push
adc
loopne
sti
jge
xor
sub
movsb
aam
dec
cld
gs
subl
lds
mov
lret
popa
ss
call
push
mov
sbb
mov
arpl
mov
xchg
mov
stc
mov
xchg
inc
xlat
push
scas
xchg
lret
and
push
out
mov
push
out
jmp
push
icebp
call
enter
xor
stos
pop
scas
loope
pop
sbb
mov
pop
or
sub
and
hlt
pushw
xchg
in
popf
and
xchg
dec
pop
rorb
popa
jb
stos
les
and
mov
dec
imul
nop
jbe
out
subl
clc
mov
mov
push
int
mov
adc
ss
mov
xchg
into
xchg
mov
fwait
sub
xor
aas
ljmp
rcr
push
sbb
push
xchg
sbb
clc
mov
popa
lods
add
fmuls
mov
mov
setp
sub
adc
or
aas
out
js
shll
clc
test
sub
push
out
in
stc
pop
xchg
cld
mov
xchg
aaa
push
mov
ja
imul
push
or
ja
ret
shlb
cmpsb
lcall
sti
fwait
mov
sahf
add
clc
xlat
iret
xor
xor
add
mov
test
addr16
or
fsts
sahf
pop
sbb
fiaddl
jo
subb
xor
and
and
sbb
dec
pop
mov
test
fcompl
xor
jmp
sub
adc
inc
iret
mov
jg,pn
inc
lods
cmp
jmp
iret
adc
lds
cmpsb
ret
or
push
popa
mov
jno
bound
inc
data16
jge
jmp
jp
test
xor
imul
cmc
cltd
cmovl
xchg
mov
popa
jle
es
andb
jnp
stos
cmc
std
cmp
mov
mov
in
adc
fs
jl
xchg
jns
and
popa
sti
data16
and
mov
sbb
sbb
testb
pop
bound
dec
les
add
adc
pop
sub
xor
mov
lcall
dec
inc
sub
mov
repnz
or
das
roll
scas
lea
push
sbb
add
nop
sahf
dec
shlb
adc
andl
pop
aam
movsl
mov
mov
sarl
mov
shlb
or
ljmp
cld
cmp
repz
aas
pop
fadds
loop
jne
outsl
lcall
jns
int
test
mov
inc
jmp
mov
gs
sub
ja
xchg
fmul
sub
int3
cmpsb
sub
dec
cmpsl
subl
testb
mov
jnp
mov
xchg
insb
inc
mov
pop
and
push
test
lret
lods
mov
icebp
enter
mov
cmp
sub
pop
mov
push
jmp
imul
pop
mov
fwait
dec
xlat
sbb
mov
push
das
inc
or
xchg
add
sub
mov
mov
or
rolb
daa
cmp
mov
add
sbb
sbb
pop
hlt
flds
test
and
xchg
sub
jae
notb
ja
lcall
fs
jae
inc
movsl
es
fidivrl
add
in
das
mov
leave
mov
pop
pop
xchg
shlb
es
sar
jl
jnp
or
sub
push
dec
dec
loope
pop
sbb
fwait
bsf
jecxz
data16
or
push
out
movsl
xchg
mov
jmp
dec
imul
adc
mov
sbb
ficoml
lret
ret
pop
adc
andl
xor
lea
aam
mov
lcall
mov
les
shl
notb
sti
mov
loopne
jb
sbb
call
sbb
clc
lret
sbb
pop
std
mov
stos
sub
jo
cmp
add
push
push
and
js
cmp
pop
iret
movsl
into
push
mov
dec
mov
ret
int3
push
and
out
mov
mov
or
push
mov
cmpl
pop
dec
sub
sahf
jg
dec
std
hlt
sub
sarl
pop
adc
inc
insb
out
sub
addr16
sbb
push
leave
xchg
shll
mov
fprem1
imul
dec
lods
pop
and
stos
mov
pop
sub
push
cmp
and
pop
cmp
aam
shrl
add
mov
clc
cli
xor
outsl
sti
lock
cli
adcb
movb
and
in
adc
jb
push
push
xor
test
in
mov
ret
adc
or
jecxz
jl
arpl
insb
mov
pop
mov
lret
addb
dec
ja
jns
jmp
lcall
inc
pop
push
insl
rcrl
or
dec
shrb
imul
inc
ret
inc
pop
xlat
or
pop
hlt
test
jle
adc
dec
mov
dec
sub
push
notl
pop
pop
jge
add
fnsave
data16
loop
jne
jo
xchg
out
cmp
call
push
test
enter
fs
or
loope
nop
jge
jg
cmpsl
mov
adc
pop
sbbb
call
mov
push
sbb
push
out
mov
adc
loopne
jnp
mov
sbb
push
rorb
movsb
into
outsl
movsb
fildll
xor
dec
pop
lods
sbb
aad
jns
cmpsl
jecxz
sub
adc
pop
fs
adc
mov
push
add
lea
sub
imul
adc
pop
lcall
push
cmc
addr16
sbb
mov
jne
jg
xor
or
push
je
mov
jnp
inc
cmc
fiaddl
dec
mov
dec
inc
dec
pop
out
push
test
rorl
mov
pusha
leave
inc
push
sbb
testb
out
jge
and
repz
fwait
lock
cmp
ljmp
xor
inc
sub
das
adc
add
jns
and
call
adc
sbb
push
add
add
scas
cmpb
mov
dec
sub
das
sbb
or
pop
cmp
cmp
data16
jge
push
popf
cmp
xchg
out
and
cmc
xchg
inc
sbb
inc
lods
lcall
or
and
cmpsb
ret
call
jbe
movsl
cmp
enter
test
test
jno
or
sti
xor
fbstp
dec
sbb
roll
xor
adc
clc
test
and
mov
xrstors
sub
ret
lret
sbb
ret
pop
fdivp
jne
sbb
xchg
sub
aas
jae
call
jne
mov
sarb
cmc
lret
out
mov
repnz
stos
cmp
in
add
sbb
cmp
gs
test
mov
lock
xchg
fsubrl
xor
fiadds
fdivrl
shl
push
xchg
out
mov
and
arpl
jmp
add
xchg
in
bound
shl
out
mov
push
xchg
add
jns
jb
aaa
fwait
xorl
xchg
in
adc
mov
in
push
dec
pop
mov
dec
adc
sbb
mov
pop
jb
jbe
mov
movsb
xchg
loope
jnp
dec
scas
xchg
mov
cmp
sbb
or
pushf
and
scas
adc
dec
adc
fbld
mov
fbld
inc
stos
push
mov
addr16
ja
jno
pop
testl
shl
cwtl
sbb
ja
mov
mov
mov
lahf
bound
outsb
jmp
mov
push
pop
xchg
mov
fdivl
push
cmp
stos
icebp
cld
repnz
ficoms
nop
jecxz
roll
inc
mov
mov
mov
pop
mov
mov
push
mov
xor
ss
jae
push
aaa
aas
or
sbb
test
ds
adc
push
or
or
mov
stos
adc
ljmp
shr
pop
jge
outsb
push
outsb
pop
in
jge
fdivrp
and
push
out
stos
xchg
xchg
sub
cld
inc
mov
outsb
imul
pop
mov
sti
aaa
rcrl
jl
loop
pusha
add
add
and
pop
push
lcall
inc
and
leave
xorb
sub
mov
pop
pusha
pop
xchg
xor
cvtdq2ps
daa
cli
jbe
outsl
test
jne
adc
fnop
mov
ds
mov
repnz
dec
adc
js
xchg
inc
imul
arpl
outsl
jle
xchg
movsb
push
sbb
hlt
fcmovbe
mov
xor
mov
mov
arpl
hlt
xchg
stc
lret
or
ret
neg
mov
xchg
sbb
dec
cmp
inc
repnz
out
jecxz
pop
jnp
inc
jno
jne
out
clc
mov
clc
mov
dec
bound
jecxz
xchg
jns
mov
arpl
aas
xchg
cmp
sahf
jno
xor
dec
dec
xor
lds
dec
push
popf
adc
xor
mov
rol
xchg
aad
test
es
or
decl
aaa
gs
xchg
dec
adc
xor
push
mov
test
ds
cmpsl
add
mov
push
jae
adc
movsb
push
lea
aam
rolb
in
bnd
inc
pushw
insl
jns
inc
gs
imul
push
xor
icebp
out
adc
or
sub
ja
movsb
sarl
idivl
repz
xchg
insl
mov
add
imul
mov
fwait
inc
cmp
nop
cs
imul
sub
movsb
scas
mov
cld
outsl
add
add
cli
xor
test
pop
mov
push
jno
mov
daa
cli
jnp
call
movsb
pusha
cmp
mov
sub
cmpl
mov
adcb
stos
std
mov
aas
popa
and
inc
jns
xchg
push
das
add
fistps
and
bound
pop
xor
jo
stos
add
fsub
and
leave
sbb
jno
jle
loope
jle
rorb
mov
dec
sbb
fdivr
add
pop
ret
mov
mov
xor
lret
rolb
push
lods
insb
gs
repz
and
scas
sbb
call
xchg
xchg
or
test
add
aaa
scas
pop
mov
xor
push
push
decl
mov
pop
mov
in
add
mov
push
dec
pushf
mov
xchg
mov
mov
mov
cmpsl
outsl
hlt
mov
addl
push
ret
testl
jmp
and
jg
cmp
jbe
cld
shll
icebp
cmp
add
jge
and
pop
mov
inc
pop
cwtl
outsb
addb
decb
lret
dec
imul
dec
inc
sti
sub
cmc
jno
outsb
mov
mov
enter
and
sub
pop
add
shll
mov
or
sbb
xor
ljmp
pop
push
jle
bound
pop
insb
sub
inc
stos
cwtl
aaa
out
fidivl
clc
lcall
pushf
fdivs
cmp
and
xchg
std
dec
push
negl
imul
inc
or
popa
xchg
bound
adc
mov
fisubl
mov
add
dec
dec
test
ds
jo
sahf
push
push
jo
jne
and
sbb
adc
sub
push
mov
aam
jg
sub
rclb
clc
mov
mov
dec
rorl
out
icebp
cmp
fbld
sar
dec
pusha
mov
pop
leave
cmp
js,pn
pop
lcall
rep
mov
dec
iret
xor
xor
fldcw
in
lods
test
xor
mov
cmc
and
sahf
ds
mov
rolb
fisubl
rclb
cmpsb
icebp
inc
sbb
xchg
xor
mov
mov
xor
mov
imul
repnz
addr16
dec
sbbb
adc
sub
mov
insb
hlt
xor
mov
cmp
lahf
mov
mov
pop
stc
push
fnstsw
mov
rorl
aam
mov
jae
rol
adc
jne
add
iret
aam
cmc
xchg
cmp
imul
jmp
mov
sub
push
jns
cmp
push
stos
jne
mov
sub
ds
xchg
aad
sbb
jo
mov
xor
sub
mov
jl
fcomps
rcl
and
in
ss
or
leave
lea
popa
cmpl
or
sub
inc
cs
push
pop
fisubl
or
or
mov
cmp
out
outsb
lret
mov
in
test
iret
filds
adc
fwait
lds
xor
std
stos
roll
ds
dec
gs
mov
cmpsb
inc
icebp
mov
sub
mov
sar
mov
cmpsl
movl
aas
sbb
rcl
pop
ss
jae
push
mov
fucomip
std
int3
or
lock
lret
push
cmc
loop
mov
adc
fsubs
cmp
sti
push
enter
or
fisttpll
push
push
out
push
add
sti
cwtl
mov
shl
cmp
enter
xchg
rorl
es
cwtl
and
inc
aam
mov
inc
push
jbe
inc
out
xor
je
out
push
out
stc
xorb
ficoms
dec
imul
dec
xor
jne
adc
pushf
sahf
pop
popf
hlt
negb
inc
jo
call
jb
push
rorb
popa
jl
ds
push
mov
or
push
xor
loope
js
int
clc
cmp
not
xor
mov
imul
mov
es
xchg
xor
cmp
ret
xchg
and
int3
std
cli
popa
mov
mov
cmp
fisttpl
mov
out
sub
incl
movb
mov
leave
out
mov
scas
lea
test
fldt
push
dec
add
xor
filds
gs
jecxz
mov
push
rolb
push
pop
jne
xchg
and
sbb
mov
adc
cmpl
call
dec
lea
out
xchg
popl
stos
mov
adc
push
loope
mov
xchg
dec
fistpll
pusha
out
xchg
pop
pusha
or
insl
xchg
pop
mov
or
lock
les
mov
cmpl
inc
adc
inc
xchg
mov
arpl
mov
mov
fistpl
lcall
mov
popl
inc
es
xchg
out
xchg
movsb
xchg
cmc
jnp
cmp
lock
mov
into
cli
test
clc
fdivr
aaa
or
inc
cmp
add
lret
xor
in
clc
pop
ja
xlat
mov
into
inc
sbb
xchg
lea
sub
out
je
lahf
lcall
jmp
in
or
lret
adc
fwait
data16
and
inc
mov
xchg
lock
push
mov
dec
lock
add
sub
lcall
mov
js
int
pop
cmp
and
cltd
rorb
dec
inc
cmc
jo
push
mov
xor
es
or
ret
negl
push
sub
pop
ss
xor
out
jb
mov
mov
xor
roll
inc
jno
mov
cmp
pop
add
or
sbbb
dec
out
adc
repnz
dec
es
sub
sbbb
mov
cmp
xor
jno
sub
lods
nop
leave
outsb
outsl
add
ja
outsb
fadd
jns
add
scas
out
cmp
mov
xor
fxch
cmpsl
add
dec
ja
add
mov
or
pop
xor
data16
adc
shrl
jbe
iret
lds
cmp
gs
add
xchg
jg
mov
cltd
andb
stos
adc
cmp
cmp
je
push
jae
pop
fldl
push
out
pop
andb
fistps
out
frstor
jb
outsl
ret
adc
test
mov
mov
adc
mov
mov
xchg
and
fcompl
das
push
adcl
jle
mov
lods
xchg
sbb
cwtl
jle
mov
pop
shrl
xchg
jle
sti
cmp
jmp
push
jnp
mov
outsl
jae
cmp
dec
inc
test
jl
xchg
xor
jmp
adc
lds
jg
sub
and
shlb
sbb
and
xor
out
xchg
loope
mov
dec
pop
push
out
xor
and
repz
inc
xor
jae
and
mov
cmp
popf
iret
insl
addr16
in
xlat
incb
ja
outsl
push
or
mov
sarb
out
xor
cvtpi2ps
cmp
addr16
xlat
mov
mov
inc
push
dec
jo
les
fildll
jns
mov
cmp
lods
jne
in
cmp
test
clc
cmc
push
fidivrs
push
bound
bnd
jo
lods
jo
rorb
std
fs
cmc
in
mov
cmp
sbb
or
mov
aas
mov
jnp
arpl
cld
mov
std
scas
dec
bound
fs
bound
sub
dec
mov
pop
cmp
outsb
nop
inc
int
enter
lret
testl
xchg
mov
fdivs
outsl
push
in
bound
mov
jg
clc
mov
shll
sub
cmp
mov
xchg
aas
pop
in
nop
lock
movsb
fdivrl
das
xchg
popa
out
cmpsl
leave
mov
ret
mov
call
mov
test
sub
loop
dec
pusha
hlt
mov
stc
mov
sbb
aam
aam
mov
lcall
pop
push
lods
arpl
rorb
fidivs
jo
xor
xchg
cmp
push
and
jmp
popf
push
push
aaa
cmpsl
dec
int
push
in
add
cmp
and
mov
ret
loopne
add
repnz
xchg
stc
test
stc
insl
adc
in
mov
mov
and
int3
cmp
out
or
lds
data16
jo
push
fbld
movsl
stc
mov
cmc
fcoml
aaa
ljmp
xchg
loop
xchg
pop
add
fdivl
push
cwtl
fwait
push
push
enter
shll
cmpsb
fstl
lods
inc
sub
mov
loop
mov
jl
cltd
sub
popa
mov
push
in
add
jle
enter
push
sahf
jl
sbb
test
lods
or
or
xor
sbb
test
outsb
dec
mov
stos
push
inc
test
sbb
es
inc
aad
dec
push
cli
xchg
testb
pop
ljmp
adc
fs
fs
dec
std
out
das
jp
push
ljmp
sbb
xlat
inc
stos
jmp
push
pop
in
add
popa
pop
pop
mov
or
cmc
jg
xor
ror
rcrb
ror
pushf
negb
mov
push
insb
stos
int
cld
out
or
mov
lcall
loopne
insl
adc
xor
movsl
pusha
lea
loope
adc
stos
sti
push
outsb
push
cwtl
dec
mov
adc
jo
clc
jge
inc
inc
adc
pusha
cmp
call
push
clc
adc
push
mov
dec
rcrl
popa
in
movsl
jns
push
adc
shll
push
sti
enter
lahf
or
mov
xor
push
and
leave
ss
scas
aaa
icebp
arpl
mov
mov
pop
js
adc
or
lret
or
cltd
mov
lret
lcall
fs
pop
mov
xor
mov
jae
lock
fcmovbe
mov
subb
nop
push
cmp
ljmp
dec
stos
sahf
jle
sub
aad
and
mov
cltd
jbe
mov
into
dec
cmp
hlt
lret
dec
leave
jecxz
lods
arpl
mov
lods
or
mov
or
mov
xor
not
jmp
pop
rcl
jne
loopne
lahf
xchg
pop
cmp
add
inc
gs
pop
cmp
inc
aam
arpl
xor
mov
leave
mov
dec
movsb
roll
mov
mov
sub
enter
dec
sub
in
dec
pop
gs
out
mov
icebp
adc
test
popa
add
sahf
rorl
repnz
lcall
cmp
xchg
faddl
jge
repz
jp
fisubrs
rorb
pop
and
lods
pop
mov
std
stos
loop
bound
xchg
sbb
xchg
jecxz
mov
and
or
dec
pusha
sbbl
push
and
clc
hlt
or
cli
out
push
sti
jge
or
inc
mov
outsb
mov
mov
adc
add
in
jb
sbb
movl
imul
mov
pop
mov
mov
pop
jns
jbe
rorl
iret
mov
cmp
loop
aad
cmp
xchg
adc
rorb
and
loope
fbstp
inc
mov
fdivl
xor
sub
mov
ds
mov
jo
cld
bound
stc
and
or
push
mov
icebp
xor
xor
jae
xchg
jg
andl
or
add
xor
imul
mov
jne
fistpl
lea
xchg
push
repz
jg
adc
mov
shrb
out
cs
or
in
popa
rolb
loopne
sub
or
adc
shlb
repz
adc
dec
mov
bswap
jae
nop
pushf
lcall
pop
inc
cmp
outsl
push
lds
jp
mov
fldl
add
mov
mov
sahf
sub
pop
stos
adc
jae
inc
cmc
lret
movsl
xchg
sbb
mov
ja
xchg
cmp
rcl
aam
shll
enter
xchg
jno
shll
hlt
mov
popf
pop
out
mov
mov
in
xchg
pinsrw
inc
inc
lods
mov
paddb
popa
inc
iret
lods
fidivrl
or
or
add
loope
cmp
xor
cmp
sbb
cmp
iret
dec
mov
cmpsb
push
push
pop
pop
ror
dec
je
inc
dec
fs
out
mov
stc
sub
imul
in
jb
inc
in
inc
stos
or
rorb
stos
stc
cs
inc
xor
jl
sarl
push
xchg
mov
adc
and
jle
lret
pop
pop
outsl
jg
scas
cmpsl
hlt
xchg
and
insb
adc
sbb
leave
jg
cli
in
xchg
push
xchg
into
fucomp
mov
xchg
in
mov
enter
sahf
test
push
jge
pop
jl
mov
fwait
repz
in
loopne
std
gs
in
mov
jne
sbb
jge
aaa
lock
daa
pop
xchg
sar
sub
pusha
int
fsubs
dec
icebp
push
inc
ljmp
es
mov
addr16
jbe
cmc
and
in
mov
sbb
and
mov
pop
mov
mov
lret
std
push
addr16
push
cwtl
test
js
bnd
fcoms
jp
cmp
lcall
add
stc
loop
push
faddl
cmp
aas
jle
repnz
in
push
jbe
pop
imul
jnp
mov
add
jp,pt
fisttps
jne
cmpsl
mov
mov
and
mov
or
or
inc
cmp
mov
push
decb
jp
jns
cmp
repz
adc
mov
and
pop
shlb
iret
push
cmp
fwait
mov
stc
adc
jb
mov
lds
mov
push
dec
cmp
mov
imul
call
mov
insb
orl
push
add
pop
xor
lods
and
mov
jg
lds
orl
pop
xor
or
mov
add
mov
push
push
sbb
xchg
xchg
int3
pop
movsb
scas
arpl
das
hlt
out
into
mov
xchg
add
ret
inc
stos
adc
and
clc
xchg
cli
iret
xor
lods
xor
xchg
mov
and
mov
aad
sbb
jmp
repnz
stos
pusha
mov
into
jecxz
push
lret
iret
mov
mov
xor
add
addl
loopne
mov
or
inc
in
xor
sti
movsb
add
xchg
ss
cwtl
lahf
jg
xchg
in
mov
jb
test
jmp
xchg
jne
jge
inc
push
or
insl
or
iret
jns
push
rcr
pop
jnp
mov
xchg
les
rorl
lcall
mov
imul
frstor
nop
cmpsb
lods
lahf
push
jb
enter
dec
pop
jae
lahf
xor
xor
inc
or
mov
sub
jge
loopne
aad
movsl
ret
pusha
dec
sbb
sbb
lods
adc
pushl
dec
or
imul
mov
ror
mov
adc
xchg
push
jmp
pop
add
int3
pop
aad
mulb
nop
arpl
iret
rorb
cmpsl
cmp
in
xlat
in
pop
sarb
sub
jecxz
and
movsb
fs
xchg
inc
inc
fnstcw
in
cmp
xor
out
movsb
stc
aas
inc
jo
gs
push
xchg
sub
scas
adc
push
fdivl
or
pop
pop
imul
add
adc
cmp
in
mov
add
inc
or
nop
and
cmpsb
imul
cmp
scas
adc
push
pusha
mov
lods
pusha
stc
inc
add
add
shl
je
movb
xchg
push
and
stc
lods
xor
out
mov
movsl
jle
pop
int
mov
adc
xchg
stc
stos
lcallw
xchg
fnsave
sbb
push
jmp
insl
bound
cmp
aas
push
movsb
ret
addl
in
adc
aaa
inc
push
mov
mov
ds
xchg
mov
sub
es
mov
mov
shrb
push
xchg
adcb
shll
int
scas
fidivl
pushf
inc
call
out
fmul
dec
push
leave
lahf
xchg
xchg
inc
orb
push
or
dec
mov
cmp
jge
sar
xor
lcall
arpl
jl
sbb
ja
mov
xor
out
pop
sbb
push
ror
in
pop
ret
mov
mov
movsb
je
inc
std
adc
ficoms
mov
call
xchg
or
fnstcw
or
int
rorb
adc
js
dec
mov
fiaddl
pop
roll
and
pop
xchg
or
mov
out
mov
ret
jno
dec
push
and
push
add
mov
js
dec
into
pop
or
cld
outsl
rclb
stos
cmc
lds
in
jl
outsb
gs
or
rcrb
sub
mov
cs
fs
mov
inc
out
movsb
pop
loop
jmp
mov
dec
pop
mov
jo
incl
dec
pop
sub
int3
xchg
mov
cmp
cmp
das
xchg
or
int
mov
pushf
les
push
repz
jbe
push
jbe
iret
stos
add
sub
call
cmpl
pop
pop
fdivrs
pop
cwtl
into
jge
loop
pop
iret
pop
es
or
inc
push
cmp
pop
dec
mov
pop
jo
mov
sahf
or
ja
mulb
dec
dec
cli
int
cltd
jmp
mov
pop
mov
push
aas
aam
out
mov
or
sahf
adc
out
cld
push
sahf
push
inc
mov
int3
int3
jl
negl
lret
mov
or
mov
out
xor
jp
add
shrl
jmp
xchg
adc
cld
jb
hlt
pop
jo
and
fldt
pop
xchg
iret
jns
add
inc
lods
loop
mov
sbbb
pop
ret
adc
and
rcl
leave
iret
adc
jle
push
and
out
jg,pt
inc
orb
cmp
mov
cmp
jae
sub
outsb
dec
ror
pop
js
popf
mov
outsb
pop
adc
push
cmp
fcomp
jnp
jnp
pusha
pop
icebp
aad
aas
mov
subb
fmuls
push
sbb
jge
or
nop
ret
pop
inc
adc
xchg
imul
aam
fisttps
sbb
outsb
dec
out
adc
out
xchg
movsb
nop
xlat
xorb
or
jns
add
repz
aad
std
push
xor
ds
les
xchg
jb
frstor
out
add
or
sub
jp
mov
test
push
mov
jp
sub
adc
dec
xor
xor
and
movsl
adc
loop
xor
xchg
xlat
mov
aam
imul
inc
sbb
les
jae
pusha
pop
xor
jbe
xchg
fdivrl
pusha
out
test
cmpsl
dec
adc
dec
jge
pop
mov
lahf
fldl
mov
xorl
fcoml
adc
lret
or
movl
jecxz
mov
jae
in
add
or
bound
mov
popa
add
mov
je
jne
cmp
jge
xchg
push
jp
test
test
pop
jno
repz
iret
cmpsl
mov
and
push
mov
dec
test
inc
out
daa
dec
mov
fildll
xor
lock
out
mov
mov
mov
inc
sub
inc
ljmp
cli
js
lret
lahf
adc
icebp
ficoms
arpl
movsb
jne
sbb
xchg
dec
enter
lods
lret
cmpsb
mov
sbb
mov
push
mov
mov
mov
sub
xchg
adc
or
stos
fsub
mov
sbb
out
call
mov
sub
inc
xchg
or
hlt
mov
test
and
sub
ja
rcrl
mov
mov
pop
and
aad
jo
add
mov
cs
inc
movsb
clc
jno
add
sti
mov
lods
adc
xlat
rcll
push
je
cli
dec
fnsave
push
mov
gs
pusha
add
pop
cmp
outsb
sub
clc
xchg
cmp
pop
pop
ds
fildl
lret
sub
outsb
pop
mov
into
aaa
popa
into
xchg
bnd
adc
sti
xor
push
sahf
push
mov
push
aas
cmp
shrl
mov
xchg
js
xchg
jne
testb
sti
mov
call
ds
stos
fcmove
mov
fidivrs
sub
sub
sub
decb
cmp
sub
out
repnz
in
pop
adc
dec
test
push
jge
ds
icebp
mov
adc
sarl
xchg
lahf
cs
or
mov
into
jbe
scas
enter
and
movsl
insb
es
leave
pop
sbb
or
sbb
lods
mov
mov
adc
mov
push
ret
ss
add
arpl
dec
add
xor
pop
xchg
clc
enter
popf
leave
jl
ret
push
and
shll
push
sub
sub
and
mov
and
ud0
mov
dec
movl
inc
mov
lea
xlat
adc
pop
mov
push
lahf
fcoml
stos
mov
in
std
cmp
sub
push
sub
lahf
cwtl
xchg
lcall
push
or
or
aas
loope
std
divb
xchg
push
jl
sbb
adc
repz
inc
inc
xor
push
pop
pop
jo
outsl
lahf
mov
xchg
shr
xor
cmpsl
test
fmul
into
out
sbb
mov
dec
and
inc
or
movsl
mov
sbb
insb
in
test
dec
cmp
mov
pop
clc
and
xor
adc
fnstenv
fbstp
or
or
push
fwait
into
fisubs
sbb
mov
xor
arpl
sub
ja
jo
aaa
ret
or
mov
negb
iret
mov
lods
and
iret
jne
and
cmp
inc
lock
add
adc
popf
inc
push
lahf
mov
mov
sbb
cmp
enter
imul
jbe
jle
mov
mov
cmpsl
and
adc
mov
rolb
ljmp
arpl
sarb
sbb
lock
mov
ror
pop
xchg
or
xlat
cmp
xlat
testl
sub
fwait
daa
push
mov
sub
inc
test
mov
aas
sub
bound
scas
in
xlat
outsl
leave
mov
test
ljmp
xchg
cli
or
std
in
mov
cltd
sbb
dec
stos
inc
xor
adc
jle
mov
fwait
sub
xchg
imul
test
out
dec
icebp
jae
scas
lea
ret
je
mov
xor
jne
rcll
push
adc
adc
call
shll
lods
jo
clc
cvtdq2ps
cmp
sti
jnp
lret
es
mov
fsub
push
mov
subb
fwait
push
and
lds
xor
inc
dec
pop
jo
or
js
xchg
pop
cmp
xor
lahf
fldenv
icebp
or
cs
loop
test
jl
cmp
ret
push
pop
in
test
push
adc
mov
pop
mov
or
cltd
mov
cwtl
sbb
sbb
jbe
pop
js
jb
idivl
pop
adc
xchg
add
ss
dec
aas
pop
aam
xor
int
stos
lods
xor
inc
xchg
jns
clc
dec
push
cld
loop
jns
mov
sub
out
mov
mov
arpl
enter
lret
mov
jmp
or
dec
loope
pusha
sbb
or
push
leave
push
popa
sub
test
inc
fcmove
ss
orl
lock
adc
pop
or
fisttpl
pop
icebp
mov
dec
jp
stos
int
clc
lret
mov
mov
clc
pop
lock
sub
sub
sub
mov
jmp
fs
cvtps2pi
mov
outsl
sti
lret
xchg
fisttpll
std
movsl
cmc
lock
inc
in
xchg
std
lock
adc
xor
sub
mov
jge
pop
insb
add
sbb
lret
jb
adc
dec
cmp
or
repz
jg
test
ss
mov
pop
fimull
jle
out
cmp
shll
xor
push
daa
add
pop
loop,pn
xor
mov
outsl
xchg
shll
add
out
repz
xchg
sbb
and
xor
int
mov
test
sbb
dec
scas
or
ss
mov
mov
and
xor
arpl
cmp
test
xor
pop
pop
mov
inc
das
mov
lcall
sbb
or
aaa
mov
fcoml
mov
repnz
lret
xchg
notb
inc
xorb
sbb
sbb
pop
cwtl
fstpl
push
mov
or
mov
pop
insl
cmpsl
popa
bnd
mov
cmp
in
fidivl
add
addr16
int
int3
out
mov
aam
in
mov
fwait
popf
in
xlat
imul
sbb
mov
outsl
mov
fistpll
movsb
ljmp
cmc
pop
shlb
cmp
cmp
pop
push
xchg
orb
fs
sbb
mov
push
mov
mov
in
arpl
dec
add
rol
movsl
mov
sahf
sti
mov
lock
dec
lea
mov
daa
or
loopne
aaa
jo
scas
repz
cmp
or
ret
fisttpll
push
adc
dec
jae
push
push
add
dec
cwtl
js
push
jecxz
test
ja
stos
cmp
movl
xor
adc
xor
cmc
add
mov
pop
dec
add
idivl
cmc
fisttpll
ret
jl
or
movsl
cmp
cmc
jmp
lds
das
dec
movl
cli
push
lret
lret
notl
jp
mov
icebp
dec
pop
lock
mov
mov
mov
int
shlb
xchg
push
clc
out
add
sub
ret
movb
cmpsb
lock
mov
shrb
push
sub
data16
inc
ret
cli
gs
xor
shll
and
mov
mov
outsb
test
std
outsl
sbb
lahf
icebp
and
mov
dec
popa
and
xchg
xchg
fs
mov
pop
and
jmp
insl
sbb
outsl
add
dec
arpl
cld
dec
arpl
sub
mov
xchg
sbb
repz
outsl
js
ja
ja
cld
test
or
es
sub
repz
add
popa
das
fidivs
sar
leave
cs
faddl
mov
in
push
cmc
xor
sub
jle,pt
jl
clc
xchg
sub
js
mov
pop
mov
push
xchg
test
insb
mov
and
pushf
or
sbb
dec
adc
push
xchg
jge
cs
leave
pop
mov
mov
mov
sbb
add
in
loope
fcoml
and
enter
jg
cmp
int3
dec
adc
mov
add
int3
call
push
mov
cltd
adc
push
sbb
and
lret
fs
mov
xor
pop
int
addps
sub
outsb
push
addr16
and
out
jl
jae
adc
iret
dec
insl
cli
icebp
inc
dec
xor
xor
dec
popf
pop
mov
push
das
fcoms
arpl
jnp
adc
and
stos
andb
gs
push
cmp
pop
orb
mov
in
cltd
js
ds
mov
mov
sub
imul
dec
movsl
mov
pop
lods
repnz
je
icebp
mov
adc
dec
shlb
and
popf
ss
vmread
jp
mov
pop
aas
mov
ss
dec
pusha
or
xlat
mov
ret
call
pop
or
lahf
mov
fcmovbe
ret
jnp
and
dec
sarb
mov
xor
cmp
leave
mov
call
popf
fidivrs
xchg
repnz
rcl
pop
xor
ja
mov
cmp
push
sbb
sbb
rcr
inc
imul
shll
sub
insb
insb
mov
or
xchg
shlb
popf
xchg
stos
lcall
adc
rclb
rolb
sbb
lahf
cs
add
imul
ljmp
xchg
sbb
lock
mov
fwait
jmp
jbe
lea
cmp
mov
mov
ljmp
int3
gs
push
pop
ja
mov
adc
xor
shlb
or
repz
leave
inc
jne
mov
xchg
inc
inc
imul
add
pop
cltd
mov
les
jae
lods
lcall
movsb
mov
jl
das
in
popa
std
inc
push
cltd
fs
call
pop
lods
push
loopne
jae
mov
or
jle
xchg
fcompl
leave
bound
cmp
add
inc
es
lahf
add
and
movsl
aad
aam
daa
pusha
in
loope
inc
in
out
and
scas
mov
loopne
xor
sub
jp
aad
dec
movsl
icebp
sub
bound
xchg
sahf
xor
stos
lods
out
rcll
push
rorb
cmp
pop
xorb
and
dec
out
mov
test
shl
test
popa
adc
sahf
mov
js
arpl
movsl
cs
mov
popf
cmc
dec
sub
adc
xor
xor
test
mov
filds
ja
scas
mov
mov
mov
cwtl
in
test
or
je
imul
sti
mov
add
ret
xor
push
frstor
aam
mov
dec
mov
push
jbe
jle
ljmp
rorl
mov
in
es
adc
out
out
popa
pusha
dec
jmp
in
adc
aaa
fcompl
aam
das
aad
xchg
inc
hlt
pushf
arpl
shrl
adc
ss
mov
lods
call
and
bound
inc
sbb
testl
insl
or
ss
add
dec
jmp
or
fisubrs
pop
push
cmp
pop
int3
pusha
int
rcl
pop
out
bound
add
fldl2e
in
ret
jle
dec
mov
out
ret
cs
xchg
movsl
sub
nop
imul
inc
ja
sbb
jge
mov
pop
adc
xor
pop
sar
scas
add
pop
pop
add
add
outsl
mov
roll
outsb
xchg
sub
dec
fwait
add
sti
mov
jmp
pop
sbb
mov
scas
lcall
out
icebp
pop
jno
add
call
pushf
mov
into
scas
xchg
xor
call
sub
aas
inc
push
mov
lea
jne
pusha
pop
jbe
daa
aas
pop
pop
outsb
cmpb
fidivrs
cli
xor
xchg
repz
pop
rcrb
mov
xchg
sub
ds
mov
scas
cwtl
iret
cmpsb
pop
mov
aas
sbb
jecxz
xor
cld
lds
or
aas
mov
pushf
sub
lods
inc
ret
mov
insb
int
repnz
mov
es
mov
jmp
rol
jecxz
cmp
ja
push
ret
in
test
inc
mov
fdivrl
outsb
js
and
mov
push
icebp
test
fs
inc
stos
mov
push
das
lods
sub
push
into
adc
pushl
pop
cmp
dec
lock
push
mov
xchg
xlat
sbb
imul
ret
mov
pop
cmp
or
loopne
inc
fisubs
rolb
dec
sarb
out
hlt
aas
push
mov
popf
fiadds
addr16
mov
icebp
scas
movsb
mov
pop
jnp
sub
xor
jp
and
adc
outsb
xor
fcmovb
mov
iret
or
sarl
lods
outsb
clc
in
push
cmp
mov
out
arpl
mov
and
jecxz
dec
bound
cld
les
iret
lea
jnp
xchg
mov
jbe
add
mov
into
mov
fiadds
int3
testb
out
or
shlb
data16
pushf
daa
movsb
sub
xchg
mov
cmpsb
adc
pop
pop
loop
jle
mov
in
cmc
jmp
js
aaa
push
mov
data16
neg
repz
mov
xchg
repz
pop
loope
shl
jecxz
out
inc
inc
lea
repnz
mov
sbb
je
out
jmp
mov
jbe
mov
xchg
inc
or
hlt
lods
sub
inc
std
push
les
pop
mov
gs
pop
loop
loop
lds
popf
push
lret
fisttps
out
jno
mov
sbbb
fnstenv
and
lret
shlb
mov
or
sub
fsubs
adc
cmp
lea
or
pusha
mov
push
mov
pop
and
movsb
iret
dec
mull
lret
ret
push
shll
cli
mov
in
xchg
mov
xchg
mov
lods
push
ficompl
xchg
test
hlt
stos
mov
mov
movsb
clc
cmc
inc
inc
inc
pusha
mov
dec
mov
mov
mov
enter
xor
mov
xchg
cmp
push
add
mov
mov
clc
cld
push
fimuls
les
sub
nopl
cmc
addr16
mov
cltd
jg
push
in
lds
xchg
enter
into
sub
adc
lea
loope
and
jge
cmp
push
fiaddl
scas
xor
sub
jmp
mov
scas
ljmp
add
sbb
loopne
int
shll
sbb
mov
sarl
jae
sub
fs
addr16
or
mov
shlb
pop
mov
ret
xchg
insl
xchg
mov
sbb
out
push
push
fstl
fnsave
sbb
pop
jecxz
rorb
inc
add
les
fs
insl
mov
imul
or
test
decb
inc
mov
out
f2xm1
cmp
xor
mov
pop
cmc
xchg
jae
shlb
add
bound
xchg
scas
sub
push
pop
cli
mov
enter
add
ja
inc
and
mov
outsb
push
ret
scas
cwtl
sub
cli
insl
mov
cwtl
sub
cmpsl
jns
lods
cmp
stc
add
jno
dec
mov
xor
adcl
push
jbe
rclb
push
xchg
sbbb
test
pop
clc
aas
mov
jns
sub
jp
mov
jae
out
loopne
sti
or
data16
cmp
xchg
bound
mov
pop
push
mov
aaa
lret
push
iret
stc
sbb
shll
push
lahf
add
ret
adc
pop
inc
std
push
dec
add
mov
cli
inc
rcrl
shll
and
or
add
ret
aas
xor
pop
adc
inc
adc
pop
fidivrl
es
imul
cmp
aas
es
mov
cmp
ljmp
push
popa
xchg
rorl
jmp
xorl
lret
sub
mov
mov
xlat
and
pop
push
into
dec
sbb
dec
bound
pop
push
cli
xor
mov
mov
mov
xchg
xchg
std
fsubl
stos
jbe
data16
je
sub
mov
ret
mov
xchg
int3
shll
nop
nop
cmp
imul
push
mov
jmp
lods
jns
or
hlt
mov
xor
sbb
push
sub
mov
and
add
push
cld
sbb
loopne
push
dec
and
lret
out
call
adc
fwait
imul
dec
out
jbe
stc
jge
push
adc
lret
mul
xchg
cli
xchg
push
outsl
mov
pushf
lcall
xor
sub
mov
xchg
outsl
mov
fidivrs
adc
jnp
call
sbbl
subb
rorl
mov
repnz
call
popf
inc
out
mov
data16
mov
inc
jg
add
lahf
sub
sbb
jmp
sti
add
fst
arpl
filds
xchg
scas
jne
sarb
sbb
fwait
jp
mov
popf
push
mov
lds
lods
adc
or
stos
popf
inc
notb
mov
pop
out
daa
adc
rolb
in
je
jg
lds
push
mov
loopne
mov
pusha
sbb
sub
cmp
sbb
fdivl
jnp
pop
jle
cld
cmp
jo
cli
movsb
xor
movsb
adc
mov
sbb
adc
ret
dec
xchg
cmp
and
push
xchg
jnp
mov
jnp
dec
jmp
fbld
cwtl
sub
pop
jg
xor
rol
jp
enter
and
mov
lahf
dec
push
popf
push
int3
cmp
mov
ljmp
cmp
cmpsl
sbb
flds
or
sbb
xchg
lock
das
jmp
in
xlat
xchg
dec
insb
out
jne
in
or
test
sahf
jb
sub
shl
or
jne
sub
cmp
inc
xor
stos
js
repz
aad
test
push
adc
scas
sub
scas
lods
iret
push
cmpsb
rcl
cwtl
out
popf
pop
negl
push
cmp
lcall
stos
dec
and
mov
mov
sbb
jecxz
mov
push
pop
ret
clc
sub
int3
push
popa
xor
fdivrs
push
xor
roll
outsl
cltd
mov
insl
out
inc
xchg
sub
cs
jne
aas
cmp
leave
push
test
lret
lret
aam
mov
pcmpeqb
mov
mov
nop
xor
lret
jnp
and
push
and
xchg
int
sbb
and
js
hlt
into
or
das
movsl
mov
sub
sub
xchg
lods
jne
test
out
mov
jnp
mov
cwtl
jns
jb
mov
push
inc
cmpsl
cmp
mov
add
movsl
into
jp
addr16
ficompl
and
cmpsb
mov
sahf
cmpsl
push
shll
popf
and
cmpsb
jle
mov
stc
or
rolb
test
pop
fstpt
xor
xor
es
fistl
adc
das
sub
scas
add
fimuls
fcmovne
lret
add
or
jo
and
mov
ficoml
js
std
in
test
sub
xor
pop
xchg
repnz
xchg
outsl
pop
fcmovbe
cmp
push
leave
and
ljmp
loopne
pop
xchg
jo
lds
mov
cs
cmpsl
in
aas
cmp
xchg
and
or
cmp
cmp
pop
movsb
add
xor
sbb
jmp
out
jae
dec
xchg
sahf
sbb
dec
xor
divb
jle
jecxz
aaa
test
xchg
roll
or
std
out
daa
dec
cmc
mov
pop
xchg
lcall
fsubr
cli
enter
sahf
pop
cvtps2pi
xchg
ss
filds
dec
stos
cmp
mov
push
jbe
mov
jne
xchg
dec
mov
cmp
push
cld
ljmp
xor
mov
pop
bnd
jno
jp
lods
pop
mov
jnp
mov
sub
lret
cmc
mov
or
les
sbbl
cwtl
aaa
pushf
push
ds
sub
sub
lds
xor
fmuls
cmpl
xchg
add
mov
fiadds
scas
sbb
jno
inc
pop
out
mov
mov
add
push
repnz
lret
mov
add
hlt
cmp
stc
push
iret
sbb
addr16
and
mov
bswap
sub
cmp
jno
and
cmp
ja
js
lock
rcll
xor
sahf
dec
addr16
enter
mov
dec
cld
xor
shrl
mov
outsb
dec
jg
sbb
sbb
pop
leave
shll
add
ficompl
sub
outsl
and
xchg
mov
jne
dec
dec
adc
jo
ret
mov
shlb
stos
fsub
jg
sub
lods
pop
ja
lods
scas
xor
les
mov
into
xchg
stc
push
jmp
and
jecxz
push
mov
sbb
sub
or
out
add
insb
scas
xor
iret
xor
testb
fpatan
jb
gs
adc
pop
adc
cwtl
jge
add
iret
or
add
mull
mov
cmp
js
mov
adc
dec
mov
fnstsw
in
push
in
dec
cwtl
mov
fldcw
add
icebp
push
insl
mov
mov
mov
mov
push
dec
shrb
pmaddwd
mov
push
andb
test
inc
mov
push
stc
pusha
cs
cltd
mov
lret
sub
stos
icebp
xor
in
mov
mov
adc
jmp
shrl
outsl
and
pop
fld1
mov
mov
sub
sub
shl
mov
call
mov
in
movsb
jns
jns
sahf
and
push
pop
icebp
and
jle
mov
push
and
add
andb
in
jp
iret
lahf
mov
mov
xorl
mov
push
mov
inc
outsb
push
sub
out
ret
in
dec
dec
xor
std
iret
pop
pusha
in
cs
pushf
clc
iret
add
jg
xlat
cltd
fsubr
adc
pusha
add
xchg
aaa
lcall
inc
push
xchg
push
rcll
cmp
repnz
and
lret
rcpps
pop
sbb
mov
lret
push
gs
pop
loope
loop,pt
pop
repz
jle
sbb
or
mov
imul
and
dec
jge
mov
mov
cltd
adc
stos
sbb
adc
into
inc
xchg
test
in
sbb
adc
sbb
adc
adc
mov
call
cmp
pop
fs
aas
push
bound
roll
imul
pop
insl
adc
adc
test
stos
stos
cmp
call
push
adc
daa
icebp
pop
jns
xor
push
sbb
divl
xchg
or
and
and
pop
rclb
out
and
jge
xor
jbe
fldl
cmc
xchg
or
or
dec
push
xchg
cmpsb
call
or
loopne
mov
pop
dec
jmp
or
int
push
inc
fildll
mov
enter
ret
mov
xchg
pop
jb
mov
mov
mov
pop
lret
dec
cmpsl
or
pop
popa
aaa
jbe
mov
imul
aas
inc
dec
loopne
mov
push
adc
iret
pop
pop
cmpsb
rorl
jecxz
adc
inc
addb
popf
sarl
push
push
or
and
test
jl
jne
xchg
jp
pusha
icebp
and
out
scas
jno
xchg
push
xor
ds
sbb
pop
aam
xlat
sbb
cmp
and
or
jge
scas
call
pop
push
sub
fnsave
lret
pusha
lods
lds
stos
lret
sbb
ficomps
test
or
xchg
daa
cltd
jns
cmpsb
push
pop
jle
stc
jge
popa
xor
xor
fs
xchg
dec
push
sti
push
push
mov
inc
mov
dec
test
push
nop
ficoms
and
lods
shlb
rcll
xor
inc
mov
fs
jl
sahf
inc
adc
jl
xor
rcll
stos
dec
and
mov
fstl
dec
imul
inc
ljmp
sub
cmp
repnz
jl
mov
xchg
pcmpgtd
ds
add
fcompl
mov
fstp
mov
push
aad
inc
lret
idivl
inc
pop
mov
out
into
mov
sbb
and
push
insb
cmp
jmp
jns
cs
mov
jle
cmp
js
leave
rorl
xor
mov
loop
cmp
dec
push
pop
and
and
and
inc
sbb
inc
sbb
mov
ret
testl
jmp
movsl
jle
pushf
leave
xchg
xor
mov
dec
sub
aas
and
xor
mov
sub
mov
jl
xlat
pushf
out
mov
lret
sbbb
in
fwait
cli
ss
cmp
les
and
int3
sub
jge
in
aam
mov
scas
mov
and
xor
idivb
pop
mov
int3
sbb
pop
xchg
pop
inc
iret
lods
xchg
idivb
fwait
xor
out
pop
jbe
or
fdiv
dec
mov
inc
xor
mov
mov
jp
add
xor
cli
lret
mov
sub
imul
cmp
and
inc
dec
aam
sbb
dec
inc
and
xchg
sub
adc
shl
cwtl
ljmp
inc
push
call
jle
sub
mov
xor
mov
and
out
arpl
popf
mov
xchg
int
nop
lea
push
jl
lds
les
pop
cmp
adc
add
add
jmp
mov
outsl
dec
mov
fcmovne
bound
inc
das
push
inc
lret
enter
iret
push
xor
push
cltd
pavgb
push
or
jmp
stos
lcall
out
xlat
mov
mov
mov
sbb
pop
pushf
dec
imul
imul
sub
shl
rclb
sub
rclb
inc
jge
cmp
mov
mov
push
sti
or
pop
xchg
out
pop
sub
xchg
push
ss
or
jns
push
int3
lahf
into
sbb
sub
sub
insb
cs
and
pop
xchg
call
xchg
daa
push
test
mov
cwtl
out
leave
lock
das
sbbb
int3
mov
aas
std
les
cmp
jle
xor
mov
pusha
pop
cli
mov
mov
mov
lret
repz
cwtl
sub
adc
sub
popa
movsl
push
stc
fcompl
shll
pop
lock
in
fdivrl
clc
mov
cmpl
sti
cmc
and
pop
hlt
and
dec
test
mov
add
or
gs
cmp
dec
shr
dec
lods
dec
popa
lcall
ret
addb
jne
mov
sbb
cmpsb
mov
aaa
jnp
push
xlat
and
mov
mov
shl
cmp
dec
jge
sar
inc
mov
cmc
pop
test
fisubs
jge
lea
and
push
out
ja
test
cwtl
inc
xchg
dec
push
notl
dec
lret
scas
cmp
push
cmpsl
mov
arpl
adc
lea
dec
mov
mov
addb
mov
rol
push
fistpll
jb
pop
xchg
lock
nop
mov
mov
mov
test
mov
dec
outsl
lods
mov
dec
adc
sbb
nop
xor
sub
dec
cmpsl
jae
push
xor
movsl
mov
fs
cwtl
fs
leave
push
iret
scas
cltd
pop
add
test
das
fdivrs
cld
sahf
mov
fisubrs
daa
dec
out
cmp
outsl
ret
xlat
sub
pop
dec
lret
push
jmp
dec
lret
jbe
pop
movsl
mov
and
fistps
sub
push
cwtl
mov
arpl
jbe
outsb
popf
lods
int3
pop
pop
fmull
fnstcw
stos
or
push
mov
sub
xor
decl
mov
xor
fsubl
hlt
mov
test
shl
ret
insb
ret
jmp
sbb
sti
into
xor
push
fcompl
ret
into
push
inc
testl
aaa
push
cld
pop
hlt
hlt
scas
jl
jmp
arpl
es
cmpsb
mov
push
nop
imul
mov
inc
or
andl
mov
push
testb
cmpsb
dec
test
ljmp
addr16
les
int3
push
xchg
es
subl
cwtl
stc
mov
add
in
xchg
push
mov
push
pop
pop
les
xor
cli
pop
and
dec
fcmovne
inc
inc
lret
push
rol
jmp
mov
jl
sub
add
and
cltd
call
dec
test
xchg
ljmp
inc
jmp
push
or
pop
push
outsb
subl
adc
daa
sbb
out
xor
aam
dec
ss
test
loope
int
inc
or
movlps
xchg
mov
incl
xchg
imul
sub
punpckhbw
jmp
mov
out
dec
arpl
fimuls
pop
jg
mov
aas
xchg
movsl
cmpb
mov
hlt
test
call
lahf
test
inc
dec
imul
add
add
mov
dec
sub
push
aam
movsb
mov
movsl
dec
stos
adc
leave
mov
or
ja
mov
mov
push
lret
pop
out
les
notb
testb
das
jae
add
jnp
sub
int3
pusha
and
mov
enter
mov
dec
jmp
inc
sbbl
popf
into
or
rolb
pop
pop
dec
fmull
insl
mov
inc
into
sbb
add
cmp
insb
pusha
in
inc
das
dec
movsb
aam
out
into
pop
pop
repnz
andb
sub
stc
cs
out
xchg
xor
hlt
leave
mov
push
cli
stc
les
test
inc
shll
pusha
inc
inc
loop
notb
out
jae
mov
xchg
aas
mov
bound
push
xchg
cld
mov
lods
sbb
cmp
cmc
dec
jns
jl
push
push
jbe
rol
mov
cmp
push
pop
pop
mov
outsb
in
out
lods
sbb
sbb
stos
or
arpl
sub
push
pop
lret
pushf
add
pop
sti
iret
gs
and
sbb
pop
in
push
movl
shl
out
rclb
xchg
inc
pop
lods
mov
shll
lahf
xor
int
xchg
sbb
inc
int3
push
fxch
arpl
mov
jp
fdivrs
mov
sbb
and
fidivrl
cmp
lods
data16
push
xchg
andb
loope
or
popf
dec
fiadds
and
inc
paddsb
cs
xchg
ss
je
mov
dec
fistpll
sub
or
inc
sub
mov
xor
out
inc
xor
mov
pop
mov
xor
sbb
in
add
adc
lds
sti
sub
out
jl
add
pop
into
rorb
pop
sbbl
out
in
fsub
mov
fwait
imul
push
bound
out
dec
inc
mull
fists
shl
shll
addr16
dec
cmpl
and
rclb
ret
sarb
xor
xchg
mov
xchg
das
jno
pusha
push
cmp
pop
cmp
jp
or
dec
int3
repnz
adc
clc
add
mov
cmp
cmp
clc
xchg
jmp
sbb
inc
mov
shll
jno
xor
aam
and
and
dec
jnp
fnstsw
fwait
inc
test
xchg
aam
insb
mov
icebp
jmp
add
js,pn
inc
arpl
pop
adc
rcll
lahf
cs
out
shlb
adc
push
rcrb
test
mov
notb
sub
mov
outsb
mov
pop
loope
push
jecxz
push
adc
xor
arpl
push
filds
xor
add
out
out
aas
pop
add
push
mov
in
data16
inc
xchg
mov
cmpsb
xor
and
movsl
xlat
xchg
popf
xor
adc
adc
jo
movsl
and
mov
inc
fcomps
jmp
dec
jle
xchg
fcomps
daa
push
adc
movsb
push
jl
jno
shl
gs
in
pop
cmpsb
std
add
dec
mov
jge
loop
or
jmp
add
insb
jl
or
sbb
sub
jle
dec
or
cmovb
xlat
enter
sbb
dec
adc
pop
das
ja
ret
bound
loope
ja
dec
jmp
cmp
imul
or
add
mov
sub
cmpsb
xchg
insb
aas
push
addr16
in
inc
push
ret
pop
inc
sbb
in
ret
mov
xchg
push
popl
in
cmp
xor
out
inc
pop
lret
add
call
rclb
sbb
xchg
sbb
fcmovu
orl
push
pop
dec
das
xchg
jae
ret
mov
push
cmp
scas
leave
movsl
arpl
out
lods
shr
push
repnz
mov
pop
popa
cli
das
xor
ja
popa
jl
xchg
or
ret
cmp
mov
enter
dec
repnz
divl
add
call
fildl
xorl
jg
je
popf
lret
fwait
xor
mov
insl
xchg
aas
lahf
sub
ds
lods
inc
rorb
or
jb
std
pop
push
jge
cmp
mov
std
ja
xor
repnz
adc
xchg
into
push
pop
push
jl
push
pop
and
mov
in
pop
addr16
fdivrp
out
out
inc
je
icebp
jmp
push
and
sbb
pop
mov
movsl
fistpl
aad
cmpsb
fsubrs
xchg
add
jb
adc
dec
lret
cmp
movb
daa
subb
sbb
imul
or
mov
inc
test
and
sbb
push
jle
mov
das
and
insb
add
adc
pop
jbe
leave
cmc
pop
mov
test
int
lods
pop
jge
ret
add
pop
cmpsl
outsb
stos
adc
iret
mov
pushf
mov
mov
icebp
repz
ret
mov
in
repnz
push
mov
movsl
popa
cs
outsl
mov
hlt
andl
in
nop
rorb
hlt
adc
fisubl
mov
lods
ds
xchg
lret
sub
jnp
imul
cli
iret
jns
and
mov
sub
xor
pusha
jo
xchg
ret
into
cmc
loope
and
gs
dec
push
jnp
iret
ss
cmpsl
std
stos
or
enter
mov
js
loopne
pop
je
mov
jle
stos
rol
loop
xchg
or
loopne
jmp
pop
clc
aam
pop
pushf
adc
adc
fldt
mov
int3
inc
inc
int3
sbb
ret
sub
lahf
in
mov
mov
push
sub
jle
enter
mov
aaa
lcall
mov
ret
push
push
repnz
idiv
cmp
inc
sub
mull
xlat
inc
pop
or
es
cmp
ja
sub
lods
ret
push
xchg
pop
dec
jge
jle
xor
inc
inc
xor
push
inc
xchg
xchg
xor
or
push
xor
push
jnp
pop
adc
xchg
or
into
das
mov
icebp
xchg
jl
jmp
sbb
sbb
nop
and
add
and
add
jge
pop
or
dec
pop
cmp
out
mov
push
pop
sbb
shl
mov
inc
call
pop
int3
cmp
sbb
lahf
lret
and
pop
jne
fists
call
fs
dec
adc
xchg
lea
aas
push
and
repnz
xchg
js
add
stos
subl
add
pop
psubb
outsb
ficoml
push
testb
pop
loope
sub
bound
pushf
mov
out
push
sub
shr
ja
adc
xchg
dec
lods
ret
sbb
adcb
mov
movsb
add
andl
cmpb
out
xchg
cwtl
mov
iret
sar
xlat
arpl
push
fdivp
mov
xchg
or
push
outsb
push
cmovb
xchg
xchg
inc
nop
jno
movsb
pop
mov
xlat
sub
decb
orb
pop
cmpsl
mov
aad
aaa
lcall
pop
gs
loop
lds
in
in
or
scas
lret
xor
or
mov
popf
xor
mov
jno
insb
push
outsb
pop
sub
or
cmp
insl
ret
inc
insb
popf
mov
out
std
mov
das
pushf
and
pushf
ss
sub
lds
sub
lods
jge
jno
es
aad
dec
adc
mov
pop
jp
test
jmp
in
cmp
repz
xor
nop
xchg
or
stos
jne
pop
mov
pusha
jno
or
sub
rcrb
vphaddudq
push
adc
loopne
cmp
mov
and
aam
jecxz
pusha
adc
inc
in
in
divl
inc
mov
add
and
push
nop
adc
adc
test
lods
sahf
fadds
cmp
sub
or
jmp
lahf
lcall
daa
xor
incb
sbb
fsubrs
inc
inc
push
gs
insb
adc
jae
pop
push
aas
mov
das
scas
mov
xchg
fcomp
push
orb
aas
jge
aad
int3
mov
pop
lock
out
xor
or
sarl
mov
loop
fstps
mov
lret
sbb
icebp
test
popa
mov
xchg
mov
divb
and
inc
xchg
mov
push
mov
push
outsb
repz
add
cmp
pop
mov
clc
es
into
int
adcl
adc
loope
cmp
insb
jle
ljmp
outsb
lret
pop
adc
stos
fs
jae
xor
pop
pop
cmp
fsubrs
je
xor
sub
test
std
xlat
lods
adc
sarl
mov
mov
cmp
scas
dec
je
data16
push
leave
orl
sub
jecxz
mov
xchg
stc
jecxz
ja
or
arpl
shlb
dec
dec
inc
add
jns
mov
adc
or
imul
stos
dec
lods
or
mov
mov
jecxz
insl
xchg
scas
out
lret
push
mov
mov
jb
xchg
push
lcall
enter
jae
mov
inc
inc
ss
mov
sbbb
mov
addb
jl
std
sbb
xor
jns
mov
ja
mov
cmp
cmpsb
outsb
sub
pop
rorl
add
mov
data16
lods
mov
sbb
xchg
dec
jg
push
mov
fcompl
insb
mov
sub
enter
jge
cmp
pop
and
cs
lret
mov
mov
scas
xor
sarl
imul
cmp
sbb
mov
mov
icebp
or
sub
test
cwtl
movsl
jmp
jle
and
mov
cmp
or
adc
cmp
rorb
lahf
loop
mov
addr16
or
sbb
jle
jbe
into
xchg
push
inc
xor
pop
orb
mov
sbb
or
add
inc
jno
insl
push
icebp
xor
dec
push
inc
pop
hlt
inc
mov
out
dec
fiaddl
mov
cmp
cmpl
aaa
mov
gs
sbb
mov
lret
das
ss
mov
testb
pop
aaa
sub
hlt
loop
mov
pop
add
inc
flds
xchg
pop
xlat
arpl
add
mov
jle
jecxz
test
and
mov
dec
pop
sub
pop
aad
fcmovnb
sbb
cwtl
pop
pop
mov
fdivrs
or
add
call
repnz
adc
movsl
mov
jb
push
outsl
imul
test
leave
sub
mov
pop
pop
push
rclb
jae
xor
rclb
dec
dec
xor
fstpl
popa
cmp
repz
cmpsb
fs
dec
fnstsw
jno
rorl
sti
push
int
fimull
leave
mov
call
outsl
cld
aaa
xor
sti
movsb
fnsave
sbb
test
mov
push
ficompl
mov
cmp
leave
fadd
mov
sbbl
in
outsl
jle
pop
mov
enter
cmp
xchg
cmp
inc
add
pop
icebp
inc
hlt
aaa
push
inc
fsubrp
neg
xor
lods
loop
loopne
xor
ret
jmp
lds
jp
sbb
arpl
in
cmp
sbb
enter
push
push
xor
imul
xlat
mov
pop
rolb
lahf
mov
push
and
es
bound
addb
cli
scas
bnd
xchg
hlt
pop
mov
leave
mov
xor
cmp
push
pop
testl
cltd
outsl
mov
adc
pushw
xchg
mov
mov
pop
rcr
jnp
loopne
int
inc
sarb
mov
in
mov
pop
fs
dec
jns
repnz
out
and
sbb
xchg
inc
and
pop
stc
push
mov
and
mov
jo
dec
dec
inc
mov
dec
xchg
bound
cwtl
jle
push
dec
ja
test
je
pop
jb
leave
inc
xchg
pop
pop
lret
push
xor
sub
pop
adc
mov
cmp
neg
push
push
mov
inc
jne
outsb
es
icebp
faddl
dec
pop
scas
and
imul
jne
jecxz
sbb
and
stos
xor
jp
outsb
les
and
mov
sbb
push
add
lret
pusha
add
xorl
sub
adc
adc
stos
pop
mov
inc
dec
imul
lret
ss
daa
fisubs
cli
sbb
dec
fidivrl
cmpsb
xchg
lahf
test
lahf
jae
dec
mov
mov
mov
pop
pusha
in
adc
inc
rorb
mov
cmovge
jg
mov
jle
out
mov
sub
sub
cmp
pop
fld
fidivrs
cmp
test
mov
push
adc
push
pop
mov
or
xchg
ret
jle
pop
and
imul
sbb
aad
cmp
leave
ja
stos
lock
inc
push
out
mov
sbb
pop
xchg
and
push
es
mov
adc
or
call
jg
or
push
add
div
in
sbb
fdivrl
mov
dec
mov
xor
mov
std
sbb
add
lods
mov
ds
dec
jecxz
stos
or
inc
dec
int
stos
in
add
sbbb
orb
xchg
repnz
xchg
xchg
insl
aaa
xchg
fisttpl
push
push
jmp
lea
xor
fnstsw
lods
add
push
mov
dec
stos
mov
es
adc
out
cmp
adc
lock
jb
cmp
add
mov
lods
push
das
cmpsl
pop
bsf
cmp
push
cmc
mov
outsl
inc
sti
adc
jge
ret
mov
push
jmp
jb
xor
mov
xchg
mov
imul
sbb
sub
cmp
and
mov
in
outsb
or
enter
mov
jne
add
shrl
jp
fisubrl
mov
push
xor
adc
mov
fcmovbe
cmp
jp,pn
mov
iret
stc
dec
sbb
xlat
cmp
fdivp
inc
data16
in
fcoml
jno
nop
fistpll
fcmovnu
pop
test
mov
mov
cmpsl
sbb
dec
push
call
xor
fucomip
push
test
pop
add
jnp
lret
out
mov
and
hlt
add
into
lret
dec
in
mov
arpl
faddl
jbe
popa
cmp
aam
push
js
es
mov
jbe
push
jecxz
fistps
inc
je
jae
cmpsb
out
inc
test
data16
mov
cld
push
adcb
das
xchg
mov
sub
mov
es
cwtl
jb
movsl
sub
idivl
and
or
or
and
ret
pusha
and
mov
insl
mov
jl
call
jmp
pop
xchg
shrb
lods
fcompl
jns
xor
jmp
dec
push
push
aad
or
mov
push
test
ret
dec
or
loop
ja
adc
mov
js
int3
out
jmp
and
cld
in
imul
xor
rol
loop
sbb
mov
je
mov
repz
fs
enter
jg
addl
sahf
shl
or
aam
pop
andb
sbb
ret
adc
jns
ret
test
rcr
mov
cwtl
mov
mov
jl
out
call
sbb
lods
scas
bound
dec
mov
push
push
dec
cmpsl
inc
xor
push
test
fwait
pop
jno
mov
add
lcall
pop
andb
dec
arpl
fldenv
cmp
scas
ja
mov
sub
sbb
xchg
fidivs
lock
int
cmc
adc
icebp
cmp
jnp
jg
ds
jg
shrb
sbb
jb
ljmp
fstp
push
stc
clc
dec
push
test
lret
icebp
stos
stc
fldenv
fcoml
or
mov
sub
aaa
adc
pop
sub
js
jb
lock
dec
int3
or
subl
cmp
mov
lret
jmp
mov
mov
movsl
aas
push
cmp
faddl
daa
sbb
iret
mov
or
lods
lret
gs
test
sbb
sbb
push
iret
mov
rcrb
shlb
ljmp
push
nop
sub
fistl
int3
jne
test
xor
out
fstl
xchg
pop
lret
dec
push
cs
adc
mov
pop
pop
imul
xor
mov
cwtl
cli
mov
push
rolb
fistps
sarb
sahf
jo
movsb
sub
sarl
push
mov
mov
jmp
cs
loopne
out
jbe
mov
add
inc
inc
sub
ljmp
shrl
orb
out
insl
add
repnz
inc
pop
lds
jecxz
stos
pop
push
xchg
and
xchg
lret
ficoms
xor
leave
ret
sarb
cmp
dec
add
jl
sbb
jb
ds
fwait
adc
sbb
or
icebp
adc
dec
push
decl
add
mov
mov
hlt
leave
ror
fdiv
mov
aas
ret
inc
mov
js
fdivp
push
ljmp
cmp
out
gs
incl
adc
pop
insl
in
test
scas
xor
and
pop
push
loope
cmp
loop
push
jne
mov
imul
jbe
ss
into
lock
aam
cmp
pop
mov
in
mov
lret
shlb
icebp
add
xor
jbe
lret
fxch
ret
bound
pop
rolb
jb
push
enter
imul
inc
jno
rclb
push
lods
jmp
xor
sti
jl
xchg
adcb
add
aam
mov
pop
mov
adc
mov
push
ss
jl
jo
mov
cmp
icebp
loope
pop
test
repz
lcall
sbb
gs
jne
aas
xchg
sti
mov
or
daa
decl
shll
cli
je
ss
adc
adc
mov
cmp
loop
or
lret
xchg
push
xor
pop
xor
mov
gs
mov
xlat
aas
dec
lods
jno
jb
dec
xchg
cmp
out
daa
loopne
cs
fildl
sbb
pop
mov
ret
and
imul
pop
mov
adc
jb
jg
mov
adc
sub
rorl
and
sar
add
cmp
sub
push
fs
sub
fcomip
mov
xor
xchg
dec
addr16
mov
mov
test
cmp
ret
mov
jecxz
xor
mov
int3
dec
push
or
lret
pop
addr16
cld
cmp
add
aas
insb
mov
mov
dec
mov
inc
or
jle
sbb
sbb
mov
push
mov
cmp
test
cmp
pop
push
xchg
xor
push
inc
add
mov
loopne
aas
adc
push
lods
add
fisubs
jb
loopne
xor
and
std
pop
cmp
jmp
mov
jb
push
lds
inc
aad
ja
and
xlat
sub
rorb
push
cmp
ret
mov
sub
xor
xor
in
xor
jl
in
js
cld
mov
mul
sub
mov
dec
pextrw
pop
sbb
adc
cmc
add
into
decb
test
cwtl
in
push
imul
push
mov
cmp
xchg
leave
test
insb
ret
testl
push
sub
mov
and
fwait
push
fists
ficoml
das
leave
xchg
sbb
stos
and
pusha
jecxz
push
add
movsb
push
mov
js
inc
into
cld
les
arpl
rcll
jg
fmull
sahf
inc
sub
sbb
dec
push
mov
xor
packssdw
cli
or
es
in
pop
aam
pop
js
popf
xor
sbb
push
push
jno
pop
jmp
inc
pop
dec
mov
lods
lahf
jg
push
xchg
dec
mov
jge
mov
in
call
ds
std
cmp
mov
cmp
es
dec
push
push
dec
aad
aaa
push
pop
and
push
mov
sbb
mov
adc
push
test
add
and
outsl
push
das
mov
jge
ja
xor
push
call
and
scas
push
loope
imul
jmp
pusha
xchg
movsb
inc
nopl
dec
mov
jp
mov
sahf
xchg
cmc
lcall
cli
nop
fsin
dec
and
into
mov
and
sbb
adc
cwtl
push
mov
sti
sub
sbb
inc
cltd
cli
lods
test
jae
xor
ror
adc
in
mov
add
xor
push
repnz
cmp
cmpb
mov
cltd
sbb
imul
rcr
xchg
and
xchg
jo
xchg
mov
mov
fisttpl
fimull
pop
mov
inc
fstl
jg
mov
jecxz
popf
push
cltd
mov
jne
push
xchg
loopne
jne
push
roll
cmp
mov
xor
lcall
test
mov
mov
jb
or
jmp
inc
loope
or
das
push
mov
in
ret
sub
mov
mov
push
cwtl
pushf
push
cltd
enter
jge
repz
sbb
mov
mov
xchg
movb
and
jns
insb
std
xor
push
das
mov
cmp
fs
dec
push
rolb
mov
in
push
lds
xchg
or
sub
fists
std
pop
ficomps
jne
pop
cmp
pop
mov
inc
test
aad
cmp
fildl
imul
jmp
pop
ficompl
popf
orb
dec
dec
outsl
shl
pusha
mov
ss
mov
fldcw
push
mov
cmpsl
fidivrs
lock
enter
lret
cmpsb
and
cmp
movsl
mov
std
mov
test
or
dec
mov
repnz
lods
stos
add
xor
outsb
and
pop
movsb
shrb
cmp
cmpsl
mov
fbstp
pop
ss
addb
stc
lret
lret
push
sbb
lea
mov
mov
bswap
jb
and
shrl
push
adc
dec
and
out
push
popf
mov
cwtl
scas
roll
arpl
push
dec
sbb
shrb
or
xor
lahf
cmpsb
pushf
jnp
xor
jecxz
ret
lret
inc
fsubs
enter
add
mov
leave
lcall
adc
sbb
aaa
and
dec
repz
and
shl
pop
pop
cmpsl
mov
out
dec
mov
out
push
push
aas
xchg
adc
icebp
ds
mov
pop
xor
pop
adcb
or
push
ss
mov
inc
loope
xlat
mov
in
mov
mov
cmp
cli
loop
cltd
jnp
addr16
aaa
push
or
and
xorl
test
fdiv
mov
faddl
mov
or
clc
push
iret
stos
push
aas
fidivrs
repz
fnstenv
rcll
stos
stc
out
js
mov
movl
sub
xchg
push
add
out
iret
cmp
mov
pushw
sub
dec
test
daa
adc
pop
jo
test
sbb
mov
inc
cltd
call
neg
inc
aad
les
jb
cmp
cwtl
fstpl
adcb
shlb
jp
fwait
dec
movsl
push
lcall
imul
jecxz
fidivrs
imul
dec
movsb
aad
dec
mov
scas
inc
je
das
out
insl
jecxz
stos
lcall
add
or
mov
rcrl
jle
push
dec
stos
push
cmc
mov
or
ret
lods
pushf
jmp
add
pop
pop
mov
push
repz
cwtl
jno
cltd
sbb
and
adc
ljmp
test
in
aaa
imul
pop
push
or
jl
mov
mov
sub
mov
movsb
and
enter
pop
in
imul
loope
ja
push
adc
add
mov
mov
push
repz
scas
les
push
xchg
enter
fbld
jle
xchg
sub
add
je
dec
jg
loope
ja
clc
xchg
ss
xchg
outsb
daa
outsb
push
or
xchg
scas
and
inc
pop
int3
mov
outsl
mov
daa
sub
dec
jmp
xor
push
sub
push
jno
dec
fldenv
inc
or
cmp
ficompl
orl
nop
rcr
shrl
es
sub
mov
ljmp
mov
add
shll
jecxz
in
imulb
dec
xchg
dec
sub
stos
aaa
xlat
cltd
dec
test
sub
push
push
jno
lods
mov
adc
jl
test
jge
add
sbb
pop
fwait
and
sbb
and
fmuls
fwait
pop
mov
mov
xlat
or
xchg
dec
mov
sahf
mov
test
int
inc
lock
mov
pop
jmp
rcrb
ja
xchg
adc
aam
cmpsl
test
sbb
mov
add
push
fnstenv
xor
mov
sti
mov
sbb
sub
out
xor
ljmp
rcr
ret
sbb
mov
mov
loope
shlb
fcoms
out
ja
insb
xor
cmc
xchg
and
test
repz
sti
jbe
dec
repz
ja
imul
inc
arpl
sub
sub
mov
cmpsl
push
sbbb
testb
cmp
enter
test
dec
xor
movsb
and
das
cld
cli
pop
call
cmc
xchg
xchg
mov
inc
inc
shrb
ja
out
movb
pop
cmc
sti
scas
ss
outsl
jnp
sub
and
push
push
dec
ss
vmwrite
xor
mov
sub
jno
adc
cmp
cltd
cltd
lds
jns
xchg
hlt
xchg
mov
loopne
xchg
mov
cwtl
inc
dec
in
pop
xchg
ret
lds
mov
and
test
stos
push
xchg
and
sbb
inc
adc
sbb
icebp
push
repz
jmp
daa
push
xor
jno
push
test
adc
fsubp
jecxz
pop
cmp
popf
mov
je
scas
cmpb
es
jae
out
adc
inc
cmp
xor
adc
push
pusha
divl
hlt
popf
sbb
xchg
jl
dec
push
add
sub
outsl
js
inc
insb
pop
scas
cmp
insl
jno
mov
xchg
push
adc
pop
test
push
ret
dec
adc
dec
mov
sbbl
mov
test
xor
mov
pop
movsb
cwtl
push
shr
or
xor
or
cmc
aaa
aad
test
inc
sbb
stc
dec
lahf
cmc
jmp
test
nop
or
mov
rolb
jle
fadds
sahf
js
lods
pushf
and
loopne
sbb
int
fsubrs
sti
or
leave
jg
pop
inc
pop
xchg
imul
mov
lock
add
hlt
divps
pop
out
inc
cmp
push
fwait
je
mov
daa
pop
push
lds
xchg
ret
lock
xchg
arpl
bound
pop
sub
or
lcall
dec
dec
and
shlb
mov
sti
addb
xor
sbb
out
in
mov
ret
stos
cmpsb
sahf
jle
xchg
mov
cld
cmpsb
jb
scas
and
sub
pop
cmc
das
in
repz
cld
shrb
dec
cltd
out
cwtl
outsl
xchg
mov
add
add
popf
sarl
cwtl
pusha
test
ret
mov
inc
imul
cmp
or
xchg
add
sbb
pusha
gs
pop
push
mov
fcmovne
je
or
adc
lret
push
cltd
add
jns
and
dec
loopne
xchg
shrl
jmp
cmp
out
inc
lret
adc
stos
sbb
xor
dec
xchg
fcomps
icebp
add
clc
mov
push
and
fldcw
push
mov
leave
xchg
addr16
enter
out
sti
addr16
push
add
dec
aad
add
or
jbe
adc
adc
add
push
push
lea
lcall
inc
mov
xchg
xorl
or
cmp
mov
stos
inc
jno
cmp
pushf
mov
out
pop
in
sub
cs
cld
in
push
push
lret
xor
sti
dec
jmp
adc
out
jns
pop
jo
sub
push
mov
pop
andl
fstps
pop
lcall
xchg
xchg
pop
sub
out
inc
and
arpl
rep
xchg
or
pop
xchg
imul
mov
or
mov
ljmp
xor
dec
ljmp
pop
dec
xor
into
outsb
inc
sbbb
adc
xchg
jg
pop
fildll
call
pop
popf
sbb
cld
subl
cli
addr16
dec
in
cmp
repnz
or
jne
xor
out
cli
xor
fnstenv
std
call
jno
jle
ficoml
shll
xchg
es
jecxz
idivl
pop
shrl
hlt
mov
push
mov
and
subb
adc
femms
cmp
scas
sarb
iret
push
add
sarb
das
cmc
sub
sarb
mov
jle
and
cmp
scas
cmp
popa
adc
cmp
cmp
inc
sub
push
insb
jmp
shl
sahf
add
stc
mov
gs
mov
or
or
insb
push
xorb
fdivr
orl
ja
and
add
pop
jnp
testl
into
popa
popa
subb
pop
aad
xchg
mov
mov
mov
daa
mov
pop
stos
mov
add
and
in
stos
fwait
add
arpl
and
ss
sbb
fwait
stos
mov
adc
lret
pop
shr
in
sti
and
xor
sbb
shr
add
cmpsb
shlb
xor
and
cmpsl
dec
pop
push
dec
mov
shrb
icebp
mov
mov
mov
movb
push
sub
shl
mov
sbb
adc
imul
out
add
mov
xor
mov
or
roll
or
ja
shl
bound
insl
ds
bound
mov
xlat
dec
insl
jge
dec
xlat
out
loopne
dec
andb
xor
jle
jle
lods
pop
sarb
add
out
sub
pop
sub
cli
out
imul
lods
or
fidivrl
pop
push
push
shrl
adcl
dec
pushf
mov
lret
je
sbb
lock
mov
jge
nop
fs
test
enter
jne
ss
mov
cmp
mov
sbb
ds
xchg
sub
add
push
addr16
nop
inc
mov
lods
shrl
mov
mov
pop
adc
lds
int3
in
jge
fcompl
es
cwtl
insl
add
or
sub
repnz
stc
inc
ja
mov
sbb
push
pop
push
cld
lret
sti
fists
mov
clc
or
push
das
jl
ficompl
xchg
dec
mov
cltd
icebp
adc
aad
lahf
lods
xchg
adc
movsl
push
inc
shlb
and
mov
push
aam
pop
dec
mov
fistpl
adc
inc
loope
dec
and
scas
xor
lcall
cmpsl
pop
jae
lret
aam
mov
fxch
jo
and
cwtl
cmc
cld
push
stos
repz
icebp
cwtl
jne
xor
mov
bound
cmp
mov
cmpb
test
stos
inc
or
in
test
xor
fldcw
dec
add
push
or
outsl
inc
sti
push
and
mov
incb
inc
std
jl
mov
xchg
dec
out
jb
cmp
jp
stos
push
mov
mov
sub
add
movsl
sub
adc
push
mov
movsl
xchg
jmp
les
mov
push
ljmp
lock
out
repnz
push
cmpsb
dec
cltd
pop
pop
mov
mov
jbe
mov
int3
and
xor
adc
mov
test
rorl
xorl
lock
into
lcall
decl
nop
push
mov
xchg
jb
xor
pusha
in
adc
leave
mov
pop
xchg
in
pop
pushf
pop
mov
mov
jle
or
out
mov
xor
pop
cld
jae
in
or
cltd
les
bound
dec
sub
or
inc
xor
add
enter
jnp
mov
dec
xchg
mov
or
sbbl
stos
jle
movsb
push
jge,pt
fisubrs
push
les
dec
push
pop
ret
jmp
mov
mov
aam
or
lods
dec
or
pop
jp
sub
lods
dec
mov
xor
pop
jae
lods
jne
je
ljmp
ret
and
xor
push
or
sbb
sarl
sub
pop
xchg
jge
dec
adc
push
jno
arpl
cld
push
lds
testb
mov
sub
jne
ficoml
test
xor
dec
hlt
sahf
frstor
fs
mov
push
xor
jge
mov
js
int
mov
or
or
ja
xchg
adc
lret
pop
mov
clc
jecxz
pop
shl
push
dec
dec
or
fisubs
mov
aaa
into
lcall
das
cmp
stos
and
jl
cmp
mov
mov
jae
arpl
inc
test
outsl
pop
pop
cmp
lea
clc
or
adc
imul
sar
cltd
mov
jae
add
sbb
jns
cmp
mov
and
shr
fisttpll
icebp
orl
pop
pushl
mov
inc
sbb
les
mov
sbb
fcompp
sbb
dec
cmp
mov
adc
cmp
cmp
shl
gs
mov
stos
xor
pop
fst
pop
jl
pusha
std
shlb
int3
jb
jns
fidivrl
push
loopne
jle
xchg
inc
daa
pushf
in
insb
mov
add
enter
mov
clc
push
jmp
mov
out
pop
fs
test
movsb
imul
lods
push
xchg
sbb
int3
inc
orl
dec
cltd
aam
sub
cmc
icebp
imul
inc
push
and
and
clc
sbbb
cwtl
dec
push
in
clc
jne
jne
sbb
pop
fisttpll
mov
xor
gs
aaa
push
mov
or
pop
xchg
mov
nop
das
int
xor
push
pop
jnp
loope
pop
cmpsl
push
mov
dec
xor
std
insb
cmpsb
lret
jp
sub
mov
add
and
jge
mov
push
dec
or
mov
outsl
jp
repnz
pop
jge
jmp
std
pusha
leave
dec
popf
nop
fbstp
iret
icebp
sub
jle
push
inc
xchg
and
ja
mov
mov
mov
xor
adc
icebp
xchg
and
jmp
xchg
mov
sbb
orb
jl
fdivl
mov
adc
scas
in
xchg
cli
cmp
ret
fidivs
xchg
dec
data16
jbe
rcrb
add
push
mov
jmp
jo
out
lods
sub
addr16
inc
mov
clc
sub
jge
mov
xchg
push
inc
mov
es
dec
push
cli
push
shrb
out
cld
lcall
and
xchg
ss
es
pushf
mov
ss
mov
jmp
outsb
mov
xlat
into
adc
and
and
pop
outsl
dec
dec
out
mov
arpl
push
ds
in
dec
lods
sbb
repnz
jne
ret
jecxz
or
movlps
mov
sbb
clc
xchg
cmp
ret
add
sbb
subl
cmp
je
hlt
xor
cli
fdiv
and
test
icebp
sbb
hlt
insb
fwait
lods
pop
mov
mov
cmpsl
jno
into
mov
cs
inc
dec
in
pop
add
cmc
sbb
out
mov
pop
ret
ljmp
stos
mov
jns
jbe
inc
mov
addb
push
repz
out
pmullw
push
or
sbb
xor
mov
aas
adc
mov
cmp
cmpsb
jo
jg
xor
adc
fcmove
pushaw
or
shlb
adc
push
in
mov
cs
or
xor
inc
xchg
pushf
stc
xor
dec
cld
out
test
jge
dec
pop
stos
sub
icebp
mov
dec
fnstenv
out
jle
add
dec
out
test
mov
pop
sti
movsl
mov
inc
add
rcrl
dec
xchg
pop
aam
xchg
push
aas
shlb
push
in
shll
loop
add
and
push
sbb
xor
add
bound
pop
pop
dec
mov
xor
stos
sbb
daa
adc
ds
adc
mov
jmp
dec
jne
mov
std
mov
jle
aad
pop
push
sub
jge
and
rolb
js
mov
mov
xchg
sbb
mov
sub
dec
pop
sbb
fcmovu
add
or
loopne
add
fdivl
xchg
or
loope
pop
jo
mov
inc
test
not
xchg
and
push
je
insl
pop
test
push
stc
push
rclb
xor
cmc
incl
ds
movsl
loop
test
in
dec
lods
fucomp
call
dec
lods
stos
mov
mov
arpl
xor
stc
cmp
cmpsb
hlt
ljmp
jne
inc
pop
insl
mov
push
insb
inc
cmp
loopne
rcrb
mov
aad
negl
test
push
or
scas
ja
cmp
jp
sbb
mov
sarl
insb
push
stc
adc
dec
dec
loope
js
sti
clc
insl
jmp
test
pusha
in
out
mov
inc
lcall
lret
mov
mov
mov
jl
cmovle
push
lret
pop
cmpsl
lret
dec
xchg
cwtl
sub
jo
psubw
cmpsb
mov
sarl
fstps
sub
push
cmpsl
leave
mov
sub
test
or
cmp
dec
mov
in
lcall
sbb
test
push
mov
cmp
std
repnz
inc
sbb
push
shll
stos
sbb
mov
popf
dec
test
adc
add
inc
mov
je
ds
mov
or
bound
addl
int3
std
jnp
fcomps
jno
sub
addb
shl
jmp
cmpl
push
jo
loope
or
stos
add
cmp
aam
and
jne
loop
xchg
jbe
or
push
pop
xchg
add
clc
test
pop
sti
jge
adc
jl
test
leave
xchg
pushf
cmp
orl
data16
add
lods
lret
mov
sbb
sub
jne
push
jo
jecxz
adc
jmp
into
stos
jnp
sti
cs
incl
xor
jle
fistl
inc
xor
cli
cli
aas
add
pop
popa
hlt
outsb
pop
xchg
mov
bound
shrl
push
add
xlat
dec
aad
adc
repnz
je
jl
xlat
fistpl
jno
push
dec
xor
dec
loop
arpl
or
cld
fs
mov
test
rorl
add
dec
add
call
pop
dec
sub
sub
in
out
std
sub
lcall
shll
aas
mov
cmp
cmpsb
push
mov
or
xor
push
mov
popl
jmp
fldenv
xchg
nop
and
ret
xchg
xor
mov
adc
jg
xchg
mov
mov
cltd
repnz
inc
ljmp
aad
mov
fs
or
ds
aaa
add
scas
test
jge
fwait
push
scas
mov
daa
lahf
movsl
cwtl
scas
mov
int3
shl
inc
mov
xchg
stc
not
in
cmc
xchg
pop
push
stos
jmp
es
mov
es
xor
add
ds
and
jbe
pop
mov
push
jg
jg
es
jle
ret
inc
pop
stos
fstps
dec
fdivl
xchg
testb
add
jge
cmpsb
ss
fdivrl
mov
add
lret
mov
shlb
leave
pushf
xor
js
imul
add
lds
push
movsb
cli
dec
cld
adc
scas
addr16
pushl
push
stos
pop
mov
shll
mov
push
add
add
pop
mov
push
idivb
mov
imul
into
push
mov
mov
mov
shll
aaa
jge
in
fs
pop
mov
pop
sub
cli
imull
shrl
or
push
adc
sbb
out
sarb
cmpsl
push
jecxz
xor
jmp
rcll
mov
and
add
jbe
adc
arpl
mov
xchg
mov
mov
nop
adc
in
xor
xchg
bound
hlt
ret
lods
jmp
mov
inc
test
push
push
in
xchg
sbb
cltd
jo
sbb
icebp
rcl
xor
cmc
lock
arpl
or
cld
push
popa
icebp
stc
dec
xor
xchg
pop
pop
xor
mov
mov
pop
call
ret
loopne
push
rcrl
cmp
lock
cmp
lea
sbb
loope
dec
jbe
mov
repnz
cmp
mov
clc
pop
adc
jbe
gs
jb
add
jg
mov
in
fcomps
or
mov
adc
fadds
in
popf
loopne
and
cmpsl
sbb
sub
push
daa
je
outsb
dec
mov
loope
int
mov
xor
and
xchg
and
fisttpl
mov
mov
mov
or
cmp
jb
mov
mov
shlb
pop
jp
ret
cs
pop
fmuls
adc
decl
inc
jno
fstl
mov
imul
dec
xchg
push
test
inc
shlb
out
ja
call
lea
or
jb
mov
add
iret
jb
cld
stc
jp
inc
stos
mov
imul
adc
call
xor
lahf
xor
mov
sbb
mov
xchg
js
out
loopne
add
push
lods
popa
cmpb
nop
pop
dec
test
je
leave
iret
insl
popa
jo
add
sbb
dec
aas
dec
lcall
add
add
pusha
push
sub
rolb
paddusw
push
dec
push
jbe
popf
rcl
mov
fiaddl
sarb
sub
add
xchg
sbb
add
pushf
cmpsl
adcb
push
sub
in
push
mov
mov
pop
cmp
xchg
pop
fdivrl
mov
jecxz
mov
and
out
pop
cwtl
push
aad
in
test
filds
in
jns
mov
test
std
jle
mov
arpl
stos
mov
mov
dec
aam
push
adc
push
push
loope
in
cmp
jbe
push
push
xlat
pop
ja
jle
daa
cld
andb
imul
ss
mov
movsb
sub
sub
sub
adc
rorb
daa
daa
nop
idivl
in
pusha
jnp
stc
pop
xchg
pop
imul
inc
leave
ffreep
test
iret
push
in
cmp
jecxz
sbb
cwtl
mov
push
mov
xor
jo
stos
repnz
fs
ds
mov
fdivrs
inc
in
mov
jne
shll
mov
lds
mov
ficoml
xlat
iret
les
or
dec
xchg
jmp
imul
add
pop
lock
mov
subl
add
jg
jo
arpl
sub
popa
xchg
push
gs
xor
fs
cmp
pop
stos
jo
loop
lods
pushl
pusha
adc
mov
inc
cmp
fcompl
adc
iret
sub
push
mov
rorb
rcrb
xor
ss
add
shl
test
loope
xchg
imul
outsl
imul
or
jbe
lret
nop
pop
gs
int3
and
pushf
mov
out
cltd
fsubl
pop
pop
push
mov
arpl
jbe
or
imul
xor
push
mov
das
cs
clc
dec
lret
je
and
jecxz
fadd
lcall
sbb
sbb
lret
cwtl
pushf
imul
fucomi
dec
hlt
or
pop
lea
roll
sub
in
dec
test
and
xchg
or
mov
das
adc
adc
sbb
inc
pusha
lods
test
mov
cmp
pop
dec
add
push
add
roll
xchg
ds
pusha
or
test
in
movsb
jno
mov
inc
gs
enter
dec
mov
cs
jno
fmull
lock
inc
jecxz
pop
int
mov
cmp
cmp
ret
sub
pop
je
adc
xchg
fwait
cwtl
enter
xor
cmp
sbb
mov
push
lahf
add
arpl
repnz
xchg
sub
loop
into
add
fdivr
out
orl
push
cmc
jne
inc
cltd
shlb
jnp
movsl
aad
add
sub
mov
fdivrs
das
xchg
push
mov
pop
iret
inc
inc
in
jmp
sti
sbb
bound
cmpsl
icebp
scas
std
int3
inc
push
add
scas
mov
sub
loope
and
xor
call
jo
mov
hlt
push
es
or
add
icebp
push
pushf
les
adc
mov
sbb
mov
cmpsl
inc
jns
lret
push
and
adc
or
dec
loope
mov
inc
mov
scas
pop
fdivs
inc
loopne
inc
fmull
or
lcall
lret
pop
and
scas
es
fistl
adc
shlb
push
push
ret
inc
fs
push
mov
add
mov
in
and
test
xor
dec
or
pop
ja
xorb
xchg
push
mov
les
fcoms
cmp
xor
out
sbb
sti
roll
fmull
mov
pop
pop
jne
add
mov
in
inc
xchg
mov
std
xor
aam
push
cmp
out
sbb
mov
pusha
xor
adc
aaa
jmp
and
xchg
adc
or
mov
add
add
mov
clc
add
xor
inc
adc
shlb
ja
sti
ja
scas
movsb
xchg
fisubl
and
enter
ret
ret
adc
insb
cltd
daa
cmp
xchg
stc
popa
imul
adc
sbb
scas
popa
mov
sub
cltd
sub
push
lods
and
inc
jl
dec
adc
cmpsl
ljmp
ljmp
mov
push
or
fisttpll
xchg
arpl
xor
loopne
call
mov
rolb
rcrl
jge
pop
std
icebp
daa
jae
pop
jle
mov
pop
dec
cmp
push
shll
int
test
adc
rorb
pop
lcall
mov
insl
pop
adc
push
insl
cltd
mov
xorb
std
ja
gs
arpl
adc
inc
insb
ret
popa
mov
nop
sbbl
loope
cld
jp
and
or
jle
aas
inc
mov
xchg
fstl
xchg
movsb
inc
pop
lret
and
pop
stos
and
imul
lods
mov
cs
pop
iret
cld
pop
jb
mov
jns
popa
mov
xor
dec
sub
dec
pop
cmp
or
out
jp
push
cmp
bound
test
jae
push
in
fisttpll
mov
pushf
pop
mov
sub
lahf
lods
jle,pn
dec
loopne
fdivs
push
push
xchg
dec
jge
sub
js
jne
jbe
mov
ljmp
sbb
cmp
jns
jbe
push
mov
pop
jne
sbb
mov
int
mov
fs
pop
jae
cld
push
cmc
repnz
push
iret
jae
push
push
scas
popf
lea
pop
inc
mov
xor
stos
hlt
scas
aaa
outsb
or
pushf
sahf
jmp
adc
cld
fs
repnz
jmp
into
lret
loop
xor
pop
push
pop
cmp
out
dec
cs
mov
int
loopne
adcb
jno
cmpsl
into
movb
rcl
jbe
in
jb
fldenv
and
mov
fadd
adc
ljmp
lret
popf
push
rorb
gs
lea
mov
ljmp
adc
test
inc
or
sub
cmp
jle
or
mov
add
call
push
and
sub
jbe
adc
xchg
fcomi
xlat
testb
mov
jle
xchg
push
loopne
add
nop
in
das
mov
mov
cmp
loope
pop
leave
sub
jp
mov
repnz
add
push
dec
xchg
shll
push
mov
shrb
pop
test
mov
aad
sbbb
arpl
lods
cmp
mov
adc
push
bound
sbb
mov
mov
inc
xor
xchg
out
addb
xchg
inc
repz
mov
adc
ret
aaa
cmp
frstor
iret
sbb
insb
or
cmp
push
jb
lock
aam
loop
dec
insl
lock
je
in
inc
pop
jmp
push
aaa
jne
push
pop
js
test
jno
movsl
fisttpll
adc
dec
xchg
mov
jmp
out
xor
and
mov
lds
outsb
xchg
in
mov
adc
mov
cmp
inc
jb
clc
sub
pop
adc
cmp
outsb
arpl
inc
inc
into
mov
xor
fbld
subl
pushf
aaa
mull
imul
cltd
mov
out
test
insl
xchg
xor
std
inc
mov
dec
mov
or
mov
dec
and
xchg
and
loope
fnstsw
fwait
jg
loopne
xor
pop
mov
js
xchg
mov
out
pop
fiaddl
fcomps
mov
mov
xchg
in
push
leave
movsb
incb
cmc
mov
in
repnz
mov
roll
dec
cmpl
jae
xor
repnz
xchg
test
aaa
mov
or
jae
or
mov
jge
or
sub
pop
xchg
xchg
gs
aad
push
mov
aam
jge
adc
aad
pop
fcoms
adc
aam
fisttps
stc
mov
and
lods
dec
int3
jne
xlat
push
push
lock
cmpsb
mov
adc
mov
movlps
cmp
mov
xor
add
jns
xchg
and
add
popf
mov
repnz
pop
jbe
sbb
gs
mov
ss
test
mov
xchg
rcrl
dec
je
cmc
add
aas
dec
jae
std
add
xor
jne
mov
arpl
nop
pop
popa
and
arpl
outsl
adc
cmp
jmp
mov
pop
out
xor
pushf
into
aam
and
push
subl
subl
in
insb
add
loopne
repnz
addr16
aam
clc
sbb
and
mov
cmpsb
cmp
test
pop
pop
iret
sbb
dec
nop
xor
stos
insb
loopne
test
add
xchg
fwait
lret
jmp
js
enter
aaa
mov
push
adc
mov
in
xchg
push
pop
push
xchg
push
imul
outsb
nop
imul
pop
or
movsl
fpatan
popa
jno
lahf
fcoml
xor
insl
lds
push
dec
mov
cli
xor
arpl
jae
add
cwtl
adc
mov
aas
pop
sbb
xchg
out
mov
jge
xor
add
sbb
ljmp
in
pop
adc
test
fmuls
ss
cmp
lock
subl
andl
psrad
enter
mov
mov
or
cmp
push
and
dec
ret
dec
mov
shr
or
inc
hlt
pop
add
repnz
test
pop
fisubs
in
xchg
paddsw
enter
jg
sbb
jle
push
loope
push
or
xor
mov
orb
cltd
bnd
and
pop
addr16
popf
push
lods
inc
sub
jns
mov
jecxz
dec
mov
or
daa
data16
ljmp
insl
xchg
movsl
lret
or
jb
stc
cmp
ljmp
je
xacquire
and
jmp
jbe
mov
cmpsb
mov
xor
mull
scas
cli
pusha
xor
push
mul
test
test
mov
xor
fwait
sub
push
inc
idiv
add
pop
mull
inc
pop
jns
das
cmpsb
pop
lods
push
sub
fsubrl
or
dec
addr16
push
sti
jbe
and
inc
out
lea
mov
xor
jnp
mov
mov
cld
adc
inc
bound
add
mov
sbb
cmp
mov
adc
bound
push
lahf
loop
sarl
add
add
sub
aad
and
lods
push
pop
mov
iret
adc
shlb
loopne
cwtl
xlat
into
sub
rorl
sahf
ficomps
insb
cmp
bnd
sbb
or
sti
sbb
dec
std
sbbl
cmp
xchg
dec
adc
mov
outsl
xchg
add
cs
mov
imull
inc
ljmp
lea
ja
stos
enter
arpl
ss
aam
sti
mov
pop
testb
push
divb
dec
mov
cli
daa
add
test
imul
fdivs
xchg
ret
cmp
adc
push
mov
insl
pushw
out
enter
xor
repnz
jb
lahf
adc
lock
mov
cmc
sarb
das
cmpl
call
clc
test
adc
outsb
out
mov
jecxz
insb
mov
cmp
pusha
inc
fimull
nop
fwait
movsb
arpl
enter
push
or
jle
fldt
shll
push
lret
daa
pop
jecxz
cmp
lds
or
data16
pop
scas
cmp
adc
fs
rclb
mov
cld
sbb
mov
mov
in
ret
neg
into
inc
adc
stos
cmp
add
mov
mov
cwtl
xor
mov
shr
or
mov
dec
and
sbb
es
inc
pop
out
iret
test
mov
call
cld
mov
adc
sarl
into
loopne
adc
mov
bound
cmp
sarl
dec
arpl
in
sub
nop
test
cld
jl
pop
mov
adcb
cmpsl
pop
xchg
pop
inc
add
pop
out
incb
jb
ret
lret
test
xchg
cmc
lea
aam
dec
cli
xchg
fnsave
popf
or
cs
add
xchg
aam
mov
fsubr
or
movsl
iret
lods
cmpsl
shrb
lcall
sarl
arpl
mov
lock
inc
in
loop
mov
aad
lea
in
xchg
scas
gs
in
mov
shlb
xchg
mov
sti
cmp
imul
push
xchg
leave
pusha
sbb
xchg
xor
lea
cld
clc
xchg
cmpsb
fadds
xor
jmp
and
ret
xor
jo
adc
ret
xor
insb
cltd
in
xchg
arpl
lret
enter
stc
push
dec
or
mov
lods
in
mull
iret
int
add
mov
mov
out
cwtl
pop
xor
inc
inc
sub
xchg
das
push
movsl
in
outsb
adc
xchg
pop
inc
fs
push
insb
lret
les
xchg
pop
push
jmp
in
leave
inc
movsb
dec
and
jecxz
mov
adc
push
mov
inc
test
jp
sbb
or
sbb
sbb
imul
popa
push
mull
push
push
jbe
arpl
loop
movsl
loope
push
dec
mov
pop
jae
add
out
sub
fs
stc
jae
inc
push
fwait
pop
test
icebp
push
pushf
pop
fcmovnu
scas
movsl
dec
cmpsl
mov
mov
into
stos
fwait
lret
mov
sbb
adc
mov
jg
add
fiaddl
jbe
push
popf
adc
cs
mov
test
sahf
jno
push
cmpl
outsb
movsl
call
jg
sub
scas
push
data16
jno
adc
pushf
and
and
push
shlb
sbb
mov
hlt
mov
mov
sbb
pop
fbstp
aam
cmp
dec
or
xchg
jl
mov
pop
pop
sub
fs
mov
fdivrl
mov
fildll
call
leave
mov
cmp
lea
fisubl
insl
hlt
mov
mov
gs
enter
insb
cwtl
or
es
lods
out
ja
test
loop
mov
inc
insl
insb
cmp
xor
pop
xchg
lea
shll
dec
dec
adc
xchg
nop
mov
mov
out
xor
pop
sub
daa
roll
or
jecxz
xor
cmp
sbb
daa
insl
inc
dec
das
push
jbe
inc
shrb
pop
xor
fwait
xchg
push
aaa
in
stc
vpavgw
cmp
mov
inc
push
mov
xchg
outsb
and
cltd
mov
pop
sbb
into
push
jb
mov
stos
xchg
or
cmpsb
sahf
mov
addl
cmp
and
mov
popf
pop
aas
or
adc
data16
call
xchg
push
mov
xchg
jno
or
outsb
into
sbb
imul
enter
adc
out
jle
inc
mov
xor
cmovle
xchg
cmp
push
sti
mov
dec
inc
imul
dec
mov
lds
cs
pop
push
pop
mov
out
movsl
sub
mov
mov
insb
gs
dec
test
sbb
and
pop
pop
data16
clc
mov
jne
and
outsl
push
or
lea
repnz
fisubs
into
int3
mov
sbb
insl
movsb
add
pushf
lret
andps
inc
push
xchg
orl
mov
pushf
out
loop
mov
and
mov
jns
mov
jmp
push
mulb
push
into
rorl
enter
and
and
sbb
scas
enter
mov
xlat
sbb
ja
mov
adc
cltd
push
jp
pop
sbb
dec
pop
mov
xor
fsubrl
jne
aam
lock
dec
jb
fstl
mov
mov
sub
jnp
mov
fdivp
push
adc
pop
sub
fs
sub
xor
repz
jae
dec
mov
test
sbb
mov
push
sbb
fisubrs
cmp
fsts
data16
stos
jmp
mov
movsb
mov
ss
inc
pop
clc
push
daa
sbb
std
lods
je
lods
dec
mov
cmp
cltd
andl
dec
jl
ljmp
gs
jbe
cmc
int
mov
mov
xor
xor
out
xchg
jl
push
cli
and
scas
in
call
mov
aaa
push
sub
lret
stos
outsb
add
or
lahf
jo
lods
js
je
loopne
mov
mov
mov
movsl
mov
push
cmp
xchg
stos
sbb
push
lods
pop
mov
testl
xchg
fisubrl
xor
repnz
xor
mov
scas
imul
mov
cmpsb
dec
ljmp
wbinvd
sbb
mov
std
xchg
outsb
out
mov
mov
arpl
sbb
mull
repnz
xor
xor
dec
jae
push
lods
cmc
cld
mov
andb
pop
es
jl
xchg
inc
lcall
push
repz
and
iret
xor
out
inc
fwait
pop
test
in
loop
icebp
and
pop
xchg
sbb
popa
rcrl
das
cmp
push
js
adc
jns
add
xchg
dec
or
pop
out
or
nop
hlt
arpl
dec
nop
pop
xchg
pop
mov
aad
push
inc
mov
adc
xchg
xchg
cmp
mov
xor
scas
sbb
or
add
hlt
xlat
add
pop
sub
cld
outsl
ljmp
xchg
sahf
imul
sbb
cmp
call
movsb
and
add
and
xchg
js
xor
pop
xchg
dec
xchg
pushw
pusha
cmpsl
imul
scas
jg
pop
mov
lahf
int
cmc
cwtl
ds
incl
mov
in
pcmpeqb
xchg
lret
sti
call
fcoml
movsl
adc
ds
push
outsb
jbe
loopne
ss
mov
inc
ret
mov
push
cmp
je
and
jge
push
lret
jp
mov
idivb
inc
int3
sbb
pusha
mov
inc
jne
mov
int
add
jnp
je
stos
test
pop
aad
mov
aaa
xchg
jg
loop
mov
mov
push
add
mov
pusha
sbb
movl
ficompl
ja
sahf
add
js
xorb
inc
stos
in
cmpsl
cmp
push
iret
fisubl
gs
in
push
sub
jp
pop
mov
int3
js
inc
or
push
nop
mov
lods
push
and
arpl
repz
insb
inc
add
mov
pop
mov
xchg
pushaw
xor
and
sub
shlb
sbb
xchg
addr16
mov
jo
jge
cmpsb
js
pushf
add
mov
loope
aam
or
cmp
sbb
mov
xchg
xchg
mov
dec
mov
push
in
sbb
mov
jge
or
adc
lds
lds
hlt
xorl
dec
je
mov
jnp
les
popf
out
and
rolb
xchg
mov
adc
inc
sub
jae
and
rcrl
negl
fstl
ja
xchg
cmp
sahf
pop
pop
lea
repnz
and
adc
arpl
mov
inc
xchg
lea
sub
clc
fs
jns
pop
testl
xchg
dec
jl
inc
xchg
jle
outsb
pushf
scas
lahf
cmc
shrl
sbb
gs
mov
nop
orl
pop
jecxz
fs
pusha
ret
inc
cmp
sti
add
mov
hlt
pop
ljmp
lods
ds
lods
jp
mov
adc
push
xchg
jo
push
test
pop
adc
pop
mov
mov
stos
cld
imul
xor
fdivp
push
pushf
in
dec
lret
sarl
lock
sbb
test
roll
ret
adc
test
imul
sub
inc
mov
inc
stos
sub
or
filds
mov
test
in
mov
ret
push
cmc
jmp
add
and
xchg
es
mov
clc
out
jle
jnp
ret
insb
jl
mov
or
gs
add
jle
scas
pop
xchg
dec
int3
lret
pop
and
out
jecxz
imul
ficompl
and
adc
dec
jns
pop
xchg
push
dec
or
dec
push
dec
push
aam
mov
mov
and
xor
xor
xor
xchg
pop
xchg
cli
loop
loopne
fwait
sbb
pop
dec
addr16
lea
or
pop
cmp
ret
cmp
in
mov
in
movaps
mov
push
sbbl
mov
cli
mov
cld
pop
arpl
mov
xor
inc
push
mov
push
cmpsb
jbe
xchg
sti
popf
lock
pop
movsl
cli
sub
out
jp
loop
dec
ja,pt
mov
xchg
icebp
mov
lret
shl
jne
pop
sub
sbb
dec
xor
mov
and
dec
mov
ja
and
daa
test
pop
xlat
jg
lds
out
mov
and
push
ret
cld
fwait
mov
testl
inc
lcall
aam
fidivl
in
test
test
in
dec
jmp
cmp
mov
xor
jecxz
pop
inc
cmpsl
jb
idivb
xor
and
dec
xor
lock
pop
outsb
fmull
repnz
mov
fs
arpl
mov
rcrb
sarl
data16
lds
cmp
xchg
cmp
push
das
not
cmpsb
and
push
imul
pop
mov
mov
fiaddl
add
adc
je
mov
aam
mov
in
pop
jb
roll
loopne
lcall
jne
arpl
or
inc
ds
cltd
aas
jmp
mov
shrl
lds
sbb
cmp
adc
and
outsl
incb
outsb
sub
inc
xor
xor
lock
test
outsb
pop
cwtl
loopne
lcall
mov
inc
sbb
mov
push
xchg
pop
lds
or
mov
mov
fwait
dec
xchg
lods
fisttps
insb
add
sub
jb
push
aas
mov
test
shll
or
dec
imul
push
shll
popf
idivl
xor
in
ss
pop
jecxz
fidivrl
and
roll
inc
lahf
inc
outsl
lahf
testl
dec
popf
clc
jb
in
out
jge
jns
push
ffreep
lods
jns,pt
mov
sbbl
fsubrl
cli
fistpll
and
mov
aad
push
enter
nop
pop
adc
in
pop
pop
popa
jp
shrb
cmp
push
mov
cmp
mov
das
cmp
sub
push
aas
dec
push
sub
sub
out
icebp
popf
fbld
mov
xchg
loopne
lds
setp
mov
es
inc
fsubr
mov
lcall
loopne
inc
and
out
mov
stc
cltd
cmp
xor
cmp
xchg
adc
mov
sub
add
mov
jmp
jmp
dec
adc
daa
push
push
cmp
leave
stos
icebp
or
xchg
pop
add
push
outsl
hlt
imul
add
movsb
inc
andl
sbb
pop
sub
shll
or
mov
push
mov
add
mov
les
adc
pop
fsubrs
adc
add
ret
cwtl
push
rcr
aad
cmpsl
and
cwtl
jecxz
adc
inc
push
mov
xchg
push
mov
lds
push
test
push
outsb
hlt
cmpsb
repz
mov
ds
das
mov
jno
cwtl
inc
xorl
mov
lret
or
push
gs
repz
or
and
pusha
addr16
mov
outsb
ds
add
and
in
push
je
mov
ljmp
sbb
sti
loop
aam
xchg
pop
adc
xor
sub
mov
push
mov
int3
mov
popf
enter
cmp
fadd
cs
xchg
jbe
mov
or
inc
ss
xchg
xlat
das
jl
stc
inc
ret
xor
iret
rcrb
and
add
fpatan
pop
inc
or
rorl
cwtl
mov
sub
pop
push
adc
cmp
jno
in
mov
mov
and
xchg
rcl
aaa
cmp
sbb
arpl
rorl
bound
out
cmc
adc
sti
push
push
xor
cs
dec
add
sbb
ds
jo
adc
adc
jmp
arpl
add
cmp
add
rep
xchg
aad
or
mov
cld
orl
pop
outsl
inc
fnstcw
or
mov
jecxz
jae
mov
pop
daa
fsts
mov
ror
xchg
add
push
dec
fstps
or
xlat
xor
sbb
dec
fldcw
rol
aad
mov
daa
xor
xchg
xchg
fwait
push
mov
movsb
sub
popa
call
and
mov
mov
test
adc
xchg
insl
pop
in
das
orb
xor
mov
popa
int
jle
mov
movsb
mov
mov
aad
fistpll
daa
cmp
cld
mov
aaa
dec
sub
and
mov
mov
daa
pusha
cld
pop
add
fcmovnbe
test
mov
cmpsl
sbb
shrb
popf
js
out
out
in
mov
xlat
push
int
mov
popf
rolb
and
or
add
or
xchg
sbb
sbb
jge
imul
xchg
test
sbbl
sub
and
jo
jge
lods
into
xchg
inc
push
fisubrl
adc
adc
in
add
jecxz
cs
xchg
lock
jnp
add
mov
outsb
loope
fcoml
lea
ret
inc
xlat
shll
and
mov
cmc
enter
fwait
dec
pop
cmc
mov
hlt
std
jbe
test
jae
lods
add
add
lret
es
jo
fcmovnu
in
sub
mov
popa
push
push
fadd
leave
call
das
testl
rclb
push
idivb
lods
adc
xchg
movl
les
or
aam
xor
and
add
xrelease
cmp
outsb
pushf
or
cmc
cmp
jge
stos
loopne
fidivl
pop
notb
mov
jo
mov
sbb
cmpsb
mov
jae
call
jg
divl
aad
int
xchg
loope
and
adc
nop
outsl
popa
xor
fidivrl
jecxz
divl
xor
adc
xchg
movsl
push
dec
rorb
jl
pop
into
pop
adc
leave
lahf
sub
mov
xlat
dec
cmp
sbbl
cs
jmp
push
push
dec
enter
jne
xchg
push
arpl
sti
push
jg
jae
push
cmp
xchg
adc
leave
fldl
mov
scas
and
dec
sbb
mov
dec
nop
js
out
aam
mov
mov
jmp
push
icebp
mov
push
adc
and
not
pop
ds
nop
js
jae
adc
mov
mov
cmp
test
mov
xor
dec
mov
cmp
xor
shll
jnp
xchg
mov
jbe
xlat
or
fs
cmp
fdivrs
add
jle
sbb
cmp
sub
ljmp
xchg
or
popf
aam
cmpsl
inc
xor
ret
test
push
int
xchg
stc
mov
lret
xor
sub
add
enter
mov
xchg
adc
or
inc
xlat
inc
mov
subl
sbb
mov
insl
popf
mov
sub
mov
test
jbe
xchg
divl
fistpll
sbb
xchg
mov
ret
pop
lret
nop
cs
inc
incb
sbb
cmp
or
das
pop
mov
movsb
jg
leave
push
les
es
mov
out
inc
in
push
insb
and
lcall
push
mov
pop
rcll
jb
out
das
adc
mov
jle
pop
lods
inc
jb
hlt
lahf
mov
pop
cs
mov
ja
insl
les
insl
aaa
lret
mov
cmpsb
sbb
pop
jmp
dec
mov
push
lods
loopne
sbb
test
fmuls
xlat
sub
jecxz
dec
jno
mov
fisttpl
add
push
push
xor
dec
int
movsb
jg
sti
test
les
mov
mov
mulb
imul
xor
lret
push
mov
mov
inc
movsl
cmpsb
jg
mov
dec
mov
jne
xchg
xchg
cwtl
push
out
call
movsb
dec
cmp
xlat
or
dec
cs
mov
test
movsl
ljmp
sbb
dec
xor
movsb
mov
divl
add
mov
dec
pop
push
mov
iret
and
pop
and
je
mov
int
test
lcall
or
and
addr16
adc
jl
pop
scas
vcvtpd2dqy
test
push
xchg
xchg
cwtl
push
push
lds
vmptrst
scas
hlt
and
popa
clc
cmc
mov
mov
popa
aaa
out
mov
shlb
or
cli
pop
test
jae
ret
inc
ret
inc
sbb
mov
dec
xlat
repnz
mov
data16
nop
mov
pop
inc
fmull
push
pop
fsubr
xchg
pop
mov
loop
ljmp
popf
daa
nop
dec
sbb
out
sahf
sarb
sub
aaa
hlt
pop
mov
jno
in
or
fwait
lock
xchg
es
adc
ljmp
mov
sarb
ja
sbb
pop
mov
fs
push
pop
and
sbb
daa
fsubl
and
fwait
mov
mov
mov
mov
int3
sarl
adc
dec
es
idivb
adc
jno
xor
lods
dec
int3
or
les
shrl
sbbl
xchg
inc
pop
xor
loop
je
lds
fwait
inc
mov
loope
test
inc
mov
aas
fwait
rolb
or
arpl
mov
pop
sub
pop
xchg
les
rol
push
jge
adc
rcrl
roll
inc
in
mov
inc
push
mov
fs
lods
mov
mov
adc
jmp
sahf
or
das
das
xchg
sbb
aam
xchg
ds
sbb
out
addr16
test
pop
or
or
xchg
jg
and
data16
outsb
cmp
inc
pop
loope
jno
iret
push
popa
hlt
js
sbb
fwait
push
push
push
lods
ffreep
sti
push
xor
sub
dec
inc
js
ret
dec
shrb
cs
cltd
rorl
cmc
aad
push
adc
push
dec
cli
push
adc
mov
cmp
jae
in
jbe
popf
cmpsl
fldt
xor
rcrb
jle
ss
sub
test
shrb
inc
arpl
das
push
dec
jg
imul
sub
sbb
mov
hlt
adc
add
jb
add
insl
dec
jg
jns
jp
cmp
in
test
cld
sarl
add
out
or
shrb
inc
mov
and
mov
xor
in
leave
cld
cmp
cmp
loope
les
jno
mov
out
into
imul
insl
jl
cmp
sbb
in
and
add
stos
sti
test
ljmp
into
out
into
paddq
inc
in
or
mov
imull
shl
hlt
insl
scas
popa
aam
push
pcmpgtw
cltd
sarl
xchg
fidivrs
add
xchg
mov
jb
inc
mov
push
lret
push
nop
rol
xor
push
mov
xchg
out
adc
jae
sub
mov
int3
sub
push
mov
fnstenv
dec
push
sbb
xor
stos
jmp
pop
jnp
lahf
arpl
xor
push
stos
xchg
jecxz
test
and
shl
fwait
xor
dec
xchg
pusha
and
das
ret
int3
or
cmp
popf
shll
xlat
mov
mov
jle
jo
adc
dec
push
test
xchg
fsubp
add
icebp
sbb
push
scas
outsb
hlt
fcompl
mov
lock
fstp
out
pop
mov
ret
lock
jnp
jmp
cmp
fisubl
dec
jno
popf
sub
xlat
sbb
sub
xchg
shrl
xchg
or
adc
and
flds
jb
daa
imul
sub
push
andb
xor
fildll
or
std
movsb
sbb
push
stos
push
cmc
out
int3
add
pushf
ret
in
iret
cmpsb
mov
jmp
cmp
les
std
mov
cmp
push
sbb
loop
jmp
loop
mov
test
aas
fsubrl
xchg
dec
test
and
jae
test
loope
popf
fisttpl
jmp
mul
xor
fcompl
fmul
into
imul
popa
mov
push
jl
mov
pop
repz
mov
xor
mov
and
pushf
stc
leave
in
ret
dec
pop
fcomip
and
or
xchg
push
sbb
push
xlat
lock
fiadds
dec
inc
pop
cs
mov
les
std
fldt
shrl
push
testb
ret
sub
shll
sbb
mov
and
dec
test
cwtl
pop
cltd
xchg
pop
iret
das
fsubrl
jb
call
popa
jg
mov
dec
es
xchg
notl
lods
data16
push
inc
push
push
call
aaa
sahf
testl
adc
movsl
jb
and
or
test
imul
pop
fdivrs
fld
ds
nop
or
int
nop
pop
movsl
lods
insl
fistpll
test
or
mov
stc
stc
push
loop
jl
pushf
loope
repnz
scas
xor
in
arpl
popa
setg
ds
push
push
or
inc
jnp
cli
jg
cmpsb
cmp
adc
xor
add
mov
and
bound
jl
pop
jo
fldcw
push
ficoms
incb
inc
mov
mov
adc
mov
lret
push
pushf
or
push
into
je
adc
loope
mov
std
mov
sub
inc
test
xor
xor
stc
mov
bnd
sarl
addr16
cmc
cmp
clc
es
adc
js
mov
cmp
loope
cs
fadds
fcmovu
out
cmpb
sahf
lods
ret
std
jle
jecxz
sub
lret
loopne
aam
cltd
cli
movsb
icebp
adc
mov
pop
mov
cli
adc
fcmovne
mov
ret
xchg
inc
jbe
jne
das
rcrb
loop
sub
pop
mov
xor
fsubr
imul
stos
mov
cld
shlb
pop
mov
sbb
dec
add
fdivl
add
mov
sbb
add
xor
insb
fwait
jbe
bound
xor
popa
xor
ss
jns
imul
aas
or
sub
sub
mov
cwtl
push
aam
arpl
xor
add
cmp
lcall
dec
adc
sub
push
lcall
jno
jle
jns
dec
adc
mov
int
les
lret
cmpsl
and
and
jbe
xchg
xor
pop
push
pop
push
sbb
jne
loop
loop
mov
int3
xchg
shrl
jecxz
mov
push
push
and
inc
icebp
out
stos
cmp
mov
xchg
test
scas
and
push
sub
cmc
andb
mov
mov
sbb
adc
xchg
cmp
cmp
pop
js
mov
mov
push
xchg
mov
dec
push
xor
jae
pop
lea
lock
inc
sbb
adc
mov
adc
clc
push
jle
mov
fcmovb
les
lcall
mov
js
mov
ret
sub
test
sbb
shlb
cmc
stos
repnz
mov
sub
adc
sahf
mov
push
adc
mov
xchg
push
mov
and
es
xor
cmp
jb
push
loopne
pop
add
lock
xor
cwtl
sub
pop
daa
adc
push
lods
cmp
add
scas
jnp
cmp
xchg
in
es
adc
arpl
sbb
jge
inc
ret
lds
xor
mov
js
pusha
test
out
push
popf
cmpsb
rol
push
into
mov
into
scas
repz
xchg
icebp
nop
xchg
add
loopne
iret
jecxz
popf
and
adcb
fucomip
and
movsl
pusha
and
stos
xchg
stc
dec
adc
jns
shll
aad
pop
bound
xchg
idivl
enter
in
rcrb
popa
pop
xor
pop
and
hlt
and
and
out
pop
dec
jne
xchg
sub
inc
test
sub
dec
pop
movsb
aam
fistpll
jp
pop
call
std
push
add
fistl
pop
pop
pushf
sbb
lods
into
fisttpl
pop
xchg
mov
nop
add
jae
cmpsb
mov
hlt
and
mov
sub
shll
into
sbb
pop
outsl
scas
jne
mov
sub
neg
int
movsb
cmp
xchg
and
mov
jb
punpcklbw
xchg
jb
inc
outsl
push
pop
or
lds
dec
jo
mov
sbbl
data16
xor
ja
and
sahf
sbb
xchg
mov
push
cmp
int3
test
repz
insb
lret
pop
test
mov
mov
mov
aad
out
and
xchg
inc
aad
lret
rcl
cltd
and
push
rolb
bound
mov
pop
pusha
cld
sbb
mov
pop
cwtl
popf
cli
test
idivw
cmp
xor
call
xchg
adc
pop
sti
fstpl
mulb
push
cmpsl
xchg
xor
add
jle
push
mov
addr16
mov
add
aas
mov
ror
ss
and
adc
inc
sar
pop
pop
idiv
adc
ja
jecxz
imul
test
lea
arpl
std
and
movsl
int
push
repz
jmp
aaa
cmp
jne
out
inc
and
jb
shrl
mov
cli
jle
mull
jnp
and
shr
or
gs
int
ret
or
xchg
add
fcoms
push
sbb
sub
adc
arpl
adc
inc
jne
xor
cs
out
mov
cmp
scas
inc
mov
pop
icebp
mov
ljmp
pop
pusha
jecxz
pop
pusha
inc
cmp
cmp
repnz
int3
xchg
sub
sahf
dec
into
xor
fistps
sbb
les
jnp
out
fwait
xor
or
fnsave
inc
sahf
adc
push
mov
cmp
push
push
sub
enter
cmp
stc
xlat
jne
in
test
or
xorl
add
or
in
xchg
and
sbb
leave
pop
lret
sub
xor
mov
adc
aad
popf
in
out
mov
in
enter
ja
xchg
mov
or
movl
lcall
ret
das
call
sbb
and
sbb
mov
fwait
aas
aaa
rclb
push
ror
sbb
xor
lret
push
cmp
divb
test
addr16
mov
mov
or
or
test
nop
xchg
inc
xlat
cs
stos
dec
adc
dec
push
and
shrl
xor
pop
inc
or
lcall
xchg
or
jle
add
jge
and
pop
and
cmp
daa
out
push
int3
or
jecxz
mov
outsl
add
in
fwait
loopne
and
aas
test
das
popf
push
and
lahf
dec
pop
adc
cmc
or
sub
push
cmpsl
add
xor
push
ljmp
add
test
ret
xor
imul
lock
mov
icebp
leave
loope
pop
imul
jp
lcall
and
sub
jae
sbb
push
imull
nop
mov
and
arpl
outsb
ret
xor
push
movsl
icebp
pop
mov
adc
and
lods
inc
icebp
test
add
dec
cltd
in
addr16
mov
push
cmp
add
inc
add
push
xchg
lcall
mov
mov
das
push
push
mov
data16
jne
inc
lcall
push
scas
stos
mov
mov
sbb
dec
mov
mov
mov
pushf
adc
sbb
jo
fcompl
je
cwtl
int
mov
jmp
mov
pop
push
adc
xor
add
mov
sub
pushf
mov
sub
xchg
fmuls
test
into
ljmp
mov
push
add
pop
pop
cmp
shrl
and
push
rcrl
and
jno
jnp
cmp
cs
lds
mov
xchg
loope
mov
lock
xor
dec
popf
xchg
ret
sahf
inc
je
mov
imul
or
rcr
adc
sbb
push
out
pop
stc
or
ja
cmpb
sub
lea
jb
test
push
add
movsb
lret
stc
dec
jmp
mov
mov
jo
jl
dec
push
add
int
or
or
cs
fbld
adc
sub
dec
pop
mov
dec
jecxz
rol
push
cmp
jbe
or
mov
xor
and
cmp
hlt
xchg
and
popf
adc
cmp
push
and
sub
lods
cmpl
xlat
out
out
add
jle
ss
lea
cli
out
arpl
in
cmpsl
sahf
enter
pusha
nop
stos
out
adcl
fcoml
inc
sub
sub
pop
xchg
sbb
cmp
xchg
fsubp
lar
cwtl
incl
lahf
mov
fisubl
mov
mov
daa
subl
pusha
adc
xchg
jecxz
xor
fwait
add
xor
cmp
sbb
mov
mov
adc
scas
negb
xor
mov
xchg
imul
cld
out
or
lahf
jbe
aaa
mov
movsl
or
insl
stc
cwtl
mov
and
mov
aaa
dec
dec
aaa
mov
xor
mov
sbb
movsl
and
call
inc
clc
push
and
or
pop
insb
shlb
pop
mov
add
fdiv
inc
lock
and
mov
fwait
xchg
lods
push
cmp
dec
fs
in
push
pop
add
push
lcall
fwait
jg
xchg
js
mov
aas
mov
stc
fidivs
xchg
pop
pop
daa
mov
js
and
sbb
repz
dec
call
andl
out
push
in
or
cmpsl
mov
inc
std
and
mov
push
dec
rcrl
inc
push
cwtl
ja
ljmp
sub
inc
adc
mov
cltd
push
lods
mov
fidivrs
mov
adc
outsl
mov
xchg
inc
cmp
rorl
mov
jns
cmpsb
cmpsl
jle
fistpl
and
dec
dec
insl
sub
out
dec
mov
sbb
repnz
sbbb
xchg
pop
outsl
pop
test
int3
mov
mov
xchg
mov
cld
xor
rolb
out
jp
in
stos
inc
addr16
mov
jecxz
fdivs
lahf
xchg
xchg
and
imul
adc
cmp
pushf
pop
adc
pushf
mov
dec
dec
ret
push
daa
add
rcll
adc
mov
inc
jecxz
or
xchg
sbb
cs
decl
pushf
mov
imul
leave
cld
jno
cmp
ja
pop
nop
inc
repnz
inc
in
movsl
frstor
mov
scas
test
test
fildll
xor
repz
cmpsb
sbb
cmpsb
shll
leave
push
xor
xor
test
mov
pushf
lods
push
cmp
cmpsl
ficoms
push
fldcw
into
mov
and
mov
mov
inc
xchg
inc
and
rcll
test
dec
mov
cmp
mov
aam
mov
cmp
push
in
mov
sbb
maskmovq
insl
fwait
lds
mov
mov
clc
stos
mov
cmp
dec
jnp
xchg
pop
movb
ds
fistpl
mov
pusha
xor
insb
push
repnz
lahf
adcb
xchg
ret
jp
fdivrl
imul
sbb
push
inc
cmp
or
shr
movntq
sti
inc
sti
push
add
decb
mov
repnz
call
push
mov
inc
daa
mov
in
lds
jl
mov
jle
and
jmp
push
jb
mov
test
sub
xchg
jo
icebp
mov
out
xor
cmp
test
adc
inc
inc
pusha
test
mov
inc
xchg
out
enter
xchg
lods
xchg
dec
sahf
out
jge
in
mov
cld
inc
sub
mov
mov
xor
jno
cmp
into
push
or
xlat
or
push
sub
cwtl
sub
shrl
cmc
xchg
ret
mov
lods
movsb
mov
lret
ljmp
scas
fwait
xchg
pop
lea
pop
jb
jg
pusha
xchg
adc
mov
insb
adc
dec
lcall
push
out
stos
sbb
xchg
cmp
icebp
les
pop
mov
pop
cmovb
sub
or
add
jmp
and
and
test
icebp
adc
and
pop
mov
push
push
outsl
push
sub
mov
cmpsb
push
int
cmp
inc
mov
sub
repz
pop
push
cwtl
xchg
push
mov
inc
cmp
std
and
push
loope
shll
ljmp
jae
dec
fs
pushf
js
sbb
pop
mov
ficomps
ret
into
jmp
test
ja
js
stos
push
push
cld
and
addr16
cmc
cmp
lods
inc
mov
cld
dec
ret
dec
pop
jbe
jecxz
andb
xor
mov
push
je
cwtl
push
cmp
mov
sub
jno
mov
pop
xor
inc
inc
leave
repnz
xchg
out
sbb
dec
jecxz
mov
das
cmp
test
popa
mov
add
andl
idivb
in
pop
loope
push
shlb
push
cwtl
in
gs
in
add
jl
cmp
sub
cmpl
mov
cmp
add
ss
sub
adc
scas
mov
push
stos
sub
sarb
clc
repnz
popf
int3
or
mov
subl
jmp
push
int3
jo
pop
aad
cmp
cmp
inc
es
cli
cmpsl
out
dec
inc
sbbl
fidivrl
xor
aad
shr
push
add
data16
push
dec
shll
sub
pop
jl
adc
aad
push
add
mov
mov
xchg
and
add
push
jl
adc
mov
and
call
les
jecxz
dec
lret
inc
mov
insl
lret
cmp
mov
fsubs
adc
inc
jle
sub
sub
mov
sti
call
shlb
mov
les
xchg
out
sub
pop
add
adc
and
adc
out
int
add
fs
xor
cmpsl
lahf
ja
jae
in
xchg
sarl
sub
test
in
jecxz
lods
rcrl
dec
test
cltd
mov
push
push
add
sub
xchg
jne
xor
aaa
inc
andl
cmp
sbb
dec
xchg
cmc
inc
leave
fs
cmp
out
cld
xchg
leave
mov
push
xor
add
adc
sbb
pusha
mov
iret
mov
add
mov
inc
mov
sub
rcrb
in
add
dec
xchg
xor
scas
sub
push
out
in
icebp
dec
addb
jno
mov
in
test
sqrtps
mov
adc
mov
sub
loope
addr16
push
and
xchg
adcl
rclb
sub
out
add
mov
test
dec
pop
std
mov
push
ds
cmp
mov
mov
xor
gs
push
fidivrl
inc
fldcw
cltd
xchg
mov
es
sahf
js
or
sbb
mov
cmpsb
mov
mov
scas
loopne
clc
pop
es
repnz
kmovw
jge
outsb
in
xor
out
imul
cmp
sub
pop
stos
add
push
adc
mov
scas
lds
sbbl
push
pop
mov
or
pusha
test
sbb
ja
aas
dec
xor
or
loopne
aas
push
mov
sti
lods
xchg
sub
fcos
in
shlb
sbbl
dec
jnp
mov
mov
test
add
cmpl
mov
push
insb
xchg
pop
mov
mov
inc
in
aam
xchg
shr
cs
mov
js
mov
out
jo
iret
xchg
and
jmp
or
addr16
mov
add
mov
pop
sbb
mov
in
ficompl
push
lds
adc
shll
insb
lea
cld
mov
jne
push
jno
cwtl
pop
jg
jecxz
jnp
or
mov
xchg
pop
push
rclb
loope
dec
fs
hlt
popf
adc
hlt
adc
icebp
out
rcrl
mov
or
stc
bound
cmp
lret
pop
jge
in
lea
sbb
or
jae
sub
je
cs
or
aas
mov
ror
imul
ds
cmp
ret
flds
fsub
xor
out
in
sbb
int
inc
push
pop
lock
mov
out
mov
jge
cli
addr16
enter
add
mov
clc
sub
pop
test
and
push
push
jo
lcall
inc
push
xchg
adc
aam
push
in
add
in
es
inc
testb
jge
ss
xorb
xchg
and
rol
jns
popa
xchg
mov
mov
sub
cmp
sub
ret
addr16
mov
mov
fistpll
shrb
mov
cmpsl
rcrw
in
or
xorb
add
icebp
adc
stc
out
andb
jp
dec
or
jmp
and
xchg
sbb
mov
adc
mov
pop
mov
cmp
cmp
int
cmpsl
sbb
or
sub
andl
icebp
imul
push
je
jbe
pop
jle
xchg
lods
adc
xlat
adc
mov
push
imul
call
ret
mov
in
sub
loopne
out
push
dec
push
dec
jl
push
push
inc
xor
cltd
out
mov
xor
andl
mov
xor
jle
lock
inc
jb
nop
out
adc
pop
sbb
fadd
add
cmpsl
and
push
cmp
cwtl
dec
add
outsl
daa
push
loop
pop
lret
js
sub
int3
adc
dec
lods
xorb
outsb
pop
dec
push
pop
sbbl
sbb
mov
mov
dec
or
sub
dec
push
and
push
mov
insb
scas
jbe
adc
sbb
adc
lock
mov
or
dec
xchg
into
pop
push
or
mov
cmp
lods
std
fwait
push
xchg
test
fldl
sahf
inc
xor
mov
cmp
xorb
imul
stos
lcall
cmp
sub
sbb
or
std
incb
push
cmp
ja
dec
iret
addr16
sbb
xchg
mov
fisttpll
pop
fistps
gs
pop
notl
push
shrl
insl
clc
cmpb
jne
dec
call
lea
in
mov
jg
and
sbb
mov
sbbl
shll
scas
sahf
mov
lods
int
or
test
lahf
fwait
and
stos
add
hlt
popa
add
pop
fstpl
add
stos
xor
sbb
xor
push
mov
andl
or
aaa
jns
jmp
inc
sbb
sbb
mov
shlb
inc
data16
fcomps
jle
dec
adc
mov
mov
mov
les
jge
ljmp
cmp
mov
and
pop
mov
test
sub
add
xor
hlt
mov
repnz
roll
movsb
mov
jae
cmp
dec
out
dec
test
sub
and
inc
std
inc
ljmp
shl
mov
test
daa
movsl
or
lock
sbb
loop
or
mov
mov
or
xchg
inc
in
test
mov
xchg
push
adc
mov
pop
aaa
daa
shlb
sbbl
int
mov
fwait
or
gs
int
adc
xorl
shll
ljmp
sub
and
bsf
jmp
insl
xchg
repz
scas
cwtl
dec
ss
and
insb
mov
jmp
cmp
fs
xchg
je
xor
mov
imul
jnp
inc
inc
aas
mov
pushf
mov
mov
push
aaa
in
testl
and
mov
fwait
push
sub
xor
lds
xchg
jmp
sub
out
or
outsb
je
sbb
test
call
gs
repnz
mov
inc
aam
sub
fstl
cvtpi2ps
cmp
rcll
repnz
shl
and
aam
mov
pushf
and
mov
sbb
add
push
dec
ret
mov
xchg
sub
dec
shl
fwait
addb
ret
imul
sti
xchg
jae
mov
outsl
cmpsl
lret
js
popf
call
test
xor
call
pushf
cmp
das
dec
ds
jle
insl
xor
adc
sti
dec
fs
stos
xor
mov
pop
stc
aaa
in
mov
push
sub
mov
pop
movsl
xchg
lock
insl
pop
sub
xor
les
xchg
ljmp
test
outsl
int3
add
loop
sahf
lcall
xor
push
xchg
lret
sti
out
mov
sub
pop
fadd
and
and
cld
mov
jne
in
cmp
lret
jb
sub
imul
fwait
mov
sbb
mov
lock
jmp
jb
jmp
sahf
sbb
or
mov
std
jp
inc
shrb
adc
add
lods
test
in
adc
fwait
ss
in
fs
aam
jecxz
loopne
mov
jge
loope
daa
mov
icebp
xchg
xor
and
fwait
inc
push
fcomip
lahf
cmp
xchg
inc
repnz
xchg
mov
jge
dec
push
idiv
push
inc
push
pop
mov
adc
pop
es
es
dec
mov
lods
cmp
adc
adc
add
or
out
push
insl
cmp
cmc
push
cmpsl
pop
jp
int3
cli
pop
stc
push
loope
mov
mov
decb
mov
outsb
lret
cmp
lods
out
fcmovnb
jle
mov
sbb
mov
in
jecxz
xchg
fidivl
pop
fstpl
jg
outsl
repz
scas
jne
jge
push
lods
lahf
pusha
push
popf
lds
xor
outsb
sbb
cmpb
cmc
pop
insb
adc
xchg
jl
xor
or
clc
jp
stos
ss
rorl
clc
lret
or
ljmp
pusha
test
inc
push
xor
aas
xor
cmp
or
stos
push
mov
pop
jae
or
mov
mov
lcall
add
xchg
push
out
psrlq
ficoml
adc
sbb
repz
in
mov
push
int
adc
add
push
push
fwait
inc
pop
repnz
dec
dec
in
enter
adc
mov
jo
mov
sti
shrl
dec
sub
lcall
scas
inc
jns
xchg
iret
jmp
jnp
fucomp
and
cmp
fwait
push
xlat
mov
dec
shll
sub
lods
int
stos
les
lret
ret
adc
sarb
lret
bound
adc
push
stc
inc
mov
dec
jo
enter
mov
mov
xorb
xchg
mov
subl
pop
pop
xchg
inc
inc
inc
cmp
mov
fisttpl
mov
sub
test
pusha
jbe
mov
mov
in
insb
xchg
xor
movsl
adc
and
mov
sbb
add
je
mov
push
mov
mov
and
jbe
cmp
stc
mov
ja
dec
mov
push
pop
out
jo
sub
loope
pop
add
inc
xchg
les
hlt
mov
das
push
lock
or
std
pop
sahf
outsb
popf
push
jb
test
ss
sbb
mov
aad
pop
mov
pop
jl
push
sbb
push
js
pusha
cmp
and
insb
sahf
dec
aad
jo
sbb
popa
xorl
lods
cmc
jge
xor
cmp
adc
ficoms
pop
adc
ret
loop
jmp
flds
cmp
xor
outsb
pop
aam
pusha
fs
push
mov
mov
sbb
mov
fcmovu
and
sbb
test
jmp
lea
cmp
or
xor
testb
mov
sbb
daa
add
mov
adc
imull
aam
icebp
jae
jecxz
mov
sahf
cmp
and
jae
jmp
xchg
fs
es
dec
xchg
outsb
mov
xor
mov
push
rcll
push
lods
orl
repnz
push
lcall
in
pop
repnz
sub
cld
mov
in
ficoml
sbb
insb
fwait
jp
sbb
insl
mov
xchg
pop
sbb
out
and
push
dec
fadds
mov
pop
aad
ret
mov
repnz
js
pop
add
pop
outsl
mov
stos
andl
icebp
sarl
mov
out
in
mov
inc
adc
jmp
push
pop
mov
mov
sbb
ljmp
xchg
mov
sub
mov
repnz
daa
push
scas
stos
push
out
and
mov
ss
sbb
ss
xor
aaa
lret
popf
mov
inc
out
test
cwtl
pop
sbb
mov
mov
cmp
shlb
stos
scas
shrb
imull
inc
mov
sub
or
push
mov
dec
test
and
add
test
lods
mov
jmp
xchg
leave
int3
mov
out
jle
stc
xchg
sub
mov
add
pop
dec
aaa
lret
adc
sub
pop
imul
inc
inc
pop
mov
xor
jl
push
and
ret
push
mov
js
cmp
mov
mov
shl
and
xchg
jp
and
or
inc
cmp
fbld
mov
dec
in
mov
dec
rol
outsb
data16
xlat
inc
sub
cmpb
lods
fldt
jge
test
add
lcall
lret
jmp
push
je
push
jnp
cmpsl
mov
mov
cmp
jmp
mov
sbbb
daa
jge
pop
sbb
cli
divb
adc
xorl
pusha
test
sbb
adc
cmp
jb
xchg
loope
jl
arpl
xchg
dec
xlat
je
das
cltd
cld
stos
outsl
push
fildl
lret
jno
or
xor
jmp
mov
cs
dec
mov
scas
pop
fldcw
decb
sub
test
jp
dec
jns
cmp
add
xchg
fdiv
les
lods
sub
jl
mov
inc
cs
lock
adc
int
lcall
cmp
fcoml
pop
pop
in
out
jnp
fmuls
cmp
pop
mov
mov
in
dec
cmp
xor
and
sar
jp
mov
fldcw
xchg
adc
pop
mov
fists
xor
mov
test
ds
cmp
pop
imul
out
and
out
add
pop
dec
call
ret
sahf
aad
push
inc
or
push
movsl
cmpsl
inc
xchg
mov
imul
xchg
dec
cs
mov
cmp
xor
push
negb
sub
clc
and
aas
lahf
xchg
jo
in
jge
idivl
sub
in
mov
les
push
rol
rorl
jle
add
inc
fnstsw
loope
cmp
orl
push
push
cmp
repnz
xchg
mov
test
push
adc
sarb
dec
pop
jp
inc
adc
xor
lods
sbb
jnp
stos
lock
adc
xor
or
mov
mov
jmp
rorl
push
mov
and
cltd
add
andl
ret
xchg
cld
xchg
jge
out
mov
pusha
cmp
inc
mov
adc
inc
and
jo
call
mov
mov
push
fmuls
jge
pusha
in
pop
xchg
inc
ds
imull
dec
cwtl
std
pusha
aas
push
mov
daa
bound
flds
test
and
rclb
mov
jle
sbb
sbb
test
xorl
test
repz
out
sub
xchg
int
cltd
mov
xchg
mov
cmp
lret
inc
mov
andb
push
or
outsl
mov
rcr
test
inc
or
xor
call
lcall
inc
or
jbe
adcb
lahf
ljmp
shrl
or
in
sti
fwait
icebp
mov
data16
shlb
push
mov
loop
sti
aad
and
xchg
pop
les
cli
je
lock
sbb
lods
loope
movl
cli
lods
sub
jle
movsb
cmp
sub
js
iret
insl
lret
pop
aad
leave
xorb
pop
les
mov
pop
out
jnp
aad
outsl
loop
mov
sbb
out
out
jne
mov
in
push
adc
xchg
mov
mov
xor
repnz
or
mov
xchg
mov
ret
js
cmpsb
lock
mov
js
data16
push
das
and
adc
subl
lahf
cmpsb
icebp
jecxz
out
lods
pop
mov
jo
and
cmp
out
pushf
jmp
mov
imul
adc
stc
movsl
xchg
pop
ret
jbe
pop
jle
out
popf
out
stos
mov
inc
sahf
sub
sbb
add
dec
adc
push
lods
cmp
ret
sbb
push
int3
test
jmp
cmp
push
sub
and
jb
pop
fsubl
jle
adc
cmp
mov
push
jns
adc
push
scas
cltd
in
or
pop
hlt
mov
loopne
mov
fmul
mov
push
and
adc
test
popf
pushf
inc
addr16
into
mov
hlt
pop
xchg
stos
jo
jge
ret
and
sahf
jmp
mov
insl
mov
mov
ds
divl
bound
loope
daa
lahf
xor
fs
push
adc
inc
aam
int3
mov
addl
mov
ljmp
mov
fadd
push
mov
icebp
mov
mov
addr16
dec
push
cmc
divb
jbe
mov
cltd
push
add
pop
pop
ds
xchg
push
push
ss
xor
test
addl
pop
sti
mov
int3
test
outsb
in
mov
into
mov
ds
and
outsl
test
push
mov
iret
loope
and
xor
fcomps
cmpsb
pushf
sbb
fs
add
push
scas
nop
fnclex
dec
dec
fbld
sbb
xchg
mov
pop
and
dec
jnp
pusha
mov
add
fcmovbe
inc
inc
dec
repnz
popf
add
mov
xchg
and
les
pop
icebp
and
inc
xor
loope
std
dec
dec
sbb
or
push
add
lcall
mov
stos
pop
push
xor
fs
add
pop
ljmp
test
fistpl
les
or
or
ljmp
ja
fiadds
loop
adc
lahf
idivb
pop
mov
mov
test
mov
cmp
jmp
iret
ljmp
xchg
sbbl
add
push
out
pop
sbb
push
cmp
dec
jecxz
jae
test
ljmp
pusha
int3
sub
je
fndisi(8087
shlb
cwtl
fwait
xchg
cmpsl
outsl
scas
sub
cs
loopne
jns
and
jg
sub
into
arpl
pushf
inc
sarb
push
ja
mov
add
repnz
or
sub
mov
jp
fwait
lahf
and
sbb
xor
sbb
js
dec
inc
fcmovu
cmp
mull
jle
inc
sbb
push
jno
adc
xor
mov
pusha
and
push
add
dec
lock
loop
les
shll
lea
xor
dec
push
cmp
nopl
add
mov
inc
inc
push
ret
dec
push
adc
aam
add
cmpsl
jae
movl
sub
sub
imul
rorb
in
inc
xor
fisttpl
xor
test
mov
adc
out
dec
push
pop
adc
stos
in
adc
push
mov
add
dec
inc
adc
pop
mov
fidivrs
add
jmp
orb
pop
sti
int3
test
inc
add
mov
outsl
xchg
pop
out
ret
fcompl
mov
nop
lss
shrb
scas
lock
sbb
mov
cmp
push
test
or
mov
js
mov
push
out
mov
dec
dec
mov
out
xor
aad
mov
adc
lods
push
mov
shll
pop
jg
pop
dec
cmpsl
cwtl
xor
sbb
push
mov
pushf
add
pop
inc
jmp
ljmp
test
sub
pop
add
cmp
nop
jecxz
add
adc
iret
cmp
mov
lods
sbb
sti
xor
or
push
rorl
dec
cltd
lods
hlt
push
xor
add
adc
out
pop
add
sbb
lret
mulb
mov
sti
addr16
jo
repz
cwtl
xchg
pop
dec
jge
push
mov
lods
xchg
addb
jns
loopne
adc
iret
mov
popa
and
idiv
lds
push
ds
push
push
cmc
pop
stc
push
cld
mov
jge
add
push
fcmovbe
xor
jge
sub
sub
fimuls
icebp
pop
outsl
insb
or
loop
sarb
ds
insl
mov
enter
or
pusha
popf
fnstcw
adc
xlat
les
jl
stc
lcall
jne
dec
pop
pop
xor
inc
mov
xchg
adc
lods
mov
in
outsb
dec
jmp
sbb
cmpsl
popf
loopne
adc
xchg
lret
sub
mov
or
inc
stc
dec
incb
loop
cmpsb
cmpsb
xchg
push
adc
lret
sbb
out
pop
notb
ret
cmp
fwait
loope
push
fsub
or
and
jecxz
enter
dec
in
mov
stos
fnstsw
xor
out
fdivrs
adc
dec
dec
shl
mov
adc
int
adc
jnp
mov
and
lock
or
add
lds
cmp
push
adc
jl
mov
idivb
scas
je
jmp
int
mov
loopne
cli
dec
mov
shl
test
dec
sbb
fsubs
cmpb
mov
cs
push
mov
cmp
jb
adc
cmpsb
pop
idivl
cmp
sbb
ficoms
jnp
xchg
cwtl
cwtl
outsb
lea
sbb
push
fistpl
fcomps
dec
fisttpll
call
jg
or
lods
bound
mov
movsb
fdivrs
icebp
sarl
adc
push
xchg
int3
repz
jo
cltd
lcall
sbb
in
push
lcall
xchg
pusha
add
in
clc
mov
push
xchg
sbbl
cmp
subps
ja
hlt
shlb
cmp
imul
mov
leave
and
mov
xor
add
sbb
loop
loope
and
mov
rcl
je
mov
cmp
cmp
lcall
inc
push
and
mov
int3
pop
int
outsl
daa
or
jb
dec
inc
mov
adc
pop
cmp
adc
into
insl
mov
xchg
mov
xor
inc
ds
std
add
cli
mov
cli
gs
adc
jl
hlt
jb
pop
rcl
inc
mov
push
and
jge
mov
xchg
fs
jg
push
outsb
roll
pop
idivl
mov
arpl
std
sbb
inc
cwtl
cld
aam
xor
fnstenv
xchg
cld
jae
mov
cwtl
or
cmp
xchg
add
inc
test
loope
jmp
jae
aad
sti
outsb
popa
lds
xlat
sahf
or
repnz
jecxz
sbb
movsb
pushl
xor
sbb
cs
mov
stc
jbe
sti
cmpsb
stos
pop
jns
pusha
mov
fsubp
and
mov
sub
mov
sub
xor
inc
inc
int
mov
adc
cmp
js
cmp
pop
cwtl
and
adc
adc
mov
scas
or
outsb
sub
test
cmp
cwtl
or
adc
imul
pminsw
cmp
or
fstp
pop
push
out
int3
push
lds
push
ds
insb
pushf
inc
jecxz
pop
or
jle
loop
daa
loop
ljmp
xchg
jns
or
jmp
or
pop
std
fwait
mov
cmp
movsb
cmp
add
jb
jge
aam
or
in
sub
in
sbb
push
inc
outsb
mov
adc
add
sbb
loop
leave
pushf
movsl
in
add
insb
or
not
inc
jmp
je
xchg
inc
push
inc
cltd
sub
xor
lods
and
adc
lods
es
lahf
pop
push
test
push
jbe
ja
cli
sbb
leave
jae
sbb
call
mov
dec
xor
cmpsb
int
add
fst
xor
add
aam
adc
std
enter
aaa
fbstp
icebp
mov
mov
pop
inc
fldt
inc
cld
pop
fdiv
into
pop
and
inc
push
nop
push
mov
movb
push
jg
or
add
pop
jb
aad
cltd
stos
cmpsb
rcl
clc
push
stc
jmp
mov
fnstenv
rcrb
negl
and
jle
imul
xor
xor
pop
adc
enter
jl
push
xchg
into
xchg
or
into
stos
push
dec
pop
div
insb
lret
stos
cmp
push
lret
icebp
dec
fwait
xcrypt-cbc
cmpsl
xlat
add
sahf
push
jmp
xchg
test
daa
lock
subb
xor
ret
push
jnp
jbe
sub
push
aas
test
mov
xor
or
jp
xchg
mov
shr
lds
inc
sti
mov
clc
movsl
rol
jae
add
xlat
mov
ja
sub
jmp
push
arpl
push
aaa
cmp
cmp
mov
jnp
adc
mov
sbb
out
daa
inc
in
mov
call
pop
mov
jne
pusha
push
jl
adcl
mov
outsl
pop
mov
dec
mov
bound
lock
dec
dec
imul
xchg
sub
aas
das
cli
stos
mov
jo
dec
inc
fidivs
jmp
add
cli
add
gs
mov
mov
mov
ret
shlb
punpckhdq
add
push
lock
xchg
inc
sub
rcr
mov
sub
jecxz
arpl
adc
sub
nop
lret
jnp
stos
mov
test
jae
shll
arpl
aaa
sub
sub
xor
xchg
jp
mov
adc
mov
jmp
fs
adc
cli
out
push
cmp
sbb
sahf
test
push
push
imul
daa
leave
pop
jg
pop
fimull
add
mov
cmp
stos
repnz
addr16
dec
xchg
jno
movsl
push
xchg
xlat
sub
repnz
push
cltd
lcall
and
xchg
sbbb
mov
lahf
push
test
mov
push
pop
dec
inc
in
out
imul
cli
push
pop
sbb
dec
js
sbbb
sub
dec
fbstp
outsl
jge
jo
stos
fistps
pop
pop
pusha
xor
mov
movl
cli
out
mov
or
out
je
lods
lods
call
xlat
mov
inc
mov
decb
sbb
movsl
jmp
inc
ret
je
xchg
inc
push
mov
cmp
stos
dec
gs
push
lock
lahf
andb
lods
xor
aad
sub
aad
jbe
mov
cmp
ss
fstl
fwait
pop
lret
push
repz
pop
jo
xchg
or
shll
divl
xchg
sub
jbe
mov
jno
int
loop
divl
mov
int
shl
int
inc
adc
jmp
pop
xchg
arpl
dec
lods
sbb
icebp
fsubrl
pusha
xchg
add
push
sbb
daa
sub
mov
inc
pusha
sub
mov
add
popf
jecxz
xchg
pop
add
pop
rolb
mov
and
xor
pop
dec
hlt
loopne
call
cmp
inc
pop
xchg
inc
mov
in
mov
dec
mov
imul
leave
lea
sub
sub
pusha
inc
in
mov
in
jno
js
adcl
in
mov
movb
mov
rclb
cmp
addr16
push
js
test
test
into
pop
repz
ljmp
inc
push
ficompl
mov
sbb
std
cmp
lods
adc
or
mov
jmp
adcb
cmpsl
addr16
sahf
push
aas
and
or
les
push
jg
loopne
cmp
mov
or
cmp
push
dec
into
cmp
test
fsts
jg
push
cld
and
jecxz
loopne
sbbl
out
mov
lods
ja
pop
out
mov
mov
inc
sub
pop
and
lods
aam
jp
daa
xchg
lahf
pusha
xchg
scas
mov
lock
sub
add
pop
scas
xor
push
repnz
pop
ret
in
imul
sub
mov
mov
mov
popf
fs
adc
call
insl
push
jg
sub
in
into
cmp
fistpl
hlt
jne
sbb
or
mov
sbbl
fidivrl
xchg
sbb
fwait
movsl
or
jae
push
jg
lret
xorl
cmp
ja
adc
cmp
inc
cmp
xlat
dec
pushf
dec
mov
push
mov
or
daa
adc
sub
sub
cmp
pop
push
jns
sbb
pusha
ja
sbb
dec
xlat
xchg
xchg
std
mov
in
inc
push
rolb
sbbb
pushf
js
adc
es
in
pop
insb
adc
fisttps
divb
or
ret
sub
mov
mov
stc
xchg
in
push
pop
xor
xchg
popf
adc
or
stos
das
and
test
mov
xor
mov
mov
push
mov
inc
jecxz
adc
sbb
loopne
jg
pop
jg
cmc
push
aam
stos
mov
cmp
lock
sbb
sbb
or
cmp
scas
fildl
sbb
jmp
bnd
decl
xor
pushl
lea
movsb
xchg
outsl
fwait
jp
mov
or
loop,pn
mov
cmp
pop
sarb
cs
push
lcall
xor
push
out
and
push
jg
std
das
inc
inc
cltd
sub
bound
in
fsubrs
sbb
inc
jb
in
and
aas
test
je
ss
fdivrl
push
pop
loopne
adc
xchg
addr16
push
test
fmull
stc
jmp
shl
cmc
cmp
test
ret
jno
mov
imul
jmp
pop
jae
push
out
inc
aas
jbe
or
je
out
out
in
inc
sub
xchg
loopne
mov
cmpsb
mov
icebp
or
pop
push
mov
ss
js
mov
lret
les
inc
xor
stc
and
push
sub
faddp
fnstsw
enter
imul
dec
inc
out
out
add
leave
imul
mov
popa
mov
addr16
mov
je
pop
popf
push
pusha
in
mov
stos
lahf
and
and
jl
mov
dec
dec
test
xchg
mov
dec
xchg
aam
out
xchg
xor
arpl
je
push
adc
rcrb
jl
pushf
push
fdivrs
mov
pop
xchg
incl
scas
mov
xchg
push
push
jecxz
or
orl
xchg
add
mov
pop
dec
cmpsb
and
movl
pop
and
data16
mov
push
push
clc
mov
imul
push
push
mov
dec
mov
cld
cmp
shlb
hlt
sbb
aaa
scas
test
idivb
dec
in
add
icebp
out
fidivs
jns
jle
add
push
lret
jp,pt
bound
jge
test
hlt
sahf
pxor
loopne
jbe
aam
mov
or
xor
adc
pop
sub
jle
aam
dec
xor
into
lds
notl
into
idivb
sub
fbstp
push
push
out
dec
push
int3
rorl
outsl
popa
pop
mov
add
ret
cmc
lahf
or
fisubl
loope
push
mov
or
add
xor
lret
pop
add
insb
js
gs
les
xor
and
dec
mov
cmp
addr16
fnstcw
cmp
adc
and
or
jns
adcl
xor
lds
xchg
rolb
ds
rorb
cltd
insl
shl
push
mov
cmp
out
shr
rorl
test
imul
insb
cmpsb
pop
adc
push
push
mov
icebp
into
ficomps
shll
sbbb
clc
dec
add
sbb
mov
ss
inc
mov
dec
inc
push
jmp
xchg
pop
roll
xchg
or
push
jg
sub
repz
or
js
data16
movsl
shlb
pop
or
xor
shl
leave
and
inc
add
sbb
je
add
push
mulb
pop
fcomip
incb
inc
xchg
cmp
sub
gs
adc
push
inc
sub
sbb
inc
cmpsb
orb
fstpl
lds
xor
or
mov
movsb
xor
daa
xchg
inc
enter
clc
shl
mov
cmc
movsl
sbb
aam
call
daa
lcall
push
mov
or
mov
xchg
sarl
adc
jo
lea
std
dec
mov
sbb
lods
add
fwait
leave
addr16
addr16
and
cmpsl
or
xchg
and
movsl
mov
je
out
xchg
add
in
pushf
xchg
jo
mov
mov
push
xlat
xchg
inc
add
inc
arpl
mov
addl
dec
adc
popf
xlat
lock
xor
mov
jns
lcall
and
mov
and
fiadds
out
pop
outsl
inc
test
dec
iret
xor
aad
je
mov
rclb
cmp
jle
arpl
mov
push
push
pop
out
mov
aaa
fbld
pop
mov
sub
in
xor
nop
cltd
or
cmp
jo
movsb
pop
add
inc
fs
rorb
and
lods
xor
and
outsb
add
adc
lret
faddl
mov
cmp
dec
push
cwtd
fst
lock
mov
add
push
popa
mov
mov
addr16
pop
push
xchg
out
imul
daa
sbb
mov
mov
jmp
je
and
push
pop
fldt
cli
aas
out
lods
push
orb
int
jmp
and
xchg
loopne
pop
xchg
out
lahf
int
rorb
sub
daa
dec
lret
in
cmp
lret
ss
scas
pop
cmp
inc
pop
popa
imul
pop
cmpsb
clc
sub
popa
aad
fidivl
cmp
adc
xchg
ljmp
xor
dec
gs
jno
out
xchg
xchg
and
ror
lds
int
push
push
movsb
xor
fcmovbe
pusha
jbe
xor
xchg
jecxz
push
sub
inc
loope
push
insl
popa
stos
jae
push
add
mov
test
xor
xchg
xor
sbb
fistps
out
jno
aad
adc
roll
push
inc
test
mov
enter
xor
mov
imul
push
xchg
pop
emms
sbb
stos
pop
pop
push
sub
inc
jecxz
xchg
lods
std
dec
xor
or
clc
outsb
movsl
mov
dec
bound
nop
sub
pop
mov
add
sub
sbb
jne
nop
and
xchg
or
pop
fidivl
inc
pop
lcall
mov
mov
sbbb
or
movsb
push
out
ficoml
fwait
enter
mov
enter
repz
aaa
repnz
adc
arpl
inc
cmp
ret
mov
and
xchg
mov
cmp
mov
mov
stc
test
push
into
jge
mov
fsubs
cmp
mov
push
daa
sub
push
shl
repz
inc
testb
fsubrl
pop
jbe
xchg
inc
ljmp
lret
aaa
mov
sub
jbe,pn
ss
cmp
pushf
fists
je
jne
mov
add
mov
std
dec
stc
out
lea
out
out
adc
jmp
jns
pop
cltd
adc
les
cltd
dec
lods
pop
pop
pop
ljmp
push
inc
sahf
loop
in
frstor
pop
add
push
cltd
loop
pop
in
jmp
sub
sbb
mov
jae
ja
repz
xor
mov
imulb
sub
sbb
mov
icebp
aas
fsubrs
movsb
push
aaa
push
fstp
mov
es
scas
push
xor
xchg
mov
jecxz
adc
cmp
mov
cs
push
mov
and
in
movsl
das
cmc
mov
xchg
shrb
xchg
xchg
sbb
dec
ljmp
xor
push
js
out
lahf
push
adc
add
adc
mov
pop
out
adc
mov
mov
inc
insb
sbb
aas
xor
mov
incl
mov
popf
xchg
inc
xchg
aam
sbb
xchg
std
pop
mov
sbb
mov
test
popf
adc
jae
mov
movsl
ljmp
pop
adc
fcmovu
popa
mov
pop
xchg
lods
xchg
fucomp
movsb
xor
or
sub
mov
loopne
out
xchg
add
test
js
bound
loopne
cmp
mov
mov
in
stos
aas
stos
xor
fs
scas
pop
mov
les
loop
les
popf
mov
lahf
xlat
fs
pop
mov
ss
mov
lret
je
jno
push
int
pop
cmp
mov
fstp
inc
and
loop
cmp
mov
fprem
inc
sub
push
sbb
sbb
lods
fwait
mov
pop
mov
jp
xor
add
add
add
or
and
daa
inc
pusha
inc
jnp
cmp
inc
xor
rcl
clc
mov
pop
mov
pop
push
jae
leave
dec
vpshaw
sub
gs
cmpsb
test
das
int3
and
shrb
push
xchg
imul
lret
and
pop
out
add
lea
mov
xchg
enter
xor
adc
mov
cmp
mov
inc
mov
xchg
mov
mov
and
jnp
or
xchg
test
negl
jae
jp
push
notl
sbb
and
popa
sub
mov
lcall
fbstp
mov
push
and
imul
dec
push
xor
lret
lret
jp,pn
xor
mov
cmp
or
cltd
push
and
gs
fildl
and
xor
scas
inc
or
add
cmp
jno
sbb
mov
fistpll
int
push
int3
or
popf
not
loope
pushf
rcrb
sbb
and
das
bound
jg
roll
mov
jge
mov
call
int
push
test
cmp
jp
push
and
push
bound
jne
call
mov
inc
sub
out
mov
xor
popa
ss
js
insl
xrelease
push
test
jle
dec
jno
cmp
pop
push
ffreep
push
xor
scas
xorl
fnstenv
loop
and
lahf
dec
add
mov
cmp
leave
cmpsb
and
jle
jmp
js
pop
adc
ficoml
add
sti
test
sarb
add
inc
dec
push
fcoms
mov
sbb
sbb
push
shrl
clc
lods
sbb
cmp
jb
inc
sarb
das
and
or
xchg
sbb
mov
cmp
pop
mov
push
es
jp
dec
jl
mov
mov
pop
gs
or
fnstsw
imul
aam
mov
cmpsb
bound
pop
sub
cld
xor
jb
jmp
out
inc
fdivl
sbb
std
jne
rorb
lock
inc
ret
cmp
aad
push
idivl
shlb
jb
dec
mov
cmp
xor
xchg
aam
jo
push
test
xor
leave
add
dec
pushf
scas
orb
aas
push
outsb
inc
fs
ljmp
jne
mov
cmc
je
xor
jb
nop
fdivrl
fwait
jbe
mov
cmp
in
push
cmc
mov
lock
fs
add
or
push
fimull
leave
mov
sub
jp
fdivrs
insb
cltd
test
adc
pop
loopne
lds
ret
sub
pop
xchg
movsl
inc
or
jmp
mov
mov
xor
cltd
push
test
js
icebp
std
jae
mov
cmp
xchg
xchg
lcall
xor
fstpt
adc
bound
inc
pop
fbld
cmp
pop
jns
dec
pop
pop
add
arpl
lahf
lods
push
mov
popf
stos
cld
clc
sahf
mov
mov
sub
push
mov
or
sbb
cmp
fsubrs
jo
push
mov
jg
or
and
scas
push
repz
fcompl
jbe
sub
sarl
xor
or
add
xchg
mov
mov
mov
xchg
mov
test
pushf
cmp
cltd
lret
bound
sub
xor
out
mov
sbb
mov
inc
dec
testb
sub
cmp
mov
cmpsb
loope
push
xchg
mov
lret
xor
push
push
or
sahf
inc
iret
divb
ja
lods
pop
xchg
insl
xor
push
lds
or
mov
mov
hlt
fdivr
mov
repz
jb
xor
daa
and
sbb
addl
sarl
xchg
xor
pop
popa
dec
sbb
sbb
inc
or
insl
sbbb
sbb
sub
in
inc
xchg
ds
fdivl
and
gs
stos
xchg
inc
inc
mov
into
mov
scas
mov
sti
paddusb
fstpt
and
mov
sub
xorl
stc
xchg
fs
xchg
or
das
xlat
push
inc
adc
jnp
lock
into
inc
sub
aaa
and
insl
outsl
jecxz
dec
jp
divl
das
add
or
clc
and
test
or
jae
mov
push
push
cltd
pop
sarl
in
mul
xor
in
test
push
clc
push
xlat
pop
popf
lret
jo
mov
pop
test
lock
jno
daa
pop
std
fmull
outsb
jae
lret
push
les
mov
cmpsl
push
push
out
dec
cmc
push
lret
fcmovne
movsl
push
aaa
lods
ret
dec
mov
bound
ljmp
repz
test
pop
gs
std
scas
add
jmp
add
and
fcmovnb
data16
jno
lds
icebp
adc
out
sbb
pop
stc
add
sbbb
xchg
cs
mov
lods
or
loop
imul
sti
lret
notb
push
dec
stc
ffreep
push
xor
push
sub
or
lahf
xor
xchg
xchg
out
or
push
or
ljmp
lret
shl
inc
inc
mov
jp
loope
mov
ficoms
mov
insb
leave
mov
rclb
sbb
pop
push
sbb
sbb
jg
and
inc
push
repnz
enter
dec
inc
idivl
add
push
test
cmp
mov
lret
arpl
sbb
insl
mov
lret
std
test
out
adc
std
mov
es
jge
mov
push
movsl
and
lcall
and
out
push
mov
mov
mov
sbb
pop
inc
adc
lea
adc
mov
push
xchg
push
shlb
xor
dec
and
gs
dec
into
mov
pushf
fistpl
orb
insb
and
cltd
sti
push
jne
inc
cwtl
xchg
jnp
or
dec
push
xor
imul
cmc
sbb
cmp
add
mov
je
xchg
dec
jl
popa
mov
outsb
mov
lock
cs
cmc
sub
iret
push
mov
addr16
in
mov
std
sbb
out
pusha
sbb
out
push
movsl
test
dec
xor
dec
sbb
jbe
or
fbstp
stos
icebp
mov
inc
or
ret
shrl
cltd
fnstenv
lahf
push
cld
push
cmp
inc
rcr
push
dec
xchg
into
dec
mov
clc
sbb
lds
lea
movl
shrl
and
jl
mov
xchg
sbbb
jp
push
cmp
push
repz
cltd
in
ss
xchg
cmp
mov
push
stos
sti
shr
movsl
lods
adc
je
outsl
inc
inc
inc
leave
arpl
pushf
mov
mov
cmp
arpl
and
dec
jecxz
not
mov
aad
lea
lahf
mov
jno
jecxz
mov
inc
jae
outsl
jbe
add
cmp
pop
clc
adc
mov
push
pop
dec
sbb
scas
out
stos
cmp
ss
pop
inc
xor
push
ljmp
cmp
and
or
mov
adc
inc
dec
movsl
mov
imul
cmp
dec
sub
ficompl
aad
jno
pop
xor
ds
ja
clc
sub
loop
lea
adc
jno
adc
fcmovu
pop
out
jo
xlat
psllw
jecxz
jae
dec
sub
dec
mov
sbb
lea
shrl
call
rcl
sbb
jo
mov
movsl
js
dec
jo
outsl
dec
scas
sbb
mov
xchg
lock
adc
andb
mov
inc
fiaddl
rclb
std
mov
stos
in
push
fucomp
dec
stos
mov
rsqrtps
insb
push
inc
pop
push
pop
nop
mov
pusha
repnz
xor
add
pushf
bound
cmc
ret
xchg
pop
stos
push
call
js
adc
sbb
dec
lock
leave
inc
inc
in
es
in
int3
das
mov
fisubrs
loop
sub
repnz
or
hlt
ret
jo
dec
nop
mov
pop
pop
mov
movsb
add
cmp
inc
xchg
mov
and
shr
push
test
ret
sbb
mov
jne
xor
bound
inc
ds
mov
xor
orb
scas
pop
add
subl
dec
cmp
test
mov
mov
dec
push
inc
aaa
cmp
add
push
pop
arpl
adc
xor
and
pop
push
add
inc
push
mov
popa
scas
dec
add
dec
mov
mov
aam
ja
add
mov
loop
xor
dec
test
or
cwtl
insl
adc
scas
arpl
jae
les
cmpsl
les
mov
adc
mov
aam
push
jl
repnz
sahf
pop
mov
sub
push
gs
std
dec
sahf
movsb
and
push
xor
add
divb
dec
clc
lea
cmp
frstpm(287
push
fstps
mov
sub
testb
push
mov
push
test
sub
insl
test
fxch
rol
push
jne
add
out
cmp
cs
sub
call
push
dec
push
movl
pop
arpl
leave
add
shll
hlt
outsb
in
test
jl
hlt
pop
stos
insb
inc
pop
fadds
loop
fiadds
repz
imul
dec
and
xchg
mov
pusha
popf
mov
sbb
mov
pop
or
lea
add
xchg
in
lea
aad
pop
cmp
insl
xlat
sub
mov
pop
popa
pop
outsl
pusha
xor
loopne
jl
fisubl
and
mov
stos
call
shlb
push
mov
mov
inc
enter
cli
inc
xor
xchg
movsb
jecxz
dec
fdivs
push
in
mov
popa
shll
dec
daa
adc
mov
iret
lcall
sub
cs
call
mov
jp
mov
or
mov
sbb
jns
stc
dec
stos
nop
sub
test
lret
fbld
sbb
cli
js
or
jge
adc
xchg
cmp
sbb
adc
xor
out
sub
shrb
ret
pushf
arpl
xlat
pop
push
dec
mov
xor
pop
out
push
inc
pop
in
adc
sub
xor
lods
cmp
mov
mov
jge
sar
sbb
push
dec
fildll
pop
mov
inc
xchg
dec
xchg
stos
outsb
jp
adc
pop
cwtl
xchg
mov
cmp
jns
xchg
mov
cld
jge
outsb
push
inc
sub
mov
cwtl
mov
insl
adc
lock
inc
adc
movsb
clc
push
shll
popf
jmp
mov
divl
scas
mov
ljmp
in
fwait
sub
mov
lods
dec
fistpll
bound
adc
arpl
popa
sbb
mov
jmp
inc
mov
add
pop
roll
push
fs
pop
repnz
aam
bound
in
and
pop
mov
or
clc
jmp
gs
sti
fs
clc
add
je
lea
sub
sub
cmpsb
and
flds
pop
dec
lods
dec
mov
pop
cmp
jge
jmp
dec
pop
out
movsb
sub
jg
cmp
test
cmc
add
clc
stc
sub
add
or
enter
mov
fists
out
fwait
push
sub
cmp
add
ret
and
shl
mov
repnz
out
aam
cltd
lret
and
cmpsl
pop
ja
jge,pn
loope
ds
iret
mov
imul
adc
sub
add
aam
mov
add
hlt
cmpl
loope
fcoml
adc
dec
pop
cld
movsb
jmp
pop
mov
in
add
jg
fisubrl
pop
pop
data16
out
fistpl
imul
sbb
push
enter
call
adc
inc
dec
cltd
jl
fwait
sbb
leave
xchg
xor
inc
frstor
mov
xor
and
or
ljmp
imul
dec
push
mov
call
mov
or
sahf
fs
into
xchg
test
sub
and
loop
sub
adc
call
mov
sbb
adc
in
hlt
aam
jmp
mov
lock
xchg
insb
mov
lods
pop
mov
pop
dec
pop
out
popa
lods
cmp
out
in
inc
ljmp
or
enter
push
xor
aas
in
faddp
dec
sahf
mov
stos
push
and
mulb
cmc
ja
dec
cmpsl
movsl
lcall
lahf
adc
mov
sbb
lret
pop
mov
fistpll
inc
or
movl
adc
outsl
push
inc
js
mov
add
push
int
out
aaa
mov
dec
repnz
add
popf
loopne
inc
mov
test
in
pop
xchg
mov
inc
lods
push
stos
sub
int3
pop
mov
jl
movl
test
rorb
push
daa
enter
in
and
jge
adc
in
lcall
out
push
mov
scas
movsl
and
xchg
jmp
push
bound
and
cmc
mov
jns
dec
sbb
xor
sbb
stc
imul
aas
int
jmp
jl
cmp
xchg
cltd
and
movsl
xor
jne
push
lods
data16
push
ja
ljmp
pushl
xor
fadds
inc
xor
or
stos
xlat
adc
imul
sub
jno
insl
imull
das
sub
outsl
sbb
xchg
movsb
test
adc
ss
mov
call
adc
cmp
xor
sarb
pop
mov
and
shlb
fsts
add
mov
lods
add
pop
pop
fadd
sub
repz
lahf
clc
sbb
sbb
or
push
cld
pushf
jg
frstor
jmp
mov
std
cmpl
repz
and
mov
xchg
xchg
jmp
inc
fs
sub
sbb
sub
call
in
jae
repnz
fnstsw
xchg
cmpsb
dec
xchg
iret
pop
mov
mov
scas
jbe
adc
orl
ret
mov
add
xorl
or
repnz
pushf
dec
jo
sbb
jne
dec
dec
jae
ret
scas
cli
dec
pop
mov
ljmp
shlb
jbe
mov
roll
mov
adc
cmpsl
fsubs
js
push
mov
stos
sub
imul
notl
out
mov
roll
orl
popl
pop
mov
inc
mov
stos
dec
xchg
pop
bound
and
pusha
js
in
ret
pop
jno
std
lahf
mov
sub
out
jno
mov
in
dec
bound
xchg
mov
ror
daa
lods
or
pop
call
inc
aam
lahf
or
das
popa
xchg
aaa
jle
inc
sub
push
sbb
and
jne
inc
jg
mov
xchg
adc
pop
sti
jne
mov
jle
lock
mov
stc
lods
lods
add
jbe
mov
xchg
aam
mov
test
mov
js
sbb
in
scas
ljmp
fisttpll
adc
xchg
or
incl
push
in
mov
dec
dec
and
call
push
mov
ret
in
lahf
push
es
addr16
mov
aas
jmp
gs
lock
mov
push
cmp
fstl
pop
pop
sbb
lret
mov
mov
scas
mov
aas
js
loope
jb
fs
fwait
adc
arpl
cmpb
insl
mov
push
aad
popa
pop
mov
add
jae
gs
xor
test
cmp
inc
jns
add
mov
xchg
out
in
cltd
inc
jne
jno
dec
mov
rorl
push
lea
dec
mov
sahf
push
inc
xor
pop
cmp
insb
jns
loope
ret
iret
leave
fistpll
adc
xchg
test
and
push
inc
imul
and
and
pop
sbb
leave
idivb
cmp
ljmp
cld
mov
pop
pop
hlt
inc
adc
cmp
data16
pushf
and
adc
in
stos
xor
rorb
out
push
jae
sahf
negb
insb
sbb
nop
jle
inc
jmp
xor
push
fs
cltd
mov
push
pop
pop
xor
and
sbb
push
int
hlt
push
dec
mov
fildl
add
add
into
cmp
sbb
inc
pop
cli
pop
stc
push
pop
xchg
add
sub
sub
lods
shrl
and
repnz
shl
xor
outsb
pop
pop
loop
cld
loop
popa
adc
shll
sub
mov
rcrl
sahf
add
out
sub
mov
and
jno
mov
add
dec
jae
inc
pop
mov
jo
aaa
xor
lahf
add
adc
or
sub
mov
in
test
inc
sbb
les
out
push
pop
jmp
daa
mov
push
jb
lret
fsubrs
int
insl
in
roll
data16
sbb
into
inc
aaa
mov
push
cmpsl
xor
xchg
mov
cmp
insl
pop
push
aaa
jl
or
leave
jg
mov
sbb
mov
test
xor
or
scas
out
push
sahf
into
sbb
push
ret
mov
mov
push
cwtl
push
mov
xchg
in
xchg
and
mov
shll
lods
cmp
lock
out
push
enter
fsubp
pop
mov
push
add
xchg
push
and
push
push
pop
and
ss
pop
fsts
push
sub
lahf
shll
ret
cmpsb
inc
roll
fcomp
std
xchg
mov
cmp
sbb
jo
cmc
aaa
push
add
push
test
push
or
notb
or
pop
in
and
jb
push
pop
sbb
pop
scas
pushl
mov
scas
cmp
push
add
rcl
push
scas
jno
cmp
dec
adc
dec
pop
inc
inc
movsb
mov
and
iret
stos
add
out
cmpsl
push
test
pop
insb
dec
and
mov
adc
jb
jl
cs
mov
push
and
mov
mov
dec
add
cmp
ds
nop
mov
xchg
lahf
sti
mov
mov
add
push
pop
fiaddl
mov
not
aas
pop
adc
cmp
rcr
std
pop
shlb
add
add
out
dec
xor
popf
pop
and
sti
popl
je
in
pusha
popf
push
insl
jb
das
movsl
and
adc
sub
test
pop
push
xchg
mov
dec
es
cltd
lods
pop
test
cmc
insl
add
cmp
pop
orb
cltd
jle
pop
jo
xlat
mov
jne
pop
push
xor
cmpsl
jnp
dec
mov
out
adc
idivl
pop
movnti
xor
stos
and
sub
adc
cmp
dec
push
lret
or
add
and
xchg
in
ds
arpl
insb
dec
sbb
test
mov
fwait
je
pop
callw
pop
lea
rorl
orl
mov
outsl
in
adc
popa
adc
pop
sbb
roll
imul
loop
hlt
aad
imul
sub
add
nop
repnz
scas
nop
xor
xor
ret
outsl
je
stos
repnz
ffreep
sub
dec
and
les
cltd
in
mov
dec
mov
pop
sbb
aam
loope
rcrl
adc
lods
jg
pop
in
prefetchwt1
xor
push
or
ret
xchg
aas
jbe
xor
lcall
jmp
in
inc
mov
jecxz
inc
leave
dec
test
mov
and
or
adc
fdivrs
sub
jp
add
jecxz
sbb
inc
mov
push
jmp
xor
sub
jae
pop
fmuls
or
cmpsb
xchg
aad
fimuls
mov
jecxz
ret
aas
jl
aad
adc
inc
or
fwait
xchg
aam
out
cltd
xor
iret
les
or
mov
dec
mov
inc
xor
into
sbb
cmpsl
adc
cmp
adc
fisttpll
outsl
pop
mov
lret
ja
pop
sbb
mov
daa
adc
stos
cmp
jo
cli
inc
sbb
aaa
fs
adc
xchg
mov
mov
xlat
inc
push
call
dec
insb
fidivrs
das
mov
rol
and
ret
sbb
inc
dec
mov
cmp
mov
xor
inc
push
test
aam
mov
aad
int
add
imul
mov
pusha
out
sub
sub
mov
rolb
outsb
jns
xor
jge
loopne
sbb
push
enter
insl
xor
ret
lret
ja
aam
mov
jecxz
add
jns
into
pop
xlat
lcall
movsb
test
xchg
outsb
stc
icebp
xor
dec
sbb
jmp
mov
les
pop
test
mov
cmpsl
imul
xchg
cmp
mov
outsb
cmpsl
pop
int3
aad
insl
dec
scas
arpl
cmc
xchg
in
and
cmpsl
pop
add
dec
add
int
xor
and
clc
or
jns
test
js
xchg
mov
or
inc
pusha
sub
nop
rolw
adc
xchg
cwtl
push
scas
divl
inc
jmp
add
pop
mov
cmp
mov
les
addr16
push
cmp
pop
sub
and
test
xchg
xchg
and
shrb
adc
add
push
pop
jnp
adc
out
lods
imul
or
mov
repz
stc
xlat
sbb
dec
or
or
xlat
ljmp
and
jne
xchg
inc
mov
nop
sbb
sarb
stos
stc
inc
mov
and
pop
cmp
mov
dec
pop
or
cs
dec
out
ficoms
cmp
push
xchg
pop
dec
in
ljmp
or
arpl
mov
xor
inc
mov
arpl
insl
or
xor
adc
adc
xchg
bound
addr16
inc
mov
sub
out
sub
pop
mov
mov
imul
lock
iret
cmp
add
inc
mov
sbb
fisttpl
adc
cmpl
imul
add
icebp
clc
sub
jnp
imul
popf
pop
dec
dec
jnp
rolb
lahf
sbb
mov
mov
push
aam
xchg
rorl
in
cmp
push
iret
rcrb
shrb
adc
into
shl
mov
cmp
fistpll
mov
shlb
fs
push
mov
xor
sbb
scas
push
pop
repnz
pop
fs
add
inc
jl
hlt
jo
sti
lcall
popa
mov
jbe
cmpsl
pushl
mov
xchg
mov
sub
fistl
pop
jg
in
jns
inc
push
imul
cmp
jl
mov
mov
cmpsl
pop
fstpl
push
sub
push
aad
xor
aas
into
std
jmp
mov
out
std
out
sbb
mov
push
lock
inc
jmp
insl
jp
fcmovnu
xchg
addr16
aam
dec
scas
pop
sbb
adc
pusha
jo
in
xor
jl
sub
je
adc
leave
mov
les
xchg
roll
scas
fs
cmpsb
jp
cmpsl
stos
add
push
call
lea
sarb
jb
push
sub
jge
outsl
in
repz
lahf
mov
jp
lahf
mov
mov
mov
das
rcrb
cmp
inc
adc
add
inc
xchg
xchg
out
into
jae
pushf
jl
jge
cmp
pop
test
outsl
imul
mov
out
jnp
sbb
aad
dec
jp
mov
and
mov
std
mov
push
push
addb
mov
clc
call
jo
xor
xchg
lods
xor
add
icebp
xchg
add
fidivrs
clc
aaa
call
and
pop
xchg
cwtl
clc
mov
push
pop
sub
xchg
mov
ret
sbb
ret
adc
xchg
jl
inc
xchg
lret
inc
dec
shl
fisttpll
mov
add
insl
test
test
fucomp
mov
push
cmp
cwtl
sbb
idiv
inc
push
rcrb
xchg
or
mov
fwait
dec
ficoms
pop
out
dec
mov
mov
sbb
jns
xchg
lods
dec
jnp
jecxz
test
push
sbb
push
pop
mov
add
jge
int
mov
xchg
xchg
xor
xor
mov
jb
mov
in
in
inc
ficompl
mov
and
dec
xor
fisttpl
lahf
xor
adc
push
pop
jecxz
daa
test
add
das
mul
xor
inc
or
dec
and
dec
adc
ja
mov
and
adc
and
cltd
inc
fstl
push
cs
movsb
aaa
cmp
cltd
jno
stos
popa
mov
sbb
inc
test
jge
xchg
jnp
mov
sbb
mov
push
aam
dec
cmp
faddl
jmp
mov
mov
mov
mov
lea
rcrb
xchg
mov
mov
insb
or
and
sbb
cmp
pop
hlt
mov
arpl
jecxz
flds
enter
push
and
lret
outsl
or
in
push
dec
gs
shrb
sub
jmp
mov
mov
mov
mov
lahf
jge
xor
adc
mov
int3
roll
push
add
adc
adc
adc
loopne
or
pusha
xor
mov
int
mov
daa
add
adc
sbb
addl
mov
bnd
jno
dec
xlat
pop
cmpsb
js
jecxz
pop
aad
jnp
arpl
pop
mov
mov
jp
scas
push
cmp
cmp
bound
gs
insl
sbb
rolb
inc
mov
aaa
sub
jmp
leave
jo
into
push
mov
or
pop
mov
ss
and
test
xchg
addr16
repnz
mov
mov
arpl
adc
mov
or
loope
nop
out
sub
test
outsl
cmp
xchg
repz
out
dec
add
imul
rclb
inc
cmp
stos
popf
stc
or
sbb
mov
pop
mov
pop
rcl
cmp
imul
push
lret
lcall
inc
pop
mov
enter
gs
out
in
mov
mov
std
stos
loop
int
in
mov
push
fs
js
or
in
cmp
mov
dec
mov
imul
aas
jp
and
push
mov
jne
addr16
mov
jg
mov
ja
and
adcl
shrb
pushf
mov
pop
sub
and
out
mov
push
mov
lcall
mov
aam
pushf
push
int3
xor
stos
fimull
sbb
or
imulb
push
xchg
jne
andl
mov
subb
ss
stos
xchg
sbb
test
add
shrl
loop
rcrb
or
pop
inc
std
xchg
sbb
jne
fcompl
fildll
popa
lret
sub
popa
movsb
setb
jmp
repnz
mov
repnz
and
or
mov
sub
test
xchg
jg
stc
es
cmpsl
fld
nop
sti
sub
shr
sbb
adc
push
icebp
test
loop
ljmp
push
subb
js
sub
nop
movsb
mov
sbb
imul
inc
pop
dec
out
xchg
imul
or
xchg
jp
sbb
aaa
jb
sbb
mov
mov
lods
cli
cmpsl
push
out
adc
cltd
pop
jne
pusha
int3
add
mov
movsb
xchg
stos
dec
dec
mov
shr
and
negb
or
enter
mov
mov
mov
fs
sbbl
cmp
fdivrl
push
loop
in
sub
aad
stc
lds
faddp
and
les
xor
inc
jge
or
xchg
addl
add
mov
pop
cmp
test
adc
jge
inc
sbb
xchg
ds
mov
push
xchg
add
rorb
cltd
shr
das
push
addl
xchg
outsl
punpckldq
insb
or
push
lea
xchg
dec
pop
pop
dec
cmc
mov
jne
push
push
pop
sbb
dec
sbb
imul
push
inc
clc
fisubl
mov
nop
fnstenv
cmp
pop
jns
or
and
adc
outsl
inc
icebp
inc
mov
dec
lds
pop
pop
fldt
decl
je
stos
mov
inc
orb
ljmp
ja
repz
insl
insb
sbb
popf
not
arpl
jg
pop
mov
popf
inc
jnp
xor
cli
loop
fpatan
mov
cmp
stc
pop
fidivl
add
or
punpckhwd
cmp
mov
popa
dec
sub
out
popf
and
jo
push
nop
mov
xchg
mov
jb
and
xchg
adc
mov
pop
stc
jle,pt
fs
add
insl
arpl
cmpsb
pop
in
cmp
hlt
cmc
mov
test
inc
fcomps
jge
push
mov
sbb
mov
inc
stos
insb
hlt
enter
jno
fsubl
test
sub
ret
leave
jbe
sub
add
cld
insl
mov
sub
mov
xchg
xchg
das
pop
push
push
ror
xchg
sbbb
xor
cli
xlat
xchg
inc
daa
test
jo
dec
jp
ret
adc
leave
jns
mov
call
jb
scas
rol
push
jns
xor
iret
sub
dec
mov
pop
inc
jo
insl
sub
pop
pop
mov
push
test
dec
mov
bound
or
jp
push
mov
iret
test
mov
in
push
call
scas
add
pusha
shll
rcr
inc
nop
stos
out
aaa
aad
adc
pop
pop
adc
scas
mov
arpl
push
adc
and
lret
stc
das
mov
into
hlt
setns
xorb
sub
mov
sub
pop
inc
dec
cli
fisttpll
dec
aam
lret
push
cmp
lret
push
xchg
jae
dec
in
sub
lods
lods
jno
and
cmp
movsb
insl
sbb
push
mov
mov
mov
fabs
cmp
push
mov
test
mov
es
mov
aas
cltd
mov
mov
ds
loopne
rclb
cli
repz
cmpsb
int3
mov
jne
ret
jne
loop
xor
jl
testb
mov
cmp
mov
push
stc
notb
nop
mov
scas
mov
out
leave
fnsave
dec
xlat
jbe
out
jo
pop
ret
pop
movb
insl
dec
push
inc
in
sub
and
mov
push
jle
scas
push
mov
xchg
pusha
sub
jae
xchg
add
or
pmaxub
stos
stos
jns
in
dec
or
sbb
test
mov
jp
jmp
bound
aas
push
push
fiadds
adc
dec
lret
xor
fidivrs
dec
sbb
cmp
dec
ficoms
pop
aaa
mov
sar
fnsave
aam
or
and
ss
das
stc
mov
push
stc
subl
xor
int
mov
pop
push
and
pop
dec
inc
test
sbb
in
mov
je
pop
dec
cmpsb
xor
hlt
xchg
cmp
jo
in
dec
ret
mov
std
push
fistpll
scas
pop
lea
pusha
cmpsl
jmp
dec
mov
xchg
or
mov
push
into
out
jbe
jo
dec
pop
pop
pop
mov
sub
xor
enter
pop
pop
addr16
dec
in
es
jbe
jnp
push
push
repz
adc
je
addr16
call
xchg
add
pop
dec
std
pop
ljmp
daa
or
or
xchg
sbb
data16
cli
cmc
or
es
or
dec
mov
xor
aad
stos
ret
pop
xchg
dec
sarb
xchg
dec
jne
jo
fldenv
add
mov
subb
xor
fcompl
sub
xchg
jo
cmpl
xchg
pop
mov
mov
test
xor
dec
pop
pop
js
mov
sbb
push
jle
pop
shlb
and
and
sbb
mov
mov
fadd
push
pop
sbb
inc
mov
je
fdivrp
inc
lock
imul
fs
fiaddl
aas
adc
int
int
add
aaa
inc
std
movd
pop
das
push
xchg
lret
shll
ja
sahf
pop
mov
in
lock
jbe
inc
push
adc
inc
pop
and
cmp
ljmp
stc
pop
je
cs
js
out
xchg
mov
sarb
push
ret
dec
push
jbe
mov
push
icebp
mov
adc
movsl
aas
dec
jb
in
in
mov
rcrl
adc
add
test
jl
int3
loope
mov
mov
pop
scas
fistpl
sub
pop
js
mov
pop
sahf
push
adc
mov
sbb
nop
stos
cmpsl
movsb
and
inc
add
fs
fs
adc
cmpsb
mov
bound
movsb
push
or
faddl
mov
cmp
jmp
arpl
xor
add
test
jmp
mov
sbb
push
dec
js
lret
ret
mov
mov
je
jp
fisubs
cli
seta
xchg
or
mov
clc
lcall
add
jp
fmull
inc
pusha
in
adc
xor
xchg
les
push
bt
fs
and
pushf
inc
cmp
fadds
push
mov
mov
cmpsl
cmp
je
mov
sub
xchg
pop
jne
pushf
sbb
sahf
and
mov
pop
lea
addr16
clc
sbb
and
cwtl
scas
call
addb
jns
cmp
bound
and
jno
pop
xchg
jns
sbb
adc
jmp
setl
repnz
push
add
push
bound
stos
push
jb
int
dec
mov
arpl
xchg
das
inc
add
mov
stos
jnp
clc
fsubr
testb
out
addb
in
xor
addr16
testl
ficoml
lods
jl
fmuls
or
icebp
hlt
mov
add
adc
test
sub
std
xchg
fldt
iret
inc
and
out
les
cmpsl
push
and
out
mov
adc
push
cmp
js
or
loope
dec
inc
sbb
in
push
in
int3
sbb
clc
jns
sbb
das
data16
rcl
sub
in
cmp
test
lods
dec
out
push
mov
sbb
mov
cmp
leave
or
call
addr16
inc
lret
pop
mov
aad
mov
sbb
enter
fisttps
adc
mov
stc
mov
daa
dec
imul
inc
inc
stos
or
dec
push
cmpb
and
pinsrw
out
inc
out
outsl
scas
sbb
adc
ss
loopne
dec
sub
or
pop
stc
jge
and
int3
push
and
shlb
pop
xchg
and
daa
sub
rcrl
stos
in
sbb
xor
or
imul
es
add
lea
clc
mov
stc
int3
shlb
xchg
pushf
lds
sbb
pop
test
ret
das
cli
jecxz
pop
shll
pop
bound
xchg
in
dec
out
adcl
ljmp
pop
in
out
adc
add
ds
adc
mov
mov
xchg
pop
jecxz
cld
sahf
movl
mov
insb
mov
scas
hlt
imul
mov
in
adc
sub
iret
cmp
push
inc
pop
sub
icebp
in
push
jmp
sbb
aad
xor
sahf
xchg
sti
fildl
fidivs
or
push
lret
ljmp
push
std
shrl
lahf
loop
and
jb
and
mov
out
movsl
insl
and
test
shlb
mov
shlb
jnp
add
mov
adc
lcall
cld
test
js
add
sahf
add
inc
jne
mov
scas
mov
inc
mov
and
lea
test
cli
addr16
dec
insb
cwtl
rorb
jae
loop
jnp
js
push
push
shr
sbb
cmp
scas
xor
mov
xchg
mov
lock
inc
xchg
loop
outsl
inc
cmp
movsb
popa
and
inc
loop
shlb
cmpl
push
stos
fcoml
scas
cmp
aas
mov
std
add
test
out
arpl
ja
xchg
enter
sub
pop
mov
sbb
pop
mov
stos
pop
iret
inc
push
call
shl
adc
aad
inc
subb
std
out
xor
sbb
dec
xor
pop
pushf
roll
mov
mov
loopne
mov
pop
outsw
repnz
orb
mov
incb
adc
sbb
sbb
in
push
bndstx
xchg
pop
cmp
leave
mov
idivl
in
sbb
mov
cli
in
iret
dec
cmc
mov
stc
flds
mov
inc
fmulp
std
fs
fisubrl
push
or
inc
ljmp
mov
faddl
inc
lret
pop
ja
or
rcrb
out
or
fdivl
ds
in
jge
inc
xor
mov
shlb
xor
jmp
movsb
dec
xchg
push
stos
imull
dec
xor
sub
xor
es
sahf
scas
or
xchg
repz
mov
adc
aas
pop
lods
ret
mov
lods
dec
lds
lea
dec
clc
ds
movsl
push
sub
fcoms
divb
pop
sahf
aam
loopne
jp
add
insl
sub
out
and
test
test
ljmp
xchg
stos
andb
pop
mov
mov
lret
or
xchg
jae
cmp
mov
cmp
mov
cmc
fcomi
fcos
rorl
testl
dec
scas
xchg
outsl
cltd
push
insl
xor
mov
jge
xchg
jo
ret
test
jae
jne
pop
xor
imul
jbe
jl
inc
loop
outsb
cli
cwtl
sub
and
or
push
sub
mov
jns
gs
pop
stos
nop
push
fwait
sbb
push
imul
fdivrl
dec
mov
out
mov
icebp
xchg
nop
std
insl
dec
std
pop
ljmp
arpl
sbb
test
gs
sbb
repnz
ss
jnp
movb
data16
ja
inc
ret
in
nop
fsts
pop
push
cmc
push
mov
or
cmp
int
dec
aas
cmpsl
mov
imul
mov
lods
jle
mov
fists
cmp
dec
icebp
mov
repz
or
add
inc
jecxz
outsl
sub
and
pop
sbb
inc
xor
jbe
push
mov
test
jp
pandn
sbb
fsubs
cltd
mov
mov
sbb
stos
mov
jp
mov
xor
movsb
inc
pop
xchg
jo
lds
or
push
mov
mov
dec
popa
jns
jo
mov
movsl
call
sbb
int
cmp
pop
cs
push
ss
push
lahf
mov
add
jmp
jnp
cmp
sub
sbb
inc
mov
negl
sti
mov
outsl
xlat
sbb
mov
or
pop
lods
test
cmpsb
call
stos
sti
sbb
jmp
push
sbb
rol
sarl
stos
adcb
mov
dec
in
aam
mov
adc
icebp
xchg
je
stc
jo
popa
cmp
clc
adc
pop
cli
pop
js
pmaxsw
lods
icebp
dec
cmp
mov
fdivp
pop
fwait
adc
data16
jl
lods
sahf
test
xor
jle
sbb
xchg
adc
jmp
or
shrl
movsl
pop
cmp
dec
and
push
xchg
sbb
mov
pop
scas
jae
dec
fnstcw
mov
inc
aas
push
add
sub
ljmp
stc
cbtw
fldt
or
xchg
lods
bnd
jecxz
gs
scas
leave
and
ret
faddp
jmp
rcl
nop
cltd
xchg
pop
pop
push
cltd
xchg
scas
dec
dec
xor
jns
lret
xchg
stos
sar
sbb
dec
div
movsl
into
fstpl
xchg
sbb
das
fs
addb
lea
xor
sbb
pop
mov
pop
loope
lds
xor
mov
nop
push
popf
fs
or
pop
cmc
and
mov
xchg
repnz
imul
out
mov
loop
clc
shll
ret
mov
dec
push
test
adc
dec
cwtl
sbb
push
imul
aas
gs
pop
rolb
out
mov
adc
xchg
adc
pop
gs
jo
ja
fcmove
xchg
pop
hlt
les
xchg
lret
loope
aas
fwait
movsl
inc
scas
xor
jmp
mov
in
out
xchg
sbb
sbb
cmp
add
jb
dec
cli
push
filds
mov
test
push
jg
dec
loope
dec
mov
aad
dec
sti
xchg
push
cltd
sbb
jnp
pop
jae
pushf
loope
enter
jge
outsb
inc
sub
mov
dec
or
adc
dec
cltd
pop
ror
lds
call
out
fisubl
sbbb
or
sub
hlt
push
js
dec
outsb
mov
inc
cmc
test
add
je
lock
sbb
adc
mov
mov
rclb
filds
sub
imul
push
xlat
and
dec
dec
stos
lea
popf
and
repz
es
sbb
dec
dec
jno
pop
ljmp
sbb
mov
repnz
inc
fnstsw
bound
fs
fwait
outsl
in
sub
cmp
inc
das
nop
lods
jl
xlat
lret
xor
pop
xor
addl
scas
mov
mov
push
sbbb
ja
mov
adc
clc
lcall
shl
mov
push
and
popf
shld
cmp
jecxz
arpl
ja
add
inc
cmpsl
sbb
lret
push
sbb
daa
out
fnsave
scas
test
pop
inc
adc
das
notb
ljmp
adc
pusha
subb
addr16
cwtl
add
and
jnp
pop
mov
loop
arpl
and
ss
adc
mov
pop
adc
xchg
out
negl
filds
xchg
xchg
outsb
cmc
push
aad
cmp
icebp
sub
mov
dec
psrlw
mov
sbb
xor
pop
xor
and
fadds
arpl
negb
and
lahf
mov
scas
push
xchg
inc
shlb
push
loopne
shl
mov
or
dec
xor
cmp
stc
jmp
or
and
fs
daa
mov
mov
data16
sbb
fnstenv
das
divb
or
push
icebp
jb
test
mov
stos
push
mov
push
or
inc
xor
test
and
push
cmpsl
dec
mov
nop
xor
mov
xchg
xor
int
mov
hlt
add
push
bound
jo
lock
sub
bnd
jecxz
mov
sti
cmp
adc
sbb
outsl
ret
test
insb
scas
je
out
or
cmp
bound
inc
iret
add
mov
sub
cltd
test
xchg
insl
and
repz
xor
fdivl
scas
in
test
push
mov
mov
mov
insb
jo
mov
repnz
hlt
mov
sub
popa
jg
mov
cmc
inc
cmp
mov
mov
scas
sbb
test
and
fstpl
cmp
sarb
loop
push
js
cs
jecxz
mov
imul
mov
dec
xor
xchg
jne
repz
xorb
push
cmp
mov
insw
test
mov
dec
das
test
in
sub
xor
sarb
mov
mov
jno
dec
mov
bound
add
xchg
or
orl
jmp
cwtl
mov
xchg
cmpsl
outsl
lret
inc
stos
scas
jns
inc
dec
idivb
outsb
scas
xor
rclb
adc
call
sarl
fsub
ss
popa
mov
scas
test
mov
stc
sbbb
shr
xor
sahf
cld
fcmovb
mov
mov
jo
adcb
nop
fldt
adc
fsincos
cs
mov
pop
aam
xor
test
stos
pop
cmc
adc
int
sbb
mov
push
mov
ficoms
das
xor
pop
or
inc
shrb
xchg
sahf
test
paddd
inc
adcl
leave
fldcw
adc
lods
push
dec
mov
jg
jmp
jb
mov
jl
jmp
mov
mov
lock
sub
sbb
inc
xlat
js
mov
mov
mov
jg
cmp
lea
bound
rorl
or
xchg
jg
repz
sysexit
jecxz
addl
or
lret
mov
mov
inc
imul
decl
movsl
add
add
outsb
je
mov
ficomps
dec
nop
fldl
sbb
iret
xchg
loopne
cmp
push
pcmpgtd
in
inc
fmul
repz
out
out
in
cs
nop
out
xchg
stos
push
sbb
fcoml
mov
dec
xor
and
adc
jge
das
bsf
push
push
jp
jmp
rcl
sub
push
dec
dec
push
mov
or
mov
jmp
iret
lahf
movsl
xchg
in
xorb
aas
jp
imul
mov
nop
sbb
gs
fwait
loop
add
cmp
mov
in
inc
adc
dec
pop
inc
mov
jo
dec
jle
sub
jg
imul
gs
les
adc
adc
inc
frstor
xor
test
inc
inc
xchg
fcomps
pop
or
add
dec
or
les
pushf
in
fistps
shl
or
pusha
xchg
adc
sti
das
mov
push
xchg
jo
mov
test
or
inc
std
pushf
scas
push
mov
lea
int
or
in
aam
cmc
adc
and
xchg
lahf
lahf
and
mov
jno
pop
adc
sbb
mov
pop
dec
es
leave
out
mov
add
inc
push
data16
stos
loope
sub
popf
mov
lcall
push
into
repnz
mov
xor
lahf
je
stos
mov
sub
or
adc
adcb
xor
jne
xchg
push
mov
je
xor
hlt
push
jecxz
ss
or
cmp
sub
out
rclb
lcall
and
sub
jo
xor
push
fnstenv
add
aam
cmp
ss
cmc
aaa
push
jmp
add
inc
jle
and
mov
xchg
jnp
fwait
mov
out
push
xor
xchg
mov
and
cmp
inc
xor
sahf
adc
fsubrs
rol
inc
add
loope
cmpsl
inc
xor
lds
rorl
mov
or
inc
clc
jmp
repz
fdivrl
dec
adc
and
fldenv
pop
xchg
pop
cmp
sbb
jle
mov
cmc
call
inc
pusha
lds
add
cld
pop
sarl
push
pop
cltd
xchg
das
push
fistl
xlat
xor
pop
fidivrs
xlat
xor
xchg
dec
push
sub
call
mov
fsts
je
add
cmpsb
add
or
cmp
pop
std
mov
lds
cmpsb
mov
lcall
out
mov
jns
push
mov
push
xor
test
sbb
sub
adc
jno
mov
lock
jg
adc
adc
icebp
aaa
mov
loope
loopne
ffree
xor
add
hlt
pop
inc
or
ret
xchg
jbe
pop
fnstcw
xlat
je
lret
mov
es
mov
pop
inc
shlb
lods
and
and
or
stos
xor
out
sbb
push
scas
cli
push
int
outsb
notw
aam
sub
lret
nop
sbb
and
rorb
xor
mov
fbstp
push
mov
test
cltd
xchg
xchg
test
adc
les
rorb
pop
mov
jge
push
lods
mov
jg
jbe
outsl
pusha
adc
adc
xchg
pushf
jl
sbb
mov
mov
sub
push
leave
pop
push
inc
mov
sbb
sbb
add
push
mov
repnz
mov
insl
popa
loopne
lods
cli
xorb
nop
mov
rdtsc
bound
mov
fistl
xchg
scas
jae
xor
es
pop
add
jp
mov
push
mov
xchg
int
or
mov
jp
adc
pop
call
stos
sub
xchg
adc
aaa
adc
pop
sub
sbb
jle
cltd
insb
add
jp
jle
outsl
and
add
test
cmp
add
add
subb
mov
or
xchg
mov
xlat
lret
inc
mov
mov
das
push
mov
pop
aas
rcr
lock
stc
out
xchg
mov
jo
jae
jle
and
aas
or
pusha
call
sub
lret
stc
lahf
fdivs
jae
inc
mov
je
xchg
and
inc
ljmp
dec
sbb
adc
mov
dec
addr16
cmp
fists
cmp
sahf
add
in
sub
sbb
cltd
xchg
shll
iret
shlb
push
mov
mov
sub
test
and
lock
mov
in
cmp
andl
mov
sarl
xor
cmp
jg
sbb
xchg
jne
ss
fwait
pop
test
inc
outsb
popf
movsb
xlat
nop
mov
gs
lods
mov
pop
cmc
cmpsb
or
jbe
std
fs
repnz
test
repnz
cmp
pop
pop
in
sbb
or
les
fidivrl
pop
push
fcomp
popf
xor
cwtl
xor
cli
enter
jns
dec
mov
mov
fldenv
ret
or
pop
mov
cmpsb
add
nop
cmp
cs
pop
jo
and
jp
mov
dec
jg
in
test
lret
ss
xorb
inc
ds
pusha
ss
mov
mov
mov
popl
add
xchg
add
push
dec
int
inc
stos
jecxz
inc
jl
leave
or
loopne
add
xor
adc
pop
lahf
push
sarl
sub
sbb
scas
xchg
shll
mov
adc
pop
mov
jl
sub
inc
xor
sbb
jbe
jmp
mov
es
andb
lcall
int
int
xchg
movsl
and
ja
cli
xor
ja
jb
insl
shlb
mov
repz
bound
imul
popf
mov
jmp
insb
arpl
movsb
mov
add
xchg
inc
movsb
push
mov
jge
inc
xor
faddp
fists
jp
shlb
outsb
jno
xor
das
adc
cmp
jmp
leave
mov
das
jo
xor
lret
shll
push
jae
inc
xlat
aaa
in
jl
adc
mov
cwtl
lock
out
gs
ja
cli
xlat
or
ss
fwait
mov
nop
orb
lcall
mov
pushf
fs
ja
push
pop
xchg
ficoms
add
pop
dec
add
int
adc
fwait
pop
ds
data16
cmpsb
mov
jno
and
inc
jb
pop
mov
xlat
std
out
js
cmp
iret
inc
lods
mov
push
add
xlat
repnz
xchg
sbb
xor
dec
mov
inc
push
sub
loope
pushf
adc
les
pop
outsb
cmovg
lock
out
cmp
aas
mov
imul
aam
mov
push
movsl
and
cwtl
push
jbe
adc
aad
xor
into
imul
orb
sub
dec
mov
call
push
in
push
shlb
pop
ja
push
push
push
movsb
xlat
mov
cmp
cs
in
add
frstor
out
add
hlt
outsl
int3
mov
cmpsl
sub
xchg
mov
mov
mov
nop
mov
fcomps
pop
aam
inc
rclb
ret
lcall
test
in
jp
pop
dec
sub
or
leave
loop
les
cmp
add
dec
push
and
lcall
leave
mov
cmpsl
daa
push
jle
insb
jecxz
cs
jns
sbb
mov
mov
sbb
sub
add
or
ja
inc
adc
outsb
mov
loopne
mov
mov
cmp
dec
out
outsl
sarl
lahf
inc
cmp
sbb
jmp
adc
fcomip
lds
jmp
mov
cmp
in
gs
out
popa
xor
inc
mov
mov
scas
push
nop
dec
sbb
jns
xor
fs
in
adc
aam
lahf
mov
pop
subb
xchg
mov
xchg
mov
push
jg
pop
mov
xchg
cmp
sbb
outsl
mov
pop
cwtl
and
ffree
or
add
ror
popa
jae
movb
clc
rol
cltd
xor
call
je
sbb
pop
or
mov
outsl
int3
and
mov
pop
jp
add
xchg
cwtl
dec
cmp
lods
inc
or
popf
nop
pop
push
sbb
pusha
mov
dec
jmp
lods
pusha
sbb
sub
sub
out
jmp
mov
test
jmp
and
mov
cmp
call
inc
jns
mov
fcompl
mov
lock
testb
inc
repz
frstor
test
mov
push
orb
push
xor
cmp
and
imul
dec
test
push
in
notb
push
cmc
pmuludq
lret
imul
clc
aad
dec
push
fsubrs
clc
sbb
push
add
daa
inc
insl
inc
mov
mov
cmp
sbb
mov
repz
lds
xchg
or
xor
xor
data16
lock
push
stc
lcall
orl
mov
jb
leave
stc
ss
cwtl
mov
les
jb
inc
mov
jecxz
cld
cs
add
xchg
adc
or
add
adc
mov
cmp
mov
dec
push
lods
andb
out
stc
dec
sub
roll
or
xchg
sub
add
and
fcmovnbe
and
adc
arpl
push
aad
sbb
mov
mov
xchg
enter
push
loopne
popl
push
push
les
into
sub
rcl
jb
and
fs
pop
shll
cmp
xchg
hlt
sbb
js
fisttpl
sbbl
sti
stc
push
sbb
popa
push
das
sti
idivb
cltd
stos
fldt
rcrb
addb
jmp
cmpsb
inc
loopne
rolb
daa
gs
xchg
int
or
repnz
dec
and
jge
bound
push
loopne
xchg
xchg
xlat
cmp
in
aaa
cmc
repz
push
xchg
outsl
clc
pop
jmp
aam
cmpsb
mov
test
bound
xor
hlt
lods
addr16
jo
mov
lods
dec
stos
scas
imul
mov
aam
sub
or
xor
mov
notb
fs
sbb
sahf
jmp
addl
inc
add
adc
sbb
out
data16
in
jecxz
movsb
fnstenv
addr16
cwtl
ret
out
mov
test
xchg
call
aaa
lcall
or
icebp
orl
add
and
mov
sub
adc
aas
stos
popf
sbb
loopne
das
jo
pop
jmp
add
dec
cltd
sbb
mov
mov
hlt
push
outsl
dec
repnz
jb
pop
aas
sub
in
pop
repnz
sbb
sbb
adc
and
clc
mov
clc
pop
lcall
jp
and
test
imulb
mov
mov
nop
mov
hlt
imul
movsb
xchg
loopne
test
ret
jecxz
loop
test
test
pop
insb
jbe
mov
das
subl
aaa
adc
out
mov
in
stc
arpl
fistpll
mov
lcall
pop
idivb
and
hlt
mov
mov
aaa
dec
adc
or
movsl
push
hlt
push
fwait
xor
aas
fs
xchg
lea
sub
xchg
bound
mull
push
or
rcrb
std
cli
mov
lods
fnstcw
or
or
mov
mov
cmp
insb
call
mul
loop
bound
xchg
add
add
test
mov
clc
adc
and
mov
inc
jo
pusha
mov
aad
sub
push
xor
cmpsl
xor
and
cmp
xor
std
mov
stc
arpl
mov
jge
mov
mov
fdivrl
pop
sahf
mov
xor
inc
sub
pushf
insl
sarb
and
ret
hlt
addr16
xchg
or
xor
lock
lcall
sbb
push
popf
push
outsl
cmp
jecxz
leave
and
popa
xchg
cmp
cmp
ja
mov
andb
addb
ljmp
bound
xchg
repnz
jle
mov
pop
adc
sbbb
es
into
lea
xor
and
ret
nop
in
lret
inc
loop
pop
jp
pop
mov
add
data16
mov
jo
mov
popa
xor
xchg
xor
pop
jne
jne
outsb
insl
in
mov
dec
mov
dec
cmp
jo
xchg
xchg
mov
and
mov
adc
sti
jmp
es
out
repz
ret
fldcw
mov
in
adc
js
push
fidivl
pusha
push
sahf
scas
push
enter
pop
andl
xlat
sbb
fs
mov
xchg
cwtl
int3
inc
dec
out
xor
mov
jmp
aad
lods
xchg
add
ljmp
insl
jno
xor
xor
add
jle
lcall
js
aad
cli
push
and
cmp
xor
cmp
pusha
dec
sbb
push
outsl
es
gs
fwait
imul
icebp
cmpl
pop
xchg
es
mov
sbb
xor
cmpsl
and
sbb
or
imul
sbb
dec
gs
pop
stc
adc
nop
aam
out
mov
cmpl
adc
inc
xor
dec
fwait
ljmp
push
int
inc
xchg
dec
sub
mov
mov
jae
imul
cmpsb
popl
cmp
sarw
imul
outsl
out
out
push
adc
adc
xor
imul
imul
mov
lcall
outsb
and
xchg
pusha
jmp
mov
add
add
add
mov
fnsave
in
mov
fcmovbe
iret
xchg
xchg
mov
push
jns
pop
pop
pop
repnz
mov
mov
out
push
data16
aas
or
stos
mov
shrb
mov
fldcw
lock
es
xor
lods
aaa
kmovb
xor
imul
repz
lcall
jae
movsb
mov
jo
test
xor
orl
rcr
pop
add
or
es
arpl
mov
sbb
loopne
aad
jbe
mov
aaa
xchg
int
push
add
les
daa
mov
imul
stc
mov
push
lret
xchg
dec
dec
loopne
fdivs
mov
sub
subl
and
pop
push
mov
mov
daa
dec
lcall
fs
sahf
lds
shrl
sub
in
nop
fmul
lods
ss
lret
int
mov
sbb
dec
mov
movsb
xchg
mov
or
cld
mov
mov
jle
test
int3
mov
sti
leave
out
xor
dec
decl
shr
jo
ja
jl
pop
cmpsb
pop
pusha
iret
pop
cmp
rolb
xor
xchg
aaa
data16
idiv
lock
sub
sbb
addr16
add
and
mov
mov
movsb
xchg
pop
dec
add
push
orb
sub
clc
das
and
sbb
iret
sub
loopne
dec
aad
shr
sub
cmp
push
jge
lret
stos
nop
or
adc
es
mov
push
mov
popf
sub
fs
test
rorb
pop
loope
cmpsb
adc
out
pop
add
jecxz
shlb
out
mov
xlat
push
cli
push
ja
jecxz
mov
pop
mov
sub
ret
stos
push
nop
and
test
cmp
adc
xor
mov
jg
outsl
xlat
lret
rcrb
pop
inc
inc
jo
fcmovnb
xchg
scas
and
xchg
push
and
mov
inc
cmpsl
int3
andl
aaa
jbe
incl
test
mov
mov
ret
cltd
jmp
or
ficoms
cmp
cmp
cmc
sahf
xchg
out
push
lods
dec
and
data16
adc
pop
hlt
push
leave
cmp
or
jnp
mov
or
push
arpl
inc
pop
nop
idivb
pusha
xchg
sub
push
or
movsb
dec
ret
mov
xor
aad
cmpb
xchg
fsubs
int
pop
xor
loopne
add
pop
jge
dec
lcall
pop
das
adc
push
push
xor
outsl
add
cmp
mov
std
sub
daa
dec
dec
fcompl
roll
js
negl
call
cltd
mov
cld
jmp
lret
aad
es
lock
pop
jbe
mov
or
out
sub
mov
jae
sub
out
orl
mov
adcl
pop
or
cmp
mulb
add
jne
imul
cmp
dec
cmpsb
push
jbe
lds
inc
loop
inc
mov
insl
dec
push
xor
xchg
push
das
jb
int
adc
push
mov
mov
lea
push
pushf
cs
jno
pop
imul
jno
hlt
sub
test
xchg
lret
mov
mov
xchg
adc
mov
btc
cmp
jmp
les
pop
mov
cmpsb
jmp
push
lahf
sahf
sub
xchg
repnz
pusha
les
out
repnz
iret
xor
test
enter
push
dec
and
aam
clc
outsb
enter
fisubrs
jae
das
xchg
rcrl
mov
cmp
xlat
cld
mov
rolb
rcl
pop
adc
inc
sbb
push
mov
inc
pop
mov
sub
jbe
xor
mov
arpl
push
xlat
nop
out
cltd
in
jbe
pop
jns
inc
orb
dec
sub
push
push
xor
xchg
xchg
jl
xor
push
ss
test
sbb
pop
in
ret
testb
xchg
adc
repnz
bound
hlt
std
mov
push
dec
ret
push
push
pusha
cmpsl
das
lcall
sbb
mov
idivb
mov
sarb
pop
loop
leave
pop
xor
dec
jle
ss
jle
js
fldt
inc
or
pop
cmp
add
leave
pop
and
jo
add
add
inc
cmp
test
pop
push
cmp
xorl
mov
pop
push
js
mov
scas
stc
dec
pop
add
mov
aad
xchg
inc
sub
inc
sbb
pop
cmp
lret
xchg
mov
mov
in
push
sub
adc
push
mov
daa
mov
arpl
clc
repz
test
push
pop
adc
dec
cli
orl
mov
mov
stos
push
das
or
sub
and
push
ljmp
xchg
cmpsb
scas
aam
cld
cmp
int3
popf
sbb
xchg
faddl
aaa
jecxz
into
outsb
je
pop
add
lods
push
mov
arpl
fsubrl
clc
inc
addb
xchg
leave
arpl
enter
and
mov
js,pt
jge
and
dec
cwtl
cmp
div
bound
adcb
cwtl
jb
divl
xlat
sahf
cmpsl
pop
pop
stc
xchg
dec
rcll
fistl
cmp
xor
dec
les
fstpl
sarl
add
out
push
outsb
cmp
fistps
ljmp
xor
faddl
rcrb
scas
mov
xchg
cmp
xor
sti
lea
push
jl
mov
cmpsl
aas
aas
cli
jmp
into
cmp
fisubl
dec
lea
push
cs
dec
icebp
jge
sti
pop
stos
jle
jae
lret
arpl
mov
cltd
jl
mov
mov
sbbl
arpl
pusha
adc
mov
test
mov
push
lcall
push
mov
sub
jnp
addr16
sbb
and
mov
ror
arpl
mov
das
xchg
in
gs
imul
jecxz
jns
cltd
fcomps
pop
jge
push
cli
outsb
pop
cwtl
outsb
jmp
mov
mov
loopne
push
xchg
mov
das
xor
pop
and
ds
inc
mov
lcall
repnz
or
call
xor
cmpsb
cwtl
lret
xchg
ds
lahf
pushf
ss
daa
dec
shrl
dec
xchg
cld
dec
mov
cmp
xchg
mov
xor
xchg
cld
sbb
movsl
hlt
xchg
dec
mov
das
dec
jne
lahf
mov
or
aaa
cmp
xor
sbb
fsubp
sub
cltd
in
sahf
cmpsb
sbb
sti
je
mov
xlat
mov
dec
inc
lea
int3
loopne
hlt
fstpt
and
jecxz
decl
push
dec
mov
jbe
mov
test
iret
add
mov
std
mov
hlt
mov
movsl
jno
cmp
hlt
or
out
and
in
call
xor
mov
adc
push
movsl
lret
add
rol
sub
dec
cmpb
push
jg
and
sbbl
pop
or
in
aam
loopne
loopne
idiv
repz
ja
add
xchg
jo
out
fsubp
cmc
outsl
int
pop
gs
clc
pusha
int3
lock
fs
pop
imul
mov
dec
aaa
mov
jno
ja
femms
xor
lcall
test
andb
add
shll
ds
add
push
gs
frstor
into
push
push
pop
nop
sub
mov
imul
xor
mov
cmpsl
scas
or
mov
data16
inc
imul
mov
xchg
xchg
sub
loope
mov
jbe
shrl
dec
sbb
jp
sbb
bound
sub
xor
out
sub
pop
jns
std
pop
jl
subl
scas
fs
push
sub
adc
dec
out
add
aas
xchg
bound
test
ficomps
jge
test
stos
push
pusha
stos
loope
test
push
cmp
shlb
outsl
aam
addr16
add
adc
ret
inc
ret
xlat
ret
popa
lcall
cmp
rorl
or
daa
popa
popa
inc
xor
cld
out
loope
cli
jbe
adc
mov
lret
imull
jb
test
sub
aam
dec
test
inc
mov
sub
js
ss
xchg
loope
xchg
popf
scas
or
fdiv
sbb
jae
movsb
mov
clc
cld
lahf
push
dec
jb
cmp
or
xor
fidivrs
add
jae
insl
in
xchg
mov
sbb
dec
pop
cli
push
dec
cmp
cld
aaa
adc
dec
das
push
insb
mov
inc
mov
je
gs
xor
iret
push
call
insl
test
xchg
mov
mov
fmull
and
into
add
cltd
jno
mov
movsl
in
sti
stos
mull
addl
addps
mov
out
jno
bound
es
fwait
movb
dec
lcall
sub
movsb
cmp
hlt
ss
aad
repz
dec
mov
push
and
adc
dec
cli
mov
fwait
push
dec
ror
sbb
mov
push
hlt
std
push
dec
shrl
out
cmp
into
aas
mov
dec
xchg
xchg
dec
jo
adc
shl
and
lret
fdivrl
inc
sub
sub
mov
div
push
dec
test
cld
fdivr
ljmp
jns
mov
jl
int3
js
jnp
mov
in
sub
mov
jae
push
dec
outsl
xchg
popa
jae
out
loop
popa
cmp
push
pop
idivl
jle
addr16
mov
and
mov
shll
cmp
test
scas
out
mov
idiv
jl
adc
xchg
stc
inc
ss
jbe
sahf
jns
pop
jl
jmp
xor
xor
jmp
pop
das
fcompl
ss
pop
adc
fcmovnu
lods
mov
and
push
insl
lea
dec
cli
xor
subb
iret
xchg
dec
mov
sbbl
loopne
out
inc
ds
xchg
into
or
out
xor
adc
mov
jmp
lods
push
inc
insl
sub
cwtl
arpl
xchg
xor
ljmp
outsl
or
sub
dec
jp
add
neg
xchg
adc
mov
push
inc
imul
cltd
lcall
js
add
das
pop
inc
xchg
notl
jmp
xchg
mov
in
adcb
lods
push
mov
mov
push
aam
in
adc
push
xchg
pop
cld
dec
xchg
lock
push
xchg
stc
pop
push
out
push
in
mov
dec
mov
fisttpll
pop
shrb
in
loop
mov
jmp
gs
cs
mov
mov
add
sbb
add
pop
lods
xor
scas
loop
jecxz
adc
daa
sbb
sub
push
cmpsb
cmpl
cld
xor
fwait
cld
pop
leave
lahf
sbb
gs
sbb
and
xor
xchg
and
jge
inc
add
lahf
mov
push
ret
rcrb
cmc
lcall
repnz
imull
fdivrs
cmp
xor
lods
js
push
and
leave
xlat
mov
push
lock
push
xchg
cmp
in
jnp
pop
dec
cmpsb
sahf
in
mov
sti
mov
clc
faddp
sub
add
into
gs
imul
cmp
push
cmp
and
sahf
popa
pop
inc
xor
mov
lods
test
mov
stc
cmc
test
js
arpl
sub
mov
xor
cmp
inc
in
and
add
outsl
push
jg
jbe
iret
das
outsb
push
nop
sub
add
dec
test
mov
aam
xchg
je
cmp
sbb
xor
or
or
loopne
xchg
or
xchg
test
fisttpll
div
lods
sbb
mov
xor
xor
movsb
fwait
or
sti
out
aaa
xor
shll
iret
lds
fadd
or
inc
mov
bound
mov
aam
mov
out
mov
xor
aas
je
inc
bound
bound
addr16
jecxz
cli
mov
cli
loop
xchg
pop
mov
push
push
sarb
xrelease
and
add
xor
or
orb
add
gs
mov
dec
sbb
sub
ss
popf
inc
mov
push
jp
test
inc
dec
outsl
sub
mov
push
fs
ret
dec
into
lcall
mov
inc
add
push
adc
push
mov
in
sbb
shrl
adc
push
out
jne
ja
orb
inc
jne
mov
ljmp
dec
lahf
in
inc
inc
xor
pusha
pop
sub
dec
sahf
ds
xchg
enter
stos
dec
insb
fdivs
out
pop
mov
cmp
fstl
mov
push
mov
jp
cs
daa
ret
sub
push
xor
test
jbe
xchg
jecxz
cmp
mov
daa
repnz
rclb
ljmp
inc
push
hlt
mov
mov
imul
push
rcl
roll
int3
fstps
mulb
jecxz
inc
push
fistl
shll
and
test
mov
push
pop
cmp
fldcw
sub
sarl
mov
mov
jno
jle
push
or
push
xchg
xchg
sahf
mov
xchg
sbb
les
push
xchg
ret
and
or
int3
push
jb
fs
mov
into
cmc
push
mov
push
mov
push
int3
mov
repz
xchg
jno
inc
xchg
inc
push
pop
mov
xor
cmc
popa
cmp
mov
lock
jne
movsb
ljmp
xor
adc
gs
rcll
push
dec
dec
gs
sbb
cli
mov
sti
and
pop
icebp
psubb
jbe
dec
sbb
xor
jp
stos
mov
adc
in
ds
ficoms
mov
cs
dec
sub
lock
js
pop
push
ficompl
sbb
dec
jne
insl
pop
push
out
xchg
dec
fistpll
pop
mov
call
cli
mov
insb
mov
mov
jecxz
movb
leave
mov
and
pop
adc
in
sbb
ljmp
adc
aas
cmpsl
jge
outsb
ret
xor
push
mov
ds
pushf
int
shll
xchg
lahf
adc
mov
xchg
lcall
pusha
push
xlat
mov
xchg
inc
inc
loop
jae
lods
lods
sbb
cmp
mov
push
je
sahf
and
ret
sbb
pop
incb
mov
adc
fstl
pusha
into
push
inc
and
xor
and
dec
xor
jmp
mov
pop
inc
cli
enter
clc
inc
xor
fcoml
mov
lcall
popf
mov
jnp
sbb
aas
mov
mov
pop
adc
mov
xor
loope
loope
mov
inc
movsb
popf
or
repz
pop
push
icebp
loop
adc
mov
imul
inc
iret
lock
aaa
mov
inc
iret
adcb
push
clc
mov
pushf
loope
dec
push
mov
lcall
outsb
or
jmp
xor
pop
add
das
mov
lret
pop
xchg
and
xlat
xchg
push
imul
and
push
sbb
jp
cmp
clc
mov
jnp
pop
add
xor
inc
xchg
mov
jecxz
sub
adcb
mov
flds
adc
add
stos
pushf
fistpl
loope
adc
pusha
adc
fs
enter
or
fisubl
jbe
lret
dec
jmp
and
outsl
stos
loop
jge
xchg
bound
lds
jecxz
xlat
cmpsb
xchg
sbb
xor
inc
adc
adc
xor
jbe
mov
popl
pop
std
fdivrp
jmp
ja
jmp
cmpl
es
fsubs
adc
pop
lods
mov
pusha
mov
stos
jge
imul
jbe
push
sbb
stc
jo
push
cmp
cmp
push
in
test
jno
out
out
push
and
sub
das
and
push
js
add
ror
int
lahf
add
sar
adc
sub
mov
xor
xchg
lret
fsubrs
movsb
shll
mov
adc
add
imul
insb
in
pop
and
xchg
or
sub
dec
adc
jns
mov
jl
sarb
call
les
and
aaa
insl
lea
jmp
mov
fmul
add
cmpsl
lcall
mov
bound
mov
pop
addl
xor
lcall
mov
in
outsb
fwait
cs
pushf
xor
mov
add
sti
push
popf
iret
mov
dec
das
popa
adc
in
stc
jmp
loop
ja
js
rcll
inc
aas
jp
cmpsl
push
mov
mov
jns
rcrl
mov
nop
pop
inc
inc
dec
push
mov
cmpsb
imul
and
lahf
adc
mov
dec
in
cmpb
mov
lock
lret
ret
xor
xchg
cmc
loope
stc
cltd
mov
rorb
shrl
push
push
test
andb
pop
popf
mov
lcall
loop
repnz
mov
jns
or
nop
loop
jl
pop
call
mov
fcoml
lcall
xor
lahf
outsb
in
mov
loopne
adcl
xchg
test
dec
jle
or
mov
add
jmp
xchg
je
shll
xchg
mov
sahf
repz
adcl
add
outsb
mov
addr16
hlt
cmp
mov
pop
lea
in
add
test
call
add
inc
cmpsb
lret
mov
negb
and
xchg
jmp
imul
cld
sub
fisubrl
arpl
sbb
cwtl
fisubrl
pop
scas
cs
test
mov
popa
enter
pop
fwait
ss
jnp
jmp
push
xorl
movl
ficompl
decb
cmpsl
xor
fldcw
and
ss
dec
pop
xor
sbb
cwtl
xchg
loope
sub
lock
jl
stos
pop
xchg
ret
cmp
xchg
xchg
inc
sbb
sub
or
ret
mov
in
mov
sub
out
mov
add
sub
lock
or
aaa
aad
ljmp
mov
cltd
pop
mov
sbb
pusha
inc
int3
mov
scas
mov
and
mov
loop
xor
loopne
insb
jmp
mov
cs
push
xchg
in
push
stc
cmp
por
push
push
stos
mov
xor
or
aas
push
sti
dec
mov
inc
lahf
mov
push
shlb
out
jno
or
sub
out
cwtl
sbb
add
xchg
ja
movsl
orb
int
add
cmpsb
cmp
adc
stc
jmp
and
cmp
je
fldenv
and
dec
pop
test
add
out
jnp
ja
push
out
lea
adc
push
sti
mov
sbb
lock
ss
push
call
adc
fldenv
mov
mov
add
leave
adc
jmp
fwait
leave
dec
stos
imul
in
xor
fisubl
jmp
dec
icebp
icebp
je
mov
cmc
add
dec
jne
enter
jmp
mov
ds
data16
pusha
loop
mul
and
fstl
jge
pop
sbb
push
pop
lea
shr
js
dec
jbe
pop
adc
pop
idivl
mov
lret
inc
mov
pop
dec
outsb
sbb
push
cmpsb
orb
les
insb
mov
sbb
fs
das
xor
pop
data16
jl
jnp
xchg
into
pop
int3
test
sub
push
arpl
rcr
adc
fdivrp
sbb
cs
int3
inc
dec
add
jg
pop
xchg
ljmp
pop
lretw
decl
sub
inc
jp
scas
dec
bound
rolb
adc
sbb
cltd
test
pop
adc
or
test
ret
push
adc
stos
cli
test
enter
leave
and
icebp
int3
add
pop
jge
inc
int3
pusha
push
adc
int
or
scas
jno
cmp
and
push
pop
movsl
inc
shll
test
aas
cmc
out
dec
or
mov
pop
das
sarb
and
daa
addr16
push
js
hlt
dec
ficomps
mov
pusha
xchg
cwtl
icebp
test
sbb
sbb
and
sbb
mov
inc
dec
stc
aad
and
inc
rol
sar
jp
xor
lea
fs
sarb
mov
cltd
xchg
xor
sbb
out
hlt
mov
dec
push
daa
cli
cld
push
popf
lcall
and
or
testb
out
gs
mov
xlat
cmp
std
outsb
inc
sahf
test
add
scas
adcl
fxch
adc
pop
rcl
inc
cmpsl
stos
and
and
push
jb
sbb
xlat
pop
jge
cmp
scas
inc
cmp
jle
sbb
mov
mov
jo
cld
mov
aas
cmpsl
ss
push
or
jl
jno
push
negl
fwait
aam
or
sbb
je
mov
sbb
jp
cltd
outsl
mov
out
jmp
mov
dec
out
push
nop
mov
push
and
jo
mov
and
xchg
push
mov
sti
arpl
adcl
dec
cmpsl
stos
cmp
js
out
jl
mov
sub
lcall
mov
outsb
call
push
xchg
jl
cmpsb
sub
popa
out
scas
or
out
push
into
or
rcll
gs
xchg
push
mov
push
shrl
xchg
cmpsb
in
and
stos
stos
add
xchg
pop
sti
movsb
push
xchg
loope
mov
lods
dec
xor
addb
data16
dec
cmc
les
hlt
mov
sub
aad
shrl
sbb
adc
push
inc
inc
push
mov
out
cwtl
or
xor
add
dec
test
pop
andb
es
dec
xorb
sub
jge
aas
add
push
mov
pop
inc
or
and
outsb
jne
out
in
ss
adc
and
or
dec
mov
push
xlat
aam
or
xor
clc
pop
push
ror
jns
shll
mov
jmp
lret
push
fnsave
jbe
cmc
pop
iret
insb
stc
xchg
mov
fabs
sbbb
adc
mov
adc
addr16
mov
mov
test
adc
int
jns
loope
mov
movsb
add
stc
sub
xchg
lea
test
pop
jo
jns
mov
sbb
sub
cmp
sbb
push
icebp
jecxz
sbb
out
in
sbb
adc
push
stos
out
mov
nop
movsl
push
push
icebp
xor
call
and
add
cwtl
pop
aaa
pop
mov
push
mov
cwtl
mov
cmp
int
or
xchg
pop
out
loop
insl
cmovnp
insb
adc
mov
roll
insb
adc
insl
or
push
loopne
sub
lcall
loop
or
fldt
adc
cmp
scas
out
cmp
aad
adc
fstps
fcmove
jl,pt
lahf
adc
leavew
test
inc
fisttpl
add
mov
xchg
or
les
dec
jbe
call
shrl
pop
mov
pushf
jl
xchg
jb
inc
cmc
push
dec
dec
sbb
cmp
add
add
out
mov
out
cmc
xor
aaa
or
or
call
fsubrl
jmp
call
fcomps
jo
ljmp
adc
int
mov
sahf
push
pop
mov
inc
jmp
mov
inc
into
fdivl
lock
jp
aam
or
adc
sbb
or
xchg
dec
sbb
mov
adc
sbbb
mov
xchg
lock
push
and
gs
test
test
jne
loop
xchg
push
pusha
sub
lret
call
dec
jmp
jne,pn
push
adc
loop
sbb
dec
addl
mov
cld
add
insb
rorl
add
imul
arpl
mov
and
fisttpll
or
cs
fmulp
inc
es
jne
pop
and
shll
mov
sub
fnstcw
decb
addl
fstl
cs
fdivrl
pop
call
xchg
out
dec
and
in
daa
lds
mov
or
orb
and
cli
sub
cmpsb
cs
inc
add
ret
loopne
daa
sub
push
outsl
lods
sbb
outsb
inc
fnstenv
push
arpl
push
xchg
test
lcall
dec
fwait
xor
rorl
cmp
adc
pop
sub
xchg
popl
adc
mov
pushl
cmp
mov
pop
gs
movntps
cmp
clc
sbb
pop
jne
lods
jo
lods
dec
addr16
cmp
rcrl
popf
xchg
shll
test
mov
push
fwait
push
and
mov
cmp
cltd
mov
jecxz
dec
ret
push
cmc
inc
add
cmp
in
sbb
dec
mov
mov
fcoml
inc
mov
out
xor
xor
ja
or
and
std
lret
or
inc
shll
mov
lahf
add
push
dec
leave
push
and
mov
repnz
mov
push
daa
pop
sbb
in
cld
fcomp
test
jo
fcoms
mov
jno
inc
das
sahf
mov
inc
lea
jb
test
sti
lock
mov
sub
cmp
xor
movsb
test
ss
es
inc
sub
sub
cltd
jmp
incl
push
pop
mov
scas
jns
sarl
shrb
in
rorl
inc
enter
jno
mov
push
or
cmp
int
push
js
and
lds
mov
cmp
testb
test
pushf
scas
adc
inc
imul
mov
push
stos
and
out
inc
sbbl
adc
add
js
sbb
clc
mov
push
cmp
or
mov
xor
mov
les
ja
imulb
jne
out
dec
ja
cmpsb
xlat
jecxz
or
mov
lahf
mov
xchg
movsl
cmp
mov
xlat
and
mov
popa
imul
push
mov
inc
mov
inc
nop
dec
and
and
nop
fiadds
lret
sub
hlt
mov
scas
out
jp
cs
and
test
shlb
cmp
out
repnz
pop
mov
rol
mov
push
dec
enter
fs
inc
dec
adc
xor
mov
jmp
jns
mov
lods
aas
cmp
into
cmp
fidivrl
aam
mov
push
mov
shrl
push
sbb
push
push
imul
mov
lea
insb
ficoms
jnp
aam
sub
mov
shll
push
iret
incb
cmp
jo
add
xor
rolb
sub
scas
mov
popa
stos
shll
popa
rolb
addr16
mov
push
push
and
mov
jp
jecxz
cwtl
xchg
loope
xor
push
in
je
xchg
jnp
pop
sarl
push
jmp
xorl
push
push
lahf
test
jb
adc
ret
xchg
adc
fildl
imul
push
xchg
fwait
aas
add
jae
repnz
xchg
out
sub
insb
rcr
push
sbb
cmp
popa
dec
xor
add
test
ror
jl
sub
mov
out
sub
adc
cli
jl
js
insb
testl
frstor
popf
sbb
rorb
fstpl
inc
cmp
rcrl
gs
repnz
push
cmp
xchg
pusha
pop
arpl
int
cmp
dec
dec
add
xchg
scas
mov
or
mov
outsb
cmp
push
push
lods
or
aas
mov
cltd
mov
dec
mov
mov
push
xchg
and
cmp
inc
dec
mov
inc
dec
leave
mov
sub
cmp
jo
cld
std
pop
fisttpl
lea
jl
imul
std
or
lea
pop
cmpsl
sbb
popa
mov
pop
push
jne
dec
aas
add
lret
in
in
mov
jge
xor
or
arpl
mov
sub
test
mov
int3
popa
and
cmpsb
popf
aaa
clc
pop
std
push
mov
outsl
adc
push
mov
fndisi(8087
pushf
push
and
dec
cmp
data16
and
pop
mov
or
les
or
inc
std
loop
inc
mov
loopne
or
and
sbb
or
adc
jns
pop
rep
mov
mov
push
cld
rcl
std
jnp
movsl
call
rcll
loopne
clc
lahf
cmp
inc
xorb
pop
mov
sbb
push
xchg
fstp
or
jns
mov
add
mov
fsubs
fistpll
mov
adc
mov
jns
inc
cmp
and
fistpl
mov
cmpsl
loopne
sbb
repnz
mov
jge
stc
movsl
jmp
pusha
loopne
or
add
push
insb
mov
testl
push
cmp
ljmp
xchg
cmpsb
jp
aaa
data16
cmp
sbb
pop
fwait
cltd
pop
cmc
jnp
test
mov
stos
icebp
jmp
scas
pop
aad
pop
je
sub
adc
pop
adc
sbb
pop
sahf
aaa
lahf
cs
push
rorl
xchg
jae
int3
jo
xchg
loope
ret
ljmp
outsb
cmp
inc
inc
xor
cmpsl
jle
mov
jle
push
nop
stos
add
test
ret
inc
push
dec
mov
jg
popa
add
outsl
lret
sbb
lods
push
push
nop
xchg
sub
shlb
cmp
adc
cltd
dec
push
mov
jo
dec
mov
dec
aad
loop
pop
inc
inc
mov
popf
and
rcrb
movsl
mov
mov
fsubrl
jmp
pop
pcmpgtb
rcrb
notl
movsl
cld
ss
and
inc
fisttps
cmp
jae
or
fs
cmc
mov
xchg
lock
mov
xchg
pusha
fwait
cmp
les
xchg
or
mov
push
outsb
xchg
xchg
test
mov
jmp
in
gs
xchg
or
test
mov
push
sahf
es
call
xchg
inc
scas
push
adc
out
int
adc
adc
out
cmpsl
fistpll
daa
pop
sub
scas
xor
sub
pushf
xchg
shl
mov
cmpsb
mov
mov
out
push
adc
dec
rorl
pop
outsl
inc
push
xor
pop
xchg
add
addb
adc
inc
outsl
dec
cmp
cmp
call
insl
inc
sbb
in
roll
mov
cltd
negl
mov
xor
dec
add
jle
popa
and
push
ss
daa
mov
cmp
xchg
outsb
scas
test
loopne,pn
dec
in
mulb
push
add
rcl
frndint
push
cld
out
or
ds
jmp
jecxz
sub
xor
jae
mov
lock
fs
leave
into
lret
push
popf
jl
push
sub
out
push
mov
inc
sub
jnp
xchg
cwtl
mov
dec
insb
pushf
dec
mov
and
pop
stos
jae
pop
push
push
syscall
hlt
fildll
repnz
fiadds
cmpsb
pop
test
mov
imul
imul
test
dec
xlat
xor
out
xchg
lcall
xchg
mov
incl
add
add
mov
aad
push
and
mov
int
dec
push
jae
mov
mov
sti
lcall
cli
call
inc
cmp
dec
xor
fdivrs
pop
push
insb
inc
jmp
fdivrl
push
insb
loopne
xlat
daa
cmp
sbb
iret
mov
and
fmull
imul
dec
and
cmovbe
clc
test
pop
mov
fidivrl
or
call
jnp
mov
mov
cmp
jae
mov
into
out
outsl
jl
movsb
inc
fnsave
idivb
sbb
cmpb
in
in
xchg
jns
and
adc
sbb
adc
pushf
sti
sub
icebp
dec
pop
push
rol
sub
into
xchg
movsb
das
ret
pusha
lods
ret
jmp
add
cmp
mov
inc
lcall
jmp
sub
pushf
xor
pushf
or
out
sbb
decb
or
ret
mov
in
enter
and
inc
sub
inc
insb
test
and
fldt
je
xor
xchg
js
dec
in
imul
xchg
imul
fsubl
fwait
out
cmp
mov
and
sbb
andl
adc
add
sbb
movsl
mov
fnsave
add
mov
scas
mov
fildl
push
xor
add
pop
dec
jmp
sub
int3
jg
dec
jne
pop
not
pop
popa
pop
scas
cmp
aaa
lcall
hlt
rorb
push
mov
daa
rolb
xchg
cmp
inc
popa
fiadds
jns
lret
es
xor
pop
push
jmp
rol
push
stos
aaa
ds
fcompl
jge
xor
adc
sbb
or
pop
cmpsl
sub
loop
les
or
or
inc
sti
icebp
arpl
sbb
inc
mov
mov
test
cltd
xor
cmp
sbb
or
fcmovne
in
lock
sub
shll
push
scas
dec
pop
lcall
sti
popa
iret
loopne
jae
cmp
push
add
or
movsl
out
outsl
lods
cmp
pushf
sbb
jg
dec
xchg
addr16
bound
das
loope
stos
rorb
ljmp
rol
xchg
fistps
sub
cmp
dec
and
in
or
les
mov
add
add
stc
aad
mov
rol
repnz
cltd
push
ds
cmpsl
inc
lock
xor
pop
or
lret
mov
dec
adc
sbb
inc
or
pusha
jnp
pusha
push
push
cs
add
jo
or
mov
mov
repnz
pop
push
in
data16
jb
cltd
dec
rcr
inc
xor
dec
mov
ss
and
iret
les
aam
inc
rorl
std
loope
or
add
jne
dec
inc
or
xor
sub
ret
rclb
jnp
mov
jno
mov
es
xor
loop
or
rolb
jecxz
adc
xchg
lahf
pop
jecxz
outsl
inc
xor
pop
inc
push
orb
lea
xchg
xor
push
stos
inc
pop
stos
xor
leave
mov
mov
out
test
mov
cmp
leave
adc
push
lcall
ret
les
test
test
xor
fnstenv
iret
pop
jnp
fmuls
cmp
inc
adc
cmp
mov
xchg
push
cwtl
or
mov
shll
mov
xchg
out
ljmp
fnstenv
or
and
fsubrp
dec
pop
push
nop
rorl
xchg
pop
xchg
pop
jle
pop
xchg
or
lret
jg
jmp
jb
jge
mov
push
push
pop
repz
insl
mov
jnp
aam
mov
popf
xchg
cs
mov
adc
test
leave
ja
adc
mov
ds
mov
xchg
daa
cld
jns
xchg
sbb
stos
scas
orb
push
inc
jae
mov
dec
xchg
push
pop
dec
movsb
das
mov
clc
lret
push
xchg
call
cmp
cli
pop
cmpsl
sbb
iret
lock
movsb
sub
add
add
ss
sub
cmc
mov
iret
scas
addr16
loope
push
iret
scas
jno
imul
aad
pop
jp
sub
fsubrp
pop
test
loopne
sbb
push
aas
mov
loop
cli
pop
jns
mulb
mov
xor
mov
mov
out
and
ds
push
adc
mov
out
jo
and
jae
popa
outsb
sbb
lods
push
pop
faddp
inc
and
aaa
leave
ret
lahf
imul
or
int
shll
jne
sub
fists
dec
test
jne
ss
mov
dec
and
out
mov
xchg
sbb
xchg
fdivr
fisttpll
ja
sahf
dec
pop
push
gs
jae
inc
arpl
inc
xor
test
sub
sbb
push
xchg
out
js
and
cs
dec
out
xchg
in
cmp
out
add
ss
out
popa
pop
loop
sub
ret
inc
jne
gs
pop
testl
or
sub
in
mov
int3
dec
cmp
adc
test
push
sub
enter
cmp
pusha
and
loope
out
lock
push
inc
into
lods
mov
or
hlt
push
jmp
imul
sub
adc
in
out
test
pop
fmulp
adc
inc
cmpsl
rcrl
rcr
lds
pop
loop
or
or
jb
loope
cmp
stos
stos
sbb
dec
add
sub
mov
sbb
dec
adc
inc
sub
push
xchg
xchg
pushf
pop
and
xchg
bound
scas
dec
xchg
mov
adc
sti
pop
push
and
cltd
or
subb
fs
sub
in
test
sahf
mov
sahf
fwait
push
cmp
pop
sub
or
mov
adc
dec
aad
jl
jp
dec
mov
std
mov
mov
fiadds
sub
sahf
xchg
lea
jae
jns
pop
inc
inc
arpl
mov
leave
imul
or
insl
movsl
cwtl
mov
dec
jmp
outsl
jns
dec
sarb
in
gs
inc
push
and
xor
sub
inc
out
xor
sub
inc
mov
out
repnz
inc
sbb
mov
lock
clc
xchg
js
adc
iret
adc
add
inc
mov
and
sub
mull
movsl
sbb
imul
add
jbe
ss
xchg
scas
repz
out
dec
lret
add
pop
icebp
lret
aad
push
popf
and
push
and
xor
adc
pop
mov
mov
int3
mov
push
cwtl
sub
add
je
fstl
divb
pop
sahf
repz
movsb
fbstp
jge
fimull
outsl
or
inc
out
fs
roll
into
xchg
and
mov
and
call
mov
mov
and
test
aas
dec
fcomi
adc
add
push
imul
sbb
cmc
mov
jge
out
aaa
jae
arpl
std
les
jp
cmp
sbb
shl
dec
jp
mov
out
or
test
repz
xchg
jge
dec
or
dec
adc
cmp
rcll
cmp
jbe
pushf
jbe
inc
xor
dec
push
push
adc
mov
cmp
fldenv
push
add
pop
push
lret
pop
sar
mov
mov
or
aas
mov
and
in
pop
adc
test
sti
dec
cmp
or
clc
xor
imul
dec
inc
popa
sub
fadd
bound
shr
xchg
das
mov
inc
mov
cmpsl
push
loope
jo
mov
rcl
jne
je
bound
xor
cmpsl
pop
lds
pop
xor
ljmp
cmpl
or
dec
mov
push
dec
mov
dec
hlt
push
fcmove
inc
pop
stc
testl
cmc
test
mov
pop
lcall
jo
mov
stc
cmp
adc
je
frstor
icebp
lods
jecxz
jg
in
add
sub
push
pop
mov
daa
add
jmp
stos
cmc
mov
pop
test
outsb
in
sbb
mov
es
iret
inc
jecxz
test
clc
outsl
cmc
or
jecxz
dec
aaa
push
je
inc
jae
sub
lret
sub
jns
aam
mov
cltd
dec
jbe
cmp
or
das
mov
int3
xor
fisubl
or
fdivr
roll
lret
loope
scas
mov
adc
sub
sub
mov
sub
test
aaa
lret
push
int
testb
mov
and
fs
push
js,pn
cmp
cmp
mov
xor
cs
jne
addl
dec
lods
repnz
cli
push
jp
into
arpl
aaa
fwait
push
ja
stos
ja
mov
dec
sbb
sub
add
cmp
adc
pop
cwtl
cmp
popl
sub
sub
push
cmpl
inc
in
in
mov
ret
ljmp
loop
shrl
xor
and
bound
pop
loopne
cmp
lock
xlat
jmp
add
imul
jb
adc
aas
dec
sbb
inc
or
fbstp
adc
adc
pop
or
ljmp
push
sub
enter
adc
insb
hlt
pop
stos
mov
inc
rcrl
lahf
loope
mov
cmp
cmpsb
mov
xlat
in
adc
adc
push
inc
inc
mov
inc
mov
lcall
sub
test
jb
repnz
push
pop
mov
sbb
dec
std
clc
sub
cmp
inc
push
jmp
cmp
pop
sbb
push
push
shlb
push
cli
leave
sti
jne
pop
out
aas
sbbb
add
or
mov
iret
and
push
repnz
xchg
shlb
fimull
roll
dec
or
adc
jge
or
mov
mov
mull
iret
hlt
push
jmp
hlt
mov
sti
adc
es
fwait
sahf
repz
jne,pn
js
or
add
dec
mov
mov
cmp
jno
inc
jno
add
lods
pop
dec
aaa
addr16
fiaddl
jmp
scas
inc
movsb
adc
imul
mov
lock
popf
loop
loopne
jl
mov
aam
into
pop
or
sub
jae
in
int
shll
pop
push
and
pop
xor
jns
xor
test
push
mov
inc
sbb
lea
jg
dec
jns
repnz
jne
cld
jno
inc
lods
pop
sbb
or
jnp
rorb
jmp
leave
cmp
xchg
test
mov
ss
es
ss
cmp
pop
nop
xor
and
xchg
shll
addb
mov
sub
int
pushf
xor
js
cmpsb
arpl
sysexit
hlt
mov
test
mov
xchg
and
or
out
mov
mov
push
jg
mov
fistpl
jg
lea
adc
and
mov
sbb
in
and
int
add
sub
addb
push
cmp
pusha
push
sti
out
add
add
test
jnp
ror
aas
xchg
scas
jge
repnz
sbb
cwtl
int3
jg
nop
jne
xchg
outsl
pop
rcrl
push
xlat
jae
cli
scas
pop
fucomip
clc
and
in
push
pusha
add
fstpt
out
negb
leave
mov
les
pop
or
adc
inc
aam
addr16
in
sbb
sahf
push
je
mov
insl
pop
or
test
int
or
inc
movsb
push
sub
in
push
fnsave
aam
push
fdivrs
inc
cmp
ss
addr16
sti
push
out
push
outsl
xchg
mov
imul
out
fbstp
stos
ds
out
movsb
es
ror
fneni(8087
mov
cld
ljmp
push
scas
std
leave
xor
xor
jecxz
mov
movb
dec
add
jns
jb
cmp
cmpsl
push
jge
lcall
and
pop
jle
push
jnp
in
xchg
cmpsl
orl
jmp
xor
lret
xor
sahf
fstps
ror
xchg
das
jae
test
lret
into
out
mull
out
adc
aad
outsb
push
inc
xor
leave
jo
pop
lret
dec
mov
sbb
int3
jae
popf
je
iret
out
jp
push
mov
push
lea
sbb
mov
mov
stos
int3
and
cmp
xchg
movsb
mov
mov
sbb
aad
mov
ret
sahf
leave
adc
sbb
push
in
in
push
fiadds
inc
push
and
dec
cmpl
xor
js
dec
fnstsw
pop
clc
add
add
xchg
mov
mov
adc
sbb
into
xchg
jae
pusha
lahf
cmc
cmp
vpunpckhbw
js
js
push
arpl
xorb
test
sbb
xor
xor
push
test
in
movsb
adc
xchg
push
fwait
in
pushf
xchg
movsb
pusha
jmp
pop
xor
mov
jns
or
or
pop
adc
mov
insl
mov
add
enter
jge
cli
adc
inc
pusha
jne
dec
xchg
mov
pop
xor
test
mov
cld
arpl
pop
dec
sub
out
jp
cmp
xor
test
mov
mov
or
ret
test
inc
clc
pop
aad
cld
int
popf
cmpsb
cmp
dec
adc
bound
cli
dec
leave
inc
mulb
pop
lods
pusha
add
inc
lods
stos
or
dec
or
iret
loopne
add
jae
pop
adc
add
gs
pop
jp
cwtl
cmpb
fs
clc
pop
xor
loopne
mov
cld
xor
and
aaa
xchg
and
push
ja
jecxz
cltd
xchg
xchg
pop
and
jo
daa
leave
in
adc
xor
xchg
loope
out
je
scas
and
es
mov
lock
or
xchg
jg
and
leave
fs
mov
dec
or
pop
cmp
dec
mov
sahf
gs
out
stos
in
push
inc
lds
and
mov
mov
lea
and
xor
push
sub
and
push
out
lods
xchg
jns
cmpsl
ret
push
test
and
in
cmp
xor
aad
aas
cmc
icebp
in
fdivrl
xlat
ret
ja
dec
mov
dec
test
sbb
fwait
inc
and
repz
outsb
shll
add
jno
mov
insl
and
mov
rol
popf
add
sub
cs
jecxz
ds
sub
push
pusha
lcall
inc
sbb
xor
mov
mull
mov
sbb
je
rcrb
mov
push
js
fcompl
sbbl
repz
test
push
pushf
ficompl
mov
addl
mov
add
xchg
pop
mov
push
xchg
inc
int3
jmp
setno
sub
and
push
sub
xor
loopne
mov
jnp
dec
ss
push
sbb
inc
add
adc
push
cwtl
call
mov
sti
cmpsb
dec
movsb
pop
pop
and
mov
aas
scas
iret
jecxz
insl
lock
imul
lahf
dec
pop
rcrb
sub
imul
lret
xor
loope
add
cmp
imul
hlt
lea
in
inc
cmpsl
sti
cmp
loop
or
push
xor
int
clc
loop
insb
jbe
dec
adc
sbb
insl
sub
cmpsl
xchg
push
in
add
xlat
pop
clc
mov
ret
repz
inc
adcl
lahf
inc
xchg
outsb
fidivs
dec
pop
mov
jge
mov
out
leave
push
dec
pushf
jns
jnp
cwtl
test
xchg
inc
pushf
shlb
xchg
pop
cmc
pop
jp
scas
out
sbb
enter
mov
test
shl
cmp
dec
mov
adc
shlb
adc
jo
xchg
add
inc
mov
ret
mov
add
outsl
fcmovbe
enter
clc
lods
push
pushf
pop
add
pop
or
cs
rclb
pop
test
inc
mov
in
xchg
jg
test
mov
in
pushf
aaa
inc
stc
push
repnz
cmp
xor
or
fs
cltd
lret
mov
dec
add
notl
cmpsb
sub
ficompl
insl
cmovne
or
adc
xor
and
add
sbb
sub
adc
lock
arpl
xor
cmp
mov
rorl
jmp
xor
xorl
lock
jno
push
orb
cmpsl
dec
pop
mov
and
jg
pop
inc
fisubl
push
aaa
mov
pop
lret
es
fistl
xchg
insl
and
movsl
inc
jb
push
pop
push
xor
push
mov
scas
pop
or
dec
scas
jecxz
and
mov
or
mov
stc
sbbb
mov
jnp
int3
cmpsl
je
mov
rclb
aam
popa
mov
in
pop
mov
sub
aas
jae
addr16
pop
dec
inc
push
or
stos
mov
test
sahf
sbb
jo
sub
cmp
leave
dec
jl
push
push
outsb
push
shlb
das
pop
jns
test
cmp
xor
outsb
popf
or
es
icebp
push
mov
out
shlb
xchg
stc
je
xor
dec
pop
mov
pop
dec
lahf
pop
leave
cmp
imul
and
lret
add
stc
xor
lock
inc
sbb
sbb
inc
lods
dec
mov
movsb
mov
dec
decb
or
icebp
sub
icebp
test
sbb
push
push
sbb
subb
xchg
shlb
mov
pop
leave
inc
lods
mov
fucom
data16
movsb
shl
dec
shr
cmpsb
inc
pop
int
adc
add
inc
xchg
xor
inc
negb
lea
dec
mov
mov
lahf
push
rorb
imul
mov
mov
adc
xor
dec
jle
int3
movsb
popa
fbstp
sahf
notb
stos
loopne
out
je
cltd
mov
jo
sbb
add
bound
inc
call
nop
add
cmovb
inc
shl
das
arpl
xchg
push
mov
adc
xor
mov
sbb
pop
sub
lcall
cwtl
mov
mov
mov
sbb
lret
or
test
out
pop
adcb
enter
stos
mov
adc
jge
sub
sar
loop
adc
or
xchg
in
mov
mov
test
cmpsl
cmc
repz
lds
and
mov
aad
lea
loope
gs
mov
fdivs
jae
xchg
je
lahf
iret
fdivr
dec
rcll
jnp
add
es
jne
cmpsb
jp
dec
and
cmp
mov
jbe
xor
sbb
cmp
mov
mov
jecxz
out
mov
dec
call
js
cltd
mov
dec
jns
fmul
fdiv
subb
mov
and
pop
scas
or
nop
dec
std
adc
cs
rorb
fidivrl
sub
jo
xor
fwait
push
es
scas
add
add
into
xchg
mov
jmp
movsb
lcall
sti
mov
gs
sub
cmpsl
adc
mov
cs
adc
clc
ficoml
cmp
mov
mov
xchg
gs
in
cld
aad
and
cmp
fisttpll
test
iret
scas
pusha
cmpsb
adc
sahf
push
loop
push
js
xor
pop
mov
mov
push
push
jecxz
test
jle
test
repnz
arpl
into
mov
loopne
mov
in
mov
scas
jno
adc
out
rolb
cmpsb
pusha
or
xor
inc
inc
xchg
mov
sbb
inc
mov
add
mov
adc
push
sub
pop
pop
insl
js
fbld
outsb
xor
aad
scas
sahf
imul
push
stos
cmp
and
dec
pop
sbb
fadd
cmpsb
notl
out
jl
out
je
adc
push
test
loope
xchg
jno
jp
cli
push
lea
in
xor
in
xchg
mov
mov
in
dec
dec
cmp
lahf
or
std
push
cmp
cmp
adc
cmpb
mov
push
dec
in
xchg
in
adc
addr16
lcall
mov
inc
and
fisubrs
add
sbb
out
mov
xchg
and
aad
insl
nop
outsl
xchg
pop
pop
sub
or
mov
scas
adc
sbbb
add
idivl
pop
adc
mov
jbe
dec
push
int3
dec
loop
push
out
int
adc
loop
inc
inc
lods
lods
arpl
fs
push
add
out
aam
loope
ljmp
aas
mov
inc
mov
jo
dec
sti
jns
loope
lods
inc
test
cli
add
xchg
cmpsl
int3
pop
mov
out
sbb
cwtl
test
js
adc
jns
mov
lods
repz
mov
pop
and
std
pop
push
inc
rcl
ss
and
push
jns
sti
mov
shll
hlt
dec
push
stos
addr16
mov
aaa
repnz
mov
push
and
push
decl
push
sub
mov
pop
push
ja
lea
lret
lock
sub
insl
and
mov
in
das
dec
or
push
add
decl
dec
test
inc
jmp
iret
repnz
sub
sub
jecxz
hlt
adc
jno
xchg
aaa
mov
sti
push
mov
cmp
int3
jg
cmp
out
mov
mov
xchg
in
lds
mov
cli
fiadds
insl
std
std
inc
sub
ret
add
sbb
test
sbb
mov
xchg
loope
dec
jae
mov
test
mov
andl
out
ljmp
pop
sub
or
cld
lret
jae
inc
mov
jns,pt
adc
movsb
add
mov
lock
cmc
mov
sbb
adc
ja
pop
arpl
push
mov
leave
fstps
mov
mov
inc
cmp
rcrb
nop
push
add
sahf
les
repnz
mov
and
lods
dec
fcmovu
out
negb
pop
scas
xor
sbb
movsb
mov
xchg
mov
js
ret
test
shll
sub
test
cmp
cmp
mov
btc
shlb
aad
das
cmp
pop
scas
iret
ljmp
pop
adc
cs
or
js
push
sub
or
call
les
pop
sub
stos
pop
push
xor
movsl
mov
push
into
stos
xchg
jecxz
stos
cmc
test
jle
mov
loopne
das
add
cmc
mov
cmp
mov
fistpl
dec
inc
cmpsl
jl
jmp
jmp
xchg
std
pop
cmpsl
inc
dec
jne
imul
push
jne
sub
mov
movb
push
jecxz
or
push
push
inc
adcl
jbe
add
xchg
mov
mov
and
iret
mov
decl
in
push
mov
jns
in
gs
cmpsb
sbb
lds
call
in
jp
jl
mov
mov
add
sbb
add
lds
adc
aaa
pushf
decb
push
jne
es
mov
jns
xchg
pop
inc
shl
sub
arpl
jl
inc
jne
icebp
lods
mov
repnz
out
or
mov
mov
xor
cmp
and
test
popa
lods
or
sahf
dec
shrb
dec
imul
jns
scas
lcall
popf
and
flds
push
jo
shlb
xchg
push
js
mov
or
imul
adc
cltd
and
xchg
mov
repnz
push
ret
je
mov
lahf
xchg
push
dec
stos
xchg
add
push
sub
imul
jecxz
mov
xchg
orl
out
lahf
pop
and
rorl
out
lahf
or
dec
std
hlt
or
lcall
add
xor
sbb
leave
popf
push
out
cmpsb
adc
int3
xor
adc
sbb
aas
xchg
pop
lea
scas
cwtl
les
stc
and
bound
lods
into
loope
mov
cmp
ss
loope
xor
daa
data16
pop
repnz
lret
and
jl
add
inc
mov
dec
pop
test
lret
push
xchg
lahf
adc
scas
push
scas
arpl
push
add
cs
dec
sbb
inc
jae
stos
jb
cmp
setle
les
notl
cmp
stos
add
es
jno
and
enter
cltd
or
mov
sbb
xchg
int3
jg
dec
dec
arpl
popf
pop
mov
sbb
das
mov
pop
pop
shr
fiadds
les
ja
fidivrl
adc
dec
mov
jp
cltd
insb
ss
jp
mov
cmc
shlb
add
adc
shll
outsl
in
icebp
js
ret
jmp
mov
addr16
mov
inc
ror
push
mov
sbb
xor
pop
mov
dec
xchg
jge
mov
xor
add
call
cmp
or
arpl
mov
and
movsl
scas
sub
fdivl
insl
mov
mov
daa
fdivrs
push
or
sbb
xchg
or
or
pop
test
lods
fwait
in
mov
push
aad
push
cmp
and
adc
daa
mov
cmpsl
movsb
out
mov
mov
fstps
mov
rcrb
call
pop
lea
xchg
push
jg
adc
jbe
lahf
fwait
in
fisubrl
cmc
out
pop
pop
cmpsl
jmp
mov
mov
shlb
sub
or
or
aas
and
pop
mov
fsubrp
jge
jae
dec
xchg
pop
ljmp
stos
mov
lods
out
jmp
xchg
aad
push
out
xchg
inc
push
stc
in
push
movsl
xor
fldcw
in
sub
jge
daa
insb
or
lods
clc
call
dec
mov
inc
daa
jle
addr16
push
scas
int3
out
clc
sub
jne
inc
call
and
cmp
add
sub
fsubl
and
iretw
push
into
push
cs
fidivrs
add
movsb
xchg
adc
pop
aad
push
jmp
popa
push
cltd
push
push
adc
inc
mov
ret
ficoml
mov
fnstcw
lret
imul
mov
fildll
data16
lcall
ds
or
ljmp
lds
fs
push
shrb
pop
repnz
xchg
mov
or
sti
pop
sarl
out
stos
cs
lods
hlt
scas
pop
mov
sub
sbb
iret
lods
mulb
das
ja
mov
lods
jle
test
mov
jbe
js
sti
xchg
es
xor
in
fs
push
add
inc
out
sub
mov
xchg
lods
in
and
and
adc
sub
sbb
push
hlt
addb
fs
sbb
and
mov
test
lods
sbb
cmp
outsl
pusha
and
stc
xchg
std
push
push
pop
or
mov
popf
push
cli
lret
mov
mov
pop
bound
and
aam
mov
ljmp
ret
fnsave
mov
pop
sbb
or
insl
xchg
cmp
pop
aam
xlat
mov
jge
scas
lea
sub
mov
add
push
jne
fistpl
fst
jp
sahf
xchg
int3
addr16
pop
add
fs
enter
mov
or
push
mov
orl
testb
add
adc
jecxz
push
out
jmp
mov
mov
pop
push
lea
pop
insl
pop
call
dec
sbb
pushf
adc
cmp
pop
cs
sub
mov
mov
push
loop
cld
aaa
mov
jg
mov
pop
pop
std
js
jb
arpl
push
xchg
loopne
mov
dec
xchg
negl
push
sub
cli
mov
jmp
adc
je
adc
xchg
add
pop
cmp
push
adc
inc
mov
sbb
mov
push
xor
testb
mov
test
xchg
fdivs
fists
sbb
loopew
xorb
push
add
sbb
test
jg
testl
lcall
inc
loope
sbb
or
mov
xor
and
mov
dec
mov
movsb
sbbb
adc
and
cs
jp
mov
fld
aas
orb
loopne
pop
sub
pop
stos
fidivs
ret
pop
cs
addl
xor
or
adc
aad
out
xor
pop
das
dec
nop
push
mov
push
inc
dec
adc
fdivr
dec
fwait
sbb
or
and
lret
mov
and
and
push
jg
xchg
ja
cmpsb
add
rorl
lea
clc
insb
insb
mov
lock
sahf
lret
out
sub
cmc
cld
out
sub
mov
cs
fcomp
addr16
leave
push
mov
sbb
loope
lret
pop
fwait
stos
in
out
jmp
add
push
mov
jp
mov
jns
cmp
hlt
mov
mov
mov
daa
fsubs
inc
rorl
inc
pop
adc
test
orb
inc
cmpsb
test
pop
pop
mov
pop
pop
dec
xchg
js
sti
sub
or
xchg
mov
test
sti
mov
test
loop
mov
push
cli
mul
rcrl
or
ret
dec
jle
outsb
call
cli
mov
push
in
adc
jecxz
xor
fsub
cli
js
mov
push
movsb
jns
mov
iret
cwtl
sbbb
pop
sbb
cmp
pushl
xchg
orb
sbb
push
loop
es
add
pop
sub
daa
cmp
add
add
mov
jmp
or
add
xor
sti
jne
jbe
lds
fistpll
orl
push
outsb
int
dec
fdivrs
sub
push
into
inc
hlt
rcr
enter
xchg
cmp
mov
dec
imul
addl
cmp
sbbb
add
mov
lods
pop
add
icebp
cltd
shl
repnz
pop
and
or
aad
sub
mov
sub
icebp
hlt
popf
sub
int
int3
xchg
clc
mov
push
lret
xor
lcall
scas
xlat
pop
adc
mov
enter
mov
or
cmp
cmp
mov
icebp
fidivs
or
pop
scas
and
xchg
xor
mov
sbb
fldenv
jecxz
sti
aam
and
xchg
jae
fidivrl
inc
mov
out
mov
orl
push
push
sbb
aaa
add
push
repz
aad
inc
insb
stos
push
hlt
out
mov
sbb
pop
pop
add
aam
int3
aaa
pop
push
mov
dec
test
shlb
mov
sbb
jecxz
mov
ss
ds
xor
cmp
jecxz
sub
push
and
pop
xlat
xor
bswap
scas
sub
pop
push
scas
pop
push
enter
mov
push
mov
pop
mov
out
or
push
inc
jge
imul
push
fistl
gs
inc
cmp
stos
cld
outsl
stos
xchg
mov
std
push
cld
cmc
dec
xchg
inc
es
push
loopne
movsb
xor
and
std
mov
cs
xor
movsl
xor
xchg
or
sub
popa
jg
xchg
into
push
mov
mov
sti
adc
sahf
lret
fwait
cltd
mov
aam
mov
repnz
jno
cmp
push
andl
push
das
mov
out
dec
bound
adc
dec
insl
xchg
ret
jbe
daa
sbb
inc
fbstp
fld1
les
shlb
jge
mov
mov
test
mov
pusha
pushl
inc
enter
push
adc
rcll
jge
mov
push
arpl
add
int
mov
dec
mov
pop
repnz
divl
mov
sub
mov
cltd
add
inc
aaa
push
cmp
mov
es
loope
or
push
cltd
lock
and
int
in
sbbl
mov
sarb
mov
mov
hlt
and
inc
inc
bound
in
adc
mov
sbb
mov
cmp
adc
mov
xor
mov
jo
adc
pop
daa
dec
pop
dec
cltd
xchg
xor
xchg
divl
sahf
out
mov
pop
ret
cld
stos
test
repz
cs
imul
dec
push
mull
jmp
andb
rorb
pop
popa
and
lods
and
or
cld
decl
popf
sbb
sub
sti
or
leave
stos
shll
jl
dec
sbb
jne
add
inc
add
out
iret
adc
nop
sub
mov
stos
adc
rcr
sbb
ljmp
dec
sti
and
pop
aaa
jae
in
fnstsw
stos
lods
dec
sti
sub
jecxz,pt
addr16
mov
shrb
arpl
adc
fwait
xchg
add
xchg
inc
movsb
dec
js
or
imul
cmp
rol
shll
ret
cmp
or
sbb
dec
loope
sbb
aas
pop
and
pop
xchg
dec
lods
bound
test
push
adc
mov
fsts
popa
scas
xchg
es
cmp
cs
js
gs
inc
mov
ret
clc
lcall
adc
and
jecxz
sub
imul
ret
push
mov
je
in
mull
ljmp
call
jnp
jo
fisttpll
xor
mov
pop
mov
push
jno
mov
xor
xchg
cmp
movsb
push
mov
int
outsl
mov
aas
mov
insb
leave
sbb
push
imul
pop
jne
iret
movsb
jmp
xor
and
in
loope
leave
sbb
repnz
push
out
mov
jmp
roll
adc
push
movsl
mov
cmp
adc
xchg
sbb
les
out
sti
mov
cltd
pop
adc
cmp
cli
jmp
sbb
push
sbb
gs
ds
and
aam
push
jmp
out
mov
pop
mov
mov
push
mov
ljmp
jno
push
cmp
rcll
jg
adc
outsl
sbb
sub
rcrb
and
mov
or
stc
mov
leave
repz
or
mull
xlat
push
in
pop
bound
popa
push
and
sub
dec
mov
ja
js
shrb
sbbb
inc
mov
add
sbb
dec
jae
fidivs
mov
push
jp
popf
jns
stos
mov
shlb
icebp
or
scas
pop
rcrb
adc
mov
gs
mov
ljmp
and
cmp
lret
dec
testl
adc
mov
fists
out
in
pop
sub
movsl
mov
pop
adc
ss
cmc
xchg
mov
aaa
lret
inc
ret
scas
mov
mov
enter
lds
jns
into
xorl
mov
or
dec
xor
andb
mov
imull
adc
dec
aas
push
shll
mov
push
dec
mov
mov
cmc
xchg
pop
pop
sbb
scas
sti
xor
push
jecxz
jnp
aaa
cwtl
mov
cmp
cli
sbb
shl
push
outsl
mov
sub
dec
xor
push
aas
cmp
push
dec
ret
push
jne
stc
pop
push
cmp
cld
pusha
and
leave
repnz
sbb
jle
stos
and
jnp
mov
mov
and
stos
in
cli
sbb
pop
test
outsb
sbbb
aaa
sub
push
jle
dec
ret
xlat
jbe
add
inc
cmc
mov
outsb
int3
frstor
adc
xchg
push
roll
push
ja
xchg
jbe
sbb
movsl
loope
mov
xor
or
push
mov
jle
lret
jle
std
mov
pushf
out
daa
jb
inc
lds
sbb
inc
lods
rorl
jae
lds
sahf
callw
adc
rep
add
popf
adc
lock
push
call
std
call
push
mov
push
or
loopne
les
call
mov
dec
iret
lahf
fwait
fwait
in
xchg
out
addr16
lcall
imul
int3
dec
mov
cmp
sahf
mov
leave
outsb
mov
and
lods
pop
add
xchg
out
imul
xlat
add
repnz
mov
jle
add
sbb
ret
jno
mov
sub
cmp
std
mov
fcomps
or
mov
add
or
inc
pop
fiadds
xlat
sbb
and
cmc
mov
outsl
push
xchg
xor
sbb
int
bound
mov
mov
xchg
movsl
mov
mov
pop
cli
pushf
lret
mov
jno
and
ret
sahf
pcmpeqw
mov
inc
dec
shrb
loopne
fadd
dec
stos
jl
roll
jbe
ret
shll
pop
sti
sub
dec
push
cmp
mov
push
insb
xchg
rcrl
mov
pop
adc
adc
andl
shll
inc
xor
push
push
jmp
pop
push
clc
int3
mov
movsb
cld
pop
sbb
push
in
in
and
or
rcll
xlat
ss
out
imull
inc
and
inc
fld
inc
shll
cli
jo
pop
repnz
adc
out
lcall
mov
mov
mov
mov
js
xor
imul
and
push
lods
mov
gs
cmpl
or
fsubrl
addr16
mov
sbb
ds
and
xchg
rol
sahf
or
mov
popf
sbbb
jbe
mov
or
jmp
or
stos
cmp
jae
dec
in
test
rcr
sub
leave
dec
mov
push
push
jl
inc
inc
fwait
mov
sub
or
pop
aas
mov
push
movsb
testl
inc
jb
adc
jne
mov
aaa
jo
lock
cltd
inc
movsb
sbb
push
add
push
daa
sub
jb
adc
jae
jle
cli
insl
jbe
push
fcompl
pop
pop
out
ljmp
pop
adc
insb
call
push
fwait
pmaxub
push
fbstp
pop
push
dec
pop
in
cwtl
pusha
ja
subl
mov
jnp
dec
aad
mov
pop
ds
setb
xor
add
inc
repz
mov
inc
enter
inc
jo
jno
sahf
mov
pop
repnz
cmp
lret
dec
mov
pushf
mov
cld
scas
push
mov
jo
push
jmp
shrb
cmp
push
sbb
mov
cmpsl
mov
ja
cmp
aad
mov
lock
add
xchg
cmp
dec
pop
daa
pop
lods
adc
rclb
fwait
cmp
dec
js
data16
mov
int
out
into
ret
leave
cmp
jge
fcmovnbe
adc
gs
es
int
cmp
imul
movsb
lret
cltd
ja
fcmovbe
adc
lret
ljmp
cmp
cmp
sub
xlat
nop
inc
in
ds
cpuid
js
jbe
mov
mov
jnp
pop
push
sbb
ltr
mov
and
pop
sub
sub
adcl
xor
das
out
in
mov
add
movsl
insl
and
icebp
mov
inc
add
jp
add
fists
aaa
ret
addl
xchg
mov
cltd
push
rcll
call
pop
mov
inc
mov
push
pusha
loop
cmc
scas
mov
push
pushf
jns
fsubrl
jbe
and
mov
add
pop
lcall
cmc
ja
dec
fsubs
mov
repnz
adc
mov
jns
push
sub
mov
xchg
pop
addr16
aas
int3
clc
cltd
ljmp
lock
dec
mov
in
mov
push
and
lcall
outsb
pushf
push
mov
repz
test
and
stos
fxch
cld
bound
hlt
lcall
mov
data16
cmp
dec
ds
jo
fcoms
xchg
dec
lret
jns
inc
xchg
cmpsb
add
push
pop
pop
fstpt
pop
xchg
push
add
sbb
cmp
fnstenv
xor
cmpsl
adc
or
cmp
sbb
loopne
xlat
xchg
jne
sti
mov
adc
and
and
dec
ret
jb
sbb
lret
mov
dec
mov
fs
repnz
jno
jl
popf
std
pop
pushf
jmp
dec
les
ss
icebp
xchg
fldl
loop
fcoms
and
test
adc
jb
fldcw
fisttpl
dec
xor
cli
roll
fisubrl
adc
es
jmp
shll
add
sub
in
push
pop
ret
test
or
notb
jmp
sbb
jne
push
mov
mov
nop
mov
mov
push
or
mov
repz
xchg
or
inc
xorb
hlt
cmc
jne
jp
in
pop
ljmp
insb
adc
in
lret
loope
jmp
daa
push
sub
lahf
sahf
push
hlt
mov
enter
cmp
push
mov
cmp
pop
mov
mov
call
nop
mov
lds
pop
mov
in
push
ss
int3
jne
xor
imulb
cmp
movsb
push
xlat
jmp
dec
shlb
xor
dec
sub
leave
add
ficomps
stos
add
out
xor
xchg
or
or
xor
ljmp
data16
mov
iret
je
cmp
inc
incl
shll
cmp
mov
ret
sub
out
in
leave
cmpsb
shr
cwtl
cmp
fs
fdivs
fwait
shlb
sub
mov
fists
pusha
loope
sahf
das
pop
inc
aaa
xorb
into
jle
call
cmp
xchg
mov
in
lret
out
sti
pop
xchg
push
fs
xchg
jbe
pop
js
jg
sub
sub
mov
inc
sbb
jb
push
cmp
lcall
inc
sub
stos
mov
adcb
dec
mov
enter
outsl
pop
xor
icebp
call
xchg
aaa
xchg
cwtl
and
dec
insb
pop
pop
or
dec
test
sub
xchg
mov
shlb
adc
mov
call
jno
scas
push
dec
cld
pop
inc
sub
data16
pop
adc
xchg
jp
sbb
sbb
es
sub
mov
inc
movb
mov
repnz
or
lods
repnz
or
xchg
xchg
cli
dec
insb
or
out
sub
or
mov
lock
push
xchg
mov
jp
jl
pop
jg
or
xchg
js
sahf
jne
subl
loopne
imul
jl
jns
cmp
xor
sbb
sti
mov
lock
mov
jl
add
or
arpl
push
or
xor
cltd
leave
push
sub
mov
fs
lcall
ja
test
cmpsb
dec
jl
add
jb
les
mov
dec
dec
inc
cwtl
subl
subb
pop
pop
cwtl
xchg
sbb
or
jnp
jge
fistpl
sub
xchg
les
and
sbb
pop
in
sbb
les
xor
sbb
push
popa
js
bound
mov
and
loope
jp
xchg
xor
rorb
cmp
jnp
fsubr
addr16
xlat
insb
imul
mov
cmp
jb
in
jne
or
sub
sti
ret
decl
push
pop
adc
repnz
xor
outsb
cld
pop
adc
or
pop
cmp
arpl
mov
jecxz
in
js
mov
xchg
std
mov
mov
les
push
or
fisttpl
out
mov
shll
mov
jle
xor
sbb
inc
inc
int3
subl
lahf
fisubrs
xchg
mov
lcall
fbld
int3
fidivl
xchg
pop
loopne
in
ja
pop
por
test
xchg
mov
push
jo
mov
sbb
jb
jmp
pop
or
test
mov
fsubr
jns
in
test
hlt
push
inc
or
sbb
test
fmuls
add
sub
xchg
sbb
mov
lret
mov
mov
pop
int3
hlt
mov
xchg
loopne
jmp
jp
sub
es
push
sbb
sbb
push
fmull
mov
mov
or
roll
xor
sti
fdivr
mov
push
push
xchg
xchg
xor
sbb
push
pop
jo
mov
jp
pop
pop
xor
in
std
pop
or
rep
outsl
mov
cld
mov
pop
mov
mul
push
daa
lret
mov
daa
cmpsb
sub
dec
dec
and
sub
xorl
add
mov
addr16
mov
cltd
lahf
mov
pop
std
int
xlat
insl
mov
scas
mov
mov
mov
sub
test
mov
mov
mov
push
sub
jae
out
sahf
lock
or
push
lds
pop
inc
jno
test
std
sub
and
mov
daa
stos
jno
fs
mov
aam
insb
sbb
mov
mov
hlt
loop
and
dec
iret
pop
pop
xorb
mov
stc
sti
jae
lock
sub
push
sti
fs
lock
out
xor
sbb
cmp
mov
xchg
mov
push
js
or
pop
pop
in
ja
cli
mov
mov
push
mov
pop
add
inc
push
adc
jbe
mov
mov
adc
cltd
or
aam
adc
and
adc
mov
cmpl
xor
enter
pop
dec
jb
cmc
fmul
sub
icebp
jbe
xor
movsb
mov
lcall
lock
shlb
icebp
into
jns
outsb
pop
cwtl
movsl
cmp
mov
out
les
mov
or
or
outsb
or
sub
mov
and
inc
rcrl
mov
and
mov
or
outsb
stos
and
mov
xor
repz
adc
nop
jge
mov
mov
movsb
push
mov
inc
push
addb
rcll
jne
scas
pop
fsubr
in
cmp
xlat
push
jl
add
in
or
das
outsl
push
fimull
dec
sub
mov
clc
lea
jo
mov
mov
or
ror
mov
push
scas
add
push
dec
mov
roll
mov
imul
mov
pop
lahf
loope
cmpsb
outsb
mov
mov
inc
loope
add
std
sarl
int
sbb
in
test
xchg
fcmovne
mov
ret
movsb
jnp
decl
repz
fimuls
aaa
lret
jle
or
mov
addb
jg
or
fdivr
cmp
add
dec
pushf
sbb
scas
adc
dec
sub
mov
xchg
dec
cmp
fldenv
cs
inc
data16
in
push
out
scas
out
mov
push
jo
sub
dec
add
cltd
xchg
mov
sub
xchg
aas
das
rcr
fs
mov
addr16
jbe
xchg
pushl
adc
out
es
insb
rcrl
shrb
dec
adc
pop
bound
repnz
dec
aam
and
add
sbb
push
jmp
rcll
adc
js
inc
es
pop
push
lods
sbb
sbb
out
daa
pop
cmp
xchg
cmp
into
mov
insl
imul
jb
out
sub
pop
cli
inc
jo
movb
int3
loope
jo
in
das
mov
push
fidivrs
mov
rcrl
insl
inc
add
push
mov
vmovq
lea
mov
test
dec
push
cmp
fisubrl
call
iret
movsl
fcompl
dec
subl
mov
fnstsw
dec
adc
cld
mov
lods
pushf
addr16
cwtl
and
mov
cmpsl
mov
push
mov
sub
fisttpl
lods
xor
cmp
rorl
cmpsl
dec
cmp
enter
addb
fwait
js
cmp
and
sbb
cmpsb
stos
xchg
mov
stc
sbb
adc
push
xchg
pushf
push
xor
insl
fdivl
or
sub
int
loop
mov
movsl
xchg
xchg
sbb
stc
jp
xchg
out
or
test
pop
mov
fwait
push
ja,pn
lods
jo
inc
daa
cld
aaa
and
push
inc
in
lret
mov
inc
xchg
subb
jb
xor
insb
mov
clc
aaa
stos
dec
jbe
sbb
and
mov
nop
lret
int
je
leave
push
stos
mov
inc
pusha
data16
imul
mov
ljmp
leave
dec
and
adc
sub
sub
sbb
mov
into
mov
jo
cmp
shlb
out
out
pop
xor
add
sub
es
orb
js
mov
sbb
xchg
loope
or
lods
or
test
push
sbb
and
or
and
fld
repnz
inc
push
ja
fisubrs
cmp
fmuls
xor
movsb
lods
addb
xchg
outsl
or
mov
dec
or
ret
inc
stos
jle
xchg
addl
push
xchg
sbb
sarb
lcall
or
dec
stc
or
ffreep
std
sbb
add
cltd
push
inc
pop
js
mov
mov
shr
cltd
ja
loope
mov
testl
sbb
xchg
push
mov
in
inc
fwait
dec
jb
xchg
pop
mov
and
clc
push
fists
cltd
dec
scas
jno
mov
cmp
cwtl
jmp
sub
imul
mov
push
add
dec
ret
adc
mov
xchg
inc
loope
shll
mov
lods
aad
lret
or
jnp
push
mov
cmp
pop
es
mov
leave
add
imul
popa
repnz
ficompl
pop
in
sbb
int
dec
push
in
push
mov
or
mov
xchg
mov
cmc
fldcw
dec
cltd
cwtl
shl
inc
dec
aaa
add
cmp
ret
add
xor
push
pop
lret
xchg
cltd
dec
sbb
sbb
xchg
xchg
popa
inc
cmp
adc
dec
and
out
mov
jl
push
outsb
lahf
cmpsl
imul
out
push
fistpll
cmp
jle
mov
mov
adc
inc
lret
les
pop
adc
inc
or
pop
imul
in
or
sub
out
inc
push
xchg
js
xchg
mov
lea
push
cmc
test
adc
std
ss
ret
sub
jg
jo
jae
pop
stc
jg
dec
in
scas
ds
inc
jno
in
lock
push
add
shrl
in
aam
lret
ja
pop
xchg
mov
cmc
shlb
ljmp
or
daa
xchg
add
pop
pop
dec
adc
mov
aaa
push
in
push
xlat
insb
jl
pop
popl
lret
cmp
ficomps
les
ret
add
xchg
je
jnp
mov
jp
clc
clc
lea
inc
ja
outsb
fs
and
pop
outsb
xor
js
inc
xor
push
negl
popa
shll
pop
test
push
add
rorb
daa
inc
pushf
jns
mov
fptan
pop
adc
mov
sub
mov
js
bound
pop
push
mov
dec
dec
mov
inc
adc
mov
xchg
movsl
sbb
movsl
cld
sub
adc
xchg
ret
or
or
jne
push
xor
das
loop
cmp
lea
data16
push
inc
cmc
pusha
push
addb
add
adc
inc
cmc
push
mov
sub
shrb
arpl
jge
sarb
cmp
fnstenv
mov
aam
nop
pop
popf
mov
push
sub
jmp
int3
cmp
pop
repnz
xlat
inc
cmp
dec
mov
enter
sub
sbb
inc
es
cmp
fdivl
aas
mov
popf
xchg
pusha
pop
stos
rcrl
mov
pusha
jp
fstpl
in
and
in
outsb
rcrb
mov
mov
cmp
lods
cmp
sbbb
call
scas
adc
rolb
bound
popf
cmpl
ret
call
add
or
sub
test
mov
or
in
test
mov
stos
xchg
jae
add
rolb
cltd
cs
inc
insl
inc
je
lahf
mov
test
int3
mov
pusha
shll
icebp
fmuls
sbb
lea
cmp
pushf
arpl
in
cmp
scas
and
lock
shl
dec
dec
xchg
dec
fs
mov
mov
push
test
pop
xor
inc
std
lea
ret
movsl
rcl
or
adc
sub
push
es
aas
clc
fisttps
data16
andl
jb
ljmp
xchg
pop
mov
out
icebp
inc
push
jle
jmp
ljmp
mov
scas
cltd
add
jecxz
cmp
cltd
lahf
cmpb
lds
test
mov
movsb
mov
jl
mov
pop
movsl
and
bound
incl
sub
mov
push
cmp
std
jmp
dec
ficompl
int3
fsubrl
push
xchg
stos
push
and
dec
stos
int3
cld
cmc
jge
sbb
std
jo
jne
loopne
xlat
pop
inc
xchg
into
or
pop
or
icebp
loop
push
jnp
push
outsb
cld
sbb
mov
push
dec
lds
adc
inc
push
dec
dec
add
leave
jae
sub
jno
pop
pop
cmpsb
dec
adc
push
push
fs
stos
movsl
cmp
cli
mov
addb
scas
mov
cmp
or
push
aam
cmp
mov
lret
rcll
addr16
pusha
lds
es
push
adc
push
popf
inc
jnp
rcrb
xor
dec
ja
xor
inc
lcall
popf
mov
mov
xchg
adc
jnp
push
ret
cmp
inc
nop
leave
mov
push
inc
xor
mov
jo
pop
push
lcall
xor
mov
xchg
sub
dec
push
mov
shlb
and
sti
mov
add
mov
stos
pop
xor
mov
add
inc
ror
ret
lahf
pop
add
in
add
movsb
rclb
xchg
mov
push
mov
int3
jo
stos
jl
and
mov
mov
mov
mov
shll
push
icebp
push
push
test
lea
mov
sbb
gs
daa
neg
push
clc
addr16
xchg
divl
cmp
test
popa
sub
push
shll
ret
sub
push
mov
cwtl
icebp
cmpl
mov
mov
sbb
mov
mov
daa
jns
mov
insb
daa
mov
inc
icebp
dec
push
mov
std
rcll
fstpt
shrb
adc
aaa
pop
scas
xchg
bswap
pop
int
inc
outsl
xor
outsb
sub
lods
outsb
mov
lret
dec
inc
push
push
push
add
ss
or
hlt
mov
insb
repz
nop
mov
insb
add
sbb
xchg
and
hlt
xor
mov
out
ret
xchg
imul
nop
jnp
jmp
cmp
jne
jle
pop
loop
sub
jne
push
imul
ljmp
sub
fs
mov
popa
add
pushf
xor
or
je
mov
jg
movsb
and
shlb
push
gs
insb
shlb
inc
in
movsb
mov
fld1
je
rcr
lock
mov
mov
adcl
sarl
pop
or
movsb
fs
xor
inc
pop
movl
pushfw
int3
adc
inc
xchg
call
jl
and
loopne
inc
rorl
stos
mov
pop
ret
rcr
shll
pushf
cmp
xchg
adc
sub
cmp
or
jge
jns
movsb
sbb
dec
xchg
ss
jb
rcrb
in
mov
or
adc
insl
das
mov
jecxz
test
shll
ljmp
lret
ds
and
dec
mov
push
jmp
adc
popf
xchg
icebp
cmpsb
mov
push
add
xor
or
xchg
pcmpgtb
outsl
mov
mov
inc
test
mov
xchg
push
or
cwtl
ds
xchg
mov
out
mov
inc
rcrl
mov
insl
or
push
mov
enter
cmpsb
cmp
test
pop
fiadds
lods
dec
outsl
push
jle
jmp
dec
les
adc
mov
cltd
imul
inc
loopne
sub
test
mov
mov
arpl
mov
adcb
or
out
xor
and
ja
mov
fnsave
fistpll
pop
inc
int
popa
push
aas
cs
lods
pop
loope
mov
or
mov
jp
cltd
movsb
sbb
sbb
sub
es
push
inc
pop
subl
dec
mov
inc
or
sbb
frstor
add
dec
mov
stos
movsl
scas
cltd
ds
and
xchg
sbb
xor
scas
sbb
stos
ljmp
arpl
dec
mov
je
lcall
stos
mov
paddw
repz
scas
jb
dec
pushf
or
cmp
and
stc
push
jb
cs
push
pop
cmpsb
mov
xchg
ljmp
outsb
jmp
nop
xchg
and
sub
aaa
outsl
fidivrl
ret
std
sbb
jns
flds
mov
cmp
mov
sub
in
inc
xchg
jecxz
pop
pusha
out
scas
mov
fwait
outsl
dec
push
cmp
outsl
or
xchg
pusha
jnp
das
cli
je
dec
in
push
fisubl
mov
cmp
xor
xor
xchg
mov
pop
incb
sub
jno
fildl
mov
pusha
push
pop
ror
lods
mov
mov
out
sarl
scas
repnz
pop
pop
cmpb
ljmp
divb
js
jle
sbb
dec
fs
or
dec
lods
push
icebp
mov
xor
call
and
add
dec
sub
push
lock
sti
inc
push
leave
fisttpl
fdivl
in
fsubr
mov
pusha
dec
cmp
mov
loope
mov
lcall
jo
lea
add
mov
xlat
pop
fs
sti
sub
mov
push
mov
out
pop
clc
fnsave
pusha
and
and
add
js
or
les
movsb
addr16
out
adc
frstor
jge
in
fnsave
mov
loop
stos
xor
loop
jne
add
test
fsts
jl
or
xchg
shrb
sbb
jae
cltd
mov
inc
cmp
mov
pop
jp
push
lcall
stos
nop
daa
adc
lcall
inc
push
sbb
push
xorl
out
xchg
jle
inc
push
cmp
lods
jnp
sbb
popa
and
xor
and
sbbb
dec
ficoml
addr16
cmp
movsl
dec
pop
test
push
aaa
push
mov
loop
les
clc
and
mov
mov
jle
outsb
out
nop
xor
and
arpl
push
test
push
movsb
das
mov
adc
xor
pop
cltd
xor
cwtl
push
outsb
subb
movsb
xchg
xchg
imul
xchg
adc
dec
dec
into
jmp
xor
and
push
xchg
scas
nop
pop
sti
sbb
loopne
xchg
lods
mov
inc
xor
in
fiaddl
fistpll
cmc
enter
std
stos
lret
mov
xor
and
mov
lds
push
push
lcall
pop
push
mov
aaa
sub
push
dec
orb
sbb
push
into
sbbb
ffree
leave
hlt
icebp
push
push
mov
cmp
fdivl
pop
inc
and
and
and
push
sub
ret
dec
fildl
cmc
xor
cs
out
imul
pop
sarb
mov
decl
jecxz
and
mov
lahf
ds
jb
xor
ja
je
pop
sbb
aas
loop
add
sbb
pop
jne
cmc
mov
adc
lret
cmc
in
jnp
add
inc
lret
sub
dec
jl
mov
jge
push
loopne
sub
dec
lock
int3
iret
dec
cmp
popf
and
stc
ja
push
push
xchg
xor
mov
mov
inc
fdivs
push
out
xchg
je
add
jle
sub
push
fistpl
pop
xor
mov
xchg
sete
sub
and
pop
push
aam
sbb
push
scas
movsb
les
inc
lcall
out
sahf
and
lret
jo
or
clc
cli
jo
mov
add
cwtl
push
daa
or
sub
jo
ja
aam
mov
mov
jp
adc
dec
shl
sbb
lods
or
stos
pop
jmp
pop
movsl
xchg
lock
or
cmpsb
fs
mov
xchg
ss
or
push
ficomps
xchg
leave
mov
pop
sbb
and
add
scas
lock
xchg
inc
movsb
inc
test
push
fcompl
gs
icebp
cmp
jb
cmp
ss
push
adc
stos
addb
inc
and
aas
jp
pushf
mov
mov
xchg
insl
dec
jg
pop
pusha
fs
and
mov
adc
lret
mov
out
aas
cmp
inc
push
jbe
fdiv
popa
fwait
insb
push
clc
sub
mov
or
adc
mov
jae
pop
jo
iret
scas
adc
jl
pop
hlt
pop
int
jle
push
mov
mov
sbb
movsl
pop
jg
dec
cmp
dec
mov
outsl
xchg
stos
xor
sbb
jge
mov
stc
and
mov
inc
ficomps
rep
or
aas
fs
adc
or
repnz
sahf
dec
repz
icebp
fcmovb
outsl
mov
xchg
ds
enter
test
lcall
or
mov
test
xchg
lds
iret
popf
add
inc
adc
loop
push
jb
scas
inc
pop
popa
add
stos
push
fistpl
add
cs
push
add
xchg
scas
sub
mov
and
inc
insl
jmp
nop
testl
add
pop
mov
mov
gs
and
das
jo
jecxz
repnz
out
ret
sub
into
pushf
lds
movsb
popf
fcomps
push
into
nop
scas
movsw
mov
sti
aas
pop
jge
pop
and
js
mov
adc
shrl
jb
pop
outsl
in
add
adc
lahf
fcompl
ja
outsb
in
cwtl
sub
or
xlat
jnp
lret
xchg
orl
insb
loop
js
les
lods
or
sbb
lds
sarl
push
sub
andl
outsb
cmp
sub
jno
pop
gs
repz
sub
or
daa
inc
sub
lock
das
xor
mov
push
dec
test
outsl
jge
int3
fsubp
mov
js
add
fisttpll
dec
mov
out
mov
sbb
sbb
ljmp
jne
dec
cs
jg
popa
in
imul
loope
or
int3
jl
push
and
xor
and
sbb
jbe
mov
mov
mov
je
mov
mov
cwtl
scas
je
xchg
loope
mov
mov
mov
mov
push
cmpsl
add
pop
push
push
pop
adc
mov
outsb
dec
inc
inc
xchg
push
jecxz
adc
mov
and
popf
mov
dec
lret
sti
add
adcb
scas
aad
mov
cmp
in
cmp
lret
popa
jge
pop
cmp
aam
pop
jo
mov
pop
xor
pop
out
rolb
cli
add
jl
push
arpl
lcall
jge
andb
and
xchg
imul
mov
mov
into
stos
pop
jae
add
clc
pop
add
enter
jmp
in
jb
dec
out
mov
or
and
jns
dec
jmp
push
mov
fwait
jge
inc
into
test
pushf
sbb
cwtl
stos
jg
sbb
outsb
ds
cld
jl
cmc
pop
data16
cmc
sub
jno
add
mov
pop
sbb
sbb
scas
dec
out
or
cmp
cmp
dec
and
ljmp
pop
push
mov
fidivs
sbb
inc
negl
pop
pop
adc
and
or
jnp
sub
pop
and
insb
dec
or
or
cli
bts
mov
loope
push
jb,pt
pop
xchg
ss
pushl
and
stos
ret
mov
ljmp
sub
xor
adc
mov
add
lcall
adc
lcall
mov
fsubrl
rcrb
ss
das
or
js
jne
lret
das
inc
fwait
jge
das
popf
xlat
adc
cmp
jbe
pusha
dec
mov
push
add
inc
xor
add
rolb
add
rcrb
push
mov
lret
adc
jp
dec
push
ret
cmp
jno
adc
mov
outsb
outsb
jnp
mov
xchg
ds
mov
add
cmpsb
adc
cwtl
enter
xchg
and
sbb
push
add
jbe
jb
jecxz
mov
jl
sahf
and
push
clc
pusha
mov
pop
mov
sahf
mov
cmp
out
sbb
jnp
sub
std
in
repz
sub
sbb
cmp
ss
xlat
cmpsl
sub
sar
pop
jl
lds
ret
je
or
lret
rorl
cwtl
and
popl
scas
xchg
pop
lcall
and
inc
cmpl
daa
fisttpl
rorl
sub
sub
dec
push
rolb
pop
xchg
int
iret
ret
or
ficomps
lea
es
pop
mov
mov
aad
mov
pusha
dec
mov
xlat
test
pop
sti
sub
rcrb
and
call
cmc
xor
mov
ret
jae
push
sub
jnp
and
loop
into
xorb
push
fidivl
icebp
test
out
adc
jg
sub
cmc
icebp
jbe
ss
shll
jecxz
add
fistl
sbb
cmp
dec
out
sub
cmp
sub
rcll
pop
dec
adc
pop
dec
mov
rcrb
scas
pusha
repz
lock
roll
mov
xor
xor
ret
inc
subb
fldenv
out
imul
pop
mov
loop
ret
pop
fs
scas
jecxz
cmpb
subb
push
push
out
pusha
xchg
or
inc
mov
negl
fs
repnz
mov
stos
filds
fcom
lret
out
xchg
cli
cwtl
cmpsl
push
pop
jb
pop
addr16
dec
push
addl
scas
dec
cmpsb
sbb
imul
push
jns
mov
aas
mov
mov
dec
jnp
sub
push
mov
xlat
js
push
cmp
push
mov
shll
subl
mov
outsl
push
xchg
cltd
add
scas
rclb
pop
pop
adc
test
pop
add
bound
repnz
in
jns
push
add
xchg
push
sub
xor
mov
sbb
lock
pop
sub
jne
setl
sub
ds
inc
inc
push
mov
adc
jb
movsb
dec
dec
and
jge
inc
add
data16
mov
daa
xchg
int
mov
xor
add
push
or
sbb
aad
jge
cmp
in
out
adc
or
popa
scas
or
dec
scas
cltd
xor
mov
pop
imul
fldl
data16
in
or
xchg
mov
shl
or
sbbl
int3
outsb
jmp
inc
pop
sti
add
adc
loopne
jae
loop
div
jns
in
lret
mov
adcl
push
add
into
fisubs
cwtl
push
sahf
sub
or
cmp
push
inc
jnp
or
sub
or
push
inc
clc
scas
fdivrl
pop
cwtl
sbb
jmp
push
js
and
jb
insl
sbb
and
fbstp
push
or
lcall
loop
icebp
bound
sbb
enter
aad
in
push
stos
cli
or
mov
xchg
jne
xchg
rorb
neg
mov
stos
add
stos
fisubrl
and
fildll
sub
and
push
test
xor
in
inc
push
in
push
sar
dec
sti
imul
cmp
and
addr16
test
xlat
pushf
sti
adc
scas
iret
sahf
out
dec
xchg
in
xor
loop
or
fwait
dec
aad
pop
and
ss
lods
mov
aas
mov
or
mov
jae
jb
add
test
imul
mov
mov
and
push
pushf
subb
mov
pop
je
jg
loop
dec
jecxz
cmp
out
push
mov
xor
nop
dec
shrl
jge
mov
out
inc
mov
adc
fidivrs
popa
sbb
mov
in
ds
adc
dec
mov
lods
push
mov
ja
xor
xor
add
mov
stos
inc
jl
mov
movsl
xchg
jp
cs
mov
jnp
rorb
jmp
xor
leave
cmc
ret
insb
xor
paddsw
add
lahf
mov
jbe
gs
shlb
stc
pop
ljmp
sub
out
cmpsb
aas
loopne
test
push
mov
cmp
aaa
push
and
test
jl
cwtl
push
fidivs
xor
and
lcall
std
popf
adc
insl
test
pop
pop
imul
cmp
inc
xchg
bound
nop
ret
pop
jl
add
inc
int
sbb
loopne
fildll
int
imul
outsl
jp
popa
push
mov
jp
ljmp
ret
mov
fdivr
mov
aas
cltd
lock
sbb
sbb
sub
adc
pop
mov
out
jg
popa
mov
jmp
stos
scas
dec
jg
push
ret
pop
dec
push
aam
lods
cmp
mov
icebp
fwait
ret
xor
mov
pop
adc
dec
push
push
push
cs
cwtl
sbb
dec
nop
pop
daa
outsb
sti
in
ret
imul
popa
shl
xlat
es
lods
call
pop
enter
scas
les
mov
inc
es
lcall
incl
sbb
out
lea
inc
adc
push
pop
xor
inc
mov
rol
rcrb
sahf
dec
mov
das
negl
or
pop
arpl
pop
jbe
loop
push
lret
ds
movsl
shrl
lods
movsb
sbb
rorl
push
add
dec
jmp
or
repz
mov
adc
and
push
pushf
gs
jo
imull
popa
pop
test
push
and
das
push
add
fists
and
stos
push
cs
push
jl
xlat
push
sub
push
cmpsb
in
bound
push
bound
jmp
cmc
pop
or
repz
jle
fadds
test
mov
dec
lods
pop
popa
inc
sub
sbb
add
add
pop
inc
or
mov
cld
sbb
pop
ficomps
xchg
je
stos
repnz
test
test
jae
mov
adc
loope
bound
jbe
ret
xchg
insb
dec
movsl
xchg
adcl
cmc
ja,pt
push
aad
push
push
test
dec
dec
imul
mov
push
mov
xchg
sbb
loop
jecxz
lds
mov
push
rol
insl
pop
sahf
aaa
pop
fsubr
sub
idivb
xchg
or
test
fmull
ds
mov
call
faddp
dec
cs
push
xor
adc
sbb
add
jmp
inc
mov
push
in
enter
sub
into
insb
repz
mov
adc
std
fst
mov
mov
jnp
push
lret
jecxz
xor
mov
stos
jl
mov
and
fwait
add
add
shrl
xchg
stc
adc
cli
and
cmpsb
pushf
aas
enter
mov
pop
mov
cmp
mov
mov
push
xor
push
bound
je
or
cmp
rclb
inc
adc
mov
movq
add
push
arpl
mov
loope
movsb
lret
cmp
and
sub
daa
jle
jnp
cmpsb
mov
cmp
xchg
loopne
frstor
in
and
leave
repz
push
push
push
cmc
jecxz
rorb
scas
xchg
or
add
sbb
xchg
sub
pusha
in
inc
adc
mov
enter
xor
or
addr16
xchg
xchg
sbb
pop
add
xchg
xchg
jle
cli
lahf
sbb
loopne
inc
nop
ds
mov
rorb
sarl
xchg
mov
mov
xchg
aaa
loopne
loope
fwait
mov
xor
jecxz
sub
roll
adc
sbb
xchg
cmp
cmp
xor
add
jmp
gs
cli
fldt
cmp
ss
imul
flds
sbb
xor
pop
incb
jl
and
test
dec
out
inc
ss
mov
clc
push
pop
xchg
sbb
insl
out
cs
rcr
in
daa
out
pop
push
push
and
js
inc
scas
loop
and
push
cmp
fsubs
scas
dec
xchg
rcrb
rcr
mov
xchg
ss
ljmp
mov
pop
pop
fcmovnu
inc
fsubl
test
mov
jo
int
cmp
pop
cltd
pop
int3
mov
xorl
iret
and
adc
icebp
and
jmp
pop
or
jnp
dec
cmp
cmp
fs
fwait
scas
adc
out
sti
push
push
push
push
icebp
mov
xchg
lods
cltd
push
xchg
hlt
inc
cs
and
xchg
repz
ja
fsubs
dec
ficoml
xchg
loopne
mov
cli
cmc
paddsw
jno
mov
filds
imul
adc
mov
scas
cmpb
mov
adc
xchg
aam
dec
mov
v4fmaddss
loop
mov
movsl
nop
push
ja
leave
cmc
inc
push
push
xchg
or
daa
mov
stos
stos
and
jg
sub
aas
mov
pop
cmp
mov
addl
cmpsb
pushf
or
lret
fidivs
sub
lods
inc
add
push
inc
call
lock
sbb
popf
mov
cmc
cli
xor
xorb
pop
jbe
loopne
xorb
loopne
mov
push
cmpsl
adc
inc
sbb
iret
mov
subw
in
push
cs
out
js
push
insb
jle
repnz
ljmp
dec
adc
out
mov
xor
ret
insb
addl
push
xchg
div
inc
jecxz
ss
lcall
test
fstl
subl
cli
jae
imul
mov
repnz
cmp
into
lret
adc
sbb
incl
lret
lret
push
data16
loop
loope
pop
adc
data16
xor
jnp
daa
push
pop
add
ret
ja
sti
test
aad
dec
lea
sbb
hlt
mov
shl
fs
jns
std
and
pusha
rcll
dec
and
mov
xchg
add
lahf
mov
sub
adc
mov
push
sbb
cs
pop
dec
mov
push
cltd
pop
jbe
jp
sub
lods
cmp
push
xchg
pop
pop
or
inc
nop
sub
inc
fldt
fisttpl
dec
and
rorb
sbb
xor
pop
sub
adc
cmc
sbb
lahf
int
in
cmp
mov
jno
leave
mov
xchg
icebp
push
push
cld
mov
sub
rcr
cmc
js
or
out
cmc
pop
inc
mov
fwait
sub
add
outsl
xchg
push
mov
jecxz
test
mov
insl
xchg
mov
imul
and
xchg
jecxz
int3
data16
lret
lcall
push
arpl
add
push
xchg
scas
clc
adc
mov
sbb
or
imul
fmull
shll
imul
mov
fistl
out
rcrl
int
sarl
stos
push
sbb
jp
sbb
fcmovu
mov
xor
ds
inc
scas
jno
out
push
lret
lods
and
xchg
pushf
sbb
decb
aad
cmp
sub
lods
mov
cwtl
adc
shlb
mov
insl
xor
pop
nop
shlb
and
pop
out
test
insl
xor
shrb
loop
mov
movsl
fstps
mov
mov
cmp
adc
mov
inc
enter
sbb
inc
push
xchg
xchg
sub
add
or
fwait
mov
cmpsl
ljmp
int
lret
xchg
push
test
adc
fsubl
mov
push
adc
adc
inc
adc
xchg
add
cmpb
lahf
pop
and
sub
addr16
xor
outsl
push
mov
xchg
xchg
call
jl
aad
lea
lret
mov
sbb
cltd
jecxz
adc
xor
mov
push
mul
push
mov
adc
testb
loopne
roll
popa
jno
lds
clc
fisubrs
push
scas
cmpsb
std
leave
dec
cmpsb
add
aas
sub
pop
cmp
arpl
cld
ret
add
loopne
push
arpl
xor
lahf
and
imul
popf
mov
lods
xor
xchg
adc
ljmp
mov
ds
cmp
jmp
or
stos
add
aaa
or
cbtw
lock
pop
push
mov
push
mov
push
mov
call
lret
enter
mov
loopne
xchg
sbb
mov
sbbb
xchg
cmp
sub
inc
pop
out
cwtl
shlb
ror
cmpsl
out
sbb
inc
dec
rep
cmp
fs
repz
adc
jnp
jo
dec
clc
popa
push
jle
andb
lods
rep
or
pop
inc
xchg
push
xchg
push
add
ds
fidivl
jno
dec
inc
dec
or
pop
pop
ljmp
xchg
mov
push
sbbb
xchg
sti
inc
and
aaa
pop
or
out
fdivl
aas
add
push
adc
mov
aaa
fwait
int
loop
add
jne
xchg
mov
lea
mov
je
pusha
pop
mov
jns
or
gs
cmp
sub
pop
test
cltd
pop
cmp
testl
adc
inc
inc
leave
rcl
mov
ljmp
insl
mov
inc
scas
lahf
mov
push
mov
mov
imul
sahf
cmp
jno
scas
xor
into
loopne
test
pop
inc
or
sub
xchg
adc
aaa
mov
pop
stc
ljmp
push
mov
cmpl
mov
or
ljmp
adc
add
lock
addl
jle
jns
cwtl
xchg
push
jge
jmp
add
mov
scas
lret
pushf
cmc
mov
aam
sbb
mov
jl
mov
pop
jo
xchg
mov
andl
aas
push
adc
in
adc
int3
pushf
jo
pop
iret
cbtw
aaa
or
cmp
xor
insb
mov
adc
cmp
into
clc
imul
idivl
pushf
loope
shlb
cmp
push
loope
js
mov
cmp
push
jecxz
cli
leave
push
test
adc
bound
jb
lret
mov
les
leave
movsl
push
out
pop
nop
iret
ljmp
push
jecxz
jne
outsl
or
push
gs
or
adc
popa
mov
jg
jge
cli
pop
ds
ret
xor
cmc
push
addr16
inc
jo
loope
les
add
xchg
sub
fwait
dec
xchg
sti
mov
dec
cmp
sbb
sar
popf
push
jle
int
shrl
std
jp,pt
adc
mov
mov
pop
mov
xor
cmpsb
lods
mov
and
push
adc
pop
int3
test
push
sub
inc
in
push
xchg
sub
lret
jmp
ret
pop
sub
leave
push
bound
adc
adc
mov
inc
jb
stc
aam
push
jge
sub
cmpsb
pushf
mov
lds
inc
jno
popa
in
shlb
sbb
fs
dec
or
mov
loope
add
push
into
and
sub
imul
adc
mov
je
loopne
mov
nop
jbe
fwait
xor
ret
lahf
pop
inc
test
lret
hlt
jle
sub
in
aad
pop
dec
cltd
jp
into
imul
pop
lods
out
mov
jae
loopne
jb
inc
mov
xchg
dec
cmp
add
out
inc
jae
mov
loop
addr16
pop
pop
sbb
jb
dec
add
fucomip
pop
adc
sti
pop
out
add
xchg
dec
imul
scas
dec
push
add
mov
sbb
jo
push
shll
inc
aam
out
fbstp
int
push
sbb
sahf
leave
mov
mov
mov
add
int
call
in
mov
jecxz
sub
negb
push
cmpsb
push
pushf
lcall
xchg
dec
test
lahf
cmp
das
mov
and
je
mov
enter
mov
push
jg
ljmp
fstpt
cmp
mov
inc
mov
bound
and
and
inc
push
sti
aas
mov
test
dec
cmp
popw
pop
mov
cmp
mov
cltd
test
mov
filds
cmp
and
lods
xchg
or
stos
cmp
xor
repz
les
std
icebp
js
xchg
xchg
jp
sbb
adc
shlb
sahf
cmp
mov
lods
insl
add
or
push
add
cwtl
mov
cmp
js
mov
sbb
pop
decl
dec
xor
xchg
xchg
scas
lods
fmulp
mov
mov
push
icebp
stos
mov
leave
andnps
test
mov
sub
xor
imul
xchg
xor
cmp
cmpsl
mov
xchg
jno
lret
cmp
cwtl
add
imul
xchg
jg
rorb
fldcw
lret
sub
mov
mov
clc
pop
sub
pop
dec
sbb
cmc
pushf
xor
in
xchg
mov
pop
push
mov
push
adc
and
or
push
scas
mov
hlt
das
mov
sti
inc
dec
cmc
mov
jb
or
adc
cli
sbb
xchg
aas
mov
jo
xor
sub
sbb
adc
imul
adc
dec
popa
add
mov
fstpl
inc
dec
mov
test
int
movsl
inc
cs
je
mov
sbb
push
pop
pusha
scas
or
ds
out
jns
jne
out
jecxz
inc
pushf
and
stc
cmpb
xchg
xchg
mov
add
cmp
mov
arpl
js
loope
out
in
or
push
addr16
pop
in
addb
loopne
mov
inc
fildll
add
push
mulb
lahf
adc
sub
sbb
call
xchg
hlt
inc
fstpt
add
jo
mov
and
inc
lea
add
adc
jl
popa
adc
pop
push
scas
adc
call
std
bound
loope
adc
dec
mov
mov
rclb
out
or
mov
mov
sub
dec
divl
sbb
popa
adc
fsubl
adc
dec
push
cld
mov
mov
lods
push
dec
cmp
lahf
sub
push
sub
pop
les
hlt
pop
sub
mov
and
rclb
lret
arpl
jnp
push
out
push
add
repz
daa
mov
cmp
aad
loop
dec
sbb
stos
fiadds
or
fdiv
jl
in
xorl
jg
insl
adcb
das
aaa
jge
inc
outsl
pop
sub
sub
leave
mov
push
btsl
push
fcompl
or
inc
add
rorl
ja
fs
dec
inc
loopne
adc
data16
mov
jns
xchg
sbb
nop
loope
adc
addl
fimull
mov
outsb
cmc
int3
sub
pop
pop
sub
addr16
repz
jns
cld
xor
scas
test
movsl
or
xchg
pop
mov
test
jp
js
fs
js
js
and
daa
inc
aaa
js
addr16
adc
mov
mov
push
push
iret
xlat
inc
popa
mov
mov
loope
outsl
std
movsl
and
sbb
pusha
mov
fiadds
and
mov
addr16
mov
in
adc
in
insb
stos
mov
enter
xorb
pop
negl
mov
adc
jge
decl
jl
cmp
push
jmp
push
jns
or
testb
pop
xchg
lock
inc
jle
or
adc
mov
scas
cmp
test
jge
fwait
lods
inc
insl
xchg
xchg
mov
adc
pusha
jg
daa
fs
dec
stc
ret
testb
push
cli
mov
mov
dec
mov
adc
push
iret
jl
cmc
mov
pushf
pop
dec
lret
sbb
iret
ret
mov
mov
and
xchg
cmpsl
cmp
mov
mov
adc
or
or
mov
jl
push
pusha
aaa
int3
lods
dec
fcoml
add
jmp
movsl
pop
cltd
cmp
and
stos
mov
mulb
enter
mov
icebp
push
ja
iret
sub
subb
push
cmp
adc
sub
in
sbb
and
push
ficoml
jmp
das
imul
sarb
movsl
popf
iret
loop
dec
fstp
pop
fidivrl
mov
lret
popa
pusha
popl
shlb
xchg
cli
movsl
call
aaa
nop
sub
js
jl
out
and
dec
les
mov
sbb
dec
les
sbb
roll
jl
xchg
hlt
call
rcrb
and
and
sbb
aam
in
sub
gs
icebp
loope
dec
dec
mov
mov
cmp
inc
movsb
jmp
in
mov
div
mov
xlat
sahf
mov
pop
jns
cli
mov
push
mov
icebp
nop
push
mov
pop
sti
insb
push
lods
sub
adc
cmp
pop
mov
test
int3
push
lods
cmp
and
xorb
sti
push
scas
jae
jbe
cmp
xchg
out
mov
sbb
add
xchg
rorb
jne
loope
es
addr16
leave
hlt
lahf
adc
and
frstor
xchg
sub
test
jnp
sahf
sub
adc
jne
or
hlt
mov
repz
ds
insl
mov
movb
sub
mov
mul
lods
xchg
aaa
lcall
push
sbb
add
leave
pusha
ret
mov
cmc
in
in
lea
jne
adc
mov
push
lret
adc
les
in
mov
shrl
push
pop
jp
mov
inc
imul
mov
push
xlat
pushl
cmp
mov
outsl
xlat
lcall
js
xchg
sub
push
nop
add
ret
imul
in
cmp
gs
cmp
repnz
lret
cmpb
mov
in
cmp
insb
divb
xor
adc
fwait
iret
dec
mov
inc
stos
sbb
mul
scas
mov
dec
or
imul
mov
xchg
into
and
cmpsl
and
dec
cld
jp
adc
mov
sub
lcall
bound
cmp
scas
inc
xor
nopl
push
xor
sub
jg
pop
mov
hlt
test
out
cmp
mov
mov
fstpl
jb
into
sbb
dec
loope
pop
mov
ds
jle
mov
inc
mov
inc
mov
and
addb
mov
inc
lds
je
lahf
inc
int3
mov
outsl
xor
leave
cmp
push
cmc
cmpsb
rclb
dec
xchg
lea
lret
jae
and
fimull
loope
or
addr16
jecxz
sbb
mov
mov
shlb
jge
jb
out
es
inc
pop
je
jmp
out
daa
add
inc
mov
mov
push
movsb
imul
sbb
lds
outsb
je
xchg
fld
xchg
mov
sub
inc
inc
arpl
inc
rclb
out
ds
sbb
into
or
dec
pop
ret
lods
enter
sub
mov
imul
popf
jge
jg
outsb
xor
jp
jge
push
adc
sub
div
sbb
je
xor
out
hlt
dec
ffree
add
push
imul
ja
out
jecxz
ja
loopne
hlt
dec
mov
lret
mov
punpckldq
xor
divl
cmp
dec
nop
jno
and
les
dec
mov
xchg
repnz
orb
sub
dec
imulb
iret
lds
cmpsb
ljmp
out
fidivs
test
jns
cwtl
iret
cmp
push
sbb
out
leave
and
shrl
xchg
repnz
cmpsl
xchg
paddsw
enter
loope
jns
mov
stos
jmp
push
sbb
hlt
jno
out
mov
cmpsl
sti
popa
mov
inc
adc
jl
mov
and
cmp
mov
or
in
lds
movsb
into
divb
mov
stos
rcrl
aas
lcall
lock
ja
mov
call
jmp
sbb
push
pop
fiaddl
pop
loop
push
mov
push
xchg
int
cmp
leave
fldt
add
outsl
xchg
lret
sbb
add
lea
subl
inc
or
xchg
pop
bound
aaa
mov
mov
or
pusha
jae
and
sub
es
sbb
xchg
mov
xchg
mov
mov
lods
rorl
xchg
sbb
xor
testw
lret
lods
cli
dec
in
fwait
test
cld
pop
jge
les
stos
andb
stc
ret
test
sub
jmp
inc
cmc
mov
xchg
outsl
mov
add
cld
mov
js
lahf
call
xchg
push
mov
jo
repz
mov
iret
jge
clc
sarb
icebp
add
in
insl
or
cmc
mov
mov
fnsave
aam
and
lret
rcrb
pop
lcall
stos
fwait
movsl
lahf
mov
push
push
out
cmp
in
ja
mov
fnsave
jp
adcb
in
out
in
lahf
push
inc
mov
push
xchg
jp
pop
fmuls
call
ds
sub
pop
sarl
inc
enter
adc
rol
jne
call
imul
iret
fsubs
daa
sbb
cmpsb
lahf
cwtl
pop
sub
call
jl
repz
mov
pop
xchg
imull
xchg
addr16
pop
cwtl
daa
lret
stc
je
and
fwait
jle
lock
insb
outsb
add
mov
fstpl
adc
fwait
mov
stos
sub
mov
pop
pop
cmp
call
bswap
push
cmc
xchg
scas
aaa
popa
icebp
adc
movsl
inc
mov
dec
les
out
jecxz
mov
nop
pop
add
pop
in
es
lods
mov
push
inc
jns
push
dec
sbb
addr16
ret
movsb
mov
data16
daa
or
iret
dec
push
or
or
jg
push
test
jnp
inc
pop
add
mov
xchg
jmp
stc
mov
or
lea
out
fidivrs
inc
adc
mov
clc
mov
jne
inc
es
gs
push
push
int
xchg
fcomip
push
fisubrl
sub
call
inc
movsb
lahf
xchg
sbb
push
sahf
hlt
sbb
add
pop
shrl
jge
lahf
fs
les
scas
and
je
outsb
lods
and
push
mov
sbb
dec
push
push
mov
dec
pop
cltd
lea
mov
push
cmpsl
push
out
xor
popa
sbb
mov
xor
cmc
xchg
fildl
imul
mov
or
and
xlat
aam
push
movsb
movsbl
and
repz
jno
mov
cmp
rcrb
push
popf
push
sbb
cli
xchg
cltd
pushf
scas
lock
loop
sub
cmpsl
mov
and
push
stc
cli
bound
pop
movsb
xchg
stos
into
mov
repz
scas
inc
mov
ret
push
jbe
popa
cwtl
pop
push
mov
addl
jmp
sub
cmpb
loop
push
aad
mov
rcrl
jne
enter
ss
addr16
fs
inc
adc
dec
mov
pop
cmp
int
or
daa
mov
in
shlb
rcrl
pop
push
je
pushf
mov
pop
pop
in
pop
push
ljmp
add
mov
inc
xlat
out
sti
cmp
mov
sbb
dec
cld
out
sbb
pusha
out
aaa
inc
mov
arpl
or
jno
lods
pushf
iret
int3
push
sahf
jbe
mov
mov
pop
cmp
adc
loop
aaa
adc
daa
popa
jge
lock
repz
or
ret
jg
xchg
xor
sbb
cmpsl
push
jns
inc
xchg
push
lret
pop
add
push
add
pop
push
in
je
pushf
test
in
std
incb
in
lret
inc
mov
sbb
mov
pushf
mov
aad
sub
mov
mov
aaa
mov
nop
xlat
or
and
xchg
ret
cli
repnz
mov
or
dec
mov
ds
sub
and
jne
mov
cs
push
pop
mov
lret
stos
xchg
xor
lods
data16
enter
cmpsl
cmp
or
mov
mov
lahf
pop
xchg
pusha
fistpl
addr16
enter
cmp
dec
mov
repz
mov
out
dec
pop
adc
xchg
outsb
or
repnz
push
cmp
jmp
add
xor
in
jmp
fdivrp
fsubr
xchg
add
dec
mov
leave
ljmp
dec
stos
repz
adc
and
pop
faddl
sub
jmp
mov
orl
dec
pop
data16
dec
pop
jg
xchg
jmp
jp
div
scas
cmpl
rol
mov
leave
les
mov
xor
je
ficompl
xor
push
cmp
pop
mov
mov
xor
xor
and
repnz
mov
xchg
popf
loope
add
mov
das
cwtl
cs
jl
jg
push
loope
pop
ret
add
daa
daa
cmc
imul
out
je
call
sub
fsub
pushf
inc
cli
cmp
push
dec
pop
mov
sub
aas
mov
pop
sbb
lock
adc
pop
or
lods
jge
and
into
orb
negb
js
cmc
add
int
loope
jno
fsubrs
jo
sbb
mov
lret
inc
push
fcompl
mov
pop
xor
jecxz
or
mov
sbb
sti
jmp
cmp
aaa
sbbb
cwtl
addb
arpl
jmp
xor
bound
pushf
leave
or
out
icebp
movsl
jbe
sbb
or
movsl
mov
sbb
xchg
leave
inc
xor
aam
xor
push
iret
add
out
mov
mov
cmpsl
out
hlt
xchg
ret
vpsrlw
inc
add
fcmovu
mov
push
sbb
pop
stc
pop
pop
dec
popf
icebp
andb
and
add
stos
cmpsl
mov
cli
nop
xor
mov
daa
dec
mov
aad
loopne
xchg
fsubp
scas
imul
pusha
jo
ret
mov
fs
add
and
rorb
mov
mov
pushf
mov
dec
nop
cmp
repnz
dec
shl
jecxz
xor
pop
mov
ja
sti
xor
test
jne
rcrb
fsubrs
mov
dec
inc
pop
fwait
imull
or
lock
jae
mov
outsl
inc
xchg
adc
sub
stos
mov
sub
xor
and
sub
pop
inc
orb
dec
cmp
xchg
inc
sarl
push
push
adc
movsl
jl
mov
sub
das
push
fwait
dec
inc
daa
aam
imul
adc
dec
loop
icebp
adc
mov
popa
ds
fs
adc
jne
and
adc
filds
scas
out
cld
ret
inc
test
scas
cmp
clc
adc
and
int
in
mov
imul
adc
jmp
xchg
in
mov
out
ljmp
ret
cmp
pop
js
sub
adc
xor
lret
sbb
mov
icebp
mov
rcrl
test
mov
sub
lret
int3
cmp
mov
xchg
mov
sarb
not
or
jl
sbb
mov
out
mov
xor
sbb
xlat
xchg
or
clc
jp
jno
cmpsl
aas
rcll
adc
std
sbb
jnp
jbe
push
sarb
sbb
xor
in
fcoms
push
neg
xchg
in
inc
outsb
dec
ret
stc
es
cmp
sub
jo
dec
call
insb
cmc
shrb
inc
out
subb
scas
movsl
scas
outsb
add
sti
out
add
ret
js
sbb
push
inc
addr16
dec
add
pop
pop
xlat
jo
cmp
xchg
mov
push
dec
xchg
push
mov
addb
mov
test
mov
inc
rcll
and
adc
mov
cmp
call
sbb
es
js
pop
sub
sarb
ds
and
shlb
aam
dec
and
cmp
out
gs
pop
dec
xlat
lret
dec
pop
xor
jl
fs
rcr
pop
outsl
fnsave
push
test
add
in
imull
pop
call
fnstenv
xchg
mov
add
sti
cmp
jne
push
adc
push
xrelease
or
adc
push
jl
loope
mov
dec
cwtl
xor
sti
pushf
pop
mov
out
cmp
mov
loope
adc
mov
in
push
sub
movsl
ficomps
mov
add
imul
test
ret
dec
xlat
sahf
and
movsb
loop
mov
cmpsl
push
mov
inc
adc
pushf
xchg
sbb
dec
jg
js
xor
mulb
jno
inc
ja
jno
ja
fisubs
inc
xlat
inc
mov
test
xchg
jns
xor
push
inc
test
cmp
xchg
push
mov
ret
adc
pop
movsl
mov
dec
fsts
jecxz
sahf
sub
pop
loop
lret
cmp
movsl
add
mov
mov
in
clc
mov
test
popl
mov
ja
mov
aaa
movsl
repnz
popa
push
negb
popa
cmp
hlt
clc
scas
js
mov
daa
mov
inc
orb
sbbb
pushf
enter
and
mov
or
pushf
mov
insb
nop
or
push
mov
call
mov
mov
sbb
add
inc
inc
sbb
jne
add
fimuls
cwtl
mov
rcll
ds
cmp
mov
mov
aam
imul
xor
rol
lods
divl
daa
pop
and
std
out
jl
mov
jno
mov
cs
jmp
outsb
pop
dec
cmp
cmp
gs
jne
jecxz
iret
outsb
xorb
xchg
in
cmp
push
mov
fsubrp
imul
dec
jne
jl
mov
add
sub
loope
push
inc
mov
aaa
cmp
pushf
outsl
dec
mov
loope
les
int3
adc
div
or
pop
push
push
lret
sbb
pop
scas
push
and
sbb
loopne
jae
cmpsb
int
mov
jnp
clc
outsb
lock
in
cld
or
sub
jmp
subl
jne
sbbl
shll
clc
jmp
pop
jb
inc
rcrb
mov
push
mov
and
xor
sbb
hlt
pushf
scas
insl
sbb
add
inc
ds
lea
mov
push
mov
cmpsl
adc
jne
ds
int3
and
cltd
xchg
add
roll
insl
and
into
stc
and
fwait
inc
dec
mov
xchg
fildll
push
gs
ljmp
repz
stc
cmp
dec
out
movsb
data16
sbb
push
shll
dec
dec
fsubs
push
jns
clc
xchg
jmp
mov
mov
popf
mov
lahf
mov
xchg
cmp
mov
fcomp
into
push
xchg
mov
sub
or
push
jge
orb
je
pop
jne
lret
inc
insb
add
stos
jne
xchg
xchg
sahf
and
outsl
imul
and
std
add
test
leave
loop
mov
add
xchg
inc
mov
inc
lock
mov
jle
in
ljmp
daa
in
xchg
rcll
mov
xchg
es
push
dec
test
popf
repz
xor
outsb
pop
mov
repz
ret
rcrl
jecxz
pop
cmp
out
jnp
xchg
lds
cmpsb
aam
pop
push
push
push
sub
jo
ss
outsb
mov
imul
ret
loop
out
xor
jl
mov
stos
xor
xchg
pop
mov
stos
lret
inc
scas
pop
in
shlb
hlt
lds
push
imul
adc
jne
addr16
sbb
leave
lock
and
jnp
into
inc
push
pushf
movsl
faddl
add
pop
sbb
sbbb
push
insb
jl
stc
pop
fisttps
inc
repnz
hlt
dec
rcrb
jmp
or
dec
test
mov
gs
aad
push
insl
push
enter
mov
push
scas
or
in
push
and
mov
or
fisubrs
push
stos
dec
adc
into
add
jg
in
cmp
push
jmp
ss
xlat
les
repnz
je
shrl
xchg
dec
enter
pop
mov
fwait
mov
mov
iret
add
jmp
stos
jae
outsl
out
lock
dec
sbb
cmpl
dec
sahf
addr16
inc
fsubrl
mov
lret
imul
sbb
mov
test
out
scas
icebp
movsl
inc
pop
rcrb
adc
xchg
and
xor
push
aas
jl
adc
jnp
inc
jb
xchg
in
sbb
mov
js
nop
xlat
and
mov
sarb
aam
mov
inc
jp
dec
pusha
xchg
jb
mov
popa
jmp
dec
jg
jle,pt
lods
cld
cltd
jbe
movsb
xchg
dec
stos
jmp
shrb
pop
sbb
jne
cmpsl
aam
inc
aam
aas
jne
ret
iret
adc
pop
movswl
divl
test
mov
xor
lret
fisttps
push
in
lods
les
add
movsl
adc
lock
or
mov
jle
jecxz
dec
sub
sti
dec
popa
rcr
sbb
rcrl
imul
inc
cmp
lret
sbb
adc
xor
and
dec
bound
data16
jl
and
cmp
inc
lcall
jg
data16
jnp
sub
mov
xchg
imull
push
loopne
and
outsb
or
jmp
mov
push
mov
jmp
loope
cld
rorb
aaa
adc
pushf
sbb
mov
and
sbb
int3
enter
pop
sti
mov
fisttpll
mov
cltd
dec
jo
dec
cmp
jbe
es
cmp
jle
push
cmc
repnz
cld
pusha
mov
pop
or
dec
test
mov
jbe
sub
and
xor
popf
test
jg
loop
rcl
xor
paddsw
pop
cmp
jmp
adc
push
sbb
cltd
cli
fmuls
shll
cwtl
stc
into
adc
nop
pop
xchg
jns
movsl
or
rolb
xor
jns
cmpsl
push
in
jg
sbb
push
mov
adc
sub
add
mov
or
lcall
popf
cmp
cld
and
insl
in
pop
loope
popf
shl
pop
cmp
mov
cmp
mov
sub
mov
xchg
mov
push
sbb
leave
test
mov
fwait
or
repz
add
pop
cmp
divb
in
mov
sub
stos
mov
shll
fidivrl
ror
mov
xorl
into
or
flds
inc
enter
pusha
sbb
icebp
xchg
fwait
dec
push
cmpb
mov
jg
jbe
xor
jecxz
cld
js
hlt
mov
mov
inc
in
sub
popa
sub
cli
push
movl
sbbb
lds
jbe
jle
xchg
out
mov
inc
sahf
adc
pand
sub
jbe
mov
aaa
into
push
cmp
bswap
icebp
fnstsw
xchg
or
mov
ja
cmc
test
ljmp
and
and
inc
pop
sti
jge
das
dec
jo
push
cmpsl
sahf
push
dec
sti
inc
shrb
push
dec
or
imul
jno
ret
sub
push
into
lret
in
mov
leave
pop
push
je
xor
xchg
lds
xor
pushl
das
jns
pop
pop
and
push
shrl
inc
scas
or
ja
fsubrl
nop
bound
or
enter
lds
push
xchg
cwtl
cld
out
ficoml
in
scas
insl
adc
jbe
mov
lods
in
cmc
dec
loop
popf
loop
and
arpl
xor
xor
inc
xor
push
stos
test
leave
inc
stos
mov
inc
cltd
clc
enter
mov
dec
sbb
loop
out
mov
add
pop
insl
inc
or
std
mov
pop
mov
pop
fmulp
push
or
mov
popf
push
outsb
ss
mov
sub
cmp
roll
mov
pushl
push
pop
push
sahf
bound
sub
pop
mov
leave
shll
xor
pop
sbb
pop
nop
sahf
mov
xor
rorl
mov
movb
jge
dec
loop
xchg
out
into
mov
jnp
jmp
imul
in
xchg
mov
out
sub
les
adc
ljmp
out
mov
add
subl
rorl
jg
adcb
ficoms
jb
movsb
aad
das
adc
mov
movsb
das
mov
pop
jne
les
xchg
mov
mov
add
mov
iret
iret
push
dec
sub
jmp
fidivs
adc
jns
sbb
dec
aas
outsb
or
jmp
movsb
and
xor
test
in
addr16
mov
rep
or
mov
jge
fucomip
fcompl
das
cmpsl
pop
scas
xchg
adc
mov
cmp
test
out
xchg
outsl
ds
dec
lock
jb
sbbl
or
movsb
cwtl
pop
push
sarb
js
pusha
sbb
andl
mov
out
lret
xorl
ja
pop
adc
xor
jae
pop
sub
lret
sub
jns
mov
pop
jb
xchg
lods
lock
out
sbb
sbb
cmp
xchg
mov
mov
int3
cmp
stos
and
je
ret
adc
repz
outsl
and
mov
sbb
stc
ds
cmpsl
inc
and
scas
insl
insb
dec
jbe
cmp
pop
xchg
fimull
pop
lahf
sbb
push
add
loopne
sub
fwait
shl
jns
xor
pop
rorl
cmp
pop
jnp
cmp
lds
lcall
push
adc
test
and
nop
and
jnp
xchg
pop
test
or
mov
shrl
mov
ljmp
pop
sbb
pop
pop
xchg
xchg
inc
sub
inc
dec
aam
pop
jmp
popa
mov
or
cwtl
jl
dec
shll
sbb
lods
daa
push
cmpsl
iret
out
ret
nop
lock
in
insl
imul
jecxz
mov
push
adc
xor
stc
pop
stos
jns
loop
push
xorb
push
and
jl
enter
lahf
jp
sbb
ja
pop
sbb
or
mov
mov
daa
or
sbb
jmp
jmp
fstps
push
rcr
adc
xchg
xchg
sahf
inc
in
xor
pop
ret
push
dec
pop
xor
ljmp
outsl
cmp
int
jmp
push
jecxz
mov
ret
pop
push
sub
inc
lcall
stc
and
pop
jg
or
test
push
xor
xchg
sti
dec
sbb
fstps
clc
aaa
adc
xchg
dec
dec
add
pop
rclb
popa
pop
dec
mov
sub
push
stos
sbb
loop
das
out
jmp
adc
call
shr
add
imul
test
cld
mov
daa
and
jb
arpl
addr16
jg
movsl
push
sarb
xchg
dec
mov
insl
inc
int
push
jle
pop
out
push
mov
aaa
imul
js
outsl
loop
pop
scas
ret
int
fadds
pop
sbb
out
mov
sbbb
inc
popa
push
aad
scas
cmp
xchg
sbb
imul
test
push
mov
pusha
mov
sub
jb
mov
idiv
sbb
add
rorb
ret
xchg
lcall
insb
xchg
add
ds
lret
enter
cmp
push
adc
dec
xor
xor
or
fsubr
sahf
mov
or
sbb
mov
cmpsb
push
in
shlb
xchg
fwait
test
fstpt
les
add
lods
fimull
mov
xchg
push
shrb
dec
cmp
negl
dec
ret
std
and
mov
imul
xchg
repz
daa
sbb
bnd
sarb
add
shll
pop
pushf
push
arpl
mov
sarb
scas
mov
xor
push
jp
jno
popa
add
add
pusha
mov
std
add
push
lcall
dec
adc
lods
jmp
sti
enter
mov
add
pop
repz
push
std
std
stos
adc
pop
mov
lock
les
cmpsb
mov
cmp
hlt
mov
enter
cmpsb
cmp
das
dec
stos
je
add
mov
sbb
sbb
mov
push
xor
lds
or
daa
mov
xchg
or
xor
inc
fisubrs
push
xor
and
aas
jae
xor
push
dec
frstor
cmpl
pop
adcl
push
mov
push
push
aam
mov
les
pop
pop
jg
pop
cmpsb
add
rolb
mov
jmp
sbb
push
jl
sub
sub
cld
sbb
mov
mov
sbb
cmp
scas
adc
lcall
sub
dec
push
fists
add
xor
cmpsl
stos
ror
imul
mov
dec
out
sbb
and
mov
sub
mov
jo
rcrb
sbb
push
out
cld
sbb
repnz
mov
push
mov
mov
movsb
cs
and
xchg
fsubrl
arpl
pop
test
xor
hlt
sbb
push
mov
addl
jns
push
inc
or
fstpl
sub
f2xm1
cmc
xchg
aas
xor
pop
lret
push
dec
stos
movsl
jmp
outsl
aad
push
dec
xor
xor
bswap
bound
sahf
inc
jge
mov
mov
cwtl
dec
inc
sbb
fnstsw
xchg
adc
dec
stos
std
push
xchg
outsl
out
in
or
push
fisubrl
fldenv
sbb
out
jecxz
repz
fnstcw
add
jmp
mov
ja
mov
xchg
sbb
and
and
fiaddl
cltd
pop
adc
jl
sub
je
cmp
fsubrs
lahf
loop
movsb
fmull
push
sbb
cmp
sbb
andl
hlt
mov
push
test
sbb
sti
sbb
pop
adc
inc
sbb
mov
pop
fidivrl
or
jnp
xor
xchg
or
gs
mov
xor
adc
xchg
push
xchg
cmp
iret
ss
movsb
push
sbb
xlat
stos
pusha
and
mov
call
pop
lods
aad
inc
popf
stos
lcall
dec
dec
mov
sti
mov
push
insl
test
jbe
loopne
xor
mov
sti
les
cmpsb
into
push
fwait
aaa
or
gs
cs
rcrb
mov
sub
cmpsl
in
addr16
in
dec
ds
icebp
jmp
mov
movsl
sbb
mov
dec
xlat
add
adc
das
ret
xor
popf
test
int3
add
adc
and
ficomps
and
mov
or
mov
inc
adc
dec
push
add
fldl
add
ss
scas
dec
mov
jae
fldt
adc
and
imul
mov
js
and
pop
mov
outsl
int3
inc
sbb
fistl
xchg
jl
stos
xchg
lcall
leave
pop
out
push
and
rorb
outsb
les
dec
shl
xlat
cmpsb
cmpsl
movsl
sub
and
je
add
idivb
cmpsb
cmp
outsb
lret
nop
cmp
sbb
mov
mov
mov
bound
pop
daa
pop
xor
mov
clc
dec
movsb
adc
jae
xchg
sub
pop
mov
and
mov
mov
sub
mov
lods
xor
mov
xor
push
pop
sbb
aam
push
or
cmp
mov
roll
mov
sbb
and
mov
cmp
les
es
popf
es
div
test
stc
sbb
push
nop
mulb
xchg
ja
inc
mov
sar
xchg
ret
cmp
hlt
fnstenv
cmp
inc
psraw
ljmp
fstps
shr
and
je
shl
cli
mov
fwait
xchg
enter
stos
push
adc
push
movsb
jmp
mov
aam
lods
push
arpl
xor
xchg
pushf
loopne
add
mov
aas
js
call
out
mov
not
test
jg
nop
dec
insl
hlt
mov
sbb
sub
push
push
cmp
loope
out
enter
movsl
pop
lds
js
rolb
xor
lods
inc
test
xor
push
xchg
in
and
pusha
dec
jmp
push
clc
in
iret
mov
jge
scas
mov
out
outsb
repz
fs
arpl
xlat
push
sbb
rcll
adc
xlat
mov
push
dec
scas
fidivrs
fstl
ljmp
sbb
ss
and
cli
xlat
jmp
push
scas
nop
mov
jno
inc
sub
arpl
pop
imul
or
push
push
nop
xchg
fmull
add
lcall
sub
mov
mov
inc
pop
addr16
es
insl
adcl
xchg
stos
and
push
cmp
pop
dec
mov
xor
xchg
pop
lock
jecxz
ja
xchg
repnz
aad
leave
lock
outsb
xchg
mov
pop
pop
je
sub
out
ljmp
test
mov
das
addr16
sub
enter
shlb
or
xchg
inc
dec
arpl
jns
dec
dec
ss
js
in
pop
sub
push
arpl
dec
jne
aad
enter
or
pop
dec
mov
adcl
in
mov
push
xchg
adc
or
clc
movsb
in
ret
bound
shr
stos
xchg
les
icebp
stc
in
in
in
sbb
je
arpl
dec
mov
jnp
push
ljmp
xor
add
mov
cmp
sub
sbb
les
cmp
mov
outsb
fistpl
sub
mov
or
mov
imull
xor
in
xor
pop
and
aam
xor
enter
dec
dec
ret
mov
or
sahf
fistpl
inc
fs
mov
cmp
mov
or
or
or
loop
add
aam
test
fists
jge
mov
jmp
or
adcl
mov
rorl
add
pusha
loope
lock
sub
test
into
jbe
sub
xlat
stos
jb
cmpb
dec
into
stos
es
les
xchg
loopne
repz
fnstcw
mov
loop
inc
into
sbb
dec
mov
ja
inc
sarl
xor
jmp
daa
jae
lret
and
repnz
adc
xlat
std
pushf
cli
and
push
cmp
and
jle
out
enter
sub
push
je
sub
aam
lcall
pop
cs
adc
jge
scas
sbb
jge
ja
sahf
in
dec
orl
insl
push
ret
push
pushf
sbb
push
stos
jno
ljmp
pop
jecxz
mov
fisttpll
repnz
lods
sbb
mov
sahf
xchg
dec
insb
das
mov
fsubl
andl
cli
mov
jns
inc
sbb
jo
inc
lods
loope
jns
lcall
lods
mov
xchg
push
aam
jg
mov
xorb
cs
fisttps
addr16
icebp
jbe
xor
sti
xor
inc
ds
mov
or
ret
ds
sahf
xchg
mov
dec
loopne
jecxz
cld
dec
les
mov
xor
mov
mov
insl
cld
adc
loopne
dec
pushf
and
cmp
test
movsl
cmp
cmpsb
and
dec
rclb
and
xchg
movsl
fstl
das
or
inc
int
push
xor
call
movsb
aam
jge
fldenv
outsb
je
push
sub
adc
pop
call
jns
add
das
sub
lock
cmp
cli
mov
popf
push
fcom
fmul
scas
sahf
push
or
dec
lds
inc
xchg
arpl
adc
add
adc
add
lret
mov
sbb
ljmp
mov
lahf
xchg
push
outsb
mov
in
push
jbe
shr
add
or
loop
pop
das
test
xor
pushf
out
rclb
cltd
sahf
sbb
jno
sbb
sub
insb
std
sub
mov
outsl
or
in
push
pushf
dec
lret
push
pop
stc
xchg
xlat
repz
or
xchg
jg
aas
cmp
add
cmp
dec
xchg
push
or
inc
test
sbb
in
xchg
popf
cld
xchg
daa
adc
and
fsubrp
pop
shrb
xchg
imul
mov
lcall
or
neg
add
add
andl
lahf
outsl
popa
decb
mov
xchg
mov
stos
sub
ss
dec
fdecstp
dec
push
cwtl
mov
test
bound
mov
pop
sub
dec
in
jmp
lret
fnstcw
andl
xor
js
popf
jo
repz
daa
adc
addr16
fiaddl
and
jg
inc
scas
mov
sbb
jp
shlb
mov
add
mov
cmp
pop
stc
notb
out
mov
sbb
lret
xchg
jae
icebp
sub
imul
sub
mov
jge
cmp
imul
in
frstor
jle
testl
mov
incl
stc
stos
comiss
into
pop
xlat
inc
js
jns
repnz
cltd
lea
int
pop
in
pushf
xor
ret
sahf
mov
js
insl
fcoml
int3
aas
mov
adc
lcall
sti
aas
cli
pop
jg
xor
or
loope
ljmp
in
das
es
inc
mov
imul
out
jbe
xor
pop
inc
loope
insl
xchg
sub
push
dec
stos
das
gs
icebp
push
aad
das
pop
sub
or
mov
je
cmpsl
dec
cmp
test
icebp
pop
stos
mov
pop
inc
cmp
jae
mov
stos
jmp
roll
outsl
int
jg
jo
push
out
aad
jae
mov
dec
rclb
adcb
dec
movsl
stos
xor
sahf
mov
mov
stc
sbb
add
imul
xor
insb
push
adc
push
ljmp
xchg
cld
and
jb
mov
add
imulb
mov
push
sarb
adc
add
adc
lret
int
sub
jmp
stos
add
dec
add
push
xchg
adc
call
sub
or
scas
or
xchg
pop
and
or
xchg
pop
adc
dec
and
dec
xor
mov
and
mov
cli
inc
jge
lahf
push
test
mov
aaa
mov
mov
and
adc
cmp
push
fwait
cwtl
lods
mov
add
sbb
or
pop
mov
fs
cld
sbb
jp
ds
les
inc
dec
cmp
repnz
in
pop
enter
lods
pop
xchg
js
test
push
or
sub
cmp
and
aaa
cmp
fs
jae
pop
mov
cld
jnp
or
cmp
fwait
add
fcmovnbe
addl
fwait
and
push
dec
popf
or
sbbb
push
mov
popf
sub
stos
rolb
aas
or
inc
push
cld
test
cli
push
mov
mov
push
xor
xor
jne
lret
imul
fsubs
lea
test
out
dec
or
sub
pop
add
mov
out
jl
inc
rcl
sbb
stos
cmp
sbb
push
fstps
outsl
dec
jecxz
repnz
fldt
sub
inc
mov
ret
cmpsb
jp
sub
mov
rep
sub
jo
les
lods
lea
mov
and
test
cmp
xor
jb
insb
mov
sub
sbb
push
lret
add
jb
loop
or
cli
popa
fs
mov
lret
jg
test
dec
lcall
stos
xor
fstcw
lds
mov
cmp
push
lods
add
sbb
add
mov
rcll
movb
loope
test
test
inc
gs
xor
insb
lods
into
out
dec
and
add
pusha
aaa
inc
lock
mov
int3
mov
movsb
xor
das
dec
leave
out
fistl
or
and
ret
sbb
push
scas
adc
ja
mov
cmc
dec
jbe
cmp
scas
cmpb
mov
lock
or
mov
dec
loop
adcb
rcr
inc
sub
sub
add
out
mov
xchg
aam
xchg
dec
icebp
lods
shr
adc
mov
jne
clc
jg
hlt
pop
jae
fcmovnu
inc
cmp
push
push
mov
push
call
push
sbb
jl
fbstp
jp
adc
into
cmp
pushl
sub
lds
mov
mov
cmp
cltd
mov
lock
leave
add
sbb
dec
in
inc
mov
data16
dec
daa
dec
mov
mov
adc
mov
jae
fists
in
xchg
popf
jg
das
test
outsb
dec
xchg
jbe
mov
outsl
mov
lods
mov
mov
pop
mov
bound
xchg
mov
mov
mov
jle
dec
repz
add
fs
ret
inc
aaa
pop
sub
les
ss
cs
lock
sahf
int
in
xor
test
push
orl
fildll
add
sub
je
xchg
or
inc
pusha
out
dec
sub
or
loope
int
jg
es
sub
leave
jno
and
lds
mov
push
test
aas
jl
xor
sub
xchg
test
fadds
xchg
xor
mov
ss
push
pop
pop
adc
aaa
lahf
pop
out
lahf
mov
test
push
or
pop
mov
fstps
out
push
jnp
xchg
aas
mov
inc
das
ja
leave
sub
das
cmp
movsb
sbb
jge
int
jno
lods
mov
faddl
sbb
jbe
xor
dec
jno
mov
stos
adc
or
aas
mov
dec
cmp
sbb
lret
bnd
fsubs
cmp
or
and
and
scas
jl
lea
fcompl
negb
inc
pop
lahf
sbb
mov
in
outsl
scas
inc
add
fwait
sub
std
ss
les
sahf
sbb
sub
mov
xchg
mov
test
mov
sub
sub
sub
mov
cmp
mov
push
lfs
out
mov
adc
mov
mov
enter
jmp
pop
add
sbb
lea
test
into
ljmp
adc
bound
lds
mov
ffree
inc
cmp
aaa
dec
int
daa
inc
or
imul
xor
stos
cmpsb
jp
or
stc
jbe
fidivrs
cmpsb
fmulp
test
xchg
repnz
pop
inc
add
mov
int
pop
fcmovb
jl
fildll
fnsave
fildl
mov
hlt
outsb
jge
mov
cmpl
and
push
test
and
das
mov
cmp
mov
cs
inc
cmp
out
pop
ja
push
add
inc
sbb
push
mov
dec
not
fsts
push
push
or
insl
xor
push
sahf
push
int
fmuls
popa
dec
fadds
and
xchg
fimull
testl
in
in
hlt
xor
and
popa
out
lcall
ret
sti
sbb
out
sbb
out
imul
mov
xor
xchg
pop
and
push
cmpsl
xchg
mov
stos
xchg
inc
jle
add
pop
xchg
popf
outsb
or
jge
mov
testl
pop
sbb
mov
xchg
stc
mov
cli
ljmp
ds
jne
stc
and
xor
movsl
xchg
pmaddwd
es
pop
xchg
rcr
jg
xorl
add
sahf
mov
adc
push
iret
xor
pop
jno
ficomps
lock
sbb
and
xorl
jmp
push
dec
pop
jne
mov
loop
push
cmpsb
mov
jns
mov
jne
das
scas
jp
jmp
insl
add
popa
pop
lock
mov
push
dec
mov
mov
dec
pop
call
cmp
pop
movsb
fldt
inc
mov
out
insb
and
xchg
mov
aad
fs
je
cmpl
add
dec
sub
imul
pop
mov
arpl
push
ror
cmp
inc
psrlw
inc
push
mov
out
cwtl
jns
enter
adc
cli
addb
xchg
cli
aad
orl
cmpb
push
clc
jl
not
add
loope
pop
sbb
in
push
es
mov
pop
push
cmc
adc
push
jg
sahf
js
adc
ficoml
dec
xor
andl
sbb
idivl
pop
hlt
movsl
out
or
cmp
loopne
jge
and
out
push
pusha
stc
xor
jecxz
jge
mov
ja
dec
or
aaa
in
fisttpl
mov
jbe
loopne
sub
and
je
fnstsw
repz
pop
cmp
xor
addr16
pop
mov
cmp
sub
inc
adc
movsl
jp
cmp
lahf
test
mov
adc
divl
cmp
js
bound
mov
pop
jecxz
call
jno
xor
dec
sti
inc
or
pop
and
lea
dec
testb
mov
insl
sbb
pop
incl
jg
xor
loop
add
mov
mov
lret
insl
lock
fcmovnbe
sbb
rclb
dec
push
fldl
mov
ret
mov
jg
mov
sbb
bound
mov
xchg
sbb
and
cltd
or
lret
add
mov
or
push
jecxz
xchg
jecxz
xchg
xor
and
cmp
cwtl
xor
cwtl
push
idivb
mov
cli
xor
mov
adc
lods
xchg
and
xchg
mov
pop
adc
inc
cmp
test
jne
out
les
insb
xchg
pop
pop
mov
out
xchg
add
leave
loop
mov
in
in
fsts
dec
cs
lods
int
push
mov
iret
push
int3
sbb
xchg
mov
adc
mov
jnp
add
xlat
lcall
in
dec
and
aas
imul
aam
pop
jae
mov
rcrl
sbb
aas
xchg
cmc
or
movsb
add
aam
and
fldenv
aam
out
movsb
mul
jo
jnp
icebp
jo
push
xor
outsl
cmp
mov
addr16
fprem1
jl
nop
cmp
jmp
sub
and
aas
and
xchg
dec
lods
fildll
out
mov
pop
sbb
pop
inc
cmp
lcall
insb
movsl
stos
push
jb
inc
add
xor
jp
sbb
dec
push
mov
sti
in
push
std
lds
mov
xor
dec
data16
mov
mov
xchg
cmp
add
insb
dec
dec
cmp
in
adc
rol
cmp
aad
jge
rdtsc
mov
enter
movsl
pop
mov
enter
test
test
xchg
push
out
pop
and
jno
mov
mov
test
sbb
mov
fs
and
int3
hlt
mov
jmp
mov
scas
or
ds
in
shll
insb
divl
sub
adc
mov
add
mov
mov
cwtl
sub
cli
rol
andb
out
sbb
push
dec
ljmp
mov
pusha
jge
addr16
adc
test
mov
adc
dec
jg
jbe
pop
shlb
fnsave
xchg
nop
pop
mov
out
and
stos
addl
and
in
icebp
ficoms
cmp
jbe
cwtl
jno
bound
fwait
lcall
outsb
insb
shlb
mov
add
fwait
cmp
push
int
hlt
test
cmp
addr16
cmpsb
sub
hlt
int
divl
dec
and
and
jb
imul
fsubs
mov
dec
and
mov
sbb
js
jl
rclb
daa
movsb
jb
inc
add
ffree
repnz
test
aam
cwtl
lret
inc
out
nop
jbe
mov
cld
aas
mov
popa
jae
mov
inc
add
data16
jbe
sbb
insb
mov
mov
cmp
jp
outsb
jge
sbb
fwait
stos
jne
insl
pop
add
pop
cmp
and
adc
mov
xchg
std
call
das
into
and
cmp
and
and
mov
out
movsb
stos
std
cs
jb
mov
xchg
adc
dec
jno
adcl
xor
sbb
mov
bound
sti
sub
mov
fcomps
push
gs
cmp
inc
insb
pop
scas
xor
cld
xchg
lret
out
outsl
pop
and
scas
inc
mov
cmc
add
fmuls
jno
out
hlt
iret
xor
fistl
dec
or
lods
imul
push
je
jo
mov
xchg
movsb
add
aam
xlat
les
adc
into
addr16
inc
icebp
jp
cmpsl
jns
jle
inc
jmp
mov
push
xchg
push
mov
mov
test
mov
and
lcall
fadd
inc
mov
push
xchg
frstor
push
add
fstpt
dec
loop
jg
adc
jle
mov
mov
fidivs
jbe
addb
cmp
mov
lcall
inc
xor
in
aas
pop
repnz
sub
cmp
pop
sub
pop
arpl
mov
outsl
incl
xchg
loopne
ficoms
jecxz
sbb
rolb
sub
out
das
inc
pop
adc
xchg
pop
xor
inc
test
sub
lock
fcoms
mov
jns
imul
aaa
ljmp
pop
fdivs
addb
mov
push
jg
in
fdivrs
ret
imul
sbb
or
or
or
test
push
sbb
aaa
push
xchg
push
adc
test
std
movsb
sbb
popl
inc
out
cmpsl
push
sub
mov
inc
sbb
lahf
lds
push
int3
ret
xchg
jb
shrb
sub
jno
js
sub
ss
loop
jb
jmp
aad
mov
nop
pop
pushf
nop
mov
pop
mov
leave
pushl
loopne
mov
jle
or
inc
jle
jbe
imul
and
xchg
dec
xor
adc
lahf
jne
xchg
nop
sbb
negl
pop
es
cmp
xlat
jmp
push
add
das
out
mov
and
fs
gs
test
sahf
dec
stos
and
jnp
sarl
sub
mov
sub
loop
push
xchg
add
add
movsb
jae
rcr
xchg
fldl
lock
aad
xchg
insb
dec
mov
aad
sahf
dec
lahf
add
or
push
shll
jne
and
push
clc
mov
adc
jnp
cltd
fwait
cmp
ja
push
sub
dec
and
mov
add
lock
aaa
or
jge
inc
xor
mov
shr
xchg
xchg
mov
sbb
data16
sbb
fwait
stc
pushf
mov
xor
mov
ja
pop
or
mov
push
movsl
fs
arpl
pop
push
inc
mov
xchg
popf
cmpsb
jns
pop
sbb
aam
inc
xchg
or
push
ja
jae
and
add
fisubs
mov
cs
cs
in
sbb
xchg
xor
inc
or
daa
lea
popa
pop
xlat
pop
pushf
mov
jb
jle
out
hlt
adcb
push
mov
popf
aas
mov
push
stc
incb
mov
adc
ret
sbb
jmp
dec
push
sub
inc
aas
mov
scas
in
dec
mov
sub
mov
in
push
stc
cmpsl
cmp
add
call
sub
roll
fdivr
fadd
push
orb
movsb
test
mov
lods
mov
dec
leave
outsl
xchg
inc
arpl
sub
aam
cmp
sub
mov
clc
iret
out
xchg
sbb
cmp
stos
push
call
sub
ja
nop
inc
and
push
iret
outsb
add
push
push
idivl
iret
adc
das
scas
pop
push
jae
out
mov
outsb
fstl
in
rorb
xchg
movsb
sub
cli
mov
icebp
inc
cmp
repz
pop
mov
ljmp
orb
mov
addl
pop
jge
seto
inc
insl
dec
jno
adc
pop
sub
and
adc
bound
mov
jle
sub
stos
pop
dec
sub
jmp
push
mov
jb
cs
shll
inc
enter
mov
cld
fcomps
mov
mov
into
pop
lahf
jmp
popa
xor
in
andl
icebp
idivl
dec
les
mov
add
lods
addr16
fildll
dec
dec
fisubrl
cmp
es
fcmovnbe
sub
and
aam
xchg
pop
sahf
add
xor
sbb
pop
xor
ljmp
and
xor
fistl
insb
sbb
push
mov
add
pop
outsl
and
aad
adc
mov
lods
imul
sub
test
mov
aad
push
add
outsb
xchg
jge
je
hlt
addr16
outsl
jp
or
lcall
cmpsb
stos
mov
mov
cs
xlat
pop
and
out
aam
repz
imul
aam
rcrl
mov
sti
fcoml
aas
push
aaa
mov
pop
xchg
mov
sub
icebp
rol
or
int3
pushf
sub
xchg
xor
test
dec
mov
ja
xor
pop
mov
icebp
or
sbb
jecxz
sub
fidivl
lods
divl
or
fdivl
int
jae
push
orps
fildl
push
adc
lea
fisttps
sbb
cltd
aam
stos
pop
orb
xchg
iret
and
loope
lea
out
pop
mov
and
leave
xchg
mov
scas
cmp
mov
or
xor
jmp
adc
cmpsb
pop
jmp
jecxz
or
stos
jge
and
xlat
cmp
dec
sarb
lret
push
mov
pop
or
call
mov
rcrl
xchg
push
mov
popf
dec
pop
or
shll
add
xor
dec
outsl
and
adc
pop
lea
loope
outsl
mov
pop
add
or
sub
pop
or
mov
fcoml
and
jae
loope
ljmp
push
pop
ror
jo
mov
and
inc
jmp
push
pop
lret
add
ljmp
adc
dec
inc
imul
xor
cmp
dec
loope
push
mov
mov
xchg
sub
pop
push
cmp
xor
int3
jbe
enter
gs
leave
shlb
mov
mov
stos
jno
cmp
mov
jge
popa
aad
inc
shlb
sahf
xor
jle
pushf
pop
out
mov
movsb
aad
bound
inc
and
divl
ret
scas
stos
xor
lock
push
jne
sub
aam
ja
pop
pop
test
stc
enter
mov
push
or
outsb
es
pop
into
add
ror
scas
add
dec
mov
pop
enter
or
notb
es
pusha
gs
adcb
and
xchg
jecxz
adcb
insb
dec
test
repnz
jecxz
mov
xchg
shrl
fnstenv
mov
fimuls
mov
pop
or
xlat
dec
outsl
push
sbb
nop
mov
lds
mov
addr16
gs
int3
push
stos
or
inc
cmp
movsb
pop
mov
push
jo
aas
adcb
add
pop
aam
inc
mov
push
cli
repz
data16
test
sub
fsubl
sub
sub
xchg
cmp
push
lret
mov
fstps
dec
or
jb
fiadds
mov
scas
mov
xor
popl
jne
push
fsubs
arpl
jo
push
jecxz
insl
xor
movsb
out
sbb
jmp
lret
insl
outsb
into
faddl
cltd
cltd
fstps
xchg
fucomi
rcll
cmp
push
adc
ljmp
lcall
int
sub
sbb
ss
aam
fidivs
ret
jg
jae
lock
dec
sbb
inc
pop
jl
stos
sub
mov
fs
xchg
mov
addl
dec
sub
test
out
or
hlt
push
cmpsl
leave
sahf
sub
adc
int
cmp
push
cmp
aas
insb
mov
cmp
fdivrp
aas
mov
pop
sbb
loop
in
in
push
push
or
xchg
push
lods
jl
rcrb
push
add
test
sti
adcb
call
int
aas
dec
push
jo
leave
inc
mov
or
push
jmp
mov
inc
fstp
xchg
inc
push
add
sub
call
out
ja
pop
sbb
movsl
fs
pushf
jns
jnp
mov
data16
mov
and
cmpsb
test
leave
shll
das
idiv
mov
jnp
shrb
push
fiadds
adc
xor
adcl
xchg
add
adc
pop
scas
ficomps
mov
popf
test
jnp
push
je
or
jle
lcall
in
push
pop
std
cltd
xlat
xchg
lods
mov
stos
mov
lahf
mov
push
mov
das
and
mov
in
mov
repz
ja
lods
sub
xchg
cmp
dec
out
flds
inc
pop
sahf
inc
xchg
scas
adc
and
inc
sbb
in
out
rcrb
add
sbb
push
jl
sbb
rclb
add
cmp
into
xchg
loope
push
add
mov
sbb
fiadds
pop
sbb
ret
shlb
and
sub
hlt
mov
push
pop
fisubs
lahf
pop
loopne
push
stos
pop
sub
popa
jae
jnp
lahf
mov
scas
mov
fs
loopne
lret
icebp
cmpl
test
mov
lcall
nop
cmp
loope
cmc
and
in
fidivrs
shrl
in
xchg
movsb
xchg
pushf
add
int
mov
push
loope
xor
rorb
push
int3
in
lret
lahf
hlt
or
jo
push
fsubs
in
mov
mov
stos
fisubs
pop
lret
mov
xor
negb
inc
aas
stc
daa
iret
adc
sub
add
repz
mov
scas
decb
xorl
call
jg
xchg
pop
push
pop
into
cltd
push
mov
lret
inc
stos
outsb
ret
adc
push
inc
pusha
cs
in
mov
push
test
adc
aam
sbb
adc
pop
cwtl
jns
cwtl
mov
nop
flds
test
mov
mov
xchg
dec
es
stos
dec
or
xor
sub
outsb
sbb
insl
push
js
test
push
sbb
dec
mov
mov
mov
inc
aaa
inc
mov
jbe
movsb
adc
loop
into
popf
push
mov
mov
mov
xchg
pushf
cwtl
inc
jbe
add
call
imul
mov
inc
sti
cmpsl
xlat
or
lods
mov
imul
adc
lret
outsl
pop
sub
in
imul
adc
dec
cmp
push
jbe
jns
push
int3
in
movsb
xor
fmul
add
dec
push
outsb
out
leave
in
stos
cmpsl
jno
push
push
xchg
inc
in
sbb
insb
mov
in
lahf
sahf
mov
out
lahf
jg
outsb
mov
ret
lock
aam
lods
fcompl
popf
leave
jge
movsl
popf
insl
jo
lods
mov
mov
movsb
mov
mov
or
push
sti
xor
sti
mov
lock
ja
fwait
and
mov
repz
insb
dec
sarl
loope
lods
mov
lock
and
rolb
push
out
cs
mov
push
push
add
andl
pop
mov
mov
test
test
insb
loope
push
mov
add
jnp
scas
aad
mov
cmp
mull
dec
push
mov
negl
pop
push
das
popa
inc
xchg
cwtl
mov
aad
sti
popa
int
sbb
out
iret
fwait
je
sbb
andl
stc
test
mov
mov
inc
imul
mov
sub
sub
sub
je
or
jnp
push
lds
cmpsl
jae
inc
dec
sbb
inc
stc
pusha
add
xchg
lahf
outsb
push
cld
ficomps
ljmp
add
cwtl
loop
xor
lods
sub
push
ss
negb
mov
push
push
stos
jp
test
mov
push
aad
test
lahf
out
hlt
dec
jae
cmc
and
cmp
xor
jo
mov
ss
js
scas
cmc
adc
iret
leave
adc
mov
movsb
and
xor
xor
lcall
sbbl
inc
sbb
pop
push
mov
push
add
in
push
mov
das
repnz
fildl
ja
out
lret
xchg
roll
cmp
mov
fld
xor
or
cmp
cs
push
stos
test
stos
sbb
push
add
mov
xor
popf
adc
outsb
xchg
mov
jnp
imul
nop
mov
add
add
cmc
add
pusha
and
movsl
pop
inc
cmpsl
loop
in
jo
daa
ds
mov
xor
cmp
add
inc
dec
lret
lods
push
sahf
dec
fs
cltd
push
jnp
dec
jno
or
adc
cmpsl
stc
aas
mov
sti
ret
std
ss
xchg
cmp
xor
mov
in
cmp
inc
movsl
pop
adc
cmp
stos
dec
gs
in
fndisi(8087
xchg
push
outsb
fldenv
mov
outsb
push
lods
sbb
xchg
std
cmp
xchg
dec
xlat
shlb
mov
or
jo
jecxz
push
sub
nop
add
scas
nop
adc
bound
mov
or
es
cltd
mov
int
push
sbb
gs
fldl
fsubrs
cmpsb
sbb
inc
pop
aaa
push
sub
xchg
inc
fwait
cmp
test
add
movswl
sub
or
sub
mov
aaa
add
outsb
add
push
in
dec
icebp
and
jbe
js
cmc
add
or
mov
lds
jnp
iret
jne
mov
mov
mov
and
aam
lods
mov
fs
cmpsl
adc
iret
out
sub
dec
mov
icebp
stos
dec
in
jo
outsl
or
adc
pop
pop
popa
mov
shrl
or
daa
and
leave
jecxz
scas
sbb
jecxz
jp
je
lods
push
xchg
pushf
cmpsb
stc
dec
pop
cmp
xor
lret
and
in
or
cmpsl
rcll
mov
mov
mov
ljmp
addb
pop
xor
pop
hlt
fcoml
call
in
sub
stos
test
sarb
xchg
cmpsb
or
sub
movsb
inc
and
and
xorb
gs
push
jns
adc
mov
imul
mov
cli
or
jle
mov
stos
push
or
pop
push
pop
testl
loope
lret
adc
cmp
shr
mov
iret
icebp
loope
jo
and
add
jbe
adcl
sarb
mov
push
data16
adc
jbe
mov
data16
pop
sub
add
dec
mov
xchg
fwait
and
pop
mov
push
sub
loop
pop
shlb
sarb
ret
testb
and
pop
mov
movsb
fnstcw
add
pusha
arpl
mov
xor
pop
cmpsl
jge
test
jnp
push
jno
ja
fs
jbe
and
ret
jge
xor
je
mov
push
lods
imull
and
je
xchg
mov
sub
ds
orb
lods
shlb
scas
jns
jge
scas
pop
lea
js
int
sbb
imul
pop
xor
cmpb
call
jnp
dec
popf
lcall
sti
out
xchg
fwait
aad
mov
stos
sbb
dec
sub
fbstp
xlat
lret
sbb
imul
movsb
fisttpll
lahf
fcomp
jb
and
jp
insb
jecxz
add
addr16
popf
stos
cs
mov
outsl
movsl
movsl
add
dec
dec
or
cmp
jge
push
cli
mov
mov
lock
nop
cltd
fimull
arpl
pop
dec
or
leave
cmc
xacquire
mov
icebp
and
sub
push
js
aaa
inc
gs
and
fsts
test
pop
in
adc
jge
sbb
sbb
mov
xor
xlat
in
pop
test
or
sub
sbb
dec
xchg
xchg
or
mov
pop
sbb
addb
bound
dec
clc
aad
cmpsb
gs
dec
pop
dec
in
sub
ret
mov
mov
mov
and
and
stos
sbb
or
jno
inc
add
jnp
aaa
or
mov
dec
mov
inc
punpckhbw
xor
ret
xor
push
pop
xor
cld
sti
push
fmull
jne
loop
les
add
jbe
jne
xor
lods
jbe
xchg
dec
mov
pop
add
pop
lahf
ret
iret
lds
sarl
sbb
repz
les
das
loopne
mov
sub
dec
inc
cmp
xor
cmp
loop
add
fcomp
pusha
movsl
cmp
cmpsl
ljmp
sub
lret
out
or
stc
add
jns
jp
jo
dec
lods
les
sub
sbb
icebp
imul
fmulp
mov
jo
test
xchg
into
imul
mov
aas
xchg
mov
iret
push
pop
mov
das
inc
lret
xchg
rolb
es
mov
ror
fs
push
mov
stos
ds
or
inc
mov
pushf
sbb
add
out
out
and
mov
cli
add
daa
sbb
imul
jns
inc
push
cmp
cmpb
addl
cltd
int
cli
dec
adc
mov
and
sbb
scas
pop
push
push
inc
lock
popf
nop
mov
mov
push
xchg
or
sbb
cli
repz
push
mov
mov
pushf
and
or
out
fildll
sti
dec
mov
pop
push
inc
pop
mov
in
xchg
sub
out
inc
cmp
push
sbb
xor
and
into
je
popf
inc
push
and
das
push
dec
jbe
inc
jp
jns
repz
gs
xlat
jmp
inc
xor
sub
decb
rcll
stos
sub
mov
pusha
add
outsl
imul
inc
mov
shlb
rcrl
ret
pusha
mov
inc
int3
sarl
sub
pop
test
pop
mov
movsl
inc
sbb
adc
adc
test
xchg
gs
sub
jno
sub
cmp
cmpsl
inc
fwait
stc
push
out
jle
mov
sti
vmread
lds
mov
dec
hlt
es
lock
ss
and
jns
ficompl
lcall
dec
out
jne
ss
xchg
sub
jl
mov
mov
and
cwtl
sbbl
mov
sub
mov
bnd
in
daa
in
adc
sarl
imul
pop
pop
out
mov
push
sti
mov
aam
ficoml
pop
inc
mov
int3
inc
jns
aaa
xchg
lock
cmp
mov
movsl
addr16
ds
stos
sti
imul
mov
js
sub
jl
mov
movb
jne
mov
and
jns
jae
aad
ret
sbb
pop
add
jo
fs
cmp
mov
jge
out
adc
and
pop
movsb
push
fimuls
push
xor
push
sbb
je
add
mov
inc
cmc
les
dec
inc
mov
xchg
inc
inc
jb
cmp
cmpsl
mov
jge
or
and
pop
nop
and
in
inc
dec
xor
push
push
push
cmc
adc
test
lahf
jg
dec
mov
in
xchg
sbb
and
inc
adc
and
or
lods
es
orl
ror
aaa
pop
cld
xorl
sbb
add
mov
cld
mov
jl
add
insl
fimull
adcl
test
pop
push
pop
add
aam
aas
aaa
xchg
mov
mov
daa
pop
inc
mov
cltd
inc
fistl
fildl
sub
inc
inc
pop
sub
fists
hlt
fnstsw
push
sub
inc
adc
movl
cmp
sub
xchg
outsl
in
pop
jl
pusha
dec
call
inc
addr16
cmp
mov
leave
mov
divb
mov
jle
mov
leave
fsubs
sub
jecxz
add
sbb
sahf
inc
ja
das
sub
nop
mov
lds
cmovno
xchg
shll
sarb
xlat
test
mov
mov
test
mov
push
shlb
cmp
leave
sbb
inc
ljmp
or
xchg
dec
lahf
ror
rorl
pusha
dec
push
xchg
lret
or
jle
push
movsb
xor
mov
pop
mov
rolb
loope
mov
test
jecxz
mov
and
fistps
int
cmpsl
sbb
cli
pushf
fiadds
pop
out
jecxz
out
jbe
mov
dec
mov
mov
enter
xor
addr16
lds
sti
sbb
in
jmp
cmp
jl
pop
insl
cli
jbe
mov
lods
push
gs
add
mov
mov
sub
jl
dec
dec
push
mov
inc
xchg
sub
adc
xchg
inc
std
movsb
in
push
jno
xor
mov
mov
idivl
shrl
xchg
adc
mov
sub
clc
mov
in
pop
fcoml
add
or
into
mov
jle
scas
mov
and
inc
push
outsb
lods
inc
stos
pop
stos
mov
imul
repz
jmp
xchg
add
shl
loop
add
push
stc
pop
pushf
es
mov
fnstsw
rorl
cmovge
push
icebp
fists
test
pushf
daa
fisubs
add
sub
pextrw
loope
and
dec
bound
push
pop
sar
adcb
cmp
nop
icebp
inc
xor
pop
rcrb
cmpsl
enter
lahf
in
jp
adc
cmpsl
test
es
xchg
test
jmp
fsubl
add
aaa
mov
xor
imul
adc
call
dec
jle
insl
fnstsw
lods
lea
and
and
lcall
cmpl
cmp
cmpsb
lret
push
jne
cmp
mov
addl
push
in
inc
cmpsl
add
and
pop
lret
pop
ss
loopne
test
ffree
sub
ss
inc
into
push
dec
mov
lds
aad
add
ds
sbb
or
pop
or
sub
adc
cmpsb
mov
int3
jb
inc
pop
push
mov
hlt
fnstcw
lcall
or
aas
test
pop
movsb
lcall
mov
cmp
cld
xchg
test
imul
inc
pop
adc
lret
sahf
cli
ds
cmp
stc
cmc
mov
push
dec
cli
lods
dec
and
fprem1
int3
mov
int3
fsub
stc
call
push
loopne
push
jbe
jb
jne
xor
jge
dec
fucomi
dec
ja
push
mov
push
movsl
xchg
and
das
leave
xor
icebp
and
jge
out
pop
rol
adc
sub
jb
lods
loop
push
movsb
loop
mov
push
push
jge
popl
pop
and
push
mov
repz
inc
lock
pop
scas
jmp
jp
test
and
jmp
stc
out
outsl
arpl
arpl
test
enter
pop
enter
mov
pop
mov
jl
nop
imul
mov
xor
jge
test
popa
dec
aad
jp
pusha
mov
pop
rcll
jg
out
fs
fs
push
inc
and
enter
lahf
xchg
sub
mov
movsb
outsb
mov
popa
loopne
dec
xor
cmpsl
mov
lea
mov
adc
in
adc
sbb
lea
push
int
jnp
jae
dec
cmpsl
inc
fsubs
inc
lock
insl
lahf
test
dec
sub
pop
mov
movsb
jecxz
outsb
inc
cmp
xchg
mov
jge
cmpsb
aam
std
outsb
ret
add
inc
xchg
hlt
jns
and
xchg
lret
pop
mov
mov
jb
xor
cmpsb
js
fsub
xchg
sbb
add
sbb
imul
fs
xlat
or
call
cmp
cmp
cmpsb
xchg
adc
adc
sbb
shr
rcrl
in
loopne
cmp
mov
mov
mov
das
mov
test
lock
cmp
imul
sbb
pop
push
adc
or
xchg
fcoml
mov
scas
fimull
lock
pop
push
imul
rclb
xchg
adc
jl
stos
in
mov
test
xchg
sbb
mov
inc
jnp
xchg
aad
aad
fildl
call
push
repz
out
dec
cmp
fdivr
push
jno
pop
mov
ret
dec
xchg
xor
ror
test
or
fistps
push
cmp
daa
mov
jae
jmp
test
test
jg
push
cli
lahf
int3
adc
lret
push
jp
lods
dec
push
dec
divl
lcall
and
mov
pop
in
ss
fisubrl
mov
fcmovnbe
sti
xor
andl
fists
dec
xchg
iret
mov
roll
stos
lea
mov
sub
cmpsb
inc
fldt
and
addr16
ljmp
adc
aas
pusha
and
push
insl
jne
mov
xor
leave
rolb
scas
leave
mov
jbe
adc
int3
aas
cmpsb
aas
add
xchg
sub
fadds
adc
cmp
mov
or
xchg
ret
scas
add
mov
nop
enter
loopne
sbb
movsl
ds
faddl
xor
movsl
mov
test
jl
push
in
lds
adc
rcrl
cmc
in
push
cmp
push
pusha
adc
dec
insb
addr16
fwait
cwtl
cmpsl
adc
jge
add
xcrypt-cbc
shll
stc
fisttps
jb
push
inc
ljmp
push
fnstenv
lds
mov
out
lea
and
rorb
repz
repnz
dec
dec
inc
out
mov
into
mov
dec
cmp
cmp
mov
pop
insl
jl
adc
push
sub
add
outsb
xchg
jecxz
sub
outsl
pop
nop
bound
push
xor
cmp
sub
xor
lds
jnp
into
je
add
or
push
orl
mov
mov
arpl
or
pop
sti
aas
and
stos
mov
pop
mov
fsub
call
dec
lret
sbb
pop
add
imul
dec
lea
dec
push
add
test
addr16
out
mov
sub
movsb
adc
add
cmc
subb
enter
push
xor
xor
outsl
int
fwait
ret
mov
pushf
addr16
iret
sbb
aam
jbe
mov
push
lahf
xchg
aam
out
maskmovq
xlat
pop
cmc
xchg
mov
movsb
hlt
cltd
pusha
aam
sbb
jns
mov
into
fnstcw
test
inc
xor
shll
dec
jp
mov
clc
outsl
jne
xchg
jge
mov
jno
pop
xchg
enter
loopne
fsubrl
xor
mov
and
sbb
out
shl
cmp
or
sbb
subb
xchg
push
call
ds
jbe
sbb
mov
mov
jb
jg
cmpsl
enter
fcoms
sarb
addr16
mov
push
inc
cmp
xchg
jbe
fstpl
jle
fadd
movsl
jmp
adc
mov
lea
push
das
ljmp
xor
shrb
out
mov
pop
bound
ret
movsl
sti
mov
loop
sub
divb
inc
adc
cmp
pop
bound
stos
test
or
mov
xlat
sub
push
fstp
push
out
xchg
xor
scas
repz
imul
push
and
mov
pop
dec
cmp
pop
repz
pop
aaa
mov
pop
xlat
and
adc
mov
add
cmpsl
push
mov
or
xor
push
nop
cli
mov
outsb
add
adc
lret
pushf
xlat
popa
adc
jno
mov
pop
push
sbb
dec
inc
sbb
xchg
dec
and
decb
jl
push
jmp
jg
xchg
mov
aaa
push
dec
mov
adc
inc
sub
cmp
xchg
mov
cmp
repz
xchg
mov
out
jp
iret
icebp
dec
loop
jl
out
sub
sbb
insl
sub
push
rcrb
sti
adc
test
xchg
push
pop
fdivrs
jne
cmp
cmpl
fcom
adc
aaa
mov
fwait
mov
clc
push
iret
cld
dec
sub
in
mov
xchg
pop
mov
testb
mov
sbb
inc
mov
push
and
adc
cld
scas
mov
testl
push
jl
enter
in
lret
mov
movb
jne
sbb
imul
mov
cmp
push
jns
push
xchg
pop
and
mov
push
jecxz
dec
loop
inc
add
or
adc
push
inc
aam
inc
inc
ret
aaa
daa
add
popa
int3
shr
imul
jg
popf
scas
and
subb
cs
fwait
dec
mov
daa
xor
lods
loope
xchg
dec
sahf
mov
imul
xor
inc
sbb
cmp
mov
stos
push
outsl
mov
pop
push
rcll
cli
mov
cmp
mov
sbb
rorl
cmp
sti
xor
outsl
jnp
loop
mov
cmc
jp
mov
dec
xor
test
repnz
hlt
mov
inc
xchg
stos
inc
jnp
and
in
dec
in
fadds
sbb
in
xchg
scas
cld
ret
and
dec
xchg
pop
and
stos
push
idivl
push
vcmpsd
mov
scas
push
xor
lds
ret
dec
std
or
in
xor
in
out
nop
xchg
inc
in
lods
repz
aam
out
inc
repnz
pop
mov
sbb
test
sar
jae
pop
inc
xor
mov
dec
push
and
add
pop
std
mov
adcl
add
push
mov
scas
out
fnsave
stos
cmp
bnd
dec
xchg
aas
rclb
pushf
and
jecxz
adc
js
mov
sbb
mov
xchg
sbb
or
and
test
dec
mov
sub
push
in
fs
jle
xchg
test
pop
fldcw
sbb
pop
push
sub
lock
mov
cmp
ja
je
cmp
outsl
or
gs
fdivrl
inc
mov
pop
dec
adc
rcrb
jbe
aam
and
cmp
clc
mov
daa
jo
shll
gs
cmp
jecxz
xorb
arpl
lret
lods
push
addr16
jbe
jbe
add
repnz
and
mov
orb
in
movsb
dec
in
addr16
mov
pusha
add
sbb
ja
daa
or
mov
xorl
cmp
test
push
inc
xlat
scas
jmp
lds
xchg
and
jnp
and
repnz
jbe
inc
jb
jg
enter
insb
xchg
jnp
add
je
lods
jae
ja
mov
cmp
ljmp
add
outsb
outsb
xchg
repz
movsl
sbb
pop
mov
push
fildl
fmull
lea
mov
popf
ss
jbe
ss
jne
mov
cs
pop
add
fdivrp
aas
stos
and
pop
cltd
jg
adc
jp
outsb
sub
shrl
std
xchg
mov
stos
lret
in
jecxz
dec
pop
ljmp
js
mov
and
insb
ds
mov
in
and
jecxz
fidivl
jbe
out
inc
pop
outsl
mov
fmuls
arpl
aaa
into
test
mov
push
sbb
orl
lods
inc
sbb
ljmp
bound
mov
in
push
lret
gs
adc
sbb
decl
imul
lock
rcr
hlt
xchg
shl
push
cmc
mov
loopne
xor
sti
mov
and
sahf
out
popf
sub
leave
jbe
sbb
dec
data16
xor
ljmp
addb
pop
stos
shll
adc
shll
inc
pusha
addr16
into
in
mov
push
xor
mov
push
mov
sbb
fsubrl
jo
call
dec
dec
outsl
std
mov
dec
lea
xchg
mov
test
cld
push
lock
repnz
push
fxch
xorb
in
addr16
mov
roll
lods
adc
xor
xchg
or
fwait
movsb
add
in
fs
hlt
cltd
pop
fdivrs
rcrb
insl
arpl
pusha
sbb
dec
and
dec
ret
dec
xchg
mov
inc
mov
or
fs
test
lret
call
insl
test
xor
xchg
push
mov
ret
xor
movsl
push
pop
inc
sahf
out
jne
and
mov
into
sub
sub
mov
dec
or
inc
nop
jae
cltd
add
ss
xchg
push
sbb
test
decl
mov
or
cltd
sbb
leave
pusha
sti
adc
pop
test
fmul
push
lods
bswap
clc
pop
jne
data16
pop
add
jae
xchg
lds
xor
decb
jg
xchg
lock
fwait
lds
sarb
bound
fimull
cld
cmc
rcrb
xlat
or
aaa
int3
adc
lods
and
sti
xchg
xor
mov
mov
cwtl
lods
xchg
mov
push
xchg
jnp
sub
andl
popf
fldt
mov
xor
cltd
pusha
push
in
xchg
out
inc
add
or
mov
in
adc
popf
pop
in
add
pop
mov
or
lods
cld
cmpb
xor
addr16
dec
fcomi
xchg
jecxz
mov
push
fcompp
jo
cmc
jmp
or
dec
jge
mov
add
cmp
lret
es
push
or
mov
ret
and
jge
inc
or
or
pushf
jmp
sbb
xchg
arpl
testb
xchg
lahf
sub
xchg
lret
insl
pop
mov
jnp
push
push
xchg
xchg
cmpsl
imul
sbb
inc
jno
cli
scas
iret
js
fstps
fstl
test
cli
mov
jae
jne
pop
xlat
icebp
dec
add
mov
clc
addb
xchg
leave
mov
push
mov
sti
ss
jecxz
sub
in
testl
fcompl
add
sahf
sbb
mov
out
pop
or
xchg
sub
sahf
dec
adcb
hlt
xchg
jo
xor
mov
pushf
push
ret
xchg
push
inc
mov
inc
inc
int
cmpsb
std
out
stc
pop
jl
std
jnp
or
stos
push
push
dec
sbb
sti
sub
xchg
mov
jae
add
out
mov
negl
add
lss
cwtl
pop
cmp
mov
jp
xor
loop
push
lock
inc
cs
fistpl
das
jbe
jl
sbb
in
xchg
out
cmp
jno
or
test
fildl
bound
ret
mov
std
mov
imul
js
push
cmp
dec
push
mov
and
cwtl
sbbb
aam
xchg
push
xlat
or
test
test
arpl
or
inc
leave
adc
adc
mov
cmpsl
aam
fstps
sub
arpl
shl
popa
jmp
inc
std
jae
push
xchg
popa
fwait
xor
inc
mov
adc
inc
xlat
cmp
adc
dec
or
notl
xchg
lcall
jne
fwait
into
dec
cli
out
fstpl
pusha
loopne
and
xchg
xchg
jnp
ljmp
test
shr
std
jmp
dec
inc
sbb
inc
add
sbb
fldenv
repnz
mov
jbe
xlat
adc
cmp
xchg
int
movsb
and
lret
mov
mov
pop
dec
ret
jmp
lret
pop
jns
add
cmove
test
cwtl
xchg
lods
add
sub
outsl
lea
sahf
aad
sub
fdivl
push
das
or
incl
jae
push
jmp
jl
mov
add
scas
imul
leave
and
xor
pop
je
jg
fcoms
jns
sub
lock
push
cmp
mov
test
add
push
mov
fisttpll
incl
xchg
push
or
enter
scas
push
adc
aad
stc
in
addr16
inc
or
mov
test
or
dec
outsl
inc
adc
or
push
dec
movsb
fsts
fmull
ret
js
cli
xchg
cmp
xor
sbb
mov
fucom
hlt
sbb
pop
imul
jl
inc
icebp
aaa
xor
push
sti
push
cmp
insl
xchg
in
cmp
aad
or
test
adc
ret
pop
andb
mov
rorb
dec
out
mov
cmp
xlat
stos
cmpsb
dec
arpl
loope
mov
inc
jecxz
mov
ljmp
mov
enter
pavgb
iret
xor
mov
insb
cli
xchg
into
jo
jp
rep
shlb
and
leave
rolb
sbb
bnd
and
fdivrs
stos
pop
xchg
stos
loop
insb
jns
stos
js
sbb
jge
pop
ret
lods
jge
mov
jbe
jmp
sbb
add
lret
mul
cwtl
xor
imul
pop
lret
and
sub
jnp
adc
or
pop
stos
sti
cmp
or
hlt
data16
stos
pop
sub
popf
out
xchg
jecxz
sub
ss
or
sub
cmc
push
adc
fnstsw
daa
in
ss
xchg
ret
push
out
dec
jmp
test
xor
xchg
shr
push
or
push
es
dec
out
addb
mov
imul
xlat
cmp
int
mov
push
cli
jecxz
mov
ja
shll
popa
jns
int3
pusha
mov
xchg
ret
xor
imul
sbb
sub
or
jmp
xchg
mov
sub
mov
pop
into
out
pop
inc
leave
mov
aam
std
popa
mov
fs
jecxz
gs
xlat
xlat
test
cwtl
add
call
pop
mov
incb
xor
je
mov
adc
dec
or
xchg
scas
adc
sub
inc
lds
push
cmc
sbb
ss
jge
jae
stos
xchg
popa
mov
cmp
aam
xor
inc
shrl
push
pushf
xchg
je
fimull
xchg
cmp
mov
mov
stos
or
mov
ret
mov
out
mov
xchg
insb
out
push
scas
cmpsb
test
push
mov
insl
cwtl
push
sbb
mov
push
enter
sub
std
lods
push
sarb
pop
sub
pop
push
inc
mov
and
dec
out
add
ds
or
cmp
sub
cmpsl
fucom
fidivrl
stc
cmpsl
mov
outsl
mov
add
mov
cs
xchg
dec
mov
jle
stos
je,pt
call
inc
es
arpl
and
jge
shlb
sub
xchg
adc
add
lret
xor
cmp
ret
mov
mov
hlt
ds
out
in
add
jle
sub
gs
push
jle
lahf
mov
and
in
mov
sub
sub
scas
dec
jge
pop
adc
pop
xlat
and
pop
inc
fidivl
in
lret
dec
xchg
or
pusha
popa
xor
cmp
cmp
lret
xchg
and
daa
lea
pop
xlat
dec
mov
mov
add
jle
loopne
fdivs
in
lock
outsl
lods
push
jnp
scas
jnp
icebp
repnz
dec
mov
mov
aam
out
leave
stos
jo
loop
stc
mov
push
xchg
fcomp
push
mov
dec
fs
lea
add
sbb
cld
scas
xor
dec
inc
mov
imul
scas
addr16
xchg
aam
je
adc
push
xor
mov
es
mov
in
jo
mov
cs
in
cmc
mov
js
ret
sti
add
shlb
out
imul
int
cli
shlb
test
cltd
fcoml
mov
cmp
pop
xchg
icebp
ss
pop
in
sahf
arpl
cmp
sbb
int3
mov
mov
mov
lea
add
outsl
lret
insl
out
or
mov
xchg
cmc
add
ljmp
into
push
cmp
mov
lods
sbb
fstps
das
sahf
add
adc
ljmp
rorb
btl
mov
aad
icebp
add
fwait
mov
out
mov
jp
popa
dec
xchg
add
ds
push
jno
fimull
leave
and
lcall
rcrl
bound
jb
test
xor
xor
hlt
sub
icebp
repz
into
and
add
lods
pop
xchg
cmp
jmp
sbb
imul
fldcw
or
cli
mov
jb
pop
sahf
andl
sbb
cltd
mov
sub
xor
jmp
jg
cmp
pop
inc
enter
jmp
jmp
jecxz
jl
sub
loop
mulb
mov
jle
inc
daa
xchg
jo
les
out
scas
test
js
sub
and
add
sub
pop
sbb
add
pop
into
in
insl
jne
and
test
mov
stos
add
jmp
push
movsl
xor
popa
addr16
stos
add
mov
fs
jecxz
xchg
add
pop
int3
sbb
mov
stos
test
ss
rclb
push
mov
jg
push
maskmovq
cmp
mov
loopne
leave
enter
dec
scas
imul
push
inc
test
les
movsb
outsl
pop
out
ds
push
dec
mov
leave
push
mov
add
push
sbb
mov
pop
push
popf
aad
cmc
cmpsl
mov
push
sbb
daa
push
iret
aaa
test
std
mov
mov
mov
es
std
ss
call
mov
inc
outsl
stc
test
sar
add
jns
mov
idiv
pop
sbb
sbb
pop
in
ret
decl
mov
dec
xlat
xchg
call
sbb
sti
cmp
adc
and
jmp
mov
xchg
rcll
movsb
cmp
xchg
adc
das
test
cli
lock
pusha
xchg
mov
lret
bound
iret
adc
push
push
sbb
pop
fsubs
xchg
xchg
or
push
movsb
xchg
or
and
mov
push
test
test
jle
add
pop
aad
cli
daa
test
add
sub
stos
outsl
inc
mov
mov
jle
dec
or
or
sub
inc
mov
jge
adc
pusha
jp
pop
pop
mov
mov
insb
stos
ljmp
cld
push
mov
push
ljmp
sahf
xor
sub
push
stos
jb
inc
ds
or
stos
cmp
sub
jge
mov
cli
mov
enter
sub
in
insl
dec
repnz
push
mov
adcb
popf
fsubrl
push
lds
aam
mov
dec
fldln2
es
xor
or
cmp
inc
sub
dec
inc
sbbb
push
add
pop
adc
repnz
xor
mov
ja
inc
rorl
sahf
push
shrl
pop
mov
mov
call
jno
push
mov
and
adc
cmpsb
cmp
adc
push
bound
sti
pop
les
xchg
mov
gs
jbe
mov
sub
in
cmpsl
dec
sub
mov
sub
push
add
lods
sub
inc
stos
shrl
cwtl
leave
ss
add
movb
xchg
call
test
shrb
mov
out
in
xchg
dec
jge
and
ret
add
int
fcoms
xchg
std
xchg
mov
cmp
lods
icebp
in
jmp
shlb
sbb
lahf
xor
cltd
ret
lret
jne
xchg
jmp
xor
fcmovnu
mov
mov
push
pushf
andl
xchg
outsb
shlb
testl
pop
mov
xor
imull
cmp
popf
pusha
jecxz
orl
push
add
sbb
cmp
clc
and
ror
call
dec
enter
or
cmp
test
in
push
test
daa
bound
cli
pop
ljmp
add
inc
loopne
test
mov
sbb
pop
jo
ret
outsb
fmul
jl
insl
sti
dec
and
aad
jno
int3
leave
outsl
loop
cwtl
dec
sub
pop
out
pop
fisubs
sarb
push
jl
adc
cmp
inc
xchg
insl
xchg
mov
fisttps
dec
sbb
inc
fisubs
ja
mov
gs
cltd
into
xchg
mov
adc
fmulp
and
xor
into
loope
xchg
jl
mov
push
fisttps
xor
dec
leave
fidivrs
aaa
xchg
or
negb
pushf
fnstenv
push
das
lock
dec
lret
and
jno
and
ret
loope
xor
lcall
inc
das
es
sbb
test
enter
imul
sbb
jp
out
rolb
test
paddb
jae
sbb
movsl
fstpt
xor
push
popa
xor
and
cltd
xor
movsl
jnp
sti
xlat
mov
mov
jnp
popa
dec
mov
mov
sub
out
mov
xchg
out
adc
mov
mov
xor
arpl
inc
mov
cwtl
loope
es
out
lahf
sahf
sbb
rcll
int3
loop
cltd
cmpsl
out
dec
push
lock
nop
pop
nop
jge
sbb
sbb
sub
aam
into
xchg
jle
mov
call
fisttps
push
mov
fisubrs
ja
cs
dec
outsl
xacquire
imul
mov
fldcw
jge
popa
push
arpl
ffree
xor
nop
pop
divb
jo
pop
inc
pop
mov
jle
lahf
enter
xor
mov
mov
mov
test
xchg
lret
jns
das
mov
mov
movsl
xor
xchg
jns
repz
xchg
add
pop
xchg
jnp
cli
mov
popf
shl
dec
xor
fst
sub
sub
and
mov
dec
imull
cmpsl
jmp
xor
jo
lods
cmp
mov
loopne
or
mov
xorl
push
scas
adc
xor
out
arpl
and
fidivrs
pop
ljmp
add
sahf
xor
pop
cli
lret
fs
addr16
mov
cs
mov
xchg
lds
push
cmp
adc
jmp
aas
push
scas
push
xor
mov
mov
push
in
lods
inc
enter
add
cmpsl
stc
xor
enter
fldt
jmp
cwtl
mov
add
inc
and
sbb
xchg
lods
push
lahf
fnstsw
and
hlt
cmp
jl
inc
xor
push
push
or
roll
ja
test
loopne
fs
lock
mov
mov
clc
sub
imul
pushf
inc
mov
pop
jmp
les
fidivrl
lock
divl
xchg
xor
jno
mov
les
daa
pop
sub
stos
sbb
mov
dec
in
push
out
fistpll
adc
mov
bound
jle
out
inc
clc
scas
lods
mov
lahf
push
jge
xchg
ret
xchg
mov
fs
push
jns
xor
sbb
push
mov
outsl
mov
jg
repz
lds
mov
scas
adc
xchg
aaa
mov
lret
lods
das
jecxz
sub
mov
jge
in
aaa
out
or
pop
mov
pop
fs
cmp
fbld
popa
cmc
add
push
shrb
fisttpll
xchg
xor
sub
inc
popa
mov
push
jbe
sub
cmpl
add
fwait
in
insl
testl
pop
repnz
push
enter
call
test
cmc
inc
std
inc
sbb
cli
mov
sbb
daa
cmp
add
mov
adc
or
jg
jmp
test
xlat
add
es
xor
mov
or
dec
push
jge
cltd
shll
cli
ss
imul
fsubl
add
adc
xorl
gs
xor
push
cmpb
clc
clc
stos
push
loope
aad
cmpl
adc
jo
pop
mov
pusha
stc
es
pop
dec
es
std
pop
int
outsb
into
ja
mov
jp
std
sbb
xor
mov
stos
push
mov
test
aam
in
inc
insb
call
cmp
ror
xchg
mov
sbb
mov
call
lods
jbe
push
xchg
testb
cmp
sbb
stos
js
pop
movsl
das
push
test
sbb
popf
mov
add
out
pop
js
adc
mov
push
out
cmp
adc
pop
ret
bound
shl
lcall
dec
adc
in
or
aad
sub
and
mov
fcomps
cwtl
jl
mov
xor
insl
mov
cmpl
les
roll
pop
push
dec
inc
loopne
rcrl
xchg
fidivrl
sub
test
addr16
push
outsl
lock
push
xchg
push
jo
nop
adc
lock
lods
insl
jbe
push
test
or
sub
mov
das
movsl
popf
push
xchg
mov
data16
jecxz
jae
dec
adc
ds
stos
mov
adc
subb
fucomip
leave
imul
jmp
mov
stos
sbb
cmpsl
mov
jb
dec
in
mov
js
xlat
push
adc
mov
sbb
inc
fadds
jp
ja
jle
sbb
stc
out
jp
adc
movsb
fistl
inc
mov
jo
ljmp
pop
mov
xor
push
xor
add
leave
inc
aam
sbb
cmp
adc
out
sbb
add
or
xchg
jnp
inc
sub
into
ffree
sbb
lods
jl
lock
and
dec
cmpsb
jno,pt
mov
loopne
xchg
jae
push
adc
je
push
out
fildl
rcll
push
xlat
xor
jl
pop
out
imul
ret
clc
nop
icebp
loop
inc
add
sub
fistpl
sahf
jl
mov
push
mov
mov
push
mov
repz
aam
xchg
inc
inc
ds
out
call
sbb
addr16
inc
fs
push
adc
dec
push
mov
xor
std
dec
jns
fnsave
fldl
add
mov
jp
dec
pop
push
cmpsb
popf
xchg
add
in
test
dec
push
push
xchg
repnz
js
xlat
xadd
lcall
mov
jbe
mov
mov
orb
xchg
adc
lahf
push
sub
mov
sbb
pusha
cmpsl
xchg
jl,pt
sbb
gs
pop
test
mov
xchg
or
xor
aas
repnz
mov
loopne
dec
rolb
daa
ret
ds
push
jecxz
fists
imul
leave
cmp
in
cli
stc
pushf
cld
xchg
stc
pop
in
add
mov
xor
movsb
call
popf
in
inc
ja
shlb
js
jae
push
xchg
sub
pop
jl
movsb
xor
mov
pushl
xchg
jle
push
and
idivb
test
push
jecxz
fsts
leave
xchg
push
aad
cmp
jmp
into
popa
outsb
or
jae
out
sub
mov
or
sub
scas
mov
mov
movsl
pusha
inc
lret
mov
sti
pop
xchg
cmp
out
cmpsl
cmc
push
rorl
scas
and
fildll
xor
and
sub
stc
inc
das
and
test
int3
adc
sub
push
fistpl
faddl
es
xchg
call
xor
cs
out
sbb
sbb
xchg
dec
jo
xchg
rcr
test
es
jns
sbb
mov
in
push
fadds
lds
ror
loope
dec
push
sahf
test
dec
xor
enter
test
in
add
adc
enter
push
cmp
mov
adc
add
or
jnp
sub
adc
and
test
jno
pop
mov
insb
loope
cli
arpl
push
jno
xchg
mov
inc
inc
idivb
xchg
pop
pop
fst
or
sbb
test
repnz
sbb
shl
in
and
imul
testl
cmp
cmp
data16
insl
dec
xlat
repnz
mov
push
iret
mov
scas
mov
sub
push
lock
or
fmull
pop
hlt
sub
sti
outsb
shrl
sbb
cmpsb
dec
stc
test
pop
ljmp
enter
les
cmp
cmp
rorl
or
mov
or
movsb
dec
loop
pop
in
add
imul
xchg
sbb
pop
test
xor
inc
sahf
aas
iret
push
add
sub
adc
xchg
out
dec
mov
push
loop
mov
inc
or
push
cmp
cmp
aam
adc
mov
or
jle
push
les
std
mov
cmp
push
cwtl
or
outsb
xchg
pop
mov
into
mul
pop
and
imul
add
jb
inc
sub
mov
lods
add
push
sarb
mov
push
dec
xchg
test
jp
cmc
add
arpl
push
negb
aas
in
mov
jns
or
or
addl
push
adc
adc
ss
xlat
and
mov
xchg
inc
repz
adc
sub
push
xchg
adc
add
bnd
sbbb
imull
cli
aam
mov
push
mov
dec
imul
test
inc
dec
dec
jecxz
jg
sub
sub
cmp
and
mov
lahf
adc
xor
or
inc
jnp
sbbb
xchg
js
sub
xor
xchg
mov
mov
cmpsb
cli
lock
mov
fbld
dec
ljmp
mov
mov
inc
fs
xchg
cwtl
ds
mov
movsl
outsl
adcl
dec
and
jp
lock
xchg
inc
mov
xchg
push
dec
hlt
bound
mov
scas
add
dec
test
filds
pop
pop
xchg
in
imul
adc
push
jg
add
fdivl
push
xor
lds
cmp
lea
mov
and
adc
xor
sbb
lock
ficompl
mov
daa
xlat
in
sub
data16
adc
push
mov
adc
fwait
cwtl
inc
push
arpl
xchg
cld
push
xor
add
mov
rcll
xor
dec
cmp
adc
addl
and
mov
daa
mov
cmpsl
push
add
xchg
xchg
movsb
repz
loopne
pop
scas
jb
lret
ds
cmp
mov
cltd
mov
jecxz
sbb
cmp
cmpsb
ja
ljmp
cmp
sub
movsl
lods
push
or
jmp
cmp
lock
inc
mov
adc
insl
pop
add
incb
mov
fxam
test
dec
or
mov
out
in
outsb
test
loopne
pop
mov
dec
daa
insb
mov
inc
inc
andb
popa
jb
push
out
jno
add
cli
ja
loopne
out
sahf
leave
cwtl
cmp
fnstenv
pop
jae
sub
rorl
dec
sti
ss
cmp
je
and
cwtl
jbe
repz
inc
lea
mov
pop
loop
jo
in
fcomps
sbb
push
push
mov
jecxz
dec
cmp
das
sub
lahf
icebp
and
aam
fistps
in
xchg
psrlq
sahf
aaa
pop
inc
fucom
mov
fisubs
xor
dec
pop
mov
fisubrs
add
push
mov
fwait
jmp
adc
insb
ljmp
lea
mov
test
and
test
dec
add
aad
xchg
inc
mov
cmp
or
mov
add
inc
sub
pop
mov
sbb
popf
adc
push
inc
cld
jle
xchg
stos
cmc
out
sub
repnz
jl
push
dec
xchg
bnd
and
add
orb
sti
or
pop
out
mov
mov
mov
dec
sub
adc
mov
and
xchg
cmp
sub
stos
jp
mov
scas
cmp
fistpll
push
mov
pusha
nop
hlt
bound
xlat
hlt
adc
xchg
enter
imul
js
test
add
cmpsb
mov
xor
xor
inc
cld
std
mov
adc
arpl
cmp
movsb
mov
lods
push
repnz
or
sbb
mov
mov
int
loopne
cwtl
enter
push
lret
sbb
push
ja
ds
in
dec
leave
add
pop
lods
in
mov
and
lahf
jge
jp
insl
enter
push
arpl
aaa
jecxz
mov
gs
fwait
push
push
pushf
dec
fcoml
mov
mov
icebp
in
ret
movsl
or
inc
lahf
jo
mov
shlb
iret
adc
sub
andl
xor
sarl
adc
or
and
jns
mov
dec
ds
stc
push
fistpll
test
fdivs
in
gs
and
push
mov
in
lret
and
rorl
outsl
lret
cmc
cmpsl
cmpsb
movsb
xor
mov
lock
jp
push
mov
ljmp
rclb
decl
nop
pop
in
fs
in
mov
and
clc
fdivs
addr16
scas
cli
shr
dec
xchg
cmpsl
pop
xor
enter
ja
or
mov
mov
in
adc
sbb
fidivrs
jae
js
pop
data16
dec
mov
aas
jb
test
stc
adc
push
fdivrl
mov
push
sub
leave
movsl
push
and
cwtl
test
xor
add
xchg
es
cmp
push
sub
dec
insl
ja
test
sub
sub
or
insb
fadd
out
int3
xor
mov
adc
add
enter
or
adc
insl
sbb
mov
fidivrs
xchg
xchg
pop
push
push
dec
gs
std
imul
jge
loopne
sbbb
ficoml
xor
mov
test
out
ss
cwtl
stc
mov
addr16
jno
push
xchg
sbb
shlb
jecxz
cmc
sbb
xchg
jp
push
pop
inc
xchg
push
mov
movsb
dec
lods
mov
jge
and
cmp
cli
rorb
movsb
push
lods
ret
mov
repz
xchg
inc
xchg
adc
stos
mov
cltd
adc
cmc
and
xor
xorl
jno
fadd
pop
sub
clc
stos
jb
ss
push
mov
movsb
setne
and
insl
lret
and
lret
inc
ja
stos
or
cmovno
fisttpll
dec
int
sub
cmpsb
jns
and
xchg
insb
dec
jp
mov
iret
shrl
loopne
push
repz
sbb
ret
stc
bswap
data16
insl
and
dec
ret
xchg
jl
jecxz
and
sbb
push
lods
fnstcw
sub
jge
gs
xor
ficomps
sub
lea
subl
imul
mov
push
jns
out
xchg
lret
out
jle
mov
rclb
fildl
jb
mov
sub
adc
mov
pop
jecxz
or
fldcw
icebp
orl
or
lahf
es
test
scas
push
fwait
mov
sbb
icebp
add
and
jl
jl
dec
jg
xor
idiv
stos
shl
loop
lret
lahf
outsl
or
aam
pop
fstpl
pop
out
insl
add
lret
dec
ret
imul
addr16
lods
or
lahf
test
lahf
scas
lcall
sub
icebp
andb
loopne
ret
dec
jge
jecxz
and
jae
cld
inc
sbb
in
in
xor
add
mov
dec
adc
inc
cmp
jmp
out
cmpsl
xchg
in
cli
insb
fstl
xor
and
pop
out
lret
out
stos
punpcklwd
shrl
pop
clc
shlb
lret
lret
and
mov
imulb
pop
and
les
sub
push
lahf
rclb
nop
and
xor
mov
sbb
in
pop
xchg
pop
dec
loop
fimuls
mov
lahf
mov
rorb
insl
adc
sbb
and
dec
and
lock
dec
jg
fwait
jno
lahf
jle
sbb
cltd
sbb
mov
and
popf
pop
repz
lahf
imul
dec
das
sbb
jg
std
mov
out
and
iret
jno
xchg
aad
mov
icebp
mov
push
lcall
arpl
xor
xchg
test
jbe
fmul
test
ljmp
scas
mov
shl
rcrl
jl
xor
adc
cmc
cwtl
pop
out
xchg
cs
movsb
in
cwtl
sub
sarb
mov
popa
adc
xor
xchg
inc
lret
mov
or
add
movb
lahf
cs
pushl
addr16
add
push
hlt
stos
pop
mov
adc
push
cli
sub
movsl
cltd
test
hlt
bound
mov
and
pop
test
shrl
cmc
repz
addr16
jne
fistpl
or
and
popf
movsl
mov
hlt
jle
push
pop
insl
pop
xchg
cld
popf
call
or
lods
jecxz
dec
imul
sub
mov
jl
mov
mul
ret
movsb
cmp
lahf
lods
cmpsl
cmpsl
jmp
arpl
aaa
cli
outsb
mov
or
in
pop
mov
cmp
add
pop
push
ja
sub
dec
ret
aas
push
jmp
sub
sbbb
mov
inc
add
stc
imul
pop
lods
mov
arpl
fdivrs
leave
dec
lcall
mov
jbe
sarb
sbb
shll
popa
mov
or
mov
adc
mov
inc
or
xchg
lahf
dec
jl
std
push
lds
and
mov
cmp
jbe
xor
adc
imul
test
push
cmp
mov
int3
lcall
js
inc
inc
fistps
enter
fwait
pop
push
jmp
imul
mov
sbb
incl
xor
shll
inc
mov
hlt
sbb
inc
cli
sub
inc
adc
sar
aas
ss
popf
leave
imul
cmp
je
ret
and
dec
xor
ret
sub
lock
add
fadd
jo
cmpsb
mov
mov
xchg
pop
lods
jns
mov
mov
and
test
jmp
sub
xor
data16
jbe
divl
mov
outsb
jmp
nop
cmp
rclb
je
std
sti
mov
out
sub
xor
ss
push
xchg
lock
xor
ret
stos
mov
sti
movsb
inc
fadds
xchg
sub
xchg
outsl
push
flds
mov
fnstenv
int
and
sahf
mov
inc
mov
movsb
dec
fistl
and
xor
push
or
movsl
daa
rolb
jne
outsl
fistps
xchg
in
push
mov
and
cmpl
test
mov
cmpsb
pop
or
lods
imul
xchg
jbe
cli
xor
cwtl
lods
cmp
aas
pop
pop
call
rcll
sub
xor
fwait
xor
les
pop
sub
rcrb
push
mov
push
fstpt
inc
jg
test
sub
repnz
or
mov
lods
and
inc
cwtl
in
cmp
in
fcoml
pop
inc
bound
shlb
lods
cmp
cmp
fwait
xorl
pop
lods
scas
xor
mov
outsb
push
into
nop
jo
mov
push
data16
js
cli
mov
add
xor
int3
cltd
jmp
cmpsl
cmp
jecxz
mov
xor
mov
fsubl
push
xchg
out
jle
adc
pop
sbb
aam
clc
push
fwait
jecxz
test
adc
lret
adc
xchg
mov
mov
dec
and
dec
cld
in
push
and
int
icebp
rcrb
ret
mov
rcrl
sub
jle
xor
sbb
gs
inc
fidivs
test
push
cmp
fisttpl
insl
shll
or
cli
mov
push
inc
mov
adc
popa
mov
idivl
xchg
dec
lods
sti
push
setns
cmp
int3
loopne
pop
lods
scas
adc
repz
out
xchg
shlb
daa
aam
cli
insb
adc
sub
xor
popf
mov
out
jmp
mov
ds
dec
stc
aad
hlt
cwtl
mov
sti
int3
sub
sub
pushl
sub
dec
dec
xor
call
dec
pop
stc
mov
jnp
pop
insb
in
call
in
rolb
dec
cs
cmpb
xchg
push
int
pop
imul
xor
jbe
jbe
or
lahf
mov
adc
ret
aam
popf
mov
xchg
sub
movsb
orb
adc
sbb
mov
movsl
mov
xchg
out
loopne
les
mov
xor
sbb
push
pushf
scas
mov
test
js
mov
in
daa
adc
fcoms
push
pop
push
jle
push
loopne
jecxz
stc
xchg
bound
sti
in
inc
mov
fdivrp
jb
inc
jne
in
cmp
mov
mov
ret
incl
std
hlt
cmovns
sub
xchg
test
jno
lcall
enter
sub
out
int
sub
lds
mov
ret
inc
mov
jnp
jno
mov
addr16
push
fsts
inc
ja
dec
jge
jle
lahf
jns
adc
lahf
xor
ficomps
and
push
dec
fisttpll
cwtl
mov
pop
jnp
mov
shll
icebp
sbb
int
lahf
pop
cmp
cmp
int3
mov
lds
lret
lock
sub
imulb
aam
jnp
outsb
dec
out
popa
out
call
sbb
mov
sbb
in
push
jb
aaa
pop
gs
test
fcoms
jp
dec
faddl
insb
xchg
inc
push
es
xchg
pop
movsb
inc
mov
jge
lret
iret
xor
jns
cmp
jb
mov
dec
movsl
push
jno
call
movsl
imul
or
lock
and
scas
scas
push
scas
dec
inc
mov
sbb
dec
jae
pop
mov
leave
insl
shrb
push
lret
bound
push
lock
sub
add
in
test
cmp
out
cmp
ret
and
sbb
push
cmc
into
imul
scas
or
out
loope
pop
mov
xchg
add
jnp
in
mov
mov
cmp
jne
out
xchg
es
pop
insl
adc
repnz
cltd
xor
and
xchg
bswap
in
stc
hlt
xlat
sbb
mov
mov
cmp
cwtl
jg
mov
sbb
lock
mov
or
arpl
or
movsb
icebp
arpl
loop
loopne
dec
xchg
neg
ffree
inc
nop
loop
sbb
xor
mov
mov
or
fmul
inc
lcall
dec
js
mov
mov
xchg
mov
xchg
loope
inc
mov
mov
lea
mov
mov
and
in
mov
int3
push
repz
imul
ja
fldl
repnz
dec
cwtl
mov
push
sub
outsb
add
add
mov
mov
or
out
cmpsb
ret
inc
in
arpl
dec
cmp
and
loopne
adc
ficoml
xchg
sahf
dec
jl
arpl
dec
mov
xchg
dec
add
test
adc
add
xchg
pop
push
push
cmc
aad
pushf
mov
sti
test
jne
icebp
mov
jg
pop
adc
push
sbb
loop
adcl
sarb
sbb
arpl
push
and
ret
push
cmpsl
iret
or
add
xchg
lods
cmp
in
leave
notl
mov
repz
jge
sbb
add
ficoml
xchg
add
ss
fidivrs
push
dec
ret
dec
xor
filds
js
out
jo
xchg
loop
inc
push
inc
ficompl
icebp
sar
fldl
iret
mov
mov
jg
push
fcoms
lock
test
mov
mov
push
inc
sub
bound
cltd
stos
cmp
lea
arpl
mov
and
shl
sbb
call
lahf
ds
leave
push
leave
inc
mov
cs
mulb
mov
lds
or
mov
or
dec
dec
xor
mov
push
dec
imul
loopne
xor
mov
test
mov
pop
add
inc
push
dec
jae
inc
sbb
xchg
push
pushf
sbb
push
dec
cmp
or
scas
clc
mov
xor
xlat
fnsave
inc
sarb
leave
out
push
test
mov
test
out
inc
fisubrl
jo
pop
jp,pt
push
lods
pop
push
mov
cmp
xor
jb
inc
cld
aad
pop
xor
mov
mov
pop
pop
ret
mov
insl
fxch
inc
loop
fidivs
sarl
xor
inc
adcb
incb
scas
int3
jle
xor
aaa
mov
lods
hlt
rcll
mov
mov
lret
les
imul
pop
push
jns
js
inc
add
mov
mov
push
insl
mov
mov
mov
mov
int3
loopne
or
arpl
test
push
daa
ljmp
lret
push
imulb
popf
lret
pop
xor
dec
push
icebp
movsl
pop
daa
lods
xchg
xor
lock
repnz
std
int3
imul
ss
int3
push
sub
sub
mov
jp
pop
inc
xchg
into
je
mov
fstpt
imulb
les
push
sti
push
push
rcrb
or
sub
sti
dec
testb
mov
ret
adc
mov
and
loopne
int3
sbb
xchg
nop
mov
adc
dec
cmpsl
add
test
in
lods
push
mov
ja
scas
add
mov
stc
sbb
loope
xchg
pop
gs
pushf
idivl
popa
push
cmp
sbb
shlb
js
inc
xor
outsb
out
pop
mov
push
sbb
test
outsb
pusha
ss
adc
stos
mov
cmp
lahf
inc
jle
hlt
iret
iret
ds
push
gs
dec
fwait
jmp
out
rcl
push
popf
push
sub
xor
jbe
mov
iret
push
xor
les
pop
pushf
sbb
lea
push
cmp
add
or
sbb
aad
aad
js
mov
xchg
sbb
xchg
sub
xor
jle
shrl
mov
stos
xchg
inc
in
stc
jbe
sarb
lahf
cwtl
adc
dec
scas
gs
dec
or
stos
insl
sub
outsl
in
sti
adc
popa
in
stc
fistps
adc
push
mov
ss
dec
jb
mov
gs
ret
out
outsb
adc
add
test
cltd
mov
inc
inc
pop
or
add
dec
out
mov
pop
push
sub
xorl
push
sub
out
dec
and
shlb
mov
mov
dec
mov
hlt
mov
jmp
outsl
in
mov
sahf
dec
mov
pop
add
lea
call
mov
mov
mov
leave
dec
out
jbe
inc
adc
sbb
pop
mov
mov
sbb
add
xchg
icebp
pop
ja
add
xor
xchg
aaa
out
fcomip
lcall
jne
hlt
pop
mov
jge
gs
mov
mov
sbb
mov
pop
dec
sahf
pushf
das
faddl
pop
repnz
mov
jbe
ret
pusha
xchg
sbb
dec
inc
fidivl
xchg
pop
icebp
mov
push
andl
sbb
mov
aaa
popf
popa
ficompl
and
lock
std
gs
adc
clc
adc
sub
shll
test
int
lock
inc
cmp
cmp
mov
cmp
dec
sahf
movsb
dec
les
imul
cmp
mov
push
xor
xor
push
ljmp
push
ret
clc
or
adc
add
divb
xchg
cs
xor
add
rclb
xchg
pop
cwtl
clc
xchg
push
mov
repnz
jl
sub
shrb
fwait
sub
jl
or
inc
xor
and
sbb
add
das
je
inc
sub
cmp
xchg
pop
lahf
dec
arpl
nop
push
enter
or
sub
push
cmp
mov
mov
add
mov
pusha
movsb
push
inc
push
hlt
ja
or
mov
aas
xor
rcrl
add
mov
sbb
shl
idivl
sahf
mov
cmp
mov
add
mov
mov
pop
das
int3
hlt
lds
mov
fnstcw
cmp
fs
sti
push
cmp
add
inc
sbb
cmp
leave
sub
cmp
cmpsb
cmove
and
mov
mov
mov
in
lods
lret
mov
into
sbb
iret
dec
push
add
adc
inc
js
clc
cli
push
mov
pop
push
sub
push
push
insb
pop
leave
out
mov
fists
push
sbb
std
sub
sub
xor
iret
mov
push
iret
pop
or
mov
data16
int3
inc
push
lock
fwait
jl
lahf
push
leave
add
fmulp
sbb
and
add
xchg
and
lock
and
arpl
adc
into
adc
loop
fdivrs
sub
out
inc
add
or
inc
sub
and
orl
xchg
dec
xchg
add
inc
addb
stos
push
mov
cmpsb
adc
jl
mov
lret
xor
cltd
daa
adc
mov
test
sti
xlat
enter
push
jb
push
xchg
sbb
mov
scas
xchg
fwait
and
fbld
pop
dec
and
sbbb
test
mov
mov
cmpb
and
or
test
enter
cmp
push
push
lods
mov
pop
add
pop
mov
mov
out
xchg
ret
jmp
out
mov
push
nop
inc
xchg
pop
les
mov
dec
shrl
mov
and
dec
pushf
call
sbb
testb
aad
enter
pop
add
std
xchg
sahf
push
xor
sub
stc
cmp
or
mov
in
adc
outsl
and
add
in
cli
mov
xor
xor
push
out
pop
lea
push
test
pop
inc
scas
lret
inc
push
jp
ficompl
dec
xor
sbb
pop
mov
insb
jge
mov
ds
hlt
loop
pop
cwtl
or
es
mov
pusha
lods
mov
lds
pusha
mov
or
jns
je
cmp
mov
dec
movsb
pop
cmp
insb
mov
and
sbb
mov
adc
mov
test
xor
push
aad
mov
mov
or
pop
push
push
mov
jno
stos
jmp
mov
lock
xchg
ss
cmp
sbb
faddl
aad
lods
xchg
dec
xor
cs
mov
dec
adc
xlat
cmpsb
dec
ret
lods
lods
test
inc
and
xlat
mov
ficoml
fisubrl
iret
sbb
lods
mov
fisubl
cmpsb
mov
call
outsl
fldl
cmc
inc
push
sbb
mov
ret
pop
and
rorb
stc
dec
icebp
fistl
in
push
jge
push
sbb
pop
je
xchg
push
fstps
xchg
mov
jbe
fimuls
in
in
movsb
mov
push
or
out
xchg
add
cmpsl
sub
imul
mov
adc
jbe
cmp
cmpsl
out
lds
outsl
add
adc
sti
cli
jns
mov
xor
jmp
in
repz
jmpw
pop
pusha
ret
push
pop
rcrl
or
lcall
sub
arpl
add
or
arpl
iret
mov
test
sub
pop
in
mov
loop
xchg
dec
pop
push
add
push
push
cmp
js
push
and
ficompl
or
ja
hlt
repnz
mov
inc
int3
ret
mov
les
ljmp
xlat
sub
xor
mov
sahf
das
mov
leave
ljmp
adcl
fwait
add
inc
adc
and
stos
mov
cmpsb
mov
xor
mov
lahf
inc
sub
cld
ror
int3
das
jb
adc
out
cmp
inc
test
sub
inc
in
imul
fwait
pop
loopne
pop
xlat
sahf
push
and
mov
inc
mov
adc
jo
jae
pushf
pop
sbb
jl
xchg
ficoml
xor
cmp
aas
push
incl
jbe
shrl
jnp
pop
loop
push
jecxz
inc
mov
andb
sub
test
push
sbb
in
ljmp
dec
adc
movsb
jb
popa
cltd
arpl
mov
and
mov
jle
mov
filds
and
push
jnp
out
sbb
xchg
fistpl
cld
insl
xchg
sbb
pop
js
mov
pop
ret
mov
jo
sub
aad
das
fsubl
cmp
insl
lds
dec
jp,pn
sbb
push
mov
jns
loop
and
into
mov
push
mov
test
xor
bnd
aas
test
ret
sbb
and
mov
pop
loope
clc
sbb
push
scas
test
icebp
scas
pop
lcall
jmp
pop
mov
imul
sub
movb
push
dec
fwait
push
pushf
cmp
adc
js
cmc
cmpsb
pop
cmp
sbb
inc
mov
stos
lcall
inc
jb
lret
pop
adc
ss
sub
pusha
out
mov
sbb
or
adc
add
jno
add
repnz
xor
ja
leave
roll
shlb
jmp
clc
cltd
jno
ljmp
add
aas
mov
sahf
mov
and
stos
movsb
mov
push
cli
daa
cli
pop
push
sub
add
je
sbb
mov
std
sub
test
out
pop
aad
and
pop
repnz
xchg
adc
xor
std
mov
xchg
scas
lea
lret
mov
push
in
sbb
push
lock
test
shll
outsb
in
xchg
inc
enter
or
mov
insb
push
int
shrd
aam
out
add
adcl
gs
lret
mov
lret
mov
jne
xchg
xchg
aaa
icebp
or
adc
adc
insb
xchg
lret
cmp
xor
lock
mov
out
lock
xor
adc
out
push
xor
and
into
ljmp
and
jl
fwait
pop
in
cmp
add
dec
test
jg
push
push
in
lcall
mov
mov
pusha
pop
imul
xchg
dec
push
and
jecxz
ja
push
pop
sub
or
jns
je
xchg
aam
scas
cmp
out
mov
sahf
sub
in
inc
cs
push
cmp
add
out
sub
push
jb
in
sbb
xor
jmp
sbb
aaa
das
cmp
fwait
xor
push
sbb
mov
pop
cmc
outsb
in
push
add
sbb
rorb
test
ret
subl
test
cmp
roll
ret
out
call
inc
cwtl
inc
push
pop
xor
arpl
mov
xlat
xor
mov
rcll
int3
cmpsb
push
cwtl
mov
imul
int
dec
popa
int3
repz
ljmp
pop
xorb
iret
xor
loopne
dec
int
add
adc
push
mov
out
adc
mov
push
fcmovnu
add
insb
ja
or
mov
cmpsb
imul
xchg
pusha
int
and
add
hlt
pop
mov
pop
imul
mov
dec
addr16
xchg
enter
aad
nop
fnstcw
mov
cltd
mull
addr16
sub
lea
dec
mov
add
xor
out
xchg
adc
gs
addr16
sbb
aad
pop
cltd
enter
lahf
ljmp
out
pushf
das
outsb
xchg
jg
adc
pop
nop
inc
add
pop
push
jg
dec
push
jge
lret
add
lcall
bound
sub
hlt
dec
mov
or
fisubs
lock
xchg
sub
mov
xor
repz
cmp
lret
test
rorb
dec
ror
mov
xchg
ljmp
rorl
push
lea
jno
cld
ret
hlt
jg
lods
in
rcll
xor
ret
mov
pop
adc
xor
xchg
dec
dec
into
cmpps
pop
jne
sti
push
mov
fsubrs
mov
lds
mov
daa
mov
inc
push
or
push
pusha
cmp
stos
xchg
inc
pop
push
add
sbb
scas
scas
mov
pop
mov
mov
xchg
jo
shrl
dec
xlat
push
cwtl
fwait
nop
cmova
lods
jmp
ja
xchg
repz
stc
adc
mov
or
inc
jbe
mov
popf
adc
cmpsl
push
loope
or
cs
loop
adc
xor
mov
mov
dec
fwait
dec
jns
sbb
pop
popf
pop
pop
add
cmpb
or
shlb
sub
mov
add
pop
mov
fnsave
gs
inc
test
pop
addr16
add
pop
lahf
mov
iret
push
cwtl
jmp
pop
sub
mov
push
inc
jnp
xchg
sbb
data16
dec
push
loop
xor
int
lock
shll
push
or
cmp
test
sub
fucomp
loop
mov
int
aaa
lods
xchg
gs
dec
inc
push
daa
jb
test
cmovbe
jb
inc
mov
inc
scas
jg
jle
movsb
mov
add
outsl
pop
add
fdivrp
cmpsb
repnz
or
orl
push
push
test
cwtl
inc
sub
add
jae
mov
das
push
push
lods
loope
cwtl
mov
or
xchg
icebp
mov
and
mov
or
push
pop
adc
sbb
stos
data16
mov
pop
mov
mov
leave
push
push
mov
test
add
cmpsb
je
call
jnp
jecxz
or
mov
lea
mov
clc
or
cmp
shl
gs
xor
fisttps
jne
je
mov
and
rclb
in
je
das
loop
lret
das
inc
nop
std
call
add
ret
pop
aaa
inc
rorl
arpl
out
popa
je
dec
mov
adc
jns
add
jb
test
pushf
sbb
sub
sti
pop
jp
call
loope
dec
push
jbe
xchg
xchg
mov
negl
push
add
pop
or
testb
fcompl
int
scas
push
iret
adc
and
cmp
cmove
int
dec
das
or
pop
mov
push
mov
imul
les
cld
mov
add
and
movlps
shl
psubq
arpl
sub
fwait
daa
cmpb
adc
mov
mov
adc
push
mov
or
and
dec
out
das
mov
dec
lea
jp
notb
jns
ja
mov
lret
jnp
pop
push
and
les
mov
jnp
mov
out
mov
mov
dec
push
std
int3
mov
loop
dec
and
lret
push
mov
xor
dec
inc
int
ds
repz
or
in
push
lret
movsl
or
jg
push
fisubl
cmpsl
imul
fdivrl
sahf
loope
in
test
cli
push
aad
dec
loopne
scas
pop
xor
out
sub
das
or
jae
repnz
mov
add
jle
fmul
fidivl
cltd
fisttpll
call
in
fists
cwtl
cmc
shlb
nop
dec
je
pushf
or
adc
cltd
push
fldl
pushf
jecxz
sbb
fcompl
int
repnz
or
and
pop
std
shrb
dec
mov
arpl
cli
popf
roll
clc
xchg
je
les
cmpsl
sbb
add
movsb
cmp
imul
sbb
fwait
sub
loopne
or
xor
lahf
push
xchg
outsl
faddp
dec
fdivrs
insl
fnsave
int
dec
sbb
mov
gs
inc
dec
mov
dec
cmp
mov
fstps
dec
jmp
mov
and
add
or
test
fidivs
mov
rcrb
ret
or
inc
mov
mov
lods
fistps
das
add
adc
test
mov
pop
xorl
pop
fidivl
out
sbb
mov
add
mov
inc
repz
xchg
jae
jmp
mov
jnp
in
jg
cmc
and
insl
sub
data16
out
or
es
xchg
xlat
fstpt
aam
dec
xchg
repnz
mov
lock
dec
dec
push
out
lea
ljmp
jne
and
out
outsl
test
in
mov
cmpsb
jbe,pn
shrl
or
xor
out
mov
in
cmpsb
mov
iret
or
fwait
or
out
rcrb
ja
aam
lods
imul
imul
mov
push
add
xchg
mov
aam
test
lea
popa
aaa
mov
xchg
jbe
cld
aaa
push
mov
out
jge
xchg
cwtl
sbb
outsl
mov
jno
cmp
push
jo
in
xchg
lock
cmpsl
fmull
fidivrl
sub
loope
xchg
iret
mulb
sti
jno
or
incb
in
imul
cmc
adc
ljmp
sub
ret
add
in
pop
hlt
inc
dec
decb
cmpl
loope
clc
push
jns
imul
adc
jb
pop
cmpsb
jno
and
mov
lret
mov
enter
or
mov
test
mov
fs
push
jb
push
loop
cmp
sub
stos
sbb
pop
pop
hlt
cmp
test
mov
in
mov
cmpsb
cmpsl
pop
xor
ds
lret
rclb
loope
lods
ds
pushf
fists
push
hlt
mov
pop
inc
lret
pop
xchg
imul
ljmp
jne
int3
xor
pusha
clc
lds
push
bound
lods
sti
stos
mov
repnz
test
jmp
fnsave
int
fnsave
add
add
push
xor
xor
mov
jb
inc
jmp
adc
xlat
aas
push
push
fiadds
andb
mov
and
push
cmc
mov
dec
mov
xor
push
add
test
lea
stos
dec
jecxz
or
or
mov
cltd
sti
hlt
shlb
jge
fs
aaa
arpl
mov
cmp
cmp
jae
movsb
mov
and
or
jb
sbb
mov
dec
or
mov
jno
mov
mov
shlb
add
outsb
mov
inc
cmpsl
xchg
outsb
xchg
adc
and
ljmp
mov
mov
lret
mov
cld
ret
mov
pop
mov
push
fldcw
jmp
shll
roll
cwtl
out
sbb
sbb
push
mov
iret
push
loope
inc
push
jae
jns
movb
dec
js
sub
outsl
popa
cli
jns
xor
xor
cmpsl
insb
push
jae
sti
mov
inc
mov
push
pop
loop
test
fcomps
jmp
scas
fcompl
xor
adc
xchg
dec
sbb
sbb
push
loop
sbb
jp
inc
adc
lock
sbb
push
repz
imul
testl
das
imull
loop
test
pop
ret
icebp
stos
into
push
xor
fcmovbe
jl
mov
gs
mov
mov
push
sbb
std
xchg
lea
sub
xor
ror
jmp
arpl
xchg
mov
mov
push
or
int3
and
sbb
scas
popf
push
insl
inc
mov
dec
jge
jne
pop
outsl
or
out
sub
xchg
mov
daa
cmp
sub
in
popa
cli
gs
push
jg
subb
add
push
insl
inc
mov
cmp
fiadds
mov
sub
xchg
mov
sbb
push
cmp
ret
pop
xchg
mov
or
xor
bound
fstps
stos
xchg
push
mov
cmp
mov
xor
xchg
ret
dec
out
cwtl
jmp
jg
mov
mov
insb
inc
aaa
rcl
out
lahf
push
sarb
mov
into
int3
fndisi(8087
mov
stos
or
xchg
dec
adc
jns
je
mov
je
lds
sti
repz
or
repnz
pop
pop
push
sub
inc
rcr
xchg
pop
adc
jge
xor
mov
arpl
sarb
popa
mov
ret
jge
inc
insb
sbb
cwtl
mov
les
xor
dec
cmc
pop
int
inc
adc
cli
mov
inc
or
mov
add
fbstp
push
cmc
lods
out
sbb
push
test
xor
ret
stc
adc
jns
mov
jb
movsl
adc
sbb
popa
push
test
mov
add
inc
push
or
into
scas
scas
call
and
lret
das
add
rorl
adc
lods
or
inc
mov
hlt
stos
movsb
movsl
fucomi
adc
stos
mov
jl
cmpsb
inc
jbe
scas
sbb
stos
push
sbb
rcl
lock
adc
pop
push
sub
js
and
sbbb
shrb
push
cli
jle
outsl
adc
dec
jnp
and
outsl
sti
dec
cmovg
push
inc
push
push
jp
test
pop
pushf
cltd
cld
fadd
add
jmp
add
mov
jmp
stc
cli
cwtl
xchg
add
cmpsb
clc
repnz
cmpb
mov
push
repz
add
imul
sti
xor
subb
mov
or
cltd
mov
mov
mov
mov
inc
cmp
lcall
adc
inc
mov
es
add
push
gs
cmp
or
popf
mov
cmp
fists
jbe
dec
and
dec
xchg
jno
jno
sti
popf
xchg
shlb
push
sarl
call
sub
sbb
imul
cmp
push
notl
orl
jge
jp
daa
or
xchg
cld
out
fistpl
sbb
xor
push
sbb
movsl
and
inc
sahf
mov
mov
lahf
adc
fcomps
add
adc
dec
jecxz
adc
hlt
jo
xchg
sbb
lds
mov
sbbb
sarl
mov
hlt
fisttpll
lock
mov
cmp
or
xchg
gs
xchg
bound
and
mov
incl
std
cmc
out
cmp
sub
ret
test
mov
mov
mov
jns
push
mov
dec
frstpm(287
call
adc
sbb
fs
inc
lea
mov
mov
mov
cmp
push
xchg
loop
ret
mov
in
or
imul
jne
ja
xor
pop
ja
les
push
ljmp
mov
call
pop
stc
add
loopne
pop
and
xor
push
xor
ds
popa
int
jo
imull
stc
inc
sbb
cmp
cmpsb
outsb
add
mov
and
add
cmpsb
pop
aad
mov
add
cmp
sub
loop
jo
das
sbb
jae
aaa
add
xchg
adc
sub
pinsrw
mov
cltd
fistpl
sbb
mov
xlat
call
outsb
dec
call
mov
das
out
shll
lea
repz
outsl
cmc
xor
push
repnz
insb
scas
scas
pop
jle
in
xor
lea
lock
mov
and
aaa
daa
ja
ljmp
int3
aas
dec
xor
fmuls
shll
insb
sub
mov
add
movsb
sbb
lret
orl
cmp
fsub
sub
dec
bound
leave
add
shr
mov
mov
daa
mov
add
idivl
mov
sbb
xorl
outsl
adc
push
lods
scas
jg
shr
push
sub
int3
insb
aad
lods
in
leave
push
mov
jmp
pop
mov
mov
push
sub
jne
mov
orl
pop
sbb
mov
or
jle
mov
aas
inc
clc
sbb
fcoml
add
push
test
stc
imul
push
imul
xchg
dec
dec
std
jecxz
popa
dec
test
sahf
mov
lods
xlat
rcrl
jle
es
mov
lds
ret
lcall
xor
orb
xor
mov
cmpsl
test
scas
test
addb
mov
xchg
push
rolb
pop
jg
pop
int3
xchg
dec
out
xor
sub
iret
xchg
or
repz
test
jl
push
jno
movsl
ljmp
push
lret
stos
pop
or
int3
cmc
imul
cmp
aad
ret
lods
clc
gs
mov
jge
and
jo
pop
mov
mov
sub
sti
pop
test
and
imul
adc
out
adc
mov
add
je
push
scas
xchg
and
dec
lds
pusha
push
mov
daa
mov
xlat
std
fisttps
daa
mov
sbb
imul
push
sbbb
in
or
aad
popf
lret
push
adc
dec
test
or
push
adc
nop
add
sub
pop
mov
push
js
int
mov
out
sbb
dec
dec
mov
xchg
mulb
aaa
stc
add
add
inc
popa
iret
jae
lea
xchg
jge
adc
or
mov
push
lcall
ret
inc
mov
pop
pop
mov
mov
aad
cmp
iret
or
add
scas
lea
jp
xor
fidivrs
push
stc
outsl
ret
in
loopne
loope
stos
sarl
je
iret
imul
loop
pusha
lock
or
sbb
sbb
sub
mov
jo
mov
arpl
fiaddl
cmc
jecxz
fcompl
les
cmpsl
call
into
inc
fisttpl
mov
jl
push
jp
adc
data16
or
fwait
dec
popa
push
mov
and
leave
rol
lds
push
inc
dec
in
hlt
mov
and
scas
subl
pop
xchg
jge
add
popf
lret
outsb
jle
pop
in
scas
mov
pop
mov
ja
jb
dec
dec
lods
mov
sbb
es
ljmp
stos
jb
cli
fdivs
push
and
adc
fldenv
inc
cmc
popf
jb
cwtl
cmpsb
sar
mov
lret
jns,pn
xchg
fwait
cmpsb
daa
ds
xlat
mov
dec
cld
inc
push
jo
aaa
inc
cli
jo
mov
xor
cmp
mov
mov
push
sbb
mov
clc
ds
mov
mov
mov
test
leave
jb
pop
pusha
fucomp
dec
sbb
and
jae
xor
adc
push
in
ds
int
or
mov
in
jno
jns
pop
arpl
dec
cmc
int
loopne
cld
sub
or
fsubr
inc
mov
sub
movsl
aad
stc
clc
shrb
jl
movsb
jge
test
dec
push
hlt
jbe
jl
mov
fistpll
mov
jge
cltd
xchg
xor
jge
push
cmc
push
jnp,pn
fs
mov
data16
pushl
ja
or
test
outsb
cld
add
xchg
cmpsb
jnp
xor
pusha
pop
sbb
push
xchg
movsb
adc
and
mov
jmp
jecxz
push
lahf
sbb
jp
jno
sbbl
popa
push
shrl
push
inc
lret
loopne
push
in
push
push
incb
in
mov
out
jg
mov
pushf
xchg
mov
fsubrl
ljmp
into
movsl
clc
aas
lcall
lock
pop
inc
dec
js
cltd
mov
outsl
dec
add
jg
pop
xor
mov
jne
xchg
fcmovnu
stc
insb
push
push
mov
fwait
pop
repz
sub
nop
push
push
jge
or
ja
sbb
add
cmp
mov
lods
jo
and
or
sbb
ret
mov
sub
insl
jbe
testl
fldln2
mov
fnstsw
fildl
pop
nop
mov
sbb
sbb
ds
cmp
jge
mov
hlt
outsl
inc
addr16
fpatan
sbb
cli
ds
das
cmpsl
mov
fcompl
xchg
inc
mov
mov
xor
loop
mov
dec
dec
cmp
sbb
ljmp
mov
mov
sub
push
jmp
lods
push
cmp
cmp
repnz
adc
add
ss
lods
push
adc
scas
jg
adcl
hlt
lcall
mov
jl
outsl
pushf
frstor
pop
adc
sbb
imul
adc
fstpt
in
loopne
or
push
mov
adc
shrb
mov
popf
outsb
insl
int3
mov
lock
pusha
in
xchg
sarb
leave
xchg
fistpl
adc
or
ja
sbb
lds
cmp
add
dec
mulb
mov
into
pop
push
cmp
sbb
mov
test
xor
cltd
adc
xchg
js
movsl
push
lea
sub
lret
loop
xchg
lods
in
push
jp
out
and
xchg
xchg
cmpsb
gs
and
mov
movsl
mov
fisttpll
shr
hlt
sbb
sbb
mov
mov
and
mov
cmp
sub
imul
mov
push
iret
pop
dec
inc
mov
cld
xchg
jecxz
outsb
scas
mov
loope
decb
mov
fdivl
dec
ja
sub
ja
leave
and
ja
mov
into
xlat
fcom
cmp
push
jno
negb
inc
je
adc
lretw
notl
add
iret
jns
cld
dec
pushl
lds
xor
push
enter
outsb
fsincos
movsl
and
orb
lds
bound
jae
mov
mov
leave
inc
sbb
push
mov
mov
inc
cmpsb
push
xlat
cmpsb
icebp
jecxz
data16
xor
cmp
movsl
aas
cwtl
mov
stos
orb
divb
mov
and
sti
mov
push
xchg
fcmovbe
mov
sbb
and
add
pop
sub
outsl
push
inc
into
dec
inc
or
pushf
add
mov
and
or
cmp
mov
cli
xchg
xchg
xor
mov
sub
dec
adc
sarb
cmpsl
or
insl
push
and
mov
or
sub
shl
das
sbb
data16
das
enter
adc
pop
and
sbb
xchg
lret
stos
loope
sbb
cmp
aad
push
rcrl
mov
repnz
xor
aad
adc
cmp
in
mov
push
outsl
mov
dec
push
xor
xor
repz
pop
hlt
in
les
or
dec
add
mov
or
jae
je
xchg
mov
jae
jnp
xchg
repnz
in
scas
adc
jmp
add
mov
popf
das
push
dec
imul
dec
repz
xor
mov
ret
sub
insb
mov
cmp
decb
or
mov
add
stc
push
cmp
imul
rcrl
push
sbb
add
scas
adc
mov
sbb
jb
in
sub
jg
je
std
daa
inc
adc
pop
mov
sub
movsl
fisubrl
insb
movsl
sbb
xchg
pop
pop
push
and
movsb
adc
xor
mov
xor
fxch
xor
in
test
test
shlb
dec
mov
cwtl
std
pop
pushf
test
addr16
subb
shl
push
clc
pop
adc
jbe
andl
jae
in
sarl
sti
push
loope
aas
sti
dec
push
and
push
enter
and
dec
cld
dec
sub
out
xlat
xchg
add
ret
adc
lods
hlt
out
aas
pop
js
loopne
dec
movsb
dec
in
mov
call
fucomip
mov
outsb
popw
add
xor
sbb
mov
sbbl
ss
inc
xor
jbe
mov
stos
test
rorl
pop
and
cmpsb
les
adc
imul
add
data16
jns
clc
push
cmc
push
sbb
or
loopne
or
jne
sub
mov
and
sub
mov
leave
dec
pop
xor
jge
into
andb
mov
outsb
mov
pop
mov
lahf
jg
mov
hlt
ds
xor
mov
jae
aad
inc
jno
adc
scas
std
mov
xor
xor
incl
insl
jb
movsb
stc
push
les
jns
pop
std
sbb
int
scas
mov
stos
or
flds
jl
sbb
mov
cs
pop
dec
rcll
jo
and
pop
cmp
dec
aad
imul
add
adc
mov
add
or
inc
test
mov
xchg
jle
mov
mov
mov
xchg
cmp
jp
jecxz
pusha
dec
push
mov
insl
in
sbb
imul
leave
pop
in
cltd
dec
scas
mov
in
pop
jge
cmp
mov
test
ret
jmp
es
mov
mov
fidivs
pop
push
pushf
sub
test
clc
arpl
mov
inc
pop
popa
push
cmp
pop
pop
lahf
stos
sbb
jp
loopne
dec
popa
cmp
xchg
mov
push
addr16
pop
xor
je
sbb
enter
add
out
add
out
mov
fdivp
xchg
daa
enter
push
jmp
shrl
or
jge
xchg
mov
mov
mov
push
push
pop
mov
out
xchg
out
xchg
sub
pop
inc
xor
push
fbstp
mov
ret
pushf
int
adc
add
jne
cmp
shll
xchg
jo
xor
fisubrs
fs
js
jmp
pop
lds
insb
add
lea
ret
jo
insl
rcrb
jae
cwtl
nop
jmp
cmc
cltd
push
mov
movsb
adc
jno
aaa
and
mov
sub
add
mov
push
and
out
mov
pop
outsb
cmp
rcll
jecxz
and
mov
aas
outsl
scas
lods
inc
js
cmp
aas
out
inc
std
or
cmpsb
shlb
ja
rclb
or
mov
lea
inc
and
aam
loope
dec
inc
stos
cwtl
ljmp
lock
orb
loope
add
bound
push
pop
in
mov
jno
inc
mov
xchg
xchg
xchg
mov
cs
repz
sub
adc
inc
add
and
cmp
cmpsl
or
lock
popf
out
ja
aaa
ja
les
testl
movsb
cmp
xchg
cmpl
in
push
mov
aad
cli
dec
outsl
pop
loope
mov
xchg
jae
add
inc
jecxz
scas
adc
xor
in
push
fildll
add
movsb
push
push
sub
dec
adc
insb
fistpl
jmp
xchg
loopne
adc
push
cmpl
mov
stos
leave
insl
jp
pop
cmpsb
fxch
inc
hlt
cs
cmp
les
lcall
and
out
pop
adc
and
xchg
dec
inc
jne
mov
sbb
ja
filds
push
scas
int
and
xor
adc
lcall
mov
outsb
add
mov
push
enter
imul
into
cs
cwtl
dec
test
jmp
sub
loopne
aas
xchg
mov
ja
dec
dec
das
ret
adc
dec
repnz
les
push
clc
fstp
push
dec
shl
nop
pop
push
lods
dec
cld
adc
push
xor
sub
adc
ret
mov
mov
cltd
pushf
sbb
das
das
in
mov
pop
sub
lds
sub
lret
shrb
mov
xchg
jmp
adc
addr16
loope
sahf
push
lahf
scas
push
stc
inc
adc
pop
inc
sbb
or
push
cmp
hlt
sbb
imul
sbb
fsubr
lret
addr16
stos
mov
dec
outsl
push
inc
push
cmpsb
mov
jns
aaa
sbb
add
dec
jp
pop
lret
or
stc
mull
popa
test
jl
sub
cmpsb
in
adc
je
xchg
subl
xchg
rcl
out
mov
mov
mov
sbb
mov
xchg
lods
ja
out
or
add
in
in
aaa
push
or
cmp
adc
dec
jg
inc
push
and
loop
call
inc
sti
stc
addr16
ror
negb
jmp
inc
dec
dec
adc
adcb
imul
xorb
test
aas
dec
push
fwait
shrb
outsl
jge
std
outsb
ljmp
pop
fisubl
and
in
fldenv
and
sbb
lcall
lcall
jno
cmp
subb
mov
adc
loopne
jg
addr16
sbb
push
jg
mov
cmp
pop
popa
hlt
fidivrs
mov
mov
dec
out
push
outsl
jb
sbb
das
sub
stos
xchg
les
mov
jb
ja
orl
movsb
pusha
in
loope
cmp
and
sub
xor
jb
sbb
pop
dec
add
rcll
mov
dec
stc
mov
adc
repnz
mov
mov
xchg
adc
pushf
fldl
xchg
out
gs
js
imul
ret
into
loopne
or
sub
jmp
popa
cs
pushf
mov
inc
jp
scas
xchg
andb
cwtl
or
out
xchg
icebp
in
mov
cs
xor
imul
in
or
push
mov
ret
outsl
sub
sub
push
or
aaa
xor
xor
mov
lods
jmp
push
pcmpeqw
call
cld
loop
mov
adc
loope
fwait
out
outsb
daa
pop
fs
mov
lods
sti
xor
repnz
add
cmp
incb
sub
fwait
pop
jo
jmp
fildll
adc
fsubs
jge
adc
pusha
cld
test
sbb
inc
int
insb
fimuls
mov
lods
mov
mov
fwait
cld
dec
pop
xchg
lret
pop
or
adc
enter
je
xchg
xchg
lods
xchg
gs
out
cmp
mov
movsl
loop
fidivl
ljmp
pusha
in
sub
jg
mov
sti
sbb
dec
test
ret
dec
sub
push
fnstcw
mov
lods
lahf
mov
or
cmovp
mov
std
push
dec
call
xor
nop
pmulhw
push
insl
dec
mov
je
push
push
bound
pop
xchg
repz
mov
loop
cmp
test
cmpsb
les
clc
stos
ljmp
inc
scas
stc
pop
xor
stc
scas
hlt
and
adc
stos
addr16
cmp
dec
jnp
mov
jecxz
and
push
dec
xor
add
fcompl
mov
js
push
cmp
add
mov
jns
pop
arpl
fists
add
xchg
adc
add
jnp
cmpsl
jle
xor
and
ficomps
pop
xor
xchg
dec
scas
popa
dec
inc
cwtl
sbb
xor
pop
xchg
test
es
fisubrl
ret
cmpsl
jp
sbb
xchg
adc
sbb
inc
cmpsl
aaa
add
sub
xchg
pop
ret
je
or
ds
adc
ljmp
icebp
inc
mov
cmp
mov
sbb
hlt
mov
sbb
mov
fldenv
pop
or
sarb
mov
mov
cmpsb
fwait
add
fcmovb
xor
pop
lds
mov
iret
mov
sub
nop
mov
mov
mov
pop
pop
sub
xor
add
aam
ret
sbb
out
shlb
jge
sbb
mov
out
xor
test
pop
orl
dec
cmp
push
mov
inc
std
xchg
ss
movsb
stos
and
ret
dec
jl
stc
push
fisttpl
jo
add
loope
add
push
inc
into
in
mov
dec
push
lcall
adc
jl
push
mov
jmp
push
pop
movb
mov
dec
cmp
jl
cli
out
push
xchg
mov
cwtl
jl
mov
mov
mov
mov
pop
pop
dec
dec
or
xor
les
dec
and
sahf
cmpsl
sbb
imul
or
push
jg
pop
or
sbb
lahf
lods
lods
ds
sub
jge
sub
push
dec
seto
inc
jne
orb
sbbl
sub
inc
in
push
and
mov
or
dec
clc
fsubl
push
imul
insb
cmp
jo
sbb
jae
jmp
mov
cmpsl
imul
fistpll
sub
fcomps
ss
in
pop
stc
inc
aaa
and
sub
lods
test
add
push
or
pop
and
dec
xchg
dec
arpl
imul
mov
cli
aas
inc
jmp
xor
adc
mov
add
incl
ret
enter
aas
jmp
xlat
mov
addr16
adc
icebp
jle
sub
cmp
hlt
mov
lret
jecxz
cmp
inc
clc
aas
add
cmp
out
pop
adc
mov
adc
mov
jnp
jne
xor
hlt
addr16
xchg
out
mov
sti
nop
lods
sahf
or
loopne
aas
mov
sub
fldenv
pop
pop
aad
hlt
lahf
dec
lock
fcmovnbe
cmp
mov
pop
ja
fisubrl
mov
sarb
cld
cmc
xchg
pop
push
jecxz
xchg
aam
roll
adc
mov
addr16
cmp
jmp
mov
add
pusha
and
xchg
cmp
fnstsw
and
add
stc
and
es
push
in
movsl
push
pop
mov
imul
fs
jecxz
xor
push
xor
xchg
mov
ja
cltd
mov
cwtl
pop
inc
out
jge
jne
mov
jmp
xchg
cmp
test
mov
cld
ret
fisubrl
lock
mov
mov
rcrl
push
jns
scas
out
mov
std
dec
and
pop
mov
cwtl
mov
jns
sbb
xchg
push
dec
xor
lcall
add
sub
inc
scas
sbb
cs
dec
push
mov
xchg
inc
insl
cmc
nop
push
stc
xchg
inc
or
dec
jae
push
sub
imul
leave
jecxz
fwait
add
add
fisubrl
imul
adcl
adc
sbb
and
cmp
stos
xor
mov
aas
sbb
jns
xchg
mov
sbb
or
xchg
pusha
push
lock
sub
repnz
xor
push
mov
out
xor
adc
fld1
mov
andb
sbb
mov
imul
inc
cmp
inc
mov
adc
aad
lret
cwtl
js
in
jecxz
cmp
out
mov
and
sub
hlt
adcl
or
and
lea
into
jns
xchg
imul
icebp
cld
fiaddl
jge
adc
arpl
xchg
or
icebp
movsb
xchg
cmovb
jae
ret
fisttps
xchg
sahf
pop
data16
rcl
pop
pop
mov
xor
pop
push
fmulp
adc
insb
cmp
das
push
sub
imul
push
push
and
inc
pop
popa
sub
add
sbb
and
ret
sbb
pop
bound
test
push
xchg
hlt
adc
leave
jbe
add
les
shl
inc
aad
icebp
inc
icebp
iret
nop
pop
pushf
adc
mov
repz
clc
xchg
mov
rcl
inc
daa
push
or
jnp
sbb
adc
add
or
mov
inc
dec
cwtl
xor
dec
sub
clc
xchg
inc
mov
int3
jnp
xor
ret
dec
pop
jno
cmp
or
pop
dec
out
les
xor
dec
mov
sub
cmp
int3
add
enter
push
cmp
dec
push
adc
mov
rorb
and
sub
das
data16
les
jo
mov
or
cmpsl
negl
mov
jbe
jp
gs
jnp
sub
push
or
imul
add
push
sbbb
xchg
rolb
inc
fists
ret
leave
mov
or
pop
pop
lcall
mov
aaa
jle
sbb
lods
mov
js
daa
jle
sbb
mov
int
sub
bound
or
in
cmp
and
adc
mov
gs
nop
sbb
push
mov
stc
fwait
sub
and
mov
je
lods
arpl
aad
into
and
dec
sahf
je
adc
sub
sbb
dec
jp
ds
xchg
push
adc
xor
fidivrl
mov
inc
stos
sahf
push
mov
push
imul
pusha
pop
push
aad
ret
fwait
or
cmp
das
xchg
inc
arpl
cltd
test
dec
mov
and
fldl
sbb
hlt
mov
jb
imul
das
rclb
push
sahf
and
inc
pop
pop
loop
clc
push
out
dec
pushl
adc
aaa
int
sub
pop
sbb
xchg
jnp
into
jl
cmp
cmpsl
lea
add
and
or
xchg
loope
cmp
dec
dec
xor
jo
or
dec
mov
xchg
and
add
or
xchg
in
xchg
mov
and
lock
scas
sub
or
mov
pop
push
out
xchg
xchg
push
push
aam
or
jb
mov
popa
cmc
inc
inc
inc
data16
sahf
sarb
jo
movsl
push
mov
cmpb
lcall
jbe
xor
adc
fdivr
int3
jae
imul
mov
das
jb
iret
lahf
rclb
add
hlt
or
mov
fistpl
shl
inc
sbb
call
fucom
or
adc
add
add
lods
repnz
or
int
cmp
mov
stos
sbb
vpunpckhdq
mov
stc
inc
mov
in
js
fdivrl
ja
mov
roll
inc
or
out
and
jns
sub
lods
add
stos
icebp
push
push
mov
and
cmp
or
mov
hlt
mov
jle
cmpsl
push
adc
push
xor
fldenv
mov
push
movsb
loop
mov
ja
cwtl
je
jp
insl
mov
mov
add
dec
lods
cmpsl
inc
jmp
mov
or
aam
pushf
adc
mov
sbb
add
arpl
shr
cmc
rclb
aad
loop
cmp
and
roll
inc
popf
sub
mov
aaa
sbb
outsl
xchg
loopne
dec
stos
lahf
add
push
out
cmp
adc
fcoms
jae
cmp
inc
subb
popf
push
test
enter
test
addr16
inc
in
mov
sub
pop
push
daa
inc
aam
cmp
test
mov
mov
cmpsl
pop
shrl
dec
rorb
ss
adc
pop
shlb
outsb
iret
into
loope
xor
cmpsb
mov
pmulhw
xlat
dec
rcll
mov
pop
push
mov
icebp
jmp
insl
aam
xchg
lds
mov
pushf
pop
inc
lea
adc
out
mov
adc
sarl
or
mov
mov
bnd
push
add
inc
fwait
jg
fcoml
mov
iret
jmp
fdivrl
dec
sbb
imul
cwtl
or
stos
pop
int
add
negl
mov
setge
enter
dec
xchg
sbb
jbe
pop
xor
cwtl
and
inc
mov
sbb
xchg
cmp
adc
or
imul
mov
inc
jne
aam
mov
stos
fwait
insl
jg
or
mov
fs
addr16
aad
call
add
jle
mov
inc
outsb
and
pop
pop
les
or
push
pop
aas
fbstp
ret
mov
xchg
dec
mov
mov
out
xchg
imul
stc
mov
push
insl
push
loop
int3
sbb
mov
sbb
fwait
jle
cmp
xor
fistpl
rcrb
fwait
mov
cmp
ret
adc
mov
add
or
dec
sub
aaa
sbb
add
add
cmpb
push
in
inc
ss
dec
rclb
pop
loopne
cmp
inc
pop
or
repnz
push
movsb
push
adc
inc
fbstp
ret
push
jo
imul
movsb
test
fildll
jbe
daa
fwait
loope
orb
and
leave
leave
mov
fdivl
popa
fistpll
mov
pop
addl
imul
xchg
mov
mov
and
fidivrs
movsl
adc
jo
add
js
jge
jmp
mov
fistpll
or
mov
dec
call
js
popf
ffree
into
dec
inc
pop
ret
leave
jmp
bound
pop
shrb
add
mov
xor
add
pop
cmp
in
dec
imul
popa
outsb
inc
ss
dec
adc
in
inc
test
fimull
pop
mov
scas
aas
dec
lret
sbb
sub
ljmp
xor
push
add
test
sbb
loopne
aaa
jmp
fisubs
and
gs
xor
imul
dec
mov
pop
xchg
nop
add
inc
pop
dec
loopne
call
das
add
dec
popa
gs
jmp
push
mov
test
aas
pop
rcrb
mov
cwtl
fistpl
aam
inc
test
jo
pusha
xchg
add
lahf
push
add
pop
pop
fstl
jl
cmpsb
lret
fcmove
gs
cmp
jne
lea
addr16
in
fstl
insl
stc
in
pop
cmp
mov
cltd
pop
xor
sub
in
pop
aad
jg
cld
fwait
cli
jnp
adcl
hlt
cwtl
jo
inc
jg
arpl
cld
dec
lret
test
cmp
push
rcrl
mov
stos
or
add
fs
inc
push
fisubrs
mov
sbb
cld
jg
cld
xchg
dec
insb
inc
cmp
lret
mov
rolb
jno
subl
icebp
adc
add
sbb
pop
or
arpl
sbb
cmp
cmpb
aas
scas
sbb
out
lcall
dec
test
dec
jnp
push
cld
insb
and
pop
or
mov
stos
push
movl
pop
cmp
pop
test
aaa
insl
sub
imul
mov
in
in
mov
jbe
fxam
stos
inc
or
dec
or
xchg
adc
adc
mov
xchg
dec
mov
sub
push
mov
test
xchg
out
and
out
sbb
cmp
adc
int3
xor
out
ljmp
xchg
lcall
lret
ja
dec
inc
push
dec
add
loope
pop
out
mull
test
add
iret
mov
cmp
icebp
inc
sub
lret
inc
das
jb
cld
testl
jmp
pop
rorb
pop
stos
sub
ret
aad
in
jae
sub
lret
jmp
jp
cmp
push
xlat
mov
push
mov
leave
leave
mov
scas
and
std
fcmovb
mov
imul
in
sbb
mov
sub
outsl
fucom
dec
add
xchg
pop
inc
mov
push
mov
mov
adc
push
js
push
mov
test
idivl
dec
cmp
shrb
test
jne
leave
or
xchg
arpl
int
push
enter
lret
xchg
pop
xlat
aas
or
inc
in
bound
mov
or
pop
out
push
jmp
sub
stos
out
cmp
mov
loopne
cmp
out
pop
hlt
inc
add
dec
or
lea
inc
repz
mov
push
xor
sbb
cld
xchg
stc
adc
loop
mov
neg
inc
fdivp
test
jp
sar
fldcw
xchg
inc
jno
pop
pop
mulb
jmp
xchg
std
sbb
dec
les
ja
icebp
or
loop
xchg
sahf
leave
cwtl
and
icebp
lds
and
mov
and
xchg
sbb
and
sub
and
or
lea
and
inc
inc
push
or
imul
enter
push
dec
add
loopne
cmp
jnp
jne
xchg
fmulp
mov
xchg
sub
jp
mov
in
jecxz
cwtl
and
mov
adc
and
cmp
cvtps2pd
push
call
jbe
jl
add
orb
sub
inc
or
mov
repnz
jne
cs
int3
xchg
in
mov
pop
movsb
dec
adc
or
mull
pushf
fildll
jne
lret
dec
ss
dec
orl
inc
pusha
out
rcrb
popf
sub
inc
sti
push
call
popf
pop
jge
mov
aam
sub
jne
cmp
aam
fisubs
push
pop
fdiv
cmp
xchg
xchg
inc
dec
dec
ljmp
cmp
sub
mov
aad
xchg
inc
adc
push
aas
jo
sbb
cli
mov
mov
mov
fucomip
lea
std
fdiv
sub
inc
mov
movsl
lret
inc
rcrb
call
icebp
enter
pop
mov
stos
xchg
xchg
xor
mov
add
mov
sbb
lret
pop
into
in
push
dec
je
inc
cmpsb
dec
push
cmpsb
xchg
push
pusha
push
aas
cmpsl
pop
mov
out
adc
mov
jge
push
adc
lret
lahf
xchg
je
jle
xchg
cwtl
ret
inc
outsl
mov
dec
cmp
pop
fidivrs
and
gs
cmp
in
or
mov
mov
aas
pop
xor
jno
xchg
in
xchg
aad
aam
mov
mov
inc
stc
dec
pop
inc
test
push
or
loope
jb
in
inc
fst
ljmp
adc
fcomip
sub
push
mov
mov
cmp
adc
sub
xchg
das
push
adc
int
out
inc
imul
ljmp
jns
dec
out
dec
pop
cmp
mov
mov
inc
shrb
andl
lcall
aaa
sub
cmp
nop
sbb
mov
sub
test
xchg
cld
xor
jae
test
test
xor
mov
mov
jmp
push
insl
xchg
mov
cmp
xchg
decb
xor
push
in
or
outsl
int
mov
stos
adc
sbb
dec
fs
cs
inc
jl
fildl
test
pop
aas
cmpsl
pop
sub
fistl
popa
jg
std
cmp
orb
cmpsl
repz
push
cmp
push
test
jmp
repz
cwtl
or
aam
xor
jl
push
cmpsb
push
ficoml
testl
lret
test
cmpsl
mov
into
testb
xchg
pop
out
xchg
jle
mov
dec
or
test
inc
loope
sub
jge
ljmp
test
push
ret
xchg
add
mov
xor
or
sbb
mov
mov
mov
cmp
adc
das
dec
mov
scas
jecxz
out
outsb
dec
cmpsb
arpl
fwait
shll
pop
cmpb
push
or
shlb
lret
cmpsl
push
inc
sub
sahf
mov
stos
rol
inc
or
in
xor
pop
std
adc
push
outsb
jmp
jo
shlb
dec
mov
ja
loopne
and
mov
aam
sti
in
adc
cli
xchg
popf
jno
mov
ds
or
pop
pop
arpl
inc
and
outsb
jmp
jmp
sahf
repnz
call
xor
push
jae
lret
fs
sub
movsl
jge
push
loope
arpl
mov
cmp
clc
mov
sub
mov
int3
mov
repnz
lods
ret
xor
pop
fisubrs
or
es
out
cmp
outsl
cmp
ret
leave
dec
xchg
dec
pop
cld
in
add
push
adc
cmp
or
mov
testb
mov
mov
mov
int3
sti
sub
pop
pop
or
pop
subl
xor
and
or
js
cmp
xor
xor
ss
adc
cmp
insl
lods
mov
jnp
mov
xchg
sahf
xor
jmp
lret
xchg
adc
aaa
mov
stc
mov
sub
push
push
vpaddw
xchg
adcb
mov
das
mov
mov
push
xchg
mov
jbe
in
pop
nop
mov
cltd
outsl
divl
sbb
inc
aas
leave
fwait
jns
inc
pop
subb
ret
cmpsb
xchg
push
mov
lea
fs
sub
aad
add
pusha
clc
movsb
inc
xchg
loope
cmp
mov
xchg
adc
dec
pop
xor
dec
repnz
jb
add
dec
mov
subb
pop
cli
imul
jbe
ret
sahf
mov
in
fdivrs
pop
std
adc
fwait
cmp
push
xchg
adc
adc
or
push
ret
enter
loopnew
lahf
xchg
addl
into
ljmp
lock
outsl
xor
mov
dec
sbb
jecxz
push
in
cmp
ss
mov
xchg
and
es
xchg
cmc
shlb
arpl
arpl
dec
fisubrs
sbb
scas
loope
ja
stos
dec
push
dec
out
cmp
in
pop
fisttps
imul
mov
mov
loope
dec
outsl
lds
push
push
jl
or
fisubrs
stos
adc
outsb
cs
out
bound
mov
push
andl
fcoms
xor
cwtl
mov
loope
inc
cmp
xor
sbb
inc
xor
and
ljmp
add
and
aam
fcom
pop
jb
data16
fists
sbb
push
iret
pop
inc
in
cmp
sub
mov
jnp
inc
xor
sub
cmp
cltd
jg
or
leave
sbb
pop
and
inc
fldcw
inc
test
mov
jb
call
push
xor
push
jmp
pop
push
leave
loopne
jl
ds
xchg
or
out
xchg
xchg
mov
dec
clc
cmc
mov
sbb
movsb
pop
sbb
push
pop
enter
mull
pop
jecxz
dec
adc
in
and
mov
jne
dec
outsb
jl
mov
pushf
inc
in
jecxz
dec
pop
xchg
test
jns
cmp
sbb
xchg
das
sbb
adc
repnz
enter
xchg
pop
and
bound
fwait
mov
scas
sbb
andb
outsb
dec
pop
daa
imul
dec
push
fsts
subb
mov
add
shr
add
cmp
mov
add
sub
sub
jl
or
or
popa
call
mov
push
mov
mov
imul
jmp
xchg
xor
jp
mov
fwait
fwait
xchg
addr16
mov
push
cwtl
sbb
loop
stos
push
inc
int3
stos
lcall
pop
add
fbstp
test
ljmp
mov
mov
cmpsl
inc
icebp
and
cmp
jnp
mov
negb
xchg
cmp
aam
icebp
es
mov
dec
ss
in
imul
imul
sub
les
and
mov
push
adc
mov
cmp
sub
xchg
shl
jg
in
push
push
aaa
popf
imul
je
inc
mov
push
rorb
shl
mov
mov
and
popf
or
cld
mov
fildl
fsubrp
test
mov
jno
mov
push
mov
gs
jns
push
inc
dec
mov
xchg
test
lods
xchg
repz
or
movsb
mov
cmp
cld
fyl2xp1
dec
lret
inc
xchg
es
lock
ljmp
and
pusha
xor
hlt
xchg
pop
ret
mov
mov
outsl
or
cmc
lahf
testl
inc
mov
das
mov
test
fiadds
dec
leave
test
ret
mov
mov
imul
sbb
pushf
or
mov
jmp
shll
idiv
stos
dec
pop
or
jae
lods
enter
jnp
lret
sbb
mov
fidivs
inc
out
je
jns
test
or
inc
mov
fistl
andb
scas
call
and
cmp
negb
popf
test
xchg
test
cmp
jae
dec
mov
sbbb
mov
xor
push
ret
pop
ret
arpl
sbb
mov
adc
add
jge
push
lds
push
cli
incl
mov
leave
test
out
aaa
ds
lcall
xchg
rclb
adcb
fadd
popa
into
dec
rcr
push
addr16
jge
pop
xor
outsb
add
and
pop
jnp
xchg
xor
and
mov
mov
pushl
jl
lds
mull
ss
adc
mov
fldenv
xchg
lahf
or
loope
push
and
pop
and
xor
jae
and
daa
gs
jmp
adc
cmpb
in
iret
rcrb
pop
inc
pop
mov
outsb
sarb
lahf
pop
xchg
mov
repnz
sbb
jl
pop
dec
and
insb
cmp
add
mov
outsb
adc
test
shrl
psllw
mov
dec
add
mov
xorl
and
jb
adc
adc
xchg
shl
add
adc
imul
pop
sbb
push
in
xchg
mov
push
dec
outsl
std
inc
xor
push
mov
mov
stc
pop
jae
or
ljmp
adc
lret
adc
jnp
out
dec
jge
lret
leave
rorl
xor
adc
push
popf
mov
or
stc
xor
add
push
add
jae
fcmovu
pop
pop
xchg
lock
imul
nop
rolb
sub
dec
into
inc
sbb
jl
mov
push
xor
pop
mov
ss
push
mov
out
cmp
push
je
lods
cmp
addr16
pop
jp
fcompl
inc
and
sahf
sub
xor
add
call
xlat
adc
mov
mov
andl
mov
scas
push
mov
out
pop
xchg
cmc
les
mov
shl
inc
and
add
fsubrl
popa
pop
sub
xlat
mov
pop
dec
pop
push
mov
mov
dec
leave
enter
gs
sub
push
sub
pop
jnp
jp
hlt
fnsave
sahf
scas
xor
dec
sarl
jmp
int3
aaa
mov
dec
fsubl
insb
ds
and
cli
sub
jae
pusha
xchg
adc
or
sub
jl
sbb
add
imulb
lock
lcall
outsb
dec
pop
xlat
push
cmc
icebp
dec
popa
ret
mov
fnstsw
std
imul
dec
ficoms
push
lock
xor
cmpsl
or
mov
add
adc
mov
add
mov
orl
adc
ds
push
mov
in
jge
sub
movsb
out
push
push
lods
subb
push
lds
cmp
and
cmp
xchg
xchg
or
sbbb
dec
inc
add
adc
rcll
sub
lods
xor
cli
adc
inc
mov
mov
cld
in
enter
mov
cmp
idivl
mov
inc
inc
jg
sub
out
shl
pop
pop
mov
or
push
mov
push
scas
shlb
adc
movsl
cmp
push
push
ljmp
idivl
fcoms
neg
pop
movsb
xchg
sahf
aaa
cwtl
popa
imul
jmp
rcll
stos
lahf
sbb
in
and
pusha
adc
sysenter
sbb
testb
sbb
in
xchg
clc
xor
push
pop
or
cmp
pushf
aas
in
mov
lret
test
fstpl
mul
push
xor
cmpsl
out
jb
sbb
xchg
dec
fs
test
inc
loop
and
mov
lret
sub
sbbl
popa
nop
add
fbstp
sahf
imul
adc
movsb
pop
into
lcall
popa
in
push
dec
xchg
mov
mov
subl
mov
sub
jno
adc
fmuls
mov
cld
mov
shl
lret
scas
mov
inc
push
and
cmp
and
sahf
mov
jle
cs
aad
pop
stos
sub
lret
mov
add
sub
sbbl
sbb
pop
adc
push
mov
xor
jecxz
imul
mov
in
ljmp
ds
sahf
lea
je
imull
pop
cmp
xchg
cli
bound
inc
ljmp
mov
hlt
sbb
push
jp
mov
jno
jmp
mov
cwtl
xchg
add
cmp
push
stos
les
repnz
lret
mov
into
sbb
outsb
pushf
mov
icebp
flds
insb
shll
sub
add
call
add
je
dec
jae
testl
xchg
movq
dec
rcrl
mov
xchg
mov
jge
leave
popf
call
cltd
mov
inc
xor
xor
xor
les
ds
adc
push
aam
jnp
jno
nop
sub
and
dec
and
push
mov
cmp
xor
ret
or
jmp
adc
test
push
int
xlat
inc
mov
xchg
fdivl
xor
fwait
sbb
roll
sti
leave
inc
rol
or
jl
jmp
and
or
jp
xchg
dec
inc
movsb
sbbb
fs
repz
out
jbe
sahf
test
insb
xor
fs
pop
sbbl
aad
sbb
aam
mov
mov
xor
jae
dec
leave
lret
and
pop
aam
dec
pop
jne
jns
test
mov
pop
cli
mov
gs
into
rcll
mov
cmp
test
dec
lods
test
pushf
pusha
lahf
ficoms
pusha
and
ja
fimuls
push
rorb
insb
int
dec
jbe
lock
sub
xlat
in
gs
out
pop
andl
add
xor
fwait
lods
ds
ljmp
cmc
push
sbb
pushf
push
push
dec
pop
clc
add
add
ja
push
push
xor
fwait
rcrl
push
sub
aas
mov
fidivl
idivb
xlat
stos
jle
or
fadd
call
push
inc
test
sub
popa
adc
cmp
jmp
shrb
or
leave
push
shl
mov
shll
pop
js
pop
jnp
sahf
pushl
fisubs
icebp
or
scas
movsb
cli
out
dec
sub
fucomip
pushf
cmp
int3
mov
in
push
leave
leave
mov
add
push
sbb
out
xor
push
mov
mov
sub
mov
inc
push
sbb
adc
es
int3
mov
mov
addr16
sbb
xlat
pop
xor
jmp
in
inc
cmpsl
cltd
cli
frstor
les
imulb
dec
mov
pop
outsl
add
arpl
adc
fiaddl
jmp
sahf
xor
jmp
jecxz
push
lds
and
sub
lahf
inc
adcl
xor
xchg
sahf
or
je
push
movsl
cld
push
fwait
add
repnz
lock
pop
or
popa
pushf
or
jnp
mov
mov
mov
jns
out
xor
add
adc
xchg
shll
sbb
insb
gs
call
insl
and
inc
inc
test
cmc
jp
pop
outsl
and
iret
mov
fisubl
xor
and
sub
int3
fidivl
mov
adcl
xchg
mov
cmp
sti
sbbl
outsb
dec
sarb
push
test
mov
sbb
in
rcrb
xchg
fisubrs
insb
cmp
cmpsb
adc
push
sub
scas
xlat
pop
add
mov
adc
in
mov
fimuls
sbb
jge
add
sahf
inc
inc
mov
cmpsl
loop
out
mov
mov
mov
rcrl
arpl
fwait
adc
mov
push
outsl
adc
dec
repz
mov
mov
mov
mov
jno
jne
mov
addb
jge
adc
mov
jp
movsl
xor
push
sub
dec
adc
inc
jl
push
mov
jp
xchg
iret
lret
sarl
pop
xchg
pusha
pop
mov
pop
lock
fisttps
cmpsl
outsb
cmp
mov
insb
inc
cmpl
pop
subl
loop
push
cmp
inc
fmulp
fadds
ds
or
movb
xor
cmpsb
cmp
pop
xchg
lret
xor
sti
fwait
sub
mov
mov
pop
out
imul
andb
icebp
mov
scas
mov
js
add
or
push
daa
out
mov
icebp
rcl
sub
sbb
mov
xorb
xchg
inc
je
xchg
xchg
mov
pop
dec
or
insb
and
aaa
cwtl
xchg
jle
cmc
scas
test
js,pt
mov
push
jl
daa
rcrb
xchg
loope
lret
xchg
ss
or
filds
fistps
mov
and
bound
xchg
mov
xchg
pop
aaa
movsl
arpl
or
in
test
gs
call
sahf
cli
sbb
lret
pop
mov
imul
lds
xchg
popa
clc
sub
xchg
nop
xchg
int3
fmuls
jnp
dec
fisttpll
xchg
dec
in
jg
sti
adc
xchg
add
add
jle
dec
and
mov
xchg
jmp
int3
cwtl
push
call
inc
popa
out
int
xchg
shrb
adc
and
pop
xor
jge
sti
dec
scas
lods
in
popa
push
sub
sahf
or
xchg
jmp
cmpsb
mov
les
test
lcall
mov
xchg
sti
pushf
inc
push
cmc
jb
jbe
jbe
cmp
pop
push
pop
jne
or
fsubp
cmpsl
int3
sbb
cli
lcall
jae
or
adc
js
push
push
push
stc
cwtl
xor
fstp
das
stos
shlb
mov
pushl
enter
pop
xchg
in
popa
xchg
jmp
xor
jno
sti
inc
push
adc
je
pop
daa
lahf
inc
sarb
std
push
lahf
mov
lret
dec
std
and
stos
aas
adc
adc
cltd
cmp
push
sbb
inc
ret
xchg
test
jle
stc
pop
popf
jecxz
push
mov
add
cmp
orl
popf
jno
push
outsl
dec
sbb
cmp
test
xchg
rolb
in
or
sub
jmp
ss
adc
or
xor
out
inc
outsb
ljmp
adc
pusha
das
adcb
ja
and
inc
fldenv
rorl
mov
in
jmp
ja
int
dec
daa
fcmovbe
xor
inc
ja
ret
fsubl
imul
mov
pop
cli
or
lds
inc
bound
xchg
sti
dec
shlb
ficompl
mov
jne
cmp
mov
mov
imul
xchg
mov
hlt
add
mov
push
dec
dec
pop
jg
roll
cwtl
add
iretw
ds
out
pop
aam
or
imul
mov
mov
push
insb
js
mov
lods
shrl
ret
inc
xlat
push
sbb
push
dec
into
cmpl
jbe
sbb
push
push
andb
mov
in
cmpb
clc
outsb
sbb
scas
push
call
scas
out
lods
in
adc
mov
imul
outsl
pop
pop
sub
popa
fstl
loope
shlb
dec
daa
cmp
adc
ja
mov
jecxz
xchg
fisttpll
je
sarl
add
rolb
adc
jp
and
fs
out
mov
dec
pop
imul
sarl
sbb
es
cmp
add
in
mov
dec
xor
cmp
mov
mov
xchg
out
ret
mov
ja
aad
int
in
push
shll
push
sbb
frndint
xor
cmpsl
dec
and
or
aas
fbld
pop
cltd
mov
fdivl
xor
notb
xchg
sub
xor
lea
jp
incl
adc
out
sub
xchg
sbb
mov
ret
cmp
and
inc
mov
in
and
xchg
or
xchg
inc
aas
pushf
mov
push
clc
dec
dec
aaa
std
imul
outsl
pusha
ja
jb
cmpsb
push
std
jmp
inc
mov
cmp
xlat
in
add
pop
ret
sub
and
dec
insl
mov
mov
pop
sub
mov
adc
fldt
or
out
sbb
movups
sub
inc
mov
mov
xor
mov
pop
test
pop
mov
cmp
and
leave
std
stos
adcl
cmp
mov
xor
ret
push
mov
inc
sbb
mov
adc
inc
sbb
xorb
lahf
call
repz
dec
cmp
aam
jp
out
aad
xor
jle
cmp
rolb
loopne
adcl
mov
test
push
cmc
out
add
sbb
pop
hlt
sub
fdivp
sub
hlt
mov
and
iret
mov
scas
test
popa
cmp
add
out
or
cld
mov
pop
insl
and
mov
lock
push
xor
cmp
insb
dec
repnz
xor
ret
movsb
mov
cmp
lds
and
lahf
pop
inc
xchg
rcpps
repnz
pop
ja
xchg
xchg
adc
test
rorl
fistpll
mov
insb
gs
ret
push
or
cs
mov
pop
cltd
ds
dec
push
cmp
loope
jbe
inc
mov
mov
pusha
pop
dec
and
popa
addb
dec
in
cltd
sub
fs
mov
mov
xor
mov
adc
stos
adc
and
addb
xchg
cmp
adc
xchg
jmp
aaa
xlat
repnz
movsl
pop
jl
stos
mov
cmpsl
mov
mov
cmp
and
dec
fistpl
and
std
ljmp
std
push
mov
std
aad
mov
xchg
push
subl
je
jmp
push
dec
insl
mov
cmpl
dec
ret
jecxz
in
fisttps
xchg
sbb
loope
pop
stc
cs
pop
or
arpl
movsb
or
scas
jnp
jge
icebp
test
ljmp
adc
gs
push
add
push
outsb
mov
icebp
xchg
cs
dec
cmc
pushf
movsl
lds
xor
mov
scas
imul
cld
add
xchg
fiadds
out
daa
adc
lds
aad
dec
dec
test
scas
out
fs
fcoms
sbb
out
push
loop
gs
je
rcl
pop
sub
mov
stos
pushl
add
ficoml
mov
gs
mov
test
xchg
loopne
cltd
sahf
jle
add
push
daa
mov
xchg
test
push
jecxz
ret
ds
push
cmpsb
mov
pop
mov
repz
std
push
jae
data16
adc
sbb
sub
jp
ss
outsb
jnp
lret
divl
loope
xor
insl
mov
daa
test
aad
aam
movl
idivb
push
sbb
mov
inc
in
dec
xchg
mov
js
mov
loope
cmp
xor
dec
pop
jge
jmp
pop
pop
pop
lret
lcall
cmp
sub
rol
daa
call
sbb
pop
sub
enter
jno
pop
xor
mov
dec
fisubl
jo
outsl
mov
icebp
repz
mov
xor
or
cmc
adc
xchg
ss
rcrb
mov
sbb
lahf
inc
xchg
data16
sub
jns
sbb
sbb
mov
popl
xor
ret
sbb
test
sub
outsb
add
cmp
xor
rcrl
inc
xchg
mov
ror
mov
sbb
call
mov
dec
jmp
aas
mov
mov
mov
or
ret
stos
jmp
or
sti
out
and
icebp
cmpsl
mov
xchg
aam
and
js
leave
sbb
jle
in
adc
dec
add
add
add
sub
mov
push
inc
in
xchg
testb
dec
dec
popa
push
fnstenv
leave
jnp
nop
in
xor
scas
lret
int
dec
xchg
pusha
cmc
popf
call
jge
fsubrs
cmp
or
push
stc
dec
roll
je
mov
ret
mov
inc
sti
popf
sbb
lods
leave
mov
xor
xor
int3
mov
sti
jecxz
ljmp
inc
outsl
adc
frstor
ja
fstpt
mov
jnp
sbb
cmp
test
jnp
sbbb
lret
orb
mov
hlt
cmp
fldl
dec
mov
cmp
popf
dec
loope
sbb
testl
jns
mov
xchg
in
out
mov
dec
jmp
stos
aas
rcrl
sbb
shll
jne
test
ret
aam
xor
mov
inc
nop
mov
sub
jne
mov
or
push
fistpl
push
cmpsl
pop
outsb
les
dec
stos
rcl
std
in
bswap
int3
loope
push
addr16
cmp
and
jp
jns
xchg
ret
mov
lock
sbb
or
clc
dec
push
push
dec
mov
jmp
inc
inc
mov
movsl
inc
out
mov
jnp
outsl
mov
out
inc
mov
popa
test
xchg
ljmp
jns
ret
in
xchg
outsl
mov
stc
int
adc
movsb
repz
push
and
lret
add
lock
aas
sub
sbb
in
inc
inc
mov
movsb
out
sbb
ljmp
pop
xchg
sti
push
js
dec
cld
shrb
push
push
xlat
adc
data16
outsb
es
sbb
cmp
sbb
das
sbb
push
mov
inc
and
push
sbb
and
scas
cli
sub
adc
mov
shlb
fdivrl
sub
fadds
outsb
dec
jne
mov
les
in
js
inc
and
test
cs
add
rcl
dec
repz
mov
sbb
xchg
sbb
stc
negl
xchg
sub
loopne
out
adc
mov
adc
imul
jb
fwait
data16
fisubs
xor
sahf
aaa
adc
cs
inc
jbe
push
or
ret
fisttps
leave
and
add
jnp
mov
dec
pop
inc
push
es
sbb
lock
mov
pushf
clts
sub
xchg
dec
loopne
push
sub
dec
pop
and
push
xchg
xchg
cs
subb
xor
cmp
sbb
cwtl
lods
addr16
testl
sti
subb
adc
adc
adc
loop
push
lods
rcrl
inc
leave
sbb
and
lods
orb
rol
mov
in
jnp
call
xchg
mov
mov
push
xor
loope
in
js
arpl
addr16
into
push
push
inc
cmp
loopne
stos
add
and
or
sub
push
lea
adc
inc
pop
out
int
and
mov
add
push
imulb
jo
cmpsl
lcall
mov
lret
dec
dec
imul
or
ftst
std
les
push
daa
mov
cmc
call
cmp
mov
sub
dec
sbb
shl
jp
icebp
in
xlat
jmp
aam
dec
fwait
jecxz
dec
xlat
mov
cmp
sbb
or
sub
push
jle
gs
hlt
mov
cli
repz
out
cmpsl
aas
fldt
or
and
sub
cmp
push
or
and
push
pop
sub
mov
sub
outsb
lock
cmpsl
out
adc
sbb
mov
sbb
xchg
stos
inc
ja
adc
adc
rorl
jnp
dec
push
xchg
xor
ja
and
inc
frstor
sbb
int3
dec
or
and
mov
sbb
jb
inc
lea
cwtl
push
repnz
jmp
mov
xchg
push
and
icebp
mov
ss
cltd
aad
jbe
xchg
sbb
jl
mov
dec
js
pop
mov
mov
es
cmp
adc
fisubs
push
mov
or
aaa
das
cmp
sub
test
pop
roll
mov
push
inc
cmp
mov
xchg
idivb
mov
es
std
cltd
xchg
and
dec
add
lcall
jb
icebp
into
xor
mov
dec
or
cmp
xlat
hlt
popf
fbld
or
xchg
lahf
fisubl
call
pop
lret
aad
mov
fsub
in
push
lret
sub
mov
inc
test
in
sub
stos
sub
cltd
jb
divb
shrl
pop
jo
dec
mov
mov
push
mov
shrb
std
dec
cmpsl
mov
adc
mov
addb
sahf
push
or
lods
loope
dec
popa
fwait
movsb
mov
and
call
xchg
dec
mov
sub
dec
stc
insl
xor
movsb
pop
lcall
sbb
jle
into
push
into
mov
jecxz
jno
insl
in
jnp
lea
out
dec
sub
xor
shr
loope
fs
lcall
xor
xorl
dec
or
stc
aad
cmp
cmc
xchg
cli
je
gs
lcall
lahf
add
cmpsb
and
mov
jo
push
sahf
pusha
and
jo
jmp
movsb
inc
push
ja
dec
inc
mov
jecxz
pop
cmc
test
cld
inc
pop
mov
xchg
arpl
push
sub
repnz
popa
sub
arpl
es
mov
push
push
and
mov
push
xchg
movsb
jno
das
ret
mulb
jge
and
mov
jb
stc
or
mul
in
mov
daa
push
mov
cltd
pushl
shlb
push
repz
ja
mov
jne
inc
inc
push
jo
aam
flds
in
sar
out
ds
dec
mov
in
mov
pop
mov
outsl
loopne
ficoml
stos
push
mov
lcall
ret
in
lcall
fcoml
in
jne
aad
or
les
lds
test
aad
mov
lret
enterw
divb
cmp
xor
mov
jp
stos
mov
fsubrl
and
inc
stos
xor
stos
mov
fwait
sbb
or
shll
ds
insl
jmp
mov
xor
pop
pop
mov
scas
adc
cli
cltd
movsb
scas
mov
pop
outsb
adc
fdivrs
nop
shr
pop
aad
cld
adc
into
push
fsts
push
jae
sbb
cmp
xor
nop
xchg
repnz
fwait
pop
push
and
mov
xchg
cmpsl
scas
arpl
ret
insl
je
gs
adc
sbb
mov
mov
ret
sub
push
adc
inc
imul
mov
xchg
fdivs
jle
xchg
cmp
mov
mov
adc
push
inc
in
mov
jle
shlb
jno
lock
mov
pushf
xchg
xor
ds
repz
lea
sbb
test
hlt
aam
jb
cmp
add
movsb
mov
mov
xchg
adc
es
jp
jge
out
mov
jne
or
dec
jo
sub
les
jp
push
std
sub
ss
data16
sti
stos
ljmp
aam
mov
gs
xchg
and
inc
int
sub
idiv
dec
popa
dec
fldenv
sub
jne
and
stc
mov
pop
cmp
loopne
movb
inc
loopne
jp
mov
mov
jo
dec
push
divl
aas
int3
fisttpll
mov
pop
outsb
ficomps
in
dec
ljmp
cmp
mov
aad
mov
mov
adc
cmp
imul
movsb
inc
loopne
mov
jge
movsb
aas
fisubl
jns
lock
popf
repz
test
ret
pop
mov
cli
mov
pusha
cmp
pop
fs
mov
daa
add
clc
pop
lock
jle
dec
repz
popa
inc
loop
outsl
xor
insl
push
adc
pop
repz
in
mov
pop
fidivl
cmp
push
inc
lcall
xchg
jge,pn
andb
jno
sub
mov
push
sub
and
lds
fcmovb
imul
xchg
sub
push
jle
xchg
cwtl
scas
push
ret
xlat
push
or
sbb
add
mov
push
dec
jl
lods
or
call
nop
mov
movb
push
scas
push
stos
iret
dec
cmp
and
frstor
bound
pop
xlat
out
dec
in
movsb
push
shll
add
scas
xor
cmp
inc
fs
mov
shll
mov
push
inc
pusha
and
leave
inc
xor
adc
sbb
adc
mov
aaa
xchg
push
sub
sub
and
add
cmc
push
mov
add
adcl
lock
xor
aaa
and
and
pop
pop
jae
loopne
mov
cwtl
imul
lods
in
sbb
or
pop
add
sbb
dec
sti
movsl
std
sub
mov
dec
and
out
popf
ss
test
mov
sbb
sub
addb
movsl
in
mov
movsb
jge
cs
insb
ret
gs
jnp
push
push
sub
bnd
mov
sbb
jmp
fistpl
or
xchg
mov
xchg
test
pop
das
in
add
mov
out
insl
xchg
jns
xor
mov
dec
mov
cmp
sub
repnz
lock
shr
xor
cs
or
scas
in
dec
mov
mov
jae
int
inc
insb
cs
mov
pop
sti
loop
pop
stc
pop
das
cmp
push
cld
pop
sub
lock
daa
xchg
cwtl
adc
xlat
jns
mov
push
inc
sahf
iret
pop
xor
jne
sbb
pop
bound
add
rorl
iret
int3
scas
cmpsb
push
iret
and
insb
adc
mov
xchg
mov
cmp
mov
mov
loopne
es
push
adc
mov
in
lret
or
out
sub
je
fiaddl
leave
test
xor
dec
jne
jns
test
sbb
outsb
std
insl
scas
mov
xor
cld
jnp
ja
leave
pop
mov
mull
pusha
subl
jmp
shll
push
nop
push
ret
mov
cwtl
mov
xor
stos
stos
in
jg
mov
fs
push
fistps
roll
sarl
cmp
sub
sbb
addr16
andb
jle
mov
pushf
imul
xchg
sarb
xchg
or
adcl
divl
cmpl
mov
lret
addr16
call
pop
mov
cld
xchg
sbb
outsl
jbe
inc
sub
cmp
xchg
cltd
or
or
rorb
push
or
jle
inc
imul
movsl
cltd
out
out
mov
dec
or
jne
jg
mov
cmp
jne
movsb
lret
aas
outsl
xchg
pop
jne
pop
mov
push
mov
repz
leave
inc
pop
cmpsl
aas
sub
mov
sahf
pop
mov
inc
adc
add
stc
inc
cmp
pusha
mov
imull
fistl
dec
add
call
aaa
fists
in
pop
push
or
sub
flds
xor
mov
mov
shlb
sbb
int
and
in
push
or
inc
rcr
jecxz
lcall
cmp
cmp
pop
dec
enter
xor
rcrb
iret
jae
repz
cmp
inc
pop
pop
push
out
leave
pop
aas
lahf
out
mov
fidivl
cs
das
sub
call
sub
cmp
js
stos
push
cmp
outsl
fs
stos
inc
push
add
add
inc
jae
imul
jmp
test
xchg
mov
stos
or
imul
jbe
shl
out
mov
mov
mov
inc
lahf
std
mov
testl
fstp
test
fs
lds
sbb
mov
inc
push
xchg
xchg
inc
xchg
mov
ret
pop
pop
popf
fdiv
or
inc
mov
sub
cmp
dec
insl
inc
inc
xchg
push
mov
out
mov
cmp
push
in
jnp
jg
jmp
out
lods
and
sub
test
jp
or
mov
dec
push
stc
std
loope
xorl
or
lret
add
jae
push
out
fcomps
in
add
loope
ja
push
lea
add
mov
cmp
dec
xor
arpl
out
pop
mov
dec
mov
xchg
inc
sub
mov
or
xor
add
or
test
inc
push
mov
fmuls
bound
add
sub
stos
in
pop
fists
in
push
or
addr16
inc
push
push
jp
dec
int
jg
lock
and
xchg
adcl
popf
xor
jge
mov
shr
add
push
inc
cwtl
out
in
cwtl
leave
jns
inc
pextrw
mov
andb
icebp
mov
out
cmp
cs
dec
das
jmp
lds
int
push
cmpsl
fcomps
lcall
mov
xchg
push
sarl
ja
jg
jge
out
sbb
mov
fists
jns
lret
sub
mov
mov
push
cmp
fs
sub
jge
sti
mov
jge
fisubrs
cmpsb
add
insb
pop
lods
push
xchg
sbb
push
aam
test
add
xchg
paddd
push
andl
repz
lods
sub
adc
and
or
and
xor
mov
or
sbb
adc
hlt
ret
inc
rcr
lea
push
sub
dec
jecxz
das
push
sbb
pop
mov
hlt
rcll
loop
cmp
iret
dec
dec
and
fbld
dec
fistpll
aaa
pop
jle
add
repz
les
cmp
fbstp
jmp
dec
push
and
inc
out
cmp
test
aad
call
add
push
mov
neg
mov
sub
push
pop
dec
and
dec
std
inc
mov
out
inc
fcomps
adc
lcall
dec
stos
test
insb
add
pop
cli
sbb
into
lods
add
sub
mov
fildll
mov
das
roll
sub
or
call
decb
mov
cmpsl
notb
ret
out
js
mov
lea
fbld
xorl
js
or
insl
mov
jl
jp
stos
cmp
fistl
sub
push
fdiv
jne
adc
lock
inc
mov
jns
mov
js
jmp
add
xchg
mov
adc
cmpsb
adcb
adc
inc
stos
in
cltd
idivb
lret
jae
stos
inc
rolb
add
inc
push
jne
divl
push
adc
in
es
test
dec
dec
mov
test
mov
aas
sub
call
add
mov
das
pop
insl
or
es
mov
clc
lock
inc
mov
inc
xchg
jg
mov
int
cmpsb
sub
mov
sub
inc
imul
xor
xor
xchg
sub
fwait
mov
jle
pop
xchg
movsl
sub
add
mov
flds
xor
mov
xchg
dec
cmp
daa
imul
xor
jno
or
scas
jl
ret
mov
xor
push
popf
inc
cmpsb
in
nop
xchg
shlb
test
and
add
cmc
scas
lcall
clc
mov
mov
getsec
sarl
pop
stos
pop
mov
mov
ss
aas
pop
ss
xchg
out
repz
jne
rorb
test
xchg
lahf
cs
inc
push
add
lods
insb
test
inc
test
fisttpl
outsb
stc
sbb
mov
movb
rcrb
sub
ds
mov
les
mov
stos
inc
fldcw
push
clc
iret
push
push
xchg
movsl
lds
jno
rcrl
mov
push
pop
test
scas
adc
mov
sub
push
in
sahf
sbb
imul
mov
stos
dec
add
push
push
jle
nop
jbe
xchg
mulb
jge
pop
sar
mov
jnp
pop
xchg
inc
pop
adc
xchg
jns
mov
mov
mov
fidivrs
mov
jne
lods
and
pop
lods
faddl
adc
cmp
and
or
dec
sahf
fidivl
loop
imul
xchg
jmp
xchg
jns
sbbb
in
fidivs
sbb
xchg
stos
jnp
push
fnsave
add
sub
add
fwait
scas
jae
fs
and
cmpsl
pushf
sub
push
loopne
les
icebp
ljmp
mov
push
mov
ljmp
bound
imul
clc
pop
aam
dec
push
inc
inc
mov
push
sub
sub
in
adc
pop
jle
mov
fstl
pop
mov
repz
inc
or
mov
inc
icebp
adcl
mov
pop
into
out
jle
insl
inc
inc
sbb
in
aaa
cmp
fcoms
in
cmp
dec
xor
mov
popa
or
stos
jnp
aaa
jo
scas
pop
add
and
cmp
xor
cli
fiaddl
mov
jae
push
aaa
cmp
sub
push
sbb
cs
sub
add
gs
or
mov
int3
adc
push
shrl
daa
push
ror
mov
and
mull
xchg
arpl
cmp
mov
jnp
in
add
sahf
and
out
push
aad
fisttpl
sub
out
mov
dec
or
sub
lahf
into
mov
je
ljmp
jno
lea
cmp
shll
jg
push
push
adc
adc
mov
lds
jmp
cmp
mov
mov
xorb
aas
sbb
cli
scas
sbb
cmp
fcompl
push
push
fldt
pushf
push
popf
aam
push
mov
jno
xor
cld
push
insl
out
sti
lcall
xchg
xchg
jl
jecxz
movsl
adc
or
loopne
cmpsb
data16
outsl
ja
andl
jg
push
sub
mov
sub
jo
sti
mov
gs
jecxz
cmc
mov
fcomps
movsl
sub
adc
cmp
cld
lds
out
cmc
jl
jb
sbb
xor
pop
jecxz
mov
test
and
jb
jnp
pushf
jg
sub
xchg
and
lods
pusha
fimull
mov
lds
sti
push
and
out
cmp
adc
adc
shlb
int
cmp
cmc
or
push
mov
ss
cmp
das
lret
mov
into
pop
pop
sahf
sub
push
jmp
sbb
scas
mov
mov
insb
outsl
stc
stos
cld
fwait
cmc
push
jg
shrl
mov
cwtl
pop
fldcw
cmp
jge
sbb
loope
add
test
dec
call
pop
pop
lcall
out
mov
inc
in
pop
mov
shlb
das
movsl
jns
push
or
sbb
or
mov
cmp
lea
mov
fnsave
mov
aaa
pusha
or
mov
mov
mov
dec
fstpt
rcll
pop
fldcw
jbe
push
out
shrb
lret
push
ror
xor
insl
sbb
push
or
xchg
iret
xor
push
xchg
fdivs
sahf
pop
mov
push
cld
push
cld
push
cmp
cpuid
into
push
sub
lods
lds
sbb
fistpll
aaa
xor
mov
adc
hlt
sbb
arpl
cmp
out
mov
addr16
adc
dec
mov
jg
push
add
and
cmpsl
add
in
cmp
pop
outsb
jnp
adc
jo
jbe
jnp
test
ss
pop
orl
mov
jae
sahf
in
ljmp
sbb
push
mov
cmpsb
jbe
dec
out
jl
pop
or
or
push
pop
or
jo
icebp
subl
aaa
push
ds
push
rcrl
outsl
pop
call
cmc
jle
or
test
sahf
and
rol
jmp
scas
mov
lea
push
jl
push
cwtl
pop
ret
rolb
cs
pusha
mov
and
pop
lahf
rcrb
dec
movsl
xor
push
int3
cltd
xchg
mov
movsl
rolb
dec
xlat
mov
push
lds
xchg
jl
sarb
xchg
ja
mov
add
or
cmc
fistps
std
es
cmpsb
push
fbld
adc
bound
inc
pop
push
jbe
dec
jae
mov
in
mov
xchg
clc
sub
jg
cmp
sbb
ret
mov
and
es
jne
mov
xor
inc
mov
lcall
mov
adc
adc
sbb
sub
cltd
or
mov
pop
shr
out
push
negb
shrd
shr
negl
stc
movsb
add
outsb
inc
idivl
ret
js
int
adc
repnz
jl
add
pop
sbb
adc
enter
test
pop
xorb
add
loop
inc
push
adc
fs
or
cmp
xor
mov
pop
sub
xor
pusha
fsubrl
out
pop
fldlg2
jl
or
sub
and
lret
mov
inc
sbb
dec
cli
out
lea
pop
scas
leave
cmp
ljmp
mov
pop
sub
out
fsubs
or
jecxz
mov
cmpsb
mov
enter
test
insb
testb
or
jno
inc
push
mov
mov
xchg
mov
jne
scas
xchg
pop
iret
jge
outsl
push
repz
leave
cmp
in
jp
sub
pop
mov
je
pop
push
jns
addr16
xor
xor
sub
pop
pop
add
mov
xor
push
je
dec
add
cs
int3
mov
push
mov
stc
aad
loop
pusha
xchg
sbb
in
cli
mov
fnstcw
and
xor
aas
inc
mov
dec
fs
fdivs
lcall
sti
pop
cmp
sbb
mov
insb
daa
jmp
push
leave
inc
jecxz
hlt
jns
cmp
add
dec
outsl
test
pop
std
adc
dec
mov
or
mov
or
push
mov
cs
or
or
jno
dec
adc
mov
jns
xor
rcrl
ljmp
dec
clc
mov
jle
inc
mov
test
mov
jnp
lods
and
fwait
nop
mov
mov
and
mov
mov
punpckhdq
ret
pop
loopne
les
xchg
cmc
mov
sub
xchg
push
push
xor
lcall
stos
pop
ljmp
push
mov
cmp
fisttps
cmc
pop
and
cli
rcrb
mov
xor
mov
call
inc
cmp
mov
push
imul
or
dec
stos
fnsave
and
sub
xchg
xlat
sub
fstps
mov
xchg
movsw
mov
pop
repz
sahf
and
clc
xlat
clc
lods
mov
jo
cmpl
jno
imul
sbb
and
jnp
add
pop
inc
fs
ljmp
or
sahf
pop
jnp
leave
pop
mov
out
jo
outsb
push
add
leave
insb
jg
xor
adc
ds
es
test
xchg
jecxz
outsl
mov
pop
movsb
out
sahf
add
adc
loopne
sub
ss
jae
movsl
push
dec
xor
adc
test
push
scas
stc
pop
imul
jge
test
fisubrs
pop
or
and
jmp
das
push
fsubp
mov
aas
cli
not
loop
mov
insl
movsl
rorl
cmp
xchg
jge
hlt
fisttps
fmul
jo
sbb
dec
jp
xor
cmpsb
jbe
xlat
cmpsb
jmp
stos
shll
push
inc
sbb
and
dec
mov
fisttpl
cli
push
sbb
jnp
xor
movsb
dec
inc
les
repnz
jle
loope
add
jnp
mov
cmp
rcll
lods
add
cwtl
sbb
pop
getsec
dec
je
cwtl
push
push
sbb
mov
pop
jg
cmp
xor
push
adc
pushf
mov
stos
cmp
dec
fld
cld
dec
sahf
rclb
push
xor
out
sarb
mov
test
jb
xchg
jle
mov
jno
pop
movsl
outsl
xor
push
aaa
leave
push
jge
test
inc
fldt
pop
xchg
mov
add
dec
mov
into
cmp
test
imul
movsb
xor
repnz
mov
mov
cli
movsl
inc
ja
imulb
adc
or
stos
andb
fwait
lods
subb
jae
dec
fildl
hlt
push
insb
scas
jae
and
xor
mov
adc
ljmp
pop
sbb
lds
in
mov
or
cs
dec
mov
out
or
xor
xlat
pop
jge
pop
add
or
out
sub
xchg
push
or
rolb
aas
jo
pop
mulb
or
mov
push
cmp
sbbl
loopne
mov
mov
pop
imul
icebp
lcall
sbb
faddl
fnstenv
xchg
lahf
mov
stos
mov
lods
andb
jne
mov
scas
mov
pop
push
sub
push
dec
int
xor
add
loopne
pop
dec
dec
dec
push
inc
out
lret
addl
or
outsb
inc
or
movsl
xchg
push
mov
mov
repz
mov
cmp
mov
stos
lret
sub
jle
loopne
and
aam
outsl
xchg
mov
sti
mov
mov
xchg
add
jmp
rcrb
ljmp
add
push
les
xor
mov
push
sbbb
sub
and
stos
inc
inc
cmp
andl
cmp
sbb
imulb
push
iret
xchg
push
es
or
sub
mov
insl
or
les
daa
and
xchg
jbe
pop
adc
jecxz
nop
push
sbb
push
xor
enter
mov
sub
xlat
ja
repz
movsl
sar
cmp
sbb
pusha
add
xchg
in
or
negl
lahf
je
jl
call
jmp
pusha
lds
sbb
mov
xchg
dec
jne
and
subb
int
sub
sbb
shlb
popa
push
cli
lods
add
dec
call
sub
sub
js
jl
int
or
jne
or
nop
push
gs
adc
out
mov
fimull
hlt
cmpsb
jg
add
arpl
and
dec
addb
or
or
inc
add
sahf
sahf
mov
leave
in
pusha
call
cmpl
fidivl
cmp
add
sub
out
mov
mov
fisubs
jo
adc
jae
clc
inc
aas
push
dec
jg
imul
mov
or
sbb
or
jbe
inc
mov
test
mov
test
inc
cmp
inc
pop
int3
jle
enter
push
push
mov
push
dec
insb
add
aas
or
fbstp
in
sbb
xor
cli
iret
jnp
jno
daa
jp
lret
inc
xlat
mov
imull
shll
mov
ss
mov
adc
sbb
repnz
sti
dec
cmpsb
push
push
push
out
pop
mov
imul
daa
shrl
xchg
sub
adc
lock
aam
in
add
jo
mov
jae
daa
das
sbb
into
inc
jo
in
fisubs
fcompl
jmp
gs
xchg
nop
dec
xor
mov
lret
test
mov
fiadds
adc
dec
loope
pop
pushf
in
int3
sbb
pop
test
test
mov
cltd
pop
mov
bound
outsb
mov
rcr
cmc
js
push
pushf
mov
mov
test
inc
push
mov
out
add
jmp
xchg
fidivs
out
psubb
arpl
mov
repz
test
repz
andb
addl
and
lcall
lahf
jo
pop
push
cmp
into
fstp
mov
or
jns
out
rcrb
jg
out
js
loop
stos
lods
cmc
clc
mov
mov
test
test
or
add
pusha
shl
cmpsb
dec
sub
adc
int
andl
xchg
and
dec
in
imul
test
mov
loope
mov
dec
push
jle
add
inc
mov
test
and
add
call
dec
adc
cmp
test
cmpsb
dec
clc
stc
jmp
mov
cmp
movsl
mov
pusha
daa
mov
xchg
xor
mov
xchg
ret
and
sbb
or
mov
cwtl
lods
jns
fdivp
adc
xchg
and
cwtl
test
fwait
sbb
mov
stos
cld
icebp
xchg
gs
mov
adc
add
out
pop
dec
daa
shlb
pop
pushf
jle
xchg
inc
jmp
xchg
mov
inc
sub
push
xchg
adc
inc
idiv
leavew
sbb
aas
xchg
stos
and
pusha
loop
cmpsb
lret
fdivrl
sub
lock
sarl
inc
aaa
cmp
sbb
dec
cld
notb
imul
mov
lret
mov
mov
and
sbb
add
loopne
fnsave
sarl
or
es
mov
xchg
test
mov
xchg
mov
repz
test
pop
test
test
testb
mov
rclb
adc
mov
sub
out
mulb
aaa
cltd
add
mov
jb
mov
sbb
jecxz
out
cmp
lods
inc
cmp
insb
add
push
or
aas
or
lods
push
js
std
fnstenv
scas
loopne
xchg
mov
movb
mov
shl
imul
add
or
mov
outsl
pop
lret
sbb
push
rcll
fisttpl
dec
aaa
sbb
shrb
cmpsb
fcomps
mov
adcl
or
cmp
inc
xlat
fwait
or
jge
int3
lock
or
in
in
pop
test
flds
into
test
cwtl
add
xchg
ret
out
es
dec
jecxz
and
sbbl
scas
out
out
mov
or
rorl
dec
scas
add
ficomps
addb
jge
fdivrs
test
shrb
push
and
repnz
shll
in
hlt
ja
popa
pop
sub
dec
leave
pop
xchg
xor
imul
xchg
dec
dec
lret
gs
call
stos
sbb
mov
add
jae
mov
cmpsb
das
lods
rcrb
pop
int3
imul
out
in
stc
adc
negl
mov
push
jge
inc
sub
xor
mov
aam
cmc
jbe
mov
or
js
in
adc
scas
dec
scas
idiv
aad
mov
xchg
sbb
xor
imul
or
cmc
iret
jmp
and
push
mov
es
sbb
or
or
mov
push
cwtl
movsl
repz
sarl
dec
sub
mov
test
sub
pop
aam
pop
fwait
push
lea
sub
lds
dec
fwait
test
aaa
bound
test
adc
dec
sbb
ret
out
aas
hlt
roll
pop
cmpsb
sarb
ret
sub
popf
in
andl
xchg
cmp
iret
mov
dec
jns
xchg
ret
out
das
fmuls
xor
dec
movsl
mov
iret
test
out
add
xchg
fildll
sbb
inc
out
dec
inc
fdivrs
lcall
mov
sub
call
sbb
ds
jbe
cmp
mov
jb
fistpl
les
movsl
mov
xor
sub
push
mov
xchg
loop
mov
es
xor
inc
repz
les
lods
and
ljmp
mov
scas
js
push
movsb
loopne
pushl
inc
fcompl
pop
pop
or
testl
frstor
mov
cmp
mov
mov
fists
or
cmp
cmp
dec
scas
add
iret
sbb
loop
cmpsl
pslld
mov
add
dec
daa
xchg
lcall
jbe
data16
inc
jo
or
push
leave
clc
aad
push
cmc
xlat
inc
aam
sti
out
adc
mov
dec
int3
pop
int
inc
adc
rcrb
dec
cmpsb
enter
mov
icebp
sbb
jbe
jg
in
lahf
stos
mov
sbb
sbb
push
add
cmc
es
in
lock
call
idivl
inc
aaa
sbb
sbb
shr
add
in
mov
push
mov
push
mull
cli
add
and
xchg
int
outsl
pop
jnp
test
mov
pop
push
mov
testl
cmpsb
and
dec
dec
inc
cmp
fs
mov
inc
jo
scas
mov
xchg
adc
inc
cmp
push
pop
fmuls
push
nop
adc
fcmovu
mov
movl
pop
pop
test
inc
cmp
js
fistl
cmp
daa
and
adcb
divb
ss
and
cs
inc
out
sbb
int
xor
cwtl
repz
mov
add
in
xor
movsb
dec
or
mov
fwait
xchg
dec
xor
ret
je
and
mov
stc
xchg
scas
push
xor
sbb
jae
into
int3
mov
cmp
imul
push
ja
xor
cmpl
jl
mov
sbb
lds
jge
jne
push
in
arpl
mov
lcall
add
mov
cltd
inc
sbb
out
imul
cmp
sbb
dec
fadds
pop
mov
pop
xchg
ja
and
jne
lahf
test
mov
push
dec
sbb
jb
push
fcom
xor
loopne
xor
iret
mov
shlb
pop
push
mov
outsb
mov
out
dec
fadd
jb
mov
mov
into
ds
cmp
shr
ror
inc
cs
xor
xchg
ret
xchg
loopne
aad
test
ffreep
inc
and
mov
jbe
sbb
mov
repz
push
inc
adc
je
dec
fdivrp
and
pop
mov
mov
insl
pop
jo
jmp
lods
loop
insl
and
or
dec
call
mov
inc
push
mov
jae
xchg
nop
cmpsl
mov
into
test
popl
mov
rcrl
in
bound
add
rol
sub
jle
stc
sub
add
jg
jmp
mov
mov
mov
and
push
pop
mov
jmp
dec
enter
lods
cmp
cld
sti
subl
inc
jb
call
xchg
push
scas
test
push
stos
push
xorl
loopne
fmull
test
sbb
test
ss
test
push
xor
inc
clc
sbb
inc
lods
repnz
mov
push
scas
mov
icebp
mov
lds
xchg
out
push
or
jnp
dec
out
xchg
sti
outsl
jl
mov
pop
into
push
cld
sti
pop
adc
cmp
in
cmp
rclb
out
and
pop
jl
dec
out
mov
dec
add
inc
jno
mov
sub
mov
repz
jle
cwtl
cmp
push
ret
sub
adc
jns
jb
ret
rcr
ds
push
shl
jp
dec
loope
out
mov
xlat
les
in
aad
mov
dec
sub
pushf
push
cmp
jnp
icebp
sahf
jg
stos
loope
cmp
stos
push
outsl
push
xor
nop
test
push
insl
push
inc
icebp
xor
test
or
push
xchg
cmp
pop
mov
test
ret
inc
xor
cwtl
call
mov
inc
sub
cmp
popa
cmp
repnz
leave
cmc
in
xchg
repz
in
shrb
rcl
push
rcll
xchg
mov
mov
sbb
cmpsb
fstps
mov
add
fldcw
ds
stos
shll
mov
bound
scas
scas
je
dec
sbb
in
cmpsl
xlat
jns
shlb
inc
insl
lcall
push
push
fwait
push
inc
xchg
mov
pop
enter
and
add
movsl
je
inc
sar
ret
push
push
cltd
out
add
push
scas
test
fdivp
jo
movsb
xchg
das
pop
mov
sbb
fcmovu
test
dec
das
add
fnstsw
stos
pop
lret
mov
adc
out
cwtl
sub
pop
orl
ffree
lods
mov
lods
cmp
xchg
jb
es
incl
jne
cmp
leave
mov
push
cmp
jno
push
cmp
jbe
popa
and
and
push
leave
push
in
dec
pop
inc
or
inc
xor
out
mov
xlat
orl
inc
jmp
testl
push
sti
adc
shlb
les
add
pop
mov
jb
in
insb
mov
mov
nopl
xor
or
adc
rorb
notl
pop
ror
rcl
out
mov
xchg
push
out
jle
dec
pop
outsb
inc
call
ret
pop
push
and
je
mov
and
popf
dec
fdivrl
ret
insl
iret
mov
mov
jno
jecxz
mov
jae
dec
sbb
and
xor
outsl
adc
aad
cwtl
sub
call
bound
sub
xchg
jbe
xchg
inc
and
in
inc
je
outsl
aas
sbb
sbb
sub
loop
xor
mov
sub
int3
ret
fmul
push
jns
or
pop
jmp
cmpl
jnp
lds
in
fwait
xchg
adc
push
mov
loope
xor
lret
test
fcoml
and
inc
jmp
dec
xchg
aaa
mov
push
mov
mov
cmc
repnz
or
scas
push
mov
jbe
jnp
imul
push
pushf
pusha
xchg
insl
and
or
or
lock
lods
xchg
dec
enter
rolb
cmp
divb
xor
push
idivl
gs
xchg
mov
jle
ss
xchg
dec
negb
xchg
pusha
test
push
sub
dec
repz
mov
fs
inc
jp
dec
sahf
xor
outsl
cmp
cmp
bound
jo
push
fwait
sbb
in
jne
and
pop
out
imul
mov
mov
ja
xchg
sub
out
jp
lahf
xorb
xor
rorb
aad
mov
pop
test
lcall
lods
iret
jnp
jg
pop
lahf
popf
jns
add
ja
sbb
xchg
hlt
pop
sub
loope
cmp
ds
jge
int3
xchg
add
mov
in
cltd
and
test
in
cltd
xchg
ror
add
jmp
fldl
pusha
mov
dec
sbbl
mov
dec
cwtl
lea
std
mov
adc
push
xor
push
fwait
loopne
mov
repz
out
pushf
mov
lods
cmp
cmp
fsub
jo
dec
ljmp
mov
dec
sbbl
test
or
aam
and
fdivr
aad
stos
int3
in
fstl
lds
es
mov
dec
jae
aas
sbb
aad
xor
or
clc
or
push
adc
add
mov
and
idivl
rcr
or
icebp
push
jns
xor
hlt
pop
out
add
outsl
shlb
xor
jmp
jo
stos
sub
add
mov
jae
fs
jmp
mov
mov
fiaddl
outsb
cwtl
adc
pop
testb
sub
jl
test
jbe
pop
jae
xchg
xchg
mov
xchg
sub
mov
sti
or
mov
lret
test
ja
roll
add
imul
mov
je
adc
mov
cltd
hlt
push
lea
in
xor
push
call
sub
and
cs
xchg
and
lahf
add
mov
bound
mov
cmp
loopne
mov
enter
movsl
mov
outsb
fidivrl
pop
cmp
add
fidivrl
pop
pushf
dec
mov
scas
jo
in
cmc
cltd
sub
mov
xor
sahf
lds
push
cmc
outsl
fwait
shlb
add
sbb
sahf
adc
xchg
ficoml
insl
xor
jp
xchg
jnp
stos
pop
mov
outsb
or
xchg
pop
mov
ss
cmpsb
and
repz
out
or
repnz
icebp
jns
and
fsts
dec
cmp
call
xchg
inc
cmc
lret
xor
inc
aad
inc
cwtl
push
cli
xchg
je
mov
jecxz
pop
sbb
shrb
push
daa
iret
inc
fistl
loopne
out
adc
and
sbb
int
scas
inc
lret
and
enter
push
lods
fildll
outsb
jl
add
jne
popf
mov
shrl
adc
into
add
fstps
aas
xchg
mov
arpl
inc
and
into
and
scas
and
out
mov
pop
inc
sbb
jno
das
or
fsubr
jo
cmc
movsb
and
mov
jmp
xor
sbb
add
arpl
sahf
mov
xor
xchg
scas
push
cmp
int
imul
and
clc
jne
stc
aaa
mov
lret
or
push
sbb
inc
jb
and
loopne
add
roll
add
icebp
andl
addb
out
and
push
insb
enter
sti
mov
push
dec
sarb
in
negb
xchg
pop
aas
cli
jl
cmp
loopne
leave
in
jo
mov
loopne
outsb
fsubrl
cmpsl
cmp
dec
push
jle
push
xchg
add
lds
adc
shrl
adc
fnstsw
push
mov
mov
jmp
xor
sub
push
mov
xlat
pop
inc
jnp
mov
sub
in
jecxz
stos
enter
pop
movsl
mov
push
test
lods
call
mov
inc
inc
test
cmp
rcrl
shll
sub
push
mov
jns
pop
jge
leave
loopne
dec
mov
mov
mov
adc
pusha
in
ss
xor
pop
lods
mov
ljmp
aaa
or
pop
pop
sub
lret
dec
mov
ficoml
xor
cmc
lahf
pop
in
add
push
xchg
cmpsb
add
pop
jge
xor
insl
test
fwait
and
shll
je
lods
mov
xchg
hlt
lods
aad
data16
pop
push
push
jecxz
cli
dec
test
push
lcall
sahf
test
jmp
mov
insl
stos
out
push
mov
inc
lret
mov
push
aam
jp
call
lahf
and
add
and
aad
loope
jle
fdivl
sub
mov
pop
jno
adc
add
call
rcll
arpl
andl
push
mov
cmc
fstpt
lret
and
shlb
pop
sarl
adc
stos
stos
fiaddl
jb
jl
xlat
or
outsb
cli
sahf
int
mov
jecxz
dec
push
stos
cmp
and
fistl
arpl
outsb
mov
movsb
ret
sub
or
adc
lret
in
push
xchg
and
mov
lods
movd
adc
sbb
xor
cmp
jecxz
adc
stos
out
or
mov
movl
cld
ds
or
adc
adc
fucomp
sbb
test
iret
cld
sub
pop
ljmp
push
lods
push
pusha
or
inc
mov
jp
lret
dec
movsl
mov
adc
mov
sbbb
dec
add
mov
xor
mul
imul
roll
addr16
test
orl
push
add
sub
popa
xlat
movb
loop
xchg
dec
mov
push
inc
and
fistpl
ret
pusha
jmp
sub
pop
adc
lods
in
sub
in
lock
incl
shl
int
divl
sub
stos
inc
pop
xor
pop
in
inc
int3
rcr
out
repz
add
mov
negl
mov
xchg
cmp
xchg
xor
pop
test
inc
push
stos
pop
jmp
fcomps
sahf
ret
aam
bndldx
popa
int3
adc
addb
and
sub
cmp
jne
inc
adc
add
sbb
std
mov
or
rolb
inc
cwtl
add
pop
mov
dec
pop
add
rorl
in
pop
fstpt
or
add
mull
fdivrs
xor
orb
cltd
aaa
loope
or
ror
scas
rcl
mov
popf
or
push
aad
sbb
pop
mov
addr16
xchg
and
pusha
loopne
mov
push
fwait
and
mov
cmp
mov
mov
int
sti
fiadds
lods
das
pop
push
jo
fcmovnbe
cmpl
scas
fcmovne
inc
mov
mov
cmp
sub
cmpsb
movsb
mov
popa
dec
out
mov
repnz
lock
sbb
push
mov
dec
scas
pop
dec
fisttps
dec
jo
dec
or
mov
je
addb
dec
cs
cmp
pop
and
in
mov
add
popa
jge
cmp
mov
shlb
sub
idivb
js
faddl
and
adc
jno
jle
sahf
call
mov
mov
sahf
xlat
xchg
ret
movsl
add
int3
popf
pop
add
outsb
mov
sahf
adc
inc
jl
int3
fcmovnb
and
cmp
out
fstpl
xchg
jl
push
xchg
in
add
mov
les
mov
popf
ds
sahf
mov
es
addr16
js
pop
mov
sahf
xlat
xchg
mov
cli
sbb
mov
mov
in
frstor
fs
mov
cmp
out
repz
arpl
mov
and
fucomip
js
sub
mov
cwtl
xlat
mov
push
mov
clc
xor
jl
xor
xor
pop
setae
test
push
aaa
arpl
jge
rcrb
cmc
lret
dec
aas
adc
adcb
pusha
mov
ficoms
stc
lods
sbb
lods
xchg
xor
movsb
aaa
dec
sti
inc
sub
movsb
sub
xor
and
pushf
fiadds
shrb
jg
xorb
adc
insl
jns
ror
scas
loop
cld
test
sub
or
inc
sub
mov
fidivrl
lahf
lret
push
aam
pop
push
dec
sbb
repz
pop
and
sub
rcr
rol
fucomi
inc
test
mov
inc
xchg
mov
div
repz
bound
push
sbb
inc
lret
jle
push
bound
jne
movsb
push
fnstenv
mov
gs
sbbl
adc
pop
leave
jl
mov
dec
xchg
adc
lds
ja
fcomi
sub
test
data16
stos
out
stc
in
loopne
nop
jp
popf
adc
loop
dec
aam
subl
adc
jp
mov
cld
pop
push
inc
xor
fs
xchg
push
sbbl
ret
test
std
and
frstor
es
in
lea
pop
sbb
mov
sbb
inc
arpl
adc
scas
fs
xchg
jne
movsl
xchg
pop
in
cmp
mov
ljmp
stos
bound
call
dec
outsb
pop
test
sub
hlt
sub
adc
test
lret
icebp
mov
xor
jg
xchg
fucomp
adc
fdivrl
insl
or
loope
lret
js
in
negb
mov
outsl
and
scas
rorl
jbe
je
push
xchg
push
dec
push
cmpsl
adc
xlat
mov
adc
iret
sbb
push
ret
cmp
rol
cmp
sub
testb
aaa
test
rcll
push
jge
inc
es
iret
cwtl
cmp
loopne
jno
aas
xor
adc
popf
nop
jmp
jp
adc
dec
sbb
push
in
mov
repz
ficoml
mov
pop
ret
sbb
in
leave
fcomps
push
sbb
test
pop
cmp
mov
cmp
movsb
pop
nop
loope
mov
inc
popf
mov
xchg
xchg
out
popa
mov
nop
push
jne
out
std
jbe
mov
imul
add
jp
sbb
popa
adc
cltd
cmp
sbb
ljmp
ljmp
adc
mov
mov
sub
push
cmp
cld
and
cmp
adc
adc
mov
adc
lds
loop
xor
pop
pop
fbstp
and
pop
testb
imul
sti
loope
mov
or
dec
push
mov
pop
lea
dec
mov
pop
je
mov
pop
push
cmp
imull
bound
or
or
adc
repnz
out
cli
nop
pop
popa
stos
or
mov
data16
insb
xchg
outsb
outsb
xor
in
or
jo
cmp
ljmp
mov
push
test
arpl
scas
roll
pop
iret
imul
sub
xlat
rcrb
cli
test
sbb
cmp
rcl
xor
scas
leave
jmp
cmp
sbb
xchg
ljmp
adc
jge
xlat
popa
add
enter
add
lahf
xchg
into
lcall
mov
inc
test
rolb
in
jecxz
inc
addl
enter
cs
xorl
dec
xchg
out
sti
push
shlb
pop
in
add
lods
stos
sarl
mov
jp
sub
push
popf
mov
sahf
push
and
pop
pop
xchg
jecxz
or
lods
pusha
jl
or
dec
sti
iret
xor
popa
pop
out
mov
adc
stos
inc
test
pop
xlat
jnp
push
adc
or
mov
in
inc
ljmp
pusha
rolb
xor
jae
mov
sbb
xlat
push
sbb
fsts
push
popf
cmpsl
aas
rcr
cmp
mov
aad
daa
cmpsl
gs
hlt
push
sbb
jp
mov
enter
mov
sbb
loopne
pop
mov
test
adc
pop
mov
cmp
mov
cltd
mov
sbb
or
repnz
add
nopl
in
mov
stos
fisubs
dec
das
outsl
dec
xor
cmp
cwtl
mov
sbbl
jmp
loope
pop
add
mov
mov
ljmp
add
shrb
out
xlat
lock
ss
jl
cltd
enter
adc
test
jmp
mov
or
push
hlt
jae
xor
lods
pop
loope
out
stos
mov
inc
push
fs
arpl
pop
shl
push
sub
sub
pop
in
jae
repz
pop
push
mov
aas
mov
or
hlt
and
call
sbb
inc
mov
movsb
sub
push
imul
or
iret
in
cmc
mov
sub
or
pop
ja
insb
rcrb
aas
mov
or
xor
repz
in
lock
jle
popf
mov
iret
aad
mov
movsl
push
ss
xchg
mov
sbb
ficompl
call
lret
int
lret
idivl
cmp
lret
jae
pop
jg
js
bound
js
mov
movsl
test
xchg
mov
ds
fmuls
sbb
fs
sbb
or
sbbb
daa
mov
popf
outsl
and
sbb
movsl
gs
push
mov
mov
or
inc
mov
dec
dec
lahf
jg
push
mov
js
rorb
test
aaa
mov
sub
xor
and
jp
inc
mov
add
jle
sti
or
xchg
dec
push
loope
fcomps
je
repnz
add
pop
ret
jae
mov
pop
insb
outsl
shll
aaa
mov
add
and
push
sbb
leave
inc
sbb
push
dec
mov
or
push
int
dec
call
sti
out
daa
dec
mov
cli
push
pop
or
out
dec
jne
mov
xchg
inc
call
add
inc
or
push
fsts
pop
mov
outsb
and
cld
fwait
ljmp
cmp
inc
mov
mov
packsswb
cmp
int3
mov
mov
dec
popf
sub
push
mov
lret
pop
idivl
loope
and
mov
les
bnd
xor
sahf
imul
pop
mov
jecxz
adc
in
and
repnz
mov
notb
ror
cs
push
imul
nop
fisubrl
sti
rcrl
mov
or
sbb
bound
xorb
pop
fisubl
adc
cli
lret
pop
clc
outsl
sti
pop
fcmovu
insb
fdivrs
sub
pop
cltd
ret
lahf
sahf
mov
and
cmp
out
jns
stc
stos
push
enter
and
fsubr
mov
cmp
and
imul
jo
inc
jns
outsb
and
arpl
shlb
cmpsb
call
jb
mov
imul
xchg
js
cmc
rclb
lahf
mov
and
dec
mov
jb
xorb
inc
and
test
and
mov
and
adc
mov
xchg
out
mov
imul
out
xor
mov
test
imul
arpl
popa
int3
jno
jbe
xchg
mov
scas
push
test
xchg
into
dec
int3
ret
jno
das
pushf
inc
pop
pusha
jnp
jecxz
and
loop
jnp
and
and
cwtl
lods
imul
insb
lcall
sub
mov
pop
daa
add
into
push
adc
jmp
mov
add
cmp
js
ror
pop
and
mov
sub
call
iret
xor
sarl
or
sbb
fwait
out
outsl
daa
mov
push
test
xchg
jge
test
mov
loope
mov
in
add
inc
xchg
pop
push
pop
stos
out
xchg
mov
fadds
aaa
xchg
pop
push
and
loop
out
fisubl
icebp
rorb
push
xchg
inc
fs
enter
into
fdivs
leave
and
mov
sub
xor
in
jle
dec
rcrl
out
sbb
test
mov
or
addl
in
adc
and
faddl
notb
aam
mov
call
jnp
add
push
data16
cmc
mov
cmp
push
dec
mov
pop
sub
fsubs
and
cmp
test
lret
bound
lret
pushf
mov
pop
jo
mov
clc
test
sbb
dec
je
xchg
fdivrl
repz
inc
or
scas
xorl
inc
xor
lcall
xchg
add
jo
xor
outsb
mov
cmpsl
jb
idivl
arpl
js
leave
jle
repz
rcrb
cld
inc
mov
ret
and
mov
mulb
adc
push
enter
out
inc
in
cmp
or
test
out
add
ss
xor
ja
xor
aaa
out
add
insb
out
lret
push
aas
int
gs
add
sbb
mov
sarl
inc
pop
cli
ss
adc
jo
fdivr
pushf
inc
cmpsl
jbe
into
xorb
mov
loope
push
jl
inc
sub
lods
jb
and
arpl
arpl
xchg
cmp
dec
sub
mov
out
incb
pop
or
cld
and
ret
ret
xchg
pop
jp
or
rolb
cmp
xor
mov
add
sub
mov
push
scas
out
adc
mov
lahf
aad
sbb
push
inc
outsl
sub
test
lods
or
icebp
mov
pop
dec
sahf
push
movsb
ret
clc
push
ret
cltd
cmp
lret
fsts
add
loopne
fnstenv
jo
add
xchg
sbb
mov
iret
vpmacssdql
push
and
pop
xchg
cmpsl
gs
mov
xchg
pop
jne
dec
sub
add
xchg
enter
xchg
push
test
jmp
cld
mov
js
push
out
dec
test
movsb
push
std
or
lret
push
or
lds
ja
sti
daa
js
jmp
adcb
js
mov
mov
pop
cmp
inc
repz
lock
fstpl
adc
lcall
xor
xor
mov
xchg
sub
mov
cltd
push
je
test
mov
daa
faddl
sub
mov
popf
fstps
imul
mov
cmc
inc
pop
aas
sbb
mov
add
xor
mov
sub
outsb
cmpsb
xor
jb
xor
stc
ljmp
cmp
and
sbb
stc
mov
inc
out
sti
xor
out
ss
lock
xchg
dec
shll
stos
pop
popa
stos
and
jg
mov
dec
inc
mov
ficomps
fs
mov
orl
pop
and
not
add
pop
lret
sub
arpl
in
xor
xor
adc
mov
js
scas
sub
and
mov
shld
mov
add
mov
push
inc
jmp
mov
inc
adc
lods
ljmp
gs
push
pop
test
fildl
cmp
fsubs
push
cmp
pop
mov
fnstcw
lds
push
repnz
cmp
cmp
lds
push
pop
inc
push
icebp
adc
test
push
out
lea
repz
jp
mov
aam
inc
sahf
rorb
das
jno
fnsave
sbb
cmp
imul
mov
sbb
leave
pop
and
pop
or
push
add
mov
ljmp
pop
xor
push
aaa
inc
pop
adc
and
xchg
pop
push
jle
out
mov
push
fbstp
sbb
in
pop
into
cmp
insb
out
inc
push
test
loopne
ficoms
adc
psubsb
loop
stos
sbb
incb
xchg
hlt
xor
mov
or
dec
mov
mov
gs
mov
cmp
and
int
sbb
xchg
xchg
and
add
lret
adc
in
hlt
adc
jle
ljmp
out
add
xchg
fwait
push
out
ss
in
add
mov
sahf
test
ja
lcall
shrl
jl
je
fcomps
inc
arpl
add
sub
jnp
and
ljmp
xchg
loopne
xchg
fsubp
stos
incb
imul
dec
adc
loope
loope
test
sbb
loopne
jg
adc
pop
xchg
and
int
jo
and
mov
fwait
cmp
and
push
loope
and
push
rolb
xor
or
lcall
adc
sub
add
fsts
dec
mov
push
mov
mov
push
pop
into
lock
cmpsb
cmc
add
add
test
mov
inc
or
mov
ljmp
xor
mov
or
bound
into
sub
test
cmp
scas
dec
and
sti
cwtl
inc
shll
js
jecxz
icebp
or
mov
popa
cmp
outsb
ds
imul
inc
inc
lret
jns,pt
inc
test
xlat
dec
push
jae
sub
mov
call
lahf
rcll
lret
daa
test
inc
cmp
pop
or
ss
fidivrs
shll
scas
call
fisubrs
ror
push
stos
ret
lret
mov
or
loope
mov
or
rcrb
aas
cli
jmp
adc
fwait
cmpsb
and
mov
clc
mov
or
cld
sub
mov
imul
cld
adc
jns
out
jmp
js
imul
and
jns
clc
addr16
push
add
negl
mov
mov
lds
adc
jle
fdivl
test
xlat
outsl
fidivl
add
mov
push
add
aad
jp
mov
push
das
pop
int
jge
inc
test
push
icebp
pop
or
add
mov
das
adc
mov
xor
add
dec
mov
mov
repz
mov
mov
out
bound
out
repnz
fldl2e
clc
jle
push
ljmp
aas
pop
arpl
inc
fs
popf
lahf
cmp
cmp
xchg
enter
add
scas
cs
icebp
fiaddl
fnstsw
adc
jmp
and
jae
out
mov
push
cmp
shlb
jne
mov
movsb
pop
ret
push
mov
or
sti
cmp
xlat
lods
fisttpl
sti
ljmp
cmpsl
xchg
stc
push
movsl
popa
mov
or
cmpsb
inc
or
inc
mov
popa
mov
push
cmp
adc
fs
fnstsw
loopne
adc
dec
fmull
iret
repnz
insb
or
in
xchg
push
push
jmp
mov
in
inc
ss
cmp
mov
mov
idiv
imul
cmpsb
mov
cwtl
sahf
std
inc
jmp
shl
pop
mov
mov
popa
cltd
movsl
out
lahf
sub
repz
into
xor
or
mulb
sbbl
inc
fisttpl
into
js
sbb
fnstcw
pop
fldt
fstpl
push
inc
push
xor
lret
arpl
add
push
push
xchg
add
mov
jo
adc
push
sub
push
jbe
cmp
mov
daa
push
adc
push
xor
nop
jl
lds
sar
dec
test
add
mov
rcr
cmpsb
jns
mov
icebp
sarb
scas
cmp
lock
pop
repnz
dec
les
outsl
jge
imul
sbb
mov
leave
test
jns
in
iret
pop
fisubl
xchg
xchg
lods
cs
xchg
or
mov
call
jo
dec
nop
mov
movsb
gs
push
out
adc
mov
sbb
push
pusha
cmp
pop
xchg
pop
sbb
imul
test
mov
push
mov
je
gs
push
xlat
lods
nop
push
imull
or
lds
loopne
sub
jmp
mov
pusha
sbb
pop
les
mov
cld
mov
cmp
call
jle
jne
loop
lock
cltd
sbb
mov
ss
mov
pop
xchg
add
push
jnp
fimull
jl
stos
lcall
pop
pop
xor
jnp
inc
pop
sub
fisubs
in
fsub
clc
ret
adc
int
loope
movsb
sbb
jmp
cmp
iret
xchg
shll
popa
dec
jle
xchg
sbb
dec
fsubrs
stos
jg
stos
jo
lods
xchg
out
xchg
pop
lret
inc
or
jmp
mov
rolb
into
sub
ja
scas
xor
xchg
pop
test
push
sti
aam
aad
rolb
test
jae
stc
ljmp
adc
in
in
mov
mov
or
xorl
lods
leave
arpl
into
lea
adc
jns
xlat
loop
std
aaa
dec
repnz
cli
stc
pop
adc
pop
jae
mov
inc
cli
stos
cltd
pop
cmp
or
push
es
shl
sbb
xchg
test
inc
aaa
and
mov
sbb
mov
pop
push
clc
sub
mov
loopne
sub
dec
sbb
xchg
fs
sub
xor
pop
push
sbb
jnp
sbb
icebp
mov
loope
adc
roll
mov
adc
fistl
pushf
sbb
sub
test
xor
xor
adc
inc
cmp
and
xchg
add
mov
jbe
mov
fisttpll
xchg
jmp
and
popa
lahf
lret
sahf
push
stos
cmpsb
and
mov
push
test
sub
push
in
popf
push
push
call
mov
inc
sti
and
jle
cmp
outsb
jne
cmp
jmp
cmp
push
jmp
sbb
add
movsb
or
mov
int3
movsl
xchg
daa
add
xchg
fs
dec
aam
xchg
jp
inc
push
repz
pushf
and
pop
mov
jns
imul
add
jge
arpl
adc
mov
and
imul
ret
loope
push
pop
jb
cmp
sub
iret
sbb
and
sub
adc
xor
mov
mov
loope
mov
xchg
adc
xor
inc
arpl
mov
dec
outsw
fisubrs
and
mov
inc
fnsave
xlat
gs
imul
fscale
leave
dec
xchg
aas
add
lcall
sub
ss
and
fwait
testl
cs
jmp
sub
movsl
add
jmp
or
iret
fwait
add
sub
fwait
xchg
cltd
rorb
leave
xchg
sbb
stos
xor
in
ficomps
lock
push
inc
pop
into
inc
or
rcrl
shrl
repnz
cmp
addr16
sbb
and
emms
movsb
movsb
stos
pop
dec
sahf
jmp
or
clc
out
xchg
flds
shr
mov
xchg
inc
cwtl
stc
cmpsl
inc
inc
out
xor
fisubrl
pop
sub
mov
in
and
mov
sbb
mov
test
cwtl
pushf
daa
push
mov
pop
xor
and
js
cmpb
push
mov
or
out
adc
sbb
call
pop
pushf
scas
xchg
add
push
lods
inc
sub
addr16
icebp
cmpsl
mov
sbb
cmp
jns
test
jmp
cmpsl
push
div
std
bound
push
dec
and
push
icebp
push
inc
push
mov
int
or
lods
cmpsl
leave
lods
sbb
add
xor
ret
mov
pop
push
push
jno
das
sbb
fsub
fisubs
cmp
inc
push
dec
fisttps
sub
pop
out
cli
pop
sahf
xchg
lds
movsb
add
cmp
pushf
adc
cmpsb
add
shrl
and
dec
add
xchg
stos
sti
cltd
or
outsl
scas
clc
test
mov
sub
adc
loopne
or
xchg
gs
mov
lea
and
aas
and
jne
mov
repnz
jecxz
mov
jo
in
xor
adc
loope
cld
pop
gs
dec
push
adc
and
shlb
sub
int
cld
push
sbb
mov
adc
mov
stos
out
inc
push
mov
ret
jl
jae
dec
lret
cmpsl
cwtl
or
fwait
adc
sbb
bnd
gs
jecxz
push
or
or
cwtl
jle
pop
lods
rcrl
pop
jns
mov
add
mov
push
lods
mov
jmp
fnsave
push
cmp
cmp
out
and
mov
lods
push
idivl
mov
mov
icebp
jle
lods
mov
xchg
stos
iret
out
test
adcb
outsl
vmread
pop
ss
daa
pop
dec
xor
loop
xchg
jns,pt
int3
pop
sub
mov
out
pop
mov
out
call
cmpb
sbb
sbb
xor
sbb
mov
ret
stos
aad
xchg
daa
and
shl
cwtl
adc
inc
nop
arpl
and
jne
sbb
pusha
add
mov
fbstp
pop
dec
cmpsl
ret
pop
out
push
in
mov
loopne
dec
pop
mov
loop
inc
push
or
clc
adc
add
int
ficoml
xchg
adc
fnstsw
icebp
mov
shrb
dec
add
add
add
scas
loop
mov
mov
dec
imul
mov
rcll
popf
mov
lret
js
mov
add
cmp
mov
cs
aad
leave
mov
repz
imulb
fs
pop
fstp
sti
xchg
jae
cltd
cs
es
test
adc
movsb
jmp
or
sub
push
pusha
movsb
int3
scas
addb
es
jo
sbb
mov
pusha
mov
fs
mov
mov
dec
xchg
inc
pop
fsts
jae
in
cld
inc
mov
imul
xchg
in
push
xchg
inc
add
sbb
xor
or
test
fwait
jmp
inc
xchg
shll
xor
push
add
mulb
std
cmp
aaa
jge
daa
mov
jecxz
jne
xor
adc
arpl
mov
cmp
jns
fld
fistpl
rcl
scas
outsl
push
and
scas
testl
inc
add
sbb
ret
insb
push
into
in
fadds
insb
lock
pop
adc
adc
sub
xor
and
ret
add
sbb
les
rcrb
notb
or
jge
add
adc
mov
shll
sbb
push
leave
popf
fstcw
add
fcoml
ss
imul
das
cmc
cmp
mov
cmp
pop
addr16
mov
or
xchg
sbbl
ja
sahf
inc
inc
xchg
inc
test
xchg
enter
mov
daa
xchg
push
add
cld
insb
sahf
add
jnp
stos
inc
mov
mov
xchg
mov
sub
cmp
xlat
pop
add
lds
fwait
jb
dec
fbstp
repnz
movsb
push
movsb
fdivrl
add
scas
dec
popf
movsb
out
iret
xor
and
fidivs
cmp
scas
sub
int
leave
and
cmp
shr
mov
lods
sbb
add
push
dec
aaa
arpl
fimull
and
inc
aaa
mov
cmp
call
sub
cmpsl
jge
rcll
mov
cld
imul
lea
pop
pop
xchg
ss
mov
out
mov
shlb
enter
cmc
test
into
jns
shl
lret
out
and
push
dec
and
dec
shlb
jno
lcall
mov
push
nop
xchg
xlat
stos
js
jno
pop
lea
jae
imul
sub
pop
jmp
aad
mov
add
jecxz
and
movsl
push
pop
sbb
pavgw
adc
pop
clc
or
mov
xor
daa
inc
push
inc
inc
push
std
js
fs
orl
mov
notl
sub
fmuls
popf
in
cwtl
idivb
adc
sub
pushf
mov
mov
xchg
fs
in
cmp
xlat
lods
jae
pop
fistpll
js
mov
mov
je
xor
xchg
loopne
repnz
xlat
ss
shll
cmp
lods
mov
cmc
add
aad
mov
dec
pop
into
pop
and
sbb
jmp
call
aaa
mov
stc
sti
xor
add
adc
adc
mov
andb
lcall
mov
adc
and
test
les
sbb
lock
stos
int3
iret
xchg
sahf
push
ljmp
pop
jb
aam
xlat
mov
pop
push
call
sub
scas
or
jmp
dec
in
push
jo
mov
ja
push
pop
pop
jne
jnp
in
sbbb
jb
inc
insl
es
cwtl
cmc
cmp
xchg
and
dec
sub
mov
das
jno
sarl
jns
ss
outsl
xor
or
xchg
test
and
pop
mov
movsl
jae
call
ret
lcall
imul
loop
pop
pop
repz
add
dec
add
popf
jmp
ret
and
in
orb
push
in
mov
imul
add
mov
mov
mov
ret
testb
dec
fisttpll
adc
icebp
dec
mov
movsb
sbb
subl
sbb
sbb
ljmp
imulb
in
adcl
call
mov
add
fs
mov
push
xchg
adc
loop
cmp
data16
mov
mov
jp
scas
daa
cmpsl
push
mov
sub
add
es
mov
scas
popf
xor
enter
insl
sub
xchg
mov
bndldx
inc
cmp
es
sub
inc
outsl
mov
pusha
enter
xor
sub
dec
add
popf
sbb
in
or
lret
sbb
fstl
xor
in
add
addl
cmp
or
mov
jge
loopne
nop
mov
int
jo
jmp
imul
sahf
jmp
js
add
lret
mov
es
inc
pop
lds
sbb
mov
jnp
popa
rclb
mov
ret
fiadds
ja
jl
push
dec
pop
fsubrl
add
in
pushf
stc
in
mov
adc
ret
nop
jns
mov
and
lahf
stos
jle
pop
xchg
mov
icebp
xchg
mov
lahf
push
aaa
pop
fdivs
jno
scas
addb
sahf
mov
sbb
push
pop
lods
dec
js
dec
xor
jno
fiadds
dec
or
lea
iret
adc
lcall
jp
xor
das
or
fs
cmc
jg
nop
mov
push
js
rorb
mov
sbb
popf
mov
sbb
xchg
data16
mov
xchg
adc
movsw
fidivs
test
or
mov
xlat
ljmp
loopne
xchg
add
mov
mov
dec
daa
sahf
test
lods
sbb
xor
sub
or
jo
sahf
subl
sbb
adc
push
lret
stc
sbb
dec
lods
mov
xlat
pop
jle
and
ja
fbstp
add
lock
out
mov
roll
xor
mov
jp
xchg
pop
cld
sbb
push
mov
not
jge
sbb
mov
pop
inc
aaa
xchg
movsl
push
lret
cmc
sbb
fisttpl
cmc
loop
int
push
xor
mov
scas
pop
imul
aaa
sub
mov
test
cli
fbld
cmp
xor
xor
adc
daa
subl
cmp
xor
dec
out
in
nop
iret
notb
cmpsb
xchg
cmp
repz
in
fldcw
ljmp
adc
mov
das
test
iret
test
lods
lds
cmp
pushf
ret
leave
fdivrl
sub
mov
sbb
les
push
xlat
mov
aad
cmp
cmpsl
ret
inc
lcall
outsl
sti
and
popf
mov
or
insb
test
inc
cmpl
daa
push
mov
addl
add
xchg
mov
pop
loop
cld
xchg
xor
dec
jb
add
mov
sub
std
mov
mov
scas
mov
mov
sar
fwait
jg
push
ss
mov
push
pop
call
imul
cmp
xor
aaa
loopne
hlt
push
pop
pop
out
lret
mov
pushf
imul
xchg
cmp
add
pop
std
leave
sub
xchg
movsl
imul
movl
xchg
fisttps
lahf
xchg
pushf
xor
mov
mov
inc
xor
xchg
dec
les
mov
in
xchg
lods
rcrb
mov
cmc
lcall
scas
ret
adc
in
mov
into
or
pop
mov
std
mov
loopne
cltd
in
in
push
les
xlat
push
sti
push
mov
leave
sub
adc
lods
or
lea
add
dec
mov
inc
rol
daa
pop
adc
dec
or
push
fildll
sarl
pop
cltd
scas
adc
mov
lret
lock
pop
out
xor
adc
les
fs
aaa
mov
push
loopne
cmp
inc
mov
loop
decb
pop
popa
out
jge
mov
enter
ds
xchg
cltd
lahf
mov
test
xor
and
repnz
rolb
aad
jle
mov
idivb
mov
push
cmp
out
xor
mov
jmp
add
and
sub
fucomi
xor
icebp
mov
out
jle
adc
enter
cltd
inc
cmp
test
sub
mov
jns
push
lock
lcall
and
jmp
mov
xorl
xor
sar
and
mov
xor
movsb
loope
dec
push
adcb
adc
ja
pop
jne
jge
cmp
mov
adc
cld
push
aas
ljmp
or
and
push
and
sbb
fcmovu
sahf
nop
xor
and
int
in
pop
rcr
mov
arpl
jbe
std
xor
mov
pop
ss
aad
aad
enter
mov
or
mov
loop
xorb
scas
aaa
inc
movsb
in
push
sub
nop
cwtl
es
in
inc
int3
das
repz
pop
push
divl
xchg
enter
and
int
mov
or
mov
out
xchg
pop
mov
cmp
fcoml
xor
xlat
pop
test
repnz
cmc
js
push
and
je
data16
and
adc
roll
jecxz
dec
pop
call
jo
push
mov
xlat
inc
adc
shl
xor
xor
mov
pop
ret
adc
das
inc
and
xchg
int3
and
mov
insb
aas
test
fnsave
sti
dec
xor
mov
cld
cmp
fldcw
xor
out
cmpsb
fiaddl
arpl
fildl
aaa
sub
mov
xlat
cmp
loope
cs
dec
mov
add
adcb
xchg
mov
add
and
into
inc
add
std
fwait
orb
pop
sub
dec
pusha
pop
mov
aam
adc
arpl
xor
pop
sbb
sub
cmp
sub
adc
ret
in
fldenv
pop
jns
inc
sub
sti
mov
mov
and
ret
mov
sub
rcrl
inc
dec
pushf
aad
fldt
mov
push
pop
hlt
adc
lods
stc
push
sbb
ret
js
inc
test
pop
jns
or
nop
lods
leave
arpl
xor
xor
xor
xchg
je
push
pop
mov
stc
add
lock
push
sbb
push
xor
loope
dec
movsl
cmp
movsl
pop
xor
outsl
bnd
sti
in
xchg
cmpl
add
int
mov
jne
pop
mov
je
out
jnp
sti
inc
les
cs
push
push
adc
push
mov
jp
fildll
cwtl
scas
int
in
icebp
add
cmpsb
or
inc
push
or
and
fisttpll
push
dec
in
arpl
jmp
mov
ss
add
sbb
mov
pop
pop
cmp
or
sbb
or
jp
inc
jae
sbb
hlt
adcl
sahf
xchg
xor
mov
aas
out
adc
sbb
fcmovnb
jmp
inc
ret
add
mov
xchg
jns
cmp
xchg
dec
add
sahf
jo
adc
lcall
or
and
cmpsb
mov
lds
test
imul
sbb
repnz
out
dec
pop
lea
aad
outsb
inc
divb
jno
imul
jp
mov
or
dec
mov
mov
pop
pop
lock
pop
adc
inc
sbb
jge
testl
adc
fdivr
and
push
mov
rolb
shlb
xchg
pusha
cltd
lret
outsb
mov
mov
call
jns
sbb
and
adc
aam
adc
dec
mov
out
xor
pop
or
pop
dec
adc
sub
testb
imul
repz
cmp
xchg
cmpl
movsl
inc
movsl
cltd
icebp
imul
mov
ds
mov
aaa
in
jmp
push
stc
ss
arpl
int
mov
cmp
mov
aad
lock
inc
cmc
ljmp
fistps
mov
sbb
push
cmp
mov
jnp
xchg
dec
data16
cmp
outsl
out
xchg
movsl
xchg
imul
push
cmp
out
pop
sahf
fbld
push
pop
ficomps
aas
xchg
stos
test
pop
in
push
or
pop
sti
sarb
les
pusha
push
dec
addr16
aas
bound
jecxz
mov
fsubl
sub
xor
inc
ss
loope
shlb
inc
add
inc
cmp
sub
leave
add
sbb
pop
imul
cli
dec
jnp
fcomps
inc
inc
test
sbb
jbe
push
in
jb
xor
dec
pop
sahf
mov
dec
inc
daa
mov
sbbb
fistpl
in
pop
aad
cmp
test
and
add
push
mov
outsb
inc
mov
jecxz
mov
loope
dec
andb
dec
lcall
in
fcmovnb
rcll
jae
cmc
adc
dec
das
sbb
cmpsb
jb
and
imul
inc
ljmp
ja
sub
jmp
je
or
js
add
push
jae
dec
or
sub
call
inc
jg
loopne
add
inc
stc
mov
mov
outsl
jge
mov
sub
sbb
push
ljmp
push
loopne
gs
push
popf
lret
adc
data16
mov
ret
les
adc
mov
mov
add
inc
sbb
cli
dec
xor
hlt
rcl
sub
mov
das
xchg
out
scas
sahf
pop
mov
jg
ja
lcall
jmp
mov
pop
callw
cltd
dec
dec
sbb
in
mov
ret
daa
mov
jp
in
or
loop
inc
push
ljmp
aad
dec
pop
mov
add
dec
test
push
cmp
ret
loopne
stc
lcall
mul
gs
pmaxub
movsb
outsl
test
aas
pop
test
loope
test
xchg
lea
or
orb
mov
pusha
cmp
pop
cmpl
xor
in
lahf
clc
add
test
jne
xchg
aad
imul
push
jge
enter
inc
add
movsb
inc
jnp
push
bound
mov
sbb
lret
jle
xor
mov
pop
lds
mov
stos
mov
clc
js
bswap
dec
cmpsl
leave
and
mov
fcomp
mov
xchg
fldl
es
dec
enter
push
adc
pop
fldl
inc
cld
jno
xchg
aam
jg
sahf
add
shrl
jns
lcall
ret
mov
dec
inc
jae
fldt
push
fucomip
sub
pop
leave
ss
rcll
in
out
aaa
fdivrs
shr
cmpb
out
dec
sub
push
cmp
jecxz
mov
stc
mov
mov
lock
sarl
mov
loopne
add
loopne
fldpi
xchg
push
fs
xchg
gs
and
push
in
xchg
xchg
push
repz
stos
push
lcall
cli
sbb
mov
push
or
jecxz
js
mov
les
xchg
and
sbb
scas
dec
decl
mov
lret
test
mov
aaa
cld
mov
sub
xchg
ljmp
ficomps
mov
fsubrl
push
ss
ljmp
ss
and
mov
subl
and
int
sarl
cmpsb
pushf
pop
cmp
out
jecxz
shrb
fs
pop
mov
aas
mov
xchg
add
jecxz
sub
adc
imul
test
call
xchg
jae
pop
int
mov
cmpsb
add
or
fwait
aas
jbe
inc
mov
fwait
ret
sahf
sub
cmp
les
push
ficoms
sub
les
lret
inc
imul
jb
mov
gs
setae
mov
add
push
and
cmc
jl
add
adc
or
push
movsb
les
pop
push
cmp
mov
mov
jmp
dec
hlt
mov
and
loopne
dec
xor
scas
ljmp
test
sub
divl
repz
inc
jnp
insl
push
jp
mov
in
stc
mov
out
cmp
xchg
dec
pop
push
pop
pop
stos
xchg
stos
push
push
pushf
lods
jecxz
mov
sbb
cmp
in
stos
and
data16
and
mov
imul
popa
jmp
out
test
rcll
adc
sub
in
and
fsubr
faddl
cwtl
jae
neg
aas
fisttpl
add
in
scas
and
cli
sub
push
loopne
bound
popa
and
inc
xchg
lods
ljmp
in
cmc
test
mov
rolb
mov
lods
cmp
pop
jmp
adc
enter
je
sub
aas
shlb
test
push
sbb
push
and
faddl
std
fisttpll
out
mov
les
jae
fldt
repnz
cmp
lea
add
mov
arpl
or
cwtl
loopne
scas
and
daa
movsb
fs
mov
cmpsb
xchg
cli
mov
test
lds
jg
mov
in
es
mov
ja
lret
addr16
dec
test
pop
movsb
ljmp
dec
sbb
lret
subb
aam
mov
mov
fisttps
cs
add
mov
dec
push
jle
xor
lds
test
sbb
inc
cmp
scas
xor
fwait
mov
fs
dec
lock
or
in
repnz
outsb
movsb
aaa
sub
xchg
cwtl
stc
and
xchg
loop
lahf
jnp
pop
loopne
int
stos
pop
mov
adc
test
and
sbb
mov
cli
mov
outsl
adcb
addr16
fnsave
mov
dec
push
jne
add
sbb
mov
test
cmp
sub
xor
sub
cs
out
jmp
and
mov
sub
ficoml
js
cli
inc
mov
lea
jl
add
pop
dec
ss
inc
dec
cmpb
push
call
pop
sbb
and
add
popf
das
mov
mov
ljmp
add
push
pop
jne
outsl
imull
pop
sub
push
jnp
sahf
jae
push
mov
ret
xor
mov
add
imul
dec
pop
loope
into
mov
pop
iret
test
aas
sbb
pop
mov
jecxz
sub
add
out
inc
adc
jecxz
fdivr
fwait
ljmp
adc
dec
mov
inc
push
push
mov
inc
jmp
inc
mov
sbb
dec
daa
mov
sbb
jnp
dec
mov
inc
insb
orb
jo
push
add
movsl
ds
or
adc
xor
enter
jno
adc
cmc
jp
fsubl
pop
and
test
fmull
xchg
loop
aad
jmp
fcoml
cmc
cmpb
push
or
repnz
notl
xchg
ljmp
jo
scas
pop
dec
jnp
pop
lahf
pop
mov
xor
push
out
int
or
repz
xchg
shlb
fbstp
mov
test
fs
xchg
bnd
sbb
xor
loope
xchg
iret
lret
aaa
scas
jl
test
adc
out
mov
xor
push
enter
xchg
cwtl
lcall
adc
loope
dec
rolb
cmp
sysret
push
mov
push
jae
push
xchg
xchg
std
pop
xlat
adc
inc
mov
fisubs
call
inc
bound
dec
adc
neg
lahf
inc
push
inc
rcrl
push
push
jl
dec
sahf
aas
jp
mov
xchg
pusha
pop
arpl
stc
lods
aaa
xchg
cmp
fs
popf
sbb
mov
sbb
stos
out
xchg
push
stos
shrb
push
aad
xor
or
jnp
xor
mov
inc
gs
shlb
or
cmp
mov
stos
loop
popf
loop
ljmp
mov
xor
lea
xor
ds
inc
in
push
in
fmull
movsb
mov
fldcw
and
decb
inc
cli
jmp
xor
xchg
or
and
mov
jle
dec
dec
lret
fcomi
adc
mov
push
xlat
jle
outsb
movups
jbe
add
loope
push
test
pushf
ss
lahf
mov
mov
or
out
mov
and
ret
xchg
inc
cvtpi2ps
dec
pop
test
pop
mov
and
ret
mov
rorl
in
sahf
hlt
subb
ja
cmp
iret
rclb
call
xchg
imulb
mov
mov
pop
push
cmp
cmpsb
das
movsl
jb
mov
fsubrl
inc
sti
jne
or
bound
add
dec
sarl
jge
adc
sbb
sub
mov
jmp
cmc
mov
inc
popa
cwtl
jmp
lcall
add
mov
and
adc
push
insb
mov
jp
jno
jns
mov
jecxz
aad
sbb
dec
scas
mov
and
sbb
sbb
jb
sti
lods
lea
popa
sub
pop
or
xchg
lods
inc
cmp
leave
sbbb
push
jmp
push
jno
dec
in
pop
cld
dec
stos
ret
cltd
fsts
fcmovbe
decb
mov
hlt
mov
cmpsl
mov
mov
push
jle
xchg
jb
pop
lret
push
lock
ret
lahf
dec
cld
bound
aas
xchg
sub
lret
icebp
mov
in
jb
xlat
push
jmp
loopne
aas
aaa
jge
adc
sub
cmp
xchg
cld
pop
sub
cmpsl
mov
repz
add
xor
hlt
mov
add
cltd
and
adc
sub
xor
scas
mov
scas
mov
jns
fsts
into
paddb
mov
test
cld
pop
adc
xchg
xor
cmp
dec
mov
inc
and
call
mov
and
movsl
pop
inc
out
inc
cmpsb
sub
in
mov
pop
mov
arpl
push
outsl
incl
jl
repnz
sbb
dec
mov
add
and
pop
pop
mov
aas
mov
xor
add
jge
or
loope
xchg
sub
int3
hlt
aam
jmp
sahf
ljmp
jns
mov
aam
adc
dec
mov
in
adcl
inc
cld
adc
icebp
inc
stos
aam
loope
mov
xchg
cmpsl
outsb
pop
rorl
push
jns
add
jno
daa
or
adcl
test
cwtl
lea
aas
mov
pusha
sbb
addr16
lock
adc
mov
dec
add
or
xor
pop
mov
pop
adcb
xchg
mov
push
icebp
xchg
pop
call
jne
hlt
test
adc
dec
icebp
aam
fnstenv
sub
fsts
cmp
sar
mov
push
push
sub
maxps
xor
sub
adc
push
push
test
ss
mov
mul
mov
outsl
cli
mov
inc
jmp
stos
bound
mov
clc
add
pop
mov
inc
das
adc
push
mov
in
je
sub
jmp
sub
mov
data16
iret
inc
mov
mov
mov
out
xlat
cmp
out
ljmp
data16
js
imul
add
pop
cmpsb
mov
jo
dec
aad
loope
test
clc
or
adc
sbb
js
mov
mov
test
lret
in
lcall
clc
pop
xor
aad
ss
xchg
inc
adc
sub
inc
imul
mov
pop
fcomps
sub
je
data16
je
mov
hlt
push
cmc
sub
das
xchg
out
insb
jo
sbb
jnp
mov
movsb
adc
scas
dec
aas
test
aam
xchg
mov
sbb
call
and
and
xor
ja
mov
jmp
jo
and
inc
sahf
add
add
fisttps
iret
mov
jb
dec
add
int
cwtl
xchg
push
hlt
xchg
dec
mov
jecxz
push
xlat
jecxz
adc
cld
outsl
inc
add
test
cltd
cwtl
daa
xchg
jnp
sub
adc
test
pop
in
sub
mov
lcall
test
aam
sub
mov
out
xchg
xorb
add
or
push
and
mov
ror
mov
pop
fldcw
rcrb
ds
xchg
negb
mov
and
dec
insb
fwait
pop
lret
xor
jmp
sub
fstpt
cmp
in
sbb
adc
push
mov
sub
repnz
mov
aad
nop
popa
in
push
data16
dec
andb
in
out
int
xchg
in
pop
mov
mov
cmp
lcall
and
pop
mov
push
add
pop
pop
pop
fcoml
pop
fs
mov
es
ror
jp
adc
imul
xorl
scas
ret
subb
add
fst
fcompl
rclb
cmpsl
xlat
jg
push
enter
sub
pop
je
aam
push
fsubrp
cmp
add
test
lahf
or
inc
xchg
movsb
out
lock
stc
xor
sbb
imul
cli
xchg
sbb
xchg
subb
cmc
or
out
pop
stc
out
test
push
adc
or
insb
jo
orb
lcall
xchg
mov
les
in
xor
push
push
xor
stc
jo
mov
dec
jns
mov
movsl
into
mov
push
pop
add
xchg
inc
dec
cld
pop
jb
mov
dec
enter
es
push
pop
sbb
mov
xor
call
aaa
xor
icebp
dec
jo
mov
jbe
pop
xlat
xor
mov
cltd
jle
dec
das
dec
pusha
arpl
addr16
adc
sub
imul
pop
sbb
mov
mov
add
in
pop
test
sbb
xchg
out
xchg
mov
cmpsl
inc
mov
cwtl
jmp
cmc
mov
je
or
out
stos
sbb
lcall
dec
cmp
dec
xchg
imul
inc
roll
push
and
dec
outsl
pop
das
pop
lds
xchg
fiaddl
orb
pop
jb,pt
xchg
out
or
mov
cmp
xor
mov
push
jb
mov
push
adc
mov
and
push
lret
jmp
into
xor
and
sarb
sarb
in
sbb
test
aas
adc
in
push
cmp
pop
flds
mov
push
push
jmp
mov
test
lret
and
add
repnz
inc
jl
mov
and
add
inc
jge
inc
push
and
ret
cmp
ss
outsb
add
or
mov
cmp
push
xor
sysret
push
mov
xor
fidivrl
cmpsl
xchg
fidivs
adc
jb
sti
adc
inc
cmpsl
iret
pop
mov
shll
mov
mov
lret
mov
mov
dec
jnp
adc
inc
pushf
pop
in
in
inc
cmpsl
mov
xor
pusha
shll
and
add
sub
je
push
fninit
je
repz
out
xor
imul
cmpsl
sub
jo
hlt
loope
cmp
jg
imul
jl
les
jg
js
jbe
xchg
mov
or
jecxz
mov
adc
mov
clc
or
xor
dec
in
jb
cltd
cmp
popf
cli
and
push
into
dec
cmpsl
cmpsb
cmp
push
dec
add
iret
xchg
stc
cli
sbb
pushf
aaa
insl
sahf
icebp
insb
pop
ja
sti
push
lock
ret
ss
in
popf
lea
mov
in
adc
jbe
or
xchg
ret
lcall
cli
push
dec
scas
popa
lret
push
testb
inc
and
sbb
ret
xlat
cmp
mov
aam
mov
pop
mov
fidivl
aad
clc
adc
js
and
call
fcomip
mov
popa
data16
pop
mov
sbb
dec
or
repz
sbb
mov
mov
push
jb
push
jae
xorb
int3
loope
xchg
movsl
sub
addl
and
sub
sbb
fidivrl
mov
push
addb
lock
mov
loope
xchg
sbb
lods
loopne
push
mov
jne
bound
bound
mov
or
push
xlat
xor
push
shrl
clc
pop
sub
ss
lea
push
or
cs
popa
cltd
mov
mov
clc
into
push
mov
push
decb
sahf
mov
arpl
sub
push
int3
cmc
mov
jo
incb
sbbb
xor
aas
ds
push
xlat
xor
cmpsb
mov
adcb
jg
pop
adc
gs
aas
mov
and
addr16
rcrl
stos
sbb
pop
loope
sbb
les
sbb
sbbl
repnz
mov
inc
xor
jno
mov
push
cmp
pop
pop
sub
movsl
sbb
add
cs
lret
imul
or
call
cs
mov
sbb
shrl
jno
jbe
pop
leave
adcl
mov
dec
xor
pushf
sub
dec
sbb
aad
sbb
fdivl
xchg
mov
in
sbb
loopne
inc
mov
add
std
lods
inc
sarl
jae
cltd
mov
data16
add
test
jge
jl
cmp
scas
hlt
xchg
sub
jbe
mov
adc
cmpsl
mov
pop
push
pop
mov
lret
xchg
ljmp
jo
xor
xor
aaa
or
popa
sub
sbb
out
insl
pop
xor
repz
lods
loope
or
cld
xchg
adc
and
mov
stc
mov
test
fisttps
or
mov
ljmp
jne
and
mov
call
hlt
cmc
cmp
je
lock
dec
push
sbb
ds
push
fisttps
dec
push
in
add
xchg
cmp
mov
pop
ficoml
and
mov
pop
movsb
push
lock
sub
push
out
inc
lcall
xchg
xor
lods
out
push
sbb
jbe
xor
outsb
adc
sub
pop
loop
call
cmp
imul
xor
enter
rcll
pusha
jnp
inc
sub
out
call
stos
pop
in
mull
or
push
mov
movsl
xor
stos
pusha
jle
daa
cmpb
pushf
and
xchg
enter
fiadds
jnp
bnd
inc
dec
repz
roll
jbe
pop
insl
call
stos
enter
add
cld
icebp
and
mov
xchg
fsubl
cmp
sbb
insl
out
push
repz
mov
movsb
mov
xchg
loope
repnz
push
out
fisttpl
in
lds
in
cwtl
add
dec
inc
sub
jo
idivb
pusha
jecxz
mov
mov
sbb
aas
stos
xor
mov
aas
sub
lods
mov
iret
clc
scas
mov
cmp
sub
jmp
jb
adc
sahf
aaa
fdivs
cmp
xlat
rcl
and
cltd
test
inc
daa
mov
jne
jb
xchg
and
dec
push
enter
and
les
add
add
push
adc
fiaddl
jo
adc
push
add
rcrw
push
mov
mov
mov
das
xor
mov
inc
fcompl
inc
out
test
xor
leave
inc
out
and
insl
cmc
dec
jo
aas
adc
jmp
dec
dec
dec
or
push
push
ret
js
cmp
js
fdivp
stc
and
call
cmpsb
call
cmp
es
pop
jecxz
sbb
pop
fildl
orb
mov
jnp
mov
sbb
imulb
or
pop
test
andb
adc
dec
pop
rorb
dec
adc
scas
test
pop
cmp
lds
out
adcb
ret
icebp
sub
loope
lahf
out
aad
cmp
movsl
cmp
call
fs
movntps
outsl
xchg
pusha
nop
adc
fists
sarl
mov
test
fsubrl
xor
and
addb
xchg
in
stos
mov
mov
add
sbb
repz
add
mov
jmp
dec
mov
or
dec
in
xor
push
leave
xor
iret
lahf
push
mov
mov
lock
shlb
inc
push
push
cwtl
sub
shlb
dec
pop
arpl
sbb
mov
popa
pop
push
and
ds
sub
jg
or
and
mov
daa
dec
loopne
iret
mov
mov
and
pop
cwtl
lea
add
aam
mov
adc
or
shll
xchg
jp
add
pop
je
jmp
push
jecxz
dec
jo
mulb
fcoml
outsl
test
pop
xchg
imul
data16
cmc
xor
loopne
add
pop
stos
xchg
leave
xchg
xchg
fnstenv
in
xchg
and
adc
ds
xor
pop
popa
loop
iret
xor
test
outsb
push
xchg
add
xor
mov
addr16
frstor
pushf
jmp
shlb
jb
out
mov
nop
or
cld
in
push
mov
movsl
lcall
popf
test
cmp
scas
or
xlat
stc
pop
test
mov
cmp
cmpl
shlb
fcom
int3
xchg
xor
flds
xor
mov
lret
pop
repnz
stc
fnstsw
pop
lahf
cmp
daa
pop
pop
dec
inc
fmuls
and
insl
movsl
addl
pcmpeqw
dec
enter
mov
jnp
and
fiaddl
adc
outsl
lods
pop
mov
xchg
les
lea
fmull
inc
cmpsb
lahf
push
push
cmpsb
mov
xchg
cmpb
add
xorl
pop
movsb
add
pop
cmpsl
mov
push
adc
test
jne
lock
daa
cwtl
mov
xor
adc
imul
cwtl
test
xchg
pop
inc
push
mov
icebp
lcall
andb
ja
pop
sub
xchg
shll
xchg
dec
js
mov
xchg
cli
cld
pop
add
push
push
inc
lods
push
add
test
xchg
push
loopne
es
movsl
repnz
inc
mov
mulb
cltd
andl
mov
sti
shl
ss
mov
sub
sahf
stos
insl
ret
jnp
imul
mov
idivl
dec
enter
sarl
mov
and
dec
inc
ds
stos
push
lcall
rorb
inc
pop
mov
mov
out
inc
pop
add
xor
jmp
scas
int3
lock
mov
push
cs
dec
pop
push
lea
imul
dec
icebp
pop
popf
loopne
sub
adc
push
inc
stc
pop
sub
sbb
lret
sbb
fmuls
inc
jne
aam
and
imul
sets
popf
aad
inc
mov
cs
imul
aas
pop
jp
inc
mov
addl
cs
mov
sarl
or
mov
js
cmp
repz
dec
mov
dec
enter
dec
xor
add
test
shrb
fists
cmp
xlat
outsl
mov
jae
adc
or
sub
add
and
sti
in
adc
xchg
jns
sbb
mov
sbb
test
pusha
pop
imul
jb
mov
out
sub
jnp
hlt
ret
add
pusha
push
nop
adc
xchg
pop
mov
sub
test
out
jo
jne
mov
dec
stos
or
push
dec
inc
and
test
pop
mov
cwtl
and
sbb
sbb
hlt
jns
adc
clc
sub
mov
mov
mov
cmpsb
shrb
outsl
jae
dec
or
ja
sbb
dec
incb
push
testl
push
pop
fnstsw
std
adc
dec
xchg
lret
push
setl
pop
push
sbb
cs
cmp
dec
cmp
or
insb
push
and
sub
adc
ds
mov
and
dec
cwtl
mov
mov
cwtl
xchg
xor
cld
push
sub
mov
sarb
push
cmp
xor
popf
mov
fnstsw
adc
pop
xchg
pusha
addr16
das
add
or
mov
fimuls
sbb
adc
ljmp
shrb
pushf
flds
ja
hlt
pop
sbb
mov
ljmp
aaa
dec
ficompl
pop
fistps
outsl
jp
dec
lds
sub
call
add
addr16
add
xchg
mov
and
cmp
inc
repnz
je
cmp
ljmp
xor
xchg
in
insb
xlat
and
loopne
xor
ljmp
pushf
and
mov
add
xchg
fmuls
pop
scas
xor
fisubrl
pop
lret
shlb
mov
jne
jmp
cwtl
daa
adc
add
add
or
and
mov
std
mov
pop
rorl
dec
push
lcall
lds
jecxz
pop
insb
mov
and
cmp
cmp
hlt
fs
and
sti
pop
lret
cld
push
inc
outsb
ds
int
loop
jecxz
adc
std
push
scas
pop
sarl
jne
jb
add
lret
xchg
ret
xor
ss
fstpt
mov
daa
jge
dec
pop
loope
mov
daa
add
or
dec
or
sub
xor
inc
mov
gs
out
aad
xchg
mov
repnz
icebp
imul
rclb
and
adc
cltd
mov
bound
sub
xor
cmpsb
ja
jo
rclb
bound
dec
sub
mov
jo
js
mov
mov
jp
int3
addl
mov
ljmp
and
out
mov
jns
sub
xor
call
mov
sub
xor
inc
lahf
inc
cltd
gs
push
xor
popf
mov
cltd
lret
push
jge
cmpsl
insl
pop
sarb
cwtl
push
mov
scas
cmp
decb
mov
xchg
shll
fs
adc
aas
fsubl
push
jnp
movsb
mov
add
pop
jo
mov
pusha
jecxz
filds
fwait
lods
lds
daa
jl
shlb
sbb
push
dec
arpl
ret
inc
rcrl
mov
movsl
pop
test
xchg
repz
xorl
rcrl
add
xor
call
jp
cmp
adc
inc
or
push
mov
adc
pop
shlb
mul
xor
xor
pop
mov
push
push
test
push
pushf
cltd
into
lret
ja
ret
xchg
test
in
push
pop
cmpsl
popf
sbb
dec
inc
lret
jo,pn
mov
inc
mov
and
add
daa
and
jmp
popa
ss
jl
and
push
pop
xchg
outsb
mov
push
test
dec
push
stc
or
jns
mov
push
xchg
sbb
adc
lods
orl
pop
shl
and
xor
clc
mov
test
lret
std
xor
and
leave
xchg
sbb
fildl
imul
add
cmp
test
adc
xor
in
sbb
and
test
pop
shl
cwtl
outsl
cwtl
cmp
xchg
jecxz
sti
inc
stos
xorb
in
push
in
adc
movsl
stc
fildl
sbb
fsub
mov
addr16
in
cli
xor
test
sbb
and
test
push
and
out
shlb
pop
sbbl
daa
or
dec
pop
push
pop
rorb
mov
int
inc
outsb
js
adc
fbld
sbb
loopne
xor
adc
adc
jo
pop
movsb
jge
mov
pop
shl
and
movsb
push
lcall
or
inc
sbb
mov
add
nop
shrl
xor
addr16
std
in
mov
stos
sub
loope
insl
pop
int3
add
push
push
mov
mov
imul
add
pop
pop
cs
add
int
cmc
push
paddq
cs
lea
test
fisttpl
jo
mov
ljmp
int3
test
cs
sbb
daa
sub
xor
fwait
xor
int
or
sbb
xor
fnstenv
cltd
pop
push
push
inc
pop
xchg
mov
and
cmp
dec
xor
mov
push
sub
pop
popf
jl
dec
pop
inc
pop
daa
ss
jl
movb
pop
lock
ljmp
jnp
das
mov
hlt
mov
jb
and
out
fisubrl
sbb
lods
mov
enter
xchg
lahf
fs
mov
cli
stc
sbbl
dec
or
cmp
jbe
jnp
fldenv
cmp
stos
shll
cmp
xor
fstl
aam
ds
cmpsl
lret
cmp
std
inc
jbe
sbb
xchg
call
fsts
in
or
clc
out
subl
jg
repz
mov
xchg
sti
cmpsb
add
sub
aam
pusha
sbb
imul
ljmp
mov
push
add
inc
pushf
test
sub
nop
fidivl
push
mov
jns
xchg
mov
dec
adc
enter
jo
or
shlb
popa
cmovge
imul
add
inc
shrl
test
lret
push
jb
dec
es
insl
xchg
mov
repz
jae
ret
mov
icebp
fwait
aaa
or
push
add
jg
cli
mov
mov
jo
mov
jle
xorl
into
mov
stc
inc
inc
fiaddl
mul
xchg
lods
in
push
mov
mov
dec
jae
fiadds
dec
xchg
xchg
imul
jmp
repz
inc
push
cwtl
adc
outsb
jge
ret
popf
fwait
scas
pop
fisttpll
mov
fdivrs
gs
repnz
push
in
ds
inc
jo
mov
adc
xor
andb
mov
push
fisttps
daa
fsubs
jo
adc
adc
dec
aam
sbbb
aaa
je
enter
rcrl
cmp
mov
or
sub
mov
inc
cltd
inc
xor
pushf
push
add
jns
sub
cltd
and
dec
cmp
push
cmp
jns
xor
dec
movsb
loop
std
shll
loope
sahf
nop
adc
enter
mov
lea
mov
jne
xchg
add
cmp
lock
mulb
js
fcomi
jno
cmovb
xor
in
dec
add
daa
pop
stos
push
ja
push
xchg
or
cltd
out
jno
xchg
lret
cmpb
mov
cmpsl
fnstcw
xlat
pop
je
andb
dec
cwtl
pop
cmp
loopne
add
orb
js
mov
mov
or
cmc
cmp
dec
fs
cwtl
push
push
outsb
jb
arpl
or
nop
inc
std
xorb
push
repnz
ret
cmp
dec
std
xor
into
mov
je
int3
pop
cltd
aas
out
arpl
fcmovb
push
push
insb
rorl
scas
loop
jae
mov
cmp
sbb
mov
cld
les
out
mov
and
lret
and
imul
bnd
fs
cmp
ljmp
repnz
aas
cmp
popa
xchg
sbb
rcrl
shrb
mov
test
sbb
sbb
int
fwait
adc
data16
jg
push
add
cld
int
mov
ds
push
aam
aas
sti
or
out
rolb
lods
jne
leave
sbb
sarb
cli
push
xor
pop
arpl
push
mov
push
stos
loopne
or
sti
pop
push
ffreep
pushf
sub
inc
out
jge
mov
and
xor
mov
outsb
fwait
adc
lret
cmpb
stos
mov
add
aam
shrl
mov
mov
jno
bound
movsl
xchg
inc
roll
adc
cmp
jns
fisubl
sbb
sub
pop
int3
mov
fmull
addr16
movsl
sub
dec
loopne
or
mov
int3
inc
sub
in
sahf
imul
or
fmul
stos
icebp
adc
jno
sub
out
push
xor
mov
cmp
inc
xchg
xor
push
jns
xlat
ret
dec
dec
cmpsl
xchg
dec
mov
pop
mov
flds
imul
ret
push
ret
repnz
jne
pop
into
gs
sub
sarl
les
sub
movsl
in
into
sbb
jns
or
lcall
dec
out
cmp
sahf
shlb
lds
ds
push
xor
dec
adcl
xchg
ljmp
cmp
pop
stos
cmpl
lea
gs
imul
xchg
push
mov
mov
negl
lods
add
repz
call
loope
das
jp
andb
jno
rcr
cs
sar
mov
push
test
mov
adc
outsl
loopne
movsb
pop
sbb
les
jg
mov
psubusw
stos
data16
adc
or
sbb
xor
bswap
mov
aam
cli
cli
test
mov
mov
mov
shlb
pop
ja
mov
and
enter
outsb
mov
add
daa
int3
in
push
popa
outsb
sbb
data16
int3
add
dec
les
fiaddl
cmpsb
sbb
xlat
jl
dec
enter
sub
loope
xor
ja
mov
mov
pop
push
cwtl
ret
out
mov
add
pop
insb
insb
ljmp
loopne
into
fisubs
frstor
mov
inc
fnstsw
shl
out
pop
xchg
dec
inc
leave
je
into
mov
jne
and
shll
aam
into
jne
xor
scas
xchg
mov
insb
fmull
iret
test
mov
push
popf
push
popa
lods
shll
js
aas
aam
push
repz
lds
push
cmpsl
sub
mov
and
jbe
pop
cmp
loopne
xchg
leave
cs
pop
cs
lock
shlb
push
fnstenv
lea
cmp
cmp
xchg
mov
mov
cmp
pushf
xor
pop
roll
xchg
pushf
and
mov
xchg
push
std
insl
sarb
pop
mov
push
or
lds
push
leave
xchg
bound
std
mov
stc
outsb
out
sbb
lds
inc
das
mov
ficomps
scas
mov
mov
push
lcall
stos
adc
push
inc
daa
cmc
stos
push
sub
call
sarl
or
jle
jne
cmp
lods
pushl
fs
and
xor
shlb
add
int
inc
lock
inc
dec
test
imul
lret
das
jecxz
clc
pusha
test
aas
push
dec
ja
xor
xor
pushw
cmp
scas
jp
xchg
call
sub
push
lds
sahf
leave
in
push
ljmp
pop
or
loope
mov
fcoml
and
adcb
imul
push
cmp
out
pop
fwait
add
sub
xchg
jmp
scas
push
add
push
add
les
pop
sbb
imul
add
add
lret
nop
pop
lds
repnz
lods
insl
mov
jl
pop
outsb
xor
mov
jp
in
out
stc
pop
push
fs
pop
jbe
test
lods
dec
pop
sub
pop
add
sub
insl
and
mov
push
mov
or
cwtl
and
fidivs
lret
out
dec
inc
inc
fucomp
addr16
adcb
repnz
sbb
xchg
mov
push
jle
js
sub
mov
push
or
mov
daa
or
iret
pop
or
inc
popa
shll
xchg
scas
sub
jno
mov
sub
stos
mov
adc
call
inc
pushf
adc
sbb
cld
sbb
inc
sub
aaa
adc
dec
fisubrs
in
mov
dec
lods
inc
and
les
cmp
sub
sub
stc
mov
ficoms
shrb
xor
xchg
lea
movl
lahf
pop
std
mov
movsl
xchg
or
nop
push
or
pop
jb
dec
push
dec
aad
mov
adc
fwait
cmp
int
xor
pusha
sub
add
aas
daa
pop
mov
xchg
sarl
cltd
fisubrs
das
cmp
dec
cmpsb
and
aas
movsl
iret
ret
test
dec
lea
mov
les
fldcw
jno
cmp
sbb
pusha
jp
pop
stos
jo
jns
push
sbb
lret
inc
add
jno
xchg
push
lar
adc
push
aas
pusha
test
jmp
push
cltd
fcomip
adc
mov
inc
push
sub
ret
mov
mov
or
push
push
push
fcoml
adc
ficoms
cltd
or
int
mov
arpl
jo
jno
pop
mov
or
mov
dec
leave
dec
adc
jp
jns
push
mov
insl
lret
addb
leave
scas
push
repnz
jne
out
mov
loop
adc
mov
jecxz
jno
or
sub
xor
jne
xlat
push
cld
cmp
jae
inc
jbe
push
or
loope
adc
nop
and
insb
in
jne
sub
or
mov
dec
fists
mov
jo
mov
ja
or
mov
pusha
jnp
pop
sbb
ret
sbb
or
sbb
test
mov
mov
stos
jl
jecxz
test
ds
inc
push
dec
aam
aad
mov
mov
mov
xor
ja
jbe
xchg
movsb
fstl
inc
bound
fcomps
aad
mov
push
pop
xor
dec
inc
dec
movsb
mov
or
adc
loopne
push
sub
sbb
mov
pop
mov
cmp
mov
leave
pop
roll
leave
fnstsw
xchg
out
push
ret
sbb
push
dec
clc
cmp
pop
loopne
or
sbb
enter
sub
aad
int3
scas
pop
mov
inc
or
and
insl
jb
inc
out
aad
ficoml
test
stos
cmpsl
mov
loopne
and
xchg
loop
sbb
or
fdivl
enter
pop
scas
dec
jmp
call
sub
insl
loop
rcll
arpl
mov
inc
fninit
ret
stos
cmp
jmp
pop
jns
pop
fcomps
push
sub
incl
sub
jb
std
subb
punpckldq
add
mov
push
cmp
mov
pusha
imul
push
jne
adc
test
gs
push
push
and
add
loope
xchg
xor
loop
outsl
sub
arpl
test
scas
dec
add
fidivl
mov
loopne
jbe
fwait
rcrl
add
int
and
shlb
aas
and
clc
cltd
xchg
inc
xchg
jle
jecxz
mov
mov
mov
adc
insl
incl
push
cld
outsb
push
mov
iret
pop
outsb
or
pop
gs
mov
filds
mov
daa
mov
loopne
shl
jg
jg
adc
xor
sahf
mov
loop
cmp
mov
push
divl
jbe
mov
div
sbb
lret
mov
into
fcoml
jb
mov
push
notl
push
and
test
test
and
aam
jmp
mov
mov
insb
mov
push
mov
xchg
xchg
notl
aaa
sbb
bound
and
addb
movsl
pop
test
sub
scas
mov
ret
push
cmp
xor
jno
cld
xor
add
and
outsb
cmp
dec
or
insl
pop
ret
mov
insb
ss
into
loop
cmc
inc
in
mov
push
xchg
jo
sti
sarb
sbb
fs
push
pushf
ror
and
dec
loopne
adc
lret
mov
into
arpl
jmp
push
call
pop
sbbb
mov
dec
or
mov
fs
cltd
call
shlb
xchg
adc
add
sbb
lahf
daa
sahf
and
xchg
lea
out
add
pop
mov
xchg
adc
scas
pop
mov
jno
out
call
xor
pop
push
bt
dec
add
or
mov
adc
mov
sub
aad
mov
cmp
ja
cmpsb
mull
or
fwait
stos
pop
push
sub
push
outsb
cld
adc
out
and
sti
mov
jne
mov
pop
inc
out
sub
pop
jae
movsl
cltd
cwtl
icebp
or
xchg
popa
andb
add
push
ret
xchg
xor
fisttpl
xchg
sbb
enter
shll
shll
add
imul
lret
in
shlb
test
xor
inc
push
mov
xor
mov
or
icebp
or
xchg
vmwrite
shlb
cmp
pop
xchg
dec
loop
jns
mov
ds
je
loopne
pop
je
out
mov
mov
rclb
lds
std
pop
je
mov
movsl
sahf
dec
and
cmpsb
mov
movsb
and
mov
aaa
repnz
xor
xor
push
mov
adc
test
popa
push
push
lcall
xor
jno
xor
in
cmp
out
xchg
jecxz
cmp
pop
fstpt
call
push
adc
dec
paddsb
mov
mov
inc
nop
xchg
or
sbb
xchg
push
int
adc
jecxz
ja
hlt
jns
orb
xlat
push
jae
dec
cmc
into
les
lret
jg
jle
repz
mov
jo
and
adc
inc
lcall
push
lret
or
stc
sarb
pusha
shll
addr16
and
ss
jo
pop
mov
ret
in
jmp
sbb
jp
fcompl
adc
and
inc
sub
nop
mov
dec
shlb
sub
mov
xor
sub
add
repz
lahf
push
cmc
jnp
sub
movsb
js
inc
mov
push
repz
bound
or
xlat
mov
fs
push
mov
aad
mov
dec
int
push
rcr
xchg
adc
xor
test
test
out
or
mov
ss
testl
test
sahf
es
mov
cmp
xchg
mov
or
cmp
jb
add
push
pop
xor
sbb
jns
cmc
mov
in
aam
out
int
lods
sbb
mov
and
inc
mov
mov
sbb
stos
out
xchg
push
fistpl
ret
sbb
pop
sub
into
cs
lcall
inc
std
aas
mov
lret
push
cmp
or
jecxz
shll
or
xor
and
mov
adc
std
arpl
jl
mov
xor
mov
dec
stc
sbb
adc
jg
dec
sbb
dec
insl
lods
shrb
jne
inc
push
push
xchg
push
lods
ret
shl
call
es
fistl
pop
clc
xchg
adc
and
mov
pop
out
adc
mov
mov
push
cmp
fstpl
cltd
xchg
orb
push
mov
lahf
aam
cmp
scas
ja
fimull
shlb
out
shr
xchg
xchg
je
sub
inc
pushf
pop
sti
pop
cmp
dec
cmp
mov
cli
or
push
push
enter
sub
stos
mov
hlt
mov
mov
pop
push
mov
xchg
mov
fldln2
and
ja
fcmovnbe
sub
inc
sti
orl
jp
xlat
adc
rol
pop
movsb
cltd
mov
dec
push
and
cmp
in
pop
cltd
pusha
ficomps
in
stos
inc
pop
sahf
prefetch
jmp
inc
es
fmuls
mov
mov
or
adc
dec
pop
aam
push
pop
leave
adc
rorl
dec
add
cltd
add
mov
in
addl
cltd
add
ret
cmpb
inc
jp
mov
fcoml
jg
inc
inc
popf
aam
adc
adc
sbbl
paddq
rcl
sbb
adc
imul
in
or
sub
jo
call
xor
addr16
test
mov
rcrb
adc
dec
xlat
clc
mov
lods
andl
mov
lret
outsb
frstor
dec
sbb
xchg
lret
xor
sbb
dec
xor
jo
enter
mov
pusha
and
scas
xchg
inc
push
mov
rclb
xor
int
jl
ds
jle
sahf
sub
inc
testb
xor
sbb
add
jne
fistpll
xchg
xchg
jns
inc
arpl
inc
dec
xchg
mov
jae
push
cmp
mov
nop
cmpsl
inc
or
arpl
movsl
and
fadds
mov
iret
push
and
inc
inc
adc
lret
sbb
inc
call
lcall
pop
push
push
insb
cmpsl
jbe
dec
cmp
into
pop
in
ret
sub
inc
jle
xchg
or
xchg
sbb
cmp
adc
inc
inc
inc
loopne
pop
addr16
repnz
movsb
xchg
lds
xchg
and
lcall
cmp
and
inc
pop
rcl
push
rcll
out
lods
or
and
repz
mov
rcll
pop
lock
movsl
fidivl
and
repnz
insl
popa
or
add
vpshaw
xor
mov
outsl
jno
ret
sub
cmp
stc
out
jbe
sub
int3
and
inc
lcall
stos
sbb
popf
mov
cmp
xor
or
dec
movsb
mov
lock
mov
mov
test
dec
jle
push
mov
mov
cli
adc
leave
test
add
add
sahf
mov
or
adc
repz
fyl2xp1
scas
adc
mov
mov
lods
mov
mov
mov
jp
pop
sub
pop
cmpsb
xor
lcall
mov
or
mov
adc
adc
lods
jle
xlat
xor
fmull
loope
je
stc
xchg
inc
pop
cmp
add
and
sub
ja
pop
or
addb
incl
repnz
and
cmc
pop
outsb
in
mov
sbb
aam
outsl
fistps
mov
repz
or
out
or
mov
pop
xchg
pop
jns
stos
nop
mov
cmpsl
mov
shlb
or
or
fsub
je
pop
jo
pop
cmp
mov
jl
inc
mov
push
mov
dec
or
clc
mov
jp
sbb
hlt
repnz
cs
mov
inc
push
sarl
rcr
popf
test
int
fimull
mov
rorl
jb
rcr
cltd
nop
fdivr
push
fisubs
jmp
out
push
cwtl
lret
or
scas
dec
add
inc
icebp
ja
mov
je
out
mov
sub
cmp
ret
push
inc
jl
inc
movsl
ljmp
rcpps
int
dec
testl
push
fsubs
shld
mov
push
dec
mov
cmpxchg
pop
push
inc
dec
cld
call
daa
dec
cmp
scas
in
scas
xor
rcll
mov
jl
test
pop
fldcw
mov
lret
arpl
jb
shl
cmp
ss
lds
scas
cmpsb
iret
shl
repz
push
jb
mov
push
dec
fdiv
inc
push
fldcw
mov
xchg
and
rcr
xor
add
and
mov
and
push
push
mov
or
xor
push
xor
add
lock
mov
pop
jns
nop
sbb
test
fmul
sbb
fwait
ja
pop
mov
add
or
lret
xchg
sahf
rolb
mov
or
sbb
adc
jp
mov
xor
aas
and
add
movq
or
int
outsb
inc
jp
dec
stos
sbb
mov
push
jb
gs
adc
lahf
shl
daa
and
sbb
ljmp
add
sti
in
push
sbb
ljmp
or
jle
inc
mov
loop
jle
pop
shld
ret
sbb
mov
and
ret
push
inc
sub
pop
lea
xchg
inc
rorl
jno
mov
out
jno
into
loop
in
sbb
leave
outsb
push
sarl
xor
jle
xchg
sbbl
out
mov
lea
push
pop
insb
out
inc
sbb
stc
sar
test
dec
adc
lds
inc
aam
or
push
push
cld
icebp
mov
cli
lds
je
sbb
fsubs
dec
or
cmpsb
or
add
test
push
xchg
inc
lock
add
fisttpll
bound
jg
add
adc
mov
sbb
pop
jp
xchg
xor
mov
jae
movsb
fildll
movsb
nop
inc
push
jae
test
icebp
jae
arpl
je
mov
inc
loope
inc
pusha
aad
sub
seto
jae
je
adc
enter
and
mov
mov
or
xchg
xchg
adc
mov
dec
test
sub
scas
loop
cmc
xlat
and
movsl
inc
add
dec
mov
push
jb
inc
mov
xchg
inc
cwtl
cs
pop
fwait
pop
cmpsb
dec
outsl
int3
mov
jo
les
mov
movsl
movb
testl
mov
mov
sbb
jae
inc
dec
mov
lock
push
or
mov
lea
sub
mov
and
mov
jl
jbe
in
mov
fistl
gs
xchg
jo
xchg
xchg
testl
mov
mov
iret
out
fisubrs
jae
xchg
push
dec
dec
sarb
aad
test
mov
inc
movsb
and
jp
cwtl
out
inc
xor
xchg
and
addr16
subb
mov
fwait
pop
mov
and
pop
repnz
cwtl
aam
nop
pop
or
test
jp
aad
adc
xchg
xchg
mov
inc
jecxz
pop
outsl
insb
out
int3
adc
push
iret
dec
pop
cmc
imul
mov
push
mov
add
mov
xchg
sbb
dec
in
mov
dec
cmpsb
sbb
xchg
dec
lahf
or
xchg
in
out
lret
jne
mov
into
and
xlat
fs
je
imul
and
mov
ss
pop
or
cmp
icebp
mov
inc
jns
jno
int
ljmp
jno
add
test
ror
dec
popa
shll
push
rcrb
in
or
inc
test
inc
cs
inc
out
pop
fcmovnb
aaa
adc
sub
sub
xor
bound
addr16
repz
adc
movb
push
cmc
cmpsb
jne
jae
movsb
cmpsb
push
mov
cmp
sub
xor
jmp
stos
int3
lds
pop
lock
hlt
lock
cmpps
mov
out
fwait
pop
dec
add
shrl
jge
outsb
jl
pusha
fst
cmp
sub
mov
push
jb
jge
mov
arpl
add
out
cmp
push
fidivs
mov
adc
adc
lds
push
push
pushf
cwtl
gs
mov
roll
push
insl
adc
push
dec
mov
popf
pop
mull
jnp
mov
sbb
sub
sarl
int
std
sbb
mov
xor
enter
je
mov
shll
cmp
test
iret
test
jp
fmull
xchg
or
mov
mov
push
loopne
adc
out
mov
rolb
cs
xor
jb
push
aas
xchg
cmc
cmp
xchg
les
mov
mulb
lock
add
popa
in
movl
dec
lret
loopne
movsb
xchg
cmp
and
lods
je
adc
cmpsl
out
in
mov
add
rcr
ljmp
fcomp
sub
mov
xor
sbb
fistps
jne
lds
cmp
arpl
hlt
mov
sub
es
in
stc
jns
jg
loop
cli
iret
adc
cmp
hlt
push
movsb
xor
mov
call
gs
test
jo
sub
scas
push
cmp
cmp
push
call
lock
sti
xor
inc
add
std
loopne
sbb
test
mov
ja
add
mulb
pop
xor
insl
mov
and
mov
loop
clc
cmp
ret
push
sahf
dec
ret
pop
inc
call
lods
lret
cmp
adcl
push
adc
in
sub
daa
sbb
adc
dec
out
ljmp
fisttpl
sbb
gs
mov
ret
loop
lods
xorb
call
xor
ljmp
sbb
dec
fwait
xor
and
bnd
inc
int
jmp
je
dec
xchg
fisubrl
lcall
jl
mov
push
orl
xchg
mov
mov
jae
adc
xchg
xchg
testb
push
jge
and
and
mov
cmp
sub
fwait
aad
cmc
jle
or
ret
enter
incl
sub
jecxz
sbb
inc
rcl
sub
fdivp
out
out
pop
test
cmp
adc
pusha
fcmovbe
ret
push
sbb
je
rclb
cld
mov
add
mov
mul
sbb
and
jge
adc
call
addl
hlt
stos
or
pop
idiv
xchg
jnp
or
shlb
bound
fcomps
adc
xchg
or
sbb
outsl
mov
je
ljmp
xchg
pop
iret
ss
xor
xchg
pop
cmovae
push
fiadds
rcrb
inc
outsb
lods
pop
ss
lea
xchg
cmc
fidivrs
dec
cmp
mov
inc
movsb
jo
cmp
loopne
movsl
in
or
adc
sbb
icebp
xchg
out
sub
sbb
add
xchg
xlat
inc
xchg
lahf
mov
inc
cmp
into
xchg
jp
xor
dec
aad
jg
mov
cmp
std
xorb
push
push
pop
jecxz
push
and
cltd
add
xor
inc
pop
xchg
mov
adcl
add
cmp
mov
push
jg
leave
xor
je
inc
push
loopne
push
adc
sarb
aad
clc
dec
adc
leave
sub
xor
lods
ds
push
fwait
pop
push
lea
jns
jbe
jae
sbbl
into
mov
cmp
add
jmp
lods
mov
cmp
and
negb
shl
pushf
cmpsb
test
loopne
or
xor
outsl
dec
mov
lret
add
fistpl
or
inc
pop
out
xchg
dec
js
lret
lret
stos
stc
pop
jl
mov
loopne
in
shr
scas
mov
jl
insl
mov
dec
cld
xchg
in
jmp
mov
add
pop
or
mov
xchg
mov
pop
jnp
mov
fnsave
add
lcall
pop
fisubrs
cmpsl
out
sbb
or
enter
push
jo
jg
mov
mov
mov
shrb
shl
inc
xor
in
stos
cmpsl
enter
outsl
fistps
sub
inc
adc
enter
push
inc
cmp
idivb
addl
es
push
dec
add
test
imul
cmc
sub
jne
jbe
mov
inc
test
out
xchg
add
in
notb
dec
popa
adc
rolb
out
jg
nop
pop
ss
sbb
lcall
jbe
cmp
ficompl
jno
std
adc
jo
mov
jl
mov
mov
or
leave
inc
and
ret
dec
add
pop
or
test
in
cmp
pop
imul
icebp
dec
mov
leave
mov
loop
jg
mov
or
dec
cld
mov
dec
out
popf
out
test
inc
inc
cs
pop
fistps
mov
jbe
mov
push
sub
pop
pop
xchg
pushf
or
cmp
ja
movsb
jmp
scas
jns
bound
mov
dec
pop
or
sub
pop
std
and
ja
and
or
jge
inc
sbb
pop
stos
cmp
push
xchg
sbb
jbe
push
push
aaa
test
imul
pop
sub
adc
insb
push
adc
aad
dec
setle
aam
dec
andl
gs
and
ret
ss
les
sti
xchg
cmc
jg
mov
dec
mov
clc
cmp
lock
fmul
test
add
push
js
xor
hlt
test
outsb
aas
jl
loopne
jb
mov
rorb
adc
out
or
mov
lea
adc
xchg
and
bound
es
outsb
jno
orb
addr16
gs
or
les
pop
data16
in
aaa
sbb
xor
mov
sub
int3
aam
mov
mov
mov
lea
jbe
adc
test
fwait
lcall
sbb
out
fstpt
repz
push
add
cwtl
fcompl
js
jbe
mov
mov
sub
or
jl
ret
lods
xor
notb
rolb
data16
test
ficomps
loop
test
sbb
mov
call
iret
fldcw
push
xchg
xor
xor
push
push
in
push
sub
insl
mov
cwtl
adc
and
repz
cld
mov
add
or
ret
xchg
push
sbb
pop
xchg
hlt
adcb
mov
movsb
jae
cmp
test
es
or
cmp
jns
lea
stc
pop
xchg
fisttpll
cmc
fcmovne
dec
or
cmpsb
cmp
cltd
nop
mov
jnp
imul
xorl
mov
outsl
js
ss
mov
sub
push
mov
shlb
adc
sub
dec
or
out
xchg
outsl
lret
je
sbb
lea
mov
scas
cmp
adc
arpl
dec
les
pop
ja
rcr
sbb
sbb
movsl
mov
adcb
in
stos
popf
lcall
inc
iret
inc
xchg
cwtl
lock
jbe
mov
ret
out
dec
rcl
cmp
sbb
jge
mov
int
lcall
mov
fadds
outsb
sub
cmp
mov
and
rclb
ljmp
or
dec
xchg
add
mov
arpl
pop
lods
fistpl
sub
push
into
cmp
cmp
ss
xor
lahf
xchg
and
adc
push
dec
sti
sub
rcrl
push
or
push
dec
out
das
push
lods
pop
mov
jecxz
scas
insl
or
js
sti
mov
sub
mov
jg
dec
push
inc
pop
nop
rorb
sub
mov
in
cwtl
push
jl
ret
sarl
cmp
out
fdivrl
push
mov
push
adc
mov
and
arpl
sbb
or
pop
stc
pop
ret
pop
mov
aaa
in
sbb
or
mulb
rol
and
out
cmp
rol
xchg
nop
and
add
hlt
std
cmp
jo
jne
pop
xlat
jne
imul
es
dec
sbb
jbe
cmp
ljmp
aas
aaa
inc
dec
dec
push
daa
lahf
mov
pop
cmpsb
sub
cmc
lds
push
leave
or
push
mov
push
cs
adc
xlat
scas
cmp
es
gs
nop
iret
xor
or
cmp
sbb
sbb
filds
sub
rcl
pop
push
out
arpl
enter
xchg
es
je
push
xchg
xchg
pop
ja
subl
subl
mov
or
xor
lret
inc
in
xor
rorb
mov
cmp
sub
inc
lock
loop
call
mov
or
push
sub
inc
hlt
adc
mov
or
push
mov
mov
loopne
inc
sbb
es
xor
es
push
jecxz
lods
lods
lock
fdivl
sbb
std
lea
sub
lret
mov
mov
int
pop
rorb
lds
dec
aas
add
sarl
inc
imul
mov
jb
adc
cmp
sbb
or
call
push
in
pop
out
adc
test
dec
aaa
popa
add
adc
jle
idivl
daa
in
jns
lds
or
je
push
mov
enter
dec
mov
rolb
in
mov
mov
aaa
mov
mov
dec
rcrl
test
icebp
cwtl
sti
pop
fwait
xchg
xlat
jns
inc
pushf
mov
lahf
mov
insb
dec
inc
or
fisttps
leave
sahf
inc
sub
sbb
xchg
mov
call
adc
or
ficomps
sub
into
out
dec
adcb
imul
bound
out
mov
rcl
int
addb
data16
xchg
inc
lds
push
add
inc
dec
lea
lret
adc
add
or
mov
push
loopne
cwtl
dec
inc
clc
push
mov
xchg
scas
scas
xchg
pop
ljmp
mov
cmp
xlat
repnz
inc
adc
mov
dec
cwtl
inc
fcompl
popa
pop
mov
jmp
adc
push
js
dec
clc
stos
and
pop
push
push
xchg
addr16
mov
sub
lods
dec
xchg
cmp
push
scas
sbb
pusha
clc
int3
mov
push
sbb
inc
test
jb
data16
dec
sbb
xchg
mov
jbe
dec
mov
movsb
call
xlat
pop
mov
cmp
or
xor
mov
lods
loope,pn
or
dec
js
js
test
xor
mov
shrl
jae
add
aam
flds
or
jp
sub
popf
inc
rcll
andl
arpl
cmp
pop
arpl
dec
sbb
mov
cltd
pop
leave
push
sarl
mov
fwait
cmp
dec
jg
cmp
je
shl
rclb
movsl
jl
pop
sub
out
repz
add
xchg
jge
imul
sub
push
fisubl
cmc
xchg
add
jmp
pushf
std
shr
pop
fsts
cs
jg
cmp
adc
sub
xchg
push
sahf
cmp
xchg
and
jb
pop
clc
push
pop
dec
lcall
into
std
aad
and
mov
inc
cld
xor
adc
test
and
or
sbb
sub
lcall
xor
decb
jae,pn
mov
leave
pop
mov
mov
mov
jmp
inc
pop
push
les
outsb
pop
mov
pop
aas
mov
and
jmpw
outsb
lea
in
adc
int3
dec
sbb
and
push
fwait
xor
sub
loop
jmp
push
test
push
cmp
push
cmp
mov
shrl
xor
pop
and
addr16
push
cmpsb
xor
outsl
push
jge
or
repz
push
or
daa
sub
adc
jmp
ljmp
pop
mov
xchg
fsubl
dec
mov
cmovno
rcl
gs
bound
outsb
addr16
mov
mov
outsl
cmc
mov
gs
cwtl
xlat
adc
shlb
inc
mov
pop
fistpll
mov
fstl
jge
jnp
xchg
loop
sbb
cmpsl
sbb
cmc
in
fcoml
stos
push
add
cmp
xchg
outsl
push
mov
popf
in
xchg
aaa
fdivl
mov
bnd
inc
mov
inc
arpl
stos
das
adc
pop
and
push
jbe
pop
cld
ret
add
mov
inc
mov
ret
pop
orb
push
std
divl
popa
mov
mov
out
xchg
sub
int
out
outsl
cli
xor
fs
jl
insb
int
dec
mov
xchg
mov
cmpl
in
jecxz
cmp
dec
pop
bound
out
bound
cmp
pop
push
inc
jae
ret
push
std
aam
xchg
in
mov
lahf
andb
lret
aad
mov
cltd
cli
pop
div
loopne
out
xchg
dec
xor
jmp
enter
lret
scas
mov
call
xchg
jnp
fbld
out
xorb
pop
das
adc
dec
mov
ret
dec
aaa
orl
or
pop
or
js
and
jl
sarl
test
pop
in
lret
adc
insb
sub
mov
lahf
adc
jmp
aas
dec
leave
ret
mov
sbb
scas
adc
xlat
mov
aaa
lea
and
push
mov
std
aad
stos
fsubl
mov
ficoms
adc
das
sbb
cmp
add
inc
sub
dec
outsb
cmp
shrl
adcl
into
xlat
call
iret
push
mov
push
mov
vcvttss2si
sbbl
push
push
out
xchg
push
std
add
xchg
dec
insl
popa
cld
pop
xchg
mul
idiv
aad
adc
cmpsl
jb
lock
inc
loopne
aam
push
arpl
pushf
stos
mov
jmp
pop
mov
pop
dec
mov
pop
or
and
test
push
or
lret
test
xor
pop
mov
lahf
jnp
fsubrs
mov
lahf
add
mov
jae
xchg
sti
push
add
lods
and
dec
test
scas
icebp
mov
clc
push
subb
mov
sub
call
in
lret
inc
push
icebp
mov
cmpsl
inc
popa
leave
mov
push
cmc
add
adc
fs
std
sub
pop
jae
in
sbb
inc
loop
loop
pop
xlat
add
je
jne
out
leave
xchg
jno
rcrb
pop
push
xchg
push
mov
int3
mov
mov
mov
es
push
lods
shll
leave
mov
inc
je
and
shll
xchg
adc
xchg
out
ja
cltd
rorb
pop
add
dec
xor
shrb
and
add
or
xchg
mov
cld
cs
jl
sbb
mov
aaa
inc
xor
pop
shlb
int3
push
icebp
ljmp
cmc
xor
sub
inc
mov
mov
push
fsubs
loopne
mov
push
lea
push
inc
pop
int
in
mov
adc
fwait
cmp
mov
xchg
dec
pushf
clc
into
add
or
mov
sahf
movsb
aam
mov
es
mov
in
or
stc
adc
stos
push
dec
pop
dec
lcall
cltd
outsl
xchg
xor
xor
add
movsl
cmpsb
icebp
mov
nop
mov
addb
dec
mov
push
jne
sub
mov
pop
add
push
out
cltd
cld
ss
ret
and
cmpsb
inc
dec
mov
push
adc
inc
out
mov
or
jecxz
add
daa
sti
test
jge
mov
sbb
jg
mov
addr16
jle
adc
mov
jbe
cmp
sbb
and
fsubr
stc
xchg
xlat
int3
dec
loopne
push
in
jb
xchg
repz
data16
inc
xchg
lds
push
mov
mov
test
shlb
iret
lds
or
gs
cmp
and
add
test
sbb
lret
pushf
movsl
fbld
cmp
mov
test
into
add
dec
push
repz
pop
test
xor
jno
or
mov
xor
cli
ret
sub
jne
jl
cmp
inc
test
inc
int
push
cs
movsb
dec
sbb
sti
ja,pt
ss
and
push
push
add
stc
mov
xor
xor
test
pop
clc
cltd
xchg
leave
in
adc
popa
ss
sti
sbb
clc
mov
jbe
xor
xlat
lret
ljmp
jb
xchg
pop
fldl
xlat
cltd
and
ret
repz
icebp
clc
dec
rorb
bound
pushf
repnz
fadd
adc
push
jmp
punpckhbw
fstp
jns
dec
mov
sahf
notb
mov
cs
adc
es
xorl
std
or
outsl
ds
scas
adc
subl
cmc
imulb
nop
adc
mov
mov
int
cmp
cs
shlb
push
imul
das
mov
xor
mov
clc
cltd
hlt
pop
int3
cmpsb
enter
push
in
mov
repnz
into
int
add
shll
int3
iret
sbb
cltd
mov
into
sbb
push
add
loope
enter
mov
adc
cmc
cltd
pop
push
dec
push
push
push
loop
iret
popa
mov
adcb
sub
pop
sbb
in
fcom
nop
xor
xchg
or
mov
add
sbb
stc
clc
inc
sarl
pop
xlat
std
sahf
movsb
jge
ret
adc
pop
push
cld
inc
repnz
jp
push
sub
je
add
cwtl
int3
inc
dec
xchg
mov
mov
mov
pop
or
mov
mov
push
inc
jne
cmpsb
jae
loope
mov
or
adc
out
cmpsl
movsl
cltd
adc
fs
jb
adc
dec
sarl
dec
fcoml
mov
je
les
mov
insb
pop
dec
lretw
jb
movsb
cmp
inc
lea
cwtl
push
pushf
aas
stc
lea
lds
and
scas
mov
push
pop
pop
popf
adc
sub
and
and
out
jbe
mov
push
stos
iret
aas
nop
mov
xor
mov
xor
filds
sub
imul
xor
jle
dec
adc
inc
out
loopew
push
xor
icebp
fcomip
aas
and
cmovns
arpl
mov
mov
fisubrl
sbb
loope
fnsave
lods
xchg
and
inc
stc
out
adc
dec
andl
int3
xchg
fidivrs
stos
and
fimull
pop
dec
shrb
enter
jbe
div
cmpsb
sahf
lret
mov
sahf
sbb
sarl
mov
and
lahf
cli
or
setns
lods
jns
cmp
cld
lcall
sub
lahf
push
jbe
call
lret
mov
xchg
jecxz
or
sub
pop
jle
popf
pop
adc
shlb
or
mov
clc
imul
mov
cs
cmp
ret
jl
shl
push
ret
fstps
mov
cmc
mov
xchg
pop
adc
sub
loopne
mov
inc
or
ja
test
clc
pop
ror
stos
sarl
imul
in
inc
inc
adc
push
xchg
roll
les
sub
mov
in
dec
ss
adc
add
inc
imul
mov
sbb
in
leave
xchg
lods
stos
lret
push
movsl
cltd
enter
inc
lea
mov
cmp
ja
xor
iret
mov
cld
or
push
daa
dec
pop
jae
pop
jno
mov
push
das
enter
out
inc
or
test
fdivrl
and
push
cmp
push
add
das
stos
xchg
mov
xor
test
jl
inc
popa
mov
cmp
pop
or
fidivs
sbb
ss
dec
add
sub
inc
and
mov
mov
push
cmpsl
rorb
movsl
push
mov
lock
inc
je
add
adc
lcall
js
pusha
stos
fnstcw
rolb
sub
cs
push
mov
sti
add
jb
loopne
sub
xchg
mov
es
lods
cmp
sub
dec
xchg
out
push
sub
popw
push
dec
rcll
in
fbld
xor
jne
test
xchg
and
mov
shll
push
out
cmp
pop
jbe
jg
dec
jg
push
sbb
dec
ficompl
dec
enter
daa
jnp
stc
jo
lret
gs
inc
mov
shl
cmp
scas
mov
or
aas
test
mov
and
je
mov
add
sbb
out
pop
loopne
xor
jbe
mov
das
xor
pop
insb
xchg
sub
rol
mov
mov
cld
mov
or
push
popf
cmpsl
data16
adc
add
cmp
stc
dec
js
repz
ljmp
jp
cmc
ret
leave
cltd
jb
jg
and
fistpl
push
inc
mov
hlt
je
mov
dec
stc
mov
inc
mov
jle
adc
jmp
xor
out
jb
daa
mov
cli
insb
out
push
outsl
or
mov
idivb
pop
mov
and
xchg
in
loopne
popf
test
sbb
push
push
fisubrl
out
fcoml
adc
fwait
pop
aam
xchg
mov
add
jp
inc
xor
scas
push
xor
sbb
push
cld
push
aam
sub
xchg
shl
mov
outsb
pop
xchg
cmp
xor
mov
out
jmp
lret
arpl
sub
int
push
or
adc
push
or
sbb
jae
out
sar
push
mov
scas
jbe
jnp
in
jns
ds
or
ds
cmp
ret
loopne
mov
xchg
call
add
or
xchg
addr16
xchg
lcall
rorb
jp
fidivl
lock
fadds
lret
adc
jmp
cmpl
std
pop
negl
enter
scas
jle
sti
push
in
scas
dec
lret
out
incb
and
jg
jge
addr16
or
sbb
xor
inc
mov
jl
jns
push
pop
testb
inc
sbb
or
xchg
fwait
and
out
or
lret
jp
insl
insl
inc
insl
into
adc
jle
mov
lods
pop
push
mov
and
sbb
and
or
add
mov
lods
inc
and
push
daa
mov
cwtl
or
adc
dec
pop
in
xor
test
sbb
pop
es
mov
int
icebp
inc
adc
add
pop
leave
bound
in
adc
aam
add
push
and
inc
loopw
lea
out
sbb
cmp
inc
adc
dec
sti
jnp
mov
adc
mov
cmpsb
sbb
rorl
mov
pop
push
icebp
pop
lcall
movsb
adc
jo
xchg
xchg
scas
adc
dec
mov
mov
jg
lret
fisttpll
xchg
push
insl
lahf
xlat
outsb
pusha
aam
stos
outsb
test
and
sbbb
fldenv
xchg
pop
aam
mov
dec
xchg
mov
out
sti
jae
jle
inc
inc
cmpsb
dec
scas
xchg
lock
xor
je
pop
mov
inc
jle
jmp
mov
icebp
lcall
arpl
in
clc
pop
ds
adc
iret
sbb
in
jnp
pop
push
clc
xchg
push
dec
or
mov
shll
stos
inc
push
pushfw
cmpsl
fadds
pop
push
cltd
sbb
lahf
movsl
cmc
jb
repz
fstl
sbb
or
notb
out
cltd
rcll
arpl
sub
sub
mov
jno
mov
lea
mov
std
jmp
loopne
dec
xlat
push
or
jne
shr
es
gs
lcall
mov
pop
popf
mov
jge
repnz
testb
pop
rcr
jns
lret
sub
clc
popf
lcall
push
pop
lods
gs
mov
lret
or
jbe
cmp
stos
lcall
xchg
popa
ficoms
rcll
out
sub
jmp
lret
xchg
test
jo
sub
adc
loopne
in
ds
loope
popa
in
insb
mov
mov
inc
lds
andl
cld
jmp
arpl
movsl
insb
jmp
jmp
pop
xchg
pop
les
jl
or
jp
cmpsl
inc
andl
mov
in
dec
sub
jae
movsl
push
jbe
adc
jp
push
loop
inc
sub
push
inc
cmc
iret
pop
adc
ffree
push
push
aad
push
push
lahf
cld
add
mov
clc
das
mov
outsb
jne
das
xor
xor
xlat
push
push
push
inc
push
subl
aas
xor
sbb
mov
ds
repnz
dec
addr16
mov
sub
mov
movsl
in
jb
mov
les
les
add
dec
andb
pop
mov
adc
or
sub
sarl
add
lret
jne
push
repnz
xchg
repz
ljmp
decb
xor
std
insl
dec
decb
stc
lea
lock
lods
aam
addl
xchg
int3
pop
jp
dec
push
pop
rcrb
pop
inc
dec
mov
rcrl
jmp
es
xor
cmpsl
bnd
sub
ljmp
inc
or
add
dec
push
cltd
cmp
in
push
int
push
fdivl
sub
cmp
in
jo
fcompl
cltd
mov
xor
lds
out
ret
in
sub
push
lret
push
imul
dec
cs
pop
test
mov
loop
test
jo
push
leave
adc
inc
mov
mov
lahf
insl
cmpsb
sbb
pop
pop
cmpsl
adc
cltd
push
and
aam
cmc
push
mov
fildll
add
pop
sarl
mov
lahf
ss
ljmp
sti
xor
xchg
adc
mov
in
fimull
dec
dec
jo
test
sub
xor
stos
push
dec
inc
scas
ljmp
ror
loop
jns
fstpl
aam
stos
scas
insl
ss
stos
sub
cmp
or
imul
xor
imul
loopne
xchg
je
mov
orb
xor
push
fnstenv
push
lods
jbe
mov
xchg
pop
xchg
push
xor
lret
sti
cmpl
add
je
xchg
push
gs
dec
dec
add
cmpsl
in
mov
movsl
stos
push
test
int3
dec
insb
testb
pop
pop
lcall
outsb
mov
and
inc
jbe
sbb
fdivs
fwait
jge
divb
and
les
sti
adc
repnz
jne
sub
jecxz
fcmove
add
sub
pushf
and
pop
mov
ret
mov
jecxz
sub
es
sub
pop
cli
inc
jbe
and
in
mov
loop
in
cmp
cld
or
sub
pop
push
stos
scas
es
mov
pop
movsb
imul
sbb
jb
mov
adcb
xor
xchg
sbb
shl
mov
cltd
xchg
insb
lds
lods
push
xor
pop
mov
mov
shll
sarb
imul
push
mov
xlat
sub
mov
xchg
or
test
ret
xor
cmp
repz
insb
lahf
out
or
int3
inc
pop
or
pop
loope
iret
in
mov
mov
dec
sar
pusha
pop
mov
and
mov
roll
adc
add
jne
xor
pop
push
jo
xchg
push
cmp
rclb
or
mov
mov
xor
andb
icebp
mov
sbb
adc
mov
sahf
xchg
xadd
sub
dec
push
fcomps
pop
dec
sub
and
add
lea
mov
lcall
outsb
adc
sbb
xchg
jge
xchg
push
ret
sub
jb
in
dec
inc
test
stc
lods
rorl
jb
lahf
cmp
adc
inc
pop
insb
pushf
sarl
jns
aas
inc
xorb
dec
ss
stos
jge
flds
into
and
push
ljmp
pushw
lcall
inc
dec
cmp
push
pusha
mov
cmp
cmp
jo
hlt
xchg
mov
push
lcall
int3
or
cltd
mov
cmp
push
dec
outsl
cmp
repnz
shlb
sub
dec
add
cmp
pop
jno
sub
jecxz
push
and
mov
push
add
icebp
xchg
stc
push
std
cltd
jb
push
ret
imul
inc
jno
fildll
mov
lock
sbb
jnp
inc
dec
xor
lods
mov
sarb
and
cmp
mov
call
and
jl
add
push
push
roll
dec
fsts
lcall
in
or
outsl
repnz
arpl
push
and
loop
cli
cmp
mov
pop
and
bswap
adc
push
bound
push
jmp
push
or
pop
pop
sahf
cmc
mov
mov
lods
cmp
xchg
dec
jmp
movsl
into
dec
lcall
stos
add
xor
aaa
arpl
lret
jl
add
out
out
rcrl
test
sub
orb
ret
rclb
sbb
icebp
cmp
shlb
or
popf
int3
in
cltd
xor
mov
pop
jge
inc
mov
imul
cmpsl
adc
mov
fstpl
jne
shll
out
add
sbb
push
push
jbe
push
push
gs
xor
int3
subl
loop
sbb
xor
xor
sahf
cmpsl
iret
das
sti
pop
cmp
in
cmp
scas
movsb
rcll
add
orl
mov
mov
cmc
ljmp
push
xchg
lahf
mov
sub
aad
das
ja
xorl
into
inc
inc
cmpb
aaa
mov
sahf
cmp
dec
mov
enter
lods
mov
jl
insl
push
dec
push
pop
or
aas
mov
loopne
repz
cmp
cmp
negl
loopne
adc
enter
cld
mov
movsb
sub
fwait
mov
dec
stos
es
lods
dec
les
out
popf
rclb
popf
in
sbb
ja
or
or
out
test
rdmsr
inc
ret
xchg
aas
mov
push
ja
cmp
js
xor
inc
aam
adc
movsb
jg
mov
and
lods
mov
cmp
xchg
cmpsb
in
jns
shrb
xchg
inc
cld
cmpsb
inc
icebp
daa
scas
sbb
cmp
or
adc
mov
dec
or
mov
sub
mov
and
int
cmc
mov
push
mov
xchg
sub
repnz
mov
test
call
sub
shl
sahf
cli
jno
jmp
pop
push
test
and
ficoms
ljmp
xlat
inc
inc
cmp
lods
sbb
sbbb
in
and
mov
rcrb
adc
sbb
mov
mov
out
jne
sub
adc
int
sbb
jge
xchg
imul
insl
int
mov
lea
roll
push
fldl
outsl
and
iret
punpckldq
jo
sbb
cli
mov
xor
jns
imul
lods
ljmp
ficompl
scas
out
cmp
shl
pop
pop
movsl
jle
ss
inc
push
pop
xor
xor
cmpsl
rcrb
lock
inc
js
xor
mov
sub
bound
mov
push
xor
add
pushf
setge
sub
and
jmp
dec
and
fiadds
mov
xchg
adc
push
push
push
mov
push
loopne
push
insb
shrl
sbb
ds
pop
mov
bnd
cmp
jle
adc
xchg
cmp
dec
or
mov
pop
mov
in
sub
int
imul
sti
lods
popl
insb
mov
adc
mov
popf
push
fdivs
pop
dec
pop
mov
jb
lret
and
psubw
daa
xchg
mov
pop
inc
imul
xchg
subl
mov
inc
xchg
rcl
mov
cs
lea
cltd
lcall
mov
dec
dec
jae
inc
mov
mov
mov
adc
xor
shlb
mov
xchg
mov
pop
ljmp
pop
clc
mov
pop
js
cmp
movsb
adc
rorb
scas
dec
adc
xchg
repnz
push
cld
dec
icebp
sbbb
sub
jb
sbb
cli
ret
mov
in
movsb
pop
out
xchg
push
mov
xlat
mov
leave
out
jb
xchg
popf
jb
sbb
sarb
mov
adc
mov
loope
mov
mov
jbe
movsb
loopne
mov
pop
mov
jo
dec
pop
mov
xchg
pop
and
sbb
sahf
pop
out
fcomp
and
popa
inc
std
fcmove
inc
mov
mov
jno
pop
enter
xchg
lcall
mov
popa
out
cmp
sbbl
icebp
out
jmp
test
sub
inc
popf
or
mov
sub
xor
imul
ficoms
test
adc
pop
mov
mov
cwtl
loope
push
pop
dec
insb
push
pop
in
in
pmaddwd
leave
das
mov
lods
mov
fnstsw
sbb
cmpsl
mov
or
cmp
xor
mov
mov
sbb
je
popf
ret
out
pusha
cmpsl
cmp
and
lods
test
push
gs
fsubrp
ret
jno
add
lret
mov
mov
lods
xchg
fs
fnstcw
pop
rep
in
insl
rorb
fdivrl
das
inc
gs
test
or
dec
cmova
mov
mov
bound
pop
add
or
sub
xchg
xchg
or
fldenv
sti
shrl
cmp
push
inc
shl
pop
in
sbb
js
fists
inc
ja
dec
shlb
and
popf
fwait
jmp
or
sub
push
inc
in
xchg
lods
out
imul
repz
jnp
stos
pop
hlt
xchg
test
mov
jne
and
jo
mov
lods
cld
shrl
sub
lock
inc
xchg
jl
imul
mov
movsb
dec
add
pop
ret
sbb
popl
mov
jmp
mov
jb
sti
jle
xor
and
lret
xor
test
fisttpl
inc
ja
addr16
xor
or
sub
adc
adc
cmpsb
push
jg
mov
jbe
test
mov
std
mov
scas
push
lods
push
cmpsb
mov
mov
sub
lcall
sahf
lods
push
cmp
jl
insl
xor
xchg
and
cmp
inc
cmp
add
push
notl
testl
mov
mov
adc
pop
fsts
mov
push
push
xchg
push
in
mov
outsb
popf
ficompl
xor
jge
dec
enter
sub
in
dec
cmp
and
xchg
cs
push
dec
faddl
notb
add
cmc
jo
pop
jae
test
mov
fldl
sub
push
sub
mov
push
sub
mov
dec
xchg
adc
ss
adc
cmp
pop
inc
pop
subl
add
pop
dec
out
cmp
adc
test
popa
hlt
pusha
add
xchg
push
test
fistpll
add
cld
pop
pop
mov
sbb
out
cmp
xor
sub
ljmp
sbb
pop
iret
or
adc
roll
jmp
cltd
sbb
out
push
mov
ljmp
fcmovne
push
inc
cmc
push
mov
sub
xor
sbb
and
rclb
jb
sub
inc
xor
xor
mov
xchg
xor
ss
jle
jge
add
fucomi
xor
push
inc
fdiv
xchg
cwtl
adcl
pop
ds
clc
into
jbe
jmp
loop
xchg
xchg
insl
int
ret
mov
add
mov
adc
fs
repnz
shrb
jnp
cmp
push
in
mov
xor
imul
divl
cmp
test
cmp
pop
push
aam
lea
or
mov
je
adc
and
std
sbb
sti
push
cmpsl
xlat
mov
mov
mov
loop
xor
int
jae
jo
mov
dec
add
lea
sbb
fldt
pop
ljmp
sub
cmp
adc
popa
sub
imul
ss
jge
in
pop
jg
and
aas
cmp
mov
ficomps
adc
mov
fiaddl
adc
xor
cmp
sub
loop
pop
inc
int
mov
scas
pop
and
jp
xchg
xchg
test
adc
fwait
jge
bound
std
inc
jne
in
mov
jp
mov
or
aam
adc
shll
add
push
incl
or
dec
jb
aaa
or
cld
std
scas
std
mov
fisttps
sub
mov
pusha
loop
repnz
sub
fildl
shr
sbb
pop
repz
daa
mov
mov
xor
and
test
mov
mov
lock
stos
and
inc
push
pop
test
mov
iret
notb
mov
divb
popf
push
cs
inc
xchg
nop
cmp
cmp
fldenv
movsb
push
jo
jge
ficoml
rcrb
pop
daa
jnp
das
scas
fadd
or
nop
lods
lock
lds
lods
lcall
inc
lods
add
pop
sbb
pop
mov
sti
mov
pop
pop
sbb
sub
fwait
test
imul
cmp
lret
sbb
xchg
fisubrs
lock
sahf
adc
lret
xor
rsqrtps
movsl
push
ret
test
jnp
stc
cltd
lods
inc
xchg
push
add
popf
inc
xor
lock
cmp
seta
jg
pop
test
mov
call
inc
jmp
pop
dec
pop
jle
data16
stos
xchg
pop
int3
test
and
repz
test
xchg
xchg
jno
jb
sbb
addr16
mov
hlt
pop
and
sub
lock
sbb
lods
dec
cltd
or
das
xor
pushf
pop
inc
es
lds
jb
les
sarb
lock
rorb
call
arpl
insl
icebp
dec
jle
repnz
pushf
fsubl
jmp
jge
jns
fcmovnb
into
jb
dec
dec
jecxz
xor
fwait
adc
pop
repnz
sbb
out
sub
les
mov
cmpsb
jge,pt
sub
mov
aam
sub
add
push
lahf
mov
jmp
pop
add
mov
mov
add
loop
add
jne
jns
inc
xchg
stos
dec
loope
dec
stc
std
jnp
addb
iret
or
push
add
sbb
jp
xchg
pop
push
add
add
sub
stos
lret
push
cmp
adc
adc
pushf
sub
decl
mov
imull
xchg
js
addr16
inc
dec
jnp
jmp
or
sbb
jp
mov
mov
lods
aas
xchg
cmp
pushw
push
ljmp
inc
icebp
pop
sbb
sbb
cmc
ret
sub
push
stos
dec
and
in
or
out
inc
repz
push
add
inc
push
mov
jae
out
orb
pop
lcall
int3
popa
pop
and
imul
jae
push
ffreep
sti
das
adcl
cmp
inc
sub
dec
dec
inc
enter
pop
push
out
jo
gs
ljmp
push
mov
mov
xor
inc
imul
sbb
jmp
cs
push
lock
mov
cli
sbb
in
mov
out
stos
stos
sub
add
jg
lret
mov
mov
pop
icebp
push
call
scas
stos
push
cmpsl
int
push
int3
test
mov
push
mov
cmpsl
or
push
nop
lret
cmp
pusha
inc
mov
fdivs
es
dec
push
dec
mov
rcrl
mov
push
add
push
cwtl
push
jge
and
pop
cmp
or
outsl
popa
pop
mov
adc
push
xor
idiv
movsb
push
stos
xor
fs
shll
jle
mov
xor
outsl
into
pop
ljmp
cmp
dec
call
aas
xchg
idivb
or
pop
cmp
xor
aaa
pop
stos
mov
add
cltd
xchg
fcmovbe
mov
scas
ds
xchg
jbe
outsb
dec
filds
add
lods
pop
cmp
out
mov
sbb
sub
daa
ja
in
mov
pushf
aam
push
xchg
and
popa
ljmp
shlb
inc
shld
mov
rep
cmp
dec
std
cmc
mov
call
adc
add
and
cmpsl
xchg
add
das
inc
jl
mov
out
mov
and
and
adc
add
imul
xor
stos
inc
mov
mov
test
mov
pop
rcrb
sub
cmc
dec
je
fisttpl
mov
sub
xchg
mov
add
xor
add
cmp
mov
cmpsb
inc
mov
sub
jmp
pushf
add
push
push
idiv
mov
int3
scas
mov
rorl
ja
cltd
lret
add
out
out
aaa
push
jecxz
addb
dec
int
mov
jp
push
shlb
mov
sbb
sbb
inc
inc
and
mov
or
jge
add
inc
ja
push
je
sar
sub
bound
push
clc
inc
sbbl
mov
adc
pop
mov
add
inc
dec
std
scas
mov
push
xchg
jb
mov
cmp
xchg
sarl
les
je
dec
shll
aad
std
aaa
jmp
push
mov
out
xchg
mov
mov
je
ret
add
pop
push
sub
mov
iret
and
loop
inc
popa
and
lcall
and
mov
stc
pop
in
xchg
add
dec
js
xchg
mov
sbb
fldenv
movsb
imul
imulb
les
xchg
outsl
ret
scas
sar
cmp
imul
and
jb
jge
pushf
or
fadds
aad
add
test
inc
push
cwtl
test
sbb
or
lea
mov
push
xor
rcrb
aad
adc
cmc
dec
pop
jnp
adc
jecxz
sub
xor
daa
mov
pop
xor
mov
out
lea
lds
ljmp
adc
fs
mov
push
mov
inc
mov
mov
sub
fisubl
fisttps
test
mov
ljmp
lods
push
mov
mov
mov
jmp
mov
add
pop
iret
mov
data16
and
pop
pushf
cmp
cmp
pushf
sbb
scas
lock
push
lret
dec
xchg
adc
cmp
fisubrl
xor
mov
push
sbb
mov
cltd
lock
dec
push
cmc
push
loop
xchg
cmc
aad
fidivl
repnz
or
rclb
imul
fdivl
je
mov
mulb
pop
xlat
inc
sbb
xchg
out
js
rorl
cmpsb
mov
adc
cwtl
jl
cmpsl
jp
test
adc
pop
pop
push
in
push
decb
jmp
xchg
inc
lds
mov
or
or
xchg
dec
xor
pop
inc
mov
int3
loopne
repz
bound
push
notl
push
repnz
imul
xchg
loope
dec
stos
add
mov
inc
cmpl
and
sbb
push
lea
sarl
pop
push
add
stos
or
mov
dec
orl
out
das
jbe
xor
xlat
jbe
inc
mov
xor
push
andb
stos
andl
mov
test
cmpsl
inc
or
hlt
fcoml
ja
lret
lock
adc
mov
sbb
std
fs
es
or
imull
adc
cmp
pop
in
popf
xor
pusha
lds
sbb
test
mov
outsb
out
fsubl
lret
push
adc
sub
mull
mov
sbb
or
sub
xchg
inc
mov
jno
sub
out
subl
xor
mov
push
and
and
mov
or
cmp
loopne
pusha
mov
sub
pop
aad
andb
setnp
push
mov
inc
push
mov
xor
mov
fs
sti
test
push
or
sarl
test
dec
pop
pop
fldl
das
cmp
mov
dec
in
sub
xchg
xchg
pop
sahf
xlat
sub
dec
stos
rcll
shrb
jnp
mov
inc
test
pop
mov
mov
sub
jae
subl
bound
push
pop
daa
add
jno
mov
test
cmpsl
scas
andb
ds
adc
das
movsl
lar
lods
and
sub
pop
je
jge
ja,pt
out
cld
sbb
dec
fs
mov
pop
rol
ljmp
dec
jge
out
lahf
add
daa
fs
adc
fisubl
andl
cltd
pop
xchg
mov
mov
jl
fisubl
inc
pop
xor
rclb
ret
in
std
mov
push
add
inc
int3
xchg
aas
sub
mov
lret
pusha
clc
inc
ss
mov
int3
divl
or
jae
shll
cltd
mov
xlat
inc
sbb
insl
aaa
mov
pusha
mov
lds
shlb
mov
dec
add
cmpsb
inc
cmpl
jae
adc
int3
jnp
or
fstpl
aaa
das
push
icebp
icebp
icebp
cs
sub
js
insl
fsubrl
outsb
cmp
iret
add
dec
int
push
dec
pop
test
push
sbb
jle
xor
cmp
xchg
pop
out
cmp
push
cwtl
subl
fmul
mov
les
push
add
mov
in
sub
scas
xchg
imul
dec
add
mov
jbe
ljmp
ret
cwtl
and
ret
xchg
push
mov
sbb
xchg
cmp
adc
adc
ds
add
jl
jle
repnz
inc
sti
and
pop
dec
je
ret
mov
jmp
jg
cmp
xchg
or
std
mov
scas
push
fdivrs
fistl
or
jmp
mulb
outsl
xor
add
loopne
lea
or
adc
cli
es
xchg
icebp
outsb
lahf
fldenv
xchg
incl
movsb
sbb
int3
jecxz
fists
loope
inc
mov
pop
mov
mov
stos
sub
aam
xchg
in
shrb
cmp
aas
es
and
adc
lret
ret
mov
jg
inc
lods
cmp
mov
aad
dec
mov
adc
add
cmpl
cwtl
inc
in
out
dec
das
jmp
xchg
mov
xlat
jecxz
xor
mov
out
push
adc
mov
mov
insl
add
das
insl
xchg
mov
dec
pop
push
lcall
int3
cmpsl
ja
and
inc
neg
fucomi
into
in
or
jl
jo
cld
pop
mov
mov
mov
jns
jne
js
lcall
int
sub
in
fldt
xchg
pop
inc
mov
sub
sahf
adc
ss
jo
dec
int
iret
xchg
insb
dec
mov
scas
stos
enter
fldcw
out
movsb
mov
push
les
inc
and
adc
pop
movntps
fsub
in
loop
int
inc
sbb
mov
or
cmpsl
les
sub
adc
inc
cld
mov
imul
cwtl
mov
std
add
adc
rcrb
dec
pop
mov
movl
mov
jns
mov
insb
in
add
xchg
pop
lret
mov
shrb
pop
fiadds
dec
scas
inc
push
xor
shl
test
std
lret
data16
push
mov
mov
iret
mov
dec
push
jo
fiadds
or
pop
push
cmp
std
mov
sbb
into
shll
jo
mov
cld
ret
stos
sahf
dec
or
push
lcall
or
push
repz
mov
jnp
lock
pop
movsl
and
lcall
push
insl
in
mov
nop
ljmp
adc
aaa
mov
mov
or
cmpsl
xchg
imul
stos
in
test
and
in
icebp
decb
pop
adc
fcomip
pop
movq
mov
out
out
stos
pop
divl
xchg
mov
mov
call
lret
and
push
cmp
and
call
jne
pop
cli
std
or
lahf
ret
jmp
inc
jbe
push
xchg
test
cwtl
jae
or
nop
mull
push
jge
xor
cwtl
cmp
inc
dec
insl
stos
adc
loopne
and
xchg
inc
mov
loop
inc
movsl
bswap
or
outsl
or
xlat
and
sbb
icebp
lahf
jae
sbb
xchg
sbb
xchg
inc
jecxz
shll
dec
outsl
jmp
pop
sub
adc
je
mov
xchg
jp
icebp
and
test
ret
cmp
and
cmc
jno
rcrl
loop
mov
aas
mov
testb
dec
iret
jbe
or
dec
dec
ljmp
or
mov
and
js
mov
outsb
popf
xor
daa
dec
movntq
cltd
ret
imul
imul
cmp
adcl
mov
js
push
mov
pop
xchg
xchg
imul
rclb
xor
imul
mov
and
lahf
pop
and
stos
js
sbb
cld
shlb
outsl
jnp
sar
fcmove
jb
pop
dec
dec
pop
fldenv
imul
repnz
dec
or
stos
add
out
jmp
ljmp
test
pop
sub
adc
add
outsl
cmp
scas
js
les
dec
sbb
pop
inc
movsl
inc
and
lahf
mov
test
push
fs
or
push
sub
pop
xchg
sub
add
push
cli
jae
inc
fdivs
fmull
mov
pop
pop
mov
ljmp
push
ret
jae
into
mov
dec
push
sbb
incb
out
push
push
imul
arpl
fs
push
pop
dec
and
cli
xlat
shlb
stos
enter
aas
jns
push
daa
mov
lds
in
xchg
adc
xchg
jecxz
jae
out
or
and
pop
cli
push
icebp
mov
sub
pop
push
lahf
or
or
mov
pusha
insb
lock
ds
and
and
pushf
sub
aas
lods
add
jmp
sub
rolb
nop
ret
adc
dec
daa
xchg
add
loopne
pop
dec
out
aam
call
jbe
cmpsl
sbb
shll
add
fcmovnu
cltd
dec
dec
cs
inc
es
jno
pop
add
inc
jg
push
xor
jae
and
adc
or
lods
xor
nop
ror
add
jns
push
in
ja
ret
fs
movsb
es
dec
adc
mov
lret
ds
add
xchg
mov
xor
ficoms
xchg
out
mov
std
sbb
sbb
fwait
repnz
push
xchg
cmp
inc
or
sub
and
pop
xchg
push
xor
mov
xlat
imul
jae
xor
cld
jl
jle
jns
adc
cltd
out
vmovmskps
test
pusha
add
out
out
loopne
mov
pop
gs
pop
xor
pusha
je,pn
repnz
loope
call
or
and
sbb
mov
push
mov
shrl
mov
mov
test
jo
ss
dec
inc
and
and
aaa
mov
aas
popa
mov
sub
or
jge
lock
addr16
int3
mov
sbb
push
push
loope
xor
sbb
mov
inc
inc
xchg
sbb
cli
scas
push
dec
clc
lods
sahf
xchg
rolb
mov
fcmovne
test
cmp
or
ljmp
lods
add
xlat
scas
xor
dec
mov
aad
scas
scas
sbb
rorl
xlat
dec
xchg
arpl
bound
movsl
pop
sbb
lods
adc
and
add
scas
xor
xchg
js
stc
xchg
pop
pop
rcll
ret
inc
dec
xchg
icebp
in
mov
movsl
scas
adc
mov
xchg
insb
scas
out
push
test
xor
push
jmp
push
sbb
adc
movsb
repnz
jl
mov
in
rol
push
hlt
aad
and
outsl
faddl
add
sbb
xchg
mov
in
xchg
adc
push
sub
mov
daa
jle
fisubrs
pop
test
sbb
andl
popf
cs
sbb
sub
mov
or
aad
inc
add
xchg
aaa
jl
sbb
dec
jne
jp
popf
sbb
pushf
and
add
jge
xchg
cmp
mov
divl
icebp
leave
mov
push
jle
stos
cld
dec
lods
jmp
adc
addr16
mov
xchg
push
or
ret
dec
inc
popa
sbb
movsl
push
fwait
xor
inc
bswap
cmc
mov
divb
cli
jmp
ret
inc
inc
int
insl
lret
sahf
jp
mov
imul
xchg
adc
push
jecxz
jae
sub
iret
sub
mov
pop
inc
ja
loopne
in
loope
mov
lock
dec
ljmp
loope
ljmp
outsl
lea
aaa
pop
sbb
fidivrl
cmp
pop
lcall
xor
dec
dec
imul
sub
pop
hlt
lcall
jmp
leave
jo
pushf
stc
push
add
sahf
fbstp
data16
inc
dec
or
jge
in
stos
in
sahf
mov
sbb
add
add
addr16
pop
in
fucompp
shlb
dec
add
add
or
sbb
xchg
test
in
popa
jns
in
xchg
cmp
or
fcomp
mov
xchg
xchg
fadd
add
outsb
je
test
xor
out
xchg
incb
pop
sahf
jmp
icebp
xor
mov
pop
imul
les
ljmp
and
lea
fiadds
pusha
and
mov
dec
and
sbbb
stc
jl
cmp
sti
push
hlt
xchg
or
popa
cmp
sub
cmc
dec
testb
sbb
loopne
and
lods
mov
mov
xchg
rcrb
lahf
push
dec
out
mov
mov
mov
dec
and
cmp
hlt
push
sti
das
fwait
and
inc
inc
dec
test
cmpsl
repz
mov
xchg
xchg
shlb
mov
cmp
sbb
add
add
icebp
add
pop
xchg
push
imul
mov
xor
out
pop
out
loopne
mov
xchg
mov
mov
mov
cmp
sub
adcl
shl
lahf
pushf
jbe
lret
lea
xchg
out
inc
add
xchg
fsubr
and
cltd
iret
cmpsb
mov
std
movsl
fwait
xor
sub
or
std
scas
repnz
xor
push
fnstenv
ja
lods
ret
pop
cltd
rol
jne
adc
ret
aas
or
xchg
adc
pop
push
sbb
ja
pop
out
mov
gs
pop
sub
adc
icebp
or
lret
rol
int
out
jo
and
std
mov
je
add
mov
repz
setg
sti
mov
sub
fsubr
les
imul
pushf
out
ret
popf
mov
clc
repz
sbb
cmpb
mov
jns
in
jge
repnz
xchg
sub
loopne
je
jo
lock
jl
sbb
sub
push
sti
cmp
dec
cmp
out
cmp
jns
rol
push
scas
sub
into
adc
repz
mov
rcll
stos
imul
mov
fidivrs
sbb
shlb
mov
mov
jns
das
lahf
sub
add
cmc
fisttpl
pop
je
pusha
push
loope
sub
gs
fs
pop
insl
pop
adcl
repnz
iret
jle
test
dec
cmc
cmpsb
cmp
rclb
push
loopne
xchg
lods
daa
jae
lcall
test
jmp
arpl
sub
add
dec
pop
sbb
or
mov
pop
rol
aas
pusha
mov
mov
cmp
sbb
jl
mov
sahf
push
inc
lret
fwait
mov
xor
sahf
push
testb
cwtl
xor
jge
xchg
adc
ss
scas
testb
mov
stos
pop
jnp
sti
mov
pop
nop
mov
push
pop
mov
pop
xor
ficompl
mov
mov
ds
inc
movsl
ffreep
loope
movsl
incb
outsb
cmpsl
fwait
jbe
jno
std
test
addr16
cli
add
loopne
imul
xor
mov
imul
es
dec
xchg
push
scas
or
mov
iret
add
lds
dec
mov
insb
pop
push
mov
cli
pop
adc
mov
enter
lret
mov
orl
push
push
or
or
inc
push
xchg
pop
lods
sbbl
pop
pop
adc
rolb
sub
jmp
pop
adc
mov
xchg
ficompl
in
rorl
sti
aad
sarb
sub
inc
jno
sub
mov
test
out
rolb
xor
dec
push
or
pop
push
adc
sbb
mov
push
fwait
out
pop
and
out
mov
dec
pushf
xor
cs
ficomps
lods
not
mov
ds
icebp
mov
mov
xor
pop
mov
mov
push
pusha
int
shll
jae
cmpsl
push
mov
push
mov
std
push
mov
js
sbb
out
sti
add
loop
jb
or
inc
int3
push
pop
push
push
rolb
jnp
loop
daa
incb
pusha
enter
sub
mov
loopne
mov
push
or
gs
pop
sub
xchg
aas
jno
pushw
mull
xchg
sub
push
repnz
jmp
mov
push
fbld
sub
cld
xchg
shlb
pop
add
aas
push
jne
mov
mov
add
lods
sbb
aas
jg
mov
sub
add
mov
mov
insl
dec
xchg
loope
lods
stos
inc
cmp
xor
xchg
xchg
js
mov
mov
and
or
cs
and
fstpt
xlat
mov
dec
sbb
insl
js
lods
cmp
into
xor
test
xchg
fisubs
sbb
pop
mov
or
xchg
sahf
or
xchg
dec
mov
push
das
stos
inc
popf
adc
cmp
rclb
jno
rclb
scas
mov
addb
cmp
jae
frstor
ret
stos
mov
jg
es
dec
mul
pop
fdivp
cltd
shl
loopne
add
sbb
xchg
je
mov
ja
mull
inc
push
push
adc
pusha
mov
lea
adc
cs
dec
add
mov
cs
in
add
neg
sahf
aas
fisubs
pop
mov
insb
pop
xchg
sbb
daa
xchg
push
inc
scas
push
sti
xor
mov
dec
in
popf
jecxz
jae
push
cli
sbb
test
shrl
cld
xor
cmp
cld
sub
lcall
rcl
or
mov
loopne
pusha
andl
push
andl
fdivrl
pop
mov
mov
mov
sbb
add
ds
push
mov
stos
ret
gs
ret
rolb
aas
in
pop
mul
fstl
xor
jae
call
into
orl
repz
push
sub
mov
xchg
mov
jnp
cld
mov
insl
push
add
mov
push
push
cmc
outsl
iret
dec
hlt
test
pop
sbb
cwtl
dec
sub
or
pop
push
inc
xor
push
addr16
dec
pop
lcall
dec
mov
and
sub
and
jl
cmp
movsl
or
mov
xor
into
mov
icebp
data16
test
adc
or
inc
fidivrs
or
mov
loope
cmp
loop
xchg
cmp
testl
insb
pushf
pop
xorb
sub
in
sub
lods
mov
loope
adc
out
push
icebp
adc
mov
out
and
adc
stos
sub
inc
stos
cmp
and
sbbb
stos
xchg
xor
dec
lods
ror
jecxz
or
loope
fwait
jo
fstp
repz
xor
sbb
cli
aas
push
push
jno
sahf
dec
xchg
sbb
fcoms
sti
outsb
leave
rcr
pop
xchg
mov
icebp
jns
inc
push
les
clc
popa
xchg
push
mov
sbb
dec
and
insb
jmp
mov
xchg
ret
das
jae
repz
into
lret
bound
mov
test
repz
jg
xor
adc
lds
aas
in
inc
cmpsb
lods
xor
sub
sub
rorl
xor
in
aas
jle
add
into
faddl
fcoml
popa
sahf
sub
cmp
cmp
test
mov
jne
movsl
rolb
mov
jne
cli
pop
addr16
mov
mov
roll
push
jae
mov
push
rolb
push
ret
inc
dec
popf
xchg
repz
ret
lcall
mov
and
xor
mov
fisttpll
push
cmp
in
mov
lea
sbb
inc
and
jnp
sarl
xor
sub
pop
int3
xor
sub
aas
inc
and
jo
std
sbb
jae
adc
cmp
nop
sbb
push
lret
push
xchg
test
fcmovnu
mov
stos
pop
aaa
sbb
add
je
mov
mov
fwait
add
xor
sub
rcl
je
dec
or
lret
push
mov
div
cmp
adc
xchg
std
js
adc
dec
int
sub
and
adc
mov
push
daa
scas
push
push
jp
adc
data16
das
fstpt
cmp
lods
in
or
pop
ret
out
push
add
lock
add
jbe
cmp
xchg
ja
sub
ficoml
in
shr
cmp
push
sbb
fwait
mov
jge
int3
push
js
cmp
es
sbb
jmp
pop
jl
icebp
pop
cmp
jmp
xor
out
aaa
jmp
movhlps
mov
jg
fidivrl
in
inc
in
inc
sub
mov
push
xor
inc
add
stc
pop
lahf
or
adc
cmp
fbld
xchg
rclb
fadds
dec
and
arpl
push
loop
or
icebp
xchg
cmp
icebp
adc
stos
test
inc
pop
jbe
sbb
push
aas
pusha
sbb
repnz
loopne
sar
push
or
bound
jno
dec
lret
and
add
jge
shlb
dec
inc
aad
shr
cwtl
lcall
mov
xor
mov
fsubrp
and
and
dec
popf
les
xor
icebp
add
cmp
adc
stos
push
mov
repnz
mov
into
mov
lret
lods
lock
ss
rorl
dec
shrb
loope
setle
cmpsb
cwtl
repz
dec
or
rol
jmp
into
das
cltd
rorb
sbb
mov
adc
fnstsw
xchg
nop
lret
stos
je
push
or
and
sub
dec
sahf
loope
imul
daa
add
or
pop
cltd
sbb
add
push
pop
jmp
test
lods
pop
mov
lahf
xor
shl
sbb
inc
inc
dec
inc
cmc
test
push
scas
sub
gs
cmc
hlt
and
mov
in
ds
push
sbb
call
or
push
popf
mov
jecxz
arpl
push
stos
push
add
cmp
dec
faddp
nop
stos
sar
test
mov
cmc
in
test
outsl
or
fstp
dec
idivb
jb
rorb
out
clc
mov
repnz
xor
inc
push
jge
inc
pop
das
filds
and
lret
cs
lods
xor
xchg
lods
test
sub
or
lret
insb
push
mov
lcall
cmpsb
mov
movsb
cmpb
mov
cltd
aad
mov
and
test
cwtl
call
cmpsl
rol
lret
lods
mov
push
sar
push
mov
fcompl
jecxz
not
cmpl
push
pop
mov
xchg
xchg
ljmp
cmp
jb
fs
cltd
add
ret
ja
out
call
jecxz
repnz
mull
into
push
rcrb
cmpl
cwtl
sbb
aam
xor
popa
jmp
push
fdivrp
repz
dec
xchg
xor
pushf
daa
aaa
sub
jb
mov
ret
sub
push
fisttps
subb
scas
sbb
cwtl
adc
cmp
daa
pop
ds
jmp
add
cmp
push
mov
imul
outsl
push
cmp
push
ds
outsb
mov
inc
jl
stos
push
lcall
cmc
inc
mov
sub
loopne
fcoms
inc
lock
sahf
mov
test
fstps
inc
jb
add
clc
push
jbe
lock
loope
xchg
dec
and
mov
inc
and
pushf
test
sbb
jmp
int3
shl
inc
scas
imul
xchg
mov
ja
mov
xorl
sub
ret
js
mov
cltd
imul
in
sub
mov
fldl
xor
adc
sub
ss
out
lcall
clc
pop
sahf
push
push
jge
or
cmc
pushf
ds
roll
sahf
pop
push
cmp
mov
lret
mov
jp
adc
inc
sub
mov
fwait
iret
fdivs
sub
fisubl
nop
or
test
xor
cli
clc
mov
jge
mov
xchg
insb
fiadds
icebp
xor
mov
ret
push
pop
sbb
pop
jbe
xor
movsb
stc
and
pop
xor
sbb
push
mov
sbb
dec
mov
dec
sub
in
jp
and
mov
test
aas
push
mov
push
or
fldt
mov
xor
arpl
sbb
sarb
or
into
sti
sbb
mov
aas
xchg
push
cmp
pop
fldl
cld
inc
mov
movsl
mov
xor
cmp
cli
or
push
mov
test
xor
xchg
cltd
mov
push
cs
into
jae
scas
das
lret
push
sub
mov
in
mov
faddp
xor
mov
push
pop
test
repnz
inc
lods
push
mov
mov
call
cmpsl
sub
xor
mov
mov
dec
ds
inc
mov
lret
inc
es
icebp
aas
imul
repz
push
pushf
movsb
mov
inc
addr16
add
xor
in
jbe
nop
jae
mov
hlt
dec
sbb
mov
adc
and
out
rcll
push
and
push
nop
sti
int3
mov
cmp
outsl
test
hlt
xchg
mov
call
rclb
jg
call
or
ss
jae
scas
lcall
shlb
mov
bnd
dec
xor
fwait
inc
adc
cmp
dec
int
adc
inc
popf
adc
test
xchg
scas
scas
pusha
ss
fwait
and
sub
jbe
out
push
xchg
stc
mov
adc
clc
and
dec
or
mov
inc
xor
jne
sbb
push
and
jge
in
pop
lds
cmp
push
sbb
pop
mov
cmp
shrb
inc
iret
scas
xlat
repnz
dec
jno
sub
mov
out
in
mov
pop
ret
clc
jecxz
out
add
xlat
sbb
add
in
mov
stos
shl
data16
iret
pop
rcll
ret
pop
xchg
cmp
cs
add
cmp
mov
addr16
mov
std
and
lret
sbbl
mov
stc
mov
xchg
in
lret
jecxz
xchg
js
fwait
mov
test
jns
push
mov
xchg
negl
mov
fnstsw
data16
rorl
and
arpl
ss
fisubrl
cld
mov
shl
aad
das
dec
mov
sbb
call
sub
leave
icebp
mov
repz
jp
xchg
testb
cmp
and
pop
out
xchg
mov
je
jp
mov
ljmp
das
adc
pop
imulb
pop
mov
pusha
or
jecxz
ja
sar
sub
dec
pop
leave
gs
imulb
jp
xor
cli
idivb
adc
dec
cmc
pushf
inc
in
jge
mov
aaa
xor
cld
repnz
roll
sti
jbe
lock
das
repz
push
jae
cwtl
mov
enter
insl
pop
inc
push
loope
add
test
adc
cmp
data16
stos
pushf
dec
mov
out
mov
popf
shll
insl
out
int3
orb
les
and
cmc
mov
es
in
in
push
mov
xchg
inc
jecxz
cmpb
cltd
sub
xchg
and
cmp
push
addr16
lret
fwait
lret
mov
in
add
xor
out
mov
test
loope
mov
cmpsl
gs
jmp
popa
popa
mov
or
mov
jns
adc
cmpb
insb
in
xchg
stc
and
je
xchg
xchg
enter
jg
outsb
leave
xor
push
add
loope
add
repnz
mov
or
inc
in
mov
stos
push
je
fwait
pop
jnp
movb
jge
cmp
pop
mov
mov
shll
popf
rcll
jae
leave
and
test
cli
xchg
adc
fs
scas
es
ljmp
cld
mov
push
mov
imull
mov
in
mov
push
fstpl
mov
popf
adc
aad
data16
mov
mov
outsl
test
xor
sub
mov
movsl
imul
sbb
shr
aas
mov
push
xchg
lock
stos
pushf
sub
mov
inc
jp
pop
pop
inc
outsb
mov
mov
sahf
ret
stc
push
icebp
cmp
loopne
loope
push
push
cwtl
pusha
pop
popa
sbb
out
jp
and
push
lret
les
pop
pusha
mov
pop
rcl
out
cmc
mov
dec
into
jle
out
pop
out
sbb
push
jecxz
push
jns
jl
mov
and
push
inc
push
sti
dec
enter
push
jecxz
insb
push
sub
push
out
sub
or
mov
jo
jne
or
rol
inc
daa
push
mov
fnsave
cld
sub
add
subb
cmpsl
neg
in
push
jno
sub
or
lcall
add
popf
pop
and
jmp
adc
sbb
dec
pop
clc
popa
mov
xor
leave
ja
mov
shll
pop
aam
jo
or
sbb
sbb
xor
xchg
push
mul
fnstcw
push
pushf
popa
mov
fnstcw
daa
out
lret
out
shrb
cwtl
fs
js
inc
xchg
inc
push
sbb
orl
xor
sbb
notl
xchg
cs
ficoml
andb
xor
xchg
dec
adc
stos
movsb
dec
lods
jle
sbb
stos
popf
fcomip
sti
add
xchg
mov
sahf
hlt
sbb
add
sbb
adc
and
adc
jg
mov
fnstenv
mov
inc
add
in
dec
cld
and
mov
cli
scas
cmp
sahf
movhps
jns
cmp
lock
sub
ret
add
dec
jns
jle
mov
cmpsl
fisubrs
adc
mov
std
mov
inc
and
mov
cmp
push
clc
adc
out
jecxz
js
and
xchg
jp
cmp
sbb
ror
clc
jno
xchg
lcall
jo
and
push
scas
or
jmp
mov
mov
das
xor
out
popa
daa
mov
leave
lds
and
scas
xchg
lds
pop
int3
push
mov
mov
jp
cmp
stc
int3
mov
sbb
outsb
dec
repz
movsb
lods
movl
sub
scas
lea
or
dec
rorb
cld
lods
and
orl
movsl
jns
scas
mov
inc
ja
sbb
push
gs
lock
in
lahf
outsl
xchg
or
and
or
dec
shrb
and
dec
and
xor
insb
dec
jae
scas
in
insl
shrb
jge
outsl
ss
adc
lock
loop
ficompl
mov
and
sub
sbbb
push
fsubrs
hlt
fcomp
xor
lret
xchg
inc
in
adc
inc
call
sti
mov
push
inc
xchg
ret
inc
lcall
aad
bound
or
aad
cmpsl
shrb
xor
inc
adc
or
sahf
ss
call
cltd
movsl
rorl
add
mov
inc
mov
icebp
jmp
out
stos
mov
lahf
inc
push
xchg
and
sti
ljmp
dec
push
clc
push
mov
in
enter
cmpsl
popa
fcmovnu
xchg
mov
pop
leave
sahf
xor
push
pop
test
pushw
mov
repz
lahf
mov
mov
test
js
stos
test
dec
test
in
sbb
adc
add
pusha
pop
lods
icebp
dec
lds
leave
cli
ds
or
cmp
xchg
shlb
jnp
jae
leave
push
dec
in
imul
adc
dec
data16
sub
push
push
jg
and
stos
les
inc
cmp
xor
call
out
inc
pop
mov
cs
cmp
push
jb
jle
js
or
loopne
lret
mov
sbb
leave
fcom
fbld
mov
das
ror
mov
loop
mov
sbb
out
std
out
mov
xchg
mov
cmp
mov
mov
fucom
cmp
and
pop
pop
add
sbb
xchg
into
addr16
cmpsb
cmp
test
and
lock
jnp
mov
pop
out
and
aaa
adc
jp
or
mov
xchg
lds
or
inc
push
push
pop
and
inc
cmpsl
and
int
icebp
xor
pusha
mov
jne
outsl
icebp
mov
jecxz
sbb
rcrb
jns
mov
stos
outsl
sub
cmp
stc
stos
pop
call
jmp
rcl
push
pop
xor
jmp
in
inc
pop
into
and
add
mov
mov
inc
fsubp
mov
enter
je
pop
and
daa
mov
add
mov
sarl
pop
aad
les
adc
xor
xlat
sub
push
jns
sbb
jae
loop
mov
shrl
jbe
fists
cmc
test
or
sar
inc
xor
clc
sbb
cwtl
mov
bound
lcall
hlt
repz
mov
push
add
in
mov
movsb
add
jge
push
faddl
notl
outsb
or
jmp
push
sub
inc
mov
lock
std
icebp
add
ss
mov
in
push
out
lock
popl
je
rcrb
xchg
into
dec
scas
movsl
stc
gs
fwait
int3
shll
inc
ja
push
push
sahf
test
push
loope
repz
jnp
mov
add
hlt
mov
dec
or
push
es
inc
fadd
daa
jp
gs
sbb
add
cmp
call
sbb
dec
dec
addr16
mov
test
pop
cltd
test
test
jbe
sub
pop
pop
dec
int3
test
jb
sbbl
sub
js
mov
jne
xorb
sbb
and
mov
add
xor
fwait
sbb
les
sub
cmp
movsl
repz
inc
inc
mov
push
mov
mov
push
push
jle
lds
iret
ret
data16
mov
or
cmp
or
add
push
mov
ds
aaa
das
jge
ss
lret
out
adc
sub
cmp
sub
xchg
sbb
pop
fisttps
inc
std
mov
mov
insl
addr16
mov
shlb
fdivrp
test
or
mov
lahf
sti
popf
roll
subb
and
push
add
jmp
aas
jbe
xchg
jmp
dec
je
or
xor
push
lock
add
sub
mov
daa
xchg
adc
and
mov
frstor
push
or
popf
lock
ds
dec
sti
lret
sub
mov
mov
ljmp
sub
fisttpll
inc
cld
test
dec
pop
or
or
sub
sbb
add
idivl
ficoms
sub
call
into
mov
pop
mov
xor
cli
shrb
add
push
loopne
pop
daa
imul
loope
and
add
out
daa
jg
sbb
in
or
push
ja
clc
push
aaa
adcl
or
orl
das
sbb
mov
out
jmp
xchg
aaa
jmp
jns
jns
sbb
jae
arpl
arpl
push
xor
pop
les
icebp
or
mov
cli
fstps
fistpl
sti
cmpsl
cld
sub
cmp
mov
out
gs
insl
pop
mov
push
push
pop
ficoml
mov
repnz
pop
push
jbe
scas
pusha
out
dec
mov
push
sub
daa
lahf
jg
jmp
or
aad
sbb
add
jle
call
pop
pop
fildl
cltd
lret
lods
and
insl
adc
ffree
push
dec
cmp
loop
sbb
rdpmc
sub
lods
into
adc
push
sbb
mov
scas
inc
mull
testb
daa
mov
in
adc
xor
fildll
push
aam
sbbb
inc
mov
mov
out
sub
lods
clc
mov
pop
test
shl
frstor
scas
xor
in
dec
mov
mov
lcall
xchg
pop
xor
jnp
daa
adc
push
stos
bound
out
int3
popf
out
inc
adc
fbstp
xor
cmp
int
push
aad
rolb
xlat
xchg
jns
repz
in
jae
pop
clc
push
in
nop
add
aad
js
pop
call
push
fstpl
pop
jmp
push
mov
pop
jbe
pop
pushf
addr16
out
lods
cli
jg
mov
cmp
or
fwait
cmpsb
jge
lea
enter
add
cmp
lea
xchg
jmp
pop
jno
enter
mov
fadd
pusha
or
adc
adc
rcrb
sub
and
jmp
es
adc
ficomps
pop
inc
sub
cmpsl
or
scas
adc
insb
ljmp
imull
cmpsb
fs
add
jl
out
movsb
sbb
imul
dec
popa
push
cmp
or
xor
in
sete
mov
push
push
and
mov
jno
push
dec
push
icebp
push
jge
mov
subb
ljmp
pop
push
jbe
imul
dec
jmp
popf
clc
cmpsl
jb
fbstp
sbb
sarb
adc
gs
mov
cmp
cltd
sbb
daa
inc
xor
xchg
loop
mull
cwtl
stos
and
rcr
lcall
fisubl
sub
rcrb
mov
loope
lods
pop
dec
in
mov
icebp
shll
mov
inc
and
pop
call
gs
stos
jmp
mov
cmp
out
iret
fildll
imull
mov
enter
dec
aad
fcom
cld
loop
mov
ret
and
in
pushf
pop
fistl
pop
loop
dec
scas
lahf
cmp
sbb
rorl
int3
inc
lcall
xchg
cmpb
mov
test
push
cmp
call
mov
rorb
sub
into
sub
push
in
test
popa
aad
je
ja
cmp
adc
mov
mov
outsb
dec
cmp
lcall
pop
xor
cmp
in
negb
je
push
daa
add
inc
sub
or
push
xor
aas
pop
push
pusha
or
jb
pop
xor
cmp
mov
jno
gs
adc
or
lahf
jb
icebp
iret
pop
cmp
xor
sub
mov
loope
adc
mov
ljmp
test
lcall
pop
mov
and
mov
mov
pop
int3
stos
pop
xchg
lock
adc
mov
lock
out
sahf
outsl
mov
add
sbb
aaa
add
faddl
in
mov
mov
sub
sub
test
leave
push
imul
sub
fsubs
inc
mov
sbb
sub
loopne
dec
cmpsl
sub
mov
fisttpll
and
or
pushf
inc
inc
iret
lea
repnz
add
push
mov
je
dec
lds
addb
lcall
jle
out
pop
inc
and
scas
dec
repz
cmp
inc
fistps
jmp
ret
les
bnd
inc
push
pop
in
fcmove
movsb
inc
adc
dec
clc
or
dec
inc
loopne
dec
mov
fnstenv
mulb
and
adc
sbb
mov
add
adc
add
andb
enter
jns
inc
mov
adc
scas
sbb
lds
in
xor
xchg
jg
cmp
jl
ss
xchg
les
nop
subl
cmpl
ret
push
mov
jge
inc
sbb
pop
jmp
test
stc
lret
int3
cmp
outsb
or
cmp
cwtl
sbb
and
popf
aaa
stos
jecxz
fnstsw
lcall
repz
pop
sti
in
loop
xchg
jecxz
lcall
decl
leave
xor
in
cmp
or
movsb
das
jge
orl
outsb
movl
pop
mov
enter
enter
push
sub
js
xor
xor
sub
mulb
mov
fildll
jg
dec
add
popf
das
jns
fwait
imul
inc
sarl
mov
scas
inc
jae
jmp
loop
or
lea
mov
out
mov
xor
orb
jo
faddp
cmpsb
xor
pusha
out
mov
and
in
mov
into
lds
jnp
mov
out
sub
fwait
sbb
mov
loopne
adc
sarb
lods
call
sbb
inc
fsubr
mov
xchg
mov
psrlq
imul
pop
mov
adc
sbb
cs
pop
sarb
add
push
shrb
add
lea
xchg
sbbb
xlat
shl
xorl
xchg
fst
adc
adc
adc
cld
jae
inc
cltd
adc
pop
loopne
mov
xor
lods
aad
push
push
add
nop
lea
int3
cmp
ret
lods
pop
sub
push
test
lcall
xchg
mov
fidivs
je
add
jp
push
movsb
ss
lods
ss
fnclex
push
das
not
pop
push
dec
mov
sub
push
and
add
mov
repz
mov
pop
addr16
in
out
outsl
push
cltd
dec
into
aad
sbb
outsl
aaa
cmp
pop
and
xchg
andl
popf
or
testb
test
and
sub
pop
push
pushf
jge
in
jno
scas
wbinvd
mov
adc
push
push
lock
dec
test
push
sti
outsl
aas
adc
and
push
sub
jmp
hlt
push
movl
repnz
mov
pop
div
and
shll
pop
push
out
cmpsb
inc
daa
xchg
xchg
and
popf
and
and
add
lcall
mov
sub
enter
aad
xchg
clc
jl
scas
mov
or
leave
mov
sbb
decb
inc
sub
icebp
cmp
mov
or
mov
sub
jl
fnstcw
inc
out
mov
lahf
mov
ror
es
sub
adc
inc
push
sub
sbb
jb
cmpsb
mov
push
fnstenv
mov
xor
icebp
fs
add
pop
cmc
pop
push
stc
fidivrs
jae
scas
jne
sbb
bound
lret
jae
cmpsb
cmpsb
lahf
imul
inc
pop
mov
pop
push
icebp
ss
lret
outsb
aam
das
lock
loopne
or
add
popf
mov
daa
lcall
jne
movsl
shll
dec
pop
ds
loope
sarl
jne
fistps
shll
push
stc
leave
inc
xorb
mov
push
adc
inc
cld
inc
dec
lods
push
xor
dec
jnp
popf
ja
mov
lods
mov
sub
hlt
xor
frstor
ja
shlb
push
arpl
cs
add
jmp
sub
dec
mov
inc
pop
in
pushf
push
xchg
pop
push
int
cmp
lock
pusha
jg
bound
leave
lds
xor
mov
cmpsb
jbe
xchg
fcompl
xchg
repnz
stc
mov
pop
xchg
iret
pusha
inc
mov
or
add
in
test
aad
add
add
dec
sbb
mov
lea
dec
jmp
mov
mov
bound
mov
ss
aad
out
add
test
and
and
adc
add
mov
sub
mov
dec
stc
int3
psubsw
cmp
lret
cmp
jbe
or
add
xchg
dec
dec
pop
popf
sbb
jbe
push
dec
jne
popf
imul
pop
pop
xor
mov
or
jge
repz
aas
testb
push
jbe
jb
out
stos
and
std
leave
stc
cwtl
idivb
pop
inc
test
cmp
cli
add
mov
sahf
lret
pop
adc
dec
sbb
and
mov
mov
sbb
mov
sub
pop
add
xor
lret
popa
pop
xchg
jbe
frstor
and
out
cmp
pop
and
xchg
and
fisttpll
inc
pop
stc
xchg
ljmp
stos
xchg
sub
fstpl
pop
jge
push
or
cmpsb
push
sub
xor
pop
std
and
or
test
movsl
or
mov
addr16
xchg
scas
push
xchg
mov
add
or
cli
loope
pusha
jmp
pop
mov
lret
lods
stos
jbe
fnsave
and
or
jns
scas
cld
into
push
or
mov
xchg
scas
or
pop
test
add
jne
xchg
nop
jmp
push
rcrl
xchg
mov
push
mov
sub
pop
xor
sti
outsb
mov
lret
add
xchg
pop
and
push
fsubrs
les
sub
in
push
dec
sub
repnz
cmp
or
fwait
sub
pop
mov
xor
push
pop
pop
fsubs
sub
sub
out
lods
sub
dec
add
pop
lret
das
push
mov
pop
push
sti
mov
and
mov
xor
shrl
xchg
lcall
jo
pop
call
and
leave
in
mov
pop
pop
cli
push
rcl
xchg
out
push
fs
inc
fidivl
or
lahf
sub
xchg
sbb
push
sub
dec
daa
xor
add
lret
xchg
pop
cmpl
cltd
push
and
icebp
mov
pushf
lret
out
jae
pop
adc
scas
adc
ja
out
in
call
inc
jle
gs
cmp
add
cs
xor
mov
fdivl
xor
push
inc
pop
add
xchg
dec
popa
or
sbb
js
insl
or
mov
rcrb
jmp
cmp
jl
lcall
das
pop
popf
addl
imul
out
stos
fwait
arpl
xchg
into
incb
mov
mov
into
mov
mov
sti
sahf
cli
sbb
jb
fdivr
cmp
xchg
sub
stos
out
cmpl
and
adc
movsl
mov
daa
cmpsl
movsb
movsl
aam
je
mov
out
imul
or
mov
sbb
aaa
inc
push
rorb
adc
test
cmp
jge
ss
test
inc
mov
test
mov
sub
and
cmpsb
bound
and
mov
scas
xchg
pop
repnz
divb
insl
sar
int3
mov
repz
sti
pop
mov
sbb
add
ja
mov
jo
out
mov
shll
and
dec
mov
aad
movsb
jle
fwait
movsb
xor
adc
inc
pop
out
andnps
dec
mov
xchg
add
xchg
mov
rcll
jb
xor
fwait
mov
cli
cmp
adc
add
data16
mov
mov
ljmp
das
aam
cmpsb
lock
sub
test
xchg
add
or
dec
xlat
daa
int
pop
xor
adc
mov
scas
mov
into
sahf
lret
inc
push
push
bound
xchg
dec
or
push
sbb
mov
adc
arpl
outsl
mov
gs
mov
mov
mov
adc
cmc
add
pop
in
add
clc
jbe
je
sbbb
sbb
and
sbb
xchg
sub
jnp
ljmp
dec
dec
mov
arpl
fisttpll
cmpsb
sbb
fs
inc
pop
sbb
or
fadds
cmpsl
mov
nop
pop
aad
test
leave
icebp
mov
repnz
movsl
je
or
call
out
lds
xchg
adc
gs
dec
mov
jge
lods
ficompl
dec
mov
stos
lods
cmp
pop
sbb
stc
lret
inc
or
std
sahf
iret
loop
push
sbb
or
hlt
mov
mov
in
sub
mov
xchg
lret
fsts
inc
fs
push
or
movd
into
mov
push
mov
mov
repz
mov
test
shl
fnstenv
sub
sub
xchg
xor
fldcw
push
and
mov
xor
fdivrs
add
js,pt
add
pop
gs
push
dec
xor
bound
ss
stos
scas
out
std
xchg
incb
cmc
ja
es
pop
outsb
or
pop
mov
dec
stos
and
jae
fcmovnb
dec
mov
leave
ds
lea
xor
xchg
cmp
pop
mov
jg
addl
jge
sahf
loop
mov
xlat
and
push
dec
pusha
sub
lcall
mov
jbe
mov
daa
adc
loope
mov
ret
cli
jmp
sbb
xor
data16
insl
mov
out
loope
cmp
stc
cmp
lahf
ret
xchg
mov
jbe
jmp
push
loopne
adc
lahf
dec
add
adc
fbstp
cmc
inc
xchg
pop
sub
adc
adc
rcl
add
scas
into
fisttpl
das
dec
decl
adc
add
push
cmpsb
out
jae
rol
jecxz
push
cltd
mov
sbb
pop
outsl
mov
lret
jns
popf
fcoml
shl
mov
paddq
mov
sarl
loop
shrb
xor
or
dec
inc
add
add
dec
rclb
cmc
je
push
jle
jnp
jmp
cmp
pusha
sub
scas
nop
aad
dec
xor
cmp
lcall
fistps
xor
notb
jecxz
add
shrl
jmp
and
adc
sbb
lods
sbb
mov
rorb
ss
fisttpll
inc
jo
and
xchg
jg
leave
ficoml
mov
rcll
xchg
xchg
mov
mov
aaa
cltd
je
fdivp
sarl
xchg
xor
lcall
das
lods
push
scas
mov
cmp
mov
pop
jle
jns
cwtl
mov
out
fwait
mov
lods
and
das
lret
and
dec
mov
xor
outsl
pop
pop
pop
xchg
jecxz
cli
sub
xchg
jp
and
mov
push
push
in
pop
add
dec
shlb
nop
inc
std
add
pop
sbb
aam
fsts
inc
or
popa
stos
and
jb
and
add
sub
das
test
xchg
push
mov
mov
cli
ret
xchg
xchg
leave
pop
push
aas
fists
push
mov
dec
jecxz
inc
sbb
mov
in
pop
jb
xchg
out
test
and
out
in
sbb
and
inc
pop
ror
jb
mov
test
out
in
hlt
xchg
mov
gs
or
mov
mov
dec
jg
mov
mov
negb
lea
imul
test
inc
mov
outsl
sub
fs
push
jb
lcall
fldenv
popf
or
lret
aad
sub
push
andb
ret
mov
mov
mov
or
mov
xchg
fwait
es
lea
je
pop
out
dec
mov
in
repnz
insl
mov
int
mov
sbb
xchg
lods
cld
rcll
dec
jge
jge
jns
pushf
dec
stc
inc
adc
int
loope
mov
add
outsl
and
sub
fscale
inc
or
inc
int
leave
mov
cld
mov
mov
adcb
mov
jae
rcrb
orb
and
scas
pop
int3
and
sub
cmp
xor
jnp
jmp
xor
push
or
cmp
sbb
cmovae
lds
nop
aad
and
scas
fmuls
fbstp
or
jo
sbb
rol
sbb
dec
sar
jo
inc
jo
iret
xor
outsl
dec
out
push
sbb
push
mov
add
fisubs
mov
push
outsl
mov
lahf
add
repnz
pop
push
and
or
or
dec
aas
cmpsb
mov
ss
loopne
adc
mov
lcall
lret
addr16
loope
push
lock
adc
shl
hlt
aam
and
es
xor
sub
psrlq
pop
sub
push
das
int3
mov
dec
daa
addr16
test
sahf
bound
xor
push
das
xor
pop
sbb
icebp
sub
pop
xchg
sbb
pop
mov
repnz
ljmp
jb
pop
dec
lcall
push
adc
stos
jg
incl
mov
pop
xchg
outsl
cwtl
inc
adc
jo
pop
arpl
rcrb
push
mov
xor
int
sbb
pop
sub
aad
add
pop
and
lahf
aas
shll
shll
popa
imul
iret
sbb
outsb
dec
mov
shl
es
and
je
jge
mov
mov
sub
pop
pop
cli
in
notl
inc
cli
inc
std
cmpsl
hlt
pop
cltd
fs
int3
orl
xorb
dec
cmp
adc
sbb
sub
pop
cmpsl
hlt
cmp
addr16
mov
sbb
in
jnp
dec
outsl
lahf
stos
in
mov
or
mov
dec
test
or
add
test
in
cmpb
adc
ret
mov
popf
xchg
cs
and
dec
scas
mov
add
add
jns
xor
imul
adc
xchg
pop
pop
jle
pop
insb
xchg
ds
orb
loop
fwait
cmp
pop
push
fsts
fldt
rorl
mov
xor
cmpsw
push
or
ljmp
pop
mov
rcr
mov
stc
inc
imul
xor
jb
xor
mov
adc
inc
jmp
or
xchg
cmp
sahf
cmc
mov
pop
pusha
pop
pop
inc
push
pop
stos
lea
sub
lea
mov
in
es
notb
das
jl
mov
mov
iret
sti
inc
adc
pop
loopne
lods
pop
xchg
or
shll
div
push
jne
mov
dec
punpckhwd
clc
movsb
jne
xorl
fwait
dec
das
ret
add
push
or
das
jb
mov
inc
orl
push
mov
int
cld
bound
leave
push
scas
xchg
add
sub
stc
insb
inc
sub
icebp
loop
int3
jns
dec
movsl
mov
addr16
sbb
aas
jge
xor
icebp
pop
sti
sub
or
loopne
fisttpll
pop
sub
shlb
pop
test
add
das
out
rcrb
test
and
mov
leave
sti
jle
mov
mov
inc
or
push
mov
test
sbb
mov
int
cmc
aad
mov
jo
js
test
jge
sbb
std
fldcw
inc
pusha
pop
inc
and
adc
icebp
and
sarb
scas
adc
movsl
fnsave
sbb
jns
push
dec
add
lret
icebp
jge
scas
sahf
sbb
imul
aas
jnp
pop
xchg
out
cli
addr16
mov
add
sbb
jnp
jns
lods
aas
js
add
lods
lods
fabs
stos
jmp
hlt
cmc
fisubrs
dec
sbb
data16
mov
and
stos
and
or
dec
ds
ljmp
iret
popa
xlat
inc
hlt
sbb
test
into
lahf
dec
xchg
orb
xchg
out
push
xor
ss
xor
lret
jns
aad
push
iret
adc
std
mov
jmp
icebp
clc
push
sub
fs
adc
shrb
sbb
dec
int3
mov
aaa
inc
cwtl
sbb
pop
mov
lcall
cmp
scas
sub
shrb
sub
ret
lock
ss
cwtl
movsb
sahf
xchg
in
call
ficomps
leave
fadds
out
call
adc
mov
jle
testb
jp
popa
push
aam
sarb
aas
and
test
and
pop
loope
vcvttpd2dq
addb
adc
mov
mov
jno
mov
dec
cltd
push
mov
mov
fiadds
pop
rcll
cmp
imul
push
mov
lea
mov
mov
or
inc
aas
dec
pop
sbb
sbb
xchg
sub
rolb
add
mov
mov
loop
add
mov
stc
and
test
or
pop
ja
scas
inc
mov
lods
adc
push
xchg
xchg
jge
or
and
out
les
add
aad
inc
and
iret
test
jo
stos
dec
xchg
push
push
mov
stc
push
mov
ja
loope
xchg
int3
pop
ds
inc
test
aaa
test
sbb
or
pop
inc
sbb
push
dec
rcrl
cmp
cmp
lcall
mov
sub
inc
adc
cli
xchg
ss
push
mov
cltd
inc
loopne
push
mov
xor
sbb
cli
jp
aas
mov
cltd
cmp
daa
jmp
mov
clc
mov
aam
lahf
sarb
aam
jno
dec
outsb
jmp
lret
iret
fimuls
insb
lds
dec
jl
ljmp
dec
fs
jb
mov
lock
add
lock
add
test
push
pop
fadds
aam
ljmp
mov
inc
add
xor
cmp
dec
xchg
push
pusha
int
mov
cmp
leave
ljmp
in
test
insb
jmp
in
push
inc
icebp
pop
jo
scas
cmp
fs
mov
xor
add
adc
push
xchg
mov
mov
out
test
std
jo
shll
jno
cmp
fstps
cmp
adc
mov
or
pop
add
sub
outsl
sbb
mov
lret
loop
mov
mov
ds
xor
shrl
mov
mov
sti
adc
movsb
sub
test
push
mov
or
insl
ss
cli
mov
adc
cmp
mov
sbb
pop
xchg
adc
je
add
or
adc
into
push
lods
fcmovne
iret
repnz
mov
sub
sahf
adc
pusha
inc
add
dec
push
jmp
xchg
addr16
xchg
and
daa
pop
enter
mov
push
in
sbb
cld
nop
jo
and
mov
mov
cltd
popf
jbe
cld
mov
pop
pop
outsb
sbb
xchg
jl
fcomi
and
jle
mov
movsb
lods
sahf
push
ret
pop
fmul
pop
and
adc
mov
xlat
std
pop
fadd
jecxz
xchg
and
testb
sbb
push
pop
mov
cltd
jb
and
pop
pushw
and
sahf
adc
fldt
push
aad
push
loopne
mov
mov
mov
adc
push
rcll
mov
xchg
rorl
lds
xchg
aam
pushf
xchg
and
mov
mov
fstl
popa
fcmovne
aad
mov
mov
fcoms
js
sbb
ret
orl
js
cld
jg
jne
sar
and
pop
sar
adc
pop
jl
mov
pop
sbb
hlt
adc
out
and
outsl
jmp
jp
add
mov
mov
in
cmc
sub
iret
fldl
jl
inc
pcmpgtb
jp
cmp
mov
push
push
adc
outsl
mov
cwtl
enter
adc
jg
fwait
iret
imul
and
sub
sbb
jp
mov
lds
mov
aad
or
movsb
fstps
adc
dec
pop
imul
and
ljmp
or
lods
ja
imul
lea
cmpsl
pop
fsubl
cwtl
inc
ljmp
pop
jb
add
mov
pop
mov
xchg
sub
xor
pop
fmuls
push
cltd
call
xchg
xor
xchg
int
inc
dec
sbb
int
push
dec
pop
push
pop
sub
pop
lods
test
mov
sbb
fdivl
icebp
push
push
adc
int3
movsl
je
sbb
out
aad
adc
les
pop
jno
leave
dec
jmp
xor
adc
pop
movsl
inc
sub
cmpb
in
sbb
adc
dec
pop
jp
shrb
xchg
imul
or
add
pop
pushf
or
test
cmp
xor
dec
lea
xchg
push
inc
loop
ss
inc
sbb
adc
adc
sub
mov
lock
pop
jmp
push
lods
push
dec
lcall
stos
push
insb
cmp
adc
adc
out
and
sub
mov
fiadds
gs
and
aas
fidivl
sub
pop
out
add
rcl
das
mov
fistpl
test
cmpsb
mov
jg
xchg
outsb
dec
add
mov
dec
je
xchg
adc
mov
pop
or
in
jg
push
inc
sbb
mov
mov
sahf
dec
clc
ja
aad
leave
ds
xchg
test
pop
dec
mov
push
stos
mov
push
push
push
mov
shrb
xchg
out
add
pop
xor
pusha
inc
pop
adc
call
xor
push
or
testb
aam
jno
dec
push
mov
sbb
and
mov
out
scas
pop
arpl
mov
out
pop
jecxz
ljmp
loope
stc
xchg
or
cmpb
jge
insl
stc
push
xor
lods
fdivr
mov
pusha
shll
fs
je
pusha
adc
cld
sub
cmp
ja
jno
jmp
push
lds
dec
push
add
and
rolb
out
push
ja
pmulhw
std
xchg
cmpsb
rorb
jmp
sub
xchg
add
xchg
or
std
outsb
insb
adc
xor
push
sahf
ds
movsb
cmp
bound
add
data16
leave
loop
and
xchg
fsubr
sbb
push
mov
adc
hlt
pushf
inc
call
mov
pop
into
jp
dec
lcall
in
imul
mov
outsb
shll
cltd
fnstsw
lods
mov
xlat
adc
ss
xlat
sbb
ret
mov
in
das
lods
std
test
mov
pop
dec
insl
aam
sbb
cmp
dec
hlt
xlat
bsr
cmpsl
push
shlb
sti
mov
out
push
push
or
gs
mov
push
lahf
sbb
mov
stos
mov
andl
push
jns
mov
aam
movsb
ret
pushf
sbb
jno
sbb
ds
inc
stc
aam
test
mov
insb
out
jp
orb
mov
mov
pop
inc
cmp
int
enter
pop
mov
dec
test
cmp
int3
push
jp
imul
outsl
sti
jmp
push
xor
sub
adc
mov
cmpsl
adc
mov
sub
shlb
cmp
stos
adc
insb
data16
and
pop
mov
fs
into
pop
push
pop
hlt
jo
out
sbb
cmp
addr16
cwtl
ret
pop
adc
push
push
movsl
aaa
cs
jp
sbb
nop
mov
cmpsl
sbb
lcall
test
andb
stos
jnp
mov
ja
ror
dec
call
ret
mov
loope
push
dec
mov
or
push
cmp
mov
jmp
aaa
dec
cwtl
addl
cs
mov
leave
lahf
popa
lods
std
stos
icebp
fs
outsb
xchg
or
rcr
fnsave
nop
ss
add
push
gs
std
enter
insb
rcrw
enter
js
push
sbb
subb
cmp
jnp
inc
lret
jnp
data16
jne
jnp
lret
push
mov
fidivrl
dec
sbb
loope
add
push
lcall
dec
add
add
add
or
outsl
adc
stos
push
test
cmp
test
in
xchg
test
out
femms
fsubl
add
call
sbb
and
mov
xchg
cmpsb
mov
add
stos
mov
js
clc
loop
and
jg
lcall
ret
jg
add
add
cmp
loopne
arpl
mov
addr16
lcall
cmpl
int3
fbstp
jge
out
loopne
movsl
mov
rorb
pop
pop
in
pop
jle
in
inc
push
movsl
fnstsw
hlt
outsl
mov
mov
mov
rol
in
negb
cld
jnp
stos
mov
adcb
mov
lahf
push
lret
cmpsb
sub
aaa
push
add
inc
aaa
jge
mov
and
mov
sub
inc
leave
dec
outsb
out
data16
out
sahf
lcall
lods
int3
imul
sub
outsb
adc
nop
das
stos
loopne
cmc
add
rcll
dec
dec
cmp
mov
jo
cwtl
andb
mov
sbb
lea
push
iret
add
test
xor
scas
xor
cmp
mov
mov
sti
pop
sub
inc
push
push
dec
cmp
mov
ret
cmp
cmpsb
or
outsb
aam
aam
adc
popa
mov
out
xor
sbb
fisubl
inc
bound
hlt
test
jo
jp
adcb
shlb
ficoml
pushf
mov
ja
cld
pop
out
jb
xor
ljmp
outsl
pop
mov
arpl
or
jg
sub
cli
loope
out
ja
push
movsl
xchg
mov
lods
pop
mov
pop
mov
sub
dec
and
lods
sub
xor
adc
jae
jne
or
iret
mov
push
jbe
mov
jne
mov
leave
and
sub
inc
xor
movsl
add
iret
dec
lods
fisubrs
jb
addb
sub
in
movsl
mov
outsl
mov
ja
mov
mov
aaa
or
xchg
pushf
add
ss
or
dec
mov
fs
ret
leave
scas
and
fcompl
and
sbb
ljmp
std
test
push
or
popf
pop
fldcw
or
loope
xchg
fcom
lret
inc
sbb
push
sbb
dec
mov
push
fnstsw
mov
sbb
jno
cmpsl
jp
jnp
fisubrl
out
repz
mov
mov
mov
inc
fs
in
lock
jmp
fisubs
jne
es
adcl
ret
jnp
mov
add
push
push
xor
pushf
mov
push
inc
pop
or
cmp
stos
pop
dec
lret
push
push
push
stc
in
push
xorb
sub
orb
fists
insb
push
js
cmp
inc
pop
push
dec
lds
pop
hlt
or
rorl
rorl
addl
xlat
ds
fstps
lds
push
dec
bound
ja
movsb
fnstsw
test
cmp
adc
hlt
jl
call
adc
call
ljmp
xchg
inc
sub
fstps
cmp
mov
push
ja
jae
inc
push
sbb
pop
fistpl
inc
insb
push
lret
add
loopne
adc
jge
icebp
cs
out
jns
push
mov
das
fs
div
and
xchg
enter
jp
cmpsb
aaa
insb
xor
cmp
cmp
sbb
sbb
xor
mov
ss
mov
adc
sti
int
shl
jno
insl
xor
cs
cwtl
in
and
adc
inc
add
call
insb
test
cmp
loop
mov
fimull
das
cmc
dec
stc
repnz
ficoml
mov
pop
mov
leave
das
mov
sbb
sti
loopne
iret
push
mov
jp
std
dec
adc
cwtl
shll
test
xchg
xor
xor
add
mov
into
pop
std
mov
jb
and
jbe
pop
push
shll
out
mov
repnz
sbb
mov
clc
xchg
mov
std
jp
stc
inc
mov
sub
push
fldcw
sbb
or
rclb
in
sbb
movsb
add
adc
int3
add
sub
pop
jp
stos
mov
mov
ja
lret
std
lods
clc
sbb
ss
inc
daa
sti
push
addr16
rcrb
sub
inc
test
push
ljmp
push
popa
sahf
jp
popa
lock
and
jb
jb
mov
push
jl
or
jns
hlt
dec
leave
orl
out
dec
push
inc
stos
mov
ret
fadds
scas
inc
aaa
mov
push
xchg
out
push
inc
sub
mov
sahf
jne
aam
and
and
test
push
in
or
xchg
das
cmc
repz
xchg
sbb
jle
pop
arpl
add
int
and
ljmp
inc
mov
dec
js
sub
adc
xchg
imul
xor
ret
pop
sbb
mov
pop
out
xchg
in
out
jp
aaa
loop
stos
mov
dec
dec
mov
in
pop
pop
inc
xor
push
adc
sub
mov
add
adc
or
and
and
lods
fs
in
insl
push
push
out
or
out
aaa
fst
mov
xchg
cmp
inc
cmp
cmp
dec
test
adc
ret
mov
mov
cmpsb
les
int3
or
dec
ror
test
out
mov
jle
jns
adcb
fwait
popa
popf
push
jle
xlat
cwtl
xchg
mov
dec
rolb
mov
or
sbb
pushf
scas
adcl
cs
mov
sbb
mov
mov
mov
adc
jl
push
jns
adc
sub
jle
pop
fbstp
fistps
push
xlat
leave
test
push
pusha
mov
inc
push
cwtl
inc
jns
icebp
xor
pop
jns
push
cli
push
mov
or
dec
xor
sub
cmpsl
pop
mov
andb
in
jbe
das
dec
cmp
dec
pop
or
pop
or
and
out
push
jp
inc
jbe
mov
jae
xor
imul
push
and
ja
scas
fbstp
popa
rorb
lret
or
and
sub
push
inc
insl
leave
outsl
out
movsl
mov
aad
mov
xlat
or
pop
sbb
sbb
ja
push
lret
add
ja
int3
ss
cmpsl
outsl
loope
add
or
test
into
mov
and
jne
lcall
es
sbb
icebp
or
fstps
pop
dec
repnz
ljmp
xchg
rcll
or
mov
dec
xchg
mov
ret
aam
stc
ljmp
jbe
sar
mov
sarl
sub
adc
jmp
in
xlat
or
gs
jl
mov
xor
inc
nop
and
or
push
mov
inc
and
cltd
adc
xchg
and
es
mov
movsl
cmp
or
mov
subb
sbb
dec
xor
rcl
rcrb
rcll
daa
inc
jns
hlt
and
fwait
lods
rclb
hlt
and
sahf
mov
mov
mov
movsl
add
jne
lock
idivl
jge
adc
outsl
push
mov
lret
bound
out
test
out
ror
mov
adc
pushf
int
push
jge
pop
cmp
hlt
dec
sbb
inc
cli
fiadds
add
test
cltd
or
jo
pushf
jbe
push
out
push
mov
sbb
jge
jecxz
movsl
jmp
ja
and
adc
leave
mov
cmpsl
sbb
mov
lcall
rorb
dec
mov
shr
xchg
out
cli
jl
pop
int
loop
jmp
cmp
lahf
fs
xlat
out
iret
subb
or
insb
rorb
ds
dec
jne
sub
or
push
or
mov
imul
pushf
in
fs
pop
jo
or
pop
push
jnp
push
sub
enter
jo
sbb
cmpsl
lret
sub
ljmp
mov
push
jne
push
mov
add
sub
jne
in
mov
pop
add
sub
cmp
sarb
jnp
or
jg
pop
and
push
sub
cmp
push
mov
push
mov
enter
fs
and
push
inc
dec
xor
adc
test
xchg
xorb
xchg
push
call
nop
mov
inc
push
and
and
das
fsubrs
mov
shrb
std
jg
ja
call
dec
pop
stos
inc
hlt
scas
jg
outsl
pop
aas
cld
cmpsl
push
pop
in
popa
and
jge
mov
daa
jne
xchg
or
ds
xchg
lds
jns
or
repz
mov
add
aaa
jle
cmc
jge
dec
fwait
int3
pop
test
cmp
test
lahf
xchg
and
imul
and
hlt
xchg
xchg
pushf
mov
ja
jmp
push
ficomps
cmpsl
sbb
dec
dec
jg
mov
ds
cmc
int3
pop
inc
inc
aaa
aad
ficomps
test
rorl
push
dec
xchg
mov
out
xchg
xor
pop
rol
outsl
fsubp
xchg
mov
popf
xchg
mov
sub
jl
movsl
je
mov
daa
or
loope
js
mov
and
les
out
in
pop
cltd
sti
push
cld
adc
rorl
rcrl
movsb
sub
or
dec
push
popa
cmpsb
movl
push
mov
jns
jae
call
es
inc
loopne
mov
call
mul
jbe
push
xorl
mov
sub
ja
divl
sub
cmp
sub
add
pop
mov
out
mov
sti
stos
adc
das
mov
lds
inc
adc
fcoml
rorl
leave
or
xchg
lds
daa
push
sti
adc
xor
jbe
jno
and
loop
scas
sub
lcall
mov
or
and
or
and
mov
sub
jecxz
jne
arpl
mov
ret
xchg
je
inc
pop
mov
lcall
sub
sub
push
mov
mov
jo
inc
cmp
pop
dec
cli
xchg
insl
jmp
nop
cmc
shrl
out
out
les
clc
pop
adcb
mov
sbb
arpl
mov
or
flds
imul
les
loope
sbb
push
pop
test
repnz
ss
adc
sahf
bnd
xchg
leave
int3
out
jmp
mov
add
cmc
mov
xchg
aaa
sbb
and
insl
ret
sbb
mov
adc
add
push
repz
push
xor
xchg
jns
stos
ds
or
cmp
jne
mov
les
or
cs
jo
mov
lock
lcall
nop
inc
inc
sbb
sub
push
pop
iret
mov
ljmp
jb
outsb
insl
cmpsl
mov
adc
xor
mov
xchg
inc
sub
cmp
adc
mov
mov
jb
mov
lahf
sub
int
pop
mov
mov
or
imul
mov
jl
push
inc
imul
sbb
dec
fwait
or
xor
and
pop
xor
push
fucomip
pop
aam
cwtl
and
test
inc
xor
sbb
jp
push
xchg
insl
andb
movl
pop
and
std
mov
in
pop
adc
paddw
mov
shrb
add
and
fcompl
testb
inc
test
nop
test
stc
test
push
jbe
xchg
dec
aad
test
and
aaa
xor
xlat
ror
fldcw
call
jne
xchg
cwtl
xchg
fsubl
push
dec
adc
dec
jbe
daa
fwait
mov
push
out
mov
nop
pop
iret
bound
aam
je
mov
outsb
mov
push
lock
mov
jg
int3
in
inc
stos
jne
mov
pop
cmp
dec
fidivl
outsb
pusha
pop
xor
into
cmp
clc
xchg
sub
ljmp
fs
sbb
sub
push
mov
sub
jg
cmp
pcmpgtd
push
and
fdivrl
je
iret
je
pop
mov
add
cmp
ret
repz
movl
insl
mov
and
es
jl
push
cmp
incb
push
mov
pop
or
mov
daa
mov
fcomps
adc
stc
out
mov
mov
test
dec
inc
push
add
and
movsl
mov
lea
mov
repnz
rsqrtps
inc
xchg
leave
pop
mov
insb
in
sub
push
in
cmp
int
and
int3
mov
pop
inc
insb
insl
mov
pop
push
push
mov
inc
mov
and
scas
inc
or
mov
pop
sub
popf
push
mov
pop
mov
mov
and
cmp
cmc
pop
mov
imul
xchg
pusha
fwait
loop
xlat
in
movsb
pop
mov
jle
scas
xchg
mov
dec
mov
mov
cmpb
add
xchg
dec
loop
cld
cmp
add
repz
add
sub
push
fistl
jecxz
xchg
push
and
pop
add
jnp,pn
lods
sub
fbld
in
add
cmp
repnz
cmp
xchg
fwait
mov
jns
adc
pop
xor
push
or
stc
and
test
dec
jmp
es
adc
mov
and
sbb
jne
xor
push
mov
dec
dec
push
xor
mov
ja
xor
adc
xor
aad
leave
or
add
mov
repz
xor
je
es
sti
cwtl
subl
adc
mov
scas
or
dec
int3
test
push
into
imul
adc
pushf
and
je
addr16
push
sbb
cmp
fcomps
je
fildll
mov
sti
je
jnp
out
xchg
or
mov
std
mov
fcoml
sbb
ljmp
je
daa
imul
push
mov
movsl
aad
xor
adc
roll
push
fsubs
sub
or
xchg
dec
pop
mov
or
sbb
xor
inc
xchg
push
in
sub
cltd
dec
adc
out
jg
pop
fisubrs
mov
xlat
outsb
or
shr
xor
int
mov
aam
out
mov
xchg
inc
or
in
pop
jns
setge
int
dec
mov
push
xchg
jl
inc
jp
movsl
and
movsl
pop
test
and
repz
jae
push
cld
mov
mov
cmpl
sub
inc
fadds
mov
pop
dec
rorb
mov
pop
xlat
fistps
stc
shrl
scas
sub
jb
popf
lcall
das
scas
popf
pop
mov
or
fwait
jns
cltd
pop
and
push
dec
sub
pop
or
xchg
ljmp
push
pop
jg
test
push
stos
in
cmp
jns
push
stos
pop
clc
popl
xchg
jg
cmp
push
cs
jo
mov
inc
push
shrb
mov
in
pop
aam
hlt
push
push
adc
sub
shll
movsb
cltd
adc
mov
pop
aam
inc
ss
sti
cmpsb
xlat
leave
mov
fwait
xchg
rorb
out
f2xm1
inc
insb
xchg
xor
int
pop
inc
repz
adc
jmp
fisubl
leave
lret
mov
orl
lcall
sub
into
scas
mov
pop
sahf
and
sub
in
fcoms
clc
mov
xor
pushf
fisubrl
or
insl
push
push
es
int
das
mov
notl
inc
xchg
lret
out
xchg
imul
push
movsl
dec
loope
dec
addr16
incb
dec
xchg
enter
les
or
jmp
jo
jnp
rcr
ret
cld
subl
ss
pop
idivl
xchg
shll
std
sub
and
pop
mov
push
mov
jno
xchg
icebp
sub
cli
cs
addr16
mov
push
mov
mov
sahf
adc
and
push
push
movsb
inc
mov
pop
popf
adcl
cmpb
out
sbb
xchg
jl
shr
js
in
ja
mov
and
insl
negl
jno
adc
mov
sub
mov
jae
fadds
ljmp
and
pop
pusha
mov
jmp
mov
inc
mov
or
cmp
hlt
sbb
aas
ret
cmpsb
sbb
jno
xchg
mov
rcrl
incb
fists
addb
push
test
insb
out
outsb
jnp
jle
push
xchg
or
mov
xchg
pushf
jle
sbb
pop
fistl
lock
or
jns
repz
ret
or
outsl
push
or
add
dec
xchg
jmp
sub
push
mov
mov
mov
cmc
sarl
cmp
adc
sbb
pop
xor
sub
lcall
scas
adc
out
add
or
xchg
fldt
sbb
les
cmp
sbb
pop
push
sbb
inc
lahf
aam
fmull
xchg
les
dec
cvtps2pi
call
push
jne
dec
and
ss
arpl
xlat
lret
pop
imul
sarl
cmp
mov
pop
lods
jnp
add
inc
iret
or
stc
arpl
xchg
sbb
outsb
sub
and
jbe
jmp
cmp
insb
mov
fldenv
jmp
ds
test
pop
clc
cmp
lds
jbe
jmp
in
ljmp
mov
aad
add
add
lea
xchg
pop
fwait
out
xchg
fdivrp
jge,pt
jno
outsb
jp
fsubs
ljmp
mov
dec
mov
fsts
push
insl
test
es
cli
pop
mov
leave
mov
rcrb
xchg
sbb
inc
jle
lret
mov
mov
xchg
pop
vpackuswb
mov
mov
inc
or
sub
icebp
dec
scas
pop
cmp
cmc
and
shll
fwait
push
hlt
inc
push
repz
push
pop
fmul
sbb
into
insb
sahf
xor
pop
test
xadd
clc
and
lahf
icebp
jg
lods
sub
daa
fidivrl
xor
out
jle
dec
ds
and
xchg
mov
hlt
inc
mov
mov
aaa
sub
ret
inc
mov
fidivrl
cmp
cmp
lea
js
inc
scas
rclb
loopne
and
shrb
pop
adc
int
out
push
xchg
pop
in
pop
pop
leave
push
mov
test
sub
push
ffree
aam
cmp
lods
add
xor
lock
outsb
mov
inc
mov
mov
jne
inc
or
ffree
mov
icebp
lods
pcmpeqb
inc
cmpsb
test
rorl
icebp
jg
pop
and
cwtl
mov
lcall
push
push
dec
sub
inc
fimull
imulb
fsub
cmpsb
xchg
sbb
pop
mov
xor
sub
out
xchg
cs
mov
sarb
insl
pop
ds
dec
adc
testl
sub
adc
and
mov
stc
popa
mov
push
dec
mov
sub
test
xchg
mov
mov
inc
nop
inc
in
xor
aaa
rcrl
cmpsl
jp
cwtl
sub
cmp
mov
xorb
popf
jo
cwtl
test
scas
cmpsb
stc
in
mov
or
xchg
cmpsb
xchg
decl
or
lock
popa
adc
pop
int
repnz
mov
pushf
push
ljmp
out
mov
push
jg
orb
inc
ljmp
stos
fchs
xor
lret
je
fsubr
sub
or
lods
mov
test
shl
in
xchg
bound
insb
pop
fwait
xor
mov
imul
scas
push
addr16
ljmp
rcl
and
fisubrl
int3
add
ficomps
xor
ficoms
std
enter
jge
leave
fwait
xor
notl
incb
inc
sahf
iret
jae
movsb
in
cmp
jae
sub
inc
xor
push
jge
in
stos
in
dec
jb
add
enter
dec
in
mov
lods
mov
push
out
cmc
mov
pop
xor
sarb
or
sbb
adc
dec
cmp
lods
out
mov
push
jnp
jge
adc
rolb
cmp
cwtl
loopne
cmc
fsubrl
and
mov
lods
push
in
in
push
lahf
lods
mov
pushf
mov
faddl
pop
sub
mov
call
or
push
mov
xchg
test
push
sbb
jne
xchg
xlat
imul
push
push
jbe
enter
mov
inc
mov
and
loope
ficoms
fistpl
aas
xchg
xor
cmovns
or
cltd
and
lcall
divl
int
lds
push
cmp
lahf
hlt
insb
pop
loop
sub
sti
sub
push
sbbl
movsb
sub
cmpsl
stc
push
aaa
lock
push
gs
mov
inc
inc
mov
inc
cmp
pop
push
cwtl
sub
pop
out
sbb
inc
int3
ja
mov
movsb
into
or
enter
xchg
xchg
arpl
sarb
nop
xchg
js
bound
and
out
adc
in
fcomip
cmpsl
rorb
xchg
pop
xchg
push
mov
sbb
push
lds
stos
shl
fldcw
repnz
inc
js
out
add
dec
push
jns
pop
test
or
mov
aam
aaa
mov
mov
fs
mov
xlat
in
push
and
jmp
push
sbb
push
repnz
xor
fldcw
daa
adc
add
xchg
push
jge
dec
cltd
cli
pushf
cmp
pushf
mov
mov
loop
and
push
pop
fldl
rcll
add
aas
cmp
mov
push
pusha
out
lret
jae
addl
dec
or
inc
dec
pop
add
mov
ret
pop
arpl
into
rcll
popf
mov
dec
xchg
sbb
dec
push
ss
shll
dec
push
in
into
ja
add
push
test
je
push
mull
or
not
push
jmp
or
or
xchg
mov
add
xchg
dec
test
mov
jno
in
cvtdq2ps
push
inc
xor
add
adcb
mov
nop
leave
xor
dec
ds
push
inc
mov
add
mov
aaa
leave
mov
pop
or
aam
push
jo
and
gs
hlt
add
mov
dec
adc
pop
in
jns
cwtl
push
dec
jg
aad
aaa
lret
mov
xchg
fwait
loop
pop
outsl
outsb
cli
sahf
xchg
jg
mov
fiadds
test
mov
int
jae
xchg
push
lahf
cli
xchg
and
push
in
dec
stc
lret
stos
adc
or
dec
xchg
popa
mov
in
js
push
shlb
dec
jae
js
mov
add
rorb
jns
test
rolb
les
add
sub
sbb
test
scas
fsubs
mov
repnz
push
fnstenv
das
stos
rcrb
cmp
mov
dec
add
dec
or
fs
mov
sti
adc
dec
jb
fcom
loop
sbb
inc
addr16
lea
lods
dec
sub
test
xlat
jg
in
mov
outsl
cmp
ja
or
dec
lret
in
test
sbb
push
lcall
clc
cli
and
fsubr
xchg
push
scas
daa
and
and
mov
outsb
add
mov
movsl
outsb
int
sbb
xlat
add
sbb
cld
jae
lds
mov
jbe
gs
dec
sub
test
add
mov
out
push
jbe
leave
add
cmpsb
lock
iret
push
iret
ja
movsb
pop
push
pop
or
leave
dec
or
orb
icebp
mov
testl
ja
pop
mov
mov
dec
stc
dec
and
cmp
adc
lds
add
sbb
mov
adc
sbb
je
cmp
int3
in
mov
jmp
inc
dec
test
inc
inc
jo
mov
mov
adc
jl
iret
jmp
lea
add
aad
mov
add
sahf
lret
mov
sarb
pop
lret
adc
jae
pusha
add
aam
ds
push
sbb
pop
jmp
push
outsl
orl
addr16
popf
sub
pop
jle
cs
and
out
bnd
ljmp
data16
inc
mov
call
mov
mov
lret
cltd
clc
mov
icebp
push
dec
shl
shrl
insl
lahf
mov
aad
pop
or
fstl
fmuls
mov
jge
lods
scas
sub
mov
orb
cmp
fcmovnu
ret
test
fst
xchg
out
imul
ja
lahf
sub
pushf
mov
mov
icebp
pop
adc
add
pop
mov
jle
dec
repz
xor
jmp
cmpsl
lret
lea
inc
push
or
cmp
mov
adc
scas
scas
int3
sub
faddl
jmp
cltd
insb
cmp
js
sub
pop
lahf
pop
movsb
lret
icebp
lea
sti
mov
mov
sub
je
xor
push
pop
nop
gs
pand
cli
cmp
sbb
popf
or
leave
popf
inc
or
aas
lods
xlat
sbb
mov
ljmp
jp
mov
cmp
inc
adc
pop
sbb
and
sbb
push
jnp
lods
sub
adc
fstp
aaa
shlb
jno
shrl
xchg
loopne
xor
fcmovne
jno
mov
sbb
aad
fsubrs
sub
jp
lahf
imul
push
jle
jns
dec
mov
cmpb
jp
fcomip
js
cmp
dec
push
jmp
gs
movsl
xchg
push
jno
mov
sub
push
xor
mov
adc
push
popf
out
mov
jnp
or
sbb
sub
mov
mov
mov
dec
pop
mov
cmp
mov
cmp
adc
cmp
shl
add
mov
pop
gs
adc
or
popf
repnz
insb
lret
adc
jle
data16
cwtl
roll
cmp
or
or
xchg
cmc
loopne
sahf
shlb
jae
pop
mov
loope
shlb
pop
dec
inc
out
lock
adc
mov
adc
jnp
out
mov
mov
mov
test
call
andl
lret
nop
inc
icebp
cld
iret
mov
push
jg
dec
xor
sbb
cmp
bound
leave
dec
or
mov
push
dec
fs
outsl
jle
pop
in
inc
ret
in
push
mov
rcll
andb
scas
lcall
adc
or
mov
int
ja
aas
push
sub
pop
imul
lcall
sar
inc
std
add
and
movsb
xor
icebp
fwait
or
mov
mov
popa
xchg
in
in
insl
adc
xor
mov
aas
movsl
jg
rorb
loope
shrb
sbb
mov
out
add
mov
out
mov
and
or
mov
and
sub
add
jp
popa
fadds
lods
sub
aam
mov
bound
xor
icebp
pop
and
aam
adc
iret
cmpsl
cmpsl
cmpsl
mov
ret
movl
nop
jge
ret
xchg
fldt
shlb
in
fs
subl
or
pushf
jecxz
stc
repnz
nop
push
adc
and
xor
jo
pop
cmpsb
out
bound
fwait
mov
dec
pop
lret
in
and
inc
ret
out
add
mov
scas
lods
insl
adc
enterw
in
push
addb
adcl
dec
les
mov
test
mov
inc
xor
roll
mov
add
pop
in
fstpt
js
jecxz
ds
in
xlat
xor
sarl
jbe
jae
pop
in
and
pop
rcl
dec
push
inc
call
cmp
sub
push
jae
test
in
and
aam
xchg
sbb
cmp
push
jb
xor
dec
in
or
ret
incl
adc
leave
xor
pop
rcll
mov
cmc
sub
dec
mov
enter
and
xor
jno
push
ljmp
sbbl
xchg
orb
sarl
orl
push
lahf
cmpsb
add
pop
jecxz
push
scas
jl
sub
sbb
xchg
cmpsb
or
sbb
cmp
xor
cmpsl
in
clc
sub
imul
and
mov
push
pop
cltd
xchg
lahf
cs
pushf
scas
jno
in
pop
mov
xor
mov
loop
divb
sub
je
pop
jo
in
roll
xchg
inc
sbb
cmp
dec
adcb
inc
fs
mov
adc
sti
cmpsl
xchg
lcall
sbb
and
xor
call
scas
shrb
in
int
loope
cmpsb
int3
add
in
dec
ret
int
or
outsl
mov
pop
lret
hlt
call
cmp
inc
dec
mov
cmp
movsb
daa
leave
mov
jns
and
mov
out
dec
sbb
sub
mov
push
mov
mov
pop
int
pop
xor
add
pop
xor
mov
jo
adc
adc
push
aad
lods
push
movsl
je
imul
xchg
les
sub
dec
fldt
stos
sub
cmp
dec
test
push
prefetcht1
cltd
mov
push
inc
jl
adc
and
out
sub
jae
mov
push
push
int3
jno
xchg
mov
into
xchg
sub
cmp
and
imul
jno
xor
adc
pop
out
int
fwait
mov
jl
xchg
mov
ret
ret
cltd
or
mov
loope,pn
scas
pop
add
jmp
lcall
gs
sbb
pop
aas
adc
dec
xchg
jbe
sti
cmp
or
xchg
lcall
dec
jns
mov
jnp
movb
fidivl
mov
arpl
add
sbb
sub
inc
and
adc
xchg
sbb
pop
mov
enter
inc
ret
mov
rclb
rolb
call
push
and
or
sbb
daa
cld
divl
out
aas
inc
inc
cltd
arpl
in
add
pop
sbb
loope
gs
sarb
mov
arpl
fldenv
andl
pop
filds
sahf
dec
icebp
or
jle
cmp
enter
mov
ljmp
jne
mov
and
and
lock
dec
dec
push
pop
int3
cmpsb
xchg
jbe
xchg
mov
movsl
clc
stos
repz
mov
or
cld
adc
or
rcrb
mov
insl
sbb
xor
stos
iret
ss
or
divl
loope
sbb
jmp
lahf
push
fs
pushf
sub
cmc
inc
andb
and
ss
ljmp
xor
mov
mov
testl
stc
int
test
mov
pop
xor
jae
insl
test
sub
into
or
js
mov
push
out
test
mov
shll
test
sbb
decb
dec
mov
rcrb
in
pop
pop
sbbb
xchg
pop
lret
pop
hlt
cld
repz
mov
or
and
rolb
in
pop
scas
add
bound
lods
stc
mov
hlt
xchg
sub
scas
fs
aam
call
jg
test
pop
cmpsb
xchg
xchg
cmpsl
jne
jl
stc
cmpsb
mov
or
fistpl
pop
inc
inc
push
clc
sbb
push
dec
jo
cwtl
sbb
xchg
ret
add
insl
lock
or
roll
call
inc
imul
pop
gs
inc
fwait
sub
sar
or
xor
aam
fucomp
enter
dec
inc
and
mov
dec
mov
pop
mov
dec
jbe
stc
pop
outsl
mov
test
adc
daa
in
repz
mov
push
mov
les
sbbl
mov
mov
outsb
jo
xor
pop
lahf
mov
mov
orl
in
inc
dec
jo
sahf
hlt
dec
mov
pushf
dec
push
sub
sub
shlb
lahf
push
ja
aad
xor
div
outsb
jnp
push
gs
push
cmp
adc
mov
fwait
pushf
jp
loop
cvtdq2ps
mov
mov
lret
cltd
pop
mull
xor
aam
orl
lods
inc
or
bound
and
jnp
aas
mov
mov
xor
cli
movsb
pop
jmp
lods
je
pop
int
or
ljmp
push
icebp
ja
test
addr16
clc
xchg
xchg
loopne
popf
or
jg
xchg
into
push
push
int3
daa
adc
mov
and
jbe
stc
jo
mov
dec
lock
pop
cmpsb
jle
fistps
pop
push
sbb
mov
jo
xchg
pop
lods
xlat
aas
dec
loop
lret
adc
stc
test
fldl
xchg
sbb
es
mov
cld
xor
lahf
jo
add
pusha
repz
lea
cltd
out
mov
sbb
pop
sub
sbb
and
or
dec
sbb
mov
iret
pop
lahf
mov
xchg
mov
lret
jb
jb
cs
jo
push
xchg
xor
fsts
stos
aaa
pop
or
pop
cmpb
leave
bound
xor
fmuls
pusha
mov
xor
sbb
sbb
inc
add
lds
xchg
mov
stc
scas
and
pop
push
add
bound
sbb
push
icebp
inc
rcrl
fnstcw
test
mov
out
aas
lret
jb
dec
aad
aas
popf
add
hlt
pop
lods
xor
pop
jno
add
add
gs
jo
and
int
rcl
jle
inc
subb
xchg
sbb
jnp
and
mov
sti
dec
xchg
push
adc
neg
fadd
cmp
in
iret
sbb
or
outsl
aam
jl
iret
xchg
loope
push
push
mov
sahf
dec
mov
cltd
xor
outsb
repz
cltd
mov
scas
and
mov
push
das
lds
in
das
adc
push
jno
arpl
loope
aam
aad
mov
cmpsl
add
jp
mov
pop
lock
adc
adc
insl
icebp
mov
popa
inc
movsl
pop
mov
fldcw
ljmp
int3
push
dec
fidivrs
and
ss
ljmp
shrb
mov
sbb
inc
jbe
mov
pop
icebp
adc
or
inc
and
mov
mov
adc
rcr
pop
sbbl
dec
jecxz
xchg
clc
xor
mov
out
je
fwait
jl
inc
adc
sbb
sahf
daa
shlb
test
mov
sub
pop
inc
lret
mov
mov
mov
xor
scas
ret
scas
pop
pusha
sub
jmp
xor
andl
loopne
lods
icebp
pop
jp
sahf
cmp
hlt
cmp
add
fmuls
xchg
cwtl
outsl
aas
push
adc
sarb
xor
sbb
test
and
and
sbb
pop
push
push
in
arpl
aas
mov
cmp
inc
or
xor
push
jle
xchg
js
cmp
int3
cmp
lcall
mov
xchg
mov
addr16
mov
int
int
test
fwait
out
mov
and
shr
shl
jmp
pop
fwait
pop
mov
or
add
rclb
inc
enter
lret
fs
data16
push
cs
int
insl
cmp
mov
sub
int
add
sbb
push
out
out
push
pop
xchg
mov
icebp
mov
pop
xlat
rcrl
push
std
cmp
call
cmp
pop
cld
loopne
xorb
ss
adc
test
lock
sbb
inc
jo
shlb
push
and
clc
dec
jmp
jle
xor
or
loopne
pop
add
sub
jns
lods
cmp
and
and
xor
test
ja
out
movsb
inc
and
ja
flds
xchg
push
add
fisubrl
in
mov
stos
sbb
inc
jmp
iret
sbb
notl
sti
std
push
push
imul
mov
push
hlt
and
and
push
lock
jmp
jmp
mov
ds
js
mov
loope
mov
xor
xchg
xor
stos
xchg
enter
xchg
gs
fildl
mov
pushf
pop
mov
mov
imul
mov
or
nop
clc
es
insb
mov
push
mov
imul
push
aam
aam
fcoml
jecxz
popf
iret
sbb
enter
pop
push
jo
gs
xchg
lret
mov
sbbl
mov
add
dec
inc
xor
insl
dec
sysexit
cmp
jl
and
xchg
and
out
in
movl
jne
sub
cltd
adc
inc
mov
pop
insb
sub
cld
sbb
mov
cmp
xchg
sbb
idivb
xchg
iret
repz
out
mov
cmp
inc
popa
icebp
stos
push
imul
and
outsl
inc
cltd
mov
outsl
fisubs
mov
xchg
pushf
rolb
mov
negb
cmp
nop
lret
cmp
adc
mov
imul
loope
cld
jns
jo
xor
adc
fnstcw
xchg
lock
insb
cmp
es
int3
push
iret
cmpsb
stos
jl
push
sub
outsb
pushf
jae
test
pop
insb
insb
mov
inc
test
inc
lea
adc
pop
dec
ss
fptan
sub
sti
ficomps
xor
out
xchg
addr16
or
dec
into
dec
fldl
sbb
repz
xchg
leave
jae
ja
cmova
sahf
pop
loope
sbb
out
push
add
mov
lret
push
mov
add
or
and
sub
inc
fmull
out
nop
inc
adc
and
sbb
xor
pop
add
or
jno
aaa
sets
jl
lret
cmp
test
cli
cmp
ss
push
and
gs
inc
pop
int
mov
adc
jl
jle
sub
mov
mov
or
xor
lahf
loope
adc
push
add
jnp
cmc
jg
mov
or
jp
enter
out
pop
pop
rolb
hlt
push
xor
sbb
dec
jp
test
sahf
xlat
pop
arpl
pop
xchg
xor
xor
sti
add
mov
inc
push
fidivrl
mov
out
into
aaa
push
les
mov
jmp
xchg
mov
in
xor
and
stos
mov
je
pop
scas
adcb
lods
jne
testb
xorb
hlt
push
shlb
ret
fadds
xchg
xchg
scas
dec
ret
or
or
or
das
repnz
mov
insl
fisubrs
mov
in
xchg
or
mov
aam
jg
int3
jmp
adc
lahf
cli
mov
sbb
cld
sub
mov
jbe
aas
in
mov
mov
jno
fstpt
inc
out
aam
dec
and
mov
pop
adc
stos
fists
xchg
imul
imul
dec
popa
out
cmp
inc
jbe
mov
andb
inc
stos
push
pusha
jns
sbb
jb
pop
xchg
push
xchg
shll
xchg
in
icebp
mov
jmp
xchg
xchg
add
cmp
push
cli
adc
leave
dec
mov
xchg
fcoml
cmp
push
adc
dec
dec
or
push
mov
inc
out
mov
testb
mov
test
leave
mov
ror
ret
jge
lret
les
mov
ret
and
inc
movsl
pop
pop
sbb
jns
sbb
hlt
test
adc
cli
fdiv
sysenter
shll
fists
outsl
ljmp
pop
mov
sub
mov
movsb
push
cld
sahf
dec
and
stos
mov
movsb
sbb
sahf
mov
push
aaa
pusha
add
lahf
pusha
js
out
cmp
nopl
lock
incb
push
pop
add
push
icebp
ret
andl
movsb
mov
lcall
aas
push
mov
sbb
rclb
imul
dec
nop
pop
hlt
aas
jmp
cmp
scas
sbb
insl
jno
sbb
sbb
mov
sbb
or
mov
leave
cs
cmc
sahf
ret
push
arpl
and
mov
push
test
cmp
mov
mov
add
repz
in
test
pop
pop
sbbb
in
and
jmp
aad
aad
sahf
ss
adc
icebp
cmpsl
jo
aaa
sbb
into
jecxz
dec
mov
out
and
pop
scas
lret
flds
adc
sbb
jecxz
mov
pusha
js
push
lret
jge
in
hlt
and
test
xor
into
cmp
pop
mov
push
dec
out
add
push
cmp
jo
cmp
sbb
ljmp
inc
mov
shll
fs
decb
or
pop
in
pushl
cmp
cmp
xchg
repz
xor
mov
fiaddl
cmc
and
xlat
or
xchg
ficompl
mov
aaa
sub
xor
and
mov
subl
std
sub
jne
inc
or
and
iret
mov
xchg
fucom
jae
daa
push
push
sub
out
cmp
jmp
cmp
imul
adc
sub
add
mov
dec
push
addr16
mov
dec
stos
js
mov
inc
insl
ret
ret
mov
cmp
mov
jne
data16
das
mov
pop
or
scas
shlb
sbb
addr16
inc
pop
sbb
mov
fcomps
sub
lcall
aaa
call
inc
cmp
xchg
dec
nop
pop
dec
mov
cmp
and
lret
cmp
insb
or
jmp
loopne
arpl
insb
decl
mov
and
xchg
data16
in
cmpsl
mov
lret
je
xchg
mov
pop
add
insl
dec
testb
adc
jbe
and
pop
out
imul
xor
sahf
and
jo
xchg
mov
mov
mov
inc
dec
pop
insl
sbb
cmc
pop
rol
mov
test
daa
dec
and
inc
js,pn
adc
or
sub
or
pop
jp
int
xlat
mov
jmp
subl
fiaddl
push
mov
xchg
dec
or
xor
popa
or
imul
aaa
add
jne
ja
cwtl
jno
lods
jns
cmp
cmp
insl
push
push
movsl
xor
jmp
fnstenv
ds
add
les
rolb
jnp
ja
nop
cmpsl
push
pop
sub
ja
fwait
gs
aad
es
cmpsl
imul
fdivs
jg
pop
add
jl
std
rorl
loopne
and
or
fbld
jge
bswap
pusha
pop
sub
pop
movsl
mov
ja
int3
sbb
test
arpl
jnp
cmc
decl
cmp
adc
jecxz
sbb
add
ja
pop
push
jno
enter
notb
push
pop
movsb
xor
dec
lds
add
mov
sub
ret
outsb
jg
mov
adc
or
movsl
and
fistpl
test
sbb
cltd
mov
cld
inc
pop
sub
test
dec
sbb
mov
mov
push
fstl
es
inc
add
jbe
mov
mov
or
lret
cmp
imulb
sub
mov
fists
vmovaps
dec
out
je
jae
adc
addr16
enter
sbb
xlat
inc
push
jle
dec
lahf
repz
sub
ljmp
fdivs
xchg
dec
add
incl
cltd
mov
mov
jns
lcall
pusha
out
cmp
imul
fisubs
jg
es
aad
xchg
sub
cmpsl
fidivl
lock
and
loopne
cli
es
iret
popf
sti
or
add
xchg
sbb
cltd
and
push
adc
repnz
enter
test
xor
lea
xlat
mov
inc
xor
scas
cmp
sub
ljmp
sub
cli
sub
cli
shl
sar
mov
inc
push
dec
mov
adc
push
mov
mov
dec
sub
cmp
or
aas
cmp
dec
pop
cli
add
stos
loope
pop
pop
stos
stc
fimuls
add
adc
fsubr
cli
bswap
mov
jnp
pop
out
cmp
pop
inc
dec
xor
outsb
notb
ljmp
movsl
rcll
adc
das
pop
das
pop
mov
jns
addr16
sub
fwait
in
dec
push
out
stc
cmp
insb
jle
cwtl
pop
sti
sub
mov
rclb
ffreep
and
jmp
adc
mov
arpl
dec
add
xchg
popa
outsb
imul
out
adc
test
mov
mov
sub
jg
scas
mov
fsts
push
arpl
dec
mov
scas
stos
pop
call
push
jb
lret
leave
adc
pop
lea
sbb
sub
inc
cwtl
mov
jb
bnd
xchg
push
sahf
sahf
outsb
and
push
inc
inc
hlt
add
daa
gs
adc
or
xor
pop
xchg
mov
andb
shlb
mov
jge
lcall
add
mov
pop
outsl
ljmp
mov
jb
loopne
inc
test
clc
mov
mov
into
movsb
push
push
loope
push
jl
pusha
and
in
jecxz
add
cmc
sub
test
cld
jecxz
jbe
adc
js
stos
lret
out
shll
jne
cmp
xchg
push
and
mov
xchg
pop
stc
pop
add
mov
jns
je
fs
pop
aam
jb
into
das
push
ss
ret
jae
add
mov
andl
cmpb
xchg
mov
in
xchg
push
sbb
cld
jmp
mov
mulb
and
cmp
inc
in
sti
sub
mov
xchg
sub
cmpsl
mov
jmp
les
add
dec
mov
pop
xchg
sbb
out
mov
sbb
xchg
movsl
xchg
stos
push
inc
call
cmc
inc
sahf
and
cmp
fisttpl
aaa
add
ss
xor
inc
and
sbb
push
fs
pop
jecxz
addr16
jbe
fldt
dec
sar
test
pop
mov
or
cmp
cltd
or
push
jp
cltd
pop
mov
nop
sbb
xor
fwait
cmc
xchg
xor
adc
and
cmp
xchg
negb
cmp
push
add
pushf
jns
rorb
adcb
xchg
and
out
stos
push
mov
fisubrl
ret
push
jmp
inc
mov
pop
pop
jnp
fnstenv
in
outsb
push
jbe
or
js
xchg
mov
jnp
aam
stos
push
gs
scas
insb
lret
pushf
in
jo
mov
shll
inc
mov
add
ljmp
loop
sti
sahf
scas
loopne
dec
call
sub
fsubl
inc
or
mov
mov
out
and
pop
and
stos
push
loope
inc
and
pop
rcl
mov
cmpsl
lds
or
cltd
out
outsb
push
push
pop
idivl
dec
in
test
jns
pop
dec
xor
movsl
aaa
pop
xor
mov
add
push
mov
xor
inc
in
test
imul
loope
or
test
stos
sbb
fdivrl
mov
or
cmp
cld
mov
mov
ljmp
mov
pop
lds
or
push
pop
pop
mov
outsb
adc
and
in
inc
pop
xchg
mov
sub
ja
je
pusha
cmp
loop
cmpsb
daa
call
push
cld
dec
cmp
sub
push
fwait
sub
push
mov
sbb
inc
gs
adc
ds
aad
or
mov
in
xchg
into
jg
xchg
arpl
dec
xor
insb
pop
lea
ds
push
mov
inc
inc
ljmp
mov
sbb
sbb
push
movsb
fst
dec
sbb
xchg
or
inc
xchg
push
fidivs
ljmp
jecxz
push
popf
ficompl
adc
pushf
or
add
and
push
movsl
ja
or
int
adc
and
and
into
and
mov
mov
out
or
stos
inc
fidivs
mov
and
fistps
dec
cwtl
ss
sbb
into
adc
lahf
jnp
mov
xor
mov
and
mov
and
mov
and
divl
fprem
cmpb
stc
add
gs
inc
and
scas
jl
or
daa
movsl
jb
push
inc
fdivr
cltd
int3
movsb
or
xchg
jle
adc
mov
fisubl
xchg
nopl
aam
jae
int
loope
push
stos
sub
loop
jge
dec
nop
pop
scas
addb
fiaddl
mov
jnp
idivb
and
out
add
insb
xchg
aad
push
and
mov
sbb
jno
loope
jl
imul
xlat
mov
in
add
dec
mov
sahf
fsubrs
inc
and
add
dec
fwait
or
jne
and
fbstp
or
data16
imul
jle
cmp
aaa
mov
loop
push
pop
sub
mov
or
bound
sbb
mov
ss
adc
push
leave
popf
aad
mov
es
pushf
inc
xchg
aas
gs
jp
pop
add
fsts
mov
jge
inc
dec
adc
adc
loope
repz
jae
mov
ds
inc
and
fnstsw
mov
cmp
push
push
rcrl
and
cld
jnp
sbb
aas
inc
sub
iret
shl
add
xchg
mov
jg
mov
test
mov
sub
and
popa
push
fsubs
add
mov
lahf
out
dec
sub
stos
sar
mov
aaa
inc
imul
dec
enter
inc
dec
stos
sub
lock
insb
mov
in
mov
jge
and
dec
lods
mov
mov
mov
xchg
pusha
sub
or
mov
push
mov
inc
ret
cld
or
insb
xchg
pusha
sub
cli
push
out
test
push
add
rclb
cmpsb
mov
xchg
mov
out
pop
pop
xor
push
jns
or
xchg
bound
xorb
pop
testl
adc
pop
mov
pop
jp
mov
jmp
inc
mov
decb
out
fcmovnb
fs
pop
jp
pop
sbb
fmuls
test
bswap
dec
testl
lret
mov
mov
adc
xchg
test
mov
mov
dec
sub
pop
dec
inc
jbe
xor
arpl
les
movsl
imul
mov
aad
mov
mov
jo
jecxz
loop
std
enter
or
mov
dec
ficomps
div
sti
sti
orb
mov
ret
inc
and
aaa
jle
pop
cwtl
hlt
pop
popf
add
cmpsl
inc
aaa
mov
loopne
es
int3
add
imul
push
cmp
ja
mov
xchg
mov
sbb
std
xchg
jbe
xchg
jle
inc
sarb
rcrb
hlt
sbb
bnd
ficoml
andb
imull
mov
shlb
mov
mov
aas
pop
notb
or
inc
bound
sahf
stos
ret
mov
dec
xchg
cltd
in
pop
add
cs
xchg
dec
push
fwait
push
imul
xchg
jmp
mov
jo
cmp
je
sub
sub
in
test
sbb
cmpsb
cmp
jb
call
rcrl
xchg
or
ret
jae
stos
xchg
xchg
sub
clc
js
repnz
repnz
mov
push
hlt
and
test
out
jge
rclb
or
adc
fistl
push
sbb
dec
ja
test
mov
add
pop
mov
mov
mov
adc
stos
inc
je
or
inc
xor
mov
pushf
ficoml
mov
lahf
sub
lret
es
jns
xor
dec
insb
add
outsb
mov
aas
ret
in
hlt
jnp
cli
pop
in
into
cmp
push
sbb
push
shrb
stos
sbb
cwtl
mov
fsub
mov
mov
shlb
daa
call
ret
mov
jae
dec
inc
cli
sub
adc
xchg
hlt
jns
lock
shlb
pop
imul
push
int3
sbb
imul
jmp
mov
lahf
out
iret
in
push
mov
mov
lods
jmp
dec
mov
popa
lock
dec
std
fdivrs
jmp
outsl
lods
movsb
stos
jl
aam
adc
rcl
movsb
xor
pop
clc
xor
xor
mov
divl
inc
mov
xchg
daa
cmp
in
pop
lods
xchg
rorl
inc
mov
and
jp
lcall
test
rorb
jecxz
test
lret
push
sub
clts
jae
fmuls
out
cmpsl
mov
mov
sahf
scas
pushf
addr16
sarb
cmp
jne
xor
inc
jb
cmp
pop
xchg
int3
std
out
fxch
mov
iret
aam
cwtl
cmpsb
sahf
push
cli
rcr
cmpsl
test
pusha
jae
aaa
or
dec
push
test
repnz
fstl
sub
push
inc
lret
mov
ds
sbb
call
push
dec
fsts
and
cld
mov
mov
mov
cmp
pop
jo
xor
movsl
mov
rcll
mov
jne
and
fldenv
push
and
sbb
pushf
femms
stos
gs
xchg
test
pusha
add
mov
xchg
pushf
jecxz
fisubl
sbb
add
mov
lcall
outsb
mov
pop
sahf
mov
add
nop
test
fwait
add
sbb
mov
scas
mov
popa
inc
cmpsl
sub
mov
leave
inc
int3
aaa
std
fcomi
xor
rcrb
divl
sbbl
ret
xchg
add
lcall
dec
icebp
mov
inc
pop
leave
xor
iret
scas
repnz
mov
dec
pop
mov
inc
outsb
fmuls
scas
or
data16
sub
mov
hlt
idivl
push
mov
adc
sub
mov
test
push
jns
nop
push
add
mov
xchg
cs
sub
xor
or
loopne
les
fsts
dec
xchg
mov
out
and
sub
icebp
mov
push
shl
inc
mov
es
lret
dec
sahf
fadds
jl
xchg
adc
xchg
push
add
fwait
xchg
sub
mov
xlat
aam
adc
icebp
fcompl
mov
mov
mov
mov
dec
pop
dec
fnstcw
xor
ret
je
push
int3
loope
adc
cmp
lcall
inc
dec
int3
jp
insl
insb
aaa
ret
push
testb
xor
mov
pushf
dec
xor
imul
ret
loope
jmp
je
adc
movsl
popf
cltd
in
call
outsb
out
out
rcrb
push
out
sub
les
sbb
mov
inc
mov
and
mov
repnz
pop
xor
nop
popa
ret
popf
push
add
adc
xor
pushf
in
jns
mov
cmp
push
sub
fadds
mov
xor
jb
push
add
or
jp
ja
fsubrl
outsb
adc
outsl
bound
and
sti
lock
lret
jle
push
andb
dec
ret
mov
mov
mov
adc
fwait
inc
icebp
push
mov
loopne
scas
shrb
fistl
dec
dec
dec
leave
pop
xchg
jp
adc
test
pop
mov
fidivs
pop
cld
inc
mov
jns
inc
popa
movsl
call
push
pushf
mov
jb
cs
sbb
dec
std
aad
xchg
mov
into
rcl
xchg
lcall
stos
xor
and
loopne
and
iret
icebp
jge
jle
sub
sub
out
lods
cmpb
and
out
jmp
cmpb
imul
cwtl
dec
movsl
cmpsb
jns
xlat
mov
into
bound
stc
cli
pop
add
xor
leave
xchg
xor
xor
daa
pushf
js
jp
jl
cmpsl
or
sarl
arpl
test
andb
outsl
daa
mov
pop
ret
adc
call
jns
cli
jmp
nop
rcrb
fldl
mov
bound
stos
mov
shl
lret
jmp
sbb
and
bound
jne
mov
inc
cwtl
cltd
and
cs
gs
pushf
clc
mov
lret
dec
in
sub
mov
jno
shlb
sbb
cmp
mov
inc
scas
mov
aaa
cltd
adcl
jp
mov
fsts
push
cmpsb
add
addr16
popf
pop
mov
jle
cmpl
cwtl
jmp
lods
or
lret
call
ja
push
inc
adc
dec
out
xchg
xor
lret
addr16
push
sar
push
pushf
test
cmp
popl
adc
pop
mov
push
cmp
scas
ret
pop
sub
iret
in
cmpsb
dec
dec
pop
sbb
test
fisubrl
cli
rcrl
out
addr16
push
arpl
mov
cmp
push
push
sub
jnp
pop
mov
mov
mov
xchg
movsl
enter
repnz
in
lock
xchg
cmp
push
andl
divb
xchg
data16
sbb
dec
ret
cltd
cmp
xor
cmp
cltd
xchg
sbb
mov
fsubl
add
loope
decl
jge
fwait
sub
dec
lret
outsl
clc
loopne
or
fnstsw
out
mov
mov
xchg
div
inc
call
rol
loope
cli
jo
jg
and
jg
lds
movsb
paddw
sub
add
loope
andl
in
mov
jl
inc
pop
jbe
pop
pop
inc
stc
xor
jge
mov
cmc
mov
int
lahf
cmp
test
rol
lock
nop
repnz
orl
xchg
mov
enter
xor
dec
loop
jp
adc
sub
mov
inc
mov
mov
test
push
mov
stos
cmpsl
scas
cs
push
out
outsl
pop
fwait
and
gs
lret
ss
xchg
inc
inc
bound
add
push
imul
xchg
mov
inc
std
adc
inc
rcll
fiaddl
lret
mov
push
or
fisubl
push
sub
jno
sub
fldcw
inc
sub
xor
jmp
or
sti
lret
js
dec
clc
xlat
inc
out
or
jns
ljmp
mov
iret
xchg
pop
daa
scas
adc
mov
ret
data16
sbb
cmp
sbbl
xor
add
in
or
loopne
mov
scas
or
rcrb
aaa
xchg
movsl
mov
inc
mov
mov
addr16
insb
movsl
mov
jb
lret
cmp
jecxz
pop
mov
pop
lahf
sub
imul
adc
in
test
ret
lea
fsubp
xchg
sbb
daa
in
jns
mov
lods
imul
cmp
push
loope
out
dec
arpl
in
int3
loopne
cmpsb
xor
jp
adc
add
sbb
addl
mov
fimull
lcall
mov
xchg
inc
add
jle
les
pop
hlt
lds
test
sete
xor
imul
xchg
xchg
xchg
mov
out
scas
mov
lahf
mov
cs
cmc
call
movsl
lcall
or
nop
iret
cmp
popf
ret
bound
jne
js
getsec
add
out
jmp
add
outsb
inc
mov
ror
std
leave
push
mov
dec
cmp
jecxz
bound
test
lahf
aad
pop
mov
aad
gs
pop
push
and
sbb
addr16
test
or
fs
xchg
loop
leave
jns
add
mov
insb
repz
or
aas
and
xor
jbe
inc
pop
call
testb
out
lahf
jge
cmp
pop
fcoms
adc
inc
jne
pusha
pop
scas
mov
jbe
into
sbb
dec
cmp
xor
push
push
pop
mov
ljmp
adc
addb
mov
or
rclb
mov
pop
jecxz
push
fcmovu
adc
mov
addr16
mov
jns
jecxz
sbb
idivb
movb
dec
fadd
push
mov
lea
adc
icebp
cmp
xchg
in
pop
sub
add
popa
jnp
stc
repz
mov
sub
mov
fmul
test
icebp
cmp
call
or
cmp
loop
push
jmp
notl
adc
xorl
pop
nop
mov
adc
aad
shr
sbb
xchg
xor
pusha
insl
jbe
es
movsl
cmp
add
and
mov
ss
ret
inc
movsb
fs
sbb
jbe
mov
mov
sbb
mov
sub
pop
sbb
inc
xor
sar
mov
cltd
call
ds
xor
fcom
pop
sub
movsb
xchg
loopne
xlat
ja
inc
mov
aaa
pushf
je
push
fs
scas
pop
mov
push
push
icebp
cltd
fildl
insl
js
hlt
outsb
push
push
push
lret
push
js
ds
les
or
in
jl
cld
into
mov
in
cmp
addr16
es
js
jae
fdiv
mov
out
jmp
imul
dec
arpl
inc
inc
stc
lock
jns
or
cli
sahf
add
cmp
ss
mov
sahf
pushf
ficoml
add
add
call
jno
bound
dec
mov
push
rclb
sub
lea
mov
lods
in
cmp
icebp
adc
dec
in
sbb
or
jo
dec
fwait
or
cmp
movsl
sub
imul
pop
andb
shlb
and
call
pop
xchg
shrb
jnp
mov
mov
js
scas
fs
int3
sub
mov
inc
and
out
gs
adc
sbb
lock
cmp
loopne
cmpsb
js
push
addr16
push
sbb
roll
fs
xlat
mov
lds
push
les
adcb
out
jae
fstps
lea
jmp
dec
mov
xchg
sbbl
and
cli
mov
les
fs
add
in
adc
or
lock
pop
js
inc
and
xor
out
leave
shlb
push
adc
pushf
dec
push
and
in
scas
cmp
mov
lret
mov
test
fildll
jp
pop
and
out
mov
stos
lret
cmp
lods
sarb
push
inc
sbb
xchg
cmpsl
jne
inc
inc
sub
mov
dec
add
xchg
int3
repz
xchg
cmp
inc
inc
fwait
jne
and
jle
pop
cmc
xchg
clts
in
or
xchg
icebp
fwait
mov
lock
sbb
cmpsl
aas
in
sub
and
insl
sub
dec
aas
push
or
mov
cmp
xchg
mov
ds
mov
out
mov
insb
fs
outsb
push
lea
roll
pop
cmc
leave
imul
add
xchg
or
subl
repnz
mov
fs
inc
cld
mov
sub
jnp
outsl
sbb
stos
inc
loop
nop
dec
jl
fwait
jnp
mov
xlat
xor
popa
xor
fs
loopne
xlat
xor
lcall
xor
sbb
lods
inc
push
sarb
push
je
ds
pusha
jp
xor
cmc
xchg
es
int3
add
ficompl
xlat
cmp
inc
sbb
mov
cmp
stc
jmp
sar
call
push
aaa
and
sbb
lea
ljmp
mov
inc
je
ficompl
insb
push
pop
decl
call
jne
gs
and
cltd
daa
call
jno
xor
add
sar
and
sbbl
or
jg
pop
push
into
fcomps
lds
inc
push
aad
pop
scas
push
mov
inc
lret
inc
inc
jmp
test
jle
jmp
cmc
das
fcomps
test
mov
je
popf
and
jmp
cmpsl
leave
inc
cmp
repz
xor
cmp
xchg
pop
dec
iret
xlat
lock
es
push
loope
pop
jns
addb
xchg
mov
add
pushf
mov
enter
jno
mov
shl
shrb
mov
fmuls
lcall
cmpsb
dec
mov
pop
inc
jle
popa
mov
xor
jp
mov
sahf
xor
jg
in
xchg
shr
or
loopne,pn
push
adcb
iret
adc
lcall
lret
or
notl
jo
out
mov
loop
xor
ret
scas
fs
or
cmpsl
pop
ljmp
or
test
dec
mov
jnp
cltd
out
jb
pop
inc
sarb
filds
jecxz
mov
mov
xchg
and
fisubrl
xor
rcll
pop
scas
loopne
int3
lds
lret
daa
and
popa
js
and
shll
cmpl
test
sti
mov
dec
mov
mov
dec
push
imul
shrl
jae
je
out
add
stos
aam
xorl
push
sti
mov
test
mov
mov
fstpl
adc
push
jg
jecxz
mov
inc
lret
mov
add
mov
movsb
dec
mov
test
mov
lahf
push
shrb
mov
jbe
pop
mov
int
adc
and
sub
mov
out
inc
pop
jmp
push
push
aas
sahf
xor
xor
bound
add
dec
rcrl
gs
std
add
or
cmp
mov
ljmp
test
adc
ss
cmp
jl
pop
dec
cltd
dec
popa
and
mov
xor
lds
call
cwtl
pop
js
out
and
divb
scas
rorb
fs
dec
sti
sub
data16
xlat
fs
and
fdiv
adc
jnp
sbb
sbb
cmc
adc
outsl
aaa
jnp
out
movsb
mov
outsb
movsb
test
xchg
add
inc
dec
pop
fnstenv
dec
cmpl
pop
dec
repnz
nop
jge
repnz
cmpsb
sti
sbb
lcall
notl
cmpsl
sub
mov
and
xor
ss
in
arpl
push
insb
mov
bound
adc
inc
mov
mov
inc
dec
jg
push
sbb
aam
ljmp
inc
or
test
loop
test
mov
lock
js
loope
vmread
andb
pop
and
dec
mov
jl
cwtl
insl
imul
xchg
jne
les
jge
pop
outsb
dec
inc
in
hlt
push
mov
jo
dec
mov
jg
fld
ljmp
adc
inc
xchg
push
popa
ret
test
mov
mov
sub
mov
jbe
sarb
jg
scas
lock
jno
rep
ja
adc
int3
dec
fidivl
push
add
decl
aad
loope
ret
dec
mov
in
inc
gs
stos
inc
pop
dec
ljmp
std
or
movsb
pop
ss
jo
sti
or
lret
adc
repz
xchg
call
jecxz
data16
loope
lahf
icebp
xor
mov
push
cmp
hlt
sub
push
push
dec
outsl
mov
cs
sub
mov
test
mov
sti
jle
adc
scas
mov
mov
inc
dec
mov
lods
es
pop
pop
dec
popf
adc
int3
pushf
pop
pop
ljmp
pop
out
cli
cmp
or
iret
out
xchg
fs
inc
xor
push
adc
aad
int
ds
xchg
jb
iret
fdivp
or
adc
sbb
mov
xchg
jbe
and
mov
lods
loope
out
cmp
cmp
scas
fsubl
mov
or
mov
mov
movsl
imul
push
aam
sbb
pop
pusha
mov
mov
adc
pop
dec
or
mov
cld
push
inc
movsb
cmp
lock
int3
jg
fnstenv
mov
int
shll
dec
push
mov
and
xchg
push
xchg
in
mov
inc
jp
ss
dec
pushf
push
mov
fcompl
sub
jnp
mov
stos
movsl
xchg
or
xor
mov
cmpsb
movsl
jl
inc
jecxz
sub
xchg
in
pop
mov
push
cmp
jp
and
enter
xor
stos
lcall
cmp
stc
sahf
out
cmc
rcll
sti
aas
inc
adcl
jo
or
mov
popf
bound
ret
test
shrb
sub
nop
mov
pop
sbb
xor
pop
mov
frstor
data16
sbb
addr16
cmp
scas
mov
test
icebp
mov
mov
lods
arpl
cmp
and
xor
shlb
xchg
loop
rclb
xchg
sub
pop
cmp
test
or
pop
rcrl
adc
cmp
fdivs
ljmp
loop
mov
mov
add
mov
roll
ja
cmp
jb
pop
inc
push
cmp
push
mov
add
mov
stos
xorl
xchg
ja
bound
dec
cmp
pop
outsl
mov
xor
xor
mov
mov
push
fstpt
push
push
in
inc
jecxz
mov
lods
or
pop
scas
loop
sbb
fidivs
movsl
push
sub
jl
jae
sub
pop
lds
xor
inc
xor
sbb
mov
lcall
mov
movsl
xlat
cltd
sub
fdivrs
popf
sarl
jg
js
push
in
dec
jp
fsubs
and
test
int
das
das
cmp
xor
and
lahf
scas
lock
xlat
mov
sbb
or
jg
sti
jne
cld
push
cli
push
outsl
pop
pop
sbb
out
xor
inc
pop
jne
ljmp
fucom
push
call
inc
sbb
int3
lea
mov
push
jns
bound
xor
push
jo
aaa
ret
jmp
jnp
mov
push
cmc
repz
mov
adc
fstl
xor
pusha
push
mov
mov
mov
adc
jmp
add
xor
data16
lods
adc
mov
jecxz
sbb
push
cmp
ret
outsb
pop
dec
and
lods
dec
add
lods
loope
inc
jo
outsl
sbb
stos
push
int
add
test
mov
dec
pop
sbb
mov
call
xchg
pop
mov
loopne
cli
push
pop
cld
movsl
shrb
stos
or
and
test
cmp
mov
lea
inc
loop
daa
cmp
fs
adc
outsb
dec
adc
mov
xchg
cmp
inc
pop
les
call
inc
sbbl
loope
ds
sub
das
shlb
cli
push
and
pop
or
mov
fs
icebp
test
inc
and
add
adc
pop
leave
test
mov
sti
mov
pop
sub
mov
in
jbe
clc
xchg
leave
push
mov
pop
clc
or
cs
shl
shrl
mov
push
gs
ret
outsb
pop
xor
cltd
sbbb
pop
push
xor
mov
cmpsb
cmpsb
lcall
or
add
pop
int3
pop
test
test
aad
xor
clc
movsb
call
ljmp
mov
test
imul
cmp
adc
or
jmp
cli
mov
dec
mov
divb
mov
push
xchg
mov
std
sub
and
pushf
adc
sub
mov
jmp
cltd
push
jl
das
int
lahf
cmp
pop
xchg
sub
inc
out
cs
repz
push
sub
lock
mov
push
shll
mov
xchg
jl
ds
ja
pusha
fmul
nop
sbb
call
sbb
fsubrl
and
jbe
iret
add
dec
ljmp
test
sub
mov
sbb
in
outsl
cmp
mov
or
ss
jnp
push
xor
scas
cmp
pushf
adc
scas
pop
and
mov
insb
push
loope
divb
je
scas
into
mov
xor
sbb
cmp
scas
lret
xchg
push
adc
pop
xchg
js
jle
add
pusha
scas
inc
xor
add
mov
pop
jne
jne
or
mov
ja
jae
fcomip
stos
or
aam
xor
or
sub
filds
nop
dec
xor
cli
xchg
sub
das
sti
sub
dec
adc
or
xchg
dec
pop
mov
jae
cltd
movsl
and
int
push
fdivrl
inc
pop
mov
aas
cmp
xlat
pushf
sbb
or
cmp
gs
test
outsb
scas
test
xchg
aad
mov
cwtl
mov
adc
pop
jmp
cmpsl
pop
adc
cmpsl
out
lods
fdivrs
jecxz
nop
stc
or
pcmpeqw
mov
mov
mov
adc
daa
cltd
stos
aas
std
xor
push
inc
mov
test
jl
mov
mov
cmp
fists
mov
adc
mov
lds
es
leave
and
and
mov
mov
fsubs
test
mov
adc
loope
cli
add
sbb
ljmp
fwait
test
cmp
inc
insb
sti
aad
frstor
xor
dec
cltd
pop
adc
xor
mov
and
test
xor
mov
mov
pop
push
cmp
dec
and
push
fdiv
adc
mov
cmpsl
sub
ja
fisubl
push
xchg
cmp
lahf
lds
mov
lahf
sbb
or
and
or
insl
xchg
shlb
sarb
xchg
sbb
pusha
mov
imul
jo
mov
push
inc
call
mov
pop
push
mov
or
enter
sarl
add
into
insb
sbbl
mov
cmc
shl
fdiv
loopne
arpl
add
push
pop
mov
mov
mov
lock
pop
lock
mov
out
int3
adc
adc
push
ret
inc
shl
sub
ja
mov
adcl
mov
xor
xor
cs
test
add
mov
push
or
jb
imull
push
ja
add
cmp
je
pop
lahf
dec
push
mov
and
sahf
popa
dec
insl
sarl
lret
mov
fimull
das
pop
in
xorb
xor
es
sbb
andl
mov
aam
mov
out
leave
jnp
jne
ds
ffree
aam
out
push
inc
outsl
push
push
shrb
popf
mov
mov
pop
add
mov
mov
mov
fcomi
aam
test
and
mov
inc
ret
cmp
nop
mov
xchg
insl
cmpsl
out
adc
rol
or
pop
cwtl
insb
test
aad
and
dec
enter
leave
sbb
xor
movsb
add
pop
jo
mov
std
lret
and
es
bound
leave
idivb
mov
sarb
out
inc
pop
mov
loop
js
imul
out
jl
inc
ss
push
mov
insb
movsl
int
in
ljmp
inc
adc
add
jb
mov
jo
jle
popa
sub
sub
out
out
adc
and
sub
lcall
idivb
pop
add
mov
sub
push
fcoml
xchg
stos
pusha
lods
inc
sbb
bound
or
cmc
and
call
push
in
cmp
iret
das
sub
imul
push
mov
sbb
push
xchg
adc
pop
cmp
add
loop
xor
add
pop
nop
adc
push
cmp
dec
sahf
xor
push
insl
nop
xor
mov
sub
cmp
sub
inc
jo
xor
mov
out
mov
int
xor
fwait
shrb
flds
mov
cltd
std
scas
sbb
mov
mov
repz
sbbl
xchg
rclb
mov
inc
or
cltd
xor
mov
xchg
sbb
mov
ffree
push
or
std
xchg
mov
cmp
dec
aas
xor
aas
lods
cmp
imul
pop
icebp
or
fisubrs
vpsubsw
xchg
adcl
lock
push
sub
sub
imul
test
xor
arpl
sbb
pop
int3
and
xchg
bnd
push
ja
dec
or
add
aam
rcrb
mov
sub
jo
inc
fsubrl
adc
fwait
cmp
stos
sub
lret
pop
add
mov
scas
lret
pop
in
pop
mov
dec
daa
sbb
aam
push
and
incl
sub
notl
jnp
sbb
popa
int3
jle
aad
sbb
push
movsl
xchg
cmpsb
adc
xchg
out
out
pop
sti
clc
xchg
in
les
pop
mov
ficoml
xchg
xchg
fnsave
pusha
inc
xchg
jo
jo
sub
sbb
std
jecxz
adcb
cmpsl
and
mov
cld
mov
inc
in
stos
fsubrl
inc
cltd
pop
or
repnz
sub
test
js
mov
dec
inc
cli
sub
enter
mov
xor
xlat
int
xor
or
lcall
xor
mov
ret
mov
push
inc
int3
in
push
xchg
addr16
xchg
hlt
loopne
std
stos
pop
iret
int3
movsl
jle
add
xor
push
mov
dec
mov
lods
out
in
add
call
adc
insb
leave
adc
fnstenv
addl
mov
push
rcrb
add
sub
in
xor
fistpll
scas
cs
mov
jae
adc
js
sub
rcrl
xchg
push
loopne
mov
lcall
sbb
outsl
add
jge
pop
mov
loop
in
jne
mov
les
je
mov
pusha
push
inc
inc
test
or
cld
pop
mov
movsl
rcl
ja
pop
lods
mov
out
adc
sti
test
icebp
shlb
xchg
andb
mov
arpl
popf
pop
mov
stos
jl
iret
or
popa
adcb
dec
movsl
mov
aaa
ret
ljmp
add
sbb
out
cmp
test
rcrb
fsubr
dec
push
repz
and
cmp
test
sub
inc
ljmp
in
jecxz
mov
xlat
mov
dec
cwtl
jnp
fiadds
in
pop
aad
in
mov
or
les
lret
xor
shl
pop
insb
cwtl
add
and
mov
mov
daa
pop
test
enter
into
mov
daa
mov
int3
in
mov
in
sti
ret
pop
leave
xor
nop
add
xor
mov
mov
repz
cmp
hlt
outsl
popf
mov
sub
movsb
clc
add
test
mov
jnp
shlb
repz
cmp
out
or
and
xor
jmp
mov
add
in
in
mov
pop
in
jnp
mov
push
sbb
cmp
fs
xor
notb
adc
inc
sbb
push
pushf
lea
adc
add
imul
out
pop
xor
or
xor
test
fcom
dec
pop
xchg
pop
std
mov
inc
xlat
mov
cmp
aaa
mov
cwtl
cmc
adc
or
inc
jnp
incl
loopne
jae
je
sub
in
fsubrl
jne
les
push
xchg
lcall
rcl
mov
push
fidivl
in
or
icebp
jecxz
cmp
pop
insb
jo
mov
ret
pop
cmp
sbb
cwtl
das
mov
pop
aaa
adc
inc
xchg
das
fstp
movsl
stos
and
repnz
movsb
jg
cwtl
iret
jg
xchg
xor
add
rcl
inc
insb
and
add
push
cmp
hlt
mov
inc
sbb
aas
mull
mov
in
mov
inc
and
sbb
bt
dec
into
and
ljmp
out
push
xor
rcll
cmp
dec
mov
or
jno
pop
les
sub
and
pop
fs
lret
js
and
dec
mov
sahf
sbb
loop
jle
xor
sub
and
sbb
add
pop
sahf
pop
incl
ret
sub
out
dec
imul
cli
sub
sahf
ret
sub
xchg
mov
add
sbb
sbb
sbb
xlat
and
push
aas
or
sbb
nop
insl
inc
test
imul
in
inc
mov
flds
jbe
and
daa
mov
xchg
iret
push
and
clc
lods
je
jle
stos
lds
push
cmp
dec
xor
icebp
sub
lds
stos
cmovs
dec
or
fwait
lret
aaa
nop
mov
packsswb
cwtl
adc
ss
orb
push
je
lcall
fisubs
out
jnp
bound
mov
jl
fsub
arpl
push
js
jnp
ja
aas
mov
fs
lds
mov
aam
into
out
fsubrl
inc
push
push
les
inc
mov
inc
mov
imul
lods
xchg
and
pop
jnp
pop
icebp
mov
mov
mov
ds
aam
cmp
icebp
mov
jnp
mov
xchg
inc
sbb
dec
cmpsb
cld
adc
inc
sub
inc
roll
xlat
pop
outsb
stos
pusha
fcoml
mov
dec
or
mov
mov
sub
inc
je
or
or
lea
push
out
filds
cmpsl
jmp
int3
loopne
xchg
cmpsl
xchg
xor
sbb
push
loopne
or
pop
dec
iret
pop
movsb
pusha
stos
push
push
mov
add
ds
test
adc
cwtl
mov
cmp
lahf
nop
inc
sbb
mov
aas
nop
xchg
xchg
xchg
jae
push
outsl
push
subl
xchg
addr16
test
rcrl
sti
repz
ja
mov
lea
rorb
jno
dec
je
cmpb
add
scas
js
test
out
repz
or
sbb
and
adc
jne
pusha
out
ret
lock
inc
xor
jecxz
adc
xchg
imul
cli
imulb
lods
jecxz
push
aas
add
gs
scas
int3
cltd
andl
sbb
mov
shr
dec
pop
push
push
jl
lods
sub
pop
ficomps
shl
xchg
jp
fdivrs
and
out
push
clc
inc
xor
mov
xor
lret
aas
in
test
insl
mov
adc
movsb
fbld
clc
cmp
fwait
addr16
xchg
cmpsb
fsubrl
and
int3
dec
lret
cld
aam
aas
insl
xchg
jmp
sbb
outsb
inc
jbe
mov
xchg
cltd
fildl
aaa
dec
push
daa
add
adc
cld
cmp
or
sbb
jl
dec
ffree
cmc
jnp
mov
fistl
std
cmpsl
movsb
push
sub
mov
stos
mov
and
mov
push
insl
or
sbb
jl
sub
sub
mov
mov
and
stos
jecxz
or
jmp
in
out
pop
jne
and
aas
lret
je
mov
pushf
pop
xchg
cmp
imul
cmp
lcall
pop
or
fs
push
xlat
inc
cmc
mov
cmp
xor
sbb
popa
rep
push
dec
outsb
popa
jp
clc
mov
shrb
in
sub
jno
jge
fldcw
andl
pop
push
mov
jmp
into
inc
or
out
mov
sub
in
adc
adc
jns
loope
adc
into
daa
imul
aas
add
pop
dec
inc
icebp
push
in
pop
jmp
aaa
sbb
or
xchg
pop
or
into
pop
out
psrlw
call
icebp
dec
dec
mov
aad
pop
add
mov
push
out
pop
out
add
push
into
repnz
add
jmp
fs
ret
mov
or
jne
jae
leave
push
xchg
movsb
idivl
clc
jecxz
sar
mov
mov
mov
mov
in
sbb
mov
pop
cmp
loop
fisubs
sbb
enter
cmp
cmp
ja
mov
xor
popf
enter
ret
lret
fwait
adc
xchg
cmp
ds
out
arpl
nop
dec
inc
xor
cmp
lcall
sbb
dec
test
inc
jb
add
jbe
lahf
stos
stc
xchg
pusha
addl
inc
adc
jle
inc
sub
jae
enter
stos
repnz
into
jnp
pop
cmp
in
loop
popa
orb
dec
in
mov
mov
mov
jle
jecxz
xor
add
ljmp
cwtl
pop
aas
cmpsl
dec
mov
iret
insl
fldl
fistl
cmp
testb
xor
in
mov
hlt
ret
and
iret
inc
pop
cmpsb
mov
push
punpckhdq
mov
cltd
je
mov
inc
sub
es
xor
vaddpd
out
cwtl
pop
sbb
push
repz
stos
inc
loope
jbe
and
pop
enter
sub
addr16
jle
gs
push
cwtl
addb
int
mov
hlt
in
jge
insl
gs
adc
loope
xchg
sbb
fstps
mov
mov
xor
imul
or
hlt
xor
arpl
push
adc
lock
lods
aaa
jne
cmp
inc
aad
stc
lods
stos
leave
lods
test
push
loope
cmp
or
sub
mov
mov
test
xor
xchg
int
test
test
in
push
add
ret
jmp
push
test
cmp
push
mov
popf
fldt
int
lods
xchg
pusha
scas
xor
mov
push
outsb
push
dec
mov
hlt
dec
sub
jecxz
andl
xor
imul
push
popf
dec
nop
fisubl
iret
pop
adc
mov
std
jns
jl
cli
cmp
jae
cmp
data16
ret
inc
mov
adc
and
xchg
pusha
xchg
mov
int
jge
xchg
jbe
ljmp
xor
sbb
mov
xor
lcall
push
inc
test
sbb
jecxz
data16
out
sbb
les
aas
shlb
das
outsl
cmp
ja
or
ljmp
inc
mov
call
mov
add
sbb
cli
cwtl
jnp
jl
jl
and
cld
mov
adc
add
jmp
sub
mov
lods
xlat
cmp
xchg
rcll
test
sbb
cmc
daa
dec
xor
cmp
pop
fimuls
mov
ljmp
loop
pushf
lock
or
roll
fst
and
ja
cmpsl
xchg
xchg
push
fcmovne
jo
dec
das
and
lods
scas
inc
jg
imul
popf
testl
inc
mov
les
sbb
addr16
stos
sbb
pop
mov
aam
scas
in
lret
push
fwait
jns
cmp
loopne
jle
or
ja
hlt
loopne
cltd
add
sbb
pop
aaa
jbe
cld
sub
jno
out
imul
mov
inc
jg
jp
sbb
incb
icebp
ficoml
mov
mov
or
mov
and
add
sub
imul
fistl
mov
mov
mov
into
pop
shrb
sbb
sbbb
fimuls
jbe
insl
std
and
std
sbbl
adc
or
sub
cmp
mov
das
gs
jp
scas
stc
lock
jb
pop
push
push
jmp
pop
push
es
icebp
shrl
and
pop
mov
mov
cmp
xor
repnz
std
inc
js
jg
int
aam
movsb
jb
jecxz
mov
sub
or
rcl
dec
aad
lret
sub
adc
insb
jnp
js
cmp
mov
mov
mov
adc
addr16
stc
jb
fdivs
out
js
xor
xchg
push
stc
pusha
fdiv
scas
xor
cmp
push
or
pushf
cmp
dec
pushf
imul
sub
push
fs
ret
cmpsl
adc
and
dec
mov
inc
jl
cltd
addr16
movsb
adc
mov
inc
ja
insl
and
in
jno
cmp
inc
sahf
fwait
enter
pop
in
outsl
loopne
cwtl
xchg
ss
insl
pop
mov
push
dec
adc
adc
mov
shll
cmp
push
jbe
enter
ss
mov
cltd
mov
dec
dec
pop
push
mov
cli
loopne
push
leave
enter
mov
or
pop
out
shrb
adc
add
in
pop
push
pushf
xor
das
sti
cmp
pop
addb
shrl
enter
das
and
push
sub
scas
push
sbb
addr16
sahf
jne
stc
adc
call
call
and
sub
sbb
or
dec
push
mov
cmp
int
mov
push
mov
pop
inc
fnstcw
mov
lock
jmp
pop
lods
and
xchg
cmp
clc
test
aam
das
cmpsl
mov
mov
sub
cmp
fwait
dec
cld
and
inc
push
pop
sub
insb
sbb
xor
push
cld
subb
xchg
add
jo
insb
sbb
lods
mov
imul
and
xchg
push
mov
ud0
aad
repz
xchg
mov
fucomip
push
ret
ss
call
loope
orl
pop
mov
jge
fiaddl
jo
imul
pushl
xchg
jne
sub
add
js
jo
fwait
fs
and
je
pcmpeqb
popa
add
inc
mov
mov
mov
jp
mov
or
pushf
inc
test
out
in
push
loope
push
mov
mov
lea
xor
push
push
add
insl
imul
out
xor
mov
xchg
mov
mov
pop
inc
xor
mov
dec
sbb
addl
mull
cmp
sbb
push
inc
jp
mov
das
enter
lret
mov
mov
inc
jo
stos
in
push
jnp
and
xchg
mov
sbb
sub
cmp
pushf
idivb
jp
scas
mov
arpl
adc
mov
outsl
and
fwait
sti
ficomps
sub
inc
fcompl
ljmp
lret
or
jo
aad
sbb
adc
sub
xchg
dec
mov
adcl
arpl
test
clc
add
lock
movsb
in
sub
push
gs
fldt
fisubrl
xlat
out
cmc
mov
loopne
cwtl
mov
and
imul
outsb
outsl
fiadds
rcll
sahf
out
fsub
mov
mov
or
jo
das
cli
xlat
or
lods
dec
shlb
mov
or
repz
mov
loope
lds
inc
or
xor
nop
bswap
lods
cld
aad
mov
jne
jmp
and
xor
sarb
out
pop
std
test
stos
mov
mov
xlat
fisubl
adc
stos
jne
sbb
pop
mov
test
cld
or
mov
outsl
js
sahf
inc
adc
push
mov
loopne
xchg
dec
mov
mov
jmp
mov
or
pop
mov
inc
dec
inc
jle
shlb
pusha
or
gs
push
jb
adc
cwtl
sub
mov
loopne
enter
pop
push
fsubl
stc
lea
or
push
pop
sti
lds
lock
sarb
in
mov
sbb
bound
imul
nop
jae
xchg
push
add
xchg
sbb
jp
mov
lret
cmp
aad
out
sub
stos
xor
add
out
jecxz
xor
mov
sub
push
xorps
pop
inc
add
push
repz
ljmp
jnp
movsb
cmpsb
and
cmp
out
pushf
pop
mov
and
stos
sbb
pop
mov
cmpb
repnz
scas
jno
int
inc
jnp
push
adc
jecxz
pop
mov
cltd
mov
cmp
pushl
ftst
pop
dec
cmp
aam
in
and
push
jle
orb
sub
sti
fnsetpm(287
outsl
dec
cmp
mov
repnz
xor
test
subb
push
shll
push
loope
mov
rol
xor
mov
cmpsl
jmp
xor
popf
testl
daa
lcall
lock
lods
xor
das
cs
hlt
jge
data16
out
sbb
dec
lret
xlat
fnstsw
mov
popf
cmpl
push
xor
fldt
lods
insb
cmp
lahf
insl
add
fstps
fsubrs
dec
rcr
inc
data16
loop
mov
fistpl
cmpsb
sbb
adc
or
mov
or
inc
adc
jns
and
insl
inc
and
orl
jae
icebp
sbb
outsb
test
sub
idiv
sbb
fsubs
out
out
sahf
jo
pavgw
sub
lahf
ud1
lods
fisttpll
xchg
mov
pop
stos
daa
xchg
fwait
lea
cmp
pop
loope
mov
push
ret
add
jno
mov
cmp
arpl
inc
jl
mov
cmp
test
sub
js
loope
xchg
test
xchg
neg
mov
in
sbb
jecxz
leave
dec
imul
mov
cmp
addr16
in
adc
fwait
lret
mov
add
or
sub
fnstsw
cld
sbb
aas
xchg
fwait
push
inc
jne
adc
fs
gs
or
cmp
std
scas
xchg
jle
mov
xchg
and
cli
in
nop
push
fsubr
cmpsl
into
or
pushf
mov
negl
cmp
scas
out
enter
or
pop
jo
inc
arpl
pop
outsl
fistpl
fsts
xor
jb
or
stos
and
xchg
inc
add
cli
mov
adc
pop
mov
inc
dec
cmc
sub
xlat
fisubrs
aas
outsb
sti
jne
inc
mov
cmp
enter
bound
sbb
mov
push
xchg
dec
pop
xchg
decl
leave
push
push
nop
shlb
and
dec
push
and
sbbl
jl
das
clc
push
push
mov
inc
sub
ret
movl
jge
sbb
loop
dec
add
jl
lcall
pop
jge
shr
ss
pop
jl
arpl
push
rol
fildl
cmpsl
sbbb
addr16
lahf
filds
jmp
fcomi
sbb
aad
ss
xchg
mov
stos
andl
ja
sbb
test
shrl
decb
cmp
ljmp
sbb
arpl
pop
mov
jle
lods
inc
sub
push
dec
lret
pop
mov
jecxz
addr16
lret
push
xor
loop
jne
dec
add
sub
int3
pop
dec
int3
sbb
lcall
dec
dec
sbb
pop
add
test
mov
push
mov
jnp
movsb
xchg
fldenv
je
fimull
incl
xchg
and
stos
push
ds
xor
rorl
js
shll
sbb
repz
not
push
movsl
mov
sbb
lea
mov
add
pop
jbe
mov
add
aad
cmc
cmc
inc
in
inc
or
add
es
xor
loop
aas
cld
bound
push
push
out
xchg
subl
icebp
cld
mov
std
sbb
fnstcw
popf
sub
or
cmc
or
test
insl
or
adc
and
mov
cmp
mulb
dec
in
popf
or
mov
xchg
out
fsubl
test
and
test
push
push
mov
jp
dec
sbb
js
mov
jns
stc
sub
mov
cli
and
popa
mov
xor
hlt
movsb
dec
xor
mov
loopne
sub
xlat
stc
or
std
addr16
add
divb
imul
jo
and
push
xchg
adc
cwtl
outsb
movsl
jmp
and
fcmovnb
cld
pop
mov
sbb
sbb
mov
xchg
lea
adc
cmp
inc
aad
outsl
sub
xchg
das
sub
push
iret
push
and
lcall
lods
mov
outsl
lods
push
lds
dec
pusha
inc
sbb
sbb
daa
sti
clc
test
cwtl
ds
pop
sbb
mov
sub
je
jno
test
sti
int
push
xchg
or
int
sbb
rcr
mov
loope
pcmpgtw
aas
cltd
jl,pn
lock
pop
outsl
or
xchg
jo
or
sbb
shrl
jl
pop
jb
fptan
in
pop
dec
pushf
int3
fnsave
cmc
xor
cmp
pop
stos
inc
cs
arpl
pop
mov
cmpsb
mov
sbb
xchg
mov
mov
jae
mov
fists
or
push
stos
mov
push
loope
adc
fwait
pop
stos
cltd
lods
loopne
outsb
into
push
popa
fisttpll
push
push
mov
or
daa
or
push
aad
inc
mov
push
mov
or
fst
es
mov
cmpl
pop
adc
inc
fcmovnbe
mov
shrb
imul
out
rorl
loopw
dec
mov
out
js
sahf
fisubs
inc
push
jbe
mov
bound
adc
pop
pop
adcl
xchg
inc
lcall
push
ds
sub
fildll
sub
nop
xchg
cltd
mov
out
jecxz
movl
ret
subb
cmp
jecxz
push
gs
ret
scas
push
je
pop
pusha
test
and
nop
sbb
aaa
cld
cmpsb
cmp
adc
fdivl
out
shr
mov
es
sub
xor
call
fnsave
xchg
cmp
and
mov
int3
pushf
dec
sub
fisttps
pop
mov
icebp
mov
xor
cmp
dec
xor
jb
movsb
cmp
gs
imul
dec
pop
adc
lret
xlat
outsb
xchg
fwait
je
mov
test
insl
mov
push
in
pop
pop
pop
sbbl
jp
adc
lcall
jg
fisttpll
mov
aas
rol
jl
push
sub
or
sub
aas
jbe
sahf
int
lods
xchg
roll
pop
mov
mov
jle
and
add
adc
insl
push
repz
mov
adcb
jo
push
cmpb
or
add
sbb
xchg
imul
xchg
sarl
mov
lret
out
inc
outsb
loope
cmp
jne
mov
or
and
sbb
ss
or
adc
mov
lea
push
sbb
pmulhuw
adc
cwtl
add
mov
mov
aas
or
hlt
pop
fimull
ficomps
shlb
adc
sbb
sub
test
add
mov
ret
imul
xchg
out
mov
dec
rcrb
sbbb
fistps
cmp
dec
ljmp
and
sbb
xor
push
aas
adc
cmp
mov
aad
sbb
mov
dec
lret
stc
pop
out
xorb
dec
mov
loopne
movsb
jp
sbb
inc
ljmp
add
xchg
aam
jle
xor
movsb
lret
ss
fstpl
ja
add
imul
sub
jno
movq
fmuls
cmp
xchg
cmp
jecxz
push
aaa
sbb
inc
and
xor
jae
push
rcll
mov
or
and
pushf
mov
std
rcrl
lret
fldcw
jge
enter
jmp
pop
mov
xlat
adc
es
xchg
clc
add
lods
fs
daa
mov
into
imul
add
mov
add
mov
negb
mov
xor
ds
lcall
or
lods
fdivrs
push
inc
mov
test
inc
negl
add
adc
mov
subw
fldl
jae
aad
std
sub
mov
cli
mov
pop
rcrl
mov
sbb
mov
push
leavew
push
inc
mov
jns
aad
lea
jo
push
outsl
mov
loop
pop
pop
aad
fmul
bound
inc
push
scas
popa
sub
sahf
xor
pop
notb
push
imul
out
iret
mov
insl
outsl
xor
stos
xchg
or
sahf
mov
lock
sbb
pop
and
mov
out
sub
scas
bound
or
and
sub
xchg
mov
fwait
icebp
inc
loopne
mul
adc
fisubrs
popf
arpl
stos
cmpsb
adc
adc
jae
mov
int
sbb
popf
push
ret
cltd
and
pop
imul
je
fdivs
mov
xor
mov
movsl
mov
ret
fadd
in
out
icebp
inc
push
ret
cmpsb
imul
cmp
inc
and
jns
mov
xchg
enter
lods
stos
in
mov
imul
fcoms
lds
mov
pop
sub
into
insb
ds
mov
rclb
ret
push
test
ja
sbb
js
push
sti
mov
or
pop
enter
xchg
out
sbb
xchg
mov
push
jl
enter
xlat
pop
mov
jl
enter
mov
je
sbb
sbb
cmpsb
xor
in
das
fistps
dec
mov
or
xchg
mov
jo
in
out
les
add
mov
inc
loope
push
adc
pop
popf
mov
cmpsl
negl
loop
sub
xor
cld
inc
daa
jbe
pop
mov
xor
mov
scas
xchg
or
adc
push
pusha
adc
cld
jo
mov
jp
subb
sbb
in
sbb
xor
int
cmpsb
inc
push
ljmp
pusha
sbb
add
and
adc
push
aam
xchg
and
pop
pop
inc
ljmp
mov
xchg
cmp
cwtl
sti
xchg
cmp
sub
or
int
fisttps
sub
ret
subl
push
pop
test
je
aas
xlat
inc
adc
inc
mov
bound
rcrb
sbb
pop
sti
and
mov
loopne
jmp
push
ja
and
std
dec
dec
mov
jae
push
decl
cmp
enter
inc
je
mov
add
stos
cwtl
loop
cmpsl
aam
push
jnp
inc
pop
mov
orl
push
push
jp
fdivr
sub
les
js
fstpl
lcall
jp
iret
adc
cmpsb
addl
xor
dec
repnz
inc
shlb
pop
inc
mov
cltd
fwait
imul
xchg
jmp
inc
sarb
mov
imul
jmp
insl
imul
out
outsl
inc
mov
test
mov
in
add
lret
test
mov
test
sub
or
or
inc
xor
adc
inc
aad
adc
mov
sub
jb
jnp
jmp
shlb
and
cmp
adc
loopne
xchg
fisttps
cmp
jmp
push
stos
pop
cltd
inc
aaa
lods
jns
adc
xchg
mov
cmpsb
cmp
xchg
fisubrs
mov
fildl
leave
xchg
adc
loope
insb
loopne
and
sub
cmpb
lods
shlb
mov
test
sbb
xor
movsl
jb
out
mov
inc
cltd
les
jnp
adc
nop
ror
cmpsl
mov
fs
fisubl
data16
fisttpll
jge
hlt
out
movsl
pop
mov
aas
ficompl
out
dec
in
xchg
dec
mov
push
sti
jbe
push
out
mov
push
aam
mov
pop
inc
sbb
sbb
cli
jae
adc
adc
fldcw
insl
lret
rclb
pop
mov
sarb
aad
jmp
sbb
push
mov
or
loop
test
or
rcrl
jb
icebp
pop
add
cmp
jl
call
std
subl
imul
push
xor
cmp
jg
arpl
sub
pop
dec
ret
jno
jne
stos
pop
into
dec
nopl
imul
fmuls
inc
adc
enter
sbb
fstpt
pop
call
addr16
daa
fstpt
adc
test
inc
mov
scas
xchg
inc
jbe
cmc
pushf
cmc
aam
hlt
lea
jae
pop
fcoms
sbb
std
into
and
mov
pop
ret
inc
flds
xchg
jle
and
aam
and
cmp
adc
sub
sbb
add
mov
cmpsl
dec
push
pop
jge
outsb
sahf
fsub
xchg
fs
or
xchg
stos
mov
pop
sub
xchg
jns
aaa
jg
fisubrs
cmpsl
incb
dec
adc
daa
push
subl
shll
pop
lea
inc
sbb
cmp
sbb
fstl
js
dec
add
dec
push
movsl
int
aam
push
out
push
xor
cmp
insb
nop
fidivrl
mov
hlt
sarl
sub
inc
jno
mov
mov
pushf
xlat
pop
mov
sahf
fiadds
jmp
dec
xchg
push
push
mov
add
hlt
xlat
mov
mov
add
sub
fwait
cmpsb
sub
jecxz
adc
add
jne
dec
in
and
mov
mov
arpl
std
adc
or
or
lcall
pop
xchg
out
rcrb
pop
scas
bound
xor
mov
jno
stc
sub
fimull
in
ficomps
pop
mov
push
push
mov
out
mov
cwtl
jb
adc
test
shrl
push
fiaddl
mov
pop
dec
out
cmp
jge
mov
mov
pop
xchg
jg
inc
rorb
add
rep
ss
jb
js
bound
jae
and
ss
mov
lahf
aad
dec
sub
jae
mov
les
fcmovnbe
fsubs
je
subl
mov
sub
lret
repz
mov
test
sbb
adc
and
loope
pop
adc
insb
push
lcall
jmp
mov
xor
jbe
sbb
pop
lods
xor
in
les
in
sti
mov
inc
out
xor
outsl
dec
xor
outsl
cmp
lret
and
sahf
adc
add
xchg
dec
insl
or
and
pop
sbb
mov
or
ret
pop
rolb
mov
push
jne
jmp
xchg
or
mov
mov
dec
xor
aad
inc
jb
jbe
ret
rcrl
mov
or
in
adc
sbb
xor
pop
mov
andb
lret
decl
sub
xchg
inc
mov
mov
xchg
sub
iret
les
xchg
add
adc
loop
push
xchg
xchg
dec
repz
push
inc
jp
repz
bound
fsubp
hlt
push
in
je
xor
mov
loope
fdivrs
fwait
shll
pop
push
cmp
cmp
inc
outsl
es
dec
fs
lds
jmp
pushf
xlat
test
ret
mov
imul
mov
sub
xlat
mov
xor
lret
and
loopne
ret
fisubrs
insl
mov
push
fsubl
mov
inc
xor
jns
mov
filds
sub
and
xor
ficompl
out
or
roll
stc
test
mov
xchg
pushf
js
int
fs
cltd
dec
mov
fwait
push
sub
dec
out
dec
add
xchg
dec
sub
ss
cmp
xor
xchg
cltd
mov
in
pop
lock
lock
and
in
pop
lahf
hlt
dec
push
fwait
cmp
ret
lea
mov
enter
mov
test
cld
icebp
xchg
jo
sbb
lock
pop
out
mov
or
and
add
sub
sub
sub
insb
pop
js
sbb
add
imul
mov
or
cmpsb
mov
cs
push
or
in
popa
add
sbb
inc
out
int3
jb
imul
dec
or
addl
pushf
jb
shrl
mov
xor
inc
xorb
aam
cmp
cmc
mov
mov
and
imul
mov
cmpsb
fldcw
mov
mov
outsb
aam
lea
add
cmc
sarl
xchg
pop
cmpb
loop
lods
fwait
mov
xor
adc
sbb
or
mov
dec
ret
lahf
out
les
jp
inc
sbb
in
and
xchg
ds
out
mov
adc
mov
popf
jno
sub
mov
stc
or
jmp
or
paddd
jecxz
dec
lahf
jg
loop
mov
sbb
or
xor
xor
testl
jb
jle
mov
xor
push
cmp
popf
pushf
mov
movsb
or
bound
incl
push
mov
dec
xchg
shrl
loope
in
cld
and
inc
cmpsb
bound
ret
test
cmp
cmpsl
push
icebp
lret
dec
mov
xchg
push
xsave
cmp
pop
aad
mov
gs
jno
mov
jg
dec
inc
int
mov
aaa
add
xor
xor
addr16
or
mov
roll
push
sub
lret
data16
push
adc
lds
and
lods
loope
sub
adc
dec
rolb
call
cltd
mov
mul
adc
repz
sub
outsl
xor
imul
sbb
leave
icebp
sti
pop
shll
mov
add
push
sbb
insb
xchg
cmpsl
and
iret
daa
jb
lahf
or
pushl
ja
pop
nop
fmuls
add
rol
clc
jmp
sub
or
add
push
dec
dec
xchg
addr16
insl
pop
call
add
lret
push
pusha
xor
jg
ljmp
aam
push
adc
ljmp
jge
xor
sub
in
cmpsb
clc
mov
jno
xor
push
in
jb
or
push
clc
call
adc
lea
popf
adc
call
ds
pop
pop
or
pop
and
and
xor
ret
shll
outsl
and
pop
pop
mov
xchg
repz
sbb
push
inc
xor
scas
cmpsl
idivl
sbb
lret
pusha
cmp
push
std
add
pop
aaa
repnz
add
in
ss
sbb
movsl
mov
push
or
mov
pop
xchg
sti
jae
sub
bound
push
repz
repz
sub
imul
adc
inc
test
jp
hlt
xor
les
lahf
jno
jo
insl
pop
dec
loop
add
or
xchg
inc
push
sub
nop
rorb
data16
pop
mov
sti
es
or
or
test
scas
xor
bound
loope
mov
fildl
cmp
iret
add
push
sti
push
mov
lods
loop
stos
jb
xchg
mov
int3
mov
scas
pop
out
xor
aam
stc
jne
adc
icebp
and
sti
add
mov
xor
dec
es
pop
add
jne
int
stc
es
stc
jno
ljmp
add
mov
sbb
in
loopne
out
xor
jmp
pop
jecxz
dec
jb
aam
sahf
xor
mov
xchg
pop
xchg
cmp
mov
adc
mov
push
mov
lea
scas
pop
adc
cmp
repz
int3
mov
pusha
pusha
mov
xchg
mov
in
clc
or
or
and
mov
and
xlat
add
test
sub
mov
lock
out
insl
push
test
xor
das
les
xchg
and
mov
ljmp
pop
add
scas
repnz
inc
jb
adc
pop
xor
sbb
add
mov
add
in
imul
pop
xor
pop
into
les
notb
hlt
pusha
daa
cmp
jmp
arpl
pop
fiadds
mov
scas
sarb
sub
pop
inc
outsb
imul
fs
call
xor
out
jnp
add
lea
xor
pop
aad
insl
push
lret
test
adc
and
rorl
dec
outsb
popf
jg
outsb
js
mov
mov
inc
pop
mov
inc
jecxz
fdivp
into
xchg
fwait
scas
mov
mov
insl
mov
push
lcall
popf
xlat
out
in
sub
mov
inc
xchg
bt
in
dec
push
sbb
rcrl
push
fs
mov
dec
mov
movsl
and
lret
outsl
in
lcall
sub
jecxz
push
pop
xchg
sbb
out
pop
adc
mov
cwtl
jl
or
lods
adc
or
or
cmc
scas
mov
enter
add
sbb
pop
mov
jae
jo
mov
scas
mov
gs
in
addr16
cwtl
mov
or
stc
mov
ficomps
mov
pop
test
jge
mov
ror
dec
or
cli
dec
or
or
jle
inc
mov
aaa
dec
popa
cmp
mov
repz
idiv
les
adc
xor
sub
jo
mov
mov
jb
cltd
pop
xchg
mov
out
icebp
imul
push
mov
fadd
pop
sub
aad
nop
jno
or
inc
out
scas
or
popa
out
ficompl
int3
fs
jecxz
inc
nop
in
lods
dec
rolb
js
rcrl
loope
inc
fildl
xlat
lods
outsl
push
clc
push
add
sti
dec
loope
leave
sub
mov
idivb
in
lret
cld
xchg
and
ret
mov
jne
mov
or
mov
pushf
jge
mov
pop
cld
mov
fbld
push
sahf
xchg
inc
jmp
mov
dec
lock
not
rcl
pop
add
or
icebp
outsb
int3
dec
or
mov
scas
repz
mov
mov
test
xchg
adc
cmp
ljmp
rorl
push
push
mov
cmpsl
jbe
xchg
das
pushf
xor
scas
sub
popf
jmp
sti
aad
out
push
xor
outsl
bswap
push
arpl
pop
in
arpl
dec
jo
fdivs
lahf
rorb
sbbb
add
mov
ret
ret
xchg
sbb
cmc
dec
and
test
sub
aas
daa
mov
mov
add
dec
test
hlt
add
ret
xor
pop
inc
mov
stos
test
inc
test
push
xlat
movsl
pop
push
add
cld
adcb
scas
or
mov
sub
pop
out
in
or
scas
int
leave
inc
iret
sahf
pop
scas
cli
int
andb
out
fisubrl
in
or
les
jno
mov
pop
sysret
dec
inc
ret
loopne
dec
cmp
adc
in
loope
lcall
fbstp
lock
repz
rdmsr
sti
push
cmpsb
xor
jno
in
cwtl
hlt
ss
idivb
inc
lahf
push
cmc
lods
loope
outsb
mov
xchg
orl
jno
dec
or
xor
nop
aaa
rcrb
inc
shrl
pop
add
adc
fsincos
xchg
inc
repnz
inc
push
lea
jo
dec
xor
inc
movsl
cmp
lods
syscall
sub
ja
cmp
loopne
add
divb
pusha
cmp
shl
sub
sbb
loopne
jmp
sbb
in
push
push
xlat
ja,pt
inc
push
pop
faddp
aam
or
insb
lock
loopne
in
mov
int3
mov
gs
push
sahf
dec
shll
pop
and
in
popf
lret
and
mov
add
outsl
xchg
insl
movlps
jb
hlt
shrb
sahf
cmp
mov
in
cmpsb
out
push
push
adc
push
js
stos
sbb
mov
stos
dec
jo
mov
inc
jmp
lahf
mov
cmp
shll
sti
xchg
pop
fldt
push
adc
rorb
pop
mov
add
mov
outsb
or
mov
fildll
push
xor
fdivs
push
sbb
push
inc
xor
adc
pop
mov
adc
imul
xchg
loope
xchg
cmc
ret
pop
pop
or
cmpsl
fadds
add
pusha
add
fisubrs
imul
imul
sub
add
xchg
orl
push
sti
xor
fbld
cltd
mov
shr
adc
iret
test
and
fnstcw
add
fwait
mov
mov
outsl
xchg
dec
sahf
lcall
pop
or
out
pop
imul
addr16
div
pop
pop
inc
lods
xor
ret
mov
sub
jecxz
jg
inc
ret
mov
push
jns
ljmp
mov
push
shrl
adc
push
js
adc
xchg
daa
in
mov
fisubrl
int
out
push
jnp
js
shll
jp
mov
adc
push
jno
stc
pusha
pop
fstpl
fiadds
mov
pop
mov
mov
inc
and
loop
mov
pop
jbe
push
sbb
int
jb
sub
or
pusha
mov
or
filds
push
xor
push
mov
leave
mov
fidivrl
lods
fwait
stos
aaa
lret
adc
and
popf
sub
mov
fs
mov
call
mov
outsl
nop
cmp
iret
pop
push
ljmp
test
dec
mov
aam
rcll
ret
out
je,pn
adc
xor
rclb
or
jbe
lds
lcall
stc
test
lods
pusha
cmpsl
mov
scas
loopne
push
fcoms
push
push
inc
sub
fcoml
mov
fsubs
aam
fildll
add
or
bound
mov
push
movzwl
pushf
push
inc
imul
js
jle
pop
inc
cli
and
mov
pop
out
js
inc
iret
cmp
push
inc
dec
pop
jp
push
sub
fistps
int
jmp
dec
lahf
lods
rcll
and
in
inc
mov
faddl
adc
mov
scas
push
cmp
ljmp
mov
insb
jnp
adc
arpl
mov
in
push
ret
xchg
or
repnz
movsb
mov
mov
inc
insl
mov
iret
sarl
pop
aas
mov
in
xor
dec
xchg
adc
decl
mov
xchg
aaa
stos
mov
jnp
and
jb
inc
out
push
xlat
hlt
ret
mov
adc
pop
push
call
fwait
popf
out
movsl
sub
push
push
cs
pop
fwait
inc
push
in
inc
test
adc
push
bound
pop
enter
inc
mov
or
jmp
out
mov
xor
jge
shrb
hlt
xchg
repnz
xchg
call
mov
jo
and
pop
jl
lcall
xor
imul
jns
mov
mov
mov
aaa
mov
movsl
nop
rcll
scas
mov
mov
lods
ret
jge
pop
and
add
adc
add
idivb
icebp
in
insl
fdivl
mov
imul
mov
mov
mov
push
dec
stos
loope
pop
jmp
imul
push
xchg
daa
inc
push
sti
mov
or
push
pop
mov
out
dec
std
fs
xchg
mov
push
lcall
push
sub
sub
sub
mov
cs
mov
jp
in
mov
or
jbe
addr16
sahf
sub
sbbl
push
push
out
mov
sbb
icebp
cmp
pop
aam
jmp
les
mov
xrelease
xor
jle
shlb
fdivrp
cli
rcrl
out
mov
fiadds
inc
notl
mov
insb
or
mov
sbb
mov
mov
dec
arpl
ret
pop
push
popf
ja
mov
sbb
xor
insl
mov
mov
stos
les
dec
leave
inc
mov
je
cli
sub
sar
aas
mov
in
cmp
in
rcr
inc
mov
xor
jge
sbb
dec
addr16
js
aaa
lahf
xor
mov
inc
popf
mov
jle
lods
and
rcrl
jmp
lahf
cmpsl
mov
jg
or
sbb
pusha
sub
jns
icebp
jmp
loopne
push
adc
xchg
and
sub
stos
cld
fisubrs
hlt
mov
mov
cmp
pop
icebp
xchg
jmp
lea
sub
or
and
negb
and
out
sarb
dec
insl
xchg
lret
in
pop
dec
dec
xchg
xchg
adc
xchg
jle
pop
and
ret
hlt
mov
je
xchg
aaa
push
scas
dec
push
test
cld
bound
inc
mov
xchg
out
enter
xor
pop
push
daa
xchg
fstl
std
test
sbb
xlat
push
out
mov
lcall
mov
imul
jo
add
jl
xchg
jbe
mov
int
jne
imul
in
popf
outsl
add
push
ret
push
mov
repz
adc
mov
in
idivb
jge
je
mov
shll
sbb
xor
jb
ret
lret
push
dec
add
mov
and
into
out
push
ficoml
jne
adc
imul
sarb
or
mov
pop
ja
pop
cmp
hlt
fimuls
push
mov
jae
int
push
xchg
cmp
sti
push
jne
das
pop
mov
cwtl
dec
jne
cmp
insb
into
loopne
add
jb
add
add
jae
mov
sub
mov
or
sbb
pushf
adc
sub
cmp
leave
adcl
xor
cmp
fistl
inc
xchg
lret
pop
aaa
shl
fsub
jne
sub
in
dec
push
fistpl
pop
cmc
adc
andl
xor
fsubs
pop
into
aaa
xor
mov
push
add
int
subb
imul
push
cwtl
loop
pop
xchg
sti
mov
adc
scas
adc
popa
push
mov
stos
jns
ss
jae
cmpsl
mov
or
pop
push
and
jae
rol
jno
stos
ret
pop
gs
imull
mov
mov
imul
push
nop
mov
xorl
jecxz
mov
mov
mov
and
insl
out
mov
lahf
pushf
pop
ds
mov
mov
add
mov
out
mov
push
lea
jg
leave
addl
jecxz
jne
les
in
popf
xchg
push
dec
shl
inc
outsb
jbe
cmp
lcall
and
popf
subb
shl
daa
xor
xlat
sbb
sahf
out
cld
decb
xor
fwait
inc
mov
in
xor
xor
icebp
rcll
lods
push
push
ret
cmp
scas
mov
push
fldl
push
xchg
lcall
sbb
ss
iret
or
mov
push
adc
int3
inc
pop
lea
fildl
leave
mov
dec
andw
notb
nop
outsb
sub
test
cli
bound
icebp
stos
cmp
xchg
ret
or
imul
mov
rorb
adc
das
mov
clc
or
out
lds
mov
jle
rcl
xor
jmp
sub
jo
xchg
nop
mov
dec
ja
cmp
cld
rcll
fimull
movsb
inc
ja
mov
sbb
and
in
js
ds
mov
movsl
lahf
pushw
lahf
scas
lcall
test
cmp
jmp
das
cmp
inc
fwait
or
xchg
ss
cmp
add
add
adc
xchg
daa
cmpsl
clc
das
push
inc
pop
cmp
or
mov
das
es
add
dec
popf
xlat
jns
lcall
mov
in
aaa
xlat
push
jne
ret
add
ja
xor
cmc
scas
push
stc
jp
xchg
sbb
mov
sub
pop
dec
out
test
fdivrl
sti
pop
sub
andb
test
call
cs
test
fists
int
jle
add
push
add
or
push
lock
sbb
ret
dec
repnz
jecxz
imul
pop
mov
jg
fstpl
xorb
into
movsl
or
pop
jle
insb
mov
sub
outsl
mov
xchg
cmp
cmc
xor
loope
enter
imull
cmp
mov
inc
fucom
and
add
pop
jne
sub
sets
fidivl
cmpb
sti
and
mov
jp
mov
mov
aam
stc
and
leave
int3
or
jg
xlat
arpl
cltd
jb
dec
cmp
popa
push
out
call
dec
inc
daa
inc
loope
daa
jmp
cmp
mov
push
int
mov
sbb
add
adc
push
mov
ret
cmp
push
jo
jo
mov
cli
xor
xchg
jae
lahf
icebp
push
pop
xor
out
dec
push
and
aas
mov
mov
enter
xor
xchg
pop
push
mov
sbb
lods
fnstcw
mov
cmp
mov
push
loopne
fistpll
dec
jl
bound
jg
in
jb
and
rolb
xchg
js
or
push
xor
jle
jmp
mov
icebp
scas
dec
push
and
test
jge
xlat
movsl
call
adc
push
shr
xchg
repz
repnz
cmp
sbb
adc
cmp
cs
mov
ds
mov
sub
push
js
in
outsl
iret
pop
imul
das
icebp
dec
fwait
movsb
lea
enter
mov
pusha
jecxz
mov
jne
inc
sub
ret
sbb
jae
popl
gs
in
xor
in
or
add
sub
dec
sub
cmp
pop
ss
push
or
jle
xorl
ljmp
and
sahf
pop
mov
jbe
xchg
jle
sub
fisttpll
repnz
ja
and
stos
mov
cmp
push
mov
test
loop
jae
dec
sarl
jmp
data16
and
sub
outsb
insl
and
fs
in
lcall
fists
sub
das
push
push
adc
inc
pop
cltd
xlat
jo
mov
jo
xchg
lret
aam
add
loope
or
test
inc
mov
sub
daa
xor
xchg
push
xchg
cmp
hlt
inc
pop
jbe
inc
test
xor
push
scas
ljmp
add
xchg
sub
call
mov
jb
xchg
sarl
push
data16
es
push
or
inc
lret
ret
push
push
push
pop
loope
push
out
aam
and
sbb
xor
xlat
pop
fucomip
out
fimull
push
push
xchg
or
inc
push
es
xor
cmpsl
sti
sub
orb
dec
pop
imulb
or
ja
add
mov
push
push
loop
xlat
mov
jl
mov
loop
int
cs
sti
adc
or
jp
push
loopne
insl
push
subb
mov
rcll
lcall
mov
pop
hlt
fwait
stc
out
pop
push
test
jg
adc
fnstcw
jmp
inc
push
jl
xchg
aad
loope
and
mov
xlat
lea
addr16
mov
jge
xor
cli
xchg
outsb
aaa
in
xchg
in
loop
sub
xlat
adc
das
lcall
rcll
sub
into
cmc
add
aaa
jecxz
mov
pcmpeqw
adc
les
mov
clc
inc
in
in
popl
out
scas
fs
jne
inc
lret
je
js
push
jp
test
xorl
imul
mov
rol
fdivl
std
int
imulb
push
cmpsl
inc
insl
xchg
dec
cld
adc
jae
jmp
clc
movsb
scas
std
lds
fwait
or
fidivrl
mov
pushf
pop
mov
mov
xchg
out
insl
pop
rcll
jo
pop
mov
fwait
aam
or
xor
push
fmuls
rorl
mov
adc
arpl
loopnew
fistps
push
subb
das
imul
push
inc
pop
sbb
adc
xor
pushf
xchg
xchg
or
test
repnz
pop
or
js
pop
push
iret
jp
adc
and
sub
xchg
lock
dec
aaa
cmp
out
adc
les
sbb
lahf
mov
clc
inc
sbb
rorl
inc
out
xor
add
das
push
test
cmpsl
insl
xor
cmp
push
in
xor
lds
lcall
jg
dec
mov
mov
inc
out
mov
jbe
or
sahf
xor
call
sub
mov
sbb
xchg
push
pop
inc
mov
loop
fiadds
xor
jae
mov
xchg
mov
sti
ss
imul
je
loop
gs
loopne
add
fidivl
or
cld
lcall
test
nop
mov
dec
je
adc
fsub
mov
loop
sub
scas
sti
pop
inc
lods
icebp
rcl
pop
cli
dec
xor
or
movsb
ret
jno
mov
xor
repnz
inc
mov
lods
mov
xlat
std
imulb
js
fst
hlt
insb
fidivrl
push
pushf
notb
mov
cmpsb
jl
push
add
in
push
testb
imul
jg
das
imul
into
jle
stos
mov
and
xchg
scas
push
add
mov
push
adc
dec
cmp
add
les
or
outsl
xchg
push
std
jnp
gs
xor
decb
rcrb
iret
cltd
sub
fwait
movsb
sbb
dec
into
aas
inc
pop
lcall
cmp
nop
lods
add
push
dec
stos
inc
jp
orb
push
test
cwtl
jp
pop
jmp
loope
xchg
fstp
jl
mov
or
mov
mov
push
shlb
andl
xor
jnp
inc
fs
jge
and
fdivrl
fistl
dec
imulb
adc
arpl
dec
mov
mov
ret
shll
inc
fldenv
inc
cli
std
sub
ror
int3
jns
cmp
jbe
and
mov
xor
ljmp
inc
int
fadd
outsb
fcmovu
into
xchg
mov
xchg
lahf
jmp
inc
lret
inc
push
out
push
adc
popl
mov
fwait
jne
stos
stc
push
inc
bound
dec
dec
out
loop
adc
pmullw
jge
out
pusha
inc
pusha
xor
jp
int
dec
jae
inc
xor
call
inc
jl
inc
sbb
bound
test
xor
ret
mov
imul
les
dec
sub
pop
inc
push
push
jo
call
ljmp
sbb
or
pushf
pop
adc
and
fistpl
fwait
in
sub
pop
icebp
fistpl
das
aas
lea
adc
repnz
out
cmp
mov
xor
mov
clc
add
aaa
mov
adc
jnp
ds
rcll
in
pop
jle
aad
test
stc
mov
andl
mov
jae
xlat
scas
push
sbb
mov
ret
and
push
pop
hlt
or
insl
les
popf
mov
fidivs
js
jno
js
nop
sbb
movsl
xor
mov
dec
imulb
test
ss
lods
out
sub
adc
mov
mov
pop
cltd
mov
add
popw
adc
sahf
dec
loopne
xchg
and
outsl
jl
addl
fs
shl
sbb
pushf
pop
cmpsb
inc
add
jle
test
ljmp
mov
std
xor
pop
int
in
stos
test
adc
mov
lret
xchg
sub
aaa
out
xor
sub
lea
mov
aas
aaa
sbb
fnsave
xchg
repnz
nop
lahf
sbb
clc
lcall
inc
lret
push
arpl
popf
icebp
sub
fbld
loop
add
xchg
jp
ret
out
fidivrs
mov
in
cmp
dec
pop
xchg
cmp
es
ficoms
ret
mov
movsb
and
enter
leave
bnd
jecxz
fidivrs
addr16
jne
dec
mov
les
pop
arpl
js
cltd
enter
add
lock
stc
movsb
in
or
sbb
mov
fistps
fstpl
es
mov
lahf
pop
sti
aad
push
sub
aad
fcomp
clc
call
jp
cmc
enter
sbbl
sahf
and
mov
aaa
sti
push
out
je
test
mov
xchg
ret
lds
dec
repnz
sbb
clc
inc
movsb
cli
and
cmp
cwtl
lea
and
sub
cs
mov
pop
push
inc
mov
out
insl
bound
in
pop
xlat
push
lods
and
hlt
popf
push
incl
mov
jp
lea
scas
test
and
lahf
jns
js
xchg
pop
lret
subl
cmp
mov
or
push
sub
mov
mov
imul
inc
inc
ror
cmp
jne
testb
or
call
ja
scas
jmp
gs
cmp
push
jl
cmpsb
lock
jns
inc
dec
jb
into
lcall
iret
pop
fisttps
test
cmp
out
popa
sub
inc
cmp
out
mov
or
inc
stos
loop
imul
mov
xchg
jp
leave
ret
lret
dec
clc
outsl
lcall
pop
push
mov
repnz
inc
cmpsb
mov
pop
push
jne
fwait
sbb
jecxz
sahf
test
repnz
clc
cwtl
jmp
push
pop
push
aas
jns
popa
mov
inc
pop
es
addr16
repnz
jnp
push
mov
adc
dec
pop
lods
pop
les
ljmp
mov
xor
sbb
or
cmpsl
lcall
movsb
outsb
loope
nop
frndint
rorl
int3
ret
pop
cmp
js
inc
inc
push
test
add
dec
cmp
adc
fsts
imull
leave
ret
andb
movsl
dec
aas
jg
add
mov
nop
push
xchg
mov
in
or
cwtl
dec
push
add
xchg
inc
je
xor
fcmovu
inc
pop
mov
cs
mov
xor
test
xchg
dec
sahf
addr16
mov
stos
loope
hlt
popf
inc
adcl
adc
push
stos
loope
add
arpl
adc
and
sbb
cmp
mov
xchg
pusha
das
loope
pop
add
mov
and
out
loopne
repnz
and
adc
or
shlb
jns
into
and
enter
xchg
rol
dec
dec
bound
inc
scas
adc
jmp
mov
push
xchg
inc
add
push
iret
inc
imul
testb
rcrl
aaa
mov
orl
scas
jl
cld
js
lods
mov
sub
int3
inc
sbb
mov
xor
pushf
pop
popf
sub
aas
aam
movsb
pop
leave
enter
sbb
cmp
clc
dec
lods
xchg
or
mov
push
daa
jmp
iret
loop
jle
enter
add
add
push
iret
adc
jmp
hlt
dec
clc
xor
lret
rclb
stc
and
lods
push
xor
jle,pn
jbe
pop
mov
push
mov
das
jae
test
scas
fwait
cmp
xor
jb
mov
mov
nop
mov
hlt
dec
outsl
cmpsl
faddl
mov
ffreep
push
nop
mov
loopne
pop
add
int3
jb
addb
sub
jp
andl
fistpll
mov
mov
std
pop
pop
int3
lods
mov
mov
adc
in
inc
idivb
cs
sbb
idiv
and
subb
rcr
loopne
hlt
pop
and
fucomip
add
stc
iret
push
or
nop
mov
jmp
js
sbb
inc
stc
sbb
xchg
scas
call
mov
fsubs
frstor
lret
cmpsb
sahf
mov
xor
jbe
xlat
and
mov
jle
and
xor
pusha
mov
lret
mov
sbb
scas
jbe
sbb
lds
repz
jns
sbb
pusha
sbb
les
sub
rcll
mov
hlt
xchg
jmp
xor
mov
mov
push
incl
enter
stos
repnz
sub
aas
xor
xchg
dec
cmp
test
in
les
addb
lods
jb
inc
es
pop
cmp
or
cmp
je
push
clc
or
fcmovnbe
negl
push
xchg
jae
mov
and
sub
cltd
push
cmp
mov
sub
push
mov
push
sub
jb
cwtl
clc
cmp
xchg
mov
jo
mov
mov
clc
adcl
pop
inc
adc
mov
pusha
mov
roll
jg
lcall
jp
pushf
mov
mov
pop
add
sbb
push
inc
out
xor
std
ljmp
add
lock
lretw
jno
shr
add
ljmp
pop
push
xor
sub
pop
inc
xchg
xor
or
jb
call
xchg
fmuls
pop
xor
shll
push
iret
shll
push
or
xchg
aaa
mov
lea
sub
jno
mov
pop
aaa
mov
enter
adc
movsl
inc
xchg
and
cli
arpl
cmp
sahf
scas
dec
or
mov
sub
xchg
mov
fmull
add
out
pushf
adc
ds
ljmp
sti
add
fiaddl
cld
mov
add
outsb
mov
imulb
jmp
xor
std
cmp
mov
xor
mov
ja
aas
stos
inc
nop
inc
stos
push
shl
push
clc
cli
pop
ret
fdivl
mov
lods
pop
and
out
int
xor
xor
pop
pop
mov
or
xchg
iret
jo
stos
jnp
push
mov
int3
sub
sub
ljmp
sbb
lds
xor
cmp
xor
outsl
mov
loope
enter
test
les
sub
imul
jmp
sbb
jle
loop
dec
or
cmc
inc
pop
sbb
andl
xchg
mov
xor
shll
hlt
out
cs
dec
imul
shll
or
scas
mov
mov
mov
cld
or
popf
add
mov
jnp
stos
cmp
push
cmpsb
mov
mov
and
arpl
push
mov
lret
popf
xor
and
jnp
lea
adc
imul
cltd
enter
loopne
lea
aam
leave
lret
mov
dec
push
push
or
jecxz
out
in
sub
into
mov
xchg
in
shll
mov
hlt
ret
fcompl
lahf
imul
mov
xor
mov
into
test
jp
cltd
or
adc
xchg
sbb
shll
mov
shlb
rolb
xchg
dec
cmpsl
addb
cmp
jmp
rclb
mov
xor
cwtl
addr16
xor
fsubl
xchg
mov
pop
xlat
push
test
cmp
or
xchg
shl
xchg
cmpsl
out
int3
mov
mov
fmul
into
xchg
stos
les
sbbb
popa
cltd
lds
adc
dec
cmp
scas
movsl
or
cmp
jle
mov
cmp
inc
sub
pusha
test
insb
loope
adc
pop
lods
jge
in
fs
out
jbe
mov
pop
ss
testl
stc
js
cmp
pop
mov
repnz
cs
outsl
mov
adc
mov
cs
cmp
adc
xchg
inc
jbe
addr16
je
lret
into
aas
cmp
push
popf
sub
nop
sub
mov
hlt
mov
insb
adc
insb
clc
pop
ss
ret
mov
ljmp
xchg
jae
daa
in
push
scas
sbb
lods
shll
repnz
inc
jns
fidivl
mov
xor
lea
imul
cmpl
imul
sbb
psubb
out
repnz
gs
das
xchg
xor
mov
or
dec
xor
imul
push
xor
push
lret
cmp
fadds
lea
js
repnz
dec
sub
insl
sbb
ss
fcompl
xchg
das
adc
iret
cmp
stos
clc
inc
mov
lret
mov
fisubrl
and
add
arpl
pushf
popa
xorl
aam
ja
and
shl
push
pushf
jo
fidivrl
cmp
cmpsb
rolb
cltd
jge
mov
add
jns
mov
dec
push
imul
stos
add
xor
lods
adc
scas
cmc
xor
mov
out
sbb
jne
std
js
leave
cmpsl
pop
pop
shrb
mov
roll
push
mov
xchg
clc
std
daa
test
sbb
inc
negl
repnz
das
enter
clc
popa
push
cli
pop
pop
or
icebp
mov
sarb
mov
jne
dec
imul
addb
psubd
pop
pop
mov
imul
cmc
push
imul
and
inc
pop
addr16
movsb
leave
js
push
mov
or
jge
cmp
jp
push
in
xlat
add
xor
in
add
add
jl
fsubrp
pop
jb
test
ljmp
lods
daa
mov
or
mov
dec
lret
das
sar
nop
xchg
pop
push
xchg
cmc
jne
mov
cmp
rclb
test
xor
xor
pop
cltd
roll
pop
adc
mov
jnp
and
repnz
mov
mov
popf
cmc
aas
mov
or
movsl
stos
popf
in
xor
inc
int3
xchg
fstpl
pop
sub
lahf
xchg
cmp
xorb
pusha
dec
lret
mov
or
push
sarl
std
jp
insl
fwait
addr16
push
ss
enter
imul
mov
stos
sbb
lods
mov
sti
aad
adc
cmp
add
cmpsb
cmp
push
and
push
scas
rcrl
sti
imul
add
sbb
xor
add
or
mov
insb
ret
outsb
cmp
pop
mov
sahf
jl
pcmpgtd
sahf
out
aas
dec
push
jb
xchg
and
daa
push
daa
jle
inc
inc
xor
pusha
lret
jno
data16
js
mov
ss
jno
mov
into
in
xchg
ja
mov
xchg
cwtl
js
shl
fnsave
movsb
mov
jmp
ret
push
pushf
adc
sbb
adc
push
cmp
xchg
jns
jl
lcall
outsl
adc
lock
adc
roll
mov
test
mov
push
imull
pop
cli
jl
cli
cld
or
mov
lods
subl
mov
mov
fdivs
iret
shlb
push
stos
jnp
push
xchg
xchg
dec
cmpsl
daa
add
in
push
adc
push
or
jmp
mov
xchg
dec
push
lock
pop
mov
rolb
fisttpll
pushf
sbb
dec
scas
cmpsb
adc
pop
xlat
aas
cli
push
cltd
fs
xor
mov
lret
sbb
inc
icebp
fisttpl
xchg
mov
sub
imul
xor
xlat
pusha
cltd
pop
out
rcrb
cmpsb
fcom
js
add
mov
cmc
sub
test
fisubrl
ret
pop
bound
adc
movsb
pop
mov
mov
and
fsub
jg
fadd
in
jbe
push
pusha
ds
popf
aam
ret
cmp
xor
int
mov
into
cmp
pop
enter
xor
test
add
mov
std
fstps
fs
or
jns
pop
cmp
cmp
cltd
fnstsw
dec
and
dec
outsb
mov
cli
xchg
xchg
or
fisubrl
push
jg
push
inc
mov
jge
in
pop
pop
outsb
icebp
jmp
lds
mov
mov
in
aad
mov
mov
or
mul
into
hlt
push
insb
imul
dec
in
and
lahf
in
or
jns
pop
ss
iret
lret
sub
mov
maskmovq
notl
jl
hlt
fs
lcall
cmp
push
faddl
sarb
std
gs
mov
cmp
jbe
shl
in
stc
dec
xor
and
pop
sbb
jp
dec
cmpl
out
inc
dec
in
insl
out
xchg
insb
pop
mov
in
cs
push
in
mov
in
mov
dec
prefetch
sahf
hlt
or
mov
iret
cmp
inc
mov
pop
rcl
push
cmc
or
dec
sti
jmp
rclb
out
cmp
dec
sub
es
lret
lods
popa
gs
jae
pop
inc
dec
into
or
jg
push
jmp
cwtl
jmp
in
in
push
mov
mov
xchg
xchg
decl
outsb
jg
add
dec
fnsave
mov
adc
aam
push
inc
pop
xchg
mov
aad
push
dec
lods
mov
stos
je
push
cmp
jp
mov
in
pop
jae
lods
add
cld
pop
clc
sbb
jo
sub
outsl
insb
sbb
imul
push
sbb
xchg
dec
movsb
ficoml
sbb
dec
mov
xchg
push
sti
xchg
mov
sbb
lret
xchg
jecxz
push
out
cmc
fwait
lods
stos
sub
clc
push
cmpsb
sbb
inc
pop
mov
lea
cld
mov
xor
divl
data16
ret
pop
cli
jecxz
lahf
mov
push
ds
ror
imul
loope
pop
xlat
mov
xor
fldl
dec
xchg
push
clc
xor
dec
mov
cmpsl
mov
push
enter
insl
inc
mov
and
xor
fs
cmc
pop
shrl
jle
add
int3
and
mov
ljmp
decb
sub
inc
inc
fnstenv
xorl
rolb
fiadds
out
rorl
cmp
xor
repz
mov
mov
lea
push
js
insl
jecxz
inc
adc
cmpsl
cmp
int
xchg
push
test
jp
or
fsubs
loopne
xlat
mov
adc
rcrb
sbb
mov
cwtl
sub
arpl
and
xchg
sub
aas
out
fcmovb
jae
les
dec
mov
inc
leave
push
mov
ja
mov
or
into
jg
insb
jae
push
push
dec
xchg
cld
push
ret
push
lds
inc
dec
mov
jbe
xor
mov
aad
adc
or
call
pop
push
or
xchg
addr16
rorb
rcrl
roll
pop
addl
and
movsb
into
pop
pcmpgtb
scas
dec
mov
int3
sbb
ja
nop
jne
cmp
sub
push
mov
cld
adc
mov
je
cmp
andl
xor
or
pusha
je
idivl
idiv
mov
cmp
sub
aam
sub
mov
ljmp
pop
xchg
mov
loopne
nop
lcall
inc
test
imul
pop
pop
xor
std
cmp
pusha
pop
ljmp
loopne
cmc
inc
mov
mov
repnz
dec
sbbb
insb
xor
or
mov
lock
hlt
pop
pop
adc
add
cs
iret
adc
mov
inc
or
dec
cmp
push
mov
jbe
popa
lods
and
mov
and
xchg
pop
pushf
aaa
inc
rcrl
dec
inc
pop
nop
inc
xor
or
mov
mov
in
ss
lods
stc
sub
inc
push
mov
add
scas
jecxz
adc
loop
shl
xor
imull
xchg
cli
mov
bound
scas
inc
xor
xchg
das
aam
fs
mov
cmp
cmpsl
mov
lcall
and
aam
jbe
jno
sbb
mov
lahf
in
adc
inc
xor
shlb
pop
sbb
shlb
inc
cmp
sub
aam
ret
les
mov
in
insl
sub
add
pop
push
jecxz
jecxz
mov
sub
fiaddl
mov
mov
es
out
jae
mov
adc
jnp
xor
je
mov
lret
xor
stos
test
mov
push
inc
cld
lcall
cmpb
mov
xchg
xchg
movsl
je
push
mov
loopne
pop
loope
aam
cltd
lods
sbb
sbbl
mov
loope
jmp
mov
jae
jecxz
shr
cltd
fwait
jecxz
push
jle
adc
inc
icebp
adc
and
xor
jbe
out
fisttps
test
and
adc
loop
mov
dec
xchg
jl
leave
push
fs
testl
in
loop
mov
test
and
mov
or
sbbl
rcrb
in
movsl
sub
bound
jnp
push
enter
or
adc
mov
pop
das
jbe
aam
push
or
loopne
mov
push
pop
adc
adc
repnz
sub
imul
dec
movsl
jmp
loop
jl
test
mov
out
fs
push
je
ret
lods
mov
lahf
sbb
inc
repnz
mov
lret
movsl
stos
mov
sub
inc
mov
mov
dec
ret
movsl
pushf
cs
lods
popa
rcr
outsl
cld
or
rcr
faddl
cli
cmp
imul
movsb
sub
xor
imul
sbb
xchg
dec
mov
cli
scas
jecxz
out
lea
jp
jb
mov
les
loop
stos
fdivl
jp
aad
loope
sub
into
nop
push
movsb
cmp
push
mov
and
add
xchg
cmp
jo
out
cli
jp
ljmp
fstps
sbb
xor
pop
sub
cmp
mov
push
repnz
xchg
sbb
gs
movsb
imul
ljmp
leave
fnstsw
add
fidivs
dec
push
dec
fstpt
lahf
fwait
xor
mov
mov
ss
ror
sbb
stos
decl
scas
mov
cmp
cli
ja
out
stc
hlt
push
and
jl
ljmp
insb
mov
dec
adc
or
loope
jmp
xor
ljmp
mov
jl
aam
les
push
icebp
inc
filds
mov
pop
or
lds
ds
les
loop
sbb
xor
das
mov
xchg
and
fiadds
inc
leave
stos
lcall
or
pop
dec
lods
shrb
loopne
push
cmp
and
cli
and
mov
adc
sbb
pop
lea
jge
cmpsl
fcomp
into
mov
cmpsb
repz
das
fs
mov
or
loop
sti
jg
sub
les
in
inc
outsb
subl
in
adcl
and
sub
inc
test
call
stos
movsl
adc
pop
mov
dec
jmp
and
xchg
pop
push
aad
jg
pop
xchg
lret
imul
cmpl
nop
xor
mov
or
rclb
push
fs
adc
mov
hlt
rcrl
push
cs
sbb
pushf
xchg
jns
lds
or
push
gs
and
in
push
mov
cmpsb
dec
mov
xor
loope
push
lret
lds
lahf
and
mov
jmp
jl
jne
data16
mov
push
mov
and
loopne
mov
daa
imul
les
clc
and
add
dec
mov
pop
in
pop
ret
cmpb
fprem
fwait
aaa
mov
sbb
popf
cli
daa
loop
shl
loopne
mov
and
cmpsb
pop
cmp
add
add
popf
aam
mov
dec
mov
repz
add
mov
or
xor
ss
pushl
cltd
or
dec
pop
js
inc
cs
push
lock
test
arpl
leave
into
mov
loopne
mov
bound
adc
test
cltd
sahf
popa
mov
or
pop
mov
fisttpl
sub
xchg
fldcw
scas
adc
test
in
sub
mov
frstor
sbb
inc
adc
xor
lea
push
lcall
fisubrl
test
mov
test
outsl
pop
cmpsb
xorw
or
insl
aam
mov
cmp
pop
aaa
mov
hlt
lret
pusha
pop
pusha
fs
mov
test
xchg
flds
add
lret
mov
repnz
call
loope
clc
lea
cmp
arpl
ljmp
ds
les
in
movsl
adc
test
imul
xchg
scas
push
adcb
mov
add
mov
adc
cltd
push
xor
pushf
and
pusha
add
cmp
gs
mov
cmp
loopne
pusha
add
sub
add
fsubrl
clc
or
addr16
sub
movsb
pop
cwtl
je
mov
insl
outsl
clc
push
dec
xchg
xor
leave
push
sbbb
in
call
in
add
xchg
push
dec
mov
add
cld
mov
lahf
sbb
sbb
and
mov
shll
push
dec
jnp
sarb
outsl
orb
sub
test
imulb
mov
js
cmpsl
mov
lahf
xlat
and
or
popf
sysenter
imul
xchg
lods
mov
into
mov
sbb
and
lds
subl
out
imul
cmp
and
mov
testl
cwtl
in
pop
mov
stos
mov
mov
sahf
sbb
xor
roll
xchg
mov
mov
fnsave
mov
jecxz
les
mov
adc
daa
iret
jl
adc
adc
inc
insb
test
fsubl
dec
mov
rep
aam
sbb
rcr
mov
stos
push
lret
clc
and
jno
in
mov
into
in
mov
pop
call
lcall
movsb
xlat
fs
lock
mov
icebp
xor
xchg
out
mov
xchg
popa
pushf
testb
and
mov
and
es
mov
shlb
mov
push
lock
dec
sbb
les
xchg
ljmp
decl
sarb
lock
pop
call
fists
jp
ss
test
sub
call
cwtl
into
cmp
lock
xchg
mov
add
in
rcrb
fiaddl
add
fs
aad
test
repnz
pop
push
pushf
popa
out
mov
and
push
and
or
push
nop
repnz
sbb
repz
jecxz
inc
sbb
xchg
sbb
in
in
lcall
pop
xchg
lahf
mov
and
mov
std
mov
lds
push
inc
aaa
pop
insb
cmp
mov
mov
adc
cmc
lock
test
cmpsb
sbb
inc
xor
pop
pop
add
js
popf
push
push
lahf
adc
pushf
adc
fdivrl
mov
frndint
xor
std
add
sub
shll
sbb
ficoms
cmp
mov
insl
and
sub
mov
dec
shll
sub
inc
mov
ljmp
ret
repnz
add
push
add
mov
dec
lods
repz
mov
out
push
mov
jg
jge
mov
xchg
push
lcall
or
sub
shl
push
orb
sbb
mov
xchg
addr16
xchg
add
es
popf
pop
sbb
inc
mov
into
sbb
mov
pop
inc
sarl
arpl
sub
sub
cmpsb
pop
test
sti
and
mov
mov
fisubrs
stos
fwait
add
push
out
dec
xchg
loope
aas
xor
loopne
or
call
push
out
pop
mov
push
cmpsl
mov
adc
mov
out
popa
mov
cmp
pop
adc
lcall
adc
and
cmpsl
ljmp
fistl
cltd
mov
sub
and
ljmp
inc
and
push
cmp
ljmp
imul
fiaddl
xchg
iret
pop
std
inc
ds
sub
popf
cli
or
repz
imulw
mov
popa
test
jae
inc
repnz
pop
aaa
lret
add
jns
pop
inc
imul
ss
ljmp
sahf
xor
outsl
loope
stos
leave
cs
push
into
xchg
out
aad
and
mov
pop
inc
jecxz
inc
jg
mov
add
push
or
cmp
mov
and
push
push
pop
mov
ja
movsb
dec
in
mov
jns
mov
lock
movsl
cmp
xlat
mov
popf
cmova
xor
xchg
imul
inc
push
lret
mov
add
ffreep
daa
inc
stos
jle
mov
roll
sub
into
jo
add
sub
cmp
aam
int3
add
iret
mov
push
pop
push
lea
pop
stos
movsb
mov
addb
mov
jne
sbb
push
inc
sahf
ja
mov
daa
push
mov
movsb
mov
ljmp
add
adc
xor
pop
cld
mov
inc
movsl
xchg
add
in
cmc
pop
rcrl
scas
or
pop
dec
mov
xchg
in
push
pop
bound
icebp
mov
pop
cmpsb
mov
sub
sub
push
stc
push
int3
xchg
loop
roll
jo
ja
inc
nop
pop
fwait
push
roll
xlat
xor
repz
jns
cmpsb
pop
subl
fisttpll
aam
cs
scas
ss
or
ret
push
cltd
push
into
lods
stos
dec
add
inc
xchg
ja
inc
mov
cs
sbb
and
test
in
or
mov
xor
mov
sub
mov
mov
sbb
cld
push
inc
scas
push
lock
repz
sarl
in
adc
sub
bound
int3
dec
dec
mov
adc
es
cld
jne
das
out
fcomi
mov
adc
cmpb
pusha
xchg
out
mov
into
xorb
adc
rcll
and
mov
sahf
inc
or
jo
addr16
mov
mov
outsl
shrb
jg
out
jmp
arpl
sub
shll
adc
sbb
out
inc
push
gs
pop
push
mov
repz
sub
sarb
sarl
fisubrl
xor
js
stos
pop
adc
jl
test
xor
push
fistps
aas
push
push
scas
adc
jecxz
bswap
jb
push
mov
sahf
mov
lods
add
push
pop
inc
insl
dec
adc
movsl
stc
imul
jecxz
sub
pop
imul
xor
andb
shrl
adcl
int3
jne
sub
or
ja
pusha
dec
shlb
pop
pop
test
mov
ljmp
lods
lods
mov
lahf
mov
mov
xchg
adc
or
loopne
cmpsl
nop
lock
mov
imulb
and
cli
jae
into
pop
fnstsw
test
sbb
shrl
jmp
push
mov
add
mov
push
mov
enter
pop
push
icebp
loopne
xlat
test
popf
cwtl
cwtl
negl
inc
scas
rcrb
dec
int
icebp
cmp
cltd
mov
cmp
push
cmp
jnp
outsl
xor
ds
mov
sbb
mov
push
pop
mov
rcrb
rorl
shlb
adc
mov
lds
in
dec
cmp
push
cli
mov
mov
lcall
gs
dec
int3
jle
inc
push
test
mov
inc
movsl
jecxz
dec
sub
cltd
push
ss
add
push
mov
scas
mov
dec
ljmp
dec
cmpb
inc
and
xchg
jg
jle
xchg
into
div
neg
adc
adc
sub
ljmp
mov
out
out
xchg
scas
jp
popf
out
mov
push
mov
jmp
movsb
push
ss
lods
in
pop
inc
out
and
loope
scas
mov
shlb
dec
inc
mov
pushf
mov
lods
imul
js
aam
fs
not
lcall
jne
nop
mov
dec
pushf
fs
fistpll
cmp
mov
push
push
mov
xor
aas
cmc
mov
test
fcmovb
mov
lret
cmp
add
adc
push
icebp
sbb
shll
mov
repz
shlb
dec
sbb
push
cld
sbb
stc
and
icebp
ds
and
mov
aas
lahf
in
pusha
ret
cli
xchg
add
pusha
das
cmpsb
iret
push
fnstenv
les
iret
sub
cs
cli
mov
xchg
test
jnp
push
mov
fdivl
push
and
dec
pop
imul
jns
jg
lahf
xchg
push
mov
out
sarb
lds
fcmovnbe
inc
mov
stos
mov
popf
cmc
lcall
adc
jl
mov
cmpsb
cmpl
cmp
in
bound
mov
arpl
xor
sub
stos
dec
lret
cmp
mov
arpl
or
jbe
adc
add
adc
ds
stos
cwtl
and
mov
and
fldl
jae
in
sbb
push
mov
ds
sbb
add
int3
inc
jno
mov
sub
pop
sbb
mov
dec
mov
mov
dec
mov
cs
xchg
push
icebp
in
xchg
push
orl
mov
adc
and
inc
outsb
daa
dec
arpl
mov
inc
and
das
idivl
dec
pusha
push
jae
daa
ljmp
mov
sub
popa
jae
adc
mov
sahf
insb
pusha
ss
inc
lods
pop
sub
mov
rcrb
mov
mov
mov
jmp
jg
mov
adc
mov
inc
jge
addr16
xchg
bound
jl
add
scas
popl
lods
das
cmpsb
add
jecxz
fwait
xlat
jle
mov
fs
push
iret
pop
or
mov
mov
xor
cmpsl
enter
popa
pop
push
aaa
test
jae
and
or
pop
xor
cmp
leave
mov
mov
adc
in
cmp
xchg
sbb
lods
hlt
inc
lds
jbe
push
std
aad
mov
add
xchg
lock
push
popa
push
add
xchg
cwtl
jae
mov
adc
repnz
ret
sub
testl
lcall
call
dec
mov
adc
fisubrs
jae
stc
add
pop
dec
cwtl
aaa
dec
faddp
ljmp
je
repz
pop
lods
push
iret
cmp
shll
mov
jmp
mov
mov
mov
sti
enter
xlat
dec
nop
xchg
pusha
pop
outsl
jp
inc
lcall
cmp
push
push
jl
cmp
and
ljmp
xchg
adc
stos
stos
inc
cmp
and
cmp
ss
sub
lea
out
cmpsb
jl
mov
aam
jp
hlt
shr
enter
cld
shrb
xchg
mov
popf
lods
dec
inc
jo
fsubrl
xchg
xor
outsl
mov
mov
stos
or
mov
jg
xor
icebp
lea
in
jnp
sbb
jo
push
repz
jae
lret
cs
push
vpunpckhwd
sbb
push
rorl
aaa
cmp
fdiv
mov
ret
push
scas
fmull
pop
adc
xor
adc
cmp
aad
in
mov
imul
out
stc
lea
inc
mov
arpl
in
sbb
es
push
cmp
xchg
outsb
sbb
decl
lret
repnz
adc
scas
ret
inc
and
imul
mov
icebp
es
call
push
mov
std
in
aas
cmpb
ljmp
test
ljmp
lods
sub
cmp
xchg
ja
push
or
repnz
cltd
cli
mov
xchg
fdivs
arpl
inc
push
mov
or
dec
xchg
dec
dec
fnsave
add
adc
jo
mov
mov
cmp
push
fs
jmp
mov
sti
cmp
mov
out
pop
inc
test
insl
mov
jae
mov
pop
mov
mov
pop
mov
inc
or
mov
sahf
jp
and
xlat
push
fwait
xchg
popa
xchg
sub
xlat
jne
sub
test
push
enter
cmp
pop
mul
and
clc
jmp
lea
scas
iret
inc
adc
pop
fildl
fdivrl
jae
mov
mov
outsl
repnz
dec
mov
ret
dec
pushf
adc
mov
ss
bound
cmp
mov
mov
inc
fmull
add
mull
mov
test
nop
add
mov
sbb
insl
rorb
and
xor
out
cmp
insl
mov
lea
xor
cmp
mov
push
popf
mov
js
popf
cmpsb
adc
shrl
and
sub
jl
sbb
popa
push
lahf
aad
adc
push
pop
cwtl
inc
sbb
dec
inc
in
shl
push
popa
cli
sub
xchg
stos
pusha
lock
jae
push
popa
mov
aaa
es
aad
pusha
dec
test
add
jbe
mov
andb
pusha
push
mov
inc
jmp
xor
outsl
repz
cmp
adc
jae
insl
xchg
sub
fstpl
ja
cmp
rorb
and
xchg
xor
mov
jno
frstor
mov
mov
mov
push
ret
outsl
cmp
inc
rclb
lock
cmp
adc
push
js
shrl
dec
push
cs
dec
pop
testl
mov
mov
icebp
and
or
shrb
imul
movb
fs
js
push
mov
or
test
loop
xchg
push
xor
pop
fs
arpl
dec
pop
cld
sbb
xor
rolb
ret
stos
cmp
iret
xor
loopne
dec
stc
scas
or
xchg
mov
insb
inc
loopne
xchg
scas
test
into
or
jp
lahf
mul
mov
jg
pop
xor
push
or
pop
jns
or
ret
inc
es
dec
je,pn
in
loope
subl
adc
push
fsts
inc
dec
adc
in
std
lcall
fdivl
jbe
mov
pop
mov
cmc
push
sbb
adc
and
jmp
es
or
loopne
nop
lds
sbb
push
cmpl
notb
fistpl
push
mov
call
dec
xchg
jl
out
rcrl
pop
add
cmp
xchg
xor
lcall
fwait
and
pop
imul
mov
imul
xor
ret
into
mov
out
sub
push
test
adc
outsl
xor
mov
rolb
mov
push
push
lock
jns
mov
insb
pop
jmp
sbb
divb
xor
xchg
test
cld
xor
dec
nop
dec
pusha
cs
adc
int3
add
lahf
rcll
mov
call
subl
xchg
push
xchg
call
pop
or
stc
cmpsb
cmp
popf
sub
or
mov
pop
push
or
xchg
stc
icebp
outsl
orb
push
insl
cli
aaa
shll
cmp
aas
leave
pop
bound
aad
mov
inc
and
sbb
mov
in
rclb
iret
fs
mov
fdivr
adc
jp
or
je
pop
ret
test
shlb
enter
lods
lock
mov
aad
adc
popa
mov
jg
sbb
xor
jmp
sub
cmp
sub
or
aaa
ret
and
mov
lcall
jo
pusha
mov
pop
dec
or
insl
sti
lahf
xlat
int
push
mov
out
aaa
fwait
dec
shll
jp
dec
jbe
sbb
sarb
cmp
repnz
enter
in
xor
dec
or
pushf
outsl
mov
inc
loop
ja
xor
addr16
sub
mov
fs
push
add
out
pop
sbb
xor
aaa
mov
mov
movb
push
imul
ds
push
aad
test
mov
cmc
popf
loope
push
frstor
insb
cmp
ljmp
pusha
pusha
mov
outsb
arpl
lahf
xchg
aaa
mov
pop
lods
iret
pop
mov
dec
push
mov
icebp
inc
sub
es
leave
movd
sbb
cmc
cmp
and
jge
inc
xor
add
filds
fnstenv
out
mov
mov
mov
cmpsl
into
jle
faddl
das
dec
je
lea
dec
sbb
loope
inc
arpl
les
adc
adc
jl
addr16
and
fwait
jns
nop
mov
imul
mov
sbb
rorb
mov
test
mov
out
popf
jle
gs
sti
mov
fnsave
push
xor
loop
cmp
jg
mov
je
push
or
lock
movsb
inc
jp
jbe
lock
cmpsb
jg
pop
bound
mov
and
and
popa
lea
push
cs
mov
clc
fcomp
pop
add
sbb
push
adc
mov
sub
mov
mov
icebp
insb
mov
es
aam
test
jo
out
inc
pcmpeqw
jbe
rorb
test
and
mov
xor
mov
ds
mov
cltd
adc
sbb
cld
mov
lods
cs
push
push
push
ds
cli
shll
dec
insb
xor
cmp
sti
nop
psubb
mov
mov
cmp
cmp
enter
inc
sbb
movl
dec
dec
push
rcll
icebp
jnp
sarl
cmpsl
xchg
inc
pop
sub
test
adc
jge
push
jbe
ret
adc
lods
push
sbb
dec
jnp
movb
add
popa
int3
cmpsl
xchg
or
insb
js
add
and
push
and
and
push
xor
pop
imul
fldenv
jno
ret
cmc
in
pop
xchg
aam
addl
hlt
shll
fcoml
dec
cmpsl
jge
xor
test
aas
aad
push
enter
push
outsl
icebp
je
std
aaa
mov
cmp
add
nop
push
loopne
dec
jb
clc
sbb
pop
adc
add
gs
sarb
jns
cmp
sbb
adc
jl
gs
mov
loopne
ficoml
ret
imul
sub
jnp
sbb
fcmovnb
cmp
xor
pushf
cmpsb
cmp
mov
rolb
nop
xor
ret
sub
mov
inc
jecxz
cmp
mov
mov
cs
in
push
and
cmpsl
mov
hlt
cmp
cwtl
push
js
repnz
lret
lret
xor
mov
in
pop
daa
fmull
stos
sbb
cmp
jmp
fistpl
or
test
test
or
clc
dec
push
sti
xchg
xlat
lea
and
add
in
mov
xor
sbb
in
jo
addr16
and
sbb
mov
call
fbstp
or
stc
inc
xchg
push
insb
cmp
mov
mov
pop
pop
and
xchg
mov
mov
cltd
sub
add
fstp
dec
pop
leave
and
mov
lods
pop
jecxz
dec
shlb
dec
scas
cli
sbb
dec
fidivs
cmp
out
xchg
movsl
push
adc
cli
push
mov
sti
ss
stc
and
xor
cli
mov
es
das
cmp
xchg
sub
lods
jb
and
mov
or
dec
outsl
or
jae
rcll
cmpsl
push
lcall
jo
or
loopne
or
jle
pop
and
aad
sbb
popa
pop
pop
sbb
sub
inc
shrb
leave
pop
inc
ja
mov
pop
mov
inc
pop
lds
test
loope
adc
inc
pop
adc
cmp
dec
sbbb
jl
jp
es
stc
rcll
cwtl
dec
sub
and
push
xchg
out
loop
jecxz
enter
jbe
jl
fisttpll
popa
cmp
and
inc
xchg
and
ss
out
xor
movb
jmp
push
jmp
push
push
roll
int3
push
out
inc
inc
fcoms
das
adc
xchg
in
jbe
sbb
cli
sub
ret
cmp
cmpsb
scas
mov
sub
inc
push
push
es
rcrb
pop
mov
imul
cltd
addr16
cmp
aad
dec
repnz
rcl
mov
lods
xchg
or
or
jp
test
sar
fisubs
leave
pop
fstl
nop
nop
js
in
fdivrl
mov
pop
aas
rorb
repz
out
xchg
sti
mov
xor
mov
adc
loopne
insl
push
fadds
outsb
sbb
jo
bound
lock
out
pop
int3
pop
sbb
and
mov
or
pop
or
jge
or
lcall
add
repnz
jle
inc
push
stos
pop
xor
cli
push
pop
pop
idivb
jge
dec
or
jmp
insb
pop
fisttps
fadd
jl
in
inc
cmp
out
lea
jbe
les
imul
aad
push
in
scas
fptan
add
fstpt
mov
xor
int
test
test
icebp
pop
adcl
stos
xchg
and
data16
sbb
sbb
stc
mov
mov
inc
jb,pn
int3
mov
cmp
push
je
lret
mov
imul
adc
scas
mov
add
iret
mov
push
enter
xchg
xchg
movsl
mov
pop
imul
fcmove
imul
test
cltd
insb
jb
movsl
mov
jle
dec
push
test
dec
sbb
int3
ss
mov
inc
imul
cmpsb
outsl
or
stc
sbb
push
out
cmp
aaa
imull
frstor
xchg
mov
jecxz
nop
arpl
rcll
adc
ret
mov
jb
aam
das
aad
in
adc
sub
pop
sti
adc
mov
cmp
pop
repz
subb
outsl
mov
inc
leave
ja
sub
jo
push
jge
lahf
dec
sub
jl
sub
mov
cmp
call
push
imull
xor
out
jno
lahf
or
mov
subl
or
cmc
imul
push
int
pop
pop
icebp
movsl
mov
or
repz
adc
enter
xor
push
or
mov
mov
test
loopne
outsb
imul
jp
dec
xchg
clc
mov
inc
push
gs
push
pop
gs
xchg
test
mov
cmp
push
rorl
sahf
xchg
and
andl
and
idivb
adc
add
jmp
bnd
xchg
clc
jae
xchg
lock
or
push
ljmp
mov
dec
and
ss
test
push
pop
add
push
ljmp
loopne
inc
mov
fdiv
fstpl
and
hlt
fimuls
sbb
dec
in
in
hlt
aam
sbb
adc
in
imul
or
and
call
shl
aaa
sbb
mov
push
mov
mov
sar
add
mov
sbb
add
xor
jp
xor
xchg
test
sbb
sub
adc
insb
push
daa
ljmp
xor
les
ficoms
dec
and
jmp
jns
mov
flds
and
movsl
popf
jbe
adc
sub
insb
js
xchg
adc
sub
and
inc
rcll
mov
xchg
popa
loopne
sub
pop
ss
cmc
les
adc
loope
jns
dec
sbb
jnp
push
lds
jle
icebp
mov
mov
mov
push
stc
push
sub
out
jo
je
lret
imul
call
in
jl
fldcw
cmp
decl
jbe
or
pop
mov
push
test
pop
xchg
jb
xchg
mov
xchg
scas
xchg
nop
lret
cmp
or
movsl
mov
inc
stos
or
mov
loop
inc
xor
lret
or
cli
sub
xor
and
add
jle
cltd
adc
add
add
dec
pusha
pop
or
xchg
mov
pop
out
dec
in
sub
lcall
xchg
xlat
xor
sbb
out
pop
in
add
push
es
jne
dec
inc
ret
sub
in
inc
or
popa
inc
test
mov
jmp
push
xchg
loop
lret
adc
jle
mov
adc
push
lods
adc
dec
or
cmc
mov
sub
loop
mov
mov
push
adc
sbb
out
jae
pop
sub
js
dec
add
mov
lcall
and
sbb
gs
cmp
sub
or
xor
xchg
dec
setbe
fwait
xchg
stc
fiadds
pop
mov
adc
jg
push
lcall
mov
lds
repnz
push
loop
rolb
inc
xchg
fs
insb
addr16
fs
or
sahf
xor
cmc
xor
mov
add
enter
jae
jnp
pop
jae
popf
xchg
sbb
cs
cmc
sub
dec
sbb
and
cmp
icebp
insb
roll
sub
daa
frstor
xor
and
movsl
or
or
adc
pop
cmc
jp
or
sarb
add
shlb
hlt
and
popa
mov
add
mov
lret
adc
lret
in
mov
icebp
pop
mov
adc
sub
add
and
in
mov
mov
shr
shll
mov
out
adc
call
adc
jle
loop
xor
push
out
mov
inc
inc
jo
xchg
ljmp
cld
inc
mov
xor
add
ljmp
jmp
pop
xchg
mov
rcl
fidivrs
repz
into
pop
cwtl
pop
xchg
pop
push
dec
into
cli
and
scas
push
ss
out
ljmp
lret
mov
add
xchg
push
mov
jns
sar
or
add
sbb
mul
mul
cwtl
cli
lret
aad
inc
lods
movsb
lahf
arpl
inc
push
pop
mov
sub
and
rclb
push
sbb
pop
xchg
icebp
mov
pop
push
loop
sbb
dec
pop
cmp
mov
clc
ret
jecxz,pn
jmp
push
pminsw
test
inc
jl
out
jecxz
pop
test
int3
sbb
test
push
cltd
mov
cltd
pop
stc
int
inc
std
aad
inc
cmp
xor
xchg
jb
out
js
jns
or
call
leave
mov
and
repnz
arpl
fnstcw
enter
mov
sahf
stc
xchg
int
sub
mov
rcll
jmp
cmp
push
ret
lods
fcoml
in
mov
inc
jb
repz
inc
fdiv
mov
js
push
faddp
stos
test
shrl
pop
lret
movsb
loope
push
adc
and
push
pop
mov
jno
sub
mov
or
in
mov
aas
sub
mov
push
test
jb
shlb
cli
xchg
fdiv
jp
cld
adc
test
or
inc
mov
mov
enter
mov
push
push
add
push
xor
nop
ret
pop
ds
leave
jg
jecxz
aas
hlt
je
dec
mov
sbb
push
xchg
repnz
jae
push
cmpsl
js
popf
aam
into
in
xor
mov
push
xchg
inc
out
insb
stc
push
lcall
push
mov
mov
and
sti
xchg
mov
jno
jb
inc
sbb
add
mov
mov
mov
sub
fcmovu
mov
jbe
mov
in
xchg
repnz
mov
mov
cltd
in
adc
jo
jae
aas
ss
ret
out
or
xor
imul
dec
cmpb
dec
mov
xor
add
sti
xchg
push
add
adc
cltd
mov
insl
cmpsl
fsubl
cmpsl
mulb
nop
mov
stc
inc
lcall
mov
repnz
movsb
mov
or
in
xor
scas
lea
push
pop
insb
in
dec
negl
lods
xchg
ret
mov
fisttpl
mov
mov
jne
movsb
repz
adc
in
fisubl
inc
cmp
pushf
loope
aad
sbb
pop
aaa
rol
fwait
push
cmp
in
jecxz
sarb
shl
cmpsb
iret
cmpb
js
xchg
out
xor
mov
jnp
lret
lock
mov
mov
das
pop
pop
adcb
jl
sub
push
push
lods
or
jp
sahf
lods
lea
gs
ljmp
lcall
add
jmp
and
lcall
sub
rcrl
fcomps
cmp
cmp
add
pop
pop
ss
mov
jno
inc
push
add
mov
mov
test
lcall
push
loope
inc
stos
cmp
test
shlb
jnp
pop
inc
mov
jmp
and
adc
pop
mov
mov
adc
sbb
outsb
mov
cli
fistpll
fistpll
mov
arpl
mov
es
jmp
cli
aam
xchg
outsb
rolb
les
cmpsl
xchg
jmp
pop
and
cmp
mov
out
in
into
dec
fsubr
push
mov
sbb
push
mov
lret
popf
add
or
out
sub
aam
xchg
es
outsl
shrl
pop
sbb
mov
mov
mov
iret
imul
jo
adc
xor
loope
out
sbb
pushf
aas
mov
mov
dec
in
push
nop
xor
in
lods
mov
or
xchg
dec
push
sub
mov
mov
inc
or
insl
cmp
push
cltd
inc
lcall
int
inc
loopne
pop
ret
sbb
mov
mov
sbb
shr
repnz
push
rcr
inc
fidivrl
adc
mov
xlat
iret
ret
stos
paddusw
scas
sarl
mov
repz
pushf
cmpsb
sahf
sbb
or
sbb
ja
sub
and
or
aas
cmp
mov
xor
sbb
movsl
addr16
bound
mov
pop
fstpl
imul
insb
mov
jno
push
mov
insl
inc
sarb
xor
insb
cld
adc
lods
push
push
cmpsb
outsb
repnz
xchg
dec
insl
xchg
dec
fs
hlt
pop
jle
mov
fisttpl
stos
inc
jae
inc
loopne
push
fidivl
xor
ljmp
rcr
test
outsl
inc
mov
xchg
lea
pusha
add
clc
outsl
test
jb
xchg
mov
xor
call
jne
cmpsb
call
test
sub
adc
pop
movsl
arpl
stc
js
push
sub
inc
stc
push
jns
mov
out
adc
imul
mov
daa
ficomps
aaa
adc
mov
mov
enter
push
sub
mov
data16
pop
mov
repnz
sahf
add
mov
sbb
insl
dec
subb
add
iret
xor
addr16
popl
jnp
jnp
xchg
adc
push
jb
sarb
add
cmc
dec
xchg
int3
jg
fucomp
aas
fwait
testb
jle
arpl
fidivrl
movsl
jbe
sub
or
cmp
dec
test
sbb
lahf
enter
loope
adc
jg
out
scas
or
sbbb
adc
xchg
adc
outsl
js
movsl
mov
mov
xor
fisubs
shrb
mov
call
movsb
into
int
clc
stc
shlb
test
mov
mov
mov
jbe
pop
nop
xchg
mov
stc
inc
or
jmp
mov
cltd
aas
xchg
loopne
sub
lods
push
adc
add
pop
int
out
pop
push
pop
sti
inc
sub
mov
jecxz
inc
lock
lcall
and
dec
imul
or
rcrl
push
cmp
jge
movsl
sub
aaa
add
ss
sbb
repz
sub
aad
dec
dec
insl
fstpl
lahf
lds
pusha
test
xlat
xchg
xchg
mov
popf
push
jl
test
mov
xor
pop
or
arpl
add
xchg
je
push
fimuls
cmp
push
pop
insl
in
mov
inc
les
mov
out
add
decb
mov
pop
adc
sub
cli
cmp
ja
add
das
outsb
mov
push
lock
jmp
push
fistl
mov
mov
jp
loop
pop
cld
fwait
test
gs
ds
or
sbb
mov
and
andl
jle
mov
fsubs
jnp
xor
loopne
into
imul
push
dec
stc
lea
jg
push
movsl
and
shrb
sarb
push
movsl
mov
outsb
sbb
mov
sbb
or
mov
and
popf
or
dec
or
mov
je
test
fisttpl
pop
add
in
jl
test
mov
scas
int3
push
not
mov
movq
iret
lret
jae
int3
xchg
sbb
or
fadds
movsb
mov
shrl
jl
cld
mov
pop
jno
fistpll
imul
lods
cltd
fidivrl
pop
je
cmp
adc
and
insb
add
jp
push
pop
lods
xchg
fiadds
and
sbb
xchg
xor
jnp
and
fidivl
lock
lcall
push
cmpsb
pop
or
inc
inc
test
mov
sub
xchg
outsl
shll
orl
stos
and
in
sahf
jl
lods
nop
push
inc
nop
push
push
pop
fbld
ja
mov
outsl
mov
jecxz
jmp
std
lcall
insb
sbb
xor
outsb
sbb
adc
sbb
in
xchg
sub
dec
jle
pop
xor
cltd
lcall
push
jbe
arpl
xchg
repnz
or
pushf
push
xor
mov
cmp
cmpsl
sub
fwait
jns
in
cwtl
inc
xchg
inc
cmp
mov
xor
sub
sahf
mov
dec
test
pop
xor
inc
ljmp
into
xlat
ret
jno
push
sub
xlat
xor
dec
fldenv
pop
and
std
stos
scas
js
mov
aad
adc
sarl
sbb
lret
mov
pop
gs
sahf
and
fs
mov
add
mov
add
or
sub
out
in
mov
shll
mov
dec
test
jge
or
sti
test
gs
rcrl
fidivl
mov
popa
jb
dec
and
shl
mov
lods
es
out
test
or
cmp
push
movsb
out
add
enter
imul
inc
lret
mov
leave
xor
loope
xchg
push
mov
push
push
dec
std
adcl
mov
cmpl
dec
fbld
leave
or
daa
orb
or
cmp
daa
mov
test
iret
loopne
mov
out
inc
cmc
stc
insl
xchg
push
dec
adc
lret
jne
jle
or
dec
add
lret
repz
mov
lcall
push
es
cmp
mov
xchg
and
jo
arpl
dec
sbbl
xchg
jg
mov
mov
icebp
andb
aad
pop
xor
and
dec
dec
popa
lock
in
pop
je
push
pop
movb
jg
fs
jge
jns
pop
dec
loopne
sarb
xlat
mov
fsubrs
jp
scas
cmp
cmp
mov
bound
test
mov
int3
sahf
aam
pushf
xchg
aad
mov
xlat
lods
into
dec
mov
jnp
push
mov
and
fucom
xor
lahf
jge
mov
and
cmp
inc
cmp
mov
in
fldenv
jne
cs
sub
xor
mov
sub
xchg
aad
aad
mov
xchg
xchg
push
mov
mov
mulb
es
pop
lods
fildll
scas
shll
xlat
jnp
dec
push
mov
mov
pop
dec
cmc
lcall
pop
xchg
into
sub
js
fbld
add
ja
inc
aas
mov
fcomps
jge
dec
mov
pushf
mov
enter
fcomps
out
push
gs
sbb
adc
dec
stos
inc
jns
out
xor
push
or
inc
cmpl
in
xchg
pushf
in
jg
inc
stc
dec
mov
ljmp
cli
imulb
out
aam
sub
mov
mov
jne
sub
repz
jmp
das
push
lcall
mov
jb
loopne
mov
sbbl
ss
iret
fwait
hlt
scas
push
mov
jb
xor
cmp
insl
aam
pop
cmp
popf
or
mov
adcb
mov
sarl
and
jo
sub
push
gs
mov
pop
add
int
cmc
shrl
sahf
lods
int
dec
int3
dec
adc
out
daa
pop
add
cmpsb
roll
nop
xor
pop
out
mov
and
test
adc
xor
iret
gs
dec
mov
adc
dec
pop
daa
fcmovnu
nop
arpl
mov
and
cli
ret
int
pop
or
enter
cmpsl
mov
push
and
ljmp
push
xchg
push
xchg
cmp
dec
jnp
push
ret
jle
or
enter
xchg
loope
das
arpl
xchg
and
push
dec
xchg
pop
dec
jp
movsl
xor
jb
mov
xchg
stos
cmp
mov
lds
pushf
jns
inc
jmp
pop
mov
mov
in
mov
xchg
sub
ret
ret
je
push
add
add
sbb
lret
cmp
push
xlat
dec
pop
test
pop
xor
sbb
mov
sub
scas
adc
and
add
pop
or
movsl
mov
mov
pop
jl
outsb
xor
popf
inc
jle
mov
popf
insl
mov
ret
pushf
ja
xchg
in
jns
pop
mov
or
call
hlt
xor
pusha
dec
mov
call
scas
popa
out
pop
cmc
mov
std
movl
nopl
mov
inc
notl
xchg
mov
sbb
jae
push
or
push
pop
pop
stos
inc
das
xchg
mov
lea
iret
and
cmp
xor
clc
into
pop
repnz
sbb
pushf
push
sbb
mov
dec
jns
mov
negl
fiadds
mov
sahf
fdivl
fcomp
cmp
arpl
push
xor
or
jno
and
mov
test
sub
lds
adc
mov
sub
xchg
jb
mov
fmulp
mov
cmp
scas
xchg
shll
cltd
xchg
push
xchg
xor
idivl
nop
pop
inc
maskmovq
divl
in
test
jle
mov
push
pusha
adc
pop
lds
adc
inc
jecxz
mov
dec
add
jecxz
stc
popa
sub
fdivs
test
test
inc
cmp
pop
pop
pop
jbe
fadd
ret
data16
jno
inc
jb
mov
jmp
cmpsb
and
adc
pushf
or
sub
inc
add
mov
mov
out
jecxz
jo
mov
std
cmc
imul
mov
sub
daa
xchg
bound
and
mov
cs
enter
add
mov
ret
stos
adc
mov
test
popa
sbb
orl
cli
int3
aaa
jae
add
idivl
popf
mov
xor
ror
or
movsb
push
push
dec
sbb
jge
adc
add
bound
dec
lcall
add
test
aam
out
push
out
es
mov
loopew
mov
jge
lods
mov
outsb
test
sub
pop
pop
add
insb
iret
adc
adc
sub
mov
fwait
mov
cmc
rclb
mov
or
xor
xor
sahf
scas
dec
mov
dec
sbb
js
xchg
cmpsb
adcl
cmpsb
jge
add
lret
sub
or
stos
shll
xor
pop
iret
push
xor
jo
loop
ret
cs
clc
push
and
in
dec
xchg
fldenv
add
iret
inc
loope
out
inc
jp
inc
add
or
jb
mov
les
push
addr16
xchg
scas
sub
cli
andl
xor
movsl
xchg
insl
jae
jae
clc
cmpsb
ret
iret
int3
inc
mov
sub
sub
dec
mov
scas
lods
pop
sub
hlt
je
pop
xlat
jecxz
inc
in
in
mov
xchg
fisubrs
mov
cmp
inc
jg
jbe
imul
push
sbb
shr
or
push
mov
cmp
sbb
xor
es
cmpsb
adc
repz
dec
jns
int
push
lea
fiaddl
fiaddl
lds
mov
cli
daa
lods
lods
loop
scas
stc
insb
lock
rcrb
jno
pop
lock
cmp
inc
fisttpl
adc
movsl
dec
sbb
aas
sbb
or
out
sarl
gs
dec
xchg
or
jo
or
push
das
mov
jg
dec
test
xchg
jb
cmp
sbbb
cmp
popa
and
push
mov
lods
scas
xor
push
lds
push
loop
inc
pop
mov
lock
sub
lcall
mov
adc
fistpl
mov
stc
shl
push
scas
mov
dec
mov
add
ffree
in
mov
sarl
sbb
jecxz
mov
aam
inc
repz
dec
adc
mov
xor
into
xlat
scas
inc
pushf
sub
mov
sub
mov
out
sbb
fs
mov
insl
jge
cwtl
call
pop
call
push
movsl
push
in
test
sbb
mov
cmpsl
adc
das
insl
testl
out
jne
daa
faddl
jns
adc
jle
and
sbb
in
movsb
ds
gs
jle
gs
cmc
add
vpsadbw
shll
test
pop
out
push
iret
mov
pop
scas
call
repz
push
mov
xor
jns
sbb
iret
nop
out
pop
pop
stc
cs
mov
inc
inc
cmpsl
sbb
mov
sahf
lods
lcall
fwait
sub
in
or
adc
les
mov
das
cli
jl
ret
scas
mov
mov
adc
adc
xlat
adc
test
scas
loopne
out
mov
es
pop
adc
xor
pop
xor
into
jae
icebp
dec
xchg
pop
inc
popa
stos
mov
in
xlat
cmp
ret
cmpsb
mov
test
dec
inc
mov
cmpsl
sahf
inc
adc
enter
lds
jmp
or
mov
xlat
push
lods
fwait
pop
inc
jns
adc
ret
in
lock
fnstsw
out
repz
mov
or
xchg
jge
mov
rcr
and
mov
clc
das
cmc
out
nop
jmp
xchg
sti
mov
push
rolb
add
xchg
jnp
fwait
in
movsl
dec
in
lods
mov
mov
into
out
addr16
xlat
push
mov
shlb
cld
lahf
fcoml
cwtl
les
mov
cli
push
adc
cld
jb
dec
aam
pop
inc
pop
jp
jno
mov
mov
or
sub
ret
int3
fmull
icebp
mov
imul
rcrl
scas
fistpl
jne
daa
mov
in
xchg
or
test
popa
jb
mov
mov
push
push
std
add
cltd
lods
mov
push
pop
int
popa
jl
out
or
jne
lret
jp
dec
xchg
repnz
outsl
mov
nop
push
mov
inc
jo
aad
mov
sub
clc
pop
pop
ret
fnstsw
ljmp
cmp
sbb
aaa
dec
shl
or
mov
jae
mov
out
lds
xor
dec
test
cli
test
mov
fstpl
les
mov
xchg
repz
xor
repnz
add
jns
rolb
fucom
adcl
out
add
push
mov
das
bswap
out
xlat
out
xchg
sub
pop
ret
or
xchg
mov
sbb
inc
fwait
pop
nop
sub
add
ret
lret
das
inc
xor
push
fnsave
inc
xor
lcall
push
scas
jb
nop
xchg
sbb
sahf
into
subl
enter
add
movl
cs
push
sub
ljmp
pop
cwtl
iret
iret
sbb
loopne
aam
fmuls
stos
jecxz
inc
push
les
ficompl
sbbb
cmp
pop
xchg
lea
outsl
xor
hlt
leave
fbstp
loope
sub
popf
out
cmp
mov
inc
repz
imul
fildl
rol
out
fimull
jo
out
push
push
inc
push
mov
std
out
cmp
xlat
pop
insb
and
out
cwtl
clc
and
or
test
dec
jmp
xor
mov
push
hlt
maskmovq
jns
dec
ljmp
or
mov
xchg
jmp
mov
jo
xchg
push
sub
jecxz
mov
fwait
push
cltd
inc
enter
mov
adc
in
add
dec
pop
xchg
fs
dec
in
cmpsl
lods
into
scas
call
loop
or
mov
adc
je
andb
fdivs
jno
cld
fnstenv
rclb
movntq
inc
sbb
xor
test
lds
push
xor
pop
insl
adc
xchg
add
leave
fisubrl
xor
jmp
mov
rcr
scas
mov
lods
std
cmc
mov
and
jge
pushf
dec
imul
cmc
fldl2t
xchg
mov
ss
outsl
ficompl
idiv
scas
sbb
push
jg
sub
int
push
cld
out
mov
data16
sbb
lods
sbb
into
inc
pop
jp
jns
sbb
add
jl
pop
test
out
cmpsl
jecxz
xchg
mov
popa
shrl
in
in
aam
xchg
xor
and
aaa
int
add
inc
adc
and
test
mov
insb
mov
pop
and
das
rolb
cmp
push
out
or
mov
jp
push
int
js
adc
loope
jno
test
jbe
insb
and
adc
dec
adc
in
jae
jmp
sub
cmp
xor
mov
sub
push
out
test
sub
jmp
sub
mov
add
lods
in
push
inc
xchg
dec
stos
sub
out
ret
cmp
shlb
adc
popf
mov
lds
js
mov
xor
add
cmp
xor
sti
scas
sub
add
js
mov
dec
xchg
adc
fwait
cmc
rcll
test
or
mov
inc
fwait
and
or
dec
sbb
and
imulb
xor
idiv
aam
call
icebp
add
jae
xchg
lds
xor
adc
fidivs
fs
inc
hlt
lahf
loop
fcmovu
adc
int
add
outsl
inc
pop
mov
or
jno,pn
jmp
jge
cld
mov
xchg
jp
std
add
pop
jnp
rclb
outsl
das
lods
dec
sbb
and
dec
mov
sbb
mov
loope
inc
leave
je
inc
cmp
add
xor
pop
sub
mov
or
aaa
addr16
sbb
mov
dec
ret
test
pop
pop
lods
sub
loop
or
add
mov
xchg
call
fisttps
inc
sbb
call
ss
fldenv
test
hlt
push
dec
adc
in
fsubrs
loope
hlt
test
lret
jno
push
xlat
insl
mov
jmp
data16
pop
nop
shr
repz
xor
mov
in
adc
xchg
lods
hlt
sarl
stc
mov
das
mov
xchg
jnp
fmul
jo
jnp
pop
xchg
cmp
jmp
subb
ljmp
or
xchg
inc
pop
mov
mov
inc
push
call
xor
and
xor
or
fsubrs
inc
lcall
dec
jmp
jnp
fistl
or
jp
xchg
pop
lds
lds
jle
fmuls
adcl
movsl
call
les
mov
jle
ds
sbb
js
cmp
out
push
xchg
or
decl
xchg
add
mov
push
enter
push
mov
xchg
into
lgs
pop
pop
lods
adc
pop
jns
ret
cmpsl
dec
xchg
enter
xchg
xchg
dec
jno
dec
jo
shl
cmpb
loope
sbb
pop
adc
test
xor
mov
scas
push
xor
aad
or
cmp
in
xchg
add
mov
jg
aad
sub
dec
test
push
vmwrite
test
mov
sti
enter
in
inc
fistpl
push
xchg
add
cli
test
ret
repnz
xor
jmp
faddp
add
xor
in
into
scas
loope
rolb
push
repz
ss
jmp
xor
cmp
gs
int3
mov
jae
outsl
icebp
std
arpl
cmpsl
inc
push
and
dec
adcl
jb
xor
enter
cwtl
xlat
ss
aas
xor
sub
push
cmpsl
jo
addl
pop
cmpsl
leave
xor
dec
push
jo
shll
cmp
dec
sar
mov
repnz
or
leave
les
xchg
movsl
dec
out
sbb
jno
xchg
call
shlb
xor
cmp
push
sti
xchg
sbb
mov
cld
cli
push
mov
lock
mov
dec
lcall
lods
repnz
jp
mov
push
arpl
and
sbb
pushf
pop
pusha
pop
add
cld
jge
insl
inc
fcoml
out
inc
or
comiss
sbb
outsb
testb
movsl
aaa
adc
sub
or
cltd
mov
pop
arpl
mov
jae
aad
inc
cmp
in
pop
mov
sbb
push
push
adc
mov
mov
or
dec
sbb
jp
adc
clc
xlat
mov
jno
mov
pop
shll
aad
pop
and
adc
fucomi
mov
fcomip
mov
daa
sub
roll
jl
pushl
in
or
pop
arpl
movsl
sbb
sbb
sbb
lret
adc
inc
sub
adc
jecxz
sub
mov
cmp
pop
cld
sbb
jno
jbe
aas
pop
je
jno
gs
xor
imul
sub
add
mov
sub
push
or
rorl
sub
inc
pushf
hlt
out
add
add
loope
jnp
addb
cwtl
mov
sub
insl
scas
into
mov
xchg
test
and
repnz
or
dec
push
loope
add
cld
mov
mov
idivb
push
shrl
js
and
imul
call
es
mov
mov
dec
push
inc
pusha
adc
inc
shlb
lods
negb
xchg
cmc
push
stos
inc
ljmp
xchg
cmp
imul
dec
sbb
or
cmpsl
sub
out
lahf
movsb
mov
xlat
sub
sbb
inc
cmc
out
pop
pop
inc
test
cwtl
push
jl
daa
into
mov
mov
pop
mov
rclb
into
mov
sub
enter
xchg
es
sbb
dec
fwait
pop
xchg
and
sub
sahf
fwait
imul
mov
mov
in
dec
xor
loope
adc
xchg
aaa
xorb
dec
mov
mov
stos
push
out
push
mov
mov
push
decl
sarl
loopne
inc
jnp
int
pop
push
pop
sub
push
insb
orb
arpl
jmp
cwtl
lods
nop
shrl
fdivr
sbb
jp
out
dec
rorb
cmc
mov
stos
xchg
fxch
push
xchg
or
sub
or
out
sub
cmp
dec
pop
add
into
push
dec
insl
add
jg
jp
add
in
cli
aam
pop
or
out
sub
call
pop
roll
fstl
cs
cli
pop
in
jne
cwtl
or
jmp
mov
out
andl
mov
in
adc
rol
fsts
pop
out
addl
addr16
pop
mov
and
and
and
sahf
xor
sbb
shll
xor
outsl
fptan
add
push
in
xchg
sti
sub
add
insl
in
aam
popa
lea
daa
pop
inc
ja
pop
int
ret
pushf
jp
insl
xor
pop
pusha
xor
adcl
lret
test
ds
xor
imul
std
mov
jno
push
cmpsb
roll
sbb
jns
lahf
sub
mov
bnd
scas
inc
inc
rcll
lret
lock
fwait
sub
inc
lahf
sub
aaa
ret
in
movsl
cmp
lods
jle
mov
inc
sarl
pop
test
push
sub
aas
mov
cmc
flds
iret
ja
sub
push
mulb
popf
jge
pop
andl
adc
mov
mov
subb
lahf
mov
xor
xor
es
mov
loope
hlt
pop
ret
in
adc
repnz
sbb
lret
pop
loope
sahf
add
mov
jl
pusha
adc
jmp
mov
mov
cmp
xor
mov
sbb
and
sahf
inc
mov
repz
mov
fsts
das
shrb
cld
sbb
and
jl
pop
aas
out
call
cmp
out
cmpsl
and
push
adc
dec
push
stos
out
std
inc
imul
cmp
push
jns
aam
nop
jb
and
je
cld
leave
and
movsl
sub
mov
shrb
test
xor
cmp
out
mov
or
dec
popa
add
add
xchg
clc
jns
icebp
mov
pop
mov
faddl
bound
icebp
cs
xlat
adc
fdivs
js
or
xor
icebp
outsl
jmp
xchg
pop
inc
ss
repz
mov
sub
cs
shlb
cmp
cmpsb
xchg
pop
dec
sub
dec
mov
stc
adc
call
aaa
mov
mov
hlt
mov
push
ljmp
subb
leave
mov
inc
inc
fstpt
dec
lods
call
mov
or
or
mov
mov
inc
outsl
push
xchg
inc
push
pop
xchg
or
in
and
add
mov
mov
dec
jmp
inc
sub
das
mov
cmp
xchg
adc
stos
repz
or
aam
mov
mov
adc
testl
mov
sub
add
pop
aam
cmpsl
jb
pop
xlat
cs
or
sub
inc
push
mov
repnz
jecxz
add
add
xchg
sub
pop
mov
movsl
dec
shrl
fnstcw
jl
rol
mov
test
les
les
xor
insb
in
cmc
cmp
aam
ror
mov
aas
xor
pusha
mov
sbbl
faddl
inc
addr16
jb
xor
mov
jns
cmp
rcl
sbb
jbe
mov
sub
xchg
shll
push
dec
xchg
pop
sti
cmp
aaa
into
pop
cs
adc
hlt
inc
mov
mov
ret
flds
cwtl
sti
add
adc
xchg
pop
adc
fs
cld
int3
idiv
dec
jbe
jp
adc
jle
adc
cmp
ja
push
nop
in
or
xor
stos
fs
pop
sar
adc
inc
fdivs
sahf
lods
fidivs
mov
and
xor
xchg
inc
out
sbb
stc
and
or
pop
dec
cmp
roll
es
out
pop
mov
sti
dec
jmp
roll
popa
inc
sbb
shll
loopne
cmp
jle
dec
cmp
or
js
cltd
stos
inc
adc
inc
fs
mov
dec
insl
xchg
push
mov
push
adc
xchg
ficoms
les
cmpsl
movsb
jo
push
pop
mov
or
addr16
add
es
pop
data16
inc
icebp
enter
stc
push
aas
outsb
push
push
ss
stc
xorl
cmp
inc
inc
test
aad
mov
test
mov
dec
mov
push
and
jae
imul
mov
out
pop
dec
pop
pop
jmp
mov
lea
dec
lret
jb
lock
icebp
out
fwait
xor
sbb
add
movsb
loop
ljmp
test
sbb
fimuls
mov
add
aam
mov
xchg
push
imull
and
jb
push
ds
popf
pushf
dec
pusha
aad
fwait
outsb
dec
lret
xchg
lds
push
add
aam
add
mov
pop
cmp
sub
dec
fldl
xchg
adc
es
fs
in
jns
lods
ds
cmp
in
lods
stos
shrb
xchg
xor
iret
mov
sub
mov
inc
pop
cmpl
test
mov
and
pop
push
xchg
pop
movsb
or
mov
and
out
fstl
or
ljmp
pop
and
addr16
and
mov
push
push
lods
sahf
mov
mov
mov
mov
mov
jns
rolb
cmp
enter
lahf
push
cvttps2pi
lret
aam
mov
cmp
push
fdivrs
pop
andl
int3
out
adc
icebp
loopne
pop
imul
or
cmp
mov
cltd
pop
mov
adc
and
pop
push
pop
pop
int
jg
mov
mov
pop
nop
jns
xchg
mov
je
dec
inc
inc
movsl
push
mov
call
shll
cs
in
pop
stc
vpsubusw
bound
pop
pop
loopne
enter
subl
pushf
mov
mov
add
mov
stos
mov
push
loop
pop
xor
add
xchg
imul
cwtl
sub
push
insl
sub
pop
jl
jecxz
or
mov
shr
lds
add
outsb
sub
jne
mov
mov
imull
jno
ss
xlat
push
pop
inc
fnstsw
push
jbe
sub
in
or
mov
fists
xor
ret
dec
mov
xlat
jb
push
mov
cmpsb
into
cmp
jge
iretw
sti
enter
xor
pushf
or
mov
inc
inc
cmp
pop
cmp
mov
into
mov
adc
adc
mov
or
icebp
fdivrl
bound
test
mov
fwait
xchg
and
mov
rcrl
icebp
scas
stc
faddl
ss
xchg
insb
mov
inc
inc
and
xchg
mov
mov
cs
lahf
mov
sbb
ljmp
fmul
test
pushf
xor
mov
jo
mov
cltd
out
xor
pop
fistpl
mov
push
mov
in
loope
aad
push
sbb
pop
addl
pop
aam
nop
push
sub
std
mov
popa
adcl
xor
mov
adc
ret
lods
mov
cmp
and
sbb
std
hlt
pop
mov
add
or
mov
jne
cmpb
sbb
xor
lret
cltd
out
or
ds
mov
inc
and
sbb
adc
outsl
bswap
jp
adc
popa
test
mov
pop
fdivrs
cmp
leave
mov
lock
or
out
not
hlt
sub
add
add
rcrb
rcll
pop
loopne
mov
fidivrl
icebp
fcmovnu
shr
push
aad
hlt
mov
dec
mov
sahf
inc
cwtl
daa
mov
dec
aad
loop
iret
aas
pop
mov
outsb
lods
xor
in
pop
into
add
ja
test
pop
in
cwtl
and
sub
mov
enter
inc
ljmp
je
push
mov
pop
sub
and
shl
in
cli
adc
mov
fldenv
icebp
aam
sbbl
pop
pop
inc
or
and
loopne
add
sub
dec
jae
push
dec
jp
push
push
in
jae
adcl
xchg
imul
sahf
mov
dec
outsl
lods
and
stos
add
out
cmp
addr16
inc
add
clc
dec
lods
add
fucomi
repz
inc
in
sub
gs
out
stos
xlat
or
push
or
xchg
jno
rcrl
inc
shll
push
sbb
sub
mov
mov
dec
pop
xor
mov
sahf
pop
icebp
cld
and
icebp
pop
pop
jg
and
xchg
addl
mov
sti
fcomip
repz
test
aam
jne
pop
dec
leave
movsl
xor
imul
dec
pop
and
loop
rcll
mov
imul
xchg
test
mov
das
add
mov
push
sbb
adc
mov
mov
inc
ja
push
and
ljmp
mov
sub
push
cli
inc
jmp
jns
jmp
mov
or
test
and
jp
ljmp
sahf
sub
test
jge
or
popa
mov
xchg
push
inc
testl
xor
mov
mov
cmp
and
pop
xor
sub
dec
test
outsb
lds
jnp
adc
fs
bound
sub
scas
lods
dec
cmp
sbb
xchg
xchg
repnz
sbb
mov
in
mov
test
jle
les
int
push
xor
loope,pt
inc
sub
cmp
iret
sub
mov
cmpsl
cwtl
in
in
lcall
pop
stos
imul
loope
xor
sub
insl
xchg
xchg
cmp
jae
lea
cmpl
and
movl
cwtl
mov
inc
pop
xchg
hlt
mov
repz
addr16
jp
movsb
add
inc
fsubl
and
lret
sti
xor
and
andl
xorb
sti
out
rcl
or
insl
incb
and
cli
pushf
fbld
std
jl
dec
and
aad
pop
pop
data16
out
jle
aam
inc
cmp
push
mov
data16
adc
xchg
fdivrl
xchg
mov
push
cmp
fidivs
cmp
incb
jo
pop
mov
inc
out
sub
cmp
xor
sub
dec
orb
xchg
and
jecxz
sahf
in
or
dec
inc
test
sahf
movsl
adc
inc
mov
push
out
inc
call
dec
mov
sbb
iret
sub
cmp
pop
mov
imul
imul
cli
cmp
fcomip
jno
pusha
shrb
jne
jp
call
sbb
jbe
lds
movsb
popa
lcall
stc
fsubrp
out
stos
addr16
sti
push
or
fidivl
mov
mov
sti
pop
pop
int3
jg
icebp
xor
push
jg
jnp
xlat
push
in
out
and
js
scas
shlb
fildll
mov
ds
jecxz
dec
add
dec
mov
add
xor
popf
fisttps
sbb
mov
dec
push
daa
test
cmp
push
aad
int3
sahf
ja
aam
dec
mov
jnp
xor
cltd
sub
clc
xchg
enter
inc
int3
fs
sahf
xchg
js
aad
mov
rol
xchg
lret
xor
xchg
add
cmp
dec
mov
mov
inc
add
je
outsl
or
jb
sti
or
in
inc
sbb
mov
add
pop
mov
rorl
pop
push
dec
cli
mov
xorb
and
fisubl
loope
adc
adc
or
jno
popa
ret
mov
push
sahf
sub
mov
inc
clc
lods
loop
icebp
popf
andl
pop
enter
push
inc
or
cmp
dec
push
loope
rcr
call
mov
adc
insl
je
rorl
jmp
movsl
cmpsl
shll
dec
pusha
and
sbb
sti
and
push
jae
jmp
cmpsb
ds
push
pop
push
popa
mov
mov
xchg
popa
mov
movsl
cmp
sub
xchg
outsl
iret
xchg
ret
mov
cmpsl
dec
or
sub
fdivr
pop
fstps
sub
shl
xchg
sub
and
adc
cmc
mov
sbb
sahf
ret
pop
or
adcl
stos
pop
mov
add
shll
add
pop
xor
jae
cmp
push
aaa
jns
int
je
dec
outsl
xor
push
pop
xchg
in
inc
inc
jl
inc
shlb
loope
fidivs
fildll
push
lea
dec
scas
dec
adc
aas
push
sub
ret
mov
lds
and
cmp
cmp
fdivrs
stc
dec
icebp
mov
mov
test
imul
scas
sbb
int3
mov
add
mov
jmp
mov
add
icebp
pop
shrl
mov
jbe
push
jb
and
lcall
sub
hlt
std
fsubrs
aaa
mov
stos
pusha
lcall
sub
push
xchg
mov
mov
sarl
cmpsl
shll
inc
ficompl
pop
xchg
pop
lods
cld
out
addr16
aam
or
stc
aam
xchg
lret
test
sub
xor
pop
mov
cmp
xchg
nop
int
pop
jl
mov
js
hlt
push
int3
mov
nop
mov
and
jbe
fs
out
cmp
adcb
jns
shl
scas
xchg
mov
loopne
out
xor
mov
cmpsb
pop
cs
pop
push
push
adc
adc
stc
add
aad
lock
inc
insl
ljmp
js
or
jmp
enter
push
xor
and
xorl
sub
adc
xchg
lret
push
mov
dec
sub
mov
cmpb
das
lods
iret
mov
out
mov
pop
pop
aas
cmp
push
xor
add
cmpsl
rclb
mov
inc
fcoms
mov
pop
jns
xchg
les
mov
jl
dec
rolb
popa
xchg
xchg
cmp
or
mov
and
adc
test
popa
push
and
scas
mov
or
push
hlt
into
test
cmc
add
imul
or
xchg
loopne
scas
int
inc
sbb
shrl
sub
cld
xor
insl
or
insb
sti
ficoml
add
cmc
cmp
adc
je
inc
sti
jo
sub
mov
mov
jne
testb
sub
jg
inc
daa
loop
mov
cmpsb
lret
ss
stos
iret
mov
inc
xchg
sarb
sub
popf
dec
fwait
in
js
add
loopne
adc
sbb
lret
jp
je
mov
in
xor
out
pop
cwtl
mov
mov
jle
xchg
fdivs
sub
jp
mov
pop
mov
iret
test
gs
xchg
bound
push
leave
movsl
sub
jnp,pt
scas
xor
push
das
cmc
mov
std
mov
les
daa
mov
pop
sahf
push
lods
inc
push
cmpsl
jne
xchg
inc
cmpsl
mov
and
xlat
sub
out
inc
imul
or
jno
push
mov
push
sub
mov
sbb
or
dec
dec
dec
cmp
add
mov
call
add
jmp
hlt
inc
jns
fimuls
ret
jo
inc
xchg
lcall
fwait
mov
fisttpll
addb
add
pushf
sub
mov
leave
jns
mov
mov
mov
or
adc
lret
ja
pop
or
cwtl
jo
or
jns
mov
and
loope
mov
jo
xchg
clc
mov
sarb
xor
popf
aas
in
xor
stc
enter
lret
fildll
neg
ds
cmp
push
add
js
scas
lcall
scas
mov
shll
lret
es
mov
jo
mov
mov
iret
jns
cmp
in
lods
cld
movl
stos
xor
and
cmpsl
into
or
adc
pop
fwait
mov
mov
lret
sub
mulb
and
push
jne
repnz
jnp
mov
ret
in
iret
outsb
jno
and
mov
jl
lahf
mov
mov
jo
in
into
xchg
daa
sub
adc
cwtl
mov
xchg
or
xor
adc
fwait
hlt
leave
xor
rolb
fwait
mov
fcompl
lea
xchg
dec
push
pop
cmp
add
push
cwtl
test
mov
jl
mov
jmp
sti
andb
mov
shlb
cltd
xor
into
js
cwtl
lret
mov
sti
adc
in
pop
outsb
inc
pop
dec
outsb
or
dec
sub
popa
loope
int3
out
xorb
movsb
jmp
push
push
mov
xor
jl
xchg
hlt
push
inc
fsubs
cld
push
cmpsl
xchg
jmp
jae
int
cmp
int
pop
out
in
cmovae
xor
out
lret
test
hlt
inc
cmp
andb
scas
xchg
movsl
js
imul
daa
cmp
out
dec
sub
pop
jp
push
adc
sbb
jnp
xchg
dec
dec
es
repz
pop
dec
bound
lahf
testb
rorb
and
pusha
mov
cwtl
into
push
fmull
sbb
push
iret
insb
pop
add
negl
xchg
xor
xlat
sub
jp
jne
es
lret
and
popl
pop
fwait
cmp
outsl
inc
lcall
and
sbb
enter
rep
test
stos
dec
push
push
xchg
jg
xchg
jns
arpl
lcall
mov
and
outsb
int
xor
in
in
sbbl
movsb
outsb
cmpsb
insb
pushf
pop
cld
fstpt
cli
rcl
or
and
jne
into
inc
dec
je
vaddsd
popf
cmpsb
cmp
rol
stos
sti
xchg
lret
shrl
std
push
imul
add
push
xor
dec
shll
fcompl
out
or
push
sub
in
rclb
push
sar
xchg
and
int
jne
arpl
inc
xorl
int
out
jae
mov
cltd
dec
jecxz
outsb
inc
jg
or
ja
int
cmp
mov
cmp
add
or
sbb
inc
pop
push
cmp
ret
std
cld
lods
roll
loop
pushf
xchg
in
or
ja
push
mov
jecxz
out
leave
xor
daa
mov
mov
stos
lret
jb
addr16
loopne,pt
xchg
fwait
movsl
and
pop
ja
jnp
push
xchg
jle
addl
movsl
imul
out
sbb
loop
stc
popf
mov
in
insl
or
cmp
cltd
imul
pop
ss
xchg
or
mov
pop
fsts
xor
aad
jno
or
pop
xorb
jg
sti
pop
js
xorl
adc
push
fisubl
fdivs
fmull
aaa
sbb
add
cltd
out
add
or
cmp
pop
cmp
xlat
xchg
and
fiadds
mov
sbb
nop
mov
xor
push
std
xor
mov
loope
and
adc
cmp
or
add
sub
mov
rcl
cmp
or
test
and
les
mov
sbb
push
adc
or
xor
cmp
aam
push
lret
movsl
mov
xor
add
test
sub
lret
sarl
icebp
mov
inc
push
ja
mov
sbbb
jmp
aas
cmp
add
in
fstpt
mov
shll
add
bound
lret
daa
inc
movsl
and
popa
xchg
dec
mul
pushf
and
cmp
inc
push
mov
jg
ljmp
mov
test
test
or
adc
inc
insb
or
pop
stos
arpl
es
shll
mov
xchg
outsb
jle
pop
ss
dec
push
add
dec
mov
push
pop
sub
stc
adc
jle
out
dec
xchg
dec
adc
xchg
test
sahf
pop
add
mov
mov
pop
shrb
cmp
adc
mov
adc
sbb
push
inc
dec
add
and
cmpsb
fsts
jb
push
test
xchg
inc
sahf
cli
outsb
scas
es
cmp
movsl
ljmp
jns
cmp
call
and
mov
icebp
mov
mov
mov
and
mov
test
push
arpl
rclb
push
xchg
sbb
mov
repz
jle
jno
std
mov
inc
lods
xchg
mov
inc
sahf
cld
xor
sbb
insb
iret
dec
xchg
arpl
pop
sbb
icebp
je
in
mov
rcr
xor
jp
insl
mov
hlt
mov
mov
mov
aaa
clc
add
mov
sbbl
jb
jmp
cltd
add
out
sub
pop
push
mul
push
sub
outsl
enter
out
inc
repz
adc
xor
stos
pop
lret
pop
ja
jb
pop
jg
adc
stos
fwait
cld
or
xor
dec
enter
sahf
cmpsb
push
dec
loope
push
push
xchg
jg
jbe
scas
sub
mov
add
je
or
or
cmp
pop
push
sbb
jne
inc
jo
fadd
movsl
or
repnz
cmc
pop
fldcw
mov
repnz
xchg
js
and
jae
cwtl
add
subl
dec
xor
mov
es
pop
fdivs
leave
sub
sbb
jge
push
jmp
cmp
popa
outsl
negl
data16
fscale
and
xchg
xchg
pop
loop
scas
aad
sbb
push
in
out
js
adc
jg
pop
push
mov
jle
jne
aam
std
xchg
jo
xor
push
arpl
pop
mov
popf
push
dec
adc
jne
ljmp
xchg
add
je
les
cmp
add
cmp
xor
adc
mov
sahf
mov
lcall
sub
int
inc
lret
jl
cmp
icebp
or
out
xchg
sub
and
in
aam
cmp
sti
fidivl
xor
jnp
sub
cmpl
mov
push
pop
or
mov
jmp
push
aaa
xchg
mov
scas
lods
sarl
cmc
sbb
xchg
inc
fwait
mov
pop
push
fimuls
dec
sti
mov
pop
test
lcall
xor
cmc
or
adc
shlb
and
popf
mov
pop
push
xchg
cmp
push
mov
sub
sahf
jno
sbb
insl
lods
and
cmc
add
ret
add
sub
psubsw
scas
cmp
mov
repnz
fistpll
das
fsub
add
xchg
or
dec
sub
fiaddl
sahf
add
inc
mov
add
xchg
shll
loope
je
lods
dec
arpl
lods
rol
ds
mov
xor
sti
test
jbe
int
jg
push
mov
cwtl
das
in
mov
mov
popa
jbe
sub
mov
rcrb
push
fisttpl
or
ljmp
push
inc
mov
ret
in
jl
mov
push
les
or
pop
push
push
daa
jge
push
addr16
hlt
push
orl
je
pusha
jp
lods
movsl
xor
pop
mov
addr16
fmuls
hlt
pop
pop
sbb
mov
movsb
jns
sub
sbb
cmp
mov
imul
in
xchg
sbb
jne
popa
sub
not
push
mov
arpl
add
cmp
inc
mov
test
sbb
call
xchg
lret
jo
lcall
fisttpll
in
cmpsl
xor
nop
and
mov
test
cmp
shr
and
int
xor
jo
fnstenv
push
add
pop
scas
xor
enter
into
outsb
fcomps
mov
cmc
pop
mov
leave
es
xchg
push
mov
ja
stc
mov
insl
enter
repnz
fdivrl
bsf
xor
imul
call
sub
call
imul
pop
push
pop
add
je
into
push
and
popa
adc
jmp
pop
mov
scas
pop
inc
pop
hlt
cmpb
shrb
sbb
icebp
sti
pop
and
jmp
leave
call
cli
adc
push
in
out
and
clc
lret
in
mov
add
xchg
inc
cli
push
jbe
mov
adc
jne
lahf
rorb
dec
loopne
in
enter
daa
mov
mov
into
lods
enter
pop
jo
lcall
test
mov
test
test
mov
hlt
jmp
jb
lcall
cmp
inc
adc
imul
adc
call
in
sbb
jecxz
mulps
mov
outsb
in
into
loopne
pushf
mov
jne
dec
pop
shr
cmc
push
ret
jmp
push
sbb
clc
jmp
ret
stos
fsubr
add
out
add
sti
incb
popf
sbb
mov
enter
into
jb
xor
into
movsb
mov
out
inc
push
rolb
xchg
fcoms
adc
fdivrl
xchg
data16
shr
aaa
pop
scas
jge
inc
push
lds
mov
cmp
or
pop
add
dec
fs
mov
icebp
add
test
xor
dec
int3
popa
jecxz
xor
mov
fdivrl
mov
ljmp
add
dec
cmp
repz
test
jnp
mov
jl
mov
fsub
mov
loopne
xchg
mov
mov
mov
rcrl
ret
xlat
cwtl
stos
lods
gs
sbb
fadds
loopne
aaa
jmp
dec
add
test
inc
mov
rolb
das
mov
cmp
and
xchg
pusha
dec
add
loopne
xchg
hlt
test
in
adcl
inc
jg
int
sub
adc
jge
dec
scas
jo
xor
mov
sub
push
jl
clc
aaa
mov
xchg
or
sub
or
lcall
sbb
cmp
pushl
cmp
cmp
cltd
ljmp
cmp
test
sti
inc
add
and
lret
lods
mov
pop
add
inc
jecxz
lcall
insl
mov
test
adc
dec
adc
shll
and
xor
gs
stos
pop
push
sub
xorb
inc
xor
in
int
rcr
pop
inc
fsubp
mov
xlat
adc
or
clc
insb
sbb
and
daa
xchg
daa
xor
jmp
addb
and
cmp
fisubl
cs
adc
aaa
outsl
push
mov
fs
test
lcall
cmp
push
sahf
fsts
outsb
cld
mov
mov
fdivl
dec
inc
mov
sbb
adc
jnp
mov
jp
cmc
cli
jae
mov
pusha
fnstsw
js
jge
jns
xor
in
push
sbb
mov
iret
jnp
sbbb
xor
sbb
loop
push
ror
mov
or
scas
push
add
ffree
sub
imul
xor
cmp
mov
pop
and
out
push
push
mov
ljmp
mov
mov
add
sti
arpl
ljmp
daa
popf
cltd
fldcw
fimuls
test
not
shlb
sarb
out
mov
mov
push
out
xor
and
mov
ja
xchg
mov
adc
ret
jns
or
lret
mov
out
lds
push
or
xlat
les
cmpl
sub
ret
mov
mov
jecxz
cmp
adcl
out
es
in
mov
cltd
mov
adc
push
call
push
ret
jmp
xchg
icebp
call
pushf
vunpckhps
enter
inc
jge
pushf
lds
inc
sbb
incb
insb
cwtl
xchg
sbb
out
push
lock
data16
xchg
mov
test
fwait
std
mov
rorl
enter
lods
fisubl
imul
fs
sub
in
mov
gs
mov
push
mov
xchg
les
imul
add
pop
sbb
sub
xchg
arpl
mov
insl
push
out
sbb
lods
test
pop
push
adcl
xor
adc
lret
dec
sbb
fmuls
sub
int
xchg
and
icebp
adc
out
or
add
adc
xor
dec
pop
test
add
jp
xchg
orb
and
dec
sub
cmp
add
xchg
or
fcomp
cmp
pop
xchg
or
rorl
sub
nop
inc
sarb
mov
add
lahf
outsb
xor
push
addr16
gs
and
rcr
mov
addr16
addb
and
in
inc
xor
inc
push
push
inc
inc
mov
cmp
sbb
sbb
popf
jae
into
xchg
out
or
adc
jae
nop
xchg
sub
decb
aas
mov
mov
and
loop
or
mov
dec
js
pop
mov
or
mov
jne
jge
adc
std
adc
pop
xor
test
push
mov
or
cmp
ljmp
out
jl
stos
inc
sbb
lahf
int3
ss
je
outsl
push
pop
mov
xorb
popa
fsubrl
inc
popa
add
and
fs
mov
mov
aam
cmpsl
adc
jne
pop
loope
pop
shll
mov
fs
scas
in
jbe
mov
sub
xchg
je
cmp
mov
fisttpl
xor
in
pop
or
mov
push
sbb
cmpsl
fsts
jle
sub
xchg
dec
mov
out
scas
push
daa
push
adc
je
lea
sub
adc
inc
fidivrl
xor
cmp
fistl
push
mov
jl
es
ja
mov
mov
lods
ss
js
repz
push
xchg
mov
or
mov
pushl
loope
fst
dec
loope
loope
mov
sbbl
mov
subb
or
adc
jb
xor
and
mov
stc
mov
pushf
add
dec
mov
das
jb
les
scas
std
sub
ffreep
and
arpl
sbb
bound
shlb
stos
jns
into
push
mov
int3
lods
mov
xchg
dec
out
stc
repnz
jnp
lret
es
arpl
cmp
and
mov
mov
repnz
pop
sbb
cmp
std
std
push
mov
mov
repz
inc
rclb
lds
add
iret
scas
bound
in
sti
enter
and
sbb
and
jo
popf
add
das
jecxz,pt
divl
cld
pop
sub
testl
cmpsb
lea
shr
cwtl
cmp
enter
leave
fisttps
add
add
sarb
pop
in
xchg
ret
repz
stos
cwtl
sahf
cmp
adc
cld
imul
cld
push
test
cmc
push
outsb
push
and
adc
or
iret
out
push
xor
sbb
mov
fimull
or
xchg
jge
mov
repnz
fst
scas
js
rcll
pop
mov
js
dec
fwait
rorb
adcl
int3
jmp
mov
call
sti
mov
dec
mov
mov
xor
in
inc
repz
push
nop
repz
movsb
cmc
cs
repnz
xlat
out
fstps
arpl
out
pop
mov
adc
xchg
add
rolb
mov
and
or
or
sub
adcl
push
sub
insb
or
mov
sbb
jge
mov
add
int
inc
pop
xchg
push
mov
scas
add
cmp
roll
ss
loop
pop
and
lahf
ja
xor
jle
dec
mov
pop
ret
leave
popa
and
lcall
inc
ret
aam
xchg
mov
pusha
inc
jmp
addl
sbb
out
jne
cld
push
cwtl
bound
inc
pop
dec
unpckhps
ret
movsb
mov
adc
test
into
test
icebp
push
in
ja
dec
out
dec
rolb
adc
cmpsl
fsubs
xchg
dec
mov
jmp
xchg
mov
js
push
jge
xchg
insl
ret
dec
mov
cld
xor
rclb
mov
rorb
inc
out
mov
popa
mov
add
cmovbe
sub
dec
adc
xor
or
cmpsb
push
push
fadd
jmp
sahf
jae
daa
lret
dec
sbb
das
xor
mov
nop
mov
mov
push
dec
mov
mov
mov
ljmp
aas
pop
jb
push
push
push
sub
fsubr
sar
mov
jle
mov
cltd
pop
xchg
test
jne
call
mov
stos
repnz
xchg
xchg
or
fdivs
mov
push
pop
mov
aaa
jmp
outsb
cmpl
out
xor
lea
cmp
and
xchg
ror
pushf
sti
ss
mov
xor
sahf
sub
inc
mov
xchg
cmp
jnp
repnz
mov
testb
data16
rorb
outsb
lcall
inc
or
mov
dec
adc
insl
jmp
scas
mov
mov
mov
imul
mov
lods
test
mov
aam
adc
cs
popa
ret
sbb
fisubs
mov
rcrl
lds
loope
jne
cmp
mov
enter
mov
sti
dec
imul
add
mov
and
jl
test
jg
adc
jns
cmp
in
sub
gs
push
add
data16
xchg
mov
push
mov
bound
mov
and
fwait
imul
out
jg
int3
mov
push
adc
and
or
sbb
mov
sbb
lds
adc
jp
lahf
lret
mov
and
out
pushf
icebp
and
js
mov
cmp
and
mov
jno
imul
sahf
push
inc
dec
mov
lret
jne
mov
outsl
add
pop
push
popf
push
cmp
cmp
bnd
xchg
jnp
xchg
lret
aas
or
test
int
mov
xchg
mov
xchg
pop
mov
adc
and
sub
in
loop
xlat
mov
add
mov
mov
insb
pop
mov
dec
mov
and
sbb
and
pop
push
ror
cmp
and
jns
sbb
gs
rorb
push
jno
cmp
mov
xchg
adc
push
or
dec
add
mov
mov
fs
push
pop
mov
sbb
mov
enter
cmp
dec
popf
jp
push
dec
rolb
or
les
xlat
dec
pusha
xlat
das
mov
movsb
in
inc
dec
dec
xchg
xchg
ljmp
fstpt
in
add
rol
insl
and
mov
pop
jno
mov
ret
jg
cmp
roll
mov
mov
xlat
pop
inc
mov
xchg
mov
or
ficomps
cld
fcmovnu
mov
xor
stc
sub
push
or
call
xor
imul
insb
insb
lock
and
inc
das
mov
fwait
mov
adc
ss
sbb
or
mov
add
jmp
adc
inc
insb
mov
loopne
add
sbb
iret
out
imul
scas
fwait
cmp
xchg
jg
in
icebp
int
jnp
xchg
jg
adc
and
mov
add
add
mov
jo
mov
dec
inc
jge
shrb
xchg
sub
inc
iret
stos
sbb
mov
mov
mov
mov
adc
outsl
fisttpl
or
add
mov
cltd
pop
fidivrl
sub
sbb
fdivrs
add
sbbb
sub
ds
push
aaa
pop
mov
xchg
mov
mov
xor
push
stos
adcb
clc
movsl
pcmpgtd
add
and
add
ficoml
mov
ss
or
ror
test
mov
xchg
push
mov
mulb
ss
mov
rol
negl
sub
mov
ljmp
movsl
adcl
prefetchwt1
in
andb
lahf
or
in
add
fwait
cmp
movsb
fidivl
int
aad
ljmp
xchg
test
cmp
xor
sti
clc
adc
ja
int
mov
adc
or
mov
dec
clc
adc
das
jbe
ljmp
xchg
xor
es
mov
scas
push
test
jp
ror
dec
clc
out
pop
fistpll
imul
sub
in
push
fwait
rclb
jns
mov
add
call
jns
mov
icebp
xor
cmp
fists
roll
mov
jbe
cmc
js
mov
sub
jne
cmp
mov
xchg
aaa
cli
in
arpl
mov
mov
loope
rcl
cld
in
and
xor
xchg
in
mov
lahf
imul
sahf
or
dec
push
push
ljmp
aam
aad
scas
cli
xor
dec
les
sbb
mov
sub
fcoml
ljmp
cli
repz
sahf
push
add
dec
cmp
sbb
call
hlt
bound
not
sbb
push
andb
in
mov
or
pop
icebp
pushaw
sub
into
mov
aad
test
push
cld
aad
cmpsb
xchg
lret
mov
lret
and
pop
rcrl
jnp
pop
cmp
lds
xchg
js
xchg
lret
dec
mov
and
jl
negl
aam
or
adc
push
test
xor
in
push
sbb
fmul
mov
xchg
je
pop
and
loop
and
test
ds
dec
pop
cld
fldl
daa
push
popa
sub
push
push
cmpl
sub
enter
pop
out
mov
or
in
lods
dec
xchg
sahf
add
bound
scas
ret
out
ja
cmpsl
dec
adc
stc
divl
or
aas
fists
outsl
cmpsl
xor
cmp
mov
push
ljmp
cmp
andl
add
cs
pop
js
jg
xlat
inc
popa
mov
repz
out
mov
lds
in
lea
inc
mov
add
inc
inc
or
or
push
cmp
push
inc
or
cmp
push
test
jg
rorl
in
aam
xchg
adc
std
daa
sub
jno
add
sysenter
stos
and
xchg
lcall
inc
test
bound
sub
mov
pusha
sti
cmp
or
cli
and
adc
arpl
mov
push
faddl
push
pop
sub
or
add
movsl
adc
outsb
pop
or
test
data16
jo
lcall
jge
pushf
mov
insb
ret
pop
das
out
cmp
rorb
sbb
rorb
ja
jmp
in
jl
jg
lods
mov
bound
mov
pop
cltd
shrl
push
push
inc
add
outsb
sti
cmp
jnp
xchg
dec
push
sahf
jne
int3
scas
lock
mov
out
sti
xchg
xchg
sub
adc
fs
seto
jge
cli
mov
jecxz
bound
sbb
xor
je
aam
and
inc
gs
scas
add
icebp
fnstcw
mov
pop
pop
ret
addr16
jo
in
xor
or
lcall
dec
scas
inc
movsl
dec
je
cld
push
lods
shr
repnz
movsb
inc
cmpsb
push
push
sbb
dec
mov
imul
cmp
mov
jmp
xlat
mov
hlt
xor
repnz
xor
jmp
in
xchg
movl
lds
push
sbb
ja
in
mov
call
mov
clc
adc
inc
sub
and
push
or
inc
xor
aaa
push
and
jecxz
data16
sbbb
imul
dec
mov
jp
push
xor
rorl
ds
stc
pop
ds
out
add
mov
cli
mov
movsl
xchg
ja
in
adc
add
mov
add
outsl
cmc
iret
xchg
xchg
push
inc
clc
add
ret
pop
mov
inc
lods
pusha
in
lods
mov
rol
mov
push
lahf
popf
inc
popa
or
ja
movsl
pop
dec
xor
mov
aaa
sbb
cmp
outsb
cmp
pop
sbb
lcall
shll
dec
popa
test
imul
ficompl
dec
add
testl
insb
xor
cmp
inc
sub
imul
imul
push
inc
decb
cmc
popa
pop
outsb
add
pop
ret
out
mov
call
test
add
sbb
cmp
lret
hlt
dec
fmulp
movsb
mov
jo
mov
sbb
xchg
jecxz
sti
movsb
sbb
repz
fwait
int
xor
cli
loop
aam
mov
xchg
sub
mov
mov
cs
xchg
ljmp
push
pop
gs
fmul
xor
dec
or
jnp
lods
mov
hlt
dec
les
cld
ja
xchg
sub
sar
lahf
pop
jmp
in
out
jmp
cmp
jne
cli
in
loope
cmc
push
fisubrs
push
popf
mov
inc
inc
std
sbb
pop
xor
xchg
test
push
adc
and
cltd
test
jge
test
xchg
mov
jb
sub
lahf
push
cli
push
sbb
shlb
push
arpl
push
pusha
xor
aas
cld
in
mov
stos
sbb
std
xchg
mov
into
mov
rol
push
das
push
mov
icebp
mov
mov
roll
and
add
jecxz
or
fistl
aad
or
mov
adc
stc
cmp
sahf
mov
xchg
sub
ja
or
subl
movsb
rolb
and
imull
push
cmp
push
xchg
cmpl
cli
dec
lcall
test
pop
mov
inc
and
fpatan
fidivl
pop
fwait
lods
and
testb
mov
pop
add
stc
dec
hlt
cwtl
cmpsb
fs
mov
xlat
mov
xor
xor
loop
pop
jge
pop
lahf
fldln2
ljmp
mov
mov
fisubl
add
popa
push
add
cld
push
lahf
mov
push
push
repnz
pop
fcmove
or
pop
popf
fwait
adc
or
push
and
mov
shl
imul
stos
nop
loopne
stos
jmp
test
xchg
test
loope
cmp
scas
adc
das
aaa
xor
je
test
subl
cs
xchg
cltd
fimuls
dec
loopne
xchg
pop
mov
jg
mov
cmp
lock
jae
mov
enter
cmp
jle
dec
loope
add
inc
int
insl
jg
push
cli
xor
mov
or
pushf
or
sbb
je
push
mov
mov
int
pop
sahf
jae
cmp
xor
xchg
push
outsb
and
mov
and
and
and
jg
jmp
mov
sub
dec
je
jo
call
repnz
mov
and
icebp
cmpsl
adc
out
arpl
daa
cmc
pop
js
outsl
out
or
sbb
mov
jl
mov
push
sub
loop
pop
cmpsb
popf
sbb
mov
shll
iret
xor
mov
repnz
xor
mov
and
loopne
add
mov
inc
cmp
inc
mov
mov
cmpsb
int3
arpl
jnp
test
dec
test
sub
scas
rorl
ja
jnp
pop
movl
in
push
mov
movsb
loopne
xor
cli
ds
xchg
aas
lret
decl
cmp
mov
pushf
cwtl
mov
mov
push
outsl
aaa
mov
mov
loop
repz
shrb
sbb
push
and
lods
inc
in
pop
inc
scas
mov
out
sahf
iret
icebp
mov
outsb
cmp
repnz
xor
pop
mov
dec
push
jge
fisubl
mov
or
cmp
add
stos
scas
pop
sbb
dec
sti
xor
adc
xchg
aas
sub
sbb
pop
ja
cmp
lea
sbb
dec
addr16
pop
inc
and
inc
cmp
and
ret
fcomip
sahf
push
ljmp
fucomi
adc
xor
ret
lahf
iret
cs
add
mov
jnp
orb
push
lahf
jne
push
mov
jp
and
aaa
sarb
shlb
or
cld
daa
sub
add
cmp
or
into
or
icebp
js
push
in
sar
mov
add
lea
sbb
test
push
or
sbb
pop
gs
in
dec
mov
stc
mov
lods
clc
xchg
popf
inc
and
lods
and
dec
sub
cmc
lock
cltd
mov
lds
dec
jns
adc
lret
dec
xor
mov
and
rcr
rorb
add
sub
fcmove
gs
ret
mov
mov
adc
sarl
xor
and
out
cmp
mov
mov
loop
add
mov
je
push
or
cmp
int
shrl
and
leave
stos
jge
push
fidivrl
pop
xchg
rolb
cmpsl
xchg
js
cld
fistpl
sbb
adc
sbb
insb
ret
mov
dec
adc
scas
sbb
lock
xchg
ds
dec
aad
sub
loopne
inc
cmp
xchg
sub
lret
cli
jmp
inc
rolb
xor
sarb
enter
jecxz
push
lret
add
pop
fxch
dec
fs
call
pusha
and
aas
test
daa
fisttpl
scas
fists
xlat
pop
dec
mov
adc
or
outsb
adc
jns
sub
es
cmp
inc
or
dec
incl
call
mov
cmp
cmc
pop
ds
pop
jnp
decb
jg
adc
enter
jbe
sti
fbstp
xor
sbb
popf
jl
and
addl
sbb
pop
xor
inc
mov
in
mov
dec
inc
cmpsb
pop
xchg
mov
mov
xor
bound
pop
bound
xchg
popf
push
mov
mov
sub
mov
fiaddl
aad
xchg
mov
repnz
lds
ds
fs
jp
gs
ret
lds
fiadds
pop
and
and
mov
fucomip
jl
dec
das
shr
mov
sub
fcompl
add
sub
dec
cld
add
adc
sti
popf
jne
repnz
mov
mov
mov
xchg
das
xor
ret
sbb
sbb
outsl
cli
pop
std
shlb
sbb
xor
jne
cwtl
or
test
mov
cmp
adc
leave
out
dec
mov
clc
inc
filds
mov
repnz
popw
mov
dec
mov
sub
loopne
icebp
pop
call
mov
lock
inc
call
and
dec
inc
pop
push
dec
xor
pop
mov
cwtl
je
inc
dec
arpl
cli
cmp
inc
lcall
rol
cwtl
lods
sub
hlt
stc
push
mov
lahf
push
mov
add
into
dec
dec
xor
shrb
lret
loope
push
orb
stos
dec
push
enter
push
push
inc
mov
movsl
out
in
or
icebp
xchg
cmpsl
xor
dec
sub
cld
roll
daa
cmp
call
mov
or
adc
push
dec
pop
test
notb
xor
test
sbb
and
pop
adc
dec
push
in
out
mov
mov
test
ret
dec
lcall
xor
and
lods
cli
push
cs
mov
sub
lcall
leave
rorl
push
dec
ljmp
imul
ret
subb
mov
fdivrs
aam
jl
dec
inc
das
jl
pop
and
adcb
inc
or
dec
clc
pusha
aas
pop
ret
fwait
inc
jae
ljmp
pop
pop
pop
fdivs
repnz
xchg
adc
push
adc
js
or
clc
leave
mov
lret
adc
lcall
push
inc
sti
aad
repz
and
jne
sub
and
movsl
xchg
out
leave
lret
cmc
clc
sub
jp
fnsave
sub
cmp
or
pop
stc
sub
dec
mov
sbb
inc
inc
dec
sub
loope
mul
mov
aam
iret
icebp
adc
cmp
pusha
pop
jp
cmpsb
in
loopne
xchg
sub
fldcw
sub
lcall
js
jne
mov
or
inc
fs
push
stc
popf
and
pop
xchg
mov
jo
adc
adc
enter
adc
mov
dec
xor
cmp
in
mov
hlt
and
test
fsts
arpl
push
sbb
jnp
fstpl
loopne
jae
pop
inc
fstps
push
and
leave
les
push
mov
push
sbbb
pop
sub
adc
mov
pop
loope
bound
cmpsb
in
sub
rcll
js
sbb
sub
jle
bound
push
sti
aaa
icebp
sbb
lods
inc
sub
adc
xchg
add
shrb
mov
fisubs
icebp
xor
mov
mov
test
xlat
jle
mov
sbb
inc
lret
inc
xlat
sahf
in
and
dec
jb
movsl
cli
pusha
cmc
scas
ffree
and
cmp
orl
out
push
push
dec
jne
in
push
or
dec
mov
aad
test
lods
aas
sub
test
cmc
fdivrs
jmp
or
sbb
jmp
push
enter
push
cld
pop
idivl
mov
jmp
xor
dec
fidivrs
mov
js
imul
mov
mov
jecxz
loope
cmp
inc
and
out
rcll
pushf
mov
mov
or
scas
pop
popa
lea
ljmp
jnp
sahf
push
jb
lret
cmp
sbb
inc
xor
or
enter
xlat
gs
pop
cbtw
adc
out
cmp
jg,pn
push
mov
mov
ffree
inc
scas
mov
xchg
push
cmp
and
mov
in
aas
xor
mov
out
rcrb
dec
aas
pop
mov
jmp
inc
inc
test
inc
in
xchg
push
dec
into
cmp
outsl
je
adc
pop
cld
cmpsb
jae
sbbl
jae
fimuls
sahf
xchg
mov
outsl
sbb
test
arpl
sahf
fnsave
into
mov
cwtl
push
out
jg
cwtl
add
test
xchg
mov
sbb
fwait
dec
cmp
movsb
push
in
jne
bound
sbbl
test
fstps
mov
in
inc
add
scas
testb
movsl
cmpsb
dec
inc
mov
inc
stos
and
shrb
sub
adc
jecxz
mov
bound
testl
mov
cwtl
pop
add
adcb
inc
push
push
ds
into
lahf
scas
outsl
pop
jbe
xlat
dec
lret
mov
incl
mov
push
pop
in
jo
mov
mov
movsl
inc
cmp
inc
cmp
adc
adc
jns
ljmp
adc
add
sub
mov
ftst
mov
mov
out
out
push
imul
in
mov
mov
xchg
les
jmp
stos
shll
data16
xchg
xchg
repnz
fs
sub
addl
std
or
jno
mov
cmpsb
or
fcoml
sbb
test
mov
out
adc
imul
dec
faddl
or
pop
mov
fcmovnb
out
leave
sahf
fcmovbe
xor
test
jmp
and
pop
rclb
inc
fists
mov
pop
js
es
or
inc
inc
sbb
mov
mov
push
jne
jno
mov
mov
clc
dec
fwait
cmc
call
jecxz
negb
mov
int
scas
test
xchg
adc
push
xchg
sahf
xor
out
out
lods
push
insb
jns
push
bound
int
clc
pop
jno
mov
ret
xchg
aad
andl
sbb
or
aaa
sub
dec
insb
or
or
mov
mov
test
dec
add
out
ja
xorb
clc
pop
movsb
sub
or
cltd
add
ds
sub
mov
mov
or
clc
add
repnz
cltd
xor
test
dec
push
fsub
int3
xchg
and
inc
insb
fwait
mov
fbstp
mov
add
push
mov
and
jo
out
inc
pop
jo
mov
jmp
and
pop
iret
xchg
pop
mov
cmp
mov
jae
mov
movsb
cs
test
sub
cmp
bound
in
outsb
cltd
mov
fcmovnu
or
cmp
push
xchg
mov
aad
jno
outsb
and
pop
jge
dec
inc
push
pop
xor
mov
add
jae
fsubl
cld
xor
jle
pop
notl
mov
lea
xchg
lret
dec
mov
loop
pop
mov
sbbb
push
mov
cmp
sbb
push
imul
push
pop
adc
mov
dec
mov
mov
pop
pusha
adc
jp
sbb
nop
mov
push
in
cltd
mov
jns
or
lds
int3
mov
das
repz
pop
push
dec
jp
jo
sub
jge
push
int
in
dec
or
inc
arpl
sub
or
mov
add
sbb
dec
sub
cli
outsb
sbb
inc
pop
ret
jp
adc
lds
mov
and
jecxz
movntq
imul
daa
bnd
xchg
pinsrw
sub
mov
leave
adc
sbb
xor
stos
es
dec
ss
jge
xchg
out
and
sub
mov
lret
icebp
lods
pop
std
in
ja
dec
jo
pop
loopne
sub
mov
aad
out
xchg
iret
clc
scas
test
test
int
fwait
mov
jl
xchg
adc
mov
cmp
cltd
jp
aam
xchg
insl
pushf
pop
jnp
movsb
dec
mov
xchg
cltd
jl
jno
mov
adc
aaa
test
inc
xchg
mov
js
jae
dec
mov
repnz
jne
es
mov
sahf
stc
pusha
ljmp
addr16
inc
fwait
js
sub
aad
data16
push
rolb
rol
push
mov
add
jle
arpl
es
push
mov
popf
mov
in
xchg
outsb
je
and
adc
aaa
lock
test
andl
sbb
test
loope
arpl
pusha
jg
inc
inc
rorb
pop
sbb
cltd
cmp
or
enter
pop
rcrb
adc
or
js
test
cs
cs
adc
out
xchg
cwtl
push
lds
xchg
xchg
sbb
movsl
movsb
pusha
andb
mov
push
mov
js
pop
jns
daa
int
int3
lahf
data16
add
pop
icebp
push
pop
add
or
cmc
out
dec
test
ljmp
fwait
cwtl
xchg
mov
sbb
adc
mov
bnd
jb
or
aas
mov
sar
fiadds
or
push
dec
fldenv
in
push
fwait
stos
sub
test
inc
dec
insb
inc
imul
push
dec
jne
incl
fsubrs
xchg
push
jae
shll
ss
mov
insl
mov
in
cmpsl
push
fists
or
movsb
arpl
add
loope
popf
cmp
xchg
in
in
add
daa
jbe
dec
xchg
jl
stos
outsb
leave
adc
aaa
fcmovne
loope
cmpsb
loop
dec
jb
or
push
xrelease
xchg
adc
or
cmpb
psllq
lret
insl
xor
enter
bt
mov
add
addr16
xchg
shl
dec
adc
cmp
adc
out
inc
pop
push
xor
mov
shll
mov
divb
inc
addb
mov
ss
add
dec
iret
push
adc
mov
shll
daa
cli
pusha
rclb
xchg
addr16
push
xchg
cltd
add
jp
out
pop
add
fwait
xchg
fistpll
aad
or
insl
es
pusha
das
add
push
jne
mov
js
xor
xchg
xchg
sbb
dec
outsb
push
mov
pop
add
cmp
cmp
xchg
jns
popf
arpl
fbstp
and
dec
lock
pop
inc
and
subb
and
fisubs
cmp
scas
jge
icebp
scas
jae
ljmp
std
mov
and
mov
cmp
rorl
mov
jo
mulb
popf
stos
xchg
xchg
aam
pop
imul
dec
add
pop
lcall
fwait
pushf
out
pop
test
inc
das
pop
arpl
enter
mov
dec
add
pusha
ret
adc
popa
rcr
fdivrs
or
dec
push
cmpsb
lods
adc
add
repnz
cmpsl
sbb
popa
sahf
dec
int
pop
loopne
stc
lods
or
mov
ljmp
sub
jnp
ja
sbb
push
mov
jnp
add
repnz
js
mov
in
fwait
rcrl
outsl
inc
xchg
or
push
mov
call
fbld
pop
stos
push
insb
scas
pop
jle
pop
mov
sbb
mov
sub
inc
sbb
cmpsl
mov
stos
mov
ror
shl
out
es
fnstenv
jb
sub
daa
jnp
pop
sbb
xchg
mov
test
xor
mov
in
add
and
int3
int
xorb
mov
mov
add
mov
jnp
pop
inc
xchg
repz
ficoml
fistps
int3
mov
insb
jns
adc
je
and
sbb
or
cld
jmp
int3
push
pop
mov
pop
mov
scas
pop
mov
fdivrl
sbb
aaa
mov
es
xor
ret
dec
ret
sahf
lds
or
xchg
lret
nop
xor
std
xchg
and
repnz
cli
dec
sbb
jmp
loop
iret
and
xchg
sub
fsub
gs
lock
adc
and
scas
aas
loopne
fwait
dec
mov
movsl
movsl
je
pop
cmp
and
ljmp
inc
cld
sub
mov
jmp
mov
negl
mov
out
sub
into
sahf
dec
or
jge
xchg
xchg
enter
mov
popf
pop
push
rcrb
sbbl
sarb
pop
dec
cmpsl
lods
test
sahf
jae
cmp
jmp
inc
les
push
pop
mov
pop
xchg
jnp
scas
imulb
lds
icebp
xlat
sub
test
inc
pusha
ror
lret
bound
pushl
dec
mov
xor
xchg
mov
in
cltd
lret
dec
mov
pushf
sahf
sbb
mov
hlt
pop
or
push
std
push
movsb
jge
pop
repnz
inc
push
xchg
mov
ds
push
test
or
filds
mov
pop
out
repz
lcall
lcall
sub
getsec
imul
mov
xor
jg
lock
jecxz
mov
mov
xor
shll
adc
rcrl
mov
jge
and
sub
scas
push
test
icebp
lock
cmp
testb
inc
inc
pop
jnp
pop
lahf
cmp
xchg
mov
push
inc
fsubl
into
fildll
and
jg
mov
cmovge
add
jl
loopne
mov
push
sub
popa
aad
lret
subl
xchg
test
xor
jo
arpl
and
inc
adc
pusha
adc
int
and
aas
cmp
mov
xchg
fnstcw
in
rcl
sub
inc
jg
and
jo
pop
scas
lret
xor
sbb
mov
imul
or
test
stos
fdivp
pop
fiadds
inc
jbe
xor
loope
out
iret
inc
pop
inc
jle
xchg
sti
iret
pop
loopne
inc
pop
jne
sbb
fcoms
sbb
jmp
cmp
ret
mov
jmp
std
imul
jle
xor
pushf
push
push
out
in
sti
push
adc
imul
mov
xor
inc
pop
jge
push
add
jnp
push
pop
xor
push
push
nop
pusha
dec
lds
mov
cmp
outsb
fsubrs
ljmp
cld
icebp
out
and
lret
int3
mov
xchg
cmp
adc
in
ljmp
pushf
hlt
sahf
jo
and
aaa
dec
jnp
test
int
fcmove
insb
ret
pop
jge
stos
jle
mulb
cmpsb
cltd
test
mov
lds
and
push
pop
scas
or
jecxz
shll
ret
or
shlb
add
xchg
pushf
cli
ficoml
aad
aaa
idivb
shrb
lea
mulb
push
adc
stc
jns
pop
jp
or
out
ss
or
dec
mov
jns
sbb
mov
push
or
je
xor
xchg
cmpsl
adc
pop
xlat
jns
xorl
xchg
push
les
scas
iret
fwait
push
mov
sbb
hlt
popa
fwait
sbb
dec
xchg
pop
mov
sub
xchg
xlat
aaa
icebp
push
int3
or
or
push
mov
shl
push
xchg
push
adc
dec
and
aas
push
xor
xchg
hlt
roll
xor
imul
inc
dec
test
popf
dec
push
mov
popf
inc
loope
adc
sti
imul
stos
test
es
xlat
jl
jne
mov
or
cli
test
jecxz
test
bound
out
into
repnz
pusha
push
repnz
hlt
or
in
test
ljmp
mov
iret
add
lret
shr
mov
pop
imul
scas
mov
add
or
sbb
xchg
xchg
and
inc
sahf
nop
iret
leave
mull
sbb
aaa
pop
xor
popf
pop
push
mov
popf
cwtl
mov
mov
lahf
sub
mov
jmp
jno
xlat
out
bound
jp
daa
inc
jnp
enter
pop
adc
scas
dec
mov
ds
fistps
sub
fstl
lods
jecxz
mov
adc
mov
add
cltd
mov
mov
lods
push
imul
lock
xor
jg
cmp
in
aam
cmp
inc
enter
mov
lcall
add
xchg
xchg
pop
addr16
subb
pushf
cmp
adcl
jecxz
das
in
lahf
xchg
sub
jne
or
shr
lock
cmp
dec
xchg
outsb
push
in
sbb
dec
mov
sub
lods
fsubrl
orl
mov
jno
xchg
dec
dec
sbb
ret
fbstp
push
sub
and
or
adc
stc
jp
pop
das
test
icebp
adc
mov
test
xor
and
pop
xchg
movsl
dec
call
fs
lea
dec
addr16
test
jns
xor
fwait
adc
fimull
imul
dec
incl
xchg
pop
movsb
jne
popf
sar
and
mov
loop
mov
pop
jne
cmp
mov
cmpsl
jb
jne
call
fcompl
sahf
mov
or
cs
ret
xchg
inc
push
adc
mov
push
add
shll
das
jmp
lods
aaa
mov
iret
or
fsts
cmc
push
leave
add
repz
arpl
push
aam
cmp
call
pop
enter
lods
adc
insb
es
pop
lret
rclb
cvtdq2ps
adc
inc
aas
mov
rorl
shl
push
push
inc
push
aas
cmpsl
fsubrl
mov
add
stos
xchg
out
mov
hlt
rclb
rolb
mov
cmp
in
scas
cmp
das
imull
mov
inc
cltd
pop
pushf
sti
arpl
sub
ret
ja
stc
nop
mov
hlt
int3
inc
lds
movsl
jo
and
jno
pop
push
clc
imul
jp
movsb
and
cmp
inc
dec
cmpsb
rcrb
xor
jae
mov
cmpsb
xchg
std
fwait
and
mov
sbb
dec
adc
cmp
inc
sbb
push
pop
mov
flds
and
dec
sbb
push
sub
sub
jno
lock
les
ds
int
mov
lods
jnp
lret
add
push
jecxz
jmp
push
push
cmp
add
test
mov
movsb
call
mov
jg
outsb
cltd
divl
mov
fidivl
or
cld
mov
dec
popa
sti
cmp
push
sub
data16
ljmp
fwait
sub
and
sub
sub
dec
dec
stos
fs
std
xor
shld
cmp
mov
mov
out
sbb
jne
sarb
push
sbb
subl
pop
outsb
ds
add
mov
adc
data16
mov
insb
dec
stos
enter
or
jnp
lds
or
push
add
std
sahf
mov
sbb
je
fdivp
jns
gs
and
sti
aad
stc
jnp
aad
sub
push
xchg
repnz
adc
inc
ja
sub
imul
xor
in
push
test
lahf
in
inc
mov
sub
mov
jnp
bound
mov
dec
and
lods
data16
movnti
nop
inc
sbb
into
sub
sbb
jnp
mov
loop
adc
in
add
xchg
xor
adc
aam
test
cmp
pop
mov
mov
cmp
and
mov
outsb
shrl
in
icebp
fiaddl
mov
mov
pop
jne
dec
test
pop
sbb
sbb
cwtl
daa
dec
test
movups
andb
and
cmp
scas
stc
aas
or
test
inc
rcrb
lahf
sahf
push
arpl
movsb
and
ret
xchg
xchg
fucomi
popf
xor
faddl
lcall
sbb
lods
mov
and
sbb
and
and
adc
loopne
adc
outsl
pop
sbb
sub
lods
pop
popa
dec
xchg
jnp
add
hlt
xor
cmc
mov
sahf
sti
insl
movsb
hlt
jo
xor
in
and
mov
jmp
xchg
lahf
leave
fildll
ret
cmp
pop
fwait
dec
out
das
mov
inc
bnd
mov
dec
dec
cmpsl
addr16
inc
pop
mov
call
cli
dec
add
sbb
rcr
inc
push
repz
popa
int3
int3
push
pop
xchg
sti
cmc
or
mov
loopne
pushf
mov
mov
add
adc
scas
movsb
cwtl
lahf
cs
push
or
movsl
imul
mov
and
xchg
xor
and
std
iret
andl
dec
rclb
shlb
and
test
xchg
scas
sub
gs
xchg
mov
adc
dec
mov
sarl
sti
cmp
cs
jo
cmp
xor
out
scas
mov
cmc
out
xchg
lds
mov
pop
imul
xchg
xchg
inc
jo
sub
scas
daa
jp
add
xor
mov
jns
cld
out
push
scas
jge
add
pop
dec
mov
jp
mov
adc
test
inc
cmp
rorl
sub
and
or
ror
pushf
lret
dec
aad
jnp
rcll
jmp
loopne
shr
dec
xchg
sahf
test
rorl
popf
out
stos
mov
in
movsl
xor
sub
and
dec
inc
frstor
decl
mov
pop
or
flds
bound
push
stos
minps
movsl
inc
xchg
jg
mov
enter
adc
jb
aad
scas
aad
xor
mov
adcl
nop
xchg
adc
into
mov
inc
xor
push
hlt
inc
jecxz
jb
sarl
dec
and
push
iret
ss
sahf
xlat
les
js,pt
push
mov
mov
andl
or
mov
or
and
inc
cmp
xor
or
fwait
pop
jns
inc
add
insl
or
mov
xor
sti
push
cwtl
adc
mov
test
adc
in
sub
out
sub
mov
cmp
out
push
jne
mov
push
mov
or
jno
jge
les
jge
inc
inc
xor
into
mull
pop
bound
mov
jbe
cld
aaa
mov
fwait
push
loopne,pn
ss
sbb
sahf
fwait
jns
jg
jnp
mulb
addl
pop
mov
out
inc
stos
inc
adc
mov
popf
sbb
out
call
xchg
sub
bound
enter
int3
outsl
arpl
in
lea
sar
stos
and
mov
mov
pop
sbb
mov
mov
jnp
adc
mov
sub
sbb
stos
jp
mov
mov
sub
push
je
cmc
and
ret
enter
stc
fmuls
nop
dec
mov
std
fnstcw
outsb
add
or
out
mov
jle
test
sahf
into
xchg
xor
jo,pt
and
clc
adc
push
mov
inc
lods
dec
popaw
ret
jg
in
shl
ficomps
stos
je
lods
fwait
cwtl
and
jmp
push
sbb
jo
push
mov
inc
mov
push
inc
cmc
fnsave
jecxz
aam
cs
or
or
cmpsl
lods
cmp
push
scas
pop
push
inc
push
adcl
cmp
mov
push
aaa
aas
sub
bound
shl
cli
inc
sti
jge
xor
popf
or
mov
mov
aas
cmp
adc
lds
add
inc
in
pop
cmp
mov
push
and
les
xor
test
ret
push
test
pop
jnp
and
and
push
sbb
js
cs
dec
fwait
lea
push
dec
jge
jg
mov
outsl
push
loope
push
mov
jno
push
testb
stos
out
mov
in
xor
inc
mov
lock
lret
leave
pushf
cli
sbb
loope
lcall
aad
cmc
mov
fs
iret
ds
ja
pusha
pop
in
sbb
xlat
stos
mov
or
add
clc
jmp
sub
enter
cmpl
pop
jle
std
and
mov
sub
jo
out
cs
add
pop
sbbl
int
push
dec
and
pop
jnp
mov
pop
ss
and
dec
scas
jo
daa
enter
cmp
xlat
std
and
sti
fadds
stos
sbb
dec
stos
mov
and
mov
shlb
jecxz
and
addr16
dec
xchg
mulb
lcall
mov
dec
xchg
add
push
jp
sahf
es
or
or
mov
lcall
push
inc
gs
imul
fidivrl
cmp
dec
pushf
mov
inc
cmp
test
js
icebp
call
cmc
push
hlt
mov
xor
jecxz
bound
xor
mov
jnp
sahf
sub
aaa
rorb
es
push
mov
rolb
xchg
daa
fldt
lea
sbb
loopne
or
repnz
or
mov
inc
xchg
nop
pop
stos
cli
decb
cs
movsb
movsb
push
xor
xchg
and
dec
dec
cltd
hlt
daa
xchg
sidtl
aas
ljmp
mov
dec
fsubs
jle
inc
imul
out
pop
jg
pop
mov
inc
jbe
rcrl
rcrb
rcr
cmp
push
sbb
sbb
je
ret
jl
repnz
mov
adc
or
and
xor
sbb
das
add
shlb
test
mov
or
push
js
in
lahf
adc
xchg
lds
aad
mov
or
push
icebp
mov
cmp
cmc
jp
fadd
popf
fdivs
lods
and
stos
adc
jnp
test
pop
cmp
in
push
aaa
pop
repz
sub
or
arpl
mov
lret
pop
notb
xorb
xor
or
adc
nop
into
ds
scas
pop
je
popf
mov
std
dec
loop
out
enter
out
adc
in
paddusw
ja
popa
mov
lret
or
push
cmc
fwait
pushf
cmp
cmp
add
add
imul
fcmovnu
pop
xchg
jmp
repz
daa
sub
and
and
xchg
jp
mov
daa
leave
pop
mov
jge
sbb
fwait
xor
int
sub
divl
inc
xor
sbb
sbb
pop
in
mov
repz
push
arpl
out
orb
roll
movb
mov
lcall
xor
movb
sbbl
nop
out
push
or
add
jo
push
adc
and
ret
adc
pop
xchg
xchg
xchg
and
mov
fcompl
rcrl
add
lcall
fbstp
icebp
xchg
mov
test
popl
test
addb
mov
std
cmp
xor
inc
shrb
dec
pop
gs
les
pop
fwait
shl
aam
popa
int
mov
push
cmc
clts
adc
dec
push
dec
test
jns
stc
dec
rorl
cltd
out
out
xchg
or
int
mov
es
mov
ss
jecxz
or
loopne
xchg
xor
sub
cmp
push
xor
lret
imul
xchg
roll
dec
rorl
cmpsl
xchg
cmp
jno
in
cs
ss
int
testl
jns
push
cli
jmp
pop
dec
pop
jnp
mov
adc
pop
aaa
mov
jb
jl
not
addr16
js
cmp
cmpl
fists
xor
dec
lahf
fcompl
icebp
addr16
mov
cmp
cmp
fldt
and
hlt
cmpsb
fldl
pop
jge
cmp
frstor
int
pop
adc
sbb
push
sahf
in
cli
call
mov
leave
subb
pop
xchg
bound
jae
jge
xchg
lods
enter
mov
mov
enter
pushf
mov
nop
and
rolb
and
adc
and
dec
push
dec
bndldx
mov
mov
mov
sbb
arpl
cwtl
clc
sti
js
cmp
dec
xor
movsl
hlt
mov
and
call
aam
mov
push
pop
mov
out
jb
and
sbb
cltd
loop
cwtl
rcr
dec
pushf
es
mov
iret
lods
icebp
jbe
test
shlb
adc
jmp
push
cmp
jge
filds
pop
ds
adc
fcmovnu
xchg
stc
test
pop
cmpsl
incb
cmp
sub
jb
rcrl
cmp
and
addr16
mov
fwait
pushf
movsl
mov
adc
jae
fisubrl
repnz
jnp
pop
xor
xchg
sub
lret
ljmp
push
js
adc
mov
push
test
ja
pop
mov
int
sbb
pop
xlat
data16
xchg
adc
mov
scas
mov
lods
lea
shrb
shr
fldcw
xchg
adc
ljmp
xchg
push
fcmovb
xchg
pop
mov
push
imul
push
testl
xchg
aaa
mov
mov
mov
mull
ja
shr
lods
mov
inc
jnp
inc
outsb
pop
dec
push
dec
mov
enter
mov
jl
fistl
push
xor
lods
cmp
hlt
rcl
mov
addl
sbb
leave
push
icebp
pop
clc
sbb
in
jae
fisubrl
cmc
pop
xor
mov
or
popf
decb
aad
jg
push
xchg
pop
ja
fidivrs
rcrl
sub
inc
lods
je
rcrb
push
mov
pop
test
lds
dec
not
rorl
inc
cltd
js
dec
js,pt
pop
xchg
test
jg
ds
push
mov
popf
mov
ret
push
jl
outsb
test
out
cltd
xchg
aaa
adc
cmpsl
or
push
add
and
push
and
or
popa
repnz
jecxz
adc
addr16
stos
sub
rcrl
push
arpl
cmp
arpl
fidivl
jne
push
iret
loope
cmp
mov
shl
jg
mov
movsl
fdivrl
mov
jns
sahf
and
xchg
in
andl
pop
xor
push
dec
repnz
jg
cmp
test
jge
or
mov
stos
out
inc
inc
inc
test
mov
stos
mov
imul
pop
enter
std
jle
xchg
or
jbe
and
dec
push
push
fsub
je
cmp
mov
jmp
mov
cmpsl
cli
pop
jns
push
mov
jnp
cmc
shl
test
in
in
dec
cltd
push
das
jns
cmp
ljmp
cmpsl
sub
cmp
push
lea
mov
mov
and
arpl
jns
pop
data16
adc
int3
rorb
sti
bound
xlat
mov
add
cli
and
or
pop
and
shll
addb
stos
push
loope
or
mov
xorb
or
les
or
pop
call
cltd
or
and
lds
aas
lea
fstp
orl
das
fbstp
inc
and
subl
xchg
test
push
push
and
ficompl
lea
movsb
inc
loopne
xchg
xchg
movsb
std
scas
xchg
push
mov
ret
xor
add
rclb
cld
addl
mov
subb
ret
xor
cltd
cwtd
xchg
lea
outsb
xorb
lods
inc
mov
mov
xor
shl
cmpsl
sub
adc
std
dec
dec
aam
sub
loop
push
sbb
test
in
mov
imul
mov
add
mov
dec
fsts
push
cwtl
scas
stos
imul
inc
stos
test
popa
push
addr16
movsb
shll
daa
mov
shlb
mov
jmp
out
popa
daa
xchg
ret
cmp
sahf
xchg
arpl
out
sub
repz
ja
call
add
pop
push
ljmp
xor
xor
in
mov
add
sbb
cmp
mov
sbb
icebp
cs
cmpsl
add
in
fwait
jne
pop
mov
sbb
cmp
and
and
loope
inc
fimuls
cmpsb
aaa
push
push
cmpsb
dec
andl
loope
int
lcall
das
test
imul
jle
sbb
orl
cmp
xchg
cmp
scas
int
push
imul
out
xchg
sti
push
into
loop
xchg
push
jmp
cmpsl
cmp
lods
lret
imul
mov
xchg
imul
sbb
clc
xor
cmpsb
xchg
cmpsb
push
popa
push
jo
dec
mov
addl
dec
cli
xchg
insb
and
jecxz
pop
jno
mov
loope
sahf
ljmp
mov
jno
sub
arpl
fidivl
lock
xchg
push
es
aaa
xchg
xchg
lret
dec
sbb
jle
mov
andb
pop
jns
xor
test
les
push
mov
add
test
dec
ja
adc
lods
lds
cmpsb
sub
add
fdivrs
cmp
mov
xorb
sbb
call
out
push
lock
or
flds
repz
repz
xchg
xor
xchg
cltd
jmp
ds
inc
lret
push
adc
inc
lock
in
insb
push
jns
mov
sbb
popa
sub
pop
pop
cmp
inc
adc
fnsave
xlat
jecxz
movsb
outsl
sub
sub
jo
lea
xor
xlat
mov
cmp
inc
sarb
cmpsl
arpl
mov
cld
lret
sub
xorl
scas
sti
rcrb
add
aas
push
nop
cld
mov
sbb
add
push
js
xor
xor
adc
addr16
call
outsb
pushf
push
jp
hlt
enter
leave
mov
mov
jne
lea
push
xchg
sub
int
lock
pop
dec
test
ljmp
sub
jne
sub
pusha
in
es
int3
gs
repnz
jl
adc
lret
adc
mov
mov
inc
push
test
and
stc
and
sub
orl
push
add
sub
cmpsl
mov
or
hlt
jp
jnp
data16
cmc
xor
mov
into
cmpsb
sbb
cmc
pushf
leave
movl
adc
xchg
cli
pop
jb
outsb
jg
push
or
sti
popf
shr
int3
das
pop
mov
mov
push
arpl
jle
in
stos
or
std
pop
dec
jp
inc
repz
daa
cmpsl
xchg
clc
or
ret
or
push
inc
push
mov
dec
or
adc
shl
push
jl
mov
add
push
stos
mov
or
loopne,pn
insb
adc
shll
in
fistpl
out
cmp
jno
mov
push
and
jge
cltd
in
jb
mov
sub
sbb
xor
and
add
cltd
rorl
mov
insb
dec
aas
leave
cmpsl
or
mov
xchg
add
pop
out
mov
stos
insb
mov
fwait
inc
loope
push
es
and
mov
rcl
call
or
xor
push
aam
mov
in
pop
jecxz
xchg
cwtl
aad
hlt
add
fstpt
mov
xor
inc
inc
mov
pop
sbb
mov
fidivrl
add
mov
push
adc
mov
call
aam
cmpsl
xor
or
push
inc
js
adc
sbb
xchg
loopne
xchg
movsb
les
and
loop
orl
nop
mov
lahf
mov
push
xchg
xchg
roll
jp
xchg
stos
mov
cmc
jg
stos
insl
push
xchg
leave
sub
imul
jg
jb
add
addr16
jo
sub
sub
shr
cmp
int3
push
dec
mov
sbbl
xor
cltd
inc
pop
mov
int3
mov
jo
enter
sub
dec
js
push
notl
xor
leave
fnsave
or
and
pushf
rcrl
inc
pop
push
add
dec
ds
and
popf
shlb
mov
push
adc
and
shll
fs
decl
dec
xchg
rcll
incb
lods
je
add
sub
nop
xlat
or
jno
mov
ret
mov
gs
or
mov
adc
mov
rcrl
cld
jno
xor
cmp
xlat
mov
sar
jo
dec
jo
push
pop
lret
imul
test
pop
ja
es
leave
repnz
test
xchg
inc
jnp
into
xchg
push
cli
push
call
shlb
ret
xchg
call
gs
scas
js
pop
inc
into
dec
pop
adc
je
lcall
cli
icebp
mov
sarl
aaa
andb
xchg
es
push
cwtl
jge
mov
call
adcb
xor
mov
pop
int3
or
fwait
jge
inc
imul
fbstp
mov
sbb
xchg
leave
push
dec
in
sub
jae
mov
ja
enter
sub
and
inc
push
daa
inc
jnp
pop
das
test
jns
xchg
repz
fiadds
popf
daa
push
lds
cli
xor
test
sub
aad
imul
sbb
sbb
mov
push
std
push
pop
mov
icebp
out
rorb
mov
hlt
xchg
sbbb
rclb
lahf
aam
mov
sub
outsb
mov
loope
and
aad
or
jno
xchg
scas
and
inc
divb
test
into
ret
mov
add
push
ljmp
and
jb
das
mov
sub
jmp
jbe
sub
xchg
insl
out
sbb
inc
jmp
dec
std
or
mov
add
iret
push
sub
nop
jb
jle
sbb
pop
sbb
scas
push
push
cmc
ss
xchg
xchg
add
mov
or
jle
jp
sub
lcallw
mov
mov
add
push
mov
push
dec
mov
lret
mov
icebp
mov
fs
mov
push
movsl
or
pop
jbe
jae
mov
mov
mul
out
mov
lret
mov
lret
loope
jecxz
add
push
mov
and
sti
cs
xlat
je
cmc
into
xchg
jmp
repnz
xchg
in
leave
ret
mov
adc
pop
add
div
movsl
addr16
gs
aaa
or
sub
dec
gs
int3
mov
dec
ret
fildl
jae
mov
or
mull
shlb
pushf
mov
out
pop
sbb
or
or
lret
outsl
jle
push
fstpl
aas
mov
fistpl
clc
lahf
clc
xchg
mov
out
push
fcomps
rcll
gs
loop
lahf
test
out
fwait
mov
add
mov
in
es
jno
xlat
int
jg
xor
dec
fimuls
sbb
cmpsb
xchg
stos
sti
ret
mov
xchg
inc
adc
dec
lods
leave
add
push
jecxz
sub
inc
adc
inc
in
or
sbb
mov
mov
cmp
stos
int
daa
jo
les
xchg
ret
out
outsl
into
or
or
mov
sahf
or
mov
dec
dec
sbb
mov
sahf
stc
sub
add
sti
pop
sbb
cwtl
das
aam
push
jle
shl
fstps
mov
popf
pop
sbb
repz
and
pushf
das
mov
andl
or
mov
in
add
and
test
pop
sbb
and
jae
add
sub
in
addr16
push
iret
pop
fbstp
sbb
dec
xchg
sub
dec
xor
aam
cmc
mov
int
add
adc
pop
xchg
lock
mov
and
mov
popa
mov
fistps
imul
scas
testl
jne
jmp
lds
adc
cmp
imul
stos
jl
adc
xor
pop
insb
mov
inc
mov
push
or
mov
push
add
pusha
aaa
pop
mov
jmp
lods
test
sub
mov
call
sbb
inc
mov
dec
cmpb
sarl
push
test
sbb
lds
mov
fs
clc
or
pop
sti
repz
cld
push
int
inc
cltd
jmp
mov
dec
add
add
out
mov
or
and
ret
inc
add
add
add
push
int3
mov
and
mov
adc
in
and
sub
dec
dec
lcall
pop
xchg
pop
push
sbb
pop
pop
and
sahf
sbb
mov
sbb
dec
sub
mov
pop
iret
lock
sbb
out
scas
pop
jae
rcrl
addr16
cwtl
pop
inc
add
lea
adc
mov
add
add
push
sub
mov
xor
push
mov
mov
js
jns
push
xor
or
sub
sbbb
push
and
gs
push
xchg
stc
push
mov
cmc
ret
addr16
call
mov
and
jl
in
andl
add
xor
adc
sub
cmc
cmpsb
daa
lds
and
push
cld
add
push
jb
loop
roll
mov
xor
pop
cmp
jmp
sub
das
inc
aad
lret
mov
lret
xlat
addr16
stos
repnz
arpl
in
jmp
mov
mov
xor
jg
enter
rep
push
stc
sub
pop
pop
in
std
imul
rep
out
lcall
rorb
out
and
fdivr
inc
jmp
dec
es
daa
std
xchg
mov
enter
jecxz
jl
cs
inc
shr
mov
out
xor
les
mov
push
call
add
jb
arpl
leave
mov
xchg
icebp
sbb
loop
push
imul
add
push
aas
push
mov
pop
das
mov
lret
sbb
dec
lret
rol
orl
jb
cmp
cmp
mov
mov
imul
shll
in
inc
movsl
test
sbb
aaa
mov
cltd
stos
adc
inc
adc
pushf
leave
dec
lods
call
xchg
insl
mov
push
data16
mov
sbb
sub
lds
aam
pop
sub
cmp
insl
aaa
loopne
dec
cmp
push
movsb
xchg
nop
mov
cs
mov
add
enter
loop
lock
fildll
sahf
mov
repnz
mov
or
xchg
lea
adc
dec
inc
ret
popa
hlt
pop
icebp
sub
cli
pop
enter
inc
xchg
push
mov
xlat
xchg
ficoms
jae
cmpsb
mov
or
lock
popa
rclb
jb
dec
lahf
or
push
js
lock
int3
insb
jne
push
mov
es
inc
pusha
mov
add
es
mov
hlt
out
jp
fs
dec
sub
test
jge
xor
jbe
cltd
dec
scas
daa
or
sub
jecxz
pop
daa
pop
jge
std
ret
js
adc
fidivrs
mov
push
out
cmp
add
cmp
push
cmp
std
mov
mov
stos
ss
ds
dec
jp
cli
and
orl
mov
mov
bound
xor
fidivrl
sti
mov
jne
cwtl
push
add
lret
push
pop
test
xorl
inc
dec
test
sub
mov
cs
ds
lcall
sti
mov
and
inc
es
dec
xchg
repz
rcr
mov
xchg
mov
jge
xchg
arpl
pusha
scas
ret
xchg
inc
ds
mov
in
add
mov
ret
lods
mov
imul
fs
ljmp
xor
out
fnstcw
sbb
mov
addr16
icebp
loopne
jl
std
fwait
push
xor
fnclex
inc
mov
movsb
out
xchg
add
xor
push
and
pop
mov
rcll
shrb
lcall
mov
aam
and
jl
xor
lock
frstpm(287
adc
mov
jo
adc
mov
call
cmp
lds
hlt
das
imul
dec
jg
and
scas
sbb
inc
cwtl
mov
push
cmp
ret
cmp
insl
in
clc
lret
jns
adc
rcrb
push
pop
xchg
or
dec
inc
push
pusha
mov
jno
fistl
sub
iret
addr16
insl
les
mov
enter
unpcklps
jne
lea
subl
push
mov
and
mov
call
cmpsl
push
cld
fldcw
scas
inc
test
mov
mov
rolb
shl
xor
stc
adc
out
jns
sbb
dec
jle
jb
sahf
aam
hlt
arpl
arpl
xor
enter
inc
jb
insb
in
mov
cmp
fnsave
stc
push
les
mov
loop
sbb
mov
and
dec
push
movsb
mov
push
push
mov
fistps
js
scas
cmpsb
scas
push
xchg
inc
dec
and
xor
sub
incl
pop
jg
imul
xorl
lods
xor
mov
loope
scas
dec
aaa
mov
cwtl
enter
and
cmpsl
mov
mov
arpl
lahf
mov
sub
sahf
cmp
xchg
sbb
daa
add
std
push
aam
enter
ret
fisubl
pop
xchg
nop
jns
mov
icebp
sbbb
dec
sahf
pop
add
mov
mov
cmp
inc
popa
pop
sbb
mov
ffreep
std
aam
xchg
bound
sahf
or
loop
clc
jmp
repz
push
pushf
push
adc
mov
cmp
jp
adc
and
in
in
aas
jb
jle
icebp
testl
xor
ja
sbb
cld
adc
les
outsb
jp
adcb
aam
sub
insl
add
cmp
lahf
mov
repnz
lret
lcall
fcoms
xor
mov
call
out
adc
sbb
stos
ret
icebp
xchg
and
jmp
insb
testl
rol
int
loop
test
pop
jne
scas
outsl
cltd
arpl
sbb
inc
jno
push
pop
or
in
cld
mov
jl
jmp
test
out
mov
fsubr
cmp
mov
cwtl
or
dec
add
sub
lcall
jecxz
jecxz
ficomps
call
xchg
stc
rcrb
hlt
rcrb
sahf
imul
jle
mov
scas
enter
hlt
cmp
adc
aaa
ja
mov
cmp
xorl
mov
cmp
cmc
push
push
push
jne
test
mov
mov
clc
int3
or
and
bound
push
je
mov
rcrl
xchg
mov
adc
add
add
push
add
dec
outsl
or
xlat
jns
sti
push
fcmovnb
out
idivb
pushf
xor
pop
je
pop
inc
mov
mov
daa
lods
test
ljmp
sbb
adc
pop
fistpl
repnz
sub
nop
cmc
lock
jae
adc
out
mov
js
dec
mov
das
in
rorl
out
call
push
add
fisubrs
mov
scas
jp
pop
iret
xor
adc
icebp
ret
pushw
mov
cmp
xchg
mov
popf
repz
sub
xchg
sbb
push
inc
test
push
sti
jb
mov
js
and
out
out
shlb
lea
and
lret
iret
fbstp
jb
xchg
jp
jmp
test
dec
sahf
loop
negb
fisubrl
mov
faddl
dec
lods
jne
cmp
adc
mov
sar
repnz
aad
push
cld
cmp
dec
stos
test
outsl
mov
rcrl
stos
cmpl
sbb
xor
cltd
push
pusha
stos
jle
fs
leave
cli
adc
lahf
gs
mov
push
sbb
shl
add
jl
pop
aas
hlt
rcll
xor
cli
and
call
mov
mov
ljmp
adc
out
sub
jbe
enter
pop
adc
test
pusha
sbb
push
dec
das
ret
popf
cmp
jp
fwait
or
repnz
loop
and
loope
in
xor
adc
movsb
into
xchg
pop
lock
push
sbb
jnp
cmp
scas
pop
outsb
pop
lock
orb
mov
pop
orl
dec
movsl
int
push
jl
pop
movsb
sar
pushl
ds
div
adc
insl
inc
jg
stos
fbld
lea
fstpl
mov
cmpsl
je
xor
je
ficoms
ret
xchg
fsubl
push
cltd
xlat
test
nop
rcr
mov
mov
inc
out
aam
jnp
ret
repz
in
addr16
push
sub
cwtl
das
dec
sub
insb
lods
imul
out
js
cmpsb
loop
xchg
push
xlat
adc
aam
data16
xchg
xchg
inc
icebp
fsub
cmp
mov
ljmp
shrb
adc
mov
pop
sub
out
add
enter
jbe
fldl
and
lret
stos
push
dec
mov
pop
adc
add
mov
in
cmp
rclb
in
mov
cld
mov
lods
fstps
jecxz
xor
sub
ljmp
mov
movsb
push
mov
mov
lahf
inc
pop
es
pop
push
sub
int
adc
lea
fcmovb
pop
mov
and
mov
loopne
pop
jmp
push
cmpsb
out
push
cmp
rcll
loopne
aad
out
sub
add
push
roll
xchg
ljmp
movsb
or
out
add
pop
jmp
stos
mov
jbe
mov
iret
lret
pop
fisttps
xchg
push
mov
orl
and
xor
adc
ja
xchg
sub
sbbb
cwtl
cmc
ja
adc
data16
lock
xchg
ljmp
test
adc
outsl
sbb
xor
sti
cmp
pop
shlb
dec
mov
cmp
mov
out
fwait
pop
aaa
add
inc
mov
int
adc
out
sub
xchg
daa
sub
mov
dec
shr
jo
mov
push
and
jnp
inc
fwait
ss
int
pushf
mov
jae
push
mov
mov
call
xor
lds
push
dec
int3
or
aam
sar
leave
pop
popf
xchg
add
mov
popa
and
fwait
add
arpl
test
test
lahf
or
add
je
data16
push
fucomi
jp
mov
flds
scas
std
rol
fsts
fdivrs
mov
pop
jno
outsb
loope
icebp
jmp
dec
ds
or
mov
test
and
shrb
cli
jnp
fildll
and
mov
imul
out
jbe
pop
add
adc
aad
mov
cmpsl
loop
xor
pusha
jp
mov
or
outsl
cmp
fst
shrl
push
out
xchg
xor
and
lods
enter
fs
dec
insb
pusha
or
push
sbb
aas
jp
xlat
push
out
gs
xchg
ja
roll
aam
pop
aad
imul
loopne
pop
repz
popf
mov
jle
xchg
mov
rolb
mov
sub
das
addr16
fnsave
inc
lcall
mov
mov
es
cmp
fidivs
lds
pop
mov
loop
dec
shlb
pop
fdivs
scas
js
inc
loopne
jne
sbb
adc
cmp
adc
faddl
jmp
dec
lcall
jg
cld
lahf
jnp
add
subb
and
and
idiv
lods
mov
xor
jl
cmp
loopne
dec
pop
push
pop
push
jecxz
into
lods
push
inc
out
adc
lock
ret
cmc
jb
stos
mov
out
push
ret
bound
xchg
jecxz
ja
out
xlat
push
cmc
sbb
ss
xor
adc
into
xor
add
and
dec
or
cld
jecxz
stos
pop
push
mov
pop
mov
mov
shll
out
mov
shr
icebp
and
mov
xor
movsb
jmp
jl
stos
dec
fiaddl
sbb
pop
aad
cmc
call
loopne
push
arpl
in
cmpsl
cwtl
fldcw
movsb
outsl
push
jb
fs
push
mov
dec
xchg
cmp
in
mov
sub
jbe
addl
push
jne
in
fcoms
out
adc
in
pushf
cmpsb
out
cmp
arpl
sahf
std
test
lret
lahf
aas
fidivs
xchg
sar
mov
jo
adc
insb
mov
sub
mov
imul
cmp
sub
and
aam
ret
test
add
mov
xor
sbb
mov
cmp
add
or
sbb
pop
iret
and
faddl
popf
roll
stos
xlat
loop
lea
outsb
mov
mov
dec
or
pop
insb
mov
add
or
xor
ljmp
adc
mov
lods
cmc
inc
sbb
pop
push
lea
jo
inc
or
sub
movsl
mov
add
push
sub
mov
dec
xor
lcall
jl
mov
jbe
out
pop
add
xchg
pop
lds
xor
cmp
inc
fisttps
inc
sbb
pushf
mov
test
addr16
xchg
call
lret
dec
ja
fistl
repz
pop
sub
or
negl
push
or
imul
lahf
in
mov
inc
in
push
mov
into
fdivrl
dec
mov
jecxz
xor
mov
std
xor
inc
mov
mov
out
push
jbe
add
jl
roll
jbe
lds
and
sub
cmpl
xchg
inc
or
cmpsw
pop
adc
jle
mov
xchg
and
aam
mov
mov
cmp
into
adc
xchg
scas
sbb
mov
out
sbb
leave
cmpsb
or
mov
lret
sbb
xor
fmul
pop
pop
cmp
dec
mov
push
mov
nop
idivl
stos
addr16
and
adc
push
cld
dec
fildll
cwtl
or
jb
scas
cwtl
lods
loopne
mov
ror
adc
int3
sahf
shlb
pop
dec
xlat
ljmp
enter
daa
mov
mov
xchg
mov
jne
dec
push
mov
lret
cmp
add
sub
insl
test
sbb
jmp
mov
aaa
in
popf
iret
rcl
rorb
iret
adc
cmp
jbe
test
pushf
insb
fdivs
cmpl
ljmp
push
adcl
sbb
pushf
dec
jnp
mov
or
in
aaa
add
clc
repz
jg
xor
jg
mov
lahf
xor
lock
gs
test
mov
push
jb
cmpsb
mov
rclb
mov
shl
lea
cmp
jg
sbb
or
lock
sub
xlat
mov
pop
scas
imul
lret
stc
adc
aad
cmp
arpl
cmp
or
mov
inc
ja
xchg
jno
das
adc
loop
gs
mov
xchg
daa
sub
jle
or
gs
mov
inc
ss
out
bound
icebp
std
arpl
icebp
pop
jp
repnz
jae
scas
jno
out
rcr
fiadds
mov
cmp
lds
aam
xchg
in
mov
in
jle
movsb
in
lret
sub
and
cwtl
xchg
pusha
test
xor
jno
dec
lret
mov
or
jo
sahf
out
jl
xor
add
xchg
in
xchg
and
cmp
sbbl
adc
stos
bound
mov
mov
sub
out
je
sbb
jns
insl
decl
jle
push
cmp
shll
xchg
mov
lret
sbb
lock
mov
jbe
or
pop
mov
faddl
repz
cmc
adc
fisttps
jne
cld
cmp
adcb
fwait
clc
out
sbb
or
and
push
lods
xchg
sbb
xor
fwait
mov
das
push
xor
sar
xor
in
jne
mov
insb
rcr
cmp
sub
jbe
fcomps
jne
icebp
dec
imul
in
dec
into
jg
mov
loope
fs
fwait
xorl
dec
jg
add
cs
inc
mov
js
andl
fcmovb
cmp
jne
cmpsb
mov
mov
ds
outsb
xchg
xor
fsub
pusha
jge
mov
xchg
stc
fdivl
jbe
xchg
dec
popa
pop
and
pop
pop
and
les
dec
repz
cmp
cmp
test
sbb
push
aam
out
sub
cld
push
addr16
inc
push
cmp
pop
mov
mov
dec
and
mov
and
cmp
lret
xchg
stos
jns
push
pop
into
lods
fiadds
cltd
call
xor
mov
fstps
call
rcrl
test
iret
fistpll
cmp
push
push
pop
in
clc
enter
inc
ret
add
mov
mov
jo
adc
push
or
mov
scas
push
dec
xchg
cmpsb
push
es
xchg
ljmp
mov
mov
ja
and
movsl
daa
cs
cmpsb
addl
jae
dec
sbb
and
rcrb
jns
xor
jge
fsubs
call
inc
jmp
fwait
jne
push
push
movsl
mov
int3
daa
xchg
or
imul
lret
sti
mov
ret
sub
lds
into
and
dec
clc
pop
adc
pushf
lcall
mov
xorb
imul
sbb
iret
sbbl
iret
sbb
or
push
and
mov
mov
scas
leave
dec
fldt
push
inc
stos
mov
loop
lahf
add
jl
pop
add
push
jae
insl
jns
enter
mov
pop
pop
gs
cmp
add
ret
stc
stos
hlt
pop
jno
push
stos
and
mov
pop
push
sbb
stos
out
out
out
imul
mov
repz
ret
xlat
fwait
jae
jb
mov
jmp
in
cmp
es
push
fs
in
das
inc
daa
mov
jb
pop
xor
imul
out
sub
daa
xchg
daa
dec
push
popa
je
sub
push
bound
or
xor
int3
out
xchg
add
mov
push
pop
enter
rcr
adcb
insb
pop
rorl
push
scas
mov
ret
mov
pop
sbb
mov
jmp
outsl
ficoms
mov
out
int3
mov
sbb
adc
jae
data16
enter
xchg
test
dec
mov
in
xchg
ljmp
jae
inc
jns
ss
add
push
daa
pop
sub
and
cmp
fistps
add
shll
sbb
fxch
push
jge
pop
sbb
xor
mov
or
into
add
adc
pop
das
cs
xchg
test
xor
inc
das
and
add
dec
cmp
imul
mov
movsb
movsl
push
arpl
add
jnp
fldcw
notl
fchs
bound
mov
data16
add
cmp
mov
insb
faddl
inc
cmp
movsl
sbb
lock
je
gs
imul
adc
dec
imul
add
pop
push
pop
divb
mov
mov
fs
adc
xchg
iret
cmpsl
cmpsb
sbb
xchg
sbb
dec
push
stos
test
sbb
cmp
cltd
push
mov
mov
mov
xchg
sub
xchg
mov
xlat
sub
shl
mov
lea
fisttpll
mov
jno
xchg
push
imul
rolb
jmp
adc
call
xchg
and
xorb
lret
lcall
orb
stos
or
jmp
push
mov
mov
aas
mov
movb
iret
pop
test
push
rcll
adc
fidivs
cmp
out
adc
add
lods
cmp
xor
mov
or
inc
int3
sbb
pop
push
imull
fstpl
push
outsb
sub
push
cmp
dec
push
stos
sub
cmp
adc
mov
xlat
jmp
inc
rorb
popa
adc
add
cld
std
jnp
outsl
lret
sub
mov
ret
shlb
rclb
stc
pushf
insb
sub
fists
into
mov
mov
cmp
mov
insl
mov
and
fldcw
ffree
faddl
stos
inc
lods
inc
push
ljmp
in
enter
mov
lods
mov
lea
in
sub
mov
mov
push
or
push
fwait
mov
mov
loop
pushf
pop
or
je
pop
movsb
fisubs
xlat
xchg
mov
and
jl
add
add
sub
jmp
add
push
mov
sti
fstpl
iret
pusha
test
and
rcr
pop
add
cmp
imulb
lret
int
add
jp
sub
repnz
xorl
add
pop
xor
adc
scas
stos
int3
decl
xor
rorb
gs
inc
cmp
push
inc
mov
out
addb
pop
xor
mov
sbb
rcll
repnz
test
jo
daa
nop
sub
test
mov
sub
push
imull
pusha
mov
xchg
mov
push
push
sub
mov
xorl
xchg
or
mov
mov
add
mov
ret
jno
loopne
mov
push
adc
test
mov
inc
xchg
inc
sub
add
movsl
push
pop
leave
xchg
and
push
jp
pop
jecxz
sbb
ja
mov
insl
fidivl
roll
jmp
pop
adc
xchg
push
fwait
loop
jge
push
dec
test
pop
jg
ret
out
lds
push
pop
fwait
dec
xor
cmp
mov
cld
stos
lea
xchg
mov
pusha
add
push
push
cmpsl
pop
adc
pop
stos
cmc
inc
and
push
pop
test
xchg
jmp
mov
aam
pop
dec
add
inc
mov
cmp
adc
ljmp
cmpsb
push
roll
inc
push
xchg
addl
gs
mov
insb
xchg
sbbl
cmpb
cmp
out
adc
aam
jno
bound
ficoml
loop
daa
and
or
lret
cmp
shl
xchg
adc
jge
pop
dec
stos
push
je
dec
into
lahf
test
inc
xchg
ret
jmp
cld
aam
mov
add
pop
cmpb
jae
sub
mov
loope
adc
push
mov
aam
out
lahf
mov
add
mov
imul
xchg
fistpl
mov
mov
adc
xchg
mov
icebp
sub
clc
cmp
jne
pop
cmp
imul
xor
js
mov
test
push
das
dec
div
fbstp
daa
inc
bound
lds
ud2
cltd
lds
sbb
xchg
mov
inc
fwait
sbb
jl
pop
sti
adc
inc
pop
push
and
in
push
lods
std
inc
lea
dec
sbb
in
fdivrs
stos
addr16
ljmp
sub
in
in
ja
daa
lock
xchg
mov
out
fildll
pop
mov
gs
arpl
test
mov
cli
ret
jecxz
in
fdivrl
sbb
pop
js
mov
cmc
xchg
adc
pop
mov
repz
daa
jb
in
fstpl
dec
popa
cmp
stos
insb
xchg
outsb
pop
xchg
pop
inc
xchg
push
xchg
xchg
insl
pop
or
gs
js
test
adc
sahf
push
pop
sub
scas
xchg
data16
adc
fcomi
dec
adc
jnp
xchg
lea
and
push
insl
sub
nop
pop
sub
ja
fst
test
and
lea
mov
jmp
popa
mov
mov
lea
popl
add
dec
sbb
sub
pop
divl
in
neg
and
mov
clc
ss
pop
out
add
cld
pop
jg
sub
out
cmpsl
loope
xor
push
and
push
push
arpl
cwtl
addl
xor
iret
xchg
out
lret
stos
mov
ret
mov
push
ftst
dec
sti
cmc
daa
push
in
sub
sbb
sub
dec
stos
mov
je
in
push
cli
stos
push
pop
dec
cmc
imul
hlt
mov
jbe
pop
xchg
fs
in
dec
imul
push
xor
movsb
xchg
add
xchg
pop
sbb
jo
popa
inc
push
in
gs
std
add
pop
xor
loopne
test
test
add
xchg
jge
outsl
fnstsw
xor
pop
clc
push
xchg
rcll
and
and
ret
sbb
stc
ficomps
cmp
cmp
fcomps
or
imul
cltd
pop
xor
adc
das
jns
adc
sbb
cmpsl
clc
xor
inc
iret
int
ds
in
xchg
dec
in
int3
sbb
popf
jp
addl
mov
rcrl
jg
cld
sub
fsubr
adc
das
subl
adc
repz
jno
or
mov
push
repz
ljmp
rcl
int
out
fsubrl
jae
mov
jge
dec
ds
out
pop
fst
lods
ror
stos
hlt
pop
inc
cmp
in
outsb
mov
xchg
push
cmp
cmp
sti
arpl
test
test
adc
jae
jle
push
inc
cmpsb
filds
addr16
dec
xor
rcll
fistpl
mov
jns
fdivrl
shl
shlb
ret
rcrb
ljmp
mov
or
xchg
pop
int3
loope
rcr
and
push
ja
stos
mov
das
dec
ljmp
inc
inc
sahf
inc
imul
dec
pop
insb
repnz
nop
scas
loop
push
arpl
lahf
mov
inc
in
mov
rcll
andb
div
out
and
int3
loopne
adc
cld
and
ss
jns
push
movsb
stc
jbe
xor
lea
xor
in
out
jb
pushf
pop
sbb
stc
outsl
fmull
dec
test
aam
sti
pop
iret
repnz
cmp
xchg
add
push
mov
xlat
call
fisttpl
repz
js
xor
push
pushf
stos
icebp
xchg
fdivl
shll
imul
clc
iret
das
loop
xor
adc
mov
int3
jbe
add
cmpsb
mov
neg
xor
pop
jle
hlt
pop
add
xor
inc
nop
push
xchg
jnp
rorb
loope
mov
fcmovnb
adc
fldenv
sbb
push
in
inc
mov
pop
insl
pusha
loop
cmp
or
add
jge
pop
pop
inc
daa
jne
mov
xchg
loope
pop
dec
mov
jo
sub
push
mov
ss
sub
and
push
mov
jg
movsl
jbe
mov
cmp
inc
dec
jns
xchg
int3
sub
push
or
test
jbe
or
pop
mov
fwait
fs
push
subl
hlt
mov
and
pop
jge
push
rcrl
dec
aas
add
push
jg
push
pop
inc
jbe
mov
or
rorb
shll
mov
out
in
adc
aas
dec
ret
bound
adc
push
sub
out
jl
cli
ror
jo
mov
mov
and
xchg
rorl
call
and
js
imul
pusha
and
fstps
xchg
cli
hlt
xchg
add
mov
frstor
mov
inc
dec
shll
or
inc
call
xor
pop
sarb
pop
fsub
and
or
push
idiv
jmp
pcmpgtw
cmp
ds
roll
adc
cmpsb
imul
mov
push
push
jg
add
cwtl
pop
mov
test
xor
cmp
add
sahf
sbb
or
dec
enter
inc
data16
cld
lahf
mov
mov
and
out
xor
xchg
pop
xor
hlt
flds
loop
pop
arpl
ficompl
jbe
sahf
or
mov
jo
mov
clc
outsb
mov
cwtl
xor
es
mov
mov
push
test
inc
sbb
and
dec
fsubr
or
pushl
jle
inc
out
sbb
jne
aad
icebp
cmp
mov
mov
cmp
dec
jbe
or
jecxz
mov
loope
test
cmp
jg
cld
nop
aas
mov
xor
and
push
cmc
dec
pusha
xchg
push
jno
xlat
and
iret
xchg
xchg
mov
sti
pop
dec
pop
cmc
push
push
ret
jge
jae
xor
imul
test
dec
adc
push
sub
pop
sub
cs
cwtl
sub
or
or
fistl
rorb
jle
shrl
bound
cmpsb
xchg
ficoml
xor
sbb
fs
dec
lret
insl
xchg
call
adc
shll
rcr
jg
and
rorb
shll
xchg
les
xor
mov
jle
aaa
or
xchg
sbb
mov
mov
dec
pop
fistpl
lcall
mov
push
jp
sbbl
mov
insb
shl
stc
add
sub
mov
cmp
mov
sbb
cmp
mov
stc
or
roll
jg
rolb
cltd
leave
and
jmp
mov
xchg
or
aam
cmpsb
lds
mov
pushf
dec
neg
in
pop
cmpsb
ret
nop
cmp
sbb
fisubs
movsl
pop
mov
xlat
mov
subb
int
lret
xor
add
lret
push
inc
aaa
jno
mov
jmp
jae
cmp
push
daa
mov
and
mov
cmc
mov
add
ja
imul
movsb
sarb
lods
inc
jg
das
xor
les
sub
sbb
rcll
inc
jnp
lods
mov
xlat
lock
add
hlt
push
movq
lcall
cmp
sbb
fwait
cli
xor
or
out
xchg
and
stos
out
pop
test
divb
iret
mov
or
or
stc
js
xchg
out
imul
or
lock
push
push
test
or
pop
stos
dec
xor
mov
sar
adc
movsl
movsb
inc
or
cmp
mov
test
lock
dec
popf
cmp
lcall
sti
push
repz
pop
mov
stos
and
mov
sbb
cs
aam
movsb
adc
mov
aad
mov
loopne
add
or
mov
cmp
dec
ret
sbbl
dec
pop
ret
adc
pop
lret
fs
mov
out
test
mov
and
xchg
dec
int
repz
cmp
lds
aaa
jae
and
xchg
addr16
xchg
add
into
sbb
rcl
xchg
rclb
inc
push
rclb
bound
mov
scas
pusha
lcall
ret
loop
jp
ret
add
in
mov
mov
dec
pop
inc
and
jl
push
pop
or
cmpsl
loop
pop
cmp
sbb
xor
mov
dec
lahf
in
shlb
test
fwait
xlat
movsb
or
inc
dec
push
cmp
in
push
jb
fbstp
sub
fistpll
hlt
lcall
outsb
insl
adc
and
ret
xchg
and
cmc
mov
mov
aaa
fiadds
mov
push
mov
and
mul
pop
inc
testb
pop
fsubrs
inc
add
cmp
mov
int3
scas
xor
movlhps
xor
out
xchg
mov
das
jg
daa
xchg
xor
ret
fs
subb
outsl
shll
push
adc
popa
dec
dec
mov
lods
pop
mov
out
movsb
push
mov
addr16
or
loope
lahf
add
loopne
mov
sbb
mov
into
add
xor
xchg
or
xlat
bound
adcl
pop
xchg
imul
push
arpl
out
adc
es
ror
pop
scas
mov
ret
negb
loop
sub
stos
mov
or
mov
xor
cmpl
pop
cmp
mov
out
mov
inc
xchg
in
and
jge
fstp
into
mov
inc
ret
and
divb
bnd
jo
jp
lahf
pop
in
xor
repnz
addb
xor
notb
test
fdivrs
cvtps2pd
xchg
punpcklbw
in
sub
sbb
push
mov
arpl
mov
adc
adc
xchg
mov
jl
fistpl
push
es
imul
arpl
arpl
jne
dec
mov
fisttpll
mov
in
ss
sbb
add
and
stos
pop
into
xor
push
les
xchg
mulb
jp
scas
pop
pop
add
imul
inc
mov
in
andb
mov
test
loop
fdivr
and
jnp
aam
subb
sahf
jb
xor
push
xchg
push
inc
adc
aaa
mov
push
dec
imul
ss
ret
mov
pop
cmp
cmp
xor
in
jbe
xchg
jmp
rclb
mov
lcall
repnz
rorl
nop
sarb
dec
xchg
fwait
xor
ljmp
out
xlat
sbb
aam
aas
out
adc
push
jnp
scas
push
daa
add
cmp
insb
jno
mov
inc
xor
push
imul
sub
pop
xor
outsl
iret
add
and
inc
cmp
data16
mov
add
or
andb
icebp
test
js
pop
lock
lods
movsl
add
push
jb
mov
daa
cmp
fs
sti
pop
mov
arpl
jle
mov
daa
mov
inc
rcl
mov
push
adcb
sbb
pop
mov
xor
pop
and
sub
sbb
popa
cmpsb
test
rol
test
ljmp
repz
popa
pop
scas
jge
in
jnp
pop
cmp
jge
ret
pop
adc
jb
pop
jmp
mov
sbb
cmc
sbb
jbe
lods
mov
mov
push
daa
inc
adc
push
mov
fdiv
jbe
fucomi
popa
stos
push
aam
rorb
push
lods
clc
fsts
pusha
adc
insb
lock
nop
es
or
loope
jmp
inc
adc
shll
int3
mov
cmpsb
sub
dec
mov
jecxz
iret
or
pop
stos
into
lea
jle
daa
push
xor
lods
sti
dec
and
xchg
xchg
inc
pop
xor
sub
testl
mov
shll
sbb
fcoml
popa
pusha
mov
repz
jbe
lret
pop
xchg
add
pop
adc
fadds
fstl
pop
js
negb
aam
sbb
imul
lret
ficoml
cmp
std
aad
mov
mov
int
mov
and
mov
inc
outsl
xchg
je
xorl
test
lahf
pcmpeqw
icebp
hlt
jle
jp
mov
popf
aad
xchg
stos
aaa
push
mov
out
cltd
xor
and
ret
sub
cld
aad
add
add
mov
fwait
popf
adc
out
pushf
push
add
fdiv
sahf
fnstsw
sbb
mov
pop
pop
gs
and
mov
and
in
pop
mov
shl
mov
or
pop
xlat
push
xchg
cmpsl
aam
sbb
sbb
or
xor
push
mov
jecxz
mov
sahf
sbb
popa
cmpsl
inc
cwtl
xlat
mov
inc
insb
cli
mov
dec
xchg
fs
ror
daa
pop
mov
push
nop
push
fistpll
pop
sti
fisttpll
mov
clc
in
sbb
xchg
inc
and
out
cltd
jmp
push
jo
xchg
lret
popa
out
mov
call
jno
cmpl
out
push
mov
jo
mov
mov
lds
inc
and
lea
shll
ljmp
sub
sbb
nop
call
sbb
cwtl
ficompl
test
pop
jno
adc
insl
call
cwtl
pusha
inc
int3
jnp
pop
outsl
in
mov
xchg
test
cmp
outsl
mov
cltd
inc
sarb
mov
or
stos
sti
nop
mov
fists
iret
mov
mov
sbb
jp
push
or
mov
dec
clc
pop
pop
jge
push
decl
cld
mov
lahf
loope
sbb
hlt
fildl
adc
push
mov
das
stos
aam
and
pop
sbb
je
dec
shlb
scas
jecxz
shll
pushl
test
out
aas
jae
mov
in
sbb
and
sahf
mov
out
aad
outsb
and
orb
in
add
jecxz
mov
mull
arpl
imul
into
or
lods
xchg
fidivrl
inc
bound
mov
pop
push
out
jmp
mov
cmp
jns
xor
outsl
lea
dec
pop
icebp
sub
push
mov
mov
inc
movsb
pop
pop
inc
outsl
mov
push
into
out
mov
sbb
fdivrp
inc
out
push
div
adc
lahf
add
cmpsl
adc
mov
loope
xchg
jle
imull
std
add
shrl
add
mov
sbb
fstps
call
inc
adcb
lock
adc
jecxz
sub
pop
repz
sbb
or
and
fcmovb
sbb
pop
call
lret
push
bound
xor
mov
mov
jnp
pusha
cli
push
xorw
daa
sub
stos
add
pop
mov
mov
shlb
sbb
dec
push
xor
js
add
push
sar
outsl
jecxz
loope
push
les
rcll
cli
cwtl
out
out
data16
or
sub
mov
add
pop
mov
xchg
add
xor
add
or
xchg
outsb
div
xchg
push
sub
bound
adc
mov
adc
cltd
test
imul
clc
jo
push
in
movsl
xchg
pop
cmpsl
sbb
sub
and
test
adcb
popa
sub
cmc
mov
sbb
add
xchg
shlb
mov
mov
pop
jle
push
pop
loope
enter
ret
jns
adc
xchg
pop
nop
lret
xchg
xchg
clc
ret
jbe
sbb
xchg
and
add
into
push
mov
sbb
push
je
and
dec
dec
mov
jno
xchg
in
stos
testb
sti
dec
xchg
mov
push
sub
adc
sahf
ret
idivb
and
imul
mov
sbb
dec
cli
inc
and
xor
push
arpl
xchg
bound
out
inc
pop
sub
jae
or
ja
sub
adc
cmp
imul
sbb
push
cwtl
insl
ss
out
loope
rcr
lret
dec
inc
push
into
or
lahf
cltd
scas
fwait
push
dec
cmp
push
and
mov
sbb
repnz
cmp
ss
cmp
dec
cmp
test
push
push
movsb
arpl
jmp
inc
mov
in
pop
loope
push
push
xor
and
shlb
or
mov
or
xchg
mov
jmp
ja
je
test
ds
jl
fmull
dec
xchg
sub
cltd
jns
push
je
mov
cmp
les
mov
xlat
call
jmp
and
mov
xchg
mov
or
incb
mov
sbb
adc
cli
mov
imul
mov
sub
dec
mov
lea
loopne
popf
cmc
je
dec
sbb
data16
dec
dec
movsb
push
push
outsl
dec
jnp
aam
insl
jbe
xor
dec
arpl
dec
cmc
cmp
out
and
or
xchg
jmp
roll
mov
add
mov
inc
inc
lret
mov
push
out
sub
push
mov
lods
jno
xchg
outsb
jmp
jg
cmp
xor
or
cs
push
inc
xchg
pop
add
decb
mov
fldcw
dec
mov
inc
es
sarb
xchg
lock
out
dec
scas
loopne
clc
cmpsl
mov
clc
jae
mov
push
xor
inc
mov
and
push
sbb
mov
pop
adc
xor
je
fisubl
mulb
push
shrl
loope
fs
jge
mov
push
cld
mov
inc
cmpsb
push
outsl
and
inc
hlt
pop
rcrl
sub
dec
out
mov
pop
xor
nop
in
cwtl
scas
in
mov
es
aas
add
add
sub
movsb
stos
mov
cld
bound
jbe
cmp
jne
cmp
jno
mov
sbb
outsl
rorl
sbb
jmp
mov
xchg
es
loopne
mov
jo
sbb
clc
aas
mov
and
sbb
mov
jmp
aaa
das
sar
in
jb
xor
lods
mov
jnp
mov
dec
pusha
repnz
negb
mov
lds
mov
cmp
mov
repz
sbbl
inc
push
addr16
adc
out
push
scas
pusha
scas
lret
fnstsw
push
movsl
xor
je
imul
loop
daa
out
imul
pop
rorb
or
push
adc
pop
fiadds
leave
stos
mov
stos
scas
outsl
cld
aas
sbb
add
xorl
js
mov
loopne
jmp
and
fwait
and
xor
adc
bound
jae
pop
jg
xchg
push
inc
adc
aad
jno
adc
xchg
or
jmp
xor
adc
les
xchg
stc
mov
add
mov
nop
cmpl
mov
clc
push
inc
dec
push
out
pop
fldt
adc
mov
sub
outsl
adcl
scas
push
jbe
cmp
pop
xor
les
xchg
frstor
push
mov
lea
fstl
cltd
pop
aam
xchg
xchg
sub
or
jno
out
idivl
mul
popa
int3
fs
dec
adc
outsb
sarb
mov
add
jbe
popl
neg
fs
dec
mov
bound
out
lahf
cmp
lods
or
in
orl
testl
sarb
lahf
rcrl
lcall
sahf
mov
daa
pop
lods
lahf
pusha
mov
test
inc
movsb
inc
gs
dec
stos
shll
push
icebp
inc
imul
aad
out
adc
pop
pusha
dec
xchg
or
or
mov
add
lret
insb
dec
jns
in
into
cmp
pop
jmp
jb
jge
sbb
jnp
push
push
push
ja
andl
fiaddl
mov
fwait
insl
dec
shll
push
int3
addb
scas
push
out
mov
lret
mov
sub
daa
outsb
imulb
mov
mov
mov
pop
mov
orb
gs
dec
popf
and
add
in
mov
vphaddubw
mov
in
push
addr16
mov
mov
ds
mov
pop
imul
inc
mov
inc
dec
subb
and
dec
idivl
push
sti
jbe
stos
ds
add
or
in
in
add
rcrl
stc
cs
dec
dec
jp
jge
xchg
xchg
movsb
fsubl
add
sub
aam
mov
stos
or
in
jl
xor
adc
inc
push
push
lods
fs
sbb
je
mov
fcomps
cltd
test
push
loopne
sbb
pop
mov
pop
pop
sbb
scas
loopne
xchg
addr16
mov
arpl
jge
ror
mov
test
sahf
movsb
ret
or
cmp
adc
repz
lods
stos
push
and
push
clc
hlt
jns
bswap
adc
dec
clc
aam
pusha
push
adc
cwtl
aaa
stc
jbe
mov
into
cmc
push
shlb
int3
adc
jae
mov
lea
mov
push
push
add
lret
lahf
mov
out
jp
inc
mov
or
dec
cmpsb
mov
adc
sub
test
jl
add
xor
lock
dec
mov
jp
rorl
mov
mov
sub
push
addr16
stc
cmpsb
sbb
fcomp
dec
inc
int
fisttpl
call
xor
iret
fistpl
insl
pop
lahf
cwtl
xlat
aam
cltd
jbe
xor
je
arpl
mov
imul
lods
push
xchg
rcrl
fldt
pop
cmpl
or
cmp
outsl
xchg
xor
mov
add
cmpsl
cmpsl
or
call
gs
es
addr16
paddsw
mov
pop
jmp
les
pop
out
lahf
sbb
dec
aaa
or
iret
test
dec
fcmovu
arpl
sbb
add
andb
into
xchg
add
call
inc
insl
add
inc
xchg
lods
enter
cmp
dec
stos
mov
lcall
and
stos
sbb
jl
xchg
jae
xchg
mov
cmc
call
jecxz
inc
stos
jns
shll
mov
daa
mov
pop
sti
sub
outsl
push
jle
mov
lret
rol
inc
stos
dec
imul
ds
fwait
xlat
mov
add
fwait
mov
in
sbb
push
cli
mov
test
xchg
lods
mov
ljmp
mov
inc
test
jp
add
pop
mov
xchg
ret
inc
out
jmp
lods
jmp
fwait
adc
jno
cmc
sti
sub
out
mov
rcrl
loope
imul
push
nop
lock
mov
jns
dec
cmpsb
add
or
mov
jle
jle
or
pop
cli
movsl
lods
lcall
lret
das
pop
push
or
leave
dec
sahf
mov
ds
add
test
xor
pop
std
push
fistps
push
jp
stos
push
and
enter
dec
jg
adc
call
xor
xchg
fistl
lock
push
push
stos
xchg
add
mov
push
mov
xchg
jg
mov
cltd
fists
loopne
int
data16
jmp
inc
lcall
out
and
adc
push
xlat
adc
mov
push
cmp
sbb
or
sub
std
push
lea
mov
addl
mov
jg
mov
ss
loopne
scas
movsl
hlt
push
pop
mov
pop
mov
sbb
push
add
scas
arpl
cld
rorl
test
xchg
insb
inc
lret
xor
sbb
ds
stos
dec
lock
icebp
repz
xchg
xor
pushf
mov
inc
repnz
stos
in
movsl
cmp
pop
push
outsl
mov
pop
test
push
push
mov
push
int3
outsl
mov
fidivl
and
mov
daa
iret
dec
xor
aas
mov
loope
jge
xcrypt-ctr
cmpsl
sbb
dec
scas
xor
sbb
fldl
inc
jg
dec
test
addb
inc
enter
rcrl
scas
aam
cmp
push
stos
es
gs
out
test
leave
aad
test
push
adc
sbb
xchg
xchg
mov
sar
popa
rcrb
mov
xchg
or
push
dec
xor
mov
sbb
mov
rcr
adc
dec
mov
mov
inc
cwtl
leave
pop
and
fwait
xchg
adc
jg
cmp
and
je
push
xchg
inc
mov
mov
and
mov
leave
inc
lcall
inc
xor
dec
fwait
inc
pop
jnp
jae
cmp
loop
subb
adc
xlat
lret
mov
mov
in
inc
lret
rcl
sbb
sbb
jae
in
ljmp
je
in
lcall
jge
xchg
dec
lods
cltd
test
stos
stc
jle
mov
test
xorl
jno
lea
mov
sbb
jmp
fisttpll
insb
cmp
roll
pop
pop
sbb
xor
jmp
push
xchg
in
shl
xchg
push
stos
mov
mov
or
addl
sub
push
loop
aam
hlt
pop
lret
cmp
fs
lcall
pop
pop
orl
das
xor
lds
mov
scas
cmc
inc
cmp
xchg
gs
or
mov
stos
daa
sbb
popf
add
cmp
into
add
enter
dec
es
mov
pop
push
cmp
fidivs
mov
xor
sbb
xor
test
mov
mov
cld
popa
mov
repnz
nop
or
jmp
adc
cmpsl
negl
xchg
sbb
cmp
jns
mov
ja
pop
adc
filds
idivb
adc
icebp
adcl
aam
adc
add
cli
fcoml
shlb
xchg
out
in
adc
ror
add
sub
ds
mul
imul
lea
push
mov
leave
sti
mov
xchg
ret
out
fists
and
inc
je
loopne
and
ficompl
add
aad
push
jmp
mov
int3
push
sub
jb
arpl
cwtl
mov
fnsave
sbb
sti
leave
lods
mov
cmp
mov
incl
mov
mov
mov
int
jnp
shll
testl
test
mov
xlat
add
inc
aam
aaa
mov
andl
out
mov
imul
sar
xchg
xor
arpl
mov
jl
inc
pop
sbb
jb
add
fcomps
inc
hlt
iret
inc
jno
pop
inc
mov
out
mov
mov
jmp
or
ret
cmp
cld
or
lahf
xchg
ja
inc
fistpl
nop
loopne
cmc
ds
stc
and
loopne
push
mov
rcr
pop
push
jae
mov
sahf
imul
rolb
movsb
into
dec
mov
sbb
inc
dec
in
aas
push
out
xor
aas
inc
nop
test
sub
inc
call
pop
cmpsb
es
pop
leavew
icebp
int
out
popf
pushf
jae
pop
mov
jp
or
xchg
mov
push
out
imul
out
push
xchg
pop
mov
pushf
arpl
xor
cmp
inc
outsl
incb
adc
cld
dec
es
call
out
fidivrl
sahf
rorl
mov
in
addr16
je
jp
and
inc
lds
ror
mov
sub
and
lods
std
jmp
and
mov
inc
sbb
push
inc
sub
addr16
and
mov
out
push
fsubs
sti
inc
xchg
and
sub
lds
sub
sbb
sbb
out
dec
inc
mov
sbb
lcall
sbb
xchg
pop
loope
xor
add
fcompl
xlat
js
int
sar
inc
add
mov
sarb
pop
mov
mov
xchg
pop
sbb
mov
sbb
add
jg
mov
stos
push
adc
mov
fisubs
das
sbb
sahf
jge
out
lea
fisttpll
ds
lahf
add
push
sub
frstor
add
adc
cmp
cmpsl
pop
lds
cmp
fstpl
in
imul
movsl
adc
notl
out
leave
fsubrl
stc
add
jnp
and
dec
sbbb
nop
adc
pushl
std
and
jb
int3
pop
mov
push
ror
pop
or
addb
mov
xchg
xchg
daa
or
loopne
aam
add
hlt
sub
inc
inc
hlt
popa
sbb
xchg
ss
fisubs
or
sahf
jl
jno
mov
imul
das
cmp
xchg
or
loop
cld
add
jnp
imul
shrb
adc
pop
insb
push
loopne
jle
cmp
mov
movsl
add
pushf
fwait
shl
lcall
pop
test
ljmp
cmp
int3
dec
enter
dec
and
mov
insb
jge
dec
fcompl
lret
mov
cmc
je
cmc
pop
lods
mov
add
pop
mov
pop
push
mov
inc
push
push
ja
adc
xor
mov
call
xchg
fdivs
or
inc
jns
aam
xor
in
call
xor
mov
cltd
out
push
push
xchg
in
sahf
push
mov
pop
xchg
mov
int3
mov
imul
mov
inc
inc
insl
xchg
sub
pop
or
js
xor
lea
fwait
mov
jmp
xchg
aaa
popa
in
add
scas
push
add
push
aad
repz
or
add
mov
push
push
fwait
jecxz
push
mov
add
leave
mov
pop
jo
test
adc
notb
mov
roll
cmc
cmp
fwait
sub
lcall
mov
insb
adcb
shlb
add
dec
rorl
sub
in
or
lahf
sti
add
cmp
adc
adc
mov
movsl
sbb
mov
cmp
jl
sbb
testl
sub
in
xor
mov
or
fsubs
mov
out
lea
sub
mov
aam
or
sahf
repz
je
sbb
pop
std
mov
ljmp
and
jb
xchg
jecxz
mulb
add
inc
loope
mov
and
dec
mov
test
pusha
push
ljmp
dec
inc
cmpsl
ret
xor
dec
xor
js
mov
and
sbb
imul
ljmp
or
fwait
pop
jmp
sbb
out
mov
enter
pop
dec
jns
push
push
in
rcll
push
and
aas
scas
gs
lods
jno
sarb
jns
adc
push
jo
shll
sub
pop
mov
sub
adc
lods
arpl
sbb
das
sahf
push
das
and
add
pop
mov
mov
jge
xchg
lcall
pop
cltd
push
push
in
sbb
lods
inc
jecxz
xor
mov
mov
cmc
and
orb
mov
mov
jns
dec
or
test
pushf
mov
jne
mov
icebp
imul
adc
arpl
mov
je
test
loopne
and
scas
xor
push
xchg
or
in
and
and
sbb
imul
or
lock
cmp
lret
mov
enter
fstpl
rcl
dec
scas
movsb
int3
xor
add
dec
sbb
push
cld
mov
sub
dec
test
daa
add
sub
aad
jae
pop
bound
jmp
adc
icebp
sbb
adc
xchg
dec
popfw
fisubrl
ljmp
aam
ds
cltd
jmp
inc
rorl
hlt
mov
inc
jno
lea
adc
aaa
push
pop
inc
dec
shrl
mov
imul
test
dec
push
adc
out
mov
pop
xor
fs
sbb
pop
movsb
adc
mov
add
mov
push
mov
push
stos
mov
outsl
cmp
adc
fs
sbb
mov
sti
int3
aad
lahf
xlat
je
or
mov
cmp
inc
sbb
xlat
inc
mov
outsb
inc
mov
push
mov
jb
test
ficoms
orl
scas
aam
mov
pop
sbbl
iret
jge
push
call
in
push
xchg
les
jo
mov
sub
sbb
rcll
jns
sub
sub
mov
jl
jbe
out
push
sbbb
pop
stc
jmp
xor
inc
sahf
cmp
arpl
cmp
rorl
outsb
sub
iret
scas
xchg
in
js
sbb
xchg
lea
loope
push
inc
daa
xor
outsb
push
xlat
xor
and
mov
decl
jmp
jno
push
aaa
jmp
and
add
fstpt
pop
into
mov
jg
ret
popf
xchg
aaa
iret
xchg
test
sbb
mov
popa
push
xor
jns
aad
loopne
and
jmp
sbb
dec
or
les
gs
dec
inc
out
jecxz
xchg
add
cmp
scas
xor
mov
inc
mov
cmp
cwtl
and
jge
neg
xlat
xor
call
sub
adc
cld
sbb
loop
adc
out
dec
mov
jo
xchg
into
fmuls
mov
into
xor
call
rclb
push
dec
sub
lret
scas
sti
std
mov
int3
std
rcll
enter
faddl
sbbb
mov
add
addr16
adc
dec
imul
aaa
inc
pop
mov
push
mov
push
or
dec
mov
popa
movsl
nop
loopne
iret
inc
aas
hlt
dec
xor
push
insl
fidivrs
mov
or
or
cwtl
lret
movsl
mov
mov
icebp
jecxz
and
mov
shlb
push
test
mov
or
nop
or
inc
or
mov
out
imul
test
inc
in
test
push
and
fldcw
test
sbb
aaa
outsl
mov
fwait
cld
mov
outsl
popa
mov
pop
mov
inc
cld
push
call
mov
subl
sub
or
inc
add
mov
in
out
xchg
rcrl
mov
fnstenv
fisubrs
or
test
push
xor
int
cmp
ja
adc
sbb
leave
sbb
cmp
popf
cli
cmpsl
push
add
int
push
leave
dec
or
out
cmpsl
xchg
test
xorb
push
adc
mov
xlat
xor
clc
cmc
outsl
push
cmp
add
popa
hlt
jmp
mov
loop
repnz
nop
or
xchg
push
ss
rclb
std
das
aam
test
in
xchg
lea
test
push
xchg
test
mov
push
mov
jmp
pop
call
dec
mov
sti
daa
push
lods
cmp
or
mov
adc
pop
xchg
mov
add
fsubr
les
and
ja
jbe
and
sub
adc
popf
fidivrl
mov
in
adc
into
jg
dec
out
dec
dec
mov
jl
fs
or
mov
neg
xchg
push
jmp
xlat
call
adc
pushf
outsb
insb
xor
inc
subb
sar
or
scas
out
dec
add
outsb
jp
test
arpl
and
fwait
and
inc
and
out
jg
push
pop
es
std
ja
sub
jne
movsl
scas
out
push
push
js
fsubs
xchg
xchg
iret
jno
cmp
outsb
dec
cmp
push
inc
loope
add
sbb
mov
xchg
mov
loopne
pop
or
outsb
test
mov
push
jns
cmpsb
xchg
push
add
in
xor
out
mov
jns
push
test
shl
mov
pop
idiv
sbb
xlat
std
adc
and
jmp
jmp
insb
incl
sbb
js
mov
dec
aad
add
and
mov
add
xor
mov
xchg
sub
into
daa
mov
xchg
cmp
jb
mov
sub
cwtl
mov
subb
adc
sbb
out
or
mov
pop
jno
and
add
jbe
sub
xchg
and
mov
mov
movl
les
pusha
dec
inc
enter
ss
inc
mov
and
cltd
jg
pop
lret
arpl
pop
or
jg
or
mov
lcall
loopne
push
dec
xchg
cwtl
data16
mov
negl
pop
fnsave
test
lds
jnp
push
cld
imul
adc
mov
cli
fwait
mov
sbbb
rol
lea
out
xchg
pushf
movsb
sbb
mov
outsb
xlat
mov
sbb
add
jecxz
test
sbb
and
jl
subb
mov
xchg
adc
add
fnstsw
adc
lds
dec
or
or
push
scas
jno
inc
lret
out
mov
pop
mov
gs
cmpsl
inc
add
dec
inc
notl
or
add
adc
test
sti
dec
and
addr16
jae
add
mov
inc
pop
jg
dec
mov
jmp
out
xor
arpl
mov
insb
fildll
adc
addr16
fwait
out
lds
test
xchg
pop
push
lret
mov
mov
mov
neg
cwtl
xor
xchg
iret
cld
aaa
inc
scas
push
xchg
and
push
out
shr
sub
lea
imul
pop
data16
sub
cmp
mov
repnz
nop
or
inc
rcrb
test
xchg
inc
xchg
mov
and
lock
xlat
sbb
ret
dec
and
cmpsl
fisttpl
jg
and
test
mov
into
push
push
sbb
icebp
sti
stos
rorl
lods
test
mov
loop
or
cmpsl
mov
fisttpl
incb
aad
out
sbb
add
dec
inc
icebp
adc
mov
sbbl
jno
dec
scas
mov
sbb
popf
hlt
dec
stc
jno
xchg
jns
sbb
mov
xchg
jmp
adc
jmp
mov
jle
out
stc
xchg
popa
xlat
pop
shll
add
aam
jae
xchg
dec
mov
fistpl
ja
xor
xor
inc
inc
or
mov
pop
out
lds
iret
jbe
cmp
push
lcall
movsb
or
ret
push
mov
fdivl
pop
insb
lock
adc
stc
rcl
shlb
inc
repnz
pop
jp
inc
cmp
mov
nop
orb
cmp
push
mov
ds
dec
sahf
push
in
out
sbb
jnp
xchg
xor
loopne
jecxz
mov
ss
loopne
push
and
scas
pop
and
sub
popa
inc
les
cli
dec
jb
jle
and
xchg
ljmp
mov
cwtl
jae
into
test
ret
inc
rcll
sbb
mov
andb
in
testb
mov
adc
lret
aad
shlb
repz
pop
ss
cmpsb
push
lods
mov
mov
sub
push
xor
xchg
mov
push
dec
xrelease
and
adcb
aaa
scas
in
into
xchg
stc
rorb
jle
mov
leave
push
xchg
pop
es
rol
add
addr16
aaa
mov
out
stos
je
movsb
ljmp
dec
adc
xor
push
pop
add
jo
push
and
orb
xchg
pop
mov
and
add
jecxz
xchg
scas
cli
test
xorl
inc
cmp
xor
and
sbb
repnz
fcomps
fisubs
xchg
add
inc
bound
pusha
or
cwtl
mov
dec
mov
cmp
insb
mov
jne,pt
scas
stos
and
pop
shl
push
test
xor
daa
push
jmp
mov
add
insl
aad
les
stos
add
mov
ret
push
adc
mov
or
leave
aad
daa
or
shlb
mov
mulb
test
imul
pushf
neg
cmpsb
mov
dec
cmpsl
or
push
jl
repz
add
push
pop
xchg
or
subl
cmpsl
jecxz
jns
and
pop
inc
jle
jb
pop
mov
push
push
or
pop
faddl
or
sub
pop
mov
call
xchg
int
sbb
mov
cmp
int3
testb
dec
mov
int3
adc
roll
inc
lret
xchg
imul
cmp
mov
out
orl
push
push
sub
lahf
in
push
test
ljmp
inc
ret
ret
sub
ret
movsb
lods
lret
pop
jo
pop
cmpsb
ret
ret
jp
mov
imul
pushf
xor
pop
sbbb
cmp
lcall
movsbl
push
sti
pop
inc
lahf
pop
push
jne
incb
out
dec
jnp
or
bound
pusha
clc
fiaddl
pop
mov
pop
mov
std
mov
push
pop
xchg
push
cmp
sub
and
stos
mov
mov
cmp
mov
dec
lods
std
mov
and
insb
mov
dec
ficoml
arpl
insb
std
lock
jmp
mov
fwait
push
xchg
je
pusha
movsb
pop
push
xor
aad
sub
mov
daa
or
push
aad
cmp
leave
loopne
aad
mov
add
mov
xor
push
ljmp
sbb
cmp
inc
in
sbb
mov
cmp
sub
sub
sbb
int
xchg
out
aaa
decb
jnp
dec
sarl
fidivs
mov
iret
mov
fcomp
mov
mov
lock
jo
movsb
lea
enter
push
jl
jnp
scas
mov
outsb
enter
mov
pop
xchg
arpl
rcl
mov
das
jnp
test
pusha
in
gs
fcomip
or
mov
outsb
mov
iret
and
cwtl
leave
int3
cli
je
adc
xor
in
fldcw
lods
scas
sti
lcall
jne
xchg
popa
divps
fwait
ljmp
mov
dec
adc
pusha
ljmp
pop
push
testb
pushf
or
stos
int3
mov
adc
sub
fndisi(8087
mov
xlat
mov
dec
gs
push
sbb
out
icebp
lds
fdivl
lock
lret
js
mov
and
dec
popa
bndldx
and
xchg
dec
nop
imul
sub
dec
cmp
stc
jp
pop
jo
pop
xchg
mov
jge
ds
mov
adc
push
push
in
jnp
inc
lcall
addr16
push
test
dec
fwait
cmp
dec
loope
xlat
push
mov
push
daa
inc
and
xor
inc
push
mov
sub
out
xlat
call
push
push
popa
rol
inc
jae
sub
jmp
and
xchg
or
ljmp
jecxz
mov
out
add
xchg
loopne
pop
cld
pop
add
out
cs
cmp
dec
push
cmp
sub
add
inc
pop
das
test
cmp
movsb
int
push
add
loop
ret
lahf
mov
pop
mov
mov
stos
int3
xor
jp
pop
sbb
stos
inc
je
pop
add
out
sahf
ja
fimuls
mov
insb
add
push
push
inc
add
clc
sub
add
outsb
jl
test
push
or
jno
push
mov
inc
push
mov
pop
cmovbe
aaa
imul
jbe
in
mov
fcomps
loope
lcall
or
sbbb
clc
test
xor
inc
pop
nop
jp
cmpsb
xor
out
xor
pop
mov
cwtl
jmp
cmpsb
fadds
cld
inc
or
sub
xchg
adc
lcall
dec
aad
nop
mov
lcall
les
gs
jnp
lock
lock
insb
push
cs
pop
sub
cmc
outsl
add
dec
xchg
inc
jbe
repz
sbb
out
mov
or
scas
aas
rolb
push
inc
sub
dec
mov
icebp
rclb
fs
lcall
mov
out
je
adc
iret
ffreep
mov
clc
jp
jecxz
jecxz
push
cmp
add
enter
jmp
inc
mov
imul
clc
push
jmp
mov
scas
inc
lds
movsl
inc
int3
cltd
and
adcb
xor
mov
jecxz
mov
shll
pop
mov
dec
pop
movsb
add
dec
popa
rclb
xchg
or
adc
out
js
xchg
lods
xor
mov
jns
cmp
jnp
inc
xor
cld
mov
xchg
imul
aam
loop
push
stc
pop
dec
dec
aas
adc
jae
jns
lcall
lea
pop
mov
cmp
xchg
xchg
pop
adc
xchg
test
push
pop
fwait
mov
nop
cmp
add
xor
adc
cmp
push
nop
and
add
add
dec
loopne
fisttpl
mov
add
push
lcall
stos
clc
jno
sti
les
cmc
sbbb
jge
pusha
sbb
sbb
out
push
dec
fidivl
adc
es
lret
leave
push
jmp
shlb
jne
and
pop
jnp
lock
pusha
daa
jge
xchg
inc
sub
push
pop
imul
push
in
add
sub
push
mov
addl
fdivrl
mov
push
notl
push
mov
mov
out
in
lret
add
fisubl
jg
and
jecxz
xchg
sahf
sti
or
mov
xchg
ds
bound
xor
out
pop
add
add
xchg
mov
xchg
and
hlt
sbb
imul
xchg
sub
cwtl
add
insl
sub
jecxz
mov
jl
adc
fcomps
jl
and
xchg
and
jnp
test
lods
add
mov
cs
call
nop
je,pt
lret
dec
sub
and
mov
in
sbb
xor
int3
clc
lret
int3
pop
cld
cmp
xor
call
int3
addr16
inc
arpl
xchg
insl
mov
jbe
pop
sbb
push
cmp
cs
stos
fwait
in
out
call
fmull
xor
jle
bound
in
inc
scas
xchg
mov
xor
mov
insb
shl
cmp
jns
jb
push
adc
sahf
lds
mov
jmp
cwtl
sbb
sub
pop
mov
cmpsb
xor
loop
jp
mov
jo
imul
into
or
out
dec
das
or
fucomip
out
inc
fcoms
imul
xchg
adc
pusha
inc
push
rorw
movsb
dec
dec
jo
mov
sub
xchg
xor
aaa
dec
dec
push
roll
test
mov
out
push
clc
pop
call
lods
int3
mov
push
aas
aam
mov
adc
fildll
idiv
dec
pop
lcall
stc
icebp
pop
push
push
std
xchg
adc
pop
xchg
sbb
mov
mov
or
push
push
xorl
pop
enter
sbb
das
xchg
lds
pop
mov
mov
add
inc
jmp
call
mov
fs
push
cmpsl
add
mov
cli
jle
dec
daa
pop
add
adc
bound
gs
mov
vpunpckhqdq
lahf
jmp
jbe
sub
repnz
xor
and
fisttps
lahf
mov
stos
cld
mov
pop
jp
or
sahf
ret
lock
test
jae
adc
not
jae
jmp
imul
out
and
cs
cmpsl
shrl
lock
sti
test
dec
sti
adcl
mov
fdiv
cld
adc
pop
insb
movsb
xchg
dec
mov
in
or
add
or
ss
mov
cmpsb
in
push
push
mov
lcall
movsb
ret
inc
xorl
or
cli
mov
addr16
ror
std
adc
cmc
pop
scas
addr16
subl
jge
sub
adc
pop
nop
jo
jb
sbb
imul
or
adc
bound
xchg
push
xchg
and
xchg
xchg
mov
sub
cmpsl
xchg
in
mov
out
inc
imul
dec
in
dec
in
xor
inc
pop
sbb
arpl
sbb
jl
pop
pusha
xchg
xchg
pop
cmp
shlb
lods
xlat
pop
xchg
push
or
jle
lds
sbb
repz
mov
popa
fistps
sub
out
lods
js
lods
inc
dec
cs
hlt
xchg
dec
push
push
js
push
pusha
imul
mov
mov
mov
cli
movsl
inc
dec
je
inc
xlat
lock
test
mov
cmp
int3
push
adc
ret
dec
inc
lea
movsb
add
cmp
jmp
inc
mov
scas
cmp
rcll
inc
lea
fldl
mov
jne
dec
xchg
sub
sbb
orb
mov
inc
cmp
pop
cmpsl
dec
out
mov
imulb
leave
mov
xor
xchg
shl
and
or
sub
add
ss
test
mov
and
mov
push
pop
dec
adc
mov
in
xor
adc
aas
add
sub
sbb
pop
jns
popa
mov
lds
xor
scas
pushf
sub
pop
add
std
jb
mov
aam
or
int
scas
lret
mov
nop
inc
mov
sub
jp
sarl
adc
jnp
adc
into
xor
jno
add
insl
inc
les
xor
lret
cltd
pushf
xlat
fiadds
addr16
pop
inc
rorb
cmp
fs
and
pop
add
loope
push
jns
ljmp
mov
gs
mov
in
mov
jle
mull
mov
fs
pop
pusha
loope
lds
insb
and
dec
dec
adc
lcall
stos
mov
out
jmp
insb
in
jae
cmpsb
out
jbe
inc
ljmp
cltd
popa
push
and
dec
pop
lds
add
sub
aaa
in
cwtl
and
pop
imul
stos
and
aad
mov
rorl
and
ret
adc
scas
push
mov
test
add
test
sbb
cmp
adc
adc
into
jp
xor
test
push
je
or
out
dec
pop
mov
aad
add
loope
sbb
mov
mov
adc
imul
push
aaa
out
mov
cmp
mov
leave
jns
leave
cltd
jle
mov
pop
mov
mov
xlat
xchg
loop
add
or
pop
pop
cmp
dec
push
lcall
in
cs
push
mov
scas
mov
clc
ds
sbb
shrb
data16
daa
and
jmp
inc
mov
int3
cmpsb
in
mov
stos
loope
push
aas
fadd
rolb
inc
inc
out
sahf
int
dec
fmull
int3
call
adc
loopne
cwtl
lret
xor
mov
sahf
dec
test
ja
jl
push
sbb
mov
or
ljmp
insl
jp
orl
xor
mov
add
jb
sub
ds
les
xchg
int
adc
push
sar
or
enter
jo
mov
adc
mov
xchg
xor
outsl
dec
pop
das
xchg
adc
insb
es
add
rcrb
or
push
and
mov
repnz
adc
mov
push
sbb
hlt
imul
mov
mov
aam
int3
je
sbb
dec
push
push
pop
mov
xor
xchg
xor
add
scas
cmp
bound
filds
push
imul
pop
mov
aam
int3
or
out
pusha
orl
xchg
fucomi
or
shrl
ja
push
insl
ds
xlat
lret
fildl
dec
movsl
and
leave
ljmp
stos
and
dec
jmp
fistpll
or
sub
into
push
cmpl
xchg
and
xor
adc
movsl
add
add
mov
call
int3
mov
xchg
inc
xchg
enter
shr
push
sub
into
mov
jb
popf
xorl
shrl
jl
aaa
cmp
xchg
xchg
out
loope
and
push
cmc
lock
dec
in
sub
inc
inc
mov
imulb
mov
cld
jo
stos
iret
fidivrs
or
cmp
in
pop
dec
out
dec
pushf
in
outsb
lcall
adc
sub
xchg
pop
dec
or
cmc
sahf
test
pop
fistl
adc
movsl
push
clc
mov
shr
je
std
shl
mov
sub
addr16
loop
mov
ret
shrb
cmovne
fsubl
push
cs
leave
jp
mov
pop
aaa
iret
xchg
mov
mov
inc
jl
cmp
ljmp
jle
mov
adc
dec
pop
push
jnp
mov
adc
xchg
icebp
xchg
adc
pop
push
cmp
shlb
xchg
out
dec
push
scas
cmpsl
or
std
dec
mov
push
pop
loopne
sbb
pop
xchg
repnz
loop
xchg
nop
repnz
lret
cli
push
lds
push
push
sbb
and
cmp
xchg
xchg
lahf
mov
cmpsb
out
mov
pop
lods
xchg
lahf
jbe
test
scas
in
and
rclb
xchg
sub
xchg
sub
xchg
xlat
addr16
xchg
or
jb
xchg
inc
xchg
sub
push
push
xchg
inc
cmp
cltd
or
sub
imul
rorb
nop
jns
arpl
in
and
sub
addb
fwait
lahf
adc
and
or
dec
gs
xor
pop
in
mov
jns
jne
mov
push
dec
lcall
dec
push
cmp
int3
mov
ret
push
cmp
test
aam
xchg
dec
lret
test
pop
ljmp
pop
cs
cs
fisubs
push
mov
scas
in
in
ficoms
pop
mov
add
jbe
fidivrs
mov
iret
sub
loope
popaw
and
dec
xor
sub
cli
ret
dec
push
scas
out
pop
or
mov
les
pushf
push
test
icebp
aam
sbb
imul
mov
in
les
stos
ja
cwtl
in
test
inc
dec
jle
fnsave
pop
mov
aad
movsb
push
scas
fldcw
fisttpll
xchg
sub
inc
cli
xchg
mov
adc
test
dec
push
xchg
mov
and
mov
inc
daa
sub
inc
sarb
inc
loope
out
mov
dec
pop
push
stos
pusha
pop
push
roll
push
jecxz
aas
aam
lods
in
mov
sbb
cltd
pop
cmp
ret
mov
js
jp
xchg
fidivrs
xchg
jnp
mov
and
dec
shlb
loopne
ljmp
loop
dec
sbb
call
push
bnd
les
push
nop
pop
jbe
inc
and
cmp
es
mov
add
jb
xor
aam
popa
lret
ficompl
outsl
sahf
std
fsub
shlb
rcrl
es
cmp
mov
xchg
mov
push
loopne
call
bound
clc
mov
les
enter
jno
add
cwtl
lods
lret
sbb
xchg
jo
cmpsl
pop
cmp
cmpsb
push
mov
fsts
pop
cli
fsubrp
sub
adc
repz
xlat
nop
shl
call
sarb
mov
ja,pt
mov
inc
cmpsl
mov
stc
fs
xor
xor
out
scas
or
ljmp
lods
xchg
lds
mov
push
jecxz
shrb
sub
pusha
scas
sub
leave
lahf
or
dec
pop
mov
dec
rorb
das
mov
jmp
jbe
sub
leave
ret
mov
lock
movsl
cmpsb
out
insb
inc
cmc
push
sub
xor
jg
dec
test
xchg
jb
and
enter
cwtl
inc
mov
pop
stos
push
push
add
shlb
cltd
mov
popf
dec
jmp
loope
and
sub
push
out
or
les
stc
cld
mov
lahf
sti
fwait
mov
inc
arpl
arpl
popf
push
fistpl
jae
jmp
pop
push
or
add
out
jge
pushf
sahf
push
mov
inc
stos
sbb
xchg
shll
push
movsb
mov
cmc
mov
or
push
mov
mov
test
or
push
sub
cwtl
sbb
sbb
iret
loope
rcrl
mov
jnp
sarl
aaa
mov
cmp
inc
rorb
enter
jmp
jle
loop
xchg
jne
mov
in
jb
and
test
ljmp
js
mov
inc
or
orl
fisttps
xchg
xchg
inc
cmovbe
jae
sub
sbb
jmp
sarb
xchg
mov
pushf
in
jl
add
pop
ljmp
xchg
out
shl
jmp
scas
das
xor
jl
popa
popf
lret
imul
repnz
xor
and
jo
inc
xchg
mov
adc
int3
fcmovnb
push
cmpb
mov
fmull
push
sub
lods
lret
ljmp
mov
cmp
add
xchg
cld
mov
movsb
mov
addb
setae
inc
lcall
loopne
xchg
popa
in
jmp
or
insb
in
fidivrs
imul
cmp
jl
add
arpl
and
jecxz
xchg
sbb
int
lcall
imul
mov
adc
inc
insb
dec
dec
scas
dec
outsb
dec
jnp
mov
xor
je
aad
sbb
pop
jb
insb
movsl
aaa
mov
jmp
das
pop
fwait
loopne
fdivs
iret
push
ffree
pusha
sub
jo
mov
lods
pop
nop
rolb
mov
lock
mov
clc
inc
lods
subl
sbb
dec
push
inc
xor
ss
sub
cmpsb
cmc
std
gs
lahf
lret
ret
adc
pop
jae
in
adc
push
push
dec
cmc
or
xchg
in
jbe
ss
out
fs
sbb
int3
xchg
cmp
into
repz
loope
sub
xchg
push
mov
xchg
mov
sub
out
sar
push
jle
dec
repnz
sbb
and
cmp
inc
jnp
loopne
xchg
adc
fwait
cmp
arpl
or
imul
and
adc
xor
xchg
das
jmp
mov
orb
scas
push
test
das
xor
in
mov
cmp
jbe
mov
fiadds
addl
leave
sub
or
cmp
add
lahf
repz
leave
inc
scas
mov
dec
insl
scas
mov
adc
mov
jle
and
fdiv
jl
dec
xlat
push
ljmp
inc
push
fwait
jne
or
lock
sub
int3
gs
pop
insb
decl
xlat
xchg
or
mov
fimuls
pop
sbb
pop
out
int3
lcall
and
or
inc
push
dec
call
adc
into
add
faddl
rcrl
sbb
sbb
mov
jg
mov
push
and
clc
dec
fsts
mov
loopne
lods
test
je
xor
mov
push
movsb
loope
pop
jae
dec
jae
ret
xchg
xlat
js
jmp
enter
inc
ds
cwtl
fbstp
add
pushf
ss
arpl
cmp
lods
adc
in
pop
aas
cmpsb
push
fwait
and
add
rcll
xor
and
add
cmpsl
add
xchg
xchg
pop
out
mov
lret
inc
add
lods
nop
out
sbb
add
xor
fiadds
mov
push
xor
pop
loop
jmp
xchg
mov
xor
xchg
iret
pop
jno
add
pop
inc
sbb
cmp
addr16
test
dec
sbb
fnstenv
aad
arpl
shlb
lock
fmuls
mov
or
fmuls
cmp
idivl
lods
int3
ss
mov
jae
lret
cli
sub
aam
jecxz
mov
dec
xchg
rcr
in
adc
scas
xor
adc
jne
push
call
cmp
pop
xchg
inc
mov
sub
ljmp
mov
jmp
sbb
xchg
xchg
dec
ret
mov
adc
mov
das
or
xchg
cltd
rcrl
mov
lds
cmp
inc
lods
mov
push
sub
dec
outsb
dec
fs
inc
sbb
jnp
dec
repnz
push
sahf
shll
pop
and
clc
vpsubsw
mov
outsl
xchg
cmp
adc
adc
js
and
addb
arpl
pop
mov
enter
pop
pop
call
jmp
mov
inc
jg
roll
sbb
sbb
inc
mov
imul
xor
cmpsb
je
fwait
push
push
sahf
rclb
ror
or
add
enter
ret
adc
xchg
sti
and
jg
lds
pop
lea
push
jne
clc
sub
movups
push
mov
adc
dec
out
pushf
jae
jb
jp
es
pop
cltd
cmp
push
testb
adc
xchg
mov
mov
jle
pop
cmp
out
jb
fcoml
xlat
xor
jnp
cld
pushf
lock
mov
or
test
addr16
jge
loopne
cmp
adc
dec
outsl
mov
fdivl
pop
jle
inc
cmp
mov
jecxz
scas
or
cwtl
test
xchg
rorb
lds
push
mov
cmc
pop
lock
fiadds
xchg
dec
divl
push
popa
out
scas
cmpsl
gs
or
jmp
hlt
jp
mov
sub
xchg
cli
scas
add
ret
cmpsl
lods
dec
jle
sahf
xchg
fld
fwait
cmp
mov
test
daa
cmp
push
test
sbb
mov
shrl
mov
stos
and
in
fisttpll
icebp
and
xchg
push
jo
dec
and
jmp
sub
sub
cmpl
fists
fmul
adc
xor
cmp
lret
aam
test
cld
add
and
out
cmpsl
mov
test
pop
or
xchg
xor
dec
movsl
leave
mov
mov
and
rclb
xchg
bound
xlat
sbb
repz
dec
dec
test
lret
bnd
jnp
das
sbb
or
mov
test
or
pop
jbe
dec
lods
cmp
xlat
jg
fstpt
test
mull
adc
mov
xlat
cli
mov
clc
lods
cwtl
mov
jb
out
mov
scas
cltd
jno
xchg
mov
xchg
shll
sbb
out
mov
stc
repnz
cwtl
push
into
push
sbb
push
dec
adc
pop
out
jne
and
sub
add
sti
and
mov
es
out
stc
insl
xor
out
mov
je
imul
sub
lcall
loop
push
mov
mov
out
sbb
mov
xchg
and
aad
out
or
mov
fsubs
arpl
mov
in
clc
mov
es
mov
pop
inc
inc
cmp
fyl2xp1
js
sub
movd
inc
cmpsl
rcr
sti
cmp
sbb
or
fmull
sahf
xor
jno
out
jle
aas
cmc
lcall
inc
imul
inc
loop
lock
jecxz
push
loopne
xor
dec
jae
cwtl
sbb
enter
cli
cmp
xor
dec
pop
cwtl
xchg
xchg
inc
xchg
fldl
cmp
fwait
imul
imulb
mov
loop
loope
sbb
xor
les
add
jecxz
mov
cmp
sbb
into
fisubl
cli
mov
cmp
jo
fs
jmp
pop
adc
adc
sbb
fbstp
js
jb
mov
mov
frstor
std
pushf
jae
push
mov
stc
jle
mov
inc
push
or
push
cs
ljmp
subl
into
mov
dec
repnz
jle
add
insb
xchg
or
fwait
imul
loopne
sar
std
adc
adc
fwait
dec
jne
push
aas
js
rclb
repz
test
mov
mov
dec
mov
pop
pop
in
cwtl
hlt
sbb
dec
out
call
aad
sub
arpl
shlb
insl
sbb
and
jmp
shlb
in
sahf
add
out
sti
or
sbb
and
push
jns
repnz
push
push
pop
add
dec
cmpsb
pop
mov
push
mov
push
adc
fwait
pop
subb
cmpsl
in
lret
pop
rcrb
mov
xchg
fisubrl
inc
out
sub
cmc
cmp
cmp
or
ret
out
test
jp
cmp
popa
add
xor
je
test
aas
xorl
push
ret
sbb
jbe
xchg
cmp
divl
xor
out
inc
add
aas
jle
movl
test
sub
jb
pop
and
cmovno
or
in
mov
dec
sarl
cwtl
adc
pop
pop
xchg
adcb
out
pop
mov
push
shr
jg
jp
fwait
lahf
test
mov
cmp
dec
add
lds
das
sahf
fdivl
movsb
pushf
mov
clc
movsl
aas
cli
and
in
push
cmp
xor
addb
xor
mov
pop
cld
rorb
in
mov
and
in
pop
test
in
cltd
imul
stos
les
lcall
add
cli
lock
mov
dec
xchg
rcrb
loop
adc
jle
cmpsb
mov
inc
stos
loope
pop
aad
sbb
adc
in
sbb
adc
stos
icebp
jnp
lods
fiaddl
pop
add
push
cs
cmpsb
cltd
push
mov
lret
stc
fs
fcomps
outsl
cmp
aas
jns
and
sete
mov
arpl
inc
xlat
aas
mov
cmp
call
mov
in
pop
xor
xchg
jo
inc
and
dec
cmp
pop
jg
adc
ja
xor
sub
cmpb
aad
inc
jbe
hlt
movsb
pop
pusha
mov
addb
add
loop
or
in
ja
mov
sahf
out
inc
dec
enter
or
push
adc
cmp
sub
ljmp
adc
xchg
jg
jl
sbb
aad
fwait
outsb
fistpl
aaa
pop
mov
pop
sti
data16
and
outsl
call
push
xchg
cmpsb
mov
fisttps
popa
cmp
or
hlt
daa
or
adc
or
mov
in
inc
add
push
cld
inc
lea
push
in
popa
int
enter
aam
mov
ret
lods
out
scas
ss
aad
xor
outsb
into
xchg
inc
adcb
cwtl
or
adc
dec
cmp
shll
scas
jle
mov
iret
ds
lods
test
lds
push
cwtl
loopne
add
dec
xor
sbbl
shlb
add
inc
cmpsb
cmc
jne
dec
push
mov
pop
loop
sub
cld
scas
std
out
lahf
clc
stos
into
inc
lds
scas
push
pop
push
pop
daa
sbb
mov
inc
pop
xchg
xor
test
fisttps
dec
jbe
sahf
fstpl
cwtl
jge
sub
or
in
add
fsts
mov
xchg
orl
cmpsl
adc
pop
cli
jo
mov
sbb
cmc
and
dec
push
xchg
dec
jns
outsb
inc
sbb
les
lods
repnz
scas
mov
fmul
js
aas
jle
mov
jmp
cmp
and
lock
ds
add
addl
out
lahf
jge
cld
ljmp
shrb
xchg
sbb
cwtl
dec
fadds
divb
push
jl
cmp
fmuls
test
jno
fwait
mov
mov
int3
push
jne
sbbl
xor
pusha
fldenv
pop
clc
aam
jae
movsl
pop
mov
mull
lcall
scas
out
xor
repz
test
lock
jno
stc
movsb
jnp
cmpb
inc
cmp
sbb
mov
cld
loopne
movsl
inc
mov
notl
xor
and
jecxz
mov
xlat
xor
inc
adc
fadds
or
adc
out
cli
ljmp
mov
enter
dec
outsl
outsb
outsl
xchg
dec
cmpb
dec
test
sub
mov
insb
dec
mov
and
dec
sbb
and
test
cmp
cmp
inc
mov
xor
sub
stos
add
cmc
sbb
iret
mov
arpl
nop
push
cmpb
imul
fcmovbe
shll
mov
stc
lock
fcmovnu
lret
testb
mov
std
loopne
lcall
adc
icebp
and
out
mov
out
jmp
add
popf
hlt
xor
xor
xchg
add
dec
sti
push
xchg
inc
jns
int
xor
pop
inc
in
mov
leave
or
outsb
dec
nop
lods
cmp
scas
lods
or
mov
sbb
mov
pop
mov
lea
cwtl
and
fidivrl
lock
shll
fdivr
lret
nop
stos
jno
or
dec
sahf
in
aaa
mov
jecxz
or
bswap
and
cwtl
repz
repz
xchg
add
shll
jae
jp
mov
sbbl
pop
out
mov
rcr
inc
jne
aaa
cmc
lds
loope
adcb
xor
aaa
xor
push
mov
insl
js
cwtl
lret
pop
cmpsb
adc
fsubs
mov
add
and
jl
lods
shll
std
jge
or
pusha
je
cs
cmp
mov
adc
out
push
adc
in
or
pop
jmp
add
mov
in
sbb
cltd
mov
clc
push
jecxz
lock
fistpl
nop
insl
add
repz
dec
adc
rol
pop
imul
rorl
push
nop
push
cmp
or
inc
adc
cld
out
clc
or
out
loopne
sahf
push
pop
cmpsl
fwait
adc
dec
push
cmp
adc
pop
enter
cltd
inc
and
cmp
sub
adcl
cli
cmp
xchg
in
test
rol
insl
cmp
mov
dec
jle
clc
jbe
in
jl
add
testl
in
jne
jns
sahf
jp
push
xor
sbb
add
out
dec
dec
pop
jno
lret
dec
cmc
rcr
shrl
jne
pop
push
ss
movl
pop
jmp
sbb
ret
mov
into
xor
mov
mov
sbb
dec
xor
xlat
stos
or
mov
pushf
daa
push
movsb
push
ds
divl
adc
xor
shlb
sahf
xor
sub
loopne
mov
lods
repnz
sub
sahf
nop
nop
fwait
sbb
shlb
pop
ja
mov
jmp
xor
push
fnstenv
add
out
arpl
sub
cmp
pop
xchg
inc
sbb
and
out
push
or
aaa
push
push
ja
push
out
jno
enter
or
jno
ljmp
cmp
sbb
inc
out
aam
or
mov
loopne
jecxz
or
xor
in
lds
cmpsl
adc
mov
cwtl
sti
push
lcall
lea
and
pop
mov
pop
xchg
fldcw
and
sbb
xor
int3
mov
rcr
adc
pop
aaa
mov
push
mov
arpl
daa
mov
mov
test
pop
cmc
dec
adc
leave
mov
rol
test
outsb
or
arpl
movsb
nop
fidivrl
shrw
into
movsb
jnp
and
dec
cmc
rolb
sbb
xchg
mov
aaa
shrb
push
mov
lods
mov
jno
test
xor
push
inc
clc
jmp
inc
ds
and
mov
je
in
mov
add
push
int
outsb
fnstcw
lret
or
pop
push
fwait
cltd
incl
push
outsl
cmp
rcrb
add
pop
lret
cmp
cli
pop
sbb
lock
leave
pop
aaa
outsb
jg
xchg
lahf
add
pop
test
xlat
sbb
movsl
sahf
jbe
sub
inc
repz
mov
scas
in
daa
mov
in
add
mov
sbb
adc
jg
roll
sahf
ss
ds
pushf
mov
xchg
ficompl
jle
ja
or
or
movsl
lcall
mov
inc
sbb
and
movsb
aad
xorl
ret
dec
mov
sbb
inc
or
std
jle
cmp
and
jl
jns
lds
fiadds
xor
sbb
pop
mov
outsl
rol
push
add
insl
popa
loope
std
sahf
sub
pop
push
das
out
xor
xor
sbb
js
jecxz
or
ret
arpl
jns
enter
test
push
pop
test
inc
mull
loope
adc
mulb
jg
les
xchg
add
mov
inc
add
push
stc
push
sahf
inc
and
dec
scas
push
adc
lcall
lds
sbb
daa
mov
and
push
push
int
or
subl
in
pop
pusha
push
jle
leave
mov
sbb
xchg
cmp
and
dec
arpl
cmp
shlb
loope
test
and
into
fstps
xor
sbb
mov
outsl
std
aam
sbb
cmp
xchg
or
pop
cmp
fmul
mov
or
ljmp
loope
loop
jns
shrb
in
movsb
dec
out
mov
inc
xchg
sub
ss
lcall
aas
xchg
jbe
lods
push
push
mov
xor
push
pop
scas
dec
insl
in
shrb
test
jbe
cmpsl
ljmp
pusha
mov
inc
mov
and
inc
repz
xor
sub
cmp
fsubl
dec
jnp
jge
push
cmpl
nop
jmp
xor
push
ret
sahf
adc
sbb
cld
push
pushf
xor
jnp
fstl
push
jecxz
mov
ljmp
aaa
push
stos
add
int3
popf
xchg
fsts
psubusb
lcall
add
int3
jmp
and
xchg
imul
pop
or
ljmp
insb
addl
adc
jmp
int
movsl
dec
dec
fnstsw
insl
mov
fimull
lret
push
cld
jno
cmp
mov
mov
jp
pop
mov
sub
hlt
cmp
mov
lock
mov
xchg
cmp
cmp
inc
enter
xor
test
jmp
cmp
mov
out
insl
in
sub
pop
inc
mov
and
mov
ja
ret
jae
xchg
xchg
call
addl
call
or
lds
jle
sub
mov
divl
adcl
pop
in
test
es
xor
pusha
xchg
mov
inc
cmp
dec
ret
xchg
xchg
sbb
fsubr
or
adc
cwtl
dec
movsb
mov
fs
in
sbb
je
out
adc
jl
mov
jns
lret
fs
mov
subl
or
ret
jae
mov
test
pop
daa
test
push
pop
xlat
mov
sbb
jg
test
and
js
or
out
add
sub
iret
jecxz
or
add
out
adc
ljmp
xchg
inc
loope
mov
imull
cmc
mov
lret
int3
sub
shll
xor
fwait
mov
mov
cmp
adc
popa
prefetch
mov
cmpsb
and
outsl
add
fmull
fucomp
shlb
mov
and
push
add
aam
mov
lret
sar
and
lret
test
jle
xor
pop
scas
jg
xchg
adc
out
out
sub
adc
dec
stc
and
sub
stos
jmp
sub
sarb
loop
popa
inc
mov
pop
jae
icebp
popa
mov
outsl
pop
sbb
insl
cmp
leave
mov
jmp
sbb
pop
hlt
popf
cmp
clc
jmp
pop
xchg
pop
adc
sbb
or
pushw
and
inc
or
repnz
repnz
add
mov
test
sbb
cld
dec
mov
ret
mov
cmp
ret
shll
push
inc
inc
add
out
jb
jle
jp
outsb
cld
xor
int
sbb
jmp
or
mov
pushf
repz
mov
out
push
adc
cmp
stc
mov
jb
adc
mov
mov
mov
and
lret
fimull
sarb
push
and
insl
outsb
mov
mov
cmpsl
out
mov
imul
imul
data16
push
add
xor
in
dec
in
fildl
xchg
jl
and
xchg
sbb
repnz
adc
nop
adc
popa
fimuls
adc
out
fisubl
int
inc
bound
or
dec
sahf
stos
cs
in
cmp
mov
stos
int3
fs
inc
xchg
push
aam
ret
xor
dec
call
in
cli
fisttps
leave
repnz
adcl
push
mov
pop
mov
sahf
xlat
push
and
xchg
mov
daa
mov
cmc
sbb
cld
adc
out
fiadds
dec
test
inc
sbb
jb
insb
in
test
xchg
jge
cwtl
arpl
outsl
loop
das
outsb
pushf
or
ds
push
cmp
jle
xor
and
es
pop
push
test
pop
mov
loopne
add
cld
mov
lret
and
movsl
enter
movsl
push
sti
lods
cs
hlt
stos
xor
dec
jb
icebp
jmp
sub
sbb
sti
les
xchg
add
jecxz
mov
sub
jo
jae
adc
pop
int3
dec
ret
sahf
mov
jg
add
dec
add
lods
ljmp
sub
divb
iret
adc
xchg
jb
aaa
aad
dec
cmp
in
pop
mov
bound
and
xor
push
rcrl
pop
leave
sub
subb
adc
dec
xchg
adc
and
popa
insl
cltd
fwait
out
ljmp
ljmp
ja
xor
std
outsb
std
and
out
sarl
xchg
fstpt
fs
call
out
pop
repnz
xchg
jae
xor
fsubr
mov
jmp
inc
iret
into
mov
call
sbb
and
clc
pop
rorb
into
shrl
test
ja
js
divl
mov
ja
dec
iret
xor
mov
adc
sub
pushf
lock
add
mov
or
cmp
idivb
inc
xor
adcb
xchg
repz
pop
adc
pop
jg
cmpsb
bound
test
dec
cmp
jle
xchg
subb
or
pop
movsb
cmpsb
jle
cmpsb
jl
iret
jo
push
iret
cmp
mov
cli
sbb
dec
lods
push
mov
pop
lret
icebp
out
jge
cltd
clc
fnstcw
xor
pop
fsubrl
mov
mov
in
lock
ds
adc
or
shrb
jmp
into
xchg
mov
xchg
pop
jmp
dec
aaa
mov
sbbb
sub
mov
out
jns
push
enter
jo
arpl
jle
dec
addr16
dec
imul
dec
gs
lock
hlt
nop
push
add
sbb
aaa
push
mov
lret
mov
inc
xor
test
dec
lea
rcrl
insl
pop
push
insb
sub
adc
inc
cmpsb
xchg
jge
cmp
ljmp
dec
push
adc
arpl
inc
das
adc
mov
repnz
pushf
add
daa
jbe
sub
lahf
shlb
rcrb
cli
push
neg
cltd
int
push
les
pop
lret
mov
rclb
pop
outsl
repnz
mov
pop
xor
mov
xchg
mov
icebp
xor
jb
pop
mov
cmp
cwtl
icebp
and
pop
pop
enter
stos
pop
pop
ljmp
push
loop
das
dec
push
pop
xor
add
lock
mov
dec
inc
jb
fildl
dec
inc
in
mov
sub
jg
femms
cmp
repz
inc
sar
ja
add
fmull
xchg
add
ffreep
cmp
xor
dec
femms
mov
fmull
or
in
mov
fildll
inc
mull
shr
or
enter
mov
lret
mov
pop
scas
stc
pop
jge
imulb
lds
mov
inc
mov
mov
enter
pop
xor
in
fstpt
orl
sti
cmp
sub
insb
jbe
test
push
push
enter
cmpsb
mov
les
and
add
add
fscale
xchg
fs
adc
or
in
add
not
push
mov
jae
jecxz
subb
sbb
push
cmc
outsl
fs
fxch
sbb
add
lret
xchg
scas
mov
sbb
cmp
push
data16
xchg
dec
stos
cld
push
mov
int
mov
lret
movsb
xchg
and
dec
mov
push
arpl
pusha
lock
mov
adc
cmp
dec
pop
pop
in
in
adc
ss
mov
int
cld
jmp
sbb
xchg
sti
mov
mov
stos
dec
pop
dec
mov
dec
incl
lcall
cmp
mov
mov
cmpsl
adc
stos
mov
mov
push
push
repnz
mov
add
push
sbb
arpl
les
push
inc
jno
in
pop
into
adc
cmpl
loop
pmaddwd
mov
xchg
mov
out
xchg
roll
mov
or
cli
aad
insb
adc
les
test
push
sbb
aaa
sbb
mov
mov
cmp
mov
mov
ret
mov
lret
cmp
and
xor
outsb
push
adc
stos
inc
in
cltd
lock
pop
pop
or
lods
mov
dec
jb
xor
pushf
mov
iret
add
mov
add
inc
out
mov
inc
insl
lahf
adc
push
jecxz
add
jecxz
inc
mov
mul
mov
cwtl
fcoms
incl
dec
pop
es
jmp
xchg
xor
mov
mov
jns
cltd
mov
sbbb
xchg
cmp
mov
aas
cmp
ja
cmpsl
cmp
mov
repnz
add
and
sub
xor
jmp
out
adc
aaa
adc
sbb
pop
mov
stos
ds
cli
add
adc
xchg
mov
cld
pop
or
das
mov
sbb
into
imul
stos
inc
stc
jb
lcall
out
xchg
inc
loope
pop
cltd
sub
gs
pop
jo
cmp
ss
xchg
lcall
fcoms
sbbb
adc
out
in
pop
lods
sbb
push
mov
cmp
insb
pop
movsl
shlb
xor
jecxz
je
sbb
push
cs
ljmp
xor
mov
sub
iret
outsl
adc
and
sbb
add
mov
mov
call
xchg
xchg
mov
bound
mov
add
push
cmp
fsubr
lods
or
cmp
jge
lods
out
jmp
sahf
mov
gs
stos
fiaddl
cmc
ret
xlat
sub
icebp
push
dec
das
pop
ss
hlt
imul
xchg
dec
rclb
mov
dec
rcr
repnz
into
inc
pushl
jge
negb
out
out
pop
or
add
dec
ret
xlat
mov
aaa
rclb
sub
dec
stos
les
pop
out
insb
scas
and
insl
sbb
scas
sub
ret
stos
filds
ja
mov
pop
idiv
cmp
mov
mov
rcl
insl
xchg
sbb
ret
cmc
or
push
pop
jbe
fisubrs
scas
mov
push
cmc
out
xchg
xchg
mov
aad
test
test
push
iret
mov
arpl
or
sub
insb
push
add
xchg
rcrl
loop
int
add
fdivrs
xchg
scas
insb
jmp
test
mov
lock
loop
lret
push
sbb
xor
daa
pop
out
test
cmp
clc
inc
lea
arpl
cmpsb
or
scas
mov
dec
and
fnstenv
fs
push
pop
lret
flds
cli
sub
or
fidivrs
add
mov
mov
jnp
xchg
or
int
cmp
mov
mov
inc
lret
jne
lahf
pop
pop
movsb
and
mov
cs
fists
cmpsl
inc
sbb
sbb
stos
repnz
outsb
jmp
std
mov
stos
ret
lahf
das
test
ja
inc
rcr
cli
lea
das
cmp
sub
lret
xor
rol
sbb
adc
xchg
xchg
jbe
hlt
sub
adc
adc
xor
stc
and
xor
test
lods
inc
xchg
or
xchg
pop
cmp
jno
lcall
xlat
push
and
in
bound
sbb
sbb
or
pop
cmp
dec
inc
jmp
int
jmp
insb
les
lahf
add
ja
mov
out
sub
insl
mov
fdivl
sub
or
inc
push
mov
pop
inc
or
or
outsb
mov
inc
aas
add
and
cmp
outsl
mov
sbb
arpl
cmp
repz
add
jecxz
movntq
out
xchg
mov
aam
inc
pop
jg
dec
push
fwait
dec
sub
ret
cs
stos
negl
pop
enter
cmpsl
jecxz
hlt
jmp
fsubl
rolb
aas
mov
mov
icebp
dec
not
xchg
jge
push
fadd
clc
aas
and
inc
jge
adc
es
add
jno
clc
es
dec
fwait
aas
popa
cmp
push
in
cmp
inc
aam
sbb
clc
pusha
leave
mov
dec
insl
sbb
sub
mov
jnp
sbb
lahf
fsubrs
push
rorb
pusha
lret
cmp
in
std
ficoml
mov
in
arpl
mov
ret
inc
insb
loope
mov
vphadddq
movsb
mov
xor
pop
pop
add
test
out
push
mov
xor
jae
mov
stc
das
push
sti
imul
mov
jno
enter
int
mov
cmp
jbe
mov
in
mov
xlat
jnp
dec
cmp
and
mov
xchg
aam
fiadds
pop
push
pop
mov
push
or
mov
sbb
iret
xchg
in
add
mov
xchg
mov
jno
mov
aam
daa
cmp
jle
mov
in
sub
push
test
push
push
lret
shrb
mov
aam
and
nop
mov
sbb
pop
jmp
xor
cmp
xchg
nop
cmp
pop
ds
dec
lods
jp
xchg
fimuls
dec
push
bound
pushf
add
lock
or
pop
mov
pop
add
mov
pop
arpl
test
sub
insl
iret
and
vmwrite
repz
sahf
loope
fdivl
mov
inc
add
or
inc
fsts
test
imul
sahf
xor
sub
cli
xlat
mov
add
mul
sbb
scas
fsubrs
mov
paddusw
xchg
sub
sti
inc
mov
orl
dec
enter
outsb
dec
sbb
sarb
clc
push
lcall
add
push
loopne
xchg
pop
stos
shrb
lret
sub
adc
jmp
jbe
or
jnp
xor
data16
les
cld
les
mov
cmp
shrl
cwtl
enter
xor
int
dec
adc
rclb
pandn
or
jl
out
push
push
or
hlt
fdivrs
push
mov
arpl
es
test
jno
inc
mov
push
mov
fcoms
adc
jb
inc
in
mov
pop
mov
dec
nop
jmp
and
jg
and
pop
lds
outsb
xor
xor
hlt
push
lret
jae
cmpsb
add
xchg
aas
xorb
stos
push
jg
cs
pop
inc
inc
sub
mov
jl
pop
xor
mov
jns
mov
insl
pop
aaa
pop
loope
xlat
mov
fdivl
sub
and
pop
xor
adc
jl
shr
out
xor
ds
xchg
sbb
scas
xchg
jbe
aad
loopne
mov
xchg
sarb
pop
ret
shlb
inc
jmp
mov
rclb
xchg
xor
subl
and
jno
jg
mov
dec
cmp
out
into
out
or
or
or
or
mov
pop
cmp
dec
xor
aas
sub
scas
jmp
into
inc
enter
outsb
sbb
sbb
ds
and
xchg
mov
clc
jnp
enter
das
xor
sahf
outsl
ja
sub
fndisi(8087
mov
js
aam
clc
add
push
fildl
adc
sub
cmp
xor
fidivl
cmc
inc
dec
notl
cltd
mov
jnp
icebp
sbb
inc
lcall
movsb
and
into
push
outsb
and
fwait
xchg
shr
loop
dec
cld
xor
inc
adc
lcall
pop
ljmp
mov
sub
xchg
jae
lcall
cltd
cmp
cmp
inc
cmp
in
lcall
jnp
adc
std
icebp
cs
int
stc
mov
ja
push
mov
xchg
mov
xchg
ja
xchg
or
fsubl
xchg
inc
loope
or
pop
dec
subb
out
rcr
and
ret
sbb
daa
and
ja
mov
push
add
inc
pop
mov
cli
mov
in
add
add
mov
sti
dec
movsb
hlt
xor
dec
dec
or
dec
into
mov
arpl
jg
add
in
lret
mov
pushf
sub
push
mov
adc
mov
inc
inc
inc
xchg
mov
insb
mov
xchg
cs
int
hlt
repz
xor
cmpsl
ss
mov
sub
jge
push
addr16
pop
lahf
test
or
xlat
mov
into
xor
sub
arpl
ret
lods
add
sbb
xor
ds
jge
in
adcl
leave
inc
movaps
lret
cmp
xchg
dec
stc
ds
call
cmp
dec
push
jne
out
lea
pop
jb
sahf
sbb
loop
fdivr
loopne
out
xor
mov
iret
test
cmp
ret
fstl
inc
shl
mov
je
out
adc
fstpl
not
fistpll
ret
lcall
pusha
fwait
inc
mov
popf
pop
and
popf
dec
mov
imul
in
or
aad
int
mov
stos
iret
pop
test
cwtl
pop
rcrb
popf
repnz
faddp
orl
mov
mov
cmpsb
popf
call
icebp
lret
loope
std
mov
pushf
mov
jbe
into
js
sti
mov
movsl
cld
insb
jbe
mov
jns
fnstcw
in
test
scas
fwait
mov
mov
stos
dec
ror
fidivrs
test
call
icebp
adc
repz
pusha
or
test
out
stos
sbb
xchg
dec
repnz
mov
cmp
xorl
or
jmp
lcall
inc
jne
iret
popa
lcall
xor
mov
lods
push
and
loop
aaa
jp
nop
pop
jl
imul
sbb
insb
push
mov
sbb
xor
xlat
ds
xchg
dec
push
cwtl
popa
push
push
sub
mov
cmp
push
sub
jp
jl
mov
jne
cld
add
out
pop
mov
dec
cltd
adc
stc
jecxz
movsb
pop
xlat
cwtl
cmp
adc
lahf
jl
jae
int
push
leave
in
push
mov
das
sbb
ss
dec
ss
sub
repz
popa
inc
and
xchg
add
stos
scas
adc
inc
and
jns
sbb
jnp
add
cmp
push
out
adc
repz
jg
xchg
mov
pop
mov
mov
add
arpl
adc
fildll
lds
mov
fildll
loopne
dec
mov
jg
jns
xlat
push
xchg
mov
mov
jno
adc
xchg
pop
je
jecxz
out
insb
test
xlat
loopne
xor
bound
mov
xchg
xor
xchg
pushf
stc
or
sbb
push
mov
iret
dec
mov
ret
sahf
ret
gs
stos
insl
jo
adc
adc
stos
insl
not
inc
in
sbb
sub
xchg
xor
adc
imul
jg
mov
lret
scas
ffreep
int
imul
pop
cmp
cli
rclb
jbe
inc
shr
lods
rolb
adc
imul
sahf
pop
xor
inc
cmp
inc
cmpsb
jnp
clc
jmp
fsubrs
andl
pop
aam
loope
push
into
and
aas
fildll
mov
mov
jg
cld
or
add
mov
cmpsl
jg
es
xchg
jmp
dec
out
sarl
cmp
mov
stos
pcmpeqb
jmp
inc
mov
int
jge
iret
push
int3
adc
ficoml
stc
ds
push
cmp
std
push
in
mov
pop
sub
scas
leave
arpl
cmpsb
sub
stos
out
stos
inc
or
int
push
leave
les
insl
inc
jnp
aad
add
push
insb
push
sbb
fwait
call
adc
sub
sbb
sub
repz
je
add
add
test
xchg
add
adc
xchg
jno
call
pop
and
mov
fdivrp
lods
repz
sub
lds
add
aad
mov
or
scas
adc
daa
sbb
movsb
cmc
jb
aad
inc
sbb
jmp
lods
jbe
jmp
rorl
mov
mov
pop
lea
inc
test
xchg
jmp
enter
fstpl
in
les
mov
xor
dec
cli
add
jmp
mov
iret
lds
mov
push
jmp
mov
imul
cmp
test
cwtl
sbb
dec
push
adc
dec
popf
adc
rcl
shlb
into
fwait
stos
xlat
cwtl
pop
stos
xchg
or
test
xchg
fiadds
pop
in
outsb
jp
mov
xlat
sub
loope
cmp
test
int
or
stos
xor
mov
call
dec
stc
std
xrelease
ret
mov
fwait
push
sbb
lahf
ljmp
lds
mov
ss
orb
aas
xor
outsl
insl
imul
and
fwait
jno
and
fsubs
xlat
xor
pop
addr16
out
out
push
and
pushf
sub
push
gs
imul
adc
push
push
ja
sbb
dec
leave
insl
push
dec
subb
push
mov
add
xor
or
mov
mov
mov
and
xchg
xchg
mov
sbb
lret
shll
out
out
sub
mov
fbld
cmp
sbb
mov
js
fldenv
fldenv
or
and
and
pop
cmp
mov
and
lods
xchg
test
lods
jbe
xchg
jecxz
pop
dec
out
pop
in
sub
cmc
xchg
jp
out
mov
mov
scas
mov
mov
ja
loope
or
mov
xorl
jne
cs
loop
or
inc
mov
xchg
pushf
xchg
popa
jecxz
fs
adc
fs
dec
push
enter
add
mov
push
mov
shrl
scas
lahf
adc
sub
hlt
mov
adc
xchg
imul
divl
sbb
sub
add
push
mov
out
sbb
rcl
clc
mov
push
xchg
jg
inc
pushf
popf
sbb
ja
movb
iret
add
xchg
stc
mov
inc
adc
jne
pop
adc
repz
fdivrs
jge
fdivl
int
cmp
fistl
inc
xchg
fimull
cld
jg
sbb
adc
movb
pop
vpinsrw
outsb
lret
mov
pop
int3
sub
jns
sub
rolb
push
fmull
lock
push
sub
into
int
xchg
pop
cmpsl
int
jne
ds
inc
ljmp
rolb
std
inc
adc
inc
addr16
or
or
mov
mov
imul
fwait
imul
xor
lret
jnp
insb
sbb
daa
in
mov
cmp
sti
xor
jae
dec
cmp
cmp
push
aad
and
jp
cmp
daa
fldl
sbb
testl
dec
dec
test
sbb
pop
push
imull
rcrl
inc
mov
loope
fdivrs
mov
lds
pop
pusha
inc
cmp
xor
popa
lret
push
mov
aad
mov
mov
adcb
fcoml
push
hlt
icebp
scas
adc
dec
cmp
mov
out
stos
jmp
jg
mov
and
clc
fsubrl
push
sbb
out
and
inc
add
sahf
push
mov
and
push
sbb
xor
add
sub
int
call
xchg
inc
inc
sbb
xchg
dec
cmp
ret
push
test
push
xchg
and
mov
scas
cs
popf
scas
jmp
cmp
cmpsl
scas
inc
pop
ljmp
ret
dec
pop
scas
jmp
aad
pop
xchg
addr16
xchg
std
cltd
mov
jle
gs
cli
decb
and
jne
insl
cmpsb
inc
fpatan
enter
pop
and
mov
jb
or
sub
das
and
xor
xchg
sub
adc
jge
add
dec
adc
aam
repz
and
ror
loope
jb
fcoml
test
sub
inc
orl
pop
push
sti
mov
stos
in
mov
inc
or
jmp
adc
fcoms
dec
adc
aaa
addr16
cltd
mov
dec
inc
jno
fwait
dec
sbb
testb
push
mov
sbb
xlat
jg
lods
pop
outsb
addr16
inc
mov
ds
jo
sbb
and
iret
sub
idivl
bound
mov
or
pop
iret
sub
imul
xor
and
outsb
orl
adc
out
loop
int
fnstcw
inc
xchg
pop
sbb
dec
add
jbe
lods
cmp
mov
aaa
cmpsl
mov
push
push
sbb
adc
mov
mov
dec
xor
fidivs
dec
mov
int
lcall
mov
es
fstl
pop
jmp
mov
mov
inc
fstpt
fsubrl
idivl
adc
dec
aas
fisttpll
dec
in
in
inc
jae
push
jb
dec
loope
rcrl
xor
jg
movsl
fsubrs
ret
inc
cmc
cmc
dec
xchg
das
mov
adc
fcomps
insb
jbe
fldenv
or
stc
xor
push
imul
add
jno
fdivs
out
pop
scas
insl
jge
cmpsb
mov
jns
add
test
add
sub
jecxz
cmp
xor
scas
mov
jp
popa
pushl
sub
xchg
jecxz
sahf
mov
aam
jge
dec
mov
ss
xor
mov
imul
sarb
lods
sub
addb
jmp
pusha
sahf
xchg
aaa
mov
ret
mov
nop
ljmp
mov
inc
mov
xor
dec
push
pop
push
sbb
fbstp
inc
mov
adc
fmulp
sbb
xor
sbb
mov
pop
pushf
aad
es
lds
adc
shlb
test
gs
mov
mov
mov
ret
mov
pop
imul
cmpxchg
imul
sub
js
push
bound
sar
loopne
mov
imul
fidivrl
mov
mov
adc
popa
cmp
fstpt
rolb
lahf
cmpl
add
imul
jns
lcall
mov
mov
cmp
inc
mov
out
sahf
lds
xor
or
loope
xor
mov
test
aaa
subb
repnz
mov
jbe
or
or
dec
loop
mov
jb
outsl
lahf
jg
loopne
sarl
sub
sbb
inc
or
sub
cld
pusha
loop
xlat
sub
mov
or
es
lcall
repnz
adc
pusha
pop
mov
stos
mov
xchg
mov
into
mov
cmpsl
testl
lret
mov
pop
push
and
jne
int3
mov
pop
mov
mov
cmc
int
inc
and
mov
or
cwtl
sub
xchg
xchg
cmpl
js
aas
pusha
mov
movzbl
push
push
call
call
loop
and
dec
clc
pusha
jg
shll
stc
xor
in
shl
add
jbe
sahf
lcall
add
and
ja
loopne
sub
push
addr16
inc
adc
lds
dec
add
sbb
xchg
jnp
testb
lds
cmpsb
dec
sbb
sub
addl
pop
stc
xor
xor
mov
pop
nop
popa
sbbb
push
in
adc
add
rcr
leave
pop
mov
jne
outsl
dec
fcoml
mov
jle
adc
sub
sbb
sahf
cmpsb
fbld
mov
inc
sbbb
mov
stc
mov
mov
cmp
fwait
ds
or
adc
xchg
popf
add
mov
add
push
or
adc
adc
loop
mov
punpckldq
xchg
fildll
dec
imul
das
and
cmp
xor
or
pop
xchg
lds
sbb
add
cmp
mov
sti
test
js
repnz
cmp
jecxz
sbb
sbb
icebp
inc
fnsave
push
pop
xor
adc
cmp
mov
jno
out
jne
mov
jecxz
loopne
test
and
incl
adc
stos
lods
mov
mov
movb
or
mov
xorl
sti
jae
repnz
outsb
add
mov
dec
cltd
inc
outsl
pushf
insb
cmp
lcall
xchg
sti
outsl
outsl
push
rolb
cmp
push
pop
jg
lock
cmp
adc
hlt
mov
scas
pop
cmp
pop
mov
insb
loope
sti
mov
into
adc
jle
jge
icebp
popf
mov
push
ret
push
xor
mov
test
adc
mov
fcoml
outsb
jb
loope
jg
mov
incb
test
lods
dec
stos
mov
xor
push
mov
cmpsl
xor
xor
stos
sbb
cmp
bound
addb
jno
jp
sub
push
jne
pop
dec
cmp
adc
adc
adc
pop
cmp
movsb
mov
xor
rorl
insl
or
pop
ss
repz
in
xor
sbb
push
mov
sarl
aas
addr16
cs
imul
xlat
jmp
inc
scas
imul
push
lcall
cmp
jge
scas
xor
push
mov
push
sbb
pop
shrb
jns
test
mov
test
push
les
cld
adc
rcrl
hlt
addb
push
ret
fcoml
icebp
sub
mov
ret
lods
mov
mov
jne
insb
sub
iret
into
lahf
repz
das
jmp
mov
push
push
nop
xor
repz
adc
fldt
mov
sbb
add
popf
sbb
jecxz
or
push
mov
shr
sbb
or
ret
pop
pop
out
jo
jge
pop
sub
jp
lret
xor
out
pushf
sbb
arpl
pop
ss
mov
jge
push
inc
and
lret
repnz
ret
sbb
adc
fsubl
paddw
mov
xchg
jecxz
sti
test
and
fldl
sbbl
jl
mov
pushf
xchg
mov
sbb
test
lods
adc
lcall
mov
xchg
xor
jmp
and
lret
fcomip
xchg
int3
imul
xchg
inc
leave
enter
lea
xchg
gs
push
cmpsl
les
hlt
adc
jecxz
mov
scas
mov
sahf
push
es
jae
and
jge
cmp
mov
cmp
and
mov
mov
sub
xchg
les
xchg
stos
jo
mov
es
jae
mov
in
and
xorb
jae,pt
inc
imul
mov
jbe
xchg
or
jl
sbb
pop
push
sahf
mov
xchg
sub
mov
ret
mov
ret
jg
jns
movsl
xor
je
imul
jge
mov
cmp
and
roll
pop
movsb
pop
mov
jae
adcl
das
xor
aaa
mov
push
dec
pop
lock
or
lcall
iret
enter
xchg
scas
je
pop
sbb
lds
aas
aam
in
mov
loop
ljmp
mov
jnp
data16
xchg
cmc
mov
mov
lret
xor
xor
fwait
add
mov
popf
pop
enter
mov
cltd
push
gs
aad
stos
and
out
pop
and
push
repnz
in
mov
xor
mov
xchg
rol
xor
out
imul
insb
out
aas
mov
cmp
into
cmp
aam
leave
out
loopne
mov
rcrl
adc
mov
clc
mov
ja
lea
lcall
inc
clc
sub
push
test
mov
subl
ret
xchg
add
xchg
mov
rclb
mov
push
ds
fcmovnbe
add
or
imul
lock
out
sbbb
xchg
push
lods
ss
inc
jns
jne
rorl
cmp
xor
mov
or
mov
xchg
sbb
int3
adc
stos
sahf
hlt
out
cmp
sbb
aas
xchg
add
xchg
fsubr
ret
xchg
fwait
mov
scas
mov
pusha
dec
sub
cltd
cli
call
adcl
pop
push
imul
lahf
jae
into
xor
and
pop
pop
xchg
cwtl
mov
stos
adc
cmpsl
data16
or
cmpsb
jle
mov
mov
bound
stos
jg
in
push
sub
popf
js
in
sub
stos
popf
and
mov
in
clc
hlt
shl
push
or
push
lods
inc
out
adc
cmpsl
mov
fcoms
fld1
sub
clc
inc
test
xchg
mov
cmpl
negl
adc
and
adcl
jle
dec
inc
int3
imul
addr16
push
cmp
into
xor
cmp
cld
fcomp
pop
mov
add
or
mov
nop
sbb
in
nop
lock
mov
sbb
aam
push
testb
dec
xor
inc
mov
push
inc
dec
xchg
cmp
dec
adc
adc
fiaddl
nop
clc
int
loope
rclb
mov
nop
out
hlt
mov
int3
add
rcr
push
out
in
dec
fsubrp
push
lods
arpl
lds
je
ss
int
xchg
cmp
call
ljmp
or
ret
divb
xchg
sub
out
jg
push
repnz
or
loop
jg
sub
mov
repnz
xlat
jle
cli
push
lods
mov
sahf
cmp
shlb
int
cmpsl
push
inc
inc
sbb
sbb
xor
xchg
sub
imul
outsb
call
dec
push
add
dec
inc
inc
cwtl
aas
xlat
sub
xchg
leave
sti
out
daa
mov
xor
pusha
adc
and
imul
aam
sub
inc
fistpl
or
fldt
inc
jns
fdivs
xor
add
adc
and
dec
imul
out
jecxz
andb
scas
ja
xchg
xor
idivb
bound
jmp
sbb
imul
cmpsb
xor
mov
scas
sbb
sahf
adc
mov
rcl
test
das
js
mov
cli
push
ja
ds
mov
add
push
or
adc
loope
aas
std
inc
cltd
jbe
inc
decl
pop
mov
mov
push
jecxz
cs
bnd
scas
adc
lret
mov
dec
call
test
xchg
xor
popa
push
lret
insl
es
ret
mov
in
and
test
into
push
mov
sub
dec
mov
mov
cltd
adc
pop
les
cli
sbb
fstpt
mov
xchg
adc
outsl
jmp
mov
repz
or
bound
and
lcall
xchg
movsb
jae
adc
hlt
test
cmp
stos
scas
xlat
ja
and
xchg
ja
gs
add
pop
popa
subb
mov
fnstenv
pop
fidivrs
rcll
fs
sub
xchg
cmp
xchg
ljmp
int
aaa
pop
xchg
aam
push
stos
jle
cld
test
jo
enter
cmpsl
jae
mov
pop
xor
mov
pop
xor
mov
dec
mov
sub
iret
test
cmp
fucomip
xchg
std
test
pop
and
adc
fstl
movsl
add
je
dec
adc
cmp
jecxz
mov
pop
invd
jbe
pusha
cmpsb
out
and
mov
and
stos
and
shl
iret
fimull
xchg
jge
and
jb
add
rolb
pop
inc
ret
jle
adc
ret
into
mov
jg
andl
cmp
aad
imul
add
cmc
inc
xchg
sti
inc
outsl
test
movb
add
movsl
xchg
loopne
aad
xchg
push
es
outsb
push
stc
adc
pop
shl
in
clc
test
pop
pop
cs
mov
push
add
or
push
pop
or
mov
imul
jae
lds
or
mov
and
jle
arpl
inc
mov
stos
xchg
loopne
call
test
add
sub
push
leave
jle
loop
push
loopne
sub
fisttpl
cmp
jb
push
xchg
push
pop
add
cltd
int
xchg
pop
fcmove
popa
xor
inc
sbb
call
iret
push
outsb
xor
xor
popf
leave
xor
adc
mov
mov
rcl
dec
nop
pop
pop
jb
into
mov
adc
arpl
or
pop
push
fbld
pop
adc
subl
shll
xchg
sbb
inc
jne
fidivs
hlt
loopne
mov
test
call
fldl
cmpsl
adc
add
fisubrs
and
popf
mov
or
or
movsl
sbb
pusha
mov
call
cmp
jbe
xchg
xchg
add
mov
mov
jo
adc
outsl
dec
rorl
dec
xchg
mov
lods
pop
mov
dec
mov
outsl
sbb
fstps
leave
repnz
sbb
dec
jne
outsl
div
lcall
rcll
or
or
or
aad
dec
or
call
dec
movsb
lods
pusha
fidivrl
mov
cmp
aam
cld
dec
lret
loopne
cmp
sti
sub
push
addb
ret
orl
jp
int3
adc
cmp
ror
loopne
jge,pt
cltd
iret
push
or
shrl
jmp
adc
pop
xchg
push
xchg
cld
popf
mov
out
dec
mov
imul
loop
add
insl
xchg
adc
movsl
int
push
and
mov
stc
xchg
cmp
pop
jnp
jle
int
lds
pop
cli
mov
pop
push
out
mov
aam
inc
ret
mov
xchg
mov
mov
cmpsb
fsubrs
add
and
jae
inc
ret
xchg
mulb
and
jbe
mov
add
cwtl
mov
addr16
pop
mov
test
add
pushf
test
xor
lcall
push
or
sub
and
pop
cltd
jno
pop
push
fucom
aam
outsl
rcl
lods
jp
clc
mov
and
sbbb
inc
xchg
das
dec
cmp
adc
pushl
adc
in
or
aas
insb
mov
push
xchg
push
pop
sub
and
xlat
lds
inc
push
push
add
lock
xchg
adc
sub
add
sub
shl
nop
mov
sahf
subl
int3
sbb
jl
gs
cld
test
mov
push
pop
xor
cmpsl
inc
add
adc
daa
in
int
fbld
leave
in
xlat
inc
and
rcr
shlb
cld
pop
cmp
jne
icebp
ds
mov
fxch
xor
ja
outsb
loopne
push
dec
add
fiaddl
loop
xchg
sbb
push
loope
addr16
jecxz
aad
add
movsb
add
add
push
fldenv
inc
inc
xchg
mov
mov
iret
jb
stc
into
jmp
popf
cmpsl
sub
push
sbb
shl
sub
xor
sub
mov
lock
push
pop
inc
pop
loope
rorl
leave
lcall
adc
clc
ffreep
popa
or
out
sub
xlat
aaa
cmc
sbb
add
js
xor
jbe
mov
dec
sbb
aam
sub
pop
aam
mov
xchg
fucomp
loopne
fidivl
negl
jb
inc
mov
and
imul
int
clc
push
mov
cltd
xchg
push
das
aam
imul
mov
mov
stc
insl
push
jg
sbb
in
ret
mov
es
and
xor
xchg
ja
adc
bound
loopne
roll
dec
popf
pop
lea
sarl
and
or
cld
jg
lea
inc
or
adc
rcl
mov
pop
mov
fiadds
fistps
mov
imul
ds
mov
xchg
ret
cwtl
call
sub
mov
pop
xchg
mov
xchg
or
adc
lcall
cmp
in
sbb
jmp
xor
push
mov
fwait
mov
inc
dec
push
fisttpl
jbe
jo
adc
sbbl
test
sub
push
adc
cmp
jbe
jge
add
out
pop
shl
jmp
movl
mov
mov
mov
jbe
test
or
mov
lods
aaa
pop
xchg
xchg
push
ljmp
xor
or
push
mov
dec
or
jg
dec
sub
sbb
inc
lods
add
shrb
push
mov
les
jp
xor
mov
mov
cmp
jmp
mov
arpl
push
jge
fmuls
fbstp
lods
out
leave
cmp
icebp
pop
push
sub
xlat
xor
lret
xor
push
subl
add
popa
mov
stos
ret
movsb
je
dec
and
sbb
daa
sbb
lret
mov
cltd
cmp
mov
or
pop
adc
cld
std
in
xor
lds
lret
lock
ss
js
imulb
xor
push
xor
add
sbb
outsb
fildll
dec
xchg
push
out
sbbb
dec
cwtl
sbb
clc
sub
je
cltd
jno
scas
imul
jo
or
jnp
inc
or
xor
inc
cmc
sub
and
push
ja
insb
outsb
stc
ja
sbb
repz
imul
jns
push
inc
pop
mov
push
daa
leave
lcall
mov
or
int3
test
xor
pop
jns
jmp
imul
push
cld
fwait
aam
xchg
and
jge
inc
cwtl
repz
mov
xor
push
fdivrs
mov
cmc
repz
adc
push
sbb
into
cli
add
adc
enter
outsb
clc
pop
pusha
cmp
mov
sub
sub
hlt
cmp
sbb
push
or
adc
mov
lds
push
dec
stos
mov
out
jmp
jb
movsl
movb
cmp
aas
or
jb
add
or
frstpm(287
mov
lret
leave
push
xor
add
orb
xor
mov
sbb
fcmovnbe
xchg
ficomps
mov
sahf
pop
add
repz
ja
add
jbe
shlb
mov
jno
lret
clc
or
mov
sbb
sub
les
mov
sub
gs
jecxz
mov
sbb
movsl
mov
xchg
popa
jl
cwtl
mov
out
ja
jno
mov
push
or
lahf
push
and
flds
scas
mov
mov
faddl
jmp
xchg
aas
cmp
int
mov
mov
and
lods
outsl
fnstenv
xor
scas
cmp
js
loopne
test
bound
push
jae
ds
push
mov
or
pop
fisubs
cli
movsb
pop
test
xchg
pop
scas
push
push
bound
add
ds
call
in
shr
mov
lods
out
jmp
push
dec
xor
sbb
sub
ja
sti
inc
popa
adc
mov
inc
mov
xchg
rcrl
push
bound
xchg
es
pop
test
fwait
movsb
push
ficomps
jo
jmp
lea
xchg
xchg
sbb
pop
ja
mov
out
mov
mov
outsb
lea
jmp
mov
andl
bound
leave
mov
lds
data16
xchg
cmc
push
xor
test
data16
ret
and
jl
push
cmp
xchg
adc
hlt
cltd
pop
leave
lods
in
lret
fstl
mov
sub
pop
dec
or
scas
xchg
pop
stos
lock
call
mov
loopne
cltd
lock
mov
lret
mov
add
pop
xor
fcmove
pop
adc
xchg
stos
jno
data16
cmpsl
push
and
dec
popa
xlat
lret
aaa
scas
inc
jb
daa
jnp
xchg
leave
into
cld
pop
daa
mov
adcb
dec
fsts
in
mov
pop
xchg
mov
loope
mov
inc
icebp
das
push
in
daa
hlt
in
sbb
ret
mov
sbb
sub
adc
inc
test
fldt
add
leave
xchg
add
js
mov
pop
or
mov
or
arpl
sub
push
cltd
sbb
imul
jbe
and
icebp
data16
push
and
daa
sub
fwait
dec
fildll
mov
cmpsl
push
scas
daa
xor
faddl
sub
cmc
push
jmp
xchg
out
jne
mov
pop
sub
jg
lret
dec
cmp
lahf
mov
pusha
ljmp
add
lret
mov
pushf
pop
sbb
imul
mov
adc
add
pop
push
sbb
push
pushf
mov
jae
rcrl
mov
loope
clc
add
inc
pop
dec
data16
cmp
dec
sahf
xlat
sbb
xlat
sbb
xor
stc
test
or
shlb
add
inc
mov
daa
enter
xor
jno
insb
push
scas
fldenv
adc
xchg
pop
pop
cmp
out
dec
sbb
mov
xchg
insb
xchg
out
xchg
out
or
inc
mov
jecxz
xor
pop
adc
ret
or
call
clc
stos
xor
cmp
rep
sbb
and
xchg
cmp
fnstsw
loope
push
adc
push
adc
xor
movsl
sbb
ret
fcmove
adc
push
cmp
mov
jo
nop
mov
ja
cmp
mov
jecxz
arpl
or
mov
shlb
mov
loope
fildll
call
jo
pop
or
mov
out
and
addr16
dec
or
mov
xchg
enter
mov
mov
out
push
jecxz
je
pop
out
xchg
jl
pushf
add
outsl
adc
xchg
mov
int3
xor
inc
mov
jno
sbb
push
in
call
fdivl
cmpl
es
in
sub
jnp
push
insl
mov
adc
pop
cwtl
call
mov
popa
push
inc
jo
and
sbb
pop
and
scas
sti
loopne
insl
addb
sti
pop
jmp
icebp
je
adc
lods
int
pushf
sub
push
inc
add
insl
add
mov
push
aad
mov
adc
xor
or
sbb
inc
xor
je
mov
out
lcall
inc
mov
xlat
sbb
ds
lahf
clc
fs
icebp
insb
cmp
jb
xlat
jmp
inc
aad
nop
mov
xor
imul
inc
xchg
cmp
iret
push
jp
insl
mov
push
pop
xchg
pop
adc
lea
lods
ss
dec
jae
mov
scas
mov
negl
push
dec
les
in
orl
iret
and
fisttpl
dec
idivl
loopne
dec
inc
sub
repnz
and
es
insl
std
fs
data16
lret
xchg
jp
hlt
mov
aam
and
or
mov
inc
cmpsb
pop
imul
out
shl
dec
mov
insl
sbb
mov
push
mov
mov
and
enter
aaa
xlat
shl
add
inc
inc
aad
stos
push
movb
or
jns
scas
sarb
xor
mulb
push
stc
sbb
and
sub
mov
jne
mov
and
xlat
pop
inc
mov
push
jecxz
and
push
cmp
mov
dec
jmp
test
xchg
cli
xchg
xor
xchg
push
ss
add
insl
pop
xor
mov
ficoml
dec
lcall
bound
sti
cld
mov
iret
and
aaa
aas
pop
mov
mov
jp
das
mov
daa
bound
mov
rol
cmp
dec
js
stos
ret
add
cmpsl
imul
insl
sbb
inc
pop
daa
jle
pop
lods
das
sub
sub
pop
jbe
loope
out
jle
scas
orb
ljmp
mov
adc
xlat
sbbl
sbb
xorb
mov
icebp
push
adc
rcrl
xchg
or
or
push
addl
jg
loope
jo
pop
ret
dec
lcall
ljmp
lods
pop
mov
loopne
sti
add
pop
iret
in
cmp
dec
push
add
lahf
hlt
pop
je
gs
xchg
out
daa
push
ficomps
shr
add
testl
ret
push
dec
push
mov
inc
pop
mov
sahf
push
push
popa
push
mov
mov
sub
jecxz
cmpsb
mov
xchg
mov
cmp
fcom
lds
cmp
rorl
push
add
dec
adc
push
and
xchg
sub
cmp
cmp
mov
stos
test
mov
mov
inc
cltd
mov
fdivrl
fwait
lcall
pop
mov
sbbb
mov
popf
ret
mov
sub
rcl
or
mov
aam
outsb
test
jbe
mov
testb
pop
or
jbe
iret
jo
out
divb
dec
pusha
jg
push
sub
inc
dec
frstor
shll
aad
cmp
jo
out
mov
cs
dec
lret
pop
push
cmpsb
jno
pop
addr16
mov
xor
hlt
pop
leave
pop
sbb
dec
lea
icebp
xchg
mov
inc
mov
das
outsb
rorb
out
xchg
push
xor
test
pop
out
sbb
jecxz
ja
dec
imul
and
xor
sbb
push
scas
pop
push
sbb
mov
test
xor
icebp
xchg
fdivrs
xchg
stos
insl
test
adc
jp
sub
lea
xchg
inc
clc
enter
loopne
dec
les
sbb
sti
leave
adc
rorl
shrb
or
adc
or
lea
ss
int3
call
lock
popf
xchg
inc
inc
lea
cmp
out
cli
scas
mov
mov
inc
xchg
mulb
insl
imul
push
popf
sti
bt
in
mov
jo
int
push
cmp
in
push
cmpl
in
push
setne
cltd
unpckhps
pop
jge
xor
mov
push
fs
or
xchg
clc
dec
add
adc
into
pop
add
pop
sub
xchg
dec
inc
addr16
and
es
fbstp
pushf
xchg
addr16
pop
sbb
dec
ret
test
mov
dec
push
cmp
call
std
test
iret
sub
outsl
add
data16
mov
movsl
mov
jbe
andl
push
xchg
ds
sub
cmpl
adc
lret
push
adc
mov
lret
mov
or
outsl
insl
jl
pop
cmp
sti
mov
and
push
sahf
movsl
fidivl
mov
mov
sub
in
mov
aam
aas
xchg
int
icebp
add
test
xorb
lods
sub
xchg
pop
or
mov
mulb
outsb
mov
dec
daa
test
mov
addr16
pop
call
popf
pop
jecxz
mov
stos
cmpl
jle
lcall
lds
adc
push
mov
js
call
sub
mov
push
sub
pop
add
add
jno
mov
imul
inc
movsl
add
sbb
mov
js
mov
cmp
xchg
fwait
iret
dec
out
jl
fsts
adc
xchg
lods
test
lea
xor
sbb
adc
mov
xchg
mov
addr16
cmp
or
scas
pop
xor
push
xchg
fiadds
xor
hlt
inc
inc
call
jb
lret
loope,pn
push
stc
sub
cmp
dec
dec
add
movsb
fildl
push
jmp
sub
xchg
insl
or
and
iret
sbb
out
outsb
push
fisubs
daa
int
imul
lods
icebp
lods
in
or
clc
jo
and
mov
cli
adc
add
sub
adc
push
fimuls
fwait
and
pop
inc
jo
pop
pushf
es
or
in
xchg
movsb
int3
xchg
jo
cs
adcb
cmpsb
pop
addr16
aam
mov
scas
jmp
lret
mov
imul
mov
outsb
push
sub
into
lods
or
sbbb
shl
dec
in
xor
push
inc
xor
xorl
add
lahf
out
pop
mov
xlat
xchg
inc
mov
test
inc
jo
pop
stc
sbb
mov
or
movsl
lds
lds
inc
cs
pop
sti
jb
lret
int3
mov
xor
dec
ret
add
pop
faddl
and
jae
xchg
dec
outsl
dec
cmpsb
shll
test
das
mov
iret
in
stos
push
xchg
pop
enter
andb
loopne
push
push
push
pop
cmpsb
or
xchg
movsb
lret
pusha
add
cmpsb
loope
ds
lahf
dec
popa
and
arpl
filds
fwait
jbe
std
push
mov
sub
or
pop
sbb
stos
xchg
fcmovnbe
adc
adc
push
cmpsb
fldenv
mov
in
mov
imul
add
xchg
out
mov
mov
add
cmp
bound
movsb
pop
jb
lds
mov
hlt
rcll
aam
cltd
fdivrl
mov
jns
push
das
in
lea
cli
mov
roll
mov
mov
push
or
movsl
mov
scas
pusha
inc
pop
fwait
lock
mov
cmp
dec
jns
push
mov
hlt
fldt
mov
jns
xor
add
add
das
sbb
fimuls
mov
pop
out
sub
xchg
or
xchg
xchg
xchg
mov
pusha
or
cmp
dec
mov
aas
lds
cmp
push
cmp
or
dec
jp
leave
cmp
sub
pop
xor
arpl
cli
lea
es
jae
bound
rcrl
inc
shr
sbb
add
fs
sarb
xor
mov
sbb
mov
dec
icebp
mulb
push
sbb
push
jne
xchg
ds
cld
ljmp
sub
inc
jmp
xchg
adc
fwait
pop
lds
fdecstp
add
nop
nop
and
mov
lods
mov
mov
pop
sbb
test
pop
int3
fmull
mov
jnp
mov
push
adc
mov
fs
scas
les
dec
and
push
loopne
jle
lock
inc
mov
mov
sti
push
dec
and
rcr
out
xlat
jle
adc
dec
pusha
xchg
loopne
or
adc
jo
xor
mov
mov
sub
mov
nop
test
test
add
jnp
sub
inc
insb
lahf
add
sub
aas
xchg
xor
dec
iret
lea
mov
xchg
das
cmp
sub
fs
sbb
mov
leave
inc
add
test
lret
sbb
jecxz
stos
jo
sar
sbb
dec
insl
xchg
jmp
fnstsw
push
mov
das
sub
shlb
inc
xchg
insl
out
inc
mov
in
mov
push
mov
add
push
add
lods
testb
jb
adc
sub
negl
sub
in
out
outsl
into
add
sbb
xor
imul
cmp
mov
xchg
xor
bswap
aas
xchg
jp
and
mov
mov
push
out
cmp
mov
dec
sbb
push
ds
fwait
roll
out
in
mov
sub
sti
test
dec
push
mov
mov
pushf
jmp
push
mov
mov
imul
pop
or
push
lret
cmp
mov
sbb
imul
inc
addr16
fistps
scas
mov
mov
fnstcw
add
insb
pop
dec
adc
mov
imul
pop
xorl
xchg
dec
scas
push
hlt
sahf
mov
lock
lods
push
xor
cmpsl
mov
xchg
sub
jmp
lahf
adc
cwtl
loope
add
fmull
in
mov
mov
ret
mov
cld
dec
add
mov
and
inc
mov
add
ret
mov
ret
add
sahf
xchg
rcl
leave
aad
pop
lods
call
icebp
imul
int
imul
hlt
push
ret
loopne
loopne
hlt
push
dec
shrb
mov
pop
fimuls
add
push
jno
mov
mov
fwait
jmp
fs
nop
aas
lds
lods
loop
adc
xor
addr16
mov
dec
ljmp
mov
mov
jl
sbb
dec
xchg
jmp
sbb
outsl
test
addr16
fldl
jle
lock
jge
adcb
inc
insl
into
stc
mov
into
mov
mov
sbb
pop
jb
dec
xchg
test
sbb
mov
jle
pop
sbb
fisubrs
add
push
dec
aad
iret
movsb
out
in
pop
dec
cmp
test
mov
mov
jo
in
adc
test
mov
das
jl
out
add
mov
cmpsb
xor
xchg
call
push
or
aas
pmullw
stos
fucomp
insl
in
lock
jg
decl
cmp
jbe
in
mov
aad
pop
sti
cmp
and
xchg
jl
jge
push
add
arpl
jp
aaa
cmp
mov
dec
push
in
fwait
idivb
mov
stos
lods
enter
or
cltd
ret
inc
inc
icebp
xchg
shr
std
sti
push
fnstsw
out
pop
ljmp
cmpsl
pop
xchg
dec
adc
lret
cltd
cmp
loopne
popa
out
int3
pushf
cmp
into
inc
insb
adc
fcmove
andl
adc
int3
sahf
rclb
bnd
push
shrb
adc
pop
test
mov
jg
sbb
scas
pop
xchg
mov
lahf
mov
scas
gs
push
xchg
call
test
mov
int3
push
int3
cmp
dec
lret
sbb
xchg
test
inc
aad
mov
mov
cmp
popa
xchg
repz
push
loope
jnp
jb
pop
loope
add
setnp
int3
xor
andb
xchg
shll
sbbb
cmp
movsb
lret
adc
sbb
fldcw
ret
xchg
xor
inc
out
and
mov
das
inc
aaa
popf
mov
js
xor
iret
mov
push
imull
popf
xchg
loop
mov
mul
adc
cltd
pusha
cmpsb
clc
adc
and
sbb
test
imul
test
mov
mov
cmp
sbb
bound
fiaddl
sbb
insb
fisttps
int
arpl
fwait
xlat
mov
cmc
inc
dec
aad
dec
sub
ja
dec
mov
push
xchg
push
add
test
dec
push
ja
cmp
shll
aaa
sub
dec
loopne
cmp
out
xor
nop
fistpll
adc
xchg
les
mov
lret
loop
imul
xchg
int3
rcrl
inc
xchg
outsb
mov
sub
pop
cmp
xor
jmp
xlat
stos
add
nop
inc
mov
gs
outsb
dec
ret
daa
in
xchg
stos
inc
ret
mov
jne
sbb
push
cwtl
fnsave
mov
mov
mov
dec
xchg
or
mov
into
xor
in
jl
inc
push
test
mov
dec
inc
push
jle
xchg
cmp
push
mov
loope
push
andl
cmp
push
pop
aas
mov
movsl
leave
movsb
imul
inc
in
and
popf
dec
xchg
orl
mov
out
out
iret
cmpsl
lock
lret
mov
inc
cmp
mov
add
pop
push
pusha
sti
sbb
inc
and
fdivrs
push
adc
xor
mov
mov
repnz
cmpsb
out
dec
adc
sub
pop
add
adc
adc
sbb
adc
mov
lds
mov
dec
pop
je
addr16
mov
pop
sbb
mov
enter
lcall
add
mov
sub
ficoml
nop
int
test
mov
jae
or
ja
mov
push
mov
popa
jge
enter
or
and
fistpll
lret
repz
and
cmp
jp
pusha
push
mov
popa
lcall
mov
sub
push
xor
cs
cmp
ret
adc
mov
mov
movsl
pop
sbb
xor
mov
mov
push
mov
cs
dec
dec
mov
loopne
popf
nop
xor
jg
jg
int
stc
or
cmpsl
push
add
dec
nop
mov
push
pushl
xchg
add
push
mov
cmpsl
dec
xor
jbe
gs
ss
inc
cmp
and
xchg
iret
out
movsl
pop
ljmp
in
inc
or
pop
leave
popa
adc
adc
lcall
ja
idivl
cmp
cmp
mov
jp
mov
xchg
std
orb
insl
mov
push
sub
jge
sbb
mov
xchg
inc
mov
stos
pusha
rolb
add
leave
imul
pusha
iret
cs
sub
xor
sbb
xor
shll
in
sbb
push
jge
out
nop
arpl
bsr
int3
in
test
arpl
sub
lret
sahf
loope
insl
sub
repnz
pop
push
out
add
iret
mov
xchg
xor
out
push
and
and
std
repz
out
rorb
add
jno
add
dec
xchg
cld
lcall
lods
out
push
sahf
fsubrs
pop
rcl
mov
repz
mov
and
mov
push
nop
setl
mov
test
pop
pop
out
xchg
outsl
fbld
pop
push
or
and
mov
inc
mov
sbb
aaa
popf
pop
lahf
pusha
jle
leave
ss
jne
pop
dec
idivl
inc
es
dec
pop
cmp
nop
jbe
loopne
je
xor
dec
je
mov
pop
repnz
mov
lret
lods
jle
lea
jae
sub
xchg
or
and
dec
pop
xor
jp
xchg
or
or
push
fisttpl
mov
add
pop
dec
mov
dec
push
cmp
mov
adc
pop
std
mov
std
repz
add
enter
ss
pushf
test
pop
xor
stc
mov
jo
in
cmp
pushf
xchg
cli
xchg
or
mov
iret
inc
mov
jmp
dec
inc
fldcw
inc
dec
outsb
loopne
jnp
rdpmc
push
outsl
lret
stc
adc
xchg
clc
jl
test
int
jge
fnstenv
out
shr
fmul
test
push
pop
ret
lcall
nop
xchg
inc
outsb
mov
lahf
xchg
sub
mov
gs
mov
xlat
jns
das
imulb
xorb
rcrl
ret
xchg
fcompl
push
xorl
ja
cltd
sub
stos
jmp
stc
test
mov
mov
mov
scas
out
cwtl
out
add
addl
inc
mov
int
xor
iret
xor
inc
jp
stc
push
mov
movsl
mov
test
mov
and
jmp
pusha
data16
popa
mov
xor
fiaddl
xchg
jl
mov
jae
pop
jle
popf
cli
xchg
xchg
sub
mov
sbb
insl
stos
scas
jl
mov
out
popf
xor
pop
fbstp
adc
imul
outsl
adc
inc
pop
mov
push
sbb
push
cmpsb
add
pusha
sti
outsl
addr16
jmp
es
jnp
mov
jb
dec
call
pop
in
cltd
push
pop
lret
icebp
sub
xor
pop
and
pop
pushl
subb
popa
sbb
hlt
imul
out
ss
sbb
push
lock
pop
mov
sbb
jmp
or
cld
cmp
or
daa
or
fs
dec
shl
and
mov
adc
in
jns
test
test
and
imul
xor
xor
imul
cmp
aas
jne
lret
sti
pop
xchg
xor
mov
aas
jl
aad
cmpsb
inc
movsb
je
in
or
repnz
ja
and
cli
fcmovne
inc
hlt
cmc
sub
jnp
sahf
sar
into
flds
dec
pusha
fmull
divb
aad
add
ss
aaa
mov
jl
mov
std
int3
jle
test
lds
sub
sub
inc
std
fisubrs
arpl
test
cmc
xchg
nop
loopne
pop
inc
cmp
pop
mov
sti
cmc
push
jecxz
xor
sub
dec
ss
rolb
pop
mov
js
cltd
data16
jg
sbb
dec
test
stc
mov
dec
mov
ds
loope
dec
stc
xchg
stc
gs
sub
sbb
push
stc
mov
test
add
cmpsl
out
mov
add
adc
cmp
popf
loop
mov
in
arpl
inc
inc
inc
add
loop
cmp
xchg
mov
stos
sub
pop
test
push
xchg
ja
adc
jle
pushf
scas
test
dec
popf
push
sarb
mov
add
outsb
fstpt
ja
or
dec
add
movsb
and
mov
dec
push
and
inc
lds
mov
rclb
leave
ficomps
ljmp
jnp
push
or
jbe
and
cmp
cmp
aam
xchg
pusha
cltd
and
popf
fwait
xchg
insl
test
xchg
dec
movsl
push
mov
push
dec
pusha
movsb
in
mov
fstpt
lahf
mov
insb
sbb
insb
jbe
test
cld
adc
adc
jle
push
xchg
inc
out
and
and
std
aaa
dec
in
sbb
lret
xchg
pop
mov
fwait
std
sub
pop
sbbb
les
icebp
stc
dec
ror
sub
outsl
ljmp
add
cmp
sub
inc
pop
pop
dec
push
out
roll
in
in
dec
in
mulb
adc
push
push
push
sub
pop
int3
ja
mov
push
dec
stos
xchg
gs
jns
cs
das
push
adc
cltd
ret
insb
test
mov
or
enter
imul
xchg
scas
cmp
lods
ds
push
inc
push
cmp
mov
cmp
mov
jne
packssdw
pop
loopne
clc
xor
rorb
sub
out
sti
fnstenv
inc
stos
and
mov
jns
or
push
in
jmp
xchg
mov
fcmovnb
xor
adc
loopne
fs
mov
jnp
aaa
orl
arpl
insl
mov
cmpsl
inc
dec
out
out
stos
scas
hlt
lcall
insb
pop
pop
outsl
mov
popa
mov
lcall
cwtl
jno
push
jg
clc
lcall
pop
aad
inc
sbb
mov
data16
insb
pop
jnp
sbb
pop
mov
mov
add
icebp
xor
test
mov
decb
cwtl
mov
and
inc
insb
movsb
inc
pop
out
call
pusha
icebp
int3
daa
add
loop
mov
sbb
push
cmp
sahf
outsb
push
repz
push
jo
mov
hlt
or
xor
xor
jne
iret
inc
add
mov
testl
mov
ds
adc
mov
add
fstl
fs
jne
inc
sub
inc
ljmp
js
insl
imull
fldt
lock
repnz
mov
add
add
popa
fiadds
movsl
shlb
gs
mov
mov
lret
mov
addr16
mov
cmp
sub
jmp
jg
iret
arpl
movsl
lret
call
hlt
adc
mul
cld
mov
cmp
sub
cmp
lds
pop
icebp
lea
es
jbe
fadd
xchg
add
mov
add
push
mov
cmp
dec
inc
jo
mov
jl
lds
arpl
sbbb
pop
lods
loope
pushf
pop
jecxz
push
std
pop
cmp
cmp
sub
iret
and
je
out
xchg
add
jb
xor
mov
sub
xchg
xchg
loop
dec
jg
adc
mov
mov
dec
hlt
negb
xor
aaa
or
loopne
flds
rcr
push
inc
js
xor
repz
push
mov
movsl
jnp
out
popa
nop
popf
mov
dec
andl
push
pop
loope
ror
sbb
push
outsl
or
ljmp
mov
loopne
in
cmpsb
dec
mov
mov
ret
xor
fistl
nop
jbe
dec
in
test
xchg
pop
sar
cmp
adc
stos
lock
dec
jo
adc
dec
dec
xchg
incb
or
mov
cltd
sub
dec
shrb
lods
pop
out
xchg
xchg
test
xor
adc
xlat
jo
cmc
cli
push
loop
inc
pop
xchg
jl
pop
stc
ret
daa
notb
sarl
hlt
push
inc
push
lret
mov
mov
shl
sub
fwait
and
push
and
pop
inc
repz
test
push
lock
popa
fcomp
sbb
rclb
inc
mov
push
ds
fcomps
andl
sbb
jg
or
notl
inc
inc
pop
xchg
das
push
mov
cwtl
imul
xchg
fimuls
adc
and
sti
add
mov
insl
jnp
notb
sbb
mov
cli
or
xor
loope
jle
push
std
je
popa
aas
loop
push
cmovae
cmpsb
movsb
cmpsb
xchg
mov
enter
enter
cmp
pop
pop
xchg
or
xchg
inc
jno
sub
push
adc
mov
into
mov
popa
jmp
lds
pop
mov
aaa
or
loopne
icebp
add
cmpsb
std
adc
mov
dec
sbb
bound
xor
popf
rorb
dec
jp
mulb
mov
pop
adc
rcrl
mov
xor
cmc
mov
dec
mov
enter
movsl
sbb
push
int
push
pop
daa
mov
imul
adc
popf
sub
xlat
lcall
mov
test
cmp
mov
cmp
mov
pop
inc
add
pop
adc
jg
mov
fcmovu
sbb
jmp
test
sub
cmp
roll
cmpsl
lcall
mov
leave
jle
hlt
dec
test
push
mov
pop
adc
push
negl
or
pop
jecxz
jb
mov
jbe
push
repnz
andb
pop
mov
push
jge
lahf
loop
push
xor
lds
cld
inc
adcl
cwtl
loop
push
push
add
jmp
pop
pop
push
js
mov
int
fbld
lock
adc
push
fwait
mov
and
sbb
bound
mov
pop
adc
daa
fstpt
scas
in
fsubrl
cmp
mov
cmp
mov
add
push
sub
and
push
mov
in
and
ret
mov
jo
adc
aad
sti
adc
jle
iret
pop
in
lods
mov
pop
imul
or
jb
bound
outsb
stos
lahf
xor
and
pop
jns
mov
js
in
int
aaa
lods
rcr
xor
imul
dec
and
adc
cmc
lcall
add
ret
lea
inc
fwait
xchg
jecxz
dec
mov
rorb
lret
jmp
andl
lcall
aas
sub
sti
or
leave
push
enter
ds
xor
fcomps
cmpsl
das
data16
xchg
in
dec
cmpsl
add
fimull
adc
xchg
sbb
cmp
push
mov
jmp
pop
add
xor
cld
push
cmp
cmpsl
adc
lods
cmp
outsl
jle
xchg
pop
pop
sub
fs
dec
xchg
sbb
xor
loop
int
movsl
inc
mov
mov
or
xor
sub
xor
and
mov
mov
loopne
mov
lcall
lods
fyl2xp1
fst
aas
insb
hlt
pushf
add
inc
test
aam
cmpb
jmp
jo
adc
dec
mov
cmp
aaa
lds
sbb
movsl
cld
xchg
add
ljmp
movsb
cmp
push
ret
adc
mov
ret
mov
push
test
jne
dec
cltd
add
sbb
arpl
dec
push
pushf
shlb
xchg
push
add
fdivp
pop
clc
xchg
push
movsl
test
pop
lahf
pop
cmp
sub
loop
xor
jne
pop
fsubrs
jae
and
lods
sub
in
xchg
movsl
push
popf
xchg
mov
in
inc
shr
xchg
and
sub
pop
jbe
mov
sub
or
pop
cmpsw
push
push
imul
mov
adc
inc
pop
inc
shll
mov
repnz
call
daa
jno
ret
push
push
xchg
xor
gs
sub
or
pop
and
adc
jge
xchg
xchg
cmp
push
jl
fistpll
or
idivb
jmp
push
pusha
call
bound
push
or
je
add
xchg
sub
add
add
call
addr16
mov
push
xchg
mov
pop
pop
inc
mov
adc
adc
cmp
inc
push
sub
sti
cmp
cmp
repnz
or
cmp
jp
sbb
jne
gs
xchg
stc
dec
clc
xchg
xchg
aaa
lds
add
hlt
mov
mov
lods
pop
es
hlt
aaa
xchg
pop
pushf
out
add
adc
push
push
int
jle
pop
mov
fistpl
xchg
jge
push
pop
pop
orl
les
call
or
xchg
out
mov
mov
jno
add
push
addb
ss
adcl
cwtl
dec
shl
mov
mov
mov
jbe
lcall
adc
or
ljmpw
add
test
mov
fbld
ret
adc
aam
ret
xchg
sub
mov
rolb
imul
shufps
cmp
add
and
lods
and
out
mov
sub
gs
outsb
bound
int
jne
repnz
push
bound
pusha
cli
cmpsb
dec
psubw
adc
add
jg
inc
sub
imul
mov
fnstcw
xor
aaa
lcall
cwtl
mov
dec
xlat
fdivrs
je
pop
mov
gs
aas
icebp
dec
and
lret
push
insb
addb
mov
mov
jns
cwtl
adc
sub
adc
test
test
nop
jbe
mov
and
hlt
lahf
xor
push
mov
xorb
insb
jo
mull
insl
sub
sub
outsl
adc
stos
cwtl
cs
mov
repz
xchg
in
and
dec
test
or
or
xor
cmpsb
xchg
int
xchg
xlat
loope
jne
xchg
testl
and
sub
sbb
loopne
cld
sbb
jge
testb
pop
cmp
jge
jle
icebp
jle
inc
insb
lds
inc
lcall
inc
imul
lret
dec
push
mov
pop
sub
nop
push
sub
inc
cli
push
das
ds
cmp
mov
sti
into
push
fcmovbe
mov
cs
int
jbe
pextrw
mov
outsb
xchg
insb
mulb
popa
or
iret
scas
insb
sub
movsl
or
cld
cmp
es
insb
add
mov
push
push
xchg
iret
inc
jns
jl
inc
xchg
popa
mov
in
jae
adc
fisubrs
loope
fists
cld
mov
xor
sahf
add
or
or
adc
xor
sub
xchg
xor
sbb
cltd
add
mov
mov
add
imul
cmpsb
addr16
pop
ret
icebp
dec
mov
inc
xlat
cmp
sbb
and
testb
adc
pop
lret
or
div
jb
xchg
or
movsl
ror
insl
pop
add
pop
jbe
rcrl
es
sub
or
cmpl
movsl
popf
shrl
xchg
push
ret
adc
inc
fdivl
jb
sub
adc
je
xor
push
icebp
jge
shlb
sub
jne
fisubs
or
push
aas
nop
sbb
cli
mov
lods
in
mov
jne
or
mov
push
pop
jmp
or
out
filds
lods
shl
inc
nop
jmp
cltd
call
xchg
mov
pop
cmc
fadds
insb
sub
fisttpl
orl
frstor
jecxz
mov
mov
loopne
adc
or
shrl
adc
jge
and
add
fmul
push
mov
jns
jg
push
pop
sbb
cmp
imul
ret
scas
mov
inc
lret
mov
out
push
js
lods
xlat
add
aaa
int
push
xor
and
insl
sub
imul
imul
negb
and
xor
cs
and
lock
pop
stc
and
mov
pop
pop
pop
jne
or
lahf
je
aas
xor
jnp
push
add
sbb
push
dec
mov
ret
lahf
xchg
imul
notb
adc
sbb
cmpl
adc
leave
xor
cmpb
pushf
aam
inc
xor
push
ds
mov
push
fistl
std
sub
lcall
push
jmp
jle
inc
jg
cmp
sub
xchg
jnp,pn
scas
repnz
pop
je
rolb
imul
inc
add
mov
pop
pop
adc
add
xor
loopne
jbe
lahf
fwait
imul
mov
lahf
sub
les
push
xchg
or
mov
dec
int
fs
std
fidivl
lds
popa
or
hlt
jns
sbb
cwtl
in
or
push
adc
lret
mov
or
es
cltd
dec
fsubrs
push
mov
out
repz
sbb
push
dec
jns
push
lret
in
mov
pop
mov
pushf
push
scas
dec
mov
inc
inc
mov
sub
fs
mov
addr16
and
scas
sbbb
mov
pop
movzbl
jecxz
mov
arpl
ficoml
pop
inc
cld
jnp
fists
testl
mov
xchg
xor
filds
ret
cmpb
pop
ror
mov
out
mov
adc
testl
bound
or
mov
data16
add
pop
repnz
and
repz
sti
cmpsb
nop
dec
movsl
pop
pushf
cmp
pop
ja
int3
adc
mov
sbbl
out
xlat
xchg
rcr
jg
jg
cwtl
pop
imul
popf
ret
popa
mov
stos
pcmpeqb
test
or
jl
dec
push
cmp
gs
push
pop
sbb
jle,pn
jmp
cmp
inc
or
xor
and
mov
mov
cmp
adc
out
xchg
jns
dec
pop
xor
jns
les
iret
enter
sti
add
out
int
mov
pushf
adc
pop
cli
subl
std
testb
cli
out
movl
in
mov
and
lcall
mov
sti
icebp
cli
mov
fisubrs
gs
nop
ja
cmp
jle
push
and
pop
sbb
inc
out
repz
cmpsb
jp
mov
fnsave
icebp
in
mov
ljmp
mov
mov
mov
cmp
lds
pusha
or
lods
ds
or
fsubl
movsb
jnp
xor
xor
in
addr16
pop
repz
in
int3
pop
mov
enter
mov
or
mov
mov
pop
mov
mov
outsb
pusha
stc
clc
cmpsl
in
cmp
aam
xlat
ret
and
cmp
out
adc
add
bound
or
cltd
into
mov
or
aam
fucomi
movsb
stos
pop
push
js
lret
mov
mov
jns
insb
fsubr
cs
sub
es
inc
cwtl
jo
movsl
ljmp
bound
iret
and
je
push
call
pusha
jmp
cmp
push
jmp
popa
idiv
aaa
fdivrl
aas
test
xchg
aas
stos
in
sub
xor
xor
call
out
shl
shrb
popa
pusha
push
scas
mov
loopne
jge
mov
pusha
cmc
flds
je
xor
imul
rorb
cmp
hlt
cwtl
in
mov
es
adc
jge
adc
add
jge,pn
loopne
mov
cli
test
mov
inc
dec
das
xchg
sub
js
push
test
xchg
les
scas
push
subl
call
out
push
jno
pop
lret
lcall
testb
mov
sbb
popf
andl
mov
pop
aam
mov
push
iret
pop
jne
jge
inc
push
sub
jb
imul
orl
sti
or
xor
mov
mov
insl
sub
sub
scas
adc
cmp
ss
pop
out
sub
es
adcb
es
cld
outsb
xchg
cmp
push
and
xchg
mov
push
loop
add
lret
cmp
cwtl
test
nop
out
pop
add
pop
data16
popf
adc
or
push
sbb
mov
shlb
int
mov
pop
in
xchg
call
inc
shr
adc
mov
fs
or
jle
push
mov
xchg
int
cmp
jne
jb
pop
sub
stos
dec
cltd
dec
sub
dec
sbb
xor
fidivl
dec
or
cmp
or
mov
stc
cltd
fs
arpl
sbb
addr16
std
cwtl
sti
jg
stos
outsb
push
scas
dec
fcoms
int
sbb
add
aam
adc
mov
mov
and
sbb
jle
fcmovbe
push
addb
pinsrw
pop
aad
xchg
dec
rorb
into
jecxz
cmp
outsl
scas
jecxz
pop
jo
mov
push
cltd
test
es
xor
ja
push
mov
mov
lret
pop
mov
push
pop
xchg
push
cmp
movsb
mov
sbb
xor
jo
loopne
mov
divb
pop
cli
lret
test
imul
ss
scas
das
sub
xchg
dec
push
sbb
mov
hlt
mov
and
jmp
jns
push
out
mov
fisubrs
adc
mov
test
inc
fwait
sti
idivl
lds
push
aaa
or
scas
aam
jle
push
out
push
sub
loopne
xor
or
je
sbb
les
aad
mov
jmp
xchg
inc
outsb
xchg
fstl
outsl
sub
sbb
cmp
fstpt
in
and
sbb
fimuls
push
dec
sub
xchg
sahf
mov
pop
cmp
adc
jnp
pop
add
aas
dec
mov
xor
xchg
or
mov
out
sbb
push
push
sub
push
xchg
sarl
sub
mov
fsubr
hlt
dec
pop
stos
es
cmp
or
iret
out
jo
stos
int
and
pop
sbb
addr16
arpl
dec
jae
jmp
ret
repnz
sbb
pop
push
xchg
aas
in
inc
popf
xlat
jp
notb
push
xlat
jl
mov
shll
fisubl
fcoml
add
xchg
jecxz
sti
popf
lret
mov
or
fwait
xchg
or
lret
lret
cmp
test
xor
mov
daa
inc
dec
sub
out
lcall
inc
jle
cmp
outsl
push
cltd
inc
pop
int
ja
cmp
iret
mov
mov
notl
cli
or
nop
sti
ja,pt
sbb
sub
adc
repnz
push
adc
pop
lret
icebp
add
sub
or
movsb
xchg
jmp
test
sub
jl
add
lahf
or
push
in
aam
pop
in
rcll
push
clc
out
and
sbb
jp
enter
pop
add
enter
loopne
insb
into
and
mov
mov
xchg
push
jns
sbb
pop
mov
inc
or
shll
push
jbe
jmp
aas
js
or
mov
int3
dec
push
outsl
je
push
sbb
dec
cmp
sub
jp
outsl
xor
mov
jb
into
lret
xchg
sub
jbe
jns
mov
pop
fisubrs
pop
push
sbb
cld
add
xor
add
mov
stos
mov
out
add
je
xor
dec
mov
clc
leave
out
sbbl
pop
cld
push
jo
xlat
push
mov
enter
inc
sub
insl
hlt
fisubrl
push
mov
mov
sarl
push
clc
push
popa
es
push
lret
les
and
inc
cmp
sbb
movb
add
mov
mov
mov
out
sbb
inc
fnstcw
dec
data16
enter
push
push
xor
inc
shrb
pop
cmpsb
js
ds
test
jnp
or
rol
ret
inc
pushf
movsl
out
adc
fimuls
sets
or
leave
adc
sub
ljmp
fnstenv
popa
push
test
jecxz
sub
inc
lea
inc
cmp
shlb
cmc
ja
es
cld
xchg
xor
push
adcw
aad
pop
sbb
xchg
call
mov
xchg
lea
sub
xor
jns
mov
popa
out
and
jne
mul
lods
dec
sub
ret
jns
push
xchg
orb
fst
cmp
mov
jle
jle
out
pop
xlat
cmc
mov
fwait
dec
data16
add
cs
lds
test
in
cmp
xor
xchg
pop
insl
sbb
mov
jp
test
sub
movsb
push
push
xor
or
in
call
xchg
dec
dec
out
xchg
sbb
pop
cs
mov
mov
xchg
idiv
or
sub
mov
test
xor
add
lods
iret
xlat
popa
jmp
inc
enter
dec
push
adc
inc
sbb
clc
inc
jle
push
leave
outsl
adc
imul
sahf
cmp
mov
pop
sbb
dec
incl
ja
hlt
push
cs
xchg
push
decl
pop
leave
sub
push
enter
sub
pop
std
dec
bound
mov
rcrl
mov
jnp
inc
je
jge
int
mov
stc
leave
js
sub
aas
jae
sbb
sub
aam
pop
jb
jle
movsl
sbb
out
push
mov
stos
icebp
adc
cwtl
cmp
push
or
jbe
out
mov
test
movsb
dec
push
out
jo
add
and
pop
push
add
divl
push
push
cmp
jne
add
icebp
cmp
lret
fimull
icebp
mov
push
add
push
inc
pop
loopne
jnp
or
lahf
mov
pop
cld
out
sub
mov
lret
loope
mov
lods
dec
xchg
dec
cmp
ret
out
cmp
das
lret
out
pop
shl
sbb
push
es
aas
mov
jg
cmp
adc
cltd
push
sub
int
pop
jne
aas
cmpsl
cmp
test
call
stc
mov
loopne
int3
and
or
aaa
fs
add
dec
rorl
inc
mov
pop
stos
jo
insb
cs
mov
fwait
out
ds
mov
stos
mov
stc
addb
jne
add
std
lock
cmp
inc
stc
arpl
and
test
cmp
xchg
mov
xor
xor
sub
into
or
test
mov
js
lods
mov
mov
and
mov
push
dec
xor
lods
test
xor
rclb
or
xchg
lret
push
lahf
ret
andl
and
adc
lret
or
mulb
sarl
push
pop
out
inc
out
pop
mov
scas
outsl
icebp
pop
test
mov
xchg
lcall
insl
pop
push
dec
or
or
stc
lahf
je
call
adc
rolb
push
mov
shrb
jns
xor
mov
arpl
push
stos
loope
mov
cmc
sub
push
sarl
jmp
lods
in
mov
mov
xor
or
xor
fnop
inc
je
dec
dec
adc
ret
rclb
inc
popa
xchg
lret
insb
add
pusha
sub
repnz
or
gs
lods
aad
adc
inc
or
jno
fstl
dec
into
xorb
inc
dec
loopne
pusha
hlt
outsl
enter
jbe
ret
clc
or
ffreep
nopl
jg
cmp
xlat
lock
cli
jle
rclb
mov
xor
lahf
inc
push
orb
imulb
bound
push
sbb
rcll
lock
aad
sub
cld
pop
fsubl
movsl
popf
lret
lods
cmova
ficompl
xor
push
out
xor
add
dec
shr
inc
jle
add
sub
add
out
cli
add
ja
sti
ljmp
movsb
adc
push
or
call
and
push
push
insl
ret
roll
sub
mov
mov
cmp
mov
xchg
outsl
pop
mov
lret
fwait
add
xchg
mov
jl
mov
test
out
in
out
aad
xlat
test
cmpsb
in
mov
or
sub
jne
push
pop
cld
pop
das
test
scas
push
xlat
dec
pop
xchg
or
fisubrl
sahf
or
lock
or
jb
adc
push
xchg
mov
ficoml
cs
sub
mov
nop
scas
sub
jo
in
mov
ds
outsl
push
rorl
subb
stos
push
push
pop
addr16
and
pop
mov
jns
out
loopne
lret
inc
xchg
fmulp
add
pusha
mov
in
sub
sub
out
in
sub
pop
stos
hlt
xchg
dec
leave
clc
cli
lret
repz
insl
inc
adc
lods
lret
inc
test
push
incb
inc
mov
cmp
in
sub
jo
xor
pushf
mov
inc
mov
inc
adc
icebp
pusha
arpl
and
mov
pop
pop
mov
or
jmp
xchg
dec
adc
add
sub
mov
xchg
movsl
pop
push
sub
adcl
xchg
push
or
popf
mov
in
rcll
cltd
inc
cmp
and
jle
shr
loopne
push
lock
adc
mov
push
cmp
mov
mov
imul
inc
or
add
and
ret
lcall
roll
xchg
xchg
dec
xchg
push
testb
and
fucom
subb
push
cmp
xchg
inc
lret
loop
and
addr16
mov
push
loopne
inc
push
sub
cld
cwtl
xlat
jge
inc
pop
clc
add
pushf
xor
sub
stc
jle
mov
mov
xchg
enter
fiadds
lods
stos
or
imul
jecxz
pop
cwtl
mov
dec
stc
sbb
addr16
add
aam
es
sub
loopne
pop
and
nop
and
mov
jmp
mov
aaa
pop
sbb
mov
in
inc
daa
or
cld
dec
cmp
leave
xchg
push
incl
push
sbbb
and
xorb
mov
pop
rolb
jg
repz
mov
fistps
mov
enter
xor
xchg
or
fildl
loop
scas
xchg
aas
jno
dec
arpl
aaa
pop
push
lds
cmpsl
popa
jge
cmpsl
call
xchg
enter
and
and
fwait
les
mov
scas
add
or
fmull
mov
cmpsl
lock
jmp
insl
insl
dec
jmp
cli
mov
cmp
and
std
fstps
leave
adc
or
inc
cwtl
out
pop
insb
mov
pop
std
stos
sub
jmp
xchg
mov
xor
fistpll
mov
rorl
or
mov
jge
xchg
mov
rol
xor
sub
mov
sets
and
sti
add
jl
pop
jge
push
in
bound
push
insl
data16
pop
test
sbbl
adc
push
inc
cltd
int
mov
xchg
pop
sub
in
adc
adcb
xchg
filds
aas
pop
xchg
sbb
xchg
orl
movsb
in
out
rcr
pusha
mov
jae
adc
cmp
xor
xor
mov
fisubrs
iret
dec
xchg
xchg
sarb
xchg
mov
mov
in
outsb
dec
js
stos
scas
sub
bound
inc
fs
rolb
adc
mov
outsl
adc
and
stos
xor
lods
jnp
jge
mov
ucomiss
lds
clc
adc
orl
addr16
nop
push
add
jge
xchg
xor
mov
add
push
subl
jbe
or
out
dec
sbb
or
stos
add
pop
push
pushf
enter
test
xchg
add
outsb
fidivrl
call
jecxz
fldl
sub
sub
scas
ljmp
pop
xlat
leave
pop
and
in
sbb
mov
popa
fwait
inc
adc
or
xchg
addr16
mov
jb
mov
sbb
test
adc
sub
push
add
dec
std
dec
push
or
jp
pop
mov
int3
pop
pop
imul
popa
inc
push
inc
cmp
xor
movsb
mov
outsb
movsb
cld
xchg
cmp
xor
ret
fwait
pop
enter
fmull
shrl
or
inc
jl
or
sbb
dec
adcl
mov
int
pushf
outsb
aaa
cmp
outsl
jo
jge
fstpl
xor
imul
dec
cmc
pop
dec
sbb
cmc
ret
add
push
sbb
sub
ss
cs
insb
cs
fcomps
mov
pop
xchg
mov
mov
stc
mov
jmp
push
cmp
mov
aas
jno
fwait
test
mov
sbb
sub
push
sub
adc
int3
enter
and
mov
fisttpl
scas
push
pusha
cs
adc
or
pop
stos
sub
sbb
test
cmp
jo
lret
fidivl
cmp
inc
lods
jbe
int3
pop
leave
stc
int
mov
pop
add
jecxz
push
cmp
repnz
js
cli
out
dec
div
xlat
xchg
xor
enter
jmp
adc
outsb
outsb
sbb
aad
ret
sub
addr16
sub
outsb
rcl
cli
add
pop
mov
cmc
lds
cwtl
addb
leave
xor
add
in
gs
mov
or
lret
adc
add
ret
or
mov
into
fisubrl
pop
fs
and
jmp
das
lret
cld
out
mov
adcl
shrb
test
xor
sub
int
inc
ret
lcall
cli
imul
mov
mov
jae
xlat
push
adc
data16
ja
cmpsl
pop
xchg
ret
fs
cmp
add
cld
call
push
or
adc
cmc
pusha
pop
test
lahf
mov
and
add
mov
fisttps
push
jle
adc
or
insb
repnz
or
adc
popa
jp
sbb
xor
sahf
in
fnsave
xchg
and
out
sbb
sub
cld
rol
sub
rcl
push
insb
call
cmp
pusha
out
pop
mov
inc
cmpsb
push
clc
add
adc
stos
ret
mov
rol
sbb
cwtl
adc
lods
jb
xlat
push
jno
fldt
fadds
insl
mov
fcompl
sub
and
roll
aaa
in
call
dec
cmp
xchg
xor
pushl
fists
mov
pop
and
loopne
mov
mov
inc
and
jp
push
outsl
add
or
dec
data16
jbe
mov
pushf
les
jmp
add
lahf
mov
sbb
cmpsl
dec
mov
js
addr16
xchg
cld
pop
push
jge
add
xchg
xchg
cwtl
ljmp
xchg
hlt
sub
jo
addr16
inc
add
jns
add
and
andl
aas
jnp
std
out
jne
sub
cmpsl
inc
mov
push
arpl
in
inc
sub
dec
mov
push
loope
sbb
pop
cld
sbbl
sbb
and
nop
shrl
jnp
mov
icebp
cs
push
cmpsb
fwait
pop
pop
or
and
lods
cmp
xor
cltd
xchg
mov
int
pop
inc
int
and
xor
fcmovu
inc
dec
mov
or
addl
push
pushf
mov
enter
xchg
jge
mov
mov
mov
add
arpl
outsb
inc
jns
pop
aam
inc
in
outsb
or
and
cmpsl
ja
inc
mov
cmpsb
insb
imul
add
dec
lods
mov
movsl
sar
inc
test
ja
inc
mov
loope
lret
push
or
and
pop
fsubrs
sub
inc
pop
inc
or
loop
pop
sub
mov
mov
mov
arpl
jnp
xlat
leave
sub
inc
xchg
mov
xor
inc
lcall
xchg
inc
or
popa
dec
fcomps
pop
mov
mov
mov
adc
lods
leave
xchg
mov
mov
pop
addr16
add
jge
fadds
neg
rorl
out
cmp
mov
sbb
clc
sbb
push
out
adc
into
jle
dec
lods
out
jo
xor
rcr
cmp
pusha
icebp
repz
xchg
mov
pop
fisubrl
cli
cwtl
push
or
mov
xor
or
insl
mov
aam
dec
fdivrs
fdivrl
sub
xor
cs
stos
cld
push
jle
cmp
xchg
jmp
sbb
stos
and
loope
lods
rclb
push
imul
mov
mov
sahf
push
inc
rcrl
mov
arpl
out
jnp
in
mov
add
push
mov
inc
xor
cmp
addr16
movsb
pop
popl
faddl
ljmp
push
sbb
scas
ljmp
or
orl
xchg
sub
ffreep
pop
sbb
mov
adc
and
jle
jb
in
sahf
mov
jmp
cld
in
cmp
jl
jno
lahf
out
fwait
inc
sub
mov
xchg
lock
lods
xor
fmul
cld
scas
in
push
push
or
inc
push
push
sarl
xchg
cmp
inc
in
and
mov
cld
cmpsl
xor
mov
mov
bound
dec
rorl
pop
ljmp
mov
jo
scas
push
xor
and
sub
fdivs
pop
xchg
dec
xlat
push
or
fwait
mov
cmp
push
fdiv
pushf
and
mov
sub
ret
sti
or
sbb
sbb
xorb
pusha
adc
mov
mov
cli
xor
jno
mov
cmc
pop
xlat
push
daa
sbb
es
xchg
mov
bound
mov
pmaddwd
mov
inc
push
into
out
stc
cmpsb
cmpsl
inc
jo
adc
adc
adc
icebp
mov
lret
xor
xchg
test
icebp
lods
or
aas
ret
pop
xchg
cmpsl
jne
push
push
dec
and
shrb
pushl
popf
sti
pop
push
ja
mov
insl
xor
inc
dec
mov
xchg
fs
std
mov
jns
fwait
pusha
push
pop
pop
pop
into
dec
pop
mov
in
mov
scas
jle
mov
push
loope
mov
or
mov
and
mov
nop
rclb
nop
pop
mov
adcb
cmp
sub
dec
movsl
ret
ret
sbb
xlat
sbb
stos
sti
stos
fldl
test
mov
iret
out
jle
test
je
nop
cmp
stos
or
mov
jecxz
pop
inc
or
ret
stos
lods
sub
pushl
pop
push
aad
bound
adc
adc
lahf
shrb
aam
dec
jle
jnp
add
mov
fcoms
int3
int
fistpll
int3
mov
mov
loop
push
add
mov
cmp
insl
sbb
subb
sub
popa
das
mov
cwtl
ljmp
mov
xor
popf
jg
ljmp
addb
mov
lahf
data16
add
mov
mov
sbb
dec
cmp
fistpll
neg
stos
or
andb
ds
push
cmp
stos
mov
std
or
add
ds
rcr
js
dec
int3
es
repnz
loop
pop
adc
adc
push
fmuls
pop
int3
test
pop
add
xchg
daa
inc
fs
and
mov
sbb
push
pop
cld
cmpsl
scas
jl
orb
scas
sti
pusha
ljmp
push
xchg
int3
mov
and
mov
sbb
stc
movsb
ret
push
out
jne
aas
fidivs
fldl2t
fsubrs
dec
mov
or
sbb
outsb
scas
ja
mov
leave
add
mov
xchg
les
cli
mov
mov
mov
repnz
repnz
in
mov
mov
jns
popa
insl
xor
mov
cmp
sbb
js
adc
hlt
push
xchg
xchg
inc
enter
push
nop
hlt
push
mov
jb
outsb
add
dec
mov
loope
les
cmp
mov
lret
in
adc
xor
push
mov
cmp
je
inc
ja,pt
mov
add
out
psubsw
inc
mov
fistps
stos
outsl
or
ret
or
dec
iret
shlb
jbe
push
and
mov
mov
shl
pusha
das
xor
cmp
add
repz
push
aam
dec
jns
jl
sub
dec
lods
mov
addr16
jmp
out
push
sti
cmp
jle
das
cmpsl
ret
cmp
mov
mov
adc
stos
sbb
mov
cmp
out
aaa
xchg
xchg
ret
mov
jns
lea
daa
imul
sub
mov
jmp
adc
dec
push
adc
or
hlt
mov
jae
dec
add
push
push
call
mov
sub
mov
outsb
jae
addl
hlt
cltd
mov
inc
fcmovu
sti
push
dec
pop
test
xlat
mov
sbb
add
adc
mov
cmp
dec
add
lcall
aam
push
cmp
aaa
stos
push
push
divb
ret
outsb
sbb
pop
outsb
fldcw
dec
mov
bound
mov
das
imul
lcall
add
mov
add
sarl
ret
sbb
test
rol
gs
aad
out
fnstenv
pop
movsl
push
ficompl
jnp
mov
or
mov
roll
mov
call
jb
cmpsb
sbb
push
jae
mov
sbb
stos
dec
jo
jl
popa
jo
jg
cltd
cmp
stc
test
popa
mov
outsb
loope
jg
or
mov
fmull
stos
pushf
push
arpl
fildll
cmc
cwtl
ss
aas
or
and
fdivr
jecxz
cmp
jae
lods
mov
lods
leave
sub
fldenv
stos
xor
lcall
push
rolb
cmp
div
stos
pusha
imul
jle
push
adc
je
jl
and
fdivs
inc
shrl
daa
sbb
leave
push
test
out
not
rolb
and
or
inc
movb
mov
xor
mov
add
imul
push
js
aad
xchg
cwtl
mov
jno
sub
ret
clc
mov
pop
pop
bswap
or
das
inc
pop
dec
or
mov
xor
fs
insb
sahf
mov
nop
inc
sbb
xor
cmp
push
cld
cmp
and
jl
stc
ja
push
shll
int3
jno
xchg
pop
rcrl
popa
outsb
jno
mov
add
adc
xchg
lock
shlb
pop
add
sbb
jo
daa
jo
xchg
into
and
dec
in
lahf
mov
fcomps
cmp
rcll
dec
shrl
dec
out
and
in
sub
mov
repz
lahf
popa
aas
xchg
repnz
add
mov
inc
sbb
push
aad
inc
add
mov
push
movsb
cmp
and
ds
int
lods
cs
xchg
leave
mov
and
jo
push
add
or
add
call
jno
add
push
add
movl
sbb
inc
cmpsb
xlat
dec
push
mov
mov
mov
mov
ds
or
push
xchg
cmp
fnstenv
push
stos
outsl
callw
lds
adc
mov
into
jle
xchg
adc
popw
leave
shlb
push
dec
sub
popa
push
in
cmp
jl
xor
mov
adc
pop
or
mov
xchg
inc
std
jne
pusha
mov
cmp
sub
shrb
aad
mov
push
pop
pop
xor
add
adc
mov
pop
rclb
mov
pop
jp
adc
dec
negb
xchg
dec
aam
dec
inc
leave
pop
xor
or
nop
testb
sbb
mov
push
push
das
add
dec
and
add
bnd
add
cmpsb
das
jae
les
push
ret
mov
daa
mov
stc
pop
dec
int3
jge
out
or
sub
jno
and
popa
loope
mov
dec
push
pop
je
stos
out
push
test
mov
add
jno
hlt
push
rclb
loope
pusha
mov
mov
xor
aam
xor
es
xor
das
xorl
pop
or
fs
inc
mov
test
sub
push
push
jle
sub
mov
adc
out
cmpsl
fucomi
sti
mov
inc
dec
mov
sbb
test
inc
mov
inc
repnz
pop
insb
scas
leave
fdivr
in
jnp
lds
dec
pop
mov
sbb
mov
jnp
stc
cmpsb
dec
rorb
inc
in
pop
xchg
les
jl
dec
sbb
mov
cmp
mov
xchg
lea
or
pop
test
mov
adc
test
push
mov
lret
xchg
xchg
lcall
sub
or
les
mull
and
jbe
jp
push
cmp
lock
outsl
clc
rol
cmpsl
jecxz
jno
inc
dec
scas
xchg
dec
push
out
test
jmp
push
std
push
and
and
int
mov
mov
rolb
ror
rcrl
not
or
mov
and
repz
dec
mov
out
sbb
aam
fsubr
xlat
call
loope
cmp
clc
xor
imul
and
fcompl
pop
mov
sbb
or
jae
sub
dec
push
in
stos
add
xchg
test
pusha
gs
and
negb
adc
repnz
ffreep
ret
dec
mov
scas
or
cmc
cmp
xchg
stc
jmp
mov
les
pop
das
pop
mov
and
push
mov
xchg
dec
or
in
pop
fnstenv
mov
outsb
pop
add
jnp
outsl
mov
mov
push
xchg
fnstenv
or
xchg
dec
adc
aaa
jae
lods
ret
shll
fcoms
packuswb
fistpl
notl
sbb
aad
shll
add
and
daa
sahf
bound
cmpl
xor
adc
fcompl
daa
xchg
mov
enter
lods
out
pushl
adc
mov
je
rorl
sbb
popa
mov
les
mov
sbb
add
xor
or
test
sbb
cmpl
popf
pop
addb
icebp
mov
mov
xlat
sahf
mov
dec
lock
mov
xchg
cli
cmp
in
add
inc
inc
je
aas
lcall
pusha
daa
ljmp
jge
inc
jbe
mov
mov
sti
aad
dec
dec
adc
push
jge
in
jle
imul
int3
mov
jns
fsts
insl
stc
inc
in
out
sbb
pop
or
ds
repz
shll
lahf
imul
pop
cli
xor
pop
std
pop
jmp
ret
insb
pop
addb
cs
adc
pop
push
pop
xchg
jl
jg
pop
xchg
and
inc
rclb
fcmovnb
adc
stos
push
outsl
sahf
mov
jle
push
mov
dec
inc
mov
mov
inc
scas
mov
push
sub
jns
out
jae
mov
mov
flds
mov
sub
adc
mov
sbb
repnz
xor
pop
loope
xchg
icebp
jb
orl
ficompl
daa
cmp
jne
jle
add
fdivrs
test
inc
xchg
mov
iret
cli
sahf
jle
and
mov
stc
and
icebp
out
lea
xor
movsb
rorb
mov
inc
hlt
dec
mov
mov
mov
faddl
dec
and
iret
jle
jmp
or
aam
mov
nop
cmp
dec
ss
xchg
stos
popf
test
xchg
lcall
aad
mov
mov
pop
jno
pop
xor
and
sub
push
shlb
rcll
das
lcall
aam
out
dec
ficompl
sub
sbb
cmp
cmpsl
add
sub
fsubs
mov
jae
je
mov
cmp
sbb
pushf
adc
and
es
dec
repz
adc
mov
clc
push
jae
test
jl
add
sbb
adc
mov
mov
sahf
pop
inc
or
sar
adc
lock
jle
loopnew
cld
pop
scas
adc
pusha
fwait
xchg
incl
pushf
sub
std
cmp
scas
ljmp
lods
mov
outsb
movsb
sbb
jl
cmpl
mov
lret
xchg
push
pop
shrl
or
jecxz
add
xchg
sarb
rorb
xchg
aas
sub
pushf
jl
sbb
outsl
and
xchg
pop
dec
aas
push
addb
cmpl
scas
mov
push
test
mov
fistl
adc
add
sbb
mov
cld
mov
mov
jl
adc
dec
jnp
je
ret
jge
leave
pop
arpl
push
pop
insl
mov
sbb
jg
int
mov
sbb
adc
inc
mov
mov
and
movsl
mov
xor
outsl
js
sbb
sub
mov
xlat
rorb
mov
jmp
fsubrl
pop
jno
test
das
inc
cmp
call
push
dec
scas
jo
int
cmc
addr16
and
push
popa
xlat
dec
je
or
mov
adc
cmp
ret
fs
mov
test
test
xor
push
jne
dec
sub
das
ss
cmpsb
push
in
jno
int
push
jno
sbb
pop
lea
jge
add
jl
jle
loop
pop
loope
insl
loop
mov
shr
out
cmp
mov
pop
sub
stos
xchg
roll
shrl
inc
cld
out
mov
aam
mov
cld
insl
mov
in
mov
inc
ljmp
ds
ret
or
insb
inc
scas
xorps
mov
mov
addl
push
arpl
addb
cmp
shl
cmpsl
and
pusha
repnz
mov
cmpsl
es
inc
adc
cmp
adc
les
or
repnz
shrb
push
ljmp
arpl
pusha
sub
fsubs
cmpsb
xchg
dec
sub
inc
ficoml
jle
out
add
mov
pop
je
ret
pop
sub
out
lcall
popa
xor
push
cld
and
jb
cmp
mov
rorb
mov
add
mov
js
jno
std
int3
outsb
scas
mov
pop
sub
test
fmul
icebp
dec
and
mov
sub
ja
mov
pop
addr16
push
push
call
sahf
mov
adc
out
mov
loope
ljmp
mov
cmp
sbb
pop
insb
pop
lret
sbb
pop
bound
fidivs
call
mov
xorl
call
repnz
test
push
sub
dec
mov
push
xchg
push
fldcw
sub
loop
adc
testb
jle
test
jnp
jb
push
popa
cmp
pop
jmp
rcrb
cmpsb
das
mov
add
cmp
add
sub
aad
cld
bound
jmp
push
dec
mov
xchg
sub
in
xlat
mov
mov
enter
pop
or
sub
lds
loopne
inc
repnz
inc
adc
in
jmp
ss
pinsrw
popf
ret
out
test
adc
cwtl
sbb
add
sub
jp
and
repnz
dec
aad
int3
pushl
xor
lea
inc
fwait
mov
jno
xor
or
jge
pop
fxch
cmpsl
xchg
inc
int
pop
faddl
xor
out
dec
xchg
fcomip
mov
adc
push
loop
sbb
jbe
idivl
mov
ja
cld
mov
inc
movsb
movsb
mov
sub
sub
lock
xor
jg
sub
aad
in
into
xor
rcrb
mov
int3
stos
cli
push
outsl
xchg
mov
sbb
xor
ret
xor
bound
inc
xchg
je
or
sub
cs
lret
mov
loop
and
fucomi
cmp
call
mov
adc
jns
inc
rcl
xchg
shrl
add
xor
push
enter
rol
std
cs
clc
mov
dec
gs
hlt
or
mov
pop
adc
enter
psubsb
mov
adcb
cmpsl
dec
cmp
adc
mov
cmp
stc
or
mov
add
mov
dec
xchg
mov
and
loopne
jnp
xlat
cmpsl
mov
fistps
arpl
xchg
sbb
push
xchg
mov
stc
mov
jae
ret
insl
stos
xchg
aam
or
xchg
dec
xlat
ds
or
std
mov
sub
fwait
ja
movsb
lods
mov
mov
mov
mov
aas
xor
mov
mov
jp
in
push
pusha
jbe
clc
push
or
jge
and
and
mov
mov
inc
cmpsb
sbb
jmp
fiaddl
into
push
iret
mov
stos
pop
pop
in
dec
lods
sub
fdivs
and
icebp
jge
fisttps
push
cmc
ror
vandps
sti
aam
or
cmp
outsl
ja
sbb
adc
mov
and
mov
pop
add
sbb
nop
decb
ss
fisubl
icebp
push
mov
into
cmp
sarb
subb
aaa
mov
push
pop
test
mov
or
mov
in
ret
sahf
jno
jp
repz
xchg
loop
lahf
jns
jecxz
dec
or
xchg
shl
xor
call
je
cmp
test
and
dec
ds
jno
push
popa
dec
test
add
cmp
sbb
xchg
ret
aam
xlat
sub
xchg
lods
xorl
dec
in
push
orb
fstp
xlat
add
lea
insb
sub
fistps
add
imul
mov
cmp
add
adc
lods
int3
es
lret
mov
mov
pop
inc
daa
notb
cmp
jno
add
xchg
add
fdivrs
xchg
cmp
fistps
sbb
add
in
mov
cmp
shr
mov
es
in
pop
push
cmpb
cmp
and
lahf
mov
jecxz
push
fucomip
sbb
lods
and
icebp
xor
fldenv
ficoml
mov
pop
push
sti
mov
pop
imul
xchg
pcmpgtb
lret
xor
movsb
out
es
pop
and
mov
xor
and
decl
cmpb
les
xchg
adc
imul
lret
fimull
test
sbb
nop
loop
mov
sub
jp
repnz
sbb
enter
not
or
bound
repz
sbb
loop
out
jle
mov
sbb
xlat
cmc
add
mull
or
mov
or
or
mov
imul
inc
cmp
nop
push
ja
and
stc
inc
pop
mov
adc
mov
xor
sub
lret
sub
shl
pusha
loope
fs
sub
imul
mov
test
dec
push
bound
dec
jg
shlb
xor
repnz
loop
mov
daa
nop
sub
and
js
je
cmp
mov
pop
mov
in
dec
das
mov
sub
mov
repz
jp
bound
cli
js
sbb
jo
xchg
and
or
cmpsb
fcmovnb
push
fdiv
loopne
pop
mov
cmpsl
inc
int
bound
loopne
stos
and
add
adc
icebp
push
mov
mov
jge
mov
xlat
leave
push
push
dec
cmp
jl
les
clc
dec
pop
icebp
cmp
decl
push
add
shlb
rcll
ja
inc
cmp
jae
mov
outsl
lret
jp
jge
xor
jne
les
sub
test
ja
es
lret
xchg
push
cmp
test
out
xor
mov
repz
xchg
sbb
test
inc
jl
test
ret
mov
xchg
movsb
dec
push
and
push
sbb
sbb
dec
sub
add
addl
movsl
stos
jb
xchg
pop
jns
mov
cmpsl
dec
push
cltd
lods
or
shll
scas
ss
and
andb
and
or
in
jnp
loope
pop
fimuls
mov
pop
push
or
mov
and
pminub
xor
inc
test
mov
ja
jle
fistl
mov
aam
dec
cmpsl
xor
mov
xor
fisubrl
notl
aas
out
xchg
cmp
mov
aas
cmp
xor
int
std
inc
test
popf
out
das
les
xchg
inc
sub
mov
push
int
adc
xchg
xor
fildll
aas
lods
dec
cld
sub
mov
sub
dec
mov
ds
push
mov
ret
and
adc
push
enter
fdivrl
les
rep
js
test
sarl
xchg
and
dec
pop
aad
fsubl
es
ror
sub
out
scas
ret
xchg
in
ja
jns
insl
std
in
inc
or
aaa
sti
inc
inc
cmovg
jmp
movl
into
es
mov
subb
outsb
adc
fldcw
push
cmp
adc
jge
inc
xchg
pusha
pushf
push
cmp
add
inc
notb
filds
dec
mov
xchg
mov
fcoml
push
mov
aaa
adc
jae
adc
adc
jp
mov
jp
in
jnp
lods
cmpb
rcl
fiadds
push
cmp
leave
cmpsb
pop
mov
into
das
xchg
xor
shll
loop
addl
sbb
divb
rolb
ss
mov
jecxz
xor
push
jnp
or
fimuls
push
pop
stc
fs
jne
int3
repnz
pushf
add
rcl
lcall
xchg
sub
mov
addl
cmc
sbb
fstl
add
xchg
movsb
out
xor
add
jne
inc
mov
mov
or
leave
aam
xchg
insl
jmp
popl
push
cmpsb
sub
ret
jno
jmp
cwtl
lahf
xor
adc
sbb
add
cmp
pusha
out
mov
inc
stos
test
les
leave
std
xor
cmp
lea
and
repnz
imul
inc
push
sub
pop
dec
mov
adc
xlat
scas
scas
addl
popf
add
xor
sub
inc
lea
das
xor
cli
insl
addr16
push
add
ret
in
mov
sub
xlat
cmc
test
pop
adc
hlt
pop
push
les
mov
cmpb
push
jo
pop
ret
aas
adc
mov
mov
shrl
jno
xorb
jle
rclb
sbb
addl
cmp
mov
std
punpcklwd
mov
pop
or
cwtl
in
add
ret
sti
push
leave
testb
pushf
mov
mov
rcrb
call
std
jns
ja
in
xchg
rol
js
cmp
add
adc
mov
mov
aam
or
int3
stos
xchg
add
jbe
jne
stos
ret
das
dec
mov
mov
sti
push
ficoml
mov
jns
inc
dec
push
lods
add
xor
cmp
push
mov
xor
insl
data16
mov
lock
jecxz
or
data16
addr16
xchg
aad
cmpl
sub
sbb
cmpb
push
or
in
lcall
inc
xchg
mov
fs
fldenv
jge
and
mov
sub
add
ds
push
mov
xor
out
mov
mov
rclb
or
cmp
aam
mov
loope
inc
mov
fistpl
pop
adc
enter
sbb
pop
adc
and
xchg
rorb
movsl
jno
addr16
xlat
scas
sbb
cmp
pop
ja
mov
dec
push
jno
add
pop
stos
cmp
cmp
xchg
dec
mov
mov
xchg
cld
dec
push
xchg
mov
outsl
loop
dec
bound
dec
clc
movsb
jmp
dec
mov
push
ficoms
pop
push
jge
mov
jmp
jg
dec
cs
or
push
xchg
pop
pop
ret
out
sbb
fisubl
iret
adc
repnz
je
dec
dec
lock
loop
mov
cld
and
dec
rcrb
or
dec
fsubl
xchg
cwtl
cld
xchg
sub
into
or
sbb
adc
call
mov
xchg
nop
sub
mov
sub
aam
sahf
xor
and
loope
fwait
testl
movsl
ret
jmp
sbb
mov
and
subb
pop
ljmp
xor
xchg
shll
flds
or
sub
je
filds
xchg
pushf
mov
orl
ds
in
push
out
stos
pusha
push
jge
jl
xchg
addr16
pushf
jae
lcall
aaa
mov
inc
fidivrs
sub
or
movsl
xor
arpl
push
in
xchg
sbb
repnz
mov
mov
sbb
aas
add
pop
enter
scas
pop
pop
dec
add
xlat
fs
xor
adc
mov
and
out
out
rcrl
idivb
jp
test
push
in
addb
ret
and
ljmp
ja
lcall
adcl
pop
cli
mov
notb
sub
adc
pop
mov
idivl
mov
add
imul
fiadds
stos
and
test
adc
lock
arpl
mov
cmp
je
cmc
imul
cmpsl
fbld
cmp
xor
sub
addb
jp
inc
nop
xchg
cs
insl
or
aas
adc
call
ljmp
mov
mov
mov
nop
pop
clc
mov
mov
xchg
add
sahf
and
pop
pop
orl
mov
mov
je
cmp
mov
and
sbb
aas
or
adc
add
les
fidivrs
test
sbb
cltd
sub
inc
xchg
rorl
das
adc
stos
fstl
xchg
dec
pushf
jmp
mov
rcrl
push
push
loope
sahf
out
push
xor
mov
shl
push
xchg
pop
insl
adc
sbb
mov
pop
add
dec
sub
dec
or
cmp
inc
or
mov
stos
xlat
mov
pop
and
ss
popf
pusha
jb
sub
push
lock
loop
add
jns
mov
mov
pop
mov
lcall
fsts
cli
cmpsb
pusha
andl
cmp
mov
push
jmp
loopne
repnz
bound
add
sub
popf
in
fisttps
xchg
or
mov
sahf
dec
shll
push
push
adc
out
mov
iret
stos
mov
stos
cli
and
cmp
leave
shl
xchg
sub
aam
hlt
inc
mov
aad
or
mov
push
testl
cmpsl
fstps
fimuls
imulb
mov
jg
dec
sarl
jmp
add
mul
adc
je
jno
adc
dec
test
das
pop
xor
bound
adc
mov
jecxz
popa
lds
inc
cmp
negl
popf
fwait
outsb
jp
push
in
mov
or
and
fs
sbb
sbb
and
push
rclb
jmp
mov
leave
dec
imul
int3
and
popa
or
cmp
mov
mov
xlat
and
sahf
addr16
inc
add
mov
negl
ficomps
shl
mov
pop
mov
repnz
scas
xor
outsl
push
aad
js
imul
pop
mov
dec
xchg
in
sub
out
xchg
test
arpl
or
enter
mov
xor
dec
sbb
in
fcmovnu
mov
dec
daa
leave
sub
push
mov
fcmovnbe
cld
adc
out
stc
pop
pop
lods
sbb
jmp
pop
in
push
pop
xchg
and
push
pop
or
jnp
lea
mov
push
sub
sub
aad
mov
xlat
insb
hlt
mov
sub
es
cwtl
insb
je
jge
les
mov
push
sub
gs
inc
xchg
jo
dec
dec
nop
je
jb
jge
mov
inc
and
cmpsb
mov
enter
or
insl
leave
add
sarb
fmuls
adc
mov
pop
sahf
mov
mov
mov
pusha
addb
mov
jae
outsl
mov
inc
mov
jle
sub
mov
clc
testb
rorl
or
ljmp
cmp
pop
out
rcl
andb
test
add
jo
gs
dec
mov
cmp
gs
outsl
cs
scas
stc
or
pop
loope
ljmp
sub
sahf
icebp
mov
insb
sbb
icebp
mov
popf
in
cld
sub
icebp
mov
sub
xchg
xor
fsubr
pop
sub
pop
fistps
sbb
loope
adc
cmp
stos
loope
clc
mov
pop
pop
test
push
xor
jle
jno
fildl
or
inc
aad
push
mov
lret
outsl
dec
sahf
add
movsl
xchg
int
pminub
in
push
lock
sbb
jae
int
out
xor
sbb
addr16
out
mov
notb
mov
dec
dec
pusha
in
outsb
inc
push
test
add
add
mov
out
lret
aam
gs
test
cltd
jecxz
cmp
and
mov
or
icebp
xchg
push
dec
fisubrl
ljmp
pop
cmp
xchg
es
stc
in
dec
inc
add
pop
gs
aaa
sti
pop
push
pop
mov
xchg
mov
mov
mov
movntq
adc
dec
xor
cmpsb
mov
cmp
and
rolb
xor
jb
jecxz
push
or
push
jns
cs
sub
cmpl
out
lcall
and
pop
repz
stos
pop
cld
addb
adc
rol
psrad
mov
inc
aam
mov
lods
dec
sub
jo
scas
shrl
mov
add
add
xor
fmull
add
ret
pop
int
mov
in
addb
pop
imul
jge
sbb
stos
cmp
fnop
inc
rorl
pop
gs
adc
pop
push
jecxz
out
xor
mov
or
in
bsr
dec
push
lods
lods
mov
pop
mov
or
rorl
bound
add
pusha
mov
lret
test
lret
adc
and
mov
xor
idivb
fildl
jg
add
lea
movsl
or
wrmsr
push
mov
lea
pop
cli
pop
fisubl
sbb
cmpsl
mov
movsl
in
movsl
xchg
movsl
int
addr16
jnp
adc
mov
sub
jno
in
xlat
mov
mov
je
cltd
mov
push
cmp
push
test
shrl
cmp
ja
inc
xor
cltd
sbb
subl
sahf
icebp
pop
push
mov
fs
xchg
cmp
pop
adc
push
mov
mov
test
pushf
test
sbb
mov
or
push
outsb
stos
dec
sub
divl
dec
loop
adc
jecxz
adc
pop
or
ret
int
fisttps
cltd
jp
cmc
adc
dec
pop
mov
xchg
imul
cmp
out
enter
test
out
dec
xor
sub
stos
sbb
outsb
mov
mov
lret
push
shr
cmp
stos
into
arpl
xor
adc
test
fwait
push
and
adc
inc
sub
xchg
rclb
les
mov
jno
mov
int
sbb
mov
frndint
mov
cmc
sbb
popf
lods
push
dec
pushf
jp
ljmp
sbb
mov
push
and
pop
outsl
pop
push
fs
fstl
aam
int3
push
push
imul
mov
fwait
mov
dec
stos
push
int
popf
aam
bound
xorb
mulb
mov
fld
ss
dec
fcompl
xor
loop
ret
sarb
xorl
or
fidivrs
xchg
loopne
or
xchg
sbb
jmp
in
mov
test
movb
scas
lds
fisttpl
dec
test
cwtl
and
jo
in
not
mov
push
loope
or
push
ficoml
and
dec
push
jle
and
dec
in
mov
sub
leave
adc
in
xchg
or
popa
aas
and
jg
add
jp
fldt
push
cmc
mov
push
mov
stos
and
sarb
shl
jl
xchg
es
xchg
div
mov
daa
sbbb
aaa
lret
xor
or
push
in
js
fdivp
pop
sbb
cli
daa
xor
or
mov
dec
adcb
rcr
out
into
in
xor
jg
and
cmp
xchg
pop
and
mov
mov
cmp
std
daa
jmp
jnp
sbb
inc
into
test
aad
out
pusha
jne
fptan
ss
dec
frstor
testb
dec
xchg
fdivrs
shlb
sahf
xchg
loopne
mov
mov
mov
inc
mov
fs
xor
mov
xchg
popf
les
es
testl
stos
mov
jl
inc
cmp
pop
push
insl
jle
push
lahf
inc
shr
shll
pop
cs
cs
je
mov
insl
xor
xchg
push
rol
lds
pop
outsl
lret
jo
scas
inc
and
sub
insl
out
shlb
jb
lods
jbe
sarl
jl
ficoms
mov
hlt
pusha
pop
xor
xchg
insb
ficomps
lock
fsts
ds
sub
pop
and
lods
mov
mov
add
jg
fs
out
xchg
adc
aas
lea
xor
lods
hlt
jl
pop
sbb
dec
ret
gs
push
or
gs
dec
cmc
fsubrp
jnp
sbb
push
xor
ljmp
mov
push
repz
pop
mov
push
addr16
leave
xchg
sub
xchg
or
in
push
add
lret
xchg
adc
jge
pop
xor
xchg
enter
repnz
sahf
jb
dec
or
cmpsl
sub
mov
mov
clc
jg
ret
lock
add
imulb
mov
inc
mov
mov
add
lea
adc
mov
dec
addl
fisubrl
clc
out
push
xchg
cs
ret
shlb
scas
dec
clc
push
xchg
into
mov
xorl
out
sbb
lret
dec
pop
orl
scas
xor
jo
popa
mov
xchg
call
xor
call
lds
xchg
inc
pusha
mov
test
add
mov
test
ret
cmp
rorb
mov
push
aaa
imul
outsb
lret
dec
jmp
cmc
mov
push
xchg
cltd
add
test
jmp
jp
xor
jl
icebp
jnp
push
xchg
test
xchg
jg
mov
xchg
add
imulb
lea
addr16
push
jbe
pop
fldl
lret
es
pop
fisttpll
mov
and
rorb
lret
loopne
fnstsw
inc
sahf
jb
pop
or
pop
jmp
add
cs
jecxz
pop
sub
rol
idivl
adc
cmc
or
adc
ret
push
cli
adcl
leave
fwait
hlt
pop
push
mov
insl
sbb
pop
push
inc
sti
ror
dec
mov
cltd
out
adc
add
out
int
fnstcw
enter
rclb
cmc
lahf
push
xchg
push
pop
dec
add
adc
call
pop
push
jae
lods
push
lods
jge
xchg
inc
lret
or
test
and
testl
or
rcll
out
ret
mov
shr
loop
arpl
pop
sbb
xor
mov
lods
arpl
cmp
aaa
subl
inc
punpcklwd
fsubr
and
cmp
or
jp
sbb
cmp
das
bound
mov
out
loopne
fbld
adc
sbb
out
lahf
push
mov
jge
or
fwait
pop
lcall
loop
sarl
lds
adc
mov
xchg
mov
fistpll
or
testl
mov
xchg
and
ret
outsl
incb
sub
pop
cmp
cmpb
cmp
imul
inc
jle
pmulhw
imul
add
mov
lods
mov
divb
xchg
mov
push
rcrl
dec
lods
jp
push
jl
push
ss
lock
mov
mov
adc
shll
lods
cld
push
stos
imul
adc
pop
or
sbb
popf
push
sub
lods
not
js
mov
je
mov
andl
jge
xor
sub
and
xchg
add
clc
imul
ret
xchg
jle
dec
adc
test
push
lret
das
cmp
xchg
lcall
cli
roll
inc
jg
loop
testl
jl
mov
push
out
xchg
push
mov
in
jno
lock
shll
jnp
test
orb
add
insb
subl
je
punpcklbw
xchg
test
dec
xchg
inc
stos
popf
jge
je
and
mov
shl
pop
pop
hlt
inc
mov
push
pusha
and
lods
mov
ja
cwtl
mov
inc
js
and
adc
rcrb
int
push
xchg
jne
int
mov
lret
xor
pop
clc
btc
imul
call
sub
repnz
pop
lea
in
inc
ffreep
std
movsl
push
lret
in
jge
jne
mov
mov
in
and
xor
jnp
into
sub
jo
lahf
mov
cld
aad
pop
popf
in
sbb
outsl
cwtl
push
int
data16
sub
sub
ja
leave
dec
cmp
add
mov
incl
call
arpl
int3
sub
out
jae
jb
inc
add
adc
fisubrs
lock
xchg
shrb
mov
pop
jno
lcall
pop
cmp
add
fcomi
pushw
movsb
in
inc
adc
xchg
jmp
or
into
xor
mov
or
xor
mov
lcall
dec
jnp
mov
cs
xchg
mov
sbb
dec
insb
cmp
mov
pusha
pushl
push
mov
dec
fiadds
mov
dec
mov
pushf
rorb
jecxz
push
mov
ret
sbb
mov
xor
fstpl
mov
xor
mov
das
sub
ret
mov
cmpsl
cmc
dec
insb
jecxz
scas
xor
sbb
fisttpll
or
xchg
sahf
push
pop
test
icebp
leave
fnstsw
sbb
or
aad
xchg
sub
jae
xchg
and
jne
pop
cmp
lock
cli
and
stos
mov
bound
ret
lahf
dec
repnz
or
rcrb
pop
xlat
out
mov
cmp
xchg
fistpl
mov
lods
iret
adc
shl
mov
je
fisubrl
xor
add
es
mov
int
xor
cld
push
add
mov
fsubrs
hlt
pop
lock
sahf
and
cmpsl
inc
lock
out
xchg
pusha
dec
popa
scas
fnstcw
and
mov
cli
pop
loope
dec
inc
rclb
inc
lds
cmp
into
sub
sub
adcl
inc
nop
mov
jl
add
push
jp
pop
or
add
ret
arpl
movsb
pop
or
jge
xchg
cmpsl
jecxz
shrb
and
jmp
push
inc
movsl
mov
jmp
dec
mov
adc
fmull
xorb
movsb
or
rolb
into
out
decl
aam
cmpsb
mov
add
mov
pusha
test
add
xchg
subb
fimull
enter
push
push
jnp
out
test
stc
add
jg
rclb
lods
add
repz
or
aad
lea
iret
xchg
lret
and
repz
mov
sbb
movsb
test
cmp
fnstenv
mov
xchg
adc
lods
popf
mov
scas
in
jg
stos
xchg
jb
jb
stos
sbb
lahf
lds
std
or
push
repz
popf
xchg
add
xchg
push
mov
jmp
imul
fidivrl
xchg
and
jno
or
push
movsl
cmp
movsb
ficompl
jnp
and
leave
cwtl
test
mov
ljmp
lods
sahf
and
pusha
fisttps
sub
fidivrs
jns
xchg
iret
in
in
bound
les
orb
out
mov
sub
mov
fsubl
mov
mov
mov
mov
enter
notl
sbb
test
stc
js
sub
push
push
lds
cmpl
pop
in
inc
sbb
inc
xlat
jbe
mov
jecxz
movsb
inc
aam
adc
fistps
aam
test
sub
mov
out
push
cmp
popf
mov
add
or
je
push
lock
push
cwtl
pop
leave
xor
or
test
xorb
mov
jecxz
mov
xchg
stc
adc
movsb
cli
add
sahf
push
lret
stos
jmp
push
pop
jb
ret
lock
push
cmc
in
pop
push
lahf
mov
xor
dec
cltd
fs
add
dec
sti
ret
adc
outsb
dec
lods
xchg
mov
adc
xor
push
mov
popf
lret
pop
std
jne
cld
fdivrl
adc
xchg
push
push
mov
js
push
and
dec
cmp
sub
or
mov
dec
pop
adc
adc
int
mov
sbb
adc
xor
sub
test
scas
popa
das
inc
pop
cmp
hlt
fcmovu
gs
sbb
mov
fcmove
inc
mov
push
mov
dec
arpl
data16
or
cwtl
jle
outsb
fsts
fcoml
lods
jp
and
lret
add
and
stc
arpl
test
and
inc
and
push
push
sub
dec
add
adc
mov
mov
stc
loop
hlt
call
mov
popa
cmp
dec
mov
sarl
xchg
lods
jae
cli
xlat
sub
rcrb
fisubs
sub
xchg
aam
xchg
dec
ss
add
jns
daa
jecxz
in
add
mov
ss
jge
fistl
xchg
sarl
add
int
mov
fiaddl
pop
pop
add
push
popf
push
pusha
daa
rolb
or
insb
imul
and
das
adc
stos
insb
pop
imul
loop
jg
js
pop
sbb
jge
cwtl
xchg
in
xor
imul
in
daa
mov
push
fbld
inc
out
sub
fs
adc
mov
push
lcall
pop
lcall
aaa
cltd
ds
xlat
test
loop
jnp,pt
dec
xor
mov
xor
cmpsb
xchg
stos
fwait
ret
shlb
pop
cs
push
addl
roll
and
mov
mov
in
adc
jge
inc
imul
sbb
sbb
loope
mov
and
cmpsl
lcall
mov
test
adc
jo
movsl
pcmpeqw
xorb
mov
jno
mov
jb
ds
ds
adc
fwait
lds
insb
pop
pop
ficoms
int3
lahf
jecxz
push
add
jge
fcompl
xchg
loop
jns
jle
push
repnz
mov
scas
push
mov
cs
lcall
sub
fnstenv
xchg
inc
arpl
into
or
sbb
enter
mov
add
push
and
test
sahf
adc
jnp
je
push
mov
mov
mov
add
mov
or
jge
push
jbe
js
out
dec
pop
push
mov
popa
sar
ss
enter
stc
or
lods
or
jbe
and
add
out
jnp
and
movsb
cmp
pop
out
xor
dec
xor
lods
pop
popf
push
int
push
mov
fwait
lods
mov
push
sub
mov
jg
and
fcmovb
mov
adc
insl
or
iret
fnstenv
push
dec
or
hlt
xor
fsubs
cmp
mov
jl
ljmp
outsb
pushf
pop
jecxz
int
addl
mov
dec
sub
rcrl
dec
dec
push
xor
push
adc
xlat
adc
pop
pop
and
fldl2t
js
jge
mov
pop
daa
jmp
test
filds
lea
pop
mov
add
inc
jns
jo
movsb
jmp
rolb
dec
clc
xor
cld
call
inc
adc
and
int
add
inc
es
inc
dec
aad
inc
pop
xor
mov
out
xlat
movsb
and
mov
dec
xchg
lcall
push
push
and
mov
cld
test
popa
adc
mov
pusha
cmp
cmpsl
cli
xor
jae
xchg
out
repz
call
ds
pop
sahf
and
dec
sub
in
cli
mov
testl
xor
inc
cmc
or
test
mov
idiv
arpl
sub
test
push
sbb
and
cmp
data16
stos
fsubl
xor
rclb
add
int
inc
aam
xor
push
or
add
cs
mov
xor
and
lods
or
insl
xor
cmp
cld
icebp
jmp
std
adc
insl
out
push
ss
movsl
mov
popf
cmp
mov
sbb
mov
lcall
out
vpaddb
fimull
xchg
arpl
cld
jp
pop
jbe
mov
inc
lcall
repz
out
lret
cltd
aaa
mov
and
icebp
pop
jg
push
stos
aaa
clc
ret
xorl
rcrb
ficompl
sub
pop
lock
lcall
mov
js
mov
mov
add
pop
aam
hlt
scas
jno
mov
call
xchg
xor
sub
push
ret
mov
xor
hlt
sbb
sbb
shrb
push
ja
shl
idivb
jle
imul
cwtl
lods
out
mov
in
fwait
mov
inc
ljmp
sbb
xor
cmp
test
inc
stos
cmc
dec
add
sub
dec
inc
fidivrs
xchg
lds
sub
sbb
lds
mov
mov
jg
mov
sbb
sbb
push
and
daa
js
and
cmp
hlt
inc
outsl
jbe
dec
and
jg
rcll
ss
dec
xchg
notb
xor
test
ss
pop
cmp
jmp
adc
pop
adc
loopne
xor
sbbb
mov
xor
pop
nop
imul
decl
aaa
lahf
ret
std
fldt
push
xchg
stc
xchg
imul
or
mov
insl
pop
pop
adc
xchg
and
and
add
fisttpl
push
sbb
adc
mov
sar
xchg
fcom
mov
sub
movsl
lods
mov
rclb
dec
mov
jae
insl
roll
mov
jae
jne
xchg
into
nop
fcmovnb
sub
mov
insb
ss
ljmp
adc
and
popf
pop
xor
push
mov
outsb
jp
sub
xor
xlat
pop
cmp
or
push
push
xchg
and
add
dec
adc
jge
ds
jge
mov
inc
inc
shrl
pop
lea
icebp
pushf
push
outsl
call
push
iret
dec
dec
cmc
sbb
mov
sbb
sbb
aaa
int
dec
cmp
in
mov
xchg
and
rcrl
fs
sbb
pop
int3
inc
lret
mov
aas
cltd
into
mov
lahf
xor
adc
mov
sti
cwtl
and
outsl
sub
mov
or
sti
jmp
push
int
and
popa
ret
stos
mov
jg,pt
into
shrl
lret
mov
or
outsb
mov
mov
adc
or
inc
pop
fnstcw
or
push
es
daa
add
fimuls
outsl
fucomi
subb
lods
movsb
mov
jecxz
rcl
sub
adc
insl
int
cltd
outsb
pop
fimuls
xor
jmp
ljmp
push
notl
fstl
add
shll
mov
xchg
bound
mov
jnp
xchg
outsl
das
adc
add
pop
repz
xor
push
js
xor
ss
jge
out
pop
push
pusha
add
out
stc
scas
and
int3
insl
inc
mov
jo
cltd
adc
xchg
shrl
ret
fisttps
dec
jle
sbb
jecxz
cmp
and
cmp
rcll
jmp
cmp
jle
js
jo
jb
push
jb
ss
push
push
mov
sub
or
rcl
and
mov
imul
jnp
mov
pop
add
mov
lret
out
rcl
outsb
jp
xchg
ja
inc
add
in
fldl
clc
mov
testl
cmp
pop
xchg
add
or
pop
mov
dec
xchg
mov
addr16
leave
pop
sub
inc
sub
xchg
pop
push
stc
test
jecxz
fdivrp
out
mov
or
decb
out
pop
pop
les
add
mul
mov
adc
repz
dec
push
les
into
inc
popa
sub
xor
addl
lods
sahf
jbe
ret
mov
mov
push
mov
stos
mov
std
clc
mov
mov
xorb
lock
lds
pop
jmp
aam
sub
gs
fisttpl
jo
fs
aad
in
movsb
aam
popf
push
or
into
push
movsl
sbb
lock
lret
push
in
and
outsl
inc
xor
sub
daa
sub
cli
jg
sbb
mov
mov
imulb
out
adc
sub
jne
mov
xchg
push
je
xor
das
mov
adc
pop
add
cmp
xor
sub
outsl
pop
sbb
mov
les
mov
mov
dec
jge
or
jno
xchg
xchg
mov
mov
pop
rcrl
sbb
addr16
add
inc
fistpll
mov
add
or
inc
xor
sbb
inc
jno
jge
iret
mov
in
xchg
jg
test
nop
jo
add
mov
inc
pushf
adc
fisttpl
xor
lahf
push
fdivr
and
mov
adc
adc
push
sbb
mov
jle
pop
cmp
mov
stc
mov
pop
mov
jp
pop
out
aam
xor
dec
xchg
lcall
xor
mov
loope
into
gs
mov
inc
mov
xchg
mov
repz
pop
cwtl
xchg
mov
add
lahf
out
adc
sbb
aad
cmp
adc
jge
or
adc
adc
out
dec
mov
cwtl
dec
mov
mov
dec
js
outsl
jl
aam
arpl
and
loopne
aad
fnstsw
cmp
xchg
mov
and
jmp
xchg
cmp
imul
jbe
mov
mov
or
jg
push
or
call
cmp
xchg
add
rorl
cmp
ljmp
rol
repnz
ljmp
test
shll
xchg
cld
jp
pop
or
orb
mov
xchg
cli
std
pop
pusha
loopne
std
cmc
int
or
popf
insb
pop
nop
in
jo
add
fwait
dec
arpl
xchg
rol
adc
dec
leave
sbb
lods
sub
pop
subl
shlb
sbb
mov
mov
mov
xlat
sbb
insl
mov
pop
xchg
xor
sti
aaa
dec
jns
mov
ret
test
mov
bound
cmp
xlat
jbe
jle
or
fnstsw
rol
ja
xchg
mov
clc
xlat
lret
movsb
sahf
add
fldlg2
jmp
popf
fdivs
ss
inc
push
mov
jbe
dec
popf
cltd
fimull
inc
out
mov
push
mov
mov
sub
nop
xchg
jae
inc
sahf
subb
fwait
adc
pop
add
or
pop
push
sub
cmpsl
cmp
push
fidivrs
stos
arpl
cltd
test
stc
js
xorb
gs
lret
push
out
and
xchg
in
int3
test
mov
push
lods
int
cmp
out
in
aas
nop
jge
addb
ljmp
lea
sti
sub
push
movb
jno
adc
xchg
jp
mov
jge
pop
ss
sub
mov
rol
popa
jne
pop
xor
push
inc
push
pop
insb
int3
mov
cmpsl
insl
fdivrs
xor
jns
loopne
popf
inc
mov
xchg
sbbl
mov
lock
xchg
lahf
cmpsl
mov
mov
mov
int3
xchg
mov
pop
or
stos
mov
sub
xchg
rorb
jo
push
cmp
stc
xor
xchg
push
push
xor
in
jge
pop
outsb
test
add
cmc
shr
lds
cltd
inc
xchg
popf
rcrl
adc
sbb
xorb
lock
jns
and
lods
xchg
mov
push
sub
aas
dec
ficompl
cmp
and
and
pop
cli
lock
or
inc
pusha
or
inc
jp
cltd
test
movsb
xchg
pop
push
or
xchg
or
cmp
test
je
xrelease
fprem1
mov
adc
push
inc
mov
loop
cmc
outsl
mov
cmp
push
or
jp
aas
fiaddl
fsubp
dec
lds
pop
sub
dec
imul
sub
es
rcll
pop
cmpsb
scas
xor
add
jmp
aad
adc
sbbl
lahf
xchg
pinsrw
mov
push
std
and
sub
or
negl
daa
push
in
ret
mov
jnp
test
sbb
inc
inc
jno
lea
mov
inc
loop
out
sub
rorb
pop
sub
add
adc
fsubrs
or
inc
jae
inc
add
movsl
jle
shr
add
push
xchg
mov
in
jmp
into
mov
push
mov
imulb
xor
adc
ret
pusha
inc
adc
and
mov
adc
int3
add
mov
add
aad
test
jg
lods
lcall
sbb
add
pushf
dec
movsb
mov
lods
fdivrs
call
fwait
jle
inc
and
andl
outsl
sub
jns
fwait
dec
test
mov
xchg
adc
add
mov
test
lods
adc
xchg
add
pop
insb
pop
push
inc
mov
in
push
sub
pop
and
in
pop
ret
shll
add
sahf
push
mov
cmp
pop
adc
addr16
call
push
insb
imul
out
imul
push
xor
jne
popa
lret
add
scas
lock
and
popf
loope
cmp
lcall
xchg
aaa
es
nop
lea
cmpsb
add
outsl
fdivrp
mov
repnz
sub
xchg
fcoms
test
loope
xor
pushf
aas
mov
ficoms
jp
aad
bound
mov
ret
mov
or
testl
cmc
adc
popa
jmp
lea
push
push
sbb
stos
pop
pusha
xchg
mov
cltd
bound
mov
or
mov
popa
jne
in
cmp
sub
test
stos
pop
cmp
rcr
rol
jle
xchg
pop
cli
xlat
adc
repnz
mov
pop
fs
sbb
xchg
pusha
ret
xlat
xchg
jmp
ljmp
xlat
mov
mov
sub
pop
jne
std
sbb
dec
mov
into
sbb
roll
les
in
jbe
cmp
test
jp
fdivl
cmp
dec
ret
jecxz
adc
stc
scas
or
sub
aas
pop
cmc
or
into
test
pop
mov
xchg
cmp
into
inc
orl
mov
int
jge
jg
fadds
sbb
shlb
popf
adc
pop
unpcklps
sti
mov
sbb
fdivrs
cs
xor
mov
enter
es
mov
es
mov
jb
sbb
in
mov
xor
ja
mov
fisttpl
mov
lods
push
cld
pop
pop
dec
adc
add
pusha
popa
imul
mov
xorb
add
fsubs
mov
mov
lret
sub
or
jae
popa
push
inc
scas
mov
je
inc
push
cli
std
xchg
out
shll
add
xchg
sbb
stos
sbb
and
xor
pop
push
mov
inc
cmpsb
mov
inc
xchg
mov
bnd
aam
inc
rcl
frstor
xchg
jnp
cwtl
lcall
and
cmc
mov
addr16
insb
sbb
leave
and
mov
fnstsw
and
mov
xor
dec
jnp
adc
inc
imull
popl
xchg
xchg
mov
push
js
fwait
stos
push
aad
mov
add
mov
adc
or
cmpsb
cmp
pop
jae
or
int
inc
iret
add
testb
xchg
rcrl
lea
xor
sarl
sbb
sti
dec
adc
mov
sahf
and
xor
aad
dec
sub
cmp
inc
pop
fistpl
mov
jns
or
in
mov
sub
shlb
je
jp
push
adc
aas
testl
hlt
cmp
outsb
xor
mov
xor
lock
push
fwait
insb
mov
fildll
push
add
call
xor
es
imul
iret
cmc
outsl
dec
das
inc
sbb
scas
jb
cmp
cmc
out
test
jge
test
sub
pop
fwait
pusha
sub
cmp
push
mov
pop
movsl
mov
or
lods
jp
sahf
mov
mov
lea
push
ficoml
fdiv
or
dec
mov
lret
fstps
push
mov
push
inc
jo
loope
sbb
movsb
xchg
std
testl
lods
jmp
xlat
mov
pushf
xchg
insl
in
and
push
ret
outsb
xchg
cmp
cwtl
add
inc
ret
out
dec
mov
enter
popf
in
dec
jbe
jg
popa
or
loopne
cmp
sub
xor
call
lods
insl
push
mov
xlat
orl
adc
insb
fisubs
add
inc
mov
mov
sub
stos
mov
stos
mov
pop
xor
or
dec
insl
mov
xchg
out
and
inc
mov
and
xlat
fstl
dec
scas
push
adc
loop
mov
sbb
ret
inc
sub
push
loope
out
fwait
mov
out
dec
sbb
push
imul
movsl
loop
dec
mov
out
add
push
mov
fcoml
xlat
and
test
lock
icebp
nop
icebp
movsb
or
in
leave
mov
iret
push
mov
fs
cmp
sbb
repnz
push
and
repz
jp
adc
xchg
push
adc
lahf
pop
xchg
dec
pop
insb
mov
out
lret
iret
jae
pop
movsb
mov
jl
lcall
into
adc
adcl
pop
aaa
xchg
push
xchg
int3
cli
and
ljmp
mov
mov
imul
sub
cmc
div
pop
push
pushf
cmc
lods
and
fsubp
insb
loope
cmp
idivb
leave
dec
sub
test
lcall
insl
push
push
arpl
fcmovb
push
dec
rorl
pop
dec
inc
aam
inc
call
nop
jle
stc
push
dec
jmp
and
jae
push
in
std
lods
shlb
push
xchg
adc
jno
sub
imul
insb
addl
or
gs
lret
mov
jg
mov
jnp
imul
fcmovne
adc
push
sub
mov
nop
and
rorb
pop
fs
mov
das
mov
pop
fs
dec
mov
hlt
addr16
aas
sbb
dec
lock
dec
ds
fs
aas
jmp
into
aaa
add
cld
push
hlt
outsb
call
ret
andl
inc
testb
imul
adc
cltd
imul
popa
jo
mov
adc
clc
sub
aas
fsubrs
add
pop
cmp
inc
and
cmc
jb
test
aad
mov
popl
sbb
jecxz
or
inc
or
or
xchg
add
xchg
push
je
dec
mov
dec
aaa
enter
jne
push
pcmpgtd
xor
fildll
das
out
in
leave
sbb
in
ljmp
into
lea
inc
repz
repz
sbbl
outsl
or
jecxz
mov
sub
insb
cmp
mov
lret
mov
hlt
adc
mov
push
cmpsb
jecxz
fwait
dec
xor
xor
pop
mov
lret
jmp
stos
bound
push
leave
les
rcr
push
rcr
add
sbb
pop
imul
lret
mov
mov
repz
ret
imul
push
sbb
addl
lods
movsl
and
inc
jns
mov
xchg
dec
cltd
mov
stos
scas
xlat
dec
mov
cli
mov
mov
repz
shrl
push
femms
jb
mov
dec
cmc
xchg
cwtl
popf
or
xchg
xlat
addl
mov
jbe
pop
jbe
sbb
idivl
loopne
shrb
outsl
fimuls
push
lds
jne
nop
enter
xchg
icebp
sbb
in
stos
iret
das
std
adc
mov
mov
jae
rorb
gs
push
ljmp
leave
out
pop
xchg
pusha
pop
sti
iret
dec
cmpsl
lods
out
test
rcl
aam
lock
bound
in
pushf
xchg
sbb
call
push
inc
jb
mov
ljmp
and
fstpt
add
lods
dec
rol
es
stc
rclb
inc
pminsw
xchg
icebp
stc
test
and
jge
add
test
movl
fdivs
ljmp
xor
push
cmc
cmp
jecxz
jbe
iret
popa
ljmp
xchg
xor
xchg
xchg
ds
dec
rol
pop
pop
add
xchg
jecxz
push
add
incb
mov
inc
out
dec
xor
and
add
sbb
pushf
mov
mov
push
dec
adc
cld
in
sbb
mov
enter
lret
jo
add
inc
cmpsb
cmc
or
sti
adc
xchg
pushf
dec
test
into
pop
sbb
push
adc
cmp
cmpsl
cli
xchg
xchg
sub
int3
xchg
mov
lea
jnp
dec
stos
xchg
xor
into
mov
mov
not
je
cmc
xlat
add
mov
es
pop
push
out
das
outsl
and
repz
sbb
repnz
les
ss
adc
jae
mov
out
ret
mov
cmpsb
pop
mov
iret
cmp
or
adc
les
cwtl
mov
inc
or
push
dec
mov
ljmp
lea
adcb
adc
push
pop
lock
lods
outsb
sbb
pop
mov
rorl
scas
lock
add
add
test
jmp
data16
data16
mov
inc
pop
aaa
mov
xor
mov
or
jle
dec
mov
cmp
jmp
sbb
mov
aaa
out
test
jg
jae
push
jbe
jmp
jmp
pop
xor
dec
or
enter
sub
pop
movsb
pop
xor
pop
lods
jnp
fwait
mov
mov
or
and
adc
or
movsb
push
push
mov
fistpl
or
js
shl
out
mov
jb
gs
int3
sahf
ds
adc
pop
jmp
mov
or
push
mov
movsl
scas
and
lds
in
pop
sahf
cltd
mov
jo
dec
sbbb
xor
xchg
inc
jle
push
jae
adc
cmp
xchg
cld
mov
cmovl
mov
dec
orb
mov
adc
sbb
jge
aad
iret
cmp
mov
pop
and
sub
xchg
scas
xchg
dec
mov
into
pop
rol
and
cmpsb
scas
aas
stc
mov
je
rorl
fimull
pop
or
iret
je
mov
pop
gs
cmp
mov
dec
cmp
jl
testl
xchg
and
push
aas
fmull
into
sub
push
not
inc
pop
movsl
in
or
loop
sbb
repz
cmp
test
pop
mov
pusha
dec
pop
lret
mov
sbb
cltd
or
inc
out
popa
xchg
dec
clc
test
dec
ja
push
ret
push
adc
mov
pop
sti
sub
xchg
js
mov
cmpsb
imul
scas
push
jo
pop
dec
sub
dec
cld
mov
loopne
xor
int3
fcomp
shlb
mov
xorl
sbb
in
pop
add
lods
mov
sub
int3
in
addr16
xchg
jecxz
push
loopne
xchg
aad
mov
sub
cld
mov
clc
dec
cmpsl
arpl
scas
push
sub
and
ret
imul
outsl
mov
sub
nop
or
sub
dec
in
loopne
cmc
inc
add
pushf
std
cmc
test
xchg
scas
imul
jp
icebp
mov
jbe
push
sub
cmp
je
dec
add
cmc
pop
imul
jmp
jnp
mov
mov
xor
divb
in
cmp
call
jmp
inc
lahf
scas
pop
push
xchg
fbstp
shlb
push
sbb
ss
cmc
push
push
pop
mov
in
inc
push
movsl
rcll
shrb
xchg
xor
shl
mov
sbb
mov
dec
repnz
dec
fildl
loop
and
shrl
cltd
ss
pop
out
inc
xor
fistpl
sub
xchg
pop
aas
push
xchg
cld
push
dec
and
mov
push
cltd
lods
sbb
mov
outsl
push
cmp
add
mov
shl
enter
adc
out
pusha
sub
in
fs
cmp
ret
nop
movsl
hlt
adc
fs
xchg
scas
pop
aaa
stos
push
xorl
pushf
inc
jg
es
inc
xlat
xor
neg
dec
push
sahf
loopne
adc
out
into
lea
push
sub
ret
sbb
mov
roll
xchg
add
pop
cmp
ret
and
mov
std
loope
or
sti
sub
and
pop
mov
lds
ljmp
mov
dec
arpl
mov
push
or
imul
jbe
movsb
gs
in
std
add
in
ret
push
sarl
mov
test
out
mov
xchg
and
lds
iret
aas
lcall
shrb
push
mov
out
jl
xlat
jns
mov
cmp
arpl
dec
push
mov
test
fistl
mov
sbb
dec
xchg
loope
outsl
add
push
mov
mov
loopne
mov
add
inc
mov
jecxz
sub
fwait
and
xchg
mov
mov
jmp
inc
loopne
jmp
or
adc
mov
inc
mov
jae
lret
pop
sahf
pop
jb
xchg
test
mov
and
cmp
add
pop
into
loope
les
ret
push
push
popa
adc
cs
pop
ficompl
in
mov
xchg
lods
stos
push
xor
and
lock
lock
mov
insl
sub
aam
enter
test
dec
scas
mov
push
pop
fistpll
cmp
das
dec
hlt
loopne
push
dec
inc
pusha
pop
pop
adc
xor
pop
lods
adc
sbb
fimuls
cmc
xchg
stos
sbb
push
and
repz
test
xchg
mov
mov
sti
sbb
jno
cli
inc
out
lcall
loopne
arpl
lods
jbe
ud0
push
cltd
xchg
stc
push
stos
hlt
add
xorl
incb
scas
nop
adc
sahf
repz
or
adc
add
lods
pop
and
pop
ret
lahf
rolb
adc
cli
cmpsb
int3
sbb
scas
inc
lods
iret
xchg
cmp
arpl
inc
cmp
pop
dec
iret
sub
jo
mov
out
pop
dec
and
cmp
insb
xchg
pop
test
and
mulb
fs
mov
dec
iret
aaa
push
jbe
std
mov
outsb
pop
ljmp
movsl
xchg
sub
mov
mov
cmpsl
sbb
inc
inc
test
mull
push
mov
adc
shrl
push
movsl
sbb
rolb
jb
int3
cmp
into
loope
fists
pop
dec
or
lcall
daa
incb
arpl
adc
mov
outsl
xor
imul
dec
sbb
jle
into
push
adcl
mov
repz
jo
mov
adc
ficompl
add
push
inc
ss
add
int3
jbe
jns
or
jecxz
aad
hlt
insb
or
repnz
add
mov
mov
in
ret
jae
cmp
jmp
leave
addl
lock
push
xor
mov
sahf
sub
push
pop
push
xorl
mov
stos
jecxz
sub
pop
shr
push
out
mov
jg
xchg
jno
fcomp
pusha
shlb
cmp
cmp
push
xlat
jne
add
jo
cmpsl
jae
ljmp
lcall
xchg
test
cwtl
inc
aas
lret
fcomps
and
faddl
mov
fldl
jp,pt
pop
sub
out
stos
mov
and
cmpsl
test
or
mov
add
jmp
into
fcoml
and
mov
lods
xor
enterw
mov
iret
jbe
cli
mov
pop
mov
mov
cmp
outsb
inc
push
cmp
test
fists
push
xor
pop
scas
loopne
mov
addl
mov
jge
insl
xor
lahf
mov
mov
fiaddl
adc
arpl
jnp
es
das
subb
lcall
sub
fstpt
ss
cmpsb
ss
adc
push
or
mov
fucomi
lea
push
scas
pop
mov
lret
sub
and
mov
in
sbb
aaa
sahf
outsb
icebp
pop
stos
rorb
sarl
movsl
push
movsl
jns
loope
jns
test
mov
or
jne
and
lgs
mov
jmp
das
jb
cli
cli
sti
inc
inc
aas
and
inc
mov
jle
mov
and
stos
jl
mov
dec
mov
sbb
pop
cwtl
imul
cmp
add
jnp
xchg
sub
adc
pop
sub
xor
insb
mov
mov
add
int3
popa
iret
inc
lret
add
daa
out
out
xchg
mov
into
inc
mov
xchg
mov
cli
imul
ljmp
jnp
lods
mov
inc
iret
jne
inc
push
repz
orl
stc
les
sbb
daa
scas
cltd
pop
push
ss
jle
mov
mulb
xchg
in
push
stc
nop
or
cmc
mov
pushf
fnstsw
xlat
hlt
fs
inc
sahf
stos
lods
pop
das
negb
lock
mov
add
dec
push
ret
push
loopne
push
xchg
stos
mov
ja
movsb
ss
shlb
stos
addr16
and
add
mov
inc
cmp
outsb
ret
movsl
outsl
mov
popa
push
sti
jp
push
adc
pop
mov
mov
xchg
insl
mov
xchg
jbe,pn
inc
mov
sti
cli
pop
sbb
dec
mov
push
jmp
sbb
mov
cmp
jle
mov
arpl
mov
iret
in
scas
or
jg
adc
call
fmull
clc
or
mov
fwait
xchg
out
cltd
repnz
outsb
cmpsb
or
lahf
push
imul
mov
fidivl
xor
fisttps
dec
pop
loope
fwait
add
mov
push
push
pop
lea
pop
push
movsl
xchg
cmp
mov
cmp
inc
mov
mulb
push
lods
cmpsb
or
dec
xchg
dec
jbe
jns
mov
repnz
jnp
push
sub
pusha
mov
cmc
imul
and
mov
aam
lods
gs
inc
jo
mov
mov
mov
jo
dec
stc
pop
iret
pop
negb
fidivrs
pop
sarb
add
sbb
dec
jno
ja
daa
push
rcrl
pop
ljmp
sub
mov
mov
lods
sete
jp
jbe
pop
add
into
jnp
in
sub
pushf
add
mov
add
cli
rol
mov
cmpsl
sub
std
sbb
sub
clc
push
mov
test
xorl
inc
inc
out
jbe
push
or
jl
lods
push
je
jne
mov
inc
lods
jecxz
stc
jo
or
sets
sbb
dec
mov
push
pusha
cmp
arpl
bound
sbb
push
mov
subb
pop
out
cmp
fldenv
mov
lods
or
bound
hlt
inc
sbb
sti
imul
loop
fimuls
out
and
movsl
cld
popf
shrl
sbb
lea
adc
mov
dec
imul
mov
jp
pop
inc
rorb
add
lahf
sbb
adc
ds
push
movaps
or
jne
pop
pop
and
insl
scas
mov
mov
sub
rcrb
cmp
dec
cmpsl
lods
cmp
or
pop
mov
call
push
mov
xchg
outsb
and
cmp
sub
cmpsl
pop
xchg
rcrl
sbb
das
mov
mov
insb
and
out
daa
adc
mov
jp
push
hlt
jg
pop
call
mov
mov
data16
aad
into
sub
and
lods
push
popa
data16
ret
pop
jg
add
pushl
mov
stos
in
lcall
sti
lea
loope
or
sbb
and
test
xor
adc
or
mov
dec
mov
je
loopne
cmc
shl
fldenv
sbb
jp
aam
jg
popa
cmc
mov
mov
mov
dec
adc
push
sub
xchg
shl
nop
pop
sub
pop
int
mov
cltd
loopne
lahf
push
inc
inc
incb
cwtl
push
push
repnz
cltd
es
jb
mov
fs
push
cmpsb
loope
in
and
ja
shll
lret
scas
push
cmp
imul
and
jne
out
out
add
sar
pop
pop
jle
loopne
sbb
dec
pop
rorb
jle
push
lock
inc
daa
push
jb
mov
sub
out
mov
ja
fs
jle
outsb
pop
inc
pop
adc
push
inc
and
xchg
std
inc
cwtl
push
jns
sbb
inc
jae
jo
or
dec
adc
sub
out
dec
push
call
inc
into
bound
and
lock
add
push
mov
aam
sub
pop
in
sbb
inc
cmpsl
popa
pop
dec
addb
adc
out
inc
sub
je
cmc
repz
movsl
std
imul
jg
shlb
and
mov
xor
xor
inc
mov
daa
pop
hlt
pop
pop
pusha
jle
sbb
mov
xor
add
lahf
das
fstpt
insb
in
movsb
jmp
ficompl
mov
or
popf
mov
jns
inc
lods
lret
sbb
test
std
imul
call
mov
mov
xchg
mov
ss
inc
pop
inc
popw
cld
adc
test
xchg
rcll
and
and
mul
in
sub
iret
push
pop
out
cs
jmp
cmp
xchg
adc
mov
inc
and
dec
ljmp
lock
pop
fcos
push
cmp
icebp
add
sbb
xchg
inc
xchg
mov
repz
xor
lods
or
enter
sahf
fcomp
je
jb
mov
mov
and
jbe
idivl
xor
lods
aas
and
push
lea
add
jp
rorb
sahf
inc
fists
aaa
fwait
pusha
int
aam
mov
out
sbb
rcr
pop
jo
cmc
adcl
idivl
out
decl
subb
hlt
mov
and
cmpsb
gs
mov
cmp
and
push
mov
jecxz
imul
or
lds
mov
call
cmp
cmpxchg
ss
iret
and
push
dec
cltd
ror
pop
imul
pop
mov
sbb
outsl
jne
adc
testb
push
mov
lea
jmp
sbb
sbb
or
jnp
shrb
inc
xchg
inc
jno
dec
scas
mov
cmc
out
pop
or
mov
jno
xchg
or
or
push
push
setge
imul
mov
out
cmp
cld
std
push
inc
out
hlt
push
clc
arpl
aad
dec
hlt
add
pop
lcall
leave
insb
jns
mov
xchg
cmp
or
add
daa
dec
je
test
arpl
lret
jno
mov
pop
xchg
test
and
rcll
pop
xor
fnstenv
sbb
jbe
xchg
cmc
pop
ficoms
adc
cmp
mov
mov
ds
imul
fcmovu
insb
fs
jae
push
xor
xchg
mov
int3
push
mov
aad
pushf
aaa
sub
mov
push
sub
pop
dec
push
ja
mov
sub
cs
scas
pop
mov
pop
pop
mov
cmp
and
jg
mov
mov
dec
cltd
add
fwait
cmpxchg
xchg
mov
jb
cwtl
in
fcomps
mov
test
into
out
fcom
mov
add
mov
loopne
ret
pushf
clc
push
ret
mov
std
push
stc
mov
leave
mov
rol
xchg
mov
adc
jo
inc
cmpsl
rcr
add
pop
and
callw
imul
popf
jne
lcall
repz
das
mov
cmc
cmpsb
inc
dec
fstp
int
add
fldcw
sbb
adc
aam
mov
stc
out
addr16
mov
lods
out
add
ja
add
adc
cmp
scas
adc
adc
imul
pusha
jae
jg
sti
std
dec
andl
jmp
dec
repnz
setp
sbb
scas
call
insl
je
dec
push
aas
jmp
in
adc
dec
sub
inc
sbb
fldenv
js
push
or
dec
xlat
xor
inc
ds
int
dec
mov
int3
xlat
arpl
repnz
xchg
push
ficomps
cmp
cmp
pop
lds
inc
cmp
add
in
xor
cld
sbb
push
mul
scas
sbb
scas
push
mov
push
sar
in
jbe
jne
lods
push
in
pop
mov
dec
addr16
enter
and
adc
mov
push
pop
cmp
ss
aam
neg
loop
sbb
or
scas
daa
subl
into
fnstenv
sbb
jae
adc
add
push
aad
inc
or
popa
lock
add
mov
test
cmp
cmp
push
push
push
xchg
rcll
ds
fmul
mov
jp
inc
adc
fs
test
aaa
ss
add
cmpsl
add
popa
jb
cwtl
mov
dec
vmovupd
jbe
sub
pop
mov
cmp
fwait
enter
fmulp
xchg
inc
aad
aam
sahf
pop
mov
fisttpl
inc
test
cmp
je
push
jl
arpl
inc
lahf
and
aam
sbb
aas
rcl
enter
or
jl
mul
pushf
jge
add
mov
test
mov
adc
rcr
gs
and
sbb
repz
lods
add
push
pushf
clc
popf
xchg
lods
xchg
sar
sbbb
repnz
mov
mov
fidivs
or
fwait
xchg
xor
gs
lahf
push
out
mov
push
push
ret
popf
mov
mov
push
add
test
sub
dec
sarb
inc
sbb
push
mov
sub
pop
cmp
test
xchg
ljmp
sub
xchg
pusha
lock
repz
aam
mov
cmp
mov
adc
push
inc
mov
mov
cs
loop
mov
xor
in
insb
pop
sbb
fidivl
jns
add
in
pop
data16
sahf
jl
dec
ftst
repz
sti
inc
scas
mov
mov
pop
pushf
hlt
test
shll
fisubs
movsl
or
xor
fnclex
xchg
add
incb
loop
or
or
mov
js
add
outsl
and
adc
bound
and
and
push
and
xor
iret
mov
mov
or
jns
jb
inc
lcall
pusha
jle
jb
sbb
adc
push
xchg
sbb
insb
fstp
and
lods
sub
insl
test
out
mov
cmp
sbb
jge
bound
jno
out
imull
pop
xor
adc
cs
sub
mov
jge
lods
mov
sbb
fstpl
sbb
jg
add
mov
enter
outsb
fimull
inc
mov
imul
mov
stos
jb
jb
mov
push
mov
call
sahf
sub
push
call
fdivrs
push
call
jns
adc
out
jecxz
sub
xor
adc
inc
sbb
mov
mov
fcmovnb
add
std
sbb
push
push
sub
mov
in
inc
lahf
or
or
scas
dec
rcrb
in
fdivl
jge
cmp
pop
inc
dec
scas
push
mov
fstpt
shll
lods
cmp
out
adc
mov
fists
movsl
jp
shll
aas
leave
out
imul
dec
cmpsb
dec
xchg
jmp
daa
push
insb
hlt
adc
lods
test
push
inc
fisttpl
sbb
and
notb
sub
int3
jecxz
clc
or
lock
mov
fisubs
shrb
adc
and
testb
in
push
ret
lock
mov
lea
xchg
loop
cmp
test
filds
sub
mov
aas
pusha
imul
jge
iret
lds
add
mov
les
popf
into
sbb
jno
jp
jb
and
or
fst
mov
adcb
pop
rol
mov
add
call
int3
push
xchg
pop
cs
jo
movsb
xchg
ss
in
mov
pop
cmp
xchg
test
and
mov
inc
adc
add
jmp
ret
inc
sbb
test
test
xor
pop
xchg
cmp
jl
ds
sbb
pop
and
mulb
ljmp
loope
sbbl
in
cld
push
add
mov
insb
fdivl
xor
aam
aam
mov
cld
add
jmp
in
stc
or
stos
call
lock
mov
dec
data16
int
push
cmp
xchg
mov
adc
aad
into
int3
cs
sub
adc
mov
push
jae
ret
and
int
call
icebp
jl
adc
paddw
gs
adc
push
and
pusha
aas
out
jb
sub
adcl
add
popf
pop
or
aam
and
enter
pushf
das
dec
and
ss
sbb
notl
lock
mov
sub
dec
gs
je
stos
lock
into
sbb
scas
xchg
inc
test
mov
inc
sbb
jnp
pop
lcall
mov
xchg
ja
dec
lds
xchg
test
mov
jg
push
push
out
movsl
popf
dec
jb
movsb
out
mov
sbb
pop
adc
or
jecxz
add
adc
psraw
inc
adc
mov
popf
in
jecxz
mov
mov
sbb
mov
test
enter
mov
mov
shlb
cmc
lahf
push
insl
jle
and
cmp
or
mov
lods
stc
fmull
std
jge
jl
add
lcall
or
loopne
and
sub
mov
lcall
cmpsl
mov
add
push
hlt
mov
sbb
pop
xor
lret
shlb
inc
mov
lock
ficompl
stos
hlt
rclb
push
sarb
cmp
fwait
cmpsl
in
cmpsb
adc
out
outsb
es
test
pushf
test
out
push
sbb
in
push
adc
in
scas
sti
cmc
mov
sti
mov
mov
or
push
gs
hlt
leave
cmp
pop
cld
mov
stos
or
cltd
adc
movl
dec
insb
mov
adc
cmp
mov
arpl
bound
push
popf
js
cmp
push
sysret
lods
inc
fisttpll
mov
scas
in
cmp
rol
and
shrb
jp
push
jne
lret
jmp
jg
imul
push
xchg
mov
jno
add
add
jge
fildl
sub
int3
mov
js
add
aas
pop
into
pop
ss
mov
inc
jno
shr
js
jae
popa
push
add
sub
sbb
repnz
call
cmp
or
pop
add
inc
lcall
pop
imul
rclb
xchg
inc
sub
xchg
das
in
stc
xor
pop
mov
iret
fidivl
outsl
mov
dec
xlat
ret
orb
popf
test
imul
or
dec
imul
sti
imul
mov
dec
mov
mov
inc
lock
mov
mov
ja
pop
insl
push
das
lahf
scas
xor
adc
gs
or
sub
mull
fwait
jb
inc
sub
xchg
pop
push
cmpsb
arpl
test
les
dec
jo
in
mov
fwait
nop
and
jmp
cmp
leave
int
dec
pop
aaa
mov
repnz
lds
and
fcoml
fdivp
call
add
pop
out
cltd
pop
push
leave
inc
mov
les
pop
pop
lea
mov
mov
xchg
lods
inc
sbb
mov
in
cmp
lret
xchg
sbb
repz
xchg
mov
out
add
mov
in
mov
rorl
fdivs
cmp
test
inc
subb
mov
and
sub
repz
mov
movsb
pop
dec
and
loopne
pop
add
sbb
mov
mov
rclb
out
xor
scas
xchg
lods
add
mov
insb
pop
pop
mov
pop
popf
push
push
in
shll
jne
cmp
adc
dec
dec
std
ret
ret
scas
imul
je
stos
sete
pop
das
mov
stos
fs
in
cmp
ret
sub
sti
loope
or
insl
adc
stc
lcall
push
rcrl
mov
xchg
adc
inc
ficompl
push
mov
cld
sbb
inc
nop
fidivrs
test
aas
mov
mov
stc
push
aaa
mov
cmp
outsb
xchg
jp
xor
call
sti
or
cmc
xchg
mov
shll
xor
mov
xor
arpl
adc
adc
mov
mov
push
xchg
ss
mov
iret
in
xor
or
inc
mov
test
shr
aam
push
iret
mov
pop
ss
andl
cld
add
sbbl
push
in
pop
test
ja
jb
xor
xchg
cmp
sub
dec
fldcw
xchg
mov
add
dec
pop
dec
repz
adc
mov
xchg
push
es
fisttpll
inc
mov
andl
iret
mov
nop
leave
fidivs
pop
dec
jl
fidivl
push
xor
inc
sub
pop
sahf
cmc
inc
nop
test
xor
push
mov
out
sbb
mov
dec
gs
gs
pop
jge
lds
mov
sbb
sub
and
sbb
aaa
leave
shll
pusha
stos
add
jne
xchg
ret
sub
gs
sub
cmp
jae,pt
lret
sbb
pop
sbb
inc
inc
fiadds
push
adc
lods
jo
pop
inc
sti
sarb
fcomps
shll
fisubrs
push
mov
fnstcw
xor
mov
int
movsb
idiv
repnz
lods
mov
sbbl
sbbb
clc
sub
add
ffreep
pop
lods
es
test
cmpl
imul
push
xor
iret
lds
jge
aam
fdivs
mov
repz
cs
ja
out
daa
pop
jge
ret
loope
add
sbb
xchg
dec
fdivrp
mov
mov
pop
pushl
pop
jl
loopne
flds
sbb
pop
iret
rcll
fwait
into
adc
mov
out
pop
push
xchg
into
ljmp
mov
dec
mov
dec
mov
mov
lret
mov
aas
shl
pop
fcom
xor
loopne
mov
sar
jnp
hlt
shrb
jp
mov
jg
sbb
xor
shll
pop
or
xchg
leave
test
roll
cmpsb
loope
in
out
mov
repnz
mov
test
out
push
xchg
pop
mulb
lods
jnp
mov
adc
cmc
mov
jnp
mov
into
adc
test
cmp
popa
inc
addr16
ret
add
pop
mov
push
or
mov
xor
jge
call
int
xor
subb
inc
jmp
and
mov
xchg
aas
fdivrp
inc
inc
out
mov
sub
cmp
jle
mov
filds
mov
into
repnz
out
xchg
and
ss
daa
aaa
push
mov
movsb
xchg
ljmp
and
pop
mov
dec
mov
daa
shrb
icebp
cmp
or
in
nop
mov
insb
jbe
add
leave
xchg
sub
xor
sbb
imul
lret
add
dec
lahf
add
mov
sbbl
inc
sti
mov
in
sbb
out
or
jb
pop
inc
xchg
lcall
ljmp
fdecstp
add
adc
xlat
pop
xchg
mov
in
cmp
loopne
in
mov
imul
add
inc
cmp
hlt
hlt
rclb
add
lea
xor
dec
adc
out
pop
and
lahf
cmp
cmp
xor
xor
shlb
cmp
pop
adc
push
adc
mov
shl
adc
out
add
or
mov
or
bound
sbb
mov
cmpb
aad
jns
jno
rorb
mov
and
pop
fcompl
repz
iret
sahf
sahf
push
pop
mov
movsb
or
iret
imul
xchg
inc
add
cmp
cltd
xor
stos
xor
mov
mov
or
lock
ds
add
jae
mov
popa
push
lahf
add
fidivl
aaa
insb
mov
mov
or
cmp
xchg
dec
xor
bound
cmp
adc
cmp
and
inc
inc
or
mov
popf
xchg
rolb
xchg
rclb
repz
inc
inc
or
push
pop
jns
ljmp
lret
aam
decb
cmp
loop
ss
mov
xchg
mov
cld
mov
xchg
dec
les
mov
push
push
stos
adc
pop
mov
pop
push
repz
stos
out
in
movsl
mov
ret
push
jae
cli
mov
fldt
xchg
arpl
pop
dec
iret
test
jge
jo
jo
jecxz
sbb
inc
andl
lds
jbe
stc
push
into
andl
pop
mov
scas
jb
push
ficompl
and
popf
pop
jge
imul
xchg
fstpt
repz
call
jno
pop
adc
fs
call
adc
mov
pop
sbb
push
lds
loope
fstps
jbe
xchg
jne
jno
fldenv
lahf
aad
pop
xchg
pop
dec
ja
js
and
pop
loopne
add
jne
jns
xchg
popa
outsl
mov
aam
push
mov
fldt
dec
sub
jmp
and
xchg
push
fldln2
es
mov
or
mov
push
mov
inc
out
dec
pop
xor
pop
push
dec
loop
cmp
adc
movsl
inc
shlb
pushf
jb
xchg
pop
shr
ror
xchg
sub
mov
sub
mov
dec
adc
and
lret
push
pop
nop
in
xor
int3
aad
pusha
sub
in
hlt
jmp
xorb
js
adc
inc
xor
inc
int
fstl
jno
adc
inc
ja
xchg
cltd
push
inc
jbe
mov
adc
aad
cmp
cmp
jecxz
adc
jae
fbld
mov
ret
lret
push
add
ja
fstpl
iret
and
mov
iret
iret
repz
push
fs
mov
sbb
orb
mov
xor
push
pop
jmp
or
jecxz
and
jne
inc
xor
jp
pop
int
jl
push
xchg
pop
mov
dec
cmp
mov
ds
cmp
lods
mov
inc
dec
out
dec
shlb
ret
and
int
cwtl
push
jecxz
xor
mov
xor
adc
mov
rcll
mov
dec
std
push
xorl
mov
pop
rcll
cmpsl
mov
adc
bound
sub
aas
cmp
jbe
ret
cmp
scas
int3
fldcw
or
sbb
shll
cs
inc
aaa
and
push
lock
leave
adc
sbb
mov
fsub
clc
aad
fstpt
xchg
or
mov
outsb
mov
test
fs
sub
scas
inc
shrl
sbb
out
inc
inc
adc
loop
clc
or
mov
pop
cwtl
dec
lcall
bound
jecxz
push
mov
mov
outsb
popf
dec
push
adc
xchg
subb
js
adc
sub
aas
and
lret
fstps
je
jl
pushf
xchg
xlat
cmpl
jecxz,pn
cmc
movsb
adcl
xchg
dec
repnz
add
movsl
push
out
or
les
push
jnp
mov
test
push
mov
cmp
add
add
and
mov
xlat
in
xchg
mov
pop
jno
out
mov
push
add
sub
jae
jnp
fildl
call
shrb
ror
push
pop
add
loope
stc
jno
and
out
fbstp
push
inc
push
ret
inc
cli
jmp
sbb
push
sub
js
jecxz
mov
out
lcall
movsl
call
jle
out
add
in
adc
lahf
leave
fisttps
mov
lods
sub
dec
adc
ret
movsb
das
dec
cmp
hlt
imul
cmp
pop
sahf
and
or
xor
icebp
xchg
ret
out
sub
movb
negb
fists
call
es
nop
repz
incb
daa
out
mov
mov
adc
dec
and
and
test
push
mov
cmp
repz
mov
test
enter
push
movsb
out
pusha
mov
fdivr
clc
dec
sub
adc
in
out
scas
and
xor
jb
pop
pop
cs
mov
pop
arpl
mov
es
mov
xor
cltd
aam
icebp
daa
lds
stos
sub
repz
jl
fwait
mov
movsl
dec
testb
addr16
cmp
or
testb
cmpsl
mov
xchg
pop
imul
mov
sbb
dec
xor
inc
fnstenv
cmpb
jnp
sbb
imul
repz
dec
mov
jns
call
call
inc
int
cmpsb
dec
lahf
test
pushl
jl
fcompl
fildll
mov
cli
inc
mov
sbb
flds
leave
or
and
mov
das
jb
cmpsl
push
cmp
mov
dec
xor
push
mov
xor
enter
push
sbb
mov
xor
push
loop
gs
add
fcmovnb
arpl
jnp
sbb
fcmove
pop
jge
xchg
xchg
stc
mov
scas
sbb
aad
rcrl
jmp
and
fldlg2
test
adc
xchg
ss
shl
xchg
divl
lahf
jmp
insb
mov
mov
mov
movsb
sbb
mov
into
push
cld
adc
aad
xchg
and
clc
mov
or
and
gs
sub
pop
mov
push
dec
cmpl
stos
push
sbb
test
pop
jns
mov
fisubrs
jmp
xchg
fneni(8087
lahf
clc
xor
mov
fnstsw
adc
in
test
push
dec
movsb
fdivrs
mov
in
xor
insl
push
sbb
inc
imul
dec
push
mov
addr16
jg
mov
out
enter
mov
nop
xchg
ficoml
or
roll
inc
test
push
push
cmpsb
pop
insb
jecxz
jge
cmp
cs
inc
lret
scas
stos
leave
jnp
das
loope
rclb
adc
add
pushf
arpl
pop
out
negl
and
sbb
pop
sub
inc
ret
xchg
cmp
shrl
je
adc
jle
in
jne
xchg
inc
jle
push
insb
int3
fmuls
inc
jg
push
push
push
pop
nop
cltd
pop
and
mov
xchg
push
pusha
lds
rol
mov
push
ds
aam
sub
ret
mov
imul
sbb
movsb
dec
scas
in
or
push
inc
in
enter
xlat
jae
xor
aas
xor
jb
mov
test
push
mov
insl
stos
jae
fstps
insb
jmp
lea
push
paddw
push
adc
out
pop
mov
in
xor
and
in
shlb
imul
pop
mov
inc
jbe
data16
xchg
xchg
fwait
test
xchg
adc
gs
jno
fdivl
or
cld
rorl
loop
cmpsl
dec
xchg
and
and
cmp
adc
leave
jb
lret
cmp
cmp
fildl
imul
jo
mov
addr16
out
mov
imul
mov
mov
sub
sahf
push
movb
jno
out
das
cmpsl
xlat
es
jl
icebp
cmp
pop
inc
cmpsb
pop
push
push
push
pushf
sbb
dec
push
fcoms
sub
sub
mov
or
push
cmp
add
add
ret
fstpl
mov
inc
cmp
jmp
pop
lahf
dec
mov
xor
mov
inc
orb
adc
add
pop
jg
out
lods
test
mov
les
addb
inc
xlat
sub
popf
sbb
mov
es
or
out
pop
aas
nop
xor
inc
add
negb
xor
imul
repz
loope
inc
cmp
adc
hlt
test
mov
clc
xchg
arpl
repz
lods
mov
mov
xchg
out
std
and
ret
js
xchg
jp
es
cmp
ljmp
add
test
jg
jecxz
dec
cld
fistps
jle
es
mov
mov
data16
sbb
in
test
xor
sbb
jne
pop
inc
sbb
add
popf
dec
sarb
and
mov
js
jns
lahf
sbb
inc
dec
xchg
adc
inc
cmpl
dec
rorb
xor
iret
jmp
sbb
aam
cmp
stos
imul
out
mov
add
jno
pop
daa
out
pop
jmp
arpl
shll
mov
das
cmpsb
addr16
nop
test
inc
pop
mov
leave
ffree
push
jp
es
mov
inc
add
jmp
cli
dec
dec
mov
and
jecxz
fsubrl
scas
rclb
or
cmp
lds
mov
dec
push
inc
jl
pop
lcall
cmp
sub
fwait
mov
jo
xchg
or
movsb
mov
shrb
jg
mov
push
and
xchg
cmp
cmc
adc
imul
mov
xchg
imul
fwait
int
and
in
and
mov
rclb
mov
mov
mov
aaa
jmp
daa
dec
mov
xchg
adc
orb
cmpsl
aam
pusha
and
cmp
rcrl
pop
mov
jge
xchg
stc
sbb
mov
push
les
xchg
sub
hlt
lods
mov
movsl
xor
xor
loope
inc
add
imul
pop
cmp
aam
xchg
out
or
lcall
xlat
loopne
je
add
mov
out
dec
sahf
jl
cmpsl
sbb
shl
add
sub
dec
cli
jmp
arpl
loopne
out
adc
mov
mov
ja
popa
aad
or
int3
aam
jno
lods
mov
push
mov
jae
imul
adc
cmp
cmp
pop
rol
ss
pusha
mov
push
scas
jo
ret
inc
mov
sub
and
fistpll
sub
add
in
fcoms
add
pushf
push
mov
data16
jmp
aad
lods
dec
popl
cmp
jnp,pn
popa
dec
push
push
jp
mov
push
shl
mov
cmp
xchg
mov
add
aaa
scas
or
pop
clc
or
sbb
dec
into
mov
dec
cld
xchg
push
pop
mov
mov
insb
outsl
xchg
mov
subb
jne
outsl
jmp
pop
hlt
sbb
or
xor
adc
xchg
xchg
outsl
add
cli
repnz
and
les
sub
cmp
mov
xchg
pop
adc
test
leave
inc
jle
mov
fs
cwtl
rclb
loop
fisubs
ja
fcomi
out
xchg
out
dec
push
or
lcall
icebp
adc
decl
sub
mov
jo
fs
into
sbb
lock
popa
xor
rcll
push
rorb
xor
out
pop
adc
dec
inc
fwait
or
or
lcall
repnz
outsl
jg
sub
sub
sahf
pop
mov
adc
add
xchg
popf
test
mov
in
bound
xchg
mov
idivl
or
xor
and
sti
inc
fs
out
mov
imulb
pop
or
cmp
adc
enter
imul
mov
scas
scas
mov
and
sub
cmpsl
sbb
cmp
adc
pop
and
clc
adc
jl
enter
jge
mov
add
cmp
sti
jb
in
xchg
cmpsb
mov
iret
psubb
outsb
loop
xchg
mov
fstp
test
loop
insb
mov
fsubrs
add
das
clc
push
push
cltd
jg
sarl
cmpsl
push
fidivrl
push
loopne
jecxz
xchg
addr16
aam
lock
xchg
xor
fisubrs
jmp
in
cwtl
pop
sbb
out
and
call
aam
ljmp
sub
mov
ljmp
dec
subl
mov
push
and
leave
not
aaa
gs
div
dec
or
pop
cmpsl
int3
les
icebp
shlb
xchg
popa
pop
test
out
bound
push
das
fmuls
mov
aam
lret
adc
pop
adc
addb
gs
scas
add
repz
sbb
movsb
mov
imul
jle
inc
andb
jge
mov
lahf
jnp
or
movsl
js
push
dec
or
in
jo
dec
adc
iret
aad
dec
jmp
mov
das
mov
imul
inc
xor
and
xor
shrl
stos
xchg
test
pop
push
push
int
xchg
push
and
inc
xor
inc
lods
cs
in
pop
ljmp
popa
test
jb
xchg
push
inc
cmc
inc
in
mov
lret
mov
test
pop
into
arpl
mov
fidivrl
sahf
daa
js
imul
xchg
cwtl
cmpsl
or
pop
add
pop
mov
push
jbe
jle
enter
cmp
mov
mov
mov
je
mov
sti
stc
rdtsc
fisubrl
inc
test
rclb
sti
movsb
jnp
or
test
xchg
test
dec
pop
test
stos
dec
pop
pop
vxorps
jmp
push
loopne
pop
in
add
mov
pushf
bswap
loopne
jle
test
inc
mov
sbb
push
js
les
inc
imul
out
sbb
mov
lcall
outsb
dec
loopne
cld
cmpsl
push
repz
je
jecxz
xor
lods
sub
pop
imul
mov
shrl
pop
mov
or
test
dec
mov
cmc
sar
sahf
mov
jge
and
add
and
data16
xchg
inc
mov
push
loopne
xchg
sub
adc
es
sar
fbstp
push
jl
std
cmpl
jo
mov
jmp
and
inc
dec
mov
push
cmc
mov
pop
pop
pop
stc
icebp
loopne
add
leave
into
aad
pop
movsb
pop
pop
mov
xor
push
fwait
sub
mov
hlt
fs
pop
sbb
sub
cli
dec
inc
adc
fyl2x
sbb
and
cmp
mov
and
enter
les
out
js
or
arpl
into
pop
hlt
mov
adc
mov
ljmp
icebp
popl
dec
or
aas
or
rcl
pop
into
cmp
push
lahf
adc
ret
fidivrl
lret
sub
inc
mov
mov
in
lea
xchg
or
jmp
adc
lods
outsb
cmpb
sub
or
fiaddl
sub
push
shlb
inc
xlat
adc
push
sbb
jle
and
jbe
shl
mov
imul
loope
cmc
mov
ss
movsb
xchg
pop
mov
xor
loopne
xchg
xchg
xor
xchg
adc
adc
mov
xchg
data16
test
cmpl
dec
dec
shrb
mov
cli
and
je
mov
daa
jl
mov
dec
and
dec
cltd
adc
adc
pusha
push
pusha
sbb
ret
inc
push
inc
jecxz
sar
rolb
xlat
sub
pop
fiaddl
aad
dec
cwtl
add
shll
jo
sbb
bound
mov
and
xchg
mov
int
rorb
fisubrl
out
cmpsl
inc
mov
dec
in
cmp
and
sub
clc
mov
mov
bound
jo
mov
rcll
bound
ficomps
icebp
fmuls
mov
push
dec
push
aas
mov
mov
data16
lods
adc
and
adc
lods
and
xchg
jnp
rcl
pop
mov
jmp
jo
insb
and
cmp
push
pop
cli
add
cwtl
rol
inc
jne
add
sbb
sbb
cmp
xchg
lock
clc
fistl
icebp
iret
pop
mov
push
aam
jno
stc
outsb
in
cmp
dec
fldt
jecxz
jmp
jae
mov
and
ja
xor
cmp
call
std
cmp
sarb
xor
mov
cmp
ret
xchg
inc
lds
popf
ficompl
test
and
fsub
pop
lret
push
and
jbe
jmp
inc
jns
sub
inc
jns
test
aam
jb
push
jle
cmp
pop
jge
fcmovnbe
sbb
ljmp
sub
inc
jnp
adcb
mov
fsubr
sbb
mov
es
fs
jno
pushf
push
lahf
fmuls
shrb
lret
adc
test
jo
cmp
sub
dec
jmp
sbb
jbe
insb
push
pop
mov
inc
lods
xchg
pop
push
jle
cmpnltps
pop
popf
xchg
jle
pop
jg
mov
outsb
sub
sbb
cld
pop
pop
xchg
int3
xchg
cltd
cmp
repnz
mov
fwait
xor
cwtl
mov
add
test
clc
aaa
ror
outsl
ja
mov
fadds
aam
andb
out
shr
adc
pop
xor
fisttps
mov
mov
cli
iret
ja
xor
mov
sti
sbb
or
imul
addr16
sbb
idiv
push
push
mov
jp
fadd
rclb
xchg
add
fwait
mov
flds
jmp
aas
mov
sarb
lea
jp
cmp
mov
addr16
mov
cwtl
cmpl
jge
insl
adc
mov
jge
jge
cmp
ret
sahf
inc
mov
fsincos
int3
notb
rcrb
adc
adc
push
les
jmp
mov
mov
cmpsb
and
pop
fcmovu
add
out
and
repz
shrb
icebp
push
sbb
xchg
jle
icebp
inc
rorl
je
lcall
mov
push
call
lret
mov
and
out
ja
insb
scas
jp
cmp
sub
cmpsb
test
imul
xor
dec
pop
pop
mov
xchg
ja
pop
jae
or
sahf
ret
leave
js
cmp
aas
ret
and
push
cmc
in
mov
iret
adc
jae
pop
hlt
movsl
jo
dec
inc
and
and
jl
dec
pop
scas
lret
sti
stc
cltd
fldcw
inc
dec
fwait
xor
fisubl
leave
insl
xchg
aam
sub
rcr
mov
xorl
lods
push
add
jp
pushf
in
mov
js
add
mov
and
ljmp
ljmp
cmp
imul
shlb
leave
ja
roll
lcall
pop
into
fucomi
or
adc
shrb
ret
mov
cld
push
and
je
insb
movsl
jae
cs
into
rcrl
test
mov
rolb
insb
mov
test
dec
jge
push
shll
adc
mov
pop
dec
bnd
cmp
mov
das
push
add
cld
jo
jmp
push
mov
imul
sbb
sbbl
and
nop
jnp
ja
mov
je
lret
shr
mov
es
imul
jge
test
out
adc
add
aam
add
es
inc
test
cltd
sub
push
dec
push
cmp
xchg
dec
or
in
pop
shlb
cmpsl
xchg
mov
lock
loope
mov
in
sbb
pop
in
jg,pt
outsb
xchg
mov
into
js
sub
and
movsl
cli
sbb
add
sbb
mov
jo
jbe
push
xchg
inc
lret
or
adc
out
in
cs
ror
das
jne
inc
xchg
inc
std
push
cli
sbb
sbb
pushf
pop
cmpsl
in
cmpsl
xlat
xor
imul
or
cmp
fists
mov
in
cmpsb
sub
jns
nop
dec
imul
or
pusha
ss
sub
fwait
mov
jno
repz
sub
jbe
pop
xchg
adc
and
mov
cmp
cmc
jns
mulb
cs
popa
test
adc
cmp
enter
ja
or
stc
sub
aaa
jle
leave
sub
dec
cmpb
jl
xor
push
nop
adc
mov
jne
pop
aam
push
out
cmp
or
push
ret
push
xchg
cmp
fldl
jmp
sub
mov
arpl
xorb
push
fwait
mov
icebp
cwtl
cmc
in
add
leave
lds
sub
dec
sti
stos
jp
mov
inc
xor
inc
popf
cmp
nop
push
out
xchg
movsl
rcll
das
inc
inc
rcr
fbstp
add
popa
inc
cmp
rolb
jle
lock
gs
pop
addb
mov
inc
andb
jb
dec
fnstsw
imul
jo
aas
mov
out
cmpsb
pop
pop
jmp
mov
lcall
jb,pt
or
call
adc
cmp
push
imul
push
popa
dec
shl
or
add
push
loope
xchg
mov
testb
xchg
andb
or
aaa
sbb
jne
jl
or
jo
popf
mov
cld
cmp
push
movsl
insb
es
cmp
pop
insb
stos
arpl
and
pop
and
and
stos
mov
jae
jmp
xor
adc
add
mov
ja
dec
push
cmpsl
int
or
sub
ljmp
sub
in
sub
add
scas
mov
fcoms
dec
inc
or
mov
outsb
mov
inc
jmp
mov
imul
cli
cmp
inc
js
pop
shrl
mov
mov
mov
add
movsb
xor
ljmp
sahf
sti
push
inc
or
popa
cmc
inc
ljmp
lea
xchg
mov
jg
xchg
lahf
fcmovu
and
pop
and
lahf
movsl
push
sub
cmp
xchg
sub
push
push
and
jg
iret
bound
dec
or
inc
push
push
shrb
mov
cmp
xchg
cmpsl
mov
int3
sbb
xchg
push
jnp
jbe
xor
nop
push
cmp
xor
lahf
sti
sbb
test
lock
jns
mov
jp
into
fbld
das
mov
fildll
std
xlat
shlb
push
stos
pop
pop
sahf
outsl
add
je
inc
test
and
add
jl
xchg
jmp
cld
ret
inc
clc
cmpsl
xor
repnz
cmp
fsubrp
loop
mov
in
insb
sahf
rorl
bound
movsb
jg
ja
add
call
divl
pop
or
cmp
cmp
or
xchg
stc
jne,pn
pop
mov
add
push
das
mov
loop
xor
inc
mov
cmp
shll
lea
push
sbb
fmul
mov
xchg
sbb
aaa
inc
orb
popf
push
pop
and
inc
xchg
xchg
xchg
div
jl
jmp
push
push
incl
test
ljmp
jg
mov
dec
jp
hlt
andb
or
stos
sub
mov
jl
inc
sbb
pop
loop
mov
cmp
add
and
loop
int
fmul
pushl
adc
mov
lods
push
mov
push
movsl
inc
repnz
mov
dec
pop
clc
push
cs
imul
ljmp
xchg
mov
sbb
xor
pusha
roll
inc
fs
xor
mov
mov
in
rorb
adc
dec
dec
lds
mov
jae
cmc
lock
out
stos
lds
pop
mov
daa
sub
pop
sbb
ja
mov
cmp
jae
pop
dec
pop
fsubrl
sbb
add
loopne
mov
int
fst
ja
enter
push
inc
mov
mov
xor
clc
js
in
aaa
push
push
js
and
enter
lods
jmp
lcall
ljmp
pushf
into
xor
movsb
xor
sbb
orl
xorl
sbb
inc
jnp
jb
adc
in
fisubl
lods
mov
push
es
pop
pusha
mov
cmpsb
xchg
inc
std
icebp
lock
adc
or
adc
cmp
cmp
mov
inc
sub
mov
adc
and
popf
pop
test
mov
scas
mull
cmp
cmp
test
lock
mov
mov
jns
sbbl
fwait
and
sub
cmpsb
xchg
dec
jb
mov
push
xor
mov
inc
lea
call
imul
inc
sbbl
in
sub
xor
pushl
sti
push
test
inc
sbb
or
push
mov
call
aas
push
add
jno
push
cltd
sub
dec
shlb
jl
dec
dec
rorl
scas
outsb
push
cli
gs
sahf
add
lret
push
inc
aaa
lret
std
cvtps2pd
push
rclb
inc
out
inc
lahf
dec
in
test
shll
add
cmp
pop
in
inc
xchg
repz
mov
cmp
clc
inc
jmp
ficoml
int3
inc
xchg
lods
fistpll
pop
jge
cwtl
push
es
cmp
jno
push
push
mov
mov
lods
push
push
sbb
sub
jle
das
fcoml
add
jns
mov
lcall
scas
mov
xor
push
and
mov
inc
lahf
fdivr
ret
xchg
mov
insl
sahf
call
popa
pop
in
out
mov
mov
dec
xchg
sar
inc
jp
fcmovne
jle
cmp
mov
pop
in
shlb
inc
out
jl
jb
pop
scas
pop
stos
pop
mov
rorb
gs
pop
aas
dec
cmp
popf
or
imul
imul
mov
cmp
pop
xor
add
loope
inc
add
insb
add
aam
fisubrs
adc
mov
cmpsl
xchg
mov
sub
jmp
lea
jle
shlb
ret
xchg
jae
movsb
pop
xchg
test
xchg
ja
add
pop
shll
call
jne
add
jnp
jae
fwait
and
jg
xor
das
pop
popf
es
in
lods
fstpl
mov
int
testl
ficompl
mov
sbb
xor
sub
rorl
aaa
outsb
jp
pop
ja
jno
daa
push
xchg
jne
int3
imul
lock
mov
xacquire
repz
xchg
rorl
xor
iret
xchg
movsl
std
frstor
cltd
test
stos
sahf
sbb
lods
out
inc
ret
gs
xchg
daa
cli
aaa
aad
push
push
je
rorl
push
test
lahf
push
lock
jbe
jg
cs
jnp
mov
neg
xchg
and
sub
push
xor
mov
out
nop
addr16
mov
mov
or
fs
xchg
sarl
loopne
ret
xor
pop
movsl
xor
and
dec
xchg
aad
xor
fcmovbe
fstps
ljmp
sbb
fwait
sti
push
cmp
sbb
inc
sub
jno
pop
outsb
add
sbb
push
and
aaa
hlt
int3
clc
mov
push
es
inc
sub
shl
pop
mov
icebp
mov
jl
outsl
push
inc
bound
fnstcw
movsb
mov
aas
pop
inc
inc
loope
pop
or
sbb
sub
pop
shlb
aaa
cs
je
fidivs
mov
fs
push
cli
dec
and
add
rcl
scas
mov
cs
fidivs
sub
jmp
push
push
mov
mov
pop
lock
stos
lock
mov
cltd
ret
addr16
pop
ljmp
int3
adc
pop
popf
inc
sbb
push
les
mov
xchg
jns
inc
adc
cmc
iret
ljmp
mov
add
sub
sub
inc
jle
int
mov
ss
repnz
adc
and
stc
inc
shlb
rcrb
and
inc
imul
sub
movsb
add
push
xchg
sahf
pusha
jmp
inc
cmpb
and
jp
pop
cmpl
mov
xor
push
xor
push
bound
pop
cmp
les
stos
sub
dec
and
icebp
lret
in
fcompl
push
cmp
rcrb
sbb
mov
ja
xlat
inc
mov
sti
mov
and
push
stc
adc
sub
or
or
ja
add
jp
aaa
xchg
in
incb
scas
lcall
sbb
mov
sbb
cmpsb
xchg
or
add
outsl
push
jbe
sub
mov
lret
mov
xchg
mov
aad
out
dec
xor
insb
and
aam
mov
cmp
fsubr
divb
jb
push
mov
cltd
pusha
inc
add
xlat
cld
in
push
cmp
inc
and
cmpsl
xchg
leave
inc
xor
test
add
mov
je
jo
pop
cs
add
and
negl
mov
mov
das
insb
xchg
fstl
mov
cmp
divl
jge
mov
rcll
pop
inc
jmp
ja
and
dec
rcrl
jo
call
xchg
xchg
push
xchg
adc
jmp
fcoml
sub
enter
xchg
lcall
das
inc
repnz
cmp
fnsave
pusha
sbb
faddl
pop
push
cmp
jg
push
or
fdivs
mov
cmp
mov
std
adc
jp
mov
cmp
push
mov
loopne
movq
mov
sahf
js
ficomps
scas
enter
or
cmp
rorb
cwtl
iret
mov
dec
inc
ljmp
jbe
ret
or
lcall
lods
loop
jle
cmp
mov
pop
pop
push
repnz
xchg
sub
jge
adc
mov
mov
cld
imul
pop
loope
das
cld
repz
mov
pop
inc
popf
ds
loopne
flds
loope
mov
movsl
test
mov
imul
jns
dec
fwait
push
in
pushf
add
popa
xchg
sarl
pushf
sub
lret
inc
adc
ss
and
inc
dec
add
rolb
es
dec
into
pop
rcrb
arpl
js
insb
xor
inc
subb
push
mov
repnz
or
xor
mov
or
push
xor
xor
cmp
data16
push
repnz
cmp
ljmp
cmc
in
and
and
call
popa
or
sbb
out
push
cmp
cmp
mov
mov
sbb
push
mov
ljmp
jl
pop
inc
lret
filds
cli
add
lcall
movsl
pusha
xchg
jp
sbbl
lds
or
mov
fldcw
les
or
inc
ss
add
cmp
lock
mov
jo
cld
rorl
and
and
fs
in
xchg
xor
fs
adc
dec
scas
push
adc
stos
ds
mov
popa
rclb
mov
inc
and
mov
sbb
push
sub
fcmovne
dec
jne
in
xor
sahf
jl
xchg
adcl
sub
push
loop
leave
ss
ja
inc
xchg
in
test
test
pop
xor
ss
leave
adc
jecxz
movsb
andl
ficomps
add
push
fyl2xp1
mov
imul
out
xchg
adc
adc
push
inc
hlt
jb
pop
pusha
add
sbb
lahf
in
insl
push
adc
add
jae
into
cmpsl
mov
sti
popa
test
movsl
sti
sbb
dec
sub
test
out
xlat
mov
mov
jo
jnp
fmull
push
pop
lds
jo
ljmp
je
dec
sbb
xlat
jl
push
or
sub
adc
daa
cwtl
scas
lret
imul
dec
mov
cli
xchg
pop
or
test
pusha
aam
or
sbb
pop
rcll
push
mov
dec
or
imull
cmp
and
movsl
add
fidivs
out
xchg
mov
pop
or
mov
in
pop
mull
loope
loopne
push
jae
mov
test
mov
into
es
call
call
stos
jmp
adc
imul
xlat
aas
push
addb
aad
ja
sarb
scas
ja
mov
xor
and
aas
sbb
pop
lods
nop
mov
push
add
ds
sti
jno
push
mov
or
cmc
pop
out
fstcw
adc
mov
mov
jl
and
push
push
addr16
jnp
dec
dec
mov
adc
popf
fildll
leave
lahf
rcrb
cld
stos
sbb
pop
stos
cmp
scas
xor
sub
sub
and
jge
loopne
pop
pop
mov
xchg
lods
jo
push
pop
repnz
jl
mov
in
repz
cmp
mov
inc
and
cmpb
xlat
xor
mov
test
fbstp
lds
lods
pusha
test
cmc
iret
stos
cmp
popa
repnz
mov
adc
cmpb
mov
jo
lods
dec
mov
jne
and
or
mov
pop
nop
mov
pop
cs
cmp
pop
cmp
pop
outsb
das
jns
roll
add
mov
xchg
pop
mov
cli
gs
inc
ljmp
ss
jae
pop
and
cmc
into
aad
add
sti
frstor
push
lods
mov
xor
xor
dec
jp
xor
adc
xchg
dec
outsb
cltd
aas
aad
xchg
add
clc
les
cs
mov
or
lea
jle
enter
push
cmp
fbstp
add
popa
cmp
scas
shlb
sarb
and
je
sbb
pop
mov
test
mov
mov
inc
cmp
and
mov
cmp
dec
leave
ljmp
das
xchg
addr16
pop
fistps
lahf
push
xchg
jmp
inc
jae
inc
push
or
push
pop
jb
insb
sahf
fcomp
dec
and
dec
fidivs
hlt
lcall
mov
movsb
movsb
or
pusha
inc
test
xor
cltd
sub
xchg
popa
daa
or
mov
jne
mov
adc
cwtl
test
daa
repnz
sbb
pop
lds
push
and
cltd
and
out
xorb
imul
into
cs
addr16
insl
push
repz
mov
mov
std
sbb
sarb
outsl
out
fdiv
jo,pn
mov
shl
xchg
pop
cmpsl
insl
or
lea
fldt
add
cmp
clc
stos
xchg
sbb
loopne
mov
scas
jecxz
popa
mov
push
or
out
and
inc
lret
pusha
xchg
and
in
pop
adc
cmpsb
cmp
xor
stos
rorb
movsb
mov
mov
mov
bound
inc
sahf
outsl
adc
xor
jb
push
fiaddl
vmwrite
aaa
pop
jbe
push
sbb
inc
mov
sti
std
loop
pop
outsl
mov
push
loope
js
lock
push
or
xchg
repnz
push
icebp
out
rcrl
cmp
sub
cwtl
jns
inc
sbb
sub
mov
out
lahf
jns
ljmp
repz
push
fucom
pop
fildl
testb
and
and
dec
lret
jo
jg
ret
or
lods
push
ja
es
inc
cltd
imul
lea
loope
pop
jns
jbe
mov
jae
fldenv
sbb
int3
pop
loopne
mov
jmp
xchg
test
adc
and
dec
or
inc
jp
push
popf
ljmp
pop
ds
insb
cmp
xchg
pushf
mov
std
fnstcw
test
insl
ret
stos
stos
clc
dec
insb
inc
lods
mov
jne
data16
mov
cmp
mov
xchg
movsl
mov
adc
mov
mov
mov
sti
mov
cld
cld
pop
ret
enter
ret
and
loopne,pn
mov
pop
inc
loopne
icebp
aam
mov
xor
sub
mov
dec
mov
ljmp
les
xchg
push
dec
outsb
testb
adc
pop
ss
pop
nop
pop
jb
es
jmp
aas
jb
sbb
xor
cltd
outsb
or
es
int
pop
sahf
popf
jp
jmp
dec
lock
int3
lods
mov
sahf
les
xor
stc
gs
pop
sbb
popf
scas
mov
jle
sti
stos
sub
and
mov
jo
ja
push
lock
jo
add
gs
popa
pop
and
mov
inc
push
sbb
mov
jbe
jl
push
lea
ja
in
cltd
cmc
clc
dec
push
out
cmp
sub
popf
mov
or
dec
xchg
pop
push
sbb
add
sbb
fdivl
sbb
pop
bound
nop
pop
xchg
push
rcl
nop
sarl
mov
imul
int
test
pop
fiaddl
add
xlat
xor
push
scas
scas
or
sub
mov
sbb
adc
inc
in
push
leave
pop
and
or
xchg
cmc
scas
pop
dec
sbb
pushf
mov
sbb
add
clc
pop
loope
ret
lret
jb
rorl
mov
incb
xor
shr
pop
out
into
rcrl
cltd
xor
popf
push
outsl
cmp
les
push
push
mov
xor
outsl
ss
popa
or
jnp
rcl
std
repz
imul
dec
push
pop
pop
mov
jecxz
cld
mov
dec
and
push
push
push
or
addr16
rcl
cmp
pop
inc
notl
mov
jne
aad
dec
push
mov
xlat
frstor
pop
sbb
or
mov
lahf
sbb
fs
xchg
jo
gs
pop
test
aad
imul
dec
mov
aas
and
std
inc
hlt
jecxz
mov
xor
mov
push
and
orb
loope
data16
cltd
divl
fs
call
cli
xor
mov
repz
fstl
imul
sub
inc
dec
jge
adc
arpl
test
dec
mov
push
xchg
jbe
sbb
std
test
cmpsb
ret
push
int3
pop
inc
mov
pop
jge
or
mov
jmp
push
cmpb
fcomps
xor
jl
mov
imul
jle
mov
ja
jp
push
aaa
fadd
xlat
stos
push
jo
ficoms
test
popa
mov
aas
lret
out
insl
cmpsl
sahf
out
add
out
sub
mov
sub
mov
jbe
pop
mov
ja
xchg
iret
xchg
aas
subl
dec
push
cli
push
scas
loopne
mov
scas
les
pop
in
jae
stc
and
pop
popa
dec
dec
scas
jmp
dec
int3
push
in
hlt
cmp
loopne
xchg
xor
jp
jmp
sub
fldt
push
fmuls
mov
dec
pop
aaa
jnp
mov
jg
jno
mov
add
cmp
lcall
bound
push
pop
push
je
stos
mov
or
movsl
mov
cld
cmc
inc
sahf
cmp
jbe
dec
hlt
inc
stos
sbb
mov
jl
jmp
shll
pop
pop
sbb
sti
out
hlt
jb
dec
loopne
and
or
sbb
mov
adc
mov
ja
sbbb
inc
cmp
mov
outsb
mov
inc
add
in
stc
xchg
sti
es
mov
shll
in
rcrl
jns
hlt
enter
mov
jo
lds
lods
sbb
push
lret
lods
push
xchg
cmpsb
movsl
inc
lock
pop
out
in
and
fidivl
out
jmp
lds
xchg
push
popf
sub
push
mov
lods
inc
sub
adc
sub
adc
sbb
mov
xchg
cmp
mov
cli
jnp
mov
repz
add
insl
test
mov
dec
mov
cmp
adc
pop
add
jo
xlat
adc
and
sub
out
push
inc
pop
or
push
fwait
inc
sub
adc
xchg
ja
sbbl
xchg
sub
inc
push
es
cmp
lods
or
pop
iret
inc
pop
push
cmp
and
inc
add
push
ljmp
jmp
fstpt
sub
push
iret
cs
pop
push
in
dec
adc
and
mov
cmp
lret
jg
dec
and
out
mov
mov
xor
mov
ficomps
adc
add
clc
jns
fstp
jecxz
add
mov
jbe
imul
jo
cmc
inc
lds
leave
out
xchg
xor
mov
and
pop
mov
ss
mov
fistpl
sub
or
das
bound
jns
dec
jnp
cmpsb
fwait
sub
test
pop
xchg
push
mov
lcall
cld
repnz
out
loope
mov
xchg
aam
rcr
xchg
cmp
in
dec
fs
in
test
mov
ret
fs
test
sub
or
pushf
sbb
popf
mov
insl
push
sbb
das
inc
lahf
fcmovb
jmp
test
daa
imul
mov
out
xor
pop
into
add
scas
test
push
insb
lods
pop
dec
shll
cltd
dec
loope
je
lret
jb
repz
add
and
mov
jmp
pop
ss
js
call
mov
repnz
insl
inc
fldt
pop
cli
imul
loope
sub
pop
mov
adc
cmp
push
cmc
inc
lret
pop
xor
pushf
cltd
sub
mov
mov
out
outsb
jle
aaa
shll
inc
lcall
mov
imul
test
ljmp
lret
dec
xchg
add
add
jno
adc
divl
out
adcl
outsl
jl
add
negb
test
jbe
inc
iret
push
mov
mull
ret
adc
in
sub
pop
adc
aas
push
xor
pop
repz
mov
xlat
inc
aad
cmpsb
stos
cmp
pop
jb
add
cmpsb
push
gs
shll
add
lea
sbb
pop
es
lret
cmpl
fcmovne
mov
push
sarb
adc
data16
sbb
or
dec
fs
test
xor
aam
add
inc
sbbl
mov
push
fwait
cltd
movsb
outsl
fwait
push
ret
push
jmp
inc
mov
loopne
cli
shll
dec
loop
out
add
ret
movsl
lock
pop
xlat
fistl
lcall
mov
cmp
lea
cld
dec
pop
inc
push
fs
lods
xor
pop
cmp
aad
out
int3
xchg
cmc
out
jb
add
in
xor
cli
or
add
xlat
or
sbb
jl
mov
adc
ret
lcall
xlat
xchg
lea
cld
out
es
cmpsl
and
std
loopne
repnz
jbe
dec
push
icebp
dec
mov
cld
cld
out
lods
cmp
loopne
leave
negl
es
mov
or
cmp
adc
sub
sbb
cmp
ljmp
inc
sub
dec
cltd
mov
faddl
mov
into
push
repnz
sbb
imul
xor
push
sahf
pop
loope
cmpsb
add
lcall
pop
ja
stc
std
mov
aas
push
xor
lods
adc
jnp
adc
shlb
cmp
sub
vzeroupper
sub
imul
das
mov
cmp
inc
gs
dec
out
aaa
insl
pop
jl
push
sbb
adc
out
bound
jp
jp
cmp
les
aad
sub
inc
ds
rclb
enter
dec
imul
sub
mov
dec
in
add
jmp
push
inc
loope
ljmp
js
fsubl
mov
sub
test
sub
pop
fisubs
pop
cmp
fstpl
out
push
add
in
jo
push
dec
xor
andl
xchg
jne
sub
xchg
mov
dec
adc
incb
push
lret
add
pop
leave
adc
jb
mov
cmp
in
xchg
hlt
inc
pop
mov
mov
mov
hlt
push
andb
movsb
push
mov
sub
insl
mov
push
lock
adc
out
mov
pop
pop
pop
cld
test
mov
lahf
add
fcmovb
lock
or
mov
pop
lock
sbb
pop
lcall
push
imul
dec
ljmp
fnstenv
xchg
xchg
sbb
lret
lods
or
out
cli
xchg
mov
loope
sti
cmp
mov
push
sbb
ds
dec
xor
popa
shrl
inc
lods
xor
add
imul
jecxz
jno
jno
or
stos
xchg
push
or
mov
scas
sub
cmp
jns
orb
pop
cmp
enter
mov
iret
popf
lret
mov
pop
dec
icebp
in
inc
test
xchg
fcom
shlb
jb
scas
shrl
dec
mul
mov
dec
lahf
enter
jnp
push
inc
add
enter
jb
or
aad
rclb
mov
sbb
cltd
testb
insb
ja
push
int
cmp
in
lret
push
rol
shrb
xor
lods
movsb
std
add
jmp
cmpsb
cli
and
push
lret
cmp
pop
xchg
push
adc
popa
xor
idivl
cli
mov
sub
xlat
fiadds
mov
add
dec
xchg
dec
push
cltd
or
lret
xchg
inc
push
ss
cwtl
cltd
inc
in
gs
cmp
in
mov
inc
mov
add
pop
cmp
lds
sbb
sbb
fbld
ret
and
dec
scas
sti
or
sub
push
cmp
fsubs
jecxz
push
mov
std
mov
dec
and
mov
imul
out
jecxz
loope
imul
jbe
or
lcall
jge
mov
dec
arpl
sub
cltd
jmp
pop
mov
cmpsb
add
fildll
push
jnp
push
jg
cmpsl
lret
push
insl
sbb
and
push
push
sar
sub
cmp
mov
jle
or
into
add
jge
cwtl
mov
sbb
jmp
adc
and
and
loop
push
adc
cltd
repz
out
in
push
push
cmp
push
inc
pop
mov
lahf
mov
subb
subb
dec
scas
mov
cmp
fwait
push
and
add
and
out
or
or
icebp
pop
xorb
fwait
nop
mov
push
xchg
clc
pop
inc
mov
sub
cmp
ret
sbb
and
cmp
inc
int
pop
stos
jne
pop
lahf
test
sbb
mov
mov
aaa
clc
lock
inc
pop
pop
arpl
outsb
mov
fmuls
sti
dec
inc
jge
ret
dec
mov
hlt
enter
mov
add
mov
shl
sub
mov
rclb
mov
outsl
rcll
insb
lret
loopne
push
inc
dec
loopne
dec
cmpsb
aad
add
aam
stos
repnz
sub
js
aas
jle
sti
ret
ss
xchg
inc
rcll
or
dec
loopne
rcrl
jmpw
into
mov
mov
in
and
jns
mov
mov
fs
orl
pop
les
mov
fstpt
ret
lock
cmp
imul
sub
jmp
pop
dec
xchg
jmp
jge
adc
mov
dec
sbb
xor
mov
xchg
mov
sbb
push
jae
in
pop
xchg
lods
insl
pop
stos
inc
divl
cmp
push
sub
fadd
out
aas
dec
cltd
ffreep
loopne
cmp
add
imul
push
dec
fists
int
jo
lods
inc
daa
data16
adc
test
aas
sbb
lea
imul
jl
and
cmpsb
xchg
cmc
dec
cmp
das
cmp
mov
dec
mov
iret
repnz
fs
pop
leave
and
xlat
sub
daa
ss
aam
sub
cwtl
sub
loop
pop
xor
ret
out
iret
adc
xorb
mov
out
adcl
fisubl
sbb
fdivr
pop
pop
and
scas
lahf
popa
test
mov
or
and
mov
xorl
fs
imul
in
mov
jmp
addl
jne
mov
popw
jo
frndint
mov
shl
mov
mov
xorb
movsb
bound
jns
xchg
iret
push
mov
ss
mov
xchg
ss
shlb
ss
fsubp
pusha
xor
and
imul
push
cmp
sahf
xor
imul
mov
xor
jg
popf
daa
mov
mov
ds
lahf
inc
repz
movsl
mov
cmp
stos
outsl
push
imul
punpcklbw
out
mov
push
into
call
or
in
bound
sbb
cwtl
sub
repz
jno
call
insl
insb
sbb
mov
cmp
dec
out
fucomp
adc
cmpl
jle
in
nop
push
xchg
lea
imul
popf
or
push
test
inc
add
idivl
xchg
cltd
lcall
add
push
in
ror
cs
test
cld
ss
loope
mov
iret
pop
jecxz
enter
and
andl
shlb
fdivr
push
sbb
mov
add
cli
out
push
and
cmp
push
push
icebp
and
push
in
push
push
jge
movsl
lds
insl
add
mov
sahf
aaa
sbb
jno
mov
test
and
or
hlt
test
daa
daa
cltd
std
loope
and
fldt
cli
inc
lret
sbb
in
mov
ret
subl
rcll
push
pop
sub
dec
insl
test
pusha
dec
inc
mov
mov
iret
in
fcmovne
jp
push
sub
cmp
cmpsb
jno
leave
roll
adc
mov
outsl
loop
in
pop
int
leave
in
nop
test
loope
fldcw
sub
xor
movsl
fdivr
insl
loope
jo
gs
das
mov
or
out
sub
xor
out
jg
mov
sarl
mov
push
jl
mov
inc
into
inc
mov
xlat
mov
jne
mov
adc
gs
mov
push
add
pop
ficompl
dec
cs
dec
adc
inc
jnp
push
mov
jnp
xchg
popf
mov
pop
add
and
mov
sbb
out
nop
jo
adc
dec
mov
cmp
cmp
outsl
mov
data16
xchg
mov
mov
cmpsb
sar
jae
and
lock
pop
lds
jb
mov
fs
enter
sbb
xchg
cmp
lock
pop
cli
sti
xor
mov
ficomps
cmp
clc
roll
call
scas
daa
lcall
inc
movsl
out
int
testl
adc
cmp
push
mov
mov
mov
enter
push
mov
in
push
int3
cltd
into
nop
mov
xor
pop
inc
mov
ljmp
xor
in
push
ret
fistl
movsb
stos
enter
add
dec
aaa
dec
pushf
enter
mov
pop
cmp
pop
dec
gs
jge
outsl
iret
sti
dec
push
and
aam
xor
in
xor
xor
pop
data16
jg
add
aad
fists
fs
aad
test
test
out
in
cmp
cmp
scas
fdivs
xchg
push
call
inc
dec
out
or
loope
lods
xor
mov
in
mov
add
pop
xor
fsts
pop
out
shlb
into
ss
mov
imul
fcmovnbe
push
xchg
ljmp
enter
or
and
pop
inc
push
movsl
jge
popa
pop
mov
or
lea
out
arpl
push
outsl
rol
out
pop
leave
gs
sbb
mov
adc
in
push
ljmp
pop
cmp
mov
inc
stos
xchg
and
fcoms
xor
mov
xor
push
push
add
shll
add
rolb
iret
push
pop
stc
loop
sarb
mov
and
cltd
std
aaa
cmp
aaa
divl
or
out
sub
mov
loop
cs
sbb
shrl
pop
xchg
cmp
xor
adc
dec
jle
iret
test
mov
arpl
mov
jnp
loopne
js
mov
int3
daa
inc
out
popf
into
das
mov
mov
and
xor
lahf
xorb
lret
dec
testl
xchg
mov
pop
mov
fcmovnbe
inc
pmaddwd
cmp
pop
xor
hlt
lea
faddl
lret
mov
mov
dec
add
rcr
test
push
and
andl
jno
pushf
test
and
or
repz
xchg
rolb
call
xchg
dec
lds
aaa
adc
lods
cwtl
inc
dec
stos
lret
pop
xchg
xchg
mov
mov
adc
mov
fiadds
lods
mov
jb
xor
push
cmp
push
dec
jp
sbb
mov
adc
imul
rcl
cmp
mov
jge
scas
mov
leave
mul
hlt
repnz
jl
lret
jae
cltd
hlt
mov
fmuls
jne
jae
outsb
mov
pop
push
int3
lds
jmp
das
cmp
pop
sbb
lds
push
xor
adcl
loop
jp
pop
or
push
fldl
adc
nop
sbb
push
mov
daa
xor
sarl
test
aaa
mov
leave
lods
jmp
adc
xchg
pop
xchg
and
mov
out
sbb
data16
leave
shl
in
inc
mov
xor
push
mov
shll
pop
xor
mov
xor
push
jae
daa
push
add
out
nop
add
mov
in
nop
mov
les
cmc
movsb
mov
xchg
push
push
pushf
add
sub
mov
jns
push
orb
outsl
hlt
mov
out
jno
xchg
loope
cmp
mov
and
cmp
or
fidivrl
push
fisttps
jnp
jbe
push
add
ljmp
push
fildl
fidivrs
out
mov
lahf
leave
mov
mov
loop
out
loope
or
jb
adc
xor
dec
lcall
or
idiv
ret
aad
inc
imul
jle
popf
xor
lock
mov
cmp
fbld
jbe
scas
repnz
sbb
shll
jg
sar
xchg
pop
addr16
fisubl
movsl
inc
mov
dec
mov
dec
outsl
jp
sti
jg
stc
jle
bound
cltd
loop
imul
jo
push
in
cmc
das
cmp
mov
repnz
dec
xchg
sub
pop
xchg
pop
jbe
cmp
data16
mov
pop
mov
dec
mov
sbb
push
dec
sti
movsb
in
add
cmp
pop
or
lahf
nop
jae
out
sub
imul
lcall
cmp
or
lds
stos
out
cli
cs
sub
push
cmp
mov
push
daa
or
in
and
mov
xchg
ret
adc
mov
add
add
call
ss
pop
lods
push
mov
sahf
xchg
fwait
mov
dec
push
popf
mov
jp
sarb
jne
jo
fcomps
xor
pop
negb
jb
sbb
inc
inc
jecxz
sbb
sbb
sub
loopne
lods
and
mov
add
rorl
or
in
adc
push
pop
jae
leave
jecxz
push
cmc
popf
pop
add
and
mov
jecxz
fidivrl
fldenv
sbb
xor
xchg
xchg
jns
mov
scas
lods
add
in
add
sahf
sub
dec
out
sub
mov
cld
out
negb
in
add
mov
inc
mov
push
sbb
push
icebp
mov
push
mov
jmp
in
push
lds
frstor
data16
int
push
aas
pop
lret
xchg
pop
add
insl
sub
sub
mov
cmpsw
jecxz
mov
cmp
stos
loop
cmpsb
fwait
mov
mov
push
aam
stc
mov
push
cmpsl
decb
dec
inc
andb
xor
in
or
mov
les
push
mov
hlt
push
jmp
mov
sarb
ss
test
fisubl
jo
test
inc
pop
push
out
jp
sbb
xchg
sub
xorb
jge
pop
sbb
lds
jnp
jo
jle
xlat
stc
cmpsl
pop
into
mov
fistps
sub
jg
iret
inc
je
ds
xchg
xchg
js
push
inc
ret
js
pusha
lea
test
push
sbb
stc
sbb
fbld
push
mov
mov
sbb
and
inc
fmul
xchg
inc
out
mov
xchg
or
in
mov
mov
mov
or
cmp
mov
jl
es
adc
adc
insb
sbb
and
jbe
jmp
bound
push
sbb
xchg
sarl
mov
xor
mov
sub
inc
imul
in
jns
lahf
inc
das
cmpsb
out
mov
outsl
pop
js
dec
and
sbb
je
mov
rcrl
into
jl
lahf
fwait
sub
mov
xchg
dec
movsl
jno
inc
sub
cmp
fidivl
rcrb
mov
pop
mov
clc
cli
js
into
icebp
int3
fwait
int3
pusha
orb
pop
and
mov
xchg
inc
addr16
mov
jno
lods
and
jbe
loop
cs
add
cmpsl
pop
rcl
insb
hlt
sarb
mov
in
ljmp
and
mov
mov
cli
das
sub
imul
inc
xchg
gs
test
mov
lret
out
jnp
sub
sbb
mov
jmp
adc
out
js
push
push
sbb
xorl
and
popa
mov
in
or
lret
push
sbb
push
aas
jo
test
cmp
movsb
mov
pusha
mov
hlt
or
bound
iret
push
icebp
jle
popa
dec
leave
push
sbb
or
dec
xchg
lret
xor
dec
cwtl
push
or
jmp
aas
daa
mov
jmp
repnz
jp
jp
sbb
dec
pop
das
sub
mov
jecxz
pop
pop
imul
test
inc
jmp
jl
pop
xchg
imul
mov
jmp
imul
jb
lock
es
inc
mov
sub
mov
jl
sub
shr
ret
gs
jb
push
push
nop
test
push
pop
and
or
cmp
and
add
fists
fistpl
clc
gs
shrb
dec
jmp
jne
mov
mov
movsb
cmpsb
and
gs
or
mov
pop
mov
roll
movsb
int3
fsubrl
mov
aas
pop
into
or
ss
mov
test
mov
jg
mov
or
imul
xchg
pop
cmp
imul
insl
aad
lret
mov
inc
lods
movsl
mov
adc
rcll
sub
dec
shl
jge
jg
jne
pop
lock
fsubrp
icebp
insb
xchg
push
aad
les
and
dec
pop
leave
xor
push
cwtl
add
push
sbb
push
pop
dec
lds
dec
or
mov
es
test
sbb
into
ret
lock
push
xor
mov
subb
cld
sub
cmp
neg
repnz
and
sub
xor
lods
icebp
fwait
add
mov
or
orb
out
int3
repz
sti
xor
jnp
stos
mov
pop
and
pop
add
ficoms
jns
dec
repz
sbb
inc
shll
cs
mov
insl
adcl
jmp
leave
adc
ficoms
mov
insl
or
mov
pop
fwait
mov
lds
cmp
and
call
jns
jge
lods
das
pop
aas
sarb
imul
mov
push
pop
cmp
inc
ljmp
jmp
mov
aad
test
mov
pushf
lods
add
cmp
push
shld
shlb
lods
jp
push
sbb
cmp
push
or
jp
out
data16
sti
pop
daa
lods
push
lods
and
popf
outsb
sub
mov
or
dec
xchg
sbb
fistpl
or
fnstcw
push
out
outsl
sub
lock
cmp
and
push
jnp
mov
dec
jae
in
cmp
or
mov
fs
adc
enter
and
xchg
stos
stc
filds
add
sub
jb
adc
adcb
int3
mov
mov
lods
push
shlb
std
mov
push
notb
add
dec
in
inc
addr16
sbb
out
in
shlb
xchg
rcrb
ja
push
test
shll
adcb
xchg
jl
mov
push
addr16
ret
in
iret
icebp
push
sbb
sbb
add
in
lcall
cmp
enter
mov
mov
dec
lcall
mov
je
xchg
mov
mov
clc
movsb
adc
sbb
or
mov
pop
shrb
mov
xor
sbb
cmp
jbe
sub
ljmp
scas
jns
push
jmp
test
sti
sahf
jp
and
mov
push
push
or
mov
movsb
fnstenv
push
test
fs
aas
in
ficoms
pop
scas
jmp
mov
cmc
loop
mulb
mov
pop
jno
iret
roll
jecxz
cwtl
xlat
jl
dec
xor
das
mov
les
pop
lcall
out
lret
dec
xchg
cmp
mov
cmp
jmp
mov
add
inc
xor
mov
mov
mov
psubd
jbe
xorb
rorb
push
popl
loop
sahf
push
jbe
insl
or
lods
inc
mov
xchg
fucom
lods
loopne
lods
add
mov
push
cwtl
add
push
dec
mov
sahf
aas
dec
ss
pop
jo
sbb
and
rcll
out
ds
cmp
mov
xchg
sti
or
cmp
jbe
into
mov
orl
inc
ljmp
pusha
xor
xlat
fadd
nop
and
push
nop
dec
xor
sub
adcl
gs
std
sub
dec
adc
mov
fdivrl
mov
in
pop
mov
cmpsl
mov
rcrl
push
in
and
mov
mov
stc
inc
in
fs
ret
rorb
mov
cmpsl
jmp
cmp
sub
xchg
mov
mov
mov
lcall
in
jge
popa
sbbb
and
arpl
pop
xchg
xor
data16
mov
mov
imul
inc
stos
inc
jle
xor
incl
lcall
fyl2x
je
inc
push
leave
je
mov
adc
adc
mov
mov
enter
mov
and
gs
loope
addr16
mov
ljmp
test
xchg
adc
ror
hlt
pop
add
cli
pop
sub
into
mov
imul
xlat
sub
mov
jle
push
call
cmpsl
mov
xchg
out
mov
jge
hlt
add
into
ret
popf
push
add
icebp
xchg
loopne
stos
out
daa
adc
lahf
popf
sub
faddl
mov
les
ror
cmp
mov
fstps
dec
and
xchg
adc
cmp
xchg
out
adc
dec
push
inc
push
jae
cld
lds
aaa
fwait
mov
in
jmp
lds
inc
cltd
xlat
cmpsb
fisttps
cmp
mov
mov
xchg
outsb
mov
pop
or
lret
add
out
in
jle
push
jle
insl
lahf
inc
nop
mov
fs
into
xor
sub
js
mov
test
jns
scas
ret
scas
pop
cmc
jl
inc
cmp
loop
push
loopne
mov
pop
bound
jo
sub
mov
or
and
push
inc
ret
and
sub
sub
cmc
imul
xchg
scas
sbb
mov
mov
xchg
cmpsl
das
cmp
mov
push
std
pop
mov
add
js
push
jbe
aas
test
hlt
ds
mov
filds
mov
or
gs
call
imul
jge
int3
les
cmp
and
sub
decb
ja,pn
cmp
outsl
clc
ljmp
mov
mov
out
cltd
stos
cmpsl
mov
sbb
jmp
mov
in
ja
leave
fs
jg
sub
cld
fwait
mov
enter
stc
je
adc
jg
push
stos
cmp
and
stc
inc
movsl
jo
in
mov
subl
push
ret
jns
mov
and
cmc
sub
jle
xorps
adc
mov
xor
stos
sbb
inc
mov
adc
xchg
into
fistpll
loop
cmp
xchg
fcmovnu
jecxz
int3
add
mov
xchg
sub
call
incl
test
sub
test
inc
push
aaa
or
js
int3
xor
inc
mov
std
push
or
inc
imul
sahf
dec
iret
push
jge
pop
shlb
in
sub
stos
jno
dec
mov
add
insb
jo
or
pop
sti
jb
pop
cltd
lock
add
aaa
xor
es
test
pushf
and
aad
dec
inc
es
jnp
fisubrl
fildl
pop
daa
fdivl
orb
cwtl
lods
mov
adc
insl
jle
aam
adc
jle
bnd
arpl
popf
push
mov
sbb
dec
jl
mov
ss
out
inc
push
mov
xchg
lds
jge
dec
es
imul
icebp
cmc
lea
cmp
xlat
scas
xchg
in
orl
cmp
pop
daa
loop
xor
cmp
mov
and
xchg
pushf
pop
pop
test
shll
mov
inc
pop
sbb
adc
stos
rol
mov
jp
sub
xchg
ja
adc
ss
cmp
repnz
sahf
repz
jle
adc
pop
push
ss
pop
mov
xor
iret
sub
inc
sbb
fldl
jge
and
sub
rcr
ret
out
and
sbb
jg
dec
bound
and
jnp
lcall
cmp
adc
roll
cmp
cltd
add
mov
sub
mov
adc
nop
adc
pop
push
sbb
sbb
cs
movd
addr16
jne
repz
mov
mov
mov
push
xchg
adc
xchg
sbb
dec
aaa
sar
daa
shr
mov
mov
push
les
or
mov
pop
xchg
sub
stos
and
adc
call
fsubl
or
hlt
push
in
out
cld
inc
in
sbb
loopne
and
sub
sbb
xchg
addr16
mov
fs
out
or
lret
and
in
arpl
imul
cmp
cltd
mov
mov
push
out
cmp
jb
repnz
and
scas
rcl
sahf
std
stc
pop
icebp
and
fdivl
push
or
push
mov
mov
lea
and
pop
jp
mov
adc
mov
xchg
pop
test
andb
sti
sub
cli
jo
xor
loop
add
mov
pop
je
mov
repnz
add
push
cmpsb
mov
insb
dec
and
xchg
loope
mov
in
dec
fstpl
lahf
popf
cwtl
lock
dec
xchg
sahf
ds
mov
data16
ss
dec
inc
ficompl
cmpsb
dec
mov
xor
fdiv
cmp
dec
mov
fsubs
stc
adc
leave
mov
leave
setle
mov
and
imul
pop
gs
in
imul
jo
xor
sar
mov
sbb
lods
mov
xchg
fldl
inc
fbld
into
insb
sub
sbb
stos
in
or
and
mov
cs
les
jbe
fstpt
lods
add
cmp
insl
xor
jl
jl
sbb
iret
nop
fnsave
loop
adc
pop
repz
js
loopne
sarl
int
lods
fnstcw
stos
xchg
ret
les
jnp
dec
inc
call
mov
mov
push
pushf
pop
fldl
pop
adc
add
jno
ret
lcall
cltd
xchg
repnz
ja
je
rolb
lock
pop
lods
sbb
mov
xor
dec
shrl
stos
setnp
mov
je
xor
mov
jne
pop
iret
shrl
jno
mov
pop
cli
mov
repnz
shll
cmp
lret
xchg
imul
push
rcrl
out
shll
xor
mov
stos
inc
adc
jo
push
adc
push
lods
adc
mov
cmc
stos
cmp
loope
mov
cmpsb
enter
lret
cmc
mov
repnz
sbb
pop
xor
xchg
dec
sub
push
dec
cmpsb
rcrb
push
test
fwait
push
sbb
sub
jl
fcmove
cmp
aam
ss
xchg
out
pop
aas
pop
or
add
aas
add
sarb
xor
repnz
leave
xor
and
adc
cli
mov
popa
outsl
fistpl
xorb
insb
gs
aas
mov
jbe
mov
mov
lret
or
inc
pop
push
fbstp
sbb
bound
lods
add
pop
bound
out
cmpl
xchg
mov
cmp
inc
in
arpl
xor
fmuls
inc
hlt
mov
fisttps
int
stos
inc
xchg
mov
xchg
mov
xchg
pusha
outsb
loop
add
sub
mov
js
outsb
mov
call
cmp
pop
sbb
push
cld
je
cmp
mov
adc
mov
test
mov
sti
shll
sti
mov
rcrb
lret
mov
inc
sbb
enter
mov
sar
gs
lods
sub
or
push
dec
ds
pushf
mov
sub
movsl
mov
cmp
das
mov
pop
push
mov
xlat
cmp
mov
outsl
cmp
cmpb
dec
xchg
test
cmp
fdivl
mov
or
dec
lcall
sti
sti
shll
xchg
lods
push
mov
or
lea
adc
sub
jge
addr16
or
jne
aaa
mov
sub
imul
ficompl
aam
into
ret
movsl
out
les
repnz
xor
jnp
xlat
push
ja
mov
sbb
push
mov
lods
cmp
imul
testl
dec
xchg
mov
lret
test
jp
mov
pop
loop
sbb
jbe
mov
gs
xchg
cld
cli
stc
jns
rcrb
test
mov
cwtl
adc
jb
ret
lcall
push
mov
jb
xor
lods
fstl
outsl
add
lock
into
jge
mov
jb,pt
cmp
imul
jp
add
sbb
dec
jns
xor
jns
fildl
lahf
ret
sbb
aam
es
mov
xor
inc
xor
push
dec
rcl
pop
dec
stos
je
inc
int
aam
imul
ds
adc
xchg
outsb
mov
daa
fisttps
lods
or
scas
imul
or
fs
pop
xchg
icebp
sbb
int
add
xor
cs
iret
jbe
notb
leave
je
lods
add
fstl
shll
jns
adc
iret
sub
fnstcw
movsb
out
into
mov
arpl
add
mov
andb
push
inc
or
scas
jne
aaa
es
push
mov
inc
sahf
cmp
lcall
pop
inc
push
add
pop
mov
add
pushf
loopne
mov
mov
pop
in
adc
push
jecxz
xlat
in
cmp
rol
sub
or
adcl
sbb
jmp
lods
sbb
imul
call
out
fstpt
sbb
pop
test
push
and
repz
xchg
lock
cmp
pushf
mov
or
repnz
in
or
imull
inc
jmp
cmp
push
dec
fstl
dec
add
jnp
jp
or
jge
daa
testl
jae
out
pop
pop
call
sub
mov
xor
pop
sub
je
add
jae
stos
repz
xor
push
icebp
aad
ljmp
fiadds
jbe
mull
ja
aam
cmp
jo
jno
push
xchg
adc
push
lods
mov
jge
ja
lcall
rorl
push
jp
out
pop
mov
mov
mov
xchg
xchg
das
pop
enter
pop
push
cs
mov
cmpl
lods
cld
xchg
rolb
nop
je
shlb
mov
inc
cmp
les
ret
in
mov
pop
sub
cmp
mov
jae
push
mov
out
dec
adc
adc
mov
mov
or
jns
adc
jnp
loopne
ret
add
cmp
adc
mov
adc
stc
fs
pop
idivb
or
cmpsl
jg
out
mov
or
push
stc
movsl
dec
cmp
int3
lret
mov
scas
icebp
imul
das
out
leave
add
sub
jb
add
pop
repz
mov
mov
test
lds
jae
into
mov
fnstsw
daa
dec
nop
xchg
mov
adc
mov
mov
mov
pop
mov
xor
mov
loope
iret
mov
push
in
and
mov
sbb
jb
bound
clc
jb
cli
fnstenv
push
push
mov
lds
aaa
pop
enter
lods
repnz
mov
hlt
or
push
add
cmpsl
mov
mov
push
lahf
rolb
cs
mov
add
insb
mov
push
lds
lods
cltd
cmpsl
fsubr
dec
bound
pop
add
scas
jbe
lret
clc
in
dec
clc
sbb
enter
mov
or
aas
adc
imul
rorb
pushf
sarl
pop
ret
les
sub
sbb
xor
adc
cld
loop
xchg
mov
mov
xor
cmc
test
xchg
lret
dec
sbb
mov
enter
call
jns
fcoml
fdiv
mov
repz
xchg
sub
out
push
test
test
cli
cmp
jns
xor
lret
enter
idiv
addr16
mov
jl
inc
dec
jae
in
repnz
add
cmc
das
push
push
fmuls
or
inc
lods
loope
xlat
data16
fninit
data16
std
in
jmp
fnsave
jo
mov
out
push
ror
pop
or
in
jne
or
dec
cld
pop
sbb
sbb
outsl
mulb
fldcw
push
js
xchg
inc
insl
mov
adc
add
gs
inc
mov
pop
xchg
mov
fdivrs
push
jne
sub
xor
xlat
inc
add
jb
push
aam
popa
lods
jno
xchg
push
push
add
jne
es
pop
aam
sti
pop
mov
inc
inc
out
stc
sub
mov
mov
cld
adc
ret
pop
xchg
xor
jge
mov
xchg
aam
xchg
int3
fwait
lret
dec
sub
xchg
sub
sarl
outsl
mov
xchg
shl
jnp
insl
push
pop
mov
sub
push
scas
movsl
ja
or
jns
insl
iret
pop
xor
dec
pop
popf
dec
mov
ja
inc
cs
jbe
xchg
mov
mov
jl
cld
mov
mov
aas
out
jmp
in
in
pop
adc
and
nop
sbb
xchg
cmp
aam
mov
lods
aad
xor
or
pushf
fisubrl
and
stos
ret
push
daa
inc
xchg
ljmp
adc
xchg
sub
fldt
or
mov
stc
sti
add
fwait
sbb
mov
stos
ret
lahf
outsl
loop
cmp
rcll
aam
incl
outsb
cmc
into
fdivs
and
jg
add
lea
sub
sbb
in
lahf
mov
push
xchg
daa
sbb
and
lock
shr
nop
arpl
out
xor
inc
and
popa
and
dec
outsl
cld
leave
daa
dec
mov
sar
fwait
insb
dec
jo
add
ret
pop
xchg
mov
cwtl
mov
mov
ret
and
jmp
mov
sbb
xchg
cmp
jl
shlb
jb
or
mov
ret
pop
jnp
loop
push
aad
aam
xadd
fwait
stos
xor
les
mov
ret
out
movsl
push
xor
insb
mov
in
mov
sbb
sbb
lret
push
sahf
sahf
popa
mov
or
jg
iret
adc
pop
dec
xchg
push
das
pusha
sbb
test
inc
xchg
or
icebp
lcall
jnp
fdivrl
fsub
pop
mov
sbb
and
out
or
or
ret
jae
lahf
xchg
pop
jb
lcall
test
out
hlt
ss
mov
les
jle
stc
xchg
dec
ja
mov
sbb
ja
inc
cli
mov
sahf
das
pop
jns
push
add
repz
rcrb
push
jmp
fldcw
dec
fists
inc
outsl
inc
subb
xor
jmp
das
mov
mov
jmp
dec
jns
jecxz
imul
sub
xchg
mov
test
push
hlt
xorl
insb
out
mov
inc
xlat
popa
push
cli
sub
das
bound
jp
sbbb
int
dec
icebp
jg
das
roll
mov
mov
shll
aas
pop
adc
or
xchg
pop
add
icebp
jle
inc
jnp
call
data16
push
adc
inc
sub
dec
cmpsb
jae
in
leave
stos
out
fwait
mov
outsb
fisubrs
int
sub
jns
mov
lret
xor
sti
dec
std
fiaddl
xchg
adc
dec
xor
or
repnz
test
pop
aaa
fs
pop
jnp
xchg
clc
sti
xor
mov
mov
mov
xchg
mov
fsubs
sbbb
sub
jbe
repz
mov
aad
dec
xor
push
and
test
adc
fs
ror
addr16
rclb
ja
sahf
mov
xchg
in
and
adc
push
inc
stc
pop
movsl
sbb
push
xchg
pop
or
out
adc
mov
mov
fbld
pushf
jmp
mov
sub
push
dec
mov
mov
mov
sti
int
sub
mov
xchg
push
mov
ss
mov
add
cmp
or
mov
pop
int3
cmpsb
and
mov
mov
cld
es
loope
sbb
out
add
mov
mov
daa
mul
inc
cmp
jge
sbb
movsl
incl
jecxz
cmp
rol
jmp
xchg
jle
xor
les
cmpsl
inc
sub
repnz
and
icebp
test
and
fiaddl
sub
jmp
pop
jb
sub
xor
ljmp
out
stos
mulb
int3
rcll
in
pop
sbb
adc
lods
pusha
mov
out
sub
stos
ss
sub
fiaddl
jmp
cmp
push
push
sub
add
sbb
cmp
loope
out
inc
inc
pop
pop
or
xlat
mov
mov
and
or
repnz
cmp
push
mov
out
adc
loop,pt
pop
cmc
inc
daa
mov
inc
lock
outsb
rcll
movsb
into
lock
or
arpl
pop
andb
cmp
inc
mov
xchg
je
sub
dec
sub
enter
cs
out
out
rclb
cwtl
sbb
pop
cs
in
adc
xor
cmp
outsb
subb
test
rcll
jo
jge
into
mov
mov
pop
into
mov
add
daa
stos
cmp
xchg
sti
out
push
jae
bound
ret
divb
mov
mov
stc
xor
shll
in
jg
xchg
xchg
int3
orl
jl
add
pop
xchg
adc
sub
leave
adc
cmc
and
ret
push
lahf
insb
xchg
not
adc
pop
or
adc
push
lret
sti
mov
mov
pop
and
and
adcb
push
sahf
cmp
and
data16
or
cmc
jns
sbb
mov
addr16
jp
test
lock
aam
imull
fbld
cmpl
jne
aam
stc
sbb
movsw
sub
es
sahf
cmp
dec
and
daa
jbe
aaa
lea
lcall
xchg
pop
int
adc
jbe
mov
enter
add
dec
cmc
adc
daa
pop
lahf
pushl
lock
stos
fisttps
stos
mov
clc
jl
and
cs
lods
xlat
aad
ss
into
dec
and
add
or
aas
loop
clc
and
jecxz
cmp
and
daa
ss
ret
push
in
into
mov
repz
xorl
xlat
loopne
inc
dec
out
inc
fsts
pop
daa
cmp
sar
push
push
popf
sahf
push
loopne
arpl
ret
mov
adc
scas
pop
or
mov
sub
jp
adc
cmp
pop
lea
jg
sbb
aam
loopne
mov
mov
and
in
fs
sub
cmp
cmp
xchg
mov
xor
pop
pop
xchg
sub
push
adc
cwtl
pop
jnp
movsl
in
xor
cmpb
inc
pop
add
or
cmpsl
jne
cltd
mov
jge
shl
push
cmp
cwtl
bound
xchg
ja
out
dec
adc
int
push
jge
xchg
pop
pop
and
or
lods
jnp,pt
jge
test
sub
lahf
dec
fsubrs
pop
ljmp
scas
test
aam
bound
fsubl
xor
mov
nop
jno
xor
xchg
ljmp
sti
or
fwait
pop
pushf
mov
das
out
outsl
cmpsb
lcall
push
xchg
mov
pusha
inc
roll
paddusb
movsb
or
loop
les
or
jnp
pop
repnz
ds
mov
sub
push
sub
or
enter
out
push
xor
pop
inc
and
push
push
pop
mov
in
mov
add
enter
add
sub
pusha
les
cmp
adc
fildl
or
lret
sbb
push
sub
mov
lret
in
cltd
mov
lret
out
pop
adc
mov
add
jg
iret
jg
mov
sar
inc
stos
scas
loopne
push
cli
jg
push
cmp
sarb
xchg
mov
scas
adc
addl
push
xor
or
cltd
popf
xchg
repnz
lods
popa
mov
in
dec
cmp
sub
pop
inc
hlt
mov
mov
inc
in
stos
push
pop
aas
outsl
jecxz
adc
daa
push
outsb
adc
in
cmp
iret
sahf
jne
outsb
cmpsl
mov
cli
lret
mov
xchg
cmpb
adc
mov
dec
out
inc
adc
and
cmpsb
add
cmc
in
into
xor
out
loop
jg
mov
fldenv
lds
jb
jp
in
std
xor
out
in
jnp
out
out
arpl
and
cmp
cli
mov
pop
push
xlat
mov
stos
jo
cli
repz
jl
rcrb
daa
aaa
lret
andb
or
sub
or
cmpsl
mov
mov
inc
dec
fdivr
das
push
ljmp
mov
pusha
sub
sbb
cmp
pop
ret
adc
xchg
addr16
into
jp
pop
xor
xchg
lahf
inc
cwtl
cmp
sub
push
daa
push
insb
movsl
dec
hlt
inc
or
lds
idivl
test
adc
inc
push
cmp
lock
in
add
shrl
cmp
mov
addb
scas
lret
fcmovbe
or
mov
cld
sub
jns
int
nop
in
lret
or
xchg
push
jns
push
lret
add
add
and
iret
fs
data16
test
push
push
sbb
movsb
jne
mov
insl
and
mov
je
adc
add
in
fistl
add
push
repnz
lock
sub
mov
cmp
sub
mov
cs
sarb
lock
lret
in
sbb
pop
jle
adc
xor
mov
and
je
push
dec
out
sbb
push
jg
arpl
mov
inc
xor
incl
stos
inc
fsts
sbb
andb
xor
pop
adc
int3
ja
xor
xor
gs
jp
sub
add
ret
arpl
hlt
sbb
stos
in
pop
push
push
jge
inc
imul
sub
mov
fildl
ljmp
mov
mov
icebp
rcrb
mov
loop
or
push
push
fisttps
negl
jae
xor
inc
dec
fwait
mov
or
sbb
popa
sbb
insb
pop
inc
call
fstps
icebp
popf
inc
and
adc
and
rclb
pop
cmp
pop
lods
cmp
sti
mov
sbb
outsb
sub
dec
aad
ja
ror
fcmovnu
sbb
mov
push
sub
je
mov
in
pop
loope
inc
pop
dec
call
sarb
lret
js
fimull
push
sar
testb
mov
cwtl
adc
mov
popa
ja
mov
dec
hlt
or
mov
xchg
call
xor
mov
add
bound
jle
fs
pop
repnz
xorl
mov
mov
xchg
fstpt
mov
es
xor
cmp
repnz
push
pusha
push
cmp
aam
mov
aam
and
dec
jno
shlb
jmp
repz
adc
and
dec
pcmpeqw
rclb
ja
lea
ja
dec
outsb
rcl
jns
sub
aaa
mov
mov
pop
addr16
shl
and
loope
cld
or
and
and
pusha
push
cmp
add
cmp
loop
and
or
aam
in
cli
loopne
lret
add
rcrl
popf
cmp
mov
inc
stos
xlat
inc
cs
inc
aas
push
fdivrl
adc
mov
jne
ret
xor
adc
lret
xchg
lret
adc
add
add
xchg
sbb
scas
mov
xor
movsb
test
out
js
cmp
or
mov
cmpsl
mov
pop
cs
mov
add
mov
jae
arpl
mov
cli
sbbb
mov
pushf
mov
and
xchg
aas
lcall
xor
jb
daa
mov
mov
nop
sub
test
aas
lods
inc
int
hlt
scas
int3
adc
rclb
dec
stos
or
rolb
push
mov
nop
jge
sub
mov
sti
leave
lret
cs
filds
dec
add
jg
insb
pop
add
movsb
lock
bound
ljmp
sub
inc
xor
xchg
lock
dec
cwtl
test
xchg
push
sbbb
lods
packuswb
inc
pop
icebp
out
lret
pop
stos
fldt
aaa
cltd
inc
lods
out
xchg
scas
adc
pushf
xor
outsl
cmp
insb
inc
jnp
inc
roll
faddl
gs
mov
push
subl
aaa
outsb
mov
pushf
bound
and
or
out
mov
scas
xlat
lahf
scas
jmp
mov
movsb
test
lret
pop
imul
cmp
jae
into
nop
gs
call
rcrl
stc
loopne
xor
pop
sub
and
lea
mov
xor
adc
je
inc
xor
aad
xlat
and
stos
lret
lock
or
xchg
xor
push
xchg
test
pop
push
arpl
or
sahf
lea
subb
hlt
in
inc
or
add
orl
jp
lea
inc
inc
inc
dec
xlat
or
out
sahf
jns
cld
fstl
push
sub
xor
out
xchg
mov
cwtl
pop
loope
sti
fcoms
and
sub
adc
push
cmpl
fnstcw
lret
dec
cld
aam
mov
jmp
aad
daa
push
fmuls
popl
jl
inc
jae
inc
mov
nop
adc
pop
int
iret
ret
data16
add
sub
es
fnstenv
mov
out
add
xchg
pop
push
or
xchg
add
sbb
daa
inc
into
mov
clc
clc
sbbl
dec
clc
mov
ja
push
dec
inc
pop
sbb
mov
cltd
cmp
sbb
cmpsl
rcl
push
loop
scas
mov
push
pop
lock
iret
inc
or
imul
mov
sub
adc
mov
popf
mov
mov
dec
xlat
divb
inc
movsb
sbb
add
test
pop
or
dec
dec
sbbl
std
sub
fwait
xchg
xchg
add
jmp
adc
push
xchg
arpl
or
sbb
test
mov
fwait
repnz
leave
pop
iret
dec
jne
xor
shrb
rorl
rolb
mov
shll
stos
sbb
lds
js
xor
sub
cmp
pop
mov
and
subl
pop
sbb
sbb
inc
mov
xor
xor
fistps
xchg
mov
out
sub
push
xchg
mov
push
sbb
sub
loop
repz
push
dec
push
rolb
fidivl
jb
sbb
pop
enter
and
fdivrs
mov
xor
push
inc
pop
or
dec
sbb
aad
or
cmp
or
das
sub
inc
or
adc
mov
rcl
in
in
jg
push
lea
test
dec
push
push
loop
and
stc
push
mov
pop
stos
aam
jg
stos
mov
add
sbb
je
shlb
cmc
inc
in
xor
int3
mov
cmpsb
test
shlb
jb
leave
xor
pop
inc
mov
adc
scas
adc
or
sti
pop
dec
sub
or
ljmp
xor
pop
outsl
in
inc
push
jnp
cmc
push
mov
hlt
pop
mov
jmp
add
cli
leave
inc
stos
jmp
sub
lds
das
fisubrl
lret
add
ds
popf
lret
pop
push
jl
mov
add
mov
ret
pop
shr
imul
clc
addr16
dec
pop
sbb
daa
add
dec
incb
insl
les
fsubl
mov
aaa
fsubr
and
xchg
iret
js
addr16
jae
dec
sbb
jno
jae
sbb
xchg
repz
int
ret
loopne
push
fwait
popf
nop
js
popf
cmp
sub
mov
jne
hlt
stc
ret
mov
cmc
push
or
movsb
inc
pop
jno
lahf
sti
nop
push
push
fs
in
xorb
out
into
shlw
push
nop
mov
cmpsb
loop
inc
lea
cmc
mov
out
aaa
scas
gs
xchg
pop
repnz
sub
iret
sub
cmp
or
sub
popa
aaa
sub
sbb
cmp
push
ret
xlat
and
les
or
clc
mov
sbb
out
pusha
aaa
enter
sbb
dec
adc
inc
pop
cli
insl
int
jl
push
or
cwtl
xor
fidivrl
pop
rcrl
rcrl
push
pushf
and
push
cmpsb
mov
adcl
cs
cmpsl
call
cmp
and
mov
cmp
inc
and
inc
jnp
call
sub
dec
cmpsb
lcall
push
push
int
push
and
push
aam
inc
sub
add
ror
sub
in
fld
fbld
and
icebp
adc
inc
cwtl
jmp
js
cmc
repz
movl
out
mov
sbb
push
in
sbb
jl
xor
jecxz
sub
pop
andnps
aad
push
jmp
dec
lcall
imul
fs
pop
sub
sbb
std
pop
ret
bound
mov
sti
lds
xor
int
out
or
jbe
out
cmp
push
mov
pop
jg
lods
push
jno
test
outsb
mov
fadds
pop
lret
xchg
mov
push
dec
xor
push
popf
cmp
cmp
outsl
jmp
push
fisubrl
movsl
add
mov
mov
adc
icebp
test
mov
andb
adc
mov
push
aam
insb
push
fisubs
mov
stos
iret
sbb
inc
scas
add
out
sbb
cmpsb
xchg
mov
pop
bound
xchg
mov
mov
cmc
mov
loope
in
imul
sbb
push
or
movsl
push
mov
inc
stos
icebp
mov
lea
adc
jge
cli
mov
or
bound
jnp
cmp
adc
lock
lret
jnp
out
push
int
mov
insl
sub
clc
gs
jnp
mov
inc
clc
mov
mov
int
int
test
jl
aaa
xchg
sub
add
pop
cmp
lds
push
push
fiaddl
push
adc
xchg
mov
mov
in
iret
outsl
les
sbb
call
movsb
and
sbb
or
rcrb
lods
test
xlat
icebp
dec
xchg
add
jle
insb
pop
mov
mov
sub
fcoms
sub
cltd
popf
fisttpl
cld
jmp
push
mov
xchg
clc
jl
out
cmp
icebp
or
push
mov
xchg
fwait
pop
xlat
imull
cli
mov
jbe
orl
gs
fwait
add
les
xchg
leave
inc
fldcw
gs
jmp
sub
ds
add
divb
js
and
notl
notb
ds
es
pop
dec
ljmp
hlt
outsb
leave
jecxz
inc
xchg
sub
push
or
or
loope
divl
imul
cmp
pop
rcrl
shl
xor
pop
cmp
xchg
mov
lods
xchg
lret
sbb
xlat
jnp
jno
add
adc
or
mov
aad
stos
orl
pop
loop
aaa
ret
cmp
pop
or
push
jb
mov
inc
xchg
jmp
add
adcb
push
or
leave
test
mov
les
push
pop
imul
xor
imul
cmp
sub
add
push
cmc
in
in
jae
push
int3
mov
testb
add
mov
das
pop
sbb
insb
lcall
sti
movsb
outsb
fs
arpl
leave
in
jp
mov
rorb
js
fcmovnbe
push
or
imul
jmp
stos
popf
dec
push
es
xlat
pusha
mulps
dec
xor
xchg
out
in
leave
xchg
mov
pop
lods
push
adc
jno
mov
fmull
mov
mov
pop
sbb
into
clc
mov
jnp
mov
sbb
jp
or
and
nop
stos
mov
enter
sti
ret
pop
mov
adc
pop
xchg
jns
call
mov
fstl
xor
fidivrl
mov
sbb
lods
mov
sbb
inc
lea
dec
aaa
jmp
loopne
fiadds
je
pushf
add
lods
dec
pop
jbe
adc
imul
sbb
lock
mov
and
push
in
lahf
rcrl
jno
push
jge
sbb
mov
stos
loop
add
xor
leave
cmpsb
cmp
shrl
push
mov
jle
mov
clc
movsl
rcrl
shrl
jbe
push
iret
jl
adc
sbb
ss
cmp
insl
fs
mov
jl
jmp
les
sbb
out
out
lea
add
arpl
cmp
ficoml
sahf
pop
insl
or
das
iret
mov
push
cmp
xchg
dec
std
push
scas
cmp
push
ss
in
xchg
sub
push
push
jl
push
cmp
xor
ja
sub
icebp
fbld
shlb
fldenv
and
push
sub
adc
cs
pop
daa
call
pop
cmp
xor
pop
sub
push
movsb
loope
jnp
test
cmp
or
js
fwait
in
in
and
adcb
xchg
mov
icebp
jle
loop
fucomp
ss
imul
mov
push
movsb
int3
mov
js
rorb
insl
test
imul
lret
jo
popa
push
sahf
notb
ljmp
hlt
out
clc
push
ja
xchg
bound
ja
cli
scas
xor
enter
lock
repz
ss
mov
push
add
out
loopne,pn
sub
mov
stos
cmp
je
cltd
rolb
ljmp
out
out
fistps
mov
xor
and
pop
push
xchg
jge
fwait
inc
aas
cmp
sbb
inc
call
and
leave
adc
mov
sar
pop
xor
mov
jne
popf
lcall
push
pop
mov
push
mov
mov
inc
loopne
out
add
in
xchg
popa
rcll
mov
insw
out
sbb
push
push
negb
jmp
test
movsl
pop
rclb
pop
cmp
push
cltd
jnp
push
ja
mov
sbb
push
mov
mov
fidivrs
inc
seta
pushf
leave
jp
or
dec
pop
xor
stos
fsubr
test
repnz
push
popa
dec
mov
pop
push
mov
call
mov
jns
cli
push
sbb
jb
scas
jge
mov
or
push
shll
mov
ds
insb
pop
out
lods
jbe
outsb
pop
inc
xor
loopne
movsl
mov
push
dec
or
pop
andl
sbb
aas
adc
jnp
cmpsl
inc
idivb
mov
xchg
iret
daa
add
lret
xchg
inc
dec
test
dec
inc
fdivrl
cmpsl
xchg
or
xchg
mov
sbb
xor
aam
fsub
nop
jp
je
push
mov
out
int
and
pop
adc
adc
cmpsl
insl
aam
mov
ss
add
ret
and
or
in
xchg
fwait
mov
mov
in
mov
or
push
xor
lock
and
in
pop
sub
movsb
pop
mov
xchg
mov
fsubp
div
mov
sbb
xor
inc
in
sbbl
cmp
inc
in
push
mov
sbb
cwtl
loopne
cmp
inc
loopne
sub
fiaddl
movsl
mov
loop
or
adc
in
lock
fwait
fs
sbb
stos
mov
lahf
mov
sbb
addr16
rclb
mov
xor
fwait
fs
outsb
jnp
rcrl
push
loopne
or
int
push
test
andb
pusha
rcrl
mov
push
mov
sub
pop
dec
je
mov
insl
jno
rorl
push
pop
movsb
sub
push
add
jnp
inc
and
mov
js
and
das
xchg
push
dec
je
fsubrs
jnp
and
xchg
dec
cmp
cmp
dec
jb
lea
repz
flds
mov
nop
rolb
test
das
data16
jge
loope
adc
movsb
xchg
inc
jnp
or
dec
and
ja
aas
je
call
fistps
ja
repnz
outsb
leave
inc
addl
xor
and
cmpsb
push
mov
fildll
pop
data16
cmp
movsb
mov
decl
jl
pop
clc
jle
in
imul
fsub
orl
sbb
dec
lock
xchg
xchg
cmpsb
scas
stos
cltd
inc
sub
ret
xchg
inc
lahf
jbe
es
pop
mov
pop
ds
sbbb
push
add
jl
into
sar
fdivrp
and
pop
pusha
or
xor
jle
lods
les
xchg
mov
fwait
sahf
add
testl
cltd
jge
loop
jno
in
inc
ss
ret
and
fs
mov
test
add
popf
popa
sti
bswap
in
std
add
out
fs
addr16
lock
fadds
xorl
bound
les
sub
mov
movsb
xchg
xor
push
ficoms
ja
jl
bound
ficompl
filds
push
mov
sbb
or
popa
add
and
and
ss
lods
sti
jo
cli
mov
jae
mov
mov
repz
cmc
mov
ret
mov
xor
inc
popf
ljmp
adc
popa
fsubrp
sti
dec
insl
lcall
movsl
insb
and
mov
mov
loope
push
pop
mov
pop
xchg
movsl
or
xor
cmp
pushf
xchg
xchg
lods
pop
icebp
mov
imul
inc
lcall
call
pop
test
inc
outsb
fxtract
hlt
cmp
mov
dec
shrb
push
xchg
pop
in
ret
cmp
sbb
fmuls
cltd
cs
out
dec
inc
sub
adc
sub
sub
xor
and
and
push
xchg
push
sbb
icebp
ss
xor
jne
notl
int3
pop
jle
shufps
cmc
ret
lock
xchg
xor
xlat
sbbl
mov
sbb
data16
sbb
jmp
xchg
leave
xlat
lods
jbe
sbb
mov
cwtl
xor
fstl
adc
mov
add
daa
dec
stos
sbb
push
adc
dec
outsb
cmp
cmpsb
pushf
push
xrelease
outsb
je,pt
dec
push
push
std
push
ret
lods
sub
outsb
pop
mov
inc
cmp
inc
loope
mov
lds
add
jb
cmc
repz
lods
sub
sbb
repz
mov
sub
xchg
pop
sbb
rcr
inc
aas
inc
push
adc
bound
inc
mov
push
sub
pop
jnp
in
int
js
lahf
cmpsl
imul
and
iret
push
dec
mov
cli
das
or
ficompl
add
xchg
xor
inc
ret
xchg
push
or
jle
in
xchg
cld
pop
insl
fists
fsubr
les
sub
jb
bound
outsb
xchg
testb
jo
jge
mov
mov
sub
ret
sub
cmpsl
and
dec
jb
jecxz
and
insl
xor
cltd
into
rcrb
stc
in
inc
cmp
mov
test
in
xor
xchg
xor
imul
and
adc
add
out
pop
add
add
insb
add
call
jo
je
mov
imul
mov
and
or
mov
scas
enter
add
mov
pop
inc
out
and
cmp
mov
shrl
mov
std
inc
sub
mov
outsl
and
xchg
adc
pop
out
adc
mov
call
ja
nopl
call
lahf
aam
incl
int
xchg
test
cltd
pop
test
dec
jbe
mov
out
add
out
xlat
fistps
add
iret
adc
jp
jmp
push
sti
sahf
push
pop
outsb
dec
mov
fldl
enter
lods
xchg
mov
sub
and
shll
testl
pusha
push
dec
cmp
sub
and
ficoms
jle
jnp
push
mov
jbe
and
fs
jp
ss
mov
pop
adc
adc
jecxz
lods
and
out
shrb
jl
jg
pusha
mov
adc
cmp
daa
aas
movb
in
xchg
dec
dec
xor
in
inc
or
test
rclb
mov
cmp
cmc
sti
mov
add
mov
imul
lock
xchg
mov
xchg
jg
std
imul
ficoms
jg
mov
push
push
mov
sbb
mov
in
pop
scas
push
xchg
push
sub
xor
lcall
jnp
out
pop
dec
cmp
sbb
cmpps
aam
pop
add
cli
fscale
hlt
sbb
xchg
mov
aam
adc
out
add
sti
ljmp
into
mov
xor
mov
cli
add
push
push
mov
fwait
and
add
push
jne
sub
test
sbb
mov
into
out
mov
test
mov
mov
out
adc
aaa
out
sbb
push
je
popa
or
pop
les
js
adc
sbb
sbb
cmp
push
adcl
out
addb
dec
dec
filds
jo
repnz
data16
cld
int
and
push
ja
loopne
stos
cmpsb
mov
cwtl
insl
mov
cmp
insl
out
les
push
js
sbb
add
mov
outsl
add
add
mov
aad
mov
std
sbb
popa
fdivl
jge
stos
or
add
ds
cwtl
xchg
cwtl
jno
fistpll
xorl
orb
scas
stos
sub
clc
rclb
lret
lods
repz
in
mov
rolb
stos
inc
mov
mul
in
mov
andb
std
fwait
repz
gs
adcl
repz
pop
cmpsb
add
aaa
xlat
xor
xchg
push
sub
repnz
sbb
sar
push
jecxz
mov
mov
out
mov
xor
cld
into
sub
pop
shrl
aas
inc
outsl
cmp
loope
mov
adc
dec
jecxz
sub
fisttpll
dec
xor
subl
jle
xor
push
mov
sbb
outsb
or
js
imul
adc
xchg
out
cwtl
xchg
pusha
fiaddl
or
pop
pushf
inc
jb
stos
inc
outsl
daa
xchg
int
and
leave
mov
imul
jno
int3
mov
xchg
aas
add
icebp
scas
lcall
test
rolb
pusha
test
fisubs
lds
es
xchg
xchg
jp
sub
lds
ja
sarb
push
push
lahf
xchg
pusha
mov
sbb
inc
pop
xchg
lock
cmpsl
push
or
stc
ret
sub
popa
inc
lock
xchg
and
pop
mov
inc
pop
xlat
ss
mov
adc
mov
cmp
push
and
dec
pop
pop
sub
aam
es
xor
int3
mov
jno
pop
sub
lock
jecxz
mov
push
mov
and
fsub
sbb
sub
pop
ret
pushf
or
cmp
arpl
arpl
movsl
mov
dec
and
xchg
ja
mov
or
data16
cmc
cli
cmp
pop
and
repz
sub
sub
or
loope
push
dec
mov
sahf
pusha
cmp
pop
mov
aam
and
psadbw
hlt
repz
imulb
cmp
mov
neg
mov
mov
push
das
mov
sbb
jnp
das
add
adc
sbb
movsl
jp
test
jecxz
dec
fs
mov
in
cmp
xchg
imul
adc
pop
sar
test
pop
jl
adc
dec
outsl
pushf
aaa
pop
rcll
scas
mov
addr16
divb
xchg
adc
gs
sub
scas
jbe
push
pop
test
hlt
xchg
out
test
mov
out
es
shll
pop
lea
xchg
mov
push
scas
push
or
push
hlt
dec
pusha
mov
and
mov
cmp
sub
jmp
outsl
sarl
xor
and
test
shll
mov
ljmp
aas
mov
xchg
push
mov
jge
pop
mov
sbb
out
data16
fabs
sbb
xor
fisttpll
stos
outsl
fisttpll
arpl
push
add
xchg
and
push
sbb
iret
or
xchg
inc
cmp
ret
outsl
mov
int3
movsl
and
jle
push
add
mov
jmp
dec
nop
xchg
lea
mov
xor
pop
pop
cmc
out
push
xchg
rcr
aas
xor
xchg
lea
and
dec
xlat
pusha
aaa
cld
mov
jecxz
jb
push
cmp
pop
repz
test
mov
shlb
aas
out
out
ljmp
mov
lcall
sub
ljmp
xchg
ret
lds
jp
pusha
inc
movl
adc
mov
pop
aas
sbb
add
movsb
mov
jecxz
dec
sbb
mov
add
mov
bound
aam
fstpl
test
loopne
inc
mov
pop
sub
loop
mov
fcom
addr16
mov
mov
dec
mov
fnstenv
jnp
mov
nop
sub
aaa
xor
ss
xchg
cmpsl
popf
dec
icebp
xor
adc
aad
or
enter
xchg
ficoms
mov
stos
sub
iret
out
dec
pusha
data16
out
aad
pop
pop
and
outsl
mov
leave
aaa
add
sbb
out
mov
adc
shll
xchg
jb
scas
mov
pop
mov
shll
mov
lret
lds
xor
lea
clc
cmp
mov
jmp
shl
jae
test
mov
mov
addr16
out
push
nop
mov
lcall
jae
cmc
push
xchg
roll
dec
jb
jp
popf
ss
sub
xorl
js
scas
ficoms
or
sub
enter
stos
lock
fwait
outsb
xchg
icebp
nop
mov
mov
jno
mov
xchg
insl
stc
into
push
mov
jle
mov
jp
xchg
aaa
out
add
pop
xchg
xor
or
jbe
mov
fld
push
nop
iret
lret
aas
or
xor
dec
mov
fdivrp
sbb
mov
ljmp
add
sarb
fimull
adc
mov
cmc
pop
inc
push
adc
fsubr
subb
lcall
cmp
cmp
adc
stc
outsl
add
lea
mov
jae
stos
adc
fbstp
loope
sbbl
dec
adc
gs
stos
mov
lcall
loop
ret
enter
aaa
sahf
ss
fsubl
adc
adc
stc
popf
mov
mov
push
icebp
in
mov
fs
clc
push
shrb
js
movsl
out
sbb
mov
popa
out
ret
fists
roll
lods
mov
bound
in
cwtl
scas
push
jno
pop
mov
fwait
call
add
pop
or
dec
fcompl
mov
lret
lods
sub
jmp
pushf
cmp
sub
mov
sti
mov
jnp
mov
push
movsl
out
push
out
cmp
push
int
mov
jl
repz
push
clc
test
sbb
fsubrp
addr16
add
adc
ja
jb
mov
fs
and
test
push
xchg
inc
pushl
mov
daa
xchg
pop
dec
in
pusha
insl
sbb
iret
mov
add
lret
pop
mov
jnp
loopne
and
popf
mov
je
or
pop
add
out
mov
push
dec
mov
test
mov
inc
stos
and
push
and
incl
inc
add
add
scas
ljmp
push
rcr
fdiv
aaa
jecxz
and
popa
hlt
push
fimull
test
adc
sub
mov
fsubr
lret
nop
out
test
pusha
sub
mov
or
adc
sbb
xchg
push
movb
adc
pop
ss
jno
popa
jo
xorb
in
xchg
xlat
push
pop
cmc
addr16
repz
ja
pushf
test
into
pushf
lods
cld
xor
loop,pn
mov
mov
dec
or
cmp
push
sahf
repnz
and
shr
xor
dec
aas
xchg
subb
and
fiaddl
ljmp
mov
xchg
mov
inc
mov
xchg
jbe
stc
lcall
shlb
jno
push
xchg
adc
or
xor
ja
xchg
adc
inc
lcall
js
divl
hlt
sti
mov
aad
jno
std
jns
ret
pushf
icebp
loopne
pop
mov
fdivrl
or
mov
cwtl
and
test
fisttps
mov
in
mov
movsl
in
sbb
iret
repz
lcall
xchg
xor
cmp
shrb
cmpsl
dec
add
xchg
fstpl
insl
cmp
xor
inc
loope
push
aam
push
xor
cmp
jnp
jns
mov
push
aam
dec
xchg
pop
push
fistpll
mulb
stos
sub
int3
and
push
add
xor
xor
sbb
aam
mov
mov
xchg
and
lock
push
hlt
or
mov
sti
pop
or
sub
test
mov
pop
mov
sub
adc
add
add
mov
cmc
outsl
cld
add
dec
ret
mov
adcb
fucomp
inc
stos
push
decb
or
lcall
jecxz
loop
fstpt
pop
sbb
dec
loop
out
mov
inc
mov
pushf
or
test
sbb
stos
push
add
int
mov
cmp
dec
cmp
mov
lret
pushl
imul
and
xchg
lods
shll
mov
push
xor
cmp
ljmp
push
add
ja
hlt
dec
inc
cmpsb
jnp
fs
fstp
push
fcomps
xor
push
ljmp
clc
mov
push
pop
and
fisttps
pop
inc
jae
xchg
pushf
dec
movsb
push
xor
and
loop
mov
ret
mov
repz
movsb
jbe
mov
cli
pop
in
dec
clc
jg
cs
rclb
test
and
in
out
out
cmp
lret
sub
pop
sub
cmpsl
adcl
sub
mov
add
push
fadd
xchg
popf
repnz
test
and
bound
jo
out
fiaddl
sub
jnp
push
fwait
dec
pop
mov
mov
sub
roll
stos
stos
enter
xlat
ret
lret
sbb
popf
ja
scas
cmpsb
push
popa
sbb
pop
cmp
xlat
fstl
pop
popf
mov
adc
js
ffree
adc
xor
sti
sar
sbb
push
iret
lahf
add
cmc
in
mov
movsb
mov
xchg
adc
data16
int3
mov
push
jge
outsb
ss
and
cmc
jae
sbb
insb
mov
shl
xorb
jge
push
call
cmpsl
or
ljmp
pop
sti
sbb
fmuls
adcl
movb
sti
xor
dec
out
push
les
aas
lret
sti
insb
dec
outsb
stos
mov
lods
aas
push
inc
cld
or
ljmp
out
ja
xor
hlt
fcompl
addr16
push
jns
dec
int
iret
and
sub
scas
push
mov
fcoml
jae,pn
int
std
mov
add
mov
daa
dec
mov
pop
in
xchg
xlat
adc
mov
push
int3
xchg
and
sbb
mov
or
cwtl
sub
rclb
pop
fisubs
or
ja
imul
mov
ds
fstpt
mull
neg
test
ss
movsl
cld
lods
test
pop
jne
sub
adc
jae
adc
mov
loope
push
nop
dec
shl
add
rcll
adc
clc
fmul
movsl
adc
xchg
aaa
or
inc
mov
xorl
push
rcrb
leave
lret
pushf
push
pop
add
xchg
leave
pop
fcoms
dec
lods
loopne
ljmp
sbb
pop
fists
fistps
sti
cwtl
push
stos
push
mov
pop
jnp
lea
mov
ljmp
arpl
dec
mov
movsb
mov
das
sbb
int3
push
mov
pop
jb
jecxz
dec
out
lcall
xchg
mov
std
test
rcll
loope
icebp
push
ficoms
out
sub
ljmp
mov
dec
sbb
or
jge
mov
cltd
rcr
outsb
cli
mul
jg
xchg
int3
andl
push
or
sahf
lock
hlt
leave
dec
push
pop
dec
xchg
pop
add
mov
jae
mov
cmp
cmc
add
and
repnz
int3
sbb
in
cs
enter
jl
adcl
out
pop
cwtl
or
fists
push
jnp
jmp
xlat
pop
push
or
sbb
int3
cmpsl
cmpsl
fnstcw
mov
mov
popf
push
xlat
sub
imul
stc
loopne
cmp
mov
sbb
xor
add
dec
fstpl
jl
sbb
cmp
outsl
push
enter
or
je
dec
leave
fsubp
pop
in
test
mov
pop
test
or
movsl
sbb
or
in
scas
jno
cmpsl
cld
fld1
push
enter
mov
jb
in
sub
cmc
ds
ja
cwtl
ret
fiadds
imul
scas
inc
jmp
ret
mov
adc
mov
mov
inc
lds
xor
lcall
dec
sbb
pusha
rcrb
cmp
sub
leave
mov
jge
out
jge
add
mov
loop
pop
insl
sbb
mov
test
shll
test
jne
lods
lods
or
push
int3
pop
hlt
mov
pop
daa
jae
je
push
data16
lret
lret
xchg
jle
and
adc
mov
mov
orl
mov
ss
lock
or
cmc
pop
sub
or
out
lahf
data16
jl
sbb
push
es
lret
jno
rorb
cli
shll
adc
es
and
push
lahf
push
repz
pop
les
ljmp
pop
imul
ljmp
push
mov
push
es
xor
fiadds
mov
jmp
sub
pop
movsb
sub
push
outsl
sub
xchg
stc
push
int
sbb
cmp
xchg
repnz
ja
dec
xor
imulb
inc
jno
neg
push
adc
inc
in
popf
repnz
lret
add
xor
lods
scas
push
sahf
add
push
cltd
lods
jg
inc
filds
icebp
jb
xor
call
inc
stos
es
lods
sbb
bound
cmpsb
pop
lret
pushl
or
in
fisubl
and
xor
sahf
add
xorb
jmp
aad
lods
or
addl
or
push
or
inc
std
mov
or
sub
push
push
adc
popa
movsb
mov
inc
pop
pop
xor
mov
mov
fs
sarb
or
mov
insb
xchg
sbbl
dec
out
push
out
imul
or
dec
mov
scas
cmp
popa
or
fcmovne
cmp
rcrb
xor
call
bound
insl
mov
mov
jge
fcoml
mov
jns
pop
es
and
or
sahf
push
xor
xchg
pop
push
icebp
sub
cmpb
xchg
fimuls
mov
and
iret
gs
jns
add
js
aam
mov
adc
out
sub
cli
add
and
mov
stos
xor
out
xchg
repz
push
push
sbb
jmp
fiaddl
in
jne
popf
pop
inc
cmp
dec
sub
dec
cmpl
xor
fidivs
imul
sarb
add
xchg
jno
jmp
js
call
cmp
mov
mov
xchg
out
shl
leave
pop
scas
cmp
lcall
lods
adc
fdivp
cwtl
push
loop
es
sub
mov
and
jae
icebp
adc
mov
pop
mov
inc
bound
enter
inc
push
sbb
jne
adc
push
std
lret
mov
jecxz
jno
dec
cltd
sti
fwait
dec
mov
add
adcb
div
out
xchg
mov
popa
aas
lcall
loope
fstl
mov
cmp
or
or
mov
dec
cmp
sub
fisubrs
dec
push
scas
test
sti
pop
mov
push
les
pop
addr16
scas
daa
fildll
mov
lea
fadds
jno
fldl
in
shll
in
lret
cmpsl
pop
cld
shlb
lods
je
ret
and
xchg
inc
icebp
jge
stos
adc
clc
cld
cmp
or
enter
pop
mov
mov
inc
test
fsubl
mov
mov
lds
pop
xchg
jnp
dec
mov
lcall
negb
call
pusha
scas
xor
cli
cmpsb
aas
jl
xlat
divb
les
sbb
cwtl
leave
test
stos
push
cmpsb
pop
sti
or
mov
out
dec
in
jbe
ss
insl
test
ret
pop
mov
cmp
out
dec
cmp
clc
out
cmpsl
mov
push
das
sbb
ret
mov
mov
push
aaa
imul
jno
out
add
adc
adc
mov
rorb
pop
inc
arpl
stos
push
outsb
mov
ds
icebp
mov
jno
mov
cmc
pop
inc
xor
in
nop
xor
stos
cli
in
push
sbb
lods
stc
and
inc
into
lods
or
pop
push
mov
out
inc
mov
arpl
jnp
and
fs
daa
mov
movzwl
jge
jns
or
mov
bound
je
out
flds
bound
inc
rolb
bound
enter
inc
mov
jbe
xor
adcl
xchg
popf
xchg
mov
lock
lret
cld
sbb
mov
shrl
inc
repnz
or
mov
bound
pusha
sbbb
shlb
test
scas
mov
popf
insb
ljmp
xchg
dec
fcompl
in
xorb
jns
fnstcw
jp
jae
push
xorb
sar
cmpl
adc
in
sahf
loope
imul
insl
or
dec
stos
pop
das
pop
sbb
cmpb
mov
das
xchg
rcr
adcb
in
insb
jb
shlb
push
mov
dec
aad
cmc
ret
cmc
cmp
mov
xchg
nop
andb
cmp
xor
jmp
mov
scas
push
aaa
jle
lods
jmp
les
and
sbb
jle
xchg
mov
dec
and
mov
mov
outsb
and
xlat
inc
dec
xchg
cmp
cwtl
movsl
adcl
insl
pop
shr
push
xchg
xor
and
or
ljmp
inc
ja
cmpsb
in
dec
popf
xor
xchg
insb
adc
repz
mov
lock
push
pop
cli
jno
mov
or
jne
ret
in
push
pop
push
movhps
mov
nop
sbb
xchg
jmp
jne
inc
pop
fstl
into
sbb
js
leave
outsl
dec
rorb
lret
dec
cmp
xchg
and
pushf
mov
or
sbb
adc
push
and
stc
sub
mov
lret
nop
cmp
push
dec
dec
inc
das
mov
lods
jecxz
in
dec
mov
or
cld
fucomp
xor
sarl
cs
test
test
jbe
jns,pt
or
sub
jmp
lea
int
sub
dec
daa
lahf
fdivrl
cs
int
in
mov
fucomi
int
xchg
jb
test
inc
mov
dec
out
push
mov
mov
adc
mov
dec
fs
shl
lcall
add
aad
dec
std
popf
mov
fs
mov
outsl
test
add
jae
inc
jno
outsb
mov
mov
gs
cmpsl
aas
imul
lcall
pushf
pop
sti
mov
gs
inc
gs
insl
or
mov
imul
rcll
cmp
cmp
lret
test
cmp
test
int
push
fucomi
cmp
movd
push
mov
into
xchg
aam
mov
cmp
push
cmp
push
cmp
mov
push
cmp
frstor
adc
clc
mov
imul
das
das
popa
rorb
or
dec
repnz
loop
mov
lods
movsb
xor
cmp
fstps
sub
mov
mov
lds
cmp
add
and
shrb
pop
add
sahf
push
stc
cmpl
daa
mov
aam
rep
daa
inc
sbb
dec
dec
lock
adc
and
scas
xchg
jo
xchg
dec
fstpl
fidivrs
sahf
and
sbb
dec
inc
inc
scas
lret
push
mov
iret
pop
loop
pop
mov
iret
add
sub
push
or
cmp
lods
sbb
int
stc
lret
nop
repz
jecxz
outsb
push
push
pop
dec
or
mov
shlb
jo
mov
ljmp
pushf
into
add
mov
outsb
pop
cmp
fwait
cmc
cmp
and
incl
divl
pop
inc
mov
jp
mov
int3
adc
pushl
jne
sbb
paddw
inc
cmp
ret
dec
sub
dec
adc
ds
jno
arpl
push
pop
lods
lcall
or
loopne
mov
sbb
cwtl
add
and
or
xchg
or
add
and
insb
add
push
movsb
mov
popa
xor
inc
jne
mulb
call
add
jnp
mov
jbe
lock
test
adc
inc
jb
imul
in
imul
inc
popa
mov
cmp
popa
and
out
sub
outsl
mov
fmuls
xor
cltd
clc
sbb
adc
test
lcall
jae
ljmp
sub
xchg
jo,pn
push
out
xchg
int3
sub
ja
sub
inc
insl
pop
cmp
push
push
test
jnp
cmp
lods
adc
or
mov
mov
test
adc
imul
sahf
push
mov
cmpsl
xchg
movsb
and
shlb
pop
js
pop
adc
setb
jmp
mov
inc
imul
cmp
push
or
cld
xchg
loope
jecxz
xchg
fstps
mov
icebp
fbld
sarl
out
outsb
dec
in
inc
and
jb
cmp
and
stos
mov
mov
out
in
sti
xchg
jnp
nop
mov
mov
test
mov
call
cmp
sbb
push
fists
xlat
push
mov
mov
sub
aaa
mov
iret
shrb
out
xor
and
insl
or
imulb
sarb
mov
or
adc
xor
lret
push
add
inc
xor
movsb
aas
ret
xor
shll
loopne
xchg
pop
push
and
mov
mov
jp
add
rcrl
mov
add
mov
sub
mov
insb
push
or
sub
xor
test
push
loope
xchg
jb
fwait
sbb
call
lods
and
popa
rcrl
fcomps
sub
sahf
push
rcrl
xor
loope
adc
repnz
inc
cmp
notb
or
xchg
fsubs
out
add
pop
push
inc
mov
add
out
test
jg
notl
cs
add
xor
xor
imul
mov
aam
xchg
sti
fsubr
stc
jne
out
gs
and
aam
movl
stos
push
or
jb
push
and
cmp
bound
push
mov
fistl
insl
or
enter
xchg
push
dec
mov
inc
and
dec
arpl
mov
and
pusha
scas
stos
cltd
push
int3
and
jp
stc
mov
mov
int
dec
int3
xchg
dec
ss
in
loope
rcll
fnstcw
js
aas
stos
cld
and
adc
nop
xchg
and
out
jle
sub
or
in
cmp
add
inc
cs
pop
into
das
cmpsb
cmpsb
and
ffreep
mov
cltd
xor
sbb
and
xchg
daa
popf
xchg
fwait
mov
test
rcr
mov
push
pusha
imull
inc
mov
mov
jge
arpl
fistpl
dec
jp
push
call
mov
nop
in
inc
ret
clc
sahf
in
jl
ret
xchg
lods
dec
sub
pop
jp
mov
cs
pop
in
jg
leave
push
out
sbb
dec
les
ret
daa
xor
sbb
jmp
jp
sti
xor
mov
fcmovu
inc
cmpsb
add
pop
mov
fnstcw
push
in
sub
js
aam
push
sbb
flds
mov
sbb
add
jae
aaa
xor
lods
ljmp
jno
mulb
xchg
inc
xchg
dec
fsubrl
xchg
test
xchg
ljmp
sbb
and
or
push
sbb
scas
mov
das
fbld
xor
jmp
xchg
mov
jmp
pop
xchg
push
lods
out
dec
fdiv
enter
or
sbb
das
mov
mov
mov
adc
dec
dec
mov
int
in
pop
jbe
sbb
decb
sub
in
aam
js
push
add
fxch
flds
or
test
dec
cmpsb
or
inc
sahf
stos
adc
lock
mov
es
push
push
flds
int3
inc
jg
mov
adc
xlat
sbb
hlt
and
jp
mov
push
les
mov
pop
cmp
pop
sti
out
mov
insl
insb
adc
mov
rorl
adcb
in
cltd
mov
cmp
mov
pop
mov
fwait
jb
addr16
push
inc
ljmp
cmp
xchg
pop
mov
xchg
jb
push
rcr
das
mov
or
sub
test
xor
movsb
add
adc
std
xor
pop
mov
xchg
sub
jl
cmp
cmp
cmc
push
sahf
mov
and
or
test
aad
push
sbb
dec
ljmp
or
inc
into
std
mov
xchg
ja
or
in
push
cmpsb
mov
xor
outsl
addr16
repz
and
jmp
push
xor
aad
add
sbb
fs
les
mov
ja
outsl
lahf
xchg
jbe
push
sub
cmpsl
imul
jno
lret
scas
mov
jge
xchg
lods
or
test
test
imul
xor
sbb
hlt
popl
cmp
call
es
jge
ret
cmc
add
daa
fldl
adc
arpl
push
cmpsb
mov
icebp
adc
xor
jb
imul
add
jns
mov
out
xchg
fldln2
inc
jp
cltd
shrb
fsubr
lcall
jge
sbb
fs
pop
pop
shlb
jp
sub
and
and
push
lods
xor
jno
push
cmp
inc
sbb
dec
lock
or
ljmp
mov
sbb
ror
xor
dec
jnp
mov
nop
push
scas
clc
jns
rcr
ljmp
adc
pop
mov
xor
pop
lret
inc
mov
add
fbstp
fbstp
testl
addb
imul
lret
push
mov
adc
pop
ja
push
xchg
mov
pop
add
imul
cmpsb
stc
pop
add
xchg
pop
jl
mov
cmp
pusha
mov
add
loop
jbe
dec
ja
cli
lods
jno
andl
push
out
and
adc
cmp
push
pop
stc
mov
add
movl
jp
dec
shrb
push
cmp
mov
jg
pop
mov
xor
sbb
jp
cmpsl
mov
hlt
icebp
add
ret
jp
hlt
rorl
stos
cmpl
mov
icebp
push
out
add
aad
cmp
xor
inc
pop
xchg
mov
and
jmp
inc
insl
mov
loop
enter
sub
dec
dec
jg
add
and
ret
mov
pop
push
stos
rolb
mov
sahf
sbb
xor
cmp
pop
xchg
jno
xor
leave
jae
adc
and
fisubs
and
mov
repnz
and
or
xor
int
mov
jg
scas
mov
and
xchg
mov
adc
or
inc
cmpsl
mov
xchg
xchg
into
loop
jo
sahf
lahf
movsl
rdmsr
sub
push
or
in
or
daa
pop
insb
pop
std
push
adc
int3
data16
jnp
cmp
test
pop
and
rclb
inc
jb
stc
sar
sub
cmp
sub
imul
cld
dec
gs
fistps
xor
xchg
add
dec
dec
pushf
mov
cmc
out
lds
dec
xchg
repz
xchg
sub
mov
xchg
mov
insl
out
or
out
xor
sbb
outsb
into
shl
pop
mov
cmp
test
jns
mov
push
mov
and
shrb
stos
cs
lret
cs
cli
imul
out
out
mov
push
inc
faddl
xchg
div
mov
in
or
lds
repnz
push
adc
scas
inc
mov
xlat
and
mov
dec
subb
xchg
sub
add
mov
out
push
push
daa
sbb
rorl
mov
ret
pop
mov
or
in
pop
xchg
ja
push
inc
hlt
or
ret
addb
jbe
sbb
inc
and
cld
fsubrs
xchg
ljmp
test
aad
lret
bound
divl
and
mov
insb
xor
adc
into
pop
insb
mov
rcrb
jecxz
leave
fwait
inc
lahf
cmc
lods
sbb
inc
xchg
mov
cmpsb
mov
lahf
or
lret
xor
mov
mov
adc
insl
xor
fdivrl
push
cmp
or
movsl
inc
in
push
js
and
loopne
in
fldt
outsb
rcll
in
fbld
push
cmp
cmp
daa
mov
sub
mov
lret
ret
arpl
dec
cmp
pop
pushf
and
xchg
scas
lret
push
jg
hlt
addb
mov
lds
dec
mov
repnz
icebp
jb
pop
int3
icebp
in
xchg
out
sahf
push
cs
bound
or
dec
mov
outsl
in
xchg
xchg
mov
rol
pop
push
sub
mov
sbb
sub
mov
lret
stos
push
dec
lea
mov
mov
nop
push
arpl
adc
xlat
repnz
cmpsl
mov
cmp
jb
mov
mov
jl
lret
mov
cmp
cs
sub
dec
shlb
push
icebp
rorl
orb
mov
rorb
aaa
sub
jns
jnp
rorb
inc
add
xchg
jle
and
xor
ret
mov
dec
or
leave
adc
pusha
and
cli
mov
test
subl
sub
outsb
into
adc
pop
test
push
push
adc
or
iret
incb
push
xor
cmp
imul
es
sbb
inc
stos
insb
inc
dec
and
daa
xor
mull
and
shrb
pusha
push
adc
jb
and
cltd
xchg
push
cmp
sbb
rcrb
adc
xchg
je
std
push
pop
int
mov
dec
sar
mov
inc
xchg
mov
sbb
mov
or
in
dec
jns
test
lret
mov
orb
inc
add
pop
inc
inc
divl
jo
test
ret
ja
jg
into
or
rclb
sbb
cmp
mov
cmpsl
dec
push
es
lods
xor
dec
mov
outsb
lock
xor
aas
enter
das
ds
jecxz
lods
leave
sub
int3
lea
stos
pop
jmp
adc
sbb
scas
mov
push
inc
shll
cs
inc
out
clc
or
dec
rcll
dec
scas
mov
shll
enter
nop
mov
xchg
jecxz
rclb
stc
pop
mov
mov
scas
add
int3
or
fnstsw
test
sub
loop
testl
mov
xchg
jno
sub
clc
push
sub
std
mov
mov
pop
fiadds
jns
cld
xor
dec
xchg
jb
jle
fneni(8087
in
add
inc
shl
les
mov
push
daa
xor
pop
cmpsb
inc
aam
in
inc
sbb
scas
pop
in
ret
mov
das
jle
inc
xchg
mov
sbb
aaa
and
out
sub
gs
xor
cmc
in
je
dec
flds
fs
loope
lea
sbb
sar
jnp
sub
iret
dec
ret
inc
shr
pop
adc
or
push
adc
into
std
pop
lock
arpl
outsl
add
je
xchg
or
push
test
pop
xor
xor
add
dec
cmp
inc
popa
in
insb
and
xor
fistl
and
add
int
add
and
stc
pop
cmp
cli
fistps
fsubrs
inc
and
inc
repnz
mov
push
add
je
or
ret
pop
or
add
xor
mov
ud0
xchg
mov
push
popa
test
pop
sahf
das
and
shlb
ljmp
mov
cli
je
jbe
jnp
cwtl
pop
mov
jle
sbb
int3
out
loop
jne
mov
popa
fiaddl
pop
xor
pop
test
push
adc
mov
jl
cmp
sub
les
loopne
rcrl
xorb
cwtl
gs
insb
sbb
stos
push
jo
ljmp
jbe
or
mov
mov
mov
sub
clc
out
xchg
push
dec
pop
cs
push
into
es
aas
stos
xor
aaa
lahf
iret
mov
mov
stos
mov
fisubl
dec
hlt
dec
aaa
popa
add
add
sbb
or
cmp
push
xchg
mov
inc
inc
cmpsl
jmp
lret
mov
dec
push
mov
pop
shll
pop
daa
mov
push
pop
and
imul
sarl
mov
and
xor
repnz
cwtl
repnz
pop
jae
lret
xor
push
xchg
roll
in
repz
dec
xchg
mov
shll
xchg
mov
jnp
mov
push
cmp
nop
mov
jge
les
xor
int3
or
push
inc
aam
aad
and
ss
repz
jge
sarl
jle
inc
inc
ret
or
jb
popf
lret
and
mov
jo
imul
or
lcall
int3
subb
out
jns
jg
cs
stos
xor
adc
sahf
inc
inc
or
mov
jae
cmp
cmpsb
push
inc
inc
adc
pusha
fwait
cmpb
imul
mov
xchg
int
loope
mov
jne
mov
jg
sub
dec
lcall
mov
leave
add
repnz
fisttpll
out
xchg
dec
mov
jns
dec
and
adc
mov
sarl
leave
fdivrp
mov
jecxz
test
ret
inc
jecxz
jae
pop
mov
pop
int
cmova
jne
in
or
icebp
cmp
js
mov
movsl
adc
addr16
fs
jmp
inc
xchg
pop
xchg
test
dec
lock
test
es
adc
clc
sti
jg
xchg
jb
lahf
jnp
push
insb
shll
movsb
nop
jp
jb
fsubrs
push
ficompl
mov
mov
insb
mov
mov
pop
in
jnp
icebp
aam
fdivrp
and
push
out
xor
adcb
leave
arpl
jmp
cmp
dec
xor
mov
int3
aam
mov
mov
clc
sub
add
sbb
add
rcr
outsl
push
xchg
lock
loopne
push
mov
js
mov
jg
pop
insb
les
das
push
inc
adc
imul
inc
fdivp
pop
fiadds
jmp
aam
pop
xor
or
stc
movsl
jl
sbb
dec
pushf
jae
jecxz
add
in
out
cwtl
cmc
outsl
mov
scas
pop
sub
imul
push
sbb
xor
inc
cmpb
test
aam
repz
sbb
jnp
cmpsb
push
jb
or
fimuls
inc
fists
xor
inc
push
loop
loopne
mov
pop
inc
dec
mov
xchg
repz
xchg
rcr
mov
push
mov
lahf
in
gs
jmp
add
pop
mov
or
lcall
cmp
sti
pop
cmp
push
fistps
addl
push
loopne
and
adc
test
mov
sahf
sub
push
js
pop
jecxz
mov
out
cmpsb
dec
mov
xchg
in
call
cmpsb
mov
mov
les
enter
insb
sarl
dec
loop
push
jae
push
stos
xor
loope
pop
sbb
pop
lret
dec
dec
or
into
scas
imul
dec
inc
mov
scas
pop
cmp
hlt
and
pop
je
scas
das
icebp
add
movsb
clc
movsb
enter
bnd
lea
lock
movl
stc
popa
xor
and
insb
int
pop
adc
pop
ror
sahf
int3
aad
sub
aam
push
dec
inc
sahf
imul
fwait
in
sahf
sbbb
fs
xchg
in
cmpsb
jns
outsl
inc
xchg
mov
rolb
pop
imul
fwait
push
mov
adc
arpl
movsl
inc
push
dec
lret
mov
popa
or
mov
rcrl
pop
adc
xchg
mov
mov
pop
pop
pop
xchg
dec
xchg
into
push
sbb
leave
scas
xchg
ja
inc
sbb
sti
aam
icebp
mov
arpl
rcrb
push
pop
xor
inc
cmp
movb
orb
test
loop
push
cmp
jg
inc
sub
jmp
ds
dec
mov
leave
test
sbb
add
rclb
sbb
leave
mov
leave
sbbb
dec
hlt
call
gs
inc
fs
pop
sub
inc
mov
dec
jnp
stos
sub
shld
popa
jg
xor
ja
mov
lret
ret
mov
cmp
add
aas
aas
lret
stos
hlt
and
mov
faddl
mov
pop
leave
xchg
lahf
sbb
clc
mov
xchg
sbb
sub
jmp
cmp
lahf
outsl
rcll
or
xchg
daa
insl
lcall
mov
ficoml
cs
mov
dec
mov
stos
clc
lods
jmp
das
lods
mov
movsb
test
mov
cmp
sub
cmpsb
and
pop
pop
xor
shl
ficomps
sahf
rcrb
nop
repz
mov
pop
ja
inc
xor
subb
dec
mov
daa
aam
ss
and
iret
cmpsl
negl
inc
inc
xchg
dec
jge
xchg
or
adc
hlt
aaa
xchg
pop
fidivl
cmp
xor
stos
xor
and
push
pop
push
fcompl
stc
pusha
test
or
dec
mov
xchg
lock
fldt
mulb
outsb
mov
int3
leave
dec
stos
fwait
in
nop
jl
lods
jecxz
dec
lods
mov
or
dec
adc
stos
lret
and
sbb
hlt
push
cwtl
or
sti
aas
scas
pop
dec
add
inc
sbb
stos
lret
mov
stos
jae
add
ljmp
lea
lods
lret
jo
in
in
push
movsb
lock
fcoml
ds
sti
daa
dec
or
mov
pop
in
and
int3
cmp
jl
and
lret
dec
in
scas
inc
popf
loope
add
rorl
cmp
cmp
jl
xchg
mov
outsb
jb
sub
push
lods
cmc
mov
cltd
xor
sbb
adc
lahf
mov
bound
sbb
mov
sahf
js
mov
fldenv
in
test
pusha
stc
inc
fwait
les
icebp
adc
stc
call
fdivp
cmp
jle
mov
jle
add
add
jle
inc
mov
jmp
mov
sub
nop
adc
xchg
in
add
mov
jl
popa
mov
or
xchg
push
bound
mov
mov
out
vpavgw
addb
aas
or
imul
cmpsb
xor
add
rcrb
pop
pop
pusha
lods
dec
or
lods
mov
cmp
pop
test
faddp
mov
sub
xchg
ja
lock
je
mov
arpl
fs
jge
mov
out
sarl
or
jmp
clc
inc
clc
add
adc
out
test
iret
mov
inc
popa
add
cmp
dec
fisubs
es
mov
mov
dec
pop
icebp
jle
and
mov
popa
xchg
xchg
or
ret
mov
in
pop
dec
fwait
stos
shr
in
and
jbe
xor
shlb
shll
insb
scas
push
hlt
xchg
jp
pop
test
mov
or
jno
sub
xor
fmul
loope
loopne
mov
loopne
mov
xor
dec
nop
aas
iret
fidivl
sarl
push
stos
jae
adc
or
movsl
loopne
call
jnp
rorl
nop
jle
adc
scas
inc
sub
inc
push
xchg
jge
pop
loopne
dec
cmp
jecxz
mov
inc
push
cmp
jno
lea
and
aas
adc
and
clc
popf
mov
loopne
cmpsl
test
xchg
clc
jp
inc
mov
adc
popa
xor
test
add
pop
repz
xchg
jge
pop
dec
add
add
cmp
fcmovne
push
inc
hlt
pop
push
adc
ljmp
test
ss
pop
push
enter
pop
xchg
lea
cmpb
inc
stos
dec
mov
addb
data16
mov
pop
into
ret
push
mov
mov
les
push
sti
pop
out
rcrl
addl
in
into
sbb
mov
aas
divb
mov
mov
cmp
xchg
xor
pop
xor
scas
aaa
pop
or
xor
fcompl
bound
cmp
data16
jns
jg
gs
shl
push
jle
adc
jno
test
inc
xor
je
cmpsb
in
imul
xchg
sub
sbb
adc
fld
into
negl
push
pop
ljmp
inc
cli
into
inc
push
std
sarb
push
loop
adc
sti
shl
inc
or
fcmovne
lock
push
adc
outsb
xchg
sbb
pop
movsl
fidivl
test
outsl
sbb
mov
incl
cwtl
pop
push
fcom
mov
adcl
sub
stos
jbe
mov
cld
jle
dec
ss
push
push
bound
mov
mov
or
ds
jb
in
and
popf
shlb
sub
cmp
or
sub
fs
mov
and
push
dec
adc
imul
push
movsl
sahf
mov
int
test
ljmp
jno
mov
jmp
lret
dec
and
dec
lret
mov
mov
andl
jns
call
mov
test
push
or
int3
sbb
cwtl
sbb
in
out
mov
mov
mov
mov
mov
inc
fistps
mov
xchg
xchg
jno
sub
cwtl
cmpsb
sti
jmp
and
or
loop
push
adc
pop
sub
cmpsl
cmpl
sub
mov
sti
add
test
loope
sahf
and
loopne
loop
test
jne
adc
pop
clc
jae
or
fistpll
mov
shlb
or
cmpsl
in
fwait
out
or
cld
and
jle
std
into
movsb
and
and
cmp
jecxz
sub
test
inc
push
xor
int3
jecxz
enter
aaa
in
sub
jbe
clc
sbb
addr16
or
inc
cmp
in
dec
ds
cmp
mov
ret
adc
iret
pop
lods
pop
int3
mov
in
sub
mov
jl
repnz
pop
iret
mov
ret
xor
aas
mov
cmc
mov
insl
loop
jl
adc
test
xor
fs
cld
scas
andl
in
fwait
stos
out
inc
xor
jae
and
leave
push
rorl
mov
xchg
imulb
sbb
or
add
dec
cmpsl
xchg
jno
lret
pop
jge
xchg
iret
shlb
int
add
rol
inc
mov
pop
iret
mov
dec
addr16
lcall
call
add
insb
pop
loope
jmp
and
mov
lds
jle
pop
js
mov
pop
mov
outsl
sbb
lret
fidivrl
sub
addr16
ss
cmc
xor
movsl
aad
jae
push
cmpb
xchg
inc
adc
mov
out
aaa
int3
or
dec
repz
testl
mov
data16
add
movl
jmp
das
lods
adc
pop
out
leave
pop
sub
mov
mov
sbb
or
and
rolb
lret
jmp
gs
pop
and
pop
insb
sub
jb
sub
out
and
sub
test
sub
and
aam
repz
push
cmp
loopne
mov
test
mov
insl
dec
mov
cltd
adc
test
out
test
jecxz
nop
add
fstl
dec
xor
cwtl
movsb
imul
test
outsl
cmpl
out
and
mov
arpl
jno
xchg
js
fidivl
outsl
fs
loope
mov
imull
cltd
adc
xchg
movsb
rcrl
cmp
push
fwait
scas
push
lock
mov
aad
test
imul
iret
imul
addr16
mov
cmp
pushf
pop
out
daa
jp
mov
pushf
or
fld1
xor
mov
xchg
insl
xchg
fimull
ja
xchg
aad
xor
inc
out
or
add
or
stc
adc
push
mov
je
out
push
stc
mov
mov
sbb
mov
loope
xor
inc
add
or
sub
ret
les
out
cld
shrb
call
and
das
mov
pinsrw
or
xor
lcall
mov
push
ficompl
test
fnclex
push
int3
xchg
shlb
scas
mov
dec
hlt
dec
decb
mov
test
dec
jg
dec
testb
and
jmp
fnstenv
xor
push
jo
int3
iret
inc
mov
add
decl
xor
cld
pop
rcrl
pop
shrb
aad
inc
adc
xchg
xor
jmp
or
xchg
mov
xchg
adc
sbb
mov
fmull
push
icebp
inc
loop
scas
inc
notl
cltd
mov
mov
cltd
push
jle
and
sub
in
test
repz
inc
sbb
pop
xor
int3
and
pop
repnz
aaa
popf
fdivs
mov
shll
or
adc
cli
out
or
test
js
cmpsb
xchg
and
movsb
cltd
ds
aad
cltd
es
test
lods
fsubl
mov
mov
dec
jg
divb
imul
xchg
in
push
stc
cld
test
daa
test
fsts
sbb
push
scas
jmp
pop
inc
inc
mov
xrelease
loop
imul
adc
shll
int
into
jge
push
jmp
pop
loop
lods
adc
sub
lock
movsb
ja
pop
xchg
mov
imul
xor
cmp
lret
push
int3
out
stc
jge
add
jge
cld
adc
fstp
pop
outsb
adc
mov
rclb
xchg
pop
shl
fsubr
in
pop
jge
xor
xor
lret
aam
mov
mov
mov
ret
bound
movsb
mov
jg
sub
add
xchg
mov
xchg
inc
lret
arpl
je
lahf
adc
xchg
sub
arpl
lea
pushl
loop
js
add
je
sub
mov
and
and
gs
fisubrs
pop
inc
in
divl
test
idivb
adc
outsb
aad
push
adc
lret
pop
xor
js
popa
and
scas
out
divb
pop
pop
push
test
xor
js
and
xor
pop
ds
push
adc
dec
push
into
test
cmc
sti
sbb
adc
sahf
mov
dec
mov
shl
mov
imul
fs
adc
insb
add
and
inc
sub
pop
sub
sbb
icebp
mov
xorb
in
outsb
push
fistpll
outsl
and
insb
nop
mov
int3
jno
out
push
inc
lods
xorb
loopne
negl
ret
sbb
ljmp
xor
cmp
mov
ja
xor
scas
and
mov
pushl
cli
cmp
into
rol
xor
mov
std
dec
and
sbb
jp
in
pop
add
pop
push
into
add
outsb
mov
mov
jp
adc
mov
xchg
mov
cmp
jl
push
xor
push
and
pop
mov
inc
jo
mov
cmpsl
sbb
and
pop
dec
add
cmp
inc
pop
arpl
pop
mov
cltd
movsl
jge
shll
mov
subl
cmp
and
mov
aam
rcrb
rol
lods
fs
fs
xchg
cmpsb
pop
mov
pop
leave
add
jge
repz
mov
repnz
jle
gs
inc
adc
pop
jmp
pop
mov
test
repz
mov
jnp
outsl
add
mov
insl
lea
ja
push
popf
test
mov
nop
in
pop
push
mov
cmp
sbb
push
and
inc
jmp
dec
icebp
and
int
adc
mov
fisubl
xchg
push
pop
add
sarb
jns
cwtl
dec
daa
mov
jmp
pop
in
cmp
ja
xchg
ss
and
mov
iret
mov
push
xchg
pop
rcl
fucomip
in
and
aam
rcrl
aaa
sbbl
adc
lret
cmp
mov
xchg
adcb
addl
mov
shlb
adc
add
das
data16
out
pop
addb
ss
inc
xchg
sarl
outsl
stos
adc
xor
loop
imul
xchg
shrl
cmp
jns
jno
decl
mulb
out
push
addr16
jae
xchg
ds
jp
iret
lea
cmp
or
xchg
pop
repnz
sbb
popfw
adc
jp
std
dec
push
pop
lret
or
decb
push
movsb
xchg
cs
dec
jg
mov
cli
sbbl
stos
pop
or
mov
mov
je
fcomps
fisubrs
cmc
gs
xor
jle
sbbb
pop
loop
fs
or
pop
cmc
add
mov
push
xor
bound
mov
rcl
int3
mov
jnp
mov
shrb
mov
aam
popa
aad
testb
mov
cli
xor
repnz
dec
enter
pop
clc
out
pop
mov
cmpsl
xchg
frndint
sub
test
sub
push
xor
pop
int
sbb
fldl
sarl
fst
test
mov
mov
psrad
lret
sub
sub
mov
test
mov
inc
xorb
push
add
sub
cld
outsl
cld
mov
fcmovne
into
lods
mov
xchg
aam
inc
mov
adc
push
fs
paddsw
cmc
dec
pop
jnp
mov
sbb
cwtl
fsub
inc
in
sbb
pop
dec
lods
sbbl
or
lret
inc
sbb
adc
jae
xchg
mov
sub
inc
push
push
push
aam
and
jge
aam
jmp
ja
ljmp
cwtl
andl
lcall
sbb
aad
int
nop
mov
jne
mov
inc
xchg
pop
or
sahf
push
add
test
in
mov
mov
std
or
es
or
dec
call
xor
subb
or
jecxz
in
les
fdivrs
les
in
mov
push
and
scas
rorb
xchg
pushf
enter
fwait
sahf
subb
push
cs
sbb
dec
fcoml
repnz
xor
mov
mov
or
jnp
mov
das
in
add
out
out
fdivrs
adc
cs
sub
inc
mov
cld
xor
inc
jo
gs
fsubr
cmpsl
inc
movsbl
xor
lds
sub
jmp
shll
and
je
pop
mov
leave
iret
fldl
icebp
test
aas
fidivrs
addr16
mov
scas
or
pop
inc
cld
push
insb
divb
scas
jne
or
pop
push
loop
subl
sub
iret
adc
ja
insb
fdivr
cmp
sbb
mov
jo
adc
mov
cmpl
daa
jl
data16
xchg
sub
addr16
je
fs
cltd
xor
addr16
shlb
dec
mov
and
stos
out
packsswb
shlb
add
pop
jmp
fstpt
mov
jnp
lret
test
mov
adc
bound
xchg
ficoml
ja
xlat
stc
rcr
push
push
dec
ffreep
mov
pop
in
sub
mov
pusha
dec
or
aad
inc
sub
mov
cmp
mov
out
lret
loopne
and
jecxz
je
sarl
adc
mov
xlat
xchg
scas
or
pop
dec
mov
mov
in
mov
pop
push
das
jecxz
mov
mov
es
mov
adc
dec
jecxz
adc
popa
mov
sbb
push
in
mov
and
pop
xchg
pop
outsl
xchg
stos
and
rorb
jecxz
sar
movsb
clc
daa
or
mov
cli
pushf
sar
daa
repnz
jmp
iret
lea
pop
mov
pop
inc
lahf
cmp
mov
ret
mov
xchg
sbb
dec
mov
sbb
ret
into
or
inc
orl
lcall
push
and
das
ja
mov
push
mov
cli
cwtl
or
xlat
jge
add
test
fcomps
fwait
iret
xchg
or
shl
dec
ror
mov
xchg
lcall
je
cmpsl
pop
jns
push
lahf
pushf
stos
pop
xchg
cmp
sarb
add
lcall
cli
ss
popf
sahf
loope
icebp
loopne
mov
sub
xchg
outsb
mov
push
movsb
sbb
mov
push
push
mov
mov
int3
jmp
sbb
out
mov
outsl
add
cli
inc
xor
cli
mov
out
sbb
sbb
sub
jnp
sub
jge
stos
xor
std
test
mov
roll
lahf
mov
out
lcall
faddl
xchg
pop
and
and
jae
fs
ljmp
xchg
out
push
nop
xlat
push
or
lcall
adc
das
cmp
sbb
xchg
repz
scas
xlat
fbld
aas
sub
stos
jmp
ret
push
stc
push
push
or
fisubl
gs
adc
outsl
ret
xchg
sub
rcrl
dec
sbb
push
dec
stos
outsb
jns
movsl
and
ret
jbe
xor
mov
push
inc
sbb
jecxz
sarl
push
shrl
lods
mov
jns
clc
or
inc
or
mov
or
xchg
push
mov
pop
cmp
in
dec
bound
nop
mov
push
cmp
aam
insl
test
mov
xchg
sar
mov
cmp
ficomps
pop
scas
fistl
sbb
das
inc
jecxz
or
dec
clc
ret
pop
dec
repz
and
or
test
push
jg
repnz
out
push
bnd
mov
out
cmp
mov
dec
cli
rcrb
daa
add
jbe
cmpsb
cli
faddp
aad
rclb
inc
sbb
mov
adc
sbb
jne
sub
fs
loopne
or
adc
cmc
push
mov
xor
mov
movsl
testl
je
in
xor
mov
gs
pop
cmp
mov
jo
nop
mov
mov
negl
ljmp
hlt
in
adc
imul
insl
je
jmp
lods
outsb
cmc
inc
sti
xchg
or
sub
aas
subl
sub
outsl
das
pop
jge
cmp
mov
out
lods
movsb
push
mov
adc
xchg
test
or
fs
cmp
and
insb
mov
shlb
in
cmp
out
insl
dec
insb
and
int
inc
mov
mov
std
adc
pop
xchg
and
testl
sub
add
data16
or
icebp
cmc
adc
xchg
fnstsw
push
cmp
andb
fldcw
fisubrs
cmp
mov
sub
or
push
adc
push
sti
lods
add
movsl
std
pop
add
lahf
cmpsl
mov
mov
popa
mov
xchg
call
add
sbb
and
lea
jne
xlat
roll
inc
pop
pop
hlt
cmp
jne,pt
test
mov
loope
sub
popa
dec
pop
pop
fistpl
dec
dec
or
test
mov
cltd
imul
jno
dec
mov
rolb
or
in
dec
pop
shlb
lds
jg
aad
sub
dec
pusha
shll
fistpl
fucomip
jmp
inc
insl
pop
or
dec
aad
adc
inc
cli
cs
clc
cmp
jo
fbstp
mov
push
sub
jle
push
fbstp
jecxz
sbb
inc
rorb
adc
dec
jge
xchg
movsl
mov
xor
pop
aaa
data16
movsb
push
pop
xlat
in
pop
cmp
int
mov
mov
jl
adc
jmp
push
xchg
icebp
dec
sub
push
push
cmp
leave
push
and
and
adc
xchg
addr16
fnstsw
jno
scas
aaa
sbb
jp
push
sbb
xor
lret
orl
hlt
dec
mov
cmp
push
jp
into
in
stc
out
xchg
addb
and
mov
pop
mov
dec
in
nop
mov
lds
adc
push
and
pusha
mov
cmc
test
mov
test
les
sahf
cmp
pop
push
fdivr
xchg
push
dec
inc
xchg
pop
pop
jbe
subb
fsubs
icebp
mov
inc
xchg
pop
ds
dec
lods
adc
aaa
pop
xchg
cmp
insl
mov
dec
ds
inc
rcrb
add
push
pusha
push
push
js
adc
aaa
sbb
push
cmp
in
sub
mov
mull
xchg
movsl
dec
movsb
mov
lcall
clc
mov
addb
mov
xchg
out
lret
ret
addr16
add
adc
cmp
rcr
push
and
loope
shll
push
dec
shll
aam
outsl
int3
mov
mov
lahf
pop
or
sar
ret
mov
push
mov
sub
pop
jno,pn
cmc
or
stos
mov
shlb
out
pop
sub
jae
out
sti
ficompl
mov
aam
leave
jle
jg
in
in
xor
mov
or
inc
mov
cmpsb
cmpsb
mov
stc
adc
sti
test
inc
clc
pop
cmpsb
and
shrl
ret
add
lea
or
xchg
pop
jo
stos
jecxz
mov
dec
sbb
lcall
push
inc
pop
movsb
push
and
jbe
and
stc
xchg
push
mov
pop
cwtl
sbb
sub
jo
pop
mov
leave
arpl
adc
dec
xchg
ficoml
and
enter
and
mov
cmpsb
rcrl
dec
cli
or
push
cs
dec
jns
divl
mov
daa
xor
imul
rcrl
or
cmp
push
pusha
cltd
push
adc
xor
ljmp
fbstp
push
cwtl
cltd
test
xlat
out
mov
pop
push
push
cld
sub
mov
ret
pop
mov
and
lcall
push
jnp
sub
test
inc
cwtl
adc
shll
jb
pushf
lret
mov
push
mov
mov
or
jmp
push
leave
and
or
pop
push
jle
adc
pop
or
jne
cltd
and
in
pushaw
js
pop
or
in
add
mov
push
cwtl
xchg
xor
xchg
fstps
xlat
loop
jno
cld
hlt
or
jle
xor
push
fsubl
lret
adc
mov
mov
mov
out
popa
fisttpll
push
ss
in
jp
dec
jecxz
push
and
cmpsl
lret
mov
leave
es
mov
ffreep
test
subb
imul
fidivrl
shrb
lea
js
scas
pushf
add
bndldx
ljmp
fadds
enter
mov
xlat
lahf
pop
sbb
mov
xor
cmp
sbb
data16
stos
xchg
mov
bound
push
pop
mov
aaa
adc
or
mov
xor
shll
pop
gs
lea
mov
jmp
std
lcall
cmp
insl
jg,pn
lret
std
mov
sarb
jae
push
data16
and
mov
push
rcll
outsl
add
mov
lds
gs
dec
gs
call
cmp
cmc
in
pusha
fisttpll
and
dec
cwtl
outsb
ds
dec
clc
sub
dec
stos
rcr
popa
jne
lahf
mov
cmp
xchg
sbb
and
mov
clc
clc
arpl
jle
je
jge
mov
add
push
xor
sub
mov
shr
add
pop
mov
pop
sbbb
sub
lods
sub
cmp
rcll
outsl
lock
les
fwait
das
aam
inc
mov
pushf
sub
mov
gs
add
mov
lods
and
mov
add
or
mov
cld
aas
insl
or
mov
fldenv
and
add
loope
dec
and
outsl
les
shrl
movsl
cmp
out
xor
mov
xor
repz
ret
jne
shl
cli
mov
jp
mov
jl
xor
sbb
sub
fprem
nop
add
mov
int
inc
cmpsb
mov
subl
sti
cmp
into
lock
xchg
inc
out
pop
cmp
adc
jmp
and
cmp
or
xor
insb
sub
dec
jge
adc
out
xor
mov
inc
lods
loope
clc
addr16
mov
or
or
notb
xor
pop
adc
sub
pop
inc
movsb
sbb
dec
out
aam
fstpt
jp
push
popa
stc
fsts
mov
test
loopne
loop
pop
orl
rsqrtps
mov
sbb
cmpsb
push
fdivp
outsb
cmp
js
lods
jecxz
mov
xor
jmp
pop
frstor
jp
pop
bound
in
test
lea
insb
sub
cli
jnp,pn
mov
int3
mov
inc
bound
add
cs
push
sub
divl
xchg
sub
aaa
or
inc
fisubrs
fs
dec
and
or
push
leave
adc
xor
jl
cmpsb
pop
rolb
add
mov
ds
fidivl
cmc
arpl
sti
dec
inc
xor
sbb
fldcw
push
push
daa
jbe
hlt
sub
mov
cmp
mov
xor
jne
gs
pop
clc
stos
js
jmp
aaa
add
ja
mov
test
xor
xor
fs
cwtl
and
std
inc
das
add
into
fnstsw
int3
fidivl
leave
xor
roll
lahf
out
addl
push
mull
and
imull
ficomps
cld
inc
std
cwtl
icebp
pop
add
pop
pop
out
pop
inc
or
and
in
in
clc
mov
adc
sub
icebp
pop
pop
icebp
dec
sub
in
add
push
inc
dec
pop
dec
add
xchg
ss
inc
mov
jle
scas
movsl
mov
ficomps
daa
mov
pop
adc
iret
push
dec
add
pusha
cmp
add
inc
xchg
movsl
jge
hlt
fldenv
mov
pop
cmp
loop
or
mov
mov
adc
shrb
leave
into
jno
popa
dec
imul
icebp
lods
lock
pop
push
jg
loop
mov
dec
dec
and
sub
and
cmp
fsubrs
adc
sbbb
out
cmp
pop
jl
pusha
sub
jnp
arpl
push
mov
hlt
in
adc
loop
jl
ret
ljmp
jb
ret
jbe
std
add
add
out
xchg
cmc
push
pop
ljmp
add
push
and
and
jecxz
adc
xchg
inc
ds
mov
mov
les
dec
add
lcall
aaa
setno
fldl
pop
sarb
and
stc
xchg
xchg
jb
add
dec
pop
js
cmp
aaa
movsb
inc
aam
sbb
mov
fs
lock
jne
test
in
xchg
push
in
popa
fimuls
mov
bound
mov
insl
out
mov
jno
testl
xchg
clc
outsb
fdivrs
inc
push
mov
pusha
fsubs
popa
cs
outsl
pop
cmp
mov
push
push
aaa
mov
dec
sub
cmc
dec
xor
and
jmp
sahf
dec
pop
icebp
std
push
mov
dec
arpl
adc
out
mov
cs
iret
inc
jns
xor
stc
jns
std
icebp
hlt
fstp
daa
mov
addr16
dec
pop
jge
xor
inc
aaa
in
dec
addr16
mov
adc
fmull
aad
and
add
loope
inc
mov
out
pop
dec
and
loope
add
lds
aas
or
push
sbb
mov
jne
enter
sahf
adc
outsb
int3
fwait
aam
push
aas
adc
dec
test
inc
jge
test
dec
ret
jbe
cmp
add
sarl
and
adc
ret
ret
roll
pop
adcl
cmp
movl
push
jl
jmp
fcoms
pop
leave
mov
sbb
sub
or
dec
push
xchg
mov
xor
push
dec
inc
xor
dec
in
pop
push
push
cmp
test
std
jb
mov
int3
scas
sub
cmc
adc
int3
mov
mov
push
imul
jecxz
mov
imul
lods
cmp
jns
push
stos
pop
jb
negl
push
cmp
scas
add
jle
mov
and
imul
xchg
and
mov
inc
addr16
add
mov
aam
pop
jae
inc
inc
xor
in
push
inc
mov
cmp
sahf
push
icebp
jnp
pop
mov
jb
mov
jmp
mov
dec
scas
es
js
fldenv
scas
inc
lods
push
rcr
pop
iret
cmp
mov
mov
cmp
stos
test
js
lret
repz
push
movsl
inc
lret
test
sbb
in
mov
mov
sub
outsb
mov
or
sbb
or
mov
sahf
xor
data16
cmp
dec
adc
icebp
loopne
or
and
out
push
sbb
lods
sub
adc
mov
mov
push
sub
cwtl
lea
pop
fists
insb
sbb
enter
lods
sbb
test
lods
inc
cmpsb
cmp
push
add
xchg
nop
sbbb
cs
loop
loopne
add
push
clc
ss
mov
dec
insl
lahf
iret
push
in
sub
ljmp
shl
leave
cwtl
push
xchg
jo
je
into
popf
push
int3
outsl
jne
mov
jecxz
pop
fstpt
lds
imul
call
loope
jmp
ja
push
shlb
fistpl
popf
dec
dec
push
mov
pusha
push
addr16
lods
sbb
pop
in
or
movsb
jecxz
push
out
leave
push
jne
push
cmp
les
xor
inc
and
in
and
leave
enter
jmp
sbb
jne
dec
and
mov
sbb
push
loope
iret
or
adc
jo
in
xor
clc
inc
jnp
adc
jne
loope
rorb
fnstcw
jge
fcoml
cmp
dec
push
roll
in
mov
cld
jnp
int3
insl
or
pop
cmpsl
cmpsb
das
lds
ds
test
mov
inc
cmpl
roll
sbb
aad
addr16
and
aad
sahf
mov
xchg
add
push
xor
mov
jge
frstor
nop
movaps
lret
dec
and
mov
leave
xorl
or
mov
cwtl
test
rcll
jne
xor
cmc
mov
les
insb
jecxz
leave
add
sub
popf
insl
mov
lahf
xchg
cmp
inc
push
js
test
dec
popf
outsl
psrlq
lock
repz
cmp
xlat
cmpl
test
or
fcoml
or
mov
stos
ds
aaa
xchg
pop
push
enter
das
lods
or
clc
bts
mov
mov
arpl
add
sbbl
cmp
fistpll
fwait
stos
mov
mov
and
lea
push
pushf
inc
xor
out
push
lods
cmp
push
xor
inc
xchg
out
lret
sbb
in
mov
mov
or
add
pushf
and
pop
adc
add
testb
repz
inc
dec
cmp
jno
add
addr16
and
pop
pop
jp
fisttps
out
push
xlat
inc
paddb
mov
xchg
iret
dec
stc
stos
mov
fmuls
out
ja
mov
xchg
pushf
sbb
test
mov
cmp
dec
cmpsl
dec
jne
push
clc
fdivs
into
in
pop
xchg
sbb
jae
rclb
mov
and
mov
outsb
enter
aaa
xor
mov
dec
mov
sub
mov
sbb
mov
clc
jnp
sub
popa
inc
loopne
adc
pop
fists
sahf
mov
xchg
add
insb
xchg
test
rcr
sti
sub
aas
xchg
cmp
push
mov
cs
lcall
sbb
repnz
dec
jge
movsl
lods
pop
or
cmp
out
mov
std
rorb
cmpsb
jbe
xor
xlat
xor
in
lods
js
pop
pop
pop
sub
push
out
or
push
stc
dec
mov
xchg
inc
lods
jb
pop
loop
mov
scas
pop
shlb
xor
idivl
daa
jne
inc
xor
cmpsl
movsl
js
aas
fcmovnu
outsl
lds
adc
jbe
stos
and
inc
bound
lds
ss
movsb
sub
pushf
xchg
es
std
fisubs
filds
push
out
aam
rcrl
lods
out
and
xchg
bound
in
inc
push
out
push
ret
incl
stos
out
lods
hlt
icebp
sbb
and
outsl
ja
mov
pop
add
rcll
and
mov
imul
imul
loopne
dec
cltd
dec
xchg
lcall
jge
lahf
jle
cmp
cwtl
jg
or
add
jp
jb
inc
xchg
popf
cmp
nop
and
cmp
icebp
mov
shrd
rol
hlt
sti
sub
clc
enter
inc
nop
in
lods
das
sar
push
xchg
mov
pop
push
jp
jae
stos
xchg
dec
lock
ja
mov
std
jp
ljmp
adc
push
fdivs
jmp
ljmp
sub
push
pop
iret
outsl
sbb
fwait
xlat
mov
cltd
and
push
push
inc
lcall
mov
hlt
das
mov
jge
fcomi
cmpb
inc
adc
mov
stos
in
call
ret
leave
ljmp
push
outsl
mov
jno
std
pop
stc
inc
lds
jp
cvtps2pd
in
mov
fdivs
cmpsb
lret
aad
movsb
mov
mov
fs
popa
dec
xor
andl
sbb
cmp
shrb
add
lods
mov
adc
loopne
cs
scas
mov
and
dec
push
and
sbb
or
jnp
jle
jp
jl
sub
and
int
sbb
mov
cwtl
ret
mov
xlat
ljmp
or
mov
sarl
push
mov
mov
in
cs
and
std
lods
cmpsb
dec
jbe
cs
add
xchg
cmp
xchg
fmull
fs
ja
lret
int3
inc
inc
pop
inc
loopne
mov
or
mov
pop
aam
gs
dec
stos
in
sub
jnp
xor
pop
push
ljmp
lea
xchg
ret
mov
mov
cmpsl
movsb
daa
adc
inc
adc
pmulhw
cli
pop
aam
ret
mov
movsb
pop
pop
mov
repz
jno
jge
mov
adc
add
int3
sbb
pop
mov
sub
sahf
sbb
mov
das
movsl
hlt
mov
push
cmp
movsb
aaa
adc
mov
push
xor
or
dec
adc
push
jb
icebp
push
nop
leave
idivl
mov
jbe
aam
clc
cmpsl
mov
rol
pop
scas
jmp
test
fldenv
mov
sub
stos
imul
shll
loop
rcrb
test
lahf
imul
push
jb
cs
mov
test
cmp
jo
sbb
pop
and
add
xor
push
daa
mov
mov
push
loopne
lret
lea
mov
inc
sub
hlt
xlat
fstl
inc
mov
insl
in
push
jmp
push
xchg
xor
outsl
mov
cmpsb
jle
mov
sbb
in
or
in
dec
push
addr16
adc
loopne
test
aaa
sub
inc
js
cmp
popa
jge
pushf
add
sbb
mov
loopne
out
xor
mov
adc
cltd
popa
pop
fistpll
repnz
ljmp
mov
scas
negl
xchg
ds
nop
pop
mov
mov
adc
lods
pop
adc
or
push
adc
bound
jno
pop
and
sar
scas
lea
push
sub
test
sarl
jns
mov
xchg
pop
mov
lea
enter
sub
dec
or
imul
imul
jle
fbstp
mov
inc
xchg
xor
clc
xchg
idivb
pop
xchg
adc
insl
cmp
jle
test
lcall
bound
dec
jo
push
add
cwtl
and
and
insl
sahf
mov
pop
fisubrs
notb
lahf
das
xor
inc
xchg
and
movsb
xor
or
lock
daa
sub
leave
and
shlb
xor
push
jecxz
shlb
ret
xchg
inc
enter
add
jg
clc
jno
scas
pop
adc
sub
pop
pop
mov
mov
cmp
add
sub
sti
dec
sbbb
in
fisttpll
push
pop
pop
pop
and
out
adc
ljmp
lods
dec
inc
mov
int3
inc
xlat
inc
loopne
imul
repz
and
sahf
js
cwtl
ficompl
popf
jp
xchg
stc
mov
jle
pusha
or
arpl
ret
xchg
dec
cwtl
fcmovnbe
movsb
pop
daa
pop
jp
mov
jno
mov
lret
add
cmpb
cs
inc
xor
out
arpl
out
sbb
mov
scas
mov
test
xchg
push
adcb
test
push
aaa
stos
pusha
and
inc
ss
xor
sub
add
js
mov
fmull
mov
cmp
sub
sahf
enter
call
negb
fbld
add
in
fsubr
mov
cmp
pop
mov
mov
mov
ja
push
mov
rcrl
xor
rcr
and
inc
int3
aad
sub
filds
test
test
lds
cld
jno
int3
mov
sub
lods
loop
rcl
add
lea
test
mov
lods
mov
dec
sbb
cmpsl
push
sbb
fsubrl
mov
repnz
sar
xchg
stc
jecxz
ljmp
mov
push
test
in
inc
jnp
enter
aam
cmp
sub
dec
jmp
cwtl
cmp
popa
adcl
in
leave
pop
les
iret
add
dec
push
jecxz
sarl
and
lods
inc
cmp
bound
or
xor
push
pop
mov
sbb
rorl
dec
out
mov
das
in
test
add
mov
lea
imul
cmp
lret
fadds
mov
cli
push
jnp
cmpsl
dec
dec
xchg
pop
insl
rol
sbb
stos
dec
inc
pop
sbb
cmp
xor
repnz
sti
inc
and
outsl
rcrb
inc
out
mov
into
mov
std
bound
imul
fcom
nop
icebp
inc
fcoms
rolb
imul
jne
mov
sub
push
mov
inc
out
stos
int
iret
out
hlt
push
mov
adc
das
inc
and
jae
cmp
inc
pop
mov
rorl
scas
mov
fidivrl
cwtl
roll
sti
pop
lods
sbb
and
and
imul
out
pop
pushf
mov
mov
push
movsl
mov
ds
dec
add
cmpb
out
sub
jge
xchg
mov
mov
dec
movsb
fwait
dec
jno
cli
jecxz
test
iret
xor
xchg
dec
popf
sbb
inc
pushf
cmp
dec
xor
mov
mov
repz
lahf
jl
dec
movsl
xor
mov
or
push
repz
stos
call
cmc
dec
mov
sub
xor
ljmp
test
loope
push
dec
or
arpl
icebp
pop
iret
xchg
push
imull
cli
adc
rcl
in
xor
repnz
jb
inc
sti
add
ja
lahf
lea
stos
or
mov
popa
xchg
orl
pop
dec
lret
lcall
sbb
scas
dec
inc
sub
or
jmp
jnp
xlat
xchg
lahf
mov
xor
loop
pop
repz
xchg
jns
jmp
test
sub
pop
sbb
adc
repz
inc
push
mov
lcall
push
inc
push
insb
jg
mov
sub
arpl
outsb
sbb
cmp
pop
mov
push
sahf
cmp
test
sbb
iret
cmpb
lods
jl,pn
icebp
pop
xchg
pop
movsl
dec
mov
jns
push
inc
lods
xor
xor
mov
adc
cwtl
popf
fwait
xchg
in
mov
jecxz
test
fs
xchg
mov
les
fistps
test
xor
mov
popf
push
sbb
pop
mov
test
in
add
lea
out
movsb
add
add
lods
add
ja
ljmp
movsb
adc
fs
dec
nop
sub
or
or
jno
ds
push
mov
xor
jo
shrb
add
js,pn
lret
cli
adc
call
pop
ficompl
mov
cmp
jge
popfw
les
roll
outsb
rol
fcoml
mov
xchg
aam
loop
into
and
in
mov
xchg
sbb
scas
ds
xchg
cltd
xchg
je
movsl
adc
mov
mov
push
inc
addr16
fdivrl
mov
out
lret
or
or
lret
iret
push
mull
xchg
lahf
cmp
into
movsl
fadds
popf
mov
mov
out
dec
movsl
inc
sbb
pop
js
mov
fnstsw
sar
adc
and
inc
inc
pop
icebp
sahf
jg
jmp
dec
iret
mov
lods
mov
sub
popa
mov
add
push
mov
movsl
cli
sub
gs
add
xchg
into
pmulhuw
sahf
jns
aas
push
scas
movsl
jecxz
mov
pop
push
jmp
popa
int3
cmpsl
mov
pop
push
or
sbb
adc
mov
and
push
adc
ficoms
xlat
sub
in
fists
cli
inc
or
inc
gs
sub
cmc
and
cwtl
xchg
push
pop
push
jo
psubsw
adc
jo
outsl
sub
push
enter
push
mov
ds
dec
mov
cltd
pushf
cmp
sbb
call
ss
adc
into
jo
xchg
inc
pushf
add
inc
pop
aam
and
pop
sub
sub
ret
faddl
cltd
out
mov
stos
mov
sub
mov
pand
enter
lcall
stos
ljmp
int3
push
mov
cmp
dec
ja
jp
adc
negb
pushf
xor
fdivr
xor
push
xor
sub
ret
ret
and
xchg
mov
add
lret
xchg
cli
inc
stos
ljmp
xor
sarl
ljmp
pusha
loope
iret
pop
lret
xchg
outsl
xor
dec
scas
cli
push
or
popf
or
imul
or
ja
add
mov
push
mov
xchg
inc
adc
out
icebp
addr16
dec
lods
rorb
jle
test
xchg
xchg
sub
mov
sub
and
icebp
adc
scas
ljmp
inc
mov
pop
outsb
movsl
xchg
out
mov
imull
xor
push
push
add
arpl
pop
jns
push
push
sarl
daa
adc
call
cltd
sub
sbb
cmp
sbb
jle
xorps
push
inc
xchg
mov
cwtl
dec
pop
push
xlat
aas
cld
cwtl
jae
sti
cltd
stc
jg
aas
fucomi
pop
repnz
mov
and
and
dec
movsl
sarb
dec
push
adc
jecxz
jb
xor
loopne
xor
pop
arpl
rcrw
mov
mov
repnz
inc
sbb
inc
das
push
loopne
dec
jecxz
in
xchg
xor
out
hlt
cmpsl
pop
popa
lret
mov
adc
ljmp
into
repnz
fisubl
rorl
cld
dec
push
js
aas
aam
scas
ss
jl
in
cmp
xorl
arpl
sub
dec
jmp
pop
inc
ja
lahf
sbb
ficoml
loopew
xor
and
adcb
sbb
xchg
ljmp
push
in
aaa
shlb
scas
push
loop,pn
sub
cwtl
or
and
call
and
popa
test
adc
jp
cwtl
sbb
mov
bound
add
cld
insl
lret
scas
cmp
mov
xchg
movsl
aad
xchg
es
dec
in
or
adc
jns
mov
outsb
sub
mov
stos
test
loopne
jae
jnp
mov
or
jo
push
pop
dec
push
addl
popf
or
pop
and
sub
cmpsl
test
xor
and
adc
cli
clc
pop
push
jg
cmp
sbb
imul
xor
push
sbb
movsl
insl
pop
dec
sub
add
bound
jg
sub
or
repz
sub
dec
and
push
subb
imul
ds
xchg
outsb
bound
sbb
mov
push
and
test
mov
aam
sub
lret
jb
test
jne
sahf
sub
inc
jnp
push
ja
inc
fidivrl
push
out
xchg
ss
push
call
xlat
orl
scas
jae
or
sbbl
insb
inc
sbb
sub
jno
mov
iret
sahf
or
mov
dec
cli
push
add
sbb
mov
inc
push
lret
fnstenv
jbe
out
xchg
push
xchg
push
fs
and
sub
sbb
and
jmp
or
mov
push
inc
mov
jecxz
jg
mov
gs
int3
pop
cmpsl
cltd
hlt
lods
and
daa
lock
xchg
fisubs
sub
pop
hlt
cmp
mov
ret
movsl
dec
in
in
dec
push
iret
xchg
jb
or
mov
push
jae
in
jp
js
adc
jae
enter
loope
push
sub
push
jbe
dec
aam
pop
std
aas
enter
xchg
mov
fbld
mov
jb
adcb
test
pushl
int3
insl
or
fcompl
pop
jnp
repnz
or
mov
jne
mov
jmp
xchg
inc
sbb
dec
clc
pop
orb
aas
xchg
sub
mov
pop
daa
popf
mov
movsb
orb
jmp
and
test
sbb
and
faddl
paddusw
pop
fnstsw
jmp
rcrb
xchg
sub
scas
add
push
jle
inc
es
dec
xor
inc
fdivrs
xlat
faddl
outsb
sbb
xlat
ja
in
ss
pop
add
mov
xchg
sub
inc
in
insb
sub
cli
insl
lret
fisubrl
into
sub
lahf
adc
jp
pop
inc
adc
mov
mov
daa
sarb
adc
ljmp
test
mov
jl
mov
mov
cmp
mulb
pop
or
in
cld
fwait
jnp
inc
xor
push
or
adc
incb
insl
jmp
xchg
jp
popa
outsl
imul
push
cmp
loope
adc
adc
rorl
gs
clc
insb
pop
mov
call
in
imul
cmp
sub
popa
mov
jecxz
jns
aam
inc
or
in
cmp
or
push
xor
sbb
push
dec
cmp
pop
mov
mov
and
pop
push
push
mov
lods
pop
aaa
int
notb
repz
hlt
xlat
int
adc
mov
or
mov
cmp
int3
mov
jbe
lret
adc
push
jbe
test
or
adcb
stos
push
dec
or
xor
out
popf
jae
xor
mov
add
in
dec
imul
int
int
repz
xlat
bnd
add
or
and
sbb
or
arpl
push
add
xor
movb
mov
ret
xchg
pop
data16
mov
pushf
ja
stc
mov
or
pop
dec
fnstsw
push
pushw
mov
cltd
jnp
mov
hlt
testl
xchg
or
les
adc
pop
xlat
xchg
inc
add
jecxz
push
mov
les
leave
adc
add
push
xchg
or
add
xchg
divl
arpl
es
push
addr16
in
lock
and
push
iret
cmp
and
nop
jecxz
lcall
pop
sbb
lahf
cmp
pop
icebp
int3
std
push
jae
out
pcmpeqw
add
popl
sbb
dec
pop
shlb
inc
sub
loopne
js
add
int
add
iret
cmp
jecxz
sahf
inc
mov
fildll
cmp
mov
mov
pop
sbb
imulb
xor
jae
rorb
add
arpl
lock
lods
sub
cmpsl
or
js
or
decb
lret
out
push
insb
pushf
dec
std
push
je
add
and
xlat
push
mov
ret
aaa
pop
jns
lcall
ret
xor
pop
jae
pushf
mov
je
sub
iret
imul
std
push
xor
pop
sbb
cli
std
cli
lea
inc
loop
pmulhw
mov
hlt
add
insb
push
insl
popf
stos
lock
out
lcall
xlat
jnp
pop
sbb
clc
pop
add
fcmove
addb
fsubp
dec
stos
adc
adc
adc
xchg
jmp
arpl
mov
inc
sbb
frstor
sbb
outsb
pop
divb
pop
pop
dec
sbb
and
je
in
mov
lock
cmp
add
popa
std
and
dec
pop
incb
inc
adc
loop
ret
sbb
pop
shlb
pop
push
xchg
jge
xor
add
pop
inc
adc
lods
in
mov
in
stos
test
push
inc
test
push
nop
fldt
inc
fstpl
mov
mov
arpl
inc
add
add
clc
cwtl
rolb
lret
add
sbb
popa
xor
push
or
sbb
aam
or
addl
sbb
fs
ja
push
push
lds
pop
adc
sbb
adc
cmp
shll
scas
adc
and
loop
aaa
jmp
fmulp
and
xchg
stc
cmp
mov
sub
add
mov
lods
clc
shl
mov
add
pop
adc
push
popa
arpl
lcall
push
xchg
lods
or
mov
push
fwait
aad
test
outsb
ja
lds
in
sbb
xchg
add
push
cld
enter
xchg
outsb
test
adc
mov
sub
cmp
cltd
rolb
jmp
dec
aam
dec
jae
dec
les
and
mov
ficoml
xchg
hlt
push
cmc
test
xchg
nop
mov
cmp
clc
xor
out
cmovbe
lds
push
jp
push
pop
fiaddl
popl
add
adc
sti
inc
jne
xchg
sbb
ficoml
adc
inc
cmp
addr16
repz
sub
xor
cmpsb
dec
xor
mull
fwait
mov
adc
stc
pop
rcll
sbb
inc
cmp
and
stos
sbbl
mov
pop
xlat
enter
pusha
or
push
jno
inc
cmpsl
xchg
in
shrb
cmp
sub
out
sub
rcrb
add
lock
enter
ds
xchg
mov
shll
clc
fsubrs
inc
cld
in
ljmp
pop
adc
pop
ret
ljmp
mov
out
mov
dec
shrb
addl
imul
fidivs
dec
in
iret
xchg
dec
pop
aaa
stc
movsl
jne
sbb
addl
lods
jg
mov
sbb
xchg
inc
and
xchg
xchg
lods
xchg
pop
andb
mov
mov
or
notb
in
push
add
mov
mulb
adc
add
cmp
xchg
sahf
pusha
cmp
sbbl
mov
mov
add
xchg
jg
pop
sub
andb
ljmp
sub
sti
cmc
mov
in
adc
outsb
pop
mov
xor
sbb
mov
popf
aaa
leave
mov
mov
arpl
or
xor
sub
icebp
popa
jae
jbe
sub
or
sbb
jne
pop
push
and
sahf
lret
lret
jae
adc
test
jns
sub
lds
mov
aas
test
inc
jp
rcpps
outsl
mov
addr16
insl
cmp
jnp
pop
ja
push
sbb
jl
sar
cwtd
pop
add
mulb
mov
insb
mov
or
xor
loop
jnp
subl
push
cmc
mov
adcb
lret
roll
push
cs
pushf
mov
jg
pop
test
fwait
lret
arpl
push
push
sub
sbb
popf
add
xor
adc
mov
mov
addr16
nop
push
pop
pop
jnp
out
in
popf
leave
pop
or
push
sub
popf
out
xor
lret
cmp
daa
add
push
jp
and
mov
xchg
mov
cwtl
loopne
mov
add
push
stc
loop
pop
outsl
scas
pop
inc
out
xchg
xchg
cmc
or
sbb
xchg
mov
jne
aad
icebp
loopne
ds
xor
iret
jo
in
jp
test
imul
fsincos
inc
out
adc
rclb
mov
shll
sbb
aaa
dec
lret
or
imul
mov
fucomip
jmp
push
mov
mov
mov
cmp
xor
je
inc
lret
enter
aam
and
subl
add
jmp
pop
cmp
xchg
fdivrl
cmp
ss
out
add
int3
inc
xor
mov
aaa
mov
mov
xor
roll
cltd
jb
leave
and
call
add
loope
repz
std
adc
mov
jnp
lds
mov
dec
mov
push
jbe
cltd
cmpsb
and
dec
mov
add
sbb
sub
lahf
movsb
popa
cs
test
jns
fsubl
dec
mov
cli
addl
movsb
add
push
jbe
pop
sub
mov
lds
int
rcll
sub
enter
mov
fbld
xor
add
jmp
imul
dec
mov
sbb
jo
gs
mov
dec
cld
xchg
fistl
mov
or
fsub
add
push
push
jmp
push
jbe
mov
js
sahf
lcall
jge
sahf
xchg
cwtl
or
sub
jg
jl
orl
push
enter
xor
jns
loope
aas
enter
popf
movsb
inc
mov
lahf
bound
pop
jbe
stos
mov
sbb
cmc
loope
pop
cmp
cmpsb
xor
repnz
dec
roll
cmp
sub
push
sbb
adc
jg
ds
pop
sbb
push
mov
out
and
sub
cmp
or
int
test
sbb
lret
jl
mov
add
add
sub
gs
fldl
inc
and
ds
sbb
sahf
push
pop
out
mov
or
sub
incl
sbb
pop
jle
adc
push
sbb
push
inc
nop
fstl
add
inc
jno
ret
lds
mov
stc
insb
jae
mov
adc
inc
jnp
jbe
loopne
adc
in
and
mov
jmp
loope
mov
inc
fistpl
repz
out
int3
adc
sbbb
jl
daa
out
out
xlat
bound
popa
mov
data16
sub
ja
rorl
push
xor
icebp
popf
xchg
in
rolb
test
clc
fwait
aas
push
sbb
mov
sub
popf
or
je
mov
mov
iret
xor
xor
loop
les
pop
xor
fdivrl
les
stc
test
lret
lcall
imul
mov
dec
jns
sbb
sub
movsb
ret
xchg
mov
adc
test
rcll
push
les
test
inc
je
jnp
test
out
xor
hlt
inc
subl
lret
sub
cmpsl
and
mov
xchg
incl
and
xchg
icebp
repz
scas
fisubrl
cmp
lods
or
jbe
cmp
mov
xor
mov
jp
lret
and
cwtl
scas
rcll
fiaddl
dec
testl
xor
icebp
mov
test
in
mov
sbb
fsubrl
and
cmpsl
imul
mov
lods
jge
sub
cmp
dec
cmpsb
sub
xchg
shll
in
cmp
pop
jecxz
pop
ficompl
jge
jb
fs
mov
add
mov
test
imul
pop
rorb
out
jecxz
sarb
orb
xlat
aad
jp
clc
cmp
icebp
mov
cld
out
stos
insl
dec
cmp
ljmp
fstl
adc
in
push
jg
mov
ror
cmc
cmp
pop
loop
push
scas
in
test
fisubrl
sub
negb
mov
jns
xchg
jecxz
clc
sbb
jge
add
dec
mov
mov
add
rcll
xor
sti
inc
int
aam
outsb
outsl
mov
jno
mov
aam
mov
jl
lock
icebp
adc
sbb
lea
cmp
add
sub
pusha
and
dec
xor
jle
std
pusha
scas
xchg
ds
repz
out
in
adc
cmp
or
test
aam
inc
mov
lahf
test
rolb
mov
gs
and
sbb
lahf
sti
mov
sub
jl
adc
sub
mov
mov
shlb
sti
push
pop
popf
and
push
xlat
jne
aam
push
jmp
jno
pop
mov
adc
roll
add
cmc
fs
shrl
sbb
pop
sub
mov
push
mov
stc
icebp
outsl
lahf
lods
fsubr
test
loope
mov
ljmp
cld
xchg
call
nop
sbb
out
fistpl
inc
out
mov
imul
popa
lea
inc
lcall
jl
sub
jp
bound
push
xchg
add
in
cmp
mov
loope
inc
sbb
adc
xor
jnp
sbb
inc
xor
fldt
test
loopne
insl
dec
pop
mov
and
sarb
movsb
push
cmp
or
loopne
dec
pop
pusha
scas
cli
sub
shrb
lods
fcmove
lock
cmpsl
mov
adc
jnp
call
stos
fidivrl
push
adc
popf
loope
cmpsb
jg
mov
imul
cmpsb
inc
dec
fwait
int3
fcompl
and
jge
push
cmpsb
orl
sub
ret
push
mov
fadds
sbb
jns
push
mov
pop
pop
in
sbb
cmc
adc
cmp
ror
adc
pop
mov
stos
mov
mov
movsl
bnd
js
cmp
jns
lods
dec
jns
lds
into
faddp
std
test
cli
fiadds
xchg
je
fadds
pop
xor
orl
fsubrs
push
jae
fnstenv
je
or
push
ljmp
loope
adc
jae
sbb
enter
mov
or
or
repnz
cwtl
adc
push
lcall
cmp
enter
mov
imul
daa
jne
adc
jae
pop
adc
xlat
inc
or
test
ret
pop
push
leave
lret
aad
test
xchg
and
cmp
dec
jg
jns
mov
cmpl
test
mov
push
cmpsl
aam
mov
pop
adc
xor
lods
sbb
mov
frstor
or
icebp
cmp
jae
mov
and
addr16
mov
pop
leave
fistpl
cmc
out
addb
jns
sbb
sbb
xchg
outsb
jns
mov
ret
movsb
les
push
lds
addb
hlt
jge
dec
nop
and
js
loop
out
and
mov
into
pop
inc
cmp
idivb
mov
xchg
inc
sbb
subl
pop
cli
outsb
jp
push
xchg
mov
xchg
int
pop
pop
jmp
rol
adc
add
movsb
mov
jmp
mov
outsb
sahf
push
and
rorl
add
add
sbb
lds
insl
fdivrl
cmp
jbe
ja
sub
stos
push
testb
sub
jo
dec
stos
shll
ror
xchg
jns
jb
jl
push
pop
loop
out
jo
pop
aaa
stc
dec
cmp
es
pop
inc
jecxz
sbb
loop
xlat
test
loope
lcall
repz
pop
inc
mov
push
add
int
gs
sbb
int
cld
insb
push
mov
sbb
mov
xor
add
sbb
cmc
mov
cltd
inc
sub
add
cmpsl
push
in
sub
sub
add
mov
mov
addb
push
mov
sbb
outsb
inc
imul
sbb
mov
movsl
pop
xchg
imul
bound
hlt
dec
lret
shrb
xchg
dec
cmc
sub
fs
int3
loopne
pop
sbbb
sbbb
dec
shlb
push
es
push
scas
std
je
pusha
sbb
hlt
inc
lds
cwtl
ret
pop
fisttps
jmp
xor
xchg
into
mov
imul
adc
inc
adc
rcll
pusha
add
subl
inc
pop
leave
jbe
outsl
push
enter
gs
cmp
daa
adc
sbb
fldenv
lcall
mov
scas
nop
xchg
xor
or
rolb
shlb
jle
inc
xchg
mov
xor
loope
jnp
jle
dec
out
inc
sub
ss
jg
jae
pop
loop
scas
ds
enter
cmp
in
pop
xchg
xor
sbb
push
movsb
sbb
mov
pop
ljmp
adc
rcrl
fistps
fwait
mov
adc
sti
xlat
stos
jo
fdivl
loope
call
mov
jnp
mov
das
test
or
push
in
cmp
loop
or
into
xor
loopne
cltd
jno
mov
pop
xor
mov
adc
xchg
cltd
cmp
cmc
lret
aaa
movsl
mov
movsl
push
cmovno
add
ret
jne
add
mov
ficoms
in
push
movsb
pusha
inc
cmp
inc
mov
sbb
std
or
or
and
sbb
push
sub
scas
push
or
push
movsb
add
cmp
fnstsw
sub
dec
sbb
icebp
sub
mov
xchg
sub
cmc
sub
mov
les
sahf
or
mov
or
push
mov
out
pop
inc
les
and
lret
sub
shll
lret
sbb
ljmp
cmp
sbb
or
and
mov
add
dec
xlat
and
out
and
lods
movsb
call
mov
das
arpl
pop
leave
out
sahf
insl
das
pop
pop
inc
lret
jg
or
dec
mov
mov
xor
inc
std
cwtl
dec
insb
jbe
cwtl
lock
sub
dec
sbb
jecxz
mov
xchg
xor
test
call
fistps
pop
les
add
xchg
jae
filds
add
mov
stos
aaa
aas
push
mov
sbb
movsb
mov
test
or
xor
push
das
mov
jnp
mov
mov
das
mov
stc
and
nop
or
sub
stos
mov
fs
sbb
rclb
mov
or
sub
pop
movsl
inc
mov
out
mov
mov
add
pusha
sbb
cmpb
xor
test
ja
xor
dec
jbe
adc
inc
cmp
fwait
and
xchg
in
scas
mov
or
mov
test
sbb
pop
and
fnstenv
or
lahf
mov
movsb
enter
xchg
loope
mov
out
test
inc
fstpt
jle
mov
aam
sbb
mov
sbb
pop
mov
aad
pop
int3
rorl
adc
lods
sarb
enter
int
mov
ljmp
xor
push
loopne
jo
repnz
lret
push
sub
lods
mov
xchg
outsb
loope
test
xchg
and
aas
imul
adc
adc
call
test
mov
and
daa
jge
dec
add
xor
rclb
pop
push
jae
int3
in
aam
push
pop
icebp
stc
sbb
dec
popf
pop
in
mov
pushf
mov
mov
xchg
cmp
mov
fisubrl
mov
adc
cmp
lock
in
je
jnp
push
hlt
popa
test
into
ja
out
xchg
pop
lret
or
xchg
mov
push
ljmp
pop
dec
push
xchg
cmpsl
cmp
movsl
lahf
cmp
orb
stos
inc
sbb
dec
cltd
repnz
cwtl
mov
xchg
adc
pusha
dec
jno
mov
popf
ds
mov
cmp
jno
cli
call
fwait
lods
or
inc
lcall
dec
ds
jp
or
movsb
aaa
aaa
sar
stc
mov
ja
in
push
cli
push
sub
hlt
fsubrs
shll
cld
push
cld
les
xor
dec
out
jle
pop
loopne
cli
jae
call
fldlg2
pop
je
daa
jae
add
cmpsl
dec
and
bound
mov
fistl
es
inc
cmp
dec
push
pop
sbb
sub
mov
add
pushf
mov
fsubrs
mov
or
clc
dec
lods
jne
pop
adc
cmpb
dec
test
out
mov
inc
adc
scas
mov
movsl
inc
push
or
pop
dec
je
mov
popf
mov
fninit
out
sbb
push
inc
xlat
cmp
mov
jne
jl
add
sbb
pop
mov
call
sub
push
inc
cmpsl
mov
fists
lods
push
aaa
mov
incb
in
shlb
das
inc
xchg
gs
adcl
mov
in
shll
mov
mov
push
inc
popa
out
xor
and
sub
idivb
or
faddl
push
sbb
cmpsl
cs
inc
xor
jno
pop
dec
pop
or
pop
ficomps
jns
in
stc
xchg
dec
movsb
je
jecxz
xor
fs
sub
sub
and
or
cmp
sub
sti
imull
mov
sarb
daa
jle
mov
mov
jle
fisttpl
dec
jb
jge
pop
out
jle
or
add
jae
ss
shlb
out
push
testb
pop
pop
popf
jo
loopne
add
mov
aam
shrb
sub
xchg
push
sbb
fidivl
push
ret
push
xchg
inc
push
mov
pop
jo
adc
cmpsl
jbe
mov
lea
lret
in
add
jle
jne
jb
cmp
je
sbb
dec
shl
nop
pusha
out
jno
cmp
lcall
or
dec
dec
jle
sti
ja
test
sbb
sub
sbb
int
int3
jp
xchg
or
inc
jecxz
ljmp
xor
lret
test
sub
dec
fnstenv
mov
movsb
sub
or
and
dec
lahf
loopne
flds
ret
ret
ljmp
mov
cmp
cs
std
scas
cmp
pop
push
push
int3
sti
add
mov
adc
pop
gs
cltd
or
xchg
dec
cld
dec
mov
fs
ficomps
jl
inc
cmp
insl
loop
in
add
dec
jns
repz
mov
subb
ret
inc
test
ljmp
mov
lret
mov
add
mov
pushf
movsb
adc
insl
sahf
pop
je
inc
scas
push
xchg
cmpsb
xchg
cwtl
popf
push
sbb
jnp
push
push
enter
arpl
push
orps
xor
pop
loopne
loop
jns
fsubrp
ds
daa
xor
add
mov
sbb
leave
int3
adc
adc
hlt
pop
inc
push
push
addr16
icebp
and
test
in
ret
mov
sahf
xor
scas
sbb
adc
cltd
cvtpi2ps
ja
aaa
lret
jmp
inc
sbb
adc
cmp
jae
sarl
jp
pop
call
jp
in
push
and
gs
ret
adc
mov
sub
sbb
mov
mov
dec
xchg
addr16
mov
stos
mov
in
cmc
mov
je
scas
mov
stos
aas
adc
dec
xor
xor
call
jp
push
clc
or
mov
xchg
pop
leave
aaa
test
insl
push
mov
xor
dec
aam
lea
das
jo
xchg
repz
mov
fs
test
jg
xor
mov
punpcklwd
adcl
cld
jns
sbbl
dec
ficomps
ret
sub
daa
and
push
mov
xchg
frstor
jmp
lret
and
mov
and
inc
mov
es
add
inc
int3
test
aas
jno
xchg
outsl
inc
jae
and
jae
or
dec
sbb
push
mov
cmp
and
pop
add
ds
push
push
inc
lock
das
int3
cltd
stos
orb
pusha
cmc
loope
sub
pop
mov
dec
jmp
jge
xor
in
dec
or
jo
sub
dec
or
out
shll
inc
imul
in
ret
push
add
inc
dec
sub
push
mov
pop
jnp
lea
repnz
fdiv
jg
push
ljmp
lcall
mov
out
pop
sbbb
inc
in
adc
dec
jmp
test
mov
fcompl
adc
stc
lds
jno
mov
addb
addb
mov
sahf
add
mov
dec
test
inc
mov
mov
orb
in
loop
cmpsb
push
mov
cli
xor
movsl
popw
cmp
jbe
adc
cmpsb
mov
and
les
push
fistpl
out
ss
cmpsl
inc
fcmovbe
inc
popa
jmp
out
push
fidivrs
hlt
xchg
inc
jmp
push
xchg
jle
xor
jmp
or
mov
fimuls
push
sbb
and
jo
jbe
out
aas
jnp
xorb
pop
mov
lcall
dec
lods
out
adc
outsl
pop
sub
movsb
sbb
dec
mov
xor
aad
test
aaa
rcrl
cli
mov
inc
push
out
leave
or
jbe
and
fimull
test
icebp
lods
dec
push
aaa
ror
and
sarb
loopne
aas
out
and
inc
or
push
mov
and
dec
push
imul
les
inc
push
xchg
mov
cltd
test
push
dec
pop
adc
movups
test
sub
mov
push
or
adc
and
cli
cmc
outsl
mov
test
xor
es
div
dec
push
push
jns
lods
xchg
or
fldenv
pop
ds
cmp
push
pop
lea
out
arpl
push
sub
or
dec
add
pop
mov
imul
push
addr16
jnp
pushf
jp
lahf
sbb
add
sub
cmp
adc
ja
hlt
lcall
xchg
outsl
nop
mov
scas
outsl
mov
daa
or
addl
cmc
jl
cwtl
or
pusha
fsubrp
push
out
nopl
xchg
stos
jg
fdivs
insl
arpl
insb
xchg
iret
xchg
fwait
lds
push
es
aam
and
ss
add
push
mov
inc
jge
popf
je
popa
pop
sub
mov
sub
test
ficompl
cmp
jecxz
aam
add
mov
xchg
dec
xor
mov
push
loop
or
in
stc
sub
fs
and
and
sarl
insl
xchg
or
xchg
movsb
xchg
arpl
mov
add
mov
sbb
and
push
shrl
ss
es
xchg
add
or
pop
or
inc
das
sbb
and
sahf
cmp
adc
into
cmp
add
xchg
jno
push
ret
inc
leave
in
test
shll
in
dec
mov
mov
movsl
jbe
flds
mov
in
call
and
pop
and
mov
add
cmpsb
pop
xlat
aad
loop
outsb
and
iret
lock
pop
xchg
adc
lret
push
mov
gs
iret
mov
fldl
sbb
imul
test
xchg
mov
mov
mov
popw
cld
popa
pop
fadds
mov
out
push
lahf
or
xor
xchg
lock
out
and
jp
push
ja
sbb
or
scas
or
add
sbb
jns
cld
aad
inc
pop
ret
out
xor
jnp
insl
aam
mov
scas
aam
shrl
shll
push
in
mov
push
mov
lds
stos
add
push
or
inc
or
mov
movsl
test
icebp
or
insl
push
xchg
inc
mov
fnstcw
inc
add
cmp
in
lods
imul
pop
fadd
xor
pop
lret
ljmp
or
inc
dec
hlt
mov
es
mov
sub
je
pop
test
fimull
jmp
into
test
testb
addr16
lea
sahf
shll
jne
jecxz
pop
repnz
push
pop
push
sub
mov
lds
lahf
push
pop
xor
push
shrb
adc
ret
movsb
mov
mov
rorb
out
gs
push
push
cli
mov
shrl
filds
test
jmp
loope
insl
mov
lock
jmp
clc
sub
loope
jno
shr
scas
aam
ljmp
outsb
sbb
div
hlt
and
fstps
mov
scas
mov
pushf
xchg
mov
push
mov
and
sahf
push
xor
cmp
mov
aam
pushf
cmp
inc
or
ret
pop
lock
in
lods
cmp
aad
testb
mov
in
shrb
aaa
cwtl
es
sub
jge
test
and
mov
cmp
mov
out
movsl
subl
mov
jp
dec
and
add
insb
mov
fwait
je
rcr
push
aam
cmp
test
adc
adc
jecxz
or
sarl
mov
sbb
aad
mov
mov
xchg
jecxz
fstp
cli
adc
shl
cmp
adc
movsb
sub
lahf
mov
xchg
sub
mov
sbb
pop
lret
sbb
lea
inc
xchg
sub
mov
dec
cmp
shlb
out
aas
adc
ret
int3
daa
adc
fiadds
xor
cmp
flds
test
addr16
mov
xor
xchg
jg
dec
daa
ja
xchg
push
lods
int
mov
xchg
in
das
xor
adc
or
pop
cmp
in
inc
sub
mov
xor
je
insb
xor
mov
pusha
inc
test
xor
test
movsl
daa
ret
inc
decb
sub
iret
xor
mov
in
call
popf
call
cmpsl
inc
icebp
jnp
pop
jo
mov
in
test
dec
mov
es
or
enter
mov
and
lods
int3
pop
and
mov
jecxz
jbe
jae
stos
repnz
mov
xchg
inc
xor
in
lret
in
push
mov
push
out
mov
jl
movsb
popf
mov
pop
ljmp
jo
in
das
out
popa
call
mov
jecxz
lea
cmp
dec
aas
ja
adc
ds
cmp
mov
fldt
fs
loopne
cmp
cwtl
pop
into
inc
std
mov
or
pop
dec
pop
ds
insl
sbb
push
test
test
stc
cmp
push
mov
xor
add
adc
lret
or
inc
sahf
test
dec
jle
xchg
mov
mov
nop
cltd
movsb
test
lahf
dec
push
shrb
lahf
sub
les
pop
outsb
jle
cwtl
or
xchg
or
sub
pop
jns
mov
data16
xor
pop
int
sub
mov
xchg
testb
dec
fldenv
adc
sub
jns
scas
clc
mov
jo
in
mov
or
or
lods
gs
jo
push
enter
push
cmp
int
inc
jmp
gs
mov
faddl
cmpsl
push
push
push
in
push
ret
jp
repnz
daa
int
pusha
jo
outsl
sbb
lods
pop
repnz
dec
push
incb
sub
int3
loop
nop
push
sub
push
nop
cmpsl
or
inc
sbb
adc
sbb
inc
lods
mov
sahf
inc
test
leave
xorl
cmp
cltd
jnp
xchg
pushl
sbb
pop
ja
jle
adc
inc
cmp
push
dec
or
lock
fwait
adcl
lret
int
dec
adc
lcall
repnz
ss
dec
jae
stos
dec
mov
mov
mov
repnz
repz
mov
and
cld
sahf
push
cmpsl
xchg
cltd
aam
pop
pop
stos
mov
pop
mov
cmp
sbb
inc
xchg
push
ja
int3
jbe
icebp
pop
cmc
cmc
mov
es
jg
xor
add
cltd
xor
ljmp
repz
loope
in
shlb
fdivl
mov
sbb
xor
jbe
push
notb
push
jl
dec
mov
xor
cs
dec
in
sub
fsubrp
lret
pop
loopne
data16
push
jmp
mov
jnp
movsb
xchg
mov
jg
or
popa
leave
leave
jae
mov
rorl
xlat
popa
pop
push
nop
ljmp
and
mov
das
dec
addb
lahf
stos
negb
cwtl
loopne
mov
mov
test
jge
shrl
fsubs
push
out
mov
cld
cltd
and
jo
sti
es
ret
pop
push
in
stos
repz
mov
in
and
bound
jmp
push
xchg
ffreep
iret
sbb
jnp
dec
push
enter
fwait
add
jle
mov
cwtl
aas
jo
clc
clc
push
mov
pop
jno
push
mov
push
jg
hlt
fdivp
sub
adc
xchg
sbb
jg
out
es
or
les
imul
xchg
inc
fldl
call
push
dec
sahf
jle
fildl
xor
lret
push
or
aas
jle
fisttpl
lods
dec
mov
add
fildll
sub
dec
pop
addr16
mov
jle
flds
leave
cli
sub
ja
add
mov
adc
xlat
loop
ret
adc
insb
push
enter
jp
test
inc
sub
fsubp
les
lock
jbe
dec
stos
jbe
mov
push
fmull
dec
and
sub
adc
pop
ja
mov
lods
sbb
lea
test
jno
jbe
and
dec
mov
shll
mov
clc
jns
scas
adc
mov
and
and
and
out
jmp
cmpsb
rcll
mov
jo
lods
test
in
test
adc
in
or
push
mov
movsl
sub
test
mov
jmp
cmp
jae
mov
xor
xchg
add
ret
fsubrl
push
cltd
iret
or
inc
pop
xchg
adc
fdivrs
xchg
mov
pop
sub
xchg
jno
sbb
pop
cmp
inc
loope
mov
mov
mov
mov
inc
push
je
or
jg
xor
pop
dec
lods
icebp
cmp
cmpsb
inc
push
dec
hlt
mov
pop
jne
xchg
insb
movsl
push
pushf
sub
sub
and
sub
loop
xor
mov
mov
scas
push
jo
mov
popa
loope
push
push
sub
dec
sbb
mov
nop
cmp
or
dec
aaa
test
or
jp
inc
push
lods
in
pop
mov
fs
push
cltd
movsl
out
xchg
push
jg
out
cwtl
jl
jne
mov
mov
icebp
jae
jge
cld
repz
ret
xchg
inc
mov
push
fidivrs
stos
dec
adc
pop
xchg
adc
jns
or
push
testb
adc
sbb
hlt
popa
cld
pop
cld
sbb
pop
pop
lret
lret
rcrl
test
imul
mov
inc
mov
cmp
adc
inc
adc
notb
loope
lods
mov
mov
fnstcw
xchg
xor
mov
dec
pop
add
lock
data16
fiadds
ret
mov
ja
sbb
jmp
int
shl
test
imul
add
sahf
cld
push
adc
out
in
mov
jg
pop
cmp
mov
mov
out
nop
xchg
jle
sbb
mov
cmp
mov
subl
push
adc
aaa
xor
ja
rcll
movsb
fisubl
push
push
popf
testl
in
mov
mov
sub
movsl
inc
adc
imul
cmp
adc
and
cmp
test
mov
mov
insb
aaa
test
es
xchg
scas
bound
mov
movl
inc
cmp
jmp
and
mov
jne
inc
imul
test
dec
sub
mov
cli
and
xchg
dec
addr16
sbb
mov
popa
xchg
test
cmp
push
pop
and
push
pop
and
cmp
fldt
jmp
jae
test
xchg
push
sub
adc
dec
mov
xor
js
iret
add
pop
popf
xchg
pop
test
push
or
cltd
loope
cmp
negl
insl
mov
mov
fimuls
popf
cmp
xchg
push
fmulp
inc
repz
sub
pusha
lods
mov
cs
push
mov
and
les
inc
stos
lds
sub
es
sahf
int
out
fiadds
dec
loopne
cmp
jae
adc
adcb
and
ret
mov
rcrb
repz
adc
sahf
fistpl
pop
sub
push
adcl
repz
xor
loopne
push
sbbb
test
mov
aas
mov
clc
add
sarl
jns
stos
cmp
daa
shrb
pop
sub
test
lret
push
inc
fadd
fsubrs
or
test
jmp
mov
pop
or
jmp
sub
andl
xchg
inc
in
pop
inc
incb
sbb
stos
mov
enter
xor
mov
sub
dec
dec
rcl
repnz
push
scas
push
popf
and
test
out
shr
sahf
aam
mov
jae
adc
xorb
loopne
out
stos
frstor
fdivl
ljmp
loope
aad
dec
or
std
out
xlat
or
mov
outsb
xor
mov
in
movsl
jnp
sub
or
dec
cli
dec
push
loopne
test
jb
xlat
lret
rorl
rorb
sbb
pop
mov
push
imul
out
dec
mov
out
daa
mov
out
mov
mov
ffreep
add
lods
xor
jmp
stc
dec
sub
fidivs
shlb
mov
xor
nop
lret
and
loop
sbb
popa
div
flds
mov
jmp
cmp
mov
jno
movsl
out
cmp
push
sti
enter
sbbb
test
iret
pop
dec
xchg
jmp
fildll
adc
into
into
test
xchg
xchg
rcll
mov
jl
sub
sahf
clc
repnz
rolb
sbb
testb
push
pop
mov
sbb
lods
pop
xchg
into
popa
xor
cltd
jecxz
xchg
mov
push
pop
mov
cmp
stc
es
mov
xlat
rcrl
mov
jp
sbb
inc
and
mov
out
add
sarl
dec
sbb
addb
mov
xchg
ret
addb
xchg
adc
lds
in
cmp
cwtl
cmc
enter
add
push
insl
jmp
pushf
es
pushf
negl
aas
notb
stos
shl
xchg
enter
das
dec
pop
not
xchg
xchg
and
cs
gs
dec
mov
incl
push
call
pop
enter
repz
in
jno
lock
cwtl
pop
popf
mov
xchg
jmp
xchg
call
or
sarl
ficompl
and
ljmp
push
jecxz
cli
data16
mov
mov
scas
inc
adc
je
sbb
out
cwtl
lahf
inc
enter
aas
pop
xor
jo
and
pop
adc
cmpsl
cmpsb
pop
out
ret
into
xchg
push
mov
jle
mov
push
dec
or
jne
add
scas
sub
imul
dec
xor
mov
jno
aas
test
es
sub
das
punpckldq
xor
push
or
popf
sbb
sub
cmpsw
adc
test
cmp
rorb
mov
imul
mov
fistl
in
sti
pop
mov
cmp
outsl
mov
aaa
int
and
imul
mov
sub
aam
pushf
add
sub
shll
sub
ret
or
jl
add
jne
pop
jecxz
push
jmp
popf
xor
and
inc
mov
cmp
push
cwtl
mov
sbb
out
imul
jecxz
jmp
lea
hlt
movsb
xor
cwtl
lds
pop
mov
scas
and
loopne
sub
int3
lods
enter
adc
cmp
jo
cli
out
adc
gs
pop
add
inc
jb
ret
jecxz
push
sbb
cwtl
xchg
adc
test
and
jbe
pop
lods
dec
dec
mov
cmp
fidivrl
int
nop
mov
jmp
ficompl
xor
gs
mov
repz
pop
std
push
in
movntq
or
jns
xchg
xorb
ja
sub
cmp
mov
stos
dec
dec
call
mov
xor
dec
cmp
sbb
push
arpl
and
scas
mov
or
popf
xchg
test
arpl
daa
subl
add
enter
jo
push
mov
or
push
dec
mov
insb
mov
test
push
dec
jl
adc
xchg
sbb
or
jmp
inc
inc
rclb
outsl
xor
lods
aas
jo
addr16
rclb
mov
dec
in
push
es
mov
mov
rep
test
test
sbb
nop
fcomi
mov
dec
mov
cltd
jecxz
add
xor
xchg
out
int
inc
mov
aam
or
outsb
in
push
lret
xchg
movsb
sbb
negb
xchg
das
std
mov
ret
inc
push
arpl
leave
ret
jns,pt
data16
pop
jns
leave
jge
pop
or
jno
push
ljmp
xlat
clc
inc
xchg
insb
mov
sub
shr
pushf
push
in
out
pop
enter
dec
leave
mov
nop
or
hlt
ja
rol
sbb
call
les
pop
cmp
flds
pop
pop
jb
mov
and
fwait
lahf
push
xor
mov
mov
add
mov
push
mov
adc
in
enter
or
jbe
mov
aaa
clc
adcb
cltd
lods
out
dec
pop
sub
mov
mov
cli
lahf
push
fisubrl
mov
jle
in
jne
adc
xchg
repnz
mov
movsb
cmp
in
mov
pop
es
pop
inc
inc
cs
add
mov
and
repz
sub
xchg
daa
gs
or
mov
dec
push
leave
inc
mov
push
in
mov
in
cmc
jnp
loope
imul
sahf
mov
ja
xchg
and
ja
xchg
cmp
sbb
adc
das
cmp
lea
sti
pop
or
popa
lods
or
fildl
imul
pop
out
dec
add
insb
dec
add
push
sbb
dec
xor
or
fisttpll
lods
aas
ret
jmp
aaa
fsubrs
jno
cmp
inc
bound
in
dec
push
sti
test
or
andb
decl
jle
cmp
jbe
adc
cmp
push
add
mov
xor
xor
dec
sub
adc
fs
xchg
int3
push
je
cmpb
cmc
inc
ja
push
mov
jne
lods
jg
inc
nop
cmp
fldt
pushf
stos
dec
mov
mov
cmpsl
mov
lods
dec
push
pushf
push
ss
cwtl
sbb
push
outsl
js
sbb
and
jle
mov
repnz
adc
in
xchg
stos
adc
fdivl
push
fs
cmp
dec
popf
inc
cs
mov
cmpsb
lret
mov
int
adc
dec
and
xlat
inc
mov
jnp
lods
pop
out
inc
fsubs
cmpsl
pop
int
jecxz
and
ret
dec
push
push
jmp
inc
dec
jp
push
add
fwait
stc
jno
in
adcb
aaa
jae
ss
test
or
lret
lods
addr16
xchg
push
data16
das
push
mov
mov
daa
sti
scas
in
neg
stc
data16
mov
call
push
and
ret
or
test
clc
push
ss
push
push
push
imul
xchg
dec
jl
inc
cld
fildl
cmpsl
dec
or
pop
out
std
pop
jecxz
inc
pop
in
dec
cs
imul
sbb
add
pop
and
jne
inc
aam
cmp
and
test
and
sbb
rcll
stos
int
push
jl
clc
mov
push
aas
mov
adc
adc
imul
adc
pop
leave
xchg
push
aad
xor
loopne
jnp
dec
mov
fs
aam
int
bound
or
and
mov
or
xchg
aad
xchg
cmc
fnsave
cmp
cli
mov
jb
mov
cmp
sahf
addr16
mov
add
sarl
gs
lods
nop
imul
mov
stos
push
sub
js
stos
stc
mov
ret
mov
push
mov
mov
sub
ljmp
pop
scas
dec
fdivl
sbb
lea
fistpl
sub
loop
addr16
jg
int
dec
test
test
nop
pop
into
fs
cwtl
xchg
mov
pop
push
mov
push
cld
cmp
call
sbb
push
ret
ljmp
shll
mov
lahf
add
stos
call
out
data16
iret
mov
negb
in
mov
movsl
jg
lock
jae
or
add
movsb
outsl
stos
in
cmp
mov
sbb
arpl
fistpl
in
les
test
jge
add
jbe
or
xchg
add
mov
arpl
mov
cmp
stc
mov
popf
lds
imul
dec
in
mov
ljmp
add
lahf
iret
sbb
pop
leave
xchg
mov
sar
imul
xor
push
repz
cltd
or
dec
rorb
jmp
pop
scas
fwait
and
mov
mov
pusha
add
add
cmp
jb
inc
leave
out
xor
xlat
mov
fcompl
das
std
outsl
jne
fcoms
mov
in
test
lret
xlat
inc
xchg
mov
xchg
xor
fwait
add
insl
jge
mov
sbb
andl
bound
mov
and
xchg
in
adc
xchg
pop
or
mov
dec
mov
stos
orl
adc
sbb
jo
fcoms
xchg
push
sbb
mov
jb
dec
xchg
sbb
xlat
aaa
sub
rcrb
adc
xchg
xchg
xlat
lret
sub
movsl
lcall
jl
shlb
sub
mov
mov
push
icebp
iret
pop
out
xorb
adc
mov
jne
leave
mov
movsl
mov
or
dec
in
push
mov
shll
outsl
add
scas
mov
lods
or
inc
lock
pop
rol
jecxz
jbe
mov
cmp
add
cs
or
cmpsl
push
test
pusha
inc
js
mov
add
aad
dec
adc
enter
mov
movsl
int
mov
aas
jmp
cmp
mov
stos
mov
xor
hlt
and
idivl
cmc
push
xor
xchg
aam
dec
cwtl
sbb
xchg
sub
adc
stc
mov
mov
add
cmpsl
add
movsl
icebp
xor
subl
dec
mov
pop
cmpsl
test
lods
cmc
iret
add
shrl
sub
loopne
je
push
sbb
pop
and
adc
adc
test
pop
mov
sub
dec
push
test
pop
movsl
cwtl
xchg
xchg
nop
mov
or
je
out
aaa
inc
fldt
xchg
pop
shrb
sbb
mov
rolb
ss
mov
mov
adc
mov
dec
insb
imul
sbbb
adc
sti
dec
cmpsb
jmp
pop
push
aas
ds
sub
fs
xchg
stos
xchg
sub
rolb
test
outsl
enter
ret
and
mov
xchg
mov
cmpsb
inc
dec
mov
fistps
jl
movb
iret
gs
jno
add
or
icebp
lcall
mov
cmp
jae
sbb
pop
xor
test
rolb
xlat
jo
xchg
jo
xchg
jb
clc
sbb
dec
inc
je
dec
or
out
pop
lret
xor
dec
pop
jp
sbb
xor
pop
push
xor
dec
xor
pusha
cmp
enter
ljmp
dec
fcmovu
lock
mov
cmc
lea
xor
jno
add
add
sub
xor
pop
add
inc
mov
mov
jmp
adc
xor
xchg
popf
mov
pop
out
jecxz
lods
push
lret
insl
std
insl
xor
iret
add
out
mov
lahf
stos
mov
jp
ss
ret
lock
js
cltd
xlat
add
fwait
fsubl
int
xor
pop
sub
sbb
push
xchg
les
jmp
add
js
test
or
mov
mov
add
out
inc
and
sbbl
pop
or
lods
mov
int3
outsl
xor
and
adc
push
fdivrp
clc
inc
loop
sbb
or
mov
add
cli
pop
lods
jmp
int3
jp
fdivl
push
mov
popa
leave
outsl
jne
add
fisttpl
ret
sbb
cmp
in
push
mov
xor
fs
adc
test
subb
cmp
pop
sete
lcall
push
sahf
fsubl
cltd
cmp
push
dec
loope
mov
or
cmp
pmaxsw
push
in
out
std
aas
xchg
sub
xchg
push
dec
je
and
loopne
inc
jl
dec
cli
fnop
dec
adcl
jecxz
sti
xchg
pop
test
sbbb
xlat
add
popa
mov
push
cmc
sub
sub
inc
inc
mov
jo
xchg
inc
xchg
xchg
adc
pushf
mov
inc
jge
gs
cmp
adc
jmp
dec
inc
arpl
jo
repz
popf
rorb
pushl
sbb
shrb
xor
and
mov
sbb
pop
dec
inc
mov
aam
pop
ds
in
xchg
jecxz
es
mov
jmp
test
sbb
repz
or
jp,pn
test
lret
jg
and
repz
jge
shl
scas
fmull
pop
es
sahf
cld
cli
jg
arpl
mov
cmp
div
jcxz
mov
fs
clc
and
sbb
out
movsb
in
ljmp
fcompl
orl
pop
push
sbb
rcll
test
in
aas
jle
mov
fisubs
xchg
cltd
imull
imul
es
test
or
cmc
inc
enter
iret
and
mov
sbb
sbb
jbe
mov
sbb
adc
mov
imul
nop
lret
or
ljmp
scas
and
or
in
jg
sub
sub
outsb
mov
call
jg
test
movsl
mov
mov
ret
test
xchg
mov
xchg
adc
xchg
sbb
in
inc
rolb
rcrl
lods
gs
jns
cld
leave
arpl
add
adc
xchg
cmp
loope
loope
icebp
mov
jb
fisttpl
call
cmpsl
push
cltd
lock
xor
fdivr
pop
xchg
mov
aaa
lret
push
jp
es
addb
mov
mov
mov
mov
in
imul
nop
dec
setge
xor
lods
rcrb
push
cmpsl
cmp
in
cld
arpl
orb
cli
test
jmp
xor
inc
and
dec
lahf
in
add
pop
sbb
rclb
out
aad
mov
jp
sbb
jns
es
in
adc
insl
xchg
lret
enter
xchg
arpl
stos
lret
test
dec
nop
bound
outsl
cmpl
test
ret
mov
lock
cmp
fists
push
sub
popa
lds
xchg
jg
sbb
popa
js
rolb
testl
jbe
mov
mov
mov
shr
gs
xor
roll
push
sarb
xchg
test
pop
sahf
dec
lret
inc
test
sbb
jbe
mull
xchg
sbb
jmp
in
sbb
dec
xorb
xor
or
leave
and
jne
mov
and
icebp
cld
cmpsb
bnd
bswap
sub
dec
sti
xchg
inc
iret
lods
jo
sub
shrb
dec
xchg
sub
mov
sbbb
int3
sbb
xlat
sahf
aam
mov
pop
popa
stos
inc
sbb
orb
in
ret
xchg
add
ficompl
xchg
fisubrl
sbb
xor
mov
mov
mov
jae
in
adc
ljmp
subb
out
push
scas
mov
stc
mov
push
in
mov
subl
pusha
sub
aad
mov
in
out
sub
pop
add
std
movsl
clc
sub
jmp
mov
sbb
xchg
lods
add
sti
xchg
mov
je
cmp
aaa
mov
fdivrs
xor
rclb
lods
mov
cmp
lcall
mov
inc
jae
fisttps
push
xchg
pushf
addr16
popa
fsubs
jl
sti
cmp
imul
mov
lea
push
or
les
and
frstor
dec
jbe
push
test
sbb
adc
add
sahf
ljmp
and
sarl
rcrb
dec
sbb
pop
pusha
shlb
mov
stc
rcrl
mov
lods
cmp
sub
pop
sbb
adc
psllw
mov
cmpsb
sub
fstpl
sub
xor
fs
mov
jg
xchg
repnz
mov
inc
inc
sbb
adc
xchg
and
ds
in
mov
ja
out
lahf
fisttpl
insl
fwait
jb
stos
sub
and
arpl
popf
fcmovnb
sbb
jecxz
js
cwtl
nop
gs
cwtl
pop
test
divl
int3
pusha
push
adc
inc
jbe
pop
test
mov
cwtl
cmp
out
leave
in
jmp
cmpsl
scas
incb
jle
cmp
pop
xor
sub
push
jle
xor
xchg
lock
xchg
sub
jne
divl
adc
mov
pop
xor
add
pop
pop
aas
cmp
add
mov
fmuls
stc
aam
lock
push
push
sbb
adc
aas
pop
je
jo
sbb
and
and
mov
arpl
jecxz
int3
mov
inc
out
mov
xor
mov
xor
pop
jbe
repz
mov
ja
adc
jecxz
mov
mov
cld
sub
jb
rcrb
mov
dec
repnz
mov
cwtl
push
jbe
pop
pop
pop
scas
mov
mov
lahf
sbb
cli
lock
xor
push
loopne
push
addr16
sbb
cmpb
jo
pop
pop
arpl
inc
mov
xchg
movsl
popf
and
mov
popa
inc
jo
fistps
xchg
push
push
and
pusha
aad
cmp
ss
sar
cld
pop
sub
xchg
ljmp
test
push
arpl
and
push
lea
add
add
pop
dec
outsl
in
cmpsl
inc
imul
mov
dec
cli
and
fistpll
aam
xchg
fisttpl
je
sbb
mov
push
loopne
push
pop
out
lret
fstps
and
jb
mov
cld
fildll
data16
les
neg
mov
xor
xchg
ficoms
daa
shrb
rorl
bound
cmpsl
mov
rorl
cmp
fmulp
or
mov
mov
jne
popaw
pop
push
lret
iret
add
dec
jmp
mov
out
mov
in
jmp
mov
cmp
pop
jne
imul
or
aas
lahf
jmp
in
mov
push
mov
repnz
cmpsb
push
mov
les
mov
or
pop
lcall
and
das
rorb
movsb
repnz
test
sub
pop
adc
aaa
mov
daa
scas
jmp
dec
aaa
xchg
ljmp
insl
pusha
sarb
add
daa
ss
mov
leave
dec
and
xor
fildll
adc
dec
in
inc
mov
cmp
sub
test
push
nop
hlt
cmp
cmp
fsub
data16
mov
xchg
mov
test
fldcw
shlb
xchg
adc
mov
or
sub
pop
iret
pop
in
pop
push
ret
in
push
dec
negl
xchg
clc
call
lahf
mov
clc
sbb
iret
mov
data16
mov
fyl2x
or
dec
lods
aam
pop
adcb
and
dec
inc
push
pop
ret
cmp
shll
es
add
test
or
sub
lods
imul
push
shrb
mov
xchg
and
push
out
cli
data16
jne
cli
push
fnsave
cwtl
pop
movsb
xchg
xchg
icebp
sbb
mov
push
test
inc
call
lret
pop
clc
cmc
jbe
pop
ja
lret
call
add
pop
orb
mov
movsl
jo
jge
out
movzwl
pop
push
lcall
jmp
enter
movsl
jns
out
push
aam
jne
mov
jnp
push
add
jb
jbe
mov
sahf
sub
pop
pushf
dec
cmp
mov
jle
hlt
loope
jl
nop/reserved
jo
add
das
xor
mov
add
jle
inc
inc
test
stc
dec
fldcw
sub
mov
pop
inc
in
aaa
sub
scas
sbb
pop
pop
popf
dec
push
pusha
loopne
inc
lahf
iret
fldl
jge
cltd
or
in
pop
in
sub
jmp
out
sbb
stc
test
bound
pop
jge
clc
or
jns
add
ss
pop
stos
pusha
mov
in
clc
sbb
adc
jmp
frstor
data16
mov
pop
sar
cli
fists
and
jbe
int3
sbb
mov
out
dec
adc
dec
jg
das
or
rcl
and
mov
test
aaa
mov
add
mov
out
arpl
cwtl
or
or
fists
add
add
xor
xchg
pop
jmp
cmp
cmp
inc
test
movl
pop
shll
push
movsb
cmc
xchg
lret
sub
cli
lock
lret
and
mov
push
out
lahf
lcall
add
add
cmpsb
call
jne
sbb
pop
jp
cwtl
push
adc
jl
ror
cmc
add
push
cwtl
xor
sub
push
movsb
aas
sbb
adc
cs
lcall
cmp
or
sahf
aaa
out
push
ret
dec
and
fldcw
insb
sbb
jp
inc
dec
lock
push
sbb
or
dec
fnstenv
and
test
xor
xchg
mov
inc
push
mov
jnp
out
out
jmp
ds
or
js
jo
out
pushw
sbb
pop
cli
jmp
xlat
lret
cmc
std
xchg
cmc
sbb
inc
fmulp
mov
fcomps
adc
sub
into
fcoms
mov
sarl
dec
jg
cli
and
imul
jl
cld
cmp
icebp
pop
add
loope
decl
xchg
out
push
imull
enter
dec
add
in
stos
add
push
add
addb
cld
cltd
inc
orb
sbb
gs
stc
sti
ja
mov
test
pusha
std
in
adc
jmp
fwait
push
jmp
inc
xor
aad
or
pop
testb
inc
int3
inc
mov
and
mov
ja
popf
test
pop
push
outsl
lods
add
inc
stos
adc
into
add
je
add
add
jo
jb
sbb
lret
mov
stos
add
clc
ja
pop
in
or
cmc
pop
jns
inc
test
xor
inc
hlt
push
dec
popf
fwait
sbb
test
xchg
int3
xor
xchg
jae
ds
pusha
pop
xchg
pop
push
fcmovbe
cli
pop
movsl
push
sbb
leave
mov
add
jg
in
bound
ja
rcrb
pop
push
and
adc
xchg
push
sub
pop
mov
aaa
clc
mov
mov
imul
hlt
fstl
cmp
iret
xchg
jp
sbbb
mov
mov
and
gs
cs
and
pop
mov
adc
sbb
mov
jle
cmp
push
cmpsb
add
fcompl
push
push
nop
sbb
sub
pop
mov
sbb
ds
mov
mov
mov
mov
xor
dec
jae
dec
sbb
push
lcall
in
sahf
adc
cmc
mov
xchg
push
or
jo
inc
or
mov
hlt
out
clc
test
lock
cmpsl
rorl
mov
mov
jnp
add
insb
insb
fbld
ret
xor
test
push
lods
inc
sub
es
mov
leave
inc
push
aad
push
icebp
lods
xor
cld
loop
fmul
mov
inc
push
repnz
iret
jno
ja
addr16
stos
das
sub
jns
popf
call
dec
loop
sub
mov
pop
je
cmp
out
add
adc
xlat
repz
gs
loope
dec
mov
rorl
pop
mov
jmp
test
add
mov
out
and
and
push
xchg
cli
ljmp
push
das
jb
pcmpeqd
aam
pop
in
cwtl
mov
sbb
adc
test
push
ret
inc
push
xchg
xchg
sbb
mov
xor
iret
jge
insl
jg
outsl
ja
in
lahf
cmp
out
fnstcw
pop
imul
out
pushf
dec
cmp
aam
iret
and
xchg
ret
lahf
test
jne
inc
repz
sar
xchg
adc
push
adc
push
scas
shl
insb
test
inc
bound
dec
test
pop
stos
xchg
mov
test
or
xor
xchg
fadds
scas
add
scas
mov
push
pop
sub
clc
call
popf
adc
jmp
mov
mulb
fxch
lahf
inc
pushl
mov
dec
xchg
inc
rorl
in
test
jne
pop
xor
adc
jo
pop
shll
in
mov
das
jp
shlb
sub
pop
aad
jmp
xor
in
pop
pop
stos
adc
xchg
sub
xchg
test
adc
sbb
vpshufd
lods
jge
leave
shll
andl
divl
insl
call
mov
orl
jb
in
fmull
out
test
pop
mov
jmp
push
loop
jns
in
pop
add
jns
mov
cmp
in
int
mov
pop
pop
mov
rclb
dec
and
xchg
or
add
dec
cld
in
mov
mov
out
ret
push
adc
stos
lds
adc
pop
daa
shl
jne
and
mov
lret
lahf
in
dec
adc
or
arpl
daa
or
repz
mov
add
push
xchg
into
jns
pop
dec
jbe
repnz
cmp
and
pushf
inc
neg
js
stos
jg
repz
ljmp
jle
xchg
or
xchg
jne
fcompl
cmp
insb
es
lret
leave
cmpsl
dec
icebp
rcrb
movsl
push
pop
or
cmp
jnp
lds
sbb
jmp
inc
hlt
cs
fistps
or
nop
iret
cmp
add
mov
dec
ljmp
adc
leave
inc
ljmp
sub
sarl
in
sub
inc
lret
pop
ljmp
jecxz
jne
mov
outsb
cwtl
sbb
mov
test
push
pop
in
in
pop
fisubrl
jae
movsb
iret
lret
sub
out
test
ja
fdivrs
or
lds
mov
cmp
test
cmp
pop
and
aad
jp
mov
mov
mov
fdivrl
data16
push
lea
popf
adc
adc
adc
and
mov
add
popf
test
int
in
push
outsb
lret
pop
push
mov
adc
mov
ret
mov
dec
pop
repz
in
aas
mov
mov
sbb
repnz
push
sbb
pop
mov
add
mov
or
pop
push
mov
push
sub
cmp
aam
int
dec
mov
es
lahf
or
cli
decb
push
arpl
adc
inc
in
sbb
aam
push
add
mov
sbb
stos
ficoms
mov
mov
cli
andl
dec
push
dec
stos
jbe
aas
dec
fistpll
fiadds
test
lods
cmp
ss
xchg
ffree
int3
inc
xor
lret
scas
mov
xchg
pop
dec
inc
pop
jo
or
or
insl
leave
xor
jb
mov
mov
xor
push
lea
add
push
out
push
iret
in
setae
dec
scas
mov
in
movsl
bound
rorb
pop
into
jo
mov
cld
and
dec
mov
nop
adc
sbb
xchg
add
stos
fwait
xor
cli
mov
jnp
dec
push
mov
jp
jne
pop
cltd
repz
sub
outsb
bound
pop
or
mov
sbb
pop
scas
dec
sub
xor
shl
mov
out
mov
aad
mov
ss
lds
inc
adc
jb
jae
pop
ret
jle
mov
xchg
jmp
cmc
int3
insl
mov
xor
loope
fistps
xorb
loop
cli
outsl
xor
les
jo
adc
cli
sub
dec
mov
loope
jne
push
jle
push
fidivl
daa
insl
and
adc
popa
add
mov
inc
rcl
aad
cmpsb
sti
and
mov
adc
sbb
nop
mov
xor
xchg
pop
xchg
xchg
or
pop
and
es
cmpsl
push
mov
xor
pop
cmpsb
and
or
push
pushf
addr16
mov
xchg
and
dec
fildl
or
cmp
xor
jge
jl
push
mov
out
es
mov
push
mov
pusha
or
rorl
xor
mov
mov
int3
inc
mov
lret
clc
xchg
std
addr16
lcall
inc
jno
repnz
insb
stc
testl
sbb
pusha
imul
add
icebp
out
stos
xchg
cmc
and
repz
fldl
push
inc
sbbb
int3
push
aaa
mov
dec
or
inc
ja
jg
xor
jae
lods
addl
cwtl
push
shlb
mov
pop
xor
pushl
mov
sub
add
add
test
insb
dec
dec
fnstenv
test
adc
cmc
cmpb
shll
ss
mov
hlt
das
pusha
stos
push
movsl
push
cltd
push
pop
int
push
adc
xor
mov
adc
aas
xchg
push
add
addr16
lret
lahf
jne
call
jne
loopne
xchg
lds
sti
jmp
aas
sbb
iret
scas
out
pop
inc
mov
shlb
xor
push
mov
dec
and
mov
inc
xchg
rolb
test
mov
es
add
dec
jo
and
iret
or
add
push
inc
aaa
fimuls
out
sbb
push
loopne
mov
rorb
fdivs
outsb
ret
push
mov
outsl
cmp
cmp
rcrl
inc
dec
and
arpl
orb
pop
xchg
fidivrs
xchg
xor
movsb
loop
mov
lea
dec
or
das
dec
jmp
aam
dec
and
lock
dec
in
adc
call
fsubrl
jp
nop
jno
fmull
mov
and
or
add
int
sbb
and
ret
sbb
test
cmp
lahf
sub
adc
push
scas
push
mov
stos
dec
lea
fdivr
and
xchg
sbb
dec
out
int
adc
fistpll
cmp
lret
scas
xchg
fs
jne
fwait
iret
adcb
xchg
adc
bnd
pop
sub
lret
lds
push
lea
fdivrl
xor
mov
leave
testb
pusha
das
add
scas
mov
or
mov
or
xchg
out
xor
jns
lcall
int3
add
leave
sbb
pop
sbb
mov
fisubrs
or
lcall
shll
dec
rclb
fwait
dec
mov
int3
push
mov
mov
dec
cli
adc
mov
sbb
and
jns
je
imul
pushl
adc
mov
or
icebp
add
mov
and
jb
popf
inc
insb
fwait
data16
dec
mov
int3
cs
fimuls
push
arpl
in
mov
add
inc
insb
ror
jne
insb
jnp
ja
call
enter
jmp
xor
lods
cmp
and
data16
movsb
hlt
iret
push
scas
lock
dec
ret
stos
fnstsw
sub
int3
pusha
xchg
movsb
adc
aaa
adc
loope
sbb
aam
mov
jle
fldcw
mov
inc
push
mov
stos
adc
pusha
and
xchg
inc
mov
les
mov
mov
cltd
data16
fsubp
xchg
rcll
ljmp
mov
cld
out
mulb
out
cwtl
ret
rcll
jle
outsb
in
sti
test
and
outsb
int3
mov
filds
lods
jae
lods
inc
imul
into
fs
and
fiadds
aaa
mov
sub
mov
xor
push
push
xchg
stos
mov
push
sub
cmp
push
mov
inc
les
jge
lods
sub
adc
scas
jnp
test
push
fsub
stc
push
popf
add
aad
lcall
sbb
imull
jbe
mov
lahf
push
pop
dec
subb
lods
sbb
addb
das
mov
inc
movsl
cmp
ds
imul
ja
ret
pop
or
mov
sbb
mov
out
push
mov
dec
dec
add
das
popa
push
loope
pop
sub
aas
out
fildll
jle
sub
nop
inc
ja
test
pop
lret
outsb
add
inc
sbb
fistl
xor
loop
mov
mov
jns
pop
aad
sub
sub
movsb
push
xor
cli
or
pop
subb
jg
jae
inc
andl
push
out
mov
popf
or
sbb
scas
imul
stos
mov
xor
cmpsl
sbb
lods
out
mov
adc
push
outsl
ja
ret
lret
jno
je
outsb
push
sbb
leave
push
incb
cmp
xchg
dec
dec
push
loopne
push
or
rorl
arpl
cld
pop
add
fildll
mov
xor
mov
pop
inc
in
popa
in
sbb
push
int
decb
sub
bound
push
push
in
js
and
pop
mov
aas
push
push
inc
out
or
mov
aaa
adc
mov
dec
add
lret
cli
pop
sti
jp
lods
test
mov
fmull
cs
cmp
pop
repz
pop
adc
or
mov
fwait
gs
adc
push
in
pop
mov
imul
jp
mov
insb
push
aaa
inc
mov
cmp
push
stc
jecxz
jbe,pn
lock
xchg
inc
mov
pop
ljmp
jg
int
je
jge
mov
pop
push
incl
mov
jecxz
repz
arpl
fwait
jp
add
movsl
test
icebp
scas
insl
idivl
sub
sti
lcall
popf
fsubs
fcmovnb
sbb
scas
push
sub
inc
std
insl
adc
xchg
adc
pop
and
gs
mov
out
push
enter
inc
std
lods
ljmp
out
and
imul
idivb
loope
xchg
push
icebp
cmp
cmc
ljmp
mov
scas
mov
cmpsl
push
lods
clc
jg
or
inc
adc
fwait
shll
pusha
jg
cltd
adc
pop
push
xor
sub
jp
mov
mov
xchg
dec
pop
stos
sbb
add
and
out
das
add
faddl
add
and
xlat
mov
mov
and
repnz
mov
sbb
inc
xchg
push
into
or
lea
sarl
mov
insb
jbe
ret
cmp
cmp
mov
or
pop
sub
xchg
sahf
insl
pop
add
add
cmp
daa
stos
arpl
icebp
leave
xchg
mov
mov
adc
dec
mov
sahf
xchg
mov
enter
adc
xor
add
mov
jae
cmp
addr16
jnp
sbb
shr
sti
xor
add
push
pushf
test
mov
repnz
movsl
mov
arpl
testl
fistps
push
dec
out
pop
jl
imul
or
fs
repz
sub
ljmp
popf
push
icebp
mov
cmp
leave
and
mov
sbb
or
xchg
mov
arpl
add
adcb
cmp
inc
adc
dec
adc
mov
fistps
lds
ret
pop
lds
adc
dec
mov
push
cmp
add
sahf
icebp
fldt
sub
add
in
aaa
daa
fcom
insl
add
imul
cld
jge
pop
movsb
sarb
jno
sbb
xchg
sub
sub
adcl
rorb
shlb
repnz
and
test
out
hlt
ret
jle
jns
frstpm(287
popa
das
scas
xor
fadds
cmp
add
cmp
xorl
andl
adc
mov
sub
mov
idiv
icebp
add
and
jmp
push
mov
jns
ret
inc
push
lcall
jecxz
inc
xor
pop
jbe
dec
incl
hlt
addr16
lret
push
je
push
lds
testb
add
inc
dec
repz
icebp
xor
insl
dec
push
dec
jp
fwait
mov
outsl
adc
lods
out
fisubs
or
daa
xchg
je
sbb
jae
loopne
push
jne,pt
adc
and
arpl
std
fnstcw
mov
mov
sub
repnz
jmp
notb
dec
inc
push
ror
je
mov
enter
push
in
ljmp
jge
inc
rcll
add
mov
add
dec
movsb
loopne
arpl
and
out
and
sbb
inc
lods
cmp
xor
cmp
dec
aas
jb
repnz
arpl
mov
pushf
int3
push
mov
dec
dec
jo
xchg
mov
dec
orl
outsb
popf
sbb
lret
sbb
in
fimull
sub
mov
or
ret
mov
jbe
lcall
mov
mov
dec
sub
push
lods
cltd
shlb
mov
test
mov
aam
or
jmp
aas
movsb
push
pusha
mov
mov
adc
mov
jmp
lahf
adc
mov
xchg
in
lea
pusha
jns
cmp
mov
int3
jbe
and
loop
fistpll
bound
add
push
ficompl
xchg
sbb
out
jno
add
cmp
mov
pop
mov
rcrb
orb
add
aaa
mov
dec
leave
inc
mov
test
scas
stos
gs
in
xchg
cmp
lahf
ffreep
mov
les
cmp
xor
les
sbb
mov
movsb
into
repnz
mov
bound
mov
jecxz
cmp
push
addr16
and
pop
mov
dec
insl
or
aad
cmp
mov
adc
imul
mov
jns
popf
aas
outsl
xorl
xor
cmpsl
cmpl
cmp
xchg
mov
sbb
jge
mov
dec
mov
jbe
ret
mov
dec
mov
arpl
mov
stos
mov
adc
jle
xchg
mov
shll
pop
lods
pop
popf
jl
in
sub
loopne
xchg
jnp
pop
adc
mov
popa
lret
stos
cmp
lahf
cmp
xchg
fiadds
jnp
shlb
xchg
stos
or
sub
add
lods
xchg
cwtl
rcrl
sahf
bound
dec
repnz
mov
adc
and
mov
subl
inc
test
out
jns
scas
adc
sbb
add
mov
daa
adc
and
sub
adc
movsl
jb
mov
or
mov
xchg
jp
mov
nop
je
insl
andl
pop
inc
fsubs
xor
sub
sub
out
lods
xchg
fldcw
jno
das
lret
pop
jns
dec
jmp
loope
call
aam
test
mov
xor
mov
push
lds
dec
xor
addr16
loop
popa
pop
je
and
xor
sbb
add
inc
into
mov
pop
cld
xchg
mov
pop
insl
mov
imul
packssdw
fucomi
inc
rol
push
out
insb
daa
mov
mov
or
arpl
push
outsl
pop
jmp
cmp
mov
xor
cmpsl
faddl
sub
xchg
mov
pop
nop
xchg
inc
cmp
add
or
sbb
in
jo
cli
xchg
adc
and
mov
out
out
xor
mov
pushf
clc
push
std
push
andl
dec
sbb
ds
inc
call
cwtl
sub
mov
mov
gs
ror
cmpsl
push
lcall
in
loope
sub
inc
fs
cmp
xor
adc
mov
jl
cs
mov
aad
adc
add
repnz
mov
and
sub
xor
dec
iret
scas
pusha
inc
stos
pushf
movsl
sbb
jge
aam
jecxz
inc
in
mov
fs
loope
stos
mov
test
sub
jp
sub
adc
adcb
mov
cmp
mul
stos
xchg
insl
fcmovnu
mov
arpl
adc
and
jle
mov
into
mov
into
mov
inc
popa
xor
out
in
pushf
inc
dec
mov
test
iret
add
addr16
movsb
pop
pop
call
cltd
in
in
scas
mov
ds
cli
popf
enter
mov
mov
xchg
and
loope
dec
fldz
out
cmp
sahf
xlat
lcall
aas
lret
icebp
cld
or
xchg
pop
adc
fstpt
stos
ret
jl
notb
hlt
mov
push
addb
push
inc
fcomps
pop
inc
add
dec
and
dec
sbbl
sbb
fdivl
mov
dec
je
in
in
outsb
mov
inc
addr16
and
xchg
aam
add
pop
iret
jns
jmp
push
rcrl
addr16
js
jo
bound
lret
dec
mov
inc
pop
dec
test
add
push
and
cmpsl
push
sti
aaa
push
inc
enter
xor
jmp
repz
cmpsb
int3
data16
mov
xchg
fsts
repz
or
cmp
push
sub
sub
sub
aaa
push
mov
bound
pop
ss
pop
inc
test
std
pop
sarb
ljmp
jp
rcll
cmp
mov
sti
and
pop
sub
xor
fcompl
popa
loopne
and
test
xor
inc
sbb
lahf
cwtl
sub
push
sub
cltd
cmpsb
scas
dec
scas
ja
ss
mov
int3
jp
push
int
pushf
cmp
mov
cmp
mov
xchg
imul
insb
jmp
jnp
loope
sahf
cwtl
icebp
test
fdivrl
aam
cs
aas
test
dec
jns
data16
xrelease
adc
das
movsl
popf
outsb
xchg
adc
daa
aas
nop
loopne
mov
cs
xchg
dec
fucomip
lret
jp
jge
mov
ficomps
data16
lret
mov
pusha
adc
sti
and
and
mov
mov
bound
call
xor
ljmp
and
dec
nop
and
or
nop
popf
cltd
adc
ret
pop
pop
pop
mov
or
mov
sub
loope
fidivs
ljmp
push
push
sub
or
sbb
mov
imul
icebp
movsb
sti
mov
or
xchg
daa
test
pop
pop
push
xor
push
jo
xor
lock
jp
lods
jns
popf
inc
pop
and
in
cld
jnp
aad
lcall
aad
in
sbbb
and
les
test
jnp
xcrypt-cbc
sbb
mov
sbb
push
xor
jno
pop
pop
xchg
inc
push
pop
leave
call
xchg
fisttpll
xchg
cld
mov
sub
and
push
pop
daa
roll
pop
inc
xlat
ficompl
std
xchg
cmp
imul
insl
mov
pusha
mov
xchg
mov
pop
pop
dec
insb
movsb
xor
and
in
and
sti
insl
push
movsl
cli
jg
sub
sub
imul
movsl
xchg
inc
icebp
jl
cmpsl
fmuls
add
shrb
jp
loope
mov
push
icebp
sbb
or
cmp
data16
call
xchg
bound
insb
cmp
lds
je
aad
inc
call
stos
stos
inc
scas
adc
imul
add
leave
repnz
mov
int3
test
xchg
js
xchg
sbb
mov
arpl
fs
cmp
fidivs
incb
loope
cmp
out
mov
clc
jle
dec
idivb
xchg
adc
mull
adc
cwtl
mov
popa
inc
je
insb
in
decb
xchg
push
flds
movsb
sub
cmc
xchg
push
xor
push
push
inc
outsl
out
push
dec
sahf
sub
pop
xor
cmp
cld
push
cs
ret
rclb
sub
push
clc
mov
flds
ds
push
stos
mov
and
cmpsl
pop
push
lcall
out
lea
push
ret
mov
jg
pop
stos
lea
mov
adc
call
xchg
mov
push
leave
insb
fadds
les
scas
fbstp
jecxz
dec
pop
bound
cmp
popf
cmp
dec
pop
faddl
push
push
and
sbb
ret
test
jp
push
dec
adc
insb
das
xor
jmp
xchg
pop
or
subl
lret
cmp
inc
inc
lods
mov
and
in
pop
cld
push
es
lret
iret
arpl
scas
jnp
in
lock
fwait
adc
jmp
cmpsb
lods
push
jp
sbb
es
je
mov
int3
sub
jle
cmpsl
scas
or
cmpl
loopne
icebp
jmp
adc
jbe
mov
mov
ja
mov
enter
jb
shr
push
js
imul
insb
arpl
int
lods
popf
ljmp
push
cmpsb
cltd
repz
push
push
scas
dec
mov
ja
jmp
cwtl
je,pn
add
lea
jae
add
das
mov
dec
jecxz
arpl
cmpsb
mov
sbb
jle
fstp
out
movsl
sub
ds
ret
test
mov
test
pushf
mov
inc
sti
loop
lret
and
cs
movsb
push
mov
sub
mov
pop
add
cltd
sbb
sbb
shrb
in
ss
imul
ss
add
cmp
arpl
aam
mov
data16
cmpsb
in
int
addr16
addr16
pop
cmc
das
call
movsl
dec
cmp
pop
xchg
shll
ficoml
dec
bound
dec
sub
pop
cld
adc
inc
test
lea
add
ljmp
sub
cmp
in
mov
sub
ficompl
cs
lcall
aam
lods
xor
cltd
mov
inc
ficomps
fcoms
sbb
push
fcomi
push
and
xor
add
fidivs
repz
mov
lock
jmp
push
mov
or
jle
shlb
cmc
andnps
shlb
pop
insb
rorb
cli
sbb
and
out
inc
test
cwtl
mov
pop
mov
mov
mov
cmp
mov
pop
push
test
mov
loop
xor
cmp
inc
jmp
mov
push
adc
and
mov
test
testl
jmp
push
and
push
push
and
out
outsb
add
out
pop
data16
lods
xor
outsb
cld
mov
popa
cmp
lods
pusha
adc
xor
movsb
pop
pop
pushf
add
push
stos
lods
loop
push
popf
mov
out
orl
push
mov
shl
ficoml
mov
jo
es
sub
sbbb
inc
push
xor
stc
mov
in
add
pop
adc
sar
lock
dec
mov
into
mov
jp
inc
fidivl
pop
scas
sbb
push
sbb
ss
mov
shlb
enter
push
pop
push
mov
rol
or
add
cli
insb
push
pop
stos
movsl
adc
orl
fsubr
mov
xor
xchg
std
fstp
mov
fcmovnu
push
nop
mov
inc
dec
mov
add
adc
test
int3
jbe
out
or
mov
mov
ljmp
lea
jp
ja
incl
scas
mov
inc
test
iret
pop
push
dec
int
sbb
dec
pop
ret
mov
sti
pop
push
mov
repnz
fistps
mov
xchg
lcall
mov
cmp
sti
outsb
lea
or
call
nop
dec
mov
push
jl
xor
adc
cmpsl
push
ret
jp
loopne
fisubrl
mov
fldt
and
xor
das
cmp
aam
aas
jae
inc
pop
movb
rol
es
sahf
jp
mov
in
andb
adc
shr
es
loop
and
fyl2xp1
xchg
xchg
mov
or
mov
pop
in
add
hlt
push
dec
lahf
test
jo
sub
jbe
mov
cmpb
insb
or
inc
jbe
xor
xchg
dec
loope
aaa
dec
xchg
iret
hlt
jmp
rcrb
outsb
jecxz
xchg
sub
jp
mov
push
and
fnsave
dec
clc
rcr
dec
pop
stos
adc
aam
es
ret
popf
push
and
xchg
arpl
int3
xchg
cwtl
adc
xor
pushf
sub
pushf
fsubrl
xor
xor
mov
test
mov
jmp
pushf
ss
sti
mov
lock
fstps
or
subl
pop
sbb
pop
inc
inc
fimull
cmpl
sub
cmpsb
and
adc
push
adc
xacquire
cmp
dec
int
hlt
xchg
mov
push
out
xor
xchg
or
call
lcall
dec
jns
cs
sub
cmpsl
mov
cvttps2pi
movsb
add
notl
fnstenv
or
lock
int3
bound
lahf
pop
pop
xchg
lahf
sbb
repz
sbb
fstpl
add
sbbb
sahf
testl
cwtl
xchg
mov
test
lods
jo
sub
je
outsl
mov
mov
in
cmp
insl
aaa
les
test
add
jmp
popa
jns
add
add
clc
push
das
mov
andb
movsb
push
lods
pop
jae
mov
and
inc
js
dec
scas
orb
inc
push
xchg
jne
push
sbb
pop
addr16
mov
add
test
arpl
sub
and
sbb
into
adc
sub
sarl
jge
and
loop
ja
push
stos
push
sbb
sub
or
into
adc
insl
add
popf
jle
in
push
hlt
or
xchg
add
cs
sbb
faddp
add
leave
add
or
pop
imul
and
xchg
aam
lcall
hlt
or
ljmp
xchg
ss
pop
pop
or
ret
or
aas
cmp
outsl
mov
sbb
jae
sbb
out
inc
or
mov
jl
jae
fwait
jne
ja
dec
push
dec
fs
insb
inc
cld
outsb
cmp
rol
inc
dec
sti
in
xchg
mov
adc
lahf
mov
mov
ret
add
lret
mov
xchg
sub
repnz
or
add
lret
or
stos
jl
dec
sub
ret
mov
cwtl
sbb
xchg
je
ret
push
mov
rolb
xchg
mov
mov
shll
stos
imull
popa
out
fsubr
out
jns
idivl
inc
sbb
ret
inc
jle
adcl
push
mov
shrl
jnp
xchg
inc
scas
jbe
sbb
jmp
arpl
push
push
jl
dec
cmp
push
lret
dec
lret
sbb
inc
mov
jge
out
adc
push
push
ljmp
mov
pop
cmp
in
pushf
sub
in
movsb
aam
jb
cmp
addl
lret
fidivs
xor
cmpsb
dec
mov
cld
js
push
sbb
popf
int
ret
jecxz
ja
je
mov
cmp
jg
test
nop
jae
pushf
cmp
sbb
cmpl
push
es
ret
ss
mov
imul
scas
test
test
pop
lcall
lea
push
mov
add
mov
mov
rol
pop
push
pop
mul
jmp
adc
mov
push
cmp
pop
outsl
shl
lock
jo
cwtl
cmp
cs
jno
ret
sbb
pop
shr
incl
test
popf
mov
sbb
and
stos
add
inc
ret
iret
mov
mov
jbe
dec
aas
add
iret
xor
sbb
cmpsb
lahf
mov
xor
adcb
addr16
push
vpmaxsw
leave
gs
jge
and
push
clc
sub
mov
pop
xchg
cli
out
lcall
pop
gs
push
push
lock
mov
aam
popa
pop
dec
inc
mov
inc
dec
insb
insb
shrl
adc
icebp
int3
int
aad
sbb
das
incb
xchg
sbb
jbe
xor
mov
sub
insb
jb
cmpsl
mov
cmp
ret
mov
push
cltd
inc
sub
cmpl
cmpsl
ret
imul
and
jbe
int
push
and
std
add
cs
cli
insl
subl
jbe
xor
mov
in
jne
pop
outsb
sub
shrb
jne
cmp
or
fwait
movsl
scas
das
sbb
lods
pop
jae
mov
std
push
hlt
and
or
push
or
xorb
mov
dec
pop
mov
and
add
jbe
leave
mov
insb
and
nop
dec
ret
lahf
ljmp
mov
pop
loope
add
jno
pop
sbbl
scas
mov
loopne
sbbl
pop
nop
movd
adc
ret
mov
mov
pop
ss
xor
push
mov
xor
ret
pusha
cmp
dec
pop
jno
sub
jbe
data16
imul
shrb
jp
lret
lods
mov
arpl
xchg
lahf
jg
and
mov
push
push
repz
mov
insb
fsubrs
sbb
adc
outsl
sahf
pop
mov
and
mov
pop
rorl
add
cli
xlat
and
test
jle
out
mov
fldenv
xlat
xor
pop
setae
add
push
in
lret
int3
fcmovnu
lds
push
adc
dec
bound
repnz
jmp
ljmp
sarb
int
sbb
push
cmp
cs
ficomps
push
mov
or
sub
ds
lds
int3
adc
cwtl
sbb
add
fists
imulb
loope
movsl
ror
mov
push
cld
push
cmpsb
insl
daa
daa
mov
adc
dec
stos
adc
xchg
cld
push
cwtl
and
test
in
movsb
jp
repnz
dec
icebp
je
mov
fadds
inc
mov
or
fisttps
xor
push
mov
cmpsl
or
scas
fcomps
push
repz
fisubrl
sub
aad
xchg
scas
das
push
and
insb
or
je
leave
inc
fistl
cmc
fwait
pop
push
mov
mov
jmp
fsubp
cmc
filds
xchg
cmp
inc
inc
inc
int
mov
mov
sbb
js
push
mov
fwait
add
mov
push
pop
mov
mov
mov
aas
jae
or
loope
mov
test
repz
pop
mull
cwtl
inc
xchg
sarl
shrl
std
les
sbbl
xlat
pop
sbb
rcrl
clc
int3
scas
data16
pop
mov
int
out
aad
stc
fldt
dec
or
lret
mov
test
cmp
inc
int3
inc
popa
pusha
dec
data16
inc
inc
add
out
add
mov
and
cltd
cmp
jge
out
cli
in
je
movsb
frstor
jae
jbe
jnp
inc
das
adc
sti
enter
loopne
mov
lcall
push
or
inc
repnz
scas
jb
je
inc
mov
adc
pop
pop
xchg
cmpb
cmp
loopne
sub
lods
pop
push
jo
inc
stos
or
xchg
xchg
fisubrs
pop
xor
add
icebp
jb
fs
repnz
popf
inc
les
xchg
insl
das
push
xchg
add
sbb
out
xchg
into
push
push
jae
in
cltd
das
jg
int3
pop
xchg
shr
lods
fwait
movsb
pop
add
jmp
mov
lods
out
enter
sbb
in
sub
enter
cmpl
mov
pop
lock
sub
jp
add
sbb
in
inc
dec
out
mov
test
addr16
popa
mov
and
mov
push
cmp
mov
xchg
je
fidivrs
cmpsb
mov
dec
jno
adcb
sbb
jge
lret
mov
fbstp
outsb
mov
pusha
xor
pop
adc
rclb
sub
add
cli
mov
andl
popf
xchg
cld
fwait
das
sub
push
dec
push
dec
repnz
mov
js
fldcw
or
jle
cmp
pop
cmpsl
mov
test
insb
inc
pop
jb
sbb
leave
aas
mov
cwtl
xor
aaa
mov
lahf
mov
mov
aam
ljmp
cs
push
lcall
popa
inc
in
roll
mov
push
xchg
xchg
bound
outsb
ds
loopne
xchg
xor
cmp
cmp
arpl
ds
cli
or
mov
and
subb
pusha
sub
mov
xor
dec
xchg
dec
or
vmaxsd
jmp
sbb
or
cmc
ljmp
mov
test
imul
insl
and
lods
or
stos
pop
xor
fldcw
incl
cmp
mov
sbb
dec
imul
push
in
subb
sub
mov
addr16
out
in
loope
jmp
xor
lods
cmc
jecxz
xchg
sub
push
inc
push
sub
push
or
mov
dec
inc
pusha
pop
push
push
loop
mov
inc
mov
test
das
out
iret
cs
and
xchg
loopne
jo
icebp
in
dec
sbb
out
xor
jmp
cmpl
mov
sbb
add
sarl
inc
loop
push
jg
cmp
and
mov
cmc
insl
sbb
push
sub
outsb
sub
cltd
adc
cmpsb
jne
and
daa
xlat
rdtsc
push
test
xchg
movsb
lods
lock
mov
pop
cwtl
xchg
jmp
and
mov
jge
sbb
mov
sub
xchg
inc
das
mov
jp
cmpsb
fwait
mov
jns
insl
fs
mov
and
jo
mov
xchg
pop
mov
push
pop
test
mov
pushf
aas
mov
loopw
add
adc
flds
into
push
xchg
mov
xor
xor
inc
sbb
inc
sahf
scas
enter
fisttpll
out
es
and
mov
fcmove
xchg
inc
test
sarl
aaa
jle
pop
into
or
jnp
push
in
iret
mov
pop
and
das
fcompl
add
aaa
mov
or
xchg
push
movsb
cmp
aad
lahf
dec
mov
xchg
js
out
adc
lds
outsb
push
jnp
loopne
or
mov
adc
iret
mov
in
xor
fs
jnp
pop
push
subl
pop
leave
dec
inc
mov
fwait
push
stos
cltd
adcl
outsb
inc
or
adc
std
and
or
shll
push
lods
dec
jmp
dec
xor
and
bound
fwait
xchg
pop
hlt
sarl
sbb
mov
clc
or
mov
jae
lret
cmp
xor
adc
xor
jae
dec
outsb
jae
ret
subl
mov
mov
pop
and
push
mov
out
rcl
and
adc
mov
lods
es
xlat
mov
shll
and
mov
mov
pop
out
ret
cmp
cltd
addl
xchg
dec
lock
sbb
mov
mov
cltd
jne
psrld
int
clc
das
pop
cs
push
cmp
repnz
xlat
push
mov
shll
push
imulb
fisttpl
cmp
push
ror
xchg
xchg
jg
sti
mov
pushf
divb
stos
sahf
test
aad
push
jge
je
in
icebp
inc
enter
sub
mov
iret
lock
and
jl
pop
fcoms
xor
jno
dec
std
rcr
xchg
ds
int
and
jecxz
xchg
cmp
enter
idivb
sbb
scas
out
popa
scas
mov
stos
push
sti
and
in
ss
mov
push
sub
stos
xchg
push
xor
hlt
xchg
push
mov
push
flds
cmc
adc
ja
sbb
inc
insb
pop
add
lea
fmull
movsb
push
std
adc
outsb
rcll
ds
arpl
loopne
test
shr
push
sahf
mov
cmpsb
outsb
mov
add
jl
adc
lcall
add
sbb
xor
add
adc
adc
enter
xchg
ds
int3
in
pushf
cmp
mov
fmul
nop
sub
and
movsl
push
test
cmp
xlat
xor
sub
xchg
inc
xor
xchg
pop
mov
sbb
outsb
pop
pop
adc
out
dec
rcr
sbb
cwtl
lods
sbb
cmpb
add
mov
aas
mov
lahf
push
push
xchg
stc
ret
pop
pusha
dec
scas
mov
push
add
mov
fcompl
or
stos
in
jp
sbb
subb
xor
in
mov
int
mov
dec
cmc
test
lcall
or
rorb
mov
add
rcrl
jae
and
adc
inc
mov
mov
push
mov
stc
inc
sub
icebp
jne
mov
pop
lods
sbb
lahf
into
jns
sarl
icebp
insb
hlt
imul
mov
dec
or
insl
movsb
cmp
mov
dec
and
xchg
cmp
add
sub
xor
jl
insb
mov
daa
jno
out
cmp
insl
cmp
lea
or
jnp
dec
push
push
mov
cmp
mov
adc
jg
xor
insl
adc
insl
push
repnz
mov
int
mov
jle
lea
aaa
push
mov
call
and
incl
or
cwtl
shrl
adc
aaa
xchg
inc
sub
lods
rorb
add
lock
les
inc
orb
iret
mov
and
sbb
push
or
xchg
push
cmpsl
orb
mov
pop
fdivrl
ret
in
inc
dec
mov
loopne
popa
sub
pop
scas
push
ret
sbb
dec
stos
inc
and
push
pop
jo
insl
pushf
xchg
rcrb
stc
jae
ret
jp
ret
negl
pop
lea
mov
xchg
stos
repz
mov
cmp
fnstenv
jg
push
out
mov
mov
or
repz
xchg
jnp
sbb
pusha
jecxz
test
sarb
outsl
or
ret
std
lods
mov
inc
sub
adc
mov
mov
or
out
jp
icebp
rcrl
inc
add
cltd
and
loopne
and
mov
mov
cmc
push
xlat
imul
in
pop
arpl
mov
mov
test
in
shlb
out
cld
icebp
mul
cwtl
jge
mov
xchg
sub
sbb
outsb
pop
mov
mov
xchg
fsubl
shll
mov
movsb
aas
cwtl
fsubrp
push
cmpsl
dec
mov
out
cmpsb
movsb
fstpl
sbb
add
fimull
in
inc
in
xor
rcll
out
fcomip
mov
repz
sbb
cmc
inc
lds
out
aam
xchg
call
aam
adc
push
xor
mov
dec
dec
cs
mov
xchg
outsl
inc
mov
pop
fsts
jecxz
xlat
mov
jae
sbb
mov
dec
jg
scas
or
lret
sub
aam
adc
cltd
push
outsb
mov
pop
test
inc
xchg
mov
adc
fs
xorb
arpl
repz
cmp
dec
cmpsl
inc
out
dec
or
icebp
inc
aas
push
cld
push
pop
xchg
push
movsb
and
mov
sbb
int
sub
es
and
inc
in
jmp
mov
dec
push
cmp
sub
insl
jno
and
pop
push
ss
cmp
mov
stos
push
fcoms
testl
mov
dec
or
lock
mov
andl
push
fidivs
lahf
push
inc
cmpsl
addr16
test
imulb
rcl
test
sub
call
lods
or
dec
popa
testl
mov
out
stos
test
lahf
pop
scas
mov
pop
out
xor
xchg
pop
lcall
pusha
inc
test
sar
cld
mov
fsub
sbb
hlt
adc
mov
in
inc
pop
dec
fs
jo
filds
daa
sub
lea
ret
cmpsb
sub
and
xchg
cmp
lcall
and
pop
pop
test
andl
dec
scas
dec
inc
dec
les
xor
mov
xchg
adc
fcmovnbe
mov
jmp
fsubl
push
testb
mov
test
pop
mov
dec
std
fldcw
shlb
and
stos
jns
push
cmp
ljmp
enter
jnp
fimuls
sbb
push
in
mov
jnp
jmp
roll
ret
pop
into
push
pop
jb
xchg
mov
loope
mov
mov
pop
jp
or
xchg
sarb
pop
sub
das
mov
rcll
cmp
inc
jne
or
push
inc
adc
adc
aaa
or
add
popa
sti
adc
jle
testl
or
inc
xchg
sub
insb
int
sub
out
and
stos
mov
or
test
or
sbb
sub
add
sar
inc
mov
pop
mov
adc
sub
sbb
pop
cmp
pusha
push
ds
stos
push
jbe
cmp
xor
cmc
add
icebp
xor
push
xchg
mov
test
mov
jl
cmp
xor
add
push
adc
xchg
cwtl
adc
lods
aad
sub
cmp
test
cltd
jnp
repnz
pop
pop
xlat
cmp
or
adc
sarb
sbb
or
les
lock
adc
xchg
loopne
jnp
jge
int3
push
sub
stc
mov
lret
jg
fwait
jg
fwait
cld
scas
in
gs
push
aam
scas
orl
unpcklps
es
lock
xchg
jmp
sub
lret
or
and
nop
aad
xchg
ret
mov
pushf
in
adc
sbb
adc
push
xchg
push
fld
mov
test
adc
jg
fcmovbe
cld
pop
dec
arpl
mov
lret
sub
bnd
xchg
aam
std
mov
imul
cmc
xchg
les
pop
insb
in
sahf
xchg
test
mov
insl
pop
jp
mov
push
insb
jmp
xor
out
cmp
lock
mov
aaa
or
emms
outsb
pop
mov
sbb
fistl
mov
lock
lret
incb
cmc
jecxz
jle
data16
jp
mov
nop
mov
sub
mov
inc
aam
mov
sbb
bound
test
frstor
stos
aad
jnp
lds
jmp
xchg
testl
dec
aam
or
mov
jb
and
lahf
mov
loope
and
ret
cmp
mov
popf
mov
sbb
add
inc
fildl
clc
push
test
lea
add
and
mov
pop
and
movsl
lret
cmp
loop
jecxz
lahf
and
dec
dec
inc
adc
das
xchg
lock
lock
jo
cmc
push
les
jecxz
in
add
jno
xlat
or
and
dec
push
inc
movsl
and
dec
mov
cmp
test
cmc
dec
sbb
sbb
jnp
mov
loop
orl
adc
pop
sbb
pop
sbb
mov
or
push
lods
adc
je
frstor
push
das
ret
hlt
xchg
xchg
clc
test
or
or
xchg
mov
mov
scas
leave
inc
inc
push
xchg
and
bound
dec
mov
fisttpll
js
ret
adc
insl
mov
rorl
push
insb
loope
sbb
or
dec
mov
int3
in
gs
and
clc
cltd
jmp
cli
dec
scas
mov
sub
push
inc
and
enter
mov
or
popa
fdivl
jmp
and
jo
pop
jnp
add
int3
lret
sbbb
daa
mov
xchg
cmpb
sub
fdivrl
cmp
jns
cmp
addr16
repz
das
cmp
inc
dec
inc
lods
dec
int
or
out
and
jecxz
inc
cs
jnp
popa
or
sbbl
adc
inc
and
outsl
inc
sub
sbb
dec
or
add
and
iret
je
inc
mov
les
aad
cmp
fldcw
mov
mov
rcl
mov
lock
inc
cltd
add
push
jmp
sub
cmp
mov
lcall
int3
cmpsl
aas
lods
mov
icebp
jnp
mov
shlb
mov
push
sbb
aad
jge
add
xor
mov
mov
shlb
or
test
xchg
mov
pop
push
in
mov
fidivs
sbb
fldl
lds
and
out
addr16
push
test
movsb
jmp
popa
fnsave
gs
cltd
mov
lea
pop
sub
jno
jo
std
subl
dec
call
mov
out
jmp
dec
lret
ljmp
enter
and
xorl
cltd
jne
pop
sub
ss
sbbl
or
stc
fimuls
jbe
out
push
jl
je
dec
push
mov
ja
test
mov
xchg
cmp
hlt
sbb
inc
aam
sub
sbb
enter
fwait
add
and
in
push
xlat
sub
xchg
jge
sbb
imull
jne
cmc
push
icebp
mov
inc
insb
es
push
pushf
popa
pop
add
icebp
push
sahf
pop
cwtl
cwtl
daa
fwait
xchg
cltd
pop
xchg
test
cmp
jmp
sub
lock
xchg
mov
shlb
xor
cwtl
sbb
lret
lcall
adc
ss
out
dec
repz
cmc
add
cs
enter
mov
or
dec
mov
daa
rclb
or
inc
mov
out
push
ljmp
lahf
mov
ret
jmp
xor
xlat
push
xchg
dec
inc
jg
lock
shl
nop
xor
icebp
test
jne
test
shlb
push
cmp
sbb
inc
sub
cmp
gs
cmp
fnstcw
test
fsubrl
xor
call
xor
dec
jbe
pop
or
rorl
xor
aaa
jmp
lea
lea
dec
xchg
add
dec
xor
mov
fs
adc
test
in
das
call
push
cmp
and
lret
mov
jg
and
loopne
and
dec
jne
loope
dec
inc
pop
out
adc
adc
and
ljmp
push
sub
mov
jl
daa
mov
flds
hlt
icebp
mov
les
cmpsl
pop
mov
xchg
jge
inc
or
cmp
cmp
insl
cmp
sub
jbe
mov
int3
nop
mov
les
xchg
cmp
mov
inc
push
cli
ret
mov
or
cltd
pop
push
cmc
jae
cmp
pop
stos
dec
cmp
sub
iret
insl
or
xchg
push
mov
cmp
je
mov
or
sub
aaa
or
repz
ljmp
adc
push
jmp
shlb
fldt
arpl
lock
pop
mov
lods
stos
sti
jno
bound
sbb
sar
adc
outsb
inc
and
es
sbb
add
push
and
cmpsl
sarl
adc
dec
dec
js
outsb
xchg
and
xchg
and
adc
popa
jmp
jns
cwtl
or
sti
sbb
jecxz
in
lret
add
clc
lds
push
repnz
lods
xchg
fimuls
pop
adc
and
inc
inc
mov
xchg
jae
mov
and
int
inc
sub
add
jb
push
lea
imul
nop
push
jnp
fsub
mov
add
in
mov
mov
sub
stos
adc
push
orl
xor
out
push
inc
fsubl
pushf
lock
push
int
or
xchg
ja
jae
mov
rcr
xchg
loop
jo
jno
xor
and
push
or
cld
inc
mov
int3
inc
and
add
mov
in
movsb
push
or
leave
push
fstps
xor
push
fndisi(8087
lods
sub
sarb
out
out
popf
dec
and
push
mov
adc
leave
scas
mov
pop
leave
nop
or
sub
xor
insb
inc
jecxz
lock
add
bound
test
js
out
mov
lea
pop
jecxz
lret
mov
aas
es
mov
mov
lods
movsl
inc
out
cltd
data16
call
xlat
fmuls
imul
adc
inc
or
fidivs
cli
xchg
out
lahf
jl
mov
xor
mov
add
and
jge
and
push
xchg
pushf
fidivrl
fldcw
mov
jo
push
add
bound
icebp
movsb
push
je
repz
mov
fistl
jno
cmp
fistps
jmp
mov
push
and
mov
adc
dec
jno
push
push
xorl
jg
out
adc
out
jne
sub
pop
fbstp
jp
cmp
xchg
fisttps
sub
into
jae
jns
cmp
pushw
cmpsb
mov
int
repz
add
adc
mov
popf
mov
push
push
jp
cmp
insb
jecxz
daa
cmp
xchg
mov
cmp
push
mov
rcr
out
aam
fisttps
test
mov
mov
xchg
push
dec
js
adc
loop
xor
int3
xchg
lret
jne
cld
insl
ret
push
mov
adc
mov
pop
call
scas
sbb
addr16
sbbl
xorb
in
sahf
in
sbb
cmp
daa
mov
cmp
mov
lahf
dec
test
xor
or
mov
repz
mov
sti
idiv
push
scas
lods
std
loopne
or
pop
movsb
cmp
aas
or
pusha
ficomps
fiaddl
enter
mov
dec
loope
sbb
cmp
dec
mov
mov
jl
inc
enter
sub
adc
lea
and
mov
xchg
sahf
xlat
or
cmp
fiadds
sub
add
int3
bswap
fcomip
sti
pop
and
stc
imul
movsb
pop
and
daa
dec
sarl
mov
mov
ret
cmc
ljmp
xchg
xchg
dec
adc
pop
stos
push
lcall
loop
or
inc
push
push
adc
dec
out
push
or
inc
dec
enter
push
sub
jb
xor
xlat
fmulp
xor
pop
lret
xchg
cmp
inc
pop
inc
lret
cmp
sbb
fcompl
mov
mov
add
into
or
enter
xor
jmp
leave
pop
jge
or
add
add
and
test
mov
loop
insl
or
jl
loop
mov
push
popa
lea
add
push
push
xor
mov
fsubrs
and
leave
icebp
sub
test
add
jb
jbe
scas
push
mov
aad
aas
sbb
jnp
aaa
bound
inc
imul
insl
cmc
out
in
cwtl
movsl
arpl
xchg
inc
pusha
lock
jno
sbb
daa
mov
fs
fsub
pop
pop
in
mov
js
rolb
mov
movsl
ljmp
in
sub
loop
xchg
xlat
mov
jle
sti
divl
fs
mov
sub
dec
xchg
lods
sbb
jns
fcmovnbe
sbb
mov
mov
mov
inc
popa
sub
in
or
push
pop
xor
pop
xor
icebp
push
jb
stos
xor
and
fcoms
jp
dec
add
lods
mov
pop
inc
insl
mov
loop
push
or
fdivl
movsl
add
dec
push
das
out
mov
xor
jb
mov
imul
mov
clc
push
cltd
mov
ds
mov
popf
dec
es
fs
stos
sub
xchg
insb
jl
mov
insl
mov
mov
inc
push
mov
pop
insl
mov
loopne
data16
dec
sbb
fisubs
call
dec
and
inc
imul
xchg
ret
adc
in
ret
dec
or
mov
sbb
add
mov
push
mov
scas
sub
mov
rcrb
cmc
mov
mov
insb
sbb
push
mov
jp
shll
dec
add
cmp
mov
xchg
push
xor
push
or
push
xor
mov
xchg
out
jbe
stos
aam
add
lds
loope
test
push
dec
xor
inc
jne
jo
aas
and
aas
mov
jecxz
xor
leave
cli
es
xchg
adc
in
inc
fadd
inc
mov
push
mov
flds
mov
cld
ret
shll
mov
sub
cld
out
sahf
lret
or
dec
fiaddl
mov
cmp
xor
pop
test
jns
add
imul
imul
sub
mov
fldenv
insl
aas
cmp
js
jecxz
mov
roll
push
cmp
popa
stos
mov
in
lea
jp
ss
xchg
popf
bound
pop
pop
fisubrs
xchg
ficompl
daa
ss
popa
inc
adcb
cmp
adc
sbb
jno
fisubrs
out
test
dec
mov
loope
adc
jge
and
fs
sub
adc
push
push
fists
xor
dec
push
pop
dec
cmp
repnz
mov
dec
push
dec
pop
test
mov
aam
mov
sbb
dec
fsubs
add
xlat
push
sbb
mov
insl
cld
in
pop
adc
mov
mov
inc
cmp
mov
pusha
xor
mov
fisubrl
or
data16
jb
gs
xchg
cmpsb
mov
hlt
movsb
sub
mov
sbb
movsl
jl
add
dec
hlt
adc
roll
sbb
std
push
adc
sub
lods
xlat
or
loope
fsubs
mov
dec
lcall
call
cmp
out
pop
jge
mov
xor
fsubr
in
popf
push
xchg
dec
push
sub
sarb
das
jp
sbb
xchg
and
pop
mov
das
adc
dec
xchg
jae
insb
outsl
data16
fs
sub
push
popf
loope
pop
ficompl
int
mov
imul
lcall
sbb
scas
shrl
cli
out
push
in
orl
adc
imul
or
add
inc
and
dec
mov
nop
cmpsl
sbb
xchg
cli
xchg
pop
cmp
adc
mov
les
mov
sahf
xor
test
inc
inc
add
inc
loopne
pop
mov
sbb
sbb
repnz
mov
inc
ficomps
frstor
inc
es
loope
and
cmp
sbb
shlb
fstpl
in
dec
loope
or
imul
inc
pop
and
loop
push
in
je
pusha
pop
inc
cmp
mov
rclb
cmpsb
xor
mov
mov
call
mov
sbb
dec
pop
rorl
mov
scas
test
fidivs
or
jmp
xor
or
add
jg
or
and
xchg
xlat
add
enter
pushf
mov
jne
jle
jl
daa
mov
pop
mov
lods
inc
lock
jg
cld
movsl
scas
shll
push
xchg
pop
push
adc
add
subw
push
cs
adc
mov
push
xchg
sub
pop
inc
sar
cwtl
mov
xor
mov
sbb
aas
sub
cld
jb
shlb
pop
add
out
xor
mov
cs
jmp
les
negb
mov
ffree
ficoms
call
rcll
push
mov
sub
inc
scas
sub
dec
or
nop
dec
pop
imul
dec
lcall
pop
mov
mov
fwait
ja
jo
add
mov
jmp
add
mov
sbb
hlt
test
lret
aad
enter
sbb
into
cmpsb
iret
add
arpl
mov
xlat
and
das
cmpb
inc
insl
out
bound
xchg
sbb
jns
mov
rcll
and
push
lret
push
mov
add
push
arpl
xchg
push
mov
fucomi
les
cmp
push
ja
aaa
ret
lret
out
adc
jmp
jge
cmpsl
cld
shr
cwtl
popa
xchg
out
sbb
popf
fildll
mov
loop
mov
cmp
and
mov
sbb
inc
jmp
sarb
outsl
loop
cltd
mov
enter
cmc
rcll
jg
mov
push
ret
std
jne
movsb
jnp
or
int3
shll
enter
mov
das
out
sahf
ljmp
popa
inc
hlt
adc
and
sbb
andb
aad
ljmp
jp
pop
fcoml
popf
arpl
pop
and
sbb
push
je
pop
loopne
loope
mov
push
das
sub
mov
lcall
xor
pop
mov
lods
sub
xor
xor
sub
sub
push
pop
das
mov
imul
scas
clc
mov
and
pop
es
lock
mov
mov
pop
arpl
dec
and
movsl
and
and
subb
mov
xchg
push
jne
push
icebp
push
push
sbb
cmp
js
mov
loop
insl
shll
push
loop
jns
jp
fisubl
or
mov
test
jp
fsts
cli
push
scas
daa
pop
jae
stc
lret
xchg
rorb
mov
cld
in
or
inc
inc
mov
lods
adc
adc
pusha
sub
inc
push
mov
leave
testb
jns
push
xlat
sub
ja
push
dec
out
dec
push
adc
jb
xchg
mov
lret
insl
sbb
cmp
jns
int3
out
cmpsl
int3
and
and
cmp
sub
sub
cmp
cmp
pop
arpl
pusha
mov
arpl
int
mov
mov
aas
repz
dec
mov
jge
andb
sub
add
test
push
pop
mov
test
jle
xchg
out
jl
imul
gs
xor
mov
mov
cmp
call
jno
mov
push
sbb
xor
dec
mov
add
mov
push
movsb
mov
mov
in
nop
inc
push
xchg
aam
pop
xchg
push
jge
fcmove
pop
shlb
lods
xor
scas
out
push
std
int
jnp
rcll
mov
loop
sub
dec
rcr
call
xchg
sahf
js
or
fstps
push
aaa
lock
icebp
jl
pop
lcall
into
cs
icebp
daa
xchg
xchg
sub
test
jno
cmp
mov
and
lds
jle
clc
popf
jmp
push
add
cmp
stos
inc
dec
ds
fsubl
mov
jg
sub
and
push
sub
xor
push
cmp
int
xor
fcom
adc
das
addr16
sahf
fbld
in
mov
xchg
mov
xchg
sbb
push
bound
xlat
adc
dec
push
cwtl
push
dec
xchg
xorb
pop
addr16
adc
push
addr16
mov
or
push
faddp
icebp
sub
push
enter
xchg
sbb
data16
iret
xor
xchg
inc
add
lcall
adc
aas
push
inc
xchg
mov
call
dec
mov
das
loop
mov
mov
cwtl
ljmp
sbb
cmpsb
push
mov
sbb
ljmp
bound
test
gs
aas
pop
lret
into
pop
xor
leave
or
outsb
fucomip
mov
mul
pop
je
push
in
cmp
inc
fsubr
rol
hlt
aad
mov
cltd
cmp
std
shlb
pxor
and
sbb
push
inc
mov
sbb
jecxz
stos
ret
xor
mov
and
add
mov
mov
cld
xor
xlat
sub
dec
icebp
pop
push
mov
push
pop
movsl
or
loopne
push
pop
rorl
test
add
outsl
mov
stc
lock
je
xchg
ja
add
push
in
adc
nop
jne
iret
lock
xchg
mov
ss
cmpsl
mov
sarl
dec
clc
mov
scas
sbb
dec
xchg
cld
dec
into
xchg
stos
xchg
ds
fprem
xchg
imul
xadd
addl
mov
adc
shll
div
add
add
pushf
scas
mov
ja
mov
cld
and
int3
or
sti
push
add
iret
bound
stos
sbbb
ficoml
popf
adc
testb
imul
xor
pop
das
mov
mov
fiaddl
inc
mov
fadd
aam
xor
jl
fldt
rolb
push
es
stc
ljmp
out
fildl
inc
outsb
mov
in
ficomps
sti
cmp
ja
test
data16
popa
repnz
aas
inc
jmp
outsl
in
leave
adc
xchg
cltd
popa
fisubl
push
mov
popa
addl
add
mov
xchg
je
leavew
sub
cwtl
or
fmull
jbe
pop
dec
out
popf
mov
ret
movd
in
cmp
cli
sbb
fistpl
subb
sbb
testl
adc
xchg
jae
push
mov
ds
jle
lcall
addr16
test
sbb
mov
fdivrs
jo
cmp
inc
pop
js
mov
jmp
and
enter
mov
dec
loop
or
in
sti
xchg
ret
inc
into
cmp
dec
jno
or
or
and
pop
pop
fmul
or
aaa
inc
sbb
xchg
dec
mov
xchg
sub
pop
sub
leave
dec
addr16
jge
push
lret
jbe
sti
pop
xor
jnp
out
mov
pop
push
popl
xor
cmp
std
add
stos
jle
mov
pop
mov
daa
std
ret
or
shlb
sahf
mov
push
sub
aad
dec
and
in
rorl
xchg
cld
fmull
mov
fnop
mov
and
dec
test
mov
in
stos
das
lods
lret
enter
mov
in
std
mov
push
mov
mov
jae
mov
cmc
mov
fidivrl
mov
sub
daa
jns
test
notl
test
sahf
mov
xchg
cmp
loope
lock
es
mov
cmp
lods
inc
adc
movsb
dec
iretw
mov
mov
add
mov
daa
jle
mov
mov
scas
inc
sbb
mov
ret
mov
adc
sbb
js
roll
pop
push
sbb
add
test
sub
arpl
inc
dec
sbb
pop
push
ffreep
pop
out
jp
enter
aad
xor
and
rorl
scas
mov
iret
jne
sbb
je
cltd
mov
lcall
andps
popf
dec
in
rolb
shlb
jno
loopne
jge
outsb
movsl
push
scas
inc
js
or
mov
jb
andl
jmp
push
and
dec
or
adc
or
mov
fisttps
pop
xchg
nop
repnz
repz
xchg
bound
cmp
loope
jle
inc
xor
ljmp
jo
pop
inc
add
add
scas
dec
sarb
adc
inc
cmp
xchg
nop
xor
xor
stc
js
arpl
enter
inc
sub
pop
push
leave
push
mov
les
mov
xchg
adcl
ret
dec
lahf
insl
dec
pop
stos
aaa
les
xor
test
mov
mov
mov
out
xchg
es
pusha
cmp
sahf
cmp
je
xor
add
add
arpl
pusha
test
cmp
mov
jmp
xor
mov
add
popa
rcrl
ret
insb
mov
adc
xchg
push
pop
out
mov
bnd
jp
fsubr
sbb
xchg
aad
xor
jmp
shrl
xchg
push
xchg
and
out
stc
jb
pushf
jl
xchg
push
mov
jp
sub
jno
call
mov
fisubrl
lret
sub
ljmp
imul
sub
pop
pop
dec
sub
stos
out
cmp
jne
adc
insl
cli
mov
shll
jge
and
out
dec
mov
mov
ret
dec
jb
add
mov
out
mov
lea
push
ret
rcl
data16
repnz
sub
inc
out
jae
mov
aad
testb
movsb
movsb
fisttps
call
stos
out
int
mov
cmc
lret
ljmp
out
ja
adc
pop
sub
push
addr16
xor
arpl
fldcw
testb
inc
mov
test
mov
pop
and
and
in
mov
test
sbb
addr16
in
aad
xchg
leave
mov
add
fbstp
jecxz
movb
dec
pop
leave
dec
adc
pop
fsubrl
push
out
sbb
push
ret
pusha
xchg
loop
loop
int3
ss
mov
xor
jbe
fs
xlat
xor
mov
in
or
addr16
popf
pop
lea
or
out
and
outsb
xchg
push
xchg
int3
sbb
xor
les
ss
jae
aam
stos
mov
sub
sahf
or
addl
call
lret
rcrl
jns
pop
jno
call
mov
movsb
mov
inc
sub
cmp
mov
aam
mov
mov
pushf
fnstenv
push
stc
pop
int3
mov
adc
test
cltd
and
mov
jle
lods
xor
data16
jl
inc
jl
es
xchg
loope
loope
loop
rcrb
idivl
push
cmp
cmp
iret
jno
and
or
test
or
push
jne
or
stos
cltd
dec
dec
mov
scas
add
sbb
xchg
imul
cmc
and
jno
jbe
lods
xchg
imul
inc
jbe
or
imul
cld
xor
int3
repnz
push
sub
rorb
xchg
das
cmp
lret
pop
cmp
jmp
xchg
sbbl
repnz
push
std
stos
call
outsl
mov
repz
dec
dec
or
cmpsl
movsl
sbb
sarl
sti
sbb
lea
cmp
jae
pusha
test
jmp
mov
ret
mov
xor
enter
clc
icebp
cmc
jge
jmp
nop
mov
dec
lret
leave
outsb
push
nop
mov
popa
push
fisttpl
rcl
sahf
push
xor
mov
in
inc
int3
add
pop
pop
hlt
mov
fwait
add
ret
daa
sbb
arpl
adc
inc
test
push
out
iret
test
xor
mov
push
jbe
jnp
pop
mov
scas
shrl
int
shrb
lock
rol
push
sar
iret
jne
jmp
addl
mov
and
clc
lret
addl
in
sbb
jnp
aas
mov
popa
loope
dec
insb
add
sbb
or
movsb
mov
mov
insb
cmc
lock
scas
int3
jnp
scas
dec
xor
cld
dec
test
or
add
cmpsb
mov
into
mov
repz
push
mov
ret
push
mov
jb
jmp
adc
sti
or
xchg
push
test
add
stos
xor
insb
outsl
inc
push
fs
jbe
shrl
rol
dec
fsts
xchg
xor
imul
shlb
test
lods
pop
fidivrl
std
cmp
cmp
cmp
adc
mov
in
jl
xor
iret
dec
mov
sub
dec
cmpb
seto
inc
orl
sbb
pusha
out
jge
mov
std
outsb
addl
pop
outsb
lea
lret
adc
xchg
pop
mov
push
push
push
dec
ja
stos
jbe
pop
mov
dec
push
cli
inc
inc
adc
inc
sub
loope
sbb
xchg
fnstcw
xlat
sahf
sbb
mov
aad
inc
insb
pop
jo
mov
outsl
or
lret
ds
fisubrs
out
mov
cmpsb
lods
mov
xor
push
loope
sub
lods
dec
add
pop
imul
out
dec
pusha
sbb
mov
daa
inc
js
orl
cmp
pop
movsl
fnstsw
insl
cmp
mov
insb
adc
mov
xchg
pop
push
lock
psubd
test
aam
xlat
das
scas
sub
or
mov
and
test
scas
push
std
add
mov
shr
inc
mov
lods
jo
andb
pop
dec
iret
sbb
mov
add
enter
aam
sarb
pushf
xor
or
mov
cli
inc
xor
fs
push
sub
and
ja
lds
inc
add
fidivl
or
lods
dec
std
jle
fsubrl
dec
dec
and
movsl
sub
lods
ds
mov
mov
jae
push
xchg
nop
repnz
xor
jmp
mov
data16
fsts
push
fsubrl
mov
pop
in
add
add
mov
mov
xchg
js
mov
push
jmp
enter
test
jae
orl
xchg
mov
and
imul
cmpsb
cmp
pop
ret
and
fdivl
ds
xchg
jmp
mov
or
mov
mov
loope
push
stc
mov
out
sbb
mov
fs
adc
arpl
adc
call
sbb
mov
sbb
pop
lret
xchg
movsl
or
dec
stos
daa
iret
mov
dec
add
and
xor
fwait
xorl
jnp
or
dec
jno
addl
pushf
push
and
and
fisubl
repz
lds
loop
cmpsl
add
ret
or
movsl
aas
xchg
psubusw
scas
lock
mov
sbb
sbb
mov
sahf
push
add
xchg
or
pop
xchg
jmp
and
out
jnp
sbb
pop
xor
sbb
inc
pop
sub
cmc
nop
das
pop
jo
mov
iret
call
sub
fcmovnu
inc
sbb
das
scas
add
aad
pushf
mov
add
les
mov
mov
mov
out
sbb
cmp
mov
sbb
pushf
mov
and
fidivrs
pop
test
popf
stos
mov
int
ja
pop
dec
call
ss
xchg
push
das
cmp
mov
pop
int
xor
test
aas
xchg
lcall
sarb
div
jmp
sarl
mov
mov
xchg
imul
stc
xchg
aam
jmp
movsl
lret
loopne
rcrb
sti
out
daa
pop
js
outsl
insl
cmpsb
add
add
sub
push
pop
pop
imul
mov
lret
xchg
lahf
xchg
cmp
stc
mov
repz
sub
adc
xor
sti
mov
adc
cmp
push
or
test
sub
adc
xchg
jae
dec
pusha
jbe
imul
popf
mov
cmpsl
movb
sbb
xchg
roll
push
lcall
jno
or
inc
lcall
mov
xor
idivl
in
scas
mov
pop
or
andb
push
std
push
inc
test
icebp
mov
or
aas
lcall
loopne
in
and
mov
lret
aam
stc
pop
jl
cmp
je
fisubrs
pop
mov
push
sbbb
jl
lret
pop
pushf
pop
xlat
mov
scas
rorb
mov
mov
push
lahf
imul
enter
mov
cwtl
pop
push
in
mov
dec
scas
xchg
push
popf
lods
das
adc
shlb
fldenv
fdivl
out
pop
repz
in
cmp
rcr
push
out
xchg
dec
aaa
sub
xchg
dec
adc
test
inc
test
pop
push
aam
rorl
sub
ret
jecxz
insl
negb
sahf
or
pushf
imul
scas
lcall
sbb
xor
xchg
mov
add
pop
fs
push
idivl
mov
jmp
adc
and
into
cltd
mov
imul
scas
outsl
add
dec
xchg
jbe
dec
adc
mov
inc
mov
adc
pop
loopne
sbb
push
pushf
cwtl
mov
lea
cmpsl
in
or
ficompl
jecxz
sti
outsb
push
xchg
mov
xlat
aam
mov
mov
cld
sbb
mov
inc
mov
loopne
testb
inc
jnp
dec
inc
test
es
scas
dec
lahf
test
mov
mov
jne
add
mov
insl
inc
bound
ss
add
in
clc
lock
fwait
sub
imul
push
into
jae
loopne
xchg
mov
cmpsb
loop
lods
decb
inc
mov
ret
lcall
add
int
data16
stos
rolb
fdiv
orl
mov
xchg
push
fnstcw
repz
rclb
push
es
cmc
leave
clc
call
xchg
hlt
mov
stos
dec
jo
repnz
jnp
xchg
out
mov
cmp
sbbb
ret
or
stc
sbb
cs
xchg
mov
push
je
loopne
call
push
int3
xchg
push
subb
call
cmpsl
shl
fbld
outsl
jle
sahf
pop
xor
sub
int
inc
dec
add
or
repz
lods
js
dec
fnsave
imul
adc
add
scas
xchg
jl
outsb
add
inc
or
fs
cli
dec
and
std
and
test
add
xchg
lods
stc
adc
push
sbb
mov
push
test
xlat
bswap
push
js
fisttpl
mov
nop
jge
loopne
add
out
and
add
loop
lcall
lds
aam
cmp
adc
xor
dec
push
mov
xor
add
movsl
pop
roll
jecxz
inc
mov
insl
push
lods
pop
jmp
xchg
adc
stos
push
cmpsl
stc
push
pop
cmpsl
xlat
ljmp
sahf
nop
mov
jno
push
xchg
js
movsb
sbb
pop
jle
adc
ret
adc
into
ljmp
xor
mov
sub
mov
gs
adc
fcomp
or
and
outsb
push
outsl
xchg
and
in
cmc
mov
fistl
or
lods
clc
sub
imul
xor
cmp
jge
mov
xchg
push
scas
aaa
lret
pushf
enter
push
xchg
fwait
xchg
stc
add
sbb
inc
les
pop
test
jge
lcall
dec
lea
aam
xchg
fistl
cmp
mov
adc
iret
orl
into
outsb
fdivs
in
imul
out
xor
int3
lcall
xor
adc
inc
dec
jno
fcomp
clc
sbb
cmp
mov
mov
mov
add
andl
xlat
mov
mov
inc
mov
icebp
iret
or
or
push
rcrb
faddp
ljmp
mov
sub
mov
and
std
test
jnp
mov
std
mov
add
movsl
or
iret
jnp
fildll
cmp
addr16
xor
inc
sbb
js
push
mov
or
mov
or
mov
push
xchg
mov
popa
mov
arpl
lret
fmuls
push
lahf
ret
pop
mov
and
in
std
pop
adc
cmp
and
arpl
dec
arpl
out
enter
out
cwtl
pop
lods
fidivs
adc
xchg
mov
jecxz
mov
mov
dec
push
ds
into
or
lds
pop
icebp
push
push
add
sub
jecxz
sahf
mov
mov
adc
fyl2x
cmc
test
repz
push
lock
lea
cli
xchg
pop
cmpsb
jp
fcmovnb
outsb
call
xchg
es
cmp
mov
ret
pop
aaa
or
in
cmpsl
add
xor
mov
cmp
xor
push
mov
pop
dec
xchg
cmc
data16
mov
andps
sub
jge
imul
add
push
push
and
mov
push
daa
lret
insl
cmp
das
pop
icebp
add
xchg
xor
out
xlat
pop
push
clc
mov
mov
push
and
sub
jle
lret
mov
push
pop
std
and
fstl
lods
sbb
sub
lods
and
mov
push
das
pop
adc
clc
push
cmc
push
or
dec
js
std
repnz
ficoms
jp
inc
cmpsb
test
and
ret
cmp
push
pop
mov
scas
in
mov
rcl
xor
rcr
cmp
fisttpl
leave
fstpl
lahf
sbb
in
pop
adc
pop
outsb
stos
cmp
xor
mov
movsb
pop
aam
insl
and
add
into
sbb
push
hlt
insb
cmpsl
xchg
ret
jnp
jg
cmp
int
je
and
add
add
adc
inc
outsl
push
push
sbb
push
jnp
inc
adc
loopne
popl
jecxz
faddp
inc
xchg
shll
mov
dec
pop
mov
data16
mov
int
test
fists
push
fcoml
lret
sub
mov
push
xchg
mov
lret
stos
sbbb
inc
movsl
dec
jae
aas
inc
rol
adc
xor
dec
shlb
pop
inc
shr
sahf
in
mov
dec
adc
repz
fisubrl
insb
sbb
insl
outsl
pop
mov
jl
or
int3
fdiv
sub
inc
sti
fisubrl
testb
xchg
mov
movsb
movsl
mov
sbb
out
cltd
jle
xlat
fs
enter
ret
xor
jno
lods
mov
cmpl
xchg
adc
sahf
in
rcll
gs
and
add
xlat
push
addr16
mov
aad
xor
xchg
adc
pop
ja
push
insb
add
inc
rolb
sbbl
scas
push
fidivl
push
mov
xchg
fwait
sbb
xchg
movsb
jne
push
cmc
dec
stos
mov
dec
sub
push
out
fs
loopne
xor
into
push
loop
in
jo
cmp
mov
xchg
pop
jecxz
inc
or
xchg
in
inc
jmp
ljmp
adc
or
cmp
mov
sub
add
jo
xchg
sar
int
jmp
imul
xlat
dec
add
scas
mov
cmp
mov
fs
aam
mov
inc
mov
decl
sbb
dec
jl
or
push
sub
sbb
cs
or
xor
std
cmp
stos
dec
push
hlt
mov
inc
mov
mov
shrb
pop
xchg
cmp
mov
pop
jae
mov
nop
sbb
data16
adc
push
fsubrl
jge
jnp
xchg
stc
ljmp
pop
xchg
data16
cmp
sar
mov
mov
sub
mov
jp
and
and
js
inc
aas
xchg
jge
shll
push
mul
mov
xchg
and
sarb
inc
shll
push
dec
and
call
push
cmp
ljmp
adc
out
jge
daa
push
sahf
aam
dec
arpl
loope
test
cmp
pusha
pop
not
mov
or
inc
push
and
in
mov
mov
daa
in
inc
insl
out
jae
ljmp
fmulp
push
cltd
lods
addr16
inc
movsb
mov
pop
cltd
or
into
sbb
xchg
aas
nop
cmp
jle
hlt
xchg
mov
es
sub
test
mov
fwait
xchg
sub
xchg
clc
imul
test
sbb
lcall
sahf
stos
movsl
push
inc
test
or
xor
push
cmp
fdivrp
mov
cmc
or
mov
call
push
adc
jle
adc
sahf
mov
or
lcall
or
rep
cmp
jnp
mov
stos
dec
mov
fucomip
mov
push
std
je
fs
scas
scas
subl
fcomps
and
pop
dec
int
dec
ss
dec
pop
jns
sub
jge
push
jo
push
cmp
and
stos
adc
lahf
popf
scas
lods
fs
dec
lea
mov
cwtl
add
pop
xchg
mov
mov
and
or
fwait
pop
test
mov
std
push
lods
arpl
rorb
pop
inc
cmp
xor
insb
dec
pop
sub
ret
or
shrl
stos
js
mov
int
mov
outsl
icebp
mov
popa
fistps
jmp
lret
xchg
test
mov
mov
cwtl
adc
push
sub
inc
jbe
lods
sbb
das
test
test
inc
xchg
pop
xor
pop
loope
mov
fdivr
mov
or
sahf
fstps
std
xor
jecxz
cmp
pop
stos
outsb
cmp
xlat
insb
roll
stc
jns
mov
loope
xchg
inc
or
shrb
xchg
into
mov
pop
push
aaa
loope
cmp
mov
adc
ja
aas
cmp
xor
sbb
lods
jmp
lock
jb
sub
xchg
add
xor
or
cmp
rclb
pop
xchg
lds
jg
popf
and
or
dec
je
adc
inc
pop
popa
pop
aam
in
loop
sub
xlat
mov
in
push
or
mov
clc
cltd
std
jmp
jae
and
test
imul
rcl
stos
dec
mov
lods
xchg
push
enter
es
ljmp
fidivrl
js
cmp
sbb
xchg
rolb
xor
push
xchg
dec
sub
mov
lea
fsub
xchg
pop
repz
imul
int
push
pusha
xchg
pop
mov
push
fcmovb
xchg
mov
pop
fcomps
fwait
out
addl
xchg
cltd
push
popa
out
and
xchg
outsl
jb
mov
or
fstps
out
ss
fdivrs
outsb
imul
mov
lds
mov
inc
xchg
in
adc
xchg
dec
nop
dec
pushf
xchg
xchg
or
vxorps
xchg
push
enter
imul
pop
sub
xchg
bound
inc
fs
sbb
sahf
je
repz
les
mov
in
arpl
lret
dec
push
sub
sbbl
ficompl
mov
test
lds
sub
sbb
jle
pop
sbb
jne
adc
xor
inc
sub
aas
jp
popf
out
sahf
imul
jge
bound
or
loope
andb
jle
orb
imul
sub
sbb
mov
in
mov
cmpsb
push
jae
loope
aam
popf
cmc
fisubrl
ret
mov
inc
cmp
push
add
push
inc
inc
dec
scas
loope
adc
movsl
dec
das
sbb
rol
cmp
pop
add
push
hlt
enter
and
sub
jb
cs
lods
rcrb
add
fsubs
decl
inc
sahf
jbe
xor
add
cltd
jmp
addr16
aad
dec
sbb
pop
fidivs
dec
dec
xabort
adc
mov
pop
enter
je
mov
rol
fwait
divl
push
lock
mov
add
and
xchg
lret
dec
enter
xor
jl
dec
mov
push
mov
test
cmp
adcl
fadds
je
enter
or
cmp
aad
dec
mov
movsl
adc
les
push
out
cwtl
pop
aam
sub
out
mov
test
in
hlt
add
lods
daa
lret
mov
shrl
mov
les
push
jo
je
xor
mov
sbb
testl
inc
jp
ret
lcall
xlat
or
and
ds
mov
imul
xchg
popa
push
leave
pop
sbb
insl
or
dec
jbe
cmpsb
test
call
mov
sub
arpl
jnp
ss
lds
imul
hlt
mov
pop
mov
pop
iret
sahf
cltd
je
jmp
shll
add
cmp
addr16
stc
push
inc
enter
les
sub
test
orl
js
mov
cmp
addr16
repnz
jnp
cmp
aam
imul
lea
add
or
pusha
decl
scas
in
mov
inc
inc
pop
test
lods
xchg
test
push
xchg
sbb
ret
lock
imul
xchg
xor
add
mov
xor
push
repz
and
mov
nop
call
daa
das
mov
fidivl
fldenv
sub
sti
lods
push
nop
inc
fnsave
mov
inc
jl
fsubs
sub
inc
ss
lods
imul
out
push
jo
mov
mov
test
adc
sub
mov
xchg
andl
jecxz
mov
fcmovnbe
mov
test
cld
pop
sbb
scas
pop
testl
sub
pop
xchg
addr16
cmp
adc
cmpsl
loopne
adc
inc
cmp
insl
add
cmpsl
es
adc
xchg
xor
int
insb
inc
flds
push
fwait
in
xor
xor
xchg
lcall
ljmp
push
push
and
loope
data16
push
cmp
xchg
inc
xor
or
jg
sub
lahf
gs
mov
negb
inc
push
cmp
orb
icebp
and
sbb
inc
jns
mov
fsubr
push
mov
mov
dec
ror
data16
push
ret
sbb
sub
jp
out
dec
xchg
lahf
push
sbb
test
rcrb
and
cmp
inc
rcll
push
aad
movsl
dec
sbb
mov
jbe
repnz
mov
xor
inc
xor
mov
xchg
push
movsb
sbb
mov
sti
aam
add
mov
mov
mov
and
shl
fldl
sub
xor
mov
pop
add
mov
jmp
flds
mov
pop
arpl
xor
loop
cmp
sbb
fsubr
out
jmp
mov
sub
leave
xchg
mov
cmpsl
jno
inc
aad
in
mov
mov
int
xor
adc
add
jae
aaa
jo
fiaddl
lcall
iret
pop
lahf
test
scas
cwtl
loop
xlat
popa
add
cmp
push
dec
mov
dec
lcall
test
std
stos
cmp
cld
repnz
sbb
and
ret
mov
sarl
pop
nop
push
xor
insb
out
inc
test
icebp
add
pop
fsubr
xchg
dec
jl
aam
testl
rcll
sub
or
mov
mov
loop
lcall
add
xor
pop
cwtl
xchg
mov
fldt
repz
and
shr
mov
pop
aam
enter
cli
mov
dec
imul
add
loopne
add
cwtl
ss
test
pop
iret
fdivrl
ror
sbb
cmp
push
dec
push
les
idiv
imull
jae
inc
adc
pop
mov
mov
sbb
pop
pop
lock
ds
rorb
out
push
jbe
mov
lahf
push
je
mov
xor
mov
fs
jnp
fbstp
push
xchg
jp
cmp
dec
push
xor
xchg
push
push
test
adc
nop
cld
test
adc
cmpsb
cmp
xchg
dec
stos
lea
fwait
xchg
call
mov
mov
les
fs
and
and
xor
mov
shlb
imul
fs
aas
lds
insb
inc
jno
mov
out
repnz
cs
pop
pop
sub
mov
movsb
inc
std
mov
push
mov
popa
or
stos
adc
int
jmp
and
ret
fs
and
xorl
cli
insb
into
jae
mov
mov
in
cs
lock
sarb
mov
lods
mov
sbb
adc
cli
notl
pusha
push
arpl
sbb
jl
xchg
mov
xor
xchg
pusha
inc
push
mov
arpl
dec
pusha
test
dec
iret
imul
jmp
xchg
cmp
xlat
dec
push
bound
movb
push
and
scas
daa
sub
xor
icebp
dec
dec
sub
fdivrp
mov
mov
mov
mul
pop
push
mov
mov
cmpsb
or
mov
cwtl
in
in
mov
mov
sti
data16
flds
es
push
insb
lods
faddl
pop
mov
inc
pop
mov
jge
cwtd
sub
gs
rcrl
sub
jb
cmp
dec
in
adc
pushf
inc
or
incl
popa
pusha
hlt
or
jne
add
adc
pop
cmc
je
pop
or
jp
nop
aad
rorl
sti
insb
loope
ffreep
cmp
cld
dec
repz
push
hlt
cmp
cmp
cwtl
loope
push
jle
cmc
sbb
fldcw
jge
mov
ds
popa
das
movsb
lret
mov
iret
or
add
shr
sbb
and
insl
in
lcall
lods
inc
out
xor
in
gs
mov
inc
je
leave
outsb
cmp
aas
test
fcomps
sbbl
adc
in
les
pusha
repz
mov
dec
sub
push
sti
dec
jp
in
into
lods
sti
xor
mov
cmp
jo
sti
cmc
outsl
fdivrl
mov
lock
dec
adc
or
rcr
mov
mov
hlt
test
fcoml
dec
push
pop
mov
dec
mov
and
mov
fistpl
subb
dec
ja
cmp
lds
in
rcll
lea
stos
icebp
popa
pop
mov
out
or
mov
mov
sbb
cwtl
dec
xlat
cmp
pop
leave
aas
aam
pop
mov
out
insl
mov
sbb
or
push
cmpsl
xchg
ret
cmp
leave
dec
cmp
stc
lods
outsb
and
jmp
dec
lods
movsb
cli
out
fnsave
das
js
dec
ds
adcl
sub
adc
clc
gs
sub
add
push
in
and
mov
sbb
pop
cmpb
xchg
pushf
lret
fs
xbegin
outsl
cmc
pop
test
loopne
cld
fmuls
mov
jp
xor
fcompl
dec
idiv
xchg
push
mov
repnz
int3
out
dec
mov
push
lcall
repz
sbbb
lcall
int3
movsb
gs
pop
push
cmpsl
pop
pop
es
popa
outsb
int3
daa
xchg
pop
ret
dec
mov
push
ja,pt
mov
xchg
push
and
xchg
push
dec
shlb
in
and
jmp
rcrl
cmp
movsl
xchg
adc
outsb
rcl
jbe
adc
iret
add
std
and
popf
divb
inc
push
push
pop
mov
les
ret
data16
dec
xchg
xchg
cld
es
sbb
or
xor
cmp
push
mov
pop
cwtl
inc
jb
xchg
or
es
push
cltd
mov
sub
mov
pop
jne
or
mov
js
and
push
jmp
inc
xchg
ja
ds
rcr
fucomip
mov
sbb
jo
jo
in
mov
out
xchg
les
jl
loop
and
sub
icebp
and
mov
mov
dec
roll
arpl
out
lds
mov
ja
mov
jne
push
lods
test
xlat
xlat
mov
mov
pop
and
scas
cmpsb
dec
lods
loop
insb
push
int3
mov
lea
out
mov
mov
or
adc
andb
hlt
les
orb
cmpsl
in
jecxz
mov
test
sbbl
jge
mov
movsl
sbb
ds
fisttpl
pop
jp
out
sub
cli
xchg
or
and
cmpsl
frstor
adc
sti
cmp
call
jnp
out
xor
enter
test
ret
mov
inc
or
or
fildl
lahf
mov
jecxz
sbb
xchg
or
push
rorb
lahf
mov
mov
mov
pusha
dec
xor
inc
jbe
and
arpl
lret
sub
les
les
or
dec
rcrb
sbb
mov
repz
sub
das
in
pop
mov
jmp
lret
jae
lahf
xor
stos
and
daa
fadd
movsb
adc
sub
jle
je
imul
orb
jnp
xor
pop
adc
cmp
fcoms
arpl
test
jo
adc
jb
fwait
loopne
pushf
xchg
pop
mov
mov
push
data16
pushf
aas
mov
cmp
mov
aad
push
jne
mov
arpl
xor
outsb
sbb
sarl
cli
mov
test
leave
add
into
inc
pop
fidivrl
std
xchg
jbe
ljmp
and
dec
push
popa
pop
fcom
mov
outsl
es
iret
push
dec
test
cwtl
cltd
dec
sbb
icebp
je
lret
stos
cmpsl
rolb
addr16
mov
push
sub
ljmp
pop
ds
adc
popf
pop
xchg
jl
int3
ret
fwait
add
cmp
imul
int
cmpsb
xchg
sbb
push
add
enter
and
push
sub
xlat
fsubrs
and
mov
int3
jle
hlt
stos
push
xor
xchg
push
stc
mov
xchg
je
and
xchg
push
movsb
jp
mov
xor
cmp
aam
pop
scas
aaa
aad
sbb
scas
sub
mov
jnp
adc
fdivs
xchg
loopne
and
fldenv
lods
cli
lock
jge
xchg
adc
dec
cld
add
imul
xchg
cmp
mov
inc
xlat
je
stc
pop
enter
cltd
and
push
bound
insl
movsl
mov
insb
or
pop
add
sub
mov
jno
aas
and
xchg
out
mov
mov
xor
and
xchg
cmp
adc
or
aad
jae
incl
outsl
ret
xchg
xchg
sahf
dec
aam
dec
dec
dec
add
test
adc
or
pop
lret
das
mov
sbb
cltd
jp
pop
loop
sub
fwait
dec
pop
out
mov
push
push
or
fxch
out
or
mov
cmp
addb
and
mov
mov
repnz
sub
sbbl
mov
dec
adc
jg
jle
xchg
popa
loop
ja
sub
sbb
adc
enter
mov
sbb
and
pop
push
stos
cmp
mov
pop
vmovdqu
pop
xchg
dec
dec
lret
cwtl
lret
mov
lahf
cli
pop
jp
or
jbe
pop
jmp
dec
xchg
cmp
jno
and
push
mov
dec
lahf
or
push
mov
xchg
sbb
lods
icebp
cld
and
cmp
mov
jae
cmp
jg
push
or
popa
int3
inc
lds
iret
stos
sub
cmp
sub
mov
cltd
test
test
into
sbbb
out
std
cmp
adc
mov
dec
jb
pushf
mov
in
ret
pop
call
fs
xchg
xchg
in
std
xchg
and
in
sbb
mov
decb
push
add
lret
imul
and
pop
add
or
test
ds
lods
ret
xchg
orl
xor
and
fstpl
pop
cmp
icebp
dec
fcompl
adc
push
fs
and
inc
mov
inc
xlat
popf
jecxz
sti
cmp
jns
shlb
iret
push
mov
cmp
arpl
adc
jns,pt
jbe
sub
pop
or
sbb
cmp
and
mov
repnz
xchg
sarb
fwait
mov
dec
sbb
dec
loope
xor
jle
loopne
push
mov
ret
push
pop
fadds
or
jp
inc
xor
loope
ss
pop
bound
sub
push
stc
icebp
daa
cld
inc
xor
add
outsb
pop
cli
sarl
hlt
sub
add
adc
adc
mov
ljmp
out
sbb
inc
into
hlt
hlt
xor
sbb
jl
in
repz
je
mov
mov
sbb
and
pop
sub
adc
pop
bnd
je
fcompl
hlt
sti
lds
mov
popf
or
and
inc
shr
dec
daa
add
dec
inc
popa
add
cmp
or
cmp
cmpsl
shrl
xchg
adc
push
push
pop
or
mov
popf
das
and
pop
fadd
aam
imul
dec
jecxz
push
scas
int3
pop
push
xchg
mov
lods
imul
int
les
jae
xchg
xchg
fistpll
sysenter
inc
ficoms
pushf
arpl
lods
lds
mov
mov
clc
pop
sub
jb
shlb
cli
mov
nop
add
sbb
fnstsw
cmp
jns
pop
dec
adc
adc
sbb
push
inc
xlat
jge
sub
sub
fldenv
push
mov
and
xor
mov
mov
adc
xor
jmp
lods
mov
lcall
sub
rorb
inc
mov
add
sbb
cmp
mov
or
insb
sbb
in
push
ljmp
les
imul
pop
sbb
push
adc
and
xchg
mov
mov
jns
xor
or
outsb
inc
pextrw
push
call
add
pop
mov
sbb
icebp
shl
sub
cltd
and
dec
int3
sbb
sub
push
aad
mov
mov
add
jnp
push
ret
data16
cmpb
adc
mov
ljmp
movsb
mov
push
inc
insl
movsb
hlt
imul
imul
fnclex
andl
xchg
ret
sbb
iret
scas
and
rcrl
or
or
leave
repz
cs
in
lds
loope
sub
sbb
lcall
out
xchg
inc
push
cmc
sbb
mov
mov
mov
push
pop
inc
ficoms
add
mov
jb
cmp
mov
repz
les
cs
inc
mov
mov
nop
or
cmc
notl
push
jbe
jecxz
bound
pusha
notb
sub
or
xor
rorb
xchg
push
mov
dec
pop
adc
sarl
xlat
sbb
cmpsl
movsl
adc
movsl
sbb
enter
or
dec
pop
adc
mov
mov
inc
jno
scas
dec
jae
jg
adc
sub
mov
dec
pop
cli
sbb
aas
ss
addr16
sti
rcr
leave
push
fidivl
shrl
jecxz
lret
sub
xchg
sub
adcl
xchg
mov
mov
in
loope
jmp
mov
adcb
test
fadd
inc
movsl
setns
movsb
sahf
cmpb
xlat
push
jg
xchg
mov
cmp
inc
arpl
and
repnz
lds
loopne
inc
xorl
bound
mov
in
stc
and
clc
inc
push
pop
jle
iret
xlat
jle
enter
add
xchg
in
loop
lret
icebp
lret
and
movsb
movsb
pop
lds
mov
sub
call
out
cmpsl
or
repnz
xor
jno
fcmove
sub
ja
scas
dec
jmp
sti
in
lret
and
mov
pop
out
xor
pop
sbbl
cwtl
popl
mov
pop
adc
or
jecxz
scas
test
mov
out
mov
dec
xchg
and
jne
cmpsb
cmpsl
arpl
mov
or
fs
and
test
out
popf
pop
mov
push
xchg
mov
sahf
stos
inc
add
dec
popf
add
jecxz
pop
pop
sbb
fdivs
push
and
out
insb
dec
pop
das
cmc
in
or
sub
xor
mov
xchg
scas
adc
adc
insl
or
mov
lods
int3
lret
and
dec
cmp
dec
push
orl
pop
mov
out
addr16
cwtl
imul
ret
mov
mov
sbb
dec
stos
ret
jge
dec
aas
dec
es
test
decb
xchg
xor
mov
cmc
int
jecxz
cld
mov
sub
adc
aam
xchg
sub
xor
scas
xor
add
pop
mov
mov
inc
stos
and
pop
mov
mov
call
mov
push
stos
or
ret
pop
fwait
clc
ss
rolb
pushf
pop
inc
mov
jmp
and
mov
sub
scas
push
sahf
adc
inc
push
into
lret
xchg
lods
xchg
xor
and
jmp
xor
or
rcll
jl
mov
cmp
pop
loope
sbb
cmpsl
pop
xchg
in
jmp
dec
mov
jmp
in
or
fistpl
pop
and
mov
testl
cmc
cli
shl
add
inc
loope
into
iret
cmp
xor
cmc
call
and
mov
jecxz
test
cmc
mov
pop
or
add
lret
mov
int
inc
jbe
adc
pop
push
push
mov
add
sub
push
repnz
sbb
add
aas
and
insb
leave
rclb
mov
mov
jp
imul
jmp
mov
sub
xor
jl
push
mov
fnstenv
cmp
dec
icebp
push
mov
int3
sbb
mov
pavgb
inc
fdivrs
ret
mov
cmp
push
testl
xor
dec
call
jle
test
mov
jne
cmpsl
incb
sbb
cli
adc
lret
inc
pushf
mov
ja
stc
test
or
lea
mov
fdivl
push
xchg
mov
sbb
cmp
lahf
hlt
sbb
and
push
adc
in
inc
lods
mov
out
gs
mov
testb
push
sub
dec
adc
lock
jns
data16
pusha
call
imul
add
mov
jg
jo
icebp
sub
inc
dec
cmp
sbb
mov
stc
inc
cmpsb
xor
lds
xor
insl
add
sbb
mov
pop
aam
push
jo
dec
mov
sub
pop
sbb
and
pusha
dec
cs
mov
jecxz
dec
jmp
pop
sbb
mov
je
leave
lret
add
sti
pop
xchg
or
push
sub
les
outsb
xor
call
add
aad
add
dec
sti
cmpl
andnps
xlat
stos
test
fwait
in
stc
dec
lahf
ds
das
out
jl
adc
dec
dec
xor
push
mov
idivb
cmpsb
lret
pop
and
test
iret
ja
call
mov
sbb
pop
cld
mov
xor
test
jmp
stc
loop
arpl
jge
in
cwtl
dec
shl
mov
inc
adc
repz
jle
loope
jmp
xor
scas
pop
lret
fidivrs
inc
pop
xlat
dec
movl
imul
jb
push
jle
sub
pushf
jmp
xor
lds
mov
mov
fs
add
js
pop
adc
mov
outsb
pop
jno
iret
and
es
mov
je
or
sub
fldcw
inc
push
test
stc
xor
sub
insb
mov
cltd
inc
test
adc
xor
xor
in
xchg
sbb
add
ja
into
jp
mov
in
xor
jbe
and
subb
enter
add
pushf
push
ds
test
ret
cmp
mov
sbb
push
jb
mov
out
test
add
rorl
mov
mov
daa
in
enter
push
je
mov
xor
iret
jbe
stos
imul
cwtl
or
mov
out
in
jo
in
mov
fwait
push
popa
pop
jmp
xchg
js
mov
sbb
xlat
es
sbb
or
not
cmp
into
scas
aas
jnp
int3
add
gs
push
std
jmp
aas
pop
and
mov
loop
mov
lock
mov
mov
pop
fwait
loope
mov
mov
lock
mov
movsl
int
mov
dec
pop
and
mov
inc
mov
int3
inc
loop
fcmovne
jo
sub
int3
adc
das
in
mov
mov
cmc
sub
repz
fsubl
push
mov
push
push
fisttpl
cmp
sti
xor
rolb
cli
mov
jecxz
or
mov
cltd
and
adc
loop
mov
mov
mov
xor
jp
outsb
jl
in
inc
int3
jb
testl
fldcw
mov
scas
jns
pop
mov
xchg
mov
out
mov
call
jns
lcall
imulb
fmul
jae
aad
cld
dec
loop
cmp
mov
ror
cld
or
push
dec
xor
shrb
and
adc
and
cs
shll
jns
sub
pop
std
xchg
es
rcrl
and
or
add
mov
je
out
fs
or
cwtl
push
jbe
insb
mov
call
arpl
jns
cld
mov
sbb
add
inc
cld
dec
shl
aaa
call
mov
adc
adc
fstl
daa
mov
aaa
icebp
xchg
inc
mov
push
testl
shrl
fstps
popf
cmp
cld
scas
push
lcall
fsubp
in
fisttpll
mov
test
lea
divl
mov
ret
jl
sub
or
ds
push
xor
lahf
daa
add
in
mov
cmp
mov
repnz
mov
jne
jp
xor
sti
lahf
push
inc
xlat
loope
push
xchg
dec
subb
jge
lret
xor
test
push
push
popf
cmp
out
loope
clc
adc
inc
mov
sbb
fisubl
sbb
adc
pop
sbb
push
and
hlt
mov
fnsave
mov
shrl
lods
cmc
pop
nopl
mov
iret
cld
pop
fwait
mov
jp
xchg
or
dec
mov
push
mov
out
out
gs
sub
xor
int
mov
jle
dec
and
lds
push
dec
out
add
je
mov
inc
repnz
pop
mov
xor
out
sub
cmc
cmp
inc
sub
out
mov
jl
add
mov
shl
xchg
xor
shr
sahf
aad
pop
xchg
sbb
popf
hlt
lahf
fdivr
shll
mov
aaa
lret
dec
pop
push
jnp
arpl
and
ret
push
call
cwtl
sbb
cwtl
jg
jg
dec
mov
int
pop
test
cld
jmp
or
and
test
lret
loopne
xchg
pop
inc
loopne
out
lahf
dec
test
dec
mov
fs
mov
stos
rorl
addr16
pop
fidivs
xchg
add
sbb
in
out
outsb
mov
fldl
mov
cmpsl
js
jecxz
xor
sub
xchg
inc
adc
inc
mov
fildll
popa
pop
dec
mov
movsl
push
imulb
sbb
mov
iret
xchg
cmp
cmpsb
mov
imul
jnp
sbb
insl
lret
dec
and
jne
mov
pop
ret
test
and
sbb
pop
inc
fldl
lret
mov
mov
jge
je
xchg
repnz
ret
imul
or
push
jno
fsubs
enter
mov
gs
xchg
and
loopne
pop
push
adc
jmp
cmp
xor
lret
sbb
faddp
test
mov
cmp
push
jle
inc
out
and
jmp
ss
and
sub
test
sub
pushf
mov
pop
pop
push
xor
pop
jns
gs
mov
outsl
lahf
lret
cmp
movswl
cmp
and
push
mov
clc
jno
xchg
pop
xchg
inc
and
in
aad
imul
dec
idiv
mov
inc
inc
sbb
jae
xor
imul
mov
inc
sahf
or
mov
aas
jecxz
add
or
out
mov
sahf
js
rclb
pop
dec
ficompl
aaa
pop
sbb
mov
insb
dec
add
cmp
mov
mov
lret
push
imul
mov
testb
push
xchg
cmp
imul
mov
jp
cmpsb
jp
add
push
adc
xchg
or
inc
adc
hlt
mov
in
outsb
fwait
es
sbb
addb
push
inc
dec
hlt
push
cmp
call
daa
sbb
loopne
mov
cmp
fcom
jmp
lods
jecxz
push
push
dec
rcll
insb
jl
xchg
test
inc
add
mov
mov
ja
outsl
cmp
and
shr
mov
outsb
push
ss
adc
mov
int3
jo
or
inc
add
in
jae
lock
and
orb
adc
dec
mov
js
adc
insb
sbb
in
dec
daa
lahf
outsl
pop
inc
idivl
repz
lods
repnz
hlt
pop
cmp
movsl
xor
popf
jb
mov
sar
sub
fs
fcomip
jne
or
mov
xor
inc
outsb
hlt
xchg
in
je
fldt
and
adc
data16
leave
arpl
shr
loope
enter
int3
hlt
xor
sbb
int3
lea
dec
inc
sbb
cli
push
cmp
sub
mov
shrb
ja
sbb
std
stos
je
push
mov
push
adc
daa
ret
push
sub
pop
mov
repnz
imul
les
fstpt
bound
jg
jle
leave
pop
cld
cli
push
inc
mov
in
pop
fimull
aad
or
int
mov
aas
inc
cs
in
cld
inc
and
add
or
shlb
adc
xor
mov
xchg
rorl
xchg
je
in
xor
sahf
outsl
stos
cmp
mov
daa
adc
mov
xlat
mov
xor
jl
or
mov
rcrb
inc
mov
addr16
push
fwait
push
arpl
add
mov
je
outsb
adc
jnp
popa
cwtl
out
inc
push
sbb
add
mov
mov
sbb
das
xor
movsb
sub
or
addr16
sub
mov
sbb
popa
arpl
pop
sahf
mov
stos
add
xchg
or
pushf
push
pop
xchg
sub
inc
mov
jl
mov
std
sub
imul
jge,pt
jge
inc
int3
rcrb
sahf
mov
outsb
test
movsl
mov
inc
or
pop
pop
mov
add
or
jbe
imul
mov
rcr
push
mov
pusha
lea
sbb
adc
fldl
jl
shll
sub
test
sahf
imul
fwait
int3
sbbl
sbbl
ss
sar
adc
xlat
xchg
adcl
jecxz
dec
jae
int3
rorb
sahf
shrl
fadds
jo
mov
test
add
inc
jne
dec
mov
push
push
and
lea
cld
mov
loopne
and
mov
cmp
cli
clc
adc
sbb
pop
pop
leave
ja
inc
shrd
and
mov
movsl
ja
pop
loop
cltd
or
popa
pushf
and
aas
sub
push
xlat
or
stos
repnz
fs
ficoms
cmp
jb
mov
test
xor
and
and
in
jecxz
push
clc
mov
pop
fidivs
clc
pop
cmpsl
test
mov
pop
adc
and
movsl
adc
bound
in
add
leave
insl
popa
lret
shll
pop
mov
sub
jmp
mov
flds
mov
cli
int
rolb
sbb
mov
fidivl
es
mov
rorl
xchg
out
repz
ss
out
rep
repz
dec
rcrl
loopne
sub
fstpl
outsl
cwtl
pop
or
adc
pop
mov
fcoml
loopne
int
jbe
fstps
sbbl
hlt
jp
cmc
push
cmp
ja
enter
cmp
mov
cltd
cmpsb
and
arpl
dec
inc
cltd
stos
sbb
scas
pop
out
into
aaa
xchg
or
fs
push
stos
js
sbb
adc
or
bound
int3
nop
sbb
das
int
stc
lock
cmpsl
cmpsl
ficoml
es
add
test
fstp
adc
push
jmp
cmp
pop
jno
aad
xchg
jae
add
mov
ja
mov
int
dec
mov
sbb
imul
inc
rcrl
pop
lahf
inc
add
sub
fidivrl
sub
push
cmpb
add
cwtl
jae
jno
lock
repz
add
in
fdivrl
cmpsb
pop
lret
jl
dec
add
xchg
cmpsl
pop
adc
and
fbstp
or
push
out
xor
mov
xor
xchg
int3
push
dec
out
sbb
xor
loope
push
popf
sub
add
dec
test
outsw
mov
jl
movsb
test
movsl
pop
out
add
mov
mov
dec
rorb
inc
nop
add
add
add
sub
cmpsb
and
enter
mov
aad
cmc
adc
mov
lahf
add
mov
jnp
dec
scas
lods
movsb
cmpsl
jnp
ljmp
lcall
hlt
push
and
mulb
std
fld
mov
int3
xor
add
or
mov
std
xor
or
jb
js,pt
xor
lret
push
jg
pushf
shrl
push
loopne
hlt
gs
jg
or
pop
xlat
outsl
xchg
frstor
divb
hlt
inc
cwtl
aam
lcall
ret
sbb
cli
push
out
and
mov
fnsave
shr
xchg
rorb
or
mov
mov
aam
adcb
std
sub
int
mov
and
test
sub
push
mov
push
mov
mov
in
jne
int
lds
pop
push
mov
cmpsl
scas
stos
int
es
or
ja
outsl
inc
stos
xchg
pop
mov
adc
dec
cld
inc
fdivrs
aam
sbb
adc
ficoml
mov
mov
out
cmpsb
in
cmp
test
dec
sub
insl
sbb
dec
push
popf
sub
sub
repz
pop
shll
sbb
fiaddl
mov
mov
or
test
sbbb
inc
jno
or
jbe
nop
bound
push
lock
cmp
jb
push
call
xchg
lret
push
gs
es
test
lods
mov
and
jmp
fistps
mov
fmuls
mov
and
cmp
jbe
push
imul
sbb
aam
xor
das
mov
mov
xor
mov
je
inc
jo
xchg
pop
out
inc
mov
popf
repnz
pop
mov
mov
call
stc
mov
jecxz
adc
dec
xor
call
add
or
data16
jno
pop
dec
mov
fiaddl
jbe
or
mov
call
mov
adc
or
jo
lods
pop
iret
adcb
xor
std
add
hlt
clc
adc
mov
mov
subl
and
adc
in
adc
shll
nop
lds
mov
push
stc
and
sbb
cmp
in
cwtl
out
add
add
dec
mov
push
xchg
push
lahf
gs
les
cmpsb
in
daa
insl
and
mov
in
inc
lret
mov
xor
jp
fwait
in
adcl
mov
mov
xchg
or
cwtl
loop
lahf
push
dec
xchg
mov
neg
shlb
push
jbe
pop
sub
dec
testb
mov
bound
and
std
sti
in
std
ljmp
in
jecxz
pop
clc
mov
mov
inc
dec
mov
outsl
int3
aas
xor
fadd
pop
xchg
xchg
fwait
pop
xchg
push
jl
mov
repnz
lret
inc
adc
mov
cs
mov
pop
push
jb
fsubl
bound
inc
movsb
imul
shr
inc
arpl
out
enter
adc
nop
ret
in
sbb
sub
sarl
test
cmp
xor
and
lret
out
fmul
fdivrl
dec
jns
in
leave
jle
mov
iret
outsl
xor
mov
dec
int
add
sbb
adcl
cmp
pop
jge
stos
repnz
std
fs
mov
push
aad
dec
sub
icebp
std
jp
clc
out
scas
test
andl
pusha
cltd
xor
cmpsl
ret
js
sub
mov
fsubr
push
dec
pop
fsts
mov
scas
int3
stos
fldl
jle
nop
cltd
push
fimull
cld
jmp
sbb
cmp
bound
clc
jbe
ja
outsl
aas
pop
cmp
aaa
cmpsb
jno
push
pop
xor
jecxz
int3
jge
inc
lahf
in
inc
out
jb
rcr
mov
out
pop
test
cmp
mov
or
mov
and
inc
fldenv
loope
ucomiss
sbb
pop
xlat
mov
and
xor
xchg
scas
inc
in
sbb
inc
mov
mov
xor
repnz
les
sbb
mov
dec
sahf
fs
ret
pop
out
lahf
mov
adc
pop
push
adc
lcall
ds
push
cmpl
mov
test
fcom
sbb
lea
jge
dec
mov
and
mov
or
xor
pop
xlat
cld
mov
jge
push
scas
mov
adc
call
inc
pop
out
dec
outsb
js
pop
inc
sub
lock
xor
cmp
sub
inc
xchg
inc
pop
or
sbbb
push
xchg
xor
push
ljmp
scas
and
pop
nop
andps
or
xchg
leave
aas
ljmp
mov
mov
jg
sub
jp
cmp
mov
sub
xor
and
adc
xchg
push
jb
dec
mov
mov
gs
movb
xchg
mov
jp
hlt
lcall
sbb
or
test
outsb
mov
mov
push
pop
notl
ss
mov
jnp
ja
push
repnz
mov
jno
push
shlb
loop
clc
outsl
sbb
mov
pop
pusha
cmpb
test
or
rorb
enter
xor
jl
sbbl
or
jle
enter
xor
bound
movsb
cli
subl
leave
mov
cmp
lahf
addr16
mov
mov
inc
insb
test
inc
mov
add
inc
add
and
sub
push
cmp
mov
mov
movsb
push
test
scas
mov
dec
or
sti
adc
cltd
or
sub
sbbl
mov
popf
cmp
addr16
pop
pop
cmpsl
and
les
filds
inc
imul
xchg
subb
cmpl
sbb
adc
jnp
sbb
push
cmovae
in
lock
stos
ss
roll
icebp
jnp
mov
xchg
mov
repnz
cmp
push
sub
loopne
inc
test
adc
inc
jb
scas
mov
lret
and
ror
std
in
orb
test
xchg
add
rolb
out
push
cld
mov
and
sub
in
jg
dec
pop
fwait
mov
test
test
lahf
mov
mov
jbe
je
sub
ret
inc
sbb
sub
or
and
and
jl
xorps
push
cmp
ja
jmp
mov
test
push
mov
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
loope
sub
mov
popf
mull
cmpsb
repnz
fs
fwait
addr16
mov
test
pop
icebp
dec
outsb
scas
int3
in
mov
mov
dec
xchg
cmpsb
pop
push
inc
add
xchg
js
test
xchg
mov
pop
add
arpl
add
stc
push
adc
mov
aaa
mov
or
sub
sbb
sbb
pop
int3
hlt
repz
imul
and
aaa
movsb
add
jge
dec
arpl
es
sbbl
jns
gs
insb
push
dec
insb
std
in
dec
int
xor
jge
cmc
xchg
mov
push
enter
inc
arpl
and
dec
in
push
in
aas
cld
push
lock
outsb
ja
and
dec
adc
jo
jecxz
jge
std
cltd
fdivr
xor
outsb
gs
daa
out
mov
mov
loop
mov
jae
imul
lock
inc
cmp
and
test
push
cmp
sub
and
cmp
mov
xor
aas
ret
cmp
adc
dec
mov
xor
not
push
jmp
xchg
cmp
imul
pusha
sub
mov
sbb
loop
pop
and
loopne
into
loope
sbb
and
rclb
bnd
cmp
ja
mov
pop
std
sub
mov
fildl
andl
cmp
out
cmp
test
dec
fwait
out
xorl
orl
cld
adc
insb
mov
jb
push
mov
popf
cli
das
dec
fwait
xchg
ljmp
es
sub
int3
mov
or
inc
jae
adc
pop
mov
std
sbb
js
clc
cmp
imul
sbb
sbb
pushf
cmp
jle
out
lods
pop
stos
dec
xor
nop
ficompl
data16
mov
popf
push
int3
scas
or
icebp
cmp
andl
pop
xchg
mov
subl
inc
xor
stc
sarl
jns
jbe
notb
int3
popf
dec
mov
lds
push
stc
std
sti
sbb
sbbl
xchg
and
mov
sub
jmp
push
mov
dec
pushf
lds
popf
repnz
xor
and
lret
jecxz
stos
push
or
xchg
sbb
push
push
arpl
enter
or
ffreep
enter
push
fldenv
imul
mov
iret
add
mov
ficoml
call
inc
nop
ret
sub
dec
insl
movl
push
jo
jb
xchg
loope
adc
xor
cltd
mov
mov
jmp
imul
jns
js
and
pop
dec
cld
push
dec
jp
jmp
sub
call
adc
test
xor
cld
imul
in
dec
mov
dec
sub
jnp
jo
loopne
xchg
lret
clc
int3
js
dec
fisubrl
xor
das
jbe
jl
pop
sarl
cmp
sub
out
cmc
dec
fcomip
mov
lcall
rcrb
add
movsb
dec
jg
push
xor
inc
cltd
jbe
cmc
or
ss
push
imul
jae
jno
and
cmp
addr16
lret
pop
dec
sbb
bswap
mov
cmp
fcmovne
fs
inc
sti
shll
lcall
cld
test
push
adc
xchg
jle
jecxz
pop
shll
pushf
movb
movsb
push
jnp
mov
push
test
xchg
data16
mov
clc
xchg
push
stos
mov
push
inc
adc
pushf
std
subl
shl
mov
adc
sub
mov
mov
je
ds
test
inc
mov
mov
sub
add
loop
push
sti
and
cs
fimull
imul
movsb
mov
pop
in
cmp
lock
je
decl
push
pop
jg
cmp
xor
insb
add
out
int3
rclb
add
stos
cmp
jl
and
adc
cmc
mov
std
push
hlt
jecxz
add
sbb
pop
and
das
aam
cmc
mov
cmp
cmp
lret
or
std
cli
lret
mov
sbb
mov
push
sbb
or
dec
push
ljmp
cld
out
pop
repz
loop
lret
out
std
fisttps
or
fcoml
ret
inc
loopne
scas
arpl
jl
mov
mov
or
ret
sub
test
ss
movsb
mov
add
popf
adc
xlat
ss
mov
or
adc
and
adc
mov
jge
sbb
xchg
jge
movsl
bound
out
push
cwtl
or
iret
inc
stos
lret
mov
pop
mov
dec
add
es
jecxz
or
pushf
neg
xchg
mov
enter
mov
sbb
or
sbb
orb
mov
orl
rcrl
stos
ffreep
dec
sub
xchg
mulb
xchg
fadds
xor
mov
pop
sbb
mov
push
ds
shl
scas
mov
ret
ljmp
fstps
cld
cmp
movsb
dec
loop
dec
jns
jge
lret
sti
neg
jmp
jb
gs
ja
mov
ljmp
jle
out
mov
stc
add
push
adc
push
lret
jbe
or
in
mov
rcrl
push
xor
dec
add
xchg
sahf
sub
or
std
fadds
inc
xchg
jns
mov
pop
xor
push
jbe
xchg
add
pop
cwtl
fwait
loopne
pop
mov
pushf
and
jmp
mov
cli
aad
and
or
adc
sbb
das
mov
mov
sbb
inc
mov
shll
push
in
sbb
push
push
jge
popa
int3
inc
je
pop
jmp
enter
push
aad
pop
mov
cmp
test
mov
mov
in
pushf
div
dec
mov
outsb
dec
sbb
xlat
lea
fwait
pop
dec
mov
lcall
and
adc
movb
pop
xchg
add
mov
jecxz
nop
mov
je
pop
hlt
popf
pop
pushf
push
imul
test
mov
pop
lods
xchg
or
inc
lock
cmp
dec
or
cwtl
lods
pop
test
push
mov
cmp
xchg
aaa
xchg
enter
cs
bound
sub
xor
arpl
jmp
jmp
add
gs
fbstp
cli
cmp
add
mov
pusha
and
incb
ljmp
adc
sbb
lods
xchg
sbb
movsb
test
outsl
xchg
pop
mov
bound
xchg
int3
mov
push
mov
ror
push
lret
pop
stc
mov
out
mov
jae
push
cmp
ja
or
inc
sbb
movsb
dec
sub
fwait
fwait
and
mov
test
jns
pushw
fsubrl
insb
mov
xor
aaa
addr16
mov
push
pusha
push
add
mov
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
