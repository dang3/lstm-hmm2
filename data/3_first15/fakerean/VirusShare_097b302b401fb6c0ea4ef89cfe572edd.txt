push
mov
push
push
andl
andl
lea
push
call
sub
neg
sbb
inc
leave
ret
push
push
call
sub
neg
sbb
inc
ret
push
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
xor
lea
mov
xor
jmp
test
jne
cmp
jle
lea
mov
sub
mov
add
roll
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
push
lea
call
test
je
call
jmp
mov
mov
mov
pop
pop
ret
push
mov
push
call
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
sti
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
je
push
push
call
cmp
jne
mov
mov
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
push
call
cmp
jne
movl
jmp
andl
cmpl
je
push
push
push
call
mov
mov
xor
push
pop
div
push
pop
mov
sar
mov
mov
xor
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
push
call
push
call
mov
mov
add
add
mov
mov
mov
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
push
push
pushl
push
call
add
mov
mov
push
call
leave
ret
rolb
int3
int3
int3
int3
int3
int3
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
rcr
aad
clc
test
cmp
sbb
push
jo
and
cmpsb
gs
jl
mov
pop
xchg
mov
push
sti
xchg
mov
cld
xor
add
push
data16
add
adc
mov
fdivs
and
popf
sbb
stos
ret
push
inc
es
xor
in
jg
pop
add
xor
mov
fldenv
lahf
fdiv
loopne
cmp
shll
xchg
cmp
sti
iret
cmc
push
mov
bound
pop
clc
or
test
pop
in
sahf
inc
jge
out
cmpsb
sbb
sbb
mov
mov
inc
mov
test
inc
cli
xchg
clc
xor
iret
vpor
aad
js
std
cmp
cmpsb
or
fmuls
fsts
inc
je
mov
clc
mov
out
int
roll
cmp
aas
sub
subl
push
out
add
nop
jne
mov
sbb
mov
dec
dec
cmp
dec
sahf
adc
and
clc
jmp
jo
outsb
dec
or
call
stc
leave
jl
dec
jns
xor
sarl
aaa
lock
mov
lods
adc
je
mov
in
shll
jmp
sahf
cmpsl
mov
enter
pop
adc
aaa
inc
jmp
aam
fisttpll
in
jbe
je
lahf
test
lods
les
jge
sarl
mov
pop
ljmp
dec
pop
aam
mov
fdivr
movsb
mov
nop
ss
push
xchg
mov
sub
mov
and
or
push
jae
gs
das
pop
xor
xlat
cli
adc
xorps
insl
push
lock
out
lret
sbb
ss
add
cltd
jae,pn
add
scas
add
jge
data16
repz
cmp
out
add
sti
mov
sbb
icebp
pop
jno
lret
cwtl
or
xchg
jb
dec
sbb
aas
out
gs
fisubrl
ds
cs
sub
adc
test
inc
roll
mov
mov
pop
or
mov
add
xor
dec
pop
insb
cwtl
and
sbb
push
push
in
arpl
in
jbe
sti
mov
shrl
xchg
mov
xor
mov
test
adc
or
cwtl
mov
sti
mov
push
sbb
sub
rcl
add
ret
push
pop
xchg
dec
jo
jns
cwtl
neg
sbb
add
jg
jnp
mov
leave
in
lds
sbb
and
leave
ljmp
mov
inc
test
adc
push
nop
pop
inc
fnstenv
or
divb
sbb
sahf
call
ja
dec
adcl
push
jb
xchg
js
leave
cmp
rcr
fwait
movsb
fucom
xor
hlt
push
test
cmp
fistps
inc
inc
shrl
scas
call
pop
mov
das
pop
arpl
fs
and
push
lcall
in
js
inc
and
jb
gs
pop
adc
es
insb
stc
xchg
inc
cmp
gs
mov
xchg
jae
out
cld
jo
push
jecxz
jne
cmpsb
fadds
inc
stos
mov
shrb
sub
loopew
cwtl
lods
cmp
in
mov
sbb
dec
inc
out
push
sub
movsb
inc
cmpsb
push
pop
jb
jnp
test
sub
in
add
xlat
sbb
sbb
jl
test
cmpsb
out
aas
insb
or
iret
sub
adc
sbb
sahf
mov
test
inc
les
data16
xor
jno
test
and
sub
adc
and
mov
scas
cmpb
rcr
pop
mov
scas
out
bound
mov
es
add
xor
lds
xchg
fnsave
stos
rcrl
lods
pop
incl
pop
mov
test
jnp
adc
adc
jne
jg
xlat
push
gs
fwait
clc
repz
sbb
jno
mov
rcl
inc
out
mov
mov
loope
ror
mov
loope
lret
xchg
or
call
ja
es
outsl
push
pop
pop
sahf
xchg
inc
out
mov
test
cmp
adcl
cmc
jb
adc
and
insl
lahf
rorl
addr16
and
inc
fwait
lret
add
add
xchg
mov
out
scas
nop
fwait
push
cwtl
in
out
lea
mov
out
jl
mov
jp
jo
repnz
pusha
in
mov
repnz
mov
cmp
and
pop
cmpsl
or
mov
xchg
pushf
cs
mov
es
addl
adc
add
rorb
dec
out
jb
mov
dec
stos
mov
jg
inc
mov
inc
and
dec
and
cwtl
mov
out
dec
jae
jmp
or
in
outsb
cmp
leave
cmp
sub
cli
pop
insb
repnz
cmc
int3
in
lods
sbb
icebp
dec
das
cmp
popf
outsl
push
test
cs
xchg
dec
xchg
repnz
int3
xor
mov
aas
into
and
int
fucomip
xor
xor
and
test
dec
mov
or
pop
dec
imul
fwait
je
mov
aam
imul
jno
sbb
push
imul
and
mov
add
jno
fcompl
popa
loop
fisubl
out
inc
rorb
aad
pop
imul
mov
dec
loop
pusha
shl
mov
cmp
fdivl
iret
push
fsubl
movsb
rorl
cltd
dec
mov
sub
push
inc
push
scas
daa
imul
cli
cmp
movsl
cmp
xor
addl
out
push
xor
or
fildl
xchg
jg
cmp
notb
and
pop
xchg
cld
ljmp
movsl
sbb
pop
es
into
add
pop
out
xchg
aad
ror
xchg
add
add
jp
lret
lods
dec
inc
xchg
jmp
pop
xchg
xchg
mov
lock
fcmovnbe
push
scas
ds
sti
sub
hlt
ljmp
adc
inc
push
fs
int
sub
repnz
fildll
add
xor
jmp
adc
mov
mov
cwtl
dec
orl
pop
push
int
or
in
pop
mov
mov
notl
outsb
xor
aas
add
push
adc
sar
xchg
xchg
sbb
pop
mov
decl
stc
clc
in
jno
scas
xorb
shl
mov
gs
sub
ret
pop
ret
aas
sub
icebp
adc
inc
icebp
pop
push
sti
mov
in
pop
and
div
negb
xorb
cmp
jno
mov
popa
and
dec
shlb
xor
out
and
dec
ss
test
mov
adc
fmuls
add
and
inc
ret
cmp
fstpt
or
pop
xlat
test
loope
push
mov
cli
int3
std
add
sbbl
pop
mov
mov
and
sbbb
xor
mov
jb
mov
int
nop
xchg
fwait
xor
push
add
mov
vpackusdw
or
clc
push
frstor
cli
leave
clc
unpckhps
mov
call
mov
mov
jns
call
aas
repnz
push
push
ja
mov
mov
mov
pop
movsb
add
das
pop
adc
jp
jge
cld
in
stos
pop
insl
or
pop
add
adc
fs
lds
call
js
iret
mov
lret
mov
inc
fsubr
addr16
jl
loop
movsl
in
sti
mov
jo
aas
adc
and
data16
push
sbb
fdivr
rclb
mov
dec
test
out
out
mov
fstl
arpl
mov
add
gs
mov
and
add
pop
add
xchg
add
adc
jmp
push
push
cmp
jl
xchg
repnz
int
mov
or
mov
idivb
push
and
movsb
inc
pop
inc
push
sub
mov
mov
jl
dec
jge
push
jge,pt
xor
js
mov
call
dec
aaa
jge
push
adc
pop
add
popa
ljmp
popf
adc
mov
dec
xchg
imul
movsw
stos
shll
push
jecxz
loopne
ljmp
sbb
decb
arpl
xchg
imul
out
push
out
pop
lods
in
sub
jl
inc
jge
lret
loope
and
inc
ds
and
cmpsb
out
or
push
data16
aad
mov
inc
pop
mov
xchg
jns
and
fwait
arpl
clc
outsl
mov
add
mov
jl
push
in
movsl
adc
push
and
mov
mulb
jb
ljmp
inc
push
call
mov
clc
ljmp
lock
movsl
mov
xchg
lods
rol
inc
je
lods
inc
lock
adc
dec
int
xchg
add
inc
and
jnp
adc
dec
mov
dec
adc
icebp
mov
dec
test
jle
sbb
adc
jge
lea
jg
mov
inc
cmpsb
dec
pop
insl
push
and
inc
inc
and
fisttps
es
inc
jmp
in
sbb
leave
les
andb
shr
cmp
inc
add
adc
adc
pop
dec
cwtl
mov
mov
cmpsb
imul
add
mov
mov
sbb
push
fcomp
mov
xchg
sbbl
xorl
adc
rcll
pop
pushfw
jg
jecxz
add
pop
pop
std
test
mov
pop
mov
sbb
push
repz
aaa
mov
test
lods
lret
rorl
lcall
fstpt
xchg
out
sub
pusha
data16
cltd
add
jp
or
pushf
xor
add
leave
jno
sbb
sti
sbb
lea
mov
push
lods
gs
notl
jns
xor
mov
add
hlt
shrb
fcmove
push
mov
xchg
push
ret
cmc
jmp
clc
or
lahf
and
pop
fimull
jae
mov
jecxz
push
pop
sbb
xchg
mov
jbe
outsb
enter
cmp
je
lahf
scas
jmp
push
jne
das
aaa
cmpsb
rolb
or
movsl
push
data16
mov
sbb
rol
daa
hlt
fisttpll
fmuls
lahf
mov
cmp
jae
jp
insl
clc
lret
outsl
inc
jbe
add
and
pop
xchg
dec
scas
sub
mov
aaa
cltd
clc
and
out
in
sbb
mov
mov
pop
mov
push
ret
repnz
pop
mov
ds
add
out
xchg
mov
dec
push
leave
add
das
and
cmp
repnz
or
insb
dec
stos
sahf
sti
jge
dec
fbld
xor
je
pop
bound
outsl
push
inc
xchg
idivl
cmp
negl
shrl
imul
jbe
ret
inc
jne
faddp
push
pusha
mov
aaa
mov
daa
lcall
addb
cmp
insb
push
mov
das
out
jb
jmp
lods
dec
mov
nop
dec
inc
leave
xchg
fbld
shlb
test
or
sub
cmpsb
mov
dec
testl
sbb
cmp
mov
ret
push
stos
es
aad
mov
adc
pop
mov
lea
call
push
mov
xor
mov
aaa
data16
adc
cld
mov
xchg
mov
xchg
lret
pop
cs
fistpll
pop
pop
das
inc
aas
push
fnstsw
lcallw
mov
xchg
cmp
jbe
out
inc
jo
daa
loop
bound
cs
lret
inc
test
mov
sub
iret
and
lods
and
add
cmp
ss
cmp
push
mov
xchg
jp
push
adc
dec
imul
xor
push
jecxz
jns
test
cmp
xchg
mov
addr16
mov
pusha
repnz
idivl
cmpsl
int
stos
sti
repz
fcompl
mov
dec
ret
cmc
adc
iret
push
add
fildl
or
inc
rcrl
jg
dec
dec
fwait
repnz
dec
ss
out
mov
push
leave
cmp
es
pusha
adc
xor
das
lret
pushf
pop
ffree
mov
xor
jg
test
xchg
lods
addb
mov
mov
push
pusha
and
sbb
lds
or
or
loope
fcomps
inc
cmp
outsl
sub
push
lret
add
pop
daa
test
xchg
jae
into
dec
sub
or
mov
dec
loope
call
push
and
ljmp
jno
and
mov
ret
lods
add
cmc
jecxz
movsb
test
out
cmpsb
loopne
aad
cmpsl
cmpsl
jle
cmp
cltd
inc
dec
aad
add
sbb
iret
int3
xlat
dec
push
and
aam
shrl
pop
sahf
clc
push
pop
dec
fcoml
sarb
jno
xchg
loopne
xchg
sbb
inc
test
jmp
xchg
xchg
idivb
add
mov
ljmp
mov
out
iret
incb
fs
xchg
jmp
push
and
ret
leave
ret
std
inc
sub
xchg
dec
mov
push
popf
jmp
in
xor
inc
call
je
gs
push
jle
adc
movsb
arpl
xchg
cmpsl
cmpsl
shrl
adc
inc
xchg
mov
clc
std
fmull
dec
mov
sbbb
add
cmc
jg
mov
pusha
cs
add
bnd
enter
es
jb
pop
mov
subl
dec
out
push
icebp
dec
aad
push
add
and
sbb
pushf
aaa
insb
mov
inc
ret
mov
std
and
pop
loop
jae
in
pop
mov
cmpsl
or
das
sbb
pusha
cmp
repz
cmp
flds
push
mov
add
xchg
fildl
fs
lret
xchg
fwait
gs
mov
jae
mov
imul
adc
cmp
xchg
adc
push
lods
xorb
cmp
sbb
rcrb
out
sbb
pop
lret
rcll
cmp
daa
push
lods
std
mov
ljmp
outsl
cmpsl
cmp
xchg
add
push
fwait
jno
cli
lahf
popa
mov
out
pop
xchg
mov
push
mov
iret
clc
mov
or
mov
push
scas
lret
test
mov
inc
adc
stc
in
enter
lret
xchg
cmpsb
loopne
xor
js
push
call
dec
xchg
mov
pushf
and
dec
subl
sub
lahf
les
sbb
sbb
es
ret
jecxz
rcll
into
and
mov
jns
pop
clc
ficompl
and
cmpsl
xor
mov
mov
xchg
push
mov
lret
cwtl
dec
outsl
jp
xchg
outsl
test
sbb
test
push
cmp
out
lahf
pop
sbb
sbbb
mov
pop
or
push
sub
sbb
sar
adc
lahf
mov
bound
adc
adc
and
dec
cwtl
dec
sbb
aas
sar
fwait
mov
call
fldenv
push
push
dec
out
fwait
sub
xchg
loopne
mov
push
mov
or
cmp
fcoms
fistl
cmp
pop
imull
dec
loop
movsb
das
xor
mov
xchg
das
inc
mov
adc
cmp
xor
sahf
xor
xorl
popa
sub
call
add
xchg
push
jb
aaa
insb
sbb
pop
inc
cmp
xor
and
sbb
inc
and
mov
mov
cmc
push
cmc
iretw
ficompl
xchg
inc
mov
pop
mov
les
cmpsb
push
daa
mov
rcll
lret
mov
jno
lea
cltd
jl
das
adc
stos
xor
dec
mov
dec
jae
jbe
or
pop
js
sub
fs
es
into
mov
lds
aam
add
jae
push
dec
add
cwtl
pop
xor
test
cmpsb
sbb
xchg
add
inc
cmp
adc
les
xor
sub
xchg
test
cld
testl
mov
cs
inc
das
or
inc
or
cmp
pop
es
test
add
std
or
xchg
sbb
mov
movsb
push
call
jl
gs
outsb
mov
push
nop
daa
add
mov
sub
or
mov
mov
mov
cmpsl
mov
mov
negl
adc
inc
notl
xor
incl
push
fdivrs
mov
xor
mov
nop
fdivrs
stos
pop
mov
push
cmp
int
adc
in
mov
enter
into
orb
and
leave
insl
adc
fwait
adc
xchg
aaa
dec
es
pop
and
test
mov
xchg
adc
or
pop
lods
cli
inc
mov
cmp
push
lahf
popa
je
push
inc
inc
rorl
add
mov
mov
je
ja
push
add
add
jp
xor
push
or
imul
push
nop
into
mov
pop
out
sbb
rolb
lock
sub
in
scas
mov
mov
test
cmp
cmp
xchg
test
jns
das
lods
insl
cmp
push
jbe
iret
out
jmp
pop
push
jmp
pop
mov
lock
ret
mov
popa
mov
mov
arpl
data16
lret
pop
test
stos
bound
dec
test
adcl
cmp
jae
push
insb
dec
or
sbb
movsb
ret
pop
fbld
cmc
jecxz
mov
dec
and
pop
dec
shl
pop
inc
adc
push
pop
sbb
inc
push
insb
insl
mov
jno
inc
cmpsl
jmp
sub
cltd
mov
shll
xchg
inc
neg
lret
cli
xor
adc
into
xor
adc
inc
nop
mov
mov
aas
inc
daa
les
jle
test
cmp
in
dec
shlb
cmp
inc
nop
sub
sub
mov
fwait
lds
sbb
rorb
fnstcw
lea
data16
pop
cmp
xor
push
imul
mov
cmp
mov
push
mov
nop
cmp
daa
push
out
adc
in
sti
dec
inc
ret
jl
jnp
push
popf
test
sbb
add
icebp
push
push
shl
std
mov
aad
mov
add
mov
add
sub
popf
mov
nop
int3
pop
dec
jecxz
into
sbb
pop
inc
mov
adc
clc
addl
inc
scas
or
aaa
int
lahf
cmpsl
test
imul
loope
inc
pop
rcrb
lret
adc
in
lcall
pop
ljmp
js
arpl
jbe
daa
cli
les
ds
push
imul
cld
cltd
hlt
ficompl
jg
pop
xchg
mov
push
mov
adc
pop
cmp
sti
repz
lea
aas
sub
mov
mov
jno
xor
or
dec
jle
fisubrs
popa
test
pusha
and
mov
mov
call
shl
or
lret
mov
fwait
scas
out
sbb
cmp
dec
sbb
push
lahf
cmp
scas
adc
mov
add
or
push
adc
sbb
repz
cltd
jle
rolb
push
ficoms
in
mov
cltd
add
push
dec
loopne
add
sbb
ret
sub
jnp
xchg
es
dec
fdivrs
outsl
ss
xchg
jnp
inc
mov
in
pop
hlt
out
out
in
mov
scas
or
xchg
pop
fwait
mov
sbb
icebp
loop
or
adc
stos
jge
loope
xchg
xchg
cwtl
xchg
jbe
stos
push
jl
lret
sahf
std
cwtl
mov
pop
jecxz
test
mov
sub
cmp
rcrl
pop
cmpsb
or
in
outsl
imul
push
movsl
adc
ret
lock
icebp
scas
outsb
into
sub
repnz
xor
pop
loopne
mov
int
addb
cmpsl
fstps
ror
mov
fcoms
add
in
aaa
daa
jp
daa
ds
pop
mov
dec
pop
ds
mov
sbb
inc
sub
cmp
mov
jb
lods
jmp
sbb
sub
lock
and
test
sub
sub
jnp
adc
loop
ja
and
adc
aam
stos
stos
incl
xor
mov
inc
fistpll
cmp
mov
xchg
xor
and
loop
xchg
mov
cmp
js
cwtl
sbb
sbb
inc
jbe
push
push
bound
jbe
jns
out
jmp
data16
push
jb
cmp
cmp
push
jne
mov
mov
jns
test
popf
jns
xchg
inc
cwtl
nop
jecxz
jp
cmp
xor
stos
pusha
push
mov
sti
arpl
or
in
aad
shlb
mov
push
rolb
adc
iret
mov
test
ds
mov
push
push
sarl
ds
xchg
std
fadds
call
lea
movsl
pop
mov
lds
test
dec
shlb
adc
clc
test
mov
lods
adc
xchg
and
dec
rcrl
dec
enter
dec
xchg
cli
in
mov
cmp
xchg
mov
loope
cmp
fs
pop
outsl
shll
xor
ret
adc
mov
mov
inc
xor
rcrb
loope
js
cmp
out
mov
push
sbb
pushf
insl
dec
push
sbb
ret
js
dec
lods
sub
add
xchg
dec
and
push
xchg
lahf
add
mov
or
mov
test
xchg
aad
dec
stos
shr
lcall
test
lahf
adc
mov
mov
sub
jg
fwait
cmp
out
and
jmp
mov
lcall
jbe
xchg
stos
inc
mov
pop
lods
push
fucomp
popa
mov
stos
mov
int
lret
jno
imulb
es
jae,pt
xchg
adc
divb
mov
clc
sub
mov
scas
cmc
add
and
jo
lods
mov
mov
pop
sub
dec
mov
lods
pushl
jp
add
pop
dec
ret
mov
mov
mov
repz
cmpsb
push
mov
add
push
add
inc
arpl
add
mov
int
test
and
incl
aad
push
cltd
out
jae
outsb
or
and
loop
adc
ljmp
cld
xchg
adc
and
mov
pusha
push
mov
inc
lods
cld
arpl
add
push
push
jmp
xchg
loop
or
fadds
sbb
sbb
xor
inc
jb
sub
mov
inc
mov
bnd
cmpsl
mov
sbb
add
xchg
push
sbb
frstpm(287
adcl
sahf
mov
and
xor
cmc
fwait
in
mov
pop
leave
jg
bound
sub
test
and
xchg
icebp
call
inc
or
pop
sub
cmp
lods
cs
aaa
xor
dec
shrl
ret
sti
call
dec
in
jg
dec
pop
or
shr
test
stc
pop
repnz
lods
seta
jns
inc
adc
in
scas
lcall
mov
into
hlt
push
fsts
shlb
or
mov
lret
add
imul
mov
js
xchg
lahf
adc
out
xor
pop
rcl
cltd
ljmp
xor
or
push
jmp
mov
jmp
lret
pop
cli
clc
xchg
pusha
add
mov
pop
lahf
dec
pop
sar
or
mov
rcl
bound
gs
xchg
arpl
in
or
in
into
ljmp
dec
mov
dec
jecxz
dec
cli
adc
xchg
sub
push
cli
cmp
ja
xchg
fnstsw
mov
adc
xchg
cmc
mov
xlat
scas
test
jnp
jnp
pop
cmp
movsl
lret
scas
push
cwtl
xchg
pop
aam
test
jle
dec
mov
cltd
mov
xor
and
mov
xchg
cmp
sub
mov
dec
jg
xor
mov
call
mov
xchg
rol
dec
nop
xor
xor
mov
cmp
movsl
clc
jns
sub
sub
inc
iret
sbb
and
daa
jne
jecxz
push
shlb
adc
mov
push
xor
pop
ds
lcall
dec
pop
mov
or
stos
fnstsw
cwtl
xor
pop
mov
cld
or
lret
dec
add
fdivs
or
mov
pop
mov
pop
jle
and
in
sbb
ret
in
aad
xlat
inc
add
adc
sarb
pop
mov
arpl
mull
icebp
sahf
adc
xor
xor
add
imul
nop
pop
loopne
jae
mov
das
mov
cmp
inc
aad
adc
dec
pop
cmp
and
int3
arpl
mov
mov
xorb
push
mov
dec
pusha
lods
mov
push
out
mov
sbb
mov
shlb
ja
xor
lcall
mov
enter
arpl
jnp
add
adc
mov
xlat
loope
add
into
sti
lret
gs
hlt
fnstenv
popf
push
divb
dec
out
subb
mov
mov
mov
call
outsb
dec
sbb
cmp
dec
incb
mov
loop
into
fdivs
sub
push
std
test
je
add
ret
das
xchg
movsb
jo
test
mov
mov
mov
sbb
xchg
pop
jg
jl
aad
xor
out
mov
push
add
dec
push
add
sti
push
dec
mov
dec
fdiv
mov
dec
xchg
add
xor
xor
jb
mov
inc
pop
ret
pop
bound
add
jle
xor
loopne
fs
call
idiv
pusha
lock
jnp,pt
movb
bnd
test
es
testl
mov
loope
xchg
popa
shrb
int
mov
ja
xlat
add
fbld
pop
lret
stc
jge
in
repnz
rolb
es
in
fadds
rcll
int
divl
mov
sbb
mov
icebp
test
lea
fs
loope
xchg
push
sub
gs
dec
data16
in
pop
int3
fwait
dec
std
sbb
add
mov
mov
inc
or
xlat
adc
jl
das
adc
mov
sarl
iret
xchg
and
and
iret
adc
push
xchg
adc
dec
cmp
repnz
in
dec
pop
xchg
sbb
sahf
andb
sbb
or
scas
or
add
popa
inc
test
sub
cmp
push
decb
mov
insl
cmp
lahf
push
mov
cld
push
bound
js
jmp
lret
scas
leave
fs
push
cmc
mov
inc
xor
mov
cli
insl
rcll
sub
notl
fisubl
dec
rclb
pusha
in
stos
addr16
dec
imulb
cli
and
add
outsb
dec
mov
xchg
xchg
out
repnz
pop
jb
and
and
cs
push
jmp
mov
dec
mov
and
lock
push
pop
clc
jmp
ficomps
shlb
inc
loop
sti
movsb
mov
adc
jnp
dec
cmp
xchg
adc
addr16
mov
addr16
sub
subb
mov
adc
sub
pop
aam
push
test
subb
sbb
js
gs
adc
cmpl
jnp
jnp
xor
rcrl
jb
and
mov
scas
xchg
fcomps
icebp
add
xchg
jmp
mov
pop
dec
repnz
test
subb
push
xlat
adc
dec
jmp
pop
aam
lcall
arpl
mov
out
mov
xor
mov
fadd
xchg
pop
ja
jp
pushf
fs
push
xchg
pushf
xor
xor
or
leave
lahf
mov
movsb
or
mov
mov
and
xchg
add
lods
sub
outsl
push
in
xchg
cli
mov
cwtl
mov
xor
nop
aad
adc
sbb
add
nop
and
cmp
mov
lcall
aam
cmpsb
xor
push
or
les
push
and
dec
test
jg
mov
lea
or
fldpi
cmp
cmp
dec
sub
pop
int
in
add
int
or
fldenv
cli
cmp
fnstsw
iret
push
cmc
push
pop
aam
pop
pop
lahf
mov
bound
cli
xchg
mov
enter
add
addr16
cmp
pop
add
inc
mov
mov
mov
add
sbb
ret
sbb
sub
jbe
out
and
add
cli
inc
into
sbb
aad
out
sahf
pop
test
cmp
stos
or
sbb
andb
cs
push
sub
rcrb
sbb
pop
xchg
lcall
cmp
lcall
or
jne
pushl
mov
xor
mov
das
push
loop
inc
insl
lcall
movsb
sbb
xchg
insl
repnz
mov
testb
test
push
roll
test
jecxz
push
shll
movsb
adc
popl
pop
adc
flds
pop
mov
imul
in
and
cmp
cwtl
les
insl
xor
cmp
mov
mov
mov
jo
rorl
negl
je
xchg
xor
icebp
mov
out
repnz
jae
pop
les
ja
das
fwait
jl
lock
sahf
add
loope
and
xchg
xchg
bound
jo
mov
xlat
mov
adc
test
enter
jns
pop
xor
push
pop
stos
icebp
cmpsl
inc
add
aaa
xor
cmpsb
imul
mov
xchg
or
cmp
xchg
shrl
inc
or
cmpsb
or
inc
mov
sahf
mov
out
clc
inc
dec
stos
sub
and
cmp
shl
std
mov
dec
jmp
fdivl
push
test
fildll
inc
inc
add
test
mov
or
jle
push
sub
jmp
jge
movb
repz
imul
daa
arpl
je
xor
pop
ret
movsl
fidivrs
cmp
in
in
sahf
fcmovnu
hlt
mov
dec
fimull
fs
je
push
leave
mov
popa
mov
jg
mov
pushf
push
xchg
cwtl
jae
shlb
inc
clts
lock
shrl
stc
in
jmp
sub
aaa
mov
jb
and
js
push
in
mov
gs
pushl
outsl
stc
dec
jp
sahf
hlt
push
jo
out
lock
xchg
fwait
mov
addr16
rolb
push
push
pop
cmp
sub
adc
xor
sbb
inc
adc
rcrb
xor
sbb
push
add
cmp
popl
cmp
scas
and
repz
loopne
sub
mov
mov
mov
sbbb
xor
xchg
out
mov
pop
lock
loop
mov
rol
cmp
xchg
mov
mov
rcrb
clc
push
mov
nop
adc
pop
sub
push
sbbl
or
nop
stos
jne
pushf
sti
pop
pushl
cmpsl
mov
loopne
mov
cld
and
inc
test
lock
add
push
sub
fstl
lods
sbb
push
xor
mov
pop
movsb
pop
or
test
fcoml
test
ret
sbb
push
outsb
jne
roll
add
cmpsb
jl
in
fs
mov
inc
xchg
lret
xor
loopne
mov
adc
repnz
push
lahf
cmp
inc
push
inc
out
hlt
and
push
dec
pushl
sub
cmp
cli
jae
ljmp
lods
adc
pop
data16
cmpsb
popa
repnz
pop
fwait
mov
inc
inc
clc
aam
pop
icebp
out
jl
xor
rclb
cmp
aaa
sbb
push
int3
sarb
scas
fnstenv
stc
pop
daa
xlat
xor
sub
shl
fs
add
push
stos
mov
popa
fs
jo
xchg
add
mov
xlat
lods
jg
push
insl
pop
jb
jl
inc
popa
or
mov
js
mov
mov
ja
sub
mov
add
adc
sti
mov
repnz
sbb
push
insb
repnz
aam
pop
pop
pop
adc
cmp
push
add
cwtl
mov
xchg
cwtl
into
stos
lea
mov
xlat
push
inc
pusha
rorb
decl
rcrb
andb
xor
nop
mov
test
bound
test
nop
mov
cld
outsb
or
test
ffreep
jecxz
or
jecxz
adc
outsb
mov
popf
push
ficoml
setbe
push
sahf
movsb
add
sti
insl
ja
cmp
sbb
mov
arpl
push
fildl
mov
dec
in
mov
push
cmp
pop
stos
dec
dec
aam
fists
cli
lock
das
je
int
nop
lahf
js
inc
dec
push
adc
lea
cmp
inc
push
sbb
ret
mov
lret
and
int
js
scas
adc
jmp
xchg
jne
sbb
rcr
lahf
and
jle
jg
sbb
dec
sbb
sbb
push
movsl
movsl
push
hlt
inc
mov
pop
add
push
in
rcrl
jnp
imul
mov
lods
aam
jns
or
js
xor
jae
lock
inc
daa
imul
push
jmp
ret
jle
or
jbe
xchg
jbe
xchg
aad
pop
out
sub
movsl
ja
enter
repnz
xor
scas
xor
fsub
inc
movsl
add
cwtl
nop
xor
xchg
add
les
imul
or
add
jno
outsl
push
das
std
test
sbb
xchg
and
fwait
and
dec
or
dec
adc
dec
adc
mov
rorl
inc
leave
movsb
push
shl
sbb
hlt
shll
cmpsb
xchg
ljmp
add
dec
push
fadd
inc
pop
fldl
fs
and
je
repz
into
jbe
push
pushf
sbb
cmc
sbb
pop
jne
mov
push
mov
xchg
mov
stos
or
mov
mov
xchg
loope
jbe
push
or
out
ljmp
push
outsl
sbb
dec
scas
push
stc
jmp
mov
mov
inc
xor
sbb
adc
lahf
push
mov
int3
lock
mov
sub
xchg
add
mov
jne
pop
lcall
data16
out
pop
and
mov
ds
dec
in
neg
and
mov
fdivrl
mov
fistps
pop
pop
cmp
adc
stos
and
sbb
pop
lock
test
xor
lret
adc
addr16
cmp
push
pusha
rclb
dec
xchg
mov
lret
shl
push
mov
and
mov
aam
mov
cwtl
testb
or
cmp
dec
jl
adc
cwtl
xor
adc
push
add
scas
xor
or
cmpsb
sub
mov
push
int3
fistl
imul
mov
lods
inc
add
cmpsb
xorl
popa
insb
mov
iret
fists
or
repnz
jge
pop
adc
pop
mov
lds
sbb
sbb
push
mov
adc
and
loope
jne
lret
push
and
stos
jle
daa
loopne
pusha
sub
cmpsb
in
and
loope
lock
pop
pop
out
es
xor
fs
sbb
imul
and
xchg
enter
mov
popf
loopne
cmc
add
call
push
cs
lds
in
add
adc
sub
out
cld
pop
xchg
jne
test
pop
mov
leave
sub
int
jp
out
sbb
cs
andl
adc
sub
mov
sbb
and
pop
mov
xchg
jmp
xchg
fstp
xor
and
fisubrl
cs
mov
imul
xor
or
or
or
popf
pop
dec
add
pop
sbb
je
pop
jle
fidivl
xchg
push
fisubrl
xor
in
pop
sbb
divb
mov
loope
shlb
jg
inc
mov
dec
sub
cmp
out
stos
cwtl
cmc
mov
pop
imull
inc
push
xchg
push
pop
ret
fstpt
push
clc
icebp
dec
cmp
rcrl
imull
fucom
push
insl
sub
or
pop
iret
sub
stos
aam
imul
sti
mov
stc
pop
hlt
roll
dec
pop
mov
test
fldenv
jp
and
lcall
add
sahf
push
fildll
in
dec
xlat
adc
dec
in
push
xor
push
clc
push
cli
int
sub
push
shrb
mov
punpcklwd
mov
mov
inc
push
nop
int3
enter
sbbb
loope
xchg
cs
iret
adc
dec
or
push
push
add
xor
sub
les
mov
xchg
xor
out
cmp
or
push
push
push
xchg
adc
lret
popa
xchg
add
or
mov
mov
fiaddl
cmp
and
ret
add
roll
xchg
and
cs
out
leave
fldt
mov
shl
call
in
sub
fisubrs
jo
movsl
push
dec
inc
cwtl
add
test
dec
mov
mov
push
dec
and
test
or
sbb
int3
mov
loop
lods
and
pop
lret
jp
mov
dec
jecxz
outsl
xchg
xor
fwait
push
leave
adc
dec
dec
or
stc
cs
adc
cli
dec
clc
xchg
push
out
bound
push
mov
mov
mov
mov
pop
addr16
faddl
inc
mov
adc
mov
inc
repz
test
mov
push
fwait
mov
jnp
aad
pop
or
xor
ficoms
cmp
add
ret
add
ss
dec
nop
cmp
data16
mull
lret
ljmp
and
inc
in
xchg
sub
addr16
cmp
pop
test
jge
sub
sahf
xchg
ret
stos
cmpb
mov
and
xor
jle
cmp
ljmp
jns
jg
sbb
fisttpl
xor
jno
pushf
and
or
mov
cmp
adcb
push
push
add
push
sbb
dec
mov
loop
das
aad
in
add
outsl
ficomps
aad
hlt
into
cmp
lds
inc
enter
loope
clc
out
sub
call
push
push
sbbb
aam
iret
xor
jae
push
shl
fwait
in
leave
insb
or
call
das
rol
pop
mov
popa
and
lahf
push
mov
mov
loop
in
cld
jmp
mov
inc
dec
lods
sbb
adc
inc
les
xor
sti
mov
int
mov
or
cmp
xor
leave
fisubl
inc
jno
mov
out
push
jnp
push
iret
mov
xor
inc
ja
mov
faddl
clc
test
lahf
sbb
data16
cmpb
jle
push
imul
push
or
bound
mov
out
dec
mov
pop
cmp
push
les
mov
je
inc
xlat
sarl
stos
into
cmpsl
dec
mov
inc
inc
jge
lods
push
dec
jg
xchg
aam
orl
push
push
or
scas
scas
pop
adc
or
ja
cmp
enter
push
dec
dec
popf
xlat
pop
jge
dec
push
jnp
lret
mov
jae
push
das
mov
repz
dec
sti
test
adc
xchg
aad
lcall
icebp
aam
pusha
adc
mov
arpl
rcrl
jl
iret
mov
push
push
xchg
jae
sarl
dec
push
sub
add
lea
fwait
xchg
pop
adc
aam
mov
cli
icebp
dec
addr16
cmp
stos
mov
add
pop
xchg
adc
ret
test
ret
scas
popa
std
jae
fistps
mov
add
scas
loopne
stos
cld
jl
cmp
mov
int3
push
sbb
sub
or
inc
into
lret
xchg
pusha
sbb
jmp
push
push
movl
aaa
push
sub
loopne
sbb
in
pop
jns
mov
or
push
addb
dec
or
cmp
sbb
mov
xor
cmc
leave
bound
and
clc
fimull
cli
push
test
adc
pop
jae
outsl
dec
adc
shlb
jle
push
lret
int
pop
sub
cmp
add
std
lods
in
mov
add
lcall
bound
cwtl
adc
push
mov
test
mov
mov
pop
mov
ret
xor
cmp
xchg
in
cltd
negl
inc
jae
sub
and
mov
adc
cmc
inc
pop
das
jbe
repnz
mov
shlb
and
lock
popf
ds
fsub
aaa
cmc
rolb
jp
push
hlt
sbbb
add
xor
cmp
push
cmp
cmp
add
push
push
and
insb
jmp
push
mov
pop
pushf
push
push
leave
or
pop
xchg
jae
test
fiadds
repz
in
sahf
popf
add
push
cltd
out
fists
xchg
or
adc
fxch
out
and
inc
popf
movsb
dec
pushl
or
repz
testl
in
add
mov
mov
imul
aam
loopne
push
push
mov
data16
mov
push
adc
and
xchg
adc
xchg
push
js
popf
call
push
jl
dec
mov
fsubr
pop
cmp
jg
mov
movsl
mov
ret
cs
mov
lea
jne
mov
aad
es
or
jb
cwtl
loop
add
cmp
out
fadds
movsb
rorl
sbb
fwait
xor
mov
mov
mov
js
inc
sbb
inc
loopne
mov
inc
out
adc
shrb
popa
pop
jmp
cmp
loopne
cltd
scas
pop
sub
icebp
sub
pop
pop
mov
push
fdivrl
jmp
hlt
stos
js
dec
es
xchg
sub
loop
sbb
and
int
leave
dec
cmpl
jg
cmp
mov
in
test
mov
data16
xchg
cmp
notb
adc
mov
aad
outsl
jb
jmp
in
popf
mov
enter
push
leave
dec
ficompl
lods
fdivl
dec
xor
je
ljmp
mov
adc
xlat
dec
ficomps
mov
inc
aas
mov
test
popf
inc
sub
push
mov
sti
addr16
shl
pop
testl
xchg
jo
xchg
push
in
or
leave
fwait
pop
daa
mov
sbb
cmpsl
popa
fwait
outsl
jge
test
cmpsl
into
loop
outsl
adc
jae
ljmp
test
pop
push
mov
pop
push
mov
das
enter
iret
pop
dec
pop
inc
enter
call
arpl
sti
lret
lds
cmp
cmp
sbb
adc
push
je
mov
jp
mov
xchg
in
scas
jl
push
jae
and
lea
lahf
loope
and
rcrb
mov
int
lahf
sub
into
std
pop
adc
in
xorb
dec
lea
clc
sti
rorb
nop
add
sbb
test
into
ss
lahf
sub
mov
jecxz
outsb
push
lds
xchg
in
pop
dec
and
jo
dec
arpl
adc
xchg
je
and
and
hlt
mov
std
jne
xchg
rorl
jmp
mov
lods
out
pop
mov
fistpl
cli
or
rdtsc
ror
sub
mov
bound
add
clc
jae
out
dec
jbe
jne
add
push
aam
ror
rcrl
dec
mov
pop
out
cmp
leave
cmp
jae
negl
pop
out
popa
std
in
xchg
xor
lock
mov
mov
jle
push
int
rorl
mov
out
pusha
fbstp
lahf
lcall
repnz
xchg
dec
add
xchg
push
ljmp
mov
dec
mov
xor
xor
pop
and
mov
cwtl
into
in
xchg
jle
addb
insl
inc
add
dec
inc
pop
pop
cmp
mov
add
test
sbbl
scas
dec
scas
lock
sbb
mov
repz
fucomi
xchg
xor
xchg
fwait
dec
hlt
fidivs
mov
push
xchg
sbb
insb
loope
movsl
divb
add
pop
xchg
dec
adc
leave
cwtl
mov
aas
xor
mov
and
inc
dec
cmp
xor
lea
sub
addb
scas
xor
cwtl
mov
inc
mov
xchg
sarb
imul
sbb
sahf
clc
jecxz
fdivr
push
jl
or
pop
inc
and
push
xchg
inc
je
jg
iret
scas
jo
add
and
test
and
cmp
mov
lods
push
mov
lods
ljmp
in
and
fcomp
psllq
mov
das
out
jns
xor
orl
in
pop
outsb
xor
cmc
cwtl
push
hlt
and
outsl
adc
test
loope
xor
and
adc
mov
and
and
lahf
push
xchg
mov
dec
les
int
push
push
adc
and
xor
push
add
cmp
js
cmc
push
dec
imul
cmpsl
xor
push
sub
loopne
in
inc
int
into
popa
dec
and
sub
loopne
jne
fists
cwtl
inc
push
xchg
insb
add
or
push
daa
test
or
ja
aaa
jle
cmp
ret
xor
xor
pop
sub
mov
inc
mov
dec
dec
ja
sbb
pop
movsl
mov
jae
jg
or
das
pop
rorl
loopne
or
jp
ret
mov
movsl
pop
mov
dec
xchg
dec
hlt
add
mov
mov
push
jno
lods
inc
mov
mov
and
and
shll
sti
jecxz
fcmovne
jl
mov
popf
pop
push
mov
dec
pop
sbb
int3
mov
pop
jge
push
push
jne
jb
repz
icebp
test
adc
lods
sub
cltd
mov
sahf
test
je
sbb
je
cmpsb
inc
sub
mov
add
enter
lea
cmc
fisttps
push
mov
xchg
mov
mov
outsb
fnstenv
and
lret
cmpsb
sub
cmpsb
pusha
std
movsb
cs
mov
cmp
outsb
cmp
sub
int
xor
sub
andl
and
mov
push
xlat
mov
mov
jne
mov
inc
adc
stos
cmpsb
and
test
cmpxchg
dec
xchg
or
push
pop
xlat
insb
mull
bound
add
adc
xchg
adc
sub
cmp
addr16
inc
xor
rcl
mov
fldenv
or
inc
mov
jp
mov
cmpsb
cmp
sahf
insl
xor
vmovq
cmp
pusha
loop
inc
xor
sub
lds
xchg
rcr
aaa
xchg
ficompl
pop
jl
ret
jp
enter
mov
cmpl
ljmp
shrb
inc
add
nop
and
xchg
mov
scas
mov
cmpsb
mov
int
arpl
jb
lods
call
sbb
jge
add
xor
sub
xchg
fdecstp
mov
out
pop
call
loopne
sahf
and
dec
mov
int
mov
adc
mov
xchg
push
and
ljmp
dec
aam
rcrl
fimull
mov
pop
pop
xor
ret
loopne
cwtl
jg
cmp
add
imul
cwtl
xor
cli
imul
adc
push
cmp
adc
mov
into
mov
mov
fldl2e
jno
loop
xchg
shll
xor
fs
iret
adc
fisubrs
or
ljmp
mov
xor
je
divb
adc
ret
xchg
sub
pop
mov
test
pusha
adc
popa
arpl
mov
mov
dec
aas
test
jne
rclb
movsl
js
orl
jge
push
imul
aaa
sub
shl
idivb
lret
mov
xor
movsl
pop
sub
sbb
or
add
nop
mulb
outsb
and
mov
std
and
dec
pusha
pop
jo
pop
imull
fisubrs
lret
xor
into
je
push
lods
es
aas
bound
mov
dec
mov
loope
jmp
cmpsl
adcb
call
in
inc
pop
dec
jg
jg
stos
xor
mov
adc
sbb
loopne
or
mov
clc
mov
in
pop
sbb
add
popf
ds
lret
hlt
leave
nop
adc
and
lods
cmp
cmp
cltd
inc
movsl
out
iret
scas
dec
cwtl
xor
push
add
mov
push
es
and
push
fists
icebp
push
sbbb
pop
push
adc
enter
inc
pop
add
cmpsl
adc
mov
fwait
sub
adc
mov
pop
or
mov
sbb
push
cmp
in
popa
add
movsl
mov
scas
xor
jo
mov
and
add
test
ds
cwtl
mov
scas
fs
mov
adcl
lods
jle
adc
test
jmp
stos
loop
mov
clc
and
xchg
nop
out
jbe
jb
aas
mov
in
test
inc
xchg
insb
pop
adc
icebp
cmp
scas
jns
xchg
dec
and
mov
mov
or
cmc
sub
push
mov
or
xchg
cmp
outsl
ljmp
ss
or
dec
cmp
bound
sub
frstor
int
and
mov
push
jp
aaa
dec
pusha
sub
orl
sub
cmp
stos
push
push
push
or
mov
mov
les
push
add
sub
cmp
push
mov
push
sahf
fs
fsts
sub
cmp
inc
push
roll
sti
lea
outsb
shl
sub
pop
sbb
and
shll
icebp
push
dec
aaa
sbb
mov
rolb
mov
mov
stos
dec
pop
aam
jp
sub
xor
ret
fucomp
jge
dec
dec
or
and
push
cmp
add
dec
hlt
clc
outsl
inc
sub
loopne
sti
sub
test
ja
inc
cltd
fiaddl
inc
and
push
shlb
mov
xchg
sub
fistpl
gs
jnp
stos
insl
hlt
cmp
icebp
jmp
std
cmp
inc
jp
dec
jo
sbb
out
rol
xchg
jno
xor
mov
mov
daa
inc
negb
pop
repnz
fsubp
jmp
nop
mov
adc
jne
jno
xorl
into
mov
cmpsb
ss
mov
cmp
push
andl
movsl
sub
int
aaa
push
jae
rorb
push
xor
mov
les
pusha
es
addb
sub
cmp
pop
cmp
and
leave
xchg
mov
push
inc
xchg
pop
ret
mov
dec
dec
cld
out
mov
fistpll
daa
cmp
lret
stos
enter
sahf
jmp
xchg
js
xchg
push
mov
and
inc
jle
mov
repz
dec
pop
or
stos
pop
loopne
out
int
xchg
dec
push
fcomps
pop
inc
adc
lock
sbb
push
pushf
aas
jbe
out
sti
ficoms
int3
xlat
jecxz
jne
lahf
sbb
out
mov
out
popa
in
mov
and
jg
out
jb
xchg
jg
aad
shlb
push
mov
mov
popf
loope
out
and
pop
jle
xchg
adc
iret
les
jne
loopne
mov
sbb
in
jecxz
cmpl
mov
sarl
or
lods
mov
xchg
lock
mov
push
repnz
es
clc
fldenv
and
xrelease
push
imul
push
pop
clc
into
dec
es
mov
jbe
xchg
out
lock
mov
xchg
je
inc
mov
xchg
jl
dec
int
outsb
mov
or
in
jns
xlat
mov
int
int3
mov
mov
in
es
lret
imul
fidivrl
repz
mov
outsl
or
leave
lret
or
jo
dec
push
add
loope
or
int3
add
fld
test
jns
pop
xchg
je
outsb
popf
enter
testl
mov
subl
ja
cli
lds
insl
cld
xchg
or
fs
dec
xor
adc
pop
cli
sub
dec
lahf
xchg
add
lock
push
inc
and
mov
inc
inc
lods
shl
dec
addr16
pop
nop
add
cmp
mov
pop
notb
call
shrl
add
inc
int3
repnz
dec
popf
or
adc
leave
jbe
inc
fisubrs
mov
movsb
sbb
fdivl
xchg
aas
enter
outsb
sub
mov
mov
cmpsb
cmp
jmp
mov
popa
push
pop
fmull
rolb
or
sub
sub
xchg
fisubrs
nop
leave
mov
cltd
leave
incb
pop
mov
jmp
ja
pop
std
lahf
mov
fldt
jae
inc
mov
xorb
pop
mov
lods
ljmp
clc
test
inc
xor
ja
daa
dec
pop
mov
clc
adc
repz
pop
lcall
rolb
lea
xchg
push
xchg
xchg
bound
xchg
adc
jle
movmskps
push
mov
popa
mov
arpl
call
test
pop
movsb
rorl
mov
jo
pop
mov
push
sbb
idiv
jnp
xchg
rcrl
push
push
mov
inc
into
add
ret
push
mov
test
and
imul
adc
xor
mov
js
dec
clc
subb
roll
mov
sarb
jne
jbe
xor
xchg
dec
push
sbbb
dec
sub
mov
sbb
mov
shufps
or
insb
mov
sahf
popa
push
pop
mov
loop
pusha
les
jo
jnp
mov
iret
lock
mov
sbb
mov
xchg
insl
das
lret
and
mov
or
in
shll
push
pop
push
into
mov
negl
rcr
fwait
sahf
mov
xlat
pop
fs
das
sbb
int3
pop
mov
int3
enter
lods
subl
xor
sbb
mov
mov
test
dec
sbbb
push
pop
sar
das
idivl
fiadds
insb
mov
mov
cmp
nop
cli
jns
scas
sbb
push
cwtl
or
jne
jg
sbb
adc
push
in
test
sbb
cld
pusha
pop
adc
punpckldq
icebp
ja
xor
lea
movb
repz
dec
pusha
jle
aaa
and
jb
shld
sbb
int
test
adc
xor
int
outsl
hlt
lea
pop
pop
add
adc
lcall
xchg
mov
andl
fdivrs
roll
add
pop
std
xchg
push
mov
cmpsb
mov
loope
inc
mov
push
popw
cwtl
sub
aaa
jno
jnp
jp
xchg
or
jae
imul
jecxz
or
out
xor
xchg
jbe
mov
rcrb
mov
adc
pop
popa
sbb
push
hlt
rcll
inc
add
insl
pop
pusha
decl
mov
pop
cmpsl
push
out
jmp
shr
jle
cmpl
sbb
je
fwait
mov
outsb
mov
ret
inc
mov
and
test
mov
cmp
dec
push
jno
push
scas
fprem
jmp
aaa
push
push
mov
pop
cmpsb
imul
xor
das
mov
adc
cmpsb
rolb
orl
pop
cmp
lock
js
adc
imul
mov
push
jns
sub
adc
int
iret
sub
mov
and
in
les
jns
repz
jno
sub
movsb
cs
mov
xor
cwtl
inc
push
and
jb
cmpl
lds
mulb
jne
xchg
push
xchg
mov
rolb
leave
mov
ficompl
mov
scas
adc
in
fwait
insb
mov
inc
out
sub
mov
cld
sub
mov
fiaddl
pop
pop
das
rorl
push
adc
xlat
shl
dec
shr
mov
iret
add
leave
dec
ljmp
rorb
add
jb
repz
mov
hlt
sbb
pushf
push
inc
jo
dec
std
fs
sub
mov
stc
pop
mov
add
xor
push
jp
jne
jnp
and
xchg
and
xchg
cld
and
mov
es
test
js
clc
or
xor
shrb
fdivrl
imulb
lahf
mov
jg
lea
push
xchg
notb
lea
mov
bound
cmp
pop
pushf
je
xchg
mov
xchg
and
sti
aam
cmp
orl
jle
das
clc
lcall
push
ret
jnp
sub
icebp
and
inc
mov
les
xor
push
out
mov
aam
insw
insb
outsl
test
xlat
rcrb
pop
std
xchg
stos
shl
or
mov
push
ror
in
pop
aam
fsubl
add
adc
mov
test
mov
test
add
js
push
jb
ret
aas
jb
or
out
movsl
ja
sbb
xlat
repz
in
stc
xchg
and
stc
movsb
push
and
mov
sbb
sbb
dec
or
sub
adc
pop
pusha
push
lahf
in
add
addb
mov
adc
mov
dec
push
loop
mov
sub
jne
xchg
mov
sub
xchg
popa
movsl
std
lods
cs
or
mov
inc
pop
add
xlat
sub
aam
jbe
repz
pop
jne
sbb
mov
sbb
mov
arpl
shll
ret
mov
sbb
xchg
jecxz
and
jns
or
dec
icebp
jge
lret
push
and
popa
addr16
inc
aaa
arpl
ds
lock
mov
pop
jecxz
andb
pop
hlt
push
lea
ja
outsl
lea
arpl
scas
cmpsb
jnp
push
sahf
cld
xor
adc
add
and
fucom
test
cmp
loopne
jge
push
enter
push
fistpl
in
movsb
cs
ja
int
mov
rolb
jg
repnz
ljmp
xlat
mov
fdivs
mov
push
push
xchg
mov
sbb
pushf
mov
inc
les
test
out
out
jne
in
std
xor
scas
daa
jp
movsb
pop
lock
outsb
clc
jge
mov
xor
int
push
xchg
push
scas
cmp
fisubrl
cmp
scas
test
add
xchg
in
outsb
pop
jo
outsl
mov
adc
sub
inc
adc
sbb
into
mov
test
fs
shrl
dec
jbe
xor
ret
cs
out
cmpsl
adc
add
std
ficomps
int
stos
hlt
aas
les
jge
lods
stos
xor
fcmove
adc
pushf
push
lret
push
and
out
js
stos
dec
mov
mov
add
fsubl
xchg
lds
cs
shl
cmpsl
cld
push
mov
imul
xor
clc
dec
fstl
add
push
push
ror
cli
or
sub
push
xor
mov
ja
jbe
push
mov
in
sub
shl
inc
xor
jne
lods
pushf
jl
lahf
mov
pop
sti
sub
xchg
fwait
pop
enter
mov
mov
cmpb
or
xor
mov
sub
and
fcomps
loopne
mov
shr
jo
push
or
push
dec
jmp
loope
call
ret
inc
xor
faddl
and
or
inc
and
cmc
out
cmp
cmpsl
cmpsb
or
jge
add
ja
mov
dec
and
cmp
inc
inc
sub
adc
adc
movsb
sti
scas
push
inc
leave
cmp
in
icebp
xor
jge
loope
aam
cmpsb
adc
mov
aaa
pusha
pop
mov
lods
add
repnz
cwtl
clc
mov
xor
sbb
repz
and
mov
sarb
lahf
mov
sub
es
jle
adc
push
push
call
xor
popf
out
cmp
xor
add
movb
outsb
loopne
movsl
xorl
mov
inc
mov
jl
int
jo
adc
int
pop
pop
subl
iret
adc
std
sbb
ja
mov
xor
in
lock
jmp
loope
cld
imul
jnp
add
inc
aaa
xor
push
test
add
mov
popf
daa
cltd
hlt
inc
stos
jnp
and
outsb
lret
adc
sahf
lock
icebp
push
out
xor
stc
jge
jg
push
mov
sbb
push
mov
js
pop
and
popl
inc
leave
out
xorb
loope
cmp
lock
call
or
push
cmp
int3
and
jne
xchg
jns
hlt
cmp
inc
outsl
pop
push
lods
and
sbb
aaa
test
movsb
insb
xlat
jl
adc
fsubrs
push
iret
push
popa
adc
in
insl
jg
int3
mov
add
push
iret
dec
rclb
sbb
fwait
jle
mov
subl
lock
cmpl
out
push
push
inc
inc
rcll
push
test
mov
dec
popa
sub
fcmovnu
xor
hlt
divl
sub
push
cmp
imul
cmp
aaa
inc
ljmp
pop
jmp
mov
std
ror
and
or
fldl
inc
mov
mov
xchg
jne
stc
lock
xchg
ds
mov
sbb
repz
fnstsw
sub
fiadds
or
jl
aad
and
jno
sbb
and
notl
arpl
mov
jbe
push
mov
lret
jmp
push
fwait
aaa
mov
and
pop
out
lock
mov
push
std
and
and
lods
cld
inc
fnsave
xlat
add
rclb
and
jbe
inc
push
mov
sarl
pop
aaa
sahf
lods
in
mov
or
xor
and
jmp
jmp
icebp
add
mov
mov
cmp
xor
xchg
mov
loop
jne
popa
mov
jb
xchg
jbe
inc
lahf
imul
jne
mov
outsb
out
imul
mov
hlt
rorl
insb
mov
dec
and
push
cwtl
sub
push
mov
jnp
jno
pop
fstl
popa
add
sbb
sbb
xlat
push
dec
decl
mov
into
sub
pushf
ds
gs
das
nop
negb
dec
xchg
inc
jge
movsl
inc
rcr
xchg
xchg
les
les
int
push
dec
lret
bt
loop
sub
pop
mov
sbb
lods
push
jbe
lcall
jle
mov
in
mov
dec
jbe
and
nop
in
pop
jns
push
mov
das
adc
vminpd
sub
push
push
cmpsb
in
xchg
mov
lods
sub
or
mov
daa
ficomps
inc
mov
add
jmp
xor
and
push
iret
scas
dec
add
ret
ljmp
pop
push
inc
iret
push
aaa
mov
fildl
mov
ds
dec
outsb
leave
dec
adcl
mov
mov
mov
mov
push
mov
int3
fs
rcrb
add
push
add
mov
ret
add
shrl
jne
leave
aas
mov
add
js
sbb
jl
mov
outsl
subb
inc
je
mov
add
in
adc
shll
xlat
dec
xchg
icebp
mov
rcrb
movsb
jmp
xlat
arpl
jns
mov
hlt
daa
repz
loopne
nop
adc
shll
jae
mov
test
xor
cs
push
in
push
mov
inc
mov
sub
sarb
fimuls
adc
out
xor
jg
test
mov
add
mov
clc
popa
xor
mov
xor
jb
or
inc
inc
xchg
push
mov
pop
fwait
inc
mov
mov
xchg
lcall
push
insb
push
jo
adc
mov
mov
shll
into
fsts
jle
push
outsl
mov
dec
inc
jae
dec
imul
adc
ja
add
loope
xchg
or
dec
cmpsl
cmp
add
or
inc
cmpsl
push
push
xor
mov
push
jp
xorl
pusha
out
cmp
rclb
lret
xchg
je
js
int3
mov
fidivrs
dec
pop
gs
jmp
cld
inc
js
pop
imul
or
mov
push
mov
inc
flds
inc
lea
in
pop
scas
aad
jp
jb
in
fmuls
jns
xlat
fidivs
add
cmc
pop
sbb
jg
jo
xchg
push
ja
lods
mov
sub
loop
or
mov
push
cwtl
loop
in
xchg
mov
push
mov
push
pop
xlat
xchg
test
sub
out
jb
mov
lods
mov
add
mov
xor
cmp
adc
sub
loopne
ds
imull
jge
and
out
push
mov
push
dec
mov
mov
popa
arpl
lcall
xchg
xchg
add
lods
xchg
pminsw
loopne
cmc
popa
or
inc
loopne
aam
enter
jp
or
xor
cltd
bound
jle
arpl
ljmp
rcrb
dec
push
mov
pop
sub
aas
or
dec
jp
jl
cmp
dec
jge
jle
sub
sub
adc
or
pop
fadds
dec
xchg
daa
popf
jb
fwait
pushf
dec
push
out
fmull
mov
dec
in
insb
out
clc
jge
xchg
adc
fstpl
clc
xchg
jle
cmpsb
nop
sbbl
jb
adc
xchg
iret
inc
pusha
adc
popa
ljmp
sti
jmp
add
sti
mov
adc
pushf
sbb
mov
setno
mov
cmp
sub
jp
and
lcall
insl
cmpsb
sub
lahf
cli
or
popa
fmuls
movsb
mov
fisubrs
mov
call
mov
mov
cli
shrb
add
lahf
rcrl
imul
pushf
xchg
cltd
ja
push
add
out
movsl
jle
sbb
jmp
dec
add
adc
outsb
mov
jns
mov
xchg
mov
mov
adc
dec
fyl2xp1
push
jns
cmp
js
inc
iret
cmp
mov
adc
imul
js
inc
inc
xor
add
aad
push
pop
adc
rclb
ret
pusha
stos
or
pop
mov
xchg
jle
mov
add
icebp
jmp
or
xor
lds
mov
inc
pop
loope
imul
xchg
adc
pop
inc
pop
add
push
cmp
mov
xchg
xor
sbb
fldl
mov
mov
in
pop
mov
jbe
sbb
adc
jmp
popa
cmc
mov
sub
inc
insb
insl
or
mov
cmpl
in
xchg
or
xor
das
int3
add
cmp
or
rorb
add
clc
xor
sahf
loop
jge
sbbb
jge
cmp
or
insl
pop
inc
outsb
jbe
push
pop
inc
mov
dec
stc
adc
mov
das
jle
icebp
adc
mov
or
movsl
jne
push
push
xchg
cs
jae
pop
jnp
mov
adc
mov
inc
mov
daa
outsb
repnz
pop
sub
add
add
mov
dec
or
cli
hlt
ret
cmpsl
push
inc
dec
adc
inc
dec
std
inc
pop
pop
jae
loop
xor
dec
sub
sbb
inc
fidivrl
jl
js
sbb
cltd
mov
push
aam
and
test
cwtl
mov
inc
rcrl
sub
cwtl
inc
bound
pop
pusha
xchg
push
xchg
add
outsl
js
inc
scas
fwait
sub
lods
insl
iret
or
mov
stos
inc
enter
cld
fcoms
mov
enter
push
mov
lahf
fcoms
fwait
mov
push
fwait
push
fwait
add
test
leave
gs
jle
aaa
mov
xor
xor
scas
ret
jge
das
cmp
cmp
sub
adc
jnp
cltd
dec
pop
incl
cld
ja
xor
lods
bound
sbb
jns
sub
loopne
mov
insb
push
nop
pop
mov
popf
push
aad
fistpl
pop
insb
push
clc
or
ljmp
add
ror
inc
aaa
push
test
pop
pop
jmp
testb
mov
push
and
pop
xchg
outsb
es
xchg
pop
xchg
and
add
out
mov
sub
sti
add
dec
add
out
adc
pop
ss
icebp
bound
arpl
lock
pop
or
xchg
popf
cmp
out
arpl
sub
rcrb
js
xor
xchg
pop
xchg
lcall
out
jns
outsb
pop
mov
sbb
mov
cmp
stc
add
cmp
push
faddl
stos
push
mov
mov
ret
lcall
into
sub
mov
lock
or
sub
sub
test
sahf
and
and
mov
pop
sbb
lahf
loope
das
mov
pop
nop
lds
or
mov
jbe
push
scas
bound
cltd
jmp
and
push
push
imul
sbb
notl
mov
push
adc
and
adc
jne
outsb
repz
push
scas
or
pop
adc
aas
out
test
out
loopne
imul
cld
lret
icebp
cmp
cld
mov
or
test
lods
addb
shrl
daa
dec
jle
sahf
xchg
jo
and
jl
fstpt
add
es
test
mov
pop
je
and
pop
js
imul
imul
popa
or
jno
sbbb
inc
add
or
pop
dec
xchg
stc
push
loope
inc
pop
fiaddl
push
push
cmp
mov
dec
aas
incl
mov
mov
popf
lcall
push
mov
lods
mov
xor
xchg
sbb
out
iret
mov
movsl
call
scas
sub
mov
lcall
xchg
jmp
inc
or
imul
cmp
loopne
pop
subb
push
dec
daa
mulb
jp
imulb
popf
xlat
pop
jle
xor
ds
sbb
xor
into
mov
push
pop
ss
fcmovu
test
xchg
add
mov
pop
add
daa
test
aam
adc
mov
pop
out
inc
jp
jg
xchg
cmp
loope
loop
sbb
aam
mov
push
push
cs
push
dec
cmp
mov
in
outsl
rcrl
pop
mov
mov
int3
mov
aam
aad
adc
push
int
jno
jmp
xchg
test
inc
inc
dec
or
stos
out
ret
loopne
insb
and
lahf
mov
cs
adc
ss
enter
sbb
add
sti
mov
mov
push
imul
sub
xchg
imul
and
mov
push
stc
incl
sti
aad
iret
icebp
or
pop
je
hlt
jno
or
adc
xchg
stos
repz
mov
xchg
nop
loope
into
and
cltd
or
pusha
sub
sbb
sub
mov
std
test
pop
or
outsl
fucomp
dec
out
fwait
cmp
pop
cs
sbb
repnz
jno
loopne
mov
mov
movsl
jl
shl
push
cltd
out
mov
pop
xor
inc
lcall
hlt
icebp
stos
dec
cmpsl
cmp
stos
jne
xchg
jae
sahf
inc
lock
push
stc
cmp
jb
xchg
adc
inc
push
lods
shl
adc
pop
clc
mov
dec
in
push
lahf
sbb
add
pop
nop
mov
pop
ret
inc
lds
int3
cmp
and
adc
mov
ret
dec
lret
jne
cmpsl
mov
jae
jns
xchg
jl
mov
cmpsl
push
in
mov
push
pop
jmp
pop
rcr
in
ds
xor
rorb
mov
add
out
sbb
cmpsb
lock
sub
mov
fs
mov
sbb
movl
jbe
loopne
push
xchg
adc
dec
dec
xchg
add
ret
ffreep
sub
lea
cmp
inc
jle
sub
lsl
in
mov
xchg
loop
mov
fcomps
jl
movsl
movb
cltd
dec
mov
xchg
dec
neg
daa
mov
movsl
xchg
xchg
and
out
add
fs
push
sahf
xor
leave
and
sbb
inc
pushfw
adc
adc
push
sub
sub
jb
test
mov
inc
mov
mov
lcall
pop
rolb
dec
adc
cld
add
lea
je
lea
icebp
jae
xor
cmp
jp
std
or
xchg
int3
add
into
pop
xchg
xor
imul
fcmovnbe
xor
cmpsl
cld
shl
cmpsl
pop
mov
stc
out
imul
pushf
push
pop
sub
pop
jb
and
or
lods
data16
xchg
ja
scas
push
sub
add
orb
ss
mov
movsl
xor
mov
xor
fsubrs
inc
in
loop
fwait
jecxz
push
xor
icebp
lods
sub
inc
jmp
es
mov
in
testl
mov
cmpb
out
shlb
outsl
insb
cmp
and
daa
cmp
sbb
movsb
lret
xor
repz
mov
shrb
mov
aaa
cld
aam
add
hlt
lahf
jmp
call
add
rorb
out
test
sub
push
das
mov
jl
dec
jne
test
or
jmp
pop
stc
xchg
stos
xchg
fmull
fstpl
fldt
aam
adc
test
out
outsl
cld
mov
push
push
inc
fcmovne
sub
cld
pop
mov
push
cmp
mov
fistl
sbb
jecxz
push
dec
fisttps
ret
add
mov
sbb
cwtl
jl
fs
cmpsb
pop
fistpl
sub
inc
sub
or
das
addr16
mov
cmp
cli
clc
loopne
sub
out
xchg
adc
mov
mov
xchg
outsb
inc
fs
xor
pusha
mov
ljmp
mov
repnz
sbb
mov
and
sahf
adc
out
das
pop
ja
rcrl
lcall
cmp
in
fsubrp
add
lret
add
inc
scas
jb
push
xlat
push
cmpsl
repz
pop
add
movsb
lret
lahf
cmpsl
add
mov
adc
dec
lret
std
push
xchg
outsb
fdivr
leave
push
dec
push
push
fistpll
fdivs
xor
fs
vandnpd
in
add
dec
icebp
pop
mulb
add
daa
repz
out
mov
xor
cs
pop
or
lahf
imul
fidivl
mov
mov
das
test
inc
add
fsts
test
out
pop
and
sahf
sbb
addr16
xchg
stc
arpl
add
cmp
lods
fidivrs
mov
ret
or
pop
mov
mov
xchg
movsl
imul
lods
imul
push
pushl
xchg
es
jl
xchg
inc
sbb
cmp
rcll
mov
adc
nop
pop
xchg
add
push
or
xchg
addb
cli
cld
pop
pop
enter
mov
ds
sti
enter
data16
push
adc
xor
cmc
jecxz
clc
imul
imulb
push
movsb
mov
fst
dec
mov
xor
movsl
mov
inc
fcomps
cmp
divl
mov
mov
in
inc
daa
int
mov
dec
stos
pop
scas
scas
sub
jmp
imul
in
push
mov
mov
iret
dec
cmpsb
jmp
pop
push
xchg
mov
xchg
ret
xchg
push
pop
inc
mov
test
test
ror
jne
push
xchg
jecxz
xchg
push
lds
pop
xchg
pop
xchg
mov
test
stos
gs
mov
mov
jb
inc
xchg
pop
in
stc
and
dec
jae
in
xchg
in
movsl
imul
aad
pop
xchg
repnz
bound
xchg
mov
repnz
aas
mov
mov
icebp
lods
xorl
lret
inc
lds
and
jl
sub
cmp
cmp
gs
mov
and
mov
dec
jbe
push
pop
mov
cmp
fisubrl
lds
clc
pop
push
movsl
ljmp
movsl
ljmp
and
orl
pusha
sarb
adc
sti
sub
mov
lret
xchg
dec
jmp
sbb
popa
mov
and
xor
es
cmpsl
mov
sub
cmpsb
cs
push
test
pop
adc
xchg
xor
out
fldl
into
adc
scas
hlt
cs
xor
push
cmp
inc
xor
pop
push
add
call
adc
fldt
stos
push
out
pop
push
popa
cmp
inc
mov
fildll
push
cmpsb
jmp
fsubs
mov
sbb
lcall
int3
push
push
cmp
roll
int
and
lods
sub
xchg
sbb
test
js
addr16
jmp
pop
mov
faddl
cld
jge
mov
xchg
test
pop
clc
xchg
adc
push
push
pop
negb
push
in
and
dec
lcall
inc
stc
fcomi
hlt
and
mov
cltd
movsb
sub
mov
pop
shl
aaa
and
cwtl
pop
mov
sbb
dec
lods
repnz
cmp
push
negl
stc
dec
fnstsw
aaa
xor
call
fnsave
push
xor
add
rorl
cltd
cmp
fwait
call
xchg
out
and
in
and
push
pop
mov
push
int3
popf
sbb
insl
xchg
pusha
subb
iret
imul
dec
addl
cld
add
daa
cli
jl
dec
ja
mov
add
mov
add
mov
faddl
aas
sub
jle
fsubrl
mov
stos
dec
clc
mov
pop
mov
rolb
mov
add
int
mov
push
and
sbb
pop
movsb
jbe
shr
and
loopew
inc
test
sub
sbb
or
shr
push
inc
scas
out
scas
add
mov
icebp
push
cmpsb
inc
gs
xor
cli
mov
sbb
into
lock
mov
gs
add
fistl
fstpt
pop
shrl
add
repz
mov
clc
mov
pop
mov
jmp
pop
imul
imul
inc
lock
out
enter
loop
aam
lods
stos
adc
jle
cmpsl
inc
pop
xchg
xor
push
out
negb
mov
cmpsb
sbb
fcoms
loop
mov
sub
push
xchg
popa
xchg
lret
outsl
aas
add
push
jecxz
xor
pushf
adc
loope
pop
pop
cmp
outsl
scas
aam
pop
lret
jecxz
mov
aaa
and
lea
into
sarl
jo
andl
dec
shll
xchg
push
lods
sbb
arpl
push
jnp
scas
fucom
lret
adc
test
pop
repnz
out
loopne
int3
xchg
ror
pop
cs
sbb
xchg
je
add
mov
xor
iret
scas
les
sbb
jo
das
loope
sbb
pop
aaa
xchg
insl
push
fsubs
js
test
mov
repnz
xor
pop
cld
mov
jge
push
mov
mov
je
sbb
mov
xchg
repz
into
or
rolb
mov
pop
subb
xchg
frstor
jmp
jmp
xor
push
js
mov
mov
fcmovnbe
mov
sbb
lret
mov
jb
and
out
mov
loopne
ja
push
inc
enter
loopne
int3
pop
cmp
pop
cmp
into
xchg
inc
popf
jnp
dec
add
bound
lods
add
int
int
mov
add
or
mov
scas
repnz
sub
jae
push
movsb
mov
lcall
shlb
arpl
mov
or
mov
insb
xchg
cmp
dec
jp
jne
mov
cmp
imul
shrb
into
lods
lret
sbb
ss
aaa
insl
int
jle
shlb
movsb
and
jbe
mov
sbbb
ljmp
adc
pop
jecxz
cmp
fsts
data16
push
nop
push
test
pop
pushf
scas
push
cmp
jae
leave
outsb
repnz
fnstcw
mov
mulb
or
movsl
mov
ds
das
out
jae
scas
jb
dec
cld
dec
in
shlb
rcl
xchg
mov
jno
jmp
adc
xchg
jnp
adc
inc
jmp
in
sub
pop
gs
mov
jns
sub
lock
mov
jae
loop
cwtl
in
cmpl
imul
mov
cltd
inc
shlb
pop
in
pop
xchg
imul
and
mov
insb
jno
jnp
adc
mov
cltd
jnp
add
mov
in
imul
inc
xlat
sbb
cmp
popf
dec
pop
decl
mov
into
loopne
push
fstpt
jne
push
pop
xchg
pop
in
jns
sbbl
mov
rcrl
insl
jmp
out
xor
jmp
inc
js
jge
icebp
int3
mov
pop
lea
es
pusha
xchg
int3
cld
popf
dec
iret
push
cli
rorb
sub
adc
int
fxam
inc
inc
test
lock
mov
lahf
or
call
sbbl
push
jg
pop
addr16
popf
add
int3
mov
jmp
cmp
sbb
je
pop
or
jae
push
sub
pop
jl
sub
jecxz
mov
imul
xchg
sahf
aad
les
loope
or
sbb
sti
dec
and
es
nop
jge
or
lods
xchg
or
outsl
or
cmp
mov
sub
cmp
test
add
mov
inc
js
xlat
or
fwait
imul
fmuls
push
cmp
cmp
jecxz
or
lret
pop
push
in
mov
lds
roll
int
cmpsl
repz
mov
sqrtps
mov
popa
xor
mov
adc
sti
xchg
sbb
enter
stos
fwait
insb
and
je
imul
icebp
adc
aas
mov
dec
xchg
shlb
lock
jl
cmp
clc
sub
sub
addr16
subb
inc
pop
adc
mov
sahf
push
and
out
push
test
jmp
lcall
arpl
sub
adc
lret
sub
mov
mov
adc
pusha
in
lods
test
inc
bnd
jo
fdivrs
test
dec
xor
fdivrs
or
xchg
and
lea
hlt
sahf
xchg
pop
cmp
or
push
sbb
in
dec
push
xor
insb
shrb
xchg
in
subb
add
or
xchg
lock
inc
arpl
dec
or
fistl
pop
dec
outsl
mov
insb
mov
inc
movsl
mov
insb
fldl
sbb
cmp
mov
mov
push
sbb
lret
sub
lea
jecxz
add
cs
lea
outsb
xor
loop
stos
sbb
sub
dec
sub
cmp
pop
or
aas
loope
test
inc
aad
cwtl
cli
push
push
aas
out
or
mov
push
jge
pop
neg
xor
push
sbb
mov
loop
icebp
jbe
dec
subb
and
mov
stos
xor
lods
sbb
mov
jb
pop
mov
adc
leave
shr
sub
divl
loopne,pn
sbb
jne
adc
or
add
mov
hlt
fnstsw
div
mov
add
insb
inc
jg
and
adc
out
test
or
outsb
and
jbe
and
sub
int
dec
add
je
mov
fs
sub
or
xlat
push
jmp
xchg
fwait
out
add
das
and
fistps
rclb
aaa
fnstenv
and
stos
scas
cmpsl
xchg
push
inc
pop
jl
fs
icebp
pop
lods
push
cmp
call
gs
jp
outsl
int3
dec
mov
leave
movsl
mov
and
inc
inc
mov
loopne
jae
push
sub
mov
mov
pushf
test
mov
xchg
test
mov
testl
int3
jae
rclb
inc
movsl
sub
pushf
and
fwait
and
movsl
add
into
add
xchg
push
and
icebp
and
in
inc
icebp
inc
inc
lds
out
push
mov
push
fsubr
stos
sbb
inc
lods
ss
cld
iret
dec
and
bound
pushf
cmpsb
nop
push
add
imul
nop
insl
mov
test
sub
enter
es
xchg
xor
add
stc
test
mov
aas
popa
push
pop
arpl
in
jg
fisttpll
xchg
aas
adc
ds
inc
inc
mov
clc
movsl
out
cli
lahf
mov
mov
mov
dec
fisubrs
ja
add
and
call
lret
or
pop
inc
sahf
lds
adc
cpuid
adc
outsl
fidivl
roll
aaa
pushl
movhps
jns
xor
fstps
pop
sbb
jno
push
mov
in
xchg
data16
lret
fsts
scas
push
addl
push
movsl
mov
push
push
cmp
into
push
xor
stc
push
andl
shr
sub
push
fwait
cmp
push
push
dec
jle
icebp
mov
jp
mov
jo
nop
adc
call
das
mov
pop
cwtl
or
xchg
call
mov
pop
pusha
push
movsb
mov
mov
sub
pop
insl
add
aas
popl
aaa
ja
or
fisttpll
or
cltd
jge
popf
mov
dec
or
jbe
test
mov
dec
dec
das
out
clc
lret
jge
mov
push
push
push
inc
pusha
je
inc
in
push
mov
cmp
mov
cs
dec
jg
and
inc
cmp
cmp
adc
movsl
pop
mov
or
loope
push
fbld
outsb
icebp
and
aas
mov
pop
adc
sub
iret
mov
lcall
or
fidivrl
cld
jl
xchg
dec
mov
cld
dec
testl
or
call
lret
or
stos
mov
stc
cltd
movsb
inc
test
mov
adc
cld
mov
scas
cmpsl
pop
xor
cmpsl
pop
adc
add
add
subb
arpl
or
add
jecxz
rcr
pushf
std
mov
outsb
sub
aaa
and
and
xchg
jo
out
xor
cwtl
data16
cmp
sbb
adc
int3
insb
xlat
mov
mov
add
xchg
adc
add
jge
push
lahf
jne
adc
decb
add
dec
pop
xor
data16
fmuls
fists
stc
pop
mov
push
mov
pushf
xlat
daa
dec
je
or
or
xchg
dec
popa
in
les
adc
add
cmc
ret
iret
lret
cmpsb
push
xor
into
es
push
sub
pop
and
repnz
xor
cmpsl
lock
les
inc
aas
mov
psrlq
xchg
jnp
add
les
mov
pop
inc
leave
xor
movsb
mov
cmpsl
adc
jbe
fwait
push
mov
xchg
pushf
sub
cmp
mov
mov
outsb
sub
lahf
fmul
xor
and
xor
mov
ljmp
and
inc
xor
sbb
in
jp
loope
xor
call
xchg
lock
jmp
shlb
pusha
sbb
mov
sbb
add
cs
sub
fdivrs
mov
dec
flds
movsl
push
cwtl
jle
ficoml
ss
push
clc
inc
mov
mov
mov
cmp
shrb
mov
cld
movsb
not
fiaddl
add
mov
cmp
mov
shrb
in
pop
jle
out
xchg
insb
push
mov
dec
adc
test
in
out
fs
pop
xchg
mov
dec
shr
inc
cmp
or
ret
xor
push
rorl
mov
call
add
lods
out
xor
test
ja
pop
ficompl
cmc
mov
enter
push
nop
in
dec
xor
cmp
mov
sbb
int
jl
sbb
add
cltd
xor
test
les
mov
into
aam
pop
psrld
push
test
dec
aam
sahf
ljmp
dec
add
jnp
inc
mov
std
mov
pop
inc
mov
icebp
push
imul
aas
test
jle
jl
sbb
mov
arpl
sub
sub
mov
nop
sti
sub
dec
jg
stos
rcr
jae
js
sahf
cmp
les
js
xor
ja
push
add
pop
sub
lods
push
xor
mov
dec
test
scas
mov
dec
mov
xchg
sub
mov
sbb
sub
fldcw
and
stos
or
jnp
int
pop
mov
enter
movsb
pop
mov
imul
addl
mov
mov
lcall
test
xor
sbb
jmp
lret
inc
dec
stos
xor
fdivrs
add
aas
xor
xchg
out
incl
jmp
pop
subl
and
jl
push
rolb
inc
popa
out
mov
int
aad
jecxz,pn
xchg
cmp
push
or
mov
push
cwtl
and
and
into
cld
gs
push
mov
xor
push
lods
hlt
jbe
out
mov
adc
and
mov
dec
mov
addr16
daa
jno
mov
mov
cmp
outsl
or
and
jl
stos
aad
dec
in
and
loopne
jl
js
test
push
ret
push
cwtl
pop
fisubl
in
xor
imul
testb
jo
sub
jg
ss
jl
jmp
out
mov
imul
stc
aad
std
divb
hlt
push
push
xchg
cmp
mov
mov
sbb
lret
popf
xor
enter
xchg
xchg
jecxz
ljmpw
out
test
inc
pop
and
das
daa
sbb
sub
std
adc
jb
inc
cmp
arpl
adc
call
std
push
je
shl
jae
mov
andb
shrb
or
sti
jb
pop
or
mov
pop
xlat
inc
outsl
aad
fisubl
lcall
add
pop
aam
sub
push
frstor
addr16
loop
call
imulb
mov
ss
daa
idiv
gs
mov
aaa
std
test
outsb
adc
xchg
scas
or
jb
jnp,pn
lret
call
or
xor
cmp
or
loope
ret
and
fldcw
cmp
icebp
cmp
sbb
in
repnz
bound
lret
stc
pop
cltd
mov
jne
jmp
or
popf
lods
xchg
daa
push
shrl
aam
int
add
ficoml
push
push
sub
inc
lret
sbb
jb
sub
push
push
cli
outsb
cmpsb
jle
aad
arpl
sbb
xchg
push
add
xor
mov
mov
dec
loope
inc
lahf
lcall
inc
sub
pop
pop
cmpsl
ljmp
cmp
jecxz
mov
sbb
mov
lahf
ljmp
inc
add
testl
je
push
arpl
dec
mov
clc
fistpl
cltd
dec
sub
and
pop
and
pushf
outsl
push
adc
rcll
xchg
pop
pushf
fisttps
test
iret
sbb
jnp
lods
stos
and
mov
stos
loopne
jnp
cmpsl
fiadds
inc
mov
xchg
lods
dec
mov
fnstenv
jae
xchg
or
xor
and
rcrl
jae
cmc
xlat
jb
imul
or
rcr
lahf
ja
add
xchg
leave
leave
push
in
mov
mov
rorb
xlat
mov
mov
cwtl
js
pusha
ret
lahf
add
dec
pop
and
clc
inc
shrl
mov
add
xchg
push
ds
sbb
mov
mov
loopne
cmp
enter
repz
pop
out
es
cltd
jmp
adc
fmuls
clc
iret
mov
mov
cmp
out
mov
mov
dec
sub
int
xchg
out
icebp
ljmp
enter
mov
mov
jmp
fsubs
jle
testl
mov
inc
and
sarb
xchg
into
dec
leave
dec
and
mov
lret
cmp
dec
push
jns
out
dec
jne
aas
push
outsl
mov
in
add
imul
insl
or
je
ds
stos
xchg
sarb
mov
ficomps
std
dec
inc
test
mov
cs
pop
cs
lret
pop
jg
fcmovb
andb
cld
dec
addb
push
sbb
jns,pt
lcall
mov
mov
in
daa
mov
out
lock
icebp
fs
ja
dec
rcrl
cmp
inc
sbbl
into
addr16
fucomip
lds
add
and
incl
fisttpll
add
nop
dec
or
push
pop
jg
add
clc
roll
loop
ficoml
aad
mov
lods
push
in
lret
or
lods
add
cld
xchg
and
int3
ljmp
ds
pushf
jmp
push
loopne
push
imul
jp
xor
cltd
ss
xchg
and
jmp
xor
outsl
dec
dec
mov
nop
mov
leave
out
js
popf
scas
out
push
stos
and
insb
call
add
dec
fnclex
rorl
pop
std
inc
cmp
ja
inc
xchg
aas
push
fwait
inc
in
sub
insb
rclb
push
fadds
cwtl
addl
ret
out
or
xchg
icebp
lea
xchg
incl
adc
fwait
idivb
ret
in
pop
outsl
inc
jne
inc
mov
push
xchg
push
jne
and
inc
js
cmp
mov
jb
mov
mov
xlat
or
lret
inc
in
sbb
out
out
pop
std
leave
fmulp
mov
jns
and
into
movsb
jne
fwait
mov
xchg
aad
fildll
lret
popa
adc
test
or
and
ss
jg
loopne
addb
add
jbe
sbb
jb
out
or
push
sbb
inc
lahf
xchg
push
mov
xchg
adc
inc
xlat
jle
push
mov
mov
je
xchg
inc
cld
add
stc
outsl
scas
add
cltd
pusha
aas
into
movsb
push
test
gs
ret
and
mov
inc
xlat
das
addb
aaa
jle
int
pop
daa
orl
sub
pop
rorb
or
shlb
call
sbb
dec
inc
xchg
cltd
sbb
rcrb
cmpb
inc
lods
mov
loopne
jb
stos
clc
xor
fwait
loope
or
dec
in
mov
imul
add
das
mov
out
daa
cmp
mov
ja
bound
sahf
test
scas
xchg
cmp
aam
push
shll
stos
je
orb
push
cli
lods
out
aam
adc
insb
imull
sbb
outsb
ss
cmp
mov
jnp
xor
xchg
adc
lds
mov
fnstsw
stos
lret
js
mov
rcll
shlb
or
stc
ret
push
lods
gs
sti
repnz
push
fiadds
adc
mov
xchg
inc
ss
andb
jnp
into
and
fnsave
inc
les
push
daa
push
inc
fucomi
cmp
rcr
ja
mov
cmpsb
mov
or
fidivs
mov
lret
scas
mov
push
pop
les
jmp
push
ret
xlat
cmc
andb
shrl
pop
ret
in
jae
and
pop
jae
sub
imul
ds
sub
ret
cwtl
dec
jmp
daa
and
cmpsb
icebp
in
loopne
mov
xlat
cmp
jno
xor
dec
bound
xchg
flds
insl
addr16
cmp
and
scas
mov
xchg
cs
stos
fwait
rcl
add
in
mov
dec
mov
jp
jne
cltd
jmp
inc
inc
mov
xchg
mov
fwait
xchg
push
add
push
cli
add
pop
jb
xlat
test
sar
push
mov
sti
sbb
loopne
mov
push
adc
popf
sarb
lds
mov
mov
daa
pop
add
inc
fwait
push
jle
push
cmp
add
ret
shrl
add
fs
js
movl
cmc
mov
dec
mov
mov
or
xor
xchg
dec
dec
push
push
call
test
outsb
jmp
test
push
mov
cmp
lcall
and
add
mov
mov
lds
stc
in
lea
mov
inc
jg
test
cmp
inc
mov
js
ret
xchg
mov
cmp
sbb
inc
and
push
push
mov
popa
std
shlb
mov
sub
testb
add
gs
scas
jmp
ret
jg
inc
ja
cltd
pop
inc
outsb
cmpsl
shrl
xchg
ja
mov
stos
pop
cmc
sahf
call
xor
lret
mov
daa
idiv
arpl
inc
repnz
aas
mov
daa
dec
jge
sbb
ds
mov
xchg
mov
stc
inc
pop
aad
dec
push
arpl
mov
xor
shl
lret
ds
adcl
icebp
movsl
scas
jo
pop
pop
outsl
pop
orb
jmp
pop
sub
inc
stc
lcall
inc
lods
pop
aaa
push
sti
cmp
mov
pop
popf
adc
dec
jl
pop
xor
dec
mov
xchg
cli
cmp
sub
and
mov
adc
push
iret
lock
lods
filds
sbb
ljmp
leave
dec
jns
pop
jecxz
mov
fmull
mov
pop
inc
aam
out
adc
sbb
jg
mov
pop
cltd
dec
jl
imul
aam
xor
outsl
in
push
mov
add
and
dec
push
das
cmp
push
out
pushl
inc
pusha
das
cmp
sbb
lcall
xor
mov
inc
pop
pop
or
test
shlb
pop
xor
lea
xor
std
out
scas
movsl
xor
ljmp
inc
pop
jbe
or
cmp
sub
add
add
jp
ret
inc
mov
cltd
stc
add
repz
mov
icebp
sub
mov
xchg
xchg
ds
loopne
push
call
insb
cmp
in
jmp
xchg
pop
or
mov
das
pop
aam
jle
mov
dec
jne
xchg
in
xlat
add
push
xchg
and
rolb
push
test
mov
cmp
mov
push
lcall
fs
in
xor
dec
xchg
bnd
out
int3
out
mov
rcrl
adc
xchg
mov
adc
test
cwtl
xor
in
cmpsl
loopne
xchg
aad
lds
xlat
mov
rolb
daa
mov
mov
pop
fidivs
jno
lds
loopne
loop
sub
fmuls
sahf
adc
mov
or
into
pop
jne
push
leave
sub
pusha
jnp
adc
lea
or
jecxz
lea
inc
orl
or
xchg
or
stos
jg
sbb
pop
xchg
or
fwait
mov
adc
mov
or
rcll
sbb
dec
jmp
call
dec
lcall
inc
je
or
test
cmp
mov
or
inc
push
cmp
std
les
out
loopne
jbe
dec
mov
push
in
fwait
add
aaa
icebp
adc
push
xchg
stos
mov
mov
and
inc
fidivl
mov
mov
mov
call
outsb
lahf
cmp
in
mov
sarb
shrl
push
mov
inc
sub
shll
in
stc
push
dec
or
movsb
pusha
xchg
mov
cmp
int
dec
pop
outsl
cmp
dec
add
test
in
in
in
mov
ja
fs
add
xor
sub
xor
and
cmp
mov
sub
xchg
dec
sub
jle
out
arpl
jp
imul
or
notl
scas
in
movsb
sub
fmulp
or
mov
or
sbb
mov
pop
sbb
add
and
push
dec
sub
add
mov
add
test
aad
aad
nop
sahf
imul
scas
cmp
jg
sbb
clc
dec
faddl
or
lock
pushl
out
popa
rclb
loopne
inc
and
arpl
dec
pop
nop
mov
imul
sub
xor
pop
gs
gs
rclb
div
sbb
mov
lahf
and
lcall
mov
mov
or
imul
dec
pop
or
out
loop
mov
dec
jae,pn
xchg
xchg
es
or
lods
push
lret
dec
icebp
mov
mov
stc
fs
dec
loopne
sub
or
incl
pop
adc
cmpl
sbb
ret
outsl
jp
dec
out
add
pop
mov
cmp
mov
sar
loope
pushf
mov
lea
xchg
inc
out
insl
test
and
pushf
movsl
and
xor
pop
push
loopne
jb
pop
cmp
cli
lods
mov
adc
and
popa
jae
scas
jl
out
jecxz
pop
fnstcw
js
pop
dec
outsb
xchg
lret
cmp
adc
mov
mov
pop
fstp
mov
push
mov
outsl
icebp
dec
cmp
dec
mov
mov
aaa
sahf
jns
int3
push
jno
lret
mov
hlt
mov
es
out
or
std
push
inc
imul
push
xor
sbb
adc
jae
inc
mul
jnp
jne
xchg
lret
test
mov
mov
xchg
adc
outsl
push
inc
rorl
adc
xlat
or
sub
cld
and
mov
cwtl
push
jne
repnz
lcall
sub
push
loopne
enter
test
out
insb
js
pop
cmc
sbb
ljmp
push
shll
les
jge
es
xlat
mov
stc
jg
cmc
cmp
rorl
popa
outsl
das
out
push
rclb
xchg
stc
loop
push
cmc
xsaves
xchg
scas
outsl
in
sarb
sub
xor
cmp
xchg
test
rolb
insb
push
xchg
negb
insl
xor
dec
mov
stos
inc
cmc
ficoml
or
std
repz
jb
push
push
mov
jb
movsb
cwtl
jle
xchg
pop
lods
pusha
jmp
pop
xchg
mov
pop
arpl
mov
lods
pop
jmp
adc
jmp
sbb
add
mov
mov
adc
call
mov
and
or
fildll
mov
sbbb
sub
mov
push
dec
jne
into
fucomi
loope
mov
xorb
mov
in
mov
jg
outsl
inc
jmp
push
dec
test
imul
or
cmp
jns
test
dec
out
inc
lods
mov
jle
sbb
jo
cltd
mov
mov
dec
xor
mov
cmc
arpl
dec
icebp
js
dec
lret
movsl
xchg
in
in
sub
mov
aas
rol
leave
aad
xchg
cwtl
cmc
xor
pop
test
sti
cmpsl
adc
leave
jbe
xor
in
pusha
push
or
or
scas
sahf
xor
unpcklps
mov
or
dec
mov
or
dec
add
pop
cs
push
xchg
sbb
jmp
adc
push
adc
fisubrl
cli
add
pop
adc
push
inc
jnp
je
xor
adc
cli
push
cmp
popa
cld
cmp
jns
push
ja
push
mov
mov
cmp
push
or
inc
fsubs
fwait
xchg
call
sub
addr16
sti
out
mov
insl
movsb
orl
push
hlt
mov
mov
xor
aaa
xchg
jecxz
inc
push
xor
cmpsb
test
xor
cs
jmp
ja
cmpsl
out
and
es
mov
leave
mov
cs
jle
pop
sub
xor
aad
dec
call
xchg
rcr
push
push
ss
jecxz
adc
jle
pop
xor
push
dec
jo
jle
cmp
cltd
cmpsl
push
sub
xor
inc
dec
imul
add
or
icebp
shll
fdivrl
adc
addb
fbld
push
inc
mov
mov
fistps
shl
jmp
imul
test
push
cmp
repnz
pop
imul
je
loopw
leave
sbb
and
mov
aad
test
lods
outsl
add
loope
mov
push
add
xor
or
scas
shrb
jecxz
in
data16
in
outsl
aam
push
inc
dec
and
xchg
xchg
mov
xchg
add
repnz
cmc
mov
call
push
push
cwtl
scas
je
sbb
and
jbe
inc
repnz
insl
sbb
roll
push
sarl
jle
fimull
dec
jmp
insl
push
inc
jae
push
fadd
xor
mov
out
or
dec
adc
sbb
nop
out
aad
mov
cmp
les
pop
lret
add
movsl
pop
mov
sbb
movswl
or
cmp
jnp
sub
loopne
bound
pop
dec
loopne
pop
out
subb
out
outsb
out
popa
mov
cmc
cld
adc
add
test
mov
mov
nop
call
in
pop
xchg
mov
xchg
xchg
push
test
mov
ret
mov
rclb
push
fcompl
shl
pop
mov
int
add
out
ja
or
push
fiadds
add
ljmp
cmp
pushf
mov
clc
sbb
jmp
lea
xchg
jg
pop
jge
sar
mov
faddp
call
hlt
mov
and
sbb
or
inc
sbb
and
pushf
popf
jno
push
rcll
add
sbb
pop
or
add
fbstp
or
rcr
xorb
fs
mov
in
in
or
stos
scas
xchg
fidivrs
icebp
sbb
lods
mov
int3
in
sti
inc
sbb
lds
imul
scas
dec
mov
daa
or
repnz
xor
jmp
iret
sub
and
pushl
pop
int3
inc
repnz
sbb
aas
sbb
insb
arpl
mov
int
fisttps
pop
lret
jne
cmpl
subb
dec
cld
hlt
sti
cmp
fnclex
and
icebp
inc
add
lcall
sub
cld
lds
nop
lret
sub
shll
roll
xchg
lret
roll
lea
movsl
inc
mov
or
pushf
loopne
shr
pop
pop
adc
sahf
aad
jns
sbb
fmull
jne
mov
call
movsb
mov
lret
jg
xor
fildll
dec
sbb
pop
out
stos
cmc
add
and
and
sbb
cmp
xor
push
dec
sbb
xlat
js
and
jbe
xchg
cmp
dec
mov
test
add
adc
and
mov
jo
lcall
div
or
sahf
and
fmuls
jno
jp
sub
xor
loope
jecxz
jae
push
or
pusha
jmp
dec
repz
aas
aaa
jo
jae
push
pop
dec
jl
dec
fisubs
mov
push
add
outsl
mov
loopne
imul
sbb
fists
movsl
jecxz
sub
pushfw
rcrl
dec
mov
stc
adc
mov
das
rcrb
mov
imul
fists
mov
mov
mov
lret
cwtl
out
and
ds
dec
add
xor
daa
outsl
pop
ss
jb
mov
imul
rorb
mov
je
arpl
jne
out
aas
push
xlat
cld
inc
push
sub
inc
add
in
push
mov
add
sbb
lahf
das
cs
mov
xchg
mov
mov
out
mov
insl
int
inc
lock
imul
cmp
xchg
in
sbb
dec
mov
and
push
xchg
cmp
ds
inc
xchg
dec
push
nop
sarl
cmp
das
xchg
sub
xor
and
sar
stc
or
outsl
ss
je
dec
movsl
data16
popa
call
pop
int3
jle
mov
jl
mov
add
mov
sbb
sub
mov
and
pop
pop
cmp
in
test
mov
inc
test
push
inc
sub
adc
jg
dec
adc
insl
mov
and
xchg
xlat
add
fcmovu
jmp
imul
jp
sub
fwait
nopl
rcrb
iret
mov
imul
adc
push
xor
int3
arpl
push
ljmp
and
addl
or
mov
mov
inc
jb
cmc
lock
out
shlb
int3
dec
push
rol
push
push
xchg
stos
movsl
push
mov
or
ret
mov
jle
iret
gs
xor
lds
inc
sti
aaa
iret
pop
sbb
jne
movsb
in
dec
loop
xchg
jg
mov
fnstenv
pushf
lock
xchg
push
cwtl
sbb
idivl
test
inc
mov
sbb
adc
mov
adc
test
bound
mov
or
xchg
aaa
pop
jo
jbe
icebp
bound
jecxz
test
dec
jp
xchg
clc
or
pop
stos
punpckhbw
cmp
xchg
or
insl
das
sub
lds
fstpt
nop
jge
popf
jecxz
sti
cmc
out
arpl
inc
jbe
or
push
mov
and
vpmacsdql
jg
jno
fiadds
idiv
cli
inc
clc
and
dec
out
pop
xchg
fcmovnu
mov
dec
mov
insb
or
shlb
jg
xchg
mov
in
sbb
mul
arpl
mov
lret
bnd
lcall
dec
aas
or
daa
cmpsb
adc
dec
add
cwtl
push
adc
xlat
outsb
shl
xor
aas
mov
push
cmpsb
scas
out
push
movsb
outsl
js
or
data16
and
sub
mov
pop
pop
mov
icebp
xchg
cmc
sbb
loope
add
mov
jmp
xor
ss
cmp
pop
enter
mov
sti
add
mov
fisubl
popf
in
ficoms
daa
dec
dec
out
xor
push
xchg
lret
mov
loope
add
xchg
or
lock
repnz
clc
rcr
mov
inc
bound
sub
pop
mov
sbb
ds
xchg
scas
movsl
jp
rclb
dec
and
aam
loopne
jae
or
sbb
popf
jle
dec
mov
je
popf
ret
sahf
and
sbb
xor
pop
xor
xchg
adc
jecxz
repz
test
cmp
sub
ret
jbe
loopne
clc
mov
sub
bnd
into
out
std
push
inc
add
out
mov
lods
adc
ror
popf
mov
cmp
enter
mov
add
xchg
xlat
push
jmp
push
imul
or
out
sub
inc
jg
jp
inc
loopne
repnz
das
jmp
lock
ret
stc
or
fsubl
cmp
cmp
cmpsl
adc
push
add
mov
mov
into
loop
push
movsl
iret
popf
inc
pusha
loop
jle
pusha
sub
out
pop
push
xor
cmp
and
mov
xchg
jge
rcr
loopne,pt
pop
xor
push
mov
out
faddl
std
daa
push
push
cmp
push
mov
dec
xchg
sub
lahf
sbb
fmulp
aaa
jp
inc
adc
sbb
flds
jae
icebp
rclb
flds
movsl
sbb
jb
fimull
mov
inc
pop
mov
mov
cltd
mov
adc
jns
jae
rep
push
dec
mov
insl
mov
fs
pop
jb
repnz
sbb
aaa
mov
jns
push
addr16
fdivrp
sub
inc
repnz
inc
pop
dec
add
dec
stos
hlt
jge
out
xor
mov
or
pushf
jae
testl
negl
dec
push
pop
and
movsb
pusha
jo
ds
nop
mov
divl
ljmp
jnp
call
std
in
jg
cli
or
dec
or
in
fistps
adc
dec
inc
loope
and
popa
insl
out
mov
jp
aaa
sub
inc
shrl
or
sbb
movsl
jns
pop
jnp
xchg
or
or
cld
mov
adc
pop
and
data16
je
lahf
jo
push
test
fbstp
flds
xchg
add
test
out
push
divl
jb
fisubrs
mov
out
bound
or
inc
push
xchg
xchg
arpl
loopne
xchg
loope
xchg
sarl
pop
sahf
add
jp
outsl
sbbl
cmp
add
pusha
and
jp
fadd
leave
mov
push
loopne
dec
out
or
pop
mov
push
mov
sysenter
rcrl
aaa
test
jne
xchg
and
aam
pop
mov
repz
ret
inc
sbb
xor
das
xor
mov
inc
pusha
dec
pop
into
sbb
sbb
mov
inc
push
loopne
rolb
add
push
push
jecxz
out
push
mov
add
iret
icebp
mov
test
addr16
jp
pusha
cld
scas
cmp
mov
out
test
lret
push
jp
sbb
jbe
mov
out
fs
mov
fstpl
cmpsl
jecxz
jno
xor
aam
cmpsb
pop
adc
xor
jns
and
sub
rolb
and
xor
ja
dec
jge
or
adc
imul
jge
dec
adc
mov
mov
imul
adc
add
repz
lcall
pop
aam
stos
int
jbe
push
fidivrs
jno
jmp
clc
rcr
mov
ss
repz
fistps
idivl
out
mov
stos
mov
push
jne
out
mov
mov
cwtl
mov
jge
stc
nop
stos
xor
pushf
fldt
and
cltd
adc
iret
outsl
jge
push
xor
sub
int3
enter
add
pop
xchg
mov
sahf
mov
gs
dec
sub
das
cld
shll
add
sbb
out
les
testb
xchg
add
xor
scas
xor
and
jmp
or
xchg
mov
iret
shr
cmp
ds
aaa
push
sarl
xor
movsl
push
gs
scas
sub
mov
sbb
sahf
xchg
test
push
mov
push
adc
push
add
test
fnsave
mov
out
lods
clc
pushf
in
mov
fs
nop
sub
or
aad
cmp
out
pop
dec
jp
je
xchg
popa
jmp
mov
adc
xlat
push
pop
je
fimull
shlb
stos
cmp
lods
andb
ljmp
push
mov
and
adc
dec
pop
mov
test
aad
clc
pcmpeqw
mov
xchg
push
jle
push
ss
jmp
add
mov
pop
es
insb
shlb
mov
or
xchg
add
dec
mov
and
or
das
lods
das
les
push
mov
aad
pop
mov
adc
hlt
je
fists
pop
mov
sbb
iret
xchg
sbb
fisttpl
outsb
lahf
or
or
dec
and
lret
fldenv
cmp
sar
sbb
adc
rcrl
inc
cld
or
sar
testb
imul
push
push
add
testl
mov
pop
pushf
jg
orb
mov
mov
mov
xor
mov
iret
enter
dec
orl
imul
popf
das
stos
jmp
xor
adc
pop
fists
push
pop
popf
mov
jg
pop
mov
inc
aas
cltd
cmp
outsl
mov
gs
je
nop
cltd
mov
das
mov
gs
data16
xchg
clc
fisubl
pop
adc
jno
and
sbbl
daa
and
xchg
jmp
sub
mov
test
pop
dec
cmpsb
sbb
cmp
sub
sub
mov
xor
xchg
and
push
xor
cli
jo
inc
fcmovnu
and
jmp
mov
ljmp
cmp
lret
pop
aas
outsb
nop
fwait
xor
cltd
leave
mov
fldenv
sub
push
dec
cmc
push
into
imul
sbb
cmc
ret
cmpsl
lods
push
rorl
push
scas
lock
mov
push
xor
addr16
mull
mov
and
lahf
insl
sub
mov
icebp
push
pop
scas
inc
jb
inc
dec
pop
fnstcw
fiadds
mov
mov
sbb
jno
jno
cli
add
mov
in
mov
jecxz
mov
mov
cmp
mov
jl
out
jbe
and
mov
mov
dec
xor
jle
xor
fisttpl
stos
mov
or
lahf
sub
aam
cwtl
subb
sbb
sbb
ret
popf
ret
cwtl
or
sbb
es
inc
xchg
push
and
sahf
sbb
out
inc
jnp
xor
dec
xchg
fcomip
scas
adc
and
adc
mov
idivl
int
mov
mov
xor
dec
pusha
adc
in
xor
lahf
or
jns
mov
or
pop
cmp
ljmp
xor
xor
or
out
pop
mov
cmp
mov
mov
outsl
dec
add
int
daa
push
push
add
repnz
jmp
and
push
xchg
fiadds
ljmp
add
shll
xchg
jne
mov
inc
jecxz
shr
and
mov
adc
xchg
xor
stc
sahf
std
nop
sbb
daa
add
je
stos
mov
orb
aam
jg
lret
inc
and
jb
rcrb
sbb
jg
mov
aas
fcompl
addb
inc
xlat
jae
jno
vsubsd
and
sahf
pop
daa
sbb
divl
mov
arpl
jns
cwtl
xor
addr16
mov
inc
pop
aas
addr16
lret
mov
pop
ja
inc
arpl
push
loop
mov
stc
mov
out
fstl
out
aaa
sbb
cltd
push
dec
cmpsb
sbb
add
test
loope
mov
data16
pop
int
add
mov
adc
es
adc
fistl
out
xor
mov
aad
leave
pusha
dec
lods
push
pop
sbb
add
cmpsl
shlb
and
pop
and
cmp
loopne
add
out
pop
mov
imul
std
rcrb
push
mov
clc
cmp
push
test
mov
push
jmp
push
fidivs
mov
xor
nop
in
leave
js
fmull
lcall
mov
pop
iret
inc
fidivl
fsubrs
pusha
cmp
pop
sub
iret
js
push
fs
jp
push
cltd
cmp
xchg
cltd
inc
ret
fidivl
jg
int
inc
into
or
sub
xor
shl
add
xchg
ret
imul
dec
mov
aaa
mov
ret
lds
je
cmp
add
inc
pop
push
inc
sub
jg
push
adc
pop
mov
xchg
test
or
pop
arpl
test
mov
inc
mov
insl
aad
mov
lcall
out
mov
not
add
int
js
jl
ret
dec
mov
or
dec
es
aad
loopne
lods
out
dec
dec
add
jno
cli
out
je
sub
in
dec
insb
mov
pushf
lds
lds
xchg
arpl
lock
aas
and
and
pushf
pop
ds
xor
ds
or
adc
leave
xchg
push
and
pop
dec
in
outsb
loop
shrd
fcmovu
add
xchg
cltd
ja
sub
push
aaa
push
aad
dec
imul
push
sub
and
in
xchg
dec
add
push
adc
xchg
pop
mull
out
popf
xchg
fsubs
rorb
push
imul
aad
xlat
sbb
adc
inc
cmp
cli
adc
stos
add
rol
pop
imul
rcr
cmp
xchg
call
dec
popa
push
jl
mov
enter
sbb
fcomps
xor
fnstenv
cmpsl
dec
jns
scas
outsl
stos
fstps
push
int3
inc
adc
pop
idivb
xchg
push
adc
push
pop
add
aam
ret
test
test
xchg
jo
shl
push
mov
xchg
je
mulb
cmp
stc
mov
ss
test
push
mov
sbb
mov
sahf
lahf
xchg
lret
iret
lahf
mov
test
enter
or
in
fildl
or
sub
jo
push
xor
ror
push
xchg
loope
sub
pop
cli
sahf
fs
sub
outsb
das
nop
add
rcrl
push
jg
pop
movsb
push
sub
inc
imul
or
mov
adc
mov
xchg
pop
pop
adc
flds
jnp
jo
cmp
dec
cwtl
rcl
dec
mov
int
out
imul
jo
push
repz
mov
outsb
push
sub
cmp
mov
dec
xchg
add
fs
in
call
in
fs
movsb
cmpb
adc
movsl
mov
lcall
xor
mov
adc
arpl
xchg
fscale
fnsave
ret
rolb
and
pop
les
jmp
mov
mov
mov
inc
dec
adc
mov
cmp
mov
out
scas
aad
pop
cs
push
fisttps
inc
mov
sbb
dec
push
outsl
loopne
push
divl
jnp
cmp
rol
adc
jb
loope
dec
push
or
movsb
mov
mov
and
andl
mov
and
stos
and
enter
xchg
outsb
scas
mov
jns
cwtl
dec
adc
addl
and
pop
pop
and
imul
dec
out
testl
lock
fs
lods
inc
daa
icebp
inc
push
je
out
insl
daa
stc
jno
or
aam
sbb
lret
jl
pop
dec
lahf
fistps
adc
mov
out
pop
insl
data16
aas
xor
mov
cmp
pop
das
xchg
mov
insb
insb
mov
or
add
pop
sbb
pop
xchg
rclb
add
in
ljmp
fadds
lcall
pop
dec
and
icebp
jge
mov
data16
mov
sub
jo
dec
fwait
pop
xchg
xchg
mov
sbb
aas
push
xor
and
sbb
js
daa
subb
addr16
fbld
test
cld
addr16
out
loopne
repnz
fdivl
testb
loopne
in
mov
xchg
inc
jecxz
mov
ss
nop
push
xor
push
call
push
jo
mov
pusha
push
add
movl
std
icebp
subl
sub
jmp
out
or
jns
inc
adc
outsl
sub
sub
jp
call
testb
xchg
jg
in
push
xor
pop
decl
inc
xchg
mov
mov
loopne
lods
lods
cs
xchg
out
mov
cltd
dec
push
mov
sub
pop
out
dec
movsl
or
ss
xlat
cmp
dec
jne
inc
andb
iret
pop
ja
jle
dec
push
inc
jno
push
and
movl
insb
jmp
nop
sbb
shll
movsl
test
cltd
das
in
fcoml
sbb
lret
jno
and
adc
jl
into
jecxz
mov
adc
stos
adc
insl
dec
adc
std
inc
xchg
scas
outsb
adc
fwait
bound
pop
xor
jp
clc
add
xchg
outsl
sub
push
xchg
mov
xor
andl
js
insl
enter
xchg
fimuls
xor
or
ljmp
scas
push
sbb
push
jmp
sbb
sub
repnz
in
jg
mov
inc
mov
cli
xchg
repz
and
push
std
aam
inc
inc
cld
sahf
and
add
cmpb
xchg
cmpb
movsl
out
ss
mov
aas
jle
sarb
cmp
hlt
pushf
pop
adc
mov
xor
sub
or
lea
cmp
inc
dec
xor
cmp
jg
xor
pop
push
mov
mov
cmpsl
lret
and
mov
sbb
xchg
xchg
xchg
insb
pop
cmp
test
rorb
leave
and
mov
lahf
mov
sarl
xchg
packsswb
inc
adc
das
leave
rcrl
repz
daa
mov
push
insb
fldenv
loop
sbb
std
add
and
xchg
push
inc
loope
mov
fistpl
xchg
mov
mov
add
push
jecxz
jmp
dec
out
mov
dec
cmp
out
ljmp
mov
mov
mov
sahf
sbb
adc
adc
fstpl
or
popf
pushf
in
popa
inc
push
mov
add
nop
push
sub
cld
xchg
cmc
ja
inc
fadd
inc
mov
jno
dec
xchg
aas
and
xor
sub
or
inc
movsl
inc
mov
in
dec
xchg
in
enter
inc
es
popa
lock
fsubp
xchg
jge
lods
mov
mov
dec
sbb
js
sar
or
cmp
in
cs
sbbl
cmc
mov
pusha
inc
repz
test
ljmp
fsubrp
inc
push
xchg
xor
out
out
or
xor
ss
and
mov
xchg
ljmp
gs
sbb
leave
lds
inc
imul
aas
adc
out
lds
and
call
inc
adc
pusha
repz
and
sbb
lods
xor
push
ficoml
cmp
mov
fsts
jl
rorb
push
rol
or
loope
add
repnz
xchg
mov
inc
mov
jle
push
mov
in
rclb
push
dec
push
out
inc
fistps
lret
inc
cwtl
out
push
or
lods
in
xchg
or
mov
jecxz
les
aam
pop
setge
pop
std
pop
imul
lods
insb
fstl
outsb
scas
repnz
jno
and
pop
neg
stos
rclb
jno
push
lret
gs
mov
and
int
push
daa
das
fiadds
ja
lret
and
gs
jg
push
jns
cmc
pop
es
or
mov
popf
and
int3
mov
xor
dec
and
rorb
pusha
ss
clc
lds
pop
aas
pop
insb
xor
sbbl
popa
insb
mov
ret
xor
cli
mov
pop
sub
cli
mov
imul
pop
rcll
ss
mov
mov
mov
sub
loopne
or
sahf
gs
or
or
xor
push
sub
fmull
dec
jnp
clc
daa
fcoml
aad
pop
push
sbb
incb
ficomps
push
enter
add
lahf
push
les
loop
in
cmp
mov
ret
ljmp
dec
dec
sbb
dec
cwtl
dec
imul
mov
push
pop
xchg
jnp
movsb
mov
outsb
popa
out
pop
push
push
das
enter
dec
inc
sub
imull
fists
mov
inc
push
fdivs
loop
test
pop
lcall
xor
out
inc
sbb
cld
mov
aas
rcll
or
sbb
in
stc
dec
or
scas
mov
lret
sar
fcom
inc
loope
sarl
cmp
xchg
fucomi
cmp
insl
or
xchg
mov
or
lock
sub
lcall
cs
xchg
leave
ret
cmp
sub
or
xlat
inc
jbe
into
movsl
stos
fdivr
jno
sbb
push
dec
test
dec
fistps
and
cs
or
int
or
sbb
stos
or
sti
cli
push
jb
fmuls
shrl
xor
outsl
add
or
ss
or
adc
mov
xchg
jecxz
popl
cmpl
icebp
inc
dec
dec
inc
xchg
rolb
adc
cmovae
mov
call
mov
jle
mov
dec
xor
idivl
shll
inc
adc
cli
pushf
adc
pop
cli
and
jns
mov
out
rorb
lea
test
push
adc
jae
jnp
or
pop
call
mov
les
jmp
mov
stos
out
xor
leave
repnz
sti
push
add
xor
test
or
sbb
inc
test
jecxz
mov
fs
or
sbb
dec
insl
cmp
adc
or
jecxz
adc
xchg
xchg
test
ja
subl
pop
dec
mov
loopne
je
scas
outsl
test
cli
sub
repz
out
orb
sbb
stc
add
mov
add
arpl
mov
fcoms
xchg
sub
mov
ds
mov
sbbl
pop
dec
fwait
mov
xchg
repnz
xchg
incb
jg
cmp
jae
lock
ret
pushf
hlt
dec
push
das
popa
pop
sahf
mov
bound
loope
test
xchg
sahf
mov
je
loopne
dec
loop
cmpsb
in
fisubs
push
lods
lcall
add
ret
adc
adc
repz
cs
adc
mov
jg
mov
sbb
mov
subl
test
shr
dec
rorl
pop
repnz
ljmp
test
out
cmc
or
add
sarb
mov
stc
inc
cli
add
add
sub
sti
data16
mov
pop
xchg
or
ret
push
add
mov
nop
sbb
mov
dec
insb
xor
mov
stos
mov
addr16
in
jae
sbb
in
cmp
jg
int
lods
shrl
or
int
lods
xchg
jl
push
cmp
lahf
push
js
dec
add
in
pop
test
add
imul
xchg
mov
lea
std
pop
mov
cmp
lods
ret
xchg
jne
popa
scas
xor
cwtd
pop
inc
pop
lahf
hlt
mull
negl
mov
jmp
sub
mov
jnp
push
flds
mov
xor
ljmp
add
dec
mov
add
test
jno
sbb
mov
popa
fldenv
jle
push
jg
adc
dec
aam
mov
xchg
adc
inc
mov
cli
push
pop
int3
out
es
test
jae
lret
nop
repnz
mov
add
cltd
and
xor
jecxz
addr16
cmp
and
nop
sub
jg
scas
cmc
mov
jmp
jne
data16
sbb
push
in
stos
mov
mov
adc
fistl
push
pop
sub
imul
jg
or
and
lcall
pop
pop
lds
xor
mov
mov
push
std
lret
arpl
xchg
add
pop
stos
xor
shlb
imul
sbb
out
dec
sbb
mov
lret
sbb
fbld
lods
inc
mov
xchg
jne
std
adc
jne
push
aaa
pop
fistpll
mov
xchg
sub
push
stos
jo
mov
jmp
lea
je
in
jo
push
sbb
or
clc
push
sub
pop
sub
sub
cwtl
cmpsb
inc
xchg
movsl
mov
push
sahf
rcll
adc
pop
inc
leave
nop
add
jl
lcall
add
pop
test
lds
les
test
add
imul
mov
stos
or
dec
bnd
into
aam
sarb
movsb
adc
cmp
add
xor
addr16
dec
aam
movb
push
xor
sub
push
jbe
test
jno
mov
jle
or
movd
push
bound
mull
das
add
cs
addr16
mov
rcpps
cld
test
sti
jmp
push
inc
ret
adc
cltd
xchg
std
out
lcall
sarb
push
scas
add
mov
cmp
adc
adc
inc
dec
enter
mov
pop
add
rclb
je
pop
and
xorl
mov
lock
mov
psadbw
sbbl
js
fwait
in
inc
adc
orl
jle
push
hlt
aam
pop
xchg
mov
fimull
cltd
and
or
je
push
ja
pop
icebp
pop
je
inc
push
int3
enter
ljmp
mov
rcll
lcall
adc
jae
mov
pop
sbb
or
bound
mov
and
shll
jle
sar
pop
lcall
in
shrl
in
push
jl
lcall
cmp
add
cwtl
repnz
pushf
test
cmp
hlt
out
into
jle
std
jae
push
aaa
fs
adc
call
rolb
loope
adc
mov
add
int3
xor
jne
push
addr16
out
repz
das
xor
js
int3
ja
cld
sbb
adc
pop
leave
ds
rol
mov
xor
cmp
pop
xor
vmulpd
call
mov
mov
or
inc
out
sub
sub
inc
pop
aam
push
cwtl
sub
mov
xchg
inc
cmp
push
lds
loop
mov
cmp
cmp
xchg
int
push
fstpl
call
mov
decb
scas
test
xlat
or
xor
or
das
lret
xor
and
adc
jns
fldl
sub
push
int3
std
lahf
sbb
pushl
pop
stos
add
push
out
mov
dec
mov
mov
mov
xchg
pop
mov
fs
int
addr16
mov
stos
xor
outsl
pop
mov
dec
loopne
cmpl
int
in
inc
test
sub
fcoms
icebp
sbb
rorb
jns
push
jle
negb
out
or
popa
ret
mov
das
cmp
mov
fistps
lods
sbb
sub
xor
test
mov
leave
push
cmpsl
lock
mov
mov
fiaddl
data16
rorl
mov
push
ret
mov
and
mov
inc
loop
hlt
sub
inc
jmp
test
loopne
repnz
jo
aad
call
sub
adc
mov
add
fwait
adc
outsl
add
add
mov
mov
push
aaa
pop
lods
mov
mov
and
inc
fimull
cld
mov
inc
aaa
dec
add
sbb
add
inc
dec
cmp
mov
outsl
mov
sbb
mov
cs
xchg
inc
jmp
sub
dec
jnp
inc
std
jle
jg
sbb
push
jp
add
jge
dec
add
pop
jle
insb
cmp
aas
xor
cltd
popf
cmp
imul
lock
dec
fst
in
rcr
nop
sbb
jne
mov
pop
insb
jo
sahf
in
xchg
test
stc
dec
ds
arpl
push
inc
cmp
sbb
sbb
cltd
aam
pop
cltd
inc
mov
loopne
sub
incl
cmpsl
mov
push
jne
not
pushf
jg
out
insb
xchg
shr
cmp
jp
push
call
clc
inc
mov
cmp
cmp
imul
push
pop
push
inc
cltd
movsb
pushf
jns
lcall
pop
call
test
dec
movsl
xor
stos
fwait
shrb
nop
xor
cmc
call
daa
adc
and
mov
push
decb
imul
in
inc
mov
push
repz
or
mov
jns
push
cmp
repnz
out
shll
fsts
xchg
or
pop
mov
mov
fdivs
cmp
adc
sti
and
in
sti
sbb
mov
int
mov
pop
fwait
out
push
and
xor
hlt
repnz
dec
add
mov
dec
fstl
dec
ljmp
aaa
or
clc
or
dec
aas
sbb
push
lahf
repz
push
leave
cmp
sti
popa
scas
sbb
sbb
fsubp
xchg
dec
push
fs
jg
sbb
cmp
dec
fcoml
add
mov
adc
sbb
xor
popa
ja
dec
test
hlt
ror
mov
and
sub
ficompl
loop
mov
or
push
fidivs
mov
repnz
aas
or
push
nop
pop
into
adc
stos
outsb
inc
ss
cmp
adcl
mov
gs
pop
mov
pop
pop
mov
hlt
popl
loopne
or
call
loopne
dec
cmp
and
and
jle
sub
aam
mov
jns
test
adc
lods
fbstp
jns
scas
pushf
adc
loope
sbb
js
pop
mov
ja
mov
or
gs
add
mov
aas
leave
xchg
mov
lcall
test
mov
fdivrl
sbb
bound
sahf
mov
mov
inc
loope
test
xor
mov
ja
orl
sbb
in
sub
insl
push
ficoml
mov
dec
rolb
push
add
std
out
mov
sbb
cwtl
adc
mov
test
inc
mov
adc
outsl
and
cld
sbb
add
or
pop
inc
shlb
mov
xor
test
fs
shr
arpl
scas
push
lahf
inc
movsl
loopne
aad
lods
and
sbb
jecxz
xchg
movsl
adc
xor
xchg
mov
mov
out
push
addb
shrb
push
das
inc
loope
jmp
xor
das
xor
sub
push
stos
je
cmp
divl
cmc
fwait
jecxz
pusha
dec
sahf
out
sub
cmp
shrb
dec
imul
nop
ret
pop
fcomps
inc
mov
inc
mov
negl
cmp
negb
lds
jge
std
cmp
or
divb
jecxz
jne,pt
mov
xchg
cmp
add
jle
pop
jno
test
and
aad
ds
jno
mov
fisubs
push
xchg
mov
lock
ljmp
pop
arpl
loope
int3
and
xor
dec
jnp
mov
and
outsl
jp
filds
mov
leave
and
mov
cmpb
in
loop
daa
movsb
ret
or
repnz
clc
xor
sbb
sbb
mov
sahf
out
cmpsb
sub
aad
mov
add
fiadds
das
insl
in
iret
imul
rep
cmp
cld
into
in
frstor
push
pop
dec
ljmp
aad
jge
mov
jae
fstpl
mov
aam
dec
push
test
and
lret
cmp
imul
ret
add
and
cmp
xchg
mov
movsl
scas
jg
loopne
push
xchg
jge
in
sbb
icebp
mov
test
pop
fcmovu
arpl
add
int3
push
mov
jne
movl
jge
dec
xor
test
scas
xchg
jmp
xchg
leave
mov
mov
lods
and
int
pop
pusha
repnz
pop
lods
lahf
cld
xchg
sub
mov
das
mov
fidivl
and
es
pop
js
aaa
cmp
and
aam
mov
lea
cmp
fiaddl
ja
mov
call
add
cmp
xor
stc
fwait
test
lahf
fiadds
push
es
xchg
mov
ds
push
xor
jl
pop
jge
add
aad
out
push
add
xlat
inc
jl
or
ljmp
sub
pushf
loopne
cmpsb
sbb
imul
addr16
add
imul
xchg
mov
jnp
push
push
jne
jo
mov
imul
xor
dec
sub
and
jns
lds
and
xchg
das
es
xchg
xorb
or
insl
xchg
shll
push
or
insb
jb
and
lret
jne
and
repz
fmull
jl
popf
xchg
cltd
push
sti
dec
in
add
popa
xor
adc
adc
adc
sub
popf
adc
inc
pop
repnz
or
adc
dec
cltd
mov
les
cs
sub
lods
ret
mov
xchg
popa
add
out
mov
nop
loopne
shll
mov
sub
fsts
mov
and
jmp
iret
inc
xor
icebp
icebp
cmp
lds
mov
cltd
mov
bound
lds
mov
jle
nop
xor
pop
addb
rorl
or
mov
cmp
inc
inc
shl
ret
cmpsl
adc
fistl
aaa
push
hlt
int3
movsb
outsb
xchg
idivb
lret
jo
pushf
sub
cmp
xor
push
push
or
xchg
xchg
mov
jl
daa
inc
dec
and
test
mov
insl
ja
xor
push
fnsave
inc
xchg
mul
add
xchg
fadd
pop
outsb
push
in
les
mov
or
cmp
shlb
lea
inc
aam
and
icebp
repz
pop
rol
mov
jge
push
gs
cmc
fdivp
hlt
stos
sar
jae
mov
loope
ja
push
mov
mov
mov
cmp
shll
mov
adc
adc
jne
sub
pop
push
inc
mov
shrl
xchg
sbb
mov
jmp
pop
dec
dec
cli
fs
or
push
lds
mov
int
jbe
cmp
or
ret
cmp
jnp
pusha
dec
adc
mov
mov
dec
push
add
jae
cmp
cmp
cmp
sbb
push
jl
adc
ficomps
mov
xor
aad
sahf
pop
les
push
mov
xor
push
loop
test
xor
cmpsw
addb
add
lret
pop
add
or
xchg
cmp
repnz
mov
push
jg
dec
dec
cwtl
shrb
pop
inc
imul
sub
fimuls
jne
xor
lods
adc
je
mov
push
jle
push
cs
loopne
sarb
push
pop
ljmp
test
cmpsb
loope
inc
repz
out
or
and
add
movsb
fistpll
sub
mov
xchg
push
sbb
mov
pop
cmp
xchg
or
test
lods
xor
xchg
addr16
jl
popf
mov
lds
sbb
adc
daa
ror
add
stos
in
adc
jno
std
icebp
add
mov
sbb
ljmp
fs
adc
pop
shl
aas
and
push
aam
pop
aad
sub
xchg
jnp
cld
adc
fnstsw
and
shll
jmp
icebp
cmpsl
pop
mov
cld
dec
jp
ja
mov
jbe
sbb
ds
fsubs
dec
mov
sbb
cld
jmp
ret
rol
dec
dec
push
mov
icebp
inc
insl
xchg
arpl
shlb
push
aas
rorl
fs
jecxz
dec
dec
js
mov
dec
jg
jnp
add
lods
xchg
negb
test
icebp
ss
sbb
cs
lahf
loopne
push
or
dec
mov
popa
clc
popf
hlt
add
inc
pop
xchg
push
add
push
add
daa
pusha
push
flds
sbb
mov
pop
aas
lahf
cmp
sbb
jne
ljmp
mov
jno
ds
das
test
scas
sub
xor
mov
test
adc
jbe
xchg
mov
stc
aas
and
jno
xchg
sbb
inc
sbb
inc
push
mov
test
inc
mov
f2xm1
adc
fdivl
daa
mov
xchg
cltd
jns
and
sub
jns
ds
sbb
lea
mov
add
jg
dec
std
inc
mov
mov
xor
and
dec
test
sahf
in
inc
mulb
push
lods
dec
in
cmpsb
pop
loope
stc
mov
imul
daa
or
call
jns
push
mov
or
ret
sub
add
rcl
test
outsb
cmc
loopne
mov
aam
push
testl
xchg
inc
add
fisttps
loopne
lods
es
aas
cmpsb
push
mov
add
xchg
fimuls
jle
add
nop
mov
cs
rorb
movb
inc
mov
clc
lret
lcall
cwtl
pop
outsl
push
or
xchg
push
push
cmp
adc
bound
pop
or
loop
push
in
std
add
icebp
lret
push
inc
cli
mov
icebp
pusha
icebp
lret
dec
push
jecxz
cmpb
in
mov
out
mov
mov
mov
aam
sub
and
and
repnz
dec
insb
in
cmovs
sbb
mov
pop
test
stos
cmp
and
arpl
adc
faddl
sub
and
jns
stos
arpl
cmp
add
das
mov
into
xor
pop
xor
or
dec
leave
mov
adcb
add
dec
push
mov
dec
inc
in
insb
hlt
repnz
add
pop
pop
or
pusha
jo
xor
movsb
ds
fidivs
repnz
push
out
xor
mov
push
and
ret
sbb
jno
jo
ret
jge
gs
popf
dec
ja
xchg
jmp
xchg
push
add
mov
jl
jno
sub
adc
fcmove
and
and
ror
mov
pop
jle
ds
aad
ljmp
adc
daa
and
jg
jae
xor
xchg
fcoml
enter
jb
repz
jp
scas
imul
inc
je
fwait
and
js
mov
xor
clc
or
jne
pop
int
mov
push
xchg
and
fidivrl
jg
mov
int3
pop
mov
stos
into
sbb
cltd
js
aam
jns
adc
inc
aad
filds
mov
mov
push
fnstsw
pop
dec
or
and
mov
mov
movlps
sti
addr16
stos
loop
cmp
push
cmp
std
std
mov
aas
cs
imul
sbb
lock
push
or
in
icebp
mov
and
dec
clc
dec
shl
and
mov
dec
jbe
cmp
push
push
jno
bound
ds
ficomps
sbb
cmp
inc
push
dec
jecxz
fistps
test
icebp
jp
imul
pop
fsubs
test
fs
or
xor
gs
sbb
mov
mov
mov
cmp
adc
nop
inc
dec
xchg
in
inc
mov
and
and
push
arpl
popf
fs
inc
cmp
or
cmpsl
push
iret
std
jne
mov
mov
outsb
lea
xchg
xchg
sbb
out
repz
outsl
xchg
pop
adc
lcall
sbb
push
xchg
pop
addr16
add
sbb
cld
sbb
icebp
loop
stc
push
es
and
addb
pop
imul
enter
sub
mov
dec
repnz
mov
pop
pop
daa
pop
lahf
jns
inc
out
pop
out
clc
mov
jno
and
lret
icebp
xchg
jo
push
cwtl
jle
leave
pop
les
lcall
jle
hlt
pop
mov
adc
and
out
and
subl
sbb
loop
push
mov
mov
jnp
lock
jb
ret
lret
lock
ret
inc
sub
mulb
mov
cmc
xchg
xchg
xchg
pop
fiadds
inc
test
mov
mov
sbb
ret
add
xchg
nop
mov
mov
das
mov
int
pop
mov
jecxz
xlat
add
dec
movsb
mov
mov
loope
sub
cmp
add
notb
pusha
enter
enter
leave
xor
adc
pop
scas
cmpsb
or
mov
sti
add
ljmp
lcall
iret
js
and
lds
xor
jb
fdiv
mov
addr16
lahf
inc
in
nop
or
cmc
fadds
mov
xorl
hlt
add
inc
gs
leave
or
out
push
mov
mov
scas
jge
dec
and
cmc
rcrb
test
clc
push
sub
xchg
ljmp
pop
movsl
add
lcall
or
fs
out
add
adc
outsb
call
stc
jg
sbb
imul
adc
fdiv
or
fcompl
pop
repz
movsl
movsb
mov
sahf
sbb
lcall
mov
ds
out
lret
push
jbe
cs
inc
lahf
jns
aaa
mov
lret
lcall
jmp
in
jge
inc
call
fs
and
call
adc
mov
mov
mov
cmp
push
cli
fdivs
inc
mov
lahf
lds
imul
lret
mov
std
cmp
mov
test
mov
cld
push
sbb
jmp
and
lds
aaa
or
int
rclb
std
test
test
xor
mov
pop
sbb
in
lods
inc
mov
jae
lret
ret
push
xchg
adc
sub
into
and
mov
add
cld
pop
dec
xchg
clc
jnp
jno
or
cmpsl
xor
mov
xchg
add
pusha
jne
ljmp
in
arpl
push
icebp
je
out
jg
hlt
insl
cmpsb
daa
std
rcll
jae
dec
sub
scas
in
pushf
aam
jg
pop
or
cmc
cmc
aam
lock
cmpsb
cmc
adc
shll
add
movsb
scas
in
in
add
xor
leave
les
sbb
jg
inc
loope
xor
or
out
dec
lcall
mulb
imulb
rolb
repnz
fwait
mov
sub
or
adc
in
pop
mov
cli
lcall
sub
sub
pop
ljmp
sti
sahf
test
sahf
fdivr
cmovnp
les
jmp
adc
inc
add
scas
loope
subb
sarb
jo
pop
push
rcll
dec
lds
test
and
xor
add
in
jecxz
or
mov
out
mov
stos
adc
mul
fwait
pop
sbb
xor
xabort
cwtl
mov
sbb
mov
cld
je
mov
lods
add
stos
subl
mov
adc
adc
pop
out
mov
xor
pop
enter
mov
cs
sub
repz
lds
adc
fsub
frstor
das
add
lret
add
or
jns
pop
lock
mov
out
outsb
mov
push
pop
pop
or
rcll
mov
mov
adc
xor
jecxz,pn
sbb
adcb
or
cmpsb
rep
fnstcw
cwtl
push
xchg
cmp
xchg
hlt
nop
testl
in
iret
mov
push
push
ljmp
scas
lods
stos
pop
rcrb
stos
vhsubps
sbb
xchg
bound
notl
jae
iret
push
xchg
stos
les
fnstsw
bound
cld
jp
clc
push
xchg
es
stos
push
test
inc
dec
ss
or
push
mov
adc
aad
add
mov
adc
jo
xchg
cltd
cmp
std
xchg
mov
pop
jne
dec
bound
jp
mov
lods
sbb
jl
sub
jne
dec
lds
xchg
into
dec
test
shlb
mov
sub
psubusb
mov
fmuls
scas
test
sbb
call
jo
bound
in
fldl
movsb
aam
lea
cmp
inc
sub
push
sbb
and
ffreep
je
sub
fmuls
dec
enter
in
mov
adc
imul
dec
cmc
cld
or
mov
cmpb
mov
int
pop
imull
stos
and
shlb
sahf
inc
stos
cld
xor
add
lock
loop
cwtl
aam
mov
pop
and
adc
fstps
retw
sbbl
std
xchg
lods
xor
adc
dec
pop
sbb
insl
mov
loop
and
les
mov
jne
mov
push
xor
and
push
adc
pop
popf
scas
loop
cmp
sub
andb
add
mov
daa
insl
idivl
sub
in
aad
mov
hlt
in
mov
mov
fadds
js
insb
jns
rep
xchg
andl
push
rorb
movsl
movsl
out
dec
xlat
movb
sub
lea
movsb
cltd
adc
movsb
fs
scas
cmp
inc
mov
icebp
jne
js
sti
or
inc
sbb
aad
fsubrl
inc
cmp
mov
aad
jbe
sub
add
and
fisubrl
add
cmpb
pop
out
mov
movsb
cmc
mov
mov
test
mov
repz
test
mov
inc
mov
bound
in
xchg
in
fistpl
jo
adc
sub
sbb
repnz
xlat
mov
dec
nop
cli
loope
lret
movsl
test
mov
jne
sbb
ffree
out
dec
pop
inc
test
cmp
jmp
not
inc
cs
push
test
test
cld
in
sbb
jo
aam
xlat
jns
enter
push
pop
adc
or
sbb
test
jmp
xor
mov
cwtl
dec
js
das
sbb
jmp
mov
addr16
lock
mov
and
je
std
aad
push
subl
jle
repz
or
xchg
ds
jb
call
aam
outsl
mov
and
xlat
or
xchg
out
sarb
sub
push
mov
jge
mov
sub
and
fdivrl
insl
dec
sbb
sbb
repz
outsl
inc
cmc
jl
xchg
inc
in
sahf
push
xor
sahf
mov
mov
pop
dec
or
jg
shlb
jle
or
fdivl
dec
xchg
add
push
mov
stos
cmpsb
or
jb
xor
inc
insl
jl
bound
adc
lcall
imul
lock
pop
scas
jmp
mov
sti
xchg
movsb
pop
daa
pop
and
mov
ss
imul
bound
les
gs
es
mov
aas
scas
loope
jb
stos
lret
rorb
xor
mov
cmp
cli
inc
sbb
or
push
test
aad
popf
inc
xchg
aaa
dec
ret
es
ds
daa
dec
and
lds
add
enter
mov
loope
ja
mov
stc
dec
das
lret
xor
xor
dec
popf
movsl
or
jo
xchg
ret
cmp
sar
adc
jp
sahf
mov
mov
scas
and
scas
ja
mov
jmp
sub
fbld
pop
ds
jecxz
popa
add
fisubl
jno
std
jecxz,pt
imul
rorb
pusha
bound
mov
out
xchg
mov
xor
jg
add
fs
add
pop
std
dec
pop
ss
pushl
mov
jo
cmp
pop
sbb
inc
push
adc
movsl
int3
in
cltd
cmp
pop
std
clc
jns
call
push
aad
lock
dec
xor
and
aas
pushf
inc
cld
mov
decb
js
sub
dec
push
xchg
ret
icebp
cmp
push
or
mov
xchg
xchg
jl
maskmovq
testl
loop
rcrb
test
enter
xorl
mov
mov
test
jmp
xchg
and
nop
insl
jnp
push
shrb
xor
out
xor
cmp
push
cld
push
mov
and
xchg
cwtl
sahf
inc
hlt
data16
lahf
jmp
mov
ja
sbb
sbb
nop
lret
jle
or
sar
les
cmpsl
out
and
pop
jo
pusha
fs
dec
andb
mov
stos
fwait
das
ret
aaa
add
xchg
lods
dec
mov
loopne
push
mov
outsb
fimuls
add
sahf
xor
push
lret
jecxz
sbb
add
adc
xor
pop
ret
mov
push
clc
xchg
cmc
std
push
dec
scas
jae
test
loop
inc
insb
jmp
xor
pop
or
out
pop
mov
jg
sti
sti
stc
loope
and
negl
pushf
mov
and
cmp
xor
adc
or
cmc
push
sti
jge
enter
imul
xchg
fsub
scas
fidivrl
or
cmc
xor
pop
cmp
imul
cs
push
push
mov
cmpsl
fidivl
add
mov
aaa
shlb
bound
insb
cwtl
jmp
insb
mov
fldcw
xchg
adc
call
repz
add
jge
push
push
outsb
fwait
scas
lock
outsl
xchg
lcall
mov
stc
in
or
mov
out
test
lcall
ljmp
jnp
mov
dec
outsb
lock
fists
stc
int3
dec
cmp
aad
ljmp
in
mov
les
sub
lock
roll
repz
cs
divb
jne
insb
mov
jbe
out
test
jg
sub
ror
jnp
push
mov
in
inc
mov
dec
repnz
dec
popa
inc
jmp
jo
jmp
push
mov
lods
sub
test
scas
pushf
daa
and
rcrb
pushf
outsl
dec
jp
cltd
dec
mov
pop
in
push
out
adc
add
add
add
add
sarb
jp
clc
and
inc
cmc
aas
pushf
out
adc
pop
push
ss
pusha
orps
fidivs
inc
fidivrs
or
mov
dec
adc
in
adc
xor
adc
test
dec
aam
xor
inc
enter
mov
pop
iret
cmp
xlat
insb
sub
leave
stos
jmp
inc
data16
push
movsl
movb
andl
mov
out
insb
popf
call
adc
in
and
push
out
jo
sub
mov
mov
and
fcomps
je
cs
mov
aas
cmp
mov
cmc
and
rcll
mov
call
insb
or
loop
in
test
ret
sbb
mov
cvttps2pi
dec
xchg
or
rolb
mov
dec
jnp
movb
cmpsb
push
mov
and
out
adc
pop
mov
dec
xchg
xchg
rolb
jnp
jns
leave
sbb
mov
hlt
or
push
sbb
lods
pop
int3
cmp
jecxz
and
je
mov
sub
xchg
xchg
add
xchg
dec
fidivs
test
nop
test
shll
adc
push
fwait
mov
enter
scas
loope
fdiv
xor
addb
pop
cmpsl
adc
lods
loopne
fcom
adc
mov
imul
push
sbb
inc
out
jg
andl
inc
aas
scas
mov
sub
add
sub
mov
aam
fistl
fs
ja
mov
fidivrs
scas
mov
ficompl
fisttpl
std
pushf
xchg
rcll
jnp
scas
negb
xor
and
mov
dec
inc
mov
adc
gs
shr
and
loope
in
jl
mov
jae
pop
sub
out
orl
int3
sti
inc
inc
and
add
pop
inc
inc
xchg
mov
mov
mov
mov
push
scas
inc
pushf
mov
pop
out
or
out
mov
cmp
jns
mov
lret
imul
js
mov
popf
pop
fwait
into
dec
jb
jge
jle
roll
insl
mov
arpl
ret
pop
sbb
test
bnd
inc
aaa
push
rclb
pop
scas
xor
stc
pop
cmp
sbb
fldt
jmp
sbb
repz
js
sysret
repnz
xchg
fcomps
dec
sub
out
fsubrl
mov
inc
xor
iret
ds
imul
and
xor
adc
lock
pop
in
movl
adcb
shl
mov
lock
xchg
jle
loop
or
sub
enter
mov
cmc
imul
add
adc
add
mov
adc
pushl
inc
inc
idiv
jmp
rorb
inc
jge
cmc
fisubrl
inc
pop
sbb
xorl
xchg
fidivrs
and
jno
push
ficomps
iret
pop
or
ss
or
pop
xor
sub
inc
push
sbb
push
fadd
mov
mov
lret
ret
adc
pop
lret
lds
fisubs
in
add
mov
iret
adc
pop
xor
or
mov
js
cmp
sub
mov
dec
sarb
mov
sbb
jl
mov
imul
push
cmp
or
fidivl
mov
inc
jg
in
mov
sub
mov
leave
push
dec
adc
cmp
out
lds
xchg
mov
and
sub
push
lret
push
scas
pop
cmpsb
and
into
rorb
jb
inc
inc
in
pop
test
xchg
adc
add
jge
imul
fwait
das
xchg
fnstenv
push
test
cmp
jmp
xchg
stos
bound
jnp
jbe
mov
neg
jmp
idivb
push
cmp
and
dec
jbe
xchg
out
inc
mov
shufps
sbb
mov
rcrl
test
pop
arpl
jb
jp
mov
ret
outsl
xchg
js
addr16
inc
mov
lahf
add
cmp
jle
mov
dec
lods
pop
in
negb
dec
jns
lds
mov
test
nop
lea
cs
mov
fildl
fisubrs
popa
sbb
call
push
push
fwait
inc
jno
xor
xchg
into
pop
pop
lods
repz
pop
pop
in
xchg
das
push
inc
or
jno
xchg
pop
aad
jg
shll
std
push
or
fwait
lret
jle
pop
pushf
iret
push
xor
mov
xchg
push
jg
mov
subl
adc
loope
sbb
je
jne
xor
jnp
sub
loop
hlt
jo
sahf
sbbl
sbb
pusha
mov
out
mov
xor
cmpsb
out
jne
out
leave
adc
sbb
push
and
fs
dec
testb
sarb
sub
les
std
dec
jg
pop
subb
orb
pop
stc
or
cmp
adc
xchg
inc
cmp
or
pop
inc
adc
cmp
int
xchg
mov
mov
inc
iret
inc
cmpl
lret
aaa
mov
lds
jmp
fs
pop
repnz
rol
mov
mov
stc
sarl
shll
dec
jne
stos
ret
pop
nop
and
mov
pop
mov
fistpll
pushf
adc
arpl
push
cmc
ret
xor
pop
add
test
addr16
in
aas
sbb
inc
mov
mov
lret
mov
outsb
rorl
jge
inc
mov
pop
jge
iret
adc
inc
test
add
out
mov
ljmp
push
mov
repnz
adc
mov
lock
adc
shl
mov
xchg
fsubs
sahf
cmp
pushf
shlb
ss
imul
sbbl
arpl
andnps
js
lcall
add
mov
cmp
xor
negl
js
mov
testl
aam
fstpl
jge
lds
pop
push
std
pop
insb
mov
in
hlt
cmpsl
xchg
ss
dec
aad
mov
stos
imul
dec
psubsw
ficoms
scas
mov
ja
mov
das
shlb
sbb
inc
mov
cmp
sub
fs
dec
int3
push
mov
orb
adc
lahf
push
aam
out
call
and
nop
addl
decb
jecxz
inc
pop
jne
lods
icebp
jmp
je
pop
fwait
arpl
adc
adc
add
fdivrs
outsb
out
scas
jo
stc
repnz
sti
out
ret
lds
mov
mov
ds
fisubl
jne
mov
sti
dec
jl
andl
enter
cltd
pop
sbb
mov
testl
arpl
out
lods
adc
and
jmp
cmp
jae
arpl
mov
inc
popa
ljmp
ljmp
jecxz
jge
sub
xor
loop
sbb
andl
xchg
enter
and
cvtdq2ps
jp
es
mov
mov
push
mov
mov
xor
cmp
xchg
sub
rorb
dec
xor
pop
andb
in
push
scas
jmp
testb
lds
call
lret
call
loop
sbb
and
dec
fdivr
test
sub
inc
insb
mov
orb
push
mov
mov
mov
jnp
sar
cmpsb
push
lahf
test
cmp
jne
nop
push
pop
mov
pop
mov
dec
out
lea
loop
inc
pushf
cmpsb
add
pop
ds
mov
repz
adc
and
cli
dec
in
mov
add
push
push
je
mov
pop
sti
mov
jnp
fsubs
or
sarb
dec
fldt
pop
test
outsb
sbb
stos
movsb
adc
mov
pop
xchg
call
daa
xor
les
push
xor
push
loope
adc
int
bound
push
inc
shll
rcl
add
adc
fldl
testl
push
and
sub
add
and
cmpsl
xchg
sbb
call
outsl
fdivp
popf
pop
imul
lock
dec
and
fldcw
mov
push
and
lret
jg
cwtl
adc
xchg
stc
xor
rolb
sbb
inc
and
pop
outsb
stc
iret
sub
adc
in
mov
push
repz
inc
js
push
addl
inc
and
fcmovb
cld
fisubs
adc
jae
orl
nop
push
cmpsb
daa
pop
pushl
jno
adc
and
pushf
mov
fldz
pop
andl
cli
pop
push
cmp
shlb
pop
hlt
push
es
add
pop
inc
xchg
jle,pn
jle
insl
cmpsl
mov
fidivrl
int3
dec
push
mov
insb
dec
mov
movsl
pop
inc
and
dec
or
xchg
rcrl
pop
sarb
cmp
or
std
sbbb
aas
cs
clc
add
cs
les
nop
xchg
or
andl
jnp
lock
in
inc
pop
rol
out
in
sbb
xchg
jo
mov
inc
cmp
lahf
mov
in
cltd
sbb
sti
adc
or
iret
das
and
fsubrl
or
cmp
inc
fmul
out
movsb
daa
data16
inc
add
sub
fwait
sub
loopne
sbbl
add
xor
xor
jb
ss
bound
inc
push
testl
sub
jne
pop
adcb
enter
fistpll
mov
cmp
orb
out
push
sbb
addr16
cli
es
pop
les
cmp
lods
je
rolb
js
ds
enter
fucom
adc
or
mov
out
pushf
jle
and
push
add
mov
popf
inc
inc
sbb
mov
add
sub
in
test
xor
inc
mov
add
mov
imul
mov
and
nop
adc
push
mov
test
ret
jecxz
mov
rcrb
pop
sbb
jge
push
pop
stos
fdivrs
cltd
loope
mov
fsubr
xlat
xlat
popa
push
std
fldenv
sbb
fwait
jmp
loope
xor
test
push
sub
loopne
sub
adc
ret
and
fcoms
mov
or
out
pop
adc
jle
mov
flds
pop
sbb
pop
add
cmpsl
in
addr16
test
frstor
subb
mov
pop
mov
mov
sub
gs
mov
lret
xchg
cmp
jmp
out
xchg
rcrb
push
mov
push
jecxz
mov
cmpsl
lds
xchg
ffreep
iret
in
jmp
cli
loopne
addr16
shll
repz
jg
jns
add
incb
mov
adcl
cmp
in
inc
lcall
sub
imul
ret
lds
movd
cmp
mov
aas
aas
add
sbb
insb
mov
mov
add
pop
adcb
je
mov
mov
mov
xor
pop
daa
jae
jp
cmp
aam
aam
pop
lcall
add
shlb
sub
xchg
lock
pop
xlat
imul
mulb
pop
stos
ss
add
add
mulb
adcl
aam
cmp
add
ss
rcr
sbbl
mov
iret
stos
popa
ret
out
sbb
and
add
inc
cs
lahf
sarl
les
dec
inc
add
lods
int
jbe
inc
pop
into
jb
in
xor
gs
repnz
jecxz
fisubrl
shll
cmpl
and
inc
out
lds
cmc
push
pop
mov
je
lahf
lcall
cmc
ror
cmp
movsb
movsb
movsb
loope
push
bound
repz
stos
mov
mov
dec
dec
fisubrs
out
xchg
sahf
pop
inc
adc
mov
movsb
xchg
mov
mov
hlt
inc
fbstp
jb
sbb
xchg
cmp
into
pushf
pop
in
mov
ljmp
sbb
fwait
jle
iret
or
imull
inc
fistpl
mov
lods
and
insl
mov
mov
lret
jmp
or
jae
adc
push
repz
xchg
jno
popf
cs
insl
shrl
xorl
pop
iret
ret
sub
xorb
mov
popf
ds
insb
and
shrb
out
mov
adc
cmc
add
cwtl
xor
mov
inc
in
fistps
js
sbb
add
imul
fwait
leave
mov
mov
or
cmpb
pop
jnp
mov
xchg
jmp
adc
push
mov
out
ja
bound
push
imul
movsl
or
movsl
insb
popa
out
lods
sbb
xchg
mov
push
movsl
dec
pop
adc
retw
dec
sbb
rcrl
mov
je
jmp
mov
cmp
and
mov
inc
mov
or
add
cwtl
add
arpl
jno
or
fildll
fnstenv
rcl
mov
mov
add
sub
sbb
xchg
test
daa
scas
les
and
popf
cmc
jne
popf
jecxz
or
fcmovb
push
lret
js
jne
mov
inc
js
pop
andl
cltd
xor
dec
or
push
and
or
jmp
outsl
test
icebp
pushf
cmpsb
filds
in
xor
adc
sbb
push
push
jg
push
out
sbb
xchg
add
imul
xchg
test
pop
aam
fwait
mov
pop
mov
aaa
jnp
pop
jmp
lret
jl
jg
xchg
add
aam
bound
outsl
jnp
inc
mov
mov
jg
pop
mov
stc
addb
and
xlat
insb
pop
xor
jne
stos
and
pop
cmc
and
incb
pop
ss
hlt
sbb
jns
add
dec
orl
ja
cmp
lds
add
sarl
dec
adc
jl
enter
lret
leave
int
inc
lods
aad
in
dec
push
shld
inc
andl
fxch
out
xlat
outsb
mov
jb
jge
xchg
add
out
jp
dec
push
mov
cli
xor
scas
pushf
test
xchg
dec
out
hlt
sti
mov
nop
push
std
and
cltd
mov
into
es
xchg
test
pushl
rorl
lahf
dec
mov
aas
stos
xlat
mov
push
cmp
loop
or
in
inc
ss
mov
insb
mov
and
lods
shrl
shr
mov
jp
fucomip
test
testb
imul
insl
push
repz
cmp
out
test
mov
mov
sub
shrb
jecxz
adc
lea
jmp
js
loopne
pop
loop
mov
cmc
ret
or
mov
xlat
xor
cmp
std
subl
sub
repnz
push
mov
dec
adc
pop
test
sahf
push
arpl
pop
pop
lock
sbb
popf
and
jg
pop
jo
sub
push
push
adc
lcall
clc
fstpt
inc
imul
adc
filds
mov
pop
hlt
cmpl
push
movsl
mov
or
jno
cwtl
scas
lret
jne
addr16
push
inc
test
cmp
cmp
push
dec
mov
lea
mov
es
ds
mov
mov
popf
insl
in
out
mov
add
push
fisttps
repz
cvtdq2ps
add
sbb
mov
jne
test
sub
std
test
mov
cmc
pop
cli
xchg
cld
xchg
mov
push
jnp
jb
hlt
adc
push
pop
jno
repz
dec
stos
mov
xchg
in
arpl
inc
inc
and
orb
lds
loope
icebp
call
mov
enter
jnp
ffreep
dec
jno
jge
pop
daa
xor
dec
pop
mov
addb
mov
mov
and
lcall
dec
push
dec
hlt
or
pop
push
sbb
xchg
adc
inc
push
icebp
fs
or
inc
mov
sub
jbe
jecxz
adc
pop
scas
cli
scas
add
in
adc
ret
sbb
or
clc
jo
add
fsts
add
and
adc
adc
pop
out
sbb
sahf
jb
adc
test
ljmp
pop
nop
in
xchg
pop
mov
jns
lods
jp
inc
lea
pusha
aad
lods
dec
pop
rolb
ljmp
fstps
dec
push
pusha
mov
int
shl
xchg
inc
movsb
jecxz
mov
cmp
pop
push
mov
inc
mov
push
add
leave
mov
fildl
imul
out
xor
sbb
daa
push
imul
sbb
loop
pushf
data16
out
sub
stos
test
mov
push
push
xor
lret
adc
pop
cmp
loopne
mov
ficomps
inc
loopne
jg
xchg
pop
xchg
cmpsb
push
lods
or
adc
xor
lret
cli
jnp
in
add
jmp
inc
jnp
push
ds
outsl
inc
sahf
jg
rolb
out
push
push
push
cltd
add
into
pushf
jl
lret
sti
das
xchg
xor
xlat
cs
mov
jp
fstl
idivb
in
sti
cmpsl
iret
xorl
in
ds
roll
mov
enter
jbe
cs
mov
fs
aam
lea
movsb
or
push
jno
lahf
subb
xor
scas
fucomip
les
cmc
xor
lds
outsl
insl
popf
out
push
fidivl
orl
sarl
sub
adc
cwtl
or
test
inc
mov
pop
test
jno
fsubrl
out
jecxz
mov
inc
mov
lea
loop
adc
outsb
cs
adc
stos
and
pop
push
pop
cmp
pusha
stos
fldenv
jge
and
outsl
xor
pop
jae
and
lcall
mov
and
test
mov
pop
inc
lea
shr
push
ret
jle
aam
add
inc
mov
jl
pop
bnd
inc
sbb
scas
add
and
mov
test
clc
or
xor
lcall
sti
push
test
xor
subb
cld
aas
fsubl
hlt
push
adc
cmc
inc
sahf
loopne
out
into
push
xchg
add
int
lock
sub
inc
outsl
mov
in
insb
jge
dec
push
push
stos
jl
mov
flds
test
and
test
adc
dec
jge
in
sub
dec
jo
cmp
lret
imul
and
loope
test
fucomi
movsl
xlat
jmp
fnstcw
push
add
rclb
sar
loop
xchg
jo
cmp
popf
xor
sti
mov
adc
bound
sub
mov
xchg
arpl
dec
ljmp
and
cmp
sarl
pop
lea
call
inc
fs
add
push
sbb
mov
xchg
cmp
ret
inc
ljmp
or
fnstsw
stos
pop
shl
xorb
sbb
push
mov
scas
push
out
jae
xor
sbb
sbb
sbb
push
sahf
aaa
scas
jge
xlat
sub
dec
xor
inc
data16
shll
insl
les
xchg
ret
push
cmp
arpl
cmp
dec
nop
push
xchg
repnz
push
ljmp
pop
in
xor
sub
cli
fnsave
jecxz
mov
sub
pop
jge
test
fnstcw
aaa
pop
repz
insb
jnp
inc
es
cmp
jno
repz
mov
inc
push
xor
lcall
or
ja
inc
add
imul
loop
les
lea
movsl
inc
bound
daa
sbb
adc
push
dec
mov
xabort
scas
loope
pusha
pop
in
out
fs
fidivs
movsb
test
fisubrs
andb
mov
pop
dec
lods
ljmp
cs
jle
lods
xor
cmp
xor
pop
and
popa
stc
mov
dec
sahf
cwtl
nop
sub
clc
jb
sbb
in
add
in
xchg
xor
sbb
out
sbb
xchg
jmp
xor
pop
dec
fisubs
sbb
inc
insl
push
add
inc
loopne
scas
adc
into
shll
mov
test
add
inc
cmpsl
cmp
inc
in
sub
add
mov
int3
shl
in
and
pop
mov
or
xchg
and
sahf
xchg
or
cmp
sub
pushf
dec
push
movswl
jae
mov
notl
or
fnsave
movsl
stos
mov
dec
push
and
fldenv
icebp
or
dec
fdivp
mov
dec
fs
sub
or
inc
mov
lret
cmp
cmpsl
out
mov
inc
mov
dec
data16
cmpsl
test
mov
adc
mov
push
mov
mov
dec
push
push
fists
lret
jle
jne
imul
mov
pop
insb
xor
in
pop
pop
lock
arpl
in
fstpt
cmp
shrl
fcmovbe
push
mov
outsb
cmpsb
stc
enter
mov
test
jbe
dec
gs
inc
sub
xchg
shlb
lods
adc
shll
pop
or
jl
das
lret
popf
pop
mov
sbb
iret
inc
popa
in
loope
cmpsl
adc
push
xchg
xor
sbb
push
inc
jbe
dec
fstpl
or
add
jge
lods
out
or
or
pushf
or
lret
xchg
jne
ljmp
inc
loop
pop
jb
push
shll
jmp
cmpsl
fs
sub
cmc
adc
nop
out
data16
sbb
fcmovnbe
xchg
fnstenv
pop
cmp
fs
adc
push
jbe
adc
hlt
jl
clc
dec
sbb
mov
mov
icebp
mov
pop
cmp
xor
std
adc
adc
pushf
xor
rorb
int
lea
push
dec
xor
ljmp
aas
xchg
mov
and
pop
cli
adcb
pop
ss
xor
add
inc
cld
test
sub
enter
pop
add
add
insb
push
test
dec
xchg
add
insl
xchg
call
pop
sub
xor
sub
cltd
out
int3
mov
dec
pop
in
jg
prefetch
test
mov
loopne
icebp
jle
shlb
pop
jmp
in
dec
push
xchg
add
mov
dec
aaa
insb
sbb
adc
push
sbb
xlat
out
popa
outsl
push
gs
add
test
test
jbe
sbb
cli
dec
lcall
jns
dec
jae
mov
xor
cmp
jo
dec
pop
bswap
xor
nop
and
xchg
adc
and
imul
scas
jg
fcoms
jmp
lret
mov
bound
mov
mov
fsubl
sbb
decl
out
outsb
scas
mov
fldl2e
cmc
push
or
jp
mov
addb
xor
xchg
add
mov
adc
or
lcall
bound
jb
stos
iret
mov
push
pop
inc
jle
pop
movsl
insl
cmp
popf
add
mov
je
test
in
imul
sahf
xchg
sub
inc
cmp
inc
mov
insl
mov
lret
outsl
mov
stc
cs
in
mov
jae
insb
adc
das
mov
rolb
push
push
push
dec
mov
mov
xchg
pop
jnp
add
cs
mov
ja
aaa
mov
movsl
lea
pusha
mov
jl
ret
icebp
and
sbb
notl
mov
arpl
outsl
pop
xchg
fmulp
incl
push
mov
sub
xchg
add
push
inc
push
push
ficoml
mov
aad
out
mov
dec
adc
sub
lahf
add
pop
sbb
inc
inc
insl
scas
mov
and
lods
jo
je
out
add
adc
shll
int
fwait
or
ror
mov
lds
cmp
outsb
jns
mov
sub
mov
into
sbb
pop
shlb
lea
data16
loop
insl
imul
mov
incb
and
and
xchg
pusha
sbb
repz
mov
mov
ljmp
into
incb
adc
and
ss
inc
repz
push
push
cmp
or
insb
mov
lea
sub
push
loope
dec
sbb
add
das
js
sub
mov
clc
into
loop
out
into
cmpsb
xor
rcrb
adc
push
xor
mov
xor
or
test
mov
subb
pushf
icebp
push
jp
mulb
call
inc
cwtl
dec
rcll
loop
stos
les
stos
inc
pop
rorb
cld
insl
arpl
add
es
cmp
inc
pushf
adc
push
sub
mov
mov
ja
cwtl
flds
jno
mov
ss
push
inc
pusha
jge
leave
andl
rolb
fwait
mov
hlt
mov
fwait
test
loop
push
sub
fwait
lock
fcmovne
out
sbb
inc
or
xchg
cmpb
leave
sub
insl
popa
aaa
pop
mov
and
daa
popa
test
mov
pop
std
add
adc
or
addr16
call
addr16
adc
mov
mov
pop
xchg
jecxz
repz
bound
sub
sub
jmp
or
stc
cmp
or
xorl
push
or
jle
sarl
rcll
xor
incl
dec
add
pop
lea
mov
push
je
mov
add
ljmp
cltd
stc
test
xchg
neg
sbb
push
mov
dec
push
dec
xchg
pop
mov
fcoms
fildl
daa
xchg
js
sub
sub
xchg
fisttpl
sbb
adc
and
insb
sub
pop
push
xchg
stos
dec
push
mov
cmc
test
stos
std
xor
dec
sahf
imul
add
pop
mov
jle
push
stos
movsb
xor
outsb
int
int3
fimull
lods
cmp
bound
int
sub
jge
xor
push
lahf
push
repz
dec
add
push
jns
sbb
xor
in
dec
out
pop
jbe
jo
aaa
xor
dec
in
or
outsb
sti
out
movsl
pop
call
push
mov
and
xchg
lods
rorb
inc
lods
lcall
out
rcll
mov
adc
iret
ljmp
idivb
inc
push
pop
pop
xchg
and
insb
push
incb
aad
mov
xchg
popf
push
ret
cmc
xchg
dec
cld
aaa
dec
sub
in
jb
jns
sahf
test
rolb
rcr
shll
pop
rcrl
pop
cmovg
outsl
cmp
push
pop
sbb
mov
sbb
and
hlt
nop
cmp
leave
mov
call
push
sub
repz
ficompl
or
cmp
out
gs
jecxz
jbe,pn
aam
jo
mov
mov
cs
cmp
mov
jnp
sbb
push
mov
shl
iret
lcall
sub
sub
pop
xchg
loope
dec
mov
and
lret
js
adc
push
jo
bound
sbb
jmp
mov
shrb
cmp
or
adc
and
pop
scas
into
xchg
pop
jns
sbb
xchg
jge
fwait
je
imul
dec
movl
jnp
cmovp
mov
push
js
rclb
int3
popa
push
xchg
adc
add
mov
push
std
ja
xor
mov
ret
std
mov
jecxz
mov
and
dec
outsl
hlt
mov
pop
mov
sbbl
arpl
ret
sti
or
xlat
jns
mov
iret
movl
mov
push
jecxz
incl
int3
in
mov
and
dec
adc
and
dec
jbe
cmp
jp
idiv
cmp
rol
push
push
add
and
pop
pop
or
repz
in
mov
dec
jp
fstl
lea
mov
jns
jns
or
xchg
jbe
out
aas
sbb
ja
sub
pop
stos
mov
inc
push
and
filds
lret
and
stos
filds
stc
mov
adc
push
cltd
cmp
sub
inc
mov
inc
xor
push
dec
jge
and
lcall
loop
fdivrl
test
mov
pop
mov
in
cmpsb
cmpsl
pop
mov
mov
xchg
add
sub
and
arpl
mov
and
cmpb
lods
adc
xchg
xor
pushf
jae
jo
add
enter
inc
and
cmpsb
xlat
xor
xor
mov
data16
pusha
push
adc
lcall
sbb
shrb
gs
mov
cli
mov
or
cmpsb
cmp
repnz
lcall
lcall
or
cmp
xchg
lret
clc
and
mov
out
xor
xchg
cmp
lcall
mov
test
mov
cld
xor
cmp
mov
mov
sub
loop
aam
movsl
pushf
push
mov
test
pop
jns
cld
cmpsl
sbb
pop
mov
ret
add
mov
inc
jge
int3
mov
xor
insb
fst
dec
sbb
subl
nop
fcomp
lods
cmp
loop
mov
stos
pop
mov
dec
xor
stos
and
dec
jnp
sti
pop
imul
jne
xor
dec
fists
xorl
inc
pop
ror
sarl
adc
inc
orb
cmp
pop
aam
ljmp
cs
mov
or
es
test
push
ret
adc
push
nop
lahf
push
push
mov
xchg
sbb
std
add
sub
notb
jg
dec
xor
mov
sub
les
arpl
and
int3
add
out
out
jo
pop
push
int
lahf
mov
push
in
ffreep
aas
pop
or
mov
mov
insl
addr16
testb
cmovb
mov
cmpsb
inc
pop
insb
les
push
xor
add
or
xor
mov
push
adc
cmp
test
adc
adc
lods
jb
pusha
inc
lock
xor
movsl
dec
ss
cld
outsb
test
push
fdivrp
iret
pop
faddp
sbb
push
ja
js
call
sbb
fwait
xlat
xchg
pop
aas
sub
in
inc
pop
outsl
into
pop
push
lcall
fcmove
cmp
rorb
jo
add
jmp
lret
jns
insl
pop
cmc
mov
add
mov
cmp
dec
push
lcall
sbbb
in
lods
daa
mov
test
lret
popf
dec
xchg
icebp
call
out
das
popf
sbb
pushf
and
push
dec
faddp
pushf
cmpsb
jbe
mov
xor
icebp
stc
pop
rcl
aam
lds
jp
sub
add
pusha
shrl
movsl
xchg
aad
fwait
fwait
cmp
push
es
into
dec
js
pusha
int3
repz
jo
dec
imul
jecxz
aas
sti
data16
cli
int3
enter
adc
inc
mov
or
in
lods
xchg
scas
mov
mov
repz
add
insl
mov
test
sub
in
call
xchg
or
cmpl
dec
lea
push
fld
adc
pushf
lods
xchg
loopne
jb
inc
cld
jb
shll
push
xor
xlat
out
push
mov
xlat
dec
add
jne
xchg
mov
repz
xchg
imul
sarb
lock
pusha
cltd
data16
sub
clc
jp
and
icebp
dec
dec
stos
test
cmp
mov
je
cmpsb
div
imul
clc
sub
sbb
adc
jns
sub
sub
and
lds
mov
xlat
jg
stos
sahf
scas
push
adc
xchg
not
inc
fs
xlat
cwtl
popa
inc
aam
mov
xchg
bound
mov
xorb
add
mov
sahf
xchg
sub
mov
mov
std
cmc
or
ficoml
inc
mov
cld
cmp
loop
adc
cmp
and
cmp
ror
jmp
sarb
loope
dec
fsubrs
leave
ret
inc
xchg
mov
out
test
outsb
dec
inc
lea
daa
stos
jns
das
mov
sbb
pusha
dec
ret
pop
xchg
rclb
sub
iret
jg
adcb
jne
out
inc
outsb
bound
push
mov
sbb
push
vhsubps
fstpt
mov
add
dec
inc
or
push
adc
pusha
jo
dec
fistpl
dec
cmpsb
out
enter
ss
icebp
lret
xor
sti
subb
xorl
je
cmp
ret
mov
aas
test
movsb
nop
jbe
inc
cld
and
sub
loope
sahf
and
jp
fstp
add
imul
jp
mov
cmp
add
faddp
std
mov
std
inc
icebp
dec
pushf
dec
jnp
pop
add
inc
lahf
stc
pop
andb
int
sub
or
jno
adc
dec
repnz
and
dec
mov
mov
mov
xchg
dec
or
cmp
lods
and
adc
repz
out
jge
mov
mov
imulb
in
or
fisubl
jmp
adc
jnp
ss
int3
or
in
fsts
xchg
dec
ljmp
int
stos
pop
xchg
pop
rolb
lock
xchg
pushf
hlt
divl
mov
xchg
pop
loopne
mov
in
lahf
push
pop
mov
xor
dec
cmpsl
cmp
repz
and
jg,pn
int3
sub
stc
mov
jb
rcr
int
int
scas
xchg
stos
loopne
or
push
lcall
mov
xor
sbb
stc
mov
mov
xchg
dec
std
mov
stos
roll
jb
sbb
xor
jns
adc
cmp
add
push
fiadds
hlt
lds
jle
mov
jmp
xchg
mov
sbb
fistl
jge
ds
and
jnp
int
xlat
rclb
pop
mov
in
jo
sub
fnsave
ficomps
movsb
sbb
mov
mul
hlt
and
mov
inc
adc
mov
fwait
sbb
imul
shl
test
aaa
xchg
ret
push
stc
or
cmp
inc
inc
insb
adc
fnstenv
jl
pusha
cmp
cmp
jmp
inc
sahf
mov
imul
in
and
in
popf
lods
daa
test
jp
cmp
push
pop
xchg
inc
imul
xchg
jmp
inc
add
repz
jnp
addr16
pop
stos
cmp
rorl
jl
ffree
push
adc
rcr
adc
mov
cmp
mov
out
push
pop
sbb
xchg
jb
jge
xor
xchg
sbb
lea
adc
pop
int
int3
lret
cmp
loop
enter
out
fildl
cmp
jae
dec
or
out
add
sub
lock
pop
add
into
and
lahf
mov
ja
popf
fdivrs
sub
repnz
mov
loope
add
fwait
xlat
call
mov
std
dec
mov
xor
fcmove
rcll
test
push
loope
mov
enter
push
loope
and
pusha
or
rclb
and
lods
les
push
dec
push
xor
insb
js
int3
insb
sub
sbb
ds
xchg
jge
pop
cmp
sbb
push
or
sub
call
mov
or
lahf
add
xor
dec
test
ror
adc
fwait
das
sub
mov
xchg
icebp
lods
bound
aad
sbb
int3
jg
clc
cwtl
jmp
jns
mov
lods
test
pop
sub
outsb
pop
xor
shl
nop
lods
cmp
movsl
push
adc
and
or
pushf
repz
dec
icebp
testl
leave
and
test
call
in
mov
pop
add
xchg
mov
ja
lods
nop
or
icebp
adcb
mov
pop
int3
xlat
lcall
lahf
cmp
or
mov
lret
lcall
cs
push
xchg
push
fidivl
fwait
add
imul
mov
lret
loop
js
andb
mov
ret
or
cmpsb
leave
sbb
mov
sti
and
mov
fdivrl
push
xor
das
mov
insb
adc
je
popf
ret
stc
cmp
dec
xchg
jnp
shr
push
cli
stos
push
fcmovu
sahf
mov
xor
outsl
ret
xchg
imulb
lret
mov
lea
xor
jle
lea
lret
lret
es
mov
loop
jmp
add
xchg
leave
and
ret
mov
push
loop
les
movsl
mov
test
loop
subl
out
in
out
les
sub
dec
pop
nop
sarl
push
cmpsb
mov
sub
sub
mov
dec
pop
popa
jae
mov
and
sbbl
movsl
aad
aas
les
jecxz
jge
test
push
lods
out
data16
inc
adc
scas
push
fbld
enter
mov
and
push
insl
add
sub
push
mov
insl
adc
cmc
mov
sub
sub
stos
mov
and
loop
pop
mov
frstor
dec
loope
arpl
notb
dec
mov
mov
mov
shrl
pop
mov
ret
je
or
xchg
xor
jl
into
je
insl
mov
and
insl
mov
jno
pop
inc
push
jae
stc
lods
jns
cli
scas
fs
mov
mov
cmp
cli
aam
jns
out
inc
div
inc
xlat
bnd
test
lods
sarb
mov
mov
dec
cld
pop
sbbb
stc
cmp
sbbl
icebp
aam
inc
fbld
popa
jns
push
mov
xchg
add
sub
movsl
nop
imul
pop
lcall
jl
imul
sub
xchg
test
jp
mov
mov
out
adc
push
rclb
inc
cltd
mov
dec
adc
cmp
xor
sub
fstpt
or
es
and
mov
mov
int3
cltd
jmp
jg
mov
clc
push
test
enter
mov
pop
mov
inc
push
mov
dec
shr
in
loope
cmp
daa
jge
mov
mov
jnp
mov
cmpsb
sbb
lods
cmpsb
pop
sbb
popa
int
adc
xchg
fildll
clc
sbb
cs
sahf
jns
inc
push
outsb
fimuls
insb
jp
loopne
push
lret
xor
and
cwtl
sub
pop
fsub
sbb
or
daa
fistpl
int
and
outsb
and
cmc
js
sub
mov
cmc
cs
cmp
jbe
adc
xlat
jle
mov
sarb
and
fdivs
sub
mov
mov
fisubrs
loope
leave
sub
arpl
and
clc
mov
push
pop
add
lcall
pop
sub
or
loopne
jno
mov
fisubrs
fwait
icebp
push
gs
enter
cltd
sbb
mov
dec
pushaw
fbstp
dec
das
adc
xchg
xor
adc
add
in
icebp
push
stc
and
sub
clc
rorb
loop
loop
inc
repz
mov
lods
pop
out
mov
pop
aam
mov
int
jbe
mov
ret
pop
divl
aad
jbe
sub
out
sbb
lods
add
mulb
jle
out
loopne
inc
or
fbstp
lahf
xchg
cmpsb
seta
decl
jecxz
mov
ret
test
out
loop
cmp
and
jmp
ljmp
inc
mov
add
mov
push
loop
test
in
mov
mov
ds
or
iret
push
adc
fcomps
xchg
xlat
jns
nop
pop
fsin
stc
xchg
jl
insl
adc
push
lods
pop
or
mov
cmp
xlat
out
test
gs
mov
cltd
sub
inc
fcoml
stos
add
imul
xor
pop
loope
incb
mov
subb
dec
inc
xchg
es
cmp
rcll
add
les
push
scas
repnz
and
mov
std
les
jb
insl
inc
mov
nop
iret
lret
movsb
subl
stos
cmp
xchg
fcompl
or
cli
push
cwtl
incl
add
mov
outsl
je
mov
pop
fwait
mov
ds
lods
pop
aaa
mov
adc
pop
lret
jb
cmp
cmp
jg
mov
xchg
inc
idivb
xor
test
and
xor
add
out
roll
fdivrl
sub
push
adc
jge
or
in
pop
cltd
addl
mov
sti
push
sub
cmp
test
and
and
xchg
in
adc
fcmovnb
pop
push
pop
lret
push
and
push
cld
add
lock
ja
fmul
jns
or
pop
or
ja
sti
mov
cmpsb
bound
imul
imul
jo
xchg
dec
sub
push
sahf
adc
adc
stos
push
mov
pop
xlat
push
push
out
scas
insb
pusha
sbb
fs
shrb
pop
out
adc
dec
das
xchg
mov
aad
jns
cmp
std
ljmp
and
mov
mov
add
iret
xlat
jo
leave
and
jne
shrb
dec
sbb
out
mov
pop
fwait
scas
sub
mov
mov
aad
cld
add
dec
mov
outsb
sbb
xor
jo
mov
mov
rol
out
mov
jbe
jo
dec
pop
mov
gs
dec
icebp
sbb
out
lods
xchg
fs
push
test
sub
stos
adc
inc
subl
pop
jmp
jns
push
leave
clc
icebp
cmp
jae
sbb
and
jae
fwait
adc
mov
inc
fcompl
fiaddl
in
cmp
and
test
or
push
sbb
ffree
fsubrl
jecxz
mov
faddl
mov
add
push
or
cmpl
xor
fsubs
mov
fidivrl
loopne
dec
imul
and
stos
sbb
pcmpeqw
adc
ljmp
adc
cmp
mov
scas
or
mov
hlt
fwait
daa
inc
xchg
ss
loope
insb
mov
cltd
mov
fdivs
pop
les
dec
push
mov
jne
sub
pop
std
loopne
mov
aam
int3
push
and
mov
iret
flds
lret
ss
sbb
repnz
mov
pop
es
add
jae
mov
jge
loop
mul
add
push
adc
inc
pop
inc
test
stos
popf
push
stos
lcall
int3
push
out
popf
dec
std
and
insl
fs
xchg
sbb
aas
addr16
xor
jbe
add
sub
repz
mov
xchg
cmpsb
xchg
inc
cwtl
movsl
mov
out
adc
jo
add
xor
inc
push
xchg
push
pusha
adc
sbb
sti
and
mov
xor
aas
add
jae
pop
jmp
and
jb
dec
push
push
mov
popa
les
or
sub
mov
push
cmp
mov
push
inc
push
test
jbe
insb
mov
fs
jle
jno
shll
daa
xchg
mov
test
mov
cli
sub
jbe
and
adc
xchg
shll
mov
pushf
std
lahf
jle
or
ror
ds
pop
loope
movsb
and
xlat
cmc
xor
or
fsts
sahf
out
mov
add
dec
insb
push
jb
and
gs
sub
insb
add
or
mov
mov
adc
fidivl
dec
or
insl
test
sub
xchg
pop
dec
jo
pop
outsb
sti
mov
cmpsl
imul
cmp
or
rclb
dec
aad
bound
sbb
xor
push
pop
mov
popa
dec
jmp
mov
jmp
aas
mov
xchg
sub
xchg
hlt
sub
inc
clc
mov
and
imul
mov
int
call
out
lds
loop
fs
movsb
xchg
dec
jg
mulb
push
int
xchg
adc
pop
fwait
push
cld
push
jne
leave
fdivrl
es
xlat
cs
int3
movsl
jne
sbb
mov
loopne
orb
in
mov
in
popa
loop
data16
loop
sbb
sbbl
push
dec
sahf
out
jg
inc
add
push
mov
iret
lret
mov
out
call
or
scas
mov
insl
in
insl
and
mov
sub
popf
and
mulb
insb
mov
loope
xchg
adc
insl
jp
fld
xor
rorl
jns
les
ret
add
cmp
adc
adc
cmp
adc
adc
aaa
push
cltd
push
movsl
loope
das
out
shl
mov
sub
push
and
into
push
outsb
sbb
mov
and
inc
jecxz
dec
repz
dec
adc
add
and
add
add
cli
fsubr
movsl
repz
pusha
insl
add
ss
add
ds
sbb
inc
push
cmp
test
sahf
cmp
gs
xor
outsb
ja
fistps
mov
int
in
cmpsb
pop
jg
and
cltd
test
xchg
xchg
and
inc
mov
jecxz
push
mov
in
or
scas
insl
mov
xchg
cmp
sbb
xlat
or
xor
enter
cmpb
aad
mov
insb
orl
and
jge
andb
push
xchg
int
push
lods
std
xchg
mov
pop
fsubr
push
dec
je
stos
scas
test
jecxz
dec
fs
xchg
ss
movsb
jne
xchg
stc
sub
shrl
mov
lcall
inc
inc
sarb
pushf
mov
mov
push
ja
add
idivl
out
call
pop
lods
insb
mov
cli
js
aas
or
adc
and
frstor
xor
push
loopne
mov
stos
and
stos
imul
inc
shlb
pop
sbb
roll
mov
or
iret
mov
push
and
lods
call
pop
iret
mov
mov
jb
in
insl
pop
xchg
int3
pop
out
int3
and
jo
mov
into
mov
lds
mov
stos
xchg
subl
decb
les
clc
call
cmp
adc
movsb
sub
jmp
cltd
int
std
testl
or
mov
mov
mov
outsl
lea
jns,pt
adc
pusha
xor
in
xlat
inc
cmp
inc
pop
add
cmpsl
fs
and
push
mov
jp
cmp
push
inc
cli
ficoml
imul
cmpsb
in
push
mov
loopne
xchg
insb
mov
xchg
mov
js
jmp
and
push
add
or
adc
mov
or
jmp
gs
jmp
ss
adc
jno
ja
lock
mov
mov
negl
aas
and
ja
outsb
mov
xchg
push
in
pop
out
lock
push
mov
dec
cmp
dec
in
aaa
arpl
shlb
fstpt
cmpsb
push
hlt
xor
mov
inc
aas
repz
sbb
sub
pop
test
fnsave
imul
and
dec
xchg
fbld
inc
dec
repz
xchg
pusha
add
xchg
outsb
fistps
adc
in
add
aas
pop
pop
xchg
inc
jns
jbe
inc
aaa
and
fwait
call
lock
cmp
jae
lcall
rcrl
cltd
jne
int3
cmp
push
fs
sarl
into
xchg
lock
push
lahf
mov
add
sbb
in
ja
es
jb
faddl
mov
lds
add
lock
push
mov
call
mov
mov
dec
fadd
dec
jg
jle
xchg
jp
mov
and
aas
cmp
mov
std
ja
in
les
mov
decb
stos
out
xor
repnz
in
mov
ret
call
lds
mov
test
or
bound
xchg
cwtl
cli
scas
pop
and
sub
call
scas
jns
dec
and
xchg
jp
or
iret
insl
add
call
sub
xor
dec
sub
mov
repnz
icebp
jge
xchg
sbb
dec
cmpsb
insl
sbb
and
insb
imul
popf
sbb
jl
data16
and
js
mov
pushf
lret
cmpsb
hlt
mov
pop
inc
sub
pop
mov
dec
scas
cltd
enter
sbb
push
mov
cmp
dec
repnz
call
into
in
fnstenv
xor
inc
push
roll
sar
imul
pop
xchg
jns
add
pop
jne
mov
test
pusha
lcall
icebp
adc
in
in
sub
hlt
test
es
inc
jp
jne
add
inc
jb
inc
or
dec
push
icebp
mov
movsb
jae
stc
js
cmp
mov
or
push
mov
xor
cltd
xchg
insb
arpl
pop
push
pop
std
add
adcb
inc
sbb
xchg
les
jmp
mov
xchg
pop
sub
mov
inc
out
loope
shrl
inc
sub
cmpsl
pop
mov
cli
in
es
data16
in
loopne
xchg
jge
mov
xchg
push
xchg
aad
das
in
mov
xchg
mov
sub
out
adc
adc
in
sbb
lcall
mov
mov
add
mov
xchg
int3
add
in
add
loop
xchg
lcall
jmp
lods
jo
jg
fidivrs
mov
das
lret
sub
dec
cmp
fnsave
enter
dec
push
subl
imul
add
sub
and
leave
sahf
or
pop
lods
push
xchg
sub
push
fcmovne
push
jnp
dec
sbb
jne
popf
fldt
enter
outsb
adc
ds
fs
mov
sbb
adc
adc
rcll
cmp
aad
das
and
scas
inc
push
adc
sbb
mov
dec
jo
aam
mov
adc
test
mov
test
xchg
ljmp
sbb
adc
xchg
cld
xchg
adc
jno
adc
xchg
push
in
test
iret
aas
mov
fwait
mov
arpl
xchg
and
adc
dec
push
outsl
daa
jns
jns
mov
ud2
xor
stos
xor
into
into
mov
cwtl
lcall
test
xor
add
repz
or
popf
movsb
in
cmc
into
fistpll
jmp
xchg
data16
lcall
dec
shll
enter
loope
bound
cs
gs
inc
cltd
xchg
jge
jne
lret
push
and
imulb
sbb
cld
repz
inc
jb
stc
fcompp
inc
mov
lahf
enter
mov
imul
or
sbb
lcall
clc
xchg
mov
dec
mov
and
js
jp
inc
out
add
movsb
dec
in
stc
mov
loop
and
cmp
xchg
dec
enter
inc
pop
hlt
sbb
sti
push
lcall
dec
mov
test
cld
test
inc
sub
add
imul
movsl
add
ja
sahf
push
hlt
mov
or
jmp
adcb
lock
inc
cmp
imul
jge
in
ss
dec
ret
sbb
sbb
mov
popf
aam
jo
ds
pop
dec
xor
insl
sbb
rclb
hlt
es
out
pop
xor
adcl
mov
movsl
mov
call
out
push
sub
push
aad
ds
nop
sarb
shlb
out
jo
pop
cmp
xlat
inc
jae
inc
das
mov
inc
dec
xlat
mov
lcall
mov
cli
lret
popa
ljmp
cltd
clc
pop
xlat
cs
sbb
xchg
dec
xor
subb
xor
mov
in
dec
inc
push
jne
lea
mov
dec
mov
loope
adc
push
repnz
xchg
out
mov
cmpsb
mov
and
enter
jg
jmp
bnd
mov
push
pop
ret
aaa
outsl
inc
das
mov
jo
dec
mov
test
lea
movsb
jle
add
inc
repz
mov
pop
sti
repz
adc
jp
push
leave
and
cli
cmp
lcall
pop
ljmp
js
mov
shlb
push
das
fwait
jp
into
mov
pop
decl
int3
sub
mov
mov
lods
cmp
stos
sbb
push
dec
call
mov
sahf
sbb
add
stos
sti
push
decb
call
push
rcr
add
nop
jae
in
rorl
jmp
pop
out
fstps
xchg
hlt
sbb
dec
test
sbb
xchg
ljmp
or
push
sub
dec
cmp
adc
sbbb
and
inc
sub
fs
scas
xchg
test
movsb
mov
mov
sbb
push
jae
and
decb
lods
ds
outsl
dec
and
sub
sub
sbb
cmp
dec
aas
add
notb
sbb
cltd
mov
xlat
notb
gs
inc
jbe
movsb
lcall
jge
sbb
mov
stos
adc
test
fst
inc
jne
sbb
push
xchg
adc
xchg
xchg
xor
ret
jecxz
fisubs
jmp
mov
mov
jbe
fmuls
leave
add
push
notb
and
fstpl
mov
mov
xchg
shr
fdivs
ja
jle
add
cmp
xor
adc
push
jns
dec
test
or
pop
pop
add
pushf
or
xchg
scas
dec
inc
pop
xor
adc
mov
jg
leave
inc
inc
into
test
imul
popf
jne
jp
xorl
nop
dec
mov
scas
xchg
movsl
call
popf
xchg
mov
mov
push
xchg
push
inc
pushl
sbb
inc
aad
inc
shll
cmpsl
sub
divl
or
nop
mov
jno
dec
ja
sahf
inc
scas
ret
push
dec
add
imul
or
xchg
fbld
inc
jp
sti
inc
pop
std
aas
mov
add
mov
add
pop
cmpsb
test
mov
and
sbb
std
cmc
imul
mov
fs
jp
js
out
repnz
dec
mov
cmp
mov
jno
push
mov
imul
pop
popf
sub
mov
cmp
xchg
movsl
lods
xchg
bound
lds
jo
les
xor
jl
fdivr
cmp
mov
inc
jmp
sub
pop
inc
ja
imul
xor
and
dec
bound
mov
add
into
push
mov
pushf
mov
sub
sub
movsl
out
sbb
inc
sbb
inc
inc
and
call
movl
andb
ret
out
call
call
out
outsl
shrb
pusha
test
icebp
pop
mov
xchg
mov
dec
aaa
stc
out
mov
stos
xlat
loop
and
inc
movsl
imul
mov
mov
cmp
sbb
jge
dec
pop
loope
out
push
add
call
imul
mov
test
add
scas
xor
xor
das
xor
iret
jne
add
lods
lock
jo
pop
fisttpll
mov
add
imul
rolb
jp
lock
sbb
inc
cmp
mov
mov
mov
scas
scas
jge
lahf
adc
hlt
add
dec
mov
add
push
bound
jae
sub
add
cmp
push
mov
repz
xchg
add
adc
mov
mov
lods
pop
jne
jnp
push
cli
aad
shrl
call
orb
outsl
test
out
adc
dec
jns
adc
xor
gs
fsubrl
cwtl
mov
std
aas
loopne
jp
xchg
ror
sbbl
pop
cmp
pop
movsb
xchg
pusha
in
xchg
in
jecxz
testl
stc
stc
in
dec
addl
out
cltd
jno
push
ljmp
and
jnp
in
imull
mov
mov
rolb
xchg
cmp
xchg
add
repnz
adc
addr16
outsl
dec
mov
sub
fidivrl
cmp
add
fs
movsl
pushl
loope
and
mov
stc
movsl
sbb
testb
sahf
decl
and
mov
xchg
fdivr
mov
cli
inc
ret
popa
pushf
xchg
addr16
xchg
pop
test
jg
push
xorb
mov
gs
fadds
mov
inc
test
je
push
call
jmp
imul
rorb
and
dec
mov
addl
jnp
gs
push
mov
sbb
xchg
xchg
shl
stos
and
inc
aad
decl
mov
pop
sbb
call
inc
push
adc
cmp
adc
cmp
rcrl
xchg
incl
jo
shlb
jle
mov
ror
outsb
pusha
push
repz
outsl
mov
and
les
rolb
imulb
data16
push
mov
xchg
sub
fnsave
in
adc
xor
dec
xchg
xor
cs
xor
dec
int
cwtl
push
xor
pop
cmpsb
and
adc
sub
jne
xor
cmp
or
test
jnp
add
outsb
std
cld
popf
aaa
sbb
mov
in
or
mov
sub
notl
jo
into
cmp
mov
neg
or
aad
lods
ds
in
cli
sub
aad
or
cmp
dec
cmp
mov
or
xchg
shlb
lcall
add
insl
enter
mov
std
out
dec
push
int3
loopne
les
xchg
shlb
mov
inc
shl
je
mov
shll
rorl
imul
push
pusha
call
cmpsl
fildll
cmp
jns
mov
and
icebp
std
xchg
in
mov
out
cmp
pop
dec
dec
pop
ja
insl
jg
mov
pop
gs
and
pop
dec
pusha
das
inc
daa
and
cmpsb
jae
xchg
inc
loopne
xchg
ljmp
rclb
pusha
lea
lock
sbb
xor
js
data16
xchg
bound
lock
jmp
mov
mov
inc
fistpll
imul
fstp
push
ret
or
loope
cmpl
jb
and
pushf
mov
mov
inc
ficompl
int
lret
loop
pushf
and
inc
sahf
cmp
or
aaa
sub
inc
cwtl
pushf
inc
push
and
ja
in
or
mov
or
loop
mov
aaa
sub
xor
sub
mov
loope
jns
cmp
fimull
jg
cmp
into
jo
xchg
aad
jae
insl
pop
stos
mov
shr
fnstenv
repnz
inc
scas
mov
mov
rolb
imul
xor
into
ret
and
adc
dec
inc
inc
es
scas
add
test
outsl
adc
push
popa
mov
loop
out
ficoms
mov
daa
xor
jo
sub
les
cmp
out
dec
out
push
xor
push
cmovne
push
subb
leave
push
add
dec
pop
nop
lret
jle
insl
pop
inc
add
leave
jae
ljmp
xchg
xlat
xor
cmp
xchg
or
mov
xor
repz
mov
data16
xlat
add
push
push
mov
pop
sti
mov
add
pop
cmpl
and
inc
pushf
add
loope
and
jl
divb
inc
mov
pop
int
cmp
cli
leave
and
pushf
mov
adc
mov
stos
repz
int3
pusha
or
push
je
jg
jne
lods
aam
testl
fucom
adc
sub
jg
jo
pop
repnz
add
sub
call
xchg
sbb
lds
push
in
cmp
icebp
aaa
cmp
iret
mov
xlat
push
mov
stc
xchg
aam
imul
out
xchg
test
repz
cmpsb
jbe
movsl
scas
clc
pop
sti
push
mov
xchg
jmp
lock
xor
cltd
repnz
add
push
iret
inc
push
pop
pop
into
sbb
movsl
sarl
aam
hlt
jg
xor
imul
lea
push
xchg
mov
dec
outsb
mov
dec
sub
and
jbe
loopne
jns
aam
cmpsb
cmpsb
and
fisubl
inc
ret
bnd
or
sbb
pusha
or
movsb
push
mov
in
dec
push
mov
cmp
lret
or
push
xor
push
pop
dec
push
cwtl
jns
scas
gs
stos
jp
rcrl
fimull
imul
cmp
dec
sti
mov
pop
int
push
add
add
jb
push
mov
loopne
pop
movsl
ds
adcl
sti
shll
jnp
add
outsb
xchg
rcl
ljmp
push
test
mov
test
jbe
xor
push
fsubrs
jmp
dec
add
push
aam
addr16
adc
lret
mov
mov
clc
adc
sub
dec
loop
or
inc
cmp
sbb
lahf
cmpsl
subl
scas
out
adc
lea
push
push
pop
outsl
push
frstor
movsb
add
test
xor
les
pop
or
inc
in
imul
jle
cltd
arpl
orl
mov
fwait
popf
inc
or
and
negb
flds
roll
pop
push
adc
and
lds
sub
xchg
std
cmp
sub
dec
test
shlb
mov
pop
leave
lahf
cwtl
aas
xor
adc
lcall
pop
mov
push
movl
push
add
movsb
dec
cmpsb
insl
jbe
rcrb
or
out
inc
subb
cld
jl
dec
sarl
push
cmp
loopne
jo
aam
cmp
std
aad
daa
cmp
xchg
push
add
sbb
popa
mov
xor
sub
dec
pop
lock
mov
mov
insl
xlat
sbb
dec
fstpt
add
sbb
mov
sbb
mov
push
daa
xor
jnp
das
inc
mov
testb
mov
mov
push
das
add
push
cmp
and
pop
test
ret
mov
pop
sub
ret
fildl
lret
fimull
inc
out
cmp
xchg
hlt
add
xchg
xchg
cli
add
jno
std
loope
shl
push
xlat
outsb
pop
filds
loop
mov
lock
adc
mov
popa
xor
inc
fistpl
mov
and
and
inc
sti
loop
push
movsl
and
call
rcrl
mov
adc
sahf
sbb
sbb
scas
movsb
shrb
lea
pop
ds
adc
push
adc
adc
es
cmpsb
mov
mov
hlt
pop
sahf
ss
push
repz
mov
sbb
lret
nop
xlat
movsb
fildl
cwtl
sti
or
sbb
shlb
gs
repz
jbe
jle
std
orl
jl
out
mov
sbb
loopne
add
fisubrs
gs
pop
jo
aas
shrl
gs
sbb
pop
jl
das
pushf
xchg
in
jae
xchg
fwait
jecxz
add
pop
les
jecxz
es
call
jns
push
adcb
cmpsl
movsl
jp
mov
dec
movsl
dec
fildl
sub
pushf
jno
mov
iret
call
sub
and
sti
out
jno
mov
sbb
pusha
jmp
mov
fsubrl
push
enter
testb
ret
mov
sub
loopne
dec
cmc
inc
insb
fwait
ret
mov
or
xor
mov
pop
xchg
mov
dec
cli
mov
add
dec
fmuls
je
out
add
xchg
sbb
pop
pop
repz
sahf
lods
cmp
add
push
mov
sub
or
aas
daa
cmp
fsubrl
jno
scas
ret
fisttpl
fmull
das
imul
test
adc
mov
pop
cmc
xchg
rorb
pop
je
rorl
jge
push
and
mov
cmpl
cwtl
je
pop
jge
mov
cmpsl
dec
push
sub
sub
mov
cmp
cmpsb
cmc
cmpsb
sub
sub
imul
les
cmp
insb
cmpsl
jo
cmp
mov
mov
pop
dec
inc
cmp
xchg
jl
push
xor
loope
aaa
sbbb
pushf
cltd
mov
push
adc
cli
mov
int3
xlat
lea
into
add
cmpsb
pop
imul
mov
es
add
dec
shlb
dec
test
push
mov
push
insb
sub
leave
mov
sub
stos
imul
cmc
push
jl
mov
and
inc
push
jno
pop
stos
daa
xchg
push
pop
clc
xor
jne
mov
mov
sbb
push
daa
xor
cmc
stos
fsubrl
popa
pop
les
jp
pop
js
mov
and
and
outsb
lret
dec
xchg
dec
or
dec
pop
mov
das
pop
sahf
dec
lcall
fildll
mov
insb
mov
jmp
cmp
test
aas
add
hlt
jbe
jno
mov
sbb
in
hlt
out
and
rorl
mov
out
adc
mov
loop
and
push
shll
pusha
xchg
jmp
add
lds
sbb
cmp
inc
adc
fdivl
inc
test
cmp
jnp
mov
mov
loop
ficoms
ljmp
and
dec
into
add
jmp
add
das
jl
cmp
push
push
pop
rorl
int
leave
loopne
out
dec
fists
lock
sub
scas
jne
in
adc
xor
iret
adc
cmp
push
addr16
pop
fstpl
cli
cmovnp
lods
pop
inc
push
cmc
pop
mov
xchg
pop
repnz
sbb
dec
sbb
dec
dec
movsb
or
rorl
out
and
movsb
push
enter
and
test
mov
push
ss
mov
gs
push
sub
nop
ja
push
dec
push
push
cmp
pop
pop
lcall
insb
das
cmp
jnp
dec
and
gs
sub
mov
lret
xchg
mov
lret
pop
out
rcr
pop
popa
xchg
jno
dec
cmpsl
jb
test
jg
jp
ret
mov
cwtl
or
xor
jp
rorl
adc
pushl
sti
mov
xchg
push
inc
loopne
xchg
dec
cmp
out
add
or
inc
mov
xchg
pop
lods
and
pop
roll
add
pop
cmp
insb
dec
daa
rcrl
inc
sub
enter
add
lock
insl
push
pop
xchg
mov
inc
aas
pop
fdivrs
data16
cmpl
lret
cwtl
bound
aam
shlb
dec
mov
imul
xchg
js
sarb
test
mov
sub
jne
sub
sub
sbb
jle
xor
add
mov
xor
je
xor
jne
das
xchg
push
loop
push
and
push
mov
jge
je
out
mov
xchg
dec
xor
loop
sub
adc
mov
lock
out
dec
ret
lock
add
push
or
fwait
enter
aad
rol
xor
data16
mov
mov
push
inc
add
adc
mov
bound
fwait
icebp
push
ss
in
cld
ret
mov
jmp
mov
ds
push
jns
add
mov
shl
cld
mov
dec
scas
xor
das
hlt
repz
arpl
lret
bnd
or
sub
les
ja
lea
add
mov
out
ds
push
ffree
int3
jne
aaa
sbb
sarb
mov
xlat
clc
xchg
push
hlt
inc
lock
mov
xor
cmc
lock
scas
sub
mov
inc
incl
xchg
dec
cmpsb
imul
insl
int
fsubs
movsl
lret
lret
gs
xor
mulb
or
test
add
hlt
insl
adc
sub
cmp
outsl
cmp
pop
adc
or
sbb
test
and
das
stos
jp
and
pop
or
lods
xchg
loope,pn
push
jmp
inc
hlt
inc
inc
push
gs
in
int
or
mov
mov
cmp
pop
adc
out
mov
inc
cmp
into
xchg
sub
cltd
imul
push
fs
jmp
fcompl
flds
or
adc
and
mov
call
mov
jmp
fs
cli
xor
push
mov
divb
cmp
inc
push
mov
bound
pop
xor
push
inc
aad
jae
inc
leave
inc
leave
fisttps
in
dec
sub
shl
jno
mov
adc
cwtl
pop
add
mov
stos
mov
pop
outsb
inc
add
jo
and
cmp
test
xchg
or
bound
arpl
pop
cmp
pop
js
inc
pop
shl
roll
cwtl
mov
add
jb
xchg
pop
lahf
pop
scas
idiv
repz
out
repnz
jnp
cmp
mov
cmc
mov
mov
inc
dec
ss
mov
pop
jle
cmp
push
add
adc
rclb
or
push
stc
pop
cmp
fidivrl
xchg
push
adc
cmpsb
ds
mov
sub
lea
cmpb
xchg
adc
andb
pusha
dec
out
dec
mov
loop
jb
movsl
call
and
outsl
xchg
adc
mov
pusha
cwtl
push
adc
fsts
or
and
or
test
pop
cli
addl
ss
add
in
mov
push
jle
dec
lea
out
sub
pop
mov
jnp
adc
sbb
cli
cmpsb
cmp
inc
push
mov
cli
jne
push
jg
lea
std
es
aam
or
dec
mov
mov
ja
push
sub
mov
xor
sub
das
mov
push
mov
insl
rep
in
and
xchg
fcoms
pushl
in
sahf
sbb
icebp
cltd
in
pmaxub
pop
push
call
adc
inc
dec
repnz
mov
adc
sub
fistl
and
add
xor
ds
mov
mov
insb
outsl
pushf
mov
mov
cmpsb
ret
jmp
sub
lods
jmp
push
shrb
adc
inc
adc
add
aas
cmp
popf
jl
iret
jne
jp
outsb
fidivrl
sbb
and
mov
in
shrb
out
mov
mov
jl
popa
in
es
loopne
dec
popa
stos
enter
dec
dec
or
xorb
leave
sub
adc
add
mov
push
mov
jge
fbstp
pusha
add
cwtl
push
loopne
inc
divl
mov
dec
pushf
dec
xchg
ljmp
cld
mov
insb
andb
andl
sub
dec
jae
pop
push
lahf
mov
pop
mov
mov
adc
inc
jle
leave
dec
sarl
pop
xor
add
bound
loopne
sahf
sbb
add
or
add
out
lock
xor
aad
pop
sbbb
and
mov
sbb
jae
test
sub
imul
sbb
mov
pop
out
jne
xor
mov
sub
mov
ror
mov
stos
out
sub
push
shll
cwtl
push
fs
cmpsb
cmpsb
adcb
lods
push
outsl
pop
cmpsl
mov
mov
mov
fadd
lcall
adc
pop
in
xor
mov
faddl
sbb
es
ret
scas
sbb
lods
imul
stos
std
mov
xchg
push
mov
pop
ja
icebp
push
inc
cmpb
inc
popf
insl
mov
fxch
negl
stos
jns
pop
aaa
ficomps
lods
aas
inc
je
popa
out
add
mov
inc
dec
js
mov
inc
mulb
int3
dec
stos
dec
xchg
adcl
mov
xchg
in
sbb
insl
mov
add
aam
inc
add
arpl
aaa
adc
push
fwait
nop
mov
fadd
jmp
and
pop
pop
lret
pop
out
popf
adc
sysenter
std
inc
xor
out
into
aam
and
ret
pusha
push
mov
xchg
dec
cmp
or
in
or
aas
ljmp
cmp
sbb
dec
jp
fdivrl
leave
lds
ljmp
sub
test
jmp
and
in
pop
clc
call
cld
movl
ja
jne
insb
fwait
push
and
xor
in
int3
inc
mov
xchg
adc
ficoms
push
inc
lods
inc
xchg
mov
incb
fmuls
sahf
idivl
dec
lret
mov
mov
mov
mov
xchg
loop
mov
mov
mov
pop
mov
inc
enter
pop
dec
outsb
ret
mov
cmp
outsb
sbb
mov
jl
enterw
cmp
fdivl
lods
push
addb
fs
push
pop
push
push
sbb
scas
out
ljmp
jmp
mov
pop
ficoms
aaa
sbb
lods
jle
test
cs
int3
pop
pop
pop
inc
addr16
cmp
push
out
push
jae
inc
sbb
jl
mov
mov
xlat
jl
dec
jo
dec
negb
test
dec
fdivrs
xor
lock
xchg
push
dec
sti
sub
je
pop
pop
jno
lods
aas
lcall
movsb
or
or
lock
nop
outsb
adc
add
stos
xchg
ret
xchg
and
xchg
dec
xor
std
iret
jl
nop
add
js
mov
cmp
fistl
fidivrs
push
xchg
push
ja
jns
shlb
les
pop
push
lods
add
xchg
mov
and
out
cmpsb
sahf
mov
xchg
mov
test
mov
js
mov
psubusw
arpl
mov
and
pop
fisubrl
loop
test
loop
cmp
or
inc
pop
push
scas
cmpsl
aam
xor
stos
add
sbb
pop
adc
test
in
faddp
mov
in
mov
pusha
and
cmp
adc
test
sbb
mov
ret
and
xor
lret
pop
and
mov
incl
xchg
leave
push
pop
aad
dec
imul
icebp
adc
push
sar
mov
or
fdivs
jno
adc
in
push
mov
cwtl
dec
fsubs
ja
test
and
mov
push
fidivrl
mov
xchg
pushf
pop
outsl
cmp
add
or
pop
lret
fidivl
add
jecxz
lcall
push
xchg
pusha
loopne
les
shlb
test
inc
mov
loop
movsl
and
aas
pop
or
mov
out
out
dec
mov
mov
imul
lret
push
lret
fldt
pop
aaa
sahf
add
lea
out
jl
adc
inc
mov
pop
lret
mov
or
inc
xor
jns
mov
dec
cmpsb
fstpl
enter
call
or
mov
out
mov
cmc
push
sub
push
data16
push
xchg
in
push
adc
fcompl
loop
mov
pop
pop
dec
cmp
push
rcr
lcall
sbb
add
nop
aaa
out
inc
sub
add
push
mov
scas
rclb
dec
push
imul
ret
or
lods
loope
mov
repnz
lahf
int3
mov
enter
sbb
xlat
fs
xor
frstor
clc
sbb
push
imul
fdivl
call
jl
dec
jge
out
testb
addr16
repz
fisttpl
pop
out
sbb
cs
inc
jle
sbb
or
fstpl
stos
xor
jbe
into
mov
push
inc
push
das
jle
sbb
mov
pop
sub
cmp
push
dec
hlt
fsts
mov
movsb
or
inc
push
stos
or
pop
stc
test
or
add
imul
notb
and
lods
cmp
mulb
mov
or
aas
aad
imul
insb
add
pop
mov
rclb
mov
adc
push
inc
loop
lods
or
sub
scas
mov
cmp
clc
lahf
clc
add
fwait
inc
push
loope
push
test
add
subb
xchg
add
xchg
insl
jnp
repz
pop
mov
out
cmp
sahf
adc
inc
pop
ljmp
mov
jg
sub
fmul
and
jno
add
ja
daa
mov
push
push
sub
dec
xlat
shll
icebp
mov
mov
inc
inc
mov
push
pop
bound
fsubrl
xor
sub
mov
mov
insl
sub
mov
xchg
jmp
lea
xor
shrl
cmc
not
pop
lds
inc
ficompl
stc
jns
js
cltd
out
xchg
sub
ds
iret
jae
xchg
ljmp
inc
add
or
add
mov
sub
push
jp
out
push
pop
lret
daa
stos
mov
jo
mov
sarl
andl
fistps
sub
and
out
loope
repnz
sbb
sbb
cli
test
iret
jo
lods
cmc
icebp
pop
fistps
jb
sbb
icebp
sbb
xor
das
xor
push
cli
push
dec
insb
pop
incl
cmpsl
ja
jg
enter
mov
lds
or
sbb
cmpsb
sub
ljmp
xor
and
test
fcomps
sbb
cld
mov
inc
mov
dec
scas
sub
rorl
imul
jno
insl
pop
out
mov
test
dec
int
sarl
jae
sbb
sbb
pushf
adc
aad
jmp
ljmp
or
into
daa
inc
sub
insl
sub
out
pop
dec
xor
add
mov
dec
stos
roll
stos
dec
stos
mov
fidivl
add
fmull
inc
mov
nop
ds
xchg
and
jmp
insl
fstpt
jp
push
cmpsl
fldl
or
lcall
call
jns
fs
movsl
movsl
cmp
dec
add
xchg
and
jge
xor
leave
in
push
shlb
outsl
mov
inc
inc
jg
lods
ss
inc
std
mov
and
rclb
fadd
mov
jnp
ret
and
divl
in
pop
in
pusha
lret
adc
lock
push
xchg
das
ret
fistpll
fldcw
pop
adc
inc
pop
std
insl
fisttps
jg,pt
int
xor
jae
scas
xorb
mov
and
jo
bnd
mov
push
dec
dec
pop
cld
pop
or
mov
inc
cmp
add
lods
mov
or
add
jbe
inc
cmp
xchg
sahf
cltd
fsubrl
sub
insl
mov
in
inc
orb
and
or
pop
cmpsb
mov
pop
sub
shl
lret
pop
jnp
jmp
inc
arpl
dec
fisubs
shl
pop
mov
icebp
dec
xor
aas
pushf
mov
repz
out
test
sub
add
add
mov
cmpsl
aaa
pop
fsubrl
movl
mov
xlat
call
push
in
cmp
test
jle
bnd
outsb
cltd
xchg
loop
inc
fstpt
pop
sbb
mov
xchg
or
push
mov
jbe
or
push
jle
outsl
xor
push
mov
mov
dec
hlt
imul
test
je
cmpsb
pop
jg
adc
pop
mov
andl
out
ret
addl
outsl
sbb
inc
mov
xchg
pop
pop
hlt
loopne
int3
cmp
pop
mov
adc
popa
hlt
std
insl
ljmp
dec
and
adcb
jmp
lea
cli
sarl
ret
ret
movsb
nop
test
adc
add
out
mov
mov
mov
push
xor
subl
cwtl
sti
jae
stos
sahf
adc
adc
push
ror
add
jmp
xchg
mov
push
push
insb
es
mov
bound
inc
movsb
hlt
mov
nop
roll
fstpt
sbb
or
loop
idivl
add
mov
mov
pop
aaa
mov
cmpb
je
add
mov
sbb
mov
lret
inc
fcmovne
sbb
pop
sbb
pop
mov
testb
ret
dec
dec
jge
outsb
pop
sub
jge
jg
lret
push
or
sbb
lcall
xchg
dec
inc
dec
mov
pusha
out
xchg
fcomi
or
jl
pop
xor
lcall
lahf
mov
add
push
je
mov
xor
in
pop
sarb
and
jne
mov
inc
hlt
pop
or
push
sbb
xchg
sbb
dec
and
push
sub
and
mov
cmp
mov
mov
or
xor
addr16
outsb
loopne
sub
or
movl
outsb
push
mov
xchg
sahf
ds
sub
scas
xchg
loop
sahf
xor
mov
sub
push
das
ja
and
adc
lret
sub
xchg
mov
xchg
and
xchg
in
cmp
push
orl
clc
pop
fdivl
rcr
decl
loop
xchg
jmp
jb
out
lods
arpl
push
adc
pop
inc
scas
xor
aam
pusha
lods
adc
jmp
shll
fbstp
ret
push
repz
shr
in
imul
cmp
xor
or
push
or
sub
mov
push
sarb
int3
test
les
sub
out
jmp
das
jne
adc
sub
jns
mov
adc
xchg
rorb
xchg
out
ds
inc
fsubr
add
in
shl
leave
lcall
and
subl
call
dec
mov
and
sbb
dec
cmpsb
cltd
rcl
pop
sbb
in
mov
xlat
cmp
enter
adc
ffree
stc
cmpb
mov
add
mov
addr16
adc
cmp
mov
in
loope
adc
ljmp
and
and
cmpsl
out
mov
mov
ljmp
jno
mov
mov
or
movsl
sub
xor
add
sahf
mov
and
sub
nop
add
lods
pop
lahf
loopne
dec
sarl
and
popf
inc
mov
ljmp
scas
arpl
mov
insl
ljmp
dec
in
push
fmuls
inc
adc
dec
xchg
mov
or
mov
leave
xor
dec
adc
or
cwtl
inc
adc
push
das
sub
je
outsl
inc
add
stos
icebp
lock
sbb
xor
nop
mov
je
xor
add
or
enter
incl
cmp
pop
xchg
incb
pop
pop
push
scas
jo
enter
decl
cmp
pop
sbb
xchg
jmp
data16
icebp
sbb
dec
leave
inc
and
mov
jns
movsl
cmpsb
out
add
xchg
sti
and
pop
adc
add
sahf
or
cmpsl
sahf
test
mov
pop
insl
scas
pop
bound
fwait
pop
mov
enter
lods
dec
dec
mov
sbb
dec
inc
outsb
xchg
outsb
out
leave
je
jo
and
push
outsb
and
in
adc
mov
bound
xchg
out
lea
lahf
bound
add
lock
fdivl
dec
inc
sub
stc
sub
mov
repz
jne
mov
mulb
into
inc
test
lcall
xor
in
fiaddl
cmp
mov
mov
xor
pop
ljmp
cld
mov
movsl
popf
cmp
pop
adc
lret
sarl
push
lods
push
or
or
inc
jno
jl
arpl
cmp
push
out
push
stos
jno
pop
inc
add
lret
lods
adc
in
jae
cmp
push
pop
cmc
dec
insb
pop
int3
loop
push
fiaddl
rcrl
push
leave
stos
fisubrl
mov
fucomip
pop
leave
xor
mov
insl
dec
sti
popa
rolb
lods
sbb
cs
adc
lods
ja
pop
pusha
fcmovne
pop
lcall
dec
adc
mov
arpl
pop
jbe
push
lds
out
shrl
int
arpl
adcl
pop
inc
mov
cmovg
and
add
sbb
xlat
daa
nop
js
cs
outsl
ljmp
push
xchg
in
push
adc
inc
jmp
or
mov
push
cli
sbb
enter
aad
mov
arpl
or
notl
add
inc
adc
clc
jp
ljmp
xchg
iret
cmp
testl
or
mov
adc
movsl
pusha
push
xor
test
std
add
test
dec
adc
mov
fisubrl
cmp
and
xchg
mov
mov
scas
and
insb
mov
movsl
sub
jae
mov
mov
xchg
push
loopne
push
imul
pop
cmpsl
popa
out
test
xor
bound
mov
mov
inc
dec
inc
stos
or
adc
sub
jge
mov
xor
mov
lock
xor
and
xor
out
sbb
mov
jl
push
pop
pusha
loope
xchg
int3
xchg
cmp
pop
xchg
pusha
push
popf
cmp
push
jmp
or
xor
push
mov
cmp
ljmp
push
dec
mov
mov
adc
stos
mov
jp
scas
lret
dec
mov
in
mov
jne
imul
aaa
mov
sar
popf
aaa
dec
std
icebp
sbb
sbb
mov
mov
cs
jecxz
in
mov
pushf
jno
cs
sub
add
push
roll
fs
xchg
fdivr
in
inc
pop
xlat
out
test
psrad
mov
movaps
mov
push
in
push
lods
cli
jge
cmpsl
mov
in
add
sub
or
cmp
out
xchg
add
pop
mov
xor
jnp
cmc
push
ljmp
test
sub
sbb
xor
rorl
xor
test
dec
stos
cli
repz
movsl
je
push
mov
fldenv
popa
lcall
lock
dec
movsb
aam
jecxz
xchg
out
cmc
imul
pop
or
xchg
push
jns
jp
out
mov
adc
jnp
cmp
fisubrs
mov
pop
frstor
pop
arpl
mov
enter
and
js
adc
out
inc
cmp
sbb
jmp
adc
les
arpl
cmc
and
pop
xor
mov
sahf
xor
mov
ficomps
cltd
inc
sbb
mov
pop
int3
pop
das
pop
call
sti
inc
hlt
adc
cmp
xchg
or
int3
fldenv
data16
mov
add
cltd
insb
inc
cmp
adc
je
repz
data16
rcrb
out
sub
jg
dec
lods
jp
and
in
push
add
push
jnp
sub
mov
stos
pop
in
sub
xchg
std
pusha
pop
inc
sbb
lcall
add
inc
mov
inc
mov
push
sub
and
jecxz
rcrb
ja
sbb
std
lea
ja
rorb
stc
jl
push
and
ret
ja
push
out
push
adc
push
push
xchg
mov
pop
and
sarl
shrl
shlb
fs
call
ja
cmc
stos
andl
out
inc
sbb
test
addb
popa
jnp
mov
or
sbb
imul
enter
mov
cmp
mov
in
mov
dec
fistps
mov
lcall
sahf
and
test
adc
push
jnp
or
insl
jmp
out
aas
lds
add
sub
sub
icebp
or
scas
into
xor
mov
ljmp
fs
loopne
dec
sub
mov
rorl
fadd
xor
sub
pop
pop
pushf
icebp
cmp
outsw
add
fildl
test
mov
lds
stos
nop
jb
stos
mov
jae
int
int
pop
pop
mov
mov
mov
out
adc
ss
lahf
add
xchg
add
sub
enter
shll
jne
xlat
jae
xor
xchg
out
sub
push
es
lcall
cmp
mov
or
mov
jp
pusha
jl
add
push
pop
push
div
mov
push
inc
ja
arpl
pop
aas
xor
xor
inc
test
push
les
cs
cli
mov
xchg
dec
cld
or
inc
push
popa
adc
add
pop
or
sbb
pop
loopne
mov
dec
stc
loop
test
pop
jg
sub
inc
inc
sub
sbb
cmpsl
xchg
int3
jl
xchg
push
and
ds
daa
sub
das
mov
mov
subl
int
dec
mov
adc
pop
xor
ret
cltd
and
push
imul
xchg
test
jg
dec
jno
cmpsb
test
test
or
mov
in
xchg
xchg
cs
ss
fcomps
push
cmp
rorl
add
in
jle
outsb
addr16
sti
sbb
push
pop
fists
cmc
xchg
sub
sbb
cltd
jb
ja
adc
adc
sbb
jge
scas
and
sbb
mov
push
mov
enter
divl
sbb
daa
aad
adc
push
mov
add
shrl
inc
mov
mov
add
push
dec
and
cmpsb
xchg
push
arpl
jb
fs
ja
icebp
mov
imul
pop
in
aad
xchg
and
push
es
sub
in
in
cmp
imul
pusha
in
hlt
cmp
ret
push
adc
loopne
lcall
sub
adc
inc
inc
xor
xchg
jae
push
lock
test
in
aas
cmp
mov
test
into
mov
xchg
xchg
fwait
aad
int
dec
or
aaa
cmc
adc
pop
mov
xor
jp
pushf
mov
iret
cmp
imul
jmp
or
mov
xor
add
pop
insl
add
imul
cwtl
lods
scas
jmp
add
mov
push
out
incl
aam
icebp
jmp
cmp
sbb
xchg
stos
out
std
push
push
mov
pop
add
std
mov
mov
lea
loop
lret
pop
and
insb
int3
loope
xchg
add
mov
mov
shr
ret
cli
int
rcrl
outsl
fsts
pop
xor
mov
rol
adc
mov
push
inc
mov
scas
xorl
sub
gs
aad
mov
sti
push
data16
pop
xor
add
push
dec
test
popf
sbb
stos
in
in
in
dec
mov
pop
stc
shlb
mov
xor
sbb
cmp
and
ror
sti
test
rcll
icebp
inc
sbb
xor
fistpll
mov
push
xchg
sub
stos
mov
aaa
push
cmp
push
add
push
shll
jb
cmpsb
push
call
mov
mov
outsb
aam
and
shl
imul
iret
test
xchg
cwtl
loopne
idivb
out
js
les
cltd
xchg
pop
cmp
cmp
inc
lock
addr16
movsb
push
insb
fistps
cmp
jae
insb
popa
add
cwtl
xchg
shrb
add
mov
mov
add
js
imul
or
jg
sub
fidivs
jmp
adcl
lcall
outsb
mov
pop
nop
dec
aaa
pusha
jb
jae
adcb
push
cmc
ds
sbb
dec
out
clc
mov
xchg
sbb
push
cltd
flds
pushf
test
iret
push
sbb
fiadds
mov
add
stos
in
or
xor
xchg
adc
incl
dec
dec
jg
lahf
popa
ljmp
xor
push
and
xor
es
outsb
fistps
insl
ret
add
mov
fs
popl
dec
daa
fistl
mov
pop
mov
repnz
arpl
add
popf
or
int3
movsl
push
and
nop
jbe
hlt
dec
and
sub
movsl
cmp
cmc
ret
xor
stos
push
sbb
and
repnz
lock
je
sti
cs
ja
nop
and
xchg
jge
sub
mov
add
sbb
push
test
inc
dec
lret
mov
xchg
loopne
lods
push
popa
loop
lret
push
int3
push
mov
jp
test
aas
es
or
fistps
test
cmp
bound
mov
mov
cmpsb
test
xor
inc
cmpl
rcr
imul
pop
fcmovne
mov
cs
push
add
or
and
insb
fnstcw
jge
add
cmc
fisttpl
ret
fwait
ret
mov
cmc
xor
mov
loopne
jns
pop
xchg
stc
push
out
lahf
cmp
push
jbe
mov
loopne
push
mov
mov
inc
xor
daa
lock
push
adc
das
lahf
fisubrl
or
add
cmp
push
cmc
cmp
fists
push
xorl
testl
sub
mov
sub
punpckhbw
nop
add
and
mov
sbbl
mov
cmpsl
add
sub
int
test
in
popl
push
xchg
insb
jbe
daa
ja
adc
arpl
adc
out
xchg
sub
jg
mov
mov
and
xor
outsl
test
mov
adc
test
mov
push
arpl
jp
push
xchg
gs
cmp
pop
stos
jo
pop
sti
in
pop
mov
add
inc
ljmp
mov
and
pusha
or
xchg
jbe
adc
cmp
decb
je
cmc
scas
lret
or
inc
incl
mov
mov
mov
push
fwait
push
insl
inc
pop
mov
call
lahf
mov
in
cmp
fstpl
mov
jns
inc
shlb
pop
xchg
fsubl
or
xor
sub
xor
ficoms
or
enter
xor
sub
insl
pusha
inc
rorl
insl
sbb
push
aas
int
mov
iret
cmp
jle
sub
cli
and
mov
push
ret
repz
push
sub
pop
sbb
mov
das
iret
icebp
mov
xor
imul
mov
jno
mov
inc
iret
mov
or
setg
or
pop
fldcw
sti
lea
pop
mov
mov
sbb
inc
mov
xor
mov
mov
into
repnz
popa
add
sbb
cmp
xlat
xchg
enter
adc
fisttpl
out
push
fwait
arpl
dec
xor
imul
pushf
pusha
cld
sti
cld
adc
stc
jb
pop
fstp
pushf
scas
pop
add
inc
mov
mov
jb
pop
cmp
adc
mov
ljmp
sub
inc
jo
sarl
xchg
sti
mov
mov
mov
push
jp
pushl
pop
cmp
xor
lret
push
mov
xchg
or
mov
icebp
xor
dec
imul
mov
das
int
hlt
push
push
adc
fistps
add
ds
push
loope
aaa
sbb
imul
cmp
mov
sub
mov
sub
insl
addr16
or
push
testb
push
ret
ret
fwait
jmp
push
push
mov
fs
push
jg
adcb
xchg
sbb
mov
mov
xchg
cmp
inc
jnp
cmp
mov
pop
push
pop
add
add
adc
pop
aam
xchg
lahf
adc
outsb
dec
or
ds
mov
jae
sahf
inc
sbb
sbb
jb
rcr
out
mov
and
mov
arpl
add
adc
adc
imul
jnp
jnp
adc
pop
mov
sti
mov
push
aaa
lret
dec
fldcw
xor
mov
mov
push
cmpsb
ds
pop
adc
jnp
push
shlb
inc
bound
cltd
push
and
and
jl
mov
xchg
test
pop
fstpt
sub
or
mov
lcall
movsb
mov
clc
cs
adc
dec
psubusw
xor
or
dec
xor
mov
in
lds
hlt
int
and
mov
xchg
icebp
leave
lock
dec
pusha
mov
out
shll
das
push
insb
sbb
pop
dec
and
loop
fcomp
gs
jb
mov
stos
cltd
add
adc
shrl
mov
jl
icebp
outsb
and
test
in
sub
addb
mov
push
int3
stos
add
sbb
test
pusha
nop
mov
into
int3
daa
fistl
movb
out
add
or
insb
stos
int
sub
bound
jne
les
add
add
inc
notb
xor
hlt
ret
insb
push
xor
adc
xor
test
mov
insl
daa
jle
lret
outsb
push
in
js
pop
shlb
xchg
mov
fists
xchg
sub
dec
adc
stos
and
lret
pop
sbb
movsb
sub
mov
out
sti
xor
mov
fcmovbe
subl
ret
and
fucomp
and
cmp
aaa
repz
jb
nop
adc
rolb
push
lods
loopne
iret
push
sbb
xor
xor
aam
ret
stos
mov
nop
lock
or
xchg
jno
add
roll
mov
push
sar
data16
es
xchg
mov
stos
ds
jo
mov
sbb
int
imul
jecxz
sbb
xchg
sarb
add
mov
or
in
rcrb
lret
push
inc
scas
cmc
sbb
pop
push
jmp
jg
mov
std
adc
mov
imul
rcrb
orl
inc
insb
pop
popa
hlt
andb
loopne
outsl
cs
and
add
mov
cld
cwtl
or
cltd
scas
xlat
test
shlb
cld
xlat
jge
sub
dec
or
pushf
rclb
lcall
jg
cmpsl
xor
scas
orl
aaa
lods
cmpsl
inc
cmp
cmp
inc
xchg
adc
mov
call
adc
jnp
into
and
lcall
push
fcmovb
sub
shlb
test
out
cmpsb
shll
sbb
jmp
fwait
cmpsl
mov
push
sbb
lcall
jmp
xchg
push
outsl
or
jmp
call
sbb
xchg
add
jo
call
push
inc
jg
xor
shl
ljmp
sarl
push
adc
fstps
int
movsl
add
mov
nop
add
push
in
pop
pop
arpl
mov
shll
aad
jecxz
movsb
mov
mov
test
pop
jns
imul
loope
sub
jmp
hlt
mov
xchg
je
iret
inc
loopne
inc
push
pop
hlt
fimull
jmp
add
and
repnz
mov
lahf
test
xorb
in
mov
xchg
jo
bound
add
pop
sbb
pop
sbb
and
or
addl
jmp
cmpsb
add
and
jecxz
adc
aad
jle
or
inc
data16
adc
popa
out
mov
adc
sbb
pop
xchg
cli
adc
or
mov
shlb
adc
or
fsubs
pop
stos
aad
in
and
pop
dec
mov
loope
imul
jp
or
outsl
adc
xor
or
mov
xor
mov
cmp
jl
mov
xchg
in
les
push
sub
pop
cld
sbb
loopne
sub
cli
dec
test
scas
mov
dec
mov
repz
cmc
je
push
mov
push
daa
mov
pop
popa
int3
jg
rclb
jecxz
shlb
inc
scas
imul
je
mov
mov
lds
xor
mov
dec
xor
arpl
cmpsb
mov
subb
pop
and
cmpl
lret
ja
lods
jo
imul
cld
cltd
aas
fistl
out
fmull
lods
sbb
ret
sub
jge
je
jnp
popf
push
test
cmp
rolb
pop
pop
lock
test
mov
sub
ret
movsl
or
or
mov
add
xor
xorb
fiaddl
xor
pop
or
dec
push
es
jle
out
outsl
pop
jp
jb
insb
test
inc
scas
cmp
jmp
cmp
data16
sbb
pop
and
aaa
lods
fwait
sbb
fisubrl
jae
int
into
gs
ljmp
in
inc
sub
cmpsb
in
frstor
cmpsl
sti
cwtl
add
push
aad
add
stc
out
cld
test
adc
fwait
cmc
addr16
ja
popf
adc
xchg
add
ja
data16
popa
sub
xlat
jle
in
mov
ljmp
in
mov
aad
pop
sbb
inc
jns
int
mov
mov
in
inc
orl
push
pop
call
xchg
add
dec
outsb
sahf
gs
xor
mov
xor
ss
and
push
mov
push
inc
into
mov
and
repz
std
or
icebp
pop
push
aas
fcompl
ret
sti
outsb
mov
pop
mov
cmpsb
push
inc
jb
in
rcrb
jge
jl
mov
fistpl
pop
shlb
pusha
push
xchg
push
jg
mov
or
stos
add
or
jno
add
jbe
hlt
fwait
push
hlt
pop
mov
and
stc
test
mov
xchg
call
adc
sub
sbb
xor
loopne
and
push
negl
stos
xlat
mov
ljmp
sahf
adc
lcall
outsl
cli
stos
rcrb
or
in
mov
sahf
push
jl
mov
jge
or
test
fsubrl
cmp
orb
mov
sub
jb
add
mov
out
xor
jg
or
lea
cmp
cltd
lods
test
aam
mov
adc
mov
jge
mov
push
loopne
imul
mov
cmp
or
add
xor
outsl
shll
sbb
les
scas
loopne
add
insb
sahf
lds
and
sbb
push
pop
cmpsl
call
push
xlat
jnp
fstpt
jo
mov
sub
andps
sbb
in
repnz
and
insl
add
incl
xchg
in
ja
das
repz
xchg
enter
sbb
mov
mov
mov
push
int
jg
push
inc
cmp
mov
cmpsb
out
movsl
xor
dec
push
mov
mov
aad
fldenv
xchg
jne
clc
pop
in
xchg
sbb
sub
adc
andnps
jo
and
sbb
insb
pop
test
aaa
push
jbe
rcrl
pop
test
imul
mov
frstor
mov
outsl
data16
fdivrl
push
mov
cmp
fbld
push
adc
shrb
mov
arpl
pop
out
jno
push
push
daa
add
rcll
loopne
dec
adc
inc
and
fwait
mov
stos
and
inc
mov
sbb
or
js
test
into
test
or
es
push
jb
cmp
mov
mov
jp
subb
movsl
inc
imul
clc
mulb
lds
xchg
inc
or
cmpsl
int
mov
jmp
bound
sbb
jg
dec
aam
adc
mov
pop
popa
mov
jecxz
mov
ds
cmpsl
push
inc
stos
inc
lock
mov
test
nop
xchg
add
pushf
out
cmp
sub
cmpb
xchg
and
push
testb
push
pusha
arpl
mov
jecxz
jp
aaa
jl
stos
dec
mov
cmp
lahf
cmp
xchg
inc
pop
mov
xor
mov
out
or
jmp
dec
and
roll
push
ret
or
test
and
or
ss
repnz
mov
pushf
nop
hlt
adc
insl
mov
notb
andl
sub
fcoml
cmp
je
and
sub
jmp
jge
stos
icebp
mov
into
aam
in
iret
fists
mov
adc
ljmp
pop
push
out
in
call
and
xor
push
das
fdivs
ret
xchg
sarl
cltd
imul
add
cld
bound
xchg
lret
xor
mov
and
pop
push
mov
xlat
lret
push
popf
jne
cmpsb
cmp
lds
jae
shl
les
ja
push
adc
push
mov
je
push
inc
je
adc
icebp
movsl
insb
ljmp
nop
fst
pushl
cmp
cmpsl
mov
cwtl
mov
ljmp
mov
inc
inc
xchg
sub
mov
icebp
pop
daa
jb
insl
dec
cmp
pop
and
lods
mov
sahf
xchg
mov
sub
fldl
rcl
repnz
out
lcall
inc
sbb
mov
mov
in
push
push
push
stc
frstor
and
frstor
popa
xchg
jp
sbb
pop
sub
mov
data16
in
sti
pop
in
dec
stos
fisttpl
fidivrs
loopne
jg
adc
inc
inc
movsl
inc
cld
mov
push
fnsave
popf
fs
adc
outsl
cmc
mov
mov
hlt
or
pop
xchg
push
sbb
and
fisubl
cmp
or
cs
xchg
outsl
std
mov
imul
dec
dec
jecxz
inc
dec
ljmp
or
pop
insl
cmp
repnz
and
mov
mov
js
fwait
push
mov
lock
mov
xchg
xlat
sbb
lds
mov
cwtl
mov
adc
cld
subb
pop
lea
mov
out
test
pusha
rcl
mov
f2xm1
stos
jmp
pop
ja
andb
shrl
sub
mov
sbb
sbb
insl
je
pop
int3
push
cmp
clc
jp
jbe
fmuls
pop
cmp
fwait
iret
xor
sbb
cmpsb
mov
div
xchg
int3
mov
add
imul
sub
shlb
push
push
and
test
mov
and
sbbl
pop
push
add
jl
mov
ss
mov
mov
xor
out
arpl
cmp
mov
jno
out
mov
cmpsb
jmp
cmp
sbb
xor
mov
or
insl
cmpsb
mov
arpl
std
popa
sbb
jns
sbbb
jne
in
xchg
enter
mov
outsl
movsb
sarl
fistpll
jg
repnz
repnz
std
sub
jno
jne
xchg
scas
sbbl
adc
addr16
ret
mov
lock
or
or
daa
xor
push
xchg
enter
outsl
dec
out
cmp
dec
push
push
lret
push
xchg
sti
lock
aaa
inc
inc
and
mov
sub
push
dec
adc
inc
mov
repnz
xchg
stc
dec
ja
xor
int3
stc
mov
inc
cmp
idiv
ret
inc
loope
leave
inc
movsl
loope
jnp
add
cmp
sbbl
addr16
xor
add
adc
into
mov
cmpsl
ss
lcall
testl
xor
lock
popa
mov
sbb
mov
cmpsl
rcrb
arpl
lods
movsl
fwait
repz
shrl
hlt
mov
lcall
int
sbb
ret
cltd
pop
dec
arpl
cld
xor
cs
sub
push
sub
or
mov
xchg
iret
mov
call
or
lds
or
or
rcll
ja
adcl
mov
pop
imul
jbe
push
xor
in
fistpl
mov
jg
lds
ja
iret
push
leave
shll
mov
rcrb
mov
daa
xor
sbb
xchg
xchg
and
in
push
xchg
and
int
in
ds
int
frstor
in
add
ficomps
mov
scas
nop
inc
dec
add
cmc
jb
lods
loope
dec
dec
pop
xchg
pop
sub
fistpll
popa
pop
aas
add
inc
enter
std
lods
jno
lds
jl
outsl
ds
lock
pop
xchg
sub
and
mov
inc
push
stos
adc
push
into
sbb
ss
inc
xchg
adc
enter
jecxz
cmp
out
int
mov
fimuls
or
add
add
push
lea
or
xchg
push
cmp
in
stos
xorb
leave
and
sbb
pop
xor
std
ja
movsb
outsb
push
xor
popa
icebp
cmpsl
gs
cmp
mov
and
dec
in
pop
add
movl
adc
outsl
fmull
cmp
or
xchg
fs
enter
insl
mov
sub
jp
imul
test
dec
or
xor
les
ret
stos
jno
clc
add
pop
adc
aam
push
enter
fwait
fs
divb
sbb
xchg
add
faddl
adc
jo
jecxz
push
add
inc
xchg
add
dec
cld
mov
clc
mov
or
mov
dec
cmp
and
subl
jnp
cwtl
jmp
inc
std
popa
inc
adc
cmc
sbb
clc
lea
and
stos
dec
add
or
cs
mov
loope
xor
and
jle
loop
mov
scas
jns
out
scas
jl
add
scas
decl
mov
mov
xlat
sub
jns
adcb
popa
call
push
cs
xchg
pop
das
imul
popf
mov
andb
test
push
push
enter
add
mov
or
mov
xor
and
dec
into
movsb
mov
popa
xor
mov
jbe
shl
sbb
cmp
jp
popf
pushl
scas
shlb
pop
mov
je
cmp
inc
outsl
mov
add
push
jno
test
rcr
xor
jp
out
dec
xor
xor
sub
cli
daa
inc
ret
adc
cmp
sbb
lahf
cwtl
dec
mov
xor
pushf
test
dec
add
xor
and
imul
insl
pusha
or
xchg
dec
fstpl
sarb
cli
jecxz
mov
frstor
add
mov
daa
in
add
adc
and
loopne
test
aam
repnz
sub
rol
hlt
dec
or
jne
pop
sbb
push
dec
aaa
lcall
pop
sbb
daa
jle
jnp,pt
sbbb
xlat
jmp
imul
jle
add
rcrl
mov
mov
out
fidivrs
jg
mov
jbe
mov
mov
or
pop
push
push
cmp
mov
sub
pop
jo
fdivl
jo
mov
cmc
sbb
dec
jnp
das
sti
inc
and
add
cld
pushl
add
dec
int
push
adc
sbb
cmc
xchg
xchg
movl
jnp
out
xchg
fs
ret
and
sub
les
inc
cli
pop
mov
mov
shr
push
das
jg
test
mov
pop
cmpsb
cmpsb
out
jae
in
jecxz
and
inc
push
ja
mov
inc
jl
jbe
xchg
mov
jmp
push
jmp
rcrb
sub
insl
adc
test
jbe
add
mov
outsb
out
test
and
add
jl
loop
repz
jmp
std
cmp
cld
test
pmaxub
js
xchg
adc
rclb
out
js
bound
movsl
fdivp
adcb
xor
jmp
pusha
icebp
call
mov
arpl
leave
push
dec
cld
aad
fimuls
insl
jbe
enter
mov
icebp
psrlw
cwtl
xlat
test
fs
gs
out
mov
xchg
fwait
cmp
stos
mov
cli
push
cmp
mov
sbb
stos
je
flds
insl
sub
out
adc
aam
xor
incl
add
fcomp
enter
add
xor
mov
add
fnstenv
adc
pop
lods
pop
test
jnp
xchg
test
pop
dec
jns
adc
insb
out
ja
ficoms
push
xor
cmp
or
stos
pop
dec
mov
mov
lds
inc
mov
es
jl
push
mov
or
cmp
or
out
xor
push
sbb
dec
jns
mov
movsb
inc
push
in
pop
dec
aas
xlat
jo
mov
or
mov
jmp
cmp
fs
pop
xor
call
mov
xchg
mov
mov
lock
and
movsb
jg
xchg
in
movsb
loope
loop
xchg
testb
mov
add
sti
sarb
jmp
xchg
or
xchg
mov
and
pop
sbb
sahf
roll
mov
jb
inc
lds
scas
lret
imul
fwait
jg
jnp
imul
fidivrs
mov
push
jmp
lods
jp
mov
jno
imul
pop
ja
int3
lods
loope
daa
push
lock
out
pop
and
lcall
jne
xchg
pop
ja
lcall
ljmp
jb
sub
mov
pop
inc
add
test
test
add
stos
test
incb
cmp
or
and
inc
dec
in
dec
push
push
add
mov
inc
mov
and
push
push
adc
mov
fldl
cmpsl
aaa
sti
mov
adcb
imul
push
sbb
imul
mov
and
xor
ss
filds
arpl
test
xchg
inc
bound
fdivrs
and
cwtl
xchg
cmpsb
out
add
fistps
push
xor
aaa
gs
test
xchg
sarb
mov
cmp
sbb
cld
out
sbb
push
pop
and
xchg
push
lods
cmp
out
scas
mov
mov
cmp
fidivrs
mov
xor
inc
imul
fdivrs
add
xor
jne
cli
cmc
xor
add
in
inc
pop
mov
or
cld
mov
dec
pop
cmpsl
es
test
xchg
out
dec
pop
movsl
movsl
aad
sahf
and
cmp
nop
mov
push
sub
push
inc
xor
xchg
cmp
out
je
mov
cwtl
loop
loopne
fidivrs
popa
jg
hlt
jle
add
js
ret
js
cmpsl
push
mov
mov
fstpl
jnp
pop
hlt
into
hlt
or
adc
lods
xchg
mov
pop
dec
add
and
out
mov
adc
nop
mov
call
lea
push
dec
insb
mov
faddl
adc
pop
out
aad
xchg
mov
cmc
clc
loope
jl
xchg
and
jo,pt
and
sbb
push
xor
hlt
ret
std
or
ficompl
ss
jmp
mov
fs
jg
popa
rcll
mov
es
cmp
jae
pop
clc
lods
loope
scas
lods
out
push
ja
push
jo
lahf
adc
loop
jecxz
mov
or
popa
xor
jmp
jle
push
sbb
aas
mov
cmovbe
xchg
fs
add
aas
xlat
push
pop
test
jp
cltd
pop
jne
jle
je
js
arpl
inc
test
jmp
idivl
nop
xchg
cmc
in
mov
cld
filds
pop
ds
fiaddl
fstl
movsl
cmpsb
or
push
adc
cmp
inc
int
mov
push
idiv
mov
cmp
into
das
push
jne
xchg
imul
test
push
and
cmp
std
inc
cmp
jg
ds
out
sbb
ljmp
into
mov
loop
jnp
xchg
fcom
dec
pop
xchg
hlt
push
inc
push
lods
jbe
hlt
dec
mov
bound
jae
xor
fwait
dec
ja
mov
cmp
pop
mov
xor
dec
mov
shlb
ds
add
jo
or
fnstsw
xlat
call
mov
adc
xchg
mov
nop
mov
aaa
push
lret
out
sti
aas
xchg
and
jg
mov
fwait
loop
mov
jp
and
xchg
sbb
lds
fsubl
add
fdiv
mov
iret
movsl
sbb
adc
and
xor
mov
push
addr16
cmpsl
flds
pushl
ja
ficoml
and
mov
popa
xchg
dec
test
int
adc
add
sub
add
xor
push
inc
out
ja
push
mov
inc
push
mov
xchg
les
push
sub
shrb
shrl
jecxz
pop
push
sub
ss
inc
mov
push
mov
stc
pop
out
mov
cmc
addb
cmp
ret
mov
mov
jae
outsb
loope
in
add
test
add
repz
mov
inc
push
rorb
pop
cltd
fbld
jae
test
lcall
sub
shrl
cmp
rcrl
adc
add
mov
sti
xor
repnz
cs
add
ja
ret
adc
subb
adc
btc
shl
xor
insl
jnp
aam
or
or
inc
or
stc
test
fs
loope
xchg
lahf
push
ljmp
jle
ficompl
arpl
int
xor
dec
jnp
xchg
imul
xchg
jmp
or
aaa
or
xchg
xlat
rorb
mov
xor
ja
push
cmp
mov
cmc
insb
jmp
add
mov
xor
mov
gs
and
fucomp
in
push
dec
mov
adc
lcall
pop
aas
mov
mov
dec
gs
dec
add
rorb
push
mov
xchg
fs
add
sbb
push
or
and
aaa
es
scas
push
mov
sbb
adc
cmp
xorl
in
or
adc
repz
addr16
cmp
jle
insb
mov
insb
das
sbb
mull
out
mov
and
decb
les
mov
shrl
push
ss
jmp
mov
push
xchg
pushf
cmp
add
adc
push
dec
cli
xchg
xor
fnsave
lret
test
mov
cmp
mov
or
pushl
stos
mov
inc
stc
fs
adc
pop
xchg
add
repnz
inc
lods
jnp
pushf
and
pop
bound
xchg
inc
outsl
mov
xchg
ljmp
stos
mov
mov
xor
lahf
rcll
inc
mov
pop
lds
aas
or
call
jecxz
mov
or
mov
mov
add
adc
in
cld
mov
stc
insb
xchg
mov
or
aaa
lods
pop
ds
dec
lods
dec
lock
nop
rcl
js
ffree
pusha
nop
in
sbb
sbbl
push
and
lahf
jnp
adc
test
or
dec
pop
in
out
out
or
cs
lret
cmp
cmp
repnz
frstor
push
push
fcomip
or
fidivl
loope
gs
fsubrs
sub
outsb
adc
inc
int
das
mov
incl
in
sbb
loop
push
dec
adc
sbb
pop
repz
pop
lret
shr
roll
cmp
loope
negl
inc
js
push
cs
aad
dec
push
fidivrl
in
push
adc
push
hlt
in
mov
cmp
sarb
insb
pop
ret
pusha
adcb
pop
int3
ret
mov
push
sub
cmpsl
jmp
sub
lcall
into
test
shlb
and
inc
bound
jne
shr
xchg
pop
mov
mov
sbb
andl
mov
sub
pop
dec
imul
adc
insl
scas
push
int3
add
and
jbe
cli
mov
andb
xchg
scas
or
dec
adc
and
and
test
enter
outsb
pop
sub
fcoml
adc
sbb
dec
push
xchg
stos
mov
xlat
mov
pop
pushl
divb
xor
jnp
or
cmp
sub
clc
adc
insb
mov
or
lret
loop
testl
add
adc
fstpt
out
xlat
es
mov
mov
or
mov
push
push
dec
and
repz
and
mov
shlb
popf
adc
icebp
data16
or
cmp
ljmp
mov
jmp
cmp
icebp
xchg
xor
addb
inc
cli
adc
andl
jp
mov
fnstcw
rolb
add
sbb
push
inc
popa
jae
cwtl
lret
daa
jg
cmp
sarb
loop
mov
xchg
cmp
inc
sbb
out
sub
xor
scas
push
inc
pusha
js
nop
xor
in
jns
daa
inc
sub
out
cmp
xchg
cmp
ljmp
push
test
lock
stos
sahf
cmpsb
ljmp
lock
in
cmpsb
dec
pop
mov
and
arpl
mov
lahf
add
jecxz
lahf
incb
dec
xchg
adcb
pop
mov
test
popf
loopne
loope
jns
pop
pusha
insl
notl
inc
pop
roll
sbb
aam
jae
xor
les
fmull
and
insl
test
push
insb
sub
xchg
mov
xlat
mov
cmp
dec
and
jae
stc
hlt
mov
mov
dec
adc
in
pop
movsb
daa
cltd
push
lea
and
aad
sub
stos
insb
lahf
popa
gs
fcomps
or
sub
inc
mov
and
outsb
pop
jb
xor
fisttps
xor
out
out
jbe
repz
xor
add
sbb
or
cld
mov
daa
out
out
cmpsl
dec
fsts
dec
cmp
fisubrl
pop
add
icebp
push
adc
pop
sub
mov
add
mov
xor
pop
inc
icebp
mov
and
dec
hlt
mov
push
testl
cmc
xchg
test
jg
mov
add
test
ret
or
xchg
insl
pop
call
sub
add
mov
ljmp
rcl
pop
and
sub
sbb
fnsave
inc
jae
or
and
adc
scas
mov
and
std
adc
mov
mov
imul
lods
mov
dec
sub
mov
inc
jle
mov
cmp
push
adc
in
dec
dec
mov
aaa
pop
pop
int3
inc
sub
sbb
and
sbb
cwtl
and
lret
call
jb
xor
add
push
jbe
pop
push
test
outsb
in
sub
je
lcall
fwait
repnz
test
xor
fdivp
fwait
sar
in
sbb
dec
in
int3
aam
repnz
adc
enter
fwait
rcl
mov
xor
es
sbb
xor
lods
enter
fdiv
in
popa
insl
adc
out
nop
out
ficoms
mov
into
aas
addr16
xchg
mov
inc
jns
bound
add
imul
mov
aaa
push
aad
mov
out
call
test
arpl
jnp
cmc
stos
pop
xor
dec
fcomps
das
iret
xor
and
sbb
mov
jae
rcrb
pop
push
dec
jo
push
shl
arpl
jno
mov
rcr
lods
add
pop
dec
and
addb
pusha
pop
add
fisubs
push
out
jecxz
and
imul
xor
dec
push
jns
mov
jbe
jg
fadds
push
outsl
jp
pop
mov
test
in
out
cld
test
fildl
add
rcr
in
movsl
aad
mov
inc
mov
test
jmp
sbb
loope
lods
fnstsw
loope
push
ror
adc
fstpl
add
pop
xchg
pop
dec
lods
inc
fwait
push
stos
adc
cmp
cli
into
mov
ljmp
jge
lock
out
fcmovnbe
js
jge
cmp
psubw
adc
loop
mov
sbb
cmp
imul
movb
je
dec
js
jmp
andl
dec
scas
sahf
insl
js
dec
push
push
fstpt
fdivr
movsl
in
js
pop
xor
mov
mov
pop
push
mov
scas
jns
lahf
aas
in
enter
lock
insl
mov
jb
dec
and
add
pop
push
aad
add
into
mov
mov
lret
cld
stc
jg
push
imulb
pusha
sub
jle
outsb
popl
xor
aam
push
xor
and
insb
cwtl
div
inc
test
jae
daa
mov
mov
add
jl
push
xchg
sub
jne
dec
jmp
push
xchg
icebp
adc
movsb
das
movb
push
sarl
ret
fmuls
movsl
or
lret
adc
fimull
fcmovb
xchg
fs
test
jg
rcrb
std
or
push
and
dec
jns
inc
por
dec
sub
repnz
xchg
or
nop
mov
mov
hlt
gs
movsl
mov
loop
in
jb
inc
xchg
sti
dec
mov
js
fcomi
add
ud1
sub
xchg
repnz
repnz
iret
jns
pop
push
and
rcl
inc
and
lret
pop
add
push
jl
or
push
mov
mov
out
ss
inc
aaa
or
or
arpl
jle
mov
out
jl
es
mov
push
cmp
xlat
mov
push
pop
adc
sarl
sbb
inc
int
mov
mov
incl
mov
or
and
loop
pushf
test
xor
loop
loope
stc
test
in
mov
pop
add
xor
rclb
enter
lods
in
jl
test
xchg
ret
jge
faddp
in
shlb
fisttps
mov
mov
push
mov
mov
lret
mov
cmpsl
sub
div
or
test
getsec
pop
insb
push
xor
mov
cmp
test
sbb
lock
xlat
xchg
dec
movsb
mov
pop
mov
lea
iret
jp
mulb
xchg
push
aam
stc
or
mov
das
and
repnz
stos
add
movsb
insl
pop
and
fadds
aas
mov
clc
mov
das
xchg
jbe
pop
lahf
jns
in
cmpsb
adc
jmp
es
cmp
mov
sarl
lahf
push
and
sub
cmp
inc
push
sahf
repnz
or
aam
iret
xchg
or
je
and
filds
mov
push
xchg
lock
leave
lar
outsb
adc
xchg
push
dec
mov
inc
mov
cmpsb
lret
cmp
mov
mov
pop
cmpsb
jl
call
lea
add
jg
inc
cmp
imul
xchg
mov
mov
cmc
dec
jg
ds
ds
hlt
adc
nop
xor
sub
push
sahf
or
jl
cltd
lods
inc
sbb
dec
arpl
int
xchg
pop
test
sbb
addr16
jnp
jb
into
mov
cltd
in
popa
jo
mov
ljmp
push
adc
adc
les
cmp
pop
pop
out
lcall
or
add
aas
clc
scas
push
and
mov
adc
sub
in
add
inc
test
or
dec
movsl
inc
test
in
mov
fldz
std
mov
enter
scas
movsl
sub
cltd
mov
dec
sub
jae
mov
sbb
cmpl
sub
jbe
adc
xorb
pop
sbb
mov
sahf
dec
inc
cmpsl
fwait
cli
cli
mov
xor
aad
sbb
iret
push
xlat
sbb
or
adcb
jge
jb
add
jle
and
cmp
rcl
movsb
dec
in
sarb
mov
push
scas
sub
inc
in
movsl
adc
push
cmpsb
and
push
sub
out
cld
ficompl
add
shll
ljmp
dec
sbb
mov
inc
loope
mov
sbb
lds
out
cmp
lea
mov
popf
inc
jbe
inc
dec
in
clc
je
inc
mov
mov
in
push
es
cmpb
sub
mov
dec
lret
in
xchg
testb
test
das
sub
das
jbe
sti
mov
fs
scas
shll
insb
cmpl
leave
dec
inc
insb
sbb
mov
jno
iret
xchg
xor
lds
out
push
stos
ss
std
sbb
add
popf
shlb
cli
ficoms
mov
movsb
pop
pop
add
jno
call
push
dec
push
push
mov
cli
das
lods
rcr
push
mov
jae
cmp
and
mov
mov
or
jge
pop
je
jl
scas
in
inc
jnp
jbe
pop
mov
aas
cmp
fldcw
divl
lret
es
push
mov
adc
jno
loope
dec
rcll
jle
pop
and
pop
fmulp
out
sub
addr16
out
in
loopne
sbb
or
pop
fld
or
dec
jo
insl
enter
or
push
je
popa
stc
add
xchg
xchg
daa
shlb
inc
jo
jge
cmc
fcmove
xor
mov
aam
ja
aam
sti
gs
adc
jle
divl
test
ds
cmp
loope
inc
mov
push
les
es
insb
jb
jbe
sbb
sub
imull
xchg
stc
adc
sarb
dec
pusha
push
adc
popf
cmpsb
fldcw
dec
into
gs
aad
mov
push
adc
mov
cmp
stos
imul
lea
cmpsl
xor
mov
inc
inc
mov
aam
or
call
and
pusha
subl
jnp
daa
push
sarb
mov
mov
sarb
cmp
int3
nop
aaa
sub
aad
xchg
mov
pop
sbb
mov
jne
stos
rorb
or
cwtl
inc
fs
shll
leave
das
sbb
mov
pop
popa
movsb
lods
in
pop
sub
sahf
ds
ja
imul
rorl
call
sbb
pop
fldt
pusha
rol
pop
je
cltd
push
decl
pop
add
pushf
inc
pop
or
push
adc
in
mov
imul
dec
lds
loope
loop
sbb
loope
jecxz,pt
pop
filds
mov
test
fadds
mov
xchg
xchg
mov
test
stc
int
push
lods
xchg
or
or
jae
jnp
mov
push
into
cmp
jp
or
ret
sub
or
pop
push
push
fucomp
mov
lea
push
xor
sahf
jecxz
push
es
or
jbe
xchg
enter
jmp
sub
jne
fistpl
sub
pushf
xchg
dec
jns
lods
popf
cmp
ja
jo
ret
rclb
mov
xchg
or
sbb
adc
xor
outsb
insb
cmc
jl
push
jne
push
lods
pop
repz
outsb
xchg
sub
pop
aam
fisttps
or
push
dec
je
or
in
je
mov
shll
dec
stos
inc
cmp
jae
lods
arpl
call
adcl
or
ljmp
mov
pop
loopne
mov
push
daa
ret
gs
mov
jns
add
xchg
xchg
enter
push
imul
sbb
idiv
mov
fistpll
outsb
jle
adc
add
rcrl
pop
xor
xchg
popf
adc
mov
xchg
sub
sahf
jge
sub
pop
jmp
cmp
fiaddl
add
xchg
push
mov
cmpl
setge
mov
jl
cmp
xchg
mov
sbbb
jle
fbld
loopne
xor
xchg
inc
sub
out
das
push
aad
cmp
and
mov
scas
clc
sahf
or
sbb
insb
test
cmp
into
test
and
cmpsb
scas
add
jb
test
das
lahf
mov
shrl
loopne
je
add
xor
test
xchg
ds
mov
pop
xor
jg
xchg
ss
mov
in
pop
jmp
mov
gs
xlat
push
imul
inc
mov
das
xchg
aad
xchg
push
popa
xchg
add
into
cmp
sub
das
mov
je
inc
shrb
xor
in
push
cmp
das
inc
cmp
sbb
sbb
sahf
push
icebp
pop
data16
out
orl
sub
jo
lret
into
xchg
lea
test
sarl
mov
sti
bound
gs
dec
fs
enter
cmp
addl
xchg
sti
sbb
jne
mov
xchg
and
push
lods
das
fistps
cs
fistpl
push
rclb
movsb
mov
xor
cmp
nop
loop
xorl
xchg
insb
fists
mov
lret
fldcw
out
mov
lods
cmp
pushf
hlt
cmpsl
lods
and
mov
and
cmp
mov
dec
addr16
xchg
imulb
cld
lcall
adcl
movntps
imul
in
push
icebp
pop
adc
in
outsb
mov
fmul
sbb
jmp
pop
les
aaa
popf
adc
rol
add
ss
shlb
in
pop
dec
xor
aam
loopne
pop
call
xor
mov
mov
addl
lods
and
aad
cmp
mov
jg
mov
xchg
pop
sbb
hlt
adc
jle,pn
clc
mov
popa
or
mov
mov
or
movsl
xchg
fldcw
jno
xor
insl
push
jle
mov
shll
incb
mov
mov
popa
pop
jecxz
ss
jae
mov
push
sub
mov
and
cmpsl
les
cmpsl
xchg
and
mov
mov
jns
pusha
and
mov
cmp
pushf
add
jmp
push
imul
xchg
mov
jb
pushf
imul
testl
adc
notb
lods
adc
shll
lods
cwtl
mov
lahf
adc
jecxz
mov
aad
lret
aaa
sub
inc
test
ljmp
ret
xor
clc
pop
pop
mov
lods
ja
sarb
xchg
divl
sbb
mov
or
fldt
pop
lahf
jmp
adc
pushl
mov
pop
cmpsb
and
mov
and
inc
lods
stos
fildl
out
inc
shll
pusha
dec
jp
test
jge,pn
pop
push
mov
loope
test
sub
std
call
push
stos
fstps
add
inc
fldenv
repnz
movsl
jl
inc
cmp
loope
inc
and
mov
fdiv
push
cld
add
test
jno
mov
std
das
shlb
mov
addb
int
cwtl
jnp
xor
stos
repnz
mov
mov
in
sub
dec
cld
clc
out
test
loope
into
popf
inc
addr16
pop
aaa
xor
sbb
icebp
aaa
adc
or
sbb
sub
push
lods
js
cmp
mov
cmp
xchg
in
lcall
inc
adc
ss
lods
dec
dec
xchg
in
fmuls
sbb
pop
lds
nop
inc
adc
cmp
icebp
and
mov
jno
sbb
fadds
rcrb
inc
xor
lahf
jae
pop
pop
xchg
sub
scas
sti
xchg
subb
add
lods
mov
xchg
arpl
mov
pushf
or
xchg
sub
jbe
into
imull
xor
push
int
cmp
loop
aas
jp
mov
lea
scas
and
push
ret
cli
icebp
insb
ljmp
ja
mov
cmpsl
push
xor
adc
adc
pop
je
xor
add
pop
leave
adc
jp
gs
xchg
mov
mov
jno
push
nop
add
repnz
scas
nop
xchg
jbe
movl
mov
cmp
hlt
and
jns
xor
fnstcw
jle
add
and
mov
cmp
sbb
bswap
cmpl
cmp
push
push
loope
data16
bound
mov
sbb
pop
popf
outsb
outsl
and
cmp
cmp
in
or
adc
mov
lods
push
fwait
icebp
insb
data16
rorb
lods
repz
mov
pop
fiadds
shll
mov
outsb
sar
or
int
lods
out
cltd
adc
movsb
movsb
int
hlt
pop
inc
and
outsb
dec
dec
cmp
mov
jmp
push
push
arpl
dec
mov
ret
dec
int
in
push
push
dec
inc
dec
sub
repnz
dec
leave
push
dec
int
mov
dec
pop
lods
mov
xor
jl
loop
scas
sub
jbe
aas
cmpsl
and
les
jge
adc
aas
mov
dec
movsl
xchg
ret
hlt
mov
lahf
test
cmp
or
in
insl
and
jnp
das
std
movsl
mov
sbb
pop
jp
inc
addr16
scas
adc
mov
mov
js
imul
jecxz
gs
int3
out
sub
pushf
xchg
repnz
cwtl
stos
cmpsb
fstp
aas
or
push
xor
mov
sbb
enter
push
fwait
mov
xor
fisubrl
xor
jecxz
fcomip
fsubrs
push
ror
int
sub
push
sub
lret
push
aad
pop
jno
push
pop
scas
sub
mov
mov
out
aas
cltd
jecxz
les
jbe
push
jbe
out
movsb
cltd
cltd
inc
stc
cmpsl
mov
or
mov
jmp
daa
popa
cmp
mov
push
xchg
adc
test
adc
xlat
add
lret
push
adc
xchg
xchg
aad
xor
test
sbb
pushf
int3
fcompl
mov
mov
scas
aas
lods
mov
cmp
dec
push
mov
or
loop
push
mov
inc
scas
aaa
dec
clc
je
xchg
pop
cmp
unpcklps
out
jbe
adc
sbb
adc
int3
xchg
sbb
rcrl
jg
das
mov
stos
repz
cmpsl
int
test
ficoms
std
or
outsl
xlat
test
jnp
adc
ds
mov
in
mov
cmpsl
cmp
pusha
inc
addb
mov
mov
sub
loop
cmc
mov
cmp
sbb
xchg
xchg
push
add
cmc
cmpsb
lret
popf
nop
or
dec
loope
adc
fstpt
mov
or
cli
test
mov
sbb
pop
adc
or
jns
xor
stc
cmp
and
repz
jl
add
xchg
fbstp
fs
jg
or
testb
dec
sbbb
fldcw
mov
sub
jmp
adc
fstps
pop
cmp
aas
mov
sub
andl
mov
stc
pop
lods
ficompl
push
bound
xor
mov
sbb
push
xchg
mov
push
mov
mov
mov
pushf
lret
jnp
test
inc
jmp
jle
push
mov
jne
inc
notl
jne
mov
cmp
iret
sbb
movsl
mov
sbb
ljmp
and
pop
cmp
movsb
push
data16
aad
and
inc
cmpsl
loope
add
divl
aad
gs
scas
clc
inc
test
adc
loopne
addr16
std
xchg
mov
xorb
mov
mov
xor
xor
pop
dec
pushl
sub
adc
add
idivl
xchg
and
pop
movb
push
mov
inc
mov
ljmp
sub
mov
loope
dec
push
insb
imul
xor
call
sahf
dec
jnp
imul
xchg
scas
movsl
pop
mov
mov
fisttpll
outsl
push
cmpsb
clc
or
xor
or
sbbl
pushf
repz
loope
sub
add
test
div
inc
jp
mov
and
add
scas
subb
lods
scas
and
fmull
fsubrl
ret
or
fsubs
or
iret
xchg
pushf
stc
sbb
and
mov
lods
cmp
pop
hlt
xchg
in
mov
loope
mov
mov
push
jne
xchg
fldl
xor
pop
sub
mov
or
and
arpl
or
imul
ficoml
in
adc
sbb
adc
adc
mov
in
xor
mov
mov
add
xlat
stos
mov
fdivrs
cmpsb
add
outsb
movsb
inc
jnp
fisubl
rol
cmp
mov
jo
add
lods
bound
push
cmp
ja
add
gs
inc
sub
sti
cli
xor
es
sub
arpl
sbb
xlat
jp
sub
pop
rcr
out
mov
push
pop
into
stos
push
xchg
cltd
add
add
lock
fdivr
ret
cs
loope
scas
xorb
pop
adc
jp
pop
fsubs
jnp
sub
sub
cwtl
sub
pusha
push
jb
iret
inc
or
movsb
xor
adcb
out
jns
pop
out
jbe
shlb
repnz
repnz
inc
jae
dec
outsb
stc
fmuls
jg
pop
sub
push
mov
cmc
test
loop
out
sbb
xor
xchg
sub
loop
fstpt
iret
dec
jno
rorl
ret
sub
inc
ljmp
stos
aaa
sbb
das
adc
addps
mov
scas
dec
aam
push
and
lock
xor
pop
xor
add
ret
inc
pop
lea
in
mov
push
iret
cmp
hlt
mov
leave
les
mov
in
subl
add
lea
xlat
into
adc
push
add
dec
push
stos
jg
call
lcall
mov
ror
mov
add
sbb
push
pop
repnz
mov
xchg
sub
mov
clc
sub
pop
mov
lcall
sub
adc
insl
adc
jo
xchg
sbb
sbb
inc
add
adc
add
add
jbe
and
adc
sbb
inc
loopne
mov
xchg
mov
adc
insl
inc
pop
outsb
fs
pop
lret
setg
xchg
xor
repnz
push
lods
cmpsb
cmp
mov
push
popf
shll
mov
push
popf
outsb
inc
in
add
mov
sub
mov
add
fwait
dec
adc
pop
lock
push
movsb
arpl
pop
stos
jno
cmp
xchg
pop
cmc
loopne
pop
pushf
ljmp
mov
in
push
push
sub
ds
test
xchg
jmp
out
mov
testl
mov
add
aaa
xor
mov
or
je
addr16
stos
inc
roll
push
or
or
sub
sbb
jecxz
push
ret
add
xlat
fldl
arpl
adc
dec
push
jnp
into
mov
shlb
xor
push
inc
sbb
pusha
pop
pop
popf
or
xchg
test
fstpt
sub
dec
push
mov
and
loop
push
dec
xor
leave
dec
push
and
outsb
fldl
or
sbb
sbb
inc
aad
xor
enter
stc
ficoms
pop
cmc
xchg
out
mov
push
daa
test
pop
int
xchg
lahf
mov
insb
pop
nop
dec
or
add
jmp
inc
sbb
lods
lea
sub
adc
cmp
and
pop
xor
shl
inc
sahf
stc
and
mov
ficoml
mov
pop
ja
xor
out
pop
aam
sbb
ds
sub
pop
fidivl
pop
clc
dec
cmp
push
addr16
mov
icebp
cmp
mov
mov
push
pop
add
ficoml
xchg
mov
mov
push
ficoml
mov
movl
sbb
les
das
inc
ret
fisttpl
mov
xchg
jmp
mov
add
shrl
jno
pop
push
cmp
outsl
rcrl
mov
or
xor
sbb
push
cmc
fsubr
adc
movsb
out
rolb
loope
fnstsw
shlb
mov
outsb
xor
xchg
add
add
or
xchg
and
in
fwait
sbb
imul
xor
mov
shrb
pop
inc
pop
pop
mov
hlt
popw
push
stos
mov
add
repnz
insb
cmp
cmp
inc
pop
addb
and
mov
pop
adc
adc
mov
sarb
adc
fidivrs
jns
mov
orb
add
pop
aad
and
into
in
push
loopne
dec
xchg
in
in
rclb
call
add
push
mov
movb
out
adc
lds
stc
mov
ljmp
pusha
or
divl
sahf
add
and
sahf
xor
push
nop
cmp
mov
mov
pushf
jg
and
inc
outsb
imul
fisubrs
loope
aaa
cmpsl
inc
push
push
mov
pushl
adc
call
push
in
sbb
mov
mov
fbstp
mov
lret
stos
push
sbb
ds
cmp
inc
andps
and
push
movsl
repnz
cmp
aam
add
adc
push
sbb
add
mov
or
test
inc
sbb
mov
in
movsb
std
subl
mov
mov
lcall
lock
neg
je
out
test
lds
test
sub
shll
popa
outsb
movsl
push
notl
int3
pop
sub
negl
xchg
push
mov
dec
jnp
adc
pushf
push
fcomps
sarb
lods
aas
mov
mov
dec
leave
mov
out
out
pop
mov
pop
test
pop
insl
pop
mov
jge
hlt
mov
xchg
mov
jmp
cld
gs
dec
sti
push
mov
popf
lret
test
loope
pop
stos
stos
push
dec
cbtw
shll
jo
push
push
test
mov
sbb
jmp
adc
scas
xchg
stos
xor
pop
xchg
jmp
add
outsb
out
cmp
mov
xor
mov
push
inc
pushf
cmpsb
test
out
in
sahf
push
mov
fisttpl
pop
push
mov
xor
dec
pop
ja
dec
addr16
sbb
jmp
xor
xor
mov
mov
jle
and
ss
stc
fsubrl
sti
dec
sub
xchg
adc
cwtl
enter
mov
pop
xchg
add
cmpsl
dec
xor
adc
outsl
pop
cmpsl
lret
outsl
push
or
pop
pop
test
cs
mov
lahf
lds
mov
adc
popf
in
mov
push
jns
test
sbb
or
cmp
sub
add
jecxz
es
inc
dec
and
fwait
sbb
jno
xchg
cmp
std
bound
scas
data16
xchg
in
fisttps
add
data16
xchg
cmp
jo
mov
jno
adc
es
pop
mov
sbb
sub
insb
mov
sub
xchg
pop
lds
add
or
rol
movsl
xchg
cmpsl
movsb
pop
les
push
lahf
adc
jns
jp
xor
adc
jns
repz
jne
loop
insb
and
int3
addl
mov
jl
pop
imul
mov
subl
pop
inc
adc
icebp
xchg
pminsw
adc
int
sahf
cltd
cmp
mov
sbb
add
xchg
js
or
mov
mov
and
push
jmp
mov
push
inc
push
inc
rol
fmull
bound
jns
cmpb
shlb
rcr
sub
mov
imul
fwait
addr16
js
xor
dec
mov
mov
pop
xlat
sub
lods
xlat
shlb
sub
push
or
or
movsl
sti
lcall
insl
push
addr16
mov
pop
arpl
mov
ror
mov
shrl
repz
jmp
xor
cltd
push
sub
aas
pop
pushf
or
xchg
jl
jmp
sub
mov
aad
mov
mov
push
push
or
pop
adc
mov
nop
xor
pop
scas
div
sub
mov
ret
lcall
mov
leave
icebp
mov
mov
jae
pop
or
out
outsb
mov
xchg
in
push
aaa
lahf
mov
in
push
mov
lcall
repnz
inc
ja
in
aad
add
mov
inc
jmp
pop
inc
insb
ja
adc
add
dec
and
inc
cmp
mov
push
ss
test
test
pop
rclb
dec
mov
mov
mov
mov
push
jb
ds
mov
lock
lahf
jno
jmp
stc
push
loope
in
xchg
push
mov
aam
das
negl
iret
xor
scas
cmp
inc
aam
testl
mov
loopne
cmpsl
and
dec
imul
ficompl
fucom
add
inc
test
addr16
mov
push
sbb
pop
add
out
mov
jo
dec
addb
inc
nop
test
push
xchg
cs
cli
insb
fcmove
fcomps
fsubs
incb
mov
cmp
sub
push
push
into
mov
ret
rcrb
outsb
sub
mov
iret
shlb
jge
push
movsb
out
xor
sahf
int3
xchg
movsl
fistl
in
stc
jae
inc
daa
pop
mov
aaa
enter
notl
sbb
jmp
pop
mov
fdiv
pop
mov
insl
mov
lea
pop
push
shr
mov
lret
mov
test
mov
jmp
pop
cmp
dec
push
ror
mov
sub
xor
push
imul
mov
loope
sbb
les
dec
inc
or
das
cwtl
lds
es
and
sarl
test
xchg
dec
adc
dec
pop
test
mov
sbb
std
lret
iret
cmp
in
pop
cltd
cld
mov
and
xor
inc
das
adc
pushf
stos
fmul
lea
in
ret
stos
shll
or
sub
subl
out
mov
daa
jae
cmpb
adc
inc
js
add
insb
lock
xlat
into
out
push
mov
pop
out
jmp
jmp
push
fnsave
ret
mov
lahf
adc
out
pop
andb
add
inc
push
arpl
pop
push
addr16
ja
ja
mov
mov
sub
cmp
aam
xchg
lahf
lods
cmp
jae
out
pop
sub
repz
in
fstps
mov
and
lcall
mov
subl
lcall
push
xor
repnz
pop
out
pusha
movsl
xchg
jo
inc
clc
adc
or
leave
and
sub
cmp
jo
idivl
pop
scas
push
popf
imul
adc
arpl
and
jmp
pushf
outsl
dec
filds
in
in
mov
out
cwtl
mov
jl
jb
pop
jo
cmp
and
fadds
loope
cmp
jno
leave
pop
add
sub
and
dec
pop
shll
fdivs
ljmp
into
or
movsl
add
adc
or
ss
dec
xchg
and
lock
mov
aaa
xchg
arpl
movsl
pop
mov
iret
cmpsl
shlb
sbb
rcrl
push
imul
inc
call
in
inc
lods
inc
and
pop
iret
out
dec
xor
and
cmpsl
push
jle
push
jno
gs
scas
in
xor
pushf
xchg
lahf
jmp
mov
out
arpl
cmp
popfw
test
rcll
fmuls
mov
mov
jne
mov
arpl
adc
or
pop
pop
cld
je
xor
sub
jae
int
call
je
push
popa
popa
fwait
bound
pop
lea
mov
sbb
scas
in
lods
aaa
inc
mov
lods
lahf
lea
xor
jne
stos
lods
out
lret
stos
cmp
pop
jmp
inc
mov
fs
ljmp
mov
jae
in
add
neg
push
and
cld
pop
pushf
sub
repnz
mov
lds
bound
jnp
sub
test
out
stc
or
lods
push
pop
lods
lcall
sbb
int3
jno
fwait
jbe
xor
in
mov
lock
fstl
mov
fs
clc
sub
jg
not
mov
mov
shl
ret
sbb
inc
enter
adc
mov
fsubrl
sbb
sar
aam
call
pop
push
xchg
cwtl
inc
jno
test
push
shlb
sub
cltd
pusha
scas
push
subb
test
xchg
dec
inc
in
int3
and
dec
hlt
insl
inc
int3
call
sarl
data16
ror
mov
cmc
aaa
ss
icebp
lcall
xor
mov
cmp
lea
out
clc
sub
sub
mov
iret
or
aad
push
aaa
pop
xchg
jbe
das
sub
cli
inc
dec
filds
loope
out
add
and
cmp
inc
add
jg
sarl
jg
loopne
jg
xchg
jbe
movsb
cmp
ffreep
mov
insl
or
sub
push
lds
out
sbb
push
ja
push
hlt
or
fwait
dec
pop
loope
jo
xlat
xchg
stos
jno
insl
xchg
fistl
mov
popa
sbb
les
out
ja
inc
fs
imull
ss
xor
and
scas
jno
mov
push
adc
jnp
cli
xor
mov
hlt
mov
mov
mov
scas
iret
jns
dec
sbb
enter
popf
xor
push
sub
repnz
sbb
int
mov
dec
bound
mov
in
int
add
mov
mov
js
popf
gs
sbb
fstpl
das
xlat
shlb
add
pop
dec
hlt
mov
pop
or
push
push
cmp
push
outsl
scas
push
cmp
xchg
sbbb
ja
loope
mov
cld
xchg
gs
cmp
arpl
push
pop
ret
mov
jns
add
rcl
fdivs
out
dec
fcompl
in
aaa
jecxz
sub
in
ffreep
or
adc
lret
roll
cmpsl
push
push
imul
test
fst
fnsave
popf
cld
xchg
inc
loop
mov
push
icebp
dec
mov
cmp
mov
dec
sub
lods
cmc
mov
or
aaa
xchg
gs
fcmovnu
mov
cwtl
nop
xor
bound
popa
mov
cs
stos
xor
jb
jp
mov
cwtl
sbb
xchg
aam
xlat
popf
adc
loopne
add
sub
sub
faddl
sub
mov
nop
xchg
push
movsl
cltd
xchg
xor
mov
stc
mov
add
js
in
xchg
add
inc
in
outsb
loopne
sub
add
bound
jmp
in
xchg
or
orb
fs
sti
call
pop
bound
adc
jmp
inc
lret
cmc
out
mov
push
jmp
mov
dec
movsb
adc
dec
outsb
add
pop
shrb
add
daa
jae
arpl
or
jns
pop
fsubs
push
les
es
fwait
rcll
hlt
loop
mov
add
ret
fsubrl
rorl
sar
data16
les
xchg
xor
pushf
mov
sub
rolb
xor
es
dec
push
mov
dec
jnp
push
sbb
loope
stc
jo
mov
nop
mov
iret
jae
xor
xchg
lret
pusha
popa
pop
inc
pop
push
lcall
jno
xlat
xor
add
dec
movsb
pop
push
mov
pop
ds
adc
out
imul
loope
gs
cmp
scas
bound
add
leave
cmc
jge
jl
jnp
loop
imul
leave
arpl
ret
loope
sbb
xchg
pop
cs
in
cmp
or
clc
dec
dec
xchg
fstps
or
fst
jg
mov
xor
dec
adc
pop
mov
scas
cli
aaa
ss
cmp
stc
in
daa
ljmp
leave
lahf
pop
mov
adc
xor
inc
cmpsb
or
adc
xchg
sub
lods
or
xlat
mov
popa
pop
dec
jae
and
mov
pop
pop
movsl
movsl
hlt
pop
lock
add
lods
enter
jno
or
xor
leave
jl
jge
ret
sbb
inc
jle
pop
cmp
enter
add
data16
lea
cmpsb
sarb
jne
pop
or
addr16
adc
xor
and
xor
cmp
ret
rorb
lods
mov
fdivl
dec
sbb
shll
sahf
lret
jbe
mov
lods
xor
test
rcrl
ret
fs
sub
pop
hlt
enter
adc
test
aam
test
arpl
pop
mov
test
call
jns
xchg
test
xchg
sbb
adc
xlat
or
inc
xor
out
sbb
jns
mov
dec
sbb
push
inc
or
xor
mov
add
decl
cltd
cmp
mov
dec
out
cltd
pop
pop
decl
aas
leave
sar
loope
and
jmp
mov
jecxz
xchg
and
addr16
sbbb
in
andl
in
mov
sbb
shl
add
movsl
clc
pop
jmp
in
aad
bound
pop
lret
pop
dec
fildl
dec
xor
cli
scas
pop
clc
add
lds
or
test
cmp
cwtl
pusha
loope
push
imul
jne
lcall
and
popf
bnd
xchg
inc
sub
cwtl
sub
sub
scas
repnz
test
mov
dec
or
cmp
mov
arpl
mov
test
dec
sbb
cmp
pop
mov
lahf
dec
sar
or
aaa
in
shrl
sub
leave
stos
add
pop
mov
ficoms
mov
adcb
xor
mov
cmp
jl
cmp
es
push
in
repnz
scas
mov
cltd
jbe
sub
clc
orb
jnp,pn
shrl
pop
aam
enter
dec
adc
push
imul
repz
arpl
mov
jp
inc
adc
insb
and
sub
nop
rclb
mov
loopne
xlat
jl
cwtl
mov
ret
sub
std
cmpsb
je
lret
dec
mov
or
dec
and
or
in
popa
and
lea
in
lods
cltd
xchg
push
loop
mov
mov
rcr
cmp
jnp
sub
inc
sub
test
loop
je
pop
sarl
xchg
push
mov
and
ja
cltd
subl
xor
mov
pop
mov
xor
in
cmp
add
fnsave
subl
icebp
dec
sub
decl
xor
sbb
mov
es
xchg
js
sub
rcrl
sti
lods
add
jne
push
and
adc
fimuls
in
je
mov
adcb
fs
aam
fwait
push
stos
xchg
hlt
mov
lods
adc
rol
or
lret
test
mov
enter
loope
shr
popa
jl
cmp
imul
xchg
cmp
and
mov
sub
cmp
xchg
mov
fnstcw
sub
mov
aaa
lret
incl
sbb
test
lret
jp
push
push
cld
jbe
rol
cltd
mov
or
dec
lods
xlat
inc
fdiv
xchg
dec
in
mov
mov
fstpt
shrl
mov
xchg
scas
loopne
xchg
ss
lock
cmpsb
das
iret
imul
and
add
cmp
jecxz
hlt
dec
add
xor
push
inc
mov
lock
mov
stc
in
push
adc
clc
jbe
jmp
popa
sbb
pusha
dec
cli
rol
shlb
push
and
pop
test
pop
orl
adc
xchg
inc
stc
testb
stos
shl
mull
ds
or
xor
jae
je
lods
jo
roll
jecxz,pn
push
and
and
sti
hlt
mov
mov
and
insl
shlb
loope
add
sub
mov
cwtl
movsb
cltd
push
jecxz,pt
jl
in
jne
insb
or
push
scas
into
mov
jg
push
mov
push
xor
pop
data16
clc
addb
cmp
repnz
cli
lcall
pop
int
std
lods
pop
pop
sbb
push
cs
mov
pop
sub
mov
adc
push
sbb
fs
adc
jg
bswap
jo
imull
ljmp
lret
sub
lret
cmp
xchg
push
pop
loop
insl
insl
push
fwait
jo
leave
pushf
xchg
into
idiv
sub
cmpsl
pop
mov
pop
inc
sub
xchg
or
push
xor
mov
dec
cmpsl
jp
or
test
push
out
test
stos
mov
repz
inc
inc
mov
sub
ja
mov
div
and
lock
adc
fists
mov
push
inc
ds
fwait
lds
dec
sbb
mov
mov
add
pop
call
push
add
ret
sarl
addr16
or
into
movsb
sub
xchg
out
push
movaps
xchg
fiadds
jp
sbb
jno
mov
xchg
add
sahf
push
dec
lds
xor
mov
fcmove
call
inc
mov
popf
inc
mov
mov
adc
mov
mov
jp
ss
mov
push
outsb
cmp
push
sbb
push
mov
push
loope
outsb
pop
mov
push
sub
lret
in
test
jns
shlb
xlat
fwait
stos
xchg
jl
or
adc
add
stos
std
xor
subb
pushf
out
add
mov
and
sub
rolb
sbb
push
repz
and
test
or
push
pop
scas
inc
xchg
stos
hlt
sub
out
lcall
inc
pusha
jp
sbb
fnstenv
lea
xor
xchg
and
test
lods
dec
sub
cld
ss
popa
jge
cmpsl
cmp
jo
jbe
pop
lea
or
sti
lods
push
dec
pop
ljmp
and
and
jp
jb
es
sub
jbe
aas
xchg
jne
mov
or
mov
inc
stos
mov
shr
mov
dec
xor
fcmovbe
mov
leave
notb
push
inc
rol
das
pop
lret
je
outsl
add
jnp
idivl
shrb
mov
or
daa
pusha
jge
xor
dec
jg
adc
cs
insl
adc
mov
xchg
lret
xchg
cli
dec
jb
shrb
arpl
scas
bound
pusha
mov
pop
adc
jp
es
and
scas
cmp
and
xchg
pop
aad
es
adc
xchg
inc
add
mov
test
or
inc
pop
dec
loopne
int3
or
push
mov
das
jle
popa
in
pop
lahf
push
pop
je
imul
cmc
push
xchg
mov
test
push
xor
cltd
xchg
cmp
xor
out
test
lods
mov
mov
cltd
cs
mov
aam
adc
inc
dec
and
ret
into
dec
xchg
ljmp
cmp
outsl
cli
fldl
movsl
test
hlt
popf
ret
into
repnz
mov
or
add
adc
add
dec
hlt
out
test
push
jo
jns
dec
mov
cmpsl
fldl
int
out
mov
jle
fnsave
adc
pop
ret
insl
ret
cmp
push
in
loopne
dec
dec
pop
mov
jne
scas
and
cmp
or
add
rorb
mov
daa
imul
jae
fbstp
repnz
mov
fstpt
lret
lahf
pop
inc
ds
mov
jns
lds
loope
cmp
gs
jo
test
mov
cmp
lods
jae
and
cmp
pop
pop
sub
jecxz
xor
sti
in
or
push
jo
outsb
ljmp
aas
push
int
aas
push
or
and
dec
jns
movsl
out
xchg
mov
jae
pop
inc
pop
jo,pt
jnp
popa
sahf
insl
inc
xorb
mov
and
int
cld
movsl
xlat
rcll
mov
roll
inc
mov
mov
dec
pop
bound
fmul
lods
stos
movsb
push
fs
sarb
cmpsl
xchg
mov
je
and
sub
pop
stos
into
outsb
mov
push
ret
mov
mull
lret
out
call
xchg
mov
jmp
dec
pop
xchg
pop
std
js
leave
or
xchg
repnz
in
movsb
loope
sbb
or
cwtl
je
mov
fistl
pop
inc
scas
jle
push
out
ds
push
mov
jno
fstp
mov
jo
and
iret
icebp
cltd
out
out
jns
mov
xor
sub
push
xlat
adc
repnz
popf
mov
and
push
dec
xchg
xchg
cmpb
pcmpgtd
nop
dec
mov
xchg
sbb
pop
jno
mov
sub
lret
rcll
pop
pushl
es
mov
pop
mov
push
aad
outsb
repz
aaa
cmp
test
notl
mov
leave
loopne
bound
mov
lret
cmp
jnp
push
xchg
push
inc
daa
into
mov
fsubl
push
adc
cld
inc
lods
dec
xchg
loopne
fdivrs
lea
xor
push
push
add
cltd
pop
pop
or
test
jecxz
mov
fmuls
inc
cmp
mov
daa
lahf
jae
data16
cwtl
movsb
mov
and
mov
xor
stos
cmc
push
xchg
enter
je
mov
ljmp
into
adc
hlt
rorb
imul
decl
pushf
cld
pop
subb
xchg
cli
mov
out
pusha
xor
xor
dec
mov
push
cli
xor
shrl
sbb
notb
lods
xor
jle
in
fbstp
gs
cld
bound
fsubrs
sub
mov
call
and
test
lahf
faddl
mov
jl
push
addb
pop
or
or
test
popf
fwait
mov
cs
inc
dec
xor
xchg
mov
orl
cmp
mov
decb
ljmp
fildl
inc
push
lret
cmp
cmpsl
loopne
hlt
jne
add
arpl
sub
nop
out
xchg
pop
sahf
pop
out
scas
or
rol
dec
dec
pop
or
dec
test
or
mov
push
push
mov
dec
or
not
inc
rolb
xchg
repz
cld
js
lock
hlt
xor
mov
mov
and
repz
xor
test
outsb
pusha
lods
mov
mov
ljmp
sbb
bound
jl
ret
inc
inc
xchg
mov
and
mov
lds
scas
or
mov
mov
pop
jmp
aad
push
rolb
daa
fwait
pop
rcr
scas
imul
xor
lods
xchg
stos
outsb
data16
xchg
push
lock
andb
stos
enter
fwait
lcall
movb
sub
testl
dec
loopne
fdivr
gs
decl
or
imulb
xchg
add
stc
out
adc
cmpsb
add
adc
sarb
xchg
and
xchg
pop
xor
jp
mov
or
movsl
rcr
orb
fimuls
stos
rcrb
shrb
mov
jno
clc
cs
lret
xchg
push
or
mov
lea
imul
cld
pop
pusha
push
mov
add
sahf
sub
std
dec
ret
in
jb
cmovs
negl
adc
or
in
nop
cld
mov
sbb
adc
sahf
push
xor
aas
jne
movl
cmpl
mov
je
pop
inc
movl
jmp
inc
jbe
lcall
fmull
cs
ja
movsb
mov
idivb
addb
xchg
aas
mov
sbb
out
enter
dec
mov
sub
push
mov
add
ss
sub
pop
pusha
inc
ss
in
fwait
test
daa
mov
test
sub
insl
mov
je
ret
outsb
aas
cmpsb
fistps
into
xor
addl
pop
mov
mov
inc
cmpsb
gs
sub
and
inc
add
lea
fldl2t
xchg
fs
sub
pop
pop
std
mov
mov
das
insb
mov
lock
fstpl
ja
roll
in
dec
sahf
mov
and
mov
out
fstps
lret
xchg
mov
sahf
js
js
shrl
popa
nop
add
into
push
push
movsb
insb
repz
outsl
mov
rcrl
ror
dec
mov
jno
sub
loop
jno
jp
stc
aam
mov
xor
sbb
iret
xchg
cli
adc
or
mov
gs
icebp
xorl
pop
or
lock
mov
test
das
fcmovnbe
jmp
mov
out
and
push
int
add
xor
and
fists
daa
dec
in
stos
adc
or
sbb
ja
dec
test
imull
jle
mov
adc
ljmp
repz
lret
xchg
cmp
sbbl
xchg
pop
je
ret
sbb
inc
mov
push
mov
add
ss
into
dec
out
pushf
cwtl
sub
cwtl
push
cmpsl
fwait
push
or
stc
xchg
jge
popa
xchg
fbld
sahf
dec
sub
sbb
nop
cltd
jmp
push
int3
jns
inc
shlb
inc
mull
xlat
xor
jo
testl
mov
sbb
mov
adc
lods
stc
clc
mov
popf
add
xchg
mov
rcrl
mov
mov
lahf
jbe
clc
ds
jae
push
aaa
popa
stos
lret
lcall
fs
rolb
xor
adc
add
lret
mov
ss
sub
push
add
push
loope
dec
lock
aad
pop
sbb
inc
cmc
adc
dec
cmc
fs
loopne
or
imul
push
scas
xchg
test
in
sarb
mov
pop
push
mov
or
cmpsl
jb
sahf
adc
outsl
into
sbb
jg
jo
call
cmp
adcl
or
cld
cmpsb
mov
pop
rol
call
lret
addr16
pop
mov
repz
cmpsb
inc
lods
add
lret
adc
pop
faddp
movsb
inc
sub
imul
mov
pop
sbb
sub
inc
stos
call
lret
xchg
ja
pushl
jo
imul
jae
add
andb
arpl
jnp
clc
cmc
push
leave
add
xor
gs
add
dec
xor
subb
aaa
andl
lea
ror
pop
push
das
jg
insb
aaa
ss
sub
pop
sub
movsb
push
cmc
aam
inc
sbb
lock
je
testb
pop
and
adc
inc
popa
xchg
outsl
movsl
scas
lock
in
lock
cwtl
mov
ds
test
lret
adc
jp
push
adc
sub
arpl
jmp
pop
outsb
clc
xchg
aam
dec
out
shrl
js
push
pop
lcall
push
inc
and
movnti
lock
jo
or
rorl
sbb
xchg
cmp
aad
sub
ljmp
cli
add
push
pop
lock
push
arpl
rclb
data16
stos
sub
lret
xchg
fldenv
jle
adc
jg
rcll
mov
xor
out
or
addb
ret
ja
js
sub
and
push
xchg
rorb
mov
fsubs
adc
jg
adc
icebp
int
sbb
pop
pop
jnp
or
stos
cmpsl
cmp
cmpb
outsb
in
adc
or
push
stos
sbb
aad
les
xchg
xchg
out
cmp
cmp
add
test
inc
test
fidivrs
push
fwait
sbb
xor
and
mov
clc
dec
aaa
lcall
movsl
jmp
imul
gs
cs
mov
dec
fwait
cmp
scas
fstps
loope
inc
push
dec
cld
mov
dec
jecxz
jb
add
aam
adc
jbe
inc
xchg
adc
push
test
mov
push
add
pop
imul
mov
mov
sbb
fidivl
mov
xlat
pop
into
sub
inc
insl
lret
loopne
test
leave
jle
incb
xor
scas
incb
cmp
sub
push
xchg
pop
lock
sbb
dec
lods
jecxz
fs
xchg
popa
repnz
dec
inc
cmp
stos
in
inc
inc
cs
lods
outsl
pusha
pop
lds
lds
rolb
inc
into
addl
and
movsb
mov
je
in
xor
rolb
mov
xorl
jmp
mov
inc
fbld
push
jecxz
push
subl
cmp
sbb
mov
mov
out
roll
dec
push
xchg
sbb
mov
leave
sahf
push
mov
sbb
sub
out
sub
mov
add
jo
mov
lods
in
sahf
or
aad
std
dec
enter
xchg
add
addb
ljmp
rclb
push
dec
fldz
or
outsl
push
js
sti
test
add
outsb
pop
mov
mov
subb
test
fdivr
jle
and
repz
nop
add
mov
nop
mov
dec
repnz
add
xchg
mov
fmul
push
addb
adc
fwait
add
adc
test
jno
aas
popa
cmpsl
xchg
sub
inc
ja
pop
push
out
adc
jo
cmc
into
jb
jl
fstl
lods
jbe
es
fists
mulb
pop
mov
and
repnz
into
loop
shlb
jno
push
bound
push
xchg
sahf
adc
pushf
lret
aaa
pushf
outsl
iret
stos
test
and
in
test
cld
add
ds
mov
dec
in
push
mov
lods
mov
add
and
jle
loopne
dec
adc
out
adc
mov
sub
movsb
mov
divl
and
jmp
cmc
jno
add
or
xlat
pop
xor
mov
loopne
mov
cmp
sub
pop
rol
or
dec
bound
adc
je
int3
lret
mov
jbe
stos
mov
nop
dec
movsb
and
pop
pop
shrb
shl
lea
fsts
sbb
mov
xchg
xor
nop
jp
add
sbb
testl
test
fldl
and
and
insb
imulb
pop
push
mov
cmp
xchg
xor
push
push
dec
pop
jo
pushf
adc
je
aas
push
push
ss
stos
mov
mov
iret
inc
ljmp
inc
daa
les
nop
into
imul
push
imul
rcr
pop
push
mov
mov
xlat
sub
dec
push
daa
mov
and
fimuls
dec
mov
jo
aas
cmpsb
nop
mov
pushf
je
lahf
or
nop
lock
out
test
xchg
in
add
test
sub
mov
or
mov
xchg
adc
pop
push
mov
gs
cmovne
sub
pushf
mov
xor
mov
adc
mov
pop
pushaw
cmp
lods
jmp
sbb
lret
jbe
xchg
repz
inc
xchg
loopne
cmpsb
xlat
push
in
and
cmp
and
popf
fsts
mov
adc
adc
movsb
ror
push
sbb
xor
movsb
dec
sbb
or
jecxz
sub
jno
ja
je
call
pop
sub
in
push
sub
std
enter
and
movb
dec
sahf
cmp
jo
add
incb
test
jno
mov
sbb
test
jo
xor
add
and
aam
fnsave
and
jb
jne
adc
mov
mov
sarb
pop
pop
inc
cmc
lret
aas
add
sbb
mov
pop
call
fndisi(8087
sub
pop
pop
mov
lahf
push
ds
jae
sub
popa
sbb
lcall
imul
scas
shll
cld
xor
clc
inc
push
xor
and
jbe
jle
mov
test
das
cmp
xchg
repnz
fsts
xchg
mov
lret
sbb
xbegin
aad
mov
xchg
push
int3
clc
dec
fldl
mov
cmpsb
mov
or
out
xchg
int3
sbb
mov
int
xor
loop
sti
lods
sbb
xor
inc
bts
out
loopne
data16
sub
orl
out
repz
pop
mov
fstpt
popf
int
and
dec
cmpsb
std
gs
or
pop
mov
shlb
push
sbb
scas
test
gs
or
adc
cmp
mov
ss
stos
mov
movsb
fildll
pusha
sbb
and
jecxz
lea
xchg
pop
or
lods
push
sbbl
jl
imul
rorl
rcrb
int3
rolb
bound
mov
insb
add
and
data16
hlt
cmp
rclb
and
cwtl
xchg
adcl
mov
add
outsl
sahf
xchg
pop
sbb
or
insl
adc
lret
test
test
mov
andl
imul
push
mov
jnp
in
mov
push
stc
inc
std
ret
adc
jnp
loopne
sub
or
jge
jnp
mov
sti
xor
daa
into
or
push
loope
cld
loopne
lret
in
mov
sub
and
in
fldt
mov
aaa
and
lds
repnz
xchg
pop
sub
out
subb
lds
add
stc
and
call
std
jp
cmpsb
add
jb
fsubrs
pop
mov
add
adcb
add
aad
xlat
jne
mov
inc
push
pop
nop
jle
cltd
push
jge
imul
xor
je
ficoml
loope
clc
cmp
call
lds
xorb
subl
sbb
mov
lcall
mov
pushf
push
push
or
loopne
pop
inc
dec
sub
xchg
jl
xlat
pop
add
dec
hlt
inc
sub
dec
int
fisubl
xchg
adc
cltd
mov
push
pop
and
add
dec
cld
pop
xor
inc
out
xor
pushf
mov
or
adc
mov
adcl
xchg
sbb
xchg
cwtl
push
mov
test
aaa
ds
movsl
adc
push
dec
and
xchg
sub
jecxz
xorb
adc
lahf
dec
das
das
std
jmp
pop
mov
je
mov
mov
jae
mov
jae
ss
loope
inc
add
mov
imul
xchg
and
ret
and
xchg
sub
or
inc
loope
out
push
shlb
xorb
ljmp
pop
adc
pop
xchg
add
mov
dec
pop
or
rorb
jl
mov
jae
sub
xchg
xor
sahf
mov
inc
sar
sub
sub
jecxz
inc
adc
push
addr16
fs
pop
cmp
or
loope
fmul
lahf
add
cs
dec
xor
inc
fimuls
cmp
icebp
mov
mov
adcl
call
jb
and
stos
jno
loopne,pt
jno
pop
mov
jns
pop
mov
fisubs
mov
inc
nop
cmp
into
adc
ja
movsl
push
inc
mov
es
dec
jnp
jo
cmp
movsb
and
adc
fidivl
mov
into
push
insb
add
xor
fistl
fnsave
data16
xor
movsl
push
mov
xorb
xor
rolb
lcall
mov
push
or
rcrb
data16
imul
loopne
xor
in
jecxz
fldl
sub
mov
in
jle
aaa
bound
in
leave
mov
ljmp
xchg
adc
cld
mov
or
ret
pop
xor
mov
adc
lcall
add
add
sub
jg
lret
mov
jg
iret
mov
scas
or
mov
sbb
push
push
dec
xchg
roll
mov
fsubp
push
orl
mov
cwtl
cmp
or
xor
scas
cld
bound
and
mov
inc
int3
int3
and
sbb
mov
stc
mov
repz
pop
jge
andl
arpl
fcompl
add
pinsrw
jmp
and
ja
aaa
or
lea
sti
and
pop
mov
arpl
dec
cmp
sub
xchg
xor
sti
push
int3
pop
sub
dec
push
dec
pop
das
std
jne
and
mov
xor
pop
push
jg
gs
cmp
xor
or
add
scas
xchg
lods
movsb
lcall
adc
sub
enter
shlb
rcl
xchg
sub
push
imul
push
clc
imull
movsb
mov
cmpsl
scas
aas
jb
push
stos
fdivrl
shl
adc
mov
add
sahf
push
fucomp
dec
xor
addr16
and
es
push
cmp
jle
mov
jne
xor
call
mov
icebp
ss
adc
push
mov
or
inc
daa
sub
decl
pop
or
mov
sbb
bnd
ret
in
std
inc
std
xor
jp
push
cmp
or
pop
lock
sub
and
mov
gs
out
xchg
ljmp
cli
jno
pushf
aaa
mov
les
inc
sbb
dec
leave
sbb
sahf
sbb
dec
aaa
mov
gs
popf
push
aas
ljmp
jl
movsl
test
je
out
mov
jno
jne
or
adc
pop
test
inc
daa
rcll
push
pop
push
popf
dec
mov
inc
iret
fisubl
mov
xor
arpl
rcrl
mov
sub
sbb
mov
int
jmp
data16
mov
sarb
add
push
add
cld
and
jge
pusha
loopne
jmp
data16
nop
in
loope
pop
dec
sbb
scas
outsl
inc
dec
xor
in
xchg
pusha
cmp
jle
clc
jns
mov
in
or
push
and
and
out
icebp
cld
scas
sahf
and
popf
xor
nop
cmpsl
int
pop
lods
lods
mov
fldt
cli
rorb
pushf
lock
cmpsl
jno
cwtl
sbb
and
leave
inc
subb
rclb
pusha
stos
xchg
jne
vprotq
add
call
mov
mov
cmp
lret
stos
daa
std
shrb
sub
add
jmp
inc
fbstp
arpl
dec
daa
dec
push
inc
xchg
popa
inc
or
fs
out
inc
pushf
xor
push
push
xor
mov
mov
insb
arpl
lds
push
das
nop
mov
jne
xchg
leave
jmp
mov
or
sub
sub
sarb
mov
sbb
ror
sti
das
lods
mov
cmp
and
or
call
fdivs
out
push
in
jns
sub
jne
push
mov
and
movsb
mov
xchg
es
add
mov
or
xor
or
xor
aas
popa
push
xchg
inc
mov
mov
sahf
into
sbb
mov
inc
ret
push
xchg
push
pop
adc
das
jecxz
pop
rorl
into
clc
cmpsl
scas
push
repz
inc
mov
jne
pop
jl
loope
or
sub
pop
loopne
mov
pop
mov
and
push
xor
or
rolb
cmp
inc
pop
je
mov
inc
cmpsl
cmp
cmp
pop
or
test
pop
out
and
sbb
lods
test
mov
das
aad
test
pusha
push
pop
dec
test
xchg
push
jmp
les
outsb
or
inc
ret
cmp
inc
pmulhuw
xchg
xchg
fidivrs
or
pop
pusha
addr16
mov
xor
dec
jle
push
push
sbb
mov
pslld
dec
push
sub
clc
lea
jo
fimull
push
stc
inc
loopne
sub
cld
adc
mov
sbb
into
aad
icebp
gs
jae
push
js
outsb
mov
test
push
test
xchg
ret
xchg
sbb
aam
popa
mov
les
mov
mov
cmpsl
loopne
sahf
lods
cmp
dec
test
add
rcrb
inc
ja
sbb
ret
test
imull
out
std
outsl
cmp
pop
cmp
call
xchg
jp
insb
clc
imul
pop
adc
shll
movsl
rcrl
sbb
sub
pusha
test
push
push
sbb
jl
pop
add
incb
adc
xlat
xor
inc
loop
test
loopne
dec
xchg
push
mov
cmp
jo
jg
add
fs
adc
into
ljmp
cmp
gs
into
scas
test
or
inc
inc
jne
mov
in
sarl
aad
mov
hlt
xchg
pop
xor
scas
lods
ja
imul
ret
int3
lods
int3
pop
mov
js
dec
call
out
cmpl
jns
mov
das
jg
add
dec
push
lahf
lock
jge
and
mov
mov
pop
mov
add
fwait
popa
jmp
xchg
push
mov
jno
outsb
push
stos
adc
cs
lret
and
ret
shr
xlat
mov
jg
add
add
punpckhwd
enter
mov
pop
xor
js
add
add
rolb
xor
xor
inc
push
push
jo
jecxz
dec
mov
sub
xor
in
jae
and
jmp
mov
mov
fwait
mov
cs
push
data16
mov
dec
in
cmp
lock
push
xchg
push
mov
movsl
test
fsubr
cmpsb
das
testb
or
and
inc
aas
sub
lret
idivl
ficomps
lahf
and
lea
imul
rcll
cwtl
lahf
aas
repnz
pop
mov
in
cs
subl
in
enter
push
adc
es
add
sub
stos
fidivl
fcomi
fsts
xor
movsl
bound
xchg
arpl
add
cmp
scas
xor
pusha
add
outsb
dec
shll
lock
mov
addr16
dec
mov
jl
xchg
shll
mov
sub
popa
dec
in
adc
in
insb
lahf
lahf
out
insl
mov
xchg
out
jmp
pop
inc
hlt
mov
pushf
add
out
popa
ds
bound
push
and
cmp
push
pop
out
jns
pop
dec
jo
add
pop
test
cli
call
jge
clc
or
mov
cltd
jne
hlt
lret
aad
cmp
mov
mov
rcl
vunpcklpd
jecxz
inc
push
cmpsl
stc
mov
jo
jge
out
cmp
lcall
xor
sub
push
stos
aas
loop
mov
dec
push
lds
mov
sbb
inc
cmp
pop
dec
and
into
ja
pusha
nop
mov
xor
lds
idivl
stc
imul
cmp
insb
xchg
add
icebp
xor
insl
stc
lock
mov
dec
xor
cmp
lock
decl
out
test
sbb
sahf
push
jmp
stc
mov
std
inc
insl
pop
xor
xchg
xor
test
add
cmpsl
sbb
mov
mov
out
push
stos
or
stos
mov
cmp
sti
arpl
inc
sub
cld
mov
in
je
stos
pop
push
mov
push
cmp
sahf
or
cmc
push
jmp
testb
fdiv
mov
cltd
lock
loop
nop
cs
rol
dec
ja
xchg
pop
call
roll
cmp
fsubrl
mov
adc
xlat
fmull
insl
mov
and
stos
and
lods
add
leave
cmpsb
fdivs
mov
jecxz
or
stc
pop
ljmp
cmp
dec
adc
xchg
lcall
inc
push
pop
imul
xor
and
jae
out
ja
dec
sbb
fimuls
cmpsb
aad
push
lret
sbb
popf
imul
mov
fidivl
ja
mov
jne
ljmp
push
mov
lcall
inc
mov
mov
adc
cld
xchg
xor
push
mov
divl
and
mov
es
movsl
lods
dec
pop
sbb
outsb
rcrb
cmp
imul
sub
inc
xchg
dec
dec
sub
mov
dec
popf
mov
std
pop
mov
dec
shl
out
std
dec
mov
jge
ror
or
js
inc
and
shl
add
jge
lret
and
pop
push
mov
sahf
mov
or
sub
imul
into
or
iret
pushf
and
fadd
xor
out
inc
pop
and
push
ret
sub
dec
je
in
out
push
rorl
insb
jecxz
outsl
and
mov
mov
inc
xor
cld
ficoms
loopne
jg
pop
sub
into
sub
in
mov
sub
jne
sub
pop
es
jl
das
hlt
sti
test
push
pop
ret
rclb
lock
dec
push
cmp
subl
sub
in
mov
movsb
mov
shll
mov
sub
jge
mov
jnp
sub
xchg
scas
xor
and
inc
xchg
add
adcl
or
ds
jne
in
gs
pop
mov
dec
mov
hlt
adc
rcll
jne
dec
add
lock
cs
inc
cmp
mov
rcrl
adc
jbe
push
clc
add
pop
and
push
scas
sub
push
xchg
jmp
out
dec
jle
adc
xchg
negl
mov
xchg
lret
loop
adc
xlat
lret
es
hlt
mov
pop
loop
adc
add
cmp
sahf
fsin
push
xlat
popf
dec
cmpb
xchg
add
mov
dec
lret
dec
push
pop
ja
ss
pop
jne
mov
fstl
stos
inc
cmp
cmpsb
fucompp
mov
and
or
adc
and
shl
push
xchg
enter
iret
mov
in
outsl
mov
mov
pushf
ret
std
into
cld
in
push
iret
lret
in
aas
push
push
adc
push
mov
dec
pushf
add
adc
arpl
jge
adc
js
pusha
adc
int
out
cld
lretw
cli
imul
rcrb
addr16
sahf
pusha
inc
dec
dec
jge
push
nop
les
dec
out
xor
sbb
sti
mov
pop
movsl
loop
xlat
fwait
xor
cmp
mov
push
mov
cmpsb
scas
dec
clc
mov
mov
gs
inc
sub
gs
cmp
test
lock
jge
xchg
inc
xor
inc
mov
sub
xchg
sbb
push
out
lret
pusha
aas
sahf
std
lahf
sbb
sbb
add
aas
vmovss
jbe
fcomps
xchg
ja
jmp
test
clc
sub
int3
dec
mov
adc
andl
imul
es
or
push
cli
and
mov
cltd
subl
adc
add
mov
add
inc
adc
fldl
xor
lea
mov
stos
addr16
jae
pop
das
movsl
pop
jge
xor
nop
mov
es
loope
call
or
mov
jno
outsb
adc
inc
mov
scas
add
bound
cmp
add
cld
adc
ret
mov
sbbb
stos
or
jge
int
push
xor
cmp
cmpsb
push
pusha
cmp
test
xchg
popa
and
ja
imul
dec
lret
enter
loope
rcl
inc
jns
fcoml
jae
push
popa
xor
and
call
and
fs
sub
dec
inc
add
jl
dec
into
push
cmp
ret
xorl
bound
mov
stos
dec
inc
lock
xchg
push
mov
push
ljmp
push
jbe
repz
lcall
dec
loope
in
in
aad
stos
jmp
fists
aaa
push
ret
mov
jmp
std
mov
in
outsb
mov
jge
mov
sbb
or
cmpsl
jb
imul
sbb
mov
pushf
push
icebp
push
lock
cmc
mov
pop
arpl
std
sbb
cmpsl
int3
popa
add
fdivrs
jb
pop
cmpsl
call
inc
addr16
out
inc
popa
fldcw
inc
js
dec
das
int3
cli
or
mov
stos
jl
xor
adc
mov
cmp
pop
xchg
fisubs
cwtl
cmc
fwait
stos
orb
adc
jecxz
add
in
sub
loope
pop
sbb
inc
js
sbb
jmp
jbe
out
into
inc
addr16
cmpsw
lahf
ret
rclb
push
xchg
movb
cmp
lret
pop
adc
aaa
andb
call
outsb
adc
dec
sahf
enter
jo
jl
and
movsl
jae
or
and
out
cs
and
jmp
data16
dec
fisttpl
sub
xchg
js
or
roll
inc
add
cmp
mov
adc
mov
mov
loope
push
xchg
fs
xchg
mov
out
xlat
loopne
clc
add
js
shl
gs
test
outsl
sbb
mov
cwtl
dec
adc
xchg
cli
cmp
xor
icebp
test
inc
mov
sbb
mov
dec
mov
mov
dec
in
ret
nop
jae
mov
ret
and
or
sub
cmp
jb
dec
lods
jle
scas
jne
mov
into
ret
insl
xor
inc
xorb
xor
shrl
out
lret
push
mov
lret
rcrl
mov
jns
mov
adc
push
push
iret
pop
lahf
cmp
test
add
mov
push
sub
pop
scas
xor
andl
dec
lds
inc
test
in
scas
in
add
pop
fildl
mov
mov
out
flds
pop
loop
push
lahf
xor
rcrb
jp
add
rclb
hlt
jno
push
jmp
push
add
or
adc
adc
in
and
pop
stc
cmp
rol
lock
lea
lret
pushf
cld
test
pop
add
in
imul
mov
push
sub
out
cmp
popa
adc
cmc
cltd
loope
mov
cmp
in
popa
sbb
mov
pop
and
imulb
jmp
gs
sbb
test
xor
add
push
jnp
insb
adc
sub
mov
std
cmpsl
fdivrl
xor
outsl
pop
mov
mov
aaa
imul
notl
sub
pop
pop
xchg
pop
pop
out
mov
arpl
or
inc
cwtl
lea
stos
pop
xchg
cs
dec
inc
in
js
testl
in
jns
lods
xchg
pop
and
pushf
adc
jp
sbbb
mov
movsb
mov
xor
test
mov
in
mov
pop
stc
movsb
pop
mov
clc
inc
jg
arpl
dec
add
test
std
adc
mov
sti
push
fistpll
divl
and
js
in
aas
pop
adc
jnp
jo
roll
pop
inc
shl
outsb
cs
xchg
sub
je
sbb
inc
add
dec
push
or
adc
xor
inc
push
ret
xchg
cmpsb
and
jns
loopne
and
arpl
dec
add
int
repnz
add
shrb
xor
stos
fucomi
stos
push
lret
jne
fimull
add
pop
push
movsl
sbb
test
xchg
popf
xor
divl
jecxz
adcl
pushf
push
mov
pop
and
sub
or
into
out
daa
and
add
sahf
addb
outsb
mov
xlat
inc
push
lcall
inc
mov
add
insl
pop
sub
mov
rclb
enter
addr16
cmp
add
roll
xchg
pop
cli
add
or
in
add
mov
xchg
adc
and
leave
aad
dec
enter
add
xor
fstp
jno
add
xchg
decl
pusha
loope
roll
xchg
sub
inc
idiv
pusha
stos
add
movsb
adc
imul
adc
add
fiadds
cmp
xor
lret
fisttpl
xchg
jb
mov
dec
leave
lods
mov
insl
into
push
lea
pop
lahf
push
xchg
pop
cmpsl
in
mov
pop
rcrb
pop
or
mov
inc
in
fistpll
or
push
cmpsb
fs
movsl
dec
ret
fcmovnbe
mov
push
mov
jbe
dec
lods
push
test
sti
add
mov
ja
lods
js
push
scas
sbb
call
fs
imul
arpl
fimull
cmpsl
fimull
and
xchg
pop
push
jns
cmp
icebp
xchg
hlt
mov
push
or
jo
mov
sar
aad
xor
cmc
xchg
in
loope
jbe
daa
mov
stos
ljmp
std
mov
push
dec
cli
arpl
mov
ret
lcall
mov
arpl
xor
sbbl
std
and
push
jns
fadd
daa
call
adc
adc
pop
inc
jmp
and
or
push
jo
stc
into
pusha
stos
xchg
stos
dec
mov
fidivrl
push
pusha
lret
lret
xor
or
xor
xchg
test
sbb
jno
lret
sub
and
xlat
jle
imul
out
cld
dec
push
fistpll
test
cmpsb
ret
cmp
xchg
js
sbb
arpl
bound
inc
or
add
cmpsb
xor
loopne
daa
pusha
jae
sub
insl
pop
jns
add
shll
xchg
loope
adc
jg
aam
jp
testl
mov
lods
jnp
jl
js
mov
daa
addr16
push
jmp
test
xor
ret
xchg
adc
aaa
lcall
insb
add
aas
mov
inc
add
adc
jne
out
and
mov
lcall
inc
faddp
push
push
or
mov
cli
out
bound
mov
pop
push
cwtl
or
mov
xchg
dec
aaa
xorb
fstpt
jnp
pop
bound
or
addr16
pop
xchg
xchg
add
mov
in
js
fmuls
and
xchg
rcr
mov
enter
push
fmull
jl
aaa
adc
sarl
pop
imul
mov
or
ja
movsb
jle
push
daa
xchg
mov
push
xor
jne
sarl
jmp
cmp
test
aaa
imul
fisttpl
clc
sub
orb
cmp
arpl
cltd
arpl
notl
mov
lret
mov
sbb
movsl
and
lcall
adc
mov
xlat
iret
mov
movsb
ja
sti
cmp
sub
fnstenv
repz
call
insl
inc
imull
in
mov
jmp
push
mov
or
adc
push
adc
jmp
add
jae
xchg
mov
pop
jnp
hlt
stos
loope,pt
out
add
fildl
stc
pop
aaa
mov
jecxz
int3
jae
dec
mov
outsb
xchg
inc
jb
out
addr16
mov
shll
imul
test
imul
lea
and
push
leave
lods
push
rclb
push
mov
inc
pop
pop
lcall
jbe
pop
sbb
dec
mov
jnp
and
imul
pop
mov
adc
add
rorb
mov
cltd
sti
cmp
pop
mov
fadd
scas
adc
loop
or
mov
hlt
xchg
test
and
mov
mov
mov
fbstp
loop
mov
xchg
jge
testb
aaa
inc
jg
mov
inc
shl
add
imul
leave
gs
mov
ljmp
jbe
jecxz
mov
mov
mov
push
sbb
and
jne
xchg
scas
scas
mov
sbb
dec
dec
push
jae
mov
ret
pushf
sbb
out
ja
xor
sbb
jl
and
jg
stc
fsubl
lea
sub
sbb
in
std
mov
repnz
pop
scas
clc
lret
popa
add
lcall
mov
movsl
jne
popf
mov
xchg
mov
mov
sbb
leave
loope
addr16
arpl
ja
push
ss
lea
mov
cltd
insl
je
bnd
mov
clc
fldcw
mov
mov
out
push
xor
out
mov
rorb
add
mov
push
jnp
es
fnstenv
cmpsb
ret
dec
push
cmp
stos
call
jecxz
rcll
mov
enter
outsl
inc
cltd
mov
or
sbb
push
divl
push
loopne
pop
je
jns
arpl
inc
push
call
pop
pop
scas
pop
xchg
mov
and
dec
lcall
aam
lea
pop
shll
lret
pop
add
fnstsw
loope
lcall
jp
sub
add
push
xchg
lods
mov
pop
fsincos
or
adc
jmp
dec
jb
sbb
cs
cmp
jns
add
push
out
cmp
cmp
cmc
push
bnd
jb
outsb
and
cs
lret
jmp
inc
int3
add
jns
or
pop
in
push
mov
cmc
dec
add
jge
aaa
insb
ja
fs
jl
push
leave
pop
je
into
loop
stos
jge
pop
cmpb
scas
out
xor
pusha
outsb
dec
je
test
popl
adcl
mov
jnp
add
sbb
ds
rolb
stos
rcll
add
lea
mov
mov
stc
or
dec
jg
and
sub
xlat
insl
jl
mov
push
add
icebp
mov
cwtl
sbb
jmp
and
mov
fidivrs
dec
sub
cltd
bound
mov
fadds
fs
jmp
ds
sbb
out
mov
or
lcall
dec
loopne
lods
ficoml
mov
loopne
mov
mov
cmp
dec
mov
jbe
sub
addr16
xor
add
xchg
pop
pop
add
sub
test
xchg
push
push
mov
inc
jo
add
add
push
in
popf
cmp
pusha
mov
out
cmpsb
js
mov
sti
cmpsl
cld
dec
into
aaa
jge
or
xor
ret
xchg
addps
jnp
lret
mov
adc
arpl
shll
fsts
mov
adc
jmp
and
lods
andl
or
sub
pop
insl
jmp
mov
lock
mov
and
pushf
cltd
dec
and
pop
fs
sbb
or
mov
aas
sbb
mov
cmp
jge
jmp
outsl
add
addr16
and
dec
pushf
clc
inc
xlat
lcall
add
fsts
fs
jle
and
incl
or
popa
sub
out
mov
mov
push
xor
out
ret
cmpsl
inc
xor
and
inc
jge
loopne
and
mov
repz
and
data16
pop
mov
pop
imul
add
es
stos
xchg
sti
xor
cmp
mov
movsb
jb
outsb
sbb
aad
jo
loopne
cld
adc
jl
movsl
dec
jno
push
sbb
daa
sahf
add
ds
push
mov
cld
dec
out
push
push
xchg
add
sub
sti
icebp
mov
ds
in
mov
mov
jle
popa
mov
mov
xchg
fsubs
and
sub
mov
out
mov
sbb
push
mov
cmp
popa
and
jnp
pushf
inc
pop
lcall
inc
mov
xor
loope
aaa
jecxz
pop
adc
cli
xor
je
dec
fists
push
dec
mov
mov
sbb
push
adc
in
pop
fwait
mov
movsl
test
ja
imul
shl
or
xchg
push
loope
or
mov
jo
fbld
xlat
jle
lahf
jb
sbb
mov
es
and
add
push
es
jecxz
nop
imul
repnz
aaa
data16
dec
xor
fcmovbe
add
daa
xor
sti
gs
sbb
lcall
insb
sbbb
mov
sub
out
and
and
lret
fs
sbb
xchg
push
mov
pop
push
fisubrs
test
lahf
add
mov
lret
mov
cmpsl
bound
insl
js
xchg
gs
mov
lret
xchg
leave
scas
inc
rorl
or
test
stos
or
outsl
jecxz
mov
push
push
dec
cld
cld
or
mov
jp
pop
mov
and
mulb
dec
out
repnz
add
aam
loopne
push
lods
mov
cwtl
sbb
sbb
xor
mov
cs
loope
jmp
clc
inc
inc
ret
jmp
mov
int3
pop
xor
mov
std
notl
sub
sub
js
pushl
lret
xor
int
push
lcall
sub
sbb
mov
stc
hlt
cmp
inc
inc
insb
hlt
or
fsubs
push
ret
mov
xchg
inc
fisttpl
pop
adc
adc
pop
lcall
pusha
pusha
push
mov
mov
add
xchg
mov
stos
sahf
movsl
andb
adc
xchg
aaa
xchg
test
jle
add
dec
mov
andb
enter
neg
testb
movsb
movsb
loop
pop
sbb
xchg
clc
loope
mov
sub
sub
mov
xor
insb
xor
xor
fsubr
pop
movsb
stos
mov
mov
mov
ljmp
add
in
fbstp
shrb
fnstsw
mov
das
ret
lock
adc
sbb
pop
popa
es
test
loopne
lock
jns
inc
xchg
daa
adc
popf
cwtl
push
icebp
ss
jmp
xor
es
add
jecxz
mov
jecxz
mov
repz
lret
hlt
invd
add
arpl
testb
xlat
cmpsb
cwtl
sbb
enter
xchg
jbe
push
insb
jne
mov
cs
pop
and
bound
dec
mov
push
js
pop
mov
add
xor
rcrl
mov
dec
mov
bound
out
aaa
out
ret
sbb
imul
push
in
rorb
sti
jle
je
mov
out
sbb
mov
ret
push
pushf
lods
xchg
add
jg
in
push
pusha
popf
jnp
mov
iret
and
or
test
imul
or
std
ss
stos
gs
add
pop
add
push
iret
xor
iret
adc
push
mov
push
xlat
dec
cmp
add
fildl
enter
mov
inc
sbb
add
int3
pusha
sub
mov
push
icebp
mov
sarb
adc
and
sub
pop
jo
pop
jns
mov
lret
xchg
icebp
arpl
mov
lret
push
in
ja
in
shll
sbbl
add
ficomps
or
jbe
nop
xchg
jle
xor
mull
add
jns
fisttps
das
xchg
fucomi
orl
addr16
aas
outsb
ja
xor
imul
sahf
out
inc
gs
cmp
fadds
push
add
js
mov
cmp
je
stc
adc
je
test
fiadds
inc
sub
bnd
ljmp
loopne
jns
arpl
hlt
push
xchg
add
mov
cmp
mov
lret
rcrl
and
jo
leave
jle
sub
sbb
pop
es
ret
lret
pop
jle
flds
cmp
in
push
ret
stos
stc
insb
mov
loop
inc
inc
cmc
push
fsubl
dec
inc
dec
add
adc
mov
outsl
aaa
cmp
cli
adc
xor
shll
repz
cmp
aaa
das
test
lods
push
push
shl
or
sub
out
pop
lods
and
test
mov
stc
inc
push
out
int
cmpsb
xchg
mov
into
sbb
xor
mov
adc
jb
lods
dec
xchg
stos
inc
xor
mov
mov
mov
cltd
outsl
add
inc
adc
xchg
mov
adc
xchg
mov
gs
fucom
cmp
push
es
push
sub
dec
mov
shll
dec
out
lahf
jae
jae
adc
in
sub
test
pop
pop
and
cli
mov
fwait
es
push
cmp
mov
cmpsb
and
pop
stos
push
xor
pop
mov
testl
or
xchg
scas
popa
lret
mov
ret
mov
mov
dec
call
sub
mov
add
dec
jne
lods
jge
adc
mov
in
mov
mov
in
xorl
outsl
pop
mov
aas
aad
inc
mov
mov
pop
lret
sbb
orl
ret
rclb
push
jne
mov
ret
xor
int
inc
cmp
imul
adc
sbb
and
and
mov
inc
dec
mov
pop
push
xor
dec
in
add
add
pop
push
jmp
fiadds
or
cmp
push
push
push
pop
xchg
xor
repnz
sbb
call
outsb
ljmp
xchg
inc
xchg
sbb
out
gs
push
or
inc
jle
mov
mov
jne
mov
xchg
add
sbb
flds
jl
mov
inc
fsubrs
int
cs
add
dec
mov
cld
dec
insl
mov
repnz
adc
es
push
push
jno
pop
mov
mov
repz
inc
push
pop
leave
insl
movsl
push
jnp
imul
test
cld
pop
shl
jge
gs
jb
aad
cld
jg
popa
enter
xchg
mov
mov
repz
push
mov
arpl
int3
lret
dec
pop
cmp
and
mov
lea
insb
jecxz
daa
fdivrs
cmp
daa
inc
call
and
jb
sbb
stos
dec
sub
sbbb
cwtl
into
leave
cli
mov
je
adc
push
push
call
fldl
rorl
push
imul
test
sub
push
pop
mov
add
jp
int3
cltd
add
xchg
adcl
mov
in
xchg
imul
inc
int
cmp
jnp
leave
push
popa
daa
enter
and
inc
push
sbb
dec
add
xor
sub
push
jmp
rclb
sub
mov
movsb
out
ljmp
sahf
mov
shlb
icebp
leave
ja
inc
in
int3
outsl
xor
sahf
mov
std
sub
mov
xchg
add
mov
ret
add
mov
xlat
and
ljmp
mov
dec
inc
jmp
flds
jg
add
gs
test
pop
push
mov
testl
xadd
mov
xor
push
pop
aaa
test
ret
rcr
loop
push
cs
cmp
jmp
rol
sub
sub
push
mov
sahf
xchg
add
ror
adc
lock
inc
jno
std
bound
pop
xchg
dec
ret
hlt
sub
add
cltd
sbb
fwait
ret
xchg
mov
stos
fcoms
lods
lods
fucomp
add
inc
jo
xchg
loope
sbb
jecxz
jne
pushf
and
jbe
shlb
mov
stos
cmp
aam
mov
aam
mov
sbb
ja
data16
scas
sbb
inc
in
mov
sub
aad
add
xchg
xchg
out
es
into
fisubrl
pop
fs
mov
aam
cmp
and
jle
data16
in
jge
in
and
and
push
adcl
popa
enter
mov
sahf
adc
xor
in
cmp
call
mov
in
push
popa
sub
xchg
leave
push
cmpsb
mov
xchg
jp
pop
fwait
adc
inc
insl
mov
xor
popa
inc
xchg
es
xor
push
mov
or
add
jl
mov
jle
or
xchg
popf
xchg
cltd
jae
outsl
mov
jo,pt
jne
pushl
repz
jge
pop
adc
pop
enter
dec
dec
iret
lods
xor
out
adc
popf
mov
aad
enter
xor
insb
mov
mov
ds
test
mov
sub
andw
xchg
sbb
jge
or
mov
xor
test
mov
fwait
jecxz
lods
out
pop
mov
mov
stos
xor
pop
mov
push
sbb
dec
ja
jle
xchg
test
inc
adc
aad
hlt
dec
or
aaa
lret
pop
mov
push
mov
and
mov
sbb
gs
mov
pop
add
push
pop
cltd
fs
jae
stos
fcmovnbe
add
add
sbb
push
ja
imul
xchg
movsl
and
xchg
stos
mov
aam
cmc
mov
mov
mov
mov
and
push
outsb
jae
add
das
shrb
ljmp
scas
mov
cmc
lods
add
aaa
cmp
and
lods
cmp
imul
pop
inc
test
fisttps
stos
jle
cli
es
bound
pop
xlat
and
outsl
push
sbb
lea
and
cmp
cld
xor
cmp
enter
xchg
adc
test
xchg
mov
ret
mov
jne
add
lea
jge
sub
dec
popa
or
addl
movsl
xlat
js
test
int
stos
mov
jae
mov
in
imul
push
pushl
cmp
int3
cmp
aad
pop
aas
hlt
add
jmp
repnz
fs
cltd
insb
push
pushf
cmp
imul
mov
mov
in
int3
push
scas
movsb
mov
sbb
inc
shlb
fwait
outsl
and
dec
jg
and
and
outsl
loop
xchg
adc
xchg
mulb
xor
mov
add
dec
scas
mov
sub
pusha
jmp
popf
xchg
out
mov
jle
pop
mov
mov
mov
mov
cmpsb
push
xchg
arpl
test
pop
in
or
pop
adc
ljmp
in
push
call
push
mov
cmp
mov
mov
mov
fidivrs
dec
fcmovu
sub
mov
pusha
lock
js
icebp
push
cltd
shl
fnstenv
inc
cmp
mov
push
add
dec
mov
mov
pop
repnz
das
fcoml
lock
sub
pop
imul
cmc
dec
jno
nop
adc
enter
loopne
icebp
pop
pop
dec
mov
push
sub
sbb
mov
or
mov
cmpl
adc
jge
mov
test
add
roll
mov
lds
cltd
mov
mov
nop
loopne
ret
sbb
sbb
loop
xor
pop
cld
mov
les
push
adc
xchg
nop
hlt
mov
mov
xchg
sbb
and
ficoml
or
xchg
xchg
or
rorb
notb
cmpsb
mov
loope
mov
mov
fs
das
les
cmpsl
inc
fdivrs
adc
mov
xor
xchg
movsb
or
mov
mov
push
into
imul
ds
stos
ficoml
jns
or
ss
scas
xor
dec
jmp
insb
out
sub
pop
push
or
and
es
mov
fmull
mov
cmpb
or
cmp
sbb
ret
cmp
out
xchg
int3
xorl
xchg
aaa
cmp
dec
aad
xor
loop
lock
scas
jge
mov
sbb
ret
scas
or
std
lcall
into
shl
push
push
or
fidivrl
daa
aad
pop
push
jne
mov
mov
mov
pop
imul
imul
daa
clc
into
repnz
jmp
cmp
imulb
out
inc
and
sub
jns
push
jp
popf
and
imul
xchg
or
pop
aad
pop
int
int3
test
push
mov
clc
out
cmp
fucomi
mov
pop
inc
or
xchg
and
adc
int3
adc
xchg
cmc
hlt
add
pop
inc
stos
pop
jne
mov
scas
roll
dec
scas
out
shll
les
mov
dec
outsb
das
xchg
push
sbb
inc
pop
or
sbb
push
rorl
dec
mov
enter
mov
and
or
icebp
mov
movsb
push
sub
add
inc
cltd
out
xlat
out
movsb
inc
lret
leave
mov
aaa
mov
repnz
stos
pop
mov
mov
fiadds
jg
or
pushf
gs
mov
aas
std
or
xchg
rorb
test
mov
lods
decb
fwait
mov
ret
es
lea
lahf
subb
loopne
rcrb
ja
loop
das
xor
sbb
sub
jge
lret
popf
cmpsb
push
adc
xor
sbb
or
aaa
sbb
dec
shld
push
push
cmpsb
xchg
jnp
pop
sbb
call
sub
movsl
push
js
dec
push
andl
sub
fnstcw
imul
test
mov
or
mov
jmp
mov
mov
add
les
sub
dec
sarl
push
out
jb
popf
int
lds
add
pop
push
test
imulb
addr16
inc
int
jl
daa
xchg
push
negl
mov
jp
push
inc
dec
or
leave
xchg
inc
jbe
sahf
ror
and
push
sub
ljmp
mov
jge
inc
jno
rorl
adc
movsl
ficomps
and
les
inc
call
and
cli
rol
push
lds
fwait
mov
mov
sub
sarb
outsb
idivl
inc
jno
ror
ficoml
xorl
vpcomub
in
xor
inc
pop
les
in
dec
lock
sbb
mov
or
or
ljmp
rcll
mov
ss
insb
roll
jne
sbb
pop
sbb
mov
jmp
lock
jae
pusha
push
inc
insb
mov
jae
rclb
sbb
and
push
add
xlat
pop
or
inc
jge
sbb
or
mov
add
in
push
cld
xor
jne
add
jb
jg
subl
and
jns
jns
add
ss
outsl
or
xchg
test
add
mov
das
repnz
out
lods
xor
jno
jle
lret
mov
inc
lea
pop
sbb
mov
sbb
je
xchg
or
fstpl
lahf
lods
into
jg
rep
ljmp
int3
sbb
xor
jns
mov
rcrb
daa
xchg
je
adc
xchg
pop
mov
xchg
lock
mov
pcmpgtw
pusha
jno
inc
sahf
adc
test
adcl
pop
div
ret
test
insb
add
bound
repnz
neg
cmpsl
test
sub
jle
iret
push
adcb
add
xor
int3
adc
stos
in
out
dec
jp
pop
add
popa
add
in
pop
push
lods
and
dec
add
imul
shrb
shlb
push
adcl
push
and
test
push
sbbl
adc
inc
mov
aas
push
mov
into
ss
sbb
cmc
and
and
addr16
pop
neg
aad
mov
out
pop
mov
xor
sbb
mov
into
es
dec
mov
mov
enter
sbb
sbb
loop
inc
outsb
fcomi
adc
lcall
lret
cs
or
loop
mov
stc
cmp
cs
sub
js
ljmp
sbb
pop
pop
xchg
jnp
lods
lods
or
test
pop
aaa
inc
movsl
jnp
hlt
scas
mov
add
mov
in
out
push
pusha
shrb
jns
insl
xor
in
xorl
je
mov
test
clc
scas
or
push
push
out
sbb
add
fwait
outsl
hlt
sub
push
getsec
mov
mov
loope
cmp
ret
insl
xor
popa
sub
pushf
lcall
push
imul
cmp
and
out
test
ljmp
popf
mov
cmpsb
sub
ljmp
mov
in
aas
aam
inc
js
nop
aad
dec
xlat
fs
or
xchg
inc
outsl
aad
stc
and
shrl
leave
call
scas
fnsave
xchg
dec
out
mov
in
push
lds
mov
test
cltd
cmp
xor
mov
dec
xor
sbb
sbb
mov
lcall
dec
inc
icebp
sbb
mov
adc
pop
push
in
mov
xchg
popf
fcmovbe
scas
add
ja
in
mov
cmp
ret
xchg
shrb
lods
leave
das
push
xor
sbb
push
xchg
inc
pop
scas
aas
into
dec
inc
push
iret
jp
and
push
pop
mov
pop
xor
mov
movsb
out
dec
mov
testb
test
sbb
jp
and
sahf
int
lret
scas
das
lods
jo
push
adc
xor
imul
push
jecxz
sahf
rcrb
dec
out
pop
les
cmpl
mov
sahf
push
mov
arpl
jnp
adc
mov
cmpsl
out
lahf
jne
inc
std
std
mov
mov
mov
cmpl
add
movsl
movsb
lret
sbb
dec
xor
out
lods
mov
push
ljmp
mov
int3
dec
in
ja
movsb
jp
jae
mov
fsts
sub
mov
xor
mov
std
mov
adcb
ds
adc
sbb
mov
out
or
jb
lcall
les
jae
push
popf
stos
dec
push
jle
sub
pop
xchg
sub
dec
shll
vmovlps
incb
jns
pusha
and
cmp
addr16
jge
cmp
xchg
fbld
cmpl
add
jg
sub
pop
addl
push
sbb
andb
xchg
add
call
dec
adc
fisubl
mov
in
mov
adc
lea
mov
das
push
mov
testl
push
add
cmpsb
push
xorb
inc
pushf
pop
xchg
push
das
jmp
cltd
add
mov
xlat
imul
call
sbbl
pusha
cmp
popf
loop
outsl
jae
inc
cmp
mov
sti
aas
lcallw
push
inc
iret
mov
push
repz
iret
inc
fistl
divl
adc
and
ljmp
jmp
and
jmp
cmc
cmp
outsl
js
inc
jecxz
add
push
mov
jbe
int3
int3
xchg
mov
push
sahf
xchg
inc
lods
loop
arpl
inc
xor
outsl
shr
mov
mov
dec
add
xchg
test
fwait
xchg
mov
push
movsl
push
inc
sub
add
mov
mov
and
mov
pop
add
xchg
insb
je
iret
push
in
nop
adc
pop
pop
mov
adc
add
subb
scas
sub
xor
sbb
dec
adc
ljmp
std
sbb
mov
fsubl
fs
mov
add
fwait
mov
cmp
jge
std
sarl
xchg
and
in
scas
aad
cmc
cmp
dec
mov
xor
mov
dec
adc
inc
inc
pop
es
sub
xor
std
stos
mov
adc
enter
popa
fwait
aaa
jg
outsb
mov
out
jge
adc
in
test
mov
xor
add
mov
adc
pop
mov
daa
pushf
imul
cmp
in
in
add
ss
lea
test
out
sahf
push
loop
addr16
fdivrl
fwait
sarb
lock
mov
push
incl
dec
gs
pop
or
xchg
lret
insl
or
fists
jb
fldenv
jae
scas
cmc
call
push
add
shll
inc
push
imul
out
add
add
not
cmp
add
insb
mov
leave
outsl
pop
cmp
inc
mov
outsl
cwtl
das
aad
lods
lock
mov
cmp
icebp
aad
xchg
sub
xchg
add
cmp
arpl
cmp
push
jae
mov
insl
pop
icebp
inc
inc
js
jmp
and
pop
fmuls
mov
add
adc
pop
or
fsub
pop
jmp
int
push
fisttpl
divb
shlb
int3
pop
dec
and
pop
push
sub
pushf
cmp
js
pop
cmc
dec
jmp
out
adc
or
xchg
mov
es
mull
sbb
in
movsl
jo
in
xchg
outsb
xchg
nop
lock
jbe
mov
lock
mov
or
mov
mov
adc
fistps
xor
rorb
jp
mov
or
xor
push
dec
inc
cld
and
mov
adc
dec
mov
add
scas
and
jmp
xchg
fsubrs
push
repnz
ja
out
sub
cmp
or
xchg
and
xor
adc
pop
test
cli
loopne
ja
das
add
mov
mov
nop
adc
enter
add
adcl
xchg
out
outsb
mov
sbb
xchg
xor
jne
xchg
adc
push
orl
mov
cmpsb
not
subl
rclb
andb
jne
mov
loop
mov
insl
cmp
andl
jle
aad
lret
lahf
sahf
popf
adc
or
mov
or
inc
andb
push
mov
inc
jp
ljmp
ja
adc
and
pop
push
fisubl
cld
mov
mov
jno
push
shl
ds
and
sub
pop
or
lods
lret
push
push
daa
pop
inc
inc
jbe
jns
jmp
push
iret
ficomps
mov
push
outsl
pop
xchg
popf
icebp
and
dec
jmp
jmp
pop
sub
loop
or
nop
mov
addr16
fmuls
nop
loope
ds
mov
inc
xor
mov
and
inc
stc
or
cs
xchg
data16
fsubrl
jg
cmpsl
jbe
fdivs
ret
movsb
rclb
adc
xchg
insb
dec
and
je
and
mov
mov
imul
mov
push
das
cs
and
xchg
ret
mov
adc
dec
std
int
pop
inc
mov
cltd
sbb
cltd
cmp
cmp
or
dec
and
xchg
stos
push
mov
lret
pop
or
imul
jae
xchg
jns
sarl
inc
rorl
fnstcw
outsb
lock
dec
lcall
xor
in
ror
push
jno
inc
fwait
inc
rorl
movsl
sub
iret
jbe
mov
loopne
push
and
out
into
gs
lret
cmp
sbb
inc
stos
jb
je
mov
jecxz
jle
mov
fcompl
adc
mov
ss
or
out
pop
lret
insl
pop
or
jno
or
or
xchg
dec
loop
fsubrs
xor
xor
add
popa
stos
ja
add
stos
pusha
cmc
lahf
jns
and
test
rcrl
cli
into
mov
stc
les
mov
add
gs
fcompl
lahf
cld
adc
pusha
jg
dec
popa
adc
rcrb
jge
aaa
push
lret
lret
cld
pop
push
inc
fwait
lock
or
outsl
xor
nop
scas
add
test
test
sub
inc
fisttpl
jb
jno
arpl
fildl
mov
pop
lods
jecxz
dec
or
mov
les
mov
or
lcall
inc
xchg
sub
xchg
mov
movsb
into
out
sub
pusha
mov
ret
test
sub
jo
add
dec
pop
test
sar
leave
sbb
cld
shlb
fwait
jno
sub
mov
cwtl
imul
mov
inc
cld
add
pop
mov
push
add
ret
clc
pop
hlt
les
mov
jge
mov
hlt
fbstp
sbb
les
add
dec
cmpl
pop
loope
iret
les
jge
ja
movsb
dec
in
sbb
test
fwait
jmp
push
add
sbb
ja
or
loop
push
inc
adc
jae
mov
jmp
mov
pushf
xchg
ret
rcll
or
jl
pop
jbe
jge
in
adc
stc
sbb
int
out
movsl
cmc
push
mov
xchg
jnp
movsl
dec
sub
inc
adcb
mov
push
and
pop
aaa
inc
decb
and
jo
fsubr
fsubrl
adc
pop
cltd
test
int3
and
xchg
jbe
test
rorl
not
outsb
dec
roll
fadd
jne
or
mov
or
aas
cltd
or
sub
mov
rorb
push
mov
jns
jno
xchg
dec
cmp
push
movsl
clc
fdivrp
sahf
mov
mov
pusha
mov
inc
pop
xchg
cltd
mov
jmp
popf
xchg
cmpsl
in
ljmp
add
and
test
int
add
shl
xchg
cmpsl
dec
xchg
jmp
pop
lds
mov
mov
inc
mov
bound
ja
add
and
faddl
aad
cmp
je
adc
dec
inc
jge
test
ds
sbb
mov
pop
inc
test
sbb
dec
jg
push
and
cmp
cld
nop
lea
repnz
cmpsl
pop
insb
out
call
dec
jae
movsb
cmp
stc
and
pop
lcall
jg
outsl
sbb
inc
rcll
jl
or
lret
sub
insl
sbb
mov
sbb
dec
jno
push
test
mov
popf
rcrb
mov
out
jge
jp
xchg
push
mov
push
leave
mov
mov
jbe
sbb
aam
in
mov
sbb
push
cmpsl
sub
cwtl
mov
fsubrl
and
lcall
push
and
ljmp
mov
lea
mov
sbb
lcall
xchg
stos
mov
inc
sbb
and
sarl
sub
lods
add
add
adc
mov
outsb
xchg
push
sar
lret
xchg
in
cmc
popa
imulb
mov
addr16
lds
scas
ss
xor
pop
and
sub
std
std
inc
mov
cwtl
addl
inc
mov
xchg
sbb
cli
popa
mov
insb
inc
adc
mov
adc
loope
jge
lea
aam
sub
add
adcb
fiaddl
leave
jne
push
lret
jae
int
dec
push
insb
mov
xchg
xchg
inc
push
repz
push
dec
aas
pop
call
mov
loop
mov
cmpsb
test
or
dec
add
and
insl
inc
mov
adc
ljmp
movsl
jbe
aad
inc
mov
mov
andl
add
lahf
xchg
mov
es
jmp
jmp
popa
fs
fs
dec
pushf
sub
movsl
adc
sub
xchg
pop
dec
out
pushl
xor
fistps
pusha
int
fcmovnu
sbb
xchg
movsb
in
call
lret
push
or
push
and
mov
fldenv
loopne
rcll
sbb
ds
adc
ljmp
or
dec
popa
in
dec
jnp
sub
push
jmp
cltd
iret
ss
xlat
sub
das
lods
lahf
pusha
lret
out
ficompl
dec
or
jp
mov
das
cmp
mov
repnz
sbb
cs
loopne
push
cmp
inc
xchg
mov
dec
sbb
cmp
andl
jge
xchg
xor
jmp
sbb
push
dec
pop
sbb
mov
cmp
insb
fwait
mov
dec
pop
pop
mov
rorb
push
lods
mov
incl
mov
notl
jmp
mov
dec
adc
aam
call
xchg
into
pop
cmp
lods
ss
fstl
cmp
lahf
mov
pop
jb
inc
adc
sbb
stc
int3
rclb
es
cli
fiaddl
cmp
add
loope
xchg
dec
xchg
sbb
loope
sbb
lret
sbb
and
mov
sar
fsubs
into
int3
push
mov
fistl
xchg
add
fs
sub
es
leave
fadds
movsb
lea
jnp
lret
mov
cwtl
fadd
pop
rcrb
mov
cld
add
cmp
movsl
adc
cmp
or
push
mov
add
cmp
mov
pop
movd
mov
adc
fdivrp
add
pop
dec
call
fists
inc
mov
stos
movsl
mov
sti
je
loop
fdivrp
xor
mov
pushf
aaa
std
mov
fmul
aaa
sbb
movsl
ficompl
and
push
dec
aaa
cmpb
ja
adc
push
xor
mov
fs
push
inc
xor
mov
aad
sbb
cmc
loop
pushl
push
orl
mov
cmp
adc
add
xorb
pop
or
jns
push
bound
jp
inc
cmp
sbb
or
cwtl
ds
test
add
xchg
ret
enter
mov
ljmp
xor
rcrb
sbb
nop
cli
or
addb
fldt
jbe
fwait
shl
ret
or
pop
lret
push
stos
xor
mov
sbb
cld
ret
or
mov
insb
cld
push
dec
subl
xchg
xchg
inc
ror
cltd
sub
pop
mov
xchg
cmpsb
pop
fcmovnbe
ss
push
pop
inc
xchg
inc
test
mov
testl
xor
and
push
mov
icebp
cs
adc
imul
push
push
sbb
test
sub
pop
int
daa
cli
outsl
dec
inc
mov
mov
jp
inc
xchg
imul
dec
shll
fadd
ljmp
lahf
add
and
xor
cmp
mov
lock
sub
xchg
mov
sub
stos
push
lfs
mov
test
ljmp
mov
lret
loope
sub
das
dec
xchg
xchg
push
inc
paddq
test
sbb
call
adc
jbe
inc
fstps
xchg
inc
das
idivb
enter
or
je
aad
push
push
add
lret
and
into
int
repz
add
xlat
sarb
mov
jge
or
sub
andl
rcrl
and
sbb
dec
mov
mov
jne
cmp
mov
push
xor
out
cltd
aas
sbb
stos
and
pop
loop
pop
cs
xor
aas
inc
inc
mov
in
lret
fcoms
insb
jl
pop
mov
dec
sub
push
incb
xor
sbb
mov
push
mov
dec
std
mov
pminsw
aam
sarb
push
sbb
bnd
sub
ljmp
pop
pushl
xchg
stc
jge
xlat
pop
push
xor
gs
stc
xor
dec
out
pop
mov
push
push
and
sub
pop
stos
jno
and
arpl
ds
lcall
dec
stos
xchg
and
sahf
addb
cmp
or
xlat
outsl
cmp
pushf
xlat
pop
mov
lea
add
mov
and
jmp
ja
sbb
loop
xor
shlb
ja
cmp
adc
sub
ds
movsl
lods
mov
pop
repz
sbb
push
mov
xlat
dec
xorl
ret
hlt
pop
in
push
push
cmp
pop
mov
lret
fcmovbe
jb
cs
insb
jae
scas
movsb
xchg
adc
lock
mov
cmp
aaa
cmp
pop
lahf
mov
and
add
incl
adc
cmpsb
cmc
test
stos
mov
cmp
inc
negl
jae
sub
test
hlt
push
or
stc
hlt
scas
jns
das
jbe
lock
cli
add
sub
cmp
cmp
sbb
inc
imul
lret
es
or
rcll
notb
jp
pop
sub
lahf
scas
mov
mov
pusha
inc
jnp
mov
dec
imul
or
mov
cld
pop
test
ret
outsl
or
aad
add
mov
cltd
and
mov
cmp
xor
mov
movsl
in
and
inc
cli
and
mov
pop
pop
adc
dec
jl
inc
fadd
add
pop
leave
subb
pop
test
mov
ror
repnz
xor
push
dec
dec
mov
stos
imul
xor
xor
cmpsb
cmp
sub
add
stos
stos
mov
push
adc
jo
nop
sti
push
mov
int3
jnp
adc
inc
jp
ja
movhps
rep
sbb
in
jmp
jbe
pop
fsubr
cmp
dec
or
lahf
dec
xchg
mov
push
xchg
sbb
adc
jmp
gs
test
cmp
jnp
mov
add
cmp
sbbl
xchg
gs
pop
pop
push
mov
push
inc
xor
lods
dec
mov
xor
pop
jmp
jl
pop
mov
or
mov
fcomps
dec
push
add
jb
add
or
pusha
addb
mov
or
jle
and
addr16
jle
jp
lea
inc
mov
xor
fsubrp
and
push
insl
pop
cmp
and
cmp
popf
mov
imul
lods
adc
adc
and
mov
xor
mov
xchg
stos
das
sbb
pop
sub
inc
nop
push
rorb
ds
iret
sub
mov
xchg
rep
mov
rclb
xchg
data16
repz
aad
push
adc
pop
mov
lods
bound
test
fisttps
fs
jecxz
jg
fsts
sbbl
push
jns
add
mov
sbb
cld
pop
xor
mov
rcl
inc
lahf
or
mov
adc
xor
pop
jo
cmp
xchg
mov
xor
mov
ss
out
sub
add
ja
out
add
push
icebp
cli
out
psubw
fnsetpm(287
shr
cmp
jno
xor
or
pop
add
mov
cmp
jecxz
and
push
xchg
add
inc
mov
ret
loop
aaa
aad
fsubl
jo
cmc
adc
aam
mov
mov
test
adc
or
add
cld
mov
add
cmc
adc
jno
cmc
out
mov
es
pop
je
adc
mov
out
je
cmp
jbe
imul
inc
cmp
fisttpll
fstpt
mov
popa
fadds
xchg
xchg
jne
out
xor
movsl
ret
divl
addr16
dec
fistpll
mov
xor
push
mov
pop
cmpsb
fldcw
mov
in
int3
inc
jg
jle
push
clc
pop
xlat
adc
mov
inc
xchg
push
xor
xorl
repnz
xchg
stos
adc
sub
mov
mov
sahf
dec
jp
lahf
out
and
divb
roll
sahf
push
test
ror
and
push
in
inc
add
push
sti
push
fisttps
pop
nop
xorb
jae
cmp
cmp
pusha
incl
or
rol
adc
mov
add
mov
ss
mov
adc
jbe
adc
jmp
icebp
cld
add
loop
lea
hlt
add
cmp
ficoms
push
outsl
addr16
pop
xchg
xchg
add
mov
sbb
aam
jo
jo
pop
cmp
aam
insb
mov
addr16
mov
outsl
mov
mov
cli
mov
or
pop
jb
fisubrs
sub
pop
push
stos
fsts
mov
xor
mov
inc
jne
mov
sub
loope
xchg
xchg
jmp
adcb
adc
push
xorb
es
or
push
add
testl
mov
xchg
mov
icebp
test
outsb
push
or
jnp
imul
push
cmp
pop
int3
dec
stc
sbb
add
pop
pop
xlat
sbb
mov
cli
push
in
lret
movsl
test
or
aam
xchg
jb
mov
in
call
mov
out
pushf
gs
cld
push
imul
sub
pusha
out
loop
jbe
testb
rol
or
cmp
enter
sarl
mov
aas
out
sub
and
push
dec
mov
mov
adc
hlt
aaa
cmp
push
push
and
sbb
gs
jo
das
pop
mov
dec
inc
pop
and
ret
fistps
jne
push
fidivs
inc
add
pushf
or
xchg
aas
jecxz
repnz
jmp
push
sbb
lock
pop
cmp
push
sbb
orl
jmp
testb
cli
imull
rol
dec
add
into
mov
xchg
cmp
jae
in
divb
lret
or
lahf
xchg
pop
pop
fsub
jge
rcrb
rorb
and
ds
xlat
mov
jecxz
pop
cmp
sbb
jno
loope
fs
mov
xchg
pop
sub
sbb
out
sbb
push
sbb
stos
inc
dec
andl
aad
mov
fbstp
jmp
mov
enter
push
loop
cmp
scas
push
push
dec
lcall
sbb
xchg
cli
insl
cmp
gs
jb
mov
mov
cs
loopne
mov
mov
insb
insb
pop
or
das
xor
fidivrl
pushf
sbb
iret
out
into
xchg
out
cmp
push
out
inc
jno
lret
mov
add
popa
testl
add
xor
subb
cmpb
out
sarb
cmp
addr16
outsb
jmp
jbe
sti
mov
pop
popf
ds
cbtw
jnp
repz
bound
outsl
rorb
test
cmpb
repz
xor
jnp
popf
push
arpl
push
out
aam
or
cmpsl
cmp
outsl
jo
xchg
mov
rcrl
cltd
shll
sub
stc
shll
pop
bound
pop
mov
mov
jp
lods
or
and
jge
adc
cs
mov
mov
divb
sub
pop
pushf
insb
out
push
xchg
pushf
jno
jo
and
test
out
inc
loope
inc
out
jb
pop
mov
pop
shlb
enter
fld
pushf
test
inc
or
dec
adc
mov
fdivs
add
cmpsb
xchg
dec
pop
sbb
fists
fwait
cmpsl
sub
movsl
cmp
xor
mov
push
loope
loopne
or
mov
mov
push
not
and
stc
inc
outsl
out
repnz
mov
adc
outsb
and
mov
mov
pop
stc
pop
xor
adcl
mov
fwait
movsb
int3
notb
mov
es
lret
cwtl
jbe
lahf
sbb
and
xlat
mov
cs
jnp
push
inc
icebp
xchg
sub
pop
jmp
loop
mov
and
pushf
sub
bound
mov
xchg
shlb
push
push
cmp
daa
hlt
add
stc
pop
push
cmp
sub
cwtl
jecxz
enter
jbe
imul
cs
and
and
test
inc
flds
jle
fldt
arpl
shll
repnz
jbe
fstps
mov
insb
out
mov
jbe
rolb
ss
pop
cmp
sbb
lea
push
pop
andb
inc
iret
daa
sarl
js
and
in
jl
ret
lods
ret
lods
fwait
add
add
cmp
outsl
lret
jb
jns
jmp
lea
movsb
out
cmc
mov
adc
xor
adc
movsb
dec
or
jae
jecxz
fwait
ljmp
outsl
add
hlt
mov
pop
cmpl
jae
dec
mov
loop
enter
add
lret
xchg
fiaddl
in
or
dec
lods
xor
jbe
icebp
dec
mov
add
enter
sbb
rcl
movsl
pusha
push
or
jnp
movsl
loop
jp
subl
dec
add
cmc
add
pop
pop
loop
shlb
jmp
mov
lods
das
jecxz
lods
vpmaxub
sahf
dec
push
ds
push
movsl
and
xchg
jo
and
cmpsb
push
cmc
mov
jno
mulb
dec
aad
push
xchg
jle
andl
mov
pop
mov
add
mov
jb
in
addr16
jecxz
rcrl
mov
xor
xchg
test
into
mov
scas
pop
add
mov
fbld
inc
add
mov
loopne
sub
pop
or
lods
adc
test
dec
pushf
mov
shlb
sbb
mov
aam
imul
and
push
push
inc
and
pop
sbb
push
ss
and
jnp
call
filds
packssdw
and
fadds
sbb
inc
jne
in
sbb
hlt
adc
xor
subb
dec
shlb
rclb
cwtl
xor
sub
mov
xchg
aam
loopne
xor
gs
or
outsl
mov
popa
sbb
jns
repz
push
adc
sbb
nop
repz
xor
jae,pn
mov
negb
add
in
iret
lods
push
in
mov
xlat
sbb
cwtl
pop
cmp
scas
xchg
push
mov
adc
in
cltd
sub
push
int3
addb
lea
loope
jne
insb
stos
fwait
xor
dec
pop
or
aad
fcmovbe
dec
push
mov
adc
loope
or
cmpl
cld
call
lret
std
popf
jb
inc
int
stos
jecxz
jo
roll
xchg
jle
sahf
mov
push
lods
ja
jnp
arpl
fimull
add
adc
mov
add
fsubs
inc
sbb
and
das
push
mov
xchg
jge
stc
lahf
push
xchg
inc
stos
call
add
jns
jge
out
sahf
popf
lret
scas
jecxz
jbe
std
add
lahf
cmp
lods
out
xor
pop
cmp
mov
jbe
mov
jge
mov
push
xchg
jp
sub
pusha
std
shlb
clc
hlt
add
shll
mov
lods
jbe
sbb
subl
sahf
insb
stos
mov
das
call
lds
push
mov
rolb
pop
mov
xchg
xor
pop
adc
push
adc
add
cmpsl
sbb
dec
popa
pushl
outsl
fisttpl
dec
ficoml
cmc
xor
cs
pop
sti
in
push
push
mov
cmp
push
test
popf
sbb
dec
jmp
jno
push
add
fcompl
test
mov
fs
mov
fidivrs
xchg
add
loope
dec
aaa
daa
loope
mov
cmp
repz
xor
jg
test
cmp
mov
rep
and
ret
add
mov
xchg
fistpll
loope
stos
negb
sbb
lods
loopne
aam
mov
mov
xor
aaa
jecxz
sbb
jle
xor
mov
xor
push
push
jmp
rolb
in
rolb
mov
pop
push
adc
xchg
and
bound
and
inc
loop
add
ss
push
lret
orl
adc
xchg
fnstenv
sub
and
jnp
js
pop
jge
sbb
or
cmp
ficoms
or
and
pushf
pop
in
cmp
test
pop
movsb
cmp
sarl
adc
and
cmpsb
inc
lret
push
test
popa
addr16
jp
mov
pop
jne
out
mov
test
arpl
and
lahf
stos
dec
xchg
test
rclb
int
cmp
idivb
ja
dec
dec
dec
cmp
dec
jno
lahf
not
mov
push
aaa
outsl
push
dec
fs
loope
mov
js
xchg
jb
rcrl
frstor
in
xor
jl
xchg
or
jp
icebp
push
xor
push
and
mov
jnp
push
sub
push
mov
loope
inc
add
imul
pop
adc
cld
pop
in
jle
sub
gs
xchg
xchg
dec
lahf
and
call
mov
dec
lcall
push
pop
jmp
push
aas
xchg
sbb
repnz
aas
mov
ja
xchg
repz
lds
mov
jmp
sub
fidivrs
pop
cwtl
xor
jno
add
push
adc
push
lock
mov
push
mov
sub
sub
push
ret
inc
xor
mov
sub
lret
sub
or
daa
sub
insl
es
mov
xchg
dec
call
inc
xor
js
pop
or
negl
lds
je
dec
inc
insl
adc
stc
andb
ja
jne
js,pt
xchg
pop
mov
ss
imul
and
adc
mov
daa
test
fbld
mov
jge
aas
jge
xchg
bound
out
and
adc
jl
push
xchg
rclb
leave
and
mov
jge
out
je
in
jmp
or
cmpsl
push
mov
sarb
lods
addr16
push
lods
inc
jb
test
movsb
xorl
out
das
pop
lods
xchg
sbb
loope
sub
dec
mov
push
xor
jmp
daa
adc
push
or
rorl
jmp
push
inc
and
adc
cmp
or
and
cmc
aad
mov
xor
incl
sbb
fmuls
icebp
lahf
and
xchg
lds
pop
scas
test
adc
loope
insb
stos
scas
push
nop
add
push
mov
or
imulb
push
push
fadd
fsts
arpl
sub
xchg
popa
xor
imul
and
das
filds
idivb
inc
loope
sub
lret
lock
pop
xchg
sbb
das
aas
jnp
or
xchg
fistl
sbb
mov
rcrl
cli
sti
mov
scas
and
jno
outsl
pop
aas
dec
mov
ds
rep
hlt
push
pop
or
mov
mov
dec
fnstcw
and
arpl
cmp
mov
shll
lcall
shl
xchg
and
enter
push
cmp
inc
sub
mov
xor
incb
cmc
push
dec
shll
adc
xchg
dec
sbb
rcl
int
adc
outsl
mov
xlat
lcall
push
bnd
push
cld
ss
sahf
cmp
testl
lds
push
test
adcl
xchg
leave
mov
jecxz
xor
imul
imul
add
in
loop
add
mov
xorl
mov
aas
popa
mov
arpl
pop
es
fs
pop
inc
loope
xor
ljmp
push
cmp
popa
lret
push
mul
pop
push
push
dec
adc
fsubrl
push
mov
mov
mov
popf
cmp
fucomip
sub
in
add
cmp
add
fistl
cmp
lds
in
add
dec
lock
scas
pop
in
add
inc
or
fwait
xchg
ret
in
jge
cmpsl
popf
sarb
adc
faddl
mov
popl
mov
aam
xor
lahf
push
adc
jp
adc
mov
lahf
ret
dec
sbb
orb
pop
les
push
loopne
push
or
pop
add
jp
js
xchg
adc
lret
test
pop
xor
lret
cmp
push
adc
out
test
enter
incl
bound
jo
std
test
in
fs
cwtl
les
fstps
push
push
lea
and
roll
cwtl
xor
xchg
test
sbb
pop
push
adc
mov
or
fsubp
xor
rcrl
mov
xor
or
jle
dec
icebp
sub
orb
aam
mov
pop
adc
mov
clc
sbb
mov
aad
lods
adc
scas
push
push
pop
xor
lret
push
lea
fldenv
jns
jge
dec
dec
or
xchg
scas
aad
xor
rolb
and
inc
cltd
out
fnsave
sub
lods
xor
mov
je
clc
add
push
sbb
or
pusha
xor
inc
or
add
xchg
xlat
jae
sub
add
int
lcall
mov
pop
xchg
jne
xchg
cmpsb
dec
jae
and
mov
lods
rclb
mov
jno
call
and
and
push
in
lods
scas
mov
lds
push
sbb
insb
shrb
sub
cmp
mov
ljmp
bound
mov
pop
adc
dec
ljmp
push
stc
mov
xor
xchg
fistl
scas
and
push
divb
aam
jp
jo
dec
inc
xchg
dec
add
loope
ljmp
xchg
scas
pop
pop
mov
mov
sub
xor
pushf
mov
call
rorl
dec
push
ja
fwait
mov
jb
mov
aas
lcall
inc
ret
add
inc
ljmp
lahf
fildll
inc
hlt
mov
adc
movsl
fldcw
jns
mov
dec
cmpsl
push
mov
gs
lods
out
ret
sbb
movsl
out
add
cmp
adc
sub
out
or
jo
inc
push
and
inc
aaa
and
cltd
data16
out
loopne
mov
xchg
adc
lods
out
out
int3
jl
idivb
dec
add
add
or
lods
pop
lret
cmpsb
xchg
cltd
in
pop
iret
inc
gs
pop
xchg
stc
mov
add
mov
mov
xchg
mov
lret
in
addb
dec
mov
test
jns
mov
movsb
jg
out
xor
jl
add
test
push
add
out
mov
repz
inc
mov
js
add
test
sub
testl
mov
addr16
cld
jmp
loope
mov
mov
mov
mov
or
into
out
aaa
mov
push
mov
add
pop
clc
inc
mov
sahf
pop
cmc
cltd
push
out
faddl
ja
or
aam
sbb
dec
popf
inc
mov
push
pop
int
cmpsl
jmp
daa
mov
jecxz
xor
inc
cmc
hlt
mov
frstor
sub
or
xor
rclb
mov
out
shll
in
mov
movsb
shrl
subl
mov
jp
ja
popf
in
lret
add
dec
sbbb
cmp
cmpsb
jnp
mov
mov
jns
fists
insb
sbb
pop
andb
pop
movsb
sub
rorb
and
into
or
and
fbld
popf
adc
push
cld
aad
xlat
pop
inc
dec
testb
sub
cli
sub
in
cmpsl
test
daa
dec
lcall
scas
add
xor
xorb
dec
fldl
leave
inc
jmp
aas
iret
in
and
mov
push
jge
pushf
aam
inc
sbb
push
cmp
loopne
mov
lock
inc
inc
mov
mov
cli
out
lods
cmp
jle
dec
dec
add
bound
ret
in
mov
push
jne
push
popf
mov
and
icebp
lods
or
into
xchg
jno
or
out
add
jg
sub
mull
xchg
sub
out
jnp
adc
out
scas
mov
mov
push
aaa
es
jb
sbb
sbb
testl
incb
mov
clc
into
adc
insl
imul
insb
out
mov
xor
fwait
leave
dec
xchg
push
pop
pop
stos
mov
cmp
xchg
pusha
cwtl
xchg
pushf
sahf
sub
xor
lods
sti
sub
arpl
jae
frstpm(287
dec
or
mov
lret
or
adc
pop
in
aad
pop
icebp
adc
inc
mov
gs
push
dec
stos
jo
rcl
push
sub
mov
call
fidivrl
mov
hlt
pop
testl
and
sub
nop
inc
mov
movsl
add
fisttpl
push
sub
jle
adc
pop
in
dec
jns
popf
sub
shll
dec
aad
negl
mov
sahf
xor
push
mov
sbb
cmp
sub
decl
test
cmc
out
xchg
notb
mov
cld
xor
loope
inc
mov
push
sbb
cs
mov
pop
push
pop
add
jl
xor
push
lods
ret
mov
fnstenv
sbb
cmp
mov
xchg
fidivrl
adc
push
mov
out
inc
adc
sahf
inc
jmp
mov
cli
and
mov
cmp
pushf
mov
fstpl
dec
dec
sti
dec
push
mov
movsb
cmp
mov
nop
pop
subl
outsl
arpl
dec
nop
jno
jge
repz
cli
dec
xor
mov
adc
pop
mov
insb
cmpl
in
mov
push
sbb
mov
and
pushw
mov
adc
ret
inc
arpl
lahf
and
imul
pushf
insl
lahf
std
push
les
hlt
stos
cmpsb
pop
daa
rclb
pop
push
sbb
mov
mov
cmp
dec
inc
rcrl
xchg
xorb
rorb
outsb
mov
adc
adc
fwait
dec
mov
dec
xchg
push
insl
out
call
test
pop
adc
cmp
orl
movb
addr16
or
jmp
iret
test
inc
sub
dec
dec
xchg
inc
cmp
jge
lock
adc
enter
xorl
cmp
cmp
lods
stos
vcmpsd
fidivrs
cmc
pushf
repz
pusha
jl
push
jle
inc
insb
jmp
fwait
into
pop
insb
add
nop
call
fdivrs
mov
pop
and
cmp
fiaddl
mov
xor
cmc
and
flds
lret
pusha
xor
sub
in
test
sbb
loop
mov
addr16
in
jo
xor
daa
push
push
pop
rorb
daa
dec
cmp
icebp
inc
test
mov
pop
call
xchg
sbb
in
std
sub
lea
adc
xchg
pop
sub
mov
lock
mov
mov
mov
rcr
push
and
fisubrl
and
cmp
pushl
int
pop
mov
jl
pop
xor
pop
push
lds
dec
and
dec
mov
repnz
jnp
lods
adc
xchg
lods
mov
flds
loop
add
rorb
xor
gs
imul
loope
aas
cmp
xchg
leave
jl
lret
dec
cli
dec
jne
inc
jno
js
mov
pop
andl
and
stos
dec
xchg
lods
jle
sbb
jno
mull
adc
lahf
orb
das
les
push
mov
aas
stc
cmp
shll
sbb
sbb
pop
push
xchg
subb
inc
sub
xor
jmp
pushl
xor
les
cmpsl
mov
popf
jl
mov
loop
out
movsb
mov
adc
dec
push
test
push
mov
inc
xchg
sub
andl
jecxz
jo
inc
je
cmpsb
push
or
insb
test
aad
jecxz
dec
and
xchg
mov
mov
inc
scas
xlat
call
rcll
loopne
xor
mov
xchg
test
test
ficoml
fnstsw
outsb
and
ja
hlt
lock
push
test
or
enter
pusha
push
mov
inc
out
add
outsl
pop
pop
push
lds
daa
sahf
adc
dec
adc
es
lock
in
jp
xor
das
fildll
iret
mov
popf
sar
cli
mov
cmp
sub
mov
das
mov
or
hlt
lods
xchg
rcr
dec
sub
ror
cmp
fcoms
jl
jp
jmp
jp
addr16
stc
mov
loope
or
mov
push
sbb
mov
loop
dec
aam
jmp
push
cld
adc
or
lods
adc
sbb
push
add
add
sub
cli
push
or
cwtl
test
imul
and
lret
pop
push
xor
sbb
push
mov
cmp
add
scas
test
xchg
sti
loope
adc
dec
lret
push
push
gs
jne
dec
fisttpl
push
je
adc
scas
js
or
loop
insb
xchg
sbb
in
imul
push
int3
xlat
cmp
sbb
xor
addl
pop
icebp
cmp
mov
xor
jne
pop
mov
je
fidivl
xchg
lods
popa
inc
xor
mov
shll
loope
int
negl
push
and
jb
lock
cltd
and
andl
xchg
sub
test
mov
es
bnd
in
enter
jo
xchg
std
xchg
push
add
out
fucomi
out
mov
popf
and
lcall
sbb
test
insb
test
imul
jne
push
fwait
or
jns
sub
movsl
mov
cmp
or
adc
xchg
ret
mov
mov
push
mov
rcrl
in
mov
es
pop
pushf
lcall
adc
xor
mov
jge
popf
push
mov
std
fwait
mov
push
lcall
sti
sahf
bound
push
or
mov
xchg
and
decl
cmc
mov
push
clc
ja
movsb
mov
daa
add
scas
iret
out
xchg
xchg
lret
cmc
pop
iret
cmpl
mov
stos
inc
faddl
lods
in
int
xchg
jbe
daa
pushf
pop
loope
in
cmp
outsl
jb
iret
int3
cltd
icebp
cmp
test
roll
xor
fsubl
dec
je
pop
jbe
jmp
cltd
mov
dec
lret
out
push
sti
push
bound
xor
adc
pop
mov
jae
mov
add
jmp
sbb
mov
repnz
pop
loope
dec
jecxz
sahf
popf
jae
sti
push
sub
adc
adc
cmpsl
stos
jmp
bound
popa
push
mov
sbb
xlat
jp
ljmp
xchg
sub
xor
mov
retw
pop
adc
or
xchg
jecxz
sbb
xchg
ja
iret
xor
mov
dec
sahf
dec
dec
imul
dec
lds
xor
push
sub
pop
mov
inc
or
sub
dec
sub
aas
fbstp
jmp
push
sahf
mov
xor
mov
pop
nop
adc
fidivl
mov
mov
sti
xor
lcall
das
mov
push
jae
arpl
jmp
or
xchg
push
popa
mov
sahf
inc
and
pop
xchg
gs
push
shl
insl
icebp
mov
je
adc
jl
mov
xchg
stos
inc
push
adc
testb
add
stos
outsl
inc
lea
stc
repnz
mov
pop
lods
xchg
jne
pop
fdivrl
xchg
addr16
fdivp
aaa
jne
aas
add
pop
ja
sub
dec
mov
pop
out
sbb
sbb
aam
push
scas
cltd
xor
test
push
adc
pop
sub
outsl
loop
mov
enter
dec
fisubl
cmc
add
mov
hlt
fs
mov
xor
pop
mov
incl
push
mov
xor
adc
adc
out
clc
icebp
outsb
dec
mov
fmull
aas
sbb
fistps
jno
push
inc
add
pop
add
or
jle
jp
or
stc
movsl
mov
movsb
and
sbb
out
mov
inc
ja
mov
mov
div
ja
xchg
xchg
xchg
add
pop
cs
in
xchg
adc
push
dec
pop
addr16
gs
inc
mov
adc
sahf
cmp
andl
fwait
bound
clc
push
fsubrp
loopne
cmpsb
adc
push
lret
pop
mov
mov
js
mov
stc
and
rorl
mov
mov
sahf
je
cmp
pop
pop
je
cmp
adc
std
push
xchg
pop
iret
jns
insb
imul
shr
movzbl
pop
test
test
andb
sahf
add
pop
inc
xchg
sbb
in
mov
ret
mov
orb
sti
jge
or
cwtl
pop
fs
loopne
adc
ja
lcall
loop
rcll
dec
adc
lds
inc
iret
sub
mov
jnp
mov
push
dec
adc
cwtl
stos
xor
and
mov
pop
mov
ret
xchg
mov
js
out
sbb
or
aam
test
or
jns
sbb
loope
lods
mov
sub
mov
bound
fwait
xchg
idiv
sbb
enter
xor
dec
pusha
jne
xchg
add
mov
cld
das
add
mov
lret
je
data16
lcall
mov
dec
mov
cwtl
pop
xchg
sbb
add
cmp
sahf
push
punpcklbw
mov
test
jl
pop
ss
in
movb
jl
pushl
pop
ljmp
push
mov
out
fistps
addl
pop
add
call
test
adc
sub
pushl
pop
popf
movsb
sbb
cmpb
pop
sub
gs
pop
pop
xorps
addl
jge
mov
js
fcmove
es
sub
dec
mov
lock
nop
test
lds
iret
das
scas
xchg
mulb
sbbb
jns
or
xchg
je
sub
popf
dec
movb
stc
test
xchg
andb
push
arpl
cmp
lcall
shll
cmpsb
adc
push
ds
orb
sbb
les
jmp
ljmp
push
pop
cltd
mov
aaa
leave
mov
test
mov
lods
hlt
pop
and
jnp
test
mov
bound
xchg
icebp
add
inc
push
outsl
xchg
xor
pop
push
mov
aas
jp
es
jp
adc
xchg
pop
pushf
in
loop
cmpsb
mov
inc
dec
jno
nop
and
ljmp
jbe
cmp
in
xchg
test
aaa
mov
add
les
test
cmovne
pushf
arpl
inc
es
push
push
daa
pop
jl
mov
xchg
fsubl
or
adc
pop
adc
fimull
mov
mov
add
int
xchg
or
jmp
std
xor
or
cli
aas
inc
push
stos
xchg
inc
jno
icebp
movsb
xchg
cmp
cmp
rcl
jp
into
jns
jp
fists
push
outsl
mov
xor
xchg
test
ja
jno
ja
or
das
lcall
xor
jge
pop
xor
pop
mov
cmpl
xor
pop
lods
test
jo
cmp
in
push
out
fadd
push
push
lret
mov
sti
ss
pushw
pushf
xchg
fwait
dec
ljmp
adc
jae
add
es
into
cs
dec
mov
push
mov
push
bound
mov
icebp
cmp
mov
std
pop
aaa
fisttpll
std
ret
and
scas
cltd
jno
mov
cmp
xchg
repz
sub
xor
sub
rolb
sub
sbb
mov
scas
aas
inc
cmp
cmp
sub
and
sbb
mov
out
nop
xor
aam
ljmp
std
mov
push
jne
into
fisttps
xor
sti
insl
mov
dec
jmp
cmpsb
pop
pop
rorb
jne
fstl
pop
popf
cli
add
sub
and
pop
cmp
dec
and
adc
mov
in
add
inc
dec
add
dec
xor
and
lcall
xchg
cmp
sub
jns
idivl
and
stos
cltd
pop
in
sbb
jnp
jmp
xchg
imul
pop
add
and
shl
cltd
ljmp
sub
pop
cmp
popa
daa
jo
jle
outsb
push
mov
adc
hlt
call
cmp
call
out
or
mov
ret
jp
repz
fstpl
add
inc
and
mov
pop
push
adc
jmp
std
xlat
repnz
mov
negb
xchg
and
jns
and
inc
cld
sub
mov
jg
adc
shll
scas
jl
cmp
mov
pusha
subb
cmp
lods
inc
sbb
rorb
mov
mov
mov
repz
mov
fwait
xchg
insl
rcll
scas
dec
lret
cmpsl
and
subb
fs
inc
push
jb
sahf
mov
add
sub
jb
add
shlb
mov
in
repnz
jne
add
dec
jbe
loopne,pn
test
lock
add
sar
xor
jecxz
jle
fsubr
iret
inc
fwait
sahf
test
sarl
sub
scas
sahf
jbe
sahf
xor
adc
daa
insl
sbb
lret
ljmp
andl
cmp
jl
jae
sbb
and
loopne
es
pop
dec
inc
xchg
xor
inc
mov
sbb
cmpsl
and
insl
xchg
stos
pop
jbe
jb
enter
test
push
sub
inc
jne
pop
or
insl
add
scas
subb
inc
in
xchg
out
sbb
enter
mov
ljmp
xor
or
lahf
movsl
and
pop
scas
in
and
mov
mov
add
xor
aam
inc
insl
mov
push
jp
gs
mov
inc
fs
xor
xchg
xor
adc
pop
cmpsb
mov
push
sar
fcomip
pop
orb
mov
cmp
lods
push
inc
mov
cmp
and
enter
leave
test
stos
aam
movsb
sti
loope
pop
inc
jle
fcmovnbe
xchg
rorb
sub
adc
into
pop
sarb
hlt
lahf
test
ds
and
add
adc
mov
nop
jae
rorb
ficomps
cmpsl
xchg
sbb
cs
inc
pop
adc
fildll
ret
jb
fimull
adc
xchg
sar
sti
mov
mov
push
test
dec
adc
cmp
mov
hlt
loope
mov
or
iret
mov
aas
cmp
loope
mov
out
mov
add
insb
xchg
ficoml
pop
mov
mov
add
add
cli
ljmp
sar
hlt
js
push
cld
push
aas
imul
mov
sbb
fs
jnp
insb
cs
sub
dec
mov
sub
mov
stc
sbb
add
pop
testb
mov
fsubrs
cmp
adc
jp
or
ret
enter
lret
dec
cmp
lcall
arpl
daa
mul
pop
es
in
mov
nop
aad
push
add
pop
inc
pop
xchg
xchg
jl
je
fcmovnbe
es
pusha
cmp
and
aad
adc
jp
lret
jecxz
lea
into
popa
xor
lahf
ficompl
push
inc
dec
push
mov
xchg
aaa
imul
movsb
lds
sub
pop
rorb
loope
xor
jne
sti
xor
jge
divb
xchg
lret
push
lods
mov
pop
pop
adc
lahf
and
lret
andb
xchg
sub
or
fcomip
and
sarl
sbb
mov
mov
popf
lea
scas
or
pop
mov
jecxz
hlt
int3
in
fstpt
ds
dec
or
mov
dec
nop
push
push
fldcw
mov
daa
nop
shl
adc
addr16
cmp
xor
or
inc
imul
mov
pop
scas
cmp
lcall
mov
jecxz
lret
and
sti
dec
jo
inc
xchg
rclb
xchg
hlt
add
xor
paddsb
push
add
das
cmp
addr16
inc
mov
pusha
outsl
dec
cld
xor
ret
test
add
shlb
test
lahf
aam
stos
xor
insl
testl
mov
mov
repz
bound
mov
pop
inc
loopne
or
or
dec
lods
scas
data16
mov
mov
fs
push
inc
imul
out
shr
sub
cmpsb
jmp
pop
fdivl
or
in
mov
or
imul
dec
jns
cwtl
outsb
or
stos
out
sub
jbe
sti
std
push
dec
mov
fiadds
and
xor
filds
dec
mov
mov
mov
add
jbe
imul
pop
sub
or
rclb
enter
incl
sbb
mov
mov
and
into
gs
mov
arpl
das
push
mov
jge
sbbb
xor
jne
cwtl
sbb
jge
iret
mov
test
jne
stos
repnz
jne
cmc
bnd
mov
push
xlat
pop
sbb
loope
ljmp
cli
adc
icebp
int
mov
xchg
icebp
arpl
shlb
cmpsl
sub
inc
ror
aas
sarl
fs
inc
lahf
gs
or
jmp
cli
jae
or
fwait
sub
incb
sub
mov
or
lret
popf
stos
xor
fwait
lret
fiaddl
jns
mov
dec
daa
pop
pop
arpl
inc
pusha
cmc
in
jp
mull
sub
xor
in
cmc
sbb
mov
stos
hlt
data16
test
lock
jne
cli
out
int3
arpl
stos
cwtl
stc
or
cmp
pop
icebp
mov
aam
addb
ljmp
sub
cmp
or
clc
mov
pop
mov
xlat
fs
cmp
ja
mov
add
xchg
inc
movsb
xchg
mov
fs
lods
dec
or
loop
and
adc
cmpsb
or
filds
clc
mov
rcrb
xchg
icebp
dec
or
jno
jb
scas
outsb
pop
pop
push
xor
cmpsb
and
test
jle
inc
pop
pusha
or
jl
sti
sti
je
push
add
jb
xchg
add
lret
push
out
or
cmp
pop
cli
lcall
and
mov
imul
sbb
je
mov
pop
mov
imul
push
pop
imul
test
test
fimull
inc
dec
pop
adc
adc
cmp
mov
and
inc
outsb
out
and
mov
mov
mov
pop
sub
cmp
push
ret
fcompl
mov
dec
pushf
psrlq
shll
mov
add
jb
pop
imull
sarb
pop
pop
xor
and
daa
adc
cmc
mov
jo
add
clc
xlat
inc
sti
xor
jge
pop
mov
iret
and
jnp
and
jnp
push
and
pop
push
in
mov
inc
mov
jno
incl
lcall
jae
sub
subb
jge
add
jb
push
fmulp
adc
stos
sub
push
dec
stc
rorl
jns
inc
xchg
scas
adc
cmpsb
add
inc
test
pop
mov
inc
cltd
lock
sub
push
and
int3
popa
outsb
cld
sub
push
adc
mov
mov
pop
in
pop
dec
or
aas
pop
ret
fldcw
enter
sub
dec
mov
mov
dec
negl
xchg
repnz
int
bound
mov
adc
mov
mov
cmp
push
test
push
xor
out
sub
pop
cmpsl
iret
call
cmp
inc
inc
imul
xor
and
mov
sub
push
add
ds
adc
mov
xchg
lret
mov
movsb
xchg
sbb
imul
sub
repnz
sbb
xchg
mov
aad
sbb
std
cmp
and
fdivs
fcmovnb
xchg
mov
gs
arpl
scas
out
out
inc
lret
mov
ficomps
lret
jnp
lret
mov
gs
xor
jecxz
stos
mov
incb
out
dec
lea
xchg
mov
das
ret
jns
cmp
cmp
je
clc
aaa
popa
loopne
adc
xchg
dec
sbb
push
scas
adc
dec
sbb
enter
inc
lods
into
xor
jecxz
call
fisubrl
mov
mov
pop
push
fwait
stos
push
aad
inc
bound
mov
jg
or
out
imul
pop
int3
pop
mov
xor
shrb
sbb
dec
fadds
les
ret
and
imul
sub
adc
vmwrite
xchg
mov
rol
push
xor
inc
mov
fldenv
in
std
cmpsb
or
sub
movsl
push
js
jo
std
xchg
mov
loop
ljmp
outsl
mov
hlt
sarb
mov
inc
outsl
idivb
in
add
dec
fistl
into
fucomp
cmp
sar
stc
cmc
ds
push
cmp
aas
in
adc
sub
xchg
stos
sub
sub
inc
pusha
addr16
cmp
nop
dec
out
mov
or
or
fsubrp
repz
mov
and
xor
cld
xor
inc
push
and
or
sbb
sarb
je
fiadds
jns
lea
mov
xor
xor
jg
int3
mov
xor
xlat
fstl
frstor
call
dec
xchg
pop
mov
adc
mov
insl
cmp
test
cmpsb
xchg
je
in
sbb
lret
or
xchg
xchg
clc
xlat
hlt
pop
pop
mov
jns
inc
jp
jge
popa
je
stos
scas
pop
insl
adc
lock
pusha
xchg
push
fmul
in
arpl
pop
jbe
sbb
mov
cs
adc
mov
cmp
jns
clc
cld
ret
inc
pop
jle
shll
cmp
gs
push
pop
xchg
imul
fcoml
jmp
jns
xor
cs
outsl
shll
or
leave
es
hlt
xor
jmp
fmull
lea
enter
sub
jno
cwtl
out
lds
adc
adc
popf
adc
enter
mov
fwait
outsb
jne
movsb
negb
dec
outsl
push
pop
rcll
pop
xchg
enter
jp
mov
in
popa
jl
call
xchg
or
jo
cld
xchg
mov
inc
mov
loopne
fucomi
jle
xchg
insl
movsb
mov
negl
mov
add
xchg
inc
mov
js
js
leave
cmp
scas
lock
adc
repz
lea
mov
movsb
scas
fbstp
in
xor
js
dec
into
xchg
xchg
push
or
xor
or
mov
pand
stc
stc
test
jae
les
adc
dec
cli
adc
xorl
sub
cmp
iret
mov
lret
mov
jo
pop
xor
and
mov
jb
movsb
lds
inc
push
in
arpl
shl
je
aaa
sbb
xlat
xchg
aas
ds
sbbl
push
cmpsb
fcomps
sub
push
and
add
minps
vmptrst
sbb
movsl
xchg
outsb
out
imul
orl
adc
mov
xchg
cmp
cmpl
lcall
push
in
iret
jno
call
cld
inc
mov
test
pop
sbb
loope
jmp
xchg
in
jmp
push
movntq
pop
pushf
lds
xor
dec
cmp
stos
adc
and
xor
pop
cmp
imull
mov
mov
sub
xorb
scas
test
or
mov
in
xor
cmp
ljmp
lea
shll
loopne
add
add
xchg
sbb
insl
scas
testl
pop
aad
xchg
xchg
rcll
in
or
sbbb
dec
cmc
push
ljmp
daa
mov
fs
cs
mov
or
pop
scas
cmpsl
out
insb
cli
and
xchg
clc
mov
daa
ljmp
mov
or
jmp
push
mov
daa
push
push
nop
xor
roll
orl
sub
push
jb
les
lahf
jg
cli
out
push
iret
xchg
dec
push
pop
fcmovnb
lahf
or
and
add
lret
jae
ja
test
cs
xor
loop
repz
mov
sarb
call
stos
ret
daa
fisubrs
xchg
repz
ret
add
push
jle
and
add
xchg
stos
sub
mov
negb
add
mov
add
xlat
faddl
fiadds
imul
movsbl
es
xchg
hlt
fistpl
nop
mov
fdivrl
adc
sub
sub
xchg
mov
jl
push
pop
mov
sbb
daa
ret
in
scas
enter
jl
cmp
lods
mov
fcoml
adc
ret
jne
jp
mov
xor
rolb
fadds
push
pop
mov
sti
sub
pop
ss
adc
xor
call
loop
dec
ds
push
dec
mov
xchg
cmpsb
inc
scas
cmp
dec
clc
pop
cmp
jb
stc
cmp
push
and
cltd
add
repnz
jns
xchg
pushf
jle
lahf
cs
push
pop
push
xor
xlat
pop
and
lea
outsl
adc
sub
test
cmp
popf
mov
loopne
lret
and
xor
cmpb
les
aam
push
rorb
sbb
test
es
sub
cltd
imul
jb
outsb
mov
pop
xchg
arpl
pusha
xchg
mov
and
outsb
lcall
push
jge
jb
xchg
sub
mov
push
adc
lret
orl
cmc
mov
repnz
neg
xor
test
pop
fwait
sbb
push
ljmp
dec
fdivs
sbb
xchg
or
js
out
testl
movsb
pop
fcomp
xor
test
out
sti
and
nop
pop
push
xor
sub
cmp
jbe
and
mov
pop
cwtl
jnp
xor
xchg
test
jg
sbb
cwtl
clc
pop
dec
sbb
xchg
or
dec
roll
das
fildll
in
sahf
mov
out
les
pop
mov
fidivs
movsl
cmp
or
fistpl
xor
xchg
ret
in
and
arpl
push
lods
push
mov
nop
lods
jl
idivl
out
jp
xchg
in
out
mov
jp
sbb
mov
fstpt
mov
or
jl
adc
push
out
popf
mov
aam
std
rcl
aaa
movsl
aaa
sub
push
jle
rcr
arpl
decb
hlt
sbb
stc
call
inc
loopne
push
jbe
imul
jmp
jb
fs
sbb
movsb
cmpl
call
orb
cli
aam
mov
btc
cmp
mov
repz
adc
loop
or
pop
push
mov
fmuls
sbb
xchg
jecxz
outsl
sarl
fsubl
mov
sub
aaa
jle
sar
jg
mov
pop
ljmp
xlat
push
aaa
or
mov
xor
nop
sarb
jle
sub
test
mov
dec
jne
sbb
pop
test
add
hlt
dec
pop
test
je
jbe
push
mov
loopne
pop
stos
or
in
bound
inc
insl
test
mov
pop
adc
xor
or
ret
sahf
or
mov
sub
xor
mov
xchg
push
sub
movsb
sbb
iret
clc
mov
shlb
sahf
mov
stos
jbe
pop
inc
lret
movsl
dec
jae
jl
in
and
sbb
jl
or
inc
sub
xlat
sub
fcmovne
lods
mov
jl
cwtl
in
adc
aaa
stc
fs
mov
jp
or
jle
or
mov
or
scas
cmp
or
dec
int3
push
mov
jge
inc
xchg
and
jp
mov
leave
jbe
mov
inc
in
movsb
ret
pushf
push
out
cwtl
repnz
inc
stos
mov
fisttpl
mov
adc
sbb
and
out
scas
mov
add
cmp
sahf
sbb
aad
loop
cmp
je
sbb
push
push
dec
and
shr
pop
mov
adc
lds
popf
ljmp
mull
fcomps
loope
dec
mov
decl
xchg
pop
or
popf
daa
sub
xor
cli
rcrl
lret
rorb
mov
insl
addr16
or
rcll
jmp
test
into
push
aad
push
mov
xor
dec
and
mov
hlt
mov
pop
lods
repz
sti
outsb
fwait
pop
cs
dec
pop
cmp
mov
xchg
scas
xchg
dec
lcall
add
dec
sub
push
dec
mov
adc
or
cltd
mov
sbb
mov
out
push
pop
std
cmp
test
les
pop
sbb
jmp
or
data16
outsb
cmp
sbb
jne
rorw
iret
adc
mov
imul
mov
js
cs
mov
sub
int3
mov
add
imul
inc
inc
mov
int
les
aad
cmp
xchg
adc
das
sti
push
pop
repnz
std
inc
stos
mov
sbb
push
xor
jp
mov
inc
pop
dec
mov
aad
punpckldq
sbb
into
stc
cmpsb
int
mov
inc
and
rclb
dec
mov
pushf
insl
sbb
iret
sbbb
cs
pop
sub
xchg
push
sbb
cmp
movsl
dec
add
stos
push
jl
fwait
and
outsl
xchg
dec
stos
dec
add
sub
aad
sahf
leave
adc
push
jle
or
adc
int3
pop
repnz
mov
jg
add
sbb
mov
lea
xor
aad
xor
std
loopne
inc
sbb
jae
xchg
sbbl
mov
mov
int
insb
aas
lcall
js
dec
out
es
or
orb
sub
jmp
test
or
ds
jnp
stos
gs
mov
stc
inc
movsl
cltd
fdivp
iret
or
sbb
or
xlat
xchg
das
in
add
scas
cmc
sub
push
mov
stos
fstpl
push
lods
sub
sub
ljmp
cmp
loope
sarb
vmaxps
jg
cmp
cmp
jno
aad
mov
test
cli
call
dec
mov
in
dec
cmp
rcrb
lods
xchg
iret
aaa
dec
mov
or
xchg
mov
xor
bound
xor
lea
xchg
mov
cmp
lcall
stos
jb
nopl
mov
inc
je
and
adc
aad
lods
jge
cmp
mov
jno
popf
jno
es
and
or
outsl
outsl
push
fsts
imul
sub
inc
adc
adc
jge
insb
aas
or
or
daa
test
lcall
push
pop
fadd
pushf
adc
popa
outsb
daa
ret
jg
jb
add
jae
xor
ds
mov
inc
sbb
add
or
test
dec
cld
andl
divl
lock
push
dec
push
in
out
pushf
je
andl
lcall
push
pop
mov
xlat
xchg
jle
jp
cld
flds
arpl
leave
and
lret
mov
cmp
outsl
jb
push
dec
jmp
push
pop
pop
cmp
lret
adc
cmpsl
int
jg
fildll
pop
fwait
test
into
shll
aad
mov
mov
cmpsl
inc
pop
stos
dec
repnz
xchg
push
imul
jo
xchg
shll
push
rolb
inc
cs
sbb
inc
xchg
cmp
jge
sub
incl
and
ficomps
in
jp
mov
pop
sub
sbb
dec
dec
fcomp
notb
adcl
cmp
or
loopne
lea
mov
push
leave
mov
int
mov
fadds
xchg
or
xchg
xor
popf
fimuls
cs
ljmp
sub
icebp
int3
stc
aaa
adc
xchg
pop
outsl
mov
jb
sbb
in
cwtl
inc
sbb
mov
xlat
test
sbb
ljmp
arpl
sub
es
and
xchg
sub
jge
mov
add
sub
test
jbe
sub
and
inc
rorb
cmp
xchg
mov
imul
icebp
cs
cmp
sbb
addl
cmp
dec
jecxz
adcl
leave
cmc
mov
and
sub
cld
cmp
hlt
insl
dec
jg
xchg
adc
sub
cmpxchg
gs
int3
shrl
jecxz
clc
int3
lock
loope
leave
add
dec
ret
scas
lsl
mov
mov
push
xor
orb
repnz
and
sti
test
loop
pop
dec
pop
dec
jge
jae
push
into
and
pop
and
scas
pop
mov
push
push
pop
ljmp
fsubrl
xor
add
xor
mov
insb
lods
xor
ss
roll
xor
sbb
add
jae
add
lock
leave
adc
cmp
adc
pop
mov
out
push
icebp
xchg
loopne
lods
sbb
xchg
jno
mov
xchg
jecxz
push
mov
lock
pop
adc
lcall
push
mov
push
scas
sbb
popa
pop
imul
inc
and
ret
int3
pop
dec
enter
leave
jle
xchg
in
cmp
and
nop
or
in
lret
add
mov
cmp
cltd
mov
inc
xor
bound
dec
sub
sub
pop
add
ja
hlt
loopne
xchg
cmc
sub
mov
fnstenv
adc
in
push
sub
mov
sar
jmp
jle
and
push
sbb
out
lods
call
pop
pop
stc
scas
sub
xor
stos
fsubr
in
push
shll
imul
clc
push
adc
cmp
les
push
mov
sbb
out
push
jo
fisttps
fadd
aas
enter
inc
stos
repz
inc
jecxz
cmp
ret
lds
fwait
clc
cmpsb
test
sub
aas
js
into
decb
pop
repz
or
sarl
pop
inc
stos
fisubrl
out
push
adc
cmp
ljmp
in
ds
sbb
xchg
divl
sub
mov
mov
or
jp
in
out
lock
pop
dec
add
or
cmpsb
cld
mov
add
ret
fs
push
cmp
shlb
fs
pop
cmpsl
hlt
jle
inc
cmc
loope
std
popf
lods
enter
cwtl
test
push
and
pop
pop
push
cltd
xor
hlt
adc
movsl
fcoms
xor
jmp
enter
fildll
lock
das
mov
aaa
ftst
testb
ret
cwtl
and
and
fsubl
aaa
xor
push
ljmp
or
push
mov
and
and
stc
icebp
add
into
adc
fistpll
loop
cmp
out
insl
jnp
mov
mov
dec
ss
dec
cmp
sbb
cld
xchg
das
jge
sbb
or
int3
and
mov
roll
shlb
inc
push
pop
in
sbb
inc
lret
and
jmp
lds
in
jne
scas
shrb
imul
xchg
xorl
adc
scas
adc
je
std
mov
js
dec
and
dec
adc
and
sub
cli
adc
mov
jo
cmpsb
cli
testb
test
negl
cmp
popa
xchg
sti
in
ds
or
inc
push
std
xlat
and
jecxz
sub
pop
mov
xlat
cmpsb
or
jb
shll
mov
inc
mov
nop
cmp
movsl
scas
add
push
mov
and
xchg
loop
pop
xchg
dec
lds
and
lods
fstpt
pop
push
xchg
add
je
fwait
mov
jecxz
lock
incb
ret
test
lods
cmp
push
mov
mov
jbe
xchg
mov
xor
sti
lcall
sub
adc
out
call
sub
push
nop
inc
jo
xchg
out
idiv
xor
in
xchg
loopne
fidivrl
test
sub
fcomps
mov
inc
aam
ja
cmp
aad
xchg
cwtl
push
insb
push
loop
sbb
repnz
pop
mov
les
sarb
sbb
pop
int
int
in
dec
inc
mov
popf
mov
lret
mov
and
scas
pop
jecxz
xchg
or
adc
rorl
enter
popf
adcb
rcll
sbb
icebp
push
push
fdivrs
jge
inc
and
add
or
ljmp
mov
jl
mov
sarb
cmpl
inc
push
push
adc
adc
jo
aaa
mov
jno
mov
je
sbb
ds
sub
pushf
in
xor
arpl
popa
or
jbe
xchg
sbb
mov
mov
adc
push
jl
jmp
outsl
ja
inc
fisubrs
pop
sbb
or
call
mov
xchg
mov
and
jo
aas
ja
fbstp
jge
lahf
jmp
pop
movsl
pop
mov
test
aam
add
int
mov
int
pop
add
enter
dec
pop
scas
in
ljmp
jae
cmp
xor
loopne
pop
int3
addr16
mov
cmpsl
in
mov
push
xchg
rorb
mov
sarb
loope
mov
push
push
or
je
sti
jnp
sbb
inc
movb
sbb
pop
enter
mov
xor
lret
xor
insb
dec
or
push
pop
jbe
test
lods
sbb
daa
push
add
into
stos
xchg
cli
mov
mov
push
aad
mov
addl
out
inc
out
cmc
dec
sbb
and
xor
addb
add
je
icebp
mov
aam
inc
ss
xchg
adc
mov
adc
push
stc
mov
xchg
xchg
push
jle
std
je
cmp
in
dec
xor
dec
fdivl
xor
movsb
and
std
push
scas
call
js
sub
rolb
jae
sbbl
inc
in
ljmp
fiaddl
push
into
out
je
pop
add
mov
cltd
xchg
arpl
movsb
aaa
mov
ret
addb
xorb
loopne
daa
cltd
dec
lret
push
mov
mov
repnz
scas
or
pop
sti
hlt
loop
lods
pop
inc
push
inc
rorl
shll
rdmsr
and
dec
dec
ret
inc
mov
ds
inc
push
cwtl
xor
add
div
add
orb
xchg
add
xchg
cmpsl
pop
pop
add
push
inc
lock
fists
mov
mov
dec
jmp
inc
inc
cmp
int
mov
dec
stos
xor
lea
xorl
or
xchg
push
scas
cmp
and
lods
shll
insb
sub
add
repnz
addr16
sub
out
mov
in
insl
mov
push
and
in
cwtl
lods
push
stos
mov
mov
gs
les
les
push
pop
iret
or
adc
lret
aas
pushf
clc
sbb
push
neg
loop
rcrb
imul
adc
mov
xor
lock
pop
lret
in
inc
sarl
pop
xchg
fiaddl
xchg
lret
popa
shlb
mov
push
outsb
scas
pop
stc
std
xchg
rorl
cmp
xlat
or
popa
in
mov
or
testl
xor
mov
outsb
int3
lret
fildl
aad
mov
dec
psrad
iret
movsl
and
xorl
testb
pop
or
sub
lahf
sub
ja
xor
rcll
lods
mov
mov
popf
sbb
jns
cmp
scas
cli
cmpl
xor
push
add
adc
push
addl
cmpb
jle
jno
aaa
hlt
pop
rcrb
imul
or
pop
push
and
add
dec
leave
cmp
pop
int3
jo
sub
or
shlb
mov
loope
cmpsb
add
xor
arpl
iret
int3
in
gs
cmp
sub
test
lcall
add
outsb
xchg
jnp
lea
mov
mov
gs
out
xor
mov
call
cmp
sbb
xor
xchg
fnstcw
negb
lock
pop
imul
pop
push
addr16
adcl
sbb
push
xchg
mov
mov
xchg
cmpsb
xorb
mov
mov
aas
mov
pop
pop
dec
out
cli
pop
cld
scas
mov
mov
push
xchg
push
xor
pushl
add
aad
es
sahf
add
lods
cmp
inc
dec
and
sbb
push
xchg
jnp
xchg
scas
add
icebp
test
push
cwtl
pop
sub
pushf
push
or
xchg
mov
lahf
andl
pop
and
cld
jecxz
jno
mov
add
lcall
std
andb
loope
xchg
pop
mov
jns
hlt
cltd
loopne
sbb
mov
lcall
cwtl
mov
inc
mov
add
cltd
dec
jnp
mov
mov
or
jg
pop
pusha
sbb
rolb
mov
pop
test
mov
imulb
adc
jnp
inc
imul
bound
sbb
xchg
incl
pop
fs
cmpsb
xchg
push
xor
cmp
push
loopne
jmp
in
mov
lods
hlt
fistpl
jb
js
sbb
push
repz
push
scas
out
popa
inc
add
enter
repz
rolb
xor
or
lock
subb
sbb
dec
cmpsl
in
jle
scas
fisubrl
inc
sbb
push
sbb
xchg
aad
loopne
dec
sub
jmp
lock
cld
add
inc
enter
mov
cmpsl
mov
addl
add
inc
dec
cs
push
and
rcpps
js
inc
nop
clc
inc
inc
cmp
mov
inc
push
or
mov
and
lcall
in
jle
or
lods
sub
mov
arpl
adc
lds
pop
cmc
popf
lcall
cli
jb
jne
or
test
mov
or
insb
xchg
loope
shlb
pop
out
scas
andb
inc
sahf
dec
rol
pop
iret
pop
in
push
lock
add
push
adc
jge
and
adc
push
fimull
dec
jbe
push
repnz
cmp
xchg
push
int3
std
enter
mov
push
movsl
pop
and
ret
or
mov
je
fcoms
sub
and
out
jge
xchg
and
imul
add
int3
flds
enter
mov
or
sbb
shrl
lea
adc
dec
lock
sbb
dec
cmp
or
dec
rorb
fldcw
push
pop
adc
and
jle
in
adc
push
add
fcmovnb
sub
lret
std
inc
jbe
xchg
into
int3
es
aam
add
lock
or
push
mov
testb
or
cmp
xchg
js
data16
xchg
leave
cmc
push
xchg
dec
lds
pop
pop
mov
sub
jl
or
mov
sub
lcall
xchg
lods
cld
jl
push
add
or
lahf
das
mov
inc
add
pop
and
xchg
ret
push
add
fisubrl
jnp
ljmp
ljmp
jo
int3
sbb
data16
inc
sbb
movsl
xor
jnp
xchg
loop
or
test
fmuls
mov
add
in
jmp
xor
jbe
mov
mov
ss
inc
fstpt
js
and
mov
jecxz
ljmp
sbb
xor
mov
lods
sbb
inc
stos
in
cmp
inc
or
cmpsb
aam
xlat
arpl
sbb
mov
ret
add
stos
mov
cmp
sbb
je
outsl
outsb
cmp
insb
mov
xlat
repz
out
imul
mov
cli
and
iret
inc
jb
ret
int
xchg
rclb
leave
out
das
push
jl
test
pop
xor
and
jmp
out
jbe
sbb
add
gs
dec
movsl
fs
and
das
movsl
push
push
cmp
inc
lods
shl
pop
mov
aad
add
fldl
sarl
jbe
movsb
ficoml
push
jmp
fadds
pop
repnz
mov
repnz
jne
inc
adc
loope
adc
sbb
adc
insl
sbb
dec
xor
mov
jl
cmp
fsub
stc
std
mov
inc
mov
ret
movl
in
inc
aaa
mov
xor
and
call
pop
roll
sbb
mov
popf
mov
jb
cmp
flds
repnz
sbb
sbb
and
movsb
inc
xor
add
movsl
outsl
push
int3
pop
js
dec
xchg
push
hlt
adc
mov
and
inc
jb
data16
and
push
icebp
lods
fsts
mov
stc
push
jmp
shrl
inc
mov
imul
dec
mov
fdivl
rcr
repnz
hlt
out
xlat
push
mov
sbb
loope
fisubrl
cmp
outsl
fstps
sbb
out
jecxz
hlt
jl
in
mov
jecxz
dec
push
and
xchg
mov
sub
cld
xchg
fnsave
jp
pop
xor
jl
jl
add
mov
inc
call
mov
scas
mov
jnp
fbstp
pusha
jb
mov
enter
mov
jo
mov
sbb
dec
push
push
push
jne
cltd
xchg
aam
add
sbb
and
cmp
and
jb
shl
iret
addr16
ret
adc
add
repnz
sub
cmpsl
mov
mull
inc
stos
js
inc
movsb
xchg
or
add
mov
mov
jle
enter
sbb
jl
cld
mov
arpl
add
adc
pop
push
lods
movsl
shl
push
inc
mov
inc
sbb
inc
sub
push
mov
or
sbbb
rep
xchg
fsts
dec
xchg
call
cwtl
out
fimull
xchg
flds
loope
xchg
rcrb
pop
sub
or
or
sbb
sti
mov
aaa
aam
mov
mov
mov
ljmp
pop
movsl
sub
inc
lret
mov
jg
aas
and
xor
mov
ret
sbb
adc
test
dec
lahf
shr
jge
xor
scas
fsubp
jns
mov
loopne
test
ss
stos
add
pop
jge
mov
cmp
int
xor
jecxz
push
xor
dec
fwait
jl
xor
loop
pextrw
inc
cmp
inc
mov
adc
push
aad
imul
push
int
decl
push
adc
mov
out
aaa
mov
imul
xchg
iret
pop
mov
mov
jl
mov
ficoms
push
aas
je
in
dec
dec
dec
lods
mov
and
clc
dec
hlt
in
xchg
mov
mov
ret
mov
push
mov
push
js
mov
stos
xlat
js
out
das
xchg
insb
xlat
jae
pop
mov
sub
sub
mov
mov
xchg
jge
and
lahf
daa
call
mov
pop
insb
lcall
int3
pop
sbb
lahf
push
test
sub
push
jo
je
cwtl
out
in
jae
fs
mov
aaa
daa
repnz
sub
xlat
add
sub
xchg
gs
movlps
addr16
push
or
clc
lods
xlat
lahf
mov
dec
and
data16
in
cmp
pop
mov
cmp
push
es
mov
js
xor
aaa
insb
movb
pop
inc
daa
repnz
and
arpl
push
test
xchg
or
ljmp
dec
aam
sbb
mov
stos
dec
ret
daa
xchg
mov
sbb
aaa
mov
mov
add
loope
sbbb
dec
jne
dec
sbb
cmp
repz
clc
inc
arpl
inc
pop
int
cwtl
movsl
push
dec
adc
mov
imul
popa
js
ficompl
testb
lods
adc
jg
aad
push
sbb
cmp
jge
adc
nop
jl
sbb
push
cmp
repnz
loopne
inc
or
rclb
bound
dec
notb
sarb
lods
out
xorl
test
pop
scas
adc
push
fbld
test
repnz
add
mov
negl
sbbb
mov
imul
sbb
mov
xchg
fidivrl
frstor
mov
fucomi
pop
xlat
lahf
ss
add
lods
xchg
mov
push
inc
push
push
jmp
ljmp
add
test
sbb
sbb
fsts
push
pop
lcall
push
sub
or
fisttps
insb
nop
mov
add
das
outsb
ret
cmpsl
mov
dec
fmul
outsl
xchg
test
inc
pushf
aad
mov
dec
int
stc
add
leave
testb
mov
ss
insb
or
iret
pusha
jo
daa
mov
int
lret
scas
in
shr
xchg
imul
pop
clc
and
sbb
dec
out
mov
stos
or
fdivr
push
imul
mov
cltd
pusha
test
daa
ds
daa
xor
mov
pop
inc
fimuls
jl
sbb
pop
arpl
addl
imul
mov
loopne
dec
scas
test
pop
clc
cmpsl
cli
dec
sbb
push
out
es
sbb
inc
loopne
das
mov
pop
sub
jb
jle
add
mov
inc
sub
lea
mov
std
lcall
xchg
data16
jp
pop
pop
and
scas
je
jbe
push
iret
popa
imul
cs
and
add
jno
out
mov
out
mov
gs
lahf
enter
fstpl
adc
or
sbb
xchg
aas
xchg
mov
adc
cmc
in
jns
movsl
je
cwtl
or
les
push
data16
xor
xor
mov
jmp
popf
jbe
push
lret
or
popf
xchg
leave
xchg
inc
cld
std
mov
pop
in
or
shll
clc
or
and
jmp
or
repz
xchg
mov
aas
or
stc
jae
test
or
pop
out
sub
add
cs
sub
jg
sub
lahf
aad
sub
shld
xchg
imul
int3
outsb
xchg
inc
scas
jl
pop
sub
cli
popa
lock
push
or
hlt
lods
xor
bound
inc
pushf
push
add
dec
and
ljmp
jmp
cwtl
int
and
mov
xor
insb
jbe
cli
testb
fiaddl
push
push
ret
lds
xchg
movsl
inc
jae
dec
jmp
imul
insl
jecxz
mov
mov
insl
dec
push
jle
mov
jae
aam
negl
adc
mov
cmp
sti
sbb
movsb
or
ds
scas
not
sub
daa
xchg
xchg
sbb
add
mov
cmp
in
inc
push
test
push
rorl
jl
sarb
enter
fisubs
mov
out
mov
lahf
roll
gs
jne
cmpsb
mov
sub
inc
sarl
add
sahf
sbb
std
and
and
loop
test
fisubrl
jg
mov
es
or
mov
out
nop
xchg
fmuls
mov
mov
dec
xor
jecxz
pop
mov
mov
sbb
lock
lods
ljmp
fdivrl
sti
jbe
mov
lret
inc
aas
in
inc
or
stc
xchg
shll
iret
aad
sti
push
jno,pt
or
jo
or
mov
push
lcall
sub
mov
fisubs
stc
sarl
gs
dec
rolb
mov
mov
add
in
fs
mov
rcrb
subb
mov
pop
je
into
xor
ljmp
lret
sub
pop
jmp
mov
subl
cmp
iret
inc
push
mov
push
or
inc
sub
movsb
sub
popf
sbb
ret
pop
popl
lahf
and
dec
loope
add
out
mov
cltd
jne
test
add
cmc
dec
lods
sbb
aaa
push
jmp
data16
fildl
cmp
sbb
rcl
jae
mov
cwtl
pop
lock
dec
dec
push
xchg
fwait
sarb
mov
jle
mov
stc
ja
xchg
testb
cmpsl
test
rclb
xor
sbb
mov
imul
test
lcall
lds
pop
jo
in
repz
in
jecxz
lret
lret
mov
popf
add
jmp
rcll
and
fidivrs
pusha
sub
into
mov
lock
or
movsb
test
enter
ss
aas
into
cmpl
push
divl
and
ja,pt
push
jl
push
addl
sarb
adcb
inc
add
fidivrl
stc
popa
pop
insl
adc
mov
pushf
inc
addl
clc
jle
test
sub
lds
lcall
movl
pushf
fwait
adc
cmp
push
and
shll
out
pop
orb
out
jo
push
mov
xor
sub
pop
adc
jae
push
inc
inc
scas
lods
inc
outsb
ljmp
out
popf
mov
add
movsb
repz
mov
sbb
les
jg
fdivrl
pop
pop
cld
sti
and
or
inc
ret
pop
jmp
or
xchg
jmp
mov
mov
mov
out
and
add
inc
mov
xchg
inc
jae
inc
stos
les
jo
in
mov
pop
sub
jne
jecxz
cwtl
lods
adc
inc
sub
xchg
sub
pop
lret
mov
fadd
fs
test
cmp
lods
mov
aad
xorb
cmp
nop
push
sbb
xor
sti
repz
clc
aaa
pusha
pop
and
dec
inc
aaa
jbe
push
roll
jbe
aad
sbb
push
xor
addr16
je
insb
pop
sub
push
dec
test
cmp
and
mov
push
pop
mov
push
xor
inc
jp
stc
xor
gs
sbb
add
js
clc
iret
inc
mov
push
xor
loope
pop
xchg
mov
test
in
negb
push
decb
push
movswl
xlat
sbb
sub
cmp
dec
sbb
jno
cmp
cmp
push
mov
arpl
rcr
jmp
sbb
inc
rcrb
imul
das
scas
into
call
push
aam
push
jns
xor
push
sahf
mov
fisubrs
push
push
adc
bound
pop
fwait
mov
jg
lea
mov
ss
mov
cli
sub
jnp
das
out
mov
lret
adc
xor
xchg
fldt
das
repz
xchg
mov
out
call
sbb
mov
dec
insl
shl
ljmp
in
or
sbbl
dec
xlat
cmp
dec
xor
jno
outsl
pusha
aaa
sbb
int
dec
shl
and
insl
test
faddl
xchg
lods
enter
xorb
dec
fnstcw
lds
dec
imul
jno
xchg
fldenv
mov
fsubl
rcrl
ds
cmp
sub
fcmovu
mov
sbb
mov
clc
jbe
outsl
jmp
xchg
mov
mov
paddsb
xchg
leave
loopne
subb
leave
insb
push
sub
enter
or
roll
jbe
out
test
mov
lahf
paddd
cli
mov
cmp
cli
pop
mov
pop
dec
mov
xor
dec
or
inc
xor
jge
loop
xlat
pushf
cmp
data16
ret
jmp
mov
jb
bound
stos
jmp
stos
dec
jns
addr16
filds
mov
fldcw
dec
cmc
lcall
adc
icebp
in
ss
in
mov
mov
pop
push
adc
sub
movsl
mov
fidivl
inc
mov
out
std
sub
sahf
or
scas
mov
mov
sub
xchg
add
inc
xchg
sarl
dec
cmpsl
outsb
mov
cmp
pop
out
and
js
xchg
cwtl
push
sarb
inc
ret
aas
out
ficoml
leave
ja
repnz
js
sub
shlb
lock
jne
aas
cmp
mov
mov
or
pop
or
pop
dec
cltd
decl
jge
and
mov
push
jbe
std
jne
movsl
hlt
sbb
pop
pusha
add
cwtl
lock
clc
xor
add
add
inc
popa
lea
adc
enter
mov
mov
cmp
fwait
lcall
dec
jns
and
movsl
aam
xor
xchg
rorl
call
loopne
les
movsb
add
jne
or
iret
ds
pop
add
out
dec
test
mov
dec
xor
mov
arpl
jecxz
test
push
roll
aaa
daa
and
mov
aas
add
or
fdivrs
mov
sub
rorb
imul
and
xchg
fldl
pop
mov
test
call
fsubrs
in
roll
mov
mov
cli
mov
cmpsb
lock
mov
inc
jecxz
inc
lahf
inc
dec
popa
stc
xchg
and
out
pop
je
gs
test
cmpsb
cltd
xchg
sub
in
push
mov
and
xor
pop
jge
mov
popf
lcall
stos
dec
mov
fcmovnu
mov
inc
sbb
add
add
loope
inc
lgdtl
push
lds
repz
in
scas
imul
xchg
mov
xchg
xor
enter
rorl
outsb
pop
out
mov
xchg
push
inc
mov
xor
lcall
pushf
pop
mov
das
movsl
sbb
bnd
mov
dec
popa
push
int
xor
xor
cwtl
pop
or
ljmp
xor
pop
ja
popf
mov
dec
insb
jo
dec
mov
sbb
insb
fsqrt
xor
movl
sbbb
lret
mov
fsub
out
add
mov
cmp
sbb
and
add
sbbb
inc
cli
adc
mov
mov
int
xchg
inc
call
stos
lcall
mov
cld
push
ja
cmpsb
mov
imul
sahf
pop
and
scas
jnp
pop
leave
sar
int
imul
push
xchg
push
repz
lods
cmp
mov
std
mov
sub
in
imul
sbb
ljmp
cltd
xchg
pop
mov
popa
xchg
dec
shl
push
push
xchg
dec
adc
fbstp
cmp
and
or
repz
lcall
inc
xor
xor
and
insl
in
lock
pop
jge
push
test
push
xchg
and
xor
xchg
jp
xchg
fs
mov
out
ja
fwait
lahf
rcll
mov
enter
add
dec
xchg
adc
shlb
lock
and
loop
sbb
call
xchg
imul
mov
gs
enter
jg
or
es
imul
aas
ljmp
pushf
jb
xchg
roll
test
push
addr16
lret
les
xchg
mov
sub
and
out
push
call
xchg
xchg
lods
lods
mov
mov
std
ja
jl
stos
ret
cli
imul
shl
aam
jns
jmp
outsb
outsl
and
sti
sbb
and
cli
mov
cmc
sub
testl
int3
or
cmp
fs
pop
add
loopne
mov
ret
cmp
mov
adc
or
sub
push
popf
sbb
mov
fisubs
pusha
cmp
inc
and
and
mov
dec
lret
jge
xor
test
outsl
sub
push
mov
test
ja
push
sbb
push
xchg
cwtl
cmpsl
mov
mov
cmc
jo
mov
mov
test
push
cmpsb
cmpsb
sub
popa
jno
subl
jne
lods
mov
aad
imul
dec
movsl
gs
fsub
pop
andb
jae
add
movsb
sub
push
sbb
and
mov
inc
lods
jle
mov
lahf
outsb
and
push
and
mov
pop
loopne
lea
test
aad
adc
in
sub
pop
leave
mov
push
sbb
shll
popf
pop
jg
adc
xchg
movsl
mov
jne
sub
popl
pushf
jecxz
ret
push
jnp
cmp
mov
mov
pop
fsubl
mov
adc
fcomps
lahf
mov
cwtl
pop
or
cs
push
xlat
jecxz
jno
lods
lret
xor
test
mov
icebp
rolb
jo
push
icebp
andl
cltd
in
lods
and
xchg
mov
sbb
loope
cld
fs
mov
pop
ss
xor
mov
fildl
mov
mov
fildl
imull
mov
adc
incb
test
je
adc
sbb
aas
jmp
outsl
bound
adc
es
dec
nop
inc
mov
cmp
mov
ffreep
adc
fwait
jns
aaa
mov
repnz
jo
iret
xchg
and
dec
rolb
mov
mov
and
jge
rolb
push
cmp
test
cmp
decl
pop
jmp
pop
push
pop
dec
mov
push
rorb
rolb
std
add
mov
inc
sub
incl
xchg
movsl
pop
pushf
dec
scas
idivb
aam
test
xlat
mov
dec
mov
addl
lahf
jbe
jle
fdivr
and
xchg
sti
es
in
adc
push
daa
sbb
lock
lret
pop
jb
aaa
cmp
aaa
xor
shll
push
testb
inc
mov
out
cmp
lahf
jne
mov
loope
ja
mov
or
xchg
jge
sub
xchg
jb
insl
xchg
popa
xchg
and
lods
mov
hlt
xor
cmpsb
roll
and
enter
imul
orl
mov
fnsave
dec
and
call
scas
ficoms
daa
lret
scas
aam
sar
scas
xchg
sub
fsubr
sbb
mov
sbb
and
or
push
or
dec
popa
subb
leave
cltd
fidivrs
mov
mov
roll
shl
jnp
ret
sub
mov
sbb
sbb
xchg
stos
mov
and
mov
fstpt
xchg
xor
jo
add
xchg
dec
jp
mov
repnz
out
cmp
jl
das
mov
xchg
sbb
lea
lret
xchg
adc
sti
mov
faddp
cmpsb
scas
adcl
sbb
push
cli
mov
out
and
mov
mov
cwtl
jmp
pop
and
mov
shrl
pushf
xor
addr16
sbb
rcrl
inc
fwait
pop
cmpsb
fistpl
dec
mov
enter
push
add
add
push
adc
in
adc
or
in
mov
inc
rcrl
and
loope
outsl
sbb
push
mov
cmp
sbb
xchg
mov
mov
aam
jmp
cmc
cli
jnp
jns
les
fdivs
mov
push
dec
pop
mov
mov
fsubrs
cmp
stos
jl
sub
aam
mov
pop
lret
mov
cld
std
cmp
mov
adc
negb
sbb
outsb
cli
jmp
cmp
fistpl
sub
mov
fs
in
lods
xor
int
cli
jns
sub
repz
adc
mov
testb
stos
xchg
imul
jbe
js
cmp
dec
jle
inc
adc
imul
fs
push
dec
data16
jns
imul
ret
lods
mov
dec
inc
mov
sbb
jmp
xchg
cli
jb
xor
mov
scas
xchg
fisubrs
xchg
xchg
fidivrl
add
dec
sbb
pop
sub
into
pusha
dec
jb
mov
shr
pop
in
outsb
add
xor
lock
cltd
and
les
imul
xchg
cld
push
test
xor
mov
add
mov
cmp
cmp
fwait
adc
add
cmp
jo
rcr
inc
push
loope
in
cltd
mov
dec
inc
xor
inc
xor
xchg
scas
jg
movl
popf
inc
mov
rep
out
pop
loopne
pop
fsubrl
scas
adcl
add
adc
cmpsl
out
and
es
and
push
dec
stc
cmp
das
dec
mov
pop
add
sbb
mov
pushl
divl
cltd
mov
cmpsl
ret
push
nop
movsb
lcall
mov
cmpsb
lods
sub
xor
rol
inc
mov
outsb
dec
sub
pop
push
adcb
ja
pop
and
push
fwait
icebp
push
jno
and
daa
in
sti
mov
or
mov
fmulp
insb
fcompl
sub
dec
pop
inc
in
clc
into
xlat
sbb
xorl
jbe
call
out
mov
inc
ss
dec
add
mov
pushf
mov
ja
in
push
mov
enter
xchg
pop
mov
add
dec
aad
mov
call
push
repz
xchg
push
js
pop
fcmovne
in
repnz
push
stc
fldenv
out
sub
iret
cmp
xchg
nop
sbbl
and
imul
ret
sbb
movsb
movhps
xor
scas
mov
rorb
mov
mov
add
sbb
test
icebp
push
and
in
or
inc
jnp
inc
mov
test
aam
cs
loop
xor
clc
ret
int3
shll
xchg
push
jecxz
in
fnsave
jo
xor
shrl
cltd
dec
mov
mov
jns
add
sbb
jmp
or
jecxz
cmpl
xor
andb
stos
ds
in
and
stos
pop
cltd
xor
and
and
ret
movsl
xor
test
pop
testb
mov
mov
xchg
cs
mov
xor
fiadds
and
das
sbb
sti
jg
popf
lret
inc
cmc
cs
pop
mov
sbb
lret
pop
ss
cmp
xchg
stos
xchg
clc
das
cmp
pop
jo
outsl
scas
rolb
scas
sti
sti
daa
movsl
cmp
or
cmpb
aas
fdivp
pushf
mov
ficoms
hlt
loop
stos
sbb
into
pop
dec
sub
jne
adc
out
lcall
sbb
push
jnp
add
xchg
cmp
pop
popa
push
and
cmp
pop
loop
dec
mov
scas
xor
xchg
adc
push
jp
and
push
ja
pop
jnp
push
xor
pop
add
into
pop
mov
pop
pop
mov
frstor
add
add
inc
aad
cmp
hlt
mov
scas
push
adc
adc
movl
into
jns
mov
jecxz
adc
sti
in
push
js
cltd
and
scas
add
inc
lods
add
inc
jecxz
inc
lock
popa
enter
mov
outsl
nop
out
lret
sub
cld
mov
in
jge
das
out
cmp
int3
add
jns
push
jmp
shrl
arpl
mov
push
push
cmc
icebp
jne
nop
push
lds
nop
fcmovnu
xchg
sti
add
fs
sbb
jg
jp
test
push
pusha
and
cwtl
and
cmp
inc
int
leave
and
cmp
out
xchg
jl
lret
push
pushf
sub
mov
icebp
sub
mov
mov
frstor
lods
cld
andb
mov
test
movsl
push
fs
stc
dec
xor
fs
fnsave
sub
cmp
mov
ficoml
les
xor
sub
add
push
jg
in
dec
xorl
xchg
add
jg
ds
pop
sbb
add
mov
call
and
mov
pop
je
fstps
jns
in
mov
xlat
fdivs
mov
pop
negb
cmp
add
mov
daa
sub
mov
mov
cmp
inc
cmp
cs
ror
arpl
sub
sub
adc
repnz
roll
jg
int3
ret
out
cmpsb
in
rcrl
mov
xchg
lock
mov
jmp
pushf
jb
lcall
ss
lahf
decb
jl
adc
repz
adc
jle
inc
movsl
xor
cmp
mov
push
test
sti
mov
adc
mov
xor
xchg
or
ds
iret
inc
ljmp
mov
mov
xchg
ja
xor
pop
mov
testb
lock
lock
mov
mov
mov
mov
or
mov
pop
es
and
sbb
lea
loop
or
out
div
sbb
stos
fisttps
pop
daa
stos
add
inc
call
push
jns
in
cwtl
xchg
mov
out
jne
mov
push
jnp
or
stc
inc
out
test
dec
mov
jnp
pushf
xchg
jecxz
push
inc
addr16
mov
std
push
inc
xor
pushl
orb
out
pop
js
dec
les
jmp
mov
or
mov
push
mov
mov
mov
jbe
pop
adc
icebp
inc
fwait
sbb
pop
xor
sub
cmp
sub
add
in
mov
pop
sbb
and
insb
pusha
push
pushf
cmp
inc
sbb
test
int3
clc
xor
xorl
js
rcrl
fsubl
xchg
inc
fcoms
jl
cmp
and
xchg
and
and
mov
xor
bound
mov
cmp
mov
icebp
aaa
mov
sub
pushf
shlb
jp
dec
loope
xor
mov
sub
lods
adcb
cli
sbb
mov
lods
xchg
or
sub
test
test
and
sbb
je
data16
jl
adc
mov
or
loopne
pop
frstor
imul
xchg
dec
int
fadds
xchg
sub
sub
mov
push
leave
push
xor
add
mov
fs
adc
push
and
mov
xchg
mov
add
pop
popa
movsb
stc
les
push
sahf
ja
das
in
test
mov
orb
jno
mov
push
pop
ja
je
jo
mov
jne
test
pusha
jnp
mov
pop
fs
cmc
aam
cmp
repz
inc
sbb
dec
gs
imul
pop
roll
jno
out
or
jne
jg
imul
and
orl
fisttps
inc
repz
cmpsl
in
fsub
fisubl
sub
dec
rclb
lock
xchg
mov
movsl
dec
scas
mov
lcall
cmp
ss
shll
mov
clc
sub
addr16
inc
pop
pop
inc
out
jg
dec
pop
dec
mov
pop
ret
push
icebp
mov
mov
push
clc
inc
and
into
fs
xor
xchg
movsb
cmp
push
mov
sub
arpl
stos
fmuls
mov
jecxz
sarl
rolb
test
inc
loop
push
or
popa
push
and
lahf
fldt
dec
insb
jne
rcrl
dec
xchg
ret
out
sbb
xor
lods
das
mov
push
sarl
xchg
flds
fwait
and
mov
incl
jl
xchg
frstor
cmp
pushw
sub
jo
mov
cmp
xchg
out
adc
jmp
adc
insl
add
mov
and
xor
ja
dec
out
xor
cmp
les
or
add
sti
mov
sti
stc
dec
push
mov
cltd
pop
fmuls
int3
add
xchg
roll
loop
pop
push
jl
or
xor
mov
jmp
mov
jo
jg
test
loopne
and
and
jo
xchg
repz
mov
push
movsl
sub
adc
lea
sbb
pop
stc
repz
dec
dec
cmp
xor
adc
pop
scas
enter
mov
push
jne
mov
mov
add
pop
jns
add
leave
push
cli
jmp
mov
aam
jecxz
scas
dec
inc
inc
adc
inc
cmp
pop
js
cmpsl
paddsw
push
jae
fidivl
ja
jle
nop
fldt
ret
repnz
mov
cld
jge
pusha
mov
mov
clc
cmp
xchg
sub
jne
scas
loop
or
or
ds
repz
out
or
cmp
sbb
and
data16
xchg
mov
cltd
dec
or
outsb
jnp
incl
pushf
shlb
add
addr16
cmc
negb
jl
scas
jle
lock
repz
aas
push
test
lea
push
push
gs
inc
push
js
outsb
cltd
sbb
mov
push
adc
int
cwtl
jbe
std
hlt
jmp
sub
mov
mov
mov
or
pop
fsubrl
xor
dec
mov
out
mov
cmp
popa
es
cmp
out
push
adc
jl
adc
loopne
leave
push
lods
push
xchg
mov
push
cmpsl
stos
inc
xchg
inc
xchg
or
aam
inc
push
and
inc
cs
out
xor
into
mov
adc
adc
jp
lods
xchg
add
add
pop
popa
stos
push
sti
jns
and
adc
cmp
outsl
mov
popf
idivb
jb
addb
or
adc
dec
daa
sub
pop
testb
lret
out
dec
arpl
sub
sahf
scas
cmpsl
push
jle
in
mov
pop
cmp
xor
adc
adc
xor
cmp
push
cwtl
rcl
lcall
mov
ret
push
insb
in
sbb
fisubrs
fstpt
add
jge
xor
sahf
lods
insb
das
dec
mov
cmpsb
xor
int3
cmp
or
cmpsl
or
cmp
mov
insl
mov
add
test
jl
sub
push
loope,pt
push
fcoms
jl
sar
jnp
lcall
mov
call
mov
fsubs
into
fs
sarl
mov
jge
adc
and
ja
enter
cmp
andl
sbb
push
jmp
and
imul
cmpsb
xlat
movsl
scas
or
sub
adc
jl
nop
shl
pop
aam
pusha
in
or
decl
cmp
push
es
insl
pop
pushf
movsl
sub
inc
adcl
add
in
sti
lea
out
xchg
dec
daa
cmpsl
mov
or
dec
cmp
cltd
les
and
sbb
jne
inc
sbb
inc
mov
imul
mov
push
pop
cmp
outsb
adc
or
and
sbb
icebp
mov
lret
push
mov
cmp
adc
ljmp
cmpsl
xor
and
adc
int
test
jns
and
jp
jl
cmpsb
jg
mov
sbb
shl
xchg
dec
das
into
jb
inc
lahf
xchg
cli
aad
adc
std
cld
add
scas
flds
sti
xor
jg
pop
xor
and
add
sti
mov
out
aaa
lea
scas
shll
in
ljmp
lahf
fidivs
outsl
push
fidivrs
enter
outsl
lock
shlb
cmp
lahf
sub
lahf
jnp
cmpsb
das
mov
xchg
cwtl
xor
adc
cmp
cmpsb
loope
and
cli
pop
or
popf
sarl
pop
cmp
jnp
jo
or
adc
arpl
rolb
mov
add
das
ficoml
cmpb
push
cmpsl
sbb
lahf
int
inc
es
mov
subl
xorb
cmp
xchg
or
inc
in
mov
jno
and
popa
jecxz
adc
shl
dec
mov
xchg
mov
insl
xor
inc
sbb
pop
xchg
push
mov
mov
js
fidivrs
aas
xor
sbb
xchg
cmp
pusha
jo
dec
stos
mov
outsb
fisttps
cmp
dec
movsb
or
aam
pop
loopne
je
iret
mov
movsb
lcall
ret
insl
in
mov
xchg
jb
jae
sbb
jg
lock
daa
lcall
into
je
mov
sar
fwait
dec
add
movsb
jnp
rol
dec
mov
inc
mov
mov
inc
movl
les
sub
and
sub
test
ret
subb
mov
push
icebp
jmp
sub
cs
stos
push
fadds
scas
or
cmp
cld
adc
aam
loopne
jo
scas
push
movsb
clc
add
xchg
jbe
and
dec
cmpsb
dec
jmp
jnp
mov
mov
mov
js
cmp
push
or
push
push
loop
movsl
or
mov
xor
sbb
sbb
add
lods
bound
add
aad
jge
inc
mov
sub
mov
push
inc
ficompl
jbe
insb
cwtl
xor
addb
mov
push
xor
imul
adcl
mov
jmp
add
add
pop
movsb
jl
cmc
cmp
test
push
insb
dec
and
loopne
adc
jne
jle
dec
cmp
push
or
jb
pushf
lds
push
mov
mov
pop
push
pop
sarb
inc
loope
mov
ret
push
inc
cmp
push
imul
fwait
or
xchg
sbb
xlat
and
jns
jg,pt
push
or
mov
cmp
dec
lcall
inc
or
lds
aaa
adc
xor
mov
aam
inc
push
cwtl
cs
push
sbbb
cmc
sbb
in
adc
je
dec
lock
dec
pushf
out
shll
push
popa
xor
adc
mov
out
in
fcomi
mov
sbb
outsb
cmp
mov
stc
fcmovnbe
dec
icebp
or
add
clc
adc
imul
dec
sbb
inc
paddusw
or
mov
pop
sti
mov
das
and
lcall
popa
mov
sbb
cmp
sbb
out
aam
add
or
mov
and
cmp
push
or
mov
arpl
pop
enter
stos
iret
xchg
push
in
aad
xchg
hlt
shlb
loopne
pop
fstpt
mov
sbb
ds
test
loope
mov
std
jo
stos
mov
mov
pop
pushf
subl
pop
xlat
mov
bound
cmc
or
xor
mov
mov
clc
sbb
cli
pushf
dec
gs
cltd
or
das
xchg
dec
or
mov
xor
ljmp
xor
adc
jmp
testb
addr16
jbe
sub
pop
fiadds
call
jbe
enter
fnstenv
xchg
mov
push
adc
lods
add
mov
rcrb
out
mov
and
pop
mov
inc
pop
cmpb
and
pop
and
fldt
mov
mov
mov
lahf
pop
inc
aaa
and
inc
jb
lahf
and
xor
pop
addb
out
out
adcl
lret
pushf
pop
stos
sub
pop
dec
mov
aam
mov
push
nop
pop
clc
fdivrl
out
jno
ret
subb
adc
add
push
std
xchg
adc
ret
jns
das
xor
lret
andl
and
xchg
jne
andl
or
mov
and
test
imull
shll
mov
test
inc
rorb
cmp
out
js
cltd
sbb
lcall
cmc
xor
inc
fistpl
ds
or
and
push
lds
iret
mov
xor
aad
mov
and
jbe
and
daa
lret
inc
pop
xor
xchg
and
arpl
adc
push
jge
pop
lock
fstl
push
inc
adc
shll
push
mov
cmp
test
call
lds
bound
iret
and
inc
std
rcl
faddl
mov
cs
xchg
ror
mov
int3
test
pop
pop
adc
insl
cmpsl
int
pop
mov
cmp
daa
fwait
mov
mov
in
rcrl
cs
xchg
pop
test
jmp
movsl
sub
pop
pop
pop
sub
adc
sbb
adcl
lahf
push
int
sbb
cld
and
lds
jbe
mov
icebp
dec
push
int
push
rcll
mov
addb
cmp
xchg
repz
pop
sbb
sub
loopne
xor
mov
loop
jnp
test
les
stos
jg
jl
mov
fsts
or
movsl
mov
ljmp
jg
loopne
pushf
js
mov
mov
xchg
lds
add
cli
fbstp
xor
xchg
jo
fldt
mov
movsb
sbb
sub
xor
rcr
mov
add
mov
cmp
sub
pop
jmp
mov
icebp
aas
mov
or
mov
hlt
add
mov
push
sub
mov
pop
xor
inc
pop
or
mov
bnd
and
pop
jmp
movsb
xchg
xchg
jbe
insl
and
fldl
pop
dec
mov
lds
loop
pop
push
dec
je
push
mov
mov
jno
jge
aam
and
xor
scas
js
and
in
xchg
sub
mov
jmp
mov
xchg
xor
jmp
enter
in
mov
push
or
and
outsb
sub
mov
je
loope
xor
lret
pop
mov
sub
aaa
mov
js
aam
jmp
divw
push
pop
loop
es
sbb
scas
inc
xor
pop
jo
sbb
sti
add
inc
loop
pop
mov
aam
mov
fcoml
fdivrp
and
outsb
aaa
out
sbb
pop
pusha
mov
jns
mov
and
pop
daa
pop
shlb
sti
mov
inc
xor
loop
add
inc
popf
xor
sbb
add
mov
push
out
sti
mov
mov
daa
inc
mov
in
movsl
in
push
mov
stos
mov
int3
mov
mov
push
gs
xchg
arpl
aaa
sub
test
xor
sti
and
mov
adc
ja
cmpsl
aas
loope
jns
out
stc
shll
ficomps
lods
sti
scas
nop
insb
push
scas
inc
daa
es
jbe
lock
xor
cmp
outsl
adc
jge
pand
cmp
push
pusha
rclb
call
fucom
scas
lock
call
dec
sub
mov
jbe
ds
je
pop
push
fadds
add
dec
inc
fwait
cmc
push
in
add
xlat
jae
pusha
daa
in
cmp
pop
loope
and
push
repnz
jmp
daa
add
mov
repnz
adc
mov
inc
sbb
mov
mov
and
int3
and
sub
imul
fcompl
fcomps
jle
shrb
mov
std
cwtl
cmp
and
fistpl
mov
pop
add
and
aam
imul
or
call
and
inc
and
std
inc
stos
fsubs
sbb
test
rorb
jecxz
inc
xchg
ss
js
adc
pop
xchg
and
mov
or
mov
fsincos
cmp
lds
inc
push
test
cwtl
enter
push
stos
shlb
sbb
ficompl
xlat
sbb
js
pushf
or
aas
add
add
or
and
push
adc
pop
fwait
xchg
rolb
or
scas
xchg
shlb
outsl
and
pop
lods
bound
inc
loopne
js
push
and
mov
inc
outsl
ret
fwait
jmp
in
pop
xlat
into
or
test
repz
xchg
imul
mov
add
sti
popa
scas
rorb
cmovns
std
inc
sub
lcall
fbld
ret
mov
sbb
pop
ret
insl
mov
loope
xlat
mov
imul
cltd
std
cs
mov
lahf
inc
pushw
lock
inc
pop
xchg
xchg
xchg
mov
xchg
xor
sti
loop
push
lock
fstpl
rorb
es
cli
mov
fstpl
loopne
jge
adc
push
mov
cmpsl
pop
insb
pop
inc
push
aaa
push
cmp
dec
mov
push
pop
lcall
fwait
mov
adc
adc
js
mov
fwait
pushf
mov
sbb
sbb
repz
sbb
in
xor
mov
lcall
dec
inc
jb
inc
jne
mov
mov
add
sbb
mov
incb
jbe
ror
int3
dec
cmp
test
jp
sub
push
mov
popf
fsubrl
add
sub
int
lock
dec
dec
shll
jmp
mov
lret
je
ret
push
psubq
lahf
xor
aaa
andl
xchg
arpl
test
xchg
mov
sub
movsb
lods
fadds
sbb
jmp
cmp
mov
push
iret
and
xorb
insb
inc
xor
pop
loope
mov
ret
adc
dec
pop
mov
jb
jl
pop
imul
sub
insb
and
jmp
ret
cmp
int3
aam
sub
dec
fucom
sbb
jmp
xchg
dec
jno
xor
dec
das
lock
stos
push
cmpsl
jp
jge
pop
je
push
and
or
pop
xchg
xchg
cmp
cmp
jno
nop
push
lcall
pop
sbb
faddl
icebp
test
popa
lods
add
nop
dec
daa
mov
movswl
push
sbb
ja
xchg
mov
les
jp
mov
add
jne
scas
mov
loope
mov
call
sbb
gs
push
cmpsb
movl
sub
sub
iret
xor
std
lcall
shlb
sub
jg
nop
sbb
inc
sti
hlt
insl
jmp
inc
fcmovb
ljmp
cwtl
sahf
cmpsl
push
dec
push
inc
les
aad
mov
iret
imul
push
jb
pop
adc
xor
mov
js
fldt
jle
test
cli
addr16
or
xlat
fisttpl
cmpsl
ffreep
lds
jg
adc
and
cld
sub
call
loopne
mov
add
hlt
leave
or
sbb
int3
fwait
stc
mov
add
xchg
dec
inc
rcll
add
mov
push
addb
mov
pop
push
dec
dec
aaa
sbb
cmc
stc
xor
cmp
mov
testl
push
lcall
pop
stos
sbb
cmp
mov
in
leave
loope
cmpsb
bound
adc
mov
aad
mov
jge
dec
lods
in
push
lret
pop
test
cmp
pop
repnz
sub
incb
sub
stos
sahf
pop
aad
cmc
mov
punpckhwd
stos
out
into
push
push
jb
push
jae
inc
and
add
mov
jge
or
leave
add
pop
leave
jbe
dec
mov
dec
adc
xchg
jmp
jbe
outsb
jae
fs
dec
pop
insl
cmp
inc
sub
loop
dec
push
xchg
push
sub
jg
sub
sub
mov
mov
shrb
sbb
mov
mov
dec
je
jo
xlat
xlat
xchg
lcall
mov
xchg
sub
outsb
shlb
pop
mov
mov
mov
xchg
icebp
push
ljmp
sub
xchg
push
repnz
and
out
mov
jo
shll
cmpsb
push
iret
sbb
pop
pop
lods
scas
test
icebp
jmp
and
fsubs
out
add
xor
bound
xchg
arpl
test
fxam
inc
aam
rcll
aam
mov
fidivrl
sbb
or
std
mov
or
movsb
cltd
adc
and
sub
xor
mov
sbb
cld
fcompl
fwait
rcrb
fcmovnbe
out
push
and
mov
in
shlb
stos
jbe
or
mov
adc
lock
pop
mov
xor
xor
lcall
push
das
es
test
fstl
inc
dec
out
mov
push
in
mov
subb
into
jecxz
shlb
rcll
jecxz
dec
push
sub
rcr
mov
lods
ret
push
xchg
mov
xor
jne
or
int3
pop
out
push
enter
adc
dec
int3
repz
sub
push
lret
dec
mov
sbb
dec
int3
and
jmp
jbe
cs
cwtl
dec
pop
pop
cmp
ss
gs
aam
ficoml
jmp
sbb
and
push
sub
out
decb
cmp
imul
cmpsb
mov
mov
mov
push
sbb
std
mov
daa
popf
mov
xchg
cmp
push
adc
pop
and
jb
stc
data16
dec
shlb
push
and
jl
lds
ffree
xor
or
lods
sbb
into
sbb
sub
insl
mov
adc
sbb
int3
jle
movsb
xchg
and
popa
lea
outsb
inc
pop
cmp
mov
clc
ret
jae
xchg
push
adc
mov
enter
ss
push
negb
dec
call
rcl
and
xchg
sbb
push
lret
pop
lahf
fidivrl
or
repnz
or
mov
fbstp
sub
jg
aam
lahf
jmp
enter
inc
int3
xor
adc
out
or
shl
data16
mov
push
sbb
or
and
and
sub
and
sub
ret
push
jmp
shr
push
xchg
mov
adcb
fstpt
repnz
int
add
fs
jnp
fs
aaa
ss
mov
add
adc
stos
xor
jae
jp
mov
push
movsl
dec
pushf
ret
inc
jo
into
negl
add
testb
add
lret
push
sbb
inc
mov
nop
nop
cmp
gs
mov
adc
xor
mov
pop
cld
fnstenv
mov
jb
xchg
push
out
ret
scas
pop
mov
jnp
mov
jg
cmc
pop
sbb
sbb
imul
jge
bound
or
mov
ds
jb
xchg
aam
and
jecxz
and
jae
sahf
xlat
jbe
xchg
add
sbb
add
xchg
mov
nop
mov
scas
sarl
fsubs
aad
xchg
xlat
push
pop
je
push
jmp
adcb
pop
pop
movsb
setne
and
addr16
push
test
cmc
xor
pop
xor
adc
out
mov
outsl
xchg
push
dec
cmc
aad
ja
nop
lods
mov
inc
inc
iret
inc
pop
add
adc
inc
xor
jnp
mov
insb
into
inc
push
iret
adcb
in
mov
pop
fwait
push
scas
in
jae
push
xor
jmp
push
fsubrp
int3
cmpsl
inc
aas
test
lret
cli
jno
xchg
divl
add
mov
jecxz
sub
insl
xor
dec
iret
pop
mov
mov
inc
shll
adcb
dec
jnp
dec
mov
mov
push
cli
pop
scas
sahf
lds
int3
mov
add
pop
pop
push
inc
cmc
les
or
jp
xchg
inc
jns
imul
daa
dec
popa
sbb
add
sar
dec
push
add
insl
push
sub
int
enter
push
fdivrs
push
inc
dec
or
mov
enter
xor
pop
push
mov
in
mov
movsl
mov
sbb
leave
repz
pusha
dec
loop
out
fdiv
mov
sub
mov
push
lahf
mov
add
adc
inc
lock
and
fsts
in
data16
push
mov
push
insb
mov
lea
xor
aas
es
stos
mov
or
add
and
xlat
lret
sbb
sub
or
stos
mov
arpl
insl
jle
decl
cmp
pop
nop
xor
mov
sbb
repz
xchg
and
cmp
sbb
xchg
aam
fcomi
hlt
mov
sub
and
orl
xor
mov
xor
mov
cmp
cmp
xor
andl
push
call
insl
jge
sbb
push
cld
and
pop
mov
arpl
xchg
push
stc
shlb
aaa
xchg
dec
cmp
daa
popf
test
adc
sbb
pusha
mov
adc
jmp
push
and
push
jbe
and
pop
and
jmp
fisubrl
test
cmpl
pop
pop
in
subb
mov
dec
loopne
or
push
std
push
push
cltd
mov
stos
cmpsl
scas
lahf
mov
dec
negb
enter
xchg
cmpsb
cltd
mov
mov
xor
loope
int3
fcompl
or
or
imul
cltd
inc
sub
ja
movsl
sub
adc
out
cmp
add
xor
push
xchg
out
insb
enter
scas
pop
addr16
out
gs
dec
mov
icebp
cmpb
outsb
mov
cs
adc
hlt
xchg
imul
push
stos
lods
cs
jmp
jle
lea
lods
arpl
cmp
mov
test
cs
jae
inc
aad
pop
test
imul
sub
xchg
mov
pop
fisttps
nop
ret
ret
fwait
sbb
mov
out
sub
sub
movsl
cli
lock
inc
xchg
mov
pusha
xor
add
in
fdivrp
sbb
fdivr
dec
mov
pop
dec
sub
jno
dec
sub
test
aam
xor
pop
daa
pop
jo
lahf
mov
pop
cmp
les
xor
dec
bound
test
push
popf
push
adc
jp
adc
adc
nop
pop
addr16
push
fbstp
nop
in
out
ret
int3
or
xchg
xchg
test
mov
cltd
add
mov
mov
insl
mov
fsubl
xchg
insb
jle
bound
push
icebp
add
inc
jle
inc
in
mov
stos
jnp
xor
shll
and
jp
ret
push
xchg
mov
cltd
pop
hlt
push
sbb
dec
cmp
cli
sub
push
jns
lret
lods
mov
loopne
cltd
cwtl
pop
mov
andnps
adc
cmp
inc
add
mov
inc
mov
pusha
mov
cmc
pop
sub
ss
pop
lds
mov
lret
int
xchg
push
std
add
mov
in
sbb
out
loope
je
mov
sbb
les
aad
arpl
aam
and
mov
xor
dec
inc
popa
mov
push
jmp
int3
movsl
cmpsb
push
or
or
pop
leave
push
adc
cmp
mov
pushf
hlt
inc
cmc
movsl
push
mov
out
jnp
scas
sbb
loope
inc
loopne
scas
iret
or
in
cmpsb
popa
in
into
mov
lret
hlt
stc
adc
stc
rolb
lods
and
aam
xchg
xor
or
je
out
lret
stos
push
xchg
pop
int
in
dec
dec
lahf
insb
mov
adc
xor
and
loopne
out
scas
push
orl
jle
fcomip
cli
lahf
clc
fbld
in
inc
sti
call
out
ljmp
mov
test
popa
lret
sbbl
dec
mov
dec
xor
addr16
xchg
jno
xchg
and
in
lods
sbb
lret
pop
push
test
les
int3
inc
mov
cmpl
push
in
lea
mov
leave
int
dec
xor
pop
aam
fwait
and
xor
inc
cmp
or
lods
and
sbb
dec
or
add
fwait
jmp
ficoms
xor
or
les
nop
movsb
lea
fdivl
ja
sti
and
pusha
pop
sbb
incb
pop
mov
xor
inc
jb
pop
sub
or
les
jb
xchg
mov
addl
lcall
cmpsb
xor
outsl
cmp
lock
lret
lock
dec
xlat
cmc
call
inc
pop
pop
cmc
mov
add
orb
push
mov
lahf
xchg
push
mov
jo
and
aaa
aam
lods
jb
mov
dec
lods
xchg
xchg
mov
cltd
sbb
outsl
sub
addr16
inc
bound
dec
jmp
mov
sbb
inc
dec
cmpsl
mov
imul
jae
mov
mov
cmp
inc
mov
aam
sahf
pop
sub
test
add
int
stos
fists
les
or
xor
in
jge
or
mov
push
lahf
mov
push
shrb
mov
xchg
jecxz
aad
pop
test
add
sub
or
lds
clc
je
or
sbb
push
jmp
cld
dec
inc
mov
int
xor
cmpsb
fwait
jne
test
mov
cmp
push
fidivrs
mov
in
xchg
repz
push
movsl
push
mov
add
mov
hlt
fcomp
dec
jne
sbb
mov
push
xor
adc
inc
mov
xchg
pop
jae
push
fs
js
jl
cmpsl
roll
jp
adc
rcll
lods
cmp
push
mov
rcll
pop
add
push
pop
mov
jecxz
push
fs
cmp
cmp
fwait
test
add
pop
int
pop
pop
popl
rorl
rcr
or
mov
test
xchg
xchg
cmpsl
fs
test
xlat
xor
mov
outsl
mov
sbb
rorl
push
shlb
jno
xor
fidivs
ret
aad
call
sbb
ds
push
sbbl
jecxz
or
cmp
mov
pusha
add
push
sahf
lcall
aam
sbb
mov
mov
jl
dec
es
mov
sahf
testl
aam
add
cmp
lods
and
push
cmp
ds
daa
sub
andl
push
pop
dec
loopne
jmp
xor
pop
pop
dec
divl
test
imull
cmpsl
inc
sub
cmp
test
hlt
push
push
dec
sbb
mov
inc
cmp
mov
ja
incb
int3
movsb
mov
test
aam
test
mov
jae
lock
fsubl
or
out
or
push
daa
cwtl
adc
shrl
outsl
mov
adc
mov
shlb
mov
hlt
adc
jl
add
dec
fwait
cmpsl
pop
icebp
sti
jge
or
push
jno
mov
xchg
and
imul
test
jmp
sti
sbb
and
out
mov
push
loope
add
lahf
dec
lret
mov
rcrb
addr16
adc
lret
push
xchg
js
cmp
imul
das
lret
enter
cmpsl
and
sub
sbb
inc
cmp
lock
mov
into
jb
adc
aas
in
push
das
mov
stos
out
push
imul
xor
mov
lret
mov
adc
pop
mov
dec
dec
pop
xchg
dec
jnp
jl
xchg
ret
cltd
ficoml
cvtdq2ps
and
rolb
dec
aaa
pushf
push
adc
sbb
or
add
sbb
lcall
aad
pop
test
inc
push
xchg
test
cmp
or
inc
or
pop
clc
xchg
int3
ss
xchg
sbb
fcompl
shrl
mov
cmpb
adc
jmp
lock
xor
nop
adc
xchg
add
or
and
mov
lods
jno
push
pop
or
jg
je
push
ljmp
loopne
lahf
pop
mov
pop
int3
adc
ret
out
std
xor
fistps
mov
mov
in
and
shll
shlb
lcall
sbbl
cmc
imul
dec
ja
leave
sub
ss
mov
sub
and
aas
sbb
mov
ret
mov
enter
xor
jno
std
in
sbb
push
jo
xchg
mov
mov
jmp
cmc
sub
cmp
inc
outsb
leave
mov
jg
xchg
jo
inc
and
out
xchg
int
push
fwait
cld
adc
pop
insb
jbe
and
xor
push
lret
imul
out
addb
push
in
xchg
stos
popf
fidivrl
cmp
or
sub
fwait
sbb
arpl
and
dec
mov
mov
push
bound
dec
push
mov
pop
sbb
and
outsl
cmp
fists
movsb
mov
sbb
jb
add
cmp
mov
stos
fsubrl
mov
adc
pop
cmp
paddd
push
dec
movsb
insb
mov
cwtl
enter
sub
or
call
pop
testl
jns
orl
xchg
in
adc
test
dec
std
mov
jne
cwtl
adc
add
jl
rcll
int3
enter
fcmovb
insb
sub
sbb
sahf
jmp
iret
bound
dec
xor
jge
mov
or
add
push
fidivl
ljmp
cwtl
jg
call
or
add
imul
mov
mulb
xchg
jo
iret
xchg
or
test
pop
insb
dec
lea
lds
xlat
cmc
lea
ret
pop
xchg
jle
jne
add
xchg
rcrb
lcall
imul
mov
adc
push
cwtl
mov
loop
nop
inc
ljmp
pop
adc
sbb
shl
ljmp
xor
mov
dec
data16
cld
cli
aaa
or
test
pop
outsl
sarl
mov
fiaddl
fcomps
add
out
xor
mov
jb
sbb
add
push
inc
mov
cmp
mov
daa
xchg
adc
imul
lcall
test
ljmp
addr16
sbb
repnz
jno
sbb
pushf
sub
dec
add
sbb
or
inc
lea
mov
jg
pushf
lods
add
out
scas
xor
push
iret
fwait
push
lds
mov
lock
inc
mov
lds
push
jns
mov
mov
mov
jno
enter
mov
or
fs
movsb
hlt
jb
inc
cwtl
test
add
xor
sbb
insl
fwait
movsl
movsl
dec
push
mov
out
and
dec
dec
xor
adc
jne
lret
and
and
or
push
out
jecxz
inc
inc
outsl
shrl
push
jecxz
rcrl
push
pop
pop
cmp
jl
daa
mov
bnd
mov
ds
jb
hlt
std
repnz
and
shrb
stc
xchg
xchg
je
rol
hlt
adc
xchg
cmp
lock
add
icebp
test
lcall
xchg
addr16
or
sahf
xlat
bound
jecxz
dec
cmpsl
push
mov
xorb
loopne
js
jecxz
and
lea
jns
jnp
push
fwait
sbb
jbe
call
pop
pop
js
xchg
or
mov
mov
cmp
hlt
sub
inc
mov
pop
out
imul
fsubrl
add
pop
xchg
or
cmp
push
out
pop
ds
imul
sbb
push
loop
shlb
call
push
adc
cmpsl
lods
and
jbe
jmp
mov
loop
popa
bound
es
mov
gs
daa
das
xchg
mov
in
xlat
dec
movsb
or
aas
nop
xchg
xchg
lods
xchg
sub
xchg
push
sbb
mov
scas
xchg
es
movsl
push
fistps
pop
mov
xchg
jge
mov
cmp
mov
icebp
loop
ss
xor
movsb
nop
push
jo
jg
sbb
push
add
mov
pop
test
xchg
imul
inc
movsl
dec
push
mov
xor
pop
mov
push
iret
sysenter
sub
in
shrb
dec
stos
arpl
inc
addr16
sub
xor
movsb
daa
cmpsl
jp
sub
lds
js
sub
xlat
cmp
add
scas
mov
push
mov
ss
adc
adcl
out
mov
negl
push
jmp
lret
push
push
ror
dec
mov
out
std
aad
push
int3
mov
mov
repnz
fbld
pushf
pop
mov
test
mov
mov
in
sbb
movsl
xor
xchg
je
or
mov
push
push
mov
test
js
cmpsl
imul
and
lret
scas
jbe
jo
mov
jne
jns
mov
movsl
icebp
dec
movsb
cmp
loopne
or
sbb
jecxz
push
rcr
adc
sbb
lods
lock
in
xor
mov
and
lret
ret
ret
aam
pusha
xlat
cmp
iret
adc
cld
repz
loope
sub
dec
ja
pop
aaa
gs
loop
dec
loop
add
sub
addb
idiv
inc
inc
lret
mov
call
pop
cld
cmpsl
addr16
add
ret
push
xor
sub
inc
push
add
stos
insl
sbb
push
sbb
shlb
test
incl
mov
lock
cwtl
inc
push
ret
mov
pop
inc
dec
mov
add
fdivl
push
mov
cli
in
xor
cltd
mov
dec
pusha
into
sub
imul
cs
and
dec
and
ficompl
xchg
lock
jne
adc
aam
jno
fnstcw
sbb
pop
mov
mov
inc
sbb
test
jnp
sbb
sub
mov
pop
fcoml
xchg
and
pop
fidivrl
or
cld
mov
pop
xchg
and
jnp
push
adc
iret
fcoms
std
and
adc
mov
fcmove
jne
mov
jne
inc
in
xchg
pop
xchg
adc
push
push
dec
mov
leave
lock
lcall
aas
push
loope
add
test
adc
adc
push
hlt
call
mov
dec
pushf
adc
xor
push
fdivl
aad
pop
jne
jo
ds
bound
or
jo
adc
sti
test
lea
adc
lock
jmp
xchg
adc
aas
and
pusha
inc
inc
xchg
arpl
sub
lods
mov
jle
divb
and
popa
lods
push
mov
adc
sbb
or
sahf
insb
cmc
and
adc
enter
std
or
daa
stos
ja
pop
dec
imull
icebp
mov
adc
je
outsb
shl
xchg
jo
nop
jg
pop
mov
sbb
gs
pop
xor
mov
dec
or
fld
or
jo
ja
pop
adc
imul
sub
rcrb
mov
sbb
in
pushf
lcall
je
in
negb
test
cli
cltd
mov
hlt
xchg
lahf
push
jnp
cld
push
dec
fisubrl
mov
dec
pop
xchg
mov
imul
fstl
or
addr16
cltd
pop
inc
ret
jo
mov
sbb
out
mov
cmp
add
and
inc
push
icebp
and
pusha
iret
pop
in
push
mov
sbb
lahf
popl
aam
in
loop
scas
aas
push
in
fbstp
pushf
lret
std
arpl
dec
scas
int
push
test
mov
fs
js
jbe,pt
xor
sbb
fs
dec
dec
dec
pop
movsl
mov
imul
pop
xsave
arpl
leave
xchg
xchg
mov
lds
lcall
cltd
xchg
arpl
lods
adc
loopne
or
lods
push
dec
out
and
mov
lahf
negl
int
and
xlat
xchg
pop
icebp
and
cmp
nop
mov
addl
test
and
ds
test
pop
clc
sub
call
lret
pop
xor
stc
fcomps
mov
mov
fcomip
lods
add
adc
arpl
fiaddl
lret
mov
xor
insb
and
ljmp
pop
mov
mov
mov
decl
cld
out
inc
stos
adc
rcrb
dec
jmp
gs
or
in
test
mov
hlt
jnp
mov
and
std
cmp
or
or
imul
adc
shl
jo
cmpsb
cmpsb
in
mov
and
sub
pushf
and
pop
xchg
repz
jl
cwtl
mov
in
adc
push
sbb
mov
into
jbe
addr16
imul
stos
aaa
enter
add
stc
imulb
cwtl
sti
repnz
push
add
sbbb
push
sbb
mov
movl
stos
mov
fnsave
pusha
dec
pop
sahf
lahf
jecxz
mov
cltd
mov
mov
and
xor
dec
bound
out
mov
out
fdivs
add
sub
jb
and
stc
sbb
out
stos
leave
add
arpl
daa
fs
movsb
sub
sbb
sub
in
pop
stos
std
add
jbe
dec
mov
push
stos
dec
mov
cmpsl
push
xlat
stc
pop
mov
xchg
xchg
adc
das
bound
sbb
inc
jecxz
pusha
xor
ret
cmp
pop
lret
cltd
imul
lcallw
leave
push
xlat
aam
xchg
int3
jae
ja
test
loopne
push
fs
repnz
inc
gs
testb
daa
mov
ficoml
cld
sub
pop
test
push
cmc
stos
les
jge
mov
icebp
and
lods
outsl
icebp
mov
sub
cmp
rol
mov
mov
fcmovbe
pop
xor
movsb
outsl
xchg
xchg
mov
int
dec
adc
fidivs
sub
cmp
imul
adc
mov
lahf
xlat
mov
pop
push
ret
jg
push
xor
movsl
mov
iret
push
or
adc
rorb
jl
aam
pop
adc
popf
cmp
ds
pop
add
adc
cmp
popf
mov
add
jmp
cld
jp
addr16
fwait
push
mov
rcl
fwait
xchg
out
faddl
adc
std
scas
inc
xlat
fstp
add
mov
mov
imull
or
mov
add
roll
call
lock
loop
lea
nop
imul
or
sbb
loopne
mov
push
daa
dec
test
in
mov
fwait
xor
push
push
lcall
sbb
ret
scas
push
loopne
cmp
mov
dec
leave
adc
xor
aaa
xor
cmp
mov
jne
sub
cmp
pusha
cmp
shrb
push
pop
sub
into
aas
fimuls
push
or
jae
mov
int
insb
xchg
fldcw
adc
je
das
xchg
ljmp
ret
test
stos
das
cmc
push
jns
xchg
nop
pop
loop
sbb
ds
lcall
sub
scas
pop
scas
sub
inc
or
adc
ds
movsl
inc
cmp
dec
sub
aam
push
lds
jno
scas
shl
or
aaa
adc
or
cli
leave
pop
cwtl
lods
inc
call
je
movsb
jge
push
or
dec
ljmp
xor
jo
in
cmp
orb
lods
jae
sub
pop
or
inc
xchg
and
mov
and
pusha
gs
or
or
jno
into
lods
inc
push
cld
scas
scas
inc
ret
cs
pop
rcrb
pop
cmp
mov
rcrb
inc
inc
aaa
sbb
movsl
cmp
addr16
mov
cmpsb
imul
stos
jb
call
dec
xor
mov
loopne
pop
add
xor
in
jp
gs
lahf
nop
fmul
cmpsb
dec
aaa
push
push
xchg
inc
sub
divl
es
jb
add
ret
loop
into
test
in
imul
mov
cmp
jno
je
add
movsl
inc
dec
cmpsl
popa
imul
rcrl
push
add
movsb
push
cmp
mov
std
stos
outsb
jmp
sar
xor
sbb
dec
dec
fsubl
and
sbb
lcall
xor
rorb
in
pusha
jmp
sbb
das
push
sti
sub
xorb
push
rcll
adc
jae
movsb
test
push
dec
mov
adcb
inc
ljmp
in
dec
add
jno
cmp
lret
add
iret
rep
sbb
outsb
xchg
xchg
xorb
icebp
mov
ss
or
push
or
xchg
and
or
pop
cmpsb
js
sbb
loope
sbb
cmp
ds
jno
es
fcoml
pusha
pop
sbb
pop
pslld
jecxz
mov
cmp
cmp
jb
mov
and
call
loope
jl
sub
lock
dec
xchg
loope
mov
clc
mov
pop
jmp
sti
int3
adc
addb
and
pop
adc
mov
divb
add
shrb
je
jp
sub
push
shrb
jle
xor
cmp
xchg
cmpsl
and
flds
incb
sahf
xchg
mov
lds
cmp
sub
cmpb
pop
mov
or
cmp
out
and
lods
dec
mov
adc
js
push
cmp
imull
in
es
push
or
inc
pop
loop
pop
mov
mov
cmpb
pusha
es
pushf
imull
js
xchg
es
push
xchg
mov
xorb
rorb
push
adc
xchg
add
jg
jp
mov
mov
inc
mov
enter
cmp
xchg
xchg
or
and
xchg
lods
pusha
cld
xchg
out
or
in
mov
add
pop
adc
es
inc
adc
repz
sub
stos
repz
test
jne
aas
les
imul
pop
lret
repz
sbb
scas
shll
xchg
cmp
loope
pushf
sarb
cmc
adc
add
mov
xchg
add
lods
mov
bound
mov
inc
mov
andb
inc
and
arpl
pushl
aas
das
adc
icebp
test
test
je
xchg
cmp
push
push
movsb
cmc
cmp
mov
or
dec
daa
arpl
push
push
push
aad
cmp
lret
addr16
inc
pop
out
mov
int3
mov
in
in
add
inc
lock
mov
fldt
push
push
mov
jb
inc
sub
and
repz
addr16
repz
push
cmp
shlb
stos
push
filds
cmc
pop
test
dec
sub
movsl
sti
xchg
adc
das
push
outsb
dec
pop
fwait
ret
and
arpl
mov
fwait
pushf
mov
mov
cmp
shrb
pop
add
test
push
sbb
sbb
push
pusha
add
lahf
sti
and
and
lock
pop
or
push
aaa
cwtl
fisubs
rclb
add
lds
stc
inc
push
mov
mov
adc
lea
dec
pop
xchg
cli
sbb
sbb
frstor
ljmp
shll
jg
or
inc
jns
or
xchg
ret
mov
pushf
fcmovnbe
push
cmp
popa
rorl
mov
cmp
call
aam
xor
mov
std
mov
lret
cmc
sub
dec
xor
sub
adc
cwtl
popf
mov
sub
mov
loopne
dec
sbb
mov
cwtl
jnp
add
push
ds
mov
out
pop
mov
out
call
inc
pop
mov
cmp
and
add
fidivs
dec
jge
arpl
cvtdq2ps
into
xor
je
loope
or
xchg
js
les
out
mov
lods
inc
sbb
sub
daa
test
jle
jnp
stc
in
sub
xchg
dec
repnz
outsb
sub
xchg
outsl
outsb
and
dec
les
adc
push
sub
sub
xchg
in
stos
mov
adc
shrb
enter
jns
mov
pop
add
sub
cmp
or
add
mov
jle
push
lods
mov
jno
xchg
fs
out
vpmaxsw
mov
jae
adc
xchg
cld
pop
insl
sub
push
adc
in
movsb
pop
stc
stc
cmp
cltd
mov
sbb
in
fwait
movsb
or
adc
mov
andb
shll
aas
xor
pusha
cmpl
jg
in
stos
int3
call
aaa
cltd
mov
add
xor
dec
dec
repz
ds
mov
das
sbb
lret
jbe
loopne
mov
aam
pop
xlat
les
inc
cmpsl
test
or
cld
repnz
jmp
repnz
sub
sbb
gs
insb
adc
push
cmp
pushf
in
mov
insb
cs
or
rcl
xchg
stc
pop
dec
push
in
sub
xor
pop
shlb
adc
sbb
jae
call
add
js
in
mov
push
cld
stc
push
pop
test
inc
int
lret
or
jmp
inc
leave
sub
and
mov
aaa
push
mov
jno
and
pop
add
pop
stos
scas
int3
mov
dec
push
xchg
sbb
jne
lret
mov
mov
sbb
jne
adc
xchg
lds
cltd
add
repz
add
mov
lret
sbbb
pop
mov
push
inc
mov
pusha
bound
xchg
js
icebp
shll
out
sub
ret
into
shlb
push
addr16
dec
mov
add
lods
mov
setbe
cmp
dec
xchg
out
xchg
fwait
xchg
xlat
cmpsl
ja
xchg
sub
repnz
imul
mov
xchg
sbb
test
fistps
cs
imul
out
jmp
add
aaa
or
movsl
pop
leave
aaa
jo
sahf
dec
sti
mov
dec
outsb
call
pop
push
and
or
out
into
jecxz
mov
mov
mov
movb
and
or
dec
xchg
jne
push
adc
notb
inc
lods
mov
mov
arpl
jns
xor
mov
decl
pusha
das
add
popf
and
jno
test
pop
outsb
rol
scas
and
cmpsb
sbb
int
insb
mov
sub
pop
xor
push
fwait
pop
outsl
cli
mov
jle
mov
add
testl
cmp
xchg
push
mov
mov
mov
mov
pusha
fwait
repz
inc
out
lea
test
push
pop
stc
std
rep
cmp
mov
push
jnp
sub
imul
imul
sbb
xchg
push
in
incb
sbbb
sar
pop
and
pop
lods
adc
int
push
cs
nop
add
jle
sub
cmp
dec
sbb
sub
push
or
xchg
movsb
mov
adcb
mov
into
ret
xlat
xchg
jbe
sbb
sahf
dec
rolb
push
xor
xor
test
or
pop
inc
sub
pop
mov
jnp
xor
test
bound
mov
adc
pop
mov
dec
add
add
mov
xor
adc
fstl
xchg
int3
inc
nop
sbb
sub
loop
out
pop
lods
pop
hlt
test
cwtl
movsl
xor
or
and
cmc
std
adc
jecxz
jge
ljmp
out
testl
fidivl
movsb
aas
rcrl
repnz
rorb
xor
out
sub
bound
in
mov
leave
jo
gs
dec
and
in
cltd
loop
pushf
sar
popf
rolb
and
push
and
setns
movsl
scas
leave
mov
cmp
loopne
bound
scas
hlt
push
outsb
inc
xlat
push
mov
xor
jo
leave
inc
sahf
or
jns
loop
mov
das
or
pop
add
aas
insb
pop
xor
add
or
mov
xchg
daa
xchg
xchg
and
mov
and
jbe
fwait
imul
push
mov
mov
lret
or
movsl
scas
aad
mov
sub
outsb
sarb
loop
es
dec
cmp
popf
sbb
and
aaa
mov
sbb
or
es
inc
inc
scas
inc
icebp
and
pop
aas
inc
adc
xchg
ret
loopne
jmp
loop
push
add
jmp
jl
pushf
sbbb
inc
fsubrs
or
lock
fnsave
testb
jp
and
das
movzbl
pop
call
adc
pushf
xor
jmp
testl
sbb
inc
add
cmp
or
xchg
mov
jbe
add
cmp
fbld
sbb
lcall
lea
ror
adc
xchg
ds
inc
mov
xchg
call
lock
loop
cwtl
data16
push
adc
push
jge
and
jno
sbb
sti
repnz
mov
mov
scas
nop
divl
test
flds
jg
test
xchg
pop
out
xor
test
icebp
adc
mov
push
lcall
aam
sub
pop
pop
lds
cmp
aad
mov
dec
lret
mov
negl
cmc
add
fidivrs
fidivs
sbb
ret
push
jecxz
mov
in
or
out
or
cmpsb
popf
cld
pop
push
and
test
and
pop
dec
divb
ficoms
and
jne
xchg
scas
aaa
pop
pop
or
sbb
aad
xor
aam
add
shlb
jne
lahf
push
push
sbb
sub
xor
push
pop
fs
xor
loopne
mov
cmp
mov
or
aam
push
fcompl
cwtl
stc
clc
ss
add
js
loope
pop
jmp
or
dec
mov
mov
idiv
cld
fidivrl
jmp
mov
bound
gs
fmul
lods
inc
xchg
mov
jg
lret
sub
ss
push
cwtl
icebp
adc
or
ja
imul
fdivrl
insl
pop
inc
mulb
lret
cltd
push
or
inc
lock
inc
movsb
orl
cmp
sbb
sub
dec
out
cmpsb
mov
mov
into
mov
xchg
movsl
add
loop
xlat
mov
inc
mov
das
inc
in
leave
aaa
cmp
jbe
mov
and
cmpsb
popf
jbe
push
rorl
test
sbb
inc
jo
or
cmp
dec
gs
cmp
icebp
pop
repnz
outsl
ljmp
es
loopne
dec
incl
mov
push
inc
add
push
arpl
lods
jns
lea
cmp
mov
push
mov
lock
pop
xor
ds
mov
repnz
popl
das
js
xor
sub
mov
jbe
out
sub
cltd
inc
loop
iret
mov
mov
inc
or
sahf
aaa
mov
jg
test
adc
inc
fiaddl
xlat
je
fisubrs
lahf
mov
nop
push
sbb
add
pop
sti
pop
jg
push
and
or
aam
cmp
cmp
loop
dec
aas
cmp
mov
push
add
inc
and
loope
int
lcall
adc
cltd
lea
sti
xor
rolb
xorb
outsl
repnz
mov
adc
outsb
inc
outsb
xchg
jb
sub
push
cmp
inc
pop
jno
popf
push
sahf
push
dec
out
sbbl
add
and
fisttps
xchg
inc
inc
and
mov
cmp
add
or
das
bound
push
pop
loope
sbb
int3
mov
stc
mov
add
cmc
ss
add
sbb
push
cmp
push
in
sub
mov
lods
ljmp
int
ss
shll
adc
mov
cmp
push
mov
add
jnp
out
notl
scas
add
lods
sub
mov
mov
lods
mov
push
add
test
test
jb
pop
sahf
es
stos
push
or
je
insl
cmp
outsl
inc
fstpl
call
ficomps
dec
popa
out
fyl2xp1
sbb
repz
and
lds
inc
ror
aaa
adc
mov
movsb
popf
mov
outsl
cmp
xchg
fsubp
testb
jecxz
add
mov
jbe
push
and
sbbl
ja
lds
adc
jle
jmp
inc
ds
inc
movsb
jb
sub
add
das
inc
ss
ret
sub
hlt
mov
sti
out
std
cmp
outsb
cmpsb
push
and
xchg
sub
sub
pop
sbb
pop
sbb
prefetcht0
inc
std
jg
cmp
and
aad
int
ds
and
jp
sub
dec
push
sbb
iret
mov
add
and
mov
adc
jg
enter
cld
xchg
call
pop
jle
aad
scas
mov
push
xchg
add
scas
sbb
cwtl
call
stos
fdivrl
test
cmc
clc
stc
mov
cmp
mov
mov
adc
sti
lods
pushf
fcompl
mov
dec
scas
movsl
movsl
inc
fistl
and
test
mov
lret
mov
xchg
xchg
roll
lods
inc
or
xchg
sbb
add
mov
cmp
xchg
dec
sub
jne
fsts
divb
aas
jmp
push
int3
js
add
mov
cmp
xor
and
adc
dec
sbb
orb
add
mov
fcomps
nop
stc
in
jmp
and
ss
xlat
loop
and
pop
dec
sub
inc
loope
cwtl
leave
sbb
and
scas
in
fs
cmp
sbb
out
dec
cli
cmp
sub
push
pop
xchg
out
mov
pop
out
add
pop
loope
xor
push
mov
aam
xlat
pop
call
inc
jecxz
add
push
dec
call
mov
daa
xor
dec
rolb
iret
in
or
adc
sbb
fidivs
or
xchg
data16
sbb
jecxz
jo
sbb
or
mov
dec
pop
int
mov
rclb
sbb
js
push
imul
dec
std
imul
das
out
pop
add
xchg
or
push
or
jle
lahf
sub
mov
cmc
imul
mov
in
insl
pop
cmp
imul
adcb
and
inc
mov
aas
nop
sti
pminub
sub
jns
fisubs
and
add
jae
or
insb
outsl
outsl
cmpsb
push
add
subl
idivl
std
mov
call
nop
mov
shrl
std
dec
adc
mov
mov
jae
popa
adc
cmp
pop
arpl
mov
or
cmp
jle
mov
xchg
and
mov
out
jge
and
mov
scas
mov
dec
dec
jge
test
std
cli
js
jno
or
in
jns
mov
dec
ja
add
stos
xchg
cmp
insb
or
or
aam
pop
xor
push
push
mov
add
mov
gs
ror
xor
mov
mov
adc
mov
divb
outsl
push
mov
push
roll
scas
rcrl
and
and
insl
pop
xchg
add
bound
jo
sub
mov
icebp
jb
jl
mov
or
filds
mov
sbb
push
rol
add
sub
mov
cltd
or
jecxz
sbb
xchg
push
pop
nop
arpl
mov
dec
xchg
lea
pushf
add
cmp
cmpsb
fcmovnu
loopne
jge
add
ret
ljmp
sub
ljmp
xchg
sub
sub
pusha
add
pop
cmp
pop
jne
mov
cs
add
and
sbb
ja
or
add
mov
int3
mov
adc
jp
ss
movsl
imul
mov
cld
cmc
fwait
xlat
pop
test
aam
in
pop
rorl
data16
and
jno
and
and
lock
arpl
in
loopne
and
dec
mov
loope
out
inc
inc
xlat
out
sub
mov
test
insb
dec
nop
cs
pushf
push
lea
sbb
testb
addr16
fstpl
jge
shll
xor
or
clc
cld
mov
movsl
outsb
bound
in
test
fstl
inc
cmp
mov
fadds
test
mov
idivl
fdivs
bound
cli
loopne
jp
push
jns
lret
sbb
and
les
data16
inc
cmpsl
add
inc
cmc
stos
sub
js
jne
cmp
cwtl
push
pop
mov
js
adc
int
lods
push
cmp
lods
sahf
in
rcr
or
popf
xor
out
sub
sub
int
ret
ss
repz
and
adc
mov
pushf
aad
jns
lods
fildl
inc
insb
sti
call
incl
pop
fwait
out
lret
jle
test
mov
mov
or
and
cmp
mov
sub
adc
push
jnp
add
lock
fs
outsb
dec
repz
scas
lds
adc
sub
fldenv
sbb
std
push
fisubrl
outsb
or
mov
mov
inc
arpl
mov
inc
adc
pop
repnz
push
mov
lock
jecxz
stos
lret
stos
int3
shll
lahf
imul
adc
xor
pushf
cmp
rcrb
jp
sar
or
mov
out
shrb
jbe
mov
adc
ja
or
pop
shl
les
xchg
cmc
pop
out
gs
scas
cmpsb
out
sbb
in
lret
aam
inc
mov
aad
sub
fs
shlb
cmp
mov
jge
xchg
xor
cmp
xchg
or
test
jp
aam
mov
mov
in
cmp
out
test
or
rolb
loop
lret
out
mov
push
sub
leave
push
mov
add
dec
test
fwait
inc
cmp
je
adc
ret
ret
or
jge
xlat
idiv
sbb
pop
and
and
pushf
dec
adc
les
test
inc
jne
jb
pop
add
pop
adc
es
push
paddb
mov
add
movsb
add
xor
jl
xor
jmp
mov
aas
mov
aaa
mov
in
pop
jno
call
ss
jp
stos
out
cmp
sub
mov
dec
and
mov
mov
data16
or
cmp
fldl2t
pop
pop
and
insl
cmp
dec
jae
inc
adc
mov
aas
gs
mov
test
jecxz
mov
lods
pop
sti
testb
rclb
adc
outsb
insl
fiadds
es
jo
cmp
push
ss
fstpl
pop
adc
add
fstps
adc
sbb
pop
stc
add
add
mov
mov
pop
pop
aas
xor
mov
mov
mov
dec
mov
push
mov
xlat
mov
inc
xchg
or
lds
cld
addr16
negb
cld
sub
test
cmp
movsb
imul
mov
cli
int
push
xchg
jne
repz
push
mov
pop
orl
push
pop
sub
addb
cwtl
xor
and
push
xchg
mov
mov
stc
cli
push
push
lret
in
sub
enter
jmp
push
lds
inc
idivl
sub
je
nop
xchg
mov
xchg
test
cmp
fs
pop
inc
decl
out
inc
clc
stc
pop
jo
stc
jle
inc
adc
ret
stc
sbb
fwait
out
negb
cmp
or
in
andb
movb
sysenter
xchg
pusha
fidivrs
roll
arpl
cmp
mov
mov
pop
popf
addr16
movsb
fisttpl
lds
aam
mov
jns
xchg
sub
jns
sar
in
jmp
adc
jnp
outsb
jl
aad
ljmp
mov
cmp
gs
sbb
or
sub
lahf
pop
int
rclb
inc
test
jnp
mov
mov
add
lret
xchg
mov
mov
mov
movsb
and
mov
neg
rclb
add
push
int3
nop
jge,pt
mov
aas
cmp
faddl
sahf
sub
insl
cwtl
addr16
daa
testl
js
stos
addb
ja
jb
daa
push
fdivs
out
pop
popf
repz
add
adc
and
or
pop
bound
push
jnp
sahf
jo
mov
add
orl
shrl
mov
sti
jno
int3
push
and
inc
sti
fadds
pop
idivl
lods
cmp
push
arpl
pop
loope
cs
xor
cmovg
repz
add
sbb
leave
stc
xchg
repz
sbb
loop
into
rcl
lret
fwait
adc
add
and
cmp
out
mov
lds
mov
push
xor
xchg
pop
push
test
imul
add
add
orb
orl
jecxz
and
push
push
test
and
sbb
rorb
cmpsl
pop
adc
test
int
mov
jge
push
jbe
mov
jmp
push
jmpw
aad
fnstcw
add
mov
xor
mov
test
cld
and
cmc
ret
mov
jmp
gs
xchg
xor
mov
dec
pop
or
pop
rclb
int3
imul
cs
xor
pop
xchg
jae
pop
sub
add
test
mov
dec
jne
inc
cwtl
lret
jmp
test
and
mov
jno
sbb
push
bound
test
jnp,pn
xchg
inc
fnstsw
in
sbb
mov
in
mov
cmc
lock
adc
dec
lods
jns
adc
pushl
jo
xchg
outsb
out
das
xchg
sub
jecxz
dec
push
sub
mov
mov
jp
iret
aaa
in
aaa
in
mov
andb
jmp
lock
mov
push
fsubp
cmp
cmc
dec
jg
inc
dec
mov
ror
daa
loopne
arpl
add
or
dec
dec
jmp
mov
sarl
ss
mov
pop
dec
mov
pop
pusha
outsl
sbb
add
sub
dec
cmp
cld
or
add
adc
jecxz
pop
mov
push
or
adc
movsb
dec
ret
or
jne
push
int
add
or
fs
decl
adc
stc
fstps
loop
xor
and
shr
pop
bound
push
lds
mov
imul
repz
push
jp
jmp
std
or
jnp
pop
aas
fildl
std
adc
shll
repnz
cmp
cmp
push
add
iret
jbe
lret
aam
push
jne
sbb
sub
repnz
insb
roll
xchg
jl
sbb
fldcw
dec
or
cmpsl
push
es
mov
cmpsb
sub
out
lea
or
mov
ds
btr
out
or
divl
xchg
add
adc
cmpsb
sbb
negb
add
ret
xchg
sub
pop
xchg
or
call
cmpsl
xchg
add
or
adc
sub
out
or
dec
rcrb
jge
xor
stos
xchg
xor
out
ljmp
fisubrl
xchg
or
sti
lahf
lahf
sub
adc
dec
xor
fidivl
adc
cmp
mov
rcrb
mov
mov
pop
outsl
push
cmp
outsl
adc
dec
push
sarb
icebp
xchg
xor
xchg
cltd
ret
sbb
mov
cmp
shlb
xlat
ss
aaa
jb
cli
aas
loope
test
cmp
repnz
and
jecxz
pop
cmp
sub
add
mov
pop
sbb
lds
push
mov
aad
fistpll
gs
daa
cli
inc
and
ret
orl
mov
es
mov
xor
out
psllw
pop
jp
pop
adc
decl
push
decl
pop
lahf
inc
stos
or
mov
add
inc
jp
ja
cltd
pop
mov
add
add
insb
xor
xor
es
das
lahf
push
jmp
xchg
in
adc
inc
mov
outsl
mov
push
gs
adc
dec
fdivp
rolb
xor
je
lock
lods
dec
test
outsb
mov
daa
mov
inc
loop
cli
mov
sbb
sbb
insb
mulb
add
sti
jns
ja
adc
pop
pop
dec
xor
pop
lods
ret
int3
mov
add
mov
popl
mov
stos
push
insl
fdivrl
mov
xchg
xor
xor
test
or
loopne
iret
dec
push
push
clc
addb
dec
rcll
mov
jp
push
sbb
add
sbbl
xor
into
mov
or
push
jne
inc
bound
aaa
jne
dec
dec
mov
fstps
mov
xor
inc
popf
fstpt
xor
in
xor
mov
stos
fndisi(8087
sbb
pushf
adc
push
or
mov
movsl
icebp
dec
add
push
xchg
lods
decb
pop
sub
es
add
test
mov
jl
add
adc
jp
and
sub
push
inc
lods
and
or
inc
lcall
sub
mov
outsb
xlat
das
dec
mov
add
insb
xchg
mulb
leave
hlt
loopne
pusha
ret
cmpsb
jmp
xor
fimull
and
cwtl
xlat
lds
test
push
repz
cmp
pop
cs
mov
and
fsubrl
xchg
xor
push
push
fisubl
aad
inc
jno
jp
or
loopne
jg
mov
sahf
dec
jmp
inc
fnstenv
cmp
mov
clc
sti
mov
push
cmp
jbe
push
into
mov
lods
leave
scas
xor
loopne,pn
stos
add
lods
fldt
jge
mov
sbb
loop
xchg
ret
dec
popa
push
mov
aaa
sbb
out
mov
cmp
inc
pusha
and
push
mov
mov
add
jle
scas
call
movsl
xchg
mov
or
test
adcb
mov
mov
inc
xor
mov
adc
adc
adc
xor
cmp
gs
xchg
pop
shrb
push
or
adc
dec
jno
mov
pop
adc
pop
inc
rdtsc
add
mov
ret
repz
shll
clc
xchg
adc
stc
out
cli
int
insl
mov
ja
mov
inc
cmp
je
mov
push
cwtl
add
cwtl
cmp
adc
out
icebp
jge
jle
ror
push
xor
fistps
sub
add
mov
test
es
leave
shrl
xchg
cmp
adc
icebp
fisubs
push
repz
popf
out
adc
out
jns
mov
mov
fsubs
pop
stos
add
gs
cwtl
pop
in
ret
jp
mov
adc
adc
pop
loop
lock
cmp
int
aas
mov
push
push
shlb
push
data16
cld
xlat
sbb
sbb
ja
ret
pop
cmc
mov
cmpsb
push
psubusb
xor
fidivl
mov
jg
mov
add
xchg
mov
ret
mov
xchg
shll
fstpl
pop
sbb
test
pusha
ljmp
test
add
xor
or
ss
pop
jge
sbb
jnp
mov
pushf
inc
push
ljmp
add
mov
pop
pop
jmp
out
fisubrl
mov
mov
loop
jge
push
or
dec
xchg
jmp
dec
hlt
push
and
das
popl
and
fdivs
adc
lea
xor
mov
je
sub
xchg
inc
test
repnz
push
inc
imul
lods
fcomp
jg
in
mov
inc
or
repz
wrmsr
mov
shrl
jl
sbb
ljmp
scas
xor
sahf
push
std
inc
sbb
inc
pop
cltd
push
xchg
jmp
or
and
notl
insb
mov
aad
into
add
pop
popa
xchg
push
idivb
test
mov
arpl
aaa
or
es
cmp
add
mov
rcrb
pop
repnz
xchg
notb
inc
or
add
push
mov
sub
pop
mov
ljmp
push
pusha
outsb
sahf
jo
movsb
mov
mov
shrl
repnz
jle
push
xchg
repnz
sti
or
sbb
clc
divl
loopne
hlt
fnstenv
mov
cs
cmp
cmp
sub
pop
dec
or
inc
lret
stos
ffree
jle
pop
and
outsb
insb
mov
repz
xor
pushf
mov
repz
icebp
xor
and
lea
scas
cmp
mov
imul
jp
jbe
lea
push
test
pop
lods
aam
mov
push
ret
in
mov
sub
and
or
xchg
mov
int
ss
lea
xorb
inc
andb
inc
cmp
fidivs
push
mov
faddl
mov
cmpsb
jle
mov
iret
cmp
dec
jg
mov
dec
cmp
cmp
xchg
mov
ja
xchg
lret
dec
pop
mov
outsb
scas
out
or
movsb
mov
cmp
cwtl
push
pop
jecxz
cltd
fwait
inc
mov
dec
push
dec
adc
clc
sbb
cmp
imul
or
xchg
xorl
xorb
mov
mov
push
icebp
mov
xor
and
xor
or
test
add
jecxz
xchg
cmpsb
xlat
aam
test
mov
pusha
rcl
mov
shlb
sub
lret
xchg
pop
pop
inc
or
push
jl
rcl
iret
into
bound
jo
dec
or
adc
sarb
and
dec
xor
rcll
cmp
cmp
mov
cmpsl
lods
xchg
in
jg
xchg
icebp
ja
push
stos
frstor
xor
cmp
jmp
add
dec
jns
daa
jge
or
iret
shlb
adc
xor
ret
rol
test
sbb
icebp
sbb
and
cld
jecxz
mov
pop
popf
mov
sub
xchg
xchg
push
or
sahf
mov
lret
fisttpl
push
pop
xchg
sbb
mov
popf
dec
in
pop
pop
adc
orl
aam
movsb
add
into
push
not
push
pop
cmpsb
les
and
insl
cli
xlat
push
mov
cmp
stc
leave
fisubrl
lea
stos
and
aaa
mov
dec
sbbb
push
fdivrl
imul
inc
xor
lret
cmp
test
outsl
lods
xor
add
mov
adc
dec
repnz
in
int
jo
loope
and
or
lcall
mov
add
pusha
lea
or
outsl
fwait
ja
testb
pushl
in
mov
jae
test
not
sarl
jge
adc
in
jnp
sbb
and
mov
fidivl
imul
xor
cli
loop
fwait
mov
inc
adc
and
in
push
jl
sub
push
and
cmpsb
dec
xchg
je
push
and
je
movsb
shlb
pop
cmp
xchg
xor
fistpll
icebp
hlt
out
repz
push
jmp
cli
mov
and
stos
cmp
xchg
gs
dec
push
leave
push
imul
cmp
jb
imul
bound
mov
test
adc
xor
fsubrl
aaa
icebp
inc
in
cmp
or
mov
lock
jb
dec
xchg
mov
ret
xor
push
cmp
inc
pop
fs
hlt
xchg
sub
or
mov
add
inc
outsl
lods
ret
fidivl
pop
es
adc
pop
xchg
pop
ds
inc
or
dec
cltd
cmp
rdtsc
inc
int3
aam
dec
mov
lds
cmp
cltd
jp
clc
xor
negb
pop
in
lcall
xor
xor
data16
imul
dec
pop
push
lahf
leave
and
and
test
fldenv
movsb
rol
sbb
xor
adc
ljmp
mov
int3
gs
cmp
cld
sub
ret
cmc
outsl
inc
lahf
push
in
jge
imul
or
jge
push
inc
popf
xor
icebp
cs
xchg
loope
out
inc
pushf
js
push
jge
mov
push
jle
fisubrl
push
dec
xor
imul
ss
rcll
adc
pop
inc
data16
pop
nop
lds
dec
jecxz
shlb
dec
movsb
mov
cltd
ljmp
es
rorb
add
xchg
or
sbb
sub
subb
icebp
cmp
mov
leave
mov
out
aas
jge
lods
inc
pop
test
aam
adc
sbb
inc
push
movsb
add
jmp
add
dec
mov
add
pop
inc
mov
cmp
ljmp
dec
int3
dec
and
jne
jl
fisubs
cltd
inc
js
movb
ret
cmp
ds
fildll
popa
enter
popa
push
hlt
jo
outsb
cwtl
aas
sbb
cmp
sahf
ss
push
lods
rclb
out
push
add
mov
dec
imul
shlb
jb
fidivs
aam
sub
or
leave
sbb
shrl
lcall
stos
mov
mov
rcrl
in
pop
xchg
pop
loope
outsb
jmp
ret
pop
iret
fwait
inc
adc
int
out
test
inc
lret
jl
ja
lock
and
mov
hlt
icebp
jo
xchg
cs
or
mov
cmpsb
arpl
adc
rcrl
xchg
shl
shll
out
test
mov
icebp
mov
les
mov
scas
insl
lret
std
pop
sub
xlat
in
aas
aam
sti
xchg
loope
dec
lret
inc
in
xchg
cmpsb
mov
mov
adc
int3
sbb
clc
sub
sahf
lds
or
add
inc
mov
xchg
sti
imul
addr16
and
dec
test
jb
mov
loopew
pop
adc
push
sbb
sarl
lcall
or
fucomi
mov
mov
dec
inc
iret
sub
aad
inc
mov
ljmp
aas
mov
mov
xorl
ss
clc
pop
adc
mov
fsubl
mov
lcall
hlt
daa
jno
call
dec
in
dec
movsl
pop
loopne
lock
pop
test
lods
sbb
or
out
pusha
fbld
pushf
dec
cltd
je
sarl
xlat
out
fs
inc
pop
jne
push
ret
or
lds
scas
testl
mov
lock
sbb
rcrb
lods
jae
ss
cmp
and
xor
push
stc
xchg
or
mov
cwtl
jg
sub
movsl
lret
mov
push
mov
jnp
xchg
mov
stc
andb
dec
cmpsl
jmp
add
xchg
cmp
mov
xchg
test
mov
xor
lcall
adc
lods
jnp
adc
cmp
fimull
xchg
adc
push
in
cmp
es
stos
sub
adc
pop
ds
sbb
jb
pop
ret
iret
xor
add
lret
pushf
xor
popf
and
inc
das
andl
dec
jno
jae
std
sub
cli
ss
jns
mov
sub
sti
fidivrl
xor
cmp
icebp
xor
push
jmp
dec
test
xlat
push
js
sbb
adcl
pop
sub
int
push
hlt
or
aas
fsubs
or
jg
inc
fisubrl
ljmp
fiadds
jns
adc
push
cltd
into
pop
cmp
popf
dec
out
sbb
pop
mov
add
aas
adc
xchg
ds
add
push
ja
in
jns
add
fstpl
movsl
sbb
sahf
movsb
xor
testb
pushf
push
ret
sub
add
adcb
ret
xor
jo
xchg
loopne
sub
loopne
js
lock
and
popa
in
cltd
mov
mov
jno
inc
mov
adc
test
rorl
leave
push
cmp
divl
or
hlt
test
aaa
lods
js
lcall
and
dec
sub
lods
dec
dec
call
pop
movsl
cmp
sbb
xor
in
inc
out
adc
dec
out
mov
xor
cld
and
test
lea
jge
xor
in
push
inc
add
xchg
mov
cli
mov
into
dec
jecxz
and
lds
aad
ficoms
shlb
add
test
mov
pop
repz
jl
fadds
loopne
lahf
iret
add
fs
cmc
sub
inc
stos
loope
xchg
add
mov
jne
sbb
cmp
in
rorb
movsb
push
mov
push
sbb
pop
iret
loop
sbb
jge
jl
add
cmp
fsts
rorl
rol
test
movsl
and
jmp
xchg
xor
mov
sub
sti
pop
pop
test
cmp
fmull
inc
mov
jmp
push
repz
xor
jg
cmpsl
orl
loope
rclb
cld
cmpsl
jno
push
jp
mov
popf
push
inc
xor
insl
cmp
or
sub
push
jl
inc
cmp
sbb
rclb
adc
imul
test
in
mov
sbb
mov
adc
push
fildll
jmp
inc
jg
inc
sub
fdivrs
adc
sub
push
aaa
mov
aas
inc
sbb
lret
push
pop
pop
hlt
add
lock
mov
jge
cmp
imul
popf
xchg
and
mov
insb
pop
sub
pop
enter
adc
mov
test
mov
fsubrl
pop
in
mov
jne
pushf
inc
sub
das
dec
ret
cwtl
fisubs
jecxz
mov
sahf
or
inc
jmp
insb
xchg
pop
dec
mov
popf
cmp
fmull
sbb
movsl
mov
and
test
adc
or
cmpsb
stos
adc
gs
mov
jg
jmp
sbb
flds
loopne
pop
inc
xchg
xor
into
xchg
mov
out
pushf
add
pop
jmp
or
or
inc
add
call
dec
leave
push
pop
fdiv
xchg
cli
popa
fucomp
jo
mov
shll
mov
xorl
test
aam
sub
enter
jp
mov
ret
test
repnz
or
bswap
add
lods
add
xor
xorl
testl
add
fcompl
cmpsl
outsl
cmp
filds
mov
divl
test
add
cmpl
aad
add
or
sub
out
lret
push
cmp
out
shll
pause
cmp
pop
push
mov
into
inc
rcrb
push
and
adc
rcll
fs
in
mov
pop
cwtl
arpl
in
repz
jge
jo
std
inc
and
loop
fisubrs
sub
test
fsubp
mov
leave
cmp
xchg
dec
subl
and
shrb
ljmp
ja
jecxz
popa
cmp
fsts
jp
push
push
dec
sbb
jmp
arpl
fdivrs
sbb
jecxz
repz
adc
prefetchnta
aaa
push
sub
insb
mov
in
jne
dec
fwait
loopne
xor
rorl
enter
mov
mov
pusha
leave
inc
rcr
into
cld
and
push
int3
fs
fdivrp
adc
gs
dec
or
loopne
cmp
es
dec
mov
mov
mov
add
js
mov
mov
xchg
sahf
in
stc
mov
xchg
loopne
sub
loop
gs
mov
test
ss
in
scas
fnstcw
std
xchg
xor
push
fs
or
sub
es
inc
movsb
push
rolb
clc
push
popa
mov
mov
lcall
inc
pusha
popa
add
les
xor
jge
xchg
mov
pop
into
in
mov
inc
fwait
mov
sub
cli
sub
mov
mov
sbb
jne
jo
mov
sbb
pusha
or
and
jns
hlt
lret
cmp
lret
jle
imul
cwtl
mov
stc
aaa
outsb
mov
in
mov
jle
push
or
jbe
pop
mov
out
or
es
jns
pop
xchg
push
lret
add
and
fisubrl
push
push
lods
jmp
dec
mov
stos
lods
xchg
pop
outsb
xchg
jns
mov
mov
add
add
outsb
out
pop
sub
les
dec
jg
mov
mov
insl
shlb
loopne
push
lret
push
xchg
mov
sbb
cmp
test
mov
mov
and
mov
aaa
add
push
sbb
jmp
mov
out
xchg
xchg
mov
pusha
jnp
fnsave
popa
stos
int3
pop
stos
movsb
icebp
push
aas
jp
adc
pusha
nop
insb
jns
stc
enter
rcll
push
das
dec
mov
push
push
xor
cmpb
push
es
lock
adc
fcoml
or
je
jp
lret
mov
pop
push
lret
jbe
dec
push
cmp
push
cmp
clc
lods
cmp
int3
mov
sbb
lcall
mov
mov
repnz
movsl
xchg
inc
inc
rclb
int
sbb
push
xor
push
push
ret
xchg
push
push
stos
sub
pop
shlb
fsubrl
inc
pop
jo
sub
jno
mov
in
test
enter
rclb
dec
ret
pusha
mov
sbb
das
cmp
pusha
mov
stos
aad
sti
sar
cmp
shrb
out
dec
add
mov
adc
pop
push
pop
jmp
cmp
pop
mov
pop
cld
inc
fistpll
dec
lods
inc
and
push
repnz
fwait
jge
dec
ss
jge,pt
imul
fists
cmpsl
fwait
xor
sub
or
aam
in
popf
pop
push
imul
leave
jle
daa
inc
test
jbe
pusha
addr16
push
pusha
push
cmp
mov
mov
mov
or
cli
or
and
xchg
imul
stos
or
int
stos
inc
add
mov
stc
fwait
lret
test
daa
xchg
scas
bnd
lods
dec
xor
int
rcl
stos
or
push
mov
lret
mov
imul
pop
divl
jns
push
mov
and
lock
push
mov
jl
push
mov
out
outsl
sub
in
or
push
cmp
xchg
mov
rcl
sbb
lcall
ret
fwait
jle
cs
inc
push
xchg
sub
shlb
insb
das
lret
sbb
add
into
ljmp
push
mov
mov
pop
sbb
repnz
pusha
jbe
and
pop
jo
jne
sbb
push
push
ds
jno
jo
inc
adc
sub
fs
xchg
pop
pop
test
mov
cmp
and
out
scas
cmp
mov
fcmove
mov
test
popa
hlt
cmp
xor
not
inc
mov
cs
xchg
addr16
sub
sbb
incl
mov
add
xor
inc
test
das
adc
and
shll
scas
roll
inc
pop
cld
outsb
sbb
fldenv
adc
cltd
cmpb
testb
dec
mov
cld
xor
cltd
insl
test
jmp
lods
and
dec
mov
mov
and
jg
imul
fxch
lods
and
mov
or
and
cmp
push
jg
std
loop
pop
pop
outsb
add
pop
nop
add
xor
mov
mov
mov
push
pop
loopne
mov
into
xchg
stos
inc
add
and
in
cmp
int
adc
pop
arpl
and
push
aaa
in
and
popf
mov
xchg
and
dec
inc
clc
cmp
iret
jl
imul
jg
clc
ds
add
adc
dec
push
hlt
imul
push
mov
xor
cld
inc
jp
das
leave
loopne
je
subb
sub
cltd
popl
jb
and
lret
xchg
repnz
xchg
mov
test
inc
and
xor
push
cli
fsts
xchg
xchg
mov
sub
das
jecxz
add
mov
in
inc
cmp
cli
cmp
sub
pop
aaa
mov
gs
adc
jle
stos
dec
sub
movsl
nop
ja
sub
daa
push
rclb
dec
test
ljmp
mov
out
jecxz
mov
aaa
cmpsl
pop
or
and
push
addr16
mov
push
hlt
sub
push
aad
in
or
es
lock
mov
test
push
inc
shlb
jne
in
inc
scas
leave
push
sbb
mov
dec
invd
sub
inc
pop
ljmp
dec
push
jb
into
mov
clc
stc
and
insb
adc
lock
in
cltd
inc
push
ss
mov
pop
mov
push
call
sub
jg
ss
or
xchg
sub
or
clc
lds
int
or
inc
into
jmp
pusha
std
cmpsb
sbbl
mov
dec
pop
leave
mov
nop
pop
xor
insb
mov
fldl
fdecstp
jb
loopne
dec
es
out
stc
sbb
jle
adc
mov
cld
leave
or
jmp
leave
pop
xorl
push
xor
jle
jmp
jae
adc
ja
fwait
sbb
fwait
dec
inc
add
dec
mov
jb
rcrl
in
dec
fisttpll
ret
les
out
mov
rolb
mov
cmp
popa
dec
xlat
in
push
outsl
jl
fwait
movsb
lock
dec
and
and
je
mov
gs
aad
push
pop
push
pusha
inc
mov
sub
add
pop
sarl
popf
mov
fistl
ja
stos
xchg
add
call
cmp
add
or
fs
xorl
movb
sti
int
mov
jb
jns
adc
dec
iret
aas
adc
add
mov
in
inc
add
and
jb
push
xlat
das
push
pop
stc
and
in
outsl
fucomp
int
scas
mov
imul
dec
add
and
jns
xor
pop
lods
add
mov
stos
push
add
or
dec
inc
out
pop
test
pop
jmp
rolb
bound
sub
push
mov
fiaddl
out
pop
int
and
push
scas
addr16
jg
adc
ja
pop
cmp
arpl
test
jg
jge
ljmp
mov
sarb
push
cmp
cmc
add
jno
nop
cmp
sbb
stc
mov
int3
pop
lea
xchg
andb
movsb
mov
cmp
lods
push
fwait
aaa
xchg
push
mov
outsb
cmpps
sub
out
lods
push
les
pop
jecxz
addr16
movsb
fs
pop
xchg
mov
ret
and
xor
fwait
dec
inc
xchg
inc
or
test
push
xchg
jns
clc
xchg
inc
sub
mov
loope
cmpsl
dec
test
and
and
xchg
xchg
adc
jns
fsubr
gs
fisttpll
fs
mov
jle
das
nop
scas
sbb
in
xchg
mov
aam
sub
bound
pop
mov
mov
dec
out
or
sahf
or
jo
jae
inc
repnz
pop
lret
sahf
cmp
jg
js
mov
mov
sub
push
adc
and
mov
movsb
loop
mov
loope
into
xor
in
mov
imul
xor
icebp
dec
lods
jle
ss
mov
sti
jne
adc
inc
std
aas
rcrb
mov
js
mov
xor
int3
add
rclb
cmp
cmpsb
mov
adc
lods
cmp
cmpsb
add
xchg
flds
pop
or
jl
neg
dec
dec
ljmpw
xchg
lods
scas
xor
jmp
jle
lcall
out
outsb
inc
mov
insl
dec
mov
pop
sti
into
push
mov
mov
mov
jl
mov
jle
js
cwtl
cli
aaa
dec
es
stos
dec
mov
mov
inc
test
aad
adc
dec
add
fldenv
lcall
frstor
fcoml
dec
add
dec
imul
cs
ss
aam
sub
sbb
cltd
and
popa
out
es
stc
cmpsl
cli
cmpsb
push
push
ds
movsb
movsb
cli
mov
and
pop
xchg
imul
or
inc
sub
xor
mov
xchg
cmp
lods
ds
mov
sbb
mov
imul
int3
sbb
xor
mov
icebp
testl
pushf
and
out
push
decl
mov
add
pushf
movsl
les
ret
lods
mov
mov
std
test
dec
sbb
das
fmul
test
and
sbb
cmpsb
lds
push
pop
push
xor
cwtl
push
movl
cld
cmp
loop
add
aaa
jo,pn
or
aaa
dec
push
push
dec
jo
push
mov
push
inc
jns
loop
mov
hlt
cmp
mov
dec
outsb
lds
je
xor
in
negb
xlat
mov
cmp
sub
xchg
adc
xchg
cld
xor
rcrl
pop
xchg
pop
mov
ret
shrl
sahf
push
popf
sbb
sub
inc
lret
mov
enter
or
pop
xchg
push
in
pop
out
cmp
aaa
and
dec
pop
mov
in
cmp
hlt
es
mov
repz
test
push
jnp
jl
and
sub
pop
cli
mov
xor
dec
jmp
push
xor
lds
xor
or
sbb
xchg
mov
mov
ja
push
lock
push
inc
xchg
and
pop
int3
int3
mov
les
push
movsl
xchg
flds
mov
mov
pop
jl
fdiv
test
fbld
cld
pop
or
mov
sahf
rorb
pop
cld
sub
dec
or
or
leave
cmpsb
fnstenv
push
mov
mov
xor
aaa
rol
pop
mov
in
or
lcall
jecxz
xor
pop
fcom
imul
and
dec
mov
xchg
lea
push
xor
mov
pop
and
pushf
jle
int3
sbb
mov
ret
incl
sub
gs
or
arpl
push
je
mov
stos
mov
outsl
test
xor
out
inc
xchg
insl
ret
cmc
dec
jns
std
nop
jle
cmp
mov
insb
roll
sahf
fdiv
pop
pop
pop
sahf
jmp
aaa
lock
loopne
mov
popa
add
or
jl
repz
ss
pop
dec
jns
fnstsw
inc
outsb
dec
inc
test
outsb
push
xor
divb
and
pop
leave
addl
inc
scas
icebp
mov
out
add
cmp
dec
repnz
pop
in
popf
insl
and
shrd
mov
inc
xchg
jmp
rcl
testb
sahf
jb
addl
aaa
sub
cld
jecxz
insl
scas
inc
or
fdivrp
push
or
sbb
xchg
or
and
out
in
pushl
add
dec
adc
pop
pop
cli
inc
push
sbb
shrb
mov
mov
add
cmp
cmove
xchg
lea
cmp
jg
out
stc
and
stos
aaa
sub
sub
nop
cmp
mov
push
jo
xchg
cltd
ret
loop
popf
xchg
xchg
test
xchg
jg
adc
pushf
pop
sbb
mov
in
xchg
xchg
cwtl
mov
add
mov
pop
and
stc
imul
int
pop
adc
push
add
mov
sbb
xchg
fldt
or
sub
mov
add
inc
pop
lods
lods
add
cmc
cmp
add
jo
or
cmpsb
clc
mov
cmpsb
xor
fildl
leave
test
sbb
inc
mov
sub
mov
adc
cld
scas
scas
mov
mov
in
xchg
add
jle
lret
xor
xor
mov
dec
adc
fiaddl
mov
mov
xchg
xchg
cmp
in
push
stos
add
xor
ret
cmp
sub
sbb
daa
shll
adc
jl
stos
xchg
mov
inc
cli
fs
out
pop
add
mov
pop
outsl
scas
dec
aad
mov
sbb
adc
mov
leave
cmp
test
xchg
aad
add
pop
sub
xchg
pushf
pop
loop
xor
popf
or
dec
xor
popa
int3
movsb
push
pop
cmp
dec
xor
stc
subb
cwtl
mov
dec
fdivrs
jge
cmp
repnz
fs
xchg
and
int3
ljmp
and
cld
push
mov
clc
into
shrl
fildl
cwtl
test
in
je
stc
sahf
fsubrs
inc
fcom
jbe
mov
pusha
dec
gs
sti
stos
mov
int3
cmovs
jns
adc
arpl
sub
mov
add
add
int3
push
push
call
clc
jns
adc
mov
repnz
jg
xchg
movsb
adc
push
aas
ror
icebp
add
cmp
or
mov
lahf
lret
outsb
adcl
add
mov
fimuls
jecxz
loope
xchg
add
pop
xor
jmp
fmull
clc
adc
sub
int3
mov
sbb
dec
sarb
or
xchg
movsb
push
rclb
pop
rcrl
mov
cs
mov
ds
lds
xor
adc
jecxz
mov
clc
icebp
enter
mov
jp
or
rcl
movsl
mov
cli
push
orl
aam
pusha
lock
jmp
inc
sbb
pop
cmpsb
fisubrl
insb
fs
xor
or
add
pushf
pop
or
mov
add
in
xchg
mov
cmpsb
sti
fists
orl
cmp
xchg
add
inc
out
std
shrb
pop
mov
adc
or
xchg
push
and
cmp
jno
movb
inc
mov
jmp
mov
mov
mov
clc
or
iret
out
aas
xchg
or
xchg
pop
ss
xor
inc
test
dec
xchg
shlb
cli
in
add
pop
add
mov
adc
dec
sub
xchg
xor
xor
mov
sub
cmovb
add
test
repz
cmpb
mov
cld
stc
test
adc
in
dec
push
xor
jg
incb
mov
je
xchg
lret
cmpsb
insl
std
or
add
mov
jo
sbb
pop
mov
test
lods
in
sbb
notb
dec
jecxz
popa
jo
pop
ret
scas
leave
pop
cmp
into
cmp
pop
cmp
add
mov
inc
stos
inc
lret
inc
fldcw
test
pushf
test
mov
lds
fcompl
jl
jns
clc
sub
add
stos
mov
sub
or
push
cmp
xchg
push
lahf
xor
in
push
test
daa
ja
cmpsl
adc
rcll
sbb
mov
add
sbb
mov
add
in
pop
outsb
cmc
out
add
lret
in
lock
rorb
sti
adc
popf
xor
mov
ret
mov
pop
ds
ljmp
pop
pop
mov
nop
add
mov
hlt
adc
popa
or
adc
pop
in
enter
enter
cltd
xor
int3
xchg
sub
cmp
add
and
xchg
mov
and
xor
sub
pop
mov
lea
add
dec
repnz
xor
cs
das
outsb
shrb
xor
mov
imul
push
js
cld
les
inc
mov
roll
dec
jo
mov
pop
cmp
jae
push
inc
lds
jae
pop
mov
pop
inc
into
addr16
shrl
stc
sub
push
mov
out
inc
sti
in
inc
dec
jp
sbb
xchg
add
push
xor
push
clc
and
pop
push
sub
pushf
movsb
shrl
fs
sarb
pusha
mov
stos
nop
mov
and
test
lods
sbb
sub
cld
xor
lret
push
push
dec
scas
ljmp
push
push
or
aam
stos
lcall
push
les
xchg
aas
pop
mov
push
add
cmp
mov
clc
imul
cmp
push
mov
mov
in
fucomp
mov
or
imul
jmp
and
push
xlat
dec
dec
aad
push
bound
shl
test
sub
insb
icebp
ds
add
notb
jmp
pop
mov
test
ja
lods
dec
xor
sbb
xor
aad
cmc
int
mov
mov
outsb
jp
push
fidivrs
lea
mov
jp
es
add
leave
jge
std
xchg
int
mov
xlat
sbb
sqrtps
fwait
mov
ljmp
es
hlt
inc
divl
and
iret
movaps
lods
and
in
xchg
cmp
jbe
dec
in
ja
xor
stos
repnz
or
and
js
or
jo
add
dec
pop
xor
loopne
xchg
pop
mov
or
sub
sbb
fisubl
idivl
test
aad
out
xchg
sbb
jecxz
push
cwtl
push
and
pop
cmc
add
aaa
mov
xchg
dec
mov
pop
xchg
shl
cmp
sarl
sub
jl
push
lods
add
sbbb
mov
int
mov
jmp
mov
subl
std
in
fidivs
fsubl
les
test
xor
jae
adc
jg
je
ds
ror
or
icebp
lret
out
movsl
int3
mov
in
and
aam
fdivs
pusha
jl
fcmovnu
jle
fiaddl
jne
dec
rcr
add
or
jb
add
sub
inc
cmpb
rorb
rcr
add
dec
lret
pop
in
sbb
mov
movsb
pop
fs
pusha
ret
leave
and
scas
pushf
bound
dec
bnd
inc
loopne
cmp
xchg
and
lcall
or
call
mov
ret
scas
mov
jge
lcall
stc
xchg
loope
fsts
scas
dec
lcall
pop
jbe
xchg
rcrl
lock
fldcw
push
pop
clc
out
pop
pop
pusha
clc
popf
rorb
or
movsl
pop
jns
jo
or
xlat
dec
loopne
test
inc
cmp
push
xor
cmp
or
cmc
cmp
jbe
icebp
xchg
lods
push
pop
sbb
lods
inc
push
scas
xchg
jmp
cmpsl
or
int
mov
test
into
xor
sub
lahf
jnp
xlat
orb
cmpsb
lret
lcall
subl
push
push
cmp
mov
daa
pusha
jecxz
mov
mov
fldl
xchg
ss
xchg
imul
lcall
jl
sub
and
push
cmp
xor
nop
and
insl
add
sub
rorl
mov
arpl
mov
push
in
movsb
pop
jb
lret
movsl
push
xor
xchg
lods
or
orl
jo
test
inc
les
aas
pop
and
jnp
popf
pop
repz
fldenv
add
repz
aam
cmp
sti
xchg
and
xchg
inc
sub
mov
fiaddl
iret
jne
jae
mov
dec
faddp
fcom
lcall
push
sub
sub
cmpsl
mov
int
rorl
cmpsl
aad
and
mov
push
xchg
mov
jae
in
popf
insb
mov
lods
mov
lods
jge
stos
aam
jns
mov
or
dec
add
je
add
adc
mov
shlb
stos
cwtl
xchg
inc
and
outsb
aaa
lea
lret
mov
popa
stos
mov
dec
hlt
bound
inc
push
mov
lcall
inc
out
gs
aas
mov
syscall
jecxz
cs
mov
jns
xchg
adc
int
std
cmpb
pop
jg
stc
data16
jle
in
cld
js
jbe
cmpsl
repnz
add
test
nop
jmp
subb
jp
xor
inc
or
and
add
je
mov
sub
jbe
push
int
mov
adc
popa
inc
pop
dec
rcrb
xchg
inc
ja
mov
or
cmp
jo
lret
mov
in
push
stc
mov
outsb
cmp
clc
lret
pusha
mov
fldenv
sub
sbb
pop
mov
shlb
mov
pop
cld
ljmp
scas
test
jmp
cli
sub
push
sbb
sub
in
outsl
pop
mov
ja
inc
stc
scas
mov
push
clc
add
push
gs
pop
mov
pop
push
mov
in
cmc
call
mov
aam
jb
and
mov
jecxz
test
repz
cwtl
mov
sub
xchg
dec
dec
ljmp
aaa
adc
into
cmpsl
xor
cmp
std
jp
sahf
fistps
xor
mov
daa
rcrb
mov
cmp
cs
popa
aad
push
data16
data16
inc
in
jno
inc
and
sub
sub
orb
and
mov
mov
outsl
adc
add
add
mov
mov
cmpl
sbb
loope
mov
pop
scas
cmpsl
jno
rcl
mov
mov
rcll
cmc
les
ja
mov
push
insb
into
popf
inc
iret
pusha
xor
into
out
add
pop
xor
sar
mov
or
enter
cmp
rcll
inc
inc
sbb
push
push
out
lahf
pop
mov
sti
pop
popl
pop
les
jbe
inc
es
and
mov
sbb
jo
jecxz
lock
dec
stos
je
jle
adc
jecxz
daa
push
and
hlt
inc
dec
int
rolb
push
mov
inc
or
pop
lods
addr16
xor
out
stos
lret
and
mov
loop
negb
gs
in
inc
adc
and
ror
pushf
mov
add
push
out
push
inc
jmp
je
idiv
lret
xlat
cmpsl
loop
iret
insl
aam
push
sbb
insl
add
jbe
sub
jbe
sub
adc
mov
pop
xchg
dec
std
addl
mov
mov
or
enter
stos
mov
sub
cltd
sbb
pushf
lret
jbe
pop
test
inc
lret
arpl
xor
xchg
xor
push
aam
push
xchg
cmc
sub
inc
cltd
dec
les
fimuls
test
in
je
add
je
in
stc
aad
jo
push
adc
xor
pushf
scas
in
jl
outsl
xchg
xor
test
lods
mov
dec
data16
mov
rorl
call
call
shll
pop
add
jp
xor
aam
add
out
mov
dec
dec
jne
addb
or
ja
ds
in
stos
lock
sub
jb
sub
ret
scas
adc
jae
mov
push
lock
subl
loop
sub
pop
inc
push
daa
jbe
jae
aaa
test
out
loopne
jbe
mov
sbb
rcll
shrb
adc
test
fiadds
fstpt
sub
movsb
rcll
inc
jle
test
mov
test
adc
aaa
jns
call
push
test
pop
adc
pop
in
mov
cs
adcl
clc
call
inc
inc
mov
sbb
or
jg
lea
pusha
dec
pop
rorb
adc
mov
jge
and
xchg
push
inc
mov
bound
stos
rcr
cmp
arpl
leave
ja
cs
sahf
pusha
xor
aas
in
push
mov
mov
jecxz
mov
cltd
mov
inc
loopne
cs
mov
mov
rsqrtps
ret
push
sub
mov
add
xor
in
aas
xor
out
in
and
fyl2x
ss
pop
push
mov
lret
mov
das
cmp
mov
repnz
mov
jnp
jne
stc
into
mov
addr16
add
mov
dec
lret
push
mov
inc
out
movq
leave
insl
sarl
dec
inc
dec
push
push
xchg
pop
lods
push
push
fdivrs
or
xor
push
jecxz
mov
stc
adc
xor
and
push
xor
paddb
jo
lcall
and
cmpsl
pop
pop
fwait
push
dec
mov
cmc
cmp
in
bound
xor
pop
sbbl
and
cwtl
or
mov
xor
dec
xchg
sub
pop
scas
inc
test
pop
mov
dec
in
mov
sarl
hlt
imul
mov
and
dec
sub
inc
ja
mov
mov
imull
iret
jge
sub
xor
pop
pop
push
jmp
mov
sbb
pop
jb
add
or
sbb
add
xor
jb
repz
mov
pushf
mov
sahf
cmp
and
or
pop
mov
mov
push
aam
adc
xchg
dec
mov
pop
jg
mov
dec
testb
repnz
xchg
repnz
sbb
stos
jnp
push
or
outsl
mov
ljmp
push
xlat
xor
test
add
push
dec
cmp
dec
sub
jb
or
fs
in
pop
mov
imul
jns
lcall
fs
adc
int
outsl
aaa
xchg
mov
xor
lret
imul
shll
mov
add
clc
and
adc
jp
xor
cs
pop
loope
add
and
dec
mov
std
push
sbb
cmp
dec
std
arpl
xor
les
rcl
ljmp
int3
lds
lods
bound
push
pop
outsb
inc
xchg
xchg
imul
test
jno
call
push
xchg
pushf
push
fidivrl
jle
out
and
scas
and
or
mov
inc
pop
movsb
aaa
popf
cmp
lret
aas
sbb
push
test
mov
add
jae
fimuls
ffreep
xorl
icebp
push
inc
je
mov
inc
or
test
push
jl
xchg
pusha
and
fs
lret
sahf
aad
xchg
imul
push
cli
sub
cmpsb
mov
fsub
shr
out
inc
lock
xlat
movsl
cli
insl
inc
movsb
jle
cmpsb
push
stos
push
jge
or
insl
add
out
cmpsl
jge
dec
lods
dec
hlt
aaa
in
push
adc
jmp
mov
data16
lcall
push
les
enter
pop
ja
cmp
push
mov
int
or
xor
in
and
pushf
xor
jne
std
cmpsb
pop
imul
gs
hlt
inc
xor
lea
nop
pop
icebp
cltd
push
dec
push
and
and
mul
rolb
aad
pop
dec
cltd
stos
ficompl
pop
dec
outsl
push
ret
jl
xor
push
into
adc
popf
imul
pusha
jnp
dec
mov
addl
xchg
shll
sahf
cld
xchg
int
cmp
addr16
xchg
icebp
ret
in
mov
in
lds
stos
sub
cmp
mov
int
adc
in
cltd
adc
arpl
push
mov
or
mov
sub
xor
dec
mov
sub
ret
js
xorl
je
mov
cmp
aas
or
mov
test
mov
and
hlt
sbb
test
dec
add
fnstcw
andl
push
adc
aad
xchg
mov
fdiv
xchg
jmp
push
mul
pop
mulb
and
icebp
repnz
jmp
ss
in
popa
jp
inc
xchg
push
fidivs
test
xor
inc
pop
shrb
lret
outsl
adc
dec
push
lea
dec
cmp
lods
sbb
cmpsb
mov
out
stos
lcall
dec
das
pop
sub
test
rcll
out
movsb
xor
mov
jns
scas
sbb
add
mov
inc
sbb
mov
jb
scas
pop
ficompl
cmp
dec
cmpsl
shl
and
in
or
cmp
xchg
lret
leave
jbe
leave
add
add
mov
jo
sbb
sub
addr16
mov
or
aad
push
frstor
cmp
lods
in
ss
shlb
movsb
popa
lds
mov
sbb
loopne
adc
add
int3
repz
push
add
sarl
mov
inc
popa
fisubs
mov
imull
in
sbb
ja
sahf
dec
pop
dec
jl
push
cltd
shl
fcomps
fs
mov
mov
daa
jb
sub
mov
dec
lcall
in
lahf
out
movsl
pop
pop
pushw
mov
xchg
mov
imul
shl
negl
fadds
or
in
nop
mov
and
or
mov
movb
push
ds
addr16
fdivp
mov
and
cwtl
fdivrs
daa
jl
outsl
lods
pusha
fstps
repnz
std
push
push
rclb
int3
out
jae
hlt
lcall
xchg
cli
and
stos
inc
lods
fnstsw
mov
shll
test
repz
jmp
jno
insl
je
jl
int
and
push
pop
sub
fnstcw
xor
mov
xchg
inc
insb
in
js
or
xchg
mov
shll
fs
test
mov
sub
ret
out
cltd
pop
fldt
sub
fstpt
cmp
and
out
pop
stos
sbb
xchg
add
ds
pop
adc
mov
fsubrs
roll
shlb
es
pop
sbb
outsb
clc
loope
dec
aam
sub
jns
add
lds
loope
cs
stos
jb
shll
adcb
or
sub
and
xchg
xchg
push
mov
and
xchg
lcall
xchg
inc
lock
xor
mov
fbstp
cmc
xchg
lcall
cmc
push
lret
xor
icebp
cli
arpl
xor
jb
shll
ret
adc
repnz
adc
add
cld
xchg
xchg
out
xchg
add
pop
std
xchg
andb
mov
xchg
cwtl
sbb
add
fcmovnb
jle
mov
aas
inc
ljmp
sbbb
addr16
shll
adc
push
in
mov
call
adc
push
std
sub
dec
xor
rcr
mov
dec
dec
push
xchg
lds
cmpsl
loope
mov
jne
lods
add
out
jb
aaa
sarl
push
jns
shll
stc
insb
mov
dec
cmp
shlb
lret
cmp
aam
les
sbb
out
stos
adc
movl
inc
ret
fsubl
jge
or
mov
jne
mov
ret
sbb
mov
popl
pop
cmp
test
insl
loope
subb
daa
shlb
push
flds
jmp
inc
nop
push
outsl
dec
mov
mov
xchg
dec
add
aas
cmp
push
adc
in
cld
dec
sbb
or
xchg
push
lret
sub
hlt
adcl
push
sti
fs
cmp
or
inc
xchg
and
mov
mov
fidivs
adc
cltd
movsb
arpl
mov
test
daa
mov
mov
dec
and
xchg
mov
rcrl
out
das
jg
cmp
ljmp
mov
inc
out
sarb
cmp
das
lret
mov
xor
loope
hlt
pop
hlt
shrb
aas
adc
cmp
fmull
sarb
push
cwtl
ds
adc
outsb
sbb
push
stc
jbe
ljmp
sarl
or
pop
mov
shlb
inc
test
or
shr
push
std
adc
sub
dec
xchg
xor
inc
pop
and
lock
xor
inc
sbb
inc
add
pop
pop
shrb
dec
je
add
xchg
shlb
sub
xor
mov
mov
and
loopne
add
push
enter
lcall
mov
js
pop
jns
pop
fistpl
outsl
xchg
lcall
xchg
inc
pop
xor
stos
insl
lods
jne
stos
in
dec
fcomi
sbb
dec
mov
sbb
sbb
xchg
adc
rolb
jno
dec
sbb
mov
push
push
jg
pop
jl
sub
adc
cmc
lret
addr16
jl
and
jmp
icebp
mov
pop
lods
xchg
cmp
xchg
adc
adc
in
rcl
ss
decb
xchg
imulb
pusha
gs
test
pop
out
dec
lret
shll
orl
out
jae
xchg
push
mov
cld
mov
pushf
and
pop
stos
lret
push
pop
mov
es
fistpll
push
jnp
outsb
jno
mov
ljmp
in
cmp
pop
mov
jg
jne
cmp
mov
sbb
es
push
xor
loope
out
loope
rclb
flds
rcrl
test
or
mov
cltd
je
into
sub
addr16
and
and
clc
pop
inc
scas
cwtl
xor
sarl
pop
fmull
stos
lea
lods
iret
es
pop
mov
inc
fisubl
icebp
lods
add
cmp
push
jle
push
shll
mov
aas
pop
je
loop
adc
jnp
insb
pop
fdivr
icebp
outsl
int3
cmp
mov
rolb
add
xor
pop
sub
repnz
popa
or
fldenv
fwait
or
xor
orb
sbb
insb
inc
ret
addr16
jne
cmp
xchg
cmc
loope
addr16
adc
add
leave
cltd
fstps
xchg
push
lods
mov
mov
mov
cwtl
popf
push
arpl
jecxz
scas
adc
sub
sbb
cltd
dec
push
stos
clc
repnz
push
or
lea
jl
incl
dec
test
out
data16
out
loope
mov
mov
or
or
roll
std
ret
jl
test
mov
mov
and
rorl
xor
scas
push
aad
jbe
push
lret
cmpsb
dec
cmp
leave
mov
movsl
cs
or
out
dec
or
push
inc
sub
mov
mov
clc
inc
pop
leave
mov
fldenv
xor
jle
jbe
push
xor
adc
hlt
ds
xor
fstl
and
xchg
xchg
insl
popa
jmp
pop
scas
sbb
fsubs
jno
or
xlat
sbbb
fstpt
je
xadd
dec
sub
add
nop
outsb
jne
rcll
jns
fwait
pop
rcrb
test
mov
lret
pop
cwtl
and
inc
imul
and
jecxz
sbb
push
lret
popa
roll
daa
inc
leave
std
push
mov
adc
clc
clc
xor
ljmp
loopne
sbb
mov
xor
adc
adc
xchg
or
cmp
imul
lock
or
xchg
xchg
gs
mov
stc
jno,pt
sti
sahf
les
push
and
cltd
mov
in
mov
mov
sub
or
shrl
in
lds
popf
xlat
xchg
in
and
leave
jge
test
into
mov
and
shrb
inc
jnp
mov
out
mov
xchg
push
add
dec
push
dec
add
jl
fistpll
and
shl
in
jns
sbb
test
aam
push
dec
dec
jns
in
insl
sbb
jae
adc
mov
stos
sub
bound
xor
dec
mov
stos
js
dec
cmp
sub
popf
divl
or
std
xor
out
pop
popa
call
aam
ljmp
ret
mov
lods
inc
push
jecxz
add
insl
outsl
test
and
xchg
inc
sti
inc
sahf
jg
fsts
sarl
sahf
pushf
ret
lahf
nop
cmp
push
dec
inc
loope
stc
es
movsl
sbb
cmp
out
aaa
or
pop
pushf
xor
int
jl
test
enter
fs
mov
jl
dec
stos
loop
or
xchg
outsb
pushf
mov
inc
test
cmp
dec
fwait
popf
dec
push
es
sbb
push
sbb
pop
mov
inc
repz
test
fcmove
or
stc
cmpsl
xor
mov
out
push
ret
lock
push
dec
fnsave
or
pop
mov
mov
jl
inc
mov
loop
mov
outsl
dec
jp
mov
pop
jb
xchg
push
push
movsl
inc
lret
and
dec
dec
and
out
mov
adc
sbb
imul
in
outsb
sbb
pop
iret
or
repnz
mov
cmc
sbb
ljmp
mov
jo
ja
mov
xor
xchg
leave
add
out
push
inc
lods
insb
test
lcall
push
addl
jecxz
stos
or
test
pop
and
xor
cmp
or
idivl
jl
pusha
sbb
in
add
pop
inc
xor
sbb
ret
je
dec
rcrb
cld
les
pop
sub
dec
add
insl
jge
sbb
aam
stc
xchg
fs
mov
xchg
inc
xor
daa
icebp
add
negl
test
bound
mov
xchg
or
sub
dec
and
sub
push
xchg
je
fcomi
fimuls
test
sub
daa
xchg
mov
outsl
int3
xlat
mov
cmp
in
adc
inc
sahf
lahf
les
mov
push
lea
mov
xor
popa
stc
in
xchg
mov
scas
adc
or
mov
data16
lea
aas
cmp
repnz
inc
repnz
adc
scas
ja
or
jae
and
mov
xlat
push
mov
dec
mov
lcall
daa
repz
mov
sub
adc
cmp
test
sub
outsl
dec
dec
mov
test
xchg
mov
push
mov
outsl
jge
sarl
imull
scas
iret
ds
sbb
in
push
call
jbe
cmp
xchg
push
outsb
rcll
fs
pop
and
inc
lahf
and
sub
pop
xor
movsb
mov
scas
xchg
add
incl
hlt
dec
vpsadbw
popf
cmpsb
mov
xchg
mov
push
push
hlt
sbb
jo
je
xor
out
popf
icebp
adcl
add
dec
js
lock
roll
cwtl
fidivl
loope
ret
mov
mov
mov
addl
movsb
and
mov
adc
fcmovbe
imul
int3
xor
mov
das
in
mov
lcall
add
jnp
pop
sbb
adc
mov
ds
jg
jbe
xchg
mov
pop
test
xchg
dec
stc
mov
ja
loop
inc
pop
lret
ret
lds
cmp
int3
pushl
mov
push
shufps
jb
lock
dec
inc
lahf
sbb
or
pop
cld
mov
jne
mov
add
or
push
test
pusha
insb
hlt
adc
mov
push
or
push
cs
rorb
mov
pushf
das
rclb
aaa
cmpsl
test
mov
push
inc
shr
pop
hlt
sbb
std
adc
or
mov
and
test
inc
neg
aaa
pop
inc
pop
lret
stos
dec
in
loop
call
cmp
test
test
mov
sahf
test
outsl
ljmp
xchg
sahf
scas
cld
xchg
orb
pop
sbb
or
dec
enter
cmp
mov
xchg
sub
adc
lret
loop
inc
adc
iret
jmp
in
xchg
call
pop
insl
int
mov
jnp
mov
js
xchg
scas
shr
xor
sbb
push
add
cmpb
xor
mov
inc
in
mov
sti
fidivs
inc
jmp
push
sarb
and
dec
and
sahf
cli
popa
lods
repz
xchg
aaa
mov
dec
add
and
or
sbb
push
fidivl
dec
pop
add
sti
and
loop
stos
xor
negl
ds
or
stos
and
sbb
es
sbb
jbe
mov
or
mov
xsave
xchg
fldt
mov
mov
add
jl
or
xor
and
lock
fistps
test
inc
mov
jo
and
jmp
jns
xlat
sbb
mov
bound
cmpsb
push
push
ja
scas
pop
bnd
mov
mov
push
daa
add
sbb
js
mov
and
data16
pop
pop
mov
xchg
xor
inc
data16
mov
fwait
cmpsb
pop
cmp
pop
test
adc
xlat
pop
mov
fidivrl
xchg
xchg
in
xor
jmp
outsl
jp
cmp
cmpsb
push
stos
add
nop
jae
movmskps
out
mov
stc
push
arpl
ret
fistps
in
scas
aas
push
add
mov
adc
adc
push
dec
sahf
sbb
in
loope
out
lock
rol
or
mov
cltd
mov
in
cmpl
out
fimuls
push
lods
sbb
mov
pop
fistpll
cmp
popa
fmulp
repnz
iret
leave
jecxz
sahf
jno
pushf
adc
mov
scas
loope
xchg
pop
pushf
test
js
and
xlat
mov
call
fs
fdivrl
ficoml
or
dec
dec
mov
mov
cmp
cmp
ljmp
pop
clc
ljmp
push
in
xchg
inc
cmp
push
push
push
sub
cld
ficoml
dec
jecxz
ss
test
imul
ja
adc
add
sbb
and
xor
lret
ds
mov
movsb
cmp
cmp
push
dec
clc
ljmp
xor
or
int3
fsubrs
mov
or
push
mov
push
mov
ret
sbb
sbb
or
push
jge
or
fistpl
fnsave
es
daa
and
cmpsb
es
sbb
test
test
pop
imul
in
add
mov
loop
cmpsl
inc
es
dec
push
mov
enter
test
out
ljmp
out
movsb
or
jmp
or
push
push
aas
pushf
pushf
into
or
aad
iret
push
js
cmpl
add
pop
sarb
mov
jno
imul
out
push
leave
cmp
cld
or
into
xchg
xchg
mov
xor
jo
sbb
mov
and
les
cltd
xor
push
inc
cmpsb
rolb
mov
call
pop
xchg
adc
cltd
pusha
leave
pushf
push
sub
rolb
xor
jmp
adc
mov
aad
enter
mov
or
inc
daa
add
xor
xchg
mov
sarb
mov
sub
enter
dec
addr16
jno
dec
pop
aaa
aam
in
cmp
mov
sub
pop
gs
push
inc
pop
inc
cmp
pop
xor
jne
add
push
pop
mov
pop
pop
mov
fcomps
mov
leave
aam
cmpsl
pop
lahf
inc
mov
aad
xor
adc
and
sbb
ret
in
adc
lret
xchg
fcoms
xchg
pop
or
cmpsl
dec
xor
pop
dec
addr16
in
das
sub
mov
add
fsubr
cmpsb
aad
jb
je
shl
pop
sbb
test
lea
adc
and
std
push
jae
add
pop
shrd
xor
lahf
cld
jne
lahf
mov
pop
add
iretw
repnz
aad
or
and
stos
jge
xchg
into
mov
cli
mov
out
push
sbb
pop
cmp
bound
xlat
pop
push
or
pop
dec
cmc
pop
and
iret
mov
div
lret
xor
push
sub
in
lret
lds
inc
pusha
test
adc
mov
jl
cmc
inc
jns
arpl
mov
mov
arpl
movsb
mulb
scas
icebp
pushf
packuswb
push
cld
lods
cmp
sub
mov
sbb
mov
inc
daa
jmp
fmul
mov
xchg
adc
inc
xchg
rcrl
jl
mov
push
push
inc
and
add
push
add
pop
inc
ret
ljmp
and
pop
cwtl
shll
icebp
int3
in
mov
inc
fwait
jns
repz
mov
jmp
push
xor
xchg
push
sub
sub
out
xor
push
pop
lods
ss
mov
cs
loop
or
pop
lods
mov
aad
add
iret
shr
cmpsb
pop
dec
stos
sub
cmp
push
incl
inc
dec
and
push
mov
mov
loop
sbb
cmp
dec
xchg
dec
int3
lret
mov
xor
mov
in
shll
dec
lods
mov
into
gs
adc
add
adc
cmp
xchg
mov
in
or
xorb
or
pusha
sub
or
mov
insl
hlt
sub
adc
dec
mov
add
mov
call
or
pop
divl
pushl
cmp
pop
or
daa
mov
push
movsl
in
inc
mov
cmp
outsb
pop
std
dec
jne
push
jecxz
mov
or
stos
pop
scas
lcall
pop
jbe
insb
cmp
push
test
jle
in
jmp
js
sub
cmp
mov
and
push
mov
jnp
fcoms
data16
shll
popf
repnz
cwtl
or
aad
scas
jae
mov
mov
in
push
dec
pop
sub
mov
call
and
repz
test
jb
push
xchg
sarb
loopne
jbe
sbb
popf
and
fists
jmp
adc
iret
shlb
cmp
mov
arpl
adc
mov
mov
cwtl
ror
leave
pop
pop
adcl
loopne
adc
test
fistl
lret
test
rorb
sti
int3
in
mov
mov
xchg
jb
daa
adc
ljmp
pop
xor
test
sub
jmp
mov
lahf
sub
repz
fnstsw
jmp
mov
lret
jo
rorb
fiadds
es
loope
bound
push
jnp
insl
lcall
pop
fcmovb
ficomps
enter
add
js
sarl
in
add
push
jge
pop
mov
dec
sbb
mov
test
stc
lods
push
lods
mov
cmp
push
sbb
sbb
and
or
pop
and
mov
add
push
fcmovu
shll
fwait
clc
fsubrs
arpl
adc
pop
notb
jns
enter
mov
xchg
add
addb
in
in
sub
cwtl
sub
icebp
adc
sbb
mov
xor
in
cmpsl
dec
icebp
ret
lods
pusha
xor
out
mov
mov
pushf
jl
aam
call
fldl2e
sbb
cltd
xorb
les
frstor
lret
fstpl
leave
dec
jne
outsb
push
cmc
bound
mov
sti
js
jns
scas
addr16
mov
lret
fwait
xchg
and
cmp
jnp
fwait
pop
int
aam
ret
push
inc
rep
dec
sbb
mov
cmp
xor
pop
cld
inc
push
push
xchg
mov
aas
mov
mov
and
inc
xor
cmc
test
lahf
enter
fstpl
cmp
rcll
adc
dec
or
outsb
shll
in
daa
and
mov
push
mov
add
mov
cmp
mov
sbb
into
mov
mov
xchg
icebp
call
push
es
inc
mov
fstp
adc
mov
fsubl
or
insl
cwtl
inc
cmp
roll
mov
stos
in
rcl
push
and
fdivr
dec
xor
dec
cmpsl
lahf
test
mov
jns
mov
pushf
test
popa
scas
or
sbb
cmp
in
or
add
jle
push
test
mov
in
outsb
pop
mov
push
fwait
lcall
cmp
ja
hlt
scas
movsb
rcll
jle
sub
fs
or
or
and
xchg
movsl
in
ficompl
add
les
or
mov
xchg
mov
fistl
seta
pop
pop
xor
sbb
mov
test
fildll
daa
aad
std
dec
mov
scas
es
test
imull
insl
mov
mov
repnz
inc
clc
push
loope
xor
sub
ror
mov
mov
cli
and
orb
aad
out
add
cld
je
cmp
insl
pop
fadd
ds
out
out
lock
scas
inc
loopne
inc
xorl
pop
cmp
mov
test
mov
inc
pushf
push
ds
std
pusha
leave
out
jno
into
mov
leave
add
test
mov
mov
sub
frstor
out
jo
push
jle
cmpsl
pop
aad
lock
in
int3
push
and
sub
mov
int
orb
jp
add
sub
xchg
scas
xlat
mov
pusha
daa
movl
lcall
fwait
mov
mov
mov
out
das
hlt
dec
sar
jecxz
cmc
int3
mov
sub
jmp
inc
add
bound
or
inc
addr16
adc
jns
test
loop
or
cmp
test
jbe
or
xor
push
and
enter
scas
pop
dec
sub
jno
cmp
psllw
inc
mov
inc
mov
dec
mov
dec
and
mov
rol
cmp
mov
addr16
add
popf
loop
mov
xchg
mov
and
mov
jl
dec
mov
sbb
jle
andb
and
out
sub
pop
push
push
adc
sbb
mov
and
loop
stos
adc
sub
int3
pop
test
jbe
in
xchg
das
xchg
lea
sbb
popa
or
scas
xor
jle
dec
lods
rolb
xchg
xchg
pop
and
out
or
xchg
xchg
mov
in
addr16
sti
sbb
xchg
mov
into
fbld
loopne
dec
adc
push
mov
sub
inc
mov
mov
dec
sub
inc
inc
mov
or
fnstenv
data16
mov
loope
mov
rcr
sbb
sbb
stos
repz
inc
in
cmc
sub
mov
leave
movsl
add
out
adc
and
push
cmc
sub
into
inc
jp
push
adc
xchg
sub
jmp
lret
hlt
cmpsb
pop
gs
and
fwait
test
xchg
jl
adc
add
pushf
pop
dec
mov
inc
adc
pop
mov
inc
cmp
lcall
out
jae
xor
sub
xor
out
sbb
xor
push
ja
mov
mov
lock
mov
hlt
push
ret
imul
fadds
in
sbb
ds
mov
pusha
jne
outsl
mov
xchg
and
xlat
sbb
xlat
imul
inc
addl
sbb
insl
adcb
aad
sarl
add
cmp
stc
sbb
je
fcmovnb
negl
jge
loope
addr16
xchg
pop
out
outsl
pop
xor
mov
insb
mov
lahf
xchg
in
xchg
aas
shl
int3
pop
mov
pop
jnp
push
adc
test
dec
pop
sbb
test
mov
cmp
jecxz
mov
adcl
mov
and
inc
add
and
lods
mov
imul
repz
fisubrs
sbb
loope
push
sub
repz
daa
loope
imul
jo
scas
sub
divl
push
dec
jmp
xchg
mov
outsl
push
dec
loop
jl
idivl
pcmpgtw
daa
addr16
loopne
adc
aaa
cld
and
fsubrl
dec
mov
ja
jmp
lods
into
xchg
nop
out
inc
jnp
or
ret
in
mov
pop
rcl
push
stos
mov
fsubrs
cmp
push
xor
sub
jns
cltd
test
jns
scas
or
sbb
jbe
aad
test
xchg
jnp
mov
mov
les
aad
xchg
stos
sti
in
sahf
mov
push
mov
out
mov
mull
mov
mov
je
iret
sti
push
test
add
jg
mov
subb
xor
add
ss
in
push
loopne
je
mov
xor
sbb
jmp
pop
dec
add
mulb
imul
lret
or
icebp
call
push
out
jae
dec
fcom
incl
popa
mov
dec
daa
fisubl
cmp
add
mov
push
sbb
and
mov
adc
lods
jp
pop
aaa
lock
xor
or
mov
cmpsl
outsb
loopne
and
add
add
test
xchg
stc
cmpsb
lock
mov
jmp
mov
daa
mov
add
int
out
fwait
mov
jae
insl
add
jb
fs
lds
insb
xchg
xchg
add
mov
mov
aam
push
sub
inc
nop
fs
jecxz
mov
sbb
dec
jge
out
testl
sub
cs
xchg
inc
add
enter
dec
movsl
push
cmpsl
pop
xchg
push
jp
cmp
xchg
cmp
and
xor
inc
lods
inc
add
jl
jae
fbld
push
push
mov
cmp
sti
ljmp
test
jae
mov
or
xchg
cmp
in
bound
iret
push
push
idivb
je
dec
sub
jbe
jo
cltd
clc
and
shrb
dec
mov
idivb
or
inc
pop
pusha
outsl
fwait
push
pop
fdivs
not
mov
enter
mov
daa
loope
xor
mov
arpl
lods
cs
cmp
adc
pop
shlb
mov
orb
push
std
iret
insl
add
xchg
fs
inc
adc
lcall
rol
mov
mov
mov
aad
loop,pn
xchg
cmp
test
mov
mov
pop
inc
ret
enter
cmp
xorl
rolb
rcl
nop
push
jmp
sbb
jle
lock
and
cmp
out
mov
and
insb
in
ljmp
mov
push
inc
call
sti
rcrl
xlat
and
add
imul
js
push
out
call
mov
out
sbb
jne
jb
sbb
add
mov
lret
or
mov
int3
push
inc
jecxz
mov
sub
cmp
pushf
adcl
push
fucom
mov
sub
pop
popf
addb
imul
mov
push
pop
incl
lock
in
ss
cmpsl
inc
cmp
inc
push
sub
or
jbe
sbb
in
inc
push
fcomi
pop
mov
fnstenv
test
xor
jb
or
addb
sbb
mov
aam
and
mov
adc
fwait
addl
xor
ds
pop
mov
jl
stos
sub
sbb
push
rorl
push
loope
pop
in
bound
mov
psrlq
cmpb
push
cs
sbb
pop
ficompl
push
lods
adc
dec
enter
in
mov
mov
jl
pop
jmp
jnp
xlat
in
dec
pop
aam
ds
cmpsb
push
inc
add
sar
fcoml
xchg
fnstsw
push
shl
push
mov
insl
push
adc
push
push
and
orb
aad
je
xchg
dec
int3
xor
xor
sub
stos
leave
jl
or
stc
adc
jb
sbb
or
pop
pop
mov
cmpsl
int3
leave
adc
test
lret
cmpsb
jae
loope
push
loop
dec
gs
lock
xor
dec
movsb
fistps
cmp
dec
aaa
ja
imul
daa
outsb
mov
jle
add
fistps
into
jo
push
xlat
outsb
inc
mov
sarb
inc
stos
mov
aaa
btr
sbb
xor
int3
mov
xchg
lret
shlb
mov
pop
adc
jae
pop
lret
push
inc
out
int3
mov
mov
mov
leave
cmpsb
scas
icebp
std
push
sbb
mov
push
xchg
inc
stos
mov
xor
or
stos
push
pop
aad
push
xchg
aas
int
out
sub
push
jnp
leave
pop
fs
ja
cmp
fidivrl
mov
cmpl
pop
push
mov
xchg
jne
xlat
mov
xor
pop
cmc
xor
dec
or
mov
pop
sbb
arpl
jg
test
jo
xchg
sarb
or
xor
ret
out
loope
pop
into
sub
adc
adc
repz
push
sub
xor
int
call
jnp
shll
push
cwtl
mov
inc
dec
dec
xor
push
lods
filds
sub
jnp
add
inc
jnp
and
or
cltd
pop
fldt
xor
xlat
test
inc
push
dec
cmp
inc
pusha
test
popf
lods
jno
icebp
ficoms
lcall
mov
sbb
cwtl
jnp
sbb
out
arpl
cld
int3
ficompl
sarb
and
decb
push
xor
out
es
enter
mov
pop
push
xor
jmp
xor
jns
add
pop
jg
cmp
faddl
xchg
pop
sub
inc
out
push
into
repz
adc
xchg
xor
ret
ja
repz
lods
pop
stos
pop
nop
pop
ja
mov
xchg
inc
fs
push
mov
jle
iret
jmp
mov
xchg
sub
push
xchg
in
mov
mov
imul
adc
fisubl
lahf
pop
mov
push
and
xchg
fnsave
mov
jl
in
jmp
outsb
in
pop
xor
xlat
xor
fidivrs
andb
aam
mov
xchg
ja
lock
push
sbb
xor
imul
lcall
repz
pop
or
loop
std
mov
cli
popa
rolb
push
cmp
adc
repnz
mov
outsl
je
mov
cmp
out
mov
or
jne
pop
fwait
push
sti
mov
sbb
inc
mov
push
pop
leave
hlt
fistps
xchg
sbb
ret
push
xchg
add
add
xlat
mov
push
or
js
mov
mov
imul
sub
pop
orb
clc
cmp
sbb
pop
adc
incl
jnp
cmp
add
call
lret
mov
adc
je
cmpl
imul
nop
inc
adc
lods
iret
mov
fdivl
sub
int
fcoml
enter
test
sbb
call
daa
pop
mov
sarl
gs
xor
cmp
mov
clc
xorb
aam
or
test
push
packssdw
pop
mov
jmp
adc
das
or
add
mov
fchs
add
push
add
bound
ror
in
repnz
pop
dec
fcmove
and
push
out
cltd
scas
jnp
mov
cli
cli
push
data16
mov
out
lea
inc
cmp
sbb
imul
and
push
int3
sahf
cwtl
jnp
sub
push
lds
add
mov
std
sbb
pop
mov
jns
ds
cmp
sub
std
xlat
insb
xchg
xchg
fidivrl
je
and
xor
iret
xchg
mov
cmc
fdivr
aaa
sahf
into
repnz
fwait
jae
xchg
inc
ret
adc
push
xchg
inc
scas
xchg
inc
lret
sti
push
mov
ror
jne
inc
in
fidivrs
jo
dec
dec
pop
xor
jbe
aaa
mov
mov
inc
push
mov
mov
inc
pushf
mov
call
and
mov
shl
jbe
pop
pop
add
jo
scas
cmp
xchg
xor
mov
sbb
hlt
push
cmc
xor
cltd
aas
push
jae
push
xchg
push
mov
mov
jno
idivl
lret
jo
stos
into
and
xor
imul
cltd
sub
push
ret
cmp
dec
orl
outsl
sbb
mov
mov
and
pop
pop
scas
rcr
stos
xor
fsubrl
inc
in
cmp
shll
cmp
push
push
pop
add
cmp
aas
loopne
fnstenv
shrb
and
add
jle
roll
xchg
fadds
std
je
mov
push
lahf
mov
mov
push
lea
aaa
into
jae
pop
dec
push
mov
loopne
popa
push
mov
fcoml
daa
lods
xchg
pop
je
lcall
mov
xchg
push
movsl
mov
rcrb
fisubs
push
cmp
xchg
imul
mov
cltd
adcl
sub
test
std
leavew
test
out
sbb
cltd
sbb
icebp
add
add
xor
pop
into
xchg
loopne
rcr
mov
mov
or
mov
jg
adc
xchg
mov
pop
clc
inc
lods
int3
and
add
push
inc
mov
shrb
setg
cmp
jne
adc
fwait
je
xchg
mov
lahf
inc
pop
je
sub
pop
dec
add
imul
pop
add
pop
outsl
dec
aas
movsl
shlb
shl
aas
fwait
cmpsb
ds
shrb
xchg
sti
js
divl
lret
pusha
cmp
ret
fdivrl
shrl
jp
jge
mov
daa
dec
xchg
ret
movsb
cmp
sub
sub
sbb
mov
inc
mov
dec
xchg
popa
push
shlb
sbb
sbb
adc
jb
fldpi
aam
scas
sti
repnz
in
cmp
xor
into
mov
repz
push
mov
test
add
jbe
clc
add
scas
repz
out
andb
xchg
mov
int
pop
lahf
mov
sub
popa
out
stos
in
mov
jge
xchg
add
and
mov
add
xchg
jb
xchg
mov
sbb
jl
push
fcmovne
arpl
lret
fnstenv
decb
mov
mov
out
fwait
jmp
je
xlat
pop
sbb
lret
ror
mov
mov
cltd
push
push
test
ss
pop
std
roll
mov
inc
cmp
jmp
mov
cs
jecxz
ljmp
adc
sbb
fwait
xlat
inc
hlt
and
inc
and
icebp
dec
loopne
fistpl
cld
xor
add
mov
mov
jae
pop
dec
inc
xchg
add
and
mov
movswl
mov
or
test
faddl
add
adc
fidivl
jns
cmpsl
xchg
xor
insl
iret
jmp
scas
xchg
add
in
and
imul
popf
out
scas
and
outsb
sub
adc
adc
shrl
daa
cmp
rol
add
jbe
sqrtps
mov
cmp
test
mov
in
iret
pushf
data16
adc
jbe
rclb
pop
fidivrl
into
scas
push
xchg
and
mov
data16
inc
data16
jp
cs
cmp
sbbl
adcl
xor
mov
and
daa
jbe
ds
cmp
dec
ljmp
mov
add
mov
pop
pop
cmpsl
rolb
mov
push
mov
dec
test
int3
and
fisttpll
pop
in
outsb
shrl
xchg
pop
jp,pn
out
and
cltd
cli
ljmp
mov
popa
or
sarl
xor
inc
loopne
cmpsl
sahf
push
dec
sbb
push
rolb
push
mov
leave
out
jmp
es
add
push
shrl
push
mov
xchg
out
mull
inc
lcall
mov
loop
mov
sbb
inc
rol
mov
repz
out
pop
incl
lea
daa
and
es
decl
pop
ret
mov
cmp
mov
stos
adc
xchg
add
pop
dec
out
insl
mov
adc
aad
cmc
push
loope,pn
int
iret
mov
xchg
enter
mov
mov
dec
push
repz
adc
movsb
mov
js
push
clc
popf
xchg
out
xor
sahf
cli
inc
cmp
and
lret
addr16
and
jle
and
cmp
out
mov
insl
loop
cmp
js
mov
cmp
dec
pop
jecxz
pusha
mov
inc
cmovnp
jnp
imul
in
lar
ficomps
push
jo
mov
arpl
push
daa
mov
cmp
add
dec
lds
scas
push
cmpsb
mov
hlt
mulb
mov
out
stos
jbe
pop
mov
inc
adc
sub
inc
jmp
cmp
push
out
mov
adc
push
rcll
jp
int
sub
bound
in
clc
mov
rorb
mov
fdivrl
je
mov
and
push
and
fucomi
dec
fcmovnb
gs
push
cmp
jge
mov
lcall
jg
pusha
xor
movntq
fucomp
push
jnp
push
rolb
das
in
flds
outsl
ja
and
int
mov
mov
dec
andl
test
xchg
mov
pop
or
or
fldpi
test
ljmp
sbb
je
pop
sbb
fxam
hlt
mov
cmpsb
pop
push
jl
outsb
adc
jl
sub
std
ret
outsl
dec
push
jmp
jmp
xor
dec
addb
cmp
lds
pop
arpl
push
dec
lock
xchg
mov
pop
je
int3
loopne
cwtl
test
pop
ret
pop
scas
push
lock
cmp
mov
dec
push
loopne
popf
call
in
push
cwtl
mov
int
push
jb
xchg
mov
jle
push
pop
xor
sub
inc
insb
dec
cli
cmc
jecxz
int
push
popf
jne
sub
or
fisubrl
rcll
aad
cmp
fcmovne
sbb
adc
jne
cli
fcmovbe
push
inc
mov
inc
mov
aaa
hlt
xchg
cmp
jp
or
cld
dec
and
or
push
adc
xchg
jl
test
jge
ljmp
scas
fnstsw
mov
outsl
mov
test
mov
iret
sub
iret
mov
push
xor
adc
adcl
ret
lock
add
sbb
pop
ds
dec
cmp
sub
jmp
add
jg
inc
push
xor
jae
push
iret
lret
xor
popf
push
lds
mov
dec
push
pop
out
or
pop
cmp
and
pop
inc
mov
dec
insl
cmp
lea
pop
jo
cltd
cmp
jo
lea
shlb
sub
daa
mov
aam
movsl
mov
popf
lds
repz
jne
shll
xchg
insl
mov
add
and
jmp
incb
ds
jle
test
jb
cmpsl
mov
jno
add
movsb
mov
outsl
lds
stos
sar
jbe
xchg
hlt
lods
into
aas
or
push
mov
sub
test
loope
mov
push
push
sbb
sbb
lods
pusha
cmp
out
cli
push
fdivr
ret
inc
mull
xchg
jbe
aaa
int3
mov
cwtl
movsb
cmp
sub
mov
loope
clc
add
cs
mov
or
cmp
pushf
sbb
sub
cltd
or
xor
bound
aaa
cmpsb
mov
xchg
mov
std
jnp
inc
mov
das
xchg
adc
nop
mov
sbb
clc
xor
jnp
mov
dec
lods
pushf
xchg
aaa
push
pop
sub
mov
ret
jae
popf
pusha
fstpl
and
sub
popf
mov
lods
jp
mov
subl
jo,pn
mov
dec
pop
lret
loopne
cmp
jb
mov
ljmp
imul
and
roll
and
xor
subl
inc
push
mov
das
repnz
push
iret
pusha
loop
push
in
aas
imul
and
aaa
adc
test
and
rorb
mov
es
sahf
add
jae
sub
pop
cmp
xor
inc
jns
xor
pop
sbb
xor
dec
xor
cmc
inc
nop
cmp
jbe
test
fwait
test
testl
fisubs
movsl
adc
push
jmp
or
jle
lahf
or
fnstsw
outsl
dec
xchg
cli
mov
hlt
xchg
mov
mov
push
push
and
or
aas
insb
push
inc
jge
xchg
cmp
or
subl
imul
inc
rcll
mov
popa
cmp
les
mov
int
stos
jns
incl
and
mov
out
loope
inc
mov
mov
sub
cli
lods
loopne
out
unpckhps
insl
inc
xor
push
nop
pop
mov
dec
pop
int
or
cwtl
movsl
or
stc
decb
mov
dec
sarb
add
shll
pop
mov
add
mov
fisubl
andl
ljmp
adc
jmp
dec
adc
stc
aam
xlat
in
iret
data16
push
mov
jb
jmp
mov
fs
sbb
cmp
push
push
loope
mov
adc
jae
mov
inc
in
jb
fs
in
in
adc
fwait
sti
jo
aas
loop
shlb
imul
dec
xchg
jmp
mov
std
jp
fadds
push
std
cmpsb
cmp
fwait
push
or
jne
aaa
add
xor
addb
repnz
cmc
je
cmp
fcompl
ljmp
addr16
cmpl
test
lock
cmpxchg
xchg
mov
sbb
stos
xor
dec
pop
lcall
adcl
out
jo,pt
daa
cmp
lods
adc
push
out
shrl
jae
das
jl
mov
add
pop
push
sub
sbb
ja
mov
push
or
dec
lcall
cmpsb
nop
pop
cld
mov
inc
adc
push
sarl
shlb
sub
lock
push
aam
pop
popf
lock
gs
enter
mov
addr16
sub
pop
ss
dec
xlat
dec
xor
sbb
int3
cmp
xor
stos
les
out
push
les
jb
ss
es
fistps
cmp
cmp
shlb
xor
xchg
cli
push
mov
es
mov
jg
mov
pop
pushf
int
jecxz
das
mov
lret
inc
mov
add
icebp
push
in
inc
push
imul
jmp
xchg
cmp
mov
jg
addb
xor
add
push
cmp
and
enter
xchg
push
ffree
xor
outsl
fcmovne
mov
imul
jmp
scas
push
mov
cmpsb
mov
jg
pop
xchg
xlat
cmc
cltd
push
jge
pop
stc
add
gs
stc
jb
sti
jmp
mov
mov
add
xor
aaa
je
cltd
jmp
int3
cmp
inc
in
stos
pop
pop
ror
stos
jo
jge
jecxz
jmp
ljmp
sbb
loope
dec
xchg
sub
test
hlt
fldenv
push
pop
ficoml
or
mov
sbb
popf
lods
loop
push
fsubrl
imul
aad
int
cmpsb
scas
icebp
hlt
sub
jmp
fsubrs
cmp
jle
push
lahf
or
mov
adc
outsb
cmp
stc
pop
xchg
adc
jae
mov
jge
dec
decl
jb
ljmp
inc
pop
cmc
test
popf
mov
cmpl
dec
stos
fcomi
movsb
jo
mov
add
cltd
das
or
shll
leave
test
out
add
in
test
cmp
movsl
rcl
notl
test
push
add
loop
dec
jne
movsb
aas
pop
xchg
jno
fists
cmp
test
into
xor
call
enter
xchg
out
cwtl
cs
jbe
pop
out
inc
sbb
ds
or
dec
loop
ljmp
sbb
je
xchg
out
ljmp
jle
mov
clc
sbb
or
stos
mov
cmp
or
fwait
div
ret
mov
mov
add
sbb
js
lods
aam
jae
js
mov
mov
dec
sti
call
sub
mov
dec
push
lret
popa
insb
and
xor
lods
mov
int
mov
or
leave
xor
push
jns
pop
mov
mov
clc
aas
push
push
ffree
sbb
jecxz
orb
ja
into
push
fldt
shlb
sbb
test
arpl
int
xlat
stc
pop
sti
enter
jnp
movsb
in
fistpl
pop
mov
pop
jle
icebp
adc
xlat
push
ret
add
pushl
add
and
insb
pop
jno
stos
sbb
xchg
push
std
jle
dec
cmp
sbb
inc
mov
cmp
call
or
mov
fstps
push
gs
sub
pop
out
mov
pop
jl
sti
rdtsc
and
mov
shll
scas
jo
clc
sbb
jp
mov
mov
sub
test
int3
jne
imul
mov
lret
arpl
in
daa
int
sti
insb
in
mov
adc
fistpl
ds
pop
out
mov
push
loopne
sbb
push
mov
push
lods
jecxz
std
dec
in
in
and
jmp
test
icebp
ds
adcl
int3
data16
in
jg
das
mov
sbb
imul
movsl
packuswb
cmp
adc
clc
xor
repz
fdivrs
lret
orl
mov
lods
cli
push
cld
imul
lock
in
jne
scas
dec
lods
movsl
dec
ret
cmp
pop
or
xlat
and
sbb
rolb
inc
cwtl
pop
xor
fdivrl
mov
push
add
int
add
or
pop
cld
test
or
sub
arpl
ja
sub
cmc
call
dec
xlat
pushl
push
mov
pop
inc
xor
rcll
dec
aas
inc
mov
jmp
aas
idiv
ja
jecxz
into
jecxz
lahf
jl
and
imull
pop
jecxz
iret
lret
daa
es
icebp
pop
lret
sbb
sbb
mov
std
into
call
xchg
ret
mov
sub
inc
ja,pn
add
or
cmp
mov
jg
adc
scas
stos
sarl
call
jge
cmp
sbb
pop
pop
shlb
outsl
dec
jp
enter
mov
repnz
addb
int3
mov
cmp
push
les
xchg
cmpsl
popa
and
hlt
aam
pop
adc
xchg
cmp
mov
popa
out
jne
jge
jp
enter
sub
frstor
jmp
lea
add
negl
jp
cmp
xor
push
ja
mov
imul
mov
sbb
xor
adc
bound
rclb
and
mov
dec
pop
jle
in
mov
xor
xor
inc
in
popf
aad
js
ljmp
cmp
jno
add
inc
push
or
out
cmp
clc
inc
jb
lret
add
imul
sbb
push
or
mov
ss
cmp
mov
int
and
repz
add
or
bound
cltd
mov
pop
sub
mov
xchg
nop
sbb
xchg
mov
jl
lds
movsl
jecxz
inc
xor
scas
test
sub
add
inc
jbe
mov
outsb
and
lcall
mov
sub
cmp
mov
out
mov
shrl
scas
mov
jle
mov
mov
rolb
cmp
enter
out
enter
mov
jp
jo
mov
std
cmp
nop
ja
add
stc
mov
cwtl
fs
aad
jg
repz
cmp
addb
mov
sbb
cmp
adc
or
pop
jno
pop
xor
popf
jle
jg
out
addr16
sbb
add
frstor
rclb
jne
mov
in
gs
add
xchg
xor
adc
inc
into
inc
mov
fadds
inc
cmp
fisubl
sbb
aas
data16
lret
sub
mov
sti
es
shlb
push
loope
cli
into
in
jb
outsb
pop
addr16
fwait
push
lods
mov
dec
rorl
lahf
aam
fs
lods
mov
mov
int
fsubrs
rcrb
push
outsb
enter
and
shrb
repnz
mov
arpl
test
in
mov
loop
xor
das
or
cli
mov
xor
sbb
out
mov
std
fcom
filds
jecxz
xchg
loopne
xor
xchg
push
cmpsb
mov
sarb
jb
mov
sbb
fisttps
hlt
inc
jmp
xlat
sarl
subl
push
loopne
ret
mov
add
jnp
enter
push
mov
ds
clc
jae
pop
arpl
pop
mov
xor
lods
popf
int
imul
and
push
push
cmp
pusha
jl
or
cmpsb
jnp
mov
pop
mov
aas
push
loope
pop
std
inc
sbb
bound
ret
das
insl
sub
sbb
sbb
and
cvttps2pi
mov
push
cmp
dec
dec
or
fdivp
mov
je
int
pop
ss
std
jp
xchg
fmul
pop
sbb
add
dec
and
insb
fidivs
xor
rcll
mov
push
push
pop
in
push
and
jmp
aas
cmp
mov
sub
cmc
fiadds
push
rol
cmp
xor
imull
push
jns
div
mov
sbb
xor
scas
dec
imul
loop
jle
sub
imul
lahf
in
adc
fadds
fs
jno
dec
test
stos
imul
xchg
adc
sub
sahf
dec
jl
lcall
lea
repnz
sub
add
adc
fldcw
mov
dec
rep
inc
jbe
push
lods
lods
cs
pop
call
cmp
xchg
dec
inc
cmpsl
dec
lcall
mov
out
mov
xchg
js
cli
pop
push
rolb
mov
aad
jecxz
sub
sub
dec
pusha
shl
loop
scas
int3
rcr
cs
xor
icebp
dec
or
inc
daa
sub
pushfw
mov
lods
sub
push
ss
cmc
xor
sub
inc
aam
inc
xchg
adc
mov
add
ds
cs
repz
inc
call
xchg
mov
pop
outsl
sarl
out
mov
lds
shr
mov
adc
cmc
mov
je
jp
in
xor
pop
in
aas
movsl
mov
push
inc
cmp
or
add
in
adc
jbe
into
xchg
cmp
mov
loopne
jmp
cmpl
pop
xor
and
inc
pop
popf
fstl
jno
fisttpll
adcb
pop
fidivl
xor
aad
outsb
js
aam
mov
popf
jecxz
add
out
push
repz
jno
movsb
ret
push
jp
xchg
adc
mov
in
push
pop
iret
pushf
cwtl
shrl
test
pop
outsl
jmp
je
and
mov
aad
ret
pop
cmp
jp
mov
jg
fmuls
mov
in
fcmovne
gs
movsl
cli
jecxz
xchg
adc
add
cmp
cmpsl
xchg
ret
jmp
mov
sub
mov
pop
not
test
and
mov
adc
pop
jno
ret
out
dec
cli
call
out
test
movsl
test
lret
jp
ret
aaa
xor
nop
and
jle
mov
xchg
addb
sub
sbb
test
dec
addr16
pop
or
in
popf
push
lret
aad
repz
mov
adc
lret
lret
mov
xor
loop
mov
xchg
imul
sub
push
lea
call
loopne
outsb
mov
leave
pop
jnp
mov
fisttpll
push
call
lea
int3
add
xchg
ss
xor
cmp
je
andl
cli
nop
test
jle
mov
push
int
mov
sbb
sub
and
pop
mov
insl
test
adc
insb
fnstsw
lret
lret
test
sbb
xor
sub
lret
xorb
cmp
ficoml
jne
cs
cmpsl
add
push
mov
rcr
jmp
jg
mov
jno
sub
shrb
out
jne
pop
in
mov
lds
jg
in
inc
cmc
insb
rcrb
fadd
cmp
jp
xchg
or
pop
mov
das
add
fstl
sub
test
cltd
lahf
sub
sub
mov
dec
adc
cmp
mov
inc
push
mov
mov
mov
push
scas
xor
jecxz
sbb
dec
lods
ficompl
or
cmc
out
test
push
add
jp
inc
pop
xchg
push
or
jge
cmp
test
pop
aam
push
add
loope
xlat
xchg
jbe
mov
arpl
je
icebp
and
shrb
mov
dec
adc
pop
fsts
popa
add
sbb
dec
out
mov
divl
inc
icebp
lret
outsl
xchg
mov
xor
pop
mov
xchg
inc
cmp
mov
ret
cld
or
inc
xchg
cli
mov
dec
push
mov
jmp
fstl
shll
lcall
out
repnz
jnp
cli
cwtl
sub
iret
out
sub
adc
jo
fnstsw
int3
lods
add
scas
mov
leave
xor
data16
lock
sub
cmp
nop
xor
enter
jle
mov
bound
lahf
daa
lret
xchg
insl
push
les
shrb
fimull
js
call
or
xorb
or
or
adc
add
xchg
insl
xchg
test
add
jecxz
cmc
pop
sub
xchg
and
data16
cwtl
jae
out
adc
xchg
mov
enter
xchg
xchg
movsb
mov
js
inc
cs
ja
push
lods
fdivl
in
mov
movsl
in
pop
mov
pop
xchg
sub
orl
push
jo
scas
mov
je
inc
popl
jns
sub
push
rol
mov
lea
int
mov
and
in
call
test
popf
inc
push
adc
fistps
in
push
dec
inc
mov
and
xchg
orl
cltd
pop
inc
push
push
xor
arpl
sub
orl
mov
push
in
out
and
and
and
xor
aam
les
push
or
in
pop
nop
gs
jns
and
sbb
adc
xor
aad
mov
xor
mov
or
xchg
imul
mov
lret
test
jmp
sbb
fisubl
sbb
in
jnp
popa
movsb
cld
popa
inc
shll
inc
aas
dec
cs
outsb
jno
gs
push
mov
and
stos
in
mov
incb
push
pop
sub
add
fistps
cwtl
rol
push
xrelease
gs
mov
mov
mov
mov
inc
adc
mov
or
cmp
pop
xchg
add
daa
inc
pusha
dec
push
mov
fnsave
testb
shl
pop
mov
insl
and
inc
orl
movsl
rcrl
add
adc
jbe
mov
inc
nop
and
mov
fscale
les
stos
nop
scas
fdivl
push
adc
adc
into
xor
fadd
in
fstpt
fcmovnb
pop
fs
sbb
repnz
xchg
sahf
lahf
lahf
mov
adc
dec
je
mov
lock
mov
lahf
sbb
insb
into
fldl
data16
ss
and
push
repz
mov
inc
sarl
adc
shlb
stos
gs
pop
mov
shlb
fldcw
pop
push
adc
addr16
iret
insb
mov
mulb
cmp
out
mov
mov
push
je
pop
leave
xor
in
dec
enter
bound
hlt
xchg
mov
js
iret
mulb
hlt
xor
and
mov
mov
jne
outsb
iret
mov
xchg
mov
inc
icebp
dec
int
xchg
mov
add
mov
cmp
xor
mov
arpl
es
movntq
out
mov
sbbb
outsl
pusha
cli
scas
pop
andb
insl
lea
testb
jbe
sub
js
test
dec
push
pushf
push
js
repz
lret
sbb
or
add
sarl
mov
in
pop
jp
add
mov
popf
sbb
gs
mov
add
pop
sbb
pushf
dec
lahf
insb
ja
add
std
and
jmp
sahf
mov
push
push
into
mov
data16
lcall
in
xlat
enter
jb
pop
pop
fiadds
cltd
ret
fadd
pop
and
repnz
cltd
mov
icebp
jl
adc
ja
dec
jb
push
dec
in
repnz
outsb
mov
fcmovne
inc
xor
push
testb
bound
add
cmp
sbb
mov
fistps
push
arpl
cmc
add
xor
movsl
pushl
sbb
lods
movsl
dec
xor
imul
stos
pop
aad
insb
xchg
push
and
mov
inc
jno
bound
lea
div
loope
push
cmp
shr
js
xor
mov
int3
cli
outsl
dec
loopne
sub
inc
xchg
add
adc
jp
mov
icebp
push
es
addr16
or
fadds
push
daa
daa
dec
test
cltd
adc
frstor
sub
in
iret
mov
push
mov
sub
mov
and
push
arpl
push
lret
or
repnz
popa
add
or
pop
popf
ficoml
mov
roll
add
push
and
out
call
add
loope
push
xchg
mov
and
int3
sub
test
ror
or
dec
mov
sti
pop
icebp
test
shlb
pop
repnz
loop
mov
in
jb
sub
push
mov
ffreep
dec
fwait
add
inc
cmpsb
push
dec
arpl
pop
repz
nopl
loop
dec
push
mov
sbb
xor
stos
pop
es
sbb
mov
in
pop
test
enter
xchg
inc
add
jo
addl
in
std
enter
mov
aas
pop
mov
daa
mov
push
cmp
lahf
test
xchg
lret
mov
sbb
call
and
into
popf
mov
and
shl
popf
sbb
jmp
sub
jnp
pop
mov
out
daa
out
std
cmp
inc
xor
or
out
pop
sub
add
xor
xchg
mov
xor
popf
cmp
mov
leave
push
fldcw
and
movsb
out
stos
iret
jge
dec
inc
insb
xchg
test
cwtl
roll
insl
pop
popa
cltd
mov
sbb
shlb
jae
push
ds
mov
lock
mov
addr16
adc
je
mov
notb
jmp
jb
push
ljmp
outsb
adc
add
and
imul
pop
sbb
push
sbb
sub
push
fbstp
in
cs
jbe
les
cwtl
or
cmpsb
jg
mov
push
decb
and
mov
cmpsl
mov
fldcw
iret
ss
into
loop
into
pop
ss
inc
inc
adc
clc
iret
cli
loope
test
scas
add
adc
jecxz
fimull
int3
ja
cwtl
mov
dec
call
test
in
outsl
inc
jp
dec
sbb
ss
incb
xchg
add
cmp
cmp
and
orb
iret
xchg
mov
enter
mov
sbb
enter
lret
adc
jmp
lret
daa
or
fs
jmp
stos
lret
add
test
fdivrp
sub
insb
pop
sub
loop
sub
adc
mov
add
cld
push
insb
push
push
loope
mov
mov
cmp
cmc
aad
jo
dec
push
ljmp
loopne
enter
mov
in
sti
out
sub
push
std
sarb
sbb
rcrl
push
xchg
sub
jo
xor
daa
adc
ret
clc
loope
mov
mov
jle
inc
es
xchg
add
mov
fcom
fmuls
sbb
fmull
adc
pop
call
aam
xor
inc
out
or
inc
popa
push
adc
adc
push
or
pop
jb
lahf
repnz
outsb
pop
out
sub
pop
rcl
ror
movsl
test
mov
xchg
push
in
lods
mov
sarb
repnz
pop
ja
je
ret
mov
mov
dec
fwait
cwtl
movsb
inc
mov
cmp
mov
push
cmc
mov
sbb
push
rcr
rcll
cmc
sub
les
cmp
mov
mov
fcoms
outsl
push
push
arpl
ret
cs
jo
adcl
pushf
dec
jecxz
mov
inc
cmp
xchg
and
dec
loopne
pop
pusha
bound
jbe
clc
test
dec
decl
push
pop
aad
es
psubusb
mov
add
push
dec
lods
push
sub
data16
mov
out
insb
call
cli
nop
or
aas
adc
loopne
push
fst
jo
shrl
jno
lahf
cmp
pop
aam
sbb
adc
mov
xchg
mov
loop
cmp
clc
ljmp
test
sub
in
sahf
dec
jno
mov
xchg
adc
dec
fdivl
pop
push
sub
mov
pusha
push
lcall
fsubrp
pop
xchg
push
dec
push
nop
xchg
jo
decb
push
lret
xor
dec
clts
loopne
aam
cltd
inc
mov
push
out
pusha
movsb
xchg
xchg
mov
pop
push
movsb
xor
ret
imulb
sbb
outsb
mov
pop
push
int
sbb
pop
fdivrl
mov
or
mov
aaa
outsb
push
or
dec
insl
sbb
stos
dec
lret
loopne
mov
fstpt
cmp
scas
in
mov
sub
ja
sub
xchg
jnp
add
int
cmp
cli
mov
jo
jmp
aaa
or
in
fsub
jge
and
loopne
lcall
push
nop
xchg
sbb
sbb
mov
or
and
in
insb
sub
test
test
call
push
fsub
loopne
cmp
ret
paddb
lahf
jge
call
incl
sbb
mov
popa
inc
mov
not
inc
sub
ffreep
push
fnstsw
and
xchg
es
sub
jnp
sub
mov
cli
xlat
cmp
mov
fidivs
jnp
out
rorb
repnz
mov
std
mov
hlt
into
pop
dec
xor
cltd
sbb
fcomp
lods
clc
fwait
out
lods
pop
mov
pusha
sahf
outsl
pop
inc
rcll
mov
mov
shr
cmpsl
sbb
int
mov
in
pop
inc
stos
pushf
mov
sbb
out
aad
and
push
icebp
in
mov
lock
imulb
mov
add
dec
add
sbb
mov
mov
mov
fsubs
mov
dec
clc
std
push
aaa
pusha
push
jne
jl
cmp
xlat
cmp
add
in
or
fwait
lock
xor
gs
mov
test
mov
lret
add
mov
shll
adc
lea
movsl
cwtl
and
dec
add
mov
add
push
outsl
add
mov
js,pt
mov
or
in
into
mov
push
push
mov
adcb
aas
shrl
sbb
scas
sbb
les
gs
faddl
data16
push
test
mov
data16
pop
dec
out
lret
xchg
sbb
test
sub
mov
popa
imul
or
push
out
dec
sub
lahf
pop
dec
popf
ja
in
mov
inc
pushf
push
sarb
mov
inc
ja
or
jmp
fs
cli
inc
mov
dec
scas
pcmpgtd
inc
iret
jle
jmp
lcall
cmp
enter
mov
scas
push
in
lcall
mov
insl
adc
xor
insl
mov
mov
movsb
pop
and
movsl
sbb
testb
ljmp
adc
adc
cwtl
js
cmp
aas
inc
cmp
mov
cmpsl
iret
sub
ljmp
fldenv
push
pop
jmp
and
testl
in
push
lock
ficomps
pop
pop
lods
adc
xor
mov
sbb
push
adc
sbb
mov
sbb
push
mov
dec
popf
lea
and
push
test
mov
pusha
in
jle
pushf
int3
into
dec
outsb
jns
mov
push
movsl
pop
sub
std
or
mov
mov
or
fdivp
sbb
ficompl
inc
jno,pt
adc
jp
ss
fdivl
fwait
adc
gs
sub
movsb
sub
sbb
mov
push
jl
fs
sbb
push
push
xor
jg
jmp
gs
or
inc
lds
mov
aaa
xchg
dec
push
xor
or
xor
jl
jg
lods
test
fidivrs
sub
sbb
mov
ret
mov
xchg
add
fs
insb
cmp
mov
or
sub
scas
popf
lock
ja
sbb
and
lret
pop
push
push
mov
rolb
add
sub
aas
pop
fistpll
pop
jno
mov
pop
lods
jmp
pop
push
sub
push
add
xor
adc
jmp
dec
add
push
enter
in
or
sub
jle
pop
cmp
mov
mov
cmp
dec
test
xor
and
mov
movzbl
jge
scas
hlt
dec
mov
fwait
xchg
int3
cli
pop
mov
lea
push
stos
daa
adc
fnsave
in
clc
inc
sub
inc
cmpsb
sbb
xchg
sbb
fwait
popa
test
rol
lret
and
push
mov
add
fstpt
mov
mov
mov
jp
lcall
mov
inc
dec
sub
cmp
push
lret
pop
cmp
int
sub
push
pop
cmp
fisubrl
sahf
rorl
mov
bound
rolb
pop
mul
xchg
dec
test
repnz
push
stos
adc
xor
popf
adc
dec
add
aaa
jmp
outsb
mov
jae
out
ja
pop
mov
fwait
cld
notl
push
fcmovnu
mov
inc
xchg
sbb
dec
xchg
and
add
cmp
mov
mov
cwtl
xchg
and
iret
in
mov
jo
fsubl
or
cmp
mov
dec
xor
loop
add
cmp
mov
cs
cli
jnp
stc
inc
xor
popf
push
or
xor
mov
push
sbb
idivb
jl
sbb
test
pop
pop
movsl
cli
push
xor
fwait
pop
inc
stos
ss
xor
push
std
mov
mov
cmp
lea
dec
dec
mov
movsb
lds
imul
push
jp
jl
daa
lods
testl
lret
jg
ljmp
mov
fadds
cmp
dec
add
daa
xor
loopne
xor
rolb
add
xor
out
mov
pop
pop
xor
jbe
pop
sbb
aaa
adc
insb
lahf
push
fyl2xp1
inc
inc
or
xchg
pushf
adc
les
scas
dec
sub
jle
push
adc
dec
push
push
ds
sbb
notb
loope
loopne
arpl
rclb
leave
xchg
jmp
push
gs
test
push
jo
xchg
repz
gs
jp
sbb
add
and
jae
sbb
rolb
sbb
or
test
out
inc
scas
out
xlat
mov
fmulp
loop
pop
or
push
scas
das
push
fisubrs
xor
mov
push
stos
and
sbb
lcall
sub
mov
into
xchg
daa
mov
adcb
jecxz
add
lods
int3
js
loopne
decl
cmp
cltd
sub
mov
sub
xchg
push
mov
jecxz
cmp
dec
clc
clc
mov
push
cmp
scas
rcll
addr16
pop
les
aaa
setge
ds
enter
std
adc
stc
jns
loope
pushl
es
lods
rep
in
dec
dec
sub
mov
in
mov
stos
insl
and
cmpsb
scas
ljmp
je
mul
mov
pop
mov
sbb
pop
sub
pop
jmp
xchg
ds
push
and
dec
insb
lea
adc
jl
loope
testl
jne
mov
std
enter
cmp
add
popf
jne
nop
or
xchg
pop
push
xchg
push
push
add
pop
inc
or
xor
jae
stos
cmp
add
lock
sub
cmp
add
clc
mov
out
inc
mov
cmp
daa
mov
jg
ret
mov
dec
leave
test
clc
shlb
cmc
pop
inc
or
or
pop
clc
inc
or
sbb
addb
stc
mov
popl
mov
add
mov
loopne
jg
push
repz
mov
sbb
fistpl
aam
lcall
negl
xor
add
stos
insb
ja
push
dec
popf
cmp
scas
mov
pushw
pop
cmpsb
out
push
roll
ret
cli
arpl
push
mov
mov
push
mov
jnp
adc
mov
xchg
fucom
cld
lods
pushf
jp
push
push
enter
lcall
xorb
dec
ja
mov
lahf
mul
fbld
das
out
or
test
loop
push
dec
lock
cmpsb
jecxz
mov
inc
or
mov
add
xchg
scas
inc
fadds
loop
dec
jbe
and
fistpll
mov
push
xor
add
cwtl
cmp
push
mov
and
push
std
out
pop
dec
movsl
dec
int
lds
pop
rcll
cli
push
scas
cmpsb
mov
call
xchg
pushf
mov
out
push
je
insb
std
hlt
cmp
cmp
jno
or
out
jae
pop
sub
test
and
add
or
mov
notb
imull
sbb
xchg
fsubr
sub
xor
xchg
cmp
pop
mov
loopne
sbb
or
sbb
mov
jb
imul
in
lahf
sbb
pop
repnz
pop
inc
pop
in
outsb
xor
cmp
mov
pop
inc
jp
loop
mov
push
push
mov
sub
mov
sub
fnstenv
enter
xlat
pop
mov
cld
push
loop
insb
fldt
push
int
enter
test
xor
or
je
jmp
cmpsb
arpl
std
sub
int
push
loop
mov
hlt
sub
xchg
mov
adc
arpl
jmp
data16
xchg
repz
mov
pop
mov
mov
or
mov
mov
sarl
mov
fisttpl
cs
insb
pop
sub
sub
lea
sbb
pop
push
cwtl
jo
push
pop
pop
arpl
cmp
mov
outsl
adc
pop
mov
xchg
add
push
push
mov
outsl
adc
mov
jge
jp
add
jp
xchg
scas
hlt
pop
loope
aaa
inc
cmc
sbb
jle
aad
push
mov
mov
js
nop
rcll
cmc
push
push
cmp
fwait
jl
pop
and
jp
add
mov
in
sub
shll
sub
in
mov
sub
fs
mov
int
or
icebp
lret
scas
mov
pop
cmp
daa
lahf
cmp
aaa
adc
clc
xchg
cli
inc
rcll
mov
mov
inc
dec
mov
testl
and
jae
fwait
push
rcl
cmp
movsb
stos
enter
mov
shlb
ljmp
aam
push
mov
in
xlat
dec
jmp
mov
or
mov
push
adc
lcall
std
fdiv
sbb
sub
daa
je
std
push
stc
cmp
lds
xchg
xchg
mov
push
xchg
lods
test
loope
jmp
jecxz
cmp
cmpsb
out
in
sub
push
adc
movsb
lods
mov
push
cwtl
ljmp
sbb
cltd
pop
dec
ret
pop
add
icebp
push
mov
scas
push
cli
mov
mov
testl
jne
cltd
jge
lods
dec
jge
mov
std
sub
les
dec
and
popf
cmp
adcb
or
sub
pop
sub
and
sbb
lret
sbb
mov
outsb
int
sbb
cmp
push
popa
push
dec
and
sarb
jae
pop
push
cmp
out
dec
xchg
inc
pop
popf
lcall
push
push
adc
or
jae
sbb
sub
hlt
mov
repz
stos
dec
dec
into
scas
outsb
fistpl
insl
div
xchg
and
mull
jne
nop
push
into
sub
imul
pop
jmp
xchg
push
jbe
push
popf
adc
sarb
aam
rclb
xchg
sbb
mov
clc
mov
jbe
insb
fs
mov
daa
adc
jnp
add
mov
rcl
mov
sbb
or
hlt
add
test
lock
mov
shlb
cli
pusha
jg
jmp
sar
fwait
repnz
push
push
mov
in
sbb
fs
adc
cmp
in
lret
leave
mov
jnp
ljmp
inc
or
lcall
popa
dec
ret
cmp
push
sub
imul
and
pop
cmpl
jle
loopne
mov
addl
shrb
add
aaa
pop
mov
insl
ja
jns
sub
sbb
dec
dec
and
mov
xor
lahf
pop
out
cmpsb
pcmpgtd
cli
push
push
filds
dec
push
mov
jp
cmc
xor
mov
popf
jecxz
insl
js
inc
popa
insb
cld
lods
mov
or
sub
add
int3
push
andl
popa
mov
pop
lret
xlat
xor
test
add
cmpsl
cmp
test
dec
shlb
ret
jmp
sub
pop
imul
movsl
push
into
pop
fnstcw
insb
mov
push
roll
mov
mov
jo
out
xor
imul
jbe
jp
mov
mov
hlt
sub
and
xchg
xlat
pop
adc
jl
mov
inc
mov
add
mov
push
clc
or
into
jmp
fmull
inc
push
hlt
xchg
mov
mov
mov
fisttpl
fdivrs
aam
inc
pop
movsl
pop
sbb
and
mov
lcall
inc
sbb
int3
lahf
inc
xor
xor
pop
push
shrl
cli
gs
pop
fcompl
adc
aas
or
ljmp
jns
pop
sbb
loope
in
aad
and
sbb
adc
bound
cmova
iret
repnz
cwtl
ss
lods
or
fbld
aam
pushaw
push
sbb
mov
mov
mov
push
push
inc
ret
ja
nop
ret
ljmp
adc
iret
test
sarb
xor
inc
or
xchg
and
insb
test
mov
xchg
aad
fisttpll
dec
adc
popa
push
lret
and
lea
push
mov
imul
sub
push
add
call
inc
sub
in
sub
xchg
vmovhpd
adc
xor
xchg
lods
mov
xchg
bnd
pop
jecxz
jb
adc
push
xor
jno
xchg
divl
aas
lea
das
add
popa
push
sub
bound
clc
push
loopne
imul
sahf
repnz
push
jo
mov
fs
pop
mov
mov
add
mov
mov
in
mov
leave
sbb
in
ret
aam
movsl
sub
enter
jb
xor
test
test
arpl
push
punpcklbw
xchg
movsl
nop
cs
mov
movsl
ja
or
stos
inc
cmpl
mov
jne
jnp
pusha
xchg
and
fdivrs
inc
mov
inc
jmp
pop
loop
sbb
jle
aad
pop
xchg
loopne
mov
sbb
jae
fwait
xchg
inc
dec
subl
cli
sar
pop
in
adc
mov
or
jbe
stos
sarl
dec
xor
mov
test
adc
lds
push
inc
incb
clc
loop
pop
les
push
mov
iret
ds
adc
mov
ret
pextrw
mov
mov
imul
push
pop
xor
aaa
mov
push
add
jnp
mov
mov
and
adc
aas
mov
ljmp
js
sbb
aam
outsb
idivb
es
hlt
pop
lret
add
mov
mov
sbb
inc
pop
inc
cmp
mov
lea
or
xchg
fcompp
pop
andps
push
std
out
sub
out
push
aaa
mov
pop
fsub
and
in
mov
pusha
cld
push
lcall
cmp
insl
cmpsl
je
sub
iret
sbb
mov
inc
inc
iret
add
xchg
jecxz
sbb
sub
mov
lock
dec
testb
lcall
sahf
comiss
shll
addr16
test
sub
orb
insb
addl
imul
cmp
sub
test
add
dec
jbe
cwtl
push
out
test
pop
inc
outsl
adc
loopne
push
out
xchg
dec
ret
fisubrs
push
lret
push
add
stc
inc
add
sbb
push
pop
dec
and
dec
insl
mov
push
xchg
fdivrs
sub
xrelease
pop
adc
inc
jbe
mov
fnstcw
sub
xchg
dec
lods
insl
adc
and
xchg
pop
push
jmp
rorl
rcll
addr16
sahf
test
jb
xor
inc
out
jne
pushf
fcom
adc
ret
or
stos
sub
pusha
mov
sbb
adc
pop
sub
dec
mov
cmp
fimull
mov
dec
mov
int3
lret
ss
xchg
cmp
js
imul
ss
fnsave
fimull
lcall
in
push
andb
int3
ljmp
pop
adc
or
sbb
cld
and
pushf
cmp
jl
leave
fisubs
xchg
pop
cmovne
lods
clc
test
stc
dec
inc
inc
fwait
ret
and
sub
mov
add
in
out
scas
cmpsl
ret
xor
mov
mov
pop
aam
pop
and
cmp
pusha
lcall
inc
sub
pop
divb
mov
mov
adc
inc
cmpb
push
cmp
or
repnz
add
mov
js
lcall
enter
sarb
xchg
pop
aas
test
clc
xchg
adc
mov
and
jle
xchg
sti
adc
push
lea
push
inc
mov
fldenv
dec
or
je
adcb
adcb
mov
in
lea
aaa
push
xchg
and
scas
mov
add
ss
fimull
push
mov
rorb
je
repnz
in
dec
mov
dec
push
rclb
ljmp
sub
ljmp
enter
aam
ljmp
cmp
test
incb
jp
mov
loop
jecxz
insb
mov
pop
pop
inc
add
lret
pop
xlat
and
xchg
pusha
fcmovb
pop
dec
insl
inc
mov
xchg
and
data16
in
lahf
cltd
mov
dec
lods
cmp
mov
roll
rcrl
jp
mov
jb
out
jno
mov
or
movsl
enter
repz
roll
and
mov
lods
mov
push
movsl
xor
lds
imul
adc
idivb
insl
pushf
lods
leave
mov
xor
enter
fistps
adc
adc
jg
popa
push
cmpl
ret
lods
jp
mov
fnstenv
sub
mov
scas
test
mov
push
ja
pop
push
sub
push
inc
pop
adc
sub
inc
and
adc
or
push
jae
mov
mov
daa
movsl
xor
mov
xchg
sti
daa
idivb
lods
scas
pusha
arpl
push
adcb
insb
and
lods
push
les
cmp
mov
jns
push
and
lods
push
popa
fs
lret
scas
inc
lahf
cmp
bsr
mov
add
add
test
inc
jg
pop
add
out
mov
sti
push
loop
xor
adc
lea
or
test
sub
inc
sub
shrl
sub
scas
xchg
add
repnz
icebp
out
cmc
cli
pop
insb
call
ss
scas
dec
in
sbb
lds
xor
pop
outsl
int3
mov
in
cmp
jb
int3
mov
mov
std
dec
sbb
jmp
icebp
scas
ret
mov
dec
sarb
bound
xchg
adc
inc
push
adc
pop
andl
inc
sahf
pop
cli
pop
lret
cmp
jge
xor
ficompl
sub
popf
mov
aam
ret
das
nop
inc
pop
add
sbb
aas
sbbb
xchg
fcompl
adc
fdiv
and
or
and
test
hlt
or
es
push
seto
or
nop
sub
mov
sbb
daa
push
xchg
imul
lds
mov
push
lock
mov
and
xor
adc
push
cmc
cltd
popf
ljmp
cmp
mov
mov
xor
xor
jae
and
rolb
mov
cli
sub
sub
cmp
sbb
pushf
jno
data16
inc
xchg
mov
ret
push
xchg
mov
mov
cwtl
lods
or
inc
mov
aad
mov
pop
mov
mov
push
pop
push
xor
or
test
cld
std
lock
adc
push
out
sub
cli
add
pushf
je
cmp
mov
mov
sbb
jno
push
out
sub
xchg
test
inc
aaa
inc
cmpsl
add
fucom
loop
lret
icebp
sbb
imul
out
sbb
xchg
mov
mov
stos
das
test
ljmp
push
movsl
enter
add
xchg
mov
jns
sub
lods
test
push
daa
imul
incl
decl
mov
cmp
xchg
push
ret
icebp
fimuls
insl
shll
mov
pushf
push
and
inc
or
outsl
mov
dec
fistpl
jmp
dec
push
mov
adc
sbb
loop
js
push
jae
je
dec
mov
jno
stc
cmpsl
loope
dec
push
push
jnp
or
aad
out
pusha
out
adc
xchg
dec
jmp
cwtl
inc
push
push
iret
mov
xchg
lea
cld
clc
push
int
outsb
iret
mov
ss
add
sbb
mov
outsl
fidivrl
sar
cmp
popf
push
add
data16
ret
sub
or
lret
mov
xorb
mov
aam
dec
jb
fdivrl
lahf
insb
jecxz
cmpb
aaa
lods
cmpsl
fnstsw
ret
push
popf
insb
inc
mov
lock
movsb
subl
jnp
xchg
gs
mov
pop
jo
jle
cmp
and
add
mov
loop
cmp
push
push
test
pushf
push
mov
cmc
jmp
push
push
fmul
int
std
cltd
xor
pop
outsl
xor
int3
sbb
jb
adc
scas
fcmovnbe
in
lahf
out
jge
push
hlt
mov
jne
sbb
push
jle
pop
mov
push
adc
cmp
sbb
lahf
test
daa
adc
test
xor
loope
add
mov
sub
pop
mov
jne
in
repnz
lcall
jbe
and
out
leave
add
mov
mov
pop
stc
insl
rcrl
push
mov
or
aam
lock
cmpsb
jb
bound
mov
or
add
mov
cmp
inc
in
in
adc
jl
jno
es
mov
adc
nop
pushf
in
fwait
es
mov
lcall
addr16
into
jp
mov
daa
sub
les
es
add
inc
mov
out
out
jbe
mov
push
dec
in
dec
adc
lds
mov
lea
and
ficoms
arpl
mov
iret
pushf
cmc
jnp
cltd
enter
call
sub
ss
add
icebp
int3
inc
ret
push
mov
out
aaa
movsb
lahf
push
push
ss
mov
mov
jbe
rolb
sbb
mov
aas
out
pop
fcoml
adc
lock
and
imulb
shl
and
inc
cmp
jge
cmp
cmp
xchg
pop
lcall
sub
sub
mov
mov
gs
mov
stos
inc
fidivl
mov
or
mov
inc
sarl
inc
sub
iret
in
add
fiadds
imul
push
jge
stos
or
inc
out
jge
xchg
repnz
dec
cmp
inc
loopne
add
dec
ret
pushf
les
roll
popa
fimull
dec
xlat
or
popa
jle
dec
inc
out
loopne
cwtl
movsl
das
add
stos
out
adc
xchg
iret
stc
loope
in
sbb
or
or
shll
int
test
xchg
jo
cmp
jl
xchg
push
pop
movlps
push
insb
rcr
fisubl
cmc
add
leave
cmp
std
jns
dec
cltd
bound
xchg
mov
mov
arpl
pusha
loop
mov
das
mov
dec
mov
movsb
pop
in
xchg
mov
xchg
dec
jne
pusha
in
jns
pop
and
cmp
inc
shl
pmaxub
mov
leave
lock
jmp
hlt
xchg
dec
ss
jnp
sbb
mov
in
hlt
sbb
push
iret
mov
lcall
lret
imul
mov
jno
xchg
cmp
fildl
pop
mov
int3
sub
mov
adc
shlb
mov
xchg
sti
repz
add
in
sub
aam
adc
addl
add
inc
pop
lret
in
push
imul
sahf
sbb
xor
inc
inc
dec
test
pop
mov
in
ss
cmp
popa
cmp
out
inc
sbb
mov
cld
xor
xor
in
sub
imul
add
xor
add
pop
inc
in
daa
movb
xlat
mov
or
inc
and
mov
int
pop
sub
pop
lret
addr16
std
sahf
adc
test
xchg
sbb
jae
xchg
out
gs
cmpsl
sub
mov
xchg
test
ret
es
sbb
pop
inc
sbb
lods
dec
roll
mov
repz
lret
pushf
or
inc
mov
and
std
xchg
add
lahf
sub
inc
in
lcall
lret
popf
inc
and
dec
xor
daa
push
lock
jg
sub
sub
addr16
cmpsl
nop
mov
std
cmp
mov
divl
jno
and
xor
rclb
adc
add
xor
push
movsl
enter
cmp
outsb
stos
xchg
xor
pusha
jo
jno
sti
enter
ret
std
fildll
or
pop
jae
add
or
jno
xchg
mov
or
dec
cld
jl
repz
sub
test
mov
push
sub
and
inc
data16
out
push
pop
push
hlt
push
gs
jle
sub
inc
and
aad
pop
je
outsb
sub
add
mov
xchg
outsb
mov
mov
test
cmc
add
jns
test
jb
pop
mov
jg
add
mov
mov
lods
stos
fdivrl
jl
mov
cmp
inc
mov
out
dec
jmp
add
adc
lea
leave
jns
mov
int
cmp
push
je
cmp
sti
xchg
push
pop
cmp
cld
popa
xchg
stc
ds
iret
jne
scas
xchg
sti
mov
adc
pop
xchg
rclb
mov
scas
and
dec
mull
xor
sahf
iret
movsl
xchg
scas
nop
ljmp
and
rcrl
add
nop
jle
mov
mov
jb
ficoms
add
orl
fwait
and
sbb
enter
mov
imul
ffreep
setnp
mov
fidivl
stos
notl
cmpb
ss
inc
pop
sti
xchg
adc
dec
popa
push
pop
or
lea
bound
xchg
mov
hlt
push
fbstp
test
jb
addr16
int
cltd
lahf
inc
hlt
pop
pushf
mov
sar
jle
dec
mov
out
add
xlat
adc
jne
xchg
dec
adc
or
add
shrl
sbb
dec
imul
cltd
mov
and
cmpsb
jo
dec
mov
push
cmc
sti
int
sub
pop
or
test
sub
cmpsb
popf
das
cmp
ljmp
sub
idivb
xchg
ja
loop
inc
addl
bnd
mov
xchg
aam
adc
xchg
out
sub
xlat
adc
inc
mov
test
subl
xor
or
sbb
mov
sub
scas
sbbl
std
cmp
dec
mov
jge
int
sub
xorl
mov
cmp
inc
jae
je
outsb
scas
push
sti
xor
mov
lahf
ficomps
fndisi(8087
mov
imul
imul
xor
arpl
mov
and
dec
adc
insb
sbb
sub
xchg
inc
mov
int
dec
lahf
mov
push
lods
or
mov
and
fwait
push
outsb
push
jnp
push
movsb
orb
fadd
and
leave
inc
aas
fdivrp
pop
cmp
imul
jnp
iret
cli
mov
dec
stos
sub
xlat
es
push
aam
mov
pop
add
xor
mov
mov
xchg
and
out
jbe
aam
pop
int3
xor
inc
outsl
and
lahf
xor
mov
fucomp
pushf
test
bound
fnstcw
lret
enter
outsl
fsubrs
sub
pop
xchg
data16
inc
and
push
sbb
inc
out
je
loope
aaa
dec
inc
icebp
dec
rolb
xor
jnp
int3
dec
int
jle
add
adc
fimuls
and
ljmp
pop
dec
and
insb
and
add
mov
int
cmpsb
cmp
push
test
out
pop
push
fiadds
imull
mov
inc
and
mov
xor
sbb
dec
fmul
adc
enter
or
or
cmp
iret
lahf
imul
sbb
pusha
ret
mov
das
cmp
xor
mov
or
sub
sbb
pop
int
mov
push
mov
jne
pop
aas
test
nop
aas
movsl
xor
shrl
sub
cltd
pop
add
imul
insb
fcomps
leave
xorl
mov
push
xor
ret
incb
loopne
out
clc
mov
xchg
stos
sub
pushf
sbb
lret
jle
in
lea
jmp
popl
popf
add
mov
lcall
mov
push
stc
fcomp
enter
push
mov
iret
adc
icebp
test
stos
jb
loope
cld
pop
imul
mov
icebp
mov
in
pop
mov
sbb
test
inc
pop
mov
imul
pop
fdecstp
push
ret
in
ret
ss
mov
shrb
lds
popa
addr16
jmp
push
ja
jmp
mov
sbb
mov
maxps
ret
test
sbb
sbb
jae
shlb
shlb
int
push
les
cld
jecxz,pn
mov
mov
mov
hlt
push
lcall
fistpll
test
pop
into
or
xor
clc
mov
stc
push
cmp
jg
sti
ret
fwait
out
xchg
outsl
aaa
repnz
jp
scas
jle
xchg
out
jns
mov
or
rorl
test
xchg
repz
push
repnz
cmc
pop
dec
lods
pop
cmp
push
mov
sub
scas
jecxz
mov
repnz
jmp
jecxz
daa
cmp
xchg
gs
cli
or
imul
leave
ret
arpl
jmp
imul
add
lods
scas
lahf
mov
test
xor
and
xchg
xchg
sbb
std
cmpsl
xchg
lock
mov
sub
and
cmp
and
pushf
pop
mov
repz
shll
and
out
sub
jmp
daa
fdivs
sbb
or
xchg
jne
scas
incl
dec
or
pop
out
push
add
mov
cmp
pop
pop
push
and
mov
lds
jbe,pt
rol
lock
sbb
fdivrs
adc
cmc
xchg
dec
push
out
xchg
inc
add
pop
jmp
ficompl
les
loopne
pop
stc
shll
inc
adc
lcall
test
inc
in
mov
call
dec
adc
dec
xchg
adc
xchg
and
fcomps
orl
in
cmpsb
inc
push
xchg
sub
xchg
dec
lods
test
dec
adcl
testl
imul
icebp
repnz
adcb
fnstsw
push
sub
in
sub
popa
icebp
xchg
adc
jmp
xor
pop
xorl
fdivrl
mov
sbb
push
outsb
fidivrs
shr
mov
add
out
popf
cld
jmp
test
and
rorl
test
or
lahf
add
mov
and
movsl
jne
loop
cwtl
cmc
or
pop
sub
aam
jge
cmp
mov
xor
or
outsl
sub
add
iret
pushf
push
leave
fs
adc
mov
inc
ss
pusha
aaa
call
push
cli
aaa
sub
lahf
add
push
popa
scas
pop
push
cli
aam
sbb
lea
cwtl
sti
popa
xchg
cmpsb
je
mov
and
push
outsl
lret
pop
insl
movsb
sbb
xor
xchg
push
lret
int
outsl
xlat
mov
ja
jae
and
jle
inc
or
mov
insb
pop
mov
cmp
jo
cld
movups
pop
ss
dec
stos
and
sub
pusha
or
leave
mov
xchg
pushf
cltd
pop
dec
or
int3
notl
jmp
ss
stc
es
stos
mov
jl
pop
mov
xor
jne
sub
rorl
and
out
std
dec
movsl
push
push
or
mov
mov
cli
sub
fsts
cltd
shrb
leave
mov
icebp
cmpsl
decl
push
dec
xchg
sti
xchg
test
icebp
call
sbb
cmp
sbb
or
test
cld
mov
mov
adc
enter
lods
or
iret
mov
jmp
inc
lahf
pushf
mov
cmpsb
movsl
xchg
push
mov
scas
adc
sbb
mov
cmp
aaa
add
sub
flds
add
ret
bound
push
lock
push
mov
sbb
jl
xchg
out
test
stos
outsl
cli
dec
mov
jmp
fdivrl
daa
iret
jecxz
mov
lcall
sub
loopne
cmp
xchg
test
pop
mov
aas
popf
or
mov
jnp
sbb
in
jmp
std
or
pop
sbb
sub
imul
aaa
or
adc
popa
inc
push
or
mov
dec
imull
push
rorl
test
mov
ret
cmp
outsb
pop
cmp
testl
xchg
test
or
es
adc
ror
jnp
mov
out
xchg
pushf
fldcw
in
das
mov
test
lods
jecxz
dec
das
and
mov
mov
jmp
add
imul
or
das
sahf
adc
cmp
pop
sbb
or
mov
xchg
xchg
inc
mov
mov
mov
loop
sbb
push
pop
sbb
aam
or
and
sub
movb
mov
rorb
shll
mov
dec
xchg
leave
call
in
aad
cmc
lods
stos
or
xor
pushf
mov
pop
or
popf
aaa
in
or
mov
rcrb
inc
sub
cmc
mov
jo
jne
cmp
mov
jmp
btc
out
or
mov
jecxz
and
int3
fnstsw
cltd
int
pop
ficomps
and
out
or
call
jb
jne
dec
jbe
mov
xor
sub
inc
in
sub
mov
or
sarl
push
ret
mov
stos
sbb
mov
pushf
pop
movsl
lods
fcompp
lea
mov
cld
mov
xchg
sbb
imul
xchg
sbb
pop
movsl
adc
je
adc
mov
jb
push
mov
out
mov
jnp
dec
cmp
fs
xchg
mov
fdivl
rcl
loopne
test
cmp
cmp
inc
repz
les
inc
rclb
leave
pop
or
loopne
cmp
jne
test
add
stos
adc
ljmp
dec
gs
stos
sub
jnp
jb
mov
dec
lods
jl
sbb
popa
inc
push
mov
jo
lods
sbb
in
mov
punpcklwd
loop
cli
mov
mov
pop
push
out
inc
pop
jl
iret
jmp
pop
jno
mov
mov
cs
daa
lret
inc
out
icebp
repnz
dec
jecxz
pop
pop
arpl
test
mov
jbe
sub
sub
fildll
hlt
push
mov
imulb
cmp
shl
sbb
cmpsl
test
adc
mov
pop
push
lock
bswap
fldt
hlt
pop
xlat
mov
in
out
insl
movsl
inc
daa
mov
shrb
std
cmpsl
push
pop
std
hlt
mov
dec
sahf
jns
or
stos
aaa
add
lahf
test
push
sbb
cmpsl
mov
clc
pusha
pop
cmpsb
and
call
std
push
inc
loop
rol
add
repz
mov
jmp
cltd
fsubrl
xchg
in
test
mov
jp
lods
popl
jmp
imul
pop
fxch
or
push
mov
xchg
mov
sti
test
xor
sub
jmp
fsubrs
mov
stc
fwait
mov
mov
orl
in
xor
jo
inc
cmp
inc
fmull
aad
lcall
into
sahf
jb
pop
push
orl
jb
lahf
sbb
dec
mov
jno
lods
leave
shlb
arpl
push
xchg
push
outsb
ja
cwtl
jns
call
adc
sub
jb
mov
push
xchg
in
xchg
xor
add
outsb
push
insb
mov
sbb
xor
add
xor
fistl
lods
dec
push
lea
arpl
push
push
xor
insb
xchg
adc
clc
dec
cmpsb
pop
jb
orb
inc
sbb
jno
fsub
stos
jo
pusha
xor
and
adc
jne
test
mov
inc
jp
int3
js
ss
jb
out
loop
shl
in
jns
jge
mov
cli
adc
or
sbb
jmp
addr16
cmp
popf
hlt
mov
les
or
xor
and
mov
push
add
mov
or
sbb
test
cmc
ss
fldt
mov
and
mov
sub
xor
addl
mov
scas
pop
mov
dec
mov
mov
sbb
xor
jo
jg
sbb
mov
adc
mov
mov
xor
adc
adc
jg
movsb
ja
rolb
shrl
jmp
or
cmpsb
in
lcall
test
call
add
jmp
inc
jl
imulb
lahf
mov
outsl
jle
fmul
inc
pop
cltd
cmc
jg
aam
jbe
enter
sbb
dec
cmpsb
popf
pop
dec
pop
mov
add
bound
leave
pop
xchg
xlat
dec
test
icebp
cld
lahf
in
and
cmpsl
repz
cs
movsb
sbb
xchg
jno
cmp
test
leave
pop
dec
aas
cmp
or
sub
pop
mov
dec
fiadds
lret
cli
xorb
cld
xchg
pop
pop
pop
jnp
fwait
ds
out
loopne
fs
mov
xchg
jno
roll
mov
add
sbb
out
mov
mov
jge
scas
lods
adc
sbb
and
and
inc
mov
lock
and
cmp
rcll
loope
xchg
add
push
and
cmp
push
pop
insl
dec
mov
push
jmp
push
add
out
sbb
jo
dec
jbe
inc
mov
sbb
out
push
mov
idivl
std
mul
out
mov
xchg
mov
xor
pop
add
cmp
lea
jns
lcall
inc
sub
into
pop
out
movsl
pop
pop
inc
filds
scas
xor
stos
cltd
sbb
out
fcompl
js
add
push
in
or
jns
jae
ljmp
not
jmp
test
aas
mov
xchg
repnz
shlb
dec
insb
xchg
cmpsl
fiadds
rcrl
mov
pop
pop
popf
call
mov
push
jbe
push
sub
popa
outsl
loop
sub
aam
jbe
je
test
popa
je
enter
push
push
pushf
loop
inc
mov
lcall
mov
lcall
cmp
addr16
mov
je
clc
cmp
xor
xor
push
jb
xchg
push
pop
sub
cmpsl
test
imul
mov
mov
inc
mov
mov
sbb
loop
data16
mov
stc
pop
decb
pusha
cmpsb
mov
adc
push
es
jg
pop
arpl
clc
aaa
movsb
testb
or
cwtl
cmpsl
stos
fsts
shl
cli
xlat
cmp
mov
outsl
jae
xchg
std
dec
jl
dec
test
jne
sub
or
sti
adcb
repz
jle
repnz
or
inc
stos
cs
mov
scas
and
mov
dec
push
pop
in
push
loopne
push
out
cmp
rolb
and
mov
or
dec
andl
or
iret
cmp
fwait
out
adc
ret
test
sbb
movsb
push
hlt
push
sarb
and
dec
inc
in
or
mov
mov
xlat
sbb
popf
xchg
sbb
shrl
and
fst
jbe
scas
xchg
repz
sar
iret
xor
scas
addl
pop
push
add
fcmovnb
add
repnz
cltd
outsb
mov
test
adc
stos
mov
or
inc
pop
test
adc
cmp
or
xchg
clc
bnd
cli
imul
sbb
insl
cmp
clc
scas
xor
mov
inc
mov
cmc
mov
push
mov
push
xchg
cs
mov
aam
xchg
add
xchg
pop
mov
mov
int
inc
mov
ret
cmp
ljmp
mov
mov
sub
jmp
or
aam
adc
aas
cmp
add
imul
out
cld
xor
sub
insb
and
cmp
add
lret
xchg
ljmp
adc
push
loope
xor
sar
push
mov
pop
mov
push
push
jnp
insl
dec
jg
ja
and
popa
mov
idiv
xchg
and
cmpsl
int
repnz
arpl
daa
in
lcall
sbb
jp
outsl
in
hlt
imul
sarb
sbb
xchg
cmp
icebp
fcmove
orb
inc
in
shll
xchg
lcall
out
int
sbb
sub
sbb
in
push
sti
loopne
cld
pop
cmp
xor
pop
dec
nop
xchg
out
sub
push
xor
les
inc
fwait
push
int3
add
dec
mov
jb
push
faddl
cmp
xor
das
das
dec
dec
or
repz
movsl
loope
sbb
mov
xor
lods
ret
sub
leave
iret
mov
mov
cmp
and
lret
inc
xor
mov
outsl
fucom
loope
cmp
gs
rcrb
mov
pusha
and
data16
mov
mov
fdivs
loope
fistps
sub
push
dec
mov
or
mov
jp
xor
jnp
pusha
filds
xchg
jecxz
mov
sti
pop
int3
add
fadd
jle
out
test
int
je
fstpt
pop
add
sbb
sahf
cmpsb
rcrl
aad
mov
enter
popa
cmp
mov
stos
mov
add
cmp
mov
adcl
mov
and
scas
mov
clc
jo
mov
idivl
enter
orb
cltd
inc
jne
xor
stos
mov
sub
mov
out
inc
jae
sbb
push
imull
lods
jae
dec
adc
sbb
ljmp
sbb
loopne
in
hlt
push
push
inc
sbb
dec
mov
xor
imul
mov
clc
add
mov
shrb
cmp
push
mov
stc
pop
add
jnp
cltd
cli
decl
addl
cld
inc
fisttpl
lods
cltd
mov
outsl
sbb
shrl
xchg
sti
cmp
call
ret
dec
in
jae
xor
shrl
inc
aad
pusha
lcall
or
pop
fmul
out
fldl2t
xlat
dec
sti
insl
or
psubb
lods
aam
or
jbe
add
outsb
mov
sbb
clc
daa
jge
lret
cmp
cli
mov
mov
aad
jp
sub
bound
popl
push
add
push
stos
cltd
fistpl
mov
loope
int3
aas
loope
bound
dec
loopne
stc
dec
pop
into
xor
push
repz
lcall
iret
lcall
fldenv
xor
repnz
loop
jno
ret
sub
inc
or
sbb
mov
mov
in
pop
mov
fldl2t
call
mov
push
arpl
jns
js
bound
sub
sub
xchg
mov
loope
inc
xchg
or
testl
aas
adc
and
dec
adc
adc
cs
xlat
push
lock
in
test
add
in
nop
or
and
sarb
inc
jmp
push
inc
pop
or
xlat
in
inc
iret
icebp
pop
dec
call
mov
pop
mov
push
call
xchg
imul
dec
xchg
sahf
sub
jb
cmp
aam
pop
cmp
sub
aas
xor
cmpsb
jbe
bound
mov
popa
dec
mov
xchg
data16
pushf
mov
movsb
test
or
and
push
scas
push
lret
jb
call
inc
sbb
dec
sti
jp
dec
and
add
out
cmp
mov
or
int3
mov
mov
sub
mov
xchg
xchg
pop
jno
adc
bnd
xchg
mov
ja
adc
sbb
mov
arpl
cld
cmp
add
or
add
or
lea
pusha
sub
adc
sbb
jno
lret
xor
sbbb
ret
adcl
inc
pcmpgtw
xchg
inc
aaa
lret
sub
push
pop
mov
adc
sarl
pushl
sub
mov
rol
icebp
outsl
jle
or
xchg
push
xchg
stos
jbe
inc
fs
daa
mov
jno
or
jmp
lahf
adc
addb
sahf
jmp
mov
cltd
popa
mov
loop
mov
hlt
sbb
cmp
xor
testb
and
cmp
xlat
sub
jne
jae
jle
insl
cltd
add
loop
aas
or
add
fistpl
in
leave
lcall
and
outsl
scas
mov
mov
fdiv
push
xchg
cmpsl
roll
fisubrl
push
pop
jp
ret
add
mov
cltd
repz
cmp
daa
xor
mov
jnp
out
sbb
cmp
cmp
push
add
rcrb
mov
inc
decb
fbld
mov
cmp
pop
jnp
daa
addr16
cmp
ja
xor
mov
flds
jg
sbb
pop
pushf
adc
mov
xor
dec
shlb
sub
icebp
mov
popf
push
mov
insl
jmp
sbb
push
and
jg
sbb
push
xor
mov
daa
and
jo
ljmp
jmp
and
cli
jbe
mov
mov
loop
mov
fmuls
inc
inc
mov
aam
in
lds
or
insb
lret
pop
outsl
mov
mov
hlt
push
call
sahf
outsl
data16
mov
mov
xor
lcall
jp
sbbl
fmull
icebp
into
shll
xchg
fsub
push
cmpsl
push
shlb
das
sahf
mov
repnz
dec
jo
out
faddp
mov
lods
add
stc
pop
movsb
adc
inc
xchg
add
jo
data16
ficompl
lds
inc
xchg
jl
clc
out
add
scas
pop
fsubrs
lods
addr16
jmp
inc
into
pop
ljmp
jo
pop
xchg
cmp
dec
jmp
out
or
ret
jo
xlat
or
fistpll
ret
popf
sbb
scas
daa
mov
femms
pop
adc
add
stos
int3
sbb
cmovb
and
adc
sbb
pop
outsb
sbb
jnp
fmul
in
sub
lcall
scas
mov
sbb
mov
in
rorb
pop
and
mov
rorb
sub
in
and
and
test
aas
push
cwtl
js
mov
ss
aam
call
test
sub
mov
sbb
test
inc
sbb
jg
and
mov
mov
andb
mov
adc
aad
and
sbb
push
es
mov
nop
test
lret
leave
or
leave
jo
push
pop
xchg
sub
mov
test
adc
jl
fadds
jne
or
mov
es
fadd
and
stos
push
cmpsl
mov
int
imul
pusha
popa
lods
push
mov
gs
sar
testb
bound
inc
ror
add
test
mov
sub
xor
jecxz
jl
loopne
lds
shl
shll
push
sub
jmp
pop
pop
cmpsl
sub
cwtl
fadds
incb
or
add
pusha
mov
frstor
pop
das
xchg
add
push
pop
js
mov
sarb
movsb
pop
ret
mov
adc
jge
mov
lahf
aad
es
or
cltd
pop
cmp
xchg
dec
adc
or
cli
sbb
jo
cs
pop
xor
ja
cmp
sbb
outsb
inc
sbb
scas
mov
cmpsl
jnp
or
sbb
or
pop
xor
fdivs
test
int
and
push
pop
lock
in
xor
pop
repz
lock
add
add
inc
xchg
push
sti
lcall
insl
mov
lcall
fisttps
jmp
stos
test
fistpl
in
push
dec
mull
pop
pop
xlat
xchg
fmull
lcall
popf
xchg
mov
add
sub
push
cmp
add
dec
leave
insb
aaa
or
sbb
dec
mov
push
aas
cmp
lock
stos
push
dec
leave
inc
mov
in
lcall
and
fldenv
inc
mov
das
fidivrs
cs
data16
xchg
je
repnz
inc
mov
out
loop,pt
call
mov
stos
mov
push
nop
fs
sbb
adc
pop
adc
loop
lock
cmpsl
andl
dec
nop
insl
cmp
cwtl
leave
je
loop
sbb
vpsrlq
xchg
push
add
test
sbb
push
dec
popa
or
call
jnp
decl
in
xchg
lret
movsl
push
rorl
scas
xchg
mov
jp
xor
push
fcoms
inc
push
jle
repnz
cmp
mov
jb
xchg
inc
sub
lock
inc
loop
mov
ja
sub
inc
clc
pop
inc
lcall
movsl
jle
std
xchg
mov
inc
pop
icebp
jo
lcall
pop
sbb
mov
les
mov
arpl
push
xor
jnp
add
add
jge
iret
sti
insl
clc
xchg
jae
xchg
stos
bound
add
js
pop
and
dec
aam
in
stos
mov
insb
ret
jmp
loopne
pop
xor
int3
mov
mov
fimull
sti
sub
pusha
leave
jno
rolb
and
es
mov
ret
and
cwtl
out
fcmovu
ja
out
mov
aam
xor
cmp
jne
mov
or
in
mov
xor
and
push
xor
xlat
ret
cmp
push
lret
or
sbb
adc
mov
xchg
std
mov
pop
jle
pop
clc
mov
test
xor
mov
mov
jbe
dec
pop
adc
jg
or
dec
pop
xor
cli
sub
inc
rcll
mov
xor
insb
stc
push
mov
leave
faddl
lea
mov
or
fidivrs
notb
or
xor
sarl
or
stos
test
add
enter
ja
pop
aam
adc
dec
inc
into
xor
push
push
and
adc
outsb
xchg
and
test
pop
imul
jg
inc
dec
pop
fmuls
imul
negl
mov
pop
dec
fdivs
jbe
fsubl
inc
mov
lods
xlat
fists
jp
std
mov
mov
sarl
loope
and
jmp
in
pop
push
inc
pop
push
cmp
pop
xor
ss
mov
lret
sahf
and
sub
dec
or
push
or
add
xchg
lea
xchg
sbb
inc
xchg
and
jle
filds
dec
xlat
sahf
aaa
adc
inc
ss
push
xchg
hlt
mov
out
out
out
xchg
jbe
fwait
or
in
outsb
cli
mov
pop
filds
pusha
push
ret
cmp
and
or
inc
mov
xchg
fmull
and
pop
mov
stos
aas
mov
cmp
loopne
les
sti
cltd
cmc
jmp
leave
pusha
mov
jae
mov
push
int
add
lret
jl
jae
xor
out
hlt
outsl
mov
ss
cwtl
repz
adc
test
fisttpll
dec
adc
add
shll
jge
addr16
and
sbb
icebp
xorb
bound
je
stos
xor
and
push
mov
inc
push
inc
xor
pop
aaa
sub
addb
mov
mov
dec
push
adc
adc
scas
mov
subl
mov
jecxz
aad
mov
add
xchg
pop
in
push
insb
or
jae
or
mov
mov
sbb
je
out
jno
lret
cmp
or
jg
jmp
rcr
int
jno
dec
mov
mov
xchg
jecxz
inc
loope
adc
lods
jae
add
add
push
lahf
cmp
sahf
aad
dec
rolb
test
cs
mov
adc
xchg
add
adc
test
mov
add
adc
cmp
repz
xchg
mov
mov
sbb
ret
and
fstp
pop
push
and
sub
and
aad
loopne
rorl
imul
es
mov
ss
jl
loope
hlt
push
insl
mov
pusha
xor
pop
outsl
mov
jno
jl
inc
es
aas
mov
sbb
xor
sti
nop
in
jmp
fs
mov
rorl
inc
daa
movsl
mov
out
lock
popf
push
ret
cltd
push
push
hlt
xor
sub
sub
sbb
pop
dec
push
rcr
push
scas
mov
sub
xchg
xor
ljmp
mov
xchg
dec
movsb
push
pop
xchg
lock
and
dec
jp
repnz
cmp
jbe
gs
add
aam
xchg
psubw
xchg
out
dec
js
sub
jbe
mov
xchg
lahf
mov
mov
out
cmpl
add
lods
push
inc
jb
mov
xor
xchg
xchg
xorb
insb
unpcklps
in
sbb
lock
std
sti
pop
cmp
adc
pop
out
inc
cmp
mov
into
pop
mov
lea
pop
xchg
inc
scas
loop
lods
lcall
mov
jno
or
movsl
les
sbb
push
data16
xor
mov
fcmovbe
push
pop
aam
xor
sub
adc
shll
fcomip
add
add
js
orb
mov
lds
gs
cmp
pop
outsb
cmp
mov
jno
cld
fnstenv
js
sbb
or
pop
aas
mov
jns
sbb
cmp
adc
cmpsl
daa
inc
jmp
fisttps
jl
outsl
cmpl
mov
xchg
jmp
mov
mov
lahf
sbb
pop
dec
loope
hlt
incb
push
xlat
push
xor
imul
push
push
lret
out
add
decl
loopne
popa
jecxz
loope
mov
loope
out
leave
or
rcll
outsb
jg
test
jp
rol
aam
dec
and
pushf
jp
in
lods
inc
imul
insl
add
pop
inc
sub
loope
loop
nop
fwait
or
mov
lret
mov
cs
aad
out
ret
pop
mov
mov
das
sbb
push
or
jns
push
xor
or
out
nopl
mov
ret
lahf
aad
scas
xchg
mov
jno
ja
pop
or
cli
out
jo
lahf
sub
push
mov
dec
lds
aam
mov
lahf
daa
inc
sbb
mov
pop
sub
inc
mov
and
pop
pusha
xchg
outsb
rcrl
ss
xchg
jge
int
mov
pop
inc
sub
and
js
mov
cmp
sbb
sbb
ja
xchg
data16
xor
sbb
or
jmp
scas
test
push
add
dec
gs
jbe
xchg
arpl
mov
dec
sbb
and
jnp
aaa
jg
stos
sbb
test
mov
int
shll
jl
negb
incl
or
inc
adc
les
outsb
jp
inc
jnp
dec
mov
adc
fdivl
out
xchg
xchg
inc
add
sbb
and
int3
aad
and
mov
shll
out
stc
jecxz
scas
cltd
jnp
xor
ja
and
push
xchg
aam
pop
popf
scas
call
repz
loope
xchg
push
dec
push
mov
add
test
mov
mov
movb
dec
mov
out
fs
push
push
fadds
popa
dec
jnp
shr
fiadds
outsl
xchg
push
xchg
add
imul
push
and
push
xchg
jnp
or
pop
dec
inc
xor
sahf
and
dec
inc
mov
rcll
sub
pusha
sti
jbe
movsl
inc
mov
sti
mov
jnp
mov
aad
loop
add
jp
add
jle
es
xchg
enter
mov
test
cld
xchg
popf
test
or
push
fs
scas
mov
mov
sub
ds
out
rorl
insb
pop
jno
in
cmpb
cmpsb
or
mov
lods
sbb
mov
mov
mov
mov
mov
dec
ds
xchg
xchg
jecxz
push
adc
lods
test
enter
dec
jnp
adc
call
stc
incl
div
fs
xchg
push
pop
and
and
fdivs
movsb
push
in
pop
mov
sbb
push
dec
jae
jge
dec
jb
and
inc
mov
pop
mov
loopne
repz
ja
rorl
insl
xchg
and
leave
das
into
adc
mov
dec
adc
iret
popa
mov
mov
xor
xchg
imul
clc
or
cld
in
jmp
lcall
fists
lods
sub
int
nopl
pop
jne
jle
arpl
sub
and
ja
push
out
pop
mov
rcll
test
xor
testb
in
and
test
or
sub
pop
fwait
ret
push
push
adcl
jmp
mov
mov
pop
push
xchg
lock
ret
rorb
sbb
gs
mov
call
mov
cmp
xor
rcll
add
in
mov
mov
pop
sahf
mov
xor
loopne
rclb
ss
dec
inc
push
bound
mov
out
push
subb
stos
mov
popa
xor
and
xchg
lret
nop
xor
lcall
scas
xchg
and
test
adc
movsb
push
inc
out
mov
ss
sub
sbbl
out
jg
mov
scas
jmp
sub
add
mov
in
cmp
jo
adc
push
aaa
xchg
sbb
sub
jns
xor
and
mov
and
mov
out
pop
sub
divl
push
mov
adc
int
out
mov
and
pushf
cmp
ja
cmp
lea
stos
and
loop
mov
je,pn
pusha
sbb
jecxz
adc
sahf
or
adc
fs
fiaddl
sub
pop
pcmpgtb
xchg
pop
mov
mov
sub
mov
mov
sti
adc
xor
leave
xchg
xchg
or
lahf
sub
xchg
enter
push
mov
cmp
inc
fbld
dec
pop
mov
dec
fcmovb
inc
ja
or
dec
dec
cld
cwtl
push
dec
out
pop
mov
jle
lret
jo
mov
jmp
out
rcr
daa
adc
sub
fcoms
shlb
sahf
test
fisubrl
out
mov
dec
xor
outsl
cmp
jg,pt
rorl
lahf
pop
sti
test
je
mov
push
sub
das
cmp
and
push
repz
jg
mov
pop
imul
cli
and
inc
or
in
int3
int3
fisttps
mov
leave
push
ret
push
mov
add
inc
pop
iret
xchg
jmp
adc
pop
gs
popl
dec
lock
adc
in
add
movsb
shrl
stos
stos
xchg
or
std
and
pop
rcl
call
ret
inc
sub
xchg
and
cmpsb
push
cmp
mov
and
ljmp
mov
jl
sbb
pushf
into
xchg
hlt
movsb
sub
test
add
cld
repz
jnp
and
stc
add
push
movsb
or
cltd
push
sarb
cwtl
ja
inc
sbb
je
ret
mov
inc
in
inc
dec
jecxz
push
mov
je
cli
or
dec
push
test
mov
push
jns
shlb
and
sbbl
adc
add
lahf
add
out
and
xor
rorl
mov
rcr
xor
insl
popa
fisttpl
cmp
insl
and
test
stos
jns,pn
or
lret
mov
adc
fwait
dec
jl
xorb
adc
add
jle
sub
inc
scas
adc
push
cmc
int3
ret
sub
push
push
shrb
adc
jge
mov
push
aas
cmpsl
inc
mov
mov
mov
sub
shl
into
mov
xor
xchg
inc
mov
dec
jge
xchg
repnz
inc
lock
stc
pop
push
xchg
ljmp
mov
or
fldenv
and
sbb
scas
inc
pop
cmp
mov
popa
test
or
and
push
dec
popl
push
push
mov
ss
aam
sti
hlt
mov
push
test
pop
clc
push
cmc
cltd
mov
call
cmp
mov
call
xchg
pop
addr16
movsb
sub
les
jle
aam
lret
mov
aam
lods
or
clc
lock
movsl
js
mov
test
andb
inc
nop
jbe
dec
test
inc
sbb
inc
cmp
subl
fcmovne
daa
nop
movb
jnp
dec
dec
fidivl
das
scas
loope
pusha
mov
lds
cmc
loop
and
add
sahf
hlt
mov
cltd
std
int3
pusha
inc
insl
fs
or
mov
aam
mov
pusha
shlb
je
mov
add
mov
lods
loopne
adcb
test
mov
pop
push
lahf
dec
dec
and
dec
inc
push
add
dec
lcall
jno
push
mov
xor
es
sti
stc
adc
jns
cmp
jb
push
add
push
mov
mov
pop
xchg
psrad
jne
xor
nop
in
push
mov
std
sbbb
add
pop
fstl
clc
scas
or
test
bnd
mov
jne
in
add
das
jae
push
cmp
imul
xlat
sbb
fs
xor
lods
and
sbb
stc
icebp
cmpsl
xchg
mov
cli
and
sub
arpl
insl
cltd
shl
mov
push
or
dec
jg
fcmovnu
sub
pop
sbb
or
xchg
xchg
push
push
sub
out
lcall
pop
pop
mov
data16
inc
fisttpl
adc
mov
dec
cltd
mov
jne
pop
outsb
mov
lahf
shll
mov
jo
xchg
mov
lea
fstps
divl
shl
test
arpl
and
leave
mov
sbb
pusha
push
xchg
adc
inc
mov
aaa
fidivrl
jo
lods
cmp
cmpsb
cmp
incl
pop
cmpl
in
inc
jecxz
repz
aaa
loopne
loopne
jp
xchg
fisubrl
fisubrs
mov
test
adc
jmp
mov
mov
fistpll
sahf
xchg
bound
or
xchg
push
mov
mov
dec
xor
leave
dec
xor
imul
ficompl
in
pop
fdivrs
cmc
push
rcll
shl
gs
push
jmp
adc
cwtl
repnz
in
dec
pushf
fbld
stos
or
sarb
call
jne
lret
scas
vcvttps2dq
into
push
pusha
mov
inc
mov
xor
xchg
in
lods
sub
lods
pop
jg
or
cmpsl
scas
out
mov
in
mov
pop
sub
dec
push
data16
das
insl
xchg
adc
sbb
lcall
xchg
cmp
ret
mov
in
aas
sub
and
jecxz
adc
movsb
and
es
sub
pop
mov
inc
roll
mov
xchg
int3
call
mov
incb
push
lea
pop
mov
test
cmp
shrl
mov
dec
xor
add
js
hlt
add
lock
fistpl
adc
lret
in
jb
and
out
mov
int3
mov
divl
xor
cld
ja
pop
fsts
sbb
cmp
mov
push
add
push
jnp
std
fldenv
les
push
out
xlat
push
mov
jp
gs
in
xchg
std
mov
popa
lret
dec
sarl
popa
test
push
mov
mov
mov
dec
mov
jae
xchg
mov
hlt
cltd
stos
mov
pop
cmc
pop
push
inc
fmul
sahf
prefetch
lock
in
and
mov
in
jne
and
movsl
outsb
dec
mov
cwtl
adc
adc
iret
andl
sbbb
fucom
dec
cs
jge
lret
jp
mov
sbb
cmc
xor
leave
popf
aad
leave
pop
mov
sbb
aam
sbb
jp
daa
sub
sub
jp
clc
sbb
cltd
fstps
fimull
fwait
adc
lods
sub
nop
insb
lods
add
mov
outsl
mov
adc
stos
sbb
movsl
outsl
jmp
cmp
fisubrs
and
mov
dec
cld
mov
push
sbb
jg
pop
sti
mov
cmp
data16
jp
pop
aad
cmp
push
jmp
mov
or
or
dec
add
or
out
mov
push
loope
or
test
sub
sub
dec
dec
and
mov
xchg
or
xor
and
into
insb
fbstp
dec
mov
mov
orl
jns
cmc
push
xchg
xchg
ret
mov
xchg
in
lahf
mov
inc
popf
out
lret
push
lahf
or
jbe
lret
cmp
lret
lcall
movsl
mov
jp
nop
adc
mov
push
mov
pop
int3
js
sub
rcr
and
sbb
adc
sub
add
xchg
sbb
xchg
leave
ds
test
xchg
aam
pop
pop
mov
jo
xchg
ljmp
jnp
xor
fimull
sti
mov
int
lds
aaa
dec
cmp
pusha
rorb
ror
fisubrs
popa
mov
pop
push
sbb
push
rcll
das
out
mov
lock
push
push
mov
repnz
mov
js
jmp
ret
cltd
fcomps
addb
popa
insl
in
inc
rorb
sub
adc
or
das
or
int3
mov
cmc
sub
mov
push
leave
adc
sub
test
push
bound
xchg
mov
int
or
jmp
inc
sbb
mov
movb
adc
and
lcall
dec
xor
cmp
pop
sbbl
ss
cmp
stc
roll
hlt
dec
repnz
test
push
or
lcall
test
adc
fdiv
arpl
mov
push
shrd
out
es
push
popa
mov
fidivl
andl
jo
jnp
call
jnp
aad
dec
pop
insl
inc
pop
mov
inc
stc
jge
mov
inc
push
in
dec
fnstcw
cmc
cs
pop
add
lods
stc
and
test
xchg
frstor
stc
ljmp
leave
dec
mov
jb
push
adc
mov
jecxz
cmp
ds
mov
cmp
xchg
lret
ficoml
scas
push
testl
pop
jno
icebp
mov
icebp
pop
leave
mov
or
ret
ret
fcomip
adc
shlb
xchg
xor
int3
pop
test
lea
repz
inc
js
jb
pop
sbb
ja
dec
pop
push
sub
lods
push
add
stc
xchg
mov
aaa
and
das
cmp
sbb
mov
mov
pushf
stos
push
loopne
cld
loope
ret
push
or
sub
adc
fisubrs
push
push
cmp
ret
xor
mov
push
in
imul
lock
sbb
pop
imul
xor
mov
dec
cmp
scas
mov
ss
cmp
imul
adc
mov
sbbl
mov
fs
rcrb
inc
aad
cmp
ud2
cmp
and
push
cmp
add
jmp
mov
jno
pop
lret
mov
ja
lea
push
jae
out
push
insb
in
testl
adc
jecxz
sbb
and
or
and
rcr
popa
mov
test
mov
rcr
push
jne
mov
out
or
ret
in
xor
xchg
loop
xor
out
cmpsl
in
enter
popf
or
cmp
test
push
adc
loop
sub
mov
or
xor
sbb
mov
mov
inc
in
out
lods
arpl
jno
cmp
jo
sub
mov
add
test
push
incl
dec
orb
or
fbld
loopne
jae
lock
nop
insb
xor
jge
repnz
sbb
push
or
loop
rclb
cmpsb
movsb
enter
rcrb
stos
fbld
sahf
dec
popa
add
pop
lds
push
subl
sub
mov
out
repz
in
lea
mov
xor
fidivrs
fistps
lret
inc
mov
test
pusha
jo
fbstp
adc
in
lret
pusha
lcall
fnstcw
test
sub
push
ret
movsb
popa
dec
push
test
bound
jns
xchg
stos
cltd
mov
arpl
dec
enter
test
mov
dec
in
push
dec
les
mov
pminsw
cmc
mov
outsl
mov
xchg
jle
cmpsb
add
and
mov
out
push
sub
icebp
cs
and
sarb
sbb
mov
shll
dec
xor
call
mov
lea
clc
enter
cmp
stos
or
jmp
hlt
push
test
cwtl
inc
loop
popa
cmp
sarb
xchg
xchg
out
xchg
mov
ds
inc
dec
or
adc
xchg
xchg
lods
daa
pop
pop
cmp
adc
sub
loopne
lock
jg
daa
mov
push
xor
xlat
repnz
in
mov
jne
sub
je
setno
fldcw
out
out
int
addl
rcl
fmull
xchg
fcmovb
iret
movsl
sbb
adc
push
mov
xor
popa
cmp
and
xor
cmc
and
push
and
mov
push
pop
addr16
mov
mov
sub
mov
insl
aad
mov
int3
pop
pop
add
test
adc
ja
sti
lret
frstor
inc
psadbw
faddl
jle
ss
push
mov
mov
add
icebp
popa
fimuls
jae
xor
gs
or
aad
imul
xor
sbb
and
loopne
jnp
enter
jmp
sbb
adc
dec
xchg
popf
add
mov
dec
xor
inc
dec
ficoml
dec
sahf
hlt
imul
mov
sti
movsb
test
lock
mov
jl
mov
popa
lods
add
pushf
push
or
arpl
and
and
cltd
dec
aas
roll
pop
xchg
or
int
push
push
ret
sub
sub
loope
addr16
int
imul
inc
das
out
cmp
push
cmp
or
or
fstps
pop
push
movsl
fs
jnp
inc
gs
pop
sub
or
mov
stos
roll
jmp
adc
push
rcr
gs
xchg
mov
dec
mov
popa
pop
adc
and
mov
xchg
enter
pushl
mov
fs
loopne
hlt
push
sbb
inc
outsb
sahf
push
jmp
imul
push
lahf
loopne
das
lahf
cltd
cmpsb
hlt
repnz
mov
icebp
pop
lret
cmpsl
icebp
popa
add
testb
pop
in
ljmp
sub
cmp
iret
or
daa
sub
shlb
lds
iret
xchg
xchg
sahf
clc
sbb
ds
insl
popa
lret
lds
inc
data16
dec
and
jg
sbb
push
xchg
lahf
pop
dec
adc
xchg
add
incb
ficoms
insl
insl
pop
dec
addr16
sbb
fimull
enter
adc
mov
xchg
jbe
adc
imul
iret
scas
shll
mov
fldt
incb
push
je
jecxz
add
sub
enter
sbb
nop
adc
outsb
push
lret
mov
int3
jo
ja
not
add
je
flds
mov
je
js
adc
or
inc
shr
mov
xchg
xchg
out
fisubs
xorb
cmp
jp
loopne
ja
repz
mov
push
mov
adc
bound
fcmovnb
add
jmp
cmp
pop
xchg
imul
and
xor
fists
xor
daa
cmc
add
mov
shr
in
jmp
test
sub
mov
push
jns
rcrb
jns
push
xor
jmp
fildl
rolb
cmp
inc
adc
test
mov
sar
mov
mov
imul
cltd
dec
or
dec
aaa
scas
scas
jecxz
or
aas
push
pop
jno
insl
push
xchg
or
out
and
cwtl
std
and
cmp
mov
fistps
fsubr
mov
jae
or
cmp
inc
lods
scas
jmp
bswap
mov
mov
pop
dec
xchg
mov
or
cmp
test
and
sti
les
fnstsw
or
out
push
jmp
push
or
in
mov
out
inc
push
repnz
jg
dec
mov
shlb
repz
xor
mov
sub
dec
push
nop
in
sub
inc
mov
shll
inc
or
pop
mov
adc
je
imull
xchg
push
inc
lret
mov
inc
pusha
mov
sub
popf
pushf
push
dec
std
popf
cwtl
shl
insl
xchg
aas
mov
and
sub
push
cwtl
call
pop
mov
add
mov
lods
lock
or
shlb
cmp
hlt
xacquire
jmp
adc
add
fcomps
in
cmc
add
cmp
dec
stos
nop
mov
mov
add
fwait
push
inc
sub
xchg
xchg
outsb
pop
adc
test
stos
jbe
ret
dec
add
call
aam
mov
mov
idivl
cmp
cmc
stos
mov
or
jmp
push
sub
sub
mov
push
mov
cli
push
inc
add
arpl
lods
sti
sub
push
and
dec
mov
jo
loop
mov
sbb
fisubrs
or
jb
ret
inc
xchg
inc
cmp
popf
mov
pop
cli
aad
test
ljmp
add
mov
mov
scas
jp
cmpsl
idiv
cwtl
mov
add
xchg
sub
clc
xor
arpl
lods
push
inc
hlt
outsb
push
add
popa
and
scas
rcr
aaa
mov
dec
jp
stc
and
shlb
roll
shlb
cmpsb
das
sub
lods
sti
int3
aad
cmc
pusha
insl
xchg
fistpll
pop
sbb
daa
popa
mov
adc
mov
out
fdivl
sbb
mov
mov
sub
mov
xchg
mov
push
cmp
lcall
push
sub
out
inc
aad
rcl
fmuls
pop
and
cmp
js
add
popa
sbbb
push
in
push
cmp
or
and
mov
je
xor
mov
adc
cwtl
xor
pop
sbb
dec
das
xchg
lock
mov
adc
repz
push
jge
out
pop
loope
lret
mov
sub
jmp
sbbb
pop
fsub
jno
adc
fidivs
inc
add
out
sub
xchg
xchg
and
cltd
xor
push
mov
hlt
jbe
push
add
sbb
fucomp
ret
adc
push
lahf
or
mov
cwtl
stos
dec
out
fimuls
sbb
xor
pop
pop
xchg
cmp
push
sti
mov
into
cmp
mov
jne
inc
inc
mov
daa
jno
or
xor
cmp
mov
jecxz
mov
out
push
ja
jecxz
or
inc
cmpsb
xchg
mov
push
loopne
gs
inc
push
inc
mov
or
push
mov
add
rorb
jmp
sbb
inc
movsl
les
insl
cmpsb
test
jp
fmul
cmpsl
mov
adc
mov
mov
rcrl
mov
les
jmp
cmc
nop
inc
negb
pop
push
xor
xchg
aad
out
sbb
mov
push
jecxz,pt
xchg
pop
and
fstpl
jmp
data16
ja
adc
or
mov
add
out
xor
xor
das
push
in
or
mov
sub
inc
inc
nop
inc
mov
mov
cltd
stos
or
popf
sbb
out
and
xchg
jo
jno
mov
xchg
fistl
mov
jmp
imul
sbb
out
rcl
push
mov
mov
into
cli
or
xchg
sub
outsl
cli
test
pop
jb
int
add
push
mov
sahf
imul
pop
lock
mov
sbb
cmpb
popa
or
rep
jecxz
mov
stos
jnp
push
add
xchg
movl
je
out
call
add
lcall
cmp
push
sahf
lea
mov
mov
ljmp
xchg
mov
daa
fisttpll
adc
add
sbb
mov
lock
sti
mov
jmp
movsl
jle
cmp
add
test
adc
fs
movl
pop
add
imul
cltd
bound
fisttps
sti
pusha
or
dec
mov
sub
add
mov
sbb
adc
scas
call
xor
cmp
out
mov
addr16
dec
sahf
lahf
mov
iret
out
or
fnstenv
pusha
adc
xchg
push
lahf
push
cli
sub
fcmovnb
pop
lret
ljmp
inc
mov
pop
sbb
not
lea
in
mull
into
add
cmc
mov
mov
or
imul
or
out
jmp
lods
dec
lahf
inc
jecxz
sub
jb
imul
dec
mov
clc
push
ss
icebp
xlat
dec
loopne
xchg
out
mov
inc
adc
add
nop
les
xchg
adc
adc
dec
cmp
vmwrite
mov
rcr
sub
sbb
call
lahf
sbb
fs
jo
adc
dec
push
fwait
bound
xor
incb
fwait
pop
dec
jns
bound
stc
sti
loope
mov
inc
mov
insb
lock
dec
loope
mov
lret
iret
push
or
cmp
dec
inc
imul
sub
sbb
arpl
ds
add
pop
fwait
sub
push
hlt
int3
mov
aad
dec
movsb
inc
jp
push
imul
out
mov
hlt
and
xchg
push
movsl
lods
rclb
pop
jge
mov
outsb
cltd
stos
cmpb
sub
push
adc
cmc
clc
hlt
mov
cmp
cmp
test
jl
xchg
incb
in
dec
push
mov
pop
add
cltd
rclb
popw
popf
cltd
fs
sub
sahf
mov
pop
xor
test
popf
in
jle
xor
lock
push
jle
inc
or
adc
add
xchg
lds
lock
stos
mov
ret
movsl
or
jl
mov
movsb
xor
xlat
nop
sub
lret
mov
sbb
jb
or
dec
ret
jnp
cmc
test
out
dec
add
aad
cmpsl
pop
jl
mov
sbb
mov
xchg
lret
lcall
cmc
stos
jno
mov
ror
push
cmc
scas
mov
bound
mov
orb
push
pop
inc
pop
lods
popa
mov
mov
loopne
cld
nop
mov
mov
mov
cmp
dec
mov
arpl
sti
out
gs
sub
xorl
sbbl
push
inc
push
lahf
out
cmpsl
mov
ftst
rclb
das
jge
push
push
push
push
repz
std
insb
xchg
data16
sbb
rorw
mov
or
inc
mov
mov
insl
mov
jo
mov
lahf
sbb
arpl
xchg
fs
lods
sahf
cwtl
pop
xor
mov
or
lock
fisttpl
iret
pop
jbe
mov
sahf
out
shlb
adc
scas
jle
add
dec
inc
pop
std
fucomp
and
cli
ljmp
mov
je
jne
repnz
mov
lds
lods
pop
adc
iret
xchg
insl
cmpsb
jns
sbb
inc
sub
push
xchg
rcr
inc
js
mov
mov
cmpsl
mov
jmp
jae
mov
cli
bnd
lea
cmpsb
daa
cwtl
frstor
testb
xchg
xchg
mov
mov
in
jge
or
mov
out
jle
add
inc
push
call
cmp
inc
outsl
and
mov
test
rcll
add
test
jnp
or
lea
int
push
loopne,pn
repnz
push
lods
jb
and
lret
cmc
ret
push
adc
dec
and
or
mov
pusha
jl
ds
pop
out
lds
adcl
call
add
mov
sub
dec
xor
pop
pushf
pushf
gs
mov
movsl
jg
cmc
xchg
jecxz
rcl
mov
jbe
and
in
or
and
pop
and
xor
insb
push
xchg
or
mov
stc
push
js
and
add
subl
lods
mov
cmpsb
lds
cmp
test
outsb
loop
cmp
mov
xor
xor
fisttpl
push
test
push
jns
insl
loop
sbb
ja
test
or
lock
das
sarl
mov
jb
sub
mov
or
jae
cmp
sbb
repz
loopne
mov
inc
mov
or
das
cld
aaa
or
mov
inc
adc
inc
and
mov
ljmp
and
xlat
mov
inc
mul
into
pusha
stos
adc
jns
mov
sbb
insb
lret
xchg
jns
and
lret
icebp
mov
mov
pusha
scas
hlt
dec
ret
mov
cmp
cmp
adc
or
mov
stos
xchg
cmpb
in
test
mov
andb
jge
andps
rolb
mov
xor
js
mov
frstor
pop
cmp
lods
mov
pop
mov
push
push
mov
ja
pop
arpl
inc
cmp
loope
ljmp
pop
jl
fisubrl
adc
sahf
rorl
mov
or
xor
mov
mov
fdivl
fcoml
add
add
xchg
dec
shll
jnp
lcall
mov
push
lret
xchg
js
loopne
out
cmc
inc
mov
lret
in
inc
cltd
or
cmp
divb
pusha
dec
cld
sarl
imul
cmc
insb
pop
dec
xchg
cs
out
or
lods
adc
fmuls
push
xchg
dec
sti
push
lahf
or
fwait
cmc
inc
sbb
cmpb
or
loopne
dec
push
push
insb
push
jle
aam
aas
push
hlt
dec
idivl
xor
sbb
insb
imul
or
sahf
cmp
jb
mov
imul
dec
pushf
push
and
mov
fs
inc
cs
and
dec
push
jo
or
mov
lods
push
out
cmpsl
jmp
and
ds
xor
mov
push
inc
mov
pusha
ss
lcall
pop
lock
jl
test
sub
add
push
insb
cld
add
into
add
imul
cmc
jp
xor
aas
lods
jl
xor
repz
xlat
dec
loope
and
jne
js
inc
and
mov
and
xchg
push
mov
sbbl
test
add
or
stc
cmp
xchg
scas
mov
shlb
leave
mov
cltd
mov
mov
jg
push
push
lahf
pop
sbb
add
pop
inc
ret
rcrb
pusha
mov
push
xor
std
push
sbb
inc
sub
in
js
xor
aam
adc
and
xchg
push
mov
cmc
jns
or
xor
out
cmpsb
jb
test
test
mov
mov
mov
test
mov
out
mov
ds
and
bound
add
pop
pusha
add
out
filds
aam
xor
into
jns
fidivs
fisubrl
mov
sti
mov
sub
push
stos
idivl
xchg
dec
inc
sbb
pop
jo
xchg
pop
imul
je
nop
mov
lret
push
xchg
cmp
sbb
ja
xor
iret
lahf
xchg
mov
xor
cmpsb
mov
pop
sub
cmp
std
popa
in
jb
inc
cmp
cmp
arpl
jne
xchg
ja
inc
mov
outsb
loopne
lods
cmp
cmp
inc
jae
and
mov
push
into
mov
pushf
repnz
popa
cmp
xlat
sahf
addr16
daa
rcrb
mov
cmp
push
fsubrl
jg
test
cli
jl
test
push
icebp
mov
adc
imul
push
push
mov
icebp
mov
and
jo
push
out
sub
sub
ja
dec
sbb
jo
iret
xchg
test
xchg
jo
cltd
xor
xor
mov
popa
pop
inc
sbbl
das
add
mov
pop
movsb
push
pop
xchg
dec
out
cmp
pop
iret
jo
mov
loope
jle
sbbb
xchg
or
dec
push
and
outsb
add
shlb
pusha
outsb
iret
push
mov
std
ja
test
inc
sub
outsb
pop
jb
rorl
lds
cld
popf
inc
xchg
jp
jge
or
pop
jbe
and
loop
or
jo
dec
push
jecxz
cwtl
mov
pushf
mov
cli
xchg
idivl
mov
loope
jge
iret
add
xor
fsubrl
or
icebp
adc
out
ret
mov
or
sahf
push
xorb
js
jecxz
icebp
pop
sti
mov
dec
fwait
imul
jno
fs
adc
std
pop
mov
fnstsw
push
mov
lret
adc
pop
inc
cmp
xchg
mov
mov
xchg
jae,pt
push
fsubl
mov
sub
mov
jmp
js
xchg
in
jge
imul
enter
sbb
xchg
aaa
pop
hlt
nop
mov
orl
pop
ja
aam
pop
xchg
or
je
inc
out
test
adc
pop
adc
cli
mov
lds
les
fnsave
lret
adc
and
pop
jl
cmpsb
inc
imul
pop
das
pop
or
inc
fwait
sahf
push
mov
push
pop
mov
sbb
testl
or
daa
scas
pop
not
jae
fsubs
xor
mov
sub
xlat
xchg
sub
mov
push
sbb
std
mov
push
jne
sbb
mov
cmp
or
dec
xor
mov
je
pop
orb
leave
sub
sbb
jle
mov
mov
add
mov
add
lret
sub
xor
stc
rorb
arpl
cld
add
dec
cwtl
daa
mov
mov
and
cmp
sub
lea
fs
push
cmp
rorl
imul
cmc
jle
imul
push
rcrb
rol
push
pop
sbb
cltd
add
mov
jle
mov
and
in
jecxz
aad
js
bound
add
bound
mov
cmp
add
and
jge
pop
in
test
jae
pop
pushf
cmc
mov
mov
xchg
mov
adc
lcall
mov
js
test
dec
sub
call
jbe
das
out
ja
sahf
movsl
mov
adc
adcb
xor
mov
inc
andl
jb
fs
xchg
push
pop
mov
std
gs
mov
xor
and
ret
repz
sbb
ljmp
les
lea
sub
adc
les
jl
leave
dec
loop
lcall
aad
or
loopne
mov
mov
sbb
jecxz
and
add
decl
dec
ret
hlt
pop
decb
pushf
jmp
or
xlat
fildll
dec
mov
xchg
dec
lea
enter
fs
add
sbbb
icebp
js
shrl
lret
cmpsl
pop
push
popf
stc
popa
bound
mov
aaa
push
and
gs
push
loop
loop
push
in
test
push
cltd
popa
jge
mov
sbb
lods
pop
jns
popf
xchg
int
fdivl
cmpl
jo
xchg
pop
push
jo
inc
mov
cld
das
sbb
mov
jp
scas
push
push
fdivrl
enter
out
lods
fs
mov
mov
or
pop
xlat
mov
jno
and
cmp
test
stc
xor
sub
adc
iret
or
pop
repnz
pop
imul
pop
add
clc
mov
cmpl
nop
pop
or
mov
pop
jne
push
aas
in
into
push
test
or
push
arpl
lods
and
out
je
fdivs
and
or
bound
pop
jbe
jecxz
cmp
sahf
xchg
fcoms
xlat
adc
orb
push
xor
pop
jg
push
cs
std
fsts
dec
cmp
mov
pop
out
mov
lahf
xor
add
js
jecxz
daa
adc
pushf
xor
pop
fmull
push
push
push
test
cmpsl
lcall
and
jg
enter
jmp
xor
imull
mov
std
pop
inc
lds
cmc
out
pop
or
outsl
mov
fistpl
lret
cmpsl
add
cmpl
push
jg
xor
mov
or
xchg
push
fidivrs
negl
dec
or
pop
rolb
shlb
and
ja
push
cli
aam
xchg
adc
daa
divb
aam
mov
pop
dec
mov
add
stc
mov
push
mov
in
jns
xor
aam
iret
push
xor
mov
rolb
sub
mov
mov
jle
mov
jo
repnz
mov
mov
aas
mov
lahf
push
jbe
jle
dec
xor
xchg
adc
imul
out
push
andl
or
out
mov
in
popf
dec
shl
arpl
cmp
and
ffreep
cmp
scas
mov
and
fcom
mov
dec
mov
lahf
aas
pop
aad
rcr
xor
mov
hlt
mov
mov
dec
inc
or
xchg
in
adc
int
lock
iret
cmp
loop
add
imul
mull
movsl
out
and
xor
andb
add
lods
mov
add
inc
loopne
mov
iret
leave
cmp
and
jo
out
add
notb
std
adc
testl
movsl
mov
jp
test
addr16
adcl
xchg
pop
loope
mov
aas
jge
inc
and
dec
sbb
mov
xadd
les
ret
iret
dec
test
add
mov
xchg
dec
or
pop
je
aas
gs
inc
pop
mov
ret
and
inc
mov
and
pop
xchg
stc
pop
jns
insb
pushf
insl
fistl
push
xchg
mov
roll
fs
cmpsb
hlt
fucomi
enter
cmp
push
cmpb
xor
pop
cwtl
inc
cs
test
pop
or
add
xchg
mov
jmp
cltd
addr16
or
push
push
or
adc
loope
or
push
int
out
lret
push
movsb
shll
addr16
mov
pop
enter
movsb
sbb
xor
enter
pop
data16
mov
inc
leave
shlb
imul
out
add
bound
call
insb
cmp
jmp
cmpsl
sub
and
outsl
stos
ret
mov
out
and
or
xor
rorb
or
imul
mov
mov
int3
sub
lods
push
jp
adc
cmp
lods
add
inc
enter
fisubrl
fwait
outsb
cmc
lds
scas
mov
add
inc
mul
sahf
pushf
push
ss
dec
movsl
add
dec
or
call
xor
shll
sub
inc
subb
out
je
mov
mov
mov
mov
mov
ja
inc
cmp
icebp
out
ds
push
sbb
mov
mov
xchg
dec
int3
in
cmp
call
sub
rcrb
repz
js
or
popa
and
xor
mov
inc
jmp
fs
pop
push
sub
data16
out
sbb
and
sahf
testl
xor
test
sbb
sub
sub
lds
in
add
mov
sub
imul
lret
daa
fdiv
or
cmp
add
mov
clc
cltd
shl
cmp
bound
leave
repz
sbb
ds
pushf
out
jmp
rcrb
jne
insb
inc
sbb
mov
fdivs
mov
pop
inc
adc
jno
cmp
stos
jo
and
in
insb
roll
xor
push
dec
stos
mov
aaa
jl
adc
dec
inc
pop
lret
and
pop
jge
mov
in
pop
and
xor
fistps
adc
push
inc
jmp
lea
ret
and
sub
or
test
ret
jp
andl
mov
pop
mov
stos
fsubs
je
pop
fstpt
push
inc
bound
dec
cmpsb
cmpsl
out
push
lea
sbb
hlt
jl
dec
notl
sbb
add
daa
cmp
sub
mov
es
mov
insb
or
jecxz
jae
mov
and
loopne
mov
stos
lahf
movsl
jg
jecxz
cmp
adc
push
orb
lcall
cmp
push
inc
add
mov
cs
ret
les
daa
or
or
or
push
dec
movsl
scas
jmp
or
lret
jle
lods
fbld
shll
xor
loope
mov
cmp
rclb
fisttpll
mov
ret
push
hlt
fisttpl
cmp
push
fisubrl
repz
pop
fistl
cmp
xchg
mov
pop
add
jb
stc
lods
in
cmp
test
jg
ljmp
push
inc
aas
cmpsl
imul
adc
or
mov
orl
mov
push
pop
pop
icebp
fs
les
dec
mov
dec
mov
sti
pop
dec
cmp
inc
dec
mov
xchg
sbb
decb
fcoms
movsb
out
push
mov
stc
jmp
pushf
nop
push
sub
sarl
xchg
pushf
xchg
cli
xor
sti
aaa
fsubrs
loopne
mov
out
arpl
jnp
mov
js
sahf
push
adc
pop
stc
adc
sbb
push
xlat
subb
shlb
cltd
out
mov
mov
iret
stos
jne
lea
js
fimuls
out
fwait
inc
mov
sbb
adc
jge
sub
mov
cmp
push
jne
mov
dec
ds
pusha
mul
sti
sti
popl
test
idiv
aaa
sub
dec
push
push
pop
inc
pushf
mov
sarb
and
out
inc
xor
cld
imul
and
pop
adcb
jnp
ljmp
mov
ficoms
xor
or
mov
lret
jmp
or
mov
dec
aam
xchg
scas
mov
imul
ss
jp
add
adc
sti
xchg
dec
outsl
dec
dec
mov
mov
jnp
dec
popf
pushf
push
and
inc
sub
and
add
sbb
inc
imul
ret
cld
xor
inc
dec
lods
fistl
sub
mov
in
add
in
arpl
fistpl
lock
dec
pop
repnz
dec
std
mov
rorl
fwait
add
rolb
das
sahf
scas
mov
mov
ret
and
and
and
xor
icebp
mov
sub
lds
adc
es
lea
add
xchg
or
jmp
in
lahf
sbb
mov
push
dec
push
dec
icebp
jne
lahf
mov
sub
in
xchg
inc
fs
push
mov
call
adc
xchg
fdivs
and
ljmp
insl
aaa
incl
repz
mov
adcb
inc
outsl
clc
repz
pop
mov
adc
stos
inc
popa
insb
mov
cmp
or
and
and
addr16
loop
lods
shl
repz
movsb
xor
add
shrl
add
out
pop
popf
and
lret
pop
jo
jns
xor
xor
lea
sarb
sub
inc
in
out
loop
sub
sub
sub
xchg
or
xor
sub
test
scas
mov
xchg
test
mov
sbb
sti
std
cmp
jl
cwtl
movsb
xchg
in
xor
lods
icebp
mov
jge
fdivrs
lret
cmp
lahf
ja
ret
fwait
mov
repnz
pop
sti
in
nop
js
dec
push
push
jae
repz
rcll
push
lock
cmp
mov
pop
mov
outsb
sti
dec
and
xor
in
inc
scas
outsl
rol
mov
aam
mov
push
or
in
dec
mov
fsubp
dec
or
xlat
pop
cmp
aam
lret
cmp
sahf
mov
loopne
push
outsb
add
sbb
cmpsl
stos
jae
xor
or
shll
pop
and
add
aad
jmp
jmp
inc
data16
out
pusha
mov
push
cmp
xchg
add
jnp
ja
push
mov
sbb
out
and
mov
xchg
into
lock
cmpsl
sbb
movsl
cld
mov
js
test
sbb
xlat
add
jae
push
sti
cmpsb
jmp
mov
xor
movsl
movsl
mov
je
jle
lock
jmp
mov
mov
xchg
xchg
cmp
jg
cs
mov
rorb
and
add
mov
stos
xchg
jg
lret
push
jno
cmp
cmp
or
aad
call
popa
sub
jecxz
dec
xlat
call
pop
cli
cmpsb
and
mov
mov
lahf
jle
nop
jmp
sub
xor
test
clc
inc
sbb
xchg
pop
jb
stos
fbstp
ret
sub
cmpsb
mov
stos
rorb
movb
lahf
ret
pop
xchg
jne
faddp
lahf
mov
int3
aas
fs
xor
push
push
pop
stc
inc
rorb
dec
or
imul
outsl
jb
rcl
lods
add
outsl
sub
mov
inc
loopne
mov
pop
dec
aad
leave
pop
test
repnz
lods
cwtl
out
das
insb
sbb
in
inc
push
xor
sarb
push
std
shrl
cmp
pop
lods
xchg
in
insb
outsl
popf
push
nop
ja
cmp
ss
leave
pop
pop
loop
lods
xor
cld
shr
mov
sar
xchg
andl
mov
rcl
and
jb
inc
sti
xor
pop
push
mov
jle
jecxz
out
xor
lea
mov
xor
push
or
mov
fistpll
cmp
out
ret
imul
lds
inc
jbe
arpl
push
xchg
mov
out
ljmp
sbb
clc
rolb
aam
pop
and
sub
stos
dec
loope
adc
fstps
aad
fwait
addr16
pop
pushf
jnp
push
and
sbb
push
stc
jg
fwait
jmp
adc
cmp
pop
jecxz
cmp
xor
shll
cli
jp
or
lea
imul
je
arpl
nop
sbb
xor
insl
ret
popf
ljmp
adcl
lods
cmp
ljmp
adc
lods
mov
std
cmpsb
insl
out
les
xor
pushl
push
and
and
mov
cwtl
pop
inc
pop
cli
jbe
pop
lret
test
std
xor
fldl
push
xchg
xlat
test
js
sahf
outsb
adc
adc
pop
push
aad
or
push
iret
das
push
mov
test
fs
push
sub
data16
add
push
enter
add
cmp
fwait
sbb
or
or
int
dec
data16
or
xchg
cmp
push
push
das
scas
pop
sbbl
scas
sahf
pop
testb
fdivl
je
aas
push
fs
inc
xchg
inc
es
or
sub
and
call
leave
mov
push
adc
or
div
dec
out
sti
repnz
jmp
in
cmp
pop
cmp
repz
test
aas
mov
add
insb
jecxz
lods
lcall
jmp
popf
xchg
stos
xchg
xchg
adc
loop
insb
push
sub
fnstenv
inc
mov
jnp
sbb
dec
arpl
and
fxrstor
push
int
out
sbb
dec
lods
push
testl
add
mov
add
popa
sti
ja
lods
gs
fisttpl
hlt
jge
push
pop
pop
mov
push
mov
push
add
mov
adc
mov
repnz
mov
test
dec
pop
daa
dec
loopne
mov
into
add
shrb
flds
sarl
xchg
jno
pop
sbb
mov
arpl
mov
push
cs
and
mov
lea
bound
mov
sbb
popf
fildl
dec
adc
into
or
mov
clc
jge
xor
int
cs
fwait
jecxz
mov
cmp
js
sub
jne
or
cld
cli
pop
pop
rcrl
sbb
push
jmp
insb
sub
xchg
pop
xor
push
xchg
and
cmpl
push
pop
sbb
adc
sub
into
fisubrs
sbbb
lods
cmp
inc
scas
add
dec
mov
mov
cmp
pop
pop
cld
jbe
inc
nop
ljmp
push
js
sbb
fnstenv
das
and
nop
xchg
xchg
add
pop
int
push
mov
lea
std
jmp
lahf
sbb
xor
inc
lock
imul
and
cmp
push
cli
mov
sub
push
fbstp
push
push
imul
sbb
sbb
fcomps
sub
scas
jne
mov
or
notl
xchg
mov
cwtl
add
cmp
rorl
les
mov
or
push
into
or
test
hlt
shrb
or
jmp
gs
mov
arpl
cmp
enter
cmp
in
jb
jbe
loopne
call
sti
mov
mov
jnp
scas
hlt
jnp
lods
test
shrl
inc
or
push
inc
pop
add
pop
sub
add
dec
scas
xchg
mov
lahf
shl
adc
inc
ljmp
pop
aad
pop
jb
daa
int
bound
fbstp
cmc
inc
repnz
stos
adc
xchg
shrl
fwait
inc
xchg
pop
xor
aad
psubusb
call
adc
sub
push
clc
cltd
mov
fildll
popa
aaa
insb
pop
pop
div
sahf
jbe
mov
adc
jge
mov
out
sub
pusha
sbb
sbbb
pop
out
hlt
and
cli
mov
aam
jecxz
inc
adc
adc
arpl
cmpsl
xchg
inc
mov
pop
add
mov
clc
js
je
xchg
pop
cmp
and
in
arpl
mov
dec
cmpsb
xor
push
adc
nop
data16
scas
mov
jne
sub
ret
adc
xchg
ds
repz
dec
add
jge
xor
xor
ret
sub
out
shll
mov
es
jno
dec
mov
cmp
and
inc
push
jmp
xchg
ss
loop
dec
insb
ss
movsl
outsb
mov
cwtl
aas
fisubrl
adc
rol
pop
int3
push
dec
ljmp
push
mov
jb
mov
lcall
iret
icebp
xchg
push
rcrl
pop
mov
mov
mov
pop
sahf
fcoms
insl
push
mov
jo
nop
cli
push
test
sbb
sbb
aaa
pop
in
js
pop
stc
cmp
fwait
insb
mov
fcmovnbe
pop
sub
out
js
ja
clc
rcr
orl
mov
subb
testb
xchg
leave
adc
jle
dec
mov
into
gs
push
inc
jl
mov
sub
or
xor
or
and
pop
jb
or
inc
ljmp
mov
subb
push
or
loop
dec
cwtl
jbe,pt
shrb
or
or
pop
jg
jecxz
and
in
pop
add
xor
outsb
add
sub
push
cmpsl
test
inc
mov
addr16
xlat
shlb
lcall
mov
js
insb
je
inc
adc
lea
sahf
pop
jl
fldcw
repnz
inc
mov
daa
dec
jns
dec
push
push
int3
lock
mov
xchg
fdivl
icebp
btr
inc
sahf
dec
jmp
iret
and
gs
sbb
fstpl
mov
sub
mov
ret
lea
xchg
sti
inc
std
push
mov
sub
push
inc
ja
stos
test
std
push
gs
xchg
jge
ja
out
shlb
mov
add
clc
push
stos
movsb
push
mov
cmp
dec
mov
in
pop
ss
dec
ja
jl
mov
xchg
dec
rcll
jnp
loopne
jle
js
int
js
test
xchg
stos
inc
add
pop
imulb
add
and
rcrb
out
add
jl
out
pop
rcl
pop
repz
std
aaa
lret
adc
or
inc
push
sbb
push
push
sbb
ret
in
jg
pop
out
dec
push
inc
lds
mov
je
call
jnp
sbbb
lods
out
roll
aad
mov
pop
das
push
stos
dec
lahf
dec
cmp
loop
imul
lret
mov
popa
orl
dec
sahf
jge
fwait
loop
nop
inc
xchg
lret
dec
pop
cmp
mov
pop
mov
cwtl
test
mov
scas
push
stos
fisubrl
push
mov
es
mov
add
in
mov
push
dec
mov
bswap
pop
fs
pop
lods
rcll
xchg
add
fisttps
mov
lods
loopne
fucom
rcl
inc
jne
jb
dec
cmpb
jnp
cmp
imul
lock
inc
jmp
inc
lock
ljmp
pushl
cmc
stos
insb
test
add
inc
sbb
push
scas
bound
or
inc
ficompl
aam
in
ja,pt
movsl
fs
sbb
sbb
shl
fucomp
pop
int3
dec
bound
dec
and
sub
leave
daa
aad
push
cmpsl
ljmp
out
dec
pop
mov
and
pusha
in
sti
jg
negb
arpl
out
mulb
add
add
inc
out
sub
test
neg
inc
loop
aam
scas
jne
or
push
ret
xchg
sbb
jns
mov
sub
sub
lock
or
ret
push
sbb
and
dec
inc
fwait
aas
mov
jmp
nop
jp
imulb
mov
pop
fs
adc
test
and
jp
aas
mov
scas
stos
mov
dec
mov
jnp
inc
jb
rcrb
jl
xchg
mov
xor
cmp
addr16
insb
xorb
int3
adc
adc
stos
adc
push
push
xor
test
xor
xchg
gs
sub
pop
mov
or
div
fcomps
leave
xchg
test
loopne
dec
in
lret
rcr
adc
rorb
imul
xchg
jecxz
push
bound
xor
jo
jb
leave
inc
movsb
fdivl
iret
adc
mov
test
lahf
movsl
adc
jg
xchg
imul
ud1
stc
sbb
and
outsb
jecxz
push
pushf
orb
js
mov
mov
xor
push
pop
popf
inc
shlb
add
lcall
test
test
test
outsl
mov
push
pop
add
lods
mov
pop
add
push
or
icebp
rclb
mov
fidivl
inc
sub
lea
in
add
hlt
imul
sbbb
aaa
mov
pop
test
repnz
or
mov
out
fwait
loop
or
jecxz
jbe
mov
cmp
aam
gs
shll
lahf
sub
mov
ret
cmp
adcl
iret
dec
mov
incl
sbb
aam
ss
jne
cmpsl
ficomps
sbb
xor
ret
into
add
lods
rorl
nopl
xor
shr
xchg
xor
cmc
push
or
sbb
add
cmpsb
mov
mov
loop
push
popf
cmp
xor
insb
mov
add
pop
or
fimuls
outsb
outsl
dec
rcll
enter
cmpsl
ljmp
ret
loope
ja
xchg
cmc
fcmovnb
fcmovnbe
mov
ret
inc
lcall
lods
mov
lods
cmp
test
inc
dec
or
fnstcw
adc
orb
jmp
mov
lods
sbb
xor
leave
push
cwtl
sub
popa
enter
inc
push
aam
xlat
orl
stos
stc
sbb
push
and
mov
movsb
les
add
push
push
aaa
sub
stos
loop
push
call
jae
pushf
cld
cwtl
dec
mov
movsb
push
inc
or
xlat
xchg
repz
xchg
add
mov
aas
into
fidivl
mov
sbb
fisttpl
mov
leave
sub
movsl
add
cld
shll
repz
or
mov
push
lods
push
and
fcomps
dec
mov
cmp
addl
addr16
fcomps
out
insb
sbb
cmpsl
mov
sub
test
jbe
in
and
fsubl
dec
pop
jecxz
push
pop
adc
push
mov
imul
pop
push
mov
inc
cs
ljmp
imul
lds
rcl
xchg
mov
jp
xorl
icebp
int3
mov
xor
adc
add
out
or
cmp
ss
xor
fldt
push
push
add
push
ds
lock
jge
cmp
inc
aaa
add
or
cmpsl
adc
and
xor
xchg
shrb
arpl
sub
add
ljmp
push
jle
pop
mov
xor
mov
push
mov
adc
jb
fwait
aam
inc
xchg
icebp
pop
mov
nop
jg
and
or
jl
push
push
xor
inc
adc
mov
test
movsl
sub
xlat
and
cmp
fidivrl
adc
mov
lea
leave
mov
inc
mov
and
inc
push
mov
mov
rcl
and
push
xorb
cmp
rclb
lods
mov
xor
mov
pmaxsw
je
lods
orb
fwait
test
add
mov
adc
xorl
bndstx
add
sahf
ficoml
add
adc
cmc
cmp
in
inc
xchg
pop
cmp
jmp
xor
imul
dec
xchg
sub
cwtl
cmpsl
div
mov
rcl
or
insl
mov
jnp
jg
stc
movsb
or
repnz
mov
js
jle
dec
pop
cmp
add
test
pop
aam
add
pop
add
popf
icebp
mov
insl
push
push
fsubrs
pop
adc
and
mov
add
push
cli
lret
xchg
inc
ret
sub
insl
and
xchg
lods
jne
cmp
stos
add
test
mov
dec
popa
pop
push
xchg
dec
pop
cmp
push
mov
and
movsb
pop
icebp
sbb
icebp
bnd
test
push
push
in
xchg
sahf
sub
push
xchg
inc
aaa
jno
xchg
loopne
inc
sti
sbbb
insb
xchg
test
xchg
lods
pop
push
shl
dec
fstpt
mov
out
loope
inc
lcall
sub
lret
lods
mov
dec
in
insl
bnd
add
iret
mov
jecxz
adc
and
cld
jl
push
mov
data16
adc
jecxz
fdivr
stos
testb
in
mov
and
xchg
jmp
addl
ss
xchg
inc
insb
jp
hlt
and
or
lds
mov
out
sub
divl
scas
lds
pusha
or
mov
jns
out
jbe
pop
stos
testb
daa
not
or
gs
outsb
add
add
fbstp
aas
movsl
lcall
bound
sbb
sub
lock
sub
push
dec
daa
int
adc
push
aaa
loopne
fstps
inc
sbb
jle
test
outsb
cmp
not
cmpsl
cmpsl
and
ss
jle
imul
shlb
ret
movl
adcb
xchg
inc
fwait
loope
or
out
stos
add
lret
fsubs
mov
fsub
cltd
ljmp
cmp
mov
scas
push
rcrb
test
or
mov
xchg
push
js
loopne
sbb
test
sub
leave
daa
sbb
fdivrl
xchg
mov
push
int
cs
test
sbb
or
pop
cwtl
cld
inc
push
idivb
sub
jp
lret
add
test
inc
jae
out
sbb
andb
jmp
push
dec
repnz
xchg
lret
iret
lahf
push
dec
cmpsl
out
mov
roll
in
out
or
decl
add
inc
sub
jle
das
shll
push
out
jg
mov
push
out
movsb
and
xor
out
aam
jno
data16
cmpsb
mov
insb
leave
aaa
imul
lds
and
lea
in
cmpsl
loop
fisttps
mov
add
mov
inc
sub
mov
pusha
jno
leave
or
popf
cmp
fs
hlt
test
call
in
lock
mov
add
bound
aaa
or
pop
cs
jbe
adc
xlat
gs
push
aas
sbb
xor
test
incb
dec
push
and
test
and
pop
pop
lahf
loopne
loopne
call
je
lea
es
ret
cmp
add
ljmp
fbld
mov
jnp
cmpsb
lods
lahf
add
dec
ss
sub
ja
popa
jle
cmp
mov
pop
sub
lcall
xor
add
mov
je
decl
leave
imul
test
pop
add
mov
sub
jbe
lds
hlt
out
mov
cmp
das
cwtl
add
adc
movl
sbb
pop
xchg
test
int
into
stos
pop
inc
inc
test
dec
loope
ret
jl
push
sub
inc
mov
std
push
mov
les
mov
movsb
mov
stos
test
call
mov
subl
aas
or
or
and
mov
inc
hlt
gs
cli
ror
xchg
pcmpgtb
mov
mov
insl
sub
lock
imul
xchg
mov
add
cmpsl
push
test
repnz
stos
jecxz
out
sahf
sbb
pop
into
cmpsl
jg
repz
inc
push
repnz
repz
rcr
hlt
hlt
jnp
sbb
gs
and
roll
and
int3
sub
xchg
dec
mov
mov
in
lock
inc
xor
test
add
mov
sub
inc
xor
adc
arpl
test
adc
rorb
push
pusha
push
movsb
scas
stos
pop
clc
jno
mov
adc
mov
loop
push
or
stc
inc
addr16
lea
das
cli
leave
push
add
sbb
xchg
gs
push
insb
mov
dec
jmp
dec
adc
aad
mov
jg
lods
ds
push
cmpb
mov
mov
and
adc
push
call
adc
cs
addr16
in
nop
fdivs
mov
dec
jl
xchg
imul
addr16
cmovge
fcoml
lahf
mov
cmp
dec
lahf
in
iret
jnp
stos
jns,pn
pop
nop
pop
jge
jnp
stos
subb
das
or
cmc
aad
loopne
out
sbb
out
jae
in
xchg
jge
adc
ret
mov
or
faddp
push
movsl
pop
push
mov
add
xchg
cmp
sahf
rclb
jl
clc
sbb
pop
sarb
das
add
adc
mov
into
gs
xor
push
mov
xor
or
mov
les
outsl
sub
or
mov
add
inc
add
stc
cmp
mov
mov
fisubrs
jb
xchg
sti
rorl
rcll
and
lods
out
cwtl
ljmp
lcall
pop
repnz
or
pop
fiaddl
cmp
pop
lock
inc
daa
test
cwtl
jp
loopne
push
into
jmp
and
pusha
shll
iret
sub
xor
lea
mov
cmp
sbb
or
enter
loope
mov
mov
inc
lret
sbb
mov
pushf
pop
adc
loop
dec
mov
mov
lods
push
test
in
sbb
and
fcompl
out
test
decl
in
mov
cmp
jno
lret
fcoml
fiadds
int3
stc
lahf
test
add
pop
fildll
sub
leave
das
or
cwtl
cld
mov
xchg
popf
jg
negl
adc
sahf
inc
pop
cmpsb
aam
mov
bound
test
setl
xchg
lahf
in
push
add
cmp
cmp
les
pop
movsl
icebp
pop
add
adc
fcomps
push
roll
sub
fcmovbe
add
cwtl
popa
xchg
pop
pusha
je
out
mov
fwait
add
dec
js
push
rcr
stos
inc
cld
fcompl
ljmp
pop
rclb
mov
add
orb
stos
scas
sahf
pop
imul
and
jge
fwait
sub
pushf
dec
add
mov
and
mov
movq
repz
leave
rcrl
and
pop
mov
jl
imul
jbe
rclb
test
mov
ret
push
jnp
mov
cli
in
inc
xor
loope
sub
dec
sub
loop
pop
dec
jge
call
xor
push
jb
ds
in
mov
popa
add
cmp
inc
xor
adc
outsl
push
insb
push
dec
mov
stc
sub
lock
push
and
xchg
movsl
pushf
xchg
jae
das
cmp
aad
jmp
aaa
sub
rcrl
je
push
mov
adc
xor
fsubr
std
push
lods
outsb
fadd
dec
lods
jae
arpl
lods
dec
aad
insb
loope
sbb
ljmp
and
sub
mov
rolb
out
aaa
and
les
cmp
mulb
fsubl
and
cmc
push
subb
iret
mov
cmp
jmp
sar
insl
inc
mov
into
xor
xor
aas
daa
mov
push
out
int3
shrb
clc
inc
int3
or
pop
orb
pop
testl
push
xor
xchg
push
mov
jle
movsl
scas
xchg
out
inc
ret
fcoms
je
imul
jo
bound
or
fnstenv
mov
jno
jmp
popf
xor
out
pop
inc
jge
add
std
test
pop
sub
adc
popf
mov
and
sbb
fbld
leave
add
test
fisttpll
cmp
cmpsb
arpl
mov
sub
movsb
mov
in
sahf
test
or
stos
sti
xor
lahf
ss
inc
imull
loopne
jbe
fisubrs
cs
inc
fisubrs
stos
mov
ret
mov
cltd
sub
jle
mov
ficompl
push
stc
push
ds
push
fisttps
adc
bound
mov
dec
arpl
cmc
in
dec
cmp
mov
push
pop
sub
add
fnstsw
jae
lcall
push
in
or
bound
rolb
or
xchg
leave
mov
lret
jecxz
xchg
and
test
adcl
pop
stos
adc
cwtl
aaa
pop
in
sub
sbb
and
test
popa
mov
dec
or
mov
hlt
std
jae
mov
cmpsl
ss
popf
in
stc
ds
mov
jne
ret
subb
inc
sti
loopne
adc
fs
or
cmp
cmp
cmc
and
mov
ja
jmp
jecxz
adc
add
rorl
cld
popf
jmp
mov
in
jp
loop
popf
mov
fldt
enter
rcll
sub
sub
mov
add
rclb
shlb
fdivl
inc
jne
std
ret
dec
push
cmp
jb
mov
xorb
dec
out
jo
adc
cmp
xchg
scas
xor
inc
inc
in
and
dec
dec
sbb
hlt
push
fidivs
inc
adc
xchg
jge
adc
inc
cmp
int3
jp
sbbl
fiaddl
cmp
or
imul
xchg
into
add
cmpsl
in
lret
pop
in
jl
xchg
mov
pop
jae
hlt
fbld
xor
mov
and
cs
sub
xor
in
frndint
incb
fnsave
cmpsb
sarb
out
inc
dec
pop
ds
lock
in
enter
sbb
add
je
es
dec
stos
xlat
popf
fwait
push
daa
in
ljmp
or
aam
and
cmp
lea
outsl
xor
pop
xchg
jmp
sub
sbb
adc
mov
aas
pop
mov
cmp
dec
mov
loop
inc
add
int
in
ljmp
jecxz
and
cmp
or
int
in
out
out
fldt
mov
pop
imul
cs
inc
or
fistps
or
pushf
test
jo
mov
in
fdivr
xor
jns
xor
std
pop
fbld
lods
inc
and
dec
addr16
jnp
dec
sbb
lahf
pop
test
loope
pop
outsl
in
mov
adcl
stos
bound
mov
jge
cwtl
push
dec
faddp
adc
pop
mov
les
lret
mov
dec
lret
lcall
fsubrl
mov
jecxz
xchg
lea
dec
xor
mov
xchg
pop
push
aaa
or
xchg
or
pusha
test
xchg
sbb
add
cmpsb
adc
mov
gs
imul
pop
inc
jle
out
sbb
cld
movsl
int
sbb
push
push
cmp
and
cmpsb
lcall
and
adc
bound
mov
aam
add
or
mov
sub
cmpsb
mov
adc
push
inc
mov
cmp
je
lods
mov
pop
mov
cld
in
int3
stos
out
pop
adc
mov
stc
ret
int3
aam
lea
mov
cmp
jb
push
cmpl
fsubrs
pushf
and
pop
mov
xchg
ror
js
bound
adc
cmp
pop
jns
and
pop
scas
xlat
loopne
dec
xor
leave
add
mov
jbe
sbb
mov
or
dec
pop
icebp
cmp
xchg
aaa
data16
dec
sbb
or
jno
sbb
aaa
repz
mov
pop
shll
ja
pop
jl
jno
test
cmpsb
movsb
xor
repz
cmpsl
fwait
add
cwtl
jb
add
cmpsl
jno
push
popf
mov
fs
fisttpll
or
fmul
pop
pop
popf
call
je
test
lcall
hlt
out
inc
push
inc
jbe
sbb
rcr
ja
out
fdivrl
mov
push
pop
aad
loopne
nop
lcall
push
xchg
xor
test
into
ret
arpl
sub
cmp
lods
mov
aam
leave
outsw
sbbl
fists
sbb
cmp
mull
out
pop
iret
fwait
xchg
pop
bound
fiaddl
jge
es
or
daa
leave
negb
nop
push
push
aam
jo
sub
jecxz
mov
add
mov
out
daa
stos
testb
jo
imul
xchg
lret
test
sub
nop
leave
addl
adc
sahf
insl
fimuls
in
lcall
add
adc
out
addl
cmp
popf
in
cmpsb
jmp
test
inc
imul
sti
scas
les
xor
cmp
into
lock
call
xchg
icebp
sbbb
jp
mov
pop
loopne
icebp
mov
js
push
push
adcb
rcl
push
xor
add
ds
rcrb
mov
jg
cs
mov
testb
mov
stos
mov
mov
shlb
fidivs
aam
and
add
sbb
sbb
push
test
xchg
insb
loope
insb
stos
xlat
xchg
test
repnz
pop
lea
jbe
sub
lret
movsl
cld
inc
and
insb
or
sbbl
mov
fiadds
sti
fcmovu
mov
and
aam
push
fsubs
add
jge
mov
push
lock
dec
lret
lea
es
cwtl
incb
add
push
jo
shrb
xchg
mov
or
push
stc
subb
aad
fadd
dec
fsubrl
inc
and
icebp
push
jo
inc
outsb
out
xchg
pop
add
push
push
mov
push
mov
popf
mov
das
aad
sub
mov
stos
ja
test
mov
loope
push
jne
add
add
lods
mov
sarb
and
cmc
pop
push
add
mov
sub
cmc
ss
mov
jnp
inc
mov
test
cmpsl
orl
pushl
lahf
mov
aam
in
loop
fsubl
out
sbb
cmc
xchg
cwtl
cmp
push
imul
push
scas
shrl
and
mov
insl
sub
inc
adc
fidivs
adc
xlat
fldenv
ret
or
in
divb
inc
aad
inc
out
ret
int3
mov
or
cmp
cmp
xlat
sbb
xchg
xorb
loope
repz
notb
out
pushf
fsubs
enter
fsubl
lods
inc
data16
subb
push
subb
movsb
mov
fwait
lods
ret
pusha
dec
scas
mov
fiaddl
pop
mov
cwtl
dec
xchg
idivb
mov
xchg
jge
pusha
movsl
sbb
test
repz
aas
out
cmp
jmp
push
xor
in
nop
dec
xchg
push
jmp
imull
mov
pop
adc
pop
cmp
out
in
pop
sbb
jne
mov
outsb
adc
std
imul
test
test
test
mov
movsl
sbb
sahf
sti
fsub
enter
inc
xor
imul
and
pop
aam
ljmp
lret
sub
xor
xor
lock
sub
or
push
mov
lcall
jg
cmp
xor
std
mov
and
cwtl
dec
cmp
outsb
jnp
in
mov
imul
xchg
sub
mov
pushl
ljmp
jg
jne
aas
add
mov
popf
rcrb
sahf
sub
repnz
dec
int3
and
scas
lea
sarl
fdivr
int
mov
xor
orl
add
push
mov
mov
stos
xor
mov
mov
push
mov
test
jp
pop
out
or
adc
orb
adc
cmp
enter
arpl
jne
cmpsl
adc
dec
sbb
fldenv
pop
pop
sbb
lahf
cld
dec
dec
roll
out
push
out
inc
je
jo
mov
jno
cmpsl
jne
sahf
xor
cmpb
es
adc
xor
aad
xor
pop
ret
bound
out
lea
into
jg
inc
jp
mov
add
int
mov
xchg
sbb
pop
lcall
inc
loope
cmp
in
sti
test
pop
xchg
cmp
jns
outsl
imul
jmp
jmp
xor
inc
imul
xor
jb
and
out
sbb
lret
daa
lds
mov
push
push
rol
incl
inc
fsubr
lods
lea
fwait
shrl
inc
lcall
mov
aam
into
mov
movsl
push
out
and
push
popa
xchg
movsb
cmp
push
mov
sbb
adc
es
mov
mov
fisubrs
xchg
push
inc
xor
jle,pt
push
add
popf
push
pop
xchg
mov
jge
xor
and
stos
outsb
mov
cltd
push
jno
leave
dec
add
mov
xor
add
push
mov
movsl
sub
add
xchg
dec
lds
cld
pusha
mov
pop
cmp
jge
push
notb
sbb
stos
orl
or
jo
push
mov
mov
rcr
cmpsl
mov
dec
cmc
js
cwtl
in
outsl
xor
sbb
mov
mov
and
stc
xchg
out
push
divl
addr16
xchg
out
push
call
pop
je
or
imul
int
jb
out
jmp
gs
or
or
cltd
ror
cltd
hlt
lcall
mov
jmp
jae
gs
inc
add
movb
lret
call
add
leave
mov
je
movsl
outsl
in
sbb
jg
mov
popf
insb
xchg
out
lcall
ja
and
mov
sub
arpl
ret
mov
pop
bound
xchg
inc
jne
cmp
add
call
xchg
dec
fistpl
mov
popf
mov
icebp
sub
push
sub
fsubr
pop
jnp
test
hlt
or
mov
shlb
lret
mov
fnstsw
ljmp
je
mov
hlt
sbb
xor
push
push
js
mov
push
mov
daa
into
xorb
clc
push
and
push
sbb
dec
push
pop
dec
adc
mull
inc
lock
outsb
stos
roll
and
and
loope
js
outsb
mov
push
subl
mov
std
and
mov
pusha
xor
stos
mov
es
into
cmpl
outsb
lahf
lret
out
addr16
jl
add
and
cld
js
adc
test
dec
incb
push
xchg
popf
test
cmp
inc
push
push
mov
sbb
mov
dec
sub
subb
imulb
int3
dec
jl
dec
les
and
inc
cwtl
sub
sbb
pop
inc
ds
shrb
cs
divl
aas
outsb
cmovbe
fimuls
inc
nop
mov
pushf
aas
icebp
pop
mov
fcom
add
scas
lcall
insl
mov
mov
cwtl
inc
outsl
loop
dec
push
push
add
insb
daa
test
adc
cmpsb
inc
in
dec
inc
cmp
sbb
jge
inc
scas
loopne
test
add
or
xor
in
lcall
lahf
test
enter
cld
dec
jp
in
scas
test
or
pop
aas
mov
out
test
mov
xlat
push
aaa
xchg
inc
les
adc
inc
and
mov
add
lahf
jle
xor
cmpsb
push
push
jb
stc
std
sbb
lret
scas
enter
mov
movsb
sbb
add
mov
stos
sbb
jle
xchg
and
mov
imul
inc
push
jecxz
divl
and
mov
add
jns
pop
mov
cmp
lret
pop
push
lds
add
pop
jae
xchg
lods
mov
outsl
mov
sbbl
adc
push
push
loop
mov
and
out
xchg
pop
fnstcw
add
fistpl
add
idivb
lret
loopne
incl
insl
loopne
cmp
shll
not
mov
mov
loopne
iret
mov
mov
jl
xchg
xor
dec
inc
frstor
stc
xor
inc
lahf
daa
out
push
loopne
mov
je
in
cmpsb
add
test
lock
add
push
push
cld
out
int
adc
rorb
movsl
mov
insl
push
insb
pop
sub
shl
nop
pop
lret
xor
inc
and
mov
aad
jbe
sbb
mov
out
ret
and
sub
inc
dec
xchg
popf
or
or
ret
or
roll
ret
inc
push
imul
sbb
jae
mov
gs
outsb
adc
loop
xorb
push
fidivrs
cmp
loopne
cmc
and
and
lds
lock
loopne
inc
jo
push
iret
pop
xchg
xchg
pop
or
psubsb
jp
dec
xchg
mov
pop
xchg
dec
cmp
mov
lret
das
xor
test
das
lret
div
and
sub
inc
add
push
popf
xor
stos
mov
lods
push
test
jle
push
xor
dec
pop
xchg
pop
push
jno
fisttpll
fsubl
jne
add
test
sub
icebp
mov
mov
jne
rclb
mov
hlt
pop
lods
loop
push
push
push
jmp
daa
push
flds
mov
xor
mov
push
inc
cltd
les
push
cmp
shlb
add
aad
xor
cmp
aad
aaa
sbb
addr16
es
fisttpl
cmpl
jae
xchg
out
push
xchg
pop
jge
inc
cmpsl
out
mov
mov
add
jle
mov
xchg
sub
push
das
push
xor
in
xor
pushf
lahf
ds
lds
pop
and
sar
mov
dec
popa
cmc
xlat
bound
rcrl
cmc
aad
fcoms
pop
xchg
ret
cmc
inc
xchg
loop
adc
addb
and
inc
jo
xor
movsl
insb
fwait
in
pop
mov
dec
mov
divl
xchg
adc
jl
arpl
mov
cld
xchg
mov
shrl
shrb
data16
loope
jbe
or
negb
in
xchg
out
arpl
xor
or
jb
cmpsb
out
stos
jo
cli
out
xchg
xchg
add
xor
adc
jae
jle
pushf
shlb
sti
inc
and
pop
sbb
dec
jb
int3
lods
mov
or
test
mov
push
sbb
mov
movsb
push
xchg
insb
xchg
sbb
mulb
cld
pop
mov
icebp
js
cmpl
mov
jge
sahf
pushf
fcomps
mov
rorl
xchg
cmpsb
repnz
xlat
jmp
mov
fs
inc
es
pop
push
ud2
stc
test
and
call
bnd
push
xlat
ljmp
aas
pop
sub
mov
fucomi
mov
xchg
cli
or
daa
xor
mov
addr16
stos
dec
xchg
movsl
xor
mov
jae
push
pop
adc
pop
ja
jo
jns
add
nop
nop
stos
push
movsl
dec
in
jg
cltd
cmp
push
cmp
sub
ds
xlat
cmpl
jmp
pusha
test
xchg
mov
pop
mov
lret
or
ss
dec
and
sarb
in
in
mov
dec
insb
xchg
sarl
in
cmp
xchg
or
insb
pushl
lret
lea
es
inc
fs
jge
js
les
data16
lock
pop
insl
pop
scas
jns
jg
inc
jl
mov
dec
xchg
movsl
aad
adc
push
sub
jno
stc
mov
movsb
cmp
movsl
adc
xor
or
movsb
inc
shlb
fsubs
sar
lret
xchg
xchg
jg
inc
loopne
sbb
xor
into
sbb
leave
and
clc
xchg
pop
mov
adc
jns
aad
pushf
xor
addl
mov
pop
inc
add
push
test
xchg
or
xchg
xor
daa
jb
sbb
mov
std
sub
mov
xchg
fistpll
movsl
inc
repnz
push
mov
arpl
cld
push
push
int
mov
sub
sahf
jne
xchg
std
xchg
add
scas
pushf
clc
inc
inc
in
push
dec
fwait
aad
call
push
shrb
jge
sbb
jns
adc
int
xor
adc
frstor
mov
pusha
xchg
mov
loopne
dec
mov
fidivl
or
xor
lds
and
xlat
shrb
lahf
and
sahf
cld
cmp
cltd
xchg
xchg
popf
das
in
icebp
cmp
dec
test
adc
push
pushl
cmovns
and
push
mov
bound
les
xor
dec
jb
mov
pop
cmp
cmp
mov
jp
int
clc
cmpsl
shl
cld
mov
dec
fldcw
arpl
stos
inc
jb
jno
push
jmp
push
mov
ret
mov
lahf
pop
aaa
cs
dec
mov
lds
aad
mov
inc
adc
and
out
xor
push
js
sbb
pusha
stos
xor
fnstcw
xchg
ds
dec
pop
add
out
ret
mov
lock
jecxz
arpl
mov
jno
jecxz
mov
sar
pop
into
fidivrl
out
sbb
add
pop
jle
xchg
in
and
xor
mov
cltd
gs
daa
mov
mov
and
lret
xchg
cmpsb
adc
das
stos
fiadds
lods
mov
sub
mov
xorl
pop
jge
xchg
movsl
in
and
out
out
jge
cld
adc
insl
jo
mov
push
loope
ss
stos
outsb
pop
push
pop
ret
aas
sub
fisttpll
inc
shrb
sub
mov
sub
mov
daa
cmpsb
mov
push
stc
int3
andb
test
xor
inc
int
and
int3
push
xadd
add
mov
daa
cmc
push
aas
and
sti
and
fiaddl
nop
xor
ret
adc
gs
filds
xor
fcmove
sbb
pop
shll
cmp
mov
stos
iret
shll
pushf
pop
jp
mov
push
stos
xor
mov
or
and
arpl
addb
aaa
out
xor
rcll
mov
out
cwtl
imul
cmp
xlat
push
pop
cmp
idivl
push
or
sbb
cmpsl
out
stos
and
scas
add
add
jnp
movsl
insl
sbb
inc
pop
mov
cmpsb
gs
mov
adc
xchg
dec
repnz
lock
test
cltd
push
push
insb
xor
inc
lahf
inc
push
mov
push
or
push
idivb
icebp
repz
sub
mov
adc
es
in
call
aaa
mov
mov
clc
shl
pusha
cmp
leave
nop
mov
xor
add
insb
sbb
and
cmp
imul
fstps
aam
adc
shlb
clc
xchg
cmpsb
push
imul
inc
sbb
xchg
xor
pop
add
aaa
push
pop
xchg
and
idiv
rcrl
scas
sarl
sbb
les
js
push
sti
rcrb
dec
clc
jno
push
xlat
add
fidivs
jne
stos
test
jle
push
jmp
aad
jo
adc
ret
inc
xor
mov
out
add
push
mov
mov
sbb
std
ds
pop
fldt
jo
jb
pushf
lds
dec
fldcw
add
xchg
das
pop
lea
push
xchg
inc
repz
into
mov
addb
cmp
push
mov
lahf
mov
int3
sub
push
scas
add
cmpsb
mov
mov
jl
mov
test
jecxz
cmp
aam
sub
jge
adc
gs
and
data16
adc
xchg
insl
insl
xor
mov
dec
sub
int
sub
icebp
fidivl
jp
jecxz
cmp
add
adc
loopne
sahf
mulb
push
insb
xchg
hlt
dec
testl
pop
call
shll
into
adc
and
pop
sbb
xor
addr16
andb
xchg
mov
fsincos
icebp
push
nop
cmp
jnp
mov
xchg
jmp
cs
pop
xchg
loop
push
sti
pop
push
inc
dec
inc
shll
adc
pop
imul
push
int3
cld
sti
loop
mov
lcall
out
inc
roll
xchg
pop
xchg
or
jbe
mov
push
cltd
adc
rol
mov
stos
frstor
lock
mov
push
in
add
mov
out
lea
jge
repz
addl
int3
sar
rcrb
das
dec
ja
mov
sahf
sbb
in
popf
cwtl
into
jnp
xchg
pushf
mov
rclb
adc
cltd
adcb
mov
into
add
xchg
loop
dec
popa
bound
sub
push
mov
push
call
cmc
or
adc
rorb
int3
movzbl
mov
repnz
outsl
call
add
int3
shll
lds
mov
addb
and
mov
push
mov
sbb
xchg
inc
pop
xchg
add
gs
xchg
pushf
adc
inc
mov
ljmp
test
xchg
add
and
js
xor
inc
lret
sbb
scas
sub
out
out
sarl
test
xor
add
leave
ds
jp
add
ret
call
lcall
xor
mov
xor
and
pop
sub
xchg
or
shlb
jbe
pop
add
mov
pushf
mov
pop
popa
pop
cmp
push
pushf
inc
pushf
roll
cmp
lods
fs
repz
dec
pop
jmp
inc
not
xchg
add
lds
ljmp
inc
adc
cmpsb
je
cmp
add
stos
mov
mov
add
aas
rorb
into
arpl
or
push
lea
sbb
call
mov
ret
cmpsb
cs
or
or
pop
and
inc
mov
jl
sub
lods
mov
pop
repz
jnp
dec
std
dec
add
pop
sub
and
pop
cs
sahf
cltd
cmp
push
sub
in
loopne
dec
enter
nop
pop
sub
stos
lahf
aad
stc
pop
movb
das
jns
xchg
pop
mov
push
loop
hlt
divb
aam
mov
mov
sub
and
jnp
sbb
dec
movsb
xor
pop
mov
test
dec
dec
xchg
pop
scas
ljmp
mov
adc
cmp
xor
repnz
fcoml
fadds
push
push
in
imul
adc
mov
imul
movsl
cmp
pushf
sahf
pop
divl
stc
xor
test
adc
inc
bound
pop
xor
iret
lcall
sub
mov
push
dec
roll
lds
cmp
jnp
inc
imul
jge
scas
loope
ds
mov
xchg
cwtl
mov
sub
lret
jne
mov
dec
adcb
inc
adc
push
and
mov
dec
fstpl
add
subl
arpl
push
loopne
cmpsb
ficoml
aaa
and
push
int3
fsubl
aas
adc
fcmovne
push
enter
test
xor
bound
push
or
inc
add
lods
aaa
mov
rorb
xchg
mov
mov
jbe
or
imul
or
fsubr
gs
mov
pop
inc
push
jmp
dec
cmp
push
sub
jmp
lods
xor
push
dec
sub
sbb
push
sbb
cmp
imul
out
xorb
insb
cld
loope
out
inc
mov
imulb
dec
imul
or
std
xchg
jle
fs
loopne
xor
lods
test
jae
enter
out
fwait
adc
out
stos
mov
add
mov
sbb
push
test
mov
mov
add
xchg
je
notb
lods
rorb
negb
mov
sbbb
sub
jne
loop
sub
std
sbb
push
lcall
cmp
imul
pop
or
push
les
dec
adc
mov
sub
addr16
aaa
movsb
das
frstpm(287
sbb
ret
lret
inc
insb
leave
sub
sbb
ss
jg
mov
fimull
xchg
cmp
jge
cmp
dec
js
mov
cmc
xor
sub
in
cmpsl
and
test
mov
dec
dec
jg
mov
mov
test
add
int
dec
pop
fiadds
lcall
popa
or
pop
in
insl
leave
lods
cld
lahf
lods
inc
cmp
int3
js
xchg
int3
inc
cmpsl
imul
dec
cmpsl
mov
test
xchg
mov
bound
mov
adc
xchg
cmp
dec
popa
mov
out
mov
cmpsl
test
pop
aaa
mov
add
sbb
lret
mov
bound
mov
jle
ljmp
mov
dec
out
out
mov
aas
cmp
xchg
out
aam
push
push
cmc
mov
decl
push
cmp
mov
adc
cmp
xlat
inc
xor
sub
shl
leave
jmp
cwtl
pop
aad
inc
and
pushf
cmc
cld
xchg
shlb
cmp
sti
rol
or
push
repnz
insb
sbb
push
cld
notl
inc
imul
fidivl
add
cmpsl
xchg
sub
jnp
adc
pop
sahf
sub
dec
rol
mov
dec
popf
dec
dec
and
jns
adc
clc
enter
out
xchg
xor
iret
adc
adc
inc
fcmovnb
jge
sub
insb
lds
dec
sbb
inc
and
negl
out
mov
lahf
shlb
mov
xor
call
cmp
or
pop
xchg
inc
inc
out
orl
jp
cwtl
data16
int3
xor
push
aam
enter
imul
add
mov
repnz
loop
push
lcall
lods
iret
sbb
es
fistl
xchg
enter
shlb
ficoml
int
scas
xor
mov
and
les
fs
mov
push
jmp
xchg
loop
test
stc
stos
and
or
mov
inc
cmp
sbb
jmp
mov
or
jo
insb
mov
xlat
jne
xorl
lcall
test
mov
faddl
pop
adc
cmp
rcrl
dec
sti
loop
ds
lahf
into
jns
sbb
loop
rcll
push
lea
adc
repz
in
pop
jg
xchg
fwait
pop
insb
dec
enter
call
aas
cmp
ljmp
outsl
sbb
sub
jne
testl
mov
out
outsb
cmpsl
inc
mov
cltd
sbb
jl
nop
or
add
mov
cld
dec
fimuls
cmp
add
xchg
add
inc
mov
fwait
push
pop
mov
ficoms
fisubrs
push
movsb
add
mov
cmpsl
lcall
push
or
sbb
repz
push
or
cwtl
cmpsl
mov
jb
es
pop
xlat
sbb
pop
inc
test
in
mov
shlb
pop
popa
jne
mov
outsl
nop
lahf
fs
xchg
lods
into
mov
adc
cltd
xchg
repz
xchg
sbb
push
mov
inc
mov
popf
mov
jae
xchg
int3
mov
ret
pop
leave
pop
int
mov
inc
xlat
sbb
pop
mov
add
cltd
dec
add
ret
inc
cli
jb
or
mov
mov
adc
cld
add
hlt
mov
les
mov
test
push
loope
or
xchg
push
xor
sub
movsl
push
xor
test
pop
lds
dec
outsb
loope
and
push
push
aad
loop
cmpb
mov
addr16
movsl
xor
std
movsb
xor
iret
jb
jmp
mov
inc
out
sbb
jecxz
ljmp
mov
xlat
or
xchg
jge
cmc
jl
inc
xlat
outsl
mov
out
inc
sbb
sahf
mov
xchg
mov
aas
std
push
jo
movsb
xchg
push
shl
test
xor
movsl
pop
mov
mov
sarl
popa
add
out
lret
or
sub
in
xchg
xor
adc
rsm
jo
je
inc
lcall
loop
push
bswap
sub
or
cwtl
mov
movl
mov
cmpsl
repnz
or
pop
xor
xchg
add
push
lret
pop
dec
adc
push
icebp
insl
repz
aas
mov
push
je
pop
mov
repz
mov
mov
lret
adc
mov
pop
fwait
sbb
lods
dec
xchg
mov
xor
test
ficompl
lock
push
iret
push
mov
fucompp
aad
push
push
pop
dec
jnp
push
lods
inc
or
push
jecxz
jge
in
pushf
push
pop
in
loope
jmp
lcall
adc
out
inc
add
in
mov
clc
je
test
push
push
dec
or
loop
outsb
cmp
notl
adcl
jbe
cmp
jnp
inc
into
inc
loopne
cmp
mov
mov
inc
and
jecxz
dec
lahf
outsb
or
mov
les
aas
ja
fistpl
pop
dec
mov
xchg
sbb
call
jge
aas
das
scas
nop
mov
jecxz
add
insb
cmp
and
fidivrs
lea
int
xchg
ds
cmp
in
xchg
sbb
push
cmp
sbb
xor
xor
jnp
and
add
in
jg
std
ret
xchg
sub
stos
fcoms
fdivrp
out
fimuls
aaa
inc
sub
mov
neg
sbb
or
mov
mov
inc
and
and
mov
jmp
iret
jge
jecxz
cmp
or
adc
adc
xor
gs
push
daa
out
push
icebp
pop
icebp
xchg
sbb
je
push
int3
push
jns
dec
cld
xor
xchg
pop
pop
out
sarb
add
es
add
ja
adc
inc
jae
push
dec
push
aam
adc
sub
call
mov
xchg
add
or
xor
popf
movsb
mov
pushl
ja
lds
add
divb
cmp
sub
xchg
in
or
clc
sub
dec
mov
jle
hlt
out
and
ljmp
repz
jmp
inc
jne
fs
xor
jle
cmp
int3
test
xchg
out
add
push
xor
cld
add
mov
imul
inc
xor
xor
push
sahf
jl
add
inc
mov
sarl
and
cs
mov
push
push
lret
popl
sub
inc
and
loope
bound
xchg
mov
cmp
pop
lock
xlat
and
out
xor
add
and
call
push
sub
sbb
lock
js
dec
inc
popa
stos
aas
in
cltd
and
rclb
fsts
push
das
cmc
scas
out
jle
arpl
jp
xchg
mov
xchg
inc
testl
fcoms
fwait
aaa
les
cmp
cmc
sub
adc
lcall
ds
cs
mov
cmp
sbb
std
push
cltd
and
add
incb
repnz
mov
test
lret
test
inc
icebp
scas
cmpsl
test
lock
add
push
sarb
jle
push
arpl
fstps
scas
inc
xchg
lods
test
pop
push
add
inc
dec
pop
or
cmp
add
lds
or
pop
ficompl
dec
sbb
xchg
fst
jb
pop
fdivrl
adc
arpl
mov
lcall
mov
inc
sbb
lret
test
mov
inc
sub
sub
ret
loopne
fadds
add
icebp
ja
add
xchg
ss
xor
sbb
adc
cmp
aam
mov
dec
sbb
sub
push
xchg
adc
sub
data16
xchg
push
ja
inc
pop
sarl
ficompl
adc
out
ja
and
addr16
sub
incl
dec
cmpsl
fsubr
lcall
xchg
adc
les
dec
dec
stos
sub
mulb
sbb
inc
sbb
jle
lcall
mov
push
push
jmp
mov
xchg
out
add
mov
push
out
cmp
sbb
sti
cli
dec
adc
push
sahf
xor
inc
js
sbb
pushf
push
in
data16
mov
mov
xchg
shrl
mov
pop
dec
mov
jecxz
pop
mov
mov
push
add
push
push
mov
sbb
add
aad
pop
mov
inc
loop
imul
cmp
xchg
push
fistpll
xchg
out
daa
in
mov
stos
lret
cmp
ss
or
mov
jp
jmp
stos
jp
data16
adcb
jge
xor
mov
mov
dec
jmp
test
sbb
and
push
cmp
enter
push
dec
mov
jo
data16
lret
xor
movsl
mov
push
lock
fdiv
xor
loop
divb
addr16
out
aas
sbb
fistpll
mov
test
xlat
mov
add
xor
insl
xchg
out
pop
dec
or
mov
in
pop
fcmove
inc
repnz
lods
or
pop
mov
js
dec
xchg
ds
xchg
jbe
pop
sbb
push
cmpsb
push
mov
pop
push
mov
mov
inc
jne
mov
fwait
sub
mov
xor
sbb
mov
mov
sbb
adc
imul
mov
or
ret
mov
repnz
les
mov
mov
inc
loopne
xchg
inc
pop
xchg
mov
leave
fcmove
addr16
pop
popa
xor
mov
mov
pop
or
mov
shrb
mov
lea
push
lock
fcompl
mov
pushf
out
add
out
push
movsl
mov
loope
stos
shlb
dec
dec
xor
jo
mov
mov
and
xchg
dec
mov
and
adc
mov
idivb
ficomps
enter
or
push
and
pop
jge
fcoms
cmp
insl
sub
push
ret
es
push
lcall
iret
push
mov
scas
dec
mov
stos
push
orb
dec
dec
push
pop
pop
mov
lahf
addr16
xor
cmpsb
sub
ret
pop
jl
push
fcmovne
or
cmp
xchg
iret
lahf
nop
sarb
shrd
fldenv
hlt
cwtl
into
xor
pop
sbb
outsl
cmpsb
add
lret
cmp
cmp
fwait
mov
popf
fsubl
xchg
aad
jg
lret
icebp
int3
inc
aas
insl
aas
push
dec
pop
scas
adc
push
sbb
add
xchg
xlat
ret
inc
popf
xor
gs
dec
pop
clc
aam
sbb
lods
lods
push
test
add
ficoms
loope
lcall
test
sbb
inc
push
jge
xchg
cmp
dec
insb
leave
ds
mov
inc
rcll
mov
mov
mov
test
sbb
and
adc
jnp
gs
icebp
sbb
sbb
push
lds
push
jge
or
sub
xchg
int3
mov
fidivrs
push
pop
aad
dec
push
dec
out
stos
lds
mov
pop
jno
xor
daa
xchg
adc
xchg
inc
add
pop
pop
sar
mov
cld
mov
mov
xchg
data16
jne
add
sub
daa
loopne
push
les
and
lods
test
mov
rcrb
test
das
ret
xlat
mov
pop
and
shrl
and
jo
xchg
add
pop
inc
xlat
dec
insl
inc
fwait
jns
test
mov
mov
inc
inc
mov
in
lds
jns
iret
inc
cmp
xchg
and
jno
cmp
xor
pop
popa
or
mov
lods
add
mov
int3
or
incl
rclb
xor
and
push
and
mov
mov
stc
dec
xchg
cmpsl
iret
mov
xchg
xlat
iret
out
mov
in
push
xchg
xchg
fs
gs
mov
arpl
and
pop
push
leave
lret
addr16
in
clc
cld
push
sbb
push
outsb
js
cmpsl
xchg
addr16
les
jp
mov
or
jae
pop
push
cmp
decb
sbb
pop
fisubl
hlt
lock
jns
call
sbb
bound
adc
push
pop
lcall
setg
hlt
jo
sub
add
ja
lds
cmpl
or
push
add
rorl
push
jns
jns
xchg
add
xchg
add
jmp
aam
rcr
movsl
sbb
or
mov
xchg
je
xor
jo
jb
cmc
sti
xchg
pop
cmc
pop
je
popf
rcll
fs
pop
push
flds
jae
mov
test
jl
mov
jecxz
mov
mov
lret
sbb
pop
aaa
aas
pop
inc
or
mov
lahf
out
push
adc
fiadds
movsb
mov
mov
jle
mov
ljmp
mov
nop
fsubl
xchg
jns
test
lock
orl
dec
pop
xchg
push
mov
outsl
xor
xchg
or
xchg
xchg
xor
inc
pop
icebp
push
test
js
and
mov
lock
in
push
jo
sub
xchg
shl
jge
mov
hlt
mov
iret
xchg
push
add
hlt
jne
stos
jb
mov
lods
adcb
and
sub
mov
add
sub
lcall
stc
int
mov
pop
movhps
jmp
xchg
in
push
pop
movb
mov
js
add
xlat
inc
scas
and
stos
xor
pop
sti
in
jl
fwait
xchg
mov
mov
mov
std
daa
loopne
mov
and
lods
pop
mov
mov
push
jnp
lret
ret
jae
push
push
sbb
adc
scas
in
inc
jmp
stc
lods
test
adcb
sub
and
jns
fidivl
and
lcall
jo
aaa
or
dec
mov
in
ss
cmpsb
jbe
sub
dec
mov
push
cmc
lret
enter
cmp
push
jbe
out
xor
pop
dec
aad
enter
and
test
aas
fcmovnbe
xor
pusha
adc
mov
add
xchg
mov
popf
lret
xchg
das
push
sahf
mov
pop
in
nop
pop
jl
sbb
sbb
enter
stos
shll
pushf
mov
cmpb
push
dec
or
test
out
mov
rol
out
popa
in
cmp
inc
jg
mov
aad
mov
and
dec
cwtl
outsb
and
push
das
loop
add
mov
pop
push
dec
cmp
bound
cld
shrl
and
xor
and
inc
test
sbb
fucomip
mov
pop
test
fldt
adc
xchg
inc
pop
fcomps
inc
jb
sbb
mov
add
push
inc
inc
or
inc
stos
pusha
stos
cltd
cmp
out
cli
xchg
cmc
jbe
in
idivl
jcxz
dec
je
fucomi
xchg
pop
inc
scas
dec
mov
or
in
insl
cs
mov
not
inc
inc
inc
mov
adc
mov
mov
decb
mov
loopne
test
lahf
adcb
jno
push
mov
sub
pop
add
push
or
dec
push
jmp
jl
cwtl
out
pop
dec
popw
push
pop
ds
imull
stc
adc
int
les
and
or
in
outsl
push
jle
test
roll
xchg
and
nop
jne
mov
mov
sbb
stos
mov
jo
nop
jbe
xchg
dec
popw
add
push
jge
lcall
shll
xor
popa
add
iret
mov
cmp
scas
xor
xchg
xlat
cmp
addr16
scas
hlt
data16
out
adc
mov
mov
adc
bnd
in
and
iret
lret
aam
push
sub
repnz
push
or
stos
lret
imul
ds
loopne
xchg
push
fadds
and
daa
xor
adc
je
mov
fs
push
jmp
and
ljmp
and
shrb
jbe
dec
dec
ss
repz
test
push
fwait
arpl
push
mov
pop
mov
jae
loope
lcall
mov
cmp
dec
push
fildl
dec
mov
rclb
sub
popa
fwait
and
sahf
adc
mov
in
push
add
cmp
cmpsl
mov
jge
dec
xor
dec
adc
jp
cs
xor
jo
ja
je
ret
push
mov
adc
mov
lret
cmc
inc
push
into
xchg
insb
int
pop
xchg
adc
jb
xlat
movb
jl
adc
test
add
test
or
aad
inc
adc
mov
je
push
cli
in
pop
daa
hlt
xchg
cld
dec
outsb
jae
arpl
pop
add
fcmovb
fcmove
or
jno
add
lahf
push
xchg
sarb
xor
mov
out
aaa
dec
jg
inc
sub
adc
rorl
jp
test
xlat
cmp
imul
in
jns
out
jg
lock
ss
cltd
jno
cmp
or
sub
lods
movsb
sti
xchg
ret
aaa
add
and
cmpsb
sbb
mov
mov
movsb
divb
pop
xchg
or
xchg
int
outsl
out
lcall
outsb
imul
mov
xlat
lret
push
repnz
jg
cs
lds
subb
roll
mov
lahf
popa
mov
les
mov
push
addb
mov
dec
xchg
mov
mov
mov
cmpsl
stos
cmp
fbstp
lods
inc
ficomps
push
fmull
scas
fisubs
scas
adc
inc
in
movsl
loop
std
pusha
cltd
sub
dec
out
or
dec
jge
jnp
ds
stos
jne
stc
pop
shr
mov
jo
push
mov
lret
rcll
push
daa
loop
xchg
and
out
out
mov
push
js
sarl
xchg
mov
flds
xchg
jp
sahf
xlat
xor
push
lods
mov
mov
cwtl
cmp
pop
inc
dec
mov
mov
mov
sarb
and
and
call
loope
lret
mov
rcll
adc
fldl
add
sub
fstps
and
push
add
push
jnp
test
loope
push
outsb
fwait
je
push
popf
sub
push
pushf
sub
cwtl
mov
sbb
imulb
jg
and
fnstenv
inc
mov
jno
fcoml
mov
dec
and
adc
add
bound
xchg
mov
sbb
xlat
popl
jns
dec
sti
insl
in
adcb
dec
add
hlt
xor
jb
sbbb
mov
adc
dec
ljmp
or
or
fstps
test
add
scas
inc
jne
cmc
int3
jo
cli
lods
add
mov
dec
clc
mov
mov
insb
js
pop
sti
decl
dec
mov
mov
shll
outsl
daa
mov
popf
adc
rcll
enter
adc
gs
xchg
repnz
jl
or
popf
adc
xor
clc
in
mov
mov
loope
xchg
inc
ljmp
ja
leave
ret
ror
fcoms
mov
push
dec
adc
cli
and
push
dec
or
maxps
out
insl
add
rolb
push
pop
mov
dec
ja
inc
mov
mov
cmp
jno
loop
mov
mov
pop
pop
pop
mov
pop
and
cmc
loopne
mov
inc
sub
leave
movl
inc
clc
inc
into
pop
inc
push
sub
sbb
xchg
imul
add
jb
outsl
je
clc
mov
xor
jecxz
imul
xchg
pop
adc
test
xor
pop
out
ljmp
pusha
ret
push
push
xchg
add
mov
arpl
push
sub
and
scas
add
fwait
mov
sbb
inc
dec
xchg
fisttps
inc
fsubl
mov
mov
cld
loopne
aam
cmpl
push
jnp
and
add
jnp
sub
cmp
or
mov
and
mov
repz
popf
shll
cmpsb
and
jle
push
xchg
pop
jecxz
dec
jbe
and
add
ds
pop
sarl
xchg
imul
sub
sbb
inc
out
ja
xchg
stc
mov
mov
int
sub
movsl
cld
mov
xor
arpl
stos
xchg
xchg
js
lds
inc
jecxz
xchg
arpl
mov
fdivrl
fstpt
adc
repz
aas
scas
int
jmp
ljmp
dec
xchg
xchg
push
mov
xlat
and
jo
cwtl
in
fs
pushf
push
sbbb
lahf
fs
and
cltd
sbb
jns
pop
xor
pop
add
sub
pop
outsl
js
inc
int
shrb
mov
mov
cld
jl
repnz
pop
shrl
sub
out
int
cmp
mov
mov
int
bswap
fdivrl
in
or
aam
into
mov
fisttpl
dec
sbb
add
or
sbb
adc
push
aad
inc
push
lods
xchg
inc
fwait
dec
xchg
pop
adc
mov
sub
repz
out
gs
xor
sub
aaa
inc
fwait
mov
mov
sarb
sbb
jmp
shlb
mov
pop
pop
inc
push
cmpsl
cmp
aaa
pop
test
loope
cmpsl
ret
xchg
inc
mov
enter
cmpsl
arpl
mov
aaa
mov
daa
adcl
fsincos
xchg
aas
push
jmp
gs
push
jno
pop
jno
ds
leave
lahf
xor
test
sti
or
mov
pop
xor
arpl
pop
scas
mov
inc
fisubrs
mov
aam
dec
sub
jns
add
mov
mov
rclb
add
ja
xchg
fnstsw
jne
daa
xor
lahf
jle
xchg
in
repnz
inc
jmp
mov
xchg
or
hlt
rorb
jno
flds
fmull
mov
shld
sbb
jle
mov
test
ret
jno
dec
push
xchg
mov
inc
cld
xor
mov
jmp
arpl
xor
fsubr
cmpsl
mov
int3
lock
pop
mov
jl
aam
pop
xchg
inc
flds
jo
in
xchg
mov
stc
outsl
test
lea
xor
outsb
scas
shll
cmp
pop
ds
add
outsl
pop
push
mov
push
mov
xchg
gs
adc
out
add
adc
mov
daa
mov
xchg
stos
mov
dec
mov
jmp
sbb
xchg
mov
mov
dec
mov
stos
xor
xor
sbb
dec
jne
out
push
scas
andb
or
cmp
adc
cli
mov
or
push
xchg
sbb
inc
shl
jmp
rcrb
push
movswl
sahf
fdivrs
jl
insl
mov
mov
adc
cmpsl
mov
jae
adc
ret
lahf
push
xor
addr16
imul
cmp
xchg
ljmp
lcall
and
int3
push
into
fwait
pop
pop
aas
shlb
inc
test
lods
mov
lds
icebp
cld
pop
movsb
dec
mov
mov
nop
and
inc
and
jg
mov
lret
mov
push
mov
xchg
push
rorl
test
mov
cmp
scas
jmp
push
fstp
push
es
sub
jns
add
lahf
mov
push
rcrb
sbb
mov
dec
out
lds
jmp
jge
mov
mov
xor
in
jecxz
xchg
sbb
ficomps
add
pushf
adc
cmp
scas
shr
test
xor
pop
inc
mov
jnp
dec
sbb
cmpsl
test
mov
mov
mov
sbb
or
sub
test
sub
jge
cld
pop
mov
nop
fchs
mov
inc
pop
fldt
and
mov
jle
lahf
add
add
mov
pop
movhps
jnp
shrl
jle
pop
cmp
inc
pop
cmp
push
test
int3
fildl
clc
mov
jle
xorb
mov
imulb
idiv
and
xor
jno
cmp
add
sbb
test
jl
pop
aad
cmp
xchg
push
dec
in
insb
cmpsl
cld
xor
xchg
jae
mov
aam
mov
inc
adc
scas
shlb
mov
jbe
mov
mov
aaa
pop
inc
push
mov
pushf
cmp
mov
push
mov
mov
mov
out
hlt
mov
enter
pop
stos
pop
push
fdivl
out
jb
dec
push
in
xchg
fndisi(8087
lods
movsl
sbbb
adc
adc
push
xor
cmpsb
add
cmp
cld
and
xchg
bound
dec
idivl
das
add
in
outsb
adcb
dec
loop
aad
and
test
lods
int
test
mov
xchg
dec
imul
add
cmp
test
pop
andb
push
mov
and
cs
outsl
xchg
popa
leave
adc
inc
frstor
push
push
ret
movl
xchg
add
mov
popa
das
ja
arpl
mov
sbb
rcrb
movsl
clc
dec
dec
nop
mov
arpl
inc
mov
or
dec
jmp
nop
add
shrb
adc
lcall
testl
xchg
inc
mov
aam
test
stos
pop
mov
pop
mov
out
out
pushf
test
mov
mov
sub
mov
xchg
shrb
outsb
js
xchg
adc
into
shr
mov
fisubs
sarl
adc
cltd
sti
dec
orb
mov
sub
jns
inc
sbb
and
jl
insb
jl
shlb
add
adc
adc
shr
sbb
rcl
movsb
sbb
pop
jo
sbb
pushf
dec
mov
lahf
adc
adc
sub
in
inc
ret
mov
mov
inc
das
dec
sarl
xchg
ja
lods
icebp
cmp
xchg
lock
inc
add
pop
inc
add
mov
lds
cmp
inc
adc
add
sub
call
pushf
xlat
mov
pusha
negl
rorb
jmp
jnp
shll
mov
mov
or
test
pop
adc
cmp
push
fildl
push
call
pop
cmc
or
sti
xchg
adc
pop
cwtl
sub
jle
mov
xlat
insb
dec
xlat
inc
testl
push
dec
cmpsb
and
mov
fisttpl
flds
pop
jo
pop
ret
jae
ja
sbb
stos
cmp
ret
gs
add
pushf
pop
dec
loopne
call
test
cmpsb
xchg
stc
or
daa
dec
shrl
mov
mov
or
les
push
les
or
sbb
xchg
shrl
lods
mov
xor
cmp
sub
sub
jl
push
sub
cmp
dec
out
jne
cmp
lret
mov
notl
jle
xchg
ja
jg
mov
mov
sbb
addl
shl
lods
lods
pusha
inc
outsl
mov
fnstsw
or
pop
xor
xchg
mov
xor
fistps
fstl
je
outsb
sub
popa
fcoml
into
push
push
jle,pt
xchg
aam
aad
pop
cmpsb
cmp
xchg
cmp
pop
adc
pop
inc
pop
push
in
xor
pop
cmc
andb
mov
daa
mov
mov
push
in
lock
jmp
inc
pop
loopne
test
popa
cmpsb
into
outsb
and
add
inc
xor
push
mov
inc
mov
pop
hlt
or
in
mov
pop
outsb
mov
test
adc
mov
popa
in
imull
push
int3
jecxz
cmpsb
imul
ss
subl
les
call
or
or
orl
inc
or
mov
popf
and
idivl
xlat
sti
sub
mov
mov
push
gs
add
cmpsb
dec
dec
dec
push
mov
aaa
and
pop
inc
sub
xchg
fidivl
mov
mov
mov
in
mov
pop
jns
pusha
dec
jmp
jmp
movsb
dec
faddl
imul
jge
fsubl
in
xchg
xchg
rcrl
push
int
sub
push
sbb
icebp
xchg
cmc
iret
clc
lahf
fs
mov
pusha
out
mov
sub
jecxz
scas
push
mov
mov
xlat
ret
xchg
xor
or
mov
lcall
dec
xor
int
subps
mov
fcomi
push
jle
mov
filds
inc
inc
arpl
in
lods
loopne
jecxz
outsl
fiadds
mov
nop
dec
cmp
cmp
push
dec
cmpl
movsb
ja
pop
xchg
lock
pop
mov
mov
mov
or
xchg
cmp
movsb
ja
push
fcmovnbe
add
adc
jmp
push
es
cmp
out
lret
ja
adc
lret
out
sarl
or
adc
lock
fwait
cwtl
push
sub
add
mov
push
cmp
or
cld
mov
dec
and
push
xor
imulb
cmc
lods
inc
mov
gs
divl
and
xor
aam
mov
loopne
pushf
inc
shr
mov
pop
int3
push
dec
mov
mov
mov
scas
movsl
insl
lock
jo
cmp
dec
pop
add
nop
aas
iret
cwtl
shlb
mov
pop
out
jge
pop
in
mov
nop
push
imul
notl
mov
aam
pop
lds
shlb
les
jb
sub
dec
pop
xchg
xchg
addr16
les
adc
push
lea
pop
decb
rorb
popf
adc
mov
testl
inc
les
leave
add
rcrl
popf
loop
cmp
dec
call
pop
add
xlat
mov
in
repnz
and
outsl
jp
mov
xchg
and
mov
cmp
nop
in
aam
jbe
sbb
mov
aas
and
aam
add
les
jae
aad
xchg
sub
stos
out
pop
push
insb
cmpsb
in
and
int
adc
xchg
cli
aaa
cmp
push
cmp
icebp
xorl
jns
shrl
sub
cli
xor
dec
sub
push
xor
sbb
les
dec
fcomps
aas
fsub
sbb
movsb
popa
xor
lods
jmp
pop
ret
int
int3
pop
lret
adc
and
mov
sti
sub
sub
mov
xor
std
adc
jp
inc
sbb
shrb
pop
xor
int3
icebp
jl
mov
in
enter
js
sbb
jne
pop
nop
dec
xchg
or
jmp
xor
cwtl
and
push
mov
rolb
scas
cmp
rorb
into
insl
mov
pop
shrb
movsl
jg
lahf
fidivl
pop
shrb
std
negl
jae
test
lea
aas
ljmp
ret
and
or
into
xor
es
outsl
mov
popa
mov
int
out
dec
lds
pusha
cmp
std
jge
jecxz
adc
mov
push
outsb
movsb
and
int3
fs
insl
jo
in
cmpsb
lret
js
fildl
mov
stc
pop
cmp
mov
scas
mov
fdivrl
xor
loopne
and
xchg
mov
mov
or
das
or
cltd
gs
push
jbe
pop
mov
xor
xchg
mov
adc
jle
xchg
aaa
shrb
ss
mulb
daa
sub
imul
or
rcrb
stos
scas
sub
cli
mov
inc
adc
icebp
ja
and
sarb
sub
cmpsb
clc
push
adc
or
xor
xchg
push
pop
or
mov
inc
mov
jb
and
cltd
inc
push
mov
shll
add
cmpsb
mov
cwtl
outsl
aas
cmp
push
lea
pushf
pop
cmp
xchg
and
adc
lcall
add
iret
xor
cli
sbb
test
push
inc
enter
xchg
sub
mov
nop
cmp
dec
xor
cmp
stos
sbbb
fldcw
cmp
adc
sbb
and
adc
and
dec
pop
lret
jg
sbb
push
dec
pop
fstps
leave
repz
jns
fld
pop
insb
sub
adc
jne
fidivl
je
or
popf
pop
sti
popf
mov
stos
pusha
push
into
fistl
jle
idivb
and
lret
fucom
test
jge
nop
sbb
mov
mull
ss
push
out
sub
in
pop
pop
add
stc
enter
popf
xchg
dec
xor
mov
pop
int
cmpl
or
out
add
sahf
in
out
ljmp
shll
outsl
cmc
push
gs
xchg
cmp
es
pop
scas
fnclex
xchg
xor
pop
fistps
jmp
xlat
arpl
js
cmp
fs
inc
inc
mov
push
ljmp
pop
adcb
ds
into
inc
in
xchg
or
aam
shll
push
mov
inc
cmp
rolb
addb
iret
sti
stc
fisubs
out
cli
into
push
jb
imul
mov
bound
mov
test
jno
add
pop
fstl
xor
mull
push
xor
hlt
push
push
mov
je
add
in
jmp
es
xchg
int
dec
mov
stos
cmp
xor
push
cmpsb
dec
out
stos
fimuls
jns
xor
jae
mov
into
xor
hlt
pusha
xor
cwtl
mov
inc
add
mov
cltd
mov
test
stc
adc
and
jl
jbe
loope
fsubs
int3
xor
mov
cmp
push
add
push
mov
lods
add
inc
dec
push
loop
ret
inc
decl
xor
mov
lcall
xor
pop
jnp
es
inc
call
call
xchg
stos
mov
xor
sub
dec
stos
cmc
outsl
sbb
je
jge
inc
xor
xor
mov
scas
mov
push
push
repnz
daa
add
push
push
xor
xchg
lret
sbb
fiaddl
and
iret
repnz
jae
sbb
adc
in
andl
icebp
dec
sbb
idivb
inc
jb
psubusb
cmc
seto
subl
or
loopne
xchg
je
push
cmp
jge
jg
adc
lret
test
inc
jbe
shll
mov
push
imul
shl
inc
fists
clc
inc
lods
xor
sub
je
lcall
xchg
outsb
daa
ljmp
jo
push
in
dec
outsl
enter
push
cmp
sar
add
add
dec
shll
sbb
je
ljmp
xor
cmp
add
add
xchg
addr16
jmp
cli
leave
hlt
popf
pop
repnz
cmp
sbb
ds
add
adc
dec
sub
xchg
push
loope
stos
jb
out
sub
xor
xchg
mov
jle
xor
mov
mov
lds
stos
std
mov
into
les
and
mov
loopne
fnstsw
dec
jnp
jl
stc
xchg
int
in
sub
in
jno
lret
push
sub
xchg
inc
fnstenv
push
gs
outsb
pop
xchg
pop
ds
jle
lods
dec
push
imul
xchg
cmpsl
test
fbstp
mov
xchg
mov
stos
aaa
dec
icebp
mov
fdivs
jp
sti
pop
jo
or
scas
imul
gs
fdivr
jl
fst
pop
roll
or
dec
lods
fdivs
push
es
repnz
dec
mov
sub
je
std
xor
push
shlb
pushw
sub
or
or
aad
lods
dec
mov
enter
and
sbbl
xchg
cltd
fmull
sub
cmpsl
notb
and
cli
lock
inc
jle
xor
ret
pop
int
jmp
lods
in
sti
mov
sbb
mov
out
aas
divl
mov
xor
inc
pop
pop
xchg
cmpsl
inc
mov
dec
je
cmp
subb
sub
in
popa
or
std
cmp
xchg
pop
dec
inc
out
or
dec
pop
fs
ljmp
lock
push
outsb
frndint
or
dec
mov
scas
lock
pop
mov
or
jns
inc
add
jo
daa
push
fprem
jecxz
movsb
lods
xchg
xchg
sbb
mov
scas
jg
lcall
pop
rcrl
inc
cld
ss
push
xor
push
popa
sub
fcmovnb
dec
lods
and
test
stos
jno
dec
mov
cmp
js
pop
mov
ret
mov
jae
adc
mov
rclb
cmp
xlat
xor
bound
mov
lea
hlt
fstpl
mov
sbb
inc
les
jno
push
je
add
jno
js
test
lret
fwait
sub
add
or
xchg
sbb
imul
push
loopne
sub
ljmp
cmpsl
jp
ret
jbe
cmp
outsb
jne
cmp
outsb
sub
mov
call
mov
js
stos
sti
cmpsl
addr16
jnp
rolb
lods
out
or
sbb
push
ds
dec
daa
push
hlt
int
jge
or
insb
sub
push
mov
scas
or
rolb
mov
std
std
aas
mov
insb
fwait
inc
mov
test
lret
push
adc
xor
shll
insb
stos
adc
hlt
in
adc
scas
adc
and
adc
pop
mov
loop
cwtl
les
in
lcall
inc
idivl
call
cmpsl
popa
aas
mov
xorl
mov
mov
push
and
pusha
out
adc
add
push
xchg
ret
sub
pop
adc
mov
pop
cltd
mov
sub
sub
lret
xor
jp
add
or
jg
xchg
sbb
jle
cli
add
mov
jnp
pop
in
xchg
push
data16
cmp
sbb
movsl
fdivrl
push
pop
out
add
and
push
cmc
inc
test
mov
xor
and
and
jecxz
push
mov
xor
dec
or
and
into
jmp
fiadds
data16
cli
fucomi
or
arpl
cmp
sbb
mov
xor
xchg
cwtl
cmp
cmp
pop
sbb
sbb
jbe
jp
push
mov
fsubs
add
scas
xchg
lret
xchg
cmp
adc
stc
or
rolb
out
or
data16
lahf
fcompl
fldl
icebp
stc
clc
icebp
rcl
sbb
sub
inc
xchg
push
ja
inc
es
inc
sub
mov
push
adc
dec
leave
js
add
arpl
test
add
jmp
cmp
lcall
es
xor
test
in
add
test
push
mov
testl
gs
mov
shrb
hlt
shrl
pusha
push
add
pushf
loop
iret
sub
call
mov
call
in
add
stos
insb
dec
cmp
outsb
fstpt
cli
test
iret
jbe
xor
mov
ds
dec
mov
mov
test
int3
bound
dec
sub
push
xor
imul
mov
mov
lock
mov
fimull
dec
hlt
gs
or
dec
cmp
rclb
loop
pop
scas
dec
repnz
jbe
push
xchg
push
insb
lret
push
fldt
cs
pop
clc
insb
and
xchg
and
cmp
fldl
scas
or
ret
xchg
xchg
imul
inc
xor
pop
add
out
mov
dec
iret
addb
jge
popf
adc
jl
out
clc
divl
and
push
mov
ds
cmc
mov
xor
fs
addb
dec
push
notb
xor
outsb
lods
out
pop
sbb
jnp
pop
pop
loope
adc
add
xchg
add
js
cwtl
xchg
mov
call
popa
sbb
leave
xorl
ss
mov
dec
ds
sahf
push
sub
inc
imul
mov
adc
cli
loop
imul
test
sbb
pop
sti
lret
and
dec
loop
cwtl
sub
adc
shlb
push
push
fwait
cmpsb
leave
rcll
adc
enter
sub
mov
jns
icebp
cmp
rcrb
in
aaa
subb
icebp
add
scas
add
faddl
loopne
arpl
cli
xchg
aaa
push
inc
push
ljmp
push
push
jo
rorb
outsb
mov
ret
in
cmpl
out
jmp
sti
imull
push
mov
add
out
jmp
ficomps
cmp
xchg
fcmovb
loope
rcll
lcall
mov
push
xchg
mov
pop
pusha
fildll
arpl
enter
push
adc
rcll
daa
insl
stos
or
inc
daa
or
jbe
mov
mov
sbb
enter
add
in
ss
lea
fsts
jmp
cld
pop
sub
aad
sub
and
mov
push
jbe
jge
pop
pop
mov
sbb
and
scas
push
and
addr16
pop
push
mov
pop
test
int3
cld
fidivs
xor
out
mov
inc
popa
cltd
sub
push
mov
dec
jnp
xor
fnstenv
mov
lods
cs
daa
outsb
sub
stc
rcll
dec
std
aas
mov
pop
inc
ss
and
mov
sbb
pusha
out
int
das
jp
xchg
add
mov
mov
jmp
adc
out
jno
mov
pop
dec
lret
rcrl
sub
cltd
stos
add
push
lret
divl
sbb
cld
sbb
out
inc
out
xchg
sti
push
and
sbb
scas
dec
shr
jns
rclb
dec
jbe
sub
mov
adc
mov
pop
push
sahf
mov
dec
js
insl
cwtl
inc
xchg
sti
bound
outsl
mov
push
outsl
fistpll
mov
lds
add
jmp
ds
sub
mov
mov
fcmovbe
leave
pop
daa
or
je
push
xchg
mov
xor
xor
and
pop
cmp
aad
xor
add
mov
aad
adc
pop
testb
add
lahf
jne
lcall
fdivr
dec
pop
aam
dec
add
or
imul
js
aas
push
and
pmaxsw
in
dec
icebp
mov
jle
loope
sub
pop
cmp
test
cs
xchg
iret
nop
aaa
ss
lret
sbb
adc
fsin
pop
sbb
shll
repnz
jmp
pop
orl
ljmp
iret
and
sub
add
fmul
inc
pop
je
sub
add
xchg
sub
xchg
jnp
push
insb
jns
faddp
pop
mov
adc
popa
test
mov
mov
dec
shlb
cmp
mov
cwtl
iret
add
jno
sub
pop
test
gs
adc
daa
or
out
jo
jnp
cmp
jno
loopne
fstl
repnz
push
repnz
inc
mov
ja
cs
lcall
push
jae
mov
pushf
xchg
cmp
sub
sahf
pusha
xchg
sub
out
scas
xchg
pusha
call
addb
outsl
adc
daa
cld
scas
and
push
stos
in
mov
inc
pop
xor
insb
or
mov
and
xor
das
test
sti
inc
ss
add
shlb
arpl
cmp
jbe
xor
inc
xor
test
lret
cmpsl
xchg
insb
sub
inc
icebp
repz
cmc
cld
or
out
shll
insl
pop
cltd
enter
xor
sub
lods
mov
fldcw
sub
xchg
cwtl
sbb
mov
jmp
out
fcomps
xor
adc
outsb
int
pop
adc
or
fwait
push
sbb
gs
das
mov
mov
cli
nop
push
scas
andl
das
inc
mov
sbb
ja,pn
dec
dec
orb
xlat
inc
sub
xchg
scas
xchg
lock
icebp
mov
mov
addr16
jae
ja
test
adc
cmp
imul
xor
xchg
outsl
sahf
outsl
inc
mov
scas
add
mov
mov
xor
push
xchg
rcll
loopne
mov
mov
push
in
call
xor
je
pop
cmpsl
and
gs
jb
shll
inc
pop
and
mov
jae
pop
inc
test
mov
mov
cmp
fs
fsub
ret
lods
pop
in
out
lcall
and
out
scas
shl
mov
ljmp
gs
stc
fidivl
in
sbb
icebp
popf
sahf
loop
rorb
ss
nop
sub
rcrl
xchg
jno
mov
lea
fstpl
mov
lcall
pop
sbb
lret
sahf
dec
fsubs
mov
orb
ja
fld1
push
adc
or
xchg
push
and
mov
int
cmc
xlat
dec
repz
jmp
xchg
pop
inc
or
mov
cmp
pop
pop
pop
lea
subb
xor
xchg
mov
ret
cmp
inc
jne
icebp
fisttpll
icebp
xchg
add
add
or
lcall
push
push
insl
pop
shlb
sbb
pop
sahf
or
add
in
push
scas
ss
in
fs
lock
js
std
lds
lcall
cld
fldt
mov
xchg
mov
dec
lret
int
mov
lcall
and
in
add
cmpsl
bound
jp
and
push
stos
test
push
mov
adc
mov
dec
insb
movsb
cmp
sub
out
adc
in
fcompl
popa
push
jbe
enter
inc
aaa
lds
mov
pop
add
mov
imul
into
add
ret
push
jp
adc
mov
add
push
test
add
sub
xchg
jg
pop
jp
inc
in
sbbl
xchg
or
cmpb
push
push
push
daa
sbb
je
jmp
mov
and
sub
cltd
pusha
out
mov
or
mov
mov
stos
ljmp
jmp
cld
adc
std
cmp
call
ret
nop
in
dec
or
cmpsb
inc
mov
adc
fdivl
mov
sub
mov
add
sub
hlt
loop
mov
dec
cmpsl
sarb
mov
shlb
xlat
jnp
nop
cmpsb
cld
jne
mov
inc
dec
mov
aam
cwtl
mov
add
test
adc
insb
cmp
repnz
dec
les
mov
inc
movsl
lea
imul
shll
push
in
fistpl
imul
es
lret
add
dec
jne
jns
lcall
es
js
mov
iret
pop
es
lret
adc
popf
clc
call
pop
add
lahf
jg
jle
lea
or
jb
out
rorl
dec
dec
popf
inc
inc
ret
popl
push
mov
or
std
mov
mov
sbb
enter
adc
pushl
adc
and
test
ja
xlat
pop
mov
pop
pushl
ret
lea
xchg
or
adc
push
loope
xor
add
push
mov
lahf
popf
insl
add
lret
insb
push
stc
mov
or
xor
add
adc
and
int
subb
insl
pop
int3
sub
sbb
add
mov
mov
sbb
jae
push
xchg
shrb
dec
mov
push
push
mov
add
pop
das
sbb
jno
mov
pop
ret
dec
nop
popf
mov
push
scas
clc
outsl
cmpsb
sub
xor
ss
xchg
in
jge
or
push
repz
add
push
ljmp
adc
sub
push
xor
pop
or
xchg
hlt
lds
cmp
adc
lret
and
int3
fisubl
mov
ret
sbb
movsl
stos
scas
push
icebp
dec
iret
xchg
sub
mov
test
clc
bound
add
mul
mov
dec
and
sub
inc
call
and
mov
sbb
cmp
jp
jns
or
lea
jmp
imul
fistpll
add
out
lcall
mov
cltd
push
jp
adc
add
sub
cmc
loope
popf
mov
add
clc
clc
addr16
std
push
popa
loop
xchg
fbstp
add
xor
pop
mov
inc
cmp
pop
xchg
adc
mov
xchg
pop
dec
int3
mov
fidivrs
fbstp
sub
clc
aas
adc
stos
jb
sarb
inc
jnp
out
dec
sbb
scas
sub
push
push
in
in
or
inc
mov
out
jge
sub
movsb
jo
jb
in
xchg
mov
hlt
mov
mov
xchg
scas
sti
int
aaa
mov
mov
mov
xchg
fwait
sbb
cmc
inc
jmp
sbb
pop
popf
mov
sti
inc
adc
or
outsl
or
test
sub
pusha
sahf
hlt
mov
popf
jb
out
inc
push
ffree
shlb
test
push
push
cld
jmp
xchg
adc
stos
xchg
xchg
sbb
lds
scas
loopne
sbb
xor
stos
and
aaa
popa
pushf
and
inc
push
lcall
lahf
xor
jl
scas
fmull
addr16
cmp
mov
xchg
mov
sbb
mov
push
jbe
je
or
cmp
pop
dec
test
adc
lods
jl
jmp
pop
pop
sbb
daa
add
pop
outsb
mov
ja
dec
adc
mov
pop
fcoml
cmp
jne
dec
imul
cmp
enter
scas
cs
and
add
cmpsl
dec
adc
sub
dec
pop
xchg
cmp
jl
mov
mov
push
inc
cs
rcll
pop
xorb
aas
add
sti
sbb
push
out
sbb
add
lcall
inc
or
sbb
sarb
add
xor
and
testb
shl
out
outsb
inc
mov
rol
push
iret
mov
ljmp
adc
mov
dec
and
ds
movsb
push
push
ficomps
jo
pop
push
mov
ja
lock
jne
jg
mov
movsb
fimuls
pop
mov
je
scas
cltd
scas
repz
xor
inc
push
dec
and
mov
pop
repnz
mov
test
xor
mov
jns
nop
pusha
pop
clc
jo
add
cmp
or
pushf
push
call
add
das
adc
and
mov
js
push
hlt
jle
cltd
imul
lretw
ds
jae
push
movsl
icebp
lock
mov
dec
cmp
aad
cs
add
dec
xor
cs
in
xchg
mov
xlat
das
mov
or
mov
mov
imul
dec
pop
jge
fdivr
aas
sub
xor
inc
push
mov
les
addr16
je
std
xor
add
push
pop
fwait
sbb
repnz
xchg
dec
dec
lock
jbe
enter
and
aas
add
pop
pop
imul
sub
inc
test
mov
mov
mov
stos
loope
in
pop
aam
das
adc
jae
sub
mov
cltd
loop
mov
mov
jae
sahf
test
or
int3
cs
in
fisubl
decb
notl
mov
arpl
mov
mov
test
mov
std
or
ret
lock
int3
das
and
mov
inc
sbb
sbb
lahf
insb
mov
cmp
and
clc
clc
sbb
lret
jp
fimull
xchg
pop
enter
rcr
jecxz
mov
jecxz
add
jo
jge
sub
jo
pop
fsub
adc
jns
push
rorl
mov
sub
aas
dec
movl
mov
push
xor
pop
push
ja
faddl
jg
xchg
in
lcall
push
push
fucom
incl
push
in
test
leave
xchg
dec
daa
in
push
sbb
rcll
xor
mov
enter
mov
adc
push
loope
and
push
xchg
ljmp
dec
xor
push
push
pop
adc
arpl
ljmp
and
adc
cmp
leave
fistps
fisubs
loop
jmp
cmpsl
jecxz
decb
jno
mov
adc
popa
icebp
and
fistpll
ja
cltd
mov
lea
leave
mov
pop
inc
push
or
lea
pop
fisttpll
insl
es
outsl
iret
inc
loope
and
ds
add
adc
pop
xor
mov
out
lds
jne
sub
hlt
adc
cmc
out
add
jg
sub
int
add
pop
js
mov
fsub
les
lock
sub
ret
lret
lods
out
cltd
jl
jbe
sbb
inc
mov
fidivl
push
adc
xor
roll
lock
test
sub
sbb
xor
pop
mov
fcompp
shrl
leave
in
sub
inc
mov
dec
mov
sub
fcmovbe
mov
push
cmp
mov
push
cmpsl
or
sbb
mov
scas
enter
cmp
lock
nop
repnz
pop
adc
jae
test
or
sub
insl
scas
pusha
adc
jae
bswap
inc
sub
mov
inc
inc
adc
shrl
movsb
es
clc
clc
shlb
rolb
add
ljmp
lods
mov
cmp
cmp
in
nop
inc
daa
pop
enter
sub
call
mov
mov
mov
mov
daa
loop
shlb
xor
cmp
and
fdivrs
adc
push
jl
imul
stos
push
xor
fsub
mov
dec
scas
sbb
adc
into
push
push
je
in
inc
movsl
ds
mov
push
jecxz
stos
xchg
jmp
push
insb
or
cmc
sbb
rcrb
mov
into
or
mov
test
notb
pop
push
jnp
insb
in
lcall
xchg
mov
mov
adc
imulb
or
adcb
in
add
in
xchg
or
xor
out
es
xchg
sub
data16
adcb
ja
int3
cltd
and
jb
lcall
sbb
into
mov
ljmp
and
jb
sbb
or
movsl
repnz
jne
mov
bound
push
xchg
push
in
pop
sub
fnstenv
mov
jns
incl
push
ds
xchg
enter
test
stc
in
in
insb
jle
push
test
xchg
data16
testb
nop
bound
inc
pop
or
dec
fisttpll
jns
mov
add
mov
xchg
int3
sub
ret
xchg
hlt
inc
mov
xchg
and
test
fdivrs
mov
pushf
jmp
inc
hlt
cmp
mov
das
movsl
les
cli
jg
dec
loope
xor
cs
and
loop
pop
dec
test
mov
rcl
adcb
rcll
andb
xor
pop
ds
pop
sbb
sbb
inc
mov
or
pop
xchg
fstpl
loop
xchg
es
mov
sbb
hlt
scas
xchg
or
jle
mov
mov
lahf
xchg
adc
mov
test
lret
xchg
mov
jge
inc
cltd
out
mov
sub
ja
mov
and
mov
jle
pop
pop
cli
or
push
pop
ljmp
inc
mov
fistpll
or
dec
dec
js
jno
in
wrmsr
idivb
in
sub
xor
jmp
xchg
orl
mov
mov
stc
mov
cmpsb
repnz
jp
xor
cmp
and
jnp
iret
lcall
sbb
cmpsb
xor
sub
pop
in
push
js
jg
pushf
mov
dec
jmp
fstpt
cld
nop
jno
fcompl
ret
dec
xor
and
bound
outsl
jb
movsb
xchg
shll
add
xor
adc
sbb
jb
stos
jns
cwtl
sbb
pop
es
imull
sub
dec
xor
movl
mov
and
imul
mov
rolb
mov
cld
or
loop
sub
repz
arpl
lds
jecxz
lock
idiv
push
idivb
rcrl
cmpsl
inc
test
push
lret
push
push
xchg
mov
rcl
cmp
aas
test
push
ja
cwtl
out
push
jo
push
mov
sbb
and
push
mov
outsb
xorl
xchg
int
mov
test
jg
jns
add
sahf
push
dec
cwtl
mov
call
push
addr16
xor
mov
iret
mov
stos
jp
mov
xor
mov
dec
cmp
push
adc
push
lock
push
sub
out
pusha
push
scas
rcrl
int3
ja
mov
inc
push
and
xlat
fcoml
xchg
repz
cmove
mov
mov
sbb
pop
mov
jnp
rcl
mov
fists
adc
xchg
lcall
xchg
clc
mov
pop
inc
inc
cmc
xor
ss
jg
mov
jnp
test
fstpl
pop
leave
je
int
jecxz
cli
mov
insb
push
ret
sbb
jb
mov
fistps
pusha
lcall
fists
push
jle
xor
cli
xchg
sbb
inc
xor
dec
mov
js
ja
jae
lret
mov
push
add
lock
shlb
stos
mov
inc
dec
jmp
xor
add
jg
jno
lret
mov
ljmp
sub
lods
mov
enter
xchg
xchg
xchg
cmp
add
mov
ficoml
in
inc
mov
jge
stc
ret
sub
sub
inc
aad
sub
es
insl
sbb
jmp
xchg
jb
icebp
sbb
sub
adc
cmc
sbbb
sbb
xchg
es
in
test
or
pushf
sbb
scas
sub
inc
std
jg
sahf
fprem1
imul
ds
cld
sbb
inc
daa
fisubl
push
cmp
lods
test
mov
dec
ret
add
mov
xor
jmp
mov
cmp
jp
adc
pop
cmp
jp
je
aaa
xchg
ja
fnstsw
addr16
push
xchg
xlat
xchg
mov
lea
insb
filds
ret
mov
jo
dec
pop
push
rclb
jno
push
scas
stos
inc
xor
in
jl
lock
cld
add
lods
xor
add
cs
dec
fs
int
jp
push
jecxz
test
xor
sarl
jle
in
mov
adc
arpl
nop
test
mov
in
popa
cmp
rorl
mov
jge
mov
cld
mov
cmp
jmp
icebp
and
xchg
inc
stos
add
dec
lods
sub
add
fildl
lea
icebp
push
lock
xlat
js
adc
sbb
inc
dec
add
fnsave
push
out
popa
mov
and
xor
push
sub
sub
cltd
push
xor
in
inc
sti
jecxz
cmp
push
or
xor
aaa
sahf
add
insb
sahf
mov
sub
movsb
sbb
cmp
repz
cmp
adc
cmp
jns
dec
ret
test
jl
fistl
iret
cmp
mov
gs
flds
sahf
rol
lret
ljmp
pop
push
adc
sarb
pop
scas
ficoms
jmp
push
pop
jnp
js
cld
icebp
stc
inc
and
push
mov
mov
cltd
jge
sahf
pop
mov
jmp
bnd
jnp
push
mov
and
add
out
push
sbb
push
je
std
repz
lcall
shl
testl
in
xor
adc
iret
or
inc
lret
jg
in
jb
mov
roll
sub
lods
pop
dec
dec
sti
cltd
aas
jecxz
inc
push
xchg
movsb
fiadds
pop
pusha
lods
jns
add
cmp
scas
or
data16
insb
and
or
cmp
xor
sub
ret
mov
insb
fcmovnb
xor
addl
push
pop
or
fildl
sti
mov
popf
fists
cwtl
jle
inc
mov
xor
movb
mov
and
or
cld
out
les
xchg
sub
push
push
mov
test
lret
inc
xchg
sti
push
lcall
fstps
roll
xor
or
xchg
lds
xchg
mov
push
push
xor
inc
outsb
lock
ljmp
into
adc
int
jno
cltd
out
mov
adc
movsb
push
je
das
fisubrl
xor
pop
mov
mov
xor
jge
fistl
shlb
add
mov
jge
inc
mov
dec
pop
iret
enter
insb
stc
mov
das
and
cwtl
push
cmp
in
mov
cmp
scas
jae
jp
sbb
sub
repz
sbbl
mov
xor
loopne
sbb
adc
fs
jbe
dec
add
push
push
sahf
sub
xor
mov
gs
push
jne
inc
jl
mov
inc
out
aaa
add
bound
jl
test
and
arpl
pop
jecxz
or
andl
jo
jo
adc
mov
push
or
fisttps
or
mov
push
mov
or
and
sahf
stos
aas
mov
rcpps
pop
fxch
and
call
push
push
cmp
repz
push
arpl
loop
imul
dec
sub
ficoms
push
int3
frstor
int
sbb
in
cmpsl
in
movsb
xor
rclb
jns
xchg
mov
mov
icebp
enter
mov
arpl
add
push
push
aad
mov
xchg
dec
out
pop
mov
stos
inc
push
mov
sti
imulb
lods
sbb
add
fs
jge
ds
int3
add
out
ret
cmp
sbb
test
test
dec
fcmovbe
sub
adc
mov
mov
lret
mov
jmp
rcrl
cmp
or
lahf
and
outsb
pop
aam
xlat
add
outsb
roll
or
mov
add
pop
ret
sub
ja
mov
outsb
or
and
nop
dec
jmp
scas
lds
adc
leave
mov
xchg
mov
ret
lret
lcall
sbb
or
cwtl
loope
push
leave
cmp
sub
ret
xor
push
fwait
sbb
movsl
out
jnp
popa
mov
push
push
loopne
push
push
add
cwtl
mov
adc
push
push
push
into
push
outsb
adc
add
and
out
or
mov
enter
sub
and
pop
clc
fs
mov
fwait
daa
mov
adc
push
add
dec
sub
pop
mov
mov
xor
sahf
adc
shlb
into
repz
jl
push
xchg
push
adcb
addl
or
popf
jo
lret
hlt
mov
decb
rorb
outsl
dec
xchg
lahf
into
add
mul
sti
lds
sbb
mov
inc
adc
mov
insb
lods
mov
repnz
mov
test
jo
jle
aaa
sub
xor
rolb
cmp
arpl
loope
les
in
and
outsb
divb
sub
aas
cli
mov
push
mov
in
mov
leave
das
not
mov
jno
or
xchg
jbe
ss
xchg
pop
bsr
pushf
mov
ret
in
xchg
rolb
in
in
adc
jmp
jp
mov
data16
clc
addr16
insb
cltd
gs
cld
cmpsb
jg
push
cmp
test
jnp
adc
mov
icebp
je
pop
cmp
mov
ds
iret
xchg
pop
xlat
pusha
fldl
leave
mov
cmp
adc
sahf
add
mov
ljmp
adc
not
repnz
push
jecxz
fildll
mov
xchg
cli
rcr
xor
cltd
and
jbe
inc
mov
das
orl
shl
pop
xor
add
jb
sub
mov
xchg
pop
jnp
aam
dec
adc
fbstp
cmp
push
adc
xchg
sbb
popa
inc
test
mov
push
push
mov
shr
mov
xorl
jl
pop
daa
sbbl
out
pop
jp
leave
repnz
ret
data16
pushf
jns
enter
or
xchg
lods
je
jno
addr16
mov
cltd
mov
jg
pop
sub
xor
jno
mov
loope
xor
adc
cmp
test
jp
sbb
rol
ret
or
mov
xor
adc
sbb
adc
loope
sub
mov
cmpsl
enter
sbb
rcrl
pop
dec
jno
loop
test
out
mov
ss
mov
cltd
push
js
mov
lret
ret
mov
cmp
fmul
and
rclb
dec
mov
mov
xor
jns
sbb
test
or
fnstsw
shlb
in
das
ljmp
in
or
adc
or
xchg
push
mov
cmpsb
hlt
imul
mov
xchg
jecxz
shlb
test
inc
push
out
aaa
mov
inc
jno
xor
xchg
test
fisubs
push
imul
sub
addb
bound
mov
hlt
mov
and
mov
jb
in
sub
movsl
ljmp
fiaddl
subb
or
push
push
xchg
sub
xor
jo
dec
shr
aam
or
gs
test
aad
jecxz
ret
push
inc
enter
mov
scas
cmp
adc
inc
and
test
cmp
or
call
testl
cli
sub
imul
sub
push
mov
sbb
insb
adc
dec
mov
shll
and
jnp
mov
jno
push
arpl
fidivrl
sbb
and
sub
sbb
mov
aam
adc
outsl
cmp
lds
pop
mov
aad
inc
ljmp
push
dec
movsl
push
xor
mov
gs
fwait
in
sbb
pop
dec
fcompl
push
mov
repnz
lods
jns
test
dec
sub
imul
mov
pop
outsb
outsl
xchg
mov
adc
pop
call
lea
out
fisttps
cmp
test
inc
into
dec
mov
push
adc
test
push
ds
push
subl
fcmovne
jecxz
daa
xchg
and
pop
data16
js
mov
cmpl
ja,pn
je
xchg
or
test
jno
int3
sbbb
adc
xchg
push
dec
test
ret
mov
arpl
add
icebp
ffreep
sbb
clc
sbb
xorb
push
mov
jbe
mov
mov
outsl
loopew
inc
mov
negl
insl
or
addr16
jl
mov
pop
jge
leave
iret
and
mov
inc
out
jno
sbb
xlat
inc
pop
icebp
les
adc
jecxz
xor
cmp
and
add
shll
pop
inc
adc
dec
nop
jg
shll
adc
arpl
mov
sub
lret
das
or
clts
add
jl
and
shl
adc
pop
jmp
mov
or
sti
pop
fsubs
adc
dec
dec
insb
add
jecxz
or
mov
sar
add
pop
in
jmp
adcl
out
inc
sti
in
xor
arpl
repz
pop
push
inc
test
jmp
cwtl
mov
pop
push
push
mov
frstor
inc
sbb
sbb
cmp
repz
xchg
xor
test
jns
inc
out
das
aad
leave
mov
push
add
aam
pop
repz
clc
sbb
fadd
das
xchg
jmp
cmp
push
xchg
loope
xchg
mov
call
mov
or
add
aaa
repnz
mov
mov
xchg
mov
and
jle
add
jge
jns
cmpb
push
out
push
sbb
cld
cmpsl
pop
and
stos
pop
jmp
add
jle
xor
cmpsl
and
sbb
cs
mov
mov
add
out
in
mov
mov
outsl
mov
in
mov
xchg
cwtl
bts
sub
fucomp
test
mov
adc
test
jno
ss
insb
nop
xchg
ret
icebp
sarl
rorl
sarb
lahf
jge
mov
ror
mov
mov
mov
xor
lret
stos
mov
inc
leave
pop
test
add
push
mov
insb
rol
scas
or
and
xor
repz
inc
xchg
ss
sbb
lret
into
aaa
dec
jno
repnz
and
imull
cmp
popa
xor
cmp
insl
xchg
scas
mov
cmp
leave
dec
out
or
pop
iret
pop
mov
mov
mov
inc
sbb
pushf
jp
bound
xor
or
sub
xchg
xchg
or
inc
adc
inc
loopne
pop
stos
xchg
int3
movsb
xchg
insb
addr16
in
or
sbb
or
pop
les
stos
ljmp
mov
in
fsts
sub
int
jge
sti
and
out
jb
mov
push
cmpsb
in
call
xchg
dec
call
xchg
and
push
aas
push
xchg
sbb
xlat
ss
mov
or
das
mov
bound
push
xor
popa
mov
push
fdivrl
add
dec
push
or
push
mov
ds
rolb
aas
mov
add
jo
inc
mov
inc
adc
sbb
cmp
mov
xchg
repz
outsb
push
mov
cld
aam
mov
pop
sti
mov
jl
in
ja
add
xchg
cmp
and
loop
push
or
inc
fsubr
aaa
sbb
in
xor
push
imulb
bound
sbb
call
jecxz
nop
popa
and
or
mov
mov
nop
sbb
stc
loop
lods
push
ds
and
sti
test
shll
fidivs
aam
fsubrl
xchg
sbb
call
cmp
jecxz
xor
or
adc
mov
jnp
aad
mov
int
in
fnstcw
jb
cmpsl
add
lret
mov
cwtl
lcall
imul
xchg
pop
pop
dec
jae
mov
lods
push
push
fisttps
popa
stos
insl
pop
sahf
fldcw
push
mov
xor
sarl
mov
imul
xorl
ret
adc
pop
fimuls
loope
mov
and
mov
mov
cmp
hlt
jb
sub
add
ret
mov
daa
orb
frstor
ds
mov
andl
fisubs
popa
mov
mov
sbb
xor
mov
mov
fdivl
mov
stc
pop
dec
adc
add
jb
add
hlt
xor
mov
fidivrl
xor
add
loopne
mov
add
push
insl
out
pushf
js
inc
lahf
sti
cmp
fdivrp
aad
add
pop
cmc
lea
mov
push
mov
pop
cld
leave
out
imul
flds
add
push
orl
jae
fnsave
call
lods
iret
stos
sub
mov
bound
clc
iret
sub
cmp
clc
test
out
rolb
cmp
call
adc
sub
dec
jae
outsb
jo
cs
ss
icebp
data16
push
mov
fimuls
hlt
mov
fwait
aaa
jo
outsb
or
sbb
mov
sbb
or
loop
xchg
sbb
sbb
dec
add
xor
mov
jle
mov
dec
ret
mov
aaa
xor
jmp
jmp
in
sbb
shlb
call
daa
push
push
int3
xchg
bound
je
pop
stos
mov
jbe
out
call
clc
outsb
out
addr16
in
dec
std
xor
std
xlat
aaa
gs
push
pop
and
xor
shlb
xchg
out
push
or
push
pop
lahf
adc
mov
xchg
loope
inc
xchg
call
push
jns
fisttpl
cld
mov
push
not
mov
les
xor
fisubrl
popf
push
or
mov
fwait
jno
sbb
js
inc
lcall
add
in
dec
icebp
stc
xchg
inc
mov
in
push
or
lahf
or
mov
popf
sub
fbstp
jns
xor
outsl
enter
adc
mov
jmp
cmp
and
stc
mov
fsts
data16
jnp
sbb
flds
outsl
mov
push
jge
lcall
pop
xchg
jge
arpl
mov
jle
sahf
jg
jns
push
mov
test
push
test
fcompl
ja
rcl
adc
test
pminsw
jne
mov
or
sub
mov
dec
jo
sbbl
mov
or
cmp
inc
int3
cmp
negl
mov
out
outsl
aaa
cmp
sub
xor
shl
imul
mov
subps
mov
jp
jl
xchg
jecxz
inc
in
push
rclb
jp
js
es
sti
xchg
ret
add
mov
test
movsb
inc
fld
xchg
xchg
sub
mov
cmp
xchg
adc
xor
cmpl
mov
push
in
mov
sti
pop
mov
es
filds
add
jbe
mov
pop
aaa
xor
popf
push
scas
adc
jl
addr16
xor
test
repnz
fisubl
leave
push
call
mov
lcall
test
cmpsl
sbb
add
aas
das
lcall
out
jle
mov
cmp
out
sub
ret
xor
xlat
sbbl
sub
dec
es
mov
xor
outsb
inc
xchg
test
mov
scas
sub
xchg
sub
pop
in
sahf
unpcklps
lahf
pop
pop
std
xor
inc
subb
dec
test
lods
add
mov
jmp
test
mov
cmp
and
mov
or
cmp
and
push
pop
stc
jbe
mov
loope
push
add
pop
mov
mov
sbb
pop
jle
mov
scas
push
xchg
inc
mov
and
aaa
sub
mov
mov
jl
pop
dec
iret
das
inc
rorb
in
lods
fucom
orb
jecxz
repnz
cmp
or
fmuls
sbb
in
mov
jne
stos
pop
mov
icebp
xchg
and
movsl
mov
jns
inc
sbb
mov
ret
jle
xor
sub
mov
sahf
push
hlt
push
repnz
scas
subl
hlt
cmpl
sbb
mov
dec
pop
repnz
add
or
data16
ss
mov
dec
insl
jp
incb
in
mov
sahf
sti
repz
pusha
or
pop
out
sar
imul
or
mov
mov
test
mov
repz
adc
or
in
xchg
dec
jle
mov
loop
outsl
fimull
popa
jae
dec
std
in
mov
jmp
add
mov
lcall
sbb
mov
pusha
jb
mov
sub
push
inc
adc
test
rcll
scas
mov
pop
pop
gs
cmp
shrl
mov
adc
fldt
outsb
scas
cmp
xor
dec
jb
and
int3
push
mov
cmc
lds
es
add
outsl
dec
jo
aad
lds
loop
push
jg
xor
xchg
dec
sbb
mov
ficomps
add
es
out
cli
mulb
test
enter
jae
cmpl
scas
idivl
or
ret
scas
gs
leave
lods
je
mov
inc
push
subb
lods
and
jne
jge
cmp
pusha
clc
or
repnz
rorl
in
mov
stos
pop
mov
scas
icebp
leave
lea
xchg
lret
cmp
test
and
icebp
jns
shlb
inc
sbb
lock
int3
sub
addb
or
pop
cli
push
xor
inc
repnz
fbstp
movsb
mov
outsl
test
aam
sub
movsb
mov
mov
rcll
pcmpgtw
fdivl
cmpsb
inc
rclb
das
dec
mov
xor
int3
sbb
scas
mov
add
imul
inc
leave
xor
arpl
cmp
mov
imul
cmp
test
inc
push
lods
or
and
arpl
in
divl
fwait
and
call
and
xor
clc
cmpsl
into
adc
dec
jbe
out
xorb
inc
sub
std
repnz
inc
addr16
arpl
or
xor
inc
add
jmp
shrb
fs
jbe
inc
jmp
mov
es
loope
and
lods
aam
xorb
jae
fidivrl
and
sub
mov
test
and
sub
cmp
ss
mov
sarb
in
in
push
adc
fbstp
pop
add
pushf
and
movsb
push
stos
loop
add
mov
in
cltd
shr
xor
xchg
mov
lea
dec
sti
push
ret
mov
and
cmp
sub
push
icebp
mov
sbb
stc
push
push
mov
jecxz
cli
incb
push
adc
pop
test
cwtl
lock
sub
ds
and
jle
aaa
blci
in
sti
jecxz
add
incl
add
scas
jmp
cltd
jp
dec
aad
ret
xchg
imul
add
sub
insl
enter
sahf
mov
out
pop
int3
mov
mov
arpl
cltd
das
pop
rcrl
in
mov
sbbl
cwtl
ljmp
je
in
scas
repz
addr16
mov
cmp
mov
adcl
jo
sub
sbb
roll
dec
push
xlat
cmc
push
mov
sahf
or
mov
cmp
inc
leave
cmc
push
sbb
jno
movsl
pop
xor
mov
movsl
std
mov
add
shr
dec
inc
mov
mov
inc
jb
adc
pop
ljmp
mov
cs
add
jg
mov
sub
dec
popf
dec
in
hlt
adc
xchg
or
int3
in
lods
or
out
int
dec
push
mov
mov
adc
jno
mov
dec
fistpl
lahf
and
jb
or
cwtl
push
push
xchg
mov
int3
cld
pop
lds
mov
cmp
jge
jbe
xchg
movsb
cltd
loope
shll
push
fistpll
push
jb
int
lret
dec
mov
jp
js
ss
cli
pushf
pusha
and
bound
mov
mov
and
jbe
add
out
sbb
or
sub
pop
add
add
xchg
cmp
pop
inc
and
push
xchg
inc
js
fcmovnbe
xchg
and
sbb
fstps
fnstsw
enter
and
push
adc
test
cmp
xor
cwtl
xchg
mov
push
pop
dec
loop
fiaddl
pop
sbb
jnp
data16
mov
stc
inc
adc
xor
cmc
mov
xchg
outsl
mov
loop
jp
mov
sbb
decb
mov
je
add
or
inc
cltd
xchg
push
bound
inc
cmp
ret
aad
inc
xchg
and
xchg
ja
jno
adc
jnp
repz
xlat
imul
ret
cmpl
in
push
dec
outsb
fwait
xchg
mov
xor
imul
scas
rcrl
out
orl
je
decb
lds
push
sahf
dec
mov
repnz
dec
lods
cld
ret
daa
rorb
fs
out
add
popa
lds
xchg
cmc
out
xchg
push
adc
fucomi
cmc
ljmp
pop
and
fldcw
bound
popf
mov
jo
mov
pop
movsl
adc
sub
cwtl
cmpsl
adc
pop
pushf
xlat
push
cmpsl
adc
cmp
add
xor
js
hlt
lods
jno
sbbb
push
loope
fstl
sahf
mov
pop
test
cltd
pop
fs
cwtl
js
cmp
cmp
filds
aad
mov
cmp
in
popf
mov
nop
pusha
inc
imul
imul
cld
lret
push
jg
pop
cmpsl
not
and
daa
jnp
push
mov
sub
mov
xor
repnz
pop
stos
ds
xor
ror
jg
fcoms
imul
call
out
cmp
mov
push
sub
mov
rorb
sbb
outsl
mov
bound
or
clc
cmp
lcall
add
out
call
or
xchg
hlt
xlat
sbb
sub
sahf
inc
les
add
sbb
cwtl
out
test
ret
lock
addr16
sbb
in
ret
cmp
jno
sbb
loop
mov
fisttps
xchg
dec
nop
push
hlt
test
sub
dec
jne
mov
add
mov
xchg
mov
adc
inc
mov
lcall
jnp
push
lods
loop
xchg
sub
arpl
adc
ret
dec
into
push
std
insb
mov
mov
push
pop
push
hlt
and
ret
or
lret
or
jmp
dec
fiadds
jmp
inc
es
mov
in
inc
pop
mov
in
xor
or
cmp
daa
in
jecxz
repnz
je
pop
mov
jae
jmp
stc
inc
ret
in
idivl
stc
call
mov
pop
cmp
pop
cmpsl
pop
mov
jmp
inc
repz
pusha
pop
jno
push
xchg
data16
nop
lea
or
pop
push
dec
loopne
sbb
pop
imul
xchg
lahf
or
stos
push
pop
pop
outsl
insl
repnz
sub
push
rcrb
and
iret
mov
cmp
rcrl
repz
sbb
sbb
push
xchg
jbe
or
add
cmc
or
sub
and
cs
sarb
adc
or
imul
xor
pop
pop
add
adc
aaa
push
pusha
pop
jecxz
popf
cld
and
or
and
pop
subb
cmp
jae
sti
jg
and
sbb
cmp
or
pop
cmp
aas
shlb
pop
es
std
jo
xchg
sbb
or
add
xchg
mov
mov
pop
mov
fdivl
repnz
and
add
xor
ja
inc
jp
add
iret
orb
inc
jle
out
xchg
mov
xchg
addb
sbb
shrl
scas
mov
cmp
cld
inc
hlt
sub
out
ret
loope
xchg
pop
dec
fidivrl
mov
jo
xchg
xor
mov
mov
mov
jmp
sub
adc
call
out
push
movsl
sahf
cmp
mov
and
int3
sbb
xor
or
inc
pop
xorl
das
fldcw
out
aad
pop
sub
out
push
daa
adc
loop
dec
mov
int
clc
sbb
fdivs
imull
roll
mov
mov
test
push
xchg
cmpsl
pop
stc
sahf
sbb
dec
push
xchg
rcrl
cmp
adc
mov
jecxz
xchg
sti
leave
pop
add
repnz
jp
and
mov
adc
xlat
out
cmp
xlat
fisubl
aas
adc
mov
es
push
cs
ds
into
mov
cmp
in
mov
cmp
cld
add
xchg
das
jne
pop
je
add
jne
dec
sbb
push
inc
fstpl
divb
pop
es
xchg
jb
cmp
popf
out
js
and
adc
mov
lock
add
repnz
arpl
pop
xor
jge
les
in
pop
pop
cmp
fisubl
add
or
mov
xor
and
dec
pushf
fmull
loopne
pusha
sub
mov
and
mov
aas
fwait
into
pop
stos
xor
lret
loope
cmp
stos
sbb
jb
fs
push
enter
push
pop
cmpsl
adc
mov
add
fimull
jecxz
mov
popa
sub
add
lea
clc
sub
ljmp
sarb
outsb
sub
push
leave
mov
arpl
aam
stos
sbb
aas
xchg
aas
jae
cs
stos
in
lahf
or
push
xlat
mov
fsubl
pusha
incl
jecxz
daa
nop
inc
xor
cmp
push
xchg
in
nop
ds
mov
mov
inc
sbb
xor
ja
call
pop
xor
xor
mov
push
in
repnz
movsb
sbb
movsl
push
pushf
sbb
fiadds
ja
movsl
les
or
jp
push
or
fsubrp
xor
in
fimull
xchg
mov
out
adc
mov
push
dec
cmp
ljmp
negl
adc
jno
repz
sbb
or
sbb
call
push
popa
pop
lods
dec
and
dec
mov
repz
in
cltd
cmpl
loop
andps
push
inc
mov
out
popa
scas
bound
inc
dec
cmc
sub
xor
leave
enter
hlt
add
mov
dec
out
jmp
mov
mov
shlb
dec
pop
and
test
or
sbb
mov
jnp
mov
jmp
dec
notl
push
add
xor
mov
in
bound
mull
mov
mov
ja
lret
imul
lcall
mov
bound
stc
lods
shl
and
add
xchg
addb
pop
cmc
aam
fwait
orb
sub
mov
aam
aaa
adc
leave
push
xor
sub
mov
int3
xor
xor
mov
adc
cmp
leave
xchg
pushl
andb
mov
sub
adc
dec
sub
int
xchg
push
out
cld
fwait
in
outsl
mov
xor
cmpsl
push
or
cmp
and
ljmp
aaa
das
mov
adc
xchg
dec
out
fnstsw
mov
outsb
setp
adc
push
js
inc
out
test
dec
push
mov
rcrb
sahf
jl
int
pop
pop
sub
pop
mov
adc
jb
dec
mov
or
cld
cmpsl
call
and
xchg
mov
mov
subl
scas
outsl
mov
repnz
push
xor
add
inc
idivl
xchg
mov
adc
push
push
push
jnp
out
jno
js
mov
scas
xor
aaa
test
out
sti
aaa
push
dec
ss
in
movsb
jns
push
push
ss
inc
clc
enter
out
clc
fs
push
pop
aas
inc
or
out
aam
push
hlt
std
mov
adcl
adc
adc
repz
sub
sub
jae
xorl
sti
out
enter
mov
lcall
cmpb
pop
push
mov
call
js
test
xchg
add
arpl
aaa
inc
adc
and
adc
incl
pop
xchg
scas
push
cmp
in
dec
push
je
push
mov
mov
jg
push
pushf
ffreep
movsb
pushf
outsb
pop
mov
jae
andl
fstl
in
popf
loop
aas
xchg
data16
sub
push
add
fcoms
mov
pop
inc
in
call
repnz
das
or
cli
in
andb
pop
fdivs
inc
add
mov
daa
cli
ss
xchg
jno
add
ffreep
clc
shll
rcll
and
sbb
rolw
stc
test
pop
inc
xchg
call
mov
add
jle
ss
imul
jb
xchg
insb
pop
jb
std
test
mov
out
dec
mov
mov
mov
add
test
cmp
das
pop
cmc
mov
mov
aam
add
or
push
push
dec
pop
sbb
fdivr
xor
or
inc
sbb
sahf
fcompl
fdivrs
jle
jb
pop
inc
pop
rcrl
out
cmp
jecxz
pop
in
test
sti
jp
idivb
imul
jmp
adc
sub
or
sub
xlat
jae
xchg
jecxz
notl
cmpsb
inc
out
push
jae
cmp
cmp
sbb
ljmp
pop
sub
xchg
pop
add
icebp
xor
cmp
ficomps
pop
insl
js
popf
test
sbb
test
and
loop
int
mov
std
sub
stos
popa
xor
push
fsub
cmpsb
incl
fstl
insb
pushf
mov
mov
mov
popa
xchg
loopne
imul
adc
out
lods
insb
push
call
ja
dec
xor
or
xor
testb
ss
adc
cmc
jge
out
xchg
jns
lods
mov
lret
mov
ljmp
adc
stc
rcrb
jns
mov
test
jbe
roll
movsl
in
jbe
mov
cltd
andb
mov
add
push
lret
in
jns
pop
inc
mov
add
mov
das
xchg
insb
cltd
mov
out
xor
pop
das
inc
nop
fwait
repnz
add
xchg
insl
popa
pop
inc
int
in
inc
mov
cmp
mov
pusha
cmp
push
subb
das
push
sub
enter
je
or
es
outsb
mov
cmp
dec
pop
stos
lock
pop
adc
push
aaa
pop
xor
mov
cwtl
cld
mov
and
add
test
loope
sub
mov
cs
adc
pop
addb
lcall
in
mov
cmp
nop
lcall
cmp
add
jbe
push
ret
cmp
mov
out
sbb
jmp
dec
insl
push
sbb
rcrb
mov
into
out
mov
sub
int
mov
xorb
pop
push
inc
je
sbb
cmp
fildll
mov
sbb
jns
jne
jmp
sbb
inc
ret
sub
inc
pop
cltd
adc
dec
add
inc
add
add
mov
mov
cltd
sub
dec
xchg
add
movsb
lds
popa
inc
cmpsb
sarl
in
aas
das
daa
fnstenv
daa
jge
or
or
jne
sahf
add
add
cld
imul
xor
std
lock
insl
nop
lahf
aas
pop
roll
cmpsl
out
loop,pn
xlat
or
test
pop
lods
in
push
in
push
ss
mov
push
stos
lcall
mov
adc
or
outsl
sbb
add
xchg
push
ds
pop
push
or
std
jnp
inc
dec
call
mov
jbe
rcl
fistpll
popa
and
push
or
ret
stos
jo
out
jge
jge,pt
jge
jg
fwait
aam
fwait
push
jnp
pop
jne
pop
js
daa
nop
sahf
xchg
jle
push
and
push
es
in
push
mov
sbb
mov
jb
jge
movsb
add
sub
sbb
xchg
adc
outsb
xor
jnp
addr16
lcall
loop
adc
es
cld
fisubrs
lock
jae
add
aaa
xor
cmp
fst
jmp
data16
mull
popa
mov
mov
push
xor
aam
das
xchg
stos
loop
push
and
lcall
shl
loopne
xlat
stos
addl
pop
and
add
mov
data16
mov
or
and
clc
int3
aam
insl
and
or
push
ss
shrb
jecxz
adc
fsub
pushf
dec
hlt
push
addb
mov
add
push
pushf
hlt
inc
das
sbb
pop
leave
inc
lock
xor
addl
rcrl
cmp
int3
inc
and
movsb
mov
and
cltd
xchg
xchg
repnz
sbb
mov
lret
out
leave
js
lahf
push
sbb
lods
sbb
fiadds
popa
pusha
jl
hlt
rclb
add
inc
add
shll
pop
xchg
fisubl
jne
mov
out
lock
fistl
aaa
insb
ret
inc
outsl
mov
xor
xor
gs
sbb
mov
mov
sub
cmc
loop
or
mov
imul
test
aad
xlat
cmp
jp
in
sbb
mov
sahf
add
fcmovne
jbe
xlat
mov
cmpsb
push
aad
idiv
xchg
sbb
add
imul
mov
std
mov
mov
pop
or
xor
call
sub
inc
add
sar
adc
cmp
mov
jb
fucomip
insl
testb
adc
add
or
clc
xchg
insl
cmpl
ja
icebp
js
inc
xchg
mov
out
sub
mov
mov
fstpt
cmpsb
rcll
not
pop
lahf
iret
int
pusha
inc
mov
test
jmp
in
jne
aas
lea
iret
and
dec
xor
loop
fiaddl
and
aas
xor
cmp
mov
rcl
mov
incb
pop
push
repnz
dec
loope
and
les
movzwl
and
fsts
es
sbb
testb
push
mov
jns
fcomps
fs
pop
outsl
mov
fnstcw
aaa
imul
mov
fsubr
jge
cmp
sbb
xlat
cmp
inc
mov
out
adc
jle
mov
test
lods
lret
xchg
and
in
icebp
aad
data16
mov
leave
inc
jae
test
out
push
aad
jb
and
sub
jp
out
jae
mov
dec
inc
push
je
pop
and
out
fsubs
jo
pop
sbb
xor
je
mov
mov
jbe
xchg
stos
fs
xor
inc
mov
popf
sub
sub
adcl
pop
mov
fcompl
ja
lods
arpl
mov
ss
gs
jno
or
cmpsb
in
lods
test
js
xchg
inc
xlat
mov
mov
cmp
cltd
sahf
sbbl
add
cwtl
sub
jmp
sbb
shll
fisubrl
mov
repz
sahf
push
in
in
rorl
lret
ja
sbb
repnz
mov
jmp
inc
repz
jbe
aaa
cli
inc
jmp
loop
in
adc
push
inc
divb
test
addr16
lret
adc
mov
inc
mov
mov
or
ficomps
xor
scas
dec
dec
or
aad
in
xchg
pushf
push
icebp
test
ljmp
aad
sbb
or
xchg
push
nop
rclb
int
adc
icebp
stos
inc
data16
mov
xor
mov
mov
sbb
daa
xchg
add
jmp
aaa
arpl
das
pop
into
inc
sub
jg
mov
cltd
into
scas
inc
in
or
sub
push
mov
add
fsubrl
mov
outsb
cmpsb
stc
xlat
push
pop
mov
bound
xor
out
sub
xchg
mov
shll
not
push
adc
push
std
loope
std
cmp
ss
or
sbb
imul
fildll
mov
sti
or
mov
mov
jle
push
in
push
jb
sbb
mov
movsl
popa
call
push
or
dec
inc
lahf
xchg
push
dec
jle
mov
dec
cmpb
dec
add
mov
dec
xlat
addr16
inc
mov
lock
sbbl
gs
sbb
adc
lock
subl
jle
adc
out
mov
and
add
or
pop
mov
or
mov
add
mov
mov
lcall
mov
cli
outsb
jmp
fcmovne
loop
push
adc
sti
daa
movsl
test
bound
daa
dec
stos
mov
mov
inc
jecxz
or
jle
or
ret
outsl
andl
scas
dec
cmp
out
cmp
mov
pop
xor
xchg
jecxz
fs
call
lahf
cmp
mov
xor
fabs
sbb
lods
bound
sbbl
lcall
push
in
sbb
sub
or
scas
push
mov
aas
inc
fcmovbe
test
lods
jp
lret
sbbl
xor
scas
in
mov
daa
add
lock
test
add
mov
jge,pn
or
cltd
mov
mov
add
add
int
jecxz
insl
and
lret
int3
pop
test
xchg
cmc
and
dec
dec
ror
cli
pop
cs
sub
inc
je
pop
aaa
mov
hlt
enter
ret
fs
ds
mov
cld
sub
sbbb
mov
pop
xchg
in
dec
mov
fistpl
and
xorb
popf
adc
push
rcll
cmp
dec
pop
stos
mov
lahf
sti
sub
shr
mov
cmpsl
inc
iret
popf
sti
iret
int
in
dec
xor
jp
andb
add
lret
scas
cmp
in
test
cmpsl
inc
bswap
out
setns
cs
mov
std
mov
cmp
insb
jg
push
ficompl
adc
iret
push
push
push
imul
xor
add
xor
daa
dec
mov
jle
pop
cmp
aas
fistps
lahf
add
imul
clc
int3
pop
cmp
iret
mov
push
fidivs
ljmp
jne
mov
lret
adc
aas
push
cmp
ds
insb
pop
sbb
lret
lock
inc
sub
pop
mov
xchg
rcll
fs
pop
pushf
or
push
push
and
inc
mov
inc
cwtl
sbb
push
add
int3
jb
cmpsb
xchg
inc
add
cld
clc
cmp
mov
sbb
pop
fmull
pop
ret
mov
enter
sbb
push
cs
nop
mov
addl
push
inc
mov
cmpsb
xor
add
inc
pop
test
out
xchg
cmp
dec
add
xchg
jnp
mov
push
std
lods
pop
jg
mulb
mov
add
jle
js
jns
and
push
pop
ret
lods
jne
sub
insl
xchg
jge
fstl
sbb
stc
filds
pop
test
arpl
xchg
shlb
xlat
sbb
int
add
cmc
xchg
jl
mov
mov
pop
xor
hlt
faddp
jecxz
and
push
jl
sub
scas
push
stos
sbb
or
xor
gs
and
iret
mov
jae
ja
ret
stos
lods
push
jge
lret
cmp
pop
mov
and
cmp
std
dec
adc
icebp
push
inc
pusha
sar
add
mov
or
and
outsb
jne
jmp
mov
decl
jo
sbbb
fidivrl
clc
push
sbb
aas
ret
nop
in
sub
push
or
cmc
jne
xchg
lds
push
xor
in
out
subl
movsl
sub
mov
push
sbb
rcl
jg
inc
cmpxchg
push
shrb
std
dec
xlat
jg
mov
fiaddl
xor
adc
ret
into
cwtl
inc
and
insl
cmc
pop
xchg
ja
cmpsl
mov
ds
pop
dec
sahf
shl
sbb
xor
sub
adc
gs
cmp
sarl
popa
pop
mov
stos
jmp
decl
push
sbb
adc
scas
fwait
and
mov
mov
add
push
pop
cmp
xor
out
add
mov
movsb
mov
jp
rcr
enter
inc
mov
or
js
bnd
dec
adc
es
add
mov
repz
dec
lret
out
imul
adc
fldl
cmp
adcb
push
imul
xor
fs
adc
insl
xor
mov
lea
mov
sarb
fistl
pop
pusha
addb
sbb
push
xchg
fimuls
push
push
mov
mov
jb
pop
mov
int
push
mov
lds
jns
or
filds
cmpsl
push
inc
sbbb
cmpsl
or
aam
leave
cld
stos
out
daa
lods
lea
in
pop
jle
cmp
rcrl
dec
jb
xchg
cwtl
movsl
jecxz
add
pushf
sub
bound
dec
je
add
sbb
pop
inc
mov
shl
adc
jo
pusha
push
jecxz
outsl
pop
and
mov
sub
mov
fdivrs
pop
scas
xor
add
repz
push
popa
push
push
add
sub
inc
push
popa
movsb
movl
out
xchg
loopne
and
xor
xor
mov
inc
push
add
xchg
imul
or
or
push
add
imul
imul
sub
xor
mov
std
out
mov
roll
or
stc
fwait
pop
cmp
or
pandn
enter
push
jp
imul
lcall
xor
shlb
icebp
jmp
stos
outsb
pop
stos
adc
loopne
outsb
ss
mov
stc
pusha
mov
sbbl
lods
mov
cmp
and
xlat
ret
fidivrs
gs
mov
dec
add
gs
mov
data16
and
hlt
lods
xchg
pop
pop
aam
dec
mov
or
xchg
push
and
repz
xchg
subb
testb
adc
and
dec
push
iret
je
bound
cmp
cmp
mov
inc
sub
xlat
push
movsl
loope
sub
out
xor
adc
icebp
gs
xor
or
testb
and
mov
subb
test
sub
movsl
mov
imul
cli
imulb
xor
pop
and
sub
mov
movsb
jbe
inc
and
repnz
roll
clc
sahf
xchg
or
cld
iret
test
std
pop
and
jo
fisubrl
pop
stc
mov
and
and
insb
mov
pop
push
inc
mov
addl
lret
int3
mov
in
pop
lock
jle
nop
push
lods
push
shrl
stos
shll
aaa
sbb
call
adc
dec
lds
or
dec
lds
dec
ds
or
mov
push
dec
and
fcompl
mov
xchg
adc
mov
repz
lods
mov
pusha
nop
or
stc
mov
mov
mov
sub
sbb
and
mov
push
add
jle
mov
jecxz
add
lcall
imul
xor
cmp
test
in
fnsave
cmp
fisubrs
dec
testl
inc
inc
inc
cmpsl
not
xlat
jne
in
imul
mov
loope
lock
inc
inc
outsb
jb
adc
xchg
adc
std
dec
ret
aaa
test
popf
sub
sub
nop
pop
lea
dec
nop
xchg
in
inc
push
push
mov
daa
jle
cli
pop
in
xchg
data16
pop
addr16
into
push
dec
jbe
leave
iret
jns
or
push
icebp
hlt
cmp
inc
test
shlb
sbb
in
xchg
inc
lahf
mov
lds
push
sub
scas
jl
jecxz
push
imul
call
push
inc
popa
push
ljmp
and
insl
clc
rolb
mov
inc
clc
out
jnp
jp
xchg
fstps
jno
dec
add
jmp
jp
rorb
fidivrs
jp
mov
mov
shl
mov
das
add
scas
inc
xor
pop
in
inc
sbb
and
sar
mov
popa
and
out
pop
ds
xor
pop
std
cwtl
inc
cmpsl
in
test
mov
lret
mov
notl
xchg
les
xor
jne
sub
cmpsl
push
lock
sbb
inc
aam
push
mov
popa
addb
cmpsl
or
push
addl
nop
push
xor
jno
xchg
lret
xchg
mov
stos
lods
mov
imul
outsb
and
jmp
mov
dec
lea
mov
push
xor
shl
in
xchg
or
pop
sbb
stos
test
pop
neg
dec
insl
and
jg
in
or
pop
outsl
xchg
xor
shr
and
cli
mov
cs
fistps
pop
stc
es
dec
xlat
lea
shlb
loopne
movsl
dec
iret
cli
jae
inc
mov
sbb
push
sahf
rorl
pop
int
out
cmp
sbb
jno
outsl
and
push
ficompl
pop
jg
mulb
push
mov
outsl
xchg
pop
mov
aas
cmpsb
cmpl
movsl
stos
leave
cmpsl
mov
add
pop
or
idiv
pop
or
bound
mov
and
ja
incb
cmc
fisttpl
lods
push
pop
mov
add
or
push
out
fstps
cmc
outsb
loop
jl
je
mov
add
mov
fdivrl
not
data16
pop
lret
inc
mov
adc
inc
xor
loope
out
mov
push
and
inc
aas
xor
mov
mov
xor
add
sub
lods
or
jne
dec
ja
cmpb
mov
jg
inc
sub
jl
cmc
shrl
dec
pop
insl
xchg
rorb
sub
lea
or
in
sub
add
pop
xchg
adc
pop
adc
out
cmc
test
sbb
cmp
xchg
jecxz
jno
fbstp
add
sti
sbb
sub
mov
jne
fnstenv
push
and
add
ja
xor
int3
adc
arpl
cwtl
sbb
mov
test
pop
fsubl
adc
or
pop
inc
fiadds
out
xchg
xchg
xchg
mov
pop
idiv
in
cltd
or
icebp
std
inc
xor
lds
lods
fwait
arpl
clc
pop
jl
rdpmc
xchg
dec
pop
or
enter
out
fwait
add
loop
aas
out
mov
jo
pop
and
mov
jmp
test
and
push
repnz
mov
push
rol
and
xor
push
popa
mov
sbb
and
xchg
bound
movsb
xor
fnsave
sbb
cmpb
ret
scas
in
pop
jmp
and
sub
add
or
cmpsl
and
jmp
fs
hlt
clc
int
in
repnz
cwtl
scas
in
lahf
add
xchg
scas
and
mov
arpl
jb
push
cmp
shlb
jne
lock
cmc
jae
clc
dec
add
fisttps
sub
cld
sbb
aad
fnstsw
dec
sti
jne
xor
arpl
dec
imul
sbb
in
mov
dec
iret
scas
mov
test
daa
dec
adc
addl
ret
clc
outsl
mov
pop
imul
leave
mov
dec
mov
insb
pop
andl
jecxz
mov
cmp
inc
dec
xor
clc
push
jle
and
lret
xchg
fstl
in
loopne
mov
dec
adc
and
or
out
cmp
mov
push
push
rolb
add
xlat
adc
push
cmp
and
mov
call
push
loopnew
xor
add
dec
push
xchg
insl
loop
int3
lret
int3
fistpll
push
inc
mov
xor
push
out
adc
aaa
jne
call
mov
xor
jno
cs
imul
push
insl
jmp
cmpsl
in
es
and
ja
mov
push
pop
sub
pop
xchg
mov
inc
dec
xchg
sahf
push
mov
mov
lods
adc
shll
bsf
cmc
jne
mov
sub
int
sub
outsl
int
lods
imul
dec
xor
pop
roll
lret
pop
sti
leave
xchg
daa
xchg
stos
rcll
call
mov
shll
ret
repz
push
xchg
mov
jge
ja
xor
aam
push
lcall
dec
adc
jae
in
cmp
mov
add
cwtl
shlb
ljmp
imul
and
mov
loop
mov
dec
push
lods
rorl
ret
or
add
daa
xor
adc
jnp
push
and
inc
add
int
sub
xor
adc
cmpsl
cmp
pop
mov
pop
les
bound
jl
push
inc
push
mov
daa
adc
xchg
sub
adc
cmp
into
cmp
fsubs
or
fwait
aam
push
push
mov
push
pop
xchg
data16
lcall
pop
dec
cmp
and
inc
int3
sub
push
or
out
rclb
add
xchg
out
cwtl
dec
and
in
test
insb
push
enter
flds
test
xchg
dec
push
jns
and
mov
xlat
cmp
sub
mov
bound
mov
stc
jp
mov
ss
jno
leave
jne
cmp
dec
movsl
dec
jbe
add
mov
push
pop
or
stos
push
sbb
cmp
clc
icebp
dec
fcomip
jbe
inc
sbb
jbe
in
fwait
dec
testl
mov
lods
xlat
sub
mov
or
dec
mov
sbb
adc
jle
or
jae
lahf
scas
mov
or
inc
mov
pop
dec
add
inc
xchg
gs
push
and
xchg
repz
pop
shl
mull
pusha
xor
out
add
pop
lods
mov
cmpsb
add
stos
add
ficompl
call
cmp
stc
test
add
push
push
hlt
je
adc
test
or
mov
pop
les
adc
sub
movsb
inc
dec
jae
in
addr16
push
mov
call
mov
adc
in
jnp
fs
pop
ja
pop
push
dec
jae
xchg
clc
aas
jl
and
subl
inc
jmp
fwait
stos
stc
mov
adc
and
rcrb
dec
lret
testl
sti
test
xlat
ret
sub
pushf
push
negb
push
cmp
rolb
daa
les
jle
popf
mov
sub
inc
mov
cli
test
loop
pop
in
fsubrs
in
and
jne
cmp
js
push
mov
push
in
aad
mov
negb
aas
movsb
dec
fcoms
or
mov
dec
mov
scas
sti
mov
xchg
cmp
stos
out
pop
stos
push
xor
xor
xor
or
xchg
mov
sbb
or
bound
sub
dec
xor
lcall
shlb
testl
aas
in
bndldx
mov
fstpl
mov
and
add
outsb
mov
cmpsb
lods
mov
in
shl
ret
ficoms
out
loopne
cmp
movsl
jae
imul
or
nop
sbb
xlat
mov
inc
dec
je
or
cmp
add
and
inc
mov
fadd
xlat
mov
sbb
mov
xchg
sub
mov
mov
inc
rcrl
dec
in
jl
pop
cltd
call
hlt
fprem
stc
hlt
lods
ffree
stc
sbb
xor
sub
sbb
iret
cmc
lret
inc
test
addl
out
or
fucomi
cld
data16
inc
out
fsub
fisubs
stc
sar
in
js,pn
lret
ret
inc
aaa
int
roll
sbb
cli
jno
lock
inc
xchg
outsl
or
ljmp
int
mov
addr16
sub
daa
shlb
or
rcll
push
test
push
movsb
xchg
sub
cmpsl
sti
mov
xchg
mov
sub
out
mov
dec
sbb
lret
out
mov
xchg
lock
addl
mov
in
xor
xlat
imul
cld
sbb
fiadds
pop
lock
sub
mov
dec
pushf
mov
inc
sub
addb
daa
dec
mov
fdivrs
aas
dec
scas
int
adc
adc
xor
jg
or
fidivrl
repnz
dec
pushf
lods
mov
pop
cld
add
dec
out
mov
jp
inc
xchg
pusha
sbb
pop
popf
inc
popf
out
loope
and
bound
lock
inc
or
xchg
out
push
divl
dec
adc
cmp
fldl
rcr
xchg
scas
iret
pop
rolb
insb
pop
and
ret
lahf
inc
pop
inc
mov
or
fs
inc
mov
rolb
in
inc
adc
mov
cs
and
pop
subl
rol
mov
mov
in
cld
aaa
xor
fdivrs
repz
leave
pushf
cmp
test
pop
mov
mov
sub
popf
mov
xchg
jle
insb
dec
jbe
cmp
xchg
sbb
mov
gs
je
jp
mov
loope
sahf
cmp
jns
sahf
movzbl
imul
aad
sub
xchg
jecxz
aad
std
sub
sub
pop
cmpsl
or
ret
loop
lret
cli
push
mov
mov
test
rol
movups
cmp
out
fsubrl
lcall
pop
push
pop
es
imul
dec
push
clc
sbb
pop
mov
orb
repnz
insb
imul
cli
dec
test
push
fistpl
test
dec
popf
push
ds
aad
loopne
outsb
jmp
add
dec
sub
jecxz
push
push
cmp
xchg
clc
movsb
dec
fwait
xor
inc
lret
loop
in
loopne
imul
arpl
push
xchg
jp
movsl
or
mov
or
add
mov
mov
fidivrs
lcall
cmc
bnd
push
lods
cmpsl
lret
out
divb
pop
or
imul
jge
arpl
fidivl
fidivs
inc
mov
xchg
sti
inc
or
xchg
insb
lock
jbe
sar
iret
jne
fisubs
cmpsl
dec
ss
mov
dec
adcl
jmp
push
push
pop
lahf
mov
popa
lahf
jno
add
enter
aaa
out
shll
pushf
push
sti
lock
xchg
cmp
inc
sbb
cld
rcrl
test
lods
mov
inc
xor
inc
sbb
add
jp
inc
aaa
orb
scas
sbb
push
cmp
pop
sbb
fisttpl
clc
ret
jbe
ret
mov
filds
scas
sti
fidivrl
lock
dec
pop
divl
or
mov
mov
sbb
out
frstor
or
fadds
dec
pop
add
fnstsw
mov
cmpb
xchg
fstl
jns
jmp
fisubrl
and
fwait
cs
xchg
xchg
push
push
push
mov
sbb
lahf
cmpsl
inc
xchg
sbb
pop
cli
fs
cli
xchg
repnz
cmp
daa
xor
out
call
xchg
jo
jge
imul
sbb
stos
adc
cmpsl
pop
std
addb
movsl
add
shlb
cli
scas
stos
rcr
pop
jmp
imul
push
enter
xor
nop
aaa
or
or
cmpsl
push
out
les
iret
ja
mov
rolb
jmp
mov
lods
pusha
pop
mov
pushf
jmp
jle
ja
push
test
das
sub
incb
fildl
or
mov
int
fiaddl
ficomps
xchg
mov
hlt
rcrb
into
sti
mov
dec
mov
inc
negl
loopne
stc
popf
adc
aad
jmp
or
mulb
or
rcrb
into
jmp
push
loopne
mov
push
or
aaa
jmp
dec
ljmp
clc
lods
add
jb
lahf
cmp
popf
or
pop
subb
mov
fadds
fidivrl
test
mov
out
lahf
mov
add
ljmp
push
shl
jle
cli
pushf
push
icebp
mov
xchg
ret
pop
cwtl
in
or
push
faddl
cli
imul
push
pop
push
scas
hlt
cli
xchg
movsb
xchg
mov
dec
pushf
sbb
fildl
jnp
outsb
arpl
out
addr16
adc
std
sub
dec
rcrl
jns
ljmp
sbb
add
adc
mov
xor
jecxz
inc
ss
push
stos
xor
sub
sti
mov
pop
dec
ret
jnp
aam
pop
stc
aaa
cmp
pop
in
xor
mov
aas
out
sub
lock
pop
iret
idiv
pop
lods
xor
mov
filds
jg
mov
mov
iret
xlat
fwait
sti
xor
mov
add
push
in
push
in
jle
lret
sbb
stc
xchg
stos
inc
std
ljmp
ljmp
jnp
cs
push
cld
loop
pop
scas
repnz
dec
adc
movsb
subb
xorl
mov
dec
out
dec
xchg
in
xor
movhps
pop
dec
push
mov
inc
jae
jb
les
mov
mov
fiaddl
repnz
lods
or
mov
sub
xchg
xor
and
dec
call
jp
sub
xor
pop
iret
andb
fisubl
aad
inc
xchg
cli
xor
stos
mov
jl
sti
pop
in
aam
cld
or
stos
aas
sub
sub
lods
stos
movsb
stos
int3
inc
add
or
cwtl
rcll
sub
push
add
sahf
xchg
mov
sbb
divb
shlb
jge
pushf
mov
rorl
inc
mov
pop
xchg
pop
stos
push
in
inc
mov
cwtl
and
inc
xor
test
pop
add
adc
fstps
jp
shlb
sub
xor
mov
jb
sub
xchg
mov
jnp
and
mov
sub
enter
jge
jne
xchg
bnd
hlt
or
lods
cltd
scas
stc
leave
jle
daa
mov
cmp
jge
xor
int3
ss
sbb
cmp
outsl
shl
dec
ret
aaa
out
push
mov
jae
ds
inc
ljmp
rcr
stos
or
push
lock
fisttpll
push
movsl
ja
sub
cmp
mov
xlat
pop
lahf
dec
add
pop
imul
fiaddl
push
pop
or
inc
ljmp
fistl
jmp
sbb
hlt
out
inc
lahf
test
mov
lods
jmp
pop
scas
jp
mov
xchg
cmp
bound
dec
je
lahf
movl
or
xor
push
aad
mov
imulb
dec
mov
and
pop
mov
inc
jecxz
gs
jle
test
xor
jp
jne
lods
adc
inc
dec
mov
scas
fsubl
aaa
in
adc
int
pop
mov
ds
addb
push
and
cmp
xor
jae
out
push
fistpl
xor
cld
ja
ds
sub
sub
jo
mov
iret
mov
out
fwait
adc
dec
xchg
lret
inc
nop
cmpb
pop
xor
xchg
cmp
lcall
mov
inc
loope
mov
ja
push
and
fisttpll
mov
sti
lahf
imull
and
add
dec
dec
out
jp
fdiv
iret
subl
jge
into
cld
iret
or
cs
jmp
xchg
mov
js
sbb
dec
xchg
test
out
add
incl
adc
sbb
daa
cmpl
xchg
cmpsb
xchg
das
jo
cmpsl
sub
and
xor
and
je
mov
sbb
pop
mov
jg
movsl
sbb
rcll
icebp
inc
sub
mov
mov
outsl
test
lea
int
insb
inc
fmuls
rolb
icebp
or
mov
and
cmp
sahf
push
cmpsl
ja
jl
iret
mov
add
jnp
imul
xor
mov
mov
es
les
lods
into
sbb
push
xor
lods
sahf
mov
dec
xlat
mov
dec
xchg
mov
nop
insb
jns
popf
repnz
mov
xchg
push
xchg
test
scas
stc
addr16
mov
cmpb
add
js
fdivp
xchg
sarb
popl
sbb
mov
imul
in
mov
out
test
repnz
mov
jmp
dec
rolb
pop
mov
mov
int
mov
add
cmp
xchg
loope
dec
out
mov
or
arpl
f2xm1
js
jecxz
cmp
add
ljmp
lcall
rcrl
mov
enter
jge
pop
or
pop
fcoms
sub
push
sbb
ret
daa
push
sbb
push
fbld
xchg
jae
or
and
sbbb
pop
inc
xchg
inc
pop
hlt
adc
add
push
iret
jns
enter
cltd
ss
xchg
sub
jbe
pop
ret
mov
ret
out
pop
xor
xor
sub
push
ret
pop
mov
out
nop
push
xlat
sub
in
lcall
sbb
fs
jl
mov
repnz
in
fidivl
sbb
pop
out
lea
movsl
mov
add
cld
jnp
into
cld
scas
inc
add
sbb
jl
mov
in
cmp
ds
push
add
fidivrs
cmp
lock
stos
enter
es
gs
adc
aaa
lret
cmp
lods
add
mov
mov
je
jae
cmp
xor
mov
jae
and
pop
imul
jg
arpl
je
mov
cmovge
sub
and
mov
mov
cmpsl
adc
sbb
mov
pop
and
ret
push
stc
stos
mov
insb
push
cmpsb
xchg
adc
lock
xchg
jecxz
inc
repz
popf
pop
xor
fdivrp
inc
adc
ja
or
iret
lahf
pushl
mov
jno
icebp
icebp
repnz
stc
lds
outsb
fstps
sets
sub
das
int3
sub
adc
add
inc
leave
pusha
jbe
or
repnz
jns
lret
adc
jle
xor
add
mov
sbb
mov
out
les
rorl
xchg
pop
sub
mov
arpl
imull
aas
mov
outsl
jo
sbb
std
js
iret
gs
fdivrp
cld
aas
mov
sbb
push
lods
and
sbb
xor
inc
xor
in
sub
and
sub
jae
lret
mov
dec
pop
cmc
stos
ss
adc
in
mov
add
push
sbb
sub
jg
jne
sub
aam
mov
lock
sbb
jae
lahf
lods
rol
pusha
sbb
mov
pusha
js
enter
jns
mov
rcll
pop
push
popf
mov
test
jnp
sahf
push
pop
addr16
jns
mov
mov
sbb
push
dec
addr16
andl
jno
mov
add
loope
inc
fisubrs
in
mov
sbb
dec
mov
sub
ficompl
inc
je
ds
mov
scas
int
xor
cli
jecxz
add
fcmovu
inc
andb
mov
rol
insl
pop
addl
fstp
aad
mov
shlb
xchg
xor
mov
pop
out
nop
daa
inc
mov
mov
jno
sub
add
mov
dec
mov
pop
inc
pop
inc
sub
sahf
pop
int
into
hlt
test
ret
leave
jg
sub
jg
pop
jecxz
and
arpl
imul
insl
popa
imul
xchg
movsb
push
push
mov
xor
hlt
mov
in
es
mov
test
ret
subl
cmp
jnp
movsb
add
push
inc
push
jnp
cmc
icebp
or
push
rcll
dec
insb
mov
jne
adc
jl
cld
shrl
sbb
mov
push
clc
xchg
mov
mov
jge
in
dec
orb
ret
jp
or
adc
in
push
testb
pop
push
pop
pushf
out
pop
and
mov
mov
mov
adc
fstpl
lock
notb
lods
mov
jne
lods
fwait
dec
pop
sbb
xor
stc
movl
adc
xor
roll
loope
push
mov
mov
add
pusha
in
pop
lcall
faddl
inc
cwtl
and
jo
fcoms
xchg
and
int3
add
mov
jl
xchg
jnp
inc
imul
inc
add
xchg
loopne
popa
test
add
dec
aad
mov
push
pop
cmp
jl
clc
mov
cmp
ljmp
imul
aaa
push
leave
gs
inc
adc
das
mov
ljmp
xorb
in
cli
jnp
popf
pop
dec
and
sub
sbb
pushf
sub
or
push
ja
aam
jg
dec
lcall
xchg
sbb
nopl
fidivrs
dec
jecxz
cmpsb
fwait
mov
pushf
popf
mov
inc
decl
ljmp
inc
jns
ss
sbb
xchg
adc
bound
xchg
ficomps
jle
rcrl
ljmp
pop
std
jecxz
mov
aam
dec
xor
jns
cld
mov
cld
dec
mov
nop
subb
fwait
push
sbb
inc
push
xlat
cmp
test
cwtl
ds
inc
adc
arpl
lods
insl
ja
inc
cmp
push
jge
das
adc
subl
lods
bound
mov
scas
cmp
repnz
repz
adc
sarb
dec
mov
ficoms
cmp
cwtl
std
lret
pop
bound
jns
push
bound
outsl
sbb
test
cmp
jb
enter
ds
or
dec
mov
ret
push
and
mov
mov
shl
push
fmull
int3
cltd
push
mov
adc
cltd
mov
test
ret
cltd
js
mov
pusha
adc
jb
push
lret
into
jns
and
stos
push
pop
movsb
cmc
test
or
lds
dec
insb
xchg
fstl
mov
shll
pop
and
push
inc
mov
jp
cld
das
shlb
xor
sub
dec
das
arpl
pop
mov
mov
mov
pusha
sbb
sbb
js
cld
mov
and
out
mov
sbb
fisubl
enter
inc
sahf
int3
or
inc
fnstsw
iret
pop
mov
mov
bound
jmp
sbb
inc
xchg
sbb
adc
push
and
and
popf
cmc
and
xchg
movsb
jle
aas
scas
std
movsl
mov
pop
fisubl
jnp
std
dec
lds
enter
add
sahf
add
int3
sub
cld
das
or
dec
repz
js
ds
mov
xchg
xorb
jae
xchg
jge
pusha
hlt
mov
popf
mov
push
cmp
jge
shll
xlat
pop
ret
inc
mov
std
jg
fwait
xchg
and
xchg
les
and
adc
pop
cmp
repz
mov
repz
jbe
jns
ljmp
lods
daa
mov
jae
and
ja
dec
mov
pcmpgtw
js
dec
sub
mov
cmp
sbb
pop
jbe
adc
push
or
imul
push
dec
arpl
fs
inc
xchg
scas
cmpsl
frstor
xor
faddl
push
inc
bound
je
iret
dec
mov
jecxz
mov
add
lret
cmc
push
in
pop
das
call
int3
cli
pop
out
push
or
ja
cmp
ljmp
and
sbb
mov
and
scas
ja
sti
imull
scas
cld
jb
sub
push
popa
push
push
insb
inc
pop
jg
pop
dec
add
jne
lds
inc
cs
or
dec
inc
aaa
shrb
mov
mov
pop
cwtl
sbb
pop
fwait
jo
out
adc
jb
stc
pop
mov
stos
push
push
dec
mov
aas
jecxz
sarb
outsl
push
lds
sbb
mov
filds
lods
lcall
inc
dec
sarl
mov
ljmp
imul
mov
cmp
stos
xchg
mov
stos
addr16
shlb
jp
inc
jg
pop
add
mov
jecxz
pop
movsl
mov
cli
movsl
fwait
mov
orl
push
and
push
mov
es
ljmp
lret
fsubrp
sbb
mov
jns
mov
mov
ds
test
xchg
push
je
bswap
push
mov
sub
outsl
scas
push
cmp
into
mov
arpl
pop
xchg
mov
push
xchg
mov
cld
inc
xchg
ljmp
leave
cwtl
sbb
lret
leave
mov
inc
mov
pushl
push
add
adc
ds
lret
push
loop
lcall
add
jae
jae
mov
aad
fstps
push
mov
mov
aas
xchg
aam
add
or
pop
lock
insl
arpl
es
pop
mov
jbe
and
leave
and
fcmovnbe
dec
add
xor
enter
lahf
imul
add
jae
cltd
adc
jnp
mov
xchg
push
adc
push
sub
adcb
lock
mov
mov
fisttpll
add
js
xchg
mov
inc
lea
std
cmp
cltd
lret
mov
push
fildl
sub
sub
pop
stos
sahf
cli
aaa
mov
das
cwtl
stc
scas
xor
pop
loope
xchg
mov
ljmp
mov
or
aaa
cli
or
pop
cmp
dec
jne
insl
test
dec
mov
lds
into
insb
test
mov
dec
ja
popa
xor
dec
jns
movsb
mov
push
mov
or
pop
in
outsb
scas
in
inc
push
insb
aas
ja
mov
mov
adc
jp
pop
lods
or
fldl
int
xor
clc
cmpl
xchg
mov
sbb
data16
js
cs
mov
ds
xchg
hlt
lea
jb
mov
inc
lds
idivl
cmp
rorl
std
add
pop
or
faddl
mov
aas
adc
scas
sub
cmpsl
arpl
pop
jle
arpl
mulb
inc
testl
lcall
imul
test
mov
scas
ret
sub
bound
into
enter
test
lret
xchg
inc
xchg
adc
out
jbe
sbb
mov
js
in
push
adc
cwtl
sbb
es
dec
mov
cltd
addr16
leave
mov
cld
imul
or
les
outsl
es
dec
jecxz
xor
loopne
xchg
lret
repz
int
adc
lea
inc
sti
mov
push
mov
or
cltd
and
dec
push
sub
ss
pop
aam
int3
sub
cmpsl
loopne
loopne
mov
in
dec
in
and
sbb
inc
aad
inc
rorb
mov
push
pop
popa
insb
xor
jecxz
mov
int
stc
ss
out
and
lret
fnstenv
lcall
scas
pop
pop
dec
iret
dec
fsubr
outsl
mov
cmpsl
lret
pop
pop
aam
inc
mov
inc
mov
dec
dec
push
test
or
cwtl
imull
sub
jl
sub
and
mov
addl
push
jecxz
sbb
hlt
movsb
jne
andb
leave
xor
xchg
cwtl
push
or
lea
scas
sbb
jb
pop
outsl
xchg
lock
jp
push
in
xchg
add
mov
cs
cmp
cmp
push
jnp
repnz
push
cmp
pop
cld
jge
xacquire
lods
lods
jae
ret
push
push
xchg
stos
out
sub
xorb
mov
push
jo
into
or
add
mov
outsb
fisttps
xchg
addr16
xchg
les
outsb
xchg
xor
test
pop
pop
push
sbb
cltd
sub
sbb
dec
and
je
add
dec
in
inc
sub
mov
xorb
js
les
adc
je
fs
leave
fisttps
test
mov
ljmp
mov
add
daa
jne
arpl
aam
int
loope
adc
loop
movb
sbb
jge
outsl
mov
mov
or
sub
fsubs
aaa
dec
imul
dec
in
add
dec
into
pop
movsl
and
stc
sub
ljmp
push
lods
add
into
push
mov
jnp
mov
mov
and
divb
std
mov
aaa
mov
dec
or
repnz
dec
mov
add
pop
sub
or
pop
lret
daa
cmp
dec
inc
aas
inc
pop
add
loope
jae
mov
mov
mov
je
adc
mov
out
xor
fucomp
mov
in
ds
push
mov
push
inc
or
movsl
xor
xor
lods
dec
aaa
js
mov
push
and
lret
add
shrl
jmp
xlat
les
stos
lods
xchg
push
lret
loopne
cld
aaa
push
hlt
ret
testb
or
dec
and
jmp
sti
xor
mov
and
stos
aaa
jmp
mov
adc
sub
and
mov
dec
in
xchg
jmp
push
mov
pushf
jmp
push
or
es
lods
insb
decb
sub
dec
fdivl
insb
jno
add
jp
icebp
mov
lret
cmp
cmp
mov
stc
ficomps
lahf
in
clc
loopne
imul
nop
negb
xlat
dec
fcomps
rorl
jbe
loop
leave
jmp
jne
push
in
fidivrs
dec
mov
mov
or
jns
mov
movsl
dec
test
test
insl
cmp
mov
popa
mov
sbb
cmc
jmp
inc
in
stc
push
fisttpll
add
aas
adc
std
xchg
mov
inc
test
js
jp
lcall
aaa
and
pop
pop
scas
es
sub
dec
xchg
xchg
jb
pop
pop
xchg
pop
aad
xor
pusha
stos
jo
call
pushf
in
cmpsb
xor
cmp
adc
mov
or
inc
outsb
insb
pop
addr16
mov
xchg
aaa
mov
mov
pop
cld
jp
cmc
pop
clc
dec
addr16
mov
jge
mov
mov
aas
sbb
idivl
sub
inc
sbbl
adc
subb
mov
into
call
pop
cmp
andb
data16
add
jle
stc
dec
std
call
sub
push
in
in
mov
sbb
sahf
test
jns
movsl
xor
mov
mov
add
cwtl
jbe
rorb
push
xor
rcll
mov
or
dec
mov
lods
aaa
cmp
enter
dec
fmul
popl
ret
push
lock
ret
cmpsb
hlt
in
inc
imul
je
jle
xor
xor
mov
in
adcl
cmp
xchg
lcall
mov
and
or
ss
dec
ss
int3
int
jbe
push
cmp
or
cmp
jg
jle
addr16
add
jmp
dec
sbb
fnstenv
or
shl
gs
mov
xchg
jbe
mov
movsl
inc
pop
dec
sbb
adcl
dec
pop
aam
stos
dec
test
addr16
subl
pushf
int
iret
sahf
aas
dec
jbe
xor
fistl
xchg
sbb
xchg
mov
jecxz
push
sub
jno
fwait
cmp
push
insb
xor
lods
and
sbb
lcall
test
xchg
jb
or
pop
dec
test
jge
test
push
test
addr16
adc
pop
add
dec
jmp
jl
dec
mov
fnstcw
js
lea
mov
pop
nop
sti
lock
mov
cld
into
js
aam
scas
stos
or
test
add
arpl
icebp
dec
or
and
and
and
add
out
mov
outsb
je
mov
pop
push
sub
mov
push
adc
in
inc
push
stc
xor
xor
cs
je
lcall
lahf
fxch
dec
shll
fstpl
insb
fdivrl
ja
sub
pop
adc
xchg
jne
xor
subb
and
mov
and
loope
xchg
inc
jmp
imul
mov
xchg
push
add
imulb
mov
adc
pop
lea
test
lahf
inc
lds
lds
xor
mov
jae
cwtl
pop
je
sub
sbb
xor
jbe
pop
and
lret
xor
daa
addb
add
mov
sbb
sub
xchg
sbb
test
pop
sbb
jnp
push
out
dec
into
and
adc
dec
and
ljmp
ja
out
into
adc
inc
push
add
and
mov
imul
stos
add
cwtl
ret
sub
faddl
ljmp
or
and
les
jmp
and
shrb
cs
hlt
addr16
pusha
insl
pop
cmp
jle
mov
mov
jge
sbb
sbb
cmpsb
and
jae
fwait
mov
stc
lods
in
jl
rcrb
pop
dec
adcb
sbb
xchg
lret
adc
add
notl
dec
pop
adc
xchg
mov
mov
ja
push
mov
push
or
cmp
push
add
fstl
mov
test
inc
roll
pop
sahf
and
sub
cmp
movsl
inc
ret
lret
push
push
xor
mov
or
stos
jae
mov
in
call
inc
test
int
jmp
add
cld
loopne
dec
or
repz
rorb
and
mov
mov
mov
fiaddl
enter
cmp
or
scas
lock
adc
or
out
lods
out
sub
dec
iret
rcll
sub
rcrb
aam
mov
mov
mov
inc
lods
ret
insb
call
mov
ss
jge
sahf
in
xchg
jae
mov
lret
std
lds
pop
js
lret
ret
arpl
sub
stos
dec
andl
mov
adc
jns
and
icebp
iret
and
test
shll
sbb
pop
fwait
test
push
sub
mov
sbb
std
and
push
pushf
out
ljmp
les
repz
sub
jb
out
in
pushf
imul
aad
push
jns
or
bound
add
scas
xor
fdivl
lcall
in
lds
subb
incb
sbb
jno
and
repz
enter
jns
mov
in
es
lods
scas
pop
xchg
pop
mov
lret
sbb
sbb
xlat
jo
bound
dec
push
mov
jo
mov
fs
bound
and
push
hlt
es
push
movsl
das
pop
outsl
dec
fimull
pop
mov
mov
adc
test
push
xor
dec
mov
mov
rcr
xchg
mov
sub
stos
aad
mov
popf
lcall
repz
imulb
mov
lret
jmp
mov
insl
xchg
push
xor
dec
xchg
dec
std
mov
mov
loop
roll
push
sub
xchg
insb
stos
push
dec
mov
xchg
jb
push
cmpsb
push
inc
sbb
jne
mov
inc
cmc
cmc
sbb
jmp
push
cmp
das
fidivl
ljmp
jmp
or
dec
stos
dec
shrl
shrl
adc
cmp
scas
gs
lret
mov
jmp
dec
imul
push
add
mov
sti
leave
add
jl
mov
lea
sbb
xor
dec
rcrb
hlt
fsubrs
mov
mov
outsl
es
mov
ss
mov
ret
inc
mov
jnp
sub
das
fs
mov
xchg
pusha
mov
jbe
push
add
xor
and
mov
pushf
ficompl
push
mov
int3
mov
or
push
es
ret
dec
push
sub
decl
mov
push
testl
mov
mov
mov
loopne
jl
popf
popf
ss
adc
mov
mov
icebp
cwtl
fbld
mov
lcall
test
pop
push
pop
bound
xchg
pop
cld
loopne
inc
xchg
aas
bound
rcl
pop
loope
mov
dec
push
pop
enter
pop
lds
mov
nop
dec
aaa
cwtl
aas
sbb
sti
movsl
pop
test
push
loope
sahf
mov
xchg
mov
sub
loopne
sbb
and
push
lea
mov
and
push
mov
addr16
test
out
ja
shrb
push
mov
push
stos
and
addr16
xchg
pusha
ss
dec
mov
jb
fstpt
das
ja
sbb
sub
dec
push
xchg
divb
stc
call
add
sbb
mov
out
icebp
pop
enter
mov
adc
sbb
orl
inc
pop
loop
testl
mov
xor
and
lahf
in
add
push
aaa
or
cmpsl
push
insb
cmp
push
aas
pop
outsb
call
xlat
lcall
or
rcr
fs
mov
jp
jns
leave
out
pop
jno
minps
loop
sbb
xchg
mov
and
outsb
mov
lret
ret
out
insl
push
and
inc
mov
cmp
sub
ja
sub
cmp
js
in
xchg
aas
icebp
js
test
in
push
dec
xlat
inc
xor
adc
pop
adcl
movsb
in
repz
outsl
cltd
inc
sbb
and
enter
jp
arpl
sub
add
and
aaa
sub
mov
jp
fsubl
cmp
sub
pop
in
add
xchg
pusha
shlb
lea
mov
cmpsl
lcall
ret
push
aas
lods
dec
mov
rcrb
and
add
inc
loopne
inc
shlb
mov
pop
pop
pushf
negb
or
cwtl
ss
and
mov
test
push
loopne
or
mov
into
sub
push
sti
mov
lods
jmp
jo
aas
or
lods
or
sbb
rolb
inc
pop
ds
jno
jle
ljmp
insl
insl
mov
lock
shlb
push
enter
sub
pop
ljmp
in
fucomi
cs
ljmp
imul
sti
and
lds
das
flds
mov
outsl
pop
or
mov
dec
lret
leave
cmpsl
jno
out
repnz
les
lret
mov
add
outsl
ficompl
or
scas
jp
add
dec
ljmp
mov
movsb
cmp
fwait
add
aaa
sbb
aaa
push
stos
ss
inc
xor
dec
mov
aad
sahf
imul
and
mov
inc
xor
sub
imull
or
xor
inc
scas
dec
dec
fistps
fwait
sahf
inc
fdivrp
out
push
ss
sar
dec
push
cmc
sub
dec
dec
lahf
leave
lahf
and
mov
fwait
leave
arpl
sbb
push
clc
push
lods
mov
cmp
das
jo
mov
lods
sbb
test
mov
add
mov
mov
jae
rorb
dec
pop
adc
je
pop
jns
mov
and
fisubrs
push
test
into
add
dec
push
out
mov
push
fisttpl
mov
call
addl
int3
mov
and
mull
fisttpll
ret
xor
jecxz
mov
stos
pusha
test
sbb
or
or
push
sbb
xor
shr
sub
and
add
adc
mov
adc
add
jns
sub
xorl
sbb
pop
cmp
push
cmp
xor
sbb
ja
or
add
xor
mov
push
push
adc
jg
in
stos
jns
stos
outsl
sbb
les
xchg
mov
loope
icebp
jge
inc
into
pop
je
jl
add
out
jecxz
and
enter
jge
test
lods
sti
nop
push
adc
or
inc
je
mov
mov
rolb
xor
fisubs
lret
das
mov
push
shlb
test
xchg
imul
jecxz
cmpsb
add
lock
aaa
push
int
dec
aas
sbb
pop
or
jnp
jns
add
cmp
cli
pushl
mov
push
cmp
mov
sbb
lcall
loopne
in
into
cltd
test
mov
mov
add
jne
adc
scas
add
pusha
psrad
mov
lret
loopne
int3
xor
ja
pop
sbb
xor
adc
lock
pop
sbb
or
ss
cmpsl
stc
xchg
scas
sbb
sbb
rolb
test
fs
es
clc
out
push
sub
sub
mov
jno
fcompl
adc
xchg
out
jge
cld
mov
sub
or
push
mov
cli
mov
ret
push
push
dec
pushf
xchg
add
andl
movsl
cmp
xor
out
nop
test
mov
faddl
pop
mov
xor
adc
mov
pop
sbb
push
cmpsl
mov
push
push
xor
push
and
test
jecxz
js
lahf
js
inc
sti
adc
sbb
and
gs
pusha
push
call
mov
stos
pop
mov
lods
pop
cmc
xchg
mov
inc
push
mov
push
sti
imul
in
dec
xchg
sub
jo
inc
push
sbb
ret
out
add
or
inc
hlt
cli
in
pop
xor
xchg
xchg
sub
xchg
por
fsubs
jmp
mov
ficomps
andb
js
mov
scas
adc
inc
add
add
push
xor
jg
push
xchg
dec
mov
loope
aas
addb
outsb
lret
or
add
mov
mov
stc
cli
add
jnp
repnz
pop
mov
fwait
jne
pop
or
pop
pop
push
jcxz
adc
sbb
shrb
xchg
xchg
push
outsb
sub
imul
sahf
pop
cs
mov
xchg
mov
mov
jo
inc
dec
pop
lcall
test
in
pop
scas
jae
in
out
ret
sarb
out
out
push
push
repnz
push
mov
jp
out
dec
pop
fimull
pop
sarl
lcallw
ds
pop
sbb
sub
dec
imul
push
add
jl
mov
insb
cmpsl
scas
xor
cmp
lret
xchg
dec
inc
inc
insl
sub
scas
jno
into
fmul
sbb
arpl
adc
faddl
push
mov
push
inc
test
add
inc
pushl
ljmp
mov
inc
les
xor
cmp
cmpsl
and
or
rolb
mov
push
stos
je
mov
push
inc
mov
mov
mov
xor
mov
leave
std
in
mov
xchg
xchg
inc
fsub
mov
cmp
pusha
sub
mov
cwtl
sub
sbb
sahf
push
gs
dec
loope
loopne
insl
lods
add
cmp
inc
les
lret
dec
pop
cmp
and
adc
clc
mov
inc
mov
lcall
mov
sub
fidivrl
jmp
xchg
inc
mov
js
xchg
jne
push
dec
and
int
out
stos
and
in
or
xchg
xor
movsl
icebp
sbb
push
cli
mov
cmpsb
out
or
sar
pop
sub
adcb
pop
sar
int3
enter
sub
mov
add
add
jle
mov
jo
insb
shrb
nop
xor
mov
xor
cld
jns
std
or
scas
push
jmp
in
dec
gs
and
setl
sti
call
xchg
ja
sbbb
mov
fnsave
sahf
add
andb
pop
lcall
rcll
push
ja
push
mov
pop
or
mov
or
sbb
data16
pop
add
sub
push
fcomps
xorb
cmpxchg8b
lret
add
in
cmp
or
das
push
push
aas
sbb
call
inc
mov
jmp
scas
popa
lock
pop
fs
ret
sbb
jne
repnz
popa
js
mov
inc
jns
push
test
les
xchg
add
stc
nop
ss
gs
push
loopne
ja
push
setno
cmpsl
lret
xlat
pop
out
jb
test
lea
call
mov
jne
rorb
xchg
push
jo
or
push
lret
mov
xchg
loop
inc
add
and
mov
dec
cmp
fistps
jge
push
sarl
nop
jge
xchg
addr16
imul
adcl
mov
rolb
sub
adc
in
cmpsb
xor
popa
xor
es
jg
dec
popa
in
and
dec
mov
dec
bound
loope
clc
add
clc
test
mov
loop
hlt
pop
jl
test
lcall
out
mov
jge
pop
or
lea
jl
and
add
out
out
fldl2e
repnz
notl
nop
int
stc
mov
xchg
add
imull
subl
lods
xchg
sti
mov
daa
jbe
ja
lret
or
sarl
push
fistl
repz
jecxz
pop
inc
pushf
ror
push
mov
jnp
inc
cmc
hlt
in
test
and
pop
pop
imul
or
cld
out
fiaddl
std
push
int
cmp
sarb
or
popl
cmpsb
or
mov
mov
xchg
pop
outsb
xor
cs
popa
xor
testb
fists
lcall
xlat
stos
sub
iret
lcall
jae
rol
lods
outsl
jbe
push
aam
hlt
pop
mov
sbb
add
hlt
int
sub
xor
lahf
add
push
xchg
in
sub
mov
jge
xchg
cmpsb
jle
or
cltd
je
mov
cmc
or
and
sti
loope
push
std
rolb
sbb
lock
adc
test
int
mov
and
xchg
inc
fisttpll
popf
jp
lret
adc
sub
nop
aas
pop
fs
push
test
das
popf
mov
jmp
adcl
mov
inc
in
mov
push
add
jge
outsl
inc
xlat
enter
fdivrl
insl
dec
outsl
or
fwait
cmp
mov
sbb
jle
mov
pop
ficoml
popa
and
lods
push
setno
xchg
mov
out
call
cmp
rcrl
cltd
xor
push
jg
clc
fsubrp
lods
pop
rcl
ds
daa
pop
mov
andb
lods
es
fsubl
jbe
insb
pop
ljmp
xchg
xor
mov
movsb
std
fdivl
enter
dec
divb
and
fistl
data16
lahf
sbb
jp
mov
dec
ret
inc
stos
out
mov
or
dec
sub
in
mov
or
or
lds
mov
push
das
inc
hlt
push
xor
popf
sbbl
push
xchg
dec
add
popl
imul
dec
adc
sub
sti
gs
sub
add
dec
into
test
stc
xchg
int3
mov
ret
fwait
lods
and
and
mov
sbb
mov
sbb
lods
sahf
push
subl
jb
or
sub
sarb
xabort
flds
orl
insb
mov
in
mov
jecxz
mov
mov
jmp
ret
or
movsb
jle
mov
ret
mov
xchg
pop
dec
fs
icebp
and
mov
mov
lock
add
cld
jno
mov
mov
test
mov
or
lea
dec
adc
gs
mov
leave
and
adc
mov
or
daa
xor
push
sbb
push
add
dec
jmp
lcall
xlat
insb
loope
sahf
test
xor
dec
loopne
add
enter
dec
iret
mov
arpl
imul
mov
jb
retw
adc
lahf
out
push
lods
lods
add
test
out
adc
mov
adc
add
pop
test
mov
cmp
fstps
push
in
imul
aad
fbstp
sbb
jecxz
cmpsb
xor
aaa
dec
movsb
outsl
mov
mov
shlb
xlat
cmp
jp
icebp
cmc
test
and
lret
imulb
iret
inc
aam
enter
adc
jl
scas
mov
mov
mov
and
sbb
and
mov
das
out
iret
js
clc
and
or
adc
mov
ja
std
adc
add
push
aaa
jno
lds
bound
sbb
mov
dec
jecxz
test
mull
jg
dec
jmp
xor
fs
adcl
push
sub
sbb
pop
mov
ret
pop
outsb
subb
js
es
dec
xchg
mov
cmp
in
loope
bound
adc
popf
mov
xlat
add
jp
mov
mov
push
pop
cmp
mov
cmp
cwtl
aam
mov
add
add
pop
mulb
push
dec
push
and
lds
push
xchg
lret
pop
pop
and
mov
sarl
in
dec
ret
mov
push
enter
or
imul
xchg
test
out
push
push
ret
leave
add
sbb
push
push
pop
and
inc
jp
sbb
sti
add
cmp
mov
add
and
mov
sub
pusha
add
imul
sbb
adc
mov
shll
aaa
es
rol
fcmovnbe
orl
dec
mov
rcrb
xchg
jns
pushf
insb
ret
out
sub
insl
int
mov
rcr
test
push
xlat
xchg
xchg
sub
orl
leave
jo
cld
insb
inc
in
aam
insl
cmp
lcall
and
pop
jmp
gs
and
lock
paddsb
mov
loopne
test
add
cmp
mov
aas
lahf
xchg
adc
lods
lods
sahf
cmc
xor
ja
addr16
aad
in
popa
mov
sub
push
cmp
arpl
stos
mov
xchg
push
mov
add
sub
add
dec
xchg
mov
xor
adc
sub
andl
dec
inc
or
push
mov
mov
out
xchg
in
les
test
mov
and
mov
into
outsl
add
pop
shlb
dec
push
xor
pushf
mov
add
jnp
scas
test
push
sub
test
ja
in
jnp
repnz
movsb
sbb
jb
mov
popf
insb
sub
jle
daa
jge
jno
jmp
xchg
mov
mov
ret
jg
movsl
fwait
jmp
mov
dec
fcomp
jbe
testb
and
pop
fs
add
sbb
dec
add
cmp
adc
mov
in
xchg
cmpsb
shll
fistps
in
sub
das
jecxz
roll
xchg
sub
mov
mov
jmp
sub
pop
or
std
jb
into
push
rorl
mov
arpl
inc
push
loop
cmpsb
test
sbb
shl
push
cmc
dec
in
or
push
enter
pop
arpl
lmsw
add
inc
xchg
out
xchg
out
pop
jecxz
xlat
dec
sub
push
add
and
jp
pop
hlt
cltd
xchg
fcmovnb
lret
mov
in
xchg
mov
push
dec
test
and
push
in
mov
cwtl
add
mov
inc
imul
sbb
repnz
xor
inc
mov
mov
das
dec
mov
sub
in
ja
mov
mov
jl
adc
push
dec
and
jmp
sti
lret
dec
sbb
or
pop
cmp
sarb
inc
inc
daa
cltd
pop
pfsubr
fnstcw
pop
or
pop
cmp
add
jmp
or
sub
cmp
xlat
sub
les
mov
add
mov
les
fwait
xchg
out
int3
sbb
xor
ds
dec
xchg
hlt
and
scas
test
adc
cwtl
movsl
loope
xor
add
mov
cmc
in
push
out
fsts
jp
mov
pop
stos
push
test
add
rolb
xchg
dec
dec
mov
outsb
jl
aas
popl
jae
xchg
inc
jmp
xchg
dec
pop
cmpsl
inc
adc
cmp
shrb
lods
inc
and
dec
mov
fwait
push
jbe
sbb
negb
mov
mov
pop
fidivl
jge
fiadds
bound
fstps
lods
adc
xchg
aas
mov
data16
out
aas
mov
push
inc
adc
fnsave
fisubrl
leave
mov
stos
into
dec
xchg
mov
dec
frstor
in
daa
je
xor
scas
pop
pop
adc
jg
lahf
pop
popf
xor
jecxz
cmpl
sbb
mov
mov
rcr
pushf
mov
fldenv
rcll
jmp
popf
test
fwait
xchg
lahf
xor
jmp
cmc
pop
or
jmp
mov
popa
add
xor
lds
mov
outsb
xor
test
mov
add
adc
ja
push
lret
out
lock
loope
pop
add
fsubrs
fwait
mov
popa
je
adc
cmpsl
outsb
cmpsb
mov
mov
push
lds
fwait
xchg
and
push
xor
mov
movsb
sub
xchg
add
push
or
das
imul
test
and
in
push
mov
mov
add
rorl
popa
fildll
inc
inc
insl
lods
stos
test
push
insl
mov
jmp
fstpl
inc
pop
add
cmp
popa
insl
dec
pop
mov
push
shrb
in
pusha
test
mov
lds
inc
ljmp
inc
jle
xchg
divl
std
mov
jne
sbb
xlat
jnp
and
pushf
jnp
jge
divb
inc
jmp
jp
pop
jnp
mov
dec
out
xchg
sub
jl
popa
xor
xor
pop
out
xchg
test
cmpsb
push
xchg
mov
add
and
rolb
int3
enter
mov
fsubrs
shlb
cmp
bound
hlt
lods
hlt
adc
ror
outsb
pop
dec
test
adc
in
pop
stc
int3
cmpsl
dec
dec
jecxz
xchg
shrl
fcmovbe
cmp
or
inc
in
sub
ljmp
sbb
jg
std
int3
repz
mov
add
xchg
sub
mov
pop
outsl
rcrl
scas
jae
sti
jge
fwait
sub
fmuls
adc
pop
add
mov
shl
mov
jmp
mov
pop
sbb
push
or
adc
adc
dec
sar
cmp
pop
xor
lret
sbb
xchg
cs
jo
test
or
int3
jne
into
or
test
cltd
inc
cli
fsts
mov
out
dec
dec
mov
xchg
lret
mov
adc
rolb
ror
fcmovb
lret
dec
insb
sbb
decb
rol
mov
lcall
popf
xlat
test
rcl
mov
pop
and
sbb
imul
push
jnp
arpl
adc
shrb
comiss
and
cmpsb
cltd
jo
inc
jnp
lcall
movsl
xchg
rorl
mov
imull
adc
mov
mov
imulb
aam
xlat
mov
cltd
push
mov
pusha
jp
int3
ret
lds
pop
je
dec
lock
xor
or
mov
sub
test
test
pop
xchg
aaa
xor
popf
fyl2xp1
lock
add
inc
sbb
add
mov
cmp
xor
sti
xlat
push
add
cltd
test
add
jecxz
cwtl
mov
push
push
mov
lret
cltd
jne
ljmp
mov
pop
test
shlb
enter
scas
or
fiadds
adc
push
in
cs
popa
das
fldl
mov
push
mov
leave
sahf
movsl
cmp
add
mov
insb
cld
daa
sbb
stos
insl
or
adc
jp
push
mov
daa
jge
fs
mov
iret
ds
sub
das
push
popa
insb
jno
jmp
pusha
jb
ss
loop
sub
popa
pop
cs
addb
fisubs
fldl
lock
jmp
jg
mov
jmp
add
fwait
int
lods
rorb
xchg
and
push
fucomp
push
ljmp
push
sbb
push
sbb
std
pop
and
pop
test
and
add
ja
imul
arpl
mov
scas
and
stos
enter
daa
pop
movsl
or
xor
loope
lods
in
fiaddl
dec
ficoml
fcomp
stos
mov
or
sti
outsb
or
pop
inc
or
and
mov
sbb
lret
loope
dec
stos
adc
sbb
gs
into
in
in
insb
nop
imul
gs
and
adc
roll
pop
test
fimull
xor
cld
dec
incb
cmpsl
jne
fldcw
mov
test
popw
jg
outsb
iret
repz
xor
mov
in
cmc
cmp
test
push
xor
pop
dec
or
add
xchg
nop
push
push
faddp
icebp
jecxz
xor
mov
xor
push
dec
sub
inc
int
mov
adc
xor
push
mov
lahf
add
mov
inc
stc
into
mov
movsb
mov
daa
cld
and
xchg
add
sub
push
cmc
jmp
pop
enter
int
out
loopne
push
popa
ljmp
jns
pop
setnp
ja
xchg
jle
out
inc
rcl
jmp
and
xor
fwait
push
nop
mov
jl
test
pop
je
xchg
add
notl
js
rol
sar
movsb
stos
push
aad
rcl
imull
js
pusha
or
add
mov
or
scas
sti
aas
daa
push
inc
adc
cmp
dec
jmp
ror
xchg
stos
loopne
jle
jle
and
or
js
cmp
jo
push
in
inc
xchg
mov
push
jo
xchg
lahf
in
loop
lcall
imul
lds
mov
add
fdivrl
pop
lods
and
lret
xlat
or
xor
lds
mov
dec
in
mov
scas
add
jp
sub
dec
stos
and
sub
fisubrl
stc
push
jl
inc
stos
pop
sbb
xor
out
mov
sbb
mov
ja
jmp
mov
pushl
in
xor
in
lret
xlat
mov
and
aaa
negl
push
movsb
data16
inc
idivb
or
push
mov
stos
stos
out
imul
outsb
sub
sub
pop
cmpsl
sbb
test
je
in
mov
in
cld
testl
movsl
lret
fldl2e
ljmp
les
repnz
js
ja
push
int3
pop
fsubp
and
out
add
cmp
dec
sub
xchg
or
jge
dec
cmpsb
rorb
in
bts
divb
dec
enter
sub
inc
xor
push
fxch
stc
xor
push
push
adc
xorb
imulb
cmpsb
cmp
inc
xor
jnp
xor
rol
and
int3
sub
xchg
adc
sbb
shlb
lahf
repnz
lcall
bound
shrb
xor
and
fists
dec
out
or
movsl
add
add
and
add
negl
inc
jecxz
xor
ficoml
lods
hlt
cmp
jp
sub
outsl
cli
sbb
jb
xchg
jle
mov
mov
cmpsb
loopne
pop
outsb
inc
push
std
ret
or
sbb
xor
enter
jno
jecxz
mov
cmpsb
mov
cmpl
daa
movsb
push
cmp
cltd
mov
pop
add
bound
sbb
lret
lea
loope
push
mov
fmuls
xlat
int3
mov
shrl
dec
pop
repnz
aas
xor
adc
pop
dec
out
flds
repz
aas
add
push
xchg
adcb
jno
into
popa
xchg
cwtl
sbb
cmp
and
push
adc
ss
sub
pop
adcb
loop
mov
mov
xchg
mov
pop
in
pop
cmp
in
in
pop
movsb
mov
jg
push
add
cltd
lret
jmp
dec
mov
xor
sub
dec
lcall
fnstenv
add
in
popf
movb
in
leave
lret
loopew
cmpsl
jmp
insb
ds
pop
nop
and
inc
subb
xlat
sbb
lock
gs
add
lods
mov
sub
cld
scas
imulb
aaa
push
js
mov
nop
repz
mov
filds
push
aad
adc
mov
adc
ds
imul
mov
or
into
dec
push
hlt
jno
cmpsl
negb
cld
imul
xor
fucomip
mov
push
cmp
push
sub
mov
out
add
pop
lcall
inc
xchg
adc
int3
inc
lret
stc
sub
test
dec
jecxz
mov
pop
je
outsl
subb
mov
jno
fisttpl
popa
add
ret
xor
cmpsl
fists
data16
cmc
mov
daa
cltd
mov
adc
push
inc
sar
push
arpl
sub
cwtl
sti
loopne
inc
lret
pop
lods
xchg
mov
or
ror
pop
jno
test
mov
jb
push
jmp
cmpb
jp
and
push
stos
popf
push
cmpb
and
inc
push
mulb
push
dec
fucom
pop
das
xor
out
pop
daa
loop
cmp
fldz
mov
loopne
mov
inc
dec
cs
movsl
and
out
sbb
out
cmp
cltd
stos
lret
test
sub
push
or
push
adc
ljmp
xchg
incb
sti
pop
addr16
sub
leave
cmpl
fcmovbe
dec
fdivrl
stos
call
cmp
ret
push
inc
imull
jae
aad
lret
ret
push
adc
gs
dec
or
pusha
add
leave
adc
lds
cld
js
pop
lods
cmpsb
xchg
and
mov
adc
pop
mov
or
cwtl
stos
cmp
inc
sbb
leave
enter
cmp
sub
es
or
dec
fisubl
xchg
push
push
lock
pop
cmp
fwait
jne
repnz
mov
cmp
rorb
popa
loop
mov
mov
stos
decb
lods
xchg
and
xchg
pop
lods
repz
movsb
insb
adc
inc
dec
mov
dec
dec
adc
add
iret
xor
shl
je
repz
lods
repnz
and
lcall
or
inc
test
es
lods
inc
popf
jae
or
sbb
adc
pop
aam
cmpsb
jmp
mov
enter
push
mov
inc
ljmp
push
std
dec
in
jecxz
xorl
xor
imul
call
inc
pop
sbb
cmp
push
fldcw
mov
mov
out
loope
roll
inc
mov
stos
inc
div
adc
adc
fwait
into
pushf
push
test
aad
cmpsl
cmp
push
jne
ret
jbe
xor
test
or
mov
outsl
dec
cli
movsb
into
pop
pop
xchg
cld
sti
fadds
ljmp
stos
sub
jecxz
adc
cwtl
pusha
enter
or
push
arpl
mov
int3
mov
jne
jae
mov
xchg
mov
icebp
inc
push
mov
out
xchg
std
int
xor
cmp
shr
loop
adc
push
inc
dec
sub
mov
imulb
repz
mov
mov
das
or
xchg
add
lods
stc
mov
stc
neg
mov
call
cmpsl
jl
popf
pop
pop
in
pop
repz
or
dec
pop
pop
xchg
int
imul
subb
imul
into
mov
pop
xor
jmp
dec
jp
leave
inc
inc
xchg
movsl
clc
aaa
xor
scas
mov
je
ja
push
pop
sub
loopne
arpl
or
sbb
cmc
int
add
cmp
add
sbb
arpl
cmpsl
xchg
aad
sub
dec
and
inc
pop
pop
add
lret
add
or
jmp
mov
or
xchg
sbb
push
lods
into
add
imul
xchg
lds
mov
inc
inc
pmullw
and
daa
and
pop
add
and
cmpsb
cld
enter
jo
adc
ljmp
out
aas
loop
xor
sbb
push
jge
cmp
orl
dec
adc
add
popa
test
jns
inc
ja
inc
jbe
fldenv
mov
mov
jle
mov
xchg
out
adc
push
pop
mov
ja
xchg
bound
jle
repnz
cld
outsl
insl
sahf
pop
aaa
imul
push
daa
aaa
into
push
pushf
aas
leavew
jl
pop
aaa
cltd
add
imul
out
stos
dec
jl
daa
add
xchg
and
shrl
jecxz
scas
or
mov
notb
sti
inc
inc
mov
add
fdiv
push
dec
rolb
dec
addb
nop
push
lcall
pop
pop
in
mov
or
insb
popf
insl
jmp
pop
sbb
stos
xlat
lret
scas
ret
mov
fwait
pop
stc
jb
or
popa
push
jmp
mov
pop
push
add
xor
sbb
arpl
add
loopne
loope
nop
int3
push
push
movsl
or
scas
pusha
stos
dec
xor
sahf
mov
push
addr16
lods
movsl
cwtl
int
jb
inc
lds
mov
data16
sub
cmpsb
call
ss
addr16
inc
xor
dec
mov
adc
lock
inc
aad
jg
push
mov
icebp
daa
cmp
repnz
vcmppd
sub
jnp
jae
dec
adcl
jo
cmp
sbb
addr16
insb
hlt
pop
jne
or
xchg
rcrb
leave
mov
popa
std
negl
mov
mov
xor
into
out
rorb
mov
jmp
jb
orb
mov
fldl
xchg
repz
or
nop
into
daa
lcall
jae
mov
mov
inc
sub
out
int
jnp
popa
out
xchg
sbb
bnd
and
pop
or
dec
xor
inc
in
sbb
jg
outsl
gs
lds
lock
idivl
push
adcl
fstps
ficomps
out
repnz
xchg
push
mov
mov
nop
mov
andl
nop
shll
push
out
sbb
mov
loope
xor
mov
int3
sti
arpl
or
push
xor
cltd
icebp
scas
push
xchg
add
das
int
push
stc
outsl
loop
add
mov
loopne
mov
aam
out
cmp
fdivl
or
xchg
icebp
inc
test
lret
dec
loope
pop
push
pop
popf
call
repnz
addr16
lret
daa
enter
push
dec
das
and
push
addb
xor
mov
fnstsw
jb
xor
gs
and
inc
and
pop
mov
ja
jo
int3
test
ds
mov
cmp
sub
push
flds
lea
test
cli
jmp
xchg
popf
or
movsl
pop
xchg
xor
push
mov
hlt
inc
daa
add
mov
ss
int
push
pop
add
ret
jns
mov
lock
lret
addr16
clc
std
andl
aas
test
out
out
xor
das
enter
mov
fdivs
jmp
out
add
fcom
dec
xorb
movsl
dec
jnp
cmc
jb
xor
sub
orl
int
dec
mov
imul
pop
outsb
jle
pop
sbb
inc
cmp
sbb
cli
fwait
hlt
mov
adc
or
fidivrl
mov
pop
fnstsw
aas
sbb
and
out
pop
mov
mov
lods
inc
ret
ja
add
or
jge
or
mov
rorb
imul
nop
xor
sub
loopne
lods
pop
dec
dec
dec
fdivr
insb
cltd
jne,pn
add
mov
sahf
pop
int
js
xchg
int3
xlat
loop
loop
insb
cmp
daa
pop
and
cmc
add
and
ficoms
mov
mov
push
dec
xor
fists
movsl
sub
pusha
aam
sbb
arpl
test
xor
nop
stos
into
jno
push
sub
push
je
xor
shlb
fisubl
adc
test
lods
in
mov
push
mov
ret
sbb
pop
mov
test
ja
jmp
mov
sbb
cmpsb
in
shl
movsb
popa
jae
sbb
and
cmp
cmp
repnz
add
mov
popa
dec
mov
rorb
repnz
xor
int3
pop
cmp
mov
pop
xor
cmpsl
sbb
mov
ljmp
fnsave
sub
inc
adc
addb
or
push
adc
lea
ss
into
das
cltd
iret
pop
push
repnz
mov
negl
jecxz
sar
cmp
mov
rcrb
adc
push
loop
sub
sub
lret
pop
out
cld
arpl
mov
mov
popa
orl
dec
pop
cmpsl
test
and
mov
mov
mov
bound
xor
xor
in
loope
addl
cmp
push
push
cmc
and
sti
push
js
mov
lods
lret
icebp
pop
mov
push
dec
cwtl
mov
jnp
jle
adc
pop
int
jg
adc
jg
xchg
jecxz
lock
sahf
enter
push
into
loope
adc
out
xchg
call
xlat
loopne
add
stos
xor
popf
ror
scas
inc
mov
pop
xchg
lret
out
insl
push
insl
push
pushf
clc
movsl
adc
inc
cmc
jle
or
cmpsb
xchg
lock
add
mov
cmpb
popf
add
adcb
fisttps
movsl
fsubs
jb
adc
xchg
mul
into
cmp
call
and
adc
mov
push
cltd
std
test
jl
movsl
test
push
out
mov
inc
mov
and
pop
addr16
mov
inc
lret
jbe
scas
aas
insl
xchg
inc
loop
mov
xlat
call
xchg
dec
adc
jle
push
jb
jmp
dec
pushf
pop
sub
jns
jne
adc
sub
or
mov
or
fcoml
cmpsl
adc
xor
jne,pt
push
add
mov
fsubp
test
pop
stc
movsb
mov
sub
push
mov
mov
fwait
into
es
jmp
out
in
mov
notl
cmp
cmc
and
out
mov
dec
loopne
xchg
in
or
repnz
mov
les
xor
mov
xor
pop
add
xor
mov
push
mov
jne
pop
push
int
in
add
mov
popf
and
mov
hlt
jecxz
loopne
shll
dec
leave
stos
push
test
addr16
jp
inc
in
jns,pn
mov
mov
loopnew
arpl
jg
pop
fs
jno
dec
outsb
testl
mov
push
cmp
mov
lahf
hlt
ret
dec
add
je
mov
lds
inc
arpl
sarl
leave
and
fmul
mov
sti
hlt
inc
push
cmp
leave
loop
lock
jbe
push
fisttps
add
mov
fadd
adc
mov
imul
repz
fadds
loop
imul
pushf
gs
mov
or
fwait
lret
jno
ret
inc
stos
mov
pop
sbb
push
in
jmp
imul
adc
sbb
aaa
inc
push
inc
jmp
fdivl
fsubr
stc
dec
popa
bound
scas
in
or
mov
cmpsb
shll
in
scas
insl
mov
xchg
stos
push
or
or
loopne
les
dec
les
pop
aaa
pop
mov
out
leave
jns
cli
loopne
sbb
mov
sub
lock
ret
jo
dec
out
outsl
xor
adc
adc
icebp
int3
and
imul
dec
jnp
mov
cmpl
sbb
xchg
clc
mov
push
xor
jns
fldt
adc
sub
or
aaa
dec
sbb
nop
aaa
rorb
jae
lret
lods
shlb
jbe
imul
in
aas
cmp
movsl
pop
cmpsb
clc
ljmp
mov
inc
cmc
pop
cmpsl
adc
dec
fistps
mov
mov
sub
pop
jbe
jb
loopne
sbb
mov
mov
hlt
pop
pop
xchg
das
faddl
mov
cmpsb
mov
icebp
aas
sahf
sar
mov
xor
test
fsubrl
or
pop
jecxz
sub
fcmovnbe
cmp
mov
adcb
push
fisubl
roll
in
add
sbb
out
mov
ficoms
jmp
outsl
and
and
idivl
jbe
sub
pop
cwtl
dec
add
stc
jecxz
test
add
adcb
loop
hlt
jns
and
pop
add
pop
pop
btr
lock
sub
out
pop
add
jecxz
dec
and
mov
mov
fwait
inc
call
mov
push
pop
pop
sbb
mov
inc
stos
dec
pop
lods
cmp
adcl
enter
loope
xor
outsb
jecxz
cs
fsubl
jmp
loope
cmp
stos
xor
mov
stos
jae
pop
mov
insl
mov
jl
jnp
inc
cltd
jle
fnstcw
sub
daa
mov
push
ret
ret
movsl
cmp
push
mov
dec
jge
xor
lcall
sbb
sbb
inc
jl
bound
adc
call
mov
add
mov
jbe
scas
mov
das
lods
sub
ds
sub
test
dec
sub
clc
cmp
cmp
xchg
mov
adc
into
js
jge
xchg
jbe
mov
dec
xor
sub
orb
hlt
andl
pop
nop
subl
and
xchg
call
orl
call
in
dec
dec
jbe
jge
and
mov
add
sub
outsl
push
out
sbb
lea
js
mov
lret
std
xchg
push
sbb
mov
mov
or
cmc
rorl
inc
insl
ror
fidivrs
out
rclb
cmp
pushf
add
jmp
stc
out
dec
sbb
dec
dec
das
mov
push
push
mov
add
repnz
ret
cmp
inc
push
jl
xchg
test
add
push
ja
dec
pusha
jbe
or
adc
mov
loope
jae
les
xchg
arpl
fistpl
mov
mov
cmp
mov
jmp
ljmp
inc
fistpll
mull
and
loopne
lret
mov
cmp
adc
pop
add
jg
hlt
incb
lods
push
into
inc
push
jl
data16
or
cmp
xor
loopne
sub
dec
sbb
push
lcall
cmp
and
or
adc
mov
int
cld
pop
gs
adc
std
jmp
adc
mov
dec
stc
cmc
mov
testb
and
pop
ss
lcall
cs
fcmovu
sbb
push
sub
mov
and
sub
fucom
sarb
or
insb
add
int3
outsb
lret
fwait
jl
mov
pop
adc
ret
or
in
out
andl
out
xchg
dec
imul
xor
push
jb
pop
mov
xor
jns
jns
movsl
scas
add
cmp
push
loop
mov
add
call
cmp
and
cs
jge
lret
and
mov
popf
ljmp
stos
push
sub
loopne
xor
nop
aaa
mov
mov
aad
pop
sbb
fisubl
imul
mov
cwtl
out
jmp
dec
pop
mov
enter
mov
and
sbb
out
addr16
inc
dec
push
xor
or
cwtl
test
aas
xchg
pop
lret
cmp
and
repnz
pop
shlb
pop
add
pushf
test
push
add
repz
push
cmp
push
fnstcw
pop
pop
outsb
cwtl
pop
adc
mov
adc
or
add
imul
xor
xchg
and
mov
ret
outsb
cmc
or
mov
enter
lea
or
lret
jnp
mov
popa
shrl
mov
pop
test
int3
sahf
pop
ljmp
push
pop
rcrb
ljmp
jle
sbb
cmp
es
adcb
lea
pop
add
daa
sarb
arpl
lcall
jne
xor
mov
test
jns
fwait
and
cmp
xor
adc
cmp
jmp
jnp
inc
xchg
cmpsb
lock
int
mov
push
xorl
adc
sub
add
inc
call
inc
sti
xor
insl
loope
fisubs
cmpb
mov
arpl
sbb
add
mov
jo
imul
and
pop
pop
popl
int3
daa
rcll
lahf
fstpl
daa
ss
int3
sarl
outsl
mov
popf
mov
test
mov
into
sub
mov
pop
jge
imul
out
or
dec
leave
rcrl
loope
arpl
scas
pop
xchg
cli
out
lcall
loope
add
fwait
pop
cwtl
push
mov
fdivs
adc
and
dec
je
std
rclb
js
inc
lods
jge
xchg
shll
add
mov
out
dec
scas
mov
pusha
hlt
into
xchg
rol
out
clc
mov
or
or
cld
imul
inc
sbbb
les
sarl
xor
notl
lds
pop
push
mov
ret
sar
not
nop
jmp
push
sub
sahf
mov
cwtl
pop
mov
mov
add
rclb
push
movsb
fs
cmc
in
lea
aas
andb
sub
scas
sub
jle
cld
or
jnp
mov
insl
mov
in
rcrb
push
dec
std
sub
cmpb
inc
adc
xchg
xchg
std
mov
dec
adc
out
mov
inc
jno
leave
rcrb
lock
leave
sbbl
inc
out
and
popf
mov
sbb
in
add
out
xor
jecxz
xchg
cmp
mov
dec
or
pop
push
sbb
mov
and
stc
or
out
or
mov
push
push
mov
push
repz
test
and
mov
in
les
repz
adc
sbb
xchg
cmp
lock
lret
out
adc
xchg
dec
sub
mov
add
sub
jmp
shrb
add
add
mov
cmp
lock
es
mov
loopne
mov
mov
iret
sbb
nop
cwtl
pop
leave
add
outsb
add
xchg
out
call
scas
xchg
sbb
movzbl
jmp
fs
or
fidivs
mov
mov
lock
fimuls
and
mov
add
addl
repz
pop
rcrb
adcl
mov
sarb
cli
mov
mov
push
outsb
lcall
test
push
sti
inc
add
adc
push
dec
sub
dec
aaa
out
nop
xor
mov
lea
arpl
rcrb
sbb
lret
rsqrtps
jb
push
aad
dec
adc
push
dec
xlat
xchg
popa
mov
cmp
in
mov
or
mov
add
jne
jp
push
nop
adc
repz
dec
xlat
ret
pop
sub
idiv
push
jge
dec
mov
mov
icebp
in
ja
mov
adc
icebp
aaa
lods
cmpsl
adc
stc
insb
mov
push
lret
call
dec
ss
aad
aas
cmp
cmp
push
or
sub
add
test
cmp
into
and
cltd
popa
orb
dec
pop
repnz
ret
rorb
and
pushf
cmc
mov
mov
dec
dec
mov
fnstsw
sub
cmc
mov
xchg
pop
stc
sbb
pop
mov
movsb
addr16
sbb
loopne
fldl
movsb
je
mov
inc
mov
jnp
fdivl
lret
les
adc
push
cwtl
prefetch
dec
xchg
jmp
popa
add
dec
xchg
clc
sub
outsb
sarl
popa
lock
inc
mov
pop
or
cmpsb
push
xorb
imul
sti
out
shrb
pop
dec
sarb
pop
cwtl
test
clc
int3
push
mov
inc
pop
test
popf
out
outsl
cltd
aam
xchg
xchg
xchg
xor
mov
dec
stos
test
ds
ljmp
aas
adc
mov
inc
sub
add
cmp
sub
inc
mov
in
popl
sbb
jbe
mov
dec
or
adc
aam
mov
fadds
lcall
inc
inc
mov
push
ds
andl
jmp
test
jae
icebp
mov
jge
cmp
or
cmpsb
ja
add
outsl
jnp
jle
js
or
lods
clc
lret
inc
mov
ja
dec
or
js
mov
adc
push
mov
std
and
jg
stos
mov
push
je
cmpsb
mov
jns
inc
outsl
mov
jl
push
aaa
pop
lret
mov
add
pop
jp
ss
jae
test
jecxz
jl
imul
inc
xchg
popf
aas
mov
push
inc
adc
hlt
push
or
add
pop
mov
pop
lret
pop
lcall
sbbb
push
std
jno
dec
jo
mov
stc
add
mov
sbb
add
scas
adc
inc
push
aaa
cmp
add
repz
cwtl
mov
cmp
mov
sbb
cmp
lret
push
lahf
sub
mov
adc
and
pop
add
adc
jnp
xchg
mov
sub
test
push
addr16
cmpsb
sbb
movsb
cmp
xchg
sbb
sbb
int3
dec
sbb
mov
and
loop
dec
jbe
cmp
sbb
add
test
mov
jle
int3
adc
inc
ljmp
jbe
pop
mov
jno
js
mov
push
mov
mov
popa
xchg
addl
into
cmpsb
movb
jo
sbb
std
pop
outsb
outsl
fcmovnu
fs
pop
add
mov
dec
mov
stc
mov
outsl
ljmp
push
or
int
mov
lret
add
inc
mov
fwait
icebp
xchg
inc
adc
insb
rcrb
into
sbb
into
xchg
enter
test
fwait
mov
mov
push
cmp
insb
add
mov
in
xchg
inc
fbstp
imul
sahf
inc
pop
mov
and
or
in
cmp
outsl
test
cmp
subb
pand
push
fwait
in
jecxz
mov
loope
mov
jne
ds
divl
lods
pop
and
nop
adc
iret
pop
sbb
jo
push
sbb
mov
push
cmp
mov
rcrb
cs
jb
sub
fcmovbe
adc
add
inc
lock
xor
ss
mov
xor
inc
in
outsb
lcall
pop
ror
jne
and
lea
mov
loopne
sahf
mov
lret
cmc
clc
sbb
add
popa
fdiv
ss
mov
cld
fstps
pop
stos
aaa
jno
in
jge
imul
fildl
fidivrl
push
pop
sub
mov
in
cmp
pop
mov
loopne
mov
jo
mov
or
add
ffree
mov
mov
xchg
daa
movsl
jg
lcall
mov
lret
or
sub
ret
pop
pusha
addr16
roll
lcall
or
lods
movsb
loopne
out
andb
pop
lock
add
sub
subb
mov
je
iret
inc
jecxz
repnz
shlb
pop
loop,pt
pop
arpl
push
fwait
lcall
leave
add
sbb
fcomps
rolb
add
and
int
jno
roll
movsb
add
call
sbb
mov
fisttps
mov
stos
push
xor
push
mov
outsl
inc
mov
inc
adc
sub
mov
xchg
lock
inc
subb
scas
fildll
das
pusha
pop
mov
rorl
or
movsb
mov
mov
add
push
divl
stc
pop
ss
out
adc
xor
mov
or
sbb
mov
test
pop
in
add
cltd
pushf
xchg
fisttpl
mov
inc
sbb
dec
pop
cli
jno
push
xor
add
jbe
pop
lret
lds
push
into
xor
push
pushf
call
scas
sbb
xor
add
push
cli
fmuls
repz
sahf
aad
popa
fldl
add
push
mov
lahf
mov
or
or
dec
sbb
xor
cld
in
lods
flds
in
jl
push
das
repnz
mov
xchg
mov
jecxz
inc
push
pushf
ljmp
jmp
pop
push
jne
inc
or
adc
xchg
cmpsl
iret
dec
push
pop
daa
aas
xor
scas
out
adc
imul
push
mov
sbb
roll
fs
mov
pop
test
out
outsl
adc
cmpsl
mov
iret
andb
mov
push
scas
jmp
dec
rcr
pop
sbb
inc
cwtl
and
xor
movsl
pop
ss
sub
ja
das
sbb
mov
xchg
test
lret
mov
pop
or
inc
mov
xor
push
es
in
jb
xchg
imul
rcrl
test
ja
jle
ret
fstpl
sbb
aad
cli
or
daa
std
ret
pop
mov
add
outsl
sub
in
hlt
sbb
mov
jns
xchg
faddl
ficoms
adc
sub
jno
mov
pop
or
sub
sub
imul
inc
cmp
movsl
sub
or
cmp
imul
dec
js
xor
out
cld
adc
or
loope
mov
data16
xor
jno
scas
jae
mov
cltd
rcll
inc
inc
das
aam
jne
loop
inc
shll
or
mov
aam
mov
lods
sbb
xor
push
cltd
pop
cs
xor
xchg
dec
and
or
clc
daa
xor
or
mov
sbb
jns
mov
popf
imul
add
push
jmp
cmp
jne
mov
dec
daa
cmp
inc
clc
mov
std
movsl
adc
ds
imul
sub
loop
lds
out
rcl
add
test
aam
jle
out
add
loopne
popa
xchg
std
call
inc
adc
in
out
or
jmp
fsubl
insb
int
mov
xchg
icebp
in
jg
jbe
cmp
int3
add
dec
scas
sub
cmpsl
sbb
dec
scas
cli
cmp
push
stos
nop
shlb
fsub
rcr
xchg
adc
lea
dec
cli
jle
and
xchg
out
adc
mov
je
pop
dec
adc
lret
int
js
lret
xchg
cmpb
out
test
test
mov
adc
jecxz
or
fcoms
cmc
cs
inc
mov
cltd
pop
add
inc
fsubrs
dec
mov
lret
jne
orb
stc
cmpsl
xchg
pop
fimuls
and
les
mov
push
or
push
mov
jl
lods
mov
imul
add
pop
jge
daa
pusha
sub
add
lret
es
sbb
jecxz
lods
inc
mov
jl
xchg
ror
scas
loop
adc
mov
cmpb
shll
pop
imul
popf
dec
sub
cmpsl
xchg
cld
loop
sub
shrb
cwtl
adc
loope
and
sbb
adc
mov
push
or
inc
int3
int
mov
aam
cwtl
in
push
push
xchg
dec
push
mov
sbb
push
cmpsb
jb
push
loop
or
xor
inc
int3
movsb
jno
insb
cld
xor
mov
add
ljmp
mov
out
sub
jno
jl
mov
mulb
sahf
sahf
mov
dec
adc
xor
popf
jg
xchg
sub
cmp
xor
xor
out
mov
insb
mov
scas
icebp
and
pushf
lret
and
sub
or
or
popf
es
and
dec
lods
push
jns
add
jle
call
movsb
adc
mov
sub
jo
cs
mov
inc
fldcw
mov
cli
jo
lahf
mov
xor
or
pop
in
dec
aaa
ds
fdivrs
mov
cmp
cmpsb
sub
add
cmpsl
shr
lea
cmp
in
cmc
mov
out
insb
dec
mov
pushl
mov
daa
pop
lods
ds
pusha
shll
xchg
pusha
bound
and
inc
sbb
cmp
daa
pop
shlb
loope
mov
inc
inc
fcmovbe
jmp
mov
dec
popa
outsl
popf
mov
jno
into
mov
or
cmpsl
xor
loopne
mov
sub
adcl
fs
xor
or
hlt
notb
outsb
fucomi
dec
movb
push
pop
arpl
js
ss
in
add
fsubrs
test
push
dec
mov
or
mov
repz
xor
jmp
mov
adc
loopne
mov
xchg
jb
cmpsb
sbb
sub
xor
xlat
pop
ficoml
cmp
frstor
push
stos
adc
outsl
mov
dec
stos
xchg
rcrb
outsl
pop
aam
jp
data16
sub
test
loopne
or
jp
jg
fdivrs
xchg
add
cmp
jl
or
pusha
push
fmul
mov
jg
cmp
dec
lret
lcall
sbb
addl
repnz
dec
js
icebp
dec
sbb
je
dec
mov
adc
push
or
test
pop
push
dec
sub
imul
icebp
out
and
shl
enter
cmc
loope
gs
lds
addr16
mov
pop
adc
repnz
imulb
dec
enter
adc
pop
add
pop
clc
icebp
nop
and
lcall
or
leave
fisttpl
rcll
push
dec
sar
ret
repnz
mov
adc
pop
and
daa
pop
push
cltd
nop
stc
sahf
pushf
push
popa
push
int
mov
push
pushf
pop
sub
and
scas
mov
in
loope
sub
mov
jecxz
scas
test
sbb
mov
outsl
pushl
push
mov
and
mov
leave
dec
lods
add
scas
mov
mov
aad
pop
bound
and
shll
adc
lods
inc
mov
fwait
pop
mov
mov
mov
ja
sar
fisubs
shlb
mov
dec
adc
cmpb
jp
sbb
mov
xor
xorb
js
es
jbe
jns
mov
push
adc
xchg
outsl
scas
sahf
pop
dec
fidivrl
cmc
inc
call
cmp
jns
ss
arpl
cmp
addr16
scas
pop
into
mov
rorb
out
xchg
dec
or
add
neg
pop
in
pop
cmp
cli
or
loop
xor
es
stc
scas
mov
lret
cmpsl
push
push
in
sbb
ja
fld
mov
jge
out
mov
push
and
adc
cmp
in
lcall
ret
mov
cli
add
out
jecxz
je
stos
push
loope
inc
std
inc
and
push
jle
add
push
addb
dec
fwait
xchg
subl
or
mov
mov
enter
xchg
enter
jnp
int
cmp
pop
mov
push
and
add
mov
xchg
pop
sub
aam
push
filds
ffree
sbb
inc
cmc
pop
movsb
call
sbb
lods
sbb
mov
cmp
adcl
jp
outsb
jb
push
dec
mov
lods
sti
rcrb
pop
adc
repnz
or
out
fistpl
push
xchg
iret
dec
shl
js
mov
inc
mov
adc
imul
test
lea
shl
mov
mov
mov
das
les
in
cld
punpckldq
cmp
mov
int
out
xor
mov
movsl
int
jnp
cmpsl
call
mov
sub
daa
inc
inc
dec
xor
loopne
loop
mov
xor
jnp
adc
sti
loopne
aam
mov
mov
push
push
lret
jne
shr
test
in
ds
jg
add
into
mov
xchg
cs
mov
es
pop
inc
adc
xor
std
outsb
dec
rolb
iret
addr16
les
ja
inc
fists
add
pop
push
dec
jle,pt
jne
jl
cmp
sub
div
dec
jp
in
jns
shrb
in
fisttpll
inc
sbbb
pop
xrelease
pop
jp
push
cmpsb
aas
jp
out
dec
inc
dec
imulb
lcall
popa
jmp
lds
outsl
pusha
push
xchg
dec
sbb
imul
xchg
aaa
int
xchg
sbb
jae
jg
sub
fstpt
popf
jbe
imul
popa
enter
shrd
pusha
cmpsl
mov
sub
scas
push
cld
mov
push
ds
jmp
int
fdivl
fists
nop
push
mov
adc
jmp
nop
es
sub
ret
sbb
push
push
push
dec
orb
jge
push
dec
js
loop
andb
dec
pop
sbb
xor
xor
out
lea
inc
pop
and
dec
push
inc
mov
add
mov
std
scas
dec
mov
inc
les
daa
lret
mov
icebp
ffree
dec
mov
xchg
jnp
jle
xor
icebp
or
pop
mov
inc
lcall
xor
cmp
jge
sbb
mov
jne
fs
sbbl
dec
dec
xchg
sti
jg
inc
mov
jmp
int
ljmp
mov
cli
mov
lret
xchg
lods
push
mov
xor
lea
decl
xorl
jle
add
mov
ret
insb
cmp
dec
sbb
andb
mov
cmp
fwait
ljmp
jnp
inc
sub
xchg
xchg
popa
push
xchg
mov
cltd
xchg
xlat
xchg
call
fxch
push
negb
dec
push
cld
insb
inc
loopne
jnp
into
mov
mov
iret
sti
fbstp
cwtl
sub
push
in
adc
imul
popa
push
clc
popf
in
push
mov
andl
lahf
lods
xor
sbb
xchg
sub
fidivs
jns
shl
pushf
jge
jl
inc
cmpsb
repnz
rorb
inc
scas
dec
clc
cmp
mov
fisubl
aad
sbb
clc
cmp
adc
xchg
sub
mov
add
inc
pop
scas
cmp
andl
repnz
mov
pop
xchg
push
pop
cmp
aaa
add
inc
lock
cmp
jne
sub
arpl
mov
adc
lcall
pop
xchg
mov
rorl
sti
add
xchg
dec
fdivrs
add
dec
sahf
idivl
dec
pushf
aad
xchg
les
inc
mov
popf
mov
rcrl
xchg
push
mov
push
ljmp
xor
popa
mov
mov
adc
sbb
inc
orb
icebp
jg
or
les
mov
out
jg
cmp
loopne
fmuls
das
jne
rorl
ficoml
repnz
lea
lods
outsb
pop
push
pop
adc
sbb
js
inc
cwtl
mov
xor
add
xchg
cmpsl
push
lea
xchg
xchg
cld
mov
or
icebp
and
outsl
xchg
push
icebp
out
push
aam
mov
mov
xlat
mov
leave
and
jp
scas
xchg
add
iret
jecxz
push
cmp
sbb
sub
xor
sub
xor
mov
push
cwtl
repz
adc
aaa
test
xchg
mov
addl
or
stos
push
outsl
sub
sahf
sub
aaa
adc
xchg
sbb
das
xor
xchg
inc
jno
rcrl
loope
pop
into
mov
repz
test
pop
pusha
fdivp
mov
cli
add
push
ss
mov
fadd
call
icebp
dec
stos
bswap
and
loope
pop
outsl
aam
jo
loopne
fadd
sti
imul
mov
jge
inc
int
dec
xor
mov
movsl
mov
mov
mov
stos
mov
rcr
cmpsb
cs
inc
mov
or
cmp
lds
insl
xchg
cmp
cmp
aam
xchg
cmp
data16
or
movsl
clc
mov
xchg
fisubs
jmp
in
addl
outsb
insb
sbb
mov
mov
or
shll
sub
dec
xor
mov
sbb
jl
fs
les
cmp
outsb
je
pusha
faddl
out
mov
and
rep
mov
gs
outsb
nop
nop
fs
mov
adc
es
js
cmpl
les
int3
push
sbb
loop
jnp
pop
imull
mov
js
pushf
mov
jmp
mov
fisttpll
push
filds
mov
pop
sbb
lret
sti
or
fistl
addb
push
iret
mov
mov
lock
roll
dec
in
inc
cmp
out
ljmp
int
jl
push
mov
adc
sub
pop
test
jae
or
sbb
sbb
mov
or
fcmove
cmp
aam
iret
ret
xor
dec
lods
mov
es
jnp
fsts
jg
lcall
movsl
mov
push
mov
dec
cmp
adcl
mov
pop
inc
inc
xchg
pop
sti
cli
adc
in
xlat
mov
push
dec
stc
mull
stos
mov
loope
cli
into
filds
sbb
add
test
cmp
dec
push
add
test
xchg
sti
fsubrs
andb
inc
fadds
adc
sub
mov
pop
pop
jl
test
jge
fcmovne
ret
shrb
int
mov
mov
cwtl
int
cmp
xchg
or
sub
fs
mov
inc
adc
inc
in
and
add
mov
jge
mov
jbe
and
stos
xor
or
add
scas
icebp
lds
xchg
loop
out
xchg
cmp
add
cli
cltd
mov
lea
cli
xor
rcl
cli
or
push
jno
inc
add
mov
sbb
dec
sub
das
pop
stc
rclb
xor
xchg
sub
imul
and
adc
jg
test
jne
ret
fwait
les
mov
fnsave
cmpsb
cltd
bound
lods
aad
aaa
inc
push
add
into
dec
dec
lret
sbb
ds
xchg
inc
sahf
in
mov
cmp
xor
add
jb
in
movsb
in
dec
sub
jbe
into
pop
test
xchg
lock
mov
mov
jp
pop
subb
sbb
jbe
add
push
clc
pop
mov
fists
mov
aad
sbb
jns
pop
sbb
fisttpl
ror
mov
sbb
sub
icebp
pop
insl
mov
daa
mov
add
ret
outsb
xchg
lds
mov
mov
sub
xchg
adc
push
cltd
fld
into
pop
sub
outsb
gs
xchg
popa
pop
std
mov
and
jns
into
sub
mov
mov
mov
dec
dec
xchg
in
push
in
rcrb
push
pushf
or
insb
inc
adc
jg
fcmovnu
mov
xor
push
jnp
pop
addb
stc
or
cmp
loopne
pop
sub
cmpsl
xchg
shll
mov
fidivrl
push
cmp
fbld
jp
loope
idivl
hlt
push
int
lock
aaa
fists
dec
out
clc
test
addr16
ret
push
xor
out
add
int
mov
loopne
inc
js
imul
push
pop
and
sarb
pop
bound
addr16
jle
inc
adc
mov
testl
and
xchg
enter
cmp
aad
cli
pop
nopl
sbb
dec
xor
mov
add
hlt
mov
subl
jae
out
roll
call
sbb
subb
push
ljmp
sbb
adc
das
jo
int3
sbb
mov
cs
add
jb
rol
add
cld
sarl
xor
sbb
mov
sar
mov
and
call
cmp
jecxz
xor
and
xor
fsubrl
jo
mov
out
cltd
outsl
lcall
out
adc
fs
xor
or
cmpsb
fstl
pop
popf
push
sbb
push
pop
inc
pop
stos
and
sub
cmp
arpl
fidivl
aad
leave
cmp
jp,pn
push
insb
lods
inc
lea
orb
pop
inc
cmpsl
bound
xor
cmp
mov
fisubrl
dec
clc
jnp
or
push
test
shlb
cmp
jb
mov
jno
dec
and
cltd
add
sahf
inc
imul
xor
test
sbb
fadd
or
dec
adc
divb
cmp
dec
mov
add
je
xchg
adc
mov
xchg
inc
movsl
push
loopne
inc
pop
jne
sub
dec
out
sbb
add
adc
sbbl
xchg
pop
aas
sub
push
jecxz
pop
es
add
mov
movsb
roll
mov
lret
ds
std
sub
pushl
jle
jno
rol
icebp
aaa
pop
push
imul
xchg
add
lock
ds
out
pop
adc
enter
ret
cltd
aaa
xchg
mov
lds
mov
nop
addr16
out
cltd
sub
das
test
aam
and
cli
out
push
out
loopne
negb
addr16
fsubrl
lds
and
add
icebp
pop
mov
loopne
xchg
sbb
push
shr
faddl
bound
sarb
popa
addb
in
or
push
jecxz
cmp
sub
in
pop
push
bound
lds
mov
dec
popf
push
cltd
lcall
ljmp
aaa
jnp
and
jne
lret
sbbl
or
ja
jbe
or
and
push
xor
pop
lock
addr16
repz
enter
mov
pop
and
std
rcrl
mov
pop
xor
push
test
aam
and
xor
std
stos
out
add
jge
mov
push
inc
cmp
inc
lea
adcb
dec
push
cli
in
sbb
cmp
cwtl
inc
lret
or
pop
out
mov
movsl
inc
or
repnz
scas
in
pop
jb
sti
dec
imul
lret
pop
push
repnz
cwtl
mov
jle
add
ljmp
xchg
xchg
jo
jle
fldenv
mov
add
dec
icebp
mov
out
xorb
js
mov
into
or
push
mul
outsb
sahf
jo
push
lods
insb
pusha
cmp
xchg
std
decl
jno
mov
sahf
lods
in
xchg
test
les
mov
shrl
out
or
jge
mov
lea
mov
popf
xchg
mov
in
stos
fnsave
xor
jno
mov
pop
outsl
sub
lods
into
testl
cli
mov
push
xor
mov
lock
int
test
outsb
xlat
hlt
xor
inc
call
sbb
and
imul
sahf
add
rcr
dec
pop
sub
xor
or
xor
sarl
lea
push
cmp
inc
outsl
rorl
xchg
push
lock
lods
mov
int
inc
imulb
adc
ret
das
jne
xchg
mov
mov
je
jp
lods
push
pusha
notl
movsb
push
inc
inc
sti
xchg
stc
stos
ret
mov
out
cld
push
es
arpl
or
sbb
inc
call
je
cmp
sbb
inc
sbb
adc
sbb
call
rorl
add
xor
and
mov
cmp
jo
jne
fwait
sub
mov
lret
call
addr16
inc
jmp
lds
jmp
out
int3
xchg
push
jl
movl
sbb
xchg
in
ljmp
test
add
lret
mov
movsb
or
lea
pusha
addps
mov
shlb
lods
inc
psraw
jns
pop
int
ret
dec
lret
repnz
mov
cli
lds
lcall
lret
clc
push
icebp
adc
xlat
mov
dec
repnz
cmpsb
xor
repz
mov
sub
dec
cmp
xchg
add
cmp
scas
es
cmp
rorl
pop
cwtl
xchg
leave
adc
mov
push
push
mov
jae
fsts
mov
jg
sahf
mov
movsb
mov
sub
fwait
inc
xor
jl
sar
sbb
daa
cmp
jo
scas
mov
rol
pop
out
loope
dec
adc
lods
repnz
fisubrl
shll
sbb
lcall
pop
cmc
add
in
in
mov
out
insl
mov
dec
pop
mov
pop
jo
shl
rorl
lret
imul
insl
and
mov
sub
lods
test
jo
lcall
or
sub
jl
xchg
ret
jne
scas
mov
mov
cld
push
std
rcr
ret
mov
inc
stos
rcl
sub
adc
aad
stos
sub
dec
xor
je
lcall
push
dec
or
popf
add
stos
cltd
lret
sbb
sahf
das
das
nop
fsubrl
mov
push
sbb
mov
inc
and
shl
adc
push
into
into
mov
movsl
mov
xchg
insl
dec
ljmp
cmp
in
lods
out
inc
iret
or
rolb
mov
iret
or
imull
inc
stos
in
filds
sbb
jb
and
lods
sub
stos
mov
scas
fisttps
inc
mov
js
adcb
shrb
mov
push
mov
pop
xorb
xchg
daa
jg
pop
push
mov
jle
lret
rolb
bound
out
bnd
push
into
fwait
sub
mov
stc
jae
xor
test
lcall
push
das
jmp
adc
xchg
movsl
push
mov
pop
popa
shrl
pop
mov
lret
das
and
rorl
call
sub
mov
divb
movsb
sub
add
push
lcall
dec
mov
cmp
mov
sub
iret
inc
outsl
jno
xorl
fstpt
aaa
and
outsb
jae
shl
and
mov
sub
sub
lcall
test
popf
loopne
mov
pop
hlt
in
lcall
mov
cltd
ds
cmp
pop
jb
lock
popa
js
inc
xchg
sahf
sahf
or
inc
push
mov
jp
push
into
cmp
ret
cmc
insb
cmp
push
int
insl
inc
pop
mov
mov
test
inc
push
dec
test
mov
sub
imul
cwtl
shlb
or
lahf
fs
outsl
and
outsl
out
lret
adc
cmp
jecxz
cmpb
hlt
adc
scas
mov
pop
inc
iret
arpl
jno
inc
pop
xor
mov
es
add
gs
aad
inc
flds
in
or
rcrl
add
mov
sub
sbb
sbb
mov
les
dec
dec
lds
lret
and
mov
push
movsb
enter
adc
add
push
adc
rcrb
add
and
repz
mov
jp
push
mov
adc
add
test
xchg
jp
call
pop
or
mov
subl
cli
negl
mov
cmp
push
jns
je
loop
jp
mov
fimuls
inc
inc
lock
jmp
lahf
pop
adc
test
or
push
leave
or
lahf
xchg
push
std
push
cmp
mov
shrb
push
std
mov
loopne
std
ja
cltd
add
cmp
dec
mov
push
jp
fadd
cmp
or
push
xor
or
sbb
pop
or
inc
inc
shl
mov
dec
push
movsb
dec
pop
sub
fildl
ret
enter
inc
push
daa
push
scas
xchg
jmp
jno
push
jae
adc
stos
iret
test
push
mov
dec
and
in
cld
addw
idivb
pushf
imul
mov
and
jnp
mov
sub
int3
sbb
stos
outsb
push
lret
loop
fsubrl
mov
ret
sbb
leave
mov
add
jo
jle
ret
imul
xchg
jne
fcompl
mov
in
sbb
in
mov
pushf
lds
push
in
inc
mov
add
ficomps
sahf
lcall
dec
mov
inc
mov
rcrl
and
push
mov
das
loopne
cltd
inc
ss
pop
stos
mov
adc
inc
add
mov
test
mov
out
mov
daa
movsl
sub
out
and
inc
dec
inc
mov
rol
je
loope
shrb
lret
pop
sub
cmp
movsl
xor
jl
and
insl
inc
jge
outsb
loopne
lahf
repz
push
mov
adc
pushf
xchg
bound
jge
mov
inc
and
dec
and
popa
mov
repz
outsb
in
inc
in
fidivs
jne
add
aam
cltd
or
xchg
push
sub
sbb
outsl
push
xchg
fisttpl
push
les
sbb
cmp
jnp
xor
xchg
xchg
pusha
insb
rorl
call
mov
xchg
push
mov
lds
das
push
or
inc
or
mov
dec
push
loop
xchg
cmc
push
cmp
inc
add
loope
movsb
icebp
mov
sbb
fsubp
bound
add
sub
clc
mov
sbb
pop
push
cmp
and
idivb
out
xchg
sbbb
xorb
jbe
xor
xchg
flds
push
divb
test
rcr
test
mov
imul
sbb
int
dec
cmp
xor
add
push
push
push
dec
in
test
mov
dec
xchg
mov
aam
fisttpl
js
lods
jnp
mov
repnz
jle
jmp
mov
shll
jbe
cmp
push
and
mov
jp
mov
js
mov
mov
or
jl
dec
mov
or
or
sub
fiaddl
imul
and
lock
xchg
out
pop
js
push
call
js
ja
jnp
adc
fcoml
loope
push
movsb
sub
inc
dec
push
add
mov
jne
dec
test
sub
add
xchg
jl
loopne
scas
js
push
ret
push
sub
rclb
cmc
mov
push
sbbb
mov
pop
cwtl
inc
or
and
test
lock
cmp
ja
inc
xor
mov
jbe
adc
xchg
cmpsl
inc
cmp
pcmpgtd
sbb
mov
mov
xchg
popa
push
dec
adc
push
into
mov
xor
pushf
fprem
js
fwait
cmp
adc
mov
inc
lret
cmpsb
ljmp
fnstenv
in
push
cmp
xlat
je
sub
xlat
adc
jle
xor
push
cld
fildl
lock
mov
or
out
dec
sbb
loop
pop
out
imul
negb
lret
mov
xchg
cmp
sbb
dec
int3
cmpb
and
adc
imul
cmp
pop
mov
xchg
pop
dec
cmc
or
leave
mov
or
mov
mov
dec
insb
cmp
rolb
jnp
mov
and
jecxz
leave
xor
sbb
pop
xor
add
inc
dec
mov
cs
int
mov
sti
push
xchg
into
dec
cmc
dec
movsb
mov
add
mov
jle
xchg
sbb
ret
test
int3
ret
ljmp
and
dec
xor
and
push
ret
mull
push
fiaddl
inc
sbb
insl
sbb
sahf
test
xor
mov
rorb
icebp
call
outsl
xor
mov
jnp
repz
inc
mov
adc
mov
jno
iret
nop
iret
loopne
cs
mov
popa
cmp
or
xchg
jb
push
cmp
int3
ss
cltd
lods
ss
arpl
lret
shll
mov
aad
sahf
adc
adc
movsl
lret
iret
cltd
aaa
stc
addl
sbb
hlt
in
mov
cmp
inc
into
jnp
enter
fwait
adc
int3
cmc
jne
and
xchg
mov
es
mov
mov
pop
mov
pusha
inc
ds
jae
sbb
pop
mov
and
out
and
rcrb
out
dec
xchg
pusha
loope
lods
push
daa
inc
jg
pop
mov
aas
lds
cmpsb
shlb
data16
cmp
paddsb
adc
in
rcrl
cmp
stos
jbe
mov
js
xor
dec
jae
mov
mov
dec
in
sahf
dec
adc
sbb
add
out
sahf
dec
stc
popa
or
sub
scas
push
in
ret
call
ss
loop
sti
enter
mov
loope
cmc
ret
ret
movsl
push
cmpsl
and
xor
xlat
mov
in
add
inc
out
pop
inc
pop
test
insl
add
dec
cmc
sbb
jle
sub
aam
inc
mov
ret
cmc
or
push
scas
stc
xchg
sahf
push
inc
pop
test
pop
call
aam
cltd
cmp
xchg
aas
xchg
psllq
repnz
mov
test
cmc
shrb
rorl
lock
pop
sahf
lahf
mov
cmp
pop
aas
and
aaa
rcrl
enter
cld
rcrb
push
push
mov
mov
mov
les
xor
out
incb
shr
pop
lret
mov
sub
stc
out
fs
sbb
insl
mov
pop
lea
clc
int3
mov
and
add
sub
adc
aas
jne
mov
dec
scas
fldt
pushf
aad
xchg
cmc
mov
roll
pushf
pop
sub
repz
sysenter
out
arpl
les
outsl
jns
inc
je
iret
data16
and
loop
hlt
dec
dec
subb
shll
add
sarb
sbb
sbb
leave
xchg
ret
sub
icebp
rorl
das
sti
daa
mov
sub
bound
and
inc
jnp
add
xchg
add
and
out
je
xor
jnp
jnp
inc
xchg
xchg
pop
pop
jge
sbbl
test
cmp
cmpsl
inc
sub
sub
xchg
rorl
ljmp
mov
sbb
sbb
clc
movsl
jns
popa
cmpsb
imul
jbe
shll
dec
sub
xchg
aad
out
mov
mov
pushf
inc
popa
sbb
repz
fmul
add
jg
es
lahf
sbb
mov
jnp
xchg
stos
aam
cld
push
mov
fisttpl
loopne
cltd
jbe
addr16
imul
or
add
sub
mov
mov
clc
gs
test
addb
rol
or
cmp
inc
sub
cld
adc
mov
pop
test
inc
mov
push
je
inc
inc
sub
cwtl
cmp
in
lret
insl
inc
dec
outsb
and
jns
push
addr16
pop
xor
insl
mov
mov
mov
lcall
xchg
stos
mov
or
xor
adc
jne
iret
add
sar
inc
cli
test
add
mov
mov
adc
mov
mov
or
mov
pop
and
subl
jo
push
xor
test
fucom
xchg
pop
adc
xchg
mov
xchg
int
pop
loopne
mov
inc
sub
mov
mov
outsb
ret
sbb
inc
lock
inc
push
mov
cmp
sti
loop
add
clc
xchg
mov
mov
push
dec
scas
pushf
xchg
inc
jb
jns
sbb
sbb
adc
cmp
fmuls
inc
jge
call
mov
fidivl
jns
movsb
dec
mov
push
adc
popl
test
out
xor
xchg
push
repz
ficoml
gs
adc
xor
mov
push
add
jl
in
mov
out
or
push
mov
aas
push
lock
pop
xor
lret
dec
push
std
ret
dec
int3
mov
jae
rolb
mov
and
dec
in
orb
stos
movsb
movsb
add
loope,pt
pusha
call
mov
aam
add
lods
lcall
dec
rcrl
sub
cld
jnp
call
push
movsb
mov
aas
sbb
or
jo
pop
cmp
rcrl
adc
daa
or
mov
cmp
xor
cmp
or
xchg
jbe
mov
jecxz
push
lock
push
inc
inc
mov
jne
adc
inc
gs
xor
inc
xchg
sub
jb
insb
lods
adc
and
pop
cmpsb
sub
xchg
xchg
dec
push
iret
punpckhbw
hlt
xchg
imul
jge
icebp
loop
xchg
cmc
jge
jbe
mov
loope
std
inc
sub
dec
push
xor
mov
mov
rorb
xlat
lods
cld
push
stos
mov
pop
cltd
loop
and
in
pop
push
jl
mov
pop
sub
jnp
mov
cld
add
cli
add
mov
scas
dec
pushf
cltd
sbb
arpl
xchg
daa
loop
loop
mov
cmp
fwait
test
aas
jae
je
fimull
push
idivb
push
sbb
movsb
mov
sbb
push
cltd
pop
push
shrb
dec
popf
push
mov
jbe
jl
icebp
jbe
or
sub
jl
push
push
or
inc
ja
cmp
mov
or
push
sbb
fisubrs
rorb
mov
adc
bound
mov
cmp
push
pop
cmp
aaa
fwait
addr16
and
or
sub
push
data16
mov
bt
mull
push
push
cld
jmp
mov
hlt
hlt
jbe
xchg
cmp
cmp
add
mov
dec
inc
sbb
popa
sahf
fbstp
xchg
jne
cld
mov
imul
icebp
xor
mov
test
iret
ds
addb
ljmp
sub
add
test
mov
sbb
shll
add
arpl
inc
mov
pop
xor
popa
sub
bound
add
add
mov
mov
rolw
repnz
mov
in
test
mov
fmuls
add
cmp
push
add
xor
je
leave
jae
sarb
or
xor
lods
arpl
cmp
test
jae
ret
cmp
inc
dec
push
rcrl
shll
jae
adc
shlb
or
mov
pop
lcall
clc
mov
mov
in
or
mov
shlb
cmp
cmpsl
sub
sub
and
data16
outsb
inc
mov
stos
sub
addr16
push
inc
push
push
out
int3
fimull
jl
mov
ja
repz
fwait
push
pusha
sar
enter
mov
cmp
push
add
xor
and
xor
inc
pop
pop
iret
lret
insl
lcall
test
pop
push
rcr
sbb
pop
mov
outsb
imull
and
repnz
test
xchg
into
xlat
add
lods
call
jns
lds
dec
mov
lcall
pop
or
xchg
pop
in
mov
xor
cld
mov
xor
ret
mov
add
stc
xchg
outsb
dec
cmpsl
xor
cmp
xchg
xor
in
andl
pop
iret
sub
inc
in
rcll
cmc
imul
and
jl
imul
mov
cmp
xor
not
pop
aam
push
dec
lret
mov
cmpsb
mov
xor
pop
mov
daa
add
inc
xor
adc
mov
push
lahf
and
and
add
lods
inc
sbb
sbb
sti
jb
cmc
mov
rolb
lcall
inc
push
mov
neg
or
imul
sub
insl
pusha
lods
cmp
rcrb
mov
xchg
sbb
sbb
lahf
mov
rcll
mov
in
push
sti
mov
pop
icebp
stos
cli
mov
mov
mov
test
lret
xlat
mov
pop
sub
mov
movsl
aad
fwait
xor
or
cmp
add
test
push
pushf
sub
mov
jnp,pt
pop
mov
leave
cmp
pusha
fiaddl
testl
jmp
iret
adc
stos
out
in
mov
mov
jg
jns
jp
mov
sarb
fstps
xor
loopew
pushf
arpl
inc
xor
subb
pusha
ja
and
xchg
inc
stos
pop
inc
ja
insl
iret
sti
icebp
jg
xchg
mov
push
ja
inc
jnp
adc
loope
popa
andl
jnp
adc
mov
rcl
cltd
mov
sbb
ret
data16
xor
add
imul
inc
test
mov
repnz
sbb
pusha
out
int
or
scas
outsl
cmp
or
aaa
decl
inc
and
sbb
stc
lea
es
pushf
sbb
cmp
les
xchg
or
inc
mov
test
adc
out
vpsllq
in
loope
in
sub
push
mov
enter
add
into
xchg
out
stos
test
push
mov
or
xchg
jno
inc
mov
in
inc
sahf
inc
lods
sarb
popf
pop
mov
aad
add
jae
inc
mov
mov
cld
mov
cmpsb
mov
xchg
mov
outsl
dec
push
mov
and
jnp
lcall
xor
mov
pop
test
mov
add
pop
push
sub
jo
inc
mov
cmp
pop
xchg
sbb
sbb
fnstcw
push
push
sbb
in
incb
fistpl
js
add
lds
test
adc
or
xorl
jl
push
sub
inc
mov
add
push
dec
mov
sbb
inc
inc
lods
pop
pop
mov
jg
jns
fucomip
pop
add
into
aad
sahf
push
sbb
in
sti
lods
mov
cwtl
aas
imul
lcall
or
xor
or
xchg
xor
inc
or
and
arpl
push
adc
int
mov
shrl
aam
mov
push
mov
out
push
jmp
mov
add
xchg
jb
push
jle
aad
dec
xor
divl
fisttps
into
sub
sbb
cld
je
mov
in
add
sbb
pop
and
pushf
arpl
xchg
push
rorb
push
pop
bound
adc
jge
pop
aam
jl
repnz
pop
pop
fidivrl
mov
mov
inc
xor
mov
ret
push
pop
insb
adc
stc
cltd
or
in
dec
rcll
insb
das
and
loope
stos
sub
xchg
fidivl
int
js
sbb
adc
pusha
jnp
jae
push
test
ficompl
add
sub
sub
sbb
xor
xor
adc
dec
sbb
adc
xchg
fidivl
sub
stos
pushf
lea
sbb
mov
mov
mov
xor
push
icebp
pop
cmp
xor
push
mov
dec
outsb
jmp
sbb
inc
int
adcl
push
int
cltd
push
sbb
rclb
faddp
mov
mov
push
stc
cmp
out
sub
imul
adc
je
add
inc
scas
add
test
xchg
adc
mov
adc
mov
adc
jp
ret
inc
mov
inc
call
shll
adc
idivb
push
icebp
scas
loop
push
je
add
leave
aaa
dec
and
mov
mov
dec
xchg
lret
gs
sbb
hlt
ss
dec
scas
fcmovu
jnp
and
ds
inc
jmp
sbb
out
daa
push
mov
cld
aas
inc
cmp
mov
push
int3
dec
popa
xor
pop
adc
mov
in
add
pop
jnp
ret
int3
mov
pop
cmp
jns
jmp
mov
movsl
xchg
or
mov
int3
mov
fisubrl
in
xchg
mov
sub
lock
cmp
in
or
aaa
inc
cmp
sbb
xchg
lcall
mov
std
movsb
imul
push
push
cmp
pop
insb
scas
xchg
sbb
dec
push
xchg
sbb
pop
test
jbe
fnstenv
inc
int3
ret
movsb
jbe
xchg
mov
xchg
stos
ss
aaa
insl
jmp
sbbl
fwait
scas
loope
hlt
push
std
testb
cmpb
out
les
roll
dec
xor
lds
push
and
xor
pop
int
rorl
leave
dec
mov
mov
adc
xchg
pop
mov
pop
sti
inc
and
sbb
jno
dec
movsl
mov
xchg
jle
inc
je
add
outsb
sub
cmp
cmpsb
jno
xor
push
pop
and
jg
jne
fisttpl
jl
inc
pop
push
sbb
jg
push
cmp
shr
xchg
jl
xchg
shll
sbb
pop
xchg
sub
xor
out
cld
sub
clc
test
pop
dec
es
jns
adc
sbb
leave
lret
adc
int
dec
jl
stos
dec
and
push
push
or
loop
aad
inc
ljmp
mov
lock
mov
dec
in
jle
cltd
loop
std
into
or
jne
push
nop
pop
or
test
popfw
scas
clc
lods
iret
add
mov
sub
sub
cmpsb
les
push
lods
cmp
in
mov
js
sbb
imul
jae
into
xchg
xchg
jmp
mov
scas
loop
mov
rcr
dec
xor
lods
insl
out
or
lock
les
mov
je
pop
pop
or
lods
out
add
fxam
push
stos
dec
mov
push
cmc
test
dec
aaa
insb
dec
jno
stos
fs
pop
push
jl
dec
ljmp
cmpsb
cli
inc
xor
das
out
lds
pop
jmp
push
inc
mov
mov
jns
cmc
add
leave
jbe
mov
or
mov
push
loop
je
in
fisttps
mov
sti
lret
sub
inc
mov
pop
push
std
sub
sbb
nop
ss
cmp
and
pushw
ret
iret
mov
push
mov
add
les
adc
pop
dec
fiadds
or
testb
push
mov
lock
sub
test
mov
clc
dec
pop
jb
inc
pusha
fimuls
insl
fwait
add
lret
dec
outsb
sbb
shll
shr
icebp
xlat
cmp
or
cmp
pop
xor
push
or
insb
fdiv
jge
mov
pop
outsb
ljmp
pop
mov
dec
scas
xchg
sub
clc
rcrl
int
push
cmpsl
jl
or
jmp
es
dec
sub
pop
jge
lods
scas
ret
dec
jns
add
outsl
leave
sub
sbb
mov
pop
mov
xor
enter
cmpl
xchg
outsb
loope
loop
cli
mov
inc
mov
nop
dec
cmp
sbb
pop
lea
sub
ja
pop
dec
push
cwtl
cmp
repnz
push
mov
call
fadds
add
mov
ss
mov
mov
lods
push
popf
push
insl
xlat
adc
inc
fcoms
jmp
and
adc
xor
bound
leave
loop
mov
mov
in
push
jae
into
push
mov
test
add
cmp
jns
sub
add
push
sbb
cmpsb
mov
jns
shrl
jo
mov
cmc
xchg
inc
inc
cld
je
cmpl
in
adc
pushf
lea
and
fnstenv
xor
popa
adc
roll
iret
inc
jecxz
cs
inc
jo
pop
inc
pop
adc
adcb
scas
imul
xor
outsl
test
scas
in
scas
lods
mov
pop
pusha
dec
fs
mov
push
and
adc
push
or
sub
outsl
jge
repz
inc
jmp
or
and
lahf
iret
decl
mov
hlt
fidivl
insb
inc
cli
out
dec
jge
insl
mov
stos
fwait
mov
jbe
push
xchg
cltd
adc
mov
rolb
jbe
sbb
mov
or
push
test
adc
icebp
sub
mov
cs
movsb
jnp
rolb
fsubrs
xor
lret
add
jecxz
adc
cmpsb
lock
jle
pusha
xchg
mov
clc
jle
sub
sub
pop
inc
nop
iret
hlt
data16
pop
cli
and
push
in
sbb
dec
jg
ljmp
add
dec
mov
subb
dec
lods
or
xchg
arpl
aaa
pop
and
adc
push
clc
pop
mov
loope
in
imul
mov
pop
test
mov
fstps
std
xor
out
clc
and
jae
lods
mov
or
pop
pop
out
inc
dec
scas
mov
xor
test
pop
jbe
cmp
cs
jns
pop
fimuls
insl
or
xchg
push
xchg
mov
pop
aam
loope
jb
inc
sub
jnp
inc
add
nop
ja
aad
outsl
mov
pop
imul
sbb
push
testb
or
mov
imul
jge
pop
sbb
dec
repnz
mov
gs
pop
incb
lods
rcrl
pop
sub
xchg
pushf
sbb
in
ss
dec
jl
push
das
lahf
xchg
or
add
mov
inc
mov
in
je
rcrl
add
test
sbb
testb
dec
sub
xchg
notb
jmp
jl
dec
and
shll
hlt
jp
adc
int
sbbb
sub
push
mov
scas
jle
add
mov
in
and
or
ret
mov
ds
or
mov
mov
fdivr
push
ljmp
adc
lods
gs
outsl
inc
sub
jle
mov
xor
sbb
pop
in
test
dec
movsl
sarl
jnp
mov
jb
push
fwait
icebp
pop
cli
test
xchg
and
inc
aas
cld
rclb
dec
stos
testb
push
testb
outsb
test
ds
sub
lock
mov
jno
mov
popl
add
negb
imul
iret
popf
ja
mov
and
cli
inc
mov
aad
cmp
pop
push
jnp
sahf
test
test
add
or
push
pop
add
sub
jge
leave
cmp
add
out
std
mov
sti
fbstp
and
and
push
xor
jg
push
inc
jns
std
mov
sub
ja
jae
pop
xor
leave
lcall
mov
dec
nop
push
add
imul
sbb
jne
or
jmp
stos
insb
add
lea
in
cmpsl
inc
push
jae
jmp
rol
daa
popf
je
dec
jle
pop
mov
pop
mov
cmpsl
cmpb
bound
push
out
idivb
mov
mov
jns
insl
pop
cmp
cmc
dec
lea
dec
dec
sbbl
lock
xor
ljmp
daa
xchg
cmp
jno
test
loop
shr
cmp
jp
scas
mov
out
cmp
aas
cmp
insb
jecxz
notb
or
gs
lods
imul
add
in
ret
stos
cld
jle
leave
nop
lcall
mov
jecxz
jmp
or
jecxz
push
mov
sub
mov
loopne
pop
xchg
sbb
push
inc
sub
mov
jno
push
idivl
pop
mov
push
and
add
cmpsb
das
out
add
add
sahf
aaa
adc
rorb
ja
or
cwtl
cmp
fisttps
jne
push
data16
orl
lods
mov
lods
push
mov
and
cld
popa
fsubr
adc
and
push
mov
adc
bound
xchg
dec
ret
push
movsl
jbe
pop
test
mov
jbe
es
mov
sub
sbb
sub
sahf
jmp
jg
cmpsl
inc
jle
push
xor
jge
inc
sub
or
inc
sub
xchg
inc
bound
inc
add
out
insl
and
ret
adc
pop
test
dec
inc
dec
inc
or
int
or
mov
jns
mov
add
dec
jle
les
mov
andb
adc
mov
xor
mov
sub
sbb
adc
lret
imul
leave
adc
clc
lret
fdivrl
out
inc
fidivrs
xchg
aaa
mov
add
inc
popf
icebp
into
push
cmp
inc
sarb
and
pop
bound
pop
jno,pt
testb
push
shll
or
call
cmp
popf
push
dec
sbb
jecxz
outsb
mov
fs
iret
test
xchg
and
adc
mov
movsl
in
dec
int3
sti
repz
mov
xchg
mov
rcr
call
mov
andb
jmp
stos
mov
aam
dec
cld
adc
inc
xchg
jae
xor
mov
sbb
push
scas
add
push
mov
repz
dec
sbb
popa
jbe
sarl
out
cli
arpl
cmp
jbe
jl
cld
pop
cld
mov
xchg
das
mov
outsl
popa
pop
cld
stos
orl
push
aaa
add
repnz
ret
out
in
mov
scas
imul
sarb
testl
mov
push
push
xchg
aad
lahf
cmpsb
dec
or
lret
add
push
bound
sbb
mov
xchg
pop
xchg
jns
inc
add
sbb
sub
xchg
jmp
test
mov
xor
out
adc
dec
hlt
jl
xchg
sub
cmpsb
dec
cmp
and
or
addr16
sub
test
mov
xchg
jb
fdivr
dec
sahf
and
inc
add
and
pop
jnp
fwait
jp
dec
xchg
lods
ss
cmp
rclb
ja
adcl
jae
inc
arpl
test
cmpsl
sub
addr16
pop
fiadds
into
xorb
daa
add
sbb
rcrl
pop
cmp
imul
inc
mov
mov
int3
scas
lea
cmc
gs
fists
pop
pop
insl
loop
aaa
add
loopne
fiaddl
and
add
push
adc
divl
mov
dec
ja
mov
sub
xchg
sahf
add
lock
iret
test
or
aas
cmp
add
add
in
lds
in
cli
sti
and
imul
rolb
adc
das
es
jmp
adc
add
cli
inc
jl
aaa
cmpl
outsb
mov
pop
pushw
push
stos
or
aam
cmpsb
sub
hlt
repz
and
mov
xor
mov
push
mov
into
pop
ret
andb
repnz
mov
aam
mov
sub
in
or
push
jp
sbb
jbe
notb
mov
jns
pop
push
cmpb
xor
imul
inc
es
out
xchg
in
dec
iret
insl
or
orl
lods
push
xor
dec
aam
push
pop
inc
test
shrb
and
lret
lcall
test
daa
pop
jl
push
pop
jp
adc
inc
dec
sbb
jnp
mov
xchg
nop
idiv
cmp
adc
inc
fs
lds
arpl
imul
dec
or
test
pop
pop
mov
testb
test
scas
imul
mov
ja
add
rorb
shl
mov
push
mov
xchg
sbb
sbb
adc
mov
lret
imul
xchg
cld
repnz
fisttps
push
or
mov
xor
xor
sub
imul
fs
lret
in
imul
sub
ret
popa
dec
jns
jne
pop
and
sahf
push
push
fiaddl
jge
mov
xchg
lcall
mov
dec
mov
lret
sbb
add
fs
xor
add
fildl
test
fwait
cmp
push
adc
fidivl
ret
push
add
in
or
cld
addl
leave
in
dec
xchg
and
xchg
int3
dec
dec
insb
pop
loope
repz
cmp
jl
sub
flds
push
addl
data16
adc
pop
aaa
inc
xchg
jmp
test
adc
ljmp
jbe
mov
dec
push
decb
and
or
stc
xlat
or
pop
mov
push
aam
jmp
dec
xchg
fbld
sub
fs
testb
mov
lea
in
bound
stos
xchg
pop
fdivrl
decb
subl
fcompp
add
and
rorb
xorl
xchg
dec
sub
mov
scas
and
rorb
cmp
or
leave
pop
daa
aam
pop
or
cmp
mov
jns
jp
icebp
inc
pusha
adc
xlat
pop
jnp
add
ss
scas
pop
mov
es
add
pop
ljmp
mov
rcrl
cmp
cmpsb
gs
movsb
cmp
inc
sahf
sbb
sbb
xchg
in
test
pop
jecxz
sbb
dec
pushf
das
in
mov
rcll
or
add
aas
mov
mov
clc
in
dec
ret
mov
fsubr
rorl
adc
jecxz
aad
push
loopne
add
fisttpll
out
push
fildll
lds
and
and
shl
inc
mov
movsb
repz
adcl
jnp
sub
xchg
mov
ret
mov
pop
les
sbb
and
dec
xor
mov
sub
jno
mov
into
faddl
popf
jge
jo
js
sbb
inc
mov
cmp
xchg
jnp
in
or
mov
cli
xchg
mov
sub
xlat
and
rcrb
int
ret
mov
aaa
test
and
stos
movsb
xchg
stos
sar
jge
shll
push
jle
dec
lret
xchg
xchg
notl
xor
pop
inc
fucomp
nop
je
in
mov
xlat
sbb
outsb
cmp
mov
int
ja
xor
ret
mov
dec
and
lcall
testb
out
in
cli
lcall
hlt
mov
aaa
and
mov
into
adc
rorl
je
push
sub
xchg
sti
je
jl
repnz
adc
xor
jne
inc
nop
imul
xchg
jbe
hlt
sarl
lods
fs
sub
fucomp
push
add
push
pop
scas
inc
or
add
jne
or
mov
jne
cmpsb
shlb
adcb
leave
mov
pop
popa
xlat
movsl
mov
in
imull
imul
mov
dec
incl
sub
dec
jo
jle
cld
mov
das
fs
addr16
sub
in
fistpll
pop
imul
imul
enter
out
xor
dec
inc
mov
ljmp
test
popa
fidivrs
mov
icebp
push
std
arpl
ss
xchg
jmp
gs
mov
ljmp
adc
into
lds
mov
test
dec
cltd
mov
xor
fdivs
sti
push
repz
lahf
out
leave
push
lock
dec
imul
sahf
cmp
and
ss
push
mov
xor
movsb
cltd
and
js
cmp
jl
push
cltd
cmp
insb
and
xchg
imul
cmp
xchg
test
jbe
out
test
jle
mov
clc
sbb
sub
xchg
xlat
loop
push
loope
fnstenv
lahf
fisubrs
shll
add
jo
gs
idivl
add
mov
push
xor
cmc
adc
inc
movsb
aas
cmpsb
insl
in
xor
push
je
cmpb
sarb
je
imul
data16
jns
fstpt
clc
test
and
mov
push
arpl
shl
cmp
sbb
add
shl
mov
mulb
test
ja
pop
push
cmp
in
sti
sbb
dec
push
clc
insw
lods
push
jmp
movsb
jno
and
rcl
jo
push
pop
push
cmpsl
loope
adc
loop
mov
sub
xor
pop
pop
add
rcrb
out
call
add
xchg
sbb
add
xor
mov
xchg
add
add
jne
lock
dec
and
popf
mov
and
mov
dec
jo
fwait
roll
adcl
aaa
nop
push
inc
xchg
inc
xchg
fbld
pop
bound
fcmove
or
insb
gs
std
test
cmpsl
test
je
or
or
xor
inc
outsb
jecxz
inc
adc
scas
jnp
sti
loop
fneni(8087
push
inc
movsb
sub
ss
sbb
das
hlt
jmp
push
sar
adc
jb
add
or
icebp
shll
call
pop
repnz
pushf
adc
jmp
mov
mov
ds
movb
dec
repz
add
mov
dec
repz
push
dec
sub
add
insl
imul
in
les
mov
scas
hlt
arpl
dec
push
hlt
mov
mov
int3
arpl
xlat
lods
and
mov
shl
aad
and
sbb
xor
and
incl
dec
gs
and
jns
or
adc
repz
sub
repz
and
lahf
lret
xorb
pop
jb
out
xchg
mov
adc
and
daa
stos
cmp
cwtl
lds
sbb
or
aaa
scas
sahf
xor
inc
mov
push
dec
fcmovb
mov
stos
imull
out
subb
orb
push
cwtl
cwtl
mov
push
movl
sbb
in
lret
jle
dec
lods
pop
sbbl
rolb
in
jge
add
xor
cwtl
js
cltd
insb
in
loopne
push
movsl
cwtl
pushf
dec
and
jno
nop
mov
stc
nop
cmp
jecxz
mov
je
or
lcall
shlb
lret
inc
mov
xchg
test
cmp
ljmp
lea
icebp
ret
fs
cmp
hlt
data16
outsb
aam
fcomip
scas
jl
dec
dec
inc
pop
push
mov
inc
in
cs
lock
scas
jle
mov
into
aad
and
movsl
sub
xlat
in
and
or
ret
leave
ret
ss
lock
jb
andb
in
xchg
and
int
pop
cmp
lcall
rcll
aad
xchg
and
push
mov
arpl
mov
lahf
in
inc
fidivs
in
popf
or
jbe
je
scas
movsb
mov
das
and
test
data16
out
inc
xor
jecxz
les
cmp
push
jno
dec
stos
mov
mov
and
xor
inc
add
adc
loop
imul
dec
iret
jle
lods
push
sbb
imul
mov
stc
or
cmp
adc
xchg
mov
cmpsl
xchg
fldcw
dec
mov
xchg
out
mov
sub
ljmp
inc
push
mov
mov
call
mov
ljmp
repz
jp
out
adc
pop
outsb
mov
jmp
adc
fldl
test
mov
fnstsw
lret
jae
push
jg,pt
push
push
int
lods
jge
ja
lods
jmp
js
cmp
cmp
jb
add
and
addb
or
inc
or
mov
mov
jg
mov
jmp
sbb
movsb
cltd
add
fisttpll
sbb
cmpsl
and
pop
lcall
pop
push
push
dec
mov
cltd
add
adc
jge
mov
mov
jp
cmp
popa
jp
bound
outsb
lahf
cmp
mov
stos
sbb
push
jg
rcrl
add
stos
repnz
incl
jae
incl
call
inc
ja
cmp
xchg
not
mov
js
data16
mov
pusha
xchg
push
xlat
jnp
mov
sub
jnp
push
div
out
movsb
int
in
push
cmp
mov
xadd
int3
sar
int
push
clc
lsl
cmp
add
das
xchg
mov
hlt
in
mov
imul
lock
aaa
sti
inc
test
sahf
mov
xor
ljmp
movsl
subl
icebp
iret
push
es
cld
popf
out
je
and
lret
dec
add
aam
mov
sub
sti
test
jecxz
test
mov
popf
in
sub
dec
jae
xchg
mov
mov
cmpsb
sbb
jge
pop
or
dec
push
inc
lahf
in
cmp
pop
rcl
in
push
pop
xchg
dec
jnp
cmp
add
jae
imul
scas
ss
repz
dec
dec
jnp
or
inc
cmp
cmp
xor
fisttps
out
mov
and
mov
fcompl
sahf
int
imul
jb
js
sbb
dec
call
les
add
dec
xor
rolb
das
ljmp
xchg
scas
cmp
sub
mov
fucomp
cmp
cmp
mov
test
push
jmp
pop
mov
data16
mov
dec
dec
mov
cld
lock
icebp
cmp
sub
add
ds
ret
arpl
jnp
aas
stos
in
mov
int3
sbb
adcl
daa
in
lret
push
sarl
pop
jne
les
imul
push
xor
pop
lret
sahf
cmp
sarl
pop
cli
in
ret
cmp
mov
repnz
subl
clc
outsb
adc
bound
sarb
notl
shlb
xchg
push
jl
shll
lret
outsb
sbb
or
fdivrs
aam
inc
in
cs
jbe
pop
sbb
add
cmp
adc
mov
or
mov
cs
add
out
adc
add
aam
clc
pop
jb
jno
push
or
fcoms
cmpsb
mov
aam
cli
pop
pop
ljmp
and
aad
insl
mov
aam
jp
popf
adc
test
or
int
and
dec
pop
sub
adc
or
and
push
or
xchg
outsb
dec
call
outsb
push
cmc
lret
scas
push
mov
cmpsl
nop
pop
adc
dec
cld
js
ds
fiaddl
xor
jo
jecxz
icebp
scas
out
push
mov
and
push
sub
jg
mov
iret
imul
xchg
and
arpl
sti
outsl
rcr
xchg
cmp
adc
jo
or
movsb
mov
test
push
mov
pop
mov
bound
pop
fists
xor
xchg
scas
and
jge
sbb
jae
and
xchg
adc
inc
lcall
dec
lods
xchg
lock
mov
loope
insb
jo
pop
push
mov
scas
mov
push
adc
roll
or
mov
in
jae
cli
ret
aaa
sbb
into
mov
out
cmpsb
test
cwtl
rol
pop
push
inc
insb
mov
sahf
push
jne
sbb
dec
std
mov
pop
pop
mov
add
js
sahf
inc
mov
cmc
cmp
lds
shll
push
sub
pop
xchg
jo
sub
call
inc
lea
sub
pop
pop
cmp
and
loop
pop
test
push
fists
or
sbb
lcall
push
fistpll
push
and
dec
repnz
cmc
cmp
jg
lahf
mov
xchg
adc
test
xchg
jg
jl
mov
bnd
mov
insb
arpl
sub
pop
or
into
or
cltd
xor
inc
dec
in
mov
stc
inc
jp
or
mov
mov
cmp
jl
jle
int
rcll
ja
add
dec
aas
fmuls
rclb
outsl
nop
sti
mov
xchg
mov
in
ljmp
push
movsb
faddl
adc
dec
xchg
cmpsl
jmp
pop
dec
add
cmpsl
sub
sub
jnp
stos
popf
push
sbb
xor
inc
mov
and
jo
cs
out
aam
out
js
jno
fcomps
aas
in
pop
mov
adc
inc
mov
xor
cltd
in
into
daa
adc
fnstcw
in
adcl
or
mov
mov
ret
push
jecxz
ret
lret
dec
pusha
insb
notb
int3
push
sbb
iret
mov
sarb
or
outsb
inc
mov
cmp
add
scas
mov
aam
pop
imul
pop
mov
dec
outsb
loope
or
mov
loopne
pop
negb
jge
bound
add
xor
mov
mov
bndstx
sub
add
mov
sub
xor
rclb
cmpsl
mov
or
mov
lds
ret
rcl
jg
jecxz
xlat
pop
mov
clc
or
fimuls
mov
push
or
sbb
ror
add
loopne,pt
lods
sub
or
pop
aas
fldt
or
lods
test
imul
add
dec
cmp
jmp
int
es
dec
ret
in
jmp
add
pop
jo
mov
push
es
sub
in
dec
jae
add
push
cmp
push
inc
inc
pop
sbb
inc
decl
lea
ljmp
rolb
leave
jae
pop
ss
aad
cwtl
aaa
test
jae
sub
jle
fwait
ror
and
adcb
cltd
lods
cltd
or
mov
and
dec
scas
push
push
icebp
mov
push
test
cmp
iret
cld
add
jp
jge
into
pop
arpl
lcall
dec
dec
or
cmp
imulb
fdivs
lock
jmp
mov
mov
sbb
mov
or
sbb
fcmovb
outsl
imul
sbb
mov
pop
lea
shrl
cmpps
mov
inc
into
sub
mov
sti
rcrb
daa
jmp
inc
sbb
ds
rorl
inc
mov
adc
cwtl
and
xchg
stos
mov
dec
fcomp
fcomps
push
pop
adc
dec
pusha
xor
ljmp
bound
xor
insl
fimull
xchg
xchg
mov
ficomps
lea
jecxz
repnz
and
call
and
test
popa
jb
jbe
in
out
dec
mov
cmp
sti
leave
jmp
and
je
xchg
jb
xor
jg
nop
adc
das
out
xor
lods
xchg
jb
test
mov
and
push
jl
inc
jns
loope
ljmp
movsb
iret
lock
mov
inc
pop
int
mov
je
imul
or
push
push
fcompl
fists
adc
mulb
inc
lcall
aad
add
lds
adc
add
sbb
ret
addr16
in
add
pop
arpl
in
xlat
push
sbb
bound
pop
faddl
cmc
mov
test
mov
push
sub
jl
xchg
push
pop
cwtl
leave
push
leave
ficompl
and
stos
or
xchg
imul
nopl
out
hlt
testb
add
jecxz
jbe
jmp
push
popf
dec
jo
and
orl
add
adcl
push
mov
ficoms
cmp
in
stc
xor
xchg
in
rcrb
in
add
mov
jae
imul
mov
inc
jbe
leave
cmovs
or
and
dec
sub
aas
inc
inc
or
or
lcall
cwtl
leave
lock
pop
std
lock
inc
int3
dec
pop
jmp
adc
fwait
pop
lock
push
dec
stc
xlat
mov
roll
sbb
xchg
ja
cmpsl
test
lcall
andb
movsl
push
push
pop
cmp
out
mov
add
pushf
push
sub
pushf
cli
lret
jne
cmp
jae
push
aas
xor
pop
dec
mov
pop
fnop
fst
or
add
dec
push
sbb
cli
xor
nop
mov
lds
cltd
movsb
imul
xor
adc
int3
xchg
fsts
test
test
jno
std
popf
movl
pop
mov
jmp
ficoms
push
adc
xchg
shrb
mov
pushl
aam
xchg
inc
leave
add
cmpb
jp
cld
pop
dec
mov
sbb
mov
rcr
adc
hlt
push
lea
aad
pop
xchg
dec
jne
fnstenv
push
jbe
add
pushf
mull
push
sub
cli
dec
lahf
lods
add
xchg
in
inc
addr16
ds
repnz
test
nop
mov
push
mov
and
mov
leave
leave
dec
and
and
in
mov
or
pop
das
hlt
mov
pusha
int
inc
add
xor
add
movsl
jae
dec
and
lods
loopne
jo
movsb
vmovdqu
lods
ffreep
mov
push
es
mov
jecxz
inc
lods
jne
jecxz
lret
and
jns
out
sbb
xor
and
jbe
sub
xorb
xor
mov
fwait
aaa
and
ljmp
movsl
fmuls
cmpsl
and
add
pop
fidivrl
arpl
or
enter
lods
ficoml
aas
aas
lret
xchg
push
fmuls
test
mov
cltd
sub
fucom
in
loopne
repnz
mov
push
hlt
push
repnz
xor
stos
call
or
mov
mov
repz
icebp
add
mov
jae
jecxz
rorl
jge
jns
xchg
jmp
icebp
loope
lret
popa
movsb
out
mov
push
mov
clc
les
in
sub
dec
jbe
repz
es
mov
xlat
nop
mov
xlat
leave
in
push
lahf
xchg
outsl
inc
jl
or
movsl
cwtl
pop
dec
lods
mov
stos
add
sbb
xchg
imul
cmp
in
shlb
dec
mov
fadd
inc
loope
into
dec
push
cmpsw
fwait
or
mov
xor
push
sti
ret
adc
or
jns
pop
daa
mov
shl
pusha
add
mov
mov
jl
imul
mov
movsl
xchg
out
cmp
lods
and
add
sub
fistpll
lea
addr16
lahf
in
shlb
movsb
pop
inc
mov
mov
flds
mov
push
xchg
dec
mov
add
mov
js
sahf
leave
push
pop
std
jle
in
add
or
daa
mov
jb
lds
loopne
xchg
bound
mov
enter
push
dec
inc
in
mov
add
pop
stos
in
mov
cmp
or
fwait
jb
cmp
ret
xchg
call
mov
mov
scas
sub
or
jb
mov
sub
jp
jnp
aaa
ret
and
xor
clc
or
stos
push
aaa
or
adc
sub
imul
xchg
and
mov
into
dec
ss
mov
mov
stos
int3
mov
mov
pop
xchg
pop
xor
xchg
jmp
and
sti
mov
push
or
and
out
ret
jl
aam
test
or
mov
pop
mov
pushf
pop
mov
jns
adc
scas
mov
fstps
mov
mov
push
pop
or
dec
jbe
scas
scas
repz
pop
jbe
mov
or
push
loopne
int
cmp
mov
movsb
cmp
lcall
jge
jl
stc
cli
nop
std
mov
pop
adc
push
das
mov
outsb
dec
je
xlat
add
and
jge
pop
insl
jbe
adcb
leave
jp
cmp
mov
jns
sub
xchg
es
call
std
mov
adc
inc
rorb
sub
test
clc
ss
leave
jb
ja
sub
push
decl
pop
push
add
xchg
and
xor
mov
and
xor
pusha
adc
inc
add
add
mov
push
cmp
test
scas
mov
lret
mov
cmp
mov
xor
ret
stc
outsl
push
pop
mov
jge
out
dec
xchg
int3
daa
sub
movsl
sqrtps
push
adc
daa
cltd
mov
unpckhps
sbb
push
sarb
jae
jb
dec
test
inc
xor
push
pop
inc
push
in
pop
jge
xlat
scas
loop
cmpsb
sub
sbb
lahf
in
cmp
shrb
pop
sbb
das
fldt
lcall
popf
mov
pop
and
or
stos
fildll
mov
les
sub
imul
inc
jl
test
push
sub
dec
adc
inc
fldenv
dec
dec
dec
enter
pop
rcr
push
pop
and
inc
mov
fwait
mov
negb
push
jp
aam
int3
cld
fldl
pop
xchg
xchg
dec
sub
jl
mov
test
arpl
inc
mov
call
loopne
out
je
fnstenv
cli
rcrl
insl
mov
cld
into
scas
in
mov
pop
out
inc
test
jecxz
sub
push
inc
hlt
ss
xor
sahf
orb
clc
scas
mov
gs
sti
sbb
loope
fidivrl
js
mov
xchg
es
shrl
pop
in
mov
mov
sbb
out
jecxz
jo
push
popf
dec
mull
sahf
insb
push
sahf
add
mov
fcmovne
xor
or
sub
add
xor
mov
cld
mov
cli
sub
imul
loop
xchg
mov
inc
ret
pop
jl
popf
cmc
popa
push
out
dec
lds
add
dec
fwait
bound
adc
adc
test
adc
bound
add
cmp
mov
aaa
add
cld
loope
jns
icebp
push
ficomps
popa
adcb
jb
jo
clc
adc
insl
push
jmp
push
add
push
push
adc
stos
inc
data16
push
pushf
lds
mov
pmullw
sub
aas
std
cs
sbb
addl
ljmp
fadd
pop
nop
stos
mov
add
mov
out
imul
mov
pop
pop
cmpsb
cmp
xor
sub
jae
push
and
pop
aad
mov
test
jp
lahf
out
je
cmpsl
add
into
dec
or
int3
cmp
xor
mov
pop
movsb
jle
jmp
loop
pop
ljmp
enter
and
mov
xchg
xlat
in
push
aas
xchg
stos
stc
mov
xchg
add
mov
fldenv
stc
push
fiaddl
cmc
fiadds
xchg
testl
or
sub
add
cmp
out
push
sub
mov
and
push
rcrb
les
sbb
lret
lret
add
push
sbb
outsl
in
pusha
filds
mov
int3
repnz
add
inc
dec
fidivrl
pushf
jo
inc
rclb
mov
add
int
int3
scas
inc
xchg
stos
lds
aad
mov
add
movsl
and
push
dec
call
leave
xchg
mov
xchg
push
enter
pop
push
add
adc
mov
loopne
sbb
jno
xrelease
adc
les
sbb
lds
mov
jg
sub
in
movsb
pop
inc
jae
test
shr
scas
jg
cltd
mov
sahf
negb
push
sbb
pop
lock
int
or
movsl
std
xchg
stc
and
jns
ret
push
les
in
push
add
mov
mov
repz
lret
insl
daa
ror
mov
push
or
gs
pop
sub
push
scas
repz
xor
lods
and
js
aas
out
loop
pushl
lods
stc
mull
aas
rorb
or
xor
and
js
fsubrs
mov
les
fisttpll
pop
or
fucomi
add
dec
push
jae
sbb
dec
inc
push
sbb
cmp
xchg
rcrb
sbb
lret
jb
mov
shrb
pop
cmp
push
adc
fstpt
std
xor
xchg
cmp
out
in
outsl
sub
jg
xchg
gs
mov
ret
stc
sub
les
ja
sbb
pop
mov
sbb
mov
or
jnp
and
push
pop
cmpsb
sahf
fdivl
pop
int
stos
icebp
out
mov
jmp
scas
xor
push
hlt
mov
repnz
and
xor
hlt
mov
lret
mov
or
cld
xchg
sbb
mov
ja
mov
sti
dec
jo
inc
sbb
lds
sub
dec
loope
adc
push
lods
dec
mov
push
cmc
pop
lods
out
xor
inc
test
push
sub
mov
pop
cmpl
lahf
xchg
dec
pushw
in
xchg
inc
mov
nop
jo
lods
movb
ja
mov
add
in
daa
aad
jp
ja
test
stos
cmpsl
lods
and
lock
xchg
mov
sarb
out
jne
lcall
popa
dec
push
lret
inc
test
popa
mov
test
push
inc
sub
std
dec
xor
xchg
or
push
movsb
cmc
imul
cltd
sub
insl
push
inc
sub
jge
add
orb
push
cli
imul
sbb
cmp
cmp
jbe
pop
mov
bound
out
mov
sub
popf
xor
jge
jnp
lods
add
cmp
mov
int
mov
clc
aad
in
stos
das
lea
dec
adc
fcomps
enter
mov
xor
adc
cmpsb
cs
xor
inc
jg
notb
pop
int3
xor
dec
pop
std
out
fstl
das
int
icebp
std
imul
fnsave
dec
clc
push
adc
test
scas
and
dec
fsubr
arpl
sbb
enter
movsb
push
add
jae
jne
out
jge
fucomi
fisttpll
inc
xchg
jns
repnz
test
cmp
mov
adc
pop
cltd
pop
xchg
daa
or
adc
sbb
jl
xor
cmp
shl
clc
xchg
cmp
aas
inc
push
and
ret
dec
mov
inc
mov
sbb
aad
add
mov
cmp
scas
loopne
fs
xor
imul
lods
push
aas
stos
cs
jg
adc
pop
rcrb
mov
clc
push
and
pop
pushl
repz
sub
pop
mov
mov
push
or
push
xchg
sbb
add
hlt
imul
jb
mov
pop
lahf
sbb
out
adc
xchg
call
sqrtps
xchg
pusha
xchg
and
test
clc
fsubrs
mov
pop
clc
mov
sahf
push
int3
inc
lea
mov
xchg
andb
push
mov
notb
mov
pop
cli
or
aas
das
sub
lcall
outsl
ret
mov
flds
and
cmp
cmpb
cmpb
aaa
push
pusha
pop
adc
mov
inc
popf
and
adc
jnp
int3
shl
dec
in
mov
inc
idiv
dec
out
shrb
data16
add
ss
sbbb
or
cmp
lahf
add
movsb
inc
xor
mov
out
ja
scas
clc
shrb
mov
inc
mov
inc
mov
les
repz
pop
sarb
cmp
cld
jecxz
stos
sbb
cmp
and
lcall
mov
xor
xchg
adc
mov
mov
lods
stos
mov
in
xchg
stos
xchg
sbb
mov
lea
scas
adc
mov
xchg
xchg
mov
test
xor
pushl
movb
and
add
inc
nop
jecxz
cmc
xchg
jnp
aas
nop
mov
loopne
cmp
jnp
scas
jnp
or
or
xor
aam
or
sbb
dec
and
mov
cltd
mov
dec
insb
cmp
mov
sub
inc
cmp
cltd
stos
in
push
loopne
es
rcll
add
pop
cmc
xchg
jle
add
xchg
inc
lea
add
fucomip
stos
mov
xor
ds
or
jp
pop
pushf
xor
aam
out
push
jp
out
in
push
push
pop
and
jge
addr16
mov
cmp
lret
pop
pop
popf
push
out
imul
insb
lods
pop
das
adc
xchg
fldl
or
pop
popf
push
add
roll
inc
and
aas
inc
rcll
rorb
jle
push
lret
lretw
ljmp
testb
ljmp
shrl
adc
jecxz
cmp
gs
test
repz
mov
je
mov
cmp
push
and
push
js
int3
xor
negl
shrl
xchg
adc
inc
ja
lret
xor
in
imul
mov
imul
add
inc
lcall
push
xor
xor
shrl
call
fcoml
mov
mov
shlb
test
or
int
mov
out
xchg
dec
test
push
sti
popf
dec
mov
mov
sbb
loop
lods
in
gs
out
dec
xor
ds
push
and
cltd
mov
push
fstpt
je
push
pop
movsl
scas
xchg
and
mov
add
ret
mov
mov
inc
lret
fcomps
pop
sub
adc
xor
mov
sub
stos
jae
ja
inc
cli
shrb
gs
imul
loop
pop
mov
jg
add
daa
jns
xabort
jmp
add
fimuls
int
xchg
pop
xchg
ljmp
jmp
fnsave
mov
xchg
ficomps
pop
popf
xchg
jge
inc
push
sub
lcall
hlt
xor
out
sub
inc
mov
repz
ret
icebp
fcmovb
pushf
pop
and
pop
int3
push
lock
or
mov
adc
lea
xorb
ds
mov
mov
dec
xchg
add
rclb
in
in
or
xor
mov
add
add
fmuls
inc
ljmp
add
xchg
addb
adc
mov
es
orb
and
ja
mov
cli
sbb
ljmp
insl
psubusb
xchg
xchg
jmp
in
mov
pop
add
xchg
mov
adc
cwtl
or
shr
mov
fsubp
push
push
or
into
dec
adc
fsubrs
push
test
inc
or
dec
lock
xor
dec
cmp
out
ljmp
cmpsl
out
js
aaa
mov
idivl
mov
outsl
pop
arpl
push
xor
push
xchg
clc
outsb
or
sbb
outsb
aam
sub
mov
fisubl
test
xlat
in
push
jle
jle
xchg
add
cmp
je
inc
pop
xchg
mov
cmp
sbb
pop
movsl
ret
jne
xchg
xor
in
inc
xor
and
cmp
shlb
subb
aad
add
dec
bound
pop
popf
cmp
or
mov
xchg
xchg
imul
and
test
push
call
adc
sahf
mov
sarb
adc
das
sti
or
lea
std
rcrl
test
inc
cmp
or
arpl
sbb
inc
aaa
mov
add
sbb
fnsave
push
fs
or
mov
sbbb
mov
lcall
lock
pop
aam
out
insb
rcr
inc
lods
mov
je
pusha
loopne
gs
arpl
inc
aaa
jbe
repnz
cmp
dec
icebp
jmp
push
ret
fldl2t
shrb
adc
movsb
pop
pop
ja
data16
inc
daa
inc
xchg
mov
push
or
add
mov
into
dec
inc
int3
sub
push
popa
ja
jmp
out
mov
out
sbb
jnp
jbe
sbb
divl
je
jmp
lods
mov
jo
fisubrl
and
mov
or
mov
sub
stos
mov
in
adc
sbb
divl
rcrb
jb
daa
repnz
xor
ret
inc
rcl
xor
inc
iret
scas
lods
ds
add
rcrl
decl
mov
pop
rcrl
add
lock
cltd
cmpsl
add
xor
push
stc
fildll
mov
mov
addr16
or
mov
mov
add
bound
mov
mov
xchg
daa
push
sub
inc
call
in
in
mov
cmpb
lcall
fdivr
add
popf
data16
mov
mov
cmpsb
hlt
call
dec
xlat
mov
cltd
outsb
test
icebp
gs
das
and
dec
scas
add
inc
aad
sarl
or
xchg
inc
js
ret
lock
dec
push
shrl
push
in
call
sub
and
cmp
cs
addl
mov
imul
or
arpl
dec
test
popf
jp
add
or
neg
and
sti
mov
pushf
es
jnp
test
fidivs
jb
sbb
repnz
les
in
ret
loopne
lret
mov
aad
or
ficomps
gs
cmpsl
daa
xchg
dec
dec
pop
lcall
sahf
push
xchg
jp
cwtl
pop
in
sub
mov
lods
cmp
lcall
cmp
int
and
shl
push
mov
rcrb
cmpsb
mov
jbe
jle
sbb
aaa
bound
dec
mov
sbb
shrb
decl
jmp
mov
xchg
cmp
test
test
iret
sub
inc
push
loopne
jg
sahf
shll
outsl
add
orl
inc
push
scas
andb
repz
xchg
sti
std
fsubrp
jbe
ja
xchg
mov
adc
pushl
lods
stos
dec
fadds
sub
inc
in
mov
pushf
mov
and
stc
mov
dec
or
mov
out
push
or
mov
xchg
mov
cli
loop
and
add
mov
lret
inc
pop
cmp
jb
int
fsub
mov
pop
push
popf
je
rorb
js
mov
and
mov
icebp
adc
stc
push
pushf
mov
call
cli
fstpt
add
pop
fsubl
pusha
inc
jge
fsubl
nop
jae
xor
push
sub
mov
out
mov
push
sahf
add
jecxz
dec
or
cmp
cmp
cwtl
add
ret
pop
xor
mov
les
sti
push
push
push
jmp
sub
add
xor
lret
inc
xor
jge
mov
data16
fdivs
pop
out
push
jmp
scas
jmp
stos
xor
adc
enter
xchg
pop
imul
pop
cmpsb
inc
add
jnp
pushf
outsl
mov
imul
jl
inc
xchg
in
ffreep
sti
movl
insb
or
cld
data16
jg
and
jg
std
call
fidivl
dec
out
std
out
push
movsb
sub
lods
jnp
icebp
lcall
cwtl
sbb
pop
in
push
push
rorb
adc
xor
jle
std
std
sbb
or
mov
xchg
shlb
cmp
test
pop
jle
mull
std
dec
cmc
mov
and
nop
cwtl
adc
sub
bound
and
popf
jb
pop
jecxz
arpl
leave
jecxz
xor
outsl
jae
rcr
bound
pop
mov
mov
out
insb
jecxz
inc
call
add
jb
movsl
or
xchg
add
js
fnstenv
iret
imul
lret
loop
push
cmp
in
std
dec
xor
mov
adc
xor
xor
packuswb
xor
lret
mov
out
cs
cmpsb
and
cli
or
inc
test
push
addr16
lock
and
ljmp
jmp
xlat
loop
addr16
xor
xchg
lods
cmpsb
jbe
lods
jecxz
hlt
and
push
or
hlt
cmc
out
scas
jle
sbb
movsb
inc
dec
rcrb
xchg
pusha
test
in
fs
fwait
jmp
push
aad
rolb
rcr
sarl
inc
adc
fwait
add
fs
ret
xor
cwtl
bndldx
jg
loope
test
loopne
mov
push
lret
or
decl
pop
pop
and
popa
scas
add
mov
cmp
rol
scas
stos
mov
and
push
sbb
push
mov
sbb
loop
push
gs
or
mov
daa
jge
cs
mov
cmp
mov
xor
loope
repz
cmp
pop
shrb
mov
in
ja
cmp
arpl
fisubrl
out
aaa
dec
xchg
cmp
jne
adc
inc
mov
lcallw
xchg
jp
stc
arpl
test
sub
mov
aas
sbb
and
fsubrl
push
mov
add
adc
sbb
imul
jecxz
ljmp
inc
out
jecxz
push
ds
pusha
jp
pusha
xor
dec
fistpl
sti
lret
aam
jmp
imul
mov
sub
mov
push
sbb
and
jb
jg
scas
loope
mov
pop
aas
pop
mov
frstor
pop
in
cmpsb
pop
sub
add
in
into
jo
cmp
mov
lret
pusha
cmp
arpl
push
ds
sbb
sbb
push
and
dec
mov
jp
mov
add
mov
pop
adc
or
das
mov
in
mov
std
insl
push
add
xor
push
jb
out
std
lock
mov
dec
sarb
or
inc
aam
ret
shll
mov
das
loop
ss
stos
add
jnp
jo
jne
imul
cltd
sti
or
adcb
addl
fisubs
les
adc
test
inc
fcoml
xchg
mov
xor
cld
rcrl
mov
lock
dec
stos
jns
mov
notb
cmp
daa
hlt
mov
adc
inc
cmpsl
push
fiadds
filds
in
clc
testl
mov
movsb
std
xor
inc
std
sbb
mov
jb
add
xor
scas
mov
sub
sub
movsb
fcmovbe
mov
jnp
dec
sbb
mov
sbb
xchg
mov
stc
push
out
les
enter
js
mov
sbb
fmuls
cmp
inc
sub
cld
lds
ljmp
lret
push
mov
mov
xchg
iret
fwait
cmpsl
sub
push
lds
nop
int3
sub
imul
mov
lret
cmp
sub
mov
or
pop
sahf
adc
leave
push
mov
mov
fadds
cld
cmp
and
mov
out
xchg
xchg
pop
xor
aad
xchg
push
mov
add
mov
cld
sbb
addr16
dec
pop
in
adc
xor
jnp
add
fwait
jnp
jnp
jp
push
mov
fwait
loope
adc
in
es
addr16
jns
pop
dec
mov
xchg
imul
add
dec
out
jecxz
jnp
sub
sub
mov
fwait
lods
pop
adc
jbe
pop
add
aam
and
lds
iret
xor
mov
loopne
push
in
xchg
in
in
scas
mov
loop
mov
mov
xchg
stos
andl
adc
imul
inc
adc
ficoms
pusha
fdivs
jne,pt
in
std
rol
je
dec
lret
rcll
cmpl
rorb
xor
or
add
cs
mov
add
xchg
push
or
jg
mov
scas
sub
outsb
mov
test
mov
mov
and
push
iret
dec
jb
arpl
pop
sbb
inc
cmp
pop
ja
cmpsb
fucomip
jmp
adc
jecxz
pop
lea
adc
in
cmpsb
xchg
cld
pop
loopne
clc
add
and
xor
sbb
add
rcll
lds
and
jg
xchg
clc
outsb
shll
inc
sbb
rolb
inc
lcall
stos
mov
inc
mov
mov
jns
ret
and
sbb
inc
sub
ljmp
fdivl
adc
in
push
std
adcb
insb
mov
pop
pop
lods
pop
add
jne
fimuls
icebp
aad
insb
or
fildll
test
incb
adc
popa
push
out
adc
shlb
push
mov
cmp
fs
ret
jo
inc
pop
sbbb
leave
xchg
cmp
jne
loopne
xchg
mov
lret
mov
pop
mov
lret
enter
orl
mov
jnp
into
push
sarb
sbb
pop
movsl
negl
imul
call
mov
call
loopne
xchg
jb
mov
repnz
popa
xor
add
cmpsb
sub
movsb
dec
cmpsl
fwait
out
ror
cs
sub
in
sub
adc
adc
push
adc
pop
bound
test
jl
cmp
push
lock
dec
push
icebp
mov
cmp
rolb
imull
test
call
mov
stos
sti
test
pop
insl
jo
cmp
leave
into
pop
cmp
mov
dec
mov
mov
mov
and
insl
push
or
subl
cmc
mov
push
cmp
scas
cmp
ds
sbb
add
std
push
jg
nop
or
fisttps
sbb
dec
mov
cmc
mov
repz
sahf
xor
sub
sbb
jno
push
adcb
jnp
pop
xchg
sbb
push
mov
add
xchg
xchg
xchg
arpl
out
mov
pop
xor
jmp
adc
les
sbb
fs
jbe
aas
scas
sbb
mov
inc
ret
int3
cmp
loope
push
movsl
mov
dec
push
xor
sbb
cmp
les
dec
xchg
lret
push
fisttpl
xchg
mov
stc
cli
jns
repz
std
clc
in
outsb
dec
gs
or
gs
or
imul
pop
in
incl
push
jg
test
xor
mov
sub
hlt
mov
mov
lcall
or
ret
lret
call
lods
inc
mov
je
add
xchg
test
out
sti
stos
decb
and
jo
js
mov
ds
cwtl
mov
ror
sbb
push
rcrb
adc
imul
pop
sbb
sarb
std
lods
int
inc
fmuls
aaa
jns
cmp
shrb
lds
int
ret
sbb
fidivl
shl
stos
mov
cmpb
push
sahf
xlat
sub
stos
adc
fwait
xchg
scas
push
mov
sbb
dec
add
pop
jb
jecxz
cmp
fstpl
mov
imul
leave
or
insb
push
push
jnp
and
mov
or
jg
xor
inc
in
xor
scas
jno
je
mov
xchg
test
enter
movsb
mov
push
rorb
or
mov
and
inc
add
cmp
jecxz
cltd
jne
push
cmpsb
mov
or
pop
fwait
inc
push
adc
mov
test
movsb
dec
adc
scas
frstor
adc
jbe
push
cwtl
clc
scas
jne
adc
and
rcl
or
ja
xchg
inc
xchg
pop
mov
inc
aas
mov
lret
xchg
pop
mov
fidivrl
rcll
jnp
insb
imul
xorl
or
dec
lods
mov
lahf
or
cwtl
xchg
and
jecxz
rcrb
fcmovnbe
pop
add
cmp
popf
cmp
int3
lods
movsl
es
out
pop
fnstsw
push
aaa
fcoms
test
cmp
rolb
ds
xchg
or
push
mov
or
sbb
mov
aaa
repz
adc
loopne
or
push
insl
and
aam
test
fdivrl
mov
pop
xor
test
imul
push
fstpt
or
out
pop
or
lcall
decl
adc
cmp
insl
mov
pop
movsb
test
xor
cmp
xchg
pop
or
and
into
movsb
movsl
or
bound
pop
call
jbe
or
mov
cmp
pop
and
dec
inc
xor
xor
out
pop
pop
jo
sub
lds
ds
out
in
jmp
inc
jb
jp
push
sbb
lds
add
fidivrs
in
xchg
aad
xchg
fld
mov
clc
xorb
mov
mov
jns
jmp
fldl
inc
jp
loope
cmp
rcr
mov
scas
dec
mov
notl
lds
cltd
xchg
ds
push
fpatan
lret
imulb
mov
pop
jns
shlb
into
xchg
jge
mov
jne
cmp
cmp
and
scas
dec
loopne
cmpsb
push
pop
sbb
sub
je
sbb
fisttpl
push
outsb
jnp
ss
cs
pop
ret
sbb
or
lds
in
jb
cld
sub
je
fidivs
mov
xchg
int3
popf
rcrl
adcb
test
data16
lods
mov
clc
mov
mov
std
lahf
es
jmp
stos
lret
adc
cmpsb
xor
or
pop
adc
adc
dec
dec
mov
sbbl
inc
insl
add
sbb
insb
inc
out
sub
inc
shr
decl
fsub
pusha
mov
lahf
aaa
gs
aaa
jl
outsl
shll
pop
push
aam
sub
je
mov
out
push
and
ja
fucomip
mov
jecxz
inc
add
pop
adc
pop
lock
mov
shll
xchg
imul
inc
inc
in
xor
sub
mov
sbb
arpl
js
pop
lcall
insb
add
sahf
lcall
dec
cmc
int
jbe
out
test
aam
jp
data16
stos
sub
cmovb
enter
popl
mov
ja
mov
ljmp
rorb
inc
ds
fs
aam
push
ret
or
cld
mov
fstps
test
loopne
ret
mov
rolb
push
jecxz
cli
imul
sbbl
enter
jl
ret
pushf
fadds
push
xor
in
xor
jo
lret
cmpsb
daa
jnp
call
and
sti
and
sbb
icebp
lods
ljmp
std
jns
mov
sbbb
adc
cmp
mov
int3
xchg
scas
hlt
mov
icebp
and
data16
dec
and
push
xorb
movsl
inc
jle
mov
dec
xchg
or
push
inc
sahf
sbbl
mov
and
inc
mov
mov
mov
arpl
lcall
popf
imul
mov
es
bound
lret
xchg
jnp
imul
pop
mov
sub
aas
mov
aad
and
or
jns
or
mov
ljmp
inc
das
leave
call
aas
ss
push
or
je
jb
adc
repz
shl
add
stos
mov
loop
xchg
mov
sbb
xor
fstl
sbb
imul
lods
inc
lret
mov
ja
loopne
std
loope
jg
and
in
fstp
cmpsb
add
notl
pop
mov
roll
xor
xchg
les
in
pop
mov
fbstp
cmp
adcl
mov
pop
or
idivb
leave
ficoms
prefetchwt1
adc
dec
sbb
fwait
xorl
sbb
nop
push
mov
cmc
lea
daa
fucomp
inc
lret
pop
es
test
insb
dec
fmuls
rorb
pop
mov
or
rclb
inc
repnz
jl
and
in
add
test
lahf
push
and
xchg
xor
lea
sbb
pop
cs
into
cmp
cli
movsb
std
adc
mov
popf
out
jb
repz
dec
xchg
sbb
xorb
incb
inc
andl
inc
pop
add
lret
aam
loopne
enter
int
out
jne
stos
mov
ljmp
sarl
sub
andl
add
decl
cmc
icebp
fimull
xchg
mov
mov
mov
aam
popa
dec
fdiv
pushf
inc
sub
mov
sub
arpl
mov
add
addr16
mov
sub
lock
push
loopne
dec
bound
test
inc
in
dec
xlat
loop,pn
fstpt
jb
test
sarb
inc
ret
dec
adc
es
rolb
addr16
jmp
pop
push
push
das
mov
dec
ja
cmp
movsb
scas
push
jge
inc
test
jg
cmp
aaa
mov
aam
das
add
sti
lock
xor
cltd
sbb
pop
repz
test
or
dec
mov
je
jle
and
inc
mov
popf
xor
push
xchg
jmp
sbb
dec
jl
jns
mov
lods
xchg
pop
fiaddl
push
push
jle
int
mov
mov
popf
pop
sbb
mov
dec
aaa
aam
outsl
sbb
jmp
in
mov
mov
add
mov
or
jae
push
xchg
pop
addb
out
sbb
push
jbe
movl
pop
out
rclb
adc
cwtl
push
adc
push
test
scas
dec
cmpsb
mov
int3
jle
ret
loopne
jae
and
jb
dec
cmp
jo
je
cwtl
push
dec
call
aam
push
mov
ja
and
imul
std
jbe
test
mov
data16
push
push
and
aas
inc
pop
test
fcoms
imul
dec
jo
pop
push
mov
xchg
inc
jne
cmpsb
push
stc
negb
mov
xlat
jmp
push
rolb
lock
pop
and
fdivl
rcl
jle
mov
xchg
pop
pushf
add
outsb
les
sub
insb
mov
sub
sbb
mov
inc
inc
fs
mov
push
pop
andl
pop
addl
cmp
push
les
or
sbb
mov
push
jl
inc
mov
pop
loope
adc
dec
add
push
fisubs
scas
sbb
or
xchg
jecxz
xchg
mov
es
jo
bound
shrl
das
fwait
mov
mov
arpl
fwait
arpl
repz
fsubp
dec
mov
fdivs
lahf
cmc
pop
cmp
jmp
fs
jno
or
andb
sub
mov
enter
lds
les
cld
loopne
test
pop
test
mov
xchg
mov
in
add
xor
fisubs
int3
jae
mov
and
push
cmp
mov
cwtl
cld
data16
ljmp
std
lcall
xchg
jecxz
or
and
jmp
aad
or
scas
xor
push
pusha
adc
sub
xchg
cmc
push
adc
cmp
push
loopne
mov
xor
addr16
xchg
int
lock
adc
sub
xor
and
sbb
pop
inc
jo
stc
dec
dec
nop
icebp
cwtl
outsl
and
or
sbbl
adc
shll
repz
push
inc
shrl
das
stos
or
jbe
in
jp
fwait
xchg
fwait
sub
imul
push
or
insl
cmp
mov
mov
add
cmp
xchg
mov
add
rep
pop
push
mov
or
mov
dec
jle
and
cs
rclb
lds
pop
jmp
cmp
adc
out
jne
push
mov
fmull
insl
test
sbb
cwtl
push
mov
fwait
ja
jp
lods
xchg
and
hlt
push
loopne
data16
xchg
iret
incl
mov
fbstp
push
adc
fs
fistpl
outsb
cld
js
testb
xlat
loope
pop
inc
adc
call
jp
add
xchg
in
cmc
mov
dec
lahf
push
fldt
rorl
clc
pop
stos
fadd
inc
repnz
jb
jns
icebp
add
cmp
hlt
jmp
xchg
add
mov
push
mov
les
sbb
ds
scas
sbb
sub
mov
mov
and
push
pop
jecxz
pop
sbb
and
add
adc
xor
mov
out
mov
adc
insb
loop
loope
leave
sbb
or
push
rcl
add
or
cli
xor
rol
inc
or
popf
fucomi
ljmp
mov
pop
aas
mov
movsl
inc
jle
mov
repz
shlb
cmc
loopne
pusha
add
je
inc
pushf
lods
stos
test
rcl
mov
es
push
call
sub
inc
mov
dec
cmp
fdivr
mov
pushf
or
sahf
lahf
jg
adc
cs
cmp
mov
cmp
mulb
lret
adc
xor
inc
mov
push
mov
js
pop
mov
pop
je
mov
pop
add
xchg
jb
push
cmp
push
cmp
mov
add
push
in
push
sti
lods
xor
ja
fdivp
cli
sbb
xchg
imul
mov
inc
outsb
movsl
push
adc
mov
mov
loope
daa
mov
push
jecxz
add
mov
push
inc
mov
in
fldcw
in
cli
cwtl
lret
mov
jbe
jl
and
add
pop
mov
fnstsw
pusha
push
sbb
sub
xchg
decb
stos
in
mov
mov
adc
incl
jnp
mov
in
mov
lods
push
popa
mov
daa
inc
mov
jbe
adc
mov
lods
push
js
pop
lahf
into
fs
rclb
mov
add
push
inc
xchg
or
adc
dec
jge
adc
cwtl
sbb
add
mov
fsts
pop
iret
out
ljmp
and
mov
adc
and
out
xchg
jo
push
rorl
notl
jecxz
jne
sub
repz
add
roll
mov
mov
sbb
cmp
scas
xor
mov
addr16
add
sbb
push
pop
shll
and
imul
clc
pop
add
fldenv
movsb
pop
mov
adc
mov
push
mov
ficompl
or
rcrl
rcr
xor
adc
push
mov
fmull
shrl
shll
mov
std
fwait
push
mov
fld
icebp
int3
mov
ja,pn
dec
xorb
test
lock
xor
lock
add
mov
jb
cmp
cmpsl
lret
xchg
aad
nop
cmp
push
pop
pusha
scas
pop
sbb
popf
call
add
mov
loope
inc
std
pop
pop
mov
popf
mov
popa
cmpsb
dec
shll
adc
lods
jno
or
or
in
sbb
add
jae
fcoml
push
add
pop
adc
mov
mov
push
mov
ja
mov
test
icebp
nop
jg
mov
movsl
pushf
das
mov
xchg
mov
jp
scas
cmc
pop
into
icebp
jge
fsts
orl
add
sub
inc
addl
xor
rep
hlt
rcrb
call
jmp
cmp
aas
mov
incb
test
stos
mov
fdivrl
insb
cltd
cmp
sub
inc
test
arpl
cmp
nop
out
gs
mov
inc
jne
call
rcll
push
xchg
imul
ja
jle
in
or
sub
sub
mov
inc
divl
sub
sub
dec
push
sub
push
inc
ldmxcsr
fildl
test
jnp
ret
cwtl
cli
pop
cmp
inc
dec
and
jl
push
add
repz
aaa
dec
dec
mov
sbb
or
or
mov
loopne
lret
int
negb
cmpsb
pop
mov
sbb
addr16
and
jle
dec
and
incl
sbb
enter
jbe
inc
push
sub
ss
in
pop
dec
or
aaa
jle
jmp
push
pop
aam
pop
clc
and
ja
pop
lahf
xchg
mov
out
mov
sbb
cltd
xor
mov
ljmp
mov
adc
mov
negb
sbb
inc
add
and
sbb
shlb
cmp
dec
mov
enter
mov
mov
cmp
jae
ret
sbb
mov
insb
aam
adc
xor
mov
lds
pop
jecxz
loop
pop
jb
fcmovnbe
push
pop
add
mov
jl
xchg
inc
fdivs
or
cmp
pop
jg
jae
push
mov
or
xchg
jl
test
jle
testl
fisttpll
outsb
mov
xchg
mov
sbb
jb
lods
xor
xor
lahf
leave
out
push
adc
popa
mov
outsl
shll
add
test
xor
mov
sbb
jne
mov
cmp
cld
das
jno
fnsetpm(287
clc
push
shll
xor
adc
stos
dec
sbb
add
jg
cwtl
das
adc
outsl
fadd
push
das
movsb
and
and
clc
mov
out
lock
les
jle
dec
sbb
and
push
push
mov
sahf
lahf
aad
into
pushf
or
pop
xor
pop
xlat
roll
dec
and
jns
lret
test
stos
push
xor
sub
mul
jbe
jbe
cmpsb
pop
ja
sarl
mov
dec
dec
or
inc
add
dec
cmp
push
mov
mov
mov
push
and
pop
imul
mov
cld
fistps
xchg
sbb
fdivl
into
push
push
cmp
hlt
sbb
cmp
add
add
sbb
test
cli
cmpsb
and
out
mov
adc
inc
xor
arpl
ss
adc
dec
mov
pop
jg
pop
cmp
mov
lret
lock
pusha
cmp
mov
lock
sahf
insl
cld
mov
push
mov
cld
mov
sbb
or
rol
js
xchg
stc
lods
jbe
fmuls
ret
dec
enter
or
jae
adc
aas
pusha
int3
pop
imul
into
iret
jmp
xor
dec
fiaddl
pop
mulb
lock
xor
and
xchg
fwait
jle
filds
imul
pusha
adc
pop
push
and
add
cltd
fimull
xchg
push
mov
dec
mov
mov
jp
cmpsb
xchg
out
orl
aaa
gs
cmp
pop
mov
mov
hlt
popf
push
push
iret
cs
aam
loop
xchg
inc
inc
mov
aas
pushl
mov
mov
aam
pusha
dec
adc
push
inc
dec
sbb
repnz
fxch
pop
nop
repnz
iret
in
mov
xchg
repnz
xor
push
pop
push
inc
scas
loop
andl
ret
hlt
les
dec
into
sub
repnz
fwait
outsl
ss
jle
xchg
dec
push
fdiv
xor
daa
pop
xor
lcall
test
mov
and
sub
hlt
and
add
adc
xorb
mov
dec
les
mov
cmp
inc
sub
in
xchg
pop
enter
and
scas
pop
movsb
push
bound
cmp
enter
mov
sub
dec
lret
inc
call
arpl
xor
lcall
push
dec
call
pop
xor
xor
test
fisttpl
or
mov
dec
push
pop
jl
mov
sub
or
rorl
sahf
mov
dec
jbe
cmovb
lret
shll
xchg
push
fs
dec
mov
dec
out
push
xchg
fwait
mov
lret
mov
outsl
out
shrl
cmp
inc
push
loope
xorb
std
push
js
push
fsub
out
pop
jbe
xor
out
lret
and
push
or
xor
sbb
or
fldenv
cmp
hlt
testl
out
push
cs
dec
shll
cmpsb
scas
fadd
mov
movsb
jg
inc
loopne
add
xor
xchg
es
push
dec
mov
push
or
rorb
cmp
pop
inc
cwtl
pop
dec
pop
or
inc
xchg
sbb
adc
in
mov
fdivrl
setnp
imul
adc
loope
mov
js
scas
js
rorl
aad
jp
in
mov
inc
cwtl
mov
xor
cmp
sub
out
mov
pop
popa
les
pop
movsl
inc
sbb
add
fldcw
notl
mov
stos
test
inc
or
push
cmp
fcmovne
cmp
or
lods
dec
cld
cmp
pop
and
dec
and
into
mov
xor
dec
adc
pop
pushf
bound
xchg
mov
mov
outsl
dec
cmpsb
mov
aaa
xchg
pop
test
dec
add
inc
sub
xchg
aas
mov
add
int
imul
test
sbb
cld
jl
pop
push
in
test
fs
imul
cmp
xor
adc
enter
and
mov
jg
push
pushf
pop
or
cmp
xchg
lea
cltd
push
enter
in
push
pop
xchg
add
mov
add
rclb
loop
add
sbb
std
repz
or
mov
mov
fs
lret
push
mov
lds
mov
mov
sub
outsb
mov
jle
arpl
pushf
inc
leave
mov
scas
test
shll
mov
fisttps
dec
xor
int
daa
lcall
popf
add
cli
adcl
int
adc
cld
hlt
xor
or
out
rcll
push
out
inc
cmpb
cmp
pop
xchg
cmpb
sbb
outsb
cltd
cwtl
pop
pop
insl
add
ds
jnp
aas
mov
fwait
shr
out
cmp
xchg
icebp
cmpsb
ret
sub
roll
adc
int
rclb
mov
in
psubb
ss
or
or
dec
mov
adc
xchg
icebp
loopne
adc
mov
icebp
sarl
push
data16
dec
jge
inc
lds
lahf
sub
dec
adc
imul
rclb
add
repz
test
push
pushf
lahf
jmp
rolb
sub
or
hlt
jnp
test
insb
cld
loopne
jnp
cmp
add
mov
dec
fadds
nop
mov
enter
fnstsw
push
cmp
cmp
inc
ret
stos
sbb
divb
inc
push
add
ljmp
xchg
in
popf
or
ds
xor
mov
push
cmp
adc
pop
adc
push
fucomip
in
cmp
xchg
int
fs
fs
jb
push
push
add
cmpl
subb
gs
test
das
pop
mov
sbb
insl
add
ljmp
xor
push
ret
icebp
lods
lds
outsl
loop
fcoms
adc
inc
adc
test
lret
shrb
or
mov
cs
lret
ds
cmp
xchg
pop
cli
popf
int3
or
sbb
xchg
or
inc
pushf
js
or
inc
push
jo
out
dec
push
or
das
mov
inc
shr
and
je
lcall
aam
in
mov
or
insl
arpl
loopne
call
mov
repnz
loop
sbb
imul
push
nop
xor
push
sub
sub
outsl
loope
add
and
pop
aad
test
aam
push
aas
pop
mov
cmpsl
int
dec
cmc
aas
mov
pop
push
inc
in
movsl
jge
add
push
ret
lods
rolb
cmp
cmp
adc
mov
xchg
jb
mov
ss
mov
arpl
out
jg
mov
push
mov
dec
xor
inc
fidivs
xchg
stos
stos
cli
test
mov
dec
dec
adc
dec
push
cltd
adc
lds
adc
mov
cli
lcall
add
and
adcl
loop
cmp
icebp
mov
mov
xchg
xchg
inc
rorb
fwait
out
cmpsb
subl
movsl
sahf
outsb
adc
push
lcall
lahf
aaa
outsb
ret
and
insb
addl
push
pop
lods
cwtl
jp
rep
cmc
or
jecxz
jae
cmp
out
daa
and
or
cmp
int
jg
dec
test
cwtl
xchg
mov
sbb
mov
inc
xchg
xor
cltd
sub
scas
lret
cmp
lret
out
and
adc
pop
popa
jns
notb
loopne
and
aas
mov
out
loope
cmp
arpl
mov
xor
and
inc
jbe
fwait
and
mov
clc
outsl
popa
ljmp
jae
xor
daa
popf
in
mov
cmpsb
mov
cmp
sub
adc
in
loop
adc
lea
popf
cld
mov
movsb
cmp
xor
cmc
push
rcrl
mov
cmpsb
iret
cmc
mov
cli
shll
scas
sbb
clc
inc
sub
push
rorb
cmp
mov
jmp
jae
dec
dec
cmp
mov
mov
icebp
push
lret
movl
cli
sub
lods
insl
inc
sub
arpl
mov
sar
sub
shlb
sbb
push
int
xchg
lcall
pop
test
mov
add
add
add
or
fcompl
or
lods
outsb
ss
push
lds
cmpsl
or
xor
adc
adcb
cmp
mov
cmp
loop
jae
xor
xor
loopne
jg
jbe
scas
das
push
pop
nop
xor
fcoml
inc
push
data16
imul
shll
mov
scas
repz
lock
std
cmc
mov
mov
push
jecxz
fildll
pop
and
fnstenv
mov
jnp
sarb
mov
mov
stc
lock
adc
dec
push
popa
jl
mov
fistl
sbb
or
out
and
in
dec
imul
clc
ljmp
inc
test
cmp
jb
mov
mov
movsl
mov
mov
jno
cmp
lock
std
mov
cmp
setle
inc
into
mov
pop
and
leave
xor
and
xchg
lds
test
adcb
jno
sti
mov
xor
out
ss
mov
pop
sub
out
xor
sub
push
fldl
into
aad
pop
addl
jns
inc
outsl
add
js
ret
js
mov
loope
sbbl
cld
mov
mov
mov
into
clc
pop
sub
pop
xlat
xchg
dec
fs
orb
rcl
sbb
jo
cs
mov
mov
xor
push
or
xchg
iret
push
scas
lret
ss
fstpl
xchg
fistpl
gs
mov
sti
lea
out
fnstsw
jmp
fwait
iret
pushf
jae
mov
jg
fs
and
mov
cmp
push
and
lcall
pop
mov
jge
cli
fidivl
mov
shr
adc
pop
sbb
sub
and
fists
loopne
cmpsb
rcrb
push
adc
testl
mov
mov
stos
out
xchg
cmpsl
jg
cmp
xor
dec
push
or
push
or
pop
nop
enter
push
repz
xchg
or
insl
xor
aad
push
dec
push
in
mov
cli
stos
inc
cmp
mov
sbb
lods
ss
loope
dec
jnp
xchg
pop
push
lcall
test
and
mov
and
sub
pop
cmp
pop
cmpsb
data16
jl
push
sar
iret
ja
inc
add
jmp
push
nop
push
cmc
dec
cmp
sub
and
mov
sti
sbb
aas
rcr
add
sqrtps
xchg
xor
cmc
andb
pusha
jo
sub
testl
fimuls
inc
and
and
movsb
jae
mov
xor
enter
push
aad
xchg
sub
cmp
clc
js
or
fwait
mov
push
out
pop
test
or
mov
mov
fldenv
jo
jmp
ror
pop
xchg
fldenv
adc
or
cwtl
loop
repnz
inc
call
inc
repz
movsb
out
fs
sub
or
mull
cltd
xchg
outsb
or
dec
jge
fcompl
out
cmp
es
cwtl
outsl
lret
mov
cmp
push
xchg
push
pusha
mov
outsb
push
jb
dec
mov
and
bound
push
mov
dec
shrb
sbb
sub
and
xchg
adc
aas
lahf
jle
jns
fwait
sub
pusha
and
mov
pop
dec
jno
lcall
push
xchg
mov
das
pop
pop
jbe
fadds
xchg
cmp
pushf
std
mov
andb
je
xchg
cmpsb
inc
sub
add
pop
mov
mov
adc
mov
adc
outsb
data16
adc
mov
shlb
jge
mov
xchg
imul
lods
iret
ret
jnp
test
jle
jle
das
cmpsb
and
or
dec
sub
sub
pop
cmpsb
mov
lods
mov
xor
or
loop
jecxz,pn
push
stos
leave
xlat
repz
push
push
addr16
aaa
push
inc
lea
stos
sub
jbe
mov
sub
sbb
add
call
ret
lds
and
add
test
mov
add
rcrb
push
lret
mov
ret
jl
loop
mov
dec
cmp
mull
in
in
dec
jnp
push
dec
test
addr16
jmp
mov
and
sub
scas
fsubs
movsl
adc
sub
xchg
push
rorb
pop
mov
or
in
cwtl
push
test
call
inc
mov
xor
test
popl
call
rclb
in
cli
jnp
shrl
add
enter
adc
xchg
push
testl
or
scas
js
lea
adc
xchg
enter
mov
lcall
add
inc
icebp
addb
movl
loope
imul
and
fistpll
pushf
aam
sub
mov
cmp
outsb
cld
pusha
dec
invlpg
int3
xchg
divl
test
in
jge
jg
repnz
repz
push
or
rcll
hlt
int3
fs
inc
lds
mov
fs
pop
and
rorb
icebp
call
sbb
iret
push
jmp
mov
sub
push
mov
cli
mov
fdivrs
dec
aad
int
sub
inc
pop
test
or
jae
push
sbb
repz
dec
call
out
xor
out
stos
jne
les
cmc
pop
sbb
inc
cmp
inc
mov
push
jno
sub
add
push
add
les
iret
leave
loop
adc
sarb
ja
mov
push
lock
out
sti
lock
aaa
sahf
add
sub
pop
stos
xchg
mov
mov
xchg
scas
jmp
movsl
ljmp
subl
ljmp
sub
stos
ljmp
ret
xchg
push
xor
loopne
sub
fcompl
mov
xlat
mov
lcall
xchg
push
mov
into
mov
out
arpl
pop
adc
and
jecxz
pop
out
push
dec
jo
mov
imull
lret
je
ret
push
cmp
and
and
fwait
sbbl
shl
les
jmp
or
pop
nop
iret
and
jne
mov
in
mov
cwtl
enter
add
or
outsb
mov
inc
inc
cmp
lock
in
mov
aaa
and
xor
imul
ss
add
shlb
push
lods
sarl
push
cmp
pushf
add
dec
dec
push
movsl
pop
adc
dec
fimuls
scas
add
xor
xor
gs
inc
test
cmp
test
gs
inc
sbb
mov
repz
and
cli
hlt
or
inc
pop
or
add
or
jae
jnp
dec
ss
repnz
jns
jne
jmp
clc
pop
adcb
bound
dec
popf
cmpsb
rcll
push
xchg
in
popf
add
mov
into
cwtl
mov
pop
dec
mov
call
popf
das
shl
and
adc
adc
ja
fs
sub
sub
lahf
push
pop
dec
and
push
xchg
xor
out
pop
mov
outsl
mov
enter
push
xchg
outsl
xor
mov
adc
mov
out
pusha
inc
or
jo
jl
jp
inc
jle
bound
cmc
cmpsb
lret
inc
add
das
push
es
je
enter
and
add
in
adc
jno
add
mov
loop
xor
in
push
or
addr16
add
scas
popw
out
cmp
mov
sbb
mov
sub
mov
dec
and
mov
push
pop
push
xor
es
add
fldenv
and
jne
add
sti
cmpsb
dec
mov
add
or
mov
stos
mov
xor
add
inc
jg
inc
sub
sbbb
out
mov
or
push
arpl
aam
lcall
andb
push
inc
xchg
ret
lcall
sahf
or
mov
inc
vmovupd
andb
add
add
pop
mov
jecxz
inc
scas
inc
pop
out
out
aaa
push
orl
inc
stos
cwtl
xor
test
lret
fistpl
in
lea
fadd
dec
addb
imulb
push
in
in
fidivs
inc
and
divb
mov
cmp
subps
test
mov
mov
por
push
xchg
cmpsb
mov
cmp
jns
fidivrl
xor
xor
aad
inc
lret
sbb
fwait
jno
idivb
test
pop
mov
in
cli
mov
inc
mov
pop
mov
push
mov
dec
fcmovnb
enter
sbb
js
mov
aam
push
sti
cmc
aas
data16
or
out
daa
adc
push
mov
add
jb
icebp
ret
mov
loop
test
and
push
std
adc
xorl
outsl
push
mov
pop
into
icebp
cltd
pop
cld
test
aas
mov
sbb
sbb
js
jecxz
xchg
jns
addr16
add
test
rcrb
mov
xchg
mov
pop
pop
xor
in
xchg
pop
xor
cmp
dec
cs
lahf
jns
int3
push
push
iret
and
or
outsl
and
mov
pop
ret
test
jno
adc
push
pop
mov
xchg
push
pop
jg
pop
lret
inc
xor
sub
pop
lret
jp
or
cld
dec
sarb
fucom
dec
mov
ret
sahf
std
fsubrl
jb
and
insb
int
and
lret
repnz
jne
inc
aaa
in
mov
dec
jno
ficoms
jecxz
xor
fdivp
and
into
out
ljmp
cltd
call
mov
dec
mov
loopne
ljmp
xchg
mov
cmp
mov
std
add
pop
mov
ja
or
mov
in
mov
test
cmpl
jnp
or
movsl
cmp
div
fs
and
int3
clc
cld
movsb
mov
fmull
mov
xchg
ret
jecxz
aaa
es
mov
lock
push
mov
dec
jecxz
sti
push
mov
mov
sub
cltd
shlb
jb
cmp
roll
pop
xchg
leave
fnsave
fidivl
push
sbb
xchg
idiv
xchg
jg
cltd
or
dec
mov
or
inc
and
xchg
mov
push
ret
lret
jno
pop
cmp
push
cmp
pop
rcrb
jb
je
shll
xor
or
in
lret
sub
sbb
inc
jno
rorb
repz
add
sbb
sbb
divb
mov
inc
push
mov
iret
inc
mov
ficoms
sbb
jnp
xchg
loop
orl
lds
cltd
jl
mov
lods
or
lods
lds
div
sarb
popf
subb
repz
mov
mov
jmp
xchg
ljmp
int3
mov
jp
jmp
es
xchg
or
jbe
ja
insl
aas
pop
push
mov
stos
push
mov
jbe
cli
jge
lahf
stc
decl
push
mov
jb
nop
push
mov
xchg
adc
push
xchg
xchg
xlat
xor
xchg
push
mov
jb
nop
fsubs
pushf
push
xor
ret
lahf
jno
in
jne
ret
xchg
jo
mov
xlat
pop
fs
jp
mov
pop
inc
inc
cmpsl
aam
into
mov
or
dec
pop
jle
std
ljmp
divl
imul
push
loop
jae
enter
cs
cmp
xor
mov
loopne
movsb
jne
je
ljmp
decl
daa
sbb
xchg
jnp
push
dec
data16
insl
xor
jno
loope
pop
jo
inc
adc
cmpsl
fstl
outsl
adc
icebp
xchg
pusha
add
push
sbb
push
iret
pop
mov
xor
jg
mov
xchg
inc
stos
mov
jge
loop
or
cmpsl
cli
je
sub
dec
mov
cmpsl
leave
mov
pop
loope
fsts
inc
into
in
inc
and
pop
add
ret
xor
aaa
cmpsb
push
jmp
pcmpgtd
jl
es
and
and
cmp
jecxz
fsubs
push
xor
pop
xchg
push
or
rorb
cmp
mov
push
jmp
int3
fs
mov
mov
dec
jno,pn
jbe
shlw
mov
shl
mov
push
js
js
xchg
mov
inc
mov
adc
jecxz
pop
sbb
aam
cld
decl
insb
fwait
test
scas
jle
jnp
mov
nop
orb
inc
mov
loop
aam
test
cmp
inc
jne
xlat
sub
xor
mov
jo
mov
add
addb
mov
fisubrs
push
mov
xor
ljmp
mov
cltd
xchg
ja
ljmp
je
fs
push
test
mov
xor
lock
add
adc
ficoms
jle
out
pusha
sbb
jne
push
jns
test
jg
sbb
cmp
mov
xchg
scas
cmp
xchg
roll
dec
xor
or
cmpsl
adc
imul
aas
and
sarb
mov
or
aas
pop
loope
ja
mov
ljmp
or
in
pop
in
lock
shrb
xlat
dec
xorb
fcomip
xchg
lahf
pcmpgtw
dec
inc
movsl
push
mov
adc
jbe
inc
add
mov
cmp
sub
sarb
repz
cmc
ja
je
add
inc
mov
daa
scas
outsb
iret
sub
scas
inc
xlat
negb
out
sbb
inc
stc
dec
push
clc
out
cltd
adc
adc
imul
jp
cli
loop
lock
jbe
xchg
add
int3
das
iret
xchg
pop
inc
int3
roll
push
pop
jg
mov
push
in
aas
add
mov
out
sub
imul
xchg
dec
adc
pop
mov
mov
xchg
test
out
dec
xor
rol
je
jb
stos
shr
cmp
sbb
outsl
gs
mov
xchg
dec
das
push
or
mov
rorl
stc
aad
adc
das
xchg
and
inc
pop
inc
cmp
ret
sub
mov
cmpsb
lcall
sbb
fwait
push
test
add
std
push
xchg
mov
in
sbb
jns
add
cwtl
pop
sbb
js
or
arpl
pop
jecxz
lods
cmp
out
dec
outsb
fbld
lock
add
sbbb
inc
mov
test
test
cmp
mov
or
dec
pop
sbbb
mov
aam
mov
mov
faddl
lret
adc
inc
outsl
in
into
jbe
es
fdivrs
jne
jns
mov
adc
adc
push
stos
lds
jnp
jecxz
mov
sub
push
mov
popa
sub
pop
push
leave
stos
cmc
lods
sbb
nop
fs
fstps
arpl
add
or
inc
adc
cmc
jo
sub
out
inc
add
test
cmp
rol
les
loopne
adc
jmp
pop
push
pusha
mov
out
adc
scas
xor
daa
jmp
mov
aas
je
xor
out
pushl
add
fucomi
int3
adc
jns
das
pop
sbb
pop
xchg
dec
xchg
ss
js
cmp
les
cmpsb
xchg
xchg
mov
sbb
mov
pop
or
mov
push
pop
mov
fiadds
sub
leave
push
adc
mov
inc
push
push
mov
imul
lcall
out
pop
out
insb
or
jg
mov
aam
or
ss
fnclex
adc
xchg
mov
or
stc
popf
add
fimull
out
cmp
imul
or
pop
inc
imul
out
push
cmp
xor
daa
daa
sub
ljmp
adc
or
cwtl
xchg
xlat
mov
lods
out
push
out
dec
ret
mov
inc
sahf
add
adc
mov
cmp
cmc
out
or
xchg
xchg
ljmp
cli
popa
aam
mov
jp
test
mov
cli
mov
fsubrl
out
pop
add
xchg
jmp
mov
mov
jo
sub
in
std
cmp
or
mov
mov
push
aas
addb
mov
loope
push
ds
in
outsl
in
xor
mov
mov
outsb
jbe
stc
stos
mov
out
xor
and
jb
xor
daa
pop
jg
and
cmp
insb
mov
adc
and
xlat
aam
push
pop
out
mov
or
jbe
pop
shrb
mov
xor
push
push
test
pop
mov
cmp
fs
mov
dec
push
cmc
outsb
lods
xor
add
sbb
push
shlb
pushf
daa
out
cmp
insb
pop
mov
push
inc
daa
in
icebp
adc
mov
adc
in
ficoms
test
cmp
rcrl
adc
adc
xchg
sub
repz
shlb
inc
xor
pop
mov
dec
xlat
adc
imul
aam
sbb
rclb
jbe
cltd
add
mov
mov
daa
and
pushl
push
xchg
rcll
out
rcrb
cmpsl
xor
out
fidivl
jp
lods
inc
add
repz
mov
insl
mov
lods
movsl
and
repz
push
pop
xor
sbb
push
in
mov
pop
dec
lds
cmp
push
lahf
popl
mov
xor
outsb
cmpsb
jl
ltr
dec
shlb
push
or
dec
test
testb
dec
cmp
inc
pop
shll
mov
mov
jns
jle
pop
fs
push
pusha
mov
or
cmc
cmc
push
bound
loop
mov
mov
sub
addb
xor
add
push
push
leave
orl
add
push
hlt
enter
add
cmpsl
stos
in
outsl
fstpt
lods
mov
out
mov
xor
xlat
xchg
add
fucomi
or
pop
push
add
je
push
push
mov
fwait
loope
fisttpl
scas
cmp
mov
jne
mov
cmpsl
out
push
addr16
lahf
adc
ficoms
jmp
loop
xchg
mov
testl
mov
rcrb
insl
shlb
in
cmpsl
xchg
pop
xchg
push
cmp
push
pusha
adc
jbe
xchg
add
dec
xor
in
xchg
jae
sbb
test
mov
xchg
cwtl
add
adc
nop
mov
mov
sub
pushf
sbb
xchg
pop
and
jge
add
sahf
stos
leave
daa
lret
fidivl
movsl
rorb
lret
or
ljmp
outsb
or
andl
int
mov
jne
loope
pop
push
mov
pop
aas
fisubrs
xchg
jl
cwtl
inc
lock
push
add
mov
addl
movsl
pop
out
lea
mov
lret
mov
inc
in
dec
sub
js
fildll
ficoms
call
xor
movsl
sbb
push
adc
pop
pop
sbb
mov
sbb
jge
aam
xor
js
xchg
dec
adc
mov
and
stos
xorb
aam
pop
or
sbb
repnz
add
pop
cmp
gs
push
jae
mov
xor
dec
sbbb
lea
inc
mov
push
imul
sub
sbb
mov
pop
shll
cltd
sub
data16
mov
in
xchg
push
mov
xchg
pop
movsl
lahf
xchg
xlat
jmp
lret
add
out
jne
ja
fcoml
xchg
cmp
movsb
out
arpl
loopne
lcall
pop
mov
mov
insb
jecxz
int
push
scas
imul
jb
push
jne
xor
and
cli
cli
enter
repz
xchg
mov
arpl
sbb
rorl
in
add
push
inc
orb
enter
ret
mov
test
or
jns
jbe
stc
leave
out
test
movsl
xchg
icebp
popl
xlat
mov
sti
rorl
in
arpl
dec
shrl
mov
xor
jl
and
loopne
xchg
sub
mov
outsl
lods
mov
or
aad
cmp
movsl
cmp
sub
fildll
push
or
jb
and
push
mov
pop
xor
push
xchg
data16
sbb
ja
fstpt
cmp
sub
push
mov
or
push
repnz
fisubrl
pop
cmova
iret
adc
stc
rcrb
test
test
mov
bnd
loope
mov
and
push
push
sbb
jmp
add
push
jge
arpl
call
divl
sbb
icebp
mov
scas
pop
in
lods
sbb
sahf
jbe
and
push
adc
mov
add
rolb
out
or
nop
sbb
scas
jmp
ljmp
pusha
xor
out
or
adc
aam
mov
and
arpl
iret
repz
push
mov
push
push
mov
cmp
mov
lcall
es
pop
add
pusha
pop
clc
out
xchg
loope
pusha
dec
lcall
cmpsb
and
pop
pcmpgtd
int
and
jno
test
adc
pop
mov
jl
jno
xor
inc
fnclex
bswap
mov
dec
xchg
jo
mov
inc
mov
jge
dec
mov
cs
adc
mov
sub
inc
pop
add
fisubrl
out
stos
std
xchg
sbb
lods
ja
data16
cli
push
mov
jne
mov
scas
divb
xchg
je
push
adc
sub
mov
dec
jmp
dec
rol
ret
sbb
mov
in
add
cmp
fbstp
mov
xchg
mov
sti
bound
mov
jns
mov
xchg
lock
popa
mov
cmp
mov
lods
lock
or
test
pop
push
pop
lret
fisttpl
je
loop
jmp
and
mul
das
sub
dec
sbbl
pushf
cwtl
jbe
lahf
or
add
xchg
pusha
mov
and
mov
mov
push
nop
and
push
adc
stos
jo
int3
out
jo
test
sbb
lods
ja
mov
sbb
mov
push
fbld
cmp
stos
aad
popa
icebp
cmpsb
xor
push
rorb
cmp
inc
movsb
stos
enter
inc
mov
out
inc
jbe
lahf
jmp
and
sti
rep
mov
mov
push
mov
mov
fisubrl
pop
in
hlt
jmp
mov
xchg
outsl
cmp
fsubrl
iret
cld
mov
fstps
scas
decl
dec
lds
out
rcrb
cltd
out
sub
sub
scas
xchg
mov
pop
aam
aad
jno
xor
jbe
cwtl
rolb
test
fstpl
aam
mov
cmc
cmpb
andb
sbb
mov
orb
data16
mov
xorl
cli
lcall
add
sti
jno
aaa
test
mov
dec
movsb
or
insb
cmp
es
insb
pushl
jge
loop
insb
sbb
outsb
sub
movsl
jp
mov
gs
inc
mov
call
push
imul
or
add
push
in
inc
sbb
and
dec
arpl
cmp
cmp
pop
fistpl
add
add
sbb
sar
mov
dec
inc
inc
sub
add
les
aas
ljmp
adc
push
xchg
xor
dec
adc
inc
stos
cmp
mov
or
or
lds
or
sbbb
sbb
push
jne
pop
call
lret
push
mov
fimull
repnz
add
jb
add
xchg
insb
clc
movb
push
insb
in
filds
xchg
or
movsl
rcll
inc
ds
aas
nop
dec
aad
mov
push
mov
fcmovb
pop
fidivrs
xor
nop
mov
shll
movsl
sbb
aaa
mov
popa
subl
adc
sti
stos
fildl
imul
inc
nop
int3
jne
mov
movsb
add
arpl
std
popa
jne
jmp
adc
loop
cmp
inc
out
fidivl
pop
popf
dec
pop
pop
dec
cmp
ljmp
cmp
pusha
addr16
filds
xchg
xchg
pop
ss
pushf
pop
pusha
call
inc
cli
ret
mov
ljmp
dec
jo
in
fs
xor
inc
xchg
mov
fdivl
dec
loopne
and
movsl
mov
rclb
sub
mov
add
je
and
push
mov
inc
in
out
push
out
cmp
scas
outsb
arpl
jne
bound
pop
pop
dec
xorl
lods
faddp
and
xchg
add
mov
dec
out
jg
rcrb
test
ret
sbb
mov
mull
push
dec
jae
mov
into
sub
les
stos
cltd
jnp
stc
xorb
mov
cmpsl
test
pop
mov
jno
bnd
pop
push
mov
mov
out
in
inc
jl
aad
in
xchg
add
pushf
inc
cmp
cli
popa
jecxz
jno
mov
imul
jge
pop
mov
push
or
adc
sbbl
or
sbb
pop
into
popf
rcll
test
in
inc
jmp
pop
in
cmp
pop
cmp
push
add
jcxz
xchg
xchg
ja
mov
push
sbb
jo
sub
cmp
pop
test
sbb
inc
dec
call
mov
out
inc
ss
ds
mov
je
xchg
lea
xchg
repnz
das
mov
jle
dec
or
mov
popa
mov
fsubrl
inc
mov
sbb
arpl
imul
rorb
mov
pop
xchg
mov
xchg
add
adc
dec
or
or
imul
mov
scas
daa
lret
pusha
jmp
clc
jg
adc
fimull
jecxz
lcall
lods
and
aad
inc
sub
add
fimull
sahf
cmp
mov
push
jb
xor
fmul
push
jnp
mov
or
aaa
xchg
sub
rcr
sub
push
xor
cmp
les
rcr
xor
xchg
jl
pop
les
pop
aaa
imul
sbb
mov
mov
or
test
repz
sti
xchg
fisubrs
hlt
xchg
outsb
scas
mov
xor
aaa
cld
sbb
and
jp
adc
sub
imul
xchg
je
out
xor
and
icebp
int
dec
icebp
and
mov
fidivs
nop
hlt
mov
mov
push
xchg
rclb
in
rcl
xchg
fwait
xchg
cwtl
inc
out
dec
xor
xchg
xor
sub
and
or
inc
gs
int3
movsb
cmpsb
dec
adc
sbb
sbb
adc
out
dec
xchg
out
pop
shrl
push
in
repnz
movsb
out
xor
and
jmp
sub
outsb
push
scas
ds
push
popf
fldenv
add
jbe
stos
lcall
pop
xchg
outsb
lods
xor
mov
jb
lcall
mov
add
inc
dec
push
mov
out
cli
ja
adc
int3
mov
outsb
shl
jg
jbe
xchg
xor
out
and
dec
xchg
pop
xorl
shlb
sub
vshufps
into
out
mov
fidivrl
sub
aad
dec
outsl
lret
push
pop
pop
adc
jle
loopne
ljmp
fadd
mov
lcall
mov
inc
in
addl
and
gs
or
jae
cmp
jl
sub
aam
leave
in
xchg
mov
adc
xchg
push
in
repnz
push
pop
dec
or
fldl
das
aad
shl
sub
ss
mov
lret
bound
and
mov
xor
clc
addl
xchg
adcb
jmp
jnp
mov
mov
daa
les
repz
jbe
fistpll
mov
dec
inc
xchg
out
fsubl
push
or
mov
clc
mov
mov
popf
dec
push
das
outsl
inc
jnp
fdecstp
push
inc
mov
mov
mov
push
mov
mov
or
std
movsl
and
out
aam
lea
insb
test
shlw
in
mov
jmp
cmc
adc
pop
add
and
aas
int3
xchg
dec
mov
inc
pop
sub
lods
outsl
sbb
jno
inc
adc
add
pop
mov
push
mov
mov
frstor
cmc
mov
leave
mov
out
dec
sub
rcll
dec
stos
push
aas
and
lods
leave
mov
out
pop
sbb
xchg
xor
pop
mov
add
push
movsb
addb
stos
inc
test
fistps
pop
xor
adc
push
inc
xlat
push
sahf
mov
dec
fcomp
out
cmp
loopne
jns
cmc
or
xchg
dec
xor
insl
dec
rcrl
xchg
lcall
or
fimuls
pop
aam
sub
mov
iret
addr16
imulb
ss
ficompl
cltd
rclb
insl
cmp
sub
clc
movsl
pop
out
subl
shrb
push
pop
xlat
mov
mov
sbb
mov
popf
adc
dec
xchg
add
inc
out
push
xlat
cmp
cmp
pop
push
in
fidivl
jle
lods
shr
xchg
aaa
cmp
pop
sub
lret
fnstsw
xacquire
inc
fisttpll
add
daa
push
dec
out
flds
jno
pop
mov
lock
and
mov
icebp
push
movsb
dec
fists
mov
dec
movsl
loopne
fwait
add
mov
push
cmp
out
out
fisttps
mov
pushf
fldenv
push
jnp
sbb
adc
sti
int3
cmp
scas
jne
mov
faddl
adc
bnd
jp
mov
xor
mov
push
inc
mov
sbb
mulb
fisubrs
sbb
mov
dec
cmp
shll
sbb
mov
std
pop
data16
xor
aas
scas
xor
outsb
push
inc
insl
leave
mov
jo
mov
pop
xor
sbb
mov
jecxz
jmp
repnz
sbb
test
in
ret
in
aad
sub
inc
fs
fnstenv
jge
dec
scas
iret
in
cld
jge
dec
jl
sub
in
or
movsb
mov
ficompl
pop
fisubs
xor
mov
jmp
lea
repz
sahf
fistpll
push
mov
jbe
fs
ret
je
cmp
cmp
addr16
pop
outsl
cltd
cmp
cmp
push
addr16
mov
out
iret
sub
pop
mov
sarb
cmp
int3
mov
je
or
cmp
pop
je
iret
xor
rorb
orl
jns
test
xor
pop
adc
orb
shlb
adc
insb
jae
in
ret
push
xor
fucomi
cmpsl
cmpsl
lock
xor
jl
sbb
pop
jg
push
add
in
mov
dec
negl
sub
repnz
sbb
fnsave
outsl
sti
imul
sub
add
mov
out
cwtl
xor
sahf
mov
js
mov
loop
icebp
mov
into
outsl
movsb
dec
xchg
or
jbe
mov
inc
mov
rdmsr
leave
mov
sub
insl
pop
xchg
lret
insb
pop
cli
adc
enter
hlt
mov
lcall
leave
mov
and
je
cltd
sub
shrl
mov
add
stc
inc
and
mov
adc
mov
loop
inc
daa
xor
decb
push
mov
adc
push
rol
inc
stos
fisubrs
mov
xchg
fwait
add
and
out
test
sahf
pushf
xor
jnp
inc
xor
test
pop
imul
xchg
mov
cli
mov
je
popa
dec
jg
xorb
mov
dec
out
sub
inc
popa
negl
pusha
pop
inc
pmaddwd
subl
jl
mov
sub
adc
lods
ljmp
ss
and
and
enter
mov
xchg
shr
sub
push
hlt
mov
lea
xchg
int3
aas
shll
mov
loope
test
aas
pop
and
mov
loop
clc
adcb
push
and
lods
mov
add
lods
lods
xchg
fs
push
add
lock
sub
popf
dec
into
stos
pusha
ror
iret
jle
inc
ss
xor
gs
and
push
lret
xchg
mov
out
push
push
mov
repnz
pop
mov
push
sub
push
ror
jo
push
std
fbld
lahf
popf
jle
fimull
addb
mov
mov
xchg
xchg
inc
cli
mov
jmp
dec
mov
mov
adc
cltd
jmp
or
js
je
outsb
dec
mov
into
push
scas
fsubl
insl
aad
shrl
mov
mov
lcall
cwtl
mov
imul
sub
jnp
testb
adc
fs
cld
mov
push
ss
iret
or
pop
cwtl
addr16
xlat
test
sbb
loope
movsb
adc
pushf
stos
mov
fimuls
xlat
lret
and
popa
xor
gs
pushf
jns
cmpsb
push
mov
sar
rolb
jle
shrb
add
sbb
aam
pushf
xchg
push
mov
lret
pop
lods
mov
lret
cmp
mov
fidivl
sbb
lret
inc
out
xchg
inc
inc
ds
lahf
test
lea
xchg
inc
dec
std
fisubrl
xchg
xchg
xchg
adc
fs
shrb
inc
mov
push
sahf
and
repnz
mov
jle
arpl
cmpsl
ljmp
cmp
fsubr
sub
pop
mov
dec
rorl
and
imul
xchg
add
cmp
inc
sti
imul
sahf
rcrl
popf
cld
xchg
fs
aas
fstpt
popa
ja
xor
add
xchg
push
mov
divl
adc
cmp
jle
stos
mov
inc
inc
cs
out
xchg
pop
mov
dec
fsubl
out
jmp
mov
mov
adc
cmpsl
lret
pop
add
sub
jg
mov
mov
imul
js
push
negb
fldt
fs
sbb
adc
xchg
add
lods
hlt
and
inc
sub
call
js
out
mov
sbb
lods
adc
mov
adc
mov
pushf
jne
out
mov
pop
aaa
sub
add
fldz
subb
cmpsb
fstl
fmuls
lea
push
mov
outsb
cwtd
in
dec
aad
xchg
sahf
psubsb
pushl
xchg
xor
pop
repnz
cmp
mulb
sbb
or
xchg
or
mov
xchg
jb
cmp
xchg
add
or
jle
arpl
mov
aam
jmp
mov
xchg
add
push
inc
cmp
mov
mov
mov
test
mov
sahf
cmp
popa
dec
jg
xor
int
fwait
inc
mov
test
into
inc
out
adc
push
push
aam
pop
clc
fimuls
in
mov
jne
jg
jl
test
dec
mov
mov
inc
loopne
mov
cs
jmp
jnp
cmp
int
or
lahf
push
sahf
loop
pop
pop
sbb
jns
outsb
ret
sahf
aas
shr
dec
fbld
cmp
pop
std
mov
dec
and
cli
cmpsb
mov
push
dec
push
test
or
xchg
jl
xchg
addr16
xor
repnz
test
xor
sbb
imul
pop
imul
mov
jb
or
nop
inc
testl
js
inc
or
repnz
ret
sub
mov
jmp
jb
daa
movsl
loope
mov
dec
lds
pop
inc
xchg
mov
out
jo
iret
fcoms
sub
mov
mov
out
stos
lock
pop
push
stos
inc
or
ret
jecxz
jns
pop
dec
and
pop
pop
int3
in
xchg
lds
push
jg
push
sbb
jb
mov
push
xchg
imul
lods
arpl
lock
sbbb
xchg
jp
js,pt
icebp
and
sub
and
xor
pop
mov
loope
outsl
fs
push
inc
sti
pop
add
cmpb
lret
lea
inc
xor
adc
lahf
adc
xor
push
push
or
psadbw
js
sbb
je
sbb
xlat
mov
cwtl
nop
push
pop
push
pop
inc
push
inc
jbe
mov
jl
push
jne
dec
cs
jbe
and
inc
repnz
mov
xchg
int3
mov
test
cli
cltd
in
aad
mov
mov
aam
sub
sub
jb
repnz
sub
lea
mov
sub
pushf
sub
push
push
dec
fildll
push
dec
cmpsb
enter
add
out
ror
adc
or
add
mov
jl
mov
xor
movsb
sub
xchg
mov
lcall
std
jp
lds
jns
xchg
pop
inc
cmpsl
cwtl
cmp
mov
jge
jp
fdivrl
pop
sbb
stc
cmp
mov
movsb
mov
out
xor
movsl
es
mov
sbb
fdivrs
xchg
dec
std
out
add
insl
adc
je
push
jmp
cli
sbb
sbb
jo
adc
lods
mov
push
pop
xchg
cld
push
inc
adc
fcmovnb
mov
loopne
add
mov
push
in
in
sub
lock
cli
dec
dec
out
mov
lds
mov
jmp
popa
add
lods
ds
dec
ljmp
dec
mov
loop
sti
cs
outsb
popf
imul
mov
xor
mov
cld
xchg
mov
push
cmp
add
jle
jg
mov
xor
andl
xor
mov
sub
xchg
push
lea
inc
je
pop
dec
jl
and
jo
or
xor
addb
xor
enter
mov
adc
push
and
gs
daa
fdivs
add
fistl
shlb
push
mov
dec
ljmp
push
aam
loope
sbb
push
es
jg
xor
enter
push
xchg
ja
lcall
cmpsb
loope
sub
scas
mov
imul
aam
sbb
and
mov
mov
lds
xchg
add
lret
sbb
out
test
fisubrl
dec
fcmovnu
mov
xchg
cmp
or
sub
mov
rcll
mov
rorl
dec
adc
mov
jl
add
cmpsb
je
iret
in
cmp
dec
jle
pop
cmp
sbb
inc
repnz
clc
fldcw
add
dec
sbb
or
inc
movsb
mov
jl
in
mov
sbb
sub
fsubrs
inc
out
xlat
jnp
xchg
dec
test
push
sahf
sahf
ljmp
mov
es
and
or
and
jbe
fdivl
jnp
xor
mov
sbb
mov
xor
popa
mov
add
mov
xchg
outsl
mov
push
push
xchg
cltd
sbbb
enter
add
in
jge
push
add
aas
cmp
pop
mov
adc
mov
or
or
mov
xchg
jg
mov
les
andl
push
cmp
mov
int
in
scas
mov
push
iret
mov
lret
mov
dec
lods
ficompl
sub
pop
cmpsb
cmpl
shrl
sub
dec
jo
mov
add
mov
es
xor
add
daa
mov
pop
xor
xor
aam
movsb
loop
xor
leave
in
into
popf
cmovns
add
mov
mov
stos
ror
es
jo
mov
or
test
push
inc
add
xchg
movsl
popf
pop
call
ret
mov
cmp
arpl
scas
adc
sub
add
pop
repz
dec
out
or
xor
rcll
pop
push
sub
std
ficoml
lcall
mov
or
stos
je
loopne
daa
inc
pop
scas
test
daa
or
gs
pop
notb
fmull
lods
pop
lods
mov
js
mov
cld
pop
dec
cmp
call
cmp
pop
roll
pop
and
imul
lods
pop
aad
inc
xor
loope
jno
addl
cmp
or
jbe
xchg
dec
sbb
xchg
cmp
inc
pop
and
xchg
cmp
subl
mov
xchg
pop
mov
cld
pop
and
das
pop
ljmp
filds
sti
lods
xchg
cmp
xchg
and
movsl
dec
jb
pop
arpl
arpl
das
sbb
fs
iret
bound
mov
mov
and
in
mov
push
mov
addl
jo
mov
lret
sbb
or
std
pop
push
in
decl
mov
flds
sbb
scas
stos
jbe
cmp
add
mov
jo
push
mov
mov
pop
push
outsl
or
repnz
adc
xchg
adc
sahf
or
mov
pop
jo
xlat
xchg
xchg
lock
test
cmp
shrl
xor
xor
jb
adc
popl
cwtl
test
cmp
mov
and
mov
out
sub
push
mov
out
pop
push
xchg
jae
hlt
test
dec
mov
lret
cmp
lds
lcall
jae
cmp
add
push
jno
movsb
cmp
push
mov
jg
add
inc
dec
jp
push
jl
lods
dec
pop
jmp
rclw
in
cwtl
dec
je
cmpsl
push
mov
out
inc
jbe
xor
or
lock
in
aas
cmp
imull
cmpsb
ror
popa
mov
gs
out
iret
mov
mov
arpl
inc
popf
fcmovnb
add
mov
loop
xlat
arpl
and
push
sub
pop
out
mov
insb
cmp
ja
ficoml
mov
xchg
in
data16
xchg
xchg
xchg
mov
xor
xchg
add
and
xchg
aaa
popf
jg
pop
and
js
fadds
pop
push
cltd
sahf
xor
push
xchg
in
les
call
fsub
jno
aam
addl
pop
ja
mov
leave
loope
outsb
push
cli
inc
mov
mov
xlat
ljmp
jbe
adc
pusha
dec
inc
bswap
push
adc
ljmp
add
pop
lea
sub
lahf
sarb
adc
aaa
ja
and
std
fcmovbe
mov
mov
test
shll
push
imul
add
mov
sti
aaa
inc
dec
lods
pop
nop/reserved
ret
inc
or
mov
dec
in
jecxz
pop
aam
push
iret
jl
sub
dec
dec
fldcw
jo
fwait
sub
push
pop
cmpsl
sub
je
lret
sbb
repnz
out
bound
repnz
sbb
lret
jle
loope
sbb
xor
xchg
mov
mov
or
push
jle
jbe
stos
pop
jnp
loope
in
lcall
test
aas
adc
add
into
bound
imul
pop
mov
outsl
ds
inc
stc
add
or
enter
mov
mov
jae
push
mov
lret
insb
icebp
sti
in
or
xchg
inc
rorb
push
leave
test
or
outsb
xchg
repz
das
mov
pop
loop
sub
cmp
hlt
push
imul
push
push
js
jge
ljmp
dec
xchg
jmp
mov
inc
jecxz
das
and
mov
cmp
lcall
sbbb
cmpsb
bound
orl
push
lcall
aaa
sub
outsl
pop
mov
or
mov
in
push
stos
scas
or
int
stos
mov
add
mov
sub
lock
add
cmpsb
inc
inc
roll
push
adc
inc
xlat
mov
repnz
fidivl
mov
xchg
call
icebp
or
dec
push
cld
cmp
inc
sbb
mov
jmp
pop
aam
lret
xor
xor
pop
shr
sub
push
mov
jb
mov
adc
push
sub
inc
jb
sbb
pop
lds
push
or
dec
and
jno
mul
and
ret
or
jmp
shll
mov
lret
hlt
cmc
sti
mov
add
xchg
popf
jnp
mov
jg
cs
sbb
pop
ss
and
fistps
popa
jno
inc
mov
rorb
dec
leave
mov
cmp
xor
mull
sbb
jb
lock
ret
stos
lcall
ret
pop
xor
arpl
int3
pop
repz
fwait
xchg
mov
jmp
lcall
gs
xchg
shrl
les
dec
sbb
fldcw
push
rcrl
xchg
movsl
jnp
mov
push
clc
cmp
or
xchg
add
fsubl
mov
push
clc
mov
jo
sbb
pop
jnp
lahf
or
into
add
sahf
data16
insl
push
pushf
mov
popa
mov
repz
sbb
pop
repnz
aam
mov
adcb
or
inc
mov
mov
pop
in
mov
fdivrl
push
addr16
or
imul
jnp
ficoml
cmpsb
mov
adc
xor
push
clc
dec
bound
cmc
add
jp
out
cli
xchg
sbb
jb
pusha
xchg
and
adc
pop
cltd
mov
das
jo
in
push
cmp
mov
test
xchg
bound
shlb
das
add
xlat
fldcw
push
pop
mov
or
mov
out
ja
adc
dec
rolb
inc
jb
inc
xchg
cmp
std
push
xchg
sub
imull
ss
in
jge
in
sti
mov
pop
fwait
pcmpgtb
stos
pop
and
fimull
mov
insl
sbb
mov
push
sbb
mov
adc
add
sub
cs
jb
mov
testb
scas
insb
iret
sbb
mov
cmc
jno
pop
pop
shrl
sbb
das
jne
jb
lods
sub
fnclex
data16
insl
push
lea
mov
sbb
cs
or
jb
or
shl
add
push
xor
dec
dec
lea
xlat
pushf
mov
call
pop
add
and
or
aas
push
inc
fisubl
and
mov
paddb
outsl
push
imul
cli
out
sub
clc
ljmp
addb
cmp
xor
sbb
cmp
sbb
add
outsb
dec
sub
pusha
imul
mov
sti
jmp
add
inc
adc
stc
mov
mov
push
adc
neg
and
xor
mov
inc
sbb
pop
ror
add
jo
adc
popa
scas
xor
mov
xchg
outsb
and
xor
mov
adc
sti
pop
xor
daa
cmc
cld
mov
in
mov
xor
test
inc
shr
and
jno
popa
mov
inc
cmp
pop
out
mov
movsb
mov
mov
pop
and
out
push
loopne
ja
mov
mov
dec
ds
data16
test
xor
push
out
addr16
fadds
jbe
scas
pop
xor
and
dec
xchg
jns
xor
fstpt
and
pop
push
fcmovnb
mov
bswap
scas
xor
inc
or
and
mov
jb
pop
imul
cmpsb
loop
jl
xchg
pop
pushl
inc
clc
rolb
xor
out
dec
pop
cmp
mov
sub
call
or
stos
push
imul
and
push
in
jle
add
jb
add
mov
sahf
xchg
fisttpll
adc
jae
repz
pop
icebp
sbb
sub
int
call
and
jecxz
js
push
xor
push
imulb
mov
pop
adc
fwait
mov
iret
movsb
scas
ds
inc
pop
sbb
or
mov
mov
jmp
out
dec
xchg
jb
ja
mov
sub
push
fimull
xlat
cmpsb
stc
cmc
add
add
xchg
push
jno
pushf
cmpsl
in
popa
mov
nop
mov
cmp
adc
int3
fimull
sbb
add
mov
not
xor
je
lea
repnz
pop
cmp
cmp
mov
inc
jp
lods
push
jnp
imul
jb
stos
add
dec
jnp
femms
scas
orb
pop
cmp
cmp
jns
cmpsl
lret
insb
imul
xor
add
jecxz
jecxz
push
rorb
cmp
stos
sub
js
add
lds
cwtl
push
push
fidivrl
inc
xor
push
pop
iret
mov
lcall
dec
aaa
fmuls
fcoms
cmp
icebp
fcoms
mov
xchg
pusha
add
jge
and
jbe
hlt
xchg
fildll
xor
jg
clc
jg
dec
icebp
pop
inc
pushf
mov
dec
cmp
mov
outsb
stos
aas
notb
call
inc
ret
cmp
movsb
negb
sub
xchg
shll
ljmp
adc
arpl
add
test
cmp
lds
rcll
lahf
stos
repz
aas
lock
shrb
test
shll
je
pop
fcomps
lods
sbb
dec
cli
lods
lds
arpl
out
adc
adc
jmp
or
das
test
mov
dec
test
cmp
les
mov
or
ss
lds
in
cmp
pop
inc
cmp
jne
mov
in
inc
fstpl
ret
pop
int
adc
pop
cltd
imul
lds
outsl
jge
lods
into
aam
rolb
jg
insb
out
sub
fnstsw
rolb
andl
jg
add
xor
sub
sub
xchg
in
mov
pop
inc
cmp
pop
sahf
jo
mov
je
xlat
or
push
bt
xchg
sbb
roll
mov
jge
ljmp
adc
mov
insb
pop
repnz
subb
dec
mov
sbb
jp
pop
and
push
mov
jp
fsubrs
imul
jns
iret
push
ja
insb
jl
mov
movsb
sbb
adc
or
insl
and
clc
adc
fstl
mov
pop
das
xchg
mov
icebp
ja
mov
mov
sbb
cmc
in
mov
das
inc
aas
add
mov
das
pop
mov
pop
insb
out
notl
mov
pop
jg
or
mov
ret
inc
pop
xchg
call
stos
sbb
jl
and
inc
push
or
outsb
lahf
mov
popa
lcall
or
aam
iret
push
into
call
jo
lahf
xor
mov
sub
std
jmp
jns
xacquire
or
jmp
imul
push
in
pop
push
stos
les
cmc
lret
inc
pushf
arpl
dec
roll
xor
js
outsb
pop
add
or
push
std
out
pop
shlb
mov
inc
aam
jmp
xchg
jnp
jnp
sti
cmp
mov
in
enter
stos
mov
negb
mov
sti
in
mov
cmp
rcll
ss
sub
bound
jne
test
inc
addr16
and
lea
inc
ljmp
sub
outsl
xchg
lock
cmp
out
pop
inc
rclb
mov
ljmp
mov
out
xchg
mov
or
cwtl
mov
and
notl
mov
xchg
kandnb
mov
jns
or
ljmp
jge
mov
sbb
xorb
aam
and
xchg
das
ja
andl
fsub
pushf
lds
mov
push
lods
popf
xchg
out
pushf
sarb
xchg
scas
hlt
and
sbb
inc
dec
rorl
push
dec
pop
xor
sbb
leave
shr
and
jo
mov
stos
jo
mov
adc
pusha
test
lea
push
cmpsl
jg
in
sahf
loop
dec
ds
xchg
lret
test
push
fwait
fs
lods
scas
mov
pop
jo
xchg
roll
cld
cmpsb
ljmp
imul
outsb
fistpll
or
dec
fsubrp
inc
xchg
movsb
rorl
xchg
dec
push
int
shrl
mov
inc
test
pop
jns
loop
sbb
xor
cltd
adc
inc
imul
xchg
mov
pop
push
push
cmp
orl
sub
mov
stos
adc
pop
xchg
lcall
adc
mov
xor
sub
incb
addb
fsubrs
sbb
jne
in
call
inc
cltd
jecxz
orl
xlat
and
sahf
fadds
pusha
ret
mov
aad
push
sub
xor
mov
xor
aaa
jmp
and
shrb
mov
mov
cmp
je
adc
psrlq
sbb
jecxz
pop
mov
inc
pop
inc
fisubl
dec
sbb
popa
es
dec
stos
sub
sbb
add
mov
jl
jb
sbb
out
adc
mov
cmp
sbb
aam
push
mov
inc
push
out
sarb
adc
movsb
shll
mov
or
pop
fidivrs
add
and
sub
aas
test
dec
stc
xchg
pop
inc
outsb
inc
int
iret
add
cmp
pop
sarl
das
dec
xorb
dec
or
sbb
lret
nop
ss
fldcw
cli
orl
cmp
add
inc
arpl
pop
adc
iret
sarl
mov
and
out
add
sub
mov
pop
jbe
int
push
test
and
rcl
ret
leave
and
divb
xchg
mov
fistps
push
or
ret
cli
push
pushl
pop
pop
inc
ret
push
lahf
rcll
inc
cmp
or
pushl
out
adc
loope
mov
or
lret
mov
xlat
pop
dec
out
out
imul
adc
ds
mov
jae
push
idivl
cmpsl
xlat
lcall
jle
add
fcmovb
mov
arpl
cwtl
movsb
loope
jb
ret
or
and
aam
pop
and
mov
push
mov
pop
adc
push
incl
xchg
xor
sbb
mov
fstl
sbb
push
mov
repnz
push
ret
lods
pop
nop
in
into
ret
arpl
es
stos
pop
mov
and
cltd
aaa
ret
scas
jp
in
cmp
push
lcall
sahf
sbb
orl
pop
mov
rolb
and
cmc
sub
dec
ss
xchg
pop
push
stos
in
out
ficoml
xchg
mov
adc
into
and
sbb
mov
xchg
mov
pusha
adc
xor
inc
mov
sub
jne
xor
jge
jne
xor
mov
arpl
mov
in
inc
push
ret
imul
pop
or
sub
xchg
adc
test
int
aaa
cmp
subl
sub
cli
pop
jge
movsb
cmpsb
aad
and
add
aas
outsb
out
sub
bound
jge
jb
clc
int3
mov
pop
push
mov
popf
dec
nop
jns
jle
xchg
enter
pop
iret
mov
arpl
movsl
aas
leave
adc
sbb
mov
jb
and
jmp
adc
in
sbb
mov
lods
jne
mov
scas
std
mov
sbb
or
adc
adc
or
mov
mov
mov
nop
ja
cmp
loopne
add
icebp
outsb
test
pop
nop
test
xchg
je
scas
mov
es
dec
fucomip
dec
roll
cmp
pop
sbb
leave
lock
pop
movsl
jmp
in
lret
xor
clc
xchg
and
iret
enter
or
pop
insb
mov
jmp
and
icebp
mov
cmpb
adc
insb
xor
cli
outsl
jbe
dec
sbb
mov
lret
pop
pop
jbe
divb
pop
jmp
mov
ds
js
fbld
loop
daa
popf
push
mov
cmp
and
loope
std
movsb
in
sub
cltd
repnz
jne
xchg
push
pop
xchg
mov
inc
and
out
movsl
arpl
mov
pop
sbb
leave
les
data16
xchg
insb
cmp
clc
push
add
movsb
sub
jnp
adc
and
pop
and
mov
stos
or
cmp
mov
mov
push
cmp
cs
pop
das
out
mov
sbb
data16
fisubrs
in
lahf
adc
lods
out
sub
stc
add
mov
jnp
adc
movsl
xchg
nop
scas
inc
xor
cmp
push
repz
push
inc
cmpsb
push
mov
xor
sub
cld
das
ja,pt
or
ja
inc
mov
and
xchg
nop
mov
jns
cmp
incl
shrb
inc
sbb
push
mov
or
cmp
jl
pop
push
mov
push
xchg
adcb
mov
cmp
jae
and
or
pxor
mov
mov
add
cmpsb
enter
hlt
jmp
mov
fldenv
rcrb
pop
jno
xor
mov
stos
test
sti
push
mov
or
mov
in
arpl
nop
xchg
inc
in
add
ret
or
out
aam
xor
cwtl
shl
call
arpl
in
sub
popf
xchg
and
mov
ds
adc
fsubrl
shll
fldt
or
push
add
add
imul
cs
adc
loop
cwtl
mov
pop
in
rcl
dec
dec
es
push
push
jg
pushf
sahf
or
xor
jmp
or
call
push
jmp
sahf
cmc
or
xor
dec
cmpsl
scas
xchg
pop
mov
cmpsb
pop
dec
cli
sub
nop
mov
mov
xchg
jge,pt
cltd
push
stos
mov
out
out
pop
xchg
mov
ret
pusha
sub
dec
lcall
add
mov
pop
pop
mov
push
testl
shll
push
sbb
insl
icebp
rcrb
cmpsb
push
test
aam
fistps
lea
or
add
push
insl
mov
and
jmp
in
inc
adc
inc
push
enter
or
test
cli
or
lahf
sbb
fnsave
test
adc
mov
inc
xchg
mov
mov
inc
dec
dec
adc
pop
sbb
push
xchg
mov
popa
ret
inc
pop
loop
rol
jge
testl
dec
mov
or
mov
cmpsb
push
push
cmpsb
or
xchg
adc
or
jb
in
mov
jmp
scas
daa
loope
test
xchg
hlt
sub
fisubs
fstpt
push
mov
movl
ljmp
outsb
in
inc
cmpsl
pop
les
push
mov
cmp
and
mov
xorb
sub
sub
and
push
pusha
jnp
subb
dec
test
lods
dec
push
andl
lods
adc
scas
sbb
loope
xchg
push
fwait
mov
shlb
mov
lea
inc
jns
testb
and
sbb
cs
jb
ret
addl
call
or
add
xor
adc
xchg
and
sarb
mov
daa
dec
mov
mov
int3
or
loop
push
adc
sub
cmp
push
add
outsb
fs
push
mov
xchg
sub
or
in
xchg
dec
xchg
pusha
jo
sbb
cmp
mull
scas
lahf
push
in
pop
inc
pop
jecxz
dec
adc
dec
dec
push
and
cld
aaa
mov
imul
adc
dec
dec
mov
fistps
or
pop
push
sbb
addl
inc
inc
adc
jecxz
lret
xlat
jnp
jmp
mov
or
mov
shlb
ja
insl
out
stos
xchg
andb
lods
sub
push
and
mov
div
fwait
test
xlat
test
cmp
je
pop
xor
sbb
leave
inc
add
cmpsl
shlb
jbe
insb
int3
outsb
test
or
jmp
cmp
inc
les
sbb
adc
push
push
lds
int
jge
insl
mov
xchg
sahf
lock
add
xchg
inc
std
sub
push
cmc
aam
jbe
jb
mov
cmp
clc
fmul
xchg
fmull
ja
movntq
out
pop
lcall
add
outsb
mov
lcall
cbtw
mov
add
loope
sub
aad
or
data16
inc
sub
scas
test
loope
xor
incb
jnp
sbb
pop
sbb
sub
lcall
sahf
mov
adc
std
adc
pop
inc
xor
xchg
out
hlt
pop
sarl
jmp
push
xor
mov
mov
movsl
dec
mov
pop
stc
mov
jb
repnz
dec
sarb
xchg
mov
dec
aam
jge
add
push
push
or
out
xlat
lcall
mov
cmc
imul
jmp
adc
xchg
mov
lock
jne
pusha
adc
scas
loop
push
cli
mov
mov
ficomps
xchg
sbb
movsb
jns
arpl
lahf
stc
and
inc
xchg
dec
cmpsb
test
jmp
mov
leave
subb
das
das
decl
cli
rol
xor
mov
mov
fimull
add
lea
mov
mov
out
popf
decl
hlt
daa
sub
in
and
ja
pop
add
sub
xchg
out
imulb
hlt
mov
in
sbb
jnp
mov
movsb
mov
aas
push
xchg
aaa
arpl
inc
inc
in
inc
shrl
add
cli
movsl
or
dec
repz
fs
add
fcoms
xor
push
jp
sbb
mov
or
xor
scas
insb
push
cmc
mov
jecxz
arpl
inc
add
pushf
xor
lret
test
dec
jne
xor
call
lods
jno
xchg
imul
mov
repnz
sub
sub
ret
nop
inc
and
in
rolb
push
sub
mov
add
je
inc
stc
fnstsw
lret
jmp
dec
outsb
xchg
pop
add
in
jecxz
mov
test
scas
hlt
dec
psubusw
push
aaa
movsl
repz
dec
sub
and
dec
push
stos
cltd
fdiv
in
cmpb
aas
pop
dec
jle
scas
jle
cmp
lea
inc
std
mov
aaa
dec
sbb
jecxz
mov
jns
sbb
int3
insl
decl
sub
xor
insb
cmp
mov
push
sub
movaps
fisttpll
add
sub
fiaddl
shrl
fdivrs
pop
fldenv
or
pop
loopne
mov
adc
imul
mov
mov
add
jns
mov
jne
aaa
jb
je
out
mov
jp
add
dec
lds
jns
cmp
mov
add
xsave
inc
rol
int
in
loopne
mov
fs
adc
ljmp
in
rcl
cmpl
pop
and
dec
pop
sbb
imull
sub
xor
dec
jae
lahf
out
popw
aad
imul
inc
aaa
cmpsb
sbb
or
enter
leave
bound
pop
adc
dec
lret
inc
orl
stc
mov
dec
repnz
and
fadds
daa
push
or
dec
aam
jb
into
sbb
push
xchg
dec
pop
xor
insb
pop
cmp
cs
ds
je
xchg
lds
test
ljmp
jmp
jg
mov
jne
les
iret
pop
repz
addb
jae
xor
or
jl
or
or
fnsave
cmp
add
aas
lahf
int3
out
xchg
or
adc
ds
stc
pop
lcall
fwait
mov
jnp
inc
ljmp
es
stos
push
out
cmp
sbb
test
mov
push
jo
int
lret
lds
jns
leave
out
fisubrs
fdivrs
sbb
or
push
xchg
inc
or
xlat
sbb
shl
fs
cmpsl
lahf
jmp
shrb
popa
mov
iret
enter
aad
out
outsl
cmpsb
cmp
mov
and
arpl
mov
not
mov
push
lcall
pop
or
sub
ret
sbb
in
repnz
in
das
mov
cmp
int
out
scas
les
test
add
jmp
shrl
aaa
call
push
outsl
add
jb
sub
pop
and
cmp
mov
test
sbb
and
xor
xorb
and
repz
cmp
leave
gs
cli
hlt
insb
mov
and
aas
add
sbb
cmp
mov
and
or
in
push
popa
pop
subb
ret
leave
adc
xchg
jmp
sti
add
stos
push
pop
stos
push
dec
push
inc
xchg
xor
mov
call
ror
test
scas
jns
out
scas
popf
jae
push
lock
adc
pop
call
mov
fmull
lcall
or
push
mov
shrl
mov
cmpsl
repz
ja
xchg
mov
mov
mov
cmpsb
push
pusha
jbe
repz
lods
push
dec
addr16
push
leave
inc
mov
and
pop
inc
adc
cltd
jns
add
xchg
sarb
mov
cmp
mov
sub
ja
popf
mov
dec
jecxz
mov
js
push
fs
jecxz
xor
jo
push
inc
rclb
dec
add
repz
adc
and
cmpsb
xchg
sbb
dec
cmp
adc
jmp
push
xor
in
push
in
and
or
fistpll
or
jmp
sti
add
ficomps
stc
fidivs
les
cmp
mov
scas
mov
rcll
lds
loope
adc
lret
imul
out
add
sbb
mov
fs
and
inc
lcall
loope
and
es
arpl
cmpl
popf
orb
jmp
leave
mov
lea
frstor
xchg
ja
rcrb
fdivs
inc
scas
push
movsb
cs
xor
repz
call
push
mov
icebp
lods
sbb
pusha
insl
inc
out
js
mov
cmpsb
mov
insl
mov
cmp
mov
sbb
mov
call
orb
subl
sub
push
lcall
ret
repnz
leave
js
push
lcall
fcomi
imul
xchg
jae
add
scas
mov
in
pop
lret
mov
xchg
dec
rolb
repnz
aad
cs
inc
sti
xchg
lods
out
pusha
mov
add
xchg
pop
dec
fwait
mov
mov
sbb
sbb
lret
sub
out
jmp
pop
fistl
shl
negb
jecxz
arpl
mov
jl
lods
pop
add
outsb
shrb
or
xchg
mov
and
pop
or
shrb
dec
and
lea
mov
adc
clc
aad
clc
andb
push
movsl
mov
push
jp
out
inc
dec
sub
sub
scas
inc
adc
hlt
sbb
enter
push
loopne
add
xlat
adc
mov
cmp
dec
jle
test
repz
test
hlt
add
jg
sbb
sub
fwait
inc
mov
ret
cmp
mov
sar
jns
pop
out
movsb
dec
sbb
inc
popa
cmp
cmp
add
xor
stos
sub
in
pop
in
xor
imul
pop
xchg
jno
aam
out
rorb
std
pop
cmc
lret
xor
xchg
lock
xchg
mov
out
inc
je
incl
data16
mov
pop
sbb
sarb
sub
cmc
and
aam
scas
test
sub
aas
mov
inc
xor
or
outsb
adc
sbb
adc
jge
es
enter
mov
mov
sbb
test
sbb
aam
shll
mov
cmc
arpl
aas
popa
scas
mov
and
call
popf
pushf
xor
xchg
push
xchg
mov
fstps
pop
dec
cli
jne
sub
add
movl
mov
sub
cli
and
daa
out
add
push
xor
rcrb
sub
xchg
cld
imul
xor
daa
xchg
jnp
aad
iret
mov
pop
cmc
ret
sub
mov
outsb
fisubl
mov
mov
dec
adc
jmp
jge
adc
and
xor
push
or
lock
add
push
popa
jl
or
sti
stos
nop
sub
inc
jns
sbb
test
icebp
cmp
scas
xchg
jle
xor
js
je
sbb
mov
push
mov
int
test
pusha
rclb
mov
lods
sub
sbb
xchg
test
lcall
jg
aad
out
cs
jae
rclb
xchg
add
negb
sbb
sub
add
sbb
inc
add
cmp
and
aam
xchg
sbb
lock
and
scas
fwait
xchg
or
and
xor
pop
jb
ret
and
loopne
jmp
pop
ljmp
fmuls
sub
push
loopne
call
je
cld
dec
sbb
fmuls
das
cmpsl
inc
mov
dec
mov
xor
mov
fimull
jo
setg
pop
adc
pop
sub
test
add
out
stos
movsl
dec
inc
cltd
test
pop
dec
mov
std
xor
stc
push
push
xchg
cltd
mov
pop
jns
xchg
lods
dec
ds
bound
inc
js
pop
test
inc
inc
or
jae
jle
hlt
insl
das
xchg
in
cmp
loop
sub
cld
xor
pop
aam
mov
inc
or
fwait
inc
movsl
cmpl
add
fistl
sub
pop
mov
ret
insl
loop
mov
push
mov
mov
cmp
call
aad
xchg
leave
adc
xchg
sbb
adc
pop
xor
pushf
fldcw
push
aad
pop
scas
daa
fsubs
push
add
adc
lcall
and
sbb
pop
and
jo
repz
stos
cmp
sti
fprem1
and
sbb
xlat
mov
pushf
dec
mov
and
sub
sahf
and
add
hlt
inc
dec
movsb
dec
jb
cli
stos
jge
jl
loope
imul
xchg
adc
push
add
add
or
pushf
dec
pop
shll
pop
imul
movsl
jmp
repnz
fnstenv
cltd
pop
rdtsc
xchg
xchg
lds
ss
daa
or
dec
mov
jg
addr16
into
test
dec
inc
sub
pop
inc
pop
mov
sbb
mov
aam
mov
es
xor
sub
mov
inc
xchg
mov
adc
jl
imul
ret
rorb
mov
mov
mov
jmp
pop
addl
outsl
iret
xor
and
outsl
xchg
push
inc
push
fcomps
adc
sub
mov
push
fsts
jno
push
adc
aad
add
cmp
cld
pop
mov
sbb
in
sahf
scas
pop
add
enter
mov
std
aam
jmp
jno
jae
clc
out
push
mov
in
fimull
push
loope
data16
in
aas
mov
mov
dec
int
fnstcw
lcall
and
or
stos
out
stc
mov
call
sahf
inc
jnp
std
pop
add
lods
mov
addr16
inc
rolb
jecxz
into
test
mov
jl
mov
ja
in
shlb
stos
mov
mov
clc
inc
sbbl
mov
xchg
neg
jb
out
push
imul
xorl
pop
lock
inc
outsl
rclb
imul
out
xor
mov
sbb
aaa
ret
sub
mov
ja
mov
insl
mov
and
jo
mov
mov
adc
jae
mov
lret
jecxz
jne
cltd
adc
scas
pop
jg
jle
scas
or
icebp
xchg
stos
rorl
inc
es
xchg
mov
inc
out
movsl
xchg
ficoms
stos
ljmp
inc
nop
push
out
cmp
loope
xor
mov
cmp
add
lret
sub
fdivrs
cmp
mov
rcll
jge
mov
mov
cmc
dec
adc
jge
cmp
and
or
cmp
jb
mov
out
in
pop
push
adc
add
rorl
xor
pop
cmp
sub
xchg
in
leave
clc
mov
test
xor
jge
sahf
cli
sahf
inc
shlb
cmp
rcrb
idivl
stc
xchg
in
jl
and
in
pop
cmp
test
push
jbe
into
mov
and
mov
cwtl
mov
xchg
add
cmpsl
ja
push
or
cli
out
into
xchg
mov
push
mov
fisubl
je
jmp
pop
les
call
bound
in
loopne
jne
es
rcll
xchg
pop
jne
jle
out
fldt
popa
push
mov
cltd
add
test
loopne
sub
jae
push
cmp
push
in
stos
pop
mov
jae
pop
jbe
pop
loop
or
repz
jo
fwait
pop
into
xchg
ja
lock
or
in
mov
push
sbb
sbb
cmc
iret
ret
rol
sub
mov
ret
mov
ja
andb
mov
jl
push
test
inc
lods
inc
sbb
movsb
aas
and
aam
dec
fidivrl
cltd
adc
fsubrs
mov
rcr
negl
mov
in
sbb
pop
dec
jle
push
insb
add
icebp
inc
jae
fmull
mov
xchg
stos
pop
sbb
add
aad
cld
leave
jp
cmpsl
cmp
enter
mov
and
je
add
sbb
fnsave
mov
into
or
fcoms
add
adc
cs
jl
sahf
xchg
test
in
mov
lahf
sbb
and
repz
testb
in
pop
mov
xchg
sbb
fsubrl
mov
int3
cmc
dec
cmp
lods
or
add
std
lds
xchg
mov
dec
fcoms
mov
push
jnp
fwait
jmp
je
mul
sub
aam
ljmp
xor
mov
push
frstor
xor
adc
in
mov
push
add
shlb
daa
adcl
adc
es
xchg
popf
iret
jns
fisubrs
ret
cmp
and
xchg
add
fimull
mov
rcrl
mov
add
or
mov
jne,pn
mov
insb
scas
dec
xor
jmp
lea
repnz
push
pusha
mov
loope
cmp
dec
sbb
adc
xchg
repnz
mov
sub
cmp
test
inc
fwait
push
ljmp
popa
inc
jp
push
mov
iret
divb
ja
sbb
mov
sbb
int
mov
and
cmpsb
pop
cmpb
ds
inc
fwait
xchg
leave
in
out
pushl
pop
sahf
out
es
dec
sub
clc
jmp
add
or
cmp
dec
sbb
ret
fildl
xchg
push
jmp
lret
cs
outsl
jae
push
movsl
lock
jnp
inc
cltd
dec
add
mov
jle
icebp
adc
xor
jl
mov
push
push
ds
fnclex
jb
in
sub
idiv
bound
push
xor
or
sub
fcompl
xor
popa
inc
pop
jbe
mov
pushf
scas
ret
dec
std
mov
xchg
sub
jbe
pop
push
mov
cmp
mov
daa
in
inc
test
xchg
rcrl
outsl
cmpsl
cmp
push
mov
adc
sbb
mov
ds
lret
jle
jno
xor
les
leave
jae
pop
int3
loopne
icebp
aam
aaa
cltd
stos
insl
lds
insl
sbb
out
jb
inc
xchg
mov
ficomps
xor
jecxz
dec
jne
nop
sbb
lds
xchg
mov
into
or
cmc
lahf
vhsubps
push
subl
sbb
xchg
add
int
popa
in
test
cwtl
fadds
cmp
xor
adc
cli
jne
sub
xchg
xchg
movsb
xchg
cmp
sub
sub
mov
out
adc
xor
jl
loope
in
rcrb
push
cmpl
cmc
xchg
sub
or
mov
js
mov
neg
or
or
test
xchg
mov
and
pop
shl
push
fldcw
lcall
or
fistpll
push
xchg
fidivrs
xchg
fmull
sbb
jg
std
stos
cwtl
sbb
cli
cvtps2pi
pop
in
xchg
sbb
stos
xor
hlt
xchg
push
or
push
pop
lods
lods
push
mov
cmp
sub
or
out
pop
repz
add
pop
cwtl
xchg
fidivrs
ret
loopne
les
mov
push
jb
add
pushf
mov
pop
insl
or
movsb
and
pop
leave
cltd
mov
mov
mov
aas
cs
jmp
movsl
in
and
fldt
dec
xor
xchg
and
jmp
sti
mov
mov
add
ret
pusha
cmpsb
cmp
fisttps
push
dec
xchg
mov
mov
push
cmp
jnp
and
je
xchg
mov
popa
repz
or
out
or
sub
repnz
inc
movl
inc
repnz
pushf
fldenv
out
int3
stos
cli
xchg
sarb
jbe
xor
cmp
add
pop
add
into
xlat
mov
gs
or
imulb
ss
or
sub
inc
cmp
and
ljmp
loope
lret
xchg
or
fs
clc
dec
mov
repnz
xchg
dec
mov
cs
mov
jge
les
mov
pop
and
lret
stos
xor
and
test
xchg
jb
lret
les
cmp
and
pop
sahf
dec
sbb
popa
ret
mov
fisttps
addr16
jp
inc
sarb
cmp
lds
inc
mov
addr16
pop
enter
out
mov
outsl
out
mov
outsb
xchg
iret
ljmp
xchg
mov
inc
mov
sub
push
lods
pop
outsb
sub
imul
insl
lea
rol
jl
sarb
iret
jl
jecxz
popf
and
lgs
add
dec
push
test
mov
in
test
pop
cmpsl
ret
push
jae
adc
call
sbb
dec
dec
dec
push
sbb
and
adc
aam
fmuls
insl
lods
sub
cltd
rcll
fs
pop
fs
in
xchg
imul
insb
or
sahf
outsl
pop
insl
xor
dec
cmpsb
pop
jns
ljmp
xchg
in
mov
mov
xchg
pop
jmp
or
mov
addl
mov
cmp
pushl
mov
arpl
dec
call
fxam
stos
popf
sub
out
pop
jle
lods
xchg
xchg
add
or
cwtl
xchg
mov
dec
or
xor
out
sub
jo
xchg
jbe
rcrl
mov
sub
push
fbld
sub
sbb
dec
mov
ret
movsl
mov
dec
dec
js
xor
ret
xor
mov
lret
jecxz
xchg
push
pop
and
jne
or
pop
or
xchg
addr16
icebp
pop
adc
imul
xchg
push
sbb
mov
rclb
push
push
nop
and
add
repnz
xchg
addr16
es
test
add
mov
sub
xchg
mov
mov
push
inc
mov
and
jl
dec
sarl
lock
aas
roll
or
stc
aam
fwait
jp
add
pop
push
fs
push
pop
arpl
rorb
pop
mov
sti
ja
xchg
fcmove
outsl
aaa
sbb
fstp
and
insb
xor
mov
sahf
mov
testb
mul
sarl
pusha
je
inc
xor
lcall
test
jg
mov
jne
jecxz
xor
pop
inc
dec
loopne
inc
mov
clc
scas
and
loopne
jno
jne
repz
lods
adc
add
pop
mov
jmp
dec
jbe
leave
xor
loope
loopne
icebp
pop
mov
js
mov
mov
fwait
xchg
pop
notb
jae
aad
mov
and
push
lcall
subb
test
ficompl
fdivrs
enter
fists
movl
out
xchg
xchg
loop
inc
out
negl
stos
sbb
xor
xor
loop
inc
int3
adc
xchg
xor
push
sub
pop
push
imul
das
jg
ss
mov
das
aaa
sti
lods
and
sub
mov
sub
mov
pop
mov
test
stc
ja
add
sub
xor
mov
out
or
ret
lock
sbb
jne
iret
cmpsb
fists
lret
popf
pop
gs
sub
aaa
mov
mov
idivb
fsubs
negb
inc
pop
pop
clc
dec
movsb
mov
pop
aad
cmp
out
stos
mov
aad
sahf
mov
mov
pop
into
in
imulb
cmc
in
xchg
pop
outsl
xchg
pop
dec
bound
pop
xor
subl
loope
dec
das
pop
jno
xchg
int3
cli
icebp
push
loop
std
lahf
stos
cmpsb
outsb
repz
adc
arpl
pop
push
cmpsb
bound
xor
fdivp
pop
inc
pop
pushl
xchg
xchg
sub
outsl
inc
test
adc
push
fwait
jp
nop
add
sbb
mov
stos
sbb
ds
jp
movsb
push
or
mov
sbbl
lcall
int
mov
mov
stos
dec
mov
cmp
dec
xchg
inc
jge
fisubs
pop
mov
test
inc
sbb
outsb
rorb
mov
cmp
aad
lret
stos
mov
mov
mov
mov
adc
mov
pop
test
jle
and
adcb
push
push
xor
clc
pop
push
mov
dec
pop
jno
cmp
pop
mov
xchg
sbb
mov
shll
pop
ret
lods
add
and
adc
popf
jle
pop
subl
not
or
xor
test
testl
fisubs
and
xchg
or
sti
add
jl
rol
ret
std
xor
mov
sbb
movb
hlt
fsubrl
fisubrs
subl
mov
mov
test
test
and
and
mov
xchg
fcmove
cmpsb
decl
dec
cmp
push
dec
xor
ljmp
sub
ss
push
mov
xor
lods
loopne
pusha
in
xor
mov
lret
ret
cmp
or
cltd
fwait
pop
sub
fs
jb
sbb
xchg
dec
jmp
fisttpll
fistpll
and
xor
adc
rolb
push
out
cmc
aas
xor
jl
call
daa
loopne
aam
subb
pop
sub
mov
roll
mov
xchg
pop
lret
push
pushf
sbb
cmp
jne
mov
xchg
dec
xchg
jl
shll
movsl
jmp
and
sti
xor
and
inc
or
lods
cmp
mov
std
xchg
out
adc
push
inc
sbb
ficoml
dec
cmp
lods
xlat
mov
and
sub
insb
dec
outsb
rcrl
das
mov
jle
push
fstpl
or
insl
add
and
testb
or
addr16
lods
add
fildl
push
inc
cld
mov
fimuls
mov
addr16
mov
repnz
inc
dec
mov
lds
out
push
sbb
aad
cmp
xlat
sahf
stc
add
push
repnz
into
mov
addr16
and
repnz
mov
pop
test
add
inc
insl
mov
push
xchg
push
mov
js
mov
gs
xlat
mov
inc
cmp
adc
xor
and
cmp
mov
sbb
adc
cwtl
popa
and
mov
lahf
xor
adc
xchg
lahf
inc
add
cmp
push
dec
movsb
mov
pusha
sbb
push
mov
sbbl
push
adc
outsb
ljmp
aam
mov
adc
mov
in
dec
mov
in
jmp
mov
fadds
cld
inc
xchg
jp
xor
shll
xchg
inc
roll
dec
sub
push
scas
fsubl
adc
xchg
arpl
jbe
inc
hlt
and
mov
mov
insl
and
fs
dec
ret
or
aam
test
ja
in
shrb
js
inc
or
sub
sbb
dec
sbb
add
adc
dec
sti
sbb
out
jo
lret
lahf
iret
lcall
mov
push
ljmp
sub
cmp
pop
add
and
cld
cltd
fptan
jecxz
scas
pop
ss
mov
sub
pop
push
fwait
cmpsb
jmp
ret
and
mov
mov
xlat
movsb
mov
pop
pop
xchg
dec
add
push
push
fnstenv
sarb
mov
loope
jnp
out
dec
inc
or
cwtl
lds
add
inc
xor
dec
imull
popa
xor
xlat
ret
faddp
jmp
lea
sbb
aad
mov
push
sub
andb
dec
sub
lods
add
imul
add
outsl
sub
arpl
mov
jl
cmpsb
xor
fs
pop
cmpsb
cmp
inc
mov
pop
cli
pop
lea
popf
and
int3
jge
pop
aad
ja
jle
xlat
leave
jecxz
cmpl
in
or
lods
mov
xchg
or
subl
dec
and
xchg
sbb
push
push
loop
bound
test
mov
push
cmp
aam
aad
test
xchg
push
outsb
jne
xchg
push
or
and
jmp
add
lret
jno
jl
cmp
jmp
jbe
mov
outsl
clc
js
jbe
std
fidivs
jb
imul
mov
stos
or
xor
popf
lahf
dec
push
mov
fnstenv
in
xchg
push
cmc
cmp
jmp
mov
stc
sti
mov
xchg
dec
cmp
adc
xorb
push
push
iret
dec
push
pop
imul
nop
inc
push
sbb
ja
or
test
test
xchg
push
adc
repnz
daa
mov
cs
iret
push
push
rcr
push
gs
sub
inc
mov
push
inc
cmpsb
xor
dec
divl
sub
xchg
sub
lods
sbb
fisubrs
mov
jle
xor
cltd
inc
rolb
lea
xor
std
gs
cltd
cmp
push
mov
xchg
mov
fsubrs
pop
lods
and
fnstsw
test
sbb
adc
pop
ljmp
mov
xchg
dec
sub
arpl
cmpl
leave
jb
fstl
imul
nop
movsb
cwtd
lock
sbb
adc
das
popa
mov
out
out
lds
faddl
sub
fnstenv
mov
sbb
ds
imul
push
repz
xchg
rcrb
mov
and
or
push
xchg
dec
jmp
adc
dec
cmpsb
push
adc
int
mov
loop
cmp
lahf
xchg
xchg
push
pushl
xchg
fldenv
sub
dec
daa
pop
iret
dec
popaw
fwait
inc
push
lret
xchg
dec
data16
movsb
sti
outsb
mov
fldcw
adc
inc
push
sub
sarb
mov
cmpsl
and
push
adc
fs
mov
mov
and
cmc
mov
add
test
cli
adc
pop
ds
mulb
out
enter
adc
pop
cmpsb
ret
sbb
test
pop
xor
push
test
mov
xor
mov
pop
stos
fwait
dec
stos
push
dec
adc
cmc
std
inc
mov
pop
pop
das
mov
clc
clc
jge
pop
repnz
ret
cwtl
jns
cmp
out
sbb
mov
stos
mov
loop
enter
in
into
cmp
add
addr16
inc
cmp
pop
inc
aaa
fcmovb
sub
rcl
repz
and
cmp
es
sbb
mov
mov
test
adc
or
pop
movsl
add
insb
add
adc
ret
dec
pop
push
rcll
jp
push
js
lcall
adc
pop
sbb
mov
insb
fadd
and
mov
out
or
inc
inc
pop
ret
add
mov
sahf
test
pushf
in
mov
ret
scas
scas
add
inc
lds
fnstsw
mov
cwtl
mov
jae
add
xor
fdivs
xchg
fidivrl
jg
loop
cld
xchg
pop
loope
addr16
sbb
out
test
push
cltd
ja
shrb
or
mov
aam
jp
popf
gs
or
fsts
and
scas
in
hlt
pop
movsl
in
cmp
push
arpl
addb
xchg
mov
rcrl
and
fdivs
cwtl
or
arpl
push
xor
aam
movsl
sbb
dec
push
test
enter
xchg
dec
dec
cmpsl
pushf
mov
jns
aas
pop
scas
movd
sub
inc
addr16
je
adc
popf
fwait
xor
adc
decb
popf
jmp
sbb
cs
inc
pop
fistl
pop
mov
adc
cld
sub
aam
popa
outsl
addb
pop
sbbb
repz
cmp
pop
mov
mov
rcr
fcmovne
mov
scas
and
pop
aad
scas
mov
stos
dec
lds
cli
xchg
loopne
in
icebp
and
mov
pusha
cmp
aam
inc
inc
pop
mov
in
test
jo
mov
xor
xor
cmovbe
xchg
les
leave
fistl
jle
rol
std
mov
xor
push
decl
dec
testl
or
cmp
out
xlat
inc
cmp
dec
xchg
xchg
jmp
xchg
mov
mov
insl
loope
ret
jnp
mov
fdivr
call
inc
loop
sbb
or
pop
outsl
and
dec
dec
inc
lea
into
outsb
cmp
pushf
mov
or
insl
std
imul
jp
jno
add
push
and
rcrl
sbb
insl
paddb
xor
repz
mov
jg
loop
adc
mov
pop
icebp
rcrb
adc
minps
sbb
sbb
or
pop
in
dec
test
sbb
lret
mov
mov
add
call
rcr
sub
mov
push
gs
loope
insb
popa
stos
jp
bnd
or
adc
pop
and
test
or
xchg
lds
push
or
xchg
lods
dec
push
dec
push
push
call
mov
dec
cmp
pusha
sbb
push
mov
adc
sub
movsl
pop
mov
clc
mov
mov
sbb
jecxz
nop
sub
jge
inc
jno
push
ljmp
pop
fdivs
js
imul
jb
mov
xor
add
shrb
je
pusha
cmp
pop
push
jnp
add
sub
jg
lods
js
movsb
fistps
es
lods
jg
into
add
aas
pop
sbb
adc
mov
mov
movsl
loop
add
lods
imul
cld
outsb
mov
sti
pop
add
scas
xchg
sbb
sahf
mov
sbb
enter
add
imul
jg
mov
out
lods
ret
adc
outsl
or
jmp
xor
add
lds
subb
lret
xor
mov
es
jbe
cld
add
mov
mov
push
out
xor
inc
adc
lahf
cli
mull
std
sbb
ds
add
pop
mov
out
or
stc
sbb
jbe
dec
inc
pop
mov
ds
push
xor
jbe
and
stc
mov
in
inc
and
out
jl
js
test
add
shrb
dec
shrb
cs
arpl
andl
adc
jne
lret
aas
sub
sub
arpl
pop
test
cmp
dec
cwtl
aam
xchg
mov
lea
clc
pop
add
mov
fwait
mov
scas
sahf
cmpsb
incl
out
sti
and
mov
arpl
filds
jle
pushf
mov
movsl
data16
adc
add
mov
lods
scas
sub
insb
negl
popa
sbb
mov
pusha
scas
xor
mov
mov
or
pop
sti
movsl
xor
xchg
xor
jmp
sti
adc
movsl
enter
adc
push
lret
shld
push
inc
das
mov
or
add
imul
fs
gs
loopne
hlt
cmp
adc
sub
pop
clc
ret
and
push
push
mov
inc
dec
mov
add
sub
mov
pop
adc
pusha
xor
mov
adc
das
in
lret
pop
xor
push
add
inc
sub
imul
mov
jns
daa
xor
cmp
or
fildl
xchg
or
cld
sbb
jne
sarl
cmp
mov
sbb
sub
loope
sbb
shrb
clc
int
cld
js
scas
push
jmp
loope
pushf
data16
cmp
mov
push
inc
inc
das
inc
push
or
shl
or
sbb
sti
and
pop
daa
add
lods
pop
inc
repnz
scas
mov
ret
pop
ret
aad
lds
sub
xlat
out
pop
je
mov
insl
push
mov
mov
repz
mov
dec
data16
outsl
int
int3
rclb
jo
fwait
add
jno
std
pusha
or
hlt
pop
dec
movsb
pop
fcomps
ljmp
aad
pop
out
xchg
adc
stos
insb
push
std
fnstsw
jmp
mov
das
mov
cli
loopne
adc
data16
sti
xor
int
cwtl
cwtl
stos
pusha
stos
adc
jle
jnp
aaa
call
fmuls
sub
leave
daa
ret
repz
xchg
sbb
and
mov
test
mov
cmp
rcll
pop
mov
jns
xchg
fidivl
pop
inc
clc
js
daa
test
in
leave
in
fists
scas
call
repz
pop
inc
jne
test
mov
mov
lret
subl
rclb
mov
fidivrl
loope
jb
jne
cmc
xor
loopne
sub
and
push
cld
fwait
cmp
xchg
sbb
scas
fs
cwtl
cwtl
dec
in
pop
mov
stc
scas
jne
iret
ss
pushf
movsb
jae
pusha
mov
add
push
xchg
insl
stc
dec
vtestpd
stos
sbb
mov
mov
adc
mov
add
sti
dec
icebp
jle
inc
mov
fsubrs
mov
jp
inc
and
pop
inc
jp
pop
sbb
cmp
gs
push
daa
mov
and
insl
dec
ss
cmpsl
out
sub
loop
pop
xchg
cmpsb
sub
or
mov
loopne
pushl
addr16
mov
out
push
fsubrs
xor
push
pop
int3
out
ret
inc
mov
mov
or
sbbb
js
cmp
or
je
cmp
and
js
dec
inc
aas
inc
movsb
inc
sbb
jns
cmpsl
lods
push
loop
and
test
cwtl
dec
xchg
and
repz
imul
movsb
fisttpll
arpl
cmp
cld
fimuls
xchg
add
lret
xchg
add
push
xchg
cmpsb
push
xor
clc
xlat
imul
repnz
fs
lret
cmpsl
lret
fbstp
mov
aam
fwait
xchg
pusha
sbb
push
jl
jmp
adc
push
outsb
sbb
adcl
sahf
outsb
shlb
add
sti
mov
jp
rorl
je
xchg
or
xor
and
jb
orl
lahf
adc
push
in
xchg
dec
pop
movsl
loop
xchg
mov
mov
aad
sub
movb
push
popf
int
bound
xor
stc
sbb
lahf
ss
fstpt
repz
les
pop
sub
arpl
xchg
rclb
push
loop
shrb
hlt
or
mov
ficompl
ljmp
push
mov
push
adc
pop
or
fcom
daa
jne
jnp
cmpsb
imul
inc
shll
addl
xor
mov
push
out
mov
ja
dec
cmp
mov
adc
aam
adc
jl
and
add
pop
es
adc
inc
xchg
push
cmp
dec
mov
jl
sub
pop
fwait
inc
inc
fnstsw
lcall
xchg
stos
fs
cwtl
sbb
jns
mov
sub
imul
dec
cld
mov
shl
push
push
jmp
int3
xlat
popf
push
mov
mov
popa
outsl
mov
cmp
fwait
and
rcrb
jno
in
loopne
push
pop
sbb
and
pop
push
ja
rclw
lcall
adc
and
lret
xlat
nop
addr16
sar
inc
repz
sub
into
jne
test
mov
pop
out
idiv
nop
and
mov
fwait
push
fdivs
xor
pop
xor
loopne
ja
out
cmp
xor
cli
aas
mov
push
pop
loop
push
cmp
mov
cld
pusha
out
mov
mov
cmp
je
pop
mov
xor
push
daa
dec
out
scas
pop
je
les
jmp
out
mov
xchg
xor
sti
in
cmpsl
sub
dec
pop
lahf
or
pop
sti
add
adc
inc
aaa
psubusw
sti
out
in
sti
bound
rcll
push
mov
or
outsb
mov
pop
cwtl
stos
cmc
sbb
lahf
mov
in
adc
out
cmpsl
scas
stos
pop
sbb
icebp
or
jle
mov
cmc
bound
mov
clc
out
lcall
inc
mov
inc
je
or
mov
push
daa
inc
jbe
lods
sbb
mull
or
mov
out
xchg
sbb
scas
int
movl
mov
dec
add
adc
jle
das
imulb
iret
sbb
jle
push
push
mov
sub
push
arpl
bound
mov
in
paddusb
sbb
jp
sbb
sub
popl
jle
rolb
les
scas
cmp
xchg
pushf
add
ja
inc
jmp
out
loope
jge
jp
mov
pop
sub
jmp
and
je
out
xchg
movb
test
cmpsb
push
inc
cmpsl
mov
push
ret
jl
and
fnstenv
test
out
fs
xor
test
out
int
pop
imul
cmpsl
lods
mov
gs
cmpsb
add
adc
mov
lds
subl
cs
orl
jae
sub
jo
dec
aad
cmp
add
mov
movsl
lret
fcmovne
jmp
dec
inc
cmp
push
lods
inc
xchg
jge
gs
je
lods
cld
xchg
adc
fistl
push
scas
jle
add
cmp
jnp
jmp
pop
and
roll
rcl
inc
fstpl
imul
pop
push
int3
push
nop
mov
popf
aaa
aad
mov
in
or
adc
adc
sarb
lds
pop
cs
and
ret
adc
lret
fnstsw
repz
leave
jmp
mov
jg
cmp
add
shl
call
inc
sti
daa
and
ljmp
sbb
imul
sub
rorl
cmp
int3
adcl
test
adc
out
or
mov
dec
xor
data16
ret
add
add
xchg
jmp
mov
hlt
iret
dec
out
clc
lahf
jno
or
mov
xchg
push
xchg
add
out
ja
sbb
xor
pop
sub
cmpsb
sub
jo
jmp
rolb
mov
dec
sbb
jns
int
lock
adc
and
rcrl
xchg
decl
mov
test
lock
mov
mov
mov
lret
mov
mov
shll
inc
add
adc
or
sbb
inc
xchg
gs
dec
in
ljmp
cwtl
daa
icebp
mov
sbb
mov
fwait
inc
mov
jecxz
test
cltd
movsl
mov
pandn
call
push
movsl
push
out
mov
add
jne
pop
push
ret
shr
push
stos
push
pop
rcrl
lods
sti
dec
push
jne
xchg
inc
fwait
repnz
lock
xor
inc
xchg
dec
out
cmc
add
push
pop
cmpsb
std
mov
sub
pop
fisubl
movsl
and
sub
outsl
inc
movsb
push
sbbl
sahf
jns
fnstcw
jne
outsl
push
push
ror
fstl
push
aad
cmp
test
push
shlb
ja
cmp
cmp
insl
sbb
icebp
imul
dec
cmp
scas
adc
mov
movsb
leave
aas
cli
and
lcall
test
jno
mov
pop
cmp
testl
cld
shlb
mov
adc
mov
insl
dec
pop
das
add
xor
jnp
js
or
ret
cld
sub
pop
xor
fadds
inc
pusha
mov
adc
nop
or
push
sbb
mov
jnp
mov
cmc
cld
ja
mov
andb
test
cmp
lods
in
test
movsb
outsb
lds
lret
int
dec
mov
out
in
push
xor
pop
xchg
adc
lret
cmp
stos
adc
stc
cmp
adc
add
xor
enter
out
out
data16
xchg
mov
sub
xor
jo
and
mov
mov
and
aas
addr16
mov
mov
or
lods
or
push
insl
push
xchg
lods
lahf
jne
xchg
mov
frstor
arpl
repz
mulb
inc
imul
or
cmp
lock
scas
sbb
sbb
jns
arpl
bound
jl
sbb
jecxz
cmc
fisubs
enter
jmp
jnp
xor
in
insl
pop
jo
mov
ret
daa
xchg
xchg
in
in
es
jbe
pop
test
cld
inc
dec
push
nop
dec
xor
mov
ret
fdivl
mov
movsl
push
js
sub
loopne
stos
mov
add
imul
cmc
icebp
clc
xor
sbb
adc
mov
pusha
inc
jno
je
testl
sub
scas
mov
xchg
icebp
mulb
and
and
cmp
xchg
scas
xlat
and
mov
jmp
jl
add
insl
mov
push
xchg
and
loope
sub
mov
mov
sbb
gs
dec
vmovlps
jle
cmp
push
mov
lods
and
movsb
outsl
sbb
cmp
dec
daa
test
int3
notl
sub
mov
outsb
pushf
inc
or
loop
pop
inc
incl
mov
std
movl
test
in
cmp
int
add
scas
push
test
mov
ret
ljmp
or
je
stc
and
popa
movsl
mov
jle
in
push
out
data16
out
call
std
iret
shll
int
add
and
test
lods
jns
push
shlb
bound
rcr
data16
cli
and
mov
mov
bound
bnd
xor
jb
push
ret
adc
sbb
cmp
fdivr
iret
lock
les
pop
ret
pop
or
test
add
in
pop
adc
push
jmp
sbb
jl
jae
cmpb
push
fwait
rclb
mov
mov
cmp
in
push
mov
sahf
ss
cmc
cmp
cmpb
push
outsb
jae
inc
les
ret
fsubrs
pusha
pop
xor
rorb
xor
test
cmp
pushf
jns
insl
or
mov
or
shll
xor
mov
lods
loop
sti
add
mov
sub
gs
or
fists
test
cmpsb
add
outsb
inc
sar
dec
mov
aaa
shlb
jo
sti
adc
orl
xor
and
inc
aas
mov
push
shl
lret
lahf
mov
or
out
data16
sbb
test
cmpsb
fwait
movsl
jg
out
dec
gs
leave
comiss
xor
les
loope
shlb
inc
fdivrp
rcl
push
push
push
and
fwait
push
jmp
cmp
mov
jb
cmp
xlat
push
dec
fwait
outsb
jge
sar
xor
push
sub
packuswb
repz
gs
inc
fcomps
pushf
iret
push
mov
add
push
dec
sub
sbb
stos
sub
add
data16
add
xor
jno
push
xchg
dec
jne
out
arpl
xchg
mov
mov
pop
cmp
bound
xchg
mov
xor
push
and
mov
int
lock
into
mov
adcl
pusha
jmp
ss
jns
xor
aam
cmp
pushf
mov
xor
and
fidivrs
cmp
pop
push
jae
sbb
xchg
incb
aaa
jmp
lock
rolb
popw
cmp
mov
int
insl
fimull
sub
xor
dec
mov
pop
inc
jbe
sbb
mov
sub
nop
pop
sbb
adc
xchg
pushl
and
pushf
and
nop
or
fsts
leave
dec
xor
pop
and
pop
mov
addb
mov
and
negb
add
inc
xor
xchg
sbb
xchg
xchg
xor
jne
sub
xchg
in
cmpsl
or
filds
push
in
or
in
jns
ret
pop
lea
int
adc
xchg
pop
xchg
stc
inc
mov
xchg
mov
stos
pop
xor
inc
cmpsb
fstp
push
pusha
cmpb
cwtl
sub
dec
inc
jne
mov
xchg
pop
in
and
mov
int3
loop
adcb
xchg
out
sbbl
sbb
cmc
jmp
sarl
fnstsw
mov
sbb
fidivs
jp
mov
in
jge
sbb
jo
sbb
shll
mov
out
int
mov
sahf
jecxz
add
subb
add
mov
pop
push
dec
es
lods
xchg
mov
mov
pop
loope
test
push
sub
xchg
mov
call
fisubs
pop
or
nop
outsb
shlb
test
mov
inc
leave
sbb
push
test
les
ss
mov
xor
cmp
pop
test
or
jle
inc
scas
in
or
adc
outsb
dec
test
popf
repz
insb
or
jb
ss
mov
cld
es
xor
mov
push
scas
add
mov
xchg
or
test
inc
xchg
jge
fs
in
ja
fwait
add
call
mov
jge
and
dec
mov
clc
cs
xlat
adc
ja
cvttps2pi
and
or
loop
imul
push
inc
notb
and
bound
mov
dec
pusha
xchg
out
leave
dec
cmp
test
xor
dec
cld
fistpl
test
jmp
jp
daa
push
into
mov
insl
jns
adcb
mov
scas
mov
popf
mov
xchg
jmp
imul
cwtl
xchg
lds
mov
orl
fsubp
into
sub
push
push
push
in
mov
add
jbe
addr16
jns
cmpl
daa
imul
hlt
sub
pop
into
into
stos
xor
mov
and
or
mov
inc
push
aas
mov
mov
cmpsb
pop
enter
adc
pandn
test
jge
sahf
dec
es
inc
mov
xor
cmp
out
xchg
inc
flds
stos
inc
loopne
sub
fwait
lret
enter
pop
or
test
icebp
out
or
mov
out
jo
nop
or
add
movsl
cli
in
jl
clc
xlat
add
movsb
ret
sbb
hlt
sti
lds
xchg
and
subps
aam
inc
add
addl
ret
int3
sbb
jmp
loopne
lds
adcb
jle
iret
cli
test
out
add
rorl
hlt
jge
stos
ja
or
cwtl
outsb
mov
pushf
push
pop
mov
lret
push
mov
sbb
sbb
adc
rorb
xchg
mov
push
popa
shr
or
jl
into
lret
cs
and
adc
inc
pop
stos
shll
cmpxchg
lcall
jle
inc
cld
test
xor
jbe
mov
dec
loopne
pop
and
or
adc
adc
jg
js
in
bswap
adc
ret
xor
test
xlat
movsl
hlt
sub
out
orb
dec
lea
movsb
mov
shll
out
ret
xchg
lcall
fs
jne
in
cs
out
dec
imul
pop
push
std
icebp
push
aaa
lahf
stos
arpl
mov
adc
xchg
movsb
mov
pop
fidivs
mov
dec
mov
jnp
or
xlat
pop
push
out
loope
aam
sbb
pop
mov
sub
inc
loop
lods
jbe
into
out
lods
pop
orl
and
test
out
dec
fimuls
mov
mov
xchg
xchg
dec
cmp
mov
das
or
and
pop
push
fidivl
mov
std
and
sbb
and
pop
out
clc
push
loopne,pn
lahf
adc
out
arpl
aaa
cmp
jnp
shlb
ja
les
leave
hlt
nop
cmp
push
add
push
outsl
nop
aaa
jbe
pop
xlat
xor
push
stc
add
mov
add
cld
xchg
cli
fsubrl
icebp
xor
aad
push
xor
das
inc
mov
xchg
cltd
iret
or
adc
mov
clc
sahf
mov
push
insb
das
jb
es
sub
repz
jp
or
push
pop
leave
mov
jo
dec
icebp
sub
mov
test
sub
xchg
cmp
add
repz
push
cmp
pop
xlat
sbb
out
push
mov
sub
sub
bound
movsl
orl
and
xchg
push
xor
cli
xchg
and
popf
xchg
cltd
fistpl
pop
jl
add
andl
out
fisubrl
push
int
lret
inc
testl
sbb
aaa
outsb
ret
mov
jmp
cmp
mov
mov
xor
pusha
mov
pop
adc
hlt
inc
fldcw
shll
inc
rcrl
pushf
xlat
sbbb
cmpsb
out
push
js
mov
das
xchg
dec
subl
add
out
mov
sub
push
lret
fsubrp
push
mov
xchg
mov
pushf
pop
hlt
xchg
mov
mov
aad
mov
sub
mov
sti
cmp
xor
aaa
mov
push
adc
mov
push
arpl
call
icebp
ret
clc
in
std
mov
jns
repz
int3
inc
sarl
sub
xor
mov
jbe
fcmovnb
fwait
shll
das
not
loopne
pop
sbb
loopne
pop
jl
mov
cld
or
test
jmp
ljmp
pop
sub
adc
stos
gs
mov
or
loope
mov
in
dec
adc
subb
or
movsl
popa
enter
dec
xlat
push
insb
dec
bound
or
and
cli
sahf
xchg
aas
push
std
lcall
mov
mov
dec
pop
xor
sarb
add
and
xchg
add
inc
push
xchg
shrb
inc
inc
fs
xchg
js
rolb
jg
jae
mov
jge
mov
mov
cli
add
xor
mov
hlt
xor
shll
adc
aam
cltd
add
add
in
push
test
lahf
cltd
lret
sbb
aaa
adc
jmp
arpl
std
jne,pn
pop
shll
into
mov
xchg
xchg
ret
bound
pushf
sbb
in
jnp
insl
iret
pop
and
cmp
pop
imul
xchg
test
mov
and
aaa
cmp
mov
out
shlb
cmp
jns
es
imul
ljmp
hlt
aaa
cmp
inc
xor
jle
mov
inc
mov
idiv
sahf
scas
jmp
sbbl
jno
and
mov
addr16
xor
inc
aaa
popf
pop
mov
shr
inc
data16
inc
xchg
in
ret
xor
sbb
xchg
sbb
in
loope
das
ret
popa
mov
popf
mov
xchg
popf
sbb
inc
xor
cmpsb
mov
in
xor
cmp
insb
jns
xchg
out
in
insb
push
pmulhuw
insb
add
shll
sahf
mov
jbe
adc
mov
imul
mov
pop
je
xchg
imul
sbb
addr16
jne
push
call
xchg
and
adc
mov
and
jmp
xor
rcr
mov
sarl
xor
jmp
pop
dec
test
pop
mov
into
nop
cs
push
ret
dec
cli
lods
xorl
aaa
enter
inc
pop
dec
std
push
std
out
dec
insl
stos
push
in
sub
jno
sub
add
xlat
adc
das
jo
push
icebp
xor
daa
iret
add
inc
pop
mov
jb
xchg
shrl
xor
nop
test
and
pop
dec
lods
fs
cmp
mov
lds
sti
or
jne
cltd
mov
or
xchg
sub
xchg
mov
pop
in
in
int
and
rcll
cmp
jb
mov
fildll
cld
repnz
clc
ficomps
push
stos
mov
sbb
pop
jno
jecxz
inc
add
jb
or
pop
dec
xchg
data16
mov
inc
dec
adc
lea
cmp
cli
das
in
in
jne
xlat
cld
cmc
sub
imul
push
push
popa
ret
sbb
ljmp
scas
cs
and
push
dec
insl
and
pop
pop
ja
jne
lods
scas
jp
nop
daa
je
mov
sbb
sbb
dec
ljmp
cmc
dec
adc
jae
xor
repnz
fwait
mov
enter
mov
loope
mov
lods
jle
loop
pop
andl
les
or
mov
pop
xchg
in
outsb
adc
nopl
xlat
push
dec
pop
test
flds
std
mov
push
dec
js
addr16
sub
mul
pop
and
mov
lcall
pop
dec
mov
push
mov
or
in
rclb
out
jge
lods
dec
jbe
jecxz
in
mov
xchg
stos
xchg
int
lods
mov
loop
pop
and
mov
pop
add
fs
jge
aaa
call
push
cmp
decb
jmp
xorl
push
dec
sbb
outsl
or
popa
clc
lcall
add
pop
pop
jbe
xlat
and
push
lcall
int
lea
xchg
insb
int
aad
nop
xor
add
mov
mov
pop
imul
int3
jle
jmp
or
mov
movsl
arpl
idivb
push
scas
jnp
adc
cvtps2pd
cmp
and
iret
push
jg
cmc
mov
popf
mov
add
mov
mov
out
movsbl
out
int3
or
sarl
ljmp
xchg
sub
out
int
mov
jge
into
mov
icebp
jb
leave
ljmp
int
mov
inc
ds
and
pop
push
push
pop
add
dec
repnz
cs
pop
mov
xor
shrl
loope
pop
out
stc
stos
cmp
xorl
jo
scas
not
rorl
mov
mov
pop
inc
fwait
and
mov
aam
jmp
adc
add
popa
ret
sbb
cmp
ljmp
ja
daa
jb
xchg
dec
mov
outsb
add
lcall
xchg
mov
pushf
mov
in
add
rcrb
addb
cmp
int
xor
mov
mov
ret
adc
pop
insb
clc
ljmp
dec
mov
paddusw
add
dec
outsb
aam
test
out
fldcw
inc
sbb
sub
mov
inc
aaa
push
and
sub
jnp
cmp
xor
cltd
xchg
jnp
dec
popa
fcompl
jl
fsubs
cld
andl
inc
pop
popa
das
add
mov
stc
mov
ficompl
stos
add
add
insb
outsb
mov
cmp
mov
pop
sub
mov
sahf
sub
mov
in
ret
xor
test
test
movsl
push
int3
mov
mov
imul
daa
mov
dec
xor
or
mov
push
lea
adcl
out
insb
jg
inc
and
test
push
add
fisttps
add
pop
push
pop
imul
inc
xor
sbb
push
cmpsb
test
xor
sbb
stos
ljmp
push
add
jbe
ficoms
xchg
insb
pop
fwait
add
adc
dec
jmp
dec
outsl
fsub
cltd
push
mov
cmp
xor
test
xor
lock
out
pop
shr
loopne
movsl
mov
stos
push
cmp
std
mov
jg
xor
lds
pushf
insl
mov
sbb
jb
mov
bound
inc
pop
stos
add
sbb
aaa
jecxz
je
cmp
sub
cltd
add
repz
outsb
and
add
mov
lock
pop
scas
xchg
add
push
lds
sbb
outsb
out
dec
scas
pop
push
leave
std
sub
popa
push
test
int
test
sti
cs
lods
cmp
call
pop
sbb
cli
xchg
scas
jne
roll
mov
scas
addr16
adc
or
or
jae
pop
test
sbb
rorl
lahf
les
lret
ja
xchg
test
sbb
push
dec
insb
xorb
pushf
sub
push
test
inc
cmp
fsub
inc
pop
and
mov
stos
sbb
pop
les
mov
pop
inc
mov
adc
in
xlat
jle
std
test
out
loope
cmp
js
test
stos
adc
cmp
xor
lahf
pushf
fistps
in
jo
pop
mov
jmp
sbb
pop
mov
xor
mov
lea
or
loopne
ret
push
push
aas
out
loope
roll
push
aad
pop
jno
outsl
repnz
or
fsqrt
int3
fadds
cmp
adc
xor
dec
in
js
dec
inc
add
int3
fldl
mov
sti
sbb
pop
roll
mov
lea
aad
incl
or
ljmp
scas
sub
aas
outsl
and
jmp
mov
sbb
pop
jo
hlt
fildl
hlt
mov
add
sbb
sbb
aam
test
rorl
clc
jo
pop
jl
rcr
pop
mov
lcall
addr16
inc
movsl
test
jne
add
cmp
out
int
sbb
mov
in
push
flds
pop
pop
add
iret
ljmp
adc
mov
stos
push
mov
addr16
dec
cmp
enter
adc
push
fstp
and
outsl
pop
jb
cld
popf
lods
push
fcoms
xchg
roll
pop
mov
cld
jmp
adc
jne
xchg
bound
stos
pop
out
cmp
ljmp
sti
add
aad
mov
xchg
cmp
leave
lcall
sarl
call
xlat
aam
pop
addb
push
lret
mov
repz
rolb
sub
xor
sbb
xor
push
adc
imul
ds
fdivl
data16
shrl
or
adc
push
jb
jae
push
cld
xor
add
fs
cs
stos
sbb
out
inc
and
mov
insb
stos
push
and
mov
cs
out
out
dec
push
or
xor
pop
movsl
dec
sahf
subps
dec
lds
pushf
rolb
push
fsubl
and
cld
mov
ss
xorb
xchg
shll
orb
xlat
test
lcall
push
xchg
jl
lods
stos
pop
pop
into
mov
or
cld
imul
mov
sbbb
inc
xor
sbb
jne
aam
sbb
cmp
push
and
in
inc
stos
mov
mov
adc
xorb
popf
jne
mov
adc
mov
jb
mov
leave
jg
rol
je
adc
lret
loope
inc
pop
or
subl
xor
mov
pop
jmp
data16
push
jo
stos
les
and
push
adc
sbb
jmp
imul
das
adc
xor
int3
mov
lahf
adcl
jl
adc
loop
push
cmp
stos
pop
push
push
dec
add
mov
inc
sbb
movsl
sub
pusha
mov
and
cmp
adc
pop
sbb
mov
adc
sbb
xchg
or
arpl
mov
lds
loope
incb
std
xor
add
dec
cmp
sub
mov
fwait
out
add
add
mov
dec
mov
mov
out
in
add
or
jp
xor
sub
rcr
mov
mov
lahf
or
mov
push
ljmp
sbb
mov
into
addl
and
fisubl
add
negb
loop
lods
sbb
push
jle
aas
icebp
jbe
xor
outsb
add
push
and
mov
mov
jle
lahf
push
clc
rol
mov
xchg
shrb
push
jno
dec
add
mov
sbb
xchg
popa
and
js
mov
push
dec
and
andb
rol
shlb
divb
and
outsl
popf
in
mov
cs
cmp
fisttps
fcmove
imul
mov
fwait
hlt
add
dec
fwait
xor
inc
ljmp
pop
fstpt
jmp
fdiv
addr16
jg
ljmp
in
aad
sub
xchg
sti
dec
cltd
jge
mov
inc
sbb
and
test
les
insl
nop
in
lea
xchg
jmp
aas
dec
lcall
enter
adc
cmp
cmp
test
inc
cltd
cli
ss
jo
adc
mov
icebp
xchg
mov
xor
cmpsl
cmc
mov
ds
and
pop
push
xor
stc
test
and
sbb
xchg
push
adc
repnz
addr16
mov
lods
cli
pop
mov
pop
lret
enter
rcl
push
cmp
and
inc
mov
jge
mov
dec
lret
jnp
mov
cmp
dec
ss
out
pop
gs
cmp
inc
inc
call
pop
xchg
je
mov
push
push
inc
add
mov
xchg
jecxz
add
adc
push
and
sub
sti
dec
fcoml
pop
outsl
mov
lret
mov
jno
lods
cltd
xchg
inc
lods
fsubs
jo
mov
jae
pop
outsl
adc
int
xchg
push
and
mov
sub
add
cmpsb
mov
fs
jecxz
and
dec
lds
add
push
movsb
andb
cmp
loop
in
dec
jnp
jnp
aam
daa
lods
mov
add
lds
int
mov
add
in
push
mov
sub
mov
xchg
repnz
out
fistpl
fldt
mov
jp
pop
leave
add
les
mov
sarl
mov
fs
mov
popa
insb
mov
jg
push
sub
ss
add
dec
arpl
adc
lea
adc
sub
jns,pt
mov
cmp
lcall
das
pop
adc
pop
pushf
pop
lods
push
stc
stos
mov
lret
test
xor
movsl
verw
sbb
arpl
inc
mov
mov
sub
xchg
push
inc
jb
decl
push
push
dec
orl
cli
out
sbb
mov
mov
cmp
es
lea
sbb
push
mov
loope
adc
push
jge
fsubr
jno
push
push
test
pop
push
xchg
out
fidivrs
cmp
mov
push
in
lret
inc
mov
call
pushl
adc
bound
cmp
stc
adc
sbb
push
sbb
sub
add
mov
push
test
push
aam
xchg
mov
jmp
je
inc
jbe
fst
aam
jl
adc
jmp
pop
push
adc
insb
sbb
jo
pop
fsubrl
iret
mov
leave
sbb
in
inc
jl
fs
pmaxub
lahf
cltd
jne
cmpsl
xor
push
popa
xchg
jecxz
jns
xchg
dec
dec
sub
repnz
pop
cmp
and
loop
int
push
dec
sub
or
fnsave
or
into
nop
push
and
or
imul
mov
insl
xlat
or
push
and
mov
jne
adc
dec
lds
test
lods
push
sarl
insb
mov
orl
xlat
mov
inc
jmp
xlat
sub
xchg
push
cmc
addr16
sub
pop
xchg
add
outsl
add
and
call
or
sbb
mov
sub
sub
jge
fwait
xchg
xchg
loope
inc
lds
int
pop
dec
cwtl
and
aaa
inc
mov
add
push
jns
repnz
jp
sub
add
fs
push
cwtl
adc
int3
int
mov
or
cwtl
int3
or
push
lods
repnz
pop
dec
jo
mov
sub
aaa
stos
mov
hlt
lock
jmp
or
jae
clc
into
push
or
dec
inc
sbb
fmuls
lds
mov
or
out
xor
aaa
cwtl
vmovaps
xor
adc
inc
pop
stos
push
inc
pop
fistpll
scas
loope
fisubrl
cwtl
sahf
xor
mov
dec
mov
popa
or
ljmp
ljmp
test
dec
mov
jg
loopne
or
cmpsb
xchg
mov
cltd
in
sbb
cmpsl
jbe
inc
jmp
fcompl
andl
lahf
insb
imul
cltd
pop
stc
mov
xchg
rcrl
mov
fs
test
outsl
outsl
loop
fs
lods
pop
pop
cwtl
jnp
pop
xchg
adc
mov
pop
push
test
dec
bound
ret
decl
xor
jbe
cmpl
xchg
leave
pop
lcall
mov
xchg
aad
pop
add
test
add
add
mov
idiv
ds
ds
cwtl
cmp
sbb
or
pop
mov
cmp
mov
mov
shlb
dec
xor
and
aas
addr16
mov
sbb
je
dec
add
cmp
inc
mov
adc
mov
push
pop
dec
loopne
inc
and
xchg
inc
adc
es
or
in
sub
or
mov
add
enter
pop
sub
push
push
and
mov
pop
or
jecxz
jle
mov
sbb
mov
in
jb
mov
mov
out
stc
rorl
xchg
dec
lods
mov
mov
sbb
pop
nop
inc
adc
fisubrs
lret
or
push
cli
movl
add
or
scas
push
andl
mov
push
adc
lcall
and
and
add
lahf
lds
adc
sub
sbb
or
push
jbe
aas
movsl
pop
leave
adc
jecxz
scas
mov
dec
loopne,pt
push
adc
repz
test
scas
pop
inc
ds
in
mov
jg
pop
mov
push
or
sbb
icebp
imul
xlat
pop
pop
lods
scas
mov
pop
push
push
cwtl
adc
aad
insl
jp
sbb
xchg
dec
aaa
push
add
pop
pop
inc
mov
call
mov
out
xchg
mov
fbld
inc
rorb
test
sbb
popf
mov
xchg
loop,pt
notb
push
jge
push
sti
and
xor
jne
sbb
dec
push
mov
inc
or
jmp
and
cs
pavgw
movsb
in
add
repz
call
test
daa
inc
sub
pop
mov
sbb
xchg
and
inc
push
jnp
ret
pop
add
mov
fidivrs
fcmovnbe
push
in
push
jg
mov
adc
sbb
les
imul
loopne
cwtl
mov
rcl
outsl
pop
inc
cmp
xor
sub
sbb
dec
out
hlt
xor
cwtl
enter
lea
subl
imul
lcall
adc
pop
mov
push
mov
or
xchg
mov
xchg
hlt
lea
cmp
cmpsb
mov
add
incl
pop
cmp
adc
xor
and
inc
ss
pop
pop
push
and
es
sti
push
jo
pop
mov
and
xor
mov
mov
fisubs
xchg
xchg
jmp
dec
mov
adc
sbb
xchg
daa
pop
dec
mov
or
scas
aas
and
ja
jae
fs
and
xor
cmp
sahf
aam
nop
and
pop
mov
fdivrl
fs
push
cmc
fdivrl
bswap
push
insl
sub
fistps
ret
ljmp
push
test
imul
notl
jmp
mov
cmp
pop
cmp
mov
mov
sub
test
inc
mov
add
jo
push
push
insb
xlat
notl
adc
ret
dec
jp
and
mov
mov
jmp
icebp
std
in
jnp
mov
test
sub
xor
test
addr16
incl
mov
stos
push
dec
adc
or
movsl
lods
adc
andb
adc
inc
les
aaa
daa
and
fnstsw
mov
push
lret
jne
mov
xor
xor
roll
xlat
dec
xchg
outsl
jno
xlat
sub
cld
jge
icebp
inc
pshufw
or
jns
inc
or
dec
mov
hlt
ss
cmpsl
cld
fidivrl
xchg
push
mov
mov
jne
or
xchg
mov
mov
push
xor
sahf
out
insl
insl
addr16
sti
ret
pop
and
into
inc
in
push
jp
jp
add
inc
inc
xor
mov
loop
inc
inc
mov
sti
inc
and
cmc
lcall
xchg
cmpsb
adc
mov
xor
dec
jnp
faddl
scas
sbb
arpl
aad
cwtl
stos
xchg
mov
xchg
jle
dec
jns
out
ja
sti
movsl
mov
cmp
shll
mov
in
lahf
insl
icebp
int3
jo
out
faddl
stc
rclb
popl
ret
aad
rolb
out
lret
mov
orb
mov
add
xor
pusha
pop
rorb
std
loope
cmp
sahf
jmp
cltd
aas
scas
sbb
cld
movaps
inc
adc
enter
iret
aad
addl
push
icebp
in
sub
mov
imul
push
gs
dec
mov
aas
cld
cmp
inc
pop
mov
sbb
and
outsl
xchg
xchg
adc
aaa
push
mov
xlat
imul
or
das
psubusb
mov
cli
ret
hlt
std
push
cmp
add
mov
adc
lret
and
xchg
fmuls
mov
mov
pop
cmpb
les
or
scas
xchg
xchg
sahf
jo
mov
cmpsb
jecxz
repnz
pop
mov
cmp
jecxz
je
xor
mov
lahf
pop
push
push
jbe
arpl
cld
sahf
pop
inc
jno
xchg
mov
es
inc
cltd
imul
sbb
jo
and
xchg
out
movsb
aad
jl
loopne
sahf
inc
pop
mov
test
and
push
push
push
mov
mov
int
dec
icebp
mov
pop
lea
sub
pop
pop
imul
int
inc
inc
jecxz
mov
push
out
pushf
inc
out
out
jle
sbb
stos
std
add
lock
xchg
push
subb
pop
sub
addr16
addr16
das
loop
ret
and
inc
and
dec
jmp
lods
dec
test
pop
add
push
adc
decb
int
ficoms
sbb
out
in
xchg
ficoml
scas
pop
and
lcall
xor
mov
call
cmp
jle
add
jo
mov
loop
pop
xor
adc
and
inc
xchg
aaa
mov
bnd
enter
shll
arpl
dec
inc
outsl
adc
pop
lock
adc
mov
mov
push
call
adc
gs
in
add
mov
and
and
adc
std
sub
inc
mov
cmp
push
loope
pop
xor
pop
dec
jo
ss
mov
ret
xchg
cwtl
or
jno
cmpsb
sbb
add
mov
or
jbe
add
jge
pop
xlat
add
repnz
pop
jae
adc
mov
iret
fmull
pop
push
jge
in
xchg
sub
xchg
and
mov
scas
cmp
jae
loop
push
sub
sub
mov
and
sub
mov
repnz
shll
test
dec
out
popf
into
dec
and
cld
and
je
push
mov
testb
mov
pop
incl
les
adc
movsb
out
mov
ds
push
or
dec
pop
rol
xchg
mov
scas
jae
rcrl
add
mov
lret
test
push
dec
ret
inc
jns
test
ljmp
movsb
jno
mov
push
cmp
fidivrl
mov
int
sti
out
sub
lods
andb
mov
jbe
add
cmpb
ljmp
xchg
jmp
sub
xchg
inc
xchg
xor
fwait
xchg
frstor
push
stos
adc
jns
pusha
enter
sub
psllq
mov
mov
jns
ret
dec
lcall
scas
mov
push
addr16
xchg
iret
dec
outsl
daa
test
inc
or
lock
push
jne
fsubs
mov
sbb
push
inc
ret
lds
pop
pop
outsb
popa
bswap
imul
sub
pop
mov
jne
pop
into
adc
stc
jno
push
in
mov
rcrb
push
inc
dec
pop
inc
jge
pop
push
dec
add
out
add
insl
push
add
sbb
gs
jb
push
popa
sbb
iret
insb
cmc
xor
push
pop
jne
cmc
xchg
bound
jle
push
cmc
fnstenv
and
add
fwait
push
mov
aam
ret
mov
ficoml
cmpsb
pop
in
jg
fdivrl
xchg
jbe
test
jae
jns
loopne
shl
and
add
mov
adc
lret
mov
pop
cmpsb
cmpb
mov
lret
xchg
lods
cmpsl
sbb
scas
mov
int3
outsb
into
mov
or
in
jmp
lahf
out
xlat
sub
mov
scas
and
nop
je
lods
pop
xchg
aas
and
loopne
loopne
and
pop
add
icebp
dec
aam
dec
push
fimull
and
push
jns
scas
lret
add
or
push
in
mov
pop
decl
dec
daa
add
stos
xor
jbe
mov
cmpsl
sti
pop
neg
in
ret
les
inc
jl
rcrl
sub
dec
in
fld
push
shrl
call
hlt
jno
sbb
cmp
xor
inc
jne
lods
pop
push
cmp
inc
xlat
lock
add
icebp
cmp
cmpsl
dec
icebp
lahf
addr16
gs
out
jecxz
incb
and
sub
std
mov
push
adc
into
or
js
jno
pop
and
enter
pop
outsl
loopne
xchg
sub
mov
fsts
movsb
jns
mov
test
cmpsl
sbb
sub
add
and
ljmp
popa
outsb
scas
sub
mov
push
movsl
mov
int3
roll
in
mov
sarb
jbe
sbb
sub
cwtl
ror
insb
nop
xchg
xchg
shrl
orl
add
xor
inc
inc
xchg
sti
xchg
stc
outsl
js
fwait
inc
jae
imul
stc
sti
inc
sub
lods
sub
adc
dec
daa
jbe
lds
popf
out
and
push
pop
dec
push
inc
add
mov
into
pop
mov
mov
leave
loop
jge
idivb
ret
jmp
add
cltd
inc
negb
dec
push
repz
inc
addr16
dec
dec
data16
mov
idivl
hlt
inc
jae
sub
mov
test
sbb
enter
pop
jecxz
mov
xor
imul
mov
inc
mov
cs
pop
lret
sbb
gs
ret
sar
stos
js
lcall
pop
and
es
rorl
adc
or
loop
adc
ds
loope
push
inc
mov
add
incl
ret
pop
xor
mov
bound
std
sub
cmp
cltd
pop
mov
sub
outsb
mov
xor
andb
mov
movsb
cmp
xchg
fildl
test
fsubs
xlat
ss
mov
test
cmp
int
insl
pop
popf
subb
add
cmc
cmpsb
jg
jecxz
mov
mov
pop
ficoml
mov
js
ljmp
adc
adc
pop
es
xchg
ds
cmp
addb
add
cmp
test
push
scas
test
pop
ret
adc
cmc
aad
lcall
pop
stc
fcmovb
lcall
cmp
mov
mov
negb
jl
add
jmp
sbb
dec
add
cltd
call
bound
jno
xlat
js
pop
pop
out
mov
inc
pop
xchg
cmp
mov
add
popa
mov
pushf
push
jnp
xor
lahf
adc
mov
inc
sub
inc
out
subb
jbe
es
fnstsw
cld
cwtl
fnsave
jmp
mov
jno
test
adc
mov
inc
jg
bsf
sbb
xchg
incl
aad
ds
enter
fdivrl
mov
push
mov
dec
pop
sub
sbb
inc
push
dec
jl
cmp
jo
pop
sub
sahf
adc
loop
mov
xor
xor
xchg
pusha
mov
test
pusha
fcmovnb
or
rolb
and
cmp
test
stos
pop
lcall
mov
fisttps
rorb
jmp
sub
aad
cs
mov
mov
stos
jo
imul
in
sbb
enter
jl
test
lods
push
movsb
cmp
test
repz
pop
std
push
or
rolb
in
sti
popa
xor
call
dec
sub
xchg
xchg
clc
jl
mov
and
push
pop
inc
cwtl
gs
sahf
in
js
mov
pop
stc
jmp
mov
xchg
idivl
mov
sub
xor
adc
mov
cld
in
jg
out
jnp
pop
pop
pop
cld
outsl
and
xorl
add
bound
add
lcall
scas
and
cmp
inc
loopne
inc
mov
fwait
and
int
adc
scas
mov
repz
dec
cmp
jmp
nop
adc
adc
mov
stc
sbb
inc
sbb
aaa
mov
stos
push
mov
cli
xchg
mov
movsb
or
push
lods
push
stos
push
mov
mov
shrb
imul
xchg
adc
arpl
arpl
stc
loope
jbe
fdivr
dec
cmp
push
int
mov
adc
lahf
dec
push
loopne
or
sar
jp
pop
inc
push
adc
fld
adc
lods
or
in
sbb
add
sub
xchg
push
push
mov
xchg
out
icebp
rclb
cmc
mov
push
int
pop
mov
add
aam
mov
pop
jle
fwait
scas
pop
cltd
rol
mov
jbe
inc
bound
aam
add
repnz
stos
leave
xchg
mov
xor
es
sub
and
mov
adcb
test
dec
sbb
imul
stos
cmc
xchg
jns
adc
loope
mov
fwait
je
test
dec
enter
and
iret
loope
shll
loope
jb
data16
cmp
xor
out
xlat
mov
push
adc
jmp
movq
nopl
out
jle
jo
lock
mov
and
outsb
or
aas
jne
icebp
adc
adc
fucomi
cmp
xchg
or
and
nop
subl
dec
stos
loope
popf
mov
dec
pop
sub
imul
add
push
sbb
push
cmp
mov
lcall
or
push
add
push
int3
mov
lahf
push
into
mov
pop
movl
icebp
in
add
pop
ret
out
shrl
popa
jns
stos
dec
xor
lds
push
xor
popa
movsb
clc
pushf
dec
aad
loopne
outsl
out
xchg
cwtl
test
stc
sbb
cmp
xor
addl
les
push
xchg
pop
jno
mov
xor
shrb
xchg
jne
xor
shlb
sbb
mov
push
mov
addb
push
jg
xlat
inc
cltd
add
shl
lahf
movsb
filds
pop
out
xchg
pop
arpl
lahf
mov
sub
scas
xor
in
inc
or
stc
aad
repz
push
xchg
dec
lds
or
nop
pop
icebp
pushf
jne
notb
enter
mov
dec
mov
in
xchg
idivb
xor
sbb
inc
lock
lret
iret
lock
sub
rcrb
arpl
mov
pusha
sbb
xchg
jle
xchg
loopne
xchg
repnz
aaa
cmp
test
jg
add
inc
mov
jmp
lods
push
pop
sti
push
or
outsl
push
imul
pop
imul
mov
test
dec
sub
mov
add
stos
push
or
cmp
push
and
into
add
jnp
loope
fdiv
xchg
mov
adc
in
inc
mov
pop
cmpb
sub
pop
xchg
xor
xorl
mov
xchg
or
lods
jo
loop
push
daa
test
jnp
cmc
dec
inc
out
andl
rcrb
daa
repnz
sub
jne
push
and
mov
and
push
xchg
lds
and
ja
fsubr
ljmp
imul
dec
jb
loopne
and
dec
cmp
sbb
stos
pop
inc
adc
aas
loop
push
dec
mov
mov
jecxz
sti
mov
bound
cmp
fwait
hlt
lahf
je
popf
xchg
je
test
mov
inc
inc
movsl
sbb
adc
fisubs
daa
pop
inc
xlat
int3
int3
test
in
xlat
mov
pop
test
mov
cmp
jbe
inc
mov
imul
stos
orb
sub
and
movsl
add
es
outsb
jl
add
rol
jnp
ss
cmp
cld
test
mov
iret
test
cwtl
mov
jo
add
push
mov
add
loop
int
cmp
cmp
cmpsl
sub
dec
cmpsb
jl
and
dec
cltd
aam
add
jl
daa
cmc
nop
sahf
scas
loop
test
les
ss
and
popf
cs
ret
das
in
mov
pop
mov
sbb
pop
fistl
movsl
notl
popf
rolb
xchg
xor
leave
cmp
lock
sbb
movsl
push
mov
subb
loop
cmc
ret
aaa
jae
or
pushf
hlt
xor
sahf
sub
shrl
pop
lea
call
into
pop
aaa
push
inc
inc
push
mov
aas
or
push
push
cmp
or
out
jo
add
jo
leave
ja
mov
mov
adc
adc
enter
addr16
call
movl
mov
mov
sahf
jne
shl
sub
clc
add
mov
inc
jne
sbb
mov
xlat
insb
addr16
jl
push
jl
mov
jl
orl
cltd
jo
dec
jecxz
mov
inc
es
aas
xor
fisubrs
out
jo
ja
hlt
inc
push
cmpsb
enter
add
fs
adc
sti
dec
loopne
mov
shlb
or
xlat
jnp
insb
hlt
sbb
aam
mov
xchg
sbb
in
int
xchg
cmp
popa
cld
insb
and
jl
and
dec
nop
mov
loop
adc
out
push
mov
jmp
sub
lret
mov
sub
inc
add
bound
aaa
adc
nop
xchg
xchg
sub
push
mov
ds
mov
push
sbb
fwait
push
mov
ljmp
adc
call
lret
stos
dec
dec
mov
lods
push
push
jl
push
icebp
and
clc
dec
adc
stos
lret
dec
sbb
rcr
pop
adc
gs
sub
push
test
jae
mov
sub
popf
dec
add
dec
aas
push
add
push
fwait
push
outsb
dec
cmpb
push
sub
out
mov
repnz
in
pop
mov
fwait
cmc
dec
lret
dec
lret
fldenv
adc
inc
cltd
clc
out
mull
int3
in
sub
sar
ds
out
inc
cmp
push
clc
add
fcoml
out
mov
leave
fildll
xor
ficoml
scas
test
rcrl
sbb
test
leave
movsb
mov
bound
pop
pop
jecxz
fidivl
push
jle
sbb
test
dec
mov
cmp
enter
add
sahf
lret
xchg
sbb
adc
out
cwtl
mov
mov
in
lret
xor
jbe
dec
addr16
hlt
dec
rcl
jl
sub
pushf
sub
push
ret
das
and
ror
or
dec
inc
inc
cmpsb
stos
mov
inc
jo
inc
hlt
xor
mov
sti
aas
ret
xadd
sahf
pop
mov
dec
shrb
and
jb
jnp
dec
add
mov
roll
xor
imull
push
cmp
push
scas
int
imul
test
insl
cli
lret
fstl
int3
out
and
rorb
in
lock
mov
test
cmp
mov
sub
jne
testb
inc
inc
jnp
sbb
out
sarb
jae
repz
or
add
aas
push
sbb
mov
mov
cmp
out
pop
aas
cmp
push
jmp
mov
pop
sbb
xor
add
addb
sbb
repz
cld
adc
and
jmp
adc
bound
sbb
add
adc
out
nop
gs
mov
jno
mov
inc
movsb
cmp
outsl
leave
pop
jns
add
das
in
fiaddl
movsb
mov
and
push
or
imul
dec
xchg
cltd
push
je
jmp
outsl
stos
pop
pop
xchg
sub
sbb
mov
sbb
scas
ror
lods
insl
pop
xor
in
push
add
xlat
cmp
movsl
mov
loop
sub
outsl
fcomi
pop
jg
cmpsb
fmull
std
int3
pop
fdivr
cltd
or
jnp
pushf
es
xchg
xchg
idivl
jb
xchg
ja
aad
popa
shlb
push
add
dec
jae
shrl
inc
ss
stos
fldcw
movsl
aad
push
idiv
fcomip
cmpsb
sbbb
stos
lods
adc
popf
add
imulb
test
inc
icebp
das
mov
les
sub
loopne
incb
popf
adc
leave
add
pop
add
mov
adc
dec
pop
imul
lds
sub
sub
pop
aad
test
int
fst
mov
mov
scas
sbb
pop
je
mov
sbb
int3
mov
mov
and
jmp
jecxz
scas
das
icebp
push
sub
dec
mov
pop
cmp
imulb
pop
loopne
mov
jne
andb
enter
insl
xor
or
xchg
popa
pusha
mov
fstl
push
jae
push
inc
inc
mov
inc
xchg
ret
lea
and
and
lea
ficoml
or
inc
cltd
imul
xchg
sub
xchg
repz
imul
mov
fadds
add
loop
cmp
adc
arpl
push
cli
fistpl
insb
adc
cmp
xchg
negl
jns
ret
or
adc
mov
sub
mov
aaa
push
cmpsl
sbb
adc
mov
jae
insl
movsl
push
mov
sub
fs
scas
or
and
mov
dec
lods
outsb
stos
cmc
fdivp
mov
repz
mov
data16
and
fucom
jecxz
sti
dec
inc
imul
pop
sbb
mov
test
aaa
dec
mov
das
jbe
push
in
hlt
dec
cmp
js
adcb
jg
inc
jle
sbb
loop
mov
pop
fisttpll
inc
dec
pushf
insl
rcrb
pop
xchg
sub
pop
push
jb
mov
stos
mov
lcall
mov
inc
ret
xor
test
filds
pop
gs
nop
mov
ret
push
push
mov
stos
lock
or
jmp
inc
dec
inc
in
dec
dec
fsubs
arpl
aaa
adc
sbb
mov
cwtl
xchg
mov
lea
inc
adcb
cmp
fs
jmp
or
icebp
subl
inc
jo
push
scas
sub
push
mov
int3
inc
in
xor
inc
shr
pop
mov
mov
dec
jmp
into
xor
int
mov
fldcw
mov
xchg
mov
xchg
add
or
fidivs
fwait
cli
mov
cltd
cmp
cmc
icebp
ficompl
sbb
cmp
fcmovbe
test
in
icebp
mov
enter
movsb
pop
gs
enter
pop
and
cmp
in
jns
inc
jg
jg
daa
sbb
insb
push
subb
je
mov
les
cli
lahf
xor
std
add
jae
idiv
push
repz
push
push
nop
sub
push
jae
jecxz
and
inc
xchg
fdivrs
ljmp
stos
mov
xor
cmpsl
adc
sub
inc
loopne
cmp
sahf
fs
lock
jmp
insl
outsl
sbb
loop
and
pop
dec
stc
cs
das
inc
fimull
mov
and
mov
xor
push
leave
mov
ficompl
pusha
mov
xor
jp
and
sbb
sti
pusha
addr16
hlt
xchg
sbb
test
and
leave
cmc
andl
dec
pop
jle
mov
cwtl
outsb
dec
jb
test
mov
into
push
pop
push
incb
mov
xor
mov
out
call
add
pop
jp
sub
mov
shll
ftst
je
adc
cltd
dec
jbe
lahf
sub
out
xchg
arpl
inc
jno
and
clc
pop
jg
push
push
imul
rcrl
cmp
imul
arpl
lahf
pusha
loop
lret
test
js
push
fbld
loop
mov
int3
and
dec
jnp
insl
sub
sbbb
mov
xchg
and
jns
daa
jnp
xor
mov
dec
in
rclb
xor
loopne
and
lcall
shlb
cmp
fdivrs
jno
cli
sarb
insb
mov
aad
adc
mov
lock
arpl
enter
mov
push
out
ror
lret
pusha
jle
andb
jo
test
mov
sarl
dec
cmc
push
arpl
sub
aam
mov
je
jb
popa
sub
pop
inc
sub
repnz
add
mov
psllq
jle
mov
pop
mov
vphsubbw
sub
rcr
dec
dec
inc
ret
cs
xor
movl
jmp
add
lret
inc
popf
sub
aas
cmc
lds
sarb
into
iret
adc
push
outsb
and
cmp
movsb
aam
mov
inc
stos
jmp
jns
imul
fsub
xchg
iret
inc
mov
arpl
jns
jbe
lcall
shll
jae
mov
fnstsw
fidivl
jo
aas
das
sub
aas
lcall
inc
insb
rcl
inc
add
dec
enter
push
dec
push
and
pop
scas
jnp
loope
mov
mov
sbb
xor
adc
cmp
dec
int3
into
inc
mov
fstl
dec
stc
jno
lods
adc
jecxz
lods
arpl
test
loop
fnstsw
orl
xor
sub
stc
add
jbe
or
add
roll
cmpsb
pop
lret
das
add
mov
int
sbb
ljmp
add
or
int3
xchg
push
fnstsw
xchg
insl
mov
sbb
or
push
xchg
dec
mov
jne
cmpsl
cli
cmpsl
mov
lock
in
outsb
jo
inc
fimuls
lret
or
mov
cld
test
outsb
add
pop
or
jns
dec
pop
sar
ficoms
popf
stc
les
mov
inc
pushf
mov
and
xor
test
imull
mov
adc
sbb
pop
lods
popa
jg
sbb
xchg
leave
adc
xchg
adc
je
loope
cmpsb
jle
cmp
sub
into
addr16
xchg
scas
jbe
mov
incl
outsb
pop
pushf
imul
pop
arpl
ljmp
sub
fsubrl
hlt
arpl
out
cwtl
jmp
addl
outsb
sbb
xchg
je
cs
jmp
cmp
mov
mov
in
dec
ljmp
pop
jnp
sub
inc
add
or
inc
mov
rorl
mov
lds
repz
mov
mov
rolb
jle
push
lcall
push
out
sbb
mov
sbb
call
dec
or
mov
clc
into
out
xchg
repz
iret
in
jbe
inc
stos
addr16
mov
rorl
testb
jg
inc
adcb
les
aad
std
repz
fistl
cmpsl
lahf
repnz
jnp
insl
add
pop
mov
cli
mov
cmpsb
imul
mov
dec
std
push
dec
sbb
jb
and
dec
sub
int
fistpll
repnz
push
cltd
sbb
dec
adc
leave
and
mov
fisubrl
inc
mov
icebp
or
enter
add
das
and
test
push
jbe
pop
repnz
adc
and
xchg
daa
pop
mov
xchg
inc
jmp
aaa
stos
sarl
fldcw
out
imul
jb
jbe
rcrb
outsl
cmpsl
aas
insb
leave
push
aad
jl
xchg
push
fs
fcoms
test
aad
xchg
loop
fdivr
imul
addr16
xor
push
mov
loopne
imul
sbb
mov
jl
xchg
pop
jge,pt
inc
push
inc
in
inc
pushf
adc
mov
ds
cmpsb
je
or
and
mov
adc
jns
and
lcall
jnp
lods
sub
add
scas
ret
jecxz
int
fs
mov
adc
or
xor
mov
add
in
repnz
mov
ret
lock
and
popf
pop
ss
dec
in
cmpsl
mov
or
lock
je
stos
dec
push
jge
hlt
clc
mov
push
and
scas
add
mov
xchg
or
fs
jle
ror
sbb
inc
std
enter
push
int
dec
aad
dec
pop
aaa
adcl
mov
repz
sub
xchg
add
int
jp
push
sub
jbe
sbb
gs
jnp
jmp
dec
push
pusha
push
mov
ljmp
pop
mov
shlb
mov
popf
jo
test
data16
ja
js
scas
xor
pushf
mov
add
xchg
cmpl
jo
mov
lret
cmp
cmp
aad
and
pop
adc
xchg
mov
push
jmp
fmull
and
mov
in
or
lcall
in
icebp
mov
mov
push
inc
push
xchg
rol
pop
jnp
push
out
mov
mov
test
stos
aas
stc
mov
sbb
push
cmp
inc
jo
sub
loop
rcll
pop
push
push
sub
cmp
rolb
imul
pop
adc
add
or
cmp
loopne
xchg
sbb
push
and
outsb
je
enter
jmp
xlat
pop
enter
jecxz
cltd
push
lret
xor
jg
and
jb
mov
sbb
mov
xchg
call
xlat
sub
inc
cs
jecxz
jae
push
xchg
push
jecxz
mov
shll
rcr
push
adcb
inc
and
xor
data16
sahf
out
js
nop
dec
cltd
xor
out
and
cmp
adc
clc
insl
dec
push
sahf
sahf
sahf
lret
lret
xlat
add
push
mov
pusha
test
sarb
inc
rolb
pop
outsb
sbb
cmp
insb
inc
add
sub
outsl
rolb
pop
jl
pop
push
xor
scas
popf
xchg
sbb
mov
sub
cmp
xchg
add
ds
addr16
stos
loope
sub
and
lcall
pushf
cmp
xchg
jmp
jo
sbb
into
popa
shlb
in
les
mov
push
mov
push
or
cwtl
mov
xor
leave
mov
dec
sbb
in
les
out
ljmp
xor
lahf
mov
xchg
mov
mov
jae
mov
pusha
lock
lea
add
leave
mov
xchg
out
dec
jle
push
jp
jl
mov
mov
imul
loop
push
outsl
push
movsb
in
ret
jno
mov
and
aas
outsl
andb
dec
ja
xchg
mov
pushf
out
xchg
dec
xchg
loopne
orb
mov
aam
jmp
fwait
xor
dec
push
mov
mov
or
mov
aad
test
mov
pop
std
js
mov
into
push
cs
das
sarb
jno
pop
push
xor
inc
sbb
xchg
mov
ljmp
pop
stos
je
cmp
cmovno
pop
mov
jg
out
and
cwtl
push
sti
dec
xlat
jmp
push
push
in
and
jl
push
cmpb
frstor
cs
loop
imul
push
jge
pop
sub
daa
push
fs
not
or
aas
mov
fstpt
cmp
pushl
lcall
or
aad
pop
mov
negb
stos
adc
jae,pn
inc
ret
clc
idivb
fisubrl
fwait
jo
adc
arpl
pop
xchg
imul
cld
cmpsl
push
push
dec
into
stos
sub
xchg
mov
adc
in
cmp
js
rorl
pop
mov
js
push
insl
out
dec
dec
adc
cmpb
mov
push
jb
sti
bound
sub
and
and
loop
fsubrs
fs
lcall
xor
cmp
rcll
mov
lods
int3
stc
inc
in
loop
test
clc
mov
aaa
sbb
and
inc
dec
nop
jne
out
jae
pop
mov
test
test
pop
mov
push
sbb
cmp
out
pop
hlt
int3
fwait
cmp
scas
push
jl
push
dec
pop
scas
mov
pop
lret
push
es
lcall
cmpsl
push
cmp
out
test
das
fildl
inc
mov
push
adc
adc
in
lret
jp
lock
mov
cwtl
cmp
lcall
in
add
bound
jne
daa
call
and
jmp
mov
pop
push
xchg
inc
ljmp
or
iret
adc
cmp
pop
je
adcb
jns
arpl
add
hlt
pop
pushl
push
pop
cli
dec
jne
jmp
xchg
mov
lahf
out
push
jp
cltd
ss
lcallw
add
cwtl
mov
dec
das
dec
cmpsl
mov
das
bound
into
popf
xchg
std
gs
xorb
mov
ret
mov
add
fildl
in
shlb
test
sub
pusha
mov
cmp
push
pop
ja
movb
jo
ds
loop
push
dec
dec
test
mov
cmp
cwtl
lcall
xchg
push
sub
push
cmc
cmp
testb
sub
lock
lea
add
fadds
push
and
pop
aaa
addr16
in
pop
roll
lret
cmp
fcompl
es
push
fld
cmp
mov
rcr
ss
push
arpl
icebp
xchg
jecxz
out
in
lret
lret
call
dec
jl
mov
xor
test
ljmp
push
out
adc
clc
pop
adc
adc
mov
andl
push
xchg
stos
xchg
aad
ss
in
in
jno
repz
pop
xchg
in
dec
pop
cs
fisttps
sbb
shrl
mov
dec
push
pop
or
xor
pop
stc
scas
xchg
mov
subl
push
scas
adc
xlat
test
xor
repz
scas
shrb
mov
into
aad
es
sbbl
das
pop
cmc
dec
dec
out
jl
mov
jns
xor
pop
shr
lret
cld
dec
cmp
es
pop
xchg
lret
jb
sbb
into
xchg
mov
movsb
or
fsts
push
push
rol
cltd
popa
es
add
sub
mov
sbb
mov
fxch
addb
cmp
pop
notb
out
icebp
adc
pop
or
movsl
lahf
shlb
jmp
pop
inc
push
mov
mov
sbb
xor
and
out
xchg
xorb
mov
bound
lret
bound
lcall
mov
test
jl
mov
push
push
cmpl
sbb
mov
jb
mov
in
fidivrs
push
repnz
jo
xchg
mov
or
loop
sub
test
outsl
rcl
and
loopne
mov
dec
fsub
or
lods
and
andb
dec
and
arpl
in
sbbb
aam
xchg
std
jbe
testl
rcrb
mov
fstp
inc
cmpsb
fbstp
repnz
and
jne
mov
movb
xor
sarl
jg
push
call
mov
cmp
dec
mov
cmp
sbb
lahf
adc
dec
stos
cmp
int3
out
dec
lret
mov
jp
and
sbb
add
mov
xor
sub
sub
or
int3
adc
movsl
lock
xchg
xorb
add
fcoml
fidivs
push
hlt
roll
sub
jnp
push
int3
aaa
xchg
icebp
dec
je
jg
mov
clc
push
sbb
ret
mov
push
out
daa
sub
subb
aas
lea
add
mov
into
xchg
stos
and
mov
mov
out
iret
sti
mov
lods
pop
jmp
dec
mov
push
add
out
cmp
mov
xor
pop
ja
jg
or
mov
mov
mov
cmp
pushf
mov
icebp
rclb
jnp
pop
sahf
pushf
inc
mov
sbb
lcall
add
adc
mov
sub
push
adc
and
xor
push
push
cmc
push
ljmp
out
jge
and
sbb
adc
adcl
decb
xor
lds
mov
pop
out
cmp
ljmp
int
mov
addr16
paddw
inc
aad
push
and
xor
xor
jge
aam
sahf
cs
dec
pop
jge
mov
adc
iret
cmpsl
xchg
insl
inc
pop
sub
pop
stos
pop
jl
test
lods
scas
loopne
inc
or
lods
jae
push
fimull
movsb
out
imul
mov
loope
add
add
ja
sbb
ret
mov
decb
rcrl
mov
lds
out
jp
test
cmp
int
dec
mov
xchg
andb
aad
mov
test
mov
adc
or
cmp
inc
mov
stos
fisttps
pop
lods
and
add
cmpsl
lock
loope
lret
shufps
push
ret
cwtl
inc
incl
test
pop
pusha
xor
sbb
jle
and
test
mov
cmp
cltd
out
mov
mull
cmpsl
lods
push
xor
shrl
cmc
lcall
dec
lock
xchg
pop
xchg
mov
imul
mov
stos
rcr
mov
lcall
decl
repz
into
jmp
sbb
sti
test
add
cmp
pop
nop
das
lds
sbb
inc
or
loop
cld
push
inc
lahf
shll
sub
fs
shrl
mov
xor
mov
pushf
dec
mov
mov
std
psubd
addr16
push
inc
mov
pushf
jmp
sbb
pusha
xorl
push
and
and
xor
jne
xchg
je
das
out
and
push
jecxz
mov
xor
xchg
adc
xchg
mov
mov
cltd
ficoml
stos
jg
add
pop
cmp
dec
mov
xchg
cwtl
sbb
inc
mov
mov
sub
pusha
mov
mov
xchg
cmp
data16
xchg
mov
mul
dec
mov
cmpsl
mov
cmpsb
jg
aas
pop
out
daa
addr16
daa
xor
or
fidivrs
dec
cld
adc
call
pop
lods
jle
stos
icebp
jno
dec
movl
js
push
test
and
push
xchg
jbe
fsub
mov
lret
ficompl
mov
push
mov
out
and
addb
and
pop
xor
pushf
jmp
xchg
xor
pop
mov
fnsave
loope
mov
hlt
das
insb
fistl
push
ds
sbb
add
cmp
mov
clc
push
sbb
xchg
fs
dec
aaa
lret
jne
cwtl
add
or
sub
mov
inc
or
rolb
stos
lret
push
cmp
mov
sub
js
lahf
mov
addr16
pop
or
dec
rorl
clc
dec
mov
arpl
mov
xchg
or
xchg
pop
inc
push
fnstenv
adc
rorb
or
call
lcall
enter
xor
mov
lret
cmp
add
je
jge
jae
pop
cltd
test
insl
hlt
rorb
frstor
ljmp
in
sbb
mov
push
leave
xchg
pop
ljmp
or
mov
jae
cmp
or
cwtl
inc
push
adc
rcrl
mov
or
push
mov
cmpsb
fs
lock
ljmp
jmp
cmp
pop
sub
jecxz
inc
es
or
pop
test
mov
mov
push
jg
lods
mov
cmp
dec
in
movsl
add
xchg
es
and
jg
testl
xchg
sbb
cmp
mov
xor
adc
adc
mov
mov
pop
push
adc
cmp
test
out
mov
mov
int
hlt
xor
mov
clc
hlt
ds
adc
xor
add
ss
mov
pushf
call
mov
andb
mov
pop
icebp
jecxz
stc
scas
cmp
jno
inc
movsb
push
in
pusha
in
jge
jmp
test
jle
pop
icebp
push
or
rcll
mov
lea
jge
or
inc
test
mov
cwtl
scas
or
sub
fidivrs
in
and
adc
aad
scas
imul
add
or
scas
mov
jno
and
leave
sbb
mov
cmp
inc
les
lds
les
mov
inc
orl
push
rclb
mov
xchg
outsl
jmp
ljmp
ds
and
push
lcall
cs
int
fnstenv
ret
pop
insl
scas
add
push
hlt
lock
mov
jp
in
mov
outsb
insb
xchg
cmp
sub
mov
out
jge
icebp
add
enter
xlat
sbb
add
in
adc
subb
sub
lcall
cs
adc
cmp
xchg
sub
and
lcall
dec
out
add
daa
and
repnz
repz
scas
daa
sti
pop
sbb
cld
daa
into
outsl
fwait
xor
add
daa
sub
test
mov
jno
mov
pop
and
jns
imul
and
clc
testl
clc
in
lods
mov
and
clc
imul
xor
add
xor
xchg
hlt
es
scas
popa
lea
imul
sub
aas
sbb
ss
jbe
lods
outsl
hlt
cmp
inc
fcoml
or
mov
rcrb
sub
and
in
mov
inc
pop
adc
out
inc
and
mov
xor
cwtl
mov
push
andb
pop
ss
fcoms
pusha
fldl
cs
aas
jecxz
inc
fisttpl
push
repz
xlat
stc
loop
into
mov
stc
lahf
push
call
jne
lds
mov
shrl
punpckhwd
gs
sub
mov
call
mov
sbb
arpl
inc
pop
pop
insl
mov
xchg
mov
ljmp
xchg
les
mov
add
out
rclb
jl
jae
cmpsb
insb
fsubrl
repz
dec
cmpsb
inc
into
adcl
or
lret
cmp
jo
iret
mov
mov
mov
cli
push
ds
outsl
shlb
stos
out
jmp
adc
jnp
mov
gs
sbb
lds
loop
pop
or
pop
push
ret
lahf
mov
mov
mov
and
pop
bound
push
or
or
xor
sub
cs
jle
js
fiadds
or
arpl
and
sarb
mov
inc
cmp
cmp
test
outsl
jae
mov
ret
divb
add
repnz
push
sti
fsubp
gs
mov
jecxz
pop
xchg
das
roll
inc
xchg
sub
dec
loopne
push
ret
cmpb
lods
fistpll
repnz
and
mov
out
mov
pop
mov
jge
mov
stc
lods
into
int3
fwait
orb
jp
in
std
popf
int
aaa
scas
mov
cmpsl
pop
or
iret
cltd
pop
in
xchg
add
mov
adc
cmpsb
test
xorb
cltd
les
push
pop
push
mov
ljmp
jne
push
cltd
cmpsl
jle
pop
vmovntps
leave
mov
dec
mulps
pop
lds
mov
sti
xchg
call
scas
push
idivl
clc
and
dec
call
popa
rorl
insl
mov
jno
sub
mov
movsb
jno
jno
dec
cld
in
mov
jne
lods
inc
rorl
test
mov
fcompl
jb
mov
mov
pop
xchg
pop
in
pusha
popf
and
ror
mov
pop
in
cltd
mov
idivl
in
clc
dec
xor
popa
mov
nop
jmp
data16
pop
jg
xchg
xchg
push
inc
xchg
cli
sbb
repz
ret
sbb
shlb
mov
xlat
or
or
cs
xchg
fldenv
ret
fcomi
cltd
push
fisubrl
mov
or
push
jnp
mov
or
in
lahf
sub
xor
push
mov
mov
jl
xchg
outsl
mov
and
mov
push
pushl
xor
scas
je
mov
pop
in
lret
aam
in
test
enter
and
cmp
pusha
pop
popa
fnstcw
dec
loop
mov
or
mov
cli
push
add
sub
dec
in
xchg
les
push
jp
test
push
pop
iret
rcrl
out
mov
cmp
fcoms
insl
xor
imul
lods
scas
dec
lds
cmpsb
pop
xchg
sbb
xchg
jmp
int
and
xadd
ss
rol
cmp
mov
xabort
cmp
sbb
lret
movsl
push
lretw
pop
jle
add
loopne
lods
mov
sarl
enter
xor
pop
ja
sti
jg
jge
jmp
add
repz
fists
cltd
add
push
xchg
and
inc
popf
mov
cmp
push
and
pop
fisubrs
es
ret
inc
popa
sbb
scas
adc
cmpsb
add
out
js
push
das
sbb
adc
mov
test
jae
scas
inc
iret
cmc
mov
out
mov
jmp
adc
cmp
mov
addr16
mov
lods
daa
sbb
les
xor
sti
aaa
sahf
sbb
arpl
sub
dec
aaa
jp
mov
in
inc
inc
loopne
scas
js
or
fistpl
mov
cs
inc
add
mov
push
sub
sbbb
dec
lret
dec
fcmovne
push
xchg
push
leave
push
loopne
push
out
xor
and
fldl
ja
in
pop
push
test
in
mov
popf
add
xor
xchg
or
xchg
ss
sti
call
scas
and
fisubs
icebp
mov
out
jae
sub
lret
add
loopne
out
fstps
iret
push
lods
mov
notb
ss
data16
aam
dec
mov
ss
mov
adc
jl
pop
cwtl
mov
vmovntps
sbb
in
cwtl
jge
jne
rorb
icebp
jle
std
push
cmp
mov
ret
scas
shrb
repz
add
or
test
mov
dec
and
out
ret
lret
movsl
dec
dec
ficoms
ret
std
ss
or
nop
cmp
xchg
mov
lock
mov
mov
add
mov
xor
sahf
inc
inc
out
lods
test
cmp
xor
add
or
mov
cli
sub
dec
rcr
jmp
xchg
and
sahf
cld
cld
into
rep
sub
leave
push
cmpl
add
mov
mov
lret
prefetch
mov
test
pop
jae
add
mov
dec
mov
mov
push
mov
std
icebp
mov
gs
outsb
xor
sbb
lcall
out
scas
sbb
push
mov
fildl
cwtl
mov
push
fsubl
mov
insl
push
jmp
push
sbb
gs
cs
mov
pop
int
jne
sbb
decb
mov
push
cmp
scas
add
cmp
dec
jnp
mov
cli
in
imul
lret
xchg
fdivl
mov
fnstenv
dec
add
je
inc
idivl
push
xlat
jmp
lods
stos
jo
out
repnz
lods
pusha
outsb
es
mov
out
sbb
rorl
pop
popf
push
cmp
mulb
jb
scas
jne
or
popf
push
add
xlat
jbe
pop
pop
decb
aaa
xchg
xor
mov
shll
or
and
adc
adc
lea
cmpsb
jecxz
ret
mov
std
fistl
adc
ss
daa
jecxz
cmp
mov
xchg
out
add
fs
divl
fwait
pop
lea
das
inc
adc
aad
adc
and
data16
cpuid
or
mov
data16
lock
lods
fucomi
sbb
push
mov
and
shrl
mov
or
cmpsb
pop
movsl
push
and
xchg
out
loope
sahf
inc
ret
or
das
dec
mov
andb
and
out
dec
imul
dec
data16
sti
int3
test
inc
aam
lods
mov
cli
add
test
inc
dec
lock
mov
fsts
adc
jmp
dec
cmp
fcoml
pop
adc
cmpsb
mov
enter
ds
data16
cmp
daa
stc
sub
inc
dec
adc
xor
fists
and
std
jge
popa
dec
je
gs
loope
int3
or
mov
push
decl
mov
loopne
pop
or
aas
in
aad
fnstsw
inc
xorb
lock
ficoms
pop
jnp
sub
pop
movntq
and
and
jl
xor
scas
adc
sbb
into
xchg
dec
das
movsl
mov
mov
mov
repz
cmp
mov
adc
jns
iret
loopne
fdivl
cmp
mov
push
out
adc
test
movsl
xchg
xchg
push
sahf
pushf
push
and
out
pop
and
xor
push
lock
shll
cmp
loope
ficoms
jnp
add
sbb
rorl
xchg
push
pop
lea
iret
pop
jns
testb
push
or
leave
loopne
mov
daa
inc
divb
jmp
xor
dec
jne
ljmp
in
cmp
add
scas
pop
cmp
jp
sbb
pop
xor
call
adc
add
loope
inc
lret
mov
pop
dec
xor
rcrb
incl
pop
cs
xor
mov
mov
sub
adc
jge
rolb
xchg
sbb
push
loopne
xchg
or
scas
sbb
jmp
sahf
add
jo
push
or
and
stos
push
cmp
and
sbb
shlb
jae
into
mov
stos
leave
test
ja
popa
sub
fstps
sub
ss
jge
or
pop
or
fisttps
mov
or
js
xchg
xor
ret
loopne
pop
lahf
dec
repnz
aas
jecxz
add
lods
xchg
xchg
push
rorb
cltd
popa
imul
fisubl
pop
mov
jecxz
mov
pop
scas
jg
and
stc
xor
jl
and
lock
jmp
xchg
fptan
sub
mov
ljmp
add
inc
loopne
jl
and
mov
xchg
pop
lock
gs
lahf
sub
movsb
in
add
mov
cld
dec
pop
sarl
cwtl
mov
andl
subl
dec
dec
adc
adc
div
fdivl
jns
arpl
dec
inc
mov
imul
push
repnz
scas
add
dec
xor
and
mov
ljmp
fists
jo
pop
or
xchg
aas
sbbb
mov
adc
sub
xchg
or
arpl
mov
movsl
push
nop
xor
data16
int
enter
push
aaa
icebp
and
fiaddl
lcall
adc
jmp
movsb
ret
int3
xor
mov
pushf
movsl
pop
flds
or
mov
xchg
lods
push
lret
sbb
loop
in
pop
in
and
mov
bound
push
mov
or
gs
cmpsb
scas
in
xchg
lods
sub
mov
leave
push
sbb
fimuls
pop
inc
std
int3
repz
lock
pop
daa
lock
push
jne
cmp
outsb
rol
cli
aam
test
rcrl
aad
mov
test
out
dec
cmpsb
cmc
pop
shll
cmp
mov
cmp
out
adc
mov
das
dec
add
mov
lret
add
sbb
xorb
xchg
aaa
xchg
pop
aaa
lret
inc
add
adc
sub
cmc
push
pop
inc
int3
add
lcall
inc
aas
popa
fs
mov
pop
int
imul
add
mov
adc
mov
jp
mov
addr16
xor
jo
dec
cwtl
repnz
mov
xchg
out
js
add
test
mov
lods
movsb
sbb
sar
mov
add
sub
push
mov
xchg
or
movsb
rolb
adc
mov
jmp
insl
and
sub
adc
jecxz
xlat
das
mov
pop
mov
dec
lret
sbb
imul
push
lock
lret
mov
or
sbbl
js
outsl
add
icebp
inc
or
or
xor
into
mov
das
fisubrl
mov
or
ljmp
xchg
jno
adc
pop
xor
sarb
mov
lret
or
jbe
xchg
sub
or
aad
add
dec
jg
push
sub
push
cmc
sbb
jmp
mov
sbb
push
pop
xchg
nop
jecxz
test
mov
xor
sub
and
push
jmp
xor
es
jp
iret
cld
sub
cmp
scas
fs
xchg
loope
push
pop
insl
xor
cmpw
push
mov
add
jno
mov
sub
mov
or
mov
lret
addr16
dec
icebp
scas
mov
sub
insb
push
mov
dec
push
jnp
sbb
and
roll
xchg
cmpsb
mov
aas
leave
sub
in
adc
gs
rcl
aas
inc
scas
push
pop
mov
inc
mov
xor
cmp
xor
pop
pop
sbb
add
dec
push
out
sbb
jae
mov
pop
test
dec
in
jns
inc
jae
inc
call
mov
adc
cwtl
fdivrp
js
cwtl
or
xchg
incb
push
test
jns
jp
jno
push
aam
fistps
movsl
adc
icebp
sub
insl
mov
divb
adcb
inc
call
mov
sub
jmp
addr16
shll
and
shll
xlat
arpl
bound
xchg
mov
daa
xor
fcoml
mov
je
movsl
int
outsb
xchg
dec
or
ja
das
push
lea
rol
inc
repnz
mov
add
cmp
inc
xchg
pop
sar
xor
inc
add
mov
xor
mov
push
mov
mov
inc
sbb
scas
xorl
std
adc
popf
fisttpll
daa
cmp
pop
mov
xor
lret
add
dec
fcoml
sub
and
pop
cwtl
loopne
retw
movl
add
and
push
mov
mov
pop
rolb
out
rcr
inc
adc
loopne
aad
mov
xchg
xchg
xor
pop
jmp
sbb
out
movb
pop
xor
je
sti
mov
mov
pop
or
lahf
enter
pop
mov
inc
out
push
add
lret
inc
mov
jecxz
fistps
lds
jle
sbb
sbb
cwtl
idivb
in
cmp
xor
add
std
and
cmp
imul
test
mov
bound
and
dec
and
pop
jns
cld
lock
inc
mov
mov
mulb
dec
lea
mov
inc
xchg
loop
rcrb
paddb
test
push
dec
fsubrl
shrl
cld
scas
insb
test
popa
out
popf
or
mov
push
and
mov
mov
loop
arpl
mov
shlb
arpl
hlt
test
jp
push
push
mov
idiv
mov
pop
sbb
push
sbb
jecxz
mov
push
fidivs
adc
xor
xchg
dec
fdivrl
leave
pop
aas
jae
iret
sub
popa
daa
shrb
fsubs
iret
mov
add
jo
inc
test
sub
pop
rcrl
ljmp
and
xchg
int
icebp
jne
pusha
out
pushf
or
fiaddl
mov
mov
xchg
je
loopne
outsl
daa
xlat
sbb
stos
xchg
inc
pusha
mov
mov
adc
decl
adc
sub
enter
inc
mov
adcl
pusha
enter
dec
dec
inc
push
jmp
mov
sub
incl
mov
mov
mov
insb
pop
retw
enter
ljmp
fidivl
lds
nop
sub
in
sub
push
fidivs
jbe
shrb
fwait
mov
pop
push
scas
in
jl
sbb
out
subb
add
test
lahf
lcall
add
out
jae
jl
pop
xor
pushf
sbb
in
push
mov
mov
inc
adc
jae
sbb
adc
pop
je
fstpt
mov
adc
mov
add
aas
loopne
sub
add
addr16
and
sti
hlt
xchg
jl
mov
mov
ret
lret
dec
sbb
pop
inc
rorb
dec
xor
rcr
pmulhuw
stos
push
mov
add
dec
and
lds
ss
call
cmpsl
or
les
mov
cmp
mov
ss
out
negb
sbb
or
or
mov
lsl
or
xor
lods
dec
sbb
mov
lock
outsb
lret
xchg
sub
sub
mov
dec
jmp
fcomps
xor
popf
mov
inc
adc
fwait
pop
adc
jbe
and
cmp
add
fs
sbb
dec
sbb
int3
sub
sub
jne
xchg
leave
rcll
xor
jbe
cmp
adcb
add
mov
ret
lds
ljmp
jg
jle
xor
test
movsb
xor
push
ds
mov
in
ss
xchg
addr16
daa
jbe
imulb
movsl
cli
inc
pop
push
xchg
arpl
mov
xchg
insl
adc
or
ds
cmp
push
movsb
lcall
fcoml
pop
add
mov
jns
cmp
shl
jnp
dec
aad
xor
cwtl
mov
xlat
add
add
cmpsb
lods
adc
jo
mov
push
or
and
cld
push
sbb
cmp
je
aad
mov
add
fwait
jae
shl
and
lcall
cmp
cmp
jecxz
pop
bound
mov
dec
iret
inc
jl
jle
notl
adc
and
leave
lods
shrl
sub
mov
mov
insl
dec
sbb
in
int
pushf
xlat
dec
cmp
shlb
pop
loopne
icebp
int
add
shrl
xor
stos
lods
outsl
jmp
in
mov
or
mov
out
mov
lret
jbe
mov
pop
sbb
mov
inc
lahf
in
sub
daa
hlt
loope
push
out
test
jg
pop
loope
and
lods
jbe
arpl
lret
divb
xchg
sub
enter
sbb
sub
fbstp
sti
push
inc
stos
aas
and
sti
stos
test
pop
ljmp
mov
cmp
aad
mov
roll
fnsave
inc
fsub
jmp
inc
test
inc
add
dec
and
and
sar
in
loope
mov
int3
mov
xchg
rol
adc
leave
jno
arpl
inc
xorl
push
fs
mov
sub
dec
negb
hlt
pop
lds
adc
cli
aad
sti
mov
subl
cmp
dec
xor
push
jo
add
sbb
popa
stos
xchg
repnz
xor
fists
cli
test
xchg
lret
lods
push
jns
xchg
mull
adc
out
sub
add
sbb
inc
or
inc
out
sbbl
xlat
les
mov
pop
cs
sbbb
adc
inc
daa
lea
add
inc
pusha
mov
cmp
push
out
pop
stos
mov
mov
mov
push
cmp
into
aaa
pop
adcb
xchg
dec
mov
jno
jb
push
lret
test
shll
sbb
test
mov
pop
mov
sbb
xor
pop
daa
mov
fwait
jp
bound
jae
in
popa
jp
pop
stos
lahf
mov
sbb
test
sub
test
push
inc
add
push
mov
les
xor
clc
imul
sbb
fs
pop
jle
lret
xor
push
lock
jle
xor
call
push
push
mov
sbb
loop
mov
and
das
jno
scas
pop
mov
mov
jp
pop
nop
jne
rorb
loopne
fmuls
or
das
rorl
out
mov
xor
cmp
mov
hlt
aad
test
fimuls
sarb
pop
out
popa
rcrb
das
inc
test
mov
std
int
push
dec
fidivl
sbb
mov
cs
hlt
das
add
push
pop
ret
pop
inc
mov
xor
sub
pop
push
test
ljmp
leave
mov
xchg
push
in
jne
test
add
das
nop
or
xchg
cs
adc
shll
mov
mov
aaa
mov
mov
insb
lods
adc
inc
jns
inc
lcall
or
aaa
insl
jns
and
arpl
inc
xor
jmp
faddl
imulb
stc
js
sbb
mov
fxch
dec
cmp
jns
stos
adc
adc
lods
push
mov
mov
dec
out
jnp
ja
sbb
mov
xor
bound
sbb
mov
xchg
data16
cltd
movsb
iret
jp
pop
popa
sbb
push
ds
and
xor
pushf
cmp
vpaddd
lea
mov
adc
stc
add
push
lret
popf
sbb
hlt
xchg
xor
jo
cmpsl
outsb
aaa
enter
dec
adc
sub
jge
inc
mov
lods
add
lods
imul
sbb
cmp
divl
jp
fcompl
dec
hlt
add
mov
jns
insb
andb
add
push
popa
push
push
push
out
cmp
cmpsl
add
adc
mov
std
push
xor
loope
jb
cld
aas
xchg
mov
xor
adc
xor
lcall
push
and
pop
das
idivb
aad
lahf
sahf
xchg
push
mov
bound
dec
clc
jmp
mov
add
adc
lret
movsl
fsubrs
movsb
jae
sahf
pop
in
pop
movsb
jae
out
or
xor
mov
xchg
pop
mov
sbb
sbb
cmp
mov
into
jl
fcom
push
xor
cmp
int3
out
adc
jg
outsb
cmp
mov
popf
push
mov
movsb
cmpb
xor
stos
iret
bound
negl
add
push
mov
xchg
cmpsb
add
mov
mov
fimuls
push
xorb
xchg
mov
or
jnp
popa
out
or
and
scas
aas
push
xchg
xchg
mov
mov
jecxz
pop
jl
mov
jmp
shlb
jb
pop
in
mov
es
cmpsl
out
cmp
mov
out
fildl
shlb
mov
cmp
pop
in
pop
je
shlb
ss
dec
movsb
hlt
pop
aad
lahf
dec
add
push
je
xor
fs
xchg
or
imul
or
popa
mov
push
imul
push
out
sbb
push
mov
mov
sub
ja
mov
xor
test
and
loop
sbb
movsb
push
fldenv
popa
pusha
cmp
loopne
jns
cmp
mov
repz
pop
sbbb
and
ret
cmp
mov
imul
add
icebp
inc
or
leave
int3
ret
adc
movsl
repnz
daa
mov
jmp
adc
jl
addl
in
rorb
sahf
xor
scas
mov
popa
or
inc
adc
mov
xor
stos
xchg
or
pusha
testl
mov
add
and
popf
les
and
mov
std
bsf
movl
mov
leave
out
dec
shll
mov
das
inc
xor
movsb
and
jle
or
sub
test
pop
mov
jns
inc
mov
and
or
test
mov
nop
repz
mov
aad
stos
mov
movsb
pop
rol
sub
call
scas
jge
rcll
pop
andb
cmp
unpckhps
mov
cmc
jg
pop
mov
gs
inc
and
mov
rcll
xchg
and
ficomps
fiadds
push
inc
in
jl
jle
jns
scas
fcompl
mov
cmp
mov
dec
sbb
sbb
cld
push
arpl
int
dec
sub
dec
adc
movsl
and
ret
dec
adc
jmp
hlt
ret
ret
jmp
daa
loop
lock
sub
fbld
cs
cmp
pop
int
jg
push
cli
in
sub
shlb
cmp
dec
lods
mov
cmpb
sub
inc
dec
movsb
jle
jp
movsb
pop
adc
test
in
xlat
add
add
mov
jne
icebp
loope
mov
mov
cmpsb
push
mov
adc
adc
out
or
mov
fidivrs
icebp
add
fwait
rcl
cli
mov
iret
pop
shlb
xchg
sbb
jp
push
jmp
adc
or
sbb
inc
ds
pop
mov
dec
popf
mov
inc
arpl
pop
add
icebp
fiadds
inc
ljmp
push
xchg
pop
cmc
mov
nop
or
stc
or
and
xor
or
fwait
ljmp
cmp
cmp
mov
imul
sbbb
lods
scas
pop
les
inc
sbb
pop
sbb
inc
cmp
mov
int3
cmp
dec
jp
inc
push
into
divb
mov
or
orl
mov
add
fwait
dec
dec
js
mov
cmc
push
lret
lret
movsb
pushl
jmp
dec
aad
ds
popa
cmp
lahf
andl
mov
mov
jns
xor
aam
dec
or
push
out
int3
or
nop
or
dec
bound
jne
jg
fidivs
add
xchg
loope
sbb
loop
pop
out
mov
repnz
in
jge
loop
adc
xchg
add
outsl
clc
inc
sub
je
lock
fistpll
pop
inc
cmp
cltd
lcall
hlt
inc
shll
mov
inc
leave
push
popl
xor
pop
fistps
fstps
cmc
push
adc
jecxz
or
sub
ret
fimuls
pop
pop
push
ljmp
repnz
sub
cmp
or
xorl
xor
xchg
inc
sub
jle
xor
arpl
testl
addr16
mov
mov
les
ret
cld
sub
cmpsl
decb
dec
clc
and
jo,pt
sub
jns
or
arpl
lret
imul
lods
add
push
adc
in
cmpsl
push
dec
in
jno
stos
inc
mov
mov
lock
in
push
mov
sbb
gs
insl
and
xchg
testl
movsb
in
shll
outsl
sub
in
dec
fistpl
adc
inc
adc
notl
shll
adc
push
sbb
dec
mov
dec
xchg
dec
jnp
pop
pop
in
imulb
and
outsl
int3
aas
pop
inc
xchg
enter
cli
cltd
rolb
mov
imul
mov
pop
xor
cmpl
mov
mov
movsb
in
pop
mov
xor
push
ljmp
adcl
xor
inc
incl
popf
mov
ds
popf
iret
mov
xchg
lcall
fidivl
out
mov
or
push
fwait
jno
ficoms
pop
lret
clc
ds
stos
bound
icebp
sbb
in
mov
sbb
test
mov
sub
sbb
testl
aad
lahf
push
lret
das
roll
test
cltd
in
mov
push
test
push
cltd
loop
jb
cmp
mov
adc
pop
sbb
xor
mov
xor
iret
mov
stos
sbb
xor
dec
mov
add
in
dec
cmp
or
int
sbb
hlt
insl
pusha
fs
ja
or
cmpsb
mov
lahf
sub
cli
test
or
cmp
and
add
or
movb
addr16
xchg
adc
adc
lock
es
and
orb
ret
inc
jle
sar
pop
sub
loop
repz
xlat
cmc
in
mov
jne
xor
mov
add
mov
loopne
data16
out
lods
fs
mov
jle
mov
dec
add
ds
dec
leave
in
sub
add
xor
in
outsl
fldcw
pushaw
ret
test
sbb
adc
dec
add
jmp
cmp
mov
cmp
jp
mov
ficoml
xor
sub
dec
add
pop
sbb
cmp
mov
dec
pop
je
ss
or
mov
aas
popa
mov
aaa
mov
sub
movsb
jg
leave
mov
jno
mov
push
mov
pop
ror
aad
or
push
push
out
xchg
ljmp
pop
jecxz
sbb
or
ja
cmpsl
mov
shrl
aas
ret
jmp
sub
cmpb
and
adc
pop
push
add
xchg
xchg
sub
dec
sahf
push
push
mov
pop
jg
pop
nop
push
jmp
or
xchg
xor
rcrb
add
adc
mov
or
outsb
add
insb
push
xor
cmpsb
dec
lods
xor
mov
je
mov
mov
sahf
out
cmp
bound
adc
mov
popf
mov
insb
xor
ret
push
ja
aaa
sarl
jnp
jle
cmpsb
cmpsl
mov
pop
in
inc
jl
jecxz
adc
and
push
push
xchg
mov
cmp
mov
sub
mov
dec
jae
sub
pusha
pop
daa
pop
sbb
bound
pmaxub
jae
sbbb
xchg
in
add
jae
mov
mov
test
in
mov
loope
mov
pop
shrl
and
sbb
lods
mov
xor
shr
out
fdivs
notl
mov
inc
pop
xchg
int
add
fxch
or
ror
lret
int3
add
mov
xor
hlt
mov
jnp
pusha
jbe
jo
addr16
insl
xor
popf
pop
xchg
or
jl
sub
push
sahf
pop
push
leave
aam
push
fsubs
cwtl
xor
xchg
stos
pop
popf
scas
xchg
cmp
push
push
outsb
pop
rorl
jno
fs
aam
xor
adc
or
in
and
iret
pop
js
push
out
adc
xor
mov
cmpsb
pop
inc
and
xchg
out
inc
jmp
mov
out
popa
aad
fidivrl
call
hlt
sti
or
cmpsb
push
jbe,pn
jp
jmp
mov
xchg
or
inc
xor
adc
in
into
lret
cmp
and
mov
adc
movsb
cltd
dec
and
or
test
pop
push
cvtps2pi
mov
popa
and
imul
jp
shll
fsub
cs
imul
push
mov
xor
push
mov
fs
sysexit
fcmove
aam
dec
cmp
push
dec
or
adc
and
mov
cmp
push
push
lods
pushw
sbb
lods
out
mov
out
flds
mov
scas
xlat
movsl
and
jecxz
aad
xchg
iret
jmp
int3
xor
call
hlt
jo
adc
lcall
mov
jne
xchg
loopne
les
fbld
cmp
ret
flds
filds
mov
stc
add
scas
lods
ss
or
fisubs
rorb
mov
xchg
inc
and
sub
js
movsl
call
dec
xlat
subl
or
or
cs
and
push
pop
add
push
nop
cmc
popa
ljmp
xchg
mov
mov
mov
in
notl
or
cmp
jl
or
in
or
js
push
jg
bound
mov
stos
sbb
jno
mov
push
sub
or
dec
mov
loope
xlat
mov
hlt
out
mov
mov
mov
fstps
inc
inc
je
cltd
jge
ret
sbb
cs
cwtl
mov
xor
jmp
pushf
in
lods
int
sub
sub
fmull
cmpb
pop
sub
adcb
sbbl
xor
loopne
cmp
adcl
push
gs
das
out
shlb
aas
add
popf
dec
paddusw
mov
jg
cmp
addl
add
movlps
add
fwait
sbb
outsl
push
pop
mov
add
and
rol
hlt
imul
shlb
cmpsl
mov
movsb
jb
or
das
clc
jl
mov
push
mov
das
stos
lods
push
iret
add
push
jle
pop
aam
push
jne
rcll
movsb
fimull
xchg
js
pop
enter
cmp
and
iret
adc
push
and
les
mov
pop
cmpsb
in
inc
pop
mov
loope
inc
xchg
xor
insb
inc
aaa
or
push
sub
cmc
frstor
dec
dec
popa
testl
mov
jg
xchg
js
enter
hlt
mov
ret
dec
pop
fmull
out
test
xor
jmp
or
fsubl
fstl
int
jmp
mov
sub
mov
xor
mov
fs
das
movsl
insl
cli
dec
fidivl
outsb
cpuid
hlt
iret
push
mov
xchg
aas
ret
arpl
daa
je
mov
sub
dec
adc
sbb
stos
popa
add
pop
dec
cmp
mov
mov
xchg
popa
and
add
and
icebp
mov
loope
jnp
adc
in
mov
icebp
inc
adc
pop
adc
in
cmpsb
sahf
mov
shrb
mov
jmp
pop
xor
test
mov
nop
outsl
mov
scas
repnz
loopne
cmp
or
loope
mov
sbb
adc
mov
inc
mov
cmp
sarb
outsb
in
jg
fstpl
cli
jno
dec
div
pushf
mov
push
sub
loopne
in
mov
rcrb
cmp
dec
push
ja
jo
dec
rolb
add
dec
test
inc
fldenv
outsl
and
mov
jne
dec
stos
or
sub
call
inc
aaa
stos
addb
daa
adc
xchg
rcll
xor
in
fxch
push
sar
loop
arpl
cmpsb
lock
dec
je
into
cld
int
jl
shrb
mov
mov
movsl
test
nop
negl
in
nop
cltd
cmc
lcall
jg
popf
sub
push
stos
and
cmp
test
jno
sbb
outsl
sbb
arpl
jae
mov
repz
outsl
fldenv
push
sub
pusha
push
pushf
ficoms
push
dec
pop
sub
and
dec
push
ljmp
jp
mov
jbe
inc
stos
fwait
inc
aas
fwait
cmp
fadds
pushf
std
rol
adc
test
nop
aad
cld
and
insb
adc
outsb
lcall
scas
mov
test
sti
cmp
jns
xorl
xor
outsb
pop
das
aaa
out
or
jnp
and
push
in
xchg
int3
add
test
pop
dec
pushf
add
mov
and
mov
adc
jne
aaa
mov
push
enter
add
out
jg
insb
icebp
mov
push
idivl
insl
test
and
rclb
mov
popf
test
fldlg2
fdivs
in
outsl
ja
es
mull
test
cmp
ds
lods
cmpb
outsb
ljmp
xor
data16
pusha
add
jno
jl
clc
mov
loope
lret
jl
in
lock
lret
jmp
rcrl
and
pop
cmpsb
mov
imul
jge
push
aas
jae
or
loopne
adc
lods
add
icebp
cmpsb
and
popa
fistpl
xor
sahf
xorl
push
jge
lcall
push
xchg
in
xchg
ljmp
sub
mov
fsub
mov
or
flds
or
loopne
or
fwait
or
insb
lods
inc
bound
mov
and
xlat
xchg
getsec
and
frstor
popf
xchg
sub
pop
lahf
mov
les
mov
popf
sti
mov
add
sub
pop
sub
cmpps
aad
ret
out
adc
jle
movsb
jg
dec
and
mov
dec
mulb
jp
leave
fdiv
in
jno
test
hlt
push
in
jg
fld
popf
inc
repz
imul
scas
xor
fs
sar
out
push
bt
dec
add
or
popl
push
mov
fs
mov
fsub
mov
or
std
ljmp
and
fsubl
out
ja
push
cld
cld
sub
outsl
das
or
jp
inc
sub
add
dec
xor
jl
cmpb
les
loop
out
iret
push
imull
inc
scas
mov
call
jmp
jl
or
cwtl
add
xchg
lods
nop
hlt
mov
std
dec
les
fld
lcall
mov
sahf
daa
or
dec
pop
cmp
cmp
add
adc
mov
mov
sti
pop
fmull
shrb
push
sbb
pop
loopne
xchg
xchg
andb
sub
insb
mov
rcl
sub
addr16
cmpsl
pop
nop
jbe
and
and
ret
repnz
or
imul
inc
test
mov
cmp
je
add
dec
sub
ljmp
scas
lods
jnp
subb
das
mov
call
imul
in
add
les
cltd
fcoms
js
dec
in
sbb
lock
loopne
test
hlt
mov
stos
lea
jmp
orl
mov
int3
or
jb
mov
bound
push
movsl
decl
cwtl
push
filds
daa
dec
stc
movsl
not
cmpb
in
xor
mov
mov
lock
in
xlat
in
out
pop
xchg
xchg
shll
jnp
xchg
lcall
iret
stos
test
int3
sbb
cmp
std
enter
stc
sti
pop
rorl
pop
cmpl
dec
popa
mov
inc
out
scas
and
xchg
outsb
or
arpl
lock
push
add
test
aam
jno
insb
or
rcrb
nop
sahf
dec
mov
cmp
xor
jl
jnp
lahf
in
sub
ja
adc
xor
xchg
cmp
pop
mov
mov
push
popf
mov
outsl
rclb
cwtl
add
jbe
imul
popf
in
sbb
xor
js
cmp
xor
in
pop
or
add
scas
xor
pop
mov
out
ja
addl
mov
fistpl
xor
cmp
xor
mov
fsubrl
les
xor
pop
mov
out
pop
daa
or
leave
push
mov
xor
iret
pusha
and
sub
leave
stos
mov
sbb
xchg
xchg
xor
xor
inc
fistps
xchg
xchg
inc
mov
dec
int
xchg
jle
or
and
xchg
and
cli
mov
inc
pop
inc
fnstsw
cwtl
out
iret
lcall
mov
jb
fs
imul
ret
xor
xchg
fcomps
out
out
and
mov
nop
xor
push
inc
adc
sbb
inc
dec
bound
outsl
dec
sbb
adc
notl
testb
push
xchg
jae
sbb
test
jg
outsb
aad
xor
cmp
mov
push
push
sub
pop
push
cmc
les
idivb
jns
mov
xlat
out
movsl
daa
movsl
and
adc
in
iret
loop
sti
test
addb
and
mov
rcrb
dec
call
mov
clc
mov
xor
jbe
outsl
sarl
mov
mov
mov
icebp
add
mov
loope
mov
xchg
mov
fsubl
mov
loope
sbb
std
lret
sub
and
mov
inc
or
loop
push
loop
scas
imul
and
mov
dec
push
jecxz
mov
jle
rcr
inc
fcmovne
movsb
call
xor
fstps
aaa
or
cmpl
notl
jb
iret
xor
add
stc
sti
scas
int3
mov
or
scas
jnp
hlt
xchg
clc
mov
test
mov
out
leave
mov
add
jae
cmp
jl
out
or
daa
data16
int3
xchg
sbb
inc
fmuls
mov
and
fdivrl
or
outsl
ret
into
out
jmp
cmp
loop
and
outsl
jmp
jo
sub
jle
std
add
lcall
mov
fildll
lock
sbb
jbe
pop
aas
incb
fstp
dec
push
outsl
cltd
lock
jmp
push
sbb
clc
cli
movsb
nop
push
leave
cli
repz
mov
jno
hlt
les
xchg
xorb
int
xchg
pop
mov
xor
mov
push
imul
test
mov
mov
test
push
jp
addr16
fdivrs
pop
and
repz
add
add
mov
ja
pop
cmp
outsl
push
fisubrl
sbb
aad
lcall
xchg
fdivr
pop
fs
pop
jbe
mov
and
dec
sub
inc
push
jmp
push
inc
inc
pop
inc
inc
pushf
push
dec
arpl
jae
adc
mov
aaa
insl
sarb
std
sahf
xchg
xor
sbb
nop
dec
fwait
js
jne
cli
cltd
mov
jecxz
adc
jg
mov
or
je
mov
aad
dec
daa
add
rcl
repnz
ja
sbb
fbstp
aad
xor
pop
jbe
testb
cltd
push
jnp
push
repnz
fiaddl
notl
adc
inc
call
imul
es
adcb
cmp
push
out
imul
sbb
or
jl
into
inc
mov
movsb
mov
mov
or
aad
push
iret
adc
ljmp
push
cmp
int
fsubrp
jo
dec
jmp
add
mov
push
xor
aaa
test
js
leave
mov
pop
adc
sub
jmp
lret
mov
pop
jle
out
pushf
out
ljmp
cmp
sbb
scas
loope
cmpsb
das
rcll
in
mov
mov
push
lock
in
lock
cwtl
into
push
jecxz
xchg
pop
push
in
push
fimuls
dec
lahf
lods
lret
xor
loop
lahf
pop
sub
cs
pop
out
loop
cmp
popf
push
outsl
orl
sub
in
xchg
shll
adc
sbb
mov
pop
jge
and
lods
fidivl
fsubs
out
insb
jmp
adc
ret
xchg
ficoml
push
lods
lods
add
cltd
dec
mov
aam
mov
int3
dec
jle
repz
outsb
lds
push
mov
cld
inc
mov
add
icebp
xchg
sub
mov
cmp
bound
xor
int3
movsl
mov
xor
addr16
cmp
data16
dec
mov
pop
stos
add
inc
mov
xorl
in
jnp
push
daa
dec
jno
xor
pop
sahf
call
or
sbb
aam
jbe
aad
adc
es
push
out
and
testb
or
mov
addr16
rorl
mov
dec
vfmsub132pd
sub
ficoms
mov
icebp
aaa
out
pop
xchg
jmp
mov
ljmp
pop
in
sbb
scas
test
and
bnd
stos
mov
pop
arpl
insl
xor
mov
cmpsl
pop
lods
or
jae
jcxz
test
ss
mov
xchg
movsb
add
fdivrl
sbb
or
jg
dec
aaa
pop
xchg
jecxz
in
mov
fnstenv
cmc
pop
ss
jns
add
pop
arpl
fmul
loope
fucomi
fstpt
sbb
mov
mov
into
popa
adc
pop
mov
rclb
lret
repz
test
insb
inc
stc
or
xor
pushf
inc
sbb
cmpsl
loope
fcmovbe
adc
pushf
add
mov
cmp
mov
sub
cmc
aas
lods
and
pop
sbbb
nop
pop
mov
ds
call
mov
cmp
loop
cwtl
sub
xchg
call
int
rorb
leave
lahf
aad
and
inc
jb
xor
push
jp
adc
loope
pop
ljmp
sbb
cmpsl
push
aad
mov
adc
jne
mov
cltd
sub
push
sbb
sbb
icebp
mov
mov
jbe
outsl
adc
pop
mov
out
aas
icebp
iret
ret
pushf
mov
and
adc
movsb
aam
nop
push
push
loop
push
and
pop
jmp
fnstcw
xlat
rorb
adc
dec
xor
mov
sti
xchg
jecxz
std
push
cmpsl
dec
out
pusha
frstor
push
fwait
sbb
cltd
dec
flds
std
mov
cmp
in
pop
dec
ljmp
inc
cmp
enter
les
and
xor
dec
test
mov
js
xchg
adc
bound
pop
mov
mov
mov
inc
jb
adc
mov
test
icebp
mov
or
dec
imul
ret
jno
add
loope
push
lret
imul
rclb
mov
ja
jmp
mov
pop
ss
mov
pusha
pop
cmp
fcompl
cmpsb
sbb
leave
mov
aas
mov
roll
repnz
xor
lret
mov
fs
mov
rorl
jmp
pop
push
addr16
or
push
das
push
loope
jb
rcrb
test
pop
mov
and
jno
cmc
pop
sub
xchg
fistl
ret
jno
push
xor
add
cwtl
and
into
add
inc
aaa
mov
add
sbb
popa
repnz
shl
addr16
dec
mov
push
xor
inc
gs
xor
push
xchg
mov
mov
cmp
dec
int
sub
cltd
adc
repz
jns
xchg
std
pop
xchg
inc
inc
mov
add
filds
cwtl
jnp
cli
xchg
aad
jg
sbb
lock
cmpsl
ja
loopne
clc
test
lret
add
push
data16
push
sbb
faddl
ss
pop
sub
adc
xor
add
sub
ret
xchg
fucomip
icebp
pop
fdivrl
imul
incb
jmp
jmp
out
push
sbb
jb
sub
call
out
add
outsb
lods
xchg
jle
ret
addr16
inc
arpl
mov
sub
pop
xchg
fmuls
outsl
inc
push
pop
xor
cmpsl
xchg
roll
jbe
dec
gs
add
add
call
clc
lock
jl
lret
fs
gs
stos
add
mov
js
aaa
movb
add
xchg
push
mov
hlt
test
pop
lcall
pop
push
inc
into
shlb
push
mov
bound
sub
jno
notb
dec
push
push
orl
pop
dec
mov
add
je
les
sti
xchg
lods
jp
loope
fs
clc
xchg
jge
arpl
stos
pusha
push
and
int3
sub
cmp
cmovbe
jl
test
aam
jmp
sbb
fwait
mov
cmpsl
sub
push
lods
daa
mov
lds
outsb
dec
pop
sti
popf
movsb
inc
outsb
mov
stos
imul
enter
add
test
das
icebp
cvttps2pi
or
in
mov
inc
addr16
sti
aas
jecxz
mov
mov
xor
push
xchg
sub
in
mov
negl
aas
test
lods
rolb
rcl
sub
and
mov
cmpsl
add
loope
inc
adc
ficompl
sbb
push
push
jno
addr16
out
imul
push
aaa
outsl
in
popa
mov
pop
andl
dec
xchg
pop
jo
cmp
imul
pop
xchg
into
rclb
mov
fs
dec
mov
or
sar
out
cmpsl
outsb
push
inc
leave
mov
call
pop
lods
imul
std
sub
les
mov
push
pop
aas
loopne
enter
jp
test
sub
mov
mov
sbb
movsb
movsl
or
sub
xlat
mov
mov
mov
mov
push
jne
jae
push
sub
sarb
mov
dec
jge
sub
pop
fidivrs
sbb
inc
mov
into
repnz
sub
xor
jge
add
xor
jb
sub
and
into
ffreep
mul
stc
pop
pop
test
push
sbbb
sbbl
out
mul
fsubrs
lahf
gs
pushf
jne
sti
cmp
push
mov
scas
jbe
movsl
jno
ljmp
adc
stc
bound
adc
pop
icebp
xor
fs
fldenv
sub
dec
scas
in
sbb
clc
mov
mov
js
in
es
sub
popf
xchg
lds
add
aad
add
shll
xchg
xchg
or
cmp
mov
push
aam
push
jno
jne
add
mov
pop
loop
or
jns
sbbb
mov
loope
pop
test
pushf
jmp
addr16
testl
gs
out
mov
mov
dec
sub
int
lahf
in
mov
es
push
movsb
jo
gs
movsl
stos
and
in
jno
stos
push
cmpsb
insl
or
incl
popf
sub
mov
xor
jo
cmc
mov
dec
push
int3
cmpsl
clc
pop
insl
lock
cmp
mov
add
push
mov
jnp
mov
cltd
xchg
pusha
out
mov
roll
shl
stc
pop
subb
add
dec
xor
xchg
mov
inc
push
cmpsl
cmp
rolb
mov
cmp
xchg
push
mov
popl
icebp
sahf
ffreep
dec
push
out
pop
test
add
sar
jge
outsb
jae
cmp
out
out
addl
daa
ss
mov
and
add
pusha
call
pop
sub
mov
xchg
cli
and
add
push
in
xor
sarl
shrl
orl
cmpl
subb
icebp
jbe
insl
push
xchg
aam
push
adc
cmpb
xorl
decl
add
insl
add
hlt
stos
out
rcll
sub
orl
jns
test
and
jno
rolb
sub
xchg
pop
mov
lods
jbe
push
xor
movsl
daa
out
out
adc
lea
cltd
cltd
or
imul
inc
xor
jg
inc
sahf
cli
scas
dec
out
fcompl
inc
sbb
and
lods
int
mov
imul
pop
out
adc
stos
mov
in
das
testb
dec
xor
add
sub
mov
jge
jg
add
inc
jge
popf
xlat
jecxz
and
adc
pop
xchg
cmp
outsl
leave
cmp
iret
xchg
fdiv
shlb
popf
jg
xchg
adc
and
fiaddl
movsb
stos
inc
mov
mov
sub
add
pusha
push
cmp
pop
mull
sub
imul
push
push
dec
mov
xchg
lods
cld
test
sub
mov
pop
les
xor
or
scas
inc
mov
dec
cmpsb
or
xor
cmpb
cltd
in
xchg
push
sub
lods
cltd
out
data16
ss
xchg
outsl
out
pop
mov
xchg
mov
in
repnz
in
leave
cwtl
fisttpl
dec
mov
leave
stos
inc
jle
lock
sub
in
lret
mov
mov
popf
add
negl
cmc
xor
dec
xchg
outsb
lods
and
push
pop
outsb
add
pop
inc
or
stos
pop
pop
dec
push
sbb
out
cmp
mov
jnp
sub
ret
xorb
cmp
mov
into
adc
adc
pop
pop
cmp
adc
mov
jg
in
in
in
addr16
inc
push
les
jmp
xor
call
add
call
adc
add
out
jae
inc
cmp
xchg
inc
xchg
push
pusha
test
add
daa
fs
dec
addl
dec
cmp
test
hlt
xor
xchg
jnp
sahf
dec
js
adc
xor
or
cmp
stos
out
dec
mov
inc
cmpsb
testl
xorl
rcll
imul
sub
in
xor
mov
popa
pop
stc
mov
or
or
jae
add
push
push
xorb
test
inc
mov
jbe
push
adc
outsl
jge
xchg
or
pop
lcall
sub
or
into
xor
insl
pop
loope
mov
xor
and
in
aas
pop
mov
xor
lret
mov
mov
call
and
fisttpll
imul
push
rolb
mov
mov
imul
push
popa
cs
xlat
pmulhw
rorl
nop
lods
inc
iret
clc
divl
in
push
movsl
sub
movsl
cmp
insl
jp
inc
dec
add
mov
test
mov
ljmp
hlt
loopne
cld
mov
in
mov
hlt
xor
pop
sub
ret
xor
jae
jbe
adc
lret
aam
rol
in
nop
in
adc
scas
push
rcrb
xchg
inc
imul
es
lcall
nop
xlat
inc
cmpl
int3
cwtl
inc
dec
xchg
pop
dec
fisttpl
jno
rorl
mov
jmp
adc
addb
ucomiss
call
or
mov
xchg
xor
loopne
add
and
adc
mov
clc
push
or
cwtl
jne
xlat
ret
ret
out
imul
push
jnp
xlat
mov
and
popf
xor
fsub
fildll
cwtl
divb
shrb
mov
inc
stos
pop
add
in
sahf
movsl
xchg
ret
dec
cmpsl
push
mov
cmpsl
loopne
sti
js
faddl
dec
xchg
std
jbe
and
js
mov
mov
add
push
adc
mov
and
insl
out
inc
lods
popf
push
pop
mov
sbb
push
push
popa
xor
mov
mov
lock
and
ss
inc
dec
and
lods
aas
ret
int3
dec
sbb
out
rclb
xor
stc
lcall
inc
outsl
dec
iret
mov
and
xchg
push
mov
sub
test
jp
aam
cmp
dec
movl
jo
mov
add
or
nop
jb
arpl
ret
xchg
stos
sarb
push
add
mov
or
adc
xchg
andb
in
pushl
cmp
mov
lods
pop
push
in
mov
popf
gs
cmpl
mov
ljmp
dec
scas
push
movsl
lcall
add
dec
imul
lock
cmpsl
addb
xor
jnp
imul
adc
xchg
jecxz
xchg
loope
sar
mov
and
lret
fadd
add
popf
sub
rcrb
icebp
add
stos
stos
xchg
fwait
xor
inc
xor
fidivrl
jmp
cmp
loope
cwtl
sub
pushf
mov
testb
push
insb
and
adc
mov
cmp
push
add
lret
cs
dec
testl
mov
sub
cmp
les
in
jmp
push
popf
shlb
dec
jno
es
pop
faddl
repz
mov
pushf
push
cmp
dec
cmpsl
divl
incb
sbb
inc
and
push
ret
aad
repz
mov
mov
cmp
push
insb
pop
adc
stos
orb
fiaddl
mov
jg
out
add
inc
fmuls
xchg
adcl
hlt
enter
sub
out
mov
sbb
adc
mov
aaa
inc
mov
test
push
cltd
dec
leave
adcb
sbb
adc
rcll
jp
int
mov
mov
sbb
mov
sbb
dec
jne
bound
fdivp
xchg
lds
mov
sti
inc
mov
xor
jmp
loopne
mov
inc
stc
ljmp
mov
push
int3
add
daa
cmpsl
adcl
xor
xor
sub
add
movsb
int3
mov
or
rep
or
adc
insl
dec
and
incb
dec
xorl
mov
andl
in
ret
and
push
fildll
push
sub
dec
mov
iret
sub
ds
in
dec
popa
lret
jg
push
cmpsb
mov
shrb
push
push
jb
out
inc
dec
ret
outsb
mov
and
fcmove
pop
movsl
scas
xor
aas
call
sahf
fwait
scas
lods
stos
xchg
and
fldenv
cli
ret
sub
mov
test
mov
outsl
int
ja
decl
pushf
mov
push
scas
inc
xchg
insb
dec
or
and
stos
stos
sbb
rcr
mov
stc
add
sbb
mov
cmp
aam
push
adc
mov
test
push
pop
ret
repnz
gs
insl
lahf
subb
push
outsl
pop
fistpl
jp
xchg
decl
push
mov
pop
std
cmc
mov
int3
bound
jb
sub
mov
loope
pop
fmull
pop
in
or
lcall
pop
xor
stos
and
icebp
sti
add
mov
mov
int3
xlat
orl
mov
iret
jns
dec
js
orl
dec
cmpsl
mov
repz
sahf
pop
lahf
xchg
adc
jmp
shr
inc
lahf
mov
cmp
repz
adc
loopne
test
sbb
push
xor
mov
fiaddl
shrb
cmpsb
inc
jecxz
cmp
pushf
adc
scas
xchg
std
xor
loope
movsb
or
xchg
decl
mov
push
out
icebp
loope
shlb
or
movsb
mov
lcall
pop
add
lcall
push
and
push
popa
dec
push
or
stos
call
mov
pop
sub
xchg
out
mov
cmp
push
adc
add
add
mov
aaa
inc
mov
std
pushf
inc
mov
or
xchg
mov
mul
imul
lea
in
icebp
jg
shrb
in
sbb
cld
std
adc
xlat
les
cmp
fs
icebp
clc
or
and
jl
push
test
mov
addr16
mov
inc
mov
jl
mov
mov
pusha
rolb
mov
mov
push
sahf
stc
cmp
xor
into
inc
dec
inc
cltd
cltd
sub
adc
test
dec
xchg
addb
jle
lock
bswap
pop
ljmp
cmp
stos
sub
outsl
and
xorl
inc
sub
in
ljmp
cmpsl
jae
andb
int3
es
fwait
cs
mov
aam
push
mov
jg
fsubrl
lret
xlat
pop
mov
rolb
jp
insb
push
aam
sbb
push
push
pop
aad
subb
cmp
and
and
pop
fs
cmc
jae
out
add
mov
jle
loop
and
mov
push
gs
movsb
scas
mov
mov
push
and
je
jo
rcrl
lea
mov
fucom
cmpl
or
push
pop
push
movsl
or
jle
add
mov
nop
pop
ja
add
ljmp
orb
stc
inc
test
mov
sub
and
test
cli
sub
loop
xor
sub
or
push
imul
xchg
push
mov
pop
lret
inc
pop
inc
mov
cmpsb
mov
es
movsb
pop
mov
or
ljmp
mov
and
outsb
and
inc
stos
fidivrs
out
push
push
dec
lods
mov
jp
fsubrl
scas
cmp
insl
cmp
inc
push
sub
fldt
aam
andb
mov
xlat
xchg
fs
jl
mov
jae
push
pop
mov
cmp
cld
movsb
shlb
stc
xchg
mov
push
xchg
xor
dec
cmp
nop
jle
adc
jmp
ss
sub
test
lock
mov
mov
or
imul
pop
fists
dec
icebp
mov
jmp
out
sti
jmp
test
pop
or
jmp
dec
push
inc
mov
ss
inc
scas
out
sub
inc
jno
loop
popf
push
jmp
sub
fsubs
sub
mov
lcall
testl
xchg
pusha
ret
push
ljmp
pop
inc
repz
test
cmp
fcoms
cmp
orl
xor
add
or
insb
pop
cmp
adc
sub
mov
mov
or
repnz
add
jmp
in
jne
cld
inc
or
add
and
sbbb
addr16
ret
pop
int
lret
sbb
pop
shlb
fwait
jl
sbb
adc
shlb
in
or
popa
out
adc
mov
test
or
movsl
cld
ds
out
mov
push
xorb
stos
or
rolb
es
xor
scas
jecxz
sbb
popf
cmp
push
pop
ficompl
test
and
jbe
jmp
mov
push
sbb
movsl
adcb
mov
mov
imul
pop
push
inc
and
mov
add
lods
add
ja
jg
bound
aaa
mov
cli
clc
push
jmp
or
popf
add
movsl
cmp
in
repz
cld
dec
mov
inc
mov
or
insl
add
xchg
aam
shll
fwait
int3
push
adc
fstpt
mul
pusha
aas
lea
xlat
push
imulb
cmpsl
sbbb
lods
or
pop
aas
xchg
xlat
ja
pop
sbb
cld
idivb
push
inc
pop
pop
popf
cmp
scas
test
pop
dec
jbe
dec
sbb
std
out
jns
cs
xchg
push
popa
push
adcl
cs
cld
pop
push
sub
mov
xor
mov
out
test
jecxz
rcrl
or
jns
mov
in
sbb
and
mov
jb
loopne
jo
fsubrs
sti
cmp
dec
outsl
jecxz
loop
in
adc
leave
jno
test
and
sub
jmp
push
sahf
cltd
dec
pusha
xchg
iret
cmp
es
adc
dec
mov
int
sarb
loop
sarl
mov
pop
mov
js
jae
sti
repnz
js
dec
mov
jmp
ret
add
push
cmp
popf
fdivs
mov
jmp
sti
pop
inc
and
pop
add
sub
push
lea
fildll
scas
cmpsl
or
adc
push
jle
clc
lods
subl
xor
out
dec
ja
xor
xor
dec
mov
inc
lret
fcom
icebp
popf
or
lret
cli
mov
xlat
mov
and
arpl
out
inc
out
mov
es
xchg
jmp
icebp
cmpl
dec
jl
push
dec
pop
inc
jne
ja
or
nop
add
pop
inc
xor
push
out
rcr
dec
insb
mov
push
sub
cmp
dec
or
pushf
mov
mov
or
enter
mov
pop
inc
mov
push
fstpt
icebp
fwait
xchg
test
jle
pop
sbbl
data16
mov
pop
dec
cli
mov
mull
xor
lret
incl
or
or
pop
or
mov
stos
xchg
and
pop
xor
sbb
ficompl
nop
aad
dec
nop
sbb
shr
fnsave
xor
push
xor
xlat
xchg
sub
pop
dec
aad
pop
xchg
insb
cli
in
add
xor
test
rcll
fwait
push
shlb
in
xor
xor
dec
xor
inc
sti
clc
addr16
cmc
cmp
mov
or
mov
push
iret
testb
stc
xchg
mov
sbb
lock
xchg
push
and
adc
mov
mov
cmp
push
fbld
rclb
mov
or
sub
stc
pushf
in
inc
xchg
test
int3
mov
push
inc
bound
iret
xchg
stos
add
add
jmp
inc
in
lret
cs
aas
push
jbe
fdivrl
imull
loop
adc
dec
dec
aaa
mov
push
dec
jle
xchg
push
push
add
cmpsb
xor
push
mov
repnz
aaa
into
mov
scas
push
add
jg
xchg
lret
in
mov
sbb
in
sbb
ret
mov
sahf
ret
inc
xor
das
sbb
lods
roll
pushf
push
jb
push
setb
in
das
test
adc
push
fistpll
call
lahf
mov
stos
in
pop
out
mov
ja
lahf
rcr
enter
sub
push
enter
pop
loopne
sbb
repnz
adc
xor
sti
rolb
aaa
cmpsl
daa
rcr
jbe
jne
in
xchg
jno
stos
fdivrs
out
inc
je
in
xor
xchg
imul
arpl
int3
xor
cmp
dec
jmp
nop
hlt
mov
out
xchg
mov
xor
inc
pop
into
adc
clc
stos
insb
les
cmpsl
cmpsb
adc
ljmp
mov
mov
jne
or
into
jno
frstpm(287
or
add
popa
gs
xor
cmp
aad
in
mov
fistpll
fldcw
adc
cmpsb
sbb
cmp
dec
fwait
test
imul
push
sub
les
or
cmp
xlat
mov
mov
insb
fdivrs
mov
into
add
jg
es
lock
jo
mov
xchg
fisttps
adc
ret
push
in
mov
stos
jns
aam
int3
sti
mov
sbb
mov
jns
mov
mov
fucomp
js
xchg
push
mov
gs
in
rolb
outsl
inc
adcl
xchg
pop
or
bound
sbb
enter
or
test
sub
push
outsb
packsswb
inc
cld
cmp
jl
pop
sbb
ss
stos
inc
add
jae
loop
push
or
jns
mov
mov
lods
fstps
fs
adc
dec
outsb
cmpsl
inc
mov
stc
mov
or
test
rcr
cld
mov
and
or
int3
push
popa
scas
pop
dec
pop
pop
mov
dec
jmp
xchg
add
add
frstor
inc
adc
ja
sbb
sti
ja
add
push
push
cmpsl
and
push
xchg
or
outsb
xorps
loopne
sbb
mov
dec
mov
jle
je
pop
xor
cli
mov
rorb
pop
gs
mov
clc
shl
xchg
jbe
fnstcw
push
add
xor
aam
lahf
mov
iret
daa
lods
xor
stos
in
or
pop
fs
lds
roll
cmpsl
mov
sub
mov
jo
and
mov
clc
into
in
ret
ret
ds
dec
mov
push
mov
inc
test
rcrb
rolb
fwait
push
push
lcall
or
jo
add
push
sub
and
pop
xor
xor
or
sub
dec
imul
inc
add
mov
into
xor
push
aas
loope
add
outsl
cld
inc
xchg
adc
mov
stos
inc
dec
std
jge
je
or
and
mov
or
pushf
std
push
ja
les
stos
add
and
pushf
test
imul
dec
or
fisttpll
mov
sbb
loopne
ja
cs
ja
mov
repz
loopne
mov
mov
push
dec
test
mov
add
ret
mov
dec
add
test
fnstenv
in
sbb
push
add
adc
push
out
adc
mov
pop
jae
imul
adc
ret
or
push
mov
mov
cmc
aam
mov
dec
push
sbb
sub
dec
adc
sub
mov
ficompl
int
mov
std
inc
je
fwait
xor
push
or
lds
popf
mov
mov
xor
out
dec
lcall
ret
xchg
addb
add
mov
mov
cmc
mov
pop
mov
aam
sbb
mov
stos
js
xchg
stos
mov
aaa
lahf
ret
push
gs
ds
ret
xchg
and
shll
jae
rolb
push
and
scas
fmuls
jne
push
jnp
push
mov
or
icebp
sub
sbb
jmp
cmp
pop
cmp
repz
or
pop
cmp
inc
jle
div
mov
fiaddl
push
jb
jb
inc
xchg
or
clc
lcall
ja
in
and
pop
fstp
or
add
enter
push
lret
mov
inc
push
repnz
sbb
data16
sub
stos
fistl
ja
push
xchg
xchg
add
jo
xchg
mov
or
xlat
jle
shll
xchg
dec
out
sbb
xchg
lcall
jecxz
xchg
push
mov
andb
mov
data16
icebp
jae
fimull
jg
arpl
int3
cmp
cld
push
arpl
or
mov
sbb
add
jle
inc
mov
adc
test
dec
mov
fsub
sbb
les
pop
mov
xchg
jmp
pop
cli
adc
int
mov
push
pop
push
out
loop
aaa
insl
aas
add
push
mov
sub
push
adc
ret
adc
pushf
and
clc
sub
call
sbb
xor
dec
add
jae
movsb
loope
aam
pop
jae
pop
gs
into
fcoms
pop
jg
xor
add
mov
jmp
inc
clc
stos
shlb
sub
cli
or
rcll
int
and
loope
stos
sub
fwait
push
add
and
insl
add
hlt
lret
sarb
push
adc
dec
push
or
jbe
aad
pop
andb
lcall
stos
scas
xchg
sub
daa
ret
pop
aaa
or
popf
add
pop
cmpsl
dec
aad
into
in
push
call
lret
cmp
push
jmp
fs
cld
mov
push
push
jbe
ljmp
and
pusha
pop
and
call
sub
call
mov
jp
mov
push
and
mov
xchg
push
mov
push
add
mov
fistl
les
test
nop
add
out
pop
inc
fildl
add
sti
faddl
add
adc
inc
fsts
les
dec
push
jae
fsubs
into
push
mov
adc
mov
cltd
push
xorl
fsubl
and
jl
cmc
mov
ds
sub
sub
stos
lds
xchg
or
dec
inc
nop
cmp
push
xchg
adc
mov
pop
jmp
mov
mov
sbb
jp
sti
cld
addr16
aad
jno
pop
inc
sub
lret
mov
pusha
sbb
jno
xor
lds
cmp
call
les
out
sbb
mov
mov
shlb
in
std
cmp
push
and
stos
bnd
sub
push
and
sub
and
cwtl
sti
imul
mov
or
mov
sarl
mov
scas
pop
inc
jp
daa
lds
mov
xlat
inc
ds
sahf
rolb
cmpsl
jmp
or
cmpsl
xchg
fisubs
mov
or
movsb
incl
push
cmp
cmpsl
mov
scas
je
add
out
xor
or
pop
inc
test
push
out
out
bound
sub
jp
xchg
sub
xchg
jp
mov
scas
dec
cmp
jg
jns
sbb
lcall
out
pop
jl
popw
mul
push
leave
inc
dec
aad
adc
adc
mov
addr16
xlat
subl
ficoms
movsb
ljmp
xchg
cwtl
add
pop
and
out
mov
mov
mov
outsb
xchg
insb
call
push
mov
fisttpl
ljmp
xchg
inc
add
es
push
aam
outsb
mov
fdivr
lods
and
jge
adc
push
inc
fbstp
loop
xchg
xor
mov
dec
push
enter
push
add
clc
sbb
sti
clc
push
mov
push
int3
push
mov
sbb
dec
push
test
jmp
movsl
mov
mov
push
fld
push
and
sbb
jmp
adc
pusha
dec
hlt
leave
xchg
xor
cld
imul
sti
mov
lret
pusha
push
shll
loopne
add
cli
jns
mov
mov
xor
sarb
jnp
rcrl
push
icebp
idivl
mov
mov
sbb
sbb
lahf
lcall
mov
repnz
xchg
or
mov
mov
cmp
sbb
push
xchg
push
sub
push
lret
mov
inc
shl
xor
xchg
mov
in
push
test
rcr
push
lds
cwtl
ss
and
sbb
cmp
pop
and
xchg
daa
adc
imul
lds
ss
and
ffree
pop
test
ret
sarb
add
xchg
push
lods
add
adc
push
ret
popa
xor
cltd
pop
ja
cmp
fdivrl
movsb
push
jbe
jmp
aad
xor
bswap
push
inc
scas
cli
sahf
inc
sahf
repz
les
or
dec
loopne
aas
popa
ss
cs
int
xchg
mov
jp
in
cmp
in
inc
dec
and
movsl
mov
scas
xchg
adc
shl
push
mov
pop
popl
bound
mov
aaa
movb
jp
retw
enter
add
in
or
pop
shlb
xchg
mov
aad
int
push
nop
sub
fnstenv
int
lcall
enter
pop
jb
mov
and
dec
cmp
aas
out
fnstcw
popa
xchg
std
jecxz
and
sbb
push
sub
js
and
pop
std
sub
xchg
sahf
scas
int
nop
pop
lea
out
aaa
fisubl
into
inc
mov
popf
aas
sbb
jg
shr
movsb
mov
pop
cmpsb
test
mov
xlat
dec
inc
jbe
addr16
dec
es
sbb
dec
add
xchg
movaps
cmp
pop
stos
jl
fcmovu
adc
movsb
arpl
std
sti
loope
cmp
mov
xor
lret
and
mov
dec
inc
push
shlb
clc
dec
inc
fcoml
stc
addr16
pop
adc
shl
mov
ja
push
not
xchg
cmc
pop
and
and
fsubrl
call
imul
test
movsb
fildl
aad
pop
adc
dec
in
fildll
sub
notb
shll
push
iret
jae
inc
sbb
jecxz
xchg
pop
add
jno
fs
adc
subl
pop
imul
add
in
lret
adc
clc
push
lahf
sbb
mov
mov
mov
mov
dec
adc
fistpll
xor
insl
les
and
xchg
cmp
push
fisubrs
mov
popa
iret
cmp
ret
xchg
add
leave
negl
jge
sar
cmpsb
mov
xchg
xchg
xchg
xchg
add
movsb
xchg
das
aas
cwtl
es
jmp
call
fldt
or
data16
and
lds
inc
daa
fstpt
jl
bound
or
sub
jle
push
mov
pop
or
aam
rorl
sbb
mov
imul
and
ljmp
jns
add
out
fldenv
fucom
pop
adc
jns
cmp
in
push
aam
into
nop/reserved
jmp
pusha
out
scas
cmp
fldl
rcr
in
imul
int3
movsl
loopne
or
stc
movsb
icebp
subb
lea
adc
aas
pop
pop
data16
sub
jmp
stos
mov
sub
adc
repnz
mov
sub
subb
testb
cli
fmull
jle
aaa
mov
sbb
mov
sub
scas
mov
push
dec
pop
js
or
mulb
add
ret
fmul
gs
sbb
push
pop
mov
xchg
xchg
sub
int
jae
mov
dec
jne
fildl
mov
and
jmp
test
and
sbb
pop
xchg
nop
adc
fsts
sub
mov
popf
nop
js
fs
into
mov
pop
mov
arpl
ja
xchg
pop
inc
add
aam
push
xor
aaa
into
xchg
insb
sub
jnp
cmp
test
shlb
fneni(8087
push
sbb
data16
xor
jecxz
xor
add
aad
dec
movsl
ret
test
mov
cld
nop
jp
pop
and
jecxz
jb
mov
in
inc
xchg
imul
sub
add
loopne
mov
hlt
loope
jnp
xor
xor
pop
sbb
lahf
or
lock
cmp
pusha
fistl
cld
push
sbb
popf
cs
jb
add
push
push
shrb
cmp
aam
pop
aaa
ljmp
jae
mov
push
pop
xchg
leave
pop
xchg
cmp
aad
pop
les
pop
dec
test
rol
xchg
mov
rcrl
jmp
push
scas
test
mov
jle
inc
sbb
push
pop
in
sbb
ret
mov
add
sbb
in
sti
sbb
outsl
shlb
or
popa
rcl
mull
xor
stc
rclb
and
ret
aam
add
cld
fnstsw
fdivs
lock
insb
js
cmc
mov
pop
aad
push
or
inc
and
push
rclb
fimull
inc
sbb
or
sbb
push
in
imul
cmp
sti
pop
mov
out
xor
cmp
or
jecxz
xor
cltd
test
inc
imul
inc
int
push
fsts
xchg
mov
mov
loopne
lahf
or
sbb
out
divb
inc
test
mov
mov
repnz
inc
mov
lret
fwait
jmp
das
mov
mov
jae
xchg
xor
fprem1
dec
push
add
dec
stos
setle
shlb
movsb
dec
data16
dec
sbb
cli
iret
xor
fdivrl
fisttpl
in
sahf
mov
lcall
dec
testl
sub
into
cmp
mov
dec
movsl
loop
insl
fimull
push
fs
and
pop
fisubl
sbb
aam
mov
mov
inc
aaa
xchg
adc
sub
push
scas
int3
fsts
jp
test
das
int3
loopne
adc
aas
add
jbe
dec
xchg
pop
push
xor
out
jmp
adc
jl
jae
push
and
gs
js
sbb
xchg
jecxz
sahf
stc
cmp
hlt
push
mov
outsb
jns
int3
aad
mov
mov
into
out
cs
xlat
cmpsl
xchg
xor
ljmp
cmp
pop
adc
xor
push
orb
xchg
cmpsb
cld
mov
imul
push
cli
cmc
test
test
push
out
mov
fidivs
jae
pop
cmp
or
scas
fstpt
call
les
mov
iret
push
js
enter
ficoml
addb
and
fistpll
inc
jge
pop
cmpsb
sti
xor
push
subl
or
aaa
decb
mov
subl
push
pop
pop
and
test
add
subl
imul
dec
xchg
data16
xchg
cmpsl
adc
jbe
dec
push
push
sbb
leave
pop
sub
popa
inc
or
aad
sub
in
pushf
subl
jbe
cltd
and
mov
call
or
xor
testb
popa
fsub
arpl
inc
sbb
jns
adc
int
repnz
aam
or
sub
in
inc
mov
pop
dec
subl
adc
xor
push
adc
hlt
xchg
sbb
jne
and
dec
shll
push
jle
aas
adc
mov
adc
xchg
pop
sbb
in
es
add
ljmp
icebp
ret
mov
adc
lret
fldt
in
inc
xchg
fildll
or
sub
cld
pop
inc
xorl
jge
fistpll
add
xchg
and
mov
mov
mov
enter
incl
xor
fstl
add
mov
cld
xor
ficomps
pushf
jne
aam
inc
add
jl
sbb
out
push
pop
into
lret
xchg
mov
out
jp
inc
testl
sarb
lods
jl
xor
or
xor
roll
sub
cmp
dec
into
push
sahf
sbb
insl
fstpl
add
out
push
dec
int
or
mov
addl
push
dec
pop
push
test
mov
adc
pop
clc
das
test
sbb
adc
xchg
and
pop
sub
mov
dec
out
sahf
ret
fadd
adc
xchg
pop
pop
das
jmp
cmp
ds
insl
push
sub
dec
mov
mov
addr16
jmp
lcall
gs
hlt
mov
pop
sbb
addr16
or
xchg
rorb
nop
imul
mov
mov
mov
ss
sarl
adc
pusha
ds
ljmp
xchg
test
add
test
add
cmp
or
pop
scas
mov
int
push
mov
shrb
outsl
pop
jle
sub
jbe
add
in
pusha
cwtl
leave
popf
inc
aam
bnd
dec
sub
push
pop
aaa
fdivp
int3
inc
cmc
jge
loope
jp
sbb
mov
rcr
push
fists
pop
mov
call
pop
outsb
xchg
leave
jecxz
sub
leave
adc
push
pushf
mov
mov
je
push
fstl
push
add
sbb
bound
sbb
inc
ret
sub
xchg
ja
xchg
xor
adc
jg
dec
lcall
sbb
pusha
call
xor
stc
xor
add
sahf
scas
pop
mov
inc
and
sbb
leave
stc
dec
int3
mov
inc
and
add
mov
xchg
sub
adc
and
pop
and
jl
outsl
dec
fildll
xchg
sahf
adc
ja
int
pop
jns
outsl
outsb
pop
mov
or
loope
xchg
adc
adc
adcb
pop
inc
jne
lods
aaa
lods
outsb
int3
in
insb
sub
or
in
icebp
aas
pop
shlb
fwait
jns
push
push
mov
lods
sub
xor
out
cld
sarb
mov
or
dec
mov
testb
jns
sub
sarb
out
xorb
mov
mov
mov
sub
sub
dec
repz
jnp
xchg
dec
adc
ss
scas
cmp
stos
pop
or
pushf
pushf
clc
adc
inc
jbe
nopl
sbb
inc
adc
xchg
aaa
push
mov
xor
pop
cmp
out
push
push
add
xchg
out
lock
notl
loop
lods
ss
or
push
xor
fwait
iret
int
push
in
or
lods
add
imul
adc
mov
cmp
pop
sbb
jns
stos
mov
leave
mov
push
int3
ret
mov
test
xor
and
mov
mov
or
mov
test
roll
imul
cmpsl
adc
int3
outsb
dec
les
js
ret
cmp
cld
in
icebp
movsb
inc
add
pop
mov
mov
sbb
jl
scas
inc
mov
test
aaa
push
jle
and
enter
test
in
repnz
xchg
cmp
cmc
mov
or
mov
shlb
das
mov
pop
and
push
ret
jmp
fnstcw
roll
sbb
lea
mov
and
loope
pop
pop
pop
lahf
inc
pop
shl
in
jno
sbb
and
sub
jb
add
pop
add
fwait
movsl
add
pop
test
pop
jns
movsb
push
push
cmp
jge
out
stos
push
clc
pop
or
push
jo
sbb
enter
test
mov
imul
mov
cmp
popa
leave
out
fdivs
lret
scas
adc
test
jp
out
jno
hlt
adc
cltd
mov
jne
pop
mov
std
mov
daa
pusha
add
pop
std
push
add
xor
enter
push
cmpsl
jno
inc
aad
aam
mov
dec
shl
push
repz
ljmpw
and
mov
add
mov
xchg
pusha
arpl
sub
lea
mov
addb
mov
mov
pop
and
push
movsb
adc
lock
test
cmpsb
sbb
jge
mov
mov
hlt
bnd
ret
mov
inc
pop
jno
push
sub
pop
sub
xlat
ds
xlat
pop
cmp
aam
mov
pop
popf
or
jmp
test
push
les
mov
jae
movsb
adcb
pop
push
mov
mov
pop
loopne
xchg
test
cwtl
loope
les
pop
jg
sti
pop
push
fsubl
cmp
sbb
cli
xchg
imul
out
xchg
mov
sub
les
mov
mov
jle
lock
and
fimuls
popf
lods
loop
sarb
loopne
push
mov
inc
es
adc
sbb
dec
cs
xor
fmull
and
sub
out
enter
sahf
bound
push
and
push
popw
cli
pop
leave
rcr
cmc
or
mov
jnp
data16
cmp
or
fimuls
js
inc
imul
xchg
aas
jl
les
scas
jp
cmpsb
xchg
adc
ds
xor
push
xor
xchg
fnstcw
dec
xor
outsl
ljmp
push
and
int
pop
popa
mov
dec
and
ficoms
sub
lods
movsb
imul
push
jbe
pop
pop
adc
jl
jns
pushl
jo
adc
roll
fsubrl
inc
lahf
xchg
test
lcall
leave
out
jb
jecxz
cmp
outsl
push
push
push
std
or
jecxz
scas
pop
push
and
mov
sahf
inc
pop
cmp
fsubrp
adc
addl
rolb
fcompl
jae
fbld
pop
mov
mov
rorl
decb
test
jnp
incl
pusha
inc
mov
jnp
popf
out
leave
sti
ljmp
pop
xchg
sub
jle
xor
test
or
ja
adc
mov
addr16
in
pop
mov
mov
les
inc
or
int3
out
int
push
jae
shr
ret
xor
stc
mov
mov
sub
pop
outsl
insb
xchg
sbb
loopne
scas
fs
sub
lds
pushf
xchg
or
sub
inc
dec
test
popf
inc
xor
adc
stc
mov
jb
ja
repnz
xchg
mov
in
fldenv
aaa
fnstcw
ljmp
inc
sbb
jle
jg
pushf
lods
loope
js
mov
inc
incl
push
scas
push
lret
push
mov
sbbl
out
dec
push
divb
sub
cmp
ljmp
outsb
shrb
adc
loope
cmpsb
or
inc
movsl
or
loopne
inc
fwait
setg
ficoml
push
push
inc
cs
das
dec
push
mov
pushf
mov
add
pop
rcll
aam
push
loope
add
dec
daa
pop
push
ss
or
sub
dec
fisttpll
into
repz
mov
mov
mov
cli
repnz
mov
out
test
xchg
mov
pop
cmpsl
outsl
cmp
das
ret
inc
cmp
loope
sbb
xor
fildl
sahf
cmpb
call
adc
hlt
mov
aam
and
jmp
repz
xchg
jb
cmp
lods
push
pop
enter
es
arpl
int
sub
or
and
mov
sbb
add
sbb
int3
scas
jle
add
dec
in
bound
leave
or
sub
jne
psubq
sbb
jnp
fcmovnu
adc
adc
orb
and
out
fmulp
xor
mov
out
push
xor
jo
sti
inc
xchg
add
outsl
pop
inc
mov
cmpsb
add
jg
sbb
pusha
push
xor
cmp
test
cmpsb
push
cs
cli
ret
addr16
addr16
inc
rcll
jo
out
test
jb
test
out
xchg
jne
dec
je
jns
repz
int3
lcall
loope
mov
int3
jmp
stos
popa
stos
imul
sub
leave
mov
sub
sbb
jbe
sub
pop
cmc
sbb
adc
or
push
push
in
add
nop
jae
in
je
mov
pop
stos
or
jle
adc
testb
ret
addr16
xchg
imull
inc
jp
mov
call
add
incl
mov
ret
popa
loope
mov
pushf
notl
push
out
xlat
mov
nop
cmp
dec
fmuls
jne
out
je
mov
jle
outsb
jne
cli
das
adc
and
push
push
scas
inc
cmp
jbe
xchg
push
lahf
sub
sbbb
inc
push
pushf
ljmp
pop
imul
cmp
push
mov
bound
adc
cwtl
sarb
mov
imul
iret
cmp
stos
pushf
dec
test
sbb
xchg
rcll
jmp
cmpsb
mov
jno
into
add
jo
cwtl
insl
jnp
jns
in
pop
push
adc
jle
mov
jae
xchg
shlb
ds
fildll
in
subl
rorb
jl
or
subl
shll
aad
or
sub
xor
scas
sub
iret
ljmp
sub
psubb
loop
adc
inc
jne
adc
add
inc
xor
push
int
mov
jge
inc
mov
js
or
or
je
aas
mov
push
xor
add
add
push
sbb
mov
shlb
in
jmp
pop
xchg
loop
and
mov
mov
movsb
and
ss
xchg
sub
add
push
sub
mov
dec
adc
lods
iret
das
addr16
or
fsubl
jb
push
cwtl
int
jae
loopne
sub
or
pop
mov
pop
pop
imul
add
inc
jmp
pop
mov
mov
push
js,pt
sub
cltd
jns
or
xchg
test
rorl
cmc
pop
mov
pop
cmc
adc
mov
mov
cmp
add
repnz
sbb
adc
cmp
jne
hlt
enter
dec
popl
cmpsl
mov
test
cmp
in
add
jl
add
push
xchg
adc
inc
or
mov
dec
cmc
pop
mov
pop
rol
xchg
dec
call
lods
cli
sahf
jno
int
jne
push
adc
loope
test
pop
mov
xor
push
dec
add
and
cmp
loope
fisubrl
and
stc
shll
mov
addl
loope
fmuls
insb
mov
les
add
test
pop
mov
add
xchg
dec
rcl
sub
arpl
pop
je
js
lock
inc
xchg
mov
xchg
mov
adc
pop
ljmp
in
cli
les
xor
enter
in
or
mov
xor
dec
inc
dec
jb
sti
push
mov
popl
loope
scas
or
mov
andl
xchg
xchg
pop
fwait
jae
flds
popf
mov
adc
xchg
add
xor
les
std
sbb
dec
outsb
mov
inc
push
gs
ljmp
dec
in
das
dec
mov
cld
cmp
xchg
cmp
dec
xor
idiv
into
icebp
test
js
mov
or
je
in
jp
outsb
add
xlat
xchg
xor
inc
jno
clc
or
iret
fwait
sub
lahf
or
push
lret
and
call
jns
cmp
sbb
ud1
and
mov
in
hlt
mov
int
cmp
std
das
add
movsb
xchg
push
xor
call
xchg
sub
lret
cli
into
cmp
cmp
shll
call
sub
pusha
sbb
xchg
icebp
pushf
sbb
repz
mov
cs
pop
or
dec
jp
je
push
subl
sub
jns
pop
in
repz
jecxz
inc
cmp
std
in
xchg
in
lods
xchg
repnz
xchg
mov
mov
jle
ret
in
test
adc
inc
inc
imul
into
std
leave
jg
sub
lret
loope
sti
andl
add
cwtl
adc
pop
mov
scas
mov
mov
and
in
cltd
stos
jbe
inc
pop
dec
out
cmp
idivb
push
bound
sahf
mov
xor
pop
movsl
int
xlat
loope
mov
pop
fsubrl
loope
xor
jne
inc
push
mov
jne
adc
popf
xchg
js
dec
rol
jb
aam
xlat
leave
inc
xchg
jl
xchg
and
ds
ss
mov
ret
repz
cld
sbb
popa
inc
xchg
test
dec
into
mov
sbb
ss
enter
daa
adc
mov
mov
fildll
stc
ds
sbb
fimuls
imul
or
repnz
in
push
push
loop
sub
xchg
gs
xor
das
xchg
xchg
ja
adcb
mov
orb
dec
dec
arpl
frstor
push
gs
ss
sahf
mov
stos
fsub
xchg
adc
bound
cmp
mov
hlt
xchg
cmc
sahf
fsubrl
jmp
imul
mov
inc
es
repnz
lds
adc
xchg
movsl
icebp
xor
data16
mov
insb
jl
cmpsb
int
mov
cmp
sbb
xchg
mov
shll
hlt
sbb
lods
repz
stos
or
rcrl
dec
pop
xor
add
jmp
mov
jle
imul
add
sbb
negl
push
lea
mov
stos
mov
rol
rcl
fcomps
or
lods
add
cmpsl
xchg
sbb
in
adc
push
jb
movsb
pop
dec
nop
mov
mov
jecxz
sub
pusha
aaa
popf
jge
movsl
mov
xlat
mov
lret
fcmovbe
jl
xor
std
cmp
lods
mov
lds
sbb
dec
das
jo
jnp
loopne
xlat
das
lock
shl
ss
data16
adc
call
arpl
mov
xor
insl
and
cmpsb
mov
push
xchg
mov
cli
mov
pop
push
hlt
push
or
cmpsl
jmp
or
xchg
mov
leave
mov
mov
add
gs
stos
rorb
push
push
das
in
xor
push
fcoml
add
shrb
xchg
inc
add
lea
push
dec
mov
fists
lods
cmp
mov
les
ja
adc
adcb
lock
sti
xchg
repz
add
icebp
test
pushf
shl
or
ret
xor
mov
xchg
popf
sub
int3
push
inc
pushf
inc
rcll
hlt
and
cld
push
mov
enter
mov
cmp
insl
test
popf
fucomp
and
movsb
fdivs
pop
mov
and
nop
rcll
pop
sbb
or
bound
js
inc
mov
push
outsb
mov
mov
inc
pop
jae
movsl
fnstsw
dec
cmc
sbb
lret
enter
das
sti
dec
sbb
stos
sub
pop
and
fwait
jnp
sub
push
popaw
cmp
push
mov
dec
not
mov
imulb
mov
push
pop
xchg
rcrb
adc
sbb
jae
inc
fstpl
cmp
bound
add
jnp
cmc
out
mov
lds
daa
stc
xchg
cmp
scas
dec
enter
mov
je
xlat
data16
out
clc
adc
jp
aam
inc
scas
not
mov
movsb
cltd
jo
lods
mov
jmp
pop
int3
outsl
imul
mov
push
dec
jo
out
mov
push
jns
cwtl
repz
mov
in
sti
fstpt
icebp
or
push
hlt
jo
fdivrs
test
sbb
xchg
jae
pusha
pop
js
add
push
fwait
xchg
shll
or
cmp
aaa
pop
xchg
mov
pop
data16
jo
in
js
lcall
out
pop
dec
dec
cld
sub
dec
daa
test
aaa
jae
mov
leave
mov
or
jo
cmp
jmp
mov
lea
mov
jno
cmp
inc
push
dec
jle
cmp
test
and
lds
mov
fldlg2
push
pop
cmp
sbb
hlt
add
cmpsl
out
inc
xchg
shlb
add
push
dec
andb
adc
out
pop
sub
jle
add
dec
and
faddl
ss
adc
pop
js
cmp
pop
inc
stc
out
lea
push
jnp
mov
dec
or
dec
scas
in
dec
cli
xchg
pop
lret
sbb
addr16
mov
mov
lret
sbb
repz
pop
in
xlat
jp
mov
jns
mov
mov
in
filds
pop
push
and
push
int
das
je
and
or
sbb
cmp
stos
aas
fsts
aam
mov
adc
push
cmp
adc
stos
adc
mov
push
pop
mov
jle
push
cmpsb
rcr
mov
int
scas
jo
insl
jne
push
lea
lds
jae
sbb
add
into
call
add
outsl
mov
pushf
test
jns
adc
and
adc
inc
cmpsl
addb
push
mov
lds
mov
mov
and
xchg
mov
xor
out
jne
mov
jle
pop
mov
push
loope
inc
arpl
push
mov
xchg
aas
dec
mov
in
in
cltd
pop
xchg
mov
int
cs
ja
inc
negb
fisttpll
cld
or
cmp
popf
add
fistpll
or
repz
lods
mov
stc
call
scas
xchg
mov
push
xchg
fwait
lcall
or
and
sbb
push
lods
aam
mov
and
repnz
and
mov
stc
daa
cmp
sbb
out
jne
inc
lock
daa
mov
sbb
bound
sbb
inc
orl
decl
xor
aam
cmp
or
push
xlat
fistps
inc
gs
sub
xor
cld
imul
scas
shrl
push
mov
popa
fidivrl
incl
sub
addb
mov
js
mov
nop
sub
clc
xorl
add
sbb
cmp
in
loope
jp
dec
mov
inc
stos
ror
cmc
adc
jle
popa
dec
loopne
cmpsl
push
repz
sbb
sub
mov
fiadds
sub
lret
or
fdivs
xor
mov
jne
cmp
mov
or
call
inc
cltd
in
aam
fistl
or
jns
sub
or
xor
in
fists
fidivrl
push
jge
stos
add
or
push
loopne
lea
out
andb
stc
push
sub
clc
xchg
jae
ss
out
dec
mov
or
cmp
in
jbe
or
jmp
sub
inc
cmpsl
and
into
push
mov
movsl
out
push
push
ret
sub
xchg
imul
xor
mov
pop
sub
dec
mov
call
aad
imulb
shrl
add
mov
mov
addr16
int
adc
inc
aas
and
cli
mov
cmp
mov
es
jp
adc
bound
or
hlt
pop
mov
pop
out
test
imul
mov
test
call
xchg
out
cmp
enter
push
dec
pushl
push
and
xchg
stc
ds
loope
dec
aaa
int
xchg
lea
push
ljmp
mov
push
test
mov
out
or
fsts
fidivrs
lea
adcl
sub
jecxz
and
out
pop
mov
jge
pop
pop
mov
push
addr16
lds
pop
cmp
or
adc
pop
dec
in
inc
inc
push
pusha
jecxz
inc
sub
push
xchg
imul
xchg
mov
rcl
jno
xor
sbb
sub
push
jge
cmp
sub
sbb
test
adc
and
lock
jmp
loopne
rorb
sub
shlb
mov
cmp
push
inc
mov
mov
mov
pushf
add
inc
dec
push
out
loopne
scas
in
xchg
dec
adc
sti
xor
or
dec
addb
ficompl
lock
aas
sbb
roll
js
cmp
gs
push
bound
or
or
loopne
in
repnz
fidivrl
aad
je
cld
fsubrl
push
decw
je
xor
or
data16
dec
xchg
pop
pop
inc
imull
sbb
ss
mov
clc
or
mov
xor
test
lret
mov
mov
stos
and
rolb
mov
popf
pusha
mov
pop
pop
sbb
test
add
mov
pop
sub
fnop
adc
sub
sub
sahf
add
mov
or
addr16
mov
stos
cmp
stc
adc
xchg
lahf
sar
repnz
pop
popa
sbb
mov
push
ljmp
jp
pop
mov
xchg
sbb
pop
cmp
movsb
in
rcll
xor
aaa
mov
cmp
fisttpl
sbb
mov
cmpl
insl
imul
fbld
imul
fstpt
clc
xchg
out
popf
dec
add
jmp
or
adc
fsubrl
clc
jno
and
les
daa
pop
ror
push
jns
dec
jl
out
call
xorl
lods
push
in
bound
imul
in
lods
cmpsb
push
push
leave
test
popa
ret
es
and
jns
push
jle
arpl
insl
rclb
shlb
in
mov
pop
clc
xor
rolb
xchg
and
mov
and
jge
cmp
adcb
mov
lea
leave
jbe
dec
add
jbe
rorb
jmp
cwtl
sarl
jge
fcmovnu
mov
jne
xor
fisubrs
sub
sub
xchg
orb
push
aad
sub
loop
jp
sub
stc
in
xchg
pushf
lret
aam
mov
scas
inc
add
dec
fldt
mov
leave
decb
shr
enter
cwtl
ret
icebp
lods
xchg
leave
cmpsb
push
out
xor
adc
out
dec
sub
and
sub
call
mov
mov
jge
add
inc
std
sub
scas
cs
dec
pusha
pop
les
push
js
mov
mov
dec
movsl
pushf
fmulp
jle
mov
pop
fsub
inc
push
ljmp
jb
jne
mov
pushf
mov
sub
adc
xchg
xchg
loopne
test
push
jo
test
mov
jns
outsb
sti
clc
add
inc
pop
jb
pop
daa
jge
sub
test
cmp
inc
jp
and
mov
xchg
and
pop
aas
cmc
mov
insl
test
mov
stos
movsl
jae
and
cmp
fs
lcall
xor
lods
jne
pop
dec
push
aaa
pop
pop
push
cmc
xor
inc
dec
xor
loope
incl
push
cmp
inc
popa
jbe
pop
or
stos
pushfw
dec
arpl
in
jge
pop
outsb
mov
ljmp
dec
inc
xor
sbb
or
cmp
roll
or
push
inc
push
pop
cmp
mov
dec
dec
inc
into
xlat
and
ret
in
xchg
js
push
or
stos
sub
mov
hlt
mov
shl
and
jp
push
fldl
inc
rcrb
das
pop
dec
jae
inc
out
push
sbb
cmc
xchg
push
cs
inc
idivb
sti
arpl
pop
sbb
scas
mov
hlt
inc
dec
mov
or
or
xorl
stc
jns
hlt
cli
add
mov
insl
dec
dec
push
jno
xor
pop
lcall
pop
jmp
data16
out
cmp
insl
push
pop
jo
lds
adc
sbb
jmp
cmp
mov
mov
mov
pop
dec
pop
jne
xchg
sbb
pop
push
cld
rol
inc
dec
clc
xchg
jno
xor
push
sbb
sti
lea
test
dec
in
xor
fnsave
mov
lret
mov
fstps
dec
cmpsl
call
lahf
fidivl
sbbl
pop
popa
cwtl
mov
sahf
popf
push
lret
pop
pop
fisubs
cmpsb
jo
jno
rorw
das
pop
lahf
out
sbbb
out
pop
mov
fcompl
adc
sbb
int3
jmp
mov
lahf
popaw
cld
add
shlb
cmp
sbb
cmp
cmp
arpl
mov
push
cs
inc
lods
adc
in
ficoml
mov
aad
mov
jge
push
clc
xor
pop
nop
rolb
and
pushf
sub
daa
sub
jge
mov
and
out
sub
or
mov
add
outsb
in
scas
pop
or
les
ret
fmull
mov
push
adc
outsb
mov
jns
xchg
and
mov
and
pop
mov
push
test
sti
pop
sub
and
mov
push
sbb
cli
jge
movsl
mov
stc
mov
pop
or
push
inc
jo
hlt
and
jmp
jb
mov
in
add
das
arpl
and
jge
xchg
stos
outsl
call
push
daa
cmp
sub
xchg
sbb
neg
je
into
je
xlat
enter
shll
jae
rcll
dec
mov
imul
pop
hlt
inc
push
cwtl
mov
jb
or
je
jns
cmp
mov
inc
cltd
sub
bound
in
push
or
scas
test
sahf
or
insl
lea
add
negw
lds
push
and
pusha
das
mov
sahf
or
pop
dec
jns
scas
or
jae
mov
nop
jns
mov
jle
xchg
aas
movl
xor
and
push
pop
bound
sbb
adc
scas
mov
cmpsb
mov
jb
xor
flds
fs
ja
or
pop
pop
mov
adc
inc
mov
push
xchg
popf
pop
out
pushf
xchg
mov
fistpll
cli
sbb
dec
lcall
sbb
arpl
push
mov
adc
mov
or
dec
fstps
insb
xchg
cmpsb
adc
in
pop
adc
dec
xor
mov
push
jbe
adc
jae
xchg
push
adc
nop
in
outsl
ret
scas
xor
mov
xor
rcll
aam
pop
enter
jmp
int3
in
shll
pop
mov
sub
imul
xor
cmp
or
add
mov
rolb
dec
lea
cmp
push
ja
xor
mov
sarl
int
jbe
mov
xchg
jmp
and
adcl
in
jl
push
mov
cld
push
and
inc
cmpsb
popa
nop
test
xchg
aaa
mov
es
and
pusha
repnz
xchg
pop
dec
insl
mov
mov
cmpsl
and
leave
aas
ficoms
sbb
push
test
shrb
in
cmp
add
mov
xor
sarl
and
adc
cmp
dec
insl
mov
sbbl
pusha
icebp
stos
scas
inc
dec
cmp
adc
or
imul
cmp
sub
cli
fcomi
dec
jge
jnp
jmp
subl
sub
pop
aas
dec
pop
sahf
mov
xor
mov
das
loope
outsl
imul
lods
scas
mov
outsb
fisttpll
jbe
std
inc
dec
loopne
mov
test
sbb
and
ret
pusha
add
or
push
movsl
pop
adc
mov
mov
inc
mov
repz
mov
push
lret
sbb
jne
mov
out
lahf
fcmovnbe
pop
btc
jmp
shll
aad
ja
test
nop
mov
add
repz
xchg
es
unpckhps
cld
cli
mov
out
ja
cli
pop
jg
mov
nop
add
cmpsl
or
cmp
jo
mov
aaa
mov
in
test
iret
xchg
push
push
sub
fs
jnp
dec
loopne
and
addr16
sbb
adcb
stc
jg
jmp
cmp
lock
mov
stos
mov
stc
push
popa
shrl
imull
push
dec
data16
out
mov
jnp
cmp
leave
test
cwtl
imul
fldln2
or
fadds
arpl
jle
mov
outsl
ja
cmp
xchg
jge
inc
and
imul
dec
mov
and
pop
gs
jnp
xor
sti
cltd
cld
ss
cltd
dec
add
in
sahf
mov
cmc
push
vpcmpgtw
jae
push
xchg
mov
shll
jae
ret
lods
push
loopne
xor
add
test
mov
cmp
xor
das
ja
mov
lret
adc
xchg
xor
aam
adc
lods
dec
sarl
mov
ja
xchg
jne
das
ja
fsubrp
mov
jmp
mov
jle
cwtl
das
les
xor
or
cmpsb
popa
sarl
cmp
pop
sbb
es
mov
sahf
xchg
cmpsb
sub
dec
jle
jae
and
out
fsts
cmp
call
incl
out
call
jle
in
mov
aaa
mov
loop
xchg
inc
adc
pusha
out
push
xor
cwtl
in
fisubrl
xor
push
and
push
mov
inc
js
aaa
dec
in
fcmovu
pop
in
cmp
lods
mov
mov
push
inc
sbb
stos
iret
je
iret
divl
inc
cmp
cmp
pop
xchg
clc
shlb
int3
lea
jecxz
push
lods
push
inc
inc
test
aaa
sbb
push
xlat
repnz
addb
mov
stc
dec
or
bound
into
mov
sub
cmpsb
lahf
lcall
aad
es
sarl
jbe
leave
dec
or
jmp
rorb
das
add
pop
pop
sbb
aaa
mov
icebp
and
jbe
push
xchg
bnd
fnstcw
stos
ss
pop
jne,pt
or
and
xor
pop
pop
pop
fimuls
test
jae
nop
jns
mov
aad
xchg
or
andb
ja
xchg
cwtl
sub
mov
fs
sub
jne
pop
jmp
ror
in
hlt
or
fildll
mov
dec
stos
mov
inc
subb
xchg
pop
sbb
imul
xor
or
enter
bndldx
or
mov
inc
push
lods
mov
ja
mov
mov
inc
clc
movsb
sub
jg
addr16
add
jno
into
and
clc
adc
clc
lret
dec
mov
xor
cmovle
xchg
aaa
lret
imul
jnp
fildl
pop
ret
mov
fildl
inc
push
cmpsl
scas
rol
jge
mov
sbb
pop
enter
mov
pop
jns,pt
jmp
mov
jo
xor
data16
xorb
pushf
fwait
lret
rcrl
negl
xor
movntps
roll
imul
jle
out
enter
push
mov
sub
mov
shll
fwait
jae
xor
add
movsb
das
daa
dec
cmp
repz
gs
dec
pop
cmp
add
inc
cmc
xor
sub
js
cld
dec
adc
das
fdivrs
lret
sub
bound
lods
insl
loope
push
push
enter
pop
sub
sbb
push
sub
std
or
xor
popf
dec
adc
divb
jns
push
push
dec
push
sarb
push
jp
sbb
mov
fnstsw
sbb
jmp
pop
or
outsb
push
mov
popl
aad
shrb
daa
push
sub
stos
fcoms
push
xchg
insl
sub
sub
bound
mov
cli
outsb
lock
call
mov
dec
dec
jae
insl
mov
lahf
rcll
cmovle
cli
inc
cmp
or
lods
mov
dec
es
fs
ja
arpl
daa
nop
add
ljmp
es
and
lcall
dec
out
mov
cmp
outsb
add
inc
sarl
enter
inc
push
out
push
dec
add
popf
pop
xchg
lock
cmp
or
gs
adc
cwtl
rcrb
insl
or
cmp
lds
sub
outsb
sbb
leave
dec
and
lea
movsb
and
pop
cwtl
adc
cmp
push
dec
xor
mov
mulb
xor
out
loopne
je
dec
int3
dec
xlat
cmp
xchg
push
pop
outsb
mov
sbb
push
add
adc
sar
add
cmp
mov
mov
std
xor
adc
movlps
mov
in
ljmp
shr
dec
cmp
jecxz
mov
mov
stos
loop,pn
xchg
xchg
push
mov
or
fdivs
fisttpl
sbb
pop
jecxz
cwtl
or
aad
aad
int3
bound
mull
adc
iret
mov
add
sarb
add
push
jns
cmp
scas
mov
mov
add
push
call
mov
push
std
and
sub
xchg
test
push
rcrl
fsubrs
inc
jns
add
xor
add
add
fbstp
dec
dec
jp
add
push
mov
mov
out
daa
in
inc
outsb
fisubrs
xor
push
sbb
dec
into
lods
in
cwtl
adc
jb
mov
in
jge
push
xchg
notl
cmpl
mov
mov
or
mov
mov
hlt
idivb
mov
adc
das
movsl
jp
cmc
arpl
adc
sahf
mov
pop
sarb
fcomps
testl
jecxz
adc
imul
jle
lea
jmp
in
loop
and
in
lods
insw
mov
ss
xorl
jne
sub
arpl
adc
in
push
out
fidivl
popa
adc
nop
gs
xor
in
xor
fists
sbb
pop
lret
sahf
jp
cwtl
or
shrl
sbb
xor
mov
and
scas
dec
mov
jge
shll
xchg
das
test
push
mul
cli
xchg
rclb
cmp
and
lea
cmp
inc
push
test
sbb
dec
add
ret
inc
std
jp
cmpsl
stos
ds
ds
int3
inc
test
imul
xchg
pop
pop
aaa
xor
imul
sub
popf
mov
xor
cmpl
dec
push
jp
mov
je
in
stc
xchg
mov
sbb
outsb
test
loope
jbe
mov
out
mov
out
jp
loope
sbb
ffreep
xor
loope
mov
cmp
cmp
fwait
mov
jae
cmpsl
fsubl
idivl
leave
jb
ds
mov
jne
xchg
ja
in
aaa
nop
add
stos
push
enter
popf
adc
pop
loope
js
lcall
adc
adc
xor
jp
mov
cmpb
inc
into
fisubrs
adc
inc
jg
inc
idivl
jp
rorl
sbb
add
lret
xchg
xor
call
push
loopne
inc
sar
cld
or
adc
inc
pop
sbb
sti
pusha
xchg
and
mov
adc
xor
mov
or
sbb
jecxz
test
aas
jne
jp
cmp
add
loop
sub
xor
xor
fs
int3
psubusw
lahf
xor
jo
arpl
fldt
and
lods
mov
push
pop
jno
sbb
mov
arpl
sbb
mov
imul
cmp
adc
pop
aas
jecxz
fcompl
xor
add
cmc
pop
jp
jle
jno
push
cmp
fsubs
and
test
ret
into
push
or
nop
push
mov
xor
cwtl
and
dec
sarb
mov
mov
fs
loopne
jbe
ja
or
into
ss
out
orl
sbb
mov
mov
out
or
xor
rorb
out
in
sub
jo
mov
xor
xor
xlat
stos
cld
inc
dec
jae
in
dec
shlb
out
cld
sub
outsl
jg
sub
shrl
js
jle
cmp
xor
je,pt
call
xor
fs
xor
mov
enter
mull
pop
shlb
mov
mov
jmp
loopne
jge
mov
push
rcrl
fs
arpl
jnp
fdivrl
add
jmp
cmp
call
mov
sbb
and
mov
pop
scas
aas
xchg
xor
xchg
mov
insb
add
cmp
movsb
gs
in
push
aas
pop
fdivp
roll
jge
adc
in
aas
popf
mov
fcoml
or
or
push
adc
sub
xchg
pop
fdivl
loope
out
mov
and
ljmp
sti
fimuls
outsb
xor
mov
pop
sbb
lds
mov
out
pop
pop
les
rcll
xchg
push
ds
mov
sahf
out
jo
mov
cltd
aad
dec
lock
insb
nop
push
ss
inc
pop
xchg
jbe
into
inc
pop
or
ret
rclb
pushf
mov
pop
jne
lods
xchg
insb
mov
jl
jl
repnz
cwtl
mov
mov
xor
push
xor
mov
loopne
jnp
cmc
je
mov
jnp
xchg
incb
jne
not
or
xchg
dec
mov
cmp
arpl
xchg
xlat
fimull
add
jmp
into
mov
loop
mov
lock
int3
loopne
loop
loopne
pusha
push
stc
js
lods
xchg
cmc
xor
outsl
mov
testl
sub
mov
mov
mov
xor
sbb
jle
jo
call
cs
xor
push
and
dec
in
loope
mov
sub
icebp
cmp
push
inc
inc
push
or
xor
repnz
inc
adc
fwait
mov
testl
xor
jnp
inc
loopne
aam
inc
cmp
jns
cmc
cmpsl
fwait
mov
xor
xchg
mov
sbb
fwait
and
lcall
mov
dec
xchg
add
cwtl
movsl
jno
pop
inc
mov
and
ss
lods
sub
pop
orb
adc
addb
lahf
aaa
mul
push
lods
daa
js
push
popf
fcompl
and
adc
adc
cmp
or
test
xchg
cs
lods
cmp
push
sbb
ret
jnp
lret
push
mov
pushf
fsubrp
outsb
or
lret
cld
psubsb
rorl
fldl
inc
inc
dec
imul
jae
jge
out
rcll
add
lods
push
jnp
ds
sub
int
notb
sti
sub
orl
mov
insl
xor
push
mov
int
aas
sub
aam
push
mov
pop
pop
shrb
daa
jle
insb
in
js,pn
lea
clc
xchg
cmpsb
pop
test
enter
stc
aas
icebp
sub
pop
test
fstl
sub
lea
push
adc
repz
mov
vpslld
push
xchg
sarl
mov
xchg
arpl
xor
sbb
add
mov
out
sbb
mov
xlat
insb
mov
mov
pop
loope
pop
aas
lds
lds
add
outsb
outsl
cltd
pop
push
in
inc
test
stc
sti
loope
fwait
xor
add
rol
sub
push
orb
push
xchg
mov
push
jb
mov
cmp
sub
sti
mov
ds
iret
cmp
lahf
lds
lahf
mov
dec
xor
mov
inc
je
cmp
inc
inc
out
jle
cltd
xchg
loopne
insb
stos
sbb
xchg
aad
nop
mov
inc
outsl
in
les
out
mov
rcl
ror
pop
enter
add
or
jo
neg
xor
add
pop
mov
out
fcmovnb
lock
xor
jno
inc
push
cmp
pop
divl
xchg
push
jmp
or
arpl
scas
pop
xor
mov
cli
icebp
iret
in
sub
mov
das
xor
push
cmpsb
imul
sub
adc
dec
or
cmc
xchg
pusha
addr16
sub
shlb
mov
mov
mov
dec
inc
dec
scas
mov
imul
push
lahf
out
sbb
rorl
xchg
jae
js
rcll
push
test
in
aas
adc
scas
icebp
js
lods
out
dec
xorl
or
jp
in
jg
loope
push
imul
rolb
dec
pop
repnz
and
push
dec
loopne
sbb
jecxz
push
mov
sbb
jle
mov
in
or
fldt
add
addl
iret
push
stos
out
mov
dec
popa
sbb
cmp
cmpsl
movsl
or
js
mov
and
subb
pop
sbb
sahf
stos
sbb
les
cwtl
cmp
movsl
pop
mov
inc
xor
sbb
dec
cmpsb
sub
jecxz
mov
mov
inc
inc
or
or
add
xchg
sbb
cmp
lcall
or
mov
movsl
fwait
aas
daa
or
mov
shr
xchg
jne
out
xchg
out
jae
dec
dec
test
int3
inc
mov
insb
or
das
mov
push
mov
xchg
into
pop
fisubl
xor
dec
mov
repz
xchg
lods
mov
pop
fildl
mov
mov
dec
push
ret
jecxz
and
shl
cld
mov
mov
xor
inc
cli
imul
jecxz
aas
insl
inc
lret
pusha
jo
loope
mov
daa
jb
das
ss
mov
lock
and
cmpsb
sub
dec
movsl
xchg
std
hlt
adc
sarl
inc
mov
rorl
cld
inc
jnp
jmp
pop
mov
mov
loopne
xor
cmp
js
sbb
xchg
je
adc
mov
sub
dec
icebp
lahf
jnp
mov
lret
test
xor
out
sub
lahf
movsb
add
aad
imul
push
or
sbb
outsb
xor
and
aam
push
insl
iret
dec
sub
mov
pop
mov
jg
cwtl
dec
jae
sarl
and
loope
dec
cmc
pop
dec
pop
shll
push
pop
fdivrs
mov
repnz
adc
or
scas
mov
mov
xchg
mov
sub
negb
out
mov
jae
sub
std
and
es
or
imul
pop
add
inc
and
jbe
daa
les
dec
clc
test
or
jge
movsb
fsubrs
inc
push
lock
pop
out
ret
cmp
xor
aaa
push
xor
mov
push
in
test
jae
cmp
test
scas
sub
mov
shl
mov
jae
ret
in
pop
xchg
mov
enter
xor
aam
push
mov
lds
or
lea
adc
sub
pop
push
fistps
loope
fwait
or
imul
movsl
xor
add
loopne
add
adc
fidivs
loop
xchg
pop
fbstp
mov
mov
pop
inc
mov
pop
pop
push
jne
add
jbe
mov
dec
jno
push
test
inc
mov
push
int
es
jnp
xchg
xor
or
mov
xchg
out
cmp
xor
and
and
mov
dec
jnp
mov
test
sarb
mov
xchg
inc
push
lahf
jle
ret
nop
jo
mov
pop
ja
enter
push
pop
xor
outsb
adc
mov
fstpl
sub
lea
nop
cmp
iret
sub
add
ljmp
mov
or
cmp
addr16
rol
dec
dec
dec
pushl
je
lret
sbb
xorb
inc
popa
push
xchg
xchg
test
sbb
cmc
push
imul
fisubrl
mov
dec
adc
stos
mov
push
jo
and
pop
sub
inc
shl
mov
jns
call
negl
jb
mov
cmp
fidivl
push
lods
pushf
sub
adc
mov
push
fists
add
std
in
iret
in
loopne
movsl
mov
sbb
sub
pusha
fsubr
pop
idiv
push
aad
bound
scas
push
jae
sbb
repnz
shlb
or
into
pop
roll
sbb
jno
adc
push
jns
fcoms
cmp
out
test
inc
xchg
push
ficomps
outsl
imul
insb
daa
mov
or
and
dec
out
cmp
lock
data16
xchg
jge
addr16
lret
lret
into
pop
shr
pushf
push
sbb
arpl
push
xchg
sub
pop
jg
jge
dec
js
stos
push
fsubl
loopne
enter
cmp
insb
push
shrb
mov
repz
loope
jmp
sub
xor
ss
repz
cli
or
notl
incl
jnp
ss
pop
push
movsl
dec
xchg
pop
adc
enter
test
push
scas
aaa
gs
sbb
mov
pushf
das
idivb
test
hlt
iret
rolb
pushf
fistps
xchg
repnz
popa
imul
pop
mov
pushl
icebp
sahf
mov
insb
mov
lods
ret
stos
sbb
aam
mov
push
mov
lcall
jmp
mov
repnz
clc
push
popa
repnz
out
pop
jmp
mov
cmp
mulb
push
fs
or
push
add
push
adc
sbb
cmc
adc
mov
pop
les
xchg
fldenv
jae
add
cs
ss
test
dec
or
pusha
sub
mov
clc
adc
jp
and
jle
popf
add
dec
popa
push
adc
out
aam
mov
and
mov
push
jle
js
fs
pop
dec
test
sbb
daa
dec
inc
bound
mulb
jbe
leave
dec
movsl
jb
pushf
jno
loope
inc
mov
add
push
fdivr
inc
mov
jg
imull
mov
out
mov
adcl
xor
sub
xor
or
cli
in
sahf
mov
test
xchg
in
xor
test
sub
pop
xor
mov
xor
repnz
andl
sub
daa
shl
jns
inc
jl
stos
sub
add
loopne
xchg
xor
lret
sbb
stc
frstor
jo
mov
adc
pop
mov
lods
mov
ja
fnstsw
mov
pop
push
mov
mov
add
add
repnz
jmp
outsb
scas
inc
pushf
negb
or
push
or
pop
in
sub
dec
cmp
or
sub
mov
and
pop
sahf
movsb
pop
sub
push
mov
sbb
pop
repnz
popf
inc
ss
add
pop
pop
inc
test
scas
imul
cmpsb
cmpsb
pop
xor
mov
push
sbb
mov
jl
jp
mov
pushf
mov
sbb
jp
pop
nop
fmulp
mov
jo
jecxz
push
insb
ret
xlat
sub
mov
push
add
pop
mov
loope
fmul
insb
leave
sti
sbb
and
out
jmp
push
inc
faddl
cli
lcall
push
push
hlt
dec
xlat
js
cltd
xlat
pop
xor
data16
cs
push
sbb
sti
stos
clc
add
adc
daa
cmp
mov
adc
cltd
xchg
aas
xor
or
xor
push
fwait
mov
push
mov
xchg
adc
out
popw
mov
mov
or
cmc
pop
ret
xor
dec
mov
mov
clc
mov
or
add
insb
pop
pop
call
out
push
mov
mov
inc
repnz
push
lock
movsb
add
ja
xchg
imul
mov
loope
add
in
cld
inc
pop
jb
push
cmp
movsl
xor
push
jae
pop
es
out
lock
imul
inc
or
mov
jo
cmp
in
gs
sti
push
jl
sub
sub
jmp
jne
imul
in
cld
mov
lds
fbld
mov
push
cmpl
test
fstl
mov
aas
test
test
or
mov
nop
xorl
and
sub
aas
mov
inc
test
mov
pop
mov
jecxz
add
sub
mov
cmc
dec
popf
inc
mov
inc
cmc
ds
xor
mov
push
add
sbb
lcall
sub
bound
clc
out
mov
fcoms
mov
subl
jmp
jnp
pop
scas
sar
fsubrl
in
jp
cmp
dec
sub
push
jbe
fs
cmpsl
or
inc
push
and
in
xor
loop
cmc
sbb
dec
add
sub
cmpsb
push
sub
lods
mov
fsubrs
fisubrs
xchg
sarl
add
daa
popa
in
sub
cs
lcall
mov
fs
sbb
repz
dec
fidivs
lock
stos
cwtl
cmp
not
sti
or
xor
nop
sbb
inc
pushl
inc
mov
aam
popa
out
sbb
orps
and
xor
lcall
push
repz
je
popf
cmp
repz
jmp
test
repz
sub
or
jns,pt
orb
adc
xchg
fnstenv
mov
popf
and
stos
mov
es
ljmp
fwait
add
add
fistl
xchg
push
jecxz
faddl
and
xorl
pop
cmpsb
fwait
les
out
cld
cmpsb
jge
and
fldt
push
out
xchg
mov
jmp
mov
sti
aam
popa
test
xchg
jo
ret
push
adc
shll
push
repz
loope
sbb
xchg
in
push
sarb
and
lret
lret
push
push
hlt
and
scas
lds
jbe
out
stos
aaa
int3
test
in
in
in
jno
movsb
int3
cli
push
in
ds
jns
push
call
xlat
push
cmpb
xchg
jae
xor
fadds
out
hlt
mov
mov
mov
xchg
xor
jl
sbb
jmp
sti
jae
mov
out
mov
mov
cmpsl
pop
jns
cmpsl
lret
add
or
xchg
adc
cmp
push
jb
jmp
scas
es
lea
je
mov
and
sbb
or
jno
push
push
fistpl
stos
mov
jge
cmp
adc
repz
or
inc
xchg
ja
gs
sub
lret
pushf
adcb
push
push
fistpl
add
pop
hlt
xchg
mov
adc
mov
inc
jb
lods
test
pop
shr
jne
mov
inc
js
in
and
fidivrs
inc
dec
sub
cmp
sub
stos
inc
ror
jne
dec
xchg
lds
pop
mov
icebp
sbb
fldt
push
in
mov
dec
jp
outsb
cltd
std
outsb
lock
xor
roll
sub
mov
incl
repz
add
rcr
fstl
adc
and
cmp
je
xor
je
add
cmpsl
or
loope
or
aam
loope
shll
frstor
xchg
mov
jns
pushf
jne
cmp
lret
xchg
pop
clc
repz
ds
jmp
push
pop
sbb
hlt
mov
dec
push
imul
shrl
aad
stc
jb
in
inc
add
rol
mov
jmp
and
push
ljmp
pop
dec
mov
or
inc
shr
jecxz
lahf
shrb
cmp
mov
pop
push
sub
mov
jmp
xchg
outsl
mov
test
jmp
push
iret
xor
cmp
jae
dec
and
ss
sbb
cmp
das
pushf
dec
imul
mov
cmp
movsb
or
sub
adc
mov
scas
pop
lahf
fwait
cmp
adc
dec
comiss
xchg
ret
add
hlt
js
or
jp
cmpsl
push
cs
mov
sti
jb
jb
es
je
fistpl
inc
pop
xchg
data16
ret
inc
pusha
mov
lods
xchg
fwait
xchg
loope
daa
jl
adc
mov
mov
or
sub
inc
test
mov
jne
pop
mov
mov
xor
loope
loope
mov
loopne
inc
rorb
incb
push
imulb
lcall
pop
rcrb
xor
cltd
mov
outsb
xorl
cmp
pop
stc
repz
int
inc
dec
arpl
popa
pop
cmp
inc
pop
testb
xor
mov
dec
jno
fbstp
inc
mov
insl
jmp
sbb
cmp
jmp
dec
xchg
sti
jp
sarl
xchg
push
xchg
pop
gs
adc
xchg
test
xchg
incl
shlb
roll
cmp
imul
call
fcos
push
add
scas
outsb
insl
aas
and
repnz
mov
push
sub
enter
mov
enter
dec
imul
adc
out
cwtl
popa
fsubl
out
pop
lods
shrl
pop
jae
jmp
lods
punpcklbw
mov
adc
add
sbb
adc
dec
lret
cwtl
cmp
sbbl
inc
cmp
inc
jmp
sub
dec
xchg
jecxz
mov
mov
dec
paddb
pop
lahf
add
mov
xchg
sbb
rcr
jl
cwtl
sub
aas
cmp
repnz
pop
or
adcb
lods
loop
mov
mov
addr16
sahf
sub
cs
pusha
inc
jg
fmuls
dec
pop
xchg
adcl
outsb
mov
add
sub
gs
adc
into
ret
push
adc
sbbb
xor
pusha
xchg
pop
fisubrs
add
sbb
add
scas
or
movsl
cltd
or
dec
std
pop
movsb
gs
jmp
pop
mov
jb
inc
out
inc
pop
aam
sbb
push
mov
call
aaa
push
sbb
cmp
ds
outsl
inc
insb
fs
mov
add
arpl
aaa
and
iret
xchg
add
cmp
inc
std
lahf
pushf
sbb
int3
push
jo
add
mov
xchg
fisubrl
cmp
sub
xor
add
nop
imul
xchg
dec
and
sub
dec
mov
andl
pop
mov
into
mov
insb
lods
fcoms
and
pop
sbb
jae
sub
mov
sti
in
js
cwtl
inc
scas
xchg
lldt
adc
int3
das
int3
movb
out
scas
cmp
sti
or
pop
jbe
mov
xchg
icebp
movsl
jge
or
add
xchg
lret
fcmovnb
mov
lods
push
pop
xor
dec
xchg
add
cmp
or
out
jnp
lods
mov
mov
xchg
into
mov
mov
aas
push
inc
pushf
jb
dec
jo
mov
xchg
subl
xchg
pop
mov
push
mov
and
jbe
mov
mov
cmpsl
ljmp
xchg
sub
out
xor
imul
mov
addr16
sti
or
data16
xchg
jge
xor
dec
jo
push
inc
cs
nop
repz
addb
jbe
cltd
mov
jnp
push
jnp
dec
add
adc
repnz
push
and
lcall
adc
lock
lea
xchg
pop
dec
das
in
jmp
sarb
ljmp
cmp
lock
scas
js
add
outsl
cmpb
daa
lds
sbb
xor
push
mov
xor
call
in
stos
mov
xor
fnstcw
cmpb
inc
jo
mov
sbb
add
xchg
in
xor
mov
pop
xchg
testb
shlb
and
ja
leave
icebp
push
cmp
rolb
lret
les
sbb
repnz
jae
dec
mov
scas
cld
clc
in
mov
sbb
push
rcll
pushl
cmpsb
movsl
aam
dec
sub
mov
aaa
in
ret
outsb
and
mov
mulb
pusha
mov
aaa
inc
cld
xchg
mov
inc
les
rorb
dec
imul
inc
clc
add
ja
daa
adc
jl
xor
pop
sbb
jno
rcl
mov
mov
mov
out
repnz
test
xor
xor
lods
mov
jge
stos
mov
mov
adc
add
in
cmp
shr
xchg
clc
adc
sbb
push
repnz
jns
pop
gs
aaa
mov
gs
mov
stos
mov
js
loope
movsb
jnp
lahf
xor
paddq
scas
jbe
mov
add
iret
ja
mov
sbb
pop
jb
dec
ret
jnp
xchg
loop
mov
jp
cld
jmp
mov
divb
pop
arpl
fimuls
sub
outsl
insl
add
sub
mov
push
mov
jmp
icebp
inc
jmp
in
clc
dec
test
sbb
push
xor
jae
inc
sub
lods
repz
movl
or
push
cwtl
in
jo
mov
cmc
imul
jp
add
repz
pop
mov
jmp
mov
fwait
jns
jbe
aam
ljmp
or
or
test
lock
out
loop
fsubr
pop
mov
into
pop
fsubl
push
dec
in
btc
mov
imul
enter
or
and
mov
mov
ss
cld
daa
rclb
vmovaps
daa
mov
push
ljmp
mov
js
les
jns
insb
sub
inc
pop
xchg
mov
and
data16
adc
les
adc
leave
add
aaa
pop
inc
inc
pop
jnp
dec
add
out
lds
and
mov
push
push
adc
or
leave
push
jae
ficoms
insb
cld
pop
adc
popa
lock
rcll
push
scas
loopne
lods
and
add
push
out
or
out
stos
pop
gs
mov
jne
xchg
mov
filds
mov
es
jge
dec
mov
push
sar
frstor
dec
xor
push
rorb
xchg
sbb
icebp
jle
fstp
rol
pop
dec
enter
dec
jns
or
mov
mov
loope
int3
sub
stos
jmp
rcll
and
mov
push
inc
sti
pop
sahf
repnz
out
pop
mov
jmp
push
and
and
jmp
cwtl
cs
add
pop
adc
jnp
and
decl
repz
inc
add
outsb
sub
sub
mov
clc
or
push
imul
push
mov
int3
sub
pop
mov
and
jno
dec
addb
add
movsb
cld
notl
sti
dec
dec
jnp
cli
jl
mov
ds
fidivl
and
popf
xchg
or
fs
jb
into
andb
int
xor
mov
inc
jle
push
fsubp
sub
and
pop
das
jecxz
inc
int3
out
jle
ret
add
cmp
pop
pop
sbb
popa
ss
out
aam
xchg
loope
pop
dec
push
inc
dec
aad
pop
in
add
ret
test
incb
sub
aaa
imul
andl
push
add
mov
popa
xchg
mov
aaa
dec
ljmp
daa
ret
fistps
lds
mov
pop
cmpl
sub
insb
xchg
fs
lcall
xchg
aam
and
repz
test
push
adc
cmpsl
mov
or
cs
mov
push
hlt
jecxz
aam
mov
dec
cmpsb
mov
addr16
repz
cs
divl
sub
jnp
jbe
xor
outsb
sti
mov
mov
xlat
pop
loope
cmp
mov
ja
scas
testl
sahf
filds
fistpll
repz
inc
fldt
push
xor
lods
cmpb
imul
aad
leave
pop
xchg
mov
inc
adc
or
jge
jne
push
stos
aad
jae
xchg
mov
les
mov
shrb
push
sahf
lret
dec
mov
pop
pop
push
imul
mov
ja
rclb
jnp
lret
cs
idiv
xchg
mov
scas
jmp
sbb
nop
out
test
jo
jb
imul
sti
jns
loop
mov
ss
or
push
xchg
aas
das
in
rcrb
aam
jp
fs
sarl
push
fstps
hlt
popf
stc
mov
repz
int3
mov
arpl
pop
call
jmp
ss
ljmp
sub
lods
les
rorb
pop
or
movsb
dec
jp
or
fwait
mov
mov
les
lret
lods
adc
pop
jmp
push
mov
fcomps
in
add
cmpsb
addr16
adc
xor
push
insl
lods
cmp
mov
or
roll
ja
adc
cmp
sbb
punpcklwd
fs
or
pop
movsl
sub
aam
lods
int3
mov
pop
jp
or
ss
lods
xchg
icebp
mov
lods
fdivr
jmp
pop
jnp
cmpsb
cmp
enter
xchg
sbb
int3
xchg
imul
pop
js
vmovlps
push
dec
nop
loop
loop
call
push
sub
sbb
fxch
popa
jno
or
gs
lods
enter
loopne
call
bnd
xchg
and
stos
addb
inc
mov
ds
inc
pop
jne
lds
mov
outsl
std
aas
add
lods
addl
push
cmp
mov
stos
out
mov
aas
jmp
xchg
xchg
fistpl
jmp
lea
adc
push
shlb
shl
ds
test
sbb
mov
sbb
mov
mov
into
push
shrb
repnz
jle
sub
pop
mov
cld
mov
iret
mov
es
rcl
stos
xlat
mov
xor
push
and
or
fisttpl
lea
jge
insl
mov
ljmp
mov
xchg
ja
mov
pop
jecxz
cwtl
lea
test
jns
mov
ss
loope
repnz
mov
or
lock
mov
xor
jp
jge
mov
dec
iret
ret
outsb
adcl
adc
leave
pop
cmp
xor
mov
push
es
jbe
daa
movsl
cmc
out
sub
mov
dec
sbbb
insb
les
shrb
into
js
adc
lea
mov
add
loop
dec
popa
push
leave
or
loop
cmp
outsb
call
xchg
push
dec
cli
inc
mov
sbb
mov
repz
pushl
sbb
or
mov
iret
js
addr16
jno
out
fsubl
stos
shl
push
sub
xchg
fnstenv
push
mov
stos
int
je
mov
mov
mov
dec
movsb
lcall
mov
rcrb
lds
aam
mov
jg
movsl
add
push
outsb
pop
jb
es
das
sahf
inc
or
jmp
lcall
push
mov
pop
jns
lods
mov
stos
xchg
hlt
hlt
pusha
outsb
xchg
mov
mov
into
ret
push
pop
dec
pop
and
cmpsl
cld
and
sbb
cmc
dec
pushl
imul
sar
lahf
loop
stos
xor
add
mov
movsl
mov
cmpsb
inc
pop
adc
ljmp
adc
adc
fs
wbinvd
rclb
mov
jmp
mov
leave
ds
sahf
stos
mov
dec
popa
xchg
rcll
adc
pop
test
mov
lret
or
mov
mov
pop
loopne
leave
js
jp
mov
push
fnstcw
add
sub
push
xchg
xchg
add
or
mov
les
mov
ficomps
shlb
jge
dec
sub
and
lcall
xchg
mulps
hlt
int
inc
sbb
xor
repnz
xor
lods
mov
pop
test
das
lods
loopne
cmc
lahf
sbb
cmpsl
pop
mov
xorl
jle
roll
iret
inc
xor
test
fs
sbbb
arpl
insl
ds
insl
repnz
imul
in
cmpsb
roll
stos
fidivs
mov
arpl
sbb
aad
call
mov
xchg
imull
adc
addr16
push
flds
out
add
mov
fiadds
mov
push
popf
lea
sub
push
ret
iret
or
testb
adc
shl
stc
mov
stc
add
pusha
add
jl
inc
push
fstp
addb
stos
in
sub
inc
jns
inc
or
data16
loope
jmp
push
pop
push
xlat
adc
xchg
sbb
mov
stc
sub
fs
xchg
shr
pop
and
shrb
in
adc
frstor
lods
add
scas
decb
cmc
or
jl
sahf
arpl
icebp
dec
mov
ss
stc
pop
out
mov
jo
pop
and
ret
in
addr16
push
mov
out
aad
mov
cmp
std
xchg
or
add
sarb
jbe
addr16
adc
sti
jnp
mov
fiaddl
ret
push
add
fs
orb
mov
mov
mov
push
pop
xchg
jb
inc
dec
sbb
inc
and
or
in
es
mov
out
scas
jbe
or
fnstenv
out
xorl
cmpsl
shrb
stos
gs
sti
xor
cmp
jo
leave
and
pop
call
and
fcoms
mov
pushf
ja
xor
fstps
jle
ficompl
std
or
neg
subl
mov
lahf
jmp
fsubl
cld
sbb
into
cmpsb
les
jbe
mov
jmp
mov
popf
ret
pop
sbb
rorb
insb
xor
mov
negl
in
in
insb
imul
cmp
cmc
popf
mov
dec
scas
push
sahf
add
sbb
dec
outsb
mov
sub
sti
mov
mov
stc
sub
lret
mov
lahf
sbb
and
je
or
outsl
inc
sub
pop
ljmp
aad
dec
pop
adc
adc
jle
shl
jnp
xchg
fbstp
test
pusha
add
add
sub
push
mov
das
adc
std
mov
ja
sub
scas
in
dec
hlt
jecxz
dec
add
cli
cmpsb
mov
inc
test
sub
out
jge
aam
mov
sahf
cwtl
fcoms
imul
ret
clc
and
fisttps
mov
ss
push
mov
mov
outsb
gs
xchg
xor
xor
sub
popf
cmp
xchg
mov
cmpl
ret
shrl
loopne
fxch
sub
sbb
addr16
or
std
inc
fbld
ret
pop
inc
sbb
test
jl
inc
in
inc
stos
cwtl
std
call
dec
xchg
loopne
xchg
dec
push
shrl
and
ret
into
add
sub
aam
push
fs
in
xchg
sub
andb
jecxz
adc
pop
push
in
mov
push
cmc
fiaddl
mov
leave
sarl
scas
insl
jmp
popf
sbb
jle
fdivrl
in
sub
stos
les
xor
pop
addr16
js
aad
mov
adc
adc
cmp
lea
clc
in
and
xor
fdivs
stc
mov
and
push
and
test
xor
xchg
push
pop
cli
jne
pop
loope
cli
lea
xchg
mov
or
rolb
fidivl
ret
sar
popa
adc
test
jg
aad
mov
inc
or
test
and
xchg
push
push
outsb
into
adc
in
addr16
dec
testl
stc
adc
jecxz
outsl
push
out
mov
xor
cmpsl
daa
inc
and
cmpl
mov
decb
jne
out
push
or
out
add
sub
push
orl
adc
or
in
inc
and
and
pushf
xor
loope
aaa
dec
je
xor
pushf
fstpl
jbe
int3
inc
and
cld
and
sbb
popa
sub
sbb
sub
mov
loopne
sub
scas
fnstcw
outsl
sbb
fwait
iret
jle
cmpsl
add
push
adc
js
push
movsb
int
scas
pop
jge
ret
mov
jns
inc
cwtl
clc
ret
mull
pop
mov
ss
inc
andb
iret
mov
stos
sub
stc
rcl
mov
movsb
cmpsl
and
nop
xchg
shlb
sub
mov
adc
imul
xchg
testl
lds
xlat
or
jecxz
std
std
cwtl
push
mov
xor
xchg
repnz
dec
es
cmp
aas
scas
imul
push
scas
outsb
adc
mov
imul
aam
cmc
xor
loopne
mov
dec
sub
push
call
mov
or
fwait
push
mov
mov
roll
mov
lret
es
mov
push
sti
push
cltd
xchg
mov
push
or
jmp
push
fcoms
stos
fadd
jno
ds
xchg
xor
gs
sbb
mov
sub
xor
push
mov
cmpsl
and
dec
xchg
mov
mov
orb
jb
jno
xchg
adc
push
adc
stc
stos
out
pop
xchg
sbb
xor
xchg
divb
notl
cmc
xor
hlt
hlt
imul
clc
mov
push
test
std
and
push
mov
faddp
lcall
lods
dec
xor
dec
push
mov
mov
xchg
xor
outsl
fs
inc
imul
lock
leave
dec
xchg
mov
push
add
mov
inc
jns
xchg
movsb
addps
dec
sub
jne
bound
sbb
sbb
push
xchg
mov
fs
clc
dec
inc
add
mov
sbb
movsb
and
pop
enter
mov
pop
mov
out
ds
add
rcll
icebp
jns
in
sti
and
fs
subl
xor
add
sbb
mov
fsubrs
movsl
xchg
dec
lods
jnp
data16
fs
dec
out
and
shlb
cmpsl
mov
movsl
inc
pop
lea
pop
lock
fs
incb
imul
add
mov
and
xlat
mov
sbb
arpl
jns
adcl
scas
popf
pop
xor
ljmp
xlat
in
sub
push
andb
hlt
imul
xor
les
decl
loopne
push
ds
rcrl
dec
pop
add
inc
add
jle
dec
jne
add
cmp
js
rolb
jne
jmp
pusha
adc
sub
enter
pushf
out
jecxz
xor
andb
mov
jl
or
pop
mov
xchg
stc
mov
push
inc
fcomps
mov
jmp
daa
ret
push
mov
gs
je
inc
pop
jb
mov
jge
inc
push
insl
loop
pop
repnz
jp
cmpsl
mov
jo
adc
fs
or
xor
add
jmp
lock
push
ret
mov
test
int3
insb
adc
std
ficomps
push
adc
lock
push
sbb
pop
orl
pusha
push
popa
jno
aas
aad
jnp
popa
sbbb
in
test
or
movsb
jge
dec
in
dec
xchg
stc
js
cli
mov
sti
push
jl
sub
fucomp
pop
in
jecxz
sbb
fisubrl
inc
jns
cmp
xchg
sub
stos
dec
repz
add
push
repz
or
out
jne
push
xchg
test
push
jecxz
fldcw
mov
sti
dec
imul
int
hlt
fcmovb
mov
das
mov
ljmp
mov
jo
mov
sbb
xchg
xor
and
pop
fucom
movsl
inc
outsb
ret
test
gs
lock
sbb
jecxz
mov
int3
adc
insb
and
rcrb
std
adc
jbe
xor
xchg
xor
cltd
clc
retw
aaa
arpl
push
jl
popa
adc
cmp
jg
inc
orb
outsb
dec
lahf
cmp
fldl
mov
lret
sub
jp
fdivrl
jecxz
jp
jbe
in
mov
mov
fdivrs
push
sbb
je
out
sbb
out
jbe
sbb
lods
stc
xchg
mov
cwtl
sub
mov
cmp
mov
rcrl
xchg
cld
arpl
clc
pushl
mov
scas
lods
lret
inc
outsl
mov
mov
and
ljmp
mov
adc
outsl
and
cmp
adc
add
loopne
int
jge
scas
mov
cmc
and
xorl
ret
scas
scas
and
or
adc
push
mov
cwtl
adc
dec
jle
pop
sbb
int3
mov
dec
add
mov
and
ds
xchg
shl
in
sbb
mov
mov
pop
sbbb
adc
int
pushf
je
loope
adc
mov
or
add
xchg
insl
scas
jecxz
ficompl
and
jge
xchg
dec
xor
int
leave
dec
sub
dec
mov
hlt
jbe
mov
cmc
push
xor
mov
push
inc
pushf
in
aad
stc
into
int3
mov
in
inc
cmp
sub
minps
fdivp
sbb
push
shrb
je
popa
mull
idivl
fidivs
dec
jae
pushl
fwait
mov
push
or
lea
mov
sbb
das
packssdw
test
xor
in
clc
sti
dec
bnd
push
mov
xor
cld
lds
cwtl
mov
aaa
or
cmp
fmul
andb
insl
xor
mov
cs
adc
test
push
jb
stos
mov
jle
leave
jae
cmpsl
scas
sahf
pushf
sub
push
out
sub
les
dec
inc
shr
jmp
mov
jo
xchg
mov
xor
jnp
lods
loope
xor
cmp
sub
push
mov
add
or
daa
dec
fsubl
or
jae
xor
rolb
lcall
hlt
orb
popa
cmc
pop
sub
mov
fdivrs
imul
cld
pop
cmp
jl
int
insl
sbb
mov
or
or
negb
pusha
pop
jle
inc
pop
dec
jmp
push
cli
push
imul
repnz
jb
and
ds
testb
int
loop
in
push
cs
pop
mulb
into
imulb
jmp
test
mov
ljmp
daa
scas
insb
push
dec
sbb
adc
pop
cltd
into
in
adc
scas
and
or
push
add
repz
sbb
dec
and
mov
or
jmp
js
or
shr
stc
ja
mov
adc
lahf
dec
addr16
sar
outsb
mov
cmp
lahf
stos
cmp
lods
jbe
pop
jmp
mov
mov
push
std
xchg
movsl
cmp
xor
pop
lods
mov
lock
fld
inc
push
scas
insb
inc
pushl
push
pop
and
adc
push
mov
movsb
stos
dec
xchg
or
push
jns
fsubs
ja
mov
addr16
adc
pop
and
jmp
mov
jae,pn
cwtl
insb
mov
mov
push
shrl
popa
subl
mov
pop
test
cs
loop
xor
cld
push
lods
mov
cmp
xlat
or
les
gs
push
movsl
bound
dec
inc
or
mov
sarl
xor
ret
push
insl
mov
fisttpl
xchg
push
and
jne
test
aad
in
cmp
lret
jp
mov
push
push
push
push
pop
ret
test
inc
and
loope
sub
lock
pop
in
and
xor
popa
icebp
mov
sarb
out
sub
jb
mov
dec
cltd
lds
mov
or
aaa
sar
pop
repnz
in
xchg
lds
pop
xchg
std
psubusb
cmpsl
inc
push
push
jmp
cmp
adcb
adc
jecxz
insb
es
pop
dec
call
out
mov
lods
mov
dec
inc
scas
jne
mov
jp
push
and
cmp
ljmp
arpl
leave
in
pop
cmpsb
pop
in
sub
cltd
add
in
or
cmp
xor
lods
js
scas
xchg
mov
cmp
sbb
popl
xor
add
xor
xchg
or
sub
jp
jbe
xor
imul
pcmpgtw
out
pop
imul
and
mov
rcrb
lods
mov
mov
push
jmp
jne
aaa
add
pop
and
sub
cli
add
mov
insl
scas
test
testl
cmp
add
jmp
jnp
dec
add
aad
movl
push
push
jnp
adc
dec
cld
dec
cmpl
sbb
dec
jmp
cmp
pop
adc
cmp
push
test
test
sub
xchg
inc
jecxz
add
add
push
sub
sbb
add
and
je
and
inc
mov
inc
js
iret
imul
stos
icebp
in
push
inc
cmp
test
pop
imul
and
or
mov
insl
lahf
xchg
faddl
lods
cmp
in
mov
or
jns
push
stos
jge
negb
orb
movsb
pop
add
fs
rol
or
in
test
pop
insl
insl
cmpsb
mov
jmp
mov
lret
or
mov
std
mov
cmpsb
sbb
jae
push
mov
aas
out
iret
jne
sbb
movd
sub
mov
mov
push
jbe
add
aas
inc
sbb
xor
add
inc
out
mov
xchg
xchg
and
divps
in
movl
test
aam
pop
aad
mov
out
out
adc
nop
push
fisubl
mov
mov
push
lods
popf
pop
cli
js
lret
repnz
scas
adc
pop
sbb
inc
cmp
dec
xorl
mov
out
arpl
iret
arpl
and
lahf
fsts
repz
stos
inc
cltd
push
add
pusha
iret
mov
pop
cmc
stc
pop
xor
sbb
lahf
jg
in
sub
insb
sbbb
filds
inc
cmp
jmp
mov
inc
mov
mov
add
out
push
in
mov
jno
rcll
fldcw
add
xchg
mov
pop
stos
pop
jbe
test
pop
inc
mov
aas
addr16
js
cmpsl
js
or
cs
arpl
pop
push
rcl
popa
mov
mov
and
test
inc
shl
add
mov
inc
add
je
jle
in
add
jmp
adc
iret
int3
ljmpw
cmp
test
sub
aad
sbb
add
pop
clc
test
sbb
loope
push
adc
mov
cli
clc
aam
adc
add
xchg
std
mov
xchg
add
das
jl
and
add
xor
js
sti
add
jg
leave
mov
pop
and
pusha
insl
ljmp
pop
lods
cmc
xchg
fdivr
addr16
nop
sub
sub
sub
adc
scas
test
mov
push
adc
aad
in
orl
pop
divb
or
sbb
cs
repz
imul
or
jno
inc
aaa
fsubs
cmpsl
in
xchg
mov
pop
hlt
push
and
xchg
aaa
cltd
sbb
int3
or
pop
bound
xor
pop
test
test
bound
subb
mov
mov
pop
cltd
out
jb
xchg
popf
fsubs
adc
ret
push
xchg
ds
test
xor
jne
icebp
test
pcmpeqb
xchg
pcmpeqw
out
xor
push
mov
and
dec
pop
xchg
icebp
jp
cmp
subl
ja
and
andb
dec
ja
add
call
dec
enter
mov
cwtl
outsb
sbb
fmull
sarb
jge
add
pop
add
mov
xchg
cmp
psubusb
cmp
mov
jp
xor
dec
fwait
jb
aas
fimull
push
or
bound
out
insb
xchg
add
add
aam
xchg
stos
js
cmp
mov
sub
icebp
pop
rol
iret
ja
xor
enter
in
mov
popa
ret
and
hlt
cwtl
jbe
adc
mov
xchg
adc
testb
xchg
neg
int3
jnp
push
xor
sub
dec
adc
out
cmp
popa
test
sub
bound
pop
sahf
aas
fildl
or
mov
dec
aaa
xor
add
pop
inc
movsb
mov
sub
sbb
loope
xchg
dec
mov
ficomps
bound
imul
dec
in
jecxz
inc
push
mov
shlb
mov
cmp
mov
lods
decb
in
aas
sub
adc
add
or
lcall
ss
outsl
xchg
pop
mov
shrb
test
adc
adc
pop
adcb
jae
stos
sub
hlt
push
fstpt
mov
addr16
jmp
lret
mov
mov
jno
xor
sbb
fidivl
push
adc
into
sbb
push
fldl
rol
movsb
nop
insb
mov
push
out
push
ror
loopne
sahf
jae
test
les
fadds
call
lcall
lock
popf
mov
mov
test
xchg
dec
mov
fwait
lds
call
xchg
add
or
push
jb
xchg
cmpsl
daa
in
inc
cmpsl
pop
in
and
push
push
mov
xchg
mov
adc
xlat
add
mov
test
push
mov
sub
jno
cltd
pop
push
loopne
outsb
push
push
lcall
mov
in
jmp
jno
or
orb
xchg
dec
jmp
repnz
add
push
dec
push
enter
mov
dec
mov
xchg
int
fs
dec
add
inc
clc
cmp
xor
adc
les
inc
fcomps
add
inc
dec
xor
xchg
repz
lock
dec
roll
stos
sbb
test
shlb
cmpl
jno
loope
lahf
ljmp
adc
gs
stc
call
addr16
push
xor
clc
jns
divl
mov
sbb
ljmp
pop
mov
add
cmp
gs
ja
mov
jb
add
xor
push
sbb
cwtl
jle
adc
inc
mov
pop
pop
cld
shl
xor
test
lods
mov
in
or
in
sub
xchg
push
sbb
xor
sbb
sbb
jb
fcoml
lds
mov
adc
scas
or
ret
or
add
sub
mov
jmp
jnp
xchg
jle
xor
test
mov
cld
imul
popf
psubsb
int3
movsl
arpl
cli
jl
mov
xchg
xor
mov
clc
add
sub
sbb
iret
and
mov
or
cmp
jne
cltd
aad
scas
jmp
gs
insb
pop
imul
testb
adc
ret
jne
pop
shr
mov
std
xor
mov
sahf
jle
xor
popa
jl
into
push
gs
cltd
lea
mov
sub
fdivr
inc
xor
es
push
stc
xor
cmp
mov
mov
jecxz
stos
pop
and
out
xchg
jecxz
mov
mov
test
popa
aas
aaa
mov
arpl
gs
cltd
inc
movsl
sbb
fs
push
xor
push
pop
push
dec
inc
sbbb
push
mov
stos
fidivs
xchg
or
ret
leave
push
mov
int
jno
or
leave
dec
test
lea
enter
fsubl
out
hlt
imul
addr16
xchg
mov
imul
push
sbb
fcomps
imul
and
into
push
jp
pop
sub
or
adc
dec
fs
sub
scas
adc
jp
mov
je
gs
xchg
fisubrs
pusha
in
jae
out
jno
xor
mov
loope
xchg
fidivrs
rol
lret
pop
shlb
shlb
and
das
mov
popa
mov
mov
stos
lea
sbb
jbe
jmp
js
pushf
push
push
insl
cld
jbe
dec
outsb
xor
cmp
cli
jl
xchg
nop
je
xchg
sub
dec
pop
or
push
mov
xchg
push
fistps
inc
pop
jge
xchg
in
pop
outsl
in
sub
loop,pn
lcall
push
fcomp
mov
rcrl
imul
out
lods
sub
xor
repnz
pop
add
jb
adc
fs
ret
fs
mov
sbb
xchg
nop
test
xchg
stc
jb
dec
popa
ss
cmp
inc
shrb
cli
sbb
ret
fstpt
imul
push
adc
mov
je
outsb
scas
or
stc
mov
out
std
nop
sbb
cmp
mov
mov
mov
push
mov
cmp
adc
stos
fildl
aas
and
push
fsubrl
inc
data16
out
in
in
repz
jecxz
in
inc
in
scas
jle
ljmp
xlat
push
sahf
movsb
imul
out
add
dec
or
mov
loopne
push
shll
out
pop
rcr
call
imul
stos
or
fwait
pop
xor
inc
jb
pop
and
xchg
and
cmp
lods
sbb
pause
repnz
leave
adc
test
mov
or
pop
jmp
mov
leave
call
jp
dec
sahf
mov
pop
inc
xor
dec
outsl
xorb
bound
inc
ror
and
adc
mov
jl
out
mov
dec
xchg
int
daa
dec
test
push
or
inc
shrl
adc
call
mov
cwtl
shr
mov
pop
xorb
and
xor
sbb
cmpsw
jno
pop
pop
mov
scas
ljmp
rcr
jp
or
cmp
mov
mov
and
shll
pop
outsb
jle
xor
pop
cmp
push
push
mov
push
add
arpl
cmpsl
sub
jp
fsubr
test
outsb
fcomi
dec
or
stc
lock
cmp
rcll
loop
lahf
jle
jmp
es
out
ret
mov
cmp
ljmp
jecxz
pavgb
push
call
test
xchg
pop
mov
add
mov
or
pop
cmp
adc
cmp
test
and
push
xchg
cmp
rcrb
add
fwait
xchg
xchg
fmuls
sbb
sbb
movl
xor
roll
adc
sub
sub
or
out
jnp
mov
aam
ds
test
mov
sti
mov
stos
aad
xchg
mov
loop
jnp
add
mov
add
sbb
inc
jae
mov
cmpb
adc
push
movsl
lahf
icebp
dec
enter
lods
test
movsl
sahf
addr16
int
pop
sbb
icebp
push
mov
sbb
test
xor
fldt
mov
fists
or
and
mov
fistps
mov
xor
push
push
mov
and
or
movsb
inc
std
push
xchg
dec
xchg
jg
fwait
mov
shlb
test
dec
mov
movb
mul
sub
xchg
lock
mov
jmp
xchg
add
rcl
fwait
pusha
movsb
inc
jno
dec
cmp
insb
movsl
fdiv
xorl
adc
mov
xor
push
push
repnz
pop
adc
test
mov
mov
add
or
adc
pop
popf
lcall
mov
fisubl
inc
std
sub
jbe
pop
inc
lret
adc
or
cwtl
push
test
cmpsl
rcll
les
mov
mov
mov
lock
and
dec
test
fdivrs
outsl
xchg
pop
sbb
pop
stos
jmp
inc
pop
xor
mov
movsb
int3
xchg
mov
hlt
and
pop
adc
or
ret
sbb
lret
subl
out
mov
lea
jb
pop
pop
cmp
dec
adc
xor
push
and
pop
hlt
cmp
push
jo
or
xchg
jbe
addr16
jnp
push
out
cmp
fs
repz
insl
es
test
mov
and
rorl
test
lcall
adc
aad
mulb
shrb
mov
mov
inc
mov
add
jne
and
ret
xor
fidivrs
xchg
repnz
pop
orb
stos
or
pop
aad
jp
ret
add
mov
int3
lods
mov
jo
push
pinsrw
push
push
mov
sbbb
dec
popa
add
leave
fbstp
sbb
mov
and
pop
and
sbb
push
ret
leave
lcall
loope
or
jne
xchg
mov
ret
push
shr
sti
jo
jge
pop
sub
push
xchg
and
inc
ja
xor
and
movsb
into
hlt
jae
cmp
xchg
mov
fcoms
and
pop
data16
fmul
xor
lcall
test
cmpsl
and
mov
aas
sbb
icebp
test
ret
or
xlat
out
iret
push
in
scas
hlt
scas
xor
push
cld
cmp
lret
xor
bound
sub
sub
mov
fdiv
jae
movsl
cwtl
mov
xor
push
xchg
test
jae
scas
shlb
dec
push
cltd
aaa
cmp
je
push
mov
inc
mov
pop
ret
rcrl
xor
xchg
and
iret
cltd
pop
and
mov
insb
bound
and
adc
movsb
fimull
sbb
inc
jnp
add
fwait
aas
jmp
dec
sbb
addr16
jge
or
imul
mov
pop
or
into
cmp
pop
pop
lahf
sub
cli
es
pop
mov
sub
push
mov
push
and
inc
and
lods
fwait
xor
in
xor
jb
pop
push
stos
push
and
push
shl
cmp
cltd
stc
arpl
jns
icebp
popa
and
push
rcl
sbb
lret
add
sbb
fsts
dec
inc
mov
adc
stos
adc
fldcw
mov
cmc
xor
call
lods
push
cwtl
in
in
scas
stos
adc
xchg
dec
sbb
push
loopne
inc
mov
adc
scas
icebp
test
cmpsb
test
push
and
push
insb
and
or
push
dec
xor
xchg
iret
nop
push
imul
and
or
mov
stos
or
sbb
repz
sub
rcrl
divl
sbb
int3
push
cmpsb
es
adc
pop
jl
js
or
xchg
sbb
icebp
stos
addr16
in
bound
fs
fildll
test
xor
addr16
into
xorb
ss
jle
iret
jmp
mov
and
inc
repnz
fisubs
push
jbe,pn
aad
call
stc
adc
sub
pop
scas
cmp
pushf
and
mov
sbb
cmp
pop
hlt
pavgw
sbb
push
and
push
es
dec
popl
imul
sbb
pop
adc
or
cmp
ficoms
dec
mov
scas
insb
mov
lret
loopne
ror
inc
or
sbb
dec
cli
iret
mov
mov
shlb
sub
xchg
jae
into
adc
adc
mov
adc
fst
cmp
sub
xchg
sub
lods
mov
and
imul
xchg
mov
mov
dec
mov
popf
mov
mov
cmp
lcall
bound
jmp
xor
cltd
adcb
mov
xlat
mov
aas
fcmovne
sub
mov
dec
xchg
pop
jle
fs
lea
test
or
iret
mov
adc
pop
or
adc
idivl
pusha
insb
js
pop
jae
mov
sbb
xchg
test
std
pushf
dec
sbb
sub
jmp
es
movsl
pop
cmpsl
nop
roll
jno
or
ds
inc
outsb
lcall
adc
nop
mov
dec
pop
jle
pop
cmp
lret
ficomps
into
mov
mov
jns
jmp
push
jno
mov
xchg
pop
sti
ret
cmc
shlb
push
mov
mov
pop
xor
lret
mov
iret
pushf
repz
lock
cmp
hlt
cld
aaa
stc
lods
loop
aas
push
clc
mov
add
sub
enter
and
cmp
mov
fnstcw
add
ficomps
mov
mov
cmp
mov
mov
lock
insl
aad
jne
sbb
movsb
mov
xor
mov
icebp
mov
sub
add
jno
sbb
sarb
dec
shrl
lret
rcll
mov
add
mov
stos
test
jne
cmp
sub
ds
sti
rep
out
test
and
adc
xor
outsb
mov
addr16
push
xlat
out
in
scas
jbe
movsb
adc
jne
ja
lea
je
fidivs
xorl
notl
xor
jb
lea
rorb
mov
mov
jg
movsb
in
or
imul
jmp
insl
mov
cmp
sub
jecxz
push
rcll
addb
out
add
cmpsl
jae
jg
add
hlt
jae
fdivr
and
rclb
loope
enter
push
js
leave
jle
test
enter
mov
out
shl
push
mov
out
and
lcall
mov
in
cmp
hlt
lcall
aad
inc
mov
jae
cmc
cmc
or
lods
pop
add
fildll
mov
dec
mov
bound
es
hlt
movl
shll
lods
add
or
dec
loope
movsl
das
js
notl
mull
ss
dec
pusha
jne
sbb
movsb
loope
jnp
mov
test
add
enter
in
sti
popf
push
das
xorl
inc
fcoml
out
add
bnd
sub
lcall
pop
into
int
aam
dec
add
jg
pop
inc
das
inc
cmp
adc
xor
mov
jmp
loop
fdivl
loop
daa
jbe
jne
xchg
inc
sbb
cli
inc
jb
push
push
sbb
jno
xor
sbb
pop
add
je
stc
pop
sbb
or
shll
fwait
shll
sbb
xor
aaa
loop
insb
push
hlt
push
push
test
jp
jb
jge
xor
mov
push
mov
popf
testl
insl
jg
fidivs
inc
test
jmp
and
dec
sbb
imull
pop
iret
jnp
and
test
addr16
ffree
enter
xchg
sbb
xor
mov
push
and
aad
push
stos
scas
sub
pop
shr
inc
icebp
dec
pop
cmp
popf
insl
scas
les
js
movsb
dec
mov
cli
loopne
jo
faddl
jp
ja
sbb
imull
cmpsb
shlb
jns
push
inc
int
sbb
add
test
addb
rclw
addl
shr
into
xchg
mov
cltd
shl
addl
xchg
in
pushf
in
sahf
test
lahf
push
lret
push
push
ljmp
in
and
fdivrl
pop
xor
rcrb
aad
xchg
lods
lcall
dec
or
or
add
js
inc
insb
pusha
mov
movsb
push
jl
idiv
sub
inc
fldenv
cmovle
lret
pop
or
mov
out
xor
enter
data16
push
sub
push
push
inc
inc
loope
out
loopne
lods
loopne
cmpsb
xor
fisttpl
push
in
inc
inc
push
cmovg
insb
mov
sbb
aas
sub
xchg
pop
movsl
push
cmp
mov
mov
sub
and
inc
sub
stos
add
ret
mov
lret
sbb
dec
or
add
pop
xchg
popa
xchg
ret
iret
sbb
arpl
jb
xchg
pop
rol
pop
jbe
mov
xchg
inc
cmp
shrb
sub
aad
repz
mov
jge
gs
stos
jge
jns
mov
mov
cs
or
mov
fdiv
aad
and
rcll
sbb
dec
or
popa
jmp
adc
test
fisubrl
mov
add
in
lea
xchg
iret
sbb
xchg
jecxz
or
add
or
cmc
out
xlat
ds
add
xchg
mov
sub
mov
pop
mov
sub
pusha
jae
inc
cmp
inc
push
out
daa
fsub
std
jmp
cmp
pop
test
pushf
outsl
and
push
aad
add
pop
pop
scas
cmp
mov
dec
aam
adc
xlat
sub
cmpsl
inc
add
sti
fs
pop
fwait
and
jge
adc
ss
test
mov
into
mov
test
movl
dec
dec
aas
leave
lea
xlat
mov
fnstsw
mov
or
out
sub
lcall
pop
divb
leave
je
or
stos
aam
stos
imul
xchg
jl
jne
repz
sbb
sub
jecxz
inc
ret
test
push
into
lods
mov
std
ss
mov
push
cmpsl
aam
in
test
add
into
xchg
fistl
out
xlat
mov
cmpsl
hlt
push
sbb
push
dec
cmp
sbb
int3
outsb
lret
cli
jmp
jl
loope
aam
popa
xchg
es
sub
cltd
orb
pop
hlt
cwtl
add
fwait
in
or
mov
and
in
rorl
add
pop
xchg
pop
jb,pn
ficoml
dec
inc
daa
rorl
cltd
add
inc
test
mov
mov
mov
jmp
cwtl
aam
mov
mov
push
mov
inc
stc
dec
imul
inc
mov
bound
es
jle
pop
in
ds
and
sbb
into
jae
inc
out
add
xor
shr
mov
dec
cwtl
dec
hlt
mov
addr16
outsl
lea
adc
lea
dec
loop
jmp
mov
mov
sti
jl
pushf
and
pusha
mov
push
xor
iret
lods
test
add
jo
dec
fdivrl
inc
jp
repz
xchg
in
test
fidivrl
dec
mov
mov
mov
mov
pop
cld
dec
mov
mov
push
sbbl
adc
aaa
stos
or
scas
cld
xchg
pop
push
add
je
add
lods
lds
adc
jp
inc
dec
out
add
fwait
pop
ljmp
les
pop
lock
mov
push
push
mov
mov
sti
lock
add
ljmp
xor
pop
cmp
inc
rcll
dec
xlat
or
js
clc
jb
cmpsl
nop
aas
movl
sbb
dec
mov
adc
lock
sbb
jns
mov
push
fistpl
mov
jae
push
mov
or
cld
jge
xchg
ljmp
adc
sub
inc
fwait
push
jmp
push
jnp
push
dec
and
addb
shlb
fsubs
jne
push
and
jecxz
mov
mov
lcall
and
dec
scas
popa
xchg
repz
jbe
ret
dec
insb
cmp
add
push
sbb
aas
push
push
loop
push
fdivrs
dec
add
add
dec
mov
in
add
popf
pop
outsl
ficomps
fs
lea
sbb
arpl
mov
aad
pushf
inc
cmpsb
inc
dec
dec
andl
clc
scas
jns
lock
aam
sbb
arpl
jge
mov
inc
mov
repz
cmp
notb
cmp
adc
and
inc
ja
subl
cli
mov
dec
pushf
mov
imul
mov
into
mov
xor
arpl
cs
enter
into
test
cwtl
jo
jno
xchg
mov
in
adc
fldl
leave
in
cmp
mov
subb
int3
cmp
hlt
ja
cmp
ljmp
xor
lods
lods
push
or
lahf
pop
out
or
push
movsl
inc
or
add
inc
ss
or
push
loop
pop
ret
mov
js
xchg
lret
inc
pop
imull
js
mov
inc
jp
fisubrs
test
aam
imulb
orl
cmc
dec
and
adc
addl
inc
mov
popf
lds
divl
test
dec
push
dec
mov
inc
push
pop
and
push
leave
xor
xor
scas
out
fdivrl
fmull
inc
pop
cmc
xor
push
inc
mov
add
fnstcw
mov
enter
push
inc
andb
dec
in
ss
ficomps
adcl
cmpsl
mov
movzwl
pop
inc
shrl
sbb
sahf
pop
mov
ret
shrb
mov
inc
leave
ds
fstpl
mov
imul
rcrl
pop
cmp
cmp
and
mov
mov
jl
pusha
js
rcr
jg
xor
fdivrl
insb
ret
ja
pusha
shr
lret
add
sbb
cmp
out
fisubs
pop
jno
out
lahf
dec
push
xor
sub
push
fbstp
enter
in
or
dec
dec
enter
cmpsb
out
pop
loop
imull
pop
seto
mov
fisubs
jbe
jbe
aaa
subl
in
mov
inc
addr16
dec
lods
push
lds
movsb
in
jbe
mov
scas
cltd
or
add
mov
testb
into
sbb
jae
popf
lods
sbb
pop
jbe
lods
stos
xor
fsubrl
cmp
fisttpl
xchg
fldt
lods
js
aad
cwtl
cmpsl
loopne
ss
xchg
mov
mov
dec
xchg
dec
xchg
pop
dec
aad
adc
pop
pusha
xorl
nopl
mov
inc
hlt
insl
divb
cmpb
adc
out
xor
nop
xlat
lds
loopne
push
je
rcr
cmp
inc
lcall
dec
mov
hlt
dec
sbb
out
mov
fwait
loope
adc
dec
mov
mov
and
je
pop
and
jg
jmp
push
sbb
inc
add
sbb
mov
arpl
dec
add
xchg
mov
jno
inc
jae
ljmp
ror
and
push
mov
pop
lock
inc
mov
xor
mov
and
stos
mov
iret
ljmp
addr16
cmp
fimull
jmp
loop
subl
fidivrl
shrl
push
jb
lods
inc
fisubrl
dec
push
imul
sbb
mov
je
sub
adc
nop
ret
icebp
inc
arpl
add
xlat
and
adc
jg
xor
mov
sbbb
out
jns
mov
jb
lahf
sbb
ljmp
xchg
daa
mov
xchg
xchg
mov
adc
dec
pop
cltd
push
iret
leave
jp
and
xchg
add
pop
lea
and
mov
mov
fstpt
test
out
jmp
ds
xchg
imul
add
scas
xchg
add
filds
dec
add
inc
mov
jb
dec
mov
rcr
jg
sbb
push
xlat
sbb
in
sbbb
push
clc
fsubrs
test
je
inc
mov
inc
das
inc
push
mov
jecxz
mov
inc
clc
leave
sbb
add
push
test
ret
cltd
sub
push
push
cltd
repnz
test
mov
mov
dec
jae
cli
mov
in
and
xor
pop
call
fld
es
mov
xor
loope
call
and
xor
or
or
int
notl
loopne
fnstenv
bound
push
int
push
sub
outsl
xchg
fistpl
mov
inc
mov
orb
sub
mov
pop
xor
add
pop
xchg
cmp
imul
into
out
mov
scas
call
jnp
lds
lret
mov
orb
lahf
data16
fidivl
outsl
push
cltd
in
push
gs
insb
mov
sar
jl
mov
jmp
lret
push
das
lods
mov
push
out
add
cs
dec
xor
mov
add
add
insl
iret
fadd
shll
push
push
pop
out
mov
mov
iret
and
jnp
xor
inc
adc
sbb
lock
lret
cmpsb
cmp
popa
out
ds
sbb
mov
jge
ds
add
outsl
ret
fcoml
push
shlb
xchg
add
mov
xor
ror
cmpsl
aas
or
outsl
icebp
and
mov
into
mov
ja
ret
in
xchg
cmp
stc
push
cs
mov
jp
sbbb
jp
or
data16
test
test
pop
jle
or
lock
jbe
or
lock
sbb
jp
movsl
xchg
push
xor
ss
lea
and
xchg
jg
popf
cmp
fistpl
ljmp
xchg
push
jle
lahf
outsl
mov
cmc
lods
loopne
cltd
or
and
out
daa
sub
popf
push
lock
push
lods
jo
and
dec
ret
scas
test
xchg
in
mov
lret
cmpsl
scas
mov
jmp
push
loopne
ja
lret
cwtl
push
mov
push
hlt
xchg
mov
jmp
lea
hlt
push
or
repz
sbb
inc
push
stos
fimull
push
imul
mov
jb
call
rorl
std
fwait
out
out
fdivr
les
fdivl
test
subb
popl
push
addr16
les
lcall
sbb
fbstp
idivb
in
insl
aam
aad
cmp
orl
outsl
lret
mov
aaa
jbe
and
mov
xorl
mov
fisubrs
push
push
adc
iret
mov
jp
dec
stos
push
jg
insb
push
jbe
jp
and
outsl
cltd
xchg
lea
jo
out
and
jo
jnp
add
movsl
in
cmp
enter
jecxz
fbstp
and
inc
test
sub
sbb
pusha
xchg
jmp
ljmp
cmp
rcrl
aam
mov
outsl
sbb
ljmp
scas
imul
pop
sbb
or
lret
mov
push
lcall
mov
adc
clc
popf
mov
cs
mov
ds
xor
or
repz
fisttps
das
mov
lock
cltd
push
stos
cld
outsl
inc
pop
lahf
imulb
pop
sbb
data16
test
mov
fnop
subb
mov
iret
mov
shrb
and
into
aas
shrl
cld
or
mov
movsb
jne
daa
aaa
xchg
pop
cmpsl
aam
pop
into
int3
loopne
out
cmp
cs
clc
orl
mov
xor
pushf
inc
or
jmp
fsub
mov
pop
jo
mov
jno
xchg
repz
mov
mov
xor
cmp
dec
xchg
and
ja,pn
stos
insb
outsl
sbb
insl
sahf
sahf
bound
mov
add
sbb
or
xchg
stos
jno
xchg
aaa
inc
xchg
mov
pop
mov
cltd
dec
dec
xchg
push
inc
xchg
lcall
fdivs
xchg
ljmp
push
push
rcl
sub
push
sub
ficoms
mov
roll
es
mov
or
mov
jmp
push
pop
into
mov
hlt
jp
jo
lock
jb
sbb
pushf
adc
ret
inc
push
fcomps
shrl
inc
xchg
addb
in
test
sub
and
push
push
rolb
mov
ja
add
push
shll
or
dec
mov
out
sub
inc
pop
mov
and
out
test
dec
sti
mov
mov
cmp
cmc
mov
fs
and
pop
push
lea
jl
jno
sub
xchg
hlt
aaa
sub
enter
jae
inc
imul
fsubs
mov
adc
int
pop
dec
add
xor
cld
push
sub
mov
cld
xchg
aad
mov
mov
mov
jecxz
ficoms
or
or
loopne
ss
jge
dec
pop
jle
lods
pop
cmp
xor
gs
jle
repnz
adc
test
xchg
xchg
movsl
add
cmp
mov
lahf
xor
outsl
jmp
fnstsw
shlb
stc
cmp
sub
scas
dec
shll
inc
addr16
int
mov
lds
mov
rolb
out
xchg
jo
mov
push
jmp
ret
add
rcrl
jg
mov
aad
jo
cmp
pop
fists
mov
negb
jnp
aad
inc
outsb
dec
ds
pusha
mov
rorl
cltd
int3
jo
mov
or
out
cli
xor
aad
shr
cs
in
push
loop
aas
push
aas
test
push
mov
fsts
xor
out
sub
mov
pop
popf
jo
lahf
cmp
mov
jne
sub
cmp
int
mov
push
lea
aas
fs
imul
cmp
pop
fldt
jne
add
ds
test
sti
int
adc
je
in
dec
cwtl
adc
pop
notl
outsl
ds
adc
repnz
popa
sub
and
leave
mov
sub
push
popl
adcl
inc
pusha
fidivrl
add
in
sub
fdivrp
sbb
lahf
push
sub
inc
push
xchg
out
pop
mov
add
lods
jns
adc
outsl
jle
push
mov
xchg
loope
xor
jle
test
lock
pop
in
imul
inc
push
popa
out
mov
pop
or
mov
inc
adcl
jne
pop
mov
insl
call
out
in
flds
mov
push
sub
cli
mov
push
out
in
mov
xchg
and
jp
sub
and
adcb
imul
jg
outsb
pushf
aas
sub
loopne
mov
add
pop
add
lcall
pop
or
xchg
shl
sbb
xchg
sahf
test
add
cmc
jno
xchg
ljmp
fmulp
stos
movsl
xchg
jns
push
xchg
aam
mov
test
jne
cmc
fdivs
cmp
jb
sub
or
bound
mov
mov
sbb
and
jae
jbe
pop
mov
fwait
mov
out
jle
aad
out
inc
into
es
jae
stc
dec
dec
xorl
push
add
popf
shl
sub
mov
xchg
xchg
jne
mov
inc
loope
test
popf
jno
cmp
add
jmp
jmp
dec
dec
testb
call
inc
push
sub
mov
and
cmpsl
or
arpl
adc
js
jl
pop
xlat
pop
lret
adc
hlt
push
imulb
dec
cmp
cs
test
add
push
xchg
add
fstpt
loopne
inc
inc
add
mov
in
sbb
mov
sbb
ret
scas
lahf
and
imul
dec
adc
cltd
dec
jp
jno
xchg
fucomp
fcoml
cmp
movsb
pop
xchg
xchg
sbb
push
sarb
pop
push
orb
enter
mov
clc
idivl
jae
imul
daa
jmp
dec
sbbl
add
jg
jns
xorl
mov
mov
ljmp
imul
rcll
xor
adc
adc
xor
mov
cmpb
aad
add
lods
mov
ret
roll
cmp
add
cmp
fcmovnu
scas
or
jp
or
or
cmp
dec
pushf
mov
test
in
sbb
cli
aad
and
adc
ret
pop
iret
mov
je
mov
rorl
pop
xor
clc
mov
and
ljmp
hlt
cmpsb
push
add
enter
out
cmp
popf
push
das
popf
sub
xchg
addr16
repz
out
bound
xchg
aas
mov
add
int3
xor
test
imul
fisttpll
jg
rolb
sbb
push
sub
pop
jecxz
std
jnp
ja
stos
dec
test
adcl
pop
lret
js
mov
push
lods
dec
clc
adc
mov
adc
jbe
mov
mov
jns
and
sti
xchg
jmp
pop
xchg
mov
out
inc
mov
shll
mov
ds
sub
lcall
sbb
fs
jne
pop
pop
cmp
pop
fcomi
test
mov
arpl
sahf
mov
mov
mov
repz
mov
mov
mov
lock
negl
push
or
test
pusha
sbb
xor
call
sub
mov
xor
cmp
fisubl
jae
add
mov
xchg
push
inc
test
pop
sbbb
mov
lcall
negb
or
jns
fnsave
or
rcrl
rclb
fsubrs
jp
xlat
sub
movsb
outsl
mov
mov
mov
outsl
lcall
and
jge
xchg
cld
xorl
test
movsb
sub
mov
in
rcr
dec
mov
lret
cs
imul
pop
nop
scas
xor
and
and
jmp
xchg
mov
or
clc
loopne
fstps
jnp
mov
scas
ret
adc
pusha
incl
or
xchg
daa
bswap
fdivr
push
add
mov
lods
sbb
lret
sbb
js
cmpsb
sbb
imul
pop
cmp
stos
pop
xchg
divb
push
jnp
loope
mov
mov
cmp
mov
notl
incl
cmp
xchg
xchg
mov
sub
jbe
adc
cmpsb
shlb
and
call
insl
pop
cld
hlt
lahf
mov
sbb
inc
sub
aas
or
pop
xor
or
fdivs
stc
roll
jmp
cltd
and
test
jge
test
dec
pop
scas
gs
ja
sbb
jo
push
jno
and
sarl
pop
mov
int
std
xor
add
jmp
lods
xchg
cmp
adc
mov
call
es
dec
mov
repz
lock
std
in
daa
push
mov
dec
into
insb
sahf
push
pushf
push
jo
pushf
cld
pop
ret
mov
sbb
jbe
mov
insb
cmp
roll
lds
xchg
mov
push
mov
cld
pop
cmpsb
add
sahf
je
int
js
push
jmp
cmc
or
jbe
jb
cmp
xor
test
int3
lea
out
xchg
jl
pop
jp
jne
fstps
lcall
fs
mov
lea
testl
and
sub
aad
sarb
cmc
push
jp
mov
orb
ja
xchg
por
cmp
push
sbb
sub
ret
pop
insb
es
or
mov
and
push
stos
jl
xlat
inc
cmp
xor
sahf
out
pop
inc
movsb
pop
pop
iret
incb
fs
shrb
std
cs
lret
mov
adc
or
mov
fcoms
jnp
ljmp
sub
outsb
pop
movsl
vpmadcswd
and
movaps
mov
pop
push
adc
aad
pop
sub
push
cltd
cmc
int3
jbe
dec
popf
dec
je
push
or
roll
jbe
pop
shlb
in
cmc
fwait
jno
mov
xor
mov
lcall
aam
mov
and
adc
sub
add
loop
sub
jmp
jl
pop
lahf
out
outsb
push
mov
mov
mov
mov
inc
xchg
mov
lea
rcrb
gs
dec
mov
mov
sbb
andb
pop
ret
rcrb
nop
aad
dec
pusha
jle,pt
jns
fdivl
cs
mov
jp
and
scas
push
jne
je
inc
sub
rclb
jno
xchg
ljmp
jge
cmp
fld
imul
pop
int3
hlt
nop
mov
insb
sbb
adc
mov
icebp
clc
push
imul
leave
call
movsl
decl
daa
lcall
jno
int
arpl
push
out
adc
pop
mov
into
inc
push
bound
sub
mov
cmp
add
lock
repnz
loopne
xchg
sub
or
adc
pop
fcmovu
pop
ret
scas
pause
cs
sub
and
cmpps
jge
jl
mov
cmpb
fldl
add
rclb
dec
iret
adc
push
inc
and
addr16
add
lds
aad
mov
test
add
aas
adc
push
dec
adc
cmpb
icebp
mov
or
sbb
test
call
mov
pop
mov
cmpl
cmp
cmp
jno
fisubs
fs
push
mov
jae
lods
dec
mov
inc
mov
loope
aaa
lahf
pop
push
push
in
ret
pushf
lcall
or
jle
sti
xchg
inc
das
mov
jg
pushf
repnz
mov
rcrb
or
ret
pop
mov
push
push
xor
inc
dec
leave
out
mov
sbb
aas
dec
loope
cmp
cmc
sbb
mov
popa
jbe
inc
pushf
test
lods
stc
xlat
add
out
adc
test
addr16
cmp
repz
jg
jmp
jo
ret
jne
xchg
mov
jb
cmpsb
add
add
clc
pop
mov
pusha
push
mov
jae
stos
out
pop
cmp
int3
jp
mov
sub
sarl
xchg
mov
mov
xor
popa
outsb
fsubrl
mov
je
inc
and
ret
jno
jae
sbbb
arpl
stos
push
sub
lret
push
orb
mov
pop
sarb
bound
in
pusha
stos
test
inc
jns
mov
fisubrl
add
inc
or
cmp
pop
jns
mov
aam
sbb
fistpll
daa
push
mov
bound
scas
dec
movsl
test
or
cmp
fwait
push
mov
sub
jl
xchg
fsubrs
and
gs
mov
fwait
push
dec
push
int
mov
add
lret
sbb
adc
cmp
pop
test
aaa
dec
push
roll
push
fisubrs
mov
scas
inc
repnz
adc
ja
lret
jcxz
aad
dec
bound
subl
push
dec
push
mov
ljmp
sub
mov
xchg
mov
jg
adc
mov
sub
or
mov
add
mulb
je
sbbl
xlat
movsl
sub
pusha
pop
loopne
aas
lret
mov
lret
jbe
push
mov
stc
lcall
movsl
in
cmp
inc
pushl
insb
adc
push
cmc
sub
or
xor
xor
aad
or
sub
and
pop
add
xor
sbb
stos
jb
out
and
aam
or
jns
outsb
push
pusha
push
mov
cmc
push
inc
mov
push
in
cltd
sarl
pop
xchg
push
mov
push
jns
jae
repnz
lods
outsl
aam
push
stc
sub
test
std
mov
stos
mov
mov
mov
or
push
sbb
clc
mov
push
or
push
xorb
mov
xchg
int3
jge
pushl
arpl
jle
aad
dec
pop
add
jmp
enter
sbb
sahf
movsl
and
mov
inc
and
mov
fdivp
cmc
inc
add
scas
mov
aad
insb
int
pusha
arpl
int
push
call
dec
dec
sub
jo
shr
stos
lock
jl
cmpsl
inc
ss
pop
mov
test
in
hlt
popf
mov
jo
pop
add
lods
bnd
fisubl
mov
jbe
mov
or
sub
out
and
mov
cmp
jae
stc
mov
pop
movsl
fbstp
pusha
sub
mov
lock
pop
jge
jae
rolb
add
addb
enter
incl
jmp
mov
rorb
lret
stos
mov
shll
add
dec
lds
dec
mov
mov
mov
and
jns
bound
mov
push
xor
sbb
or
pop
pop
lcall
dec
cwtl
dec
lcall
mov
lret
repz
test
in
xorb
pop
lcall
lds
lock
imul
mov
gs
cmp
xchg
dec
ds
xor
pop
sbb
adc
rclb
cld
andl
cs
jno
lods
sbb
stc
adc
jl
imul
adc
push
jnp
ds
cld
out
pop
pop
mov
inc
xchg
cmp
icebp
pop
xor
push
jb
pop
std
fnsave
ror
sbb
adc
sahf
ja
pop
cmpl
mov
adc
lods
jo
sbb
dec
cmc
or
cmp
aas
outsl
adc
in
jmp
lret
inc
repnz
cmp
clc
inc
in
push
cld
mov
sbb
fsubrs
inc
jbe
or
or
jnp
iret
out
mov
insl
push
outsw
ret
jnp
mov
nop
xor
loop
dec
fwait
pusha
mov
pop
mov
pushf
xchg
std
sub
pop
push
scas
push
adc
stc
adcl
pop
xor
fsubl
pushw
dec
jno
repnz
cmp
jecxz
dec
pop
push
mov
dec
jmp
sbb
pushl
insl
add
shll
int3
push
iret
push
jle
outsl
arpl
daa
cmp
xor
xchg
mov
jnp
cs
sub
lock
jbe
xor
divb
es
xchg
lock
jo
mov
inc
nop
adc
xor
subl
insl
fs
stos
inc
stos
cwtl
ret
mov
pop
mov
je
pop
imul
inc
lahf
les
dec
cwtl
push
add
mov
out
or
mov
loopne
cld
add
jns
mov
data16
lods
lock
cmp
sbb
clc
js
xor
mov
pop
ss
stos
js
cmpsl
roll
test
lret
push
mov
sbb
sbb
mov
popf
bound
or
imul
jno
enter
mov
adc
out
jb
push
mov
pop
dec
or
mov
inc
imul
sbb
aaa
addr16
lret
pop
repz
pop
roll
ret
imul
aas
push
mov
mov
jecxz
adc
das
mov
dec
scas
lods
push
mov
lea
jnp
lret
scas
mov
and
in
mov
sbb
xchg
rclb
hlt
cmp
out
cpuid
test
jns
ja,pt
sub
dec
fists
jecxz
xlat
pusha
lods
mov
int3
adc
inc
cmp
pop
sbb
jge
scas
sbb
mov
lret
fidivs
xchg
mov
into
adc
fimull
stos
adc
sub
loop
test
sbb
jbe
insb
fnstsw
xorl
sti
roll
rclb
inc
je
inc
out
cwtl
fprem1
clc
adc
mov
ss
sbb
mov
clc
or
ljmp
pop
push
das
mov
pop
daa
push
imulb
mov
sub
lods
hlt
sub
loop
inc
pop
add
or
pop
xor
mov
fimuls
int
es
dec
mov
push
cwtl
imul
or
es
or
adc
subl
loop
mov
repz
pushf
xchg
push
popf
in
xor
sbb
jno
xchg
push
mov
or
ret
sarb
mov
ret
pop
xchg
sbb
sub
inc
shlb
xchg
std
pusha
sti
fwait
lea
sbb
sub
xlat
jbe
cmp
iret
pop
xchg
loope
sbb
xor
in
and
les
sub
sbb
inc
push
repnz
je
movb
and
push
repz
bound
stc
in
mov
sub
in
notb
sahf
decb
loop
fwait
int3
fimuls
fistps
in
ficoms
nop
decl
sub
sahf
sbb
aaa
insl
mov
mov
or
pop
stos
and
jb
xor
and
fucomi
in
mov
push
mov
faddl
imul
or
outsl
jle
cli
xchg
pop
inc
iret
pop
lock
push
dec
cmp
cmpsl
test
nop
cmpsl
push
je
fstpl
das
and
movsb
mov
pushf
jp
jl
scas
xor
icebp
cmp
idivl
mov
insl
inc
xchg
cmp
mov
bound
stos
inc
xor
shrb
cmp
mov
or
pop
inc
fdivl
in
fistl
leave
js
bound
addl
cltd
and
adc
daa
insb
push
mov
and
ljmp
imulb
imul
and
push
adc
add
leave
add
dec
xchg
push
xchg
insb
div
in
cmp
or
add
aaa
ljmp
leave
push
aaa
out
mov
sub
clc
imul
xlat
dec
dec
or
cmp
push
push
fisubrl
sar
jo
adc
not
jnp
jae
fwait
call
in
into
out
fiaddl
ds
lcall
loop
cmpsb
push
fisubs
mov
jge
shll
mov
lahf
jo
mov
das
rcrl
or
in
sbb
push
fsubs
dec
push
rol
in
js
push
js
jnp
xchg
jne
fcmovb
sbb
mulb
subb
jne
in
xchg
imul
ret
outsb
loope
push
rcrb
and
mov
je
and
cmp
sub
divl
ret
mov
arpl
xchg
mov
dec
nop
cmpsl
in
sbb
adc
popf
cwtl
adc
inc
dec
popf
fstpl
mov
or
repz
or
in
mov
sbb
cmp
xor
add
mov
push
sahf
stos
test
jo
call
mov
ds
into
push
fdiv
fadds
sub
pop
jo
cltd
pop
jecxz
in
lret
xchg
and
xor
cltd
jle
cwtl
pushf
xchg
into
pusha
mov
mov
jno
mov
jnp
pop
ds
dec
movsb
push
ret
rcll
je
mov
fmull
mov
xchg
aam
insl
dec
or
jp
int
and
push
cli
dec
add
jmp
lea
add
dec
add
arpl
add
cwtl
loope
cmp
mov
sbb
ja
int3
gs
aaa
xchg
sub
ja
jo
pushf
mov
movsl
add
jae
lds
jae
pusha
xchg
cmp
pop
pop
jp
push
movsl
call
fisttpll
pop
rol
orb
dec
stos
mov
and
gs
mov
push
mov
std
and
push
lods
jne
cmp
aam
imul
movsb
adc
sbb
mov
into
lods
mov
lods
out
sarl
imul
push
imul
popa
xchg
mov
movsb
push
insl
xchg
ljmp
aaa
cs
sub
dec
cltd
orl
mov
sbb
sbb
sti
inc
xchg
xor
outsl
pop
sar
adc
shrd
shlb
cmp
xor
pop
jl
push
jle
push
dec
aaa
daa
and
pop
sbb
sbb
lcall
gs
arpl
cmp
xchg
or
fisubl
adcb
int3
shrl
shrl
mov
adc
jecxz
mov
cmpsl
test
test
push
stc
stos
loop
mov
mov
xchg
push
fisubrs
loop
dec
shll
popf
movsb
mov
rolb
and
mov
in
jnp
das
iret
pop
inc
pusha
idiv
ret
jae
cwtl
xchg
and
ss
dec
ds
popf
sar
and
mov
pop
add
and
sarb
inc
and
dec
pop
mov
cmpsl
push
imul
cmp
jle
in
aam
cmp
leave
lret
fidivrl
jecxz
jle
fcmovne
sbb
xor
xlat
cli
sbb
mov
psrlw
lock
test
xor
push
push
jnp
mov
mov
push
inc
cmc
aas
loope
push
adc
and
test
or
xor
adc
push
fsubr
or
sbb
pushf
nop
cmpsl
sub
je
pushf
out
clc
mov
andb
jg
xchg
enter
xchg
push
cwtl
in
leave
test
push
lcall
cmp
mov
jle
pop
lea
mov
add
xchg
mov
lret
mov
lcall
fwait
test
psraw
pop
loopne
fucom
call
sbb
leave
push
pop
cmp
ret
repz
xchg
xchg
fisubs
cmp
mov
cmp
daa
arpl
popa
jg
push
fldl
xlat
or
mov
push
push
cmp
js
add
cld
push
lods
pop
dec
jne
jge
outsl
adc
jecxz
mov
mov
call
call
add
push
data16
mov
push
jl
addr16
jbe
xchg
xlat
jbe
loop
adc
mov
icebp
pop
sarl
push
add
jmp
popa
movl
les
sbb
and
cli
dec
int
mov
cmpsl
push
cmpsl
xor
mov
pop
fwait
pop
mov
xchg
arpl
fidivrs
out
cmp
test
into
mov
pop
xorb
and
iret
jl
icebp
lods
daa
cltd
pop
push
push
dec
lcall
pop
aaa
add
ret
in
loopne
jnp
pop
mov
cmpsl
in
pop
es
cvtdq2ps
pop
cltd
pushf
sbb
sub
push
and
test
sub
fiadds
or
pop
sub
inc
std
push
cltd
bound
mov
or
lods
or
add
and
lret
popa
mov
jb
pop
cmp
push
pop
pusha
movsb
fst
pusha
xchg
mov
add
stos
jbe
int3
fndisi(8087
xor
jg
mov
pusha
fstpt
lods
push
ljmp
xchg
les
ret
xchg
test
xchg
daa
fcomps
mov
es
nop
std
int
dec
push
ds
mov
sbb
movsl
pop
mov
lcall
clc
outsl
cld
adc
repnz
xchg
bound
cmp
sub
sub
mov
pop
push
lock
out
adc
add
lds
call
xchg
mov
adc
and
and
mov
jmp
and
xchg
jo
je
mov
imul
fists
ss
xor
scas
loopne
lret
sub
mov
rcrl
jmp
dec
push
stos
sbbb
sbb
loope
popa
dec
dec
lods
cmpsl
dec
inc
jnp
jge
cwtl
ljmp
cli
push
pop
jno
inc
and
popf
shlb
xor
int3
xorl
fstpl
pop
sbb
sbbb
adc
cmp
fdivl
pop
bound
add
lods
adc
in
lret
cmp
mov
push
xchg
loop
gs
fisttps
mov
sbb
movsl
mov
sub
daa
pop
les
leave
imul
jp
push
je
jns
in
sbbb
xchg
fstl
push
sub
adc
sub
or
xchg
inc
adc
or
and
lods
add
aad
movsl
mov
adc
mov
pop
rcrb
push
push
in
lret
daa
pop
pop
test
ljmp
or
or
in
jne
cmovbe
pop
aaa
adc
pop
dec
mov
sub
jns
out
out
shrl
cmp
test
ja
pop
dec
sbb
icebp
out
xor
int
popf
lret
mov
cmpsb
push
xchg
jbe
pushf
lea
ret
add
aas
jp
sbb
loope
sti
dec
hlt
movsb
mov
in
pop
or
xor
sub
out
sbb
data16
jae
test
mov
ds
push
add
xchg
loopne
dec
mov
ret
or
addr16
fldenv
push
mov
in
inc
out
mov
into
add
push
cmp
xor
xchg
mov
push
icebp
mov
out
fisttpl
fucom
xchg
xchg
sbb
nop
jns
and
sub
dec
push
jmp
add
fcmovnbe
inc
jb
pop
jle
hlt
aas
xchg
lea
inc
dec
into
out
into
sub
loopne
in
int3
pop
in
dec
or
xor
pop
lar
fldt
sbb
int3
adc
cmp
pop
lcall
dec
jmp
jnp
xchg
mov
xchg
sahf
mov
add
inc
inc
shrl
jne
push
fcoml
dec
xor
bound
insl
push
push
push
stos
in
clc
out
popl
insl
fcomi
sbb
es
dec
sbb
mov
add
lods
ret
or
ds
add
adc
cmpsb
ja
ret
mov
jae
push
fmuls
xor
mov
xchg
sbb
pop
add
icebp
cmpsl
test
rcrb
lods
xchg
shlb
sbb
xor
sbb
adc
inc
cmpsl
mov
je
movsb
popl
cs
mov
scas
ss
popa
shlb
xor
movsl
daa
sarl
mov
sahf
iret
adcb
sbb
repnz
imul
fisttpl
mov
jecxz
mov
push
mov
jecxz
repz
jecxz
into
je
stos
incb
movb
jns
adc
push
orb
cmp
movsl
outsb
in
and
lret
shlb
inc
inc
add
mov
inc
fs
and
add
pushf
push
dec
cmpsl
je
sbb
out
pop
mov
jge
fcmovb
pop
ffree
or
clc
sub
push
inc
call
jmp
xchg
add
pop
mov
cltd
push
js
mov
pop
mov
ret
test
xchg
jae
cmpsl
lods
lret
sti
leave
nop
or
ds
or
cmpl
cmc
lahf
xchg
repz
adc
xchg
mov
fidivrs
test
pop
jp
xor
pop
in
xor
jg
xchg
lahf
outsl
sti
ss
cwtl
or
sub
push
add
daa
ljmp
push
mov
dec
xchg
mov
pop
xchg
outsl
mov
rol
sub
lock
add
rcrl
or
or
and
nop
push
movsl
ficoms
aad
outsb
adc
gs
popa
jb
adc
dec
add
jb
adc
nop
adc
inc
mov
xchg
xchg
push
mov
lock
jge
inc
test
xchg
and
cmpb
nop
insl
cmpl
dec
ficoms
push
sub
sahf
cmp
lahf
sub
sbb
jle
ds
jnp
movsl
xchg
outsb
sbb
out
inc
insl
push
ret
rorl
fistps
aas
cmp
pop
loopne
sbb
xchg
sbbb
mov
mov
jp
xor
test
jnp
push
mov
jno
loopne
add
pushf
pushf
out
inc
add
jmp
shl
add
mov
add
dec
jae
or
xor
push
mov
mov
in
add
cmpsb
clc
ss
es
dec
mov
mov
jmp
fxch
jns
gs
xchg
ret
cli
out
lds
stos
jno
icebp
xchg
add
pop
adc
pop
int3
push
cmp
mov
sub
arpl
mov
in
ret
fisubl
fstl
into
mov
jae
lcall
loopne
push
shl
in
adc
int
stos
out
push
mov
cmpsb
sqrtps
movsb
data16
ret
aaa
xchg
inc
mov
xchg
push
into
ljmp
movsl
cmpsl
pushl
out
icebp
xchg
pop
and
push
sbb
push
in
or
lahf
mov
fisttps
mov
lea
popf
movsl
mov
xchg
pop
fisubrl
fwait
dec
xchg
jmp
add
cld
loopne
cmp
stos
push
jmp
test
sbb
adc
je
std
ret
jo
xor
dec
out
repnz
hlt
mov
mov
add
icebp
decl
mov
movswl
roll
jb
push
rolb
jp,pt
leave
lret
xchg
les
pop
dec
js
mov
jmp
fwait
aaa
sti
dec
outsb
enter
ficompl
add
popf
add
cld
ljmp
int3
fs
int3
outsl
stos
mov
xlat
cmpl
mov
inc
dec
shll
sbb
inc
mov
popa
das
std
scas
enter
push
out
fistl
popa
mov
cli
inc
or
jle
mov
mov
mov
fwait
decb
mov
cmp
cmc
adc
jb
sahf
lcall
fdivrp
sbb
xor
jge
int3
xchg
arpl
movsb
jno
cmpsb
lock
mov
es
loope
imul
jbe
scas
inc
in
adc
sti
pop
idivl
imul
mov
bound
pop
ja
popa
xor
testl
sarl
cmc
fcomip
add
xchg
jno
inc
add
scas
iret
add
dec
and
cli
mov
shlb
ja
add
mov
outsl
pusha
mov
fwait
and
cmp
or
arpl
rcrb
pusha
ljmp
cwtl
adc
fwait
stos
adc
mov
and
inc
mov
test
jmp
pop
jns
and
cmp
fwait
and
xchg
jmp
test
jo
push
mov
stos
push
mov
and
outsl
xlat
test
lods
jp
incl
push
in
xor
mov
icebp
gs
mov
mov
jno
xchg
daa
inc
adc
or
and
sbb
push
fs
and
call
pop
rcrl
mov
in
xchg
int3
sahf
add
or
sub
adc
mov
hlt
xlat
roll
pop
mov
insb
inc
xchg
mov
mov
xchg
add
aad
ja
out
fmulp
push
pop
mov
bound
xchg
or
fs
icebp
cld
ret
inc
repz
pop
sub
nop
adc
lds
xchg
imul
fs
fidivl
mov
aaa
roll
jo
lock
es
or
or
lcall
lds
xchg
sub
out
or
bound
and
out
mov
and
mov
popf
out
mov
lods
mov
xchg
mov
lds
fucomip
lret
or
lock
clc
mov
mov
mov
cmp
fwait
cmpl
cld
scas
dec
jge
pop
mov
adc
dec
pop
call
cmp
push
call
cmpsl
jecxz
pop
push
mov
loop
negb
mov
push
adc
mov
mov
sbb
lods
repz
add
jnp
mov
push
int3
out
arpl
loopne
jns
mov
and
dec
push
and
cmp
sbb
insb
lcall
clc
xor
out
sbb
xchg
sbb
lea
xchg
shlb
lock
imul
xchg
imul
cmpsl
std
jle
lds
outsl
stos
fcmovnbe
xlat
jle
enter
hlt
adc
retw
cmp
js
ret
ljmp
cli
and
dec
push
xchg
inc
scas
shll
stos
sub
xor
aam
xor
les
cld
setae
add
mov
sbb
mov
or
mov
aad
and
and
fists
xchg
xor
cmp
sbb
out
adc
jge
mov
movsb
addr16
pop
jns
pop
fstp
push
dec
xchg
jbe
das
push
jne
test
xorb
scas
mov
mov
stos
lea
mov
adc
and
daa
out
das
mov
rorl
dec
mov
aaa
je
loop
out
sub
mov
loop
xor
pop
bound
cmp
daa
add
mov
push
mov
sar
testl
xchg
arpl
and
lods
adc
icebp
dec
outsl
lret
mov
mov
mov
rorl
adcl
es
sub
mov
dec
xor
push
je
shl
daa
xchg
pop
imul
les
loope
dec
lock
or
jl
jg
aas
xor
sbb
add
pop
js
adc
stc
or
sbb
stc
push
push
inc
mov
shrb
lds
iret
jo
icebp
pop
jb
inc
mov
les
in
lret
xchg
les
mov
scas
xchg
jnp
call
popa
xchg
cmp
rcr
test
aas
in
bound
enter
jo
xchg
pop
xchg
hlt
fstps
out
push
dec
sub
test
aam
mov
jno
sub
jbe
pop
xor
cld
cmp
add
jbe
sbb
fstp
out
pop
cmp
pop
dec
push
call
shld
dec
mov
xchg
outsl
xor
aad
idivl
shll
aam
outsl
adc
jo
out
stos
sbb
jmp
xchg
daa
jne
push
mov
lahf
mov
xchg
xchg
cmp
cmp
sahf
add
mov
cmp
adc
inc
push
mov
sbb
pop
dec
push
cld
loope
in
fwait
aas
adc
clc
mov
jns
aaa
cld
sbb
xor
cmp
jg
std
shl
rolb
out
inc
fwait
dec
sub
shlb
std
pop
push
mov
test
je
sbbb
stos
sbb
lea
imull
enter
in
ljmp
pushf
xor
aad
sbb
addl
mov
iret
cmp
dec
in
shlb
pop
sub
cmp
loop
sbb
maxps
mov
addr16
fcoms
sbb
lcall
and
sub
jp
jge
cmc
in
les
mov
jnp
repnz
or
inc
in
add
dec
popa
xor
cmp
loop
xor
mov
out
aad
outsb
cmpsb
cmp
nop
sub
add
loope
cmpl
adc
inc
int
imul
stc
sub
xchg
std
cmp
add
jmp
cmp
or
scas
xor
mov
cltd
sti
or
das
mov
daa
das
in
aam
sub
mov
cmpl
xlat
out
data16
lret
mov
sub
hlt
test
jmp
cmp
repz
in
ss
out
pinsrw
sbb
fld
stos
stos
and
mov
jmp
lret
mov
pop
aam
jbe
mov
sahf
adc
sbb
ds
adc
jo
faddp
adc
pop
cmpb
leave
push
inc
in
out
sub
outsl
mov
and
mov
sti
shrb
cmpsl
dec
ret
or
xchg
xor
std
and
inc
or
stc
in
or
fldt
adc
adc
das
imul
arpl
add
mov
push
jmp
stos
shrl
shl
jb
das
jo
add
xor
cmpsl
stc
xchg
dec
jg
fisttpll
or
stc
sub
sbb
in
test
gs
int3
ljmp
das
sahf
mov
fldt
gs
test
cld
hlt
pop
pop
leave
in
inc
fnsetpm(287
cwtd
jo
mov
pop
xchg
std
into
pop
js
add
sub
mov
mov
rcll
fistpll
xchg
pop
dec
xchg
cmp
aad
ja
xor
data16
stos
hlt
push
mov
enter
lock
dec
in
sahf
loop
jnp
addr16
fimuls
pop
jne
sbb
pusha
aad
test
lcall
inc
enter
pop
jnp
mov
rorb
push
add
inc
pop
mov
jo
mov
cld
ss
pop
call
inc
dec
nop
dec
ret
int
mov
out
clc
repnz
into
ja
out
fsts
add
xlat
mov
data16
insb
cwtl
jp
mov
mov
cmp
xchg
repnz
push
and
imul
pop
adc
push
cld
mov
mov
cmpsb
add
cltd
add
sarb
roll
fdiv
jne
faddl
pop
xlat
inc
das
jmp
movsb
notl
loopne
nop
addr16
popf
xor
mov
sub
test
jg
test
pusha
clc
adc
pop
rcrl
xchg
fwait
arpl
rcr
xor
fs
ror
xchg
cmp
popa
js
mov
sub
mov
aam
sbb
movl
xor
scas
adc
frstor
and
push
or
mov
xor
push
test
data16
push
cmc
adc
mov
pop
push
dec
cmc
or
jns
fidivs
mov
jnp
push
push
jb
testb
fstpt
fsubrl
pop
outsl
loop
out
sbb
shlb
jne
jecxz
xchg
icebp
pop
ret
sub
test
stos
pop
in
inc
addb
pop
fiadds
jae
jecxz
fwait
jle
cmp
ficoms
andl
pop
fs
incb
adc
je
xchg
andb
pop
in
std
fs
stc
pop
cmp
adc
decl
pushf
add
outsb
sub
adc
out
ficompl
and
outsb
jne
xor
cmp
cltd
mov
int
mov
insl
pop
cs
xor
loop
bound
xor
mov
or
dec
sub
pusha
or
lahf
push
mov
jns
cmp
fbld
add
xchg
cli
hlt
and
lock
mov
mov
jge
adc
inc
idivb
mov
call
push
mov
adc
push
cmp
in
mov
shl
call
sub
nop
fiaddl
jmp
sub
data16
jne
mov
mov
shrl
fnclex
movsb
or
stos
test
aam
cmpsl
aad
dec
loope
test
fstpl
sub
mov
lods
cwtl
or
les
push
sub
idivb
dec
dec
sub
cmp
xchg
or
push
adc
xchg
sub
mov
inc
pushf
js
mov
mov
cmpsl
adc
movsb
and
xor
call
lds
ja
xchg
cmp
insl
in
insl
jle
dec
loop
arpl
dec
mov
push
cmp
lock
xchg
sbb
fs
inc
xchg
in
dec
stos
mov
jmp
mov
mov
or
lcall
leave
push
jecxz
xchg
cmp
sbb
mov
and
adc
pop
cli
dec
dec
inc
into
add
leave
scas
cli
loop
dec
push
psrlw
dec
stos
ja
jg
jecxz
jb
xor
xchg
xor
sub
addr16
inc
aaa
and
inc
lea
call
xor
icebp
adc
sbb
test
mov
cmp
jl
jbe
rorl
lods
cmp
jle
int
jmp
push
cmp
cmp
fucomi
adc
sub
mov
inc
ja
stc
jge
fsubs
insl
add
imul
jae
inc
inc
pusha
inc
popf
in
sbb
jb
mov
cmpsl
scas
int3
sbb
loop
scas
daa
rorb
pop
xor
adc
inc
ret
mov
pushf
push
clc
jle
pop
ljmp
mov
cmpsb
mov
push
mov
stos
add
scas
and
pushf
mov
mov
jne
imull
enter
fisttpll
scas
lahf
mov
mov
and
inc
pop
cmp
hlt
jae
add
cmp
sbb
jmp
jecxz
or
inc
pop
in
jb
mov
in
mov
jl
leave
fs
sbb
and
xchg
pop
adc
divb
add
jo
repnz
sub
pushf
rcll
addr16
fcomps
cmp
xchg
pop
add
mov
aaa
insl
or
js
mov
jge
dec
mov
pop
inc
leave
push
jo
cmp
out
xor
sub
ljmp
sbb
xchg
or
xor
dec
cmpsl
data16
mov
sub
sbb
adc
icebp
push
data16
sbb
fmuls
cmc
fwait
cwtl
xchg
mov
fdivs
xchg
cmp
xor
das
or
inc
aaa
addr16
addr16
push
nop
je
rclb
in
jmp
aad
repz
inc
xor
frstor
outsl
out
repz
in
push
mov
insb
ja
sbb
rcr
dec
dec
adc
jg
in
cli
or
iret
ds
push
bound
testl
jae
pop
pop
loop
pop
cmp
mov
ds
sbb
sbb
and
jmp
das
int3
cmp
jbe
stos
sbbl
inc
lods
scas
aam
cmpsb
stc
and
xchg
sbb
stos
fcomps
sub
mov
aad
sbb
add
shll
inc
mov
cli
rcll
adc
mov
aad
sub
sub
and
stos
lret
mov
call
into
faddl
addl
sbb
cmp
nop
es
es
js
call
in
adcl
and
xchg
jo
mov
inc
movsl
jecxz,pt
xor
push
aas
pop
dec
adc
jle
jmp
stc
or
cmp
and
bound
xchg
mov
sarl
gs
mov
jns
clc
sub
outsl
push
push
or
pusha
cmpsl
loope
pop
int3
adc
dec
fidivrs
lahf
addr16
add
lods
iret
jns
pusha
xchg
fmulp
frstor
ja
inc
movsb
add
in
jbe
mov
cmp
xchg
ss
repnz
xchg
lahf
rcrl
ss
sub
or
sub
adc
push
xchg
mov
sub
jecxz
cmp
jne
push
push
rclb
jae
jmp
insl
xchg
lock
mov
mov
pop
aas
mov
repz
xchg
in
dec
xor
sbb
lock
mov
aad
sbb
leave
pushf
in
lcall
into
push
inc
pop
xor
out
mov
mov
out
mov
push
pop
push
icebp
pushf
or
xchg
pop
or
jl
ja
and
test
mov
ds
jo
push
or
adc
add
jae
xchg
inc
jbe
rorl
gs
sub
insb
test
out
cmc
cmp
push
jge
ret
insl
sub
push
scas
ret
sub
clc
jb
push
mov
loope
test
adc
push
outsb
popf
out
aam
push
jb
jae
and
and
pop
pop
jnp,pt
movsl
xchg
mov
std
jp
adc
cltd
push
mov
push
fxch
rcrb
mov
cmp
pop
mov
xchg
in
mov
femms
mov
loopne
mov
int
push
mov
xchg
add
mov
or
xchg
mov
inc
sub
xchg
es
mov
arpl
call
mov
ss
mov
shll
pop
mov
add
mov
mov
insb
lods
push
stos
mov
jae
enter
mov
inc
pushl
jecxz
popa
cmc
xchg
mov
xor
jecxz
cmp
add
enter
dec
jae
or
popf
or
xchg
xor
loop
and
push
stos
dec
jp
insb
mov
xchg
popf
add
cli
xor
in
mov
push
in
pop
mov
pop
lea
inc
int3
push
movsl
in
jno
jns
sub
aam
dec
mov
out
es
hlt
push
pusha
lcall
in
das
aaa
out
mov
enter
pop
rcrb
es
mov
cmp
push
in
mov
add
mov
test
in
mov
add
lods
add
cmpsb
stos
dec
test
sti
insl
rorb
repnz
or
add
pop
dec
sbb
xor
push
sub
inc
mov
negl
pop
outsl
paddsw
mov
and
cmp
mov
push
in
pusha
and
dec
sbb
loop
enter
add
or
push
xchg
inc
xchg
xor
fcmovnbe
xor
jge
rcll
das
mov
aad
rclb
adc
adc
cmp
mov
adc
push
mov
scas
mov
bound
popf
pop
xor
pushf
shl
lea
jns
shrb
je
sbb
movsl
jecxz
and
or
mov
mov
cmp
add
mov
test
in
dec
cmpsb
and
add
nop
test
and
call
or
into
sbb
stos
add
or
inc
out
mov
mov
push
jg
xor
mov
sbb
sti
jno
mov
dec
popa
clc
xchg
pop
push
push
adc
bound
leave
add
inc
lahf
jge
push
inc
mov
iret
dec
push
insb
rorl
sbb
sub
adc
add
ret
xlat
in
aas
cmp
imul
jae
dec
shll
test
ljmp
mov
cmc
pop
lcall
adc
outsb
sub
adc
insb
cmpsb
mov
mov
cmp
mov
add
dec
stos
pusha
mov
or
mov
rep
scas
xor
sub
add
inc
cld
pop
ja
cmp
sbb
push
push
adc
ljmp
arpl
jns
shlb
inc
enter
lret
repnz
sbb
loope
jns
aam
ret
fcomps
xchg
mov
cwtl
fsubrs
xor
adc
mov
mov
imul
xchg
daa
lds
notl
sub
xor
or
fistpl
xor
ret
pop
inc
fiadds
add
or
enter
sbb
mov
outsl
fidivrl
xor
cltd
dec
cmp
jp
and
outsb
sub
push
stos
aad
xlat
lds
jg
lret
leave
jg
shll
jmp
lea
insb
or
std
push
cmc
mov
mov
sub
or
inc
subl
jb
add
xchg
inc
roll
fdivrl
add
clc
or
test
pop
sbb
arpl
dec
rorl
xchg
add
in
pusha
sbb
fsubl
insb
dec
enter
xor
sub
push
xor
pop
popf
fdivs
sub
in
icebp
pop
aaa
xlat
jmp
pop
adc
pop
ljmp
int3
out
popa
jle
sub
xor
push
icebp
or
xchg
adc
data16
mov
dec
push
stc
js
jne
mov
in
jbe
mov
jmp
fwait
stos
add
mov
push
popa
adcl
in
push
mov
jb
imulb
mov
dec
cli
xchg
push
iret
and
jle
sar
mov
pcmpgtd
cltd
aas
xor
or
jnp
out
insb
dec
icebp
mov
or
pop
dec
add
xor
mov
add
mov
pop
ds
loope
cmpl
les
cmpb
movsb
andl
loopne
cmp
gs
xchg
ret
xchg
cmp
mov
jnp
insl
pusha
jb
mov
ljmp
pop
into
or
sub
lods
cmpsb
mov
fcomps
nop
psrad
dec
int
in
add
insb
inc
outsl
push
fcoml
movb
mov
sbb
xor
push
dec
mov
bound
push
loope
jo
pop
sbb
push
jp
push
mov
outsb
xlat
xlat
mov
outsb
cmp
or
hlt
std
xor
inc
test
or
pushf
jbe
pop
fcmovb
push
cmpsl
lds
movsb
and
rcrl
xlat
sbb
shlb
ja
fiaddl
arpl
dec
jmp
sub
in
stos
mov
inc
out
out
xchg
push
insl
es
out
out
sub
push
hlt
das
xchg
dec
jecxz
cmp
add
push
and
dec
cmpsl
add
sbb
rcrb
xor
jmp
aad
jl
mov
jmp
jp
push
loop
stc
pop
jecxz
rol
aad
loope
mov
jge
lahf
mov
test
pusha
push
push
mov
sbb
fs
add
ds
mov
dec
pop
or
push
xchg
dec
mov
js
out
jl
cmp
outsb
mov
clc
bound
and
mov
shl
cmp
dec
insb
push
dec
cs
xchg
cld
andb
and
inc
adcl
scas
xchg
fwait
stos
loopne
out
pop
add
sbb
mov
repz
clc
ret
aad
xchg
fldcw
and
fidivl
subb
dec
sbb
sub
mov
data16
push
cli
xchg
xchg
add
imul
mov
xor
cmpsb
fiaddl
mov
inc
sub
mov
sbb
sbb
fnstsw
leave
dec
daa
das
cwtl
jmp
xor
or
pop
movsl
jnp
imul
pop
repz
mov
jecxz
cld
aas
xchg
dec
jg
fcomps
or
std
dec
movsl
xchg
sti
decl
or
adc
jg
push
ficoms
mov
dec
ret
icebp
jp
movsl
xchg
mov
push
sbb
insl
dec
outsl
mov
xchg
leave
test
out
scas
cmc
or
mov
mov
dec
aas
inc
insl
popf
mov
movsb
add
mov
inc
fs
ss
jae
imul
and
jp
sti
lods
orb
lret
xor
fiaddl
fmulp
aad
test
mov
mov
ret
add
ja
es
or
xor
stc
movsl
addl
push
and
xchg
pop
jmp
imul
das
xor
add
outsl
xchg
insl
xor
pushf
mov
sbbb
and
imul
cmpsl
adc
inc
jg
rcll
add
xchg
and
push
addr16
jnp
mov
sbb
loopne
mov
and
icebp
xor
testb
test
int3
outsl
dec
add
sbb
movsl
in
jno
rclb
mov
mov
mov
mov
iret
push
leave
sahf
dec
mov
inc
out
xchg
sub
dec
jno
test
leave
xor
sti
sbb
out
xor
inc
sbb
std
cltd
xchg
lahf
mull
cmpsb
push
jno
fistl
je
fnstsw
or
jbe
jns
call
stc
scas
imul
cmp
xchg
sbb
icebp
pusha
mov
loop
add
push
test
mov
xchg
jmp
test
lea
inc
and
fadd
popa
sub
xchg
into
in
and
fcom
aaa
les
xorps
xchg
add
popa
mov
pause
pop
cwtl
mov
pop
push
hlt
cs
cmpsb
mov
or
repnz
xchg
mov
iret
mov
jg
inc
dec
rcrl
jg
and
pop
xchg
jbe
fldl
sub
add
push
adc
cmpsb
xorb
adc
add
jg
and
mov
xor
arpl
inc
iret
lds
jbe
xor
jnp
push
jne
movsl
mov
scas
test
aam
and
dec
xorl
push
xchg
dec
test
mov
mov
sub
in
ret
add
and
and
arpl
xchg
imul
mov
std
xchg
push
inc
fcomp
push
jbe
mov
sbb
mov
stos
std
adc
enter
les
sbb
ror
mov
loope
add
std
daa
clc
rcll
movsl
pusha
xchg
les
je
xorl
jo
daa
push
rorl
sub
and
and
push
mov
cs
mov
outsl
shrl
out
adc
fs
pop
mov
dec
lret
rcl
inc
sbbl
in
dec
push
dec
or
pop
mov
nop
mov
sub
aam
push
nop
ficoml
loope
inc
and
incl
push
pop
ljmp
dec
or
jne
in
push
pop
and
mov
iret
cmp
mov
movsl
fsts
test
std
in
or
adc
pop
pop
pop
mov
hlt
xor
ret
mov
pop
cltd
mov
mov
jno
inc
clc
out
addb
pop
lret
cmpb
call
xchg
scas
sbb
icebp
pop
mov
insl
clc
cwtl
pop
sub
xchg
sbb
cmpsl
addr16
dec
int3
in
xor
fldcw
ret
lock
sbb
cmp
cmp
sbb
pop
xorl
lret
xor
mov
xchg
dec
insb
push
lods
mov
stc
push
xchg
insb
and
xchg
pop
and
add
xchg
imul
cmpsb
pop
push
lcall
push
pop
dec
je
mov
or
cmp
imul
std
jg
xor
jb
inc
jns
inc
out
repz
xchg
ljmp
sub
cld
bound
lods
in
mov
push
xlat
scas
pop
mov
inc
pop
cmp
jg
in
stos
push
push
fwait
xor
dec
push
mov
ljmp
push
pop
rorl
mov
jg
push
and
negl
sub
inc
aad
dec
cmp
and
inc
lods
cli
inc
jae
mov
push
sub
clc
mov
ror
or
aad
mov
pop
fwait
scas
les
aad
dec
cmp
sub
or
inc
inc
mov
rcrb
lret
jno
dec
shrb
fidivrl
mov
stos
lcall
shrl
ss
xor
add
xor
mov
xlat
loopne
aaa
dec
dec
push
jb
in
add
dec
fisttps
xor
into
pop
clc
or
outsl
sub
push
fs
imul
fdivs
fisttps
lcall
cmc
stos
jle
gs
lods
dec
and
pop
iret
adc
jmp
xor
in
add
pop
cltd
stos
sahf
popf
cmp
scas
scas
shll
imul
or
rorb
mov
adcb
adc
push
xlat
test
popa
ds
adc
dec
mov
mov
adc
testl
xchg
mov
daa
andl
push
fwait
mov
movsb
in
adc
mov
imul
xor
xchg
sub
mov
xchg
inc
dec
aad
sub
cld
and
lea
pushf
cmp
fdivl
jns
addb
mov
dec
pop
ljmp
movsl
in
lret
mov
sbb
jbe
mov
daa
loope
sub
fsubrs
mov
ss
xchg
fnstsw
pop
cmp
imul
test
je
sub
pop
jmp
inc
pop
xchg
dec
adc
es
mov
idivl
aas
imul
es
out
xchg
in
inc
mov
xor
ljmp
jle
sub
imul
call
test
scas
pop
mov
push
popa
sti
push
scas
xor
mov
sbb
sbb
push
popa
int3
stos
std
imul
xor
push
dec
mov
jmp
xor
lahf
sbb
add
xor
adc
lret
push
es
out
dec
xchg
jne
sub
out
gs
orb
cld
inc
xchg
xorl
cmp
dec
sub
lret
sub
shl
cmp
push
cmp
in
out
add
or
jo
cmpb
scas
test
mov
loopne
cmp
push
sbb
test
lods
call
mov
or
mov
ficompl
nop
repnz
addl
outsl
in
test
mov
jnp
shl
jo
outsb
adc
data16
mov
test
push
fs
jnp
inc
cmp
jno
addl
out
sub
jns
sti
push
ror
adc
push
sub
add
stos
cmp
pop
decl
in
sub
fs
shlb
xchg
test
loope
mov
ljmp
push
out
xchg
or
adc
sbb
pop
xchg
jmp
test
pop
add
mov
sbb
sti
lods
xlat
push
dec
scas
aas
mov
gs
insb
test
or
repz
pop
into
xchg
mov
sub
adc
adc
jbe
pop
xchg
mov
mov
testl
enter
repnz
push
inc
insb
je
jo
mov
xor
out
cmp
mov
std
pop
aam
test
or
data16
roll
adc
imul
imul
cld
rcll
adc
rcrb
mov
in
xchg
scas
mov
mov
jl
repz
xchg
dec
out
cmp
imul
sahf
mov
xor
and
push
inc
movsb
imul
xchg
sahf
loop
loope
inc
fimuls
out
sub
clc
std
or
decl
bound
inc
stos
ds
in
shlb
mov
loope
in
in
push
cli
dec
jl
subb
push
call
jecxz
dec
imul
pop
adc
jl
cmpb
in
aaa
fmulp
sub
cltd
aad
or
std
es
sbb
pop
jg
sbb
cltd
bndldx
inc
dec
xor
xor
pop
cmp
repz
enter
pop
and
push
add
inc
std
imul
sub
ret
cmp
out
lock
mov
out
test
cwtl
jae
out
shrb
cld
mov
inc
jnp
aas
adc
cmp
cli
cmp
jae
in
inc
ljmp
rclb
add
push
push
andb
ss
lods
dec
or
sar
mov
inc
popa
pop
rcrb
shrb
in
loop
movsl
cmp
sub
jp
test
add
fnstsw
xor
in
mov
inc
xchg
or
xchg
das
push
inc
add
inc
bound
pop
mov
lock
fsts
or
fisubrs
or
ret
jecxz
insl
inc
jbe
repnz
pop
jge
dec
aas
mov
cld
cmpl
bnd
pusha
pop
lock
mov
jle
xor
inc
push
push
repnz
test
jp
roll
dec
jmp
or
mov
xchg
xchg
xor
aad
cwtl
adcl
mov
push
dec
mov
cmp
inc
stc
icebp
cmp
push
dec
pop
jnp
inc
lret
js
hlt
jecxz
movsl
hlt
dec
mov
sarl
cmp
inc
inc
lock
or
cmp
fsubp
movsl
and
mov
and
sub
jmp
loope
pop
outsl
cmp
mov
adc
and
fptan
rol
insb
jmp
cmpsl
rdmsr
or
aas
jne
icebp
mov
mov
js
adc
dec
sbb
aad
sti
enter
idivb
subl
push
xor
shrb
inc
and
out
cld
push
addr16
shll
jmp
aas
or
sahf
xor
out
add
add
sub
sub
rolb
clc
lret
cmpsl
addl
enter
or
cltd
pop
outsl
inc
jbe
aad
inc
call
cmp
jbe,pn
fdivs
xor
pop
push
pop
cs
mov
sbb
mov
es
enter
and
inc
bound
sbb
mov
cmp
fnop
pop
mov
orb
addr16
das
cmpsb
loop
std
pop
je
ljmp
sbb
cmc
gs
add
insb
cmp
loopne
cmpsb
orl
pop
std
fisttps
mov
sti
daa
or
inc
ljmp
push
repnz
pop
jno
roll
mov
xor
inc
fidivl
ljmp
shlb
ss
adc
mov
push
inc
arpl
shrl
pop
jecxz
inc
insl
xorl
test
xchg
cmp
xchg
pop
sti
out
leave
sub
int
mov
pop
mov
sbb
cwtl
inc
jl
adc
mov
pop
scas
lret
and
imul
xchg
mov
pop
outsl
push
pop
and
enter
jne
rol
adc
pop
jae
xchg
jo
mov
add
jbe
pop
dec
bts
adc
xor
fmuls
mov
mov
stc
inc
pop
insb
into
sub
pop
and
push
and
les
xchg
adc
jl
std
aad
cmpsb
xorb
les
adc
aam
frstor
xchg
aad
das
cmpsl
jbe
dec
mov
es
jo
and
lods
cld
pop
add
je
and
inc
cmp
xor
lret
pop
xchg
mov
ja
ficoml
sarb
int
mov
aaa
mov
shrl
mov
jae
jecxz
pushf
aam
mov
sbb
scas
aas
loope
test
shr
ljmp
dec
scas
xchg
ljmp
enter
insb
cmp
test
sub
adc
scas
loop
jne
je
jnp
mov
movsb
rclb
mov
sbb
pop
mov
jnp
cmp
fwait
jns
mov
lds
jl
lahf
rcrb
mov
mov
loope
fadds
fistpll
push
jnp
out
pop
mov
clc
jo
sti
ja
loope
inc
jbe
sub
roll
ja
outsb
dec
add
test
repz
cmc
adc
xor
sarb
add
xor
push
sub
loop
jne
dec
das
push
lret
sub
in
mov
leave
fisttpl
mov
loopne
lea
cmpsb
in
adc
pop
rcrl
cmp
mov
pop
pop
cli
pop
fsubr
aas
pusha
rorb
scas
push
jno
pop
mov
add
das
cld
loop
mov
jno
add
inc
jb
fldl
out
or
and
sub
jo
pop
xchg
lea
in
mov
outsb
leave
movb
xor
jg
mov
push
dec
sub
mov
in
loop
pop
rol
xor
dec
pop
mov
icebp
fidivs
add
inc
pop
nop
jno
push
loop
add
popf
jns
cmp
stos
xorb
ficompl
inc
sub
mov
sub
lea
push
hlt
mov
cmp
dec
or
icebp
mov
add
les
cmpsb
xor
outsl
clc
jnp
inc
mov
add
into
fidivrs
adc
fidivs
xor
cmp
lcall
cld
mov
sbb
push
mov
hlt
mov
out
ror
hlt
ret
shlb
mov
gs
pop
xor
jle
pop
lds
mov
xor
lock
inc
scas
fs
mov
mov
test
jno
push
cltd
je
mov
mov
in
add
push
outsb
xchg
stos
rolb
or
mov
inc
xchg
inc
ret
or
add
repz
js
or
insl
les
mov
mov
adc
hlt
sub
repz
jo
xlat
insb
jno
adc
jl
push
and
sub
aam
pop
inc
imull
repnz
pop
adc
jecxz
and
das
std
stos
imul
dec
pop
xchg
scas
xchg
rcrl
xor
lds
ja
scas
in
scas
fldcw
clc
aam
sti
pop
jb
pop
or
mov
mov
and
js
rorb
fimull
fwait
arpl
out
lret
push
int3
xchg
cmp
mov
mov
push
lret
insl
push
lods
xchg
mov
push
jle
add
pop
mov
ds
sbb
pushf
jge
cli
popf
scas
add
sub
push
sbb
loop
les
cmpsl
mov
jp
xchg
fucom
and
les
sbb
xor
scas
dec
inc
ss
xchg
in
stos
or
in
jmp
cmp
adc
lret
add
addr16
andb
out
out
lahf
movb
cli
xor
dec
mov
jae
jle
cmp
push
add
into
orl
sub
adc
jge
scas
dec
repnz
pop
add
out
pop
imul
or
pop
movsb
lret
adc
push
jmp
mov
sub
sub
and
aam
ljmp
outsl
cmp
mov
loopne
pop
into
pop
aas
or
jae
ret
out
inc
add
repnz
out
aas
aaa
test
jmp
mov
xorl
jp
pop
sarb
add
ss
imul
imul
fsubl
test
xchg
jle
or
lods
inc
inc
sub
xchg
aam
cmp
ss
pop
push
es
mov
lds
jnp
xor
or
idivb
lock
cmpsb
jp
gs
daa
cmp
into
out
mov
popf
lahf
jo
imulb
add
mov
jne
ss
fisttpl
push
and
aad
xchg
lock
xor
mov
mov
dec
sbb
mov
xchg
ljmp
or
inc
mov
mov
cmp
scas
test
movhlps
adc
cmpsl
cmc
push
lret
add
xchg
mov
mov
jmp
or
js
scas
xchg
or
scas
or
add
das
fcomps
push
inc
loop
rolb
jno
movsb
fisubl
jne
scas
insl
cltd
out
fsubr
mov
mov
add
ds
inc
mov
push
and
sub
arpl
inc
hlt
test
push
adc
mov
xchg
outsb
dec
out
fwait
js
pop
jp
sub
cmp
out
pusha
aaa
sbb
dec
mov
pop
mov
das
pop
mov
mov
mov
mov
mov
addr16
push
or
das
out
lret
into
dec
sbb
push
enter
push
push
cltd
cmp
test
cmp
dec
test
inc
jns
movsb
inc
cmp
loope
sbb
jo
sbb
push
mov
call
xchg
in
and
pop
imul
mov
adc
andb
mov
cmpsl
mov
add
out
hlt
adc
scas
mov
lods
int3
jg
rcrb
inc
mov
insb
movsb
dec
pop
mov
ja,pn
jmp
push
push
or
fsubs
imul
mov
jnp
movsl
cmp
repnz
sti
bound
mov
jae
in
sarb
push
les
push
pushf
subl
inc
sub
inc
jne
adc
das
ss
and
sub
leave
pop
fimuls
gs
pop
scas
mov
cmp
push
jno
daa
and
es
cld
mov
inc
add
and
popa
nop
xchg
mov
test
push
and
jo
and
cmp
add
cmp
outsb
rcrb
or
jns
les
arpl
sbb
push
inc
ljmp
jne
inc
mov
pop
out
jp
pop
adc
sahf
shr
cmc
mov
or
or
mov
and
sbb
sbb
jne
mov
or
push
and
adc
mov
xlat
repnz
icebp
pop
push
imul
pop
stos
inc
jno
pop
xchg
pop
xchg
frstor
cli
sub
int3
inc
mov
in
outsl
or
pop
push
adc
shll
mov
fcom
in
pop
mov
ret
xlat
pinsrw
xor
fisubs
dec
es
repnz
movl
cmp
mov
inc
mov
ret
das
sbb
pop
fcomip
and
push
insb
jns
mov
roll
sub
jp
mov
mov
mov
adc
mov
or
popf
sbb
push
mov
std
std
mov
lods
movsb
fs
lret
ret
adc
pop
push
pop
psubusw
int3
test
adc
cmp
lret
cli
fld
xchg
lds
pop
or
pushf
push
dec
idiv
mov
mov
cs
in
and
xlat
jns
aad
ret
clc
cmp
lret
das
fldcw
jnp
mov
in
sub
es
xchg
jl
and
cmpsl
push
gs
mov
lods
cld
lods
gs
add
push
jecxz
fidivs
sbb
out
sub
pop
lcall
push
mov
ljmp
adc
fmull
pop
negb
xchg
xorl
cltd
sahf
jno
sbb
das
int
sbb
fwait
push
ds
cmp
pushf
cmp
add
cs
pop
mov
sbb
mov
inc
imul
stc
rorb
and
dec
mov
jnp
dec
or
ret
mov
xchg
sub
fcoms
dec
mov
outsb
jecxz
pushf
jne
scas
pop
out
cmp
in
dec
sbb
lock
sbb
push
sbb
or
xor
mov
mov
mov
leave
cltd
or
mov
xchg
lods
and
sbb
fcomi
mov
mov
scas
xor
pop
cmpsb
sti
rorb
sbb
pop
mov
cmp
cwtl
imul
add
pop
mov
cmp
mov
aas
xchg
inc
ljmp
repnz
fidivs
or
iret
repnz
scas
fsubrs
add
nop
lea
or
cmp
insb
decl
fildll
xor
jne,pt
mov
cmpsb
cltd
scas
adc
stos
scas
outsl
add
leave
mov
test
leave
cwtl
push
jg
mov
xor
sbb
int3
or
mov
popa
fdivrs
or
xchg
ds
pop
fidivrl
xlat
pop
xor
pop
inc
arpl
rcrl
jle
jbe
loop
mov
dec
fneni(8087
arpl
dec
int3
mov
inc
jo
sbb
dec
add
xlat
jno
in
aam
filds
mov
push
popa
je
in
daa
xchg
rolb
rcrb
stos
cli
and
sbb
xor
bound
pop
fs
int3
dec
mov
addr16
outsl
mov
in
xchg
ret
push
sbb
inc
mov
cmpb
es
imul
ret
cmp
mov
test
sarb
push
roll
insl
xchg
xchg
and
inc
mov
cmp
jae
push
jo
adc
cmc
cmc
and
sahf
fiadds
out
rcll
test
fmull
shlb
mov
out
pusha
nop
mov
dec
mov
or
clc
lahf
xor
int
stc
pop
mov
aas
mov
push
jb
dec
inc
shll
loope
cmp
and
loope
sahf
mov
sbb
cmpsb
lret
jne
lret
mov
mov
lock
gs
mov
fisubrs
cltd
cwtl
mov
fisubs
test
mov
adc
sar
call
das
aam
push
add
pop
loop
jns
dec
sbb
mov
in
inc
or
aaa
mov
mov
into
out
cmp
mov
cmp
inc
mov
outsb
and
mov
into
repnz
pop
addr16
inc
int3
sbb
repnz
stos
fwait
mov
inc
repz
xchg
lret
push
mov
xchg
insl
pop
out
jecxz
jmp
pusha
shrb
mov
fdivrs
cmp
out
movb
cmp
cli
clc
out
xor
mov
hlt
pop
lea
pushf
cli
sub
leave
mov
push
pop
shll
jmp
adc
pop
adc
popf
push
ds
or
lock
hlt
pop
pop
inc
pusha
lahf
add
jmp
jp
mov
ja
mov
sub
fstpt
sti
sub
ret
xchg
mov
sbb
pop
hlt
xchg
pop
mov
push
xchg
mov
incb
adc
push
sahf
push
movsb
push
cmpb
push
pop
mov
add
int3
xor
call
jge
sarb
sub
fcmovb
das
cmp
push
jl
cmp
and
pop
lods
movsl
fs
gs
jmp
mov
sahf
adc
mov
mov
es
scas
mov
sbb
cmpb
mov
lret
sbb
mov
add
jmp
in
jo
inc
mov
lock
test
les
sbb
mov
adcb
xor
loope
dec
or
pop
loope
lahf
xchg
mov
and
xchg
std
lea
dec
mov
andb
mov
cli
mov
adc
ja
adc
inc
aad
aas
sbb
stos
xor
popa
aas
adc
lds
bound
and
lds
cltd
inc
push
js
test
adc
and
aaa
mov
pop
push
and
out
hlt
adc
scas
jmp
push
stos
and
inc
xchg
adc
mov
insl
aad
jne
int3
ds
fbld
push
leave
adc
sbbb
cwtl
inc
and
lds
test
into
in
les
in
jge
ret
xor
cmp
shlb
xchg
adc
pushf
movsb
add
lea
jle
sub
xchg
arpl
cmp
sbb
ljmp
shlb
mov
dec
xorb
mov
mov
cwtl
insb
pop
push
mov
dec
cmp
mov
push
cmp
ret
out
dec
cs
enter
out
into
insb
in
cmc
mov
mov
mov
enter
mov
jns,pt
inc
jecxz
inc
arpl
push
insl
leave
aaa
imul
jae
or
shll
out
cs
lahf
sbb
stos
mov
inc
outsb
orl
in
mov
adcb
es
mov
in
or
stc
lret
pop
pop
stos
and
sti
xor
jp
scas
pop
mov
ret
pop
xchg
pop
sbb
sub
movsl
scas
jns
jl
test
and
mov
cmp
dec
or
fwait
jg
frstor
dec
mull
movsb
push
sub
mov
sub
mov
ret
sbb
es
fistpll
xchg
iret
pop
push
daa
jo
or
fildl
in
mov
gs
jno
aas
inc
adc
adc
push
xchg
cmp
fdivs
scas
icebp
jo
imul
jbe
test
push
aaa
mov
mov
out
jmp
es
mov
insb
aam
pushl
fimull
pop
sbb
popa
add
inc
mov
sub
test
mov
lea
pusha
cltd
xchg
js
jmp
cwtl
popa
test
sbb
imul
out
jle
xchg
or
sbb
xchg
and
popa
mov
fisubrl
sub
insb
aam
ljmp
scas
sub
and
cmp
les
adc
mov
cmp
jne
or
xchg
in
push
out
xor
mov
mov
and
mov
scas
push
bound
or
cmp
cmc
lods
js
mov
pop
pop
dec
test
pop
sbb
cmp
clc
lret
sbb
adc
mov
cli
adc
in
mov
mov
mov
or
mov
mov
mov
bound
cld
enter
sub
push
mov
xor
jbe
call
adc
xor
push
mov
cmp
jnp
mov
cmp
mov
test
jp
insb
shr
fistl
out
and
inc
aad
pusha
fwait
lret
add
xchg
mov
or
add
leave
xor
fisttps
ret
clc
jne
lcall
int3
mov
add
push
outsb
mov
cmpsb
inc
mov
push
insb
mov
cmc
test
ret
mov
orb
mov
push
inc
stos
xor
scas
or
fst
cmpsb
lods
and
cwtl
inc
sar
lods
lret
mov
loopne
sbbl
daa
mov
in
sub
xorl
inc
inc
outsb
mov
repz
mov
sub
dec
ds
inc
add
cmp
int
cld
mov
cmp
jb
repz
or
rcll
ja
sub
ret
imul
push
xchg
pushf
mov
daa
dec
sub
movsb
test
dec
pop
cltd
enter
shll
aaa
dec
and
jp
add
jecxz
jo
push
push
add
push
les
arpl
inc
gs
or
iret
mov
icebp
bound
dec
add
adc
mov
aaa
inc
inc
cmp
xchg
lds
jmp
add
xchg
nop
insl
iret
mov
sub
inc
push
bound
pop
out
push
dec
sti
dec
adc
lcall
loope
xchg
mov
aaa
sahf
int
and
pop
loopne
lret
jl
out
sahf
sub
xor
movsb
or
or
push
sbb
jae
inc
bnd
bound
out
shrb
out
aaa
inc
dec
push
outsb
ja
sti
test
iret
adc
insl
scas
jecxz
dec
push
sub
mov
mov
popa
movsb
test
mov
mov
push
pop
dec
inc
hlt
nop
xchg
lahf
pushf
xor
sarl
jle
iret
xchg
push
ja
or
pusha
sbb
sbb
xchg
imulb
lods
sbb
mov
sbb
out
mov
call
movhps
lock
xchg
adc
mull
or
bound
shrb
pop
push
cmp
arpl
adc
sub
enter
jp
popl
lea
fcoms
mov
lahf
adc
daa
mov
out
jg
sahf
and
cmp
repnz
mov
adc
sub
int
out
cwtl
inc
jecxz
imul
or
lock
xor
add
or
xchg
mulb
movsb
pop
sbb
cmpsb
push
xlat
push
and
imul
scas
jecxz
and
xchg
or
rcrb
xor
inc
aaa
inc
lcall
jnp
or
es
out
xchg
pop
xor
shr
jg
jmp
divl
pop
es
ret
mov
mov
ja
jmp
push
inc
lods
into
mov
inc
and
lahf
jo
inc
sbb
mov
sahf
ret
imul
jnp
aad
add
andb
adc
mov
jle
xchg
out
call
jmp
mov
insl
out
pop
int
cmp
jns
iret
stos
pop
push
mov
pop
add
in
add
cpuid
mov
repnz
dec
mov
cmp
xchg
xchg
enter
data16
cli
inc
int
fdivr
push
in
sbb
inc
movsl
cs
mov
sahf
xchg
sub
loope
dec
pmulhw
add
in
pop
pop
int
test
shrl
fldenv
or
xor
and
lret
lock
sbb
dec
fucompp
mov
in
cmp
mov
loope
push
movsb
bound
or
in
test
lock
mov
jmp
adc
pop
dec
xchg
mov
and
cmp
sub
gs
add
inc
clc
mov
xor
jo
lcall
push
cmp
outsb
das
adc
ret
subb
mov
jecxz
test
add
push
mov
jb
xlat
add
mov
cmpsb
in
mov
sbbb
jmp
add
dec
lcall
xor
mov
xchg
sbb
sub
nop
push
xor
xor
in
subl
sti
cmp
mov
orl
lea
xor
das
or
fwait
negl
add
dec
or
dec
pop
xor
mov
dec
and
cvtpi2ps
xlat
in
aas
lock
aad
enter
ljmpw
popf
and
sbb
push
push
or
add
and
dec
push
xor
inc
loop
jns
test
pop
fs
arpl
mov
cmc
push
mov
xchg
shlb
xchg
clc
xor
sbb
insb
pushf
test
fdiv
cs
jmp
add
mov
into
inc
cld
lods
pop
mov
ja
pop
mov
cltd
aas
dec
cwtl
shr
add
jae
jns
mov
aam
fwait
adc
push
mov
movsl
pop
sub
jp
xchg
sbb
cmp
xchg
mov
dec
mov
daa
loope
lods
outsl
jecxz
xchg
push
adc
sar
ljmp
loope
dec
ret
stos
sbb
pushf
call
push
stos
xlat
mov
mov
cs
add
jo
add
or
in
leave
add
adcb
or
movsb
cmp
popa
icebp
lea
movsb
scas
inc
inc
push
jnp
sub
shlb
mov
lock
js
mov
push
sub
clc
inc
sbb
jl
push
cmp
add
inc
sbb
ljmp
bound
add
sbb
adc
or
push
cmp
and
test
push
adc
push
mov
or
push
ds
sbbb
test
ss
nop
inc
fwait
mov
aaa
rcll
mov
mov
shrb
fmull
cltd
inc
add
nop
es
shll
mov
mov
push
aad
dec
dec
inc
lahf
push
popa
fnstcw
fstpt
ror
inc
xor
push
movsl
and
cmp
cli
jmp
jo
aaa
lret
and
cmp
movsb
inc
inc
sbb
xchg
dec
jl
out
or
xchg
sahf
push
out
xor
bound
xor
lsl
jbe
push
shlb
in
popf
mov
lcall
push
popf
push
and
xor
sti
loope
mov
outsl
mov
mov
fidivrs
push
dec
or
push
shlb
loope
lret
jae
icebp
outsb
shlb
adc
dec
and
into
lret
scas
pusha
test
les
fstps
int
test
cs
jno
popa
inc
pop
push
seta
pop
cmp
ljmp
cmp
xchg
pop
ljmp
andl
sub
repnz
fisubrs
cwtl
sar
in
aas
icebp
jmp
pop
cltd
cld
add
icebp
in
ret
mov
pop
xor
xor
fidivrs
pop
jmp
inc
push
ja
dec
xor
lret
pop
repnz
negl
mov
pushf
in
stc
sbb
push
push
loope
xchg
stc
sbb
sub
cmp
mov
dec
fistpl
xor
shll
jne
mov
lea
rcrb
movsb
jmp
fcmove
mov
xchg
or
xchg
mov
jbe
lcall
ret
loop
in
nop
mov
ljmp
pop
dec
leave
jnp
arpl
mov
aad
mov
or
pusha
ds
add
xorb
xor
cld
popl
data16
add
rcll
addr16
arpl
mov
in
gs
aas
jne
mov
cli
jp
out
in
jno
sub
pop
adc
loopne
mov
movsb
jno
xchg
enter
or
add
dec
pop
sbb
push
test
push
cmp
movsb
enter
or
sub
or
pushf
pop
jecxz
cmp
inc
mov
xchg
lcall
pop
outsl
add
mov
in
mov
les
aam
cwtl
mov
sbb
xchg
xchg
adc
repz
daa
sbb
mov
jnp
xchg
mov
ret
inc
dec
sbb
push
cmp
stos
sbb
push
outsl
adc
dec
fstps
and
xor
xchg
xchg
std
mov
sti
lret
ret
repz
cmp
pop
or
mov
and
out
ljmp
cmp
pop
adc
test
xor
sbb
in
lock
pop
xchg
cmp
inc
cld
jnp
out
mov
mov
mov
in
aaa
mov
loop
sub
pusha
mov
test
and
mov
add
cld
das
push
into
fwait
sub
iret
loope
les
fcomps
cmp
mov
into
adc
add
lea
out
xchg
shr
or
push
cmp
xchg
out
in
xchg
stc
adc
dec
test
in
cli
aam
mov
fildll
and
adc
out
inc
and
loopne
popf
xor
std
scas
pop
imul
gs
xchg
mov
xchg
bound
push
cld
mov
jge
mov
cmp
shrl
rcll
mov
mov
mov
movsb
xchg
inc
test
cmp
sbb
xchg
add
sub
cmp
inc
jno
es
add
pop
lds
push
sub
inc
or
add
mov
outsl
clc
mov
xor
pop
js
sub
or
xor
cmp
das
icebp
fdivrl
and
addl
lods
mov
stos
lds
push
xchg
jbe
cmp
in
jb
mov
xchg
or
imul
test
inc
adc
outsb
mov
sbb
xor
push
sub
dec
in
ss
js
push
adc
ljmp
jecxz
loop
repz
and
dec
jmp
test
xlat
mov
mov
repnz
add
push
mov
pop
mov
ja
outsb
dec
out
lret
xlat
and
xor
stos
ror
call
dec
mov
ret
xor
das
stos
pop
xlat
mov
mov
rcrb
add
mov
or
sbb
dec
xchg
in
jl
sub
jb
sti
pop
daa
and
inc
out
ret
sub
leave
sub
imul
stc
add
lods
or
scas
fsubrs
inc
frstor
mov
jne
or
push
mov
lret
mov
ljmp
mov
adc
stos
sbb
ljmp
xor
dec
push
fbstp
loopne
insb
aam
dec
mov
push
mov
jp
push
js
lea
insb
xchg
call
or
pop
mov
add
mov
push
and
mov
jl
sbbb
int3
adc
dec
loope
inc
dec
mov
cmpsb
adcl
adc
clc
imul
sub
cmpl
lds
in
fcompl
pushf
and
sbb
push
fsubs
xchg
push
out
or
adc
and
sub
xor
xchg
adc
mov
mov
sub
nop
pop
sub
or
jbe
test
xchg
lods
je
shrb
stos
pop
dec
pop
cmp
sbb
cmp
add
fidivl
pop
xor
adc
ror
test
std
out
or
mov
dec
mov
test
xchg
push
pop
pushf
je
inc
push
in
aad
or
cmp
pop
add
push
xor
and
fisttpl
popf
xor
adc
pop
fldt
loopne
cli
pop
mov
cwtl
or
movsl
mov
mov
int3
mov
or
inc
inc
int
dec
xchg
add
pop
cmp
icebp
scas
hlt
hlt
xchg
loope
add
mov
dec
sub
xor
insl
shr
sbb
insl
cltd
jecxz
testl
les
dec
aam
or
nop
and
cmp
fisttps
jne
lock
xchg
test
mov
xchg
push
jmp
in
sti
cmp
pop
cli
jbe
and
aam
add
test
popf
add
or
mov
sbb
and
mov
cmp
pop
leave
out
mov
sub
mov
inc
ss
faddl
mov
jmp
testb
inc
add
xor
mov
fstps
mov
lea
mov
lock
jae
inc
jp
jp
jecxz
jmp
les
push
pop
pop
in
test
mov
add
mov
mov
push
inc
jb
ret
jg
jae
cmp
xor
xchg
xchg
fwait
mov
shlb
add
scas
imul
jle
cmp
loop
mov
mov
pop
mov
xchg
gs
cld
add
fnstenv
mov
sti
pop
xor
jecxz
imul
pop
int
push
push
rclb
hlt
dec
xchg
sub
imul
nop
fs
mov
cmp
and
in
xchg
jbe
sub
dec
dec
bound
dec
aas
xchg
inc
pop
in
dec
adc
pop
mov
enter
fdivrl
sbb
lods
cwtl
leave
ljmp
out
ss
sarb
lret
outsb
mov
lret
in
jno
testl
jo
mov
mov
dec
adc
aam
xor
mov
ret
jge
ljmp
gs
jmp
aaa
add
test
inc
nop
cmp
out
pusha
pop
inc
add
push
jb
xor
xchg
int3
in
js
jg
jne
pop
fnstsw
or
or
les
jg
iret
jp
inc
add
push
lahf
add
test
jne
test
xchg
jle
nop
aaa
xchg
out
jo
aas
or
jecxz
lds
mov
and
outsl
shrl
in
push
jb
push
and
loope
lea
aad
mov
fisubrs
repnz
sbb
repz
and
outsb
adc
lret
fwait
int
popf
ja
xchg
lock
sub
call
push
add
inc
sbb
or
mov
sbb
ljmp
dec
jp
sub
orb
leave
xor
mov
sbb
cld
pop
cmp
into
out
cmp
insb
test
sub
rcrb
cmpsb
leave
xchg
pop
test
or
xor
pop
ds
or
sub
add
movsl
lret
jl
sub
pop
inc
rcll
pop
lds
repnz
pop
fisttpl
add
or
test
sbb
jmp
mov
add
jns
leave
push
xor
pop
jnp
jle
fstl
push
push
push
inc
jg
rclb
dec
jp
sub
push
cmp
cmp
cmp
aas
xchg
stos
fsts
mov
cld
dec
shll
mov
rclb
out
js
daa
andl
adc
fisubrl
xor
popf
inc
jne
xchg
test
and
cmp
mov
outsb
mov
jp
push
fsubp
add
leave
gs
test
pop
xor
push
cs
ret
sbb
cmp
scas
inc
stos
push
sarb
and
fs
cmc
mov
or
jg
dec
shrl
xor
iret
mov
cwtl
loop
loopne
fistl
test
into
inc
dec
dec
and
popa
js
je
xor
test
std
imulb
sbb
mov
fcmovnu
jne
jnp
pop
pop
push
cmp
fidivs
aaa
pop
jo
sub
mov
sub
xor
testb
ficoms
mov
loopne
aas
xchg
xchg
add
and
or
enter
call
mov
dec
pop
pop
push
negl
fstl
leave
add
jne
fcomps
cmpsb
mov
ds
jae
mov
and
xchg
pop
fcomps
sbb
shr
sub
xor
cwtl
mov
iret
shl
popf
cli
cs
adc
ljmp
mov
hlt
in
dec
std
mov
js
dec
sbb
bound
ret
mov
inc
and
xor
jl
mov
add
inc
popa
adc
aam
call
lods
dec
scas
inc
jae
icebp
leave
outsb
jo
jl
fbld
shl
mov
ficompl
push
pop
and
xlat
mov
mov
add
in
out
pop
or
repz
das
test
lret
test
scas
stos
sbb
pop
jne
inc
sar
jge
lock
cmp
fsubs
into
out
lods
mov
dec
clc
call
stos
les
add
push
pushf
xorl
test
mov
jnp
sub
imul
jnp
aas
dec
xchg
lea
mov
movsl
inc
sub
lret
movq
jg
pop
or
lahf
ret
xor
pushf
xchg
fcoml
cmp
fidivrl
ljmp
mull
mov
jnp
popa
int3
movsl
mov
call
test
rcl
adc
inc
mov
lods
aaa
daa
xlat
sub
cmp
xor
roll
push
push
or
xor
adc
adc
in
jne
dec
mov
sbb
test
cwtl
add
jmp
in
push
mov
sub
jge
not
out
jg
fistpl
cmpsl
fisubrl
jne
pushf
push
faddl
sbb
xchg
xchg
dec
ds
push
insb
sub
jae
call
scas
jge
outsl
jnp
sti
jnp
dec
stos
pop
and
cmp
out
cltd
imul
add
pop
cmp
adc
add
in
sahf
rolb
pop
stc
sub
sbb
test
repnz
push
bound
xchg
cmp
sub
xor
xchg
push
xor
scas
cmp
hlt
sti
jmp
stos
imul
scas
push
lds
pop
imul
cmp
cmp
and
mov
jbe
in
lods
mov
outsb
jmp
push
shrb
xchg
inc
cmpps
xchg
outsb
add
push
xchg
push
repz
rcll
popa
fsubl
cmp
mov
pop
int3
popa
push
push
xchg
mov
lret
outsb
js
and
xor
out
call
jge
ret
jge
stos
loop
mov
cmc
jg
mov
or
xchg
cmp
push
bnd
adc
andl
or
or
xor
or
add
ja
xchg
gs
popa
iret
mov
ja
mov
jne
and
sbbl
test
mov
lahf
mov
scas
push
js
or
shrl
mov
mov
jmp
cmp
push
sub
sub
pop
shl
add
add
xor
jb
into
nop
jl
sbb
and
aad
push
out
mov
fidivrs
cltd
xchg
xchg
add
outsl
pop
clc
cwtl
mov
test
mov
cltd
into
fdivr
sbb
mov
sub
addr16
mulb
xchg
int
push
inc
push
pop
es
jb
sub
or
add
sbb
es
mov
shll
xor
xchg
cs
push
mov
rolb
xchg
cmp
jne
push
add
lea
lret
dec
or
xor
das
jp
push
mov
or
inc
into
xor
push
stos
inc
fsubrl
fisubl
fildll
vpcmpeqw
dec
inc
or
scas
aad
xor
leave
pusha
xor
jg
push
clc
cwtl
aas
subb
cmpsl
stc
iret
adc
push
imul
add
or
push
xchg
mov
jg
push
stc
pop
mov
inc
or
add
sbb
lahf
jle
cmpsl
jmp
out
daa
cmpsb
xor
mov
and
out
scas
dec
mov
add
xor
icebp
shr
lods
mov
cwtl
mov
popa
stc
movsl
inc
or
je
sti
or
jp
iret
mov
repz
inc
stc
mov
add
rcll
daa
outsl
xorl
or
clc
jmp
lahf
inc
outsb
pop
xchg
shlb
mov
mov
in
ret
out
sbb
and
push
add
arpl
mov
out
dec
repnz
push
sti
aad
and
jp
push
dec
xor
inc
gs
mov
leave
mov
out
stos
push
lret
xchg
cmp
mov
mov
mov
pop
lds
sub
pop
pop
test
or
dec
mov
jno
shlb
ja
fildl
pop
dec
fs
sub
pop
in
xchg
test
mov
fisttps
ror
rcr
sub
push
pop
xchg
cmpsb
jns
leave
out
or
outsb
std
cmp
inc
mov
es
sbb
dec
add
sbb
adc
push
scas
jo
cmpsl
test
inc
pop
imul
es
xor
orb
icebp
add
jp
unpckhps
jo
cmovbe
pop
icebp
xlat
mov
adc
push
ds
pop
outsb
gs
mov
fisubs
scas
and
loope
divb
mov
pusha
por
lret
or
mov
dec
ds
jo
ret
fldl
xchg
or
cmp
lods
ret
int3
lcall
mov
lock
add
sub
lods
mov
sti
rcrb
iret
cli
fs
aam
insl
push
popl
adc
mov
stos
sub
repz
cmp
roll
xchg
sbbb
aaa
sub
addl
sbb
mov
dec
ljmp
jno
add
scas
and
rol
and
sub
jnp
pop
or
push
repz
push
jmp
in
xchg
pop
jmp
push
ficomps
cmp
fistpl
dec
xchg
cmp
mov
adc
and
mov
jmp
adcl
mov
dec
xor
pop
pusha
leave
inc
sbb
fisttps
imul
shll
aam
or
push
int3
adc
push
nop
pop
xor
mov
aaa
push
movsb
mov
outsb
data16
lret
repnz
inc
pop
in
mov
scas
sub
jne
fiaddl
out
ret
xchg
es
repnz
or
dec
pushf
stos
mov
pusha
dec
mov
scas
data16
pop
bound
xchg
jmp
mov
enter
outsb
into
shl
sarb
call
mov
repz
xor
cmp
gs
imul
mov
and
mov
mov
push
adc
jb
rcll
stos
sub
adc
or
insl
call
xor
test
gs
sub
ret
lea
jae
xchg
adc
les
inc
aad
pop
fists
insl
inc
aam
xchg
lock
mov
inc
jb
arpl
mov
rorl
ja
sbb
or
xor
mov
push
call
cmc
jp
inc
sbb
adc
mov
add
es
xlat
movsl
xor
nop
lods
push
hlt
pop
icebp
jle
jb
xor
push
dec
aad
imul
cmp
mov
mov
add
cmc
fsts
xor
add
mov
cltd
push
xor
mov
jmp
std
jnp
fsubs
jp
hlt
jmp
xor
lds
cmpsl
mov
loope
mov
cmpsb
pop
or
loope
in
ret
fidivrl
loop
jp
lods
lods
cmpsb
jmp
test
add
dec
rorl
imul
pushf
fldcw
fistpl
cs
std
clc
fadd
cs
rclb
outsl
je
xchg
add
add
insb
sbb
test
fdivrs
insl
cmp
out
imul
adc
pop
inc
mov
xor
stos
je
sti
xor
sahf
sbb
ja
test
ds
es
jmp
xchg
dec
jle
cwtl
lahf
cltd
fadds
mov
jmp
or
jl
pop
mov
inc
in
xchg
mov
cmpsl
leave
into
jne
jbe
adc
pop
fdivl
sub
int
xchg
test
inc
fistps
cwtl
mov
inc
in
add
xchg
mov
aad
cmp
scas
cmp
ret
cmp
or
and
lret
loopne
pop
xlat
testl
pop
sub
pop
clc
mov
inc
xchg
daa
testl
into
mov
add
cmp
sbb
int
xchg
cmp
andl
jo
or
jecxz
shr
fmull
or
ljmp
clc
rol
test
stos
dec
jbe
cmp
and
nop
pop
push
in
sti
sbb
jne
pop
mov
ss
int
jo
xchg
mov
fs
int
test
sub
jo
mov
enter
lock
insb
movsb
push
dec
adc
jecxz
cltd
sbbb
sbb
pop
push
xor
push
and
mov
je
cmpsl
jge
es
add
adc
add
call
into
jbe
fs
lret
test
mov
or
inc
cmp
sbb
push
mov
aad
jo
push
add
adc
pop
mov
xor
mov
xchg
leave
popa
ret
mov
fs
repnz
inc
xchg
inc
push
pop
out
mov
into
xchg
cmpsl
push
pop
ja
dec
sub
mov
xchg
xchg
jb
inc
sbb
sahf
nop
xor
add
sub
xor
or
sub
lds
roll
sub
mov
adc
imul
and
data16
dec
cmp
mov
inc
lea
adc
mov
xchg
push
iret
fwait
ret
repnz
test
mov
jno
xchg
mov
repnz
in
arpl
es
cmp
mov
xor
lcall
mov
sbb
cwtl
dec
loopne
dec
cmpsb
mov
daa
sbb
fwait
in
push
in
adc
mov
inc
add
addr16
inc
iret
jbe
testl
cmp
sbb
cld
and
das
data16
inc
pop
mov
movsl
and
sbb
pusha
mov
xchg
inc
pop
fnstcw
int3
lahf
push
pop
mov
adc
xchg
mov
pop
mov
cli
lods
mov
inc
inc
clc
jns
cmp
mov
fs
bound
mov
jmp
pop
adc
dec
int
mov
cwtl
ret
loop
adc
jo
mov
in
pushf
std
push
dec
mov
ja
adc
aad
data16
jae
or
or
aas
push
scas
in
sti
stos
push
aas
ds
lods
stos
jo
dec
jmp
ret
pusha
mov
inc
jg
lods
fldenvs
xchg
in
xchg
in
insl
in
pop
mov
cmc
test
incb
lods
decb
sub
rclb
sbb
daa
jge
repz
fnsave
push
adc
jno
cmc
ja
dec
lcall
popf
fcmove
test
add
adcl
cmpsb
ss
sub
and
inc
mov
mov
cmpsl
sbb
sbbl
push
addr16
xchg
aam
add
cmp
add
sbb
fdivrl
ljmp
imul
lds
out
mov
xor
shrl
into
sahf
nop
push
mov
add
and
incb
xchg
enter
in
xchg
into
sub
xor
mov
sbb
xlat
adc
cmp
cmp
adcb
insb
fcmovne
pop
add
xchg
add
add
dec
mov
mov
rcrl
leave
pop
leave
xrelease
fsts
out
dec
stos
sbb
add
and
aam
fdivs
inc
fprem
xchg
addb
push
hlt
mov
lds
push
pusha
sbb
pop
popa
dec
sbb
shrl
aas
adc
xchg
jo
add
nop
pusha
daa
out
dec
mov
popf
push
add
and
inc
jmp
sbb
lret
sub
push
mov
outsb
mov
mov
xor
sub
out
lahf
fists
jae
int
fdiv
addb
movlhps
lret
mov
mov
cmp
sbbb
mov
shlb
nop
and
jo
dec
in
aas
imul
sub
xor
mov
cwtl
fistpll
pop
jbe
inc
jmp
sbb
xor
or
insb
out
outsb
pop
jb
adc
xlat
das
hlt
cltd
aas
push
or
xor
inc
sbb
popf
add
cmp
push
cmp
jb
mov
test
scas
test
cmp
dec
inc
or
pshufw
aas
ret
cltd
fiadds
and
addl
xchg
les
pushf
popa
mov
cmpl
dec
dec
clc
sbb
sub
mov
loope
jbe
jp
out
jbe
mov
ret
or
xchg
push
or
add
loopne
mov
xor
clc
pushf
add
loopne
sub
jecxz
inc
scas
pop
lods
test
sahf
pop
dec
inc
adc
insl
mov
imul
sub
int
leave
data16
inc
lret
icebp
mov
mov
aaa
and
insb
cmp
mov
lds
lea
pop
and
pushf
mov
mov
call
jle
dec
ficompl
and
adc
je
jno
dec
dec
adc
outsl
add
insb
loopne
push
sahf
sbb
pop
inc
mov
mov
and
cltd
sbb
iret
adc
stos
popf
sbb
push
mov
dec
popa
push
mov
xchg
add
add
mov
mov
cmc
adc
xlat
cld
xchg
or
js
out
push
popl
popf
sub
xor
push
lea
ja
cmpsb
jg
in
cltd
mov
loop
int3
cld
les
or
ss
inc
inc
mov
push
inc
mov
adc
arpl
lret
add
icebp
sub
push
cmp
ret
or
stos
dec
jae
mov
fstpl
mov
jl
fstps
repz
cmp
lods
mov
iret
dec
mov
orl
fisubrl
hlt
mov
push
andb
clc
imul
adc
js
test
stos
xor
iret
pusha
enter
lret
cmpsb
mov
inc
clc
out
mov
lock
imul
sub
mov
dec
test
loopne
aad
orb
xchg
push
orl
arpl
xor
fisubrl
pusha
xchg
enter
jecxz
shlb
sbbb
xchg
cmpsl
add
pop
mov
out
mov
inc
imul
leave
popf
inc
popf
or
sub
cmpsb
dec
scas
std
cmp
fld
xorl
and
jl
xor
fcom
jno
loopne
push
or
xor
and
and
test
jne
add
or
mov
jb
xchg
rolb
add
stos
mov
popa
dec
dec
inc
outsb
lahf
ficompl
pop
lret
mov
gs
fisubs
adc
icebp
loope
inc
ds
xchg
jecxz
mov
loop
mov
mov
cld
hlt
test
or
sub
adc
inc
in
imul
sbb
fs
idivb
lret
arpl
mov
mov
scas
sub
pop
sub
pop
cmc
sub
lret
mov
cmc
repnz
ljmp
shrb
xchg
icebp
and
stc
das
jnp
mov
test
adc
adc
ficompl
test
fs
stos
lea
les
lret
outsb
addr16
aas
mov
fsubs
andl
jmp
xchg
xchg
aas
xchg
add
sahf
mov
xchg
rep
push
inc
jge
arpl
jnp
sbbl
data16
addr16
push
sti
mov
push
js
sti
push
pop
inc
mov
in
das
sbb
bound
call
out
sub
and
jae
in
fisubrs
pop
sub
add
ds
popf
and
xchg
push
cld
cmp
incl
pushf
or
cmpl
fistl
jbe
fildll
pop
ss
shrb
sub
push
shl
xchg
aas
adc
mov
test
mov
push
dec
xor
scas
jg
xchg
pusha
xchg
dec
push
cmp
aaa
out
pop
jecxz
stc
jecxz
mov
push
ret
sub
inc
ror
sarb
adc
movsl
xor
cmp
cmp
xchg
daa
call
or
cmp
pop
in
out
imul
add
lcall
outsb
pusha
addl
testl
pop
mov
std
jmp
pop
jne
and
out
dec
add
arpl
ret
xchg
xor
gs
pop
mov
xlat
es
cmp
mov
gs
shr
push
add
xchg
ja
adc
hlt
jnp
shlb
jae
mov
pop
addr16
fcoml
xchg
mov
add
rcr
dec
sbb
mov
add
pop
fsubr
or
pushf
out
scas
int
jbe
jne
jno
xor
shlb
pop
pop
adc
jle
inc
repnz
jp
cltd
lcall
push
ljmp
pop
ljmp
mov
mov
pop
out
push
daa
js
movsb
imulb
cmpl
dec
push
in
stc
sbb
push
out
cld
mov
pop
jg
in
mov
push
iret
cmpb
lds
hlt
pop
xor
cs
jbe
out
mov
test
cs
adc
lea
inc
fldln2
mov
in
lcall
add
xor
gs
adc
orl
and
jb
outsl
dec
bound
imul
push
sbb
loope
add
call
test
fldt
mov
mov
and
sbb
imulb
sahf
in
adc
add
sbb
enter
push
lea
outsb
into
test
test
cmp
mov
xchg
in
jns
loopne
and
not
fldln2
jle
mov
pop
cs
jl
arpl
xchg
push
adc
pop
mov
inc
aam
in
test
scas
addr16
fs
scas
xchg
add
jb
dec
xchg
jbe
mov
hlt
pop
xchg
push
cmpsl
mov
pop
fadd
mov
inc
cld
popa
gs
mov
scas
push
cltd
push
int3
cmc
jmp
jne
lds
arpl
and
cltd
or
jmp
inc
dec
add
sub
add
xor
cmpsl
pop
sbb
in
sub
in
mov
hlt
or
test
sbb
add
add
iret
inc
int
inc
mov
xor
popl
mov
mov
push
push
mov
cmp
sub
mov
pusha
fisubs
cmp
add
insl
jb
adcb
xchg
test
aad
mov
sub
pop
fdivr
inc
xchg
cltd
insl
lds
mov
out
mov
xchg
sub
aas
add
dec
int3
jecxz
and
test
lods
adc
ss
or
pop
loopne
shl
mov
icebp
mov
aad
xor
repnz
stc
dec
inc
mov
mov
lods
bound
mov
sbb
xchg
lds
fiaddl
jo
stos
or
mov
sbb
xchg
or
push
push
push
stos
and
pop
aad
mov
out
outsl
add
pop
or
stos
das
lods
mov
adc
lcall
leave
scas
sub
inc
stc
das
sbb
mov
xor
out
test
push
daa
sub
pop
out
jno
mov
enter
cli
mov
mov
test
and
dec
inc
add
sub
jp
jle
mov
pop
and
iret
stos
adc
dec
fisubs
push
cmp
mov
sarb
jl
ffree
test
das
adc
push
jp
push
sahf
mov
adc
or
mov
inc
fwait
in
loopne
movsl
int
aaa
jb
cmp
movsl
adc
nop
xor
adc
mov
stos
jb
xchg
scas
cmp
or
push
enter
test
aam
mov
mov
xchg
data16
sbb
ds
loop
roll
or
out
mov
jo
jecxz
xor
xor
cmp
xor
dec
popa
jecxz
leave
mov
inc
push
je
add
cmp
into
std
and
jecxz
or
mov
mov
das
test
maxps
pop
sub
jo
out
lcall
xor
fwait
dec
sub
sbb
sbb
jg
adc
cwtl
push
test
bound
adc
cmp
jo
addl
shrb
out
in
mov
cmpl
mov
mov
fiadds
ja
mov
sti
xchg
mov
mov
iret
fdivl
adc
pop
sahf
mov
mov
cmp
add
outsb
ret
sub
jecxz
mov
daa
adc
push
add
add
int
ljmp
cwtl
add
lcall
add
and
mov
cmpsb
arpl
xchg
push
dec
mov
aas
inc
pop
test
push
cli
nop
jecxz
aam
jmp
mov
push
stc
xor
push
mov
rcr
mov
inc
popa
cmp
ljmp
pop
jl
or
out
out
sbb
shlb
push
fwait
cmc
jmp
xlat
fwait
jmp
mov
jbe
adc
dec
in
movsl
sahf
adc
push
inc
mov
push
lea
mov
mov
ja
and
dec
sbb
or
pop
mov
inc
sbb
sub
scas
sub
enter
cld
pop
stos
imul
lock
cmpsl
fisubl
jae
lods
inc
ljmp
cmpsl
leave
addr16
mov
xchg
daa
xlat
xor
enter
mov
sbb
shll
aaa
jbe
mov
pop
das
jl
mov
add
pop
adc
xchg
clc
adc
xchg
pop
mov
jae
jo
fildl
fsub
cli
jp
sub
mov
repz
popa
divl
push
shlb
inc
scas
mov
dec
testb
sbb
daa
repnz
add
aaa
jbe
xchg
xor
aam
jge
shr
push
scas
scas
mov
data16
cmp
cltd
test
xor
outsl
add
or
test
stc
ljmp
leave
std
test
cmpsb
jecxz
stc
in
cmc
and
pop
mov
movl
sar
ljmp
hlt
mov
scas
pop
or
sti
or
repz
mov
xchg
adc
add
mov
push
fwait
imul
sub
xchg
mov
xlat
cmpsl
fisttpll
out
xlat
jbe
lcall
int
or
ja
arpl
inc
inc
xor
aam
and
test
mov
add
dec
lcall
in
pusha
int
xchg
ret
mov
lret
sub
insb
mov
mov
pop
test
in
dec
movsb
roll
insl
xor
cltd
and
mov
int
add
test
lods
mov
jg
movsb
inc
jae
adc
loop
mov
lret
cmp
and
mov
cmp
rcrb
jne
add
cwtl
daa
dec
adc
clc
scas
xlat
fiaddl
mov
arpl
aas
fstps
jae
in
fs
pop
jl
pop
aad
cltd
aad
sar
pop
nop
movsl
lcall
xchg
stos
fdivl
inc
int
dec
mov
jecxz
enter
pop
lahf
stos
jnp
hlt
testl
movb
neg
ret
mov
js
repnz
jg
movsb
mov
add
daa
jg
mov
js
call
jo
pop
adc
cmc
sbb
lds
mov
testb
fs
movsb
cmp
fdivs
test
jge
test
lods
movsl
mov
or
cmp
pop
xor
cmp
push
xor
push
sbb
inc
mov
adc
dec
add
pop
push
cltd
mov
pop
jge
or
sahf
mov
cmc
jo
sub
lds
rorb
xor
repz
xor
call
sub
xor
push
push
fdivs
or
jne
rcrl
sub
xlat
sub
les
jns
and
arpl
jmp
es
sbb
addr16
push
in
loope
inc
imull
je
xor
and
in
sahf
orb
jge
push
inc
lea
pop
hlt
jl
dec
lcall
cld
pushf
stos
xor
mov
sar
loop
dec
mov
dec
pop
adc
xor
or
push
push
jne
clc
clc
enter
jae
movsl
ja
mov
out
push
pop
into
mov
cltd
cmp
add
jmp
adc
hlt
mov
loop
or
inc
fsub
xchg
fbld
sbb
xchg
cli
iret
lds
das
or
lock
xor
in
mov
push
out
pop
movsb
scas
sbb
dec
jp
jns
sbb
dec
mov
icebp
mov
div
mov
jns
lock
mov
cmpl
int
ret
sub
icebp
cmp
mov
mov
mov
sub
push
adc
and
pop
and
sub
add
sub
pop
in
mov
ljmp
aam
push
mov
ljmp
push
adc
lods
sub
inc
xchg
sub
lahf
cmp
jg
xchg
scas
xchg
mov
iret
or
insl
pop
mov
lock
fstl
cmc
aaa
lret
pop
stos
inc
icebp
dec
xchg
ret
mov
xor
cmp
mov
mov
fdivrs
add
push
out
mov
xchg
sub
mov
imul
xchg
fisubrl
fists
cmp
int3
xor
cwtl
jne
adc
mov
lods
out
xchg
jle
rorb
shr
adc
movsl
adc
fnstsw
lods
and
in
pop
stc
mov
pop
mov
test
xorl
loope
insb
mov
rolb
push
jbe
sahf
add
test
jmp
test
adc
jae
pushf
adc
mov
cmc
aam
nop
fists
insb
jb
imul
mov
loopne
inc
mov
movsb
icebp
push
pop
ficomps
pop
insb
mov
pusha
or
repnz
pop
mov
stos
sarb
mov
out
mov
and
cmpsb
mov
push
popf
fiaddl
jo
rcl
cltd
push
sbb
dec
xor
adc
mov
shrl
rcll
xchg
loop
jecxz
js
and
imul
xor
mov
jae
aad
dec
aaa
jne
push
outsl
fnstcw
dec
insl
mov
xor
dec
gs
push
sbb
pop
mov
popa
mov
mov
in
movsl
push
adc
stos
pop
cmp
pop
xor
inc
dec
js
fwait
icebp
push
sbb
xchg
xor
pusha
jns
push
mov
out
jo
add
sub
filds
sub
test
pop
sahf
inc
scas
in
inc
xchg
mov
arpl
out
mov
mov
adcb
xor
xchg
adc
lds
div
pop
cld
pusha
dec
dec
js
push
xor
cmp
imul
iret
mov
data16
out
jl
icebp
inc
or
daa
fwait
inc
out
outsb
jg
add
and
cmp
mov
mov
in
xchg
stc
push
dec
push
jo
test
cmc
cmc
ret
ja
jbe
nop
pop
xor
les
jge
add
ja
dec
pushf
dec
pop
xchg
hlt
push
jo
hlt
arpl
inc
sbb
cli
loop
dec
inc
out
aad
rcl
notb
push
push
aam
cmc
xchg
inc
fsubs
rorb
test
mov
call
cmp
shld
cmp
xchg
ficompl
shll
mov
cmpsb
insl
mov
ret
mov
mov
jns
iret
or
cmp
mov
jne
outsl
bound
inc
les
int3
xchg
into
out
aam
cmp
jmp
push
pop
sbb
inc
mov
cmp
fimull
cmp
adc
in
daa
pop
test
sahf
fdivp
call
adc
loop
cli
rolb
cwtl
fdivr
xchg
mov
enter
mov
std
push
int3
scas
imull
rcrb
inc
loope
das
adc
fadds
sbb
lods
jo
cli
xchg
loope
incl
xor
sbb
call
add
testl
inc
mov
mov
and
sub
hlt
js
mov
xor
out
sub
jge
push
repnz
fs
cmpb
pop
sub
adc
dec
call
jns
inc
push
int3
sub
mov
mov
aam
ret
mov
pushf
or
add
lret
rorl
pop
mov
sub
mov
mov
gs
mov
testl
and
stos
cmpsb
add
inc
sarl
push
push
call
rcrl
pusha
push
xchg
push
data16
pop
popa
xchg
and
int
out
adcl
mov
dec
cwtl
cli
xor
roll
addl
sub
cmc
jb
mov
movsl
add
xchg
mov
stos
stos
mov
jne
xor
pop
shll
xchg
ss
jno
jb
push
out
shll
aas
sub
cmpsb
jbe
insb
pop
jae
lock
icebp
outsl
shll
enter
int3
add
sbb
in
lods
aaa
inc
insl
fldl
or
mov
roll
sub
fldenv
and
sub
push
out
call
sbbb
fsubl
mov
adc
icebp
cmp
add
into
shlb
jno
adcb
adc
movsb
loope
add
out
popa
push
push
les
imul
push
cli
dec
inc
sahf
dec
mov
clc
rcll
sbb
sarl
bound
rcrl
jmp
or
jp
lret
push
dec
std
adc
xchg
lret
pop
fbstp
int
test
cld
jae
mov
cmp
pop
rcll
mov
shlb
mov
dec
mov
sub
nop
sahf
and
add
jo
mov
mov
pop
adc
stos
stc
xor
test
push
pop
mov
sbb
mov
push
out
mov
mov
adc
movsb
mov
daa
mov
jne
in
fsub
dec
cmp
push
popa
or
lcall
fcmovnu
cld
cmpsl
push
test
imul
lods
cmp
jb
stc
and
loop
xchg
adc
or
mov
add
leave
addr16
leave
or
adc
push
jbe
mov
stos
call
and
aas
imul
add
adc
pop
mov
push
and
call
adc
sbb
pop
mov
xchg
mov
sub
pop
fistps
jmp
lea
mov
mov
sbb
insl
sub
mov
mov
inc
int3
bnd
std
imul
jnp
pushf
push
imul
in
sbb
jmp
mov
dec
ss
mov
aas
jl
inc
inc
cmp
pop
xchg
inc
not
adc
push
pop
mov
mov
scas
loope
dec
xor
mov
paddusw
clc
shlb
lret
dec
add
adc
lds
xchg
jb
icebp
jo
jbe
adc
sub
sbb
int3
push
xchg
mov
pop
dec
adc
mov
in
lret
mov
inc
in
les
into
ret
inc
sub
sbb
jo
test
jbe
and
push
xor
out
mov
lods
push
mov
mov
in
les
in
pop
pop
scas
adc
dec
jne
rcll
insb
mov
jne
jne
jl
inc
sbb
jo
es
add
clc
mov
std
imul
test
xchg
sbb
push
lret
ss
add
jns
sbb
roll
or
cld
adc
mov
das
mov
sbb
cmp
add
cmc
xchg
fwait
sub
popf
cmp
cmp
pop
mov
test
mov
jg
sub
mov
aas
call
lea
xor
incb
adc
out
and
mov
mov
repnz
cmp
insb
andb
xor
dec
adcb
xchg
mov
aad
sbb
test
lret
push
sub
xchg
out
fsubrs
mov
pop
pop
and
sahf
sbb
inc
push
iret
scas
mov
fcmovbe
mov
test
jge
pop
add
or
xchg
loopne
shrb
ficoml
out
movsl
xor
or
shll
mov
xor
or
cmpsl
push
mov
stos
data16
int
mov
pop
jb
xor
dec
inc
in
add
mov
add
lret
dec
push
mov
mov
jb
and
xor
jg
aas
leave
hlt
popf
sub
data16
fnstenv
loope
sub
lcall
int
shrl
out
pop
push
push
sbb
sbbb
into
scas
xchg
fcoms
fcomps
adc
xlat
fistpl
shrb
mov
lahf
pop
mov
push
xchg
push
out
inc
add
mov
add
xchg
test
jae
pop
cmp
std
or
pop
jns
and
pop
mov
arpl
xchg
fnstenv
cmpsl
enter
popf
out
inc
repnz
dec
movsb
mov
pop
sub
xchg
push
sti
pop
xor
xor
test
bound
sub
sbb
iret
testb
nop
inc
sbb
movb
sbb
push
xchg
and
push
aad
push
sub
out
aaa
add
push
xor
xchg
adc
sub
mov
xchg
cmc
pop
mov
mov
xchg
cli
iret
sbb
inc
lcall
mov
jle
stos
xor
rolb
lcall
add
add
cld
mov
jmp
lea
dec
fsubrl
add
outsl
cpuid
fmull
lea
dec
pop
and
add
jmp
add
inc
mov
rcrb
data16
dec
jle
lock
or
das
sbb
lret
or
mov
add
test
mov
sub
cwtl
imul
out
and
insl
cli
into
vphaddubw
jne
test
dec
mov
out
mov
push
dec
xchg
movsb
cmp
outsb
ret
inc
shlb
sbb
pause
loope
jmp
stos
aam
lods
stc
mov
iret
je
adc
sbb
pusha
xchg
mov
cmp
inc
lods
in
test
fwait
inc
jno
lods
inc
add
pop
sub
inc
push
pusha
icebp
pop
add
leave
adc
xchg
in
test
jge
leave
xchg
and
sub
inc
pusha
mov
dec
ret
movsl
xor
pop
mov
popf
inc
out
int
out
push
pop
xchg
push
in
add
sbb
cmp
xchg
mov
add
in
es
test
pop
fucomp
outsl
xchg
inc
push
mov
jbe
es
xchg
cmpsl
hlt
xchg
mov
cld
in
add
fistpl
out
ds
pushf
icebp
and
cmpsb
int3
insl
loop
inc
cmp
add
out
dec
cmp
pop
jecxz
dec
and
std
pop
lods
mov
jmp
fwait
je
pop
xchg
xchg
xlat
pushf
mov
imul
scas
enter
mov
daa
xchg
cmp
xor
xchg
xchg
mov
frstor
addl
lock
imul
aas
push
mov
cltd
sbb
sub
xor
xor
decl
movsb
js
jno
in
jle
movsb
mov
sahf
ret
ja
jecxz
jecxz
leave
jmp
and
rorl
push
xor
adc
cmp
ret
mov
sbb
fisttpll
sahf
sub
ljmp
xor
mov
xor
xorb
xor
pop
and
rcrl
call
or
stos
inc
inc
lcall
and
scas
test
pop
shr
and
xchg
jle
lret
nop
pop
jle
mov
call
sub
mov
imul
stos
add
stc
sbbb
add
dec
addr16
mov
push
add
insl
mov
mov
js
and
add
cmc
lock
aas
add
mov
mov
pushl
andb
mov
jno
push
xchg
les
jp,pn
and
dec
scas
xchg
mov
in
ret
cmpsl
ss
push
idivl
out
push
mov
pop
loopne
jo
pop
jb
iret
lahf
sbb
stos
arpl
rcrl
jl
cmc
stos
mov
add
mov
fstpt
mov
out
fcmovb
aaa
and
jmp
sub
and
pop
insl
stos
pusha
test
lcall
leave
jle
dec
rorb
dec
pop
ficompl
pop
scas
stos
test
pop
sbb
push
sub
inc
push
xchg
ds
lods
jmp
push
mov
sbbl
push
jb
adc
cwtl
push
into
pusha
jmp
or
mov
jae
pop
repz
mov
bound
push
fildl
mov
int
jecxz
clc
adc
leave
cmp
dec
pop
rorl
iret
shr
push
loopne
sub
popa
inc
aas
sub
pop
mov
xchg
push
sub
lock
mov
sarb
sbbl
in
dec
lods
push
add
xorb
jae
popf
std
add
push
inc
pop
jl
lahf
into
scas
test
mov
sarl
test
ljmp
jecxz
jle
ret
add
shl
xor
aam
lods
test
fiaddl
loop
adc
fimull
bound
movsl
mov
cmpsb
add
and
int
sarb
xchg
xchg
lcall
add
mov
cwtl
cmp
or
cmpsb
and
insb
push
dec
push
inc
shl
arpl
fiaddl
xor
lret
cmp
in
mov
icebp
mov
sub
inc
enter
cmc
adc
ror
mov
sarl
in
fs
push
pop
in
scas
dec
mov
xor
jle
mov
xor
mov
pop
shlb
popa
imulb
sub
push
jmp
inc
jns
test
pop
sub
jmp
dec
xor
cmp
pop
rorb
fwait
mov
jle
push
xor
testb
lods
add
adc
jp
movsl
pusha
bound
in
mov
jnp
adc
lahf
out
xor
xor
hlt
mov
xlat
lret
pop
pop
testb
cmp
sub
aaa
fadds
mov
mov
inc
test
lret
data16
push
je
mov
xchg
icebp
sub
mov
bound
stos
enter
cmp
fldl
sub
iret
mov
cli
shlb
push
and
aam
pop
mov
jg
cmpsb
hlt
xchg
adc
das
xchg
cmpsb
outsb
xor
xchg
and
jbe
stos
cltd
adc
rolb
jg
sbb
div
lods
cmp
xor
fmulp
mov
out
cltd
insl
sub
jl
mov
add
lea
jmp
movsb
iret
repz
sahf
sub
pusha
insl
push
popa
xor
cmp
mov
dec
adc
out
mov
cltd
add
add
mov
mov
mov
pop
aad
sub
mov
mov
fs
les
add
adc
loop
ficoml
and
cld
mov
or
setne
cmp
test
cmp
mov
jp
push
mov
xchg
pop
sub
mov
cltd
mov
fwait
or
loopne
lds
popa
jle
bound
mov
and
push
mov
inc
or
ret
bound
mov
jmp
mov
jg
jecxz
sbbb
mov
mov
and
decl
mov
addl
les
xchg
push
aad
push
sar
and
mov
mov
cs
das
sti
fsubl
inc
add
sbb
sbb
lods
iret
int
nop
movsl
mov
fwait
add
jb
cmp
jmp
sbb
out
jne
cld
sbb
inc
insl
loopne
arpl
mov
inc
test
incb
inc
xchg
mov
jmp
gs
imul
fucom
aad
into
data16
in
sub
jno
inc
add
ljmp
sbb
dec
fmuls
test
push
popf
jmp
popl
pusha
pop
mov
aaa
inc
arpl
mov
cli
add
adc
std
or
add
aaa
pop
ljmp
xchg
inc
lcall
dec
mov
push
adc
pop
les
pop
lods
fucomip
mov
clc
inc
xorb
in
mov
xchg
inc
nop
or
ja
cmpb
or
push
push
movsb
cmp
cld
xor
push
push
mov
xor
jno
or
clc
insb
js
mov
or
rolb
popa
adc
mov
int3
xlat
leave
push
xor
mov
jecxz
add
mulb
in
loopne
int
mov
adc
fwait
gs
test
mov
stc
int3
sbb
push
xchg
rep
and
pop
mov
sbb
and
jb
mov
dec
pop
and
inc
inc
pop
das
xchg
jecxz
cmp
imul
add
lods
inc
stc
add
hlt
in
push
dec
fs
xor
sbb
sub
ss
das
mov
xchg
call
cs
in
and
test
sub
jg
xchg
mov
inc
xchg
xchg
sbb
imul
push
in
mov
loopne
cmp
lret
mov
aaa
xchg
sub
sbb
xchg
add
fdivrl
dec
mov
scas
jno
push
int3
sub
lcall
xor
leave
cli
or
loop
push
mov
fldt
add
ss
mov
cli
add
jg
jle
push
sahf
push
adc
inc
xchg
jg
sbb
fstpt
scas
lret
enter
mov
xchg
in
sbb
xor
xchg
fcmovbe
jo
inc
rcr
aaa
mov
adc
push
add
subl
decb
push
sbb
pop
push
and
sub
mov
stos
jns
push
xor
mov
or
mov
je
pop
adc
clc
in
sub
xchg
inc
daa
in
inc
add
lods
xchg
ficomps
je
lret
jo
shlb
dec
enter
pop
cmp
mov
jne
es
push
scas
pop
push
mov
les
cmp
out
push
pop
jae
push
push
and
mov
cmp
stos
xlat
iret
xchg
add
pop
jecxz
mov
mov
xlat
subl
pop
or
daa
aad
cli
rol
jg
popf
clc
aam
sbb
jp
sbb
mov
cmp
outsb
pushf
ljmp
or
cmp
test
push
cmp
cmpsl
or
ss
rcrb
add
in
pop
lea
adc
loopne
xorl
mov
xor
jecxz
idivb
lods
das
mov
pop
mov
adc
fcomps
clc
push
mov
adc
inc
psubsw
stos
push
xor
insb
pop
neg
sbbb
cmpsb
push
outsb
popa
repnz
popa
jmp
mov
cwtl
aaa
pop
dec
add
testb
test
imul
jge
cmc
gs
fsts
push
sbb
xchg
mov
rclb
mov
cmp
xchg
gs
daa
mov
scas
push
mov
add
js
repz
pushf
sub
dec
inc
pop
mov
fsub
icebp
lods
lods
and
stos
mov
push
jb
les
fcomp
ret
sbb
pop
jnp
push
popa
cmp
insb
in
dec
mov
pop
out
in
cwtl
lcall
out
loop
divb
xor
into
test
inc
arpl
and
adc
cmp
loopne
test
xor
pop
dec
bound
jb
xchg
cli
jmp
shl
fucomi
sbb
push
and
bound
jae
mov
cmp
add
sub
mov
lods
or
fcmovnb
out
gs
movsl
hlt
addb
dec
loope
push
addl
cmp
insb
outsb
mov
in
rclb
xorl
mov
stc
cmp
jb
addr16
pop
in
and
inc
int3
xchg
test
lods
ja
push
sbb
mov
xor
cmpb
sub
mov
xchg
out
fcomp
xor
add
mov
test
arpl
sarb
xor
pop
pop
push
aas
rcr
push
test
mov
fsts
or
mov
jl
in
push
add
ficoms
mov
movsl
push
push
xchg
mov
add
movsl
insl
mov
or
push
cmpsb
cmc
lea
int3
outsl
xor
dec
stos
cmp
or
add
dec
cs
adc
scas
dec
inc
scas
or
nop
pushf
cwtl
jnp
adc
mov
repnz
jmp
mov
mov
mov
lahf
mov
mov
repz
pop
out
sub
test
sub
mov
ficompl
lods
fwait
inc
jno
adc
jnp
js
adc
cld
int
lods
jo
pop
cltd
add
pushf
dec
fdivrs
sbb
cs
inc
cwtl
dec
adcl
mov
rcrl
sub
lahf
dec
jbe
lcall
daa
shrb
add
fs
xor
ja
stos
mov
mov
cmpsb
fdivrl
outsl
cli
xor
std
int
dec
add
movsb
js
jl
cmc
mov
push
mov
and
xor
cli
mov
cmc
fldenv
arpl
or
cs
ja
imul
jne
cmpsb
int3
mov
cmp
push
push
inc
sbbl
cmp
shrb
dec
xor
fs
cwtl
sub
in
pop
xorl
std
cmpsb
shlb
jp
rcr
das
add
cmp
mov
daa
or
xchg
insl
aaa
enter
or
sbb
rcr
pop
mov
push
push
mov
insb
shl
clc
ljmp
xchg
insb
mov
pop
lea
andl
repnz
mov
or
push
mov
popf
imul
xchg
add
jmp
subb
inc
add
negb
fmul
es
in
out
ret
mov
les
enter
je
leave
adc
mov
in
ljmp
xchg
testb
xor
call
pop
xchg
mov
xlat
xor
sub
mov
rolb
std
shlb
popa
mov
popa
clc
pop
test
sarl
sub
and
jne
or
inc
aam
neg
gs
outsl
lret
arpl
adc
adc
mov
icebp
or
pop
or
xor
test
hlt
add
mov
mov
lret
jb
outsb
mov
shl
adc
cmp
in
add
add
inc
xchg
xor
xchg
dec
nop
pop
test
and
dec
mov
movhps
mov
adc
movsl
pop
stos
imul
dec
sub
pop
or
cmp
push
loope
stos
stos
xchg
aaa
jne
xor
mov
and
dec
insb
jnp
ljmp
fnsave
sub
loopne
mov
call
movsl
popa
icebp
sbb
mov
sahf
sbb
inc
ret
arpl
hlt
xor
in
and
cld
mov
fists
int3
mov
cmovge
jns,pn
rcl
xchg
mov
das
retw
mov
push
xchg
add
xor
imul
mov
rclb
outsl
and
jae
mov
jbe
push
ss
add
pop
mov
std
pop
lretw
mov
pop
mov
inc
mov
jle
sub
push
dec
lret
mov
pop
les
pop
push
jae
adc
cmp
sahf
mov
add
shl
or
scas
cltd
fs
sbb
fildl
sbb
lea
jle
setl
fcmove
test
xor
add
mov
sbb
lret
mov
gs
pop
and
pop
add
data16
cmpsl
sub
mov
scas
jo
mov
sbb
push
aam
cmc
mov
enter
jno
jecxz
xor
arpl
lret
inc
fildl
cmp
loopne
fwait
xchg
inc
or
in
and
rcll
ret
stos
pop
push
pause
and
cmp
icebp
fdivrl
mov
stos
ss
jecxz
mov
jb
and
adc
bound
xor
cwtl
js
ljmp
imul
js
cmp
pusha
push
addb
into
cmp
jp
adc
inc
data16
mov
shr
lret
dec
xor
les
pop
loopne
jno
fsubl
add
add
push
jle
mov
pop
popa
pop
cltd
test
mov
cmp
scas
aam
mov
cmp
inc
stc
xor
xchg
ds
push
xor
pop
mov
and
dec
pop
push
popf
mov
sub
fldl
ljmp
jg
iret
pop
leave
inc
inc
fstl
jp
fnstsw
rorl
sbb
xchg
mov
add
cmp
mov
adc
push
fwait
fs
inc
incb
jl
fisttps
mov
mov
lahf
popa
out
sub
adc
stc
push
sbb
pusha
jns
dec
xchg
movsl
cwtl
ja
mov
add
add
pop
int3
cwtl
and
test
inc
sbb
sub
inc
push
dec
xor
aam
xchg
jle
push
leave
jl
add
shlb
fdivrl
or
add
insl
loop
js
cwtl
daa
dec
sbb
jg
insl
jns
out
arpl
mov
aas
mov
into
hlt
add
and
push
push
flds
ret
scas
and
sub
cs
pop
and
inc
pop
xorb
sub
adc
arpl
dec
das
mov
push
shlb
sti
test
lret
inc
mov
mov
enter
mov
pop
rcr
shlb
cmp
cmp
dec
insl
pop
je
fwait
aas
cli
pop
pop
mov
stos
sbb
orb
flds
xchg
inc
dec
int
and
cmpsb
xchg
repz
stc
xchg
pop
stos
jecxz
cmp
push
and
lret
dec
insl
cmp
or
rol
lret
adc
inc
shrl
lds
lret
inc
xchg
push
pop
jbe
sarl
pop
arpl
out
mov
inc
pop
inc
std
aam
lock
adc
mov
mov
push
jg
fcmove
sub
xchg
push
mov
xor
ja
jbe
xor
jg
or
fisubrs
loop
into
loope
stc
lock
mov
rol
mov
aaa
jb
sub
clc
inc
and
xchg
add
lds
in
jl
xor
test
mov
mov
bound
sahf
test
pop
call
in
pop
add
icebp
mov
adc
enter
outsb
jne
mov
xchg
je
lock
movsl
push
mov
shll
lods
pop
andb
pop
mov
sbb
or
jbe
les
test
or
idivl
daa
and
xchg
ljmp
cld
jmp
xor
or
mov
enter
adc
push
dec
mov
movsl
movhps
rcll
popa
loope
subb
push
fldt
mov
add
push
roll
jge
test
xor
adc
gs
movsl
mov
mov
jbe
lret
xchg
fwait
ss
leave
xor
dec
repz
jne
push
movsb
add
mov
pop
dec
adc
or
xor
stc
mov
idivb
mov
lds
stos
push
leave
xchg
es
push
add
mov
ror
jae
xchg
fwait
sbb
adc
xchg
mov
dec
add
test
mov
inc
mov
sahf
dec
nop
rorl
add
or
cmc
loope
push
pushf
mov
addl
hlt
jg
clc
xchg
lods
test
frstor
popa
mov
jecxz
les
icebp
pushf
mov
in
movsb
inc
or
lock
lods
cmp
bound
xchg
push
adc
cmp
xchg
fsubrl
mov
mov
xor
into
stos
js
test
or
pop
aaa
sub
mov
push
fs
adc
xchg
dec
scas
dec
adc
or
enter
inc
in
lret
dec
jp
pushf
push
movsl
push
dec
insb
pop
mov
adc
mov
daa
mov
dec
inc
std
repz
hlt
pop
loop
aam
jecxz
shll
jns
mov
insl
mov
xor
and
dec
add
sbb
dec
mov
xchg
adcl
push
pop
cmpb
cmp
or
mov
test
adc
sti
inc
sbb
iret
adc
push
adc
sarl
inc
push
or
xchg
and
in
sbb
mov
cmp
add
hlt
cli
fwait
mov
sub
mov
loope
push
push
sub
pop
and
dec
push
shlb
int
lret
cmc
pop
or
sahf
push
daa
pop
push
int3
mov
fcomp
add
inc
mov
or
rol
scas
jno
loop
xchg
jb
imul
loop
movsb
test
jmp
pop
push
test
adcb
push
jo,pt
cwtl
pushf
in
les
push
or
subl
push
and
sbb
add
lcall
dec
ror
pop
dec
ds
aam
adc
ret
sahf
add
cltd
repnz
dec
and
rorl
xor
jae
xchg
push
das
inc
sub
jne
ret
dec
repz
mov
push
adc
push
std
lcall
mov
cmp
insl
xchg
imul
mov
andl
push
inc
arpl
imul
pop
xchg
pop
clc
lock
lock
mov
out
popf
ja
add
dec
int3
jl
shll
xor
aas
cmp
lret
xchg
ret
ret
paddsw
jae
pop
testl
jae
test
out
push
mov
mov
adc
push
cmp
divl
cmp
ljmp
jecxz
dec
jg
pushf
int3
dec
aad
mov
cmp
mov
and
mov
dec
rolb
fistpl
ss
push
lock
mov
push
test
je
adc
das
out
inc
cli
xchg
mov
call
pminsw
mov
mov
mov
sub
jo
cmpl
mov
mov
jnp
jp
xor
push
add
adc
pushl
xor
mov
nop
and
test
sub
xchg
divb
out
mull
and
rcrl
cld
ret
test
leave
fwait
addr16
leave
mov
mov
sbb
mov
into
shlb
pop
popa
sbb
cmp
test
lret
stc
in
pop
inc
addr16
and
jnp
pop
cld
dec
fnstenv
scas
sbb
push
fistpll
sbb
loopne
inc
jl
aad
pushf
mov
xchg
dec
jmp
cltd
repz
and
lea
jl
dec
clc
test
insb
xchg
adc
inc
pop
test
shlb
stc
stc
in
push
popf
shl
xor
pop
xor
xchg
pushf
sbb
loope
jmp
pop
imul
arpl
arpl
jle
jbe
test
pop
fmuls
sar
add
add
bound
adc
rorl
outsb
pop
push
push
sub
sbb
sub
cmc
mov
pop
jle
jmp
rcrl
mov
call
mov
xchg
mov
jo
pop
mov
xor
dec
gs
ja
jmp
sub
or
pop
mov
rolb
out
icebp
data16
sahf
push
and
xlat
outsb
push
shrl
inc
cld
adc
mov
insb
imull
adc
inc
out
inc
in
jmp
push
test
lret
out
push
push
xorl
stc
mov
in
sarl
push
fcoml
scas
mov
jno
in
jb
push
mov
mov
clc
out
shr
xchg
jo
mov
scas
scas
xchg
imul
adc
push
test
lods
daa
add
fwait
inc
sbb
addr16
pop
add
push
inc
or
mov
icebp
push
rorl
dec
xchg
and
outsl
movsb
mov
sbb
ds
dec
or
ficomps
in
call
call
das
xor
pushl
fwait
stos
aad
mov
pop
mov
mov
mov
mov
mov
ret
mov
pop
mov
xor
jmp
adcl
sti
fadds
pop
stc
mov
movsb
sub
dec
loop
cltd
sub
int3
dec
mov
ss
imul
mov
loope
jge
psubd
ja
popa
jae
rcr
dec
jne
rolb
push
scas
nop
outsl
or
xor
int3
or
popf
mov
int
cmp
cs
cs
inc
hlt
lock
cld
pushf
sahf
lret
mov
ss
mov
insl
repz
cltd
enter
jmp
xchg
ret
aas
inc
repnz
jge
sbbl
cs
xchg
loopne
sub
xor
fcomi
imul
adcl
mov
or
je
out
das
in
loopne
ret
pop
imul
sbb
inc
sbb
in
ss
cli
pop
fdivr
add
aam
dec
movsb
jo,pt
mov
outsb
rep
cld
lds
pop
xor
ds
push
dec
inc
imul
iret
mov
inc
das
adc
scas
insl
and
jle
push
in
pusha
xchg
ret
nop
je
mov
jb
push
mov
call
pop
ss
stos
scas
jne
call
sahf
lahf
adc
xor
fs
pop
pushf
xchg
sti
in
cli
mov
arpl
sub
sti
adc
cli
inc
xor
add
ret
ret
xchg
and
add
aam
mov
xchg
test
push
fldenv
sub
int
scas
mov
pop
jnp
cmp
shl
pop
imul
push
cmp
mov
int
adcl
out
add
jne
cmpsb
aad
sub
lahf
fcoms
mov
jae
and
addb
xchg
fimull
imul
in
jle
mov
mov
sub
push
and
ret
pop
shrl
push
cmp
xor
fdivp
mov
jns
xchg
ljmp
in
inc
sbb
cwtl
ja
cmpsb
jbe
mov
loop
popa
sub
push
xchg
not
arpl
icebp
lret
loopne
int
cld
js
mov
dec
sbb
fnsave
repz
fs
dec
cwtl
testb
and
aad
fisubl
bound
loopne
and
jmp
pop
cltd
int3
adc
mov
and
int
mov
xor
sbb
mov
icebp
std
lcall
mov
bound
xor
add
push
iret
testb
xor
mov
rcl
add
hlt
xchg
pushf
notb
add
fsubrs
mov
fimull
fsts
or
lahf
pop
cltd
and
sbb
shll
imul
pop
out
popa
aam
sub
mov
dec
fs
push
leave
adc
mov
inc
jne
cmp
jno
pop
ds
jbe
add
sub
mov
jno
inc
lcall
out
cmp
inc
cmp
shll
cld
push
sbb
mov
sahf
mov
test
rcrb
subl
leave
and
sbb
or
inc
push
jbe
inc
cmp
cli
shrl
arpl
imul
adc
push
push
push
xchg
sbb
lea
rol
xlat
push
inc
cmp
loop
popa
sarl
or
sub
rolb
aas
in
in
jns
mov
push
enter
pop
sub
sbb
js
cmpsb
add
push
mov
pop
add
out
cmovno
mov
add
nop
or
cmp
mov
enter
int
inc
jge
or
ljmp
inc
or
xchg
mov
stos
push
ret
loop
xchg
outsl
or
addr16
xchg
clc
lcall
aam
addr16
sbb
mov
hlt
movsb
in
push
xchg
inc
or
das
push
dec
xchg
sub
mov
retw
fdiv
pop
adc
xchg
add
add
leave
sbb
hlt
aad
add
xlat
mov
loop
adcl
dec
inc
insb
add
aas
fstps
std
jmp
pop
data16
lcall
lret
hlt
int3
in
lcall
mov
xchg
aad
xor
mov
repz
fucomip
add
xchg
mov
rcr
push
lds
sub
stos
jmp
loopne
fwait
sub
inc
outsl
ja
jmp
scas
adc
cwtl
loope
pop
lret
cmp
daa
add
daa
inc
inc
push
inc
shrb
in
add
adc
xor
cmp
mov
cs
cmp
ret
sbb
push
push
adc
jne
push
push
cmpsb
out
sub
mov
mov
pop
mov
add
test
imul
lods
and
xor
call
out
add
xchg
test
fwait
enter
loop
pop
bound
lods
or
and
in
movsl
inc
lds
push
cmpb
icebp
lea
sarb
jno
jmp
mov
sub
adc
dec
stos
sub
add
test
sub
dec
adc
jns
mov
xchg
mov
aaa
cli
cmp
pop
pop
add
cmp
xchg
xchg
outsl
dec
stos
test
fwait
jnp
fstl
lahf
dec
cld
cmp
stos
out
hlt
daa
pop
sub
inc
jnp
and
sbb
cmpl
mov
aam
xchg
pop
repnz
and
fmulp
pop
dec
js
xchg
imul
or
xor
mov
movsl
je
lret
std
es
jbe
pushf
mov
add
xchg
scas
clc
in
mov
pop
mov
mov
inc
mov
lret
inc
or
mov
or
mov
or
add
lods
inc
jno
mov
clc
scas
or
test
mov
push
into
sbb
repnz
stc
jnp
mov
jne
push
jmp
test
addl
icebp
out
lods
pop
sbb
stos
mov
xchg
inc
sub
xorb
outsl
sub
in
jbe
mov
mov
push
in
xchg
cmp
push
jp,pt
push
test
ljmp
lret
mov
adc
sti
stos
test
push
fs
or
into
adc
cld
dec
les
repnz
push
out
mov
addr16
fstpl
pop
push
or
push
fidivl
mov
jecxz
pop
cmp
jns
xlat
adc
sub
fsts
mov
iret
cmp
fucomi
xchg
shlb
movsl
sbb
movsl
mov
xor
or
fdivl
jle
movb
mov
xlat
and
push
jmp
jne
xchg
or
adc
adc
fstl
into
flds
mov
jnp
andb
inc
mov
or
dec
cld
ror
enter
imul
mov
dec
cmp
mov
jge
pop
roll
aas
push
mov
lods
pcmpgtd
aad
cld
ret
imul
xchg
out
dec
pop
scas
add
loop
arpl
xchg
rclb
das
dec
out
and
sub
jbe
fists
push
xchg
adcb
mov
dec
xchg
inc
mov
cmp
pop
orb
pop
xor
sti
or
mov
dec
popa
call
mov
push
popa
add
rcl
dec
insb
mov
cwtl
xor
cli
dec
sahf
jmp
repnz
adc
insb
add
pop
push
and
add
fistl
repz
dec
or
int3
xlat
fs
fisubrl
sbb
cmp
fldlg2
and
divb
push
shrb
dec
ss
jge
stos
ret
mov
sbb
pop
stos
push
jmp
iret
lods
mov
loopne
ja
push
jno
stc
sub
push
adcb
insl
sub
dec
cmpsb
or
popf
or
xchg
dec
push
inc
add
hlt
mov
mov
adc
aaa
fistpll
xchg
popf
xor
jbe
notl
add
std
notl
int
xor
pushf
and
fwait
cmp
test
pop
add
or
and
pop
inc
inc
push
stos
jmp
movsl
inc
js
pop
xchg
int
pop
rolb
add
outsl
lods
mov
incb
in
fldl
mov
jge
mov
test
pop
imul
fimuls
push
enter
into
movsl
push
dec
push
dec
shl
xchg
mov
inc
lods
iret
mov
push
push
je
mov
iret
push
push
cmp
inc
dec
stos
pop
sbb
scas
pop
add
mov
jae
and
mov
or
cmp
jb
cwtl
mov
es
pushf
pusha
insb
movsl
loopne
sub
loop
push
daa
xor
outsl
lret
ret
fwait
and
mov
cmp
dec
sti
je
js
mov
push
mov
jnp
or
lock
sbbl
xlat
xlat
movsb
sub
jecxz
jnp
xlat
sbb
ja
sahf
out
or
dec
test
jge
dec
or
js
in
cmpsl
and
adcb
pop
pop
mov
clc
sub
inc
bound
sub
jo
montmul
cmpsb
inc
cltd
dec
lock
aad
test
mov
mov
mov
add
rcll
push
mov
and
pusha
cld
cmp
sbb
dec
in
in
inc
lds
jns
jmp
pop
or
adc
fstpt
movsb
out
push
and
rcll
mov
shl
test
sbb
inc
cwtl
sub
daa
mov
call
dec
jb
out
lahf
stc
cmpb
jne
or
iret
sti
insl
test
mov
movsb
mov
mov
xor
sub
pop
fwait
pop
cmp
fsubr
add
lahf
addb
adcb
xlat
fstl
sub
lods
and
mov
lret
fldt
cmp
mov
mov
mov
pop
cmpsb
lods
mov
pop
adc
inc
pop
add
imul
pop
in
fldenv
fdivr
ss
fxch
jle
mov
fisubrl
aaa
cld
loop
xchg
lea
adc
or
mov
push
call
enter
pop
mov
jp
inc
ss
out
sub
xchg
pop
insb
aaa
sahf
pop
xor
cli
loope
push
xchg
scas
push
mov
movsl
sub
push
pop
outsl
add
adc
mov
aaa
mov
inc
and
out
mov
cwtl
sub
jo
push
mov
adc
scas
int3
enter
sbb
outsl
xor
push
jo
push
imul
xchg
or
lret
mov
mov
pop
inc
pop
sahf
add
cmpsl
sub
mov
std
dec
xor
cmp
loope
sub
push
dec
in
xchg
sub
stos
popa
ja
out
dec
pusha
xchg
mov
les
xchg
inc
sahf
xor
cmp
fdivrs
xchg
cmp
sbb
jb
enter
popa
gs
out
lret
inc
jmp
jbe
call
push
xchg
scas
push
add
arpl
neg
xlat
and
cmp
movsl
push
loop
cli
fadds
adc
fbstp
cli
jmp
mov
insb
data16
shr
or
loopne
sbb
add
xor
sub
lds
ss
mov
sub
push
xor
es
sbb
mov
ret
mov
mov
pop
dec
cmp
ret
arpl
xor
outsl
outsb
loope
mov
mov
int
out
sub
xchg
fsubr
push
mov
in
xchg
lds
or
pop
in
loopne
shrl
les
pop
hlt
or
fidivs
add
cwtl
inc
fwait
andb
mov
shrb
test
or
mov
mov
mov
jg
add
das
mov
adc
test
pop
xor
leave
cmpb
dec
mov
or
ficoms
nop
out
fnstsw
mov
mov
and
js
nop
int3
add
or
and
jbe
inc
aas
push
dec
dec
leave
in
add
out
cmpsl
jp
mov
push
add
add
out
mov
test
mov
lds
xor
int3
add
rcl
cs
out
je
movsl
aaa
ret
xchg
jecxz
jg
shrb
cmpsb
outsl
lcall
ret
lret
mov
dec
test
mov
daa
les
pop
pushl
mov
mov
sub
mov
popa
dec
sbbb
and
out
es
outsb
pushf
fiaddl
cmp
jnp
jnp
iret
add
insl
xchg
mull
add
aad
xor
cmp
movsl
inc
xchg
mov
ret
or
ret
jmp
xchg
loope
cs
movsl
pop
or
lods
testl
out
xor
ds
popa
cwtl
je
aam
in
mov
repnz
addr16
dec
nop
mov
enter
and
hlt
loop
outsb
bound
mov
iret
lods
popf
pop
mov
fs
inc
paddsb
jl
addr16
add
icebp
adc
pop
stos
loope
cwtl
sub
cmp
lcall
jno
clc
fadds
sub
xchg
test
mov
out
add
imul
mov
inc
add
pop
jo
mov
nop
incl
jns
fsubs
xchg
je
or
mov
jmp
pop
lock
and
inc
call
shll
ljmp
out
sbb
out
and
fildl
xor
dec
pop
pop
in
and
cmp
int
adc
push
mov
aad
comiss
jb
pop
sbb
outsb
test
mov
loope
cwtl
pop
add
adc
stos
mov
bound
dec
stc
mov
xorb
and
push
xorl
xor
aam
leave
pop
mov
lahf
insb
jne
wrmsr
mov
lret
mov
xor
pop
sub
cli
faddl
lds
mov
idivb
xchg
insl
insl
push
inc
mov
loopne
loope
mov
pop
test
pop
loop
mov
push
sti
jmp
inc
sahf
iret
stos
dec
test
sub
das
xchg
outsb
inc
mov
shrl
xchg
add
mov
rorb
mov
mov
push
movsl
push
int
shll
lcall
sub
movsl
xchg
jecxz
cwtl
pop
sub
mov
sub
shlb
xor
aaa
inc
jmp
scas
test
sbb
fists
dec
jge
add
hlt
mov
inc
out
mov
leave
sub
pop
lret
cmpsb
jmp
hlt
sub
mov
jb
fldl
pop
lahf
pop
sbb
lods
idiv
repnz
cld
daa
sti
push
frstor
popa
loopne,pt
sub
pop
pop
in
stc
dec
xchg
imul
mov
pop
std
pushf
shlb
sbb
pushf
sbb
inc
repz
aas
arpl
stc
jb
sub
xor
aas
iret
ds
out
or
pop
int3
sub
loope
imul
xor
sub
test
push
dec
xchg
mov
dec
jp
jnp
sub
push
aaa
and
fistpl
xchg
push
xlat
cmp
sbb
mov
test
push
lahf
push
push
hlt
jecxz
mov
insl
arpl
scas
jle
out
test
sub
outsb
adc
cmp
xor
ss
cmp
jb
dec
jne
inc
into
dec
fimull
push
fsubr
repnz
inc
fs
mov
shr
add
adc
addb
sbb
xchg
mov
and
mov
out
call
sbbb
addl
mov
testl
daa
adc
cltd
int
jae
mov
or
ljmp
js
xor
out
adc
in
jge
lds
mov
push
dec
pop
sub
aas
cwtl
sar
fnstcw
sti
cmp
mov
loope
adc
inc
test
adc
fsubl
test
pop
rcrl
imul
add
mov
add
lods
imul
jle
dec
int3
shlb
aaa
lods
adc
xchg
mov
inc
push
push
sub
fiaddl
add
outsl
call
loope
sub
xchg
jge
dec
mov
sbbb
adc
push
inc
sub
int
add
jo
adcl
sub
mov
xchg
adc
and
mov
inc
rcl
sbb
pop
add
xchg
inc
test
call
adc
sarb
scas
sub
pop
pop
and
jmp
fsubrs
cmc
rcrl
rclb
es
push
dec
xor
pop
mov
cmpsb
and
push
jnp
dec
aas
sbb
mov
into
xor
cmp
lds
lahf
jmp
mov
in
xor
hlt
and
inc
out
or
rcl
fwait
lds
push
xchg
sub
rcrl
xor
push
pop
jp
and
or
or
lea
add
fstp
xchg
sub
xbegin
sub
aaa
in
sahf
adc
lret
jmp
and
jecxz
ljmp
mov
or
add
sbb
pop
mov
mov
fisttpll
add
jle
push
je
cmp
push
inc
adc
mov
loope
iret
jmp
cmp
mov
adc
test
repnz
mov
push
pop
test
dec
pop
fwait
mov
ds
cmp
cmp
std
insl
cmovns
sbb
aas
popa
mov
imul
xor
jp
sarb
xchg
imul
dec
call
aas
sbb
test
ret
into
sbb
loop
xlat
add
dec
lret
icebp
scas
in
inc
dec
ja
adc
sbb
movsl
jo
into
je
pusha
inc
icebp
dec
add
push
nop
mov
mov
out
int3
push
fadds
adc
mov
adc
add
inc
dec
push
cmp
lea
arpl
js
test
dec
dec
xchg
mov
dec
les
push
dec
adc
push
movsb
or
inc
adc
repz
xor
jl
jno
pop
mov
jl
fldt
push
lock
rclb
addb
sbb
je
insl
fisubrl
adc
pop
jmp
aad
les
and
out
inc
in
push
stc
mov
nop
aas
jecxz
rolb
pop
aas
pop
push
dec
dec
ss
iret
add
sbb
pop
add
shlb
nop
fcmovbe
mov
imul
std
mov
pop
out
mov
test
cs
dec
test
lahf
mov
fcom
inc
mov
and
jno
sub
sti
leave
in
popf
cmpsb
sbb
les
dec
mov
cmpb
fldt
or
pop
les
mov
lods
push
inc
pop
iret
stc
adc
adc
ja
rolb
shrb
repz
cs
ds
add
shl
popa
mov
xchg
ljmp
cmp
mov
mov
push
movsb
push
decl
dec
lea
push
nop
lahf
pushf
push
andl
mov
test
cmp
pop
mov
in
and
ja
arpl
popf
sub
push
ret
aam
mov
push
sub
xchg
stc
add
mov
mov
xlat
popf
aas
fisubrs
scas
jecxz
bound
call
jbe
and
xor
adc
lcall
popa
lds
sbb
fisubrl
mov
xor
push
sub
adc
jg
sbb
ds
imul
mov
or
sbb
clc
push
cmp
rclb
out
int3
rcrb
sbb
divb
cmp
xchg
add
lcall
shrb
movsl
hlt
sahf
pop
mov
popa
jl
ss
cmp
iret
dec
push
mov
scas
cmp
out
pop
xchg
mov
addr16
pop
xchg
mov
int
push
rol
mov
adc
adc
cmp
into
add
les
scas
adc
sbb
add
in
xchg
mov
push
cmp
call
sub
stos
sub
xor
mov
outsb
sbb
mov
aas
in
mov
sub
test
ret
sbb
pop
stos
xor
inc
sbb
push
pop
xor
adc
leave
xchg
xchg
movsb
ljmp
inc
and
mov
hlt
popf
add
sbb
repnz
jne
das
shll
hlt
xor
inc
dec
xchg
fsubrl
orb
leave
fildll
hlt
pop
fisubl
adc
mov
mov
push
cs
popf
imul
xor
outsl
xchg
mov
jl
sahf
sbb
push
jno
pop
inc
dec
fstps
cmp
and
push
sbb
lock
inc
je
mov
adc
add
aaa
into
mov
push
dec
sbb
adc
or
push
jnp
fistl
pop
int3
sub
push
dec
sbb
addr16
push
push
in
cmp
int
mov
cmp
push
mov
jmp
cmc
sbb
adc
ds
mov
xchg
shll
pushf
adc
arpl
scas
and
dec
xchg
insb
les
icebp
or
pop
das
gs
sub
sub
pusha
jmp
addl
loop
or
and
shlb
mov
cmp
xchg
xor
mov
xor
mov
mov
push
sbb
test
dec
mov
aad
out
aam
iret
push
jne
dec
xor
imul
mov
mov
fdivl
ficoml
xor
ja
fldcw
clc
mov
mov
insl
pop
call
subl
or
mov
inc
aam
gs
ds
addl
mov
scas
and
aas
out
mov
lods
mov
push
gs
sarl
inc
repnz
xor
scas
xchg
mov
dec
add
mov
es
mov
insl
and
mov
dec
test
sahf
jno
dec
cltd
inc
add
fstl
std
outsl
loopne
popf
push
popf
xor
inc
arpl
std
int
push
mov
xor
dec
jge
xchg
inc
out
pop
leave
add
shrb
adc
ja
fildll
lea
sub
sbb
xlat
jne
pop
test
sub
dec
cmp
cmp
loope
pop
arpl
stos
sub
das
push
mov
mov
xor
xchg
rorb
stc
add
push
mov
push
das
in
mov
or
sub
repz
popa
pop
pop
je
push
jno
mov
xchg
jno
out
mov
insb
push
insl
lcall
mov
jmp
lret
mov
fcomi
and
scas
lret
aaa
clc
addl
sbb
mov
sbb
movsl
out
negl
imul
pushf
sub
jae
push
and
pop
dec
data16
into
pop
clc
adc
dec
xor
mov
xor
push
popa
orl
rcll
rcrb
jmp
cmp
add
jnp
dec
jg
sahf
jge
sub
pushf
lds
jge
pop
sbb
dec
lcall
sbb
fnstsw
mov
out
push
cmpsb
fwait
in
enter
cltd
movsl
jp
test
jnp
ficomps
cmp
bound
and
push
push
ss
pop
testl
enter
outsl
cld
dec
ss
xchg
dec
jmp
pop
push
into
loop
adc
dec
sti
into
mov
scas
sub
dec
adc
dec
sub
aad
mov
loopne
aad
imul
lds
and
mov
push
jae
std
adc
dec
adc
stc
dec
push
icebp
adc
aam
dec
mov
push
cmp
sbb
add
or
imul
mov
or
pop
pop
fisttps
jp
test
loop
into
xchg
push
bound
and
inc
in
cwtl
std
xchg
ds
cmp
popa
jae
in
lret
push
comiss
mov
sbb
dec
adc
adc
lahf
clc
xchg
in
es
sbb
jns
jno
test
loop
push
jp
into
xchg
mov
cmp
in
mov
sub
loope
jne
xchg
cmpsl
stos
pop
xchg
arpl
inc
outsl
andl
scas
fcmovnu
rcrl
fwait
jl
pop
inc
add
xor
fildl
jmp
call
sti
pushf
or
hlt
push
add
imulb
rorl
out
out
jl
test
adc
xor
mov
adc
jns
testb
pusha
rcll
in
jp
xchg
cwtl
jecxz
test
loopne
fsubrs
mov
push
ds
cmp
shl
and
push
xchg
rcr
es
cmpsl
arpl
vmulps
cmp
test
cmp
dec
scas
idivb
sbb
je
and
xchg
in
jno
enter
mov
jno
sbb
or
shl
add
repnz
xchg
adc
jae
mov
js
and
sub
xchg
add
push
push
xchg
daa
andl
adc
xchg
fs
sub
mov
fcmovnu
and
clc
or
pop
xchg
lods
mov
jl
mov
xchg
lret
inc
mov
icebp
push
stos
xorl
adc
xor
in
leave
xor
es
adc
ret
xlat
mov
sbb
in
add
mov
xor
sar
shll
shrb
adc
dec
or
popa
add
pop
pushf
sub
mov
call
push
aaa
loopne
lss
cmp
test
push
daa
test
lea
stc
jnp
lcall
mov
dec
test
xchg
roll
ja
pop
dec
sub
cmp
test
les
add
mov
sti
or
fistpll
mov
or
mov
add
movsb
sbb
mov
add
lods
icebp
pusha
sbb
jae
in
enter
dec
inc
hlt
mov
es
xor
ds
push
mov
repz
mov
std
pop
jmp
insl
jo
popa
sbb
xor
in
rcll
das
ret
xor
test
rcrb
xor
ret
mov
les
push
ljmp
roll
cmp
and
pop
mov
stos
add
cmp
loope
adc
test
xchg
xlat
sub
dec
mov
jmp
ret
outsb
cmp
adc
insb
adc
scas
movsb
xor
lods
icebp
je
pushw
fnstcw
inc
les
int
xchg
mov
sbb
inc
inc
mov
mov
pushf
scas
cmp
xor
int
out
and
cmpsl
push
rcll
mov
addb
pop
cmp
or
jmp
in
jne
push
test
cld
jl
cwtl
je
or
pop
aas
daa
ja
adc
clc
inc
andb
outsl
cmpsl
and
divl
subb
add
adc
movsb
scas
std
lea
xlat
dec
lret
nop
loop
xor
ret
rorl
movsl
fstp
ja
mov
xchg
cmpsl
in
pushf
mov
imul
pop
stos
ljmp
xlat
daa
lock
push
dec
xor
insl
aam
pop
mov
dec
in
and
test
ffreep
out
lret
daa
mov
mov
into
pusha
mov
cltd
scas
jecxz
or
xchg
sti
cmp
jns
pushf
and
xchg
and
xchg
mov
call
add
ljmp
pop
xchg
andl
push
add
arpl
mov
and
push
xorl
imul
push
insl
sbbl
jnp
xchg
movsb
outsb
xchg
xchg
shl
fs
push
mov
aad
stos
add
push
lret
cmp
lock
sahf
mov
daa
inc
cmp
inc
ret
push
rorl
cmpsb
pop
push
xchg
out
ja
das
cmpsb
aaa
inc
and
inc
add
or
nop
scas
lods
pop
push
pop
sbb
out
out
mov
inc
jnp
and
je
je
je
cmp
scas
in
sub
dec
cli
pop
adc
aad
adc
scas
push
jle
mov
cs
sbb
ss
addl
mov
inc
scas
jge
xchg
lods
mov
sbb
xor
nop
stos
pop
cmc
mov
xchg
out
and
test
mov
push
aas
sub
sbb
es
mov
sarl
add
jle
jae
int
rol
ret
arpl
sbb
lea
stc
cmp
mov
pop
movsl
sbb
jbe
push
data16
loop
int3
mov
ja
les
cmp
ds
xor
jmp
loope
ss
sbb
sub
adc
imul
jbe
cmp
xchg
mov
jl
inc
in
fildl
mov
in
movzbl
jns
cmpl
and
pusha
xchg
mov
shl
mov
fcompl
inc
mov
xor
int3
sbb
fdiv
xor
js
stos
in
pop
ret
and
aam
cltd
iret
cwtl
mov
std
frstor
int
ja
jo
jno
aaa
mull
ret
sbb
mov
xchg
cmp
push
pop
lock
call
ljmp
sbb
mov
inc
jno
cli
mov
fistps
call
outsl
orb
pop
mulb
dec
add
inc
loope
lds
pop
lods
adc
lock
push
mov
mov
pushf
inc
xor
pushf
fisttpl
out
shlb
pop
lea
lahf
dec
faddl
mov
adc
cmpsb
int3
repnz
and
jo
imul
mov
fisttps
or
jo
js
and
xor
and
push
mov
sub
cld
inc
pop
mov
in
and
mov
or
in
and
les
test
jno
dec
out
filds
xchg
mov
movsb
lret
arpl
imul
andb
xorl
mov
inc
fs
jg
mov
jno
xchg
mov
and
sub
mov
mov
sbb
mov
popa
mov
leave
ss
sti
inc
ret
mov
icebp
pop
adc
xor
icebp
adc
jnp
cmpsb
subl
mov
ret
hlt
push
xchg
adc
or
imul
aaa
insb
sbb
or
es
add
js
adc
jo
int3
adcl
cld
ficompl
dec
movsb
add
pop
hlt
outsl
pop
out
mov
dec
or
movsl
out
cli
push
lcall
fnstenv
and
lods
add
inc
mov
fstpt
gs
arpl
out
and
aam
mov
push
inc
int
xor
lret
cmpl
inc
in
dec
fcmovnb
imul
mov
lea
inc
xchg
imul
icebp
pop
cmc
data16
mov
cld
mov
sbb
xchg
hlt
out
lret
leave
aaa
nop
ficoms
push
pop
cli
jcxz
inc
or
sub
push
jae
lods
sti
inc
cmpsb
addl
rol
fcoml
sbb
enter
and
jle
jl
ficoms
lahf
les
lods
mov
mov
pop
mov
sub
outsl
mov
aaa
ja
dec
outsb
jo
popa
inc
mov
cltd
in
jge
outsl
mulps
and
pop
lds
mov
ljmp
push
adc
xor
int3
ret
pushf
push
out
xchg
lcall
andb
test
mov
mov
ja
insb
mov
mov
popf
push
push
push
mov
mov
clc
and
int3
xchg
stos
bound
push
dec
cmpsb
xor
mov
cmp
or
mov
out
fcompl
dec
ds
dec
sub
mov
sub
xchg
inc
cmc
jnp
imul
xchg
stos
mov
hlt
xor
into
imul
gs
fnstcw
mov
aad
addl
push
loop
arpl
jle
andl
sbb
addb
cmpsb
hlt
jae
or
dec
sbb
das
adc
loopne
imul
outsb
jb
add
orb
xchg
xor
xor
add
xor
mov
out
dec
xchg
mov
cmp
xor
iret
jo
rolb
in
jbe
pop
loop
imul
outsb
xchg
daa
jnp
jbe
int
icebp
sti
loop
insl
mov
pop
das
sbb
pop
jge
orb
jmp
push
jae
lea
mov
sub
test
add
clc
xchg
add
push
bound
ret
push
sub
icebp
test
data16
cmp
roll
repz
scas
in
inc
movsl
lret
cmp
add
shrl
fcoml
test
push
pop
aad
cmp
mov
cmp
jecxz
jl
mov
cmp
rolb
jle
inc
mov
mov
or
add
imul
mov
mov
mov
lret
inc
mov
xchg
shlb
inc
fnstsw
and
dec
push
xorl
jno
jns
jb
negb
js
jmp
pushf
and
dec
mov
adc
fnstsw
shlb
enter
jns
cmp
mov
or
sub
add
sbb
dec
sub
sarb
cmp
inc
rol
call
jnp
outsl
addb
stc
xchg
jecxz
xor
xchg
std
push
jo
pop
mov
bound
stos
loopne
or
stos
cs
xchg
jmp
dec
xchg
add
cmp
inc
fsubrs
sahf
std
rcr
mov
ljmp
cmp
lds
and
pushf
push
push
call
or
mov
fwait
out
stos
loopne
daa
orl
mov
loopne
adc
pop
adc
out
lods
sbb
mov
add
fsubrl
mov
mov
push
dec
mov
ljmp
inc
and
push
ja
inc
push
push
scas
lret
cmpsl
mov
jnp
imul
stos
dec
pusha
inc
fcompl
lods
pop
popa
adc
push
jbe
and
loopne
cld
hlt
int3
xor
gs
xor
jge
or
cltd
xchg
push
cmp
inc
jl
ret
shrb
test
mov
popa
dec
jge
sub
fcoms
jge
xor
stos
or
push
dec
jmp
push
mov
das
xchg
dec
in
xchg
or
pop
sahf
out
inc
outsb
push
iret
insl
adc
dec
sahf
insl
pop
inc
xor
add
adc
jecxz
imul
and
ljmp
add
addr16
pop
xchg
dec
jnp
nop
push
mov
stos
popf
pop
and
sub
jne
mov
fildl
or
jecxz
pusha
or
inc
cmp
or
pop
jbe
cs
fidivrl
pushf
rorb
cld
fs
add
pop
and
adc
inc
pop
insb
aaa
xor
nop
push
les
ja
xchg
movsb
arpl
fldl
out
fists
add
push
outsl
adc
mov
mov
adc
xor
hlt
dec
shl
fcoml
push
stos
iret
add
js
sub
mov
mov
mov
inc
pop
xlat
xor
frstor
sarb
pop
and
movsl
cmc
add
and
subl
scas
inc
inc
mov
sar
xchg
add
mov
push
jnp
add
sub
outsb
mov
iret
test
ret
sti
xorl
fstpl
dec
pop
jne
mov
jae
mov
xlat
testl
out
lcall
push
xchg
mov
push
mov
daa
jo
jecxz
jge
ret
ja
inc
fdivl
mov
fnstsw
int
push
sti
out
xor
inc
shr
push
mov
imul
sbb
push
push
mov
ljmp
test
scas
jo
ficompl
arpl
int3
mov
repz
sbb
lret
int3
lock
iret
lahf
pop
cmp
in
popf
push
mov
das
pusha
sub
mov
filds
sbb
imul
xchg
out
movsl
xchg
out
test
into
out
test
cmp
pop
pop
push
fimuls
cmp
or
std
notl
call
jae
movsl
out
sub
insb
es
and
insl
loope
jge
lahf
push
mov
pop
rcrl
ljmp
loopne
inc
shr
stos
mov
lock
sbb
test
xchg
movsb
xchg
stc
push
popa
sbb
enter
add
mov
repz
cmp
jecxz
sarb
lret
dec
push
testb
fwait
cmc
cmc
arpl
mov
aad
lea
sub
add
inc
jmp
or
xlat
rorl
sahf
orl
gs
mov
fwait
decb
mov
jno
je
pop
or
cmp
or
jg
repnz
dec
dec
sub
xchg
lods
xor
xchg
daa
orl
jl
mov
shrl
subb
pop
dec
mov
lret
cltd
inc
mov
cmpsl
cmp
dec
movsb
lahf
lret
jb
pop
jns
push
jmp
add
jl
stos
or
shrl
fadds
cmp
mov
imul
cmp
pushl
adc
cld
pop
inc
cwtl
xchg
sub
mov
inc
sub
fcoms
push
cltd
test
dec
jmp
fildll
pop
aad
std
cltd
fadds
mov
sbb
pop
popf
fdivrl
mov
nop
pop
cmp
cmpsl
adc
loope
mov
sub
and
jno
cmp
push
repz
and
in
push
jmp
aad
mov
lods
popf
sbb
add
mov
mov
jle
pop
rorb
stc
adc
and
ljmp
cmpsl
sub
sti
or
cld
push
mov
jge
je
shrl
pop
shlb
push
push
xor
outsb
or
mov
mov
in
subl
das
test
shlb
rep
jae
imul
scas
xchg
imul
fnstsw
xchg
stos
mov
nop
jge
popa
out
stos
pop
push
jae
outsl
cmc
pushf
leave
mov
adc
pop
sub
mull
jae
pop
jg
jl
fcoml
cs
adc
mov
cwtl
sbb
sbb
and
jecxz
cld
pop
and
dec
stos
mov
adc
and
gs
dec
call
lea
lods
int
xor
push
xchg
xlat
adc
sti
data16
mov
fdivrs
rcrl
out
xor
mov
ds
movups
popa
cmp
or
insb
stos
sbb
clc
ljmp
loopne
or
cltd
cmp
add
sub
sub
mov
and
scas
inc
hlt
xchg
mov
pop
sbbl
arpl
fidivrl
out
enter
mov
out
ja
gs
or
dec
std
adc
xchg
fnstenv
mov
hlt
int
mov
mov
dec
add
cmp
aad
fs
pop
gs
popa
icebp
arpl
ret
and
push
jae
js
xchg
jl
insb
push
jmp
rcrl
rol
loop
inc
imul
int3
iret
jg
cmp
insl
enter
xchg
xchg
icebp
cmc
insb
int3
xlat
pop
cwtl
lret
jae
xchg
and
cwtl
fistpl
add
push
push
push
or
jle
stos
addr16
test
leave
sub
inc
clc
xor
lock
add
mov
xchg
out
in
aad
mov
ret
fnstsw
test
adc
loope
adc
sbb
in
jge
push
inc
push
aas
sbb
jecxz
jge
stos
cmc
aas
ds
push
movsl
outsb
jne
push
sbbb
and
sbb
inc
mov
inc
and
enter
cmp
mov
call
ds
lret
add
sbb
pusha
int
mov
sbb
inc
add
pop
dec
mov
nop
push
dec
dec
push
pop
xchg
imul
fcmovne
ss
sbb
mov
cmpsl
shlb
sbb
je
popa
js
jbe
mov
or
out
xchg
sbb
or
in
repnz
lea
test
pop
insl
int3
mov
fldl
out
pop
lods
push
imul
repnz
inc
popa
adc
popf
cmc
aad
out
xor
pop
mov
inc
add
pop
mul
sarb
or
sahf
mov
push
sbb
fsubl
in
gs
ljmp
push
jmp
jge
mov
fwait
std
jns
add
pop
xchg
add
inc
push
cli
int3
jmp
into
pop
loop
daa
cs
mov
iret
inc
mov
dec
addb
mov
clc
dec
xor
pop
ljmp
jmp
pop
inc
out
add
movsl
inc
mov
scas
dec
gs
rcrb
sti
pop
mov
inc
mov
add
push
add
call
jo
iret
inc
stos
cmp
lret
dec
add
pop
je
inc
sbb
adc
xor
mov
daa
movsb
dec
iret
lock
mov
pop
sub
xor
dec
add
cltd
pop
push
divb
cmp
xor
adc
popa
add
popa
sub
and
mov
mov
or
notb
stc
and
stos
jge
cmpsl
and
inc
or
jmp
mov
rcrb
xor
jbe
call
pop
and
js
das
daa
pop
cmp
out
les
ret
lods
jae
lcall
pop
into
fdivrl
adc
mov
cmc
sbbb
mov
xor
mov
fmull
enter
jle
inc
bound
shlb
in
lock
mov
cmpsb
push
mov
pop
or
jne
and
je
add
incb
imul
je
adc
int3
mov
push
xor
daa
sti
mov
je
mov
fimuls
call
ds
rorb
mov
insl
pushf
int
es
xchg
xorl
test
cmp
push
scas
sub
inc
push
mov
fimull
push
hlt
cmp
lds
fcmovnu
sbb
ret
outsl
shr
or
out
cmp
lahf
adc
mov
adc
jne
mov
into
mov
cltd
sbb
ret
xor
cmp
add
jns
xchg
shlb
push
jns
jle
gs
loope
sub
icebp
shll
push
xchg
push
or
and
mov
addl
dec
pop
out
lret
sbb
jbe
icebp
cmp
add
sti
out
sbb
sbb
mov
loop
pop
add
xor
fistpl
push
arpl
xor
repnz
push
mov
in
adc
stos
icebp
dec
sub
jle
insl
mov
add
mov
push
mov
in
sbb
mov
dec
mov
ljmp
testl
jae
test
mov
jge
mov
xchg
clc
out
lock
lods
cmc
and
cmp
cmc
cmc
or
lret
mov
add
sbb
cmp
enter
dec
pusha
hlt
shll
add
inc
fcoms
ret
movsl
or
lahf
mov
dec
lods
cmp
in
mov
mov
fidivrl
cmp
adc
xor
or
out
lcall
sbb
cwtl
out
and
or
pop
jns
shrl
arpl
xchg
out
sbb
insb
scas
lods
es
out
jg
out
ds
mov
shr
dec
pop
call
smsw
inc
mov
add
or
sub
shrb
pop
push
test
sarl
gs
clc
and
cmp
or
imul
or
sti
lock
mov
aam
mov
or
lea
add
in
jle
pop
rcll
sbb
jecxz
ficomps
fimuls
ss
xor
adc
or
adc
mov
nop
mov
adc
and
cmpsl
jmp
loope
pop
ljmp
add
leave
xor
enter
mov
adc
push
mov
mov
mov
pushf
jp
rclb
lods
push
jge
shll
xlat
dec
sub
add
jp
sbb
xchg
jle
inc
icebp
or
pushf
and
popa
sbbb
in
and
add
cwtl
imul
pop
adc
arpl
jp
push
xchg
jecxz
pop
jl
sbb
or
mov
lret
pop
lods
mov
xor
pop
fmuls
cmpb
xor
add
add
orb
push
insl
push
pop
cs
rcrb
aaa
mov
pop
xchg
jnp
test
daa
call
outsb
cli
mov
data16
lcall
pop
add
ljmp
vandnpd
stc
arpl
mov
adc
jb
mov
inc
sub
lods
and
cmpsb
and
jle,pt
cld
imul
pushf
cmp
sbb
jmp
popf
es
sub
mov
mov
lcall
and
aaa
fcomps
out
jnp
inc
cmc
cld
fistpll
arpl
cmp
scas
testb
sbb
push
test
pop
mov
dec
popf
mov
or
scas
fistpll
adc
ljmp
maxps
loope
sahf
push
adc
and
sti
xlat
jmp
stc
xlat
in
xor
addl
jp
dec
lcall
dec
dec
mov
dec
jl
pushf
sub
fisttpl
rcrl
in
inc
sub
cmp
loop
movsl
arpl
js
mov
jne
mov
popf
popa
stc
mov
sbb
jl
mov
js
mov
pop
lret
adc
pushf
push
in
pop
cmp
xor
adc
xchg
push
mov
adc
inc
push
push
adc
jo
mov
inc
and
sbb
pop
inc
stos
and
adc
mov
pop
pusha
and
std
adc
inc
cmc
pusha
xchg
xchg
xchg
lods
and
adcl
sysexit
insb
fbld
add
cmc
mov
xor
lahf
outsl
mov
adc
add
cwtl
sbb
sti
add
ret
or
inc
in
popa
lret
sub
outsl
sub
shlb
push
push
cmp
sti
or
ret
mov
mov
filds
loopne
add
imul
pop
pop
pop
lret
inc
jo
repnz
incl
dec
push
out
xchg
sarl
and
shrb
jmp
mov
xchg
into
test
imul
mov
adc
pop
es
jae
inc
mov
aad
pop
cmc
fidivrl
ret
dec
or
repnz
or
popa
add
inc
jge
addr16
int
pop
outsl
mov
mov
test
pop
xor
out
xor
xchg
add
xor
fdiv
cmp
stos
iret
add
sbb
mov
inc
add
adc
push
rolb
xchg
sub
xchg
jg
sub
call
repz
ret
call
pop
add
pop
sbb
lds
mov
jnp
cmpsb
inc
aam
jmp
cld
push
outsl
iret
bnd
imul
imul
xchg
rcl
add
sub
arpl
jmp
jo
xchg
push
lea
add
arpl
in
push
clc
scas
xor
enter
out
dec
fists
fabs
or
in
mov
movb
add
jecxz
pop
add
fidivrl
inc
or
divl
sbb
jp
sbb
movsl
mov
fbstp
fs
xchg
cwtl
dec
xor
dec
add
pop
mov
mov
rcrb
fistpll
pushf
xchg
xor
fld1
mov
int
lea
push
cld
test
adc
xchg
add
dec
and
mov
add
mov
mov
dec
aad
mov
push
sbb
mov
gs
sbb
cmp
movsb
inc
gs
cmp
mov
cs
pop
lods
jno
pop
lcall
sbb
adc
dec
imul
push
adc
adc
call
pop
sub
jo
lods
outsl
xchg
jge
adc
xchg
addr16
jecxz
out
dec
inc
fmul
or
mov
sbb
sbb
push
icebp
fucomip
insb
iret
mov
cmp
jns
xor
sbb
pop
movsb
icebp
mov
xchg
lds
out
lods
in
inc
ret
fsub
xchg
xor
jb
scas
loope
cmp
popf
aad
scas
sahf
or
jbe
aad
jmp
bound
mov
jmp
pop
adc
movsb
test
mov
shr
inc
cwtl
ficomps
in
mov
sbb
fildll
pop
stos
daa
push
dec
or
add
push
or
dec
mov
sub
test
or
fisubrl
mov
dec
shlb
jp
inc
cmpsl
lods
bound
aas
mov
add
scas
sub
scas
mov
and
insl
xchg
add
inc
fcmovnu
xchg
aaa
jns
rorb
out
lea
or
xchg
push
inc
and
pushl
cmp
jae
jo
lret
fsts
rclb
inc
adc
cmpsb
ja
stos
ja
outsl
pop
push
xchg
push
sti
cltd
jbe
dec
imul
cmp
pop
mov
xchg
sub
xor
push
bound
xchg
mov
ljmp
jns
push
push
out
std
out
das
shll
out
cmc
out
outsb
dec
lahf
insl
das
sar
dec
ret
rorb
test
nop
xchg
js
pushf
xchg
out
lret
insl
int3
adc
sbb
add
sub
jnp
test
sbb
pop
lods
mov
pop
fldt
mov
pushf
les
fsubrp
inc
cli
mov
push
push
shlb
adc
dec
xchg
imul
out
pop
mov
lahf
adc
inc
mov
pop
jo
rorb
sub
mov
xor
pop
inc
loopne
pop
xchg
sbb
push
cmc
inc
test
sub
mov
cmp
push
clc
repnz
cli
mov
scas
pop
or
push
jl
pop
out
mov
adc
mov
adc
jns
xor
sti
cmp
das
adc
xor
sahf
cmp
dec
sbb
cmpsb
out
jb
ja
mov
stos
mov
xor
pop
aad
popf
stos
lret
xor
jo
leave
leave
bound
xor
sti
sub
pop
xor
dec
rcl
aam
outsl
mov
jle
lahf
pop
mov
push
push
aaa
rol
inc
sbb
addr16
adc
sarb
push
push
icebp
es
and
rorl
leave
or
jae
mov
add
jo
jmp
enter
pop
test
pushf
cmp
pop
cmpsb
sub
addr16
jl
jo
stos
mov
pop
outsb
bound
icebp
loop
lods
loop
imul
ja
sbb
jnp
pusha
inc
adc
adc
pop
mov
shl
movsl
movsb
pop
dec
xlat
xchg
sub
sub
std
outsl
es
stos
fildll
sub
loope
xchg
adcb
call
in
andb
xchg
push
sahf
mov
sbb
adc
push
push
enter
cs
fwait
jp
mov
subb
or
fdivrl
mov
sub
sub
jae
in
mov
loope
mov
mov
fistpl
sahf
add
mov
stc
sub
stos
jo
bndmov
dec
insl
bnd
mov
aam
int
push
insl
std
mov
inc
mov
cmp
jp
mov
sub
lods
daa
mov
popf
testl
xchg
int
aad
ds
popf
stos
xlat
add
addr16
daa
scas
jo
int3
lret
cmc
jbe
popa
jb
sbb
mov
pop
add
pop
jmp
out
xor
cmp
cmp
and
and
add
or
cmp
jmp
mulb
adc
push
arpl
or
add
dec
lret
xchg
cmp
push
xor
cmc
dec
lret
xchg
in
arpl
xchg
ljmp
into
jge
cmp
stc
jmp
outsl
push
lret
fwait
or
cmp
test
pop
jnp
ja
and
pop
inc
or
push
lock
in
cmp
popf
add
cwtl
push
mulb
mov
push
add
jp
xchg
adc
cmp
sub
pop
dec
int3
test
movsb
cs
loop
cs
mov
lret
lods
popa
scas
out
fcmove
add
cmp
outsl
push
mov
mov
loope
dec
dec
shll
or
sub
leave
mov
cmp
cld
and
dec
sub
repz
mov
mov
aaa
out
inc
loop
xor
or
dec
sahf
jo
xor
into
cmp
adc
mov
pop
out
mov
push
add
mov
add
cli
pop
sbb
int
cmp
jp
lods
adc
pop
pop
fildll
pop
enter
les
movsl
pop
mov
shlb
xchg
popf
pusha
inc
loop
inc
jb
push
push
or
test
into
aad
sbb
adc
rcr
push
jbe
push
xor
movsb
fucomp
loop
adc
dec
push
push
ffreep
int3
frstor
pop
xchg
ret
cmp
andl
mov
jg
xchg
lret
cli
adc
sbb
mov
cmpsl
xchg
movsl
and
sub
and
pushf
leave
sarb
and
or
lret
xor
shl
out
jp
xchg
and
out
xchg
dec
inc
jne
xchg
xchg
jns
cmpsb
popf
sti
adc
xorl
push
push
pusha
pop
sti
push
push
sti
cmpsl
shrb
jge
inc
push
xor
pop
xchg
addr16
pop
stos
xlat
mov
push
mov
and
dec
inc
outsb
scas
pop
sbb
xor
psraw
subl
gs
push
hlt
jp
test
scas
mov
jg
mov
fmul
fsubrs
scas
mov
in
sbb
pop
and
loop
dec
jmp
aad
pop
in
mov
movsl
mov
mov
push
rcr
or
mov
in
ret
push
dec
add
push
mov
sub
scas
inc
jbe
in
sahf
lods
in
repnz
jmp
in
jo
sbb
rolw
dec
mov
dec
and
gs
push
add
pop
popa
test
ss
pop
test
movsb
out
sbb
jo
cmp
sbb
mov
pop
dec
test
icebp
push
stos
pop
xor
icebp
lods
fildl
lea
loop
dec
xchg
push
loop
aaa
sbb
in
roll
loope
xchg
imul
push
xchg
test
aam
subb
dec
sbb
inc
add
stc
or
out
xchg
sub
movsl
pop
repnz
mull
dec
dec
xchg
fcompl
push
xchg
and
in
cmc
push
rcrl
adc
imul
jle
mov
pop
mov
rolb
mov
push
insb
adc
mov
sahf
mov
cmp
notl
fisttpll
cmpsb
dec
leave
lahf
js
pop
movsl
les
scas
cld
mov
imul
sbb
jno
jnp
in
ss
add
and
lret
in
popl
pop
ljmp
push
test
adc
inc
adc
inc
mov
cmpsb
aas
clc
lahf
or
bound
adc
inc
or
fildl
jl
jae
add
nop
jmp
mov
sub
xchg
fbld
loopne
dec
jg
into
cmp
or
imul
sbb
fimuls
sub
sbb
cld
popa
pop
test
stc
fdivrs
xor
int3
call
repz
and
int
lods
xlat
inc
inc
mov
mov
inc
aaa
xor
sbb
fcoms
mov
jl
inc
push
in
movsl
push
mov
popf
jmp
das
ljmp
pop
or
movsb
fwait
sbb
lahf
lods
xchg
test
push
add
in
mov
xor
add
xor
insl
bound
adc
mov
std
mov
fcom
and
in
enter
dec
sub
pop
cmpsl
cli
dec
ja
clc
fistpll
iret
jae
push
popa
or
sub
xor
ret
int3
scas
or
mov
cmc
dec
pop
push
push
xor
je
jne
sbb
pusha
ljmp
jae
cltd
or
das
add
sbb
jecxz
and
call
das
and
pop
aas
add
lret
scas
sbb
inc
in
xchg
jmp
xchg
adc
popw
mov
jae
adc
fisubs
shlb
test
push
std
mov
push
jmp
mov
sbb
pop
ljmp
pop
divb
jl
xor
cwtl
push
inc
mov
xor
cltd
or
stos
hlt
test
pop
pop
add
std
xchg
jmp
movsb
sub
fsts
and
add
mov
mov
cs
sbb
scas
and
testl
mov
pop
dec
xchg
mov
aad
dec
clc
mov
loopne
cmp
add
fsubrl
mov
mov
jne
xor
into
mov
adc
rcll
or
cmp
sbb
sahf
mov
pop
call
xchg
in
out
push
imul
pop
daa
xor
pop
gs
sbb
pop
cltd
shlb
jmp
test
repnz
mov
repz
xchg
mov
iret
fistpl
scas
dec
cmpl
das
jmp
pop
les
jg,pn
call
jmp
pushl
jae
fs
jl
mov
cld
ja
xchg
add
fisttps
ss
outsb
loop
xchg
cld
dec
mov
hlt
lea
ja
mov
xchg
aam
lods
das
jp
cmp
arpl
mov
add
je
pop
subb
xchg
cmp
ret
pop
scas
xchg
test
xor
xlat
xrelease
sbb
jno
lea
adc
sbb
add
fiaddl
stos
or
fidivl
jmp
mov
cli
pop
sbb
dec
sbb
push
jno
sbb
adc
mov
or
shl
stos
jo
nop
addr16
lods
insl
das
push
inc
and
cmc
ret
in
in
ja
mov
jns
sub
add
cmp
add
int
adc
push
sahf
xchg
or
rcrb
or
lods
adc
jmp
or
cs
push
xor
adc
cmpsl
sbb
movl
push
loope
add
mov
jb
sub
scas
inc
test
fdivr
dec
add
mov
loope
aas
mov
icebp
mov
cmc
out
mov
pop
add
xor
mull
sbb
dec
push
xlat
pop
and
scas
xor
adc
ss
ss
in
pusha
shl
adc
sbb
je
es
fildl
nop
arpl
clc
test
dec
push
inc
dec
fidivrl
call
out
xchg
movl
jl
cwtl
or
cmpsl
jp
ljmp
pop
cmpsl
adc
xchg
scas
fstps
outsb
pop
fistps
enter
xlat
ror
adc
dec
sub
fwait
dec
sbb
rorl
in
mov
fwait
scas
addr16
dec
jg
test
mov
add
pop
and
fsubr
mov
xchg
fcomip
int3
scas
cmp
incl
testl
pop
lea
inc
clc
sbb
popa
mov
sub
fstl
repnz
negl
cmpsb
dec
push
cld
and
je
shlb
fildll
dec
movsl
jnp
lock
pop
inc
lock
call
mov
sub
sbb
decl
xchg
mov
scas
cmp
xchg
adc
inc
int3
pop
adc
inc
imul
pop
ljmp
out
jle
retw
sahf
mov
lea
cwtl
imul
adc
mov
in
push
iret
inc
in
cmp
mov
fwait
mov
dec
push
in
sbb
out
imul
dec
fiaddl
sub
aad
fdivs
iret
iret
fs
mov
mov
cmpsl
push
in
movsb
dec
pusha
pop
sub
ss
and
pop
mov
cmpsb
lods
shrb
dec
add
sub
lahf
dec
sbb
xor
xchg
sub
add
insl
pushf
inc
mov
rolb
leave
push
call
pmaxub
aam
mov
repz
mov
sbb
sar
cs
lods
xor
enter
nop
loope
movsb
shlb
push
push
xlat
or
in
cmpb
orl
mov
pop
lds
jmp
mov
in
lods
jno
jno
mov
repz
cmp
mov
movsl
cmp
loopne
sbb
mov
xchg
push
sub
popf
pop
and
orb
dec
outsb
fiadds
pop
xchg
lahf
add
jo
inc
test
loope
mov
add
inc
pop
mov
movsb
sbb
mov
sub
cmp
fcomp
dec
popf
lock
aam
stc
pushf
sub
and
fcmove
mov
es
mov
lahf
ds
fcmovnb
dec
mov
imul
clc
dec
sub
enter
sbb
fs
aam
test
incl
push
fsubrs
lcall
loopne
test
dec
xchg
mov
sti
sub
xor
je
in
popf
mov
lds
sbb
sub
mov
lahf
jmp
icebp
movsl
repnz
sbb
vpsubsb
bound
jmp
sub
daa
loop
adc
cmp
cmpsb
iret
std
jge
mov
cwtl
jg
xchg
cmpsl
xchg
dec
add
push
mov
lret
push
mov
inc
cld
out
stc
mov
lret
int3
decb
jb
je
jno
bound
push
movsl
and
or
pop
dec
cs
cmp
cli
jne
in
xor
mov
add
test
arpl
inc
xor
daa
lcall
pop
orb
stc
jl
xchg
mov
fadds
pop
sbb
jmp
push
mov
adc
lea
pop
pfnacc
push
lds
lcall
mov
ret
fwait
call
sarl
aaa
in
adc
jecxz
mov
push
jns
cwtl
stos
sbb
ret
icebp
in
sbb
iret
loope
push
js
in
or
mov
fdivrl
gs
fsubr
xchg
imulb
rorb
daa
andb
jg
jae
pop
js
jle
in
in
mov
xchg
mov
pop
ljmp
push
loope
pop
xchg
sbb
sbb
in
mov
push
clc
imul
in
shlb
xor
inc
lods
mov
pop
sarl
push
adc
js
jmp
push
xchg
pop
jb
fimuls
jp
inc
sbb
adc
mov
in
dec
jecxz
sbb
ss
leave
xchg
lahf
xchg
or
push
jae
test
jge
add
repnz
iret
out
xchg
shrb
inc
call
sbb
outsb
pop
add
fdivr
cli
and
add
and
addl
rorl
jbe
lahf
lret
call
in
mov
xchg
andb
mov
ret
cmpl
js
lea
mov
jge
mov
repnz
mov
mov
out
loope
jle
cld
outsb
xchg
je
push
xchg
fsubrs
push
fnsave
mov
xor
push
repz
fdivl
mov
jge
stos
repnz
pop
inc
je
stos
jno
adc
lods
pop
bound
xchg
and
and
sbb
sbb
enter
mov
rorl
sysexit
add
test
out
popa
loope
icebp
mov
das
fs
inc
pushf
cmp
adc
pop
mov
stos
jae
insb
pop
cmp
lret
add
add
or
daa
lcall
jecxz
inc
hlt
rol
mov
or
insb
push
les
mov
adc
jmp
add
xor
or
clc
cmpsl
lret
ss
dec
sbb
ja
in
and
out
xchg
pushf
inc
sbb
insl
lock
pop
shll
xchg
push
pushl
add
into
xchg
sbb
mov
push
inc
mov
aaa
movsb
jge
rolb
jnp
aas
loopne
dec
cmp
loopne
and
push
mov
test
inc
mov
or
lock
mov
addr16
xor
adc
adc
insb
push
dec
inc
push
or
add
imul
dec
pop
lods
rcrb
adc
cmp
jecxz
popf
pop
pushf
sub
push
clc
push
or
mov
sti
dec
in
inc
fnstcw
mov
dec
xlat
mov
aad
outsb
add
pop
jae
notl
hlt
jb
pop
roll
mov
push
cmp
mov
in
fbstp
pop
fwait
mov
inc
cltd
cmpsl
and
lds
leave
aam
rcrb
in
push
popa
or
mov
push
jmp
cmp
or
loopne
jge
jo
adc
popf
comiss
stos
loope
and
xor
adc
jno
outsb
add
movsl
dec
or
fidivrl
sbb
vpmacsww
enter
stc
les
xorb
push
xchg
ja
call
and
or
mov
xchg
imul
jno
mov
mov
xor
outsl
pop
sbb
aad
cmpl
les
adc
iret
scas
cmpl
mov
adc
clc
arpl
add
fwait
mov
in
cli
aaa
push
and
xchg
dec
clc
lcall
and
sar
dec
fdivs
mov
lods
ss
hlt
lcall
ljmp
and
mov
sbb
das
xor
cmp
imul
mov
pop
lcall
inc
aam
push
jnp
cli
sbb
pop
mov
mov
fldcw
mov
std
out
push
mov
mov
in
push
cmc
pop
faddp
xor
lahf
mov
shl
push
push
jb
or
adc
sub
testb
sbb
mov
adc
add
int
push
inc
aas
test
fidivl
filds
movsb
adc
push
xor
out
cmp
leave
lret
mov
ds
ret
mov
jg
cmpl
rclb
andl
push
cltd
aas
jge
int
mov
or
daa
jnp
cmp
add
push
adc
stos
xchg
xorl
mov
lcall
fstps
cmp
or
push
les
in
inc
or
jl
xchg
push
or
jmp
rcll
adcl
dec
push
mov
xchg
adc
mov
add
in
mov
fstpl
cmp
sarb
clc
rcll
out
jmp
inc
les
out
inc
jge
jl
and
mov
xor
aad
mov
push
mov
test
push
mov
repz
outsb
movsl
test
cmc
mov
push
add
arpl
xlat
jl
mov
dec
imul
jne
push
xchg
lcall
and
aad
pop
sbb
and
scas
or
push
imul
jmp
mov
out
in
pop
pushf
leave
mov
and
mov
fadds
es
mov
sbb
mov
adc
inc
or
enter
int3
sbb
adc
cs
mov
push
aas
ljmp
inc
mov
mov
pop
jns
push
or
ds
mov
les
insb
iret
sbb
mov
cmp
lods
test
jp
sbb
jns
dec
inc
mov
mov
mov
lea
mov
int
xchg
adc
aas
pop
ds
push
fwait
pop
mov
lea
adc
cmpsl
in
fistps
mov
subl
sub
cmpsb
ret
into
js
outsb
dec
out
pop
and
add
mov
xlat
in
cmpsb
inc
movl
xchg
mov
mov
inc
dec
push
sahf
shrb
jmp
fidivl
pop
js
icebp
nop
in
enter
bound
das
fiadds
push
or
jp
sbb
lret
mov
out
mov
pop
ror
out
add
sbb
push
sbb
and
xchg
pusha
lds
lahf
and
push
clc
and
sarb
mov
cmpsl
and
lds
int3
test
lds
pushf
and
mov
mov
sbb
out
lods
mov
loope
jecxz
xor
adcb
mov
mov
add
fstl
mov
pop
xchg
mov
adc
test
and
push
ja
fnstsw
test
mul
rorb
stos
xor
cmc
cmp
jecxz
or
pop
pop
ret
in
pop
shrl
sub
jl
cmp
pop
sbb
imul
cwtl
scas
and
push
data16
aad
cmpsl
inc
pop
bound
test
push
xor
out
or
adc
out
sbb
inc
ret
mov
sbb
cmp
or
jo
cmp
mov
imul
inc
xchg
jg
fs
dec
mov
mov
or
into
out
mov
adc
ljmp
loope
imul
sub
sbb
fidivrs
dec
ljmp
fmull
dec
mov
mov
or
inc
pop
std
sbb
push
mov
mov
mov
rcl
aad
fidivrl
dec
push
scas
xchg
cwtl
cltd
repz
pop
fsubrs
imul
and
pop
ret
mov
xor
lds
mov
loop
cmpsl
mov
stc
sbb
xor
out
aaa
sbb
mov
repz
lret
xchg
outsb
in
cmpsb
popf
xor
repnz
jecxz
out
sbb
xchg
add
fsubs
daa
and
out
sbb
cmc
shll
out
pop
xchg
mov
in
xor
mov
push
cmc
jns
into
sub
mov
jbe
sbb
mov
rcr
mov
mov
jno
addr16
ljmp
xor
sbb
inc
jb
int3
xor
push
jne
jno
iret
imul
arpl
lcall
out
in
jo
and
ds
or
test
fnstcw
movsl
and
mov
ja
or
aam
scas
lds
mov
ret
ss
jmp
sahf
dec
cltd
bound
mov
aaa
call
outsl
scas
outsl
and
out
or
sub
jno
scas
std
repz
sbb
mov
fwait
sbb
push
dec
add
rcr
cmp
mov
jno
hlt
call
xchg
jecxz
jle
and
pop
pop
ds
xchg
inc
cs
lds
pop
sbb
xchg
lahf
dec
test
sbb
inc
enter
dec
je
jmp
inc
int3
xchg
push
cld
pusha
int3
adc
shr
xchg
inc
sti
jae
jbe
xlat
inc
mov
scas
inc
or
push
xchg
jg
or
int3
inc
mov
lcall
jo
andl
js
shll
push
icebp
fsubl
mov
inc
mov
pop
mov
icebp
cmp
inc
in
rol
lahf
movsl
mov
rorl
in
lret
nop
orb
imulb
jnp
sub
cmp
aaa
mov
jmp
cmpsl
mov
push
push
xchg
adc
pop
insb
hlt
jl
cmp
and
cmp
add
or
insb
sub
push
les
add
stos
add
cmp
sti
int
aaa
lock
lods
add
insl
stos
rorb
lret
incl
mov
or
add
ss
jge
std
jge
inc
stos
jnp
imull
jb
loop
fildl
aas
or
out
cli
inc
push
mov
cmc
stc
aam
mov
ds
and
cmc
sub
or
es
and
mov
and
sub
sbb
xchg
xor
add
adc
dec
jae
mov
mov
out
cltd
fildl
or
or
or
bound
mov
pushf
pop
xor
mov
mov
jg
push
adc
sub
jnp
popf
test
xor
jmp
xchg
pop
out
cmpsb
add
adc
add
sub
jmp
pop
mov
mov
fwait
or
or
add
jmp
adc
inc
leave
lahf
cmp
cmp
dec
das
lds
jge
je
jmp
in
in
sbb
jmp
insb
jns
mov
add
adc
mov
test
out
cs
sbb
jb
adc
into
xchg
adc
in
sbbb
sub
jg
or
out
pop
cwtl
ret
lock
ror
sbb
push
sub
fdivs
push
dec
mov
test
fisubs
jge
imul
jp
pop
fbld
std
inc
mov
lds
scas
sub
or
out
cmp
hlt
inc
add
xor
jle,pn
jbe
xor
sub
push
sub
mov
mov
add
mov
ja
addr16
sti
cmp
test
sub
or
outsl
sub
sub
jno
cmp
push
out
addr16
xor
pop
out
xchg
test
data16
sbb
sub
or
cwtl
ds
jmp
xchg
xchg
fnstcw
sbb
pop
xchg
clc
arpl
sbb
jo
xchg
adc
mov
xorl
mov
sbb
jmp
pop
cltd
jecxz
test
push
xchg
mov
jnp
mov
sbb
test
push
out
or
and
sbb
dec
and
mov
outsb
lret
pop
in
mov
sbb
xlat
inc
inc
xor
sub
mov
pop
inc
jg
adc
shrb
ror
pop
dec
jbe
xchg
push
or
imul
subl
xor
leave
hlt
add
dec
sbb
mov
imul
or
and
mov
shlb
pop
mov
lcall
nop
in
ret
add
jle
pop
test
cmpsb
mov
cmpl
xchg
rclb
fstpt
mov
ljmp
sub
pop
cmpsb
jmp
jp
dec
mov
pop
mov
sub
xchg
sarb
mov
cmpsl
adc
mov
and
pop
fsts
or
and
icebp
and
lock
ss
sbb
sub
xchg
push
add
rorl
lret
rcrb
dec
fldl
cmc
pusha
adc
gs
movsl
fbld
stos
fldcw
jbe
push
mov
out
mov
fs
push
lods
mov
fucomp
xchg
add
in
dec
cmpsl
or
fimuls
xor
pop
into
cmpsl
mov
cmp
mov
andl
or
sbb
loope
shr
std
jge
cwtl
sbb
ficompl
mov
mov
pop
adc
jp
push
movsb
push
sbb
movsl
lcall
jnp
xchg
jge
lahf
mov
shrl
lea
inc
cmp
jg
jo
cmp
dec
movsb
or
dec
loope
imul
jmp
std
adc
sarb
ss
lock
lock
or
and
add
pop
push
ltr
lds
inc
xor
jae
aam
iret
clc
lcall
js
in
xchg
push
xchg
sub
stos
sbb
pop
out
sub
in
add
shll
mov
inc
inc
int3
pop
sbb
jl
and
mov
mov
jno
push
or
xorb
mov
lea
in
scas
repnz
jle
cld
xor
xor
stc
aaa
pop
mov
test
and
push
and
out
ret
fldenv
inc
stc
loop
jo
lods
push
call
loope
into
stos
mov
aad
mov
data16
dec
rcrb
jecxz
sub
je
jb
enter
andb
fmull
iret
push
adc
dec
xor
je
jp
xchg
divl
dec
fistpl
adc
data16
pop
sub
mov
mov
sbb
mov
repnz
addr16
push
mov
jns
dec
sbb
sub
or
xchg
inc
push
int
mov
or
push
and
mov
xchg
mov
aad
dec
js
roll
loopne
mov
insb
or
cmp
push
xlat
pop
xchg
mov
daa
add
daa
mov
cmp
popf
loope
push
jmp
xchg
add
cmp
or
sbb
fidivrs
test
fbld
mov
mov
stos
xor
mov
xor
mov
cmp
stos
daa
inc
and
lea
fucomip
mov
lock
jp
push
cmp
sub
mov
pushf
test
and
jo
xor
dec
and
fs
jbe
filds
pop
add
rcll
mov
pop
push
mov
mov
movb
sbb
out
std
enter
or
les
int3
sahf
xor
push
fbstp
lods
mov
stos
fs
xchg
push
pop
jg
jb
mov
addr16
pop
dec
adc
jle
les
mov
shlb
fcoms
ljmp
mov
ficompl
jns
sub
sub
xlat
mov
pop
mov
mov
adc
lods
mov
repnz
ror
lea
sbb
xchg
mov
jl
xor
add
fdivl
xor
not
repz
loope
push
mul
test
lock
cmp
jl
test
out
sbb
push
xchg
lods
xchg
mov
push
jg
xor
in
lock
jmp
out
push
test
popa
repz
mov
mov
cs
jne
jne
inc
mov
lds
incl
cmp
xor
push
mov
into
fincstp
xchg
stos
pusha
sbb
mov
test
xchg
mov
jmp
jnp
cs
adc
mov
fldt
sbb
dec
pop
mov
into
iret
out
mov
jae
test
stos
fdivrs
sub
pop
pop
push
add
mov
loop
or
add
jbe
xlat
in
push
ljmp
or
sarl
fildll
or
movsl
js
push
add
inc
imul
lods
xor
add
hlt
fmull
xor
ret
mov
push
scas
mov
jns
mov
popa
mov
sub
cli
or
xor
mov
add
adc
mov
and
xchg
mov
cwtl
mov
sub
scas
out
or
pushf
mov
xor
dec
das
adc
ret
scas
cmp
inc
sbb
fstps
add
cmp
movsb
fucomp
jle
inc
insb
inc
sbb
pop
or
xchg
adc
sbb
pop
mov
or
icebp
adc
jnp
imul
jae
mov
add
add
or
push
inc
push
push
in
xchg
pop
icebp
cmp
imul
pop
scas
push
cltd
pop
mov
stc
mov
pop
fdivr
loopne
xchg
stc
jmp
xor
les
popf
sub
pop
test
jnp
in
dec
lods
jbe
mov
xor
pop
push
sbb
daa
mov
cmpsl
pusha
leave
ret
mov
sahf
or
in
push
shlb
adc
push
sub
sub
mov
sahf
in
call
js
jbe
xor
and
cld
fucomp
mov
pushf
push
sub
call
xchg
andl
jne
loop
arpl
add
cmpsb
adc
jo
cmp
or
cmpsl
or
in
fs
jo
pusha
std
rorb
lods
cmp
mov
fadd
pop
mov
mov
clc
ds
shll
leave
push
pop
cmp
repz
fstp
sahf
and
ret
insb
fbld
notl
inc
pop
pop
inc
push
js
xchg
lret
out
push
mov
cmp
push
sti
jp
adc
xorb
repnz
outsb
movsb
ficoml
popl
dec
test
push
fdivr
adc
sbb
add
incb
mov
shl
ret
and
cmc
ret
or
andb
fdivl
in
negl
in
mov
ljmp
mov
sub
es
sbbb
mov
stos
mov
pop
out
sub
in
icebp
cmp
sbb
aaa
adcl
jb
loopne
cmp
lcall
scas
dec
pop
xorl
mov
cmp
addr16
mov
or
fwait
sbb
jge
not
xchg
dec
lock
lahf
adc
jo
shll
cmp
inc
dec
icebp
enter
bound
push
jl
push
xlat
and
push
cmp
inc
xchg
pop
nop
loop
and
or
into
sub
lock
pop
popa
dec
xor
ret
or
pop
or
pusha
in
loop
arpl
arpl
into
insl
xchg
mov
sub
mov
xchg
gs
add
fldcw
nop
cmp
dec
add
and
int3
sub
shlb
push
mov
je
adc
mov
popf
ds
lods
cltd
adc
jge
inc
cmp
adc
bound
lret
lahf
outsb
ret
je
xchg
ja
push
jp
push
scas
mov
mov
loopne
je
imul
or
inc
fdivs
mov
push
adc
setbe
mov
sbb
sbb
add
insb
xchg
out
push
in
xchg
idivb
scas
xor
pop
cmpsb
fistpl
sub
xchg
pusha
loopne
push
ret
inc
movsb
push
pop
xchg
inc
mov
imul
xor
jle
inc
jecxz
jmp
sbb
movsb
xor
cmp
xor
jmp
jecxz
fisttpll
mov
int
pop
pop
icebp
lcall
aam
mov
push
in
in
je
or
add
add
incb
mov
out
adc
sbb
jp
sarb
pop
pop
xor
lret
dec
mov
sub
sbb
adc
mov
sbb
sbb
shll
js
sti
test
mov
out
adc
mov
lret
outsl
cmp
shlb
push
js
cwtl
add
xchg
int3
adc
repz
test
cmc
push
xchg
push
adc
js
pop
pop
xor
test
mov
cmp
stos
cmp
mov
outsb
mov
aad
je
and
dec
jo
sub
fisttpl
xor
rorb
sub
scas
orb
mov
jbe
pop
cmpsb
sbb
or
pop
adc
mov
inc
mov
or
or
mov
push
xlat
xchg
lods
lret
fisttpl
xchg
int3
dec
mov
loope
mov
test
cmpsl
aam
iret
inc
adc
jne
repz
test
clc
aad
ja
sub
mov
aaa
mov
mov
cmp
dec
movsb
lahf
lahf
xchg
sti
lock
lret
mov
add
ds
ljmp
mov
leave
clc
xchg
xor
xchg
aam
rcrb
orb
pop
mov
out
mov
mov
lcall
push
sub
sti
xchg
pushf
push
fdivp
shrb
xor
mov
rolb
in
mov
pop
lods
sbb
xchg
sub
mov
addr16
cmpsb
les
mov
mov
xchg
pop
xchg
xor
cs
push
testl
xchg
mov
into
sub
arpl
pop
cltd
jecxz
add
bound
dec
out
jo
cmc
mov
icebp
nop
movsb
imul
and
cmp
or
add
jb
push
lods
add
sbb
xor
loop
dec
repnz
pushf
loopne
jns
cmp
loope
ds
xorb
xor
jecxz
mov
inc
sub
inc
std
mov
jne
mov
gs
scas
cli
inc
in
cmc
or
mov
push
mov
push
and
pop
cmc
push
pop
pop
out
add
nop
imul
incl
pop
dec
les
loopne
lret
loopne
mov
adc
fstpt
sub
inc
ds
ror
call
inc
push
or
or
movsb
push
rol
sub
fists
push
xlat
cmpsb
sbb
push
dec
add
fidivs
lcall
daa
mov
push
mov
mov
dec
lret
xor
in
test
stc
movsl
mov
mov
mov
push
scas
cmp
aad
daa
stc
push
pop
sbb
lea
subb
mov
push
mov
xor
xlat
pop
subl
or
push
dec
mov
xor
shrd
mov
insb
mov
add
lret
fcoms
adc
and
and
fistps
in
out
mov
outsl
xchg
fidivrs
lds
xchg
ret
push
fcoms
ds
or
mull
in
add
pop
in
mov
lcall
ja
inc
ja
dec
fsub
cmp
hlt
in
lahf
mov
sbb
or
dec
lcall
inc
and
fidivrs
hlt
jo
dec
mov
push
fbstp
dec
ds
pop
rcll
xor
stos
lods
push
dec
popa
ret
xlat
push
xor
push
xchg
push
and
adc
out
les
in
lret
jge
inc
pop
pop
clc
pop
imulb
sarl
fcmovnbe
mov
and
inc
lcall
addl
cmpsb
stc
insl
mov
xchg
dec
inc
popf
push
add
divl
cmp
jae
sub
hlt
pushf
gs
in
xchg
in
or
xchg
cwtl
stc
mov
pop
or
stos
jg
mov
jb
test
and
push
sub
sub
call
push
faddp
scas
or
dec
inc
lahf
test
cmc
mov
mov
dec
fstl
outsb
movb
xor
gs
loope
mov
add
flds
sahf
mov
push
daa
jge
push
cmp
das
cmp
arpl
push
out
sarl
leave
pop
mov
and
inc
fidivs
xchg
popf
test
jns
dec
mov
cld
ficomps
mov
inc
and
push
clc
sub
inc
and
adcb
jl
mov
mov
xor
lret
mov
punpckhbw
orl
lcall
mov
sub
mov
imul
mov
cmpl
cmpsb
dec
aas
out
fstpl
inc
sub
push
inc
nop
mov
inc
test
pop
push
xchg
xorl
sbb
aad
or
outsb
cmp
jbe
jl
arpl
and
xor
cmp
dec
xor
push
aam
push
adc
dec
mov
in
dec
dec
cwtl
push
xor
lcall
lret
cmp
jmp
outsb
inc
mov
outsl
cmp
add
insb
mov
call
inc
fisubs
cmp
sub
add
das
mov
or
inc
imul
repz
insl
mov
dec
lret
sub
fnstsw
shlb
cmp
jne
inc
push
add
mov
out
pop
xlat
js
push
les
dec
stos
and
arpl
jns
stos
push
es
cltd
test
and
inc
fsubrp
call
push
fs
mov
hlt
movsb
fwait
xchg
mov
fs
lret
addr16
add
out
rolb
lcall
pop
pop
dec
xchg
cmp
dec
dec
adc
in
outsl
sti
fbstp
fs
and
push
stc
idivb
out
out
filds
dec
gs
in
nop
xchg
ss
dec
xchg
mov
add
aam
cmpsl
xlat
scas
and
add
or
sub
jne
nop
mov
push
pop
mov
sbb
mov
out
and
mov
cmc
mov
cltd
cwtl
push
fsts
sarl
call
or
out
js
push
pop
fistl
add
pop
and
mov
pushf
in
loopne
dec
ss
movsb
pop
pusha
mov
sub
ss
push
inc
lods
adc
cmp
jnp
or
into
push
adc
clc
jae
orb
jnp
jg
dec
jns
mov
xchg
ficompl
imul
stos
faddl
inc
mov
cmp
jp
mov
ss
int3
cmc
addr16
push
xchg
push
mov
leave
mov
sub
call
sbb
xor
pop
inc
mov
push
sbb
xchg
iret
mov
nop
outsb
inc
pop
andl
outsb
xchg
ja
mov
and
pop
loopne
add
out
xor
rcrb
add
nop
rdtsc
dec
jae
push
out
lret
xchg
jns
lods
das
mov
in
adc
iret
xor
cltd
jg
nop
dec
mov
pop
cmc
mov
jno
rcrb
mov
fbstp
mov
push
cmp
adc
loop
jmp
sbb
adc
dec
mov
addb
xchg
xor
aad
sbb
repz
fstl
pop
xor
add
dec
sbb
mov
out
je
jmp
add
lret
in
data16
fs
jo
cmpsl
pop
lret
and
rcrb
jl
xchg
xchg
daa
ljmp
push
sub
and
lock
lea
mov
enter
or
mov
sbb
lret
mov
xchg
gs
shl
dec
pushf
aaa
dec
rolb
ja,pn
sti
hlt
mov
inc
sarl
and
jnp
fcomp
xchg
enter
insl
inc
xchg
lcall
inc
add
pop
scas
insb
mov
insb
shll
adc
sub
jmp
out
jae
mov
jl
cs
loopne
xchg
or
mov
scas
lock
sbb
push
jb
in
ja
jl
shll
or
cmp
fcoms
bound
sbb
adcl
push
dec
test
jge
jg
mov
mov
stos
loope
test
mov
ret
idivb
daa
mov
stos
xlat
add
dec
inc
pop
mov
ret
clc
gs
mov
outsl
xchg
call
mov
fsubrs
mov
mov
jge
mov
xchg
je
pop
adc
jb
test
cld
scas
addr16
out
xchg
sub
xor
call
mov
sahf
pop
shl
mov
pop
call
xchg
cwtl
loop
sbb
lcall
enter
or
xchg
test
lds
icebp
xchg
lcall
notl
ljmp
xlat
sbbl
lea
mov
xor
jle
or
out
aam
pop
cmpsb
mov
or
das
jmp
and
jl
xchg
inc
lock
xorb
enter
imul
sahf
cltd
and
stos
addr16
mov
js
test
dec
xchg
loopne
xor
stos
das
jmp
shrl
mov
in
mov
fmuls
sub
jb
sub
push
adc
icebp
dec
leave
enter
in
mov
dec
pop
dec
scas
dec
mov
fsubrl
add
push
mov
js
jmp
or
pushf
inc
mov
mov
mov
sti
nop
and
sti
xor
push
jno
dec
inc
mov
jnp
and
xchg
fistl
movb
mov
pop
daa
lcall
movsb
out
or
cld
test
adc
mov
dec
jmp
sbb
adc
fs
std
insb
fidivl
test
pop
pushf
inc
mov
pop
mov
mov
scas
ja
xorl
fiadds
hlt
fldcw
push
sbb
test
adc
repz
das
popf
popa
sbbb
mov
mov
pop
pop
shl
push
popf
adc
ficoms
mov
push
cmp
add
stos
inc
pop
hlt
push
movb
popa
psubb
arpl
push
idivb
mov
fistl
enter
jbe
add
add
sbbl
jns
sub
mov
aam
sbb
add
sub
pop
add
sub
test
out
sub
xor
test
xchg
addb
fistl
add
inc
and
es
mov
xchg
mov
outsb
insl
mov
cmp
test
dec
test
xor
dec
mov
repnz
test
das
jp
nop
cwtl
cmpsb
dec
pop
divl
and
xchg
sub
and
adc
lahf
jo
dec
inc
sar
mov
mov
push
pusha
addl
xchg
xchg
xchg
sub
push
push
add
mov
fnstsw
movb
or
shll
pop
into
mov
mov
dec
scas
test
adc
xor
pushf
xchg
sbb
mov
ljmp
shll
daa
lock
test
push
jnp
mov
mov
shr
out
imul
cmp
push
fcmove
movsl
enter
sbb
push
adc
cs
push
inc
add
sarb
cmp
mov
sub
add
cmp
jg
pop
sbb
mov
sub
push
inc
or
push
inc
dec
gs
xchg
std
popa
mov
push
mov
push
adc
adc
je
mov
mov
xor
cmp
xchg
lret
dec
into
sub
pop
ja
dec
test
mov
xlat
jmp
jp
fwait
sub
ret
sub
pushf
dec
cmp
cs
pop
sbb
and
shr
mov
and
lds
and
xchg
inc
pop
cs
js
sbb
pop
or
mov
jge
cmp
pop
pop
adc
std
test
les
or
mov
sbb
pop
mov
adc
jno
xchg
mov
mov
into
cmc
mov
jb
loope
pop
test
dec
ss
push
lods
lds
xchg
arpl
scas
shlb
dec
dec
and
mov
push
and
cmpsb
cmp
xchg
xor
jmp
into
dec
inc
pop
test
sti
popf
adc
add
adc
jl
rorb
jo
subl
sti
fsubrp
lods
add
push
cmp
xchg
nop
stc
pop
jne
fisubl
test
push
outsl
dec
test
and
in
and
sbb
mov
repnz
insl
pop
arpl
cli
cmp
sbb
xorl
pop
dec
sub
sbb
lods
push
mov
jo
sub
pop
mov
dec
daa
sbb
mov
add
sub
xor
fiaddl
add
fildl
insl
repnz
cmp
pop
pop
xchg
insb
dec
cmp
fidivl
lea
sti
lcall
in
sub
aad
andnps
cs
mov
xchg
int
gs
adc
pop
pop
inc
or
push
cwtl
inc
ja
jbe
in
push
fistps
int3
into
ds
out
or
int3
adc
xor
xchg
mov
les
push
fnsave
mov
mov
add
dec
loope
lea
scas
cmp
inc
sbb
push
fbld
mov
inc
jns
imul
andb
rclb
icebp
test
aad
and
mov
in
mov
sti
xchg
scas
out
sub
lock
or
in
push
push
into
in
sahf
repz
xor
inc
xchg
jb
enter
popa
jnp
iret
xor
inc
mov
adc
cmp
es
or
test
daa
dec
cmc
hlt
sti
jo
ret
push
mov
pushf
add
addr16
mov
divl
iret
in
aas
inc
pusha
push
mov
xor
outsb
lret
jae
jnp
xor
mov
or
dec
scas
inc
pusha
mov
xchg
or
insl
push
push
aad
mov
jns,pt
out
or
repnz
aaa
mov
in
push
negb
loop
adc
out
mov
jnp
sub
loope
jl
pop
lods
int3
loope
mov
lea
pop
loop
inc
mov
adc
sbb
out
xorl
mov
pop
int3
pushf
jmp
sub
ss
sarl
aad
rolb
aad
into
mov
push
and
cmp
in
ss
mov
mov
xor
xlat
mov
pop
jge
daa
cmpsb
rolb
jae
mov
jle
jnp
add
push
jns
dec
icebp
add
push
rol
mov
xchg
rorl
std
add
pop
and
fcmovb
addr16
sub
push
fwait
jmp
repz
cmp
adc
mov
lds
imul
sti
pop
mov
outsl
popa
push
pop
idivl
imul
and
test
dec
sti
imul
or
pop
lcall
sbb
or
lret
out
mov
push
out
mov
rcrl
jbe
loopne
and
inc
loope
dec
add
inc
pusha
fidivrl
clc
sbb
sbb
sbb
cmp
xor
and
lretw
insb
jae
lea
into
jbe
out
push
mov
sahf
subl
cmp
or
loop
cmpsb
push
and
jbe
loopne
push
jbe
inc
push
push
cwtl
mov
std
and
push
cmpsl
movsl
sbb
lock
leave
cmpsl
dec
clc
js
pop
jo
mulb
jno
les
ds
and
or
stos
into
dec
incl
mov
dec
lods
xor
sti
movsb
iret
mov
movhps
or
scas
mov
stc
adc
lahf
adc
xchg
mov
jae
rorl
sub
xchg
dec
mov
xchg
inc
dec
clc
xchg
fwait
jg
data16
xchg
mov
jge
leave
or
jo
pop
xchg
mov
xchg
push
cs
mov
inc
dec
adc
mov
xchg
mov
test
or
int3
jbe
jge
movsb
dec
ds
inc
test
mov
jg
cmp
add
and
int3
aaa
xchg
xor
and
mov
mov
pop
popf
cmp
int
xchg
dec
cmp
cwtl
and
ss
loope
fisubl
in
inc
dec
test
mov
dec
fldt
pop
jl
sub
lret
xor
add
mov
adc
in
pop
inc
icebp
movl
pop
aaa
fld
ret
outsb
inc
adc
ja
adc
inc
popa
pop
scas
dec
mov
push
and
add
clc
les
jl
fldt
pop
jno
adcl
shll
shr
das
roll
mov
mov
jbe
cmpsl
xchg
and
and
push
add
push
jmp
cmc
xor
mov
or
jp
inc
cmp
xchg
push
sbb
int
inc
call
push
lret
int
pop
xor
mov
mov
add
mov
rcrl
xor
sub
dec
pop
dec
rclb
aaa
jo
cwtl
and
inc
cmp
xor
fisubs
adc
push
cmp
and
inc
xor
xchg
sbb
fistpll
mov
popa
add
mov
jns
in
push
sub
nop
movsb
inc
xor
mov
rep
dec
add
cli
stos
movsb
pop
leave
aam
pop
xchg
xor
fnstcw
mov
push
cmovne
adc
add
sbb
shr
or
and
fistpl
lahf
xor
sub
pushf
pusha
daa
pusha
lods
mov
jg
insl
pop
rol
int
cs
jmp
insl
out
or
cmp
dec
insl
movl
sbb
stos
xchg
lret
ds
ja
xchg
shrl
xadd
loop
push
mov
push
push
test
jle
test
stc
mov
jp
rdmsr
add
sub
cwtl
xchg
mov
mov
out
sub
cmp
lahf
sbb
pop
xchg
gs
iret
cmp
mov
loop
and
pop
and
mov
bnd
add
icebp
and
iret
repz
and
mov
lds
ds
call
push
and
cwtl
lret
and
adc
sub
jns
imul
sub
mov
scas
les
aad
shll
fcomps
aam
push
jb
enter
xor
pop
pop
or
mov
sub
mov
xchg
mov
movsl
repnz
adc
sarb
mov
xchg
movsl
out
sub
leave
and
stos
ja
in
repz
cmp
mov
pop
pop
add
jmp
stos
or
adc
add
pop
pop
jbe
stos
xchg
inc
cmp
xor
cmp
roll
outsl
adc
push
in
cwtl
inc
mov
cli
xchg
sbb
dec
xlat
lret
sub
cmp
inc
or
fwait
jne
xchg
add
sub
sahf
dec
mov
dec
add
xchg
pop
fidivl
xchg
push
xchg
pushl
mov
out
into
jne
movsl
mov
iret
clc
test
lcall
add
mov
xor
cmpsl
jge
xor
sbb
jne
xchg
test
repz
jmp
adc
mov
mov
mov
inc
int3
int3
das
sub
pop
out
das
arpl
in
sub
mov
clc
in
add
lret
or
xchg
frstor
in
insl
push
shrl
push
cltd
or
xchg
mov
xor
add
cli
out
les
sahf
shr
jecxz
cmpsb
out
inc
or
jecxz
ds
movsb
pop
lahf
and
roll
sarb
outsb
dec
pusha
pusha
in
pop
mov
push
daa
inc
mov
push
enter
icebp
jl
test
imul
int
push
fcoms
insb
div
mov
fwait
adcl
push
push
jbe
or
shll
mov
inc
jmp
faddp
nop
sub
pop
inc
mov
jnp
flds
sub
sti
scas
xor
adc
sbb
sbb
mov
mov
aaa
in
incl
rcrb
pop
sahf
add
mov
jmp
jo
push
daa
or
dec
into
xchg
mov
dec
xlat
inc
sub
scas
mov
add
mull
clc
std
je
dec
push
mov
andl
and
dec
in
or
jb
into
dec
adc
inc
sub
std
sbb
mov
push
jbe
lds
xchg
xchg
or
push
adcb
xor
jo
add
xchg
stos
xchg
js
jecxz
addr16
xor
jge
sbb
clc
xor
dec
and
adc
in
outsl
add
inc
sbb
notb
arpl
lcall
mov
fmuls
roll
fnstcw
aaa
rcll
test
add
jbe
leave
push
mov
insl
out
push
mov
pop
dec
sahf
pop
lods
push
ret
leave
in
subl
cmpb
add
push
mov
jmp
sahf
jno
cmp
adc
pop
xorl
jbe
dec
iret
aas
dec
movsl
insl
lahf
popf
icebp
sub
fisubl
shlb
out
and
mov
outsl
in
sbb
sub
es
mov
xchg
xor
sar
and
pop
push
into
test
cmp
jmp
das
sbb
xchg
cmpsl
cmpsl
test
cli
scas
scas
loop
dec
insl
iret
insb
mov
aas
fnstcw
repnz
mov
dec
jae
mov
push
outsb
jl
adcb
xchg
std
fadds
lahf
rclb
xor
scas
sbb
sahf
popa
sub
or
ja
jae
push
fiaddl
call
repnz
xor
add
mov
subb
jno
xor
push
daa
push
dec
adc
xor
pop
jno
nop
das
stos
pop
pop
ror
push
roll
pop
and
adcb
rcrb
frstor
pop
imul
pop
pop
inc
movsb
mov
imull
sbb
mov
sub
out
nop
ja
or
les
adc
cwtl
stc
in
adc
xor
data16
mov
xor
pusha
out
pop
lcall
in
cmc
sbb
push
xchg
clc
and
daa
pop
jne
mov
lods
insb
mov
jmp
jp
jne
int3
mov
and
and
pop
lahf
push
ds
xchg
shll
stos
mov
add
test
pop
mov
push
gs
or
int
mov
ret
add
sub
repnz
adc
pop
pop
mov
out
sarl
dec
aaa
stos
mov
notl
mov
imul
insl
mov
push
aas
xor
adc
shrb
add
adc
xor
inc
and
mov
jp
fsub
into
xchg
ljmp
push
fisttpll
aad
icebp
fsubrs
imul
jle
aam
pop
outsl
shrl
dec
sarb
std
adcb
scas
fsubs
inc
inc
jge
sbb
push
mov
or
out
mov
stos
adc
int
in
lret
cs
inc
aam
push
pop
ljmp
or
adc
inc
mov
out
ret
mov
in
iret
movsl
ja
stos
test
les
cmpsl
mov
xor
rcl
xchg
or
dec
add
pop
fucom
leave
and
ljmp
mov
addb
adc
adc
insl
test
clc
cmp
cmpsb
add
faddl
cwtl
xor
adc
das
fcoml
leave
inc
jmp
pop
jnp
sbb
loope
xchg
sbb
in
dec
scas
pop
fs
sub
dec
out
push
mov
bound
ret
mov
push
cmp
ljmp
add
mov
call
xorl
adc
pushl
push
ja
add
inc
add
sbb
in
in
pushf
shll
push
sub
and
fwait
mov
push
push
mov
xchg
dec
cmp
cltd
lahf
fs
stos
dec
andl
jnp
ss
mov
mov
xor
std
outsb
push
sbb
push
inc
aad
fnsave
push
cmp
mov
fs
sub
jecxz
or
xor
int
hlt
jg
pop
popf
daa
aaa
aaa
inc
xor
sub
mov
sub
test
rcrb
sbb
sub
adc
push
pop
test
sbb
imul
je
lcall
ret
inc
in
jg
sbb
out
dec
or
sub
cmc
pop
jle
push
fisubl
fistps
sub
mov
dec
cli
movsl
dec
mov
mov
imul
push
pusha
lock
lds
lods
pusha
es
inc
stos
mulb
mov
sbb
push
jge
jle
incl
in
pop
mov
loop
mov
xor
rclb
xlat
pop
fdivp
das
out
test
pop
in
adc
je
dec
clc
or
and
xor
int3
pop
or
xchg
mov
pop
mov
clc
jp
jb
adc
push
les
fmuls
std
push
aas
adc
or
mov
pop
cmpsl
mov
fucomp
les
push
mov
inc
xchg
sub
mov
add
nop
frstor
and
fldl
shll
cmpsb
test
sbb
mov
sub
das
popa
test
and
pop
add
repz
or
imul
test
mov
int3
xchg
es
adc
push
sub
orb
sti
cmp
add
and
lahf
loope
movsl
inc
mov
andl
imul
add
nop
fwait
call
aaa
aam
pop
mov
test
test
fsubrp
test
push
rcll
mov
hlt
psubw
sbb
mov
pop
jmp
mov
xor
imul
sbb
add
das
roll
push
mov
cld
mov
xor
push
or
mov
stc
int
scas
jecxz
mov
mov
ret
repnz
pop
mov
inc
mov
call
pop
or
jecxz
mov
xchg
punpckldq
or
push
xadd
mov
mov
and
punpcklwd
aaa
scas
inc
in
xchg
mov
rcrb
jl
pop
mov
sahf
jmp
jle
sbb
xchg
pusha
add
lock
and
and
or
out
push
adc
jne
cmp
jmp
jae
mov
pop
mov
mov
mov
dec
or
clc
inc
jbe
cmp
insb
cli
adc
cmp
add
repz
mov
lods
mov
xor
mov
or
or
ror
fsts
inc
pop
stc
mov
jmp
es
jl
dec
pop
scas
or
test
loopne
jns
jns
mov
add
lea
sub
sysenter
sbb
dec
shufps
cmpsb
xor
mov
add
xchg
aas
sub
js
mov
mov
in
in
or
or
jle
jge
out
fsts
aas
xlat
movsb
out
mov
lods
add
add
movsb
push
cmp
ds
push
inc
call
das
mov
dec
dec
or
push
ret
je
mov
js
dec
aam
rol
or
enter
das
addr16
js
push
cmp
in
xchg
and
pop
mov
int3
sub
test
and
sti
sbb
push
movsb
sbb
and
sbb
fcomps
call
mov
pop
and
movsl
inc
xchg
xchg
andb
cwtl
sahf
adc
inc
adc
xchg
call
ficompl
cmpsl
xchg
inc
xor
sub
dec
cwtl
inc
data16
loopne
ss
test
fldl
cs
dec
fbstp
adc
xchg
fdiv
lcall
imul
xor
aas
out
dec
fdivrs
movsl
fisubs
jae
mov
cmc
lahf
pop
or
lods
mov
cltd
mov
mov
mov
mov
add
hlt
cmpsl
fists
xlat
pop
jge
rorl
ja
and
inc
std
mov
in
addr16
test
test
aaa
rcrl
nop
pop
repnz
jge
inc
adc
call
xor
xchg
shl
inc
mov
sahf
enter
ljmp
pusha
hlt
pop
fidivl
cli
inc
iret
out
add
push
add
mov
jl
inc
ds
inc
sbb
mov
adc
or
jp
push
mov
add
dec
cmp
jns
xchg
and
cltd
aas
shl
cs
dec
repnz
cmp
mov
xor
sti
push
push
lea
stos
sbb
insl
or
xor
adc
xor
sub
xchg
movl
rclb
or
ret
ljmp
and
pop
imull
add
mov
enter
cmc
jmp
dec
arpl
xor
popa
mov
into
pop
stos
add
add
lret
sub
xchg
inc
add
and
lret
jle
lahf
cmpsb
fstl
bound
cmp
shld
cmp
sbb
mov
dec
xchg
sti
inc
ss
stc
and
aaa
inc
mov
cmp
out
pop
mov
pop
fistps
dec
lods
sub
sbb
das
hlt
cmpb
or
pop
xchg
mov
leave
data16
mov
in
mov
sbb
sub
test
push
inc
leave
xchg
pop
push
add
aam
sub
and
mov
lret
xor
sahf
mov
xlat
scas
adc
and
mov
dec
mov
or
push
jg
in
push
push
fs
jle
int3
into
mov
adc
sbb
mov
inc
sbb
ds
test
xchg
jbe
adc
adc
cs
add
push
jge
sub
xchg
pop
jecxz
sub
aaa
in
xor
mov
popf
clc
adc
xor
add
pop
push
lret
cmp
imul
sub
jb
push
movsb
and
add
jo
sbb
es
jg
sbb
or
or
jbe
cmpsb
cmp
jmp
js
ja
jno
jmp
fcmovu
push
clc
cld
lods
arpl
cltd
lret
mov
mov
fadds
repz
decb
jb
push
push
cmpsb
insb
ljmp
test
and
and
bound
loope
in
lods
or
inc
addr16
and
adc
xor
ficompl
stos
iret
sbb
push
leave
fildll
push
mov
add
or
fisubl
gs
test
pop
daa
sahf
cmp
xor
outsb
xor
adc
imul
mov
divps
es
xchg
mov
out
cmp
mov
jbe
xor
push
idivb
popa
pop
mov
inc
cmpsb
sahf
jp
cs
cld
lret
lock
ret
jnp
inc
lret
iret
mov
lret
lds
and
ret
and
inc
lret
leave
push
dec
mov
push
and
int3
div
and
les
sbb
faddl
out
jb,pt
out
and
mov
or
push
test
repz
mov
jmp
xchg
cltd
mov
sbb
mov
loope
cmp
call
or
push
cwtl
sub
cs
or
or
sarl
les
adc
test
xor
lock
sbb
call
or
pusha
lahf
mov
lret
mov
insb
ja
fidivrs
rorb
pop
cmp
out
adc
or
pop
int3
dec
shl
mov
enter
out
dec
repnz
jo
aad
push
cmp
cmpsl
in
pop
jbe
sti
cwtl
cs
stc
idiv
pop
cltd
iret
lods
pop
lds
test
xor
pop
outsb
mov
fucomi
rcl
sbb
mov
stc
jnp
ret
xchg
or
sub
outsl
mov
lock
mov
loope
mov
int3
packsswb
std
cmp
pushf
sbb
out
rorl
stc
cmc
add
aas
dec
xchg
and
outsb
lods
xor
inc
pop
inc
add
imull
std
jns
in
bound
int3
mov
sub
test
cmp
mov
cs
dec
repz
mov
mov
sub
pop
inc
popa
sbb
fdivrs
dec
adc
cli
sahf
xor
jno
aas
and
cmpsb
adc
and
inc
mov
pop
lock
inc
test
pop
sub
icebp
jae
jge
add
aad
test
add
ret
inc
xchg
pop
nop
sbbl
out
pop
shll
sbb
inc
lds
xchg
les
dec
lds
popa
jge
or
inc
sub
shlb
jmp
or
lock
outsl
cmp
jg
inc
movb
and
lret
inc
jecxz
sub
pop
mov
mov
sub
popf
cli
lock
popa
orl
jle
cmovle
xchg
hlt
sahf
inc
aas
mov
xchg
cli
push
dec
aam
xor
cmpsl
adc
pop
add
jns
and
sbb
or
pop
push
shl
scas
icebp
pusha
cmpsl
mov
mov
or
jecxz
cld
daa
dec
and
cmpsb
inc
hlt
fiadds
cmc
icebp
push
lahf
mov
stc
pop
fistpl
test
jns
ja
cmpsl
fisubrl
cwtl
add
xchg
sarb
sub
fwait
pop
inc
push
fs
scas
fnstsw
xchg
mov
in
in
xor
scas
dec
fs
dec
dec
rcrb
jo
test
add
dec
add
shll
xchg
out
or
lahf
jae
jo
dec
std
movsb
loop
push
jbe
adc
imul
ljmp
add
aad
pop
cmp
inc
std
cmpl
inc
pop
jne
pushf
loope
fcmove
mov
jns
sbb
out
and
stos
sar
or
mov
inc
inc
cmp
xor
push
dec
pop
cmp
xchg
mov
shll
mov
enter
std
mov
sbb
data16
stos
cmp
cmp
jbe
xor
sub
mov
enter
dec
pop
add
xchg
jno
xor
mov
lret
mov
mov
sub
xor
or
mov
cmc
daa
push
scas
inc
xchg
pop
adc
or
sbb
push
sub
sub
mov
pop
inc
shr
imul
xor
cmp
movsl
ret
xchg
mov
int
inc
lret
fwait
sub
add
fidivrl
inc
ja
into
arpl
sbb
jne
cmp
sub
fimull
or
xor
or
int
xor
out
and
subl
xchg
add
cld
cwtl
mov
stos
mov
adc
sub
imul
jns
mov
push
sub
iret
test
test
loope
imul
outsl
imul
ljmp
gs
mov
js
sub
scas
adc
lcall
or
movsb
sbb
mov
js
hlt
repnz
mov
jo
mov
xor
pushf
int
es
push
jle
pusha
outsl
mov
jo
mov
ljmp
fwait
mov
loop
dec
xchg
in
and
xor
lock
stos
jl
loope
mov
pop
jg
out
inc
jle
jl
mov
push
mov
inc
out
xchg
flds
stc
imul
jg
push
outsl
out
mov
xor
push
sub
fsubp
push
mov
mov
push
shl
loopne
xor
in
push
pop
jbe
mov
lock
insb
sbb
xor
addb
ljmp
imul
add
dec
jns
xor
add
aad
xor
inc
or
mov
mov
lret
lret
add
adc
mov
pop
in
push
out
leave
fcompl
pop
rorb
xchg
mov
lock
fisubs
dec
insb
xchg
jmp
sbb
xchg
jne
popa
movq
mov
inc
xchg
test
sub
xchg
dec
cmp
test
and
pop
xchg
mov
mov
pusha
cmc
ss
fdivrl
xchg
enter
mov
mov
pop
jbe
incb
rcrb
xchg
mov
mov
and
ja
add
push
pop
popf
add
gs
lock
push
adc
lcall
cmp
fstpl
orb
popf
dec
loope
mov
pusha
jle
fcmovnb
xor
inc
add
pop
imul
cmpl
arpl
or
and
mov
push
fmuls
sub
inc
mov
shl
cld
xchg
fistpll
sahf
cwtl
fsubl
scas
sbb
cli
adc
fiaddl
cmpl
orb
mov
add
stos
push
inc
or
inc
adc
ficomps
insb
xchg
xor
clc
loope,pn
jo
cmp
xlat
mov
mov
mov
cmpsl
mov
add
jp
xor
dec
or
adc
mov
in
scas
jbe
lret
xor
sarb
pop
ja
in
js
shll
mov
mov
jp
ja
mov
push
xchg
mov
dec
inc
cmp
push
jp
pop
jbe
and
add
adc
jo
fstps
int3
lods
shll
and
adc
sbb
hlt
in
aam
mov
jnp
mov
sahf
xchg
jle
dec
in
mov
stos
mov
add
cld
insb
inc
je
pop
or
pop
out
cmp
adc
jmp
and
mov
jmp
pminsw
or
out
jle
mov
add
imul
mov
mov
dec
mov
pushl
or
mov
xchg
xor
std
shl
dec
sub
and
or
add
call
bound
js
jmp
imul
or
pop
xchg
mov
xor
push
add
sub
and
ljmp
push
sbb
sbb
out
repnz
inc
mov
das
inc
imul
scas
dec
outsb
je
xchg
fs
mov
push
cmp
dec
inc
adc
cmp
and
in
pop
mov
stc
lods
dec
adc
xchg
fisubrs
aam
pop
inc
jnp,pn
faddp
push
mov
stos
mov
in
jmp
jg
pushf
loope
call
pop
popw
or
data16
cmc
cwtl
out
pop
jmp
aam
cmpsb
ret
lret
dec
xchg
fnstenvs
push
aaa
add
enter
pushf
dec
mov
out
stos
dec
push
add
adc
mov
mov
ljmp
sbb
sbb
sub
scas
in
jne
mov
ljmp
push
imul
fwait
leave
out
hlt
cld
fidivs
std
fwait
jp
test
test
ds
xchg
or
lea
inc
cld
pop
hlt
jb
xchg
sub
aaa
outsl
jle
loopne
dec
adc
xor
and
lret
mov
dec
std
and
lahf
mov
clc
add
mov
xchg
xor
cli
push
mov
pop
push
shl
test
in
pop
out
cmp
sub
jp
push
gs
ss
fadd
xor
cmp
hlt
mov
push
sbb
loop
div
xor
jb
or
push
addr16
add
scas
or
jae
push
shrb
int3
mov
fdivrl
sub
mov
out
add
leave
inc
cmp
mov
xchg
sbb
push
mov
jmp
subb
mov
jne
sarl
loope
mov
into
ret
cli
mov
cmpsb
ss
push
lds
outsl
daa
je
mov
lock
lahf
fwait
out
leave
xchg
repnz
sub
cs
daa
dec
pop
movl
fisubl
xchg
and
inc
out
jns
fsub
inc
and
fistps
dec
lods
inc
sbb
push
push
gs
xlat
adcl
pop
add
jo
lods
mov
movsl
cmpsb
lds
repz
scas
aad
inc
divb
lret
inc
ljmp
test
push
hlt
and
mov
cmp
or
add
xor
or
push
push
repnz
shlb
testl
xorb
push
mov
mov
sub
xor
push
test
add
pop
mov
push
sbb
pop
je
dec
arpl
or
test
mov
mov
lret
stos
cmpsb
mov
out
and
push
jae
xchg
out
add
popl
daa
lcall
or
pop
sub
xchg
jne
jae
sbb
fwait
xchg
sti
ret
nop
popf
add
movsl
xchg
xchg
xchg
dec
jl
faddl
test
pop
shlb
and
out
jle
movsl
fisttpl
lcall
or
ds
clc
loop
mov
imul
pop
xchg
imul
or
push
lds
mov
and
sub
clc
sbb
lock
jnp
mov
pop
enter
sub
sub
pushf
scas
pop
xchg
cwtl
cmp
or
orl
in
inc
mov
je
in
fildl
or
hlt
cs
test
pop
sub
andl
xchg
sahf
idivb
mov
dec
movsl
nop
sbb
insl
cmc
out
pushf
lcall
inc
xor
push
sahf
bswap
into
sbb
repnz
xchg
cmp
sbb
loopne
lret
bound
int3
insb
out
pop
mov
loope
out
lret
adc
mov
dec
bound
or
mov
hlt
cmp
rclb
ret
cmp
call
mov
and
pop
out
mov
mov
mov
lea
mov
pop
push
xchg
push
out
add
data16
sbb
jl
mov
out
in
mov
mov
in
adc
xchg
arpl
inc
cmc
inc
cmp
leave
cmpsb
push
add
add
insb
dec
jmp
mov
jns
and
lcall
ja
insl
xchg
jl
push
movb
lcall
mov
loopne
jbe
addb
inc
aas
cltd
mov
jg
repnz
pop
xchg
push
gs
roll
in
dec
test
fs
out
jge
adc
add
loopne
dec
je
xchg
xchg
push
pushf
or
mov
mov
ret
sbb
mov
jecxz
push
leave
insb
cmp
movsl
popa
fistps
das
pop
and
lds
or
shlb
outsl
xchg
and
mov
rcrl
roll
hlt
push
lcall
ret
pop
and
push
add
stc
pusha
add
dec
jg
mov
aad
daa
icebp
inc
popf
inc
mov
rcrb
cmp
inc
pop
jnp
cli
insb
mov
divb
int
sbb
cmpsl
hlt
movsb
dec
sbb
lcall
lret
sbb
xchg
stc
mov
js
imul
arpl
sub
movsl
inc
out
mov
mov
xor
mov
lods
jae
in
add
lret
xor
push
fadd
in
rolb
xor
clc
mov
arpl
jbe
mov
pop
push
jb
shl
fldl
mov
pop
sub
jo
mov
lods
jae
adc
mov
loop
pop
xor
outsb
push
inc
adc
inc
fbstp
jne
loop
adc
jne
xchg
jmp
in
inc
mov
mov
adc
jecxz
mov
sbb
inc
movsb
mov
jnp
scas
in
and
cmc
jg
cli
push
sbb
xor
adc
ja
lcall
xlat
popf
xchg
add
sub
adc
das
outsl
subb
aad
sub
jle
mov
mov
in
jno
stc
cwtl
and
xchg
psrld
jo
pusha
mov
repz
iret
adc
outsb
lahf
mov
int3
add
scas
mov
pop
push
jne
adc
arpl
dec
js
xchg
or
fnstcw
and
mov
leave
cmp
scas
sbb
mov
test
int3
out
data16
xchg
sbb
les
sub
jbe
out
sbbl
adc
xor
cvtdq2ps
add
cwtl
jecxz
mov
popa
ret
mov
cli
lods
int
das
rol
fsubl
scas
or
pushf
xchg
aas
imul
iret
fsubs
or
cmc
rol
icebp
aad
das
inc
xor
cmp
dec
inc
push
daa
sub
sbb
cwtl
adc
cmpsl
dec
jbe
pop
xchg
mov
inc
out
add
pop
sbb
icebp
dec
inc
shlb
inc
movsb
jg
ds
jmp
push
sub
xchg
incl
pop
andb
mov
or
fwait
inc
clc
mov
ficomps
in
stos
iret
dec
out
std
ret
mov
and
rclb
cld
dec
xchg
sbb
inc
cwtl
outsb
sbb
ret
sub
xor
jae
or
pop
loop
xor
lock
cmp
mov
sub
xor
daa
xor
cmp
pop
jl
enter
mov
mov
dec
xor
adc
pop
orb
test
in
mov
adcl
cmpsl
inc
aas
push
adc
shlb
insb
or
cmc
push
jmp
sub
into
mov
les
dec
xchg
xchg
sub
das
inc
xchg
sub
in
dec
decb
shlb
popf
in
addr16
xchg
cwtl
jbe
add
xor
sti
mov
pushf
pop
ds
adc
in
jns
adc
scas
sub
inc
not
or
mov
in
mov
jmp
lds
shlb
insl
imul
mov
mov
mov
and
call
popf
xor
push
sbbb
fbld
lods
xchg
shll
stc
js
loop
add
lods
shrl
xchg
cli
cmp
xchg
rclb
cmp
xchg
xlat
int3
cmp
movb
sbb
dec
icebp
add
jne
aam
mov
xchg
outsl
and
xor
adc
mov
cmpsl
cmp
push
jle
aad
push
sti
jae
test
xor
mov
sbb
cltd
nop
movsb
xor
test
xchg
insb
ret
dec
ret
fwait
test
jg
push
mov
cmp
call
mov
test
pop
jne
mov
dec
mov
dec
and
decb
shrl
in
xor
sub
sub
jl
and
jge
xchg
into
test
loopne
lret
and
ljmp
or
clc
aaa
jecxz
roll
lahf
notl
xor
cmp
pop
inc
pop
outsb
jns
push
and
je
insl
pop
and
mov
test
int3
add
mov
nop
mov
enter
mov
push
shrb
xchg
pop
aaa
hlt
and
hlt
xorl
push
mov
mov
fwait
cltd
ficompl
sub
pushf
pop
adc
sahf
sbb
mov
lcall
xchg
es
xchg
push
push
xlat
mov
shll
sarl
mov
sub
or
les
inc
inc
std
pop
sbb
adc
fstps
movsb
mov
stos
and
mov
das
sub
or
iret
pop
pushf
data16
lahf
dec
shll
ret
ja
mov
es
xchg
lret
mov
cld
xlat
adc
aas
loope
push
push
lods
insb
and
pushl
movl
in
sbb
or
push
sbb
imul
mov
testb
adc
pushf
push
mov
repz
mov
cld
out
push
out
push
push
hlt
enter
lret
stos
mov
mov
xor
ss
mov
out
mov
xor
and
cmpsl
cmpl
xor
sub
movsl
js
insl
addr16
dec
iret
lods
xor
ret
cmp
mov
ja
std
xlat
fistps
push
gs
ficompl
cmpsb
hlt
ja
pop
movsl
arpl
jo
insb
inc
xchg
lds
sahf
sar
xchg
mov
push
sub
rcrb
add
or
arpl
scas
or
jp
test
ret
xor
lret
pop
or
sbb
outsb
loope
fimuls
ss
pop
jle
lahf
shrl
mov
lock
cmp
test
not
in
xchg
in
inc
push
and
xchg
dec
jl
cli
mov
lods
mov
push
cmc
out
or
and
add
fdivr
shl
stc
out
ja
adc
jb
cli
in
sub
mov
dec
xor
stos
test
dec
dec
or
xchg
push
imul
pop
pop
insb
leave
cmp
cmpsl
jmp
pop
dec
mov
mov
int3
dec
loope
xchg
lds
outsl
jnp
arpl
mov
adc
dec
std
mov
cmp
add
inc
xlat
imul
xor
fs
jecxz
add
das
add
sbb
hlt
cli
sbb
scas
shll
lods
int
es
push
xchg
add
add
jp
push
scas
mov
int
jo
sub
sti
negb
hlt
popa
jmp
cmpl
test
jae
inc
lods
enter
push
addb
jp
mov
ficoml
jbe
sub
mov
cmpsl
and
add
es
mov
fwait
push
lret
adcb
bndldx
pop
rolb
adc
daa
movsl
inc
cmc
lds
mov
inc
ja
jns
das
shll
jo
shll
add
mov
sbbb
cltd
adc
inc
mov
mov
into
mov
aam
addr16
mov
mov
int
jp
push
jnp
in
sub
jmp
sahf
imul
fsubl
cmp
lock
sbb
clc
movsb
dec
es
and
dec
lahf
xchg
in
out
js
add
mov
fisubrl
das
iret
adc
call
sbb
loop
es
push
sbbb
xor
pop
test
div
lock
inc
enter
sti
loope
fsts
test
jmp
je
push
pop
mov
xor
stos
movsl
fucompp
bound
jb
into
aas
addb
test
out
test
roll
lock
adc
clts
mov
leave
mov
rolb
dec
les
loopne
push
into
rcrb
mov
xchg
mov
push
sbb
jmp
repz
les
sti
fs
cli
leave
adc
xchg
out
addr16
std
lret
bound
out
dec
mov
push
dec
cmp
das
les
jle
bound
ret
inc
ret
pushf
dec
pop
loopne
jbe
fptan
cmp
pop
mov
in
loope
jae
push
loopne
mov
xlat
push
pop
outsl
mov
outsb
rcr
mov
push
into
jns
xor
sahf
adc
loop
arpl
cltd
cmp
rcrb
lret
adc
push
pop
sti
xor
inc
into
cmpsb
aam
pop
push
iret
cmp
pop
cmpsl
inc
mov
ret
xchg
mov
loop
or
mov
push
pop
pop
les
scas
mov
pop
mov
ja
fs
mov
jg
test
inc
orl
cmp
mov
dec
cmp
movsb
arpl
mov
or
lock
xlat
jno
mov
mov
push
or
inc
sub
xchg
out
xor
lret
sub
mov
pop
xlat
iret
repz
adc
lahf
fcomip
lahf
aaa
test
adc
out
mov
leave
insl
push
mov
shlb
fsubs
ja
test
test
pop
cli
dec
mov
js
sbb
shlb
rorl
fcompl
fldenv
cmc
addr16
sbb
mov
xor
jg
dec
cli
imul
sbb
pop
push
mov
shlb
rclb
sbb
sbb
fsubr
test
aad
mov
fmul
lods
mov
xlat
out
mov
sub
leave
out
cwtl
test
mov
mov
ljmp
outsl
mov
push
and
add
sbb
xchg
fldcw
aad
mov
adc
xchg
mov
and
imul
xor
stos
jb
pushf
lcall
or
dec
out
aaa
outsl
daa
ljmp
or
xor
push
jecxz
inc
xlat
andb
or
into
int3
test
xchg
inc
cmp
push
fisttpll
test
stos
dec
and
int3
push
jp
repz
adc
stos
pop
jno
incl
ljmp
sti
xchg
mov
xchg
fwait
daa
xchg
sub
push
cltd
ja
leave
in
enter
inc
cmpsb
gs
push
lock
imul
ljmp
mov
xor
jle
xor
dec
sti
push
cwtl
cmpsb
inc
and
jg
test
mov
add
xor
and
sbb
add
outsl
test
sti
insl
jg
jne
pop
lahf
subb
push
idivb
andb
push
push
fwait
xchg
cmp
sub
push
mov
add
xor
add
dec
daa
push
call
mov
and
pop
aad
cmp
mov
popf
in
dec
lea
rorb
jae
addl
dec
jp
stc
sbb
shll
je
fs
sub
adc
add
in
lods
pop
mov
or
push
scas
push
lock
dec
jecxz
jle
std
mov
cmp
mov
fidivrl
dec
dec
in
pop
sbb
stos
pushf
arpl
lahf
jnp
dec
push
xor
mov
shll
aad
sahf
jno
adc
cld
dec
pop
dec
test
lahf
nop
icebp
xor
pushf
fistps
aam
pop
mov
int3
jns
clc
mov
lret
cmpsl
addr16
loopne
jecxz
fs
repz
mov
int
mov
inc
repz
add
add
in
mov
jle
or
test
pop
dec
fs
std
insl
adcb
mov
imul
sub
pop
xchg
and
scas
push
fldl
fisubrl
mov
xorb
mov
out
mov
cli
shrb
xor
andb
jl
movsb
pop
jg
and
jns
stos
out
repnz
jbe
hlt
mov
testb
mov
test
cmp
add
mov
xorps
mov
add
outsl
push
stc
imul
setge
inc
ds
popf
arpl
adc
and
xchg
sbb
test
aas
rorb
and
lods
fstps
incl
loopne
pop
mov
push
jb
loopne
sbb
fiadds
add
cltd
lahf
aas
or
lods
cld
mov
fcoml
sbb
pop
shr
int3
rorb
push
sti
gs
aaa
dec
jecxz
jnp
jle
xchg
jge
mov
cmp
loope
sti
pop
cmp
adc
fcomps
jae
or
xchg
jle
mov
push
mov
mov
cs
ss
subl
and
aas
xlat
outsl
jp
xchg
xor
push
outsb
dec
xlat
jmp
and
push
nop
or
fimull
inc
movsl
push
jge
pop
fwait
inc
inc
sbb
cs
aad
or
lods
notl
push
cli
inc
cmc
test
xchg
adc
xchg
addr16
in
leave
ret
jne
rorb
mov
cmp
in
lods
mov
inc
mov
pop
in
sbb
lcall
adc
pusha
push
add
ret
fwait
xor
fwait
jp
xchg
cmpsl
jnp
hlt
and
out
fistl
mov
cmp
push
pop
aas
push
les
adc
arpl
inc
jl
sti
addr16
fsts
cs
enter
or
cmp
pusha
jecxz
sub
adc
sti
inc
adc
loope
and
fdivr
fisttpll
das
adc
pop
xor
inc
notl
pop
jle
ds
mov
cmpsl
mov
inc
enter
fstpt
stc
insb
mov
push
mov
inc
or
nop
icebp
insl
push
sbb
into
es
push
xlat
aaa
push
jecxz
ds
xchg
stc
push
and
ss
xchg
mov
cmp
mov
into
mov
int3
mov
negl
jae
adcb
stc
xlat
fs
mov
dec
jp
pop
xlat
vpsllw
lcall
shrb
push
fidivl
adc
pop
push
adc
sbb
cmp
mov
dec
jns
paddusw
inc
dec
mov
inc
cmp
outsl
add
mov
call
adc
jb
push
dec
fdivr
jecxz
js
cmpsl
adc
sbb
popl
arpl
fbstp
inc
fst
add
rclb
shll
pop
ret
dec
test
mov
dec
pusha
and
cs
cli
pop
mov
adc
or
dec
mov
adc
data16
and
push
imul
repnz
jae
pop
repnz
and
imul
jge
cmp
dec
xchg
dec
loop
sub
ret
leave
xor
ret
inc
dec
jle
test
push
mov
ret
push
daa
in
or
test
mov
lret
clc
mov
outsb
test
jmp
pusha
iret
cld
mov
cld
mov
dec
add
adc
test
pop
mov
pushf
inc
jns
ljmp
lret
add
cmovae
mov
cmc
and
xlat
mov
sti
ror
ds
push
add
das
pop
popf
pop
mov
or
cmp
add
mov
and
or
rcr
inc
xorl
iret
push
xor
jmp
mov
pop
xchg
mov
mov
test
push
sub
aam
out
scas
movsl
cmpsl
sub
fdivs
inc
out
hlt
fidivrs
sbb
testl
sarb
lret
cmp
pop
test
scas
pop
jp
dec
mov
shlb
ret
or
push
js
popf
jmp
ljmp
enter
pop
jne
mov
outsl
inc
cld
outsl
test
or
fimuls
sbb
cmpsb
test
stos
or
mov
outsl
bound
mov
or
jae
jmp
leave
mov
pushf
mov
mov
test
scas
jns
adc
push
scas
aas
movsl
push
add
mov
push
leave
sub
jo
inc
lret
rcll
xor
push
lcall
pusha
jmp
jne
jle
and
stos
popaw
fs
loopne
loopne
xchg
inc
rcrb
mov
inc
in
adc
pop
pop
imulb
out
adc
aaa
lret
ljmp
movsb
inc
sbb
add
pop
mull
sub
inc
xor
scas
mov
pop
jle
cmc
out
loop
test
jnp
fwait
and
loopne
xor
mov
test
dec
xchg
inc
jp
xchg
xchg
cmpsb
mul
jmp
cmp
test
insl
mov
js
fisubrs
and
xchg
lcall
jmp
push
jae
mov
fisubrs
sub
cmp
push
cmpsb
mov
adc
jg
ret
push
out
push
adc
std
out
in
fisttpl
lret
and
loopne
add
scas
aad
mov
xor
mov
xlat
data16
mov
ret
int
dec
stc
or
xchg
add
pop
adc
adc
lods
xor
cmp
mov
sub
push
mov
jnp
imul
icebp
push
iret
or
add
push
rorb
and
cmc
fisubs
in
and
xor
mov
mov
sbb
jnp
pop
hlt
inc
cmp
fs
shll
rcl
sbb
add
sub
mov
iret
and
mov
inc
pop
mov
imul
mov
cwtl
leave
sbb
xchg
lret
adc
xchg
add
mov
scas
mov
test
and
or
xlat
inc
ja
mov
push
jb
push
xlat
fidivs
in
sbbb
iret
xchg
cmp
mov
inc
fcoml
scas
rcr
mov
cmp
cmpsl
testl
mov
or
adc
inc
or
rclb
mov
test
jbe
cli
call
test
pop
aad
inc
adc
ja
add
iret
lcall
cld
mov
outsl
repz
dec
int3
add
pop
jne
stos
std
call
xchg
xchg
in
stos
out
pop
fsubrs
movsb
push
mov
insb
cmp
pusha
lods
add
cmp
mov
inc
cwtl
jo
icebp
sbb
ss
shr
sbb
popf
aam
out
cmpsl
sub
xchg
sub
call
aam
in
cmpsb
out
push
push
mov
pusha
scas
mov
jl
inc
in
insb
jns
fnstsw
and
hlt
mov
sub
je
out
push
popa
push
inc
test
xor
mul
cs
jns
xchg
and
lret
dec
in
scas
push
adc
push
out
xor
and
jb
fwait
int3
pop
dec
shll
int
add
aas
add
and
mov
fistl
in
dec
pop
push
sbb
rcrb
lock
push
pop
shl
fs
je
jb
mov
push
jge
mov
sub
pusha
add
xchg
and
and
xor
stos
add
jae
popa
xchg
pop
sbb
sbb
pop
test
sbb
xor
lea
roll
adc
push
fidivl
cld
lds
lea
pop
lea
mov
cld
aaa
bnd
test
or
lods
jns
andl
mov
mov
adc
rorb
out
cmp
or
mov
inc
push
imul
aam
outsb
lret
lret
inc
fwait
pop
pushf
or
mov
xor
add
sub
push
iret
adc
rcrb
pop
jno
sub
into
or
gs
js
fadds
push
and
arpl
mov
dec
mov
jns
and
arpl
pop
cs
shll
insb
mov
jb
addr16
sbb
and
mov
pop
push
imul
pop
fcmovnu
dec
aaa
xor
xor
xchg
adc
nop
push
or
push
mov
je
imul
adc
push
orb
xorb
scas
pop
jnp
mov
sub
mov
sbb
mov
orb
pushf
js
cs
rorl
dec
cltd
pop
cmp
bnd
xchg
jbe
and
mov
out
pop
cmp
repz
cmc
inc
pop
fsub
sahf
cltd
push
mov
and
pop
mov
adc
or
out
and
xchg
fadd
or
into
cltd
aas
sarb
cmp
gs
pop
and
ficomps
mov
stos
or
ja
stos
jmp
daa
push
xchg
push
jmp
stos
in
loop
enter
rorb
test
shrl
das
jl
pushf
call
int
arpl
mov
dec
loopne
pop
adc
push
lea
inc
inc
loopne
je
push
jae
push
adc
cmp
sbb
gs
lret
xchg
or
lods
loope
scas
imul
scas
lods
sub
inc
pop
push
push
aam
inc
outsb
sbb
or
add
cmp
mov
aad
sub
out
les
scas
out
dec
jnp
jp
movsl
or
add
sbb
mov
adc
pop
outsb
test
mov
mov
push
lods
adcb
loope
dec
sub
sub
and
add
sti
xchg
inc
add
cmp
out
ficompl
mov
xchg
andb
leave
scas
push
mov
pop
testb
ficompl
xor
mov
mov
adc
out
out
xor
test
arpl
ljmp
mov
mov
int3
call
cld
dec
fcomps
jae
mov
fnsave
adc
dec
shll
xor
push
out
aad
clc
mov
jecxz
and
aam
or
dec
hlt
push
sub
add
not
aaa
push
mov
aaa
jno
mov
hlt
mov
mov
daa
movsb
aam
cmpsb
sub
cmp
sub
sub
inc
sahf
lods
cmp
jmp
fsub
mov
dec
inc
pop
push
sub
mov
data16
popa
lahf
repnz
test
fbld
add
mov
scas
shlb
into
xchg
leave
and
add
sub
scas
jne
sbb
cs
loopne
or
adc
popf
xor
mov
adc
sub
cmc
out
sub
stos
cli
mov
adc
sbb
pusha
jbe
add
pop
fdivrl
fld
and
notb
push
mov
ss
popa
xor
jnp
xor
clc
push
mov
fs
mov
jmp
fldenv
insl
push
fs
jecxz
pop
and
in
or
jge
pop
ret
dec
mov
mov
int3
rolb
enter
cmp
mov
cld
sbb
xchg
popf
bound
mov
add
lcall
rolb
jo
cltd
daa
pop
sub
mov
add
xchg
pop
sarb
mov
imul
inc
sarl
push
jmp
inc
andb
lock
pop
mov
aas
xor
jae
mov
pop
imul
in
mov
ret
or
dec
cltd
scas
insb
pop
adc
stos
and
test
sti
clc
faddl
shll
loope
outsb
ja
inc
push
stos
loopne
xor
ja
push
sub
jecxz
stos
mov
inc
pop
cmpl
les
push
push
std
mov
cmc
mov
flds
or
jle
sarl
adcl
cmp
sbb
pop
lcall
adc
or
testb
dec
pop
loope
mov
mov
cmc
xor
or
ja
push
sub
adc
fsubs
mov
rcl
mov
scas
lret
cli
ffreep
sbb
out
and
jae
mov
nop
rorl
sub
insl
subb
add
jbe
and
pop
mov
inc
mov
cwtl
add
arpl
fmuls
pop
jno
inc
popa
out
pop
and
aaa
pop
lahf
jp
push
lea
shlb
dec
cld
xlat
into
adc
ss
sti
pop
sti
dec
subl
cmp
jecxz,pt
ds
stos
jbe
test
inc
pop
popa
dec
lods
movsl
pop
ret
loop
cld
in
jb
pushf
and
movsb
dec
add
dec
add
lcall
push
push
imull
xchg
call
lods
or
add
out
xchg
xor
mov
push
mov
mov
sbb
jbe
push
leave
xlat
xor
and
inc
jae
inc
add
push
jb
sbb
push
mov
adc
out
outsl
mov
add
cmp
push
mov
lcall
cmpsl
mov
xchg
popf
iret
stos
scas
push
cmp
imul
sbb
push
out
sbb
jg
jecxz
dec
lock
push
xchg
adc
fxtract
sbb
cmp
pop
lods
shl
xor
inc
xlat
xor
xchg
rolb
ret
fisttpll
daa
fwait
xor
xorl
shll
je
mov
push
push
and
xchg
adc
sbb
push
sbb
sub
ja
ja
hlt
ljmp
shrl
rorl
xlat
mov
popf
dec
add
stos
push
lods
daa
xor
adc
jg
mov
sbb
and
cmp
mov
or
push
addr16
xor
and
jge
sbb
ljmp
sti
pop
in
push
fsubs
mov
jb
fisubl
mov
subb
sbb
in
je
repnz
adc
add
sub
pushf
cmp
call
cmp
pop
pop
int3
fnstcw
jne
and
xlat
sub
add
js
push
inc
repnz
push
pop
ss
mov
sub
cmc
xchg
mov
mov
shll
pop
out
dec
sbbl
iret
mov
xchg
stc
xchg
pop
imul
xor
ffreep
andb
jg
cmp
mov
or
aaa
call
pusha
mov
cmpsb
dec
sti
lds
jne
dec
mov
inc
std
clc
into
in
les
dec
mov
pop
aam
jbe
inc
int
lret
sub
jl
cmp
adc
scas
cs
pop
add
das
pop
cmp
shl
subb
in
jnp
ljmp
mov
lds
and
xor
sub
sbb
mov
cmp
loop
iret
fs
dec
push
xchg
mov
data16
cmp
dec
fcompl
xchg
sahf
and
add
inc
xor
ljmp
sbb
adc
jno
add
xor
in
adc
mov
pop
loopne
ja
xchg
jnp
xor
cmpsb
sahf
dec
xor
scas
mov
xor
jle
es
add
test
add
push
add
xchg
or
ds
or
sbb
scas
stos
and
lods
js
jg
out
jb
test
ret
xchg
into
sbb
inc
mov
mov
jg
imul
loop
push
lods
shlb
ja
push
jecxz
xchg
or
push
mov
enter
iret
rorb
mov
mov
int3
loopne
or
mov
cmp
out
iret
mov
cmp
popa
pop
xchg
mov
repz
jb
adc
orb
scas
xchg
pop
add
cli
jp
repz
sub
addl
int
pushf
dec
dec
mov
cmp
aad
mov
test
andl
inc
loop
jl
aad
movsl
xor
inc
push
pop
test
mov
scas
in
pop
or
mov
sbb
pop
pop
test
fiadds
mov
xor
lods
cmp
ror
int3
hlt
and
loopne
lret
loopne
mov
inc
and
inc
inc
sub
pushf
mov
fists
pop
insb
add
jne
stos
xor
loop
rcll
clc
mov
movsl
sub
adc
addb
mov
and
fisubrl
cmp
andb
or
pop
jno
leave
jg
aam
xchg
add
sbb
mov
les
outsl
fisttps
dec
jge
or
repz
pop
loop
fwait
jge
addr16
stos
sbb
lret
aad
aas
sbb
cmp
bound
fprem1
cmp
push
shrb
cltd
fildl
out
dec
aas
mov
repnz
mov
mov
and
add
aad
outsb
pop
xlat
adc
lea
sub
test
test
movsl
push
fcomps
xorl
arpl
lods
movsl
mov
movsb
stc
testl
loopne
mov
adc
cmp
mov
sub
adc
ss
mov
adc
cmpl
push
test
cmp
popf
pop
test
scas
mov
mov
mov
jb
cmp
mov
lcall
scas
dec
add
push
hlt
sub
inc
stos
push
sub
pop
iret
imul
leave
inc
adc
movsl
stos
and
mov
hlt
loope
lds
test
dec
in
cmpsl
das
fsubrs
mov
or
cmc
push
daa
loope
leave
enter
in
mov
js
cmp
xchg
in
add
jnp,pt
ja,pt
mov
pop
lods
mov
ficomps
ss
fwait
daa
add
pop
loop
cwtl
push
lahf
mov
sub
aas
mov
mov
test
add
movsl
mov
mov
leave
push
cmpsl
cltd
into
pop
mov
cmpsl
call
sbb
mov
popa
test
mov
inc
test
lret
mov
cs
ss
mov
sbb
and
xor
push
cmc
xor
mov
push
jne
sahf
adc
add
cltd
add
jnp
data16
push
js
clc
insb
lcall
dec
call
cmp
in
movsl
inc
jecxz
in
and
jge
in
cli
inc
push
outsl
mov
shl
push
lcall
push
into
lret
pop
test
fwait
imul
std
push
push
dec
mov
fs
add
push
in
shlb
jae
cmp
nop
fimuls
dec
mov
adc
mov
cmp
inc
mov
in
hlt
enter
popa
jno
cmp
pop
adc
xor
in
jbe
jns
fidivrl
decl
mov
outsl
push
loope
mov
xchg
adc
sahf
in
mov
xchg
int3
xchg
movsb
fisubs
push
xor
mov
sub
adc
cli
inc
mov
xor
fnstsw
mull
popf
adc
or
jecxz
clc
xor
ds
add
and
in
cwtl
mov
jbe
jle
popf
aas
imul
or
inc
or
addl
or
jg
cs
stos
jb
jle
pop
popf
aad
mov
mov
arpl
lcall
mov
pop
sti
pop
loopne
sub
push
lock
dec
shrb
cmpsl
test
in
sub
imulb
xor
mov
ss
sbb
inc
imul
gs
sbb
push
push
dec
popf
arpl
jge
scas
or
and
jne
dec
push
dec
sbb
dec
mov
sbb
das
fists
xchg
decl
dec
pop
shrl
cmp
das
fldt
or
add
outsb
dec
mov
cmpsb
icebp
adc
adc
push
or
add
xor
push
push
addr16
cli
test
pop
mov
outsl
ret
mov
cmpsb
pop
sbb
inc
push
lcall
xchg
mov
rcrb
nop
hlt
inc
imul
loope
in
fmull
ljmp
or
and
idivl
xchg
cs
scas
mov
lcall
neg
push
cmc
cld
pop
pop
sbb
xchg
fadds
scas
push
mov
pop
mov
inc
cltd
scas
jno,pn
adc
sub
cmpl
mov
pusha
dec
pop
push
add
out
xchg
lods
adc
mov
and
out
adc
int3
aam
push
inc
cmp
sub
add
pop
xchg
jne
pusha
sub
insb
mov
push
orl
or
pop
sub
mov
fdivs
mov
jecxz
int
xchg
add
ret
mov
scas
sub
ljmp
jmp
mov
pop
and
sub
dec
inc
jno
scas
arpl
push
cmp
addr16
orb
add
pushf
mov
inc
test
jg
xchg
insl
int
mov
mov
jle
andl
call
and
sbb
outsb
scas
outsb
cmp
sarb
mov
jle
aas
push
negb
dec
out
bound
xor
jge
dec
inc
arpl
push
dec
and
call
or
mov
pusha
dec
test
sarb
lea
movsl
imul
jbe
es
lods
aaa
rolb
mov
dec
xchg
fldt
adc
jbe
ss
aas
das
cmp
cmp
or
pusha
int3
and
lods
xchg
adc
int3
int3
mov
movb
popf
pop
add
mov
sub
testl
fdivs
or
test
xchg
loope
jmp
xorb
test
out
insb
add
cmp
psubd
jns
xchg
jb
ret
out
push
fst
daa
aam
fmulp
rclb
loopne
mov
out
push
push
hlt
and
rcrl
mov
sub
in
push
add
mov
pop
mov
dec
and
fnstcw
mov
mov
inc
out
inc
cltd
mov
xchg
sub
cwtl
push
jb
jne
jbe
aad
dec
mov
sbb
mov
mov
jle
and
jns
cmpsb
andl
xor
push
testb
out
xchg
mov
loope
pushf
arpl
jae
sbb
xor
sbb
push
hlt
and
add
mov
or
hlt
dec
stos
into
in
pop
sub
fs
jns
mov
push
lret
imul
movsb
mov
mov
mov
pop
mov
imul
pop
inc
jmp
rorl
inc
mov
pop
push
lods
movsb
add
mov
pop
scas
or
add
xor
jo
adc
nop
sbb
xor
mov
and
int3
or
sahf
jg
mov
xor
imulb
mov
push
fwait
pop
mov
jo
jo
cmp
or
loop
cmp
daa
int3
arpl
rcrb
int3
out
in
lds
mov
mov
imul
mov
push
ljmp
xor
pop
pop
jno
push
xchg
in
mov
inc
iret
jge
fwait
hlt
lods
jge
adc
sbb
ret
inc
mov
lea
pop
dec
jg
cld
cmp
cmp
scas
sbb
pushf
mov
inc
lods
pop
inc
sub
shlb
push
mov
das
push
mov
mov
test
pop
test
dec
mov
cmp
ret
outsl
lret
add
jo
sub
pop
fcompl
test
imul
mov
mov
aam
dec
pop
lods
pusha
aad
jecxz
loop
jne
std
xor
xchg
int
imul
fwait
mov
lcall
adc
jg
inc
adc
or
jbe
jle
lea
fadds
movsb
sahf
idivb
mov
mov
popa
cmp
jae
es
pop
stos
ds
sti
ret
xor
addr16
and
inc
xchg
call
pop
push
cmp
jnp
mov
mov
jge
repz
mov
dec
mov
js
shlb
outsl
pushf
sahf
xchg
push
rcrb
push
stos
leave
add
fists
xchg
das
xchg
sbb
pop
xor
pop
jp
outsl
repz
add
and
test
sub
ds
jno
cmp
push
mov
mov
cwtl
out
inc
and
dec
std
in
fcoml
cmpsb
outsl
js
loope
loopne
push
bound
mov
inc
out
loope
call
push
cmp
dec
lds
or
gs
test
mov
pushf
mov
daa
in
es
add
or
sub
mov
pop
mov
push
push
in
popf
subl
fisttps
les
cmpsb
mov
cs
jl
push
sbb
es
mov
mov
inc
cmpsl
mov
daa
mov
aaa
and
lahf
scas
xor
fstps
pop
push
lcall
ja
bound
mov
out
outsl
cmp
and
xor
pop
xor
push
aas
fsubrl
arpl
and
das
pop
xchg
jle
stos
je
dec
pop
mov
xor
in
sbb
mov
mov
xchg
mov
ret
push
push
lds
xchg
sub
or
test
inc
sahf
loop
fbld
add
or
repnz
or
mov
pop
call
in
inc
loop
fisubs
dec
cmpsb
push
adc
sub
sti
pop
lods
pusha
ds
sbb
insl
pop
xchg
mov
mov
in
pop
into
lcall
ja
xchg
push
cwtl
rcl
push
ss
adc
cld
loopne
inc
mov
leave
sub
pop
ja
add
mov
lods
lds
stc
jmp
repz
in
fsubp
fnstcw
inc
stc
jnp
xor
jns
divb
cwtl
repnz
mov
and
xor
adc
inc
sbb
jge
xlat
stc
mov
movsl
fidivl
xchg
enter
je
int3
mov
fdivrl
sub
ret
js
sti
not
cmc
mov
lcall
xchg
scas
jle
outsb
push
and
sbb
dec
dec
jb
stc
inc
push
pop
jge
pushf
mov
and
icebp
outsb
mov
pop
out
int3
mov
lods
in
cmp
clc
cmp
movl
dec
lock
sti
ss
xor
or
jmp
not
push
fcoms
lods
inc
dec
ficoml
sbb
push
leave
sbb
xchg
pop
mov
loope
aaa
lds
enter
ljmp
repnz
xchg
sub
xchg
lret
mov
adc
scas
outsl
dec
out
cmp
pop
outsl
das
and
sbb
int3
add
data16
push
daa
gs
push
push
xor
pop
in
fsubs
pop
sub
cmp
scas
jns
adc
loop
sbb
mov
xchg
sahf
mov
and
cmpb
add
mov
mov
jns
jns
test
sub
out
add
or
cmp
ret
xchg
mov
cmpl
popf
outsl
xor
lcall
sub
icebp
add
ret
jg
cs
fmuls
mov
cmpsl
hlt
lahf
xor
dec
loopne
movsl
and
xlat
xor
push
mov
and
insb
jle
mov
dec
repz
sub
ljmp
cmp
testb
dec
fildll
sbb
mov
jge
mov
shl
xchg
je
cmc
inc
clc
jle
jae
cmpl
movsb
pop
cmp
sbb
and
pusha
mov
mov
inc
repnz
rcr
sbb
add
dec
jp
fs
lret
out
outsl
and
jg
mov
jb
test
add
data16
or
push
sbb
inc
inc
mov
sub
push
and
dec
xor
jno
popa
mov
mov
and
dec
mov
xor
or
lret
fs
dec
jne
pop
mov
ja
jp
fst
xchg
sbb
neg
in
mov
sub
mov
and
in
into
push
in
pop
xchg
movsl
inc
mov
sub
jbe
mov
insb
sbb
push
cltd
sarb
lret
adc
add
jno
mov
push
mov
sub
imul
mov
inc
dec
jl
ret
shll
rcll
mov
cmp
xlat
insb
dec
lea
call
stc
leave
sbb
int3
daa
push
pushf
pop
in
mov
out
lea
repnz
pslld
jge
add
xor
dec
movsl
mov
xchg
push
xchg
in
enter
xchg
mov
dec
adc
fsubl
pop
pop
lcall
aad
inc
sub
popf
or
jae
js
add
arpl
mov
xchg
add
decl
jb
je
addb
ja
orb
scas
repnz
sbb
ja
cmpsl
ret
and
inc
pop
sub
fs
mov
mov
loop
adc
push
sbb
cltd
xorb
lret
mov
and
mov
gs
jle
lahf
rcr
jo
or
les
mov
test
repnz
imul
inc
daa
out
pop
cmp
cmp
and
sbbb
adc
mov
xchg
pushf
adc
repz
sbb
test
aaa
mov
sub
ja
mov
je
push
mov
pusha
pop
mov
aas
mov
sbb
or
repnz
in
test
lahf
fs
mov
jg
xchg
daa
in
jno
inc
icebp
push
mov
les
popf
popf
mov
jg
mov
stos
cmp
fs
iret
ficoms
outsb
mov
jnp
pop
lcall
inc
outsl
push
inc
or
loop
lds
out
mov
mov
jle
adcl
scas
xlat
iret
test
xchg
std
jle
sub
pop
fmull
jo
and
leave
xchg
lret
xchg
push
lret
ja
jns
rclb
add
insb
roll
cmp
xchg
xchg
jne
repz
sbb
shl
sub
adcb
add
pop
add
add
cmpsl
mov
push
or
repnz
cs
xor
in
insl
gs
test
sbb
sti
inc
cmp
jge
xchg
inc
lods
pop
jb
cmp
lret
rcrb
push
iret
sbb
int3
xchg
dec
adc
pop
outsl
rorl
inc
iret
loope
sub
mov
call
mov
repz
outsb
test
pop
mov
push
idivl
cs
enter
sub
xchg
gs
popf
gs
int
xchg
imul
jo
xor
jg
xchg
xor
or
mov
and
pop
std
fimuls
mov
mov
adc
out
inc
push
sub
jl
clc
ss
rclb
push
mov
jmp
je
into
das
call
nop
mov
lret
adc
push
adcb
clc
fldenv
cmp
xor
dec
insl
sbb
imul
repnz
add
jno
orb
leave
in
jmp
adc
pop
dec
aad
in
jl
sub
inc
jb
adc
mov
xchg
cmp
movsl
pop
mov
push
mov
popa
jp
mov
mov
mov
add
xchg
test
cmp
pop
push
pop
inc
jne
add
into
test
add
jp
xchg
jb
aaa
sub
dec
mov
sti
les
mov
daa
cmpsl
test
push
sbb
stos
lods
in
lea
and
iret
clc
std
xor
mov
mov
pop
arpl
scas
out
fcomps
jbe
xchg
pushf
jl
or
in
dec
push
xchg
mov
sub
fcomp
push
in
int
add
data16
dec
pop
es
xor
fimull
mov
inc
dec
mov
push
jnp
xor
rolb
adc
shlb
or
mov
mov
pop
rol
enter
cli
test
xor
mov
sbb
push
imull
dec
je
sbb
negb
sbb
jmp
imul
mov
xor
in
push
push
mov
or
fldl
repz
xor
xor
sub
shll
pop
mov
jae
pop
adc
lret
pop
les
and
pop
aam
bound
xor
icebp
mov
data16
sti
shrb
outsl
push
sti
pop
fidivl
and
push
out
or
out
out
cli
out
mov
clc
sbb
mov
sbb
ret
add
jae
dec
add
jmp
insb
jo
xor
ret
sub
dec
cmp
xchg
add
popf
add
aaa
add
xchg
xchg
cld
adc
xchg
push
and
andl
jecxz
xchg
mov
popf
xor
pop
mov
data16
push
push
dec
xor
adcb
repz
jbe
out
bound
std
push
sub
jl
in
push
push
cmpsl
data16
test
outsl
cmpsb
pusha
divb
add
pop
movsl
pop
sub
pushf
dec
repz
cs
pop
into
sbb
pushf
jp
push
sub
fpatan
inc
mov
leave
mov
dec
xor
daa
out
adcl
das
mov
cmpsb
mov
push
aad
push
sub
pop
scas
lret
sbb
and
stos
dec
inc
inc
add
imul
addb
cmp
xrelease
pushf
lret
sub
outsb
cmp
xchg
push
adc
xor
mov
shlb
gs
imull
mov
mov
lods
inc
fcmovnu
out
es
jmp
jae
adc
rcr
cmp
mov
push
or
xor
int
ret
cmp
mov
mov
cmp
ljmp
lock
mov
add
push
imul
lahf
icebp
jp
mov
popf
mov
int3
jae
ja
rolb
jmp
sti
mov
add
sub
sub
stos
enter
adc
pop
js
cmp
jp
loopne
hlt
andb
stos
add
decl
daa
movsl
xor
cld
test
pop
loope
imul
dec
push
fistpl
or
pop
es
mov
xor
pop
lret
lcall
inc
mov
js
leave
sub
aaa
adcb
cmpl
inc
icebp
outsb
cmp
inc
test
scas
loop
add
sbb
push
cmovnp
mov
dec
adc
out
mov
xchg
leave
int3
pop
incl
icebp
test
ror
adc
sub
inc
jle
pop
xchg
call
adc
push
mov
sub
push
mov
leave
or
xchg
aas
pop
dec
stos
cmpsl
fs
out
testl
mov
ret
jne
mov
nop
hlt
mov
add
imul
loopne
mov
test
test
pop
sub
imul
dec
scas
popf
les
iret
and
mov
je
push
mov
icebp
sbb
sub
stc
lcall
xor
push
sar
xor
popa
or
pop
ljmp
icebp
dec
push
inc
lahf
xor
rclb
in
stc
add
data16
xor
loope
in
ret
mov
push
cmp
sbb
bound
mov
mov
stc
pop
setp
dec
movsb
jno
xchg
or
jle
and
sub
cmp
sahf
cmp
nop
sahf
lock
mov
fucomp
push
std
and
icebp
adc
adc
scas
mov
dec
cmp
lds
xchg
cmp
jo
stos
shll
addr16
mov
bound
mov
push
dec
sub
flds
aam
fisttpll
and
test
and
nop
in
lcall
cld
scas
shrl
inc
in
fstp
mov
mov
sahf
in
ljmp
xor
mov
add
inc
mov
or
adc
push
and
jg
adc
mov
out
sti
popa
cmp
ss
pushf
ja
jl
in
sub
mov
xor
jnp
or
xor
daa
mov
ret
or
mov
xchg
pop
hlt
stos
pop
dec
add
scas
inc
arpl
push
fsubl
mov
in
in
jp
mov
push
sub
mov
pushf
mov
jl
add
and
sub
push
pop
adc
cmp
popf
test
data16
add
sub
cli
jle
adc
push
push
adc
push
stos
inc
data16
icebp
clc
sbb
test
std
ret
test
lcall
int
mov
imul
jbe
sbb
sbbb
dec
jge
inc
xor
daa
ljmp
push
and
cmp
mov
mov
scas
xorl
mov
add
jge
and
mov
sahf
je
mov
js
pusha
mov
sbb
stos
xor
xor
mov
jo
add
dec
mov
xor
pop
mov
jne
push
add
imul
addl
push
movsb
push
maskmovq
idivl
mov
push
add
test
push
push
fmull
mov
mov
popf
mov
xchg
add
push
xor
cmc
push
orb
scas
out
and
test
jp
inc
push
inc
cmp
xor
dec
cmpsb
sub
xchg
xchg
imul
rorb
loopne
mov
jo
popf
xor
fidivl
xchg
xor
dec
and
add
sub
popa
cld
push
fsts
addr16
out
xchg
leave
adc
stc
push
mov
sub
fildll
cmpsl
xchg
sahf
pop
lods
mov
jle
xchg
push
xchg
pop
jle
mov
pop
jbe
cli
xchg
cmp
sub
push
xor
jmp
movsb
jo
jne
add
rolb
cmp
imul
push
mov
pop
dec
scas
test
adc
out
icebp
and
dec
cmp
mov
lds
lods
jne
in
mov
incb
mov
stc
test
shrl
sbb
jb
mull
std
int3
push
fs
lock
inc
pop
ljmp
pop
push
and
mov
in
or
mov
mov
jge
sbb
cmp
cmp
or
inc
xor
movb
jo
es
push
dec
popa
xor
xor
cld
dec
sbb
fstps
cmpsl
sub
adc
popf
dec
clc
push
pop
jl
js
loopne
mov
or
sbb
movsb
loop
mov
and
mov
das
inc
loopne
mov
xor
movsb
xchg
push
pop
mov
lods
addl
sbb
mov
fwait
cmp
fsub
fs
fildll
sbb
xchg
test
cwtl
xor
xchg
js
push
xor
sbb
out
mov
hlt
icebp
cmp
gs
js
xchg
sahf
aas
mov
iret
jge
test
pop
and
mov
cwtl
das
sbb
hlt
stos
and
das
add
pop
lahf
insb
decb
stos
jne
push
cmpsb
add
out
stos
popf
mov
xor
pop
scas
xchg
sbb
pop
shlb
stc
mov
test
test
push
fisubs
out
pop
add
lret
adc
xor
push
js
lods
add
cmc
adc
arpl
int3
mov
out
nop
xchg
movl
outsl
mov
jl
or
notl
xchg
inc
mov
pop
mov
and
ficompl
sub
adc
fildll
cmp
or
stos
pusha
ret
call
gs
xchg
push
or
int
cmp
jbe
cmp
dec
cmp
popf
jnp
daa
subb
shll
or
or
ja
and
jnp
out
pop
mov
in
sahf
sbbb
das
cs
pop
mov
out
lea
xor
push
mov
fneni(8087
mov
loopne
ss
jnp
sub
shl
mov
pop
xor
sub
lret
fbstp
fimull
inc
loop
fldt
xor
scas
fisubrs
sub
outsl
adc
lret
test
inc
clc
add
shr
in
idiv
or
or
or
jmp
lahf
inc
ja
mov
jno
outsb
sti
xor
jg
mov
adc
rcr
stc
int
push
mov
cmp
lods
and
das
sub
mov
xor
scas
lock
inc
pusha
inc
cmpsl
push
pop
add
inc
lods
mov
dec
sti
clc
add
scas
insb
dec
cwtl
test
jns
jb
in
and
dec
int
std
inc
ljmp
mov
das
dec
shl
mov
and
testl
into
push
mov
pop
push
xchg
enter
orb
mov
push
popa
push
add
pop
mov
push
jmp
out
jo
in
repnz
add
and
xchg
test
fcmovnb
mov
or
fsubr
pop
xchg
cmpsb
cmp
in
mov
adc
add
mov
and
xor
stc
jae
inc
adc
xor
mov
and
inc
add
std
ds
push
arpl
mov
cmc
imul
mov
mov
mov
out
cwtl
nop
push
xor
sbb
push
cmp
mov
std
pop
and
lret
cmpsl
pop
iret
gs
roll
xchg
sub
jle
pop
cld
lock
mov
push
stos
add
sub
outsb
dec
mov
loop
mov
sub
push
loope
es
pop
iret
jg
sarb
int
adcl
cld
es
or
adc
leave
inc
sub
jle
push
mov
pop
aad
xchg
push
sbb
sbb
mov
cmp
repnz
dec
pop
addr16
dec
aam
fbld
or
imul
aad
bound
sub
dec
int
xchg
in
mov
xor
aad
arpl
adc
sbb
rorl
leave
js
or
jae
cmp
ljmp
xlat
pop
inc
dec
ret
jno
or
or
scas
mov
add
xchg
in
repnz
hlt
outsb
test
test
add
pop
fisubs
xor
or
loop
xchg
dec
cmpsl
lahf
dec
insl
or
add
jo
stc
je
jp
xchg
testl
cmpsl
or
lret
push
outsl
pop
int3
xchg
xlat
das
mov
sub
nop
pop
inc
imulb
push
lds
sbb
push
mov
sub
pusha
dec
sbb
xchg
pop
jne
insb
leave
mov
dec
loope
fwait
into
ds
pop
cmp
and
add
sbb
nop
out
outsb
out
pop
mov
xor
dec
pop
jnp
sbb
cmp
xor
testl
mov
mov
aam
cli
icebp
mov
fdiv
add
bound
inc
mov
sub
outsb
push
xor
mov
es
jge
ret
sbb
mov
lods
data16
repz
cld
jb
xor
cmc
adc
mov
js
cli
outsl
loope
out
mov
jb
pop
mov
fidivrl
mov
and
and
adc
jmp
push
dec
add
ret
adc
push
sbb
dec
push
nop
stc
pop
pop
mov
outsl
call
jecxz
jns
and
mulb
and
rol
ja
xor
lds
insl
adc
push
cmp
cltd
xor
into
mov
and
jp
sbb
repnz
sub
xor
gs
mov
mov
mov
out
mov
inc
xchg
xchg
mov
add
xor
sbb
ljmp
loope
and
sub
mov
push
xor
xchg
pop
cmp
jnp
int
inc
std
cmp
popa
mov
daa
push
and
mov
mov
pop
ds
or
repz
pop
cld
jg
mov
cmp
xor
inc
jl
sahf
movsl
pushf
pushf
mov
fcompl
sarl
inc
cmpsl
imul
jno
icebp
sub
push
jo
mov
pusha
aas
push
es
cs
jo
sub
jns
sub
jp
xor
imul
mov
fistps
rorl
and
dec
scas
and
pop
dec
mov
or
aas
pop
mov
xchg
mov
leave
inc
sbb
enter
dec
mov
fcompl
and
notl
lods
jge
or
add
add
gs
pop
repz
cs
adc
lcall
test
sbb
aas
xor
and
push
xchg
dec
pop
adc
dec
or
mov
js
xor
push
push
pusha
pop
jp
ss
mov
iret
adc
jp
dec
jb
jnp
repz
fsts
imul
cmpsb
orl
add
negb
push
push
daa
lcall
dec
les
repz
pop
add
iret
sar
mov
xchg
cld
jl
dec
fdiv
pushf
insl
fwait
notb
pop
sub
push
push
sub
add
test
sub
cmpsl
xchg
pop
insl
lcall
in
call
sub
outsb
xchg
dec
cld
inc
bsf
fldl
add
mov
imul
gs
sahf
adc
es
std
nop
outsl
mov
das
gs
xorb
xor
jp
dec
mov
test
xchg
adc
test
sub
inc
or
jno
jnp
push
decl
xor
sbb
inc
mov
scas
stos
scas
cmp
push
sbb
icebp
sbb
popf
jbe
aam
inc
jo
jmp
es
pop
pop
xchg
cltd
lea
inc
aam
lret
xchg
mov
cwtl
mov
cmp
and
es
dec
iret
cmp
clc
out
mov
clc
in
or
sbb
js
ss
icebp
xor
jecxz
lods
fisttps
push
hlt
sti
jne
dec
js
inc
jecxz
loopne
mov
push
popf
inc
inc
push
mov
pop
xor
or
xorl
push
jb
imul
adc
bsf
aaa
jmp
hlt
sbb
push
mov
or
dec
cmp
je
and
xor
fidivrs
push
dec
rcll
call
bound
lahf
pop
inc
lahf
dec
ret
adc
xor
jle
stos
pushf
rolb
mov
pop
mov
lahf
push
notl
ja
push
aas
leave
out
inc
adc
enter
inc
fstps
mov
or
xor
daa
or
mov
pop
add
add
sub
cmp
xchg
pop
psubw
lcall
xchg
mov
jp
jne
add
cli
int3
aam
and
shrb
movsb
sbb
adc
sahf
jne
repz
stc
insl
fadds
xor
insb
test
add
in
dec
mov
mov
sbb
dec
mov
imul
dec
inc
lods
fadd
out
or
and
shlb
or
pusha
jmp
rclb
and
ficomps
int
cmp
mov
mov
inc
mov
push
xorps
sbb
out
and
and
pop
mov
fstpl
pop
repz
stc
fmul
jecxz
pop
sub
ret
mov
lret
stos
push
or
das
lods
test
mov
lret
dec
xchg
imul
sbb
repnz
lock
jecxz
xchg
sbb
xor
jno
inc
dec
jle
lea
in
ficompl
inc
orb
addl
or
pop
jne
aam
sub
sub
scas
jg
and
into
xchg
xchg
ret
lods
lods
dec
xchg
dec
int
or
push
or
xchg
aas
add
daa
testb
add
mov
sbb
imul
mov
mov
stos
out
cli
aam
mov
addr16
push
push
mov
mov
mov
mov
std
pop
out
cmp
dec
cmp
sub
arpl
xor
fidivrs
aad
push
inc
dec
fdivrl
notl
pop
imul
dec
xor
xchg
add
psubd
stos
cmpsb
lret
lock
stc
and
sub
and
push
lock
sahf
or
dec
int
sahf
idiv
xchg
test
push
stc
int3
ret
pusha
js
sub
mov
cmp
mov
xchg
jge
and
adc
mov
lods
mov
test
or
mov
jbe
xor
sub
fisubs
cmp
push
flds
iret
stos
movsb
sub
adc
mov
mov
loop
lret
push
arpl
jno
jae
inc
mov
add
js
or
jecxz
sbb
dec
repnz
or
jmp
jmp
dec
push
loopne
imul
inc
dec
adc
out
fisttps
lahf
xchg
cmp
xchg
cltd
in
xor
fildl
push
lods
cltd
outsb
inc
pop
pop
enter
xchg
xor
lds
xchg
mov
cs
pop
scas
pop
insb
mov
repnz
arpl
or
sahf
cmpsl
stc
shlb
cmc
ret
shll
mov
push
xchg
push
and
adc
aad
test
xchg
jg
jle
dec
jl
arpl
sub
mov
incb
adcl
push
aaa
mov
or
loope
cmp
push
rolb
les
sub
mov
filds
pop
movsb
mov
into
push
int
cmp
xchg
jl
sbb
popa
pushf
sbb
movsl
sbb
hlt
jns
aad
jb
add
ficomps
hlt
enter
mov
je
test
sub
add
negl
mov
jns
xor
inc
sub
push
jns
push
jl
dec
addr16
mov
mov
or
add
or
push
jnp
mov
cmp
jmp
inc
add
mov
sahf
jb
into
rcrl
dec
xor
stos
jmp
mov
adc
or
xor
aam
push
es
mov
in
cmp
mov
jno
mov
fisttpl
int3
jp
movsl
xchg
xchg
xchg
cmp
dec
xchg
loopne
adc
and
jmp
stc
add
inc
add
add
or
test
insl
xor
fadd
mov
popa
or
push
jg
mov
jl
cmp
orl
pop
cltd
movsb
mov
in
imul
shlb
add
cmp
leave
lcall
sub
and
outsl
adcb
pop
dec
push
or
repz
inc
dec
mov
daa
ss
sti
daa
lcall
or
popf
dec
sub
mov
and
fcompl
mov
xor
xchg
mov
fsubs
cmc
xor
mov
sysexit
in
jl
dec
rcrl
jbe
pop
imul
insb
inc
mov
sbb
ret
icebp
inc
imul
sbb
out
adc
xlat
adc
mov
lret
mov
xchg
fidivs
push
hlt
jne
movb
leave
loope
and
pop
stos
insl
mov
test
xchg
fstps
in
mov
mov
cmc
mov
bound
pop
pop
test
push
mov
cwtl
inc
pop
sahf
mull
mov
mov
movl
inc
into
imul
jns
xor
divb
divl
mov
xchg
cmp
mov
adc
test
inc
je
jg
mov
inc
imul
xor
xor
add
adc
outsl
lcall
andb
test
xlat
rorl
adc
aam
test
lret
mov
filds
addr16
subb
xchg
lea
jns
iret
pop
mov
jl
outsb
push
push
in
or
and
xorl
jbe
mov
pextrw
fs
dec
jp
les
inc
cmp
ljmp
jae
pop
push
ss
xchg
cmp
cmp
mov
dec
cld
pop
xchg
add
pop
ljmp
jmp
sahf
mov
in
push
mov
push
mov
mov
arpl
outsb
sub
lea
ret
pop
mov
incl
mov
cli
fstpl
mov
imul
mov
pop
sub
out
mov
aaa
int3
rcrl
dec
dec
fnstcw
rcrl
mov
mul
imul
push
xorb
ljmp
adc
int
dec
fisttpl
xchg
cmpb
xchg
addl
outsb
ja
fwait
inc
jmp
lret
inc
mov
aas
into
or
addr16
dec
jmp
jg
jge
mov
in
insb
lahf
enter
adc
push
cmp
mov
xchg
lea
ror
test
popf
insl
pop
mov
or
jmp
bound
fisubrl
iret
mov
cli
inc
mov
mov
xchg
in
iret
sbb
imul
push
xchg
or
jge
out
cmpsl
insb
repz
push
ljmp
es
cld
mov
loopne
push
mov
or
ret
insb
cmp
sub
inc
adc
mov
add
ret
pop
xor
xor
cmp
xor
xor
shll
or
pop
cwtl
jne
insb
jge
pop
sbb
dec
or
jmp
inc
mov
lcall
jecxz
aad
js
sub
loope
mov
aad
addr16
arpl
and
lea
outsb
rcrb
out
adc
out
addr16
pop
stc
xor
lods
jmp
pop
popa
test
mov
dec
pop
movsl
xor
cltd
sti
pop
gs
push
shll
out
mov
lret
inc
push
sti
rolb
jno
jnp
dec
sub
lret
push
movsl
mov
mov
jecxz
shll
xchg
stos
jae
or
mov
cltd
pop
jp
sahf
nop
andb
stc
adc
adc
mov
mov
movsl
repz
ficompl
sbbl
jns
adc
add
sub
shrl
inc
lret
enter
mov
fwait
mov
push
dec
pushf
scas
clc
hlt
sbb
and
inc
xlat
dec
clc
cmp
out
insb
js
iret
leave
fcom
fdivrs
into
lock
in
into
inc
pop
sbb
std
xchg
mov
test
lcall
xor
push
push
nop
mov
jecxz
xchg
push
scas
adc
lods
cmp
mov
jns
inc
mov
imul
in
push
push
inc
push
es
iret
dec
add
cmp
and
stos
jl,pt
out
mov
dec
adc
add
dec
jp
dec
push
jbe
xor
push
repnz
hlt
les
fsubrp
neg
add
ret
mov
je
hlt
pop
xor
add
mov
add
push
dec
fsts
add
icebp
dec
sbb
mov
jbe
movsl
xchg
fwait
pop
fs
push
xchg
inc
dec
pop
jmp
int
add
rorb
mov
push
fistpll
repz
lea
or
or
int
jae
popa
or
push
mov
sti
sbb
in
inc
popa
push
add
jp
iret
cmp
in
cmp
movsl
cwtl
mov
adc
in
sbb
push
aad
shr
push
repz
dec
push
dec
pop
in
cwtl
xchg
stos
lret
mov
gs
or
mov
in
mov
cmp
cmp
inc
mov
dec
adc
out
mov
jns
and
mov
int
xlat
pop
fidivrs
mov
mov
sarb
pop
dec
and
push
lea
mov
pop
bound
mov
in
sub
push
push
push
stos
ja
popa
push
pushf
sbb
out
mov
iret
jecxz
out
sub
xchg
fpatan
leave
enter
iret
ss
ss
or
and
dec
and
pause
mov
jp
jb
sub
fldl2e
lret
scas
mov
dec
sbb
mov
mov
bound
pusha
es
jbe
jle
fnsave
frstor
fwait
mov
dec
xor
jge
jg
dec
mov
rolb
cmp
sahf
mov
ret
add
add
repnz
aad
adc
sub
dec
int3
pop
add
mov
sbb
lret
lods
in
int3
add
add
xor
xor
call
ss
mov
inc
sbb
leave
pop
testb
or
stos
and
rolb
pop
cmp
mov
inc
lret
inc
xchg
jnp
loopne
out
jg
sbb
cwtl
test
sub
sub
shrd
ss
push
mov
mov
pop
xchg
addb
add
cmpsb
out
addl
sbb
add
out
or
sub
inc
clc
mov
mov
rorb
mov
je
cmp
std
mov
cltd
mov
dec
mov
das
in
push
test
mov
pusha
pushf
les
jecxz
test
add
jp
outsl
sbb
jno
fdivrs
scas
adc
push
mov
mov
ljmp
icebp
mov
sti
add
cmpsl
insb
inc
mov
fadd
ljmp
mov
stc
mov
mov
fidivrs
mov
stc
add
clc
movsl
repz
stos
cld
cli
and
outsb
xchg
lods
inc
xchg
xchg
sbb
rorl
fwait
icebp
movsl
sub
out
sbb
adc
bound
rcrl
int
mov
pop
mov
inc
bound
xchg
mov
adc
shlb
pop
lcall
jle
pop
push
and
push
xchg
pop
xor
push
cltd
jmp
xchg
data16
jns
outsl
jl
repnz
mov
daa
or
mov
and
outsb
mov
lret
adc
jae
cltd
sbb
in
cli
in
mov
ja
jp
out
in
rcrl
jae
mov
aaa
int
inc
pop
sub
push
lea
cmovbe
adc
xor
push
aas
test
les
xchg
mov
out
and
out
fwait
jae
fstl
cld
rcrl
hlt
jb
ljmp
sti
call
jae,pt
test
sbb
add
jno
and
cmpl
cmc
lret
inc
lcall
leave
dec
rcll
add
neg
add
add
xor
leave
push
ds
mov
add
adc
xor
inc
jl
leave
fidivs
mov
inc
or
imull
shll
or
cmpsb
adc
adc
and
repnz
mov
ss
jo
mov
stos
je
test
lret
out
stos
imul
adc
mov
ficomps
mov
xchg
jg
dec
sarb
xchg
es
sti
into
rcl
call
push
leave
push
mov
pop
stos
mov
fptan
pop
cmp
adc
jo
mov
pop
xchg
xchg
push
adc
xchg
outsl
cmp
iret
mov
je
mov
stos
inc
pushl
popa
or
in
ljmp
lea
aad
cmpsl
outsl
sbb
xor
icebp
mov
flds
imul
cmp
mov
popf
cld
push
cmpsl
xorl
inc
inc
mov
fidivl
push
stos
negb
lret
dec
cmp
cs
jns
aam
sub
loopne
daa
cmpsl
or
mov
insb
or
mov
sbb
cltd
jle
add
or
mov
mov
fidivrl
in
xchg
jg
xor
lret
scas
cld
or
sub
bound
push
mov
or
jg
push
ja
mov
or
push
movsl
push
pushf
push
leave
mov
push
das
sti
out
mov
mov
jae
mov
or
xchg
jb
stos
shr
xchg
jnp
mov
mov
icebp
add
adc
adc
inc
or
xlat
repz
jecxz
fmuls
enter
outsl
inc
mov
pop
cwtl
ficoml
movsl
mov
or
mov
or
dec
addb
out
mov
or
scas
jb
mov
push
stos
mov
and
pop
dec
add
scas
xor
iret
inc
dec
mov
xchg
dec
cli
ret
jb
test
in
int
popl
rorl
test
xor
andb
and
mov
pop
sbb
loope
push
rclb
xor
mov
push
bound
mov
push
cld
arpl
shrb
jbe
mov
push
add
xor
push
cmc
mov
insl
clc
inc
mov
sbb
comiss
ss
addr16
lods
xor
mov
insb
daa
push
and
in
icebp
pop
mov
push
inc
dec
int
sub
ja
ljmp
call
or
push
fld
add
sbb
add
ljmp
jb
fimuls
popf
rcll
push
gs
int
call
cmp
xchg
fldl
stos
mov
cmp
lcall
push
or
or
sahf
or
sub
out
fwait
push
fstl
pop
jmp
lods
add
das
and
mov
xchg
adc
enter
mov
cmp
xor
cltd
cmc
fwait
jns
mov
mov
push
jbe
lods
fstl
add
xor
jmp
xchg
cmpsb
xor
xchg
lret
mov
xchg
xchg
jnp
ret
nop
ljmp
cmp
mov
adc
rolb
xor
loop
fcomi
call
mov
stc
inc
loop
ja
call
sbb
push
mov
mov
dec
or
pop
out
jg
test
xchg
mov
js
pop
push
movsl
cli
pop
xchg
outsl
stos
imul
xchg
cmp
sbb
rorl
fcmovbe
add
inc
jo
insb
mov
sub
stos
pop
lahf
push
nop
mov
and
and
jle
sbb
bnd
xchg
xor
cmpsl
or
call
call
or
sbb
jmp
mov
leave
ljmp
sbb
outsl
sub
roll
aam
ror
fsubl
es
mov
fdiv
out
jl
lods
jae
xlat
in
add
loopne
ficoms
mov
ds
or
popf
push
pop
xchg
cmpsb
pusha
addb
push
inc
and
push
xor
lahf
addr16
jge
test
rcrb
adc
jae
inc
push
inc
push
fadds
cmpl
in
lods
xor
mov
add
lahf
xchg
mov
and
into
fcmovbe
xchg
xchg
push
insb
sti
jnp
pop
cs
mov
movsb
cmp
mov
in
je
imull
cmp
sbb
and
xchg
jo
xor
mov
jecxz
xor
test
ficoml
popa
xchg
imul
divb
jbe
fmulp
inc
out
xor
sbb
pop
hlt
shrl
sbb
add
jne
testl
js
cmp
popf
ds
int
add
sbb
shrl
scas
int3
out
cmp
inc
clc
cs
or
and
jge
cmpsl
pushf
sub
mov
sub
leave
cmp
lret
push
or
pop
rclb
outsl
cld
into
loopne
repz
sub
fistpl
aaa
add
jae
addr16
ljmp
mov
movb
in
dec
pop
aaa
push
cmp
icebp
mov
icebp
lock
dec
mov
inc
jmp
mov
cld
loope
sarb
pop
cmp
sbb
mov
xchg
hlt
cmp
sub
addr16
rclb
add
jo
arpl
test
mov
inc
leave
jno
aas
les
dec
sub
inc
pop
mov
int
es
and
mov
jl
loope
inc
push
loope
jo
xor
ja
or
popa
sub
dec
dec
je
cmc
aad
sbb
lret
push
pop
test
xor
fstl
adc
lock
xchg
adc
dec
mov
mov
fs
or
cmp
lret
add
jns
push
add
cmp
sbb
sbbb
jle
dec
xchg
push
push
fsts
push
or
jo
aas
aad
or
insb
jns
fneni(8087
mov
sbb
cld
push
dec
xchg
mov
ss
fs
std
idiv
xchg
jmp
shrb
inc
push
aas
sbb
lret
jnp
xchg
mov
mov
loop
rolb
push
xchg
mov
mov
fistl
or
testl
mov
shll
or
lcall
pop
addb
xor
dec
cmp
cwtl
cmp
aad
das
mov
xor
fdivr
push
mov
mov
xor
cwtl
test
fldcw
rcrl
pop
xchg
iret
loope
add
inc
xchg
jl
lret
pop
movsl
mov
dec
addr16
das
call
test
out
inc
movlps
in
adc
repnz
lcall
add
xor
mov
cmp
mov
jge
sub
mov
bound
stc
stc
pusha
mov
insl
cwtl
xchg
adc
imul
mov
bnd
fadds
cmp
push
test
cmp
int3
inc
lods
and
jg
lahf
dec
dec
jns
sbb
mov
ja
cmp
jl
mov
jnp
stos
mov
jbe
xchg
enter
cmp
xorb
pop
daa
hlt
popf
lea
imul
xchg
fbstp
popf
push
mov
in
xchg
push
jp
aaa
movsb
arpl
jmp
pop
ds
test
xchg
mov
dec
inc
daa
cmp
jecxz
adc
clc
sbb
sahf
mov
cltd
lock
push
das
add
adc
mov
push
idivl
lcall
push
cmp
mov
lods
or
sub
adc
mov
out
adc
cwtl
daa
out
ret
lea
loopne
xlat
push
jno
mov
inc
jnp
loope
jmp
repz
nop
orb
pop
fnstcw
xor
les
pop
out
xlat
adc
aad
xchg
cmpsl
push
into
je
in
mov
shl
push
sub
js
pop
mov
mov
sbb
add
sub
cwtl
wrmsr
lock
xchg
into
push
push
inc
cwtl
lods
xor
lahf
mov
into
les
or
out
cmp
out
pop
test
test
sbb
mov
ds
cmp
add
sbb
mov
pop
xor
or
fidivrs
sub
je
ds
das
jno
ret
decl
mov
ja
add
scas
loope
int3
cli
adc
xor
addr16
sbb
xor
ja
stc
stc
pop
cwtl
adc
sbb
addb
test
and
lcall
lret
pop
lods
sbb
mov
xlat
lret
pop
mov
add
inc
lods
gs
inc
dec
cmp
test
rol
sbbb
clc
sub
and
sbb
dec
push
lea
or
mov
pop
or
neg
mov
xchg
push
push
cltd
xchg
adc
jbe
sahf
in
and
and
jae
add
inc
hlt
cmp
scas
sti
in
push
sbb
jg
out
scas
mov
xchg
or
loop
pop
ljmp
inc
sbb
rcr
xor
mov
inc
mov
xor
add
popa
das
ret
int3
jne
pop
sbb
mov
xchg
sahf
mov
sub
adc
adc
mov
cltd
sub
mov
sub
dec
xchg
xor
shr
scas
cmpsb
addl
lods
mov
cmp
sbb
idivb
ja
pop
adc
cmp
pop
test
sub
add
push
cli
ss
int3
and
or
pop
sub
bound
lods
push
mov
xchg
xchg
sub
xor
xchg
je
test
sub
cmp
lret
cmpsb
sub
jge
xchg
add
call
out
inc
pusha
push
sub
mov
lcall
out
xchg
push
sbb
push
jl
mov
pop
jmp
or
out
mov
shll
push
mov
lds
cwtl
inc
sbb
stos
push
cmp
sbb
aaa
in
ret
idiv
mov
das
fdivs
mov
pop
jnp
mov
sub
mov
mov
and
pop
xor
ret
cli
cmp
mov
pop
push
add
adc
das
xor
test
out
in
fdiv
dec
mov
roll
int
test
std
add
lcall
adc
or
stos
xchg
or
flds
and
mov
test
subb
mov
ja
mov
rcrl
mov
aas
orb
add
xchg
xchg
fwait
mov
movsb
or
mov
sub
cltd
orl
mov
jb
adc
add
aad
sub
ljmp
popa
pusha
addr16
mov
push
inc
fwait
push
pop
jnp
mov
inc
in
fimull
test
mov
imul
leave
icebp
dec
jne
paddq
popa
sti
sbb
iret
or
out
xchg
in
or
xchg
arpl
dec
sar
dec
xor
xor
fwait
and
rol
fmuls
icebp
cmp
fiadds
jb
pop
movsl
dec
pusha
std
mov
lods
sub
xchg
cmpsl
inc
fisubs
mov
mov
test
inc
clc
pop
jp
mov
jp
test
orb
das
iret
cli
bound
mov
inc
jo
or
push
jb
mov
shlb
loop
outsl
popf
jle
adc
mov
stc
mov
dec
rcll
out
test
mov
stc
mov
cmp
xchg
fwait
pop
iret
les
aaa
cwtl
ficompl
rcl
inc
in
shr
pop
arpl
cld
test
dec
pop
mov
fisttps
push
mov
stc
push
and
addl
jne,pn
add
mov
sbb
cmp
push
sbb
mov
add
mov
push
xor
jne
mov
cmp
sub
inc
fisubrl
dec
sub
ret
outsl
pop
cmpsl
cmp
shll
pop
mov
stc
cltd
lcall
fwait
mov
cmp
and
fiaddl
sti
ret
bound
mov
or
add
sbb
mov
and
mov
lahf
pop
loop
inc
mov
mov
stos
pop
inc
sti
add
clc
mov
pop
cli
and
fsts
leave
rclb
push
xchg
sbb
into
push
ret
loop
es
jb
inc
lret
push
mov
jg
repnz
lret
mov
sbb
aad
xchg
mov
pushf
push
jb
mov
jg
mov
jl
subb
cmpsb
or
sti
cmp
movsb
test
movsl
xlat
mov
std
bound
test
adc
xor
test
jmp
imul
pop
mov
sub
xorb
adc
add
loopne
xchg
mov
mov
add
and
and
call
cmp
fwait
jb
test
fsubs
mov
xchg
dec
repnz
incb
or
mov
jle
addr16
cld
add
imul
jb
cmpsb
rcrb
nop
xchg
push
sbb
mov
push
add
inc
fistps
incb
popf
jmp
nop
cwtl
aad
push
insl
sub
mov
getsec
or
push
dec
xchg
test
jbe
push
xchg
pop
mov
sbb
fldt
mov
push
nop
mov
sub
into
and
push
loope
lods
and
test
neg
ret
push
rolb
push
push
cmp
add
add
test
sub
or
jbe
sub
mov
scas
xor
adc
insl
rcll
jb
das
mov
clc
outsl
pop
cmc
xor
hlt
stos
jne
call
mov
push
push
jle
in
push
and
iret
mov
sbbl
add
fstl
out
adc
push
arpl
hlt
es
jle
mov
xorl
cmc
mov
inc
fldl
flds
dec
js
sub
sub
push
rorb
out
dec
ljmp
lret
cld
ds
test
and
jg
arpl
or
mov
movsb
inc
push
rorb
xchg
or
mov
aas
addr16
inc
rcrl
into
into
das
push
push
jns
stc
mov
push
stos
mov
xor
sbb
gs
mov
cltd
mov
mov
pushf
lock
bound
scas
push
cltd
rcrb
sarl
adc
dec
mov
pop
cmp
xchg
andl
daa
fmull
stos
jne
and
shll
cmp
lcall
sti
sbb
lcall
imul
sti
cmpsl
sbb
aam
sti
out
stc
imul
scas
add
xchg
mov
icebp
loopne
sbb
fnstsw
adc
insb
push
cmp
enter
inc
mov
and
inc
xchg
hlt
fdiv
arpl
add
lret
mov
add
sbb
lock
ret
icebp
cltd
or
and
cmc
pusha
jge
push
and
das
movsl
dec
pop
sub
mov
insb
xchg
mov
add
jno
mov
add
xor
adc
fs
outsb
mov
mov
push
push
xchg
rcll
rcrb
jns
jnp
cmpl
sbb
fwait
pop
idivb
xchg
and
or
outsb
push
or
outsl
outsb
pop
mov
in
scas
xchg
sbb
and
xchg
inc
test
and
fcmovnu
insl
mov
loopne
mov
sti
push
push
adcb
dec
adc
fimull
push
lock
push
pop
cmp
pop
mov
sarb
add
jl
pop
das
lret
lret
push
dec
pop
inc
ret
add
bound
das
scas
sub
lret
cmp
psrlq
mov
rorb
ffree
sub
xor
popf
mov
adc
dec
sub
roll
out
jle
mov
push
mov
cmp
fwait
popa
ja
mov
lret
stos
shlb
inc
rcrb
mov
pop
inc
cmpsl
pop
or
scas
imul
push
sub
clc
std
sub
mov
sbb
jecxz
dec
jns
mov
xchg
xor
push
pop
test
pop
in
sbb
mov
in
and
add
dec
cld
inc
cmp
mov
mov
dec
hlt
jnp
dec
push
fisubrl
pop
into
mov
imul
inc
int3
mov
jne
dec
out
shl
or
ljmp
mov
cmpsb
lahf
dec
mov
sub
sbb
incl
insb
mov
inc
mov
push
pop
cmp
add
or
lods
cmc
add
mov
mov
sbbb
mov
mov
push
popf
ss
push
push
in
ficoms
fidivl
out
push
arpl
ror
lock
jnp
push
imul
incb
je
outsl
ficoms
repz
push
cmp
mov
ret
std
dec
mov
mov
mov
incl
out
mov
outsb
sbb
or
dec
ljmp
iret
pusha
xlat
xor
inc
loop
sbbl
sub
popf
lret
or
xor
mov
bound
jb
sti
jg
mov
mov
test
sbb
mov
or
in
add
daa
mov
sub
mov
fs
add
aaa
clc
jb
popf
in
loop
shrl
and
stc
mov
mov
push
or
mov
leave
stos
add
sbb
xor
xor
outsl
push
and
adc
mov
xchg
pop
loope
hlt
fidivrs
and
jp
pushf
scas
mov
mov
cs
ret
jnp
fisttpll
push
loopne
sbb
cwtl
pop
push
pop
xchg
nop
pusha
xchg
outsb
and
jecxz
lea
push
dec
or
sub
bound
imul
jae
in
dec
aaa
enter
sarb
and
test
imul
xchg
add
enter
push
mov
adc
xor
stc
pop
es
sub
mov
outsb
ss
sbb
inc
sub
insl
add
xor
mov
adc
xor
dec
rol
inc
daa
adcl
rol
jmp
das
sbb
cmc
pusha
mov
mov
and
in
loope
inc
mov
add
ficoms
push
outsb
call
cmp
enter
sub
push
push
sub
inc
jb
mov
xchg
sub
test
push
dec
fcmovnbe
sub
sti
xchg
cmpsb
dec
push
cli
push
leave
pushl
lcall
les
cli
mov
xchg
int
in
sub
mov
mov
mov
jecxz
push
imul
out
add
xchg
cli
hlt
pop
sarb
mov
sarw
insl
lods
in
hlt
int3
jg
fcoms
repnz
push
out
sti
add
scas
inc
jl
fimull
testb
insb
and
test
fstps
adc
dec
jp
ret
xchg
xor
dec
movl
rolb
test
test
cmp
mov
dec
negb
push
sbb
lret
cltd
sub
movsb
mov
repnz
jecxz
pop
add
adc
cmp
sbb
mov
repnz
sbbl
sub
xchg
ret
iret
fs
pop
pushf
popa
adc
push
lea
pop
jmp
out
sub
jno
adc
jge
movsl
mov
mov
lods
jmp
sbb
cltd
add
rcl
push
mov
movsb
cmovo
mov
loop
pushl
stos
or
inc
mov
mov
fs
iret
arpl
cmp
ror
push
mov
or
jle
mov
pop
mov
cmpsb
lcall
xchg
es
dec
loope
sub
ret
xor
insb
cmpsb
mov
in
and
andl
iret
push
cltd
cmp
mulb
push
mov
mov
dec
mov
jg
fsts
mov
in
js
xchg
aas
add
call
inc
loopne
xorb
movsb
jo
cs
pushf
icebp
mov
mov
movb
dec
sub
ja
scas
lds
mov
adc
sbb
jns
fstpl
out
inc
outsb
dec
jne
xchg
mov
or
inc
in
outsb
roll
or
adc
lret
daa
cmp
scas
fwait
pop
mov
pop
jmp
and
sub
ds
sti
mov
sbb
sub
mov
movsb
or
add
push
jle
out
int
pop
fldl
lcall
mov
add
stos
sub
enter
sbb
movsl
lods
stos
jmp
and
mov
and
cmp
into
das
insb
call
mov
inc
pop
mov
in
mov
call
xor
lret
jb
jl
mov
sbb
pop
out
lock
add
movhps
xchg
mul
and
adcl
mov
or
ret
shll
mov
and
mov
push
lds
ret
add
pop
insl
jmp
jbe
inc
cli
fidivs
incl
arpl
jns
cmp
sahf
sub
test
and
sarb
movsl
mov
adc
arpl
lahf
cmpsl
and
push
fwait
mov
jp
bound
sbb
mov
mov
xor
stos
mov
aas
add
cld
push
lock
shrb
adc
inc
repnz
icebp
movsb
xchg
pop
movl
mov
or
cmc
inc
jle
insb
test
clc
scas
scas
xchg
mov
inc
data16
inc
scas
ror
add
daa
mov
inc
lods
loopne
sub
jo
mov
add
les
es
jecxz
daa
push
jp
sbb
call
outsb
in
lahf
bound
loopne
jmp
in
in
or
shl
movsl
sub
repnz
cmp
hlt
push
xchg
out
xabort
sti
mov
push
mov
lds
cs
mov
mov
into
jge
movsb
xchg
fdivs
enter
out
pop
icebp
jmp
mov
scas
sbb
das
ljmp
ds
shl
shlb
nop
mov
out
enter
cmp
pop
cmp
adc
roll
or
dec
pop
or
xchg
ljmpw
push
xchg
mov
cmp
sub
mov
popa
xchg
sub
jns
xor
push
mov
aaa
xor
aad
sub
ds
mov
inc
cmpsb
jo
push
mov
adc
dec
outsb
gs
mov
fbstp
fidivl
mov
enter
rcrb
loopne
or
cmc
shll
adc
xchg
add
stc
xor
cmp
xchg
pop
mov
mov
adc
xor
cmp
mov
sbb
leave
adc
pop
jno
add
adc
gs
xor
sub
cmp
push
add
sub
and
dec
cmp
and
stc
adc
sahf
jp
pop
daa
mov
jecxz
mov
lahf
sbbb
mov
je
je
sti
aaa
mov
outsb
enter
dec
sub
dec
popf
add
xor
jg
jp
das
add
adc
and
pushf
pop
sbb
push
cwtl
outsb
pusha
lcall
fmuls
dec
mov
push
sub
dec
push
pop
std
sbb
in
pop
mov
cmp
daa
or
cltd
stc
adc
mov
xor
adc
mov
jnp
out
das
push
xchg
out
lcall
add
ljmp
testl
adc
insb
jl
push
push
jge
jp
sbb
mov
sahf
and
lods
enter
mov
and
sbb
mov
testb
adc
mov
int3
rdmsr
sti
cmpb
mov
cs
jbe
stc
adc
pop
or
xor
jnp
or
jb
jne
cmp
adc
imul
inc
fsts
jl
sbb
leave
xchg
aaa
hlt
xchg
pmuludq
scas
leave
stc
fisubrl
cmp
mov
xchg
add
mov
cmpsl
inc
mov
fistpll
lahf
lret
inc
xor
xor
fnstenv
adc
inc
fsubrs
sub
pop
aaa
je
xchg
shr
outsb
rorl
addr16
cmp
jmp
cwtl
sbb
push
push
push
gs
and
add
test
pop
popa
notb
test
cmpsb
cmpsl
lret
aad
inc
add
add
xor
ljmp
je
jb
fldenv
fmul
sbb
cli
inc
or
jno
pop
lods
pushf
mov
xor
cli
pusha
push
outsb
lahf
es
mov
pop
mov
xchg
add
or
sarb
call
push
pop
in
rorl
lahf
xchg
in
in
in
inc
push
inc
ds
dec
pop
push
and
cli
sbb
cmpb
outsb
sub
addl
ret
nop
imul
scas
push
mov
inc
ret
test
sub
outsb
arpl
jnp
fmuls
out
jbe
pop
dec
ds
or
shrl
in
js
imul
fstps
sub
pop
loop
popf
mov
push
ret
cmpsl
popa
jl
cmp
leave
mov
sbb
pop
and
adc
or
dec
scas
leave
push
shr
in
enter
jnp
cmpsb
xchg
mov
pop
xor
and
jnp
lods
mov
dec
ret
lods
test
inc
mov
or
jl
jno
mov
outsl
dec
sub
pop
ficompl
movsl
inc
mov
and
insb
pop
dec
rcll
test
jbe
pushf
pcmpgtb
cmpsb
add
test
rclb
push
stos
fs
inc
nop
pop
movsl
pop
cmp
cwtl
or
push
rcll
in
adc
pop
xor
sub
aad
mov
cmp
in
and
jno
mov
or
mov
addr16
inc
jb
push
dec
testl
mov
mov
mov
xor
out
jns
out
bound
iret
leave
cmc
ret
pop
aam
je
pop
push
pop
or
xchg
mov
sbb
xor
lahf
sbb
and
mov
loopne
mov
mov
xchg
clc
shl
sbb
stc
adc
mov
jecxz
iret
leave
push
cmpsl
sbb
adc
jmp
in
shrl
mov
sub
or
jg
orb
in
push
fsub
sub
lods
cs
rorl
jb
adc
push
sbb
add
in
cmp
scas
outsl
cmp
pop
iret
in
inc
fisttpll
sbb
lcall
fs
bound
ret
mov
ficoms
imul
aaa
cmpsl
mov
inc
iret
repnz
mov
inc
sahf
mov
rolb
mov
push
mov
cmc
cmp
mov
ja
test
sub
popa
insb
arpl
push
mov
dec
push
or
jns
jno
inc
jne
inc
sbb
and
adc
jl
fstps
adc
icebp
orb
adc
xlat
pop
dec
andb
je
mov
pop
sub
loope
pop
rorb
mov
stc
clc
outsb
call
cmp
push
pop
add
mov
fucomp
arpl
movsb
enter
fs
std
call
jl
loopne
mov
testl
mov
jg
imul
push
inc
xchg
mov
clc
icebp
sarb
dec
js
cltd
mov
push
leave
outsl
loop
enter
adc
sbb
enter
out
dec
jp
mov
push
xchg
xor
sub
mov
xchg
mov
movsb
push
repnz
sbb
fmulp
inc
mov
pop
imul
js
hlt
cmp
or
pop
add
test
pop
xchg
lds
shl
shrl
xchg
mov
out
inc
aad
push
jae
adc
shrl
scas
dec
fildl
push
jmp
cltd
popf
cs
lea
pushf
push
add
imull
sbbl
fcompl
sbb
push
xchg
adc
in
mov
inc
pop
mov
jecxz
lock
icebp
cs
stc
mov
add
js
lea
icebp
lock
push
jmp
addr16
sti
into
cmp
test
dec
insl
dec
adc
or
pop
mov
fmull
add
lock
add
sub
movsb
sbb
push
inc
adc
inc
jo
push
movsl
ss
fldt
mov
and
pop
adc
cmp
mov
mov
xor
loope
pop
das
and
push
sahf
pop
in
adc
dec
push
test
rorb
gs
mov
pop
repz
lret
out
loop
stos
sbb
mov
out
mov
mov
lcall
inc
add
push
and
dec
or
mov
cmc
fucomi
adc
sti
scas
push
jecxz
sub
shlb
pop
jge
scas
ret
xchg
jle
push
mov
pusha
movq
lret
or
mov
outsb
inc
mov
fiaddl
insb
sti
dec
shlb
rorb
ret
fwait
mov
ja
xchg
scas
sahf
testl
sbb
mov
mov
pop
jns
mov
loopne
lret
call
call
in
stos
sbb
dec
adc
aaa
or
mov
or
inc
fsubrs
imul
pusha
or
or
dec
xchg
xchg
dec
enter
dec
xchg
push
push
repz
or
int3
add
loopne
out
pop
fstp
xchg
cmpsb
mov
or
call
xchg
cmp
pop
notl
mov
shll
int
or
dec
push
mov
jle
insb
loope
repnz
shll
dec
enter
add
es
dec
inc
ljmp
inc
cmp
movsb
lret
cmp
and
adc
dec
fidivrs
movsl
xchg
pop
sbb
cmc
mov
mov
pop
das
jns
sti
mov
inc
cltd
cs
mov
cmp
and
mov
cld
add
push
bound
xchg
pop
sbb
sti
loopne
aas
mov
mov
or
fisttpl
mov
lods
mov
aaa
movsb
mov
xchg
xchg
ret
jb
je
mov
add
int
popf
add
cmp
sub
inc
add
fsubrs
jns
push
push
mov
xchg
cmp
pusha
enter
xor
gs
jle
testb
or
mov
cmovp
das
xchg
ja
xchg
gs
jecxz
or
das
gs
pop
loop
pop
add
push
push
out
push
subb
fstps
imul
and
push
xor
cld
fucomi
pop
jns
test
jecxz
inc
pushf
in
shll
or
xor
and
mov
push
inc
pop
and
dec
inc
test
jae
inc
xor
mov
mov
cmp
inc
inc
jp
cltd
call
push
mov
pop
fidivrl
sti
add
rcll
mov
repnz
int
add
popf
and
push
cmova
xchg
incb
sub
mov
cmp
jne
adc
rol
ja
imulb
lcall
pop
push
pop
cs
and
lods
fsts
mov
imul
sbb
outsb
jg
mov
nop
lea
and
mov
idivb
call
inc
adc
mov
add
adc
scas
inc
sbb
jo
out
mov
xchg
dec
sahf
out
jmp
sti
cld
cwtl
jle
cld
aam
lret
enter
shr
dec
inc
mov
or
cltd
test
into
pop
mov
nop
push
cmp
sbb
jmp
cmc
mov
icebp
aaa
push
mov
insb
out
push
iret
push
cmpsl
daa
or
fsubrp
jns
xchg
inc
pop
sub
mull
and
pop
jl
ds
push
push
push
jle
jl
sub
lea
push
imull
jbe
cmp
and
pop
cmp
out
andl
pop
cmpsl
sbb
xchg
fidivrs
loope
or
dec
sub
lods
inc
adc
test
dec
sub
sub
inc
pop
push
sub
pop
loop
dec
cmp
mov
aaa
push
cli
and
xchg
xor
dec
sarb
test
fs
push
cmp
fisubrl
adc
mov
dec
sahf
cs
fsts
negb
lcall
scas
inc
and
xor
mov
bnd
into
pop
cltd
fisubl
add
xor
pop
shlb
out
cmp
leave
in
inc
sub
pop
push
and
sub
or
rcll
fnstenv
insl
jecxz
xor
cwtl
inc
adc
testl
stos
jnp
movlps
push
imul
mov
sub
subb
mov
icebp
clc
imul
or
cmp
scas
ret
int3
adc
mov
mov
test
sub
pop
in
cltd
mov
mull
ja
push
stc
sbb
lret
inc
or
hlt
xchg
push
cld
and
imul
sar
mov
fs
add
aad
jle
dec
jb
lock
dec
ret
stc
mov
iret
xorl
popa
nop
jno
leave
push
outsb
jecxz
out
and
ret
mov
push
mov
cmp
cmp
add
push
std
inc
or
aad
imul
cmpsl
int3
xor
pop
jmp
mov
mov
cmpsb
jl
push
cmc
std
idivb
add
lods
add
std
cmp
ss
and
ficoml
ss
or
push
gs
movb
scas
jns
lret
or
test
jns
push
sub
stos
xchg
hlt
add
dec
imul
pop
dec
dec
sbb
out
push
int3
ret
mov
sbb
dec
add
in
arpl
mov
loop
mov
cmc
dec
loope
out
mov
pop
jg
mov
mov
fadds
jmp
pusha
xchg
std
pop
fsubrp
mov
cmp
jmp
dec
mov
mov
sub
sbb
loopne
sar
mov
imul
mov
cmp
or
pusha
sbb
dec
fxch
sbb
ds
jmp
pop
cmp
jge
cmpb
jecxz
jo
xchg
movsl
imul
loope
or
outsb
cmp
inc
and
cmp
arpl
mov
sbb
fwait
out
push
je
xchg
out
or
cmp
test
icebp
xor
dec
push
push
mov
cmp
or
xor
or
imul
je
lea
into
and
sti
jb
out
mov
stos
test
sub
hlt
fisttps
xor
rcr
shl
inc
cmp
lret
pop
push
fldlg2
dec
push
in
push
imul
cmp
add
sbb
dec
mull
inc
fistpl
daa
leave
in
and
int
mov
loope
cmp
push
jge
xchg
pop
jp
mov
sub
shrb
inc
xorl
popa
pop
push
js
icebp
stos
mov
out
mov
sahf
cmp
add
inc
aaa
or
das
pop
pop
pop
rorb
outsl
mov
aad
cmp
stos
les
push
jb
add
ret
xchg
mov
into
cmp
fidivrl
ret
or
xchg
push
cmpsl
hlt
aaa
shlb
in
jns
out
dec
inc
inc
cmp
cltd
xor
mov
dec
cmp
xlat
mov
psubusw
popa
push
jp
mov
push
or
jl
subb
shll
ljmp
sahf
fcmovbe
mov
jnp
dec
roll
or
cwtl
les
dec
lods
sbb
jnp
cmp
das
imul
xchg
pusha
test
dec
cs
lods
cld
test
insb
sub
cmp
add
mov
xchg
mov
adc
or
loope
gs
ss
fwait
cmpsb
in
mov
fmulp
and
adc
or
cmp
pop
sub
add
leave
sarl
mov
dec
ljmp
stc
mov
iret
popa
shll
jmp
mov
lock
sti
shll
sbb
jno
repnz
insl
push
call
add
imul
data16
test
popf
push
sar
and
sarb
jo
adc
out
add
roll
sub
xchg
sbb
in
mov
push
imul
inc
arpl
test
dec
repnz
sub
loope
cmp
pop
cmp
hlt
adc
fisubs
pop
and
outsb
mov
shrl
add
in
arpl
jecxz
pop
dec
lret
mov
loop
xor
jo
std
jae
cwtl
insb
rcrb
es
mov
or
cmpsb
arpl
imul
cmp
and
jg
sbb
mov
imul
push
push
pop
dec
pop
inc
xchg
or
nop
ret
jbe
rclb
xor
mov
neg
ds
pop
sahf
fnstcw
xor
jge
cltd
shll
mov
rclb
iret
pushf
movsl
insl
mov
add
inc
jnp
lcall
fistpl
iret
test
loop
adc
inc
mov
cmp
sub
loopne
into
push
rcrl
jmp
jns
jmp
jmp
js
scas
xor
ffreep
sbb
fnstsw
push
lds
rorb
pop
imul
je
dec
dec
mov
insl
and
mov
clc
pop
xchg
add
or
push
dec
insb
aad
popf
int
pop
jge
sbb
push
sbb
jmp
imul
fdiv
xor
repnz
popf
loopne
or
mov
pop
movl
mov
add
mov
xor
mov
or
sub
inc
xchg
out
dec
ror
mov
mov
into
push
sahf
popa
stc
or
aaa
fmuls
sbb
div
or
cmp
adc
add
add
push
aas
push
xchg
out
aaa
cltd
call
mov
cmp
out
fbld
pop
pop
xor
sbb
jnp
nop
test
inc
mov
inc
lret
inc
repnz
adc
push
jo
dec
xor
inc
mov
mov
ret
adc
dec
jne
repnz
jp
jae
adc
hlt
cmp
xchg
pop
add
stos
mov
loopne
cmp
lahf
xchg
sub
xchg
repnz
cmp
cmc
mov
cmp
test
lret
and
jle
sahf
lahf
adc
lods
lret
test
mov
test
xchg
push
clc
sub
inc
xchg
jb
fbld
aad
sarl
daa
xchg
shlb
dec
add
fistps
lahf
nop
cs
mov
push
inc
jns
mov
ljmp
in
sarb
inc
scas
std
mov
adc
sahf
jge
mov
and
in
mov
push
loope
or
push
movsl
in
fadd
call
lds
cmpsb
addr16
push
pop
ss
clc
ret
sub
iret
inc
gs
lret
cmpsl
add
ror
loope
js
aaa
add
mov
sbb
jle,pn
shl
push
mov
mov
mov
leave
pop
mov
mov
inc
fildl
jmp
xchg
sbb
jne
inc
hlt
push
pusha
mov
test
addr16
adc
ds
fisubs
add
test
hlt
sub
decb
les
add
push
ret
jns
jb
lcall
and
ss
lahf
mov
sub
clc
xchg
std
in
decb
mov
jmp
mov
push
leave
dec
jmp
jecxz
mov
cwtl
mov
faddl
fwait
pop
lea
cld
ficoms
out
negb
scas
lock
hlt
pop
mov
popf
xchg
pop
cmpl
jl
pop
mov
mov
dec
and
add
mov
lea
cmp
pop
xchg
push
mov
sbb
fstpt
and
and
add
xor
push
push
inc
gs
xor
movsl
pushf
cmp
pop
xorb
lea
movsb
cli
popf
idivl
xchg
push
sbb
mov
adc
out
mov
movsl
ret
xor
jp
xor
push
fcompl
mov
jae
jns
andl
mov
cmp
dec
xlat
leave
jbe
xchg
ja
and
sarl
roll
xor
sarb
xchg
mov
or
es
fnstcw
and
jno
stc
enter
or
sub
stos
sub
das
push
ljmp
test
ja
mov
or
or
scas
pop
xor
adc
into
mov
cmp
lods
mov
xchg
inc
push
je
jge
push
loop
inc
cmp
arpl
and
xchg
adc
push
pop
imul
lahf
pop
dec
int3
fisttps
fstp
int
dec
inc
mov
pushf
sbb
mov
call
mov
int
and
lods
and
enter
rolb
enter
dec
push
sub
jmp
sub
test
cmpsl
rcrl
cmp
call
jge
push
sub
and
pop
cmp
pusha
outsb
test
add
cltd
push
mov
xor
xchg
jns
fbld
adc
mov
in
mov
sarb
int3
xchg
jecxz
outsb
push
roll
bound
leave
jae
int3
loopne
sahf
cmp
in
and
lea
pop
jns
aas
rcll
dec
ja
xchg
nop
pop
push
add
fnsave
pop
push
movsb
jmp
out
test
sbb
sub
push
lcall
xchg
mov
sub
sub
shll
cmp
adc
arpl
xlat
test
pop
sbb
cli
ja
cld
xor
and
pop
sbb
xchg
in
sahf
or
jmp
js
sahf
fwait
je
or
xchg
sub
jmp
out
push
sbb
iret
or
and
cwtl
jne
dec
adc
gs
adc
pop
inc
adc
inc
or
or
call
jns
loopne
mov
mov
mov
mov
sub
pushf
push
popf
push
sarl
ret
icebp
dec
mov
jg
sar
enter
xchg
filds
aam
fadds
mov
std
test
lret
lock
lods
decl
cmp
stos
sti
mov
lods
dec
and
sbb
inc
je
int
outsb
or
pop
xchg
imul
dec
mov
mov
mov
cmp
inc
dec
or
push
cmpsl
aam
jp
lret
pop
jmp
xlat
insl
adc
iret
outsl
bound
and
ret
cmp
mov
xchg
sbb
ficoml
jnp
pushl
cltd
stos
das
add
cmp
sub
pop
cmp
and
pop
enter
cmc
out
stos
mov
nop
packssdw
in
push
jo
dec
push
sub
lods
xor
outsb
push
addr16
fbstp
imul
fdiv
pushw
loope
aaa
fnstcw
adc
adc
int3
or
push
lds
outsb
dec
lock
loope
cmp
jns
pop
fdivl
scas
dec
mov
test
cmp
repz
or
jnp
mov
push
push
inc
cld
mov
mov
cld
add
adc
xor
xchg
dec
adc
sbb
mov
out
push
testb
js
jb
stos
shlb
inc
fsubrp
jp
xor
inc
add
lgs
mov
cld
shlb
mov
lea
jmp
gs
sub
push
frstor
cmpsl
cmpsl
in
sbb
push
inc
sbb
sbb
push
rorb
sub
imul
mov
mov
mov
jmp
add
mov
cli
mov
sbb
pop
xchg
shlb
inc
in
hlt
add
mov
insb
sbb
fnstcw
clc
mov
mov
add
push
ret
jmp
mov
inc
fbstp
lcall
dec
push
out
push
pusha
mov
leave
dec
xchg
pop
shrb
incl
xor
add
push
icebp
insb
or
incl
and
push
mov
xchg
push
lahf
fcoms
and
or
xor
pop
loopne
test
imull
add
stc
sub
push
add
repnz
add
or
rorb
adc
push
pop
ret
push
pop
mov
int
insl
mov
mov
testb
and
add
js
fnstsw
pop
bound
jno
add
daa
sbb
nop
sbb
mov
jb
aas
mov
cwtl
adc
inc
arpl
ret
sub
dec
sbb
cltd
jmp
mulb
mov
xchg
scas
adc
aad
sbb
inc
xor
test
incl
lret
loopne
daa
xchg
fadds
fsubl
testl
adc
lcall
push
lods
dec
test
push
adc
push
inc
decl
push
leave
mov
jmp
das
fdivrl
shl
jo
outsl
dec
gs
xchg
dec
mov
pop
xor
cmp
ljmp
cltd
inc
movb
push
inc
shlb
jnp
sbb
psubq
push
adc
pusha
add
outsl
test
mov
xchg
loopne
andl
jge
push
movsb
ret
sub
adc
loope
mov
adc
int
lock
mov
mov
fistps
cli
jb
pop
push
inc
push
and
add
dec
dec
ficomps
orl
xchg
sbb
aad
jge
loopne
jg
popa
cmpsb
jns
mov
or
je
jae
sbb
pop
and
inc
call
lahf
jmp
pop
xor
sub
dec
push
inc
dec
or
adc
orb
cmp
jge
jg
enter
loope
rolb
mov
push
scas
push
dec
xor
add
cmpsb
jo
ss
push
jbe
loop
inc
insl
pop
leave
sbb
add
mov
xchg
fiadds
frstor
mov
jns
mov
mov
sti
cmp
das
arpl
test
sarb
adc
fnsave
jnp
sub
inc
hlt
sbb
cld
imulb
fnsave
shrb
in
xor
test
inc
icebp
mov
movsb
cmc
xor
jno
cmp
dec
enter
inc
fldcw
jns
xor
ljmp
pop
out
into
mov
pusha
in
leave
imul
cwtl
cmp
outsb
inc
inc
movsl
or
in
mov
add
clc
nop
xor
xchg
into
outsl
and
incl
adc
xlat
jle
and
cmc
out
adc
sarb
ficoml
push
push
push
cmpsl
jbe
in
in
imul
psllw
sbb
inc
add
pop
roll
sbb
mov
sbb
gs
inc
fs
and
adc
pop
mov
movsb
cmpsl
mov
dec
mov
and
test
dec
xchg
in
sub
push
push
enter
jbe
xchg
lods
scas
ljmp
cmp
pop
icebp
je
and
push
leave
movb
dec
add
hlt
mov
cmpsb
and
lods
xchg
sub
push
outsl
icebp
and
ret
into
fsub
xor
sbb
and
insb
pushf
adc
sub
xor
daa
push
mov
les
fldl
sbb
xchg
lods
sahf
push
or
add
mov
push
loopne
or
dec
ds
stc
fs
mov
arpl
fsubrl
sti
or
adc
bound
adc
jge
pop
push
or
data16
rorb
lock
int3
jp
dec
jg
adc
push
scas
into
mov
jbe
es
xchg
repz
sbb
dec
daa
mov
sbb
call
lcall
adc
push
cmpl
xor
push
adcl
sub
sub
mov
pop
push
jp
and
cmpsb
imul
outsl
xor
push
rolb
and
cmpsl
mov
add
ja
pop
mov
dec
movsb
adc
fwait
orb
cmpsb
lret
jmp
cmp
popa
dec
jae
jo
gs
mov
pop
jle
or
bound
dec
lret
xchg
push
mov
xlat
nop
lods
popf
lods
dec
pop
rcll
push
movsl
sub
jp
jbe
xchg
jge
iret
outsl
les
mov
xchg
clc
fs
sbb
xor
and
mov
popf
mov
inc
inc
xchg
jmp
mov
sahf
xchg
rorl
cmp
sub
repnz
lea
jno
or
inc
ljmp
mov
mov
pop
ss
or
adc
push
mov
call
cmp
rorl
idivl
imul
ds
xchg
sar
scas
test
movsb
mov
outsl
mov
mov
aam
addr16
jle
adc
jg
mov
jg
inc
mov
ds
ficoms
jmp
pop
and
mov
or
add
pop
inc
repz
push
loopne
fwait
cmp
lcall
cmpsl
pusha
adc
or
lods
adc
shrl
xchg
aam
inc
gs
clc
popa
ljmp
mov
dec
cmp
call
push
xchg
sub
insb
ret
gs
dec
push
mov
outsl
in
jno
mov
xor
sahf
cmp
cmp
xchg
dec
clc
adc
jnp
push
push
or
data16
jg
outsb
and
mov
dec
xor
add
add
jge
inc
or
jb
add
cmp
sti
in
cmp
and
lcall
dec
arpl
fistpl
loope
insb
dec
or
loop
mov
xor
xor
add
loop
dec
out
insb
pop
sbb
xor
lods
lea
push
inc
sbb
int3
mov
call
or
add
rol
pop
out
sub
and
popa
outsb
xchg
cwtl
mov
int3
push
roll
out
push
or
mov
sbb
int3
sbbl
xor
sbb
push
addr16
sbb
adc
movl
and
mov
or
test
dec
xchg
sbb
inc
mov
iret
dec
test
or
sbb
xchg
neg
mov
push
push
xor
push
mov
cmp
frstor
repnz
data16
or
mov
pop
mov
pop
add
push
jo
push
aas
es
bound
push
enterw
xchg
jp
je
xchg
gs
movsl
dec
fcompl
dec
sbb
mov
mov
sub
or
mov
inc
fisubrl
jb
pop
lea
lods
jmp
outsb
shrb
push
adc
dec
jno
sbb
bound
jbe
pop
jns
xor
popf
fwait
jne
sbb
xor
sti
dec
repnz
mov
out
into
out
pop
out
loope
insl
and
shr
sub
add
idiv
lods
ljmp
in
sub
cmpsb
xchg
add
ljmp
daa
loope
and
mov
fistpl
iret
xchg
scas
dec
push
push
out
jnp
xor
in
xchg
jp
outsl
inc
cmp
xchg
xchg
ds
outsb
js
ret
adc
daa
std
leave
hlt
ds
inc
xor
lds
inc
sbb
mov
nop
loopne
jbe
add
dec
push
cmc
dec
shrb
push
adc
jb,pt
out
sbb
mov
sbb
ss
push
push
sbb
dec
adc
inc
jmp
gs
mov
mov
scas
jnp
cmp
dec
cmp
ja
cmp
mov
mov
adc
es
ljmp
cld
pop
push
mov
jbe
and
add
cmpsb
fstps
stos
fistps
sbb
scas
dec
dec
testb
add
enter
sbb
push
xor
es
test
or
nop
addb
inc
pop
pop
fwait
xor
sarl
sub
call
in
pop
pop
fnstsw
enter
aam
stos
imul
ja
and
dec
enter
dec
insl
gs
ret
xlat
cmp
jecxz
jo
jl
sbb
adc
sbb
test
insl
loopne
or
cmp
and
stos
fisubrs
or
pop
xchg
jo
jne
mov
lret
inc
mov
inc
loop
int3
inc
lret
roll
mov
jnp
out
mov
cmp
lods
testb
or
xchg
push
or
cmp
sub
fdivl
or
sub
cmp
jp
lcall
rcr
fisttpl
xor
bound
add
and
jge
dec
pop
popa
xor
pop
push
inc
inc
mov
fs
in
mov
imul
xchg
push
jle
pop
jge
lock
int3
pop
xchg
mov
and
movsl
inc
jns
and
stos
push
sahf
push
cmp
xlat
adc
mov
fisttpl
mov
shrb
rcll
push
jmp
clc
or
cmp
sti
jno
mov
loope
cmp
push
jge
cmp
fs
loopne
push
imul
push
mov
mov
pushf
aam
pop
inc
or
push
cmpb
mov
xchg
cmpl
xor
xchg
dec
add
jle
xchg
mov
int3
les
out
xchg
jp
sti
sub
pop
imulb
or
jnp
loop
adc
mov
out
push
cmp
iret
sub
stc
push
mov
jp
sbb
fldl
inc
popa
lahf
mov
lods
inc
mov
inc
and
xor
andb
sti
jnp
adcb
subb
fndisi(8087
in
leave
or
push
xlat
popl
ret
outsb
lcall
push
mov
mov
test
out
movsb
dec
roll
icebp
pop
jb
push
or
fwait
mov
xor
push
aaa
das
incl
fldt
cmp
sub
fimull
dec
xor
mov
jnp
mov
leave
lahf
and
pushf
test
fisubrs
xchg
dec
jae
iret
ss
lahf
call
scas
dec
xorl
icebp
ret
push
test
in
inc
les
push
loopne
pop
dec
fs
lock
pop
cmc
push
jle
fnstcw
jb
adc
push
fstpt
or
daa
mov
loopne
cmpsb
pusha
or
jae
int
adc
xchg
xchg
test
push
pop
add
scas
add
hlt
rcrb
sbbl
rorb
push
push
mov
or
pop
mov
adc
jns
mov
enter
xchg
testl
js
shrl
jl
das
stos
and
insl
mov
and
andl
add
incl
jmp
and
fisttpll
xchg
add
hlt
jbe
mov
xor
ja
sub
repnz
xchg
inc
insl
mov
sarl
fisttps
mov
aam
and
mov
cld
hlt
ret
iret
leave
xchg
bnd
xor
cmp
jp
ret
xor
or
sub
pop
add
sub
rclb
xor
xchg
lds
pop
movsb
jne
adc
cmp
add
lret
or
pop
sub
addr16
xor
jae
mov
iret
inc
inc
xor
outsb
stc
stos
jmp
test
cmpsl
inc
jle
stos
jg
stos
or
add
les
pusha
jno
sbb
int3
mov
jmp
pusha
movl
pop
xor
stos
repnz
and
faddl
in
not
pushf
xchg
push
clc
loop
xchg
fstl
nop
rcrb
lock
int3
sub
mov
out
pop
add
push
jmp
sahf
cmp
adc
push
and
stc
or
movsl
out
pop
das
fbstp
push
push
mov
scas
xlat
inc
push
cs
push
xchg
movsl
cmp
cwtl
lcall
mov
and
loopne
mov
aaa
clc
jb
test
sub
lods
cmp
rorl
popl
movsl
and
into
jne
or
movsl
push
out
inc
or
insb
xchg
daa
repz
push
scas
inc
push
mov
ds
inc
nop
pop
push
idivb
push
fwait
mov
imul
push
faddl
test
or
std
cld
xor
jb
sub
mov
sub
andl
dec
inc
stc
ret
sub
syscall
cltd
add
sbb
fst
add
ret
scas
movsb
cwtl
fstl
pop
mov
out
pop
add
dec
or
test
pop
adc
fcmovb
jl
lahf
aas
into
pop
or
std
jmp
add
scas
sub
mov
bound
fdivl
cmp
fs
mov
add
adc
xchg
add
and
in
stos
dec
pop
in
inc
xor
rorb
fnsave
add
or
ficompl
clc
adc
insl
xchg
sub
test
ja
jno
inc
test
outsl
adc
int
testl
push
clc
or
ds
mov
mov
mov
ret
dec
mov
mov
shl
xor
lea
push
xchg
and
mov
clc
jae
push
xchg
stc
sti
mov
cld
xchg
mov
jns
mov
decl
pop
mov
movsl
add
popa
sar
push
outsb
sti
xchg
xlat
outsb
int3
mov
mov
in
xchg
lahf
rorl
fisttpll
xor
aas
daa
out
out
push
fsubrl
imull
mov
jmp
call
andb
sub
jle
cmp
inc
and
lcall
subl
fisubl
es
or
insb
cs
jae
push
push
xchg
xchg
pop
loop
pop
fsubrl
mov
sti
xorb
repz
ficoms
ucomiss
mov
fwait
cmp
xchg
mov
sbb
insl
lcall
rolb
lods
push
mov
stc
arpl
add
in
insb
pop
xor
movsb
pop
sub
jno
js
xacquire
hlt
insl
dec
imul
ucomiss
aam
cmp
or
repz
lods
pop
fcom
dec
int
jl
imul
std
or
sbb
inc
adc
pop
sub
inc
inc
movsl
in
lret
arpl
scas
cmpsl
sub
mov
imulb
add
ret
or
and
lahf
popa
pusha
cli
lcall
xlat
test
sub
xchg
cltd
dec
mov
sbb
xchg
mov
jmp
pop
add
cmp
test
lock
fs
adc
mov
sbb
mov
xchg
mov
jae
push
cmp
mov
lds
or
mov
ljmp
fcoms
or
cld
sbb
mov
push
mov
sbb
in
and
iret
in
jno
es
mov
push
sbb
pop
iret
orb
sub
mov
jmp
dec
mov
iret
push
cmp
dec
sub
xchg
lea
sub
xchg
mov
jecxz
data16
pop
in
test
sub
shlb
cmp
lcall
setne
loop
or
cs
dec
aaa
sbb
lret
insl
mov
ljmp
out
pop
dec
jmp
mov
xor
push
mov
pop
std
add
mov
es
es
pusha
mov
rorl
push
fcmovu
xlat
lret
and
push
bound
xchg
not
aaa
xlat
std
add
cmp
or
fistl
sub
popl
callw
inc
push
loop
int3
ret
iret
and
arpl
sahf
jle
in
out
stos
jns
cmc
push
add
sbb
fwait
push
ljmp
cmp
out
pop
stc
push
lea
pop
jle
mov
aas
neg
fdivrl
push
and
out
cmp
xchg
sub
loop
push
sbb
push
lahf
pop
bound
lods
cmp
cs
xchg
add
sub
addr16
cmpsl
sbbl
rorl
in
leave
mov
aam
shll
push
pop
int
shlb
sub
mov
cmp
test
jecxz
mov
inc
or
add
sub
inc
push
sbb
leave
test
insl
jle
sbb
mov
jl
pop
sbbb
pop
xor
mov
scas
subl
xor
or
jmp
test
call
mov
pop
sub
push
push
fcoml
je
mov
inc
bound
jb
std
inc
in
stos
add
inc
jmp
shll
xchg
adc
jnp
jb
cli
jge
pop
scas
jno
push
imulb
mov
push
test
movsb
cmp
dec
xor
testb
insb
xchg
jbe
dec
std
xchg
inc
push
sbbb
add
inc
scas
adc
incl
pop
imul
add
cmpsl
add
daa
nop
inc
sti
int3
mov
dec
mov
jge,pn
inc
xchg
xlat
xchg
xchg
jl
xor
pop
pop
insb
jle
sbb
cwtl
loopne
mov
dec
adc
dec
sub
inc
cmp
outsb
fimuls
clc
std
xor
pop
inc
cmp
int3
fists
push
insb
or
mov
testb
mov
adc
scas
jge
push
cmp
ret
lret
mov
add
pop
cmpsl
mov
testl
insb
sarb
aad
pop
add
cmp
orb
out
dec
das
push
js
xchg
in
fistps
int
jne
mov
sub
dec
sub
sbb
cmp
and
mov
fstl
xchg
faddl
divb
out
testb
push
loope
lret
test
shr
repnz
sub
jbe
sbb
in
xor
add
ss
cmc
jg
push
stc
scas
cmp
and
lock
aad
call
dec
sbb
xchg
sbb
jmp
leave
jp
lret
mov
jo
sbb
movsl
test
insb
repz
sub
pop
mov
lds
push
xor
scas
adc
adc
jmp
pop
add
movsl
mov
cmpsl
xor
enter
pusha
out
push
sub
popf
or
sbb
in
test
pcmpgtb
aaa
pop
test
loop
popa
lock
jg
mul
inc
int3
push
pusha
test
xchg
inc
jnp
sbb
scas
test
dec
push
mov
cld
jns
andl
or
cmc
sbb
sbbb
icebp
mov
lret
push
aam
je
mov
inc
fcoml
fildll
or
mov
jae
or
xchg
faddl
lds
sub
lods
xchg
adc
stos
adc
push
outsl
stc
js
jg
lahf
int
add
ret
stos
mov
xchg
bound
or
xor
ret
fidivrl
push
dec
je
inc
sbb
jl
mov
fsubrl
sbb
push
adc
xchg
xor
inc
mov
decl
lea
mov
fistl
mov
jp
es
mov
or
xchg
xor
orb
mov
sarl
sbbl
push
loopne
cli
dec
lret
jge
lods
addr16
test
push
mov
xorb
mov
cmp
jb
inc
sbb
pop
mov
mov
ds
mov
cmp
inc
sbb
rorl
dec
mov
fisubrs
pusha
lods
mov
add
scas
mov
xor
incb
push
mov
bound
fwait
lock
ror
stos
and
xor
mov
pop
xchg
xchg
push
jne
pop
outsb
sbb
notl
enter
ljmp
and
cli
or
stos
neg
xor
dec
rcll
setbe
popa
cmp
test
shrb
dec
inc
or
fcoml
or
xor
push
sub
sarb
arpl
xchg
xor
leave
data16
mov
movsb
shr
mov
movsb
xchg
inc
mov
push
loop
add
enter
cld
jle
fisubs
incl
nop
aas
sahf
push
bound
sahf
int3
out
jno
add
std
test
push
insl
sti
stc
movsb
and
in
loopne
xor
in
xchg
sub
leave
je
enter
sub
add
pop
xor
mov
loope
outsl
je
andb
outsb
and
sbb
pop
jno
xlat
push
lret
std
gs
lock
xchg
pushf
ret
cld
xchg
int
inc
int3
clc
inc
lods
sbb
das
lock
lock
sbb
repnz
mov
adc
add
ret
pop
shrb
xor
xor
xchg
mov
mov
aam
mov
std
mov
sub
lods
sahf
dec
and
rclb
mov
aam
cwtl
cmpsb
lods
les
jp
testb
jb
xchg
rcl
mov
pusha
pop
and
cmp
lcall
repz
add
pop
fwait
rcrb
ljmp
pushf
dec
scas
flds
jmp
popa
pop
sub
jno
imul
repz
xor
xchg
lods
adc
mov
fnsave
sbb
sbb
into
pusha
mov
adc
dec
divl
push
push
out
xchg
popa
xor
imul
pop
pop
fneni(8087
stos
jl
cmp
stos
ficomps
leave
ljmp
mov
cmp
hlt
mov
cmp
lfs
data16
aas
push
jno
mov
repz
jp
mov
pop
into
iret
lea
lcall
sbb
movsl
cwtl
pop
orb
xchg
scas
jl
and
pop
or
lds
xor
xchg
ret
aam
and
mov
out
loop
test
cmp
ja
popa
or
shrl
add
es
out
jle
sbb
inc
faddl
lcall
jno
iret
mov
mov
mov
fdivrs
push
cmc
mov
and
xor
addb
pusha
adc
addr16
or
push
or
mov
lea
jb
fldl2t
inc
outsb
sub
cmp
mov
mov
clc
dec
sub
add
lcall
mov
xchg
xor
mov
dec
mov
mov
scas
scas
into
in
mov
sbb
xor
pop
jl
mov
call
push
ficomps
callw
aam
lds
insl
fcompl
ret
dec
ret
xor
jb
ss
push
ret
cmp
shll
push
cltd
mov
mov
fadds
insl
push
mov
outsl
xor
jb
mov
jnp
xor
mov
xlat
adc
ret
dec
scas
out
and
xor
add
cmp
mov
cmp
les
and
cmp
ret
inc
pushf
push
sbb
dec
test
and
xchg
mov
sbb
xchg
test
lods
mov
mov
shl
shr
fadds
inc
push
adc
and
inc
mov
es
sbb
scas
push
sbb
sbb
sbb
mov
add
lock
addr16
mov
sub
out
push
arpl
mov
pop
or
sub
adc
xor
adc
rolb
std
jmp
inc
aad
ficomps
jb
and
movsl
or
xor
xor
movsl
dec
push
dec
jbe
adc
push
adcl
jg
dec
ljmp
mov
mov
and
sub
dec
hlt
daa
loopne
pop
push
insl
icebp
or
shll
pop
xor
test
shlb
les
test
xchg
loop
add
xchg
adc
flds
lret
pop
negl
dec
icebp
lea
shlb
stos
push
nop
dec
mov
push
loop
cltd
pop
pop
sub
lods
in
lock
lods
lods
dec
mov
insl
fwait
stos
push
dec
adc
iret
push
sbb
cmp
pop
mull
pop
xor
movb
pop
xor
mov
push
xor
ret
lds
push
cltd
fnstsw
push
popa
mov
xor
das
and
and
notb
push
inc
dec
or
movsl
insl
sti
frstor
ja
cmp
int3
xchg
and
sbbl
data16
mov
and
sbb
scas
into
xchg
insb
sbb
jns
mov
or
insb
pop
mov
lock
fsts
stos
mov
je
mov
xor
addr16
push
xchg
mov
loop
rclb
xlat
cwtl
adc
adc
jp
pushl
loop
aaa
aaa
rcrl
add
ss
filds
lret
popa
lods
test
inc
dec
std
lret
mov
out
loop
jno
jbe
ret
stos
adc
fucom
and
jle
and
inc
fwait
in
push
or
cmc
jne
cmp
fcompl
xchg
xchg
pop
sbb
xor
cmp
bound
push
push
pop
fstps
scas
jmp
dec
fs
inc
push
pop
jns
jns
inc
aaa
rolb
loopne
roll
test
lds
or
leave
mov
jbe
mov
and
imul
aam
inc
cli
mov
sub
or
push
jp
adc
mov
outsl
mov
xchg
and
xor
jl
push
lahf
add
adc
adc
jmp
mov
cmp
mov
das
jp
ds
lret
and
stos
hlt
inc
mov
lods
lods
psubq
inc
inc
mov
pop
jno
dec
or
and
mov
outsb
inc
pop
out
pop
fnstenv
inc
mov
in
push
xlat
mov
shl
out
pusha
decb
mov
pop
cs
addb
in
adc
repz
or
pop
adc
dec
out
es
ds
sbb
fistpl
xchg
test
xor
mov
mov
jecxz
xor
in
test
ss
repnz
popa
jbe
leave
test
cmp
adc
inc
adc
xor
test
mov
pusha
dec
mov
test
mov
inc
fisubl
mov
je
lds
repz
in
loop
push
sahf
clc
pop
xor
cwtl
testl
mov
mov
mov
aaa
out
out
add
insb
popf
outsb
roll
fmul
adcl
dec
push
insb
pusha
fiaddl
stos
mov
fnstenv
cmp
push
mov
or
ss
mov
rcrb
scas
sbb
call
add
pop
dec
sbb
adcl
xlat
iret
mov
lret
mov
xor
lret
push
and
into
shll
test
inc
ss
pcmpgtb
or
and
in
aam
out
add
imul
mov
and
adc
dec
mov
or
popf
lds
pop
int
test
in
iret
mov
arpl
in
or
and
lret
xor
andl
inc
jmp
and
sub
dec
xlat
xchg
jmp
gs
mov
repz
xchg
adc
cwtl
stc
xchg
add
in
and
daa
xchg
inc
fiadds
jmp
js
cld
out
inc
jmp
call
pop
cli
pop
dec
inc
leave
or
fwait
subl
les
mov
daa
inc
xchg
mov
and
dec
insb
xchg
repnz
sbb
adc
xor
ret
mov
lahf
es
mov
pop
js
push
add
add
inc
fildll
gs
out
cmp
push
adc
mov
add
mov
pop
mov
and
sub
lret
decl
dec
outsl
xchg
orl
jge
adc
aaa
jae
lods
pop
cmp
enter
movsl
sbb
into
call
jle
out
add
sub
dec
cmc
jo
call
imul
sarl
push
push
sbb
sub
push
shlb
daa
lcall
popf
cmpsl
cmpsl
mov
cwtl
inc
mov
pop
dec
cmpsb
cmpsb
jl
fildl
in
sub
and
shlb
testb
in
jo
std
pop
or
shl
shrb
xchg
fimull
pop
fs
sahf
in
mov
jbe
mov
rolb
inc
out
push
int
mov
or
jmp
repnz
xor
or
shlb
push
mov
xor
aad
add
dec
cmpb
pop
jns
and
mov
scas
jg
push
cmp
inc
pop
mov
mov
imul
ret
sbb
pop
je
push
leave
test
shll
add
sti
adc
pop
popa
lods
repz
xchg
cltd
mov
aaa
xchg
cmpsl
sub
testl
sbb
shll
xlat
shl
icebp
mov
mov
mov
icebp
sar
imull
inc
out
cmp
ds
mov
loope
mov
add
cld
sub
inc
sub
push
xlat
cmc
js
fidivs
lret
cmp
cmp
in
test
in
ret
loope
mov
push
add
icebp
mov
dec
mov
xchg
loopne
jl
out
or
adc
cmp
xchg
sbb
in
add
aaa
mov
bound
xor
mov
icebp
icebp
xchg
sbb
out
repz
cltd
cmp
jns
cs
mov
shll
stos
xor
sbb
addr16
xor
mov
xchg
aad
mov
es
imull
add
cmp
inc
incb
add
stos
cwtl
sub
arpl
sbb
loope
les
dec
inc
bound
popf
out
xor
stos
push
test
les
sbb
push
ret
and
sbb
stos
imul
sti
sub
sub
nop
or
arpl
arpl
mov
adc
fisttpl
lahf
mov
icebp
into
xchg
lahf
data16
mov
mov
cmp
nop
lcall
jbe
cmp
add
aaa
jge
aad
insl
pop
jo
aas
add
aam
dec
negl
xchg
cli
mov
fdiv
pop
xchg
inc
push
test
and
mov
xor
lret
jecxz
leave
mov
ret
lods
jbe
xchg
and
adcl
mov
dec
cmp
in
movsb
je
scas
mov
call
rolb
add
out
or
or
jp
test
mov
push
popa
fidivrs
in
inc
js
in
ret
jno
aas
rorl
mov
in
outsl
pop
and
and
incl
in
pusha
lock
cmp
jl
xor
lods
or
sarl
xchg
into
pop
ds
add
fsts
lock
jle
cmpl
bound
pusha
mov
mov
out
loope
test
ljmp
test
xor
jo
es
cwtl
jnp
mov
lds
rclb
dec
jbe
std
sbb
mov
and
mov
sub
xor
jl
sbb
ljmp
push
js
lret
flds
movsl
fisttpl
pop
or
in
push
add
xor
pop
mov
adc
test
pop
mov
add
mov
inc
pushf
and
jae
cwtl
jmp
ds
rorb
inc
int3
or
aaa
movsl
test
gs
scas
and
push
xor
adc
lods
and
je
jno
fnstsw
mov
fists
xchg
pop
mov
adc
arpl
mov
pusha
test
or
xor
ret
in
enter
xchg
in
mull
insb
and
cs
imul
dec
mov
adc
rcl
int
roll
adc
mov
aad
pop
fwait
mov
add
mov
inc
push
mov
mov
dec
push
mov
sbb
jl
imul
adc
sbb
in
stc
loopne
out
cmp
jbe
jno
sub
int
xor
sub
neg
inc
leave
and
and
sbb
mov
jle
in
jg
push
and
lea
mov
dec
scas
fwait
adc
mov
js
sbb
sub
lcall
mov
push
sbb
xchg
stc
lods
add
aas
jmp
cld
jne
jmp
fwait
push
cld
push
sbbl
jno
icebp
adc
scas
sbb
add
ja,pt
pop
xor
mov
lock
jnp
mov
xor
pop
and
stos
ds
sti
and
jno
adc
out
xchg
mov
adc
es
and
enter
mov
add
xor
inc
lret
shll
icebp
out
push
pop
mov
mov
pop
sbb
rcrb
lds
out
repnz
sarb
xor
inc
mov
dec
dec
mov
out
imul
cmp
inc
out
mov
hlt
cmp
push
push
or
adc
add
push
out
test
mov
aaa
test
sub
sub
loopne
mov
int3
rcr
pop
leave
call
jmp
loopne
sbbl
jae
sub
inc
test
mov
or
movsl
jno
adc
or
jnp
mov
push
insl
clc
push
mov
loop
or
push
andb
shrl
cmp
inc
sub
xchg
mov
xchg
pop
jne
xadd
jae
rcll
in
jno
pop
ljmp
cs
mov
mov
jl
inc
out
push
fadds
xlat
mov
xchg
cmp
mov
hlt
mov
mov
outsl
decb
inc
repz
push
xchg
mov
or
pushf
add
and
adc
mov
jg
dec
add
test
mov
xchg
xor
addr16
sti
jae
out
adc
outsb
bound
and
push
jns
lret
add
sbb
ds
dec
adc
jl
jmp
push
lcall
scas
mov
pop
xor
push
inc
adc
fwait
or
or
lahf
mov
sub
push
mov
incl
pop
ficoml
pop
divl
mov
cmp
adc
or
lea
add
xchg
lcall
pop
push
jb
pusha
idiv
lods
je
test
inc
and
fidivs
jns
or
rcrb
cmp
std
sbb
jg
xchg
ja
call
les
xchg
mov
jmp
mov
adc
scas
or
rcrb
mov
mov
outsb
jmp
daa
and
add
lods
jecxz
push
add
dec
fs
insl
jp
adc
jns
inc
int
test
xchg
jle
roll
mov
inc
and
in
stc
mov
outsl
sub
popa
mov
shr
xchg
jmp
outsb
fwait
cmc
lods
pop
add
cmp
fidivl
jo
adc
or
pushf
mov
inc
or
lret
jns
push
out
push
loope
mov
pop
in
ret
daa
cld
inc
subb
dec
inc
jge
pmullw
or
in
mov
sub
shrl
out
loope
fcomp
push
cmpsb
jle
iret
pushf
std
call
das
adc
insb
sbb
xchg
fwait
loop
add
rol
mov
lock
xchg
test
xchg
and
lods
add
cltd
push
sub
imul
xchg
lret
jns
sbb
push
enter
add
xchg
popf
sti
add
cmpsb
xchg
leave
cld
arpl
or
push
adc
dec
fwait
adc
ret
fisubrl
ds
xor
xor
cmpsb
cmp
sbbl
xchg
int3
shll
in
jbe
outsl
rep
xchg
in
dec
pop
adc
outsl
adc
or
mov
sub
sub
dec
rorb
adc
xchg
push
mov
push
icebp
mov
mov
js
in
je
or
mov
iret
mov
sbb
cmp
outsl
dec
mov
or
loope
std
xchg
sbb
pushl
xchg
out
mov
or
out
push
icebp
xor
lods
jp
sub
xor
sbb
lds
je
xchg
xchg
push
lahf
lret
inc
and
test
mov
rolb
je
inc
dec
mov
pushf
loope
mov
mov
xor
adc
mov
in
cmpsl
add
xor
xchg
repz
xlat
sub
or
orb
mov
sub
enter
xchg
cli
cld
ja
outsb
cmp
sub
xor
push
sub
into
mov
mov
lret
push
fidivrl
out
cmc
jb
gs
scas
xor
mov
aad
and
cmc
test
cmp
or
push
sub
sbb
push
push
and
pop
call
pop
mov
mov
lods
test
mov
xor
cmpsl
pop
sub
push
mov
add
in
jbe
sahf
sub
ljmp
jbe
cmp
scas
pop
add
loope
pop
ljmp
adc
xor
daa
or
mov
mov
sbb
test
notb
push
scas
cmp
fistl
xchg
and
imul
pop
lods
in
rcll
push
mov
add
loopne
lock
mov
leave
outsl
jo
movsb
imul
xchg
jle
inc
sbb
mov
inc
add
jne
mov
xor
or
mov
mov
sub
pop
out
push
xor
sub
loopne
dec
mov
stos
dec
pop
adc
rcll
pusha
lock
sti
insb
lods
jle
outsl
paddq
mov
push
fxch
lret
or
fmul
bound
mov
fidivs
lahf
das
lock
xor
and
aam
inc
adc
into
add
jecxz
in
jmp
fnsave
inc
mov
xchg
xorb
jne
mov
incl
jmp
dec
pop
ret
adc
ds
jp
jp
push
sbb
int
out
push
call
aad
mov
movsl
mov
insb
fwait
push
mov
sahf
popa
or
les
data16
rcrb
fnstcw
sti
add
jno
adc
push
pop
xchg
inc
dec
pushf
sub
lds
lret
xchg
push
in
lock
test
xchg
xlat
cmp
aas
mov
cmpsl
scas
rcll
imul
xchg
int
pop
adc
repnz
mov
int
or
fsubr
jecxz
daa
lds
sub
rclb
lock
addr16
stc
insl
lcall
pop
xchg
cli
movsl
xchg
fcompl
add
mov
add
mov
adcl
fdivrl
and
mov
xor
or
cltd
stos
cmp
fmul
lods
xchg
fcmovbe
fldenv
xorl
sbb
dec
and
fcomp
push
push
in
in
cmpb
adc
jecxz
adc
pusha
pop
test
in
leave
mov
arpl
arpl
sub
in
cmpsl
mov
pushf
loope
inc
movsl
mov
xor
jp
mov
pop
arpl
stc
cmpsb
inc
fcoml
dec
xchg
jmp
iret
inc
in
rolb
test
adc
dec
js
xchg
pop
fidivrl
pop
ja
popa
in
imul
fildl
outsl
mov
mov
inc
lds
stos
or
sbb
add
fimuls
outsl
dec
scas
dec
pop
and
cmp
dec
sub
jne
notb
dec
and
jmp
repz
or
sub
shlb
mov
jp
outsb
ljmp
bound
add
ss
sbb
sti
icebp
cmp
and
jnp
jno
xchg
dec
sub
aad
jecxz
or
nop
push
enter
xchg
jp
jle
pop
in
shl
dec
mov
xchg
mov
inc
sub
pop
adc
add
mov
xor
inc
je
orb
dec
xchg
mov
mov
pop
add
imul
clc
out
stos
setbe
mov
xchg
fcoms
int3
mov
movsl
mov
dec
mov
lahf
clc
aad
add
repnz
cmp
mov
cs
dec
cmpsl
or
mov
or
pop
out
call
sbb
and
jge
cltd
mov
inc
push
pushf
sub
std
mov
adc
jnp
push
jg
push
fwait
push
push
xor
push
xchg
cmpsl
ja
push
cwtl
mov
push
test
lret
subl
and
hlt
into
je
push
rol
int3
cmpsl
push
mov
fwait
push
test
jae
cmpb
sub
push
push
cld
and
xor
sbb
cmp
jle
lods
sbb
mov
je
sub
cmc
pushf
xor
sti
loop
cs
clc
mov
jl
and
xchg
sti
xchg
arpl
mov
repnz
lods
icebp
jle
mov
or
pushl
pop
mov
aas
insl
shr
int3
push
xchg
sti
pop
ret
int
mov
mov
sahf
sbb
movsb
cmp
cmpsl
pop
out
push
scas
cmovne
dec
push
lock
repz
and
cmc
mov
mov
add
faddp
out
into
adc
dec
fidivrl
repnz
mul
int3
push
lcall
inc
sub
pop
aad
cmpsb
ret
and
cs
fsts
lahf
push
lock
lods
negb
pop
sbb
nop
and
cmpsb
push
sub
das
outsl
movsb
or
or
push
push
push
xor
andb
cmp
push
rcl
popf
dec
sub
or
cmp
dec
pushf
sbb
push
mov
pop
andb
clc
jmp
sbb
adc
or
btr
lds
jle
movsb
pop
pop
cmp
out
mov
nop
xor
add
sub
lcall
sub
sub
sbbb
add
cs
iret
cmp
ficoml
gs
daa
fstl
cmp
jp
mov
push
int3
jns
sbb
out
imul
push
xchg
pop
xchg
sub
mov
inc
loope
lcall
in
xor
pushf
jne
leave
or
add
cmc
gs
adc
mov
dec
fwait
dec
lret
jecxz
cmp
and
addb
insb
int3
xor
or
jg
leave
hlt
clc
lahf
mov
cltd
dec
cmc
mov
cmp
mov
popf
sub
push
mov
mov
hlt
cwtl
in
adc
rol
shlb
cli
jo
mov
hlt
dec
int3
stos
dec
or
gs
mov
inc
aam
mov
xchg
add
loope
rcr
jmp
aas
or
push
mov
rcll
mov
sti
sbb
stc
dec
out
jp
pop
scas
push
repz
add
mov
mov
dec
mov
stos
jg
and
mov
jecxz
sbbb
ret
mov
jae
xchg
xchg
adc
das
or
sbb
sub
stos
cltd
pop
rolb
int3
ds
xor
sub
inc
pop
scas
adc
dec
je
mov
cltd
jp
int3
mov
call
fisttpl
lret
iret
insl
sbb
call
filds
push
jmp
xchg
ret
test
cwtl
dec
rolb
dec
pop
les
mov
adc
inc
pushf
sub
mov
gs
ror
inc
mov
or
add
push
jle
out
lcall
and
mov
movsl
mov
fmull
push
mov
dec
lods
std
inc
jle
and
xchg
add
lea
xchg
les
int
jns
aaa
popl
sub
xchg
inc
pop
dec
incb
imul
dec
add
nop
and
dec
daa
sbb
fadd
and
movsb
xchg
mov
cltd
dec
sbb
add
mov
push
pop
add
ljmp
sbb
cmp
rcr
mov
sbb
mov
mov
mov
or
out
inc
scas
jl
cmc
fs
bound
ficomps
cltd
ret
fstps
push
cmp
das
shll
or
dec
fdivs
out
popf
fdivr
push
xchg
jae
inc
ss
enter
jmp
les
insb
popa
xor
test
adc
push
int
jns
loopne
arpl
xlat
pop
jmp
pop
pop
scas
int
xchg
xor
jg
sub
dec
pavgw
xchg
insb
sbb
add
jno
push
mov
push
xchg
mov
andl
adc
sub
jmp
ljmp
stos
sahf
or
jmp
lock
xor
sub
xor
ljmp
cmp
aaa
mov
push
loop
jne
or
daa
fs
popf
fdivl
iret
in
and
adc
imull
xchg
mov
push
dec
mov
pop
fildll
outsb
jae
sbbb
or
loope
pop
je
fsubrs
loopne
xchg
xchg
mov
test
icebp
jg
enter
popf
test
or
int3
dec
fwait
xchg
jge
dec
cmp
add
sahf
shlb
add
int
xor
ss
stc
int3
mov
sbb
cmp
mov
ds
std
rclb
arpl
pop
lea
mov
bound
leave
test
je
dec
dec
test
push
es
je
sbb
and
in
sarb
pushf
dec
jg
mov
push
icebp
xor
fsubl
mov
add
sub
pop
cmpsb
sbb
test
repnz
pop
mov
or
xchg
shlb
add
xor
pop
and
or
jl
pushf
lcall
imul
arpl
loopne
mov
call
out
inc
xchg
cmp
jl
pop
pop
jno
jl
xor
pop
mov
rcrl
and
in
call
lret
and
rcrb
push
jb
data16
insb
out
dec
out
sbb
test
jmp
or
jno
inc
or
xor
jbe
outsl
mov
cli
outsl
xor
sub
mov
test
scas
into
mov
cmpsl
repnz
or
shl
repnz
cwtl
jg
test
adc
cmp
fwait
in
jno
out
xchg
idiv
sti
sbb
sub
insb
and
and
sahf
mov
push
ss
fidivrs
decl
movsb
push
adcl
jns
pop
jp
xchg
loop
mov
out
es
into
push
rorl
and
jp
sub
push
out
jae
pop
pop
push
mov
lea
subb
sbb
ljmp
cmpsl
jo
lcall
sarl
test
sub
cwtl
enter
pop
stos
jle
ficoml
sub
push
inc
sbb
add
xchg
push
rorl
pop
xchg
lahf
push
xlat
loop
pop
ds
xlat
sub
fwait
or
inc
shlb
nop
jmp
add
ficoms
xchg
cs
movsl
scas
ret
jae
xor
and
inc
mov
aaa
sub
push
jp
xchg
inc
or
lret
and
jmp
or
lret
test
or
mov
dec
in
cmp
pusha
hlt
fnstsw
ret
outsb
in
stos
and
inc
pop
std
mov
xchg
mov
mov
and
push
inc
sti
ljmp
pop
shll
rol
or
les
stos
mov
iret
int3
sbb
mov
inc
push
xor
sub
pop
sti
ret
lea
and
rcrb
stos
negl
ljmp
xor
add
adc
mov
rorb
mov
adc
xchg
mov
movsb
sbb
xchg
dec
movsl
push
pushf
dec
sbb
xchg
push
bound
lahf
jmp
lret
ljmp
aam
adc
xchg
leave
loop
inc
cmpsb
pop
cld
ds
and
stc
in
cli
cmp
cli
push
cmp
jg
daa
gs
aad
cmpsb
lahf
sub
mov
hlt
hlt
lock
vunpcklps
cmp
in
outsb
xchg
dec
or
test
and
jecxz
rcll
arpl
imul
push
stos
pop
fmuls
pop
fwait
xchg
stos
pushl
fdivr
mov
mov
adc
loopne
cs
popf
dec
xor
push
subps
pop
inc
add
jbe
push
xor
jge
sbb
dec
xchg
fisubl
gs
ds
pusha
or
pop
xlat
mov
sarl
cltd
xchg
test
sub
mov
cmpsb
in
xor
xor
or
adc
fcmovu
flds
or
imul
xchg
test
pop
and
push
imull
sub
fildll
mov
pop
cmc
lahf
and
jno
stos
outsl
pop
insb
jle
and
or
lret
rol
lods
iret
movsb
sbb
push
dec
mov
dec
jnp
adc
popa
jl
cld
add
imul
xorl
inc
test
and
mov
test
pop
mov
in
or
mov
adc
xchg
pop
adc
or
in
test
shrb
dec
push
inc
aam
nop
inc
cmpsb
adc
lea
jo
imul
rcr
xor
lods
or
xchg
push
fwait
jns
sub
ret
hlt
ljmp
jge
cli
fwait
xchg
push
movsb
xchg
out
add
add
lods
dec
pop
aaa
mov
jb
pushf
push
enter
sti
shl
jge
pop
lret
mov
stos
ss
or
push
lods
icebp
dec
out
push
or
das
lods
cmp
add
mov
xchg
clc
fldcw
fiaddl
dec
sbb
xor
mov
push
lods
fwait
pop
subl
fmull
or
aaa
inc
adc
pop
leave
dec
mov
xchg
mov
cltd
push
int
mov
ss
sbb
jns
out
jnp
fimuls
xor
or
mov
jmp
jp
shrl
daa
pop
jg
add
mov
mov
addr16
mov
outsb
add
dec
pop
es
xchg
cltd
sub
pop
jmp
jp
in
jno
aam
and
repz
xchg
into
je
cmp
jp
inc
loopne
sub
sub
add
mov
scas
cld
push
lock
dec
push
xlat
ljmp
fcomps
and
xchg
clc
movsl
mov
lret
fwait
lret
test
mov
mov
xchg
or
aas
sub
cmp
xchg
rcrb
mov
jae
fbld
aam
nopl
cmp
dec
push
nop
inc
adc
cmc
stos
mov
je
cltd
fdivrp
mov
or
int3
sub
in
push
xchg
into
pushf
dec
out
dec
fisubl
cmc
jnp
inc
pop
stos
inc
push
mov
push
insb
jne
dec
inc
push
adc
in
arpl
dec
inc
xchg
dec
xor
fisttps
outsb
jg
sbb
xchg
test
cmpsb
arpl
push
push
push
and
add
in
mov
pop
lret
pop
mov
loope
insl
out
stos
out
xchg
shl
lret
sub
ja
dec
add
imul
outsb
push
sbb
stos
rolb
ja
outsb
and
mov
into
lods
push
sub
adc
loope
add
addl
repz
xchg
mov
clc
out
out
mov
jne
cld
insb
mov
and
imul
adc
add
pushf
jne
mov
jno
mov
sbb
loop
dec
inc
xor
push
insl
inc
sub
pushf
inc
or
ret
mov
in
push
sub
sbb
int3
iret
mov
test
into
jns
sbb
push
ljmp
jge
addr16
adc
push
lcall
sub
loopne
jmp
arpl
push
mov
ret
sbb
ret
rcrl
icebp
adc
in
dec
push
mov
lret
sbbl
push
add
ds
lcall
adc
inc
imul
stos
mov
mov
jae
sbb
mov
int3
mov
mov
movsb
sahf
xor
lret
pop
lods
mov
in
jg
pop
out
inc
ja
dec
movsb
push
jecxz
bound
adc
or
ret
rcr
orl
adc
mov
inc
andl
xchg
mov
imul
insl
push
in
sub
test
adc
cltd
cmp
popa
jmp
adcb
dec
mov
out
pop
out
pushf
or
adc
mov
ud1
ficoml
jl
lret
fisttpll
push
inc
inc
dec
nop
jne
dec
jb
mov
mov
fsubrl
es
push
int
or
sbb
mov
cmp
xor
xlat
inc
and
aad
dec
xor
in
das
lret
dec
fs
xchg
int3
arpl
cltd
jl
lds
fs
std
in
mov
jle
adc
mov
and
je
mov
add
stc
xor
lock
jnp
and
icebp
push
inc
mov
out
stos
cmc
inc
subb
xor
jp
stos
and
sbb
xor
jno
xor
sub
les
sub
mov
pop
das
adc
imul
lea
test
push
jp
or
aas
mov
in
aaa
stos
ret
outsb
add
push
jns
sub
push
cld
in
push
rcll
fwait
lcall
mov
adc
jle
cmp
fstps
ljmp
icebp
pop
int
insb
dec
std
js
hlt
xlat
jb
xor
dec
outsl
add
fimull
pop
enter
add
mov
nop
or
mov
and
adc
or
mov
loopne
ficompl
push
mov
push
sbbl
inc
pop
cmpb
jle
add
les
mov
in
xor
lds
xchg
nop
and
pusha
sbb
sub
pop
in
fwait
adc
or
hlt
icebp
movsl
call
mov
sub
jl
into
std
mov
cld
aaa
dec
lret
push
popa
push
push
jns
xchg
mov
mov
fmul
pop
sbb
sbb
or
and
mov
push
cld
ds
shlb
pop
insl
roll
sub
loopne
outsb
and
pop
mov
jp
ja
ficoml
or
addr16
mov
mov
dec
and
jmp
sbb
pop
mov
xor
ljmp
js
or
popa
lods
fs
popf
movq
pop
and
adcb
dec
jmp
xchg
xchg
xchg
ficoml
adc
cmp
xchg
lcall
sbb
cmp
int3
add
popa
cld
pop
mov
fsubrs
mov
ss
pop
and
or
sub
out
cmpsl
jnp
shl
push
cmp
test
cli
les
cmp
jns
jae,pt
test
add
outsb
pop
push
push
imull
adc
icebp
add
fs
mov
add
cwtl
mov
mov
jg
rcrl
jnp
movb
mov
aam
lcall
xor
add
cli
dec
xlat
stos
les
inc
pop
inc
add
xor
call
and
xchg
jg
clc
inc
mov
xor
stos
dec
fisttpll
mov
mov
xor
ret
xchg
cmpsb
lock
cwtl
sub
pop
xorb
xchg
sub
ds
lret
adc
dec
ljmp
adc
lret
push
ret
jns
dec
mov
push
mov
jp
movsl
es
icebp
test
hlt
adc
xchg
cld
call
ret
lds
ret
aad
jno
lods
aas
shr
xrelease
jmp
sub
dec
dec
adc
in
in
xchg
insl
dec
mull
mov
test
mov
out
and
dec
fstpt
adc
or
xlat
rorl
jecxz
push
jno
sarb
push
mov
movsb
outsl
and
add
js
aas
ss
adc
fwait
cld
das
call
repnz
or
adcb
icebp
pop
mov
mov
and
mov
std
and
aaa
cmp
pop
jno
test
and
imul
fstpt
cmp
sub
pop
fucomp
push
inc
mov
leave
mov
xlat
incl
mov
cmpsb
mov
in
pop
inc
pop
sub
bound
insb
lcall
jmp
add
mov
arpl
test
mov
loope
cli
push
scas
inc
cmp
loope
cmp
push
and
inc
outsb
sbb
hlt
icebp
jg
es
cmp
negb
insb
leave
rcr
test
in
scas
enter
hlt
cmp
push
andb
xchg
adc
adc
push
addb
mov
mov
or
divl
stc
movsl
std
into
fistl
or
loopne
nop
fsubrl
je
movsl
movsl
lret
mov
jno
outsb
int
iret
pop
cltd
cmpsl
mov
test
fsubl
pop
jns
dec
stos
jo
lock
jo
clc
sbb
insb
ficompl
lock
or
mov
shl
lods
js
lods
lods
cltd
lret
rol
pop
icebp
aad
cld
xor
or
sbb
cld
pop
adc
push
and
add
pop
cwtl
or
mov
fiadds
mov
repnz
or
pop
dec
stc
cs
cmp
or
xlat
pushf
xchg
mov
xlat
lods
xor
inc
mov
jmp
sub
pop
es
call
or
jbe
xchg
leave
push
dec
jge
loop
pop
das
push
out
jbe
pop
xchg
outsl
fdivr
adc
jecxz
pop
pop
icebp
inc
and
add
pop
in
sub
jle
xchg
or
das
jns
and
imul
dec
push
test
daa
xchg
dec
scas
sti
inc
xor
aas
mov
lret
scas
mov
add
loop
rorb
pop
dec
and
xchg
iret
ret
sahf
in
xchg
ja
sub
enter
add
lea
sbb
mov
add
inc
mov
out
and
repz
pop
push
xchg
push
sub
das
dec
rcr
mov
shlb
flds
jge
lea
push
add
mov
xor
js
xchg
push
roll
add
aad
pusha
add
test
pusha
ss
mov
sub
xor
fimull
bound
xchg
push
mov
dec
sbb
mov
push
pushf
fwait
jmp
push
xchg
cmpl
ret
daa
xor
clc
xchg
testl
mov
mov
push
inc
mov
in
sbb
mov
es
jb
outsb
and
mov
sbb
pop
cwtl
in
xor
imul
sbb
ss
outsb
roll
push
divl
cmpb
xchg
add
sbb
cltd
scas
or
iret
add
jg
xor
loope
mov
ret
scas
mov
cmp
pop
pop
test
adc
scas
test
aas
mov
rorb
sbb
push
sbb
rclb
iret
rorl
js
cmpsb
mov
fiaddl
hlt
mov
jle
or
dec
icebp
xchg
enter
lcall
std
testb
bnd
aaa
mov
pop
or
into
mov
pop
pop
je
adc
dec
fisttps
les
negl
xchg
dec
xchg
push
sti
icebp
jg
mov
pop
faddp
sbbb
add
or
cmpsb
outsb
scas
int3
or
lds
xchg
gs
test
and
fiadds
lldt
xchg
jns
jnp
push
dec
sbb
mov
jns
dec
shlb
mov
mov
jle
add
in
cs
scas
pop
add
dec
or
jg
adc
jbe
enter
push
jle
and
pop
mov
or
mov
pop
js
mov
and
push
sub
scas
sbb
dec
inc
ret
pusha
sahf
inc
sbb
add
mov
ret
movsl
cmp
stc
lods
pop
enter
icebp
or
add
movsl
sbb
xor
xchg
into
xor
ja
aaa
sbb
pop
xchg
pop
int3
sub
pop
push
gs
jecxz
xchg
ret
mov
aad
and
push
adc
test
xchg
ds
pop
cmp
int
cmp
arpl
and
mov
sbb
sub
fs
stos
jbe
fwait
test
push
jmp
scas
mov
mov
xchg
mov
arpl
wbinvd
ja
enter
pop
pushf
out
lcall
movsb
pop
test
ljmp
mov
fildll
nop
lock
inc
cld
sub
push
sahf
loope
daa
mov
or
add
leave
adc
xor
mov
xor
repz
adc
xchg
add
cmp
and
pop
or
lds
fsubl
push
dec
movsl
dec
push
sub
icebp
cmp
leave
outsl
test
mov
and
jnp
outsb
xchg
out
sub
inc
adc
in
es
dec
xchg
test
xor
and
xor
jns
adc
adcl
std
fisubrl
sbb
je
imul
sub
pop
jmp
mov
stos
or
gs
out
lock
cmpsl
das
out
aad
cli
xchg
dec
mov
cmp
xchg
fistl
fs
pop
gs
out
insl
or
sub
outsl
push
and
cmp
imul
push
push
add
inc
aad
mov
aas
and
idiv
mov
inc
push
push
sbb
cmp
or
fmul
ja
call
repz
jmp
pusha
sub
push
push
cld
sbb
std
ljmp
insl
xchg
inc
push
push
sub
adc
lcall
and
or
stc
mov
adc
mov
dec
out
hlt
push
add
mov
add
cmc
mov
or
pop
les
xchg
push
popf
cltd
imul
or
inc
lock
rcl
or
mov
call
loop
adc
ret
mov
pop
xchg
repnz
pop
icebp
shlb
pop
repnz
xchg
dec
lock
rcr
in
leave
xchg
xchg
jecxz
dec
fildl
fldt
pop
mov
adc
arpl
aas
gs
pusha
in
imul
ret
fcoms
popf
sub
xchg
fdivrs
in
jle
clc
ja
ds
xchg
shl
mov
clc
pop
test
aam
loope
sub
and
and
cmp
arpl
push
lock
xlat
xchg
jo
jnp
jnp
sub
ret
mov
add
decl
test
cwtl
fisubrs
lcall
and
pop
push
fisubl
ret
mov
popf
rcrb
push
aas
ret
inc
rcll
add
repz
cwtl
sbb
mov
dec
push
cs
mov
cmpsb
fistps
ljmp
push
bnd
sub
dec
pop
fcmove
fisubrs
stc
pop
fdiv
lea
jae
and
adc
sahf
into
add
ret
xor
sbb
pop
and
mov
sbb
aam
add
leave
mov
test
scas
das
jl
cmpsl
xchg
mov
mov
or
in
jp
aad
inc
in
and
cmpsl
or
xor
test
mov
cli
inc
and
and
jg
stos
sti
mov
pop
gs
sbb
mov
fsubrs
je
add
cmp
fldenv
mov
jp
sbb
xchg
sbb
and
pop
insl
add
pop
ja
pop
and
pop
mov
inc
push
push
leave
decl
xchg
out
or
lds
mov
push
dec
insl
aam
mov
pop
or
cmc
xor
jp
addl
jno
cmp
xchg
icebp
es
fadds
je
daa
in
shrb
adc
pusha
cmp
leave
xchg
popa
loope
mov
fs
jg
nop
cmpsl
or
into
inc
mov
or
or
test
mov
dec
dec
lods
add
push
sbb
jnp
jle
push
cmp
cld
add
fstl
push
sub
sub
push
imulb
xchg
leave
or
inc
sbb
fstpt
sbb
cmc
mov
and
daa
out
pop
xor
and
ljmp
cltd
mov
and
inc
mov
cmp
ret
mov
add
ja
mov
mov
rorl
jle
push
dec
aad
or
sbb
out
cmc
sub
test
or
lock
dec
mov
stos
sarl
pop
xlat
out
clc
sbb
xor
and
repz
add
lea
mov
pop
jo
les
jge
int3
jge
int3
pop
test
jmp
test
and
inc
cltd
daa
std
pusha
xor
jo
push
ds
sub
data16
pop
mov
lret
fs
xorl
inc
push
lock
ret
jae
aas
push
out
inc
add
dec
out
xor
sub
repz
fs
xchg
cwtl
fists
xor
xchg
jb
jo
mov
push
sub
pop
add
ret
push
outsb
jno
inc
mov
cmpsb
push
and
mov
cld
lahf
xor
repnz
ds
into
ret
loopne
addl
insb
push
mov
cmp
jne
lock
inc
jl
xor
sub
add
iret
mov
mov
jl
pop
sbb
cld
sar
pop
lret
lret
mov
mov
rcll
mov
or
xcrypt-ctr
cmpsl
pop
inc
data16
xchg
sub
out
mulb
loop
xor
inc
lret
and
test
jmp
ds
mov
pop
cld
xchg
adcl
cli
xor
sub
jcxz
adc
xor
pop
aaa
and
outsl
cmpb
sbb
lret
dec
es
shl
je
shll
jge
pushf
fs
dec
scas
xor
xchg
je
int
jno
je
mov
aam
xchg
fists
nop
dec
es
pop
and
cli
das
out
lock
enter
rolb
pop
repz
mov
std
cmp
pop
dec
dec
shlb
fiaddl
gs
dec
cmp
lahf
jno
pop
repz
cs
test
mov
in
shlb
in
insb
fists
push
adc
mov
out
fdivrl
jae
aas
jmp
cmp
ror
jg
push
repnz
mov
mov
les
xchg
bound
imul
and
ficoml
add
stc
push
pushf
jnp
mov
xchg
mov
push
jge
jmp
outsl
mov
cmc
dec
sbb
popa
das
negb
inc
loop
inc
xabort
out
mov
mov
aam
dec
and
jmp
ja
popa
outsl
mov
xchg
fwait
sti
cwtl
or
xchg
xor
mov
daa
add
mov
push
lods
das
mov
test
fsubs
xchg
mov
or
cmp
loop
and
sbbb
lods
stos
movsl
push
pop
cmp
mov
jg
mov
roll
ret
mov
xor
xchg
adc
sub
lock
fwait
ret
xor
adc
aas
push
push
ror
call
sbb
or
iret
jg
adc
aaa
shll
jae
adc
mov
push
sbb
subl
outsl
in
ret
stc
pop
lock
pop
repz
ds
cmp
lods
shl
mov
pop
jno
adc
fdivs
in
sub
js
movsl
pop
mov
xchg
jno
cli
ss
mov
cmp
invd
js
incl
clc
scas
cmp
lahf
adc
push
or
and
add
push
cmpsl
mov
xchg
movsb
pop
test
outsb
or
dec
sbb
or
scas
inc
call
das
addr16
sub
mov
shl
aas
pushl
push
fwait
orl
test
ret
mov
push
xor
lea
jne
xor
mov
sub
adc
adc
sbb
cmp
outsb
push
mov
or
push
das
pop
lods
mov
or
push
stc
imul
mov
lods
out
adc
push
adc
stc
cmp
sbb
call
mov
xchg
das
sbb
fisttps
xchg
rcrl
ljmp
jno
pusha
push
mov
ljmp
push
fwait
xchg
imul
fidivrs
daa
dec
xchg
inc
cmp
lods
gs
cmp
xchg
inc
push
push
adc
sbb
sub
icebp
xor
jns
mov
push
test
cmp
sub
rol
incl
dec
push
and
imul
pop
add
pop
xchg
add
arpl
outsb
add
movsb
icebp
hlt
xor
inc
push
imul
inc
and
sub
adc
jecxz
or
subl
mov
or
test
aad
adc
add
push
adc
or
dec
nop
jecxz
arpl
testl
pop
cld
dec
jecxz
adc
popf
arpl
sbb
out
and
xchg
js
jns
clc
shrl
out
mov
out
or
inc
pop
sbb
mov
arpl
lds
outsl
loopne
cld
icebp
xchg
xchg
push
cltd
ss
scas
icebp
adc
jle
cld
in
lcall
outsb
gs
adc
mov
movsb
xchg
adc
xchg
xor
hlt
mov
push
lods
pop
call
cmpsl
sbb
ficompl
adc
arpl
mov
dec
jg
push
repnz
push
mov
jg
pop
in
mov
popf
pop
add
into
pop
sub
out
fsubl
mov
jle
sahf
mov
pop
jnp
mov
push
in
enter
cli
xor
out
pop
jno
imul
jne
loope
in
sub
inc
int
adc
aad
lahf
lods
or
insb
cld
movsb
xchg
cmpsl
xchg
jmp
test
cmpl
mov
xor
int
loope
jbe
cmp
jbe
insb
imul
aaa
adc
movsb
xor
int3
scas
jg
enter
lahf
inc
sbb
insl
inc
rolb
std
cmp
shll
cmp
loope
pushf
repz
jg,pn
dec
adc
fwait
rorb
mov
add
dec
cmp
mov
les
daa
dec
insl
fidivrs
ljmp
or
xor
dec
jo
cs
jne
ret
insb
dec
inc
bound
insl
jmp
bound
and
arpl
inc
out
xor
rcrl
mov
xlat
repz
mov
mov
inc
pushf
test
mov
sbb
loopne
nop
loope
xor
outsb
sub
or
mov
push
inc
pop
and
cltd
inc
roll
fcoms
sbb
sub
lds
mov
adcl
push
and
loope
int3
rcll
lahf
or
cli
jmp
repnz
and
cwtl
xchg
testb
xchg
nop
sbb
mov
xchg
or
mov
add
arpl
mov
mov
mov
mov
fdivl
jge
adc
stos
ss
aas
xor
xlat
out
out
cmc
cli
inc
repz
fistps
pop
jns
and
pusha
adc
icebp
adc
adc
push
mov
push
cmpsl
jae
push
ljmp
ds
bswap
xorb
mov
in
orl
lret
pop
push
jns
jno
and
movsl
mov
movsl
mov
lahf
imul
lock
leave
ret
and
sti
xor
sbb
add
jg
cmp
aam
movsb
mov
scas
lock
leave
adc
in
sub
loop
shll
xlat
adc
mov
loope
mov
aam
repz
std
inc
or
loopne
dec
mov
iret
or
inc
mov
mov
cmp
push
out
cmp
test
xor
out
loop
shl
xchg
mov
mov
mov
sbb
idivl
sub
sbb
outsb
mov
mov
js
ljmp
jmp
ret
xchg
mov
popf
movsl
mov
xchg
jae
cmp
sub
jmp
inc
or
xor
dec
sbb
mov
test
inc
cmp
popa
and
stc
or
shl
inc
jb
cmpsb
jns
test
cld
adcl
sahf
ss
xchg
cmpsl
dec
mov
mov
les
rcl
mov
xchg
stc
xchg
imul
inc
sub
stc
ja
out
mov
stos
sub
int3
jnp
sbb
adc
sub
and
test
dec
dec
shrb
rolb
fldcw
cltd
movsb
inc
into
mov
adc
in
jb
addb
out
add
nop
and
cmc
cmp
in
sbb
decl
popa
pop
inc
and
or
orl
ljmp
iret
loope
inc
xchg
out
int3
jnp
insb
pop
mov
hlt
pop
or
lret
ja
lahf
loopne
mov
cld
inc
and
loope
cmp
jg
and
addr16
sbb
lahf
mov
outsb
or
sbb
imul
inc
mov
inc
orl
push
subb
add
cmp
fstps
ss
or
sbb
out
std
lea
test
sub
sbb
or
out
mov
pusha
imul
lea
scas
roll
test
add
jl
cwtl
cmp
sahf
rcll
adc
and
ds
jg
pop
xchg
and
sub
sarb
movsl
outsb
lods
sbb
pushf
sub
fcoml
jnp
xchg
pop
filds
and
ret
addl
and
shrl
adc
xchg
pop
jg
xchg
in
ja
cld
push
xchg
mov
loop
and
lds
jl
fmul
or
cld
pop
jo
in
and
outsb
js
xchg
inc
sbb
sub
mov
cwtl
mov
ss
iret
jmp
orb
inc
loopne
idivl
lds
push
lds
push
mov
ja
cmp
lock
mov
out
inc
gs
enter
movsl
push
mov
and
mov
sub
push
xchg
push
or
jae
shr
dec
mov
popf
arpl
outsl
ljmp
inc
movsl
outsl
sbb
xlat
cmp
pop
inc
cmp
cmp
sub
dec
cmp
call
push
inc
mov
ljmp
pusha
mov
lcall
cmp
adc
mov
in
in
xchg
mov
jge
xchg
in
not
cwtl
jle
pop
test
and
cwtl
rcll
add
es
mov
xchg
iret
xchg
xor
inc
and
adc
in
or
icebp
into
insl
shll
cmp
or
xchg
dec
xchg
inc
add
mov
insb
std
jb
js
mov
dec
push
mov
adc
stc
mov
dec
sbb
pop
ja
inc
push
sbb
popa
dec
lds
xor
leave
and
jp
inc
and
dec
mov
xchg
mov
xchg
fwait
or
inc
jmp
imul
and
cmp
insb
bound
aam
push
mov
into
push
aam
jecxz
and
lods
add
shrl
push
inc
cltd
out
adc
ds
fsubrs
xchg
clc
push
popf
jo
jno
daa
out
sbb
sbb
xlat
fstl
rolb
dec
je
dec
mov
pop
addr16
loope
jmp
in
sbb
scas
cs
ds
lock
mov
ds
enter
sub
cmp
or
pop
insb
popl
inc
mov
xor
gs
pusha
out
addr16
adc
nop
push
inc
mov
mov
shrl
mov
pop
cmp
neg
scas
mov
xchg
inc
sub
jp
mov
and
int3
scas
std
mov
push
dec
sbb
mul
pushf
xor
add
or
xor
lcall
add
xchg
call
push
int
pop
pop
mov
jbe
and
ljmp
nop
pop
cmp
loopne
jecxz
jnp
sbb
xchg
sahf
jno
stos
sub
rcl
jb
jno
mov
cmp
jecxz
in
and
inc
adc
cld
inc
arpl
jecxz
mov
push
js
into
or
andl
fisubl
arpl
cwtl
mov
outsb
pop
or
xchg
sbb
xchg
sub
mov
iret
test
repz
test
xchg
out
mov
dec
adc
or
iret
sahf
add
fnstcw
pop
sub
add
ss
cmpb
mov
lahf
inc
mov
add
lea
negb
jecxz
jp
mov
mov
push
xchg
xchg
push
daa
sbb
jae
sti
mov
push
shr
call
rcr
jno
outsb
mov
pop
mov
mov
sbb
mov
fs
cmp
outsb
nop
xchg
or
test
js
cmp
popf
xchg
xor
sub
aad
lock
andl
stc
scas
lods
pop
dec
nop
xor
xchg
fwait
insb
dec
adc
mov
and
in
or
pusha
mov
add
sub
cmp
enter
inc
dec
int3
mov
repz
sahf
sub
cmp
fnstcw
xor
mov
inc
sti
pushf
call
dec
pop
mov
sahf
mov
enter
add
insb
cli
mov
sub
mov
xchg
je
mov
mov
loope
stos
adc
fldl
pop
roll
sub
bound
jo
arpl
roll
addl
imul
mov
mov
jg
dec
lds
adc
push
ljmp
je
es
popf
jbe
sbb
cmp
ret
icebp
movsl
mov
shr
test
mov
sarb
lds
idiv
ja
cmp
ret
and
mov
notb
into
sbb
sub
pushl
sub
xor
add
stos
arpl
inc
ja
in
xchg
cmp
inc
or
xchg
pop
hlt
idiv
aas
and
pop
std
xor
inc
aad
test
cld
mov
rcl
arpl
pop
scas
fsubr
mov
xor
inc
loope
fstp
psrad
xor
shll
dec
add
mov
sub
xor
out
shrb
int3
lods
jae
mov
decl
cmp
sahf
mov
das
imul
inc
arpl
add
cmp
sbb
push
pop
sub
and
repnz
push
aaa
shlb
mov
jmp
jle
mov
in
sti
jg
pop
hlt
daa
sti
xchg
std
in
adc
mov
cmp
sub
inc
iret
jo
in
repnz
jl
cmp
xchg
pushf
imul
jns
cmp
or
cmpsb
jecxz
into
inc
push
jae
push
mov
out
or
ds
aam
repz
das
fnstsw
dec
pop
cld
movsb
stc
or
mov
out
int
xor
cld
push
adc
rcl
lcall
ret
xor
xchg
mov
pop
inc
xchg
pop
fwait
xchg
sbb
adc
cmp
jbe
jb
pop
push
jb
fdivl
mov
and
dec
inc
out
fmull
mov
add
mov
sub
and
jmp
or
sub
loopne
hlt
aam
in
mov
xor
push
dec
mov
ljmp
dec
dec
fnstcw
popa
stos
fincstp
dec
lret
and
mov
in
rcrb
loope
mov
xchg
adc
xchg
push
pop
ss
jns
jnp
xor
fwait
call
push
movsb
gs
pop
call
rorb
subl
xor
test
lcall
and
push
mov
and
fmull
imul
sub
push
test
cmp
hlt
out
or
jbe
jne
xchg
mov
repz
adc
rcll
iret
mov
rol
stc
flds
loop
xorb
xchg
xchg
push
fdivp
popf
mov
dec
and
cltd
test
lahf
pop
push
sbb
mov
int
cmpsl
sub
mov
mov
lahf
iret
arpl
dec
cltd
pop
dec
cmpsl
mov
cmp
jl
pop
pop
jg
hlt
or
jnp
out
sub
out
fstpl
or
inc
pop
sub
addl
add
imul
mull
mov
mov
stc
sbb
cmp
mov
lock
mov
inc
pop
xchg
cltd
scas
fs
inc
fwait
mov
cmp
mov
sub
xchg
mov
push
es
bound
ljmp
sahf
inc
push
leave
cmp
popf
lea
or
cmp
cmp
mov
pop
mov
pusha
mov
and
rclb
xlat
bound
sub
push
aam
gs
lods
ja
jle
data16
mov
add
add
jle
mov
pop
add
out
dec
push
jns
pop
lock
pushf
pop
xlat
std
mov
push
ds
das
add
sub
insl
xchg
or
outsb
sbb
sub
shll
mov
insl
sub
arpl
fldt
xorb
clc
push
sahf
or
or
xchg
mov
lahf
insb
fstpl
daa
adc
xor
cmp
jle
lock
sbb
mov
lret
pop
outsb
das
lock
push
daa
cmp
and
test
insl
iret
rol
inc
push
pop
mov
mov
and
orl
xchg
cmp
inc
xor
loopne
out
out
jnp
icebp
add
sbb
loopne
xor
subb
xchg
inc
adc
std
call
aas
mov
push
testl
movsb
add
arpl
jae
lcall
bound
popa
in
ret
adc
sbb
insb
or
sub
sub
push
loop
mov
push
xchg
pop
push
mov
pop
adc
xor
in
es
add
xchg
mov
data16
ja
lret
adc
ret
repnz
mov
xchg
sub
dec
cli
xchg
loop
rcrb
dec
pop
mov
imul
pop
xchg
mov
lods
push
or
cmpsl
xchg
push
mov
push
mov
mov
popa
cmpsl
pusha
mov
popa
inc
jmp
push
push
shl
and
add
lret
push
xor
pusha
add
mov
daa
push
jg
cld
les
dec
sti
pop
adc
loopne
insb
mov
dec
or
call
call
mov
aad
js
aas
arpl
dec
mov
adc
mov
rcll
fdivrl
fimull
sub
jb
lret
lcall
pop
inc
sahf
into
jo
xor
sub
daa
add
pop
cwtl
jge
je
cmp
sbb
nop
addb
mov
pop
mov
adc
out
mov
fucom
cmp
repz
push
sbb
cmpsb
jle
jne
inc
inc
iret
xchg
jns
push
dec
pop
mov
or
aaa
xor
push
andl
popa
mov
lods
aam
int
pop
cmp
popf
hlt
cmp
jmp
add
mov
sbb
sahf
ss
sbb
jmp
call
mov
mov
push
cmp
mov
cmp
pop
cmp
lcall
jno
adc
adc
adc
fwait
jb
jo
inc
xchg
cmp
mov
sub
cli
je
pop
and
scas
sub
cmp
imul
daa
mov
orl
jl
fcmovnbe
sbb
sti
lea
xchg
mov
push
dec
cmp
test
iret
icebp
dec
adc
popf
nop
fwait
pop
or
scas
inc
repnz
loopne
push
js
popf
aad
push
jo
add
dec
mov
callw
sbb
mov
mov
rcrb
inc
mov
sub
or
mov
ret
pop
mov
mov
popf
xor
push
mov
scas
les
push
cli
loop
cli
sub
push
aas
notl
pop
pop
cs
mov
push
jmp
add
cmp
imul
push
adcl
jg
loopne
scas
movsb
into
and
inc
inc
add
and
or
xchg
jmp
js
inc
jns
cli
sub
jmp
stos
or
and
pop
rorl
repnz
sbb
lods
push
adc
nop
add
mov
jge
adc
sub
loopne
dec
mov
dec
and
les
mov
sbb
cmpsl
jmp
inc
push
add
fistps
xchg
popf
int
in
mov
aad
lret
push
push
jecxz
and
add
lods
in
lea
ljmp
add
inc
shl
jle
ljmp
inc
mov
test
jecxz
lea
mov
push
lcall
arpl
mov
inc
jl
xor
jb
test
dec
push
loop
test
cli
sbb
lods
ror
sub
adc
pop
scas
ror
jge
hlt
xor
ljmp
fwait
clc
cmp
fsts
popa
push
pop
pop
dec
roll
mov
pop
sub
pop
fs
push
mov
xchg
mul
mov
in
divps
and
andl
mov
rolb
insl
mov
test
lods
ja
jle
dec
aad
movsb
outsb
in
lcall
cmc
mov
cmp
sbbl
fcmovnbe
aas
sub
fiadds
cmpsl
scas
fildl
test
mov
adc
cmp
mov
dec
fstl
movd
mov
int3
pop
lea
xchg
or
jp
pop
imul
insb
ja
and
loopne
pop
mov
insl
in
or
repnz
or
xor
repnz
rcrl
jecxz
xchg
cmpsb
outsb
push
cmp
xor
adcb
jae
rol
out
sub
sub
pushf
push
sub
out
push
les
sarb
nop
mov
aam
adc
pop
insb
cmp
movaps
push
mov
mov
xchg
pop
outsl
mov
push
into
decl
mov
jge
pop
stc
gs
mov
in
das
push
mov
les
adc
jl
test
in
out
add
and
push
sahf
scas
sbb
lret
jl
pop
fildll
nop
loope
popl
dec
aam
add
lock
add
stos
shll
les
out
mov
ss
add
or
jmp
loope
push
fwait
dec
es
pop
adc
or
sub
xchg
loop
jmp
rorb
sbb
xchg
loope
shlb
out
cmp
imul
les
pusha
fs
push
bound
sbb
add
mov
mov
call
orl
stos
into
or
mov
stc
div
inc
pop
out
and
dec
jnp
mov
pop
inc
jg
or
push
negb
cmc
mov
adc
push
ss
lds
pop
push
mov
subl
insl
cmp
mov
stos
mov
dec
pop
push
push
push
xchg
xchg
jae
lods
cmpsl
cmp
cmc
pop
rcrl
repz
ss
jmp
xchg
daa
std
fdivrl
mov
imul
ds
out
mov
push
inc
data16
subb
mov
mov
jae
out
ja
jle
pop
mov
and
mov
sbb
sub
pushf
pop
xchg
imul
fsubrl
gs
mov
pop
test
out
mov
daa
inc
pop
mov
cltd
scas
jae
fsubrl
test
pop
mov
fildl
xchg
sbb
ljmp
lea
jno
add
cmp
cmpsb
test
adc
fs
js
inc
out
movsb
mov
and
aas
js
jno
mov
in
in
imul
decl
sub
rorl
clc
push
pop
outsb
mov
test
rclb
mov
lods
dec
repz
or
cmpsl
hlt
jnp
repnz
push
add
dec
out
jle
lcall
loope
daa
jecxz
cmpb
mov
imul
fmull
cmp
addr16
xchg
cmp
xchg
dec
outsb
outsb
shlb
sbb
add
div
out
jo
call
or
adc
gs
inc
push
mov
cmp
les
lods
and
mov
sbb
push
xchg
mov
fiaddl
inc
test
pushf
rcll
pop
fistps
out
mov
into
xchg
lock
pop
lcall
jno
fcmovnbe
sahf
data16
scas
loope
stos
cli
add
int3
cwtl
dec
xor
inc
lahf
cmc
lods
jp
pop
jb
xchg
daa
inc
mov
popa
mov
or
ss
daa
ss
iret
jle
ret
out
sbb
cmpsb
outsb
das
jecxz
pop
or
shlb
push
xchg
cmpsl
pop
stc
adc
adc
movsl
jmp
sub
add
jle
push
fsubl
dec
cmp
lcall
mov
mov
pop
call
xchg
xchg
sbb
aaa
mov
mov
pop
or
pop
pop
movsb
insb
cmc
ja
clc
xor
xchg
scas
sbb
xor
nop
push
dec
jo
movsl
dec
add
mov
sahf
dec
inc
fldlg2
pop
pop
jne
mov
fidivs
push
and
dec
xorb
dec
loopne
mov
cld
jo
ret
aaa
cmp
call
mov
hlt
out
pop
sbb
stos
outsb
push
xor
insb
sub
rorb
jge
icebp
mov
bound
push
cld
inc
jo
cmp
cmp
lahf
imul
or
jne
fistps
fildll
and
adc
out
sti
scas
out
test
outsl
movsb
adc
hlt
push
jbe
mov
fsubrl
out
cmp
xor
mov
xor
test
dec
add
mov
aad
fistl
sub
jmp
roll
les
sbb
jns
push
push
jmp
jge
test
pusha
jecxz
lds
ja
adc
insb
insl
jnp
shlb
fidivl
and
mov
sbb
pop
jg
mov
pop
iret
mov
pop
loopne
jg
mov
fcoml
insl
out
cmp
xor
hlt
mov
pop
xor
movsb
ljmp
fdiv
push
and
arpl
mov
pop
mov
push
pusha
out
mov
push
shll
pop
push
ret
test
dec
cmp
mov
dec
fisubl
sbb
push
adc
pop
repz
testl
push
cmp
adc
adc
sub
ds
fsubl
pop
mov
enter
mov
sub
dec
and
cli
hlt
sbb
cmp
ret
jo
add
std
mov
movsl
out
into
in
add
jg
int3
shrb
pusha
jg
sub
cmp
vlddqu
lods
adc
and
fnstsw
mov
adc
push
mov
mov
and
aam
ds
lock
je
xchg
xor
jo
ja
cmp
mov
inc
xchg
cwtl
cmpsb
sbbl
mov
sarb
pop
enter
mov
cmc
lods
lods
or
pop
jmp
pop
push
fistpl
push
shll
pop
add
leave
push
scas
push
adc
or
jnp
add
and
mov
mov
jbe
inc
sti
add
inc
push
lock
popa
pop
adc
repz
arpl
test
xchg
sbb
imul
mov
clc
sbb
and
pop
out
testb
inc
push
mov
out
dec
mov
fstps
add
fwait
xor
mov
jp
and
fimull
les
inc
scas
cmp
xlat
push
push
sub
cmp
mov
and
add
cmc
add
dec
dec
outsb
shll
jle
jp
test
sbb
loop
fstpt
sti
dec
push
in
add
dec
pop
sbb
mov
enter
mov
popf
jge
mov
iret
fcomps
mov
out
push
xor
fiadds
adc
xchg
xor
cwtl
sub
popa
push
dec
pusha
mov
or
push
out
dec
xchg
xor
scas
lahf
out
imul
cld
mov
mov
rcr
push
mov
icebp
cld
pop
xchg
mov
or
inc
xchg
int
lret
arpl
or
imul
push
daa
sbb
add
push
jg
fs
repz
out
rclb
aaa
jl
xor
and
xchg
out
and
pop
jecxz
mov
mov
in
jae
mov
es
xor
mov
jno
je
dec
cmovo
xchg
neg
mov
shlb
inc
gs
jg
xchg
sub
and
test
xchg
adc
xor
jmp
mov
sub
mov
dec
push
adc
mov
stos
fs
repnz
sub
cmp
sbb
movsb
dec
repz
fmuls
jns
les
sahf
les
fistps
outsl
jmp
and
pop
cmp
je
into
scas
add
mov
fwait
or
lcall
fcoml
fwait
and
inc
add
pop
aaa
loopne
inc
push
xchg
xor
les
cmp
pop
in
sub
sbb
popa
or
call
cltd
mov
addb
push
adc
cmpsb
xchg
push
not
mov
pushf
mov
xchg
insl
pop
decl
or
inc
dec
lret
and
mov
stc
pop
insl
aas
jecxz
popf
adc
push
cmc
bound
push
jl
in
cltd
movsb
jbe
test
xor
mov
jecxz
add
in
xor
movsl
xor
dec
jno
inc
pop
sub
push
test
fs
pop
or
popf
into
lahf
popa
mov
outsb
adc
mov
sbb
jp
cltd
push
iret
int3
mov
mov
add
insb
test
cld
and
dec
in
and
mov
ret
or
insl
inc
ljmp
sub
mov
jae
mov
and
push
lock
cmp
out
insb
adc
sarb
push
adc
cmc
mov
xlat
xchg
mov
add
out
mov
test
sarb
insb
outsl
dec
and
jmp
in
pop
add
pop
loopne
sub
mov
out
mov
jmp
bound
pop
bound
inc
mov
out
sahf
pop
pop
xor
lock
dec
shrb
jecxz
pop
data16
nop
inc
cmpsb
repnz
ja
xor
les
scas
ljmp
aaa
dec
inc
xor
fs
mov
xchg
pop
push
and
popa
or
aam
je
xor
lods
test
and
jl
dec
int3
inc
mov
shr
cmpsl
imul
ss
popf
mov
jbe
sub
jns
out
fisttpll
xchg
mov
rcr
iret
add
adc
or
pop
mov
and
pop
lea
or
cltd
pop
out
ficompl
mov
and
js
fildll
sbb
mov
push
ds
sub
inc
sahf
inc
mov
mov
sbb
daa
fbstp
mov
inc
test
inc
adc
or
fmuls
xor
xor
push
imul
jg
mov
cwtl
xchg
mov
negb
mov
in
seta
rcrl
test
sbb
add
sub
hlt
xchg
push
arpl
xchg
pop
xlat
std
gs
adc
gs
pop
imulb
enter
repz
add
adc
movq
fisubl
dec
jmp
gs
lock
lods
sbbl
hlt
cmp
and
gs
fidivrs
or
lret
shlb
mov
mov
adc
adc
and
dec
cmp
jl
addr16
sbb
testb
lods
lods
jp
mov
lahf
repnz
cmp
xlat
xor
mov
mov
repz
andl
ss
inc
push
imul
sub
pop
fsubs
addr16
mov
test
int3
imul
fwait
aaa
or
roll
dec
xchg
cmc
add
in
fidivrl
push
rcll
fs
xchg
push
lea
sbb
dec
or
subl
lock
jp
inc
mov
in
insl
adc
addr16
ficompl
fistpl
sbb
dec
cmpsb
adc
jmp
and
divb
sbb
lea
xor
data16
sub
or
out
sub
loope
push
jo
testl
loopne
sub
cld
add
repnz
push
lods
sub
inc
loopne
notb
lds
mov
inc
mov
sbb
mov
cmp
fcomi
lahf
jbe
rcr
push
xchg
mov
jle
sub
adc
jecxz
dec
push
cmpsl
cmc
mov
sti
rcrl
movsl
std
rolb
pop
jge
test
loopne
mov
and
mov
jle
lret
and
cli
dec
push
xor
push
test
out
fistps
int
jmp
das
adc
int
push
add
jo
or
xchg
imulb
mov
adc
mov
push
mov
ret
fdecstp
in
pop
adc
mov
xchg
iret
inc
pop
pop
push
shrl
sbb
mov
aaa
sbb
int
dec
scas
fildl
jno
insl
roll
pop
xor
jmp
cmp
ljmp
push
das
pop
push
test
aad
mov
stos
std
loopne
mov
jnp
das
xchg
daa
mov
sbb
adc
xchg
cmp
mov
sub
adcb
repz
movsb
add
xchg
cmp
loope
pushf
mov
lahf
jmp
push
pop
push
and
out
ds
outsl
gs
mov
sbb
cmpsb
or
push
mov
or
xor
sbb
and
adc
and
jl
add
mov
and
fistpl
mov
mov
das
gs
jge
sub
mov
fisubrl
cmp
lcall
ret
sbb
or
test
adc
leave
insl
fnstcw
subl
in
cmpsb
je
aam
fs
repnz
jmp
int
and
nop
hlt
adcb
mov
loopne
mov
or
test
std
sub
outsl
outsl
inc
pop
ret
add
inc
xchg
add
jmp
hlt
and
stos
icebp
jnp
xor
movsb
xchg
decb
jo,pn
mov
shrb
hlt
lock
inc
xor
mov
jecxz
divb
jg
push
pop
sti
xchg
outsl
jns
adc
fisubrl
inc
popa
inc
xor
sbb
out
push
push
daa
in
enter
outsb
inc
scas
add
dec
imul
adc
add
xchg
shrl
adc
pushf
cmpsb
inc
mov
addl
sahf
dec
aad
inc
mov
das
push
cld
clc
je
sub
cli
mov
jae
orl
in
sbb
mov
mov
gs
jns
xor
mov
push
sub
repnz
xor
sahf
mov
xchg
sarl
mov
cs
loopne
mov
cmp
sbb
jle
and
or
stc
lcall
mov
cwtl
pop
cmpsb
add
fcompl
lock
and
inc
repz
jb
sub
add
jne
xor
xchg
mov
pusha
popf
enter
idivl
cmp
pop
cmp
rorl
les
dec
out
xor
jl
sbb
mov
mov
or
dec
fs
lock
adcb
cwtl
lret
je
inc
and
inc
dec
pop
cmpsb
std
fwait
add
mov
je
out
adc
xor
sbb
cltd
xor
scas
jmp
xchg
mov
mov
and
imul
lds
inc
fdivrl
sub
cmc
lods
setno
lcall
cmovg
sbb
jle
mov
mulps
inc
and
pop
pusha
aad
cmp
in
fsub
jns
sbb
or
popa
xor
xor
loop
lock
inc
jmp
adc
pop
test
nop
inc
cmpsb
outsl
push
je
and
fildl
fidivrs
mov
push
xor
sub
adc
pusha
mov
sub
int
ja
sbb
rcrb
mov
enter
cmpl
sub
push
push
test
jecxz
fadds
xor
cmp
sub
addl
dec
pop
stos
setl
sub
cmp
lea
in
aam
pushf
pop
inc
or
jge
cmp
js
lret
nop
shl
fs
xor
call
call
js
mov
test
sbb
mov
and
js
out
push
in
ss
dec
jnp
jae
data16
outsb
push
test
jno
jb
cwtl
adcb
in
cmpsl
repz
xchg
ds
repz
lcall
push
jle
jg
mov
bound
loopne
xor
lock
ret
or
outsl
pop
clc
fstpt
ficoml
sub
and
push
loopne
xor
leave
arpl
mov
sti
lds
mov
inc
call
popa
fisttps
or
and
and
cmp
faddl
pop
jo
test
popa
cmp
cltd
mov
or
xor
fistpl
test
mov
xor
psadbw
pop
subl
add
sub
mov
clc
cs
xchg
push
sbb
and
test
mov
push
std
les
es
in
ja
jg
add
into
push
cltd
ds
mov
push
or
out
movsl
out
xor
arpl
add
call
movlps
jns
int
das
add
add
call
or
xlat
mov
cmc
xchg
ljmp
std
pop
push
cld
xchg
jg
scas
out
notb
push
ja
es
es
out
mov
aad
jb
lods
aam
or
insb
arpl
stos
push
push
nop
fwait
push
mov
xchg
dec
leave
cmp
adc
lods
jmp
loop
jne
add
es
pop
dec
mov
subl
push
mov
scas
xor
test
xor
nop
inc
fs
movsl
insb
mov
jg
les
das
pop
dec
lods
or
aas
fdivrl
leave
dec
or
lds
xor
fwait
je
stos
sub
mov
jl
ret
hlt
sbb
dec
push
jne
loopne
inc
add
test
xrelease
cmp
pop
testb
loopne
int3
ret
mov
fisttpl
out
data16
es
push
xchg
add
in
sti
ror
imul
hlt
push
ret
inc
test
imul
jg
mov
ret
aaa
sbb
push
icebp
inc
pop
jne
loop
sahf
add
mov
push
mov
or
cmc
into
mov
xchg
mov
or
das
pop
pop
push
nop
jp
jnp
sub
cwtl
insb
cltd
rcrb
aas
jns
pop
decl
inc
aaa
jmp
xor
fldl
inc
adc
sub
mov
mov
cmc
nop
xor
je
push
scas
dec
sbb
add
ret
add
jb
push
mov
jno
out
mov
call
add
inc
jbe
fistps
push
dec
dec
notb
jne
push
shll
jns
add
pop
aad
mov
hlt
imul
sub
push
sahf
sub
sahf
cmpb
mov
loopne
sub
scas
push
outsl
pusha
pusha
scas
ret
in
push
fwait
and
xor
inc
je
ret
gs
fs
mov
xlat
shrl
movl
int3
lahf
lods
add
call
fsincos
scas
daa
xchg
in
int3
cld
test
inc
pop
lods
aaa
jl
and
aas
mov
je
mov
popa
push
nop
mov
into
mov
xlat
xor
sbb
and
mov
addl
or
data16
mov
jmp
in
sbb
add
mov
pop
jne
mov
cmp
xchg
mov
xor
dec
pop
adc
inc
inc
ja
pop
push
aaa
jle
sbb
cltd
xchg
mov
xchg
mov
pop
int
inc
ret
std
dec
movsb
and
int
mov
mov
push
xor
and
xchg
inc
popa
and
mov
loopne
push
cli
loop
sbb
dec
lods
jge
insb
pop
push
js
adc
cmpl
pop
test
dec
into
cld
std
push
jecxz
push
push
adc
data16
adc
pop
ret
dec
loopne
repnz
jl
setno
jle
fs
cmp
adc
push
mov
jb
pop
pusha
repz
mov
mov
test
shl
mov
mov
mov
stos
jbe
fistpl
clc
fstpl
jmp
mov
and
out
sub
mov
xchg
xchg
jae
add
and
adc
scas
push
cs
stos
inc
addr16
adc
push
push
jg
pop
insl
fidivrl
mov
rorb
jno
mov
fsubs
push
adc
cmp
sbb
fcoms
mov
cwtl
mov
mov
adc
leave
mov
cmpl
and
mov
insb
fimull
mov
leave
xor
lahf
fimull
int
push
loopne
jmp
or
dec
inc
cmp
dec
mov
xchg
mov
jmp
jl
mov
sbb
rorl
jecxz
aam
mov
push
jnp
pop
mov
sti
inc
lret
xchg
mov
outsl
add
movsl
movsb
mov
push
stos
mov
xor
jnp
sbb
js
int3
jmp
mov
push
mov
sbb
or
in
stos
out
cmpsl
fistpll
mov
lret
ja
decl
mov
aaa
and
mov
mov
ret
jne
dec
cmp
push
mov
cs
inc
pop
enter
es
mov
sub
xchg
fldt
jmp
sbb
sub
rcr
xor
iret
cmpsb
mov
fwait
aad
add
faddl
pop
inc
dec
jnp
mov
loop
inc
movsb
sub
adc
les
fwait
inc
sti
ja
cmpb
popf
cli
insb
lods
pop
pop
cmp
push
ret
sbb
imul
inc
jnp
in
push
inc
and
xchg
sbb
les
test
out
movl
mov
addr16
hlt
adc
or
roll
dec
and
shll
inc
rcrl
adc
rcl
scas
cmpsb
inc
xchg
mov
in
loope
outsb
and
divl
std
mov
push
shll
scas
push
movsb
xchg
xchg
lret
rolb
mov
cltd
aad
pop
pop
pop
dec
dec
xchg
jp
f2xm1
mov
jns
push
jmp
jle
lahf
jmp
fildl
popa
fimuls
cmp
dec
or
les
pop
xor
inc
sbb
xchg
lret
jnp
jmp
mov
push
jb
xchg
testl
dec
xor
shrb
jae
out
fdivr
push
orb
scas
push
sbb
jnp
arpl
push
out
fistps
pop
mov
sbb
sbb
push
inc
ljmp
ret
mov
aad
movsl
les
add
push
cli
cmp
dec
pusha
xchg
push
out
or
sub
fwait
mov
es
sub
shlb
mov
sub
push
lret
inc
in
nop
pop
icebp
mov
mov
ljmp
mov
push
mov
faddl
scas
cmp
adc
int3
sub
mov
push
jle
lret
fmull
cmpsl
fwait
mov
xor
stos
mov
cli
cltd
outsl
arpl
sbb
test
ljmp
in
mov
aaa
xchg
sti
jb
cltd
mov
ret
mov
stc
dec
jb
push
clc
mov
outsl
xchg
aam
fsubr
xchg
pop
mov
test
call
iret
push
xchg
xchg
pusha
mulb
push
rclb
clc
jmp
xchg
cmc
mov
cmp
in
lds
dec
mov
inc
loope
jl
and
enter
adcb
adc
mov
sbb
mov
fsts
lret
imul
xchg
in
rcrb
pop
shl
pop
inc
stos
frstpm(287
push
adc
sbb
sbb
push
xchg
add
pop
xchg
add
nop
mov
arpl
rorl
sbb
pusha
jmp
sar
loop
push
insb
mov
stos
or
mov
xchg
mov
xorb
xchg
adc
sub
mov
adc
jge
push
mov
jle
fcmovu
outsb
cmp
xchg
cli
loopne
in
dec
stc
scas
ror
outsb
aas
mov
mov
mov
popl
popa
pop
dec
pop
mov
and
lahf
pusha
lds
test
inc
sub
jp
scas
iret
mov
jbe
sub
popf
outsb
xor
hlt
and
push
imul
mov
imul
bound
dec
adc
fldl
mov
mov
xor
xorb
fstpl
mov
hlt
mov
dec
xor
cmp
jmp
adc
enter
jbe
outsl
xchg
les
ret
std
jmp
pushf
repz
ficoms
fistps
loop
cld
loopne
stos
je
xlat
es
std
cltd
mov
push
inc
in
xchg
xchg
jp
mov
sub
lods
imul
repnz
ja
mov
fidivl
adc
out
sbb
mov
lods
outsb
int3
imul
popa
leave
mov
push
lock
mov
xchg
scas
sub
inc
and
daa
mov
hlt
incb
jle
out
stc
fistpl
sub
or
push
inc
roll
aam
jle
cwtl
sahf
xchg
inc
sub
mov
jp
stc
popf
push
popf
aam
sti
negb
lahf
sub
out
in
test
enter
out
mov
jae
sub
mov
lods
ds
shrl
jbe,pt
shrl
ds
rcr
jns
adc
pushl
rol
mov
jge
mov
loop
out
loope
mov
inc
fwait
lret
cli
push
lds
scas
or
mov
or
in
ret
repz
and
dec
test
push
fadds
pop
movsb
jno
jmp
sbb
mov
cli
xorb
push
loopne
push
xorb
in
push
or
and
mov
std
mov
les
shll
popf
loop
mov
test
lahf
je
hlt
sbb
fs
adc
dec
inc
mull
cmpsb
roll
xchg
push
test
inc
sub
fldl
pop
lret
push
stos
into
or
xchg
cmp
jmp
jne
xchg
adc
pop
jp
mov
insl
test
shlb
mov
int3
jae
jmp
dec
mov
sub
popf
js
incb
aad
fmull
fs
out
inc
pop
xchg
push
lods
dec
aas
adc
popa
mov
and
sbb
mov
fdiv
lock
loope
mov
xor
cwtl
fmull
jno
jmp
loopne
pop
dec
scas
add
push
popl
cmp
jmp
jbe
leave
lods
add
pop
loopne
xor
sub
mov
cltd
push
push
gs
cwtl
out
pop
int3
out
pushf
outsl
addr16
xor
mov
int3
push
inc
xor
loop
xchg
jo
lahf
fs
in
xchg
dec
je
add
mov
mov
loopne
fcmovnu
mov
push
pop
js
stos
pop
inc
insb
out
ss
outsl
adc
fs
inc
jle
push
sbb
lods
mov
mov
incb
push
or
jne
scas
add
cmp
movsb
mov
sbb
xchg
movsl
push
or
cmpsb
loop
callw
pop
sti
test
dec
mov
mov
pop
loope
pop
mov
cltd
in
clc
xchg
scas
imul
outsl
sub
adc
lret
lock
fidivrl
lret
mov
mov
in
inc
or
add
aad
mov
sub
jnp
jg
add
xor
fdivl
jl
mov
lods
sti
push
lock
and
xor
push
push
push
mov
mov
icebp
shrl
mov
jg
fisttpl
aad
aam
out
rorl
xchg
and
pushf
lcall
cmp
or
lock
add
lret
mov
sub
and
je
dec
aas
clc
cmp
into
push
js
loop
sbb
shl
sub
rcrb
popf
and
dec
mov
stos
lcall
push
std
rcrb
popf
or
lods
insl
pusha
iret
imul
mov
fstl
sub
push
gs
les
repnz
add
cmp
xlat
mov
push
les
test
lods
push
mov
jne
pushf
popa
pop
push
iret
jno
hlt
sub
insb
addr16
jae
js
sbb
out
or
out
call
pop
cmp
sub
decb
hlt
out
inc
jns
xorl
stos
mov
jne
xchg
adc
jnp
leave
pop
scas
or
and
mov
aas
in
lret
mov
stos
por
cltd
mov
xchg
enter
jnp
jle
xor
sub
pop
dec
stc
shl
xchg
dec
and
sbb
stos
scas
sbb
in
ja
adc
loope
cmp
adc
dec
xchg
xchg
and
fwait
adc
mov
in
dec
push
stos
inc
popf
xchg
lods
push
sarb
mov
lods
add
jecxz
int
les
push
cmc
sub
xchg
fsubr
loop
jecxz
cmp
movsb
fisubrl
popl
orl
sub
cs
pop
sbb
xor
and
das
cmp
lea
sub
push
gs
imul
addl
or
cld
movsl
sarb
stos
add
mov
sub
or
arpl
push
mov
inc
scas
ja
scas
sbb
pushf
mov
movsl
pop
or
push
sub
cmp
dec
rolb
xorb
sti
mov
ljmp
int3
push
lock
adc
loope
fs
add
hlt
mov
cwtl
bound
leave
repnz
mov
xchg
ret
cmp
dec
sbb
pop
repnz
fistps
lahf
adc
out
fdiv
jno
dec
aad
sbb
in
cwtl
arpl
xor
in
push
mov
lret
sbb
rorb
mov
or
and
pusha
rorl
push
add
in
insl
fnstsw
xchg
sub
mov
mov
xchg
scas
test
sub
inc
pop
and
rcrb
dec
arpl
xchg
mov
jnp
xchg
dec
dec
mov
pop
and
scas
pop
aad
xlat
mov
mov
push
mov
in
inc
gs
pop
sbb
lods
mov
or
das
adc
dec
mov
lock
out
test
fsubs
lret
test
push
push
sbb
mov
int
lods
repz
repnz
xor
xchg
fbld
jae
xchg
cli
mov
cmpsb
jmp
je
dec
xchg
lret
add
cmpsl
mov
sub
add
and
xor
notb
out
and
sub
mov
movsb
push
testb
add
mov
push
imul
ret
xor
shr
ds
frstor
imul
cs
or
xlat
sub
inc
mov
stc
pusha
test
add
push
add
jae
outsl
pop
fwait
in
popa
xchg
ss
arpl
loope
push
mov
clc
pop
jnp
xchg
mov
or
mov
mov
ficompl
jnp
les
loopne
lock
test
mov
cmp
aam
jns
or
and
jp
cmp
fistps
and
movsl
in
cmp
fimull
andl
adc
mov
leave
jp
jns
dec
aam
xor
aam
sbb
test
int3
cmpsb
sub
fisubl
lds
mov
negl
jnp
push
sbb
mov
cmp
pushf
ljmp
shll
or
ljmp
pop
mov
push
test
pop
mov
stc
adc
adc
push
jb
adc
dec
inc
mov
push
pop
or
pop
xchg
mov
out
xchg
jp
repz
jge
sub
lcall
pushf
xor
xchg
lret
jl
pop
sub
xchg
xor
arpl
jg
loop
jb
mov
add
jo
jmp
pop
in
jp
mov
je
pop
add
mov
push
pop
pop
xchg
outsl
mov
pop
idiv
ret
add
enter
jne
push
add
pop
xor
arpl
loop
ljmp
sbb
fwait
out
xor
xor
mov
adc
adc
mov
addr16
jno
popa
popa
das
bound
aam
roll
lcall
push
mov
inc
aaa
andb
or
adc
ja
pop
jmp
testl
push
lret
dec
rsqrtps
scas
inc
sbbl
cmpsl
push
push
test
enter
cld
lods
inc
adc
loopne
mov
out
and
insb
ds
loope
pop
dec
shlb
fdivl
add
aaa
popa
outsb
sub
and
loope
add
cmp
mov
mov
and
mov
lds
push
test
aas
xchg
lock
jl
in
add
xor
lods
int
rclb
xor
in
jecxz
lcall
add
lock
adc
sub
mov
push
aaa
adc
scas
aam
cmpsl
xchg
repnz
fisttpl
pop
xchg
in
pop
repz
lock
xchg
lahf
fwait
xlat
push
mov
xchg
cmc
leave
cwtl
mov
push
pop
dec
pcmpgtw
sbb
ret
mov
mov
or
push
sbb
out
lods
xchg
sahf
jns
popa
mov
push
inc
clc
mov
in
jns
ret
adc
daa
imul
in
lods
mov
and
xor
mov
mov
pop
add
pop
cld
sbb
xchg
push
shlb
dec
mov
nop
dec
sbb
and
lea
pop
inc
rolb
fsubs
xor
jge
ret
gs
mov
mov
xor
xlat
xchg
popa
adc
bound
mov
cmp
and
push
ficoms
rcrl
sub
sub
hlt
iret
lock
fildll
stos
xchg
in
xchg
push
push
dec
addb
addb
pop
xor
leave
stos
push
fstpl
cld
push
mov
ss
pusha
lret
ret
add
fadds
loop
add
xchg
pushf
out
push
out
int3
or
xlat
lea
mov
testl
xchg
xor
in
jp
push
pop
data16
xor
movsl
ret
outsb
pop
push
sbb
add
jne
ret
arpl
shrl
clc
push
leave
xor
test
stos
push
xchg
sub
in
or
ljmp
hlt
sub
es
stos
das
xchg
dec
cli
inc
xor
ja
pop
imul
out
sub
mov
or
mov
test
imul
inc
in
cmpb
gs
add
or
std
add
or
adcl
jg
pop
jp
test
insl
xchg
sub
aas
jge
scas
lock
mov
dec
add
scas
xchg
clc
mov
push
dec
ficoms
push
add
inc
dec
cmp
gs
sbbl
push
push
fldenv
xchg
daa
and
rclb
xor
out
jmp
flds
add
sbbl
adc
filds
inc
insb
mov
cmpsb
and
sub
stos
enter
pop
jle
mov
loop
mov
pop
jb
dec
repz
and
mov
xor
jb,pt
bound
cmp
loope
pop
ja
lret
outsl
test
xchg
cmp
add
ja
ljmp
add
ret
sbb
loope
sbb
aas
adc
mov
cmp
icebp
dec
push
jmp
sbb
jbe
mov
dec
lea
addb
mov
cmpsb
or
clc
lret
xchg
mov
sub
out
shlb
cmpsl
jecxz
mov
cmc
push
mov
cmc
xor
movl
mov
cmpsb
lods
out
pop
nop
adc
pop
push
cmp
aas
xchg
out
add
add
or
xor
mov
test
mov
sub
xlat
and
or
aaa
in
outsb
inc
icebp
jns
push
popf
and
xchg
fcmovbe
int3
orl
ret
pop
push
negb
lret
sub
mov
repnz
out
mov
ljmp
fdivrl
xchg
inc
arpl
mov
mov
xchg
mov
fdivl
loope
lds
jmp
push
pop
ficoms
in
lahf
sub
orb
outsb
add
fnstcw
xchg
or
data16
popf
pusha
insl
adc
cmp
andl
pushf
jo
sbbl
mov
iret
cmpsb
mov
mov
mov
xchg
cmpsl
movsb
orl
add
adc
frstor
mov
push
arpl
imul
ret
int3
ljmp
js
mov
and
push
mov
adc
cld
fidivrl
jl
inc
incl
jle
ror
sti
dec
lcall
imul
in
testb
jecxz
mov
rol
dec
mov
adc
out
es
daa
adc
inc
jge
lahf
mov
xchg
cmp
mov
out
sub
loopne
cmp
fistpll
adc
xchg
mov
adc
push
mov
jns
cmp
in
pop
rolb
xchg
loopne
int3
in
ss
inc
mov
adc
push
and
or
inc
dec
in
sub
mov
mov
add
movsl
stc
pop
and
or
or
add
in
cmp
mov
xchg
loop
ret
pop
arpl
pop
mov
xor
fs
dec
mov
lock
sub
insl
notb
es
incb
inc
inc
aad
push
and
push
or
push
mov
pop
cmp
sbb
dec
sbb
in
int3
jmp
sub
aam
sub
aas
adcl
rcr
mov
les
inc
dec
add
mov
mov
insb
repnz
cmp
jno
pop
xchg
cmp
dec
arpl
adc
sar
xchg
push
push
sbb
jb
cmp
pop
add
or
push
sbb
push
std
rorb
lock
pusha
push
cmp
adc
test
fdivrp
int3
add
pop
lret
fists
inc
test
gs
xorl
mov
xor
lcall
adc
add
push
cmc
jns
out
cmpsb
stos
xor
fwait
cld
testb
mov
ds
adc
cmpsl
xchg
xchg
cltd
jge
clc
lods
into
fcoml
mov
test
fidivs
pop
mov
jnp
cltd
cmp
ja
int
mov
cld
pusha
mov
es
or
scas
mov
out
and
jns
repnz
ljmp
pop
push
fdivl
xchg
jg
test
adc
popa
cmpsb
insb
mov
pop
scas
icebp
lret
in
clc
fldt
mov
stos
mov
jp
loope
jmp
enter
sub
test
ja
mov
jae
dec
mov
xchg
sar
stos
je
lcall
rorb
shl
jne
mov
or
adc
mov
mov
jo
mov
dec
push
aaa
push
jbe
mov
mov
jmp
lods
add
icebp
fwait
push
rcrb
sub
dec
fwait
clc
pop
adc
popf
icebp
add
bound
pop
lods
cmp
sbb
add
sub
pop
aaa
mov
aam
rorl
int
xchg
mov
ljmp
movsb
ss
ret
mov
mov
fadds
cmp
and
push
pop
jns
in
rorb
lcall
xor
mov
mov
sbb
fs
adc
repnz
and
sbb
add
into
ja
jo
hlt
lahf
bnd
push
mov
jecxz
fldl
sbb
pushf
dec
cwtl
sub
dec
xor
mov
sub
arpl
xor
imul
out
jno
pop
mov
in
and
ror
rclb
ss
cmp
jae
test
sbb
xlat
movl
test
pop
aad
xor
inc
or
xchg
dec
sar
push
stos
ret
pop
lret
sti
add
jecxz
cmp
cltd
addr16
mov
push
std
je
or
dec
push
scas
inc
mov
pop
xor
jb
or
gs
or
in
pusha
imul
sbb
out
lret
lods
out
cmp
rorl
repz
pop
xchg
add
adc
lahf
add
cld
xchg
lea
lds
mov
add
out
jno
pop
xor
xchg
movsb
icebp
in
fstps
xchg
incl
mov
fstl
add
cltd
addr16
push
mov
xchg
mov
shl
cs
shl
lahf
mov
add
xchg
cmp
out
aad
dec
sbb
das
out
ret
xchg
lcall
xchg
pop
mov
push
sti
sarb
repnz
sbb
dec
imul
inc
cmp
xchg
xchg
sbb
pop
ficoms
xchg
push
popa
jg
xor
xor
xor
mov
popa
mov
adc
ss
mov
jge
imul
or
push
lds
lods
jmp
xor
push
adc
lods
sbb
pop
rcrl
sbb
or
and
fistpl
je
cs
out
pop
dec
xor
outsl
pop
xor
hlt
test
dec
jge
and
jle
std
adc
fldenv
cmc
rcrb
rolb
mov
ret
dec
or
xor
rcr
cltd
sub
sbb
pop
cmp
lcall
lock
sbb
or
cld
fstps
cmpl
xchg
dec
add
jmp
jo
xor
sub
mov
in
adc
cmp
stos
icebp
cmpsl
jno
fistps
aas
mov
xchg
jecxz
jbe
xchg
push
xor
push
adc
xor
lret
lea
or
fidivrl
enter
clc
sbb
mov
movsb
popa
sbbl
aad
sub
push
lea
inc
fnsave
lahf
lret
stos
push
push
faddp
out
std
adc
mov
push
xor
dec
rolb
out
jbe
cli
scas
or
mov
cli
and
adc
out
mov
push
push
mov
stc
in
fisttps
bound
pop
inc
mov
repz
cli
addr16
inc
add
xor
iret
cmp
movsb
push
xchg
lcall
sub
imul
movsb
jae
ja
inc
arpl
pop
lahf
into
imul
cmpsb
jbe
gs
push
dec
pop
jae
adc
xchg
adc
test
jns
xchg
push
or
xchg
add
repz
sub
dec
xor
cmp
scas
movsl
stos
jbe
cld
push
divl
or
rorb
outsb
pushf
jge
stos
cmp
xlat
mov
push
jbe
insb
jb
mov
aad
jmp
fcomps
inc
enter
add
cmpsb
push
mov
inc
jo
sbb
inc
xor
enter
dec
inc
dec
rolb
dec
fldcw
cmp
loopne
scas
sub
xlat
mov
xchg
xor
inc
outsb
pop
lret
sub
ja
fdivrl
mov
mov
pusha
mov
xchg
movd
hlt
lea
and
arpl
pop
pop
dec
sub
jo
dec
sbb
mov
mov
test
push
cmp
faddp
jnp
mov
in
sbb
sahf
or
xchg
sar
mov
jae
scas
jbe
pop
sub
das
inc
cmp
cs
xchg
push
cmp
push
add
or
cmc
jns
mov
push
or
mov
data16
and
rorl
ljmp
pop
lea
shrb
test
pusha
pop
cmp
fucom
pop
xor
mov
lcall
xchg
iret
adc
lret
insb
cmp
mov
xchg
flds
and
ss
adc
scas
mov
dec
cmp
out
cmp
mov
xchg
add
adc
cmp
adc
xor
out
mov
mov
jp
mov
and
cmpsb
test
mov
loopne
inc
shrl
lods
lret
push
jno
sub
or
stc
adc
fsub
adc
xchg
add
int
dec
pop
mov
jns
je
push
into
lock
sbb
dec
add
and
xor
fcompl
adc
das
flds
lahf
inc
push
pop
outsb
xor
lret
mov
sahf
insb
xor
or
mov
dec
lods
add
test
stc
in
fs
cmp
or
xchg
sbb
jnp
mov
xchg
int3
in
inc
pusha
fiadds
cmpsb
mov
int3
xor
ret
pop
jecxz
fadds
sbb
shlb
fisttpl
xchg
jae
out
cli
inc
pop
inc
inc
xchg
add
repnz
cmp
pop
push
imul
popf
mov
or
sub
test
std
xchg
adc
lds
mov
insb
lea
mov
mov
rcrl
jp
fiaddl
or
push
sub
jg
in
andb
out
out
cmp
inc
and
popf
int3
mov
sarl
aad
inc
ljmp
mov
js
cmp
pop
mov
rcl
xor
sub
push
dec
fisubs
xchg
loopne
cwtl
out
sub
mov
ret
scas
xchg
out
lods
fadds
std
aam
leave
in
js
in
lahf
enter
mov
mov
mov
xor
cmpsb
mov
mov
gs
push
rorb
lods
jb
inc
popa
sbb
je
rorl
dec
stos
jnp
dec
ss
loopne
test
pop
in
push
fs
pop
arpl
xchg
mov
mov
sbb
frstor
and
insl
jecxz
xchg
mov
js
enter
mov
in
add
sbb
push
xchg
xor
out
sbb
pop
mov
jbe
hlt
sub
pop
adc
mov
fisubrl
jl
enter
jecxz
in
loopne
jno
jp
mov
cmp
cld
iret
daa
mov
sbbb
jae
call
mov
sub
rorb
inc
ljmp
xor
mov
imul
xchg
pushf
jl
sub
cmp
jmp
pop
mov
or
dec
js
jl
lret
dec
sbb
jb
sbb
dec
push
test
ret
loop
sbb
xor
and
inc
int3
push
mov
fcoms
inc
out
xchg
cmp
int
lret
mov
jno
jge
cmpsl
inc
or
push
inc
xor
dec
outsl
test
rorb
cwtl
pop
icebp
jecxz
xchg
sbb
int3
test
mov
insb
ffreep
fucom
inc
inc
push
insl
fmull
mov
xchg
sub
mov
sub
lock
loop
inc
cs
popa
pop
xor
add
sbb
mov
jo
pop
mov
iret
lret
cmp
cmp
bound
ljmp
leave
scas
sub
add
popa
popa
cmp
or
andb
cs
mov
jg
dec
incl
js
je
es
scas
jecxz
inc
nop
adc
test
push
push
mov
add
data16
sbb
aas
les
inc
sti
pop
js
outsb
inc
mov
mov
add
enter
fucom
ja
pop
cmp
arpl
mov
pop
sarl
cltd
and
jo
inc
mov
in
sub
sub
pop
sti
mov
mov
xchg
sub
orl
cmpsb
cwtl
cltd
dec
inc
pop
xchg
mov
adc
insl
lcall
inc
cs
daa
fdivrs
icebp
sub
pop
and
push
mov
add
inc
inc
cmpsl
adc
or
adc
mov
js
stos
or
and
jg
lcall
clc
xor
inc
shl
or
inc
ja
xor
push
jbe
test
aad
xor
pop
cmp
ret
inc
sahf
call
mov
shrl
in
xchg
jg
imul
pop
dec
push
add
adc
jne
mov
sub
or
mov
mov
cwtl
pop
scas
dec
sub
add
jp
pop
std
xchg
and
mov
xchg
cmc
movsl
cmp
dec
cmp
into
or
sti
xor
mov
cld
cmp
lea
int
add
das
xor
cmp
lods
and
lret
jnp
es
lret
fidivs
out
cli
loope
sub
jbe
pop
les
push
ret
xor
mov
in
lock
jnp
div
xchg
cmp
xchg
or
or
add
sbb
loop
iret
push
mov
mov
outsw
or
in
roll
push
cmp
mov
fldl
push
pusha
pop
test
inc
xchg
pop
jae
push
insl
fwait
lahf
inc
mov
imul
inc
push
push
mov
dec
jno
into
ficoml
movsl
sbb
mov
fsubl
xor
data16
xchg
test
dec
push
jo
pop
pop
sbb
ret
jo
push
cld
shll
push
test
add
jo
jmp
popf
xchg
xor
cli
dec
dec
mov
adcb
movsb
cmpsl
jnp
outsl
mov
mov
hlt
sbb
sahf
dec
ds
scas
push
sbb
and
hlt
pop
movsl
inc
gs
stos
pop
pop
add
and
inc
cwtl
enter
dec
stc
sbb
add
push
xchg
or
frstor
insb
push
out
jnp
add
jecxz
out
sbb
push
inc
jno
int
mov
jl
cmp
mov
mov
ja
out
cwtl
dec
xor
and
mov
hlt
lcall
mov
cmpsl
rcll
mov
inc
xor
adc
dec
sbb
or
int3
out
jecxz
adc
iret
mov
inc
loopne
pop
jle
das
movsl
arpl
jae
push
lahf
pop
sbb
push
mov
inc
fcoms
and
popa
jl
frstor
int3
push
mov
pusha
push
int
daa
xor
pop
jg
mov
inc
dec
jo
mov
imul
xor
mov
lcall
shr
cmp
sbb
fsubrs
cmp
xlat
mov
push
mov
sahf
xchg
jle
mov
rorl
dec
or
aad
pop
jae
adc
shll
mov
jg
inc
and
cld
stos
add
stos
sbb
sub
or
in
movsb
jmp
and
xlat
clc
mov
call
sti
andb
xchg
add
sahf
scas
insb
repz
clc
rorb
movsl
lods
in
pop
xor
imul
inc
mov
lret
data16
scas
in
mov
dec
jnp
xchg
rcr
push
insb
imulb
or
pop
add
bound
mov
add
dec
pop
movsl
xchg
dec
cmp
sbb
mov
addr16
mov
lds
fisubs
ret
icebp
inc
or
leave
push
js
out
je
bound
xchg
stc
shrb
std
mov
loope
mov
punpckhbw
in
xchg
test
jg
pop
lret
imul
test
add
sub
push
add
ret
adc
jp
in
aad
mov
cld
iret
daa
adc
loop
and
lret
into
cmp
jne
pop
adc
push
icebp
arpl
cmpsl
lret
adc
mov
sbb
push
lret
xchg
aad
fstpl
dec
cmpsb
sub
leave
movsl
jne
mov
int
and
dec
pop
fs
in
push
or
mov
push
arpl
add
mov
rclb
mov
jae
lds
fcomp
popa
push
push
jo
jg
xchg
aaa
bound
jbe
inc
and
cmp
jae
pop
call
enter
test
dec
pop
loope
jge
inc
rcl
outsl
int3
insl
inc
mov
push
jmp
lea
dec
adc
mov
sbb
adc
mov
mov
test
pop
pop
rcrb
mov
xor
mov
or
pop
cmpsl
xor
adc
fiadds
pop
xchg
repnz
pushl
sbb
mov
je
xor
cmp
or
add
push
lcall
gs
ds
push
xchg
mov
in
xor
cli
repnz
mov
xchg
lods
fildll
js
mov
repz
jge
in
mov
outsl
jg
inc
mov
in
test
pop
and
cmpsl
push
cwtl
mov
jbe
xor
inc
lods
mov
sbb
push
mov
mov
dec
sbb
jmp
lcall
dec
out
lock
incl
or
adc
testl
repz
call
xlat
ljmp
out
xchg
std
pop
mov
aaa
fwait
mov
mov
into
out
stos
add
lahf
mov
ret
xlat
inc
outsb
push
cmp
mov
cmpsl
xchg
jb
int
sub
push
sub
push
roll
inc
cmpl
arpl
into
insb
cld
pop
inc
mov
negl
mov
xor
inc
pop
test
adc
pushf
jge
stos
stc
test
ret
dec
push
dec
roll
push
iret
cmp
orl
push
out
lods
add
xor
bnd
mov
test
cmp
push
daa
sbbb
dec
lds
fiaddl
arpl
dec
std
fldt
call
ret
mov
aad
daa
sahf
cmp
dec
sbb
mov
sbb
push
mov
lea
aaa
arpl
stos
dec
movsl
insl
adc
icebp
cmc
inc
shll
lcall
push
icebp
repz
cmpsb
mov
fsubrl
repz
mov
cwtl
orb
sub
pop
lea
cmpb
es
or
mov
and
inc
gs
fdivrp
cmp
rolb
out
std
lret
insl
jmp
xor
and
cmpsl
mov
pop
mov
add
popa
jae
pop
cmp
mov
movsl
clc
arpl
or
pushf
aas
lret
int3
test
js
out
lock
mov
sbb
loopne
out
ljmp
pop
xchg
outsb
or
dec
lds
pop
and
std
hlt
out
sbb
jbe
insl
xlat
mov
mov
lock
sub
fcomi
jns
inc
jmp
xchg
icebp
pop
ljmp
out
inc
jne
es
clc
push
push
dec
das
out
jb
sbb
mov
shrb
jb
out
movsl
sbb
popa
xchg
es
insl
fwait
mov
enter
ljmp
adc
lret
pop
ds
jb
sbb
jbe
inc
dec
ljmp
mov
ljmp
jnp
ja
lcall
stc
das
movsb
popf
cld
outsl
inc
addr16
fldt
ja
test
fs
sub
sub
mov
xchg
add
sbb
lds
xor
and
mov
mov
rol
xor
mov
imul
in
jg
clc
or
or
mov
jmp
jl
xor
push
call
inc
mov
push
adc
ret
jno
sub
addr16
imul
notl
inc
outsl
aaa
ds
aam
push
repnz
adc
push
pop
xchg
shrl
pop
out
mov
and
xor
movl
adc
inc
cmpb
stos
dec
cli
clc
jns
aas
sub
adc
push
sbb
lret
push
dec
repnz
lret
jae
lds
fcomps
js
mov
or
xchg
iret
in
mov
fisttpll
sarl
sub
inc
loope
sbb
lods
inc
mov
push
cli
std
lods
add
andl
adc
inc
mov
aaa
jecxz
flds
and
clc
dec
mov
dec
and
mov
xor
sub
fwait
jge
jecxz
inc
fstpt
mov
pop
inc
loop
out
mov
mov
cmpsb
push
sub
lret
les
jb
mov
xchg
aaa
insl
ja
mov
daa
js
or
lea
or
jp
ret
mov
mov
gs
ljmp
ja
or
stos
inc
out
stos
dec
mov
and
or
add
xor
sar
mov
in
pop
ss
ret
xchg
cltd
in
xchg
pop
cmp
cmp
xor
push
repz
nop
sahf
inc
lahf
loop
stos
push
dec
out
and
call
cmp
mov
mov
ret
stos
dec
imulb
dec
pop
stos
popa
insb
out
mov
js
ret
loopne
mov
push
jp
scas
loopne
push
pop
push
cmp
cmp
dec
jp
jne
fiaddl
jp
lea
gs
push
stos
cltd
sbb
xor
test
push
ds
test
dec
out
lcall
dec
mov
aad
xchg
lods
push
mov
push
neg
test
out
movsl
xchg
or
dec
mov
mov
sbbb
fcmovnu
into
cs
das
add
sub
and
repnz
xor
mov
fwait
shl
faddl
in
add
test
xor
xchg
sbb
xchg
out
ret
lods
cmp
add
mov
popf
ds
in
hlt
jl
inc
jg
shl
mov
and
inc
push
hlt
push
mov
ja
aas
push
xchg
lahf
cmpl
ret
cmp
xor
popl
popa
mov
xor
sub
or
pop
xchg
int3
mov
andb
ja
inc
inc
jg
sbb
lock
or
divb
fildll
shll
stc
or
cmp
cmp
inc
div
aam
int3
inc
mov
push
jp
pop
sarl
adc
js
add
xor
pusha
mov
pusha
dec
in
jecxz
sbb
sbb
test
xor
jnp
lods
adcl
sti
mov
push
cmp
fwait
subl
push
test
add
addr16
jbe
movsl
jb
cs
mov
fisttps
mov
pop
push
jb
push
jp
repnz
add
inc
scas
jo
mov
orb
or
inc
inc
sub
movsl
aas
insb
mov
mov
call
divb
jns
popf
test
and
inc
in
xor
test
rcrb
sub
int3
and
fdivrs
pop
clc
sub
pusha
popa
sbb
out
ds
fcoms
pushl
xchg
loop
dec
push
mov
ss
cli
lods
sbb
cmp
mov
mov
arpl
ret
xor
and
out
ja
js
xor
dec
adc
mov
jno
ljmp
popa
cmp
sbb
addb
lods
pop
cmp
mov
dec
xlat
insb
cmc
mov
mov
xchg
or
data16
mov
xchg
xchg
mov
int
fisubrs
mov
repnz
stos
pop
sti
repnz
dec
pop
pop
data16
out
or
movsl
in
push
cmpsb
fnclex
adc
dec
mov
pop
imulb
mov
sbb
xlat
dec
push
dec
orb
pop
lods
jno
cmpsl
fs
inc
xor
mov
fnstsw
or
mov
inc
sub
mov
adc
out
fnstcw
push
out
ja
scas
pop
mov
notl
ret
iret
fimuls
loop
sub
rolb
out
push
jmp
shl
in
lea
loopne
lods
push
cwtl
dec
dec
stc
sbb
loopne
mov
fdivrl
ficomps
cld
divl
lds
sti
push
fildll
fs
xchg
mov
cs
xchg
repnz
cmp
lret
aaa
mov
pop
ss
scas
lods
sub
fs
cmp
roll
mov
cmpsl
data16
sbb
sub
fiaddl
jg
iret
loopne
add
cmp
inc
mov
mov
mov
loop
sbb
xlat
mov
lret
push
pushf
mov
pusha
ss
xchg
jg
sbb
pusha
lds
xor
jmp
test
and
scas
push
imul
xor
lret
movsb
loope
cmpsb
arpl
jo
andb
movsl
mov
push
mov
aad
sub
icebp
scas
scas
dec
xchg
sti
das
sahf
lods
imul
inc
jl
lahf
fs
dec
adc
sbb
mov
push
fs
das
out
movsb
or
mov
jne
ss
cmp
je
roll
sbb
fs
mov
in
push
sarb
cltd
push
movsl
push
mov
pop
sti
fcoml
jnp
ret
jle
inc
insl
push
sbb
or
xor
aad
lods
inc
insl
jmp
inc
pop
mov
xor
imull
outsb
repnz
jnp
inc
cmp
sub
xor
cmp
mov
ja
sub
xchg
push
pushf
shll
insb
sub
out
push
rclb
cs
xchg
mov
das
jnp
sahf
push
sub
sub
pop
jge
ficomps
push
cmp
mov
flds
pop
jmp
mov
xchg
jg
push
fnstcw
sahf
test
test
inc
ret
lds
xchg
scas
xor
cli
mov
dec
mov
and
inc
int3
jg
imul
fs
cmp
inc
mov
fs
scas
ret
jecxz
test
lods
es
xchg
js
mov
mov
mov
inc
jle
mov
shll
mov
xchg
mov
inc
test
dec
lret
adc
jb
xor
hlt
xor
popa
jecxz
mov
dec
or
bound
sbb
sbb
gs
movb
fldcw
adc
pop
fidivrs
int
lahf
mov
ret
xchg
aas
sarl
gs
xor
mov
pop
ret
pop
cmpsl
test
int3
ds
xlat
push
mov
cmp
incl
push
outsb
xchg
popa
or
aam
movsl
sbb
xchg
push
and
fisubs
push
fwait
lcall
rolb
inc
sub
inc
repz
stc
and
jle
aam
leave
imul
mov
or
dec
dec
test
loopne
xchg
mov
lds
dec
aam
sub
cmp
jecxz
lea
rorl
lahf
jne
sub
push
sub
stos
in
loope
mov
push
pop
cmp
push
std
inc
jnp
xchg
or
lock
mov
mov
aas
sti
enter
test
aam
faddl
cld
jno
mov
loop
stos
lock
cwtl
push
cmp
mov
enter
sahf
rorl
out
and
add
jae
ret
nop
mov
jle
lock
rcr
adc
pusha
or
jle
rorb
mov
in
nopl
mov
push
mov
mov
lods
mov
jae
aam
push
jge
xchg
adc
cmp
std
adc
ds
sub
hlt
dec
pop
lahf
add
repnz
xchg
lock
imul
pop
das
cmp
ret
scas
and
xchg
aaa
stos
mov
cwtl
mov
pop
aam
movsl
push
xor
shll
sbb
insl
insl
push
fstps
fcmovnbe
ret
rcrb
test
data16
icebp
int
std
loope
data16
int3
xlat
pop
loope
xchg
push
dec
fcmovu
pushf
mov
push
test
push
add
int3
bsf
dec
xor
cmpsb
shrl
jbe
rclb
fnstenv
dec
or
ror
std
aad
pop
cmpsb
mov
hlt
push
lcall
dec
sahf
ljmp
std
inc
mov
cmpsl
inc
jo
xlat
dec
pusha
sub
lcall
jbe
testl
psubb
mov
scas
adc
cltd
mov
sbb
mov
xor
ret
icebp
add
lods
xor
insb
leave
int3
test
imul
mov
aam
pop
gs
ja
jnp
sub
adc
adc
shrl
add
xchg
das
xor
push
push
pop
push
adc
mov
fwait
adc
sti
mov
shll
sub
in
sbb
lods
cmp
js,pt
adc
js
ss
push
mov
ds
adc
mov
pop
fcmove
enter
mov
imul
xor
inc
xchg
in
and
push
int3
add
pop
and
and
stos
fildl
pop
sub
cmpsl
stc
lods
dec
mov
mov
leave
pop
pop
jb
lret
mov
leave
inc
fcom
mov
pop
shll
jno
xchg
scas
mov
addr16
xor
jbe
push
fisttps
add
push
mov
push
and
rcr
pop
gs
mov
mov
add
aas
push
cmp
xor
in
fnstenv
mov
sub
push
ret
mov
sub
sbb
add
cwtl
je
out
cmpsl
sti
out
mov
imul
xchg
fs
inc
jge
mov
ficoml
xor
out
mov
dec
adc
add
addr16
out
in
pop
cwtl
int3
inc
popa
push
popa
sbb
stos
dec
inc
popa
shll
pop
lea
xchg
sub
push
mov
loop
dec
sub
cmpsb
cld
rcl
cmp
int3
cs
mov
pop
daa
lods
mov
cwtl
pop
xlat
dec
lea
mov
xor
jnp
lcall
mov
cmpsl
mov
in
xor
test
xor
dec
aad
add
xor
lahf
add
outsl
iret
daa
push
mov
cmp
hlt
cmp
out
insl
mov
insb
cmp
lcall
arpl
xchg
fcmovbe
add
push
sbb
repnz
sbb
sub
clc
lods
stos
sti
mov
in
es
in
daa
sub
dec
pop
mov
sarb
cmp
mov
fsub
outsl
jae
mov
xchg
jae
aam
sbb
or
orb
pop
hlt
xorl
cmp
shlb
adc
aas
sbb
inc
or
in
xchg
addr16
cmp
xchg
cli
popf
in
jmp
add
sbb
pop
pop
dec
fsts
leave
push
test
lock
inc
push
scas
mov
fcoms
vfmsub231ps
adc
jnp
or
cmp
push
cmp
inc
jb
arpl
loop
jp
dec
mov
push
inc
add
xchg
mov
mov
adcb
out
in
xor
in
leave
vpunpckhqdq
enter
push
sub
insb
or
jbe
in
or
mov
aaa
sub
lret
clc
xor
shrb
dec
pushfw
stos
sbb
insb
mov
sub
push
imul
add
adc
mov
or
flds
cmpsl
dec
lods
push
push
icebp
dec
mov
xlat
cltd
testb
jne
sub
scas
add
pop
jae
push
fnstcw
push
xlat
sbb
daa
mov
mov
xor
fbstp
movsl
mov
insl
mull
adc
inc
cld
imul
mov
sub
cmp
cli
dec
sbb
or
jb
jnp
aad
data16
ds
mov
inc
and
sbb
fstpl
stos
scas
lret
dec
push
hlt
adc
mov
repnz
mov
loop
mov
push
lret
push
pop
add
aad
data16
or
mov
sbb
popf
jbe
xchg
jb
pushf
fs
or
mov
aas
daa
adc
adc
icebp
ljmp
rolb
mov
jp
out
rcl
xor
popl
pop
push
sbb
xchg
dec
mov
xchg
xchg
xchg
in
rorl
imul
and
pop
xchg
loope
push
fcoms
or
std
and
sbb
bound
mov
cld
cmp
imul
outsb
or
xchg
or
push
loopne
fists
popa
repz
xchg
clc
dec
dec
push
dec
fimuls
dec
lret
fnstcw
daa
decb
jp
das
xor
adc
jb
cwtl
cmp
scas
sbb
xchg
aad
lods
mov
and
vmovq
in
jg
adc
xchg
ss
sbb
outsl
jb
push
int
or
jge
gs
bound
mov
and
pop
cwtl
sub
push
out
loope
mov
and
cmp
inc
cli
stos
fstp
cmp
rorl
sti
shrb
add
clc
lret
mull
pop
loopne
fstpl
mov
fcomps
jecxz
jle,pn
cwtl
cmpsb
mov
decl
in
push
je
into
xlat
scas
xchg
mov
mov
int3
adc
cmp
and
jge
cmc
ss
sub
pop
cltd
mov
test
mov
out
cmc
inc
xchg
xlat
mov
imul
sti
dec
fldenv
testl
int
pop
push
sti
loope
lods
dec
jp
rolb
movsb
or
xchg
pop
fdivl
cltd
mov
jle
mov
mov
popa
js
adc
fisubrl
mov
xchg
mov
jp
lods
mov
es
sbb
xor
dec
dec
scas
scas
stc
ljmp
lahf
sbb
lret
sbb
pop
sbb
and
sti
fists
icebp
enter
inc
dec
iret
jnp
mov
xchg
pop
sbb
js
arpl
popf
call
aas
cli
mov
sarb
sub
jp
xchg
out
push
dec
mov
dec
pop
mov
imul
push
lock
fadds
in
ret
addb
flds
xor
les
loopne
xlat
shll
mull
xchg
push
aam
xchg
aaa
push
lods
call
andl
xor
ret
ret
repnz
pop
in
lahf
push
aam
jnp
sub
sbb
fcoms
fdivrs
idivb
cli
setno
shrb
out
adc
and
dec
in
xor
jge
xchg
mov
xlat
sahf
xchg
imul
or
mov
fcoms
and
pop
sub
hlt
cwtl
push
mov
cmpsl
push
inc
jmp
mov
push
jno
loop
dec
stc
cmc
js
jmp
fstpl
xchg
push
neg
mov
out
mov
jae
aam
adc
je
sahf
aas
push
aam
and
test
sbb
push
out
mov
out
inc
mov
cmpsb
or
adc
adc
scas
out
push
add
testl
jne
xchg
cmp
mov
xchg
scas
push
inc
jl
test
aas
ja
rclb
and
pushf
sbb
and
aam
xor
pop
dec
out
inc
and
ja
insl
mov
mov
mov
mov
stos
pop
mov
mov
test
hlt
dec
scas
add
push
call
and
mov
add
adc
lods
push
mov
sahf
push
xchg
mov
mov
xchg
sbb
cwtl
pop
shll
mov
mov
dec
xor
sarl
lret
lcall
xchg
inc
and
push
shll
add
jg
data16
into
lods
loopne
xor
push
rcrb
rcrl
gs
xlat
subl
adc
scas
iret
cltd
xor
mov
roll
pop
xlat
fnstsw
jg
les
mov
ret
fidivrl
imul
pop
mov
loopne
lahf
out
sarb
gs
cs
cld
mov
outsl
pop
jbe
mov
xor
cltd
faddl
lods
iret
mov
rcl
jnp
mov
jo
cmp
xchg
rolb
sub
xor
inc
mov
mov
push
inc
mov
mov
mov
lock
add
sbb
pushf
popa
xor
jne
iret
mov
lcall
mov
cwtl
aam
fldcw
pop
in
sahf
adc
cli
xlat
arpl
push
sbb
pop
ss
jecxz
aaa
xor
mov
mov
lret
aas
jmp
xor
cltd
int
push
cmp
jl
test
jge
sub
add
aad
icebp
out
fwait
setg
xchg
insb
pop
enter
pop
dec
push
imul
lock
jmp
mov
pop
fdivrl
cmpsb
dec
ds
imul
test
lds
es
pusha
std
pop
pop
xchg
and
fldt
daa
xchg
lock
lret
or
adc
inc
xchg
or
adc
or
rcl
loop
shrl
outsl
sbb
lods
add
cmc
adc
jmp
xchg
mov
pop
jmp
out
cs
test
mov
mov
inc
dec
fistpll
lcall
push
cltd
xchg
jae
dec
push
xchg
decl
subl
cmp
lahf
pop
fldt
js
loop
mov
sbb
scas
fs
pop
jbe
rcrb
or
mov
jne
test
loope
inc
cmp
mov
push
dec
imul
out
aas
stos
adcb
dec
push
scas
cwtl
loopne
cmc
fimuls
call
cli
stos
sub
inc
jmp
lds
mov
subl
jmp
fdivrp
xor
xchg
out
ljmp
gs
in
xor
pop
mov
mov
dec
xchg
cmpsb
mov
add
int3
jb
jecxz
rol
stos
js
sbb
inc
test
mov
data16
ljmp
adc
leave
mov
loopne
xchg
test
aas
leave
dec
jbe
inc
gs
rcrl
cld
or
mov
adc
cltd
imul
sarl
mov
popf
sbb
mov
loop
mov
cld
inc
xchg
jb
pop
mov
sub
pop
mov
adc
cmp
daa
int3
out
pminub
outsb
pop
cmp
add
sbb
sbb
loope
sbb
or
xchg
mov
xor
imul
loopne
or
pop
outsb
push
fxch
mov
adc
adc
mov
faddl
xor
popa
add
mov
mov
jo
mov
add
dec
inc
insl
js
jae
xor
loop
xchg
cltd
jne
loop
dec
loope
pop
and
es
inc
push
je
cmp
add
push
xlat
cmp
stc
adc
mov
pop
fucomip
call
movsb
xor
imul
jno
cmc
fisttpll
xor
sbb
mov
push
push
ja
mov
ljmp
xor
sti
mov
mov
xchg
jg
or
xchg
hlt
push
add
add
outsb
out
cmp
jle
into
add
icebp
daa
leave
mov
iret
arpl
jmp
mov
cmp
inc
mov
div
inc
or
addr16
add
inc
rorl
push
std
cmpsl
out
rcl
std
push
test
cmp
arpl
mov
dec
movl
inc
jb
inc
push
in
fwait
das
in
add
sarb
sbb
inc
sbb
leave
fidivl
jge
and
pop
inc
xchg
enter
fistps
mov
pop
lods
ja
jbe
roll
cli
rolb
ja
outsl
pop
lret
push
std
jmp
lods
fcoms
ret
scas
into
loopne
imul
or
movsl
mov
in
mov
add
mov
scas
pop
mov
mov
aam
add
jle
pop
push
and
aas
mov
xchg
push
and
cmp
loopne
push
and
jecxz
jg
jnp
pop
push
jp
scas
add
or
mov
pushl
xor
lcall
push
pop
add
outsb
dec
push
mov
sbb
xchg
cmp
pop
in
lahf
pop
mov
jp
and
sarl
mov
notb
in
push
stc
and
mov
pop
imul
pop
xchg
dec
xabort
fldlg2
fadds
mov
mov
add
mov
aas
les
jbe
test
pop
or
add
jb
and
das
xchg
insl
adc
out
fisttpl
or
add
mov
daa
shrl
cmp
shl
mov
mov
and
es
jb
mov
dec
popa
jle
jge
sbb
mov
sub
lea
push
jne
jb
add
inc
mov
rcrb
out
lods
in
pop
scas
sti
mov
imul
push
movsb
std
xor
xlat
mov
fwait
sahf
rolb
insb
xchg
dec
push
inc
icebp
xor
imul
lahf
and
bound
push
pop
dec
push
mov
jno
sbb
ret
mov
mov
jge
test
in
xchg
cmp
lret
mov
sahf
cmp
inc
inc
jb
jl
sarb
xor
mov
adc
cld
push
push
and
ss
sbb
es
sub
fucomp
mov
push
xor
insl
push
mov
insb
hlt
dec
push
lret
push
push
or
lret
fwait
push
ja
add
push
sbb
xor
or
stos
repnz
fcmovnb
movsb
add
cmp
jecxz
pop
js
call
or
pushf
pusha
pop
addr16
test
mov
push
xorl
out
hlt
jge
xlat
jnp
ja
mov
cmp
repnz
mov
or
inc
in
push
push
sbb
push
cmp
nop
outsb
push
loopne
data16
int
pop
jle
mov
cmp
jp
jnp
jecxz
mov
iret
imul
xchg
into
jecxz
mov
sbb
test
and
popf
fbstp
mov
xorb
cli
stos
inc
adc
xor
jp
idivl
in
lret
mov
fwait
jecxz
aas
sub
call
sarb
adc
cs
andb
mov
pop
gs
push
popa
icebp
sub
sub
dec
push
imul
in
xchg
outsb
or
mov
out
stos
outsl
cmovle
ror
push
icebp
push
mov
dec
mov
fcoms
adc
repz
outsb
jp
and
gs
pop
dec
call
xchg
xchg
dec
and
mov
jb
orb
jae
aaa
mov
sub
das
mov
sahf
cmp
lds
push
out
lock
icebp
pop
mov
scas
pop
push
movl
xor
mov
in
sahf
aad
push
lds
cmp
ja
xchg
popf
cmc
addl
cmc
enter
sub
repnz
add
popa
popf
or
mov
cmp
inc
call
pop
sbb
out
nop
aad
pop
lods
outsb
icebp
cmovs
pusha
push
xchg
jae
outsb
push
aas
test
xchg
bnd
nop
mov
jg
std
in
movsl
sbb
push
popf
pop
test
sbb
std
test
mov
push
mov
bound
dec
sub
dec
add
pop
addb
pop
jmp
ror
js
js
xor
fsubs
jbe
mov
sub
add
and
adc
mov
stc
fstpt
mov
loopne
rcrl
jo
fadds
jmp
dec
test
popf
ffreep
mov
push
aas
cmp
sbb
mov
sbb
pop
popf
xorl
mov
xorb
ds
rorb
cmc
cld
imul
cmp
jb
ret
ja
stos
mov
mov
dec
dec
sbb
fwait
decl
call
add
jecxz
mov
shrl
aam
inc
sbb
mov
sub
mov
mov
add
xor
and
mov
mov
sub
xchg
mov
imul
xchg
xchg
add
mov
rorb
or
cwtl
xchg
fadds
pop
in
insb
pop
pop
xor
jg
mov
push
fcoms
movsl
push
cs
pop
or
jge
adc
mov
aam
insl
ficoml
jmp
int3
sbb
fbld
sbb
arpl
aas
test
or
xchg
lret
loop
sub
lret
shrl
sub
lret
pop
cmp
lds
das
inc
mov
int
cmpsb
addl
movsl
lahf
dec
push
int3
rolb
xchg
test
or
test
jno
mov
fbld
mov
and
sub
aam
enter
pop
jecxz
dec
fisttpll
sti
popa
test
and
push
shrl
xor
push
add
dec
xor
inc
lret
cmc
mov
arpl
pop
jecxz
and
xor
pushf
fistpl
push
clc
imul
xchg
nop
mov
push
mov
out
or
jns
xchg
sbbb
pop
pop
adc
cmpsb
add
inc
mov
stc
xorl
ret
shrb
and
sarb
pop
xchg
aas
fisubl
xor
add
pop
fbld
out
lret
and
inc
dec
pusha
fldt
xchg
mov
icebp
cmp
and
adc
data16
out
xchg
lock
lock
in
testl
jno
sub
sbb
push
inc
and
decb
fists
jbe
pop
ret
rcrl
and
and
push
inc
std
pop
pop
fnstcw
add
mov
push
xor
lods
leave
or
inc
dec
shl
cmp
xchg
mov
lret
js
gs
divb
jge
and
in
lods
sub
push
in
cmp
stos
sbbl
adc
aad
dec
imul
or
sbb
std
pop
mov
jne
sub
xor
arpl
adc
jb
mov
jp
cmp
push
std
mov
loope
mov
pop
xor
aas
sarb
and
ret
pop
lcall
fiadds
scas
push
aad
jns
fadds
stos
insb
repnz
mov
pusha
lahf
mov
int
imul
jno,pt
xchg
shlb
ljmp
shl
inc
lea
fstp
jmp
pop
mov
test
nop
rorl
testb
ja
pop
mov
outsl
xchg
subl
cmp
gs
cmc
push
jl
mov
xchg
sub
sarl
faddl
ret
xor
aam
push
jg
in
fimull
jns
push
inc
add
out
lahf
test
inc
test
or
lock
jl
mov
test
shlb
outsb
jns
bound
ljmp
sub
js
and
or
dec
pop
mov
mov
mov
rorl
jge
sbb
xor
jo
aam
and
xchg
cltd
inc
adc
rclb
cwtl
push
xor
xlat
mov
xor
sbb
or
cmp
jns
les
and
xor
rclb
or
pop
mov
jle
adc
scas
mov
imul
sub
xor
mov
jno
mov
push
fs
nop
push
push
dec
sbb
pop
inc
shl
or
or
sub
and
stc
test
jge
mov
xchg
int3
mov
lock
dec
xchg
mov
sub
and
cmc
cli
cmp
push
add
movsl
jle
jne
inc
fisubl
fdivrs
push
out
mov
adc
inc
cmpsb
mov
and
or
cwtl
inc
js
sub
sub
jp
sahf
pushf
push
pop
shll
mov
push
jmp
sarl
xchg
movsl
ljmp
lea
mov
dec
xor
out
neg
sbb
imul
push
jge
ja
lret
scas
leave
fldt
repnz
lret
xor
lahf
movsl
inc
ficoms
jle
jp
inc
cmpb
xchg
jb
test
pop
fidivl
pop
and
add
popa
repz
mov
push
mov
cmp
cmpsl
xchg
stc
sbb
addr16
mov
sbb
enter
fcmovnbe
movb
psrlq
cmpsl
in
jns
lret
mov
or
pop
imul
enter
mov
and
cmp
xor
cld
or
sti
aas
or
jo
test
dec
pop
push
pop
xor
adc
popf
stos
pop
sbb
jmp
jo
add
add
mov
in
aas
push
ss
aad
xor
scas
js
mov
jp
jne
addr16
cmc
inc
enter
cmc
loop
and
xchg
scas
notl
mov
sub
orl
sbbl
mov
push
jl
xor
fdivs
dec
add
imul
cmp
jmp
std
cmpsl
cmp
gs
mov
test
mov
subb
or
push
ret
pushf
and
jbe
push
shld
xchg
fxch
mov
fcmovu
int
push
lds
xor
jo
cmp
stos
lcall
inc
sahf
push
jp
das
popf
add
pop
lret
push
mov
xchg
shlb
orb
add
xor
xchg
cmp
arpl
jne
mov
test
cmp
adc
jl
mov
mov
test
mov
sub
idivb
dec
inc
mov
pop
in
mov
cmp
cli
ss
push
scas
inc
outsb
or
xchg
inc
sub
xchg
xor
int
mov
sbb
and
add
stos
pop
mov
xchg
sub
fcmovnbe
sbb
decl
mov
dec
and
popl
out
fs
lret
mov
adc
xchg
mov
adc
lret
jge
ja
mov
ss
xchg
sbb
fsubrl
inc
int3
ss
xchg
faddp
xchg
data16
int3
sub
dec
sub
cmp
cmp
mov
fists
mov
loope
scas
sub
pushf
addl
repz
sub
stc
inc
aam
cli
lea
xor
dec
mov
pushl
incl
ja
test
dec
aam
es
ficompl
pop
lahf
inc
mov
sub
or
mov
into
add
pop
push
shrl
mov
xorl
ja
mov
or
data16
xor
lods
mov
popl
cmpsl
sbb
rcl
mov
cmp
pop
mov
pop
nop
xor
fcmovnb
mov
xor
adc
add
clc
cmp
push
jge
dec
add
out
addr16
xor
mov
add
pushf
cli
sbb
shrb
jge
mov
ss
repz
sub
sahf
shr
aas
repz
mov
fsubr
test
and
je
sbb
push
mov
mov
aad
mov
or
stos
popf
mov
imul
xchg
xchg
shlb
and
add
sub
outsl
jo
inc
outsb
add
jmp
ret
dec
jg
gs
push
pop
cmpsl
faddl
out
pop
addb
loope
adc
cmp
inc
mov
idiv
mov
push
jmp
xchg
repnz
or
pop
into
mov
filds
xchg
fadds
sub
mov
jl
inc
loop
and
popf
and
rcll
addb
xor
mov
sbb
lods
pop
adc
cmp
cmp
dec
and
loopne
mov
and
xchg
push
sbb
jp
and
or
gs
fmull
stc
out
je
push
push
out
rcr
dec
jnp
addr16
pop
sbb
xchg
sub
mov
jmp
xchg
cmpl
fsubr
addb
js
out
or
das
ja
out
popa
insl
mov
gs
pushf
mov
lock
hlt
imul
pop
push
adc
inc
mov
outsb
push
rolb
inc
aaa
dec
inc
fs
es
inc
ds
mov
pop
int3
and
xor
mov
repz
add
jnp
inc
rolb
adc
add
pop
or
cmp
mov
pop
and
adc
add
hlt
fiadds
inc
ja
hlt
scas
rclb
insb
jmp
lcall
xchg
nop
in
pop
inc
stc
mov
or
sbb
fbstp
leave
and
fidivrs
sbb
out
orb
pop
les
ds
push
pop
dec
inc
arpl
pop
arpl
sub
decb
icebp
pusha
add
jno
adc
xchg
mov
cmp
pop
repz
adc
fnstenv
jl
pop
ja
mov
int
sub
stc
jb
or
adc
mov
jne
push
repnz
and
rolb
imul
adc
or
push
leave
loopne
xchg
xor
and
xchg
sub
shll
cmp
insl
push
mov
mov
lock
cmpsb
scas
aas
sub
stos
xchg
pop
xchg
xorb
out
mov
insb
inc
insb
add
stc
movsb
xor
cmp
jge
inc
scas
cli
push
or
jb
and
push
ds
inc
inc
mov
insl
xchg
call
mov
mov
jmp
sbb
sbb
dec
lock
xor
jle
cmp
jg
call
ds
daa
hlt
mov
scas
mov
stos
rcrl
mov
mov
rol
mov
push
aam
push
sbb
and
pop
adc
jno
adc
dec
out
shrb
mov
jae
cs
cmc
popa
ficomps
cmpsb
aas
inc
out
mul
addr16
sub
mov
jns
lds
int
das
jg
scas
rorl
imul
outsl
push
push
mov
inc
imul
jl
popa
dec
pop
pop
push
jmp
rcll
inc
xchg
scas
jge
imul
push
imul
mov
dec
adc
push
or
dec
lret
stos
mov
sbb
sbb
cmpsb
or
inc
jbe
addb
cmp
jecxz
inc
pushf
mov
mov
lcall
push
pop
ja
cltd
imul
int3
iret
rcll
jg
xor
mov
pop
int
pop
xor
or
pop
stos
fdivrl
ljmp
cmp
cmc
int3
popa
fwait
xor
push
push
mov
sbb
or
xor
aaa
mov
pop
xor
cmp
lods
pusha
cli
cmp
jbe
and
test
ljmp
mov
push
int
xchg
jge
mov
jl
push
jmp
test
sbb
lret
mov
rcrl
decb
sub
icebp
cmpsb
popf
mov
loopne
pop
or
lock
sahf
mov
orb
dec
je
in
mov
into
push
fdivl
dec
insl
cld
mov
jmp
xchg
cmpsl
shlb
sub
adc
cmc
adc
sbbl
pop
shl
fiadds
pop
cmp
jbe
sbb
neg
in
addr16
ret
arpl
or
cli
jne
jle
pushf
push
xlat
mov
and
lret
sbbl
add
push
sti
xor
mov
mov
adc
rorb
out
daa
and
add
dec
out
aaa
jp
aam
push
ret
iret
xor
mov
fstl
gs
sahf
divl
filds
mov
test
lock
and
sbbl
shlb
mov
cmp
jno
cltd
insb
or
dec
jecxz
insb
fucomi
cmp
xor
jb
addr16
test
xchg
dec
jo
dec
outsb
cld
sahf
into
xlat
push
pusha
call
ljmp
cmp
fistl
iret
mov
xchg
and
adc
xor
ljmp
adc
sbbl
mov
mov
in
push
push
dec
lret
fwait
outsb
imul
loop
jo
cld
in
pop
mov
ds
loop
aaa
xor
enter
lret
sbb
pop
lds
sub
sub
rcrl
fidivrl
sbbl
loopne
stos
cmp
dec
mov
call
popf
sti
xlat
clc
cmpsb
cmp
xor
es
mov
mov
daa
cli
sbb
pop
or
mov
cli
mov
scas
push
cmp
dec
lahf
mov
sahf
add
call
xorl
xor
push
mov
and
mov
mov
jne
repnz
dec
test
xor
das
lds
fcomps
ret
fnstcw
flds
xor
mov
jne
cltd
mov
xchg
add
addr16
repnz
jae
rorl
lcall
push
stos
decb
ljmp
mov
stc
ret
push
cltd
imul
cld
js
testl
xor
xor
cs
mov
imul
xlat
mov
pop
inc
cmpsl
mov
dec
jl
push
add
sbb
in
aam
or
push
inc
popf
imul
enter
add
adc
js
mov
out
mov
fdivs
test
mov
adc
pop
xor
or
pusha
imul
push
repz
push
push
jb
pop
lea
xor
scas
cltd
out
pop
aam
jecxz
push
pushf
sbb
pop
pop
fcoms
ljmp
idiv
jp
jo
xor
inc
arpl
xor
mov
inc
pop
dec
adc
sbb
inc
inc
jle
dec
lods
mov
sar
jo
popf
gs
mov
or
add
or
mov
std
pop
pop
inc
jge
sub
or
inc
andb
inc
arpl
xor
jns
or
cmp
add
mov
retw
data16
bound
mov
sub
fdivrs
ret
ret
aas
xchg
daa
cwtl
add
dec
insb
add
sahf
inc
iret
add
jl
mov
out
sbb
push
xor
int
cmp
test
loope
cmpsl
es
jo
cmpsl
mov
pop
addr16
jae
idiv
mov
gs
mov
adcb
pop
push
pop
les
xor
jge
test
outsb
ds
and
lahf
add
cmpsl
stc
xchg
xorl
in
in
xchg
or
or
cmp
arpl
mov
aam
mov
rorl
mov
pop
mov
xlat
movsb
dec
add
adc
lock
pushf
xlat
add
jb
shr
cwtl
push
cwtl
pop
mov
push
hlt
notl
and
sub
fisubrl
das
pop
sbb
xchg
push
mov
pusha
inc
adcb
cmp
xchg
scas
sbb
fs
mov
daa
aad
movsb
jb
inc
lret
push
leave
call
out
xor
add
xor
push
dec
push
mov
sub
jmp
stos
jp
dec
add
sbb
mov
sub
jmp
cs
stc
xchg
iret
adc
xchg
jbe
fsubs
add
lcall
inc
cwtl
cld
jns
dec
pop
lock
add
ret
and
and
xor
xorb
arpl
inc
stc
lcall
in
adcb
mov
out
sahf
xchg
lcall
int
pop
aam
leave
and
mov
enter
sbb
cwtl
and
adc
sbbl
xchg
or
lret
int
call
cmp
popf
pop
popa
jmp
inc
adc
adc
sbb
stos
cmpsb
bound
flds
dec
jle
mov
pop
jmp
stc
jb
lods
dec
sbb
daa
push
iret
nop
inc
and
mov
stos
ljmp
cmpsb
addl
test
insl
sti
sbb
daa
mov
ret
sti
movl
inc
dec
insl
aaa
jmp
push
mov
xor
sbb
fprem1
push
stos
mov
jno
dec
std
sarl
add
outsl
pop
imul
rolb
mov
adc
push
jno
inc
test
es
pop
addr16
jne
jl
pop
mov
jnp
xchg
hlt
sbb
movsb
sub
aas
cmp
ret
cmc
bound
adc
outsl
std
jmp
jge
roll
std
call
sahf
pop
in
jmp
aas
data16
xchg
or
xchg
sub
or
stos
sbb
and
sub
fidivrs
xor
or
popa
addr16
mov
xchg
sbb
and
dec
mov
xchg
or
xchg
call
rolb
cmp
leave
lret
stos
lock
lods
das
jle
or
imul
scas
insl
push
mov
inc
jb
insb
adc
push
sbb
les
dec
jae
in
cmpsb
add
ds
fsubrs
insb
in
cmpsb
std
push
and
xlat
das
andb
lcall
xor
mov
in
popa
mov
mov
rorl
add
cwtl
lock
jecxz
mov
loope
sbb
mov
push
xchg
cld
cld
adc
xchg
push
push
fimuls
cmp
pop
cmc
or
mov
outsl
lea
xor
outsb
sub
dec
divb
mov
je
xchg
mov
pop
jmp
dec
fwait
aas
fs
sub
test
mov
lahf
adc
pop
sub
cmp
stos
gs
dec
lods
mov
lds
addr16
pop
sbb
xor
sbb
mov
cmp
push
sub
out
es
mov
lods
xchg
adc
pop
lret
or
add
out
mov
out
xor
xor
inc
mov
jb
push
int
gs
cmc
push
mov
and
ror
fnstsw
or
cwtl
mov
pop
and
shll
repnz
mov
lret
xor
negl
vpsllq
mov
and
jecxz
lahf
cmpsl
pop
dec
fbstp
lahf
rcrb
inc
adc
xchg
mov
rcrl
push
outsl
shlb
in
adc
adc
or
imul
mov
jnp
sbb
insl
dec
sub
jnp
outsl
inc
add
js
adc
lock
out
dec
js
mov
fcoms
jecxz
and
faddl
jo
sbb
pusha
xorb
pop
pusha
mov
push
mov
mov
or
jge
fldenv
xor
sahf
add
mov
shll
cmp
add
fnstcw
sub
mov
inc
push
sub
movsl
rcll
add
push
ret
in
jb
enter
mov
inc
iret
shl
push
je
pop
scas
icebp
xorb
fmuls
adc
push
adc
jle
mov
pop
push
jmp
cmc
faddl
xchg
aad
mov
jnp
jmp
loope
nop
dec
xchg
data16
hlt
mov
sbb
sbb
movsl
outsl
pop
jle
repnz
cwtl
xchg
out
jecxz
push
cld
cmpsl
inc
lret
pop
cwtl
int
jecxz
xchg
pushf
loopne
ret
out
lcall
outsb
sbb
sarl
mov
and
js
les
jecxz
add
xchg
xor
xchg
adc
rolb
int
mov
jne
in
or
dec
rolb
ret
cmp
dec
mov
ret
icebp
inc
pop
and
inc
dec
stos
mov
ljmp
sbb
jl
inc
pop
push
inc
in
lret
push
xchg
mov
pop
test
sahf
insb
fmuls
add
cmp
dec
fmull
mov
jge
push
xchg
inc
ljmp
movups
push
lret
dec
mov
or
stos
add
xchg
enter
icebp
aaa
mov
scas
cmp
or
jno
ljmp
aad
push
hlt
ret
outsl
movl
xor
movb
inc
test
addr16
test
cltd
xchg
and
inc
cmpl
jb
sbb
lock
adc
lds
sub
aas
adc
into
lahf
and
xlat
roll
sbb
fwait
push
mov
push
or
test
imul
fs
push
jnp
xchg
xchg
pop
sbb
rcrl
push
insl
mov
lret
ret
xchg
out
jmp
sub
xor
cld
jmp
idivb
mov
movsl
scas
test
sbb
in
xchg
cmp
sti
add
in
movsb
inc
mov
mov
jo
out
cwtl
das
fistpll
lea
pop
inc
jne
orl
jae
jmp
cmp
loope
or
pop
notb
call
fwait
xor
mov
add
mov
adc
daa
dec
sub
out
xchg
movsb
push
aaa
inc
push
cli
mov
xor
cmp
sub
sub
imul
mov
daa
mov
gs
push
mov
mov
fucomi
movsb
rcrb
mov
mov
out
decl
and
stos
stos
mov
mov
sub
pop
aam
xor
push
pop
inc
xchg
or
outsb
mov
jns
push
stc
in
aam
push
rorl
and
push
and
push
movsb
popf
push
xchg
ljmp
cs
sub
mov
and
and
in
pop
sbbl
shll
rcl
mov
clc
jno
int
mov
outsl
mov
cmp
mov
mov
insl
push
fdiv
clc
out
test
and
xchg
adc
sti
in
cli
or
gs
pop
mov
xor
repnz
out
cmpsl
xchg
xchg
dec
mov
and
push
and
icebp
nop
push
mov
xchg
xor
loopne
fdivrl
pop
sbb
test
pop
push
imul
shlb
loope
dec
xchg
cmc
dec
jecxz
push
xor
pusha
icebp
enter
outsl
push
lods
pusha
cltd
xchg
int3
mov
cmpsb
push
int3
in
xor
push
mov
movsb
stos
or
repnz
dec
lods
ljmp
outsb
add
repz
or
addr16
push
push
out
test
xchg
cmp
scas
orl
les
push
push
fisubl
or
rcll
not
shrl
dec
jb
mov
fcmovnbe
mov
xchg
jns
mov
popf
xor
jp
pusha
stos
xchg
mov
sub
fldenv
pusha
mov
sub
add
or
test
jns
lds
inc
not
frstor
mov
inc
mov
lea
stos
cld
pop
inc
inc
xor
xchg
mov
cwtl
shlb
or
add
mov
loop
inc
icebp
bound
pop
jp
fwait
adcb
gs
data16
dec
push
push
jae
push
jne
js
mov
sub
push
stos
mov
mov
xor
and
call
add
test
lds
xor
dec
pop
jmp
or
mov
add
in
fwait
clc
add
add
test
mov
test
gs
decb
pop
cvtps2pi
sbb
dec
in
adc
clc
push
push
lock
add
rcll
cmp
pop
add
xor
shll
int
sbb
adc
fsubr
and
shlb
ret
cmp
je
pushf
jne
scas
xor
sub
mov
int
test
popf
lret
or
cld
ret
nop
sbb
icebp
jo
sub
xchg
add
push
lods
rcrb
ret
clc
out
dec
pop
and
repz
jbe
xchg
and
xor
nop
xchg
pop
sbb
cltd
add
lds
push
rcr
sbb
cwtl
mov
movsl
inc
das
xchg
push
imul
xchg
jmp
cmpsb
dec
pop
fcmovnb
jb
cmpl
in
in
pop
dec
cmc
xchg
xor
sub
sahf
fs
cli
test
decl
mov
inc
or
jbe
push
or
jb
and
sub
adc
shlb
push
es
push
pop
rcl
ret
stos
jecxz
jg
mov
dec
fimull
push
mov
int3
pop
jg
cmp
loopne
aam
push
add
dec
cltd
jg
mov
push
imul
mov
mov
ja
or
jp
mov
inc
sub
loopne
xor
dec
or
push
sub
sub
xor
jg
roll
mov
dec
and
mov
daa
add
icebp
jmp
in
dec
xor
scas
pop
jp
mov
pop
xchg
hlt
pop
jne
rorb
xor
dec
mov
in
pop
xchg
xchg
push
clc
xor
in
dec
lods
push
push
xchg
insl
push
dec
shr
sub
mov
mov
in
pushl
mov
enter
mov
lock
lds
pop
inc
mov
dec
dec
out
scas
pop
cmp
cmp
daa
add
test
sub
pop
xchg
scas
pop
push
sarb
lcall
insb
cmp
shll
inc
xchg
pop
lds
insl
or
push
test
and
popf
pop
mov
inc
add
or
mov
mov
in
fstpt
push
lds
imul
mov
add
lods
aam
cltd
or
cmpl
sub
mov
jg
dec
and
popa
sbb
mov
outsb
addb
lea
pop
cmp
xor
jmp
fistps
adc
xchg
cmp
addr16
out
fwait
and
lret
jns
inc
xor
das
test
inc
addr16
cmp
or
test
jns
lds
mov
repnz
push
lret
test
and
bswap
or
sub
sbb
mov
sbb
nop
lcall
jbe
mov
dec
repz
scas
lcall
out
popa
mov
jae
add
mov
cmp
or
mov
dec
movsl
sbbl
adc
inc
xor
sub
jmp
and
or
setbe
push
adc
rcl
scas
push
jb
mov
jle
pop
cmp
ljmp
mov
cmp
jb
sbb
imul
lret
aad
mov
sahf
sub
ss
dec
in
sahf
lret
add
cli
cmp
adc
xchg
add
push
scas
aas
mov
and
icebp
inc
test
mov
xchg
rclb
shl
sub
mov
and
call
lcall
pop
orb
mov
ror
arpl
dec
sub
mov
lods
pop
cmp
or
cli
push
shll
test
call
cmpsl
jbe
mov
mov
outsb
inc
or
dec
adc
test
pushf
ret
adc
dec
cwtl
cmpsl
mov
rolb
xchg
insl
xor
scas
adc
cmp
stos
lahf
pop
sub
fwait
inc
ret
addr16
push
pop
sub
jbe
sub
jo
jg
cs
sub
rolb
frstor
in
aas
xor
fldl
mov
imul
icebp
mov
mov
jmp
in
cmp
xor
rorl
das
inc
pushf
xor
clc
enter
mov
or
shl
sbb
dec
add
xchg
outsb
xor
fmul
iret
xchg
gs
or
push
mov
fsubrl
insb
mov
and
jp
imul
mov
inc
and
push
js
adc
push
xchg
ficoml
loopne
icebp
add
mov
push
jmp
movsb
popa
loop
in
sub
jmp
or
jg
clc
mov
fcoml
mov
jae
jg
inc
jo
mov
cs
fcoml
dec
xchg
mov
adc
push
sub
sub
adc
test
add
lock
mov
stos
dec
push
mov
ds
ds
xor
inc
adc
mov
test
dec
lret
or
dec
adc
xchg
inc
pop
xchg
mov
out
stc
dec
js
add
push
inc
inc
jnp
jns
push
movsl
jae
sub
jecxz
or
cmc
mov
icebp
add
repz
mov
dec
in
dec
inc
leave
xlat
jb
mov
iret
dec
icebp
pop
fstpt
out
and
ljmp
loope
pop
sar
lret
mov
xor
aam
daa
xlat
jmp
inc
inc
dec
push
mov
lcall
xchg
cmp
cmp
or
push
ds
pop
sub
in
repz
out
insb
xor
icebp
mov
push
outsl
ja
iret
outsl
sub
push
and
and
push
jne
fstpl
ud0
or
xchg
inc
div
dec
adc
lods
leave
lret
fists
xor
push
pop
loope
inc
shl
sub
mov
push
mov
std
aaa
int
fnstenv
sub
inc
mov
push
jmp
sub
inc
inc
mov
mov
cltd
pop
mov
dec
push
stos
pushf
mov
xchg
sbb
cmp
add
push
lods
scas
loop
retw
pop
ss
mov
sub
xchg
cmp
jp
mov
mov
das
cmc
mov
ret
cmpsb
les
mov
dec
sbb
jnp
shld
int
gs
or
inc
repz
out
xchg
ja
ljmp
mov
inc
add
sbb
sub
out
dec
clc
mov
xchg
push
stc
aam
fidivrl
adc
scas
fsts
push
xchg
icebp
sub
mov
rolb
pop
repnz
ljmp
cvtps2pd
scas
fistpll
fstp
jg
push
cmp
out
xchg
pop
xchg
insl
mov
push
pop
xchg
or
insl
xlat
jg
dec
adc
mov
clc
add
test
fstpt
scas
ret
jbe
dec
push
mov
subb
faddl
out
xadd
pop
xor
mov
lods
pop
mov
push
dec
std
mov
push
mov
xchg
xor
xchg
or
push
movsl
sahf
push
add
test
mov
push
dec
sub
iret
imul
es
cli
cli
lock
stc
mov
dec
cmp
gs
outsl
xor
in
mov
pop
jnp
push
fildll
xchg
mov
cmp
sub
mov
push
add
aas
push
stos
ret
andb
jne
push
pop
enter
sub
and
aas
pop
xchg
sub
push
dec
hlt
jae
push
fstps
imul
inc
fsts
sub
jge
pop
mov
add
mov
fwait
inc
loopne
add
cwtl
test
pop
xchg
sbb
pop
or
popf
insl
dec
mov
adc
shlb
adc
fstpl
in
add
ficoml
cmpsl
leave
pop
pop
mov
addr16
lcall
clc
push
pushf
inc
sahf
xlat
jae,pt
pop
test
and
jl
daa
cmp
push
mov
jno
jns
ficoml
sub
cmp
pop
sbb
or
lret
fistpl
mov
pop
jmp
fnsave
jb
push
ret
and
inc
pop
mov
adc
scas
shll
mov
fwait
into
cltd
popa
dec
iret
inc
cmp
loope
mov
dec
push
or
jg
in
dec
sub
mov
adc
out
arpl
sbb
popa
or
sub
sbb
ret
pop
andb
aad
lock
mov
ret
mov
adc
mov
jle
cmpsl
mov
les
ret
popa
js
jl
sti
sbb
cli
jns
or
mov
sub
enter
repz
dec
pop
insb
jge
or
test
mov
outsl
inc
and
adc
jno
je
jecxz
bound
mov
ss
aas
sub
mov
stos
push
add
sub
lods
jle
mov
stos
fs
flds
aad
push
jo
xchg
mov
sub
outsl
cmc
jo
sub
mov
sub
lret
bound
xor
add
testl
xchg
xchg
inc
test
lock
in
jo
movsl
xchg
mov
xor
in
out
ds
movl
pop
mov
dec
mov
mov
cmc
lds
cmp
xchg
push
mov
sbb
mov
fimull
pop
hlt
daa
mov
dec
xchg
or
out
lock
adcl
hlt
xchg
loopne
or
sbb
add
xchg
jmp
mov
idiv
outsb
lds
inc
or
and
add
cwtl
insb
mov
jae
lea
aam
inc
sub
cli
outsb
out
or
mov
and
inc
mov
adc
aam
lret
dec
stc
gs
movsb
aaa
dec
push
das
pop
stc
xchg
imul
aas
lahf
or
push
add
pop
push
xchg
pushf
or
mov
lea
mov
sti
mov
mov
call
or
push
mov
pop
mov
inc
lea
mov
cmp
mov
cmc
cmp
lret
xchg
test
push
pop
int3
cwtl
movsl
xchg
int3
xchg
mov
popf
fwait
sub
decl
aaa
test
arpl
xchg
sub
adc
test
in
lret
push
inc
inc
push
cltd
add
pop
xchg
sub
add
fidivs
push
cmp
int
sub
repz
insb
inc
inc
repnz
sbb
add
add
cwtl
icebp
fwait
aad
dec
orb
outsl
notl
mov
sbb
dec
and
aas
cli
push
outsl
mov
push
imul
xchg
mov
rclb
arpl
add
mov
cmpl
lods
aaa
add
bound
pop
test
nop
lcall
sarb
cmpsb
pop
sbb
lds
xor
psubusw
adc
popa
xchg
sbb
fstpl
movsb
mov
push
inc
das
jl
pop
pop
mov
adc
movsl
inc
scas
push
cmpsb
jmp
pop
test
notl
adcl
mov
hlt
les
mov
dec
and
inc
cmp
clc
jns
aam
repz
push
and
mov
xor
mov
jp
js
push
and
lret
scas
xchg
das
cmp
ret
lea
lahf
dec
adc
cmpl
or
lea
ret
sub
xor
lock
clc
xchg
idivw
or
add
cmp
sbb
out
test
cmc
cmpsb
mov
mov
sbb
and
mov
mov
pop
pushf
push
int3
dec
loopne
or
sub
sbb
iret
ret
or
adc
sub
pop
pop
ret
fsubrl
or
xchg
push
pop
pushfw
divl
jecxz
mov
pop
jo
cmp
inc
jmp
test
mov
out
imul
pop
cmp
lret
xor
sbb
adc
repz
sbb
push
enter
or
mov
sbb
repz
and
sub
jmp
jne
cmp
pop
in
mov
mov
push
clc
push
mov
push
jbe
pop
ds
dec
fsubl
dec
push
pop
test
leave
aad
xor
movsb
loopne
push
lods
jae
ss
cs
add
fdivr
imul
push
xchg
jmp
test
add
push
pop
sub
bound
sub
shll
jmp
rorl
push
inc
jle
out
sbb
lcall
add
out
mov
shlb
test
sub
add
decb
sbb
dec
add
push
push
cltd
out
xlat
sbb
mov
inc
xor
jmp
lcall
pop
enter
mov
loopne
jae
cwtl
xor
jb
pop
repnz
mov
sbb
add
ds
jnp
call
into
shll
pop
imul
daa
inc
and
jno
or
push
out
push
test
popf
ret
inc
xorb
or
and
xchg
popa
out
pusha
sub
popa
out
pop
sub
subb
cs
shll
lods
pusha
out
ljmp
ret
mov
adc
out
test
mov
push
jno
adc
xor
stc
pop
cvtps2pd
pusha
pop
outsl
mov
or
sbb
sub
call
jns
cltd
and
inc
add
repz
insb
outsl
leave
xchg
fisubl
std
fwait
out
mov
cmc
popf
orl
dec
iret
iret
jns
mov
loope
and
outsb
jae
cld
inc
psraw
test
aad
cmp
add
dec
or
test
andl
cmp
xchg
cmp
jge
dec
push
shl
add
jle
inc
mov
add
insl
mov
mov
mov
jns
dec
fstpt
inc
call
jae
addr16
xor
sti
hlt
xchg
aas
cmp
sub
push
test
push
pop
cmp
shrl
push
ret
imul
xchg
movsl
xchg
sbb
jo
ljmp
cld
add
mov
xchg
mov
push
insb
dec
inc
dec
push
push
mov
mov
jge
lahf
mov
sti
inc
es
sub
or
inc
mov
cmp
incl
or
push
andb
jae
mov
pop
mov
scas
sarb
loope
dec
pop
inc
out
loopne
mov
movsb
xor
fs
push
fdivs
sbb
pop
sahf
pop
mov
mov
popf
fimuls
insb
lret
jns
push
inc
in
roll
push
cltd
add
lahf
sub
jle
in
incb
loop
mov
or
xlat
sub
and
lret
jg
fcompl
add
cmc
imul
mov
das
and
mov
xor
rcl
int3
popf
pushf
dec
or
icebp
fistl
inc
inc
sbb
fld
sub
insl
outsb
int
lret
pusha
xchg
dec
imul
fimull
push
mov
add
xchg
out
nop
repz
je
push
enter
inc
sbb
xor
sub
fs
or
inc
test
pop
js
adc
add
insl
cmp
dec
inc
sub
pop
je
and
dec
sub
addb
iret
mov
add
into
ret
arpl
and
jecxz
sub
icebp
jecxz
inc
sahf
jae
push
jae
and
enter
out
inc
xchg
test
shlb
out
stos
jns
pop
mov
aam
icebp
add
cmp
js
in
push
ss
lock
jmp
xchg
jl
aas
and
push
xchg
mov
fstpt
jbe
and
jae
pop
iret
fldl
imul
mov
jmp
mov
sti
mov
cmp
push
pop
cmc
fwait
outsl
jle
out
mov
out
xor
dec
scas
adc
mov
shrb
push
mov
sub
cli
test
pop
jae
jg
xchg
fbstp
mov
adc
mov
fidivs
hlt
outsl
xchg
jp
mov
into
inc
insb
dec
cmp
mov
jg
add
xor
in
mov
and
xor
sti
inc
pop
std
inc
add
cmp
mov
lcall
inc
loop
arpl
adc
mov
fdivs
mov
dec
or
push
pop
out
jae
push
dec
mov
jg
hlt
xorb
dec
stos
jp
inc
cmpb
aad
add
dec
or
mov
inc
add
adc
mov
fs
aas
in
jns
mov
jmp
hlt
pop
shrb
aaa
mov
jle
fcmovnb
xchg
subl
jno
pop
or
xchg
fucomp
inc
xchg
outsb
sub
inc
mov
lea
pop
dec
js
lea
xchg
lret
push
mov
ret
fmuls
jl
stc
arpl
adc
in
pop
data16
xchg
xchg
xor
dec
nop
orb
gs
inc
frstor
dec
jmp
sub
aam
stos
push
outsl
mov
adc
ljmp
sar
movsl
cmpsl
jo
pop
dec
pop
jmp
movsl
cmp
stos
push
mov
sbb
jnp
push
xor
in
faddl
adc
mov
push
jmp
movsl
xchg
mov
outsb
jno
sti
xlat
sahf
call
pop
mov
or
leave
cmp
cmpsb
mov
inc
push
xor
xchg
pop
out
mov
lds
mov
cmpsl
repz
cmp
movsl
movsl
mov
adc
test
andb
cmc
or
call
imul
mov
dec
inc
lret
jne
ret
popa
sbb
add
out
shl
add
subl
bound
cmc
idivl
lret
sbb
cmpsl
inc
push
mov
cmp
bnd
dec
test
jecxz
out
sbb
push
scas
push
movsb
movsl
xor
lods
xor
sahf
nop
scas
mov
mov
shlb
shll
dec
sbb
dec
xor
or
pop
ror
inc
jo
jmp
or
lods
xor
lea
push
out
add
in
fs
bound
mov
imul
cmp
mov
xchg
pop
dec
fcompl
push
test
lcall
pop
insl
daa
mov
jp
out
xchg
mov
mov
rorl
mov
sti
sbb
mov
and
or
push
or
mov
loop
aad
lret
jp
aad
test
and
push
cs
lock
cld
cmpsl
cmp
shlb
jns
lcall
jnp
out
dec
sar
add
mov
pop
xchg
jg
cli
scas
adc
mov
rcll
inc
ret
rorb
sbb
enter
out
fs
out
enter
cmpsb
fildll
mov
lahf
mov
sub
fbstp
lods
cmpsb
mov
mov
add
jo
rcrl
movsl
pop
subl
sub
jle
es
jl
mov
icebp
outsl
jg
out
sub
cmpsl
ffreep
test
adc
adc
aam
fwait
daa
aaa
ret
inc
pop
mov
lds
add
mov
add
push
nop
xor
xchg
test
fwait
cmpsb
add
mov
adcl
push
out
or
pop
xchg
pop
sahf
lcall
and
out
scas
mov
inc
stos
add
cmpsb
icebp
cltd
insl
pop
std
inc
outsb
cmp
mov
mov
mov
notb
xchg
pop
dec
and
push
ret
lret
push
add
fadds
inc
adc
ljmp
mov
xchg
data16
add
cmp
pop
ja
dec
xor
imul
and
xchg
pop
js
cmp
rol
es
scas
test
and
push
or
out
mov
mov
jnp
jmp
scas
jb
xor
aad
pusha
iret
test
mov
xor
pop
mov
mov
pop
inc
in
pushf
test
xchg
and
cmp
ss
push
xchg
or
stc
push
dec
ja
add
cmp
fidivs
add
cli
cmp
je,pn
push
ficoml
ret
aaa
or
packuswb
dec
add
mov
mov
ret
xchg
arpl
jmp
jg
lods
add
push
xchg
lcall
lret
jo
daa
xchg
sahf
xor
arpl
pop
loopne
sarl
push
lods
jb,pt
or
mov
cs
sbb
lret
scas
in
popa
mov
shrb
daa
data16
xorl
adc
repz
mov
mov
shlb
lods
stos
insl
and
aaa
xor
mov
dec
aad
repz
adc
pop
push
xlat
jle
lds
dec
push
mov
add
push
pusha
lock
leave
mov
jo
or
loope
out
or
jle
add
insl
in
mov
icebp
sbb
add
adc
inc
inc
add
pop
movsl
lcall
mov
dec
mov
cli
cmp
inc
nop
fldenv
mov
mov
cltd
sti
outsb
imull
repz
ret
lock
mov
xor
or
aaa
enter
mov
rolb
test
test
jge
test
rclb
das
xchg
dec
sbb
pop
pop
sti
out
shr
loopne
push
js
or
andl
inc
xchg
ret
ud0
scas
dec
fdivrs
xchg
ljmp
push
or
or
test
fildll
adc
push
fbld
mov
fsubrs
insl
dec
inc
jns
imul
pop
aaa
nop
cmp
std
in
dec
hlt
dec
mov
xchg
cmp
inc
add
sbb
pop
aaa
and
shll
pop
xchg
pop
aaa
shrl
jecxz
pop
int3
pushf
lret
add
add
ljmp
xor
daa
xchg
std
push
shlb
mov
or
jne
rcl
fsubs
hlt
xor
data16
arpl
mov
aas
sbb
sbb
cmp
jnp
orl
cld
push
shl
adc
or
cmp
dec
jo
aas
jnp
out
in
cmpsl
push
adc
or
sub
les
jmp
pop
and
cmpsb
out
sbb
cmpsl
call
adc
mov
push
inc
mov
lods
xor
ja
in
rcll
pop
fcoms
xchg
pop
push
cmp
sub
stos
pop
cli
xchg
push
xlat
dec
dec
filds
cli
pop
test
mov
lret
adc
shrb
sbb
andb
repnz
daa
mov
pinsrw
jne
and
je
fdivrl
jno
inc
dec
aam
aad
psllw
mov
mov
jnp
adc
movsl
out
jg
mov
add
ret
cld
or
or
pusha
outsb
pop
inc
jecxz
mov
insl
das
daa
arpl
pop
xchg
in
pcmpeqb
cmp
or
add
lret
jg
cwtl
popf
movsl
xor
arpl
loope
mov
bound
mov
loopne
mov
inc
xorb
inc
mov
push
dec
add
pop
call
xchg
sub
data16
movsl
loope
and
pop
or
icebp
repz
mov
stc
xchg
test
out
inc
add
mov
add
xchg
test
adc
rorb
jle
lcall
lock
inc
mull
outsb
subb
inc
jp
fdivl
cs
sub
lea
adc
pop
pop
call
insb
out
pop
sti
sbb
sbb
dec
in
mov
stos
xor
jg
dec
std
xchg
inc
jne,pn
negb
in
xor
lcall
pushf
fimuls
push
outsb
pop
dec
adc
add
or
xlat
adc
test
mov
imul
or
ja
cmp
jns
adc
cmp
or
pop
pop
repnz
add
and
pop
push
sti
xchg
js
lret
leave
testl
addr16
jne
mov
leave
loope
pop
stos
dec
into
insl
push
pop
cwtl
add
inc
jmp
movsb
pop
pop
sbb
jl
movsl
fcmovnbe
int3
sub
sarl
testb
insl
xor
inc
movsb
clc
add
inc
popa
outsb
sub
das
pop
sub
loope
in
popf
out
mov
push
xchg
adc
cld
mov
test
lock
popa
sahf
inc
pop
xchg
add
sub
les
adc
adc
or
adc
sub
repnz
cmp
dec
or
xchg
aam
jg
or
popa
ret
xchg
sub
push
jg
loopne
mov
sub
cli
push
test
jmp
les
mov
aad
xchg
pushf
and
cmp
call
add
and
mov
cmp
push
rcrb
test
jno
or
mov
and
sub
add
and
in
xor
push
mov
divb
sbb
add
pusha
adc
cmp
popa
inc
xchg
in
adc
mov
xor
cmpsb
jp
add
mov
dec
loopne
pop
jns
pop
and
gs
mov
cmp
leave
cmp
add
mov
jmp
push
jbe
movsb
mov
mov
mov
sbb
and
pop
jae
mov
dec
std
das
xchg
dec
jp
or
jl
lret
xor
and
les
and
push
imul
xor
xchg
nop
scas
aam
fmuls
repz
scas
rorl
mov
rcll
and
cmp
xchg
inc
fnsave
push
push
test
ss
lods
lret
or
jns
stc
loopne
pop
push
stos
jns
insl
push
pop
and
icebp
daa
aam
ret
sbb
jmp
int
xor
cmc
bndldx
popf
gs
jae
roll
pop
dec
inc
es
jg
addb
pop
push
call
js
push
mov
xorb
mov
push
inc
push
mov
jae
repz
fs
popa
out
jo
popa
and
fiaddl
and
mov
dec
push
sub
jno
add
inc
cmovnp
fs
push
mov
sarl
xchg
inc
jp
scas
push
std
jecxz
mov
popa
fwait
in
xchg
jl
pop
or
dec
mov
xchg
test
dec
sti
fisubrs
or
gs
jl
movsb
add
repz
sub
scas
mov
pop
int
mov
jbe
pop
iret
out
pop
sbb
sbbb
repnz
push
xchg
stos
out
lcall
mov
or
jno
fwait
popa
mov
hlt
mov
mov
out
ret
push
daa
aaa
or
cmpsl
jo
dec
jle
in
push
or
addl
sub
inc
add
sbb
outsb
mov
popf
xor
daa
loop
fiaddl
popl
das
lcall
xchg
adc
cmp
lock
adc
stc
mov
push
mov
mov
ret
add
mov
pop
mov
xchg
mull
mov
add
fdivrs
inc
mov
sub
sub
pop
iret
pop
aas
mov
sub
add
cwtl
add
loopne
cltd
mov
sti
mov
sub
leave
test
leave
add
push
mov
mov
and
test
jl
fistpll
icebp
xchg
loope
adc
enter
sub
loopne
nop
sub
jmp
mov
xlat
push
fidivrl
inc
push
push
lock
outsb
insb
jno
shlb
nop
mov
out
in
jne
mov
sbb
lds
xchg
sbb
movsl
int
jo
repz
jne
or
and
sti
sbbl
sbb
icebp
lcall
push
popf
ja
ret
imul
test
cmp
mov
dec
cs
cld
icebp
mov
sbbb
or
jle
fs
stos
repz
xchg
jno
ds
mov
add
les
push
iret
ja
mov
ret
and
lock
lods
js
xor
sbb
imul
mov
lcall
sub
in
dec
pop
lea
inc
adc
push
out
mov
xchg
xor
cmc
fs
mov
xchg
sub
jae
gs
arpl
sub
xchg
loopne
mov
cs
test
adc
add
or
insl
mov
popa
cmp
stos
jecxz
add
inc
adc
pop
xor
bound
pushf
add
neg
mov
outsl
ja
lods
nop
js
jae
scas
cltd
xchg
rcrl
mov
mov
dec
mov
push
mov
cmp
stc
jnp
inc
outsb
dec
les
jae
sbb
sahf
les
jno
jae
icebp
push
sahf
inc
clc
clc
inc
daa
or
cmp
cmpsl
sti
adc
jle
addb
stc
dec
rcrl
aam
inc
daa
rol
cwtl
popf
data16
insb
jae
push
in
imul
xor
adc
xchg
push
ret
xlat
les
mov
mov
fadds
dec
jle
push
rcr
lock
fcmovnu
lods
inc
inc
popl
shll
adc
mov
imulb
adc
jb
inc
jle
adc
sub
ret
pop
or
pop
outsl
pop
rcll
dec
push
add
cwtl
icebp
testl
mov
dec
loopne
and
jecxz
sub
pushf
scas
add
pushf
jl
xorl
mov
repz
aam
outsb
adc
and
incl
pop
mov
insl
or
addr16
push
cmc
dec
hlt
sbbb
xchg
js
dec
push
out
jne
jge
aad
dec
not
fsubrs
mov
data16
test
and
sub
add
sub
fcoml
loopne
xchg
dec
loop
sub
je
adc
push
xlat
pop
push
shrb
dec
xlat
bnd
fdivrs
mov
movsl
int3
or
lret
data16
push
dec
outsb
sahf
and
in
sarb
add
adc
inc
std
ljmp
sub
ds
inc
cmc
in
cmp
inc
out
push
dec
cmc
clc
call
cltd
sbb
repz
or
fwait
xchg
popl
or
lret
adc
pop
cmp
and
es
mov
outsb
cmp
sti
mov
int
mov
cmp
adc
cmp
jae
mov
out
adc
push
and
scas
in
mov
add
rcll
mov
pavgw
test
cmc
mov
or
repz
test
lock
and
mov
sub
cmpsb
out
int3
push
cwtl
xor
insb
arpl
rcrl
inc
dec
mov
movsb
jp
insl
xchg
popf
sbb
dec
lret
inc
test
jae
sbb
je
pop
add
sbb
sub
sbb
lcall
adc
int3
or
addr16
stc
std
push
int
mov
add
enter
lods
sahf
sub
or
sub
std
aad
repnz
out
jmp
scas
decl
cmpsl
and
fs
fdivr
repz
push
popa
sub
clc
movsl
jle
addr16
adc
cmp
pop
inc
pop
and
fwait
xor
js
stos
daa
jne
sbb
mov
in
clc
fcmovnbe
repnz
pop
add
jmp
mov
popa
jecxz
sub
lret
cltd
hlt
jl
add
ret
dec
adc
cmpsb
popa
rolb
insb
test
ret
cli
scas
cmp
push
push
cmpsl
out
aaa
std
negl
gs
into
cmpsb
cmp
fisttps
cmpsl
cmc
int3
dec
jae
mov
es
hlt
mov
in
cmpsb
inc
pop
mov
cmpsb
fists
add
jno
push
lods
out
jmp
add
xorl
jg
clc
or
add
stos
int3
mov
adc
pop
loope
cmp
int3
js
jno
or
sub
js
jmp
mov
adc
insb
mov
jne
push
ss
mov
fwait
clc
jecxz
dec
lods
xor
lret
xor
pavgusb
sbb
xor
out
sti
lock
or
leave
daa
mov
loop
mov
jp
jg
testl
pop
xlat
loope
aam
inc
and
jp
xlat
add
ret
out
xlat
push
sbb
js
mov
fwait
test
mov
fstl
sti
scas
test
sub
cmp
std
or
js
sbb
out
xchg
insl
lods
adc
mov
or
outsl
adc
iret
popf
or
or
or
xor
nop
stos
xor
cmp
or
cmp
in
insl
cltd
orl
cmp
js
sub
mov
xchg
mov
das
fldl
loopne
push
add
out
repnz
cmp
xor
mov
xchg
push
call
mov
pop
sbb
mov
fbstp
mov
mov
mov
push
and
jnp
and
mov
sub
stos
test
int3
shll
lcall
fldt
cmp
jg
jle
mov
pop
cltd
in
popf
add
push
insl
sbb
daa
add
jnp
mov
adc
pop
push
dec
jo,pt
cmpsl
cmp
mov
stc
mov
dec
leave
sbb
mov
xor
mov
mov
add
jnp
in
mov
dec
aas
popf
movsb
jp
mov
add
icebp
test
push
jbe
outsb
in
jns
dec
dec
test
xchg
mov
inc
add
xchg
sti
jle
lock
rcl
mov
jmp
pop
test
xor
jmp
fs
jecxz
mov
add
xchg
lret
push
ljmp
push
lahf
insl
stos
imul
cld
sbb
in
cmp
jg
and
jmp
out
sbb
decl
cltd
and
call
or
test
xlat
pop
pop
movsl
cli
test
cs
loope
rorl
mov
dec
ljmp
orl
subl
sub
fstl
mov
dec
lock
fiadds
sbb
lcall
dec
adc
data16
add
out
addr16
pop
scas
or
inc
loop
inc
and
add
mov
call
jns
sbb
sbb
inc
mov
int
sbb
push
pop
mov
cmp
int3
cltd
jl
rorb
mov
fidivs
xchg
pop
adc
inc
push
add
imul
aas
movsb
in
push
inc
sbbb
or
dec
mov
data16
stos
xchg
fadd
ficoml
pop
mov
xchg
mov
xchg
or
sbb
cmpsl
sbb
jle
xchg
sbbb
sbb
lret
inc
ficompl
fildll
loopne
add
and
int
inc
cli
jecxz
push
lret
fsubl
outsl
loopne
mov
data16
test
jbe
or
ja
or
xchg
js
xor
lea
sbb
mov
mov
ret
inc
pop
cli
lahf
jl
aaa
iret
ss
je
pop
and
dec
and
fstps
xchg
les
inc
lods
cld
addr16
mov
mov
inc
movsb
cmp
outsl
jne
jl
test
shlb
or
fwait
popa
mov
leave
add
push
iret
lret
fnstcw
xchg
dec
icebp
fdiv
loop
xchg
das
lods
jecxz
lods
aad
imull
sahf
cwtl
fdivrs
mov
cmp
or
aam
dec
dec
jae
xor
in
sub
orb
push
push
fucomp
sub
adc
mov
cmpsb
inc
lret
testl
push
testl
lret
ficomps
movsl
sub
sbb
mov
jne
popf
out
mov
sub
xchg
inc
jle
or
jo
lods
fisttpl
andl
jecxz
jno
popf
inc
movsb
add
add
push
cmp
out
mov
repnz
shlb
dec
rorb
jg
pushf
lds
add
call
mov
jmp
xchg
add
pop
fisubs
inc
mov
gs
out
jmp
mov
lcall
adc
repz
lock
imul
push
rorb
mov
aam
sbb
dec
mov
sbb
andl
int3
cmp
lods
jmp
cmp
cmpl
outsl
std
rcrb
mov
jmp
sbb
cmpl
aaa
movsb
dec
lret
ljmp
daa
inc
xchg
fisubs
ja
movsb
sub
addl
sbb
shl
in
xchg
sahf
in
xorl
insl
mov
fstps
xor
loop
inc
in
lcall
cli
mov
jp
sbb
jnp
cmp
fstps
repnz
dec
inc
les
ret
mov
sbb
pusha
and
je
sahf
leave
popf
xchg
out
insb
aad
xchg
ss
cmp
aad
xor
dec
sbb
mov
data16
mov
insl
sarl
popa
outsb
mov
aaa
fidivs
dec
adc
iret
subb
jns
push
xchg
mov
sub
gs
cli
dec
jo
mov
sub
call
cmp
clc
daa
jns
sqrtps
test
or
js
add
jo
and
sbb
cmpsb
pop
cmp
inc
jge
popa
icebp
movb
inc
or
dec
out
shll
push
add
pop
inc
mov
mov
mov
enter
push
pop
nop
xorl
mov
mov
pop
sbb
xchg
inc
or
mov
addr16
pop
xor
ret
mov
cmp
mov
push
sbb
mov
jne
insb
adc
and
mov
add
mov
cmpsl
test
xlat
hlt
jnp
xor
outsb
sbb
outsb
imul
sbb
negl
xchg
mov
pop
or
and
mov
dec
sbb
xor
jae
es
aad
push
pop
push
dec
cs
fwait
hlt
les
aas
xchg
add
xlat
push
enter
sbb
or
lock
inc
pop
inc
test
add
rcll
pop
pop
rcll
clc
push
mov
mov
lods
fwait
cld
inc
mov
stos
mov
xlat
push
mov
fstps
int
clc
inc
or
xchg
lcall
push
jmp
test
stos
sub
xchg
adc
pusha
jecxz
stos
adc
cmp
call
fdivs
arpl
pop
pop
xlat
gs
jnp
pop
lret
sahf
nop
aaa
test
dec
cwtl
and
lahf
fs
mov
loopne
sub
rol
xlat
dec
pop
fwait
mov
popf
inc
cli
mov
fcomi
fwait
lcall
xchg
lods
pop
ret
adc
adc
mov
fidivs
cli
sub
dec
adc
or
jns
dec
mov
aam
or
fsubrs
cmp
or
inc
sbb
push
pop
push
mov
xchg
inc
mov
cmpl
adc
pop
push
ljmp
pop
iret
mov
movsb
sbbb
xor
ljmp
push
sub
int
xor
mov
in
xor
jnp
mov
sub
sub
fs
test
shll
mov
jecxz
bound
and
cmp
rcl
and
jns
cmp
ja
push
test
adc
mov
mov
cld
jns
movhps
push
ds
mov
mov
lods
dec
xlat
and
stos
jl
jns
pop
cltd
cld
arpl
mov
mov
push
outsl
sub
pop
sbb
pop
push
mov
scas
dec
xor
jb
lret
rcll
cwtl
sahf
mov
add
adc
xchg
add
sub
xchg
in
xlat
in
adc
inc
fs
imulb
cmp
ffree
pop
add
mov
insl
lcall
mov
rcrl
jp
testl
jle
or
rorl
push
aam
stos
dec
dec
sub
das
xchg
sub
xor
pop
ja
and
mov
mov
inc
and
cmpb
and
lods
push
mov
push
add
lret
xor
xor
jmp
sub
stos
sbb
pop
imul
mov
push
faddl
nop
mov
mov
rol
loopne
loop
push
sub
lods
and
or
lea
dec
fxch
push
inc
je
out
mov
pop
in
ljmp
adc
jne
shrb
pop
gs
jnp
into
xor
inc
add
aaa
lret
add
pop
out
inc
push
adc
out
das
adc
xor
hlt
xor
mov
das
sub
les
lea
xchg
je
pop
pop
pushf
xchg
push
jmp
jle
push
pop
mov
mov
mov
test
mov
sub
xchg
xlat
and
scas
jns
loop
cmp
and
nop
aas
sbb
mov
cmpsl
imul
and
addl
add
jp
in
cmp
mov
push
xchg
add
and
ror
jg
jae
jl
mov
sub
cmp
xor
out
pop
lahf
rorl
fisubl
insb
jbe
jl
pop
movb
xor
ret
enter
and
dec
dec
push
cwtl
cld
test
inc
mov
iret
push
cmp
push
push
mov
inc
cmp
mov
pushf
sahf
std
inc
add
mov
dec
add
cmp
jns
movsl
mov
cs
stos
pusha
aam
jmp
inc
xchg
mov
outsl
pop
pop
jmp
lcall
or
insl
mov
insl
lret
int
cmp
cltd
out
mov
add
or
test
jnp
shrb
into
mov
xor
imul
sub
dec
xchg
pop
je
pop
cmc
cmp
mov
add
cmpsb
out
dec
roll
ret
pop
sub
push
ljmp
mov
xchg
ret
pop
xchg
mov
cli
repnz
xchg
fists
lea
lret
mov
add
xor
iret
inc
xchg
adc
fimuls
push
mov
rcr
ret
jle
rcr
sbb
mov
mov
mov
mov
flds
jge
shl
out
cmc
pop
adc
dec
testl
das
mov
lcall
out
mov
mov
mov
mov
cmpsl
pop
cmp
or
dec
ds
xchg
pop
fwait
push
sbb
pop
cltd
sbb
mov
jmp
adc
jns
push
notb
cwtl
lcall
gs
add
aas
imul
js
mov
cmp
aam
pushl
and
xlat
jns
sbb
cmpsl
mov
mov
cmp
pop
lret
lcall
adc
ds
push
mov
int3
mov
cmc
imul
push
mov
scas
cs
mov
cltd
and
sahf
fwait
das
pop
iret
sub
push
sub
sub
mov
inc
dec
lods
js
dec
mov
testl
sar
push
and
es
dec
xchg
fsubr
aaa
mov
sbb
and
mov
add
add
test
xchg
test
sub
xchg
lret
rolb
push
popf
pop
shlb
pop
push
sub
lods
xor
cltd
mov
mov
sbb
push
or
lret
pop
adc
and
lahf
mov
cli
lds
mov
mov
push
cmc
adc
xor
jge
pop
xchg
and
xchg
sub
sbb
sti
pop
jbe
in
bound
in
clc
sub
mov
lahf
mov
nop
dec
xchg
daa
add
outsb
mov
sbb
fnstsw
mov
sbb
mov
adc
mov
sub
jecxz
rcrb
jo
cwtl
lret
mov
mov
incl
sub
pop
lods
dec
fs
mov
adc
rorb
mov
insb
and
and
outsb
mov
pop
dec
aaa
aam
ja
cmp
subb
lock
in
mov
adc
and
jno
mov
jb
mov
pop
mov
jl
ja
nop
mov
int
mov
mov
sar
out
popa
adc
pop
xor
xchg
ja
sti
push
movsl
sbb
inc
into
mov
movsl
repnz
push
dec
gs
xor
aaa
mov
or
in
xor
arpl
jl
loopne
insb
in
scas
jno
les
nop
dec
mov
fdivrp
ss
push
cmp
loopne
repz
out
xchg
xlat
cli
shll
pusha
daa
lds
add
movsl
xchg
les
adc
loop
mov
xor
jne
popf
dec
inc
lods
in
add
and
sub
add
cmp
jmp
add
insl
sbb
xchg
xchg
dec
neg
icebp
sti
push
sub
inc
iret
add
jno
shr
hlt
popf
adcl
and
out
fstl
lds
and
add
mov
and
sub
mov
lahf
popa
in
fdivrl
sbb
call
push
cmp
pop
js
pop
sbb
out
mov
loopne
test
mov
xchg
inc
inc
lret
orb
aaa
push
fstps
mov
int3
scas
xchg
inc
sub
mov
pop
dec
dec
mov
add
test
mov
push
ret
pop
cmp
mov
shll
shll
test
in
push
sbb
shlb
xchg
cmc
dec
mov
in
pusha
inc
or
punpcklbw
or
jge
cmpsb
jecxz
mov
test
sub
int3
inc
int
repnz
jp
and
sbbb
inc
pop
clc
mov
dec
mov
int3
add
in
sub
mov
jge
mov
cli
xor
jmp
mov
add
jle
in
sbb
or
mov
outsb
inc
push
jecxz
ja
sub
mov
pop
ljmp
fs
enter
or
jmp
fbld
xor
les
cmpsl
clc
mov
pop
xchg
enter
ret
push
test
jo
sub
jecxz
ja
fldt
pusha
lea
pop
mov
dec
cmp
cli
sub
mov
cmpsl
in
jne
jns
push
cmp
inc
push
mov
and
dec
pop
outsl
sub
xchg
iret
add
dec
cmpsb
rorl
stc
aad
inc
movsl
and
xchg
xor
sub
ret
inc
into
sbb
in
insl
pushw
jp
xchg
mov
movsl
aam
popf
stc
mov
add
call
and
pushf
dec
sarb
lcall
call
pop
adc
call
push
cmpsl
into
scas
xorb
ret
adc
fistpl
mov
std
jl
sbb
sub
repz
pop
cli
cmp
sub
aam
hlt
lods
icebp
jmp
or
adc
aad
pushf
ds
sbb
and
adc
xor
enter
aas
jmp
sub
jge
and
mull
cmp
stos
mov
inc
icebp
dec
xor
aaa
mov
je
dec
xchg
arpl
lret
inc
fldl
sahf
scas
ja
jnp
mov
pop
dec
lods
mov
cmpsl
roll
das
pop
and
sbb
push
and
xor
loop
mov
test
xchg
fwait
adc
repz
inc
mov
stos
aas
cmp
shll
je
in
dec
es
xchg
cli
add
jecxz
xor
lret
repnz
mov
add
inc
mov
xchg
fadd
movsb
lds
imul
sbb
pop
in
imul
lahf
in
movsb
pusha
stos
sub
addr16
dec
mov
mov
push
inc
add
sbb
lahf
into
jo
out
sbbl
inc
stc
daa
inc
dec
shr
mov
stos
loope
xor
push
fidivs
mov
test
xor
sub
fwait
jae
out
sub
test
push
mov
inc
faddl
jl
call
insb
mov
pop
addr16
fcompl
mov
mov
lods
popa
std
and
sbb
lds
js
sbb
loope
or
test
cmp
test
lcall
and
arpl
cmp
ret
xchg
jne
sti
dec
sti
push
sbb
fstl
cmp
jbe
mov
arpl
gs
sbb
negl
xchg
lret
fnstsw
in
jns
lcall
push
add
pop
jno
leave
jmp
lds
push
aas
mov
pop
or
icebp
or
mov
inc
adcb
test
pop
out
inc
xchg
cmp
xchg
xchg
xchg
outsl
jl
fnstsw
add
mov
movsb
aam
loopne
imul
int3
pop
push
cltd
stos
rclb
push
in
xchg
rorb
lret
mov
andb
dec
cmp
into
inc
mov
xchg
adc
mov
inc
mov
cmp
push
dec
xor
repz
ja
add
add
icebp
ss
mov
out
and
jge
jp
jle
or
fimuls
insl
sub
inc
adc
mov
cli
fiaddl
jmp
andl
xchg
lret
and
insb
xchg
andb
outsb
rorb
loop
jae
testb
sti
lds
shr
or
outsb
inc
sti
cmpsb
push
dec
movsb
testl
stc
repnz
pushl
cmpsb
mov
or
pop
jmp
pop
gs
movsb
pop
sbb
push
jo
inc
shll
add
push
icebp
aas
cmc
fiaddl
jae
inc
aaa
mov
cs
ds
xchg
repnz
mov
and
in
scas
stc
jae
mov
xor
aas
test
int3
in
fstpl
popa
inc
jbe
lods
mov
stc
loop
pop
leave
pushf
test
pop
pop
lahf
cmp
std
mov
sbb
mov
das
loop
mov
sbb
inc
mov
fbld
mov
sub
mov
jle
bound
movsl
or
and
les
test
push
leave
fcompl
pop
dec
insb
call
inc
lcall
xchg
fwait
mov
jae
shlb
daa
sub
loop
and
fwait
repnz
push
adc
popf
xchg
loopne,pn
jge
push
xchg
out
mov
lret
add
add
sub
or
mov
clc
out
push
or
andb
pusha
mov
sahf
jae
cwtl
outsl
mov
push
mov
push
and
fidivrs
or
cld
push
xor
mov
push
dec
cld
and
fs
mov
sub
rclb
das
add
mov
cmp
mov
jmp
pop
not
push
push
loop
or
out
push
das
and
inc
stos
or
mov
inc
ds
scas
pop
insb
fwait
jnp
dec
mov
mov
or
sahf
loopne
mov
popa
push
sbb
and
aam
lea
leave
sahf
mov
out
imul
jno
push
cwtl
xorl
out
loopne
rcr
mov
fs
frstor
test
cmp
pop
iret
fdivl
leave
xor
xchg
testl
jmp
pusha
adc
sbb
push
movsl
das
movsl
in
cmp
jbe
loopne
add
sbb
mov
or
and
mov
pop
jne
jecxz
dec
pop
add
push
icebp
stc
test
dec
sbb
fisubs
sarl
rcl
into
dec
imul
dec
gs
lods
test
jl
pop
mov
repnz
lods
sbb
sbb
pop
and
mov
add
push
inc
xor
sbb
outsl
xchg
outsb
jmp
push
xor
add
sub
sbb
dec
cmp
push
mov
dec
int
ds
pop
jae
int
fnsave
mov
xchg
xor
aas
shrl
loop
lret
mov
xor
push
pop
fucom
lcall
mov
shr
mov
push
jge
xchg
cmp
mov
lea
xchg
sbb
jl
pop
xchg
xchg
push
xchg
mov
cmp
sbb
div
nop
pop
cmp
rorb
lcall
inc
inc
cmp
pop
imul
xchg
inc
inc
inc
adc
outsl
cmp
nop
jns
sub
push
and
in
call
cmp
mov
add
mov
clc
mov
popa
xchg
stc
pop
std
mov
dec
pop
push
and
les
jo
std
push
mov
jns
flds
xchg
xor
adc
lock
push
jne
xorl
jbe
xchg
cli
loopne
adc
ret
insl
dec
int
daa
sub
cmp
dec
push
xor
addl
adc
mov
fcoml
fs
in
outsl
pop
mov
movsb
int
jnp
mov
lods
push
and
test
aaa
adc
inc
dec
push
stos
lcall
pop
adc
mov
in
imul
inc
popf
push
pop
jge
dec
sub
pop
or
orl
and
loop
add
stc
mov
sbb
jmp
push
mov
scas
jecxz
cmp
aad
orl
mov
mov
in
in
push
or
inc
inc
es
xor
imul
jl
fcmovbe
or
pop
stc
fidivrs
and
dec
ret
push
mov
test
jge
pop
xchg
jp
cmp
or
and
insl
xor
nop
repnz
sbb
fidivrs
fmuls
push
arpl
sahf
lahf
outsl
push
mov
imul
sbbb
mov
fldcw
xchg
sub
and
add
add
push
pop
lea
cli
sbb
push
fistps
lods
mov
int
leave
aad
cmc
sub
sbb
cmp
mov
mov
cmp
or
es
enter
add
xchg
xchg
std
dec
or
popa
mov
dec
jle
dec
xchg
sub
je
nop
jl
mov
adc
daa
add
mov
pop
inc
inc
dec
sbb
push
sub
loopne
aam
cmp
insb
lock
dec
dec
push
int
sahf
and
shlb
loop
cmp
sbb
jle
pop
lret
add
pop
adc
cmpsl
add
imul
dec
cmp
jne
sub
add
mov
mov
jecxz
pop
rcrb
lahf
inc
lahf
xor
pusha
push
fiadds
xor
mov
add
jnp
insb
fmulp
lret
add
outsb
push
cmpsb
fidivrs
neg
popa
popf
je
stos
clc
scas
xchg
sub
or
subb
call
mov
adc
nop
xchg
jne
int
pop
sub
adc
jg
xchg
add
pop
mov
push
outsb
pop
imul
cltd
jmp
mov
sbb
sar
ds
movsb
xchg
mov
enter
sti
mov
lods
dec
loope
sub
mov
fwait
push
and
xchg
imul
popf
or
dec
cmp
or
jns
xor
out
lds
sbb
std
mov
add
cmp
outsb
inc
das
cmp
or
out
jo
sub
xchg
push
sbb
into
mov
sub
leave
lock
xor
adc
inc
daa
jne
scas
cmpsl
in
je
int3
mov
sub
icebp
cmc
loopne
orb
sti
fnstcw
lret
ja
mov
dec
cmp
imul
aaa
sti
in
ds
aas
xchg
lods
shrl
sub
push
sub
fsubrs
or
push
imul
push
or
xchg
rcll
or
sahf
jnp
xchg
mov
xchg
and
adc
mov
pop
add
jno
sub
int
js
les
sub
pusha
and
cld
xchg
out
es
fmuls
push
in
es
dec
pop
mov
xchg
ss
es
dec
push
pushf
fisubrl
notb
xor
cmp
arpl
nop
mov
pop
je
cmp
call
fiadds
adc
sbb
adc
adc
mov
les
cmpl
push
div
xchg
mov
mov
arpl
rcr
std
mov
ficompl
xor
push
cmc
andl
data16
sub
pop
rorl
insl
sub
fstpt
pop
jecxz
arpl
dec
out
fisttpll
cmp
test
fidivs
sub
clc
pop
inc
jb
mov
dec
adc
push
jle
jno
roll
out
or
cmp
xchg
stos
or
xchg
push
aad
shrb
push
xorb
cwtl
mov
xor
insb
imul
popl
lret
in
sbb
loop
dec
std
mov
aas
mov
add
rcll
cmp
mov
sub
jge
loop
xchg
adc
inc
faddp
cs
sti
mov
jp
jmp
into
xchg
aam
push
in
ror
and
iret
aam
rcl
jbe
das
inc
jo
in
test
inc
pop
fcom
ljmp
in
cld
imul
stos
bound
xchg
mov
adc
sub
out
jge
sbb
push
subl
test
mov
leave
inc
mov
add
addr16
and
mov
mov
imul
ja
push
mov
xchg
cmpsb
lret
repz
cmp
sbb
jbe
hlt
mov
fs
lods
push
loope
sti
cmpsl
dec
push
stos
adc
adc
pop
cwtl
mov
mul
mov
in
adc
inc
pushf
test
dec
mov
sti
dec
inc
aad
add
mov
rclb
push
idivb
popf
mov
adc
xchg
push
pop
fiadds
cli
jno
push
notl
aad
testb
cli
cld
shlb
loopne
lods
jecxz
xchg
lds
pop
xchg
aas
cmp
sbb
mov
das
cwtl
mov
mov
cmp
sbb
xchg
in
aam
jl
cmp
adc
add
fs
inc
xchg
add
fsubr
cmpsb
popf
lret
jmp
imul
lods
xchg
mov
imul
sub
popf
push
push
mov
or
jecxz
clc
push
jne
mul
scas
stos
inc
nop
mov
negb
in
dec
mov
xorb
inc
ficomps
dec
loopne
mov
pushl
inc
pop
repnz
outsl
cmpsb
imul
lret
jmp
mov
push
mov
mov
cmc
jl
xlat
xchg
xchg
pop
iret
les
fidivl
cmpsl
int3
ljmp
push
adc
out
mov
dec
pavgw
shlb
lret
das
jnp
out
cmpsl
jp
sbb
in
sbb
push
mov
cmpb
out
pop
adc
adc
pusha
push
cmpsl
xchg
push
dec
negb
es
pop
cwtl
ja
mov
cltd
mov
mov
add
inc
add
scas
mov
jne
adc
sbb
cli
fcoms
lds
inc
sbbl
xchg
rcrl
mov
inc
add
xor
call
fisttpll
frstor
adc
arpl
push
pop
rclb
inc
fistpll
adc
sub
mov
scas
ficompl
xor
fidivl
mulps
nop
or
iret
xor
sbb
dec
jns
sbb
add
and
mov
jecxz
xchg
or
xchg
dec
cmc
or
in
fistps
fnstcw
or
sbb
std
push
cli
filds
lahf
int
sub
add
in
test
cmp
mov
pop
jl
fstpl
dec
push
pop
sub
mov
xor
push
jmp
sti
xor
cmp
pop
mov
cmpsb
xchg
hlt
insl
and
shlb
add
xchg
mov
mov
lahf
mov
rcll
test
pusha
xlat
jle
loop
pop
jb
les
xchg
sbb
xchg
dec
push
mov
cmpsl
nop
xor
dec
cmp
inc
insl
insl
filds
dec
push
sub
clc
lahf
sbb
and
and
mov
push
jnp
mov
into
jle
pop
xchg
rcr
dec
cmpb
xor
xchg
pop
sub
or
lds
popf
mov
ret
popf
xchg
ja
test
jp
sti
sbb
and
imul
movsb
in
cmpsl
shlb
pop
fistl
and
xchg
push
aam
into
cmpsl
mov
iret
mov
adc
insl
pop
mov
fstpt
mov
pop
ds
jg
push
mov
mov
sbbb
loopne
testl
clc
fsts
aaa
stos
imull
in
addr16
repnz
adc
push
outsl
jno
stos
stos
inc
rorb
outsb
or
xchg
add
adc
mov
xor
movb
fidivl
jns
mov
dec
jge
dec
aaa
xor
lds
test
lret
lds
push
test
xchg
mov
inc
adc
xchg
xchg
or
pop
movsl
popf
loop
xchg
sbb
xchg
sbb
inc
jp
mov
cmp
lods
xchg
pop
xor
imul
mov
jnp
neg
cmc
push
test
mov
rorl
movsl
popf
dec
daa
adc
ja
nop
ficomps
push
pop
jnp
jo
ds
stc
daa
cmpsl
cli
pop
lds
cmp
push
and
inc
push
and
pop
sbb
and
pusha
push
cmpsl
jecxz
pop
aaa
popa
push
mov
lret
xchg
leave
sbb
xchg
mov
mov
add
dec
test
pop
hlt
cmp
mov
sahf
loopne
add
xchg
add
stos
mov
xor
cld
mov
cld
mov
xor
addr16
mov
add
mov
ret
sub
pop
outsl
jae
aad
inc
les
cwtl
mov
push
add
dec
popa
call
jns
jae
mov
std
xor
fstp
sub
in
out
in
cld
dec
dec
cwtl
sub
adc
inc
adc
mov
out
xor
jle
and
add
imul
sbb
or
xchg
sbb
jg
cmp
jns
xchg
push
das
mov
negl
insl
flds
dec
xor
imul
imul
xchg
xchg
dec
hlt
cmp
jle
movsb
mov
cli
mov
sbb
ja
mov
cmp
int3
call
inc
enter
jmp
imul
cs
sti
into
inc
shlb
mov
add
popf
cmp
mov
outsl
cwtl
mov
inc
lods
lea
add
int3
sub
mov
mov
mov
out
mov
jne
dec
sbb
hlt
iret
mov
or
or
dec
in
and
ljmp
movsl
and
lock
mov
repz
adc
mov
cwtl
sbb
mov
mov
lret
push
dec
data16
cld
pop
mov
mov
es
aam
ficoms
adc
shlb
mov
mov
pop
pop
loopne
lret
sub
or
jmp
gs
and
insb
xor
mov
jne
inc
mov
enter
xor
scas
ret
push
lods
fcoml
daa
or
inc
dec
lret
mov
dec
ret
push
or
ss
arpl
cwtl
mov
or
pop
xchg
pushl
xchg
adc
das
inc
sbb
sub
mov
dec
sub
sbb
dec
mov
cmc
es
mov
pop
mov
or
orb
data16
faddp
xchg
add
xchg
sub
mov
cmp
jg
mov
xor
add
mov
bound
adc
jmp
cmp
xor
push
addr16
lret
mov
mov
pop
je
xor
xor
fs
add
push
mov
int
ret
addr16
aam
shrb
mov
lods
push
or
inc
imul
int
arpl
rorl
ret
jb
fsts
cmp
cmpsl
xchg
mov
xlat
adc
mov
out
fistps
shl
notl
mov
call
jns
lock
fsubl
stc
push
movsb
shr
pop
ss
xor
lods
jge
clc
mov
xor
push
or
movsl
pop
jae
push
outsl
and
gs
repz
and
push
mov
out
ds
int
cmp
inc
repz
mov
mov
inc
inc
or
sub
lahf
ret
test
dec
sbb
mov
in
test
fmull
aas
int3
addr16
leave
lea
arpl
adc
push
push
dec
shrb
enter
les
cltd
movsl
adc
xor
lea
pushf
pop
je
js
repnz
pop
mov
mov
fwait
and
ss
sti
pushf
sahf
xchg
and
in
lods
cli
sbb
sbb
into
push
pop
pop
fxch
jo
test
decl
inc
push
push
pop
ja
mov
cmp
int
lods
mov
push
leave
std
jb
adc
std
clc
aad
adc
sbb
jno
shrl
or
inc
sti
xchg
cmpsb
cld
dec
out
xlat
call
movsb
push
cltd
sub
mov
and
jno
adc
add
jp
sub
inc
rcrb
ret
jmp
repnz
movsb
mov
xchg
repz
mov
mov
addr16
inc
push
add
push
nop
js
inc
leave
add
dec
jo
ret
mov
filds
dec
dec
int
cmpb
or
mulb
int
inc
push
loope
sub
mov
mov
orl
cmpsl
jle
and
jns
out
ss
sbb
push
xchg
inc
addb
out
mov
and
mov
inc
ss
test
sarb
out
fs
or
adc
and
push
enter
cmp
xor
jo
inc
fcomps
into
mov
bound
push
pop
lret
cmpb
jle
cmp
std
mov
jae
mov
ds
or
jbe
sub
ret
lahf
push
xchg
icebp
fsts
jmp
mov
imul
jbe
add
aaa
dec
mov
movsl
in
nop
dec
mov
push
stc
xorb
sub
jne
cmp
lahf
shrb
jp
cmpsb
add
pop
mov
lods
mov
ljmp
mov
jg
fdivr
fcomps
stos
fildll
mov
mov
cltd
or
sub
hlt
ja
xor
in
insl
outsb
pop
leave
lea
push
sbb
out
stos
in
jp
pop
dec
scas
add
subb
lea
aas
fstpt
mov
das
daa
and
mov
push
adc
push
nop
int3
inc
mov
adc
imul
pushf
jns
mov
ds
insb
cld
sti
pop
pop
inc
dec
mov
fs
mov
aam
xchg
ret
ja
inc
jbe
xor
lret
inc
jmp
adc
enter
push
js
std
scas
cmp
xor
jmp
mov
cmp
aad
js
dec
inc
sbb
jp
ss
lods
mov
js
fisubrl
imul
cli
addl
aaa
popa
mov
sbb
sub
dec
cmpb
sbb
mov
dec
xchg
js
enter
pop
mov
pop
mov
mov
daa
fistpll
fnstcw
pop
adc
test
fimull
jg
xor
jge
cli
xor
sbb
loopne
jnp
sbb
rol
pop
mov
xchg
push
addb
pop
xchg
and
mov
pushf
push
and
mov
push
and
lods
repz
daa
repz
mov
xor
xchg
push
pop
xchg
jle
das
inc
sti
nop
sahf
daa
jmp
lret
mov
jb
lcall
mov
sarb
and
ret
mov
aam
outsl
repz
sub
mov
out
aaa
sub
dec
mov
mov
sub
push
and
jne
adc
mov
pop
pop
mov
adc
jg
inc
xor
cli
neg
enter
add
mov
sbb
pop
adc
mov
pop
adc
fsubrl
mov
cli
scas
loope
cmp
jno
test
les
and
or
or
jb
push
xchg
adc
pop
xor
xor
lcall
repz
and
add
rorb
imul
push
cmc
xchg
adcl
into
loopne
scas
and
int3
into
nop
and
std
imul
mov
adc
call
enter
cltd
or
add
xor
pop
jns
and
pop
jl
daa
loopne
lods
dec
loopne
xor
outsb
popa
or
aaa
fcoml
je
aad
out
fidivrs
pop
sbbl
inc
mov
mov
movl
jns
xor
test
push
js
mov
jg
ss
jns
ret
push
clc
pop
sbb
std
divb
cmp
sbb
cwtl
or
negb
and
movsb
sti
mov
xchg
mov
mov
lea
fadds
xor
jp
roll
sub
push
dec
imul
mov
cli
test
inc
add
add
sub
mov
ss
lea
scas
jecxz
stc
enter
cmp
stos
push
mov
xor
sub
aas
int
sbbl
add
cmp
or
lret
iret
adc
inc
sbb
std
movsb
shl
jae
stos
and
loope
pop
iret
add
sbb
aad
in
mov
jae
decb
push
jo
les
jo
ss
lds
call
ds
push
sub
xor
push
fwait
aam
ljmp
xchg
push
add
loop
jbe
push
repz
scas
push
jge
pop
jb
push
mov
inc
out
shlb
hlt
sub
jnp
insb
push
sub
mov
adcl
outsb
sub
sub
push
ror
cmpsl
xchg
lds
pop
inc
test
add
and
cmp
inc
dec
fwait
cli
idivl
sbb
ljmp
leave
cmp
mov
mov
movsb
movsl
jnp
jge
xchg
sbb
xchg
repz
repz
push
xor
xor
jmp
cwtl
xlat
jae
loopne
adc
bound
stos
pop
mov
jl
ret
pop
jb
adc
jae
mov
aad
lret
pop
cmp
xor
fdiv
adcl
scas
jno
in
nop
loopne
or
andb
out
or
fisubrl
dec
test
sbb
xchg
push
dec
loop
sub
mov
out
adc
mov
rcll
js
cmp
add
and
or
int3
aam
cmpsl
add
movsb
loop
or
ret
xchg
dec
outsb
add
mov
mov
fidivrl
mov
idivb
loope
fcmovnb
cmp
sub
xlat
add
xchg
data16
push
mov
sub
loope
mov
add
inc
xor
fdivrp
xchg
in
stos
pop
sbbb
push
in
lea
mov
jo
xor
pusha
mov
and
faddl
shrl
mov
cmpsl
out
pop
mov
fisubrs
push
mov
sub
and
cs
xchg
jecxz
aaa
repnz
cltd
and
xchg
lods
mov
paddd
repz
insb
insl
pop
or
pop
sub
xchg
inc
xrelease
xchg
jnp
repz
pop
fisttps
sub
pop
arpl
push
xchg
pop
pop
je
stos
cmpl
stc
and
jp
mov
lock
xchg
mov
pop
cmp
mov
pop
notl
in
fiadds
ret
in
cli
setg
ljmp
xor
lock
incb
add
add
mov
add
mull
mov
cmpsb
lret
xor
pminub
xor
pop
fstpt
adc
jle
dec
jnp
movsl
push
push
sbb
cs
xor
inc
mov
mov
lods
push
aam
push
insl
jbe
out
in
clc
mov
cmp
fisubl
and
push
mov
aaa
sbb
inc
std
ss
jmp
mov
enter
int
stos
mov
add
pop
mov
pop
inc
inc
stos
or
das
mov
lock
push
stc
push
rcr
add
je
iret
lret
fs
test
or
mov
inc
popl
cltd
cmp
or
insl
icebp
inc
test
adc
leave
sbb
pushf
inc
dec
fistpll
sub
leave
pop
pop
sbb
out
pop
insl
push
icebp
lcall
nop
pop
stos
jns
loope
mov
in
inc
fcoml
out
add
mov
fwait
mov
push
loope
stos
xor
stos
dec
sub
lcall
sub
cmc
call
push
push
paddsw
and
cmpsl
mov
fidivs
mov
push
imul
mov
inc
dec
mov
nop
xor
pop
cwtl
add
mov
shr
mov
pop
cmc
jecxz
mov
push
insb
mov
sub
out
mov
je
nop
int3
loopne
mov
jnp
xchg
cmp
dec
pusha
out
fimull
sbb
pop
xlat
add
mov
push
idivb
mov
repz
xchg
mov
sub
sbb
aad
push
test
arpl
mov
xor
mov
push
and
and
xor
shl
in
cltd
lods
adc
xchg
or
mulb
push
imul
das
lods
cltd
mov
sahf
xchg
push
nop
dec
jae
clc
out
stos
scas
xchg
je
nop
jl
fs
push
mov
lods
push
hlt
lods
push
xor
testl
lahf
lods
inc
cmp
fldenv
jns
pop
and
xchg
mov
mov
std
xchg
negb
les
or
jl
loope
outsl
mov
jle
fdivs
ljmp
popa
popl
and
rorb
loop
xchg
lret
jne
shr
lcall
and
roll
inc
jmp
dec
fcomps
or
jmp
dec
and
add
inc
sbb
rorb
xor
insb
cmp
push
inc
xor
stos
push
imul
fucom
stos
xor
icebp
cmp
data16
inc
dec
mov
mov
jl
test
ljmp
adc
aas
int
inc
jecxz
jg
test
in
jo
cwtl
cs
jnp
pop
inc
out
bound
push
cmp
adc
call
xorl
insb
jno
rcrl
insb
in
mov
dec
xchg
je
iret
shl
jmp
aad
ret
mov
and
xchg
sbb
cmpsb
imul
xor
sub
push
sti
fs
iret
jns
jae
xor
lahf
dec
das
testb
lcall
xchg
std
lret
dec
add
icebp
adc
insb
cmpsl
inc
cmp
push
testb
pop
mov
mov
cmp
insb
xchg
pushf
dec
mov
leave
mov
inc
js
inc
ja
shlb
fdivs
cld
rcr
aad
mov
ja
dec
push
sub
sub
int
iret
push
inc
cmp
fsts
in
cli
sub
out
pop
sbb
sti
addr16
xchg
mov
les
shll
fldcw
cmp
cmp
xor
pop
fsubl
dec
mov
fs
in
popa
std
fstps
and
loope
pop
enter
ds
xor
lods
sbb
das
inc
cltd
sbb
mul
push
hlt
sub
mov
or
push
test
push
sub
shll
repnz
bswap
xchg
jbe
xchg
imul
mov
pop
or
jno
mov
jecxz
int3
or
movsl
lret
addr16
mov
xchg
ss
repz
loop
sub
in
inc
sbb
cli
rolb
icebp
outsl
sbb
fistps
ficoms
testl
incb
idivb
add
lcall
or
repnz
test
shlb
adc
insb
stos
pop
cmc
pop
insb
pop
fwait
test
or
icebp
xchg
inc
xchg
xchg
dec
cld
xor
and
add
fisttpl
or
rcr
sbb
cmpsl
lcall
lods
and
and
sub
add
arpl
inc
xchg
and
lret
sbb
sbb
push
adc
pop
ja
push
and
aam
jge
mov
jo
ja
les
movsl
cmp
sbb
sahf
and
jg
push
dec
test
popf
pop
pop
lret
jo
dec
hlt
sub
aam
in
sbb
outsl
mov
les
mov
mov
inc
xchg
subl
aam
std
cmp
mov
xor
cmp
mov
pop
jb
jg
jg
les
repnz
xor
dec
cwtl
jns
ds
dec
cmp
shrb
out
xchg
sbb
adc
dec
push
cli
jne
fdivrs
xchg
mulb
pop
jle
xor
pop
mull
cs
rcll
lock
cmpsb
add
dec
lods
into
aas
cmp
rolb
lret
sub
inc
push
adc
cwtl
sub
fimuls
sub
mov
pop
ret
imul
push
mov
dec
cltd
rorb
imul
dec
pushf
out
add
jne
inc
aas
or
dec
mov
shlb
cmp
inc
out
and
push
xchg
in
std
aad
push
push
sbb
cli
jmp
loopne
outsl
popf
icebp
stos
push
or
cmp
ficompl
or
insl
dec
sub
test
dec
shlb
jno
or
out
loope
lcall
fbstp
cmp
sbb
cwtl
pushf
mov
clc
shlb
aad
pop
in
fsts
out
popf
push
dec
ljmp
shrb
xor
push
test
mov
jle
cmc
test
outsl
insb
cmpsb
fcoml
xor
mov
inc
imul
jle
lahf
lret
or
push
mov
jns
daa
lret
jecxz
stos
shr
pop
call
jle
aas
out
pop
xchg
xor
or
jecxz
add
ja
mov
testl
mov
bound
insb
fimuls
jmp
add
push
mov
inc
dec
xchg
cwtl
repz
int
into
ja
fsubrl
cmp
loope
and
ja
inc
mov
cli
pop
push
dec
pop
andb
dec
es
cmp
xchg
out
shlb
push
push
adc
sbb
js
jmp
aaa
add
bound
sbb
pusha
push
xor
sub
adc
jo
xchg
hlt
rcl
sub
inc
mov
loopne
mov
mov
notl
repz
xlat
and
movb
mov
cmp
mov
mov
mov
cmp
jmp
movsb
ljmp
jle
and
cmpsl
sub
add
mov
out
ds
push
out
scas
cmp
pop
fisttps
and
in
jecxz
pop
mov
rorl
jmp
lods
sbb
add
pop
pushf
bound
into
pop
hlt
mov
xchg
sub
add
cltd
push
dec
push
push
jb
mov
out
test
push
mov
dec
sbb
insb
adc
dec
sub
daa
pop
aad
lahf
aaa
pop
or
xor
sti
fiaddl
sbb
mov
daa
adc
es
ljmp
mov
iret
ss
push
es
jo
push
aas
pop
push
or
jo
xor
mov
cmc
push
aaa
sbb
inc
jp
sahf
subl
push
notb
and
dec
ffreep
sub
cmpsl
push
dec
sbb
scas
test
add
cmp
in
outsb
xor
jb
push
icebp
cmp
cmp
or
xchg
inc
lcall
mov
int
arpl
and
mov
inc
inc
scas
repnz
cmp
shlb
dec
xorl
jmp
pop
mov
adc
adc
cmp
sub
movsb
jp
shrl
pop
mov
pop
push
daa
jmp
stos
les
pushl
jne
mov
push
sbb
cmpsl
adc
and
mov
shr
scas
jmp
insb
adc
and
mov
mov
bound
push
or
aas
jnp
dec
dec
bnd
mov
sbb
xchg
imul
adc
push
loopne
mov
mov
int3
pop
or
fistpl
int3
loop
and
mov
sarl
sub
cmp
mov
icebp
iret
pop
sbb
nop
adc
pop
repnz
push
rol
mov
mov
call
mov
cmpb
mov
addr16
ret
mov
sub
test
jmp
dec
js
lods
pop
js
sbb
mov
ret
sahf
pushf
mov
mov
enter
jmp
and
rorb
cs
les
ret
dec
or
xchg
aaa
xchg
sahf
mov
aam
mov
inc
orb
fistpll
ret
nop
cli
ret
jp
xor
jno
jecxz
mov
lret
in
xor
idiv
or
push
xor
and
cmp
add
fs
sbb
gs
xor
loope
inc
int
xchg
xor
pop
xor
xlat
mov
lea
scas
inc
lret
inc
dec
fsubrl
adc
jge
cs
lods
inc
sbb
add
push
pushf
sub
xor
std
popa
pop
mov
add
push
mov
lret
dec
xor
test
cs
dec
mov
cmp
repnz
test
cmc
icebp
sbb
insb
arpl
int3
jecxz
cmc
rep
stc
and
push
out
cmp
in
ds
add
fimuls
js
mov
push
repz
dec
cmp
add
push
cmpb
inc
sti
daa
and
shrl
cmc
or
addr16
lds
push
sarb
xchg
mov
in
divb
lds
mov
xchg
call
in
xchg
sbb
xor
adc
pop
je
jnp
loop
cltd
ss
cwtl
loop
loopne
sub
mov
mov
ljmp
out
lea
rolb
js
jb
or
mov
notl
test
dec
cmpsl
or
dec
out
xor
lods
lcall
push
test
inc
mov
jg
sub
ja
lods
not
fs
stc
lret
dec
push
stc
enter
ja
inc
mov
pusha
stos
popf
pop
xor
shl
mov
sti
cmp
orb
ds
lcall
mov
movsl
sbb
ss
and
jae
pop
adc
pop
out
ljmp
sti
shl
mov
inc
inc
je
popf
cltd
mov
arpl
mov
ds
or
outsl
ljmp
leave
subl
adc
sbb
scas
in
and
jmp
jg
arpl
aaa
and
icebp
cld
adc
cmp
jg
mov
or
ret
jle
jne
mov
xlat
aad
mov
push
xor
imull
addb
int3
out
movb
xchg
mov
push
push
nop
lock
cli
ficoms
inc
cmp
sub
xchg
test
mov
insb
cmp
shl
xchg
inc
cmp
mov
loopne
clc
mov
pop
nop
repz
add
iret
scas
mov
out
cmp
mov
fiaddl
vmwrite
les
repz
stc
rorl
pop
pusha
inc
xor
sbb
daa
and
adc
mov
lods
push
inc
or
cltd
int
gs
cmp
dec
xor
inc
xchg
and
ds
mov
dec
inc
popa
add
mov
pop
ja
rcrb
adc
or
adc
cmp
out
call
fldl
xor
jge
pushf
mov
es
mulb
iret
mov
xor
sub
cmp
sahf
ficoml
jo
xor
add
xchg
pop
data16
movsl
or
sbbl
or
aaa
adc
pcmpeqb
scas
sahf
leave
jge
xchg
loopne
out
xchg
mov
inc
cmpsl
dec
movsb
repnz
mov
jl
ja
push
or
hlt
mov
sub
in
sbb
mov
push
test
leave
dec
jle
push
cld
dec
adc
popa
add
js
pop
sti
or
xchg
and
cmp
jge
add
cmpsb
inc
es
stos
dec
cmp
inc
mov
aad
push
inc
call
sbb
icebp
lcall
cmp
push
outsl
repz
out
pop
sub
push
mov
repz
nop
and
mov
out
or
fdiv
movsl
adc
mov
sub
or
ja
sahf
lahf
cltd
cltd
cmp
mov
out
mov
sub
aam
cmpsb
inc
in
or
inc
shrl
enter
xor
stos
fdiv
ss
or
dec
lahf
out
and
cmpsl
pop
jo
xor
cs
or
jae
insl
inc
or
orb
sub
xor
cli
mov
adc
mov
adc
dec
loop
mov
push
push
lcall
ffree
xchg
outsb
xlat
fs
iret
iret
pop
pusha
push
cmp
sub
push
sub
ljmp
jne
fisubl
mov
addl
push
pop
or
roll
fcmovbe
dec
rorl
push
lock
pop
push
cmp
imul
filds
call
daa
push
iret
stc
adc
add
bound
std
lods
jb
lret
test
push
shrl
imul
ljmp
sbb
or
loop
scas
es
mov
jbe
cmp
mov
sub
push
jae
fstl
sbb
sbbl
and
xorl
push
aas
leave
das
or
lds
test
or
je
std
insl
popa
dec
push
bound
adc
data16
aad
mov
and
inc
mov
mov
je
lcall
mov
push
mov
pop
fstl
push
stc
pop
and
sub
push
popa
pop
jmp
sbb
cli
dec
les
mov
lock
mov
dec
jp
fnstsw
das
int
mov
aad
enter
insb
lahf
xchg
sub
adc
in
add
push
call
mov
clc
adc
mov
int
fadds
pop
rcl
icebp
dec
and
rol
int3
hlt
and
es
mov
sub
mov
test
lcall
lea
pushf
xchg
jo
or
addl
push
mov
outsb
sbb
dec
ss
std
mov
push
push
inc
adc
adc
or
xchg
adc
cltd
fstpl
xchg
mov
mov
lods
repnz
jl
push
inc
in
mov
xchg
negb
mov
adc
daa
adc
push
adc
cmp
pop
xchg
imul
mov
jo
aad
push
mov
mov
mov
xor
and
imul
push
iret
adc
pop
add
ljmp
mov
inc
iret
xchg
push
xor
je
and
popf
sbb
jge
out
les
aaa
sub
add
loopne
imul
push
xchg
stos
imul
cmc
push
mov
cmpsl
jge
repnz
ficoml
std
mov
loopne
lret
scas
fldpi
mov
ja
ds
repnz
clc
inc
jmp
in
ljmp
inc
lcall
xor
sub
inc
insl
push
cmp
fwait
push
lret
sahf
outsl
add
shlb
cwtl
mov
mov
sub
adc
push
decb
das
dec
fiadds
loopne
mov
jo
add
andb
cmpsb
jg
ljmp
sti
sti
rol
sarl
cmp
popa
push
inc
pop
scas
xchg
fwait
dec
xor
mov
push
dec
mov
and
filds
mov
rcrl
sbb
stos
or
push
or
clc
cmp
out
jnp
faddp
loop
out
sbb
xchg
jge
jno
push
xor
pop
add
out
inc
push
hlt
sub
add
lock
ss
pop
push
addr16
addb
add
mov
pop
je
add
add
dec
test
dec
push
sub
and
pushf
fisttps
sbb
push
jno
xor
mov
insb
and
xchg
push
inc
popf
call
cmp
aam
push
dec
enter
pop
or
xchg
cld
cltd
das
repz
les
inc
jo
lret
sahf
test
inc
push
mov
pop
push
sbb
cmp
lds
jb
mov
sub
push
xchg
cmpsl
add
dec
lret
xorl
mov
leave
movsl
sub
inc
test
and
dec
seta
test
inc
pop
push
js
cmp
jno
mov
enter
fdivs
stos
xchg
test
add
jg
cmp
mov
lods
add
jmp
enter
jns
imul
jg
or
xchg
divl
and
int3
xchg
sub
sub
inc
mov
add
lret
dec
and
or
fists
int3
aam
ret
xchg
xor
jl
sbb
sub
call
rorb
inc
xor
cld
jbe
outsb
stos
pop
adc
sbb
popf
je
jns
xor
adc
fisubrs
mov
cld
sub
andb
fsubr
outsl
lock
mov
test
inc
lods
mov
roll
stc
mov
jge
mov
adcl
insl
pop
sbb
fcoms
sub
test
mov
mov
add
mov
cmp
stos
stos
lods
dec
scas
or
sarl
xorl
repnz
fdiv
lds
mov
clc
fidivl
insl
and
idiv
test
bt
outsl
dec
loopne
sub
lret
adc
lods
jl
dec
mov
add
mov
xorl
fmull
cmp
xchg
dec
push
push
mov
std
gs
and
lcall
pop
push
fists
repz
iret
iret
mov
mov
push
jb
xchg
push
inc
js
pop
pop
iret
popa
pushf
bnd
jb
xchg
push
push
rcrl
sbb
push
aas
and
and
scas
and
fadds
xchg
aas
ret
pop
ret
cld
call
out
arpl
pop
inc
push
push
mov
add
jae
adcl
hlt
in
fidivs
and
sbb
out
or
inc
divl
push
sysret
mov
push
mov
sub
adc
in
jne
xchg
mov
xchg
xor
je
stos
les
sbb
scas
ret
std
inc
xchg
xor
cmc
mov
push
mov
mov
nop
cmp
scas
or
adc
xchg
push
loopne
jmp
into
sub
test
aas
jl
dec
adc
pop
call
rorl
testb
dec
sbb
push
mov
adc
rclb
test
and
fucom
lcall
fs
aad
sbb
data16
incl
mull
incb
pop
adc
xchg
pop
clc
pop
icebp
dec
scas
dec
inc
dec
lcall
addb
lods
cmpsl
int
xor
cmova
adcl
pop
xor
fisubs
mov
xchg
push
or
mov
cmc
lret
mov
dec
popa
cs
idivl
and
push
mov
leave
inc
xchg
test
push
pop
push
dec
sub
loopne
outsl
and
adc
fstpl
jecxz
mov
and
dec
xchg
fiadds
iret
ret
dec
fidivs
test
add
aas
cmp
fsts
mov
iret
mov
mov
add
insb
test
shlb
inc
into
inc
cmp
push
adc
mov
stc
call
je
imul
ljmp
mov
repz
cltd
stos
xchg
aam
pop
xor
push
les
fwait
mov
mov
xchg
pop
pop
jecxz
enter
ljmp
in
push
cmc
and
sarl
xor
fmuls
or
les
insb
ds
mov
test
and
inc
jmp
dec
subl
push
or
fs
rorb
ss
add
imul
pusha
mov
adc
das
fdiv
mov
ret
xchg
int
rorl
lock
lea
mov
inc
pop
repnz
aas
push
xchg
mov
in
test
lcall
xor
and
jae
mov
adc
fidivrl
arpl
jle
in
or
shl
addr16
nop
cmpsb
pop
inc
jl
jmp
and
xchg
inc
adc
mov
xchg
in
fucomip
sub
cmpsb
and
adc
or
push
sbb
push
or
adc
pusha
xchg
xlat
jmp
nop
das
lret
sbb
int
xchg
pop
leave
jnp
imul
incl
test
xchg
jle
lret
mov
pop
loopne
mov
xorb
mov
mov
cmp
daa
rcrl
sbb
mov
out
add
mov
outsb
inc
idivl
cltd
ljmp
aaa
ret
and
lret
loope
jmp
add
js
iret
inc
cltd
jl
sbb
inc
mov
divl
xor
aas
stc
dec
push
jbe
cmc
push
shrl
mov
sbb
lcall
and
xchg
int
xchg
push
sub
adc
je
mov
push
push
mov
push
clts
jne
or
subl
mov
pop
pop
sbb
lds
inc
addb
ljmp
xchg
dec
xor
lcall
dec
jae
adc
lret
jo
push
movsb
fiadds
out
mov
lds
sti
add
lods
sbb
sub
ss
sub
mov
xchg
add
push
aam
pop
cld
xchg
sbb
lock
pop
xchg
out
xchg
gs
or
out
sbb
inc
dec
push
mov
js
aas
inc
and
or
ret
mov
in
mov
xlat
xchg
leave
inc
inc
imul
pop
sbb
and
inc
pop
cmp
ja
int
mov
or
mov
dec
outsl
arpl
add
adc
addr16
cmpsb
push
jmp
mov
cmpsl
mov
daa
inc
punpckldq
jecxz
dec
scas
xor
cmp
arpl
mov
mov
enter
and
xor
pop
mov
aad
mov
sbb
rcrb
ret
std
jnp
andl
mov
xchg
sarl
mov
hlt
or
mov
mov
add
enter
xchg
movsl
ljmp
repz
in
test
in
jl
or
push
cmpsl
inc
in
xorb
aad
dec
fldcw
imul
and
aas
mov
cltd
xchg
mov
mov
dec
lock
or
cltd
rclb
sub
fcoml
mov
cld
popa
loop
dec
sbb
xchg
sub
test
add
test
ja
cmc
shl
mov
add
scas
repz
std
push
repz
js
pop
mov
sti
cli
incl
stos
sbb
nop
loope
adc
bound
movb
add
movsb
add
scas
cmp
cmp
push
sbb
pushf
stos
addr16
mov
inc
stc
pop
push
sbb
insb
pop
jns
mov
adc
fisttps
jle
call
repnz
icebp
js
push
mov
test
add
push
pop
push
mov
imul
movsb
lret
sahf
xchg
cmp
sbb
cmp
pop
stos
adc
arpl
call
popf
push
lods
lds
cli
adc
subb
inc
nopl
add
dec
addr16
add
jp
add
or
outsl
sbb
dec
shll
mov
xor
fmuls
dec
ret
sub
cwtl
push
cltd
pop
incl
mov
push
cmp
mov
cli
in
pushf
dec
and
lret
mov
dec
sub
jbe
ret
insb
imul
push
add
push
loopne
lret
inc
movsb
call
cmp
cmp
sub
add
cmp
into
std
xchg
out
int
or
push
lcall
out
enter
cltd
xchg
mov
test
jno
inc
inc
mov
add
mov
aad
fs
inc
fildll
jle
je
lcall
pop
sbb
jge
std
int
rcl
repnz
mov
insb
jmp
mov
sar
jecxz
xchg
stos
mov
add
pop
pop
imul
xlat
loop
movsl
push
xor
dec
fs
incl
lret
nop
or
lret
rclb
jmp
ret
mov
cmp
sti
xor
sub
rclb
shll
popa
mov
lcall
mov
es
dec
cmp
sbb
aas
adc
test
pop
mov
aaa
rcl
das
fwait
nop
and
sbb
leave
icebp
jmp
in
aam
jmp
imul
adcb
xchg
mov
mov
xor
cli
int3
repz
sbbb
scas
or
pop
mov
cltd
push
inc
xor
decb
push
or
jge
mov
test
cmpsl
or
xor
rcrb
and
jb
lods
pusha
xchg
xor
repz
pop
lahf
in
cmp
xacquire
mov
test
outsl
fimull
negl
ret
add
xchg
lods
rcll
dec
dec
pop
js
je
xor
xor
cmp
jns
xor
or
inc
adc
lock
or
add
or
add
pop
shll
aas
lret
push
subb
mov
push
push
mov
test
aam
sub
xchg
cmc
mov
test
mov
out
or
add
mov
movsb
fnstsw
xorl
jne
mov
adc
dec
xchg
cmp
dec
inc
lods
inc
inc
mov
dec
std
lds
lds
cmpsb
call
lcall
xor
cmp
xchg
cmc
mov
es
mov
stos
aad
mov
fldenv
mov
loope
jge
fadds
ret
pop
cld
push
and
sti
mov
and
cmp
dec
testb
mov
push
ret
outsb
jns
nop
cmp
xor
jnp
enter
bound
mov
xchg
icebp
dec
scas
cmp
push
push
mov
test
sub
ja
inc
mov
stos
jb
nop
sbb
pop
sahf
stc
scas
pop
mov
mov
dec
lock
icebp
add
sbb
mov
mov
sub
fisttpl
mov
adc
jnp
sarl
repnz
adc
xor
mov
mov
pop
mov
popa
xchg
push
inc
jbe
cltd
lds
jp
jb
out
in
insb
aam
xchg
sub
pop
mov
add
fisttpll
jo
xor
mov
ljmp
ret
shrb
cmp
rcrb
test
push
lahf
and
shrl
call
les
mov
fs
inc
test
mov
pushf
jle
out
ds
pop
push
int
jbe
inc
push
mov
sbb
pop
jecxz
add
in
call
outsb
call
dec
repz
inc
popa
push
and
dec
in
fsub
mov
xchg
dec
rcrb
mov
outsb
repnz
adc
mov
dec
shrl
out
mov
sahf
adc
push
imul
add
mov
sub
aam
test
mov
movsl
scas
or
or
pop
and
xor
jp
shlb
int
pop
and
es
in
mov
pop
jl
adc
aam
push
fdivrl
cmc
call
pop
adc
in
and
sbb
jl
scas
pop
int
int3
lods
cmp
and
jns
dec
stc
ja
sti
or
jmp
ljmp
orl
pop
jb
push
call
cmp
ret
jge
bound
sub
or
cli
stos
insl
je
xchg
mov
or
test
mov
ret
push
test
ds
iret
arpl
addr16
adc
or
stos
in
mov
aam
add
jecxz
adc
mov
scas
testb
lock
sbb
and
js
and
xor
push
mov
aad
movsl
in
xchg
dec
ret
lret
leave
enter
mov
pop
xor
popa
mov
dec
int
popa
fnstsw
xchg
xor
jno
mov
sub
jno
or
clc
aam
dec
inc
popa
sub
adc
push
movsb
jmp
call
cmpb
fisubrs
cmp
rcrl
out
xchg
and
push
jne
aad
jge
adc
psraw
enter
cmp
scas
jmp
sub
push
pop
add
fmuls
xor
jle
test
into
pop
in
jb
stos
sub
pop
sub
lret
mov
xor
dec
repnz
mov
je
test
repnz
sub
lds
sub
imul
jg
sbb
push
dec
jecxz
mov
cmp
and
jnp
aaa
test
popa
cwtl
add
adc
shl
mov
movsl
nop
adc
pop
imul
inc
xchg
repnz
loop
ja
ret
and
mov
sar
xlat
or
shl
push
or
scas
and
sahf
mov
mov
mov
popf
mov
rcrl
rcll
or
mov
aad
mov
cld
sub
lods
sbb
mov
repz
mov
mov
or
stos
jle
lock
adc
pop
aam
scas
sbb
mov
cmp
xlat
enter
jg
jnp
rcrb
mov
pop
xor
mov
mov
int
shll
test
f2xm1
popf
cmp
jbe
cli
fwait
adc
stc
push
xchg
and
dec
cmp
cmp
push
lea
pop
jle
stos
push
sbb
mov
xchg
mov
push
decb
cmp
mov
movsb
and
mov
jbe
sbb
mov
pop
scas
and
dec
jp
or
aaa
stc
sti
sbb
hlt
add
xor
out
mov
cmp
xchg
enter
adc
out
out
xorl
out
adc
xor
sti
cmp
call
xchg
pushf
popa
xchg
movsb
pop
jne
cmp
pop
pop
out
and
xchg
pop
mov
add
pop
jbe
in
adc
andb
idivl
fwait
in
test
xor
pusha
or
ss
push
jbe
leave
mov
sub
lret
or
xor
iret
xchg
dec
xchg
daa
cmp
ficoms
lock
sti
or
mov
int3
sbb
lret
mov
xchg
xchg
push
inc
adc
fisttpl
jae
sahf
nop
dec
ljmp
cli
daa
xchg
clc
mov
notb
xor
jl
pusha
outsb
inc
sbb
into
jbe
repnz
sbb
idivb
pop
jae
sbb
adc
adc
decw
jae
jg
fdiv
push
lret
fwait
insb
xchg
add
sub
mov
imul
sbbb
fbstp
hlt
jbe
hlt
and
pusha
and
dec
push
pop
mov
outsl
mov
sarl
pop
bound
xchg
rcl
cs
enter
push
dec
mov
in
inc
sahf
repz
mov
sbb
or
xchg
lret
jbe
adc
mov
mov
mov
adc
inc
xor
lea
jo
adcb
xchg
ret
jno
imul
inc
fildll
test
mov
push
cltd
testb
shll
rcr
adc
mov
or
jle
push
cmp
pop
repnz
rolb
fldcw
push
sbb
ret
dec
xchg
push
bound
xor
ss
xor
arpl
dec
ficoms
cmp
aas
dec
jmp
xchg
xlat
outsl
mov
stos
jg
pop
adc
xchg
pop
inc
adc
inc
mov
cmp
cmpl
xchg
jno
outsb
fidivs
jp
ja
jne
scas
bts
aad
push
dec
jbe
adc
jge
icebp
push
jle
fcoms
fldenv
divb
jb
push
mov
je
add
mov
jno
or
sbb
and
mov
add
jp
or
inc
cmp
cmpsl
or
out
test
sbb
pushf
rcll
dec
push
ret
xchg
and
mov
frstor
push
xchg
jns
aas
loopne
cltd
add
mov
adc
and
or
mov
fwait
cmp
pop
mov
jns
test
jl
shl
pusha
adc
imul
cmp
cmc
movsb
and
loope
inc
push
xchg
dec
data16
push
jmp
daa
inc
mov
dec
cltd
mov
jle
jp
fildll
mov
push
sbb
jne
gs
cmp
push
into
cltd
inc
popf
fwait
adc
mov
lock
lret
mov
xlat
xchg
adc
xchg
ja
inc
cltd
add
fdivl
pop
bound
pop
ficoml
and
dec
mov
insb
xchg
mov
jne
jl
fisubrl
mov
add
adc
cmp
int
cmovno
xchg
dec
ja
pop
mov
jo
dec
sub
je
call
outsb
fidivs
push
push
push
rol
mov
adc
in
add
leave
cmp
loopne
jo
jnp
into
lods
mov
addr16
mov
scas
lahf
std
mov
and
push
mov
test
push
mov
adc
out
call
sarl
mov
push
and
stc
xchg
pop
xor
push
scas
inc
lahf
mov
xor
pop
jne
mov
sbb
popf
cmp
lcall
sub
sub
push
pop
es
add
aas
mov
push
lea
adc
das
sub
adc
and
ret
sbb
dec
aam
outsb
dec
mov
cmp
loopne,pn
fistpl
rcrl
lds
repz
test
xchg
js
sbb
jnp
add
xchg
jmp
sti
add
cmp
lock
int
or
pop
enter
push
cld
sub
scas
push
xchg
outsb
dec
xor
or
shlb
add
sbb
cmc
mov
fisubrs
inc
lea
adc
rol
jle
mov
cmp
mov
xchg
jle
hlt
dec
add
enter
or
sbb
cmpsb
jle
aaa
sar
cmc
jl
das
xor
test
aad
stos
out
popf
sub
mov
mov
pop
insl
outsb
popa
sub
mov
call
leave
pop
hlt
jae
lods
push
jl
cmpsb
mov
mov
daa
mov
into
mov
lcall
add
pop
out
push
mov
sub
adc
rol
outsb
cmpsl
idiv
gs
mov
mov
or
sbb
pslld
xor
daa
dec
mov
roll
push
push
test
xor
stos
out
xor
popf
sarl
pop
insl
push
mov
lret
fists
ds
sar
inc
cmpsb
add
push
push
jbe
pop
cwtl
incl
cmp
mov
rep
idiv
cmp
cmpsb
arpl
in
and
pop
pcmpeqw
adc
dec
lret
xchg
jnp
pop
test
jge
jne
cmp
js
lock
jecxz
iret
ja
inc
test
daa
push
inc
and
rcr
inc
inc
pop
push
call
dec
les
roll
xchg
cmpsl
jns
mov
jmp
jecxz
mov
fdivrl
decl
scas
shl
pop
pop
xchg
inc
out
mov
movsb
sub
lret
loopne
mov
cwtl
fdivrl
and
in
lock
lret
insl
divb
xchg
inc
dec
xor
xorl
test
fdivrl
pop
cmp
cmp
cmp
fiaddl
xchg
lods
sbb
mov
repz
insb
or
lret
xor
sub
pop
pop
shl
aaa
adc
into
mov
sub
and
movl
mov
dec
dec
mov
imul
ja
fwait
lock
and
mov
out
inc
inc
jbe
xchg
popf
das
dec
sti
xor
js
outsl
pop
dec
inc
fidivs
sbb
ficompl
xchg
sbb
push
mov
jp
mov
inc
das
scas
xchg
repnz
mov
lea
and
je
sbb
or
into
sub
dec
call
sbb
aas
ltr
mov
mov
jbe
sysret
mov
into
and
sbb
ret
push
fwait
stc
push
and
mov
mov
sbb
adc
pop
pop
iret
sub
in
gs
mov
test
mov
mov
int3
imul
cmp
in
jge
lds
lret
rcll
push
jp
movsl
pop
leave
out
fbld
dec
pop
clc
mov
sub
sub
sbb
in
add
jno
cmp
cmpsl
adc
adc
add
mov
push
push
cwtl
adc
sub
sub
xlat
movsb
jo
sbb
cmp
cli
pusha
mov
lahf
cmpl
loopne
faddl
jmp
leave
inc
lds
imul
outsl
jecxz
mov
sar
hlt
fiaddl
push
mov
mov
jle
mov
repnz
add
jne
subl
lcall
imull
ja
leave
xor
ss
mov
ja
bts
pop
jp
push
out
cmp
adc
mov
clc
or
addb
out
add
jg
xorl
aaa
pop
and
mov
mov
mov
and
cmp
or
outsb
imul
mov
arpl
fnstcw
sarb
shll
sbb
mov
sbb
mov
imul
call
and
push
stos
xor
adc
xchg
dec
add
mov
mov
daa
fldz
push
adc
xchg
inc
sbb
jo
dec
cmpsl
into
mov
inc
imul
lahf
es
push
outsb
push
sub
adc
or
sub
push
sbb
sbb
jecxz
fsubrl
pop
adc
xor
rol
xor
mov
lcall
jle
mov
fisubrl
sbbb
lock
sbb
leave
outsl
add
push
scas
outsl
cld
jb
je
mov
cmp
loopne
adc
inc
arpl
in
jge
pop
loopne
sub
sbb
mov
adc
popa
push
addr16
mov
ljmp
lcall
cmpsb
incb
bound
jl
xchg
inc
lret
aas
cmp
outsb
mov
xor
fstl
fs
jp
and
jbe
sbb
xchg
or
mov
jb
xchg
and
loopne
mov
or
mov
mov
cmp
dec
sbb
or
cmc
adc
jo
pop
cmp
fsub
fnstcw
push
ret
out
mov
pop
xor
cmpsl
pop
imul
xchg
add
into
dec
addl
dec
test
push
fnsave
adc
test
jo
push
test
sub
sahf
aas
sbb
ret
mov
mov
cmc
sbb
mov
std
cmp
sub
stos
ja
in
test
push
pop
sbb
sub
sbb
cmpsw
lea
shlb
push
aas
jecxz
mov
jl
lods
sub
inc
cmpsb
dec
lock
or
jle
cmp
stc
adc
lock
jge
inc
stos
je
jbe
aam
sub
or
insl
aas
sbb
mov
loop
and
xchg
xor
stos
xchg
stos
les
stc
popa
bound
mov
push
cmpsl
enter
inc
jbe
jmp
cmp
fcmove
jge
dec
loope
pop
test
mov
sub
fcoml
add
ljmp
xchg
rorl
das
push
inc
shll
mov
add
push
xor
lds
into
inc
imul
icebp
or
xor
cli
pusha
or
xor
sahf
aam
fwait
icebp
ljmp
dec
adc
movsb
jp
insb
add
jmp
testl
fcomps
scas
fadd
jo
les
cmp
push
xchg
mov
xor
add
and
adc
loopne
shrl
aam
mov
pop
pop
pop
inc
ja
push
ficompl
pop
jl
shll
clc
lret
sub
stos
cs
inc
cmp
and
out
outsb
pop
xor
add
or
dec
scas
addl
xor
js
pop
or
mov
adc
and
mov
imul
faddl
inc
push
pop
push
xor
enter
pop
or
js
xchg
or
push
sub
push
xor
bound
mov
ret
cmpsl
pop
jge
xorl
mov
rclb
adc
fs
fcomps
mov
add
aas
sub
jecxz
insl
mov
call
mov
out
mov
push
push
cld
aad
cmpsl
inc
notb
cli
jae
jge
fcoml
nop
scas
mov
mov
cmpl
repnz
push
int3
mov
dec
add
mov
fists
sub
inc
pop
push
jp
ja
es
idivl
nop
jl
jg
ret
stos
loop
push
inc
mov
and
fildll
mov
into
mov
push
add
fndisi(8087
mov
scas
in
push
sub
dec
cmp
ljmp
or
arpl
cwtl
data16
pushl
inc
jl
js
mov
or
sub
data16
jne
stc
inc
xor
bound
inc
cld
sub
xor
jp
ljmp
add
sub
cmp
xchg
add
mov
dec
test
test
repz
shl
imul
stc
gs
mov
aas
aas
push
mov
not
stc
jge
sbb
cmp
jns
mov
mov
shl
pop
xor
or
daa
pusha
or
lods
dec
push
sahf
inc
adc
adc
push
pop
cs
into
pop
jbe
aaa
push
jne
fstpl
sub
arpl
dec
dec
or
cmp
test
lcall
fdivs
sbb
bnd
mov
dec
cs
dec
arpl
aam
cmpsb
and
nop
in
or
sbb
adc
pop
cmc
xchg
xchg
push
insb
pushf
in
add
hlt
or
insb
mov
sahf
pop
stos
cli
aaa
jecxz
jp
gs
sarb
fnstsw
fdivs
sub
in
jns
aas
fsubl
cmp
sub
push
int
out
repnz
cmp
mov
push
imul
sbb
push
lahf
inc
lcall
in
adc
mov
orb
pop
or
xchg
pusha
std
stc
nop
push
mov
in
clc
pop
fnstcw
pop
testb
sbb
mov
adc
or
jbe
fmuls
or
insl
sbb
out
inc
pop
mov
pop
sti
sarl
test
mov
pop
pop
sub
call
inc
mov
pop
cmpb
leave
inc
fists
leave
push
dec
in
cmpb
sbbl
ljmp
enter
addr16
pop
xchg
xlat
scas
in
xor
jp
sbb
jb
lahf
arpl
dec
push
pop
fisubs
adc
icebp
cmp
xor
adc
test
mov
outsb
out
ljmp
in
push
xchg
idiv
std
xor
jno
add
cmp
enter
insl
out
dec
cmp
adc
sti
sub
dec
nop
insl
sbb
mov
cmp
subb
imul
add
jg
fisubl
fwait
inc
jp
pop
sub
mov
push
mov
insb
add
cli
pusha
ret
test
pop
or
add
dec
ret
fadds
sub
nop
adc
lods
adc
xor
cmp
dec
stos
ret
iret
fsts
add
fsts
rol
xorl
and
insb
scas
stos
or
arpl
sub
lods
int3
sbb
dec
cmpl
pop
sub
cmpsl
xchg
xor
cmpsl
outsl
pop
mov
dec
push
int3
xchg
push
sbb
fiaddl
fucom
jae
inc
inc
push
jae
adc
inc
pop
arpl
cmc
movsb
dec
or
in
mov
loopne
rorl
pusha
adc
scas
add
rorb
cmp
call
adc
lock
andb
xor
loop
jo
push
sti
repnz
push
xchg
js
xchg
insb
sub
cwtl
mov
roll
dec
or
gs
fwait
push
dec
adc
loopne
cmp
scas
jmp
insb
inc
in
das
gs
xor
mov
js
sub
lods
jmp
or
mov
pop
add
cmp
sub
xchg
movsb
fldcw
insl
cmp
into
mov
data16
inc
inc
sbb
sbb
nop
aas
adc
add
dec
cli
cmpsb
cld
inc
ret
orl
xchg
call
lea
ja
jmp
jmp
into
je
pop
or
mov
add
sub
adc
or
sbb
bound
iret
dec
lds
popa
lock
adc
and
jno
mov
daa
mov
jle
sbb
or
pop
out
jge
pop
daa
mov
out
shrl
push
mov
xor
jae
aas
jne
push
or
xor
jg
insl
mov
ret
mov
mov
xchg
pusha
sbb
and
mov
roll
adc
jbe
imul
loopne
lea
lret
push
sbb
sti
pop
pushf
pop
dec
testb
mov
notl
pop
cmc
fcompl
lret
insl
xor
popf
fcompl
rorb
mov
mov
adc
fs
xchg
push
addr16
arpl
mov
and
push
jge
es
xor
xchg
jnp
mov
mov
mov
addr16
hlt
pop
mov
mov
adc
out
add
jbe
sbb
pop
pop
lret
scas
jne
mov
jbe
cmp
xchg
fs
jle
lret
out
aaa
add
sbb
pop
cmp
shl
sbb
xlat
xchg
and
ja
outsb
call
push
xchg
aad
neg
subl
jo
dec
dec
xor
mov
dec
pusha
sbbl
xor
imul
fs
push
sarl
cld
xchg
fcomps
rcrl
jbe
xor
jp
pop
cli
out
in
das
ljmp
addl
push
fsubs
or
out
jp
testb
cs
add
or
pushf
pop
dec
dec
dec
pop
pop
clc
jnp
lretw
insb
inc
and
or
xor
lods
in
push
inc
inc
add
ret
imulb
mov
lea
ret
dec
and
cltd
pop
mov
cmpsl
pop
lret
call
bnd
mov
inc
movsl
add
icebp
out
cmpsb
outsb
cld
test
mov
inc
and
lea
scas
pusha
adc
adc
jb
inc
xchg
mov
or
fidivrs
and
or
push
sti
sbb
test
sbb
lock
ret
mov
repz
inc
pop
jecxz
fcompl
fstps
mov
dec
out
add
data16
aad
filds
mov
adc
xchg
ss
fstp
mov
sti
mov
out
and
mov
mov
test
jle
jne
filds
xchg
xlat
rcr
lds
pushf
add
nop
sub
or
add
sbb
mov
pop
cmp
xor
stos
sub
xor
adc
push
jbe
cmpsb
andl
jg
jg
jno
mov
daa
scas
adc
mov
cmp
jnp
jg
or
jl
and
sub
cmp
int3
ret
xor
flds
push
out
dec
hlt
addl
dec
sbbl
inc
bound
jb
rcrl
xchg
mov
ds
pusha
insl
jns
jecxz
scas
mov
hlt
hlt
push
xlat
in
push
cmp
sub
test
adc
aas
xchg
dec
adc
fisttpl
jmp
dec
mov
mov
cmpsb
push
fmuls
add
cmc
sbbb
les
fldenv
into
or
movsl
add
push
pop
jo
in
vminps
push
or
scas
nop
mov
lahf
mov
inc
mov
push
iret
add
push
cmp
push
adc
call
loope
or
jnp
test
mov
inc
outsl
xor
aam
out
stc
test
jo
lods
out
inc
fistpl
push
pushf
test
in
xor
dec
pop
pop
mov
inc
fdivr
call
dec
stc
testb
fcoms
adcl
sbb
cmpsl
in
mov
mov
aad
cmp
sub
push
push
jecxz
in
not
jecxz
dec
in
inc
scas
push
sti
mov
inc
xor
test
ret
jns
or
push
push
fwait
ds
jmp
mov
outsl
sbb
dec
mov
mov
add
xor
sbb
aaa
sub
in
ja
jg
add
lea
adc
mov
sbb
cmp
or
push
aaa
or
sub
sbb
aaa
jle
loop
das
je
and
xor
pop
aam
daa
fs
fdivrl
aad
pop
mov
sbb
xlat
inc
cld
into
pop
cld
xchg
mov
iret
push
xor
mov
xor
and
bound
cmpsb
and
lea
fs
jb
loop
cmp
mov
movsl
adcb
rol
mov
mov
lahf
cmp
push
pop
data16
inc
inc
fs
add
mov
popa
xchg
lods
xchg
icebp
insl
sub
pop
sub
lods
mov
add
pop
lcall
cmpl
or
mov
cmpl
adc
leave
xchg
pop
mov
cltd
lret
fstps
imul
dec
les
adc
jmp
push
lea
aam
shrl
test
mov
add
std
decb
insl
and
leave
stc
icebp
iret
add
xchg
xchg
pop
mov
or
lock
mov
push
cmc
push
fwait
dec
push
pop
inc
jno
nop
mov
shrl
jmp
add
fs
je
mov
pop
movl
xlat
push
jmp
jo
divb
scas
shr
jo
movsb
sbb
jae
sbb
lods
out
jecxz
pop
fstl
gs
add
xchg
jmp
sbb
stos
popf
adc
das
mov
jge
pop
icebp
fwait
sahf
out
jbe
fcmovu
push
mov
sbb
pop
dec
in
xor
pop
sub
jg
dec
mov
sarl
inc
adc
popa
push
ljmp
in
mov
pop
push
mov
in
psubusb
mov
xchg
pushf
ds
xchg
dec
pushf
sbb
dec
sahf
cmp
inc
fstl
cmp
aam
fucomip
dec
imul
mov
xchg
incl
mov
out
aam
jl
mov
notb
fucomp
subb
pop
adc
mov
adc
xor
lds
xor
lods
pop
adc
sbb
lret
cmpsb
sub
cltd
jl
or
lock
xor
jno
sbb
jl
pop
in
xor
sbb
add
rcl
adc
lcall
imull
nop
ljmp
adc
xor
or
imul
and
xor
cmp
scas
push
fmuls
and
in
jle
insl
pop
jl
pop
movsb
repz
adc
arpl
mov
sub
jne
mov
lods
lds
xchg
sbb
xor
adc
aas
pop
test
mov
repz
fdivr
in
sbb
inc
iret
imul
lret
cmp
xor
lcall
cmpsl
lret
or
jne
sub
rorl
mov
sbb
lods
andl
push
fdivs
les
fwait
inc
add
sti
inc
enter
push
jb
iret
pop
cld
pop
lcall
test
add
ficoms
dec
movaps
out
mov
sbb
xchg
stos
test
push
movsl
sbb
and
sbb
push
shll
dec
push
out
xchg
adc
outsl
lods
or
jb
cmp
sbb
xchg
mov
leave
es
and
loopne
cmp
idiv
adc
icebp
popa
cmpb
std
jp
mov
and
and
aad
xor
sahf
jne
lds
in
jl
mov
pop
add
push
sbb
jle
jne
pop
sbb
sbb
cmpsl
dec
lods
cmp
sub
jne
and
xchg
cmp
dec
dec
je
lahf
int
sbb
mov
pop
insl
dec
jp
adcb
pop
pop
pop
cmp
or
push
ss
sti
rorl
mov
sti
popa
push
hlt
or
push
mov
rcl
pop
cwtl
pop
inc
push
mov
mov
and
fiaddl
scas
stc
adc
jno
fwait
repnz
sbb
mov
fcoms
mov
xchg
dec
test
mov
dec
cwtl
mov
dec
push
scas
mov
inc
arpl
test
dec
jmp
or
mov
cmp
out
and
push
ficoms
test
insb
mov
lahf
subl
aaa
mov
mov
and
adc
mov
jmp
sti
xchg
mov
xor
ret
fstp
into
adc
mov
lods
xor
sti
mov
mov
jne
xchg
repz
stc
inc
xor
xchg
popa
sub
add
dec
jg
and
outsb
inc
std
clc
enter
push
popa
mov
sub
dec
in
xchg
xor
fsqrt
mov
adc
jae
daa
xor
jb
and
lcall
jg
scas
sahf
ret
mov
jns
nop
aad
test
mov
dec
push
mul
fwait
sub
xchg
and
sub
cmp
les
sbb
outsl
xor
outsl
int
sbb
jmp
imul
push
xchg
add
sbb
dec
fstp
ret
mov
scas
jl
cwtl
sub
ret
fdiv
mov
mov
push
gs
pop
js
or
mov
xchg
cmp
adc
sbb
sbb
ja
arpl
lods
shlb
or
call
stos
push
and
rcl
lret
or
push
sbb
notrack
add
mov
dec
mov
cmp
jb
sub
in
xchg
jecxz
mov
mov
outsb
dec
sub
sub
mov
sub
xor
or
aad
int
add
inc
sub
loop
nop
imul
sub
sbb
and
movsl
into
sti
jae
test
xlat
xor
arpl
movl
cmc
rcrl
leave
adc
bound
jbe
inc
out
fiaddl
or
call
pop
clc
jno
je
lock
pop
add
mov
fdivs
out
test
mov
cmc
in
cli
testl
es
je
mov
mov
ja
mov
lods
je
xchg
stos
sahf
xchg
fwait
es
pop
xchg
es
sarl
hlt
mov
mov
pop
mov
repz
jp
add
ss
push
push
stos
notb
jmp
push
repnz
aad
jns
cmc
lock
test
in
aad
iret
and
mov
push
test
rcll
xchg
ljmp
lods
push
fwait
mov
aad
imul
movaps
stc
jnp
jno
dec
adc
stos
inc
dec
mov
jne
xor
or
pop
mov
fistpll
or
xchg
mov
pop
add
sbb
imul
mov
pusha
mov
je
add
sub
ret
mov
add
xlat
test
pushf
and
add
cmpl
ret
push
fsubrl
subb
popf
mov
dec
sarl
or
and
hlt
jns
sub
leave
pop
aas
call
and
rorl
add
pop
fidivl
test
out
pop
xchg
sbb
imul
mov
mov
xor
pushf
cli
clc
js
mov
add
mov
out
out
mov
adc
push
jne
jp
mov
stos
pop
mov
idivb
dec
xchg
fs
sub
inc
xor
lahf
insl
fldt
repz
fmuls
es
sahf
cmp
clc
add
stc
fistpll
add
xchg
jo
add
add
sbb
xchg
jnp
add
sbb
xor
or
ja
in
cmp
fbld
popa
mov
je
test
test
pop
dec
adc
icebp
fwait
pop
sub
xchg
sub
iret
stos
push
xchg
cmp
ds
lcall
and
pusha
js,pn
mov
push
cmpsl
inc
push
bound
add
xor
lcall
mov
dec
pop
jecxz
aas
push
cmpsl
and
pop
pusha
cwtl
dec
mov
lret
mov
roll
add
jmp
das
or
jp
sbb
jmp
pop
dec
sbb
into
repz
xor
sub
mov
fwait
xchg
xchg
cmpsb
cmp
arpl
lock
imul
cli
or
push
stc
push
mov
xor
mov
cmp
pop
jb
imul
push
cwtl
jns
add
arpl
inc
xchg
repz
popa
arpl
dec
outsl
mov
sbb
sbb
addb
jne
adc
test
inc
popa
push
push
fsts
xchg
js
sub
arpl
jecxz
mov
insl
cwtl
cs
cmpsb
jbe
movsl
xor
xchg
test
mov
xchg
mov
nop
fisttps
and
shlb
rol
add
cld
shll
push
mov
mov
push
pop
xchg
subl
fcoml
push
fisttpll
bound
testb
inc
sarb
ficomps
mov
xchg
jge
data16
daa
aam
push
lods
xor
aad
in
jg
fwait
in
enter
inc
jns
mov
cmp
pop
fisubl
push
mov
pop
nop
or
sub
mov
adc
arpl
xchg
test
lea
or
cmpsb
stc
aam
lods
pushf
test
mov
sahf
jl
mov
rcrl
leave
dec
dec
stos
std
jge
xchg
xchg
test
stos
inc
inc
mov
jns
dec
mov
push
push
int
jle
pop
ja
inc
mov
mov
jne
push
cld
shrl
pop
hlt
lret
cmpsb
mov
mov
leave
jo
sub
rcll
jle
lcall
shll
aaa
outsl
jns
pop
cmc
xchg
ret
sti
out
prefetch
ljmp
ljmp
fcmovu
cmpsb
int3
jmp
xchg
xchg
stos
and
das
addl
jg
push
xor
shrb
xor
pop
xchg
add
pop
or
adc
push
pop
jp
mov
arpl
cwtl
pop
ljmp
xor
arpl
pop
jecxz
xor
cmpsl
fcomps
dec
cmp
leave
push
push
mov
test
pusha
cltd
sbb
jb
stos
jmp
sarl
js
push
fmuls
jbe
jecxz
js
fsubs
mov
scas
mov
push
std
push
xor
cmp
rcrl
out
mov
lcall
mov
and
sbb
enter
push
mov
xorl
outsb
lret
sbb
fcomip
sbb
stos
scas
mov
lret
pop
add
pop
add
xor
push
mov
sbb
xor
or
push
fildl
pop
sbb
add
lock
lock
dec
cld
jae
mov
idiv
fcoml
test
jmp
mov
or
fidivl
shrb
push
mov
mov
pop
fstpl
inc
rorl
jl
test
push
xchg
leave
mov
mov
lcall
mov
or
sbb
mov
fxam
ret
frndint
imul
leave
scas
sbb
mov
les
cmp
or
mov
gs
sarb
sbb
mov
adc
sbb
cmpsb
push
xchg
pop
mov
dec
sbb
and
push
je
int3
test
fldcw
or
popw
dec
insl
addl
cwtl
sbb
addl
fldl
test
push
xor
mov
notb
shlb
in
xor
scas
and
and
sbb
imul
inc
push
lock
pop
jo
jo
cmc
push
cltd
cmovno
and
movsb
lret
leave
fsubrl
and
push
mulb
test
movsb
cltd
dec
mov
cmp
lds
stos
mov
cld
mov
pop
mov
adc
fcoml
adc
inc
inc
in
daa
outsb
loop
jbe
ja
inc
enter
xor
and
xor
or
daa
mov
xorb
and
movb
icebp
and
mov
psubd
push
adc
xor
mov
jecxz
in
scas
mov
rcrl
mov
push
fisubrl
add
mov
data16
jo
outsl
mov
data16
xchg
iret
or
adc
mov
pop
outsb
cld
aas
pop
mov
mov
xchg
lds
inc
fsubrs
je
xchg
xor
fistl
icebp
enter
lods
mov
fucom
mov
mov
cmp
xor
ljmp
cmp
inc
pusha
imul
rcrb
imul
jg
pop
dec
mov
scas
push
cmp
cld
mov
or
add
bound
js
add
sbb
adc
pop
adc
popa
lcall
jl,pn
jle
push
cs
pop
push
pop
mov
in
iret
lcall
out
aas
cmp
out
push
dec
dec
cmp
into
pop
cmp
ret
jbe
dec
int
cmp
sbb
sub
addl
mov
je
scas
mov
scas
je
in
xchg
pop
shr
sub
imul
sub
add
xchg
xchg
nop
adc
mov
dec
add
mov
cwtl
lret
outsl
cmp
xchg
jb
pop
mov
inc
notl
fs
push
je
push
jle
mov
cmp
dec
scas
inc
mov
jo
cmp
pop
test
aas
jp
adc
stc
into
sub
std
inc
in
dec
jl
psrlq
cmp
gs
sbb
cli
data16
ret
sti
sub
xor
lods
xchg
icebp
push
clc
mov
or
jne
fldenv
inc
sbb
inc
dec
mov
fwait
or
fidivrl
outsb
cmc
mov
roll
adc
sbb
or
xlat
and
and
or
push
jne
movsw
pop
dec
cmpb
cmpsb
jnp
mov
stos
jae
adc
movsl
popf
out
adc
movl
push
mov
pop
sub
bound
jne
pop
insb
and
dec
mov
lea
and
push
or
icebp
jbe
jne
mov
xor
xor
cmp
rorl
and
out
and
dec
arpl
repz
inc
xchg
xchg
xor
lock
sub
sub
jl
stos
div
pop
jmp
incl
mov
stos
xor
inc
insl
aaa
adc
and
push
xlat
loope
or
xchg
shll
and
mov
cltd
ja
and
mov
loope
adcb
sub
pusha
fimuls
sub
add
sbb
out
dec
add
data16
and
in
jl
and
arpl
out
ret
fstpt
ror
jno
ror
jnp
xor
addb
lahf
pop
jns
cmc
cmpsb
cmpsl
push
outsl
xchg
xchg
pop
add
add
add
mov
aad
push
stc
mov
sbbb
and
scas
cs
in
sbb
lock
xorl
scas
les
cmp
mov
imul
mov
adc
sub
add
or
std
push
dec
fstps
ljmp
push
shll
add
shlb
sub
aas
test
andl
dec
mov
mov
fbld
fs
pop
lods
icebp
inc
push
pop
sub
cmpsl
out
jne
aas
pop
out
das
inc
cmp
leave
outsb
adc
adc
repnz
xchg
adc
xor
decl
dec
sahf
testl
mov
rcll
in
sub
fnsave
xchg
shl
push
fmuls
mov
jbe
ret
jge
insl
out
dec
mov
rol
xor
mov
mov
add
cvtdq2ps
sbb
aas
mov
mov
mov
xor
das
lret
das
hlt
add
icebp
ret
loopne
cld
lods
ds
popf
xor
out
jno
test
js
ljmp
aaa
inc
or
xchg
mov
inc
fadd
lds
xchg
adc
fisubrs
add
cwtl
or
repnz
pusha
cmp
hlt
or
jg
shrb
dec
cli
shrl
mov
cmp
and
loop
sub
fwait
subb
or
je
cmp
mov
sub
aam
out
int
or
cmp
js
pop
fimuls
icebp
jno
or
outsb
adc
push
popf
xchg
sbb
lea
lret
pop
xor
adc
inc
xchg
mov
rorb
jg
test
mov
movsl
in
add
in
sahf
add
or
xor
and
fidivrl
push
call
lahf
rorl
loope
leave
sub
dec
pop
pop
fisttpll
push
mov
sbb
insb
mov
out
movsl
xchg
jnp
push
pusha
cltd
sub
mov
repnz
xlat
in
cld
nop
pop
dec
icebp
mov
push
ret
xor
pop
fcoml
lea
aas
lods
and
fmuls
jle
jl
adc
cmp
lds
mov
cli
insb
jge
mov
idiv
aaa
lods
fwait
mov
sub
int3
lcall
xlat
std
dec
mov
or
js
data16
xor
fstps
test
mov
insb
ret
add
and
arpl
jns
and
mov
sahf
add
movsl
jmp
imul
add
mov
or
lcall
jns
int3
inc
mov
jae
psrlq
push
or
test
test
nop
jmp
gs
data16
pop
lcall
sbb
mov
outsb
icebp
bound
sbb
sahf
scas
sbb
into
ret
mov
cltd
sbb
dec
jbe
or
fcmovnbe
call
push
and
mov
ljmp
jl
call
pop
fsubl
sbb
das
adc
jbe
push
lcall
add
or
flds
out
fcmovb
testb
out
sbb
or
push
or
enter
mov
mov
adc
cmp
gs
divb
aam
and
sbb
push
cmpsl
xchg
push
mov
dec
orb
data16
sbb
xchg
sbb
push
daa
adc
dec
dec
pop
sahf
mov
sahf
pop
push
imul
jg
add
ret
jmp
outsl
push
xor
mov
jb
cmc
push
loopne
out
sbb
ja
sub
pop
into
pop
cmp
shll
jge
add
out
jg
out
rorb
loop
add
imul
push
mov
or
dec
or
push
add
inc
test
pop
pop
jbe
mov
cmp
bnd
cmc
jnp
cltd
xchg
add
push
fucomip
pushf
movsb
stc
mov
or
lret
jmp
leave
clc
arpl
test
push
jmp
ds
xchg
arpl
jl
mov
pop
lods
pop
and
call
stos
push
cli
andl
xor
scas
repz
mov
imul
js
icebp
jecxz
mov
gs
pop
test
mov
gs
in
fs
or
dec
mov
cmpsl
sbb
pop
or
adc
outsl
push
cmp
fldl
jne
xchg
test
add
sub
out
cwtl
mov
test
xchg
inc
stos
pop
pop
mov
adc
xchg
out
push
push
addr16
pop
aam
rorb
and
in
lahf
cmp
xlat
push
imul
jbe
push
xor
scas
pop
sbb
add
in
or
sub
sbbl
sub
test
dec
popf
adc
cmp
test
loope
repnz
xchg
dec
push
pop
pop
jecxz
xchg
jbe
mov
repnz
jno
out
adc
rcll
push
outsl
and
xor
cmp
outsl
mov
mov
sbb
cs
pop
fisubl
fcmovnbe
add
xchg
ss
pop
cld
mov
mov
mov
xor
mov
fs
pop
mov
and
add
adc
push
movsl
ret
aam
push
mov
call
shrl
faddl
jno
pop
shrl
in
ljmp
aam
in
or
jo
insb
inc
sbb
cli
xchg
xchg
adc
cmp
add
mov
subb
test
rcrl
or
dec
add
pop
cmpl
inc
and
inc
mov
data16
mov
add
test
mov
sub
push
mov
sub
mov
sub
push
je
jl
xor
lret
pop
mov
out
sub
xor
scas
add
les
lcall
mov
cmp
mov
mov
notb
pop
aas
and
cmp
pop
out
out
mov
test
lret
sti
push
lds
inc
pop
enter
stos
mov
and
cwtl
mov
dec
inc
jl
aaa
in
test
add
cwtl
mov
insb
cmp
push
or
adc
lea
pop
test
ljmp
dec
sbb
dec
test
adc
ljmp
jmp
dec
stos
jno
lods
pop
cwtl
jo
int3
mov
mov
jo
push
cmp
es
test
jno
out
jp
push
enter
bound
ret
jae
xchg
mov
test
push
mov
loope
xchg
dec
and
lret
xchg
rclb
mov
mov
cmp
dec
mov
inc
rsqrtps
adc
sbb
fs
stc
add
mov
adc
xor
inc
cld
repz
or
stos
int
pusha
sub
imul
sar
mov
lods
dec
bound
ficomps
pop
adc
pop
dec
lea
jmp
mov
sbb
adc
xor
xor
pop
mov
and
xor
fldt
aas
add
pushfw
decl
das
nopl
rclb
xor
adc
imul
fcmovne
rorb
cld
ds
lahf
push
or
sbbl
cmp
test
mov
adc
jns
arpl
idivl
sti
add
adc
leave
mov
mov
push
insl
pop
leave
xor
and
add
fidivs
cmp
xchg
into
cmp
mov
dec
sub
pop
ret
pusha
int3
jnp
jbe
femms
fildl
pop
mov
xor
es
shlb
pop
int
sahf
xor
mov
mov
pop
xor
jl
aas
aam
cmc
push
shrl
mov
outsb
sbb
js
and
lds
add
pop
testb
lods
cmp
repz
mov
push
sbb
imul
insb
xor
xchg
add
pop
xchg
outsl
dec
out
adc
fldcw
push
push
push
sub
or
imul
jbe
loope
adc
dec
mov
fadds
and
ljmp
in
jne
xchg
inc
popa
clc
cmp
inc
and
inc
jmp
testb
mov
add
jmp
shrl
xchg
cld
andb
pop
and
mov
fiadds
mov
push
test
sar
jecxz
push
scas
xlat
or
shrl
dec
ret
mov
mov
dec
sti
mov
add
addr16
mov
ds
xchg
rcl
sub
push
add
sub
mov
push
push
xor
pop
sbb
push
jmp
pop
adc
ds
popa
jae
or
inc
inc
xchg
push
add
stos
aad
outsl
gs
orl
mov
push
hlt
maxps
dec
push
pop
add
lret
add
jbe
xor
lea
pop
scas
ja
jo
add
mov
xlat
lahf
add
pop
out
mov
gs
jge
jecxz
and
mov
mov
int
jmp
repnz
int3
pop
pop
rolb
xchg
xchg
dec
adc
cmpsl
push
cmp
hlt
je
aaa
mov
pop
adc
test
sbb
imul
adc
push
mov
push
push
outsl
push
mov
dec
xchg
xor
sub
mov
inc
xor
stos
jo
je
es
push
pop
arpl
out
and
out
and
ret
pop
shl
xchg
mov
out
lea
mov
cmp
mov
cmp
sub
mov
and
cs
and
push
jno
cmpsb
push
push
jb
test
in
adcl
lds
popa
push
inc
inc
pop
and
fcompl
dec
adcl
xor
mov
cmp
adc
aaa
nop
and
gs
mov
xor
push
mov
insl
add
push
adc
xlat
cmp
nop
and
mov
out
or
js
je
cmp
cwtl
adc
lods
dec
push
cmp
lret
pop
stos
in
push
cmp
pop
jp
cmpsb
push
push
push
lock
popf
rcrb
imul
ror
xor
sub
call
lret
test
scas
or
aad
scas
test
mov
inc
pop
hlt
mov
adc
or
mov
hlt
aam
nopl
push
aas
out
xor
pop
mov
cld
inc
pop
cmp
rorb
out
mov
ss
popa
je
lea
mov
sbb
inc
cmp
mov
push
subl
dec
mov
jl
notl
ds
mov
ss
mov
sub
sub
jns
in
push
std
push
inc
loopne
pop
lahf
leave
repz
or
roll
or
in
aam
dec
cmp
and
jmp
and
repz
sub
mov
adc
or
test
xor
sub
lds
popa
add
mov
adcl
sbb
xor
loop
mov
clc
out
aad
int3
xor
notl
jae
ds
xchg
mov
pop
ret
pop
subb
pop
adc
pop
sbb
cmpsl
xor
or
repz
add
arpl
adc
cmc
jmp
jl
arpl
lock
stos
mov
pop
add
jge
dec
inc
repnz
jno
cmpsl
inc
ret
scas
xor
add
mull
movsl
xor
out
push
and
movsl
sub
mov
into
sbb
push
push
imul
xchg
jp
clc
cmp
iret
insl
dec
stos
lret
rorl
scas
scas
and
sbb
mov
aaa
pop
in
outsb
pop
pop
and
pop
popf
pushf
inc
xor
outsl
or
push
pop
add
dec
fistpll
sti
mov
lock
mov
pop
sub
cli
out
mov
out
pop
fidivrs
inc
xor
cmpsb
in
sbb
jb
cs
popa
shrb
loopne
mov
sahf
cli
cmp
inc
jns
pop
or
dec
xlat
idiv
jecxz
xchg
xchg
mov
cmc
call
imul
scas
fucomi
mov
pop
sub
inc
xchg
push
lret
xor
add
adc
icebp
jne
mov
lods
xor
pop
shll
or
add
pop
sahf
push
xlat
out
mov
fidivs
mov
jns
mov
cltd
mov
dec
shl
in
or
sub
add
lret
jne
mov
and
mov
fiaddl
out
jmp
insl
loopne
sub
push
mov
mov
icebp
jne
sub
sbb
jae
and
ljmp
add
aam
jnp
or
push
cmp
xchg
mov
push
fdivr
inc
cli
adc
ret
lods
push
push
sbb
sahf
call
jne
icebp
push
jb
fwait
fwait
sti
sti
dec
lods
cmp
dec
push
sbb
enter
in
sub
daa
shr
xlat
sub
inc
outsl
sahf
popa
les
testb
or
rdtsc
add
nop
and
lcall
in
xchg
imul
std
jmp
shll
dec
and
jge
pop
pop
dec
cmp
bound
sahf
lahf
ficomps
popa
rclb
xchg
movsl
ret
cltd
stos
mov
lods
call
imull
imul
aas
nop
pop
out
push
pop
sbb
jg
mov
xorl
jmp
inc
add
cmpsl
mov
jnp
lret
or
jbe
and
sub
or
cmp
or
mov
inc
je
loopne
adc
xor
xchg
add
orl
xchg
jns
pop
cmpsb
dec
fsubrs
out
cwtl
xor
test
testb
gs
xchg
in
or
mov
push
pop
sub
and
cmp
adc
arpl
xchg
lods
das
arpl
movsbl
and
cmp
enter
cmp
aas
xlat
leave
pop
pusha
sbb
mov
outsb
std
loop
mov
out
jl
xchg
nop
mov
testl
jo
jnp
test
scas
jge
test
aaa
fdivl
pop
cmp
push
test
add
fidivrl
ds
mov
int
jge
ret
lea
imul
and
jle
or
xorl
pusha
mov
sub
cld
jp
jno
xchg
leave
mov
outsl
adc
subb
xor
mov
and
push
std
sahf
loope
sbb
dec
mov
push
push
lcall
push
cmp
mov
dec
xor
jmp
rol
enter
jns
push
push
jnp
push
push
out
jl
sub
mov
or
adc
lds
pop
shlb
cmp
icebp
push
out
or
int3
add
out
shr
inc
rorb
ficoml
ss
dec
inc
icebp
lret
xor
stc
inc
in
cltd
mov
cli
ficompl
imulb
call
xor
enter
aam
fcoms
lds
das
cmp
shlb
or
push
mov
xchg
xchg
aad
xor
lods
mov
movl
mov
jnp
xchg
out
mov
xchg
inc
fadd
outsl
aas
dec
ljmp
std
ljmp
shlb
shll
daa
lret
mov
jmp
inc
movsb
push
clc
jns
fs
mov
popa
xor
jne
enter
fsts
enter
ja
jbe
insb
mov
mov
pop
xor
inc
je
test
test
jb
les
mov
in
outsl
ljmp
imul
jbe
insl
sub
dec
cmp
jp
lock
hlt
fbld
pushf
or
mov
fnstenv
xchg
push
int
daa
xchg
cmp
fcmovnu
testl
popf
aad
dec
xchg
mov
into
push
mov
mov
bound
xchg
dec
in
or
mov
cmp
inc
xchg
fcmovnbe
lds
inc
shrb
adc
imul
inc
stc
leave
data16
stos
repz
mulb
fistps
aad
test
in
mov
mov
xchg
clc
mov
or
pop
or
add
mov
jnp
mov
pop
sbb
adc
mov
roll
mov
daa
aas
xchg
fwait
cld
and
cld
mov
xor
sub
cld
cltd
call
mov
push
sub
inc
mov
and
arpl
sar
xchg
or
xor
lods
mov
movsl
std
sub
or
popf
adc
std
data16
mov
int3
mov
nop
addr16
jne
ficomps
mov
xchg
negl
sbb
mov
xchg
add
add
iret
ja
in
jp
test
popl
setnp
cwtl
es
add
pop
cmp
arpl
fldl
or
rclb
mov
mov
mov
movsb
mov
arpl
cmpsb
filds
sub
hlt
lahf
ret
xchg
inc
ds
lock
push
inc
lret
adc
jg
or
cmpsl
fldl
xchg
adc
lret
inc
in
cwtl
js
stos
add
fwait
mov
inc
push
add
dec
lods
out
in
hlt
mov
jbe
aas
imul
out
sahf
jne
add
lret
mov
push
and
addr16
mov
cltd
shll
jno
xchg
stos
clc
jae
dec
xor
xor
clc
in
adc
fsubrl
push
dec
andb
adc
dec
jl
fwait
loopne
or
xor
jns
xchg
pop
mov
mov
cmp
ds
pop
inc
hlt
dec
sbb
cwtl
xor
sub
outsl
push
fstpl
cmp
nop
or
xor
sbb
cmc
adc
jle
add
cmpsb
xchg
ss
negl
sbb
daa
inc
pop
call
in
push
and
mov
imul
cmp
sub
fisubl
xchg
rep
lret
sti
add
cvttps2pi
pop
sub
mov
mov
inc
xchg
rcrl
call
jb
andb
nop
cmp
cmp
sub
test
adc
and
fisttpll
pop
mov
cmp
pop
mov
into
mov
test
push
idivl
enter
fimuls
roll
cwtl
sbb
inc
mov
aad
lret
jmp
or
sbb
sbb
push
stc
adc
jmp
dec
rorl
xor
popa
dec
xor
jb
sbb
jo
daa
stc
jb
adc
out
inc
rcr
xlat
mov
mov
scas
ret
pop
pushl
xchg
out
and
or
mov
flds
lods
or
pop
cmc
add
jo
lock
jp
shrb
or
rcll
xchg
xlat
call
pusha
push
dec
fcoml
mov
sbbl
inc
sbb
in
jnp
sub
outsb
xchg
ficomps
icebp
and
mov
adc
push
ret
xchg
outsb
movsl
mov
inc
mov
dec
xchg
call
mov
adc
push
pop
mov
sbb
and
scas
mov
clc
sbb
outsl
add
arpl
or
bound
imull
fisubrs
jb
add
pop
add
or
jo
data16
testb
out
sbb
scas
adc
call
xor
out
pop
sub
out
jl
inc
rol
pop
stc
mov
jae
int
test
push
clc
xchg
xlat
dec
xchg
insl
repnz
insb
sub
jns
jnp
in
popf
xor
addr16
xor
movsl
arpl
rorl
mov
lock
mov
pop
push
xor
scas
lret
push
sbb
add
sbb
push
stos
mov
or
jne
lods
xor
sbb
lcall
xor
into
rclb
jae
aas
dec
jno
jge
inc
xor
mov
loop
cmpsb
push
aad
jne
inc
fdivr
test
movsl
ljmp
add
jecxz
enter
mov
push
adc
pop
iret
cli
push
sub
xchg
mov
push
xchg
pushf
jmp
push
cltd
xchg
fld
fnstcw
dec
mov
mull
sub
lock
cmp
and
mov
mov
fwait
leave
sub
xchg
fmuls
loopne
sub
push
cmp
inc
lret
lock
pop
outsl
addb
ja
fwait
inc
cmp
cmp
push
cld
or
adc
pop
mov
repz
arpl
sub
lea
lret
xor
lahf
inc
jne
scas
ss
jp
in
jo
jo
imul
or
push
stos
mov
clc
or
or
out
andb
adc
fmul
in
xor
cmp
in
lea
adc
shlb
pop
les
mov
aad
or
fwait
rol
fs
dec
sub
push
insb
dec
arpl
pop
cltd
mov
mov
sbb
lds
icebp
sbb
iret
push
inc
bswap
sbb
xlat
stos
mov
push
mov
adc
xor
push
lcall
cmp
js
lock
orb
push
cmp
test
out
fsubrs
in
sti
pop
mov
mov
pop
push
and
add
add
mov
fwait
cmp
insb
repz
mov
pop
jne
dec
icebp
in
fs
push
adc
or
repz
in
mov
and
loopne
push
in
xor
imulb
add
xchg
in
cmp
cmp
insb
sahf
or
rcl
dec
imul
push
push
mov
movsb
sbb
mov
repnz
dec
int3
push
fstpl
sbb
sbb
roll
mov
pop
jo
mov
loop
mov
lds
stos
cmc
inc
sub
cmp
or
push
pop
push
mulb
shll
adc
rolb
clc
inc
jl
jp
pop
mov
movsl
out
aam
adc
imul
or
mov
xchg
add
cmp
fisttpll
bound
lds
ret
ja
stc
push
and
data16
es
xor
push
cmp
inc
pop
nop
push
lods
div
cwtl
cltd
shrl
in
js
adc
push
rorl
add
xlat
nop
cmp
fiaddl
hlt
sbb
pushf
push
pop
pop
pop
in
ja
push
pop
test
mov
sarl
movsl
mov
fists
jle
and
lcall
inc
push
fwait
enter
sahf
sahf
jle
jecxz
aas
cmp
jg
adc
popa
mov
jle
ret
gs
mov
mov
aam
mulb
xor
loopne
ror
jnp
and
pop
xchg
xor
mov
cmpsb
mov
cli
sahf
mov
and
outsb
pop
iret
pop
xchg
dec
cmp
jp
in
or
xchg
pop
add
add
dec
xchg
pop
lahf
cmc
jle
add
cmp
imul
cld
lea
imul
jbe
ret
hlt
jle
movntq
jge
mov
jg
xor
pop
dec
cmc
and
push
fs
enter
push
stos
add
push
xchg
test
shrl
rorb
dec
mov
fsubrs
mov
cmp
out
ja
sbb
sub
pop
pop
jp
int
or
xchg
insb
dec
pop
mov
fstpt
sarb
fcmovne
pushf
and
out
sahf
sbb
pop
jne
dec
or
sub
adc
adc
sub
add
aam
mov
mov
scas
cmp
push
daa
adc
outsb
mov
pop
rol
dec
je
xchg
mov
cmp
jb
lea
lret
and
jae
add
lock
adc
push
push
ja
xchg
mov
adcb
push
aaa
insb
mov
nop
je
adc
icebp
lock
lcall
cmpsl
push
jle
int
aaa
mov
int3
jnp
push
xor
dec
fsubrs
stos
inc
pusha
xor
push
or
arpl
mov
mov
inc
xor
fsub
add
xchg
and
arpl
cmp
loopne
inc
rolb
cmp
gs
repnz
adc
push
xchg
into
mov
push
cmp
icebp
mov
adc
aam
xchg
test
inc
in
mov
mov
incl
aam
mov
ja
cld
lock
ret
xchg
and
scas
hlt
add
pop
addl
pop
jecxz
and
insl
shr
mov
pop
or
dec
enter
jg
dec
and
cmpb
lods
jns
mov
bound
out
movsb
addl
mov
bound
mov
mov
mov
push
sub
sub
stos
outsb
add
dec
adc
or
lret
leave
inc
xlat
mov
aaa
inc
aas
fs
shll
xor
inc
mov
sbb
or
scas
cmpps
push
in
pop
and
or
outsl
lods
ret
out
xchg
cltd
popa
mov
jg
xchg
nop
std
lret
inc
pop
inc
mov
stc
xchg
pusha
mov
cmpsb
sub
aaa
fsubrl
xor
call
xor
inc
jns
fs
cld
pop
adc
or
pop
xchg
test
stos
xchg
pusha
jo
popf
outsb
aaa
shlb
lock
ss
popf
push
lods
and
dec
filds
dec
xlat
test
aas
or
arpl
xchg
int
jmp
inc
xchg
loopne
dec
adc
sbb
movsb
adc
insb
sahf
gs
bound
fsubl
mov
adc
pop
gs
das
pop
cmc
repz
sub
insl
fdivrl
rcll
icebp
imul
fldl2e
cmpsl
repz
xchg
test
subb
pop
inc
outsl
insb
xchg
je
fstpl
xchg
call
mov
mov
sub
cmp
or
sbb
outsl
jl
inc
jecxz
sahf
dec
test
je
adc
loope
imul
in
test
adc
in
pop
dec
jbe
int3
mov
test
sbb
mov
xor
push
sub
outsl
in
sbb
in
dec
jmp
add
xchg
xchg
scas
fidivs
sarl
and
cmp
stos
add
sub
pop
push
les
xchg
xor
dec
outsl
sahf
in
xchg
sbb
outsb
mov
ret
sarl
xchg
fstpt
sub
ss
mov
inc
decl
pop
test
mov
mov
lcall
lods
xchg
lods
add
xchg
jae
cltd
jg
push
out
or
or
repz
mov
cwtl
jmp
mov
aas
mov
ss
outsl
aam
dec
filds
cmp
sbb
movsl
lret
ljmp
fisttpll
mov
sub
add
jmp
cli
int
fadd
push
xchg
inc
ds
cmp
jp
mov
push
negl
dec
mov
dec
xchg
mov
mov
and
mov
and
pop
psubw
dec
pushf
aaa
data16
lahf
lea
sub
sbb
mov
xchg
jo
lods
lret
mov
scas
aad
dec
cltd
mov
jnp
in
frstor
loop
dec
scas
mov
ja
fcos
add
adc
hlt
fucomp
pop
xlat
clc
lods
movsb
movsl
mov
arpl
fdivrl
push
mov
sub
mov
cmc
testb
cld
add
rcll
rclb
mov
popl
repz
pop
rcrb
pop
add
stos
orl
mov
cmp
and
pop
loop
mov
scas
fldenv
push
outsl
cmpsl
stc
out
outsb
add
divb
dec
outsb
aas
mov
push
mov
mov
push
mov
loope
bound
dec
and
in
fiaddl
call
sti
or
xlat
out
fcomip
rcrl
stos
outsb
dec
scas
das
clc
ret
ljmp
add
sbb
adc
xchg
jg
sti
pop
pop
ds
leave
roll
incb
sub
xchg
gs
sahf
ds
je
clc
cmp
pop
rcl
loope
pop
std
movsb
fstpt
mov
mov
mov
dec
jns,pt
das
insl
pop
aaa
int
jecxz
sbb
add
mov
outsb
inc
mov
xchg
jns
jg
pop
dec
cmp
fst
adc
add
dec
rcll
push
sbb
lea
sub
mov
pop
repz
test
cmp
cmpsb
add
jge
aaa
or
xor
push
in
mov
inc
les
sub
pop
dec
jae
cli
inc
rcl
mov
scas
xchg
rcll
cli
mov
inc
call
cmpsl
jns
jne
mov
vxorpd
inc
insl
clc
mov
icebp
cmc
add
nop
mov
adc
repnz
or
and
int
pop
fldenv
call
aas
popf
dec
mov
add
inc
sbb
movb
inc
aas
xor
aas
movl
sub
xchg
xlat
jge
js
pop
add
scas
inc
cmp
cmpsl
int3
mov
push
mov
pop
lods
pusha
out
xchg
imulb
js
mov
pop
aaa
cmp
jno
subb
pop
outsl
xchg
jmp
and
inc
sub
out
sbb
and
mov
xchg
jnp
mov
testl
testl
fldcw
icebp
test
arpl
insl
fsubrl
mov
or
popf
xchg
dec
dec
push
movsb
jmp
pop
cmp
cmp
dec
loop
mov
pop
cmp
mov
fs
jne
cmp
iret
hlt
lea
jbe
add
add
std
xchg
cs
adc
lods
xor
xchg
lcall
sub
sarl
dec
fsubrs
hlt
jmp
push
jmp
jb
pop
in
jns
mov
sbb
cmp
divb
inc
cmp
loope
mov
pop
stc
imul
addb
lea
sti
xor
cmpsb
mov
bnd
sbbl
and
flds
call
pop
iret
and
imul
pop
sbb
aaa
mov
testl
loope
and
dec
jae
imul
pop
mov
lret
jmp
pop
lods
mov
inc
iret
mov
cmp
pop
mov
scas
sub
lret
test
outsb
and
xlat
jno
scas
xor
add
jne
jnp
daa
push
lock
leave
test
iret
xor
inc
mov
call
xchg
and
imul
add
pop
jno
ret
jg
int
xor
mov
rolb
mov
pop
cmc
xchg
scas
push
in
cmp
sbb
jnp
mov
stos
rolb
push
and
xlat
xlat
sbb
mov
inc
push
stos
dec
push
pop
add
sbb
lret
repz
ret
scas
cmpps
cmp
incb
js
adc
cmp
ljmp
addr16
jbe
ror
test
ja
jno
mov
aam
push
pop
jge
jne
and
sbb
sub
jno
sarb
xchg
enter
out
xor
mov
jp
jl
xor
das
cmpsb
mov
mov
push
xchg
pop
stc
mov
push
repz
daa
dec
mov
sbb
decb
stos
pop
mov
add
dec
test
push
testb
lods
arpl
les
js
pop
xchg
shl
mov
jno
mov
dec
sub
mov
push
mov
push
addr16
sub
in
aad
xor
test
inc
xchg
push
das
jo
negl
mov
push
add
lret
repnz
mov
in
int3
or
sub
or
mov
push
xchg
cmpsl
mov
cwtl
push
or
ret
out
sbb
push
shll
ds
jmp
stos
clc
jno
aad
repz
js
icebp
mov
pop
pop
je
jg
shlb
inc
xor
and
pop
popa
add
mov
das
jge
push
push
test
insb
xchg
inc
inc
scas
add
lret
sbb
scas
rcl
ja
stos
adc
adc
mov
lret
xor
jecxz
add
rclb
mov
nop
or
xor
and
gs
jne
and
add
adc
sbb
add
mov
pop
xchg
neg
fdivrp
out
push
into
mov
add
insl
jnp
adc
push
push
cmp
mov
rcrl
mov
lret
lcall
push
lods
pop
mov
lcall
hlt
rolb
int3
lcall
xor
push
lea
xchg
pop
daa
rcrb
xchg
sbb
cltd
cmpsb
repnz
sbb
les
pop
test
sub
bound
and
jb
push
mov
mov
scas
into
adc
inc
add
test
mov
sbb
js
mov
dec
outsl
and
fdivs
mov
xchg
imul
add
xor
jne
daa
dec
sbb
out
xor
fisubs
decl
popa
mov
add
xchg
cmp
aad
xchg
inc
bound
test
test
out
add
push
sti
sub
xor
and
imul
shrb
cmp
jno
adc
aaa
mov
and
push
push
ss
and
aam
dec
mov
adc
loopne
sbb
dec
mov
movsb
ret
lahf
inc
xor
mov
xor
js
mov
test
fwait
xlat
outsl
push
sbb
jge
nop
inc
mov
mov
jns
adc
int3
push
jne
pushl
cwtl
lods
pop
imul
sub
std
nop
sbb
out
jb
imul
dec
lods
js
xchg
xor
out
movsl
and
nop
aaa
sahf
jmp
les
push
cmpsb
mov
aam
imul
xchg
cwtl
jmp
push
outsl
outsb
ds
lds
ret
mov
or
xor
stos
lret
es
jle
cmp
lcall
push
fsts
es
cwtl
inc
and
add
out
inc
push
sbb
imul
mov
jmp
xchg
idivl
dec
and
sbb
in
loop
fwait
xchg
aad
sub
xchg
movsl
xchg
sub
xchg
sbb
rcrb
cmp
add
jl
rcr
xor
adc
mov
imul
jl
iret
sbb
loop
test
xor
dec
loope
jbe
lret
inc
dec
addb
fcoms
or
push
ret
stos
ja
sub
jmp
mov
mov
pop
xchg
fmul
cmpl
or
js
or
inc
sbb
push
in
fs
stc
fldenv
fnstsw
nop
sbb
shrb
adc
mov
lret
aaa
jnp
sbb
sbb
push
mov
mov
or
out
dec
pushf
xchg
inc
sar
sbb
cmpsb
sub
insl
sub
enter
lahf
dec
mov
data16
fdivrs
das
mov
lea
mov
dec
imul
lret
std
in
xor
sub
mov
add
lret
cld
imul
daa
ljmp
push
imul
dec
test
pusha
test
sub
sbb
dec
fbstp
pop
mov
mov
mov
mov
js
inc
mov
or
popf
les
std
push
shrb
loop
inc
out
and
mov
jge
lret
push
jge
in
out
mov
jne
push
test
xchg
jae
cmp
sub
dec
push
inc
jge
je
xchg
xchg
xor
inc
jle
and
dec
xchg
sbb
rorl
aam
dec
sbb
mov
cwtl
pop
jb
popf
add
lea
mov
scas
mov
repnz
mov
aam
js
insb
mov
es
inc
inc
or
pop
or
aam
cmp
data16
mov
dec
ds
inc
cmp
sti
mov
das
mov
jnp
cli
sub
cmc
cmc
mov
test
sahf
bound
in
push
imul
mov
aas
rcrl
ret
sub
xor
jo
pop
and
mov
imul
lret
inc
pushf
mov
stc
push
push
or
sarb
sub
fwait
add
mov
push
pop
push
aaa
push
scas
nop
add
jnp
cli
dec
leave
leave
inc
lahf
cs
and
movl
mov
stc
dec
push
ret
xchg
enter
aas
fsub
pop
push
addb
lea
popa
adc
adc
add
rcrl
rorb
dec
add
movsl
mov
fldenv
andl
pop
ret
in
adc
addb
imul
add
adc
add
xchg
mov
bound
or
dec
add
imul
push
cmp
imul
sub
mov
cs
add
dec
inc
pushf
fcmovne
sub
rclb
mov
lods
lahf
sub
xchg
lock
dec
pop
mov
push
mov
pop
mov
xor
jb
mov
adc
cmp
mov
xchg
call
negl
leave
push
adc
inc
jg
mov
mov
out
cmp
sti
sti
mov
inc
adc
into
ficoml
mov
scas
leave
cli
cmp
jle
xchg
mov
subl
arpl
push
inc
lret
push
mov
add
or
clc
xchg
mov
mov
dec
scas
or
loop
jp
mov
mov
dec
inc
stos
pop
les
xchg
cmpsb
mov
jp
mov
pop
mov
mov
rorl
jge
push
push
test
pop
lock
imul
lea
movsb
adc
inc
arpl
vhsubpd
jae
test
add
mov
sbb
mov
test
loopne
lods
inc
shr
adc
ja
push
jae
mov
add
or
xchg
inc
push
lods
lea
dec
fbstp
loop
cmc
or
xchg
lea
movsl
ret
sub
push
xor
mov
loope
jb
cwtl
call
push
dec
pop
mov
dec
cmp
mov
int3
sbb
scas
movswl
imul
mov
jl
sub
imul
add
test
mov
adc
sbb
mov
lret
cmp
loop
mov
ljmp
xchg
push
into
and
xor
shrb
aaa
loop
push
cli
and
js
pop
adc
mov
xor
push
xorl
subb
jmp
adc
les
inc
adc
sub
cmc
lret
xchg
xchg
inc
sub
lods
push
out
aad
xlat
push
sub
insb
mov
ds
and
jae
add
out
jno
xor
push
dec
dec
dec
ucomiss
test
cmp
mov
add
fnsave
repz
sub
inc
shlb
push
test
icebp
adc
lods
mov
inc
mov
shl
mov
pushf
sarb
jnp
jns
mov
loop
sbb
data16
sub
xchg
and
jne
push
xor
jg
or
push
pop
ja
clc
mov
and
xlat
pop
xor
pop
in
std
mov
pop
push
sub
fadd
sub
outsb
or
cmp
xor
add
xor
imul
and
push
jnp
xchg
adc
fldenv
add
xchg
push
pushf
mov
pushf
jl
jp
jnp
nopl
fwait
daa
and
stos
jnp
sub
dec
xor
inc
add
dec
mov
shrl
ds
mov
xchg
cld
jbe
das
jb
xchg
sarb
mov
adc
dec
inc
sub
lods
aas
rcrb
arpl
andl
push
sub
jae
jbe
push
dec
push
pop
xchg
repnz
jp
fwait
int
scas
sbb
test
lret
cmc
in
imull
add
jae
ja
pop
or
jnp
or
xchg
sti
stos
gs
ds
insl
loope
std
cwtl
mov
sbb
mov
add
mov
in
rcrb
outsb
cmp
sbb
lea
lods
testl
xchg
loopne
sub
test
in
push
movsb
lock
xchg
push
test
movsb
leave
arpl
xchg
lea
sbb
xchg
das
xorb
lcall
iret
jo
lcall
sbb
js
jbe
mov
mov
lds
in
pop
jb
cli
addr16
iret
and
stc
push
ret
cs
sub
mov
test
pop
sub
xchg
out
pop
pop
and
push
mov
cmp
test
jmp
inc
dec
hlt
lret
dec
mov
xor
into
push
push
pop
pop
in
lods
push
pop
cltd
ret
mov
mov
cmpsb
sahf
jle
arpl
add
sub
sub
jns
xchg
in
and
daa
repz
adc
cmp
cmc
xchg
jg
mov
sbb
push
sub
jo
loope
aas
outsb
int
mov
loop
mov
leave
dec
ja
js
test
cmp
idivb
fildl
inc
or
push
mov
hlt
es
mov
sub
inc
sub
decl
inc
loop
stos
mov
out
inc
jns
mov
ret
int
sbb
pop
lea
les
in
pop
lods
mov
sbb
mov
scas
sahf
push
xor
cli
test
and
jmp
js
jge
mov
cs
out
push
jo
push
push
aad
cmp
mov
or
int3
push
inc
push
mov
mov
aad
mov
xor
dec
cmp
inc
jle
mov
iret
pop
aad
fistps
cwtl
jg
mov
xor
push
push
mov
test
fs
dec
testl
out
insl
outsb
xchg
fistps
es
xchg
mov
xor
imul
mov
lahf
lret
cwtl
jmp
pop
xor
filds
mov
cmc
insl
jno
mov
mov
fbstp
cli
icebp
adc
shlb
adc
fidivs
push
adc
aam
add
xorl
push
xchg
addr16
pop
xor
push
push
lcall
pop
aaa
and
arpl
and
mov
push
and
lds
sbb
mov
cmpsl
mov
xchg
jae
int3
cwtl
ljmp
add
outsb
out
dec
inc
mov
in
leave
not
std
fcompl
jmp
cmp
fmuls
mov
leave
xchg
insl
fwait
std
int3
in
scas
push
sub
inc
cmc
add
jb
shlb
jno
test
sub
xor
pop
scas
aad
jp
in
ficompl
pop
in
in
mov
dec
movsb
test
dec
or
cmp
pusha
fstpt
inc
mov
fmull
push
dec
add
imul
mov
push
push
pcmpgtw
xchg
es
inc
fcoms
rcl
mov
stc
imul
fs
insl
adc
jmp
arpl
in
out
out
xor
adc
iret
add
out
test
jecxz
int
dec
fldcw
movsb
data16
stc
lea
push
jg
sti
xchg
adcb
mov
push
hlt
sarl
mov
in
in
fcomi
cmp
cmp
pushf
mov
stos
jle
mov
sub
mov
movsl
ffreep
jbe
mov
xor
cmpb
or
pusha
sub
jo
or
inc
inc
sub
popf
adc
repz
ret
push
jle
jp
cmp
add
lcall
adc
lahf
or
push
xlat
sahf
repnz
xchg
leave
pop
mov
mov
pop
arpl
fisttps
pop
sbb
pop
sbb
mov
adc
flds
fs
mov
mov
and
fucomi
fdivl
and
push
dec
dec
int
ret
insb
ss
adc
sbb
mov
pop
rolb
pushf
cmp
test
dec
mov
cmp
push
or
dec
and
out
in
sub
dec
gs
insl
pop
sub
adc
lcall
insb
mov
rclb
pop
jecxz
subl
xor
imul
sarb
lods
lret
data16
imull
jne
adc
ja
adc
push
sbb
jmp
cmpsb
into
push
loope
pop
inc
sub
pop
sbb
test
pop
daa
leave
sbb
mov
mov
fisubs
pop
fisubl
mov
pushf
sbb
push
pop
mov
cmp
fmull
fiaddl
out
inc
mov
mov
lcall
sub
daa
cld
ljmp
std
adc
fstl
or
xor
ffree
stos
push
sti
cmp
testb
hlt
cli
push
xor
sub
jl
jl
mov
clc
insb
mov
test
hlt
mov
add
pop
mov
int3
sbb
mov
xor
test
lcall
mov
into
inc
jmp
mov
and
jp
mov
and
xor
imul
push
push
outsl
mov
pop
test
jmp
loop
loopne
sbb
insl
and
mov
cs
lock
ret
or
test
dec
jbe
cmpsb
or
cltd
and
les
daa
shl
leave
or
sbb
aaa
movsl
jne
lock
cmp
subb
inc
and
sub
clc
lods
lret
or
scas
pop
adc
add
pop
out
loope
popa
jo
dec
push
aas
sub
and
inc
push
jmp
cli
pop
jno
jb
pop
mov
addr16
repz
sbb
aad
movb
iret
fdivs
call
test
or
mov
test
pop
mov
jns
cmp
rolb
addr16
pop
sub
fcomip
inc
mov
imul
rcrl
and
pushf
jmp
stos
pop
shll
in
xor
mov
add
shlb
mov
clc
sarb
cwtl
dec
pop
dec
dec
push
push
jp
sarl
jecxz
add
rorb
cmpsb
leavew
int
sbbl
sbb
cld
ret
push
or
xchg
sub
popa
inc
mov
or
dec
orb
mov
fwait
shll
leave
in
pop
pop
inc
pop
enter
dec
aam
mov
sub
popf
sbb
mov
imul
dec
or
push
fcmovnu
scas
out
add
sbb
int
inc
mov
cltd
loope
rcrl
sbb
jmp
adcb
mov
out
test
imul
pusha
cmp
enter
jg
cmp
xchg
jo
rcrb
pop
cmc
out
dec
push
cmc
lret
xor
jmp
aas
cwtl
leave
in
mov
mov
inc
out
mov
test
inc
outsl
mov
mov
mov
xchg
and
popa
mov
negl
hlt
out
sti
push
sbb
aas
adc
sub
push
jge
push
popa
pop
pop
dec
and
xor
in
and
cwtl
es
jne
inc
cmp
mov
in
mov
mov
cs
jbe
inc
ffreep
das
dec
ja
jge
outsl
push
inc
ja
mov
sub
shlb
adc
adc
add
adc
ljmp
inc
cmpsb
shlb
xor
cwtl
jbe
and
inc
insl
stc
push
and
jmp
cwtl
mov
out
das
cmp
iret
xlat
jmp
push
out
rorb
sbb
pushf
mov
js
add
mov
mov
js
into
mov
jno
enter
push
pusha
fnsave
dec
sub
subl
jmp
sub
das
cs
push
movsb
cmp
inc
test
out
sub
dec
mov
nop
mov
adc
addb
scas
cmpsl
jg
xlat
int
pusha
in
jg
int3
push
jmp
pop
add
icebp
orb
loop
push
push
in
xchg
mov
jo
add
mov
repz
or
xchg
movsb
sbb
sub
push
add
push
cmp
mov
nop
lahf
in
inc
shl
gs
dec
fmuls
scas
jnp
jp
xchg
dec
cmp
push
xchg
mov
test
xor
ficoml
adc
inc
cmc
cmp
and
inc
sarb
fmull
hlt
movsb
cmc
cmp
jg
popa
jp
or
popa
push
lds
cmc
lods
nop
gs
fbstp
mov
xchg
rorb
hlt
ret
dec
xchg
pop
popa
je
sbb
xor
into
mov
and
inc
jl
incb
leave
outsl
in
mov
test
imul
lret
ret
jae
mov
test
and
js
scas
in
xchg
fadd
jnp
call
inc
nop
out
addr16
stos
mov
xchg
or
aaa
inc
jl
sbb
adc
jl
and
cs
push
mov
cmp
loopne
mov
adc
mov
repz
aaa
orl
xchg
iret
and
sbb
adc
xor
popf
and
psubsb
mov
js
mov
fwait
bound
or
jecxz
in
add
jle
jb
sbb
mov
xor
in
xchg
jle
inc
ret
loope
mov
xor
loope
mov
jns
adc
stos
aam
scas
movsl
xor
dec
add
push
int3
xor
pop
rclb
jno
inc
inc
int
sub
inc
jbe
popa
lods
cmp
mov
mov
test
gs
loop
imul
or
cmp
out
push
movsb
shr
gs
cmp
dec
inc
sbb
mov
es
jle
push
mov
dec
mov
out
fs
pop
jp
push
mov
and
fwait
and
cld
int3
cld
gs
out
fimull
enter
sti
sub
push
push
aad
out
jp,pt
rcll
push
sbb
dec
outsb
popf
leave
cmp
jae
sahf
xchg
imul
sub
test
xchg
arpl
js
jns
pop
push
and
lea
adc
xchg
pop
in
dec
aaa
stos
inc
dec
mov
lods
pusha
mov
dec
sub
add
inc
sbb
data16
sub
je
ret
sbb
mov
dec
aad
inc
push
popf
mov
add
rol
and
ss
and
das
xchg
fldcw
mov
inc
repz
adc
std
mov
sbb
rcrl
sbbl
arpl
movsl
jns
cmpsb
pop
das
rcll
inc
decb
push
test
pop
cwtl
test
idivl
addr16
insb
fsubp
push
jp
sub
imulb
jmp
push
fcoml
fidivrl
adc
mov
mov
push
insb
test
inc
dec
cmp
push
aas
xlat
jecxz
sbb
mov
aad
dec
mov
sbb
subl
jo
mov
inc
js
nop
cmp
imul
popa
xchg
fnstenv
scas
out
call
sub
jle
push
int
push
jae
mov
outsb
dec
imul
jbe
mov
sub
mov
dec
out
scas
adc
jae
xchg
iret
push
sub
xchg
jo
mov
aaa
sbb
popa
insl
push
sub
xchg
movsl
repz
stos
cli
push
std
loope
inc
repnz
bnd
shr
and
cltd
imul
in
sub
pop
aam
scas
mov
push
add
xlat
sti
dec
icebp
cmp
call
popa
cld
cmc
push
and
ja
push
ret
shrb
ss
les
add
inc
xor
fdiv
push
push
incl
out
in
jae
xchg
jmp
pop
inc
or
inc
mov
ss
pushaw
outsl
mov
or
cmp
dec
fidivs
mov
push
pop
ret
outsb
pop
mov
shl
push
cmc
mov
pop
mov
or
scas
rcl
out
les
push
inc
dec
xor
cmpsl
jae
sbb
test
pop
dec
xor
in
lock
loope
xchg
add
xlat
push
repnz
je
stos
lock
push
movsl
cs
push
movsl
pushl
test
scas
pop
add
popf
enter
fistps
out
enter
aam
fwait
sub
std
int
int
stos
ja
mov
jge
jp
xchg
xor
ret
je
aas
mov
cltd
addr16
aaa
pop
pop
mov
adc
stos
gs
repz
int
mov
xchg
xlat
daa
cli
mov
ror
mov
movsl
incl
aad
or
sbb
subb
cmp
enter
in
lea
mov
clc
test
fstps
push
fmull
jns
int3
adc
outsb
push
mov
mov
cli
add
mov
insl
popf
fldenv
pop
aaa
outsl
mov
xchg
jnp
inc
lea
lock
add
shlb
and
inc
lods
in
mov
and
adc
cmpsl
jno
pop
fnclex
cwtl
cltd
loope
cli
fdivrl
jne
lcall
push
rcll
shlb
push
sbb
pop
mov
imul
mov
leave
cmpsl
inc
cmc
sub
les
enter
addr16
xchg
dec
mov
negb
roll
ljmp
call
mov
out
or
xchg
aad
or
mov
mov
adc
pop
sbbl
dec
orb
int
shl
repz
jl
repnz
filds
cltd
add
mov
iret
push
ss
bound
mov
aaa
adc
xchg
popf
fs
push
es
jae
mov
fmuls
jmp
lret
xchg
fidivrl
sahf
or
leave
scas
sbb
xor
es
daa
adc
aas
pop
xor
dec
xchg
pop
push
xor
or
sbb
cmp
leave
cmpsl
int3
push
fbstp
push
sub
add
clc
lret
sbb
leave
dec
cmp
xchg
mov
add
pop
lea
jmp
xchg
pop
jmp
fsubrl
movsl
add
xchg
daa
cmpb
mov
dec
outsb
sbb
xchg
inc
xlat
mov
pop
enter
repz
pop
shlb
ffreep
pop
sbb
inc
inc
test
stc
sbb
lock
mov
insl
popa
cmp
dec
mov
imul
pop
jp
mov
xchg
sti
sub
hlt
pop
enter
xchg
ror
mov
jns
lcall
inc
loop
fadd
pop
pop
jg
inc
and
lea
sbb
inc
push
mov
jb
dec
dec
push
pop
cmp
fadds
push
ficoml
stc
adc
add
cmp
cld
xlat
sbb
enter
or
stc
popa
mov
iret
pop
mov
mov
xchg
imul
sbb
inc
pop
movsb
jl
add
lret
imul
imul
jecxz
jecxz
sbb
xchg
cwtl
dec
xchg
fimull
and
stos
pop
mov
push
mov
call
inc
movsl
pop
gs
cmp
pop
sti
xor
lret
out
out
or
inc
xchg
insl
push
sub
repnz
repz
in
int
adc
in
add
fnsave
sti
mov
inc
sti
call
jno
pop
test
enter
aas
adc
out
xchg
outsb
jge
dec
jle
lahf
cmpsl
aaa
mov
xor
sbb
push
add
insl
mov
push
pop
push
xor
scas
pop
sub
cmp
push
outsl
pop
mov
xchg
popf
out
leave
push
js
stos
cmp
repnz
pop
in
mov
inc
pop
jb
xchg
push
rcl
mov
sbb
leave
cwtl
cli
ficompl
or
ljmp
scas
pop
sti
push
in
icebp
jmp
leave
dec
xchg
pop
fnstsw
pop
popl
test
xor
adc
xchg
xlat
mov
pop
je
fdivrl
xchg
test
sbb
insl
sbb
cld
iret
and
fwait
repnz
les
outsl
mov
push
cli
scas
dec
aad
aaa
dec
and
stc
pop
push
cmpsb
inc
jns
push
andps
push
add
jbe
dec
fcmovb
xchg
jne
mov
xchg
loop
lahf
mov
add
lea
cmpsl
repz
clc
mov
sbb
cltd
filds
sub
mov
add
jo
icebp
push
or
jbe
sahf
push
cld
adc
rcrl
cmp
pop
lcall
jo
xor
loopne
mov
jo
inc
inc
add
mov
sahf
and
fs
outsb
pop
pop
icebp
repz
mov
push
adc
and
imul
pop
sarl
js,pt
cmp
or
xchg
push
sahf
add
call
je
xor
sub
jg
xchg
fistps
mov
adc
lret
xor
adc
sbb
mov
rcrl
outsl
in
stos
lods
scas
pop
xlat
movsl
pop
inc
dec
push
call
xor
xor
mov
mov
insb
fistl
data16
jmp
inc
sbb
sub
and
ret
jo
sub
push
push
mov
pop
mov
sub
jge
pop
nop
mov
jmp
push
jle
test
mov
fmuls
test
or
test
dec
jge
push
push
mov
cmp
js
xchg
repnz
jmp
cwtl
xor
push
lea
xchg
popa
jle
in
dec
lcall
pop
ret
daa
pop
pop
sti
and
cmp
sub
jnp
imul
xor
adc
or
rolb
add
cli
jnp
cltd
pop
arpl
xor
iret
je
xlat
mov
mov
iret
jecxz
js
lds
jmp
inc
sub
xchg
pop
pop
push
repz
xlat
jle
shl
adcb
pop
inc
sarb
stc
shl
add
push
ror
test
pop
pop
xchg
mov
mov
in
fldcw
mov
cmpsb
jnp
rcll
fptan
orl
mov
ror
add
and
arpl
pushf
xchg
or
das
cmp
mov
in
movsb
std
imul
gs
nop
push
and
xor
mov
scas
aaa
push
cmp
negl
shl
pop
and
pop
or
pop
pop
stos
dec
or
fstps
xor
test
pop
pop
sti
sub
sbb
out
std
fcoms
cmpl
aaa
pop
jno
not
xor
cmpsl
cmc
fstl
ja
pop
inc
lea
or
mov
das
cli
xchg
lock
jg
sti
fsubrp
rcll
xchg
xor
ret
aad
jne
ja
scas
adc
rcl
xor
mov
xchg
or
sbb
jo
int3
loope
or
and
xchg
jl
shrl
les
cmovge
xor
xchg
xor
xor
sub
sti
loop
scas
out
or
movsl
bswap
les
lret
and
and
jg
hlt
push
enter
mov
dec
mov
fimull
shlb
sarb
push
in
mov
lcall
cs
add
xor
ljmp
rclb
les
xor
jno
push
jb
stos
bound
jae
addb
or
mov
push
push
das
ja
test
sbb
push
inc
lds
adc
mov
push
add
mov
add
notl
std
sub
lock
aaa
bound
and
addr16
ret
js
inc
mov
fisttpll
push
in
leave
pop
popf
cmp
dec
ljmp
xchg
pop
push
xor
cmpsb
movl
das
push
out
adc
stos
loope
push
sub
and
pop
cmpsb
aas
mov
loope
std
mov
xor
or
sub
iret
or
pop
ficompl
mov
sub
lret
fldcw
xor
lahf
dec
ror
scas
cmpsb
sbb
lea
xchg
jecxz
push
mov
fldl
aam
xchg
aad
mov
js
loope
pop
lahf
stos
clc
fnsave
and
call
aad
test
stc
and
pop
popf
push
or
push
popa
ror
mov
sbb
or
jmp
inc
or
fidivrs
cmp
out
push
or
mov
movsl
loopne
ja
popf
faddl
mov
mov
xchg
out
rcl
lret
pop
push
xchg
jmp
outsb
push
dec
add
add
jge
xchg
xorl
push
lock
jae
and
push
int3
sbb
cs
inc
pop
aad
daa
loop
daa
cmc
fldl
pop
sti
lea
mov
cmp
push
es
sbb
mov
notb
add
pop
xchg
mov
pop
imul
fcomps
push
push
cmp
adc
lret
cmpsb
pop
outsb
xor
or
jnp
and
mov
mov
daa
pop
fimuls
xchg
insb
mov
pop
push
clc
and
fsubp
outsl
jmp
mov
or
cli
sbbl
pop
jg
test
int3
nop
ficoms
movsb
mov
add
adc
cs
iret
sbb
jmp
pop
mov
mov
adc
add
mov
inc
mov
mov
mov
pop
loop
sbb
negb
add
jle
xchg
ds
iret
fs
or
or
pushl
xchg
mov
sub
jp
and
movsl
jne
jne
push
call
in
mov
fsubl
dec
add
shrb
adc
popl
lock
add
cmpsb
adc
jmpw
add
add
sahf
aad
push
out
and
xor
pop
dec
rclb
cld
ljmp
addr16
scas
mov
or
pushf
movsb
jecxz
out
repz
movsb
hlt
je
inc
cmp
jmp
popa
xlat
outsl
xchg
or
push
adc
sbb
es
pop
scas
or
pop
pop
mov
jl
xor
jae
cmp
mov
jle
mov
pop
mov
les
inc
cmc
mov
pop
pop
cmp
sbb
int3
inc
fidivrl
push
stos
ret
cmp
inc
orb
push
dec
sub
and
lcall
leave
dec
fcomps
cltd
cmpsl
mov
and
cld
roll
insb
dec
iret
push
jne
lods
lods
and
test
pop
mov
stos
mov
jno
int
push
mov
mov
cmp
ds
mov
sub
cltd
mov
andb
cmp
insl
push
movsl
and
inc
mov
pop
mov
mov
pop
cmpsl
imul
in
popf
inc
push
sub
scas
popa
pop
xorl
mov
push
inc
popa
sub
xor
dec
bound
lock
dec
arpl
inc
jns
inc
and
mov
pop
aas
jp
mov
test
xor
mov
loop
sbb
push
push
pushl
insb
je
cmp
insl
add
subl
into
mov
adc
aam
sbb
xchg
test
jae
outsb
xor
sahf
arpl
loopne
cmp
fsubrl
mov
adc
mov
sbb
mov
add
shlb
outsl
je
outsl
xlat
push
bound
call
inc
idivb
sub
push
xor
out
in
popa
lret
ljmp
shlb
mov
jge
pushw
sahf
pop
movsb
ret
dec
cwtl
sub
push
leave
incl
ljmp
pop
mov
adc
andl
icebp
xor
and
pushf
mov
or
mov
sbb
loop
arpl
inc
or
sub
jb
pop
cli
jl
ljmp
pop
mov
push
dec
cmp
stos
dec
push
cld
or
imul
jne
xchg
stos
lret
decl
xchg
and
mov
sbb
mov
insl
cli
mov
push
push
cwtl
add
dec
orps
xchg
adc
xor
sbb
dec
pop
test
cwtl
push
pop
fdivrl
shrb
push
or
lds
imul
clc
push
fisubs
scas
out
rclb
in
mov
pusha
sti
cld
out
cmpsl
insl
push
cli
mov
dec
mov
mov
sahf
jo
add
shll
adc
lds
pop
mov
lods
mov
fldt
es
out
mov
call
je
xchg
shlb
rorb
xchg
and
and
or
into
or
or
cltd
ljmp
repnz
mov
sbb
popf
lods
inc
aas
jns
mov
divb
dec
nop
dec
push
and
jo
dec
mov
aam
jg
add
xor
push
js
mov
sbb
out
in
inc
and
jno
mov
pop
push
add
in
sbb
xchg
out
out
sbb
push
sbb
xchg
cmp
out
in
shl
addb
inc
int
sbb
cmp
xchg
repnz
outsl
mov
push
adc
mov
pop
jae
mov
fmull
jp
fdivrs
xor
hlt
xor
repz
dec
jg
pop
add
mov
push
aas
test
stos
cmp
cmpsb
daa
push
and
mov
outsl
xor
fisttpl
imul
jae
cmp
adc
dec
or
stos
mov
mov
cwtl
or
push
xchg
lcall
mov
adc
test
pop
xabort
testb
jno
mov
and
jb
push
addb
in
and
mov
aaa
out
sub
pop
jae
sbb
in
and
inc
lods
adc
sbb
jb
stc
cmp
add
sub
jg
mov
aaa
mov
push
xchg
or
lds
add
sub
sbb
cltd
and
roll
aad
pop
daa
cmpsb
inc
pop
aas
gs
xlat
and
or
movsl
add
xor
int3
in
add
stos
push
imulb
push
mov
pop
jo
mov
jnp
jl
inc
cmc
mov
int
in
dec
iret
ss
mov
jl
out
daa
sub
cltd
pop
cmpsb
xchg
add
xchg
pop
int3
es
repz
xchg
popa
leave
ss
cmc
mov
pop
les
dec
dec
insl
mov
mov
mov
stos
mov
dec
sahf
fcoms
adc
out
and
sahf
jmp
les
xchg
es
lock
mov
sbb
mov
sbb
das
out
aas
sub
std
mov
pop
add
sub
pushf
out
xchg
mov
xor
mov
insb
fst
lahf
iret
iret
pop
mov
adc
andb
xor
bound
inc
lods
inc
dec
fidivrl
movsb
sub
or
push
ja
pop
divl
scas
mov
sub
in
inc
ror
inc
jne
pop
dec
lods
clc
jne
ds
xchg
sub
xchg
xchg
mov
add
cld
cmp
pop
movsl
aam
sub
pop
jg
and
mov
mov
in
pop
jno
mov
mov
and
popa
sbb
jb
xchg
mov
out
icebp
leave
cmpb
loope
notb
lods
adcb
loopne
mov
cmp
dec
ficomps
push
push
mov
xchg
push
jecxz
lods
add
sahf
xchg
xchg
pop
lods
adc
push
mov
push
in
jmp
arpl
movsl
iret
sub
mov
add
fs
aaa
nop
hlt
fidivrl
sub
add
cwtl
adc
sbb
and
sbb
mov
jae
mov
mov
mov
jle
mov
mov
pop
dec
cli
daa
js
cmp
xchg
aam
insb
or
inc
ss
inc
adc
scas
push
movsl
mov
popf
and
jmp
hlt
lret
arpl
push
fwait
sub
outsb
dec
push
mov
and
pusha
or
sub
pop
adcb
lods
jae
sbb
xor
das
mov
dec
lret
jns
imul
shl
dec
cmpsl
mov
fisubs
icebp
jae
mov
adc
jecxz
leave
pop
je
lock
stc
loopne
add
cmp
add
sahf
push
pop
nop
jge
int
aas
fistps
fildll
and
xlat
xlat
xchg
push
dec
jnp
out
cmp
xchg
mov
sub
sub
cmp
dec
dec
addl
shlb
cld
sub
js
repz
and
push
fadd
push
push
lret
ffreep
cmp
outsb
mov
mov
sub
xor
add
jb
int
lods
ja
inc
daa
xchg
jmp
ljmp
dec
fwait
sbb
roll
mov
adc
pop
lock
daa
push
mov
cmc
call
movsb
mov
jmp
stos
fnsave
adc
sbb
cmp
mov
push
cld
and
xchg
fwait
arpl
sbb
sub
test
aas
push
jbe
dec
mov
cmp
mov
jae
mov
mov
shrb
data16
in
sbb
outsb
push
popa
sbb
in
cs
ds
shlb
cmp
cmp
push
mov
lock
out
dec
nop
cmp
push
xor
pop
push
mov
in
or
sbb
pushl
xchg
mov
pop
shll
fnsave
cltd
push
test
movsb
sub
fisubrl
sub
paddq
out
es
or
mov
rorl
pop
push
roll
mov
nop
sub
bound
push
les
lahf
dec
mov
aad
addb
pop
leave
dec
repz
inc
cmpsb
in
adc
and
in
mov
test
frstpm(287
lods
xor
sbb
dec
lret
push
adc
mov
addr16
sub
addr16
jp
loopne
clc
shl
or
jl
push
mull
add
arpl
lock
test
sub
or
push
push
sbb
mov
jp
ja
inc
pop
stos
xchg
sub
sub
divb
lock
xchg
sahf
mov
xchg
sub
gs
popa
jno
fisttpll
and
cmpsb
fnstsw
adc
fucomp
fwait
xchg
jbe
push
dec
inc
mov
push
mov
rcr
ss
pop
nop
stos
arpl
xorl
stos
iret
dec
bound
mov
stos
mov
xor
cmpsl
dec
pop
popf
jno
jl
mov
fcmovne
cmpsl
xor
lock
imul
sti
leave
inc
xchg
inc
add
dec
fists
and
es
gs
in
leave
fs
fdivrl
mov
cmp
jbe
xchg
cld
mov
add
mov
int3
adc
xchg
scas
shlb
hlt
enter
or
mov
stos
cmpsl
and
cwtl
and
iret
lods
adcb
mov
call
and
pop
lods
adc
mov
outsl
mov
out
fstl
xor
push
lods
ret
inc
dec
dec
jbe
test
push
add
push
inc
arpl
or
stos
pop
clc
bound
fs
out
lret
mov
xlat
das
lock
in
push
sub
bnd
or
sub
movsb
xor
fs
mov
out
cmpsb
sbb
insb
data16
scas
arpl
hlt
mov
dec
mov
pusha
imul
je
adc
mov
sub
push
sarl
pusha
xor
cmp
daa
into
fdivrs
pop
jp
in
insb
fsubs
inc
cmp
scas
sub
sbb
inc
xchg
sbb
or
ja
pop
xadd
rorb
mov
push
sbb
push
fcoml
mov
popf
pushf
push
xor
mov
lods
and
cmp
lret
scas
adc
out
fs
mov
push
lcall
push
mov
ret
push
mov
xchg
cmp
test
mov
mov
ficompl
loop
jbe
imul
or
lret
jnp
fwait
pop
adc
jp
inc
int
popf
cmp
nop
push
jge
mov
lods
push
icebp
jge
sbb
mov
fildl
adc
cmpb
out
inc
popf
shlb
sub
or
jmp
and
loopne,pt
push
xor
inc
xor
movsl
pop
xchg
cmpsb
pusha
push
mov
pop
lock
pop
repnz
divb
sub
or
add
and
pushf
ja
sbb
xor
cs
mov
jnp
xor
into
mov
and
popa
xor
imul
push
and
arpl
jns
or
daa
xchg
mov
aas
jne
inc
and
adc
push
sahf
mov
ret
pushf
adc
mov
push
push
mov
test
pushf
lea
cmp
pop
mov
sub
shrb
and
mov
adc
or
push
adc
lods
cli
cmp
in
xchg
mov
mov
and
ja
xchg
or
call
add
dec
pop
fsts
stc
jp
rolb
jl
fidivl
out
or
andl
push
mov
outsl
push
lock
js
xchg
cltd
push
cli
addr16
scas
dec
push
jne
push
lret
fwait
into
pop
das
loopne
add
mov
mov
push
das
adc
sahf
adc
out
test
in
cmp
inc
repz
aad
mov
out
jp
test
add
and
mov
pop
dec
fstpl
xor
mov
jle
cmpsl
sub
scas
dec
loopne
jp
scas
push
stc
push
test
rorb
outsb
push
aas
cwtl
sbb
lds
outsl
fstl
sbb
test
movb
push
add
mov
imul
push
sub
or
shlb
gs
int3
es
pop
push
testl
mov
jnp
lock
aam
inc
shll
cmp
xor
imul
gs
xor
dec
jmp
test
insl
test
xchg
mov
inc
fmull
les
ljmp
mov
or
in
je
insl
test
add
je
xchg
rcrl
les
ret
jge
jae
xor
xor
popf
push
and
jo
and
mov
cmp
add
dec
add
sar
jg
mov
and
cli
cmp
hlt
sub
imul
jg
push
popa
inc
ficoms
scas
jo
fnstcw
dec
ret
cmpsl
add
and
mov
cwtl
mov
icebp
ja
ss
scas
sbb
sub
pop
dec
inc
cmp
sbb
mov
arpl
sbb
cmp
pop
rcll
iret
in
sbb
dec
mov
inc
popf
pop
sub
and
push
lock
jbe
dec
js
dec
leave
daa
repz
ret
lcall
mov
dec
pop
pop
xchg
int
sti
push
jnp
not
xchg
push
mov
xchg
adcb
or
sub
cs
xchg
mov
insl
adc
xor
xchg
aaa
pop
test
and
sti
shr
cwtl
call
sbb
mov
sbb
sti
das
jnp
es
and
incl
scas
addr16
mov
push
je
sahf
sub
jns
mov
add
shl
push
jo
or
repz
addl
inc
test
out
or
or
sbb
mov
ficoms
jnp
sbb
add
test
inc
push
fcmove
dec
negb
sub
or
aad
cmp
das
jae
pop
push
jns
jno
mov
sbb
ds
xor
mov
insb
cmpsl
sbb
jle
cmp
fcoms
mov
sbb
cmp
nop
mov
sub
stos
cmpsb
scas
pop
jo
pop
add
push
push
xchg
fdivrl
jl
imul
inc
into
and
mov
mov
ret
xorl
xor
lock
cli
repz
mov
pop
fildll
test
dec
mov
pusha
pop
rolb
push
inc
test
negb
cmp
mov
xlat
pop
bound
loope
pop
pop
mov
scas
andb
adc
aas
and
push
push
mov
repz
inc
bound
nop
xchg
mov
xor
imul
popa
mov
xlat
or
rcll
jae
call
cmp
xor
sahf
popa
fs
sub
cmp
sbb
enter
cmpsb
inc
insb
pop
pusha
adcl
jle
mov
pop
add
adc
mov
fidivrl
push
mov
sbb
jecxz
jns
mov
push
push
push
cld
push
ss
fstl
xor
inc
sub
rolb
xor
pop
cmp
fwait
enter
adc
lret
sbb
mov
mov
and
clc
imul
push
adc
popa
es
push
sub
mov
cli
mov
mov
cmp
jo
cli
jne
jmp
popf
mov
clc
dec
sbb
mov
data16
loop
addr16
out
mov
mov
movsl
jg
push
incb
ja
adc
std
mov
sbb
mov
in
or
lods
pushf
rcrb
sub
push
hlt
movsl
mov
test
xchg
fnstcw
outsl
jmp
mov
sarb
xor
shrl
or
movsl
jp
in
adc
mov
sub
cmp
popf
push
mov
push
jecxz
inc
sbb
cmp
pop
scas
loopne
and
pop
inc
xor
pop
add
jb
inc
pushf
push
int
in
ret
or
xor
cmpsl
sub
aaa
fbstp
push
clc
faddl
lahf
leave
add
punpckldq
fucomp
sbb
cmp
loope
or
ficompl
shrl
jo,pt
adc
xchg
and
js
flds
push
or
or
outsl
sbb
int3
mov
les
xlat
out
xchg
sub
jbe
inc
push
int
sub
mov
fwait
ljmp
out
jmp
lock
imul
gs
xchg
jle
sbbb
lret
fsubrl
js
push
ret
aad
push
push
mov
mov
dec
fnstenv
stos
test
lcall
repnz
repz
sbb
movsl
mov
sbb
sub
popf
aad
cmpsb
xlat
arpl
cmova
int
shlb
xchg
stc
lcall
in
inc
jp
jecxz
adc
xlat
ret
or
sub
sbb
xor
sbb
xchg
xchg
shl
movsl
and
mov
push
jo
cmp
ficomps
xor
mov
xchg
aad
sub
sbb
test
sbb
sub
cmpsl
mov
popa
lds
in
xorl
push
faddl
arpl
adc
nop
xchg
scas
xchg
pop
add
pop
or
xchg
dec
pop
push
mov
in
inc
push
jb
fiaddl
int
dec
mov
enter
lcall
movsb
cld
loop
add
or
in
pop
leave
xchg
xor
shrb
fidivrs
loopne
pop
scas
jno
xchg
add
bound
adc
in
pop
in
out
sbb
mov
add
push
xchg
es
int3
adc
lcall
push
bound
adc
dec
cmc
cmpsb
add
add
mov
cmp
jo
jmp
cmp
ljmp
stos
ljmp
sub
inc
jp
out
int3
stc
repnz
push
scas
mov
into
sahf
leave
cli
ljmp
sbb
dec
adc
test
shll
adc
addl
inc
push
push
fxch
scas
faddp
xlat
mov
sbb
mov
xchg
lods
jae
mov
aad
and
or
in
inc
insl
hlt
xor
and
or
jmp
popf
pop
dec
xchg
sarb
jbe
fcmovu
notl
mov
cmpsl
pop
imulb
jne
popa
mov
into
pushf
push
xor
cli
imul
fcmovbe
add
mov
int3
push
mov
jnp
mov
pop
xchg
mov
lock
loope
dec
sbb
and
mov
outsl
pushf
cmp
test
jmp
mov
into
addr16
inc
mov
dec
lret
pop
jg
ljmp
sbb
and
shrl
xchg
addl
dec
push
dec
imul
les
pusha
mov
sub
dec
inc
jnp
cmp
int
sbb
cmpsb
and
sbb
adc
mov
inc
inc
insb
fcomps
or
movsl
mov
jl
sarl
xchg
xor
int3
jns
stos
testb
popa
sbb
ret
pop
and
jmp
xchg
jp
cmp
xor
cmpsl
outsb
mov
cmp
cmp
sbbl
push
test
sub
les
movsl
dec
cmpsb
xchg
mov
movsl
add
ret
xchg
rclb
rclb
sub
push
push
dec
or
fucom
mov
insb
stc
std
push
xchg
or
out
pop
cs
gs
and
xchg
fsubl
daa
push
or
sbb
mov
dec
mov
and
dec
and
add
ss
push
jmp
adc
test
stos
jb
in
adcl
mov
xor
sub
aad
ret
mov
jae
sbb
mov
cltd
pop
sbb
sub
jno
dec
add
call
sarb
outsb
mov
out
mov
jp
dec
push
pop
ja
mov
decb
cld
sub
push
mov
add
aam
xor
push
test
leave
dec
sub
xor
sti
dec
pop
pop
pop
sbb
and
hlt
movsl
mov
lds
dec
jecxz
inc
or
xchg
xchg
lahf
repnz
add
mov
dec
sbb
add
pop
ret
sahf
inc
fdivrl
adc
gs
jns
stc
flds
lret
add
mov
xchg
out
outsb
test
sub
in
jnp
mov
push
mov
push
xlat
xor
mov
into
div
std
pop
outsl
adc
ja
arpl
out
inc
lock
pop
cmpb
xchg
inc
jbe
scas
cmpsb
adc
push
in
rclb
mov
pusha
or
ret
stc
jl
sbbb
mov
out
pop
lret
jle
pop
sub
push
and
xchg
jne
loope
mov
cmpsb
clc
adc
mov
add
xchg
lret
lahf
cmpsl
imul
xor
mov
jbe
ret
mov
sbb
or
or
lret
sbb
pushf
jo
fisubrl
lret
mov
ljmp
push
sbb
je,pn
data16
adc
xorl
inc
dec
mov
sub
jmp
jp
or
in
movsb
shrl
incb
inc
sbb
mov
and
fs
dec
mov
ljmp
xchg
cvtps2pd
push
stc
and
sub
mov
push
sbb
out
pop
adc
add
adc
int3
pop
test
mov
pop
push
add
testb
ret
stos
or
pop
sti
lcall
bound
fstl
xor
ds
jmp
pop
xor
jl
lcall
push
cltd
inc
sti
adc
hlt
add
jl
inc
pop
sbb
arpl
jne
enter
scas
enter
xchg
jge
mov
xor
push
sbbb
popa
fstpl
push
sub
stos
imul
out
adc
call
in
stc
xchg
xor
mov
aas
or
dec
movsl
ret
andl
cld
push
inc
jmp
enter
aad
jbe
sub
mov
mov
clc
inc
sub
inc
xor
mov
xchg
push
or
and
cli
inc
ljmp
outsb
movsl
in
push
lock
jno
pusha
les
je
xchg
data16
dec
lret
adc
ss
inc
add
and
ljmpw
pop
lret
sbb
or
addr16
outsl
or
push
push
cli
rclb
mov
arpl
and
in
jecxz
and
sar
jno
mov
mov
xor
jg
push
imul
or
subb
push
add
and
adc
sti
cmp
push
xchg
mov
cltd
popf
adc
pop
push
or
cmp
gs
push
adc
mov
decl
sbb
lahf
test
or
and
insb
lret
add
stc
jge
mov
push
and
and
cltd
in
add
rcll
mov
or
xor
pop
or
add
sahf
and
pop
dec
mov
outsb
xor
push
stos
stos
aas
cltd
mov
mov
sbb
orl
out
and
sbb
jb
stos
leave
push
and
hlt
sbb
mov
loop
popf
fistpl
jl
imul
mov
pop
sub
mov
xor
jmp
and
push
das
jg
loopne
pop
xchg
in
mov
jle
xchg
lahf
rolb
in
sbb
inc
ljmp
add
or
fstpt
xchg
pop
mov
and
sub
cld
jb
jo
jle
pusha
mov
rorb
sbb
mov
cmp
push
or
add
nop
out
ss
jnp
mov
pop
cmp
pusha
adc
and
ret
bound
mov
adc
sub
jmp
xchg
lods
inc
in
pop
fisubrl
not
loop
jnp
xchg
and
fabs
cwtl
push
xchg
outsl
add
add
mov
fisubl
decl
xchg
cmp
cmp
out
push
push
std
sbb
ret
pop
adc
fsubrs
sub
xchg
shr
adc
pop
lcall
adc
jg
in
cmp
mov
xchg
jle
adc
push
add
inc
mov
dec
cmp
shrb
rorb
push
ds
mov
aad
arpl
xchg
sub
pop
arpl
stos
popf
popa
outsb
je
test
pusha
shll
mov
sbb
dec
inc
addr16
out
fwait
es
and
or
push
xor
mov
movsb
lahf
int3
xorl
popa
int
jno
mov
sub
incl
popa
int3
fistpll
aaa
add
xlat
mov
mov
je
and
bnd
repnz
aas
sub
adc
gs
and
andb
gs
mov
mov
jmp
imul
cld
cli
ljmp
aam
insb
cli
sub
addr16
sti
test
mov
push
dec
cmp
dec
sbb
mov
mov
and
add
xchg
inc
call
pop
pop
sbb
scas
sub
push
fcoml
and
jne
outsl
js
xor
cmova
sbb
jae
cmp
push
insb
cmp
add
sbb
dec
push
and
push
mov
sbb
or
jmp
cmp
jge
jmp
lock
cwtl
mov
mov
in
ljmp
subb
in
mov
pop
test
lcall
dec
std
rolb
fmul
jecxz
aad
insl
push
and
in
cmpsl
nop
jle
inc
ss
lret
sbb
jmp
ljmp
shld
pop
aaa
fwait
aad
insl
pop
dec
aas
push
mov
int3
lret
push
stos
pusha
movsl
xchg
or
sub
mov
pop
mov
fs
push
aaa
sub
inc
push
ja
rolb
mov
jmp
fisttpl
and
nop
sbb
aad
sbb
jbe
negb
push
dec
add
mov
inc
movsl
maskmovq
testl
adc
loopne
cld
mov
mov
fnstenv
cltd
in
sbb
rcll
bound
clc
jno
fstl
jecxz
lock
xlat
add
jle
scas
hlt
push
jg
int
add
sbb
popl
sbb
rcrb
and
repnz
add
and
std
in
insb
adc
cmp
out
incb
int
loop
es
xchg
js
cwtl
das
and
jmp
lods
and
out
popf
scas
shl
jnp
pop
inc
stos
and
jge
out
in
or
jg
dec
decl
out
mov
dec
jb
imulb
inc
in
add
pop
mov
outsb
nop
les
bound
pop
outsl
imul
and
xchg
jle
add
imul
jecxz
mov
shll
out
setl
or
sbb
push
add
xor
pop
push
xchg
testb
jecxz
sub
js
nop
xlat
xchg
sbb
test
subb
sbb
test
or
add
in
mov
int
enter
outsb
push
subb
sub
mov
cmp
clc
aam
mov
or
push
shll
cs
pop
sahf
push
pop
icebp
in
mov
pop
nop
dec
es
js
sub
and
cld
es
sub
add
testl
pop
xchg
inc
test
and
cmp
imull
int3
push
sub
jbe
sbb
push
cmp
sub
xor
daa
test
fsub
sub
into
sarb
mov
mov
mov
cmp
dec
xchg
bound
jge
test
enter
pop
out
dec
and
call
in
and
sbb
call
ret
filds
xchg
add
aad
dec
cmpsl
cmp
call
inc
pop
daa
push
pusha
push
and
out
xchg
in
enter
xchg
pushf
sahf
inc
add
sbb
mov
jae
jns
out
mov
in
jl
fldt
or
neg
inc
mov
or
aaa
sarb
into
hlt
push
pop
inc
stc
jb
pop
xor
mov
pop
fisttpl
pop
inc
test
cmpsb
push
dec
scas
jecxz
pop
shll
scas
movb
jne
fists
lret
aam
pop
mov
popa
cmp
jb
sub
sbb
sahf
sbb
out
loopne
outsl
outsl
out
push
test
ret
sti
aam
test
inc
add
das
xchg
test
sub
int
inc
jno
iret
mov
and
inc
rcr
jmp
repnz
lock
aaa
sub
pop
dec
sub
mov
adc
rol
fisttpl
jp
out
pushf
push
out
mov
movsl
das
enter
mov
mov
addb
cmp
sbb
cmpsb
xor
mov
inc
push
data16
stc
mov
inc
xchg
bound
cmc
xor
in
or
sbb
fwait
movsb
jecxz
add
fisttps
lret
sbb
mov
push
dec
mov
xchg
ret
stc
inc
shl
in
jae
jle
and
lea
and
pop
aas
adcb
push
sub
inc
jmp
pop
insb
push
in
hlt
loopne
and
sbb
sbb
inc
sub
lock
cmpsl
popa
push
xchg
add
mov
xor
ret
lahf
in
daa
sbb
sti
setno
mov
je
dec
adc
scas
push
stos
stos
divl
movsl
jae
cmpps
test
mov
sbb
xor
mov
cmp
fs
adc
leave
mov
mov
jge
adc
jns
lahf
sbb
sbb
xchg
jecxz
inc
cmpsl
sub
popf
imul
add
and
pushf
loopne
add
dec
xor
fmull
mov
sbb
sbb
std
jne
push
or
push
cld
or
in
es
aas
repnz
and
pushf
adc
push
push
imul
fadd
outsb
cmpl
lods
and
sbbb
inc
shr
enter
inc
js
jnp
lds
repz
sub
xor
stos
in
push
mov
inc
xchg
test
jbe
sbb
outsl
cwtl
jbe
jb
jecxz
pop
fwait
or
and
decb
adc
jns
push
rclb
mov
sub
xchg
pusha
les
dec
mov
jg
inc
xor
add
mov
ret
faddl
xor
mov
adc
lret
cmp
sti
loopne
inc
test
mov
out
aas
push
sub
cmp
movl
jne
adc
cli
cmp
cmp
mov
cwtl
aas
dec
dec
mov
aam
inc
sar
sbb
fisttpl
inc
cli
push
push
fsub
test
fndisi(8087
xchg
icebp
sahf
mov
or
xor
xchg
sbb
push
insl
lds
add
movsl
cmp
mov
int
je
int3
gs
lea
xor
roll
negl
aad
sub
mov
repnz
mov
gs
lods
call
mov
xchg
cmpsb
mov
outsl
jae
pop
add
cmpsb
imul
and
mov
int
adc
adc
or
mov
inc
cli
jno
cltd
pop
sub
jbe
daa
sarb
xchg
sbb
ret
in
xor
lcall
cltd
or
imul
loope
cmpsl
int3
push
fldenv
mov
add
popl
xor
dec
mov
or
sahf
das
push
cmp
or
mov
jae
dec
or
dec
popa
scas
fs
xor
addr16
movsb
or
xor
adc
and
sub
pop
lods
stos
incb
push
movsl
mov
dec
push
mov
mov
in
push
popf
dec
scas
jmp
xchg
mov
or
mov
test
xorl
gs
push
cwtl
cmp
testl
clc
jge
ljmp
xlat
xchg
in
pop
in
daa
mov
jne
mov
test
xlat
push
inc
and
dec
stos
cmp
cmpsb
xor
cmpsl
data16
jecxz
mov
mov
lock
adc
xchg
sbb
fnsave
in
xor
inc
jp
imul
dec
push
sub
test
and
mov
inc
lahf
les
cmp
pop
push
pop
fwait
cmp
arpl
cmpsl
mov
or
push
enter
movb
js
sbb
cmc
dec
outsb
mov
add
imul
xor
icebp
mov
lcall
jp
sub
jecxz
mov
sbb
int
inc
insl
loope
rcrl
mov
mov
mov
and
into
sub
mul
ficoms
lea
aam
mov
add
nop
adc
test
mov
test
cld
ret
inc
je
arpl
push
sub
jecxz
sbb
xor
dec
push
mov
fwait
pop
dec
clc
loopne
mov
adc
mov
xchg
int3
mov
sti
push
clc
fidivrs
loopne
adc
push
add
scas
cmpsb
test
pushf
outsb
sbb
cmp
hlt
or
mov
sbb
xor
mov
mov
stc
pop
xor
das
inc
fimull
inc
leave
cmp
std
xchg
imul
hlt
mov
jge
jp
inc
imul
dec
lret
stc
mov
fs
inc
stc
rcrb
cli
push
xor
xchg
lret
pop
jge
push
insl
mov
inc
dec
push
jl
mov
mov
popf
xchg
xor
je
cmp
out
fisttpll
in
icebp
adc
inc
mov
cmc
neg
out
sub
push
xor
ss
popf
add
cli
lods
sbb
test
push
dec
call
sarl
popa
cli
mov
scas
dec
xchg
hlt
lahf
dec
mov
clc
adc
test
jecxz
cmpsb
pop
adc
stos
roll
and
mov
cmp
out
and
push
pushf
xchg
imul
jnp
cwtl
and
arpl
mov
inc
xchg
jno
or
rclb
dec
icebp
test
insl
xor
mov
mov
lahf
lret
mov
sbb
or
outsb
inc
push
frstpm(287
lahf
cltd
cli
shrb
cwtl
pop
adc
js
mov
xchg
push
and
test
and
and
rcr
cmpsb
outsb
test
sub
inc
or
cmc
mov
push
push
push
out
pushf
xchg
fcomps
int
fistl
adc
sbb
cmp
push
mov
cmp
dec
mov
in
push
or
fists
fildll
lods
fcoml
iret
ljmp
mulb
popf
pop
dec
je
loop
lret
push
test
loopne
jg
pop
xchg
dec
lea
call
mov
fdivs
mov
cli
fstl
xchg
lds
ljmp
sbb
xor
lods
xor
pushf
insb
adc
mov
sbb
or
pop
out
or
daa
jb
cmp
sbb
icebp
scas
out
mov
push
lock
mov
out
mov
in
aas
push
test
mov
je
and
fistl
or
push
and
xchg
and
pop
xchg
sub
stos
fistpll
cmovns
pop
decl
out
mov
dec
out
pop
test
mov
adc
mov
cmp
mov
adc
add
in
or
mov
out
xchg
fcomps
push
ror
sub
and
sbb
in
das
inc
inc
or
mov
movsl
scas
sti
sub
iret
ret
and
loopne
jecxz
int3
sti
mov
fstpl
ss
mov
mov
inc
pop
pop
adc
xchg
push
js
add
ds
les
popf
and
and
aam
cs
insb
inc
adc
mov
pop
fs
pushf
pushf
mov
daa
test
test
jbe
fistl
xlat
pop
out
out
sbb
adcl
mov
adc
mov
xchg
int3
rep
sbb
imul
outsl
test
repz
cmpsl
rolb
shlb
dec
pop
dec
sbb
inc
insl
jnp
mov
stos
add
sbb
mov
jmp
sbbl
mov
xchg
nop
jb
push
xchg
mov
gs
push
mov
dec
pop
mov
jbe
mov
cmc
add
jecxz
cs
push
dec
mov
in
push
aas
xor
cmp
or
mov
sbb
sbb
or
ss
mov
or
mov
add
dec
nop
lahf
jae
push
inc
insb
sti
cmp
fcoms
imul
in
sub
cmp
into
jno
shll
mov
hlt
push
pop
leave
push
mov
push
sub
rcll
push
mov
gs
xor
pop
dec
mov
sub
inc
cmp
outsb
enter
cmp
mov
std
jl
and
sub
fs
xchg
mov
fsubs
lods
jb
arpl
xchg
test
test
inc
or
mov
lock
cmpsb
jb
stos
mov
lods
mov
rorl
leave
vrsqrtss
cmpsl
pop
ret
push
stos
cmp
xor
addr16
push
push
leave
mul
int3
mov
xchg
inc
jb
lret
testb
das
sarl
inc
sbb
cli
jne
mov
xor
hlt
ss
iret
fists
shr
add
add
lods
sbb
nop
sub
bound
rcrl
sbb
cmpsb
pushl
scas
cmp
cmp
adc
outsb
jle
cmp
inc
push
xchg
shrl
arpl
mov
push
loope
aam
adc
in
mov
das
cmp
mov
sub
xchg
adc
inc
lret
xchg
inc
mov
adc
mov
mov
jnp
adc
test
pop
add
cmpsl
xor
sbbb
lods
ds
jg
sahf
pop
fcmovbe
outsl
je
dec
loopne
sbb
popa
mov
dec
push
fs
in
roll
cwtl
iret
push
popf
out
outsb
notl
mov
push
sbb
push
mov
jl
lret
lcall
add
and
sbb
pop
adc
inc
lahf
cmp
into
jnp
jno
loop
insl
xchg
insl
mov
stos
xchg
mov
push
dec
lret
jbe
push
xchg
mov
test
jae
int
mov
jl
jg
inc
cmp
xorl
mov
dec
push
cs
out
in
stos
fistps
jmp
add
iret
dec
test
cld
fistps
mov
adc
ficoms
in
fldt
js
or
mov
and
mov
xor
sahf
push
fwait
int
push
js
jge
xchg
push
movsl
ror
jne
lods
pop
ljmp
jp
add
nop
adc
and
pop
push
icebp
fmull
outsl
je
pop
sub
arpl
sbb
dec
jb
dec
outsb
sub
xor
jae
cli
pop
jno
mov
jg
sbb
pushf
cmpsl
fadds
and
insl
cltd
xor
repnz
arpl
in
mov
sbb
lret
lcall
ljmp
insb
rcrl
mov
insl
push
popa
dec
fcmovnb
faddl
and
and
pop
jbe
mov
mov
xor
push
insl
ret
arpl
fdivrs
cmp
push
push
ss
or
pop
lods
lahf
sub
xor
out
mov
dec
fcmovnbe
pop
mov
jbe
add
xchg
jmp
dec
sub
push
sub
xchg
mov
les
icebp
add
iret
jge
bound
add
inc
test
push
push
lock
rcll
xchg
and
xchg
sahf
mov
inc
jl
push
loop
dec
mov
dec
subl
outsb
adc
fmul
imul
out
jge
out
mov
mov
mov
pop
dec
mov
add
loop
les
sub
dec
pop
push
into
int3
push
cltd
mov
push
mov
popf
mov
adc
call
pushf
sub
inc
lret
mov
outsl
jmp
cmp
mov
aas
shrb
gs
jge
mov
lock
and
mov
or
push
cs
icebp
stos
inc
enter
subb
icebp
enter
push
sbb
adcb
pop
daa
sarl
adc
jmp
sbb
or
in
aas
orl
pop
stos
push
pop
xchg
mov
lock
cmc
shlb
cs
les
sbb
repz
aas
push
dec
cmc
aam
pop
push
dec
push
les
push
cmc
jae
movsl
outsl
add
outsb
jb
and
push
dec
mov
scas
aad
orl
inc
xor
gs
xchg
insl
mov
pop
xor
clc
shlb
cmp
pushf
hlt
and
and
repnz
mov
pushf
cmpsb
fsubr
xor
inc
arpl
and
scas
das
inc
xlat
lcall
dec
packuswb
jmp
lea
jp
mov
lods
xchg
pop
arpl
es
push
xor
test
cmp
pop
and
jle
adc
loope
js
aam
daa
push
xchg
shll
dec
push
inc
mov
or
sbb
cld
andb
jg
shl
ret
add
dec
dec
nop
notb
fcompl
xor
mov
sub
repz
jecxz
leave
mov
bound
sbb
pop
cs
cmpsl
ror
fs
pusha
fimull
sub
fmulp
sbb
data16
cmc
dec
lahf
sti
hlt
xchg
dec
mov
lods
stos
jl
or
dec
gs
jp
mov
push
in
adc
out
jae
mov
or
cli
stc
jecxz
into
sbb
inc
jp
xchg
mov
loop
cltd
das
push
add
push
fcoml
add
sbb
inc
sbb
outsl
outsb
cmp
add
pusha
pop
jb
in
add
push
or
lds
adc
sbb
dec
insb
pop
inc
movsl
stos
pop
fmulp
icebp
cmc
mov
enter
cmp
xor
fidivs
dec
jns
sbb
dec
ss
sbb
push
push
cmp
fdivrs
aas
in
pop
ret
pusha
or
sub
mov
inc
test
pushf
sub
lret
mov
aam
in
mov
inc
lock
or
popf
in
pop
cs
sbb
int3
cmp
imul
movsl
icebp
out
inc
xchg
jmp
jmp
jae
test
push
sub
xchg
fdivrs
test
xchg
mov
jl
sti
mov
cmp
cmpsb
xchg
dec
pop
outsb
sub
jl
cmp
cmp
mov
or
jl
es
lods
push
mov
lzcnt
jne
mov
in
test
shll
outsb
sub
scas
and
sahf
dec
mov
fists
mov
movsb
dec
mov
pop
or
push
push
inc
pop
inc
in
int3
push
xchg
in
inc
sub
or
rorl
cmp
lea
gs
movsl
fsubl
xchg
mov
fists
mov
jg
fwait
jle
aas
push
push
call
dec
jecxz
adc
jns
adc
and
fildll
sub
iret
push
sub
test
jb
sbb
sbb
notl
adc
sub
cmp
pop
dec
push
and
mov
inc
fisubs
bound
test
mov
movsl
in
xchg
adc
scas
loop
fisubl
and
or
xchg
lods
adc
mov
scas
in
cmp
cmc
add
call
pop
mov
mov
and
pop
adc
mulb
scas
icebp
adc
xor
bound
cltd
mov
fwait
dec
xchg
roll
repz
into
adc
dec
mov
scas
push
fsts
aaa
stc
arpl
repnz
dec
jbe
mov
add
xchg
mov
enter
xchg
inc
sub
mov
and
mov
or
cmc
inc
jge
push
mov
divl
add
jl
ret
popa
push
pusha
repz
insb
adc
pop
jb
jb
rclb
popa
loop
pop
pop
cmpsb
dec
lock
bound
pop
out
jo
sbb
inc
pop
cs
mov
add
sub
daa
movsb
cli
cmp
push
out
out
testb
jne
call
xchg
hlt
pop
movsb
push
sub
push
pop
fldl
popa
shll
movsl
jno
push
data16
pop
and
jmp
adc
inc
addb
xchg
pop
out
sub
inc
or
shrl
or
pop
xchg
mov
dec
jae
sub
lret
mov
nop
hlt
loopne
out
and
pop
mov
mov
sbb
dec
mov
sbb
shlb
push
out
jge
aam
mov
xchg
pop
insl
push
pop
scas
push
enter
loope
mov
push
int3
mov
loope
cmpsb
adc
sub
dec
je
jno
rcr
fsin
sbb
pop
jns
icebp
jne
mov
fbstp
mov
add
ljmp
pop
vmwrite
inc
lods
pop
hlt
fidivl
out
and
mov
nop
popa
jbe
je
pusha
lods
outsl
cmc
cmpsl
adc
test
scas
sarl
cmp
in
mov
rclb
or
adc
mov
cltd
dec
fwait
scas
mov
jg
push
pop
push
nop
push
out
insb
aad
aas
or
orb
jmp
xchg
sti
test
inc
and
dec
test
xlat
adcl
mov
and
add
inc
shlb
icebp
mov
fsubs
int3
or
into
inc
inc
or
cmc
push
dec
xor
mov
sbb
or
inc
push
ret
rcrb
in
mov
dec
iret
jb
push
fs
mov
jp
stos
clc
cmp
mov
or
or
decl
stc
jg
dec
pusha
loope
in
add
add
xchg
std
xor
mov
push
pop
adc
cmp
dec
lret
test
pop
xor
cmpsb
fimull
push
in
mov
out
dec
pop
mov
sbb
mov
pop
adc
hlt
cwtl
cmp
in
and
dec
sub
in
into
or
icebp
sbb
cmc
jecxz
pop
repz
fnstenv
fimull
aam
pusha
loopnew
das
mov
mov
test
adc
pushf
fwait
add
sbb
jge
sti
in
stos
mov
mov
dec
sub
jmp
in
push
xor
add
loop
mov
mov
frstor
ret
mov
xorb
fisubrl
mov
dec
ljmp
pop
dec
out
cmp
cmp
adc
xlat
or
inc
inc
or
daa
movsb
insb
push
aam
mov
lcall
jb
mov
jl
jo
int
jg
pop
sub
push
ljmp
inc
enter
int
repz
loop
xor
cltd
ja
mov
adc
ja
or
hlt
jg
add
inc
xchg
movsb
jp
push
mov
dec
rcll
sub
loopne
cmp
je
mov
xchg
pushf
int3
pop
sbb
pop
add
push
lret
jg
mov
and
dec
pop
cmpsb
ret
push
popa
fs
push
sub
out
xchg
xor
push
pop
cld
sbb
or
cmpsb
inc
mov
jbe
mov
pop
ret
enter
push
shlb
adc
fmul
int
dec
mov
dec
sub
push
xorb
popa
mov
popf
cwtl
mov
mov
cmp
pop
pop
adc
mov
push
aad
pop
bound
mov
cmp
pop
inc
testl
sbb
inc
sahf
cmp
test
iret
in
shl
push
int3
call
add
add
popa
jb
mov
jge
xor
jg
xchg
jno
mov
jnp
movsl
push
push
fisubrl
jns
outsl
arpl
out
or
xchg
test
out
xchg
push
jp
int3
shlb
lahf
pushf
rolb
or
adc
insl
les
fldcw
stos
bound
adc
add
jmp
faddl
rcrb
or
movsl
loopne
pop
xor
fidivrl
jbe
mov
loopne
adc
mov
mov
aad
nop
sahf
leave
std
push
xor
ds
xor
mov
cwtl
or
in
adc
lods
inc
fldt
data16
adc
cwtl
jbe
xchg
lods
lds
push
jecxz
stc
clc
and
xor
xchg
stos
pop
loope
mov
lods
lds
mov
push
jmp
sbb
fiaddl
xlat
pop
jnp
inc
sbbl
push
psubusb
mov
mov
dec
push
inc
loope
sub
mov
jne
dec
leave
sti
mov
arpl
repnz
adc
push
push
mov
fstl
push
repnz
xchg
push
dec
sbb
mov
jbe
lea
xor
mov
sbb
dec
push
xchg
jnp
adc
inc
loop
repnz
cmpsl
jo
clc
fsubs
call
lods
and
aad
or
or
shlb
xor
pushf
push
mov
jb
and
lret
test
sub
pop
and
test
mov
xchg
push
roll
stc
cmp
jns
ja
dec
mov
add
mov
ret
mov
out
repz
jb
sbb
jne
pop
enter
ljmp
loope
xor
test
xchg
add
cmpsl
add
inc
pop
add
sub
inc
inc
shll
js
fisubl
cmp
xchg
push
jge
clc
xchg
imul
xchg
nop
xlat
cmpsb
dec
sti
bound
shl
sub
cmp
push
iret
aas
cmpsb
lock
fwait
and
adc
lret
or
call
sub
cmc
add
add
or
lods
cwtl
xlat
lret
cmc
pushf
call
jnp
fimull
push
mov
idivb
sti
jnp
movsl
adc
mov
or
mov
outsl
xchg
repz
inc
mov
frstor
xchg
movsb
sahf
into
xchg
outsl
repnz
or
xor
or
div
fnstsw
sbb
call
add
pop
add
out
je
scas
mov
das
push
movsb
mov
adcb
fimull
daa
and
mov
call
sbb
subb
pop
xchg
pop
mov
mov
mov
ud2
stc
fmull
add
push
and
adc
int
int3
pop
mov
sbb
pop
sbb
xchg
aam
inc
jecxz
repz
fcomps
push
dec
add
add
dec
scas
sub
roll
or
les
jmp
imul
ret
push
inc
lea
mov
adc
repnz
fbld
xor
cmp
test
test
sub
mov
dec
or
xchg
add
lret
loopne
mov
pop
add
cld
es
lds
push
call
stos
mov
outsb
push
mov
cmpsb
mov
pop
ja
cmp
loopne
mov
scas
push
and
push
add
sbb
aaa
inc
out
movsb
aaa
cmp
dec
cltd
pop
idivb
adc
mov
outsl
mov
sub
cs
rcrl
data16
pop
adc
and
push
jl
xchg
or
test
movsl
adc
movsb
enter
movsl
dec
mov
stos
lret
push
xchg
cmc
jae
in
or
daa
add
add
mov
sub
and
sub
push
inc
arpl
pop
fscale
xor
ds
xor
lods
inc
sahf
andl
inc
jg
js
popa
jnp
gs
lret
je
stos
jecxz
aas
add
lcall
lods
rol
xchg
ljmp
cld
sub
ljmp
call
mov
hlt
xchg
shrl
xlat
bound
fidivl
cmpsb
inc
lcall
add
loop
mov
arpl
add
push
cli
and
rolb
fsubs
pop
xchg
sub
or
aas
add
pop
pusha
movsb
rolb
push
scas
adc
ret
mov
sahf
mov
sar
mov
outsl
loop
dec
iret
push
mov
out
nopl
cmp
in
xorb
mov
xchg
aam
out
or
xchg
ja
sub
pusha
ficoml
pop
mov
incb
out
push
mov
adc
xor
fildl
rclb
jp
xor
and
mov
orb
mov
ljmp
std
iret
fcoms
mov
shll
or
xchg
outsl
imul
es
jbe
add
pop
inc
leave
das
movsl
sub
pop
cltd
inc
push
call
imul
mov
fwait
sub
cli
ja
fs
push
sub
xchg
push
pop
push
cs
stc
repz
sub
pop
lea
pop
mov
aam
push
out
mov
enter
out
and
or
push
adc
shrb
pop
filds
inc
andl
lcall
shrl
push
xchg
movsl
repz
nop
int3
mov
imul
lar
pop
push
sub
sbb
add
fstpl
fstpl
push
or
add
shl
ljmp
and
or
jbe
mov
ret
sub
bound
xchg
mov
aam
loop
ljmp
cmp
flds
dec
sbb
loope
mov
mov
jp
or
add
call
add
mov
jo
movsb
add
mov
add
xchg
fcompl
mov
lret
add
jns
inc
mov
or
lret
mov
pop
pop
adc
push
jne
cmc
and
pop
shlb
mov
lret
adc
and
movsb
pusha
jo
nop
popa
insl
pop
cmp
imul
or
sbb
jg
jae
jns
clc
repnz
pop
and
arpl
out
mov
mov
jle
lock
pop
aad
jmp
outsb
js
or
les
subb
ficompl
aaa
daa
mov
rcl
pop
imul
dec
cltd
lods
cli
jl
lcall
mov
dec
imul
ds
and
out
inc
stc
push
outsl
dec
and
xchg
movsl
jnp
ret
xorl
xor
adc
mov
adc
fistps
int3
and
test
dec
lods
pop
inc
jbe
cld
loopne
pop
mov
sub
mov
out
hlt
xor
jle
mov
popf
stos
data16
push
jne
or
fdivrp
mov
ljmp
xchg
jb
mov
add
cmpsl
mov
adc
cmpsb
sbbb
mul
ret
lret
and
inc
cli
into
sub
insl
adc
jne
leave
xor
pop
cltd
movsl
stos
and
mov
in
mov
cmp
mov
fs
enterw
mov
push
ljmp
stc
mov
sub
lds
jbe
scas
repz
test
mov
jno
fldl
adc
mov
mov
aas
ror
test
jae
stc
xchg
in
push
negl
in
out
xchg
stos
shll
xchg
out
sub
arpl
lods
dec
xchg
mov
popf
pop
popa
lcall
ja
bound
testb
fs
dec
sahf
mov
add
pop
loopne
push
ret
fwait
test
cmp
sub
jmp
cmp
add
lds
lret
push
call
xor
lods
mov
mov
aad
fimull
fsubrp
clc
mov
dec
pop
pop
pop
fdivl
or
xchg
adc
dec
sub
mov
xor
cmpsb
sbb
pop
jecxz
jbe
add
sbb
xor
sti
mov
stos
fxch
mov
sub
lea
aad
xor
mov
mov
mov
jnp
xchg
mov
xchg
test
les
sbb
cmp
sahf
mov
roll
pushf
adc
jge
hlt
outsl
push
mov
sbb
push
or
xchg
push
add
jecxz
sahf
mov
mov
bound
es
sarl
push
mov
jbe
xor
mov
hlt
dec
andl
and
daa
out
and
add
sub
cwtl
decl
xor
adc
xor
mov
mov
sbb
cmp
jg
scas
adcl
fstps
mov
lret
rcr
jb
insb
jl
add
push
ljmp
and
ja
adc
test
cli
cbtw
call
mov
xchg
pop
push
arpl
into
lods
mov
xor
hlt
mov
out
push
sbb
sbb
mov
aad
mov
outsb
add
xor
sti
cmp
lock
scas
rorb
jl
sbb
pop
inc
sub
pusha
in
repz
mov
jb
or
push
jae
or
inc
sbb
loope
sbb
stc
lock
sahf
add
outsl
push
fnstenv
sub
shll
lahf
data16
or
sub
fwait
xchg
xchg
ret
push
push
adc
cmp
int
ljmp
enter
push
fcmovu
sbb
push
cltd
test
xor
nop
pop
andb
xchg
and
jge
lods
sub
loope
pop
and
fsubl
add
sbb
daa
add
mov
enter
scas
dec
or
and
rcrl
push
mov
jo
sti
dec
movl
jno
fistpl
push
mov
cli
insb
mov
scas
andl
sti
lcall
call
je
adc
ficomps
sub
and
xlat
popa
adc
push
in
iret
cmp
pop
push
sbb
popa
fadd
fs
and
add
add
jmp
shll
xor
sub
mov
xchg
inc
stos
arpl
insl
push
add
inc
jmp
out
inc
jle
jmp
lea
aam
mov
xchg
outsb
sub
pop
in
pop
pop
les
outsl
ss
jo
sub
insb
push
pusha
mov
popw
jae
icebp
pop
push
push
jge
sarb
push
ficoml
pop
pop
ljmp
aam
add
add
sub
sub
cmp
dec
subb
push
xchg
cmc
jae
stos
dec
cmp
dec
stos
jg
pop
fstpl
outsl
add
push
or
and
push
jp
insb
cmp
push
mov
imul
sbb
add
outsl
push
cmc
mov
ret
or
ds
sbb
mov
fiaddl
in
xor
xor
into
cmp
inc
push
call
add
or
das
lods
lods
xchg
shl
inc
inc
lret
addl
cmp
enter
dec
mov
inc
add
ljmp
mov
add
fnstsw
mull
scas
leave
mov
ss
dec
xchg
mov
dec
xor
push
sbb
ret
shlb
push
outsl
add
jbe
lods
daa
test
data16
xchg
inc
scas
xchg
xchg
add
or
test
cmpb
pop
sub
jl
add
arpl
scas
xor
jmp
jns
lret
add
in
std
or
rol
and
fsts
imul
cld
test
insl
mov
or
vmovdqu
test
or
dec
cmpsl
jecxz
dec
test
pop
or
add
out
pop
lcall
hlt
je
std
sbb
mov
in
mov
dec
jp
cwtl
jmp
pop
mov
and
and
nop
and
ja
mov
fisubrl
push
pop
test
and
cmpsb
clc
movsb
clc
aas
testb
inc
jg
adc
xor
add
test
push
cli
lods
cmc
je
and
xor
or
negl
mov
popa
int3
clc
cmc
jns
out
iret
aad
fadd
sahf
xchg
addr16
dec
push
data16
dec
adc
ret
scas
pushf
pushf
fbstp
lods
cmp
jecxz
xchg
mov
loopne
mov
lods
lods
pop
popa
add
pop
and
adc
movb
cld
sub
std
imul
sub
out
jbe
sahf
adc
mov
mov
dec
push
mov
add
sub
xchg
jns
call
mov
dec
ljmp
push
push
inc
jae
fcmovb
outsb
sub
pop
sbb
mov
jb
inc
mov
imull
mov
test
add
cmp
pop
mov
stc
dec
add
pop
repz
jno
mov
aaa
xchg
jnp
in
jo
jbe
pop
fnsave
jmp
je
fsts
pop
outsb
cmpsl
andl
mov
xor
cmp
cmp
leave
xchg
pop
jnp
repz
mov
add
in
cmp
cmp
xchg
scas
cmp
add
out
outsb
sti
int3
jae
push
and
bound
setl
rcrb
cmpl
push
adc
sahf
add
outsb
dec
inc
leave
cmp
in
orl
shll
jne
sub
jnp
call
xchg
clc
dec
hlt
loopne
mov
jne
rorl
and
xchg
in
popl
adc
sti
cmp
out
jae
movsb
outsb
test
sub
cmp
mov
dec
lock
xchg
pop
call
lds
in
out
fldcw
pop
cmp
jbe
cwtl
mov
cs
pop
lahf
outsb
xchg
stc
fstps
loope
jl
inc
cltd
or
frstpm(287
outsb
lds
mov
lcall
jo
lret
mov
mov
test
cwtl
inc
jle
inc
ja
mov
cmp
sub
lds
pop
inc
jp
mov
jno
jge
sub
mov
dec
inc
mov
repz
or
imul
std
xorl
mov
andl
inc
test
and
inc
xchg
pop
sub
outsb
or
aad
xchg
or
dec
imul
adc
mov
push
std
mov
ror
lods
xor
mov
notb
jo
sbb
cmp
sub
mov
or
dec
sbb
jge
mov
repz
push
pop
sub
and
hlt
adc
mov
orl
and
jae
mov
fs
add
ds
imul
loopne
inc
pop
dec
insb
jbe
sub
lret
push
leave
nop
push
movsb
je
add
lds
dec
sbb
add
push
ljmp
inc
mov
pop
insb
fildll
mov
cmp
sbb
std
add
add
cs
sahf
test
push
sub
clc
mov
and
loope
insl
or
jle
fcoms
dec
mov
jo
pop
cwtl
mov
or
enter
imul
pop
hlt
or
cwtl
mov
ret
mov
in
ret
outsl
shll
cmc
pop
into
faddl
outsb
div
arpl
cwtl
lea
clc
cltd
stos
push
and
dec
pop
mov
insl
fldt
out
add
pop
mov
data16
enter
lret
push
or
xor
ret
dec
stc
js
dec
loope
fidivl
add
insl
mov
iret
and
shrb
mov
in
mov
mov
je
les
adc
scas
jb
mov
pop
cmp
mov
sbb
cltd
rcr
dec
push
inc
pslld
sub
sahf
add
sar
std
dec
sbbb
sbbb
mov
dec
or
ret
dec
sarb
cmp
test
and
in
sahf
repnz
mov
push
inc
xchg
repnz
ret
mul
add
inc
inc
rcrb
pop
add
add
cltd
sahf
lcall
insl
cmp
mov
mov
call
icebp
sub
pushf
stos
stc
lret
packuswb
xchg
ss
sarl
lahf
lret
push
adc
sbb
loopne
dec
popa
in
add
xlat
mov
clc
pop
add
add
dec
xchg
xchg
aas
lret
pop
and
pop
lods
jno
popf
into
rcl
xchg
and
and
xchg
cli
sub
clc
shr
dec
mov
loope
int
pusha
test
or
arpl
das
adc
jo
test
test
and
add
insb
jl
dec
fdivrs
push
mov
jnp
sbb
int3
push
mov
data16
pop
rorb
pop
sbb
imul
test
xchg
xor
mov
out
jae
add
pop
pop
xor
ret
jmp
mov
data16
das
clc
mov
jb
outsl
jg
push
fstl
jmp
mov
outsb
stos
pop
push
adc
or
xlat
jmp
jl
adcl
xlat
push
outsb
xchg
cs
lret
inc
out
mov
in
mov
stos
loopne
pop
outsb
jg
sahf
and
xor
hlt
rclb
aaa
setbe
ret
sbb
cli
out
enter
test
cmp
ret
sbb
dec
add
jae
scas
mov
xor
in
adc
lea
lahf
pushf
mov
jno
movsl
xchg
jno
xchg
sbb
es
adc
mov
dec
fwait
sbb
inc
mov
add
mov
push
mov
xchg
jg
mov
mov
fisubl
lcall
mov
inc
adc
xchg
xor
leave
pop
daa
adc
out
lds
cs
test
mov
sub
add
mov
cmp
xchg
addb
sub
or
imul
pop
outsl
or
mov
in
fistpll
rcrb
mov
cmpsb
xor
xlat
xor
movsl
jno
adc
inc
dec
mov
push
jnp
cmp
cmp
mov
sbb
sub
je
inc
shl
jecxz
cmp
nop
push
mov
mov
mov
push
arpl
xchg
mov
clc
arpl
in
in
push
test
adc
imul
in
mov
fadd
fisttpl
inc
es
pop
xor
sub
int3
adc
cs
pushf
pop
fwait
repnz
pushw
jno
mov
jp
sbb
shll
push
rcl
incl
mov
loop
lds
mov
add
inc
aam
mov
mov
stc
scas
jg
pop
aam
shl
js
sbb
cld
jo
jp
add
bound
xchg
mov
jnp
scas
cmpsl
mov
add
stos
xchg
mov
fwait
int3
mov
mov
xchg
dec
pop
dec
mov
dec
push
push
sub
xchg
dec
adc
ja
jne
or
movsl
lods
mov
lods
das
jge
jge
xchg
inc
pop
sbb
mov
jg
mov
setae
mov
adc
dec
incl
inc
mov
push
mov
sbb
loope
out
cmpsb
pop
or
roll
mov
test
adc
lcall
inc
adc
ret
data16
cli
mov
imul
loop
scas
jae
dec
jg
push
add
push
mov
mov
loop
loope
out
or
sub
lahf
fsubs
mov
fdiv
and
jle
outsb
pop
cltd
in
jae
mov
push
out
push
pop
out
pop
mov
fidivs
out
pop
pop
adc
das
mov
mov
pop
push
orb
test
and
add
adc
mov
sub
gs
clc
rorl
sbb
je
xor
jle
into
and
inc
aam
or
xor
cmp
shl
mov
ds
add
rcrl
jle
push
jae
out
push
mov
sub
movsb
subb
xor
mov
push
test
or
xchg
push
out
push
pusha
pop
lods
jge
pop
icebp
inc
mov
shrl
pop
in
outsb
es
daa
jg
jp
adc
jo
pop
mov
aaa
push
in
stos
testl
sub
mov
testb
in
mov
popf
pminsw
mov
arpl
imul
cmpsl
jne
xor
xor
pop
sbb
outsb
xchg
xchg
xchg
lahf
cmpsl
sbb
out
repnz
lea
cmp
movsb
mov
jne
int
scas
lahf
inc
inc
movsl
and
jp
jns
jbe
inc
mov
rorl
pusha
pop
imul
out
roll
mov
aas
test
cmp
lcall
mov
popf
add
daa
aaa
push
fistpl
in
loope
xor
les
sub
jae
enter
mov
pop
jge
test
out
js
jne
jmp
mov
xlat
js
ficoml
dec
mov
scas
mov
movsl
dec
out
hlt
ja
mov
or
rcll
arpl
push
ss
jp
jnp
repz
inc
and
stos
test
sbb
add
imul
repz
jne
add
mov
ret
pop
mov
pop
leave
cmp
xchg
cmpsl
xchg
or
aaa
xchg
add
add
shll
jl
insb
lahf
mov
pop
inc
dec
push
cmpsb
xchg
movsl
cld
pop
mov
dec
decl
arpl
lock
cmpsl
out
add
jge
jg
mov
dec
push
push
or
add
ret
mov
ret
imul
mov
add
and
mov
mov
mov
sbb
inc
pop
xchg
les
cmp
ror
sbb
jmp
enter
xlat
popa
popa
lds
nop
arpl
mov
cmc
in
jbe
call
dec
add
xchg
ja
scas
rcrl
push
ret
lret
into
jae
dec
mov
push
mov
jge
mov
mov
inc
insl
in
mov
call
cmp
lea
fbstp
nop
aaa
jno
shl
jne
jno
push
call
lock
cmp
aad
xor
add
aam
add
cmc
add
rol
fnstcw
pop
mov
adc
out
and
mul
inc
cwtl
push
jp
pushf
cwtl
sahf
xchg
mov
jo
add
add
out
out
mov
jno
pop
std
enter
sbb
cmc
test
test
gs
mov
inc
js
dec
cmc
cmp
push
push
xor
sub
inc
mov
mov
arpl
xchg
scas
dec
mov
add
pop
cltd
mov
xor
repz
push
stos
in
push
int
mov
andb
out
inc
stc
and
repnz
div
pop
ret
inc
and
pop
leave
mov
cmc
maskmovq
or
popf
ljmp
jge
rorl
sub
jmp
movsl
xchg
loope
and
fdivl
fisubl
ss
and
or
mov
add
adc
mov
or
aam
in
add
cmp
cmc
inc
cmpsl
andb
mov
mov
or
clc
push
daa
aam
xchg
fldenv
push
sti
fsubrp
lods
popl
pop
mov
pop
movsb
xchg
inc
movsl
bnd
or
mov
call
adc
mov
les
adc
mov
dec
movsl
rcll
mov
loope
lea
not
insb
in
ret
push
lret
dec
test
imul
fucomp
scas
jbe
cwtl
movb
xor
inc
sub
dec
inc
rorb
int3
add
push
out
loopne
push
daa
dec
iret
stos
repz
scas
shll
adc
inc
mov
jns
loopne
xchg
pop
push
cwtl
inc
inc
in
pop
pop
and
dec
test
imul
lcall
scas
sub
mov
imul
mov
xchg
cmpsb
inc
fcmovnb
add
jb
mov
cmp
std
gs
inc
push
repz
fdivs
inc
popf
inc
jmp
or
push
aas
mov
push
loope
je
js
jp
push
mov
in
xchg
fbld
jp
jns
xchg
or
lret
push
add
movsb
xchg
testl
or
pop
stos
inc
rolb
mov
lret
lds
ds
mov
pop
movsl
sbb
or
mov
adc
imul
pop
subl
add
bound
addr16
test
push
xor
and
adc
ret
jo
jg
or
mov
lcall
les
pop
inc
out
call
push
into
test
sbb
jg
lock
or
inc
jno
pop
pop
adc
pop
shll
mov
addr16
add
jne
xchg
divl
pushf
ja
ret
mov
jmp
lds
ja
fmuls
fwait
mov
mov
arpl
xlat
jns
leave
ss
push
or
inc
mov
lcall
lock
gs
or
rcrb
xor
dec
inc
out
pop
pop
cmp
add
into
mov
dec
shl
sti
aas
cmp
fwait
stos
fwait
add
lods
mov
pop
decb
xchg
decb
push
push
sub
xlat
xchg
mov
xor
ss
inc
cmp
pop
push
push
adc
cmp
in
outsb
es
xchg
inc
fchs
adc
mov
sbb
pop
pop
fistps
jge
cltd
addb
push
out
jecxz
ret
fildl
fnstsw
fnstenv
inc
adc
cmpsb
pusha
sbb
mov
scas
out
or
push
mov
xchg
cmp
mov
xchg
adc
stos
mov
mov
call
lret
data16
outsl
mov
cmp
or
lcall
xchg
ss
repz
cmp
mov
frstor
orl
mov
insl
sub
pop
add
out
cmpsb
int3
dec
sub
hlt
out
mov
dec
movsb
push
push
scas
outsb
sbb
into
test
out
mov
inc
movl
rcrb
adc
push
test
add
add
lahf
jg
arpl
movsb
arpl
arpl
dec
mov
stc
imul
pop
je
ja
push
sbb
out
mov
pop
iret
pop
lret
lods
icebp
adc
test
jb
sbb
push
add
cwtl
or
in
xchg
push
push
ss
sbb
scas
dec
jb
jno
push
icebp
mov
push
xorl
out
sub
incb
arpl
mov
jno
adc
ficomps
mov
jno
dec
xor
jne
jmp
repz
jns
adc
cs
lods
in
jl
fimuls
ret
stos
xor
cmc
sub
add
pop
jmp
dec
xor
mov
test
insb
xchg
outsl
adc
cmp
and
sub
or
fsubs
jb
xchg
out
or
cmp
pop
lods
in
or
mov
dec
jmp
and
test
sub
sub
aam
mov
jecxz
lock
outsl
sbb
add
add
or
lahf
jne
inc
sbb
push
inc
lcall
les
pop
shl
and
mov
xchg
xchg
inc
mov
mov
cmp
lods
and
mov
mov
mov
xlat
daa
and
cld
pop
and
jge
into
insl
mov
or
inc
mov
jb
or
aam
out
cmpsb
in
lcall
in
cltd
gs
and
in
dec
jae
push
ret
test
mov
cmp
xor
int
dec
sbb
inc
xchg
pop
xor
add
xor
push
out
add
inc
out
notb
or
in
push
gs
inc
mov
loop
jo
xchg
cld
aaa
pop
bnd
nop
xchg
pop
out
sub
sarb
sub
push
cs
xchg
or
and
adc
cli
mov
mov
shl
and
sub
enter
call
jb
adc
inc
rcl
mov
and
xor
pop
jmp
or
lcall
mov
stos
movsb
pushf
lds
jbe
lret
std
push
in
cmpsb
cmp
jb
aaa
push
jecxz
sub
movsl
or
mov
push
xchg
pop
and
inc
dec
mov
or
mov
pop
dec
jmp
push
adc
ss
push
js
or
jg
std
adc
mov
or
mov
push
sbb
cmp
sarb
inc
sbb
jnp
add
test
ljmp
jno
xchg
inc
adc
adc
and
xchg
in
fistps
sarl
cli
push
or
mov
iret
push
imul
add
mov
dec
xchg
jnp
gs
mov
les
loop
imul
pop
pop
iret
fwait
push
stos
sub
fcompl
aas
cmpsb
xor
sbb
sub
roll
push
inc
xchg
outsb
fdivs
fwait
jbe
dec
adc
inc
inc
lret
stos
xchg
or
push
lcall
mov
xchg
or
pusha
clc
pushl
movsl
out
sbb
in
mov
in
nop
pop
aas
jle
lds
pushf
incl
dec
mov
ljmp
aaa
cmp
lock
xchg
cmp
dec
pop
cwtl
test
and
ret
cld
or
jmp
mov
jno
loope
addr16
mov
in
xor
push
mov
aam
push
mov
mov
mov
scas
out
dec
out
mov
int3
movb
jmp
rolb
xchg
fstpl
in
jne
imul
xchg
pushf
decl
gs
mov
nop
aad
ret
enter
fidivs
pop
aam
jg
mov
outsl
leave
aam
xlat
push
aad
repz
cmp
jbe
or
or
add
mov
loop
xor
pop
ljmp
push
jne
call
inc
test
insb
outsb
and
add
test
insb
fsubrp
pop
orb
xor
fwait
mov
sahf
and
dec
inc
cld
enter
in
xchg
rcl
ret
sub
dec
cwtl
jg
out
arpl
mov
push
out
shl
rcll
sub
adc
shrl
aaa
xchg
xor
adc
cltd
or
lock
aaa
imulb
imul
or
ljmp
inc
xchg
int
mov
jp
jnp
js
fs
cwtl
cmp
pop
cli
push
dec
addl
pop
inc
je
aad
lahf
sub
add
sbb
mov
add
inc
icebp
lahf
movsb
mov
ljmp
or
lds
and
dec
jnp
or
dec
popa
into
xor
les
inc
lock
mov
push
test
adc
lret
in
cmp
orl
shr
sbb
mov
push
pop
mov
ds
pop
mov
dec
mov
cmc
push
xor
ficoml
mov
or
dec
data16
mov
pop
mov
in
call
pop
xchg
jmp
aas
adc
mov
out
insl
cmp
int
push
fists
leave
jne
xchg
call
mov
mov
mov
jmp
pop
sub
test
pop
adc
call
or
out
xchg
mov
mov
xchg
adc
jg
jne
dec
mov
rclb
in
and
mov
test
mov
shll
jmp
jg
int3
inc
inc
out
gs
sbb
insb
jecxz
pop
cmpsl
and
aam
mov
in
cmpsb
jns
jecxz
mov
sub
and
ss
xchg
iret
adc
movsl
lea
fs
dec
cmp
sub
jns
dec
fs
and
add
fwait
inc
mov
push
jmp
lods
scas
dec
lret
pop
dec
mov
lea
inc
jae
rcl
mov
cli
les
repz
lea
sahf
call
push
pop
daa
mov
push
iret
pop
pop
push
xchg
call
divb
push
push
or
in
jbe
mov
clc
in
dec
aam
lock
loope
ds
lret
mov
xchg
out
add
shrb
mov
stos
jl
mov
sbb
repz
shlb
mov
bound
sbb
mov
push
inc
loope
mov
or
xchg
popf
insl
ficoms
nop
jge
popa
xchg
push
dec
jo
in
xorb
cmpsb
fadds
fsubrs
mov
ja
lods
fildl
ljmp
sahf
or
or
pop
aas
loopne
lods
pop
out
inc
lahf
adc
in
add
cmp
cmp
gs
jecxz
mov
cmp
nop
cwtl
faddl
neg
lods
jns
fdiv
fcoms
ss
xor
mov
scas
mov
jne
cmpb
xchg
jg
es
cltd
sti
fistpl
int
mov
hlt
mov
jmp
push
xor
mov
or
ja
fwait
insb
sbb
jne
cli
aad
sbb
movsb
ret
xchg
sub
mov
mov
pop
push
in
cmp
leave
loopne
xor
adc
lret
stos
jecxz
mov
jle
push
das
or
out
fs
sbb
jmp
repnz
orl
mov
mov
adc
push
movl
addr16
adcb
ss
insl
andb
mov
test
mov
xchg
orb
mov
jmp
mov
sbb
jle
cli
sbb
in
push
lea
inc
cmp
jecxz
insb
int3
inc
imul
movsb
cltd
mov
inc
daa
push
xorb
scas
cmp
mov
rorl
addr16
lcall
adc
adc
pop
jbe
lahf
jo
xchg
outsb
mov
outsl
cmp
jmp
out
popa
in
push
insl
mov
add
jne
sub
cli
xchg
inc
pop
in
imul
loopne
pusha
mov
adc
cli
or
sarl
add
sub
mov
repz
sub
sbb
rcll
pushl
aam
pop
imul
dec
mov
movsb
fldcw
dec
mov
fisttpl
mov
or
enter
in
and
lods
lods
imul
repz
aam
mov
ror
inc
push
xor
or
aas
mov
xor
and
cwtl
out
or
hlt
cld
nop
movsb
mov
jge
popa
jmp
daa
mov
out
cwtl
push
sbb
je
insl
shlb
loope
dec
mov
es
adc
into
jbe
ficoms
xor
cli
inc
mov
mov
inc
pop
adc
jo
push
jp
pop
dec
jmp
ss
repz
adc
xor
test
xor
and
pop
mov
mov
js
mov
inc
int
fldl
add
icebp
lds
xchg
leave
in
cmp
sub
cli
rorl
push
and
jae
cmp
loop
or
cmp
cltd
mov
inc
jne
cs
mov
jae
js
stc
add
sub
test
test
jbe
add
clc
outsb
lea
xlat
push
add
mov
test
mov
inc
pop
inc
xor
repnz
aad
xor
jns
xchg
stos
pop
outsb
test
shlb
jae
cmp
push
xor
jnp
in
dec
jb
sub
push
rcrl
jg
outsl
push
xchg
lret
inc
ss
cmpsl
into
pop
test
mov
iret
jmp
dec
aaa
dec
sbb
shrb
lret
nop
pop
adc
cmp
sub
inc
mov
inc
mov
aam
frstpm(287
negl
push
jmp
push
or
mov
dec
lods
outsb
push
cmpxchg
mov
mov
jecxz
mov
iret
xchg
mov
pop
imul
mov
cmp
xchg
jae
or
out
ljmp
call
add
mov
cmc
lea
xchg
or
dec
cmp
mov
cmpsb
clc
xchg
adc
rclb
mov
inc
mov
mov
adc
cmp
movsl
dec
loopne
pop
out
lods
fldl
test
inc
pop
lcall
daa
test
fidivl
xor
fcoms
cmp
movsl
and
xchg
mov
dec
jle
xor
aas
dec
sub
inc
xor
mov
xchg
cmp
mov
mov
mov
out
mov
add
mov
adc
mov
pop
sub
jne
imul
sub
mov
mov
outsb
fwait
mov
addr16
pop
push
in
dec
decb
pushl
rcl
ds
push
adc
mov
pop
push
lahf
pop
imul
shrl
sub
pop
jle
jne
and
pop
pusha
sarl
lds
imul
sbb
sbb
mov
lea
movsl
aas
popf
or
sbb
adc
xor
aas
cmp
addb
rol
pop
mov
pop
dec
test
adc
loope
sti
mov
and
mov
shll
sbb
nop
xor
mov
clc
cmp
in
mov
mov
mov
cmp
scas
adc
aad
adc
jbe
jno
cmp
pop
inc
in
dec
mov
mov
popa
xchg
adc
filds
or
push
add
movsb
xor
and
enter
movsl
adcl
repz
test
mov
xchg
stc
or
js
repz
jbe
clc
sub
sbb
fst
ficomps
imul
movsl
hlt
hlt
jnp
out
lea
cmp
jb
repz
pop
xor
test
arpl
jmp
mov
xchg
aas
adc
xchg
imul
nop
and
subb
dec
sub
inc
xchg
push
cmp
sub
sub
lods
das
js
scas
sub
mov
arpl
aas
xor
jo
xor
fcmovnu
sub
pop
add
and
in
loopne
inc
adc
mov
jbe
jb
stos
cmc
xchg
in
loopne
lret
dec
mov
js
mov
or
aaa
arpl
mov
test
xchg
and
ret
imul
loop
cmpsl
dec
push
stos
mov
add
lcall
stos
nop
ja
clc
cmpsl
into
iret
js
insl
mov
stc
jge
pushf
pop
data16
add
mov
push
sub
mov
ja
cmp
mov
mov
mov
adc
xchg
cmc
cmp
loop
std
xchg
repz
sarb
aaa
shll
pop
mov
lar
ret
or
das
inc
dec
aas
sub
adc
scas
lret
xchg
nop
fnstenv
cmp
cli
add
outsb
out
add
mov
jp
les
test
test
ss
std
stc
sbb
add
xor
and
scas
addb
subb
repnz
xchg
mov
notl
js
or
mov
xor
dec
jl
jno
inc
mov
fistpl
adc
add
cmpsb
add
ret
mov
push
xor
cmp
xor
sub
mov
push
jl
jae
jp
cmp
sti
adc
ret
lods
fists
outsb
bound
or
imul
cmc
scas
jae
xorb
inc
shrb
outsl
cltd
cmc
je
jmp
aaa
xchg
mov
sbb
inc
mov
cli
out
dec
push
lret
inc
sub
xlat
or
jmp
in
in
clc
int3
in
scas
out
rol
loop
rcrb
xchg
std
inc
xchg
pusha
mov
pop
int
das
xorl
adc
inc
mov
xchg
mov
loopne
insl
cmp
int3
shll
stos
inc
jl
shrb
jne
popa
cltd
cmp
mov
pop
push
push
sbb
mov
mov
sbb
inc
in
test
scas
out
cmp
xor
aad
add
mov
movsl
adc
adc
adcb
imul
mov
mov
jns
int
popa
insl
xchg
cmp
insb
lret
in
cmpsb
push
in
mov
pushf
pop
adc
sub
pop
rcll
pop
and
mov
movsb
popf
jnp
arpl
jo
in
gs
popf
hlt
dec
cs
cmp
inc
xor
push
add
dec
push
ja
repnz
xchg
pushf
mov
jge
fdivrs
popa
test
mov
xchg
adc
xchg
je
fnsave
inc
ret
int
mov
xchg
sar
sbb
xchg
cmp
adc
repnz
jno
and
inc
out
adc
xor
fnstsw
xchg
mov
mov
das
repz
pop
jg
mov
sub
loope
jp
cmp
push
pop
xchg
les
pop
or
push
call
add
je
sti
out
out
push
push
shl
inc
xor
inc
xchg
pop
dec
hlt
daa
mov
icebp
push
inc
pop
imul
call
sbb
add
mov
shlb
shl
ja
rcrb
push
jo
cli
pop
cmpb
pop
jb
sbb
ja
pop
xor
shl
pop
orl
dec
inc
hlt
repz
ret
adc
movsb
ret
jmp
mov
and
or
cld
cwtl
add
outsb
add
xchg
subl
mov
pop
in
sbb
fdivs
xlat
test
mov
mov
dec
push
and
cmpsb
mov
xchg
jae
rcll
orb
push
cmpsb
push
lcall
arpl
and
adc
sub
jnp
xor
dec
sub
outsl
add
divb
fildl
out
in
add
or
enter
push
xor
inc
mov
fsubs
mov
mov
nop
jmp
xlat
lea
incb
cmp
ror
xor
mov
xlat
imul
enter
fbld
mov
xor
repnz
pop
mov
dec
ret
popl
ficoml
mov
test
std
out
dec
sbb
addr16
xor
push
mov
cmp
ds
push
cmc
xchg
call
fdiv
pop
fucom
jmp
add
mov
jno
dec
adc
addb
pop
fcoms
enter
add
cmp
push
cli
xor
cmp
imul
mov
data16
jecxz
insb
add
push
and
aaa
xchg
arpl
dec
cmp
adc
xor
insb
sahf
inc
lods
lods
add
jle
decl
int3
pop
fisttpll
xchg
lfs
mov
mov
data16
pop
adc
movsb
mov
outsl
mov
cmp
pop
sbbl
lret
fsubrs
xchg
daa
and
inc
ret
pop
mov
loopne
mov
mov
sub
or
loop
popf
in
lock
lret
stos
sbb
ret
lods
mov
add
push
subb
pop
sub
aaa
fnsave
fiaddl
cld
sbb
add
movsb
insb
in
xor
and
dec
push
popa
xor
dec
sbb
lahf
push
insb
aaa
clc
inc
push
les
mov
xor
and
out
mov
jno
jmp
idivb
adc
fs
jns
decl
and
fwait
jle
push
bound
mov
mov
sbb
lods
cwtl
aas
lods
add
cmp
cmc
mov
repz
into
cli
mov
call
add
cmpsb
int
push
jb
loopne
sahf
cmc
ret
rcll
add
jecxz
mov
jge
fistpl
mov
or
fildl
rclb
test
andl
out
add
in
shll
jno
xor
sbb
aam
adc
sahf
ret
push
aas
mov
pop
xor
loopne
and
repz
dec
imul
out
pusha
inc
or
ss
fildll
cmp
outsb
outsb
out
loope
cmp
push
lea
pushf
gs
lret
lds
out
cmp
lock
jecxz
pop
or
xorl
and
dec
int3
add
inc
push
lock
cmp
push
mov
mov
dec
mov
cmc
jno
aas
add
outsl
pusha
pop
jge
fwait
stc
fcomps
test
adc
pop
cs
sbb
add
jno
repz
pop
xor
or
pushf
or
mov
pcmpeqd
mov
cmp
xor
out
into
xor
ret
or
in
fstpl
mov
dec
mov
jb
test
xchg
xorl
sub
cmpb
testl
fisttps
int3
xchg
push
mov
xchg
lret
lds
push
adc
or
xchg
das
adc
cmp
jno
cs
mov
into
adc
addr16
and
sbb
fadd
push
mov
mov
sbb
push
popl
cmp
lds
into
dec
push
push
mov
cmpsb
inc
cmpsl
mov
sub
lahf
stos
xchg
mov
jg
xchg
sarb
pop
inc
cmp
add
dec
mov
and
test
test
mov
testl
push
mov
rol
jge
gs
jg
int3
sub
pushf
jmp
in
ret
in
fiadds
lret
xor
shlb
add
pop
sahf
testb
sar
push
ds
and
aas
adc
or
jne
andb
pushf
popf
popa
adc
stc
fwait
neg
push
jne
aam
mov
gs
scas
fiadds
ret
push
and
add
adc
inc
shrl
jecxz
inc
lods
mov
in
adc
scas
push
add
iret
inc
mov
jns
and
fldl
cltd
aaa
out
nop
loope
jle
xchg
sbb
push
xor
cmpl
push
scas
sbb
and
fs
push
repz
shlb
mov
movsl
cld
mov
les
xor
xchg
rcrb
push
sarl
add
subl
adc
shrb
fisubs
es
mov
popf
int3
jo
cmp
insb
scas
and
jmp
xor
push
sub
in
lahf
lock
sub
imul
jno
into
lock
jnp
enter
sbb
ret
sub
bound
jmp
dec
decl
xlat
and
or
mov
repnz
push
push
xor
and
fidivl
jb
inc
push
mov
lret
push
jecxz
mov
addr16
adc
leave
xchg
sbb
adc
movsl
faddp
xchg
push
sbbl
add
pop
xor
dec
xor
dec
mov
adc
fdivrs
sbb
cs
std
ret
and
loopne
mov
sbb
jmp
inc
mov
mov
mov
loope
push
addr16
jno
mov
xchg
in
mov
jmp
mov
outsl
call
sbb
mov
movsl
inc
rorb
push
and
stos
push
inc
push
rorb
sbb
add
and
in
dec
push
je
test
adc
mov
aaa
mov
iret
rclb
pop
out
mov
mov
pop
gs
adc
add
gs
mov
and
or
or
cmc
pop
je
shrb
mov
inc
add
dec
repnz
add
das
inc
add
xchg
popa
pop
dec
adc
jge
mov
outsb
xchg
int3
add
dec
hlt
mov
mov
mov
bound
xor
pushf
pushl
adc
jno
cmpsl
and
add
hlt
sbb
jp
add
push
fwait
push
cld
pop
testb
in
icebp
jge
and
lods
inc
outsl
scas
sbb
fs
dec
jns
sub
mov
scas
push
ds
call
xchg
lods
fidivrl
cmp
mov
sbb
je
fbld
arpl
scas
lcall
or
iret
jae
jne
lods
insb
cmp
jle
std
fwait
test
adc
sub
fs
in
clc
cld
inc
repz
mov
or
pop
rcr
and
inc
mov
jnp
pmovmskb
ljmp
and
mov
sbb
xor
add
inc
sbb
jmp
into
iret
and
lahf
insl
push
and
les
push
les
iret
inc
in
lcall
inc
xlat
add
pop
cmp
loop
inc
cmp
je
push
adc
and
lret
xor
dec
pop
out
xorl
xchg
mov
fisttpll
stc
leave
push
inc
call
out
outsl
cmp
outsl
add
push
and
and
mov
jle
cwtl
adc
push
mov
inc
or
pop
inc
mov
adc
cmp
je
iret
add
mov
neg
or
pop
iret
dec
adc
and
test
push
js
mov
stos
int
shll
imulb
mov
fwait
int3
dec
subl
out
ret
add
mov
outsb
aam
pop
jl
push
pop
movsb
std
xchg
sbbl
pop
nop
add
movsb
push
lods
inc
lods
jl
xchg
into
dec
insl
dec
jne
lock
mov
adc
dec
mov
push
xor
or
dec
test
in
fs
das
pop
or
inc
shll
rcll
xor
fistpl
push
dec
dec
pop
inc
jl
icebp
jne
stos
shlb
xchg
jae
sub
or
xor
icebp
outsl
rcrl
mov
xchg
inc
xor
mov
xor
out
pop
fmuls
or
sti
jbe
outsl
sub
jge
lea
sub
lds
and
ds
and
sbb
pop
ret
jo
adc
outsb
cs
or
lret
or
jo
mov
mov
je
ret
mov
aas
sub
fsts
adc
dec
dec
sub
add
dec
std
jb
mov
and
and
or
sbb
xorb
movsl
rcr
cmc
push
mov
neg
mov
or
mov
adc
cltd
imul
cmp
jns
out
mov
and
mov
inc
sbb
stc
mov
fdivs
clc
mov
pop
xchg
movl
lret
pop
test
jne
or
pop
xor
rcll
push
and
sahf
clc
cs
add
repnz
ficompl
xchg
leave
pop
mov
sub
ljmp
js
jecxz
clc
test
lcall
in
lahf
inc
lods
aad
ret
in
inc
clc
jg
sbb
sbbb
add
mov
cmpsl
je
xchg
pop
loope
cmpb
rcrb
fstpt
in
and
enter
push
push
pop
ret
std
adc
jge
and
out
es
jmp
push
pop
xchg
push
aam
push
hlt
inc
adc
pop
shlb
ja
inc
and
jns
add
or
push
mov
jbe
add
mov
das
xor
das
cmp
mov
fistpl
mov
inc
mov
jmp
shrb
pop
mov
mov
push
out
sub
jl
inc
lods
dec
xor
cmc
xchg
inc
jns
insb
push
divl
into
xorl
jae
and
mov
test
jnp
dec
push
push
ja
ljmp
xchg
add
fidivs
insl
sbb
and
scas
jmp
xchg
jp
les
add
lods
insb
push
pushf
dec
cmp
xor
push
clc
lret
stos
xor
adc
adcb
fidivrl
inc
and
movsb
stos
les
cmp
sarl
sarl
mov
orl
jl
sub
roll
or
call
and
dec
lahf
lods
daa
cmp
insb
dec
jno
or
or
test
mov
faddl
mov
enter
lret
test
add
in
jno
and
repnz
push
ss
in
jmp
xor
xchg
or
nop
xchg
sbb
aam
xor
nop
inc
rcrl
dec
arpl
pop
mov
add
rolb
insb
test
mov
imul
dec
adc
out
or
ja
pop
sub
cmp
push
das
clc
lea
lods
das
es
test
jp
repz
mov
push
mov
fstpl
rcrl
jns
cmp
nop
ja
sub
mov
ficoml
push
fistpl
std
adc
push
xorb
sub
movsb
jb
lahf
inc
sub
aad
fcom
pop
mov
das
popa
xor
rcrl
mov
dec
mov
hlt
xchg
mov
cs
data16
push
out
push
mov
add
leave
pushf
xchg
add
fsubl
mov
pop
bound
and
enter
or
adc
jno
ja
ljmp
je
mov
jo
or
xor
xor
jmp
or
sub
mov
adc
cmp
add
mov
xor
leave
mov
sbb
and
dec
aaa
or
outsl
sub
les
scas
sbb
rclb
pushl
sarb
mov
xchg
adc
xchg
cmp
lcall
jg
xor
jge
push
cmp
popf
lcall
sub
cmp
std
test
adc
fadd
and
pushf
xor
cmp
cmp
inc
dec
jecxz
fistpl
push
in
push
popf
push
add
call
mov
imulb
into
dec
lahf
or
mov
dec
popf
fwait
cmp
lret
lcall
sbb
lahf
incb
pusha
rorl
mov
iret
out
jmp
nop
cmpsb
iret
and
inc
outsb
int
popf
xchg
cmp
sbb
mov
insl
jbe
shrl
sarl
adc
shlb
mov
cmc
push
push
dec
xchg
stos
or
or
out
jae
mov
pop
and
gs
in
repz
push
xchg
fwait
outsl
sbb
sbb
clc
or
testb
ffree
jno
sub
sbb
roll
incl
adc
sub
sub
mov
das
add
and
mov
pusha
dec
mov
xchg
mov
cld
je
cmp
mov
rcrl
jns
sbb
xor
mov
adc
jbe
xor
push
movsb
out
push
rcrl
inc
std
jge
ds
sub
add
fmuls
push
push
jae
mov
xor
mov
and
out
outsl
repz
jp
push
insb
imulb
jle
aam
insb
cmp
adc
push
cmpsb
xchg
sti
bnd
std
mov
or
fnstcw
fs
repnz
ret
testb
sarb
dec
add
and
and
jbe
sub
enter
and
jne
xor
dec
test
ds
jl
push
or
or
jb
adc
dec
inc
std
mov
adc
sti
dec
jno
sbb
clc
cmc
bswap
insb
dec
in
pop
xor
jg
aad
cli
fcmovu
push
mov
scas
es
add
xchg
mov
enter
pop
lret
out
or
shrb
sbb
pop
pop
andl
insb
sub
ss
out
es
mov
mov
jmp
loope
cli
pop
test
add
sbb
mov
jo
lcall
lcall
mov
inc
push
cmp
add
inc
add
and
aas
popa
inc
out
imul
mov
aad
shlb
adc
jns
push
loope
cmpsb
divb
cmpsb
fildl
dec
nop
fs
out
pop
inc
jbe
mov
jp
aam
sbb
loope
add
inc
sar
push
push
in
mov
jecxz
pusha
je
popf
int3
inc
lcall
ret
add
adc
test
sub
cltd
pusha
test
sbb
mov
aam
mov
loope
ljmp
in
inc
lcall
rorl
push
es
sbb
pushf
jae
fcompl
rorb
dec
in
outsl
pop
jmp
sar
call
dec
pusha
movsl
fsubrl
cmp
sarb
cmp
jl
add
arpl
les
lods
dec
push
test
pop
nop
test
sbb
mov
and
les
add
xchg
inc
and
sub
dec
jge
cltd
cmp
dec
movsb
or
xchg
or
aam
pop
xchg
fs
xor
in
ret
sub
je
clc
fstpl
ret
test
popa
push
lock
xor
imul
or
mov
fdivrp
je
adc
dec
and
test
shlb
jmp
ficoml
inc
test
jns
stos
jns
ljmp
rorl
fisttpl
jp
andl
inc
lea
or
inc
cwtl
dec
xlat
addr16
and
out
popa
xor
das
addr16
adc
lds
jae
mov
push
out
scas
jo
dec
jecxz
xor
int
scas
mov
xlat
push
push
imul
test
dec
pushl
mov
sarl
push
loope
stc
push
sub
stos
adc
das
repz
cld
pop
lds
in
jp
jb
fs
jne
inc
or
push
cld
jnp
in
add
mov
sbb
mov
mov
and
or
jecxz
aam
xchg
xchg
jne
mov
ss
pop
mov
mov
ret
jp
add
add
dec
xlat
or
cmpb
mov
mov
mov
mov
ljmp
aad
cmp
cmpsl
enter
aaa
decb
sbb
dec
in
sarl
stos
sbb
pop
xchg
loope
rcrb
jg
xchg
mov
cmp
popa
xorl
dec
out
mov
test
aaa
inc
push
data16
jno
enter
fs
fwait
movsl
loope
fwait
cmp
in
and
into
cld
sub
cmp
sub
or
fnstsw
xlat
arpl
divl
pop
mov
test
push
test
test
push
jo
fmuls
stc
inc
loop
pop
rorb
mov
rclb
mov
ds
mov
lcall
add
xchg
dec
imul
cmpsb
xor
sub
jno
add
add
dec
or
insl
aaa
or
push
imul
pop
or
add
daa
jmp
dec
mov
jo,pn
xchg
shrb
outsb
mov
loope
mov
sub
scas
aad
add
lret
test
loope
add
adc
pop
in
inc
insb
inc
in
aam
fsubrl
stos
or
jno
xchg
aaa
mov
shr
loopne
xor
jge
movsb
dec
cmp
pop
into
insl
ficoml
or
pop
fwait
inc
dec
cmc
xchg
and
push
loopne
sub
out
rcl
xlat
mov
jb
xor
negl
imul
mov
adc
pushl
xchg
cmp
call
add
add
push
in
clc
or
es
pop
js
jmp
sahf
popa
inc
mov
add
inc
mov
scas
or
rcl
test
xor
inc
out
sub
inc
and
jae
mov
ljmp
xchg
cld
aad
adc
xchg
out
mov
dec
sbb
pop
lret
dec
push
add
jae
fldt
pop
rcl
push
scas
pop
push
lods
cs
into
fmul
sub
xchg
jp
scas
or
sub
xchg
xor
dec
inc
and
pushf
or
or
inc
lods
or
hlt
inc
fbstp
sbb
pusha
aad
push
enter
shlb
cmc
fwait
ljmp
inc
mull
sub
jne
repz
mov
dec
jmp
inc
data16
cltd
mov
and
icebp
lret
cltd
push
push
jns
add
rol
fwait
insb
in
test
outsl
xchg
aas
or
daa
sub
ficomps
out
lds
shlb
pop
cmp
mov
lret
scas
shll
jnp
or
push
cmp
push
test
inc
add
sub
dec
loopne
rcl
pop
push
pushf
pop
or
inc
icebp
xchg
inc
add
testb
fstpl
cmpsb
xor
gs
sbb
ret
incb
and
mov
scas
push
push
mov
aaa
popa
in
xor
sbb
imul
lcall
xor
xchg
adc
xchg
sbb
inc
mov
ret
jl
cwtl
mov
sbb
mov
jnp
lds
xchg
xor
pop
in
loope
js
xor
and
adc
push
pop
lea
ja
xchg
in
mov
je
lea
xchg
insl
fcom
dec
andl
test
push
cli
icebp
sbb
sub
ss
cld
aad
pop
jp
lcall
mov
fistl
mov
adcl
jp
enter
cmpsb
ljmp
mov
cmp
cmp
js
je
lahf
ljmp
sti
mov
rcr
jae
pushf
xchg
adc
out
dec
inc
push
add
jb
adc
rolb
mov
nop
call
inc
rcr
dec
push
loope
lods
mov
mov
lods
cmp
push
add
stc
cli
mov
push
arpl
out
orl
call
lcall
xor
arpl
bound
inc
xor
push
push
push
fistl
iret
cmpsl
lcall
dec
sbb
push
add
cltd
push
loop
cmpsl
adc
push
pop
aaa
xchg
xor
and
and
sub
jno
out
or
and
xlat
sub
jns
je
xchg
jbe
ljmp
pusha
js
or
leave
mov
inc
cmp
ficoml
adc
pop
into
dec
cmpsb
push
jbe
dec
mov
sub
pop
dec
or
jns
dec
hlt
cmp
scas
movsl
bnd
enter
dec
pop
lds
pop
mov
xchg
fisttpll
mov
rorb
loope
std
lret
mov
out
lds
jecxz
imul
lds
leave
jmp
mov
shlb
call
test
adc
add
shll
pop
fsubrs
inc
mov
sub
fsubs
pop
dec
div
sbb
lods
repnz
int3
outsb
fisttps
fimuls
dec
jb
push
push
inc
mov
jae
outsb
and
jg
xor
and
xor
mov
ds
add
test
add
lahf
xor
add
fmull
adc
jg
icebp
adc
mov
push
cs
jae
scas
shrb
jo
pop
mov
fmulp
cmp
rcrl
lods
jmp
ret
inc
pop
out
dec
notb
fistps
or
push
mov
movsl
js
dec
jg
xor
cmpsb
push
in
mov
imul
dec
cmp
hlt
push
les
xchg
jge
mov
inc
xchg
push
ljmp
sbb
das
xor
fdiv
out
out
inc
lcall
popf
add
adc
fmul
mov
mov
sbbb
push
cmc
fstl
fisubrl
cmpsl
cmpsl
ja
xor
pop
outsl
icebp
and
outsl
mov
adc
adc
sbb
mov
fistpl
adc
cmp
repnz
dec
mov
xchg
test
pop
dec
pop
jp
popf
inc
imul
xor
cs
push
add
cmpsb
and
mov
adc
es
xchg
xchg
hlt
inc
ret
adc
cmp
inc
ret
adc
and
outsl
leave
cmp
icebp
jmp
lock
mov
mov
div
fxch
sbb
pop
sub
sub
and
mov
mov
pop
dec
js
jp
cmpsl
subb
sbb
sbb
pop
sub
push
shl
add
xor
rcrb
sub
cmc
xor
clc
insb
iret
call
inc
int
and
dec
xchg
push
add
enter
mov
inc
fildl
pop
callw
mov
js
xor
add
xchg
loopne
iret
insb
lret
mov
inc
fcom
ror
mov
and
adc
repnz
ja
popa
out
int3
fwait
jbe
dec
add
rolb
xchg
out
xor
test
and
jo
push
jle
popf
jb
dec
mov
cmp
jle
cli
cmp
fs
push
sub
test
lock
cmc
mov
add
mov
mov
mov
daa
hlt
rorl
push
pop
or
shrl
daa
jmp
push
fwait
push
fdiv
iret
sbb
fildll
add
push
repnz
xchg
int
lret
cmpsl
popa
in
mov
ja
or
push
jae
lcall
cmp
icebp
shrl
dec
jno
lcall
insl
sub
jge
test
and
loope
into
xchg
cld
data16
xor
add
out
dec
sti
jnp
cmpb
js
dec
test
loop
push
rcrl
mov
xor
lods
pushf
or
xor
flds
cmp
pop
fprem
out
pusha
mov
int
push
add
and
jecxz
pop
sti
add
xchg
arpl
xlat
xchg
and
bound
xchg
mov
in
and
shlb
imul
mov
mov
cmpsb
xlat
add
int3
mov
int
outsl
popa
jb
push
enter
cmc
jmp
push
sbb
xchg
fists
add
push
out
cwtl
scas
lret
movsb
in
cmp
pop
and
and
xor
add
fsubrl
adc
lock
inc
rcrl
adc
lock
lea
cltd
jbe
movsl
icebp
addb
lcall
xor
adc
cld
clc
dec
sti
add
popf
and
dec
cld
mov
mov
sahf
mov
jg
out
or
jp
pop
test
cmp
pop
repz
inc
xlat
call
std
jmp
dec
add
xchg
repnz
frstor
clc
cmpsl
fs
out
es
call
mov
jno
sub
xchg
loopne
push
push
cmpsb
adc
pop
mov
fists
dec
mov
in
dec
cmp
inc
int3
scas
stos
sub
lret
pop
rorl
sub
cli
es
push
mov
mov
cmp
mov
mov
negl
and
mov
fildl
jnp
inc
scas
insl
push
imul
adc
xor
jae
test
push
ror
cmp
movsl
fdivrs
jecxz
insb
cmp
jmp
fcompl
insb
xchg
das
cmpsb
mov
dec
and
outsb
mov
dec
nop
movsl
imul
jbe
in
aas
stc
pushl
inc
xor
movsb
cmp
sub
enter
jne
add
mov
stos
fsubs
out
xchg
jo
and
movsl
cli
xchg
js
mov
int
inc
fwait
xor
stos
scas
std
fisttps
add
xor
loopne
addl
shlb
inc
jne
aad
inc
das
jg
sbb
mov
jnp
lcall
add
jp
and
rep
add
imul
push
aad
mov
addr16
int
das
inc
vpaddd
jmp
mov
js
dec
sub
pop
mov
mov
dec
test
xchg
inc
out
add
xchg
les
inc
pop
shll
add
sbbl
int
je
movsl
add
fists
lea
mov
scas
pop
mull
dec
out
inc
testb
aas
out
push
in
out
jmp
loop
add
dec
cmc
lcall
dec
incb
jns
inc
in
aad
stos
aaa
lods
arpl
cmpsl
sub
mov
insb
sub
mov
je
hlt
add
dec
cli
adc
shrl
jno
test
in
jg
mov
into
and
test
testw
jbe
loope
sbb
int
dec
mov
lahf
sarb
sbb
add
push
fstl
or
loop,pn
add
sbb
xchg
test
and
sqrtps
xchg
scas
xchg
mov
sub
hlt
jns
and
push
mov
push
dec
sbb
imul
popa
clc
out
sub
xor
dec
loopne
pop
or
mov
stos
iret
cmp
push
test
mov
bound
cli
sarb
dec
cld
gs
scas
leave
outsb
mov
movsb
and
das
repz
add
mov
fwait
nop
jle
icebp
iret
jl
pop
daa
aas
push
sarl
pop
cmp
xchg
pushf
mov
cmp
dec
xchg
pop
push
pop
outsl
aas
out
adc
scas
jns
dec
shrl
jb
and
fsubrl
sahf
or
call
mov
jb
psubb
mov
pop
cltd
orb
mov
out
xor
int
dec
icebp
std
sbb
inc
fwait
movb
lea
and
mov
jno
imulb
xor
inc
adc
pop
mov
adc
mov
jmp
and
enter
mov
push
orb
cmpsb
sbb
or
imull
adc
adc
push
popf
sahf
inc
fldt
out
pop
sub
sbb
pop
stc
pop
dec
imul
sub
imul
div
cmp
fsubl
rol
hlt
mov
gs
rclb
shl
fisttpll
dec
shlb
ret
idivl
sub
mov
lahf
jb
push
out
mov
push
shlb
ret
gs
das
out
and
es
loope
mov
arpl
lods
test
test
push
ficomps
sub
pop
adc
sahf
lds
mov
mov
mov
sbb
daa
ficoml
push
sbb
cwtl
aaa
les
int
sub
shll
mov
rorb
push
pop
cmp
cwtl
fs
mov
lods
mov
repnz
lahf
xchg
lock
fstpt
gs
lods
test
fxch
or
and
or
push
xchg
cmp
std
mov
xor
sahf
xchg
push
mov
lea
pop
sbb
jne
mov
xchg
mov
push
cmp
cmpsb
aam
enter
imul
cmp
push
mov
xchg
cli
dec
mov
bound
mov
lahf
cmp
and
jecxz
lods
filds
pusha
mov
mov
xchg
or
mov
fnsave
pop
and
mov
mov
jg
dec
sub
leave
fwait
mov
fstpl
pop
sub
jno
mov
cmpsb
popf
pop
push
pop
arpl
std
test
push
popf
into
mov
stc
fbld
cmp
jbe
addr16
inc
aaa
stos
pop
pushf
inc
mov
push
je
push
in
mov
adc
pop
or
std
push
enter
aad
in
dec
xchg
sub
pop
mov
mov
inc
xchg
sub
out
inc
pop
add
push
mov
adc
adc
xor
sub
outsl
pop
int3
push
push
lea
fidivs
ret
ljmp
xchg
pop
push
cmp
xlat
push
xor
dec
sahf
or
shll
in
popf
add
xchg
jns
push
cmp
lcall
adc
or
orl
fs
add
xor
mov
cmp
inc
jne
faddp
pop
aad
pusha
nop
out
adc
or
pop
loop
divl
aaa
mov
ds
cmpsl
ret
cs
inc
aad
or
dec
add
push
adc
or
adc
add
cmp
jns
pop
lcall
jg
out
or
pushl
stc
nop
shrl
push
xchg
mov
aaa
lret
insb
ljmp
into
ljmp
es
push
inc
xorb
lods
push
cmc
aas
ret
push
xor
push
push
mov
fnstenv
fs
sahf
enter
call
popf
mov
outsl
aas
jns
popf
mov
cs
aad
je
lods
mov
fwait
pop
cmp
rclb
fcos
mov
jg
mov
xor
aad
pop
push
sub
incl
rorl
jno
push
scas
lret
push
mov
dec
xchg
push
out
inc
divb
cltd
out
dec
cmp
lcall
cltd
or
jae
ja
push
push
cmp
repnz
call
push
pop
lret
xlat
push
mov
int
mov
fstl
popa
mov
ficoml
and
jb
test
scas
mov
jmp
testb
lret
mov
ret
push
xchg
negb
ljmp
fldt
out
dec
in
pop
lahf
inc
jle
and
das
bnd
add
cmp
xor
cmpb
adc
lcall
shrb
jbe
xchg
or
and
pop
shlb
dec
dec
loop
adc
scas
xchg
or
test
adcb
sti
in
pusha
jmp
sub
pop
out
mov
popf
mov
sub
mov
pushf
inc
inc
nop
xchg
dec
inc
lds
mov
mulb
sbb
cmpb
or
unpcklps
cltd
pushf
pop
add
lea
lods
loopne
ficoml
popa
in
mov
js
call
adcb
mov
cmp
and
inc
and
sub
leave
mov
push
test
into
frstpm(287
mov
out
insl
ret
jno
cld
push
and
cmp
decb
inc
and
in
jmp
leave
ljmp
push
jecxz
inc
fsub
add
ss
addb
xchg
cltd
in
add
push
in
cmpl
and
pusha
stos
inc
dec
cmp
push
adc
and
rcl
jne
and
dec
test
std
xor
push
idiv
pop
rorl
ss
xor
loop
enter
fbstp
add
dec
in
jbe
insl
mov
out
push
sbb
imul
sbb
jp
mov
xchg
mov
xchg
xchg
clc
push
xor
fs
pop
mov
rcl
push
cmpsl
push
repz
test
stos
hlt
stos
or
testl
inc
lahf
or
int
pop
push
and
xorb
btc
sbb
jae
or
enter
mov
jnp
jo
cmc
loop
dec
jno
mov
es
test
push
aaa
sub
es
xlat
inc
out
enter
shlb
jb
imul
xor
insb
pop
dec
jne
loop
test
shll
sbb
movsl
inc
cmc
adc
ja
sub
cli
es
scas
ficoms
jbe
xchg
jnp
adc
push
mov
inc
popf
insb
jecxz
popf
jae
mov
jmp
ja
sub
push
imul
jno
mov
pop
push
pusha
fneni(8087
loope
or
push
enter
rcl
jo
jno
sbb
das
jle
mov
enter
xchg
push
jl
sbb
and
aam
jns
in
gs
push
fsubs
psubd
sbb
push
mov
or
mov
outsl
xchg
or
popl
lods
xlat
rclb
xlat
cmp
div
mov
mov
or
adc
hlt
lret
xor
adc
mov
stos
adc
jmp
stos
mov
rcrl
fcmovbe
add
enter
xor
test
sahf
inc
insb
imul
jmp
inc
dec
mov
mov
movsb
es
sub
push
sub
mov
adc
setge
roll
idiv
cld
movsw
lret
mov
pop
fcomp
sub
sub
popf
test
cmpb
incb
dec
lret
mov
fistpll
arpl
fwait
in
divl
out
mov
mov
dec
add
inc
popa
push
xorb
sti
es
xorb
pop
mov
stc
fs
pop
lcall
xor
xor
stos
subl
ds
scas
ljmp
xor
and
jmp
out
insb
data16
movsb
or
scas
jo
cmp
xchg
mov
scas
pop
xor
movsl
push
mov
mov
pop
lds
fisttpll
hlt
add
into
mov
test
shrl
mov
aam
lret
mov
dec
adc
mov
icebp
or
adc
and
inc
add
dec
nop
push
sbb
cld
push
pop
fadds
or
mov
add
sub
xor
es
add
mov
mov
andl
orl
add
aaa
cmp
pop
outsb
loop
std
mov
gs
push
iret
jno
adc
lds
js
jp
gs
sbb
enter
add
lods
inc
sbb
ja
push
push
out
cld
icebp
xor
out
sbb
pop
adc
mov
jp
and
and
mov
into
dec
sarw
lods
jo
jge
out
xchg
mov
add
icebp
shlb
shlb
push
repnz
inc
in
jb
cmpb
pusha
push
pop
push
mov
aaa
sub
jno
stos
shll
pop
std
cmp
or
add
xor
dec
fstps
mov
mov
mov
aaa
imull
in
pop
cmp
xor
icebp
mov
fs
lret
aaa
insb
cmpsl
adc
decb
aaa
dec
jecxz
lcall
push
or
xor
scas
sub
sub
dec
aaa
mov
mov
les
sub
test
pop
cmp
ljmp
test
clc
push
das
cmp
out
and
jb
in
test
repnz
dec
or
hlt
sub
mov
sbb
sbb
push
dec
sbb
push
es
inc
add
shll
mov
mov
mov
je
mov
pushf
cmp
inc
jns
cs
dec
movsl
call
push
mov
leave
jp
out
push
bound
shl
in
fadds
repnz
into
in
adcl
mov
ja
push
dec
cmp
sbb
xor
flds
jae
dec
adc
cmp
and
mov
jnp
jge
fdivl
dec
ret
popf
repnz
or
aam
push
enter
movsb
cld
dec
lds
push
xlat
stc
inc
jge
dec
sub
mov
push
xchg
jmp
stc
enter
xchg
sub
dec
adc
movsl
or
je
lods
jmp
js
and
mov
inc
jb
or
xchg
or
comiss
cs
dec
int
iret
lock
loopne
fildll
sub
xchg
in
lds
aad
xchg
cmp
dec
inc
xchg
mov
cmp
push
mov
enter
in
push
lds
mov
or
push
xchg
jb
xor
nop
rorb
int
and
popf
sub
dec
mov
and
mov
clc
pop
pop
pop
mov
ja
test
lods
test
pop
pop
cli
stos
lods
sub
xchg
mov
xchg
fs
jg
inc
sub
movsb
loopne
loopne
imul
inc
xchg
mov
jns
sbb
add
dec
outsb
sbb
fildl
or
sbb
aad
test
xchg
icebp
sub
ss
jl
dec
and
repz
push
nop
cli
mov
mov
xchg
call
pop
lcall
sbb
jmp
movsl
fimull
sahf
faddl
das
inc
sub
shl
into
stos
rcr
adc
fisttps
sbb
mov
sahf
and
inc
mov
mov
cltd
cmpsl
mov
out
add
into
loope
pop
push
and
clc
dec
mov
stc
sbb
pop
cltd
or
adc
sbb
lods
loopne
aaa
aas
mov
cmovo
mov
shll
push
push
sub
ja
inc
pusha
jg
xlat
sub
mov
mov
push
inc
aas
js
insl
lret
pop
orb
dec
dec
pop
mov
pop
scas
movsb
in
mov
cmc
jle
adc
mov
dec
xchg
mov
minps
shlb
pushf
out
mov
mov
js
iret
aaa
addr16
cmp
lret
out
xor
pop
mov
push
cmp
cmp
jne
lret
mov
shlb
imul
gs
and
ljmp
inc
xor
cmp
inc
fsubs
mov
xlat
adc
or
call
inc
sbb
xor
scas
xor
mov
push
dec
es
jg,pn
jbe
dec
mov
shlb
mov
sbb
stos
insb
xor
dec
ja
nop
pop
pop
in
push
dec
mov
cwtl
ret
jbe
fwait
sahf
mov
ret
push
cwtl
add
sub
jecxz
mov
sub
testl
and
in
jns
movsb
push
dec
push
xor
cmpsb
aad
push
mov
sbb
adc
popa
mov
add
xchg
jbe
lret
or
mov
jmp
pmaxsw
pop
ds
pop
clc
stos
jp
mov
push
cwtl
add
pop
inc
sbb
test
sub
dec
into
push
ljmp
cmp
sub
orb
mov
pusha
lcall
inc
movsb
enter
cmp
fildl
iret
push
and
int
add
mov
jp
xchg
jmp
add
in
sarb
jge
jae
pusha
imul
or
push
incb
adc
cwtl
popf
arpl
adc
sub
aad
fldt
or
ljmp
ja
mov
xor
sbb
loop
mov
shlb
test
mov
lea
mov
jecxz
bound
pop
lods
fcomps
aaa
cmp
cld
mov
roll
std
lods
cmp
les
fstl
popf
xchg
add
jl
insb
inc
add
jl
xchg
repz
adc
sbb
pop
inc
pusha
or
mov
add
cld
subb
jns
rcl
aam
cwtl
dec
xor
xchg
push
flds
pop
ds
cmp
xchg
mov
aam
arpl
repz
inc
adcl
push
fs
mov
lds
adc
and
mov
mov
mov
cltd
into
xchg
in
icebp
jbe
add
fisttpl
inc
das
mov
lods
jb
rcrb
movsl
jg,pt
sub
push
lock
mov
pop
add
ret
pop
xor
in
cltd
pop
mov
mov
jmp
dec
shlb
lods
cmp
in
cmc
add
mov
ja
sbb
pand
pop
xchg
jl
dec
cmc
jae
in
inc
xchg
adcl
mov
jnp
push
cmp
cwtl
and
filds
pop
and
aad
aam
xchg
lods
aad
and
push
jl
jg
jno
enter
jo
gs
xor
inc
lds
mov
rol
das
xor
mov
mov
nop
clc
iret
or
test
adc
and
cmp
xor
out
xchg
add
fisttpll
pusha
push
mov
mov
dec
popl
jb
outsb
push
orb
xor
cwtl
sbb
or
xor
stc
repnz
pop
xor
ljmp
mov
loopne
subb
aam
test
ja
call
sbb
sub
sbb
jle
scas
mov
mov
popa
inc
cmp
push
jbe
movsl
add
adc
outsb
cmp
xchg
jp
lods
lcall
cmpsb
dec
rolb
push
inc
stc
test
jl
push
jns
dec
add
add
int
jo
nop
fcomps
jae
mov
jbe
insl
sbb
test
insl
xor
add
xor
xchg
sbb
test
mov
stos
stc
jp
jp
fwait
scas
pushf
mov
xor
mov
int
inc
cmpsl
push
pop
mov
jo
popa
mov
pop
pop
cmc
pop
aaa
sbb
add
lock
mov
pushf
inc
xor
repnz
and
dec
shlb
dec
xchg
dec
cmp
scas
cmp
jae
jne
jns
push
scas
and
pop
mov
cmpsb
inc
sbb
jno
in
add
push
inc
aam
push
fwait
push
cmp
aas
jnp
sub
sub
add
mov
pop
jp
nop
les
inc
ror
dec
xor
loopne
shrl
popf
ja
mov
fimuls
mov
shll
mul
sbb
mov
in
scas
sub
lock
pop
lods
dec
push
insl
mov
jp
jne
mov
insb
cmp
jle
ret
mov
jl
and
mov
mov
add
cltd
add
adc
rcl
lahf
cs
push
push
ret
sub
sbb
std
sar
push
bound
test
shl
and
mov
dec
ret
jp
js
push
cmp
adc
pop
jns
test
lds
inc
mov
repnz
sbb
jbe
dec
pop
mov
mov
hlt
mov
sub
sub
xchg
xchg
sbbb
mov
xchg
loopne
xchg
cmpsb
iret
or
dec
xor
xor
fcoml
jb
xor
rolb
sbb
pop
aad
js
push
repz
test
or
ss
dec
push
daa
cmpsl
sub
cmc
fcomps
mov
cmp
out
lahf
or
xchg
ja
and
mov
add
int
xchg
dec
mov
fwait
pusha
mov
gs
and
push
outsb
ljmp
rcl
adc
mov
adc
cmc
mov
sbb
fistps
inc
js
stos
aam
xorl
insl
js
frstpm(287
or
repz
ret
mov
fistps
adc
iret
int3
pop
sahf
xchg
aaa
in
out
in
outsl
xacquire
cmp
mov
cmp
insl
aam
xor
inc
in
sub
sbb
lahf
mov
mov
cmp
jno
pop
mov
sub
sahf
pop
call
int
jp
xchg
ja
push
test
sbb
mov
mov
mov
inc
mov
pop
jne
dec
adc
repnz
in
iret
data16
push
inc
push
dec
push
or
or
divps
decl
jne
lea
rorl
mov
iret
jp
dec
ljmp
xor
rclb
idivb
dec
scas
inc
notb
cmp
cmp
jnp
jmp
push
xchg
xor
movsl
insl
adc
pop
mov
mov
adc
adc
jmp
push
xchg
sbbl
jne
jmp
std
adc
outsl
fistpll
sub
sar
ficompl
cmpl
mov
aad
enter
outsl
adc
adc
daa
sub
mov
shlb
pop
scas
cld
dec
push
test
daa
in
xchg
test
push
out
and
mov
pop
fwait
out
imul
in
jnp
xchg
push
cs
pop
scas
mov
loope
ja
add
in
movsl
adc
pusha
jl
add
sub
or
daa
cmpsl
lret
ror
rorl
bnd
inc
xor
stos
and
mov
iret
mov
fmull
cmpl
mov
fcomi
pop
hlt
jl
rol
sub
push
dec
lods
adc
insl
arpl
repnz
or
and
mov
cmp
push
inc
test
add
xchg
orl
les
add
push
pop
sbb
and
movsb
addr16
subb
test
push
cmp
adc
sbb
iret
cmp
push
mov
dec
add
adc
add
icebp
adc
ret
notl
adc
call
orb
push
push
and
pop
repz
loopne
mov
dec
cmpsl
leave
js
ret
std
inc
xor
fcompl
popf
test
mov
mov
jno
cmp
int
xchg
test
lods
adc
cltd
or
sbb
rcll
jg
cmp
ret
in
mov
pop
mov
mov
jmp
scas
or
jecxz
mov
xchg
pop
jbe
jbe
pop
je
mov
in
mov
xor
stos
jb
pop
jecxz
or
pop
test
jle
push
inc
ljmp
aas
sub
push
rclb
popf
hlt
xchg
sub
or
hlt
fidivrs
xchg
mov
xor
mov
cmp
inc
jmp
fwait
inc
and
adc
mov
adc
and
jae
out
call
or
mov
xor
jmp
xchg
jecxz
mov
lret
cmp
mov
mov
enter
test
rcrl
and
fs
icebp
aaa
sub
mov
mov
push
push
sbb
push
adcl
ret
cwtl
adc
loop
lret
out
scas
sub
fscale
rcr
or
pop
fmuls
mov
mov
out
sub
inc
imul
jmp
and
mov
mov
cmc
sub
add
aad
js
adc
mov
jle
aas
jecxz
xor
sbb
jns
mov
aam
ret
cmpsl
shrb
out
push
das
mov
dec
xchg
jnp
inc
xchg
dec
push
loope
xor
orb
inc
cmp
fistl
cmp
fdivr
repz
mov
dec
mov
fwait
jb
add
gs
cmp
mov
outsl
add
inc
push
add
rcr
xlat
push
outsl
movsb
adc
in
scas
cmp
cmp
cmc
decl
xchg
fwait
aam
nop
inc
int
lret
add
jae
and
test
inc
popf
int3
data16
mov
push
dec
push
jns
rcrb
sbbb
scas
lret
jb
mov
mov
sarb
jbe
sub
cli
dec
mov
inc
pop
lret
or
rcll
daa
sbb
movsl
jb
inc
inc
iret
iret
std
push
cmp
fldt
push
rorl
mov
popf
ja
jl
int3
das
xchg
fdivs
push
xchg
add
mov
les
mov
test
mov
sbb
mov
and
adc
dec
mov
jle
shll
scas
sbb
inc
fmul
xchg
jns
pop
xor
fstpl
cltd
andl
stc
sbb
cmpsb
popa
scas
popf
cmpsl
dec
aaa
adc
lds
test
jb
adc
aas
int3
push
push
add
cmp
dec
jl
push
sahf
std
mov
fwait
pop
lahf
sbb
xor
adc
push
nop
push
or
pop
aam
repz
imul
adc
jmp
sahf
xor
call
rolb
sub
push
ds
inc
xor
push
pop
cmpsl
push
call
jl
arpl
sbb
orb
mov
roll
fimull
mov
nop
and
or
imul
ds
fiadds
leave
and
adc
stos
dec
rcrb
push
fisubrl
cmp
or
xchg
into
mov
sbb
xchg
jge
sbb
lods
and
ret
mov
push
imul
jne
cmp
das
pop
xchg
pop
or
push
jae
mov
das
test
psrld
and
cmpsl
divb
push
jge
int
add
dec
notl
mov
cld
fdivrs
lea
inc
in
mov
sti
pop
jg
xchg
jmp
scas
out
adc
xor
pop
pusha
xor
sub
xchg
push
lds
add
subl
inc
out
rcl
hlt
insl
xchg
inc
adc
xchg
cvttps2pi
hlt
mov
xor
inc
jmp
lahf
loopne
sub
shlb
or
push
add
xor
jae
jp
insl
cmp
mov
gs
fcomps
push
cmp
data16
or
sub
subl
add
xor
jmp
or
fadds
sar
xlat
in
inc
jg
rclb
loopne
aad
mov
test
inc
test
repz
sub
dec
or
lock
adc
or
pop
loope
iret
ds
xor
fdivrp
jbe
in
js
lods
pop
in
inc
es
rorl
push
push
out
push
fwait
and
out
push
addr16
mov
fdivs
stos
mov
adc
test
sbb
rcll
sti
fwait
lcall
sahf
pop
mov
adc
add
gs
xor
repnz
ficoms
ret
stc
dec
andl
mov
push
jno
cmp
xchg
and
push
loope
sub
adc
in
test
repnz
mov
xchg
call
mov
add
arpl
push
adc
adc
aad
push
or
push
push
cmc
push
pop
mov
and
inc
sub
jmp
inc
add
mov
jg
inc
add
cmp
idivl
cwtl
inc
cmp
and
enter
mov
and
pop
in
mov
insl
xor
pop
pop
pop
jno
and
cmpsb
xchg
fisubs
xchg
or
jne
dec
inc
lret
jl
pop
das
ror
out
inc
push
sbb
add
jle
jae
sub
sbb
mov
or
mull
fs
ss
jo
test
iret
leave
mov
sub
xchg
mul
dec
in
je
lods
adc
int
fcomip
dec
pop
dec
addl
dec
jo
stos
mov
addr16
push
push
mov
xlat
popf
mov
test
imul
ss
mov
push
mov
mov
ss
mov
add
mov
cli
add
mov
mov
rorl
aas
jge
je
mov
pushf
sbb
xor
dec
stc
mov
aam
mov
or
add
notl
pusha
adc
cmpsl
add
repz
data16
fsubrl
or
aas
mov
iret
jl
push
cld
or
xchg
inc
jp
jb
add
push
hlt
out
mov
mov
cmp
mov
mov
leave
dec
pushf
ljmp
sub
sub
jns
add
mov
test
mov
jne
ret
cmpsb
test
ret
add
fisubrs
mov
scas
push
fucom
or
mov
mov
and
sbbl
das
mov
fldt
add
xor
xchg
popf
add
insl
mov
xor
mov
cmp
pop
mov
movsl
mov
or
out
cmp
ror
xorb
je
cs
mov
cld
pushf
sbb
cmc
adc
sahf
mov
imul
mov
push
rorb
lds
pop
cld
jo
pcmpeqb
pop
cmpsb
mov
sti
or
mov
sub
dec
xor
repnz
push
dec
add
xchg
fildll
ret
mov
test
add
popa
jno
out
jne
inc
push
sbb
andl
cld
push
sub
divl
sub
inc
lret
xchg
lods
mov
pusha
leave
nop
add
add
sar
mov
mov
mov
mov
and
jge
mov
cmp
lcall
into
lret
xchg
cltd
xchg
and
dec
leave
inc
enter
lea
int3
cwtl
popa
out
sarb
sub
inc
out
jg
push
or
outsl
jns
add
test
imul
aas
out
mov
dec
jnp
mov
mov
ror
mov
int3
lea
test
dec
scas
push
test
and
insl
or
imul
jnp
mov
ja
xor
or
outsl
adc
pushf
rcr
shrl
jbe
push
movsl
xor
sbb
pop
inc
in
mov
movsb
daa
cmp
fwait
mov
out
pop
test
xor
imul
test
imul
movsl
in
fcmovne
jl
inc
sbb
pop
iret
dec
sbb
scas
shr
jge
es
and
mov
cmpl
xlat
int
mov
pop
fwait
xchg
sub
push
fisubl
and
gs
in
mov
jnp
pop
jmp
rcll
pop
jmp
sub
cwtl
mov
jge
andl
ljmp
dec
std
adc
out
icebp
leave
push
arpl
push
jl,pn
out
scas
mov
pop
fidivs
imul
orl
gs
adc
ret
pop
pop
inc
cli
and
xchg
clc
inc
dec
jmp
pushf
ret
insl
ret
push
mov
in
sarl
shlb
xchg
fcompl
push
hlt
movl
mov
lcall
pop
push
loopne
xor
stos
or
and
jp
mov
mov
sub
cld
sar
test
jno
dec
push
ret
cmp
test
fldenv
jg
jnp
xor
push
test
mov
outsb
loopne
xchg
ljmp
cli
hlt
outsl
out
loopne
daa
div
loopne
test
out
out
stc
xchg
and
and
push
pusha
subb
cli
bound
lods
mov
mov
cltd
cmp
ja
mov
mov
push
mov
repnz
stc
pop
imul
adc
push
mov
cmp
jb
jge
dec
xchg
lcall
pop
gs
pop
scas
jnp
push
sub
jnp
add
and
inc
push
lret
dec
cmp
cli
sahf
sub
mov
jp
lret
pop
adc
jae
pop
add
stos
inc
iret
mov
inc
mov
mov
mov
adcb
cmp
jecxz
bound
scas
mov
lds
xchg
mov
mov
in
cmp
push
push
push
lret
mov
addr16
movsb
sub
fisubrs
mov
stc
adc
adc
in
or
leave
movsl
adc
xchg
or
add
push
jmp
lret
pop
outsb
pop
jns
or
xor
jl
jno
mov
push
imul
push
adc
jecxz
inc
icebp
push
xchg
scas
xor
jp
inc
inc
clc
mov
push
inc
div
repnz
cmpsb
ljmp
mov
adc
add
cld
popa
cmp
dec
lahf
pop
push
lret
outsb
call
inc
sub
das
sub
and
jae
pop
addr16
std
jne
jp
lock
sub
sbb
fcoml
push
repz
xor
mov
dec
xor
mov
or
xor
xor
addl
add
pop
es
push
push
inc
mov
sub
aad
mov
cmc
or
lcall
fwait
mov
cmpsl
fwait
ret
or
xlat
mov
outsb
inc
enter
inc
cmc
push
dec
mov
xchg
sarl
dec
adc
int
mov
inc
icebp
stos
ror
fisttps
cmp
lods
jo
jmp
test
insl
popf
rorl
dec
dec
and
jecxz
push
lahf
sbb
adc
icebp
mov
daa
stc
cwtl
test
jge
ret
ljmp
mov
stos
cmpsb
push
mov
add
cmpsb
mov
cmpsl
imul
or
out
mov
sbb
xor
test
inc
dec
bt
mov
mov
mov
pop
jno
jne
add
push
mov
stos
sub
pop
inc
inc
push
sub
pop
xchg
lretw
adc
aam
xor
aaa
mov
arpl
ror
addb
xor
jge
fdivl
int3
dec
mov
dec
out
inc
ds
imul
nop
or
dec
cmc
pop
add
cs
lock
push
xor
ss
xchg
cmp
mov
es
inc
cs
cmp
jne
inc
enter
movsl
ljmp
scas
out
mov
or
add
fimull
push
push
adc
push
mov
in
test
push
dec
and
clc
daa
xlat
test
scas
int3
mov
rcrb
mov
and
negl
into
jo
mov
mov
inc
push
and
push
xor
push
mov
cmc
outsb
inc
mov
pop
adc
adc
add
fsubrl
xchg
sub
int3
or
push
mov
and
xor
mov
adc
mov
sub
xchg
leave
mov
ss
add
inc
or
repz
aas
dec
jge
lock
adc
aaa
push
je
adc
test
xchg
push
cmpsl
lods
adc
fstl
stos
mov
xchg
in
cmp
das
filds
xchg
mov
jg
loopne
mov
les
mov
mov
aam
pop
adc
test
sbb
pop
clc
sub
scas
pop
ret
clc
cmp
pop
inc
xchg
fcmove
push
mov
mov
mov
fisubrs
pop
fs
fwait
gs
lahf
push
sti
fs
and
sub
dec
cmp
cmp
cmpsb
cltd
mov
xchg
fisubrl
pop
pop
out
fwait
rcrb
fdivl
pushf
mov
lock
push
popf
cmp
adc
dec
es
loop
push
mov
fdivrl
add
inc
or
push
repnz
in
cli
fwait
xor
sub
rolb
or
dec
adc
push
pop
pop
test
mov
dec
dec
push
ss
sub
mov
fwait
bnd
sar
jp
sub
pop
stc
cwtl
icebp
cmp
std
mov
fidivrl
in
or
and
fs
iret
mov
arpl
stos
dec
pusha
push
movsl
dec
push
in
fs
sbb
mov
inc
fwait
mov
leave
push
aam
lahf
dec
test
jge
ss
push
mov
cltd
mov
es
out
jo
into
and
testl
push
mov
pusha
mov
insb
cmp
sub
mov
jno
scas
movsb
cmp
in
pop
xor
xor
sbb
loopne
arpl
cmp
jmp
dec
jmp
idiv
push
push
and
mov
std
push
in
cmp
xor
sbb
dec
mov
nop
or
sub
call
in
or
add
stc
cmp
scas
ret
outsl
in
rol
push
and
jp
lret
into
stos
mov
push
jbe
lahf
lds
add
sub
sub
mov
push
dec
lock
cmc
mov
mov
inc
jns
add
jle
and
lahf
cltd
sub
pop
jae
and
cmpsl
sbb
or
popf
xchg
imul
lea
push
cmp
and
dec
mov
push
xorb
pop
stc
clc
xchg
int3
and
mov
pop
fcomps
inc
shlb
sbb
inc
dec
mov
sti
pop
sbbl
shlb
loop
xlat
or
or
inc
fcomi
outsb
std
jne
or
adc
data16
pop
add
ss
inc
fdivrl
or
das
cld
pop
mov
lock
mov
dec
pop
mov
mov
fmuls
lret
in
stc
mov
cld
sbb
faddl
inc
mov
push
xchg
lahf
add
daa
in
sarb
lcall
dec
loop
inc
loope
jo
mov
mov
out
sub
mov
adc
imul
inc
xchg
pusha
outsb
je
gs
or
adc
xor
lahf
mov
in
and
imulb
jmp
sarb
mov
cmpsb
lcall
xchg
cltd
push
cmp
ljmp
test
stc
imul
movsb
dec
imul
jle
out
xchg
mov
mov
mov
stos
pop
sub
mov
in
mov
jns,pt
xlat
dec
push
jle
sub
sbb
ret
push
sub
movsb
into
sbb
sbb
dec
sbb
mov
testb
scas
mov
pop
test
inc
and
imul
mov
or
ret
loope
pop
popa
arpl
in
jo
fiaddl
rol
xlat
pop
push
aas
mov
cmp
xchg
xchg
sbb
inc
adc
xor
cmpsb
xchg
dec
xor
popa
mov
stc
loope
jge
cli
mov
mov
enter
in
inc
pop
mov
sub
dec
test
mov
cmc
rclb
pop
pop
cwtl
fimuls
jnp
std
mov
jns
lcall
fwait
icebp
xor
cld
inc
inc
mov
stc
jge
out
mov
or
call
sbb
sbb
push
daa
mov
xchg
jns
pop
jne
xor
sbb
mov
scas
out
mov
inc
jmp
push
sbb
orl
mov
test
push
add
filds
sti
jmp
orl
jl
inc
fwait
fwait
lods
aam
insb
sub
fnstsw
xorb
les
mov
fs
test
mov
decl
outsb
pushf
add
fidivrs
mov
or
ret
mov
sub
int3
imul
mov
sub
mov
dec
mov
inc
jge
jle
adc
mov
jmp
mov
add
popa
jg
adc
mov
sbb
in
dec
jne
or
mov
out
pop
repz
cmp
sub
ret
jp
pusha
add
or
xchg
pop
inc
jmp
ja
es
pop
les
pop
inc
mov
xchg
inc
icebp
sahf
fsubrs
push
jg
push
lock
lods
mov
mov
ja
in
repz
pushf
xor
push
scas
bound
aad
bound
mov
insb
mov
cmpsl
xor
pop
call
adc
insl
aaa
fsubrl
add
adc
mov
adc
pop
lds
cld
push
pop
incb
les
adc
stos
mov
add
test
adc
push
push
lret
bound
rcl
std
xlat
fisttpll
xchg
int
jmp
mov
rol
scas
mov
or
mov
je
popf
xchg
stc
cmpb
cwtl
shrb
xchg
scas
stos
mov
xor
nop
cmp
call
push
add
lods
cmpb
mov
mov
pop
jl
popa
sub
sub
jmp
mov
ljmp
mov
cmpsl
movsl
xchg
push
mov
daa
push
push
insl
out
jno
nop
push
cmp
and
mov
mov
popa
xor
jmp
inc
mov
mov
jno
loop
popf
aam
iret
xchg
add
cld
aas
sub
xchg
jbe
leave
sub
iret
mov
das
cmp
sub
xchg
lret
mov
inc
inc
fdivrp
enter
lcall
repz
imul
xchg
cld
inc
jo
loopne
jno
stos
stc
and
fldenv
xor
xor
mov
jp
test
mov
mov
mov
jge
xor
icebp
push
mov
jl
mov
imul
movsl
or
xchg
out
dec
add
pop
and
fcomps
add
jmp
cmpsl
hlt
xor
jnp
jne
or
add
xor
xor
les
bound
cld
jmp
insb
std
and
jno
sub
push
fmuls
jne
xchg
add
testb
jmp
lret
scas
mov
mov
and
lcall
jo
sub
pushf
inc
sbb
jnp
mov
cs
popf
aad
inc
xor
cli
adc
push
repnz
jmp
repz
dec
push
jns
push
daa
jge
xchg
or
inc
sti
iret
rcll
xor
pop
iret
push
and
mov
dec
ficoms
jbe
mov
cmp
dec
sub
or
xchg
imul
jle
mov
test
adc
dec
arpl
xchg
mov
mov
mov
jb
sub
int
out
jo
lahf
imul
out
shrl
pop
mov
scas
push
pop
shl
rclb
mov
stos
xor
mov
dec
jo
xorb
fildl
mov
jno
cs
jnp
arpl
mov
dec
insl
xrelease
xchg
sarb
cmp
push
clc
jmp
xchg
fstl
sub
cltd
mov
lea
sub
dec
xorl
mov
hlt
es
gs
ja
clc
cld
inc
cmpsl
bound
mov
les
mov
cmp
add
or
sti
or
sti
shr
movsb
push
xor
inc
adc
pop
jmp
fsubrs
in
push
push
ss
and
int
sahf
sub
orb
jo
sahf
add
sbb
or
push
shr
fs
insl
outsl
xchg
clc
jns
out
aad
dec
stos
push
xor
loop
cmp
out
lods
adc
clc
inc
fcom
or
jno
mov
dec
jmp
insl
ret
pushf
aad
lcall
jbe
in
mov
dec
add
mov
nop
push
cmc
stos
jnp
stc
inc
mov
fidivl
jmp
push
ljmp
bound
adc
mov
xchg
dec
xor
clc
cli
stos
sub
je
popa
les
fldt
mov
add
shll
xor
test
test
dec
aad
pop
jb
xchg
dec
popf
call
cmp
xchg
ja
mov
sub
mov
test
shll
ja
jno
cmp
dec
ds
pop
scas
pushf
mov
lds
pop
imul
pop
jge
outsb
in
xor
repnz
mov
pusha
push
rcrb
frstor
shlb
push
push
mov
test
clc
fnsave
pop
incl
sbb
mov
into
dec
xor
punpckhwd
adc
lret
sub
int3
jno
ret
cli
mov
stc
adc
sub
xchg
lods
notb
scas
xchg
loope
sahf
mov
sbb
push
loop
enter
and
xor
loopne
cli
mov
cmp
xor
cmc
in
js
loope
adc
sub
add
cmp
mov
or
ds
adc
push
fs
sub
test
psubusw
xor
out
cmc
push
sbb
movsl
fdivs
shl
stc
cmp
sbb
out
push
lahf
pop
jp
test
add
adc
add
js
mov
out
mov
stc
push
jmp
ja
int
pop
fwait
out
pop
mov
mov
repz
pusha
in
cmp
mov
xchg
pop
adc
in
test
cmpsb
push
popa
add
mov
orl
ret
cld
mov
mov
jecxz
sti
test
in
and
iret
ja
dec
cmp
and
pop
xchg
hlt
js
add
inc
sub
cmp
cmpsb
and
fsubrs
push
iret
push
loop
mov
xor
fcoml
shlb
xor
jne
cmp
ja
cli
and
scas
mov
mov
popf
adc
mov
inc
inc
pop
mov
out
les
stos
aad
icebp
sub
nop
or
repz
pop
popa
loope
arpl
int3
mov
jle
ljmp
xchg
stos
sti
in
bnd
mulb
mov
cmp
push
xchg
stc
movsb
push
fildl
jbe
mov
xor
cmp
jo
lea
mov
fisubl
imul
filds
scas
push
xchg
jmp
imul
push
sbb
sub
xchg
das
xor
sbb
lret
jle
jnp
aas
lahf
rorl
fcomi
pop
ljmp
jecxz
lcall
mov
loop,pn
fsubp
cltd
jo
movsl
clc
jmp
cmp
mov
xchg
push
xlat
sbb
sbb
push
out
movsb
sbb
ss
push
addl
xchg
mov
loop
dec
sub
dec
pop
mov
jne
loopne
jo
mov
movsl
push
push
invd
jo
mov
jns
push
push
nop
fnsave
out
inc
movsb
xchg
cmc
stc
ljmpw
aad
cli
adc
sbb
dec
test
shrl
sbb
imul
mov
xchg
mov
rorl
push
xor
xchg
push
jmpw
js
sub
and
mov
mov
add
jg
dec
inc
xor
fstp
add
add
xchg
mov
mov
xchg
adcb
insb
leave
lret
push
je
add
gs
notb
lret
adc
test
mov
rcll
adc
test
mov
cmp
je
call
enter
lods
xor
iret
push
mov
push
addr16
fiadds
sub
adc
push
popa
and
jnp
adc
loop
mov
aam
daa
in
xor
into
rclb
retw
pop
addr16
push
cmp
or
mov
test
cmp
cmpb
stos
mov
push
test
dec
push
jnp
cs
mov
fwait
jp
or
lret
inc
or
xchg
jo
fmull
or
cs
and
in
enter
jnp
les
xor
roll
sub
xor
pop
add
sub
iret
int
mov
mov
stos
cmp
enter
sub
mov
pop
xor
jb
adc
rclb
sbb
xchg
movsl
popf
xor
ss
inc
pop
stc
push
lret
mov
jne
pop
dec
loope
mov
lods
lock
dec
std
cli
aad
dec
sbb
scas
cmp
fsubp
dec
push
lret
mov
dec
std
test
shr
iret
push
aas
movsb
mov
adc
add
pop
loope
aas
cmp
cwtl
pop
xchg
xorb
mov
lods
bnd
adc
movsb
cltd
jg
shrl
xchg
pop
aaa
mov
inc
cmp
add
sub
movsl
inc
pop
lock
in
mov
ret
sub
rolb
ds
pop
int
cwtl
sub
xchg
inc
inc
push
daa
scas
pushfw
add
lods
cmp
lock
adc
xchg
or
fiadds
iret
nop
bound
lock
hlt
xor
rorl
repz
mov
imul
sbb
andl
cltd
cli
adc
pop
push
add
sbb
mov
sahf
sub
cld
mov
inc
pop
inc
leave
decb
sbb
lock
inc
mov
cwtl
mov
sbb
pop
cmpsb
pusha
cmc
shlb
scas
jne
mov
adc
std
pushf
lds
inc
je
mov
cmpb
adc
stos
xchg
adc
pushf
into
fcomip
xchg
xchg
xchg
mov
xor
aam
loopne
imul
jo
and
sbb
cmc
ds
sub
adc
into
mov
outsb
cltd
pop
or
dec
fisubrl
data16
and
testb
mov
out
add
xchg
inc
and
sarl
faddl
xchg
arpl
mov
cmc
out
pop
sub
shll
call
mov
imul
das
push
mov
inc
mov
push
int3
dec
js
enter
mov
int3
sti
mov
dec
shll
loopne
xor
out
or
movsb
cmp
sub
ja
test
mov
daa
int
imul
cmp
add
nop
inc
pop
rolb
and
dec
int3
in
dec
sub
add
ljmp
out
jg
or
aaa
repz
jb
test
mov
out
sub
add
ret
into
aas
pop
loope
jg
jmp
insl
add
out
rcrb
adc
push
iret
and
fdecstp
popf
loope
add
pcmpgtb
arpl
dec
pop
sti
call
and
icebp
inc
push
inc
dec
iret
mov
push
in
sub
add
push
loop
push
test
mov
mov
shl
mov
mov
fimull
insb
les
jno
out
push
sbbl
or
or
xor
and
inc
or
jle
adc
popf
addr16
mov
inc
pop
mov
int
jno
or
xchg
or
in
push
icebp
sti
in
das
nop
aas
movsb
dec
dec
mov
inc
cmp
dec
jns
lahf
movsb
and
leave
cmp
fbstp
ja
mov
xor
or
push
sbb
mov
dec
lahf
mov
lcall
imul
ret
adc
sbb
pop
mov
mov
sahf
lods
xchg
add
les
add
push
in
or
xor
into
aaa
and
or
out
add
push
lds
fstl
jecxz
inc
bound
xchg
nop
cwtl
jmp
rcrb
stos
loop
dec
sahf
or
int
jno
push
and
lods
and
stos
and
shll
dec
jnp
cwtl
stos
jns
sahf
loop
shlb
adc
mov
jg
test
dec
neg
jp
mov
xor
jmp
and
jo
pop
imul
jae
mov
sbb
pop
push
popa
stc
add
das
pushf
adc
test
loopne
cltd
adc
cmpsb
jb
xor
ds
mov
cwtl
cmp
cmp
push
and
je
push
push
movsl
lahf
shrb
movsb
ss
andb
roll
aaa
in
test
inc
test
stos
rclb
and
adc
push
jae
lods
ds
fs
lea
aaa
xor
adc
mov
not
fsincos
nop
call
movsb
in
jmp
pop
loopne
sbb
pop
xor
iret
jle
mov
enter
pop
inc
mov
mov
sti
xor
cli
ror
cwtl
or
addl
rorb
adc
push
loop
lock
dec
movsl
jl
iret
in
xor
sahf
mov
push
enter
into
cmp
jb
dec
sbb
dec
cli
scas
xchg
pop
cli
sarl
outsb
dec
jnp
lret
push
test
adc
mov
cmp
lret
daa
xchg
sub
ret
scas
cs
push
mov
push
dec
test
cs
cmp
dec
pop
sub
adc
insb
mov
mov
aas
addr16
xchg
push
pop
adc
int
mov
mov
sbb
pop
xchg
cmp
dec
lds
ds
out
fwait
sub
ljmp
icebp
les
jo,pt
dec
mov
into
aaa
mov
or
and
stos
mov
aam
jbe
addb
adc
sbb
add
fiadds
add
push
out
xor
xchg
lret
or
jmp
jge
data16
lret
mov
dec
jns
jo
sub
fldlg2
cltd
add
cmpsb
jecxz
and
out
icebp
ja
sub
fs
jmp
mov
adc
cli
sub
js
jns
inc
or
scas
mov
std
bound
xchg
movsl
jns
shlb
and
cs
or
in
flds
add
test
mov
sub
pusha
clc
outsl
xor
push
mov
fcmovu
scas
push
ljmp
hlt
cmpsl
sbb
cmp
jge
jl
jge
mov
mov
pop
inc
out
add
adc
inc
daa
jne
xor
or
sbb
popf
lods
sahf
adc
and
outsl
xchg
orb
pop
cmovae
pop
sub
xor
push
sti
jl
lea
sub
add
jge
imul
dec
sub
add
pushf
jo
icebp
pop
sub
mov
mov
jecxz
xchg
neg
cmp
jl
dec
jns
aam
fists
or
test
and
jns
jmp
fnsave
push
adc
xorl
mov
sub
fistpl
dec
movsl
adc
in
xchg
xchg
inc
pop
mov
fnstcw
aas
lea
aas
test
mov
xor
cmp
add
add
es
inc
sbb
stos
push
ss
add
xchg
iret
insl
aad
cmpsl
sub
aad
xorl
mov
dec
adc
lock
mov
bound
or
inc
addr16
test
jb
leave
jo
xchg
mov
push
jp
stos
mov
addl
or
jne
pop
mov
jae
mov
dec
cmp
dec
roll
sbb
sub
sub
add
filds
loopne
in
jne
pop
insb
and
inc
xlat
jno
ss
sti
sbbb
sbb
sub
add
cltd
mov
lds
fwait
jle
xchg
inc
sub
mov
repnz
jne
clc
shr
shlb
je
shr
in
sbb
daa
pop
cwtl
mov
sub
rcr
int
mov
popa
rolb
xchg
data16
push
shrl
ljmp
add
add
stos
sahf
das
outsb
lret
movsb
cmpsl
out
jno
add
pop
ljmp
mov
mov
adc
stos
jbe
jge
jb
js
pushf
dec
out
pop
addl
or
fsub
repnz
cmp
das
ret
xlat
mov
movsb
sahf
aas
int3
add
mov
sti
mov
adc
jl,pn
pop
popa
lea
hlt
dec
mov
scas
in
jns
jns
sub
mov
pop
push
addr16
sub
inc
or
and
mov
pushf
scas
fcoms
pop
xor
dec
mov
ja
jo
rsqrtps
mov
xchg
scas
xor
test
jnp
pop
in
jge
dec
cld
add
lahf
arpl
fwait
mov
andl
sub
or
dec
in
jno
repnz
sahf
cmp
mov
repnz
inc
pop
call
dec
sub
cmp
sbb
mov
adc
xchg
aad
mov
xchg
inc
bound
push
stc
or
add
inc
lahf
int
cli
add
addr16
jge
dec
push
cld
cmc
scas
ret
pop
push
mov
xlat
xchg
sbb
js
inc
test
call
pop
nop
in
movsl
mov
mov
push
mov
xor
mov
jb
push
popa
orb
in
sbb
dec
adc
loopne
dec
jge
xchg
lcall
or
outsb
iret
dec
ljmp
push
fisttpl
bound
xchg
pop
xor
cwtl
icebp
lea
sub
das
adc
or
dec
push
xlat
pop
gs
xor
mov
mov
jo
xor
sub
mov
sbb
stc
mov
cmp
and
mov
pusha
je
loope
adcl
push
divl
mov
jo
std
sbb
out
xor
inc
xchg
aas
xchg
shl
sub
test
jg
fdiv
add
push
dec
pop
movsb
cli
insl
daa
push
repnz
pop
mov
push
push
incl
and
jle
outsb
inc
jge
pushf
dec
push
hlt
bsr
or
mov
and
mov
xor
ljmp
xor
push
sbb
add
inc
aaa
fstpt
adc
out
pop
or
fdivrl
mov
loope
xor
sbb
jp
push
sbb
or
scas
enter
mov
insl
push
pop
cli
roll
stos
sbb
mov
push
and
lods
mov
pop
push
insb
xchg
lcall
imul
int3
jbe
mov
add
std
add
or
insb
push
xor
mov
clc
insb
aaa
out
fwait
popa
cmp
sbb
out
xchg
int3
push
insl
cmpsb
jae
mov
xchg
ficoms
lds
or
in
mov
and
mov
fucomp
mov
xchg
inc
test
test
mov
add
fs
lods
testb
movsl
les
xorl
adc
xchg
popl
aas
out
std
adc
or
imul
repz
rcrl
adc
imul
pop
inc
jmp
cmpl
popf
test
out
ficomps
lds
pop
pop
and
add
or
notb
mov
sbb
and
mov
adc
xchg
pop
es
cmpsl
and
xchg
out
in
sub
in
pop
xorl
mov
or
cli
add
insl
in
push
push
stos
sub
call
sahf
shll
ffreep
jp
ret
sub
pushl
lods
in
test
push
push
aad
in
movb
push
fdiv
in
jae
aam
cmp
pop
add
mov
sub
mov
dec
jae
push
adc
inc
lock
inc
cmc
jmp
mov
mov
and
rclb
cmc
mull
jno
ss
dec
popa
cwtl
idivb
lret
arpl
xchg
stos
dec
add
add
mov
xlat
pop
mov
popa
push
jge
mov
jnp
shll
push
test
test
sub
or
adc
enter
xchg
lret
lret
sub
mov
out
mov
out
or
xor
dec
mov
pop
sbb
add
cmp
lock
fisttps
cmp
cld
imul
inc
xchg
hlt
mov
in
adc
push
mov
push
xchg
cmp
cmp
mov
pop
arpl
call
movsl
dec
dec
pop
push
imul
mov
jno
pushf
loope
pop
pop
dec
jg
jmp
and
push
out
jo
dec
enter
fstps
nop
in
mov
and
lahf
pop
insb
aaa
xchg
sti
es
sbb
test
xchg
loopne
jns
mov
dec
dec
sti
jnp
test
mov
subb
in
popa
ss
jb
xor
and
fsubs
ljmp
mov
in
jle
or
out
sbb
xor
sbb
mov
mov
xchg
out
xor
arpl
push
roll
mov
add
test
sub
scas
jmp
pushf
and
nop
xchg
cmpsb
in
jle
int3
dec
test
mov
lds
push
dec
jbe
icebp
lret
popl
fadds
cmp
dec
sbb
sbb
dec
pop
movsb
ret
and
mov
lds
stc
push
mov
mov
rcrw
les
aaa
ljmp
lcall
xchg
js
hlt
jno
jecxz
push
movsl
mov
adc
pop
mov
orl
ret
mov
stc
sti
inc
sbb
and
and
test
fs
fnstsw
out
sbb
es
insb
mov
pop
or
int
out
je
jge
bound
mov
mov
adc
ret
xchg
sbb
dec
dec
scas
jb
and
xchg
push
sub
mov
xor
dec
test
test
loop
mov
lock
xor
scas
dec
or
mov
stos
and
cmp
xor
xchg
pop
fdivs
aas
lret
cmp
jp
push
sbb
xchg
das
outsl
sbb
jle
sub
mov
push
lods
lret
add
and
fxch
out
push
les
inc
xchg
lret
fadds
addr16
out
pop
push
mov
xchg
inc
pop
insb
dec
imul
push
dec
icebp
cmp
sub
jg
outsl
mov
jae
aad
pop
adc
es
mov
mov
push
leave
std
repnz
mov
movb
std
lea
cmp
fisubs
push
fcompl
and
xor
push
mov
loop
ror
dec
xor
gs
aas
mov
ss
xor
call
out
loopne
dec
sbb
mov
xor
popa
std
jbe
addb
cltd
sbb
and
ljmp
loopne
lds
into
pop
jge
les
jp
push
xlat
in
fstl
mov
push
ljmp
cld
and
push
outsb
sub
aad
dec
dec
sub
jecxz
fwait
and
mov
aam
xor
ret
sbb
insl
test
addr16
ficoml
faddl
loop
adc
jmp
std
hlt
pushl
rcll
cmp
fs
sbb
cmpb
into
dec
mov
jecxz,pt
or
rorb
jne
jle
adc
inc
cmp
adc
fdivr
inc
adc
cmpsl
jb
ret
pop
xchg
lcall
into
shlb
push
and
mov
out
mov
jns
adc
mov
push
lcall
rcrl
adc
inc
cs
jnp
dec
int
daa
nop
pusha
outsl
repz
xor
cmc
fadds
sub
movl
shlb
and
or
cs
into
lods
push
scas
in
scas
add
dec
gs
clc
xchg
inc
movsb
clc
popa
mov
push
mov
cmp
popa
rolb
loopne
sub
ja
daa
pop
adc
pop
jp
jecxz
leave
lahf
dec
mov
add
lret
or
repnz
inc
stc
movl
cwtl
push
push
pop
xsaves
dec
mov
jb
addb
jb
adcl
fs
mov
mov
sub
cmp
mov
jecxz
ret
mov
inc
add
jle
out
ja
add
cs
insl
test
aas
icebp
lods
je
and
jbe
mov
in
push
cmp
filds
push
adc
lcall
cli
sub
xchg
jecxz
in
jns
xchg
icebp
mov
aas
outsb
lock
push
ss
adc
fwait
outsb
mov
movsb
add
pushf
dec
stc
push
popf
stos
cmp
dec
lods
orb
mov
pop
std
pop
push
mov
lret
push
insb
inc
dec
xor
add
fidivrl
push
mov
lock
dec
xchg
cmp
cwtl
mov
or
xor
or
pusha
in
outsl
bound
aam
cmp
lock
pop
in
std
int3
pusha
pop
xor
ja
pop
fwait
rcrl
out
push
add
fisttpll
fistps
xor
mov
leave
mov
ja
mov
scas
cmp
adc
aam
xlat
push
rorl
and
sarb
inc
fcomi
or
jbe
sbb
xor
std
add
clc
sub
or
or
inc
xchg
xor
mov
adc
and
fdivrl
push
iret
cmpsb
push
xor
xor
sbb
ss
iret
add
mov
inc
sub
das
sub
lea
mov
aaa
add
push
scas
mov
cs
daa
aaa
insb
mov
add
dec
nop
aas
lock
push
mov
cmp
pusha
faddl
jnp
inc
or
push
dec
decb
pop
lods
xchg
sub
mov
mov
inc
jnp
sar
cmp
clc
cmpsb
mov
inc
in
fiaddl
stos
jb
push
sub
in
push
insb
jl
es
push
popf
push
pushf
out
hlt
add
movsl
mov
push
insl
cmp
sbb
stos
and
dec
inc
shr
and
ja
dec
icebp
xor
cmpsb
daa
aad
in
call
int3
int3
mov
mov
jne
push
lret
mov
loopne
push
or
jl
jmp
in
test
xor
sub
cmpsb
add
repz
clc
xchg
xor
stos
mov
adc
mov
addl
insl
jmp
cwtl
lahf
insb
arpl
push
mov
stos
mov
sbb
stc
std
add
push
insb
inc
push
sbb
push
add
sbb
stc
lds
mov
inc
hlt
adc
xor
sub
dec
dec
add
pop
mov
push
in
dec
cs
add
sbb
bound
mov
insb
fidivl
pushf
test
xor
push
add
jecxz
dec
ss
jle
lods
adc
dec
daa
inc
cmpl
xchg
or
add
sub
popa
cs
and
jno
jl
cmp
test
int
dec
xchg
xchg
out
pop
or
imul
jg
icebp
xchg
dec
stos
mov
dec
jp
fcmovnu
and
inc
cltd
out
dec
mov
ja
dec
jns
push
je
addr16
sbb
mov
rorl
adc
mov
rcll
xchg
cmp
pop
xor
loopne
fcompl
outsl
dec
cmpb
push
add
repz
ret
mov
stos
ret
sub
std
enter
sbb
push
mov
dec
ljmp
inc
and
adc
push
leave
pop
xchg
test
popf
decb
repz
mov
dec
ss
xchg
movq
cltd
lock
add
fmull
mov
push
fwait
pop
je
dec
mov
shll
aad
xchg
adcb
xchg
xchg
cmp
add
in
fs
add
pop
mov
dec
mov
xor
adcl
retw
test
enter
mov
jl
push
fs
mov
ja
pop
pop
adc
out
push
sbb
imul
dec
clc
fistl
shlb
mov
pushf
push
int
push
or
pop
sub
lods
out
mov
testb
cmpl
xchg
int
insb
stc
mov
push
cltd
sahf
and
push
inc
or
mov
into
fucomp
fstpl
outsl
das
cmp
jae
aas
dec
mov
outsl
push
mov
fistl
movsl
adc
cmp
push
push
adc
inc
mov
lods
add
cs
out
and
cmp
cmp
lds
ret
ss
rcll
je
inc
test
mov
arpl
in
insb
push
or
ljmp
mov
lret
jp
push
add
dec
add
mov
aaa
mov
mov
mov
int3
rcrb
push
fdivl
ret
sarb
fldl
in
jne
je
sbb
lods
fwait
jp
into
pop
xor
cmp
imul
imul
push
inc
inc
push
xchg
add
pop
inc
mov
jno
push
int3
dec
jmp
subl
outsb
pop
lods
lahf
push
and
inc
in
std
or
popa
add
jmp
sbb
xor
mov
cmpsl
nop
in
lret
jb
or
jmp
inc
hlt
or
dec
loopne
shll
ds
jne
push
scas
es
xor
xchg
test
cmpl
jle
outsb
pop
inc
pop
popa
ret
decb
outsl
subb
mov
aaa
or
mov
pop
xor
rcrb
jo
inc
clc
arpl
dec
mov
ds
mov
movsl
push
into
push
jno
cmp
sahf
lea
stc
and
out
push
fiaddl
lds
cmc
mov
sarb
mov
pusha
aad
sbb
ret
sub
add
ror
mov
xchg
dec
sahf
hlt
or
lea
inc
andl
and
mov
xor
and
fsubl
shlb
lahf
scas
dec
sub
jne
jmp
cmc
out
fs
and
xor
sbb
xor
push
jno
or
mov
popa
shlb
ss
int
test
pop
dec
mov
xchg
mov
aad
and
rorb
sbb
dec
or
cmp
rcll
mov
jmp
xchg
jge
adc
cmp
loopne
cmp
jmp
cmp
popa
data16
ljmp
xor
pusha
leave
stc
faddp
push
outsl
mov
lcall
cmpsl
mov
adc
or
dec
dec
push
or
mov
fists
je
mov
push
push
stos
mov
ret
mov
int
inc
jne
je
scas
mov
lcall
and
sti
ror
in
pop
xchg
pop
loope
out
arpl
jne
sbb
xor
fs
lea
adc
std
scas
cmpl
fmuls
lea
xchg
mov
or
jecxz
outsb
out
orl
cli
shll
add
aas
push
mov
sub
fildll
mov
add
pushf
data16
and
nop
rorl
movsb
das
dec
push
stos
scas
dec
sbb
stos
loopne
push
mov
ljmp
sub
fmul
aam
jmp
or
pop
cmc
or
leave
fsubrs
fwait
jno
repnz
lret
rcl
sbb
push
mov
jb,pt
or
push
or
pop
pushf
sub
add
pop
je
imul
jno
jp
xchg
hlt
push
push
imul
daa
add
xor
xchg
fstpt
lods
jno
xchg
cltd
ljmp
in
dec
dec
and
mov
out
fstl
mov
dec
mov
add
lds
lcall
cmpsb
and
repz
imul
fwait
push
lret
mov
xor
xor
cs
inc
xor
or
cwtl
push
pushf
arpl
push
mov
sbbb
pop
xor
dec
dec
adc
add
cmp
adc
jmp
in
inc
inc
int3
push
jae
sbb
cmp
or
and
pop
dec
lcall
add
stos
lods
jmp
add
mov
cmc
add
pop
mov
out
add
outsb
fldl
cs
sub
sub
or
sbb
movsl
push
dec
imul
mov
sub
sbb
popa
push
or
in
push
cmp
lret
mov
sub
and
fdivl
and
lahf
mov
mov
imul
and
shlb
xor
xchg
shll
mov
dec
scas
push
sbb
test
and
push
daa
ja
loop
and
push
dec
call
push
das
out
mov
les
push
pop
pop
mov
rorl
jge
lret
lret
or
arpl
imul
mov
mov
mov
fcompl
mov
xchg
add
in
sub
pop
mov
rorb
pushf
inc
pop
mov
add
testl
into
xor
xchg
mov
ds
add
or
xchg
mov
fdivr
icebp
ss
pop
sbb
enter
xor
idiv
fwait
mov
cs
notl
out
xchg
lock
add
cwtl
mov
in
lahf
dec
jmp
insl
and
jg
scas
dec
int3
loopne
call
or
repnz
test
ss
aad
xchg
inc
cmp
cmp
dec
or
clc
dec
clc
outsl
cmp
enter
xchg
aad
mov
ljmp
cmpsb
push
je
ja,pt
smsw
test
or
cmpsl
lods
popa
or
push
inc
test
sbb
mov
bnd
xchg
push
fstl
dec
or
int
inc
adc
push
cld
aad
arpl
xor
adcb
xchg
lods
ret
or
test
or
mov
out
lcall
mov
mov
lods
fwait
ja
lret
mov
jno
and
inc
mov
std
outsb
loopne
test
dec
and
dec
les
mov
dec
insb
cmp
push
insl
xchg
cmp
das
sub
push
jecxz
rcrl
imul
mov
mov
js
xchg
xchg
test
stos
scas
insl
int3
push
insb
in
jmp
sbb
fldl
sbb
fs
dec
es
int3
js
sub
push
lea
jb
xchg
or
scas
lods
cli
dec
shlb
mov
mov
popf
add
enter
ret
movsb
lods
jmp
and
pop
loop
fisubs
mov
cli
mov
cmp
iret
jae
add
jmp
jb
bnd
iret
push
filds
mov
cmpsb
and
lock
jbe
pop
mov
cmp
cli
stc
jg
mov
xor
cmp
mov
mov
pop
add
mov
repz
fstps
aam
imul
setne
jg
mov
fcmovu
js
sahf
shlb
sbb
lea
mov
test
loope
and
or
adc
scas
cmp
adc
arpl
test
fs
sti
lea
sub
mov
test
arpl
dec
es
pop
movb
or
enter
sti
pop
xchg
cmpb
ss
add
lea
sbb
mov
cmpsl
iret
mov
cmp
pop
push
imulb
sub
inc
movsl
aaa
aas
and
xchg
fs
push
shlb
adc
jle
sub
out
and
shlb
outsl
xchg
in
std
hlt
jbe
sbb
fs
cmpsl
roll
cwtl
mov
out
ror
fwait
lock
subb
arpl
in
ja
or
fs
push
dec
pushf
or
xchg
jb
sbb
sarb
mov
mov
adc
gs
movsl
pop
mov
test
movsb
sbb
jle
les
subb
aas
lcall
pop
imul
aaa
gs
in
js
insb
lock
push
int3
ret
mov
pop
add
stc
jnp
sbb
testb
imul
loop
shll
sbb
push
xchg
xor
or
xchg
dec
enter
enter
lods
das
cli
add
push
leave
fmuls
call
insl
pop
mov
jecxz
add
mov
push
inc
in
cli
sub
out
sub
pop
out
push
xchg
sub
pop
sbb
adc
lahf
ficoms
add
push
xchg
in
or
sbb
jmp
push
daa
rorb
cmp
enter
mov
sbb
inc
fwait
ret
sahf
jle
out
xor
adc
jle
std
les
sti
jns
rolb
lock
mov
sbb
shrl
jp
push
int3
mov
bound
imul
bound
inc
pop
fsubs
push
adc
jae
int
out
test
or
dec
cmpsb
popa
push
xchg
int
scas
adc
or
push
push
pop
jae
inc
daa
jae
aam
lods
jno
and
pusha
daa
lahf
rclb
enter
push
mov
fidivrl
jns
enter
pop
jmp
lods
daa
inc
jecxz
jns
jecxz
adc
cmp
orl
comiss
mov
mov
hlt
sahf
add
sub
sahf
enter
cld
ds
insl
cmc
leave
cmp
cmc
scas
push
popa
xchg
jb
add
and
nop
fnstenv
sahf
lods
data16
or
mov
mov
push
subl
sub
sub
cmp
nop
add
jge
hlt
mov
and
push
arpl
in
loope
add
sti
xchg
mov
xchg
ja
ja
dec
addl
pop
xchg
sub
loope
popf
push
jge
or
andl
dec
xchg
mov
pop
and
jns
mov
int3
int3
jmp
dec
data16
pop
xlat
stos
mov
xor
xor
es
loopne
dec
jmp
cmpsl
sbbl
call
jle
xchg
movsb
sarb
lea
and
jo
mov
and
mov
and
jmp
mov
scas
int3
aam
loop
xchg
dec
daa
push
and
andb
test
cltd
add
scas
add
jb
inc
cmc
pop
arpl
js
fdivrs
pop
pushf
jns
add
adc
lock
adc
jge
inc
sti
push
movsl
rol
push
hlt
jnp
incl
push
or
sub
movsl
cmp
addr16
in
pcmpgtw
add
insb
pop
fs
or
sub
adcb
dec
je
mov
call
inc
clc
ret
xchg
sub
inc
movl
or
sar
data16
jae
stos
mov
pop
cmc
dec
jg
mov
aaa
dec
add
imul
mov
and
shrl
negb
jnp
or
mov
shlb
out
mov
gs
outsl
aad
cli
jg
ret
cmp
fists
and
cld
and
xchg
pushf
aad
lods
xor
cmp
and
popf
sbb
adc
es
pop
jmp
lret
int3
out
pop
inc
xchg
sub
mov
xlat
repz
dec
jb
lea
stos
xor
shll
mov
sub
cmp
lcall
gs
and
and
xlat
enter
jno
stos
cwtl
push
mov
or
repz
iret
ds
pushf
enter
pop
fidivs
mov
xchg
sti
xchg
xchg
push
sbb
sub
fsubp
mov
aas
push
add
mov
sti
jecxz
hlt
test
lahf
rolb
lcall
sub
mov
lock
xchg
stc
test
insb
loopne
out
jbe
xor
mov
jnp
xchg
mov
nop
mov
int
mov
fxch
call
test
sub
call
jbe
dec
cld
into
xchg
shlb
dec
test
ret
xor
jecxz
roll
cmp
or
test
mov
xor
std
add
xchg
mov
sub
jne
rcll
cmp
imul
mov
pop
mov
mov
xchg
in
gs
mov
mov
push
mov
xchg
mov
sahf
in
rorl
out
mov
dec
xchg
fptan
ja
push
mov
xor
push
or
pop
dec
insl
imulb
xchg
mov
stc
xor
push
push
std
sub
xor
clc
in
shr
jns
cmpsb
xor
in
lods
mov
push
sarl
pushf
lcall
jmp
mov
jo
mov
jmp
add
inc
aam
stos
push
adc
movl
testl
mov
aam
adc
shl
out
cmc
sahf
sbb
enter
cs
into
test
sub
mov
mov
je
mov
iret
cmp
xor
and
adc
sbb
shll
jb
xor
movl
cmp
out
xchg
scas
mov
push
add
xor
lahf
inc
jae
sbb
dec
lret
scas
gs
icebp
js
cmpsl
xor
adc
push
gs
mov
cmp
ja
mov
cmpsb
stos
push
xor
enter
and
add
xlat
dec
and
in
add
cli
or
std
xabort
sbb
lfs
jae
xor
push
pop
sbb
mov
add
cmc
push
cmc
ret
scas
lcall
add
inc
shlb
xchg
xor
jl
mov
fpatan
sub
sub
dec
cmp
leave
xchg
jbe
insl
cld
push
ljmp
pusha
lea
mov
std
test
cld
lea
jmp
mov
sbb
inc
fisttpll
fisttps
lahf
mov
stos
or
outsb
shll
repz
cli
lock
mov
inc
rcll
inc
push
jne
mov
add
xchg
push
iret
or
dec
push
adc
xor
dec
in
mov
out
and
mov
sahf
adc
arpl
add
jge
jbe
je
add
test
add
jo
jno
lahf
daa
cmp
cltd
es
scas
out
or
jb
mov
lods
stos
mov
dec
stos
inc
aad
mov
and
rclb
xor
sbb
mov
movsl
xchg
mov
xchg
lods
pop
insl
nop
inc
sahf
loopnew
or
sub
inc
imul
xor
aad
jae
sbb
fidivl
mov
xchg
push
push
adc
js
and
das
push
and
or
bound
mov
aaa
ljmp
add
aaa
in
jb
push
xor
mov
mov
ficoms
jne
int3
call
lea
add
pop
mov
sbb
lock
call
mov
xchg
inc
cmp
adcb
scas
hlt
xchg
test
xchg
pop
xchg
cwtl
orl
inc
adcl
mov
mov
jno
dec
enter
stc
sbbl
inc
insw
cmc
push
mov
jbe
pop
or
push
xchg
push
jle
into
int3
popa
in
add
jge
inc
jl
and
pop
lret
or
jle
rcrb
andb
sub
shlb
push
xchg
or
dec
outsb
sub
je
out
dec
cmc
inc
fs
scas
xchg
sub
cmp
fsubrl
sbb
cmp
pop
inc
sarl
pop
push
cmp
repnz
and
scas
negb
es
inc
arpl
or
fcompl
add
cwtl
sub
dec
mov
xor
je
mov
and
push
mov
shrl
and
test
fdivl
lds
in
mov
jp
jecxz
jl
add
xor
les
hlt
cmc
push
cs
stos
fcomip
imull
xlat
in
mov
xchg
out
mov
arpl
lret
xchg
jnp
cmp
jae
stos
jne
test
int
cmp
test
add
outsl
cmc
mov
add
jae
and
push
cmp
shll
jle
repz
movsb
cmp
aas
pusha
data16
add
xor
mov
bound
dec
fstpl
imul
daa
shrl
mov
lea
xlat
mov
sub
outsb
fildl
out
cmc
xor
cmp
decb
es
insl
ljmp
xor
outsl
pushf
data16
mov
or
jl
imul
es
pop
test
jno
push
popa
insl
mov
mov
xor
or
pop
xor
xor
jle
adc
fisubl
pushf
cs
pop
jle
lcall
fdivl
ret
std
ja
push
int3
movb
or
movsl
dec
xlat
add
xor
call
mov
push
push
mov
addr16
push
scas
sub
xchg
or
cmp
imul
cltd
mov
dec
in
jl
adc
pop
adc
sbb
push
push
sbb
push
adc
sub
add
xor
int3
lahf
mov
sub
jmp
jmp
jnp
lahf
mov
sub
dec
mov
mov
sahf
or
clc
loop
nop
sbb
hlt
push
jae
mov
dec
cmp
lret
out
dec
aas
adc
sub
sub
dec
mulb
xchg
and
mov
push
insb
mov
bound
xlat
cltd
adc
test
mov
mov
or
push
movb
stos
xchg
ja
addr16
pop
adc
rcrb
stos
mov
sub
jae
cmpsb
push
sub
jnp
push
adc
dec
xchg
cmp
cmp
or
ljmp
ret
lret
sub
ds
fistps
or
xchg
jb
lcall
mov
sbb
test
ret
icebp
out
mov
push
dec
or
cmp
bound
push
arpl
test
nop
xchg
and
incl
jl
or
movsl
mov
xlat
out
jmp
popa
data16
push
add
test
adc
cmpsb
scas
fsubrp
es
test
mov
ja
daa
and
xchg
js
jp
and
jbe
mov
jns
icebp
jge
outsl
in
imul
sti
fcomps
sti
fisubrl
out
sbb
lds
xchg
js
mov
lahf
loopne
pop
inc
sub
mov
lret
inc
mov
mov
dec
incl
out
mov
pushf
cmp
fs
pop
cmp
sub
mov
dec
sub
push
in
mov
pop
and
out
mov
dec
mov
out
cmpl
xorb
push
add
jle
sbb
movsl
lahf
je
cltd
and
mov
pop
pop
test
fwait
pop
push
xchg
pop
movsl
or
or
xchg
hlt
and
aam
loopne
out
mov
push
mov
sti
aam
inc
push
xchg
inc
jecxz
shr
int
dec
jmp
stos
add
sarb
rorl
call
rcl
daa
scas
mov
cmpsb
scas
data16
shll
xlat
push
and
jp
mov
imul
out
sbb
push
push
push
ja
mov
movsb
xchg
adc
pop
or
mov
jmp
pushf
dec
jge
nop
imul
cmpsl
pop
aam
dec
jg
mov
out
imul
bound
lcall
das
jge
xor
bound
xorb
mov
xchg
test
pop
cmp
push
mov
push
jbe
mov
pop
jae
or
fdivr
xchg
flds
ret
jp
sti
lods
rclb
pop
sub
sbb
ljmp
sbbb
subb
cmpl
mov
or
aaa
roll
fwait
cmpl
icebp
pusha
addb
addr16
repnz
subl
mov
in
xchg
lea
outsb
or
std
sbb
mov
or
pop
push
jns
sub
dec
call
fstpl
push
pusha
push
daa
lods
or
add
jmp
fsubl
adc
dec
pop
cmc
outsb
sub
leave
out
int
js
and
ficompl
adc
in
sbb
sub
jp
xchg
xchg
and
sti
repz
jle
and
lret
pop
pop
mov
xorl
shlb
int3
cwtl
xor
sub
cmc
je
and
outsl
push
dec
in
jae
mov
add
lock
jecxz
jne
lret
rcrb
std
pop
push
mov
and
std
mov
outsb
pushf
xor
lahf
adc
mov
mov
add
pop
testl
gs
test
inc
xchg
pop
cli
loop
push
and
outsb
lret
cmp
lcall
xchg
xchg
pop
jmp
icebp
xor
movsl
and
sarb
ljmp
addr16
add
sbb
lods
xchg
cmpsl
xor
lods
lret
add
inc
mov
add
fwait
clc
mov
and
je
lods
sub
dec
xor
jnp
lret
sti
lods
xor
mov
divb
movsb
pusha
sbb
inc
test
out
ret
bound
sbb
and
pusha
push
adc
test
lods
je
dec
jne
and
xchg
dec
aad
ss
cmp
inc
cltd
dec
enter
out
lea
pop
xchg
ret
cmpsb
movsl
mov
pop
pop
or
mov
push
cmp
mov
mov
adc
pop
cli
or
xor
xlat
dec
jmp
xor
insb
lods
mov
insb
fs
fcoms
or
cmp
inc
add
xor
sub
mov
popf
repz
jg
sbb
cmp
test
loop
push
repz
mov
lret
pop
int
pop
sbb
pop
add
dec
or
mov
cli
and
pushf
dec
and
outsl
rolb
xor
pop
mov
rcrl
and
xor
arpl
and
jecxz
mov
rorl
in
push
pop
mov
xor
lahf
sub
and
lret
stc
push
cmp
out
les
inc
not
testl
aad
stos
jns
fisttpl
and
test
mov
in
inc
mov
mov
jmp
pop
jp
insl
push
das
xchg
fldcw
cmpsb
imul
xchg
stc
pop
aas
jmp
aad
push
or
fildll
push
or
dec
js
test
in
imul
xchg
push
jg
out
in
or
or
es
add
pushf
test
adc
nop
enter
xor
mov
daa
hlt
push
jecxz
js
ret
inc
mov
dec
xlat
int3
into
call
shrl
mov
xchg
mov
or
adc
sub
inc
mov
aad
je
imul
and
scas
and
mov
mov
lret
add
mov
aas
in
loop
out
shll
mov
push
mov
adc
pop
jo
add
sti
loop
and
ficomps
popa
dec
sbb
jns
rol
cmpsl
jbe
sub
xchg
pop
push
sub
sbb
jnp
lea
pusha
movsb
jae
sbb
add
testb
pusha
cli
mov
xor
pop
jmp
in
sub
sahf
and
pusha
cmc
or
cmp
xor
cmpsl
stos
and
frstor
add
jmp
hlt
ret
sbb
pop
jmp
mov
xchg
push
cmp
xchg
push
add
push
jmp
cmc
gs
dec
ss
dec
scas
repnz
pop
mov
call
aad
addr16
arpl
mov
stos
xor
add
mov
push
sbb
pop
addr16
fs
aaa
sub
shll
sti
fwait
pop
cmp
fists
movsb
xor
dec
aad
pop
dec
or
jg
dec
sub
and
adc
mov
sub
int
xor
pop
and
mov
rcrl
cwtl
lret
inc
cld
mov
pop
or
add
jae
lcall
mov
test
mov
fadds
fisttps
sub
cltd
int
xchg
or
lock
ds
repz
add
imul
and
decl
mov
and
nop
xchg
push
mov
sub
inc
fmull
push
faddp
dec
add
push
repnz
loop
adc
mov
mov
ds
pop
xchg
xlat
out
mov
mov
pop
out
mov
push
cmpsb
loop
scas
iret
push
xlat
push
jge
ja
mov
inc
lock
jo
jo
test
andb
lcall
jl
mov
cs
add
xor
push
aam
adc
pop
lds
movhps
jmp
mov
jle
fdivrp
mul
push
sub
adc
stc
jmp
mov
jmp
mov
hlt
addr16
sbb
jb
pop
jne
cmpl
xchg
adc
push
mov
fcoms
mov
fisubrl
test
jo
fidivrl
cmp
fidivl
je
dec
js
pop
xor
cmp
cmp
xor
lock
xor
icebp
sbb
jns
cmpb
xor
push
xchg
cltd
mov
sbb
icebp
mov
add
movsl
jnp
lods
xor
xor
sarb
cmc
repz
add
mov
mov
mov
in
push
fidivs
xor
mov
xor
imul
or
out
and
out
jno
add
push
repnz
insb
pushf
ljmp
dec
in
daa
addr16
mov
mov
aam
pop
scas
aas
cltd
orl
adc
inc
xor
jge
push
cmpl
adc
icebp
mov
arpl
and
test
inc
cmc
iret
out
ljmp
das
mov
dec
mov
cmp
pop
jne
loopw
lea
rorb
mov
xchg
outsl
or
adc
jecxz
inc
jno
add
ret
daa
fistl
shl
or
xchg
scas
or
cmp
pop
out
cmpsb
sub
dec
repnz
push
pushf
xor
sub
aad
jne
mov
loop
in
pop
xor
xchg
pop
call
in
les
stos
fbld
cmp
ror
iret
xchg
cmp
imul
mov
sub
fnstcw
loop
inc
scas
push
cwtl
scas
loop
dec
leave
mov
pop
fimuls
jo
cmp
push
xchg
xchg
fmull
mov
sbb
inc
aaa
xchg
call
push
mov
xchg
icebp
mov
mov
mov
xor
xchg
repz
stc
pop
fsubrs
push
pushf
or
adc
or
std
mov
xor
mov
lret
push
mov
jo
xorl
insl
out
mov
adc
icebp
push
pop
pop
cmp
mov
stc
testl
push
push
pusha
sbb
aam
or
fcmovnbe
out
xlat
mov
in
daa
adc
mov
insb
cltd
pop
sti
in
hlt
xchg
shl
xchg
out
cs
push
sbb
mov
push
cmp
mov
jmp
xor
xchg
mov
ds
cwtl
cs
daa
addr16
cmp
cs
shrb
or
jle
add
inc
pop
int
aad
cmp
or
jl
sub
mov
jae
ja,pt
insl
dec
pop
lret
sub
pushf
mov
cld
cmp
jbe
pop
pop
jecxz
adc
movsb
mov
fs
add
or
insb
outsb
movsl
dec
or
mov
sub
cmp
jmp
call
jg
iret
cmpsb
jecxz
jne
test
repz
sbb
mov
sbbl
ficoms
icebp
lret
rorb
dec
cli
dec
mov
push
mov
in
stos
or
jg
lods
subb
push
lea
in
inc
dec
int3
sbb
je
aaa
xchg
pop
sub
daa
shrb
add
fdivs
and
add
shlb
arpl
cmp
pop
movsb
scas
insl
inc
mov
mov
leave
aas
mov
push
insb
outsl
fs
add
sahf
aam
pop
lds
bound
xor
adc
lret
imul
out
outsl
mov
lahf
out
out
add
loop
adc
or
jecxz
inc
popa
std
out
inc
aas
xchg
adc
push
loopne
push
sti
pop
pop
xor
dec
push
mov
pop
xor
xchg
out
mov
sub
fcoml
xchg
cmc
xor
mov
ja
mov
dec
test
mov
dec
sahf
rorl
mov
imull
sahf
call
int3
and
inc
push
ds
jae
sub
cmp
hlt
cwtl
outsl
or
sub
pop
out
cmp
imul
lahf
fists
cltd
push
ret
sub
ja
das
imul
aad
jle
xor
xchg
rep
rcll
xchg
jb
xor
inc
lcall
movsb
ret
push
inc
fsubr
xchg
int
scas
sarb
js
out
push
lods
mov
xlat
jg
jg
add
inc
lock
mov
js
xor
cld
and
imul
or
push
jne
je
in
pusha
and
or
push
push
jp
jnp
push
fildl
add
mov
jmp
pop
jg
pop
cmp
add
mov
adc
es
shll
ljmp
mov
cmp
add
sub
or
lods
test
fidivs
mov
sbb
ficompl
repz
add
inc
cmpsb
adc
push
mov
dec
push
pushw
or
pop
add
imul
mov
dec
test
cmpsl
cmpsl
and
pop
push
or
repz
pop
aas
xchg
mov
fiadds
lahf
scas
icebp
aaa
movsl
adc
stos
daa
inc
rol
cmc
rcl
ja
loope
push
rorl
or
fisttpll
mov
inc
ret
xchg
push
call
daa
insb
aas
sahf
shl
flds
sbb
pop
in
cmpsl
add
inc
int3
lds
inc
lock
adc
out
fs
fptan
int
dec
mov
mov
out
rorl
dec
std
push
fsubrp
mov
push
js
cmpsb
scas
inc
jge
cmp
dec
push
jmp
not
push
aas
xchg
dec
xchg
pop
xor
mov
and
pop
sub
and
lcall
subb
test
ss
sub
outsl
jne
xor
xchg
xor
addl
push
mov
sub
daa
adc
movsb
push
xchg
lock
jl
cld
mov
push
xchg
sbb
insb
mov
mov
mov
inc
sbb
testl
fiadds
test
test
pop
leave
xor
lret
inc
mov
in
xchg
dec
das
repz
add
cmpsb
add
lock
cwtl
das
push
lods
sub
les
cmp
sub
inc
jne
sbbb
pop
outsl
inc
call
pusha
lahf
push
fs
in
fdivl
fidivl
rol
dec
fistpl
lock
das
cmp
inc
add
xchg
mov
arpl
iret
clc
inc
fyl2x
add
mov
inc
sti
loop
clc
movsl
iret
sub
cmc
stos
push
sub
adc
adc
dec
jno
jl
and
or
pminsw
cwtl
sarl
xchg
sbb
test
test
jp
loope
jns
inc
sub
dec
int
sub
cltd
insl
subb
add
mov
adc
gs
mov
xchg
sub
js
mov
jbe
mov
inc
xchg
sbb
mov
inc
das
imul
lods
pop
dec
xor
pop
or
sub
add
insb
loop
xor
testb
jb,pt
push
sbb
inc
aas
dec
push
xor
andl
cld
pop
movsb
sub
mov
nop
jnp
xor
mov
xor
or
cmpsl
enter
mov
lahf
add
ret
int3
fs
movsb
adc
fsubs
adc
and
gs
inc
and
or
scas
and
cld
loopne
push
push
scas
add
xchg
sub
mov
xchg
mov
add
jmp
xor
sub
push
insb
sub
fcoml
movsb
scas
insl
cltd
push
loope
and
dec
fdivrp
mov
lcall
jns
and
dec
aas
and
stos
ja
leave
push
sbb
int3
stc
jg
sub
mov
mov
fldt
aaa
adc
dec
bound
push
imul
clc
inc
push
cli
imul
ja
arpl
or
into
stos
mov
aam
mov
icebp
sub
mov
pop
mov
jbe
add
add
fcmovnu
cmpsb
cmp
adc
sti
or
inc
in
cld
push
stos
sbb
out
cltd
sub
push
mov
sbb
insb
push
jmp
mov
fs
add
enter
sub
add
push
ja
fisttpl
jbe
cmpsb
or
aas
cltd
adc
inc
ljmp
xchg
ror
dec
ja
into
enter
pop
pop
add
test
push
mov
xor
or
iret
nop
sbb
push
jge
pop
lods
sub
aaa
adc
jecxz
inc
xchg
jle
dec
dec
mov
push
or
pop
dec
push
into
mov
pusha
xorb
mov
adc
mov
andb
pop
mov
scas
jne
sbb
mov
daa
mov
insl
sub
push
fdivp
jbe
test
mov
mov
pop
arpl
or
mov
arpl
mov
cs
scas
mov
push
lock
jg
add
fld1
pop
inc
lds
dec
mov
pusha
sbb
adc
add
jmp
mov
pop
push
cmp
mov
mov
aam
lahf
out
dec
repnz
mov
jecxz
nop
or
shll
jl
insl
or
and
repz
xor
cwtl
add
fists
movl
jecxz
cmp
dec
and
jne
les
mov
mov
jmp
int3
in
jbe
fiaddl
sub
sbb
insb
xor
subl
call
push
loope
jbe
mov
mov
push
xchg
jge
fnstcw
cmpl
lret
mov
imul
imul
sahf
xchg
aaa
fdivrs
ds
aas
roll
push
jo
mov
cmp
imul
dec
imul
xchg
mov
loop
movsb
ret
mov
in
push
push
ss
stos
sahf
aam
mov
dec
clc
int
sarb
cwtl
push
jl
jns
stos
pop
mov
mov
jmp
sahf
pop
mov
rcr
push
xchg
enter
cmpsl
cmp
mov
sbb
jle
adc
imul
mov
fidivrs
push
xchg
out
data16
out
inc
movsb
xchg
scas
push
xor
or
or
andl
inc
cmp
jb
add
out
gs
aam
push
gs
xchg
lds
dec
xchg
or
mov
add
jns
lock
fistps
aad
add
scas
int3
inc
lret
arpl
push
mov
in
nop
test
fldenv
jp
push
adc
sbb
js
cmp
loop
mov
jge
fwait
xlat
jo
jecxz
mov
xlat
loopne
and
dec
jbe
xchg
movsl
inc
add
fisttpl
mov
dec
in
mov
push
add
insb
js
std
mov
cmp
inc
adc
jecxz
jmp
cmpsb
in
xchg
mov
test
xor
xlat
andl
or
xor
in
test
xchg
mov
aaa
loope
pop
mov
jns
xor
ss
xor
mov
jge
inc
xchg
dec
mov
pushf
jno
push
outsb
pushf
pop
sbb
or
mov
into
cmp
and
stc
pop
cltd
push
ss
lcall
push
mov
push
push
scas
adc
popa
stos
sahf
ret
mov
je
daa
jne
mov
pop
xor
sub
cli
scas
es
push
call
fmuls
mov
outsl
jo
ljmp
aaa
adc
ja
mov
and
sub
sub
std
xlat
icebp
adc
testl
jmp
push
xor
ror
dec
xorl
xor
insl
xchg
sub
orl
mov
mov
addr16
bound
pop
dec
mul
jmp
sbb
sub
nop
pushf
sbb
ja
daa
or
sbb
and
sbb
addpd
and
idiv
jno
mov
inc
sahf
test
out
dec
jns
pavgw
and
cld
lds
cltd
cmp
push
mov
xor
and
icebp
scas
mov
push
sbb
loopne
jge
push
mov
adc
adc
dec
mov
mov
cmp
ficoml
or
sbb
idivb
daa
add
aaa
jo
adc
sbb
push
or
sbb
scas
loopew
xchg
movsb
dec
sbb
mov
cmp
popf
or
std
movsb
in
mov
xchg
push
cmpsl
and
sbb
js
ret
and
js
push
mov
pop
add
lcall
sbb
mov
xchg
outsl
js
int
jmp
mov
movsl
sub
mov
pop
mov
scas
pop
loop
fsubrl
lcall
outsb
push
sbb
or
push
mov
int
in
test
sub
lods
movl
rcl
aad
ficoml
test
adc
pushf
add
jne
add
adc
imul
mov
adc
or
sub
push
hlt
inc
xchg
imul
out
or
sbb
or
loop
lock
rcl
mov
xor
mov
push
mov
adc
and
xchg
add
movsb
inc
xchg
sbb
aaa
dec
jnp
repz
lcall
mov
or
rorl
int
sub
jp
test
mov
data16
sub
imul
fsubl
repnz
out
out
pop
mov
sbb
mov
adc
stos
mov
pusha
dec
sbb
jne
jnp
outsl
push
dec
fsubr
mov
jb
gs
mov
or
daa
popf
popf
subl
rcl
inc
mov
sbb
mov
add
mov
xor
fs
das
dec
aaa
dec
loope
adc
push
lods
and
sub
dec
dec
push
lret
std
jb
adc
xchg
lds
mov
jnp
pop
jl
jmp
push
loopne
push
loopne
outsl
je
mov
sub
leave
or
repnz
out
push
es
and
test
je
xor
and
cmp
xchg
or
xchg
jmp
shrb
xor
decb
dec
mov
shrl
xchg
out
insl
cmp
jno
xchg
mull
ds
mov
rcr
push
das
mov
inc
cmc
xchg
mov
pop
out
add
pop
test
or
mov
scas
pop
dec
mov
xchg
movsl
mov
in
leave
cmpsl
jns
jecxz
xchg
out
xchg
cmp
and
dec
iret
aaa
inc
jp
lcall
or
jp
cmp
insb
lods
ss
dec
lods
test
pop
xor
das
mov
jecxz
push
daa
or
push
in
int3
int3
or
pop
lret
movsl
inc
dec
push
popf
mov
jecxz
pop
mov
scas
movl
xchg
mov
pusha
lret
fistps
lcall
test
shl
mov
fsubr
jge
mov
pop
dec
int
stos
sti
leave
sahf
jp
sub
outsl
insb
movsb
cmpl
lds
or
mov
cmp
and
loopne
mov
pop
adc
lcall
mov
jne
cltd
insb
dec
adc
lahf
movsw
daa
adc
sbb
adc
addr16
xlat
ret
push
fbld
add
ljmp
adc
mov
cld
mov
inc
bound
les
mov
stos
push
test
stos
mov
and
xorb
ds
insb
mov
cltd
std
seta
or
aaa
shlb
inc
or
add
push
pop
cmp
push
ds
loope
pop
arpl
cs
aas
sub
cmp
mov
push
lret
add
lahf
push
cmc
add
ret
add
push
mov
out
xor
sub
inc
lods
sub
popf
jne
dec
or
sub
mov
push
push
push
jg
push
mov
mov
ss
repz
mov
or
adc
dec
push
frstor
sub
xchg
inc
inc
xchg
add
rcrb
das
arpl
je
inc
push
xor
fldt
add
inc
hlt
xchg
orl
add
xor
jne
push
push
sbb
and
mov
mov
push
stos
out
dec
mov
pop
mov
test
jmp
adc
inc
push
mov
in
mov
xchg
sbb
jae
push
mov
scas
xchg
or
mov
jp
mov
sub
push
std
pop
mov
add
xor
push
pop
outsb
notl
sbb
push
inc
pop
add
dec
nop
sub
dec
xor
pop
inc
je
fisubs
mov
lret
jns
test
xchg
fildl
dec
xchg
mov
mov
xor
fwait
mov
cmp
add
jae
mov
pushf
xlat
iret
adc
das
fcmovb
sbb
jmp
sti
mov
xor
jmp
cld
xchg
jae
jg
or
push
and
inc
mov
test
lods
pop
es
xchg
icebp
fdivrl
lods
xchg
scas
fcmovnu
movsl
call
leave
out
adc
fnsave
fs
testb
cmpsl
xor
daa
xchg
arpl
and
icebp
sahf
xchg
pop
xchg
pop
test
test
mov
repz
xchg
or
inc
inc
or
out
clc
icebp
lret
aam
dec
movsl
adc
gs
lahf
out
ficoms
subl
sarb
or
sub
add
lock
sahf
js
mov
mov
into
lahf
mov
sbb
dec
test
xchg
rorb
bound
jbe
sub
jl
jne
das
xor
mov
push
mov
enter
daa
jl
push
jle
sti
in
xchg
bound
pop
mov
jp
nop
mov
sbb
mov
out
inc
mov
ret
out
cmp
jl
push
ficoms
aaa
xlat
or
mov
push
jbe
jp
xor
xor
and
ffreep
xor
cmp
aad
out
in
aam
in
wrmsr
xchg
push
mov
fwait
push
mov
pop
inc
test
loop
incl
add
stos
lret
jge
shr
pop
ret
xor
cmp
jg
jbe
fmull
jae
ljmp
pop
or
insl
lods
aaa
je
je
inc
sub
jecxz
imul
decb
js
loope
mov
fcomps
sbb
adc
jno
fistpll
out
mov
or
loopne
ljmp
roll
imul
out
or
push
mov
stos
jmp
mov
jg
test
gs
lea
mov
aas
test
pusha
push
fmul
and
dec
push
ljmp
mov
or
jnp
hlt
inc
iret
inc
daa
add
xchg
lahf
cmp
inc
aam
ds
xor
daa
popf
xor
add
adc
lods
add
mov
rorb
mov
les
mov
xor
mov
push
xchg
es
lods
fisubs
movsl
popa
fstpt
mov
jns
mov
jo
sbb
rcl
out
sub
pop
add
subl
inc
push
std
cmp
test
jns
lea
iret
insb
orb
movsl
out
mov
pop
add
and
add
ret
loopne
insb
insl
or
in
dec
mov
repnz
popa
adc
adc
pop
jbe
insl
in
cmpsl
push
imul
pop
out
sub
xchg
sbbb
inc
add
xchg
scas
mov
xor
push
das
in
xchg
push
pop
jne
or
xchg
icebp
inc
in
mov
dec
sti
ret
add
icebp
je
mov
aas
push
test
and
insb
out
dec
loopne
outsb
les
sbb
sub
sbb
cmp
pop
int3
jb
dec
mov
jle
fiadds
hlt
xchg
out
fs
sub
xor
mov
lods
enter
xchg
mov
movsb
adc
sbb
add
mov
fs
int3
pop
mov
dec
stos
shl
jbe
ret
push
jns
das
cmp
mov
cli
arpl
nop
jae
pusha
xchg
fildl
dec
jno
push
push
push
mov
lock
xor
cltd
pop
fistps
pop
cltd
dec
mov
js
adc
mov
dec
loop
shrl
cmpsl
fwait
dec
fnstenv
ss
pushf
sbb
ljmp
inc
sub
sub
arpl
mov
lret
mov
cmp
fdivrs
loope
stos
push
in
xchg
adc
jl
mov
mov
sbb
push
fmuls
jo
sbb
lods
sub
pop
push
mov
shl
mov
xor
mov
mov
mov
and
dec
cmc
sbbb
loopne
sbb
sbb
rcrl
out
pushf
scas
sbb
xchg
or
push
push
xor
cmp
loopne
sarb
and
out
xchg
lahf
xchg
and
mov
xlat
mov
or
adc
jmp
push
sub
stos
jno,pn
aas
mov
call
inc
push
insl
push
dec
push
and
add
imul
ja
dec
add
mov
loope
out
or
stc
inc
sub
sbb
mov
enter
cmc
xchg
inc
mov
xor
das
xor
fildl
mov
push
lds
or
je
and
jo
shrl
cmp
pop
xchg
shlb
cmpsl
cld
das
lcall
xor
jo
imul
movsl
shlb
repz
jg
movsb
fistps
push
adc
lds
pushf
mov
movsb
sub
mov
sbb
inc
push
in
inc
mov
push
push
pop
and
test
pusha
clc
cmp
inc
outsl
mov
ljmp
xchg
jecxz
add
daa
out
dec
enter
fsubrs
repz
sbb
out
mov
inc
roll
pusha
inc
add
mov
push
jmp
add
pop
inc
push
insb
dec
pop
sahf
lret
scas
cwtl
fisubl
mov
xor
xchg
and
leave
xchg
dec
pop
test
and
jns
mov
jbe
jl
addr16
pop
and
pop
hlt
jo
mov
js
push
inc
pop
cmc
cmp
clc
and
inc
add
or
jne
adc
mov
xor
xchg
call
xor
xchg
aaa
or
ds
pop
mov
insl
push
fwait
push
add
sbb
xor
iret
adc
and
cwtl
imul
fs
add
icebp
sub
and
mov
das
lds
pop
jl
fisubrl
push
push
or
aas
loope
cmp
addr16
cmp
pop
aam
clc
push
mov
sbb
xchg
addr16
sub
daa
cmp
jnp
inc
xor
jle,pn
pop
push
xor
mov
sub
mov
aaa
sbbl
das
dec
stos
test
cmp
dec
shl
and
add
sbb
sbb
pop
hlt
cs
and
enter
and
sbb
xchg
jo
rorl
push
mov
inc
in
dec
xor
lcall
int3
adc
jmp
dec
repz
xlat
cmp
incl
stos
sub
lock
cmpsl
jmp
mov
aam
jne
scas
mov
xchg
push
jne
mov
push
adc
sti
loope
test
jbe
rclb
outsb
jno
pop
or
xlat
xchg
test
add
push
and
aas
and
mov
cld
or
cwtl
or
mov
mov
mov
push
aas
sub
push
mov
add
jl
scas
dec
jnp
stos
mov
jbe
sbb
iret
xchg
xchg
push
xchg
and
sahf
sahf
mov
mov
pop
pop
lds
mov
jmp
pop
into
out
push
stos
into
mov
inc
mov
jmp
fwait
inc
xor
das
popf
xchg
mov
pop
adc
mov
movq
jbe
xor
sub
mov
loope
sbb
lret
fmuls
pop
je
in
push
loopne
loope
pop
mov
push
cmp
mov
jnp
scas
push
scas
addl
jne
movl
ljmp
xchg
aaa
std
jle
mov
pop
xor
xor
push
gs
jae
sbb
mov
dec
lret
insl
insl
mov
leave
ss
std
ds
les
inc
mov
in
or
repz
hlt
rclb
in
xchg
adc
arpl
pop
sahf
jbe
or
fpatan
push
and
jno
in
or
cmp
rcr
mov
dec
or
dec
inc
jecxz,pn
cs
out
add
mov
ficomps
mov
stos
fistl
cmpsl
push
out
out
lea
aam
aas
xchg
push
iret
mov
jbe
bsr
pop
xchg
sbb
cli
and
pop
icebp
push
nop
stc
push
and
inc
push
test
jg
push
mov
scas
addb
fidivl
fsub
lcall
adc
mov
movsl
push
jmp
stos
mov
out
sbb
std
fmuls
xor
xor
xchg
and
testl
dec
cmovb
pusha
pop
scas
jge
fwait
pop
mov
mov
xchg
int3
xchg
stos
jo
dec
fistpll
fstpt
ja
pop
loopne
jno
jae
lret
stos
push
sbb
inc
leave
out
movsl
pop
pop
out
bound
out
mov
push
xchg
lahf
pop
fdivrs
mov
mov
mov
addr16
xor
mov
push
lret
int3
jne
or
and
lret
fwait
push
pop
mov
add
adc
idivb
dec
xor
jg
testl
andb
jns
das
cmp
js
mov
or
or
pop
inc
mov
repz
stos
fwait
dec
stos
ds
pop
jmp
outsb
loopne
pop
hlt
sub
mov
test
xor
push
jae
inc
icebp
adc
lret
fimuls
add
inc
xor
cmp
imul
sbb
push
out
negb
jnp
mov
movsb
decl
jmp
jns
and
mov
mov
shlb
sub
push
inc
lods
mov
enter
mov
shll
add
and
mov
pushf
xor
iret
xor
je
inc
mov
cmp
mov
icebp
xor
mov
cmpsb
out
loop
test
mov
jb
mov
xchg
xchg
xor
clc
pop
xor
movsl
jge
xchg
sbbl
add
jmp
leave
mov
mov
stos
adc
ret
xchg
mov
push
jo
cmp
push
push
enter
sub
std
movsb
adc
inc
dec
mov
xor
xor
jmp
lods
add
and
cld
push
arpl
std
mov
out
pop
mov
mov
push
lods
adc
sbb
xor
rcll
pop
jb
mov
pop
adc
je
lahf
imul
rcrb
lcall
cmp
jge
imul
subl
std
leave
push
int3
mov
and
push
scas
icebp
dec
ret
ss
dec
out
sub
lds
xchg
sub
in
or
stos
and
pop
sbb
call
mov
inc
push
sbb
inc
ja
mov
inc
fmuls
xor
fsubs
add
xor
jecxz
test
ret
out
inc
loopne
cmp
lock
sub
sti
mov
lret
xor
out
into
add
lret
push
imul
push
cld
mov
mov
push
dec
jns
add
push
sti
sub
inc
dec
mov
jmp
mov
inc
adc
jecxz
jb
mov
or
movsb
or
push
js
or
xchg
loope
mov
pusha
sub
fs
cwtl
and
and
xchg
pusha
lds
push
ljmp
fbstp
pop
sub
add
jnp
push
mov
push
mov
push
pop
add
push
mov
cs
stc
xchg
jmp
sub
insl
aas
dec
push
insl
mov
mov
pop
mov
jns
aad
jg
nop
mov
and
pop
jle
lea
aam
cmp
rcrl
sub
scas
in
lahf
cwtl
negl
arpl
in
lock
dec
xchg
movsl
movsb
negl
mov
mov
pop
jnp
dec
adc
cmp
mov
xchg
lods
or
and
jnp
jge
push
mov
dec
ja
adc
mov
jb
cmpsb
movsb
sti
xchg
push
sbb
push
xchg
pusha
movsb
sbb
iret
and
mov
cmp
in
xor
lahf
inc
push
ljmp
call
cmpsl
sub
add
sti
add
in
repnz
loopne
sti
mov
dec
mov
dec
in
inc
dec
mov
aam
test
mov
clc
movsl
shrb
test
mov
mov
movb
and
mov
and
xchg
sarl
in
fisttpll
mov
in
mov
and
cld
jl
popa
xchg
ret
adc
nop
repz
in
sbb
inc
add
lds
inc
jle
jbe
lods
mov
xorl
popa
mov
mov
lahf
ret
sub
mov
sbb
popf
ret
js
repnz
cwtl
xor
lds
in
cs
cmp
test
inc
xor
fildll
add
mov
dec
orl
bound
test
inc
andl
pop
inc
and
lock
sub
imul
popl
sub
pop
dec
add
xchg
into
out
sarl
add
movsl
jo
xchg
add
nop
lret
sub
push
mov
lock
mov
filds
dec
lahf
or
cmp
clc
scas
imul
mov
sub
call
es
in
jbe
push
and
fs
cmp
mov
cmpsl
neg
mov
test
mov
xchg
movsl
sub
xchg
pop
xchg
jg
es
xchg
dec
jp
cmc
scas
inc
cmpsl
jb
jp,pt
lods
jae
test
cwtl
repz
pop
xor
rcr
xchg
mov
sub
imul
xlat
in
hlt
daa
ficoms
into
out
jne
aaa
aad
xchg
es
adc
mov
push
inc
mov
lds
cld
push
mov
xor
mov
aas
hlt
inc
jns
out
test
lret
xor
xor
in
mov
mov
dec
dec
mov
ss
out
pop
roll
dec
xacquire
sub
sarb
shrl
int3
addr16
mov
lods
jl
popf
mov
les
cli
cmp
jl
push
lds
roll
ret
jg
call
push
das
arpl
mov
push
bound
out
adc
fistpl
movsl
stc
clc
push
jbe
mov
call
stc
cmp
jmp
or
cmpsb
mov
je
mov
shll
cmc
fistpll
push
add
push
in
or
inc
xchg
add
sbb
lret
loop
pushl
frstor
lret
mov
das
xor
mov
shlb
add
dec
mov
or
ljmp
in
stos
xlat
mov
dec
mov
nop
xchg
dec
inc
stc
sbb
lret
inc
xor
aaa
lahf
and
xor
sti
push
arpl
sbb
jl
and
repz
inc
pop
pop
push
mov
xor
mov
int3
scas
or
xchg
add
stc
lods
in
mov
aas
jge
ja
cld
mov
sbb
fnstenv
sbb
xchg
add
and
loopne
repnz
inc
popf
xchg
mov
sub
out
add
out
shll
aas
imulb
mov
add
xor
push
push
inc
sbb
add
sub
data16
mov
lds
inc
lret
xchg
mov
test
mov
push
jecxz
mov
mov
repnz
mov
lds
add
mov
fwait
mov
out
and
int
lret
shl
xchg
bnd
inc
cmpsb
or
mov
add
dec
pop
xchg
inc
daa
out
cmp
repnz
jge
push
cmp
sbb
jge
xchg
pusha
inc
ja
test
in
mov
scas
push
scas
cmp
and
mov
pop
ja
add
movsl
std
jae
mov
xchg
mov
pop
cmp
lock
fcom
and
fldenv
adc
mov
repz
sub
add
xchg
insl
sub
ret
add
pop
scas
xor
aad
daa
push
lcall
pop
out
jae
add
test
push
lcall
lcall
mov
add
dec
lahf
jne
pushf
mov
orl
in
in
add
xchg
lods
mov
mov
rcr
xor
mov
and
out
pop
mov
jno,pn
imul
lret
mov
jo
sbb
pop
jmp
mov
add
push
cmp
out
out
fldcw
lods
mov
add
in
aam
ja
fldl
xor
xorl
movsb
das
repnz
xchg
jg
pop
out
test
nop
sahf
pop
and
mov
sub
xchg
ret
mov
sbb
or
addb
std
imull
mov
les
flds
lahf
xchg
outsb
xchg
or
pop
cmp
fdivl
insl
incl
or
ja
icebp
popa
sbb
ss
push
leave
pop
mov
fwait
push
and
jg
push
cmp
movsb
inc
fs
sbb
in
xchg
adc
fwait
push
std
add
leave
icebp
out
std
mov
push
cmp
aaa
mov
sbb
mov
dec
icebp
stc
aaa
add
daa
maxps
mov
add
je
shlb
mov
inc
inc
jmp
cmc
sbb
pushf
movsl
xor
cltd
dec
loopne
in
jle
cmp
add
and
stc
aam
call
enter
outsb
and
push
repz
dec
sbb
mov
lods
das
std
outsb
clc
outsl
stos
jg
test
cmp
mov
mov
sbb
repnz
cmp
popa
dec
dec
push
mov
mov
xor
push
fwait
pop
push
loop
daa
dec
inc
dec
dec
xchg
mov
pop
test
test
add
clc
insb
mov
cmp
mov
ret
cmp
cmp
test
movsb
adc
push
js
mov
add
sub
out
adc
adc
cmc
push
pop
popa
icebp
and
lcall
imul
jle
leave
inc
imul
xchg
add
mov
int3
int
mov
das
pop
dec
jge
dec
rolb
les
xchg
stos
sbb
and
or
ja
sarb
js
push
jge
mov
adc
lret
xchg
cmp
inc
jecxz
sbb
pop
and
fcomi
xchg
or
aad
lds
inc
inc
ret
pop
adc
cmc
or
and
add
mov
jno
and
in
xchg
and
fisttpl
outsb
push
mov
or
sub
aaa
sbb
push
out
mov
cmp
adc
pushf
mov
clc
hlt
mov
jns
mov
leave
or
dec
cmpsb
adc
mov
push
push
sahf
dec
jb
or
mov
cmp
mov
sub
cmp
insl
mov
mov
mov
mov
gs
mov
pusha
dec
cmp
xlat
sub
hlt
xor
jne
loop
fists
aas
inc
and
sarb
ret
imul
insl
add
ja
ret
testl
stc
cmp
add
fdivrl
mov
push
call
push
inc
insl
push
or
pop
lcall
jns
loop
or
or
mov
rclb
rcll
xchg
adc
xchg
adcl
popf
jb
push
mov
fdiv
mov
cvttps2pi
mov
cli
mov
in
add
jb
pop
in
adc
lret
mov
insb
icebp
in
sub
jo
pop
mov
push
sub
cmpl
mov
imul
lcall
mov
inc
andl
pop
inc
dec
leave
adc
cld
pop
sub
fistpll
out
and
sbb
mov
nop
xchg
mov
das
xchg
jle
jne
cmpsl
repnz
jb
fnop
push
inc
xor
mov
test
cli
sbb
lcall
dec
lods
repz
daa
sbb
push
add
test
scas
adc
or
hlt
dec
arpl
movsl
xlat
stc
push
aam
negl
sub
pushl
std
adc
getsec
adc
ljmp
cmp
cmpsl
adc
cmc
lds
aas
add
test
mov
and
shlb
inc
out
mov
pop
lods
pushf
notb
es
fnstsw
sti
les
daa
push
xor
sub
xorl
mov
fistpll
rcrl
bnd
testb
cld
das
jp
jmp
dec
enter
scas
add
rcl
aas
andl
repz
dec
push
sbb
js
adc
call
stc
enter
fwait
in
das
inc
sbb
inc
pop
push
lock
push
mov
js
sbb
test
imul
xchg
scas
in
jo
pop
lock
xchg
push
cmc
aas
mov
imul
imulb
rol
testl
pop
out
add
push
push
inc
adc
lds
xorl
test
sti
test
fs
aad
gs
ljmp
ss
xchg
ss
mov
sub
jb
out
mov
cmp
ret
xor
mov
push
xchg
ficomps
dec
fs
lods
js
sub
repz
addr16
les
aaa
insb
cwtl
jle
das
int3
in
cs
sbb
cmp
mov
xor
jo
pushf
and
mov
gs
lret
xchg
lret
add
pop
pop
xchg
andb
and
jmp
imul
xorl
mov
lret
or
push
cmp
mov
mov
stos
mov
dec
mov
jbe
inc
lret
mov
push
ficoms
mov
xorb
xor
adc
into
and
adc
test
jb
test
adc
and
stos
mov
shrl
js
pop
xchg
dec
cmp
enter
mov
stc
lea
fbstp
daa
lds
xor
stc
lahf
xchg
inc
add
xor
ret
pop
dec
or
ror
inc
cmp
mov
scas
adc
pop
sbb
imul
jmp
or
push
push
aad
rcrb
sub
call
out
inc
jb
and
out
mov
das
or
fisttpl
mov
ret
jl
out
fidivrs
movsl
cmc
xor
xor
xor
or
ret
inc
push
mov
sub
mov
and
in
jae
cmp
cld
xchg
arpl
xor
testb
cmc
jge
push
insb
and
call
xchg
pop
jp
mov
inc
sbb
dec
outsb
fsub
jne
fs
aad
jb
and
jecxz
fbld
shlb
fmuls
jns
es
dec
and
loop
movsb
pop
xchg
fidivl
pop
call
adc
ret
sahf
lea
push
xchg
movsw
int3
js
lahf
int3
sub
sbb
push
and
js
fwait
cmpl
mov
sub
shr
mov
mov
pop
sbb
test
shl
pushf
mov
fists
int
pop
cmp
jmp
repnz
mov
push
fs
push
icebp
jae
repz
out
pop
push
pushf
push
cld
and
cmc
cmpb
icebp
test
fcmove
test
mov
jge
xor
push
ds
jnp
aad
rorl
in
repnz
add
js
dec
sub
nop
inc
push
mov
scas
cli
inc
iret
mov
out
roll
jg
adc
mov
push
mov
or
les
xor
sbb
inc
fiaddl
outsb
sub
push
xchg
movl
mov
push
lcall
push
and
rcll
pop
jne
sbb
jle
xor
mov
scas
rorl
xor
add
stos
divb
js
push
cmpsb
jmp
push
stos
xlat
cmpsl
out
mov
cmp
subl
lea
arpl
int3
popa
dec
adc
cld
popa
add
pushf
inc
sub
and
push
dec
mov
pop
cmc
lahf
mov
test
or
xchg
dec
ljmp
inc
mov
mov
cmp
jo
insb
dec
sbb
imul
mov
xorl
test
push
lahf
mov
jg
in
cmc
xchg
mov
inc
aam
cmp
decl
sub
pop
lcall
fistpll
fwait
adc
mov
cmpsb
popf
mov
push
pop
fldcw
xchg
or
add
mov
negb
fisubrl
lods
fstps
nop
jnp
xor
stos
xchg
push
pushf
sbb
adc
push
pushf
iret
mov
mov
das
and
scas
pop
cs
jb
je
cmc
add
sub
xor
shlb
les
or
push
push
sbb
add
ffreep
sahf
add
iret
stos
inc
mov
insb
dec
pop
je
lcall
ja
cwtl
sub
sbb
inc
outsb
cmc
or
inc
inc
lret
xchg
add
out
fidivrs
cltd
pop
fwait
and
addr16
inc
dec
pop
push
enter
mov
pop
adc
jno
daa
xchg
add
cltd
push
test
test
sub
xchg
loop
les
and
aam
jle
adc
jo
dec
scas
add
jl
jl
add
dec
cltd
jo
adc
inc
mov
push
dec
icebp
bound
xor
xchg
mov
aad
sbb
mov
mov
dec
loope
mov
pop
or
xor
push
sbb
loop
std
pop
xor
je
jnp
xor
cld
jmp
pop
ja
add
jle
add
or
cmp
mov
pop
cmp
fcoms
lret
daa
jno
in
mov
jne
data16
mov
xchg
adc
mov
adc
dec
addr16
enter
icebp
dec
icebp
pushf
jo
pop
repz
pop
add
fistpl
add
lea
jmp
loope
pop
orl
xchg
fidivrl
inc
and
cmpl
or
ret
pusha
cmp
inc
sti
pop
ljmp
or
xor
push
stc
inc
stos
inc
or
dec
arpl
loope
shll
dec
fsubr
in
mov
push
nop
jo
jnp
xor
dec
pop
mov
mov
fisubl
mov
cmp
fwait
jmp
push
jne
insl
les
inc
test
or
fdiv
push
mov
int3
pop
push
pop
stos
das
imul
into
loop
movsb
mov
add
fwait
mov
shll
xlat
sbb
pop
lds
inc
aad
xchg
sub
cs
fisubl
iret
pop
jns
lret
outsb
pop
sub
mov
jl
or
cltd
scas
lods
mov
aad
jns
jb
cld
xor
mov
in
mov
inc
dec
mov
xor
jmp
pop
pop
ret
jae
popa
ds
in
std
js
mov
scas
ficomps
mov
out
sbb
insb
fwait
imul
imul
sub
popa
loope
jg
hlt
or
push
adc
inc
and
mov
js
cmp
or
sbb
loopne
movl
sbbl
push
cmp
sub
std
mov
in
addb
jmp
adc
and
push
push
sbb
xchg
clc
adc
dec
jp,pn
test
adc
push
aam
mov
push
jns
and
cltd
daa
sbbl
or
ja
gs
adcl
cmpsl
sahf
stos
cmp
into
xchg
pop
daa
pop
mov
ljmp
and
mov
fnstcw
lods
sti
popa
mov
je
sbb
outsb
jno
push
nop
pop
aam
mov
icebp
sbb
dec
pop
push
inc
xchg
add
in
outsb
adc
sti
lea
sbb
xor
pop
or
adc
or
outsb
in
inc
stc
rcl
in
xor
sbb
cwtl
xor
loopne
scas
fcoml
in
call
cmp
in
pop
mov
adc
mov
adc
jecxz
test
sub
aam
sub
pop
je
repz
jle
sub
xchg
in
lods
lret
inc
push
pop
test
loope
div
or
and
sbb
mov
pop
xor
repz
out
mov
jae
xor
pop
cmpsb
add
push
outsb
andl
mov
jg
ljmp
mov
lock
xor
clc
pop
bound
shlb
jbe
loopne
ds
xor
fsub
and
cmpsb
punpckhbw
out
jmp
sub
cmp
pop
mov
pop
adc
or
push
pop
data16
jno
jno
push
ret
push
sub
mov
or
negb
insb
test
scas
outsl
xor
movsb
icebp
clc
sbb
dec
push
jle
sub
mov
push
inc
in
out
pop
lea
lret
xchg
mov
or
push
jno
arpl
fwait
xor
gs
pop
gs
dec
cmp
arpl
in
jbe
add
rorl
adc
cld
pop
ficoml
mov
int
out
lcall
mov
sbb
lods
push
loopne
sbb
mov
sbb
add
xchg
fildl
push
jne
scas
jecxz
stos
push
adc
nop
or
jno
sti
jge
mov
xchg
mov
std
adc
adc
adc
je
js
sahf
jno
js
aad
imul
pop
aad
sub
in
repz
lcall
dec
das
lcall
xlat
adc
movsb
cbtw
sub
jmp
clc
pop
xchg
jmp
add
push
fisttps
ds
in
inc
sub
inc
cli
je
xchg
imul
xchg
daa
xor
and
pusha
xchg
aam
popa
mov
and
xchg
lds
pop
push
popa
inc
or
rcl
jno
and
xor
repz
out
clc
les
iret
jae
mov
push
cld
jg
cld
and
shl
decb
jge
popf
jo
xorb
pop
push
cwtl
mov
inc
lcall
lret
stc
jge
cld
jp
mov
cmp
adc
lret
and
pop
cwtl
push
cmp
inc
andps
sti
scas
inc
jbe
push
je
sub
push
pop
cmpb
in
push
cmp
test
test
sarl
shr
or
imul
call
mov
pop
mov
scas
std
cld
and
dec
jne
pcmpgtd
aad
push
or
cmc
pop
adc
dec
scas
stos
fbstp
mov
push
pop
pop
push
push
push
bound
mov
or
fidivs
insb
cs
pop
xchg
pop
xor
mov
push
je
mov
lock
shll
jmp
test
subb
movsb
push
jno
mov
sti
mov
test
fs
adc
lret
sbb
lahf
rclb
pop
push
mov
rol
xor
int3
jg
ljmp
fildll
cmp
aam
jo
mov
push
pop
or
pushf
jnp
mov
pusha
adc
lods
inc
lret
mov
dec
lret
mov
imul
aaa
dec
ljmp
jae
mov
mov
xchg
sbb
mov
sbb
rorb
fstl
in
push
ret
cmp
sub
je
jl
mov
xchg
fimull
fistps
repnz
daa
scas
arpl
test
mov
repz
inc
push
mov
add
aaa
lret
icebp
push
in
adc
add
inc
mov
nop
mov
and
mov
add
les
test
push
pop
mov
xorb
xchg
pusha
imul
xchg
fs
pop
cmp
add
cmc
fdivr
shlb
jb
repz
jnp
test
jns
std
pop
loop
fcompl
mov
sub
xchg
je
pusha
into
adc
ja
out
lds
inc
add
dec
jnp
mov
movsb
and
and
bound
jnp
cld
in
dec
jg
xor
ss
inc
push
cwtl
aaa
push
xor
adc
ljmp
mov
jno
insl
xchg
xchg
fistpl
jp
popl
dec
add
js
faddl
imull
add
ljmp
insl
inc
sub
imul
push
jb
dec
test
xchg
insl
loop
jmp
jmp
add
mov
cli
mov
test
mov
mov
inc
das
xchg
shrb
or
out
std
cmp
mov
jp
ja
popa
add
inc
out
mov
clc
scas
fcomps
insl
dec
xchg
test
push
dec
and
dec
and
and
pop
clc
jle
rorl
and
inc
je
and
sbb
gs
add
lea
inc
xchg
lds
jp
inc
jb
cmp
pop
out
and
ljmp
insl
mov
insl
ret
add
call
enter
cmp
add
fidivl
add
rolb
data16
lods
roll
inc
lods
shlb
js
push
pop
dec
jmp
arpl
add
mov
and
inc
rcll
push
inc
jne
xchg
dec
stc
and
orb
loope
or
pop
daa
insl
jb
lds
out
data16
aam
cs
jmp
mov
cmp
cmpsl
and
movl
xor
sub
pop
loope
fcmovnbe
arpl
xchg
addr16
loop
sub
loop,pt
dec
cmpb
in
enter
and
aad
mov
or
push
fcmovb
lahf
jp
cmp
push
jle
jl
das
in
xchg
sahf
fiaddl
ror
jle
aas
test
outsl
inc
inc
sahf
mov
lods
adc
mov
cmp
mov
lahf
mov
mov
out
xor
bound
or
fidivrl
rcl
ss
dec
or
test
je
pushf
loop
mov
and
int
ss
popf
xor
mov
pop
in
jo
int3
enter
in
loope
or
push
push
bound
pop
jb
fldenv
ficoms
add
mov
add
in
mov
movsb
dec
aam
and
int3
movsb
jne
pop
mov
jp
ret
jg
mov
push
xor
or
mov
repz
gs
or
xor
sub
test
ds
add
add
out
mov
mov
movsl
and
sbb
fwait
out
fwait
or
push
dec
iret
rcrb
dec
test
or
bnd
push
mov
in
xlat
pop
into
pop
or
pop
pop
push
insb
int3
lret
clc
xchg
jae
and
cmp
inc
mov
scas
pop
leave
mov
fwait
xchg
dec
cld
lods
fdivs
loop
divb
lcall
orb
aas
shlb
aad
cmp
les
test
and
adc
insl
push
xchg
aas
pop
add
loop
mov
loope
inc
pop
xor
and
daa
jns
adc
sbb
xor
je
jecxz
mov
out
sahf
sub
push
pop
out
fidivrs
nop
sbb
jge
stc
ljmp
leave
jl
pop
repz
mov
pop
adc
ficoml
iret
aam
and
inc
mov
popa
and
int
adc
dec
push
pop
lret
xor
mov
int
into
iret
cmp
xchg
out
and
mov
mov
das
ds
or
pop
in
cmpsl
fstl
mov
sahf
mov
ret
add
adc
fucomi
cmc
or
xchg
fildll
inc
and
sub
adc
test
pushf
mov
loope
mov
sbb
out
sbb
push
jno
adc
dec
fs
insl
addb
fldl
mov
sbb
xor
xchg
jg
cmp
pop
or
rcl
push
mov
daa
movsb
sbb
jb
iret
ds
lock
filds
cmp
subb
loopne
mov
cmpsl
or
inc
xchg
aam
adc
fisubl
sub
fiadds
xor
fbld
sub
test
jns
pusha
push
sbb
dec
sub
int3
pop
cmp
xor
mov
add
lahf
add
sub
jle
sbb
scas
mov
mov
xor
jbe
add
pop
adc
push
mov
dec
ja
add
push
scas
xor
cmp
and
rcll
ficomps
push
outsb
add
lods
outsb
or
addr16
xchg
mov
xlat
xor
mov
xchg
mov
dec
lea
xchg
dec
and
leave
sbbl
cmp
add
add
ret
or
add
movsl
sub
dec
es
lock
cmp
ja
in
push
je
mov
mov
add
jge
adc
push
imul
pop
cmp
ret
scas
jle
pushf
das
xchg
mov
lret
cmp
inc
adcb
mov
adc
adc
mov
enter
lret
test
cmp
loop
addr16
or
in
inc
sbb
enter
add
inc
pusha
stc
test
jmp
fcoms
data16
in
loopne
xchg
mov
inc
mov
sbb
mov
add
fwait
aad
pop
cltd
jp
in
call
inc
popa
jl
rolb
mov
lods
jmp
fistpl
xchg
push
or
cli
push
mulb
cs
sub
mov
mov
int3
lock
add
jmp
mov
clc
fdivrs
dec
mov
lahf
and
data16
sub
clc
cmp
cmp
adc
sub
fiadds
mov
or
push
ds
outsb
mov
mov
sub
ljmp
stos
fidivrl
test
bound
loop
lds
fisubl
cltd
xchg
dec
icebp
adc
icebp
cmp
xchg
sbb
insb
add
push
sbb
shll
jp
add
push
mov
or
pop
test
scas
or
inc
inc
lock
pushf
mov
mov
mov
sub
ret
xor
and
dec
in
lods
and
dec
pop
cld
lods
lea
jg
sbb
or
and
mov
in
outsl
add
xor
add
movsb
and
pop
lret
shll
push
movsl
ljmp
add
subl
jp
adc
rol
ja
add
fsub
add
rcrl
inc
rorb
shll
xor
or
jge
scas
lea
es
mov
push
xor
mov
inc
xor
push
enter
mov
sti
and
sub
movsl
fsub
jl
cmp
fidivrl
icebp
or
mov
add
push
les
inc
mov
sbb
push
daa
xor
iret
test
insb
mov
sarb
dec
repnz
xchg
xor
mov
mov
mov
ja
push
and
imul
lock
mov
lods
outsl
shrl
call
fs
dec
test
add
dec
dec
pushf
sub
imul
shrb
sbb
sahf
push
sub
rclb
mov
sub
push
jge
out
xor
ljmp
xor
mov
sub
call
xchg
mov
cmc
jb
mov
or
cmpb
xlat
fiaddl
leave
int
iret
jmp
cld
jbe
push
ja
popa
fstl
lret
add
and
fistpl
xchg
xor
adc
dec
add
push
cmp
and
arpl
outsb
and
pusha
and
jp
icebp
or
mov
cli
pusha
lods
out
sub
jp
ret
fiaddl
mov
add
jmp
adc
sub
out
mov
inc
roll
xchg
dec
pusha
jb
imul
inc
mov
icebp
add
jmp
mov
dec
sub
mov
scas
rcr
pop
sbb
push
cmpsl
jl
pop
and
cmp
fnstsw
xlat
jge
mov
insb
xor
shlb
sbb
ret
out
or
scas
pop
or
int3
repnz
add
das
into
cmp
and
aaa
pop
pop
lahf
sbb
jl
sbb
mov
dec
popf
mov
aaa
fistpl
push
xchg
push
and
and
cmp
clc
pop
in
jecxz
stos
shrb
pop
les
call
inc
sarl
push
mov
inc
sbb
lods
in
call
insl
lds
je
mov
mov
cmpsl
cwtl
sub
mov
mov
lcall
and
cmp
lcall
cmpl
imulb
lods
xchg
lock
fsubr
fcomip
rcrb
rolb
hlt
jno
pop
out
lret
mov
xor
pop
cltd
cmp
loopne
jae
test
test
mov
cld
mov
test
or
in
test
add
xchg
add
cmpsb
xchg
add
add
scas
mov
or
shl
insl
or
popa
ljmp
pushf
adc
mov
mov
pop
dec
popf
push
mov
lods
ret
xchg
or
test
gs
stos
or
into
xchg
incb
xchg
mov
xor
int
sub
push
jmp
pop
loopne
jae
cmp
jp
jecxz
cmpsl
sti
fdivs
mov
bsf
pusha
jnp
ficomps
jae
scas
add
and
push
gs
pusha
jbe,pn
nop
les
inc
jg
enter
mov
out
add
jg
push
shlb
pop
cld
mov
cmpsb
dec
xchg
push
test
adc
adc
inc
lods
clc
mov
push
cwtl
add
rclb
or
jg
pop
scas
sbb
xchg
inc
roll
rorb
xchg
sbb
sbb
jmp
cmpsl
or
cwtl
pop
push
aas
pop
pop
lahf
adc
mov
mov
stos
mov
dec
push
dec
mov
or
push
jns
gs
xchg
jge
sub
movsl
jno
mov
cmp
call
dec
mov
cmp
pop
xchg
sub
pop
and
cs
fnsave
popf
inc
cltd
fldl
jno
pop
adc
mov
popa
pop
xlat
inc
pop
cli
pop
out
push
out
ficoml
xor
xor
cmp
jg
jb
mov
cmpsb
dec
fs
lcallw
sub
popa
mov
inc
stc
ds
aad
pusha
add
cs
ja
in
fwait
xor
xchg
xor
ret
aaa
push
jg
mov
adc
push
dec
jmp
enter
aad
fdivrp
inc
shrb
mov
daa
test
dec
jecxz
push
int
mov
fiaddl
movsb
mov
cltd
loopne
pushf
sub
mov
imul
sub
sbb
push
gs
push
mov
ret
inc
push
ljmp
cmp
aaa
fcmovbe
sbb
aad
loope
adc
popf
sbb
inc
xor
mov
loope
scas
pop
cltd
nop
adc
les
mov
xchg
push
cmp
sti
or
xor
jmp
cmp
cmpsl
sarl
test
add
xor
xor
and
movsl
pop
in
cmp
rol
or
loop
lock
fnsave
subb
cmpsl
subb
inc
cmc
icebp
pop
in
jb
fcoml
aas
xchg
cwtl
fisttps
adc
dec
sti
sbb
out
mov
lcall
mov
inc
loop
jne
add
cwtl
pop
clc
or
push
clc
mov
ret
mov
or
push
jmp
cltd
mov
lret
leave
push
add
cwtl
ja
jb
lods
xor
mov
fadds
pop
fmull
loope
cltd
outsl
xor
in
dec
aas
pop
or
not
or
dec
faddp
cli
stos
movsl
add
jg
mov
fnstenv
fs
out
pop
add
rcrb
inc
loope
or
subb
out
jns
mov
jmp
ja
mov
pushf
subb
xor
hlt
pop
xor
cmc
push
or
xor
test
fisubrl
adc
int
movsl
or
pop
dec
lret
and
popf
fdivrs
mov
fs
cmpsl
lret
cli
sbb
pushf
shrb
repnz
ljmp
sbb
std
stc
push
jl
in
js
mov
flds
and
jge
mov
pop
inc
jp
div
mov
inc
pop
int3
pop
mov
insb
mov
mov
mov
repz
out
mov
stos
hlt
imul
sub
out
xchg
mov
push
out
pop
int
in
jecxz
dec
push
lods
mov
mov
test
mov
mov
rorl
scas
out
xchg
fwait
jb
icebp
dec
mov
lds
jns
fcmovu
nop
and
jp
ret
adc
sbb
sub
and
sbb
xchg
jl
xor
or
mov
roll
or
sub
outsb
cmpsb
hlt
aaa
push
test
adcl
mov
int3
leave
cwtl
hlt
sbb
jno
xor
push
pop
fisubrl
andl
scas
xchg
xlat
test
popf
dec
aam
rolb
inc
xchg
cmp
loope
pop
sbb
aas
inc
sbb
cmp
ret
add
xchg
xchg
jae
push
mov
pusha
mov
mov
adc
mov
sbb
jns
divb
cmc
ret
adcb
jno
mov
dec
inc
xchg
js
shr
ret
insl
pop
int3
mov
push
fstl
add
add
imul
jne
fcomps
xor
inc
jo
jg
scas
and
shrb
xchg
fadds
sub
shl
pop
cmp
jnp
inc
int3
inc
movsb
lret
fbld
das
xchg
loope
lcall
sbb
call
out
jge
mov
outsb
cmpsb
mov
jne
loopne
xchg
jo
xlat
fsubr
mov
xor
pop
pop
cmp
inc
inc
inc
fs
dec
xor
cmp
lcall
icebp
dec
adc
push
lret
adc
sahf
test
sub
pop
test
in
aad
fsub
jnp
into
jae
movsb
inc
pop
dec
dec
jno
xchg
mov
adc
push
into
mov
mov
xchg
ss
cmp
xchg
sub
insb
stos
or
add
ret
lea
in
push
mov
or
add
cld
bound
jge
xor
mov
enter
outsb
loop
leave
daa
sbb
ss
mov
pop
jmp
stos
pop
mov
add
movsb
inc
mov
repz
adc
hlt
add
cmpsl
mov
mov
pop
arpl
cmp
push
lds
inc
mov
insl
data16
sub
cmp
test
out
sbb
pop
movsl
jmp
outsb
sahf
addr16
add
ja
jnp
and
adc
pop
push
cmp
shll
adc
in
jb
pop
lds
or
mov
bound
in
pop
shl
xor
push
insb
jle
aas
mov
xor
fldenv
mov
push
mov
sbb
dec
dec
loopne
jl
cmpl
ss
push
cmpsb
xor
lret
insb
incl
jl
lods
pushl
insl
leave
and
arpl
or
mov
hlt
movsl
inc
xchg
stos
mov
cmc
mov
xchg
jno
js
xchg
in
pop
fldt
xchg
cmp
mov
mov
xchg
sub
rolb
in
adc
imul
out
iret
cmp
fwait
lret
xor
dec
cmp
arpl
pop
add
ret
push
bound
push
xor
lods
mov
aaa
sub
in
jl
test
cmp
mov
mov
cmp
pop
popf
mov
loope
cmp
out
clc
dec
dec
or
sbb
sub
jl
mov
xchg
fisubrl
sbb
mov
mov
std
shlb
stos
daa
daa
and
pop
jns
ss
outsl
push
inc
sub
into
popw
mov
dec
aas
cmp
mov
inc
jmp
inc
loopne
aad
jl
les
int3
imul
and
shrb
pop
push
pop
loope
cmc
xlat
mov
and
sub
and
inc
in
notl
sbb
adc
sub
int3
and
add
test
xchg
aas
jp
pop
or
push
test
or
rolb
mov
movsb
sbb
ret
test
sub
mov
add
mov
test
push
mov
sarb
mov
push
ss
das
add
sbb
fnstenv
jmp
cltd
cmp
mov
filds
mov
xorl
ja
mov
in
pop
and
pop
jmp
xor
mov
imul
insl
pop
sbb
sahf
dec
in
add
inc
fstpl
addr16
scas
push
ds
push
aaa
rorb
jno
lcall
jnp
sub
in
es
negb
xchg
std
shll
sub
sahf
jl
lcall
xchg
push
mov
lds
in
div
xor
stos
push
cltd
sub
rol
lahf
imul
in
in
add
mov
or
enter
es
jmp
push
add
mov
and
fdiv
mov
jp
imul
iret
sub
cmpsb
pop
stos
push
movsb
out
cmp
movsl
mov
dec
fmul
call
push
movsl
xchg
sub
fildll
add
aaa
mov
mov
mov
pop
cmp
add
cmp
push
and
into
in
mov
mov
inc
lahf
add
shrl
shl
cmp
cmp
and
adc
xor
aaa
aam
out
mov
mov
or
paddusw
fidivrl
mov
mov
ret
pop
and
and
inc
js
loopne
add
push
lret
mov
inc
mov
xor
mov
andb
and
stc
cmp
fsts
cltd
jbe
fimull
loopne
repz
or
out
xchg
inc
sub
jbe
adc
xchg
or
mov
das
rolb
or
cmc
push
mov
into
lcall
fcompl
jmp
mull
lcall
cmp
push
add
and
fists
cmp
xor
jne
adc
and
push
fbld
roll
inc
das
push
mov
aaa
mov
bound
and
outsb
rcrb
mov
push
pop
push
and
mov
mov
std
jb
loop
mov
imul
jb
and
or
icebp
sbb
pushf
jae
in
mov
into
push
int3
cmc
xor
cmpsl
jb
into
out
jl
push
ret
mov
data16
inc
push
push
xor
hlt
cwtl
sub
mov
stc
call
mov
mov
push
cmp
js
outsb
adcb
mov
fdivs
test
inc
mov
lds
mov
cmp
rol
filds
sub
mov
and
in
mov
adc
add
ret
cmpb
movsb
jns
imul
fs
mov
and
xor
addl
cmp
test
lds
dec
es
ds
stc
in
loopne
std
mov
ficompl
jbe
in
cs
mov
sbb
int
adc
pop
aas
arpl
gs
divl
std
or
sub
mov
insb
push
clc
dec
dec
cmpsl
inc
pop
inc
jp
lret
push
test
push
sub
lret
cmpsl
jb
stc
je
cmp
sub
adcl
test
movsl
push
dec
add
xor
xlat
outsb
int3
or
fcomps
pop
mov
mov
mov
lcall
lds
xchg
jb
xor
dec
repnz
int
stos
push
pop
inc
out
dec
add
out
test
push
jge
in
test
xchg
mov
mov
stc
jg
fmuls
xchg
or
xchg
gs
or
xchg
mov
fimuls
data16
mov
lcall
gs
mov
inc
add
adc
jp
mov
xlat
adc
inc
enter
mov
iret
and
xchg
rolb
pushf
inc
sub
loopne
mov
ljmp
gs
cltd
mov
push
mov
mov
fwait
aas
xchg
aam
in
pop
iret
jge
sbb
xor
pop
scas
and
call
negb
outsb
mov
divb
movsb
pushf
push
js
negb
xor
fistps
clc
rcll
int3
outsb
cmp
orb
push
outsb
rolb
aam
cs
jb
mov
hlt
jle
or
inc
jnp
jg
scas
mov
mov
xor
sub
pusha
dec
adc
out
xchg
loop
pop
sbb
imul
clc
rcr
hlt
dec
dec
push
add
push
pop
mov
icebp
push
repz
ficoml
mov
cmp
dec
dec
aaa
dec
mov
cli
inc
push
loope
js
adc
push
jmp
mov
lret
das
mov
inc
jae
lds
or
ss
inc
dec
mov
call
xchg
add
dec
aaa
pop
sbb
xchg
jmp
pop
loope
add
push
sahf
pop
lret
xchg
sub
ret
inc
sub
sub
push
negb
sbb
in
pop
xchg
cwtl
cmpsl
mov
aas
leave
repz
icebp
int3
push
sbb
outsb
cld
lret
lds
imul
cmp
shlb
push
aas
push
out
clc
mov
jne
repz
outsb
adc
outsb
mov
out
and
test
arpl
aad
cmp
cld
shrl
fs
cld
add
arpl
sbb
mov
xor
pop
arpl
gs
cmp
and
stos
jmp
cmpsb
flds
xchg
and
imul
fsts
mov
mov
out
insb
xchg
xchg
pop
enter
pop
test
mov
mov
pop
insl
data16
pop
xchg
mov
aaa
adc
mov
jmp
cmp
pop
int3
into
sub
push
sub
jb
pop
sub
sbb
ret
push
aaa
adc
dec
mov
idivl
int
mov
popf
mov
push
or
and
xor
xchg
or
movsl
shlb
in
sti
loop
repnz
dec
dec
sub
mov
dec
xor
bound
or
dec
sbb
inc
je
mov
mov
enter
add
test
or
aaa
pop
push
outsb
cmpsl
and
movsb
and
mov
xor
or
aam
fucom
mov
jl
ret
pushf
loopne
cwtl
xchg
lods
aas
repz
adc
insb
out
sarb
jne
mov
in
lea
inc
pop
cmp
lods
mov
cmp
xchg
xchg
or
hlt
addl
jo
sub
pop
mov
fucomp
test
test
jno
les
lahf
xchg
loopne
mov
sub
cmpsl
sub
movsl
inc
dec
fisubl
add
adc
dec
stc
mov
sub
pop
bnd
leave
and
aad
movsb
outsb
pusha
ret
fcomi
add
or
xchg
orb
lret
aas
insb
inc
xchg
dec
inc
pop
out
xor
lock
dec
add
xor
add
cmp
int
dec
out
sub
and
and
mov
xchg
popf
push
int3
adc
stc
dec
insl
sub
mov
sub
jne,pn
out
sub
shl
mov
dec
dec
add
adc
mov
enter
and
dec
or
fcmovnbe
sbb
add
push
add
sub
mov
xor
xor
or
mov
sbb
loopne
mov
cmpsb
mov
iret
enter
jecxz
xchg
and
int3
pop
test
cli
or
or
imulb
loop
adcb
mov
sub
or
jl
cmp
inc
sarb
sahf
inc
addr16
jbe
fs
jbe
insb
hlt
mov
push
sti
fidivs
lea
fs
jb
jae
outsl
lds
mov
mov
insb
cli
sub
repz
and
or
mov
mov
mov
sub
popf
je
mov
add
xor
push
mov
inc
lcall
xchg
dec
push
add
decl
sub
out
std
dec
sbb
jmp
int3
inc
fisttpl
jmp
or
ret
xor
mov
push
cmpsl
xchg
pop
sbb
dec
xchg
imull
outsb
add
add
dec
cmpsb
push
nop
outsl
pusha
popf
mov
repz
fdivs
adc
sahf
in
cwtl
add
mov
out
mov
call
xchg
scas
inc
mov
mov
push
fistl
cltd
inc
fsts
inc
int
daa
mov
fnsave
test
and
cmp
jae
adc
sub
rolb
or
jp
inc
rcl
movsb
or
mov
insb
mov
dec
jp
fwait
inc
add
fldl
adc
or
jnp
cltd
adc
mov
add
das
jo
xchg
cs
push
rorb
mov
mov
lcall
sub
addl
sub
pop
in
int3
gs
mov
xor
aaa
imul
les
jecxz
lahf
push
sbb
iret
inc
aad
sub
loop
inc
rcrl
popf
fstpt
clc
or
mull
test
or
addr16
std
inc
rcrb
ret
fistl
cmpsb
inc
rcr
movsb
adc
xchg
or
xchg
mov
fistpll
repnz
xchg
mov
cld
sub
push
pop
out
divb
lods
mov
aad
jl
mov
mov
pop
sahf
xchg
adc
loope
pop
mov
fdivr
sub
dec
push
fcmovbe
js
out
fcmovnb
jno
sub
je
mov
nop
sbb
mov
inc
scas
leave
pop
cmpsb
sbb
mov
dec
stos
xor
adc
pop
push
mov
and
jmp
xor
or
add
lea
push
mov
pop
pop
daa
and
jo
aaa
pop
iret
jbe
jno
or
xchg
push
mov
inc
dec
test
dec
lock
roll
mov
ja
gs
jmp
aam
imul
jmp
add
pop
or
and
repz
add
ss
rol
sbb
push
adc
loop
mov
mov
lock
aad
mov
pop
sarb
xor
icebp
dec
filds
outsl
sbb
jnp
inc
sti
mov
andl
add
inc
jns
test
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
add
add
scas
xchg
in
int3
inc
add
add
dec
add
inc
add
dec
ret
ud1
add
mov
add
add
