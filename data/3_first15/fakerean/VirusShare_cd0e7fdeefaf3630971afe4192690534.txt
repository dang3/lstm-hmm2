sbb
add
adc
xchg
jl
loop
movsl
aas
outsb
test
jb
push
outsl
cmp
call
inc
inc
push
fistpl
cltd
push
xchg
mov
int3
rol
xchg
icebp
aas
or
push
imul
jmp
inc
stc
jecxz
lds
sub
ror
roll
adc
xor
aas
cld
dec
xor
mov
or
ss
aad
push
cmc
lcall
test
std
sti
mov
mov
mov
mov
loop
loopne
pop
shll
push
lods
and
imul
cmp
xor
mov
pop
in
int3
les
xchg
ss
or
pop
lods
inc
fs
pop
dec
jmp
push
xor
fxch
outsb
scas
out
add
fsub
mov
subb
cld
and
jmp
mov
rolb
xchg
lahf
out
xchg
fidivs
ljmp
or
jb
out
inc
mov
and
mov
or
pop
aam
pushf
mul
add
icebp
shl
lds
pop
repnz
test
fs
mov
mov
testb
das
adc
push
rclb
daa
in
push
sub
hlt
push
je
pop
cmp
xchg
mov
pop
xchg
lret
hlt
std
pop
pop
jg
loop
cltd
mov
inc
arpl
jmp
mov
in
push
roll
jns
hlt
jne
mov
inc
xchg
cwtl
sti
xchg
test
cwtl
pop
cmp
mov
rcl
insb
std
adc
mov
mov
add
ss
inc
or
int3
jo
call
popa
gs
sahf
jno
call
jne
movsl
nop
inc
aaa
add
sub
aaa
and
sub
push
mov
dec
in
in
xchg
testl
or
mov
punpckldq
scas
xlat
pop
mov
mov
inc
mov
pop
stos
jg
popa
push
push
lahf
inc
popa
popa
sarb
cmc
xor
inc
push
jb
cmp
out
mov
hlt
and
and
in
rcrb
dec
rcrb
pop
lock
dec
mov
lock
add
ljmp
mov
enter
adc
sub
lcall
jae
dec
mov
xor
sarb
mov
fbld
add
js
inc
dec
xchg
pop
mov
dec
add
xchg
lds
xchg
dec
outsb
jg
dec
ret
pusha
cmp
mov
inc
popa
lods
insb
pop
jns
ljmp
mov
jnp
xchg
imull
adc
push
sbb
sarl
movsb
lcall
mov
sbb
xor
add
cli
mov
jmp
lret
outsl
or
jno
mov
cmp
popa
leave
xchg
and
inc
mov
sarb
and
xor
dec
sbb
mov
rolb
push
mov
adc
inc
aam
test
mov
loop
adc
xchg
fwait
and
cwtl
xor
test
push
pop
pop
pop
pop
outsb
mov
out
imul
sub
push
rcll
imul
xchg
shlb
shll
push
jo
jl
icebp
xor
mov
insl
mov
es
cmpsb
das
mov
stos
mov
scas
jns
sbb
mov
pop
popa
cmpsb
and
imul
fstl
lret
call
mov
jle
gs
sub
or
dec
mov
test
test
dec
jge
mov
dec
cwtl
into
cmp
das
jp
stos
mov
pop
xchg
loope
faddl
jnp
pop
mov
adc
dec
push
sbb
mov
mov
cs
mov
jo
mov
sti
mov
out
mov
dec
or
lcall
roll
jo
push
imul
or
xor
into
stos
push
hlt
mov
pop
and
xor
fisubs
hlt
shr
in
shlb
mov
call
js
out
xchg
mov
push
adc
aaa
dec
aas
mov
sbb
in
mov
les
gs
stos
pusha
sbb
arpl
fstl
or
adc
cmpsb
dec
and
and
push
ljmp
fs
mov
mov
pop
and
imul
movsb
cld
sti
cwtl
ret
mov
movsb
mov
in
push
xchg
cwtl
mov
mov
jb
aaa
inc
push
add
jb
pop
outsb
pop
push
sub
add
xchg
sbb
cli
adc
test
jne
push
test
pop
pop
mov
mov
test
imul
fisttpl
repz
xchg
fistpl
ret
pushf
inc
and
adc
jno
push
je
mov
mov
and
pop
xchg
icebp
lock
sub
cmpsb
dec
add
addr16
push
push
lods
insb
inc
jecxz,pn
shlb
jmp
repnz
test
cld
andl
add
lods
outsb
cmp
sti
repnz
mov
fwait
js
cmp
movsb
mov
testl
cltd
xlat
test
inc
jae
ja
xor
fsubl
xor
mov
jmp
add
das
cmp
jle
cld
data16
or
dec
out
pop
cmp
sbbb
bound
jg
addr16
jp
ja
pop
jecxz
inc
push
sbb
adc
loope
dec
movsb
les
sub
insb
mov
outsl
clc
insl
out
in
jmp
test
pop
sahf
js
test
ficompl
sbb
loope
mov
mov
loopne
stos
insl
mov
xchg
int
pop
stc
add
data16
and
adc
jno
fildl
dec
mov
push
sbb
mov
or
lahf
in
dec
sub
je
adc
inc
dec
cbtw
dec
mov
fistpll
mov
push
pop
dec
movb
mov
mov
lahf
push
fs
push
data16
into
mulb
out
push
mov
add
xchg
push
add
arpl
and
cmp
shrb
sahf
clc
jns
dec
push
mov
hlt
push
dec
fstp
dec
cmpsl
outsl
mov
xchg
sub
arpl
clc
jg
xchg
in
mov
mov
decb
push
push
or
enter
sub
daa
fiaddl
gs
imul
cwtl
pushf
sbbl
icebp
jns
lock
shrb
stos
push
rol
dec
aaa
in
dec
pop
lods
mov
inc
mov
mov
jge
inc
gs
inc
lock
fs
lods
repnz
stc
xor
lock
xor
inc
into
daa
test
bound
push
jecxz
cld
cmpsl
notb
or
pop
mov
xor
xchg
out
and
mov
push
pusha
jno
outsb
push
aas
hlt
dec
imul
stos
jg
stos
jns
pop
mov
cmp
repnz
pop
dec
fwait
sub
jmp
sti
cmp
mov
adc
loope
pop
leave
or
pop
fcompl
push
into
imul
pop
hlt
in
fildl
and
and
rolb
in
mov
loopne
or
shll
imull
fs
stos
pop
andb
dec
lret
in
loope
cmp
mov
xor
loop
gs
xor
pop
in
popl
insb
xchg
sti
sbb
cmp
add
aas
lea
xchg
je
pop
icebp
fists
fcmovnb
aas
or
shll
jg
adc
popf
mov
sbb
lods
mov
mov
fmul
gs
bound
scas
xchg
sbb
inc
lcall
testb
pushf
jg
test
jg
into
cmp
xchg
pop
mov
sbb
cmp
bound
js
push
jae
xchg
pop
push
sub
sbb
dec
fisubl
popf
xor
pushf
fcmove
hlt
negb
movsb
sti
lds
rorb
ja
ds
jl
cltd
jg
xlat
imul
in
pop
mov
imul
scas
push
data16
dec
lock
push
aaa
add
int3
adc
jmp
cmp
daa
movsb
inc
lods
lds
aas
lret
rclb
mov
out
pop
sbb
js
shl
fcomps
pop
fsubrp
inc
or
fnstenv
sarb
pop
cld
sbb
xor
dec
and
enter
lock
sub
aad
icebp
jecxz
adcl
sub
roll
add
aaa
cmp
mov
decl
cmc
cmp
dec
and
insl
dec
mov
outsb
sub
sub
and
and
pop
push
xchg
sub
xchg
les
loope
add
mov
leave
mov
movsl
pushl
and
pop
cmpb
lock
icebp
add
mov
pop
lcall
and
or
aas
sbb
sub
dec
hlt
pop
push
hlt
mov
daa
call
mov
dec
loop
ret
cmc
xor
inc
mov
fnstenv
jns
sbb
clc
and
loopne
xor
pop
sbb
mov
mov
cs
xchg
pusha
lock
pop
pop
jmp
cli
sbb
cmpsb
lcall
mov
sbb
les
xchg
ficoml
lock
std
stos
fsts
sbbl
push
xor
lahf
push
adc
stc
adc
xchg
or
repz
sub
pushf
out
cmpl
cmp
out
dec
jmp
mov
xor
out
sbb
std
arpl
mov
out
push
jnp
or
mov
int3
loop
xlat
adc
mov
push
hlt
lock
leave
cmp
rorb
sbb
lret
mov
ret
or
pop
mov
inc
loope
mov
xlat
pop
xchg
and
mov
cmpsl
divl
repz
xlat
jbe
fldl
pop
cmpsl
jne
xchg
sbb
push
cmp
loopne
bound
fdivl
xchg
jne
fisubrs
pop
adc
mov
pop
or
test
jl
mov
ljmp
jecxz
lret
lods
jb
daa
out
shll
mov
mov
pop
fidivs
or
mov
and
sbb
fsubl
cmp
and
mov
cmp
mov
ret
xor
mov
out
popa
fisubrl
mov
cmp
push
add
in
sub
xchg
xchg
push
push
outsl
fldt
shll
jmp
xlat
ret
mov
cmpsb
sti
pusha
stc
popf
mov
ja
add
dec
stc
aaa
cmp
dec
rcll
xchg
ret
leave
aad
mov
outsl
inc
add
inc
cs
and
faddl
mov
inc
sub
xchg
aam
outsl
jg
push
out
icebp
dec
mov
push
mov
jb
leave
test
xchg
jge
lds
xlat
jg
mov
sub
inc
lods
add
rcrl
sub
sbb
push
pop
pop
ret
add
int3
mov
js
mov
test
arpl
icebp
jo
sbb
jg
lock
jp
loop
or
fwait
repz
lods
jb
jge
lods
jge
push
push
mov
std
cltd
ds
cmp
adc
add
jb
push
test
mov
inc
fistl
lock
loop
call
inc
out
out
jmp
repz
mov
push
pop
mov
stos
xor
aam
and
fisubrs
mov
pop
sub
add
mov
push
ret
repz
aam
outsb
jmp
shll
popa
inc
push
int3
in
sub
rcrb
scas
mov
cmp
push
cmovb
sub
sbb
fmuls
jns
mov
or
mov
in
xchg
repz
push
repz
decb
pop
cmc
fs
mov
sub
adc
push
sub
push
pop
in
outsb
or
pop
jecxz
push
mov
lret
shll
xchg
pop
pop
mov
mov
cld
pop
pop
cwtl
stc
jne
push
loope
mov
adc
ljmp
jnp
loopne
pop
movsb
fisubrs
cli
push
cmpb
in
shr
rcl
test
sbb
pop
stos
std
dec
dec
mov
pop
xor
add
cmpsl
dec
jb
in
inc
mov
xchg
add
add
jl
and
mov
add
xor
sahf
pop
add
xor
loopne
dec
add
xor
sub
fwait
pop
inc
cmp
inc
xchg
pop
aaa
adc
es
push
push
mov
inc
inc
jo
jbe
cmp
xchg
mov
pop
out
in
jp
orb
push
mov
loopne
lods
cmp
push
popa
sub
fdivs
inc
xor
mov
cmc
mov
rorb
mov
push
in
pop
push
adc
outsl
sub
push
lods
push
insl
bound
int
call
lea
popf
icebp
loop
movsl
adc
xor
aaa
test
jns
fstps
dec
clc
inc
adc
gs
and
adc
pop
clc
flds
and
cmp
divps
jge
mov
pusha
mov
mov
daa
and
or
add
out
mov
pusha
mov
add
xchg
ret
and
movsb
adc
sub
iret
xor
sbb
rorb
xor
pop
aam
sbb
push
dec
jae
sub
inc
push
xchg
mov
add
jge
cmc
push
pinsrw
inc
fisubrs
rcr
fnstsw
iret
xor
shrl
in
fildll
push
xchg
clc
adc
ja
xor
and
in
ja
movsl
jnp
mov
cwtl
or
jmp
in
pop
dec
push
fbld
in
cmp
or
lahf
push
mov
addr16
xchg
adc
lcall
mov
fmuls
repz
mov
rol
jecxz
sarb
jg
mov
movsl
cltd
stos
bound
mov
cmp
ljmp
and
jbe
jno
popa
int
adc
cmpsl
dec
hlt
sbb
cltd
cmp
jae
ror
xchg
daa
je
jmp
sbb
lcall
dec
push
xlat
push
dec
imul
movsl
lret
scas
lock
xor
call
mov
lret
cmc
scas
sbb
test
nop
sub
loopne
mov
dec
push
pop
mov
cmpsl
adc
xor
jbe
jecxz
ja
add
shll
imul
pop
inc
cmp
clc
dec
sub
jo
adcl
sub
fidivrs
popf
xchg
dec
scas
popa
inc
cmovl
or
mov
faddl
mov
xchg
outsl
into
adc
rcl
scas
in
sbb
dec
int3
sub
es
jle
insl
enter
add
cmpsl
jle
xchg
into
insb
imul
sbb
loope
xor
or
int3
jbe
push
int
dec
mov
push
fsub
loopne
jecxz
add
sub
jg
xchg
push
mov
aam
fsubs
cmp
jo
outsl
xchg
out
mov
cmp
addr16
lret
test
insb
mov
lahf
js
push
inc
test
mov
adc
push
cmp
xlat
mov
test
out
fcmove
push
xor
addb
xlat
mov
jb
int3
mov
popf
in
dec
xor
call
cli
mov
imul
fsubrs
or
cmc
icebp
repnz
lods
cltd
xor
xchg
mov
call
insl
das
add
adc
sarb
mov
add
xlat
mov
cmp
pop
dec
fadd
and
iret
adc
in
pop
lds
ret
das
xor
fbstp
hlt
xor
mov
or
montmul
cmpsb
push
ret
je
push
test
rcll
dec
dec
jno
shll
adc
push
jb
popa
setne
lds
imul
xchg
faddl
adc
jo
jp
push
push
adc
cmc
xor
sti
adc
out
sbb
mov
push
xor
aas
jae
fidivrs
sub
incb
fucompp
addr16
push
fdivl
mov
mulb
fwait
in
lds
mov
lcall
mov
adc
fucomi
fcmovne
cmpsl
out
mov
inc
inc
mov
shlb
jmp
lods
and
repnz
fsubrs
jbe
adc
out
xchg
or
dec
pop
push
jmp
pop
fcomps
hlt
push
popf
sub
cli
insl
cwtl
mov
mov
orps
loop
sub
inc
jnp
push
cwtl
in
aaa
or
roll
and
inc
vmovntps
mov
imul
scas
xchg
jb
popf
dec
sbb
and
cltd
jae
push
cmp
loopne
in
cld
das
in
cmc
cmc
nop
mov
js
repz
pop
scas
mov
sbb
int3
cld
pop
cmpl
and
cmp
fistl
sub
push
xchg
pushl
sub
xlat
lahf
ret
or
jge
or
test
and
shrl
rolb
stc
push
cld
cmc
outsl
adc
insb
out
or
mov
push
sbb
inc
jo
xor
lods
test
or
jge
mov
xor
add
pop
call
jbe
lret
jl
mov
dec
xchg
cmpsb
lods
insb
adc
jae
inc
into
lds
clc
mov
jbe
add
out
adc
test
pop
mov
fsubr
call
lds
lahf
xchg
bound
jg
dec
inc
test
and
sahf
dec
in
or
test
in
push
mov
arpl
inc
pusha
jg
push
mov
add
xor
cltd
je
ds
inc
aaa
imul
push
loopne
stos
jo
jae
inc
mov
cmp
mov
iret
and
pusha
test
shlb
cmp
cltd
inc
inc
filds
es
fcompl
push
xor
sub
xor
mov
and
stos
lods
lods
mov
cld
sahf
pop
xchg
ljmp
js
cmp
out
sbb
fsubl
mov
and
sub
jl
shrl
ja
cmpb
mov
cmp
fsubl
mov
gs
aad
add
jmp
cmc
sbb
dec
dec
inc
inc
andb
iret
jecxz
outsl
mull
insb
push
mov
add
mov
mov
pop
in
or
push
jle
sar
lret
hlt
out
mov
mov
jmp
pop
and
sub
outsb
inc
dec
cmpsl
push
out
imul
adc
les
sahf
insl
insb
xor
and
pop
push
insl
ret
pop
dec
stos
mov
fsub
cmp
imul
lcall
cmp
jp
sbb
icebp
iret
xchg
jg
lods
sbb
leave
dec
test
jle
inc
sbb
clc
sub
scas
aas
push
xchg
dec
into
movsb
ljmp
fstl
stc
xchg
clc
sub
stos
ret
in
xchg
jbe
adcb
and
aaa
inc
and
in
jmp
inc
jo
pop
or
xchg
aam
xchg
inc
mov
fmul
push
aad
hlt
call
mov
push
dec
sbb
loope
dec
insb
es
push
adc
clc
cmc
addl
fs
cmpsl
push
jl
lods
hlt
adc
mov
jbe
push
dec
jle
icebp
fiadds
repnz
test
cltd
outsb
iret
fsubrl
mov
push
int3
jno
adc
aas
in
arpl
push
xchg
jmp
lods
ds
in
fs
mov
aaa
aas
les
cli
push
cmp
xor
mov
push
mov
sub
mov
call
xor
jmp
repnz
push
mov
sub
test
imul
sarb
pop
jle
fld
pop
or
pop
mov
jl
je
sub
lds
scas
test
cvtps2pd
testb
mov
pushf
push
mov
stos
cltd
insb
gs
jmp
int3
sbb
stos
ljmp
into
or
cmc
mov
inc
stos
mov
mov
pop
mov
shll
jge
sarb
imul
pop
mov
adc
rcrl
adc
in
cmp
stos
sbb
xchg
mov
aas
mov
mov
mov
fisubrs
xchg
insb
pop
jg
pop
movsl
mov
add
push
inc
mov
insb
dec
aad
jmp
jns
and
arpl
push
xchg
imull
xor
pop
sti
xchg
xchg
cmpsb
push
or
xor
dec
sbb
sub
movsb
call
rorl
xchg
mov
inc
into
daa
push
or
jp
pop
aam
pop
shlb
jge
jno
mov
out
mov
push
imul
int
push
xchg
std
jbe
divb
sahf
push
push
inc
call
rcr
sbb
mov
pusha
dec
mov
leave
cs
fwait
push
call
jecxz
in
inc
fwait
mov
in
stc
jmp
xor
es
sbb
push
pop
cmp
aam
or
leave
int
add
sbb
push
mov
iret
clc
repnz
sbb
in
xlat
xor
fadds
jbe
cmpsb
mov
sub
and
stos
lret
aad
fstp
arpl
dec
mov
push
stos
sti
jnp
cli
out
je
pop
ficompl
out
and
cmpsl
mov
repnz
js
xchg
mov
push
pop
rcrl
outsb
out
xor
xlat
mov
cmpsb
and
sbb
adc
in
cmp
mov
dec
cwtl
cmpsb
add
adc
push
cmp
cs
rcl
cltd
ljmp
aas
ljmp
xchg
jge
mov
test
add
stos
in
js
mov
aas
push
adc
xchg
sbb
stos
bound
stos
xlat
lret
and
or
jno
loop
scas
inc
and
mov
sbb
jo
cmp
clc
push
and
cmpsl
mov
push
lret
cmp
scas
add
mov
dec
pusha
jmp
or
cmp
adc
cmp
and
mov
jmpw
add
dec
inc
nop
mov
les
push
lea
adc
push
js
es
fcmovu
test
add
push
push
or
add
scas
dec
or
arpl
lcall
and
cltd
test
pop
fdivrs
add
faddl
ret
ror
gs
nop
sbb
sub
jno
fsubs
in
add
sub
sub
imul
sub
shll
outsb
fcomp
sbb
dec
jge,pn
js
outsb
jp
or
sahf
or
cmpsb
mov
aad
xor
pop
sahf
sarl
xchg
mov
sbb
mov
mov
jmp
sbb
mov
cld
mov
sbb
pop
add
push
or
and
dec
fcmovu
scas
aas
or
fidivrl
ljmp
jmp
inc
push
test
dec
movsl
addb
mov
cmp
pop
fimull
xchg
cmp
jbe
cmp
inc
inc
mov
ljmp
xchg
lahf
cmp
cli
xchg
inc
sub
mov
jns
and
cmp
push
mov
mov
jecxz
inc
ljmp
add
int
jle
pop
je
mov
test
xor
xchg
sbb
jb
sub
out
dec
and
pusha
and
mov
mov
hlt
shlb
pop
insl
lea
into
flds
mov
addr16
inc
pop
sub
add
inc
mov
sub
es
push
add
repz
jmp
xchg
incl
test
xchg
shr
add
xor
test
jg
stos
add
testl
dec
cmpsb
lock
jle
shlb
cmp
cwtl
dec
mov
cld
inc
iret
inc
sbb
mov
ss
mov
in
pop
push
xlat
shrb
jo
imul
lock
cli
pop
pop
inc
enter
pop
fidivrs
xchg
pop
scas
pop
inc
pusha
or
sbb
in
loop
lock
add
dec
jle
mov
test
inc
jo
cs
inc
clc
in
add
fucomip
sbbl
repnz
aaa
fs
loopne
movsb
sbb
cld
or
js
add
fisttpl
loopne
fildll
mov
jecxz
adc
jno
mov
dec
cmp
xchg
lret
lods
add
mov
stc
pop
bound
pop
loope
and
lock
cmc
fldenv
sbb
jnp,pt
movsl
fisubrs
lea
fstp
inc
das
push
mov
jp
mov
or
pop
cmp
sub
and
fiadds
inc
pop
rorl
jge
enter
pop
pusha
push
test
mov
fwait
cli
dec
daa
cmp
adcl
incl
fstps
dec
push
imul
lea
xchg
subl
out
in
add
mov
or
pop
and
push
mov
or
sub
jl
je
mov
rorb
loopne
data16
mov
in
push
fcmovbe
sub
pop
push
fwait
mov
std
rclb
pop
ljmp
bound
mov
addr16
and
fisubrs
cli
idiv
pop
aam
ret
fadds
idiv
or
push
xchg
dec
sbb
add
mov
inc
aas
fidivs
aaa
xchg
dec
xor
inc
cmpsl
xchg
and
inc
rcrb
ret
insl
inc
frstor
sbbl
jle
sub
lds
into
cmpsb
enter
nop
push
jb
jnp
js
jns
push
cmp
fidivrs
in
adc
mov
sti
sub
sub
add
jns
pop
sarl
xchg
jo
dec
mov
repnz
pop
loop
jnp
add
ret
xor
or
push
aad
les
dec
push
or
xor
pop
add
pop
gs
leave
cltd
addb
or
fists
lods
add
test
arpl
scas
add
xor
sbb
xchg
adc
dec
or
mov
test
movsl
mov
loop
jne
lods
pusha
and
loop
scas
test
pop
push
insb
sbb
test
sub
movsb
xchg
mov
xor
in
lret
lret
ss
call
mov
sti
sti
mov
or
fadds
cltd
lods
insb
pop
rol
lods
jo
pop
jle
fnstenv
sbb
jecxz
out
ds
mov
in
cli
jg
ffreep
adc
mov
int
daa
adc
imul
nop
cmpb
cmp
mov
loope
mov
leave
out
imul
mov
add
add
call
xchg
cmp
or
out
pop
insl
mov
sarl
jp
or
mov
sbb
inc
mov
inc
mov
push
cmp
mov
mov
mov
in
sbb
jl
int
outsl
test
or
test
das
in
stc
cmp
and
incb
dec
fldenv
mov
enter
scas
adc
daa
mov
aad
pop
sbb
cli
mov
fdivrp
imul
push
lods
mov
sahf
int
xchg
mov
push
or
dec
aaa
ret
shrl
mov
stos
or
dec
adcl
cmp
pop
pop
nop
repz
sub
call
test
mov
push
lahf
xchg
pop
aad
je
mov
and
cwtl
std
sub
jge
adc
into
arpl
or
lods
sahf
xchg
cmp
je
add
xchg
xchg
pop
pop
mov
dec
ja
stc
push
imul
mov
mov
aam
loope
push
gs
shrb
jb
adc
je
mov
std
mov
xor
sub
adc
rclb
out
scas
add
scas
popf
add
adc
test
stos
xor
sbb
cli
mov
dec
fucomp
nop
sbb
cmp
movswl
cs
hlt
daa
push
jb
inc
pop
pop
mov
sub
xor
vmovaps
sub
jmp
mov
mov
and
loop
adc
test
add
arpl
adc
and
mov
popf
pop
sbb
stc
or
push
adc
imul
ret
sbb
lods
inc
icebp
stos
mov
leave
leave
cmpsb
cltd
jnp
or
fbld
out
mov
mov
adc
cmp
sbb
outsl
xor
push
xlat
jbe
and
out
push
jne
lock
bnd
test
cwtl
xchg
mov
arpl
clc
movsl
mov
cld
or
mov
cmp
dec
imul
xor
int3
popf
in
call
xchg
sub
insl
ljmp
cwtl
repnz
sub
fmuls
fbstp
cmp
mov
or
cmpsl
dec
or
fcomi
sub
mov
dec
or
shlb
and
or
or
push
add
inc
mov
loop
adc
cmp
fyl2xp1
xchg
xor
mov
int3
insl
xlat
sahf
imul
repz
sbb
push
inc
sub
lods
rorl
fwait
lcall
popf
lcall
xchg
xchg
movsl
pop
ljmp
pop
test
sbb
xchg
mov
in
jl
mov
xor
adc
test
fisubl
test
lds
popf
inc
lods
add
jo
negb
das
push
mov
rcr
into
lcall
stos
cmp
lock
in
repz
inc
hlt
jmp
xchg
pop
mov
test
jl
cmp
cld
jge
sbb
dec
and
pushf
xor
inc
mov
lea
xchg
sarb
add
mov
jae
lret
pushf
cmp
popa
int
mov
jl
xchg
mov
pushf
loope
lock
aam
jns
out
scas
sub
jecxz
aas
out
scas
scas
iret
stos
leave
lret
js
icebp
in
add
jnp
jns
dec
js
and
ja
fsubl
enter
xchg
cmc
test
fwait
int3
pop
jge
sbb
es
fstpl
decb
jmp
mov
dec
aas
pop
iret
lret
push
cmp
pop
cmp
push
inc
mov
mov
cs
cwtl
mov
jnp
pushf
add
cmp
shlb
pop
popf
mov
dec
mov
push
jnp
popf
ja
jnp
push
xchg
rcll
mov
adc
cmp
in
sbb
xchg
insb
outsb
sbb
or
enter
inc
jae
jne
and
movsb
jl
mov
mov
add
inc
mov
mov
mov
dec
adc
int3
xor
push
stos
mov
mov
mov
insb
stos
fsubs
out
es
inc
std
xchg
mov
xlat
divb
and
addl
dec
mov
mov
dec
fsubr
xchg
sbb
xlat
push
jmp
and
imul
mov
mov
add
iret
push
iret
and
shl
adc
std
mov
mov
cmp
fcomps
push
xor
mov
lret
fistps
push
add
fwait
inc
inc
xchg
push
sub
arpl
xchg
hlt
push
jl
cmc
jge
push
cs
testb
das
rorl
pop
xor
mov
mov
xchg
push
or
jmp
roll
in
icebp
repnz
fildl
sahf
xchg
es
mov
jne
mov
ret
dec
lea
orl
sub
fistpll
add
inc
dec
add
push
adc
sbb
sbb
rcrl
or
je
push
xor
lcall
pop
jecxz
add
push
xchg
out
jg
mov
stos
cltd
cmp
cltd
and
mov
mov
sti
fidivs
jg
mov
lret
loopne
insb
ja
loope
jne
xor
nop
fnop
inc
push
or
pop
cmc
cmp
movsb
mov
cmp
insl
ljmp
cmp
lret
mov
sti
cwtl
xchg
and
jne
fcoml
jne
mov
insb
insl
ret
mov
fimuls
mov
mov
jae
out
mov
adc
aam
xchg
mov
call
and
mov
js
test
aam
inc
stos
imul
out
mov
push
ds
and
jno
sti
ja
jmp
dec
test
adc
jge
addr16
jns,pn
aam
push
gs
add
rcrl
add
dec
repnz
adc
test
into
addl
fstpl
cs
mov
pop
inc
test
or
dec
cmpsb
scas
mov
push
mov
jg
daa
pop
pop
dec
ljmp
fld
mov
fistpl
mov
and
mov
sbb
mov
std
mov
out
push
ret
cmp
adc
test
sub
adc
fmull
and
sub
and
pushf
pop
push
push
outsb
sbb
ucomiss
and
scas
sub
add
clc
sbb
xchg
jno
xchg
adc
push
insb
mov
mov
cmp
jecxz
and
dec
fdivr
inc
jb
push
imul
xor
cmpsb
data16
push
jl
loopne
test
jle
js
jge
ss
in
jmp
jle
inc
enter
fwait
push
add
into
sahf
inc
out
rcrl
jmp
mov
fs
push
int
jge
or
xchg
push
xchg
jle
out
pop
xor
xchg
clc
pop
ljmp
pop
pop
sub
mov
add
cltd
fucomp
push
xchg
mov
gs
push
lret
adc
outsl
test
stos
cmc
pop
movsl
adcb
dec
adc
jns
inc
loopne
xchg
mov
sarl
xchg
out
pop
jne
push
pusha
lods
fcmovnu
push
aaa
pop
pop
shl
std
push
xchg
nop
loope
es
int3
mov
cmp
pop
pop
jb
aas
cmp
test
pop
addl
pop
adc
dec
xchg
mov
dec
mov
push
add
in
dec
jb
add
add
cmpsl
fldenv
ror
iret
add
sub
vsqrtpd
jno
rorl
call
inc
dec
mov
loope
test
add
jecxz
rorl
push
sarl
les
push
xor
lcall
xchg
fwait
movsb
inc
xchg
popf
inc
dec
sbb
jb
mov
sahf
mov
mov
in
jl
dec
mov
cmc
inc
hlt
mov
adc
sbbb
and
mov
push
and
xor
mov
aad
pushf
push
mov
mov
int3
jge
js
roll
clc
inc
jg
fisubl
lret
push
test
dec
xor
mov
js
sbb
ret
call
loop
add
add
push
mov
mov
inc
dec
xor
mov
mov
dec
inc
insl
daa
pop
mov
jne
sbb
and
add
xor
jo
and
cmc
mov
push
mov
sub
aam
fnsetpm(287
les
dec
neg
mov
ja
sub
cltd
lds
or
push
ret
mov
iret
xchg
dec
outsb
mov
test
out
or
cmpb
fs
cs
and
jbe
cmp
rcl
loope
insl
insl
ror
mov
ljmp
ja
fcoms
sahf
sbb
dec
add
jmp
push
cli
orl
pop
add
icebp
sarb
xor
stos
xchg
add
lret
or
mov
dec
cld
mov
stos
icebp
lret
js
leave
mov
testl
push
push
cmpsl
in
pop
fwait
outsl
sbb
push
adc
xchg
push
andb
mov
adc
or
je
xor
xor
lret
lcall
ja
adc
mov
inc
and
in
daa
cmpsl
adc
adcl
cmp
icebp
and
or
mov
ljmp
mov
sub
jle
je
stos
je
test
cwtl
push
or
in
sub
insl
fimull
sbb
dec
insb
sbb
cltd
or
mov
push
rclb
sub
in
ret
stc
mov
sbb
adc
add
push
xchg
add
stos
out
push
mov
fwait
xor
clc
mov
sar
cmp
jp
ret
test
push
pop
mov
dec
imull
inc
rolb
inc
stos
xor
lcall
xlat
xchg
push
inc
push
imul
xor
loop
movsl
jns
xor
mov
inc
hlt
or
clc
sahf
in
dec
in
push
add
iret
in
ljmp
pusha
jmp
cltd
xor
pop
fwait
jb
inc
jle
push
push
jae
add
out
xor
xor
imul
stos
mov
push
adc
inc
std
mov
ret
int3
imul
mov
dec
shl
mov
cmpsl
mov
pop
icebp
cmp
mov
lock
pushf
cmc
add
popf
sahf
out
push
dec
cmc
xlat
out
rcrb
or
mov
popa
loope
shrb
lret
mov
push
rcll
dec
daa
xchg
roll
roll
adc
jb
decl
mov
je
adc
push
stc
push
arpl
mov
sbb
jge
cltd
cltd
cmpsl
jecxz
mov
shlb
out
cmp
arpl
push
test
inc
loopne
mov
sbbb
jbe
fwait
pop
mov
inc
or
pop
les
mov
cs
dec
push
ja
and
cmp
aaa
aam
pop
sub
fnsave
pop
pop
xchg
jbe
push
data16
jbe
aam
and
rcr
adc
xchg
dec
lods
xchg
push
push
xchg
shlb
mov
inc
cmpsb
test
push
dec
xor
xor
fadd
mov
push
mov
mov
cmp
sbb
call
cli
mov
sub
pop
cwtl
testb
xchg
orb
pop
test
cmp
mov
sub
inc
mov
shl
orl
in
leave
or
sub
pop
mov
cmpsb
sub
push
xlat
push
movsb
and
aas
ret
dec
lea
pop
dec
inc
mov
test
fs
dec
mov
mov
jo
xchg
inc
loopne
cmp
add
orb
call
hlt
jle
xchg
pop
sbb
std
jg
shlb
mov
jb
xor
daa
aam
andb
popf
fwait
mov
or
lock
and
mov
mov
test
mov
adc
popf
cmpsl
stos
aad
out
xor
lcall
mov
or
pop
jbe
les
or
jge
mov
xor
mov
push
mov
aad
dec
xchg
insb
repnz
push
mov
xorl
sahf
dec
lret
rcll
mov
pop
xor
and
adc
push
fs
lcall
xchg
mov
divb
adc
andb
jno
pop
pop
xor
std
cwtl
jne
dec
jecxz
mov
xor
out
mov
test
divb
movsb
fisubrl
xchg
nop
in
mov
mov
loope
add
push
jp
stos
xchg
mov
jbe
clc
insl
push
push
push
push
xchg
sbb
adc
sbbb
cmp
inc
jbe
xor
push
xchg
data16
add
insl
pop
or
and
pop
int
cmp
pop
gs
mov
dec
push
repz
fisttps
into
xchg
outsb
sub
inc
jno
add
out
pop
or
inc
fnsave
unpckhps
cmpsl
push
push
rclb
pop
mov
hlt
inc
loopne
adc
std
pop
add
popf
mov
mov
jecxz
sub
sub
sahf
test
push
mov
cld
push
decb
xchg
clc
cmp
jo
push
sub
mov
cmp
inc
and
adc
or
idivl
pop
adc
movsl
icebp
outsl
in
bound
ds
push
push
push
cwtl
out
dec
xchg
mull
ja
jns
jnp
aad
mov
pop
lea
mov
addl
sub
dec
jae
inc
and
and
cmp
aad
dec
loope
inc
in
popf
mov
roll
lret
mov
cwtl
cmp
cli
adc
mov
add
shll
mov
xchg
sbb
pop
iret
inc
cld
pop
pop
popf
gs
filds
rorl
aad
inc
fiaddl
sbb
or
add
in
mov
push
movsb
rcr
and
cmp
cmp
xchg
adc
sti
inc
test
movsb
fstpt
push
dec
mov
cmp
or
jle
xchg
fwait
dec
push
sahf
fsubp
lcall
push
test
jbe
sbb
xor
sbb
jo
cmp
xor
mov
push
add
inc
ret
pop
adc
in
rol
in
push
or
hlt
xlat
or
aaa
lock
xor
cmpl
xchg
outsl
pusha
sbb
mov
lods
mov
or
mov
clc
and
movb
stos
jg
adc
pushf
enter
sbb
movsl
pop
and
mov
clc
mov
lret
loop
fadds
gs
loop
icebp
mov
push
pop
jne
loop
repz
dec
fadd
xor
loop
out
mov
add
ja
lds
fs
bound
sbb
jp
stos
test
jno
cs
call
jb
hlt
push
sti
push
repnz
mov
ja
jl
jp
add
or
add
xchg
xchg
fisubs
push
fs
adc
subl
nop
int
mov
repnz
pushf
ret
iret
xor
xchg
inc
out
loop
push
mov
pop
data16
mov
lods
sti
mov
add
js
popf
push
movl
or
xlat
dec
stc
jne
adcb
xor
mov
iret
sbb
clc
flds
dec
jmp
lret
movsl
mov
jmp
into
sbb
mov
aam
mov
int3
repz
testl
movsb
xchg
data16
cmp
inc
or
mov
sbbb
movsb
pop
cmc
popl
enter
push
inc
insb
and
mov
mov
mov
sbb
dec
adc
lods
mov
pop
insb
test
push
mov
dec
into
shlb
mov
sti
repz
sbb
jb
js
mov
dec
sbb
aas
insl
sahf
xorb
in
mov
inc
outsl
adc
sbb
ret
popf
xor
pop
cmp
nop
push
mov
aad
mov
scas
movsl
sub
lock
into
scas
jle
xorb
test
adcb
mov
js
js
test
scas
and
pop
and
mov
sub
push
or
fwait
jbe
insl
cli
stos
dec
mov
jecxz
sub
lock
sub
dec
imul
insb
inc
jae
push
and
mov
mov
out
cld
cwtl
xor
xchg
or
adc
scas
mov
icebp
popa
ret
sbb
dec
mov
pop
mov
add
in
js
test
loop
and
push
pop
xlat
lret
popf
clc
out
cs
mov
iret
mov
pop
cld
dec
lods
sti
sbb
rorb
inc
pop
xor
push
sbb
rorl
std
jno
xchg
and
and
ja
repnz
push
cmp
retw
mov
pop
adc
mov
fcoml
orb
cmp
cmp
cmp
sarl
mov
aas
enter
jb
aad
js
cmpsl
dec
ja
lods
pop
push
push
sbb
in
movsl
or
adc
sub
stos
jno
xor
and
sub
pop
sub
icebp
test
movsb
leave
enter
push
pusha
push
jns
aad
adcb
enter
mov
lcall
add
cmp
sbb
out
fidivs
pop
movsb
in
jle
insb
fistpll
dec
int3
cwtl
inc
fsubs
lret
hlt
imul
pop
mov
xchg
or
and
pop
dec
repz
inc
and
add
mov
pop
xchg
adc
xor
mov
mov
ret
xchg
jmp
xchg
jmp
cwtl
cld
xlat
sub
fs
mov
inc
mov
mov
xor
ficoml
loopne
sub
mov
cld
push
cltd
dec
addr16
addr16
pop
addr16
inc
leave
out
inc
jle
enter
repz
mov
push
je
fsub
add
jmp
mov
push
loop
call
push
mov
inc
jb
ljmp
pop
outsl
pushf
push
in
insl
jmp
xchg
ds
in
mov
sarl
lret
inc
js
stc
mov
xorl
into
scas
mov
clc
in
mov
aad
pop
ss
mov
adc
lods
call
popl
loopne
fs
mov
stc
mov
add
das
mov
push
inc
sbb
xchg
stos
call
call
and
mov
mov
push
daa
xor
lods
mov
out
test
iret
ficoml
add
fwait
in
mov
mov
outsb
adc
stc
inc
out
add
in
pop
inc
add
sub
imul
sub
loope
sub
pop
or
pushf
jne
adc
inc
outsb
nop
lcall
add
and
ficompl
xchg
fadds
hlt
sub
hlt
mov
rcll
imul
repnz
push
jbe
or
pop
cmp
and
sti
xchg
pusha
sbbl
std
jl
inc
insl
test
aaa
sti
xor
lods
and
adc
sub
out
or
sbb
inc
lahf
push
push
loop
adc
xchg
mov
cli
inc
mov
lds
test
inc
xor
les
repz
cmp
cld
push
loop
fs
dec
xor
test
ss
adc
fmuls
outsl
hlt
inc
xchg
cmp
mov
ljmp
aas
and
xor
cmp
xchg
sbb
dec
sbb
scas
push
dec
out
loope
mov
pop
push
ret
stos
or
lret
jnp
in
push
add
mov
imul
cmp
mov
fnstsw
out
sub
sbb
mov
invd
imul
mov
call
scas
cmc
lret
mov
mov
ficomps
repz
int3
jbe
pop
xlat
push
adc
cmp
or
sbb
jae
jge
jmp
sub
mov
fwait
adc
dec
lock
xor
rcr
or
dec
inc
pop
stos
fs
aam
push
lods
xchg
inc
lock
mov
fsubr
nop
shrb
xor
cmp
xor
cmp
cmc
cmpsl
and
xor
fisubrl
push
add
adc
add
jo
adc
xor
es
scas
imul
push
loopne
pop
sbb
pop
cwtl
push
push
loopne
jecxz
imul
xchg
push
xchg
mov
xchg
mov
lret
xchg
cmp
push
mov
sarl
pop
cli
mov
push
popf
data16
jg
pop
gs
not
imul
std
aaa
push
test
xchg
push
add
pushf
idivl
push
nop
scas
cmpsl
jmp
addb
push
or
xor
dec
xor
jmp
cmp
stos
arpl
popa
and
push
add
dec
hlt
dec
lret
stos
adcl
jecxz
pop
mov
mov
lahf
pusha
push
push
dec
push
popf
jecxz
dec
test
push
sub
loop
loop
popa
scas
clc
stos
or
loop
out
cmp
pop
stos
scas
or
popa
sbb
in
inc
adc
arpl
hlt
sahf
sub
inc
xchg
addl
sahf
inc
mov
inc
in
gs
mov
adc
xchg
ja
mulb
ds
mov
dec
fists
or
aas
fists
shll
cmpsl
popf
ret
lods
push
push
pusha
lret
xchg
leave
stos
hlt
push
mov
push
jmp
mov
call
cwtl
xor
hlt
or
sub
xchg
pop
xchg
clc
sbb
xchg
repnz
sbb
xor
xor
sarl
std
xchg
cli
sti
ret
pop
push
mov
popa
pop
sbb
inc
xor
mov
movsb
xlat
or
xchg
dec
push
jge
das
sti
inc
adc
cmc
dec
iret
mov
jmp
dec
and
pop
dec
jp
popf
outsb
jg
shrl
jns
and
imul
roll
subb
sub
outsb
mov
ss
push
or
mov
inc
pushf
lea
dec
int
fisubrl
fucom
mov
fwait
sahf
les
dec
loope
mov
bound
push
push
dec
or
andl
popf
cmp
dec
lods
push
xor
sbb
out
mov
jge
ror
push
std
ss
inc
cmp
fistpll
gs
mov
movsb
leave
and
pop
sbb
into
mov
xor
pop
imul
nop
pop
xor
dec
ja
leave
in
gs
ss
test
xor
add
notl
mov
fs
pop
call
jnp
or
inc
mov
mov
sub
cld
dec
pop
mov
ja
stos
pop
ret
cmp
insl
cs
dec
aam
push
pushl
insl
add
scas
add
lock
jo
enter
dec
into
idivl
cmp
mov
orl
in
adc
gs
fimuls
in
ret
out
rcl
lods
shr
or
icebp
adc
pop
ds
nop
and
aad
inc
movsl
enter
pop
dec
loopne
inc
push
enter
sub
in
fld
rcr
out
andl
ds
andl
inc
jmp
dec
cmp
mov
xchg
push
cmp
jae
xlat
inc
lods
add
adc
aad
mov
inc
fs
repz
cmp
xchg
lock
adc
adc
push
dec
xchg
shlb
insb
nop
call
xchg
lcall
adc
mov
mov
mov
cltd
ds
jo
or
faddp
shr
mov
jle
jbe
adc
mov
mov
mov
outsb
and
fidivs
ja
jle
imul
lahf
movl
or
xchg
iret
mov
out
lods
jmp
jbe
push
mov
xor
sbb
mov
sbb
mov
inc
call
xchg
call
mov
mov
xor
pop
test
sub
mov
xchg
shll
or
jnp
int
lahf
cmpb
fnstsw
imul
shll
sbb
es
adc
push
lea
push
jnp,pt
inc
cmp
jge
dec
iret
sti
test
xchg
pop
test
jmp
fwait
aam
adc
mov
je
push
frstor
insl
inc
es
std
mov
dec
cld
jecxz
in
fimuls
ds
cmp
je
push
sub
push
mov
stc
fimuls
iret
sub
subb
or
mov
and
sbb
das
adc
push
ljmp
jo
mov
adc
fwait
add
jl
out
mov
jge
inc
xor
xor
cs
or
and
push
pop
in
mov
mov
jb
mov
lret
jecxz
inc
cwtl
lcall
push
xor
shlb
mov
into
fidivs
add
decb
cltd
or
shlb
pop
lods
loop
adc
xchg
lea
or
bound
mov
jecxz
add
push
cmpsl
xchg
xor
sbb
or
into
div
sub
xchg
add
cld
into
and
mov
movb
xor
xor
jp
test
sub
jle
pusha
movsb
stc
cs
pop
ret
mov
mov
lock
inc
jb
arpl
add
dec
mov
cli
mov
loope
cmpsb
stc
lret
je
or
shrb
aas
xorb
jb
lret
add
lds
fucomp
test
mov
ss
lret
mov
push
ljmp
fcmovu
cli
jg
mov
popa
adc
inc
pop
mov
notl
fidivrl
lcall
add
shlb
mov
lea
cld
mov
jp
xor
xchg
inc
jo
stc
xchg
insb
notl
subl
enter
sbb
mov
test
xchg
icebp
mov
inc
lcall
jne
dec
inc
in
stos
ss
in
push
inc
add
mov
shlb
mov
nop
push
jb
hlt
push
xlat
dec
mov
cmpsb
movsl
or
mov
iret
movl
cli
daa
add
cli
sub
frstor
dec
int3
cltd
std
je
mov
loope
repz
mov
test
hlt
cmp
inc
and
jae
arpl
sahf
sub
mov
lea
clc
mov
stos
mov
in
xor
mov
outsl
into
dec
int3
lcall
push
test
mov
pop
leave
add
orl
aas
add
js
inc
hlt
lds
dec
aad
mov
mov
cmp
gs
xorb
es
push
mov
dec
shl
call
xor
add
jp
ljmp
jg
je
sbb
push
fsubr
clc
jg
and
jp
fs
in
jmp
push
xchg
push
pop
mov
aas
xor
xor
lahf
clc
sub
pop
les
arpl
leave
scas
jmp
cmp
or
lea
ficomps
xor
dec
fcomip
out
cmp
insl
mov
add
icebp
pop
dec
loop
pop
jnp
mov
push
ss
mov
nop
mov
mov
imul
xchg
sahf
testl
inc
push
mov
mov
inc
sbb
mov
test
pop
or
enter
scas
dec
push
and
loop
hlt
push
orb
in
push
jno
lods
aas
jae
jge
out
cmpsl
adc
andl
jns
push
clc
sbb
sub
test
and
test
cmp
cmp
cmp
jo
mov
icebp
jl
insb
and
push
xor
aad
sti
mov
inc
pop
aas
cli
xchg
jne
int
int3
flds
and
fisttpll
push
push
ss
orl
mov
xor
pop
xor
sbb
std
push
sbb
lret
and
sub
pop
sbb
hlt
xor
mov
inc
or
sbb
xchg
fxtract
iret
gs
jo
cld
jo
add
mov
lods
cmp
ds
rcrb
inc
sub
enter
pop
jo
jnp
enter
jg
sbb
icebp
push
fisubrl
jae
xchg
inc
aad
je
xchg
or
test
test
fnstsw
loopne
jb
xchg
xor
cld
jo
ret
push
incl
push
jns
neg
dec
sbb
sti
repz
popa
inc
or
out
in
or
mov
repz
cmp
xchg
mov
mov
idiv
ja
aaa
sub
dec
cmp
lods
sub
inc
addr16
clc
jg
push
lods
mov
add
mov
jmp
cmpsb
mov
adc
loope
call
es
mov
outsb
daa
out
dec
bound
jne
adc
sub
test
sbb
jb
xor
lcall
dec
rcrl
or
and
adc
mov
sbb
xchg
fistps
push
dec
sub
mov
mov
in
repz
pop
xchg
xor
and
lds
gs
lds
leave
into
stos
pushf
cmp
xchg
movsl
push
push
insb
int
cmp
movsb
std
add
inc
mov
jmp
stos
loopne
xchg
adc
subb
or
movsl
cmp
jae
or
jl
jp
inc
jnp
popa
add
fidivl
push
movsb
cmp
lods
cmpl
jge
mov
daa
ret
cmpl
sahf
cld
loop
out
stc
lods
hlt
dec
mov
call
js
cmc
sub
xor
mov
add
or
add
sub
dec
cld
and
jecxz
xchg
adc
data16
ja
addl
imul
sub
call
subl
push
push
stc
les
outsb
insb
add
call
test
popa
cmpsl
mov
loope
push
add
pop
adcb
rorb
adc
mov
in
jne
fcomp
push
imul
outsl
pop
out
insl
mov
fcmovbe
inc
ja
clc
leave
sub
out
mov
aad
out
jecxz
jp
lahf
aad
mov
ljmp
lcall
ret
js
xchg
mov
in
jmp
mov
outsl
test
aas
mov
je
adcl
stos
fstpt
scas
cs
cli
imul
ds
leave
fnsave
inc
aaa
jns
aam
inc
cwtl
mov
aas
lret
lret
pop
inc
jb
cmpl
std
enter
movsl
cltd
sbb
fcmove
mov
dec
popl
jb
cli
mov
aam
sarl
jecxz
ret
ret
push
test
shrb
lea
mov
push
pusha
adc
cld
fildl
pop
sub
mov
xchg
clts
lods
es
sbb
push
lret
gs
hlt
flds
stos
daa
leave
out
mov
push
add
ret
sbbl
movsb
lret
xor
jb
outsl
ja
lods
sub
cltd
mov
pop
icebp
sbb
push
addr16
xchg
call
lock
dec
into
or
dec
andb
jno
sbb
cmp
stos
int
inc
lods
pop
repz
push
cmpsl
shll
loop
or
cmp
subl
adc
hlt
cmp
push
xor
jo
out
adc
cltd
ret
sub
fwait
fs
jae
ret
pop
hlt
mov
pop
fisubs
stos
lret
rorb
sbb
jg
outsb
xchg
aam
xlat
call
ret
mov
sub
dec
cmc
xchg
movsb
inc
aam
adc
xor
lahf
sbb
insl
repz
mov
fidivrs
push
pop
dec
dec
mov
mov
sub
cs
xchg
aam
pop
push
or
cltd
out
hlt
mov
repnz
outsb
jbe
mov
hlt
mov
daa
jmp
mov
shl
adc
push
cli
or
ja
sub
inc
xor
adc
mov
loopne
or
cmpsb
jbe
fidivrs
adc
mov
out
adc
movsl
into
sub
mov
jne
mov
cwtl
ret
inc
cmpxchg
inc
mov
test
mov
pop
pushf
pop
push
imul
jns
sbb
jbe
push
sbb
rcl
lret
xchg
fsubs
dec
sti
cmp
xor
pop
sub
jecxz
push
pop
daa
in
hlt
mov
mov
adc
xchg
js
out
push
enter
add
rclb
jns
bound
mov
xchg
ss
sahf
fwait
rolb
fstl
loop
push
cmp
or
inc
ljmp
xor
push
aad
lret
push
aad
in
xchg
shlb
shll
jno
fwait
push
pop
pop
fstl
out
cwtl
in
inc
xlat
insl
out
ror
mov
lret
into
imul
lret
imul
cli
sarb
out
bound
cwtl
push
and
call
xorb
jle
lods
iret
push
test
push
repz
jmp
int
test
loop
mov
out
and
dec
xchg
pop
push
mov
sbb
fnsave
shlb
xor
inc
push
loop
xor
loopne
lea
adc
mov
mov
dec
xor
gs
int
or
mov
hlt
jbe
mov
cs
adc
mov
mov
jne
push
out
xchg
add
out
psllq
fdivl
jecxz
cmp
lret
nop
mov
mov
popf
ficomps
push
pop
inc
dec
adc
aaa
and
and
mov
push
lods
out
add
mov
inc
jle
push
xlat
stc
lahf
pop
sbb
or
loope
sbb
add
inc
lahf
roll
pop
cmp
dec
outsl
mov
jb
push
dec
loopne
dec
push
js
aad
adc
outsb
sbb
jno
lds
inc
sbb
and
adc
cmpl
in
les
stc
js
fldl2t
xor
mov
mov
cmpsl
mov
fs
mov
or
mov
cmp
jns
adcl
rcl
mov
jo
addr16
cmp
mov
aas
xchg
fldt
jne
cld
xor
and
push
mov
or
xchg
inc
and
mov
mov
mov
pop
insb
insl
test
rcll
aam
inc
sbb
movl
cmp
jmp
clc
aam
sbb
inc
mov
js
sbb
jo
aam
jge
sub
outsl
mov
jecxz
xchg
adc
or
cmp
adc
dec
jecxz
adc
push
test
mov
or
mov
or
xchg
sbbb
ficoms
sahf
mov
ds
pop
add
or
add
cmp
push
es
mov
xchg
scas
std
stc
jne
mov
testb
jo
scas
fwait
cltd
jb
jecxz
push
arpl
pop
and
jbe
mov
mov
inc
sub
dec
test
add
adcb
mov
inc
bound
push
push
jae
and
add
pop
frstor
adc
mov
popf
pop
mov
lret
xlat
sarl
fs
outsl
pushw
sbb
xor
xor
pop
xor
sbb
sti
lahf
cmpsb
ficomps
ds
nop
insl
cli
rcr
push
test
push
cli
jae
loope
sub
imul
adc
out
push
and
test
pop
inc
push
pop
enter
jecxz
jae
jno
pushf
mov
lret
sbb
dec
test
push
xor
cmp
jecxz
repz
movsb
push
or
int
jl
mov
fimuls
imul
push
and
or
fdivl
int
repz
sti
jl
push
out
xchg
negl
fnstenv
in
mov
mov
mov
scas
lea
aaa
sbb
iret
out
and
push
das
stos
pop
dec
sbb
mov
bound
int3
push
push
repz
push
enter
or
push
fstpl
popa
mov
and
test
ds
ficompl
adc
add
imul
cmp
into
fstl
dec
push
mov
cmp
pop
mov
dec
scas
ss
adc
int
mov
cwtl
mov
or
out
xchg
or
jmp
inc
dec
and
aaa
aas
je
int3
int3
xchg
mov
je
pusha
sbb
shr
clc
dec
callw
add
adc
sub
lcall
shl
jle
sti
mov
sahf
jge
and
jno
push
push
jae
add
aad
js
stos
and
mov
fldcw
mov
mov
pop
aaa
imul
sub
mov
shrl
cmp
xchg
clc
cwtl
arpl
pop
rcr
push
inc
mov
dec
sbb
es
and
pop
mov
jo
push
xchg
out
pop
dec
rolb
imul
xchg
std
sbb
mov
lret
insb
stos
es
je
mov
adc
cmpsb
fdivl
inc
and
jo
and
rcll
aad
imul
cmp
inc
push
out
jno
sub
or
mov
das
fisubrl
inc
push
adc
int3
jle
test
into
loopne
sti
arpl
jp
pop
test
lret
adc
dec
idivl
xlat
movsb
cmpsl
jl
shll
pop
dec
in
push
andb
jge
mov
dec
shrb
stc
out
clc
mov
push
add
stos
mov
out
stos
adc
mov
dec
ss
xchg
dec
into
pop
add
or
adc
cmp
decl
sbb
out
pop
jo
cmp
movsb
mov
cmp
push
push
js
sbb
ds
out
movsb
fisubrs
sahf
dec
fmull
jnp
or
and
push
imul
dec
dec
lock
loope
inc
push
nop
fstl
stos
arpl
dec
call
add
imul
ljmp
mov
pop
int
xchg
push
sarb
pushf
aaa
test
mov
push
xlat
xor
push
add
sub
bound
jns
cld
mov
ror
movb
push
sti
xor
inc
pop
jb
dec
out
mov
std
lret
enter
stos
mov
jnp
mov
loope
or
int
or
and
add
push
jl
lret
dec
cmp
mov
out
push
sbb
cmp
push
out
mov
cmp
sub
movsb
mov
rcl
dec
fisttpl
lret
js
add
push
sbb
cmc
push
sahf
scas
aas
bound
ja
ljmp
pusha
hlt
sub
add
push
ljmp
push
cmc
lahf
sub
add
cmp
jmp
jnp
test
xchg
lret
popa
fsubs
int
dec
dec
ds
cmc
imul
or
push
xor
mov
test
inc
dec
in
push
aad
and
xor
sub
xchg
xchg
inc
int3
hlt
xchg
cmpsb
push
scas
test
push
sub
mov
stos
push
rcrb
cmpb
add
push
xchg
sbb
or
add
scas
gs
or
cwtl
inc
mov
cmc
and
inc
sti
xor
sub
inc
daa
cmc
mov
in
data16
addl
add
outsl
xchg
fwait
pop
jne
mov
pop
jae
dec
fcoms
dec
lret
out
fstpl
jg
sbb
xor
daa
mov
outsb
pop
roll
push
imul
mov
test
es
inc
rcll
lock
and
call
lret
xchg
cs
aam
rclb
les
jl
stos
lods
mov
notb
sbb
sbb
or
daa
mov
add
add
and
inc
lock
fstps
sar
aaa
ljmp
shll
aaa
or
pusha
pushf
push
fwait
and
test
cmp
mov
adc
dec
jns
lahf
lea
into
xchg
mov
xchg
mov
imul
xor
adc
lret
out
lea
or
sbb
sbb
jb
icebp
xor
fadd
aaa
jmp
repz
add
cmp
jbe
or
push
xorb
xchg
addr16
inc
push
imul
mov
leave
je
iret
push
das
imul
dec
or
xchg
sub
mov
sub
and
jle
pop
xor
cltd
mov
mov
les
jo
add
mov
xor
je
mov
xchg
ds
test
mov
in
xor
out
cmp
in
jae
aam
push
xor
jmp
inc
lcall
jbe
jecxz
rcrb
jl
mov
js
push
push
sub
cmp
fs
fidivrl
add
sub
out
add
out
cmpsb
aad
push
int3
test
add
or
pop
js
push
adc
mov
je
fiadds
imul
gs
adc
inc
je
add
mov
and
ficomps
jbe
fsub
pop
push
movsl
jns
mov
iret
mov
jmp
inc
out
pop
cmp
xchg
pop
jmp
jo
push
outsb
out
dec
call
push
cmp
out
into
or
in
add
push
jo
loope
xlat
pop
jns
aam
and
sub
popf
loope
mov
lock
sub
addb
xchg
jnp
std
adc
sbb
mov
lret
pop
je
sub
outsl
push
push
push
sbb
sub
rclb
loopne
or
hlt
pop
cmp
sbb
push
lods
pop
out
outsl
cli
popa
enter
test
xchg
in
xchg
mov
cmp
fnsave
aam
lahf
lock
mov
inc
or
int3
btr
mov
sub
lret
mov
loope
pop
cmp
insb
jno
mov
adc
pop
insl
push
das
outsl
push
sbb
pusha
insl
and
cmp
jge
outsb
add
jne
mov
mov
inc
dec
mov
adc
jp
add
in
sbb
adc
jnp
jno
xorb
sbb
dec
and
data16
mov
movsb
stos
dec
push
fadds
xchg
mov
cmp
pop
mov
jge
dec
out
mov
hlt
in
movhlps
test
dec
pop
sbb
dec
fwait
cmp
or
pop
sarb
inc
push
es
sbb
adc
mov
cmc
jmp
or
leave
xchg
mov
stc
mov
in
mov
add
popf
adc
mov
fiaddl
repz
in
test
pop
push
xor
adc
test
cmp
cmp
jnp
mov
xchg
shll
sbb
pop
push
scas
or
cli
mov
int
jnp
xor
dec
aad
jb
mov
test
ljmp
mov
fs
in
sbb
xchg
jle
xor
bound
cmp
cmp
push
push
xorl
cmp
jecxz
and
mov
shll
in
hlt
and
mov
fwait
jne
shrl
stc
mov
ja
jbe
xlat
add
shll
cmc
loopne
scas
aad
push
mov
pop
aaa
aaa
fmull
or
xchg
mov
mov
or
test
jne
dec
daa
in
rolb
stc
addb
cmpb
in
inc
out
dec
push
into
cvtpi2ps
or
sbb
in
stos
test
cmp
pushf
cmpsl
mov
daa
bound
mov
fstps
orl
out
sbb
dec
xchg
adc
or
xchg
sub
or
lds
adc
mov
ret
dec
faddl
adc
pop
mov
mov
mov
pop
cmp
mov
dec
lea
fs
cmpsl
aam
orl
inc
out
cmp
jmp
inc
adc
push
outsb
icebp
xchg
mov
push
imul
cmpsl
and
je
adcb
sbb
push
jp
gs
mov
and
or
arpl
push
jns
je
int
popa
inc
xorb
ret
and
lods
mov
stc
lds
mov
adc
or
out
dec
les
ds
out
imul
xor
pop
cld
in
aad
test
mov
daa
outsl
test
xchg
sub
sbb
xor
arpl
js
mov
cmpsl
stos
call
xchg
cmp
dec
pusha
mov
xchg
cwtl
and
stos
jae
sahf
and
roll
inc
inc
jne
and
adc
push
xlat
mov
mov
imul
fs
sbb
and
out
inc
ss
pushl
repnz
or
icebp
push
mov
iret
cmp
push
or
push
les
int3
jge
or
sub
jle
ret
xor
repz
adc
insl
and
jecxz
leave
cltd
mov
xchg
arpl
push
mov
adc
pop
or
js
sbb
inc
ficomps
loope
fsincos
into
push
into
mov
push
sti
mov
addr16
jmp
mov
cmpsl
mov
lds
mov
dec
adc
in
or
mov
cltd
add
daa
and
subb
fistpll
push
xchg
sbb
arpl
add
std
or
mulb
xchg
sbb
aas
ss
mov
adc
and
js
fisubrs
inc
pop
mov
adc
loopne
loop
repz
in
xchg
mov
lahf
aas
xchg
dec
iret
js
lret
inc
and
mov
add
cs
adc
pushf
cs
call
mov
mov
sbb
push
mov
and
fnstsw
les
push
push
push
stc
fwait
xchg
fs
popf
inc
adc
xchg
rol
xor
sti
fcoms
shlb
push
cmpb
dec
imul
jge
pop
int3
pop
mov
gs
and
push
pop
inc
movsb
ss
dec
push
out
mov
adcl
and
inc
cwtl
or
data16
sbb
loopne
sbb
das
sbb
cs
xchg
jb
sahf
imul
ret
leave
add
and
mov
add
sub
xchg
mov
dec
jae
jno
push
xchg
addl
in
push
rcr
sub
or
mov
out
sub
and
popf
or
in
daa
negb
hlt
push
inc
push
dec
int3
pusha
add
lods
lds
cmpsb
neg
adc
cmpsl
test
mov
pop
mov
subl
add
sub
xor
rep
inc
pop
push
mov
adc
or
loope
jmp
in
push
arpl
add
adc
arpl
push
dec
into
xor
mov
sbb
add
addb
jno
push
cmpb
lds
aam
xor
mulb
stos
jmp
xor
mov
cmpsb
push
bound
sub
jno
test
inc
orb
cmc
dec
xchg
cmp
das
xchg
mov
stos
lods
xor
sbb
stc
cmpsl
insb
jecxz
repnz
inc
or
icebp
add
aam
sub
sti
hlt
mov
push
pop
ret
and
jb
loopew
xor
push
cmpsb
pusha
icebp
movsl
fwait
mov
test
pop
in
mov
mov
pop
in
mov
das
sub
jns
fsubrl
jae
xor
xchg
xor
aam
mov
add
xor
les
push
push
out
xchg
out
mov
and
xor
mov
fsubr
push
lds
daa
pusha
push
jo
dec
cmpsb
pop
fmulp
lret
lods
sti
stos
push
icebp
push
ja
enter
jno
or
inc
cmp
jae
fisubrl
inc
pop
push
arpl
icebp
push
jo
jecxz
daa
xor
sub
test
mov
xchg
inc
push
mov
sarb
dec
jnp
in
mov
mov
xor
fisubrs
lock
inc
sar
test
arpl
mov
leave
lea
mov
or
jb
out
mov
insl
cld
xchg
addb
jns
int
lds
bound
xor
and
mov
dec
sub
or
scas
pop
adc
mov
dec
cmp
repnz
cmpsl
push
pusha
mov
daa
stos
pop
jp
push
popl
xchg
sbb
add
jbe
sbb
jo
pop
push
imul
or
es
imul
mov
push
repz
insl
mov
xor
mov
jecxz
adc
mov
fstl
xor
aam
imul
ret
xchg
clc
push
lret
les
loope
xchg
ret
mov
lret
sahf
mov
jle
pop
push
push
or
or
cltd
jae
sar
mov
imul
dec
in
das
lret
pop
js
dec
push
cmp
jnp
sbb
mov
cmpsb
xor
adc
adc
fisubrs
repz
push
xchg
xchg
adc
mov
imul
lcall
faddl
and
sub
shlb
in
push
loopne
pop
add
lock
jbe
rolb
cmp
stos
inc
ja
and
fnsave
sub
xchg
rcrb
bound
out
adc
aad
mov
and
fstps
dec
movb
ds
stc
aas
cltd
fbld
jo
neg
push
xchg
cmp
lret
mov
mov
sbb
mov
lods
nop
sub
int3
imul
xlat
daa
sbb
lret
outsl
cmc
pop
lret
int
lods
ljmp
sbb
pop
outsl
xchg
fidivrl
push
cs
orl
pop
or
out
mov
xchg
xchg
sub
sbb
add
pop
subb
sub
xchg
pop
or
js
test
leave
hlt
stc
and
adc
pop
test
lods
jmp
mov
lods
fisubs
lods
push
xabort
adc
dec
aas
cwtl
jb
xchg
dec
loopne
sarb
pop
insb
sub
test
into
xchg
mov
push
jg
pop
mov
pop
push
data16
or
mov
das
test
xor
aam
clc
cmp
xchg
xchg
cmpsl
cmp
test
test
je
xor
mov
cmp
call
add
mov
cmp
xor
cmp
icebp
dec
mov
jecxz
mov
fdivrp
jne
push
daa
push
out
pop
add
push
dec
iret
mov
mov
imul
out
into
or
sahf
adc
push
ret
jge
xor
push
xchg
mov
data16
or
and
daa
mov
cli
jmp
inc
lcall
scas
imul
push
jmp
pop
and
out
dec
adc
mov
hlt
mov
push
mov
in
clc
push
push
in
stc
aas
int
inc
mov
ret
xchg
mov
sbb
mov
push
push
mov
aam
les
mov
pop
mov
fadds
lock
repz
lahf
jmp
mov
and
xor
inc
fnstsw
std
add
in
and
pop
mov
pop
outsl
xlat
insl
lds
imul
repnz
add
es
loop
mov
jne
and
js
jb
push
or
inc
das
negl
arpl
stos
xchg
dec
inc
push
mov
daa
jbe
adc
stos
jp
inc
aam
aam
leave
sbb
cmp
pop
mul
push
push
xchg
popf
jb
mov
cmp
xchg
mov
cli
or
push
adc
lods
pop
mov
pop
sti
push
mov
push
pop
fs
cmc
jb
xchg
pop
push
adc
pop
inc
enter
xor
scas
dec
sbb
cmp
dec
shll
adc
adc
add
pop
ret
imul
adc
outsl
mov
push
jmp
xchg
cmpsl
mov
or
imul
cli
add
add
in
movsl
mov
movsl
or
outsl
in
inc
leave
in
insl
push
push
sahf
sbb
jne
das
movsl
lods
pop
int
cmp
sub
hlt
or
gs
pusha
sbb
xor
fisubs
pop
rorl
fsubrs
fidivrl
pop
je
fdivrl
or
cmc
xchg
add
fcoms
das
dec
mov
sbb
dec
jecxz
ret
sub
fsubs
sub
test
addl
pop
shll
mov
xor
pop
out
sbb
negb
fmul
inc
xchg
xor
and
js
shl
add
sub
in
lock
xlat
push
insb
add
adc
movsl
in
nop
add
add
xchg
call
add
push
add
cmpsb
les
leave
mov
stos
clc
jl
inc
fdiv
out
std
imul
jmp
loope
inc
les
jg
xchg
fld
push
rcll
xchg
pop
or
pop
push
stos
and
pop
inc
push
and
sub
mov
addr16
scas
imul
ret
jns
stc
cmc
inc
fcoms
in
dec
push
dec
mov
pop
out
cmp
fwait
lock
mov
fadd
out
fmul
xor
stos
lcall
mov
cmp
push
data16
ljmp
in
shlb
sub
xor
xchg
aad
dec
clc
pushf
clc
out
dec
xor
enter
or
jg
sbb
adc
fucomip
jmp
xchg
lret
jg
xor
xor
sub
inc
movsl
adc
popf
cmp
xlat
and
jo
jno
cmp
push
mov
gs
scas
pop
mov
cs
shlb
xchg
psubusb
sbb
mov
cmc
and
mov
pop
fwait
xorb
cltd
ss
test
pop
sahf
inc
lods
pop
jno
fnstenv
pop
imul
testl
adc
xchg
sub
cli
lahf
sbb
xor
mov
inc
xchg
inc
lods
mov
pop
add
daa
pop
rorb
cld
pop
cmp
mov
ret
dec
roll
out
jne
push
outsb
inc
or
mov
lret
jecxz
xchg
enter
lret
addl
and
pop
mov
loop
add
imul
pop
std
addr16
hlt
jmp
nop
jg
xchg
out
xor
dec
or
dec
sub
inc
sub
aam
push
or
sub
das
movsl
std
pop
ret
mov
fdivrs
std
aas
jg
hlt
aas
mov
mov
stos
lahf
pop
mov
out
adc
cltd
dec
clc
lahf
out
shrl
les
rcll
and
dec
jb
xor
lcall
rclb
ss
and
out
daa
and
repnz
xchg
mov
ja
fiadds
mov
pop
test
mov
pop
sbb
shrb
fiadds
movsl
ss
jmp
and
mov
cli
jno
add
lods
mov
adc
int3
leave
dec
pop
daa
fisubl
ficoms
lea
xorl
jp,pt
cs
jl
insb
pop
mov
push
push
cmpsb
fistpll
inc
xor
inc
call
rolb
mov
lea
pop
push
jmp
mov
in
scas
add
mov
cltd
push
pop
jno
jmp
and
sbb
jae
mov
icebp
or
adc
xor
mov
daa
arpl
fidivl
adc
push
xor
xor
mov
or
test
adc
inc
sub
add
push
stos
xchg
sub
lds
xor
rcrl
nop
aaa
adc
daa
xchg
xor
add
or
sub
jne
mov
sub
sbb
or
test
stos
jecxz
xor
mov
sub
rcll
lahf
sbb
out
mov
xlat
dec
lret
aam
push
cmp
sahf
add
out
enter
jne
or
lds
test
clc
je
mov
out
jbe
fnstsw
out
and
inc
push
stos
xchg
mov
push
sbb
xchg
aam
xchg
inc
es
push
test
stc
sti
nop
icebp
popf
andb
dec
dec
sub
push
test
xchg
out
inc
aas
or
ds
stc
outsb
fistpll
ret
cmc
mov
push
inc
mov
lahf
scas
cmp
movsb
insl
inc
test
add
loopne
xchg
xchg
dec
or
dec
pop
mov
test
in
sbb
sbb
push
shrl
lods
lahf
repnz
push
cmp
shr
push
push
mov
mov
sbb
test
push
mov
fldcw
rcrb
into
cli
mov
int3
fistl
test
mov
xor
pop
mov
inc
dec
cmpl
sbb
aam
into
insl
out
inc
jle
stos
mov
mov
jp
dec
cmp
xor
inc
jecxz
xchg
cmp
stos
cmpsl
iret
test
sbb
incl
mov
nop
in
xchg
sub
inc
xchg
je
cmp
fisubs
inc
jnp
or
aas
aam
frstor
or
adc
cmp
scas
ss
int
push
inc
mov
es
addl
iret
sarb
je
insb
jle
jp
pop
mov
cwtl
rorl
mov
es
xorl
ret
pusha
es
mov
out
xor
cmp
jge
popa
sbb
lcall
mov
repnz
pop
gs
scas
mov
pushf
jge
call
sahf
rolb
xchg
jno
js
movsb
in
scas
ja
push
xchg
dec
aaa
rcr
inc
and
aam
lret
fwait
lahf
dec
clc
outsb
orl
out
jo
push
xchg
sti
add
arpl
repz
sbb
dec
push
bound
bound
sub
int3
stos
adc
sub
add
fisubl
cmp
ljmp
ds
add
ljmp
stos
adc
mov
shl
jbe
mov
aad
mov
jae
xchg
fistpll
inc
xchg
orl
xchg
sbb
mov
push
push
es
outsl
mov
nop
icebp
add
mov
stos
and
adc
dec
push
lods
outsb
mov
jge
sbb
add
lds
xchg
fisubl
out
subl
mov
xchg
arpl
jg
clc
test
mov
xchg
imul
push
or
lds
repz
sub
adc
or
mov
test
xor
in
cltd
sti
loop
jmp
aas
adc
xchg
lret
sbb
pop
dec
fcomip
sub
jo
insl
mov
aad
nop
shll
rcl
jl
into
popa
repnz
add
mov
shll
xor
je
adc
cwtl
rclb
popa
jmp
mov
repnz
mov
out
pop
test
xchg
clc
frstor
out
aad
ficompl
add
inc
xor
data16
xchg
clc
xchg
pop
aad
ret
out
cmp
lods
pushf
push
into
movsb
jp
jle
add
add
scas
jle
pop
xor
push
andl
adcl
mov
out
rorb
loope
test
dec
pop
jbe,pn
xchg
and
ret
jne
rorb
adc
pop
repz
gs
movsl
mov
loope
shlb
inc
cltd
or
dec
dec
hlt
lods
mov
std
sub
xor
jecxz
clc
cmpsb
aam
test
sub
xchg
lret
xor
movsb
jnp
das
xchg
arpl
mov
or
fwait
mov
sub
popf
mov
sub
into
push
movsb
xorl
cltd
scas
je
sbb
or
decl
mov
sti
sub
inc
push
andb
loop
scas
out
pop
lahf
and
pop
push
jbe
cmp
push
pop
sub
call
call
cli
mov
xlat
jne
lret
push
movl
ja
xchg
mov
out
cmp
fstpl
ds
arpl
pop
inc
nop
gs
mov
pop
mov
pop
or
sub
cmp
stos
addl
fwait
pusha
outsb
ljmp
mov
lahf
icebp
dec
pop
pop
adc
sub
mov
mov
fistpl
xchg
mov
mov
aam
add
push
scas
lods
xchg
and
mov
mov
push
jb
xor
push
repnz
cld
in
sbb
mov
dec
xor
outsl
lds
mov
in
into
call
das
dec
arpl
movsb
pop
xchg
sar
daa
je
xor
lret
mov
lds
fbld
adc
mov
leave
call
mov
daa
cmp
mov
cs
sahf
lret
orb
jne
ficoms
sbb
movsb
mov
cltd
add
adc
xor
sahf
rcrl
xor
test
scas
and
lods
jecxz
test
aam
pop
std
xlat
push
in
in
stos
repz
mov
xor
pop
pushf
adc
lea
sti
sub
in
bound
push
push
mov
flds
insb
insb
lret
sub
adc
mov
outsb
mov
inc
test
sub
sar
add
sub
mov
mov
insl
mov
cmp
hlt
mov
add
jno
mov
sbb
das
fistl
mov
pop
cmp
push
iret
pop
pop
ljmp
jno
mov
les
aaa
jo
cmp
pusha
pop
add
aaa
inc
fidivrs
gs
add
xchg
pop
push
fstps
mov
in
sbb
js
cld
pop
xorb
sbb
pop
mov
adc
aas
testl
cli
mov
jae
lock
lret
in
pusha
lret
mov
mov
xorl
fnstenv
mov
shll
adc
cwtl
sbb
popf
testl
mov
in
movsl
lock
out
jbe
dec
pop
jmp
mov
hlt
push
push
push
int3
cmp
pop
sbb
popa
push
mov
dec
add
imul
lods
jmp
dec
rcll
push
insl
pop
push
sub
das
shrb
fisubs
push
repz
lods
in
jmp
sbb
cmp
aam
cwtl
nop
jl
loopne
mov
movsb
mov
lcall
loopne
leave
add
sbb
popa
es
sub
add
sub
push
stos
clc
jns
insl
sub
sbb
shr
jae
jmp
adc
and
mov
fnstenv
adc
roll
iret
pop
inc
or
sbb
jl
push
pusha
notb
dec
ljmp
dec
in
iret
stc
outsl
dec
rcrb
aad
daa
push
fisubrs
jnp
sbb
cmp
jae
jns
lock
fidivs
cmp
and
sbb
sbb
outsl
gs
xchg
mov
adc
or
dec
addb
mov
push
scas
test
mov
jae
sbb
jo,pn
mov
push
clc
into
dec
mov
pop
test
movsb
pop
sti
neg
lret
test
daa
arpl
xor
popa
mov
mov
sbb
enter
sti
or
mov
cmpl
mov
scas
pusha
adc
out
push
orb
adc
ret
call
sbb
jmp
rcrl
rclb
sbb
lcall
push
in
stos
jg
out
mov
inc
pop
push
jnp
fwait
sarb
sbb
scas
test
int3
and
mov
fsts
mov
call
inc
xchg
out
jg
pop
mov
lods
jno
ret
jo
in
sbb
cli
cmpsb
add
push
xchg
jo
sub
fs
lcall
pop
data16
inc
negl
idiv
addr16
pop
sub
rcl
fimuls
repz
loope
or
pop
arpl
pop
add
arpl
mov
inc
and
mov
jg
lret
loop
outsl
cs
hlt
loope
aam
and
jb
cmpsb
fimuls
jno
jl
dec
jp
xor
lods
test
sub
fstpl
push
ja
adc
ret
fisubrl
and
insl
test
cltd
sub
mov
iret
jle
push
ljmp
sbb
gs
gs
xor
std
or
xchg
lods
jecxz
cmp
inc
repz
dec
jne
dec
jg
cmc
pushf
mov
lods
fnstsw
mov
gs
ret
loopne
test
scas
xor
add
lea
rorl
cs
jmp
cmpsb
xchg
cmpsb
out
sub
mov
dec
push
push
loopne
imul
dec
pop
lahf
push
cs
js
test
icebp
sbb
xorl
nop
cmp
inc
repz
insl
dec
cmp
shrb
ret
jnp
adc
mov
sbb
pop
aas
jmp
gs
mov
mov
mov
push
xor
mov
inc
enter
push
xor
fistpl
lods
leave
ja
out
add
fs
sub
sub
lds
mov
lret
js
nop
aas
sbb
cmp
jnp
insl
pop
in
mov
imul
aam
loop
sub
push
jp
mov
xor
inc
inc
jno,pn
fdivs
out
inc
inc
shll
repnz
cld
pop
pop
push
add
punpcklbw
lret
std
cmpl
pop
scas
sahf
pop
adc
and
push
shlb
aas
push
pcmpgtd
clc
pop
notl
xor
adc
push
pop
lods
jo
lods
mov
pop
cmp
dec
in
loope
clc
lea
jae
mov
cmp
enter
mov
cld
imul
mov
out
add
or
and
pop
data16
test
imul
push
call
inc
inc
clc
sbb
daa
pop
test
insb
test
xchg
ror
mov
loop
cmp
mov
sti
movsl
pop
flds
arpl
ljmp
adc
pop
rcl
cmc
es
and
out
ljmp
clc
imul
xor
test
pop
jno
cld
outsb
aam
cmp
stos
xchg
fcomp
and
out
cmpl
incb
mov
jl
andb
jecxz
je
enter
scas
xlat
dec
xchg
mov
xor
sarb
fstpl
push
add
std
and
test
cmp
xor
sub
or
mov
pop
test
fimull
inc
cmpsb
cmc
mov
test
cmp
mov
into
cmp
push
fbstp
lret
test
jnp
mov
sub
pop
push
xor
adc
xor
sub
inc
mov
xor
cmpsb
sahf
flds
push
xchg
cmp
out
inc
or
rcrl
xor
push
sbb
add
mov
lcall
scas
enter
adc
in
enter
test
test
dec
xor
and
mov
push
aam
dec
mov
inc
sbb
and
xor
dec
inc
hlt
test
dec
xchg
int3
sti
inc
loopne
fmull
nop
fwait
or
xor
aam
iret
insl
rclb
pop
inc
or
xchg
add
cmp
sahf
or
lret
pop
popl
addr16
aam
adc
dec
test
jb
lret
sbb
into
jb
or
inc
icebp
cmpsb
lock
repz
rorb
xchg
into
int
xchg
and
dec
pop
movsb
cmp
cmpsl
sub
fs
ds
gs
pushf
scas
lcall
or
imul
mov
pop
repnz
inc
push
fwait
rorb
fiaddl
jmp
adc
je
sbb
mov
dec
fisttpl
adc
xor
adc
mov
add
mov
mov
fidivs
cmp
push
and
xor
cltd
pop
xchg
icebp
mov
pop
rcrl
sub
sub
push
in
cwtl
cmc
mov
cwtl
lods
push
mov
pand
xor
add
pop
push
push
ja
int
jecxz
push
or
mov
aas
jmp
xor
mov
mov
push
sub
call
cmp
imul
fistpll
xchg
cmp
cld
xchg
add
outsb
aad
loope
ret
divl
and
or
fs
lock
fmuls
add
test
xor
out
adc
dec
imulb
call
ret
das
in
nop
stc
dec
and
scas
mov
xchg
jae
sti
push
fmuls
adc
push
je
jl
daa
sbb
pop
ret
mov
xor
dec
add
lahf
and
pop
pop
int
lea
aaa
pop
adc
and
inc
enter
mov
ficomps
stos
add
enter
mov
adc
mov
xchg
mov
xor
cmpb
ljmp
xor
xchg
push
jbe
and
add
mov
lcall
out
mov
repz
inc
inc
add
fisubl
ret
sbb
in
nop
pop
sub
pop
into
sbb
dec
in
xchg
mov
inc
inc
mov
sub
inc
hlt
fwait
inc
inc
push
ja
cmp
fidivrs
int
mov
lds
mov
cmp
dec
in
lods
adc
and
mov
cmpsb
mov
mov
roll
aas
dec
cld
sbb
pop
fsubrs
inc
outsl
adcl
jbe
std
out
ja
pop
xchg
ds
dec
jno
mov
mov
sub
push
mov
mov
xchg
pop
mov
jmp
jno,pt
xchg
xor
les
cmp
fistl
repnz
mov
mov
jp
sbb
and
mov
mull
cmp
out
xor
std
sbb
xchg
ffreep
lret
add
xchg
xchg
dec
pop
sbb
decl
mov
enter
xor
xlat
shl
inc
add
mov
rcll
inc
icebp
cmpl
stc
jbe
xchg
sarl
js
nop
nop
pop
mov
xor
sub
mov
pop
mov
and
stc
xlat
mov
xchg
ss
dec
out
add
ret
or
add
ljmp
inc
fwait
mov
and
adc
push
roll
inc
pop
inc
sub
inc
inc
jle
xchg
push
mov
xor
push
xor
and
mov
mov
mov
or
add
rorb
sub
insl
xchg
adc
xchg
mov
jl
xor
jo
enter
lahf
xchg
repnz
push
jne
scas
mov
inc
notl
stos
hlt
xchg
lcall
into
push
xchg
push
pop
lods
cltd
dec
xchg
adc
sti
fwait
xor
lods
xlat
add
fcoml
ss
adc
xlat
test
push
in
jo
in
outsl
or
daa
ss
in
push
xchg
in
jne
scas
xlat
inc
cmp
add
scas
fsubs
xchg
rol
push
cmp
add
sub
notl
xlat
push
movsb
pop
aaa
sbb
mov
repz
xchg
mov
add
add
mov
out
xor
cwtl
jmp
jo
push
dec
xor
xor
dec
jb
mov
or
inc
ljmp
int
in
sbb
or
ss
js
rcrl
jne
mov
cmovns
and
or
mov
mov
or
jmp
push
push
movsb
cmp
inc
dec
xchg
or
stc
bound
shl
stos
mov
loope
int
add
jge
outsb
push
mov
mov
rcrl
cmpsl
rcll
ds
jg
mov
pop
stos
sub
hlt
data16
lea
push
jns
aad
shlb
addr16
cmp
xchg
jp
loopne
xor
lret
xchg
mov
mov
dec
aas
hlt
imul
xchg
dec
aas
cmp
shlb
addb
xchg
ret
pop
stos
leave
and
sbb
xor
fwait
int
imul
and
mov
jae
sbb
ss
cmp
mov
xchg
and
cmp
loope
divb
push
pause
fisttpll
xor
movsl
push
mov
cwtl
sti
sti
mov
test
stos
cmp
dec
enter
jmp
aad
jmp
add
cmp
jge
shl
in
xchg
adc
inc
stos
add
popa
mov
push
sti
inc
sub
xchg
testb
lret
rorb
mov
sbb
xchg
in
or
popa
shrl
xchg
cmp
insb
and
in
call
inc
mov
mov
jp
negl
pop
loopne
dec
cmc
jle
ror
cmpsb
pop
xor
cld
ss
cmp
push
repz
fwait
sbb
mov
jns
mov
rorb
aas
test
hlt
jle
pop
xor
in
scas
aaa
gs
sbb
out
push
hlt
jbe
add
xchg
mov
jne
adc
idivb
or
and
negl
int3
sahf
jns
icebp
lds
ret
gs
or
ja
push
add
and
jae
fildll
add
cmp
sbb
jnp
cmp
mov
cmpsb
sbb
pusha
xor
lret
xsha1
cmpsb
lret
shrd
das
push
jg
fwait
sub
jmp
add
arpl
inc
and
arpl
ret
mov
or
call
adc
loope
ror
or
fwait
aas
xchg
punpcklbw
insl
mov
mov
add
adc
or
and
insb
cmp
mov
icebp
popf
inc
in
repnz
and
sbb
mov
hlt
outsb
addr16
push
and
repnz
fadds
sub
mov
xor
addb
sbb
lcall
es
sti
hlt
repnz
addl
lret
es
cmp
repnz
and
mov
aas
imul
repz
fsubs
pop
xor
nop
lret
shl
jecxz
push
addr16
fwait
rorb
mov
cmpsb
lock
push
and
daa
cmp
push
mov
jp
ret
in
es
pop
or
add
inc
ret
cli
or
dec
push
in
pushf
pop
add
pop
add
lea
js
xlat
xchg
xchg
fs
in
push
call
rcl
push
inc
push
std
cs
fisubrl
inc
insl
xchg
cmpsb
shrl
test
adc
inc
sub
dec
cwtl
lock
sub
pop
stc
sti
xor
cmp
test
and
xchg
movsl
lcall
fdivr
stc
push
pop
jle
sub
jle
and
mov
leave
ret
lret
leave
fidivl
cmp
ljmp
inc
xor
lods
jge
pop
adc
or
pop
fucomp
js
push
mov
es
or
mov
stc
sub
jge
xchg
sub
xlat
mov
push
scas
scas
aas
lahf
aam
sbbb
inc
bound
stos
cmpsb
cmp
xor
xchg
push
fs
outsb
and
jo
inc
andl
into
fs
xor
push
cmp
into
push
sub
aas
sbb
js
add
fstps
mov
popa
lods
mov
lret
xor
xchg
mov
sahf
rclb
mov
pop
xor
lds
icebp
xlat
cmpsb
mov
ljmp
sbb
cmp
fldcw
stc
movsb
jg
mov
rcrl
and
fcmovu
fistps
test
and
rol
adc
lret
les
cmp
clc
data16
inc
cmp
cwtl
enter
cmc
jae
mov
jge
xor
jp
mov
and
bound
stos
inc
in
vcvtsi2ssl
mov
mov
sahf
mov
in
adc
pop
inc
pop
mov
jnp
mov
xchg
jmp
cmp
cmp
orl
andl
ficompl
xor
insl
sbb
or
sti
xorl
mov
pop
mov
shlb
dec
or
lods
adc
cmp
push
enter
mov
dec
mov
xchg
add
sbb
jp
cs
lock
ss
jmp
mov
jbe
aaa
fdivrl
fcoml
xor
push
mov
addr16
mov
dec
iret
out
xlat
push
lock
fistpl
jle
sbb
inc
jmp
dec
ret
lret
push
push
lds
aas
or
sbb
cld
mov
adc
scas
stc
arpl
sahf
stos
das
and
scas
sub
lret
cltd
mov
cmc
add
hlt
xchg
mov
mov
jle
fcoml
data16
dec
addr16
aad
jg
sbb
cmpl
pusha
add
mov
push
adc
lret
adc
lock
mov
outsl
fistpll
pop
test
mov
mov
movsl
daa
sub
repnz
aaa
or
mov
push
jb
inc
cwtl
mov
adc
jge
pop
sub
xchg
push
xor
mov
xchg
xor
or
lahf
dec
mov
shl
cmpsl
aad
outsb
push
mov
cwtl
lods
mov
dec
dec
lods
inc
ret
movsb
fstp
ljmp
xor
or
lods
aas
fwait
adc
add
das
repz
setle
imul
jmp
sahf
stos
or
incb
mov
rcrl
in
add
mov
int
or
add
push
xchg
lahf
repz
push
dec
jecxz
cmc
scas
pop
mov
imul
and
sub
mov
sarl
fmuls
mov
inc
std
shlb
jecxz
idivl
ss
int3
es
ja
int3
sub
push
jmp
in
rclb
outsb
add
or
cmp
inc
int
push
and
lret
fists
and
aam
pop
cmp
mov
pusha
repnz
loopne
dec
hlt
cmp
xor
dec
xchg
inc
mov
lret
rcrb
inc
mov
adc
add
rcll
or
mov
add
xorl
in
cmp
and
inc
lds
popf
and
cmpsb
jne
xadd
adc
lds
les
inc
dec
aad
sub
inc
cmp
mov
sbb
mov
negb
add
jge
ja
loopne
movsb
dec
mov
mov
fmulp
lds
out
outsl
cmp
fldenv
push
adc
in
dec
mov
mov
jmp
fwait
xor
inc
psrad
daa
sti
xchg
fs
sub
in
xor
xchg
mov
mov
add
or
mov
mov
dec
fldcw
addr16
push
pop
or
pop
push
mov
daa
xchg
cmc
movsl
loopne
cmc
xor
cld
mov
sub
mov
jo
add
lret
cmp
xchg
leave
jmp
pop
pop
faddp
push
mov
push
pop
and
mov
mov
mov
inc
dec
out
lock
mov
mov
pop
jecxz
push
les
cmp
arpl
pop
jae
and
popf
fs
xor
and
push
int
mov
dec
mov
stc
rclb
or
push
sub
in
sub
xlat
push
cmp
mov
push
roll
neg
shrl
xor
or
bound
adc
mov
sub
in
push
pop
aam
add
and
mov
imul
fs
rolb
jae
aas
or
xor
xorl
nop
xor
addr16
jecxz
xchg
mov
cmpb
stos
insl
outsb
add
sbb
dec
pop
xchg
pop
sub
mov
pop
loopne
adcb
lock
rolb
iret
xor
ds
fildll
and
cwtl
fwait
cltd
and
mov
jns
sbb
shl
cmp
jmp
outsl
int
rol
mov
scas
mov
lods
fdivrs
or
xchg
sub
int3
aaa
int
rcrb
imul
push
xlat
stos
cmp
loopne
sbb
mov
jmp
dec
cmp
cmp
sub
jae
cmp
cld
cmc
mov
stos
loop
sbb
push
and
pop
call
leave
or
into
jns
arpl
and
sub
inc
into
out
cld
pop
inc
cmp
fwait
test
pusha
jle
or
scas
pop
in
and
in
push
mov
sbbl
sub
sub
sub
iret
lahf
insl
and
dec
cmpsb
repz
or
jb
jno
movsb
adc
stos
mov
pop
arpl
mov
jbe
scas
inc
mov
or
mov
bound
outsl
xor
adc
pop
xchg
dec
pushf
out
int
push
subl
es
mov
cwtl
cld
sub
sbb
mov
lock
lahf
dec
jecxz
pop
lcall
dec
mov
push
inc
fadd
nop
pop
or
out
cmp
sbb
mov
mov
fdivrl
push
inc
shrl
or
ret
frstor
out
popf
aas
sbb
popf
pop
xchg
add
inc
add
stos
cmp
or
cmp
icebp
imul
push
xchg
jb
cli
adc
lods
mov
aad
jb
xor
sbb
sub
cmpsl
xchg
push
movsl
sub
xchg
mov
push
cmc
filds
bound
scas
xchg
pop
subl
xlat
arpl
xchg
jae
scas
sarb
ss
ffreep
ret
adc
in
pop
push
iret
test
push
sub
icebp
inc
pop
stos
sub
out
sbb
push
mov
lret
and
data16
stc
cmp
dec
pop
jle
cmp
push
call
hlt
in
xor
imul
xchg
in
mov
gs
leave
cmp
in
clc
inc
sarb
stos
xchg
notl
lods
inc
or
cli
sub
mov
test
mov
in
adcb
adc
insl
jo
mov
jno
xchg
in
lods
mov
cmpsl
mov
les
sub
aam
xlat
popa
in
cmp
dec
mov
sahf
idivl
faddl
sub
repnz
and
push
pop
cmp
sbb
outsb
daa
push
xor
mov
ficomps
sbb
jmp
in
cld
daa
loope
push
sub
mov
ja
mov
mov
and
push
and
adc
xchg
and
pop
pop
add
push
jae
out
and
dec
mulb
ds
pop
mov
cmp
lcall
out
scas
jnp
decb
hlt
jmp
xchg
shrd
or
dec
or
add
xchg
lcall
cmpsl
or
dec
push
push
mov
stos
loope
imul
aas
cmpl
mov
push
and
jns
pop
and
fadd
inc
aam
test
dec
pusha
insl
xchg
shl
movsl
pop
cwtl
loop
xor
adc
lods
cmp
dec
jo
push
outsb
cltd
mov
aam
cmpsl
mov
movntps
aam
xchg
dec
jnp
ret
mov
cmpsl
xchg
addr16
movsb
bound
or
push
dec
add
pop
cwtl
ds
cmc
inc
outsl
adc
ret
add
popa
scas
sub
push
jmp
jecxz
mov
jle
leave
xchg
fbld
pusha
sub
xchg
push
aaa
mov
jmp
outsl
mov
fwait
decl
mov
sub
and
test
jae
daa
push
mov
test
add
ficomps
pop
fbld
cmp
pop
xlat
pop
sub
cmp
nop
fildl
out
jno
les
test
pop
xchg
mov
clc
sbbb
add
daa
addl
push
mov
cs
mov
mov
push
out
dec
xchg
in
adc
jb
cmpsb
jl
jmp
sub
dec
sbb
bound
loop
xchg
rcl
sbb
jmp
jmp
mov
fildll
popa
ret
cli
cld
dec
dec
jne
pop
mov
jecxz
adc
out
insl
push
mov
jb
jnp
push
jo
icebp
push
fwait
jg
mov
mov
pcmpeqd
push
mov
adcb
pop
pop
paddsb
push
das
and
pop
xchg
fs
jne
daa
int
dec
lea
dec
hlt
shll
sub
push
cwtl
pop
pop
mov
pop
lret
outsl
imul
inc
push
push
dec
movsl
pop
orl
clc
add
and
or
movsl
push
and
out
xor
movsb
les
mov
and
rorl
sub
mov
pop
enter
int
imul
push
cmp
int
cltd
lods
sbb
negl
in
xor
sbb
fwait
xchg
mov
adc
movsl
ljmp
bound
xor
push
mov
leave
cmpsl
into
cmp
sbb
shll
repz
test
jo
andb
sbb
xchg
iret
aas
cmp
inc
mov
xchg
dec
and
outsb
mov
rolb
or
cmp
lret
xor
mov
mov
aaa
imull
das
inc
lock
ret
xor
mov
sbb
xchg
cld
mov
xlat
mov
cmp
push
and
loopne,pn
int
test
mov
mov
add
jge
mov
shl
test
add
mov
adc
test
movzbl
scas
cld
dec
inc
lcall
cmp
pop
cmc
repz
dec
mov
pusha
mov
xor
cs
lret
or
shl
mov
das
sub
insb
adc
ret
orl
lcall
inc
sahf
adc
mov
in
sbb
scas
pop
push
popf
ljmp
arpl
enter
call
xchg
out
rcll
andl
add
ret
cmp
pop
out
mov
inc
cmpsl
icebp
sbb
xlat
or
and
cltd
pop
push
int3
pop
mov
stos
shlb
ret
mov
mov
pop
jge
test
cmc
inc
test
outsl
push
std
decb
mov
pop
inc
movsl
add
test
lcall
pop
sbb
xchg
insb
pop
roll
xchg
pushf
dec
inc
div
add
es
add
out
sbb
ss
cmp
insb
sub
add
rcrl
push
add
xchg
xchg
ret
sbb
adc
add
sbb
sahf
jp
xor
insl
fistps
jo
or
fsubp
arpl
adc
mov
fistl
xor
xlat
inc
in
in
add
fcmove
xchg
cmp
cmp
mov
sub
push
cwtl
pop
push
pushl
cmp
ret
mov
mov
add
cli
mov
pop
cmpsb
jno
mov
push
inc
lea
inc
out
lea
sbb
insl
dec
mov
shll
call
xor
cmp
sub
and
lock
add
inc
mov
cmp
fstpt
cs
daa
jbe
jle
fs
sbb
imul
sub
sub
stos
xor
lahf
sub
mov
inc
test
test
sbb
pop
stc
mov
xchg
pop
sahf
cmp
mov
sbbl
jle
cmp
pop
inc
xchg
pop
xor
xor
sbb
into
pop
or
jecxz
sub
int
loop
dec
and
cmp
or
adc
inc
mov
out
and
iret
iret
xchg
mov
jmp
push
rcl
sbb
clc
sbb
jne
push
nop
or
outsl
mov
sub
sbb
push
iret
iret
xlat
ljmp
or
xchg
dec
adc
jmp
or
xor
je
inc
fwait
push
lea
hlt
in
xchg
mov
push
nop
das
leave
shlb
je
cmpb
mov
sti
aas
inc
push
mov
repnz
ds
outsl
xchg
iret
pop
mov
pop
mov
jo
jl
jp
push
roll
mov
aaa
jne
lahf
lcall
sbb
in
and
scas
xchg
imul
addl
cmp
outsb
stos
xor
jo
loope
dec
cltd
fmull
adc
leave
dec
add
ret
xor
xchg
jnp
adc
pushf
cmp
out
out
test
mov
std
inc
loope
bound
sarb
sub
icebp
pop
add
push
push
dec
push
ja
adc
cmp
outsl
xor
loop
gs
add
inc
es
xchg
in
mov
mov
push
pop
dec
fdivr
test
push
clc
and
adc
sbb
pop
or
into
xchg
dec
dec
pop
sub
scas
jg
add
lcall
iret
adc
and
push
jns
xchg
cmpb
test
push
pop
lods
lock
hlt
mov
std
push
jl
lcall
outsl
and
iret
add
mov
arpl
imul
or
mov
mov
in
push
mov
arpl
stos
fbstp
lcall
mov
lods
pop
aad
jge
pop
push
mov
xchg
jb
arpl
jl
jle
add
xor
mov
pop
or
cmpsb
fisttps
push
push
and
jg
push
sbb
mov
lds
mov
lds
test
out
movsl
or
xor
cmp
add
and
iret
dec
ss
fsubrs
hlt
cmp
jecxz
pop
dec
je
out
ljmp
mov
adc
repnz
adc
setns
push
ss
jno
mov
int
cli
iret
sbb
std
or
fdivs
loopne
sar
mov
mov
and
jb
out
pop
test
sbb
call
push
loopne
lea
cwtl
js
cmpsl
inc
mov
sub
cmp
int
outsb
push
andb
pusha
fnstenv
aam
jne
testb
andl
inc
sbb
mov
popf
scas
int
inc
mov
sahf
jns
and
inc
mov
cmp
daa
movsl
in
call
pop
rcl
popf
addr16
xor
xchg
xchg
sub
int3
mov
imul
sbb
mov
std
cmp
ja
cmp
cmp
clc
jl
adc
dec
mov
lahf
inc
dec
cli
lahf
mov
jbe
xchg
mov
das
mov
ss
cmpsl
inc
xor
shlb
and
not
fdivrs
mov
gs
push
dec
ljmp
imul
aaa
dec
sub
jl
jmp
or
stc
mov
mov
roll
insl
mov
imul
pusha
push
movntps
sbb
jecxz
push
arpl
mov
xorb
jae
enter
add
test
cmp
dec
pextrw
adc
repz
outsl
mov
ret
test
push
cmc
dec
jmp
pushf
fimuls
jle
or
push
ret
pop
dec
add
enter
rolb
cmpsl
cs
push
andl
push
mov
sti
stc
inc
test
scas
sbb
in
inc
lcall
dec
or
icebp
adc
add
add
mov
mov
push
or
mov
xor
addr16
mov
lahf
cmpsb
sahf
sbb
loop
and
ds
dec
add
pop
add
add
lds
inc
movsl
jnp
xlat
xor
out
push
shl
jmp
iret
lods
fildl
jg
jmp
fldcw
iret
pop
std
inc
jb
fisubrs
lret
and
pop
lods
pop
jbe
decl
xchg
repnz
fcoml
scas
inc
lds
xor
jns
push
push
adc
cmc
repz
insl
jmp
fldenv
enter
fidivs
xor
xchg
fwait
or
out
push
mov
xchg
cmp
les
iret
mov
jno
scas
ret
outsl
je
out
dec
mov
push
mov
addl
movsl
cli
jg
out
sarl
mov
jno
imul
xor
inc
mov
cltd
mov
push
adc
dec
inc
jb
push
cmp
dec
int3
mov
movsb
mov
nop
out
mov
mov
add
push
mov
adc
outsl
repnz
xorb
mov
outsl
xchg
rclb
push
cmp
sub
bound
ds
sub
fidivrs
jle
sahf
loopne
adc
dec
xchg
int3
lret
inc
mov
test
xchg
adc
cmp
stos
or
call
xchg
dec
loope
movsl
cld
mov
adc
test
add
fdivrl
fisubrl
fs
and
mov
cmp
jg
je
out
xor
cmp
and
add
lcall
mov
push
in
sub
loop
ret
sub
iret
push
leave
push
mov
adc
pusha
repnz
xor
sbb
or
cmp
xor
xlat
pop
add
push
mov
xchg
fdivs
cmpb
ret
or
add
push
add
int
call
or
imul
dec
pop
push
and
push
scas
dec
pop
cwtl
dec
pop
or
fiadds
adc
lret
push
int
int3
mov
cmpl
sub
scas
xor
mov
test
pop
or
cmp
insb
jmp
fldln2
pusha
mov
sbb
fisttps
mov
fs
mov
mov
pop
je
imul
cmp
pop
mov
xchg
inc
ljmp
xor
lds
mov
shll
lret
sub
les
lcall
aam
xchg
arpl
mov
mov
fwait
sub
mov
stc
pop
movsl
mov
gs
in
push
ret
mov
pop
fisttps
popf
fldenv
dec
arpl
cwtl
add
sahf
add
inc
add
in
cli
push
out
shl
xor
ljmp
jge
lcall
rcll
cmpsb
mov
add
lods
xchg
fbstp
mov
pop
shrb
add
push
xor
sbb
call
sbb
jmp
fprem
js
testb
call
sahf
popa
cmp
cmp
outsl
lcall
pushf
inc
repz
pop
and
ss
cmp
lahf
inc
orl
sub
shl
add
js
and
in
push
jmp
xor
ret
or
sub
test
pop
notl
es
addr16
out
xor
in
negb
bound
and
cmp
loop
push
ss
jle
leave
inc
fistpll
out
xchg
pop
pop
jl
cmpb
in
and
mov
add
decl
mov
pop
sahf
sbb
sbb
in
in
repz
movl
inc
pop
or
mov
mov
mov
leave
lcall
jl
cld
mov
jne
nop
or
jmp
cltd
mov
inc
lret
or
cmp
jle
xchg
cld
je
addl
lods
enter
adc
adc
xor
daa
mov
pop
sbb
sub
mov
jmp
xchg
incb
hlt
insl
pop
in
mov
pop
mov
popf
loope
out
sbb
cmc
loop
cmp
xchg
dec
jbe
xchg
lea
sti
push
mov
movaps
and
enter
enter
cwtl
rorb
enter
cwtl
cmp
loopne
pop
jno
mov
lret
repz
std
xlat
adc
int
adcl
push
mov
mov
repnz
lods
sbb
out
sbb
lock
cwtl
mov
push
scas
ret
mov
pop
lds
jl
pusha
xor
mov
bnd
sbb
test
shll
enter
pop
add
sub
inc
dec
in
inc
sub
shrl
jbe
sub
movb
ret
imul
lahf
xchg
add
jnp
pop
sbbl
pop
mov
inc
adc
lds
into
pushf
cmp
enter
push
pop
mov
pop
inc
xor
pop
and
sub
mov
data16
test
mov
push
and
lahf
arpl
mov
loopne
xorl
jns
jle
arpl
cmp
fs
push
jmp
sbb
jmp
pop
imul
dec
fldz
jnp
in
shlb
inc
cmp
nop
jecxz
and
pop
add
inc
sub
sbb
shll
push
push
adc
test
xchg
adc
cld
add
leave
xor
adc
test
lods
push
popa
or
mov
js
fdivrp
mov
push
mov
cwtl
sbb
jmp
pop
clc
fsubrl
mov
fucomp
test
cwtl
inc
push
mov
jo
js
lods
mov
aas
pop
fwait
or
add
mov
or
outsb
aaa
rcrb
xor
pop
shlb
xchg
add
outsb
bound
xchg
mov
xor
cwtl
fucomip
inc
cmpsl
inc
ljmp
push
jmp
jbe
aaa
mov
mov
popf
call
fwait
std
sbb
shl
xlat
pop
mov
mov
repz
bound
shr
jnp
sbb
inc
les
les
mov
add
sbb
sub
out
adc
mov
popf
fadds
mov
loop
fwait
mov
into
mov
mov
iret
aad
lret
test
mov
pop
hlt
sti
inc
shld
aam
mov
mov
pop
cmp
iret
les
xor
fdivrs
jge
sub
sub
jne
gs
jp
bound
icebp
out
sti
dec
icebp
es
push
pushf
xchg
pop
aas
movntps
out
mov
inc
ljmp
jne
clc
push
jae
in
push
cmpsb
mov
je
pop
nop
or
push
xor
xchg
and
aam
test
lods
pop
aam
and
add
aad
push
pop
cmp
add
jmp
jp
mov
or
xchg
fmull
ds
add
scas
fcoms
inc
pusha
xchg
mov
jns
out
ljmp
mov
ds
or
gs
enter
xchg
cwtl
xor
aaa
jo
mov
mov
popf
ret
sbb
clc
pusha
mov
xchg
xchg
or
gs
data16
push
stos
lock
je
enter
daa
inc
lcall
xchg
cmp
pop
repnz
imul
and
std
adc
in
jbe
pusha
or
mov
arpl
add
dec
aaa
lret
out
stos
mov
or
faddl
xchg
push
test
mov
adc
call
sub
pushf
cmp
jo,pt
push
sbb
data16
in
movsl
outsb
and
sub
call
push
push
outsb
jecxz
lcall
stos
mov
jle
rcl
into
sub
aas
lock
fs
xor
incl
push
ds
push
dec
or
dec
xor
dec
clc
push
xor
sti
xchg
scas
cld
dec
sub
jmp
xchg
test
lds
inc
xor
dec
stc
mov
jge
aam
sbb
jl
icebp
mov
sub
or
in
int
inc
sbb
pop
dec
add
outsl
addr16
sub
xor
ja
mov
stc
imul
in
sbb
jl
cli
add
jo
or
inc
inc
adc
out
push
push
daa
pop
pop
insl
ret
je
push
mov
xor
orl
push
jnp
negl
addr16
fmul
ja
and
rclb
nop
movsl
popa
fyl2x
mov
dec
push
mov
pushf
icebp
xchg
or
loopne
fs
in
cmp
mov
inc
inc
in
xchg
mov
adc
nop
insb
inc
mov
push
inc
adc
inc
xor
aaa
nop
movsl
and
xchg
pop
add
ja
in
ret
xchg
loop
mov
pop
jb
xchg
insl
dec
scas
mov
jp
ret
out
cmp
orl
std
and
and
push
dec
in
inc
les
cmp
ds
dec
xchg
inc
int3
cwtl
push
cli
and
mov
pop
sbb
jnp
in
and
xchg
cwtl
shlb
xchg
mov
rorb
and
dec
pop
push
in
xchg
negl
arpl
push
outsl
sbb
inc
mov
bound
ds
sub
mov
xor
in
lret
pop
or
or
mov
int3
and
pusha
push
dec
push
ss
out
dec
rorb
popf
xchg
sub
nop
icebp
imul
push
or
into
fbld
lods
fwait
mov
mov
fcoms
mov
out
cwtl
cmpsb
mov
sub
jo
insb
shlb
pop
movsb
mov
inc
dec
cmpsb
push
cmp
cli
cmpsl
push
sbb
cmp
outsb
pushf
xchg
inc
scas
outsb
cmp
andb
fxam
arpl
mov
pop
idivl
popa
pusha
add
pusha
repnz
es
test
jns
mov
jecxz
add
inc
add
jmp
stos
dec
cmp
shrb
mov
mov
push
insb
sub
cmpsl
imul
push
dec
rclb
mov
pop
cmp
in
ja
dec
or
les
push
lcall
pusha
out
inc
cmpb
lea
sbb
sti
push
pop
mov
dec
and
or
scas
mov
mov
mov
cmp
jne
mov
jl
pop
rcr
add
addl
in
ljmp
in
filds
insb
pop
lret
mov
sbb
ljmp
ds
imulb
dec
add
push
xor
ja
fcmovnb
aad
aad
fsts
mov
push
push
inc
fwait
mov
xor
sbb
dec
ds
scas
sbb
mov
test
ljmp
mov
mov
int3
inc
icebp
mov
inc
push
in
cmc
jl
push
mov
mov
sbb
xchg
aas
sub
push
popa
pop
test
cmp
sbb
pop
or
inc
xor
gs
mov
hlt
add
mov
stc
cwtl
aas
xchg
lcall
dec
bound
pusha
stos
jg
fistl
jo
fnstcw
mov
sub
dec
pushf
mov
stos
xchg
dec
jb
jo
mov
cmpsl
or
xor
sbb
das
jp
inc
push
lret
ja
push
xor
pop
dec
inc
and
int
add
mov
and
pop
bound
mov
mov
stc
out
int3
adc
bound
mov
pop
iret
cs
jae
add
negl
gs
out
pop
jl
dec
cwtl
xchg
repnz
cmpsl
jnp
jmp
or
jae
xchg
jae
cmovl
mov
outsl
pop
jnp
pop
jl
mov
out
cmpsl
in
insb
cli
cli
push
int
dec
dec
push
aam
and
xchg
in
or
out
jo
jno
cli
push
xrelease
insl
js
fldenv
sarl
sub
pop
out
jecxz
int3
sub
xlat
fcomps
adc
sarb
cmp
movsl
aad
in
jnp
push
popf
sub
in
rcl
mov
incb
mov
mov
aas
mov
or
add
ljmp
xchg
add
inc
lds
dec
or
jnp
mov
std
int
push
xchg
pop
pop
sahf
xchg
sbb
insl
xchg
and
inc
inc
dec
cmp
sti
call
sbb
lds
jmp
pusha
sbb
int3
mov
inc
or
mov
call
mov
rcrb
jle
imul
add
jmp
push
loope
pop
dec
adc
sub
xlat
mov
subl
nop
sub
push
lea
ljmp
js
and
sub
fwait
bound
jmp
mov
clc
sub
lods
jbe
imul
push
adc
cs
mov
das
mov
ror
aas
jecxz
push
lret
notb
arpl
xchg
xor
fwait
sbb
jb
iret
add
pshufw
xchg
mov
sarl
pop
xchg
nop
orl
and
mov
mov
jg
mov
cs
jns
and
aad
mov
notb
insl
subl
mov
sub
lret
inc
js
enter
insl
cltd
add
popf
fs
cmpsb
clc
jo
xchg
enter
xchg
sub
out
cltd
imul
mov
scas
inc
enter
repz
lods
das
jne
xor
add
mov
insl
inc
insl
fnstsw
add
inc
dec
daa
xor
xor
gs
pop
xchg
iret
mov
out
lds
out
popa
mov
daa
hlt
push
repnz
inc
outsl
fstpl
jp
outsb
inc
adc
add
jb
mov
outsl
stc
cmc
mov
out
mov
sti
arpl
outsl
sub
fcmovbe
mov
cmc
ss
xor
es
fidivrs
clc
jbe
dec
data16
sbb
loop
sub
cmp
popa
add
add
xsha1
cmpsb
dec
test
inc
sbb
sub
mov
adc
xor
cmp
adc
fwait
js
or
jo
xchg
mov
fcomip
sbb
daa
mov
push
addr16
mov
add
sbbl
jl
mov
lods
sarl
test
fnstsw
jl
int
fs
mov
lea
push
or
mov
pop
and
adcl
xchg
roll
mov
sub
popf
pop
mov
mov
in
outsl
or
or
rcl
xchg
std
icebp
por
es
hlt
lods
add
lock
add
cmp
cmc
int
mov
std
mov
jle
sbb
xchg
test
shlb
dec
xchg
mov
cmp
cwtl
in
xchg
lds
aad
fsubrs
add
shll
dec
dec
add
vorpd
into
adc
adc
scas
pop
jo
sar
jne
cmp
pusha
imul
cli
ja
aaa
into
pop
sbb
test
cld
or
push
idiv
xlat
dec
ficoms
andb
cmpsl
sarl
xchg
cmp
push
add
or
jnp
jge
andl
data16
clc
push
mov
and
aad
xor
icebp
fmuls
sbb
call
sub
ss
in
popf
aas
push
dec
mov
xchg
mov
or
or
mov
mov
mov
sub
daa
pop
mov
push
pop
lahf
pop
notb
dec
dec
shll
cld
push
add
pop
cltd
mov
scas
xlat
filds
pop
lock
add
pushf
cwtl
pusha
sub
sub
scas
popf
enter
sbb
cmp
and
push
aaa
or
push
cmpsb
mov
fsubp
sub
mov
fdivs
loope
icebp
mov
addr16
and
add
push
fidivrs
clc
mov
pop
jle
inc
jle
and
lea
add
mov
lods
ljmp
xor
mov
std
sub
pop
xchg
loop
mov
sbb
sub
mov
adc
sar
ret
sbb
mov
dec
dec
push
rcrb
xor
ss
adc
inc
or
or
xor
jb
out
andb
dec
jp
mov
push
jb
mov
mov
das
add
pushf
and
daa
imul
dec
mov
mov
in
mov
out
aam
pop
sbb
insb
sub
enter
and
jge
into
mov
mov
dec
shrl
out
xor
push
ret
mov
dec
imul
ljmp
mov
mov
in
test
xchg
ret
push
pop
sbb
cli
add
nop
pop
jns
scas
lods
imul
cli
xlat
push
xchg
mov
repnz
in
add
test
cltd
loopne
pushl
mov
fnstcw
pop
movsl
mov
aam
lcall
ret
pop
fimull
and
push
shll
mov
sahf
mov
mov
inc
cmpb
mov
add
sub
inc
lods
mov
stos
rcrb
adc
jmp
cld
clc
mov
fldcw
pop
aas
pmulhuw
scas
dec
cltd
mov
mov
cmp
insb
mov
xchg
add
dec
in
ficoms
mov
or
sbb
bound
jg
pop
add
cmc
insb
adc
icebp
xor
jle
scas
lods
or
cwtl
popf
mov
in
rolb
popl
dec
dec
out
popa
aaa
shlb
out
lods
rcrl
or
xchg
add
dec
cmpsb
stos
jecxz
dec
pop
shlb
cmp
sbb
inc
insb
mov
xchg
jnp
sbb
mov
xchg
mov
sbb
cmc
fisttps
repz
loope
xchg
cmp
adc
push
xchg
pop
scas
cltd
and
pop
cmp
leave
in
xor
sbb
cwtl
mov
fwait
adc
mov
dec
stc
in
divb
es
adc
add
sti
mov
testb
jns
mov
idivl
insl
push
or
outsl
mov
mov
pop
mov
push
sti
loopne
xlat
clc
mov
movsl
test
mov
arpl
fidivrs
mov
push
add
and
cmp
xchg
and
icebp
cmpb
pop
enter
mov
inc
lods
in
ja
mov
mov
inc
add
lahf
lret
cmpsl
push
pop
popa
adc
ficomps
mov
xorb
dec
xor
pushf
inc
fwait
add
xchg
inc
shrl
fwait
add
arpl
sarl
movb
test
pop
movsb
push
adc
sbb
ljmp
dec
push
ljmp
cmc
pusha
lods
sbb
push
fidivrs
cld
lret
cmp
rcrb
fidivl
dec
jp
xchg
push
rolb
subb
mov
mov
adcb
test
cmp
ja
dec
lcall
push
es
xchg
adc
mov
lods
xchg
cmp
cmp
jmp
repz
cltd
aam
sbb
mov
dec
mov
sbb
movsl
popf
or
lock
stc
adcb
daa
xchg
cmpb
dec
cmp
xchg
pop
jmp
in
ljmp
adc
out
or
test
sub
sbb
shl
mov
fsubs
cli
cli
mov
in
adc
xor
or
fwait
test
mov
js
aad
lods
xor
lahf
out
fimull
call
ret
inc
mov
aaa
mov
iret
sub
iret
movsl
ficoml
mov
jecxz
xor
into
ret
push
sub
xor
mov
cmp
xchg
iret
mov
out
jb
sahf
and
push
push
mov
dec
and
lret
popa
jle
cli
and
xor
xor
loop
or
inc
cmpsb
icebp
mov
ja
call
mov
dec
cmp
jle
xor
cmp
jg
cli
cmp
aaa
cmp
mov
dec
mov
pusha
and
in
shrb
inc
aas
in
andl
popa
imul
jle
xchg
lods
lahf
inc
jge
xchg
lret
fisttpll
outsb
popa
mov
and
dec
inc
push
pop
fnstcw
mov
mov
xchg
sar
rclb
enter
fistps
hlt
cltd
bound
add
scas
push
add
fimuls
push
bnd
pop
or
add
mov
iret
repnz
pop
jae
sbb
lret
test
inc
push
add
in
dec
sarl
leave
inc
or
dec
mov
out
aam
das
xchg
xor
pop
and
mov
push
pop
mov
mov
adc
insb
call
add
xchg
mov
rorl
or
popa
xor
fidivrs
push
aam
mov
add
mov
mov
push
js
mov
and
ret
aas
or
icebp
es
push
mov
jns
in
sbb
subb
lods
ret
push
clc
add
cli
and
add
aas
jge
mov
je
pushf
rclb
ficoms
cwtl
movsl
dec
xor
scas
aas
mov
mov
pop
enter
and
sub
fstps
pop
and
scas
in
mov
add
push
sbb
std
push
sub
scas
jle
push
or
adc
jae
dec
je
jg
ljmp
add
push
cmp
inc
scas
pusha
xor
aad
roll
aas
push
add
inc
jmp
add
lods
mov
fstl
cmpsl
stc
push
adc
and
popf
lahf
lea
mov
xchg
in
inc
aas
xor
cmpsl
in
or
lret
mov
inc
sbb
loope
aaa
ja
mov
mov
or
mov
jae
insb
js
fst
or
mov
outsl
outsb
inc
inc
dec
fsub
lea
insl
push
ljmp
lods
add
loope
pop
inc
test
dec
cmp
repz
or
or
mov
divb
test
movsb
pop
sbb
pusha
mov
ja
mov
pop
mov
ja
jno
mov
dec
rcll
sbb
orb
dec
and
enter
data16
cmp
addb
push
or
imul
xchg
sub
fs
xchg
mov
jge
jmp
xor
jae
inc
leave
xchg
or
call
shrb
sbb
sub
das
lods
sub
mov
ror
stc
in
int
data16
lds
xlat
xor
mov
sub
xchg
jne
leave
sbb
fisubrl
xchg
mov
mov
mov
aad
js
ljmp
pushl
inc
pop
adc
mov
lock
jo
mov
rcl
pop
iret
pop
add
xchg
lahf
lock
fdiv
push
pop
mov
imul
les
pop
in
jecxz
faddp
call
fstpl
inc
push
mov
cmpsl
imul
and
sub
nop
sbb
aaa
clc
xchg
mov
adc
jne
movaps
sbb
cli
rcrb
pop
jge
sbb
adc
xor
loop
aam
sub
add
pop
jge
cmp
xchg
push
aas
jecxz
sbb
dec
inc
dec
pop
or
lcall
ffree
aas
jl
jp
add
lret
and
out
andl
fdivp
ljmp
sbb
xchg
ds
add
cmpsb
jo
or
pop
pusha
aas
dec
outsb
pushf
in
aam
push
cwtl
fcomps
popf
push
sbb
popa
iret
sbb
rcr
scas
mov
int3
dec
or
inc
xchg
mov
ljmp
mov
cltd
ds
insl
or
fstps
adc
addb
bound
mov
lods
push
ficoms
lods
mov
lods
repz
xor
mov
or
cmp
jb
test
mov
jne
insb
fs
outsl
jmp
cwtl
xlat
cmp
into
hlt
fcomps
lret
aaa
pushf
and
mov
rcrl
out
lcall
jmp
pop
mov
fnstenv
aam
smsw
or
comiss
mov
into
mov
decl
out
mov
mov
je
lret
into
push
add
dec
adc
ffreep
push
rorl
jbe
bound
xor
lods
mov
cmp
cmpsl
pusha
fwait
leave
pop
and
sarb
inc
mov
into
pop
pop
sub
xor
xchg
dec
nop
lret
sbb
dec
stc
adc
xchg
inc
mov
add
jbe
cmp
push
sbb
sub
dec
mov
enter
cltd
popf
das
xchg
loopne
mov
jmp
loopne
sub
mov
and
cmp
cmp
addr16
mov
into
inc
xor
loop
cmp
jno
je
cli
lds
test
cmp
jmp
inc
sub
push
ja
mov
pusha
std
sbb
js
dec
and
push
push
mov
inc
faddl
mov
mov
mov
and
sub
int
cmp
mov
xchg
mov
mov
in
in
iret
push
repz
sbb
or
call
jno
jge
test
ret
mov
inc
mov
ret
pop
push
movsb
mov
jae
pop
jp
add
xchg
sbb
inc
adc
xchg
mov
loop
push
in
sbb
lea
popl
mov
pop
adc
fsubrs
fildl
inc
cmp
push
mov
mov
push
or
sub
rcr
les
orl
sbb
add
stos
and
mov
pop
enter
cld
pop
push
outsl
xlat
in
push
push
fstpt
cld
mov
dec
ds
and
bound
push
iret
iret
aam
pusha
leave
xorb
or
ja
jae
sbb
fdivs
mov
or
mov
jge
frstor
push
add
mov
es
push
sub
xchg
insb
jno
out
daa
push
pushf
mov
pusha
in
push
jae
jo
into
lahf
sub
push
int
imul
xor
inc
in
add
adc
pop
or
jl
testl
xor
pop
mov
test
cli
lock
sub
and
mov
jmp
aam
scas
pop
add
and
fstps
rclb
xchg
scas
divb
mov
dec
pop
sahf
fcoms
loope
push
and
int3
mov
inc
push
add
arpl
xor
jne
cmpsb
mov
popa
jecxz
sbb
push
movsl
push
xchg
rcll
sub
push
cs
popa
push
stc
movsl
xor
outsl
out
pop
rcrl
imull
jmp
add
les
xor
dec
adc
cmp
sub
mov
bound
cmp
test
add
push
pop
xchg
pop
xchg
scas
inc
pusha
mov
js
xchg
or
jns
and
js
pusha
cmp
fstl
xlat
mov
and
mov
pusha
mov
repnz
xchg
aaa
add
leave
mov
in
cmpsl
pop
mov
xor
gs
xchg
arpl
data16
scas
push
xchg
mov
hlt
push
jp
jo
push
loopne
add
int3
insl
and
imul
jle
je
iret
dec
nop
cmc
scas
loopne
sub
mov
jle
push
mov
dec
cli
sub
shll
dec
fistl
pop
stos
adc
in
shrb
mov
pop
and
mov
xchg
das
cmp
movsl
movsb
mov
fisubs
shlb
mov
sbb
lods
pop
jno
inc
adcl
int3
loop
in
lret
or
xchg
insl
xorl
sub
lds
lods
adc
mov
jmp
xor
aam
das
xorl
mov
daa
mov
call
push
push
lcall
push
mov
jne
jmp
adc
xchg
lret
sub
ret
pop
adcb
cmp
movsl
cs
push
pop
test
pop
add
pop
scas
lods
pop
and
std
mov
jbe
sub
inc
daa
into
imul
mov
mov
dec
adc
enter
inc
sbb
mov
xchg
aad
jle
fdiv
in
movsb
cli
jb
out
fdivr
dec
jb
cvtdq2ps
loop
xor
adc
imul
push
daa
xor
clc
and
push
cmp
das
mov
xlat
inc
or
sub
sub
mov
leave
push
jb
push
xchg
jmp
dec
fstpl
and
inc
xor
or
sbb
jb
aad
add
xlat
push
repz
fadds
std
jl
repz
scas
flds
pop
mov
and
or
movsl
mov
add
andb
js
mov
mov
movsl
jnp
imul
mov
out
xor
sbb
into
jp
xor
mov
int3
pop
mov
and
and
xchg
sbb
or
or
mov
outsb
inc
loop
jmp
jno
cmp
arpl
icebp
outsb
out
and
mov
push
ja
loop
shlb
mov
xchg
adc
fdivs
sbb
or
add
sbb
mov
ret
mov
in
hlt
mov
mov
and
repz
or
out
test
outsb
in
inc
fwait
inc
sbb
out
jne
dec
sbb
or
add
data16
fsubrs
jg
dec
xchg
mov
je
sub
mov
popf
jge
dec
push
and
fbstp
mov
fnsave
xor
cvtps2pd
push
daa
test
inc
sub
dec
test
sahf
mov
jno
mov
push
cmp
aas
std
xor
add
pop
jg
dec
pop
lret
xchg
mov
outsb
cld
fisttps
scas
xchg
test
xor
cs
fsubs
subb
scas
inc
test
scas
push
sub
aaa
push
jnp
gs
call
ss
add
jle
push
pop
std
repnz
or
popf
bound
mov
repnz
xor
cmp
xchg
fsubl
push
sbb
pop
ja
xor
mov
sbb
aad
pop
sbb
dec
sub
aam
cmp
call
pop
lds
push
loope
pop
sub
or
ja
hlt
pop
pop
pop
mov
out
push
lahf
xor
xor
jecxz
or
test
mov
cmp
in
popa
ret
and
mov
mov
push
sti
lods
sub
and
push
test
sbb
sbb
xchg
inc
add
adc
loopne
loop
pusha
push
mov
lods
cmp
int3
rclb
xor
xor
in
mov
xorl
pushf
lds
jl,pt
outsl
add
leave
dec
in
jnp
inc
jns
aaa
mov
pop
fnstenv
push
cmp
ja
adc
and
cmp
push
push
fdivl
xchg
cwtl
push
xchg
xchg
mov
mov
dec
pusha
pushf
dec
pop
push
mov
fwait
add
inc
mov
push
inc
shlb
in
repnz
and
lea
add
stos
mov
jp
dec
out
sbb
xor
push
xor
push
rcl
jae
mov
aam
cltd
lods
and
cmp
faddl
mov
out
cmpl
dec
mov
loop
idivl
adc
fnstcw
mov
jl
std
cmp
sahf
movsl
stc
mov
and
inc
or
mov
push
adc
sbbb
mov
and
negl
ret
jbe
pusha
fwait
pop
mov
stos
cmp
push
enter
pusha
inc
out
jg
into
mov
xchg
or
xchg
dec
mov
gs
inc
fs
iret
adc
sub
pop
xor
mov
mov
int3
adc
bnd
pushf
lds
adc
adc
outsl
repz
popa
xchg
je
cmp
xor
mov
out
int3
lods
xlat
adc
push
popa
shrb
xchg
clc
iret
inc
sahf
mov
js
sbb
ja
cmp
cmp
sbb
xchg
testb
into
jge
cli
add
jae
jae
scas
add
push
outsl
jmp
or
mov
mov
jle
jg
sub
xchg
xor
mov
mov
add
js
repz
mov
lret
and
push
cmpsl
fs
outsb
pop
mov
push
cltd
xorl
repnz
xchg
mov
pop
pop
mov
aad
imul
std
push
dec
mov
jmp
gs
data16
idivb
loopne
repnz
dec
stos
add
adc
lock
scas
fstl
and
sbbb
mov
in
push
hlt
stos
mov
movsl
and
fs
xchg
push
mov
cmp
jb
mov
sbb
stos
cmpsb
jle
mov
addb
cwtl
icebp
adcl
sub
pop
aam
out
cltd
mov
lea
rcrl
gs
cmp
or
idivb
gs
xchg
inc
pop
into
mov
xchg
xchg
bound
and
pop
fldcw
std
inc
xchg
sbb
add
push
test
sbb
ret
mov
xchg
or
jb
inc
sbb
int
dec
ss
mov
pop
sub
adc
loope
add
jge
mov
sub
mov
sub
inc
testb
rcr
push
cs
mov
imul
cli
fstpt
pop
sub
cltd
pop
in
dec
scas
push
in
mov
xchg
xchg
data16
scas
pop
xchg
repnz
add
outsb
inc
ja
fsubs
scas
cwtl
rol
andb
ds
pusha
loope
add
mov
mov
jl
sbb
cmpsl
adc
loop
mov
stos
and
cmp
cwtl
repz
cmp
andl
or
aad
mov
movsb
pop
mov
xor
xchg
test
sti
jns
nop
and
imul
cmp
xchg
lea
addr16
call
sbb
js
in
xchg
push
push
filds
clc
lret
jmp
icebp
pop
jae
xchg
and
sar
pop
imul
lds
mov
ss
outsl
cli
loope
fnstsw
mov
lds
es
lods
out
imull
cmp
cmp
lea
mov
jo
cmp
pop
bsf
adc
lcall
rorb
xchg
sbb
sub
lahf
mov
add
cmp
cmp
mov
push
sub
popf
mov
xchg
pusha
loopne
mov
jecxz
pop
pop
lods
je
xor
je
andl
daa
xor
jae
ljmp
xchg
push
mov
sub
mov
dec
xor
mov
cmpsl
aas
lahf
jp
cmc
andb
sbb
and
xchg
jp
inc
xchg
cwtl
js
outsl
out
push
in
mov
out
mov
lea
dec
add
mov
movzwl
nop
cmpsl
shrb
xchg
call
and
cli
mov
andb
in
sbb
xchg
dec
pop
xchg
jmp
cmp
outsl
jge
clc
adc
adc
dec
jecxz
fwait
push
cli
xlat
inc
cmp
in
enter
rol
lods
add
orb
add
lahf
pop
cmp
sub
sub
cltd
sarb
in
cmp
std
fwait
and
int3
inc
xchg
mov
into
pop
or
js
inc
dec
mov
xchg
addr16
fdivs
pop
inc
push
jp
mov
and
push
sbb
pop
mov
and
aam
mov
pop
jge
and
push
jae
push
dec
ffree
mov
lds
lcall
daa
xchg
add
push
sub
stos
push
out
push
dec
lea
xchg
xor
sub
iret
stc
ss
mov
ds
aad
jno
jae
pusha
fwait
or
inc
xchg
inc
hlt
pop
lahf
sbb
xor
out
fldcw
mov
data16
lret
dec
in
lock
xchg
dec
pop
ds
mov
in
aad
or
mov
mov
enter
xchg
out
mov
pop
test
inc
addr16
sub
sti
jne
inc
sbb
or
repz
sub
and
sarl
dec
repnz
sub
test
push
in
pop
adc
push
mov
sahf
adc
lods
mov
jne
cld
cmpsb
enter
push
mov
inc
dec
sub
ret
sub
mov
xor
lock
rcl
inc
bound
cltd
xchg
xor
adc
push
push
rorb
xchg
es
ret
sahf
mov
cmp
sub
xchg
jnp
mov
cmp
repnz
lret
and
jp
sti
fwait
out
notl
movsl
mov
ret
xchg
gs
test
sbb
xchg
pushf
jo
mov
xchg
gs
xchg
mov
mov
cmc
jecxz
mov
pop
mov
mov
sub
xchg
addr16
dec
pusha
rcrl
mov
sub
dec
inc
ljmp
pop
mov
into
aad
sbb
ss
loope
or
add
mov
push
fwait
jge
jmp
shl
xchg
dec
jb
inc
xor
push
pop
cmp
adc
je
jno
adc
or
jge
xorb
test
ds
sub
fistpll
sub
stos
lahf
xorb
stos
jae
mov
cmp
mov
gs
mov
xor
xchg
or
sbb
mov
mov
in
adc
and
test
idiv
movsb
sub
lret
push
lret
sub
fdivr
adc
pop
push
negl
imul
push
or
jno
xchg
idivb
mov
xchg
fucomip
xchg
cmp
mov
mov
int
lcall
fucomi
popa
je
ret
cmp
dec
enter
mov
lds
xor
out
cmpsb
and
das
sahf
fstpt
mov
iret
fistps
jae
lds
fwait
mov
stos
jle
mov
sub
scas
pop
mov
loope
inc
inc
fwait
orl
fisubrl
cmpl
mov
bound
rcrb
std
insl
insl
das
and
pusha
leave
mov
jnp
scas
rcrb
sub
xchg
icebp
xor
inc
dec
cmpb
in
sbb
dec
fdiv
jle
cld
mov
cmp
data16
xor
xor
and
xchg
or
lock
lds
mov
sbb
loope
popf
icebp
pushf
mov
into
test
insb
push
add
or
das
sbb
js
bound
push
popa
ds
inc
dec
imul
sbb
dec
cmc
scas
fldcw
das
xchg
cmp
jl
fwait
add
jbe
xor
sahf
jnp
jecxz
iret
pop
arpl
jl
add
int
sbb
jecxz
jbe
mov
lcall
lea
add
movsb
ljmp
jp
jne
ljmp
sub
cmc
push
mov
movb
xor
jnp
xor
les
popa
arpl
push
cmp
push
sub
xor
sbb
adc
inc
push
aaa
cwtl
mov
das
mov
adc
gs
add
ss
push
lea
or
sahf
popa
and
xor
jle
nop
rcl
jb
movsl
jns
clc
leave
xor
xor
or
adc
adc
mov
sub
out
push
and
addr16
fnstenv
leave
mov
mov
movsb
sub
bound
iret
lock
jg
adc
arpl
movsb
pushl
jns
mov
xor
test
pop
jno
xchg
cmp
and
xchg
xor
jns
xchg
push
leave
push
mov
sbbb
xchg
test
mov
sub
xchg
int
push
mov
xorl
and
dec
dec
icebp
push
lret
add
sub
cmp
xor
push
and
shl
out
out
in
mov
and
pop
cwtl
cmpsl
lcall
es
jp
gs
addr16
adc
pushf
xchg
aaa
stos
fistps
fwait
adc
int3
cmp
xchg
ret
scas
js
scas
cmp
ljmp
xor
into
subb
pop
adcl
xor
jmp
loopne
js
xchg
dec
ss
xchg
sub
cwtl
aaa
incb
mov
mov
mov
jge
mov
cli
ljmp
pop
pop
jnp
sub
lods
std
cmp
or
jmp
mov
jle
lahf
aaa
sub
push
jns
adc
call
dec
mov
stos
cli
out
push
das
mov
jp
test
je
sbb
add
push
into
out
sbb
and
hlt
add
hlt
scas
imul
jns
fdivs
adc
sbb
push
pop
lret
sbb
xor
and
or
push
lds
cmc
push
insl
and
xor
xchg
push
mov
mov
sbb
mov
sub
push
push
andl
and
pop
clc
lahf
mov
mov
dec
mov
out
adc
aas
out
xor
inc
ret
stc
andb
inc
fnop
inc
add
xchg
push
xchg
stos
pushl
pop
mov
xchg
lahf
fnsave
pop
xchg
xchg
add
sbb
sub
push
ret
fimuls
add
mov
test
imulb
repnz
jbe
xchg
push
addb
lcall
lock
arpl
mov
and
dec
jbe
scas
pop
push
icebp
xor
xor
movsl
cmp
xchg
add
pop
adc
mov
fxch
inc
fiadds
or
sahf
mov
int
scas
xor
sbb
cmc
dec
xor
aad
pop
sbb
push
in
cmpsl
scas
decl
cmp
mov
addr16
fucomp
xlat
notl
and
scas
jl
jge
scas
sbb
xor
outsl
pop
push
out
test
lahf
mov
jae
insl
div
lock
sbb
es
mov
mov
repz
push
lea
sarb
sbb
ds
stos
ljmp
mov
mov
push
shlb
test
xchg
jns
subl
sub
cld
jl
adc
push
push
ror
imul
mov
icebp
cld
cmpl
mov
je
mov
adc
sub
insb
adc
lahf
dec
popf
adc
leave
jns
and
sub
mov
jbe
lret
addr16
popf
push
adc
popf
lret
xchg
xchg
xchg
pxor
dec
xor
add
cli
dec
cs
cli
mov
sti
call
insb
repnz
orb
mov
xorl
xlat
int
cmp
push
in
mov
sbb
pop
or
jg
gs
mov
sbb
jp
and
xchg
push
cmp
sbb
xorl
outsb
jbe
es
ja
sub
bound
popa
cs
cmp
jecxz
xor
xchg
add
ljmp
rcll
repnz
mov
je
rcrl
loop
push
sbb
ja
adc
popa
out
sub
adc
pop
shll
ret
mov
inc
push
cwtl
or
jg
sti
test
add
lods
outsb
ljmp
xchg
cmp
sub
ss
cltd
fldt
push
xor
inc
cmp
gs
push
mov
cmp
test
inc
adc
test
in
stc
cmpsl
sub
sub
rcrb
push
sahf
push
fsubrl
cs
rolb
and
subb
cmp
push
mov
out
mov
adc
jnp
mov
sbb
test
adc
ss
sub
hlt
jecxz
xlat
hlt
test
inc
ret
or
cmpl
xchg
stos
aam
pop
or
imul
pop
mov
jecxz
popf
pop
push
push
push
and
cmpsl
inc
loopne
xor
xor
ss
add
push
out
stc
sbbb
push
dec
inc
pop
push
stos
arpl
loopne
testl
inc
ja
stos
cs
dec
out
ds
hlt
add
lods
fcoml
enter
ja
psrld
adc
outsl
jg
cmp
addr16
out
jg
lret
repz
dec
mov
sbb
cmpsl
and
mov
loope
in
icebp
ficoml
mov
pavgw
push
mov
sub
xchg
jb
cmp
jmp
jae
cwtl
add
aas
stc
adc
outsl
in
mov
sbb
push
and
ds
push
ucomiss
pop
cmp
loope
lods
in
dec
adc
or
mov
jmp
mov
enter
xor
ljmp
mov
daa
mov
mov
cmp
cmp
pop
sti
scas
cmc
mov
lods
push
xchg
cld
inc
in
sbb
push
adc
gs
pop
outsb
push
sub
mov
in
and
mov
negl
fwait
test
dec
scas
pop
jae
mov
mov
add
sahf
and
jle
sbb
sahf
sti
mov
int3
pushf
mov
leave
ret
outsb
xchg
dec
inc
pop
cmp
in
enter
ffreep
pop
sarb
pop
jno
push
aad
push
xor
or
icebp
xor
lea
cltd
sbb
filds
sub
sbb
add
push
sbb
sub
fistpl
dec
add
sbb
xchg
les
or
add
mov
sub
dec
les
popf
addb
lods
and
outsb
mov
xchg
dec
mov
dec
aam
dec
lock
push
fmull
lcall
adc
loopne
loope
push
dec
push
hlt
push
and
and
mov
repnz
std
inc
xchg
cmc
jecxz
loop
mov
test
out
mov
pop
mov
xchg
es
xor
sbb
pop
add
dec
mov
test
or
jle
fsubrs
mulb
clc
or
lret
out
dec
jecxz
insb
sbb
lret
cmc
sub
test
sub
adc
mov
mov
das
out
arpl
xlat
pop
xchg
ja
and
xor
xchg
test
aad
mov
mov
dec
adc
mov
xchg
cmp
xor
fcmovbe
jmp
or
arpl
int3
out
push
jecxz
cli
pop
add
add
dec
les
adc
mov
push
js
popa
pop
mov
pop
js
mov
shrb
ss
pop
and
testl
test
jne
pop
or
cld
out
std
stc
adc
shrl
fs
pusha
or
lret
push
lea
inc
xchg
test
cmp
pop
std
test
aas
repnz
xchg
xor
mov
pusha
lods
repz
cmpsb
add
repz
dec
shrb
xchg
fs
lahf
outsb
pop
int3
lods
or
jmp
push
repz
nop
lods
add
aad
pop
lods
ret
jl
inc
cmpsl
xor
sahf
push
daa
mov
imul
repnz
and
add
xlat
shrb
dec
in
and
pushf
mov
or
mov
outsl
jmp
stc
xchg
call
lock
jns
push
fiadds
shll
lahf
ja
mov
fisubl
jmp
mov
arpl
aam
mov
push
lods
pop
xchg
mov
popa
xor
clc
test
jl
or
dec
pop
push
sub
sbb
addr16
dec
enter
xlat
or
push
pop
je
in
fmulp
in
fwait
ss
pop
dec
movsl
inc
in
adc
push
jge
aad
and
cmp
mov
cmpsl
mov
lds
ja
pop
jecxz
xor
and
fldl
push
pop
add
xchg
roll
cmp
inc
jp
or
cmp
mov
lods
xchg
ror
sub
xchg
les
sbb
cmp
cmp
or
mov
xchg
sub
xchg
sub
xchg
xchg
ds
and
jne
xchg
loope
push
fimuls
inc
xor
xchg
in
mov
pop
and
rol
push
pop
pop
je
cld
das
icebp
jg
adc
leave
ss
sub
dec
push
or
movsl
daa
mov
sti
cmp
cmp
out
sub
sub
mov
mov
scas
movsb
xchg
fnstenv
inc
xlat
xchg
in
cld
les
ljmp
mov
inc
stos
jg
pusha
add
mov
iret
sub
insb
mov
rcll
mov
add
pop
lahf
outsb
cmc
repnz
dec
dec
and
outsl
lods
enter
int
cld
stos
repz
insb
popf
in
mov
cmp
nop
pop
popa
add
mov
repz
aam
testb
push
loopne
push
adc
pop
xor
xor
xlat
add
jecxz
and
cmpsb
add
inc
aam
jae
mov
mov
xchg
and
ss
lds
mov
mov
and
mov
xchg
lds
push
add
rcrl
arpl
xchg
out
cli
mov
rcll
push
jge
popa
push
adc
push
xor
scas
xorl
mov
sahf
pop
mov
sub
mov
outsl
fistps
cwtl
outsl
add
pop
sbb
test
cli
in
jne
xor
test
arpl
out
repz
popa
push
sbb
adc
ss
popa
fwait
and
sub
xor
adc
out
das
add
adc
dec
xchg
push
xlat
stos
push
jb
stos
adc
daa
mov
stos
add
cmp
in
cmpsl
sbb
sti
nop
dec
adc
insb
xor
call
and
and
push
std
mov
test
stos
decb
aaa
sar
or
dec
fmull
sub
test
lahf
adc
pop
jmp
subb
xor
test
cmpsb
sbb
orb
enter
sbbl
adc
adc
or
adc
adc
push
add
aaa
xchg
aam
ds
insb
mov
pop
aad
fmul
pop
rcrl
fimuls
cmp
pop
out
mov
xchg
fwait
mov
daa
ret
pop
or
cmpb
xchg
inc
mov
add
push
cmp
and
std
sub
ret
lods
jmp
sahf
lret
outsl
into
je
data16
push
cmp
andb
es
dec
lcall
int
scas
rcll
dec
pop
cmpb
jae
jl
mov
sbb
mov
mov
xchg
movsb
aas
mov
pop
xchg
inc
cli
push
or
addl
dec
jge
pop
mov
fwait
aam
push
cmpb
in
icebp
mov
push
fcmove
and
aam
data16
dec
subl
cmp
fidivl
sbb
cmpsl
jae
dec
sub
addr16
mov
sub
cmc
mov
lea
imul
out
or
dec
xlat
sub
mov
mov
aas
mov
push
cmpsl
ss
cmpsb
xor
pop
jl
loope
ficompl
out
scas
shl
sub
dec
outsb
addl
dec
std
mov
sub
movsl
je
fadds
pop
outsl
fdivs
pop
add
stos
arpl
lock
and
outsb
pop
pop
mov
inc
pop
and
sub
fldt
or
adc
push
xchg
add
xchg
cltd
fstl
xor
xchg
jp
jg
and
icebp
cmp
mov
adc
movapd
out
sub
call
lret
imul
sahf
and
push
mov
inc
xor
jo
pop
inc
fwait
add
mov
pop
adc
and
clc
jmp
dec
hlt
mov
xchg
outsl
jae
repnz
and
in
push
fcmovb
xchg
and
ss
ret
dec
stos
inc
in
adcb
ret
lahf
xor
push
leave
and
xor
aaa
mov
in
xlat
stos
clc
xchg
xor
loop
adc
cmp
adc
mov
sbb
or
mov
mov
jmp
mov
insl
xchg
mov
mov
or
lahf
xchg
loopne
mov
inc
jnp
pusha
popa
mov
lret
pop
dec
mov
sub
mov
mov
sbb
mov
mov
pusha
sbbb
push
pop
jo
cmpl
and
fmul
outsl
mov
add
inc
xchg
mov
shlb
test
and
push
fists
cld
movsb
bound
nop
xchg
jl
cmc
nop
fstl
pop
icebp
mov
enter
frstor
cmp
or
fisubl
cmc
popa
movsb
mov
pop
sbb
mov
xchg
mov
std
add
xchg
push
rclb
jl
jle
fcomps
pop
mov
push
mov
sbb
movb
jnp
xchg
ret
imul
sub
pop
and
sbb
cmp
pop
fstpt
fdivr
push
dec
push
seta
push
xor
int
je
mov
xchg
mov
mov
jg
adc
or
out
lcall
cwtl
lods
repnz
popf
fisubs
in
scas
fs
dec
into
xlat
sub
lret
mov
mov
sub
xchg
or
icebp
xchg
adc
inc
outsl
call
or
jmp
jl
inc
int3
add
adc
jbe
adc
fst
repnz
in
inc
mov
jg
adc
jo
adc
add
xchg
loopne
in
in
imul
xchg
xchg
out
in
adc
pop
push
mov
sub
outsl
push
inc
pop
mov
cmpsl
mov
xorl
mov
aam
subl
sbb
fmuls
imull
sbb
inc
cmpsb
or
sbb
bnd
dec
and
std
sub
inc
andb
lods
mov
sbb
jmp
fidivrl
pop
cmpl
test
leave
inc
scas
lcall
cmp
sbb
mov
pop
and
mov
dec
mov
or
lock
push
das
mov
push
mov
fcoms
out
xchg
adc
in
das
dec
out
lock
push
std
sbb
popa
in
ja
mov
cmp
out
xchg
add
jmp
mov
inc
incb
push
jg
andl
addb
fistpll
mov
mov
push
mov
add
sbb
push
adc
lcall
push
pop
insb
xchg
xchg
jge
dec
out
icebp
mov
sub
jp
call
dec
out
mov
repz
sub
aad
push
push
mov
aas
push
pop
push
pop
add
repz
dec
enter
sub
mov
aaa
push
push
jno
mov
dec
bswap
dec
cmp
cmp
arpl
hlt
cmp
mov
test
cmpsl
adc
xchg
inc
xlat
enter
mov
in
sub
adc
mov
mov
das
adc
rorl
shr
and
inc
fcompl
mov
aam
mov
mov
mov
and
sar
out
inc
cs
sub
inc
pop
int
mov
in
out
ret
scas
testb
in
adc
in
in
loopne
in
shll
ja
bound
or
dec
or
repnz
popf
push
mov
das
pop
iret
rcl
jno
cwtl
popw
imul
xchg
lods
es
jno
lret
cmp
sbb
mov
fnsave
ss
movsb
stos
dec
test
stos
push
xchg
mov
sub
imull
sub
das
cmp
xor
mov
pop
arpl
cmc
push
cmpsb
dec
mov
popa
xor
lods
inc
adc
lahf
inc
sub
dec
fdivs
sarb
adc
sub
fisubl
jl
aam
in
pminsw
sbb
lret
mov
lock
push
jno
mov
mov
sub
mov
jl
inc
sti
add
ds
mov
icebp
or
mov
div
xlat
adc
arpl
mov
push
jp
xor
dec
imul
push
dec
pop
js
mov
pop
scas
divl
mov
mov
fadd
mov
shll
es
mov
cmp
lock
pop
out
mul
aas
xor
xchg
cs
icebp
xchg
push
dec
or
dec
pushw
test
addr16
cmpsb
push
arpl
jns
ret
mov
or
iret
scas
out
pop
inc
lahf
int3
insb
fdivs
mov
leave
and
faddp
fcoml
insb
inc
roll
inc
int
outsb
js
repz
gs
push
cmpsl
test
or
push
xchg
scas
mov
push
aaa
imul
sahf
pop
pop
lahf
jg
mov
push
dec
in
adc
push
out
dec
mov
pop
int3
add
or
jg
push
enter
cmp
gs
inc
imul
cmp
push
int3
mov
scas
mov
in
adc
dec
mov
pop
lds
sub
in
lods
xchg
push
rcrb
stc
sti
iret
insb
mov
and
fimuls
dec
push
inc
sahf
mov
add
cmp
imul
lods
je
mov
mov
outsb
lock
ss
and
inc
test
imul
imul
dec
push
sbb
pop
adc
push
adc
adc
cmp
jo
leave
stc
push
inc
mov
pop
or
mov
xchg
cli
mov
nop
sbb
call
xor
movl
xor
or
push
add
fstl
push
sub
mov
out
rclb
xchg
mov
pop
mov
cltd
mov
push
xchg
adc
mov
mov
jb
push
outsl
aaa
push
movl
pusha
test
loope
sbb
clc
and
jno
xlat
rcl
insb
cmp
jo
scas
aad
pop
inc
leave
test
std
pop
add
incl
sub
cmpsb
jg
sbb
mov
sbb
xor
jnp
sbb
mov
inc
sub
adc
mov
xchg
cmp
xchg
pop
mov
adc
mov
cs
cmp
push
push
stc
lret
pop
push
movsl
jg
lahf
imull
int
push
add
outsl
and
jp
stos
into
jle
repnz
inc
fs
or
test
loope
ret
in
mov
rorb
jp
pop
dec
push
mov
dec
and
loope
ljmp
std
mov
and
and
lahf
js
test
xor
test
pop
movsb
ja
jno
jle
mov
jecxz
adc
cmp
leave
ret
sarb
pop
shll
sti
sub
fistpll
mov
or
loop
mov
inc
mov
imul
or
push
fadds
mov
and
jg
pop
dec
ljmp
popf
sub
xorl
adc
das
mov
sbb
jns
inc
loope
fcomi
mov
pop
rcpps
xchg
adc
ficoml
aad
jb
push
mov
xchg
mov
mov
sbb
inc
stc
sub
sub
mov
lret
insb
dec
cmpsb
movsl
bound
outsl
pushf
push
cmpb
inc
popa
and
mov
std
push
and
jnp
cmc
jg
lea
xchg
lret
sub
int
pop
dec
push
prefetch
or
add
mov
rorl
into
xor
sub
das
rorl
and
cmp
repnz
repnz
idivb
push
jae
out
push
andb
sbb
adc
xchg
repnz
mov
cmp
xor
mov
popf
inc
sub
jge
dec
inc
jb
jp
sbb
shll
stos
test
xchg
repnz
mov
cwtl
xor
pop
ds
xor
lods
stc
xor
sub
fcomps
push
or
repnz
js
mov
adc
repz
jl
cmp
cmc
sti
lret
mov
imulb
stc
imul
jmp
divl
out
push
inc
pop
sti
mov
inc
in
mov
or
xchg
sbb
int3
cmp
imul
ret
lcall
push
xchg
adc
inc
arpl
jns
xchg
pop
mov
inc
lods
fcmovbe
loope
add
pushf
rclb
in
mov
lods
das
push
mov
dec
cmp
xlat
cmpsl
mov
adc
fnstsw
aad
sarb
inc
dec
push
add
shrl
ret
popf
cmp
mov
pop
sub
or
jmp
lret
mov
jge
jb
push
mov
and
push
cli
ret
pop
rorb
jo
or
test
movsl
iret
scas
stos
pop
xchg
and
adc
pop
popa
mov
add
or
adc
hlt
add
std
loopne
xorb
fisttpll
aam
mov
popf
dec
mov
mov
jl
imul
es
or
shrd
jnp
mov
pop
pushf
dec
fsts
imul
cmpsl
pop
test
out
push
call
cmp
adc
pusha
and
xchg
enter
gs
cmp
dec
pop
rclb
out
pushf
icebp
dec
jb
adc
cmp
pop
clc
pop
aas
mov
icebp
add
loopne
cli
fisubrl
push
das
imul
lahf
pop
mov
aaa
push
cld
cmc
sar
outsb
mov
and
lea
fidivs
cmpl
pop
roll
out
dec
rcl
jns
ljmp
pop
sub
mov
dec
fs
in
jl
mov
sbb
xor
mov
pop
out
or
imul
inc
xchg
inc
mov
ja
lea
and
dec
into
repz
aam
adc
add
arpl
jle
mov
pop
lds
ljmp
mov
out
outsl
addr16
xchg
aad
jne
mov
and
ds
outsl
stos
inc
mov
mov
mov
xor
and
push
out
sub
or
daa
idiv
cltd
cmp
in
sarb
in
ja
or
mov
sti
subl
cmp
shll
in
dec
icebp
je
add
push
mov
xchg
insl
es
or
sbb
sbb
add
jp
rclb
or
nop
add
shll
jno
popa
xchg
insw
scas
mov
adc
xchg
mov
in
lea
popa
jl
lods
lods
mov
in
decb
scas
stc
pusha
iret
push
jg
dec
jnp
lret
mov
das
or
imul
mov
out
sbbl
aaa
clc
int
cs
int3
stos
jecxz
aad
cmp
sti
fmul
dec
xorl
sub
into
dec
push
sub
sub
sbb
push
cmpsb
or
push
mov
add
mov
xor
xchg
in
andl
scas
xchg
xchg
into
loopne
push
clc
mov
xor
cmp
or
mov
inc
dec
cmp
mov
cmpl
sbb
xchg
insb
sbb
aad
dec
mov
pop
cltd
mov
mov
inc
ss
add
movsb
popf
ds
adc
scas
rcll
adc
sahf
int
xchg
lea
outsl
dec
arpl
sarl
mov
inc
ret
test
shrb
mov
cmc
cmp
mov
in
faddl
sbb
mov
jecxz
inc
dec
jmp
and
adc
xor
test
fistps
popf
aad
leave
shll
lret
in
mov
in
fildll
cmp
dec
mov
sbb
xchg
nop
leave
das
push
daa
stos
push
lahf
pop
gs
aas
scas
pop
xor
sbb
xor
jno
jo
vxorps
dec
sub
mov
lcall
stos
xchg
scas
mov
jg
mov
adc
cltd
ret
test
and
lahf
outsb
out
sbb
outsl
movlps
mov
gs
cli
imul
dec
inc
xor
les
jl
jae
dec
lahf
dec
add
insb
adc
in
out
lret
in
std
push
loop
aas
cmp
adc
xor
aaa
mov
popa
outsb
or
inc
push
adc
ja
ret
jmp
dec
adc
sub
neg
in
out
cmpsl
mov
fmull
ret
lock
das
mov
clc
jle
mov
int
int3
stos
jo
mov
xchg
in
inc
enter
or
sbbl
cmp
iret
hlt
or
and
int
sbb
jae
and
cmp
orl
sub
ljmp
push
xchg
imul
es
test
mov
push
repz
xchg
cmc
dec
push
mov
sti
jnp
lods
mov
xor
sub
push
sub
and
pop
int
xsha1
cmpsb
lret
das
and
inc
sti
fbld
adc
mov
rorb
jg
in
leave
inc
xchg
inc
cmp
mulb
cmp
movsl
loope
scas
nop
ss
xor
es
or
push
xor
push
sbb
pop
jbe
imul
jns
cmp
adc
stos
push
cmc
clc
lea
fdivr
mov
xorl
mov
in
xchg
loopne
int3
xor
pop
jb
mov
mov
mov
sbb
dec
mov
adc
mov
cmp
iret
jns
or
mov
jmp
jnp
mov
sub
jnp
pop
dec
mov
cmc
push
pop
inc
rorb
negl
aas
ljmp
imul
aad
test
push
mov
sub
add
mov
inc
cwtl
out
out
and
arpl
dec
adcb
dec
jmp
lret
nop
mov
addr16
fcom
inc
in
data16
cmp
adc
or
insl
dec
jl
inc
arpl
inc
jecxz
inc
and
rclb
cmpsb
xlat
jp
add
add
cld
or
inc
sbb
and
cmp
insb
dec
jl
adc
add
in
ret
gs
adc
jp
mov
mov
pop
movsb
mov
mov
aaa
pop
inc
mov
in
sub
cmc
mov
jg
xor
mov
mov
loope
sub
sti
insb
mov
mov
out
outsl
jns
xchg
push
and
sbb
lret
gs
sbb
psraw
popf
stos
dec
sysexit
push
xchg
jb
mov
jnp
mov
sti
cli
push
stc
xchg
jno
iret
in
ja
pop
imul
loopne
cli
add
sahf
cmc
cmp
loope
xchg
mov
mov
jmp
iret
pop
cli
sbb
or
aad
sti
cmp
cmp
lahf
and
outsl
dec
cmp
xchg
xlat
pop
jbe
out
jmp
bound
pushf
in
imul
mov
add
popa
inc
lea
pop
pushf
xchg
insl
out
lret
fdivrl
xchg
lods
jl
add
lods
mov
loopne
jnp
lahf
push
mov
sbb
push
out
shrb
xlat
js
popl
xchg
in
dec
lret
inc
push
flds
cli
test
pop
rclb
xor
aaa
movsl
mov
inc
lock
dec
arpl
sbb
fldl
roll
mov
sub
jno
xchg
cmp
in
ss
out
pop
ret
inc
dec
adc
mov
jo
jnp
loopne
imul
fs
pusha
cmpl
ret
bound
shll
inc
pop
xchg
add
dec
xor
loop
cmp
mov
sub
mov
xchg
stos
in
mov
pop
dec
pop
sub
aad
pusha
mov
push
outsl
or
dec
cmpsl
das
xchg
loope
out
or
popa
sub
adc
adc
and
shl
mov
stos
testb
xorb
rclb
lea
aaa
mov
cmpl
pushf
add
xor
inc
or
or
mov
pop
out
mov
xchg
jecxz
sahf
or
rol
push
iret
adc
jno
push
adc
and
xchg
or
dec
dec
sbb
or
jecxz
pusha
test
fildl
push
adc
test
stos
dec
insl
mov
pushf
push
fimuls
stc
mov
je
ss
not
mov
push
in
rorl
add
cmpsl
and
and
and
aad
test
dec
pop
or
jp
stos
xorl
pop
lcall
iret
jp
sub
mov
in
popa
add
add
shlb
and
jge
pop
sbb
or
inc
jmp
adc
push
mov
xchg
push
jge
lret
jno
fsubl
jmp
add
clc
addr16
xlat
addr16
rorb
nop
xor
jmp
dec
ss
ficomps
inc
inc
lods
pop
out
loopne
xchg
jl
repz
mov
fs
js
xchg
sti
icebp
pop
es
sbb
cmp
jl
popl
lahf
jg
sub
punpckhdq
add
mov
mov
shl
stc
mov
dec
mov
lret
push
mov
mov
and
aam
stos
jnp
mov
rcrb
mov
dec
fmul
outsl
das
into
sti
dec
pop
or
lcall
mov
stc
nop
jne
push
sbb
pop
add
sbb
mov
lcall
int3
cmp
das
sub
mov
sbb
xlat
loopne
mov
shlb
inc
xorb
cwtl
lahf
and
pop
dec
or
add
mov
das
clc
scas
ljmp
sub
int3
or
cwtl
pop
roll
gs
add
shlb
lea
push
xchg
adc
jns
dec
dec
cs
outsb
xchg
jl
ret
jne
popa
dec
mov
adc
mov
jecxz
xor
cmp
loope
stos
rol
mov
and
stc
xor
mov
jmp
sbb
nop
in
push
inc
xor
sbb
xchg
cmp
lahf
mov
adc
sahf
push
or
and
sbb
mov
push
nop
push
popa
cmp
std
push
mov
jle
fiadds
push
pusha
add
sub
test
repz
into
and
stos
addr16
popa
cmp
ficompl
or
enterw
dec
dec
push
mov
jg
push
push
fdivl
loop
or
lods
sub
cmc
hlt
out
mov
mov
mov
fnstcw
lods
lods
stos
popa
setbe
inc
add
in
push
mov
dec
bound
push
add
xor
cmp
les
xchg
add
fwait
out
popf
adc
gs
lahf
mov
pusha
adcb
cmp
scas
mov
jg
inc
je
in
and
push
inc
jecxz
xlat
jo
lods
and
insb
add
inc
imul
int
xchg
or
jmp
xchg
ret
data16
mov
js
pop
and
xchg
xchg
roll
rcll
adcl
push
clc
jge
les
xorb
inc
jo
sub
mov
xor
fistps
pop
push
mov
in
push
into
dec
fs
loope
aad
outsl
ss
pop
xor
mov
ret
inc
inc
lret
pop
icebp
js
or
or
scas
sub
jecxz
out
repz
pop
in
xor
push
xchg
dec
inc
movsb
xchg
jno
fists
test
ss
ret
enter
xlat
addr16
cmp
xlat
sar
std
xchg
jl
mov
mov
in
jle
push
dec
dec
pop
insb
sub
mov
out
es
shll
xor
pop
lds
sbb
or
ds
mov
inc
cmp
jns
xchg
xor
mov
movsl
dec
and
mov
add
cmp
jno
mov
pop
aam
mov
leave
cmp
dec
dec
adc
cwtl
cmp
mov
div
sbb
lret
int
dec
jb
sub
jmp
lret
cwtl
adcb
mov
cmc
insb
loope
or
inc
push
lea
stos
mov
inc
mov
movsb
push
aad
dec
mov
fs
mov
lods
cmp
iret
aaa
pop
out
cs
stc
mov
xorl
pop
mov
sbb
imul
cmc
pop
lahf
xor
std
insb
std
cmp
sub
add
jo
push
int
xor
and
insl
inc
mov
inc
lcall
inc
mov
add
add
xor
test
jbe
pushf
je
idiv
shll
pop
jbe
aas
push
and
aad
add
inc
dec
jp
adc
ljmp
insl
jae
dec
out
push
add
jp
lret
std
sub
sbb
in
lds
testl
and
cmp
xchg
xor
mov
test
mov
cmp
xor
fisubrl
scas
xchg
mov
lea
inc
jbe
in
sub
xchg
lea
int3
jbe
in
sub
and
mov
scas
stos
mov
cmc
mov
fsubl
outsl
mov
cli
lock
inc
lods
jecxz
sbb
pop
jb
dec
sbb
mov
jge
mov
insl
mov
movsl
jae
gs
loopne
cli
incb
cmpl
int
xor
mov
dec
pop
in
mov
inc
int3
sti
add
mov
xchg
cmp
jae
cmpsl
mov
pop
movsl
test
and
push
dec
das
or
push
xor
jmp
cmp
mov
jbe,pn
fnsave
stos
enter
aas
sub
xchg
xor
insl
xor
enter
dec
sbb
cmp
pop
mov
and
push
testb
adc
or
fwait
adc
orb
and
daa
adc
dec
sbb
mov
push
mov
mov
or
mov
mov
addr16
mov
test
rcrb
insb
push
incl
loopne
push
push
or
mov
mov
popf
inc
lods
and
lret
mov
cmp
negl
xchg
mov
sbb
pop
pop
add
pop
test
or
dec
test
cmp
out
outsl
cmp
cmp
mov
fnstenv
pop
inc
mov
pop
popl
push
sbb
incb
pop
push
bound
or
cli
daa
testb
sbb
xor
adc
push
mov
sub
test
adc
push
sub
sbb
leave
xchg
mov
enter
mov
dec
fisubrs
cwtl
mov
jo
lcall
popa
or
popf
je
push
hlt
jne
xor
lds
bound
fcomp
ja
push
mov
sub
xorl
pop
push
cmc
std
popa
xor
into
add
mov
push
jmp
and
in
gs
ret
ja
addr16
add
mov
pop
sub
or
aaa
divl
or
clc
cmp
pop
lods
lock
sbb
imulb
stc
std
mov
loope
push
lcall
dec
xor
inc
xchg
push
lahf
je
jp
testb
ljmp
pop
popa
loope
cmp
sub
stc
js
shlb
arpl
imul
and
es
jae
sbb
cmp
jp
cmpsl
dec
mov
and
xor
mov
lods
test
mov
pop
pushf
sub
pop
addr16
mov
aam
jo
sbb
fwait
and
and
xor
sub
cmpsb
ljmp
sub
jno
fsubrs
push
ret
aas
mov
adc
pop
inc
fwait
dec
in
shr
out
scas
pop
test
push
add
popf
lcall
or
sti
mov
and
pop
notb
add
frstor
mov
fcomi
aam
dec
lea
mov
test
in
cltd
push
sbb
adc
add
push
jp
or
sub
scas
push
push
cmp
es
lods
jno
pop
xchg
push
insb
lods
fs
jb
jp
or
pushw
jg
pop
mov
mov
das
pop
in
and
clc
ljmp
pushf
lcall
push
cli
xchg
repz
xlat
xchg
mov
data16
pop
push
iret
nop
mov
xor
sbb
data16
or
scas
stos
pmullw
mov
jle
lcall
repnz
or
add
pop
test
or
mov
inc
and
call
push
shrb
imul
mov
xchg
loope
inc
aam
adc
xor
lock
xchg
jnp
push
mov
xchg
in
sub
pop
into
push
mov
les
iret
pop
nop
mov
leave
add
repnz
inc
jne
fisubrl
or
xchg
nop
test
insb
mov
sub
mov
cs
je
and
lcall
rep
and
jle
scas
fildl
stc
inc
imul
imul
jns
pop
xor
std
inc
mov
sub
mov
cld
push
outsb
lcall
push
mov
dec
inc
lcall
rorb
pop
pop
gs
pop
cmc
int3
mov
mov
hlt
xchg
testl
inc
je
pop
call
lock
sbb
stos
ror
dec
xchg
popl
xor
imul
int3
inc
ret
lldt
mov
aam
jnp
gs
fistps
mov
imul
and
or
in
adc
sub
xlat
inc
ds
push
inc
xor
cltd
cmp
xlat
je
adc
lock
mov
mov
jne
jmp
lods
loopne
inc
outsl
xlat
imul
scas
mov
in
add
out
lret
int3
aas
andl
mov
mov
insl
cmp
shlw
fdivrp
xor
ja
mov
cmp
jo
lock
push
leave
pop
shl
ficomps
pop
shll
mov
sbb
push
xchg
cld
dec
int
mov
call
and
add
cld
and
push
iret
call
cli
add
addb
adc
ljmp
mov
push
push
cmp
mov
orl
test
inc
outsl
adc
push
shrl
jg
sbb
iret
add
fcmovu
pushf
sbb
xor
adc
aaa
pop
add
push
push
fidivl
push
add
sbb
pop
shr
mov
mov
fsubrl
xchg
ret
mov
pop
sub
or
je
jecxz
cmc
inc
xor
mov
scas
rcl
mov
cli
les
push
xor
mov
divb
loope
pop
in
nop
rorl
aaa
xchg
add
xor
pop
inc
push
push
jno
push
in
or
aaa
inc
into
mov
out
fdivl
fidivrs
xchg
pop
sti
jg
iret
rorb
cmp
sarl
push
ja
push
push
mov
or
xlat
mov
fsubr
addr16
adc
push
push
mov
addl
or
sbb
outsb
adc
push
sbb
dec
pop
xlat
ljmp
mov
scas
pushf
outsb
jns
aam
ret
in
jp
push
sub
or
add
repz
jmp
std
inc
or
lea
loopne
mov
cs
in
aam
loope
popa
add
push
add
fidivrs
add
dec
popa
sbb
cmpsb
insb
mov
inc
je
js
movsl
mov
mov
mov
jp
add
nop
sub
cmp
enter
insl
loope
jge
test
fisubl
cmc
mov
insl
inc
out
cmp
mov
cmp
xlat
repz
pop
pop
push
fisttpll
pop
dec
adc
mov
cmp
shrb
clc
testl
aam
stos
gs
pop
stos
movsl
jns
sub
lods
imul
inc
enter
and
inc
jecxz
lea
inc
fsubl
push
lcall
add
fs
add
sahf
ret
sub
jne
adc
dec
xchg
andl
rol
lcall
sbb
imul
addr16
jecxz
out
lds
jge
mov
xchg
cmc
push
inc
push
lods
sub
out
sarl
aas
pop
popf
shll
aad
sbb
mov
and
test
jo
je
rcrb
addl
or
out
mov
cmpl
mov
cwtl
inc
test
cmp
mov
stos
pop
and
and
adc
xorb
xchg
xor
sahf
inc
je
xchg
aam
insl
mov
or
mov
adc
push
movsb
insb
dec
push
gs
jl
fs
jle
jb
lock
xor
imul
imul
jge
cmp
and
and
adc
aam
sub
sub
inc
test
inc
xchg
js
xchg
adc
cmpsb
std
dec
movsb
cmc
bound
clc
mov
pop
jne
mov
test
xor
pop
das
outsl
and
pop
pop
jae
xchg
or
ret
into
push
repnz
dec
into
jmp
ret
pop
inc
in
mov
hlt
jae
push
jmp
xor
mov
pop
xchg
mov
mov
lea
ja
int
je
adcb
inc
sub
mov
scas
test
or
pop
test
jg
mov
cld
pop
fnstcw
or
out
cmp
cmp
mov
imulb
filds
sbb
cmp
mov
lods
mov
cmp
imul
sbb
dec
aaa
cs
xchg
or
inc
fnstsw
mov
js,pn
mov
mov
hlt
mov
add
je
and
inc
rorb
inc
out
aaa
pop
push
and
pushf
cmp
insb
and
repz
mov
sbb
push
jne
pop
repnz
add
xchg
repz
jnp
movsb
movsl
mulps
xchg
outsl
pop
mov
int
stos
sbb
xor
or
adc
orl
aaa
sbb
dec
scas
lock
pop
jae
and
sbb
mov
pop
in
push
shrl
js
popa
add
jg
fsubrl
sub
aaa
xchg
jg
adc
mov
int3
and
jbe
mov
inc
iret
cli
adc
sbb
pop
int3
fnstenv
cld
mov
loopne
nop
fisubs
in
mov
add
mov
ljmp
lock
addr16
pop
std
or
sub
lret
enter
rorl
std
push
push
out
int
or
aaa
jb
xchg
push
fidivl
shll
hlt
mov
sub
push
ret
jg
xlat
mov
push
xchg
inc
and
mov
psadbw
lcall
add
dec
hlt
dec
orb
adc
test
mov
sub
insl
xor
dec
rcrb
fcomp
repnz
loopne
dec
xor
mov
inc
popa
lret
jl
mov
cli
xchg
ljmp
pop
cld
and
mov
jns
ret
stc
sub
jbe
and
cmp
in
stos
out
cmp
outsl
pop
gs
jecxz
push
stc
xor
in
aam
das
xchg
imul
mov
push
je
sub
mov
add
mov
call
sub
icebp
push
mov
sbb
lahf
xlat
pop
mov
negl
jg
sbb
mov
xor
jg
pop
fmuls
daa
subl
push
scas
rolb
jp
mov
mov
or
pop
lods
in
adc
bound
shl
fldcw
fdiv
pop
call
jg
mov
mov
cmp
rclb
or
sti
push
iret
xor
inc
pop
mov
and
rorl
push
cmp
repz
cmpsb
jnp
cmp
mov
fdivrp
mov
loop
sti
arpl
push
xor
or
dec
cmp
insl
sarb
fprem
xchg
fldt
inc
xchg
stos
loopne
addr16
sarl
shrl
xchg
mov
push
jg
in
mul
cs
in
test
std
std
mov
imul
test
jo
push
iret
ret
pop
inc
in
or
push
movsb
pop
or
stos
jle
fs
mov
xchg
push
xchg
xorb
mov
stc
cmpsb
adc
pushf
lods
repz
fisubrs
mov
mov
imul
jl
idivl
inc
or
scas
jb
std
jno
pop
ficoml
call
bound
addr16
mov
and
hlt
iret
jo
es
mov
pop
cld
pop
mov
out
or
in
loopne
mov
xor
mov
adc
mov
lret
outsb
add
inc
stc
pushf
gs
sbb
enter
sbb
cmp
mov
xor
clc
fs
mov
and
push
xor
sahf
inc
cwtl
cli
cltd
ljmp
in
adc
inc
push
fs
add
mov
xor
lods
loopne
or
test
test
jmp
imul
inc
fdivrl
pushf
jbe
je
pushf
mov
push
xor
cltd
js
sarb
loopne
pop
cs
mov
mov
add
ja
stos
std
ss
adc
lock
sub
leave
xchg
enter
inc
jp
add
mov
cmc
add
stos
push
fbld
call
ljmp
cld
mull
rorb
dec
loop
dec
inc
mov
ret
aam
or
lcall
mov
and
mov
mov
mov
movsl
and
cmp
psraw
fisttps
fiaddl
sub
mov
rol
out
loop
repz
jns
out
pop
pop
int3
sbb
jp
mov
adc
or
pop
icebp
cmpsl
adc
fsub
xchg
aaa
dec
jb
sub
cs
add
or
inc
cltd
mov
push
dec
imul
xor
popf
iret
or
sbb
push
xchg
and
aad
pop
push
add
imul
sub
shll
pop
cmpsb
inc
out
or
mov
add
lds
stc
mov
pop
inc
push
arpl
inc
pushf
xchg
scas
aad
mov
sar
loopne
inc
rep
pop
divb
ret
pushf
jmp
adcb
mov
xchg
cli
or
sahf
imul
test
js
inc
subl
adcl
test
insb
dec
xchg
adc
ss
mov
adc
das
fiadds
clc
xchg
pop
cli
data16
popf
popf
pop
lods
mov
in
movsl
std
mov
jbe
mov
test
ret
cmp
cmpsl
out
rcrl
ds
aaa
loop
loopne
mov
push
fs
cld
sbb
shr
aad
loopne
cs
inc
inc
push
mov
xchg
and
pop
stos
add
nop
out
mov
nop
jns
xor
cld
aam
fisttpll
mov
sub
outsl
push
dec
int3
push
fs
jl
mov
jecxz
mov
rol
cltd
and
mov
push
push
cmp
mov
sub
adc
out
js
stc
movsb
testl
or
push
mov
lahf
mov
jns
mov
jl
and
push
mov
add
sub
test
sub
fadds
dec
adc
nop
inc
or
out
lods
das
aaa
ficomps
add
mov
or
clc
repnz
jbe
push
bound
enter
jbe
fcomps
xor
sbb
in
add
xor
adc
dec
cmp
push
xchg
ja
cwtl
and
jno
mov
stos
sub
push
fwait
cmpb
outsl
sahf
sub
daa
shll
jnp
or
rcl
inc
mov
dec
outsl
dec
inc
jecxz
mov
imul
repz
push
mov
dec
les
dec
xchg
pop
dec
insl
jo
icebp
mov
mov
movsb
mov
mov
je
out
pop
test
mov
loopne
jle
dec
enter
xchg
mov
imul
lret
sti
xchg
scas
fsubrp
test
sbb
xor
cli
dec
fisttps
push
loopne
cmp
clc
cmp
xchg
mov
adc
mov
xchg
xor
jno
loope
dec
andb
js
filds
push
roll
mov
mov
sub
pop
or
or
imul
lea
test
push
in
push
out
inc
test
sti
aam
xchg
mov
jg
nop
jecxz
pop
out
dec
inc
iret
adc
mov
or
scas
js
decl
icebp
jae
push
loope
outsb
pop
jbe
adc
shrb
xor
js
jl
adc
cmp
addr16
popw
lds
dec
call
mov
xchg
aam
xor
repz
xchg
mov
pop
insb
mov
xor
xor
mov
jno
cmp
pop
pop
punpckhbw
jae
jg
test
sti
jmp
xor
jnp
dec
xor
fs
cmp
mov
and
push
sbb
int3
push
jno
ss
pop
add
fstpl
sahf
loopne
stos
inc
andl
xor
mov
push
add
dec
sahf
mov
mov
ja
jge
push
add
and
and
mov
mov
dec
jne
xor
dec
xchg
aam
shll
insb
sub
inc
dec
stc
jge
dec
xchg
mov
pop
add
or
mov
mov
cmp
add
mov
addb
fadds
jp
and
push
loopne
sub
pop
cmp
fidivl
mov
dec
xchg
xor
push
popf
dec
into
ja
pop
enter
jb
push
jle
imul
xchg
or
lea
sbb
dec
sub
pusha
xchg
lret
inc
mov
aaa
or
pusha
or
adc
xchg
mov
xor
xlat
sbb
mov
mov
push
mov
cmp
iret
jle
or
lcall
xchg
fsubrl
mov
scas
or
mov
lds
movsl
pop
xorb
in
sub
cmc
fistpl
insl
cs
and
mov
adc
and
scas
movsl
inc
dec
push
test
ret
ss
outsb
jb
cmp
sbb
jo
inc
xor
push
xchg
sub
aas
add
mov
xchg
das
adc
call
cltd
fwait
xchg
xchg
repnz
pop
nop
cwtl
fs
repnz
push
sub
stos
jbe
js
push
add
or
je
push
roll
or
imul
cmp
add
rclb
test
in
push
pop
repz
sub
jns
rcrb
add
jae
mov
fcomps
dec
jnp
mov
icebp
xchg
sbb
pop
aaa
dec
int3
addr16
in
pusha
outsb
mov
in
push
mov
inc
fdivrl
xor
hlt
mov
mov
or
push
jecxz
xchg
sub
rol
jae
jl
pop
jnp
shll
out
push
sbb
int3
ljmp
test
inc
xchg
push
push
daa
js
scas
jne
xor
dec
stc
xor
ret
ror
mov
adc
inc
xchg
fisubs
jecxz
or
dec
std
push
shrl
es
or
sub
and
mov
movsb
push
push
fdivrl
adc
cmp
inc
das
sarl
push
test
out
jg
mov
shll
mov
loopne
mov
jecxz
les
imul
mov
in
mov
pop
xchg
xchg
js
sarl
sar
movsb
mov
cmp
cmpsb
subl
inc
ficoms
je
sti
shlb
movsl
lret
mov
insb
pop
cmpsb
fldl
push
mov
add
push
scas
les
xchg
mov
je
scas
mov
jmp
mov
sub
and
js
data16
inc
xchg
dec
mov
js
mov
or
fadd
xchg
mov
int3
lret
sar
or
cltd
gs
mov
jb
jo
in
fnstsw
and
in
lea
leave
xchg
icebp
out
lock
int3
cmp
lcall
cmpsb
lahf
xchg
cmpsb
movsl
pushf
out
push
iret
xlat
push
push
ret
add
jno
aam
dec
xchg
shll
and
add
lock
mov
gs
mov
lret
std
cmp
push
fucom
mov
enter
xorb
mov
cmp
lcall
sbb
test
scas
and
inc
adc
arpl
push
jae
xchg
inc
pop
add
pop
icebp
inc
incl
push
or
stc
out
mov
ja
les
dec
mov
push
fnstsw
xlat
or
jbe
push
push
ds
pop
loopne
mov
daa
mov
dec
scas
int
movb
add
arpl
pop
pusha
xorps
pop
mov
mov
shl
xchg
jg
stc
add
or
inc
ss
ss
loope
jbe
mov
test
jns
mov
push
mov
bound
and
clc
insl
push
add
outsl
lcall
icebp
cmpsb
jg
and
jbe
loop
mov
hlt
clc
add
or
fwait
xchg
out
gs
pop
cwtl
and
test
js
lds
test
dec
leave
fsts
sahf
sub
adc
pushf
js
mov
aad
lret
mov
push
mov
inc
movsl
cs
out
sub
lods
dec
rcrl
mov
fstpt
lret
cmp
sbb
mov
enter
push
dec
gs
adc
jo
fwait
xlat
and
pop
out
call
add
add
adc
fwait
jmp
cmc
mov
or
clc
sbb
lcall
xor
repz
cmpl
push
in
iret
add
fidivrs
inc
ret
adc
out
imul
cs
fsubl
fcoml
out
insl
bnd
push
mov
bound
adc
pop
adc
mov
adc
add
jp
iret
fidivl
scas
push
inc
push
jle
fisttpl
xchg
hlt
subb
ret
icebp
xorl
push
cli
push
push
cmp
fldt
call
adc
mov
std
insl
sub
jbe
xor
and
add
insb
xor
jmp
das
test
dec
repnz
add
push
lods
xchg
pusha
and
sub
leave
icebp
push
popf
sbb
imul
fisubs
add
mov
cmovp
cmpsl
cwtl
and
jb
hlt
inc
jl
jp
fidivrs
mov
daa
aam
nop
scas
nop
sbb
sbb
and
lock
xor
or
movsl
int3
dec
xlat
fimuls
cs
jno
in
push
xor
fildl
mulb
xchg
movsl
scas
insl
jmp
dec
sbb
std
in
popa
xchg
and
movsw
test
mov
adc
mov
adc
mov
popa
xor
push
pushf
popf
push
mov
shl
mov
adcl
aas
data16
test
in
or
or
addr16
icebp
pusha
es
jmp
sbbl
data16
mov
sub
stos
mov
hlt
inc
jnp
adc
jg
jbe
fsubrp
xchg
sbb
std
push
shl
test
sahf
and
arpl
cmp
pop
xchg
push
sbb
xor
jb
out
fninit
fisubrl
in
dec
clc
add
adc
adc
inc
push
lret
stc
movsb
fidivrl
cmpb
jl
push
sbb
inc
aam
dec
pop
pop
inc
popf
push
mov
rcr
jno
mov
popa
cmp
jmp
lret
sahf
enter
je
or
in
in
dec
in
lcall
sub
rcll
lea
xchg
repz
mov
jge
mov
js
test
fdivr
movsl
orb
lock
jbe
pop
fbstp
inc
push
cld
add
aas
sbb
sbb
fldt
mov
fistpl
ljmp
push
inc
nop
xor
mov
push
mov
mov
loop
ret
test
fisubrl
ja
leave
dec
cwtl
fwait
adc
and
gs
movsb
into
xor
sbb
outsb
aaa
mov
pop
push
sbb
and
es
test
mov
push
and
cwtl
pop
insb
jbe
mov
jns
xchg
dec
iret
call
jae
xchg
inc
hlt
shl
fs
jnp
sar
jo
xchg
xchg
inc
popf
cs
xchg
adc
aam
jo
lods
push
insb
cld
in
sti
or
inc
jnp
push
xchg
and
test
jbe
and
scas
mov
in
sti
dec
adc
cwtl
sub
mov
push
gs
pop
fbstp
inc
es
inc
bound
int
push
int
bound
mov
push
xchg
sbb
dec
lods
ret
adc
pushf
jg
cmp
cmp
lahf
arpl
clc
sbb
aas
in
sub
jp
testb
stos
mov
push
lea
inc
xor
int
jmp
jmp
addr16
imul
xchg
test
pop
inc
push
outsl
lds
sub
xor
inc
fdivrl
dec
jno
xlat
sub
cmpsl
lock
or
int3
pop
aas
outsl
fidivs
lods
sub
jb
stc
sub
fists
movsb
pop
cmp
xchg
pop
lods
mov
pushf
loop
out
add
or
mov
shlb
loop
cwtl
xchg
mov
dec
mov
mov
jle
dec
push
or
pop
cmp
sub
icebp
js
push
daa
je
push
in
pop
and
push
cmp
mov
daa
add
dec
fcmovu
test
mov
xor
insl
add
fimull
clc
push
mov
aam
jp
push
dec
ljmp
cmpsb
inc
enter
ret
dec
mov
cli
lret
les
out
pop
stos
xor
lahf
jne
jmp
call
xlat
sbb
out
data16
sbb
leave
fstp
sbb
mov
dec
fbld
jl
or
fcompl
and
and
push
fwait
mov
fcmove
lods
data16
mov
mov
rcr
xchg
mov
push
mov
sub
add
std
xorb
and
daa
mov
fmuls
mov
xchg
repnz
and
jno
xchg
std
out
sub
pusha
cltd
enter
es
pop
popf
stos
popf
sti
add
pop
dec
cmp
jne
jmp
hlt
popf
sbb
add
or
xchg
pop
mov
das
fmulp
loop
aas
ret
pop
pop
fwait
sub
sbb
aam
test
dec
pop
jge
push
in
mov
scas
push
loopne
nop
pusha
sbb
popf
hlt
mov
cld
fsubs
cmp
ds
jp
mov
adc
and
cmpl
xchg
das
cmp
xchg
pop
in
push
les
mov
ret
nop
push
flds
adc
das
lods
test
add
mov
roll
push
popf
inc
leave
out
mov
enter
stc
orb
xor
scas
stos
les
add
mov
add
mov
dec
adc
pop
ljmp
pop
fimuls
cs
out
in
notl
xchg
int
jb
push
xchg
ret
sbb
push
pusha
arpl
scas
add
xor
and
add
cmp
mov
adc
dec
loope
cmp
mov
test
rcrl
xor
sbb
dec
in
je
sbb
and
rcrb
adc
out
clc
pop
enter
fs
mov
insl
add
xchg
mov
bound
jle
and
cmpsb
mov
mov
jae
das
dec
sbb
xlat
dec
int
pushf
pop
sbb
jle
pop
lcall
xchg
mov
pop
xchg
leave
jg
imul
test
cmc
into
and
inc
out
xchg
cmpsl
push
dec
add
or
inc
jg
iret
pop
cld
hlt
xchg
shrl
dec
aad
gs
ss
jl
loope
out
mov
mov
and
mov
clc
push
sbb
push
repnz
push
bound
test
push
mov
cwtl
adc
sbb
roll
mov
out
jbe
out
xchg
cmp
jb
pushf
dec
pslld
or
pop
lods
cltd
jbe
add
fists
sbb
lcall
mull
leave
cmpsl
outsl
in
rorb
cli
jo
cmp
dec
push
push
cwtl
repnz
imulb
divb
into
jle
adcb
adc
dec
leave
sub
mov
test
mov
jbe
mov
jo
in
or
lods
mov
mov
mov
cwtl
ror
aad
sub
mov
fucomi
sub
push
inc
add
mov
push
push
add
mov
addr16
xchg
pop
testb
test
sub
cmp
mov
rolb
inc
cmc
dec
and
dec
in
mov
repz
adc
sbb
lahf
aam
repnz
sbb
pop
and
and
ja
inc
and
mov
gs
imul
sub
inc
std
add
pop
xor
andb
jns
and
sahf
cs
movsl
in
scas
push
inc
ja
adc
pop
popf
idivb
jmp
mov
mov
adc
xor
popf
stos
sub
push
popl
popa
fwait
gs
xchg
fisttps
mov
mov
in
xchg
mov
jns
fstpt
jmp
jg
sbb
loopne
insl
push
cmp
push
mov
in
enter
adc
or
loope
test
stos
scas
cmpl
popa
int3
dec
xchg
or
xor
xchg
cli
pop
rcrl
push
cmp
inc
inc
xor
pop
pop
sbb
and
and
sahf
push
loope
shl
int
sti
add
loop
mov
adc
mov
push
xor
pop
test
into
mov
aad
rclb
loop
enter
lret
lds
jo
xor
fwait
and
add
mov
imul
jle
std
jg
xchg
int
or
int
push
sbbb
xchg
push
lret
cltd
lds
dec
sbb
out
sbb
fidivrl
js
bound
mov
roll
sbb
dec
sbb
scas
fdivl
add
int3
arpl
cwtl
mov
jl
lock
cmc
sub
test
mov
mov
test
jp
mov
out
xchg
adc
rolb
cwtl
movsb
sub
inc
push
mov
adc
cmp
mov
popa
adc
inc
insl
jae
cmp
xlat
pop
movsl
jno
jg
popf
arpl
mov
mov
test
or
movb
in
orl
xchg
lods
cs
rcll
pop
mov
push
sub
xor
push
test
fadds
sub
fstpl
mov
sub
add
xchg
iret
mov
loope
mov
jg
xchg
mov
mov
jl
dec
pop
pop
jns
xchg
xchg
xor
cmp
adc
scas
sti
sbb
ficoms
pop
lea
mov
dec
lahf
mov
in
rcl
les
icebp
push
sub
add
stos
xchg
flds
mov
add
out
cmp
rol
rcll
aas
push
cmpsb
pop
adc
and
test
faddp
paddb
cli
dec
repz
pusha
data16
adc
mov
push
test
iret
xor
in
mov
stos
dec
jg
add
ret
and
cltd
sub
sub
jbe
test
inc
stos
arpl
cli
jge
mov
sbbl
sub
mov
fcomp
push
cmp
fisttpl
fs
test
dec
and
jns
lods
mov
aam
jo
cmp
adc
fcompl
push
enter
lahf
popf
fwait
scas
push
in
out
mov
int3
movsl
stc
add
xchg
nop
aam
sbb
xor
push
mov
add
je
in
ss
mov
in
push
nop
mov
cmpsl
sub
lcall
es
repz
shlb
adc
fs
jmp
test
cs
dec
dec
out
mov
test
les
fs
fstps
fs
adc
add
lret
aas
push
pop
cmp
inc
scas
sub
out
mov
xchg
dec
pop
pushf
call
lret
inc
or
xchg
adc
cltd
sahf
xchg
clc
int
sbb
inc
xchg
jbe
in
adc
xor
mov
hlt
aas
inc
push
pop
cs
or
push
mov
push
out
cmpl
add
out
mov
imul
hlt
out
dec
and
sbb
call
fisttpl
pop
sbb
test
call
mov
inc
pop
lret
xchg
pop
lds
into
pop
aaa
pop
repnz
sbbb
inc
xor
sbb
mov
mov
jecxz
nop
aas
dec
lds
mov
addl
pop
push
or
dec
std
pop
repnz
mov
cmpsl
out
lock
adc
fs
jmp
dec
jns
jp
xchg
jns
xorl
sub
or
dec
insb
mov
out
xor
xchg
cld
inc
cmp
idivl
fdivl
and
addr16
daa
loope
es
test
shrl
inc
jno
outsb
add
push
movsb
loop
lds
int3
daa
dec
pop
mov
cld
xor
push
mov
imul
lcall
loop
dec
mov
adc
sbb
hlt
pop
sub
and
insb
stos
in
arpl
int
dec
scas
pop
mov
sbb
add
mov
sub
dec
mov
mov
inc
aas
mov
pop
sahf
shlb
lahf
cmp
cmp
mov
and
adc
ret
fisubrs
xor
xor
xor
icebp
mov
stos
jmp
lds
data16
cli
mov
hlt
lock
inc
push
mov
int
daa
or
dec
mov
sbb
sbb
cs
push
xor
hlt
pop
or
fsubs
ss
xchg
sarb
xor
test
lcall
push
adc
cmp
popf
xchg
cmc
imul
repz
ss
loopne
cmpb
stos
add
cmpsb
xor
fadd
outsl
or
rolb
push
fcoms
iret
inc
test
sub
jno
out
xchg
xor
jmp
lock
cmp
mov
iret
cld
ljmp
inc
fbld
xchg
cmp
subl
or
call
xor
test
out
ja
aad
ljmp
inc
popf
fld
xor
lea
dec
std
roll
adc
sbb
sub
and
lods
faddp
stos
push
pop
cmpsb
adc
sahf
push
rcrl
mov
lods
or
in
loopne
stc
lahf
fs
fwait
ss
inc
xor
xor
xlat
bnd
xor
out
inc
lea
insb
push
push
xchg
shll
dec
mov
dec
icebp
ds
xchg
add
xor
aam
mov
mov
mov
mov
mov
mov
call
imul
hlt
test
sbbl
ret
pop
in
mov
mov
je
mov
ds
push
inc
xchg
pop
cmpsb
mov
std
repz
jbe
out
jmp
add
ret
lret
mov
mov
lock
outsl
pop
mov
cmp
cmp
adc
sub
loope
lahf
cmc
ljmp
mov
out
add
mov
sbb
mov
xchg
mov
cwtl
pop
jge
rorb
push
sub
je
shlb
aas
in
aad
and
mov
fcomip
cs
push
mov
hlt
popa
sub
popa
mov
out
xorb
adc
inc
ret
sub
and
inc
adc
xchg
loopne
sub
lds
sahf
cwtl
xlat
stos
sbb
mov
or
inc
mov
xor
popa
repnz
aaa
push
xor
cli
mov
pop
lods
jno
push
lcall
lret
dec
xorb
scas
lds
jne
popf
push
leave
repnz
or
out
pop
roll
sbb
jle
divb
jb
hlt
testl
pop
or
call
add
xor
cmp
stos
cld
push
inc
xchg
pusha
lock
mov
fdivl
mov
lds
pop
push
stos
test
clc
sub
jp
movsb
or
add
sahf
inc
cmp
je
inc
movsl
jno
mov
loope
bound
int3
aaa
or
out
ss
loopne
lret
dec
pushf
scas
shll
bound
mov
repnz
stos
mov
jno
sbb
out
testb
jl
push
mov
lds
and
insb
jecxz
mov
lods
xchg
mov
push
divb
and
mov
push
adc
pop
jbe
jg
fst
push
fildl
cmpsb
dec
repnz
test
sub
cmp
sub
push
out
xor
mov
inc
jp
push
lods
aas
and
pop
pop
dec
inc
lods
push
scas
push
jecxz
adc
xor
les
pusha
mov
mov
jmp
sahf
imul
push
sti
jb
adc
dec
ljmp
insb
sti
int
je
sbb
lock
add
pop
imul
pop
mov
iret
in
rorl
sbb
fsub
add
fadds
and
mov
scas
cld
inc
jae
enter
xchg
sbb
jns
stc
jp
shrb
scas
or
xchg
ljmp
push
xor
xchg
add
pop
test
fistl
mulb
or
pushf
inc
push
shll
imul
push
cmpb
pop
stc
xchg
fiadds
xlat
cltd
add
cmpsl
inc
fmulp
ljmp
cmp
push
lret
push
sbb
dec
inc
lret
in
jp
jl
loop
or
sbb
adc
sbb
repnz
fadds
ljmp
adc
cmpsl
xor
xor
fnsave
js
aas
sarl
cmp
pop
dec
and
movsl
adc
mov
xor
jo
add
adc
imul
mov
dec
lea
push
jae
imul
pop
mov
xchg
es
dec
xchg
push
test
jmp
test
test
sbb
mov
mov
xchg
ljmp
lock
ds
sub
push
scas
mov
or
adcb
push
sbb
pop
inc
scas
and
int
shlb
pop
sti
and
push
inc
ljmp
xchg
mov
into
add
and
cmpsb
mov
mov
data16
idivb
ja
mov
sub
or
pop
icebp
or
shlb
xchg
movl
das
cmp
adc
sub
push
xchg
push
xchg
movsl
fisubs
in
mov
das
pop
mov
dec
jno
popf
push
sub
jle
jb
addr16
mulb
cmpsb
xchg
sahf
xor
out
movsl
lcall
outsl
push
cmp
ja
push
fsubrl
lock
cld
movsb
push
mov
or
in
xor
and
xchg
jns
mov
jo
inc
int3
div
push
leave
inc
test
fs
sbb
sub
mov
cmp
mov
shr
loopne
shrl
mov
cld
jne
cmp
push
test
add
push
insb
inc
mov
popf
mov
lret
shr
cmp
pushf
enter
mov
dec
adc
pop
dec
cli
pop
pop
or
cmp
daa
imul
mov
out
int
test
sub
push
xor
repz
popf
push
cwtl
in
sahf
jae
es
imul
int
lret
add
cmpsb
and
cmovbe
push
out
repz
iret
addr16
inc
scas
jbe
xor
dec
push
mov
mov
int
ja
ss
leave
inc
jns
mov
jb
daa
dec
adc
or
mov
pop
addr16
fucompp
add
mov
or
sahf
ss
dec
push
test
xor
movsb
pop
mov
stos
push
lds
ja
loop
js
aaa
rcl
mov
lods
es
aad
repnz
ljmp
mov
xchg
std
loop
or
repnz
lea
xor
loop
adc
jbe
and
push
imul
push
movsb
mov
daa
sbb
cmp
mov
mov
adc
das
push
imulb
loop
out
push
ret
movb
enter
sbb
push
push
and
mov
add
push
push
into
cmp
rcll
mov
and
dec
loopne
and
sbb
mov
addr16
shl
xlat
push
and
loop
and
push
fdivrs
inc
test
or
xchg
adc
dec
xlat
lods
jecxz
inc
xchg
mov
adc
into
xchg
out
adc
lods
push
pop
add
sahf
jle
add
dec
inc
xchg
mov
pop
ja
mov
loope
ds
sbbb
and
fs
lret
mov
in
fistpll
fmul
mov
push
sbb
clc
aas
cmp
xchg
adc
mov
fimull
test
fcomps
push
jno
mov
or
jle
clc
ljmp
mov
enter
or
xchg
ret
cmpsl
repz
cmp
push
icebp
insb
dec
pop
push
cmp
mov
jno
jo
pop
mov
lcall
dec
cmp
dec
mov
test
in
and
outsb
add
pop
jb
imul
and
mov
push
add
jmp
mov
data16
mov
sub
sahf
sbb
stos
pop
negl
xor
clc
sbb
jae
loopne
outsb
lret
sahf
sbb
sub
xor
out
xchg
loope
sub
jbe
xchg
in
xchg
movsl
outsl
aaa
std
aam
dec
fwait
mov
jmp
movsl
or
sar
or
pusha
jmp
rcrl
imul
sub
call
mov
inc
xchg
cmpsl
xor
xchg
mov
repz
out
pushf
inc
cmp
add
pop
pop
cmpl
push
int3
mov
jg
jne
fwait
les
and
mov
sub
arpl
mov
sub
pop
ja
and
scas
out
add
outsl
cwtl
xor
out
mov
pop
push
pop
cmc
test
dec
inc
dec
ret
adc
push
notb
inc
lea
fwait
lahf
cmp
jne
sub
xchg
into
jne
shrl
mov
xchg
cli
add
xchg
rorb
fistl
sub
cmovns
sbb
sub
mov
pop
cmp
push
ja
add
cmpsl
push
xor
mov
repnz
cld
arpl
addb
movsl
pop
and
daa
test
aad
movsb
pop
or
sbb
inc
mov
xchg
push
cmp
mov
inc
push
cmp
xchg
pop
pop
jo
dec
cmp
mov
sub
out
push
push
arpl
add
push
dec
minps
in
rclb
push
dec
mov
jg
in
jo
loope
mov
xchg
into
cmc
adc
enter
or
addr16
scas
neg
cmpsl
push
sbb
adc
pushf
jecxz
outsl
aaa
insl
iret
dec
mov
mov
fnsave
popa
rclb
outsl
insl
and
enter
or
jge
cmp
aaa
cmp
std
ljmp
push
mov
inc
repnz
push
mov
inc
inc
jns
mov
pop
or
mov
push
mov
jmp
inc
lea
sub
cmp
cmp
xchg
add
mov
icebp
mov
or
xor
pop
and
dec
dec
or
aam
cmp
pusha
sub
mov
cltd
imul
dec
xlat
cltd
push
shll
ss
fcmovne
jbe
outsb
js
rcll
in
ds
xor
pop
xor
xchg
cmpsl
popa
adc
push
push
cmp
sub
xor
add
xor
or
cmp
jae
add
rcll
cmp
pop
test
dec
fstpl
adc
cs
dec
fistps
iret
or
xchg
rcrl
les
jl
mov
pusha
push
roll
jmp
pop
pop
xchg
jp
in
pop
in
xchg
nop
movsb
ds
mov
lods
dec
sub
push
lock
testb
cmpsl
mov
daa
in
mov
dec
out
push
xchg
push
ds
xlat
sbb
lds
fst
jne
hlt
push
inc
shufps
fsubs
lock
jl
or
sub
sbb
shrl
dec
mov
scas
mov
pop
lea
test
outsb
bound
stos
cmp
or
adc
pop
sbb
js
xor
pop
jbe
scas
insb
and
popa
dec
cmp
in
inc
pop
andb
aaa
fstpt
dec
mov
push
hlt
mov
test
insl
inc
lods
mov
pop
xor
aad
jae
pop
mov
jb
dec
insb
insb
push
cmpsb
mov
and
jne
jno
mov
xchg
push
sbb
mov
xchg
jp
mov
or
sub
jns
loopne
cwtl
pushf
aas
mov
test
lcall
or
push
jne
stc
sub
mov
ret
test
jp
mov
lods
jnp
lds
or
or
sub
out
or
out
adc
xor
cmpb
movsl
pop
add
inc
mov
or
xchg
repnz
lahf
inc
sbb
nop
push
xlat
jge
stos
test
mov
mov
dec
adc
pop
das
add
jmp
outsl
sub
daa
jp
testb
push
xchg
rcll
dec
dec
pushf
mov
loop
mov
out
xchg
cmp
push
dec
inc
push
xchg
sbb
out
inc
adc
in
adc
in
popa
sbb
data16
outsb
inc
out
push
and
std
ss
sub
iret
mov
fdivr
repnz
lret
add
cmpsl
mov
push
or
cmpsl
js,pn
mov
push
aad
dec
add
std
or
cmp
lahf
jae
fiaddl
mov
mov
insl
xchg
push
mov
enter
shll
stos
or
inc
xor
mov
mov
pop
aaa
imul
jle
cli
scas
repnz
xor
hlt
subb
xchg
cmp
xor
leave
aam
push
les
lret
inc
cwtl
mov
adc
in
scas
icebp
adc
xchg
mov
lods
and
in
or
adc
lock
and
in
daa
add
mov
sar
or
jns
mov
dec
in
cmp
sub
jmp
fwait
adc
in
ret
mov
jo
pusha
mov
stos
sbb
xor
inc
cmovnp
outsb
mov
mov
lock
xor
push
sbb
xchg
jno
push
mov
lcall
cld
mov
out
int
sbb
fincstp
jae
in
dec
mov
sbbb
insl
mov
inc
mov
mov
jbe
xchg
negb
xchg
in
aam
lods
mov
mov
mov
lea
in
inc
js
jg
pop
nop
push
lahf
lret
jmp
gs
xor
testl
dec
dec
cmp
cmpsb
jle
jmp
inc
xor
jl
test
jnp
xchg
aaa
ret
add
push
sub
lock
cmp
jle
adc
mov
or
test
xor
out
hlt
maskmovq
testl
cmp
adc
scas
faddl
mov
dec
popa
les
fsubp
int
mov
mov
int3
ret
sbb
insl
lods
sbb
sub
pop
les
insl
inc
xchg
mov
lea
hlt
jnp
xor
std
inc
andl
adc
inc
lahf
add
loopne
inc
cmpsb
dec
pop
cmpl
bound
cld
outsl
mov
mov
aas
adc
jne
mov
pop
pop
clc
insl
pop
dec
fidivs
dec
add
in
jno
cmp
push
ficoml
pop
loop
pushf
xor
push
enter
loopne
out
xor
push
sbb
test
xchg
xchg
add
jecxz
imul
in
loop
pushf
repnz
jle
mov
or
fs
jb
jle
sbb
or
mov
call
and
out
xchg
movl
add
mov
es
dec
inc
inc
sbb
sbb
sbb
loopne
std
pusha
add
sbb
loope
mov
fsub
imul
outsb
in
push
inc
or
cs
scas
pop
arpl
aad
or
jns
adcl
popa
addr16
mov
scas
mov
in
ffreep
mov
adc
sbb
scas
xor
pop
inc
fdivrl
dec
xor
or
out
and
outsl
test
inc
pop
sbb
mov
jo
nop
mov
xchg
fidivrl
bound
jmp
addl
dec
rolb
dec
shlb
xlat
cmp
cmp
xor
sbb
sub
jno
mov
cmp
jns
stc
push
lret
mov
lods
popf
pop
dec
mov
iret
call
sbb
or
push
jne
scas
cmp
and
ljmp
lea
cmpsb
out
cmpsl
xchg
xor
daa
enter
lret
sub
mov
xchg
jle
push
insb
sub
je
mov
sub
sub
jmp
js
mov
dec
clc
xchg
xchg
addb
int3
cmp
ret
jmp
jno
jnp
add
xor
add
xchg
int3
test
adcb
pusha
dec
inc
xchg
mov
or
mov
lds
push
insl
pop
fistps
daa
jae
ret
cld
adc
test
aad
cmc
cmpsl
stc
xchg
div
outsl
or
pop
jbe
xchg
cwtl
out
jge
lock
sub
xchg
aad
aad
fldt
int3
jge
lods
cmp
sbb
lret
or
jne
stc
push
and
pop
add
lcall
mov
push
int
xor
adc
push
sub
mov
imul
sbb
in
and
lret
scas
inc
lret
shll
cmpsl
mov
or
push
pop
ret
or
push
test
imul
call
or
pusha
dec
add
mov
cmc
sbb
cmpsb
int
ret
fs
add
imul
pop
jp
sarb
sbb
pop
aaa
xor
js
sub
les
rcll
popf
ja
aam
fdivrs
xchg
shlb
xchg
popf
aam
xorl
out
cmp
ja
imul
pop
cwtl
or
out
push
jecxz
je
cmp
push
pop
push
stc
jle
scas
pop
inc
xchg
push
adc
or
data16
push
inc
cmp
mov
ds
sbb
cmp
daa
pop
and
sub
js
fstps
inc
out
adc
loop
dec
in
gs
std
ret
test
sub
adc
fdivr
sbb
jl
mov
shrl
sbb
or
cltd
cmp
xor
adc
dec
jb
clc
call
mov
mov
ss
dec
enter
jl
xchg
mov
js
rorb
insb
movsb
orl
or
push
insl
xor
in
mov
out
aam
stos
jecxz
out
xchg
jb
jle
inc
lret
mov
pop
cltd
add
ja
pop
xor
push
imul
fildl
sub
int
jg
divb
mov
xchg
mov
push
movsl
ljmp
pop
movsl
mov
mov
sahf
mov
leave
adc
call
arpl
jbe
stos
arpl
pop
ret
stc
xor
inc
test
jmp
leave
daa
rcrb
push
adc
lret
shl
push
lods
jle
cmpsl
xchg
push
jl
jae
inc
gs
pop
lods
push
cmp
xchg
mov
pop
push
scas
mov
cmpl
sub
andb
sarl
pushf
add
loop
enter
fs
sahf
pop
pop
inc
push
mov
pop
xor
arpl
xchg
xchg
sbb
arpl
inc
mov
imul
pop
aad
gs
and
mov
pusha
adc
add
call
push
mov
out
add
push
mov
loop
push
repz
jle
jge
shl
repz
sbb
dec
bound
pop
dec
adcl
shll
fcmovb
xchg
imul
fidivs
sbb
cmp
jo
cmp
rcrl
xchg
xchg
cmp
jo
cmp
mov
xchg
sub
scas
daa
xchg
dec
pop
aaa
cmp
mov
fstpl
pusha
push
add
jl
rcll
gs
mov
ja
in
fs
mov
cli
xchg
jo
movsb
nop
cld
scas
inc
pop
or
je
xlat
and
ss
and
cmp
dec
adc
adc
popf
and
sarl
mov
dec
aaa
lcall
push
xor
imul
add
cld
cltd
testb
fidivs
int3
fstpl
add
push
fidivrs
test
pop
push
jnp
pusha
ja
std
push
adc
push
cld
lea
adc
adc
dec
dec
and
inc
repnz
lods
xchg
inc
inc
es
call
jg
ret
loop
adc
pop
je
cmp
add
push
mull
je
ja
inc
push
nop
sub
shl
imul
ja
mov
ret
lahf
xchg
icebp
xor
and
sbb
xchg
sub
mov
repz
inc
adc
adc
mov
xor
add
gs
jmp
inc
xchg
pop
leave
mov
enter
adc
jnp
sub
mov
movsl
mov
inc
xchg
add
push
test
pop
dec
and
jnp
mov
nop
mov
cmp
cmp
scas
lcall
push
or
push
in
mov
jb
xchg
fsubr
xchg
dec
repz
xchg
mov
xchg
data16
or
sbb
pop
cmp
test
and
mov
xchg
mov
inc
mov
ja
cltd
xor
pushf
mov
and
cmp
ret
inc
sbb
jge
or
push
outsb
xor
js
hlt
mov
lods
mov
xor
jb
loope
bound
bound
test
sbb
rcll
mov
inc
push
frstor
xchg
sub
sub
push
push
sbb
mov
idivb
fldcw
adc
loop
repnz
adc
inc
cmc
enter
push
dec
sub
mov
lret
repnz
cmpsb
das
mov
andb
and
fmull
std
test
xchg
ret
inc
dec
cmc
jns
dec
mov
add
movl
outsl
cltd
shl
cmpsb
imul
xor
cmpl
xchg
popf
std
cmc
fucom
in
fisubl
push
mov
jecxz
push
loope
fldenv
nop
push
add
mov
adc
shl
pop
call
cwtl
scas
leave
movb
xor
shll
jmp
repnz
inc
addr16
insb
lods
hlt
ljmp
push
jge
or
out
inc
inc
negl
cmp
or
pop
outsl
cs
sarb
xor
loop
sub
or
test
lods
mov
and
push
mov
jecxz
das
dec
jle
cmp
mov
mov
movsb
int
daa
add
movsl
iret
sbb
lahf
int3
xor
outsb
adcb
and
xor
mov
mov
jge
es
jmp
add
dec
pop
in
dec
std
inc
push
shll
pop
stos
aaa
loop
sbb
and
mov
sub
leave
fildl
mov
mov
lahf
pop
pop
dec
xchg
add
mov
in
mov
cld
lods
cmp
ret
jno
stc
inc
aas
sub
or
push
sbb
inc
mov
in
xchg
leave
mov
pop
out
movl
pop
test
pop
cltd
adc
lods
sub
and
cmp
jg
lods
jg
sub
enter
xor
fcomps
jae
jmp
test
xchg
aam
fs
cmp
shlb
popa
cmp
push
popa
push
mov
jae
mov
shlb
push
dec
pusha
leave
and
xchg
ds
cs
adc
cli
dec
pushf
imul
test
dec
sub
mov
push
mov
inc
mov
test
in
daa
xor
mov
cmp
dec
dec
inc
and
pop
cld
andb
dec
aas
pop
cmp
jae
xor
sub
popa
adc
outsl
sbb
adc
mov
repz
rorb
inc
bound
xor
xorl
push
loop
pop
leave
aad
xchg
xorb
dec
jl
lds
mov
insl
xchg
les
dec
mov
jmp
dec
mov
mov
adc
icebp
hlt
xor
push
stos
dec
jbe
jnp
sarl
cmp
mov
and
pop
mov
dec
or
adc
push
iret
add
lret
adc
jbe
push
push
mov
stos
pop
jge
outsl
push
lds
and
pop
mov
cmc
mov
jge
jecxz
add
mov
jns
cmpsb
insb
pop
mov
outsb
in
mov
shl
cmp
js
das
and
add
add
adc
jb
pop
leave
popa
and
mov
pop
out
or
jbe
add
leave
mov
repnz
pop
inc
lds
or
or
sbb
and
xor
inc
mov
gs
mov
xlat
gs
iret
xchg
shll
arpl
inc
adc
mov
sub
pop
lds
ds
and
stos
icebp
pop
pushf
test
mov
pop
and
add
mov
jnp
or
inc
arpl
leave
in
scas
lods
jg
hlt
inc
sub
mov
xchg
xchg
gs
sbb
xchg
shll
xor
mov
and
sub
nop
inc
xchg
fninit
xor
jno
adc
insl
faddl
arpl
jg
jmp
mov
and
mov
ss
jne
out
mov
jb
shlb
push
hlt
mov
insl
mov
pop
scas
mov
bound
sub
ja
std
cs
push
out
cmp
mov
jb
test
ret
inc
sahf
sarl
pusha
pop
push
test
xchg
scas
orb
cli
into
jbe
ja
fldcw
cmpsb
shll
xor
jg
call
push
pop
inc
push
loop
cs
xchg
clc
push
cmp
push
fs
lds
push
adc
adc
repz
pop
test
std
sahf
cmp
xchg
and
push
mov
push
adc
xchg
lret
sbb
pop
mov
mov
out
gs
insl
xchg
call
enter
aaa
mov
outsb
test
pop
xchg
dec
sbb
or
adc
push
cmc
test
mov
push
call
cltd
mov
imul
dec
fs
mov
adc
fnstenv
ret
mov
cld
das
mov
cmp
mov
std
aaa
pop
xorb
inc
and
stos
div
call
jp
sub
push
lea
popa
mov
sbb
xchg
fwait
outsb
add
push
add
mov
cmp
xor
jmp
xchg
and
pop
push
xor
xor
lods
inc
mul
mov
mov
xchg
roll
fildl
shl
leave
out
imul
imul
mov
xor
add
push
sbb
bound
loopne
daa
out
imul
call
cmp
ss
es
add
lods
inc
jae
pop
mov
int
iret
pop
mov
aaa
mov
int
sarb
adc
jecxz
dec
or
test
test
in
loopne
mov
pop
jecxz
and
fimull
imull
dec
addr16
xchg
test
js
sub
jg
imul
xor
mov
cmp
add
lods
mov
push
insb
ljmp
lods
xchg
insb
incb
dec
push
jecxz
enter
mov
add
pop
fs
in
jae
std
icebp
clc
inc
cmpsb
scas
dec
and
push
fsts
idivl
enter
cli
call
push
shlb
mov
jp
push
in
inc
jno
jp
out
sub
movsl
stos
push
jo
lret
xchg
stc
xchg
stc
and
leave
sbb
test
dec
fbld
mov
mov
push
daa
shl
push
xor
mov
or
pop
int
mov
leave
in
rclb
mov
mov
hlt
mov
push
sub
js
mov
push
add
sub
inc
xor
lds
mov
pusha
mov
test
pinsrw
pop
and
or
fs
cmp
lock
cli
xor
add
cmpsb
notb
rcrb
dec
or
int
outsl
sub
xchg
out
cmpl
flds
js
loopne
mov
or
adc
sub
lret
ja
sbb
inc
adc
fcomp
inc
negl
jae
lahf
orb
cmp
scas
sbb
sahf
scas
ss
loopne
xor
push
xchg
stc
or
pop
cmp
jge
clc
ss
notl
mov
mov
jae
inc
push
stc
dec
mov
mov
sarl
subl
xor
shl
xchg
and
mov
lcall
ret
push
push
add
adc
and
push
fcomps
add
sbb
das
push
adc
test
les
mov
test
mov
dec
dec
repz
xor
or
or
insb
cmpsb
pop
pop
and
xchg
gs
jmp
cmc
dec
insb
mov
dec
cs
loope
mov
push
push
lcall
pop
push
mov
inc
js
pushf
push
shlb
sub
je
inc
cs
fstpt
sbb
adc
int3
fcomip
lret
sbb
jle
test
loope
es
push
arpl
cld
jnp
and
mov
push
and
test
inc
xor
imul
xor
inc
mov
ret
jle
pop
adc
dec
enter
or
ss
lock
loopne
lret
pop
adc
add
stos
sub
fildl
ja
dec
adcl
or
ficoms
nop
xchg
sbb
frstor
xchg
in
rep
sbb
lds
pop
stos
sbb
inc
lods
movsb
arpl
cmpb
rcrl
test
xor
cmp
out
loopne
and
repnz
das
js
int
mov
aam
test
add
lahf
jae
mov
sbb
mov
pop
into
mov
push
sbb
sub
and
out
add
hlt
test
mov
sbb
loop
jbe
iret
or
sub
dec
jecxz
arpl
dec
push
jo
inc
clc
testl
adc
mov
jl
add
pusha
fstpt
pop
fsts
ds
in
enter
jne
pop
ss
push
fildl
les
xor
pop
lds
in
xchg
testl
adc
add
add
mov
lret
jo
inc
mov
push
mov
iret
adc
push
mov
mov
faddl
cmp
adc
cmp
mov
jecxz
and
jno
jg
fwait
mov
mull
sub
inc
xchg
mov
pop
cmp
bnd
std
mov
clc
out
mov
xchg
lahf
xchg
sub
filds
sub
rcl
fwait
ljmp
test
loop
jno
popf
rcll
sub
std
fisttps
sub
sub
add
lea
add
in
xchg
prefetch
or
out
xor
adc
xchg
repnz
and
fbstp
jp
aaa
lcall
pop
dec
scas
aas
pop
ljmp
out
cmp
rorb
add
jl
and
and
daa
mov
inc
addr16
rorb
in
and
shrl
es
add
cmp
aaa
fcom
xor
ss
out
enter
adc
jl
add
or
ja
jbe
dec
out
repnz
xchg
pop
and
data16
lock
xchg
cmp
xor
incl
sbbb
scas
pop
xchg
inc
or
cmp
das
or
sbb
add
or
adc
xchg
shlb
xlat
std
xor
pusha
aad
divl
push
inc
int
and
incb
cmpsb
ret
imul
mov
push
and
add
jae
int
into
mov
pop
add
sahf
out
mov
shrb
fdivrp
popf
cld
cmp
ficoml
imul
test
push
iret
mov
cli
or
cmp
dec
mov
pop
test
cmp
test
daa
and
and
push
adc
lock
clc
dec
leave
es
imul
adc
xchg
in
xchg
xlat
fistpl
icebp
ret
inc
jl
xor
subb
mov
movsb
gs
dec
clc
cld
fidivrl
mov
push
xlat
jg
aam
in
sbb
push
adc
sbb
mov
mov
or
stos
test
cmp
test
mov
mov
lcall
push
push
xchg
lea
fldcw
push
xchg
dec
mov
sub
add
mov
jp
dec
push
out
push
dec
mov
xchg
shll
adc
out
push
sub
push
stc
nop
test
sub
sub
mov
mov
das
inc
clc
daa
mov
jmp
xor
pop
scas
and
ljmp
cltd
dec
loop
lock
and
cmpsb
xor
je
movsl
lcall
dec
cmp
adc
adc
movsl
or
out
push
mov
push
inc
test
adc
push
sahf
push
mov
or
out
jmp
lret
aas
jmp
lret
sub
mov
xchg
mov
jnp
pop
xchg
adc
push
arpl
or
push
ljmp
lea
aas
andb
mov
fwait
pop
push
mov
cmp
pop
inc
incl
jg
dec
stos
add
aaa
sbb
xorb
mov
pop
push
pop
scas
xor
cmp
add
testl
and
enter
mov
shrb
sub
adc
add
in
sub
adc
push
jae
mov
jb
mov
ljmp
xor
mov
fmull
add
dec
sbb
or
call
inc
stos
jg
stos
faddp
fnstcw
push
stos
mov
pop
es
pop
sub
scas
cs
loope
add
push
jmp
stos
mov
sub
dec
adc
outsb
out
and
add
xchg
or
jg
sbb
fcomip
push
setno
xchg
mov
adc
fistpl
shrb
lcall
aaa
xchg
aas
movsl
cmp
mov
loop
loopne
sub
call
fstpt
sub
leave
iret
or
xor
fildl
mov
pushf
adc
mov
ret
outsl
fs
or
dec
ret
in
aad
mov
scas
push
jbe
ret
test
loopne
mov
mov
lcall
fisubs
fstl
inc
in
sub
cmc
lds
bound
cld
je
pop
and
pop
pop
or
lds
mov
mov
xchg
and
inc
pop
mov
outsl
out
inc
push
jg
push
in
push
stos
jne
add
mov
xor
cmp
clc
test
adc
lods
xchg
xchg
popa
test
ds
stos
adc
shll
outsb
adc
mov
das
iret
sbb
icebp
cmp
dec
and
sar
jae
aaa
lods
lods
pop
cmp
and
out
cmp
xchg
aaa
and
xchg
les
rcrb
shl
inc
dec
sub
lea
cwtl
cmp
icebp
jp
insl
in
xchg
bnd
sub
sub
push
cmp
ret
mov
ret
xor
pop
popf
fs
inc
ret
xor
int3
arpl
add
shlb
mov
add
insb
mov
cmp
out
repz
adc
loopne
je
call
mov
mov
stos
jge
negl
dec
ss
stos
sbb
test
es
into
stc
xor
nop
pop
inc
cmp
sub
lcall
and
and
in
fimull
sbb
inc
dec
or
sbb
testb
loope
test
out
mov
xchg
mov
cmp
sbb
push
pop
fildl
mov
nop
fistl
aam
repz
xchg
or
pop
sti
aas
call
add
daa
scas
fsubrs
scas
outsb
inc
and
mov
ret
mov
neg
std
mov
dec
pushf
les
adc
mov
rcrb
insl
push
imul
pop
cmpsb
cli
mov
jbe
arpl
pop
xchg
or
jns
ljmp
fildl
es
lret
cmpl
mov
sar
jecxz
jnp
jle
andb
adc
or
lret
inc
pop
mov
ljmp
adc
push
inc
inc
bound
lods
mov
xchg
int3
xchg
adc
xor
inc
push
insb
aad
jne
adc
xchg
pop
loope
adc
pop
push
sahf
sub
into
xchg
mov
or
mov
shl
lea
or
test
aaa
jae
jo
in
and
cmc
xor
sub
pop
daa
mov
in
sarl
cmp
in
sbb
jge
dec
in
bound
jbe
fidivs
popf
enter
enter
int3
int3
into
sub
jg
orl
and
add
pushf
arpl
lret
hlt
into
pop
mov
pop
ss
ja
mov
out
xchg
mov
dec
out
push
imul
jecxz
les
mulb
sbb
popf
sub
dec
adc
cmp
int3
mov
insb
stc
push
xchg
aam
and
xorl
inc
sub
xor
aad
lcall
jne
filds
jg
lahf
inc
and
ret
jmp
in
in
push
xor
adc
je
bound
repnz
fistl
adc
pop
add
jno
jle
xor
int
mov
jns
jmp
repnz
cwtl
xchg
ja
pusha
mov
xchg
loop
int3
cmp
out
mov
fwait
test
mov
mov
adc
adcl
das
and
and
xor
mull
aad
dec
aam
loopne
cs
or
mov
and
xlat
sbb
stc
sarb
mov
pop
das
test
push
in
popa
gs
sahf
push
cmp
mov
cmp
icebp
out
int3
stos
sbb
sbb
cmp
lea
push
repz
popa
add
push
mov
vmwrite
mov
xchg
stc
fnsave
call
fwait
shll
insl
jne
sbb
iret
fisubl
ret
aam
pop
and
dec
jbe
mov
adc
sbb
jae
sarl
or
or
cmpsb
jno
insb
adc
mov
or
push
mov
out
js
sbb
rorb
dec
or
sub
or
pusha
mov
cmp
fidivrs
dec
iret
mov
adc
xchg
fsts
jg
movsl
pop
dec
das
push
out
das
xchg
cmp
lods
push
or
insb
dec
lret
xlat
mov
fmuls
ret
add
cs
cmp
pop
pop
call
lahf
and
mov
hlt
push
pop
popa
mov
mov
mull
imul
push
pop
jmp
sbb
shlb
jecxz
jecxz
or
dec
stc
push
stc
scas
jae
jge,pn
dec
jecxz
repnz
lret
and
movsb
push
out
push
cmc
add
pop
push
push
aam
pop
pop
jns
cmp
jb
lcall
stos
and
push
clc
or
js
pop
and
mov
inc
test
and
adc
push
cmc
xor
rol
out
dec
clc
dec
outsb
incb
scas
lret
ja
mov
ret
insb
loope
push
mov
inc
out
add
shlb
push
xor
insb
inc
jmp
test
jne
rorl
sub
daa
mov
imul
push
and
ljmp
pop
sti
nop
dec
imul
pop
inc
imul
movsl
in
jno
in
nop
pop
ja
mov
inc
dec
sbb
fcomps
les
mov
pop
mov
adc
hlt
dec
dec
dec
mov
xchg
fsubrl
andb
fistl
inc
out
mov
hlt
sbb
in
gs
xchg
nop
jmp
adc
inc
or
repnz
shrb
test
sub
jp
popa
cmp
mov
movsl
loopne
xlat
cmc
iret
mov
mov
cmpsb
dec
pusha
mov
cmp
sti
push
arpl
and
sbb
mov
xchg
or
outsb
jp
jmp
idivl
sbb
adc
hlt
mov
lret
mov
sub
inc
push
xchg
sub
scas
jle
nop
push
jns
cltd
rorb
mov
lcall
out
syscall
mov
ffree
aam
push
mov
cmp
xlat
nop
sub
and
leave
ljmp
fists
out
add
jge
push
fwait
cmp
dec
fsts
xlat
cmp
sbb
insb
xchg
dec
dec
lock
stc
loop
ds
sub
add
lret
pop
fs
pop
ja
sbb
cld
dec
push
mov
jmp
test
ret
fsubrp
cmp
inc
xor
lcall
scas
dec
inc
add
in
fcmovnu
mov
bound
or
insl
mov
stos
mov
jmp
ficoms
add
mov
push
adcb
je
sbb
leave
sti
sub
std
insl
dec
xor
mov
push
out
in
loope
out
add
pop
outsl
out
out
pop
mov
loop
cmp
mov
js
adc
add
lahf
clc
lret
popa
pop
lds
imul
dec
jl
iret
push
loop
or
fisubl
out
iret
test
cmp
outsl
les
movsl
mov
in
pop
push
mov
add
mov
and
lcall
jp
mov
mov
js
jmp
pop
ja
jge,pt
rclb
jmp
mov
xchg
in
xchg
inc
add
jnp
sub
push
nop
pop
enter
js
and
push
inc
aas
jle
nop
xchg
push
test
adc
inc
cli
inc
ds
mov
sbb
push
in
sahf
pop
cmp
push
or
push
imul
iret
inc
dec
lea
std
ret
dec
mov
and
mov
mov
xor
divb
mov
cwtl
jle
fsubp
into
mov
and
sbb
mov
and
or
push
out
in
aaa
mov
stos
mov
dec
fwait
add
gs
or
push
js
sub
adc
cs
fsubrs
aam
push
push
dec
mov
push
sbb
push
lahf
sbb
xlat
decl
insl
inc
fildl
movsb
fisttpll
xchg
call
jno
fmul
adc
or
fwait
lock
xchg
mov
ret
call
scas
jp
mov
fwait
test
push
lds
test
pop
or
xor
inc
arpl
pop
ret
loop
push
fs
stc
repz
cmp
xchg
mov
cltd
jb
aam
adc
jp
xchg
cs
and
hlt
stc
inc
push
daa
dec
nop
shrl
lret
mov
out
sbb
mov
or
or
int3
mov
push
or
mov
adc
lahf
jnp
aad
mov
das
add
movsl
inc
and
fisubrs
bound
loop
dec
xor
cmc
in
rcll
xor
data16
fistl
add
jne
out
in
and
testb
rolb
push
enter
jp
adc
cmp
adc
fcompl
stos
sub
cmp
and
mov
je
out
outsb
iret
leave
mov
sbb
jmp
or
pop
fs
in
dec
cmp
push
mov
lock
enter
out
push
lcall
adcl
sub
imul
sub
int3
outsl
mov
jae
lds
adc
mov
in
add
sbb
mov
arpl
jbe
shlb
or
mov
sbb
std
shl
jg
push
cmp
gs
mov
iret
add
gs
mov
mov
inc
into
and
jb
push
mov
sbb
cwtl
or
mov
testl
cmc
aam
lock
aad
mov
cmp
clc
inc
lcall
out
rorb
dec
mov
sub
push
sub
mov
sahf
sbb
and
pop
call
rorb
pop
rolb
cwtl
cmp
jae
push
sbb
mov
sbb
ss
ja
lcall
sar
negb
aam
pop
lcall
shll
sbb
jp
jl
add
rcrb
adc
or
lea
xchg
movl
pushf
movb
imul
pop
sub
xor
adc
cmp
aad
mov
testb
mov
mov
jmp
lret
mov
icebp
test
pop
jecxz
push
push
hlt
xor
stc
repz
jbe
pop
add
pop
add
movsb
lods
int
sub
or
iret
mov
add
mov
mov
ljmp
jmp
push
push
dec
arpl
insb
mov
mov
pop
jle
gs
pop
or
js
sarl
adc
inc
call
push
cmp
push
inc
fidivl
mov
inc
or
and
sub
scas
stos
pop
ret
dec
adc
es
popa
inc
ja
add
mov
cmp
push
and
fbstp
mov
sarb
push
cmp
push
cmp
sti
mov
rorb
inc
sbb
scas
popa
xchg
xor
std
add
pop
clc
jmp
dec
ficomps
sbb
in
push
pop
fldcw
insb
mov
call
push
cmc
jb
lock
imul
or
scas
dec
fucom
in
jmp
fs
mov
adc
cwtl
push
stos
inc
fists
or
cld
sbb
mov
cmp
in
mov
cmp
and
int3
in
out
mov
mov
stos
loop
cmp
mov
fstl
xor
push
pop
cli
in
cmpsb
cmp
repz
cmp
pop
mov
dec
push
in
movsb
loop
xchg
sub
rcrl
movsl
incb
xor
loope
mov
aad
and
ja
lahf
adc
adc
adc
test
fwait
mov
jp
mov
mov
mov
test
aad
sbb
dec
dec
push
push
das
xchg
push
cmp
jmp
xchg
sti
scas
xchg
imul
stos
lahf
inc
inc
cmpsb
dec
jb
aad
ja
fadd
gs
inc
xor
fcoml
lcall
fstps
iret
cld
or
cmc
adcl
sbb
mov
mov
loopne
mov
test
cli
aaa
imul
xchg
adc
decb
out
jge
dec
es
stos
add
jp
mov
cmp
mov
sbb
into
popf
jl
mov
not
das
push
mov
lea
mov
xchg
outsb
sub
add
mov
stos
dec
int
test
adc
inc
sahf
sbb
add
mov
je
js
dec
adc
jae
push
scas
xor
arpl
and
out
mov
iret
adc
inc
pop
das
arpl
dec
lsl
stos
xchg
aaa
sbb
add
push
subl
pushf
stos
add
pop
mov
and
jg
shl
and
movsl
test
stc
adc
pushf
jno
xchg
sbb
or
and
or
imul
inc
mov
mov
mov
stos
push
pop
sti
jp
sub
or
jp
jmp
loopne
hlt
inc
push
push
add
rclb
js
push
cmp
sub
enter
mov
adc
or
add
shll
dec
cld
daa
scas
jg
ds
lds
jo
push
jnp
pop
imul
cmp
inc
and
sti
and
lock
xchg
push
inc
add
inc
mov
and
or
mov
dec
fstps
push
out
inc
cmovo
pop
mov
addr16
jecxz
mov
pop
jb
sbb
or
and
cmp
adc
mov
cmp
and
mov
and
imull
lret
lods
in
dec
loop
repnz
xchg
xor
sbb
sbb
add
add
push
iret
jecxz
lret
adc
loope
xchg
push
data16
and
inc
dec
rol
mov
das
in
jne
jnp
ret
mov
sarb
jb
adc
movsb
inc
es
jle
cmp
xor
into
aaa
fadd
loope
push
imul
adc
shrl
popa
inc
ss
aaa
loope
push
fisubrl
jecxz
push
dec
mov
sbb
jmp
cmpl
ficoms
ja
jno
ja
push
rep
orb
out
sub
dec
mov
cltd
cmp
sti
outsb
sbb
imull
scas
xor
pop
jle
jae
adc
cwtl
adc
leave
mov
pop
aas
dec
add
lahf
mov
lret
popa
mov
sahf
popa
xorl
pop
xlat
ret
push
movsl
pop
jmp
push
loope
and
mov
jecxz
pop
in
fidivs
cmc
sbb
mov
pop
decl
insl
mov
xchg
mov
pop
jno
or
test
mov
jnp
cmpsb
add
and
pop
sarb
push
mov
mov
icebp
cmpsl
cmpsb
sbb
lcall
or
int
xchg
mov
mov
js
and
ror
pop
adc
stc
pop
loop
icebp
push
mov
popa
sub
popf
pop
inc
push
jle
fnstcw
pop
insb
adc
sbb
inc
data16
sub
xchg
test
mov
lock
jae
cwtl
daa
mov
push
popa
adc
int3
imul
shl
mov
mov
test
insb
in
pushf
sub
fwait
xlat
jge
push
out
jg
ds
push
sbb
push
fucompp
sub
pop
roll
cmp
sti
sti
popa
sbb
repnz
mov
cmp
jne
ljmp
out
iret
lods
js
mov
xlat
sub
inc
je
xor
mov
inc
test
loop
sub
testl
dec
xor
mov
test
rcl
ret
xchg
subl
xor
mov
cmpsl
add
int
mov
ficompl
fisttpll
std
push
xchg
mov
mov
insb
adc
lcall
gs
xchg
wrmsr
mov
mov
or
add
dec
imul
ret
in
add
imul
fimull
outsb
push
mov
inc
and
xchg
and
xor
dec
call
push
pop
or
cmp
das
lea
sub
xchg
fistpll
inc
dec
push
pop
or
pushf
daa
inc
pop
push
xchg
and
ds
jle
enter
xor
xor
mov
rcrb
scas
sbbl
mov
scas
jb
mov
jle
js
mov
mov
sub
adc
jbe
or
bound
dec
and
call
sahf
jge
fsts
inc
push
fsubrl
shr
insl
push
xlat
jo
or
add
shll
loopne
cmp
xchg
mov
lret
insb
mov
xchg
add
push
cwtl
repz
mov
pop
add
rol
jg
mov
fistpl
test
lods
jne
and
and
std
xchg
hlt
adcl
xchg
xor
jne
mov
scas
outsb
xor
iret
cs
and
push
pop
scas
in
in
mov
mov
mov
inc
jb
push
movsb
cltd
add
and
pop
rcl
xor
pop
cmp
orb
sub
repnz
sub
push
adc
test
into
test
test
push
inc
jle
inc
repz
movsl
xor
and
shll
jecxz
dec
and
scas
idiv
mov
fstps
out
jge
xor
add
push
bnd
je
fildl
cmc
adc
in
cmp
and
jns
js
data16
repz
das
and
xchg
aam
fstl
daa
scas
push
ja
cwtl
xor
dec
xorl
test
dec
push
ret
lret
std
mov
addr16
rcrb
imul
xchg
or
add
cmpsb
mov
xchg
or
shrb
sbb
or
push
adc
clc
push
pop
fcmove
jns
xchg
push
arpl
jb
sti
adc
mov
jecxz
xchg
ljmp
aas
ror
std
mov
arpl
loope
ds
or
stc
in
mov
mov
jb
addr16
ret
data16
loop
jp
and
jge
lret
xchg
mov
das
mov
cltd
mov
movsl
xchg
sarb
or
sbb
stos
call
sub
add
in
insb
mov
add
sub
inc
inc
in
stos
repz
aam
rcrl
push
data16
cmpsb
mov
xor
roll
add
dec
ljmp
jbe
lods
mov
sub
jmp
in
inc
add
es
jbe
and
aad
and
mov
movsb
lcall
sbb
sbb
jmp
or
mov
cmp
inc
iret
in
mov
in
jbe
addr16
aaa
aaa
pop
jl
in
out
xor
pop
cmp
outsl
push
mov
jbe
or
inc
sub
cmc
or
int3
insb
sbb
adc
cwtl
and
xchg
pop
push
jl
pop
mov
inc
or
vminps
leave
outsl
adc
jge
push
mov
mov
push
lods
sti
jae
fpatan
dec
int
adc
ja
mov
stc
jl
or
pop
pop
stc
stos
mov
mov
insb
pusha
xlat
ljmp
xchg
mov
fstl
fsubrp
inc
rolb
dec
dec
pop
or
sbb
stos
mov
popa
ljmp
rorl
or
mov
xor
dec
inc
test
inc
les
jmp
enter
scas
cmp
insb
mov
loop
outsl
pop
cmp
and
sub
rcrb
clc
mov
mov
xor
xchg
data16
cmp
das
pop
ret
pop
ret
sahf
or
aaa
cld
pushf
pop
mov
mov
fs
mov
lods
stos
sbb
xchg
xlat
jno
pop
jbe
js
pop
or
in
cmpsb
mov
movsl
xchg
enter
push
leave
dec
push
ret
das
add
outsl
pop
iret
mov
clc
jmp
jne
xchg
rolb
cs
push
jge
mov
mov
cmp
cmp
daa
xchg
icebp
imul
lret
and
sbb
pop
mov
scas
fcoml
mov
inc
pop
cli
dec
push
inc
cmc
les
loopne
adc
jns
ret
mov
shrl
lcall
roll
add
xchg
jo
stc
shrl
cs
ss
sti
mov
inc
and
lret
out
and
negb
sub
cmp
push
popa
sub
scas
arpl
adc
jae
inc
out
push
push
adc
maskmovq
negl
jnp
and
das
xlat
scas
or
sbb
popf
cmp
push
or
hlt
ficoms
sti
pop
xchg
mov
jo
lcall
add
xor
push
mov
scas
mov
jae
adc
push
mov
pop
mov
cwtl
mov
sarb
xchg
xor
lcall
mov
sub
fistl
adc
imulb
adc
sarb
mov
adc
cli
ficoml
les
jne
hlt
lods
mov
enter
sub
jecxz
int3
add
push
clc
pop
push
shl
push
pop
ret
rcrl
cmp
cmp
ja
or
dec
dec
mov
inc
cmc
xchg
fwait
lahf
add
imul
inc
push
stos
xor
outsb
out
pop
hlt
in
mov
xlat
imul
stc
push
je
in
lods
repnz
mov
rorl
outsl
sub
icebp
dec
add
adc
cmp
push
pop
jbe
mov
gs
insb
iret
push
jecxz
addr16
push
mov
out
push
icebp
stos
fsts
ds
sbb
cmp
lfs
sub
lock
mov
int
rclb
lret
push
popf
and
loopne
cmpsl
cmc
sti
mov
in
or
dec
out
xlat
or
and
jb
rclb
pushf
mov
adc
mov
xor
icebp
mov
mulb
sub
sub
ret
das
push
inc
ljmp
push
sbb
mov
and
repnz
jl
ficomps
sbb
ja
mov
and
lahf
lea
sbb
outsb
push
mov
inc
dec
fwait
pushf
popf
lahf
add
pop
pop
mov
aaa
fucomi
or
push
inc
adcb
xchg
dec
push
sub
loope
pop
enter
scas
push
cmpl
cmp
xor
test
sub
push
jne
cwtl
mov
sbb
imul
loope
xor
cwtl
adc
cmp
push
nop
mov
lahf
sub
dec
mov
out
mov
xchg
out
shlb
aam
rclb
pop
inc
inc
mov
ret
fldenv
inc
push
hlt
int3
adc
popl
filds
fnstsw
cmp
fildl
and
sti
push
out
push
add
inc
sbb
xor
or
xchg
sub
cltd
dec
mov
xor
add
js
push
leave
mov
cmp
push
cltd
xchg
jg
jl
decl
push
mov
std
movsb
aas
movb
adc
inc
or
mov
call
add
fwait
sbb
mov
ljmp
fisubrl
es
je
pop
and
enter
sub
xor
dec
mov
mov
add
cmp
out
test
loope
dec
inc
xchg
dec
iret
subw
aam
add
lods
push
and
jmp
shlb
jle
enter
jmp
imul
aad
into
out
dec
popa
fdivs
rolb
clc
fildl
xlat
repz
jge
or
stos
and
popf
loopne
fucompp
jmp
jl
iret
hlt
mov
arpl
sbbl
cltd
popa
scas
loop
mov
enter
es
loop
shlb
inc
push
fimull
mov
add
jbe
push
push
sti
push
mov
aas
fs
sbb
cltd
loop
push
mov
outsl
subb
inc
jp
cmp
mov
push
in
js
xchg
outsl
jmp
xchg
mov
fstpt
adc
rol
movsl
das
shlb
add
sbb
inc
mov
jbe
fmull
mov
dec
jno
in
outsb
inc
xlat
fdivrs
cmp
mov
subl
int3
sbb
dec
xor
loope
scas
cmp
adc
in
mov
jne
or
push
mov
subl
push
loope
xchg
inc
push
test
push
stc
mov
jno
lret
pop
cmp
xor
lock
mov
add
enter
imul
sub
int3
enter
adcl
inc
jmp
cmp
pusha
call
pop
repnz
push
clc
sbb
loopne
cwtl
hlt
jecxz
add
test
mov
mov
xchg
mov
mov
popf
sbb
bound
dec
and
test
xor
fldenv
enter
icebp
pusha
cmp
xchg
lea
dec
dec
sarb
fwait
mov
xchg
cmp
push
cmp
xchg
jno
and
inc
out
push
pusha
push
adcb
and
mov
dec
sub
lds
je
inc
inc
fwait
xchg
adc
xor
je
push
jbe
add
dec
mov
shrb
cmpsl
jmp
mov
push
je
cli
aaa
lds
leave
mov
jae,pt
dec
push
adc
xor
xor
testb
pop
sub
popf
push
jge
cmpb
mov
lret
mov
and
mov
test
fucomip
mov
sbb
incb
fsubp
bswap
sub
dec
std
cmpb
loop
cmp
popa
push
test
dec
push
dec
mov
rolb
jns
jmp
xchg
mov
ds
mov
and
std
jle
mov
in
sti
fxch
xchg
mov
and
push
sub
push
pop
push
pop
ja
call
or
add
daa
mov
jbe
pop
cmp
pushf
adc
or
sub
add
scas
nop
dec
insb
add
mov
ret
roll
xchg
fstpt
rcrl
adc
in
fsub
imul
cmpsb
mov
mov
sbb
in
hlt
mov
push
jg
fstpl
xchg
imul
xchg
inc
out
fisubrs
jae
dec
call
hlt
and
pop
mov
xchg
dec
cmpsl
std
xchg
test
adcb
cwtl
pop
rclb
adc
mov
jg
add
xor
mov
mov
mov
addr16
dec
lods
scas
insl
mov
cmc
daa
sti
addr16
pushf
or
inc
decl
in
divl
sbb
test
fadds
cmpsb
push
mov
ret
and
sbb
in
fdivs
cmp
fdivs
stos
mov
jge
jp
dec
ficompl
mov
mov
incb
stc
mov
sub
insb
add
and
ja
sub
rclb
fmuls
cmp
xchg
xor
or
or
iret
daa
push
subb
sub
dec
notl
push
iret
xchg
mov
mov
add
add
idivl
xchg
addr16
es
ret
sbb
je
js
repz
sbb
icebp
xchg
es
jbe
stos
mov
add
adc
jle
cmc
bound
mov
lods
test
pop
or
adc
dec
repz
loop
or
push
loop
add
aad
das
pmaxub
fmull
ss
gs
mov
std
xor
shlw
or
pop
rolb
fidivrl
mov
jge
stos
mov
movsb
xchg
out
orl
push
imul
push
and
ret
pop
rorl
lret
testb
xor
adc
xor
sub
push
xchg
pop
mov
dec
add
imul
xor
loopne,pn
test
cmp
sbb
or
arpl
jne
or
test
xchg
sub
mov
sti
or
xor
outsb
adc
sub
or
add
xor
jo
faddl
mov
xchg
test
fnstenv
js
mov
scas
hlt
cmp
out
jg
aaa
in
sbb
dec
cltd
int
shlb
data16
mov
push
dec
lea
stc
ss
pop
push
negb
push
pop
mov
call
adc
mov
or
xchg
mov
mov
jg
out
jp
or
mov
insl
les
mov
push
inc
out
sahf
mov
inc
std
dec
inc
aas
mov
rolb
adc
out
mov
mov
mov
push
inc
shrl
xchg
or
mov
hlt
ret
xchg
in
pminsw
sahf
enter
mov
mov
jg
xchg
mov
jmp
push
fs
sbb
sbbl
or
aaa
jae
ret
push
call
mov
fldl
orb
jmp
pusha
in
dec
sbb
mov
lea
test
mov
movsl
mov
cmp
xchg
int3
mov
mov
scas
imul
jae
xchg
mov
cmpsl
xchg
xor
inc
aaa
inc
jl
popa
add
dec
fidivl
xor
inc
xor
inc
mov
lahf
jle
das
mov
push
fldcw
inc
or
test
repnz
stos
cmp
push
test
mov
or
movsb
sub
pop
push
rol
and
push
mov
or
aam
adc
xchg
pop
sub
pop
xor
repnz
cs
loope
dec
loopne
insb
pop
int3
aas
add
sbb
popf
mov
rorb
sbb
jbe
pop
xor
fnsave
xchg
insb
pop
mov
cmp
mov
fwait
loopne
mov
or
or
jl
xor
dec
aaa
stos
arpl
jg
lret
dec
adc
loope
sbb
pushf
lahf
xchg
add
in
in
xchg
fwait
add
aas
les
sbb
and
movsl
daa
mov
imul
xchg
jecxz
clc
dec
arpl
mov
sub
test
add
lcall
add
pusha
adc
jmp
adc
inc
inc
pop
inc
mov
cmp
dec
mov
call
or
mov
scas
fwait
pop
adc
add
loopne
pop
je
jge
fwait
adc
sub
mov
icebp
sti
push
push
loopne
lea
lock
loop
cmpsb
sbb
pop
ds
lods
mov
or
push
mov
popa
xchg
lret
fnstenv
cmp
ficoml
cmp
jle
push
push
adc
xlat
ret
sbb
xchg
pop
inc
scas
mull
mov
or
inc
loope
jo
adc
stc
lds
insl
je
mov
xchg
arpl
and
clc
cwtl
dec
rclb
lods
int3
popa
imull
adcb
dec
mov
mov
xor
mov
xlat
xor
add
lret
movsl
jge
mov
inc
sub
jge
dec
jae
push
scas
add
push
pop
mov
sbb
inc
repnz
xchg
jg
add
orl
into
call
push
adc
out
sar
jl
aas
sarb
lret
hlt
into
jnp
int
in
xor
sti
mov
dec
ret
dec
or
shl
mov
adc
xor
mov
insl
xchg
or
in
cmpsb
rcll
cmp
out
push
and
mov
mov
mov
shl
data16
dec
inc
test
sbbl
cld
and
fidivrs
js
mov
test
pop
push
dec
lret
outsb
xchg
or
fildll
or
stos
lret
fs
mov
dec
jo
mov
and
cmpb
addl
dec
bnd
xchg
cmp
xor
and
and
add
mov
movsl
dec
adc
adc
lret
sahf
xlat
dec
mov
lcall
repnz
cmp
das
dec
xor
std
mov
pop
lods
nop
pop
gs
incl
in
cmpsb
mov
inc
or
add
mull
or
or
xor
push
push
or
mov
nop
dec
adc
hlt
xor
or
leave
xor
in
jecxz
push
iret
jle
jbe
hlt
inc
jg
cmp
sbb
or
mov
push
fcoml
hlt
sti
mov
mov
js
mov
lods
xchg
fcmovbe
scas
xor
mov
popf
in
sbb
test
test
or
add
xor
enter
mov
dec
xor
shl
and
hlt
add
dec
shrl
adc
test
lea
xor
sbb
stos
sub
scas
fildl
cmp
push
js
arpl
cmpsl
popf
xchg
je
xchg
jl
xor
inc
push
pushf
pusha
lock
xchg
pop
movsb
hlt
mov
inc
push
lods
mov
mov
sahf
mov
clc
pop
shll
mov
hlt
repz
push
push
mov
push
lret
pop
stos
adc
adc
sbbl
cmc
jns
sub
or
or
inc
inc
sbb
lods
popa
xor
lods
sarb
xchg
lea
aas
inc
adc
setno
insb
jge
lcall
push
sub
sbb
pop
notl
cmp
dec
aam
pop
icebp
add
pop
add
sub
add
daa
data16
sarl
insl
inc
and
dec
mov
test
pop
dec
out
bound
mov
xor
mov
dec
pushf
movsl
enter
and
xor
mov
cmp
sbb
ret
arpl
mov
out
daa
das
push
jo
and
cmp
inc
jne
or
fdivrp
xor
lods
hlt
mov
arpl
fsts
mov
lcall
popa
cmp
xchg
scas
jg
adc
aad
pop
adc
rcrl
pushf
test
jecxz
mov
mov
mov
lidtl
mov
mov
lret
cmc
inc
cmp
and
mov
add
jecxz
shl
aaa
mov
xchg
pop
xchg
mov
add
add
adc
mov
leave
cmp
sbbl
pop
outsl
movsb
in
test
or
jne
cmp
and
jle
sbb
pop
jge
xchg
dec
cld
xor
xor
ss
lcall
pusha
cs
pop
ret
repz
into
dec
xor
lods
hlt
jmp
add
sbb
add
push
mov
xchg
cmp
test
cs
mul
lods
cltd
and
add
loop
testl
bound
orb
enter
out
jle
pop
filds
movsb
nop
cmp
dec
jno
repz
loope
sbb
rcrl
xchg
lcall
xlat
lcall
xor
cmpb
mov
mov
test
out
arpl
push
jecxz
test
mov
neg
pop
cmp
adc
inc
inc
stc
mov
lret
dec
mov
dec
test
xchg
mov
push
sub
sbb
aas
movsl
and
shrl
adc
cmp
ret
addb
jecxz
xchg
outsb
inc
mov
stos
pushl
movsl
out
lret
jle
lcall
repz
sbb
out
fucomi
jae
push
sbb
adc
arpl
insb
rorl
clc
stos
outsl
int3
test
mov
mov
dec
push
std
jge
popf
inc
stos
push
or
mov
lret
ss
loope
test
pop
mov
test
pop
lock
test
xor
mov
divb
mov
leave
inc
iret
cmp
repnz
orl
dec
rolb
arpl
dec
pop
das
popa
sbb
jns
inc
lds
mov
cmpsl
aaa
mov
imull
gs
add
insl
mov
scas
mov
out
aas
fidivrl
rep
out
ss
mov
lods
adc
xor
fcomps
adc
mov
mov
inc
xor
data16
xor
addr16
xlat
and
inc
xchg
out
rorl
jno
js
jecxz
and
subb
es
mov
adc
cmpsl
pop
movsb
icebp
cmc
aaa
movsl
lea
mov
cmp
cld
int3
sub
sub
ret
lret
cmpsl
jo
in
int
jns
fldenv
xorl
movsl
cmp
jne
enter
ljmp
in
ss
lods
outsl
enter
stos
mov
flds
fiadds
jmp
dec
mov
call
inc
sahf
add
in
jg
add
fisttps
mov
daa
inc
les
mov
mov
or
popa
outsb
adc
xchg
inc
inc
test
xor
xor
sti
push
es
js
rclb
xor
mov
lret
and
lods
pop
imul
les
xor
xor
dec
in
adc
lods
cwtl
mov
lods
and
in
jne
jo
int3
xor
push
xchg
loopne
bound
inc
adcl
xchg
scas
push
mov
add
shll
int3
daa
jns
pusha
sbb
lds
sbb
repnz
int3
sahf
dec
lds
in
add
dec
cmp
xchg
rorb
add
pusha
call
nop
xor
inc
test
sbb
ss
push
adc
lods
dec
pop
in
sarb
and
jae
scas
call
sti
jae
pusha
sub
xorl
mov
pop
or
das
add
test
push
lock
jns
xorb
push
lea
jne
adc
sub
xchg
ds
mov
sub
adc
xchg
rcr
fdivl
hlt
xor
push
inc
xor
lea
into
cmpsl
sti
stos
ss
sbb
dec
pop
mov
jl
sbb
dec
jno
hlt
xchg
test
clc
shlb
pusha
inc
or
jp
xor
inc
dec
cmp
push
inc
add
sbb
and
fwait
adc
in
sbb
and
ret
sbb
pop
xchg
pop
cmpsl
inc
fisubrl
cld
sbb
pop
cmp
or
fiadds
ljmp
data16
xor
jae
jp
shrb
inc
aad
aas
notl
sub
pop
aaa
push
arpl
dec
or
cmp
in
inc
stos
xchg
jne
sarl
ret
inc
xchg
jge
cs
daa
ljmp
jmp
jne
mov
aad
int
cs
ja
int
mov
rcrb
push
ficompl
shr
mov
stos
call
inc
mul
push
adcb
inc
push
rdmsr
fiadds
push
mov
add
mov
push
dec
or
mov
daa
mov
aad
ror
fisubrl
bound
dec
push
dec
push
sub
pop
mov
loopne
cld
dec
mov
add
xchg
mov
dec
push
lcall
je
mov
mov
add
dec
xchg
mov
inc
mov
repz
int
mov
sub
movsl
hlt
aam
xchg
mov
xchg
push
mov
sub
sbb
lret
fsts
lret
adc
fistps
cli
cwtl
add
or
adc
lea
dec
lods
jle
sbb
in
inc
lods
and
sarl
sbb
movsb
out
cmp
test
int3
and
xor
clc
sub
fsubr
imul
arpl
fwait
cli
stos
jbe
mov
sbb
js
jbe
into
push
aaa
repz
mov
ffree
or
or
jmp
not
push
cmp
pop
jbe
lret
jbe
add
sub
ret
jnp
shl
popf
add
mov
fisubl
xchg
fisubrl
fcompl
xorl
movsl
sbbl
ss
xchg
nop
loop
mov
je
cli
xlat
and
xchg
sbb
xor
test
and
fiaddl
sarb
mov
push
pusha
dec
ljmp
cltd
push
test
mov
mov
fwait
shll
loopne
loope
fldl
mov
xor
int
jg
stc
ljmp
push
aaa
ja
rcrb
gs
push
mov
add
out
sub
pushf
notb
add
or
dec
mov
cmp
jb
and
push
stc
aaa
adc
xchg
inc
xor
mov
adc
jae
add
inc
ror
mov
mov
and
cmpsl
jne
jb
xchg
pop
pusha
mov
cs
add
mov
mov
mov
and
xchg
cld
ret
jge
cmp
adcb
xor
loop
xchg
xchg
popf
or
daa
adc
mov
xchg
and
xchg
pop
mov
or
fwait
iret
mov
mov
dec
lret
pusha
lods
or
in
addr16
sbb
movsl
jmp
jne
je
repnz
out
xlat
bound
cs
pusha
inc
rcl
clc
or
sbb
mov
flds
jne
mov
mov
xchg
or
sti
pop
adc
nop
wrmsr
add
repz
mov
faddl
mov
subl
loope
out
mov
pop
fdiv
shr
call
adcb
iret
and
mov
pop
dec
pop
jle
inc
push
pop
fstps
dec
sbb
mov
mul
and
mov
inc
mov
pop
mov
jmp
int3
dec
push
sbb
ret
lret
into
cli
mov
mov
bound
in
add
lods
idiv
mov
pop
dec
jp
inc
cmp
outsl
push
aaa
jnp
add
pop
ljmp
outsl
sub
xor
lcall
aaa
and
cmp
sbb
int
add
int
adc
sbb
gs
inc
push
and
paddw
xchg
cmpl
out
test
push
adc
sbb
mov
and
pop
cltd
jne
adcb
and
dec
lahf
jb
push
mov
ljmp
jb
cmp
scas
sub
xchg
setbe
shlb
stos
adcb
adc
mov
xchg
inc
or
movsb
mov
adc
push
and
sbb
call
mov
add
cmpsb
mov
insl
mov
fnstsw
bound
push
cmp
push
arpl
sub
fcompl
rorl
dec
shlb
fprem1
hlt
arpl
sub
rclb
jns
mov
movb
pop
sbb
add
sub
clc
das
cld
in
pop
shrb
movsb
mov
mov
add
loopne
sti
add
addr16
xchg
inc
xchg
xor
es
or
cmp
pop
arpl
pop
bound
mov
or
push
movsl
pop
mov
enter
xor
frstor
or
dec
pop
push
mov
dec
dec
insl
mov
imulb
mov
push
jmp
fs
pop
xlat
pop
lahf
fisubrs
gs
add
pop
jo
push
outsl
lock
test
jmp
mov
lds
or
stc
pop
sbb
or
loop
jno
mov
cli
fcompl
mov
or
dec
mov
sub
pop
and
ja
jmp
in
loop
mov
push
sub
pop
add
ret
movsb
pop
repz
mov
push
or
sbb
lret
orb
push
int
pusha
push
aaa
inc
xchg
mov
popa
rcrl
into
sub
xchg
adc
pop
jae
mov
js
mov
mov
push
clc
cli
adc
mov
mov
test
adc
es
sub
pop
fidivrl
ss
in
cmp
shrl
test
subb
pop
adc
and
jge
jo
mov
push
xchg
mov
arpl
add
fwait
inc
cmp
xchg
stos
sub
or
pop
jmp
pop
addr16
stos
push
int
icebp
cmp
sub
or
nop
scas
idiv
mov
dec
test
insl
loope
bound
adc
jnp
xchg
dec
or
inc
push
ja
repz
loopew
enter
arpl
aaa
or
and
clc
add
push
push
xchg
xor
lds
adc
ljmp
push
les
add
leave
outsl
pop
pop
outsl
lds
jp
into
sub
iret
es
jne
stos
pop
addb
movsl
in
sub
cmp
sbb
hlt
mov
fwait
imul
xchg
sub
cmp
sbb
lods
int
iret
push
ja
and
sub
cmpsb
pop
lahf
sbb
dec
notb
jl
js
test
pop
rclb
in
and
loop
push
out
insl
shlb
pop
lar
lds
mov
cmp
mov
movb
dec
insb
stos
push
repz
movsb
clc
cli
jge
fcmovnbe
xchg
add
ss
lret
call
and
out
xor
ljmp
sub
add
push
jl
push
adc
ds
fdiv
xchg
int
or
xor
inc
xor
push
pop
leave
outsb
popa
push
stc
xchg
rorl
mov
inc
jge
sub
cltd
add
pop
test
lret
in
sar
mov
mov
inc
push
push
clc
adc
mov
arpl
mov
mov
mov
xorb
jne
adc
and
outsl
jne
imul
aaa
sarl
mov
dec
fidivrs
cmp
fwait
js
out
sbb
mov
jp
popf
test
xchg
xor
inc
inc
insl
xchg
cmp
push
cmpsb
in
and
push
mov
push
inc
sub
fildl
out
xchg
cmp
cmc
mov
in
xor
mov
cmpsl
inc
lods
sub
pop
call
xchg
mov
inc
add
nop
punpckldq
jae
sub
out
das
std
imull
jno
xor
sarl
sbb
and
loop
mov
mov
mov
cmc
fstpt
cli
jno
sahf
inc
dec
jnp
or
repnz
xor
mov
mov
pop
pop
mov
jne
cmp
push
dec
pop
push
mov
loop
jg
sahf
and
mov
popf
mov
pop
je
adc
fstps
sbb
sbb
adc
stc
leave
clc
or
insl
fwait
inc
sub
lahf
mov
sbb
cli
dec
pop
xchg
test
jno
loope
jb
xor
push
cmp
sub
mov
cmpsb
xchg
int
cmc
je
xor
mov
jmp
or
mov
sub
aam
stos
rol
in
in
je
and
scas
mov
lods
lea
or
lods
cmp
test
push
lret
les
mov
enter
mov
cmp
push
enter
addl
lea
cmp
fwait
jmp
push
or
sbb
dec
push
lret
add
negl
movsl
add
push
imul
mov
push
pop
push
mov
pop
push
movd
cmp
sbb
lcall
mov
and
popa
cli
out
xchg
cmp
rorb
popa
je
leave
dec
mov
dec
int
lds
ja
insb
push
cli
int
mov
jmp
pusha
in
adc
pop
add
jl
xchg
roll
out
pop
mov
mov
pop
jecxz
inc
lret
mov
dec
int3
aas
popf
cmc
in
loopne
push
imul
lods
in
sbb
rcrl
and
add
inc
fcomi
mov
loopne
nop
leave
xor
lret
pop
xor
cmp
add
jno
fistps
push
fldt
jecxz
and
push
imul
out
fisubrs
and
loope
fmuls
cltd
out
fwait
je
jae
mov
jo
ficomps
js
and
xchg
fisttpll
xor
cmpsl
add
repnz
adc
ss
das
lods
fnstenv
imul
cmp
cmp
fldcw
adc
mov
dec
data16
std
iret
mov
sub
inc
or
and
and
in
sub
sti
push
dec
cmp
es
inc
imul
inc
cmp
inc
jmp
pop
jb
pop
sbb
xchg
lea
std
test
fistl
aaa
insl
mov
loop
pop
jmp
lods
pop
cmp
sub
xchg
add
movsb
add
daa
xchg
pop
je
mov
mov
daa
jp
sbb
xchg
insl
sbb
jb
fstps
mov
mov
inc
pusha
add
mov
hlt
call
mov
sbb
in
xlat
adcb
test
ret
test
repz
push
sahf
sbb
out
adc
add
mov
mulb
ds
sbb
cmp
mov
test
hlt
test
es
mov
stc
in
add
xchg
push
xchg
test
into
push
scas
lods
jg
enter
imul
shlb
lock
inc
std
jl
cmp
popf
jne
dec
movsb
in
and
jbe
mov
shrb
adc
xor
jmp
aad
je
data16
lods
lret
gs
mov
shl
add
lds
jae
insl
out
push
xor
mov
aaa
adc
int
fnstcw
test
jnp
js
jmp
lcall
rolb
and
cmp
jg
mov
out
dec
mov
xor
test
mov
fwait
jle
out
mov
imul
ror
xor
mov
or
lahf
jp
cld
rorb
and
aas
mov
sub
jo
sahf
mov
cwtl
adc
aaa
xchg
pop
cmp
in
cltd
fwait
xchg
xor
sub
push
xor
push
movsl
xchg
mov
cmp
adc
jo
icebp
or
popl
popf
je
xcrypt-ctr
cmpsl
push
add
stos
loope
push
cmp
jg
notl
inc
hlt
jbe
pop
xor
mov
in
stc
rolb
out
mov
inc
mov
cld
js
loope
mov
cld
mov
dec
js
xchg
and
push
sbb
push
mov
lea
imul
mov
repnz
fsub
flds
add
pop
sbb
daa
ss
sub
jmp
aas
mov
outsl
ss
mov
push
mov
test
aaa
addr16
jle
mov
or
movsl
add
mov
cmc
jge
inc
cwtl
sbb
pop
aaa
fnstsw
xchg
cmpsl
stos
or
add
lcall
lret
ret
cmp
out
out
cmp
mov
shrl
insl
aaa
sub
shlb
fwait
add
rcrb
ret
bound
aas
stos
add
stos
or
dec
outsl
jmp
sbb
add
dec
dec
or
mov
sub
lahf
dec
xchg
sub
xor
mov
fwait
aad
or
rorl
fmul
mov
popf
inc
push
ljmp
jmp
jg
xchg
push
aas
int
repnz
jae
inc
repnz
and
push
cmc
mov
es
movsl
mov
imul
inc
pop
in
inc
movsl
xchg
aaa
or
pop
mov
in
jmp
int3
add
sbb
jmp
sti
test
das
inc
push
cmp
push
xor
mov
cltd
scas
jo
cld
inc
cmp
in
ret
xchg
aam
and
xchg
mov
push
sub
lds
enter
push
jmp
imul
mov
ds
mov
pop
stc
mov
int3
movsb
push
xchg
inc
inc
dec
notb
cltd
lds
mov
add
jne
int3
test
xor
inc
cwtl
add
ret
cs
mov
push
roll
jb
or
inc
adc
mov
daa
int3
js
clc
data16
add
sub
dec
mov
pop
aad
fcoms
cmp
in
mov
adc
in
mov
mov
xchg
fdivl
jb
pop
push
ret
ds
js
push
scas
xchg
and
shl
xor
dec
mov
inc
fdivr
lds
xchg
les
push
pop
mov
loope
dec
jns
and
lods
sub
mov
cmpsb
cmp
repnz
sub
rcll
mov
cmc
shll
rol
stos
or
sbb
leave
xchg
lcall
gs
mov
push
repnz
xor
fisubrl
sbb
mov
pop
inc
insl
cmp
push
push
outsb
and
fsubp
mov
lock
filds
sbb
push
or
in
rolb
pop
inc
stos
push
sbb
addb
es
sub
push
push
push
loope
outsl
sub
mov
cld
xchg
add
in
fsubs
dec
sub
mov
push
pop
xchg
fstl
mov
push
dec
into
out
in
jno
daa
xchg
lds
test
scas
xchg
push
cmp
out
inc
sub
mov
mov
push
popa
xchg
les
inc
les
sbb
sbb
add
int3
out
inc
cmc
dec
lahf
cmp
mov
adc
cli
cwtl
lods
push
mov
xor
das
cmpsl
stos
add
insl
dec
jae
push
mov
mov
cmp
int
mov
ds
push
xor
test
xlat
add
insl
pop
dec
pop
sub
clc
xor
mov
or
sbb
es
jp
mov
js
into
mov
cmp
rolb
ss
daa
sbb
shlb
je
insl
pop
movsb
cmpsl
out
sti
fildl
pop
into
pop
movsl
mov
adcl
test
fildl
clc
push
xchg
xchg
int3
push
xchg
cmc
xor
or
push
push
mov
add
adc
ja
push
jmp
sbb
jns
mov
mov
shll
in
dec
cmp
jne
cli
cwtl
clc
shlb
pop
clc
push
jmp
mov
jmp
daa
fidivl
mov
or
cmp
es
test
js,pt
sub
insl
cmpsl
ljmp
sarl
add
sbb
loop
mov
sub
cld
test
hlt
aaa
fdivs
int
out
sbb
mov
xchg
in
xchg
lds
fildl
sub
shl
and
or
pop
jge
outsb
mov
dec
cmp
andb
ficompl
xor
inc
adc
mov
lcall
xchg
or
inc
adc
mov
sbb
mov
xchg
inc
cs
pop
mov
lock
cmp
inc
push
les
lock
stc
jne
xchg
rclb
in
fimull
sti
dec
inc
adc
xor
sub
pop
arpl
popa
adc
pop
mov
jb
pop
adc
fsub
cmpsb
mov
push
jl
test
ja
pop
add
jnp
out
cld
push
and
cltd
inc
pop
xor
push
jecxz
dec
shrl
xor
mov
cmp
addr16
aas
jp
xor
cmp
imul
pop
and
stos
mov
fsubl
xor
call
mov
in
call
outsl
sub
dec
dec
inc
lods
aaa
jns
inc
std
stos
and
sbb
mov
and
shrl
ss
loope
lret
mov
fisubs
pop
int
shrl
stos
dec
sub
sub
sub
ss
shl
and
fdivrs
aad
mov
fs
xor
orl
inc
cmc
int
sub
mov
inc
je
push
jp
or
lea
pop
xor
jge
sbb
idivl
inc
lea
inc
xchg
aaa
scas
and
stc
cmp
je
or
test
cli
into
test
dec
dec
imul
adc
shrl
mov
add
mov
add
xchg
and
js
add
mov
and
repnz
loop
jb
pop
fs
dec
push
add
mov
dec
stos
mov
das
pop
jo
stc
int
push
mov
jnp
fdiv
lahf
cmp
inc
roll
test
ss
mov
loope
xor
in
xchg
cmpsl
out
sub
and
xor
stc
ljmp
mov
mov
imul
jbe
jg
in
push
mov
dec
insl
pop
daa
sub
and
and
popa
jg
jne
sub
adc
mov
pop
mov
pop
mov
push
movsb
pop
or
mov
rorl
test
inc
mov
sbb
cmpsb
movb
bound
flds
dec
popa
inc
adc
fdivs
mov
ljmp
add
jp
xor
loope
insl
out
out
rcrl
aaa
pop
cmp
xchg
inc
movsl
mov
into
daa
pop
testb
sub
fcomps
add
out
jae
loope
jb
sti
ret
cmp
gs
push
mov
lods
and
das
mov
inc
test
jmp
out
push
lahf
hlt
and
adc
sub
mov
cmp
test
inc
leave
stos
mov
stos
xor
sahf
sbb
and
and
xchg
jmp
hlt
scas
into
mov
movsb
shr
dec
gs
add
daa
push
sbb
sti
fs
xchg
repnz
mov
push
sbb
mov
xor
pop
jle
dec
fstpl
jge
pop
leave
cmp
mov
mov
jns
out
adc
stc
push
pushf
mov
pop
test
out
mov
outsb
add
out
loope
fisubs
jl
mov
ja
popa
xchg
pop
pop
repz
adc
dec
cmp
push
mov
fdivs
shrb
mov
ret
fmull
dec
leave
push
or
popf
adc
push
subb
mov
mov
xchg
imul
fld
ss
cmp
iret
leave
test
sub
and
mov
mov
negb
insb
mov
mov
sbb
mov
sti
out
lcall
push
or
push
cmc
adc
sbb
cmp
pop
sbb
fidivrs
jae
out
xchg
sub
adc
ret
push
jnp
imul
and
sbb
js
stos
mov
jbe
push
jb
adc
sbb
notl
sub
and
inc
insl
rcr
test
sarl
push
std
sub
jns
xor
loop
scas
jle
int3
jmp
push
xor
jnp
jp
pop
fwait
icebp
pshufw
movsb
repnz
test
lcall
mov
orb
push
notb
imull
aam
inc
xchg
adc
cwtl
inc
dec
pop
cmp
jmp
daa
fwait
aas
mov
sub
sahf
pop
jle
sub
int
pslld
push
inc
fcmovne
push
sbb
mov
jmp
lea
jmp
or
jp
pop
mov
scas
mov
jp
cli
fistps
adc
jp
inc
sub
adc
sti
xlat
loopne
xchg
adc
lret
mov
sahf
sub
mov
ret
daa
ret
cmp
jmp
into
mov
sbb
adc
fwait
ret
loope
clc
repnz
imul
cmpsl
in
xchg
and
iret
aam
xchg
iret
jns
out
in
adcl
jns
repz
cld
lahf
adc
nop
add
pop
cmpsl
push
jle
iret
add
inc
scas
mov
je
inc
add
outsb
fs
repz
pop
sti
cmp
insb
xchg
cld
jae
jae
jecxz
jbe
pop
sub
xchg
ret
ja
xor
dec
stos
shll
xor
lods
je
adc
jge
mov
loope
pop
in
push
inc
out
mov
add
std
mov
ljmp
and
xor
dec
mov
call
ss
adcb
inc
sbb
jno
cmp
adc
fwait
andb
fisubs
inc
mov
jmp
out
imul
movsb
xor
stos
lods
loopne
std
mov
push
cltd
lahf
jb
sbb
mov
pop
sti
in
dec
scas
rorl
idivb
test
out
lods
fistpll
scas
pop
push
pop
pop
mov
test
es
sub
mov
test
and
insb
mov
cwtl
dec
adc
pop
notb
pop
push
out
mov
and
cmpsb
sti
cmpsl
shll
cld
incl
mov
pop
and
mov
in
push
negb
sarl
inc
xlat
mov
lret
and
jnp
xchg
mov
js
push
jo
sub
xor
test
push
addr16
mov
pop
lcall
xchg
insl
roll
or
xor
push
pop
fcoml
out
movsb
stc
lea
lock
push
mov
mov
sbbb
add
mov
dec
aam
je
sub
dec
ljmp
int
inc
sbb
mov
shlb
data16
popa
dec
inc
and
loope
mov
sbb
add
fbstp
int
int
and
movsl
bswap
fdivrl
xchg
add
into
push
jne
inc
push
push
and
shlb
inc
and
mov
jmp
out
sti
jp
sbb
mov
mov
movsb
jmp
enter
daa
cmpsb
pop
adc
aas
sub
pop
pushf
mov
ljmp
inc
adc
outsb
les
dec
cltd
mov
adc
add
ljmp
xor
cmp
mov
jno
add
inc
enter
mov
out
decb
enter
add
adc
cmpsb
dec
ret
andb
push
js
and
fstpt
jae
fwait
add
cltd
mov
shrb
aad
aas
imul
inc
inc
xor
inc
dec
mov
jne
push
adc
std
sub
add
je
or
loop
and
dec
push
pop
imul
and
pop
lods
test
and
popf
adc
repz
and
inc
xchg
imul
cmp
sbb
sub
sbb
mov
repnz
xor
cs
pop
aaa
ljmp
inc
rorl
inc
fcmovu
loop
jb
push
inc
bound
mov
xchg
data16
mov
es
popa
inc
dec
mov
push
or
daa
in
and
push
cmpsb
or
bound
jo
mov
imul
jbe
mov
cmpsl
scas
sub
dec
loope
das
in
xor
fs
pop
stc
pop
sbbl
cld
adc
out
cmp
mov
and
pop
movsl
addps
xchg
mov
cld
pushf
and
lock
pop
xchg
or
dec
or
add
stc
inc
out
sub
adc
jnp
nop
pop
pop
mov
lock
call
sti
pusha
out
loop
sbb
aas
push
mov
dec
cwtl
and
cld
lods
sub
stos
int
push
mov
jnp
int
shl
and
push
popa
pop
push
scas
mov
jecxz
mov
lret
jns
xchg
and
jb
pop
jo
test
imul
cmpsl
mov
aas
sbb
mov
in
or
cmp
imul
mov
push
loope
mov
arpl
stos
and
shlb
sarl
and
fisubl
mov
cltd
or
cmc
xor
mov
jae
ljmp
add
std
mov
clc
bound
in
fcmovnb
stc
cmp
stc
mov
mov
ja
add
pop
out
repz
mov
or
sub
int3
inc
lea
jo
cs
mov
mov
fistpll
mov
jno
movsb
ds
dec
cltd
jnp
pop
xchg
pop
mov
push
das
mov
mov
decl
roll
sub
fidivl
mov
inc
jle
pop
cmp
cmp
cmp
inc
push
aas
cltd
or
outsb
mov
outsb
mov
and
inc
xor
cmp
mov
ja
push
repz
adc
adc
call
daa
roll
push
test
in
inc
jno
jbe
cwtl
and
daa
pop
ss
in
sbb
mov
popa
jne
ja
test
cmp
push
leave
mov
adc
jbe
pop
jge
pop
roll
js
into
and
sub
leave
rcrb
loope
jb
cmp
push
pop
nop
dec
lods
leave
adc
adcb
dec
inc
push
lds
inc
ljmp
call
cwtl
sub
sbb
xchg
mov
out
mov
int
pop
mov
xor
je
cmc
mov
jmp
sbb
push
push
iret
mov
imul
pushf
ss
sbb
test
stc
push
sbb
js
xchg
mov
inc
jnp
sub
xlat
std
mov
jmp
push
jns
and
mov
cwtl
shrb
fnstsw
iret
push
mov
jmp
ljmp
sub
adcb
add
rolb
xchg
xor
notb
popw
add
movl
mov
insl
xor
loopne
js
dec
scas
mov
popf
rorl
lods
out
arpl
add
je
stc
jl
xor
test
mov
mov
call
jecxz
repz
adc
mov
dec
jecxz
add
cmpsl
inc
mov
pop
mov
xorb
pop
test
leave
adc
stc
jns
jae
pop
inc
test
push
push
loopne
sbb
fisttpl
add
push
jge
xchg
ret
shl
roll
sbb
ret
xor
mov
cli
je
es
rorb
inc
inc
fwait
shll
pop
pop
dec
ss
into
lea
aad
or
mov
push
sti
inc
mov
xchg
push
stc
aad
in
fwait
imul
or
inc
jl
sbb
pushl
cmp
xor
adc
jge
jmp
mov
stc
inc
mov
loopne
inc
sahf
stos
mov
jmp
xor
dec
pop
jb
addr16
in
sti
pushf
sbb
cwtl
pop
out
push
lock
test
int3
pop
ret
sub
repnz
pop
mov
aas
loop
or
xchg
and
fistps
shlb
sub
pop
decl
in
cmp
pop
lods
or
fstps
sahf
sbb
sub
rcr
jbe
jb
lods
std
jo
popa
jnp
add
ret
xchg
shl
or
fiadds
xorb
rclb
jno
out
sub
inc
pop
aas
jmp
mov
xchg
inc
mov
cmpsb
ret
jbe
and
outsl
orb
xor
stos
fists
stos
femms
loope
mov
add
cltd
insl
mov
imul
bound
jmp
xchg
clc
add
mov
xchg
scas
mov
xorl
mov
sbb
pop
ljmp
ja
or
mov
mov
movsl
inc
test
push
add
imul
adc
cmc
out
pushf
nop
sbb
enter
test
dec
mov
sbb
dec
adc
or
enter
pop
and
sbb
or
sarl
push
ljmp
aaa
add
cmp
adc
pop
mov
add
push
sub
cmpsl
push
jl
sub
loope
cli
rcll
test
xor
imul
jmp
push
mov
into
ss
fsubs
lea
les
jl
cmp
xchg
loopne
insb
mov
push
cmp
add
push
mov
adc
pop
jl
mov
or
pop
bound
inc
or
sbb
xor
mov
pop
pop
cmpsb
mov
dec
and
lea
or
lret
bound
cmp
adc
addl
or
mov
sbbl
fmull
shrb
or
push
sahf
push
sbb
into
add
add
cld
or
fwait
dec
ss
mov
cmp
adc
xchg
je
pushf
int
cli
sub
push
fcomps
ror
sub
dec
lret
pop
les
cmpsb
push
rolb
xor
cmp
jecxz
test
mov
or
lret
jg
pop
xchg
iret
push
jmp
popf
jge
and
mov
scas
jo
in
aas
out
inc
xchg
imul
push
and
inc
pop
xchg
cmp
out
jns
xchg
and
cs
fcomip
popf
mov
mov
iret
sbb
xchg
data16
stc
sub
pop
sbb
repz
jmp
adc
mov
or
outsb
stos
cmpsb
sarb
in
or
bound
fldcw
cmpsb
or
pop
add
adc
cmp
das
pop
pop
out
dec
and
or
mov
sub
cmpsb
inc
js
ret
cmp
popf
insb
pop
out
mov
sarl
ret
aam
cmpl
dec
inc
mov
ds
test
lahf
out
lret
test
sub
scas
mov
jnp
pop
add
pop
scas
dec
jbe
shlb
iret
lahf
pop
cmp
test
fs
sbb
bound
icebp
in
push
scas
frstor
xchg
mov
pop
xchg
cmp
pop
icebp
add
mov
aam
dec
mov
cmp
sbb
clc
sub
jae
mov
lock
inc
repz
dec
sete
sbb
stos
negl
nop
xor
add
mov
hlt
mov
and
or
lock
test
test
popa
lret
es
stos
sti
mov
out
cmp
data16
lret
pop
sub
cmp
jnp
out
fsts
ret
mov
les
or
mov
icebp
push
mov
fidivrs
ja
pop
cmp
xchg
rolb
loop
and
or
xchg
bswap
test
mov
sti
cwtl
ret
or
shlb
popa
rorl
adc
push
adc
cmp
fcompl
cmp
lods
sub
xor
mov
shl
mov
pop
hlt
shlb
leave
cmp
mov
lret
lret
cmpsb
inc
ja
mov
dec
xchg
stos
inc
inc
shlb
jne
dec
sub
xchg
decl
dec
mov
je
jl
sarl
pop
sbbl
pushf
and
cmpsb
pop
pushf
inc
mov
xchg
mov
hlt
out
or
jp
add
mov
adc
or
daa
sub
loope
sbb
lods
je
or
xor
or
mov
insl
sbb
gs
xchg
call
loopne
push
mov
ret
mov
leave
cmp
hlt
fsubrl
pop
hlt
jge
pop
inc
scas
ficoml
andl
pushf
pop
jp
sti
iret
jae
push
cmp
pop
fnclex
jl
scas
ret
out
mov
icebp
push
jo
daa
mov
dec
sbb
gs
cmp
aaa
lret
aad
pusha
jg
or
out
nop
popf
jae
mov
or
jne
mulb
leave
lds
cld
jp
roll
lods
dec
retw
rcr
xchg
repnz
xchg
in
jb
je
ljmp
out
pop
iret
pop
ss
fiaddl
into
xchg
cld
pop
pop
jo
jae
outsl
pop
test
fldpi
lods
xchg
test
dec
add
add
jno
stos
push
xchg
xor
push
shrb
sub
mov
add
stc
jp
mov
scas
or
int
push
addr16
pop
frstor
call
sub
pop
arpl
in
negl
xor
pop
jnp
cmc
test
jno
xor
mov
outsl
inc
pop
in
ljmp
inc
mov
icebp
movsl
push
xchg
and
subl
pop
sbb
addr16
xorl
fisttpll
dec
sbb
cmp
sbb
out
mov
ljmp
mov
leave
decl
mov
stc
aad
mov
ljmp
imull
das
sar
and
mov
mov
mov
cld
iret
ret
jmp
xor
xor
sbb
cmpsb
xchg
repnz
or
and
dec
push
fstps
xor
fstps
lcallw
lahf
mov
mov
out
xlat
aad
loope
stos
push
xchg
int
rcrb
push
mov
ja
add
jl
inc
push
cmp
std
aaa
daa
lock
pop
mov
dec
cmc
dec
push
mov
scas
loopne
mov
andl
mov
orb
notb
outsb
add
cmp
imul
mov
test
pop
xlat
xchg
scas
inc
jbe
and
push
push
mov
or
adc
jo
mov
sbb
ret
push
jge
pop
test
adc
leave
dec
rolb
jno
inc
aad
cmc
lock
fstp
outsl
xor
into
xchg
shrl
xor
jo
xor
cmp
loope
mov
inc
call
xor
mov
cli
push
popf
outsb
dec
into
js
aas
ljmp
mov
add
add
or
bound
mov
pusha
xor
pop
andl
outsl
aam
dec
jmp
jbe
add
jno
xor
arpl
mov
addl
dec
add
lret
test
jo
cmp
cmp
cmp
cmpsl
push
pop
jg
inc
testb
push
jnp
cmpsb
stc
aad
sub
icebp
pushf
out
rol
data16
cli
mov
cmp
popa
xchg
rcl
cmp
cmc
scas
cld
mov
rorl
dec
loope
sahf
jb
add
jmp
popa
and
test
scas
push
pusha
dec
push
cmc
mov
push
cmp
adcl
jge
movsb
xchg
mov
add
aad
sti
loope
add
sbb
cmp
lret
mov
ret
data16
jge
add
andb
aaa
sti
rorl
xchg
daa
xor
call
int
and
mov
cwtl
test
sti
int
aas
shl
adc
stos
popa
lock
je
sbb
push
fbld
push
loope
inc
popf
mov
imull
arpl
and
addb
shl
adc
iret
dec
push
lds
shlb
clc
sbbb
adc
xchg
push
enter
sub
inc
sti
sbb
mov
inc
int3
mov
daa
push
jb
sbbl
dec
xchg
mov
fbstp
cmp
shlb
mov
fldt
dec
sarl
or
add
add
clc
stos
xor
xor
xor
in
adc
out
jo
sub
xchg
orps
inc
test
and
test
and
clc
pop
xchg
je
xor
mov
hlt
xchg
push
fisttpll
out
int
mov
mov
loope
daa
cli
mov
pop
test
icebp
adc
mov
pushf
or
cltd
cmp
ljmp
scas
and
shll
cli
mov
aas
loope
and
push
pop
pop
dec
pusha
push
jae
scas
lcall
dec
mov
inc
sub
or
nop
dec
sub
xor
fldl
adc
mov
pop
insl
imul
lds
cmpb
sbb
cmp
dec
adc
mov
int3
xor
data16
add
movsb
loopne
loopne
pop
dec
push
aaa
dec
jae
daa
jecxz
subl
push
out
xchg
out
xor
and
hlt
insb
push
icebp
mov
cmp
and
icebp
faddl
xor
arpl
lods
aad
xchg
cmp
gs
int
sbb
cmp
sbb
pop
clc
mulb
mov
popa
fwait
test
fcomp
mov
mov
cmp
and
add
jge
and
and
bound
js
adc
fildl
sbb
mov
bound
jmp
cmp
adc
ljmp
inc
xchg
adc
popf
sbb
pop
mov
outsb
shr
test
mov
in
xchg
or
fadds
out
in
sbb
mov
sbb
insb
adc
mov
movl
lock
cmp
inc
push
in
scas
ja
xor
jmp
fmuls
mov
into
sub
pop
ja
add
push
dec
add
in
xabort
mov
movsl
or
stc
outsl
jns
scas
mov
es
cs
cwtl
and
lods
add
andl
leave
jb
sbb
lods
in
or
mov
mov
mov
dec
mov
lea
push
push
adc
sub
popf
cmc
nop
cmc
stc
or
dec
iret
call
dec
mov
xchg
cmc
dec
ljmp
mov
push
stos
ret
insb
popa
cmp
push
push
ljmp
and
loop
test
sbb
xor
test
dec
inc
jp
pop
sar
jae
lock
or
lcall
add
mov
ret
je
pop
sub
dec
mov
icebp
jle
mov
mov
stos
adc
les
adc
ljmp
jae
xchg
mov
ja
orb
push
arpl
and
adc
inc
push
xchg
pop
lods
inc
mov
cmp
add
in
jg
adc
and
jb
push
clc
inc
fimull
mov
movsb
sbb
or
dec
movsb
xchg
pop
insl
ljmp
jg
sub
inc
aaa
je
mov
push
cmpb
push
gs
dec
test
inc
insb
mov
cmp
jb
fwait
push
xchg
aas
jle
mov
and
xor
cmp
xchg
pop
rorb
mov
sub
adc
inc
push
xor
ss
adc
mov
pop
pop
xchg
mov
xchg
into
add
lods
jp
sarb
mov
mov
filds
dec
jno
jmp
je
jno
sahf
imul
pop
stos
or
std
jge
sub
sub
gs
mov
mov
sbb
mov
shll
dec
xchg
cmp
jge
mov
popf
mov
dec
sahf
pop
push
lahf
fisubrs
adc
xor
jecxz
in
jbe,pt
push
pop
ficompl
inc
in
push
out
popf
ret
pusha
add
or
call
insl
aas
push
addl
dec
inc
out
lcall
dec
mov
lret
cwtl
pop
int3
stc
mov
lret
iret
and
fwait
repz
inc
fistl
xchg
mov
leave
sub
xchg
lcall
xor
outsb
lret
iret
lretw
hlt
fnstsw
fnsaves
add
out
jp
adc
jo
fstps
dec
mov
stos
push
inc
aam
ljmp
out
icebp
lret
data16
inc
fisubs
adc
cmpsl
jmp
xchg
imul
ja
int
xor
sub
loope
ss
dec
cmp
mov
push
cld
fcmove
in
or
mov
push
inc
iret
repnz
call
sub
push
cli
pop
daa
inc
loop
cld
insb
jmp
cmp
pop
or
jg
cmpsl
xor
sbb
fs
xchg
ret
pusha
test
push
mov
and
in
push
add
pop
mov
jae
sarb
jle
je
mov
gs
int
hlt
decb
jns
and
xchg
fcoml
les
jecxz
xchg
mov
pusha
cmp
leave
js
gs
xchg
out
jle
aam
icebp
push
test
cmp
cmpsl
push
sbb
aam
cs
push
lods
popa
jnp
je
mov
adc
sub
pop
cmpb
xchg
les
iret
inc
adc
mov
lcall
gs
je
pop
mov
lret
xchg
pop
sbb
mov
call
les
nop
int
out
add
cltd
adc
arpl
xor
inc
or
pop
addr16
pop
mov
xchg
lea
loopne
fstpl
xchg
mov
push
jge
and
leave
push
insb
fldl
gs
movsb
pop
sbb
mov
push
in
jle
mov
loop
sub
icebp
divb
rorb
inc
push
xlat
aad
pop
cltd
mov
dec
adc
mov
loope
jg
jo
sbb
inc
orb
jle
adc
mov
jge
popf
pop
cld
ret
nop
push
lods
push
push
adc
and
adc
rorb
lods
pop
lret
out
cmp
jg
cmp
and
or
repz
in
xchg
ret
pop
dec
scas
mov
insb
inc
lcall
sbb
jp
lods
insl
mov
subl
xor
sbb
shll
pop
xchg
shr
bound
enter
in
xchg
or
shlb
cmpsb
in
sbb
push
cs
out
repnz
cmp
jg
or
add
mov
rcrb
inc
fnstenv
loop
iret
push
stc
imul
nop
sub
ss
cmc
lea
pushf
cmpsl
dec
cmp
xchg
add
out
shll
outsb
xlat
addr16
or
je
mov
icebp
je
pop
push
ja
mov
cmp
mov
rcrl
cmc
cli
mov
divb
scas
dec
fstpt
inc
jnp
faddl
push
mov
sbb
outsl
clc
outsl
pushf
out
pop
imul
decb
xor
pop
decb
cmpb
scas
pop
xchg
call
negb
jge
rcrb
hlt
xchg
in
cmp
hlt
daa
imul
sbb
in
icebp
fstpl
clc
mov
mov
ljmp
pop
stos
mov
rorl
nop
rcll
adc
daa
sahf
orb
adc
flds
or
test
pushf
jnp
jnp
andl
sub
imul
aaa
mov
icebp
dec
sbb
pusha
inc
push
sub
xchg
loop
insb
push
push
inc
das
in
jb
popa
add
add
ds
nop
lret
stos
sbb
into
bound
stc
cld
xchg
clc
hlt
out
test
pop
insl
lahf
jmp
push
test
inc
iret
in
push
sbb
push
push
out
push
fcmove
inc
and
push
fadd
xor
cmpsb
jnp
cmp
sub
pop
xchg
push
cld
fistl
aam
lahf
addl
inc
add
jno
icebp
je
xchg
cs
pop
fisubs
mov
js
out
dec
pushl
cmp
mov
add
xchg
jns
stc
icebp
aas
fld
test
mov
lcall
rcl
insl
cmp
daa
and
push
push
fld
pusha
cmp
mov
insb
add
mov
pop
in
mov
add
test
mov
push
mov
hlt
mov
push
push
or
push
ja
mov
xchg
mov
cwtl
push
loopne
sahf
jle
or
mov
imul
xor
mov
enter
mov
xchg
addr16
dec
dec
out
add
std
sbb
daa
insb
cmpsb
mov
out
pushf
sti
lock
mov
cli
cmc
cltd
or
and
xor
push
loope
or
dec
jbe
dec
and
cmp
cwtl
into
jb
test
dec
or
repnz
inc
mov
adc
sub
cmp
pop
inc
cmpsl
into
gs
cmc
xor
sbb
mov
push
sbb
mov
dec
push
dec
ret
xchg
notl
dec
pop
cmp
and
adc
or
jnp
sub
cmp
into
sbb
hlt
xor
or
and
loope
test
popf
xor
scas
xchg
loopne
andb
xor
pop
push
or
aaa
sti
sarb
mov
adc
adc
movsl
cmp
sbb
mov
outsb
shl
movsb
aad
cmpsb
in
mov
xor
fidivl
imul
in
inc
ja
xchg
and
ds
adc
and
pcmpgtd
pushl
out
cltd
rcll
insl
pop
out
xor
mov
mov
push
push
addl
or
and
pop
movsb
out
sub
mov
adc
adc
iret
add
or
popf
idivl
pop
test
cmp
mov
jno
rorb
push
out
popf
js
xchg
test
imul
mov
push
dec
adc
repz
gs
xchg
in
enter
cmc
mov
push
jp
ret
and
xchg
push
xchg
es
sbb
imull
pushf
rorl
jnp
xor
xor
xor
jns
push
data16
xor
cmovns
jae
icebp
movsb
cs
mov
xchg
out
andl
sahf
out
and
add
sub
mov
pop
adc
dec
jg
sarl
cmp
jb
sub
mov
mov
mov
es
out
inc
sub
mov
and
ja
cmp
push
adc
pop
pop
test
adc
mov
cmp
inc
fisttpll
jg
jb
mov
fsubrl
inc
sub
lods
sub
sbb
outsl
shrb
add
adc
imul
mov
imul
dec
clc
insl
sbbb
jnp
cwtl
ficoml
mov
repz
jne
inc
ds
mov
xchg
mov
mov
lods
pop
aaa
dec
pop
cmpsl
pusha
imul
and
in
and
loope
dec
addr16
push
add
inc
test
xor
adc
loope,pn
sbb
push
lods
lods
fldl
ljmp
imul
jle
and
cmp
mov
test
or
jb
cmp
sub
jmp
push
xorl
sub
sbbb
stos
xchg
jmp
out
push
or
sbb
pushf
sub
pop
movl
inc
je
popf
jmp
bound
mov
cli
mov
lahf
imul
arpl
add
ja
push
js
ret
ret
mov
push
mov
pop
sbbl
jmp
sub
xchg
fucomp
xor
sbb
adc
ljmp
adc
in
out
out
lock
stc
iret
in
adc
and
mov
mov
fwait
pop
inc
fcomps
push
repz
inc
arpl
adc
inc
cmp
lret
sahf
pop
stc
sbb
dec
sahf
and
and
mov
out
or
stos
pop
mov
es
out
cld
ljmp
push
test
fdivr
fbld
nop
ja
or
push
mov
pop
frstor
test
push
and
jle
repz
call
test
fwait
cmp
aaa
shlb
movsb
incl
cwtl
cmp
mov
test
scas
pop
dec
push
or
xchg
ja
inc
shll
cli
orl
imull
pop
xor
cmp
cli
xchg
cmp
stos
pop
jle
sbb
xor
cmc
xchg
jns
lds
jno
add
pop
cmp
insl
in
es
mov
push
adc
gs
bnd
enter
xorl
or
sub
push
pop
push
test
push
push
push
icebp
sub
sub
add
push
jge
ds
testb
ljmp
mov
dec
jge
inc
mov
mov
int3
loop
cmp
mov
jmp
jns
clc
sbb
addr16
sbb
adc
cmp
aaa
add
mov
jecxz
xlat
sbb
sub
lea
and
sub
fsubrl
dec
adc
adc
leave
cmp
dec
add
js
push
dec
je
jle
xchg
push
add
loop
arpl
ja
or
imul
and
fwait
in
mov
cmpsb
sub
dec
cmpsl
and
mov
das
das
into
mov
outsb
test
dec
pop
inc
push
cmpl
pusha
sbb
cmp
loopne
jmp
adc
daa
inc
dec
sub
mov
add
cwtl
mov
mov
rcrl
mov
jae
cmp
mov
add
cmp
ret
inc
mov
imul
adc
hlt
das
not
sbb
adc
add
cmpsl
mov
mov
xchg
jge
scas
inc
dec
loop
test
out
std
fdivrl
lret
cmc
outsb
or
popa
adc
push
xlat
sti
fnop
fistpll
sbbb
or
cmp
xor
idivb
mov
jmp
dec
cltd
inc
out
loopne
stc
pop
les
sbb
and
lcall
jb
cmp
xor
push
fincstp
jo
ljmp
std
out
xor
mov
sub
in
sub
cmp
sbb
test
cli
sahf
sti
mov
sbb
out
test
mov
add
push
ret
negl
dec
sbb
lods
pop
push
push
mov
sub
push
adc
add
xor
sbb
cli
add
mov
xchg
jne
adc
jge
stos
dec
xchg
or
scas
pop
dec
stos
adc
mov
inc
and
xchg
int3
scas
in
xor
mov
lahf
fildl
inc
jbe
enter
lcall
jns
leave
loop
inc
dec
push
adc
rcll
xchg
insb
call
mov
test
lods
imul
sbbl
and
std
mov
in
mov
mov
or
iret
std
mov
add
out
divb
addl
or
ljmp
xor
pop
imul
adc
insl
and
movsl
cmp
or
repz
subb
or
mov
push
adc
ja
xor
and
sub
popa
inc
fsubl
mov
jmp
inc
ret
pop
add
stos
mov
sbb
add
cmp
mov
mov
popa
adc
test
fnstsw
and
and
cmp
test
clc
sub
movsl
arpl
cmpsl
push
stos
in
xchg
loop
sub
sbb
mov
jne
ret
xor
movsb
mov
jae
mov
js
lahf
in
mov
mov
aaa
scas
xor
inc
sti
jo
int3
push
stos
cli
sarl
jne,pt
stc
or
xor
lcall
add
fbld
cmp
cmp
mov
add
shlb
loopne
out
mov
scas
outsb
les
inc
lods
loopne
hlt
push
adc
sub
faddl
js
in
cmp
fucomi
mov
pop
and
fldenv
cmp
mov
xchg
pop
mov
push
dec
int
ds
lods
xor
or
adc
leave
sbb
in
xchg
mov
mov
test
mov
mov
pop
mov
mov
loope
enter
das
fiadds
inc
imul
test
dec
push
xor
or
outsb
std
push
js
fisttps
movsbl
mov
data16
xlat
popa
xchg
divl
push
rcrl
dec
jmp
dec
ja
cmc
sub
ret
out
pop
aad
mov
mov
lret
sub
and
or
fdivrs
pop
in
mov
sub
sbbb
fstpt
fs
jb
aad
in
jb
movsl
fstpt
jnp
test
inc
out
push
push
sbb
insl
mov
cli
cmp
in
lock
sbb
gs
lea
push
add
push
sub
xchg
out
or
mov
cmp
data16
movsb
jns
stos
and
fidivrs
roll
pop
dec
stc
cmp
loop
arpl
dec
xor
imul
gs
hlt
pop
gs
pop
mov
gs
fmuls
mov
int
es
enter
xchg
ret
rorl
inc
js
test
lret
push
jbe
leave
fimull
and
sub
sbb
mov
out
mov
jecxz
cld
aad
gs
ljmp
cli
out
push
xchg
stos
std
jmp
jb
mov
out
call
and
inc
sbb
lods
stc
and
movsb
fmuls
ljmp
sbb
loopne
fimuls
xor
or
mov
movsl
out
adc
or
jmp
sub
adc
shrl
mov
out
lds
mov
scas
rorb
repnz
iret
aas
rcrl
rolb
jnp
arpl
add
sti
mov
add
pop
cmp
mov
or
sub
sbb
lret
imul
jns
lret
fldl
stos
sbb
xor
popf
stos
lods
mov
sub
xor
mov
ret
jge
mov
lods
out
leave
push
add
lock
rorb
adc
xchg
and
fidivl
add
cltd
xchg
popf
push
insb
and
jno
pushf
mov
nop
mov
lock
je
aad
pop
scas
dec
or
lcall
ret
mov
scas
sbb
fnstsw
inc
pop
rolb
imul
adc
testl
shrb
pop
and
dec
push
mov
fmull
mov
je
fldenv
lret
xchg
insb
cli
push
mov
sub
ljmp
hlt
ficoms
nop
pop
mov
and
push
jno
fucomi
push
leave
cmp
mov
lds
into
test
mov
dec
dec
push
imul
or
pop
add
xchg
adc
std
dec
test
cmp
dec
sbb
scas
push
cmpl
cmp
insb
dec
js
lods
imull
cmp
xlat
sub
clc
pop
pop
shrb
adc
and
jno
stos
and
mov
or
cltd
xchg
inc
out
mov
idivl
cmp
imul
push
xchg
pop
clc
jecxz
mov
inc
pushf
scas
adc
xor
addr16
and
mov
cmp
xchg
jns
sbb
push
mov
mov
test
dec
cmp
xor
jp
in
jne
lock
push
rcl
or
push
push
std
rolb
in
mov
outsl
cmpsb
push
repz
cwtl
ds
in
push
sub
pop
adc
scas
mov
adc
mov
rorl
scas
imul
out
lret
mov
pop
in
std
lods
xor
scas
js
and
clts
iret
push
sti
mov
xor
inc
sub
sbb
addr16
icebp
mov
xchg
dec
mov
push
les
xchg
std
push
xchg
jp
xor
and
lds
dec
lret
adc
mov
sahf
mov
cmp
arpl
sub
repz
cs
into
ljmp
jle
imul
test
inc
mov
loopne
aaa
cmp
jmp
fld
rcll
jecxz
mov
cs
and
pop
push
adc
add
mov
faddp
xlat
xor
arpl
ret
stos
into
aam
es
sub
inc
lods
jmp
fiaddl
lea
mov
lret
pop
or
insl
push
nop
fsubrp
clc
jbe
popl
fcom
push
movsl
hlt
mov
sub
mov
in
sbb
add
add
sbb
fstpt
jecxz
nop
or
cmp
enter
aas
loop
mov
pop
or
adc
sub
xchg
push
inc
or
test
js
cltd
es
mov
jmp
jnp
roll
fwait
cs
incb
out
insl
and
xor
fxch
push
mov
sbbl
mov
sub
jp
sub
mov
pusha
push
fwait
js
out
ret
int3
out
cmp
xchg
std
sbb
pushf
mov
repz
mov
movsl
push
in
push
popf
div
bound
lock
xchg
std
sbb
cli
mov
dec
inc
rcrb
dec
in
es
popl
nop
imul
popa
cmp
js
insl
xchg
sbb
sbb
scas
xor
and
mov
ljmp
ret
lret
sbb
icebp
int3
scas
jmp
pop
and
fstl
aad
xlat
outsb
outsb
cltd
fisubs
sub
rorl
sbb
inc
adc
sub
icebp
adc
jbe
gs
adc
lret
fsubs
sbb
mov
int3
jb
popa
mov
mov
adc
out
and
aad
loope
cmc
lock
adc
mov
js
adc
in
jl
scas
cs
mov
xor
lods
orb
loopne
sub
fisttps
xlat
and
aaa
inc
lock
ss
push
dec
mov
dec
push
pushf
lcall
dec
je
cmpl
xchg
or
dec
mov
xchg
gs
adc
cmc
mov
sub
push
adc
push
sub
es
push
mov
adc
js
das
cltd
dec
adc
and
enter
and
xor
xor
das
cmpb
andb
mov
dec
das
add
lods
aaa
es
mov
out
mov
dec
sbb
inc
push
adc
adc
rcll
test
jo
pop
or
mov
add
xchg
fildll
pop
sub
hlt
push
loope
push
mov
inc
sub
pop
push
mov
dec
or
iret
pop
xchg
pop
push
aaa
out
dec
xchg
or
in
push
add
aam
iret
int3
sbbb
scas
rolb
rcll
add
xchg
movsb
cmp
popa
cmpsb
roll
in
xchg
and
repnz
popf
loop
push
jne
mov
jmp
idiv
mov
rorb
sub
dec
sbb
pop
int
push
and
lcall
or
pop
orl
iret
test
jg
jno
mov
sti
lods
outsb
xor
enter
cmp
and
or
cli
and
xor
mov
imul
setae
xor
sbb
or
mov
push
mov
pop
pop
add
sbb
dec
or
push
idivl
cmpsb
gs
sbb
testl
clc
push
clc
imul
das
inc
out
addl
ss
test
loop
cmp
aam
mov
adc
imul
or
adc
pop
pop
xchg
dec
xchg
mov
pop
sub
int
mov
jnp
jp
xor
mov
imull
js
cmpsl
jo
cwtl
into
out
and
cmovae
lds
subb
shrl
lcall
push
call
daa
jmp
jbe
loop
lds
cli
mov
adc
sub
aaa
xchg
sarl
mov
push
push
cmc
pop
aad
sarl
out
sub
shrl
jge
xchg
sahf
and
fimull
lahf
ja
movsb
ja
push
sti
ds
mov
ficomps
mov
repnz
xchg
repnz
pop
mov
out
aam
cmc
add
arpl
insl
ja
loopne
js
hlt
mov
adc
pusha
pusha
push
imul
mov
ja
sub
je
fcomp
in
notb
mov
or
stc
cmc
test
subb
or
pop
out
jg
xlat
cs
cmp
je
sbb
add
push
add
pushf
dec
pop
fs
xor
mov
sbb
pop
push
mov
jmp
js
stc
ret
mov
and
popf
lds
addr16
std
or
cmp
sbbb
stos
dec
adc
and
push
stos
xor
insb
outsl
mov
lcall
in
test
fidivs
mov
clc
dec
outsl
cmp
pop
ret
sbb
push
sti
jo
mov
adc
in
cld
call
add
lods
outsl
and
xchg
xchg
inc
mov
imul
add
sbb
sub
addr16
adc
mov
ja
fcmovnu
pop
in
mov
out
cli
out
mov
jl
js
xchg
dec
mov
lock
dec
test
sbb
pop
test
dec
push
nop
jle
arpl
jae
jno
mov
xor
cmpsb
insl
mov
insl
push
test
xor
mov
pop
add
leave
adc
insl
pushf
ret
fwait
std
sbb
fnsave
icebp
sbb
hlt
fadd
ljmp
add
mov
and
or
pop
pop
lds
ljmp
repnz
inc
cmp
and
sahf
outsb
daa
mov
inc
subb
adc
sbb
lods
stos
pop
pop
popa
and
push
aad
aaa
ss
mov
add
adc
cmp
adc
in
out
shlb
int
mov
jne
or
test
cmc
mov
mov
notl
aad
pop
mov
push
xchg
aam
cmp
cmp
xchg
lcall
aam
push
mov
fsts
cmp
lock
ss
inc
out
rcrb
data16
cmp
xchg
cltd
fstpt
leave
and
sub
mov
movsl
or
push
push
loope
xchg
ret
repnz
repnz
rcrb
pop
and
jle
push
adc
lahf
cmp
lret
out
xor
mov
loope
fs
inc
mov
push
lea
outsl
sti
aas
lahf
xchg
fcompl
rcrb
cwtl
adc
in
xchg
jns
lcall
push
mov
pop
rcl
xchg
cwtl
pop
mov
fs
adc
je
loope
mov
mov
mov
data16
out
movsb
cmpsl
in
mov
push
and
mov
test
out
lods
mov
out
popa
cmp
jle
pop
mov
rorl
xchg
ds
testb
or
inc
pop
cmpsb
fmuls
jnp
pusha
mov
mov
xchg
xor
dec
cmp
jae
dec
test
adc
pop
inc
insb
js
cs
fs
sbb
mov
mov
daa
stos
and
cmp
shrb
cmpl
mov
mov
jno
popl
aad
fmuls
inc
jle
push
ret
mov
les
stc
ret
sub
cmp
dec
mov
jne
adc
test
adc
pop
mov
cmp
out
or
arpl
xor
xchg
cwtl
sbb
outsb
cmp
test
jnp
dec
aad
and
in
lock
cld
out
iret
mov
mov
lcall
imull
push
in
imul
add
aaa
out
into
adc
aad
cli
push
shlb
cld
adc
nop
sub
mov
scas
movsb
cwtl
jmp
dec
fbld
je
loop
repnz
jo
push
cmc
sbb
adc
aad
jge
in
xor
mov
adc
repz
add
shll
repz
jne
cmp
movsl
xor
pop
mov
shll
push
xchg
aad
jp
or
ret
inc
add
inc
cs
adc
adc
xchg
outsb
xor
push
addr16
hlt
or
add
pop
lret
std
ds
dec
lret
mov
or
cmc
das
jl
push
inc
add
inc
sub
sahf
inc
cli
jns
dec
divb
sub
add
negl
loopne
insb
push
adc
push
pop
fists
and
add
fmul
jle
xor
sbb
rcrb
lods
pusha
jmp
mov
mov
push
cmpsl
add
test
xor
arpl
insl
xor
or
xor
xchg
cmpsl
ljmp
imul
adc
bound
inc
sbb
jl,pt
push
push
mov
fmulp
lcall
pushl
lea
jge
mov
xchg
fnstsw
rcrb
and
pop
aas
sbb
mov
data16
pop
pusha
inc
add
or
enter
dec
sbbl
dec
data16
xor
adc
xchg
or
stos
or
dec
inc
nop
cmp
ljmp
repz
iret
stos
push
mov
in
jnp
xor
repnz
add
cltd
sbb
movsb
fmulp
xchg
out
stc
lahf
pop
xor
test
clc
push
je
pop
jb
jg
inc
shr
xlat
jg
sbb
fadds
mov
cmc
and
adc
cmp
dec
pop
push
std
out
out
mov
mov
enter
call
sub
out
push
pop
jg
fbld
movsb
cli
pop
push
ljmp
enter
loope
cmc
xchg
cmpb
dec
cwtl
cmc
mov
insl
push
jmp
hlt
fabs
ret
dec
icebp
inc
out
add
jns
pop
aaa
jmp
or
add
push
fldenv
and
add
mov
dec
shlb
lods
std
mov
icebp
push
je
popf
cmpsb
dec
pop
jno
cmp
add
add
shrl
movsb
jns
add
inc
aad
cs
arpl
test
xor
adc
rcrl
and
sub
mov
dec
arpl
xor
shlb
setle
cmc
xor
jns
add
inc
lcall
inc
and
out
mov
stos
xor
pop
fidivrs
lret
mov
mov
sahf
push
jmp
js
cmp
push
xchg
outsb
enter
and
or
stc
movsb
xor
addr16
mov
shrl
mov
xchg
jmp
xchg
add
clc
jae
mov
lds
xchg
and
iret
dec
inc
sahf
stos
addr16
xor
jle
fdivs
js
xor
cs
fsubs
lret
lcall
mov
cmp
pop
lds
push
push
xor
stos
hlt
cli
adc
sub
imul
pop
cmpsl
sbb
pop
jg
pop
and
les
cld
jge
ds
push
cmp
cmp
xchg
int
dec
stos
sti
mov
mov
jp
adc
mov
xchg
adc
repnz
loopne
into
ja
mov
pop
out
cli
dec
and
sub
push
xor
push
call
cs
push
repnz
test
push
xchg
sbb
out
icebp
movb
xor
pop
cs
cmp
xchg
sub
aaa
mov
mov
std
inc
sub
and
out
or
jge
cmp
inc
cmp
test
int3
jp
mov
imul
sub
inc
push
xor
pop
xchg
and
adc
movsb
pop
xchg
test
in
enter
mov
hlt
daa
inc
pop
jp
mov
fdiv
jl
dec
mov
int3
call
ss
bound
cmc
jns
sbb
xor
sbbl
fcompl
sbb
into
xorb
test
sahf
shr
xor
push
pop
rcll
aad
leave
or
enter
add
lock
dec
dec
nop
hlt
jecxz
dec
mov
push
cmp
add
jne
jp
and
inc
imul
lods
mov
pop
loopne
dec
shlb
or
cmc
cmpsl
pop
outsl
mov
sbb
fists
and
loopne
ret
lret
jmp
mov
sarl
or
test
mov
movsb
cmp
loope
pop
stos
push
pcmpgtb
push
cmp
push
jmp
or
jns
cmp
xor
in
iret
bound
je
aad
nop
xchg
xlat
fiadds
jo
ret
out
jb
rclb
xchg
mov
les
test
jg
adc
out
repz
andl
aad
cld
jl
nop
andl
into
mov
test
xchg
lret
xor
and
es
push
or
jb
xchg
shll
and
pop
icebp
jl
pop
mov
mov
push
push
nop
push
fxch
add
jge
dec
popa
adc
dec
popf
and
pusha
push
lcall
cmpsb
test
dec
lock
mov
xor
xchg
fistl
sub
out
mov
jge
mov
jle
fisttps
outsb
inc
cmp
cs
mov
in
mov
test
add
xchg
stos
xchg
adc
add
xchg
jmp
xor
rcrb
insl
stos
mov
push
adc
jbe
out
inc
jbe
mov
mov
shll
jno
data16
push
sub
cmpsb
jp
mov
mov
lahf
dec
adc
shll
xchg
call
dec
roll
dec
jecxz
js
jmp
outsb
test
sbb
inc
or
cli
add
fisubrs
cmp
inc
push
in
int
in
iret
inc
pusha
hlt
mov
stos
and
or
scas
aas
imul
jmp
jle
sbb
pop
lea
inc
icebp
jns
push
dec
outsb
popf
imul
pop
sahf
les
or
rcll
outsb
xchg
fcom
add
adc
add
popa
test
xchg
insb
aas
cmc
sub
jne
add
or
daa
xor
add
mov
jge
fwait
xchg
stos
inc
pop
ljmp
clc
inc
or
out
inc
mov
jbe
inc
lret
ss
push
icebp
arpl
dec
xor
frstor
cmp
negl
iret
push
cld
mov
mov
ja
fwait
jg
fmuls
adc
das
pop
popa
jno
pop
addr16
mov
jp
gs
mov
pusha
fcompl
gs
pop
dec
mov
imul
add
sbb
jle
pop
cmpsl
test
jae
imul
push
rcl
mov
lods
sbb
dec
in
mov
adc
xchg
jmp
sub
jne
dec
mov
jo
repz
sub
or
mov
std
lahf
shrb
jnp
fidivs
rol
and
jge
je
push
xchg
jne
fs
xchg
into
ds
in
movsl
data16
shll
push
fmuls
daa
test
aaa
outsl
dec
scas
push
sti
dec
adc
pop
xor
mov
push
jbe
les
mov
mov
fsubr
mov
sub
addr16
adc
push
push
movsb
push
cs
xchg
push
push
in
insb
cs
ret
xchg
inc
lahf
sahf
pusha
pop
cli
je
in
add
sbb
andl
and
or
inc
pop
sbb
imul
cmp
inc
cli
and
fstpt
jb
scas
addr16
xor
lods
imul
test
dec
movsb
in
cmp
test
or
mov
xchg
je
push
jl
jbe
std
leave
xchg
orl
scas
xor
into
sub
adc
pop
call
inc
leave
test
push
ffreep
cmp
mov
sub
push
dec
pop
jecxz
negl
fildll
ficompl
lcall
gs
mov
sbb
dec
jge
pushf
lret
mov
jb
lahf
jmp
push
fisttps
stos
mov
std
push
push
jmp
mov
jecxz
fiadds
scas
adc
lcall
lea
xchg
arpl
push
dec
out
int
outsl
xchg
inc
loopne
outsb
leave
push
inc
xor
inc
es
cs
mov
mov
xor
mov
or
add
push
stos
cmc
adc
pushf
jecxz
pop
fcmove
xor
ficoms
cmpsl
and
pop
mov
sti
push
mov
mov
xchg
fdivr
and
push
movsb
ja
loop
jns
push
xor
jg
push
jle
pop
gs
dec
repz
incl
mov
xchg
data16
push
xchg
dec
or
subb
sbb
xor
xchg
add
jae
lret
aam
pop
adc
clc
subl
adc
stos
xchg
insl
hlt
loop
repnz
jmp
bsf
in
rol
pop
jae
mov
pop
dec
clc
out
mov
loopne
push
sub
push
fldcw
sbb
lds
lock
jle
orl
js
pop
inc
and
cmpsb
sbb
inc
cmp
mov
sbb
fmuls
pop
test
dec
cmp
sub
and
cmp
xchg
push
xor
lret
or
mov
jp
dec
sbb
add
mov
int
jp
jl
ds
dec
inc
enter
lods
sbb
adc
mov
loopne
mov
jge
ss
icebp
sbb
dec
mov
xchg
push
in
fisubrl
mov
xchg
mov
add
push
mov
jae
outsl
ffree
mov
out
xchg
fdivrs
cs
mov
xlat
and
int
jmp
push
sahf
and
rcrb
xor
out
xlat
dec
iret
pop
icebp
das
mov
mov
mov
lret
or
push
adc
and
shlb
and
fnstenv
cmp
inc
loope
loop
jg
add
cmp
xchg
cmp
into
fwait
lods
int3
ss
loopne
jae
cmp
cmp
dec
ret
repz
sub
jg
ja
sbb
imul
lea
cmp
xchg
dec
stos
dec
jbe
cmp
cmp
iret
cltd
lret
cwtl
xorl
call
cmp
sbb
inc
jecxz
push
nop
hlt
xchg
adc
mov
adc
movsl
lods
push
xchg
cli
push
clc
loop
xchg
filds
lds
cmp
mov
out
mov
popa
mov
and
inc
jns
xor
and
and
or
aam
repz
lds
xchg
push
mov
faddl
mov
movsb
popf
and
rcr
dec
divb
fstpt
mov
aas
or
test
in
push
cmpsb
inc
jne
push
and
pusha
fistpl
gs
xor
movsl
inc
and
hlt
mov
aaa
popa
fidivrl
lock
lret
or
mov
aam
mov
xchg
xchg
adcl
jecxz
mov
mov
sbb
xchg
push
and
js
hlt
les
mov
nop
pop
jmp
dec
mov
pop
nop
in
scas
xchg
enter
mov
sbbl
inc
aas
push
imul
repz
insl
dec
divl
loopne
sub
push
sub
push
sbb
out
bound
sub
push
push
shr
xlat
sbb
outsl
loope
pop
aad
std
fisubs
shrb
aas
adc
add
out
dec
shlb
negl
or
stos
xchg
xchg
fimuls
fmul
push
fidivs
mov
push
and
hlt
lea
mov
addl
nop
bound
hlt
leave
jbe
mov
fldt
fdivs
xor
js
movsl
pop
and
mov
push
roll
jmp
xchg
cwtl
aas
dec
sti
lea
sbb
mov
mov
imul
xchg
gs
ljmp
sbb
ret
mov
lods
out
xchg
test
in
leave
sti
mov
fs
push
dec
js
pop
out
rcll
in
sbb
inc
mov
cmp
lea
ror
and
push
add
movsl
sub
mov
jno
xor
bound
pop
mov
cmc
push
rcr
push
mov
mov
out
pusha
fdivp
mov
and
aas
outsb
xor
xchg
push
in
shl
cmc
mov
out
dec
ja
sbb
div
jmp
fsubl
shll
cs
mov
jae
in
dec
lods
xchg
mov
mov
mov
cltd
aad
mov
push
mov
dec
xchg
dec
repz
dec
sub
xchg
ret
scas
mov
xor
push
add
fnstenv
pop
call
fwait
add
jp
push
shll
push
clc
dec
pusha
sbb
mov
push
ljmp
jnp
jl
stos
fidivrl
xchg
xchg
idivl
cld
in
or
pusha
jg
push
mov
das
xchg
popa
push
mov
push
das
lds
sarl
cmc
mov
jb
mov
push
and
xchg
testb
imul
roll
xor
pop
fnstcw
bound
jo
lcall
data16
imul
sti
add
in
push
mov
pop
cmpsl
pop
test
mov
and
cmp
lahf
loop
imul
andw
jnp
push
aad
scas
dec
idivb
add
mov
and
add
sbb
push
fdivp
mov
fst
xlat
and
imul
lea
mov
pop
pop
or
cltd
cltd
fstps
movsb
out
mov
loopne
cmpsb
and
adc
shrl
pop
iret
lods
jo
popf
and
aaa
in
scas
adc
lds
and
add
and
std
mov
and
bound
in
sub
mov
sbb
nop
xchg
ficoml
popa
popf
cltd
lfs
pushf
dec
scas
int
xchg
les
push
push
xchg
jge
jbe
lds
loopne
sub
xlat
test
pop
aaa
lcall
pop
dec
ljmp
or
dec
out
add
cmpsl
ljmp
cmovle
cli
push
lret
mov
xchg
mov
fwait
sub
mov
push
mov
fstps
xor
cmpsl
push
fnsave
mov
push
sbb
jge
mov
mov
insb
aad
pop
push
cltd
or
dec
mov
cld
aad
adc
xor
xchg
scas
sti
decb
mov
ret
mov
push
xchg
loope
jbe
or
cmp
cs
xchg
iret
out
and
outsb
test
loop
adc
ds
addl
leave
das
enter
mov
psubusb
fcomip
into
mov
sbb
mov
int3
hlt
xorb
fisubrl
insl
mov
std
adc
mov
aaa
mov
adc
add
dec
mov
sbb
adc
stc
popf
push
xchg
sub
les
ficoms
jge
les
iret
rclb
js
dec
call
adc
dec
cmpsl
les
push
test
fs
jbe
push
pop
scas
cmp
cmp
sbb
gs
xchg
mov
push
adc
insb
or
loop
mov
fwait
lahf
mov
xlat
inc
sbb
aad
sub
pushf
lret
dec
gs
negl
mov
arpl
mov
leave
jecxz
and
push
push
inc
fnsave
data16
in
mov
jecxz
mov
cld
stc
push
lret
mov
cmp
ja
movb
dec
jle
cmp
call
mov
out
sbb
xor
pop
xlat
mov
shrl
or
insl
add
pop
fcmovu
and
fiaddl
hlt
ret
scas
loop
inc
or
jl
jmp
fsubrl
int3
dec
xor
ret
add
icebp
rcll
hlt
jg
jle
and
loope
nop
inc
lret
out
jmp
xorl
hlt
out
xor
ret
mov
pop
fsubr
push
aad
or
sbb
out
pushf
jge
push
sbb
rclb
gs
mov
sbb
mov
add
xorb
inc
jge
aam
xor
adc
stos
das
lock
cmp
arpl
fimuls
stos
scas
iret
push
and
test
adc
filds
mov
fidivl
mov
push
pop
pop
cli
sub
jb
leave
add
pop
fwait
mov
aaa
xor
and
jecxz
xor
pop
mov
sub
dec
or
popf
add
fldenv
pop
loop
jle
out
push
hlt
mov
mov
sbb
adc
ret
popa
mov
inc
lret
push
jns
and
xchg
add
add
add
mov
daa
movsb
mov
fsubs
xchg
jl
dec
out
push
mov
sbb
xor
sbb
fmull
xor
push
or
mov
aad
xor
inc
pop
stc
loopne
and
inc
sub
add
rorb
scas
movsb
cmp
push
mov
jo
xor
mov
aad
aad
repz
cwtl
mov
in
jns
mov
dec
pop
in
sub
in
rorb
adc
out
je
loopne
mov
scas
repnz
xchg
adc
pushf
nop
aas
incb
lea
jmp
and
cs
bound
outsl
mov
mov
incl
pop
jl
pop
add
add
cltd
dec
iret
sarb
xchg
jbe
add
adc
adc
push
outsl
addr16
shl
push
aam
or
sarl
ljmp
fsubrl
pop
mov
inc
dec
mov
out
out
and
orb
cmpsl
or
test
mov
push
addr16
cmp
test
cmp
adc
xchg
into
or
inc
xchg
xor
xor
dec
decb
lods
daa
aas
jne
xor
lea
xor
les
cltd
dec
push
or
sub
mov
push
lret
mov
out
shl
fwait
cmp
test
xlat
shlb
hlt
jecxz
outsl
mov
dec
and
sub
out
mov
jecxz
jmp
mulb
imull
jp
dec
mov
ljmp
xlat
inc
shl
add
cmp
cmp
popa
xor
test
insl
cwtl
pusha
arpl
mov
fimuls
adc
sbb
frstor
leave
mov
lods
neg
jl
mov
add
out
adc
ljmp
xchg
push
call
je
pop
pushf
ret
push
shll
outsb
fsub
jg
jae
iret
push
xlat
jo
movsb
mov
and
pop
jno
dec
fimuls
mov
pusha
mov
jg
in
mov
pop
aam
mov
jae
fisubrl
mov
mov
out
lods
and
ret
or
out
mov
adc
mov
inc
cli
mov
cmpsl
popl
xor
in
lods
movsl
int3
in
or
lret
sub
testl
xchg
mov
cmp
stc
cld
xchg
out
loop
dec
nop
into
xor
inc
jns
daa
das
push
int3
xor
jle
sahf
mov
loop
addb
in
cmp
ret
or
mov
pop
xchg
push
movsb
jo
lods
jecxz
cmp
cmp
je
jnp
or
icebp
cmp
inc
in
into
and
push
sti
sahf
popf
sbb
das
cmp
fsubr
adc
jge
lret
dec
jmp
je
fsubs
mov
ret
lds
cmp
pop
imul
mov
arpl
cmp
xor
or
shrl
xchg
jle
inc
in
lahf
or
mov
das
mov
sub
xchg
leave
pop
jb
hlt
mov
ret
in
orl
sub
popf
adc
inc
movsl
mov
mov
cmp
xor
fsubl
cltd
adc
cmp
sbb
push
cmp
sub
push
lret
inc
pop
dec
das
fiaddl
loop
mov
xchg
cli
xlat
mov
aad
les
adc
add
cmpsl
sub
and
loope
push
out
fisubl
xchg
inc
jecxz
fsub
xchg
das
pusha
repz
xor
xchg
cmp
cmpsl
outsb
jae
sbb
push
sub
mov
jl
sahf
adc
imul
enter
lods
negl
or
pusha
leave
insl
pop
mov
test
js
mov
imul
sub
mov
inc
cli
cli
mov
cli
pop
inc
cmp
enter
sub
cs
das
sti
fstp
mov
ret
cwtl
jbe
jbe
nop
rcl
mov
mov
ljmp
out
daa
jo
lret
rorb
dec
ljmp
xor
jge
sbb
mov
xchg
and
loope
shll
push
pop
outsl
or
and
jne
fisttpll
pusha
sub
inc
fs
sbb
adc
inc
in
mov
scas
push
fistpll
sarb
cwtl
add
mov
jmp
push
or
lea
into
adc
out
fdivs
ljmp
adc
or
jmp
sahf
outsl
mov
xor
lods
dec
jge
xlat
imul
add
stos
push
jmp
in
and
addr16
mov
mov
clc
jb
cwtl
or
loop
aas
jae
insb
xchg
cli
into
jl
outsb
in
cmpsl
mov
push
and
inc
fmuls
mov
mov
sub
dec
jnp
dec
pop
and
push
add
inc
sbb
cmp
jo
pop
mov
sbb
jecxz
std
lret
enter
lods
pusha
test
jae
pop
sqrtps
adc
shlb
fcmovnb
ja
int
mov
ds
sub
sub
pop
cmp
push
lcall
in
repz
jp
mov
shl
test
sub
lahf
loop
lret
jg
in
imul
lock
mov
aaa
xchg
and
pop
xchg
fs
xchg
fisubs
insb
mov
movsl
gs
xchg
jp,pt
mov
dec
lahf
repnz
inc
push
ret
mov
push
mov
scas
pop
pusha
mov
mov
orb
ljmp
xor
adc
inc
push
add
adc
in
xchg
outsb
jp
pop
sti
xchg
stos
ljmp
test
mov
add
mov
test
jp
pop
sub
les
unpckhps
jecxz
popf
xchg
test
jns
inc
push
aas
xchg
mov
mov
dec
clc
dec
lret
dec
pop
pop
jp
adc
fisttps
push
push
inc
pop
in
mov
pop
xchg
dec
add
mov
dec
xor
js
sbb
pop
insl
jge
push
sub
adc
lea
add
push
cmpsl
shl
inc
push
dec
in
lcall
sub
mov
inc
scas
aaa
pusha
adc
jno
das
lods
pop
insl
dec
mov
ja
sub
adc
pop
jmp
stc
xchg
sahf
dec
pop
xchg
or
int3
adc
stos
or
es
jno
sbb
fistpl
xchg
cmp
lret
test
xchg
jns
xchg
push
pop
or
incb
or
add
aad
mov
xchg
sbb
bound
loope
add
xchg
loop
xor
xchg
cmpsb
mov
xor
sarl
or
and
sbb
and
push
scas
sbb
mov
in
mov
int3
push
fisubl
movsb
gs
adc
xor
aam
push
push
adc
mov
inc
lcall
fwait
xchg
shlb
or
xor
inc
push
push
and
push
nop
imul
xlat
fs
cmp
mov
mov
das
loope
aad
mov
dec
sub
lds
sti
imul
cmp
out
cwtl
xor
idivl
and
xchg
arpl
sarb
in
adc
cmp
movsl
stos
cmpsb
mov
mov
sysexit
sub
stos
and
lahf
and
jle
sti
cmp
fwait
mov
and
pop
xlat
pop
pop
and
mov
adc
jl
out
or
lret
ds
dec
push
stos
mov
pop
mov
ljmp
add
adc
xchg
sarl
dec
push
pop
or
enter
cli
out
sub
xor
adc
jae
cmp
inc
mov
xor
dec
aam
mov
mov
mov
clc
sub
les
aas
sahf
js
add
fsubrl
push
sbb
inc
pop
xor
adc
cs
mov
fwait
scas
pop
adcb
lds
xchg
pop
and
xor
xchg
push
jle
xchg
xchg
out
pushw
aad
dec
jge
pop
sub
insb
dec
lods
std
idivl
iret
int
pop
fisttps
out
arpl
jb
push
push
push
data16
ret
xchg
js
arpl
dec
aas
sti
inc
xchg
pop
movsl
dec
lea
outsl
hlt
adc
inc
or
in
push
push
sti
mov
push
lcall
mov
dec
xor
jo
adc
mov
or
dec
stc
xchg
xor
mov
addr16
outsl
fcoms
cmpsl
mov
adc
mov
pop
out
pop
fcoml
mov
pushf
cmp
orb
mov
add
add
jns
in
outsb
enter
and
inc
dec
adc
outsl
ror
fisttpl
ret
or
out
lahf
mov
fnsave
mov
icebp
imul
test
push
rorb
mov
jg
jns
push
aad
xor
shrd
and
pushf
ljmp
mov
int
cltd
into
or
adc
cltd
cld
loop
and
shr
sbb
leave
adc
movsl
inc
addl
pop
arpl
inc
dec
adc
mov
dec
cmp
das
sahf
jl
lcall
clc
push
mov
adc
mov
xlat
and
dec
pop
inc
pop
sbb
push
ficoml
jmp
pop
or
testb
addr16
loope
test
xchg
or
sbb
mov
mov
lds
fwait
xlat
jecxz
jmp
jg
cmp
nop
push
sbb
int
loop
sub
sahf
shll
test
repz
es
mov
in
pop
push
push
inc
aad
je
mov
out
adc
push
or
frstor
hlt
fcmovnu
inc
cmp
iret
insl
rolb
aad
inc
or
xor
inc
shll
dec
xchg
jecxz
jmp
fdivrl
out
ja
cmp
jmp
shlb
sub
mov
jne
xchg
aas
filds
adc
sbb
test
repnz
popf
mov
cli
adc
push
jg
lret
sbb
pop
sbb
push
mov
or
and
cmp
adc
pop
outsl
int3
xchg
xchg
adc
pop
mov
fsubs
testl
sahf
lret
add
dec
push
and
inc
xchg
fidivrl
push
inc
test
pop
out
mov
or
add
pop
push
jo
shll
dec
iret
ds
or
pop
xchg
sub
cmp
inc
decb
gs
cmc
mov
out
xchg
lock
add
rol
sub
ret
jns
inc
fdivl
jo
call
test
shrl
mov
aam
add
jmp
popa
add
push
pop
movsb
adc
mov
cmc
add
sub
rolb
xchg
jmp
pop
loope
xchg
jns
mov
xchg
cmp
ss
and
test
add
lret
test
mov
sub
mov
pop
fists
adc
mov
pop
mov
out
or
dec
and
imull
ds
frstor
jecxz
mov
outsb
pop
and
aad
jnp
sub
mov
imul
xor
pop
fbld
pop
int3
outsb
loope
stos
shl
icebp
shll
xor
lret
jo
cld
or
shrl
arpl
pop
clc
pop
fbld
repz
add
push
ror
pop
in
mov
mov
cmp
mov
add
and
out
pop
insb
leave
fs
data16
loopne
lahf
out
pop
cmpsl
rcrb
xor
notl
inc
lods
xchg
movsl
cld
ret
mov
jo
mov
adc
jne
into
inc
push
call
mov
pop
inc
xchg
lods
or
inc
cmp
imull
jae
andb
in
ja
push
add
xor
ret
mov
add
addr16
mov
mov
mov
pop
cmc
cmp
pushf
stc
push
das
mov
mov
cmp
enter
cmpsb
mov
adc
cmc
sub
push
sub
xchg
adc
mov
aad
adc
xlat
mov
in
inc
lds
out
xchg
inc
out
inc
pop
xor
ret
pop
dec
mov
and
cmp
push
test
xor
in
add
sbb
mov
insl
sub
in
movsb
ret
cmpl
add
jecxz
jno
jno
test
cmp
jb
rclb
xchg
mov
lcall
cmpsb
scas
jp
sbb
out
sbb
xchg
ret
mov
cmpsb
pushf
test
push
imul
pop
imul
pop
xchg
outsl
enter
lret
sbb
xchg
in
adc
ret
sub
push
cs
or
stos
sub
mov
fcomps
ss
push
push
into
fnop
add
push
ret
loope
push
cmp
aam
pushl
pop
je
and
andb
mov
pop
sub
jecxz
popa
add
out
lock
arpl
cli
or
push
mov
sbb
notb
ljmp
mov
dec
xor
pop
nop
es
xchg
leave
leave
mov
outsl
imul
andb
jle
bnd
ret
push
mov
cmp
pop
jp
add
inc
mov
add
mov
cmc
dec
and
pop
addl
push
fiadds
xor
sub
pop
rcl
arpl
or
sub
pop
mov
aam
and
mov
in
pop
movsl
pop
cmp
pop
or
mov
popa
sbb
xchg
jp
inc
int
bound
in
and
xor
jge
daa
jge
popf
lods
xlat
lret
les
std
outsl
stc
xor
lea
aad
push
icebp
inc
mov
negb
int
ror
les
or
mov
test
repnz
aaa
push
lock
mov
adc
and
xor
fmull
sub
mov
fsubr
outsl
adc
scas
xchg
insb
or
pop
xchg
mov
iret
test
xor
inc
sub
into
dec
scas
in
mov
cld
loope
stc
lret
jge
stos
cmpsl
fnstsw
xchg
hlt
orb
adc
fbld
xchg
rcrl
dec
in
pop
fucompp
add
mov
inc
pop
add
push
in
xor
xchg
jp
out
loopne
fsubrs
out
mov
insb
or
jge
sbb
mov
ljmp
xchg
jne
mov
jno
dec
inc
bound
push
pusha
gs
cld
jo
js
enter
xchg
in
imul
sub
jns
xor
dec
in
xor
push
cmpsl
cmp
inc
cmc
aaa
cli
test
mov
into
add
cmpl
jbe
or
jg
or
cltd
fidivl
hlt
sti
mov
test
push
inc
jae
push
adc
dec
bound
jge
mov
call
rcrb
xchg
pop
loope
jle
dec
dec
mov
daa
sub
push
bound
adc
mov
sub
test
pop
mov
mov
xor
sbb
pop
orb
cmp
loopne
test
fidivl
fsts
repnz
sarl
cmp
inc
inc
lcall
mov
aaa
mov
rcll
mov
pusha
mov
sub
xchg
pop
out
xor
pushf
testb
cmp
dec
jmp
and
mov
and
or
ret
xchg
mov
mov
outsl
fwait
xchg
cltd
sbb
cmpsb
adc
in
iret
or
mov
mov
and
xor
jl
movsb
adc
divl
scas
in
sub
movsl
jmp
sub
and
mov
lret
test
cmp
add
scas
mov
sbb
inc
jnp
push
mov
cmp
dec
movsl
lea
mov
push
mov
xchg
rorb
outsl
add
fcomp
imul
rclb
out
jnp
clc
pop
into
jle
out
cmc
sbb
andb
xorl
jg
adc
pop
inc
jl
mov
mov
ret
dec
jo
pop
and
cltd
out
mov
or
mov
stc
mov
std
scas
aad
pop
and
mov
push
push
call
push
lret
ljmp
ja
rolb
lods
nop
fimull
in
les
mov
xchg
in
fdivl
loope
mov
mov
inc
cmp
mov
cs
cmc
and
dec
jne
push
int3
push
xchg
stos
movsb
push
je
jmp
out
ret
push
cmc
xor
push
je
xchg
mov
lock
idivb
test
xchg
fiadds
mov
pop
out
popa
inc
inc
pop
xor
xor
cmp
lea
divl
sub
add
shlb
jns
out
add
dec
shll
shrb
mov
add
lods
jge
sbb
xor
cmp
jp
xorl
outsb
pushf
popl
pop
cmpsb
fdivs
mov
repz
cltd
fimuls
addr16
in
lods
fsubs
je
sahf
pop
mov
xor
jnp
xchg
outsl
movsb
jns
sub
dec
push
les
xchg
into
or
inc
shl
es
jg
sbb
push
icebp
rcrl
shlb
popf
rcll
enter
mov
xchg
jge
lret
imul
sbb
stos
test
shll
mov
out
test
ficompl
sbb
mov
roll
inc
sbb
xchg
popa
mov
dec
fnstenv
ret
or
inc
cmp
iret
mov
lea
test
pushf
sbb
mov
xchg
aam
lods
push
test
jnp
xor
ja
cmc
mov
sti
mov
leave
inc
ja
mov
add
inc
hlt
push
mov
in
in
xchg
mov
jecxz
xor
or
fstps
and
sub
ficoms
cltd
mov
imul
mov
data16
sub
xchg
testb
lods
pop
ja
mov
mov
es
stos
repz
lahf
cwtl
pushf
mov
pop
push
add
rorb
daa
pop
cltd
es
stos
andb
iret
pusha
stc
iretw
iret
aaa
pop
mov
add
xor
test
jmp
subl
stos
fcompl
es
sub
jmp
lcall
or
mov
fidivrs
dec
inc
pop
out
push
movsl
cs
sbb
jge
xor
and
xor
enter
or
mov
cmc
rorl
ret
fchs
es
fwait
jmp
scas
lods
mov
lea
xchg
inc
or
xor
jmp
or
fbld
sbb
xor
scas
jno
repz
je
pop
mov
add
inc
data16
pop
jno
outsb
sub
js
sub
push
cmp
inc
xchg
or
ss
daa
clc
sarl
mov
lret
xchg
fwait
push
sbb
cmp
xorps
xchg
jmp
cmpb
iret
nop
sub
std
sub
mov
loope
push
sbb
or
push
xchg
mov
xorl
xor
add
xor
push
mov
insl
iret
addr16
xchg
mov
inc
mov
hlt
inc
dec
lret
in
loope
sahf
aam
mov
pop
cmp
adc
iret
inc
mov
add
cld
inc
enter
jns
mov
push
or
imul
das
sti
dec
aad
vrcpps
sub
lds
stc
ret
and
fildll
jne
fistpll
xchg
mov
xor
lea
imul
insl
int
lcall
mov
sub
mov
and
mov
dec
rcrl
iret
or
dec
sarl
pushf
adcl
dec
mov
leave
mov
sub
icebp
ja
dec
adc
sbb
dec
fwait
or
rorb
mov
addr16
push
mov
push
stos
mov
mov
mov
pop
mov
mov
pop
dec
and
add
add
push
pusha
imul
pop
repz
or
sbb
std
sub
cmp
sbb
lods
stos
dec
dec
jno
fdiv
addb
push
adc
mov
repz
push
lcall
sub
push
dec
cli
sub
inc
cmpb
inc
es
mov
xchg
or
dec
cli
inc
mov
dec
ret
fisttpl
push
andb
mov
mov
aam
mov
pop
in
mov
push
mov
adc
cld
js
in
mov
enter
loop
outsb
sahf
rol
pop
aam
sbb
mov
inc
pop
push
or
lcall
dec
cmp
add
jo
mov
lds
jp
mov
orb
xchg
imul
mov
aad
mov
cs
test
sbb
lcall
call
loop
cli
int
out
mov
mov
je
cmp
out
push
xchg
sbb
ret
jb
adc
xchg
rcrb
sub
adc
xor
push
cmpl
and
stos
cmp
popf
fsubp
cmpsb
mov
gs
mov
stos
ja
mov
inc
sbb
stos
and
cmc
aad
stc
test
or
mov
mov
mov
jne
xlat
fcmovnbe
xor
popa
mov
mov
ds
xchg
sbb
pop
dec
gs
enter
dec
dec
add
lods
pop
inc
xor
jl
arpl
push
add
clc
jbe
mov
sub
popf
test
add
ss
jge
xchg
jmp
js
mov
adc
hlt
sbb
outsb
add
push
jecxz
test
xchg
sub
pop
mov
jnp
cmp
and
repnz
testl
stc
jg
sub
shlb
popf
add
imul
cmp
imul
xchg
dec
adc
pop
or
mov
mov
dec
imul
loope
or
stos
fistpl
xor
sub
movl
jle
and
cmp
push
inc
jle
repnz
adc
std
or
clc
out
pop
addr16
fistl
test
lcall
js
xchg
xchg
loop
ret
sarl
cltd
out
mov
sub
or
xchg
push
xchg
sbb
jno
imul
mov
fsubs
adc
jmp
out
cli
xor
in
cs
cmovo
xchg
jne,pt
push
jne
out
jp
adc
fildl
mov
ret
out
and
aas
push
mov
and
popa
ljmp
push
lock
fidivs
push
cli
sbb
cmp
ss
cmp
in
out
daa
mov
or
jle
push
pusha
jmp
out
clc
stc
pop
sarl
mov
pop
icebp
push
imul
test
dec
mov
add
xlat
mov
repnz
add
adc
mov
dec
call
insb
fisubrs
pop
xchg
xor
fxch
int3
and
fucomp
sbb
mov
enter
xlat
out
push
test
cmc
repnz
push
cmpsb
pop
imul
adc
xor
cmp
push
mov
inc
insb
pop
lcall
add
push
out
jno
pop
std
repnz
sub
pop
xor
cmp
fldcw
loopne
adc
adc
std
out
push
mov
out
in
dec
test
fiaddl
flds
in
fdiv
test
mov
pop
arpl
adc
jne
or
outsb
mov
sbb
enter
loope
jno
cmp
stos
xchg
popa
push
dec
pop
lea
push
cs
mov
in
js
inc
pop
jbe
pop
out
pop
sub
je
adc
sbb
mov
aaa
fwait
fnstenv
xor
shl
cmc
xchg
negl
ja
xchg
or
cmpl
mov
in
inc
cli
mov
mov
jl
clc
or
popa
imul
mov
jnp
dec
dec
enter
push
loop
bound
pop
lret
jg
test
aam
xlat
mov
cmp
mov
mov
xor
lock
xor
add
cltd
fsts
or
push
xchg
jno
iret
sub
and
and
cli
ljmp
andb
mov
ret
mov
std
push
push
das
xchg
add
jp
add
repz
mov
xchg
test
sbb
xchg
mov
icebp
mov
mov
and
jb
xchg
aam
test
add
lds
mov
shrb
js
aam
jge
movsl
stos
xor
cli
test
mov
xor
leave
aas
cmc
ret
clc
or
pop
roll
ficoms
push
lret
xchg
stos
xor
jo
xchg
lea
fwait
call
dec
push
test
popa
dec
outsb
out
xor
jns
cmc
dec
xor
lock
cmc
ret
rorb
xchg
test
xor
out
ss
mov
push
cmp
push
mov
xchg
sub
aaa
mov
sub
pop
stc
add
fcomi
pop
std
insl
push
sub
pushf
jmp
xor
loope
mov
addr16
jnp
xor
jmp
outsl
hlt
insl
sub
stos
arpl
hlt
hlt
jns
lds
push
frstor
dec
sub
jmp
adc
das
mov
sbb
cmc
lcall
pop
mov
pop
push
ret
and
sbb
xor
mov
pop
stc
lods
dec
imul
or
inc
xchg
loopne
clc
push
hlt
xchg
in
adc
xchg
xchg
out
std
enter
mov
mov
adc
or
cmp
lcall
dec
jp
incb
or
fwait
insb
jecxz
in
cmp
dec
cli
cmpsl
lret
jl
lcall
xchg
push
test
ficoms
test
inc
into
test
cmp
movsb
inc
jae
dec
jbe
mov
cmp
fwait
outsl
lods
loope
and
jb
int3
sbb
jl
xchg
test
mov
inc
sbb
sahf
out
jbe
dec
popf
out
xor
outsb
jnp
mov
or
xor
mov
jae
test
mov
cmpl
repz
fnstsw
scas
sub
pop
mov
mov
add
or
cmp
lods
sub
rcrb
call
bswap
mov
xchg
add
adc
shrb
xchg
pushf
stos
stc
mov
mov
lea
dec
sbb
xchg
and
cmp
stos
je
pop
jnp
sbb
sbb
add
test
rcrb
aaa
and
aad
jnp
mov
inc
cmc
lret
fstps
aad
push
push
and
and
and
mov
cmp
das
loop
dec
mov
cmpsb
loope
jle
icebp
sub
push
aad
xor
pushf
xlat
fbstp
ds
sub
incl
jnp
and
gs
loopne
js
iret
inc
jp
bound
mov
xor
sahf
mov
mov
jge
and
lds
rcll
lods
ret
cld
inc
das
jge
repz
pop
mov
stos
adc
push
mov
xchg
xor
and
dec
jle
xor
cmp
mov
repz
dec
mov
or
mov
cltd
jge
daa
add
in
repnz
cmpsb
or
push
pop
cwtl
iret
xchg
push
mov
sub
je
xchg
in
stos
mov
nop
loopne
xorl
rcr
xor
stos
sbb
hlt
je
arpl
adc
sub
cmp
test
lahf
je
or
pop
mov
mov
pop
mulb
adc
fwait
cmovle
sbb
push
jae
ljmp
cmpsl
pop
ss
sbb
rcrl
mov
mov
das
loopne
or
dec
pop
in
shll
fidivl
int3
daa
jb
and
jle
out
out
mov
xchg
sub
or
shll
jmp
jne
and
into
aam
cs
xor
nop
lret
sbb
les
mov
mov
add
leave
add
arpl
and
push
mov
jne
imul
inc
and
fdivl
xchg
daa
call
cmp
push
mov
popf
inc
push
jle
hlt
imul
test
rclb
or
movsl
lods
adc
sbb
xchg
out
mov
dec
je
adc
mov
fs
jne
aam
lds
aad
add
popa
cmp
lret
push
cwtl
mov
mov
jmp
call
roll
shr
lcall
in
jne
jo
inc
pushf
rolb
in
jl
push
mov
shll
push
out
jns
call
pushf
movsb
pop
push
push
mov
jno
daa
mov
insl
and
push
or
movsb
mov
dec
and
xchg
out
or
int
hlt
out
lcall
into
ja
hlt
xor
xchg
push
pop
mov
push
mov
lahf
xchg
lret
sahf
cmp
loop
cltd
push
pop
jl
push
jp
pushf
lret
orb
test
in
push
mov
cmp
sub
popl
xchg
mov
xchg
push
mov
cmp
hlt
std
and
nop
pop
arpl
nop
fistpl
or
inc
mov
repnz
test
call
outsb
scas
mov
insb
cmp
add
outsl
mov
test
cltd
inc
or
inc
mov
lahf
dec
pop
sbb
push
jmp
lock
in
inc
dec
leave
icebp
cwtl
push
adc
into
lea
add
cmpsb
add
es
pop
cmp
int
pop
cmc
pop
xorl
mov
std
sub
test
jp
mov
mov
mov
shll
pop
imul
mov
out
sub
clc
jl
dec
mov
aam
cs
stos
dec
mov
mov
iret
out
daa
lods
rcrl
aaa
out
movsl
xor
rorb
inc
push
push
cwtl
push
jg
pushf
fbstp
pop
dec
add
scas
xchg
je
jne
xor
jnp
orl
inc
fstl
jae
push
inc
das
jae
aad
fdivp
out
lret
mov
cmp
outsb
xchg
lret
xchg
subl
adc
std
xchg
scas
adc
and
jo
mov
addr16
out
xchg
stc
cltd
pop
fsubp
nop
pop
xlat
mov
test
jo
icebp
stos
xchg
test
pop
cmpsl
cwtl
cli
subb
mov
in
cmp
mov
cli
pop
movsl
mov
sti
xor
rolb
and
outsb
or
sub
leave
add
dec
sahf
insb
add
mov
gs
cli
shl
and
fistpll
add
test
inc
jbe
dec
int
inc
test
xchg
lods
pop
outsl
and
int
xchg
or
scas
inc
movsb
lods
jg
cmc
cmc
mov
jnp
mov
mov
xchg
xchg
inc
jp
jle
call
sarl
iret
cmp
aad
adc
test
inc
fiaddl
jo
arpl
xor
incl
dec
lods
xchg
mov
jns
gs
lods
pushf
cmp
shl
test
inc
dec
xchg
cmc
nop
movsl
jo
mov
sbb
push
push
std
push
mov
cmpsb
mov
cmpsb
scas
daa
pop
loopne
pushw
mov
shlb
cmp
loope
inc
clc
push
mov
fildl
setnp
aad
sub
mov
xor
rcrb
jno
hlt
adc
and
dec
push
addb
lret
out
xlat
lahf
notb
negl
out
push
clc
mov
pop
dec
mov
jbe
inc
stos
inc
push
lods
lods
push
or
push
shrl
fcmovne
xchg
cmovnp
loop
daa
lcall
out
out
add
jb
enter
lock
adcl
inc
pop
xor
loope
xorb
and
repnz
or
or
pop
adc
dec
xor
mov
add
pop
out
fdivl
imulb
pop
out
fwait
mul
sbb
and
and
push
and
mov
sub
jno
mov
push
hlt
lea
adcl
pop
dec
repz
lea
out
push
int3
cmpsb
repnz
jl
dec
rolb
fisubrs
fdivl
push
xchg
test
popf
fdivs
iret
in
call
mov
mov
adc
loope
add
testb
mov
mov
shl
test
adc
in
sbb
push
fildll
dec
shl
xor
xchg
lea
dec
and
inc
xor
pop
insl
add
adc
out
mov
rol
insb
push
or
mov
mov
cwtl
cmp
ljmp
pop
mov
mov
outsl
aam
pop
xchg
fisubrs
loopne
ljmp
loope,pn
pop
iret
jmp
popf
mov
sub
push
jns
pop
loop
pop
xor
pop
and
mov
mov
mov
lret
in
adc
jecxz
jp
fs
cmove
dec
push
xchg
push
fcoml
fbstp
add
pop
xor
mov
jae
push
xchg
inc
inc
aad
or
jae
cmp
out
mov
add
fisubrs
test
dec
inc
fadds
divb
mov
dec
inc
push
and
lret
fsubl
cmc
cmp
notb
pop
ja
jne
inc
sbb
cli
dec
sub
adc
out
call
mov
scas
sbb
pop
das
jbe
pop
inc
addr16
jge
and
gs
scas
mov
inc
pop
pop
out
cmc
push
lahf
sbb
stos
pushf
pop
movsb
xor
xchg
jbe
pop
orl
loope
xor
nop
stos
out
lea
sbb
call
xchg
shr
loope
lret
jl
push
xchg
xchg
or
test
mov
andl
dec
mov
push
lock
add
add
mov
adc
mov
ja
daa
mov
aam
jp
pop
inc
test
movsb
pop
sbb
je
jae
aaa
adc
movsl
movsl
sub
andl
test
adc
jb
out
mov
mov
sbb
xchg
out
outsl
sub
xor
cmp
jl
dec
daa
sbb
ret
rol
gs
mov
inc
loope
in
out
out
out
lock
sbb
pop
les
fwait
jl
xchg
mov
in
clc
pushf
sub
das
push
dec
lret
and
or
mov
pop
inc
loope
mov
jmp
dec
and
dec
test
add
mov
enter
mov
rclb
sbb
pop
ja
dec
adc
repz
shr
and
lds
mov
pop
cmp
lock
mov
mov
repz
in
push
cmp
adc
test
jecxz
mov
sub
out
add
lret
hlt
int
arpl
sbb
int3
repnz
xlat
add
jne
mov
sti
dec
lcall
dec
sub
testl
fstpt
inc
ficomps
cmp
rolb
fcmovnbe
call
push
bound
add
push
out
lods
subl
adc
or
xor
mov
out
movsl
jle
jb
pop
andl
cs
fisubrs
lds
xchg
cld
push
lcall
add
movsb
shrl
or
mov
mull
push
leave
dec
mov
mov
mov
push
ficoml
cmp
bnd
sbb
mov
ja
dec
mov
xor
stc
mov
mov
mov
or
sub
cli
jne
push
cmp
and
lret
fdivr
addr16
fwait
jae
or
push
cli
xlat
in
stos
or
mov
test
shl
sbb
aas
xorb
push
into
sahf
mov
inc
imul
cmp
jb
lahf
jae
fs
addb
fsubs
mov
add
xor
cmpsl
aam
out
movsb
ret
pop
fstpl
sahf
xchg
adc
cld
sahf
stos
mov
xor
cmp
xor
arpl
add
or
fwait
aad
icebp
mov
xchg
pop
sbbl
inc
jns
pop
push
push
mov
dec
pushl
int
aaa
cmpsb
cmp
shlb
leave
push
push
sbb
and
mov
push
mov
sub
mov
cmp
adc
mov
testl
repnz
push
cli
das
jl
cmp
movsl
push
and
mov
and
push
daa
sub
add
mov
mov
push
jp
es
cmp
inc
aaa
mov
and
adc
jle
xchg
stos
dec
out
add
pop
pop
xor
add
shll
pop
loope
loope
and
int
std
jl
and
lahf
repnz
push
in
mov
jle
sbb
xchg
pushf
call
jle
sbb
popa
mov
add
jne
mov
bound
and
dec
aaa
mull
incb
call
mov
data16
cltd
adc
lcall
sub
pop
lahf
test
xchg
jle
fistpll
xchg
in
add
jle
jno
push
daa
push
sbb
stos
or
lcall
mov
jbe
out
test
xchg
jno
lods
sub
addr16
in
mov
sbb
movsl
jecxz
in
lret
and
enter
imul
and
ds
lcall
loopne
jae
imul
mov
jle
pop
fistl
call
adc
lods
or
mov
and
hlt
adc
mov
mov
xchg
mov
fistl
cmp
sarb
xchg
or
jae
repz
fst
in
mov
icebp
xchg
adc
repnz
sahf
pop
lods
leave
pop
jecxz
int3
test
es
pop
push
inc
inc
mov
or
test
pop
push
jecxz
shl
adc
mov
ss
scas
sbb
push
pop
leave
outsl
insb
mov
lea
jnp
setp
test
add
mov
sahf
inc
push
xchg
lds
call
dec
out
push
inc
shr
mov
mov
dec
mov
xor
lcall
popaw
and
mov
jns
leave
adc
mov
mov
push
sarb
dec
mov
stc
lea
icebp
enter
out
aad
fs
nop
iret
or
push
adc
daa
mov
ret
add
jae,pn
xor
stos
jmp
dec
mov
stos
in
clc
xchg
inc
sbb
push
add
push
push
adc
cmpb
je
dec
xchg
sti
sbb
jno
sbb
cmp
lret
arpl
jns
cld
sbb
jne
notb
jne
outsl
pusha
push
out
call
dec
dec
vsqrtps
sbb
jge
lret
js
cmpl
movsl
aam
out
filds
out
jge
scas
aam
lea
xlat
cmp
or
pop
dec
test
int3
mov
stos
scas
popf
insb
repz
dec
xor
jo
dec
jne
dec
aaa
jle
call
add
and
and
add
push
and
int
dec
sub
movsb
int
add
xor
adc
cltd
jl
rorb
ljmp
fld1
sbb
xchg
adc
jge
out
stos
mov
orb
lcall
je
cmp
rcll
xor
dec
in
lods
adcb
iret
mov
and
add
jg
sbb
and
pop
jbe
addr16
sbb
pop
xlat
jle
dec
add
test
and
jmp
pop
sbb
leave
mov
jecxz
adc
cli
or
jnp
shlb
loopne,pt
push
lds
movsl
and
and
mov
ds
or
or
lret
jnp
jae
out
rcll
out
xchg
xchg
sbb
lds
sarb
fwait
push
std
insb
das
xchg
testl
cmp
mov
loope
imul
xor
cmc
adc
mov
dec
lods
lahf
pop
fcmovb
aad
test
shlb
pop
dec
jl
test
lds
jo
js
loope
jae
lods
or
fs
stc
jg
ljmp
shll
xor
cltd
inc
imul
scas
xchg
bound
sbb
mov
mov
ja
and
hlt
and
push
lock
inc
mov
push
cmp
jmp
jecxz
sub
mov
cmp
sub
add
sbb
inc
mov
mov
push
fidivs
xchg
test
sbb
dec
movsb
call
sbbb
pop
jno
xchg
sub
push
loop
pop
cmp
cltd
or
jne
add
movsb
sti
pop
aaa
dec
push
inc
sub
in
std
push
dec
ja
shr
or
dec
movsl
sbb
test
fs
imul
cs
xchg
int
inc
jne
cmc
pop
pop
lods
push
cmp
cltd
dec
mov
ret
xor
loop
das
loopne
loope
es
idivb
mov
cli
popl
leave
and
and
lret
popa
jg
popa
cmp
cmp
ljmp
lret
shll
xchg
xchg
ljmp
push
repnz
push
mov
sbb
cmpsb
subb
je
test
pushf
movsl
enter
ret
clc
dec
loop
cmpsb
fwait
lret
jae
mov
pop
fsubs
repz
cli
scas
jns
enter
ljmp
pushf
inc
push
orb
and
jnp
xor
jb
nop
shll
mov
xchg
cmp
movsb
cmpsb
mov
jmp
fldl
in
adcb
vmwrite
pop
sub
inc
jp
ss
lods
push
bound
xor
call
mov
mov
mov
in
in
or
pop
rorb
aad
aas
lods
adc
mov
out
das
lds
push
add
loope
adc
jp
je
gs
cmp
sti
cltd
push
jge
adc
mov
pop
outsb
test
and
leave
js
cwtl
push
aaa
jae
dec
in
sbb
test
mov
cmp
je
inc
imul
cmp
das
je
inc
inc
ss
gs
xchg
leave
pushf
fdivrs
stos
or
rclb
sbb
bound
sbb
xor
popa
dec
flds
jp
adc
das
je
and
or
in
test
inc
pop
mov
inc
lahf
lret
pop
nop
cmp
adc
sbb
aaa
dec
push
mov
notl
mov
xchg
add
add
cs
xor
dec
sub
mov
les
or
cmp
sbb
test
add
jnp
gs
push
mov
cmp
testl
fldenv
pop
or
add
lret
je
push
in
cmp
sub
icebp
xor
push
movsb
pop
cmp
and
xchg
push
cltd
cmp
pushf
pop
rcll
or
cmp
loope
fsubrp
mov
lock
es
addr16
rcll
mov
test
stos
xor
or
dec
and
pusha
xchg
or
dec
sahf
icebp
xor
enter
outsb
jno
ss
leave
jns
mov
mov
iret
mov
and
into
aas
outsl
std
mov
and
push
sbb
xorb
fisubs
movsl
les
dec
aam
das
out
scas
push
mov
movsl
shl
mov
push
aad
inc
xchg
xlat
mov
mov
mov
shll
fldt
mull
jp
iret
dec
and
pop
pop
lods
xor
les
or
mov
jg
jb
dec
out
ret
fdiv
int
int3
enter
push
dec
stos
test
es
push
jp
out
pop
cmp
das
mov
inc
jo
jmp
outsl
cmp
pusha
fs
cmp
adc
add
lret
outsl
pop
xchg
loope
nop
inc
testl
into
lret
fcmovnu
mov
cmp
mov
leave
in
jmp
stc
out
add
cmpsb
sbb
pop
fisubrs
imul
xchg
out
test
test
imul
add
cmp
add
sub
xorl
adc
sbb
mov
das
in
xchg
pop
enter
cmp
lret
es
mov
cmp
push
inc
ss
nop
call
mov
test
data16
xchg
and
std
test
mov
test
test
sbb
cmc
ljmp
push
sub
insl
shlw
inc
enter
iret
adc
mov
mov
insb
dec
mov
mov
sub
aad
fldl
int3
cmp
and
jae
jmp
outsl
xor
andl
insb
add
pusha
jnp
out
int3
insl
out
insb
shll
sub
xchg
aaa
test
ret
inc
push
lret
sbb
stos
sbb
insb
lret
xchg
mov
mov
stc
scas
pavgw
jbe
pusha
cmpsl
outsl
loopne
jae
push
pop
outsl
jp
xor
nop
and
sbb
outsl
and
mov
aaa
xor
mov
push
es
and
outsl
or
cltd
stc
sub
int
cli
xchg
jp
or
loope
clc
enter
cmp
in
cmp
imul
xchg
pop
shlb
test
push
cmp
imul
in
add
or
xchg
and
lock
cmp
sub
mov
rol
sub
xchg
pop
push
sti
pop
dec
cmp
jbe
sbb
out
add
add
and
lcall
jle
jb
jae
cmp
cmpsl
cmpsb
pop
jg
rcr
std
scas
cld
add
lret
neg
xchg
ds
arpl
mov
into
mov
mov
es
out
aam
sub
and
ficoms
sarl
adc
sub
cmp
inc
imul
jge
daa
dec
pop
iret
fsubs
and
mov
push
loopne
aad
int3
outsl
imul
jecxz
loope
mov
mov
inc
jle
dec
adc
mov
stos
sbb
and
dec
fidivl
fidivl
and
dec
out
cwtl
dec
les
jg
or
movsl
and
mov
out
sub
outsl
sub
mov
imul
lock
test
mov
imull
inc
pop
das
mov
insl
add
ret
test
mov
inc
xchg
subl
imul
cmp
mov
scas
rclb
cs
inc
mov
xchg
shrl
pushf
add
inc
mov
test
jl
and
icebp
popf
push
imul
pushf
rol
repnz
mov
loopne
cwtl
pop
xchg
or
test
lcall
cmp
adc
and
enter
push
imul
xor
adc
out
fldl
adc
pop
xchg
gs
cmp
movb
pusha
mov
ss
inc
and
mov
mov
pop
sbbl
je
das
shll
sub
ljmp
stc
dec
push
sub
test
cli
ja
sub
mov
aaa
cli
and
sarb
cld
sub
imul
or
dec
add
int
mov
sbb
pop
decl
data16
dec
aam
fildll
push
push
out
dec
lcall
sub
cmp
sahf
mov
xlat
out
xchg
popa
adc
push
mov
int3
leave
xchg
push
add
add
mov
lds
adc
pop
cmp
mov
or
add
cli
nop
arpl
adc
xchg
lret
andl
pushf
jmp
test
stc
mov
setp
lea
pop
xor
fists
pop
sahf
repz
mov
ret
int
push
shl
jnp
insl
rolb
gs
std
mov
push
push
loope
pop
fs
add
push
push
cmp
cmp
out
inc
sti
jg
push
xor
pop
inc
push
push
xchg
fwait
scas
lods
shlb
xchg
repnz
xchg
bound
fisubrl
adc
xor
mov
sub
mov
out
sti
or
xorb
and
adc
and
mov
mov
mov
push
std
push
mov
popf
test
lds
cwtl
push
xchg
stos
inc
gs
lcall
sub
push
inc
mov
pop
mov
mov
in
sbb
js
sbb
cmp
sbb
movb
cmp
pop
ja
pop
lds
test
and
lods
daa
cmp
sub
lcall
sahf
les
cs
ljmp
pop
test
jl
insb
jbe
icebp
fnstenv
mov
call
and
mov
lock
adc
sub
cwtl
inc
mov
xchg
sub
out
jno
push
xor
jp
pop
pop
icebp
or
inc
adc
mov
stos
imul
xchg
loop
dec
inc
push
test
or
insl
bound
aad
adc
mul
cmp
movsb
fiadds
fwait
add
adc
cli
repz
cmc
into
jbe
pop
jno
loop
sub
mov
push
mov
inc
adc
mov
pushf
jle
xchg
push
pop
push
mov
push
or
mov
in
and
xchg
jmp
inc
sub
in
mov
mov
add
insl
pop
imul
imul
xchg
imul
mov
lahf
shll
xchg
shlb
popf
mov
enter
fwait
les
mov
mov
jnp
or
enter
fnstsw
popf
mov
fwait
adc
test
xor
rcrb
sar
cmc
hlt
sub
xchg
xchg
shll
inc
ss
adc
fisttps
dec
pop
fwait
cmpsl
sti
pop
cmp
cmpsb
imul
pop
fstl
dec
shrl
mov
inc
imul
mov
sub
dec
lock
cmp
lock
mov
add
mov
sbb
js
xor
push
xlat
ret
leave
pop
je
js
leave
pop
cwtl
lahf
jb
sub
sbb
mov
daa
and
cmp
push
popf
lock
mov
mov
adc
adc
mov
pop
lea
stos
ret
push
push
lret
lds
sbb
jp
and
mov
scas
inc
popa
leave
dec
ficompl
int
jg
adc
aad
inc
lea
data16
jb
lods
test
adc
imul
pop
test
add
iret
mov
dec
push
clc
imul
cwtl
sub
sti
adc
mov
add
pusha
lcall
push
cli
add
aad
cmpsl
in
adc
pushl
inc
xchg
insb
fnstcw
rcrb
push
sub
dec
aad
mov
inc
cltd
or
jb
xchg
in
cmp
fisubs
inc
lret
movlps
out
adc
sbb
in
mov
adc
inc
mov
loope
jne
dec
xchg
cmp
xor
xchg
mov
sub
push
or
mov
inc
mov
lods
outsl
stc
push
or
sbb
ja
movb
insl
cmp
sbbl
xchg
repnz
sarb
xchg
test
rep
pusha
in
sbb
cmp
and
mov
mov
orl
aad
cwtl
cmp
and
ja
and
mov
in
into
push
xchg
mov
leave
insl
pusha
scas
cmp
cmp
shl
adc
negb
adc
enter
dec
push
push
sub
ffreep
sub
inc
dec
mov
push
mov
insl
sbb
test
enter
rcll
dec
ljmp
fldt
jns
xchg
pop
leave
xchg
mov
xchg
test
push
xchg
dec
adc
rclb
pop
jmp
cli
mov
ljmp
sbb
xchg
cmp
or
xor
fcompl
cmp
stos
test
sbb
and
mov
sbb
push
aad
aam
dec
fildl
xchg
call
push
mov
mov
dec
mov
inc
clc
adc
mov
popf
sbb
xlat
jge
xchg
pop
les
lods
and
jb
and
pop
loopne
pop
scas
xabort
xchg
and
icebp
xchg
imul
ror
dec
movsb
cmp
out
jns
sub
sub
mov
ljmp
jne
cmp
jo
mov
inc
jne
out
pop
sbb
addr16
or
movsl
lds
and
inc
bound
outsb
dec
out
dec
rcrb
push
shl
out
lods
jmp
jp
imul
lahf
clc
xchg
adc
pop
daa
jae
sti
loop
jp
cmc
pop
js
in
push
dec
stc
jo
call
lds
rolb
push
add
adc
push
lahf
sub
mov
das
add
xchg
dec
mov
aas
xor
iret
stos
mov
shrd
scas
jmp
int
lcall
mov
mov
gs
int
clc
iret
fcompl
cmpsb
lahf
inc
jmp
mov
mov
cwtl
push
dec
xchg
mov
xor
mov
mov
cwtl
push
in
jb
mov
mov
addr16
sti
repnz
sub
adc
xor
push
faddl
loope
fcomps
mov
lcall
ja
fiaddl
int3
ss
inc
and
adc
sub
add
dec
mov
repnz
lahf
mov
pop
popa
mov
cwtl
aaa
js
xchg
mov
inc
cmp
cmp
scas
push
pop
aam
or
sub
mov
int
push
mov
cmp
repnz
mov
sbb
stos
push
adc
in
sub
and
mov
xchg
xchg
xchg
push
insl
pop
popf
std
mov
cltd
inc
int
cmp
ljmp
sti
xor
inc
inc
dec
scas
leave
add
add
and
lods
or
outsl
mov
ljmp
adc
push
mov
xchg
popf
xor
jl
les
mov
subb
ds
mov
sahf
sti
stos
dec
outsl
add
cli
rorl
or
stos
out
add
inc
pop
adc
pop
idivl
sub
loopew
ss
or
jnp
test
lods
inc
ret
mov
movsb
inc
hlt
fwait
sbb
cmp
ss
dec
jns
dec
bound
jnp
and
nop
pop
subb
adc
jl
lea
aam
scas
out
test
mov
mov
adcl
stc
push
stos
sbb
mulb
xor
in
int
xchg
lock
or
mov
fisubs
cltd
jmp
jg
and
mov
cmpsl
stos
xor
jbe
test
add
gs
cltd
mov
lods
jno
test
and
mov
or
inc
and
in
das
cld
pop
sub
notl
movsb
cwtl
fsubl
hlt
fdiv
mov
or
ret
add
daa
movsb
cmp
sbb
jo
imul
popa
in
mov
ljmp
xchg
sub
test
sete
pop
pop
ds
aaa
jmp
das
jg
ljmp
mov
push
popa
mov
xchg
add
sub
xor
hlt
sbb
cmp
mov
out
jb
test
addr16
push
ret
adcl
in
or
mov
mov
test
dec
call
push
test
mov
xor
xor
add
cs
inc
test
stc
mov
cmp
dec
unpcklps
mov
sub
stos
mov
pop
pop
fidivs
aas
cmp
inc
cmp
adc
cmp
imul
pop
adc
jno
adc
and
test
cli
push
sti
push
sbb
outsl
sub
or
out
mov
fsubrl
xor
stos
not
ret
adc
fbstp
addb
insl
dec
inc
mov
shll
jae
xor
dec
in
xor
mov
stos
xor
js
int3
into
ficomps
into
mov
lods
sahf
les
aam
in
rcl
loop
push
dec
enter
pop
mov
in
repnz
pop
mov
mov
mov
add
xor
inc
cmpb
sub
and
outsl
mov
jmp
jbe
daa
xor
mov
xchg
jle
fwait
mov
mov
pop
xor
push
aas
push
mov
addb
or
sub
jecxz
xor
mov
cmp
xchg
mul
jge
aas
xor
adc
jo
sti
jl
push
insl
mov
push
sub
movsl
bound
into
adc
insl
inc
leave
popf
pop
mov
sbb
jbe
inc
push
jmp
mov
cmc
and
test
aaa
adc
add
jmp
cmp
movsb
jnp
pop
pavgb
dec
filds
nop
mov
daa
dec
adc
pop
rolb
or
leave
cmp
add
sbb
divl
and
ljmp
jbe
dec
hlt
xchg
inc
push
lods
loop
pop
sbb
in
ja
cltd
fcomps
adc
int3
ljmp
fs
jp
dec
gs
rorl
or
shlb
inc
and
jbe
mov
loop
adcb
xor
or
inc
xor
inc
push
mov
dec
pop
xchg
add
pusha
bound
push
push
push
bound
pop
ja
mov
nop
inc
out
fisttps
iret
into
add
aam
and
outsl
sub
push
mov
jmp
cmp
mov
sub
sahf
mov
rorb
cwtl
push
xor
xor
mov
xchg
in
push
add
mov
jp
shll
mov
mov
popa
call
adc
mov
pop
mov
out
and
sbb
xchg
mov
insl
cmp
orb
jb
xor
pusha
dec
shlb
inc
mov
cld
or
cmp
bound
and
and
xor
jns
xlat
pop
jbe
iret
cmc
xchg
inc
addr16
fistl
adc
les
mov
pop
scas
sbb
into
jo
cmp
scas
sti
fsubs
cmp
hlt
cmpsl
mov
lea
lahf
dec
addb
mov
or
iret
test
stc
inc
sub
rcr
and
mov
cmp
imul
addr16
adc
fsubrl
sar
pop
or
mov
pop
imul
sub
xor
push
ja
mov
insb
bound
aas
mov
int3
and
outsb
in
fabs
mov
les
cmpb
mov
mov
scas
insb
iret
xchg
rorl
fisttpl
adc
inc
cvtps2pi
pop
sahf
pop
into
repz
jl
inc
adc
mov
fsubrl
sub
les
ret
jns
mov
adc
xchg
pop
mov
stos
fldl
dec
mulb
rcl
aas
inc
jns
lea
jbe
mov
jg
jmp
fwait
jg
push
and
pop
mov
bound
scas
jge
lea
adc
and
or
xlat
jnp
mov
jbe
sub
pop
ret
jnp
es
jg
pop
or
out
jecxz
add
jo
cmc
mov
lds
mov
mov
or
mov
sub
inc
jne
dec
cmc
daa
xchg
pop
xor
repnz
leave
pop
lock
ja
loope
push
jno
es
xchg
xchg
cmp
add
mov
mov
or
iret
test
ret
scas
mov
push
into
xchg
loopne
lds
pop
je
movsl
jmp
daa
xchg
push
mov
mov
inc
adc
test
mov
inc
pop
sub
dec
popf
adc
mov
out
stos
cltd
dec
jle
inc
lret
ss
push
pusha
popa
in
lret
fsubrs
sarb
pop
scas
lods
hlt
sbb
pusha
mov
mov
shlb
in
mov
test
add
bound
jae
sub
jae
pop
mov
cmp
shlb
dec
pop
lock
stos
mov
sub
popf
nop
xor
push
mov
sarb
outsb
lods
cltd
mov
mov
shl
sysret
cmp
lods
push
aam
movsl
sub
xchg
test
mov
fcomps
popa
es
xor
mov
hlt
daa
dec
or
je
repnz
lcall
jp
out
imulb
fistpl
push
sbb
mov
int
jecxz
push
mov
js
fcoms
mov
shll
bound
cltd
xchg
cld
in
cltd
insb
add
cmp
mov
sarb
pop
pop
dec
cmpsl
pop
test
or
idiv
mov
dec
adc
inc
int3
ret
mov
pushf
or
inc
lods
test
or
pop
int3
xchg
movsl
mov
popf
out
push
fs
outsl
cli
or
mov
insb
inc
sbb
lahf
adc
pop
push
pop
bnd
fucomi
xor
mov
lea
inc
shr
icebp
dec
inc
mov
or
mov
sub
ja
add
sti
push
or
adc
test
imul
inc
fwait
inc
int3
aam
cli
jae
xlat
int
xchg
mov
inc
into
jge
ret
inc
into
mov
clc
and
pop
mov
es
jno
push
jmp
push
sbb
shl
adc
sub
adc
dec
xchg
add
jg
push
jns
sub
mov
fistl
pop
popf
xchg
pop
mov
xchg
sahf
popf
jge
lock
jno
lock
shrl
push
pop
jbe
mov
movsl
outsl
xor
jnp
call
int3
outsb
jmp
xchg
xor
cmp
sarl
fwait
mov
arpl
sbb
fidivrs
insb
fdivrs
inc
les
cmp
call
lock
jle
xor
mov
push
dec
lcall
scas
add
dec
fadds
mov
sbb
jp
mov
push
js
je
sahf
jmp
out
in
stos
mov
insl
inc
sbb
sbb
add
loopne
or
pop
push
scas
inc
sub
jle
jne
imul
out
jmp
aaa
xchg
pop
jg
notb
ret
and
int
lods
pop
mov
hlt
add
jno
les
mov
es
adc
je
inc
adc
add
out
add
adc
or
xchg
jo
push
nop
std
and
jno
jecxz
vpmacsdd
and
int
xchg
lcall
pop
out
js
shll
fstp
into
add
leave
xor
jb
jae
adc
xor
cmpsb
push
inc
aam
jb
jmp
inc
dec
outsl
stc
push
dec
push
mov
lret
xchg
dec
pushf
cwtl
jae
das
lds
mov
inc
pusha
xorb
inc
aaa
xabort
dec
aad
shlb
pop
shll
shlb
sub
sbb
in
cmp
adc
mov
into
aaa
hlt
mov
adc
push
in
ljmp
or
xlat
imul
add
lea
out
iret
xchg
cld
in
adc
icebp
sbb
xchg
decl
ja
pop
lcall
arpl
and
jbe
negl
incb
pop
ss
mov
rolb
sub
sbbb
pop
push
sbb
stos
mov
sub
bound
xchg
ficoml
adc
push
rcll
bound
mov
repnz
and
iret
roll
or
clc
inc
jge
cwtl
cmpsl
aas
jnp
mov
or
push
mov
and
adc
sub
cmpsl
adc
cmp
aas
add
cmp
in
les
pop
testb
sub
push
repnz
mov
aaa
mov
dec
xchg
movl
sbb
xchg
shr
retw
xor
int3
mov
add
mov
push
mov
add
lahf
inc
add
pop
mov
push
push
inc
lret
popa
dec
add
outsl
mov
test
push
xor
jl
js
push
inc
xchg
sbbl
loop
pop
push
inc
test
dec
xchg
mov
mull
lods
push
pop
out
clc
popf
inc
xchg
mov
lods
mov
scas
cmp
push
insl
popa
inc
pop
push
leave
inc
xor
xchg
xlat
test
xor
xchg
pusha
lods
pop
pop
stc
loope
mov
js
jns
sub
mov
adc
loopne
scas
jbe
rolb
cmpsl
bound
cmp
nop
rclb
adc
lahf
or
outsb
push
out
or
out
fidivl
xchg
int
adc
std
jl
jnp
cmp
mov
rcrl
jbe
cmp
dec
test
xchg
bound
mov
push
xor
lcall
xor
insl
loopne
and
mulb
push
fcmovu
mov
loop
outsb
ja
sub
aaa
cmp
xchg
xchg
or
xor
ss
pop
sbb
test
sub
shll
shrl
cmp
mov
fcmovnbe
and
mov
fbstp
mov
out
cs
js
mov
lock
cmpsl
shll
loope
or
mov
imul
xchg
and
outsb
sub
mov
pop
lcall
push
adc
cli
ds
dec
xchg
jae
jne
addr16
das
push
fdivp
mov
es
pusha
fs
mov
addr16
adc
cmovno
jb
and
push
xlat
mov
dec
movsl
xor
xchg
add
mov
or
js
cmp
into
in
aad
or
fwait
orl
mov
pop
push
xchg
xchg
das
and
jns
and
pop
jno
mov
int
push
mov
inc
repnz
sti
aad
adc
push
sbb
dec
dec
shl
push
dec
xchg
push
sbb
in
mov
fmulp
add
mov
shrl
xchg
insl
add
outsb
cmpsb
xchg
add
adc
ficomps
cmp
jp
cld
scas
dec
test
mov
sbb
aam
aam
sbb
jl
push
sub
stc
mov
test
les
push
jl
pop
lahf
adc
shrb
loop
mov
or
jns
mov
or
dec
adc
add
andl
mov
arpl
lret
and
sub
insl
scas
push
push
gs
add
movsl
test
push
mov
ljmp
inc
push
push
push
inc
mov
sbbl
scas
cltd
fucomi
dec
hlt
cs
lret
fwait
or
push
shrl
mov
int
jbe
rcr
loop
lods
jmp
shll
mov
gs
lcall
les
cmpsl
and
jle,pt
outsl
call
add
flds
cli
pop
imul
aad
fldcw
add
jb
or
aam
xlat
das
sbb
std
or
fwait
in
jns
jae
lret
xchg
or
ss
add
scas
mov
adc
lahf
jle
push
adc
cmp
inc
cmc
imul
in
imul
xchg
out
sub
mov
cmp
and
out
and
outsb
data16
call
icebp
cmpl
sub
stc
add
and
cltd
or
cli
imul
out
movsb
sbb
xchg
xor
jle
push
xchg
dec
pusha
xchg
movb
xor
adcb
xor
jmp
lcall
iret
xchg
adc
lods
cmp
je
inc
push
sbb
push
inc
add
insb
les
repz
cwtl
mov
jg
test
lods
ja
stos
out
mov
xor
push
and
and
and
outsl
mov
sbb
cmp
fnstenv
dec
sbbl
ss
repnz
popa
jg
int3
pop
push
fidivrl
pop
pop
fs
gs
in
mov
divb
and
leave
cmpsb
xchg
push
mov
jmp
pop
insl
mov
insb
push
jb
repnz
pop
push
mov
inc
mov
insb
adc
fdivp
dec
outsb
mov
gs
fucom
and
sub
negb
sbb
mov
ljmp
scas
mov
cmp
incl
xlat
dec
mov
adc
out
jecxz
pusha
dec
data16
daa
fists
fnstsw
dec
pop
inc
out
addr16
imul
repnz
jp
loopne
sub
pop
mov
jecxz
sub
pop
xchg
fistpl
push
push
bound
pop
stos
ljmp
push
cwtl
or
imull
add
scas
or
rorl
not
or
pop
cld
shl
sbb
shl
push
mov
push
sub
inc
cmpsl
add
dec
mov
inc
imul
ret
xor
scas
leave
sbb
sub
push
and
loopne
fsubp
xchg
jmp
aas
fstpt
xlat
gs
mov
mov
fmull
adc
and
lret
jle
pop
add
xor
pop
movsl
gs
mov
aas
xchg
xchg
or
cmc
movsb
cs
add
xor
in
dec
movsl
test
fistl
and
xor
mov
lock
xchg
ret
loope
cmpsl
scas
idiv
je
ja
in
fldt
xchg
add
icebp
addb
in
ret
into
cwtl
mov
xor
jns
cmc
pop
xor
loop
pop
jo
test
add
ja
pushf
jge
fnstcw
testb
xlat
js
outsl
or
aad
mov
out
fildll
mov
mov
sbb
lret
dec
push
push
mov
sub
xor
das
loope
jbe
into
cmc
arpl
test
aas
inc
mov
sbb
xor
jmp
pop
or
jae
mov
jecxz
xchg
pop
cmpsb
jge
insb
in
lcall
cmp
dec
in
mov
pop
popf
pop
xor
jle
jmp
int3
xor
pop
push
shlb
pushf
mov
and
jg
repnz
bound
add
gs
pusha
adc
repnz
cmp
cld
cmp
pop
icebp
pushl
sub
lds
xchg
inc
add
shr
lods
jp
insb
ret
add
loope
adcl
sarl
mov
cld
das
add
pop
jmp
mov
sarl
in
es
cli
cmp
mov
pop
das
xor
mov
test
pop
dec
mov
fucomip
daa
jl
cmc
in
testl
jae
out
fnstenv
sahf
xchg
fcomi
movsl
push
sbb
ror
mov
cmp
out
stos
push
ljmp
pop
xor
pushl
fidivs
lea
fcoms
scas
push
and
xor
movsl
lcall
mov
fs
lcall
lea
sub
mov
out
lea
imul
cmp
das
adc
push
packuswb
cmp
ret
mov
fadds
pop
fwait
pop
or
outsl
mov
fcmovu
cmpsl
imul
in
lahf
cmp
rcrl
sbb
aaa
sub
in
xchg
into
mov
data16
lea
and
xchg
and
lret
das
cmpsb
inc
mov
pop
in
push
ss
mov
hlt
popa
add
pop
adc
enter
test
xor
mov
nop
or
jmp
loope
dec
loopne
push
leave
movsl
aaa
stos
push
pushf
jmp
andl
jns
shrl
or
and
xchg
or
jnp
leave
adc
pop
xor
cwtl
shll
push
cwtl
daa
jmp
test
int
pop
sub
bound
int
add
movsl
lcall
pop
push
sub
fwait
cmp
nop
int3
push
fsqrt
mov
lea
fnstcw
mov
repz
hlt
sub
fnstsw
outsl
into
adc
xor
loop
pop
in
adcb
outsb
cmc
imul
fs
xor
loop
dec
jle
sub
lret
pop
pop
fdivrl
and
mov
or
inc
pushf
jle
jne
fcmovnbe
cmpsl
int3
push
mov
fisttps
int3
cmp
adc
jns
cmp
int
repnz
fsub
push
insl
sbbl
sbb
jnp
adc
dec
movsb
ja
fmull
jnp
and
mov
movsl
sahf
jmp
cmc
mov
jge
fcompl
dec
insb
xchg
xchg
add
ds
daa
js
imul
xor
fsubl
stc
push
sub
insb
xchg
push
call
xor
fidivs
stos
loope
nop
xchg
xlat
icebp
sahf
pop
popf
out
les
daa
std
scas
mov
jbe
pushf
orb
push
push
popa
xor
jo
inc
pop
repnz
xor
out
sub
push
mov
add
in
cmp
mov
fidivrs
cmpsl
test
push
sub
js
mov
sbb
adc
addr16
jbe
or
adc
loopne
push
xor
and
cmpsl
lahf
pop
cmp
xor
mov
notb
dec
arpl
das
add
add
ret
jle
nop
cs
test
sub
mov
sub
scas
mov
pop
jg
ljmp
mull
jne
inc
mov
cltd
dec
clc
in
rcr
je
rcrb
loop
movsb
fcompl
imul
fimuls
mov
rorl
sub
jnp
xchg
fmul
mov
mov
inc
and
mov
mov
mov
mov
enter
sti
lahf
in
sbb
xchg
sub
xchg
je
xchg
je
shlb
jg
mov
in
push
aad
addb
lcall
es
sub
lcall
ret
mov
inc
cltd
sahf
sbb
fldcw
and
and
mov
clc
sub
mov
adc
je
cmp
sbbb
add
es
and
call
scas
pushf
add
fsubl
adc
ljmp
cmp
or
cmp
sbbb
test
push
xchg
call
addl
xor
test
imul
adc
cltd
aad
repz
lock
scas
mov
mov
mov
xor
mov
icebp
out
int3
inc
orl
add
jg
lret
imul
aad
notb
repnz
adc
sbb
add
mov
mov
out
in
repnz
mov
ret
aas
test
push
xchg
dec
xchg
jg
std
adc
sarl
inc
test
inc
cltd
add
or
or
pushf
loop
mov
add
out
mov
adc
mov
or
std
es
sbb
push
inc
rolb
cmp
push
mov
jae
mov
xor
aam
pop
int
sahf
mov
hlt
jno
inc
jnp
cmc
decl
push
pop
enter
mov
add
xchg
dec
push
mov
hlt
or
in
lret
test
gs
lods
ss
mov
test
jmp
dec
or
insb
inc
outsb
push
in
std
popa
fldt
push
ret
sbb
ret
ljmp
popf
push
adc
pop
cli
dec
shll
add
test
jae
mov
clc
cmpsl
adc
decl
sahf
inc
jnp
dec
or
rolb
outsb
data16
popa
sub
mov
out
sub
iret
mov
popa
sbb
enter
stc
pop
test
test
testb
lock
pop
stos
in
dec
xchg
ds
push
sub
ss
push
dec
outsb
xchg
in
jne
add
or
pusha
test
mov
dec
jbe
call
rol
jnp
outsl
stos
pop
jmp
pop
ljmp
jns
sbb
movsb
enter
pop
cltd
out
ficompl
mov
ss
mov
jae
andl
xchg
pushf
inc
stos
adc
mov
inc
das
dec
inc
lret
js
add
lods
cmp
fwait
jb
inc
arpl
popa
and
or
cmpsl
or
lcall
loopne
and
bnd
ficompl
test
loope
pusha
sub
rcrb
pop
outsl
popf
adc
sbb
push
mov
push
xchg
ret
into
pop
sbb
ficompl
adc
sub
xchg
or
jns
in
repnz
loop
cmp
push
lods
push
mov
lods
push
and
enter
or
pop
sbb
repnz
sbb
push
sbb
mov
mov
or
pop
popa
dec
inc
cmp
popa
cmp
push
scas
out
iret
and
push
or
loop
adc
stos
push
mov
pop
mov
lcall
fbld
push
lret
pop
icebp
cmp
pop
push
imul
push
sub
or
push
hlt
out
flds
add
es
sub
mov
or
mov
sub
push
jge
push
xchg
dec
xor
cltd
add
push
scas
xchg
es
jmp
jno
push
and
lods
call
popl
repz
xchg
pop
stc
data16
clc
mov
sarl
jmp
int3
pop
sub
push
mov
nop
fmul
inc
fs
add
lcall
pop
movsl
das
push
mov
pop
mov
cmp
dec
add
test
sbb
ficomps
imul
imul
cmp
pcmpgtb
inc
rcl
pop
sbbl
test
pop
out
sbb
inc
jmp
cmpsl
cltd
aad
cmc
fldt
and
inc
sub
pop
mov
push
push
js
ljmp
out
xchg
sub
rolb
imul
int3
mov
dec
leave
xchg
loop
cmp
dec
std
loopne
call
and
xlat
cwtl
sar
gs
pop
pop
in
jne
gs
sarl
shll
out
xchg
xchg
rclb
xor
fdivr
mov
pop
sti
pop
jl
jne
push
jmp
and
into
inc
mov
bound
mov
aad
daa
xchg
pop
and
push
mov
jo
inc
jecxz
in
ds
or
adc
nop
mov
out
sub
fcomps
or
adc
out
cmp
cmp
jno
callw
pop
es
mov
mov
push
dec
insb
mov
fmuls
pop
ja
cmp
jge
lods
aam
mov
adc
das
cmp
in
clc
loop
leave
xor
pop
xchg
jo
add
test
xchg
ja
sub
push
mov
pop
adc
add
pusha
stos
ja
dec
imul
subb
cmp
sub
push
push
cmpsl
ljmp
cltd
gs
jl
jnp
mov
pop
outsl
lods
push
or
dec
nop
out
jb
insb
pusha
arpl
icebp
fistpl
push
xor
cmp
mov
sbb
xchg
mov
data16
aaa
dec
or
test
lcall
sub
bound
jno
lds
lock
pushf
mov
push
mov
enter
aaa
mov
clc
daa
add
mov
jecxz
adc
movsl
pop
xor
push
mov
xor
push
js
jmp
ja
shl
stos
ret
xlat
pop
adcl
xchg
loop
push
js
xor
ja
dec
pop
mov
sarb
aad
pop
push
mov
xor
insl
push
mov
lods
popa
mov
pop
sbb
outsl
jnp
sbbb
in
in
mov
add
mov
jg
jg
ss
movsl
pushf
rcrl
dec
mov
das
orb
fnstcw
fs
lret
cs
inc
aam
add
pop
jnp
dec
test
fs
clc
ret
gs
fstl
pop
out
cmpsb
icebp
cwtl
lds
jmp
dec
sbb
add
sbb
dec
adc
pusha
scas
faddl
jmp
test
push
clc
mov
cmc
jnp
or
aad
shrb
jmp
enter
iret
mov
aam
fxch
cmp
mov
adc
push
fs
pushf
inc
mov
call
mov
int
mov
pop
pop
jae
adc
into
add
nop
outsb
sub
sbb
jp
push
repnz
and
lahf
push
cltd
jnp
push
into
add
es
cs
in
arpl
and
stc
cmp
vorpd
pop
mov
or
add
pop
in
popf
pop
inc
pop
ret
xchg
sahf
js
mov
mov
popf
ds
pop
in
dec
mov
or
and
cmpsb
xor
sar
pop
xor
xor
fwait
add
scas
data16
mov
sbb
jge
jl
cmp
enter
ja
loope
repz
nop
out
cmc
push
jb
in
mov
in
sub
loop
aaa
lock
dec
hlt
dec
lds
cmp
test
into
mov
and
cmp
or
xchg
fdivs
test
mov
pop
stos
je
xchg
jae
jl
mov
ljmp
lcall
int3
out
sub
ja
xchg
out
in
dec
push
mov
xchg
dec
sbb
loop
packuswb
mov
pop
cld
mov
test
mov
out
push
push
ljmp
arpl
psubw
inc
mov
aam
stos
ds
xchg
lock
shlb
add
bts
pop
fmuls
xchg
mov
out
rcrb
pop
in
jae
sub
mov
mov
es
fdivrs
cmp
and
or
inc
lret
xchg
orb
jnp
aad
sub
lods
mov
sarb
fwait
xorb
sbb
or
clc
sbb
jbe
jns
add
mov
mov
inc
leave
jmp
arpl
push
pop
push
push
jl
mov
add
into
inc
dec
xor
ret
xor
insl
dec
jns
aad
add
cmpb
inc
test
lcall
std
mov
jne
fcompl
inc
test
aad
outsb
out
loop
inc
outsl
pop
out
lahf
jg
dec
xor
pop
roll
mov
sub
or
fs
jae
ljmp
xchg
jecxz
mov
fstps
dec
sbb
sub
out
stos
cwtl
out
fidivrs
sarl
and
sbb
loopne
xor
out
push
cli
cmpsb
popf
or
iret
push
push
cmp
in
clc
mov
outsb
aad
cltd
js
xor
sbb
test
mov
sahf
pop
clc
adc
aad
mov
and
add
repnz
cltd
andl
mov
les
and
pop
xchg
mov
jg
inc
sub
and
dec
mov
mov
popf
aad
mov
pop
pusha
sbbb
pop
push
scas
pop
add
pop
pop
imul
mov
pop
addr16
or
jb
xor
pop
mov
fmull
loopne
or
in
std
mov
shll
cli
sub
xorl
fucomip
mov
mov
mov
add
out
scas
leave
fs
sahf
iret
xchg
fdivrl
out
xor
aam
mov
mov
gs
sti
push
in
das
fwait
outsl
push
add
cwtl
jbe
test
pop
push
mov
cmpsb
mov
or
push
or
adc
add
mov
mov
jnp
aad
jo
lock
xchg
scas
rorb
loope
sub
mov
xor
shl
mov
cmp
fiaddl
xchg
push
pop
mov
xor
cmp
adc
jno
pop
inc
pop
jo
pop
lret
jecxz
in
inc
xorb
and
push
jbe
jecxz
ret
js
adc
jle,pn
call
push
fistl
inc
xchg
pop
xchg
stos
mov
xchg
sub
push
pop
clc
cmp
jno
aas
movsl
imul
or
cld
push
xchg
std
cmp
aam
sbb
lahf
inc
sub
push
pop
cld
adcb
and
pop
daa
in
adc
lahf
mov
inc
cmp
out
aad
std
inc
cwtl
and
or
sub
and
lcall
or
and
push
vrsqrtps
push
mov
hlt
and
mov
movsb
push
sub
fistps
and
push
imul
or
mov
add
cld
push
fadd
mov
jns
scas
push
jae
sbb
into
int3
cwtl
mov
push
sbbb
inc
mov
mov
add
sahf
or
dec
push
and
and
xor
sbb
inc
sbb
leave
mov
shr
jmp
mov
mov
or
dec
in
inc
cmc
adc
inc
xor
mov
sub
lods
pop
test
shlb
cmc
adc
mov
pop
xor
jno
stos
rcrl
and
lret
pop
mov
int
push
cmpxchg
cmp
in
pop
lahf
test
stc
icebp
cmpsb
jge
jns
inc
inc
aad
jae
stos
xchg
sub
xlat
lds
test
std
and
adc
out
dec
adc
cmp
push
sub
jnp
jno
adc
jne
test
xchg
jle
das
dec
in
inc
dec
xlat
adcl
pop
pop
pop
es
clc
ja
or
push
mov
out
jle
jno
sbbb
jmp
int
mov
inc
test
repnz
push
pop
sub
js
dec
mov
fwait
sub
sbb
or
mov
jnp
or
add
pop
dec
push
dec
iret
scas
lds
jbe
pop
out
movsl
addr16
and
cmp
sub
out
mov
jp
xchg
divl
pop
insl
bound
add
xor
jp
shll
loopne
inc
xor
bound
or
and
or
fs
cmp
xor
xchg
sti
push
xchg
andb
into
movsb
sti
ss
sahf
pop
push
mov
xlat
fidivrs
inc
stos
minps
add
shr
add
xor
sti
pop
fldcw
mov
sahf
dec
dec
adc
mov
push
fcoml
mov
rclb
jge
fldenv
lret
xlat
mov
scas
jo
jo
loop
jp
icebp
jmp
pop
sahf
in
sub
or
sub
mov
shll
cltd
push
jle
lock
push
push
fucomip
fdiv
mov
shrb
bound
dec
and
enter
aas
mov
mov
test
cmp
sbb
scas
adc
push
xlat
ret
cmp
dec
rcrb
dec
push
and
pop
push
mov
test
or
jp
nop
pusha
fwait
mov
ss
data16
or
imul
ret
sbb
jb
lods
enter
and
out
bound
jmp
lahf
out
loopne
leave
cmp
arpl
adc
lahf
push
adc
dec
in
push
test
aad
fsubrl
inc
mov
lret
inc
sbb
pop
cwtl
fdivrl
data16
scas
inc
pop
sub
sbb
pusha
js
lock
xchg
test
fmul
push
push
jne
push
and
push
stos
test
leave
stos
or
xor
lret
shl
rol
pop
call
inc
imul
xchg
cmp
jge
mov
gs
sbb
or
nop
addl
cmp
cs
hlt
mov
mov
push
imulb
ret
and
aaa
out
xor
jmp
loop
mov
test
mov
mov
aam
mov
push
inc
shlb
cld
sahf
sub
cmp
mov
loopne
pop
pop
out
and
pop
jne
xor
push
cmc
jne
xor
or
mov
xor
fists
sarb
imul
daa
ljmp
in
cmp
push
jp
outsb
popf
push
ss
push
int
pop
jae
push
and
push
dec
mov
sub
or
adcl
xor
xor
loopne
inc
cmp
add
in
rolb
sbbb
and
mov
aas
data16
and
data16
jne
les
sbb
repnz
xor
xchg
test
jecxz
std
dec
aam
mov
sbbb
and
pushl
sbb
jb
in
jno
sbbl
enter
mov
shlb
test
push
sbb
push
dec
push
or
lret
jg
xchg
xor
mov
hlt
xchg
mov
cld
jne
mov
mov
test
arpl
xor
das
out
dec
mov
lret
lret
test
mov
in
lods
gs
mov
stos
mov
cmc
dec
loopne
aam
outsb
xlat
inc
aam
mov
and
sahf
inc
xor
lds
insb
adc
xchg
loopne
stc
jp
or
outsb
mov
jecxz
sti
scas
mov
cltd
push
rcl
out
jo
fidivrl
repnz
enter
loop
push
fcoms
gs
mov
jle
mov
cmp
dec
jbe
lea
cli
xor
jbe
mov
out
das
push
mov
nop
adc
repnz
int3
fimull
jne
xor
test
cli
mov
or
push
enter
sbb
push
xchg
dec
lds
icebp
xchg
xor
je
dec
cmp
subl
mov
mov
cli
and
rolb
mov
lret
add
fsub
dec
cmp
fnstsw
jmp
test
ja
inc
bound
addr16
jmp
cmp
push
xchg
cmp
xlat
inc
mov
sub
add
jae
sbbl
lds
ret
add
pop
pop
mov
inc
popf
aaa
push
xor
xchg
sbb
push
lods
gs
cli
jmp
inc
cli
pop
sub
int3
xor
pop
leave
pop
sub
or
mov
mov
cmp
jge
cmp
mov
jnp
sahf
sub
xchg
shr
iret
push
scas
mov
mov
dec
or
sbb
fsubl
cs
adc
xor
clc
into
and
or
push
pushf
adc
xchg
or
enter
cmp
testb
sbb
test
mov
orl
pop
lods
sahf
mov
clc
decl
test
pop
ljmp
scas
lcall
cmpsb
xchg
hlt
cmp
mov
ds
sbb
pusha
shll
pop
xor
pusha
nop
sub
mov
jno
pop
mov
jmp
push
adc
push
xor
inc
adc
mov
mov
outsb
das
mov
hlt
fwait
mov
inc
mov
push
rolb
push
fwait
dec
and
cmp
push
mov
sub
cmp
xor
loop
mov
mov
cmpsb
jg
std
bound
xor
mov
nop
insl
insb
mov
or
fsubs
test
test
push
pop
pop
mov
in
es
add
jmp
movsb
push
xor
cmp
loop
fwait
and
fdivrs
xor
roll
mov
inc
push
lds
pop
insl
xchg
inc
in
mov
add
pusha
sbb
cmp
push
inc
stc
fwait
and
scas
popf
and
aaa
cli
rdtsc
or
arpl
xor
lea
mov
int
push
aas
fwait
push
xchg
push
xchg
mov
pop
addl
push
ret
xor
inc
xchg
cmp
aam
lcall
sahf
cmpsb
mov
lds
mov
subl
add
test
cmp
and
or
std
sub
pop
push
outsb
mov
in
loope
test
pop
xchg
test
adc
fidivl
add
movsl
les
add
adc
push
ffree
sti
lret
mov
inc
pop
js
das
rcr
mov
gs
cld
leave
or
div
in
xorl
or
or
adc
fcomps
or
scas
cmp
int3
imul
ja
int
std
mov
pop
orl
sbb
cmp
fcoml
out
mov
enter
aas
and
xor
and
repz
in
shll
jno
mull
inc
xor
xor
sbb
and
xchg
pop
sbb
xchg
jge
movsl
mov
mov
dec
lcall
test
mov
xor
mov
jo
lock
ror
sub
cld
out
mov
leave
jecxz
cmp
out
aam
sub
xor
jns
jp
jae
jno
inc
jg
testl
das
adc
outsl
mov
subl
call
lods
pop
ds
dec
dec
into
imul
pop
dec
push
fists
and
xor
pusha
inc
fwait
inc
push
data16
cmpsb
in
push
xor
sbb
test
cmc
inc
mov
mov
mov
scas
es
mov
or
and
and
push
mov
cmp
out
push
lret
shll
or
or
test
out
cmp
adc
aaa
mov
test
int
cmp
insb
adc
jecxz
popa
in
pop
inc
cs
loopne
lea
aad
shrb
jbe
mov
cli
push
mov
and
ljmp
xlat
mov
sub
lret
cli
mov
push
and
stc
arpl
jl
loope
data16
out
testb
xchg
dec
and
mov
inc
cmp
movsb
inc
cli
mov
mov
and
rcll
adc
jmp
or
and
or
ficompl
push
negb
outsl
push
std
cmpsl
sbb
jmp
fstl
pusha
int
sub
push
mov
xchg
imul
jbe
jmp
test
sbb
inc
mull
xchg
xchg
jae
divl
xacquire
aad
fnstcw
inc
push
inc
test
data16
ret
jp
xchg
xchg
dec
sub
mov
repnz
sub
and
bswap
jnp
ficomps
hlt
dec
add
movsl
adc
jno
stos
test
jnp
mov
sarl
rcrl
notl
es
cmpsb
lods
mov
mov
mov
dec
jns
inc
fwait
jae
pusha
ds
jb
jmp
inc
leave
mov
mov
mov
cs
xorb
jno
fnstcw
repnz
xchg
push
mov
repz
push
sub
adc
jl
dec
hlt
pop
mov
mov
stos
andl
sub
lret
xchg
sub
mov
pop
or
clc
pop
cmp
cli
je
roll
pop
mov
lahf
mov
mov
jge
pop
stos
xor
xor
xor
dec
fwait
pop
mov
test
dec
nop
cmp
jno
lahf
sub
jne
fidivl
repz
sub
popf
push
push
adc
jno
out
xor
jmp
jno
pop
pop
mov
daa
into
les
mov
test
push
lds
pop
adc
sbb
pushf
fbld
pop
add
add
daa
fisubrs
sub
movsl
inc
loop
mov
lret
dec
dec
ljmp
stc
adc
lahf
dec
add
loopne
cmp
aaa
mov
call
mov
fsub
into
bound
xchg
xchg
rorb
dec
cltd
adc
aad
loopne
cmp
mov
pop
or
dec
adc
aad
xor
sub
cmpsb
test
mov
nop
negl
add
cltd
xchg
cltd
cmp
scas
jg
inc
xchg
inc
sbb
dec
jl
jb
lret
sarb
pop
xor
cmp
add
push
push
jo
jbe
adc
inc
fisubs
adc
adc
jmp
xchg
sub
popa
jae
roll
push
xor
aas
sahf
jle
fiaddl
or
mov
xorb
loopne
lods
inc
ja
adc
mov
adc
pop
sub
xchg
xchg
inc
push
cmp
mov
xchg
xor
loope
adc
push
pop
sbb
inc
int
lret
cmpsl
in
xor
mov
adc
pop
hlt
sar
stc
cs
or
out
add
push
inc
xlat
scas
notb
sbb
cmp
mov
popf
lods
mov
mov
push
mov
mov
push
ret
jo
dec
or
shl
psubq
mov
push
aad
jo
pop
adc
jno
test
push
rorl
jmp
dec
lcall
int
push
lret
or
sbb
push
mov
out
negl
jle
fdivrs
cltd
test
and
clc
xchg
push
ja
mov
mov
adc
and
add
lods
cs
xor
mov
adc
into
cmpl
pop
mov
lea
pop
inc
stc
shlb
dec
push
and
int
in
je
mov
xchg
insb
fildll
jnp
and
out
mov
xchg
je
loope
movl
push
dec
push
pop
pop
push
xor
lret
mov
cmp
adc
imul
jno
jmp
in
test
lock
mov
jae
mov
cmc
push
mov
rorl
dec
jo
in
add
ret
int3
xchg
and
sti
outsl
lea
or
rclw
out
out
imul
sti
mov
mov
movsl
sti
lds
roll
mov
push
cli
or
add
push
add
cmp
imul
cli
xor
and
add
xor
sti
jns
add
mov
jge
repz
mov
sub
imul
or
mov
and
arpl
test
xor
scas
add
in
dec
push
jg
push
cmp
cmp
nop
push
dec
sub
mov
sbb
arpl
push
mov
dec
int
mov
jo
xchg
sub
in
xlat
les
js
sbb
repnz
add
dec
int
push
dec
aas
mov
gs
lcall
jbe
mov
lea
or
adc
outsl
inc
jb
lahf
cmp
xchg
insl
in
cmp
push
inc
mov
gs
lret
cmp
and
aas
lcall
fisttpll
jle
stos
dec
mov
mov
rcrl
inc
pop
dec
stos
movsb
mov
jp
jecxz
xor
sarl
addr16
mov
sbb
imul
jnp
mov
bound
xor
repz
mov
jg
push
loope
clc
sbb
dec
imul
sbb
push
add
add
popf
enter
inc
lahf
addr16
lahf
xchg
inc
cmc
dec
cmpsb
cmp
jbe
lahf
jb
jne
sti
jbe
pop
inc
push
xchg
xchg
rolb
sub
mov
push
rorb
js
mov
sub
xor
sbb
jmp
in
pop
and
enter
xchg
arpl
sbb
push
ret
jl
xorl
cmpsl
sbb
pop
enter
leave
repz
insb
mov
pop
lret
fucompp
aaa
mov
push
mov
mov
sbbl
cs
mov
pop
divb
lds
pop
bound
or
std
add
mov
jns
mov
je
mov
fmuls
dec
addr16
cmp
mov
gs
mov
idivb
jmp
aad
data16
or
clc
and
sbb
aam
xor
or
mov
test
divb
sub
pop
in
or
repnz
xor
add
sub
cmp
mov
adc
jne
or
cmp
popa
shll
mov
aas
mov
jmp
mov
fldl
insl
out
pop
iret
aas
insl
adc
enter
leave
idiv
inc
push
js
xor
shrb
jl
jle
out
pop
test
fisubrl
pop
xor
dec
sub
notb
adc
inc
mov
mov
mov
pop
push
stos
mov
cmc
call
shrl
cmp
insb
push
mov
test
ficompl
mov
loope
jns
int3
add
fldenv
outsb
cmpb
imul
jmp
jno
cli
lea
movsb
arpl
xchg
mov
or
mov
mov
stc
xchg
jle
out
mov
push
cmc
gs
dec
or
jge
es
cld
bound
cltd
subb
xor
mov
push
loope
mov
cmc
out
add
jge
sti
ret
rcrb
orb
test
int3
cmp
xchg
loop
es
fdivs
int
adc
jp
aas
out
pop
jbe
pop
fdivs
ret
pop
xchg
and
out
cwtl
and
nop
psubw
into
outsb
push
sti
and
sub
xor
push
or
xchg
jp
movsb
stc
in
or
or
shrl
fistps
lea
jae
fnstcw
out
mov
jno
mov
test
dec
jbe
or
mov
cmp
lahf
sbb
fidivl
loop
xor
sub
popf
ljmp
inc
add
out
loope
movsl
inc
xchg
and
jb
sbb
pushf
popf
jp
inc
mov
lret
xor
inc
ljmp
add
push
xor
mov
xor
xor
xor
dec
push
xor
push
sub
xlat
leave
sub
dec
or
add
jmp
sarb
jns
mov
dec
repnz
or
repz
add
andb
popa
lods
cmp
aad
jbe
sub
jp
arpl
pop
and
jo
push
xchg
in
xchg
test
and
loopne
sub
and
jmp
mov
js
mov
shl
pop
dec
pushf
lret
cltd
in
push
adc
push
add
icebp
jb
iret
cmp
shlb
xchg
aam
aad
mov
adc
xor
nop
out
mov
rclb
fbstp
jl
xor
mov
jg
push
stc
imul
adc
dec
push
enter
inc
add
pop
aam
outsb
xor
int
mov
sub
in
das
xor
dec
sub
add
add
neg
jns
out
imul
dec
mov
xchg
pop
dec
mov
sub
adcb
int3
sub
xchg
mov
cli
xchg
and
mov
jns
rolb
aaa
and
mov
add
dec
dec
mov
sub
insl
test
xchg
push
es
daa
jg
fdivl
dec
push
mov
push
mov
insl
iret
pushf
add
fcompl
scas
adc
xchg
incl
adc
mov
das
mov
ja
xchg
mov
pop
mov
repz
or
or
js
add
cwtl
inc
cmc
cmpsb
jecxz
sbbl
decb
and
icebp
das
jp
mov
xor
xor
or
out
or
incl
pusha
xor
mov
out
adc
lods
add
xchg
lcallw
xor
push
loop
ss
mov
insb
inc
add
push
aam
cs
pop
dec
stos
and
mov
add
das
shlb
outsl
push
nop
fmul
jno
mov
mov
xor
xchg
push
sbb
hlt
and
cmp
push
sbb
sti
div
push
out
sub
cmp
ljmp
add
or
cmp
lahf
cmp
jl
and
mov
jge
xchg
mov
aas
dec
fcoms
pop
movsl
xchg
jle
rorb
clc
scas
fmuls
xchg
xchg
push
pop
jg
jmp
es
mov
cmp
pop
popf
pop
pusha
stc
ret
aaa
fwait
iret
aaa
repz
in
ss
ds
xor
stos
out
insb
or
mov
add
ss
inc
push
mov
ret
and
nop
lds
repz
or
fists
pop
test
test
scas
mov
adc
cmp
jl
andb
and
xchg
mov
or
imul
xchg
insb
and
add
clc
xchg
add
add
inc
pextrw
jg
push
jecxz
in
mov
mov
repz
js
jg
sahf
loope
adcb
repz
test
sub
test
jmpw
add
cld
xchg
jnp
call
ja
cmp
mov
xor
pop
adc
lret
mov
stc
imul
test
loopne
fldl
pop
inc
mov
leave
push
mov
pop
lods
aaa
ja
add
mov
mov
sub
out
out
mov
fs
jno
fldenv
mov
outsl
xor
bound
es
popa
out
xor
ja
mov
inc
loopne
push
add
sbb
lds
pop
cmpsl
jbe
clc
dec
mov
sub
aam
mov
std
jnp
rcr
cmpsb
push
clc
add
test
sub
das
sbb
mov
in
mov
in
xor
lret
or
hlt
outsb
int3
ror
das
cltd
int
cmc
mov
pop
out
mov
and
adc
mov
and
xor
push
ljmp
adc
dec
dec
mov
or
les
cmp
outsb
pop
xor
mov
rclb
inc
push
in
jmp
lcall
mov
cmp
cmp
out
ljmp
push
mov
push
inc
fs
xlat
stos
outsb
test
out
cmp
cmp
comiss
test
sub
push
daa
adc
xor
and
mov
ljmp
andb
fidivl
imul
in
bound
sub
rcrb
inc
incb
pop
and
mull
fucomi
and
in
daa
imul
push
adc
sub
dec
lods
outsl
mov
es
std
fs
in
fs
jae
pop
push
pop
mov
dec
int
js
in
add
sub
cmpsb
mov
pop
pop
jl
repnz
mov
stos
jo
push
push
or
imulb
in
xorl
push
mov
jg
imul
sbb
rcll
adc
sbb
out
jbe
push
xor
pop
or
lods
idivb
inc
jb
mov
adc
loope
ljmp
push
push
add
jbe
clc
das
lea
or
mov
outsl
insb
lcall
cmp
shll
jmp
jle
loop
fidivrs
mov
and
stc
nop
push
leave
mov
add
adc
mov
jg
lods
pusha
in
out
aad
jnp
outsb
cmp
jecxz
test
add
orl
movsb
sbb
pop
xchg
lods
pop
xchg
stos
dec
negl
fdivrs
mov
and
mov
psraw
mov
sbb
fnstenv
xor
pop
out
ljmp
loop
dec
out
lcall
loop
mov
repz
stc
mov
cltd
mov
cwtl
fwait
in
jne
or
cs
stos
xchg
jmp
ficompl
icebp
incl
hlt
mov
jge
imul
inc
pop
dec
mov
imul
pop
lock
arpl
stos
inc
inc
mov
mov
ret
nop
jp
ljmp
push
cltd
adc
push
jne
in
and
mov
or
fwait
sub
into
leave
orl
cmpl
mov
ja
outsb
in
jns
adc
repnz
mov
dec
cmp
push
lea
cld
lods
ret
xchg
test
inc
lods
pop
xor
ret
ss
movsl
push
kunpckbw
add
movsl
int
insb
cmp
sahf
push
or
cmp
dec
and
push
and
mov
pop
mov
pop
lods
ds
insb
lods
jp
repz
cmpsb
and
scas
inc
push
das
xchg
xor
repz
les
subb
repnz
ret
and
call
pop
fdivrs
push
inc
push
lods
push
mov
pop
mov
add
dec
mov
hlt
test
jb
dec
repnz
push
inc
out
out
imul
out
inc
dec
mov
jmp
xchg
ret
sub
out
push
test
or
push
push
ljmp
pop
xchg
mov
adcl
lock
and
lods
push
xchg
add
push
adc
pop
xor
cmp
inc
cmp
add
xchg
aaa
inc
into
fs
mov
inc
mov
push
or
fldt
cmc
mov
js
xchg
pop
push
and
shll
or
push
jae
cmpsb
dec
xor
xlat
inc
sahf
loop
sbb
xchg
jge
test
dec
xlat
inc
into
imul
mov
xchg
xlat
push
les
jle
mull
and
sbb
cs
cmpsl
adc
dec
aaa
push
lret
mov
es
js
and
sub
xor
jge
fnstcw
or
incl
fimull
aaa
popa
lock
int3
mov
pop
adc
inc
outsb
mov
js
dec
add
push
cmp
test
std
and
nop
fucomi
or
push
es
mov
xor
aad
push
jbe
xchg
out
pop
adc
xor
fs
shrb
lret
aad
insb
inc
out
cmp
out
ja
cwtl
push
adc
std
xor
andl
pop
add
jmp
jno
test
out
xor
mov
push
jmp
inc
in
mov
sarb
or
jbe
mov
jae
lods
cmp
sub
int3
lcall
mov
xor
mov
jg
mov
jno
fwait
push
out
cmp
or
ja
js
out
subb
jne
cmp
sub
dec
outsl
in
rcll
gs
aad
in
in
es
lahf
xchg
xor
jmp
sarl
mov
arpl
jmp
mov
dec
into
cld
sbb
addr16
test
fisttpl
xchg
mov
clc
outsl
int
jo
iret
lods
push
insl
fs
fcmovb
test
jb
and
adc
iret
lock
pop
dec
ja
movsl
adc
mov
fisttpll
dec
flds
mov
sti
inc
outsl
dec
xor
shr
inc
mov
sbb
mov
xchg
jg
mov
scas
repz
cmp
sahf
hlt
int
and
sahf
pop
jns
dec
gs
xor
scas
jnp
call
jo
adc
and
mov
xchg
lods
lret
pushf
dec
lcall
mov
cmp
bound
xlat
cltd
nopl
mov
cmpsl
adc
mov
dec
mov
mov
pusha
sub
enter
inc
lea
xor
adc
add
jns
ret
das
xor
insb
xor
stc
push
inc
sbb
sbb
cwtl
push
or
loope
inc
mov
add
push
xor
dec
loope
subb
xchg
push
adc
addb
mov
or
sub
lcall
cmp
cmpsb
fists
fmull
mov
clc
fldenv
icebp
in
jle
dec
es
sub
jecxz
xchg
xor
sbb
adc
loopne
xchg
outsl
in
in
sub
mov
cmp
push
ja
mov
outsl
push
and
and
flds
xor
mov
stos
outsl
stc
cld
pop
mov
push
lret
add
cmpsb
pop
lods
pop
nop
icebp
jg
cld
cmc
insb
notl
jmp
shl
fmulp
mov
test
fwait
and
fbstp
xor
ret
pusha
pop
add
sub
cmp
pop
fstpt
push
push
inc
popa
scas
inc
in
test
adc
inc
adc
xor
jno
jge
adc
adc
pop
lcall
or
inc
jge
mov
adc
aaa
or
addr16
fsubrl
lock
fsubs
sub
and
adc
daa
adc
fcoml
in
mov
cltd
sbb
push
stos
xchg
cli
in
dec
push
push
inc
push
inc
enter
mov
mov
aaa
fsubrs
loop
xchg
enter
popa
cmp
mov
fadds
stc
ja
xchg
in
add
imulb
jno
push
lods
subb
test
adc
push
push
cmp
dec
sbb
cld
aas
ret
arpl
andl
aas
mov
sahf
pop
scas
pusha
data16
mov
inc
mov
fmuls
pusha
out
mov
jbe
mov
push
adc
pop
lods
xor
scas
xchg
inc
mov
dec
stc
mov
test
xchg
test
scas
xchg
scas
cld
jge
mov
push
cwtl
ja
cld
push
push
arpl
pop
pop
xlat
pop
pop
scas
xchg
test
cld
inc
data16
cmp
in
cmp
test
icebp
push
cmp
sub
xchg
pop
mov
xchg
pop
inc
pop
xor
mov
adc
nop
cmp
xor
imul
jge
shl
push
ds
jl
repz
cli
cltd
fwait
mov
std
mov
add
lock
mov
stos
push
push
aaa
pop
mov
leave
pushw
inc
inc
mov
sti
jne
xor
and
fildl
lcall
sti
sub
out
jg
in
js
fwait
rcll
fidivrs
inc
xchg
in
paddq
lcall
popf
outsl
je
stos
sti
push
scas
push
xchg
pop
push
icebp
xor
sbb
and
cmc
out
pusha
pop
test
test
cmp
mov
mov
mov
xor
mov
adc
add
and
mov
shll
add
xchg
cmpb
lea
fildll
xchg
mov
push
push
movsl
and
rcl
jmp
into
add
mov
fdivr
out
in
add
mov
andl
jmp
and
es
icebp
or
enter
jae
shrb
or
testb
jnp
subb
pop
adc
pop
mov
fdivs
adc
add
push
dec
mov
mov
mov
sbb
mov
iret
js
jo
mov
push
mov
lret
stos
int3
cli
es
mov
pop
iret
jo
out
into
rorl
lcall
in
cld
cmp
adc
mov
repnz
mov
push
jp
addr16
out
or
bound
stos
ucomiss
out
mov
aas
and
out
scas
ret
fmuls
scas
and
jns
mov
pop
jne
cmpsl
inc
xor
add
lret
xor
shrl
pop
fstp
mov
push
gs
leave
xchg
mov
pop
mov
jo
mov
fcompl
mov
xor
jge
orl
ljmp
pushf
and
je
outsb
popa
test
out
lods
or
mov
and
fdivr
dec
imul
push
push
out
dec
jae
xchg
inc
outsb
push
push
jecxz
inc
test
xchg
jb
in
in
daa
xor
mov
adc
aad
fidivrs
mov
fistpl
jnp
sti
rol
jmp
ss
add
push
sub
in
pop
daa
mov
data16
dec
aas
test
push
mov
mov
adc
xchg
leave
pop
jle
ja
andl
nop
sbb
adc
or
xchg
lahf
push
stos
add
sub
mov
in
fstps
stos
in
sbb
adc
push
mov
je,pt
idivl
or
push
scas
in
fwait
aam
and
mov
and
clc
call
mov
or
cmp
push
imull
mov
into
xor
and
popa
mov
cltd
icebp
ret
sub
stos
fisubrs
mov
inc
mov
inc
mov
icebp
dec
popa
jbe
mov
or
pop
enter
xchg
cmpsb
clc
js
sub
pop
test
xor
int
aad
pushf
sahf
leave
pop
scas
pop
xchg
pop
into
ja
les
in
mov
stc
fsubrs
cmpsl
push
sbb
jmp
fdivr
les
es
sub
orl
iret
jne
mov
jl
sahf
out
mov
sti
inc
test
loop
test
ds
shll
out
pop
dec
lods
fucomi
xor
insl
out
dec
aad
fldt
add
push
mov
loope
sti
cmp
fadds
cwtl
or
mov
or
js
mov
lea
lods
out
je
lahf
xlat
sti
sbb
add
pop
jmp
jnp
int
lret
mov
leave
mov
imull
imul
jmp
cs
or
adc
sahf
stos
jecxz
enter
mov
jno
lods
or
mov
add
mov
lock
or
dec
int
dec
pushf
cmpsl
push
rcr
mov
mov
fdivs
test
adc
pop
or
daa
pop
into
push
mov
pusha
fsubrs
pop
xchg
mov
insl
cld
xchg
sbb
scas
fstpt
push
jb
and
push
cli
adc
push
ds
xor
xchg
push
mov
adc
movsb
hlt
gs
and
push
stos
jge
mov
jno
cwtl
popa
add
je
adc
popa
mov
pop
jl
pop
push
lahf
ret
inc
rcrl
shlb
adc
outsb
lcall
mov
int
push
pop
pusha
aas
mov
shl
lods
or
mov
xchg
mov
push
aas
cmp
sbb
lcall
into
xchg
sbb
or
imull
and
add
movsb
divl
mov
dec
jge
xchg
addr16
scas
into
mov
pushl
aad
adc
aad
or
sbb
iret
mov
in
enter
jno
iret
fisubs
cmp
cmc
mov
cli
pop
ss
bound
fcmovb
xchg
jg
pop
inc
cltd
jno
cmp
stc
xor
push
jns
enter
adc
inc
filds
mov
imul
xor
xor
jo
dec
scas
sbb
sub
mov
add
je
dec
push
jbe
adc
sub
dec
cmc
lcall
stos
add
pop
mov
lret
mov
cld
ljmp
lock
and
or
ljmp
xlat
roll
cmp
or
cmc
sti
sbb
jo
adc
and
fiadds
adc
and
aam
fnstenv
jne
cli
inc
dec
imul
mov
mov
fcos
rclb
jp
jg
outsl
xchg
jecxz
movsl
jns
add
lods
pop
mov
fs
test
mov
mov
pushf
mov
inc
jl
lret
test
aas
rcrl
lods
fsubl
lret
or
adc
add
cmp
push
iret
enter
lcall
repnz
sbb
xchg
aam
sub
sub
call
pop
or
mov
int3
test
fdivs
mov
or
xlat
xchg
push
sarl
sub
mov
nop
les
int
inc
rol
movhlps
mov
insb
cmp
xor
mov
lahf
test
jecxz
rcl
out
push
icebp
imul
ret
stos
push
sub
imul
in
sbb
sbb
sub
push
dec
mov
popf
inc
mov
icebp
inc
or
aas
addb
js
scas
jno
sub
and
push
mov
pushf
addl
pusha
popa
push
jg
jmp
jb
push
adc
aas
jnp
pop
push
pop
and
adc
mov
mov
fmull
jb
jmp
pop
es
or
mov
xchg
insb
mov
and
mov
cli
clc
mov
vsubps
dec
or
in
xchg
rcr
mov
adc
xchg
pop
or
mov
fwait
or
and
adc
repz
mov
scas
sarb
xchg
mov
pop
pop
jno
push
push
xlat
mov
insl
xchg
in
test
mov
popf
je
dec
dec
loopne
mov
in
lea
mov
cmpsl
adc
mov
cltd
add
jbe
cmp
fwait
jae
das
cmp
pop
dec
sub
xchg
cltd
js
filds
jnp
int3
cltd
cmp
movaps
inc
mov
add
jne
pop
mov
and
mov
inc
outsl
cwtl
into
lock
call
or
jecxz
mov
mov
lret
and
cmc
mov
add
mov
cld
std
stc
inc
inc
and
bound
push
je
stc
mov
inc
xlat
fidivl
popa
mov
negb
hlt
mov
sbb
inc
pop
int3
outsb
mov
xchg
xchg
test
cwtl
je
imul
pushf
aaa
inc
dec
mov
hlt
inc
mov
dec
pop
and
decl
dec
sub
cmp
inc
jmp
arpl
repnz
pop
pusha
sbb
ljmp
iret
add
sbb
out
lahf
fists
cld
sbb
mov
aad
sub
sub
aam
imul
push
inc
pop
add
xor
fbld
jmp
mov
stos
jecxz
mov
lret
and
bswap
jp
test
pop
psubq
or
xchg
mov
adc
dec
das
outsl
mov
push
imul
pushf
add
cmpsl
fistpll
ljmp
ret
arpl
lods
push
cmp
mov
jnp
stos
stos
mov
adc
aas
jecxz
mov
stos
jmp
repnz
dec
lds
mov
lahf
mov
or
push
add
jbe
das
jle
ljmp
nop
daa
pop
cmp
addr16
mov
adc
outsb
bound
je
mov
stos
jnp
mov
sti
sti
call
add
mov
imul
movsl
push
xchg
leave
pushf
xchg
pop
push
inc
test
in
aaa
lock
popf
mov
daa
orl
xlat
stc
shlb
push
xor
dec
aaa
jge
test
bound
lret
and
cli
fldl
mov
mov
fldcw
xlat
adc
loopne
daa
push
int
hlt
lret
shrb
loope
scas
cmp
xchg
bound
filds
xlat
pop
cmp
call
mov
sub
popf
mov
cmc
cwtl
push
adc
add
out
dec
inc
or
mov
inc
add
xor
fwait
xchg
push
dec
push
mov
push
sub
mov
jge
rol
adc
imul
testl
xlat
xchg
lds
push
rcr
lods
sbb
push
xchg
cmp
adc
xchg
add
or
xchg
mov
or
test
rcl
out
loope
mov
push
mov
sbb
ja
jbe
jg
hlt
rorl
fiaddl
xchg
pop
push
in
lret
adc
rorl
lcall
jl
movzwl
mov
push
xchg
add
jno
xor
jecxz
inc
dec
leave
scas
push
inc
icebp
mov
sub
mov
mov
fistps
sub
sarb
xlat
sub
mov
aas
mov
push
mov
daa
ja
test
test
jmp
adc
std
je
mov
mov
jns
push
adc
sub
loopne
fidivs
fldcw
jge
sub
out
sub
jg
xor
and
scas
adc
and
push
push
cmpsl
xor
inc
int
mulb
xor
ds
xor
stc
jp
enter
dec
cmpsl
sbb
pop
adc
sub
inc
jp
adc
filds
data16
insl
fiadds
mov
icebp
leave
sub
mov
cmp
jbe
push
add
pop
shrl
cmp
ja
cmpsl
imul
mov
mov
jnp
push
pop
adc
xor
pop
imul
sbb
lahf
mov
inc
les
ret
jne
cmovno
aad
cmp
pop
mov
mov
inc
mov
inc
out
loop
push
inc
movsb
jecxz
pop
cld
xchg
out
push
sub
gs
out
sahf
ja
add
fs
mov
call
and
inc
aas
stc
pop
icebp
loope
mov
in
leave
sub
push
rclb
xchg
ret
inc
cmp
ss
cmc
mov
loopne
dec
lock
pop
imul
test
mov
imul
shl
adc
sub
imul
xor
movsl
ss
dec
bound
inc
fdivs
xchg
outsl
es
aad
sbb
adc
iret
sbb
std
xor
mov
sub
icebp
mov
in
dec
xchg
dec
test
cmp
lcall
sub
mov
data16
jecxz
movsl
lcall
lods
mov
sbb
aad
sub
jg
sbb
pushl
dec
daa
loopne
mov
add
pop
out
es
push
xorl
out
test
jno
sub
jbe
push
popf
xchg
in
int3
test
into
clc
outsb
add
fcmovbe
lods
pop
enter
out
adc
pop
and
ficoml
imul
xchg
int
pop
dec
push
sbb
push
push
iret
fbld
inc
int3
xlat
mov
lret
jmp
arpl
mov
inc
outsl
and
mov
icebp
mov
xchg
testl
mov
cltd
mov
cwtl
mov
insb
test
ja
hlt
xor
inc
enter
lods
jbe
mov
push
push
adc
or
out
loope
xchg
add
mov
or
lret
iret
adc
pop
imul
fiadds
mov
call
ja
sbb
rcl
cli
in
repnz
aas
jge
pop
xchg
in
push
mov
js
movsb
and
outsl
mov
popa
shr
ds
jmp
or
jo,pn
ljmp
scas
or
cmp
aaa
fiaddl
hlt
jbe
dec
cmp
xchg
mov
sub
pop
pop
enter
adc
addb
addl
and
cs
dec
or
in
in
lcall
mov
fcoms
pushl
bound
and
xor
outsl
mov
inc
and
jno
add
inc
loopne
push
mov
fmuls
jmp
daa
fcomps
push
movsl
out
les
cld
hlt
sti
xor
jns
xchg
adc
xor
sbb
adc
inc
outsb
adc
mov
inc
dec
mov
les
hlt
rorl
out
mov
int
xchg
out
mov
push
dec
jp
mov
cmp
or
sbb
dec
fimull
bound
adc
add
rcrl
pushf
pop
xchg
dec
or
pop
sarb
mov
sbb
sbb
fisttpl
ja
ret
xchg
jne
gs
or
pop
or
xor
xlat
push
popf
fbstp
cmpsl
mov
shll
dec
cmp
gs
inc
mov
in
jnp
jns
pop
filds
ret
jb
or
sbb
pusha
mov
scas
jp
jp
jp
add
push
mov
maskmovq
sbb
lahf
addr16
mov
je
je
xor
xchg
jge
lds
jbe
jne
imul
xor
mov
xchg
sub
nop
adc
mov
sub
inc
es
out
lea
sbb
popa
mov
cmp
loopne
jl
out
pop
imul
jmp
jge
xchg
or
and
pop
cli
iret
icebp
mov
and
and
loop
sbb
jae
popf
push
xor
ret
adc
psllw
xchg
mov
sbb
sub
pop
pop
sub
push
sbb
es
add
mov
inc
cmc
outsb
fnstsw
sbb
jecxz
insb
adc
cmpl
data16
cld
pop
outsb
mov
test
repnz
mov
xchg
mov
ljmp
fcompl
mov
lret
adc
ss
fcmovnbe
cmp
jp,pt
add
xor
push
mov
ficoms
imul
sti
jg
call
bound
addl
orb
jno
or
es
xor
test
loope
xor
mov
xchg
push
fldl2e
mov
cs
mov
push
cwtl
ljmp
xor
mov
mov
inc
dec
xor
stos
gs
inc
ss
out
dec
mov
incl
sub
stos
fdivs
and
shll
in
shlb
decb
jmp
mov
add
pushf
or
mov
jmp
lret
lods
dec
sbb
rep
and
das
inc
add
icebp
pop
cmp
sub
fwait
sbb
dec
and
push
dec
ret
jbe
xchg
or
dec
pop
rcr
mov
pop
jbe
scas
mov
lahf
cli
es
push
and
mov
sbbl
or
jnp
scas
in
mov
ss
repz
dec
sbb
leave
js
in
push
mov
imul
mov
jne
lock
inc
inc
jbe
xchg
mov
imul
sub
xor
cmp
jl
jns
outsl
sbb
ret
dec
arpl
push
xlat
lods
in
or
clc
in
sti
jno
daa
sarl
jno
inc
enter
dec
ljmp
mov
jle
push
addr16
mov
xchg
out
lds
or
das
gs
call
lea
push
iret
call
add
out
inc
inc
rcrl
and
orl
jb
pop
data16
cmp
mov
add
gs
ret
in
leave
mov
addr16
or
and
je
bound
stos
lret
lahf
cmc
and
in
sbb
sbb
sbbb
pop
fldl
stos
adc
loope
push
fisubrs
or
cmp
add
mov
std
movsb
add
inc
push
inc
jae
mov
sarb
divb
fistl
or
mov
into
mov
jg
inc
sub
push
fs
or
nop
shlb
adcl
test
nop
add
push
mov
sbb
gs
lea
inc
adc
dec
adc
cmpsl
push
aas
pushl
stos
insb
or
push
push
push
aas
call
mov
cs
push
leave
out
xchg
mov
inc
cmpsb
fcomps
mov
jl
mov
mov
scas
adc
cmp
xchg
inc
push
inc
aam
fisubrs
nop
mov
xchg
dec
xchg
bound
cwtl
lahf
roll
roll
sbb
fldt
test
xchg
dec
xchg
and
inc
mov
test
inc
inc
cmp
dec
mov
int3
and
jmp
inc
jmp
insl
es
hlt
inc
fcoml
lahf
adc
sub
ret
int3
jecxz
es
mov
dec
xchg
cmp
lcall
fsubr
pushl
aam
sbb
pop
lds
cli
mov
cs
sbb
addr16
repnz
lock
xchg
aad
push
pop
mov
ret
incb
jnp
xchg
repnz
repnz
add
hlt
cltd
sbb
sub
rorl
pop
push
cmc
fstpt
ds
and
push
lret
and
insl
fstps
or
sar
jle
pop
mov
push
pushf
rcll
repnz
pop
jecxz
cmp
shlb
loopne
inc
sbb
cli
push
mov
clc
mov
push
leave
les
add
mov
stc
pop
inc
scas
fwait
or
imul
movsb
pop
nop
mov
pusha
mov
bound
pop
mov
inc
pop
lcall
push
sub
sub
ret
adc
cs
stos
lahf
pusha
cmp
hlt
adc
xchg
dec
scas
inc
mov
pop
nop
mov
cmp
setnp
dec
push
jg
adc
adc
popf
movsb
ds
sahf
xor
lds
dec
and
cli
and
mov
out
ljmp
jecxz
imul
cmc
insl
popf
in
out
cmp
jge
or
out
in
or
xor
into
not
gs
sbb
jp
jge
rcrl
mov
sub
adc
or
or
ja
out
iret
maxps
pop
adc
xchg
add
jmp
jns
sbb
mov
subb
push
jb
out
lea
pop
jnp
dec
push
fidivrl
repz
cs
jae
ret
orb
scas
jg
mov
xor
sbb
iret
cmp
or
aas
mov
daa
and
sbb
aam
inc
mov
push
scas
xchg
or
adc
dec
loope
fcoml
ret
hlt
pop
call
sub
dec
faddl
pop
mov
out
or
jno
push
push
mov
xor
je
adc
cs
pop
into
mov
xchg
and
repnz
sbbb
mov
push
pop
mov
hlt
dec
lock
icebp
inc
sbb
lcall
movsb
push
xor
pusha
inc
xchg
push
addr16
mov
or
pop
iret
aas
push
xchg
mov
or
add
in
dec
scas
adc
ffreep
inc
hlt
pop
sbb
out
pop
dec
push
sbb
sbb
adc
mov
mov
aas
dec
lahf
ficoml
rclb
loopne
ja
arpl
add
ret
mov
xor
into
aad
stc
fwait
inc
ljmp
lock
pop
hlt
push
and
sarb
fistpll
mov
inc
push
mov
adc
lock
js
xchg
xchg
aad
stc
jbe
mov
and
fisubl
shll
out
add
and
xlat
xor
mov
inc
xor
mov
jo
scas
mov
insb
mov
popf
or
jb
mov
cmp
and
pop
dec
sahf
pop
lret
jb
push
outsb
add
testl
xchg
dec
enter
stos
adc
jmp
hlt
xor
jno
mov
sbb
mov
sub
sub
dec
jno
scas
daa
adc
outsl
jno
pop
sub
out
test
pop
sub
clc
xor
int
test
cmp
hlt
mov
jl
sub
repnz
add
xchg
and
mov
pop
sahf
mov
xchg
adc
shll
xor
call
std
ret
enter
lods
sub
xor
adc
lods
mov
mov
mov
mov
shlb
cmp
sub
idivl
imul
xor
pushf
mov
imul
and
and
sbb
push
jbe
bound
mov
dec
orb
sbb
xor
adc
xor
sub
sbb
mov
jmp
cmc
push
cmc
mov
xor
arpl
sarb
aam
add
and
mov
pop
loope
or
mov
pop
ret
and
push
repz
iret
imul
and
xchg
push
lcall
and
dec
ss
xchg
mov
push
push
jae
adc
adc
jp
pop
cmp
inc
les
stc
pop
stos
inc
or
sub
pop
mov
or
cli
fistps
orb
push
out
sub
lock
mov
out
jno
ljmp
stos
outsl
lahf
xor
pop
lahf
sub
fisubrs
inc
xor
lea
pop
jl
xchg
inc
cmc
cs
out
in
pop
add
sysenter
jnp
lods
divps
test
dec
cmpb
cmp
inc
in
dec
add
and
pop
lock
and
xorl
or
xchg
dec
and
inc
sbbl
add
insl
mov
dec
jo
jecxz
inc
pop
push
cs
lods
popf
xor
inc
out
adc
jmp
std
cmpsl
enter
lret
stos
cld
add
dec
adc
cmpsb
out
addr16
xchg
jmp
dec
sbb
iret
arpl
jbe
icebp
jb
cmpsb
adc
mov
jecxz
mov
call
data16
fwait
cmp
out
das
das
scas
mov
adc
test
mov
pop
sarb
adc
sub
sub
inc
cmpsl
shlb
test
out
repz
push
into
cmp
cmp
std
divl
dec
cmp
sbb
adc
je
mov
adcb
jl
pop
cmpsl
xor
adc
cld
dec
mov
sub
inc
cs
in
xlat
push
or
or
stos
ljmp
imul
fcmovnb
and
scas
inc
jns
mov
mov
cmp
lret
inc
les
add
repnz
jg
and
inc
xchg
pushf
stos
xchg
mov
adc
xchg
aaa
scas
test
and
xor
inc
or
xor
push
cmp
pop
hlt
push
push
xor
pop
or
mov
fistpll
lock
pop
pushf
addr16
stc
mov
jecxz
inc
cmc
xor
jno
jp
stc
mov
mov
add
add
aas
rcl
int
xchg
mov
std
cwtl
sbb
push
nop
mov
jns
ss
mov
test
loopne
mov
or
sbb
push
cmp
fstp
lret
imul
cli
ret
lds
push
decl
sub
cmc
iret
sbb
cmpsl
pop
dec
mov
jge
sbb
mov
sarb
pop
pop
mov
std
pop
pop
aam
into
les
iret
ss
js
dec
mov
insl
sbbb
inc
imul
add
jae
xchg
sbb
or
imull
mov
adc
aad
push
xor
dec
xor
stos
xor
sub
aam
adc
dec
adc
xor
push
int3
inc
inc
inc
mov
mov
insb
aad
jmp
mov
dec
mov
add
ja
adc
mov
and
push
jecxz
pop
rorb
mov
add
inc
in
sti
pop
dec
testl
or
push
cmp
roll
and
sahf
cmpsl
pop
mov
lcall
dec
xchg
arpl
xor
push
testb
imul
xor
mov
in
loop
daa
imull
int
adc
popf
mov
fisubs
ss
jbe
lea
mov
sti
fimuls
gs
inc
add
fs
sbbl
icebp
sbb
mov
xlat
jne
pop
scas
frstor
out
in
shr
add
push
sahf
xor
loopne
jns
mov
and
adc
enter
push
clc
mov
pop
je
outsb
lea
clc
lds
push
xchg
jge
or
pop
mov
push
clc
add
imul
cmp
cmp
pop
ljmp
xor
mov
and
arpl
mov
sbb
pop
scas
data16
iret
scas
jns
mov
cmpsb
movsb
out
pop
jbe
lea
rorb
addr16
stc
jle
pop
pop
mov
mov
inc
aaa
scas
mov
adc
dec
push
jge
addr16
cli
ljmp
popf
das
les
rcll
cld
call
cmp
xor
lock
pop
insl
std
sub
mov
fists
and
add
pop
sahf
lds
cs
sbb
fnstsw
sbb
test
xlat
push
fimull
sti
cmp
mov
push
mov
mov
lds
mov
scas
jle
fucomi
test
loope
addr16
or
mov
filds
jp
loop
jl
adc
inc
lods
mov
mov
push
out
push
shlb
aad
daa
adc
and
dec
rclb
popf
xor
fst
adc
mulb
mov
ret
pop
pop
mov
aaa
scas
pmaxub
push
mov
icebp
scas
dec
mov
push
dec
ds
pop
ljmp
mov
sbb
fcoms
dec
popa
mov
add
or
cmp
lods
pop
inc
aaa
stos
or
rcrl
mov
jle,pt
fcomip
push
stc
fnstsw
push
pop
lea
fildl
cwtl
cli
pop
test
jge
push
pop
pop
jle
or
adc
ja
popa
cltd
das
loope
gs
addr16
dec
xlat
xor
push
mov
cltd
aam
push
dec
jecxz
test
push
mov
add
pop
push
pop
pop
ja
xchg
dec
push
push
xchg
push
dec
stc
lret
andl
jg
data16
cwtl
push
or
ret
cmpb
mov
decb
dec
or
stc
call
dec
js
mov
rcl
or
xor
rolb
mov
cmp
ret
mov
sarb
xchg
push
cmp
imulb
xchg
sbb
push
in
cmp
xchg
repz
or
or
sub
pop
jae
pop
mov
xor
cld
add
pop
pop
sbb
pop
call
stos
xor
idivb
or
xor
sarb
mov
daa
cld
and
rcrl
ret
jb
or
movsb
adc
out
out
enter
ja
mov
repz
xchg
cmp
push
pop
rcl
cmp
cltd
aaa
cmp
sub
push
mov
sbb
sub
mov
add
test
pop
repz
add
and
xchg
lea
test
cmp
add
push
jecxz
mov
mov
xor
out
mov
adc
movsb
loop
push
or
mov
shr
lret
leave
ret
sbb
aad
stc
jnp
out
mov
pushw
testl
out
test
adc
jp
shl
sti
inc
out
xchg
push
pushf
cmc
fistpl
rcr
in
je,pn
std
out
inc
ljmp
push
enter
aaa
iret
pop
pop
roll
pop
pop
add
sub
add
xor
mov
and
mov
out
insl
and
out
pop
sbb
in
pop
pop
aas
mov
cld
addb
mov
push
ss
jmp
fidivrl
cmpsl
lret
dec
cmpsl
pxor
cld
add
push
xlat
pushf
cmp
mov
sbb
mov
mov
addr16
repnz
mov
push
push
xchg
mov
pop
xor
add
mov
or
mov
inc
fidivrs
and
aas
aam
or
jbe
repz
inc
gs
cmpb
sub
cmp
je
ret
cwtl
push
sti
lds
dec
call
jmp
mov
scas
push
bound
inc
xchg
mov
fdivrs
aaa
lock
jb
jmp
lcall
pop
notb
jns
add
aaa
jo
push
data16
jmp
push
outsl
dec
adcl
popf
shrb
int
pop
pop
lods
pop
add
outsb
into
hlt
mov
push
lods
dec
sub
test
or
push
jo
sbb
mov
add
mov
sub
lods
lcall
or
out
jge
xchg
fcomip
jnp
sub
fcom
xor
adc
mov
leave
rcrb
dec
nop
clc
inc
call
scas
test
mov
pcmpeqw
inc
jb
jmp
fcompl
lods
and
hlt
iret
test
inc
into
inc
rcrl
push
xchg
dec
stos
les
cs
cmp
adc
shll
sub
movsl
jo
and
xchg
in
xchg
int3
fldenv
cmc
pop
stos
cmp
jae
cmpsl
sub
and
inc
test
pop
fldt
xchg
dec
inc
bound
aas
pop
pop
mov
ds
dec
cltd
push
les
sub
pop
mov
rolb
sub
daa
lods
adc
xor
or
ja
loope
mov
add
sahf
inc
jns
xchg
pop
or
stos
dec
xlat
push
lahf
cmc
adc
lea
fisttps
in
and
shufps
inc
mov
xor
or
dec
lcall
shrl
fstl
nop
xchg
cmp
lods
xor
pop
cwtl
cmp
push
mov
mov
mov
pushf
sub
cltd
fcompl
repz
insb
mov
or
mov
rcr
das
inc
fwait
xor
cwtl
adc
adc
mov
or
and
adc
lret
add
cmpsb
popf
ret
add
mov
lret
fmulp
cli
and
xor
mov
push
add
xor
dec
mov
pop
aad
xchg
dec
jno
ljmpw
imul
jns
add
out
xchg
xchg
mov
arpl
xor
push
pop
jmp
inc
insb
fistl
cli
scas
out
jo
rcrb
cmpsl
mov
loop
lea
dec
inc
enter
jmp
repz
add
dec
enter
pop
je
mov
nop
push
arpl
jnp
dec
aam
fmuls
cvtps2pd
jge
loope
sbb
pop
imul
jle
ljmp
xor
cs
dec
negl
out
jns
stos
in
pop
call
mov
aaa
lea
xor
daa
or
push
mov
in
sarl
fs
mov
movsl
adc
and
or
add
push
xchg
mov
adc
sub
mov
imul
rorl
xchg
insb
sub
mov
popf
ficompl
push
mov
add
sar
pop
jno
jns
cmovge
pop
repnz
stos
mov
add
jg
mov
inc
movsl
addr16
jmp
movl
xchg
into
mov
add
fidivrs
jmp
rclb
outsb
push
mov
ljmp
pop
int
mov
mulb
mov
pushw
aas
in
mov
fnstsw
insb
popa
imul
lea
jle
sub
add
pusha
pop
fld
pop
pop
jg
lret
xchg
cli
das
popf
add
mov
loope
cs
cmp
push
imul
lds
jge
out
lcall
fnstenv
or
dec
pop
sub
roll
dec
cmp
ja
outsl
iret
test
jns
or
lock
in
jnp
cwtl
inc
mov
pop
mov
lcall
or
xor
dec
cmp
xchg
mov
pop
bound
or
cmp
aam
fsubl
cmp
ficompl
mov
push
aas
test
jne
cmp
adc
pop
fucomip
jmp
jl
pop
pop
out
jbe
inc
xchg
xorl
into
mov
and
decl
rcl
lods
popa
int3
cli
into
lds
imul
or
cli
or
sub
ljmp
fcoml
in
in
lock
push
lods
std
mov
or
inc
es
mov
and
das
push
and
in
pop
jno
ficompl
scas
sbb
mov
inc
push
mov
sbb
lret
in
dec
xor
add
or
mov
cmp
push
popl
mov
adc
and
jge
mov
lods
int
jbe
mov
xchg
and
mov
mov
scas
stos
iret
cltd
inc
pop
fucomip
daa
jmp
sbb
cs
lds
stos
leave
pop
cld
lods
daa
mov
sub
sub
sarb
aaa
in
xor
jg
cli
or
mov
lret
pop
daa
jbe
xlat
outsl
cltd
pop
dec
shlb
sub
stos
repz
mov
pop
loop
pop
mov
test
dec
push
mov
mov
push
xor
sub
pop
fmul
rorl
cmp
nop
rcll
or
dec
xchg
adc
stc
idivb
ds
mov
mov
inc
aad
mov
jno
adc
cmp
xor
push
or
add
test
out
sub
shl
sbb
jno
cmovno
jns
lahf
and
outsb
sbb
jne
hlt
or
sub
jge
mov
push
push
pop
std
jnp
jb
aas
fucom
das
jo
adc
in
idivl
xchg
add
ds
adc
pop
pop
jnp
adc
sbb
dec
lret
imul
fcomps
mov
fst
sub
gs
pushf
add
test
push
fucomi
push
outsl
inc
xchg
mov
jb
mov
incb
jo
mov
and
in
gs
mov
mov
std
inc
and
jno
xchg
inc
xor
lret
shrb
inc
dec
mov
or
iret
xchg
xor
into
or
std
nop
adc
insb
adc
pop
push
inc
jle
xor
sti
cmp
in
enter
insb
outsl
daa
into
xor
cltd
test
push
cmp
push
fyl2xp1
ret
mov
xchg
sub
mov
and
mov
or
mov
mov
cmp
mov
repz
scas
cmp
add
xorb
popw
loopne
movsb
xor
mov
ffreep
fstpl
sbbl
xchg
or
lea
test
pop
ljmp
mov
in
std
mov
and
mov
aad
in
push
lock
pop
cwtl
in
push
addr16
mov
inc
shlb
std
data16
std
pop
in
stos
lods
add
pop
sbb
add
lods
call
push
jbe
add
lcall
lods
pusha
jg
xor
sub
mov
or
fucomip
add
scas
mov
lods
int
or
aas
push
sub
out
in
mov
xor
inc
outsb
sbb
in
in
and
pusha
and
dec
popf
xchg
adc
js
adcb
test
add
bound
mov
ret
ljmp
dec
mov
aad
movsl
xchg
adc
imul
lcall
mov
push
cmpsb
xor
dec
mov
pushf
cli
call
xchg
lcall
adc
rcl
sub
dec
cltd
test
int3
mov
das
rcrl
adc
add
icebp
in
adc
movsb
xor
inc
enter
mov
in
push
push
mov
sub
jmp
dec
rcrb
lret
cltd
pop
sti
mov
pop
xchg
xchg
cmp
test
or
lahf
sbb
add
add
in
add
in
xchg
cmpsb
fcomps
adc
sahf
out
pop
std
jle
xchg
frstor
sub
mov
dec
and
js
pop
sub
sbb
sbb
clc
icebp
or
out
push
ficoml
in
lret
cmp
lcall
bound
repz
lock
stos
sarb
lods
das
push
je
lret
push
xchg
inc
sub
divb
dec
mov
int3
inc
pushl
fsubrl
adc
add
jmp
mov
jne
dec
xchg
xchg
lods
mov
stos
mov
mov
xchg
fisttpl
stos
outsb
ret
sti
pop
clc
cmp
out
sahf
inc
shrl
rclb
mov
sbb
cmp
std
cmp
out
pop
sbb
roll
push
gs
xor
xchg
adc
jg
xchg
pslld
cwtl
pop
mov
push
sub
lock
jge
outsb
cmp
inc
add
dec
cmc
loop
sarl
push
fadd
jno
cmovne
inc
fildll
push
cmp
pop
inc
pop
shll
leave
int
fcmovnb
dec
test
push
pop
inc
cmpsb
xchg
das
mov
and
or
addr16
add
xor
out
mov
std
insl
xor
stos
cmp
xchg
xor
dec
ret
dec
insl
movsb
outsb
dec
fstpt
dec
shrb
fcmove
in
or
sub
fisttpll
mov
xor
xchg
cmp
pop
iret
push
int
mov
mov
fisttpl
xor
std
xchg
in
je
dec
scas
call
addr16
psrlw
sub
mov
stos
adc
mov
loope
inc
rolb
cmc
loop
inc
scas
dec
push
dec
mov
out
xchg
aad
mov
jmp
mov
sub
mov
sar
insl
add
push
ljmp
mov
jmp
dec
pop
cmpsl
inc
mov
insb
mov
orb
ss
leave
xor
and
jnp
jg
jnp
mov
push
ss
mov
dec
xchg
mov
lahf
cs
lcall
out
mov
xchg
mov
push
add
add
xor
nop
jle
fildl
test
mov
clc
sbb
out
je
std
mov
push
xchg
dec
pop
xchg
enter
lahf
push
cmp
sbb
jmp
repnz
xchg
add
loope
add
mov
push
gs
rol
xlat
in
sub
ss
in
movsb
arpl
mov
psubsw
xchg
and
js
adc
adc
add
mov
pop
stos
xor
mov
mov
pop
lret
pop
ficoml
and
and
dec
jp
push
into
ret
jno
int3
pop
pop
add
loope
stc
scas
inc
sbb
inc
fldenv
xor
test
mov
xor
bound
hlt
adcb
test
pop
push
test
sbb
jl
jge
push
arpl
adc
dec
icebp
cmp
lea
jbe
lahf
mov
int3
mov
mov
pop
jo
jne
mov
dec
cmpsl
movq
mov
das
mov
xor
sbb
pop
xor
leave
jg
jecxz
ret
seta
cli
mov
jne
mov
out
xor
imul
jl
insb
adc
insl
daa
ds
and
dec
in
or
mov
push
sbb
scas
fidivrl
fyl2xp1
xchg
inc
xchg
xor
push
pop
out
push
call
sub
mov
push
sub
and
add
hlt
rorb
insb
leave
cltd
les
mov
sbb
test
add
or
repz
sub
iret
jle
dec
push
push
ficoml
and
outsb
sbb
aaa
jmp
pop
test
dec
das
addr16
into
imul
cmp
xchg
scas
pop
pop
mov
xchg
ss
jmp
movsb
jp
dec
outsb
mov
fnstsw
inc
les
pop
dec
xor
out
xor
pushf
sub
fcmovbe
in
jbe
cmpsb
in
add
pop
and
sahf
sahf
inc
or
mov
adc
xchg
int
mov
aad
jle
cltd
push
jecxz
xchg
xchg
xchg
fmul
mov
dec
rcll
in
xor
aaa
movsl
daa
mov
test
das
and
inc
jo
lds
pop
xor
loop
push
jno
inc
mov
fs
jg
pop
lock
out
cmp
in
pop
add
aaa
ss
aas
adc
fnstcw
and
adc
dec
insl
mov
push
in
push
fcompl
ret
inc
fwait
jg
xchg
push
xchg
sub
sub
cld
or
jmp
pop
xlat
cmp
les
stos
lahf
xchg
ljmp
mov
xchg
mov
jmp
loope
xchg
scas
and
xorb
jle
pusha
inc
cs
sub
add
jle
pushf
hlt
push
movsb
dec
shlb
fmull
xor
je
andb
test
imull
pop
mov
addr16
rorl
int3
repz
or
pop
daa
aaa
shll
mov
pushf
xor
outsb
or
cwtl
cmp
divb
push
loop
sbb
mov
cltd
stc
xor
mov
xor
daa
les
rcl
ss
sbb
in
or
adc
xor
pop
call
xor
mov
movsb
cmp
inc
and
pop
dec
push
inc
xchg
jns
in
and
aad
lds
push
and
jbe
clc
push
cmp
add
lods
add
xor
mov
out
loopne
cmpl
or
push
adcb
pop
enter
jbe
ficompl
sub
popf
je
mov
lcall
push
push
push
xchg
scas
daa
jns
ljmp
stos
sub
cmpsl
les
es
ret
out
xor
push
aas
lods
jne
outsl
rolb
cmp
gs
imul
lds
inc
add
int
cmpsl
fistl
cwtl
xor
in
test
jl
push
adc
sub
call
xor
pop
insb
inc
push
sbb
pop
xor
push
mov
xor
or
xor
inc
mov
cmp
in
insl
adc
ljmp
jne
sbbb
and
jle
xor
aas
in
clc
jae
or
xchg
and
fcomps
sub
mov
cmp
add
je
or
mov
lcall
rorb
add
adc
mov
or
aad
rorb
pushf
push
aas
pop
xchg
mov
jno
push
mov
iret
iret
cli
xor
jmp
sub
movsb
adcl
dec
std
ret
es
test
call
or
pop
mov
jmp
popf
mov
and
test
and
adc
ljmp
pop
out
push
aaa
xchg
mov
dec
push
xchg
js
mov
lods
sbb
pop
xor
mov
sti
popa
lcall
jge
push
cmp
gs
mov
addl
xor
das
aad
push
fsubrs
mov
lock
inc
jo
or
test
movlps
in
or
jmp
test
pop
mov
dec
and
push
push
pop
cmpsb
mov
rol
in
imul
add
mov
dec
test
addb
movb
mov
xorl
ja
jp
popf
lea
data16
subl
and
test
mov
or
xchg
xor
das
and
mov
mov
xchg
clc
pop
jb
inc
cmp
xchg
cs
jp
fs
rol
lds
dec
mov
adc
mov
popf
or
mov
fxam
dec
in
pop
loopne
scas
push
ja
sbb
mov
pop
mov
lret
sub
jnp
jmp
aaa
push
hlt
mov
orb
insb
jbe
and
das
add
pusha
lea
out
jecxz
mov
xor
mov
lret
and
cmpsl
test
cmp
pop
push
inc
pusha
or
cmp
adc
xor
xchg
jo
hlt
inc
repnz
mov
and
push
fwait
pop
jae
fiaddl
xchg
sub
inc
lret
inc
lods
rcr
push
and
jmp
push
push
and
pop
fs
xchg
push
or
mov
push
out
pop
adc
sbb
fsubr
pop
inc
pop
test
popa
aaa
pusha
mov
insb
adc
add
bound
fs
sub
repz
dec
sbb
pop
jnp
cmp
fdivrs
sbb
xor
xchg
lods
mov
loope
or
cli
xchg
push
cwtl
cs
leave
out
sub
stos
add
outsb
loopne
stos
push
jg
push
xor
inc
or
mov
cli
mov
outsl
push
in
in
out
inc
jo
xchg
or
rcr
cmpsb
ror
jnp
rclb
mov
xor
pop
out
cmp
or
jbe
sbb
das
xor
test
inc
stos
mov
xchg
xchg
inc
push
sub
in
or
stos
insb
scas
xchg
test
push
mov
fidivrs
fwait
add
jmp
adc
push
outsl
jne
inc
es
dec
add
mov
outsl
mov
sub
mov
xchg
movsl
ljmp
dec
add
movsb
add
js
pop
lods
sbb
stos
addr16
test
pop
push
leave
xor
rcl
sbb
int3
push
push
sbb
cmp
loop
pop
je
dec
lahf
cmp
outsb
xor
adc
movhlps
sub
fidivrl
scas
int3
cmp
mov
xchg
push
insb
cmp
sbb
mov
cs
fadds
or
cmp
sub
pop
jge
insl
pop
xorl
inc
xor
mov
jg
test
xor
out
xchg
or
fs
and
iret
bnd
repnz
loopne
scas
adc
mov
and
gs
outsl
js
stos
or
or
out
or
fcomp
xchg
or
stc
cmpsb
xchg
mov
xchg
add
mov
and
push
jb
pusha
or
xlat
and
jl
or
mov
les
fmul
mov
cmp
dec
jae
fcompl
lret
push
push
loope
jg
loopne
ret
inc
arpl
mov
insb
mov
push
test
and
add
jae
in
xor
or
int
ss
addr16
jns
push
imul
xchg
std
rcl
ja
mov
out
hlt
xchg
fwait
loope
push
pop
or
push
xor
mov
jne
clc
adc
stos
pop
mov
add
fisubl
sbb
jge
mov
loope
inc
loope
jge
mov
addb
pop
lret
xlat
popa
sarb
adc
shl
loope
push
into
adc
aaa
pop
mov
xchg
loopne
ds
pushf
cld
hlt
in
gs
jbe
nop
loop
aas
push
sbb
popf
adc
add
mov
jae
sahf
jne
shll
xchg
out
add
dec
inc
call
movsb
jae
sti
insl
mov
add
jge
pop
addr16
hlt
mov
xchg
sbb
lcall
lods
pop
outsb
jl
jg
in
adc
ret
shrb
jle
sbb
les
jmp
xchg
ret
pop
das
mov
ret
out
insl
push
daa
dec
cmp
rolb
pop
mov
aad
fiadds
lahf
clc
jp
xchg
xchg
push
scas
or
fisttps
cwtl
aam
aaa
cmp
shlb
inc
mov
mov
and
inc
pusha
es
lock
mov
pop
push
pop
out
cmp
add
mov
into
in
arpl
push
hlt
mov
dec
sbb
dec
outsl
jge
call
jno
shll
out
jbe
push
xchg
out
or
add
jb
aaa
fdivrs
nop
pop
or
clc
dec
inc
pop
inc
mov
xchg
push
ja
int3
lahf
outsb
loop
sbb
push
js
imul
jmp
or
and
jge
xchg
add
mov
scas
roll
xchg
sbbl
fcompl
pop
lea
push
mov
fists
pusha
loopne
in
sbb
add
sub
sbb
js
jl
mov
sub
scas
in
movsb
mov
daa
jg
je
popf
ljmp
gs
loope
and
push
sub
cltd
ror
xchg
jno
dec
lods
xchg
aas
sub
or
roll
movsb
push
inc
shrd
xor
lret
rcr
cli
mov
enter
mov
xorl
rclb
mov
pop
imul
adc
inc
push
adc
fisubl
loopne
adc
pop
mov
add
mov
mov
aad
faddp
xchg
jb
insb
cmp
dec
and
test
add
xor
int
outsl
sbb
mov
in
or
mov
scas
insl
dec
out
mov
push
ret
dec
cwtl
and
pop
fsubs
mov
in
push
adc
pushf
sahf
xor
aaa
push
ljmp
adc
mov
outsb
fstpl
ja
in
scas
sub
push
xlat
into
add
xorl
fbstp
stc
dec
lock
in
mov
jmp
insl
sbb
mov
in
shll
aam
push
fnstsw
sbb
sbb
or
dec
in
sub
jo
xor
fiadds
repz
or
jge
xchg
outsb
aaa
lret
xchg
je
jne
xchg
idivb
cmp
stc
cmp
jo
out
xchg
xchg
mov
xchg
call
sbb
sti
ret
fmull
mov
dec
and
sbb
lods
fiaddl
jle
jbe
mov
jno
pop
movsb
fstps
sbb
sub
iret
jno
cs
loope
xor
cmp
mov
adc
fldt
pop
and
out
add
arpl
sti
xor
push
dec
hlt
aaa
add
imul
add
mov
fsubrl
sub
addr16
je
sbb
and
xchg
pop
jge
dec
data16
mov
xor
les
in
jle
push
mov
mov
loop
dec
pop
in
mov
imul
lret
cmpb
cmc
into
jns
pop
jb
mov
fimull
arpl
fwait
leave
or
incb
icebp
shlb
hlt
out
mov
jg
scas
and
fbstp
add
push
bound
aad
push
cmp
cmp
jp
rcl
or
ret
mov
mov
outsb
roll
xchg
test
icebp
gs
in
sub
icebp
insl
or
adc
push
nop
mov
mov
and
dec
shll
loope
jmp
cmpsl
repnz
or
bound
cs
fdivr
popf
pusha
sbb
in
inc
dec
lods
mov
test
cwtl
out
jecxz
movl
cmp
pop
in
mov
imul
notb
sub
sub
push
out
stos
insl
jle
int
xchg
inc
add
push
cld
lock
mov
sbb
ljmp
cmc
xchg
and
adc
ljmp
test
dec
or
mov
imul
push
negb
enter
sbb
jecxz
aaa
mov
xor
in
push
test
clc
lret
lds
aas
test
sub
pop
gs
push
pop
pop
add
or
pop
cwtl
dec
or
mov
aas
cmc
sub
out
aad
mov
loop
cld
mov
add
push
enter
pop
and
and
mov
lahf
cmp
pminub
add
inc
fucomip
pop
in
adcl
nop
mov
inc
fs
shll
jbe
sbb
push
xchg
adc
imul
ds
or
sub
mov
scas
ja
pop
sub
mov
jb
add
add
push
jae
mov
inc
mov
xchg
lea
dec
out
and
movsl
das
scas
inc
mov
addr16
sti
popf
es
push
cmp
scas
inc
pusha
mov
push
aam
mov
fisttpl
mov
inc
inc
fistpl
shlb
test
mov
icebp
pushf
or
daa
lods
cmp
pop
cltd
jae
lock
push
cld
mov
mov
pop
in
jb
push
adc
xchg
pop
cmp
les
shrb
inc
mov
pop
mov
cmpsb
dec
bound
out
xchg
sti
push
ret
cmp
mov
push
mov
movsb
inc
mov
xor
test
push
lods
pop
lods
ret
popa
cmp
mov
cltd
sbb
jge
mov
mov
dec
cltd
das
xchg
xorb
cmpsl
cmp
dec
fdivrs
popa
mov
lea
xor
pop
adc
ret
fldl
testb
jecxz
xchg
iret
xor
clc
push
sub
test
movsb
mov
dec
sub
in
arpl
jecxz
pop
cmp
andl
cmp
and
scas
lds
addr16
jmpw
lret
lods
out
or
aad
dec
aad
mov
or
xchg
jns
mov
xchg
push
pop
and
xor
js
jge
adc
ret
cltd
out
mov
push
or
sahf
jle
push
and
nop
popf
mov
add
aad
mov
les
repz
shrl
cli
imul
add
pop
or
pandn
lock
inc
push
lret
xor
cwtl
cld
imul
add
mov
fs
push
sbb
inc
jb
std
imul
shll
push
dec
add
mov
jecxz
or
cwtl
xchg
and
push
jae
add
shlb
lret
jne
stos
fldcw
xchg
adc
mov
mov
xchg
bound
aaa
xchg
orl
fcmovnb
ret
dec
jecxz
cwtl
and
cmpb
std
aaa
mov
jmp
or
call
mov
insl
adc
stos
or
rcll
aad
dec
sbb
sub
inc
cmp
xchg
rol
inc
out
in
sub
test
mov
popa
pop
mov
inc
test
adc
in
mov
dec
inc
jecxz
push
and
or
rclb
mov
cmp
mov
mov
mov
xchg
push
adc
ds
lret
shlb
xor
mov
jo
pushf
cltd
dec
int3
inc
cli
pop
jbe
pop
xchg
es
push
orb
adc
ljmp
mov
jns
sbb
xorl
sarl
hlt
aad
xor
repz
mov
loop
adc
jb
sub
jmp
cmp
fdiv
outsl
cmp
arpl
test
inc
sub
rcl
cmc
lods
mov
dec
clc
scas
jo
fninit
xor
xchg
fisubs
or
xor
inc
orb
mov
in
aas
sti
imull
mov
sub
xor
incb
outsb
out
cmp
scas
stc
repz
pop
adc
ljmp
mov
and
out
and
stc
inc
or
cltd
rcl
xor
mov
xor
filds
mov
cmp
push
fs
int3
jg
mov
imul
outsb
movsb
pop
mov
bound
mov
insb
rcrl
aad
sub
mov
push
cld
loop
cmp
jbe
inc
out
and
sarl
pusha
clc
sub
xor
aam
es
loopne
dec
shlb
mov
repnz
std
jle
sti
test
add
cmp
jb
mov
sub
adc
xor
jnp
imul
sbb
inc
push
jle
call
xor
mov
inc
in
test
inc
icebp
and
dec
mov
sub
outsb
mov
and
jae
xor
mov
inc
mov
ret
add
pop
out
lahf
ja
inc
add
sti
mov
push
sub
push
fldt
adc
jnp
int3
sub
adc
int
dec
and
and
mov
mov
pushf
push
cmc
mov
xchg
jbe
cwtl
pop
int
orb
adc
lret
dec
mov
packssdw
fdivrp
test
dec
adc
jg,pn
fcoml
mov
inc
and
jmp
or
jle
xchg
out
inc
sub
or
and
ss
xchg
nop
xor
xchg
inc
nop
jmp
pop
pop
xchg
jge
add
fldt
les
push
loop
addl
rclb
sbb
das
movsb
push
in
push
aaa
mov
mov
adc
imul
push
pop
mov
pushf
push
scas
add
push
push
lret
xchg
adc
dec
das
mov
sbb
mov
or
inc
xchg
je
push
and
jnp
xchg
adc
jp
mov
push
xor
fiadds
mov
and
mov
pop
cmc
popf
je
andl
push
std
dec
popf
adc
or
mov
mov
inc
pop
fiaddl
mov
inc
mov
fisttpll
lcall
cmp
leave
push
jo
xchg
inc
adc
or
inc
insb
xchg
cmp
lods
sub
mov
imull
jmp
sbb
xlat
cmp
lea
xorl
test
adcl
and
mov
insb
stos
pop
adc
add
in
pusha
sub
aaa
out
add
daa
sbb
cs
adc
inc
push
shrl
fidivs
fld
sbb
push
insl
sbb
lods
movb
scas
xchg
jg
fcoml
dec
jnp
adc
stc
aam
xchg
scas
mulb
add
ja
aaa
pop
mov
pop
movsl
xchg
sbb
test
sbb
out
mov
jbe
push
mov
jmp
mov
push
iret
xchg
xor
jno
ljmp
test
mov
cmpsb
or
pushf
mov
xchg
cmp
inc
mov
and
adcl
pop
daa
gs
mov
test
fs
nop
mov
sub
out
mov
sbb
mov
incl
xchg
xchg
cmp
outsb
outsl
sub
out
jnp
ja
popa
adc
movsb
add
pop
jo
repz
fwait
leave
xchg
call
and
jg
shlb
sti
mov
cld
in
test
iret
or
push
into
push
mov
jno
xor
sahf
mov
repnz
mov
adc
push
adc
pusha
xor
lods
jns
add
addr16
repz
inc
cmp
insb
mov
lcall
roll
call
push
push
shl
loope
xchg
stc
aad
and
add
push
fwait
cmp
and
inc
jae
mov
dec
mov
mov
imul
push
bound
ljmp
xor
in
mov
cltd
sti
dec
sub
inc
insl
xor
jmp
ss
xchg
pop
dec
and
mov
not
dec
fwait
mov
adc
cmpsl
rdmsr
jmp
nop
lcall
cmp
ret
sub
xor
ss
sbb
inc
mov
mov
ds
popf
sahf
push
divb
hlt
inc
cld
movsl
xchg
inc
jp
jo
hlt
jle
outsl
arpl
mov
mov
loope
dec
je
stos
pop
push
mov
stos
jbe
out
sarl
add
cmp
jge
mov
fdivrs
mov
jge
roll
movsl
push
add
cmpsl
mov
cmc
mov
add
fstpt
out
add
jle
leave
adc
jg
pushf
sti
xchg
sub
inc
cld
or
push
popa
sub
add
adc
movsl
xchg
psrlq
aas
insl
nop
pop
dec
mov
jno
shrb
add
dec
mov
and
mov
dec
push
push
ja
repz
cwtl
rcrl
push
and
dec
push
and
dec
sub
outsl
jae
push
lret
mov
fwait
cli
outsb
push
cmp
xchg
mov
loopne
stos
xchg
push
out
pushf
push
push
dec
cmp
leave
mov
loop
mov
cmc
pop
pop
popa
inc
mov
ficoml
jmp
pop
pusha
add
pop
sub
mov
and
sti
fmul
cs
dec
out
repz
xor
ds
test
pop
xchg
aas
sub
movsb
lcall
sbb
out
or
dec
push
rcr
jg
inc
pop
imul
cmpsl
inc
cli
xchg
fbld
and
mov
add
xchg
adc
lahf
outsb
mov
inc
clc
test
or
cwtl
mov
mov
inc
dec
fisubrs
jmp
cs
and
mov
adc
or
icebp
pop
aas
enter
xchg
mov
xor
lods
loopne
pop
vandps
outsl
jbe
dec
out
lcall
data16
inc
pop
popf
lds
je
out
test
icebp
in
push
gs
and
mov
cld
adc
out
in
push
loope
inc
jge
das
popf
push
jne
cmp
cmp
lret
push
cli
sbb
jb
sbb
mov
push
inc
in
mov
adc
xchg
mov
repnz
adc
mov
push
fisttpl
cmp
sub
mov
and
into
mov
pop
inc
out
sub
mov
daa
dec
int3
and
or
popa
mov
std
sbb
iret
inc
ret
cmpb
jo
in
sub
add
or
addl
aaa
loop
fiadds
mov
adcl
jp
xor
mov
dec
repz
pop
xchg
ja
cmp
nop
jno
cmp
lcall
jge
filds
inc
jge
lds
clc
int3
pop
mov
int3
in
and
jl
repz
cmp
aaa
jle
movsl
aad
insb
rcrl
gs
imul
mov
jecxz
out
mov
mov
lea
xchg
lret
cli
sbb
inc
pop
repz
clc
cmpsl
mov
cltd
and
xor
sub
lret
adc
or
ja
xor
mov
bound
sub
jno
iret
loop
jnp
in
popf
sarb
fldenv
sub
fisubrl
push
inc
pop
lods
inc
lcall
sub
je
xchg
cli
shlb
jl
fwait
sub
or
and
js
mov
outsl
jl
cmp
jecxz
es
xchg
movsl
lods
call
test
or
cmp
lds
adc
in
or
lret
test
enter
cltd
popa
mov
adc
fildl
jbe
pop
mov
push
loopne
sbb
andb
dec
add
sub
pop
bswap
das
out
sbb
loopne
fdivp
into
xchg
mov
nop
sub
cld
pop
sbb
stc
dec
xor
pop
push
out
cmp
dec
stos
inc
imul
cwtl
adc
hlt
pop
das
push
mov
xor
enter
xchg
adc
inc
jnp
es
xlat
pop
je
mov
ds
cmp
adc
call
in
das
sahf
pop
aaa
loop
sub
mov
stos
mov
mov
cmpsb
sbb
repnz
lods
inc
adc
push
lods
in
xor
stc
fbld
sbbb
sub
lcall
sysenter
add
cltd
mov
xchg
xor
jmp
cmp
mov
sar
push
lock
icebp
adc
lock
in
cmpsb
push
xor
or
push
and
cld
jnp
pop
test
sub
sbb
loope
cmc
mov
ljmp
out
jp
inc
mov
jae
sub
and
fdiv
jg
cmp
dec
scas
aad
or
jle
or
cltd
leave
aam
jmp
jnp
repnz
fcoml
and
loope
mov
xchg
stos
popw
xchg
movb
mov
add
loop
jb
inc
add
pop
dec
out
push
mov
lret
in
mov
ljmp
nop
push
cmc
mov
scas
ret
push
cli
and
jmp
mov
dec
aaa
dec
das
movb
mov
andb
sahf
out
jnp
add
inc
cmpsb
loop
pop
jg
es
mov
repz
aam
loope
lahf
fisubs
add
enter
and
push
stc
ja
outsb
inc
aam
shrl
ret
dec
push
shlb
out
arpl
aad
mov
pop
jmp
insb
jno
pop
test
std
je
lahf
mov
ja
push
sbb
push
inc
jg
pusha
mov
aad
pushf
jno
push
sub
popf
iret
jb
sub
xadd
mov
sbb
xchg
movl
xor
fsts
lock
stc
scas
jne
ja
xchg
aaa
and
fstpl
pop
loop
loopne
lahf
or
or
add
cltd
jno
stos
pop
pusha
aas
out
inc
or
test
scas
imul
mov
push
jnp
push
loopne
outsb
xchg
push
and
adc
add
fsts
cmp
cmp
cmp
inc
dec
les
mov
xchg
hlt
imul
cmp
ja
fsubs
inc
adc
jno
aam
dec
push
inc
jmp
shl
cmpsb
mov
pushw
arpl
add
inc
inc
sbb
sbb
dec
in
fcoml
mov
add
cwtl
in
jge
lea
ret
out
xchg
std
jge
negb
add
push
push
mov
add
lret
ss
pop
pushl
movsb
mov
mov
pop
inc
lea
pop
sub
mov
push
push
mov
mov
add
jle
cwtl
lods
sub
adc
icebp
pop
ret
and
push
pop
mov
mov
push
fldt
sub
not
lods
mov
cmpsb
cmp
mov
les
std
repnz
loop
bound
or
xchg
mov
push
in
mov
mov
int
mov
mov
inc
dec
xchg
fsubr
pop
cmpsl
cmp
lods
test
pop
data16
aaa
repz
mov
pop
sbb
inc
cwtl
xlat
xchg
jl
add
jno
popa
sub
cmp
pushl
outsl
popf
nop
cwtl
mov
add
das
loope
imul
jmp
and
das
xchg
xor
push
in
xor
ss
xchg
icebp
push
pop
and
jae
mov
sub
mov
clc
rolb
or
imul
add
or
ret
aad
sub
dec
out
out
fidivrl
ds
push
xor
fdivl
jecxz
rcrl
fst
xchg
je
lret
test
insl
mov
xchg
test
or
xlat
ss
sbbb
adc
ss
inc
fadds
xor
and
push
inc
nop
jmp
xchg
fmul
mov
adc
mov
xor
adc
fisttpll
outsl
movsb
in
insb
push
xor
popa
pushw
es
jl
mov
inc
mov
inc
pop
aam
push
pop
mov
sub
push
out
add
stos
cmp
adc
shrb
orl
sub
fwait
jo
cmpsb
xor
jb
xchg
mov
aad
ljmp
lahf
inc
or
jle
rcrl
add
nop
mov
adc
aam
or
mov
dec
in
les
aas
out
repz
xchg
pop
rcrb
cs
inc
sti
adc
mov
pop
mov
das
sub
jno
xor
jae
sbb
dec
adc
jbe
sti
and
jle
sub
sub
xchg
pop
dec
push
movsl
fldenv
push
inc
mov
nop
das
enter
xlat
pusha
lea
jl
or
scas
out
mov
lods
lods
lea
popa
pop
sbb
ljmp
push
push
adc
pop
ret
xchg
cmp
popa
inc
adc
seta
add
xchg
dec
sub
cmpsb
push
push
adc
sub
test
and
cmp
sbb
and
divb
cmp
pop
mov
inc
cmp
cmpsb
ret
in
rolb
stos
lods
mov
mov
or
dec
cmp
jmp
in
out
sbb
jae
jmp
jmp
cmpl
mov
cltd
fwait
dec
xchg
iret
xor
aam
subb
loopne
arpl
int3
rolb
in
cli
cli
jno
in
cmp
mov
ret
test
jnp
jae
cli
in
or
fcmovnu
pop
mov
xchg
xor
xlat
in
out
inc
sbb
mov
mul
fldcw
or
out
aam
push
js
adc
push
lock
mov
rorl
aam
bound
sbb
notl
jns
ret
std
loop
dec
out
into
in
je
jp
jo
cmc
aad
hlt
dec
popf
shl
sub
ja
mov
cli
pop
cmpsb
pop
cmp
int3
cs
pusha
push
jle
repnz
aas
mov
out
mov
pop
cmp
cmp
sbb
hlt
fdivr
imul
add
mov
mov
sahf
stos
or
sub
dec
add
dec
daa
adc
inc
into
jbe
adc
inc
pop
roll
call
push
pop
shrl
inc
mov
in
loop
xor
das
push
ljmp
int3
call
add
add
sahf
pusha
lcall
lods
lods
enter
push
mov
fists
outsb
jecxz
add
scas
push
or
mov
push
fwait
pop
cli
xchg
in
sbb
inc
sbb
pop
fucom
loop
pop
testl
dec
mov
int
pop
and
push
repnz
or
inc
jb
push
enter
xor
cld
ret
lahf
loop
dec
cmp
test
imulb
fiadds
adc
test
push
push
and
icebp
call
addr16
loopne
mov
into
inc
arpl
xchg
and
leave
in
data16
lcall
add
fstpt
dec
add
sub
movsl
sub
mov
out
mov
jnp
push
nop
jl
sbb
push
outsb
test
cmovbe
dec
push
shr
cltd
lcall
sti
imul
aam
icebp
sahf
mov
jae
xchg
pop
testb
adc
decb
jmp
je
cmp
adc
sbbl
addr16
arpl
pop
cld
adc
mov
fwait
cli
clc
out
stos
and
dec
fwait
in
inc
cwtl
sub
push
movsl
fsubrs
cwtl
jns
mov
insl
push
inc
cli
cmp
sub
cmovno
mov
out
sbb
or
jns
out
pop
testl
out
xchg
mov
dec
sbb
inc
lahf
pminub
dec
shr
iret
fs
or
or
fcmovbe
add
inc
sbbl
mov
pushf
lret
daa
sarl
mov
faddp
push
fdiv
mov
cmc
and
incl
repnz
xchg
jge
mov
dec
aas
or
cmp
dec
and
mov
mov
loope
in
es
pop
pusha
clc
es
outsb
cwtl
xor
pop
sub
movsl
jnp
xchg
gs
test
test
divl
shl
mov
jo
sets
ds
pushf
dec
pop
or
mov
mov
cmp
and
fsubp
sub
mov
pushf
cltd
in
xchg
push
sti
xchg
xchg
test
cli
push
mov
shlb
cld
push
dec
xchg
scas
xchg
xor
sbb
jl
sub
add
shr
cs
shll
sub
jne
insb
mov
adc
mov
add
mov
sbb
push
clc
fdivrs
lods
pop
aaa
test
lret
inc
testl
sub
hlt
rcl
lea
mov
xchg
inc
inc
or
fs
inc
xor
or
movb
ja
push
mov
sub
sub
testl
mov
sbb
clc
lcall
aad
mov
push
jnp
pop
add
arpl
sbb
cmp
das
adc
sbb
adc
ja
push
lret
lods
push
test
mov
out
xchg
adc
rclb
popa
enter
add
pop
jae
mov
and
repz
mov
fdivl
or
mov
cmp
pop
jnp
fimuls
push
test
add
add
shl
jno
loop
xor
popa
aam
call
jle
pop
ja
ljmp
leave
aad
mov
rolb
push
mov
shl
out
xor
add
cld
cmp
jnp
fidivs
mov
xlat
adc
out
mov
repnz
cmpsb
or
adc
dec
aas
lock
stc
xchg
push
jg
push
call
arpl
pop
repnz
dec
nop
addr16
lret
data16
dec
incl
mov
repz
xor
xor
scas
je
add
mov
shll
ja
lea
movsb
sub
scas
add
add
mov
or
stc
popf
add
lock
lret
mov
cmp
jae
pop
test
xor
mov
dec
mov
cli
gs
movsl
cld
jne
push
in
fimuls
icebp
xchg
fnstenv
and
out
or
mov
and
and
nop
jmp
adc
mov
movhps
or
pop
cltd
push
mov
es
movsb
push
and
sbb
test
sbb
sbb
shrb
add
popl
loopne
inc
cmpsb
jl
nop
sbb
jmp
or
cmpsb
mov
fistpll
mov
xadd
cmp
add
xor
inc
jl
mov
sbb
jbe
jns
sub
cs
addr16
insb
cmp
push
mov
incb
dec
loope
or
inc
lret
outsb
rcl
gs
or
push
loop
sub
mov
xor
dec
xchg
jae
inc
std
mov
std
pop
cld
rorl
jnp
popa
lahf
in
out
xchg
dec
les
inc
imul
jbe
add
jbe
mov
fucomp
sahf
sub
cld
jnp
sub
lea
lea
jo
aad
push
sbb
mov
jmp
scas
aaa
jmp
stc
or
and
cmpsb
cmc
or
arpl
scas
std
lret
push
jp
sti
or
cmp
imul
inc
or
sub
or
shr
aam
pop
adc
push
inc
sti
shrl
mov
jecxz
out
pop
inc
jl
mov
xchg
shl
add
mov
shll
daa
xchg
loopne
push
out
lock
arpl
cwtl
cmp
and
adc
add
jmp
jno
mov
dec
les
rcl
into
add
and
cmp
ljmp
flds
and
mov
and
outsb
gs
mov
mov
inc
movsl
pusha
sub
pusha
scas
or
ja
xor
pop
sti
addr16
or
or
ret
pop
cmpb
shll
out
loopne
inc
cmp
inc
dec
daa
xor
jo
push
aas
add
scas
adc
mov
fidivrs
push
pop
sub
mov
out
fimuls
dec
mov
cwtl
test
mov
out
pop
outsb
out
mov
sbb
jns
push
xor
push
push
jg
inc
rorb
push
fldenv
mov
jo
imul
sub
loop
or
jecxz
icebp
and
adc
sbb
into
test
and
ss
loope
loopne
dec
idivb
sbb
pusha
jl
xor
loope
jbe
adc
jg
xchg
push
addr16
cli
and
fabs
xor
mov
push
or
in
dec
mov
loop
fiadds
icebp
sbb
test
cmpsb
out
pop
jp
push
push
adc
xor
jge
add
jno
pop
fnsave
adc
xchg
jl
fs
dec
hlt
mov
cmovge
inc
inc
icebp
stos
push
movsb
dec
fst
dec
mov
stos
pop
cld
test
je
adc
jns
aas
xchg
insl
xchg
decl
jae
gs
imul
cltd
cmpsb
push
lock
shll
xchg
iret
ficomps
outsb
push
xorb
rcr
out
lock
mov
adc
fidivl
sbb
out
data16
insb
jle
fildl
inc
cltd
mov
fists
add
mov
sahf
or
dec
push
popf
inc
rcrb
lret
xlat
push
or
rcrl
add
mov
xchg
xor
push
ss
inc
shlb
lcall
mov
pop
nop
cli
pop
in
addr16
or
lret
add
lea
cmpsb
pop
es
insl
jae
lret
xor
repz
adc
cltd
push
sub
int3
roll
cmc
test
push
mov
mov
xor
aaa
dec
adc
flds
insl
jno
aam
inc
mov
or
ret
xchg
ljmp
jg
sbb
out
mov
aas
pop
das
cmp
hlt
mov
ja
jmp
inc
gs
aam
lcall
dec
fcomp
jns
insb
inc
fisttpll
and
push
xlat
es
ret
scas
lock
and
dec
jmp
pop
dec
mov
dec
jbe
pop
push
mov
leave
inc
ret
mov
jnp
je
push
clc
dec
aam
xchg
movsb
dec
jne
in
push
cmp
ret
mov
sub
xor
mov
imul
outsb
cmp
int
arpl
inc
add
sub
leave
sti
xor
in
sub
insb
test
fnsave
xor
mov
movsl
call
xchg
jae
cwtl
jne
or
or
push
lds
xchg
or
add
call
push
stos
and
cmp
and
xchg
push
inc
icebp
in
repnz
clc
push
adc
adc
js
add
and
shrl
cmpsl
movsb
pusha
sti
dec
int
mov
hlt
add
mov
andnps
sub
fs
std
xchg
lods
sub
jecxz
mov
lahf
test
cmp
add
outsl
sti
sub
push
fidivl
arpl
jns
das
sub
jae
outsl
inc
sbb
outsl
nop
test
aaa
inc
scas
or
or
stos
push
lock
rcl
add
ja
shlb
aas
jmp
ficomps
adc
mov
out
sbb
pop
sub
test
mov
mov
jge
scas
add
mov
push
imul
out
gs
sub
and
sub
out
or
jne
xchg
push
sbb
fwait
fwait
pop
popf
pop
lahf
sbb
pop
fnsave
xor
in
outsb
fdivrs
or
xchg
or
jns
inc
shll
pop
js
inc
dec
sbb
shlb
insl
jne
test
mov
dec
push
pop
fcomps
mov
pop
mov
jl
std
lcall
es
mov
xchg
or
pop
jae
es
outsl
adc
fiadds
mov
les
fisubrl
lret
pop
lods
int3
imul
insb
mov
test
sahf
adc
clc
push
mov
sbb
mov
jge
aaa
cli
mov
xor
hlt
into
test
stos
jnp
test
cmpsl
jl
dec
bound
mov
sub
rclb
pop
dec
mov
scas
mov
call
inc
daa
push
call
fchs
jp
cmp
cmpsb
cmc
clc
fcmove
sub
adc
fld
lret
cwtl
test
add
std
xchg
cmp
jmp
sahf
and
repz
jmp
sbb
push
push
sbb
je
and
rcl
arpl
lods
inc
sbb
adc
pop
pop
fcmovu
push
loop
mov
int
insb
add
and
js
push
inc
lret
imull
in
in
movl
enter
fsubrl
or
mov
jbe
stos
lea
pop
or
push
push
xchg
imul
add
mov
mov
in
lock
push
lret
pop
cmp
in
pop
mov
jp
loope
sub
push
push
inc
cmp
add
cmpsl
mov
pop
jae
dec
xchg
testl
loope
rcpps
orb
loopne
jnp
out
jmp
mov
cld
pushf
push
fs
mov
clc
cmpsl
cwtl
push
xor
adc
push
push
xlat
mov
sarb
test
cmp
loopne
mov
mov
sbb
insl
les
popa
lods
sbb
rclb
sub
inc
loopne
ficoml
in
repz
jmp
pop
and
pop
adcb
add
adc
mov
add
setle
stos
arpl
test
leave
jmp
jg
sarb
out
mov
inc
fdivrl
dec
mov
and
add
sub
fcmovu
aad
mov
cmp
and
xchg
xchg
les
mov
int
lods
fcoms
cld
push
rclb
mov
sub
inc
push
aam
xchg
add
enter
outsl
and
adc
mov
loopne
cmp
cbtw
cld
cmpsl
pop
pop
mov
clc
pushf
ja
mov
pop
shlb
pop
mov
out
push
dec
negb
cmp
pop
insb
int
pop
jle
add
fldt
mov
pop
rclb
aad
dec
push
sub
in
or
rorl
repnz
lret
scas
xchg
in
add
popf
or
movsb
insb
aas
inc
and
ja
dec
sbb
or
jno
lahf
sbbb
inc
and
push
mov
test
or
lds
sub
mov
dec
pop
lcall
dec
mov
adc
cmc
cmpb
dec
addr16
and
outsl
lret
leave
aam
add
lea
cs
cld
jle
add
add
push
frstor
dec
jmp
or
or
jo
ljmp
adc
cmpsl
or
cli
aaa
imul
addr16
sub
stos
punpckldq
lcall
xlat
sbb
push
movsl
push
in
pop
add
fucomi
mov
dec
imul
testl
les
jmp
mov
ret
lods
hlt
test
pop
ficomps
lods
jp
or
sub
sub
in
xchg
xchg
shlb
cli
fidivl
xchg
hlt
dec
push
test
loope
mov
daa
mov
test
dec
mov
pop
ss
mov
std
jle
sub
inc
pop
add
mov
gs
cmc
dec
fsubs
pop
xchg
les
mov
nop
xlat
ljmp
and
clc
out
or
loopne
mov
daa
data16
add
pop
fwait
push
in
aas
mov
inc
lods
push
je
jns
add
jae
push
sar
mov
fdivrl
arpl
inc
cmp
mov
popa
lret
cs
dec
enter
cmp
or
mov
pop
out
cmpsb
xorl
mov
push
inc
stos
sbb
mov
cmp
outsb
dec
dec
iret
cltd
fnstcw
push
sbb
xor
cwtl
aam
das
fs
bnd
out
dec
mov
add
jmp
sbb
shl
loopne
cmpsl
cmp
mov
xchg
fmul
dec
jge
movsl
pop
mov
mov
adcl
mov
cwtl
fimuls
ss
call
outsb
add
movsb
outsb
outsb
mov
adc
jae
pop
adc
or
movsl
out
xchg
mov
aas
int3
test
push
lcall
out
ficomps
rorl
push
jb
adc
inc
out
jbe
cmpsl
jo
dec
pop
lcall
out
cmpsl
testb
call
push
inc
push
jae
sbb
xchg
icebp
push
fiadds
mov
imul
xchg
imull
adc
sub
jns
or
out
dec
xchg
jo
orb
xchg
xchg
lcall
lahf
add
sahf
subb
jbe
inc
subb
jb
mov
xor
adc
test
push
loop
mov
push
sub
add
sbb
mov
jp
mov
fwait
xchg
inc
je
jg
sub
out
ret
cmp
push
push
or
dec
jmp
add
rolb
xchg
icebp
and
or
or
push
cwtl
pop
cmp
lahf
ret
aas
inc
xchg
fstl
sub
pushf
shll
clc
sbb
repz
and
push
adc
lods
cltd
jp
fstpt
fisubl
dec
sbb
sahf
lods
aas
lss
mov
test
inc
cmc
daa
bound
mov
and
pop
int
int
enter
sub
test
mov
xchg
pusha
arpl
pop
bnd
inc
icebp
insb
arpl
adc
daa
mov
fidivs
test
es
enter
shll
lea
sbb
pop
sub
xchg
int3
in
imul
cltd
js
je
ljmp
sahf
rcll
sub
aad
fists
pop
sub
roll
xchg
mov
cs
mov
cmpl
mov
outsb
daa
jl
inc
fmull
cltd
dec
push
stos
pop
mov
pop
mov
ja
jecxz
cwtl
lret
mov
mov
cmpsl
shlb
mov
push
jne
dec
xchg
movsl
pop
out
sbb
jp
mov
sub
fsubrl
ljmp
cmp
loop
jno
lods
out
or
cmp
lret
mov
sahf
dec
or
sub
mov
adcb
jmp
gs
mov
call
pop
mov
add
mov
rcrl
adc
inc
rcrl
sahf
gs
jne
fadds
das
fsub
mov
jmp
sbbl
outsl
mov
sar
add
inc
fsubl
popa
shlb
leave
pop
jbe
adc
inc
hlt
fisubs
xchg
push
xor
push
int3
scas
sub
es
mov
fnsave
xor
or
push
mov
mov
scas
xchg
sub
and
fidivs
stos
enter
dec
push
lahf
mov
rclb
sbb
pop
inc
mov
xor
stos
cmp
inc
push
lds
fnstsw
mulb
mov
mov
pop
into
pop
inc
fwait
mov
sub
xor
xchg
sbb
add
xchg
test
xor
xchg
or
mov
sbb
and
and
pop
inc
jle
push
bound
les
add
xchg
lock
cmp
sar
and
mov
cmp
adc
mov
fst
sti
bound
leave
ds
fistl
roll
ret
mov
loop
mov
lods
push
inc
icebp
jmp
sbbb
dec
rcrb
outsl
cmp
adc
movsl
mov
push
movsb
ja
std
aad
scas
movsl
adc
sub
push
adc
push
push
bound
add
leave
lcall
sub
addr16
cld
sub
cmpsl
sub
inc
xchg
jae
mov
jae
cwtl
sub
mov
adc
negb
mov
mov
test
xchg
fwait
in
scas
mov
xor
sub
inc
sbb
mov
adc
arpl
inc
jecxz
inc
push
adc
mov
cmp
aad
ds
add
inc
scas
mov
mov
cmp
xor
dec
or
int3
mov
lock
mov
mov
outsb
push
test
mov
sbb
sub
addr16
dec
mov
or
cwtl
mov
fcompl
sti
inc
cmp
lds
cmc
add
arpl
inc
push
inc
xchg
dec
xor
outsl
dec
divps
in
adc
mov
test
iret
mov
adc
or
fisubrs
loop
lcall
add
outsl
mov
les
stos
xchg
cmpsb
and
xchg
xchg
in
mov
jbe
inc
lret
std
push
mov
jl
out
xchg
push
pusha
inc
mov
ret
rorb
jl
xlat
sti
call
xchg
jae
inc
push
enter
or
adc
mov
cli
js
dec
dec
jmp
cmp
test
jge
mov
push
push
pop
into
or
je
push
add
xor
outsb
pushf
pop
in
mov
mov
popl
lds
mov
push
cmp
and
mov
adc
sbb
stos
push
xchg
sub
sbb
pop
xor
and
pop
gs
ror
inc
fsubrl
sub
nop
addr16
in
mov
hlt
or
sub
dec
or
xor
jbe
jmp
and
sub
lods
jle
enter
aas
or
in
in
pushf
js
or
add
or
mov
popa
ja
daa
jnp
sbb
out
push
movsb
cmp
iret
or
sti
popf
out
push
test
add
dec
mov
xor
jl
in
cmp
loop
add
mov
gs
mov
and
out
or
xchg
aad
dec
jo
nop
ficompl
fimuls
bound
lods
push
stos
imulb
mov
inc
rcl
stc
sbb
mov
cmp
int3
xor
jno
popf
dec
jl
nop
mov
cli
dec
lret
pop
repz
xchg
jb
sub
les
test
sub
out
sahf
cmp
lahf
clc
inc
je
hlt
jno
pop
add
repz
or
mov
mov
push
jecxz
fistps
lods
xor
fs
sbb
test
push
mov
fmuls
sub
call
and
or
mov
push
mov
int
call
push
lock
mov
out
stos
stos
inc
pop
fstl
clc
sbb
mov
pop
adcb
sub
rol
insl
sbb
mov
xchg
xchg
jae
in
jb
cld
pop
xchg
sbb
inc
mov
aam
xchg
add
adc
fldt
mov
mov
sbb
pop
repnz
sub
adc
scas
in
rol
adc
pop
test
lea
and
lds
sarl
and
xchg
ficompl
xchg
cmp
fldenv
icebp
mov
mov
sti
inc
xchg
leave
lret
dec
jb
js
ljmp
xchg
and
rcrb
sbb
aam
inc
cwtl
adc
jmp
jbe
popa
pop
adc
mov
mov
pop
ljmp
int3
mov
lock
popf
add
call
sub
aad
push
aas
aam
pusha
pushf
test
cs
cmpsl
xchg
xor
lock
push
adc
sbb
loop
aas
out
cmc
gs
mov
incl
lret
sahf
xor
hlt
jne
xor
shr
and
and
aas
pop
pop
xchg
jl
mov
inc
jnp
repz
es
sbb
punpckhbw
xchg
adc
sarb
daa
sbb
fwait
pop
add
jbe
push
xor
enter
adc
adc
pop
lcall
gs
adc
sub
xor
lahf
push
add
dec
addl
mov
and
or
sub
nop
fsubrs
in
add
or
sbb
ret
imul
subb
add
enter
and
cli
adc
pop
inc
in
int
shl
pop
jne
test
sti
and
mov
dec
stos
sub
or
adc
mov
cmp
push
ret
popf
push
popf
or
mov
outsb
push
adc
push
adc
dec
pop
mov
mov
mov
adc
test
xchg
ljmp
stos
mov
push
mov
movsl
scas
mov
push
pop
sub
inc
mov
dec
sti
mov
adc
enter
dec
aaa
dec
loop
mov
mov
lret
arpl
xchg
ja
jmp
push
dec
jns
pop
push
ret
stos
xchg
mov
add
in
mov
leave
push
mov
dec
movsb
and
sub
hlt
insl
sub
ret
push
outsb
or
push
xchg
add
fcmovnu
push
cmpsb
adc
add
mov
and
mov
cltd
aaa
lea
test
std
repz
ret
and
ret
dec
xchg
stos
ljmp
scas
mov
adc
pop
inc
mov
push
into
xchg
into
lds
inc
sahf
dec
outsl
mov
popf
pop
add
adc
cmovnp
sub
ss
outsb
push
insb
pop
in
movsl
mov
xor
or
cli
aam
inc
mov
ss
adc
aam
loope
sub
adc
shr
mov
dec
mov
mov
outsb
testl
sub
les
ds
jo
arpl
jne
push
inc
sub
push
push
inc
incb
add
sub
pop
lods
adc
leave
mov
pop
cmp
xchg
scas
pop
mov
mov
in
add
jbe
std
das
mov
js
ret
iret
dec
js
mov
into
hlt
fcompl
sub
fcoml
aam
xor
push
jmp
push
andl
fcmovnbe
mov
out
dec
daa
test
int
addr16
ja
lods
inc
sbb
orb
mov
dec
cmp
sarb
das
mov
out
pop
aad
xchg
push
fs
mov
add
xchg
mov
imul
xchg
mov
scas
jle
daa
mov
and
or
push
jmp
mov
sahf
fwait
incl
dec
push
xchg
sbb
rep
inc
int
ret
pop
mov
ljmp
mov
sbb
movsl
mov
xchg
lock
enter
or
cli
dec
push
repz
pop
mov
inc
dec
ficomps
mov
das
fcoms
movsb
cli
bound
int
adc
daa
sbb
decl
pop
leave
subb
mov
sbb
xor
fstl
andl
add
mov
into
lahf
add
mov
push
mov
ret
sahf
out
jge
cmp
rcrb
jno
mov
jge
xchg
xor
mov
inc
sub
test
in
jmp
test
pop
iret
lahf
stos
stc
sti
and
movsb
repnz
outsl
jns
inc
jmp
mov
es
and
int
or
jmp
cli
xchg
fwait
rcrb
aaa
jno
je
mov
sbb
fnstenv
insl
in
rol
stos
rcrl
stos
rcrl
jg
cwtl
repz
insb
mov
or
rorb
stos
movsb
rolb
sub
std
ja
xchg
or
pop
sub
lds
lds
das
test
lahf
mov
in
stc
mov
dec
pop
or
jno
and
loopne
andb
orl
or
mov
aas
insb
or
ret
inc
ljmp
lock
arpl
loop
add
inc
adc
mov
pop
cmp
adc
daa
adc
push
dec
push
fwait
mov
mov
popa
adc
lods
mov
in
movsb
sbb
xor
inc
dec
cltd
shlb
push
or
dec
pop
je
dec
stos
not
add
lahf
pop
inc
sbb
cmp
pop
pusha
cmp
sbb
cmpsb
fstl
mov
push
jnp
mov
std
rcrb
ja
push
mov
movb
cld
mov
in
fistpll
into
movsl
xchg
mov
test
pop
xchg
cmp
mov
add
xchg
sub
pop
dec
xchg
lcall
push
or
add
add
cmpsl
clc
adc
in
add
cmp
push
xchg
adc
insb
negb
lcall
adc
xor
sub
out
lods
ljmp
cwtl
rorl
stos
bound
insl
jl
cli
xchg
outsb
mov
loop
push
sub
je
inc
push
mov
mov
push
inc
loope
hlt
jecxz
xchg
cmp
pusha
or
lds
mov
sbb
xlat
scas
xor
fdivrs
adc
or
imul
notl
shrb
nop
add
js
jmp
mov
sub
insb
mov
or
rclb
cmp
aad
pop
insb
inc
mov
inc
mov
test
std
or
clts
pusha
inc
int
out
mov
or
into
lahf
in
inc
jno
cmpsl
or
test
mov
mov
push
pop
push
xchg
mov
lods
mov
sbb
push
cld
insl
push
or
mov
enter
into
inc
push
test
push
mov
cld
jmp
ljmp
cmp
cmp
and
xchg
out
mov
inc
sti
cmp
mov
addb
xchg
divl
inc
in
sub
pop
mov
cmpsl
pop
add
lret
xchg
mov
xchg
pop
stos
rcr
add
loop
mov
jno
mov
aam
repz
add
aad
cmp
cmpb
in
bound
dec
mov
ja
xor
add
jg
call
sub
sbb
repz
test
adcl
fwait
cwtl
mov
jp
mov
imul
push
fs
cmp
lock
push
xor
mov
xchg
fcompl
inc
xchg
andb
mov
dec
jne
mov
int3
test
mulb
aaa
and
dec
jg
insb
mov
popf
lahf
test
xchg
insb
add
dec
inc
shr
cli
inc
pop
mov
enter
inc
movsl
sub
mov
and
pop
rolb
adc
cmpsb
fsubs
hlt
into
ret
fisubrl
sub
cmpl
je
mov
outsl
xchg
sbb
fstps
push
cmp
loop
out
mov
aad
shr
lods
mov
xor
sbb
icebp
cltd
stos
popa
adc
cld
push
mov
loop
adc
ja
and
iret
lea
and
stc
adc
xchg
repnz
adc
jae
xchg
push
fsts
mov
in
cwtl
pop
xor
sbb
scas
xchg
mov
pop
int3
sub
aad
sahf
pop
pop
xor
imul
int3
clc
mov
incl
insl
mov
in
adc
jns
dec
pop
ret
mov
test
nop
sub
dec
jae
js
dec
out
sbb
add
orl
jb
xchg
js
shlb
lret
sbb
jbe
dec
push
xchg
dec
push
inc
mov
cmp
int3
outsl
ja
mov
stos
fdivrp
pushf
and
sub
test
popw
dec
sti
inc
jp
lret
xor
aad
and
push
repz
mov
fwait
aaa
loop
mov
sbb
idivl
pop
xorl
nop
dec
es
jne
cmp
lret
jg
movsl
dec
lcall
adc
pop
std
fmull
push
std
add
loopne
scas
pusha
pop
out
mov
or
jmp
sub
push
es
test
cmp
addr16
cmp
xor
fs
push
stos
mov
or
lods
dec
fs
imul
mov
je
pop
into
mov
mov
cmp
enter
cld
stc
sahf
or
loopne
xor
mov
popa
xor
addb
dec
and
push
je
imul
in
add
pop
adc
cmp
push
repnz
stos
enter
lcall
inc
mov
lahf
and
cld
scas
pop
cwtl
cwtl
sbb
jns
push
jp
sbb
add
xchg
ficoml
xchg
call
mov
jno
pop
cmp
rcl
xorb
andl
pop
dec
roll
and
fisttpl
fiadds
stc
lock
cmp
ret
icebp
cmpsb
out
in
test
xchg
xor
or
cmc
lcall
ffree
je
stos
aas
add
or
test
stos
ja
inc
push
jnp
pop
fimuls
stos
or
xchg
dec
cmp
jge
sbb
mov
dec
mov
in
adc
das
rcll
adc
mov
mov
stc
xchg
movsl
gs
push
xchg
and
nop
sete
adc
pextrw
jne
das
mov
cld
psadbw
push
aaa
add
imull
jl
mov
lods
sbb
mov
pusha
leave
idivb
mov
xor
jle
sti
push
cwtl
dec
lahf
in
cmpsl
in
into
and
loop
pop
inc
pop
push
xor
fsubp
pop
mov
imul
cmp
inc
mov
push
int3
push
or
xor
pop
jp
lea
adcl
pop
mov
out
jl
out
jns
cmp
outsl
adc
pop
cmp
test
vmovlpd
notl
loope
push
inc
adc
fbld
inc
sub
sbb
aam
cs
and
push
sbb
into
into
add
jb
cmp
sbb
stos
ficoms
vpsrad
cld
push
add
stc
mov
test
xor
jns
mov
stos
aaa
jle
pop
icebp
jnp
testl
shll
outsl
insl
mov
push
pop
add
das
fisttpll
fs
aaa
test
adc
repz
xor
hlt
adc
lea
shlb
inc
sbb
adc
pop
std
adcl
inc
xchg
jge
mov
xorb
adc
insb
sub
loopne
lret
xchg
loop
cmp
sub
push
jmp
sub
cmp
bound
loop
add
mov
adc
cmpsb
cmp
mov
xchg
sti
cmp
leave
mov
or
cmp
xchg
hlt
nop
ljmp
jge
sti
sub
popa
add
sub
xor
push
les
cmp
out
jp
inc
outsb
and
je
sub
loop
add
inc
adc
pop
and
repnz
xchg
jecxz
arpl
rclb
add
inc
imul
inc
das
call
add
sub
jbe
lock
jo
push
or
mov
sbb
cmpb
fists
rcr
jg
dec
jecxz
pop
mov
aaa
sbb
xor
es
pop
mov
lret
fdivl
push
enter
fwait
jne,pt
cld
adc
sahf
mov
mov
icebp
in
push
cmp
push
jle
mov
mov
xor
xchg
enter
aad
xchg
loop,pt
pop
xchg
push
dec
xchg
xor
int3
int3
fdiv
outsb
sarl
imul
fisubrs
adc
inc
pop
mov
pop
out
mov
lahf
aad
xor
idiv
pushl
dec
shlb
out
aaa
jb
mov
aam
inc
outsl
hlt
jbe
inc
jge
loopne
je
cmp
sti
adcb
push
dec
shrb
ljmp
cmp
jne
in
test
and
dec
cmp
cs
mov
xchg
repnz
ljmp
mov
sub
inc
or
and
jle
add
lods
pop
lock
jno
clc
pop
mov
cli
lret
test
jle
fs
push
out
sbbb
cld
cltd
xor
fldl
js
iret
in
inc
mov
mov
sbb
inc
repz
arpl
popa
in
mov
pop
jecxz
dec
int3
dec
cli
mov
test
sbb
add
mov
jne
in
in
aam
gs
repz
or
ljmp
leave
insb
push
pop
fiaddl
push
xor
mov
rcll
clc
mov
loope
adc
test
bound
xchg
mov
push
add
inc
adc
aam
pop
sub
push
cmc
pop
pusha
stc
negb
mov
mov
iret
outsl
push
push
push
mov
jle
xor
test
inc
fmull
mov
rolb
mov
sbb
cmp
xor
js
sbb
dec
notb
dec
mov
inc
pop
aas
or
scas
imul
xchg
add
cmp
popa
mov
shr
pop
jp
insl
repnz
cwtl
and
into
mov
or
dec
sbb
xor
mov
and
push
pusha
adc
mov
div
mov
shll
jmp
addr16
repz
imul
gs
jo
mov
incl
lock
inc
adc
repz
xor
cmp
fs
aad
lret
xchg
js
je
outsl
push
sahf
xchg
or
dec
push
sub
fwait
mov
pushf
mov
inc
das
ds
sub
shlb
or
add
mov
subb
popf
jg
push
negl
repnz
dec
xchg
aad
nop
pop
ret
les
mov
ljmp
lds
shr
loop
sbb
xchg
mov
mov
fcompl
sbb
popl
mov
jbe
aad
in
shrl
lock
dec
or
cmp
sub
or
sbb
popa
lock
pop
mov
mov
adc
or
mov
mov
insl
jbe
inc
pop
lcall
sahf
je
and
adc
push
xchg
cmp
cmpsb
cmc
std
lcall
push
addl
ja
lcall
sbb
jg
inc
push
ficomps
or
or
loop
icebp
sub
push
pop
stos
ret
je
pop
dec
loopne
pop
xchg
lods
paddq
push
mov
mov
mov
pop
pop
or
xor
or
ja
or
daa
gs
sbb
dec
jne
test
insb
loope
xor
mov
scas
loop
jo
sahf
inc
adc
cmp
lret
sti
inc
outsb
in
cmp
inc
inc
dec
fsubrl
hlt
pop
dec
push
push
repz
jge
xor
xor
adc
adc
jbe
pop
and
mov
cmp
clc
ret
test
adc
cld
push
mov
pop
jmp
fadd
popf
out
mov
or
and
or
pop
sbb
dec
and
pop
js
outsl
int3
stos
movsl
xor
push
inc
push
jbe
pop
mov
out
sahf
pop
adcl
rcl
rep
xchg
xchg
mov
sti
and
faddp
rcl
pop
movsb
xchg
loop
cmpsb
sub
fldl
add
sti
stc
dec
popf
pop
lds
mov
pop
insb
cmp
mov
sbb
sub
mov
iret
call
movsb
cmpsb
mov
xorb
jmp
jno
pushl
push
in
shlb
or
ds
std
cmp
orb
push
or
inc
cwtl
xchg
sbb
icebp
int
and
pushf
add
mov
jl
lahf
xor
psubb
stos
add
push
fsts
cmp
inc
addr16
jp
in
sbb
lock
add
aam
cmpsb
mov
loopne
jnp
adc
iret
aas
shr
inc
testl
call
sahf
xchg
cs
pushf
fists
or
fimuls
sbb
mov
aad
xchg
lds
rcll
cmpsl
in
adc
popf
scas
cmp
mov
sub
pop
adc
xor
out
into
lods
loop
jnp
stos
fwait
xchg
xchg
hlt
lahf
data16
adc
ret
out
mov
outsl
loop
mov
test
inc
dec
inc
push
shll
loop
mov
mov
je
mov
adc
adc
les
lahf
out
mov
xor
mov
hlt
and
cmp
iret
test
push
xor
xchg
loop
sbb
addl
cmp
xchg
pop
cmp
or
and
popf
cli
ret
aaa
in
test
ds
lcall
dec
popf
daa
xchg
mov
inc
mov
jp
fwait
sti
jnp
push
shll
inc
push
cmp
ja
ret
das
xchg
ja
xchg
dec
addr16
push
leave
push
stos
xchg
push
data16
aam
pop
pop
add
aad
mov
jmp
jp
add
mov
pop
xchg
xor
cli
cmp
stos
mov
cld
adc
enter
pop
push
in
xor
js
and
dec
div
mov
xchg
movsb
fbstp
sub
push
ds
jle
xor
cmpsl
jle
outsl
cli
jno
mov
aam
pop
std
in
ret
jne
mov
test
pop
push
aas
ds
into
movsl
mov
pop
xor
clc
popa
xchg
and
push
rol
dec
ret
adc
mov
mov
sarl
sub
aad
js
fwait
or
cld
int
xor
incb
and
test
cmp
in
cmpsb
ja
xchg
jbe
ret
jae
js
inc
xchg
in
mov
nop
rcrl
mov
pop
popa
sbb
scas
add
sbb
fdivl
in
push
jl
rcll
sub
out
dec
jb
daa
mov
into
adc
in
pop
out
cli
outsl
scas
insl
mov
fsubr
sub
stos
into
sbb
clc
sub
add
mov
push
fst
int3
and
or
jl
jns
dec
outsb
rolb
inc
jns
mov
in
mov
xchg
ljmp
nop
push
nop
popa
lret
addl
mov
js
mov
loop
and
sub
fildll
mov
sti
out
std
out
pushl
add
cli
xchg
cmpsb
sub
mov
mov
aas
add
repz
lods
mov
out
out
mov
sbb
push
repz
rolb
sbb
std
jnp
xor
loope
sbb
inc
loope
fadds
push
cltd
jecxz
jl
lods
mov
push
mov
mov
movsl
jno
jle
mov
outsb
gs
out
jne
sbb
cmpsb
cli
push
flds
jle
and
clc
mov
loop
mov
add
lods
scas
fwait
mov
mov
pminub
mov
jnp
adc
aas
pop
loop
mov
cld
adc
cwtl
fwait
fwait
xor
stos
shll
adc
dec
lock
les
cmc
rolb
pop
shrb
ficoml
stc
mov
fmuls
dec
ret
sti
lahf
mov
jle
pushf
mov
fldcw
mov
loopne
scas
mov
les
mov
cmpsb
sbb
sar
xchg
lret
add
mov
mov
outsb
mov
aad
cmp
adcb
mov
fsubrs
xor
xor
andb
cld
inc
addb
mov
cli
scas
cmpsb
into
xchg
mov
jmp
xchg
lock
out
aam
out
dec
imull
mov
repz
inc
sub
pusha
mov
imul
cmp
mov
outsb
push
clc
sar
pop
cmovbe
xor
pop
sub
jne
loopne
and
mov
aas
inc
lret
push
lea
out
sub
jns
bound
insl
bound
pop
rcr
mov
out
ljmp
rcl
lock
hlt
cmp
aaa
xchg
push
imul
push
cmpsl
add
lea
shrl
push
sub
sub
popa
std
in
gs
fimull
fstl
xor
bound
mov
pop
sahf
int
ja
cltd
mov
push
test
xchg
cmp
or
push
pop
and
jl
mul
lcall
mov
inc
bound
sarb
ja
cmpsb
pusha
dec
jo
movsb
std
mov
imul
xchg
xchg
pop
pop
push
negb
ret
cmp
fldl2e
cmpsb
call
jae
cwtl
cmpsb
sub
lcall
cmp
iret
sarb
dec
push
stos
ret
add
adc
outsl
push
mov
adc
fmuls
push
out
xchg
push
mov
adc
shrb
and
lret
pop
psrad
push
cld
imul
xchg
xlat
mov
les
mov
jb
jl
into
inc
mov
inc
lcall
lcall
repz
sbb
pop
call
aaa
les
xor
repnz
xchg
jo
cmp
lock
sbb
into
movsl
dec
sbb
cld
pushf
iret
mov
imul
aam
outsl
shlb
xchg
jp
je
js
arpl
out
push
push
outsb
icebp
or
shrb
mov
pop
daa
cli
cmc
into
cltd
fsubs
pop
cmpsb
enter
stc
shll
es
mov
in
fwait
in
cld
sub
rorl
ss
ljmp
push
inc
sahf
fwait
cwtl
das
mov
or
popf
iret
pop
in
jns
push
repnz
lahf
mov
pop
in
mov
out
xchg
mov
push
in
add
mov
xchg
addl
aas
mov
pop
loop
loop
ret
xor
inc
mov
mov
stc
add
mov
jp
in
fidivs
push
mov
lcall
stos
lea
add
dec
push
pop
shll
in
xor
mov
pop
in
add
test
jo
mov
mov
push
jbe
ficompl
xchg
rcll
jecxz
adc
sub
push
fistl
xor
push
outsb
mov
test
out
lea
fisttpll
jae
jns
push
inc
stc
es
mov
lock
outsb
insl
fsubrs
outsb
lods
push
test
xor
push
addb
call
push
inc
dec
sub
ficompl
stos
mov
cmp
push
scas
pop
xchg
xor
test
ds
sub
movsb
add
xchg
cwtl
add
push
in
fdivs
negl
gs
movsb
mov
js
cmp
lret
loopne
mov
aaa
aaa
add
fs
ljmp
push
notl
sbb
pop
aam
mov
pop
or
add
cmp
icebp
lock
hlt
aam
sbb
aaa
mov
push
push
cmp
mov
js
inc
sbb
push
or
loopne
lcall
mov
mov
cmc
sub
insb
push
fisttpl
add
mov
sar
data16
add
repnz
lcall
std
adc
jb
mov
sbb
out
xor
mov
int3
lock
cmp
cwtl
and
shl
rorb
paddusw
or
ja
mov
hlt
jle
xor
test
xor
out
add
shlb
maxps
inc
mov
mov
pop
mov
xchg
shll
aam
mov
pop
pop
fstps
in
or
xchg
pushl
sbb
mov
lods
bound
repz
pslld
mov
or
call
push
ficompl
inc
xchg
push
inc
movsl
push
lds
mov
out
pop
adc
nop
or
cmpsb
lret
pop
dec
in
insl
test
ficoml
ljmp
pop
loopne
aad
mov
pminub
or
xor
xchg
pop
je
jbe
imul
roll
mov
stos
or
pushl
shll
movb
sahf
scas
dec
xor
popa
repz
call
divb
loopne
jb
je
xlat
jnp
in
sbb
xchg
xchg
scas
mov
movsl
pop
ret
popf
mov
cmpb
add
push
das
ss
inc
push
pop
leave
add
sub
adc
sbb
out
xlat
clc
add
je
xor
jbe
pop
adc
in
push
xchg
insl
and
sub
and
jl
pop
cmp
and
cmpsb
pushf
jecxz
sub
push
and
imul
and
sub
adc
mov
int
out
scas
add
into
out
mov
mov
arpl
sub
lahf
fldenv
pop
das
jmp
je
xchg
cmp
pop
pop
bound
mov
nop
fsubr
cmpsb
cwtl
sbb
roll
insb
lret
dec
sbb
ret
pop
jmp
out
adc
push
fldl
popf
into
ja
pop
sahf
data16
mov
cmpsb
pop
rorb
repz
not
lods
pop
inc
in
cmp
ret
pusha
in
jge
mov
inc
push
pop
cmpsb
andl
scas
jo
shl
sti
data16
push
or
jns
cltd
adc
mov
pushf
push
push
shrl
mov
or
ds
ljmp
nop
push
push
mov
and
pop
fsubrs
shrb
fs
fidivs
push
fidivrs
adc
lock
inc
sbb
icebp
iret
mov
xlat
mov
das
sub
call
cmpl
in
jmp
ljmp
xchg
and
adc
fsts
dec
in
imul
jmp
inc
aad
cmp
jo
dec
cmp
push
adcb
js
imul
jbe
inc
push
sbb
pop
nop
mov
dec
nop
mov
mov
sahf
pushf
lcall
orb
test
cmc
sub
xor
and
notl
imul
lods
out
pop
adc
imul
cmpsb
hlt
sub
adcb
mov
call
nop
outsl
pop
mov
lret
pop
loop
imul
daa
lret
in
rcrl
insb
sbb
cld
or
imul
fcom
outsl
adc
pop
stos
lds
cwtl
and
icebp
div
jno
xor
sub
mov
pop
sub
xorb
dec
mov
jp
out
aam
cmpsb
mov
aaa
out
adc
stc
or
push
inc
paddsw
add
shr
push
aaa
aas
inc
push
sbb
shl
and
mov
sub
mov
lret
das
sbb
cld
dec
jb
or
push
mov
jno
fcoms
daa
jno
add
int
mov
mov
xchg
loopne
pop
out
add
push
or
movsl
test
ja
movq
outsl
ret
sbb
in
cmpsb
mov
sahf
addl
push
nop
jne
push
and
lods
sub
insl
mov
shlb
arpl
ret
dec
imul
gs
aaa
addb
mov
lret
out
adc
mov
stos
inc
or
xchg
imul
mov
sbb
pop
push
mov
mov
lods
sbb
ret
mov
repz
gs
test
dec
cmp
imul
xchg
jns
mov
pop
jmp
push
movb
push
inc
add
js
mov
insb
scas
cli
ficoms
sbb
fsubl
sub
into
cmpb
shll
es
push
mov
out
in
xor
clc
xchg
cmpsl
cli
bound
rcrb
int
adc
push
jge
push
push
inc
jecxz
test
or
in
bound
xor
dec
jb
mov
xchg
rolb
mov
push
sahf
mov
fs
push
js
aaa
pop
addr16
notb
sbb
sahf
jno
pop
jmp
in
sbb
push
xchg
sub
push
pop
cltd
les
dec
sbb
push
sub
add
jb
sbbl
xchg
and
nop
xchg
out
sbb
and
jns
jmp
dec
cmp
dec
stos
adc
mov
xchg
add
and
pop
es
cmpsl
jle
xchg
icebp
mov
ret
mov
or
push
lock
pop
aaa
pop
outsl
pop
stos
mov
call
mov
cmp
or
cltd
cmp
dec
or
sarb
insl
fsubrp
xchg
rcl
sbb
mov
inc
je
jnp,pn
dec
enter
sbb
and
insb
mov
sub
mov
out
mov
xchg
outsb
stos
add
sbb
xchg
add
icebp
xor
aam
cmp
call
dec
subl
mov
xor
out
imul
add
scas
sub
dec
movsl
fsubrs
paddq
fnstsw
xor
in
enter
in
mov
iret
dec
clc
push
ds
and
loope
cmc
testb
ljmp
pop
and
mov
fs
orps
add
test
sbb
in
add
fisttps
add
or
stos
push
xchg
lret
ss
decl
in
mov
jg
jle
js
pop
movsb
mov
mov
mov
sbbb
jmp
gs
sti
mov
mov
mov
fisubs
cmpl
subb
rclb
pop
scas
setne
sub
dec
jmp
repnz
sbb
pushf
arpl
test
jg
jno
sub
roll
inc
test
shr
mov
sti
mov
mul
mov
shlb
cmpsl
mov
dec
mov
insb
push
shlb
jg
gs
scas
jno
cmc
pushf
fisubl
fmull
mov
lea
fdivl
and
stc
sub
and
sarl
dec
and
mov
fbstp
movsb
pop
add
push
xchg
daa
adc
imul
fbld
lret
lds
pop
out
test
xor
in
push
ret
pop
in
xor
in
inc
and
dec
cltd
sub
and
pop
adc
fsubrl
out
int
into
mov
cld
std
jp
sbb
fsts
icebp
xor
leave
add
pop
stos
scas
and
xorb
and
push
jo
and
fbstp
fisttps
loopne
jmp
roll
loopne,pn
jecxz
pop
aas
adc
xor
jmp
nop
shr
mov
mov
jnp
addl
mov
xchg
cs
ret
ret
xchg
xorl
mov
pop
push
xchg
push
popa
mov
hlt
or
and
pop
out
jl
in
dec
jne
in
or
nop
cmc
popa
fdivrl
repz
inc
jg
mov
add
subl
inc
lods
inc
insl
in
clc
bound
lea
aaa
pushf
movsb
jecxz
sub
xchg
popa
ss
mov
xlat
inc
mov
push
jp
inc
stos
ret
xchg
mov
es
push
mov
ret
and
lret
inc
xchg
insb
in
push
nop
inc
fs
jns
insl
lahf
ja
insb
lods
in
mov
fdivl
jl
cmc
stos
push
adc
notb
add
mov
adc
ja
lahf
pop
mov
cld
mov
mov
and
aaa
sbb
pop
jmp
jbe
lcall
loopne
pop
jo
outsb
jg
xlat
xchg
jbe
imul
cltd
in
cltd
xchg
xchg
fldcw
sub
jbe
and
loope
inc
loopne
cwtl
and
pushf
mov
aad
aas
mov
cltd
sub
dec
cli
mov
sub
push
xor
cs
fdivp
mov
mov
pop
add
pop
outsb
push
inc
ret
in
sub
inc
stos
push
and
nop
adc
js
and
xor
jns
pop
inc
add
js
mov
mov
outsb
ljmp
scas
inc
and
in
repz
mov
fidivrl
cmp
jle
dec
add
cmpsb
ror
push
adc
ficoms
iret
jae
sbb
in
dec
bound
and
sbb
or
loopne
mov
rcll
out
mov
mov
aaa
stc
bswap
push
xor
test
jb
add
inc
cmp
shlb
mov
xchg
je
xor
lret
mov
fwait
xchg
loop
xor
jp
jl
cmovle
test
inc
testb
pop
mov
fidivrl
adc
test
insl
pop
jp
inc
popa
fucomi
mov
repnz
jbe
xchg
mov
dec
int
dec
cld
subl
and
push
inc
cmovo
inc
mov
aad
mov
pop
and
mov
rcr
fcmovnb
jle
xor
in
add
pop
pop
jns
call
fwait
push
pop
andb
add
sbb
cmp
loope
stos
cmp
sub
and
rclb
cmp
loopne
arpl
in
sbb
out
fcoms
mov
jl
or
sub
jecxz
dec
lods
push
icebp
adcl
mov
lret
out
test
adc
xor
je
sbb
outsl
mov
lcall
popa
push
jnp
or
push
pop
bound
lret
pop
addr16
add
gs
scas
jl
testb
mov
rolb
xchg
ret
test
insl
cli
push
jo
testb
jle
or
adc
push
push
adc
push
sbb
cmp
les
call
pushf
sub
dec
jge
outsl
jg
stos
repz
das
clc
in
inc
xor
jge
xor
adc
loopne
mov
lock
ret
arpl
cli
movsb
jne
add
or
arpl
hlt
jl
xlat
xchg
in
stos
sti
insl
mov
loopne
mov
mov
les
icebp
inc
inc
mov
lds
pop
sub
xchg
movsl
push
shl
out
push
add
push
popf
and
adc
push
inc
adc
push
push
lods
imul
lods
fsubs
xor
jmp
ljmp
aas
repnz
fstpt
dec
out
leave
and
push
dec
mov
xor
shr
rcr
push
enter
xchg
les
dec
dec
pop
adc
lods
nop
mov
xor
add
bound
pushf
pushf
sub
and
ss
mov
inc
std
cmp
jmp
scas
ficoml
and
into
cld
mov
mov
rclb
dec
fimuls
out
vcvtsi2ssl
frstor
pop
outsb
loopne
or
jp
sahf
xchg
ljmp
lds
xchg
dec
roll
iret
jmp
enter
loope
mov
xor
test
iret
dec
repnz
jo
lods
pushf
and
outsb
pusha
push
or
xchg
cmp
add
xchg
pop
pop
rol
mov
xchg
ret
fisubrs
scas
in
fldl
sub
pop
shlb
ja
or
int
insb
mov
dec
cs
in
mov
adc
cmpb
mov
mov
push
in
mov
jnp
lds
sahf
loope
xorl
movsb
cwtl
jp
mov
pop
lds
movsb
mov
test
push
sbb
jnp
cmp
sub
inc
loop
jno
dec
aaa
leave
add
sub
inc
clc
into
bound
pusha
ret
jns
adc
rcrb
in
loop
cld
dec
test
mov
lods
or
ja
push
mov
cmp
int
lcall
fstps
stos
adc
in
es
mov
pop
lcall
inc
sbb
mov
jecxz
push
mov
mov
push
sub
je
fnstsw
es
sti
mov
fidivrs
or
lret
bound
cs
and
lds
movsl
xor
dec
mov
jno
sub
xchg
fisttpl
cmc
mov
mov
jno
cmp
push
out
jge
adc
push
fisubrl
mov
clc
and
push
pushf
mov
mov
bound
outsl
inc
outsb
xlat
je
mov
nop
push
sub
push
xchg
add
nop
insb
lea
pop
xchg
incb
adc
cmpsb
or
int
cmpsl
dec
sub
mov
add
mov
add
jne
or
incb
lods
xor
xor
sbb
add
jp
rcrb
std
icebp
orl
dec
adc
pop
jno
movsl
mov
fstps
into
sub
jne
dec
mov
mov
push
sbb
dec
xchg
push
push
xchg
cmp
xor
xor
iret
xor
add
enter
fidivs
testb
xor
jb
loopne
push
dec
mov
inc
sub
mov
sbb
out
cwtl
adc
xor
gs
xchg
dec
jle
push
test
xor
or
icebp
add
je
mov
xlat
cld
xor
rcrl
aad
and
inc
mov
mov
scas
mov
push
rorb
in
adc
sub
mov
dec
or
je
cmp
rorl
push
dec
data16
mov
adc
jae
mov
cli
test
out
insl
mov
mov
cmpb
or
mov
jecxz
add
loopne
sbb
int3
sub
cmc
cmp
and
add
sbb
pop
aam
into
mov
and
decl
int3
out
sub
cltd
adc
push
inc
sahf
repz
jnp
xchg
mov
push
inc
rcrb
or
inc
dec
rcrl
xor
mov
push
movsb
into
pushf
imul
mov
lret
adc
push
push
mov
shlb
icebp
ds
int
dec
xchg
lcall
pusha
xor
rclb
mov
dec
pop
xchg
and
loop
cwtl
xor
pop
mov
ret
mov
hlt
shr
in
ss
mov
in
bound
add
sub
imul
cmpsl
xor
mov
dec
lock
icebp
test
adc
cmp
nop
sbb
xchg
lcall
fstpl
xchg
movsl
shlb
xor
xor
cmp
cmpsb
mov
jg
cs
dec
push
jl
call
movb
mov
or
pop
outsb
test
fs
mov
into
sti
test
addr16
dec
js
mov
nop
dec
loopne
xor
hlt
lea
leave
xchg
fmulp
jo
add
test
adc
stos
adc
imul
scas
outsl
dec
bound
js
pushf
push
jne
fcmovb
std
jge
xor
ret
cs
std
pop
add
loopne
jge
dec
stos
fwait
push
dec
shlb
int3
adc
sarb
or
sbb
clc
xor
dec
or
mov
add
xor
sbb
test
xor
sbb
popf
lahf
xchg
movsw
or
enter
imulb
push
shlb
pop
add
out
mov
std
sub
lods
lcall
jb
lds
pop
sarb
mov
mov
mov
sbb
stos
add
repnz
pop
frstor
out
in
xor
sub
ja
out
fs
mov
mov
mull
push
pop
cmpsb
mov
cmp
je
jl
call
loopne
je
and
lds
mov
adc
add
arpl
xor
jne
and
mov
jle
xchg
lds
mov
cltd
xlat
sbb
test
sbb
outsl
insl
clc
mov
sub
mov
mov
dec
cld
xchg
jne
insl
lret
jne
xchg
mov
iret
push
sub
sub
sahf
mov
out
test
jecxz
inc
sbb
cmp
leave
loope
jecxz
push
sbb
push
lods
rcll
jp
push
mov
xchg
and
nop
stos
fsts
mov
imul
push
jne
mov
mov
insl
data16
mov
ret
pop
mov
jbe
dec
std
enter
add
in
or
sbb
popl
push
xchg
jl
inc
push
or
stos
cs
mov
sub
scas
lock
jno
fstpt
insl
push
jg
fstps
in
lret
imul
xchg
les
pop
ljmp
out
flds
ja
push
mov
xchg
adc
ds
in
jp
lret
or
roll
in
iret
cmpl
inc
dec
les
lods
out
pop
cmp
cmpsl
negl
jle
push
cmp
push
adc
pop
sbb
xchg
test
ja
or
and
xchg
adc
notl
push
stc
mov
pop
or
sarb
xchg
cmp
fcoms
lcall
cmp
lods
lret
repnz
jge
std
imul
out
rorw
incb
push
gs
out
or
les
push
inc
xchg
inc
xchg
pop
mov
divl
xor
jp
mov
int3
add
sahf
daa
mov
pop
jp
inc
xchg
dec
xchg
inc
js
fildl
jge
loope
daa
pop
rcrb
push
adc
xor
pop
add
lock
roll
xor
aaa
cmp
sub
push
out
fcmovnb
sbb
mov
imul
std
add
adc
mov
mov
lea
jmp
clc
clc
jle
aaa
hlt
stos
jge
jno
lret
cmp
popf
pop
ret
outsb
cmp
mov
mov
fs
pop
arpl
ja
xchg
adc
std
xchg
cmpsb
jnp
out
int
add
les
mov
jbe
xor
push
cmp
out
subl
jae
rolb
rcrb
mov
or
add
jo
cmp
fcoml
test
dec
mov
add
int
mov
sbb
push
arpl
lahf
test
test
pop
daa
mov
outsb
orps
cmp
call
xchg
rcl
out
xchg
jns,pt
push
scas
add
and
int3
pop
jmp
jmp
cmp
or
dec
movsb
fstpl
adc
loopne
leave
push
add
pop
into
stos
mov
push
clc
adc
xchg
test
lods
push
or
sub
jno
push
js
gs
stos
popf
and
rorb
sti
mov
sbb
adc
icebp
push
in
add
xor
fsubl
dec
lret
mov
out
lock
insb
sub
clc
sub
addr16
repnz
push
push
xchg
fists
pop
inc
incl
and
fwait
popa
icebp
sarb
test
movsb
mov
lret
or
jge
xchg
dec
rcrb
sbb
mov
movsl
daa
cmp
jle
xor
sbb
fwait
add
mov
jne
push
dec
out
subl
leave
xlat
mov
pushf
mov
addb
mov
xchg
inc
lret
adc
loope
dec
in
aaa
sbb
int3
inc
sbb
rcll
cmp
mov
inc
ja
mov
movsb
cmpsl
test
mov
std
pop
pushf
adc
mov
push
adc
pop
mov
inc
sbb
jle
mov
xor
das
shl
xchg
sbb
jle
dec
adc
or
mov
xchg
sbb
mov
xchg
push
add
mov
in
aas
inc
outsl
cmpsb
pop
xor
sahf
pop
push
in
fadds
xchg
test
mov
cli
or
mov
and
lds
add
xor
adc
aas
inc
test
mov
insb
cld
repz
mov
ja
or
outsl
sub
stos
cs
fcmovnb
fsubrl
push
sub
rcrb
and
out
cmp
mov
push
or
dec
push
lahf
jo
icebp
dec
fld
cli
and
adc
cs
cmp
jp
mov
and
movsb
repz
sub
or
and
jp
mov
aaa
call
out
out
mov
addr16
xchg
inc
inc
lgs
mov
mov
adc
fcmovnb
std
outsl
test
mov
or
mov
pop
cmp
push
mov
cmp
std
mov
sar
xchg
pop
cmp
mov
cli
pop
test
mov
test
add
sahf
pop
stos
aas
mov
push
mov
std
or
xchg
mov
fstps
repz
mov
popf
subb
movsl
sub
aaa
pop
rclb
cmp
ds
lods
xchg
out
mov
lods
scas
push
fwait
xchg
idivb
cmovae
dec
lret
insb
stos
fldt
cmp
xlat
test
cmp
lea
mov
sub
fdivrl
ret
fnsave
push
cltd
repz
out
mov
cmp
jge
hlt
push
aaa
popf
push
inc
test
mov
pop
ret
and
and
push
push
je
insb
and
ret
loop
cmp
insb
push
fcom
fsubrl
aam
cmc
pushl
xchg
jns
rcrl
and
mov
mov
stos
pop
sar
clc
jecxz
sub
pop
lods
repnz
mov
xchg
jmp
add
repz
loop
stc
mov
aam
mov
add
sti
add
cmp
xchg
mov
push
and
pop
fwait
movsb
sbb
fldenv
test
movsl
dec
push
loope
sbb
out
outsl
lret
jnp
out
enter
mov
mov
sbb
fstpt
iret
xchg
sub
adc
es
outsb
mov
mov
hlt
arpl
cltd
push
hlt
sub
out
jle
cli
adc
cmp
loopne
inc
sub
or
xchg
test
mov
rcrb
movsb
fucomip
clc
pop
xor
cmpsb
test
and
fists
mov
int3
or
xchg
cmp
dec
add
push
sahf
push
insb
iret
sub
inc
sbb
push
ljmp
pop
cmp
out
daa
call
aas
xor
and
mov
aaa
or
inc
mov
jl
jge
out
insb
sbb
incb
and
jge
out
dec
inc
dec
cmpsb
pop
dec
scas
and
jmp
cs
lcall
mov
mov
sub
bound
inc
pop
pop
push
push
sub
pop
or
inc
hlt
mov
inc
adc
mov
add
out
cld
xor
inc
cmp
stc
cltd
pop
xchg
in
call
mov
in
aaa
xor
frstpm(287
in
dec
or
inc
jno
dec
fstpl
data16
mov
jo
out
mov
inc
add
imul
mov
ficompl
imul
push
push
ss
xor
jo
jnp
push
push
cs
mov
mov
sub
dec
mov
in
mov
clc
push
jg
pop
hlt
push
dec
and
ss
mov
divl
and
mov
pop
and
jne
int3
or
lret
push
and
nop
xchg
mov
xchg
mov
mov
pop
pop
add
stos
push
ret
jns
int
dec
ss
fst
inc
filds
xchg
mov
jb
daa
jle
iret
enter
les
scas
jo
pop
ss
pop
and
shrb
insl
add
dec
sbb
and
xchg
shlb
xor
sub
adc
pop
xchg
xchg
cltd
aas
push
adc
cmp
jae
out
daa
xor
sub
jmp
adc
imul
or
je
jp
cltd
mov
in
imul
add
lahf
pop
lcall
mov
je
adc
cmp
or
pop
scas
testb
out
mov
mov
loope
push
xor
subl
xlat
or
or
data16
test
idivb
mov
sub
inc
and
nop
dec
into
cmc
arpl
imul
popf
mov
jecxz
mov
sahf
int3
pop
inc
std
xchg
mov
add
in
jb
fcom
fsubr
xchg
dec
sbb
inc
xor
jle
hlt
test
mov
pop
stc
xchg
inc
push
fwait
in
mov
ret
mov
mov
inc
jle
test
jo
lea
and
cmovg
inc
movsl
out
mov
cmp
jmp
in
cmpsb
push
cmp
or
mov
fstps
pushf
pop
sbb
sub
mov
add
shlb
sbb
sub
xlat
in
cltd
cmp
aaa
test
stc
mov
mov
sti
ds
or
lds
lods
jnp
mov
fsubrp
es
clc
les
fnstenv
test
lldt
mov
lock
mov
enter
xor
or
je
mov
adc
jo
mov
cmp
mov
push
lcall
paddq
or
push
addr16
add
mov
aam
xchg
jo
jne
cmpsb
mov
jecxz
push
out
or
mov
cmpsl
mov
sbb
or
and
pop
negl
insl
adc
xchg
stc
jne
sbb
jnp
cmpsl
mov
inc
stos
std
adc
xchg
inc
enter
cmpsl
add
data16
mov
lods
jae
inc
sub
pop
imul
loop
add
pop
faddl
imul
jg
cltd
cmp
xchg
cld
int3
add
xor
fiaddl
sbb
mov
mov
push
ret
cli
push
aad
mov
addl
xchg
xchg
out
mov
sbb
cmp
decb
sub
nop
jecxz
inc
mov
icebp
popf
xchg
add
sbb
inc
pushf
cmpsl
loop
mov
adc
repz
addr16
das
test
xor
iret
push
adc
pop
push
jb
push
or
and
imul
jmp
out
movsl
mov
call
jge
aam
push
repnz
insl
mov
xchg
je
into
mov
jae
push
aaa
dec
pop
arpl
jno
cmp
or
mov
into
mov
emms
add
cld
gs
pop
shr
jno
pop
popf
in
xorb
or
test
dec
pushf
jnp
inc
mov
or
js
fbstp
sbb
insl
xchg
or
roll
dec
stc
in
in
fdivl
or
ja
dec
lea
cli
pusha
push
mov
aas
xor
cli
inc
call
xlat
and
mov
fbld
sbb
movsb
sub
inc
insb
push
or
push
add
movsl
out
dec
inc
rcl
dec
adc
mov
sbb
cmpsb
ret
jecxz
popa
div
aaa
movhps
ja
loop
movsl
in
jge
clc
mov
mov
sub
jnp
pop
test
addr16
and
xor
xchg
in
fisttpl
test
fldcw
xchg
mov
and
imul
jnp
dec
mov
and
int3
imul
and
mov
push
xor
mov
xchg
xor
std
divb
cld
pushf
push
inc
push
shr
cld
dec
div
xor
jge
xchg
std
or
clc
mov
fsubl
outsl
cmp
jae
xchg
dec
jne
push
pop
sbb
mov
out
xor
iret
add
data16
inc
push
pushf
jne
and
in
jmp
ret
mov
xor
cmp
jne
mov
rcrb
dec
xor
test
xchg
xor
aad
jle
subl
xchg
aaa
stc
mov
xchg
repnz
mov
jge
iret
inc
lea
xchg
inc
out
in
fbstp
loopne
loop
inc
xchg
lods
lock
lcall
rcrb
push
push
jns
and
jo
jns
mov
push
je
sbb
and
pushf
pushf
sbb
mov
out
mov
bound
fidivs
cmp
xchg
push
dec
adc
adc
mov
enter
add
in
jle
and
inc
mov
push
cli
jp
mov
inc
lods
cmp
cmpsb
push
sbb
aaa
lods
dec
test
cmpsb
aas
mov
pusha
mov
cmp
pop
fbld
fwait
push
jp
aam
push
mov
hlt
push
pop
lcall
xlat
mov
cmpsl
add
inc
cmp
push
rolb
dec
sub
loope
iret
pop
jp
out
add
inc
repnz
inc
jnp
leave
movsb
push
shrb
rsm
mov
mov
fcoms
ret
ljmp
adc
sbb
inc
or
and
jno
fwait
xchg
push
push
sub
mov
pop
xchg
in
dec
or
call
leave
pavgw
arpl
cmp
dec
inc
pop
and
jno
sbb
jmp
out
mov
mov
xchg
jecxz
pushw
mov
hlt
cmp
cli
cmp
and
cmc
outsl
or
outsb
adc
ja
xor
and
sarb
jle
subb
insl
scas
add
roll
jecxz
cld
pop
adc
jne
or
imul
ds
push
sbb
jo
push
fistpll
hlt
dec
ret
enter
pop
in
fmull
aaa
cwtl
je
jge
sbb
mov
push
lds
insl
xor
xchg
cmp
dec
push
inc
insb
outsl
scas
fisttpll
sarl
xchg
push
imul
in
loop
js
in
es
scas
cmp
movsb
inc
iret
movsb
cmc
ds
or
movsl
das
fwait
outsl
and
xlat
sahf
adc
pop
int3
iret
jmp
adc
pop
jp
cld
out
mov
push
mov
dec
sahf
repnz
divl
mov
rcrb
aas
mov
pop
bound
xchg
push
mov
js
stos
sbb
mov
and
add
pop
jno
mov
jne
in
jl
mov
jg
in
cmp
or
pop
jo
push
inc
mov
test
insl
aaa
inc
lret
cli
stos
sub
push
adc
dec
mov
mov
ret
and
call
lods
pop
jle
sbb
jb
cmpsl
ja
mov
push
pushf
dec
hlt
push
into
insl
jecxz
jnp
dec
dec
popa
xlat
lds
and
mov
out
xchg
mov
out
testl
out
cmp
leave
mov
fsubrs
jmp
mov
push
inc
leave
loopne
sub
int
and
push
call
jb
sub
rcl
shl
out
cltd
cmp
lods
dec
popf
cli
fcom
xor
int
fwait
aam
int
int3
into
mov
xchg
push
sub
dec
jo
jg
xchg
pop
scas
pop
fs
aas
imul
iret
cmp
cs
mov
inc
ja
or
dec
or
inc
sub
enter
insl
fidivrl
cmp
mov
mov
dec
leave
mov
outsl
add
sahf
nopl
cmc
dec
test
fcompl
mov
mov
int3
dec
movsl
popa
pop
xorb
push
push
dec
std
jl
lods
popa
jns
int
mov
pushl
mov
mov
sbb
imul
insb
inc
fists
test
aaa
movsl
xor
pop
ss
fcompl
xor
and
mov
pop
pop
xor
negb
lods
scas
popa
ret
imul
roll
movsl
hlt
mov
sub
cmp
rorl
push
orl
inc
imul
and
inc
pop
push
cld
fldenv
mov
shrd
repnz
scas
pop
loopne
ss
in
mov
popa
lret
jns
sar
inc
ljmp
cmp
outsl
ljmp
jo
out
lret
lods
inc
add
outsl
arpl
aad
out
sbb
sarl
ficompl
mov
cltd
lahf
and
mov
into
addr16
or
inc
cmp
dec
outsl
mov
shll
or
push
push
in
pop
dec
or
inc
lds
push
loopne
and
cli
jno
in
sub
or
scas
sbb
fcmovbe
testb
jmp
xchg
xchg
lcall
mov
xchg
inc
mov
sub
fwait
mov
movsb
sub
jne
int3
in
js,pn
xchg
popf
setle
enter
jl
imul
cmp
add
mov
loopne
arpl
mov
jecxz
push
sbb
dec
push
imul
inc
jns
push
in
pop
push
cmp
push
rcr
dec
mov
sti
fidivl
cwtd
sub
enter
lret
inc
mov
add
rolb
or
cltd
push
sub
addr16
test
das
dec
scas
scas
insb
cld
sub
dec
lret
movsb
fcmovnu
xor
mov
jle
fisttpll
push
mov
xor
fldl
jg
je,pt
clc
rorl
xchg
xor
loop
push
sub
xchg
xchg
scas
aad
int3
fs
rsqrtps
and
int3
jbe
in
cmpsl
push
arpl
xor
scas
fstps
out
aam
push
xchg
pushf
std
adc
pop
cmp
jge
insb
sti
push
inc
int
push
push
inc
inc
dec
shrb
sbb
and
dec
adc
data16
inc
xchg
testl
adc
rolb
push
cmp
push
mov
or
xchg
sbb
orl
aad
push
cmp
mov
test
xchg
pusha
adc
push
push
add
daa
and
jecxz
mov
inc
enter
mov
cmp
inc
push
sub
scas
test
and
out
jmp
icebp
das
jmp
imul
rcll
enter
icebp
iret
out
popa
outsb
in
vcvtsi2ss
in
ja
enter
pop
sbb
mov
rol
push
repnz
int
adc
iret
notl
xchg
inc
adc
jb
and
and
pushf
sarl
out
xchg
ss
dec
lds
lock
mov
lock
mov
aad
mov
adc
daa
mov
push
xor
jns
ret
dec
js
lods
jno
lret
ds
hlt
cmpsb
cld
popl
repz
xor
pusha
xor
imul
push
mov
lods
add
nop
or
hlt
and
or
mov
fwait
sub
add
adcl
clc
pop
fdivs
mov
in
cltd
imul
mov
push
cltd
mov
out
insb
inc
fld
out
data16
popa
jno
rorl
test
adc
scas
mov
or
fisubrl
cmp
mov
and
mov
adc
jnp
jnp
rolb
inc
mov
push
jns
addb
lret
xor
shl
icebp
hlt
pop
xorl
fidivs
sbb
enter
gs
push
mov
sub
jle
push
fxch
cmp
mov
push
mov
push
xchg
shlb
je
xchg
add
xchg
lahf
rcll
lock
stos
sbb
dec
xchg
sbb
jne
and
cmp
xor
sbb
test
outsb
cwtl
pop
mov
shll
push
xchg
push
mov
and
sahf
inc
dec
enter
xchg
push
dec
pusha
push
push
mov
mov
xchg
cli
into
aaa
cmovge
nop
mov
mov
lds
out
push
push
adc
arpl
add
adc
pop
pop
lds
rcrb
dec
or
push
fwait
jnp
aaa
xchg
in
out
and
imul
cli
push
mov
cmc
or
sbb
gs
mov
inc
dec
add
inc
bound
bound
jge
mov
mov
insl
mov
popf
in
sub
sub
jno
or
push
jbe
out
test
scas
jbe
lods
js
out
sbb
sarb
mov
in
jo
cmp
daa
jno
dec
dec
rcl
rcl
lret
and
mov
inc
popf
test
and
imul
cltd
loopne
jg
and
gs
dec
orl
and
dec
push
jge
xchg
pop
and
push
aam
mov
mov
mov
das
mov
hlt
sub
pop
push
inc
xchg
inc
sub
cmp
cmc
dec
or
xor
adc
out
and
loopne
inc
and
adc
mov
call
xchg
gs
in
lds
test
test
cs
int
cltd
xlat
or
dec
xor
icebp
jo
lods
jecxz
lds
fcmovu
jno
xchg
sub
xchg
add
ror
out
mov
adc
cld
repz
cld
mov
xchg
push
mov
lret
cmc
pop
fcomps
adc
mov
shll
cltd
jb
cli
pop
fisttpl
sbb
aad
ret
xor
mov
in
icebp
adc
je
fcmove
sbb
ljmp
imul
mov
lds
mov
stos
xor
leave
lcall
dec
in
aam
sahf
lds
pop
addr16
dec
mov
push
cmc
fwait
sub
jle
loop
mov
mov
pop
pop
jg
inc
inc
arpl
sarl
or
test
push
or
push
imul
sub
jno
shl
cmp
aam
pushf
jne
push
adc
clc
mov
xor
inc
or
cmpsl
mov
sub
mov
xchg
push
mov
pop
push
add
es
imul
pop
cmc
sub
xor
cmp
jns
jbe
pushf
je
xor
jno
sub
mov
std
fwait
test
int3
jg
in
shrb
mov
movsb
jae
lods
imul
adc
repz
push
inc
add
jns
and
lods
inc
fsts
fistpll
and
and
lcall
adc
scas
fmulp
adc
cwtl
cli
ficompl
cmpl
lret
adc
cmpsl
mov
mov
adc
loop
fucom
rcr
and
or
lea
scas
stos
dec
mov
mov
cmp
aad
dec
sbb
mov
sti
outsb
test
idiv
ret
cs
movsb
push
popa
dec
inc
dec
mov
or
sub
sub
and
and
and
jmp
dec
popf
mov
xor
adc
lahf
pop
sub
cli
push
iret
mov
fmull
adc
test
das
pop
imul
stos
imull
shrl
sbb
scas
cmp
fiaddl
gs
test
fsubrl
inc
sub
movsb
outsl
test
hlt
jp
les
or
loopne
push
xchg
and
xchg
cmc
insl
mov
xor
and
out
push
leave
mov
sbbb
jl
ja
pop
jne
jne
orl
sbb
add
cwtl
xchg
insb
jecxz
pop
dec
or
call
mov
or
jnp
daa
lret
int3
test
jnp
cmp
jnp
std
jo
test
inc
jle
into
cmp
fs
outsl
sbb
sub
adc
in
jae
adc
outsl
add
inc
and
subb
mov
jno
lret
add
sbb
enter
pop
or
xchg
push
shll
mov
and
sarb
pop
sub
dec
fistpll
negb
jb
mov
rorl
fidivl
fidivrs
push
nop
test
icebp
push
outsb
cmp
adc
dec
fiadds
mov
aad
out
fwait
jg
or
lret
addl
inc
jg
int
outsl
xchg
icebp
pushf
xlat
movsb
inc
cmovns
push
cmpsb
aaa
pop
xchg
push
mov
js
cltd
fcoms
fisttpll
mov
cmp
dec
push
ss
jns
into
cmp
incb
mov
push
pop
lods
or
mov
mov
aas
sbb
xor
arpl
add
insl
cmc
std
or
pop
jo
jo
jg
mov
jl
or
popf
push
icebp
cmp
or
sbb
adc
jae
mov
xchg
mov
call
push
or
mov
and
std
pop
insl
repz
clc
pop
outsl
fsubs
xor
and
in
pop
push
ss
pop
jb
mov
dec
lahf
hlt
mov
insb
decl
test
mov
scas
sbb
cmc
insb
xchg
mov
push
add
and
sbb
inc
out
shll
mov
in
or
inc
dec
mov
shll
cmpsb
push
in
adc
dec
pusha
lea
mov
stos
inc
je
push
fldenv
lods
adc
inc
fsubrs
syscall
mov
mov
pusha
xchg
jmp
icebp
iret
push
jae
fldt
mov
pop
sub
cld
jge
icebp
and
daa
cmpsb
fadds
or
xor
jecxz
sub
imul
jmp
jno
pop
lods
inc
lret
lock
es
les
push
mov
iret
js
sbb
out
add
fwait
outsl
movsl
pop
int
and
cmc
aaa
and
push
imul
incl
lcall
loope
fisubl
sub
mov
cltd
ljmp
push
out
sub
push
fimuls
fisubrs
cmp
stos
cmp
inc
cmp
pop
add
sub
sub
sub
outsl
lds
imull
dec
out
adc
dec
mov
daa
adc
inc
jnp
popf
aaa
js
faddl
dec
popf
xchg
push
jmp
dec
push
xor
inc
xchg
cli
ljmp
out
stos
pop
in
xchg
sub
inc
loope
sub
or
mov
pop
into
das
je
add
fwait
mov
repnz
mov
push
mov
jne
or
rorl
es
test
aas
add
cmp
mov
mov
push
adc
xchg
bound
sub
jmp
pop
cmp
bound
sbb
leave
fistpl
and
inc
clc
sbb
out
mov
aaa
pushf
xlat
and
push
gs
aaa
jg
dec
lret
cmp
sub
loopne
and
test
testl
fdivs
les
cmpsb
stos
and
jae
push
bound
sbb
xchg
loop
cmp
cmpsl
add
sbb
mov
movsl
std
cmp
aas
lret
xchg
jg
push
es
jge
adc
mov
std
mov
ret
cmp
ljmp
ret
mov
pop
mov
xchg
cmpsl
mov
mov
push
cmpsb
adc
add
mov
fimull
jno
ds
shr
iret
scas
cmp
arpl
dec
fisubs
sub
sub
add
rcl
js
pushf
pusha
inc
mov
adc
outsb
scas
pop
push
int3
mov
mov
pusha
or
bound
xchg
mov
hlt
mov
cmp
rcr
sarl
cmp
dec
and
cmpsb
fistps
cmp
xlat
xor
rorb
pop
int3
jmp
movsl
in
xchg
in
push
fwait
lods
outsl
xor
movsl
push
mov
insb
addr16
mov
xor
dec
mov
add
mov
popa
xor
jle
push
mov
sbbl
pop
call
enter
adc
xor
int3
adc
sbb
int
fiadds
and
inc
and
xchg
mov
jo
mov
push
pop
fistps
add
sti
xor
cltd
xchg
mov
pop
xchg
add
cmp
daa
enter
lcall
mov
cmpsb
add
push
les
jg
iret
mov
dec
fadds
sub
or
xchg
add
js
and
cmc
inc
pop
sbb
lret
push
enter
mov
mov
dec
push
mov
shl
dec
push
fisubs
pop
inc
add
jae
sbb
push
cmp
jle
xchg
bnd
stos
ficoms
adc
cmp
test
in
add
in
mov
push
lods
xchg
arpl
or
mov
loopne
xchg
scas
std
fdivl
pop
dec
xchg
push
xor
inc
mov
js
jmp
scas
subl
pop
jge
lcall
addr16
jne
xor
lods
sbb
test
inc
in
rol
cwtl
fistl
fs
cmp
or
sub
cs
arpl
pop
out
sarb
scas
gs
imul
and
lea
es
iret
sahf
subb
movsb
loopw
movsl
ds
mov
insl
adc
outsl
sub
jp
or
mov
lret
shrb
cmp
mov
adcl
jp
outsb
adc
cmp
cmp
fistpl
mov
cmpsl
push
or
enter
xchg
cmp
lahf
inc
sbbb
mov
add
mov
imul
stos
sti
and
gs
scas
xchg
jmp
mov
repnz
lock
out
inc
pop
sbb
dec
mov
in
pusha
xorb
fstpl
aam
inc
addb
inc
push
cld
xorb
ss
and
push
pop
pop
out
jmp
mov
xor
cmpsl
adc
fisttpll
mov
insb
and
gs
mov
xchg
fstpt
sbb
sub
jmp
addr16
xchg
push
dec
je
into
cmp
js
lds
int
pop
imul
fadds
jb
stc
xchg
movsl
test
cmp
xorb
in
dec
arpl
cmp
loopne
mov
adc
inc
sub
call
mov
dec
clc
xor
mov
scas
mov
cld
jo
ds
enter
subb
pop
pop
adcl
cld
inc
push
pop
dec
fdivrl
popa
xchg
push
das
push
pop
ja
or
outsb
add
jne
cmp
sti
enter
add
or
xchg
mov
flds
jmp
xchg
sub
aas
and
lods
and
enter
adc
push
and
lret
xchg
es
xor
add
ror
push
lock
mov
test
xchg
pop
lods
push
adc
fwait
cmp
mov
pushf
pop
jnp
sarb
lgdtl
mov
push
add
dec
and
das
xor
inc
fwait
adc
xchg
pop
or
or
mov
lahf
sub
dec
push
repz
movsl
mov
inc
imul
stc
rorl
and
pop
and
call
push
aad
leave
jne
mov
mov
xor
idivb
dec
sbb
mov
adc
and
cld
push
cmp
into
mov
pop
jnp
inc
jg
lret
xchg
sbb
push
mov
adc
or
jle
cmp
pop
hlt
inc
push
mov
enter
xchg
fistpll
stos
sbb
mov
xchg
xchg
cmc
push
sub
mov
lahf
lret
add
fsts
jb
and
mov
scas
jae
sbb
in
cmpsb
outsb
pop
aas
jne
pop
out
hlt
inc
pusha
and
xor
ss
push
sbb
push
mov
lret
mov
loopne
dec
js
addr16
sarb
and
mov
stos
xor
call
inc
lret
popa
mov
sub
popa
lret
fnstenv
das
into
or
loopne
in
bound
push
mov
xchg
pop
std
aas
jnp
sub
and
xor
add
addr16
ret
aam
cld
pop
aad
roll
int
movsb
and
push
mov
pusha
mov
sub
add
lock
sbb
es
cmpb
jne
and
xchg
jle
loop
or
xchg
jb
mov
cmpsl
jecxz
lcall
fidivrl
xor
lods
sbb
cmpsl
or
inc
fsubl
cli
dec
or
xchg
idivl
aam
jecxz
mov
aas
vcmpps
test
sub
cli
out
pop
mov
dec
in
in
mov
mov
jne
popa
std
push
into
xchg
mov
loope
ss
xchg
xchg
out
push
pop
sub
sub
pop
dec
push
repnz
and
lret
pop
out
pop
cmpsl
vcvtps2pd
sub
or
sbb
fcmovu
aas
mov
add
pop
xor
sti
sarb
or
stos
dec
push
imul
sub
pusha
and
pop
fwait
mov
cmp
insb
cmpsb
dec
pop
cmp
mov
and
xor
jo
into
push
mov
or
mov
mov
xchg
sbbl
sbb
sub
lret
push
cmc
sbb
xchg
adc
adc
or
rsm
fnstenv
mov
lret
lock
mov
cmp
hlt
das
push
repnz
mov
and
jnp
cmpsb
leave
cmp
add
mov
test
cmp
lds
shr
adc
aas
xchg
popl
xor
mov
cli
jg
mov
jbe
xor
pop
mov
sarl
clc
mov
and
adc
adc
push
xchg
inc
add
and
pop
push
inc
rclb
lcall
mov
xchg
push
imul
mov
add
add
push
and
fsubrp
ret
cmp
into
rcr
mov
dec
mov
sub
mov
in
mov
in
push
inc
mov
shl
leave
in
sbb
pop
pop
sub
dec
xchg
aas
loopne
sbb
xchg
jae
stos
dec
sbb
push
cmpsl
jno
test
cmp
fisttpll
pop
mov
test
dec
mov
fwait
into
pop
and
lcall
and
cld
pop
xchg
in
scas
xor
sbb
xor
addr16
das
out
test
cmovne
cmpsl
movsb
es
sub
xchg
pop
mov
aas
push
add
out
add
sub
mov
push
xchg
add
inc
rclb
aad
std
mov
insl
mov
outsl
notl
sbb
dec
cmpl
mov
xchg
jb
test
pop
adc
fldl
cmp
mov
ficompl
bound
outsl
pop
fiadds
in
sarb
pop
jns
movsb
call
ret
cmp
jl
sarl
shll
lods
imul
jo
dec
adc
add
jmp
sub
mov
cmp
fnsave
into
lds
dec
int
mulb
sub
adc
xor
mov
add
test
push
fistl
cmp
enter
pop
xchg
jp
pop
jae
inc
jp
xchg
xchg
jne
cmp
jle
mov
rol
insb
xchg
aaa
pushf
addl
xchg
jns
in
in
lret
sub
pop
mov
stc
loopne
lret
add
inc
xchg
pop
imul
adc
and
out
and
adc
and
addb
arpl
sbb
popa
and
ficomps
fists
or
addr16
add
xchg
mov
jne
or
pop
pop
dec
lods
pop
ja
repz
and
imul
push
loope
and
test
sbb
xlat
insl
cmpb
imul
adc
jle
mov
dec
xor
adc
and
mov
nop
pop
aam
xchg
into
outsb
out
test
adc
inc
xchg
lea
mov
fs
xchg
push
xor
fs
aad
jne
stos
fsubl
mov
or
sbb
mov
mov
pop
sbb
nop
filds
pop
cwtl
push
in
adc
dec
lcall
imul
jns
rcll
pop
into
push
test
inc
fsubs
aam
jb
adc
push
sbb
lods
jns
jno
leave
out
jmp
out
xchg
inc
daa
jge
lcall
aad
cmp
sbbb
mov
jb
add
loopne
mov
and
adc
cld
jle
xchg
aad
out
shrb
and
je
pop
xchg
sbb
xor
pop
aas
mov
mov
or
iret
cld
pop
orb
jl
es
leave
je
addr16
pop
push
jnp
lret
test
daa
leave
push
pmullw
dec
adc
mov
and
mov
xor
lods
dec
fisubrs
xchg
mov
inc
jo
lds
insl
popf
xorb
bnd
fsubr
or
dec
pop
into
lods
mov
xchg
pop
push
sub
pop
xchg
dec
cld
lea
cmp
jle
loope
xlat
jns
punpckhbw
pop
cmp
xor
jnp
add
imul
stc
add
xor
in
or
out
mov
fwait
adc
fidivrl
pusha
fcos
loop
outsl
iret
fistpl
lods
lock
por
ret
aam
movsb
and
pop
ret
dec
sbb
bnd
pop
mov
inc
stos
clc
clc
adc
inc
jae
push
test
lret
clc
js
popa
push
pop
cmp
xchg
pop
stos
mov
das
icebp
xchg
por
xchg
mov
sahf
rcll
jb
loope
in
ret
mov
jae
dec
negb
call
jae
xchg
les
adc
les
xlat
sub
iret
out
mov
leave
hlt
or
mov
pop
fadds
push
ss
jb
dec
ds
xor
jp
in
rorb
icebp
lcall
push
or
lock
nop
push
je
sub
jecxz
jmp
enter
fisttpll
les
cmpsb
and
cmpsb
jnp,pn
sub
sub
ficomps
xorb
sbb
add
int3
fdivrp
roll
sbb
je
daa
jl
int
or
mov
cmp
popf
test
repz
mov
xor
gs
pop
mov
push
and
aam
insl
push
out
test
test
inc
insb
jnp
repz
sbb
ficoms
sbb
xor
jb
pop
sbb
outsl
negl
and
fstl
mov
and
xchg
cmp
into
filds
or
and
imul
inc
mov
or
cmp
ds
mov
mov
mov
data16
push
out
roll
jo
add
in
arpl
testb
lret
fdiv
outsl
pop
cwtl
out
out
cld
pop
lock
sbb
popa
sub
pop
push
jns
out
mov
lret
xlat
sahf
adc
lods
cmc
mov
mov
imul
test
movsb
push
jge
mov
adc
pop
popa
jg
jne
inc
iret
je
out
xchg
mov
aad
fcmovb
sbb
shlb
orb
sub
and
test
fcmovnbe
lret
or
inc
aam
xchg
jns
sti
sahf
repz
jne
fidivs
into
test
leave
dec
mov
sahf
add
mov
pop
shl
xchg
lahf
jg
sbb
pop
in
fsubrl
test
mov
push
push
shl
or
sub
loop
pop
mov
mov
insb
inc
dec
movsb
xor
js
bound
sbb
addb
sbb
mov
or
clc
push
imul
mov
dec
add
nopl
push
fldenv
mov
mov
mov
push
dec
push
sahf
and
adc
cltd
push
or
push
movsl
nop
imul
mov
sub
xor
insl
mov
cmpl
pushf
or
out
mov
test
or
ret
fsubrl
or
jb
mov
adc
push
xchg
xor
dec
sbb
inc
adc
adc
leave
adcl
xor
lock
and
test
mov
out
mov
popf
mov
and
mov
sbb
stos
push
mov
mov
cmp
push
icebp
push
sbb
icebp
popa
test
and
sub
int3
pop
test
daa
and
mov
pop
es
adc
push
fimull
jg
xor
nop
cmpsl
xchg
out
push
pop
fwait
loope
je
in
aas
cmp
xchg
xor
popf
into
inc
dec
imul
xchg
adc
in
push
and
dec
arpl
jp
mov
adc
lock
je
pop
test
xchg
adc
add
xchg
popf
mov
push
sbb
cs
shlb
jp
bound
stos
xchg
aam
pop
cwtl
insl
and
cmp
lahf
jne
cmp
leave
or
dec
sti
ds
inc
int
lahf
enter
xor
jle
enter
fisubl
jo
mov
mov
lret
negl
mov
rep
push
int3
push
stos
and
inc
jbe
negl
ljmp
mov
lahf
nop
pop
scas
in
fcmovu
lea
inc
fmuls
hlt
sub
orl
inc
clc
bound
mov
add
orl
icebp
xor
sbbl
pop
mov
add
sahf
inc
pop
fiadds
outsb
das
push
icebp
inc
enter
adc
test
ja
imul
jnp
jge
mov
add
or
push
fmulp
nop
scas
rclb
push
shll
xchg
dec
sbb
out
adc
sbb
pop
push
fcomps
jbe
push
std
aas
jl
jmp
rorb
jl
movsl
mov
gs
xor
and
add
stos
daa
inc
xlat
ret
cmp
cmp
test
stos
inc
pop
pop
push
sbb
sbb
xor
dec
fwait
dec
or
push
push
mov
cltd
mov
or
jne
lret
mull
nop
jnp
sub
push
xchg
inc
jno
lock
pop
and
add
addr16
imul
jmp
insl
stos
andb
pop
loop
into
sub
and
jns
outsb
mov
rclb
lock
aad
mov
std
cmp
aad
inc
scas
cmc
outsb
push
and
mov
mov
dec
mov
mov
into
insl
mov
inc
jns
es
cld
fcompl
mov
out
sub
and
scas
insb
sarl
add
cmp
sub
inc
inc
test
inc
mov
ljmp
sti
out
xor
ficoml
pushf
inc
rclb
mov
sbb
lahf
mov
push
sub
pop
mov
xchg
jns
xchg
into
imul
call
mov
fadd
lahf
icebp
movsb
ds
pop
movsl
mov
imul
sub
pusha
int3
mov
popf
adc
or
pop
mov
ss
jbe
mov
cwtl
dec
push
and
adc
loopne
dec
xchg
adc
jnp
mov
shll
dec
mov
scas
in
or
int
add
je
pop
sub
jl
push
mov
cmpsb
cmp
add
inc
mov
lock
repz
jns,pt
decb
xchg
add
mov
frndint
sbb
cmp
aas
push
leave
mov
ror
xchg
dec
ja
mov
mov
dec
push
roll
and
xor
mov
jecxz
push
jno
loopne
mov
cwtl
xor
sub
aaa
arpl
or
popa
push
sub
lret
testl
push
ret
insb
jbe
push
mov
std
bound
js
test
inc
sbb
sbb
stc
or
mov
sub
pop
in
lods
testb
or
popf
mov
mov
sub
and
fstpt
xor
dec
sbb
call
aas
aad
inc
loop
jno
lea
xlat
hlt
repnz
push
insb
daa
mov
daa
popa
das
repz
or
jmp
adc
lea
pop
movsl
out
xor
pop
jae
inc
pop
outsl
dec
add
cwtl
adc
pop
je
pop
jno
push
ja
cmp
clc
adc
in
call
ret
or
jmp
movsl
add
dec
adc
and
xor
xor
inc
sarl
adc
outsb
test
sbb
sbb
cli
mov
lds
ja
test
lds
outsb
inc
cmc
sbb
mov
jns
leave
rorl
pop
jnp
cwtl
fldz
out
shr
pop
sbb
dec
dec
xor
xchg
repnz
scas
js
pushf
lock
push
xor
loopne
lss
loop
inc
or
sbb
icebp
loope
loope
hlt
xchg
fdivrl
mov
mov
pop
repnz
clc
adc
fs
mov
pop
outsl
in
movsl
fisttpl
mov
sbbl
fdivl
pop
mov
arpl
push
ss
sar
adc
fidivl
jns
and
jb
jecxz
inc
jbe
sub
add
jl
outsl
or
imul
mov
cmp
sar
nop
sub
push
push
ss
dec
imul
adc
ds
push
cmpb
dec
sbb
out
in
div
inc
add
jge
jp
test
push
lods
ds
lcall
add
and
mov
cmp
pop
cmpsl
add
cld
cmpsl
int
add
and
mov
sbb
hlt
inc
add
addl
dec
lea
cmp
je
dec
orl
jmp
pop
in
xor
cmpsl
shl
dec
sub
jecxz
std
sbb
or
and
movsl
jge
imul
lds
push
push
mov
and
inc
mov
xchg
mov
lahf
bt
pop
jo
mov
std
pop
sbb
cmpsl
cmp
or
xor
xor
jl
dec
and
mov
inc
in
cmc
cli
int
or
jmp
sub
cmp
dec
ficoms
std
icebp
addb
fdivl
jg
movb
dec
test
pop
or
dec
jb
or
pushf
dec
stos
xor
insl
outsl
mov
mov
lea
add
or
jbe
jle,pn
cmpb
push
sbb
scas
ss
jb
jmp
jno
or
jnp
sbb
mov
xchg
aam
in
daa
fsts
mov
jg,pt
dec
dec
push
xlat
iret
add
int3
popf
and
into
cmp
outsb
int3
mov
arpl
leave
shr
and
aas
scas
mov
jl
mov
or
icebp
adc
lcall
in
addr16
push
xchg
push
inc
mov
jl
jbe
out
cwtl
mov
hlt
bound
mov
imul
cld
pop
fs
nop
test
in
out
push
imul
call
incl
fildl
ror
popf
dec
and
fmull
fdivl
testb
lods
je
cmp
aad
add
call
mov
outsl
imul
movsl
pop
dec
js
adcl
push
icebp
inc
jmp
mov
clc
stc
inc
mov
jmp
subl
xor
or
jmp
faddp
ss
adc
or
push
repnz
out
andl
loop
lcall
imul
mov
jbe
sub
sbbb
push
in
sub
xchg
sbb
inc
pop
push
push
test
les
sarb
nop
xchg
mov
pop
adc
xor
add
cmp
lea
mov
xchg
mov
xor
mov
xorb
inc
inc
ret
repnz
lahf
jge
adc
ds
jle
and
shl
fnstcw
mov
call
pop
adc
mov
call
addr16
stos
mov
je
xor
rorb
bsr
adc
sbb
cld
xchg
jle
mov
mov
and
push
lods
dec
and
cmc
push
jo
or
or
ds
jae
push
jns
adc
cwtl
int
xor
flds
add
std
add
xor
test
pop
fsubs
cmp
fs
cli
dec
lcall
inc
lgs
fidivs
and
push
sub
add
cmp
lods
jno
push
sbb
xchg
xchg
insl
aaa
leave
mov
dec
mov
jno
add
arpl
add
xorl
repnz
lret
fcoms
sahf
test
lea
push
fcmove
add
xor
push
mov
adc
adc
enter
rcll
mov
sub
lret
rcrb
and
mov
pop
ror
rcl
push
leave
mov
sti
stc
cmp
or
xchg
int
sub
outsl
or
jmp
ljmp
lds
push
stos
add
imul
lods
mov
mov
stos
sbb
aad
add
orl
ret
jno
inc
xchg
jns
shr
mov
pushf
sbb
push
mov
insb
add
sbb
icebp
mov
pusha
pop
outsl
fisttpl
dec
jp
mov
jbe
sub
fyl2xp1
test
inc
sti
fs
dec
push
testb
lods
push
test
adc
dec
pop
aas
pop
push
adc
and
and
cmp
xorl
enter
xchg
cld
sarl
vcomisd
mov
xor
lret
mov
andb
lahf
push
adc
rol
outsb
mov
cmp
cli
cmp
xor
jo
aad
loopne
lret
mov
sub
push
pop
cwtl
incb
enter
pop
jnp
outsl
lahf
mov
hlt
psllq
into
cmp
cmp
adc
call
cmpsl
cmp
loope
sbb
inc
fcompl
xchg
cmp
test
sub
je
pop
int
jge
imul
fdivr
inc
lret
inc
inc
dec
bound
out
pusha
dec
xor
jecxz
adc
imul
cwtl
insb
pop
adc
xchg
jge
inc
inc
sub
cmc
push
jno,pt
data16
lock
cmp
add
mov
imul
addr16
mov
out
inc
add
int3
cmp
cmp
dec
fwait
mov
andl
and
xchg
pop
test
cli
gs
out
lds
daa
vmulsd
in
int
push
xchg
cs
leave
js
sub
xchg
iret
jp
aad
icebp
push
sbb
insl
movsb
iret
stos
mov
daa
and
fnstenv
pop
push
clc
dec
mov
mov
in
mov
pushf
mov
daa
test
orl
loopne
pop
mov
ffreep
cld
inc
cld
xchg
and
je
scas
addb
inc
fsubrl
sbb
lods
fwait
into
jns
lret
cmp
sub
out
loop
sbb
xchg
dec
sub
jne
mov
cmp
out
jmp
adcl
pop
inc
mov
jmp
or
jmp
mov
adc
jns
jae
sub
andb
jle
pop
jl
jo
dec
xor
std
xor
aad
and
jecxz
mov
mov
push
leave
jo
insb
lea
sbb
dec
test
enter
push
aaa
dec
xchg
or
movsb
retw
dec
dec
jl
sub
add
jmp
lcall
ds
jbe
out
cltd
in
subl
pop
and
or
mov
scas
andl
inc
pop
jae
inc
loope
xchg
sub
push
ds
mov
in
stos
push
rorl
dec
mov
mov
ror
clc
ja
inc
xor
in
jle
enter
inc
dec
cmp
int
rcrl
mov
insb
xchg
stc
mov
out
jno
sub
push
cltd
cmp
movsb
in
es
cmp
clc
jns
adc
and
mov
and
mov
clc
out
xchg
push
cmp
popf
cmpsb
ja
addr16
xchg
cmc
inc
mov
fimuls
mov
add
leave
test
and
cs
loope
push
daa
lcall
and
mov
xchg
sub
or
sbb
lea
dec
pop
fdivs
cmc
into
ja
imul
jbe
mov
sub
sub
fs
rcll
fistpl
and
in
sbb
add
lock
pop
stos
jb,pn
mov
dec
pop
sbb
fisttps
pop
jp
jno
xor
push
xor
ja
adc
and
outsl
call
xchg
mov
iret
sahf
cs
repz
mov
leave
mov
bound
je
imul
icebp
dec
jb
add
orb
lcall
pop
and
dec
leave
inc
cmp
inc
fwait
nop
mov
pushf
sahf
sub
lcall
gs
jp
jle
mov
jmp
pop
int
mov
mov
sbb
mov
or
fidivrl
mov
test
add
jne
cmp
shrb
mov
mov
adc
cmp
inc
dec
rcrl
sbb
lods
pop
mov
ret
lods
mov
jecxz
mov
push
pop
out
iret
and
mov
inc
dec
adc
and
xchg
and
pop
jae
push
add
sbb
adc
and
jb
jno
pop
movsl
lret
daa
fsubr
and
clc
pushl
stc
into
xor
nop
imul
sub
insl
sbb
pop
lret
sbb
mov
subl
inc
mov
xor
aaa
int
xchg
stos
xchg
xor
rcll
cmp
cltd
fnstenv
cmp
xchg
bound
imul
inc
imul
int
hlt
pusha
aaa
mov
mov
adc
pushf
das
adc
adc
inc
adc
and
push
in
pop
pop
hlt
sbb
ret
xchg
loopne
cmpsb
lret
wrmsr
sar
jae
xlat
fbstp
jb
push
stos
jbe
fsubrs
add
mov
jo
xchg
addr16
lea
stc
fs
out
pop
stos
pusha
sbb
add
jo
std
out
pop
xchg
pusha
sbb
xchg
incl
push
cmp
pop
mov
pusha
test
cmp
jle
in
mov
jnp
cmp
pop
scas
pop
and
sbb
or
xchg
sar
addr16
mov
xlat
cs
lahf
pop
jge
loopne
dec
adc
clc
mov
adc
or
ret
lret
mov
hlt
mov
mov
in
mov
add
dec
or
add
ljmp
mov
cmp
movsb
adc
neg
mov
imul
pushf
testb
xchg
cmp
cmp
icebp
lahf
mov
dec
jo
jl
cs
stos
mov
mov
mov
pop
aaa
insb
mov
out
pop
das
pop
xchg
dec
dec
outsl
push
dec
and
shlb
mov
mov
or
xchg
or
mov
loopne
dec
out
inc
push
cwtl
pusha
sub
or
pusha
or
adc
mov
push
mov
outsb
sahf
dec
xlat
int3
pushf
test
ljmp
mov
adc
xchg
jne
dec
jecxz
cmpsl
jno
andl
cmp
cltd
jnp
or
sub
xchg
lret
into
adc
fld
pop
push
push
xchg
jecxz
or
mov
pop
xchg
std
jno
repz
jecxz
cli
adc
sbb
or
bound
loopne
mov
testl
imul
mov
or
insb
test
adc
pusha
outsl
jne
js
cld
mov
mov
scas
cmp
popf
sahf
sbb
mov
xchg
clc
cmp
lods
adc
lcall
xlat
jno
icebp
push
add
in
mov
push
adc
sub
incb
test
bound
sbb
pop
outsl
xchg
inc
js
mov
cltd
cmp
idivl
aam
aam
sti
sahf
mov
jle
daa
xor
adc
test
mov
cltd
mov
xor
xchg
dec
sub
mov
add
pop
dec
lock
inc
mov
push
jmp
sbb
jns
adc
lahf
mov
inc
xor
sub
lret
pop
or
out
lret
repz
xlat
cmp
push
sbb
cmp
insb
mov
xchg
in
es
xor
cmp
push
sub
leave
cmp
lcall
pop
fdivr
mov
nop
and
out
sbbl
push
push
andl
cwtl
jb
lds
mov
adc
mov
xchg
jns
pop
ud0
fstp
xchg
jnp
sub
xchg
test
mov
ret
xor
pop
push
mov
inc
dec
shr
aam
pop
xchg
xchg
shll
inc
mov
shlb
cmpsb
mov
xor
sub
push
movsb
inc
ret
popf
sbb
pusha
sbb
and
mov
inc
movsl
pop
js
insb
cmpsb
xchg
mov
lret
and
sti
xchg
mov
js
mov
daa
and
and
push
aaa
jae
mov
jp
mov
mov
test
xchg
mov
mov
sbb
inc
movaps
sub
pop
divb
inc
add
dec
dec
loop
fldl
out
mov
je
ret
mov
inc
jb
aaa
jns
icebp
sti
dec
insl
outsl
jae
adc
adc
jns
sbbb
aaa
les
ror
mov
inc
int
pop
dec
lods
jnp
jp
pusha
dec
jl
sbb
aam
cwtl
lret
mov
xor
lahf
lds
push
adc
add
push
pop
and
jb
xlat
fiadds
jb
rcrl
fidivl
jae
mov
fsub
cmp
jmp
or
hlt
scas
sbb
push
lock
sub
popa
jp
and
mov
sar
in
or
xchg
repnz
jae
mov
sub
mov
sahf
ljmp
imul
pushf
ja
mov
ss
rcr
xor
shlb
jbe
repz
aas
dec
jno
dec
add
lahf
cmc
out
fwait
mov
inc
and
xchg
or
stos
in
icebp
xor
dec
jmp
mov
xchg
inc
rcr
shll
adc
rorl
rorb
or
pop
mov
aaa
adc
add
adc
les
jl
inc
ljmp
pop
int3
lahf
int
andb
pop
xor
cld
out
push
cmpsl
out
aad
imul
push
je
xchg
sub
xor
sub
gs
pop
add
fcomip
xchg
jmp
sub
xlat
dec
fadd
das
mov
rorb
or
or
jecxz
sbb
ds
mov
xchg
add
popf
jg
and
add
popfw
lock
loop
xchg
in
enter
fmull
cltd
mov
and
jp
je
out
mov
test
popf
hlt
cmpsl
sbb
jl
sbb
stos
lret
out
or
inc
lods
les
mov
mov
stc
or
stos
jo
push
ja
mov
int3
adc
mov
ljmp
push
fisubs
dec
adc
subl
cmpsb
mov
jns
iret
lea
push
and
xchg
xchg
pop
sbbb
pcmpeqb
aas
cmp
jno
sub
sbb
jb
adc
sub
rorb
and
sub
add
sub
mov
stos
cmp
pop
xchg
mov
jb
ljmp
ja
inc
insb
dec
or
fistps
in
popf
add
cwtl
int3
dec
inc
pop
pop
ss
ds
mov
shlb
clc
fdivrl
push
mov
xchg
leave
mov
push
push
push
scas
push
shrb
xor
in
inc
lea
fwait
pop
jb
int3
or
cltd
hlt
stos
xor
xor
lret
pop
sar
gs
ss
xor
ret
fimuls
and
pop
xchg
mov
clc
or
cmpsl
push
fstl
inc
mov
adc
stc
shrl
mov
insb
xor
inc
and
mov
jl
push
aam
out
out
test
fwait
inc
pop
outsb
int3
xchg
adc
mov
jg
movsl
mov
imul
pop
xchg
xchg
cmp
jnp
cmp
mov
mov
rcll
div
mov
into
iret
jae
pop
inc
arpl
shl
std
dec
lock
repz
pop
cmc
push
dec
test
shll
repz
xor
in
das
repnz
lea
mov
decl
add
xor
mov
mov
fldenv
cmp
ror
pop
xchg
pop
mov
sub
lods
mov
loope
add
inc
in
std
inc
and
pop
js
ficompl
imul
sbb
imul
stos
cmpsl
movsl
push
lea
jne
pop
je
mov
mov
test
and
inc
fwait
loope
jb
dec
jnp
cmp
xor
mov
fs
movsl
sbb
out
pop
in
outsb
repz
mov
aas
mov
xor
cli
jp
aas
xchg
jl
pop
xorl
cmpsl
add
jne
mov
imul
adc
popa
aaa
sbb
mov
mov
mov
adc
mov
in
loopne
cmp
in
mov
in
and
push
fnsave
insb
cmp
movsb
mov
dec
lcall
sub
shlb
fbld
mov
ja
or
roll
int
stc
dec
ljmp
out
mov
dec
sub
insl
pop
orb
dec
lret
inc
dec
ja
cmpsl
add
jne
loop
lea
adc
mov
icebp
inc
das
in
ja
jns
xor
fists
dec
jl
in
mov
mov
adc
xor
inc
jne
aam
out
or
pushf
adc
push
sbb
mov
aas
adc
insl
pop
inc
mov
push
inc
push
stos
and
js
push
int3
sti
loope
js
lret
test
test
aaa
mov
je
fwait
das
xchg
add
pushf
lcall
sbb
jecxz
hlt
mov
push
cmpb
sbb
ror
daa
xor
pop
movq
and
xchg
mov
scas
fildll
push
sub
push
mov
adc
je
sbb
jne
leave
xor
inc
push
repz
ss
sbb
mov
inc
repz
jnp
sar
imull
push
int
mov
mov
jbe
dec
leave
xchg
mov
addr16
or
cwtl
sub
aad
push
mov
mov
fldl
mov
xorl
adc
mov
mov
aas
add
sub
pushf
adc
push
xlat
and
cmpsl
insb
push
test
mov
insl
xchg
mov
aaa
cmp
xor
out
idiv
test
push
dec
mov
stos
inc
lret
xchg
aam
dec
dec
xor
dec
xor
push
pop
fdivrl
es
cmp
mov
add
test
in
jb
es
mov
add
and
xorl
xor
out
stc
test
cwtl
mov
test
les
cmp
popf
int3
fisttpll
out
mov
fucompp
push
jle
test
push
lds
iret
jg
cmp
jp
ret
ret
movsl
xor
int3
xor
pushf
inc
arpl
push
jne
scas
nop
sbb
out
xor
mov
xchg
mov
push
out
push
or
jle
jne
xchg
ficoml
push
inc
das
push
fs
adcl
mov
xchg
mov
ds
test
daa
push
mov
daa
ret
ljmp
push
sbb
cmc
jae,pn
into
mull
cmp
repz
lret
movsl
jo
flds
sbb
dec
fstp
test
jne
rcll
fistpl
jmp
sub
pop
xchg
stc
mov
mov
push
std
int
sub
imul
js
dec
je
and
push
stc
fadd
insb
pop
mov
cmpsb
xlat
nop
movsl
mov
rcrb
push
mov
incl
in
ret
icebp
pop
mov
fnstsw
jle
in
aad
add
lcall
fnsave
add
mov
movsl
fcompl
push
test
add
fbstp
fstpt
jnp
xor
adc
pop
ret
push
sbb
repnz
adc
cs
xor
pusha
test
shl
sbb
mov
mov
add
bnd
into
int
data16
pop
or
mov
fisttpll
iret
adc
mov
popa
inc
sbb
out
dec
cmp
out
scas
enter
pop
scas
and
xor
push
xchg
mov
mov
push
test
and
inc
sbbl
aas
test
lods
imul
cmp
pusha
imul
out
add
ret
sbb
shll
ret
lcall
push
bound
push
push
cmpsb
add
test
aas
incl
cmpsb
lds
add
pop
icebp
xchg
out
ljmp
outsl
lock
lret
mov
jg
aas
mov
mov
lcall
xchg
push
xlat
pop
std
xchg
push
cltd
jmp
jae
int3
arpl
les
ds
mov
lock
mov
nop
shlb
push
mov
aam
xchg
pop
xor
push
dec
rcl
jns
call
jge
xlat
mov
cld
or
aam
jo
andb
and
mov
mov
mov
push
or
pop
daa
sub
movsb
jl
jae
insl
stos
adc
stc
out
lcall
cs
mov
inc
and
jle
flds
and
pop
jl
scas
aad
rep
popf
add
rolb
push
pop
ret
dec
ficomps
fldt
in
pop
cmp
lahf
dec
inc
popf
mov
imul
cld
sbbb
lock
xchg
xchg
add
add
dec
scas
jmp
or
lods
xchg
adc
fcoml
data16
mov
sahf
cmp
leave
jl
pop
mov
imul
mov
fiaddl
scas
lahf
xor
aad
xorl
inc
lods
mov
cld
addr16
push
jae
aam
daa
cmp
out
rclb
lds
je
mov
dec
inc
or
jge
stos
mov
mov
jno
ficomps
jmp
not
pop
setns
push
mov
xor
jecxz
cmp
push
stos
fst
out
mov
dec
mov
or
push
stc
push
lret
in
pop
jne
sarb
icebp
lods
lret
xor
mov
pop
fstpl
pop
xor
push
cmp
lock
es
lret
or
pushf
int3
jg
adc
or
mov
das
and
ljmp
shlb
nop
add
ljmp
xchg
add
scas
sbb
scas
outsb
rol
xchg
push
add
add
out
in
push
mov
call
mov
inc
sub
inc
ljmp
or
lret
je
movsb
mov
or
les
xor
cmp
aas
lock
add
mov
incb
std
jne
jo
scas
mov
mov
hlt
cmpsl
das
div
push
pop
cmc
dec
test
xchg
push
push
test
sti
test
loop
loope
enter
mov
mov
sbb
mov
adc
pushf
xor
sub
dec
jnp
insb
addr16
push
shll
data16
sub
nop
jg
call
mov
jp
xchg
data16
cmp
pusha
inc
mov
jno
popf
xchg
vorpd
inc
sbbb
lds
sbb
fistl
lods
pop
daa
out
std
aam
cmpsb
push
loop
fldt
mov
jmp
in
sub
test
gs
jmp
inc
pop
into
cmp
and
jmp
inc
cmc
push
pop
outsl
inc
das
xchg
sbb
lahf
enter
aas
fdivs
js
and
xchg
jecxz
adc
mov
sti
outsb
xchg
mov
inc
cmp
scas
xor
sahf
push
fs
cltd
divl
sbb
mov
mov
js
mov
loope
call
pusha
push
dec
cs
scas
nop
inc
lcall
xchg
mov
mov
or
sarb
mov
imul
pop
push
outsb
mov
test
mov
cmp
call
push
cld
and
and
rcl
lcall
sub
mov
daa
cmp
cmp
adc
lea
mov
mov
call
outsb
fsubr
cmp
flds
or
inc
xchg
mov
mov
movsl
hlt
xor
or
add
jmp
push
sets
xchg
xchg
add
sbb
and
insb
arpl
vpexpandb
rcll
mov
nop
jns
sub
and
jb
mov
mov
aaa
jp
iret
pop
sahf
repz
push
dec
jne
sti
movsb
stos
das
movsb
arpl
je
and
dec
mov
cmp
out
cltd
push
mov
repz
sub
mov
test
mov
cli
clc
adc
xor
mov
push
roll
or
test
movb
xchg
inc
call
repz
popa
add
aaa
xchg
jp
bound
in
adcb
les
mov
cltd
and
mov
mov
sub
cmp
imul
sahf
mov
or
lds
aam
xchg
add
les
movsl
lret
mov
hlt
leave
inc
sub
push
xor
test
cmp
jb
mulb
mov
outsl
rorl
ud0
add
mov
stos
addl
inc
adc
stos
mov
repnz
test
cmp
dec
loop
js
mov
and
jge
lock
popf
hlt
jle
iret
xchg
push
push
mov
push
mov
jo
xchg
lret
jne
dec
add
and
fbstp
adc
cs
mov
inc
arpl
repz
ret
pusha
std
jmp
shll
sarb
faddl
add
xor
fsubr
or
je
mov
stc
or
faddp
dec
jbe
les
jg
cltd
sub
loope
arpl
shll
sub
cmc
dec
adc
mov
in
movsl
adc
or
and
xor
jne
cmp
sbb
xchg
aad
icebp
xchg
mov
xor
inc
bnd
xorl
xorl
jne
loope
movsb
or
or
sbb
inc
mov
sbb
outsb
data16
or
inc
negb
aad
mov
push
push
imul
cwtl
push
jmp
repnz
mov
ret
push
icebp
sbb
jb
rolb
gs
call
mov
xchg
mov
mov
sbbl
mov
or
dec
adc
fidivs
sbb
idivl
femms
or
adc
jl
out
jmp
ja
push
loope
ds
sub
mov
iret
jne
pop
push
mov
repnz
adc
icebp
sti
subb
dec
push
neg
rorb
push
adc
push
fisubl
nop
repnz
aaa
out
sbb
xchg
dec
inc
sahf
enter
push
mov
scas
or
mov
sti
pop
xchg
xchg
or
fwait
pop
sbb
ret
dec
hlt
aas
mov
or
insb
push
mov
popa
call
pop
or
cli
pusha
push
sub
ljmp
xchg
xor
stos
sbb
mov
xor
sbbl
adc
out
aaa
and
and
test
sbb
rcll
iret
loopne
fcompl
push
inc
sbb
jl
aas
and
dec
lock
adcl
sti
adc
movl
ret
xchg
daa
mov
jnp
xor
jl
bound
ljmp
inc
pop
subb
movsl
ret
or
aam
sbb
std
push
mov
push
or
shlb
outsb
lock
jno
cld
dec
dec
adc
mov
jbe
and
loop
sbb
loopne
jo
popa
cmc
push
lret
in
mov
imul
test
sub
out
mov
xchg
js
cmp
push
cmp
in
rclb
icebp
xor
xchg
lahf
lock
enter
adc
stos
mov
adc
pushf
jno
jo
fmuls
ja
gs
jmp
mov
sbbb
add
cmpsb
mov
mov
pusha
icebp
cwtl
jle
fistps
pop
loope
add
into
ljmp
xor
inc
fdivrs
ja
in
int3
fs
or
lock
out
aas
pop
xchg
stos
mov
les
xchg
xchg
imulb
enter
insl
dec
mov
mov
push
sub
pop
insl
loopne
pop
xchg
sbbb
xor
sub
lcall
push
push
shrl
dec
and
jb
stos
stos
mov
repnz
xchg
pop
fisttpll
push
mov
rorb
dec
mov
mov
jg
lret
push
enter
in
xchg
cld
inc
push
mov
iret
movsl
int3
cli
sub
adc
inc
std
testb
shlb
andl
push
push
ljmp
stos
inc
sub
cmpsb
imul
in
mov
cmpsb
dec
mov
cmpsb
cmp
sahf
incb
rcll
imul
jae
ja
outsl
pop
loopne
jae
es
std
stc
cmp
ret
call
mov
scas
or
inc
inc
add
push
mov
pop
mov
push
xor
aas
rcrb
xor
shll
cmp
pop
fistpl
testb
cmpsl
je
jmp
xchg
shlb
lret
dec
nop
or
inc
push
test
js
das
cltd
dec
incb
mov
push
shll
movsb
insb
test
movsl
mov
jl
push
addr16
inc
lret
xor
shll
and
ljmp
nop
sbb
test
mov
add
mov
push
loope
rcrl
xchg
or
jg
or
adc
dec
pop
insb
mov
xchg
int3
add
ja
push
out
sti
fisubs
xchg
sar
enter
inc
push
mov
cmp
dec
cwtl
xlat
jne
fucomp
loope
sub
pop
mov
xchg
in
sub
lea
inc
xor
xchg
test
lret
or
lret
addr16
imulb
lods
sahf
jmp
and
cmp
mov
shll
mov
js
and
or
dec
stc
bound
data16
push
das
cmp
sahf
out
dec
mov
arpl
repnz
mov
popa
xchg
jae
sub
das
das
cmp
dec
push
mov
mov
pop
pop
sbbb
clc
cs
or
jle
aas
add
push
dec
xchg
mov
in
incl
enter
popf
sub
fadd
outsl
inc
imul
into
loope
sbb
bound
mov
cmc
cli
data16
rorl
xchg
fidivs
popf
loop
lock
mov
dec
test
test
pop
test
mov
cmp
xor
cli
pop
das
mov
adc
push
and
jecxz
pop
inc
bound
out
xor
sub
jae
fidivrs
dec
dec
insl
loopne
scas
cwtl
loopne
repnz
frstor
adc
push
adc
aas
bnd
pushf
loopne
mov
jb
pusha
jle
sbb
jnp
push
ja
mov
dec
loope
fs
pop
jo
sub
cmp
mov
loop
mov
cli
popf
js
or
fidivrl
sbb
adc
mov
ds
dec
ja
scas
aam
pop
scas
lcall
adc
or
aad
mov
push
std
mov
cmp
pushw
lods
mov
and
inc
inc
mov
mov
or
jecxz
inc
jbe
sti
ss
cmp
scas
stc
outsl
push
repz
out
test
push
pushf
dec
push
xchg
enter
fcomip
pushf
xchg
hlt
and
cwtl
es
ljmp
push
std
cmp
xor
outsb
loop
gs
add
sahf
xor
inc
dec
mov
sub
mov
je
push
or
inc
or
mov
popf
test
sbb
adc
adc
jae
ds
movsb
mov
test
rorb
xor
icebp
enter
pushf
rcrl
jg
cmp
fdivrs
loope
fwait
push
inc
iret
or
fisubl
or
jne
cmpl
and
sahf
loopne
jns
ret
push
out
lcall
in
push
addl
jge
inc
mov
shll
iret
outsb
pop
xlat
dec
push
push
dec
add
dec
pop
lea
xchg
or
inc
ret
jg
stos
pop
fdivrp
lcall
pop
xchg
subb
dec
mov
or
aas
mov
adc
mov
cmp
inc
mov
sahf
fadd
adc
mov
dec
dec
int
cmp
inc
xchg
mov
and
cli
in
imul
cmpsb
sbb
inc
inc
out
pop
pop
test
jb
jl
push
and
repnz
inc
push
mov
jmp
cmp
imul
push
pop
out
repnz
mov
aas
neg
sbbl
hlt
pop
lret
repnz
inc
sahf
pop
outsb
pop
outsl
sahf
repz
cmpl
lods
sub
fdivrs
push
stc
inc
das
jns
cld
mov
jo
inc
in
inc
pop
clts
bound
or
in
mov
out
push
cltd
xchg
cwtl
push
or
lea
xchg
out
int
mov
je
mov
ja
ficoms
adc
dec
push
cmpsb
fcmovnbe
xor
out
or
jg
rcrl
sbb
cltd
inc
mov
shr
mov
jle
dec
jns
xchg
or
mov
test
push
lret
loopne
mov
cli
pop
test
mov
rclb
adc
mov
sbb
cmpb
push
adc
aas
pop
clc
inc
sbb
cli
pop
fisttpl
pushf
lret
sbb
repz
mov
fcoml
and
aad
clc
xor
jb
into
jge
out
lret
out
ss
mov
ficoms
pop
jmp
mov
lods
push
push
subb
inc
es
adc
mov
xchg
add
lds
adc
sbbl
test
repz
in
sub
rcrb
and
dec
xor
ret
iret
jb
mov
mov
divl
jle
add
cs
cmp
movsl
cmp
cmp
dec
ja
in
pop
xor
mov
xchg
divb
push
movsb
cmp
cmp
rcr
insl
xchg
sahf
or
mov
jmp
mov
outsb
sub
mov
xchg
gs
jge
xor
cwtl
jb
jmp
sub
ror
js
jge
pop
cmp
sub
mov
xor
mov
ljmp
cs
test
sub
push
movsw
add
mov
or
iret
mov
pop
mov
sbb
dec
scas
dec
decl
cmp
fnstcw
test
mov
addr16
les
cltd
mov
call
fimull
lea
dec
les
aaa
dec
and
or
cmpl
fmul
or
jmp
lcall
sbb
dec
sub
cmp
movb
push
les
mov
jae
lds
fs
xchg
jp
mov
jp
sbb
push
jl
outsb
rorb
ret
jp
out
outsl
fcoml
mov
fisubl
mov
pushf
lock
ljmp
arpl
add
ret
cmp
xlat
dec
mov
adc
mov
xchg
push
in
xor
push
je
mov
testb
fcomps
sub
pop
mov
add
push
ret
sub
and
je
and
je
add
mov
sti
daa
sbb
lock
dec
fst
xchg
aaa
jge
lahf
push
lret
inc
inc
xlat
xchg
jo
dec
ret
jns
or
cmc
scas
ljmp
scas
mov
push
pop
adc
push
or
jae
icebp
push
lods
pop
xchg
movsl
insb
jecxz
pop
and
cmp
or
ret
push
xchg
inc
gs
loopne
mov
mov
rep
jb
pop
push
aas
push
sbbl
cmpsl
cld
add
dec
xchg
ja
adc
inc
ss
sub
mov
daa
nop
inc
pop
add
mov
insl
scas
push
repnz
jae
sbb
xor
pop
add
adc
xchg
or
xchg
shr
push
dec
and
jg
jp
mov
sbb
mov
and
xchg
dec
hlt
mov
outsb
xor
mov
lods
mov
scas
enter
in
sbb
in
jl
hlt
mov
insb
adc
pusha
push
or
cmpsb
bound
sbb
mov
xor
je
sahf
jns
mov
cld
gs
loop
popf
push
dec
mov
repnz
mov
dec
adc
sub
in
ret
cmpsb
aam
sub
out
clc
outsb
loop
bound
inc
pop
xlat
mov
insl
ret
or
mov
cltd
mov
movsb
mov
xchg
push
insl
push
daa
clc
push
loop
dec
inc
cmpsb
mov
xchg
inc
mov
mov
jnp
inc
lahf
dec
or
pusha
arpl
mov
hlt
mov
ds
stos
inc
or
loop
xchg
mov
xor
mov
jo
mov
icebp
cmpsb
ljmp
andb
cmp
jle
cmp
mov
not
cld
jp
inc
cmpsl
mov
test
mov
jbe
sbb
mov
dec
out
dec
inc
push
lret
push
push
cmp
je
dec
loope
sbb
xor
xchg
mov
pop
pop
ja
push
inc
sub
stos
repnz
jl
add
loop
push
mov
mov
mov
dec
fldt
sub
push
repz
adc
and
jle
ljmp
or
fisubl
insl
cmpb
add
adc
xchg
out
faddl
std
mov
xor
push
xchg
xor
fstps
stc
test
pop
cmp
sbb
js
add
jno
sub
jne
pop
sbb
xchg
outsb
mov
pop
lods
pushf
cmp
cwtl
mov
push
aad
and
std
mov
call
test
lret
out
dec
fucomi
xor
call
cli
inc
sub
xchg
into
shll
test
fsubr
je
inc
subl
ret
jb
mov
addb
add
dec
sbb
addr16
xlat
enter
gs
popf
rclb
dec
out
sahf
sbb
test
pop
cmpsl
dec
jecxz
jle
imul
insb
out
cmovp
cmc
push
mov
mov
not
addr16
mov
sbb
aaa
cli
jo
sub
mov
popa
jo
loope
flds
cmpsl
cmp
mov
push
xor
pop
xor
sbb
push
frstor
cmp
fisubrl
out
pop
mov
fs
js
ffreep
jg
cmp
loopne
push
adc
mov
jno
in
mov
mov
ljmp
inc
pop
push
dec
mov
loop
outsl
add
fsts
rol
out
mov
xchg
neg
dec
in
aam
jl
cmp
sub
int3
iret
xlat
push
push
adc
dec
or
or
idivb
mov
faddl
fdivl
xor
arpl
inc
pop
fstl
aaa
jg
xor
pop
xchg
mov
sahf
out
bnd
push
das
mov
out
add
xor
cmp
and
xchg
mov
gs
mov
jb
mov
add
xchg
jmp
aam
push
leave
xchg
inc
adc
stos
mov
mov
and
data16
cmpsb
mov
outsl
incb
leave
pop
push
cltd
cmp
fistps
stos
aad
bound
pop
mov
in
xor
xlat
sub
js
out
sbb
mov
adc
mov
inc
leave
sub
sub
jb
lds
pop
mov
sbb
hlt
fsubrp
fidivrs
cli
cmp
test
mov
push
rcrb
mov
mov
cltd
mov
xchg
dec
ret
mov
test
nop
xor
cld
push
outsl
xor
pushf
nop
ret
push
js
in
sub
push
mov
fnsave
loopne
loop
jmp
sbb
push
xchg
cli
and
push
or
pop
lods
or
sub
mov
andl
mov
sahf
or
rcl
adc
gs
nop
outsb
arpl
xchg
das
in
sub
dec
xlat
out
sbb
scas
or
mov
sti
mov
dec
mov
ss
pop
add
stos
arpl
and
push
dec
jge
push
or
scas
sbb
lahf
add
sub
daa
lock
cld
int
cld
loope
pop
pop
clc
call
mov
out
lock
push
sbb
xchg
test
sbb
cmc
mov
mov
mov
pop
xorl
cltd
mov
mov
cld
imul
xchg
fists
stos
pop
mov
stos
enter
ficoml
or
and
dec
out
xor
loopne
inc
movsb
ffree
sbb
and
sub
push
iret
data16
int3
dec
cs
jle
outsl
nop
mov
cltd
pop
jle
pushf
arpl
push
mov
pop
test
xchg
or
dec
scas
push
cmpsl
fistpll
add
xchg
in
lcall
scas
bound
mov
mov
dec
fs
pushf
call
sahf
lcall
sub
inc
movsb
enter
xor
hlt
add
call
lahf
aaa
lock
lock
inc
inc
ret
mov
loope
pop
popf
dec
mov
adc
arpl
or
int
addr16
in
mov
lea
and
pop
popf
mov
mov
dec
jecxz
out
and
mov
out
iret
or
pop
xor
inc
inc
and
jae
lcall
bnd
and
cltd
jmp
xchg
pushf
and
sbb
not
adc
out
add
test
and
add
adc
xchg
out
stc
mov
xor
das
mov
adc
xchg
or
push
mov
ds
sub
stos
xor
repnz
mov
mov
mov
cmp
aaa
mov
pop
scas
push
inc
outsl
xor
jnp
and
and
push
stc
push
mov
stos
and
mov
push
arpl
inc
jb
cmp
fs
and
dec
sbb
lds
jb
icebp
icebp
pop
lret
adc
jmp
std
jnp
outsl
cwtl
ror
loopne
push
sti
dec
ds
xlat
cmp
sti
scas
testb
lret
push
jge
sarb
pop
arpl
repz
pop
mov
fldt
inc
pop
gs
and
inc
inc
cmp
outsl
iret
shll
jecxz
xchg
push
pop
rcl
mov
jle
es
ds
popa
das
lahf
bound
or
fistpl
and
sub
or
cmpsl
and
inc
push
aad
jp
add
inc
data16
mov
ja
and
outsl
and
cmp
or
add
std
fdivs
iret
popa
adc
xchg
aad
inc
scas
mov
ret
dec
out
xchg
addr16
or
rolb
test
out
fistpll
push
sub
lret
lea
mov
push
adc
daa
jnp
pop
ja
imul
and
jg
mov
out
sbb
lds
add
adc
rcl
repz
sbbb
jo
pop
xchg
mov
sub
popf
inc
inc
cli
sti
loopne
mov
dec
fwait
mov
cmp
mov
or
pop
pusha
insl
mov
sti
mov
fcmovu
nop
dec
fwait
xchg
push
std
add
fnstcw
mov
gs
imul
push
int3
xchg
fsubrs
inc
and
fcompl
xchg
pusha
sbb
std
jno
bound
cs
shrl
js
cmp
arpl
iret
iret
cwtl
scas
sbb
push
and
icebp
loope
mov
xor
cmp
popa
jno
push
add
mov
push
leave
adc
pop
into
xchg
cli
xchg
mov
addl
add
test
movsl
popf
mov
inc
mov
in
stos
mov
idiv
and
pushf
mov
stc
adc
addb
hlt
xchg
adc
jl
xchg
iret
pop
insb
cmp
push
mov
std
xchg
pop
lret
mov
jb
pop
mov
in
pop
and
push
pop
cltd
xchg
and
fldenv
xlat
lahf
outsb
mov
sti
mov
loope
lahf
flds
pop
xor
jg
sti
mov
xor
or
dec
in
jge
mov
mov
sbb
and
pop
lock
gs
mov
inc
out
mov
jmp
fnstcw
lret
daa
fistps
popf
push
popf
cmp
test
lods
cmc
xlat
scas
je
cmp
int
or
pop
jo
shlb
je
dec
inc
cltd
jns
fwait
ljmp
cmp
adc
lods
inc
jmp
xchg
hlt
dec
sbb
xlat
imul
lods
imul
jmp
leave
add
jmp
add
jnp
sbb
fisttpl
cli
xlat
cmp
mov
into
jmp
xchg
mov
ss
enter
jmp
jmp
adc
xchg
insl
pop
adc
fisttpl
lahf
das
ret
mov
xor
mov
ss
lret
rep
nop
jo
push
sbb
xchg
movsb
jno
divl
out
adc
ds
and
test
and
clc
xlat
ja
paddq
int3
fcoml
sub
prefetch
or
test
rcr
or
out
and
outsl
roll
sbb
lcall
dec
rcl
cmpsl
add
adc
sbbl
addr16
bound
repz
add
jp
adc
mov
push
mov
test
daa
and
or
sub
xchg
jge
pop
mov
out
fdiv
or
stos
jecxz
xor
adc
jne
or
adc
das
cmc
xchg
movsb
dec
popa
js
out
pop
cmp
inc
xor
ret
repz
cmp
pop
pushf
jp
lcall
test
jbe
fnsave
js
outsl
cli
enter
push
cwtl
aam
out
mov
cmp
mov
add
repz
inc
ja
aam
push
out
jp
ja
jle
lods
iret
data16
sub
ss
hlt
int3
out
pop
hlt
lret
sbb
pop
sbb
xlat
addr16
mov
pop
push
jecxz
cli
fistps
insl
inc
pop
lret
push
imul
scas
in
out
call
push
xchg
xor
pop
ret
daa
mov
pop
and
inc
sbb
and
mov
inc
lret
push
sub
lret
and
dec
orb
stos
xchg
dec
ret
adc
je
lock
fldl
stos
cmp
inc
mov
scas
dec
data16
mov
scas
push
imul
pop
xchg
frndint
cwtl
jg
loopne
ret
div
cwtl
stos
lods
jge
xor
xlat
and
imul
adc
pop
inc
hlt
pop
add
mov
or
stos
add
movsl
jae
test
dec
fadd
or
add
mov
mov
mov
addr16
push
addb
jmp
jmp
shr
hlt
xor
mov
jno
xchg
jb
jecxz
mov
pop
sbb
pop
mov
fmul
cmp
mov
out
mov
ja
mov
add
mov
jne
and
pop
mov
mov
adc
popf
test
sbb
ljmp
sub
adc
inc
or
out
lret
inc
cmp
mov
sub
adc
out
cmp
xchg
cmpl
or
ss
jnp
and
clc
enter
sbb
ja
add
lds
and
ficompl
js
popa
dec
mov
adc
aas
imul
stos
inc
dec
mov
fdivr
inc
imul
lea
and
mov
popa
lock
mov
sbb
pop
stos
cmp
add
push
sbb
push
mov
enter
jo
clc
andl
push
jnp
mov
mov
clc
cmc
arpl
call
mov
ret
andb
and
sub
jae
enter
and
add
pop
iret
cmpsb
inc
faddp
jp
cmp
insb
xchg
mov
stos
adc
xor
jbe
cmp
dec
orb
cmpsl
test
pop
mov
stc
mov
les
lods
test
jne
data16
ds
jnp
jle
sbb
cld
ret
pushl
jno
add
lret
aas
mov
fdivl
std
sub
jo
mov
dec
add
data16
mov
cld
test
les
sahf
dec
rcll
mov
push
nop
out
mov
mov
lcall
add
lahf
int3
cmp
stc
mov
arpl
iret
add
insl
push
adc
xchg
pop
mov
or
je
xchg
push
arpl
push
pop
or
mov
jmp
push
jmp
es
adc
mov
cwtl
fnstcw
mov
push
adc
xor
cmpsl
cli
add
jne
aam
out
into
push
xchg
popa
jecxz
xchg
xchg
in
mov
outsl
or
add
sbb
outsl
pop
in
fs
or
push
mov
nop
cltd
ss
daa
jp
xchg
mov
ret
dec
push
int3
stos
aaa
les
sbb
arpl
sub
cmp
sahf
inc
ret
xor
jno
or
dec
push
mov
das
cmp
mov
inc
mov
insl
jno
and
xor
jnp
enter
fisubrs
ja
popf
xchg
push
popa
scas
push
dec
inc
pusha
push
mov
out
or
cmp
mov
inc
adc
in
jnp
movsl
mov
or
push
xchg
lds
mov
sbb
mov
inc
adc
inc
sbb
or
inc
dec
push
jnp
mov
xor
add
add
shrl
ljmp
popa
cld
aaa
fwait
jae
enter
and
sar
add
je
mov
in
push
sub
pop
adc
addr16
in
out
and
push
jne
mov
xor
or
add
ja
jmp
inc
xchg
scas
ljmp
rclb
fadds
xchg
adc
ds
and
mov
lea
dec
cmp
sti
lret
push
mov
mov
fistl
pop
stos
ret
or
jle
jge
adc
fdivl
push
pop
je
jl
xchg
test
mov
fs
fcoms
cmp
push
xchg
inc
aaa
jecxz
push
push
in
loop
xor
je
and
test
fisttps
jmp
das
jle
lock
in
xchg
push
movsb
jno
mov
pop
pop
stc
sbb
push
mov
call
jecxz
add
and
imul
addr16
xchg
rcrl
sbb
jecxz
inc
mov
scas
shl
stos
sti
pop
je
sbb
shr
jle
aad
jo
push
jmp
jae
out
sub
imul
xchg
jnp
rcll
cs
mov
lahf
sbb
dec
pop
or
inc
mov
push
jle
int3
pop
addr16
mov
sub
divl
sbb
sbb
loopne
nop/reserved
pop
and
xchg
push
dec
inc
out
daa
push
clc
dec
loopne
movsl
jmp
in
outsl
sbb
and
sbb
dec
incl
jnp
inc
popf
add
xor
std
xchg
insb
dec
mov
enter
out
int
sbb
pushf
cmp
cld
inc
sti
mov
hlt
cwtl
ljmp
cmp
int3
pop
jno
sbb
lcall
loop
hlt
sarb
xchg
cld
in
pop
mov
dec
sub
gs
xor
mov
frstor
pop
icebp
adc
ds
loope
lret
aad
adc
aad
xor
inc
stc
cwtl
lahf
movsl
fstpl
jl
mov
mov
or
cmpl
test
fidivrl
jnp
into
jno
es
int3
daa
push
pop
sbb
mov
jle
lods
outsb
lock
push
les
mov
mov
aam
in
lds
push
or
jecxz
aas
xadd
or
movsl
daa
out
mov
mov
inc
in
add
or
orb
lret
or
jl
scas
shrl
jecxz
lods
sarl
jge
out
mov
mov
mov
jmp
mov
mov
ja
mov
es
jecxz
test
jl
dec
cmc
xor
sbb
add
xor
xchg
xor
inc
bound
pop
shrb
int
sbb
lret
sbb
pop
sbb
ficoml
xchg
mov
mov
xchg
leave
in
fcmovnb
pop
mov
pop
adc
push
or
cmc
push
ret
fscale
pop
sub
mov
jmp
repnz
aas
sbb
xchg
int
loope
bound
add
hlt
inc
in
adc
push
pop
fimull
jmp
mov
stos
jb
pop
sahf
lret
mov
sahf
lods
out
loopne
loope
mov
pop
lret
and
jns
test
mov
adc
data16
loope
nopl
jmp
out
xor
add
in
cmp
cmpsb
sbb
cli
fsubl
mov
cmpsb
inc
ljmp
or
out
sbb
mov
lods
ja
xor
cmp
leave
aas
rcl
fidivrl
jl
pop
add
insb
cmp
pop
jbe
stc
dec
ljmp
popf
in
jo
sbb
int3
mov
xchg
mov
inc
push
and
dec
les
rol
push
or
xchg
add
adc
dec
pop
fs
and
mov
pop
jne
lods
fcmovnu
push
cmc
dec
or
cmpsl
incl
mov
add
sub
sub
std
jns
or
arpl
movsb
inc
decb
in
xchg
pop
pop
ret
cmp
xchg
mov
arpl
ss
sbbl
fsub
jg
pop
jnp
insb
lds
mov
stc
adc
add
xor
mov
faddl
stos
push
sub
mov
lret
xchg
jae
subb
stos
cmp
mov
mov
test
pop
mov
pop
mov
in
xchg
lcall
sub
movsl
lahf
xchg
test
or
iret
into
cmp
inc
pop
fistps
pop
mov
mov
xchg
mov
jmp
add
daa
mov
xor
pop
dec
shll
mov
adc
out
push
test
lock
xchg
mov
loopne
add
outsb
jnp
cwtl
icebp
sbb
push
lea
jb
push
mov
jge
scas
jae
mov
xchg
or
fidivrl
jno
mov
movsl
pushf
sub
loopne
cwtl
sahf
cmp
js
arpl
clc
mov
pop
mov
aam
jnp
xor
dec
adc
sarl
mov
aas
or
sbb
xchg
jno
movsl
mov
lods
fdivl
pop
xor
int3
das
popf
daa
iret
hlt
sub
cmpsl
ret
pop
fdivl
pusha
mov
cmp
aam
fdivp
push
iret
orl
jns
jmp
jnp
pop
icebp
rorb
clc
push
mov
xchg
cmc
pop
dec
in
xchg
sub
rcll
mul
or
xchg
mov
push
sbb
pop
outsl
adcl
xchg
push
in
loope
cmp
inc
push
cmp
sahf
dec
mov
pop
fildll
inc
xlat
xor
xor
dec
shll
loop
push
sahf
mov
xchg
or
xchg
shll
out
repz
fsubr
iret
mov
sbb
call
rorl
movb
push
movsb
dec
je
sbb
lea
dec
ds
sbb
mov
jle
mov
inc
cmp
icebp
sahf
cmp
xlat
icebp
fbld
pop
int
ret
shlb
inc
ret
sbb
xchg
add
hlt
jge
push
arpl
adc
test
loope
xchg
and
fnstsw
ret
xor
add
mov
dec
cmp
fldenv
push
push
loop
xchg
xor
in
sbb
and
mov
xchg
mov
jp
jne
and
pop
insb
lods
mov
fwait
iret
inc
fimull
sbb
add
lods
push
jo
cld
mov
stos
pop
jmp
adc
mov
add
or
inc
adc
sbbb
mov
in
sbb
push
add
xor
popf
dec
ficoms
pop
sbb
leave
cmp
adc
sub
testb
loope
jmp
add
jnp
pusha
lods
cwtl
push
out
mov
push
sub
sti
cmp
or
mov
jo
mov
sbb
or
mov
int
inc
dec
es
push
bound
or
pop
fbld
ss
scas
sbbl
test
push
cwtl
scas
xchg
fistl
test
dec
out
cmp
add
fwait
cmp
ret
pop
add
fimull
out
adc
jp
iret
pop
out
push
dec
in
aaa
cltd
movsl
scas
fdivr
sub
pop
mov
lock
add
mov
xchg
faddl
push
cmpsb
loopne
xchg
popa
daa
jmp
jmp
mov
int3
ret
mov
xchg
mov
add
mov
sbb
jo
mov
mov
lock
stc
lods
xchg
xlat
int3
jp
pop
cmp
pusha
fs
push
sub
jns
mov
push
ljmp
mov
add
adc
mov
int
pop
push
nop
out
push
inc
out
or
jbe
dec
or
cmp
cs
xchg
int
inc
adc
ret
jbe
ljmp
dec
adc
cli
inc
inc
shll
dec
repnz
clc
lods
or
mov
pop
xor
sarl
dec
and
cmp
mov
push
mov
aam
sub
push
arpl
cmpsb
jp
std
dec
ja
dec
jl
stc
fstp
enter
adc
pop
push
inc
sbb
or
xchg
cwtl
add
add
pusha
or
bnd
jle
das
pop
lcall
sub
int
dec
jo
lcall
pusha
rcrl
pop
mov
cltd
mov
test
or
subps
shll
js
and
je
jg
jp
mov
fmuls
out
test
add
arpl
incl
xchg
fadds
mov
xchg
nop
add
rcll
cs
sub
jle
pop
and
jg
movsl
push
cmp
mov
das
daa
or
popa
jne
mov
and
push
icebp
movsb
pop
lret
sbb
xor
rcrl
fstps
dec
test
dec
mov
cmp
ja
imul
lods
pushl
cmp
push
mov
jecxz
jne
sbb
sbb
sub
aad
das
mov
bnd
push
xchg
or
int3
cmp
repz
pop
mov
std
add
lret
xchg
add
subl
mov
loopne
inc
cld
mov
ljmp
pop
daa
pop
xor
mov
scas
xchg
mov
mov
cmp
in
add
pusha
mov
jb
inc
cmp
addl
rol
xchg
or
test
jge
jg
add
dec
and
xchg
andl
jne
pop
out
loop
sub
in
lods
push
or
xchg
mov
add
pop
clc
xchg
stc
pop
or
nop
out
lock
and
and
jmp
xchg
inc
xchg
cmpsb
daa
test
mov
push
and
bound
mov
cwtl
in
jb
or
xchg
addr16
xchg
mov
imul
lds
jo
mov
in
add
push
mov
cmp
loop
xchg
sub
rcrb
push
sbb
in
xor
test
in
mov
repnz
shl
mov
add
push
pop
stos
mov
adc
push
pop
xor
xlat
lods
sbb
jne
aam
sub
mov
rcrl
aas
mov
push
xchg
out
scas
mov
rorb
mov
in
call
shlb
xchg
out
jecxz
lock
subb
out
cmpsl
pop
dec
pop
test
push
into
sub
lcall
lcall
pusha
cltd
insl
cltd
leave
sbb
scas
icebp
fnstenv
inc
pop
mov
ret
inc
push
sbb
test
adc
aam
cmp
push
inc
jns
and
cmp
jno
adc
outsl
ret
mov
aad
fiaddl
jge
insl
sub
pop
shl
ja
jnp
dec
mov
mov
and
flds
or
das
fsubrl
lret
rep
sub
sbbb
push
dec
fwait
adc
sub
cmp
mov
fcmovu
fsin
or
clc
les
xor
jbe
pop
xchg
add
push
and
jbe
mov
in
outsb
lods
jmp
rorb
push
nop
data16
mov
fld
decl
stos
stc
insb
sbb
cmpxchg
andb
test
jmp
out
inc
push
or
mov
stc
or
testb
repnz
scas
xlat
insb
or
or
mov
pop
sub
std
xor
jae
and
sbb
dec
mov
jecxz
lahf
out
sub
dec
enter
inc
xor
sti
jbe
or
std
mov
leave
jne
jnp
rcl
pusha
add
sbb
scas
mov
dec
xchg
clc
pop
cli
cmp
push
xchg
aam
popf
leave
sbb
sbb
jl
xchg
std
mov
cmp
ss
adc
lods
test
mov
push
mov
xchg
jb
sbb
imul
push
adc
fcomi
in
loop
cwtl
inc
insb
or
add
adc
outsb
pop
xchg
jne
jbe
push
loopne
mov
add
or
inc
pop
xor
pop
aam
adc
xor
cmp
push
ja
inc
std
xchg
movsl
cmp
insl
cmp
or
aaa
aad
push
mov
sub
mov
daa
xchg
test
repz
mov
adc
adc
insl
adcl
jae
adc
cmp
mov
cmp
scas
mov
sub
out
test
inc
rorl
lock
cmpsb
pop
cld
push
popf
mov
stos
dec
or
xor
mov
call
or
fldl
and
test
fstl
pop
mov
fstps
inc
leave
repz
dec
adc
movq
push
aad
jge
push
pop
inc
mov
dec
fwait
cld
ret
in
cld
sub
das
jns
and
inc
lcall
pushf
xchg
movsb
stos
cmpsb
cmp
mov
xchg
ds
xor
cmp
push
dec
inc
pop
loop
add
jecxz
inc
push
or
fildll
add
pushf
pop
inc
push
push
lret
int
dec
inc
sbb
adcb
jns
and
dec
adcl
xchg
inc
add
jl
cmp
aad
mov
pop
mov
inc
imul
jmp
popf
push
popf
xorl
xchg
nop
add
pop
arpl
out
out
mov
sub
add
inc
jb
out
outsb
push
std
popa
sbb
inc
vmread
aam
fs
cmc
sbb
mov
loope
cmpsl
mov
xchg
scas
lcall
or
xchg
adc
mov
pop
or
xor
push
stos
loop
movsl
lods
fsts
sub
pop
les
sbb
pop
cwtl
push
nop
sub
mov
cli
lahf
rclb
cwtl
ss
popl
icebp
pop
cmp
jmp
add
sub
aam
jmp
cmc
jnp
push
hlt
cli
mov
mov
popf
dec
cwtl
lahf
rorl
out
jmp
or
jecxz
xchg
and
in
xlat
mov
xchg
sbb
pop
push
rolb
fsts
addb
inc
jg
jae
outsl
xchg
repnz
jb
add
jmp
pushf
les
outsb
pop
aad
push
mov
faddp
repnz
loopne
adc
addl
xchg
imul
jecxz
mov
pop
call
stos
in
add
sub
stc
mov
jl
std
lods
loope
fstl
imul
loope
sbb
aaa
adc
insb
daa
lock
dec
push
xlat
es
sbb
jbe
outsl
std
push
xchg
aas
mov
xchg
lods
test
push
loopne
pop
fs
mov
xchg
repz
jne
dec
bound
lds
int3
sti
fnsetpm(287
fcomps
repz
mov
sbb
dec
dec
xchg
pop
fs
loope
ja
fcoms
popa
pop
pusha
mov
std
stos
insb
daa
mov
aas
cmp
fidivs
jp
jg
ja
ret
jnp
mov
xor
cli
lock
rorb
push
jge
decb
jl
ljmp
mov
scas
jno
push
fildll
testl
pusha
jle
and
inc
mov
and
inc
pop
shrl
xor
lock
push
outsb
jmp
adc
xchg
mov
sub
scas
inc
push
inc
js
shll
lldt
jb
lret
ja
mov
mov
or
pusha
fwait
xor
popa
sub
loope
push
pushf
inc
push
xor
lcall
mov
shl
mov
leave
push
into
mov
lret
mov
push
pop
clc
out
enter
lcall
adc
mov
and
shlb
xor
cwtl
mov
push
in
pop
add
in
mov
lock
rolb
mov
aas
push
ret
mov
xor
sub
push
pusha
dec
lods
faddp
adc
es
imull
cmp
xchg
and
cmp
sbb
stos
jl
cwtl
add
pop
xor
mov
inc
jmp
mov
repnz
sbbl
rcr
roll
lock
inc
push
mov
aaa
cmp
lods
out
cmp
cmp
ret
cld
xchg
and
stc
push
mov
inc
jmp
add
cltd
mov
dec
shlb
pop
dec
inc
icebp
adc
lea
jae
cmp
movzbl
mov
inc
jecxz
push
fsubl
xor
mov
mov
mov
loope
cmpsb
std
mov
add
test
cmpsb
inc
jecxz
in
sbb
pop
sub
repz
faddl
lea
out
in
sbb
dec
hlt
gs
icebp
out
xchg
xlat
cmp
push
dec
aad
outsl
insb
jmp
sub
jmp
xor
cmpsl
hlt
dec
sti
pop
sbb
mov
xor
adc
sbb
mov
scas
sbb
xchg
cltd
jp
add
sbb
lcall
es
dec
mov
nop
add
popf
enter
lods
sbb
lods
adc
lds
test
cmp
sbb
in
mov
out
out
dec
cmp
xor
inc
jmp
fbld
je
test
aad
pop
pushf
push
jns
ds
ljmp
mov
gs
stos
xor
aas
fldl
or
pusha
test
sub
xchg
repz
icebp
popf
inc
adc
pop
fs
test
neg
mov
cwtl
pop
and
inc
pop
push
or
lock
cltd
sahf
mov
dec
sti
loop
sbb
mov
pop
xor
andb
dec
and
lcall
loop
bound
inc
lods
mov
push
lret
push
mov
mov
dec
shll
cwtl
sub
lret
ja
sub
and
mov
imul
xchg
js
insl
dec
add
sbb
cmp
in
ljmp
and
push
ret
clc
in
lods
lcall
out
scas
mov
ss
xchg
xor
pop
stc
imul
push
dec
cmc
insb
inc
inc
int3
xchg
mov
jp
ret
inc
lods
sbb
dec
mov
push
pop
cwtl
xlat
push
call
or
xor
pop
ss
arpl
jnp
aaa
testb
inc
mov
ja
daa
or
xor
sbb
sub
or
dec
into
lahf
jnp
lret
mov
mov
or
xor
dec
into
repz
std
add
push
mov
test
or
out
in
jge
adc
fimuls
sbb
pop
sbb
icebp
push
inc
nop
filds
dec
sbb
inc
sub
lods
sub
push
fsubp
outsl
insb
mov
adc
cmp
push
push
lahf
xchg
jl
and
js
xor
loope
mov
sahf
and
jbe
inc
fisttpl
lahf
push
in
adc
xchg
mov
add
jno
mov
sub
fcoml
imul
or
xchg
lods
inc
cltd
ss
xchg
jb
cmpl
mov
push
push
addr16
outsb
xor
ss
sub
push
or
add
fs
sbb
call
mov
in
fldt
sbb
pop
mov
xchg
jecxz
packuswb
in
ss
adc
daa
xor
les
push
add
pop
push
jo
and
fnstenv
push
ret
imul
outsl
fiaddl
adc
jns
pop
scas
in
xchg
frstor
push
bound
jbe
mov
lods
pop
pushf
popf
sub
das
and
adc
mov
cmp
push
pop
in
hlt
lock
sbb
outsl
adc
imul
pop
pop
mov
push
pop
pop
imul
ss
shr
mov
jno
enter
jmp
gs
mov
jnp
inc
adc
std
push
sbb
dec
sub
lds
orb
jmp
sbb
mov
sub
inc
jne
cltd
and
xor
cmp
aad
mov
add
xor
or
inc
daa
pushf
loopne
ja
cmpsb
push
xchg
jo
scas
out
in
sbb
mov
addr16
out
aaa
adc
or
sbb
ljmp
fs
jae
scas
jg
xor
lahf
sub
jns
xor
or
and
test
mov
add
cmp
cmpsb
fadds
mov
shlb
aad
mov
fisubl
inc
xorb
mov
mov
xchg
loop
mov
mov
movzbl
pop
popa
loopne
ja
and
pop
nop
inc
xchg
fs
push
push
cli
jnp
scas
andl
nop
dec
mov
sbb
movsb
pop
jge
sub
lret
xchg
pop
add
pop
push
lret
or
lcall
js
xchg
dec
fdivrp
data16
or
mov
mov
int
in
mov
mov
rcrb
mov
stos
mov
dec
ficoms
or
cltd
pop
test
sarl
data16
pop
mov
popf
sub
xchg
mov
clc
out
nop
xlat
lahf
xorl
out
sub
fsubrl
xchg
stos
mov
ret
sbb
add
jle
notb
insl
push
out
in
shrl
movsl
cltd
enter
cmpsl
out
pop
pop
clc
stos
inc
ret
rcll
mov
jl
lock
jp
mov
xchg
or
mov
ljmp
inc
repz
fildl
jp
fnstcw
mov
clc
mov
inc
sbb
gs
push
ss
add
enter
fisubrl
nop
jae
rorl
loope
rcrl
adc
fcomps
cmpsl
daa
test
lret
mov
shll
shlb
adc
sti
sub
js
insl
pop
dec
xchg
adc
and
mov
lcall
adc
out
je
cs
in
scas
clc
adc
popa
mov
xchg
xor
mov
sbb
mov
into
pushf
cld
mov
aas
pop
mov
inc
mov
dec
cs
lods
jecxz
push
jno
mov
leave
test
notl
jp
lahf
fisubrs
popa
lods
in
scas
sub
add
adc
adcb
out
cmp
adc
fsubrs
mov
out
dec
inc
inc
add
loope
dec
or
imul
test
mov
sub
and
and
adcl
stos
cld
mov
and
in
mov
aad
stos
popa
inc
push
clc
into
xchg
clc
dec
mov
jp
fs
xorl
or
adc
cltd
adc
dec
decb
mov
inc
adc
xchg
mov
int
sbbl
push
mov
repnz
stos
dec
adcb
xchg
sbb
add
push
xchg
cmp
mov
sub
dec
cli
orb
mov
and
cmpsl
stos
data16
ja
fadd
icebp
or
pop
adc
mov
mov
pop
jmp
lods
sub
mov
loope
xlat
jnp
pop
cltd
rcl
mov
and
jl
sbb
scas
xchg
fstps
or
test
push
in
xlat
cmp
arpl
cmc
adc
pop
imul
in
movsl
push
push
sub
mov
inc
lock
pop
adc
adc
or
mov
push
xor
dec
les
fwait
adc
stc
jecxz
sahf
jecxz
sahf
cmpsb
bnd
repz
sahf
mov
dec
mov
xor
push
dec
fcompl
ret
int
or
fs
mov
xchg
pop
nop
sbb
ficoms
jl
dec
addl
je
inc
pop
mov
mov
orb
imul
ja
int
push
cmp
cwtl
sub
movsl
in
dec
jbe
out
dec
shlb
sub
jg
out
mov
cmpsb
sub
out
pop
inc
pop
clc
loope
bound
or
ss
das
and
and
jmp
mov
fsub
cmpsb
fldt
aas
cwtl
push
aad
add
enter
loop
fnstenv
adc
mov
jg
xor
ja
popl
int
mov
arpl
mov
cltd
push
inc
aaa
pop
adc
lods
bound
add
andl
shlb
or
jl
mov
loop
mov
jmp
test
insb
movsb
add
loopne
clc
xor
stc
push
adc
int
add
adc
xlat
jno
jmp
mov
cli
and
or
aad
inc
in
mov
ret
mov
mov
pop
mov
aaa
pop
or
shl
mov
enter
jmp
mov
jns
mov
mov
fcmovu
mov
repz
sahf
mov
xchg
pop
and
push
cmp
dec
jb
imul
jne
fwait
ret
lds
inc
xchg
arpl
jne
and
xchg
nop
adc
sbb
inc
leave
push
dec
pop
lcall
push
sarl
xchg
and
repz
mov
fdiv
fdivrs
xchg
jl
cs
pop
addr16
xchg
jno
mov
and
jne
dec
mov
fisubl
lods
fiaddl
repnz
pop
aad
adc
adc
in
ljmp
dec
dec
adc
ret
mov
mov
sbb
mov
adc
jno
pop
dec
add
pop
mov
lret
add
cmp
cmpb
adcl
addr16
jns
cmpb
das
loopne
mov
jl
pop
or
jmp
cmp
mul
stc
jbe,pt
bound
cmp
das
sub
dec
mov
mov
fs
aad
test
insb
sub
sub
mov
and
cld
test
lret
roll
stc
fwait
js
cli
jb
int
dec
mov
pop
add
clc
xchg
lea
ljmp
adc
pop
je
and
or
je
lcall
inc
or
movsb
pusha
or
adc
jne
or
test
pushf
mov
pop
andb
mov
fnstsw
mov
pop
lret
mov
sti
push
jle
push
xor
int3
scas
rcrb
jecxz
fxch
sti
fildll
adc
call
scas
fsubs
and
in
rorl
sbb
clc
cmp
mov
cmc
jecxz
pop
insl
in
outsb
int
fcom
jl
enter
mov
int
add
push
cmp
rcll
or
lds
lretw
repnz
or
outsb
enter
push
movsb
fisttps
fst
mov
mov
cs
mov
in
fiaddl
adc
xor
jno
or
pop
xchg
fsubrs
mov
mov
cmp
lea
jno
push
lds
lret
outsl
sub
idivl
push
push
sarl
cltd
cmp
adc
mov
repz
xor
fwait
daa
scas
ret
ror
lret
inc
xchg
mov
inc
test
sub
xor
lock
jl
cmpsb
sub
xchg
icebp
mov
jne
or
divb
adc
sbbl
insb
inc
adc
jge
fisttpl
idivl
and
add
dec
push
jp
jl
ljmp
pop
xor
aam
mov
lds
xchg
mov
mov
jp
cmp
adc
stos
testb
insl
jmp
sub
mov
std
movsl
cmp
xor
cmp
jno
inc
out
xor
inc
jle
or
rcr
sub
hlt
push
fucomip
cmp
mov
dec
pop
pop
adc
sub
stc
inc
popf
pop
jnp
dec
imul
sbb
jnp
and
mov
in
std
pop
out
cmc
mull
mov
pop
bound
jl
or
cmp
dec
out
sub
cltd
jo
cmc
xor
cmc
stos
lods
mov
cmp
sub
movsb
imul
cmp
test
mov
jp
fadd
cmp
out
addr16
push
lcall
cmp
pop
push
lods
xor
mov
fstpl
popl
xor
in
enter
pop
mov
sbb
nop
push
mov
popl
sbb
add
sub
ljmp
loope
push
data16
mov
inc
xlat
mov
and
clc
fsubrs
jp
pop
test
fbstp
mov
and
fdivrp
arpl
outsl
xor
es
push
mov
rorb
jge
cli
adc
push
cmp
lret
lret
inc
mov
inc
push
filds
pop
sbb
repnz
cld
aad
mov
mov
movsl
inc
push
fndisi(8087
std
int3
and
mov
loope
aaa
or
fisttpl
xlat
scas
rorb
out
gs
pop
jl
mov
mov
sub
xor
jge
in
aam
idivb
cld
or
lods
rclb
call
iret
and
xlat
mov
or
xchg
into
stos
and
imul
mov
out
jle
out
mov
fcoms
sbb
aaa
push
sarb
test
push
push
lret
inc
adc
push
mov
push
adc
lret
repnz
out
in
in
jp
xchg
aad
xchg
sbb
aad
mov
push
out
bound
dec
inc
push
stos
fcoml
sahf
rcll
outsl
push
sbb
stos
mov
pop
mov
test
gs
or
add
clc
mov
lds
and
jecxz
dec
movsb
out
popa
xor
xor
lahf
outsb
sti
sbb
add
adc
add
popf
cltd
insb
ljmp
cmp
or
add
gs
out
aad
aaa
mov
pop
mov
add
lods
fistpl
xchg
jno
fs
cmp
mov
xor
aas
push
enter
cmp
divb
in
xchg
xor
mov
jae
repz
daa
arpl
sar
rol
inc
stos
lods
cmp
add
jb
push
jecxz
ret
cli
xchg
pop
mov
je
sub
push
jnp
aad
sub
sbbb
repnz
pushf
mov
mov
fnstsw
cmc
jo
arpl
sub
jl
ja
jno
push
shrb
fidivl
and
push
aad
in
mov
sbb
cmp
xchg
mov
jmp
fnstsw
sbbl
daa
fists
jmp
imul
sub
push
outsl
sbb
aaa
sarb
js
cs
add
and
rcrb
scas
cwtl
pop
add
lret
sbb
push
push
mov
fld
xlat
or
adc
inc
mov
jno
adc
mov
ret
mov
mov
mov
xchg
stos
cli
subl
out
insb
sub
aaa
cld
add
xor
adc
in
adc
in
js
bound
loope
sub
sub
adc
sub
push
xor
inc
add
xor
mov
imul
pop
mov
cmp
fwait
pinsrw
add
push
in
add
loopne
jo
hlt
jecxz
cltd
sub
adcl
aad
jmp
xor
sahf
popa
pop
inc
fsin
fldl
fistpl
or
xor
jmp
out
xchg
xchg
xlat
jae
and
scas
adc
cmp
iret
add
xchg
pop
test
mov
mov
adc
gs
or
aad
dec
cmp
xor
mov
js
ret
scas
push
loope
shr
adc
mov
push
lock
push
pop
repnz
in
jo
or
pusha
repnz
lret
jle
imul
test
sbb
xor
les
sbb
sub
outsb
xor
ret
cmp
int3
fs
or
roll
cmp
or
mov
xchg
or
insl
cmpsl
jo
repnz
aaa
sahf
imul
aam
data16
clc
push
into
out
cmp
mov
jne
lock
inc
je
mov
lods
fcomps
jae
popa
mov
inc
lcall
jno
xor
les
std
fnstcw
ret
or
jl
mov
cs
fldenv
mov
sbb
lods
lahf
test
push
mov
mov
mov
mov
hlt
into
xor
cld
and
jg
les
test
shll
mov
jne
mov
sahf
lcall
js
test
daa
fcmovnu
pop
mov
cmp
and
jb
cmpsb
inc
idivb
hlt
es
jne
sub
aad
and
sub
ret
jg
cwtl
sbb
icebp
sbb
sarl
lcall
pusha
sub
inc
and
cmp
add
mov
imul
cmp
sub
popf
es
mov
sbb
out
cmp
dec
mov
mov
es
lods
mov
xor
sbb
jge
pop
ret
inc
ds
testb
in
pop
andl
dec
mov
insb
dec
adcb
mov
cmpsl
add
mov
nop
stos
out
ljmp
xlat
jl
sub
jb
test
mov
jb
xchg
mov
and
dec
clc
lcall
cmp
in
testl
pop
loope
clc
repz
cmpsb
das
sti
jmp
sub
test
inc
mov
xchg
in
sub
cmp
add
and
jg
data16
dec
movsb
insl
jne
repz
cmp
sub
xchg
notl
sub
shl
adc
push
adc
push
xor
add
push
xor
movsl
sub
adc
clc
repnz
mov
loope
hlt
mov
mov
sbbb
and
push
push
inc
pop
mov
cmc
fdivs
and
pop
mov
pusha
test
jno
outsb
and
fcmovbe
std
add
add
mov
push
mov
xor
add
fistpll
push
les
or
lret
adcl
dec
inc
mov
mov
cld
rclb
sub
mov
bswap
sub
stos
out
cltd
clc
mov
cld
sub
sub
jne
push
adc
arpl
add
out
jnp
test
and
rol
jnp
inc
lret
inc
jle
int3
pop
mov
mov
subb
test
xlat
mov
in
int
mov
scas
xor
je
sti
xor
add
jl
dec
jmp
in
int
push
fldenv
dec
push
fcmovne
pop
movsl
add
mov
stos
push
cwtl
movsl
cmc
dec
adc
insb
popa
aam
xor
cmpsb
addl
rclb
sub
xor
jp
out
bound
test
scas
ss
outsl
sti
insb
add
lods
outsl
ficoml
sub
add
push
xor
adc
jle
roll
lods
pop
outsl
mov
sbb
mov
inc
jl
fwait
mov
repz
sub
cmp
cmp
es
cmp
or
mov
sbb
mov
out
lds
xchg
xor
cmpsl
push
icebp
ret
adc
sub
shrl
aas
stos
sub
daa
sub
lea
test
and
enter
dec
lock
pop
xchg
std
stos
push
push
imul
int
push
pop
into
jno
cmpsl
arpl
push
xchg
push
xchg
pop
aas
cld
movsl
imul
iret
jl
cs
std
int3
dec
mov
fsubrl
add
stc
mov
pusha
rorl
mov
pop
and
movsl
lds
xchg
aad
mov
fdivrl
add
cmp
inc
out
xor
ja
push
cli
vcvttsd2si
movsl
and
fldt
adc
mov
lea
cmp
mov
mov
dec
mov
das
mov
jb
movsl
sarl
xor
mov
push
lret
or
jo
js
loopne
sub
xchg
push
pop
xchg
mov
pop
pop
mov
scas
loopne
lock
mov
push
movsl
jecxz
mov
repnz
fstl
ret
push
push
pop
and
fwait
and
mov
cmp
lahf
in
shrl
aad
xchg
je
in
push
popa
push
xchg
mov
pusha
repz
movsb
fldcw
sub
add
mov
cmpl
and
pop
cmp
push
lods
nop
inc
sub
mov
jnp
enter
fdivrs
dec
fcmovb
sbb
jecxz
mov
fwait
inc
add
ds
jl
push
jmp
stc
pop
out
lret
jns
fnsave
mov
mov
cmpsl
xchg
xchg
test
cmp
fwait
shrl
leave
push
es
inc
or
add
inc
fwait
adc
and
pop
and
jno
pusha
push
jp
ss
mov
lahf
addr16
jne
jle
enter
adc
andl
fisubrl
sub
sbb
mov
popf
mov
adc
mov
and
sbb
mov
sub
dec
aad
and
xor
subb
mov
and
mov
jo
mov
ret
lahf
mov
inc
lea
jno
lods
push
lock
sbb
xchg
push
dec
dec
clc
fmull
mov
in
cmc
outsl
pop
je
and
ss
faddp
inc
mov
cmp
js
jmp
jb
ret
sbb
xor
xchg
aad
cmp
sub
scas
xchg
in
int3
mov
sbb
xor
mov
xor
pusha
lahf
outsb
sti
shll
pop
rorb
hlt
inc
add
adc
ljmp
fisubs
dec
scas
lahf
adc
pop
add
inc
sbb
and
out
sub
in
inc
repz
inc
inc
shrb
xor
cltd
pop
nop
mov
inc
mov
test
jg
push
hlt
imul
ficoml
addb
mulb
lret
out
lcall
dec
cli
adc
cmpsl
ja
jmp
loope
sarl
sub
mov
pop
pop
mov
les
call
mov
fiadds
stos
inc
mov
xorl
mov
rcl
daa
xor
sub
loop
and
hlt
call
popl
repnz
aad
test
in
push
dec
popa
mov
push
popa
adc
popf
push
fcomip
jbe
addr16
push
pop
lcall
adc
jno
rol
sbb
xor
add
insb
cmp
jbe
xorb
aas
shrb
das
lock
pop
push
popf
adc
xchg
outsb
sub
jnp
xchg
or
rol
and
dec
xor
repnz
imul
mov
or
shl
shr
fwait
das
inc
cmp
xor
aad
push
push
push
dec
lcall
cmp
mov
out
push
aas
inc
cmp
sub
ljmp
xchg
sahf
jmp
xchg
and
xor
pop
jge
insl
movsl
pop
or
add
cmc
rcl
icebp
xor
cmc
add
dec
xchg
and
dec
gs
ljmp
pop
gs
loop
push
into
fisubrl
jnp
push
idivl
pop
pop
pop
arpl
rcr
in
jecxz
add
mov
push
dec
je
cmp
sbb
mov
push
mov
dec
dec
jle
mov
std
push
jno
mov
hlt
push
inc
mov
inc
out
pop
iret
dec
inc
stos
lret
push
push
jae
fcomi
pop
mov
call
mov
enter
fucomp
pop
push
aas
out
addr16
out
sbb
dec
sbb
cmpsb
add
call
shlb
mov
lock
adc
push
ret
sub
push
inc
repnz
clc
imul
mov
push
mov
in
loope
mov
imul
adc
sub
andl
sub
cmp
and
or
xor
ja
mov
add
xor
ret
or
ffree
adcl
stc
out
inc
or
fs
ljmp
ret
ljmp
pop
xor
or
loop
int3
adc
shll
sub
push
stos
loope
popf
cmp
ds
xchg
outsb
push
hlt
adc
dec
call
lret
sbb
sub
push
loopne
fbld
xor
sarb
js
mov
lcall
cmp
es
aaa
je
mov
sti
and
repnz
adc
out
sar
divl
das
inc
fsubs
mov
xchg
mov
dec
mov
sbb
mov
enter
ror
xchg
lret
sbb
ss
out
rcrl
mov
fimuls
mov
lods
jmp
frstor
sub
fldenv
and
mov
loop
dec
clc
lret
popa
in
ja
repnz
cmpb
and
sahf
mov
std
mov
sbb
addr16
push
push
in
cmp
sub
out
push
ds
and
out
jne
int3
in
adcb
mov
or
or
pop
jmp
out
das
push
inc
dec
xor
cmc
and
sbb
cmc
jne
stos
cmp
sbb
pop
cmp
add
mov
cmp
jge
rolb
inc
xor
mov
sbb
adc
pusha
test
mov
adc
movsl
cmp
xor
and
and
in
repnz
rolb
call
data16
jo
enter
adc
lods
and
cwtl
lds
mov
pop
lahf
dec
sub
pushf
jg
push
xchg
es
mov
cmp
das
test
pop
pop
adc
leave
push
pusha
cmp
repz
test
les
rorl
pop
xor
jp
or
mov
jp
mov
imul
cmp
mov
js
dec
jge
mov
stc
imul
xchg
pop
add
data16
xorl
sub
add
insl
pop
out
addb
mov
popa
data16
inc
inc
dec
sbb
lods
jp
sub
sub
sahf
xchg
and
les
cltd
cltd
lods
das
fists
ret
imul
cmp
jle
and
sbb
hlt
sub
jbe
fisubrs
outsl
ret
sbb
mov
ret
bound
inc
jbe
or
pop
mov
daa
lods
jecxz
int
into
sub
mov
push
cmp
sahf
ret
push
or
ljmp
jo
sub
lods
cmp
ret
mov
pop
push
or
mov
push
mov
fidivrl
arpl
nop
in
fnstcw
clc
xor
je
aam
pop
scas
mov
adc
jmp
jae
xor
movsb
pushf
out
adcb
push
mov
getsec
or
sub
std
lahf
test
mov
js
fisubl
adc
pop
mov
ja
in
xchg
into
pop
test
cmp
roll
and
or
mov
mov
dec
scas
jp
lcall
mov
mov
mov
cltd
pop
mov
movsb
mov
and
icebp
andl
jecxz
xorb
movsl
test
and
iret
mov
xchg
jae
mov
push
fnstsw
je
loop
sub
sarl
aaa
int
xchg
orl
xchg
decw
hlt
loope
testl
inc
sti
dec
test
mov
adc
pop
push
cwtl
mov
jns
jne
inc
or
cmp
adc
xchg
push
mov
mov
sti
push
mov
mov
clc
bound
and
outsb
push
push
xor
fs
dec
mov
mov
push
test
inc
sbbl
sub
adc
jg
inc
xor
pop
call
popa
mov
push
repz
adc
stos
push
xor
fadds
sbb
rorl
cmc
mov
dec
sbb
flds
and
bound
dec
adc
sti
mov
enter
sti
inc
pop
popa
fs
pop
pop
out
cmpsl
xchg
xchg
mov
pop
and
inc
icebp
mov
loope
hlt
push
adcl
sarb
adcb
pushf
pop
xlat
insl
bound
sub
sub
gs
sbb
and
ret
pop
ljmp
xcrypt-ofb
cmpsl
sub
divb
mov
popa
jo
outsl
and
es
mov
and
mov
xor
mov
orb
lahf
mov
mov
rolb
sub
pusha
fildl
xor
jne
jne
jbe
push
sar
jle
push
pop
pop
js
hlt
lds
cmp
outsb
in
mov
mov
sub
repz
xchg
fcmovnb
and
inc
popa
dec
fcoml
push
push
outsl
inc
mov
cmp
mov
push
leave
movsb
or
jne
mov
xor
xlat
lock
lds
into
add
pop
adc
cmp
jne
add
jmp
and
or
adc
stc
je
mov
bound
scas
inc
dec
fldt
test
sub
adc
lret
fwait
imul
pop
movups
shrl
cs
addb
and
cltd
jl
adc
pop
aam
jle
popf
js
int3
add
stos
aas
jns
add
mov
pop
and
inc
mov
dec
fxch
sbb
pop
mov
push
jb
lret
mov
jg
dec
inc
jp
in
fdivr
mov
testl
inc
cmc
add
call
jecxz
dec
jno
sub
adc
movsl
xchg
mov
dec
or
mov
pop
xchg
std
xor
xor
sub
pop
inc
cs
imul
bswap
jg
adc
sbb
pop
sbb
cmp
adc
stos
iret
mov
lcall
sahf
dec
sub
jbe
addr16
or
das
sahf
xor
cli
lods
xchg
inc
jmp
jecxz
pop
jge
dec
inc
dec
mov
jbe
testl
repnz
hlt
xor
sti
mov
in
xorl
ljmp
adc
pop
mov
xchg
rcr
dec
sbb
cld
cmp
xchg
lahf
andps
test
into
out
test
rcrb
add
adc
lods
int3
subb
adc
jb
popa
addr16
subb
bound
pop
repz
cmp
jmp
sbb
sbb
bound
loop
push
adc
jae
clc
xchg
test
loopne
mov
leave
out
inc
fisttpll
cmc
imul
pop
iret
cwtl
mov
inc
jo
mov
popa
jns
je
adc
popf
mov
sarb
out
xor
push
enter
inc
js
mov
enter
mov
and
and
mov
stos
out
mov
int
jae
xchg
imul
js
mov
pushf
push
sbb
jbe
ja
jmp
add
aas
int
cli
mov
pop
mov
jne
out
rcll
out
jbe
insl
test
cs
shlb
jne
cmp
xor
xchg
and
mov
pop
outsb
into
dec
ffree
mov
mul
stc
jo
loopne
aaa
out
daa
loopne
test
mov
ret
fistl
jno
aaa
insb
pop
inc
sbb
cmp
pusha
test
sti
mulb
cmpsl
stc
mov
test
sbb
mov
sub
pop
aas
cmp
je
aad
sbb
jae
jmp
xor
test
pop
sbb
aaa
iret
lods
pusha
popa
fwait
sahf
gs
mov
movsl
scas
ja
adc
push
or
mov
int3
xchg
imul
jge
inc
into
add
mov
add
add
add
jb
fldt
adc
pop
das
sbb
scas
jnp
enter
dec
ret
push
xor
jp
inc
inc
xchg
stc
lods
das
iret
es
dec
fdivrl
sub
xorl
add
lock
sahf
push
mov
or
push
dec
fadd
fiadds
mov
psubusw
scas
call
sub
les
or
aad
push
inc
cmc
in
adc
dec
aad
mov
ljmp
cs
jns
clc
jecxz
mov
and
imul
ljmp
dec
and
mov
pop
jns
out
jp
cltd
mov
push
and
lods
fidivrs
mov
adc
jmp
decl
xor
pusha
pushf
sbb
iret
push
enter
and
cmp
mov
jns
and
gs
rolb
mov
jle
daa
mulb
fs
test
pop
push
mull
push
dec
xchg
sbb
test
js
movsb
mov
popf
add
xor
add
mov
dec
inc
stc
daa
mov
push
inc
lcall
mov
pop
iret
adc
paddsb
ror
adcb
not
mov
and
sbb
test
lock
decb
push
scas
mov
mov
or
dec
pop
inc
stc
out
dec
fs
arpl
hlt
pop
or
jbe
push
adcb
add
sbb
mov
add
mov
enter
loopne
xor
stos
pop
mov
data16
call
dec
sbb
sarb
xchg
adc
jle
jmp
fidivl
das
insl
int
fisttpl
ljmp
lret
lock
inc
ds
dec
inc
movd
xchg
xor
add
xchg
js
loopne
fsubs
xchg
pop
int
jle
and
mov
add
jle
cmp
leave
cmp
mov
out
mov
sub
das
out
jo
lds
repz
fists
or
sbb
push
add
push
xor
test
clc
test
push
lret
inc
mov
std
cmp
xor
jbe
out
lds
mov
movsb
jmp
sbb
int3
aas
jl
lods
jb
lahf
test
iret
mov
insb
pop
jne
cmc
or
sub
push
sti
xchg
inc
push
out
int3
inc
data16
out
lahf
sub
ret
in
je
push
nop
add
pop
stos
test
lds
sub
movsb
jecxz
int3
pop
mov
aam
jl
sbb
push
imul
nop
int
sub
int
call
mov
and
pop
outsl
mov
xchg
xlat
insb
adc
out
test
ds
fistps
adcl
pop
je
mov
movsb
nop
push
inc
xorl
xorl
insb
jne
mov
jnp
les
das
and
shlb
nopl
or
mov
ja
orb
loop
loop
repnz
xor
mov
jb
outsb
xchg
cld
mov
push
in
adc
push
xlat
cld
loope
mov
in
jnp
out
adc
mov
je
sub
pusha
xchg
pop
xchg
ja
dec
xchg
nop
gs
shlb
xchg
in
add
xchg
xchg
clc
jmp
cmp
shlb
stos
jecxz
aaa
sbb
or
dec
not
lret
lret
rcrb
sub
and
pop
cli
xchg
fmuls
push
popf
push
loope
gs
pushf
ret
push
jecxz
lret
fld
popf
pushf
loope
pusha
inc
dec
inc
and
sbb
push
in
push
mov
jle
fnstcw
mov
push
xchg
arpl
mov
adc
or
sub
sahf
adc
dec
orl
int
dec
pop
push
push
push
xchg
out
sub
pop
shll
out
jnp
xlat
scas
sbb
jo
pop
insb
jbe
test
addr16
sti
mov
push
mov
jns
in
mov
outsl
jp
in
mov
mov
rcrl
dec
jns
mov
jns
mov
inc
xchg
pop
fmuls
sbb
mov
stos
sbb
les
inc
pop
in
mov
jno
addr16
push
cs
test
pop
ja
sbb
std
outsl
test
aad
adc
mov
cld
add
xchg
popf
insl
dec
lock
sbb
mov
cmp
push
andb
mov
mov
xchg
cld
xchg
push
ror
test
jno
or
cltd
mov
jle
popf
aaa
pop
bndldx
ljmp
mov
pop
ja
movaps
push
pushf
or
or
sub
mov
dec
in
outsb
pop
ret
lcall
lods
pop
mov
repnz
cmpsl
shlb
xor
shrb
out
dec
sbb
mov
xchg
pop
clc
repz
aas
xorl
andb
lods
aaa
sbb
fwait
push
lods
xor
enter
sub
and
and
or
or
jg
iret
repz
cld
bound
movsl
xchg
sahf
fs
mov
repnz
lret
xchg
add
mov
mov
cmp
xchg
sahf
xchg
inc
test
inc
les
clc
xchg
clc
jmp
mov
mov
lea
inc
cmp
pop
adc
lret
mov
cmp
xlat
mov
lds
lret
pop
pop
inc
mov
cmp
push
cmp
loopne
xchg
and
push
cmpsl
jo
pop
enter
fstl
jl
popl
add
mov
mov
jecxz
loop
or
mov
cmp
and
into
mov
xor
xlat
add
push
lods
jo
mov
das
add
mov
cli
pop
or
cmp
xor
and
mov
mov
mov
movsb
lret
scas
add
pop
stos
shll
mov
test
or
ljmp
popf
lret
mov
xchg
cltd
pop
stos
sbbb
mov
mov
pop
out
lcall
add
test
orb
cmp
adc
pushf
cwtl
out
xchg
jbe
mov
cmp
push
xchg
xor
mov
ja
push
xor
mov
cmp
faddl
sahf
ljmp
iret
inc
lahf
sub
shl
ja
mov
push
inc
push
imul
xor
mov
jnp
lahf
mov
inc
cmc
push
cmp
insb
sub
call
jmp
fs
cmpsl
xchg
nop
jbe
movsb
inc
mov
sahf
jl
sub
rol
adc
adc
jecxz
outsb
nop
clc
popf
adc
pop
push
mov
ds
inc
mov
jnp
jp
lock
aam
faddl
stc
aam
push
insl
adc
xor
jl
push
sarb
ss
xchg
addb
jl
js
push
shll
or
mov
sar
iret
mov
push
daa
repz
jnp
and
push
jl
aas
rcrl
pusha
daa
mov
add
out
or
pop
xor
call
inc
pop
cmpsl
movsb
enter
hlt
xchg
push
cmp
push
jb
jbe
fists
jg
sbb
leave
push
push
and
or
cmp
jno
xlat
test
shll
mov
sbb
mov
jb
repz
add
idivl
xchg
cmp
insl
lcall
or
getsec
leave
adc
insl
pusha
xchg
or
sub
and
aad
cmpsb
pop
cld
add
repz
ret
mov
stc
add
xchg
aas
mov
push
pop
das
pop
mov
das
aas
in
leave
into
mov
pushf
outsl
popa
rorl
or
insb
xor
inc
inc
xor
repz
call
mov
mov
int3
xor
pop
scas
jl
pop
ljmp
jne
xor
xor
fsubs
aaa
push
lods
sub
outsb
jle
inc
mov
mov
fucompp
jp
and
xchg
insl
repnz
mov
xor
xor
xor
sub
aam
jne
cmp
sbb
mov
insl
imul
insl
in
push
cs
add
mov
insl
loope
gs
xlat
mov
push
icebp
and
add
push
jns
ret
jae
cli
scas
addb
sub
rorl
cld
adc
stc
mov
xlat
mov
pop
arpl
sti
jecxz
enter
fdivl
aad
orb
mov
addr16
add
cmp
jnp
pop
pop
add
in
push
movsl
pop
imul
fiaddl
cwtl
popa
aas
iret
mov
outsb
dec
gs
cmp
scas
push
movsl
cs
lret
mov
jg
sbb
mov
lret
lods
pop
scas
mov
push
sub
rdpmc
mov
insl
inc
mov
lock
lods
gs
push
sbb
mov
mov
mov
push
icebp
pop
jp
rorl
push
dec
dec
lret
sub
int3
sbb
fidivrs
inc
mov
js
mov
sub
xchg
subl
mov
out
cmp
and
or
dec
fstpt
mov
pop
xchg
les
and
cmp
pushf
sub
jno
test
insl
in
cli
and
mov
shll
pop
sbb
das
push
daa
mov
push
out
movsl
lock
jp
stos
sbb
add
idivb
clc
icebp
clc
jnp
jb
pusha
sbb
scas
push
mov
loopne
or
mov
dec
and
outsb
xor
adc
inc
scas
or
jecxz
jae
or
mov
leave
cmp
inc
fdiv
xlat
xor
cmpsl
xchg
das
aas
call
std
insl
jne
jae
push
push
fiadds
scas
push
movsb
mov
ret
fcomip
cltd
dec
js
sub
je
into
and
or
mov
mov
repnz
inc
and
cmp
loop
lock
aas
aas
cmp
push
cli
jb
cmp
adc
and
mov
jo
cli
test
sbb
mov
jmp
movsl
mov
sbb
jmp
inc
adc
in
imul
mov
lods
adcb
push
dec
dec
fisubrs
lcall
push
add
pop
aas
mov
hlt
pmuludq
add
insb
fdivp
in
mov
pop
fbstp
cs
scas
fnstsw
loopne
dec
adc
jnp
stc
and
push
mov
sbbb
sub
in
lret
insl
shll
mov
test
je
stos
jb
outsb
loop
cmpsl
dec
ss
push
xlat
sbb
push
mov
cmp
scas
pop
mov
cmp
fstps
nop
dec
dec
sub
daa
mov
pop
or
gs
lahf
int3
jnp
cmp
scas
lea
filds
into
jb
rorl
xchg
mov
xchg
lcall
lret
mov
leave
and
test
mov
inc
mov
lcall
jbe
jmp
pop
das
sub
aam
pop
cmpsl
push
mov
mov
shll
cmp
jnp
std
lds
fstl
or
dec
flds
movsb
iret
push
inc
pop
cltd
int3
cld
mov
icebp
cmp
mov
out
sub
push
psllq
adc
sbb
pop
cmp
mov
or
mov
xor
test
stos
xor
sub
or
dec
and
or
in
mov
mov
jg
sbbb
arpl
mov
xchg
or
sahf
lea
adc
icebp
and
jecxz
push
xchg
inc
pop
iret
test
xchg
sub
js
stc
sahf
orb
xlat
sahf
arpl
lds
push
xor
leave
sub
push
loope
mov
xor
push
or
addr16
jne
lret
xchg
add
adc
push
xchg
sub
mov
jecxz
mov
xlat
jl
dec
js
push
inc
jle
add
lcall
int3
mov
ljmp
in
add
xchg
nop
pop
sbb
inc
stos
std
out
pop
les
adc
push
jp
movsl
addr16
xchg
repz
cmp
outsl
add
add
dec
sbb
lods
mov
dec
mov
je
sarb
push
mov
insl
sti
or
loope
jmp
jnp
cmp
bound
sbb
mov
inc
xor
mov
dec
or
adc
lret
jg
mov
sbb
sub
insl
mov
push
scas
cmc
fistl
repnz
jne
mul
xor
cmpsl
push
ljmp
mov
push
ficoml
xor
adc
push
jne
rcrb
ss
push
xchg
dec
repz
xchg
jg
fdivl
and
cltd
mov
lret
pusha
mov
in
cltd
pop
dec
push
inc
mov
sub
xchg
pop
sub
push
xchg
sbbb
push
rcrl
jmp
in
inc
jmp
pop
xchg
mov
push
idivb
mulps
ja
push
mov
adc
and
lea
pop
fidivs
push
and
leave
push
ds
adc
push
dec
jns
pop
or
in
adc
les
call
popf
add
pop
lahf
jbe
frstor
in
sbb
pop
ficoms
and
sbb
inc
cmp
dec
xorl
sar
xchg
or
es
fldt
pusha
cli
ljmp
mov
insb
or
mov
mov
fadds
xchg
mov
ja
push
push
mov
xchg
lcall
mov
faddl
add
pop
mov
mov
pop
mov
pcmpgtb
stc
mov
aad
add
mov
lods
insl
sbb
iret
push
and
inc
loopne
xchg
mov
pop
movsl
rorb
xchg
sbb
cltd
stos
shll
int3
orl
or
daa
push
mov
jl
lahf
mov
pop
cld
xchg
mov
xor
mov
fildl
pop
jns
orl
jecxz
cmp
inc
aaa
push
push
cmp
jl
je
sbb
xor
shlb
add
xchg
out
pop
shlb
sub
dec
adc
pop
sahf
adc
lods
push
pop
pop
insl
iret
sub
dec
pop
orb
cld
mov
shl
int3
shl
lahf
and
xchg
mov
jg
xchg
ja
aad
or
xor
xor
push
bound
aam
dec
pop
xor
jne
xchg
xchg
call
mov
pop
cld
stos
xchg
sub
cmp
rorb
outsb
roll
sbbl
dec
sbb
xor
js
push
lea
pusha
pop
je
push
cltd
gs
sbb
jle
in
call
test
loop
shlb
cmp
and
dec
in
call
add
insl
mov
mov
lret
outsl
pop
mov
xchg
adc
aad
outsl
jecxz
loop
scas
dec
add
add
imul
jl
andb
cmc
insb
icebp
outsl
jg
adc
addr16
enter
xorl
mov
jae
hlt
loop
fistpll
add
mov
adc
out
movsl
subb
fdivrl
das
pushf
arpl
pop
jne
sub
lds
popa
cmp
fistps
adc
add
movsb
inc
dec
in
data16
or
outsl
outsb
pusha
ja
and
jae
push
mov
lcall
pushf
pop
loop
dec
fcoms
push
arpl
aad
xor
sbb
sbb
jne
movsl
rcll
enter
out
or
pushf
and
mov
adc
and
data16
roll
cmp
fs
inc
movsb
js
mov
xor
dec
fcompl
ret
nop
insb
pop
inc
stc
shrb
enter
adc
les
mov
dec
mov
adc
into
xor
pop
pop
fsubrs
xchg
lods
push
cmp
sbb
mov
lahf
or
cmp
inc
push
shlb
stos
inc
jne
xor
xchg
push
xor
push
inc
aam
cmp
lcall
divb
adc
fnstsw
or
dec
movsb
ja
cmpsl
std
mov
aaa
mov
rorl
mov
pop
dec
out
stos
addr16
test
fwait
lret
or
mov
dec
mov
cltd
inc
xorl
pop
cmp
mov
inc
pmaxub
test
in
cmc
or
fnstcw
mov
in
mov
or
add
shl
cmp
andl
xchg
fnstenv
inc
inc
js
lcall
adc
pop
pusha
add
add
mov
mov
aaa
push
jg
std
fs
add
mov
stc
or
imulb
jnp
pop
cwtl
enter
out
jg
dec
xor
push
add
loopne
dec
mov
xor
mov
fs
inc
and
mov
dec
mov
movsl
rep
in
or
flds
pop
ds
mov
aaa
or
inc
rolb
cmp
repz
sbb
xchg
lret
pop
or
dec
xor
stos
xor
jns
fildll
xchg
bound
xor
xor
or
das
fiaddl
enter
mov
or
cld
loop
nop
jecxz
mov
hlt
sahf
pop
push
lea
popa
ret
or
aad
das
test
inc
rclb
xchg
xor
loope
jae
int3
imul
popf
push
dec
inc
rcll
add
and
jecxz
iret
push
mov
push
fs
ljmp
lods
aam
movsl
xchg
jl
dec
pop
sbb
shll
aas
sbb
mov
ja
mov
rclb
mov
inc
jecxz
adc
cwtl
shrb
pop
lock
test
shlb
pop
test
fldl
mov
popa
movsb
mov
lcall
jne
pop
jle
mov
imulb
and
call
sbb
and
cmc
mov
jl
enter
call
ds
jno
movsb
dec
inc
sbb
insl
test
add
inc
xchg
cmp
mov
stos
push
fidivrl
pusha
data16
push
dec
aam
dec
cmp
dec
repnz
jbe
scas
push
movsb
ret
pop
cmp
cmp
xor
outsb
xor
notb
mov
or
jae
push
xchg
rolb
daa
xchg
cwtl
shll
scas
out
test
fadd
lea
sub
rol
xorb
cmpsb
cmp
push
or
jbe
out
jb
orb
jmp
call
and
pop
scas
mov
lret
mov
loope,pt
push
es
imul
cmpsb
scas
lahf
jle
rcrb
call
cmpsl
jb
mov
hlt
pop
adc
and
cmpsb
push
iret
cs
push
jne
je
lahf
into
out
adc
inc
xor
push
icebp
loope
test
shl
repz
in
xor
cmp
int3
jg
push
arpl
cli
pop
sti
test
mov
bound
jnp
mov
push
and
jno
dec
dec
cmp
fbld
in
adc
cmp
inc
fdivr
in
sbbl
pop
movsl
inc
flds
adc
roll
sbb
sti
fnstcw
push
fdivl
sarb
jmp
imul
jmp
rolb
negb
lods
adc
mov
pusha
ljmp
movsl
add
push
cli
xchg
ja
rorb
addr16
rcrl
xchg
sub
dec
sub
into
pop
mov
stc
mov
push
dec
sbb
dec
je
iret
ljmp
or
mov
rcrl
rorb
call
cltd
repnz
ljmp
dec
mov
adc
jle
push
sub
sub
sbb
sub
rorb
pop
sbb
jnp
stos
testb
dec
out
mov
inc
xor
mov
shrb
sbb
repz
and
mov
addr16
mov
aaa
daa
aam
pusha
lahf
and
hlt
pop
jne
adc
jb
cld
lretw
pop
aas
iret
pop
mov
push
pop
or
mov
xchg
mov
test
pop
fld
pop
mov
fwait
rorb
and
and
pop
in
sbb
inc
mov
pop
insb
icebp
movsl
fistps
imul
out
call
jns
mov
pop
and
xchg
std
and
scas
fistpl
and
sub
shr
inc
fsubl
je
stos
sub
loopew
rcrl
add
pop
icebp
call
push
loop
in
inc
fs
rclb
mov
mov
mov
int3
test
inc
pop
mov
cltd
xchg
push
orl
pop
and
fstpt
icebp
mov
mov
push
test
push
insb
cltd
dec
lods
mov
scas
inc
jo
xchg
pop
test
or
inc
pop
push
stos
add
sub
jne
add
lret
test
imul
pop
in
xchg
inc
in
decl
add
or
add
adc
push
outsl
call
loope
pop
sbb
sub
sbb
les
fwait
mov
pop
aaa
mov
test
lcall
or
xlat
in
mov
xor
out
sbb
imulb
loopne
jg
fwait
xchg
mov
xchg
lahf
xorl
insb
jl
popl
daa
adc
out
jbe
jne
cmc
test
leave
test
xchg
cs
and
cmp
or
adc
push
shll
in
jo
dec
inc
push
leave
jbe
xchg
lahf
push
in
xor
sub
in
push
push
dec
inc
mov
mul
mov
inc
lea
and
or
adc
xchg
cmpsb
bound
pop
or
jns
scas
sti
clc
pop
test
repnz
les
xchg
imul
sti
shrb
or
test
stos
les
fwait
stos
insl
push
dec
je
mov
fidivrl
cmp
mov
push
stc
je
iret
ret
push
and
mov
mov
add
mov
call
fdivs
pop
xor
in
pop
sub
repz
push
bound
adc
push
stc
lods
fnsaves
nop
dec
out
cltd
outsb
out
cmp
fcmovbe
jbe
push
inc
rorb
xorb
cmpsb
mov
xchg
scas
rclb
push
sarb
mov
jmp
lcall
outsl
mov
roll
orl
pop
cmpsl
pop
outsb
mov
xchg
andb
xor
or
xchg
sub
jno
mov
mov
mov
adc
repz
add
out
jns
inc
xchg
fsubrl
pop
mov
mov
test
fisubl
pop
les
repz
jne
fs
enter
or
aas
stos
je
ja
mov
outsb
in
add
push
and
sub
xor
scas
out
jp
jle
enter
popa
scas
dec
xchg
movl
mov
cmp
cld
or
jg
jns
je
xor
adc
push
sub
es
dec
and
js
sbb
sbb
dec
sti
xorl
jb
add
lret
int
or
mov
loope
aam
lret
dec
sahf
dec
jbe
fimull
sbb
inc
fisubrl
loopne
inc
ret
dec
pusha
in
sar
fldcw
clc
insb
mov
mov
int
mov
in
rolb
roll
fistl
std
jg
sahf
inc
sub
jmp
jmp
hlt
dec
inc
push
or
jle
mov
test
cs
icebp
pop
sbb
aad
addr16
outsl
cs
pop
jne
pusha
push
mov
inc
sbb
mov
xchg
jl
xchg
mov
jne
mov
xchg
push
loop
mov
stos
and
push
rclb
adc
nop
lret
xchg
pop
mov
loop
mov
sub
xor
jns
lret
lock
jg
rcrb
call
dec
adc
mov
mov
xor
shlb
jae
and
decl
out
les
lods
dec
ror
popf
shrb
or
repnz
iret
bound
scas
out
xchg
mov
jns
mov
out
jl
sbb
or
xchg
lcall
and
fstpt
stos
das
scas
cmp
cmp
aas
dec
shrl
imul
in
xchg
push
addr16
outsb
dec
dec
jbe
push
stos
pop
mov
rcr
mov
xchg
out
push
lock
cmpsb
insl
nop
lret
insb
sbb
mov
push
or
stos
and
sbb
lock
cltd
ficomps
adc
fiaddl
ret
mov
cmpl
sbb
cmp
mov
imul
fadds
add
insb
lahf
push
stc
cltd
mov
push
xchg
enter
in
data16
insl
call
sbb
push
xchg
dec
aam
jecxz
mov
aad
mov
addr16
and
imul
xchg
loop
test
inc
and
jb
mov
out
sub
out
pop
cwtl
lahf
clc
subb
cs
sbb
sbb
and
clc
mov
xchg
fcomip
xchg
and
iret
mov
jo
lret
cmp
adc
ljmp
fdivrl
sub
aam
ficompl
lock
fwait
mov
xchg
xchg
or
lahf
std
sub
pop
xlat
loope
inc
in
call
mov
mov
jle
out
addr16
fbstp
test
mov
jns
out
jecxz
cmp
lcall
daa
add
jl
icebp
sub
jno
inc
add
jne
and
es
xor
add
data16
sbb
imul
ljmp
imul
mov
add
add
xor
cwtl
adcb
mov
movsl
cmp
sub
cmpsw
inc
inc
cld
lods
cmc
mov
add
test
aam
lods
pop
sub
push
add
push
jecxz
add
lret
shlb
or
arpl
push
inc
xor
or
mov
jg
sar
lods
pop
and
pmullw
mov
sbb
xchg
les
mov
push
sbb
dec
sub
sbb
jmp
addl
adc
mov
adc
adc
movsl
sbb
mov
fsubrp
rcl
ja
mov
mov
mov
push
outsl
shl
mov
mov
mov
cli
aad
hlt
clc
aad
inc
mov
jno
xchg
mov
or
inc
mov
push
xchg
shlb
bound
xchg
add
sub
add
inc
push
out
popf
fildl
cmpb
fidivl
rcrb
inc
popa
sbb
jp
movsb
pushf
mov
pop
sbb
imul
pop
jne
jle
pop
dec
add
popf
cmp
xlat
add
mov
fs
adc
adc
cmp
cmp
xor
mov
push
mov
jmp
orl
das
mov
cmp
into
or
add
scas
pop
sub
fisubs
pop
js
enter
hlt
sar
nop
dec
push
scas
push
xor
test
loope
leave
cmp
dec
pop
xlat
imul
loope
movsl
mov
nop
popf
stos
movsl
and
stc
add
adc
cmp
clc
cmp
shl
movsb
cmp
mov
add
or
xchg
out
fadd
lock
pop
jl
mov
add
insl
inc
mov
inc
fcoms
hlt
cwtl
cltd
es
add
sbb
inc
jb
push
cmp
and
jns
cmp
dec
xchg
stos
mov
aaa
jns
repnz
jge
pop
mov
xor
pop
xor
movb
and
jmp
add
jae
mov
cmp
mov
pop
jne
cmc
xor
daa
lahf
ja
inc
outsb
out
pop
or
sub
fwait
sub
stos
test
pop
ss
movd
dec
popf
fxch
mov
rclb
adc
mov
lret
mov
jl
faddl
aas
xlat
sbb
push
push
dec
sahf
jne
jmp
adc
ljmp
jne
push
push
jno
add
shrl
fs
imul
push
push
imul
scas
sbb
lret
mov
pop
xor
int3
xor
out
xor
in
push
cmp
out
mov
add
cld
lret
cmp
dec
mov
cwtl
push
jnp
pop
push
cmp
lock
arpl
push
cld
cmp
dec
dec
lret
xchg
lds
mov
out
adc
dec
lock
mov
cmpsl
push
lret
push
lods
and
jmp
mov
mov
sahf
xor
sbb
mov
adc
mov
out
pusha
jne
fnstcw
xor
adc
mov
mov
cmpsl
je
fistpl
fwait
stc
add
out
gs
dec
test
mov
pusha
test
mov
movsb
inc
movsl
pusha
scas
fidivrs
in
mov
sbb
popa
int3
jae
add
and
adc
push
insb
adc
std
add
ret
pusha
jg,pn
js
pop
cmp
cld
dec
and
cmc
pop
stos
popa
in
mov
loope
dec
jecxz
mov
xor
jle
scas
sti
in
daa
enter
sbb
mov
push
mov
lods
shll
dec
pop
sbb
push
cs
fptan
sbbb
cwtl
scas
aam
jno
or
out
fdiv
lea
in
cmc
mov
mov
pop
rclb
or
sub
test
in
xor
jne
cltd
mov
hlt
lods
fisttpl
pop
ret
sub
sub
fs
or
inc
mov
icebp
mov
jmp
sbb
jae
pop
jo
aad
lcall
ss
lahf
xchg
xor
insl
and
sub
outsl
rcrb
push
test
lret
arpl
std
push
testl
subb
or
mov
fidivrs
sub
in
pushw
insl
adc
dec
mov
pop
push
cmovns
jle
decb
jle
pop
push
test
mov
and
mov
lds
daa
dec
shll
or
nop
je
or
outsb
cmp
sti
ss
sub
aam
jl
sti
pop
test
xlat
stc
insl
pop
sbb
cld
push
inc
je
imul
jne
lcall
repnz
inc
loope
loope
xor
pop
push
shrb
xor
lds
data16
jne
mov
pop
xor
fadds
xchg
push
cmp
jmp
sub
xchg
xor
movsb
notb
cmpl
xchg
shlb
fimull
dec
lcall
in
imul
hlt
push
add
div
or
xchg
movsl
push
mov
shll
push
mov
mov
mov
sbb
ss
cmp
fdivrs
push
inc
cmp
fisttps
pop
pop
xor
and
ljmp
in
pop
push
pushf
add
sarb
xor
mov
adc
jecxz
xor
fs
push
pop
aaa
mov
adc
pushf
pushf
inc
xchg
cmp
jp
cmp
cli
bound
pop
fistl
in
sub
jnp,pt
push
repnz
cmp
lret
add
pusha
and
add
ret
mov
xchg
bound
cld
adc
aad
add
xchg
pop
jne
jae
fcoms
lret
sar
notb
mov
cli
je
mov
cli
ss
inc
mov
cwtl
daa
movsl
js
mov
cmp
aad
testl
dec
push
mov
mov
dec
mov
add
test
je
ljmp
sahf
add
outsl
inc
and
insb
shrl
jnp
push
dec
adc
pushf
inc
stos
jb
leave
bound
roll
push
push
mov
mov
aas
pusha
dec
mov
mov
popa
rcr
mov
cmp
aad
pop
inc
mov
sub
aam
jo
or
dec
and
mov
imul
and
aaa
xchg
out
sbb
adc
xlat
faddl
shlb
pop
test
or
mov
cmc
ds
pop
xchg
adc
test
lahf
pop
add
mov
ljmp
mov
lods
popf
fs
jg
add
dec
xchg
cltd
xchg
xor
xchg
pop
ljmp
aam
sbb
ss
sbb
xchg
xor
fcmovbe
out
hlt
cld
mov
jp
add
repnz
push
or
adc
popf
inc
ljmp
aam
cld
out
int
repnz
xchg
lea
or
push
outsl
dec
imulb
jb
jg
stos
mov
and
dec
fcompl
mov
in
stos
add
pop
mov
xchg
sbb
aad
adc
jne
insl
aam
cs
adc
inc
in
mov
lods
sbb
pusha
push
cltd
adc
jle
insb
lods
enter
dec
xchg
arpl
mov
push
lock
shrl
mov
or
lds
mov
adc
stos
lret
shlb
pop
sub
clc
or
xchg
pop
push
fcoms
repnz
xor
fcmovbe
aad
fisttps
add
aas
in
push
outsb
adc
ljmp
sti
xor
push
push
ja
mov
and
data16
push
ud2
add
ds
repz
cmp
sti
jo
ja
stos
popa
xchg
loopne
cld
xor
aad
jae
dec
mov
jecxz
sub
out
xchg
bound
push
ss
dec
dec
dec
or
loope
test
push
stos
dec
push
fucomp
pop
and
mov
adcb
push
xlat
lods
mov
dec
and
inc
test
test
out
sub
in
sarb
int3
mov
dec
repnz
aad
jp
mov
xchg
or
fwait
xchg
sub
addb
cmp
lret
iret
mov
aam
rorl
xchg
inc
in
pushf
filds
inc
push
sub
lret
pusha
mov
cltd
inc
or
call
push
cmp
adc
rclb
add
and
adc
fwait
mov
lds
jae
mov
push
pop
sub
and
and
out
pop
rcl
adc
loop
adc
add
cltd
cmp
daa
aas
push
data16
loope
push
inc
cltd
sti
add
clc
repz
xor
aad
outsl
mov
inc
jb
ds
pop
popa
dec
roll
mov
lcall
cmpsl
jl
nop
cli
or
pop
stos
lret
xchg
int
dec
and
and
mov
or
enter
test
xor
jno
fistpl
or
and
jp
inc
lea
mov
push
jae
jge
push
test
stos
jp
lret
imul
testl
sub
pop
cmp
adc
mov
cli
inc
xchg
arpl
xor
sub
outsb
jl
stos
jge
lods
mov
inc
mov
add
sahf
cmpsb
cmpsb
sub
jae
dec
test
loopne
vmwrite
jp
in
xchg
das
cld
mov
cmp
in
mov
stos
in
mov
dec
adc
pop
jns
lret
push
mov
hlt
jbe
jg
inc
jp
add
shll
std
and
lods
mov
cmp
popf
xchg
inc
add
outsl
or
pop
cs
mov
stc
sti
xchg
mov
xorps
bound
xor
aam
mov
cmp
sub
add
push
xor
divps
fs
jge
ds
scas
pop
ror
adcl
push
xor
andl
cmp
ror
jecxz
or
ret
push
xor
out
lahf
aaa
nop
scas
mov
mov
inc
push
push
cmp
mov
mov
cmc
mov
push
sub
repz
jecxz
push
xchg
bound
mov
cmc
aas
js
mov
sub
xchg
mov
jmp
lret
sbbl
call
mov
cs
in
stos
ret
mov
sarl
testb
or
std
movsb
enter
adc
cmp
jl
data16
cmp
test
lea
jg
sarl
test
ret
pop
stc
mov
sbb
inc
sub
jp
mov
lods
inc
mov
aam
inc
pop
das
lods
std
in
pop
sub
and
scas
nop
mov
cmp
xchg
stos
mov
shrl
pop
or
sbb
stos
call
jecxz
xor
jno
mov
cmp
push
or
sub
rcr
mov
je
decl
out
xor
add
dec
std
or
and
ja
in
ds
fsubrl
test
sbb
mov
jmp
jl
push
add
pop
push
cmp
fsubs
insb
mov
loopne
pop
scas
stos
sbb
sub
sub
mov
js
fisubs
imul
dec
orl
in
jnp
jne
sbb
jecxz
repz
xchg
add
jo
mov
popf
call
stos
into
jp
dec
into
popa
lock
xchg
setl
or
cmpsb
insb
cmp
pop
pop
adc
dec
movsb
mov
lods
loopne
sub
jle
xchg
xor
jp
fninit
lret
jne
adc
add
pop
mov
inc
movsl
sub
mov
adc
push
cltd
popa
stc
bound
mov
push
adc
add
pop
mov
sbb
lds
xor
adc
shrb
mov
xor
adc
popf
cmc
xor
dec
cmp
test
fldenv
dec
and
in
ss
cmp
loop
pop
push
jmp
push
dec
shll
sub
fwait
ja
loope
mov
adc
xchg
sbb
jmp
push
cmc
lods
cmp
dec
scas
pop
add
push
jmp
std
mov
xchg
std
lcall
jno
dec
mov
lret
scas
sbb
insl
sarl
pop
cmp
in
jbe
inc
std
lret
cmp
push
inc
shrb
mov
push
movsl
xchg
nop
imul
insl
sahf
sub
rcrl
jg
inc
in
sbb
aam
sahf
xor
insb
mov
adc
or
pop
push
jge
push
cmp
cmp
sahf
sub
cmp
aad
scas
adc
adc
fstpt
mov
or
mov
daa
and
xchg
das
inc
inc
mov
ss
xor
stc
call
test
addb
test
inc
xor
xlat
mov
js
lods
int3
add
mov
adc
mov
jl
in
and
cmp
cmp
pop
std
cmp
mov
popa
cmp
imul
dec
add
cmp
mov
sub
mov
xchg
lret
int
lcall
out
inc
gs
cmp
mov
scas
popf
nop
push
shrl
in
inc
mov
lock
lock
push
stos
or
fsubr
mov
scas
enter
les
out
stos
push
fmul
and
insb
dec
xchg
ja
xchg
es
jmp
add
call
test
outsl
push
mov
ret
aad
out
pop
cmp
or
es
fiaddl
sub
lods
or
dec
xor
repnz
aad
es
arpl
andl
mov
ret
mov
std
xchg
mov
xor
mov
jo
sub
test
cli
jbe
push
int
pop
add
sbb
nop
ss
adc
lcall
sarb
mov
repnz
adc
push
xchg
dec
into
and
movsl
or
test
fucomp
lret
les
push
push
lods
jnp
xor
addl
mov
movsl
hlt
xchg
pop
in
fbstp
jl
shll
jp
xor
fcmovnu
jmp
out
sbb
adc
ret
dec
and
mov
mov
cmp
call
ja
xor
push
cmp
fcom
fidivl
mov
mov
mov
notl
sub
add
scas
inc
xchg
pop
jl
ds
lds
mov
mov
lds
shlb
or
or
lcall
std
push
push
stos
fcom
mov
and
inc
xchg
jnp
in
repnz
or
push
fisubrs
pop
loopne
push
scas
mov
xorb
sbb
cld
test
aas
mov
mov
inc
adcb
fs
std
sbb
fdivr
and
out
sub
js
shrb
pusha
jns
inc
xor
aaa
movsl
or
add
and
jb
push
mov
shll
lods
push
es
pop
nop
xchg
push
jae
in
sub
xchg
out
add
dec
ret
sub
outsb
or
or
data16
add
gs
mov
aas
pop
clc
dec
jmp
mov
fimull
or
mov
pop
aas
test
push
cmc
xchg
fdivs
out
fidivrs
push
movsl
addr16
add
fcompl
test
aaa
ja
xlat
push
jl
fwait
push
push
mov
data16
iret
and
xor
cli
lret
inc
push
xlat
and
inc
stos
test
test
pusha
outsl
out
adc
ficoms
es
dec
shll
jbe
pop
ds
enter
cs
clc
pop
xchg
push
ds
jmp
push
notl
and
jge
push
repnz
bound
in
sahf
cmp
pusha
add
dec
mov
jecxz
dec
arpl
lods
lods
aas
mov
je
cmp
fcomp
bound
imul
cwtl
lret
pop
test
stc
cmp
push
out
and
lods
les
push
scas
rcr
cmp
sbb
adcb
popf
push
lret
out
imul
jmp
hlt
adc
enter
pusha
or
push
pop
out
adc
push
lcall
mov
insb
rcrl
sbb
or
subb
ja
jbe
lds
push
push
inc
xchg
stos
movsl
in
insb
pop
push
xor
in
loope
popa
or
gs
jecxz
push
xchg
mov
dec
mov
loopne
mov
in
or
push
shrl
rol
mov
jl
add
outsb
pop
stos
cltd
mov
je
cmp
out
imul
cmp
inc
pusha
add
mov
ljmp
loope
pop
hlt
sub
push
jbe
add
xor
sbb
cmp
adc
jg
fistpl
imul
sub
pop
mov
push
push
mov
dec
mov
pop
in
nop
jp
in
xor
inc
xorl
negb
cmp
pop
jno
outsl
das
jge
pop
adc
fwait
iretw
dec
addb
xchg
push
das
idiv
mov
push
mov
sbb
jecxz
jo
sub
daa
push
dec
xchg
mov
mov
pop
xor
fmul
das
jp
cli
jle
aaa
ret
inc
lods
mov
sbb
movsb
mov
push
repnz
fisttpl
push
xor
ret
loop
test
jecxz
aam
pushf
jnp
adc
push
mov
je
int3
adc
int
cmp
cmc
adc
and
mov
lahf
daa
push
or
xchg
inc
movsb
push
sbb
jo
addb
or
xchg
ret
lcall
sbb
mov
sub
add
mov
mov
lcall
sahf
or
mov
adc
xchg
dec
test
or
aas
add
loopne
cmp
imul
cltd
mov
lahf
outsb
ret
repz
lret
or
les
outsb
call
loopne
dec
lock
xchg
test
stos
test
lahf
int
adc
sti
xchg
inc
push
ret
jo
in
fisttpl
lods
add
jl
das
loop
int
imul
addr16
jne
xchg
pop
and
aad
lahf
lret
stos
popf
sub
push
ret
push
fnstcw
test
xchg
jmp
shr
dec
mov
adc
sbb
xchg
sysenter
fcomi
ds
dec
lock
push
jge
add
inc
pop
lods
out
xor
outsb
testb
pop
in
dec
push
mov
sbb
add
dec
add
bound
dec
inc
push
or
dec
add
jle
adc
imul
ret
int
push
lcall
mov
add
mov
pop
pop
pop
dec
jmp
int3
movsl
ret
pop
lods
jp
pusha
int3
sbbl
sbb
jb
sahf
loope
xorb
les
mov
js
hlt
orb
mov
xchg
lods
sub
loopne
and
xchg
loope
sahf
out
and
inc
stos
test
inc
xchg
jno
jnp
repnz
mov
out
or
insb
les
sub
pop
das
rcrl
xchg
pop
cmpsb
cmp
leave
adc
sbb
fistl
rolb
xor
test
jle
push
fstps
clc
es
cwtl
inc
inc
and
lds
push
push
mov
pop
mov
xchg
inc
or
bound
cld
dec
divl
xor
sbbl
xchg
xchg
nop
pop
push
adc
jl
lods
dec
mov
pushf
nop
call
mov
aad
adc
fwait
sub
imul
sbbl
inc
push
int
loope
ds
fcomps
xor
pop
test
jo
xchg
cmc
jo
loopne
ds
cmp
les
cmpsl
cmp
popf
sti
or
fidivrs
popf
mov
test
daa
lds
in
xlat
lock
dec
push
cld
mov
lcall
repnz
jb
ret
out
cli
jmp
lods
mov
sti
stc
push
movsb
pusha
ret
and
sbb
or
jmp
sahf
call
into
cli
orl
push
xor
fcmovne
outsb
push
push
fs
cmp
xchg
sub
repz
xor
dec
jg
out
repnz
adc
loop
ficoml
addb
sub
and
mov
jp
aas
in
or
push
movb
add
leave
aaa
dec
jo
dec
sbb
add
push
movb
jl
js
stos
negb
lds
stos
ds
data16
mov
mov
sbb
cmp
jae
add
gs
aad
aaa
push
adcb
popa
loopne
sbb
icebp
xchg
outsl
cmp
pop
or
push
and
push
push
cltd
cmpsl
mull
int
bound
imulb
out
mov
lods
lds
push
pop
das
in
shlb
or
rolb
dec
or
add
pop
lods
cmp
mov
int3
xchg
idiv
sub
mov
xor
cmp
andb
or
inc
sbb
pop
mov
push
out
sbb
add
push
mov
fcom
addr16
inc
jae
add
idivb
mov
push
std
or
fs
mov
jnp
sbb
cmpsb
adc
jg
stos
push
mov
insl
or
icebp
sub
dec
or
inc
sub
test
xchg
js
or
pop
mov
fistpll
es
data16
popa
mov
loop
cmp
sub
roll
or
xchg
lds
jnp
ror
ret
cmpl
sbb
ror
sbb
ficompl
xor
jbe
mulb
test
xchg
or
xor
jp
test
mov
pop
ret
gs
mov
and
rcrb
cmpsl
add
xor
ret
out
add
jae
jmp
movq2dq
mov
ret
jg
pop
shll
bound
jl
lret
fistpl
ljmp
lds
outsl
sahf
pop
add
mov
daa
jecxz
testb
push
adc
mov
enter
jne
stos
add
sarl
add
or
int
subl
aad
mov
xchg
setae
into
lcall
popa
mov
cmc
pop
outsb
push
fcmovnu
add
test
lret
lcall
das
mov
xchg
pushf
pop
push
inc
shlb
dec
cltd
movsb
xor
daa
adc
data16
lahf
xlat
lods
mov
int
push
in
xor
test
jno
jnp
mov
pusha
cmpsb
popa
push
sbb
insb
mov
inc
pusha
inc
scas
jp
and
int
mov
aaa
pop
xchg
insb
int
add
ja
pop
xchg
hlt
inc
mov
pop
jecxz
xor
ret
mov
push
pop
sahf
or
dec
stos
ds
sub
xor
inc
push
add
les
mov
negb
mov
sti
loope
cs
mov
and
inc
mov
mov
dec
sub
or
push
jb
mov
test
adc
dec
call
and
jne
aad
mov
popf
adc
les
sbb
xchg
inc
and
mov
xchg
jno
call
jnp
dec
shrb
pop
imul
movsb
push
popf
mov
mov
lods
test
jbe
push
mov
mov
imul
lcall
mov
adc
adc
cmpsb
scas
mov
mov
jnp
in
mov
push
ret
in
xchg
and
ror
add
xlat
aam
jae
sub
dec
repz
pop
jp
aas
mov
pusha
mov
je
stos
jle
mov
iret
subb
call
sti
mov
aas
ss
mov
add
shll
scas
mov
jecxz
mov
cmp
push
pusha
negl
nopl
dec
shrd
cmp
cwtl
out
loopne
ds
cmp
or
icebp
pop
shll
and
std
mov
adc
imul
sbbb
xor
mov
jo
inc
jbe
loopne
shlb
loopne
mov
aaa
aad
enter
and
sbb
xchg
sbb
inc
mov
mov
arpl
scas
pusha
out
in
loope
adc
add
das
kmovb
or
shll
or
adc
mov
mov
popf
bound
mov
pushf
ss
dec
jmp
popa
popf
aad
pop
sub
mov
gs
and
insl
cmp
cmp
test
or
adc
sti
add
stc
mov
aaa
add
add
stos
xor
fldl
int
mov
or
or
sti
jno
push
ret
jns
xchg
xor
jno
lcall
out
xchg
std
xchg
aad
xor
ss
sub
scas
movsb
cld
jge
push
js
and
mov
mov
out
inc
or
adc
mov
arpl
push
mov
pop
xor
into
adc
incl
cmp
and
pop
fadds
in
mov
inc
sbb
pushf
fldt
mov
fnstcw
jle
pop
sbb
stos
xchg
xlat
rep
aaa
mov
pop
das
stc
test
push
mov
pop
test
inc
mov
mov
dec
cmp
pusha
pop
push
cmp
in
sub
dec
int3
inc
and
push
pop
or
jne
cmp
stos
cmpsb
pop
aas
cltd
adc
inc
loope
or
daa
lret
in
mov
jl
jp
jmp
scas
adcl
test
fiaddl
jno
outsl
adc
mov
and
leave
dec
ret
inc
fisubrs
inc
bound
jmp
fistps
and
fistl
mov
stc
push
xchg
enter
shlb
pusha
xor
loopne
mov
jle
out
pop
sbb
jb
in
shl
movsb
sub
jo
sti
loope
mov
or
fwait
and
mov
into
shl
mov
jge
leave
dec
add
mov
cmp
ds
jnp
cmpsl
aad
push
jns
in
add
ja
cmp
pop
inc
aas
xorb
inc
pop
dec
add
movsb
fiaddl
cmp
and
stc
mov
dec
stos
sub
insl
imul
jle
popa
adc
inc
sahf
mov
dec
stc
jl
scas
adc
ja
ret
jge
and
mov
lret
jns
in
sub
scas
jno
js
dec
scas
fs
jmp
pop
bound
insb
scas
dec
pop
xchg
inc
mov
mov
xchg
sti
call
mov
mov
jns
mov
dec
pop
dec
adc
inc
xor
add
fildll
popf
cmpsl
rolb
imul
push
mov
jl
xlat
mov
aad
insl
xorb
push
lret
cmp
adc
subb
mov
pop
mov
and
addr16
imul
out
mov
add
fsubp
cltd
mov
xchg
js
mov
dec
mov
insl
sub
inc
sahf
fldt
lds
sar
inc
mov
bound
xchg
loop
sbb
mov
fldcw
test
push
icebp
dec
xchg
add
imul
out
add
pop
pop
fsts
xor
ret
call
clc
add
adc
and
adc
or
sbb
cmp
scas
mov
mov
pushf
xchg
inc
sub
mov
repz
outsl
jo
rcl
cmpsl
xchg
add
scas
xchg
mov
push
add
and
pushf
push
std
pop
icebp
xchg
jecxz
jb
cld
lret
lahf
hlt
push
xchg
aad
xor
jnp
sub
test
movsl
hlt
push
lret
popa
dec
mov
dec
add
daa
pop
jnp
test
in
fwait
jnp
repz
and
repz
xchg
adc
xchg
in
pop
mov
sub
popl
or
jecxz
std
inc
int3
mov
loope
ss
pop
mov
pusha
sub
or
dec
or
addr16
xor
mov
sub
jae
add
push
cwtl
out
test
sbb
scas
insl
or
add
jb
push
jp
mov
aam
or
inc
pop
insl
cmp
adc
fwait
pop
gs
mov
jnp
cld
std
loope
addr16
jmp
xor
xchg
loopne
fsubs
cld
in
decb
pop
test
ret
cltd
fwait
mov
xchg
push
sbbb
test
lahf
push
fnstsw
dec
stc
xchg
mov
ret
insb
cmp
leave
add
or
dec
iret
repz
ficoms
dec
inc
ljmp
xorl
rclb
outsl
mov
inc
mov
push
enter
adc
inc
out
xchg
adc
mov
cwtl
test
sbb
scas
push
sub
test
mov
xor
sub
or
dec
xchg
les
inc
aaa
inc
les
push
add
cmp
in
mov
add
xor
sbb
shlb
outsb
jbe
loopne
and
aam
std
out
in
mov
icebp
mov
jl
std
nop
cmp
pop
arpl
adc
push
test
dec
rol
or
mov
jp
repnz
dec
mov
pusha
incl
xchg
xlat
loopne
and
push
jnp
push
scas
aad
dec
xor
je
test
in
dec
sub
and
xchg
sbb
add
sub
aad
jmp
jae
jb
pop
jmp
adc
sub
adc
add
dec
push
aam
adc
ja
pop
scas
pop
ja
push
lods
jne
inc
adc
test
jne
mov
cmp
and
dec
dec
sbb
add
or
cli
jl
cmp
es
loop
mov
or
jecxz
jnp
xchg
pop
sti
and
cwtl
ljmp
mov
aam
into
sbb
or
das
stos
pop
dec
xchg
imull
fcompl
jmp
lret
icebp
leave
loope
rclb
push
sub
push
popa
outsb
dec
add
or
mov
loopne
adcl
sahf
ret
cmp
sub
loope
jbe
aam
cli
lcall
mov
pop
lods
jnp
daa
push
and
iret
push
clc
mov
fwait
lcall
ret
dec
mov
push
cmp
mov
out
ds
pop
bound
and
inc
mov
adc
js
lods
sbb
aaa
inc
pop
popf
ret
dec
jne
pusha
in
or
mov
data16
add
mov
aas
cmc
mov
dec
push
jae
cld
mov
insl
adc
xorb
shlb
push
fcomi
xchg
sbb
jmp
push
mov
jnp
add
hlt
pusha
pop
add
clc
push
ret
jmp
push
iret
in
mov
in
out
fsts
push
repz
xor
data16
sahf
jp
punpcklbw
test
dec
es
aam
mov
arpl
int
test
loopne
mov
idivb
inc
cs
mov
mov
and
sbb
mov
enter
stos
jl
repnz
or
cwtl
cltd
loop
inc
mov
xorl
sahf
mov
cmc
push
shlb
sub
pop
mov
jae
or
and
pop
inc
das
lea
mov
xor
inc
repz
stos
xchg
xchg
test
inc
insb
inc
data16
dec
loop
in
xchg
lea
lret
pusha
fistl
and
es
xlat
fwait
push
mov
xor
imul
push
pop
dec
xor
sbb
in
int3
data16
jnp
ret
adc
test
mov
mov
lods
sub
adc
mov
iret
in
push
push
aam
subb
out
mov
or
loop
mov
in
inc
xor
stos
hlt
inc
enter
std
cs
add
fxam
sub
arpl
inc
roll
adc
pop
mov
and
sbb
testl
aas
stos
cmp
dec
repnz
aas
loop
jge
shrb
or
aad
addr16
mov
scas
fisubrs
add
dec
rep
push
adc
leave
call
jbe
mov
cmpsb
cmp
xlat
jo
xor
dec
cmp
out
fcomps
mov
popa
les
xchg
sbb
mov
push
cmc
cmp
xor
in
pop
mov
imul
and
loope
mov
sbb
out
inc
lods
sbb
popf
into
aad
pop
xor
dec
mov
fcoml
je
inc
pusha
sarb
push
push
xor
cwtl
aad
mov
inc
jbe
cli
and
mov
jge
inc
movsl
mov
pop
adc
aaa
and
or
popf
jle
sbb
jno
pusha
adc
fwait
aad
mov
or
push
fistl
inc
jge
into
push
sub
xor
sub
addr16
pop
sbb
loope
adc
rolb
fs
xor
loopne
push
cs
scas
or
inc
jge
call
sub
adc
mov
insb
das
arpl
lahf
and
add
xchg
fs
mov
fisttpl
or
sub
mov
sbb
add
add
test
mov
mov
je
cltd
dec
xchg
inc
add
aaa
cmpsl
fnstsw
into
adc
lret
inc
leave
xor
adc
mov
incb
popf
jl
out
call
mov
mov
mov
jp
jp
or
out
adc
mov
stc
xchg
inc
in
ljmp
adc
scas
xchg
and
push
lods
dec
push
jne
in
data16
clc
cmp
js
dec
xchg
cmpl
std
cmpsb
and
and
jle
cli
iret
xchg
add
or
addr16
inc
out
pop
jmp
lahf
push
es
dec
pop
pop
mov
push
or
cmpl
xlat
jg
inc
sarl
and
leave
rorl
mov
movsb
or
push
adc
hlt
xlat
and
xchg
mov
xor
cs
jns
pop
mov
loop
mov
dec
cwtl
xchg
outsb
imul
sub
xchg
jmp
movsb
mov
inc
aaa
lcall
mov
inc
mov
sub
roll
mov
int
push
mov
xor
mov
jns
or
enter
out
xchg
iret
out
jnp
add
mov
xchg
pop
jge
roll
or
ret
mov
jbe
fwait
mov
jle
arpl
repz
adc
xchg
jmp
stc
movsl
ss
adc
pop
dec
jne
in
rcrb
inc
imul
pushf
lock
xchg
testb
jae
mov
and
xor
arpl
fsub
shr
cmp
mov
cltd
pop
and
outsl
add
into
fnstenv
aad
push
rcrb
outsb
cmp
pop
mov
shrl
daa
mov
adc
jno
jns
cmp
add
mov
dec
test
mov
fmul
shlb
bound
xor
test
xor
pop
mov
cld
and
lea
push
xor
aas
cmc
sub
xor
stos
xor
cmpsl
fwait
lahf
sub
pop
mov
in
or
cld
cwtl
xchg
mov
mov
mov
cmp
outsb
push
xchg
mov
xor
and
xchg
lods
pop
lods
addr16
mov
dec
cmp
sub
gs
sbb
dec
adc
cmp
sbb
push
xchg
adc
es
mov
outsb
inc
dec
pop
mov
pop
jmp
jp
add
jae
mov
fidivrs
adc
xlat
inc
mov
pop
out
leave
mov
adc
fwait
sub
adc
pushf
mov
cmp
outsl
push
lret
xor
insb
push
mov
flds
push
stc
rcl
cmpsb
mov
mov
repz
mov
lahf
adc
cmp
lret
add
and
inc
pop
movsb
addr16
test
repz
jno,pt
or
pop
cli
aad
add
out
ja
pop
hlt
ja
cld
out
movsl
sub
test
inc
cmp
adc
add
mov
mov
cltd
mov
mov
dec
mov
pushw
mov
mov
xor
cltd
and
or
cmp
push
hlt
xchg
cmp
cwtl
mov
push
and
cmp
rorl
jg
xor
mov
std
mov
cmp
push
sub
test
pop
fldcw
gs
les
mulb
scas
add
push
and
xchg
cwtl
outsb
andl
cmp
mov
test
adc
mov
and
cld
push
scas
push
cli
jb
daa
adc
repnz
pop
push
addr16
or
mov
loop
mov
lahf
dec
push
sbb
int
dec
aas
mov
inc
lock
ficoms
xchg
cmpsb
leave
sti
lcall
shll
stos
ljmp
ljmp
lahf
push
fidivrl
ja
repz
es
mov
or
xchg
jns
clc
inc
movsl
xchg
and
stos
adc
aaa
adc
gs
imul
dec
mov
pusha
jae
addr16
jbe
nop
pop
sti
dec
imulb
je
pop
out
mov
push
xchg
sub
pop
incl
jl
jg
lret
adc
cwtl
xor
jl
hlt
push
mov
push
and
outsb
dec
and
jge
sub
cmp
iret
test
loope
stc
jmp
and
mov
pusha
mov
ret
jecxz
push
sahf
jns
or
sbb
outsb
pop
xorl
push
clc
int
leave
push
push
mov
dec
mull
lock
or
inc
hlt
repz
lds
pop
xchg
sub
sbb
mov
loopne
insl
inc
repnz
cld
adc
repnz
add
push
jle
inc
popf
sti
xchg
dec
jge
shlb
iret
sbbl
push
or
xor
sub
cmp
push
ja
jmp
mov
inc
arpl
dec
std
cwtl
cli
sbb
leave
sahf
shlb
pushf
dec
mov
or
cmp
push
or
cmc
pusha
rcrb
jns
out
int3
mov
sbb
js
mov
int
iret
add
adc
test
sub
sbb
inc
dec
mov
mov
push
fcoml
in
sbb
jecxz
lcall
mov
xchg
push
loopne
xchg
xor
mov
cmpsl
lea
add
insb
xor
jne
xchg
out
mov
mov
fcmovnb
js
ss
cmp
and
fidivrs
push
shrl
stos
jo
adc
jle
pop
or
inc
repz
xchg
mov
mov
adc
inc
inc
lret
in
ficomps
lret
pop
dec
add
mov
daa
dec
pop
ja
test
aas
cmp
sti
lcall
pop
sahf
loop
dec
mov
daa
aad
xchg
enter
mov
pop
inc
inc
mov
jl
loope
ds
pop
imul
mov
pop
xchg
pop
xchg
push
or
cmp
xchg
faddl
lret
jno
add
jl
add
pop
cmpsl
iret
cmc
sub
testl
aaa
aad
loop
inc
cmp
or
xchg
xchg
inc
inc
mov
sub
and
jae
pop
das
cmp
ja
push
inc
and
addb
inc
insl
pop
std
adc
aas
loopne
in
leave
popa
shr
sbb
push
inc
jle
cld
sahf
aaa
mov
mov
or
jnp
mov
push
test
out
sub
dec
orl
and
mov
inc
cmp
xchg
and
pushf
cmpsb
std
mov
out
incl
mov
sbb
lret
inc
jmp
icebp
add
incb
mov
fsts
pop
mov
movsb
popf
mov
xchg
dec
xchg
orb
cwtl
movsl
pop
lea
sub
inc
inc
out
dec
cmp
push
inc
cmc
out
in
xor
sti
pushf
mov
mov
and
jb
push
rorl
out
cmp
or
add
mov
pop
inc
fcmovb
sub
inc
jbe
sbb
loop
inc
in
int3
sub
mov
in
mov
into
mov
fildl
es
mov
cs
dec
out
rcll
push
or
insl
push
mov
scas
mov
mov
scas
mov
jno
jg
mov
test
mov
in
mov
push
jb
or
cld
es
or
mov
mov
out
or
cmp
jp
js
insb
iret
ret
or
sub
mov
sub
sahf
cmc
loope
out
or
jmp
xor
outsb
out
mov
sbb
aas
mov
rolb
lods
mov
loope
out
lahf
into
cmp
lods
pop
jle
push
out
push
push
bound
arpl
or
add
jae
and
add
adc
mov
inc
mov
leave
mov
inc
xchg
adc
fwait
xor
xor
outsl
push
orb
mov
xorl
sub
adc
les
sti
repz
inc
iret
flds
sbb
dec
inc
inc
cwtl
or
push
mov
jge
movsl
push
lcall
imul
xor
sbb
rcr
mov
loope
or
jl
daa
in
jo
nop
dec
stc
and
jo
daa
out
mov
jns
adc
jge
std
pop
lods
xor
xor
push
aam
shrl
xchg
sahf
xchg
or
popf
orl
or
and
push
pop
aad
mov
mov
popa
pop
arpl
mov
adc
stc
xor
dec
js
outsb
shrb
push
inc
in
mov
or
adcb
mov
push
xor
out
shrl
mov
shl
sbb
scas
ret
sub
xchg
xor
dec
in
seto
jl
jge
arpl
xchg
adc
lds
jo
pop
add
add
jle
mov
xor
pop
adc
cltd
push
jle
mov
daa
scas
pop
mov
loope
std
dec
cli
adc
lret
cmp
lods
pop
adc
xchg
mov
jmp
leave
fwait
xchg
mov
add
dec
sbb
jecxz
xchg
xchg
and
xlat
sbb
ja
and
lahf
push
mov
fbstp
mov
loop
stos
jno
fs
popa
sbb
dec
push
rorb
jl
loopne
lock
dec
mov
jo
arpl
jne
xchg
add
push
test
xor
adc
adc
mov
mov
repz
sbb
jbe
mov
and
enter
fldt
adc
imulb
in
popa
inc
stos
mov
lods
xlat
cmpsl
shll
aad
fisubrl
sbb
div
jl
cmp
mov
mov
lret
push
lret
or
add
and
xlat
pop
dec
in
call
jle
cmc
push
add
mov
xchg
fs
add
dec
push
or
sbbb
push
pop
sub
fsts
negl
pop
or
bound
popa
push
fsts
adc
and
xchg
sub
jmp
sub
into
sbb
push
cld
test
loop
xor
adc
add
mov
adc
jmp
add
out
push
push
xor
lods
fisubl
mov
xchg
xor
or
adc
sub
jl
jb
imul
dec
addl
mov
jg
int3
cmp
in
fisubs
addr16
ficoms
js
jmp
mov
js
test
ds
mov
fisttpll
jge
pop
mov
adc
pop
adc
cmc
rclb
push
mov
jge
popa
insb
add
adc
and
ja
xchg
popa
mov
add
mov
and
jbe
pop
mov
jbe
cmp
leave
add
insl
adc
roll
in
lret
cmc
cmp
pop
sub
aas
es
scas
stos
and
cltd
push
out
mov
sub
dec
insb
push
pop
cmp
sahf
dec
sbb
and
cmp
lret
sti
pushf
fsub
dec
roll
scas
mov
adc
or
mov
dec
insb
sbb
xchg
fsub
test
mov
mov
addr16
mov
int
pop
sbb
lock
push
cli
pusha
movsl
mov
mov
nopl
add
pop
lods
mov
test
or
dec
in
jecxz
sbb
mov
xor
jl
loope
sarb
rorb
mov
subl
cmpsl
jb
cmp
lods
mov
es
mov
xchg
hlt
mov
aam
add
ljmp
rclb
div
push
into
cmp
stos
inc
pop
xor
icebp
out
xchg
dec
sbb
iret
ds
ljmp
pop
icebp
inc
addl
push
pushf
out
ds
jg
xchg
enter
pop
pop
mov
inc
or
call
mov
sub
and
stos
aas
insl
shll
jo
mov
addr16
aam
push
xor
dec
xchg
call
loopne
ret
mov
in
cmc
dec
inc
sbb
lock
ficompl
pause
add
mov
iret
scas
jmp
add
mov
cli
cmpsl
xlat
fs
xor
in
xor
cmp
into
in
inc
pop
dec
mov
pusha
in
inc
pop
imul
jecxz
out
mov
rorl
pop
add
into
mov
and
add
sarb
mov
sub
mov
sub
mov
mov
fisttps
cs
in
push
or
popa
inc
and
sub
xchg
sbb
leave
aam
sbb
xor
aaa
rclb
mov
add
pop
sti
mov
mov
push
into
insb
add
ficoms
fistps
mov
ja
inc
jg
testb
adc
xchg
jge
ds
repnz
movb
push
nop
stos
xchg
notb
fldcw
cli
arpl
loope
sbb
nop
cld
ljmp
dec
out
js
enter
fdivrl
push
xlat
add
insl
shlb
and
inc
push
xor
dec
cmp
repnz
mov
aad
fisubl
inc
mov
jecxz
mov
lea
insb
enter
fs
insb
cmp
push
dec
pushf
lea
push
fcomi
sbb
aas
jg
xchg
xchg
lret
mov
adc
out
lea
incb
test
aad
mov
test
adc
pop
and
dec
in
jae
cmp
mov
cmp
gs
insl
pop
loopne
add
outsb
out
xchg
xor
rcll
jno
push
clc
fs
out
pop
inc
inc
cld
fsubr
loopne
out
push
xor
in
push
popa
jl
ret
cmp
insl
aam
leave
pop
adc
arpl
cwtl
iret
das
pushl
cmp
ss
fimuls
pop
pop
add
xchg
mov
out
fwait
decb
mov
mov
movsl
leave
push
mov
or
jno
lret
lock
inc
jge
pusha
push
mov
insb
not
and
cmp
jg
pop
andl
cli
out
sbb
loop
mov
lea
add
fadd
mov
pop
inc
sub
inc
cmc
les
or
adc
mov
mov
adc
rorl
xchg
neg
leave
daa
mov
jmp
fcoml
or
mov
cmpsb
lea
push
jmp
xchg
and
or
pushl
ss
or
jae
sbb
js
xchg
lock
loop
jmp
jl
sahf
mov
pop
movsb
in
imull
mov
jle
push
hlt
es
test
adc
ds
insl
sahf
arpl
std
push
pop
add
xchg
inc
shlb
mov
inc
std
nop
les
sub
lods
pop
and
lcall
mov
mov
rcrb
cmpsl
pushf
xor
addr16
inc
jmp
aas
or
pop
cmp
xor
add
mov
jo,pn
sub
sub
shlb
cmp
push
xor
jmp
pushf
orl
loope
xchg
cmp
cmp
stos
arpl
pusha
mov
repz
sub
and
push
inc
inc
pop
inc
mov
rolb
push
ret
xchg
push
out
mov
push
fidivl
sub
push
mov
repz
xchg
mov
call
lea
rcrb
lret
cwtl
cmp
outsb
insl
or
movsl
test
dec
pop
mov
in
pop
cwtl
jl
push
push
lods
mov
push
ja
push
mov
lahf
pop
movsb
iret
or
aaa
jmp
xchg
or
sub
xchg
aaa
std
jp
mov
pushf
cmp
ret
addb
std
and
xchg
mov
fdivs
rcrl
and
mov
call
es
lds
cmpsl
push
shll
popf
jp
push
mov
ljmp
orb
push
mov
les
push
pushf
popf
lods
in
pop
add
ret
icebp
dec
xor
xor
sbb
mov
stc
mov
je
icebp
jne
cmpsl
sbb
pushf
mov
jnp
repz
call
jmp
out
push
aas
inc
adc
inc
dec
pop
mov
push
jmp
movsb
or
sbb
ds
push
cmc
xchg
add
in
scas
push
fmull
hlt
mov
ror
cmpb
imul
por
sarb
xor
ja
sbb
inc
popf
aad
ds
scas
aad
repnz
add
and
icebp
pop
or
xchg
ret
imul
dec
lret
inc
out
icebp
shl
push
cmpsl
js
fwait
push
xor
imul
aam
sbb
cmp
push
pop
aas
or
pop
xchg
rolb
mov
icebp
mov
xchg
movsb
or
mov
lds
outsb
test
shll
addr16
mov
dec
out
in
imul
fcmovu
adcl
xchg
and
sbb
sbb
int
pop
idiv
sbb
mov
cmp
jbe
lods
pusha
scas
mov
jg
or
popf
movsb
jp
fiaddl
out
test
and
push
addr16
xchg
fdivs
jnp
jmp
mov
repz
das
jno
pop
lock
imul
call
in
fdivr
inc
in
xchg
adc
xchg
xor
lcall
pop
loop,pn
pop
xchg
xor
jo
mov
jle
xchg
cs
idivb
add
je
jle
dec
push
mov
gs
das
gs
adc
cmp
jecxz
test
pop
in
push
xchg
bound
aad
movsb
movsl
inc
cmpsb
ret
jmp
xchg
inc
mov
lods
lcall
dec
out
cmp
push
imulb
nop
push
shlb
cmp
lods
lods
cmpb
and
pop
dec
jno
lea
sbb
movsb
and
dec
mov
repz
sbb
addb
test
push
lea
in
aas
jl
sub
push
rcr
adc
mov
mov
mov
mov
cs
fisubrs
hlt
shlb
dec
cwtl
xorl
rcl
idivb
mov
xchg
xchg
pop
push
jbe
xchg
jne
mulb
iret
out
sbb
adc
adc
mov
mov
mov
xor
jg
xor
and
rcrb
incl
pushfw
test
add
mov
test
cmp
cmp
cmpsb
je
and
daa
push
sub
dec
sub
pop
or
push
push
xor
lea
ja
mov
xor
inc
sbb
sub
pop
inc
and
lahf
inc
into
adc
mov
jecxz
loopne
cmp
repnz
fcomps
test
or
xor
loopne
mov
mov
loopne
jp
mov
les
mov
mov
mov
loop
mov
mov
aas
push
sarl
push
adc
fcmovbe
mov
add
sub
loope
icebp
dec
gs
loop
push
out
in
dec
sub
adc
js
pop
popa
fstpt
lods
das
fisubs
cwtl
ljmp
xor
inc
addl
mov
call
mov
mov
data16
inc
sbb
xor
or
xor
call
leave
fstpl
cmpsb
dec
inc
arpl
or
mov
lds
mov
inc
jge
cs
xlat
mov
inc
lods
loope,pt
shr
xor
pop
out
ret
stc
push
insl
mov
add
or
push
movsl
inc
push
scas
bound
fstpl
imul
xchg
pop
iret
movsl
and
sbb
insb
pop
mov
xchg
scas
movsb
add
rol
inc
add
inc
cmp
and
es
in
adc
xchg
test
aaa
popa
pusha
push
in
add
pop
cmpsl
arpl
movsl
in
sahf
notrack
in
inc
mov
mov
push
shlb
pop
scas
xchg
mov
adc
repnz
xchg
cli
fwait
into
dec
and
ljmp
inc
sbb
sub
sbb
add
xor
mov
ja
stc
movsb
mov
pop
cmp
inc
andl
mov
dec
arpl
cmp
test
adc
add
or
mov
or
or
xchg
inc
mov
outsb
in
jo
jno
add
push
add
fmul
and
sub
adc
xchg
test
insb
cmp
scas
or
sbb
in
call
sarb
or
ret
cmpsl
or
jg
aad
scas
repz
ds
std
leave
adcl
scas
xor
add
int
fldcw
mov
int
out
dec
mov
sbb
arpl
rcll
and
add
jbe
cltd
test
out
int3
hlt
cmp
push
loop
fwait
pop
mov
ret
add
outsl
inc
mov
pusha
xor
dec
dec
dec
aad
dec
inc
int3
pushf
test
imulb
lahf
cmpsb
imul
sub
fs
nop
out
pop
cld
cmc
push
imul
xchg
pop
mov
and
adcl
lods
sbb
jmp
push
mov
lcall
lcall
outsl
xchg
push
pop
or
push
es
or
fsubr
mov
lcall
or
xor
pop
cltd
movl
pop
pop
sub
lahf
pop
in
xchg
jbe
test
mov
jnp
jne
popa
mov
lret
cmp
mov
lea
fcom
lock
mov
pop
push
cmp
pop
leave
pusha
push
mov
jo
sbb
ds
jo
jge
aam
int
or
cld
pop
xchg
loopne
sub
lods
mov
add
int3
sar
mov
adc
rcrb
int3
mov
push
das
fldt
movsl
mov
add
xchg
or
outsb
adc
xlat
sbb
mov
adc
jg
jnp
int3
mov
nop
pushf
loop
test
loop
cwtl
ljmp
sbb
pop
jg
mov
call
cmp
dec
data16
hlt
xlat
jns
enter
addr16
loope
dec
pop
adc
sbb
std
mull
mov
sub
cld
lcall
loopne
fadds
cmp
js
iret
mov
clc
inc
or
test
insl
das
mov
les
sbb
cmp
fsubl
inc
lcall
insb
fiadds
sbb
je
ds
jae
mov
mov
sbb
es
mov
mov
push
push
cmp
dec
scas
iret
dec
addr16
insb
push
jbe
mov
sub
mov
leave
push
mov
loopne
fdivs
js
sbb
cmp
xor
shll
push
cli
and
cltd
sbb
cltd
mov
lahf
addl
testb
push
push
jb
cmp
xor
add
in
insb
aas
jle
add
popf
icebp
sbb
fdiv
adc
or
and
adc
jo
push
into
cmc
negb
xchg
sti
xchg
aaa
sahf
pushf
clc
jge
and
pusha
je
test
je
mov
hlt
je
mov
clc
jo
dec
hlt
iret
push
add
inc
mov
std
popf
mov
jl
das
sahf
and
dec
shlb
repz
es
scas
fnstcw
sub
inc
push
stc
mov
xchg
cmc
xor
int3
or
fwait
rcrl
std
adc
out
dec
and
dec
mov
movzbl
pop
mov
aad
mov
xorl
push
or
call
push
sub
insl
push
aaa
pop
adc
repnz
inc
sbb
jle
jmp
sbb
int3
jp
fstpl
bt
jecxz
jnp
xchg
dec
into
rep
shlb
cs
icebp
lock
repz
mov
leave
mov
mov
rolb
das
jl
out
mov
into
test
push
rolb
inc
aam
or
stos
pushf
xor
sbb
fucomp
es
xchg
call
in
scas
pcmpeqd
push
cmpsb
dec
cltd
cmp
jecxz
fdivr
subb
imul
ud0
pop
addr16
btc
xchg
movsl
sbb
push
xor
mov
sub
xor
mov
cmp
je
ljmp
push
scas
mov
addr16
iretw
xor
daa
in
mov
ja
lods
pop
cmpsl
ss
cmp
cmc
out
repnz
not
sub
adc
stos
ds
fisubrs
pop
je
sub
add
roll
xor
out
daa
stos
adc
pop
loopne
adc
xor
sub
out
and
rolb
testl
repnz
cs
ret
cmp
mov
cld
sub
mov
sbb
jo
cmc
pop
mov
dec
cwtl
and
jbe
loop
jns
cli
mov
aaa
mov
add
loopne
xchg
bsr
inc
adc
cmpb
ss
or
scas
shr
je
into
pop
sub
js
in
lds
lahf
pushf
insl
aad
or
push
or
sub
sub
in
movsl
je
lret
call
pusha
push
add
mov
xchg
pop
cmpsl
lret
cmp
out
in
js
ret
push
ret
cs
adc
cmp
in
mov
insb
fs
test
dec
pop
adc
cmpsl
cmpsb
out
mov
addr16
lods
dec
enter
cmpsb
lds
loopne
jb
test
std
rcl
rcrb
push
ret
lock
add
sbb
dec
add
cld
lahf
leave
ljmp
lods
mov
mov
or
inc
xor
lahf
cmp
fwait
cmpsb
or
sbb
push
repnz
adc
leave
rcr
add
fadds
sti
sub
or
repnz
dec
neg
cmp
or
adc
orl
repnz
test
mov
sub
int
pop
fldln2
outsb
mov
xchg
mov
mov
sbb
mov
jbe
shl
rcll
jle
mov
fimuls
loop
jge
inc
jbe
adc
rorl
jmp
adcb
sbb
clc
adc
mov
jo
lret
push
mov
out
dec
xor
and
mov
pop
sbbb
pop
in
enter
mov
dec
push
or
mov
cmc
inc
lods
xchg
or
cmc
pusha
aas
mov
out
sub
call
arpl
xor
cmc
imul
pop
push
mov
leave
mov
sbb
imul
mov
push
dec
stos
xor
cmc
cmpsb
das
and
inc
cmp
jge
pop
xor
das
cld
xchg
push
and
lea
mov
add
enter
inc
arpl
jae
cmp
popa
ffree
ds
loope
lret
cmp
jno
test
mov
pop
mov
movsbl
les
or
adcl
dec
sbb
out
filds
insl
xor
push
push
sbb
inc
sub
dec
mov
push
cmpsl
and
inc
idivl
shll
jbe
rcrl
gs
stos
lock
fiaddl
mov
pushf
andb
jno
cmp
fidivrl
dec
jns
jecxz
test
sbb
push
scas
xchg
jns
adc
mov
mov
aad
in
jb
inc
mov
adc
ja
jo
xchg
mov
sti
roll
xor
pop
mov
fabs
push
adc
in
xchg
test
cli
xchg
cwtl
add
in
test
nop
mov
daa
test
cmp
stos
test
adc
sti
rol
test
sub
test
fbstp
enter
pop
shlb
fadds
ret
dec
add
pop
push
loop
fdivs
fwait
sbb
arpl
xor
mov
jmp
inc
and
hlt
xchg
xor
jb
lcall
mov
lahf
xchg
aad
fs
mov
loop
cmp
test
movsl
fyl2x
std
sbb
pop
dec
jmp
ret
mov
lods
mov
lea
adc
jle
addb
dec
xchg
addr16
subb
mov
lahf
rcl
lods
push
pop
scas
repz
pop
scas
test
cmpsb
cmp
fists
scas
xlat
push
push
sarl
daa
xchg
xor
and
std
xchg
add
test
aam
push
orb
movsl
mov
movsl
dec
push
adc
mov
cmpb
xor
and
cmc
jmp
dec
test
out
addr16
cmp
push
add
arpl
or
hlt
mov
push
jae
add
cwtl
test
pop
test
stc
mov
mov
push
and
mov
into
ds
sbb
jbe
fwait
dec
cli
loopne
inc
jmp
sub
lcall
mov
lock
je
pusha
daa
inc
pop
out
sub
mov
pusha
aaa
adc
push
dec
sub
outsb
lock
or
sbb
repnz
jnp
jno
or
cltd
mov
out
in
push
in
pop
stc
pop
stc
bound
mov
mov
mov
pop
pop
inc
jno
ret
jecxz
std
mov
push
testb
lahf
scas
loopne
in
cmc
repnz
test
insb
jne
sub
or
rorb
adc
sub
arpl
xlat
sub
test
into
test
in
dec
dec
aas
lock
test
mov
xorl
fldcw
outsl
dec
inc
xchg
xchg
test
adc
lock
jl
loope
jmp
ss
add
push
push
adc
add
dec
jbe
idivb
ljmp
xor
jno
mov
or
add
or
out
lock
test
testl
mov
adc
in
cmpl
jmp
mov
iret
dec
or
or
xor
push
roll
loop
bound
outsb
sub
clc
xlat
fildl
dec
pop
pop
mov
pop
jge
daa
push
sbb
dec
dec
test
shlb
xchg
movsb
dec
pop
cmc
aas
dec
mov
inc
push
loop
inc
mov
inc
mov
outsb
xchg
gs
pop
cltd
arpl
cmp
pop
fists
or
adc
push
push
mov
cmp
xchg
out
in
jl
xchg
xor
pop
mov
outsl
sub
jbe
jne
push
sbbb
gs
sbb
push
dec
pop
jp
cmp
jns
and
jne
negl
mov
xchg
dec
mov
push
inc
push
aam
mov
data16
cltd
loope
pop
mov
and
dec
in
xchg
ret
inc
into
or
dec
sub
or
psubusw
sub
scas
outsl
and
leave
call
dec
dec
cmpsl
insb
adc
xchg
jmp
das
repnz
shlb
shrb
addr16
push
fs
jns
inc
sub
xlat
sarb
aam
std
fs
repnz
scas
sbb
lret
mov
fs
and
inc
in
push
or
movsl
cmp
lods
mov
dec
fildl
and
clc
clc
cmp
mov
cmp
loop
push
mov
push
lcall
das
cld
mov
mov
enter
daa
dec
pop
and
insb
pop
sbb
dec
jbe
loopne
int
push
cltd
xchg
push
movsl
int
ffreep
int3
mov
scas
loop
cmp
adc
mov
int
pop
jns
pop
lods
out
lock
xor
ja
inc
out
push
std
inc
pop
pop
cmpsl
push
pop
xchg
loopne
popf
lock
repz
pop
mov
fwait
inc
and
xor
sub
or
subl
fistpll
ret
lock
lahf
enter
adc
call
add
mov
in
daa
mov
dec
inc
jno
dec
imul
lds
pop
inc
inc
rorb
mov
pop
je
out
in
cltd
push
jecxz
mov
stos
es
adc
cmp
lods
pop
sbb
lret
or
shll
pop
adc
inc
push
test
fstps
sbb
fstps
add
inc
and
mov
into
adc
xchg
idiv
jg
push
imul
fistpll
inc
or
push
lcall
mov
mov
mov
ret
adc
dec
testb
and
shlb
lods
cmp
cwtl
pop
pop
dec
pop
imul
push
mov
inc
faddp
gs
mov
scas
mov
mov
mov
jge
mov
stos
je
aad
or
hlt
stc
mov
pop
insl
lret
xor
js
test
mov
mov
outsl
fnstcw
in
out
out
sbb
xchg
dec
xor
in
sub
in
sbbl
call
scas
mov
mov
sbb
inc
aam
lret
mov
daa
dec
mov
sub
sti
lret
add
pusha
rcrl
cmpsb
sbb
mov
adc
and
adc
fcmovnbe
in
mov
outsb
adc
lret
mov
enter
mov
pop
pop
mov
enter
scas
out
lods
stc
scas
cld
arpl
push
cld
xor
inc
lock
inc
mov
sahf
xchg
mov
mov
mov
iret
pop
push
push
and
shrl
scas
sub
lock
or
in
fnsave
hlt
sbb
sub
push
lds
rcr
std
adc
mov
mov
mov
gs
cmp
mov
pop
push
leave
cwtl
inc
lds
out
pop
repnz
xor
lahf
fidivrl
clc
dec
movsb
cmp
mov
stos
clc
push
sub
pusha
test
clc
and
loop
fisubl
cli
dec
cmp
repz
add
or
jb
cwtl
and
dec
push
jnp
insl
and
inc
stc
mov
xchg
mov
cmp
in
addb
or
jg
and
repz
push
int3
pop
push
smsw
jp
popa
test
test
pop
jle
push
dec
cmp
push
stos
out
mov
fcompl
and
shll
mov
pushf
cmp
pop
push
jmp
dec
into
out
dec
fwait
mov
outsb
inc
mov
mov
sbb
jl
pop
stos
gs
leave
lcall
pop
fnstenv
ds
mov
jl
xor
std
lea
lahf
jg
shlb
adc
into
xchg
bound
jl
movsl
pop
xor
cli
stos
adc
lods
mov
cld
jbe
jmp
sysenter
test
scas
hlt
jae
fdivl
mov
mov
mov
sbb
cmp
add
in
mov
add
das
jmp
cmpb
dec
dec
mov
cmpsb
pop
mov
in
mov
add
pop
jo
ffreep
push
rcr
mov
mov
pop
insb
divl
lds
aad
cltd
sub
sbb
sub
mov
lret
dec
into
icebp
test
adc
sti
orl
cmp
hlt
and
and
aaa
xchg
out
fiaddl
popf
jp
xchg
adc
popf
xlat
cwtl
or
add
mov
nop
push
ja
dec
inc
push
or
jl
movsb
pop
mov
ja
inc
add
dec
or
mov
lret
aaa
rolb
loop
jg
jns
inc
pop
icebp
jmp
out
sarl
rcrb
shl
shr
out
mull
push
xchg
mov
in
testl
fbld
ret
outsl
gs
mov
mov
orl
sub
outsl
inc
mov
fcoml
pushf
jbe
push
jbe
call
sub
mov
xor
jge
rcrb
fldcw
rcrb
jne
or
loope
xor
ljmp
mov
adc
xor
dec
pop
lock
out
inc
dec
mov
cmpsl
xchg
lret
in
sbb
pusha
repz
dec
pop
jo
or
icebp
enter
or
js
les
or
stos
int3
ljmp
xchg
jbe
dec
negb
sahf
je
push
sarb
mov
or
gs
dec
lods
fnstenv
xchg
xor
cmpb
ds
mov
sbbl
sar
out
pusha
cmpl
add
lods
mov
rcrb
xchg
xor
sub
out
dec
outsb
lahf
mov
or
push
cmc
jne
sbb
leave
call
test
push
push
mov
fdivrl
fwait
into
dec
xlat
pop
cmp
or
inc
cmpl
inc
icebp
scas
test
sbb
fidivs
ja
fstps
aam
lret
gs
fnstenv
js
repz
cwtl
addr16
loopne
clc
in
and
cmp
pushf
enter
call
mov
and
es
cmpsb
pop
fcmovnb
jns
xchg
sub
push
or
mov
mov
addb
fwait
bound
mov
xchg
xor
adc
push
out
loopne
push
dec
add
and
ret
std
sub
imul
fnstenv
sub
jae
test
jne
jmp
lds
mov
imul
or
inc
fiaddl
adc
cs
int
mov
outsb
and
bound
xorb
adc
ds
xchg
out
jmp
gs
sub
shll
jmp
inc
bnd
sub
flds
push
or
mov
cmp
mov
cld
xchg
dec
pop
mov
jp
cmpsl
lret
mov
adc
fistpll
cmpsb
scas
add
sub
mov
outsl
push
dec
mov
xchg
sbb
and
mov
add
iret
call
jae
rcr
push
test
out
push
andl
into
mov
pop
arpl
ret
xchg
cmp
pop
cmc
mov
pop
xor
adc
cmpsl
or
and
sub
sub
out
adc
or
clc
pop
lock
mov
hlt
outsb
cs
xchg
aad
repz
and
cmp
sti
jg
sub
inc
cmpsl
dec
std
push
push
jp
fwait
cmp
xor
sahf
sub
jl
dec
and
ret
sbb
xchg
pop
add
sbb
mov
and
mov
cmp
pushf
xchg
rcrl
sub
sbb
inc
add
xchg
imul
jmp
push
dec
pop
ror
jae
jmp
je
scas
shll
xorl
in
mov
sbb
in
movsb
lods
cmpsb
xchg
pop
jae
cmp
mov
add
and
sub
outsb
test
pop
push
dec
aam
loope
sbb
mov
cmp
fistpll
repz
addr16
xchg
xor
fcoml
xchg
xor
scas
pop
mov
xor
add
enter
imul
repnz
adc
jp
mov
xor
bound
adc
sbb
hlt
and
cmp
lods
inc
mov
pop
inc
push
sahf
lds
pop
lods
ds
insb
jo
ret
ds
lret
fadds
pop
jnp
cmp
negl
pop
dec
imul
xorps
test
in
jbe
ja
scas
adc
lret
les
test
push
xchg
xor
push
fcom
je
fwait
mov
scas
dec
push
inc
sahf
cmp
addr16
dec
xlat
int
inc
out
je
addr16
cmp
enter
in
inc
cmp
pop
ja
je
mov
std
mov
cmp
cmp
pop
daa
mov
inc
sbb
es
popa
push
ret
gs
add
mov
js
and
gs
pop
in
mov
mov
scas
fs
inc
movb
imul
pusha
sub
or
daa
xor
mov
and
xor
in
pop
pop
and
imul
mov
adc
dec
mov
jle
sbb
or
xorb
mov
aaa
or
sbb
dec
add
ljmp
push
fcomps
leave
ss
imul
movsb
lods
sbb
push
sub
imul
jne
jg
mov
cltd
or
xor
xlat
cwtl
rdpmc
cmpsl
jl
out
pop
enter
fcomip
call
and
sahf
inc
ss
dec
cmp
push
outsb
fidivs
shll
and
ret
addl
pusha
lret
aaa
add
sub
cmpb
mov
xor
cmpsl
add
insb
mov
sarb
inc
loopne
fwait
push
dec
push
lret
lock
cli
cmpsl
inc
daa
inc
and
or
xor
test
or
bound
mov
scas
mov
or
dec
fidivrs
lcall
and
sub
out
mov
scas
ret
in
nop
jp
sub
inc
test
dec
dec
mov
pop
mov
jbe
pop
js
xchg
out
push
ja
dec
jg
or
xchg
pop
sub
int
in
dec
lock
andps
push
xlat
mov
subl
ret
xchg
mov
icebp
movsl
bound
fs
or
jae
rcr
fwait
or
sub
push
inc
jne
stc
popf
cltd
sbb
testb
rclb
aad
sbb
jbe
sub
xchg
repz
mov
lahf
outsl
mov
mov
icebp
out
mov
inc
test
fucom
lods
nop
xor
rcl
dec
pushf
and
hlt
xorl
rorb
insl
push
mov
inc
je
mov
and
adc
push
outsl
das
daa
or
out
lcall
pop
stc
mov
test
aam
dec
pop
int
inc
lock
adc
and
imul
rcl
out
jecxz
shr
mov
sub
cli
mov
xchg
mov
mov
std
aaa
add
mov
push
andl
bound
loopne
dec
add
pop
fists
loopne
movntps
subl
xadd
cmp
int3
xchg
mov
pop
lods
shrb
sahf
sub
repnz
shll
stc
mov
inc
addr16
push
fsubs
pop
pop
push
adc
push
or
inc
dec
adc
aam
or
lock
push
scas
mov
mov
inc
push
cmp
jle
lods
jmp
adc
push
fsubl
lds
cmpsl
jnp
xor
jp
lret
movups
rolb
sbb
xlat
push
pop
shrl
into
nopl
jle
insb
mov
xchg
jno
mov
js
add
outsb
shlb
xlat
lcall
adc
hlt
cmp
jmp
mov
mov
push
popf
sub
fisubl
daa
dec
jecxz
sub
ss
pop
fidivrs
stos
jl
incl
dec
mov
out
cltd
bound
gs
lds
mov
sub
pop
mov
mov
jns
lock
lea
inc
xlat
movsb
sbb
push
jbe
clc
push
mov
cmp
mov
jno
hlt
jnp
andl
xchg
data16
je
inc
shlb
fnstsw
pop
fisttpll
dec
daa
or
push
cmp
add
or
adc
lock
and
and
cmp
pop
fdiv
int
cs
pop
fmuls
inc
push
mov
das
int3
aad
inc
push
sub
cmp
cmp
mov
ljmp
mov
arpl
out
sbb
cmp
sbb
scas
addb
push
aad
sbb
sub
shr
jg
cltd
dec
mov
rcrl
ret
js
and
jnp
into
jle
mov
loope
insl
pop
ds
test
jle
pusha
xchg
sti
pop
mov
xchg
ss
xchg
movsl
push
cltd
cltd
adc
and
imul
xchg
pop
jae
adc
cwtl
popa
or
insl
inc
hlt
outsl
xchg
movsb
es
data16
jnp
mov
inc
shlb
xchg
sbb
sbb
out
adc
mov
or
pop
fcmovu
daa
lret
sbb
xchg
and
inc
sub
dec
ss
je
adc
repz
aad
cmp
es
arpl
clc
repz
or
ja
fstl
outsb
shll
or
sub
leave
add
outsb
jns
mov
jge
in
sbb
mov
pushf
and
pop
adc
out
fidivs
jg
sbb
cmp
dec
mov
dec
xchg
loope
mov
popf
mov
and
jp
repz
jge
push
inc
dec
mov
arpl
push
nop
dec
mov
jp
inc
jb
fstpt
fpatan
or
sar
pop
cmpl
mov
fiadds
loop
inc
dec
ret
and
inc
notl
ss
imul
aad
lcall
jmp
and
dec
xchg
lods
insb
rcl
pop
call
scas
inc
or
xor
popf
out
imul
and
insl
jl
das
inc
out
sub
push
jp
add
mov
inc
xchg
jg
pop
std
out
les
lret
insl
mov
xlat
fsubs
movsb
inc
mov
subb
jmp
out
and
gs
nop
xor
lcall
movl
mov
and
ret
pusha
leave
add
cmp
in
shr
dec
lret
push
and
ficoms
or
sub
mov
arpl
shl
mov
repnz
sbb
or
sbb
sbbb
xor
inc
orb
xchg
or
shl
mov
enter
in
sub
imul
mov
test
dec
ljmp
xchg
and
adc
mov
addr16
mov
dec
popl
add
inc
xor
inc
push
jmp
insb
dec
jnp
push
es
jo
push
jae
fdivrl
mov
pop
bound
and
mov
cmp
lcall
xorb
popa
inc
and
mov
iret
nop
and
flds
jecxz
xchg
mov
popa
cmpsb
xor
mov
xchg
pop
mov
test
dec
push
push
fistl
inc
addr16
stc
mov
addr16
add
jae
cwtl
sahf
out
pop
andl
shrb
pusha
dec
pop
xchg
cltd
xchg
push
insl
arpl
fdivrl
and
sbb
or
jae
sbb
xchg
fs
dec
and
jne
sbb
cltd
fldt
ljmp
cmp
lds
outsb
cmc
mov
imul
popa
in
pop
jne
stos
fprem1
call
fcompl
fs
stc
pop
stc
dec
add
lret
dec
aaa
push
sarb
cmpl
pushl
mov
pop
arpl
cmpsb
pop
fbld
mov
push
or
insl
fs
fsubrs
rclb
jecxz
pusha
inc
movb
xorl
lret
repz
push
mov
sub
loopne
adc
jp
fidivrl
repz
sub
mov
push
ds
nop
mov
arpl
test
clc
mov
in
jp
stos
cltd
movsl
adc
dec
hlt
ror
and
cmpsb
pushf
pop
es
jmp
xor
mov
outsl
cwtl
sbb
dec
mov
or
arpl
push
out
jnp
inc
fsubrl
xchg
and
sub
popf
jbe
jnp
mov
adcl
daa
sbb
mov
lahf
cmpsb
pmaddwd
pushf
add
daa
cmp
pop
pop
in
push
inc
pop
jge
cmp
jle
test
fsts
les
mov
es
xchg
adc
in
push
jbe
nop
and
fidivrs
and
mov
fcompl
fwait
ja
int
or
sahf
dec
scas
jne
ror
pusha
inc
mov
adc
and
gs
push
mov
ds
insb
stos
hlt
push
ret
mov
jo
add
insb
xor
lret
xchg
pop
movsb
test
fsubrs
out
cld
popa
insb
dec
or
daa
or
cli
cmp
mov
jmp
inc
or
jb
aad
fidivrs
xchg
enter
cli
sbb
aam
push
popf
fisttpll
push
outsb
loop
dec
insl
sbb
cs
insb
inc
pop
out
out
jl
jge
aad
sub
jle
addr16
cmpsl
jle
mov
cltd
arpl
lds
pop
subb
add
aas
sbb
shrl
or
pop
add
add
xor
jae
test
cmpsl
mov
outsl
mov
nop
add
hlt
mov
add
cld
cmp
cltd
in
mov
inc
rorl
pop
mov
jg
add
addr16
lret
cmpsl
mov
ret
jmp
pop
movswl
mov
mov
sub
push
ja
pop
push
add
jns
in
or
sbb
inc
repz
into
or
cmp
cmc
or
outsl
loope
push
test
subb
adc
mov
xor
stos
ret
add
iret
pop
inc
pop
das
dec
popa
movsb
lock
jns
shl
adc
mov
ds
mov
outsb
mov
shl
jnp
xor
out
ljmp
cltd
mov
push
jmp
xchg
dec
or
xchg
jne
fcomps
push
popa
and
add
sub
or
pop
mov
adc
or
in
inc
fcoms
gs
out
inc
test
imul
sub
mov
lock
mov
rcrl
push
mov
das
test
in
aas
or
push
rcl
and
bound
and
js
out
outsb
fdivrp
xchg
aad
jb
addr16
jno
shrb
push
lret
mov
push
add
loop
add
dec
or
orb
adc
scas
pop
cld
sbb
jo
ds
cmpsb
add
lods
cwtl
cmp
add
test
ljmp
push
xlat
test
arpl
push
mov
fwait
xchg
xor
or
test
cld
sbb
sti
aaa
lret
loop
mov
mov
xchg
fdivrl
xchg
mov
ret
lret
out
add
push
push
iret
sbb
lahf
mov
push
out
cmp
stos
mov
push
aaa
sbb
mov
inc
cs
adc
pop
jmp
clc
jnp
cli
test
cmp
fnsetpm(287
in
hlt
adc
xchg
pop
mov
mov
mov
adc
shrd
add
arpl
mov
mov
imul
push
pop
adc
mov
cmpsb
xchg
outsb
push
push
popa
add
rcrl
movsl
mov
mov
add
pushf
mov
inc
cmp
movl
out
scas
leave
xchg
popa
sub
fwait
push
jle
pop
cmp
repnz
adc
inc
leave
mov
jns
repnz
adc
mov
std
pusha
das
xor
popf
jo
pop
xor
lock
inc
sarb
push
or
sub
movsb
repz
lock
insb
cld
jmp
xchg
inc
mov
testb
mov
xlat
pushf
jo
addr16
sbb
jge
mov
mov
mov
push
sar
adcb
dec
pop
nop
test
imul
divl
xor
cli
movsl
xor
push
les
add
or
lds
cli
xchg
xor
in
dec
cmpsb
sarl
add
mov
xchg
loope
inc
mov
stc
js
and
jle
lret
xchg
cmp
je
ret
dec
mov
out
add
inc
xchg
in
inc
xchg
ljmp
mov
out
iret
adcl
jle
sti
fcomi
jae
xchg
cmpsl
adc
rcr
cwtl
iret
addr16
sbb
xchg
ret
int
jo
jns
out
xchg
rol
mov
lock
adc
outsb
cmp
movsb
pop
xchg
jbe
arpl
loopne
and
ds
sahf
jmp
cli
push
sbb
loope
mov
sbb
stos
and
cs
xchg
mov
mov
cmc
pop
fs
repz
sbb
add
add
pop
xchg
cmpsb
jecxz
repz
sbb
pop
add
sbb
icebp
movsl
cmp
fs
mov
mov
ret
lds
inc
icebp
or
mov
sahf
sbb
cmp
xor
dec
js
js
movsb
sbb
and
cmp
mov
add
sub
dec
hlt
push
iret
stc
adc
lock
mov
sti
add
lods
mov
iret
dec
sbb
cmpsl
sbb
lret
xchg
and
int3
dec
ja
lret
jae
pop
cli
pop
jmp
mov
test
mov
mov
fdivrp
lret
jle
mov
lods
clc
out
xor
xchg
or
xorb
and
and
or
mov
cmp
aas
into
add
and
hlt
inc
pop
push
out
jle
or
lods
jnp
mov
lret
pop
jmp
xor
int
xchg
mov
pop
jmp
sub
jb
xchg
jmp
leave
fs
lods
popf
imul
cmc
ret
xlat
rorl
neg
dec
adc
inc
or
add
mov
leave
out
movsl
xor
les
sub
mov
rorl
pop
or
push
cmc
xor
loope
push
lock
movsl
rol
and
mov
pop
pop
je
in
sub
fadds
outsl
sbb
iret
stc
mov
sub
push
push
loopne
cltd
sub
push
push
lret
mov
repnz
dec
cmp
popf
popa
cwtl
fsubr
jecxz
cmp
aam
inc
nop
add
and
jae
dec
inc
xor
stos
scas
sahf
mov
sbb
jl
dec
dec
pop
enter
add
cmpb
jle
scas
fs
xchg
add
in
mov
dec
mov
imul
addr16
add
push
add
dec
adc
bound
sahf
add
dec
clc
xchg
leave
xor
insl
and
loop
jecxz
gs
mov
cmp
push
cmp
push
and
cli
pop
sbb
mov
cmpsb
or
dec
cmpsb
or
jb
divl
add
shl
pop
test
jns
pop
and
mov
fnstenv
xchg
inc
loopne
xor
xchg
iret
cli
sbb
out
sub
enter
push
mov
mov
test
outsl
sbb
aas
stos
adc
jbe
sub
jle
pop
ret
mov
dec
jnp
mov
sub
sub
mov
popf
xchg
mov
sti
ss
ret
xor
insb
jo
or
pusha
push
in
dec
dec
fbstp
xor
push
sbb
adc
cmp
xchg
outsl
jnp
out
addl
es
and
jne
je
and
dec
inc
icebp
jb
push
fdivs
or
movsb
mov
mov
imul
fcomi
dec
xchg
sub
les
enter
std
sahf
inc
into
adc
adc
adc
adc
or
or
loopne
test
push
fisttpl
jne
add
xor
fildll
pop
int3
test
movsb
xor
xchg
adc
push
dec
std
ret
scas
xor
push
test
in
cmpsl
pop
cmp
cmp
push
dec
aam
movsb
in
repnz
aad
mov
jl
por
mov
xchg
jne
mov
or
orb
pop
data16
push
jnp
jmp
mov
or
movsb
sub
mov
add
shrb
in
inc
and
xlat
push
addr16
sub
mov
inc
pop
inc
std
or
popf
push
add
mov
xchg
mov
mov
js
aaa
les
scas
push
out
mov
std
mov
fmull
add
insl
shrb
mov
jg
mov
js
leave
cmp
sbb
push
sbb
mov
lods
test
mov
add
int
int
xor
push
fdivl
pushf
gs
or
das
xor
leave
int
scas
inc
and
into
inc
cs
jno
lahf
push
pop
stos
and
sti
cmp
jle
jl
frstor
add
sahf
or
rcll
pop
in
popa
jno
addr16
sti
cli
cmpb
jo
jnp
stos
xchg
push
iret
cmc
or
adc
les
sub
fmull
repnz
and
push
mov
sub
loope
mov
pop
gs
mov
test
push
out
jmp
lret
stos
addr16
test
jns
cmpsb
bound
adc
pop
xchg
adc
repz
cltd
xchg
mov
jp
lods
mov
loopne
cmp
test
sti
insl
hlt
lds
adc
call
sub
dec
ret
mov
push
cmp
cmc
loopne
cmpsl
adc
dec
gs
jne
in
sbb
out
ficoms
xor
icebp
fildl
mov
sbb
mov
gs
pop
imul
mov
inc
in
clc
xchg
jne
icebp
ret
negl
or
sbb
push
ret
fisubrl
js
sub
leave
mov
jns
xor
cmp
push
shlb
or
inc
movhps
mov
mov
outsl
jp
xchg
fdivrl
out
mov
jmp
imul
and
je
xchg
lds
mov
inc
mov
mov
mov
jl
inc
ret
lock
and
inc
push
mov
adc
mov
loope
adc
pop
sbb
std
pop
mov
shrl
cltd
xor
loopne
dec
pop
cmpl
mov
mov
sub
cwtl
mov
and
cmpsl
test
push
jb
jns
fstl
cltd
mov
fsubrp
pop
subl
lahf
mov
and
cld
mov
and
rcll
lret
push
dec
adc
dec
inc
fnsave
daa
sbb
dec
sub
leave
xchg
fistps
mov
pop
test
test
dec
sbb
xor
push
mov
lods
mov
aaa
addl
pop
aad
push
xor
push
sahf
and
xchg
enter
push
add
cmp
sarl
cmpsb
rcl
inc
xor
scas
daa
out
int
rolb
or
sahf
jg
sub
aas
fistpl
shll
incl
cld
test
lock
icebp
gs
xchg
dec
xchg
push
loope
cs
insl
lods
cmc
je
adc
mov
lret
cmp
push
push
xor
push
int3
test
lret
xchg
rcr
aam
mov
jbe
cmp
or
movsl
push
mov
xchg
xchg
test
sub
orb
bound
mov
jl
inc
mov
push
rcrl
rcrb
movsb
cmpsl
shr
adc
loope
push
add
jae
adc
add
imul
inc
lock
stc
imul
xchg
cmp
inc
aas
pop
jp
mov
mov
push
testb
imul
or
xor
cmc
inc
js
movsl
iret
nop
lea
jno
jg
out
filds
nop
or
fwait
daa
push
scas
inc
out
sub
leave
inc
sbb
dec
cmp
out
movsl
enter
out
cltd
icebp
cmp
adc
cld
adc
push
test
bound
into
andb
mov
mov
std
mov
test
pop
and
or
cltd
sbb
jge
sahf
xchg
jle
test
add
push
push
pop
xor
fdivs
cli
push
mov
sbbl
pop
inc
xchg
cmc
sub
mov
xchg
and
jns
jns
repnz
test
test
in
pop
sub
test
cld
aam
insl
add
sub
push
pop
inc
in
out
xor
mov
mov
out
push
add
rcl
mov
data16
mov
lock
add
ret
push
push
push
aad
sbb
inc
daa
jle
jae
xchg
pusha
adc
aad
sbb
cltd
mov
inc
mov
push
ljmp
mov
lret
mov
or
inc
xchg
xor
clts
xrelease
cli
cmc
imul
xchg
popa
inc
out
jbe
enter
das
push
mov
mov
enter
pop
cmp
cs
sti
mov
clc
fwait
xlat
inc
cmp
add
push
stos
sbb
rcr
movb
das
inc
in
test
dec
ljmp
dec
xchg
jno
dec
movsl
pop
lds
jecxz
push
inc
shlb
xchg
inc
push
pop
pop
mov
push
pop
xor
es
sbb
mov
aad
ljmp
mov
dec
adc
inc
data16
add
shll
fwait
cld
pop
repz
repz
dec
clc
mov
negl
push
mov
or
sahf
jle
mov
int
repz
mov
dec
loop
test
push
push
or
test
mov
mov
fsub
repz
xlat
cmp
negb
gs
loop
push
push
call
xor
sub
xor
aad
imul
shrl
pop
sub
jae
mov
mov
lea
jmp
cld
imul
aad
cld
jno
jb
dec
mov
mov
sub
mov
xorl
orb
sahf
sub
int3
rol
shlb
test
sub
test
test
sarb
pushf
xor
push
sbb
insl
ds
mov
xor
sbb
cmc
fldcw
ljmp
xor
jl
jnp
push
or
movsb
stos
or
and
push
je
push
ljmp
data16
lods
dec
and
mov
dec
mov
dec
pusha
jns
adc
lods
and
es
xor
scas
test
call
sbb
cli
dec
filds
aaa
adc
popf
movsb
outsl
cli
mov
mov
movsl
imul
aam
shll
inc
and
inc
jle
push
fwait
in
jo
cwtl
cmp
pusha
jnp
sbb
fs
mov
insl
mov
stc
mov
inc
insl
sub
adc
lds
mov
dec
clc
movsb
les
lds
sahf
ret
xchg
rclb
out
add
rol
xor
push
jne
lret
mov
movsl
das
repnz
push
pand
xchg
add
js
loope
aaa
adc
or
or
push
ds
sub
cmpsb
arpl
push
push
lock
mov
daa
xchg
sub
lcall
and
dec
pop
add
jp
pop
mov
lret
push
pop
idiv
push
shlb
and
lock
mov
or
jne
repz
pop
sub
push
pop
pop
jmp
cli
ret
cwtl
push
fsubl
sub
adc
mov
sbb
sbb
cmp
or
dec
inc
pusha
test
dec
popa
aad
push
rolb
jg
add
dec
jno
adc
jp
xchg
shll
jnp
gs
cmpsb
in
bound
xchg
aas
mov
mov
xor
adc
sbb
sbb
dec
or
sbb
push
out
lret
mov
lods
stc
mov
mov
mov
mov
sti
sub
ds
push
mov
xchg
mov
mov
jge
push
mov
fidivrl
loop
ds
jmp
cmp
cmp
xchg
or
mov
stos
adc
cmpsl
xchg
xchg
mov
cmpsb
bnd
test
repnz
jbe
mov
cld
popl
xchg
jno
fs
sbb
scas
inc
cmp
sbb
popf
lret
sub
lods
sbb
sbb
in
aaa
mov
dec
and
dec
outsl
subl
fs
stos
and
lea
adc
push
dec
sub
dec
ja
frstor
int
add
mov
out
js
jl
int
xchg
push
sti
in
into
pop
adc
iret
arpl
call
sarl
sub
inc
andb
or
cmp
add
sbb
jle
shrb
and
sbb
in
leave
dec
int3
inc
rolb
cltd
aam
outsb
jae
fisubl
jge
xchg
push
jnp
cli
xor
and
and
repnz
xchg
cmpsl
lods
mov
cld
andl
pop
cmpsl
out
mov
mov
andb
sub
cmpb
sub
xchg
push
cmp
jbe
and
shlb
insl
inc
popf
sbb
iret
mov
mov
mov
je
jbe
cmpsl
xchg
leave
pop
pop
xor
sub
cmp
adc
and
xchg
cltd
pop
arpl
xchg
ret
in
inc
xor
es
or
push
xor
ljmp
leave
hlt
pop
push
mov
pop
and
sti
popl
aad
sub
gs
aaa
pop
xchg
cmp
rcl
xor
mov
and
stos
push
mov
push
or
stos
fstl
ret
jecxz
and
into
mov
xchg
add
cltd
popa
aad
nop
adc
out
pop
outsl
sahf
mov
orb
adc
scas
in
ret
insl
scas
and
mov
xchg
out
jo
mov
loop
scas
outsb
jge
dec
mov
jmp
lcall
xor
mov
adc
push
push
dec
ror
mov
sub
imul
pop
xor
scas
and
pop
jae
lock
xor
mov
mov
adc
loope
cmpsb
fadds
dec
pop
test
jle
decl
dec
test
movsl
mov
insb
out
inc
lret
lea
loope
jns
jbe
loop
inc
pop
insb
mov
push
dec
loope
sub
stc
inc
sahf
and
inc
inc
outsl
nop
in
sub
insb
sub
push
rcl
movsb
jae
inc
fimuls
sub
and
inc
mov
movups
mov
out
mov
popa
pop
pop
scas
lret
ffree
xor
pushf
push
inc
cld
int
adc
sub
repz
enter
dec
into
inc
adc
leave
add
js
cmp
out
jmp
stos
jno
loopne
sub
out
dec
mov
add
testb
movsb
sub
js
stc
or
fwait
sbb
xor
sub
mov
testl
fnsave
pop
pop
xor
xchg
push
push
sbb
jae
jnp
repz
mov
cmpsl
bound
pop
and
or
out
lods
jne
add
aaa
popf
data16
call
xor
adc
inc
jb
cltd
xchg
mov
mov
cmp
adc
pop
jno
stc
adc
jbe
dec
push
jge
int
or
dec
sbb
clc
shlb
nop
xlat
clc
jae
ret
mov
or
cmp
idivb
jbe
sub
iret
call
lods
nop
jno
adc
popf
adc
hlt
xchg
push
dec
xor
mov
ficoms
fldt
shll
ret
adc
sub
aad
loope
xor
pop
inc
enter
int3
sahf
mov
mov
cmp
fdivl
loope
shrl
jne
jno
adc
mov
sbb
dec
adc
xor
stos
andb
pushf
cmp
ds
mov
jp
xchg
xchg
inc
jmp
push
jbe
and
or
sub
andb
scas
jnp
rorb
iret
insl
pushl
movsl
xchg
aas
jmp
dec
xchg
repnz
cmp
scas
lea
insb
int
cmp
xor
adc
pusha
sub
mov
mov
aaa
jge
aaa
sub
mov
inc
daa
xchg
loopne
test
pop
xchg
shlb
cld
xor
dec
pop
push
xlat
pop
ficoms
cltd
adc
mov
mov
push
insb
sub
add
sub
cmp
loop
jmp
push
or
xor
ja
lcall
push
cmp
ret
pop
jecxz
shrl
and
jp
ds
inc
push
loope
or
and
out
in
popf
imul
adc
inc
fcomi
mov
inc
cld
pop
data16
movsl
pop
push
mov
arpl
mov
fidivrl
push
stos
cmpsb
enter
mov
movb
shrl
roll
mov
add
sub
aad
idivb
pop
mov
in
sub
push
dec
xchg
mov
ljmp
lahf
outsb
cmpl
jno
pop
iret
inc
enter
mov
stos
mulb
test
pop
out
scas
into
nopl
sbb
mov
inc
mov
int
lcall
jge
popf
sbb
loop
cmp
add
ficoms
rcrb
inc
pusha
lret
std
add
sub
mov
cs
popa
leave
xor
inc
jne
call
dec
xchg
arpl
cld
or
and
dec
outsl
aaa
cld
and
xchg
enter
pop
cmp
push
fwait
fwait
add
setbe
iret
mov
inc
jb
stos
and
fwait
lret
loop
cmc
sbb
iret
repz
gs
push
mov
pop
jl
sbb
cmc
leave
daa
mov
cmp
pop
lods
sub
ja
or
out
sub
push
into
rcr
test
lods
jno
test
fsubl
mov
addr16
sub
pushf
sti
daa
and
pusha
popf
scas
lahf
cmp
sub
call
or
dec
roll
idivl
sbb
call
mov
loopne
ss
cli
test
lods
out
out
daa
in
dec
fadds
or
ds
xchg
and
fs
sbb
cmp
shlb
movsb
jae
pop
lods
inc
add
stos
sub
int
mov
xchg
loopne
loop
arpl
jle
fs
std
addr16
or
mov
adc
in
adc
xor
mov
push
cmp
jl
dec
mov
aaa
or
xchg
mov
push
push
xchg
push
inc
fmul
mov
and
arpl
jns
adc
lock
mov
pop
movsb
mov
xchg
mov
cmpsb
repz
or
rcr
xchg
jl
scas
adc
sub
jle
iret
movsl
xor
cmp
jle
ljmp
mov
xchg
mov
ret
cmp
dec
fldenv
push
cmpl
pop
cltd
aas
dec
pop
mov
mov
mov
stos
fists
xchg
jle
xor
aas
push
cli
dec
jecxz
stc
add
das
sub
adc
daa
jle
lods
inc
lods
xor
ljmp
dec
shlb
adc
inc
mov
sbb
jae
xchg
sbb
rep
sub
cld
add
add
cmpsl
xor
push
add
dec
inc
xor
repnz
pusha
inc
pop
mov
cmc
rcrl
ljmp
xor
dec
push
inc
push
jae
and
mov
xchg
xchg
repz
inc
pop
push
test
stc
repz
pushf
sbb
out
jmp
pop
mov
stos
cmpsb
mov
fistps
loope
xor
lret
into
divb
iret
mov
sub
je
ret
jg
out
popf
rolb
and
clc
jae
or
fistps
add
xor
fistpl
in
jp
or
repnz
push
out
imul
aam
adc
cs
pop
jl
cmp
jp
inc
lea
xor
pop
adc
xor
aaa
ljmp
imul
jl
nop
fwait
orb
movsb
push
outsw
call
adc
iret
cs
mov
add
in
sub
or
in
inc
in
mov
jge
mov
loopne
dec
or
mov
sahf
loop
ret
inc
mov
dec
xchg
filds
xlat
xor
add
dec
inc
jbe
and
sbb
pop
inc
mov
int
out
or
addr16
mov
jo
xor
cmp
aam
xor
ret
cwtl
mov
xchg
and
mov
or
fidivl
lret
pop
push
xor
mov
pop
cmp
in
test
mov
rcrl
bnd
loope
loop
outsb
or
push
mov
and
les
xchg
or
sub
js
mov
adc
pop
and
cli
sbb
lods
jno
nop
push
xchg
xor
and
or
adc
jmp
jecxz
mov
cmc
and
xor
je
dec
cmpb
pop
mov
jae
cmpsl
xor
push
nop
pop
xor
cli
imul
repz
pop
daa
shlb
push
jae
inc
test
hlt
xchg
sub
xor
cmpsl
ljmp
push
scas
mov
sub
ret
mov
jp
aad
loop
jae
loopne
outsl
push
cmp
pop
fistps
iret
xchg
mov
dec
pop
fstpl
bound
shlb
js
mov
mov
xchg
sarl
mov
sbb
test
bound
testb
cmp
and
fxch
sub
sbb
jmp
jmp
adc
xor
dec
push
xchg
je
repnz
cmp
lock
xchg
arpl
addr16
clc
cld
fdiv
push
pop
les
mov
xchg
lds
inc
mov
push
mov
imul
xchg
outsb
cltd
scas
fs
sub
cs
push
or
test
data16
sub
lahf
inc
insl
push
add
pusha
pop
cmc
xor
loopne
dec
xchg
cld
adc
jl
sbbl
punpcklbw
dec
mov
lret
sub
jl
data16
pop
stc
mov
outsb
not
push
cmc
dec
mov
pop
add
in
test
and
pop
insl
and
into
sbb
xor
mov
cmp
out
les
leave
call
js
jnp
call
xor
mov
shll
sub
cmp
dec
cwtl
add
jp
xchg
adc
inc
imul
xor
test
pop
xor
into
outsl
daa
dec
gs
paddb
hlt
fimull
test
add
and
dec
arpl
mov
and
pop
push
jecxz
testb
fimuls
pushf
sbb
xchg
pop
dec
dec
rcrb
sbb
mov
bnd
dec
lret
insl
test
push
and
sub
setnp
mov
cs
pop
and
cltd
sbb
pop
outsb
push
inc
mov
push
into
jl
pop
jge
shlb
inc
jmp
jo
adc
pop
xchg
frstor
dec
sub
pushf
mov
or
loope
clc
rclb
cwtl
call
pop
jmp
lods
and
into
cmp
add
imul
xor
mov
stc
fiadds
shr
jge
push
sub
repnz
push
mov
xchg
sub
mov
xchg
xchg
pop
iret
mov
adc
dec
call
fists
jbe
dec
pop
sbb
add
mov
xor
arpl
fwait
aad
icebp
int3
out
iret
mov
jl
insb
add
push
fidivrs
leave
inc
pop
hlt
stc
adc
mov
and
lcall
mov
cmp
cltd
pop
push
xor
inc
or
inc
sbb
or
in
mov
or
cmp
es
push
push
andl
sub
movsl
les
cs
cmp
xchg
and
dec
rcrb
imul
rcll
inc
dec
fs
or
loopne
adc
jmp
jp
inc
push
cmp
cmpb
and
shr
das
or
push
notb
add
negb
pusha
xor
cs
jo
dec
iret
lods
and
cmp
xchg
idivl
jae
leave
cmp
pushf
ror
inc
jle
push
imul
jnp
jp
cwtl
scas
mov
sub
jmp
rcr
repnz
out
cltd
cld
mov
pusha
pop
xchg
add
in
add
sti
icebp
notl
in
push
jge
dec
enter
daa
movsl
mov
js
inc
aam
aam
cmp
cs
cli
insl
mov
jp
inc
lds
inc
jmp
jecxz
and
arpl
mov
mov
jne
push
inc
jo
sub
call
or
sub
mov
pop
jae
cmc
mov
adc
or
jp
push
cmc
das
sbb
sub
loop
mov
stos
jp
in
sarb
or
xchg
push
pop
and
subb
mov
xor
or
andl
popa
popa
pusha
pop
data16
and
mov
int3
insl
imul
test
cltd
pop
cli
inc
out
icebp
mov
iret
fcomps
movsl
mov
arpl
mov
test
vandpd
sub
outsl
xchg
lea
xor
jp
dec
adc
add
in
pushf
adc
dec
bound
aaa
lods
pop
ja
cmp
sbbb
into
xchg
imul
outsb
mov
jecxz
orb
aam
inc
aad
icebp
pop
clc
push
sbb
pop
sahf
cltd
stos
lds
inc
xlat
pop
xlat
mov
shll
sarb
adc
cmp
dec
scas
std
jns
xor
jne
pushf
xor
mov
mov
pop
push
nop
fdivs
push
fisubs
insl
xor
shrb
push
mov
sbb
outsb
sarb
fwait
das
mov
add
or
push
cli
sbb
fisubl
mov
sbb
cmp
pop
sub
test
mov
aad
shll
das
je
add
repnz
mov
push
pop
xchg
cmp
lock
add
xchg
movsb
sbb
pop
jmp
push
aad
sub
and
and
sub
pop
mov
loop
mov
pop
sub
cmpl
arpl
xor
mov
add
sbb
fimull
mov
or
push
dec
ja
lahf
pop
mov
stos
insl
push
icebp
fildl
std
shlb
ret
mov
ds
insb
mov
pop
xor
je
ror
into
cli
xchg
je
inc
icebp
pop
fwait
ja
sbb
sub
xor
clc
mov
xor
outsl
scas
add
sbb
test
test
jne
ret
mov
sti
clc
fisubs
call
xchg
xor
add
les
sub
stos
adcl
jecxz
push
jg
dec
js
pop
dec
outsl
dec
jno
mov
pop
xor
mov
xchg
push
dec
dec
xchg
sti
add
adc
pop
cmp
cmpsb
shl
outsl
cmpsl
movsb
jl
pop
test
adc
bts
lret
mov
sbbl
inc
push
daa
mov
pop
enter
sub
mov
inc
jns
fcoml
mov
and
or
mov
jecxz
dec
jns
data16
ss
sub
mov
cmp
sbb
fldt
mov
inc
lds
sti
xchg
and
sub
mov
out
push
pop
sbb
push
jbe
push
in
inc
dec
dec
sbb
sub
jecxz
sub
cmp
inc
imull
xchg
cld
testl
lds
in
adcb
aam
int
pop
xlat
out
fbstp
cmp
out
stos
and
decb
push
ret
add
inc
shrl
movsl
xlat
imul
inc
pop
scas
rcll
and
mov
and
push
xchg
stos
xor
inc
pop
std
jns
mov
and
inc
out
cmp
xor
cmp
mov
addr16
pop
lcall
mov
inc
out
pop
ret
cmp
or
enter
mov
push
sbbl
fs
or
xor
mov
cmp
insl
popf
xchg
in
shlb
add
movsl
je
mov
test
das
insb
sub
pop
pop
ficompl
popf
inc
dec
repnz
inc
pushf
ja
push
mov
push
and
lock
push
sub
pop
mov
cwtl
and
mov
cld
loope
repnz
lret
fs
fdivrl
movsb
xor
mov
cmpsl
fmul
out
out
sbb
sbb
int3
inc
jno
add
sub
push
jnp
rcll
xor
mov
jge
hlt
xor
mov
decb
out
add
dec
jge
mov
sahf
rcl
jne
insb
and
xchg
sbb
xor
pop
jmp
pop
lcall
cmpb
outsl
lock
les
lods
mov
dec
cmpb
mov
add
cmp
mov
xchg
inc
ss
out
xchg
out
lcall
xchg
sbb
sbb
push
push
icebp
ljmp
stc
jbe
stos
inc
mov
mov
in
insl
push
push
fldt
mov
mov
fadd
and
pop
outsl
leave
add
pushf
jg
shlb
jb
sarb
lds
ss
jmp
lret
jns
int3
mov
dec
mov
pusha
jg
push
mov
ja
aas
ds
add
in
dec
xlat
push
out
lds
loopne
xor
push
mov
ror
pop
dec
and
sbb
push
movsb
cmp
or
xor
cmp
mov
fs
ret
movsb
std
adc
gs
popf
pop
stos
leave
or
or
aas
cmp
addr16
xchg
js
lds
mov
subb
aam
fdivrl
sub
es
mov
jbe
push
inc
mov
stos
lcall
push
insl
pop
aam
pop
cmp
ret
xorb
jae
dec
inc
push
xor
dec
ret
lret
std
inc
cmp
lret
jo
filds
fdivl
iret
mov
and
test
pop
fwait
mov
dec
push
xlat
xchg
call
enter
jle
cmp
stos
les
mov
mov
nop
lret
mov
cmp
ret
push
xchg
lods
fistpll
gs
xor
cs
lea
dec
xchg
mov
or
icebp
stc
dec
sub
and
add
dec
cld
daa
adc
jne,pt
pop
outsb
push
in
in
add
push
push
and
jo
mov
xor
ljmp
pop
jle
dec
jle
ret
ja
jbe
mov
mov
push
dec
into
jge
clc
and
jl
test
inc
std
xchg
mov
jne
inc
xchg
test
in
ss
les
pop
popf
ljmp
imul
push
adc
lcall
fidivrs
in
stc
imul
test
movsl
or
outsl
dec
xor
push
test
ljmp
out
subb
mov
jns
scas
nop
mov
stc
adc
push
jmp
xlat
insl
out
sti
out
movsl
or
pop
lea
pusha
cwtl
mov
and
aad
xor
lds
jge
or
mov
dec
push
mulb
mov
and
out
in
push
subb
adc
enter
mov
std
mov
test
xchg
in
and
inc
call
jb
lahf
sub
and
sbb
rorb
push
pop
int
sub
repnz
xchg
ljmp
aas
push
call
adc
jno,pn
loopne
sbb
lds
outsb
sbb
mov
pop
mov
rorb
mov
jns
test
cmpsl
fcompl
ljmp
inc
push
jl
divl
and
shlb
das
xor
aas
sub
movsl
cmc
add
cmpsb
es
cltd
test
push
iret
mov
xor
repz
sarl
jp
jns
xchg
dec
inc
rorl
or
xor
test
lahf
dec
sbbb
mov
jo
jmp
jmp
sbb
xor
std
in
into
xor
cmpl
imulb
xchg
data16
pop
mov
or
shlb
add
xchg
dec
nop
ret
adc
fsub
orl
cmp
mov
cltd
push
pop
mov
pusha
xor
test
push
int
adc
out
lods
inc
out
ficomps
ss
jle
jae
adc
jle
adc
and
iret
rcrl
loopne
inc
inc
mov
gs
icebp
or
mov
sbb
fwait
lea
outsb
pop
add
insb
and
aad
aad
cltd
rolb
shl
fmuls
push
outsb
lock
mov
mov
mov
cmp
xor
call
lock
and
xcrypt-ecb
cmpsl
dec
xor
sbb
cwtl
fwait
das
xchg
mov
int
pop
sahf
int3
jbe
cmovle
pop
in
les
xchg
sbb
mov
inc
and
inc
outsb
mov
in
jbe
xor
or
pop
or
ss
sub
push
ret
xchg
sbb
lock
xor
cmp
xchg
cmpsl
mov
sub
stos
mov
cmp
jnp
mov
xor
leave
mov
push
mov
into
push
iret
xchg
jge
das
hlt
aaa
cmp
inc
lods
cld
imul
les
mov
je
test
fcomps
mov
jo
sbb
shlb
scas
or
jbe
dec
push
jge
inc
adc
rorl
or
icebp
inc
mov
loopne
mov
mov
and
fistl
dec
mov
cmp
lret
sbb
jbe
fdivs
test
mov
cmc
jne
and
in
adc
or
xor
call
test
insb
mov
sbb
pop
insb
jo
cmpl
lods
loope
push
cmpsl
ret
inc
scas
outsl
cmpsl
jp
xlat
shlb
inc
pop
pop
pcmpeqb
lcall
jb
push
test
out
loop
pop
dec
int3
scas
lock
stos
add
inc
pop
add
mov
movsl
jg
add
xchg
mov
out
ror
pop
scas
sbb
inc
xor
test
or
out
inc
fnstcw
loopne
cmpsb
in
push
adc
rclb
cmpsl
int3
mov
adc
stc
sub
inc
mov
mov
and
out
or
xor
cmc
xlat
ret
add
cmp
gs
mov
mov
or
loope
ja
addr16
mov
pusha
sub
cld
push
pop
outsl
ja
aad
stos
push
les
add
aam
das
xor
pop
inc
mov
loope
fimuls
out
vpavgw
lds
mov
imul
pop
adc
sbb
push
ds
arpl
dec
outsl
pop
rorb
cmp
adc
dec
xor
sbb
or
lahf
cmp
inc
ljmp
sbb
in
mov
fadds
mov
mov
clc
aam
mov
stos
outsl
ficompl
les
lidtl
or
lea
and
mov
inc
push
roll
enter
xlat
fimull
leave
icebp
movsl
std
mov
inc
xor
mov
cmp
sbb
ljmp
jae
popf
jae
test
mov
enter
aam
add
orl
inc
add
xchg
xchg
xor
scas
sbb
push
sub
sub
sbb
or
jae
orl
jp
dec
and
jbe
test
sbb
lahf
cmp
jmp
dec
xor
outsb
jbe
dec
cmp
test
jg
test
and
js
mov
enter
pop
xor
fstl
scas
aaa
xor
rorl
and
or
mov
mov
stc
das
add
lock
adc
icebp
test
add
and
lcall
jae
push
scas
dec
push
mov
shl
pop
int
test
xchg
inc
out
mov
and
xor
push
popa
add
lea
mov
in
sub
push
jno
and
and
inc
hlt
add
es
inc
pop
sub
sub
mov
in
push
jnp
and
add
pusha
std
or
repnz
imul
mov
mov
jge
inc
bound
leave
pop
inc
cmpsl
hlt
jecxz
in
push
add
cmp
jecxz
xchg
cs
ret
xlat
cmp
nop
dec
scas
fldl
jno
xor
xchg
cwtl
subb
std
sub
cmp
js
dec
aaa
in
add
cwtl
adc
and
pop
inc
lcall
ror
dec
shl
popa
dec
pop
dec
mov
adc
test
sub
dec
mov
cs
or
roll
repnz
xor
mov
dec
or
aad
mov
add
inc
sbb
mov
lods
insl
dec
cmp
mov
in
jb
adc
nop
fnstenv
inc
mov
add
mov
mov
mov
ja
push
jmp
test
loop
mov
repnz
test
jne
mov
jmp
dec
inc
fnsave
cli
popf
dec
add
or
sbb
outsb
jno
pop
leave
mov
jbe
ret
or
out
movsb
aas
dec
std
cmp
add
mov
or
lahf
mov
push
push
adc
cmp
mov
iret
add
out
pusha
lods
call
icebp
dec
dec
mov
xchg
lods
and
ljmp
lret
or
add
in
mov
aaa
adc
rorl
mov
cmp
sarl
mov
sub
xchg
push
ficoms
push
cmp
stos
test
outsl
js
adc
fs
xor
pop
mov
iret
notl
mov
aas
jne
add
cmp
aas
pusha
shll
xchg
adc
inc
addr16
stos
nop
in
push
or
cmp
loop
mov
adc
mov
sti
sub
loope
jg
cs
xor
loop
or
shl
popf
add
cld
imul
push
mov
rcll
and
jecxz
lret
stc
add
sub
dec
gs
xchg
mov
ljmp
dec
xchg
push
xchg
jo
mov
out
bound
test
int3
jno
jecxz
xchg
inc
ss
std
mov
push
call
mov
inc
or
lret
fsubrl
cmp
outsb
jmp
pop
pop
sub
mov
or
mov
lods
sahf
in
inc
mov
mov
xchg
mov
popa
xchg
adc
cld
cmc
and
push
mov
push
cwtl
sarl
in
inc
dec
pop
leave
dec
jno
lret
pop
xor
dec
addr16
ds
xchg
jle
jp
cmc
clc
cmp
notl
idivb
lret
cs
mov
pop
xchg
lcall
jne
and
mov
jbe
pop
lahf
icebp
outsl
add
iret
mov
cli
fldln2
pushf
pop
insl
test
push
cmc
roll
fldt
enter
inc
sbb
int3
dec
xchg
into
fs
sub
cli
cmp
clc
inc
addr16
xchg
jge
cmpsb
xor
lods
js
xor
call
mov
cmp
ljmp
or
lods
lret
vpmaddwd
fsubr
dec
adc
or
mov
or
mov
mov
shlb
in
js
pop
mov
call
popa
xor
mov
push
push
mov
aas
sub
scas
mov
call
stos
jo
rcrl
cltd
inc
popfw
add
sub
lahf
bound
roll
cmp
fistpll
insb
push
or
shl
and
pop
sbb
inc
push
adc
gs
ss
jmp
imul
xor
jae
lret
push
rorl
bound
jne
inc
fcmovbe
mov
pusha
aaa
shll
into
dec
testl
addb
mov
pop
into
push
push
loopne
addr16
pop
aaa
cmp
adc
add
xor
ja
enter
or
loope
lea
pushf
ret
imul
insb
push
and
fmull
add
lods
sub
enter
and
nop
jb
add
ss
dec
lahf
cli
fwait
aad
pop
mulb
push
pushf
xchg
and
sbb
sbb
cmp
xchg
imul
mov
xor
fs
adc
clc
sbb
nop
sbb
dec
mov
push
out
jl
cmpsl
aad
xchg
xchg
mov
xchg
pop
sub
xor
mov
rcrb
fcmovne
test
mov
push
fisubrs
stc
push
fwait
lcall
dec
jo
pop
mov
cmpb
push
cmp
ret
addb
jb
pushf
dec
lret
icebp
fildl
pop
xor
push
dec
pop
cmpsl
mov
cmpsl
dec
popf
inc
mov
sbb
es
jp
and
imul
sub
jg
repz
daa
fnstcw
xor
lcall
lcall
and
les
dec
inc
jmp
push
and
mov
fwait
lahf
or
or
xchg
notl
mov
icebp
mov
pop
ljmp
scas
inc
enter
mov
push
and
adc
add
in
dec
push
arpl
pop
iret
imul
pop
loop
xor
lret
sarb
lock
mov
jbe
aas
roll
xchg
loopne
arpl
and
mov
xchg
jmp
adc
cli
mov
das
das
or
mov
je
fwait
mov
dec
mov
or
ret
popa
pusha
cmpsb
movsl
jmp
mov
push
fmulp
je
cmc
jb
push
push
rcrl
xchg
and
outsl
sbb
sub
addr16
jmp
dec
lock
mov
stos
mov
popa
cmp
jmp
gs
mov
call
mov
push
fcmovnbe
mov
pop
punpckhdq
lds
push
push
mov
out
mov
xor
insl
inc
and
mov
cmp
out
lods
mov
mov
movsl
shrb
add
add
icebp
xchg
lods
imul
xor
ja
push
mov
add
ja
xchg
bound
add
enter
rol
int3
mov
ss
hlt
shl
inc
leave
push
xor
mov
pop
out
cmpsb
and
mov
enter
push
xchg
cmp
xchg
inc
push
xchg
gs
adc
or
mov
pop
mov
pop
or
dec
cld
add
sub
loop
jmp
dec
cmc
mov
jae
out
fcomps
data16
xor
cmp
mov
or
repnz
or
pop
xlat
adc
lods
dec
or
push
repz
mov
adc
xchg
mov
clc
cmp
insb
hlt
data16
enter
gs
pop
mov
rcll
sbb
mov
lret
mov
cmpsl
jmp
jae
mov
pop
outsb
inc
imul
sub
int
daa
subb
xlat
pop
dec
adc
mov
sbb
into
push
fiadds
ret
subb
fnstenv
and
or
nop
jo
sub
shlb
mov
mov
push
inc
inc
adc
pushf
jl
cmpsl
mov
pop
xchg
fcmovnbe
push
inc
stos
in
out
mov
mov
mov
cmp
out
xchg
sbb
fsubr
aaa
lret
jno
or
mov
es
cmp
mov
push
xor
sbb
cmp
jbe
pop
sub
lods
adc
mov
xchg
data16
mov
dec
cli
ds
pop
or
mov
push
daa
mov
data16
or
and
negb
or
testl
push
stc
xchg
in
push
sub
rcrb
pusha
add
arpl
mov
mov
jecxz
push
xchg
xchg
out
imul
inc
ja
xchg
push
std
dec
nop
lret
jmp
sahf
and
cltd
fisubs
jae
das
xor
popf
in
test
xchg
adc
lahf
or
inc
std
adc
bound
inc
orl
outsb
outsl
loopne
or
mov
stc
mov
xchg
mov
jl
fdivs
sub
and
insb
inc
inc
sbb
xchg
cs
es
repnz
jno
add
nopl
sub
pop
daa
sub
aad
ja
test
adc
aad
add
cmp
outsl
push
aad
shlb
jle
fcomps
xor
pop
ds
inc
sbb
cwtl
ja
scas
jno
mov
pop
out
cltd
xor
testb
add
add
sti
mov
jp
int
mov
pop
popf
pusha
and
repz
mov
push
adc
andb
push
lret
jmp
pop
outsl
mov
sbb
add
mov
inc
add
pop
fs
imul
int3
sti
out
orb
pop
mov
insb
stc
aad
les
imull
cmp
jge
dec
xor
in
dec
dec
fildll
les
std
xchg
popa
mov
repnz
cli
sub
push
mov
stos
popf
mov
add
jle
mov
aam
add
inc
aaa
xchg
mov
les
mov
int3
cltd
jo
cwtl
inc
sub
shll
jo
test
jp
imul
mov
shll
stos
adc
jecxz
movl
sahf
add
pushf
mov
sbb
repz
imul
sbb
mov
sbb
aaa
inc
mull
jmp
push
mov
add
push
addl
cmp
pop
mov
out
pop
pop
add
ficoml
xor
add
aam
add
insl
inc
js
pop
nop
std
push
scas
bound
leave
and
jmp
or
xor
lds
andl
xchg
out
lods
stos
inc
das
jnp
dec
cmp
push
sub
je
mov
add
movsl
pusha
jle
mov
sub
xchg
jns
inc
fmull
xchg
push
dec
push
lret
aad
je
sub
lods
mov
cmpsb
dec
scas
lret
mov
push
push
test
nop
push
push
dec
or
mov
dec
in
pop
mov
fistpll
mov
lock
inc
push
lods
arpl
sbb
nop
jns
push
jecxz
clc
ss
jmp
jp
cmp
fxch
ret
punpckhwd
dec
sahf
aaa
fs
cmp
out
inc
lds
scas
mov
xchg
addr16
jecxz
aad
mov
push
cmp
imul
jmp
loop
push
pop
add
mov
movb
mov
mov
aam
adcb
stc
setne
dec
push
mov
push
fisttpll
dec
rcll
je
pusha
add
popa
gs
fwait
je
fisubl
lcall
imul
mov
push
add
mov
lock
pop
and
bnd
xor
xor
and
lds
mov
sub
test
addr16
or
or
mov
mov
je
pop
inc
push
mov
imul
mov
repnz
mov
cwtl
loop
xorb
xchg
push
jnp
dec
repnz
mov
lcall
lret
xchg
sbb
sbb
out
jbe
mov
lock
mov
mov
or
push
cwtl
mov
mov
roll
sub
mov
mov
jae
mov
push
xchg
or
sub
and
subl
mov
lret
cli
mov
xorb
xchg
xor
mov
adc
xor
outsl
fucom
fs
mov
ja
and
jnp
push
inc
test
push
sbb
mov
jg
pop
dec
aaa
sbb
xor
mov
mov
jmp
sbb
test
mov
jge
cwtl
pop
jg
clc
cmp
inc
pop
stc
push
sub
cmp
lods
inc
sub
out
mov
or
lock
stos
je
xor
xor
push
jno
addr16
lahf
mov
fxch
test
inc
nop
in
ds
iret
ds
lret
xchg
push
push
cmp
mov
in
mov
inc
lods
jge
icebp
and
push
dec
sbb
int
test
cmp
fwait
shrb
sbb
mov
mov
fs
or
ficomps
xor
push
setle
insl
mov
push
and
loopne
push
mov
roll
rolb
pushf
jb
int3
fbstp
add
data16
arpl
jg
fdivr
in
cmp
subl
push
pop
jl
jmp
movsb
push
and
xchg
pop
outsb
and
lea
mov
pusha
nop
dec
sahf
out
jnp
xor
push
in
xorb
mov
adc
push
mov
jg
adc
push
push
or
jne
pop
inc
and
je
xor
data16
int
dec
pop
cld
cmc
cld
test
mov
cmc
cmp
push
push
and
cwtl
aad
fwait
mov
mov
adc
mov
fstpl
sub
gs
and
jmp
pushf
movl
mov
pop
jle
fldt
push
test
movsl
mov
fidivrl
int3
scas
outsb
test
test
add
sbb
xor
fldl
pop
and
xor
add
sbb
cmc
or
add
orb
adc
into
pop
call
mov
les
pop
jmp
das
pop
adc
mov
pop
jns
jnp
inc
cmp
mov
xchg
sub
xchg
push
movsl
sbb
jnp
aam
lods
sbb
das
mov
dec
mov
jg
adc
xchg
lret
idiv
aaa
sbb
pop
fnstenv
loope
neg
inc
adc
xchg
testl
dec
hlt
push
cmp
testb
movsl
mov
in
scas
add
xchg
jmp
fidivrs
arpl
sub
sub
mov
pop
cmpl
scas
jge
outsl
in
lods
cmp
or
cwtl
dec
jns
push
inc
mov
mov
fs
adc
ss
sbb
das
adc
test
repnz
sub
cld
adc
ja
and
lods
and
xor
jnp
popa
pusha
sbb
addl
and
stos
lcall
mov
lret
mov
inc
mov
ljmp
jb
jge
lcall
int3
inc
mov
add
xchg
push
rcl
cmp
out
in
fidivl
pop
pop
dec
fmulp
repnz
push
imul
xor
outsl
pusha
xor
cmp
cltd
push
push
hlt
push
xor
out
leave
or
scas
sub
and
out
ror
mov
pop
jmp
push
jp
loop
and
lcall
movsb
in
das
out
sti
mov
cli
or
and
aas
repnz
test
jg
xor
lods
rolb
add
mov
cmc
data16
mov
xchg
leave
ljmp
fadd
in
cmpsb
xchg
loopne
mov
cmp
fildll
add
xor
int
in
jmp
sti
movsl
ret
rcll
mov
loop
mov
sbbl
xchg
inc
sti
cltd
inc
and
into
in
adc
mov
loopne
iret
test
inc
jb
xlat
fs
aas
mov
ja
mov
ljmp
xor
jge
iret
cltd
push
mulb
jmp
jecxz
sbb
mov
lods
mov
push
sbb
shll
ljmp
inc
sbb
aas
dec
cmpsb
imul
mov
ljmp
stos
stos
xchg
aam
int3
inc
stc
leave
xor
repz
mov
sbb
out
xor
lea
mov
mov
movsl
cmp
sbb
push
xorb
jl
ljmp
add
mov
rep
enter
popf
and
lcall
loop
cwtl
dec
fadd
shlb
inc
iret
insb
popf
dec
cmp
mov
iret
out
xlat
outsl
rorl
enter
mov
lods
inc
sbb
mov
fcompl
push
jae
mov
mov
jge
nop
or
popl
in
adc
aas
inc
sub
pop
dec
or
enter
icebp
aad
repnz
lcall
xor
pop
les
push
out
outsl
xlat
or
add
add
xchg
pop
out
call
cmpsb
fsub
cltd
mov
mov
fldenv
push
dec
and
mov
mov
pop
scas
mov
insl
xchg
std
cmp
add
adc
jo
lods
arpl
subb
std
jle
movsl
lods
inc
or
add
dec
pop
es
add
test
andl
mov
outsb
push
jb
decl
or
in
lds
cltd
addb
sti
aas
repz
jle
icebp
pop
lcall
out
mov
clc
arpl
gs
mov
aam
popf
movsb
mov
cmp
cmpsb
mov
push
insl
ficompl
or
jne
cmp
call
shrb
ss
call
sub
xor
cmp
outsb
pop
js
movsl
pop
fcoms
lahf
sub
add
pop
mov
inc
fsub
movsl
inc
pop
pop
ret
add
sbb
mov
xorb
dec
insl
pop
sarl
frstor
fwait
in
mov
cmp
out
lahf
mov
stos
out
shl
ljmp
sarb
in
sti
shll
sbb
dec
out
leave
dec
andnps
dec
orl
inc
in
loope
jle
adc
ljmp
inc
and
cmp
xor
in
xchg
cmp
ret
jbe
outsl
lcall
xor
gs
cmp
dec
lds
push
sar
mov
outsb
mov
ret
or
add
xor
fwait
cltd
adc
imul
xchg
aad
cmp
and
xor
repnz
loopne
dec
mov
add
mov
insl
cmp
adc
mov
in
dec
jp
or
sub
rorb
mov
pop
int3
mov
in
jecxz
mov
int
ret
push
stos
dec
inc
popa
bound
test
push
mov
sub
mov
loope
inc
jns
sar
lods
mov
and
or
clc
lahf
add
push
xchg
xor
enter
movsb
cmpsb
lret
mov
push
in
inc
aam
sbb
incl
out
aam
fwait
adcb
subb
mov
xchg
mov
icebp
mov
sarl
aas
rolb
jmp
cmp
jb
mov
mov
xor
mov
ja
cmpb
mov
and
mov
cmp
jno
xor
xor
jnp
bound
stos
dec
and
js
inc
fmuls
and
fists
jp
out
cli
sub
scas
sub
push
sbb
outsb
cmp
mov
pop
xor
testl
xchg
ret
enter
sti
dec
ficompl
sbb
in
adcb
mov
xchg
mov
dec
push
push
fabs
xchg
push
push
addb
dec
cmc
fs
gs
sub
and
or
cmp
sar
jg
or
test
adc
in
inc
lahf
and
cmp
push
out
imul
pop
sub
or
dec
add
shr
shrb
push
les
pop
test
pushf
push
sahf
adc
js
mov
movsl
test
dec
sbb
mov
push
adc
xlat
mov
mov
sbb
cltd
stc
loope
shlb
cmp
sub
xchg
hlt
in
cli
xchg
aad
mov
testb
or
cwtl
nop
lret
mov
push
stos
jnp
mov
fcompl
cmp
mov
sbb
fs
adc
pop
scas
cmpsl
pop
dec
enter
mov
xchg
cmp
inc
inc
movsl
negb
lret
stc
inc
or
pop
adc
jae
sbb
rorb
sbb
out
sub
xlat
cltd
xchg
rcrb
jge
inc
ja
mov
popa
xor
popf
loopne
daa
stos
test
push
jecxz
lea
in
bnd
xlat
jno
pop
scas
roll
aaa
mov
out
xchg
stos
stos
ret
sub
lods
jb
sub
mov
jmp
pop
rorb
je
adc
imulb
cmpsb
int3
popa
mov
dec
fcmovnb
cmpb
cmp
mov
in
das
jb
jbe
lods
adc
and
jae
rolb
ljmp
jg
aaa
mov
mov
cltd
xchg
sbb
push
sbb
jb
xchg
jo
insb
sarl
sarb
sbbl
nop
cli
mov
rclb
inc
fdivr
adc
ret
xchg
xor
mov
lods
inc
cmpsb
inc
stc
test
xchg
lret
lods
rol
lods
xchg
mov
xchg
rol
stc
jo
test
int3
cmc
jae
mov
insb
ds
cltd
aaa
add
or
cmp
cmpsl
ret
push
xchg
sub
sub
sbb
or
mov
push
test
jbe
fs
dec
or
ss
hlt
or
fisttpll
pop
mov
ja
loop
ret
jg
imul
fdivrl
in
xchg
and
ljmp
add
fdivrl
pop
pop
subb
test
push
repz
mov
cmp
pop
pop
std
sbb
push
imull
jp
sbb
add
fidivl
xchg
and
dec
cmp
push
out
cli
aaa
inc
push
out
sub
mov
mov
aaa
in
cmp
dec
ficompl
lods
push
add
mov
pop
sbb
pop
fstps
fiaddl
hlt
dec
push
lea
jns
cltd
mov
mov
xor
jle
fwait
mov
add
inc
jl
sbb
mov
pop
test
adc
out
mov
mov
outsb
cmp
push
es
les
aas
push
lcall
dec
mov
xchg
cmp
sub
out
inc
mov
pop
pop
nop
add
xor
xchg
leave
lea
mov
sub
jmp
sub
jne
xor
out
inc
dec
in
mov
test
mov
cmp
fistps
sbb
arpl
ljmp
nop
jecxz
leave
lahf
orb
push
cmp
push
in
pop
cmp
pop
cld
and
daa
push
subl
jmp
lahf
mov
sub
jmp
mov
fcmovb
jmp
mov
sbb
inc
movl
lods
and
xchg
jno
test
dec
and
add
pop
jge
mov
in
lds
ljmp
movsb
test
js
jmp
gs
mov
adc
mov
mov
or
out
push
mov
add
sub
jl
inc
pop
pop
mov
adc
in
mov
cmp
sub
push
aad
test
mov
in
xchg
jmp
sti
dec
adc
popf
stos
outsb
insl
call
test
pop
cmp
xchg
sahf
and
jecxz
mov
sbb
mov
int3
repnz
mov
sub
xor
test
xchg
mov
jg
addr16
jbe
adc
and
outsl
lea
push
jns
sub
test
loopne
mov
dec
imul
mov
pop
rcrb
sub
pop
repz
pop
xchg
mov
sbb
add
faddl
into
outsl
inc
sti
mov
add
cmpsb
enter
xor
bound
jo
sub
ja
sahf
lcall
cli
or
pop
xor
adc
shrl
mov
shrl
add
loope
int3
bound
mov
adc
pushf
cmpl
cli
icebp
cli
jp
jae
repz
dec
cmp
aaa
pop
lcall
fimuls
push
xchg
nop
jae
jg
dec
divl
in
movsb
outsl
std
mov
xorl
aas
notb
addr16
mov
mov
cwtl
mov
mov
mov
std
std
sub
aam
cmp
lock
aad
xchg
cmp
leave
push
aad
add
mov
enter
sub
fdivl
out
loopne
arpl
daa
aad
or
jae
mov
pop
mov
fcmove
aad
sahf
push
popf
inc
pushf
scas
push
out
cmp
dec
xor
inc
int
adc
clc
add
aad
leave
sub
xchg
jb
mov
lcall
insb
dec
insb
xor
xchg
arpl
mov
mov
stc
push
mov
inc
aad
mov
xchg
xchg
mov
xor
cmp
mov
ret
or
sbb
xor
jns
repz
jg
out
and
rol
dec
arpl
loop
pop
sbb
xor
pop
fdivr
xchg
pop
stos
fwait
ljmp
insl
sbb
cmp
xchg
nop
push
filds
or
mov
fcmovnb
jae
aas
xor
jl
aad
call
outsl
push
push
mov
sbbb
push
std
jno
mov
mov
mov
inc
xchg
cwtl
lcall
popf
inc
and
add
mov
and
inc
add
les
xor
pusha
gs
loop
es
mov
aam
jp
mov
jb
in
dec
mov
cmp
sbb
or
pop
js
adc
pop
mov
pop
dec
inc
mov
sti
push
cld
enter
xchg
mov
jb
inc
leave
das
sbb
lahf
inc
popf
dec
inc
sahf
adc
mov
or
cld
cmp
push
xchg
mov
pushf
int3
dec
xchg
insb
ss
nop
sub
add
fidivs
test
mov
inc
sbb
add
lock
repz
ret
push
dec
add
sub
mov
js
adc
not
push
pop
daa
adc
cmp
in
pop
xchg
xchg
cmpsl
stos
push
inc
push
rcrl
sbb
mov
fwait
or
push
sarl
xchg
fisubrl
enter
add
loop
dec
or
fidivrs
imul
mov
aaa
enter
dec
outsb
cmc
adc
mov
inc
ficoml
pop
cmpb
and
popf
mov
sbb
mov
inc
loopne
push
dec
fidivrl
ficomps
jp
aas
pop
xchg
rorl
js
inc
fcompl
jne
pop
lret
je
ret
popa
add
and
xchg
daa
lret
outsb
mov
jne
xor
shl
fldcw
fistpl
stos
andl
xchg
sub
mov
out
ja
pop
lret
cmc
push
mull
popf
ss
out
nop
push
es
sub
or
cmp
add
inc
push
mov
scas
sub
xchg
mov
sbb
mov
cmp
jae,pt
gs
xor
inc
dec
and
mov
pop
adc
shll
fcomip
pop
cmp
adc
mov
lods
sbb
popa
inc
sbbb
xor
pop
icebp
add
push
jg
shll
lcall
leave
ss
and
mov
imul
jl
stos
lods
addr16
lods
int3
sub
fsubs
scas
mov
mov
arpl
mov
pop
sbb
shll
sbb
dec
insb
inc
xor
push
adc
lock
jno
nop
shll
sub
aad
cs
sub
aad
jbe
out
loopne
inc
test
imul
pop
sub
stc
sub
shrl
ljmp
in
out
nop
jp
jne
xchg
inc
adc
lret
lods
push
or
test
push
popa
nop
push
xchg
mov
mov
push
es
mov
test
gs
mov
aas
cmp
add
inc
push
xorl
aam
jne,pt
mov
in
push
popl
mov
cmp
sub
inc
imul
shrb
pusha
hlt
push
dec
int3
dec
inc
data16
cwtl
lret
inc
sbb
adc
movsb
add
lahf
clc
test
pop
add
enter
mov
imul
jns
mov
leave
les
or
push
cs
pop
cmc
shlb
add
cmp
test
test
lock
and
lea
adc
and
mov
pop
jne
adc
sub
outsl
outsb
mov
mov
testl
bound
outsl
js
hlt
into
jns
rcl
adc
mov
xor
or
pop
popf
in
adc
bnd
les
fnstcw
in
add
outsl
inc
jge
insl
cmp
dec
inc
loopne
movq
imul
cmp
icebp
addl
jns
movsb
lods
jb
negb
sbbl
push
push
xlat
andb
cli
ds
mov
outsl
push
daa
add
dec
mov
shlb
out
int3
inc
aam
stc
mov
jns
xchg
neg
cmp
mov
push
or
rolb
cwtl
and
sub
lahf
push
scas
cmp
xchg
pop
mov
xor
stc
pop
and
and
inc
aaa
push
and
repnz
mov
loop
hlt
lds
mov
push
fbld
mov
sti
adc
mov
mov
xor
xlat
in
dec
jns
sub
std
in
cmp
pop
adc
mov
aaa
or
lods
mov
mov
gs
push
cmp
cmp
outsb
loop
jno
std
sub
mov
lock
mov
sub
jne
push
mov
scas
enter
imul
outsl
ret
pop
jbe
xchg
pop
fisubs
loope
popf
sub
icebp
lods
push
enter
push
test
lahf
arpl
adc
xchg
ds
inc
jno
imul
pushl
into
ret
inc
mov
stos
repz
mov
sbb
dec
jnp
lods
push
mov
out
lcall
mov
int3
pop
pop
xchg
out
sahf
and
sbb
pop
pushf
imul
out
test
push
lret
push
mov
ds
xchg
cs
loop
adc
test
jge
sub
xor
adc
ss
sarl
xchg
sahf
inc
sbb
push
testl
test
inc
fldl2t
in
rcrl
cmp
xor
adc
loop
cmc
test
sbb
mov
clc
ss
pop
shrb
cmpsl
xchg
in
daa
adc
pop
push
cmp
jmp
insl
mov
es
lock
push
fisttps
mov
mov
outsb
sub
pop
inc
pushf
test
pusha
fisubl
dec
repnz
add
mov
adc
jmp
insl
mov
sub
sbb
arpl
xchg
movsl
cmc
or
test
jae
aam
inc
pop
mov
push
ds
or
movl
push
mov
fdivp
stc
call
jbe
cmp
jle
cmpsl
or
push
fisttpll
ffree
sti
mov
push
and
mov
inc
leave
out
fstpl
dec
cs
shlb
mov
lret
jp
xchg
shll
adc
je
call
pop
xchg
mov
adc
stc
lahf
adc
popw
pop
cmc
mov
mov
cmpsb
dec
mov
adc
shlb
rcrl
push
xchg
call
push
insb
pop
sti
pop
mov
or
movsb
rcrl
outsb
xchg
xlat
aam
dec
inc
mov
add
das
and
shll
xchg
repz
jmp
mov
aas
xor
sahf
cld
inc
mov
mov
in
cs
mov
pop
adc
add
repnz
mov
lret
mov
cld
andb
js
and
cmp
imul
iret
das
dec
leave
shrb
dec
push
sub
test
ficoml
push
leave
or
mov
jl
add
bound
outsl
mov
mov
xor
nop
pushf
mov
push
pop
add
andl
mov
lret
loop
xor
cltd
jge
int3
ds
mov
or
sbb
ja
pop
in
cmpw
icebp
mov
xor
les
daa
inc
jo
fcmovne
stos
ds
mov
push
jl
test
pop
xchg
movsb
sti
xchg
adc
dec
sub
pop
cwtl
aas
jne
jecxz
or
xor
cmc
lret
mull
xchg
fmuls
ss
cltd
push
cs
mov
dec
push
popf
inc
push
cld
cs
xchg
push
std
push
jne
cmpsl
dec
sub
sbb
mov
mov
int
and
bound
mov
cs
int3
das
jge
popa
fcomp
mov
jp
loope
bound
dec
pop
nop
leave
test
pusha
inc
xchg
or
ss
push
lods
mov
pop
xor
and
cwtl
das
mov
sbb
or
push
movsb
cs
lahf
or
add
lock
mov
jl
jge
mov
add
xorl
add
pop
mov
psubd
aam
aad
adc
js
and
lret
ds
lods
or
mov
sub
sbb
sbb
mov
cmp
es
adc
xchg
jb
sahf
sub
subl
and
pop
out
mov
push
sub
arpl
pusha
mov
mov
push
adc
dec
loopnew
lret
cmc
clc
dec
sbb
adc
cmp
mov
pop
les
xchg
xchg
icebp
mov
and
sbb
fimull
push
sarl
addr16
orl
jge
push
xchg
lahf
leave
cmp
xor
mov
jb
lea
cmp
repnz
sbb
dec
std
popf
or
pop
mov
mov
icebp
xchg
push
das
inc
jmp
fcomps
mov
cwtl
adc
movsb
ja
inc
shl
adc
mov
sub
std
sub
sub
movsb
mov
outsb
mov
sub
push
out
push
outsl
flds
arpl
sbb
mov
push
enter
cmp
mov
fwait
ret
or
insl
push
pop
fidivs
int3
mov
bound
je
shlb
jae
mov
cmp
movsl
cmpsb
decl
dec
adc
cmp
inc
lds
and
addr16
cmpsl
mov
test
nop
and
shll
add
sahf
push
loope
adc
dec
fsubs
fldcw
xor
dec
sti
sbb
dec
fidivrs
lea
lods
xor
add
cmpsb
jl
daa
sahf
mov
cwtl
dec
push
adc
ss
mov
lock
jmp
or
jl
cmpsb
and
inc
rorl
loope
cmpsb
cmpsl
aas
pop
sahf
sub
cli
mov
ds
movsb
je
shll
lds
cs
or
into
aas
and
jmp
dec
inc
call
cli
sbb
push
ss
mov
mov
les
and
bnd
cmpsb
lods
arpl
lahf
in
mov
cmp
mov
int3
mov
out
popa
rcll
pusha
mov
pop
sahf
mov
rep
xor
sahf
and
in
mov
outsb
jb
jb
mov
xchg
scas
mov
das
into
xor
data16
inc
loope
clc
push
dec
lahf
push
ret
jb
mov
xchg
pushf
xchg
sahf
out
cmp
lock
sbb
jbe
lods
movsl
xchg
je
push
std
inc
into
fs
jecxz
xorb
mov
mov
lods
test
ds
lods
mov
in
rcll
ljmp
add
std
inc
mov
lret
jg
scas
hlt
call
sbb
push
test
xor
aaa
dec
outsl
push
mov
ds
adc
cmp
fbld
inc
ret
jbe
sti
imul
dec
cli
and
jbe
inc
pop
cmpsb
test
lock
dec
adc
in
mull
aaa
xchg
jo
mov
popa
call
clc
xchg
sbbl
and
aaa
jecxz
mov
xchg
imul
data16
ret
andb
jecxz
lret
jne
sbb
mov
pop
and
cmpsb
fcom
sub
xor
psraw
push
pop
push
aaa
xor
adc
stos
stos
sbb
sub
xchg
xchg
mov
mov
mov
ja
decl
scas
dec
in
xchg
in
popf
dec
inc
mov
hlt
shlb
xor
xor
icebp
repz
scas
xchg
mov
into
aaa
sbb
repnz
sbbb
inc
sahf
pop
js
mov
mov
xchg
mov
loope
scas
and
jl
sbbl
mov
into
lock
jno
dec
subl
js
imul
mov
pop
jo
in
lcall
mov
mov
cmp
ja
or
ljmp
in
cmpsl
add
ss
insl
xor
inc
in
test
dec
push
insl
testl
fdivs
jl
jl
mov
sub
lods
cli
repnz
xchg
mov
mov
jnp
xchg
cmp
jecxz
push
and
call
jg
cmp
and
cltd
into
shlb
jns
es
jp
mov
and
or
dec
ret
dec
in
repnz
in
or
lret
xchg
and
nop
mov
xchg
les
lahf
jae
adc
pop
mov
fdivs
jb
shlb
dec
dec
cmp
addl
ret
int
test
cmpsl
je
inc
cmp
negb
pop
sub
ja
add
pop
jecxz
pop
adc
out
sbb
subl
inc
add
lods
rcll
or
ds
movsb
xor
mov
hlt
xor
hlt
addr16
cmc
insl
sbb
outsb
inc
add
aaa
jne
loopne
mov
in
cld
pop
cmpsb
add
xchg
dec
hlt
mov
adc
cld
mov
mov
adc
outsb
bound
jle
cmpsb
xchg
mov
les
int3
out
lret
cmc
bnd
cwtl
hlt
shl
fadds
ja
add
xor
imul
inc
pop
jge
js
pop
stos
and
movl
je
xlat
cmp
clc
mov
es
fnsave
dec
mov
cmp
mov
scas
and
adc
fisubrl
fcomi
je
les
shll
ljmp
cmpsl
addr16
jmp
ret
adc
mov
xchg
adc
xor
cmpsl
sub
mov
cmp
mov
sub
stos
data16
mov
sbb
push
mov
fwait
sbb
js
iret
add
fidivrs
fstpl
and
or
push
xor
clc
imul
sub
fldenv
iret
jmp
fdivrl
add
cltd
test
les
push
pop
int
icebp
pop
pop
xchg
cmp
sbb
and
out
or
push
jb
dec
mov
mov
shll
call
nop
imul
pushl
jecxz
mov
jns
pop
sarb
cltd
pusha
jae
push
sbbb
data16
mov
pop
cwtl
lahf
testl
hlt
fs
clc
clc
jno
and
xchg
aam
fcomps
in
mov
mov
mov
cld
orl
dec
mov
cmpsl
daa
jns
jne
call
mov
repz
jg
ljmp
loope
push
and
add
icebp
add
pop
orl
into
out
or
in
data16
pop
call
cmp
xchg
lcall
push
xchg
pop
sub
xchg
das
inc
mov
scas
pop
mov
test
loope
push
out
mov
iret
jno
outsl
mov
pop
mov
clc
fistpll
aam
adc
mov
cmp
push
gs
fildll
test
add
aaa
and
cmp
pop
out
or
imul
mov
push
jbe
sbbb
cmp
sbb
inc
cltd
lcall
loopne
mov
dec
arpl
xchg
outsl
into
sub
jnp
push
pop
bound
movsl
shr
test
mov
dec
sbb
jne
pop
sub
mov
lods
ret
pop
sbb
push
imul
pop
jb
test
test
pop
arpl
mov
adc
push
pushl
sub
mov
sarb
pop
fcompl
mov
fistps
rorb
lret
cltd
or
insl
and
inc
lret
sub
mov
mov
pop
rclb
aas
xchg
divb
add
inc
or
das
out
mov
push
lcall
xchg
push
leave
scas
push
in
call
mov
jnp
neg
cld
clc
fiaddl
inc
jae
es
xor
mov
fisubrs
cmp
aam
subb
aad
xchg
dec
push
mov
xchg
xchg
insl
adc
mov
jns
scas
adc
push
enter
sub
xchg
fs
cmp
subb
out
cvtps2pd
push
insb
dec
mov
xchg
adc
in
dec
dec
loope
loope
inc
stos
adc
data16
cmp
xor
les
mov
sbb
mov
je
idivl
cmp
shl
xchg
aad
fldt
and
or
hlt
add
mov
push
cwtl
jno
and
mov
ja
adc
jp
jne
je
dec
mov
cmpsb
sub
daa
addl
xor
sub
out
scas
dec
test
jns
insl
adc
push
push
cmpl
aad
xor
mov
or
clc
dec
pop
mov
add
jge
fbstp
movsl
ficoms
rep
add
dec
cmc
or
xor
popf
dec
pushf
arpl
rcl
mov
bound
dec
xchg
movsb
aas
je
xchg
add
aam
and
fmulp
into
div
xor
dec
and
cmp
shll
pushf
pusha
sbb
xchg
clc
outsb
fistps
jle
sub
ret
or
mov
fwait
mov
loopne
pop
push
loope
daa
adc
add
or
dec
or
ss
aaa
adc
movsl
jl
test
shrb
std
adc
mov
dec
mov
mov
xchg
inc
addb
out
jecxz
adc
mov
or
nop
rcrl
fsubrl
jbe
cmp
xor
inc
pop
push
jbe
xchg
jb,pn
jmp
in
push
in
std
pop
cmc
dec
mov
in
repnz
inc
pusha
inc
or
insb
ss
cmp
cld
push
or
stos
mov
popa
cmp
out
dec
es
or
mov
inc
mov
mov
pop
jmp
js
or
mov
mov
sub
xchg
push
aad
sbb
cmp
scas
int3
into
neg
push
and
jb
fisttps
jnp
in
push
cs
nop
cmp
pop
stc
adc
clc
mov
shl
pop
loope
or
sub
push
jno
add
fs
and
lea
lods
inc
xchg
aaa
xchg
mov
mov
add
fcmovu
mov
jne
es
mov
adc
adc
inc
inc
decb
pop
mov
cmpl
out
out
test
test
fdivrs
aad
mov
push
xchg
adc
pop
jmp
popa
test
nop
mov
adc
add
mov
or
pop
mov
push
std
push
mov
out
pop
sbb
xor
mov
popa
lret
mov
call
inc
cmp
popa
jp
mov
incb
hlt
loope
and
aad
jbe
mov
data16
dec
mov
jg
stos
sti
aas
inc
jg
xor
pop
and
int
or
into
popf
aam
inc
sub
test
leave
in
outsl
fnstenv
inc
int
call
pop
aam
negl
jg
shr
or
sbb
cmp
lods
cmp
inc
stos
pop
repnz
sti
jae
push
jno
rorb
cmpsl
inc
loopne
ljmp
lret
mov
add
mov
aam
jmp
jne
or
and
jp
jmp
or
dec
xchg
inc
cmpsb
xchg
outsb
sti
das
cmpsl
ja
and
repnz
out
fcomp
dec
mov
sbb
enter
sbb
mov
mov
loope
gs
inc
rclb
sbb
pop
nop
jg
xor
mov
hlt
inc
pop
fldcw
call
xchg
sahf
or
inc
xor
mov
push
fs
xchg
or
dec
mov
push
stos
xchg
std
cmp
mov
mov
dec
divl
add
rcrl
mov
mov
mov
fwait
xchg
adc
fadds
dec
rorb
fsubr
mov
shl
and
cmp
jmp
add
xchg
ljmp
shll
inc
arpl
xchg
push
pop
in
push
push
pop
ljmp
bnd
pop
jae
mov
js
addr16
mov
pushf
fistl
and
and
cld
mov
fwait
mov
sti
push
mov
pop
ja
mov
mov
lahf
into
imul
add
xchg
in
push
pop
jns
cmp
inc
push
add
hlt
sbb
adc
in
push
xchg
das
in
loope
roll
inc
jge
lret
and
sub
scas
cmpsb
or
sahf
insb
mov
aaa
in
sub
test
push
fldt
into
sbb
rcll
pop
pop
jb
int3
inc
mov
xor
mov
push
pop
adc
push
or
sub
cvtpi2ps
int3
inc
cmp
imul
pusha
fisttps
mov
mov
cmc
es
fs
mov
mov
sub
rcll
sub
loop
sahf
sahf
into
mov
ja
movsl
push
dec
cwtl
and
mov
lcall
fimull
or
or
test
bound
or
paddsw
inc
iret
cli
ret
dec
bound
push
jle
dec
stos
xchg
mov
cld
pop
lods
test
lcall
std
xor
cwtl
popa
je
mov
cld
jle
loopne
in
adc
and
je
imul
call
fisubrs
push
fsubl
daa
push
xchg
aaa
popa
clc
je
sub
push
sarb
push
fcmovu
out
pop
stos
icebp
add
daa
shll
sahf
adc
mov
inc
push
mov
jb
inc
jp
movsl
cmpsb
cmc
aad
stos
aas
inc
mov
ret
dec
inc
and
iret
and
test
lock
xchg
push
int
stc
sbb
lock
mov
mov
gs
jb
add
pop
fbld
stc
jne
movsb
mov
test
es
out
loop
add
cmp
fs
xchg
cmp
lret
sub
jno
enter
cmpsl
jmp
loopne
imul
dec
mov
jns
lods
stos
daa
repz
ljmp
insb
jne
dec
pop
fdivrs
cmpsb
push
imul
push
cmp
ret
or
fs
sub
xor
mov
out
adcl
mov
jae
fildll
mov
les
xor
sbb
jno
xor
idivb
jl
or
mov
mov
mov
xor
std
sbb
fs
arpl
shl
mov
sbb
dec
outsl
lahf
stos
mov
cmpsl
and
xorb
es
xor
mov
int
pop
inc
sbb
mov
jo
inc
ror
mov
insb
cld
add
insb
jp
xor
std
int3
mov
mov
jae
out
ds
shrl
lods
adcb
or
push
xchg
in
sahf
jmp
sbbb
and
sub
imul
xor
enter
clc
pushl
inc
inc
lods
clc
cli
out
mov
divb
mov
cmpsb
std
xchg
ss
or
jo
push
cmc
push
addr16
push
fimuls
imul
popl
insb
andl
cmpsb
pop
into
loop
call
dec
push
fisttpll
mov
in
repz
inc
or
pop
ljmp
fucomip
mov
icebp
shrb
xchg
dec
push
stos
or
dec
lods
mov
or
and
inc
push
jns
pop
dec
pop
adc
mov
jae
adc
pushf
add
popa
jg
lahf
cmpsl
add
fcmovnu
in
and
xchg
cmp
lds
push
movb
mov
aas
fcmovnb
and
inc
cmp
aas
out
dec
fninit
popa
jge
ds
sub
push
xchg
sbb
cmp
fbstp
xchg
cwtl
cld
scas
movsb
jb
dec
mov
fisttps
dec
ret
jge
cmp
pop
or
or
mov
add
mov
jns
xor
pop
xor
iret
pop
or
into
enter
ret
pop
mov
pop
loope
int3
xorb
stc
in
sti
cwtl
or
lds
or
mov
shl
sub
or
popl
push
xchg
jl
loop
dec
xchg
or
mov
hlt
scas
aaa
jns
sbb
pop
das
mov
bound
mov
test
sub
stos
addr16
dec
pop
push
lds
mov
dec
xabort
shlb
sarl
sbb
dec
push
nop
dec
pop
ret
add
xor
mov
and
or
push
pop
and
sahf
les
fidivrs
push
int3
mov
push
roll
pusha
add
lods
shlb
out
mov
mov
fwait
xchg
xor
and
pop
pop
into
lahf
std
and
push
int3
fildll
mov
xchg
mov
test
sbb
pop
gs
aad
push
pop
dec
mov
lods
ret
adc
adc
sbb
cmc
fbld
push
out
sub
xchg
andl
popf
aad
jb
or
xchg
pop
out
pop
mov
cs
xor
xor
mov
outsb
xor
mov
push
mov
test
xor
pop
mov
cli
xor
add
pop
aaa
dec
into
aam
mov
gs
dec
lods
push
shrb
add
outsl
xor
das
push
mov
fstpl
sbb
adc
dec
pop
outsl
cmpsb
out
lock
sub
out
lahf
push
dec
ret
cwtl
scas
jns
inc
insb
in
add
mov
mov
pop
insb
adc
dec
mov
out
add
inc
add
adc
mov
cmpsb
dec
push
adc
jmp
mov
adc
in
xlat
scas
stc
mov
pop
ror
lds
jl
popf
pop
adc
mov
xchg
enter
aas
cmp
cmp
mov
mov
mov
lock
out
rolb
push
inc
jl
leave
cmp
mov
ss
mov
sbb
pop
cltd
cmpsl
or
fisubrs
push
mov
add
xor
enter
mov
aas
shll
sub
fists
mov
inc
jge
rorb
xor
xor
dec
xor
push
xchg
ljmp
out
push
out
dec
leave
repnz
loopne
rcrb
int3
hlt
pop
cmc
leave
and
xadd
jg
leave
mov
cmp
fldt
std
jl
pop
cltd
insl
gs
loopne
lahf
xchg
mov
mov
cli
cmc
gs
outsb
jecxz
std
adc
sbb
jno
insb
mov
leave
mov
mov
and
stos
aad
sbb
dec
aaa
stos
mov
adc
outsb
mov
pop
sbb
lock
mov
xchg
push
insb
cmpsl
scas
les
int
xchg
push
repz
sub
es
lock
fisttps
aad
inc
push
cli
mov
jp
out
lahf
sbb
mov
add
ljmp
cmp
and
mov
jmp
cltd
lret
mov
xor
sub
cmp
inc
iret
or
in
mov
loopne
or
test
adc
dec
std
mov
or
js
push
movsl
clc
arpl
outsl
push
cmpsl
adc
clc
mov
jne
fs
jno
or
sbb
mov
ljmp
xor
and
int
bound
xor
mov
outsl
rorl
sub
jbe
mov
sub
and
sbb
pop
lfs
fisubs
cltd
fstpt
sub
enter
enter
xchg
icebp
shlb
stos
cltd
mov
stc
aas
test
xor
bound
out
stos
sub
inc
pop
cmp
push
ja
jge
mov
fdivrs
sub
xor
jb
out
js
mov
ret
add
lahf
les
xor
cmp
cli
sbb
mov
cmp
test
jl
mov
xor
and
adc
mov
push
cmp
test
inc
fidivl
lea
xchg
sbb
jp
nop
stos
dec
clc
icebp
jo
popa
dec
je
jo
push
shrl
fs
sub
outsl
mov
ja
jmp
sub
movsb
ss
add
dec
inc
mov
leave
push
sbb
push
ds
call
ds
sub
xchg
mov
lea
mov
and
imul
or
push
pop
std
insb
adc
add
rclb
pop
pushf
cmp
sub
mov
mov
mov
sar
or
jne
xlat
les
sub
repz
movsb
pop
shrb
lods
inc
aas
xlat
push
adc
stc
pop
cld
push
xlat
lahf
mov
pop
pop
ljmp
add
or
cld
std
icebp
sub
daa
je
add
push
sbb
push
inc
inc
sbb
dec
jbe
cmpb
das
sbb
movsb
adc
mov
fmull
sub
stos
pop
push
bound
loopew
mov
sub
sbb
push
test
aad
adcb
cmp
rolb
cmpl
add
dec
mov
and
in
es
xor
push
daa
adc
mov
pusha
cmp
xchg
cmp
lods
jo
jle
imul
cmc
xchg
dec
int
xor
dec
divb
fwait
std
cmpsb
gs
mov
sbb
inc
movsb
pop
jno,pt
stc
cwtl
shll
or
ror
sub
jb
xchg
gs
mov
push
sub
jl
lods
inc
pop
xlat
dec
cwtl
jae
adc
cmc
lahf
lret
cmp
sub
fidivl
sbbl
sub
sub
inc
mov
aaa
inc
push
test
ljmp
iret
fsubl
sub
imul
adc
mov
sub
rep
gs
xchg
andb
sub
inc
leave
mov
lods
push
inc
adc
insb
push
sub
hlt
fs
push
jg
negb
xor
outsl
mov
sarb
push
mov
xchg
leave
repz
popf
mov
stc
sub
xor
and
mov
add
mov
rolb
pop
adc
gs
or
or
push
add
mov
int
in
shll
mov
les
scas
or
or
lods
ljmp
enter
dec
xor
les
dec
sub
mov
lret
daa
jp
xchg
and
inc
jp
cmpsb
sar
mov
shlb
cld
xchg
add
rcr
inc
icebp
mov
xor
sti
pop
add
xchg
push
mov
xchg
pop
and
cmpsl
sti
repnz
jns
cmpsb
sub
xor
cld
pop
add
mov
push
xlat
dec
mov
cltd
out
mov
mov
shl
jle
notb
clc
and
xchg
push
fcomps
push
lcall
mov
jne
icebp
inc
test
sar
andb
lret
cmp
and
sub
sti
shlb
sbb
inc
notl
in
enter
int
aas
and
mov
das
and
scas
adc
aad
pop
scas
dec
xchg
mov
stos
insl
dec
jo
movsb
and
inc
pop
xchg
mov
xchg
push
mov
jae
sub
cmpsl
sub
es
push
in
add
dec
jg
scas
insb
pop
lcall
fwait
cmp
sbb
pop
stos
mov
push
inc
cmc
or
push
repnz
jno
cld
aad
xchg
inc
mov
xor
or
cld
or
mov
or
cmc
sbbb
out
scas
es
dec
jle
cmpsb
jge
movsl
out
movsl
aad
popa
ficoms
stos
fsubl
fistpl
ret
cmpsl
push
cwtl
divb
push
iret
cmpsb
or
jae
ljmp
iret
cld
push
push
inc
jb
mov
adc
sub
arpl
js
jle,pn
mov
mov
xchg
xor
movsb
aad
mov
xor
add
jb
jp
xor
and
jb
test
imul
adc
or
mov
xchg
xchg
jg
popf
add
pop
dec
or
cmpsl
test
cmp
bound
es
iret
scas
sbb
push
iret
mov
insl
es
mov
pushf
jo
jl
lods
ja
adc
test
jg
ss
ret
push
ror
fildll
mov
faddl
hlt
stos
fstps
mov
mov
arpl
mov
jbe
push
mov
push
dec
test
test
xchg
jbe
sub
add
adc
ja
int
jae
inc
dec
popa
mov
jg
inc
cmp
ja
leave
cs
loope
and
jmp
jl
iret
fistpl
pushf
cmpsl
mov
xor
xor
out
adc
jg
out
cmp
pushf
xchg
test
jle
popf
clc
mov
dec
iret
addl
in
nop
clc
xor
mov
mov
pop
sbb
repz
jg
adc
mov
dec
cmpsl
outsl
les
into
leave
adc
mov
pop
js
mov
clc
inc
sub
xchg
dec
cmp
test
cmp
andb
or
sub
lret
lods
ljmp
or
jle
jo
movsb
fldl
and
in
mov
inc
cld
and
mov
bound
into
push
adc
nop
mov
adc
mov
lods
push
xor
xchg
lock
sub
in
mov
adc
jns
aad
je
mov
nop
add
push
xlat
loope
repz
loope
test
jae
arpl
aas
mov
jp
adc
fmuls
sahf
and
loopne,pn
mov
xchg
jbe
adc
popf
mov
lret
adc
daa
adc
shl
fistpll
sub
or
sarb
icebp
sbb
loopne
sub
jo
loopne
shrb
out
cltd
xchg
xor
stc
sbb
shll
push
mov
jge
imul
popf
lcall
push
mov
cmp
div
loopne
es
jo
test
push
clc
jno
add
enter
ret
add
add
pop
push
mov
cmp
or
cli
mov
jle
lods
mov
xor
pop
xor
and
push
mov
sub
aam
mov
test
jl
xchg
mov
pop
xchg
push
jo
sbb
arpl
ljmp
jle
mov
xchg
in
fwait
arpl
xor
pop
jecxz
xor
cwtl
fstpt
and
push
les
jge
jno
ja
iret
addb
fcoms
aam
fcmove
sar
shr
adc
leave
enter
jg
add
imul
test
dec
movsb
mov
cld
es
sbbl
xchg
clc
or
lea
test
push
dec
out
outsl
out
push
sbb
js
xchg
push
pusha
sti
pop
int
aam
push
or
mov
cmpsb
iret
in
out
sub
adc
inc
rol
and
int
in
ret
into
sbb
mov
mov
and
jecxz
xor
aas
into
jb
aad
add
xor
cli
dec
pop
push
sbb
dec
cmp
jo
stos
lahf
ljmp
sub
pop
shlb
push
pop
lcall
rcrl
xor
mov
jl
push
cmpl
mov
cmp
cli
xlat
filds
push
dec
mov
or
xor
popf
movsb
xchg
lret
icebp
test
stos
push
push
adc
mov
and
xor
or
les
and
or
stc
out
mov
dec
mov
mov
or
icebp
jnp
sub
cwtl
mov
into
add
icebp
das
or
call
mov
sub
mov
xor
lods
push
fstps
insl
sbb
mov
ljmp
rorb
mov
rcl
or
out
and
repz
js
jbe
int3
fiadds
push
imul
nop
mov
mov
int3
pop
shrb
mov
test
in
xlat
xchg
dec
adc
pop
testl
cmpsl
inc
imull
ss
add
int
cmpsl
fstl
mov
fistpll
xchg
lahf
push
sahf
aad
lahf
sbbb
push
in
sbb
xchg
je
push
insl
dec
aad
notl
and
push
xor
daa
das
and
aaa
imulb
hlt
call
and
jecxz
cmp
push
in
ja
mov
sbb
addr16
stos
pusha
xchg
mov
adc
pop
adc
nop
sarl
pop
push
jbe
xchg
mov
push
push
and
imul
mov
adcb
cmpsl
cmc
jg
jecxz
mov
iret
daa
mov
dec
adc
test
aad
sbb
and
ljmp
xlat
imul
and
mov
dec
out
lock
popf
icebp
and
dec
arpl
pop
mov
pop
sbb
adc
in
sub
aas
mov
das
rcr
pop
and
hlt
xor
rorl
xor
dec
mov
or
pop
xchg
xchg
outsb
sbb
lahf
push
repnz
pusha
testb
push
push
adc
mov
insb
mov
and
jne
jecxz
das
scas
push
movsl
mov
inc
fistpll
inc
push
xchg
push
inc
add
xchg
inc
mov
inc
push
push
jne
mov
xchg
inc
xor
fs
push
jno
pop
cmc
movsl
nop
dec
aam
pop
push
loopne
pavgb
movsb
popf
mov
mov
mov
inc
jbe
mov
and
call
adc
push
and
or
pop
xchg
adc
ds
mov
mov
cmpl
fnstsw
and
sub
testb
in
mov
fadds
stos
inc
scas
push
sub
xchg
xor
adc
fcompl
lcall
sub
jl
insb
test
ljmp
sub
cmp
xchg
in
mov
jg
imul
outsl
sbb
bound
scas
mov
xchg
adc
in
aam
call
je
push
xor
sarb
in
outsl
add
push
stos
jns
test
jg
mov
inc
and
push
rolb
pop
cwtl
jg
popf
cld
fsubl
iret
rsm
jp
sbb
sbb
movsb
inc
inc
int
cltd
push
jno
xorb
mov
testb
jnp
pop
ret
push
and
test
add
das
std
dec
fmuls
mov
sarl
push
das
mov
push
jno
outsl
push
sbb
stos
inc
pop
sarb
mov
arpl
movsb
xor
cli
xchg
add
xchg
pop
inc
iret
dec
sbb
sub
ret
movsl
shl
pushl
clc
mov
pop
fsubs
xchg
fistl
arpl
or
test
sub
nop
push
loopne
cmp
xor
incb
adc
or
aad
mov
ror
call
push
mov
test
push
and
mov
shl
push
lock
roll
cmp
js
mov
jmp
add
push
xorl
fbstp
or
ss
sbb
push
rcll
or
pushf
orb
lret
fs
inc
sub
mov
stos
sbb
int3
lret
imul
cwtl
fsubs
xchg
mov
lock
xchg
cmc
and
mov
loope
les
lcall
mulb
stos
imul
cmp
movsb
push
sbb
jne
fistpll
and
xor
popf
sahf
pop
pop
mov
insb
test
push
xor
enter
sbbl
dec
xchg
cmp
mov
and
mov
adc
lods
xor
ret
or
pop
ja
icebp
imul
xor
lcall
pop
ja
movsb
pusha
cmp
lret
mov
int3
out
ret
fs
int
mov
sub
mov
mov
add
stos
mov
add
aam
cld
cwtl
out
gs
test
jg
mov
cli
xchg
jnp
push
pop
stc
pop
dec
pop
jo
mov
mov
sub
and
and
repnz
push
scas
fidivl
add
sbb
jnp
adc
aas
cmp
sbb
cmp
fidivl
in
stos
fwait
pop
mov
roll
xor
imul
xchg
mov
push
sti
addr16
jmp
hlt
dec
and
lahf
mov
pop
mov
lods
sbb
mov
or
shll
pop
push
sbb
xor
cld
gs
jne
push
pusha
arpl
pop
dec
cmp
pop
and
pmaddwd
inc
jo
pop
xor
pop
push
jecxz
shrl
jbe
xor
pop
mul
aas
sbb
jns
fmul
clc
jmp
dec
pop
adc
mov
and
cmp
fs
cmpsb
adc
pop
aaa
mulb
fdivr
popf
fdivl
mov
outsl
push
mov
xchg
stc
sub
test
mov
imul
lret
into
push
fcmovbe
sub
bound
mov
sub
xchg
lock
leave
sbb
jae
int3
shrl
inc
mov
inc
jb
ljmp
dec
stos
lods
push
and
out
pop
mov
and
or
sub
fsubp
mov
mov
movsb
cmpsb
xor
and
sub
mov
xchg
nop
mov
shl
dec
push
inc
les
or
mov
lods
cwtl
xchg
xor
inc
out
jb
jle
cmp
enter
psubsb
lods
popf
mov
scas
fidivrl
jle
jno
dec
jne
sahf
addr16
lret
and
aas
addr16
out
mov
cwtl
dec
sub
rol
xchg
ficoms
push
push
ret
bound
sbb
into
xchg
lods
mov
shr
addr16
pushf
cmp
and
fldl
int3
dec
jl
outsb
sbb
repz
nop
mov
lods
add
push
mov
or
in
dec
imulb
mov
movsb
push
adc
repz
lds
mov
cs
sbb
inc
rclb
addl
or
dec
loopne
lret
sub
xchg
fdivrs
sub
or
dec
mov
inc
push
pop
mov
adc
lahf
enter
scas
pushf
inc
dec
sti
mov
aad
shufps
repnz
lock
mov
jge
jmp
inc
enterw
and
into
dec
sub
jmp
inc
cmc
cwtl
inc
negl
mov
mov
mov
mov
adc
bound
movsb
aaa
xchg
popa
les
mov
cmpsb
icebp
sub
or
sar
js
stos
xlat
dec
xchg
push
xchg
pop
jmp
in
loope
push
cmpsb
jg
leave
fisttpl
fiaddl
cmpsb
inc
aaa
inc
mov
ficoml
popf
test
jns
pop
pop
xchg
pop
xchg
jg
idivb
cmp
sbb
and
mov
xor
sub
imul
cmp
mov
adc
in
stc
int
xchg
push
jbe
fldenv
loop
test
pop
bound
pop
test
and
cld
xchg
addl
xchg
int
cld
xchg
add
cld
lahf
aaa
pop
movl
stos
lea
sub
xchg
cmp
lods
sarb
inc
jno
insb
add
xchg
icebp
cmpsb
mov
sbb
add
rorl
pop
ret
lea
or
xor
xorb
add
jg
bts
xor
inc
push
inc
js
push
xor
std
das
sbb
icebp
xlat
adc
push
or
cmp
mov
jno
xor
iret
adc
rcll
xchg
stos
aam
fdivrs
neg
fs
cld
into
into
popf
sub
sbb
int3
cmpsl
mov
or
das
pop
dec
sub
psllq
rcr
pop
lock
lcall
jne
mov
das
mov
in
loopne
imull
int3
rcll
sub
mov
data16
sub
jg
mov
lret
scas
or
mov
xchg
nop
cltd
imul
insl
mov
js
mov
or
stos
mov
loop
push
pop
andb
out
mov
ljmp
and
push
sbb
or
or
mov
pushf
stos
je
cwtl
xchg
shlb
and
ret
lds
push
xlat
adc
lret
push
and
into
testl
sbb
sahf
lock
loop
xchg
in
push
pop
jbe
dec
jb
lds
inc
shll
fistpl
scas
add
je
dec
imul
adc
inc
xor
jnp
gs
push
mov
mov
in
inc
jne
mov
cs
mov
push
clc
mov
ss
call
out
mov
inc
in
lea
push
push
mov
pop
dec
fcmove
loopne
inc
and
mov
jnp
jnp
xorb
jl
aad
or
arpl
or
jbe
push
xchg
lcall
pop
mov
es
rol
fsubrp
out
loopne
movsl
fists
imul
dec
insl
rcr
xor
push
leave
adc
sar
not
gs
xchg
xchg
push
fadd
jae
aad
loope
movsl
movsb
aad
xchg
int3
pop
xchg
xchg
jle
mov
mov
sbb
sbb
jp
mov
mov
jne
pop
call
pop
push
mov
mov
clc
pop
jl
repnz
fildl
aas
imul
inc
push
ret
sub
dec
sbbb
add
test
cmp
jae
inc
xchg
adc
pushf
aaa
xor
scas
and
mov
mov
sub
push
in
mov
out
adc
mov
outsb
push
xor
das
pop
sbb
xor
mov
pop
pop
lock
push
xor
lahf
mov
add
lock
pop
jne
xor
jp
in
push
aad
push
roll
and
dec
add
dec
mov
cmp
fwait
je
les
jb
push
outsb
sub
and
inc
xlat
ja
inc
lock
cwtl
adc
mov
push
dec
out
es
lret
imulb
insb
xchg
les
inc
jb
mov
sbb
dec
xchg
mov
xchg
pop
out
sub
mov
js
xchg
scas
js
aad
dec
lock
cli
repnz
ja
fs
enter
cmpsl
adc
dec
or
and
sti
dec
jle
and
mov
xchg
adc
or
out
js
jg
std
popa
cmp
cmp
cld
xor
out
adc
mov
mov
cli
fisubl
dec
or
pushf
jo
mov
fistpll
lcall
div
aas
jp
nop
add
ret
xor
and
ss
imul
pushf
outsb
popa
addr16
sub
fabs
outsb
dec
cvttps2pi
xchg
lret
pop
jae
mov
lcall
inc
and
rorl
dec
cmpb
and
and
pop
pop
cmp
mov
idiv
cmpsl
es
std
into
repnz
mov
scas
pop
loopne
jle
faddl
push
ds
cmpsl
dec
cmp
shll
sub
push
jp
mov
adc
mov
mull
imulb
xchg
addr16
stc
xor
dec
mov
test
xchg
xor
mov
and
cmpsb
push
cmp
dec
adc
fidivrl
ljmp
jp
repnz
push
dec
ss
dec
mov
out
add
imul
clc
mov
pop
movsb
push
sbb
movsl
lds
push
leave
adc
in
stos
mov
or
rorb
mov
repnz
sbb
inc
jl
call
sbb
adc
sbb
daa
pop
adc
pop
adc
out
cmp
cli
fnstcw
pusha
adcb
adcl
popf
jbe
xor
mov
ljmp
divl
sbb
aad
jno
jno
std
rolb
jl
push
sbb
sbb
mov
inc
dec
int3
and
or
iret
mov
mov
cmovns
sub
aam
into
xchg
adc
xlat
rolb
loop
mov
fsubs
jecxz
mov
push
jecxz
cmp
push
repnz
mov
mov
mov
xor
xchg
mov
js
in
pop
sub
lds
mov
sbbl
inc
xor
mov
cwtl
mov
push
and
insl
xchg
aas
bound
jae
inc
lahf
loope
mov
push
inc
cmp
inc
sbb
and
sti
mov
sub
xor
push
lret
mov
lret
cmpsb
adc
test
sbb
cmp
ds
mov
std
jg
mov
mov
loope
stc
jbe
sti
mov
enter
mull
les
xchg
popa
pop
scas
or
aam
push
leave
daa
pop
stc
mov
and
lcall
pop
push
push
mov
lahf
or
mov
out
jb
loope
ficoml
cli
or
mov
insl
and
outsl
rolb
pop
push
mov
leave
insb
push
repnz
xchg
lret
push
imul
ret
cs
add
das
test
mov
sbb
xor
xchg
popf
arpl
adcb
test
adc
sarl
push
cltd
cmc
in
add
xor
scas
fwait
jecxz
push
jge
inc
rcrb
cmp
lret
cs
int3
jns
jne
inc
push
sahf
aam
mov
es
cld
mov
pushf
push
repnz
out
repz
dec
jge
hlt
mov
movsl
sub
or
jae
mov
xor
les
clc
cwtl
mov
mov
jge
iret
ljmp
mul
xchg
movups
call
push
inc
mov
fcmovu
scas
mov
int
add
sub
or
imul
imul
shll
jnp
in
in
inc
idivb
repz
mov
adc
pop
mov
les
sub
mov
mov
inc
arpl
std
sbb
push
lock
jnp
mov
add
jmp
hlt
into
sti
ja
out
sbbb
lods
into
add
aas
sub
cmp
sbb
aas
or
dec
push
jb
jno
and
adc
in
jmp
cmp
mov
stc
ss
mov
addr16
mov
push
push
inc
rorb
sub
mov
sarb
lock
divb
inc
mov
sub
xchg
jl
out
mov
shrl
and
daa
jmp
cmp
mov
dec
je
mov
rorl
std
in
popa
jb
inc
leave
popl
std
xchg
xor
add
sahf
hlt
or
jbe
roll
into
cmc
cmpsl
pushf
shll
icebp
or
mov
jno
mov
pop
lcall
lahf
movsl
jnp
xor
fwait
jle
fwait
xchg
rorb
push
aad
test
arpl
push
scas
loop
mov
or
mov
in
adc
xchg
cmp
fisubrl
jb
das
fistps
mul
movsl
test
dec
xchg
add
xor
hlt
es
and
jo
xchg
mov
adc
mov
xor
ret
cli
push
mov
inc
out
dec
pop
pop
mov
sub
insb
mov
push
movsl
int3
sbb
pusha
mov
and
sbb
into
sub
and
lea
mov
inc
pop
or
add
and
fistps
sbb
repz
insb
in
mov
enter
mov
mov
adc
add
jno
rcrb
cmp
scas
fcmovb
ret
jg
mov
cmp
xchg
xchg
or
cmpsl
fs
sbb
xor
push
pop
sbb
jmp
mov
subb
adc
movsb
stos
test
clc
testb
cmp
push
push
imul
gs
jmp
test
rcll
aaa
xor
movsl
fsub
stos
sub
aas
sub
scas
push
test
pushf
jp,pn
jg
psubq
jge
arpl
inc
xor
movsb
ja
shlb
fsubs
push
sbb
call
lods
out
dec
sti
les
and
mov
popf
fwait
mov
ja
rol
je
sbbl
outsl
cli
add
out
pop
and
stos
rcrb
jmp
int3
fstpt
mov
int
sarl
jmp
ja
js
in
mov
mov
mov
dec
sarb
fcmovne
in
lea
mov
out
rep
fsubs
iret
imul
mov
mov
dec
pop
mov
dec
dec
add
lret
in
daa
inc
stos
icebp
push
pop
cwtl
inc
pop
aam
sbb
mov
push
add
inc
jmp
jo
and
xchg
cmp
mov
addr16
mov
jo
adc
mov
fsubrs
fs
call
sub
scas
jecxz
out
sub
loop
int
push
ret
xchg
pop
lahf
mov
mov
out
pushf
cmpsl
pop
sub
ja
mov
lock
ja
orl
aas
sub
fstps
fs
mov
or
insl
in
push
or
mov
jbe
mov
clc
jae
aaa
push
pop
push
dec
jae
jl
and
mov
je
push
in
fldcw
jo
call
gs
imul
xchg
pop
cmp
push
mov
push
xor
in
add
lock
lcall
dec
cs
cmp
cmp
aam
xor
insb
adc
int3
lods
pop
lcall
loop
jo
mov
sub
mov
fcompl
arpl
jnp
icebp
adc
bound
lods
xlat
ret
jne
out
and
xor
loope,pt
or
imul
das
ja
fbstp
cmp
xchg
popa
inc
iret
mov
mov
call
mov
push
mov
lods
or
arpl
dec
shll
in
sub
lods
inc
push
lret
and
cmpsb
insb
frstor
outsl
or
jne
clc
inc
xorl
xlat
inc
imul
push
les
jb
adcb
push
xchg
ljmp
xchg
pop
push
sub
ret
sarl
lret
sub
aaa
push
pop
mov
mov
mov
test
push
jb
mov
or
cmp
mov
es
push
cmpsl
add
loop
in
ja
jle
packssdw
into
cmp
mov
and
mov
fwait
and
out
imul
fistps
or
shll
andb
out
ret
pop
sbb
mov
int3
or
sbb
call
mov
fld
imul
movsl
lcall
push
inc
xchg
sub
test
test
inc
mov
aad
es
mov
cltd
add
pop
xlat
sbb
pop
filds
test
jo
mov
sub
mov
test
and
mov
jmp
fcoms
outsl
jmp
jp
jo
inc
scas
sub
jae
cld
jl
pop
ja
and
scas
lods
jo
or
push
jbe
push
pop
lret
loopne
fists
scas
and
pop
xchg
rcr
call
outsb
cmp
sub
mov
mov
add
cwtl
sbb
cmp
push
push
test
add
je
jno
ret
daa
xlat
sbb
jmp
sub
lds
jge
mov
and
sub
or
push
call
xor
cmp
cmp
inc
sbb
imul
jbe
inc
ret
std
xlat
and
mov
std
and
loopne
cmp
movsl
cmpsl
fisubrs
repz
sarl
pop
stc
inc
mov
mov
lods
pop
ror
or
sbb
lret
shrl
mov
ret
inc
cmp
push
mov
mov
mov
int
xchg
mov
mov
jle
out
adc
push
and
outsl
xchg
cli
pusha
ret
mov
rcll
push
cltd
repz
and
mov
jns
pop
sbb
outsl
dec
mov
push
out
repz
mov
int3
xor
lcall
inc
addl
sbb
mov
mov
mov
push
adc
aaa
lock
rcrb
sbb
hlt
xor
shlb
jle
mov
jmp
mov
inc
loop
inc
les
mov
ret
jmp
sub
lods
pushf
fistl
shll
cld
or
test
add
outsb
jne
push
aas
and
lret
outsl
mov
ret
xchg
pop
xor
jae
std
mov
mov
cs
xchg
aam
in
cmp
push
mov
jns
xchg
mov
push
pop
int
cld
sbbl
test
add
lret
inc
sub
fnstcw
push
mov
or
add
fcoml
mov
adc
jno
stos
mov
stos
lods
mov
in
mov
inc
repnz
xlat
xor
push
jmp
gs
mov
or
and
fmul
or
sar
lock
xchg
or
add
dec
lods
out
push
mov
pop
in
push
loop
xchg
in
mov
ficomps
dec
test
push
test
and
in
lds
ficomps
ret
push
lret
xchg
rcrl
add
inc
sbb
pop
insb
cmpsb
xor
mov
fwait
inc
xchg
lret
loope
mov
cmpsb
lret
hlt
sub
and
inc
jmp
sub
xlat
cmc
fsubr
cmp
pop
lcall
outsb
movsl
mov
sub
jle
rclb
mov
xor
or
fsubrp
test
aam
cmp
and
fsubrs
add
dec
daa
cs
test
enter
pop
jb
mov
xlat
in
add
jae
mov
nop
xchg
enter
pop
jmp
push
cmp
mov
adc
imul
shl
jae
lods
cmp
fwait
xor
cltd
fwait
mov
nop
add
popa
nop
fnstcw
adc
mov
pop
mov
mov
mov
ja
ss
mov
movl
push
sub
jbe
mov
xchg
xor
shlb
stos
fisubrl
xlat
push
bound
in
mov
cmp
mov
mov
dec
bound
cs
cmpsl
and
jl
lahf
inc
pop
xchg
shlb
push
in
cmc
out
outsl
in
cli
out
sub
das
fs
notb
cld
xchg
call
dec
ret
insb
pusha
scas
ds
or
pop
popa
orb
inc
jmp
mov
add
shrb
sbb
pop
lret
cmp
jo
mov
mov
adc
pushf
xor
daa
push
iret
jge
pusha
mov
dec
iret
fld1
data16
cli
push
stos
mov
or
mov
shl
add
sbb
addr16
lods
add
insl
sbb
je
out
pop
lods
pushf
mov
mov
sub
mov
int3
push
je
je
xor
xchg
push
push
shlb
sub
test
mov
push
notl
sub
mov
popf
xchg
and
shrb
cmp
test
shll
xchg
xor
jb
decb
cmp
pop
idivb
or
mov
xchg
std
outsb
shr
test
je
mov
test
cmp
lcall
jno
jg
scas
dec
mov
icebp
jbe
ljmp
call
rcl
pushf
sub
pop
lds
pop
fistl
dec
jae
sbb
push
rcrl
mov
test
shll
and
inc
inc
jb
movsl
rolb
bound
je
jecxz
jg
jne
and
outsl
scas
mulb
test
popa
cmp
outsl
in
call
es
xor
mov
xchg
jns
or
pop
cmp
mov
sbb
mov
jb
mov
inc
lods
mov
sbb
std
xchg
or
xchg
inc
xchg
mov
inc
movsb
std
stos
fadds
or
push
or
or
sbb
pop
sub
mov
ret
ja
pop
jns
cmp
jae
daa
xchg
fs
fimull
xchg
pop
loop
mov
mov
arpl
fstpt
mov
sub
inc
pop
mov
xor
ret
mov
in
cltd
inc
and
lcall
movsl
xchg
mov
arpl
pushl
and
sub
cld
arpl
orl
mov
mov
loop
xor
nop
mov
fwait
mov
aad
mov
cld
mov
and
mov
sbb
outsb
stos
movsl
loop
xor
std
in
xchg
out
xchg
sub
test
dec
fucomi
sbb
xchg
push
dec
inc
push
xchg
xchg
iret
in
xchg
xchg
ja
addr16
inc
mov
jp
cwtl
mov
arpl
out
jecxz
sub
ljmp
adc
xor
adc
xor
imull
cmc
lea
lahf
and
sti
jns
iret
sbb
pop
fstl
inc
ret
jmp
scas
shll
adc
loope
dec
and
add
jae
das
test
push
pop
add
xor
xor
xchg
push
cs
testl
hlt
pushf
dec
add
jg
nop
cs
mov
add
mov
xchg
inc
insb
or
sub
mov
xlat
sbb
fidivl
xor
mov
xor
cld
fdivp
sub
out
je
xor
enter
mov
ds
pop
sbb
packssdw
dec
in
test
cmp
jno
inc
insl
push
repz
in
imul
mov
inc
push
cmp
cwtl
pop
mov
in
shl
cmc
test
aas
mov
mov
jne
add
ljmp
pushf
xchg
mov
push
cmpsl
xchg
push
clc
jnp
repz
inc
xor
cmc
enter
imul
mov
jns
xchg
dec
lock
jl
push
add
add
cli
andb
mov
add
push
pop
iret
rorb
mov
adc
pushf
inc
push
es
jecxz
lea
mov
mov
sbb
adc
xchg
sub
loope
jo
mov
js
adc
sahf
lea
sub
cmp
jecxz
jge
mov
pop
icebp
xchg
mov
sbb
in
aad
sti
dec
pop
dec
fsubl
out
outsl
sub
sbb
fldl
and
daa
outsb
pushf
fadd
adc
insb
bound
out
bound
or
ja
mov
adc
pop
inc
idiv
insb
push
sub
test
lcall
inc
in
pop
sub
sub
adc
or
push
out
ret
xchg
icebp
jae
pop
int3
arpl
orl
and
cmp
lods
jecxz
lret
xor
movb
mov
mov
nop
inc
xchg
adc
aam
mov
jnp
xchg
jmp
les
jo
scas
pushf
sbb
add
sbb
out
cwtl
cmpsb
mov
sbb
and
popa
mov
enter
xor
mov
int3
sub
inc
mov
pop
and
test
sbb
mov
mov
pop
cs
in
lcall
xchg
cld
mov
push
sub
mov
sub
sbb
cmp
cmp
and
push
cltd
mov
push
mov
inc
jbe
mov
sbb
pusha
les
stc
xor
and
jbe
lahf
sbb
inc
mov
mov
popa
xor
pop
xor
push
les
add
mov
in
xchg
push
fiaddl
adc
out
lock
in
inc
scas
inc
es
scas
xchg
shl
push
or
adc
cltd
dec
dec
add
mov
mov
sub
mov
stos
adc
jge
test
jle
adc
aas
cmp
ss
nop
and
xor
cmpsl
rclb
lods
fwait
into
cmp
cmpl
loop
pusha
xchg
dec
xchg
jb
pushf
es
mov
xchg
outsl
into
or
and
lods
mov
cmpl
icebp
or
call
fistps
adc
inc
pop
ja
mov
push
sahf
sub
fs
adc
xchg
adc
sti
std
push
loope
inc
jb
int
imul
hlt
test
push
add
jb
mov
mov
xlat
divl
rcll
movsb
mov
xor
test
lahf
lret
jne
dec
ss
add
std
sub
mov
insb
ljmp
cwtl
ret
push
call
stc
mov
fistl
mov
loop
cmp
jno
or
and
push
jns
mov
mov
in
xchg
cs
xchg
lcall
imulb
mov
addl
and
mov
orl
les
fildl
and
sbb
icebp
shlb
sbb
xchg
xor
lds
test
xchg
sub
pusha
cmc
je
push
lret
movsl
fisubrs
int3
dec
push
ficomps
cmp
ds
jbe
pop
push
adc
sarb
mov
in
push
xor
ret
stc
cmp
mov
cltd
dec
sarl
fwait
pop
jae
popf
cs
insl
mov
aas
sub
mov
inc
out
rorb
sahf
lods
and
outsb
or
test
mov
out
clc
push
nop
mov
push
xchg
scas
inc
inc
or
mov
jb
mov
test
dec
and
adc
imul
jbe
xchg
jo
movsl
lods
scas
aas
in
adc
shlb
aam
rcrb
lods
in
in
dec
jg
pop
jecxz
loope
in
fists
test
push
mov
repnz
and
ret
addl
push
in
ret
sbb
pop
and
sub
inc
scas
sti
ret
das
out
mov
adc
test
scas
and
xchg
pop
push
mov
aas
stos
aad
ljmp
mov
fs
mov
xchg
fwait
xchg
lds
js
add
sub
mov
cmp
jo
xor
push
mov
loope
sbb
mov
std
xor
loope
mov
pop
jae
out
outsl
and
pusha
push
add
fcmovu
daa
repnz
loope
aam
pop
jl
jl
lahf
jo
cwtl
jno
imul
mov
subb
int3
das
mov
mov
add
sub
iret
sub
mov
sub
push
out
out
xor
ljmp
pop
mov
scas
jnp
sub
nop
cmpsl
aaa
and
scas
sbb
lock
scas
xor
negl
dec
sbb
or
push
sbb
loop
aam
xor
xor
push
ljmp
mov
inc
add
pop
outsl
push
popa
test
adc
jno
test
pop
loope
loope
sbb
gs
sbb
out
add
xchg
test
ficompl
clc
xchg
jae
adc
cmp
dec
out
fstpt
lods
mov
cs
inc
xor
push
adc
push
cmpl
xor
push
dec
pop
arpl
out
cmp
bound
fstpl
lds
fs
imul
mov
aad
dec
lods
arpl
jmp
push
mov
inc
xor
je
mov
pop
shll
xchg
pop
and
in
in
mov
adc
xor
int
rorl
cmovne
xchg
lods
pop
pusha
leave
sub
or
jb
sarl
xchg
mov
cli
dec
push
mov
imul
mov
hlt
xchg
pushf
ja
pop
subl
daa
and
dec
clc
xor
push
fsubs
cmp
in
cltd
icebp
jbe
cmp
cmc
pop
dec
sbb
ret
mov
cmp
pusha
push
fwait
aad
mov
push
jnp
test
mov
or
lods
insl
mov
test
into
xchg
pusha
or
mov
jb
fwait
mov
sbb
jl
daa
jge
aas
stos
and
decl
dec
ja
cmp
clc
and
push
lahf
dec
mov
adc
insb
add
sub
fwait
add
push
inc
pop
xlat
ret
pop
mov
jecxz
push
lret
ljmp
add
aaa
ret
jo
aaa
pusha
push
dec
sub
mov
repz
dec
imul
lret
lret
lods
inc
movsb
out
add
mov
fstl
cmp
cmpsl
pop
lret
inc
lods
inc
ljmp
int3
les
push
push
cmpsb
or
stos
xchg
in
mov
dec
aam
mov
xchg
pop
pop
mov
movsl
pushf
or
test
shr
mov
sbb
cmp
jp
rcrb
pusha
outsb
loop
pop
or
xor
ds
std
ja
xor
fisttpl
mov
push
mov
ud2
insl
repz
cwtl
stos
pusha
jae
add
pop
jecxz
pusha
dec
aaa
mov
test
mov
shl
xchg
push
pop
cs
push
sub
int3
call
loope
jno
out
push
mov
stc
ja
push
or
movsl
ret
loop
jnp
sbb
xor
sub
jmp
push
lock
sti
test
mov
adc
mov
sbb
sub
repz
repz
sub
dec
push
loopne
lahf
dec
stc
imul
fs
inc
aad
lds
xor
cli
in
dec
or
sub
or
push
lret
out
jbe
sbb
sbb
loop
xor
mov
or
cwtl
dec
pop
sbb
mov
mov
gs
inc
cwtl
xchg
mov
mov
sahf
movsl
in
dec
iret
cmp
andl
iret
dec
add
fildll
adc
rcl
mov
call
pop
xorb
jp
mov
mov
sarb
pop
in
mov
scas
ss
test
cwtl
lahf
lea
add
cmpsb
dec
push
mov
es
insb
das
shrb
xchg
test
cmpsb
fmuls
sbb
inc
jp
and
xchg
lea
inc
outsl
loopne
aaa
pop
add
xchg
jmp
out
jg
mov
cltd
cwtl
dec
fisttpl
xchg
push
xor
adc
test
or
std
sbb
in
int
jnp
in
mov
sbb
mov
push
lcall
lds
lods
sub
ret
mov
or
daa
fldt
jbe
lods
mov
mov
mov
sbb
scas
sub
push
scas
idivb
xrelease
mov
xor
mov
sub
rcl
dec
sarb
pusha
jecxz
test
add
mov
cltd
mov
les
es
js
xchg
popa
vandps
mov
stos
add
push
loop
add
subl
test
mov
out
std
inc
xchg
and
push
xchg
arpl
pop
xor
rcrb
inc
in
lods
push
popa
and
test
pop
stos
cltd
sub
pop
xor
mov
sbb
out
sbb
mov
xchg
lcall
rorl
sub
enter
jne
pop
sahf
push
jge
test
add
icebp
inc
push
inc
sub
push
sbb
je
jge
test
mov
inc
or
push
fwait
add
pop
sbb
push
sahf
mov
cmp
rcll
cmp
xchg
je
mov
cmp
cmp
scas
loope
or
inc
xchg
xor
xchg
mov
rol
xlat
and
outsl
push
sbb
fisubrs
push
out
cmp
leave
dec
cs
xor
cmc
push
jp
pusha
sbb
pop
cmp
lret
in
pop
lods
shrl
out
call
iret
dec
xchg
fnstsw
xchg
aad
insb
sahf
jp
xchg
cld
push
push
int3
shll
ds
aaa
loope
push
hlt
dec
inc
shll
jge
add
pushl
cld
pop
lock
movsb
mov
shr
call
shlb
xor
inc
icebp
test
out
popf
jg
add
mov
fmull
lock
repnz
or
dec
or
jmp
mov
sbb
push
pop
jecxz
test
iret
or
bound
dec
push
dec
xor
sub
mov
xchg
outsl
rcrl
push
jo
inc
les
mov
add
jne
pushf
pop
mov
cltd
mov
xchg
adc
add
or
inc
adc
add
cld
movsb
out
mov
out
notl
sub
xor
push
push
loope
dec
or
sub
pop
xor
sbb
xchg
aam
xor
add
xchg
mov
jl
clc
push
pop
addl
add
enter
add
jle
jge
push
jmp
insl
lcall
adc
jl
mov
ljmp
ja
gs
inc
and
negl
icebp
imul
loope
mov
into
add
and
mov
popf
sti
mov
rcr
add
add
rcl
fdiv
or
xchg
inc
inc
nop
imul
inc
mov
cs
push
fcmovnbe
dec
mov
fisubrl
jns
dec
lret
sbb
mov
lods
rcrl
sub
lea
fiaddl
mov
fcomi
pop
in
lcall
scas
bound
sbbb
adc
das
cmpsl
pop
cmpl
repz
dec
pop
fadds
and
mov
daa
and
mulb
inc
xor
xor
sub
cld
lret
jns
mov
xchg
scas
test
ljmp
lret
aad
mov
pop
add
jbe
test
mov
sub
sbb
aam
les
cld
testb
les
std
push
lret
xchg
pusha
aaa
int3
fidivs
push
push
fcoms
pop
adc
jge
jno
gs
sub
test
adc
or
push
das
xor
pop
push
xchg
push
add
dec
xor
inc
inc
jl
and
xchg
sar
jge
outsb
xchg
sbb
pop
pop
dec
test
aaa
cld
mov
push
ss
das
divb
xor
push
lahf
cmp
sbb
jne
jl
sub
mov
cmpsl
stos
xchg
pop
insb
gs
or
test
jne
stc
mov
push
cmp
icebp
xorl
add
out
adc
ds
jbe
push
push
pop
popf
dec
pop
test
hlt
pushf
jbe
pop
mov
pusha
jecxz
mov
dec
sub
and
mov
jo
mov
mov
movsb
sub
mov
fs
test
jecxz
push
push
pop
fstp
pop
sbb
mov
popa
cmc
or
cs
insb
adc
push
adc
jno
jb
mov
cmpsb
add
dec
sub
push
mov
adc
mov
out
sub
leave
cmp
loopne
repz
mov
mull
in
xchg
mov
push
jnp
mov
cmp
insb
std
insb
adc
inc
or
adc
sbb
pop
test
xchg
jmp
shl
test
int
push
push
test
push
stos
das
scas
or
shlb
stc
call
rorl
daa
mov
sbb
mov
or
fstpl
aad
adc
mov
push
adc
push
and
sbb
faddl
lahf
clc
enter
jae
sbb
fsubs
push
scas
sub
stos
add
jnp
cmp
lret
out
push
loopne
rcrl
mov
sbb
sti
inc
je
pusha
jae
scas
xchg
les
movsb
sbb
mov
xchg
std
movb
mov
cmp
xchg
add
aad
push
outsb
sbb
jmp
push
dec
subl
repz
daa
xor
addr16
icebp
sahf
dec
roll
xchg
subb
cvtdq2ps
pop
enter
mov
adc
push
sbb
hlt
inc
add
mov
jl
and
inc
adc
or
inc
jbe
mov
stos
pop
xor
inc
mov
xor
and
fidivrs
addr16
inc
inc
lock
pop
add
es
mov
iret
out
rorb
sub
xchg
inc
jp
fidivl
dec
mov
pop
shrb
ljmp
loopne
mov
cltd
xchg
dec
out
sbbl
in
mov
mov
xor
dec
push
cmp
sub
jecxz
fildl
jmp
cltd
arpl
adc
repz
add
ja
pusha
in
std
mov
aam
js
dec
dec
test
dec
cld
call
gs
fsub
xor
cmc
lret
pop
cmp
mov
or
xchg
lret
or
mov
cmp
orw
leave
mov
sbb
nop
test
js
and
stos
repz
clc
iret
push
mov
sbb
icebp
dec
cmp
lahf
jno
arpl
cmp
gs
movsl
push
sub
adc
clc
dec
xor
fwait
outsb
xor
add
jb
adc
and
xlat
add
push
jmp
mov
test
lds
mov
mov
pop
inc
fisttpll
and
cld
test
dec
stc
sbb
cmp
shr
pop
adc
sti
mov
inc
or
xchg
fdivp
insb
add
or
sub
mov
insb
mov
lods
or
mov
mov
jl
fs
mov
dec
pop
fldt
cmpsb
int3
ljmp
and
push
test
out
mov
inc
lods
mov
pop
lcall
inc
insb
and
jnp
ss
xchg
sbb
das
jmp
adc
dec
xchg
shlb
mov
mov
mov
testl
mov
ja
mov
add
push
inc
loope
dec
stos
jns
push
and
int3
aad
cmp
loopne
mov
xor
xchg
int3
xchg
jno
rolb
jp
sbb
aas
mull
pusha
aad
mov
pop
inc
sbb
xchg
fnsave
cmpsb
xchg
scas
xchg
rol
xor
stos
mov
mov
inc
in
jo
cwtl
scas
mov
pop
insl
dec
imul
fs
pop
scas
fs
xlat
push
and
ret
sub
and
fildl
scas
lea
mov
in
mov
fbstp
outsl
cmp
or
jmp
jo
adcb
xor
jne
push
and
idivl
add
push
aam
jnp
cmp
sbb
shrb
fbld
sti
adc
push
outsl
arpl
aas
adc
xchg
adc
cmp
mov
data16
dec
jnp
stos
inc
mov
shrl
test
xchg
stos
and
mov
adc
lock
or
push
enter
arpl
and
lds
xchg
out
fcomi
inc
xor
into
bsf
iret
cmp
sbbl
xchg
jbe
test
or
orb
stc
pop
scas
cld
or
jle
dec
test
divl
insl
mov
mov
imul
sub
xchg
flds
rclb
bound
sub
arpl
lds
dec
sti
data16
cmp
das
push
xchg
or
xor
mov
movsl
inc
ja
fwait
cli
push
sbb
cmp
mov
fwait
in
enter
sub
lret
les
push
push
mov
mov
outsl
add
sub
outsl
adc
jb
push
dec
mov
lods
orb
inc
mov
cli
test
repz
mov
sub
mov
cmp
fdivs
pop
out
sahf
sahf
ror
mov
sub
push
mov
pop
add
mov
cmpsl
jg
push
scas
dec
mov
cltd
loope
adc
fdivp
ja
popf
mov
movsb
xor
mov
out
inc
push
fmul
adc
addr16
imul
jg
imul
sub
aam
rcll
adc
pop
divb
scas
or
add
jbe
ss
sbb
popa
addr16
cs
lods
push
push
adc
sti
out
loop
mov
fcmovnb
cmp
les
test
or
pop
pop
add
in
dec
and
inc
xlat
sbb
stos
jnp
sub
mov
fucomp
cmp
jl
out
lret
fwait
lds
add
test
dec
dec
lahf
test
mov
ljmp
inc
pushf
mov
inc
cwtl
rcr
test
xchg
cltd
push
jns
mov
mov
sub
arpl
in
pusha
sbb
clc
or
fistpl
push
jge
jo
jp
xor
mov
xchg
clc
jmp
arpl
scas
mov
and
sub
adc
mov
and
xor
push
dec
inc
and
adc
mov
xchg
mov
movsb
mov
sub
dec
aas
out
fiaddl
push
adc
add
and
cmp
lock
sbb
repz
in
push
test
push
and
push
pushf
xor
sub
sete
or
dec
jne
push
sti
pop
rcll
rol
jne
test
sub
pop
arpl
call
xor
pusha
sahf
push
mov
pop
inc
inc
inc
cmovb
ja,pn
jecxz
sti
test
rorl
fdiv
rorl
xchg
jns
add
xchg
push
and
in
js
sub
negl
sub
cmp
and
iret
shll
lahf
aam
sti
out
in
insl
scas
cmpb
cli
std
pop
jg
js
inc
mov
jnp
or
mov
xchg
pop
in
and
les
add
bound
xchg
jp
inc
sub
loope
ret
inc
ret
jmp
sbb
popf
clc
sub
sub
mov
clc
loope
gs
fdivrs
stc
lock
mov
mov
fsubrl
in
sub
jne
mov
mov
sbb
cld
imul
rcr
cli
pop
xor
repnz
mov
fsub
rclb
add
std
mov
repnz
and
mov
mov
mov
cli
fcoms
mov
mov
mov
adc
push
add
inc
adc
and
inc
push
push
or
shlb
inc
jp
jno
pop
jmp
jb
sahf
sub
enter
lret
mov
and
pop
gs
mov
ja
inc
or
pushl
mov
mov
or
mov
jle
aad
jne
mov
add
popf
add
fcmovnb
or
test
xor
adc
mov
movsl
outsb
mov
inc
test
fisubs
mov
mov
test
testb
leave
adc
and
aam
adc
mov
std
stos
inc
lods
dec
push
out
arpl
andl
stos
sbb
sbb
mov
cli
std
sbb
pop
stc
pop
pop
sbb
xor
inc
add
jns
mov
orl
mov
push
add
aas
int
push
movsb
cmc
repz
or
mov
cld
pushf
or
xchg
jae
test
fcompl
aad
int3
imul
ljmp
xchg
fwait
in
stos
and
and
adc
sbb
shrb
iret
mov
pop
xor
push
sbbb
mov
int
and
scas
add
aaa
xor
jmp
mov
cld
ljmp
inc
cwtl
test
bound
aaa
adc
push
jge
ret
xchg
xor
push
adc
adc
test
mov
jecxz
sbb
not
and
inc
call
inc
hlt
test
sbbl
packuswb
add
or
insl
jns
rcr
mov
int
fs
fldcw
push
out
adc
push
test
pop
loopne
dec
add
out
xlat
mov
insb
push
mov
inc
jnp
test
bound
enter
or
push
jo
loop
enter
xlat
rorl
cmp
dec
add
xor
jmp
add
cmpsb
and
mov
leave
bnd
push
pop
xchg
sub
fildll
mov
pop
jnp
mulb
lods
outsb
add
jno
mov
jg
jb
sub
aaa
pop
mov
lea
pop
repz
add
stc
ds
repnz
dec
mov
rorb
jecxz
mov
mov
jle
and
icebp
pushf
gs
aaa
idivl
xchg
mov
xchg
sub
dec
into
cmpsl
xor
sbb
fiadds
je
add
jmp
ds
mov
std
jg
sub
scas
mov
mov
jmp
cmp
push
inc
jbe
xor
test
pop
std
nop
mov
cmp
jb
test
ljmp
lcall
lahf
lods
das
fdivr
aas
leave
dec
fidivl
in
jp
jno
std
mov
js
insl
cmc
loop
test
es
and
fistpl
enter
sbb
in
adc
jg
dec
aas
inc
loope,pn
push
adc
hlt
add
push
imul
mov
fwait
shl
dec
push
inc
push
dec
sarb
rcr
fistpl
inc
mov
gs
adc
cmp
push
shlb
sahf
add
push
into
fwait
add
mov
rcrl
add
add
mov
test
mov
cmp
loopne
loop
or
push
pop
jne
fwait
pop
xchg
mov
push
andl
cmp
andl
pop
mov
push
cmp
daa
jmp
insb
into
push
pop
mov
loope
pop
xchg
mov
xchg
push
mov
push
dec
das
mov
jle
or
mov
jo
clc
sub
jp
inc
insl
or
mov
lea
jge
mov
push
sahf
push
jae
decl
mov
pop
outsb
or
loopne
addl
in
repnz
sbb
push
mov
adc
je
out
cmp
divb
inc
aam
mov
ret
mov
daa
xor
lea
push
aam
or
jg
jecxz
sti
cltd
pop
daa
and
insl
pop
ret
daa
popf
add
aad
lahf
es
sahf
mov
cld
sbb
cltd
jbe
loope
hlt
lret
mov
ret
cmp
sub
stos
push
adc
std
je
inc
push
outsb
lods
addr16
pushl
pushf
xor
mov
push
jns
xor
push
pop
fdivr
sbb
loope
cli
xor
hlt
int
add
cmp
adc
jge
dec
fstps
out
mov
and
xlat
mov
es
cltd
jae
stos
xor
das
inc
insl
femms
sbb
mov
jge
imulb
mov
xchg
jge
lds
aas
pop
dec
fstenv
sbb
pop
out
outsl
inc
jecxz
test
fwait
pop
cld
in
mov
cmpsl
push
cmpsl
push
loopne
movsb
clc
xchg
and
xchg
sub
ret
mov
inc
xor
mov
xlat
push
es
mov
aam
aas
lods
fistpl
aaa
sub
push
int3
lcall
cmpsl
enter
data16
adc
mov
mov
loopne
adc
and
lds
add
in
arpl
test
fdivrs
sub
enter
inc
lods
push
popa
and
repnz
mov
sbb
in
test
dec
orb
out
push
xchg
insb
mov
lret
arpl
pusha
out
push
sbb
push
cltd
jg
push
jmp
ds
repnz
adc
dec
jnp
scas
pop
and
cmp
ja
dec
inc
inc
out
dec
jl
xor
pusha
ss
sub
nop
pop
mov
dec
push
rcll
mov
jbe
push
mov
les
xor
or
jmp
push
mov
lea
jne
ljmp
and
mov
mov
out
jbe
sti
push
xchg
pop
mov
adc
xor
ja
dec
mov
test
popf
icebp
rcrb
xor
xor
cmp
js
inc
or
pop
popa
hlt
dec
xor
call
das
sub
and
lahf
mov
int
and
jge
dec
dec
pop
xor
cmc
clc
fimuls
jg
mov
push
xlat
mov
mov
sbb
mov
arpl
adc
pop
adc
jb
cmc
pusha
fs
inc
cs
sub
loop
pop
loop
sti
mov
push
fwait
push
repnz
loopne
mov
in
in
addr16
jmp
inc
test
mov
fistl
sahf
lock
mov
call
mov
sub
push
arpl
mov
xchg
jno
in
sbb
dec
roll
mov
mov
inc
fcomps
lock
push
repz
cwtl
inc
mov
cmp
loopne
loop
cmp
push
xlat
or
std
or
pop
aad
jno
push
ljmp
adc
idivl
cltd
out
sbb
adc
push
sub
je
ja
xor
popf
or
sub
dec
stos
sbb
fildl
sbb
lock
inc
cmp
aam
call
out
jne
out
mov
dec
lds
mov
cmp
int
or
push
and
jecxz
cmpsb
mov
insb
mov
xchg
test
mov
or
faddl
and
mov
and
popf
push
fstps
and
leave
sbb
xchg
test
inc
and
das
mov
ljmp
add
nop
lcall
repz
gs
or
stos
jae
pop
push
scas
push
push
sahf
xchg
lds
cmp
inc
pop
sbb
mov
sbb
xlat
out
aad
push
pop
gs
jbe
mov
je
cli
leave
mov
mov
mov
movsl
ret
adc
stos
mov
push
aad
test
pop
pop
scas
sub
dec
add
add
xor
xchg
scas
sub
mov
cmp
sub
clc
cmp
or
push
jne
push
jp
fs
fldl
sub
rcl
mov
mov
pop
jo
ja
pop
ljmp
or
mov
mov
mov
loopne
mov
sbb
dec
imul
add
mov
repz
pcmpeqd
and
mov
cmp
lods
popa
pop
cltd
outsb
pop
sub
cwtl
mov
xor
insl
aad
jp
pushf
cwtl
ret
xchg
fnstenv
jmp
xchg
add
xor
insl
mov
stos
sbb
insl
dec
aam
aad
jmp
setno
mov
das
call
jo
adc
test
stos
cmp
xchg
mov
dec
roll
ret
imul
cmp
mov
adc
push
jns
xor
icebp
cld
subb
mov
test
jbe
js
mov
roll
out
subl
enter
push
insl
pop
shl
shll
scas
test
xchg
pop
int3
in
aaa
sbb
std
mov
cmp
add
push
das
icebp
aad
dec
and
xor
jo
pop
je
cli
push
lock
js
xor
add
dec
fadd
imul
lock
ret
pop
push
pop
scas
lock
repnz
mov
adc
ds
mov
lods
cld
xchg
stos
mov
rcrb
cmpl
and
sbbb
inc
daa
mov
xor
sbbb
int3
pop
cmp
loope
insl
sbb
testb
mov
cmp
xor
dec
in
scas
and
sub
je
movsb
lret
sub
jge
pxor
sahf
mull
xchg
sbb
insb
in
lods
and
mov
adc
movsl
or
test
js
inc
sbb
xor
dec
mov
adc
xchg
test
or
dec
push
pushf
fmull
jb
test
stos
call
dec
nop
or
insl
fsubr
les
aas
adc
and
inc
mov
pop
cmp
fdivrp
push
dec
jl
add
add
or
cmp
imul
adc
into
jecxz
sbb
ds
movb
call
push
jle
dec
push
sbb
jl
imul
mov
popa
in
mov
int3
stc
lods
cmp
sahf
inc
sbb
lret
adc
lret
andb
push
xor
push
dec
adc
or
lret
xor
add
mov
lods
jns
lock
cmpsb
js
or
adc
mov
mov
mov
mov
and
adc
pop
cs
addr16
mov
mov
icebp
and
loop,pn
sub
icebp
inc
flds
push
push
push
stos
ja
jno
stos
push
pop
xchg
adc
xor
dec
add
fisubrs
add
pop
mov
insb
mov
imul
ret
push
sbb
inc
dec
mov
das
xlat
inc
scas
fsub
ss
inc
inc
test
adc
xchg
fistpl
jmp
xchg
iret
jg
mov
fwait
dec
mov
inc
repz
adcl
pop
xor
cmpb
subl
jno
fimuls
mov
add
cli
dec
or
or
fisttpll
dec
cmp
mov
into
lea
insl
push
pop
loop
fcmovnu
mov
mov
jle
mov
push
fldl
aaa
lret
loop
and
adc
pop
mov
mov
ljmp
lods
and
loope
lea
loope
pop
frstpm(287
sbb
push
ret
sub
scas
jae
jecxz
xchg
add
xchg
mulps
lds
push
daa
aas
imulb
xchg
jne
or
out
sahf
pop
stc
jl
xchg
xor
frstor
push
cmp
mov
frstor
mov
cmp
sub
hlt
imul
mov
in
mov
add
dec
lahf
mov
push
mov
insb
cwtl
ds
sbb
rcll
sbb
sti
xchg
push
in
mov
rep
in
dec
adc
jl
cli
lret
mov
pop
lods
xchg
ror
ja
mov
push
shlb
ja
test
and
mov
fisttps
push
pop
aaa
inc
inc
popa
inc
xchg
xchg
and
jne
dec
dec
lret
adc
fsubs
xchg
pop
and
jbe
int3
lahf
mov
repz
stos
inc
mov
sahf
jmp
into
test
mov
push
sbb
dec
xchg
cli
xchg
mov
into
xchg
outsl
pop
mov
cli
xor
mov
mov
scas
mov
inc
and
out
mov
ds
and
shll
nop
jge
das
mov
pop
jb
add
dec
cmp
adc
jno
sbb
ss
nop
push
jmp
aad
mov
push
add
jno
inc
pop
jns
mov
inc
hlt
or
mov
sahf
cmpsl
lods
or
test
int
nop
int3
into
dec
test
jle
pushl
mov
ja
cmpsl
dec
inc
dec
mov
mov
mov
or
into
mov
insb
divb
out
imul
ret
cwtl
mov
xchg
in
push
popf
jge
aam
mov
shr
or
sub
mov
int3
add
inc
cli
pop
dec
lcall
sbb
stc
je
jge
out
pop
xchg
shr
fcompl
adc
sbb
sub
lds
es
pushf
lods
mov
js
sub
in
shrl
mov
push
negb
lahf
cmp
cli
out
cli
mov
in
and
outsb
add
dec
xor
rclb
ficoms
out
enter
adc
or
cmp
test
push
xor
xor
xor
xchg
or
imul
fidivrl
fisubrs
inc
outsl
fwait
pusha
imul
sar
mov
sub
lret
push
push
lods
enter
push
inc
mov
call
sti
add
add
and
push
mov
or
and
ss
cmp
inc
xor
sub
xchg
cli
aaa
sahf
mov
mov
mov
cmc
aas
mov
mov
fcoml
and
pusha
push
outsb
add
inc
bound
and
or
jns
test
pop
xchg
dec
lods
std
jg
pusha
xor
pop
sub
lods
jl
fs
jle
dec
hlt
movsb
enter
xchg
mov
mov
addb
fdiv
out
das
cmp
ja
mov
inc
daa
imul
cltd
or
jl
pop
inc
inc
cmc
or
jle
aas
inc
add
mov
sbb
movsb
xor
xor
sbb
adc
ret
lahf
jb
mov
sub
mov
push
ret
ror
fwait
mov
fimull
popa
sbb
mov
bound
repz
mov
mov
sbb
ret
stc
mov
push
stos
add
pop
mov
shr
fldenv
push
and
sbb
es
ficompl
addr16
or
inc
sbbl
dec
mov
dec
repz
fnstcw
cmovne
mov
std
dec
popf
aam
and
inc
push
dec
push
and
mov
stc
push
adc
jmp
jle
push
fwait
out
pop
ss
sti
fnstenv
push
loope
adc
icebp
enter
and
popa
inc
jge
dec
add
and
jmp
and
lret
jae,pt
sub
fdivl
and
dec
or
add
insb
sbb
gs
xor
dec
pop
inc
cmc
cli
sbb
lods
push
cmc
pop
mov
jge
xor
test
cmpsb
xchg
fucomp
arpl
pop
push
add
cmp
jno
stos
in
or
push
fisubrl
out
sahf
cwtl
jg
mov
idivb
mov
push
popf
xor
es
fistpll
fldenv
or
ret
add
leave
js
mov
daa
jecxz
mov
scas
addr16
mov
cmpsl
or
adc
cmpsb
repz
ljmp
and
push
jbe
imul
aad
fiaddl
xor
xchg
cmp
fs
sti
outsb
shlb
jb
sarl
idivb
cltd
xchg
lods
mov
imul
sti
mov
sbb
cmc
xor
nop
scas
scas
adc
stc
ret
xor
js
dec
jmp
shrl
jle
mov
insb
in
or
push
dec
push
add
mov
mov
inc
mov
mov
in
aaa
lds
adc
inc
pop
jecxz
jmp
xor
sbb
cltd
push
mov
push
push
and
sub
sbb
inc
pop
imul
sahf
or
fs
cmc
das
pop
jmp
rcrb
and
stos
mov
rcrb
inc
ds
in
sahf
push
and
mov
mov
mov
stc
dec
js
bound
mov
jl
jno
ret
fadds
cmc
jl
add
pusha
push
mov
ss
sbb
inc
push
int3
int3
sub
mov
sbb
mov
shlb
loope
scas
jp
and
enter
cltd
cmp
ret
jbe
fisubrs
fdivrl
dec
and
sbb
aam
and
clc
imul
fldl
fldt
test
loopne
jle
lret
fdivrl
test
adc
insl
mov
int
hlt
xchg
aas
paddsb
add
adc
out
mov
mov
and
setbe
fistl
sarb
sbb
push
mov
cld
push
mov
bound
pop
idivl
movsl
aam
mov
ficompl
sti
xchg
inc
adc
mov
into
out
mov
scas
inc
sbb
out
adc
lcall
stos
outsl
mov
dec
or
mov
jb
hlt
inc
cmp
cmp
popf
mov
sbb
enter
and
add
mov
adc
bound
test
push
fidivrl
pop
test
cmp
fyl2x
movsb
iret
rcrl
mov
sbb
stos
mov
mov
fldenv
push
add
sub
xchg
pop
pop
jnp
popa
add
inc
cmpsb
aam
cmp
dec
add
dec
ja
cmc
adc
das
out
es
rcl
dec
mov
mov
push
mov
scas
sarl
incl
sbb
fs
daa
mov
ds
pushf
sbb
xor
sbb
sbb
xor
sub
rcr
rcr
int3
rolb
pop
mov
and
sub
cli
inc
call
icebp
stc
push
xchg
push
add
adc
push
lds
mov
int
outsl
xchg
fstl
mov
xchg
cltd
jmp
add
or
cmp
jnp
xchg
cltd
insb
aam
mov
lret
lahf
mov
test
xor
lret
xchg
mov
adc
movsb
aam
pop
inc
and
test
cmp
daa
adc
in
push
mov
idivb
sub
dec
fmuls
jmp
add
mov
dec
lock
or
dec
lret
jne
es
out
xchg
pushf
dec
pop
push
jl
cld
hlt
paddusw
and
out
outsl
mov
imul
pop
inc
mov
jp
rclb
ja
mov
or
mov
mov
cmp
xchg
jae
or
cwtl
std
fs
xchg
shlb
xchg
push
push
ret
fidivrs
push
add
fiaddl
inc
add
hlt
cli
insb
and
or
sahf
mov
rcrb
sbb
fbld
sub
xorb
ljmp
inc
lret
bound
les
mov
mulb
rorl
jge
int3
xchg
pusha
sbb
adc
pop
iret
xchg
sbb
dec
je
cli
sarb
scas
int3
mov
int
rclb
pop
clc
fldt
daa
in
mov
fstps
sub
enter
imul
pop
push
iret
daa
dec
icebp
and
out
cmpsb
fwait
cmpsb
out
inc
in
xor
sbb
dec
outsl
bound
jecxz
mov
test
popf
mov
movsb
sub
xor
cmpsl
pop
fldl
jnp
or
xor
or
movsb
sub
ljmp
inc
dec
mov
dec
lret
ret
cwtl
out
mov
in
mov
dec
je
popf
aaa
mov
jae
xchg
fmul
rorb
and
ret
xor
xor
sti
push
rorl
mov
outsl
aad
out
lahf
xchg
jmp
xchg
lods
and
pop
bound
sbb
xchg
mov
sub
leave
fwait
xor
scas
cmc
pop
cwtl
add
call
dec
mov
adc
add
ficompl
pop
or
push
push
arpl
adc
sti
inc
mov
mov
jnp
sbb
mov
pushf
loope
pop
lahf
xchg
repnz
jle
mulb
inc
add
mov
int
mov
lahf
les
movsb
push
push
repz
scas
and
sub
xor
js
inc
jmp
sbb
fsub
and
scas
or
mov
mov
test
fwait
sbb
test
pmaxsw
mov
add
push
mov
ds
cld
push
ficomps
mov
shll
cwtl
or
dec
loope
mov
cmp
and
dec
es
cmc
cmp
push
dec
and
clc
addr16
imul
lahf
adc
adcb
sbb
in
pop
cmp
test
jecxz
xchg
mov
sar
imul
dec
xchg
mov
adc
sub
shlb
cmp
fwait
push
mov
mov
inc
pushf
aaa
cmpsl
mov
imul
or
loope
imul
inc
adcl
push
adc
fs
or
cmp
push
hlt
mov
dec
out
jg
push
lret
mov
aad
or
ja
mov
mov
pop
loop
cmp
and
stos
lock
mov
adc
jne
repz
push
and
and
mov
jns
bound
inc
sbbl
mov
mov
fsubl
js
jbe
dec
jo
dec
lcall
jmp
sub
int
out
xor
bnd
adc
and
test
ficoms
and
outsl
xchg
loopne
stos
push
mov
test
adc
enter
fistpl
gs
sbb
jne
inc
mov
fnstsw
cwtl
out
repnz
sbb
gs
sarb
cmp
aas
sbb
or
jne
les
add
push
lods
xchg
jo
shll
sub
jecxz
xchg
aaa
aad
mov
dec
sbb
push
and
addr16
inc
or
dec
mov
or
cld
push
xchg
push
cmp
lcall
adc
dec
sub
fisubs
jge
add
shl
loop
adc
adc
dec
adc
and
lock
pop
lods
pminub
jg
pop
mov
cmp
mov
movsb
jmp
mov
adc
les
rcrl
cmp
stos
xor
mov
xchg
scas
mov
xchg
dec
jns
jmp
sbb
enter
outsl
lock
imul
loopne
out
push
push
test
add
lods
les
dec
loope
andb
in
inc
in
aam
and
mov
jo
sbb
sub
enter
scas
js
fisubs
cmpsb
jae
subl
rcr
mov
std
out
cmp
and
ss
dec
mov
sbb
lods
or
push
push
test
xchg
add
pop
stc
stos
ljmp
pop
cmp
pop
or
mov
adc
push
hlt
mov
mov
mov
mov
pop
loopne
in
enter
dec
pop
fimuls
imul
incl
mov
ficomps
inc
or
add
pop
cmp
lds
jg
or
shrl
push
push
mov
cld
push
inc
xchg
into
fistps
xchg
add
shlb
aaa
adc
sbb
push
xchg
cmp
insl
inc
and
pop
cld
dec
and
cmp
sarl
add
flds
sub
jns
pusha
push
out
mov
ss
inc
clc
jne
mov
push
inc
dec
shr
insb
jbe
js
adc
mov
call
lock
mov
test
fwait
loop
js
insb
sbb
or
or
out
into
or
cmpsl
shll
xor
pop
dec
aas
add
push
jae
shl
push
daa
ret
or
jne
adc
xor
pop
mov
cmp
stos
lea
mov
adc
mov
pop
lea
adc
mov
clc
adc
idivb
pop
dec
jae
imul
add
jge
push
xchg
lret
out
jo
dec
or
mov
fstpt
in
pop
in
mov
in
or
add
jae
stos
adc
and
hlt
xchg
cwtl
stos
es
insb
test
nop
lods
int3
cld
imul
repz
mov
xor
pop
ljmp
push
adc
inc
pop
ret
cs
add
mov
mov
mov
sub
aam
enter
arpl
xor
icebp
rcl
mov
stc
aad
xchg
push
jmp
pop
and
xlat
mov
ret
lds
jl
scas
sbb
inc
cmp
xor
inc
out
gs
out
cmc
inc
testl
xor
inc
movsb
les
xchg
test
push
ja
mov
xor
xor
dec
call
xchg
or
aas
mov
adc
out
cmp
fs
mov
xchg
fwait
repnz
dec
shll
adc
xor
pop
pop
add
sub
call
rcr
xchg
sub
jl
orl
int
repz
outsl
xor
fwait
mov
jae
fwait
cltd
mov
mov
push
mov
inc
ss
ljmp
sbb
int3
xchg
xchg
lcall
iret
xchg
sub
inc
ljmp
or
pop
xchg
dec
idivl
in
dec
in
repnz
mov
hlt
lock
in
cmp
inc
movsb
in
dec
sub
dec
loopne
hlt
xor
stc
xor
adc
out
movsb
mov
sbb
sub
jno
xchg
pop
movsl
cmpsl
xlat
pushf
sahf
jle
in
ret
mull
sbb
iret
loope
sahf
fstps
repnz
sub
xor
into
add
mov
shlb
mov
sarl
or
jnp
icebp
inc
push
in
jmp
inc
sbb
sub
movsl
add
mov
mov
cmpsb
fcmovbe
daa
mov
inc
loop
das
push
and
mov
pop
mov
xchg
ret
inc
xlat
pop
sbb
jbe
or
loopne
bound
jo
sti
fiadds
push
iret
xchg
add
rol
sbb
sub
divl
mov
jecxz
into
adc
sub
or
inc
out
or
sbb
lret
incb
gs
xor
sti
xor
aam
subl
xor
cmp
loop
xor
or
ficomps
pop
dec
push
adc
call
add
lret
mov
sub
dec
pop
inc
jmp
dec
data16
push
scas
in
jle
sbb
test
jecxz
fstpl
stos
stc
dec
cmp
loope
xlat
push
shr
xor
js
arpl
push
pushf
inc
mov
es
xorb
addr16
jp
push
int
notb
push
ret
xor
sub
pop
dec
fs
nop
push
sbbl
mov
es
cld
add
push
lret
xor
movsl
out
lret
cmpsb
jbe
test
add
xchg
jo
cmpsl
and
rorb
pop
cltd
je,pn
bnd
sub
or
movsl
sub
mov
mov
dec
fwait
mov
xor
fwait
ja
lahf
ja
insb
cwtl
jl
std
movsl
push
cs
jg
pop
int3
fisubs
sbb
sbb
aam
ja
xchg
sub
mov
adc
into
adc
push
lret
push
jmp
pushf
mov
inc
sahf
stc
rorl
xchg
cwtl
push
xchg
jl
into
sbb
stos
xor
xchg
xchg
popa
add
incb
insl
pop
leave
cmp
dec
xor
dec
push
clc
cwtl
bnd
lods
pop
mov
lods
xor
push
or
cmpsl
pop
int3
mov
and
aaa
aam
push
orb
sti
pop
mov
data16
in
stc
fwait
sbb
mov
test
pushaw
mov
push
aam
cs
lds
push
mov
mov
add
push
add
shlb
cmc
adc
jge
in
adc
mov
arpl
sub
gs
cmpsb
mov
ja
add
jnp
decb
in
pop
mov
lret
push
inc
adc
scas
out
mov
loop
lret
push
aam
cmpsl
aas
dec
imul
push
int
dec
pop
inc
js
pop
movsb
jle
cmp
insb
and
test
mov
adc
xchg
out
xchg
aaa
inc
lret
cmp
lcall
insb
enter
icebp
in
cli
je
jo
add
repnz
mov
mov
jns
mov
rcll
in
push
pop
push
mov
xchg
sbb
jmp
push
mov
jmp
fstpt
or
aad
mov
andb
addr16
add
mov
xchg
roll
stos
ljmp
sbb
call
jns
jp
enter
cmp
cwtl
fwait
outsb
icebp
mov
jns
pop
adc
xchg
push
mov
test
test
pop
push
ret
lea
mov
lea
call
mov
stos
lret
movsl
js
jmp
hlt
in
in
jle
pushf
sbb
sbb
mov
or
add
sbb
lock
inc
divl
loopne
mov
mov
lahf
jnp
mov
jne
jl
lods
scas
inc
out
mov
out
pop
out
adc
pop
push
mov
imul
xchg
xchg
outsl
repnz
lea
pop
outsb
xchg
mov
clc
mov
and
inc
jnp
add
cmpsb
ljmp
sbb
jnp
lcall
mov
repz
push
pop
cltd
jbe
or
dec
adc
ficompl
xchg
mov
mov
inc
aam
out
mov
and
ret
mov
fsubl
mov
and
lret
imul
rcrb
fsts
aad
clts
sub
sub
nop
repnz
negl
jg
inc
std
and
mov
sub
test
jp
xchg
sub
jl
ret
mov
testb
fwait
jno
xchg
inc
cmp
pop
jne
mov
popa
or
or
jae
lea
adc
or
cs
sub
outsb
insb
insl
jne
xor
add
cs
std
lods
mov
adcb
insl
dec
cmc
mov
popa
xchg
daa
cmp
jl
imul
shll
lods
lods
fdivrs
xchg
add
ss
out
xor
in
or
sar
lea
test
sbb
adc
clc
sbb
pop
xor
and
test
in
or
pop
cmp
and
sbb
repnz
out
jne
inc
repnz
rorb
sub
leave
rcr
lret
fs
fdivrl
cmc
aas
imul
lds
cwtl
adc
add
or
mov
jnp
ss
test
rclb
fwait
imul
add
repz
lcall
in
pop
sbb
inc
shl
mov
adc
push
mov
add
xorb
pop
dec
sub
push
xor
push
loope
mov
popa
gs
repnz
cmpsb
ret
mov
adc
inc
mov
pop
icebp
sbb
stos
repz
in
sub
mov
mov
popf
inc
cli
adc
jbe
test
pop
and
pop
dec
iret
and
arpl
in
pop
add
sbb
jnp
add
inc
rcl
loop
mov
mov
outsb
pop
jp
inc
imul
sub
ret
fs
lahf
clc
data16
pop
subb
mov
cmpsl
call
sbb
cmp
bound
cld
add
imulb
cmp
sbb
int
adc
out
inc
sub
in
mov
and
loopne
and
cmpsl
stos
jge
leave
test
ljmp
and
jnp
mov
adc
jg
neg
stos
and
sub
pop
lret
mov
ret
jbe
push
aad
lret
add
lret
test
fimull
sub
mov
imul
imul
mov
loopne
stc
mov
sbbb
xlat
stc
mov
sbb
xchg
addr16
call
shrb
jne
lods
mov
leave
imulb
jmp
cmp
lret
pop
push
in
addr16
inc
push
fs
lret
push
iret
ja
rol
mov
mov
dec
repz
ss
outsl
inc
aas
add
push
mov
cmp
push
sub
pushf
jmp
hlt
sub
add
dec
repnz
rorl
stc
push
mov
iret
imul
dec
jnp
mov
outsl
ror
out
test
jp
pop
hlt
in
inc
and
rorl
xchg
lock
aaa
rorb
lahf
ret
mov
pop
popf
xchg
dec
inc
dec
ret
insb
cmp
adc
fwait
movsl
outsb
cld
push
out
xchg
xlat
aas
mov
push
shrb
sbb
and
rolb
pop
xor
loopne
cltd
push
mov
clc
es
roll
insb
adc
jnp
repnz
push
and
xchg
dec
daa
sub
mov
fiaddl
cwtl
sti
add
jge
dec
daa
sub
mov
mov
mov
ja
loope
mov
inc
fcoml
dec
sbb
pusha
call
cmp
push
fbld
mov
repnz
lods
in
or
sarb
cmc
fsubr
sub
mov
repz
cmp
mov
negl
out
push
or
mov
xchg
dec
into
repz
sbb
mov
pop
fdivrp
icebp
orb
and
pop
lock
jge
sti
mov
and
outsb
inc
loopne
aad
ret
movl
mov
pop
insl
pop
repnz
dec
push
add
lahf
je
mov
adc
stos
cmp
inc
adc
inc
sti
inc
addr16
leave
mov
mov
pop
sub
icebp
sbb
mov
jnp
shrb
inc
addr16
lret
jl
dec
inc
dec
sbb
fstl
xor
pop
mov
inc
sbb
outsb
cmp
cmpl
xchg
mov
push
cmp
stos
mov
or
xchg
push
push
jne
scas
sbb
mul
jecxz
jg
mov
sub
pop
and
sbb
ror
clc
jns
das
daa
push
mov
icebp
cmpsb
inc
mov
repz
push
aas
dec
mov
adc
fcmove
jmp
sar
aam
daa
mov
jecxz
ret
push
fnstcw
add
pop
cli
outsb
data16
insb
jg
dec
mov
out
rclb
mov
es
sub
dec
or
push
sarl
ficoml
daa
sbb
sub
pop
mov
ret
div
pop
inc
aas
cmpsl
adc
out
test
add
ret
icebp
call
jo
mov
lret
pop
aaa
dec
mov
bound
mov
push
aaa
and
fadds
pop
mov
fidivrs
inc
fwait
testb
cld
nop
adc
jge
jge
jbe
mov
xchg
sub
and
add
xor
xchg
lock
or
and
cmp
decb
mov
popf
push
mov
mov
fs
bound
pop
inc
jmp
jl
daa
lcall
subl
stc
jno
fidivrs
inc
cwtl
fadds
in
fwait
cwtl
inc
sahf
add
pop
xor
push
add
jno
pop
mull
loop
mull
out
lods
or
clc
rcll
stos
push
push
les
adc
repz
and
dec
stos
aam
cmp
cmp
lcall
sbb
jae
push
xor
sbbl
jg
movsl
and
sahf
lcall
push
add
test
rorl
ret
sbb
in
sbb
out
bound
xor
push
cmp
sub
icebp
mov
cmpsb
rcll
test
mov
jb
pop
dec
add
cltd
and
mov
cmp
xor
cmp
maxps
testl
mov
out
xchg
sub
sarl
loopne
aas
push
dec
lea
push
jno
cmp
pop
cltd
and
xor
fwait
cmp
add
popf
push
aaa
push
aad
sub
jne
inc
pop
inc
pop
push
hlt
inc
and
mov
add
fcmovnu
inc
cmp
aam
inc
pandn
fidivl
rol
cwtl
sub
in
mov
sbb
enter
mov
loopne
mov
dec
test
leave
hlt
test
mov
rcr
inc
push
rclb
pop
inc
xlat
std
push
inc
sub
jbe
sub
push
mov
push
jno
je
mov
je
negl
add
sahf
pop
lahf
xlat
repz
mov
out
push
rcrl
dec
push
test
icebp
ret
imul
jns
andl
mov
add
push
out
xor
lds
into
push
jecxz
filds
xchg
cmpsl
in
ret
addr16
sub
xchg
and
sub
mov
inc
xor
jmp
cmp
cli
sbb
mulb
pop
lcall
mov
xchg
out
fwait
add
mov
outsl
push
test
xchg
jns
push
push
nop
cmp
rcrb
cmpsl
cli
repnz
loopne
push
dec
mov
sbb
cmpb
adc
mov
fdivrs
ljmp
add
lods
and
cmp
imul
js
xlat
cmp
sbb
outsl
adc
mov
adc
or
and
mov
call
push
gs
cmp
xchg
jmp
sti
jecxz
aaa
call
data16
xor
push
and
hlt
mov
inc
xchg
mov
dec
mov
mov
sub
rcl
or
bound
push
mov
mov
mov
or
push
data16
or
outsb
fwait
imul
or
mov
ret
enter
sbb
gs
mov
or
cmp
xor
dec
roll
inc
sti
bswap
push
je
adc
notl
lret
out
jns
mov
movsl
sti
stc
adc
test
mov
xor
arpl
pop
cld
sbb
scas
cmpsl
ret
scas
repnz
testl
and
adc
push
rol
inc
push
xchg
dec
icebp
xchg
faddl
jp
lock
into
ficoms
popa
es
into
fdivrl
std
jne
les
and
addr16
mov
xor
inc
push
ret
ljmp
mov
inc
cwtl
lea
inc
mov
mov
jmp
inc
out
jl
lcall
mov
jmp
add
pop
fsub
jecxz
jnp,pn
fsubl
dec
or
cmp
mov
jle
stc
lods
inc
mov
adc
lock
mov
test
int3
jp
lock
and
fdivrs
enter
cltd
or
cmpsl
inc
or
xchg
es
jecxz
mov
push
aaa
push
scas
pop
insb
push
ljmp
dec
fidivs
popa
cmp
popl
loope
mov
mov
test
dec
fdivrl
pusha
xlat
cmp
inc
xchg
push
jb
adc
xchg
push
in
cmp
aad
cmp
jo
shlb
insl
out
xor
in
mov
jmp
stos
dec
nop
rep
sbb
cmpsl
push
jo
push
mov
into
xor
fldt
adc
pushf
ja
cmc
mov
adcb
cmp
inc
popf
in
add
mov
shlb
outsb
mov
cmp
fsubrl
jp
jb
lcall
xor
popf
push
mov
dec
push
loope
jne
push
in
xchg
pop
cmp
sbb
adc
jne
jno
cmp
insb
mov
jae
dec
dec
cli
lock
and
out
cmpl
jb
nop
inc
je
vmaxps
sbb
xor
push
scas
repnz
jmp
mov
pop
mov
and
sahf
scas
sbb
mov
mov
dec
lods
insl
nop
ds
pop
daa
in
push
ret
mov
cmp
pop
jecxz
or
lock
fwait
lea
jecxz
in
dec
lret
sub
add
dec
mov
leave
jb
cmp
cmp
xorb
cs
cmpl
orb
and
and
in
decl
hlt
daa
mov
outsb
mov
jp
arpl
sbbb
mov
stos
lea
in
clc
sub
lret
lcall
cltd
cmp
into
outsl
sbb
popf
lock
arpl
fstpl
inc
stos
or
dec
arpl
sbb
mov
pushf
and
mov
xor
push
daa
cmpsb
prefetch
push
loop
cmp
sbbb
dec
lock
enter
sbb
cmp
shrl
xor
fldl
nop
cmp
fidivrl
sarb
idiv
cmpsb
inc
dec
mov
xor
push
xor
and
xlat
add
test
push
mov
scas
fstpl
mov
leave
mov
mov
mov
and
jecxz
sub
inc
or
dec
out
xchg
mov
mov
enter
fisubrl
jno
push
call
fs
rcrl
test
push
in
ficoms
fs
and
mov
int
imul
cmp
jge
mov
dec
mov
stos
test
jne
pop
lret
stc
pop
ficoml
xlat
call
sbb
notb
daa
out
rcrb
lahf
inc
leave
inc
push
jecxz
lods
imulb
jnp
mov
lds
test
sbb
inc
mov
push
movsb
adc
cmp
in
mov
push
mov
ret
mov
fwait
pop
push
loopne
inc
xor
sub
stos
orl
mov
jnp
mov
push
inc
aad
push
cmp
cmp
addr16
lods
es
mov
add
loopne
into
imul
pop
xlat
adc
cmp
dec
jo
jl
lods
in
rclb
adc
lret
push
ljmp
adc
jo
push
lock
testb
shll
fsubrp
pushf
cmpsl
decb
repz
cmp
mov
icebp
stc
sahf
mov
xor
nop
and
or
cld
mov
pop
and
inc
jne
fcmove
addr16
push
inc
es
cmc
fidivl
pop
xchg
fcmovnu
inc
pop
xchg
mov
leave
cli
xor
sbb
mov
cmp
add
jmp
das
stos
js
gs
xchg
inc
das
mov
lods
jns
notb
add
ret
mov
mov
dec
mov
adc
adc
pop
out
push
pop
ja
lods
and
sar
int3
jg
das
jmp
ss
insb
mov
test
data16
insb
movl
lods
imul
ljmp
jmp
outsl
add
aas
fldenv
test
fiadds
or
jp
xor
test
loopne
sbb
ret
out
out
or
in
lcall
xchg
fidivrs
das
leave
pop
shr
je
mov
jbe
jo
add
sub
daa
pop
mov
out
mov
adc
subl
gs
sub
lea
jnp
divb
inc
sti
loope
out
in
lods
int
test
mov
mov
lock
icebp
mov
mov
mov
fcoml
aaa
cmp
mov
mov
cmc
pop
mov
in
jmp
dec
scas
mov
ret
ror
lock
sbb
cmpb
popf
jmp
lods
lods
inc
mov
lea
addr16
dec
push
repz
int
mov
fimuls
loopne
imul
inc
jns
lea
mov
xor
cmp
jle
mov
push
xor
jbe
add
pop
fistpl
repnz
pop
fldlg2
ja
mov
test
pushf
mov
and
dec
call
push
jbe
add
aas
arpl
mov
cs
pop
test
mov
add
subl
loope
xchg
nop
loope
sbb
xor
mov
into
mov
aad
movsb
push
scas
pushf
sub
and
mov
push
jbe
cmp
xchg
sahf
add
testb
adc
jecxz
roll
dec
shll
and
mov
or
sbb
ret
mov
sub
mov
push
push
push
fmul
daa
scas
dec
push
sub
testb
or
push
insb
enter
shl
js
xlat
ret
push
inc
mov
adc
pop
lods
insb
test
mov
inc
lock
ljmp
mov
pushf
jae
pop
js
push
inc
lock
xor
sbb
adc
sub
or
out
jg
enter
and
mov
add
jnp
jns
lock
test
sbb
popa
xor
jne
adc
dec
dec
scas
push
xchg
or
mov
rclb
stc
mov
cltd
popa
fcoml
mov
out
or
mov
push
lds
cmpsb
int
call
pop
repz
mov
dec
test
test
dec
jnp
aaa
dec
lahf
jnp,pn
cmp
std
jp
jns
lods
addl
sub
cmp
pushl
imul
fidivrs
or
cwtl
pop
sub
mov
pusha
sub
daa
mov
lahf
fs
lahf
arpl
xchg
arpl
mov
pop
pop
dec
dec
outsl
lcall
mov
stos
int3
scas
sub
inc
inc
jb
js
imul
dec
fmul
mov
and
arpl
mov
dec
sbb
daa
pop
pop
xchg
push
ss
nop
inc
pusha
dec
cwtl
mov
hlt
movsl
rep
pop
into
or
dec
add
insl
mov
insl
popf
push
scas
jl
dec
mov
xchg
or
adc
in
dec
mov
loopne
cwtl
sti
jle
xchg
scas
lods
pop
add
idivb
call
decb
ret
lret
adc
add
faddl
std
push
negl
arpl
mov
sti
pop
dec
aam
sbb
cltd
mov
mov
pop
jmp
cmpsl
scas
bound
mov
movsb
jp
sub
sbb
mov
jmp
pop
popa
js
in
push
dec
lcall
push
iret
or
bound
jnp
pop
clc
stc
jo
inc
or
mov
mov
mov
movsl
xchg
call
jg
or
sarl
test
mov
loope
mov
xor
bnd
add
push
sub
pop
mov
hlt
aam
cmp
ret
xor
imul
je
add
aad
sub
daa
cmp
dec
xchg
or
and
push
test
cmp
sahf
sbb
out
and
es
imul
icebp
lahf
xorb
pusha
out
cmc
rsm
dec
outsl
xchg
mov
out
sub
jns
es
nop
cld
gs
test
mov
mov
xchg
sub
push
dec
add
sub
dec
xor
mov
mov
mov
ss
adc
jmp
mov
jp
fstpl
in
mov
sbb
pushf
and
sbb
inc
dec
jns
sub
and
int
xchg
decl
mov
stos
in
bound
xchg
shll
push
fistpl
push
cmp
mov
ret
loopne
jo
mov
add
dec
or
cltd
mov
adc
inc
cmp
sarb
mov
mov
jnp
sarb
sub
xor
pop
jg
lods
out
outsb
mov
movsl
orb
cmpsb
mov
std
sbb
dec
xchg
sbb
in
arpl
push
aas
add
dec
andb
stos
lds
sub
rcr
sub
xlat
rorl
loop,pt
or
pop
enter
lea
sub
loop
js
gs
xchg
outsl
or
lahf
aaa
sub
lret
or
cmp
inc
leave
nop
xchg
popa
jno
xor
cmpsb
ss
into
out
cs
pop
sub
xor
int3
add
add
dec
mov
ret
in
inc
pop
jp
cmc
add
cli
mov
adcl
inc
icebp
ja
inc
sub
int
xchg
out
push
es
push
jbe
jmp
xor
std
adc
prefetch
or
mov
aam
mov
lahf
xchg
shrl
lock
and
pushf
push
mov
scas
testl
cmp
shl
outsb
jb
pop
into
nop
dec
shr
pop
push
fsts
shl
mov
mov
outsl
in
pusha
and
loopne
ficoml
dec
pop
filds
sbb
shll
fistpl
test
jmp
cwtl
pop
bound
stos
xchg
sbb
and
ja
mov
mov
adc
pushf
adc
cmp
scas
stos
mov
rcrl
ret
sbb
fistps
mov
xchg
sub
inc
or
mov
jnp
add
sbb
xchg
xchg
arpl
repz
cmp
jp
mov
or
cld
leave
cs
push
jne
loope
and
aaa
adc
mov
sarl
add
jo
bound
movsl
mov
int
push
xor
cmpsb
ret
repnz
dec
mov
mov
inc
jae
insl
scas
daa
inc
and
adc
hlt
sub
pop
xchg
std
addr16
outsb
cmc
and
add
adc
mov
jnp
mov
lds
mov
mov
mov
push
push
int
jb
int
cmpsl
mov
dec
scas
scas
jecxz
mov
jmp
mov
mov
cmc
mov
leave
pop
repnz
mov
add
aam
add
xor
imul
mov
pop
mov
popf
pop
pop
mov
jmp
pop
bound
add
xor
inc
mov
push
xor
jge
pop
sub
xchg
stc
or
sub
inc
mov
sub
dec
je
mov
xchg
enter
cmpsb
xchg
mov
mov
cs
rorb
bound
mov
pop
clc
or
and
fwait
out
into
stos
push
repz
in
or
lea
bound
mov
in
cmpsl
xor
test
aad
mov
mov
outsl
mov
jecxz
cmp
sahf
mov
call
push
sub
idivl
fwait
or
test
loop
inc
mov
dec
dec
mov
sub
int
popf
xor
pop
or
xor
or
aaa
add
dec
imul
dec
jno
add
push
jecxz
lcall
mov
adc
inc
pop
scas
repz
mov
push
mov
push
jmp
mov
fdivl
adc
rcrb
sub
mov
jge
cmpsl
inc
add
jg
xor
or
call
xor
mov
dec
push
xor
in
mov
sub
pusha
test
mov
push
and
in
push
sub
xchg
std
lock
clc
fldl
shlb
push
in
push
xlat
sub
jnp
push
sbbl
and
mov
test
jg
fs
fimuls
call
xchg
out
sarb
sbb
push
imul
or
lock
shrl
xor
iret
fwait
pop
inc
push
adc
fsubp
sti
push
adc
mov
clc
loopne
clc
fstpt
mov
repnz
adc
outsl
mov
cmpb
xor
or
sahf
loope
call
push
mov
aas
adc
lea
mov
sbb
mov
xlat
or
mov
shrb
das
sub
mov
iret
add
mov
rcrb
pop
mov
sub
add
test
in
mov
mov
xor
daa
cltd
cmp
loope
sub
fmul
mov
andnps
in
rcl
test
adc
sbb
mov
add
lds
pop
adc
mov
loopne
mov
vcvtdq2ps
mov
sahf
push
xchg
and
lahf
ljmp
and
mov
sbb
in
inc
int
mov
movsl
push
dec
cmpl
gs
mov
adc
mov
dec
pop
or
shll
sbb
scas
das
ret
leave
rorl
add
aaa
fisubrl
repnz
sbb
daa
in
mov
fstpl
daa
push
ja
cmp
sbb
or
stos
aam
pop
adc
push
dec
popf
loope
and
jb
jae
mov
icebp
jo
sbb
xchg
enter
lods
dec
jp
test
and
scas
scas
scas
mov
and
call
ds
out
lock
push
sbb
dec
lret
fsubs
sub
pop
push
in
push
xchg
loop
dec
inc
lds
insl
cmc
mov
movsl
call
icebp
pushl
mov
testl
subl
cmpsl
sub
sbb
mov
cmp
xchg
in
addr16
sbb
sub
xor
jno
lea
aam
xor
leave
push
dec
test
popl
or
mov
sbb
test
xchg
rclb
sarl
pop
dec
jno
out
mov
xor
mov
movl
sub
lahf
pop
repnz
jb
rclb
les
jmp
movsl
lods
out
and
push
stos
mov
xchg
popa
lcall
popf
mov
mov
jno
cmp
push
or
outsl
mov
sahf
ds
jae
fistl
sub
in
and
fsubp
jecxz,pn
test
and
das
imul
clc
pop
lds
aas
ret
pop
arpl
dec
push
sti
icebp
add
mulb
ss
or
mov
dec
pushf
inc
sub
sub
lret
outsb
mov
jne
fdivr
mov
cmpsl
adc
sbb
insl
add
je
ss
leave
add
mov
pushf
les
mov
mov
or
mov
pop
dec
jecxz
and
push
out
xor
add
add
xchg
outsb
ss
out
inc
fidivrl
fwait
bound
push
pop
aaa
add
lods
jnp
lods
mov
ret
cwtl
jo
lds
jmp
scas
repnz
fidivrs
or
hlt
push
or
sahf
jmp
jge
out
aam
xor
inc
xchg
stc
imul
lahf
mov
test
jo
lret
jmp
push
std
pop
push
and
rcll
fidivl
xor
jmp
cmp
sub
daa
lret
inc
sbbl
cmpsl
jo
aas
cld
clc
daa
xchg
dec
jo
imul
dec
inc
sbb
xor
and
int
jecxz
push
ljmp
jp
bound
pop
enter
add
int3
or
push
jmp
nop
test
pop
add
xor
das
das
movsb
lahf
into
repz
jg
add
cmp
popa
sub
lahf
mov
add
or
adc
mov
lods
push
nop
pushw
pusha
or
xor
mov
push
in
xor
sub
outsl
dec
movsl
mov
subl
mov
movsl
and
repz
out
es
je
adc
out
gs
aaa
mov
mov
sbb
std
xchg
hlt
sub
shr
or
fcom
fistps
bound
push
pop
cmp
test
int3
movsl
mov
dec
add
out
repnz
js
lret
rcll
fstp
mov
jb
cs
cwtl
inc
shlb
mov
iret
xor
loope
adc
shrl
cmp
out
dec
fwait
into
outsl
jg
cmp
idivb
adc
mov
mov
cmpsl
fucomp
xlat
movsl
aaa
mov
lret
xor
je
pop
cwtl
sbb
add
mov
xchg
call
call
cmpsb
loope
push
or
dec
jl
insl
or
mov
cmp
lock
mov
pop
xchg
int
xchg
fmul
jne,pn
jb
mov
out
popa
stc
lea
jne
rcrl
lahf
mov
cmpsb
andl
mov
jecxz
insb
inc
test
mov
rcl
aad
dec
or
push
cmp
sbb
fsubr
mov
mov
cmp
ffreep
cmp
and
adc
loope
cld
movsb
jle
jnp
jnp
outsb
xor
sahf
mov
call
iret
sbb
shll
jge
mov
push
sarl
in
mov
add
fwait
dec
adc
xchg
ret
pop
xchg
movsb
push
jns
bound
out
movsb
jne
sub
addr16
mov
and
std
subps
mov
push
ds
faddl
cmp
dec
adc
dec
sbb
xchg
sbbl
loop
mov
adc
lods
ds
hlt
jno
mov
ret
lods
jmp
or
dec
push
pop
into
cmp
inc
jne
lea
inc
mov
ja
xor
xchg
mov
add
sub
adc
fidivrl
fcmovnu
mov
shrl
and
xchg
lods
int
mov
xor
int3
mov
nop
xor
leave
inc
lcall
pop
xchg
in
sbb
inc
clc
and
repnz
ret
add
or
in
xchg
mul
cmpsl
jno
xchg
sar
sub
ret
mov
or
int3
rorl
mov
cmp
subb
xchg
jno
cmpl
cmp
or
xor
in
push
xchg
and
movsb
mov
dec
xchg
mov
cmpl
int3
dec
push
mov
push
add
mov
fisttps
les
mov
add
pop
subl
rolb
lock
fildl
xchg
lcall
mov
xchg
repz
lret
ds
data16
mov
movsl
insb
es
repnz
clc
sub
daa
sub
cmp
pushf
dec
or
pop
loope
leave
and
sbb
xchg
fistpl
cmp
test
and
sahf
add
arpl
cmp
int
mov
popa
decl
sahf
xchg
pusha
addl
inc
mov
jnp
dec
xchg
scas
fs
ljmp
or
mov
sbb
xchg
rorl
data16
dec
sub
aas
rorl
into
pop
std
ds
push
in
into
push
push
pop
clc
mov
ds
inc
jge
push
push
jecxz
iret
orb
popa
pushf
push
cwtl
dec
fisubrl
lea
test
imul
jp
iret
inc
adc
ds
lahf
jb
xor
jecxz
sub
jns
aas
and
jae
jne
push
aas
mov
loopne
lea
loope
add
nop
adc
dec
arpl
stos
sbb
sbb
sbb
cmp
add
adc
and
xchg
mov
enter
sahf
movsb
in
shl
xorl
ljmp
sub
add
push
cmpsl
or
aad
pop
inc
or
sub
jo
jle
xlat
fiadds
std
jbe
cwtl
jns
aaa
and
repnz
rolb
fidivrl
dec
iret
push
jno
dec
ja
into
icebp
sti
lret
test
stc
sub
sarl
mov
jg
sub
sbbl
movlhps
push
inc
pop
test
and
pop
in
lcall
jnp
in
scas
xor
mov
cmpsb
fwait
mov
clc
pop
xor
xor
xchg
mov
mul
xchg
inc
adc
xor
push
and
mov
lret
imul
stos
outsl
sbb
fdivs
sub
xchg
je
lret
lods
rolb
ficomps
mov
adc
jp
outsl
shrl
cmpsb
jle
mov
in
imul
push
mov
ljmp
repz
push
out
idivl
aaa
fwait
mov
push
loop
dec
mov
movsb
pop
push
testl
les
mov
fisttpl
imul
out
cli
fsubrs
repz
scas
sub
stos
in
sahf
cmp
push
daa
mov
lea
lret
mov
jb
pop
mov
icebp
push
insl
sub
sahf
clc
arpl
out
in
mov
pop
jnp
icebp
cmp
sub
ds
shll
mov
mov
and
adc
xchg
daa
add
insb
scas
dec
inc
mov
outsl
xchg
jp
jb
sub
aam
xchg
mov
mov
and
mov
enter
out
inc
into
cmp
jo
adc
jle
xchg
pop
push
shl
fdivl
or
fildll
jg
out
cmp
aad
cs
clc
adc
jp
inc
fldl
xchg
repnz
xor
jbe
pop
popa
inc
mov
fcoms
icebp
pop
andl
xchg
into
adc
in
push
push
lods
sub
jb
add
xchg
xchg
sbb
fmull
push
and
fnstenv
iret
hlt
cmpsb
bound
mov
testl
cmc
dec
in
xorb
xor
std
sbb
jno
aas
pusha
stos
dec
daa
es
push
push
sub
mov
add
xor
movsl
push
push
xchg
cmpb
rorl
mov
mov
ficompl
sub
cmp
addr16
loope
adc
mov
mov
and
cmc
lods
jo
sub
mov
sbb
xchg
xor
sub
fmul
xor
sbb
jl
mov
mov
inc
push
and
push
movq
out
fwait
push
fimuls
or
bound
ss
mov
mov
loop
cli
test
add
ljmp
pop
in
add
pop
adc
lods
mov
adc
mov
pop
lea
outsl
stos
xlat
mov
sbb
adcb
adc
jg
std
es
clc
push
inc
je
popa
and
xchg
fldt
cmpsl
stos
dec
rcrl
adc
bound
cmp
adc
je
insl
jb
div
add
es
mov
mov
jg
jle
leave
cli
scas
mov
mov
mov
ficoml
iret
or
popa
test
leave
data16
xchg
sbb
and
pop
idivl
in
xlat
lea
mov
mov
mov
mov
adc
ret
bound
inc
lods
or
out
dec
inc
xchg
fdivrl
push
aas
pop
out
ss
leave
pop
shrb
in
xor
lret
dec
lods
cltd
pushf
xlat
cmp
adc
enter
inc
pop
insb
lcall
fildl
jmp
fiaddl
adc
xchg
cmp
pop
jns
xchg
mov
or
pop
sahf
push
je
or
das
out
mov
gs
ja
out
aaa
scas
int3
loope
loop
jmp
loop
rcr
shll
ljmp
sub
fmul
scas
stc
fsubr
sub
in
rcrb
and
ss
or
arpl
and
jnp
or
jb
fstps
sub
add
ror
mov
shrl
xor
leave
popa
ret
sbb
mov
sarb
sbb
aas
scas
lock
sub
mov
mov
jns
flds
jae
adc
xchg
mov
hlt
daa
cmc
mov
pop
inc
add
add
xor
and
call
call
mov
pushf
xor
clc
rorl
test
push
ja
pop
daa
es
dec
mov
ja
xchg
mov
out
rcrb
dec
cwtl
inc
cmp
jecxz
cwtl
jns
adc
stos
lea
dec
jne
mov
mov
inc
jae
rcll
ljmp
pop
fimull
ret
jmp
xchg
dec
cld
das
mov
add
add
add
mov
movsl
adc
add
mov
dec
cmp
push
mov
les
lods
cltd
nop
fmuls
cltd
imull
outsb
mov
mov
cmpl
fwait
xor
adc
test
inc
pop
push
adc
cmp
cmpsl
nop
cmp
std
adc
lret
mov
mov
jo
stc
test
repnz
out
and
repnz
ss
push
xor
daa
fcom
smsw
inc
ret
xchg
jecxz
dec
ss
popa
or
push
imul
iret
cmpl
jne
shlb
mov
movsb
xchg
in
loopne
or
adc
popf
jbe
mov
bound
cmpsb
int3
xchg
mov
sarb
sub
and
aad
sti
inc
movsl
push
bound
lahf
decb
sbb
adc
jge
sbb
push
aad
in
pop
fistpl
scas
cld
std
pop
mov
loop
addr16
mov
sub
xlat
shrl
dec
jmp
and
cmpsb
lret
xor
mulb
cld
insb
int
pop
mov
xor
cmp
push
sti
jo
call
sub
popa
push
testl
movsb
xor
stos
mov
cltd
fxam
cltd
insb
fucomip
iret
jo
aas
pop
into
mov
aaa
in
or
mov
sub
xchg
xor
cs
or
into
std
jbe
jle
pop
jmp
jno
push
arpl
dec
jno
mov
movnti
or
nop
push
daa
arpl
test
inc
nop
popf
dec
pusha
loope
inc
pop
lea
lcall
out
or
popf
outsl
dec
hlt
mov
fldt
push
mov
push
sbb
and
adc
testl
cmpsl
push
and
jle
inc
jecxz
orl
pop
adc
sbb
pop
mov
mov
add
and
cmp
jmp
repnz
push
cmp
cmp
dec
rcr
cmpsl
lret
dec
test
sub
jo
or
xchg
orl
sahf
iret
ds
pop
and
ss
cmp
insb
mov
mov
cmp
xor
inc
pop
inc
loop
sarb
push
sub
mov
out
repz
adc
push
lock
ljmp
mov
push
scas
jne
push
xor
imull
iret
cltd
pop
mov
jne
push
mov
cs
lret
stos
cwtl
mov
shr
xchg
push
fidivs
push
ret
lds
adc
lods
sub
inc
xchg
or
xchg
and
fstl
sub
arpl
xchg
mov
daa
xor
xor
and
icebp
cmp
inc
aas
dec
cmc
pop
inc
insl
cli
lods
std
mov
hlt
cmc
std
jbe
scas
ficomps
adc
lret
push
ds
js
in
sbb
cmp
lods
cmp
out
cltd
jp
mov
lods
stc
mov
ds
scas
sbb
cld
stos
jg
lahf
arpl
mov
push
aad
jle
push
jmp
pcmpgtb
dec
fcom
jmp
inc
out
mov
mulb
push
ds
mov
adc
fsub
into
mov
loop
xor
dec
mov
xor
ljmp
pop
das
sub
into
je
mov
mov
adc
ret
mov
adc
outsl
pop
gs
pop
enter
popf
inc
push
and
in
nop
hlt
mov
out
bound
push
out
hlt
movsb
test
xor
jg
or
out
insb
lretw
bound
or
dec
mov
mov
das
jbe
popf
push
xchg
aas
and
mull
sub
mov
shrb
stos
lahf
dec
arpl
or
sbb
cwtl
lods
sub
xor
inc
pop
dec
subb
cmpsb
hlt
xchg
jbe
dec
jnp
bound
or
out
inc
and
mov
jmp
hlt
xor
ljmp
mov
insb
lret
in
jne
popa
xor
andb
lea
xor
pop
mov
insl
fidivrs
mov
cmp
dec
sbb
xor
xchg
mov
imull
out
aas
data16
add
fiaddl
sub
sub
sub
mov
inc
dec
sub
stc
push
incl
sub
subl
les
cltd
pop
cmp
jb
hlt
mov
xchg
inc
addr16
mov
adc
leave
sub
push
aas
dec
lods
fmull
jno
fbld
lock
push
push
das
out
or
fistl
inc
mov
filds
or
cmpsl
icebp
jl
sub
lods
les
xor
xchg
pop
leave
inc
mov
cld
push
and
rcr
sbb
lods
jno
xor
into
xchg
cmp
pop
jae
sarb
adc
push
loopne
inc
mov
or
loop
orb
xchg
je
subb
jbe
push
cmp
mulb
stc
lods
aaa
push
orb
ret
sti
mov
jnp
add
fiadds
adc
in
int
push
outsl
es
xor
jns
pop
cltd
std
adcl
or
in
cmp
aaa
pop
mov
pushf
divl
push
and
pop
cld
xchg
mov
lret
out
gs
push
das
or
jno
icebp
outsl
push
loopne
xchg
jmp
jecxz
dec
xor
ret
test
outsl
cmpsl
sti
inc
outsl
outsl
das
imul
jb
jg
mov
sbb
shrl
push
push
ja
in
jecxz
adc
cmp
inc
pop
fmuls
ret
xlat
pop
jle
insl
or
inc
imul
clc
fsts
mov
in
ds
cmpsb
or
push
bound
dec
sbb
scas
or
in
gs
push
jb
jl
xor
adc
aad
aad
jnp
jb
mul
pop
pusha
jno
test
jb
jle
cmp
roll
inc
outsb
mov
sub
cwtl
clc
mov
inc
cmp
mov
adc
cli
clc
out
lret
into
adc
ret
jno
pop
mov
mov
outsb
ss
mov
dec
adc
lret
js
stos
inc
ret
cmpsl
cmpsl
push
lods
or
out
pop
pop
pop
and
je
sbb
sub
jae
or
fimull
xor
dec
leave
cmp
stc
jmp
insb
adc
fnsave
jbe
dec
cmp
bound
sub
xchg
int3
mov
and
jl
mov
int
cmpsb
jo
data16
and
xchg
das
out
and
xchg
dec
xchg
repz
or
dec
loopne
sbb
lds
sub
les
jp
into
pop
xchg
jge
mov
mov
adc
pop
push
push
jecxz
adc
lcall
jne
stos
dec
mov
scas
mov
and
inc
test
xchg
sbb
repnz
stc
jae
in
mul
rclb
rcr
fcoms
jp
push
pop
imul
je
cmp
aaa
dec
xor
jp
sub
mov
jnp
int
mov
mov
push
fsubs
xchg
dec
fwait
std
aad
movsl
js,pn
dec
jns
mov
mov
outsb
mov
jae
test
add
adc
cld
fildll
or
fimuls
push
mov
outsl
sub
js
jle
outsl
jns
inc
out
push
push
adc
dec
xchg
roll
xchg
push
inc
movsl
push
orb
inc
int3
push
cltd
mov
mov
mov
add
rolb
movl
je
adc
cwtl
icebp
sti
shl
sub
addl
xchg
jl
xor
repnz
xchg
fstpl
int
rclb
ja
es
push
jle
sbb
pop
push
adc
fldenv
inc
daa
insl
add
imull
arpl
sub
sbb
or
jle
push
sub
xchg
or
pop
push
jo
mov
jl
and
jge
scas
mov
int3
imul
jno
stos
inc
sub
arpl
add
mov
subl
push
cs
leave
fsubrs
je
aas
mov
or
ljmp
loopne
sbbb
and
repnz
stc
dec
jg
jmp
lods
sbb
fstl
inc
loope
xorb
pop
imul
mov
xchg
or
cmp
pop
iret
push
sbb
sbb
mov
sbb
aaa
inc
dec
mov
mov
or
loopne
fs
inc
nop
mov
adc
sbb
sub
ds
loope
ror
jle
out
push
push
add
adc
xor
xchg
mov
sbb
test
lret
cmp
inc
test
sub
fisttpll
call
cmpsb
shll
xor
push
int
or
mov
andl
lret
lds
inc
xor
and
add
adc
mov
or
add
mov
jbe
test
and
adc
lcall
movsb
xor
shll
js
fcomps
scas
push
dec
ds
xlat
mov
and
lds
inc
dec
pop
inc
cmpsb
push
iret
jns
mov
cmc
adc
jge
outsb
xor
fadds
insb
push
imul
in
ret
lea
fiaddl
pusha
insb
lock
adc
stos
sbb
push
or
push
fists
xor
mov
insl
stos
jno
adc
shr
repnz
mov
setae
movsl
sub
das
pop
push
filds
and
andb
add
dec
add
test
aam
rcrb
scas
cmp
push
xlat
jno
fstps
adc
inc
mov
cmpsb
xchg
inc
std
push
sub
fsubs
xchg
insl
pop
mov
sub
std
fmulp
xor
mov
mov
pop
xor
cmpsl
mov
inc
mov
push
inc
ds
mov
jl
add
mov
fs
cmp
add
adc
es
icebp
arpl
or
je
dec
lods
clc
mov
jbe
lret
incl
test
push
out
std
fs
mov
and
mov
push
jmp
loope
mov
xchg
test
lcall
xor
jp
and
push
and
popl
mov
push
cwtl
cmp
cwtl
sbb
into
cmp
lcall
xlat
ss
jnp
int
dec
lcall
dec
dec
cmp
pop
test
mov
jno
pushf
pop
pushl
and
in
out
sub
and
add
sub
insb
sbb
addb
cltd
or
sbb
in
push
xlat
pop
jg
call
add
pop
adc
pop
and
sysexit
sub
sbb
xchg
dec
cmp
push
std
cltd
filds
mov
mov
es
dec
ds
je
in
xchg
jmp
push
rorb
dec
in
add
cmp
cld
add
add
in
cs
test
lret
push
or
xor
bound
aas
xor
or
addl
aad
inc
cmpsl
dec
popf
inc
cmp
mov
mov
sbb
shl
push
les
fdiv
inc
push
jno
sub
outsb
call
lods
aam
adc
rcrb
addr16
stos
jae
pop
xor
imul
loopne
sbb
pop
fmull
add
lret
mov
add
rclb
and
in
push
mov
inc
bound
sahf
loopne
divb
lret
sbb
icebp
inc
test
ficoml
push
xor
fsubr
out
pop
adc
aas
insb
xchg
int3
fcom
jne
or
push
ss
jnp
enter
ret
cmpsl
sbb
dec
out
pop
lods
sti
sub
xchg
sbb
outsb
fwait
or
push
sbb
or
lahf
leave
pop
lcall
pop
adc
scas
outsb
push
or
sub
out
es
xor
movsb
adc
into
fnsave
bound
mov
lock
pushf
xchg
inc
mov
xchg
outsb
mov
jne
daa
xchg
jb
mov
cmp
xor
add
inc
dec
icebp
pushl
shlb
aaa
rorl
test
loope
sub
outsl
inc
cmc
fnsave
or
lcall
call
jecxz
cmc
inc
mov
mov
xorb
fnstenv
pop
adc
sbb
ljmp
aas
jo
adc
mov
std
inc
fld
hlt
jg
pop
pop
leave
and
fwait
mov
mov
dec
mov
jmp
mov
adc
jecxz
pop
stos
jg
bound
icebp
and
add
mov
in
loopne
xor
dec
push
push
cmp
scas
mov
and
lea
popa
mov
enter
rcrl
shll
gs
and
fs
outsl
add
or
inc
mov
jle
mov
idiv
fcmovnb
nop
fidivs
dec
out
call
cmpsl
into
out
stc
repnz
jecxz
insl
pop
push
sbb
jmp
test
or
mov
es
ror
cmpl
cmp
xchg
mov
in
test
stos
push
out
push
aad
cmp
mov
jb
mov
mov
js
lahf
mov
icebp
cltd
xchg
sub
mov
mov
movsb
sbb
jb
xchg
loop
stos
ret
arpl
push
je
aam
aad
sbb
fildl
sbb
call
aad
lds
xchg
popf
mov
cmpsb
jne
mov
mov
ret
je
inc
shrb
or
adc
mov
scas
ja
push
mov
push
cmc
inc
cmp
daa
xlat
repz
xor
sbb
pop
dec
cmp
dec
cmc
mov
mov
dec
mov
inc
dec
adc
adc
jae
inc
sbb
pusha
sub
mov
sub
push
iret
in
push
into
jge
test
pop
dec
andps
ljmp
push
pop
imul
sub
xorl
sbb
mov
mov
aad
or
cmp
sbb
cmp
leave
test
mov
mov
dec
jle
int
imull
les
and
sbb
js
iret
jnp
dec
mov
insl
dec
sub
xor
pushf
xchg
dec
cmp
mov
dec
push
and
mov
test
cmp
xchg
in
outsl
jo
mov
lea
repz
push
stos
lret
jl
mov
out
out
push
adc
push
push
inc
cmp
into
and
dec
add
add
les
loop
vfnmadd213ss
mov
clc
mov
hlt
cli
mov
cmp
addr16
pop
xorl
jb
in
jnp
sub
aad
jge
test
push
lahf
inc
xor
mov
sahf
sbb
xchg
xchg
rolb
outsl
pusha
inc
xchg
lock
jl
sar
push
push
add
stc
aas
adc
xchg
sahf
dec
push
add
jnp
dec
cmp
or
out
rol
and
push
cs
pushf
stos
xchg
cmp
cld
clc
mov
lock
loopne
enter
jnp
inc
loope
dec
jge
enter
shrb
out
enter
cs
sbb
movsb
out
lock
lea
xchg
jecxz
adc
stc
jge
pop
mov
dec
sub
mov
push
sahf
rorl
inc
sbb
xor
mov
mov
outsb
cwtl
aaa
cmp
pushfw
jb
out
and
pushf
loopne
and
mov
xor
lret
mov
sub
pop
xor
dec
les
je
dec
rcrl
adc
loope
loop
xchg
sub
and
jae
dec
lcall
lret
inc
push
xchg
loope
mov
jg
popa
and
sti
movsl
jbe
insl
jge
sbb
sbb
dec
mov
in
xchg
imul
cs
mov
mov
shl
jo
sbb
stos
and
jecxz
insb
adc
sbb
out
fidivs
inc
loope
cmp
pop
adc
jmp
arpl
leave
test
int3
outsb
imul
mov
lret
into
ret
in
mov
jne
xchg
xor
fwait
adc
test
sbb
pop
mov
or
inc
sbb
pop
bound
pop
icebp
jmp
xchg
xchg
xchg
jecxz
jmp
or
xor
mov
ljmp
inc
hlt
imul
js
jno
or
cmpsl
jmp
inc
sbb
out
insl
and
mov
sub
jmp
mov
push
sti
dec
repnz
repz
inc
push
adc
pop
cmp
pop
cmp
fisubs
test
stos
inc
imul
les
movsb
icebp
xchg
sbb
sar
lea
out
sbb
pop
ror
das
mov
cs
aas
lods
in
std
fldt
sub
push
push
stos
stos
jl
popf
inc
iret
cli
push
add
sbb
jae
lds
pop
jbe
or
inc
xchg
fwait
mov
rclb
mov
icebp
in
push
pusha
push
sub
popf
mov
mov
test
call
push
add
filds
push
shlb
sbb
xchg
insl
aaa
mov
xor
arpl
imul
jne
xchg
test
push
iret
lahf
or
pushf
int
out
mov
inc
push
dec
jg
cmp
xchg
in
aaa
test
pop
or
push
gs
sub
sub
fadds
sbb
in
push
mov
push
rclb
xor
out
leave
adc
or
pushf
lahf
jle
and
std
test
pop
inc
clts
mov
loop
lods
and
sbb
mov
xor
xchg
push
add
xor
dec
loopne
int
jg
push
mov
out
jl
pop
je
loopne
pushf
outsl
or
pop
lcall
cli
push
jge,pn
push
flds
inc
xchg
push
in
dec
fsubrl
xor
bnd
xchg
mov
sub
sub
lret
xchg
lods
dec
xlat
cmp
je
aam
mov
jnp
aas
or
movsl
andl
imul
popf
sti
xor
sub
in
fs
or
push
mov
cwtl
jmp
dec
les
mov
and
add
mov
dec
lock
fwait
sub
mov
cmp
or
xchg
int3
sbb
jnp
cs
jmp
scas
scas
dec
xlat
std
cmp
push
fimuls
and
sbb
das
sti
sbbl
cmpsb
test
aam
xchg
sub
fisttpl
cmpsl
push
mov
popa
xor
das
sub
outsl
adc
jp
dec
push
fsubr
sbb
pop
xor
les
repz
fsubrl
xlat
xor
mov
or
mov
add
lcall
sub
addr16
cmp
cmpsl
lret
add
dec
or
mov
xchg
xor
jmp
mov
and
mov
inc
jecxz
inc
push
or
jae
daa
ret
inc
mov
stos
adc
xor
mov
data16
sub
or
addr16
jmp
stos
mov
test
rcll
popf
into
or
pop
inc
jae
cwtl
repz
xor
xchg
into
mov
lahf
mov
inc
into
lcall
clc
sbb
pop
popa
arpl
jge
xchg
mov
dec
out
xor
mov
pop
das
inc
loope
or
inc
jae
xchg
loope
insb
ret
sti
es
jns
dec
addr16
mov
repnz
adc
lret
jne
sbb
jne
or
push
in
adc
sbb
xchg
int3
repz
jp
lock
mov
xor
xor
scas
and
xor
push
loope
mov
jecxz
out
fs
lcall
jbe
sbb
test
mov
dec
mov
mov
out
ja
jle
add
pusha
rol
out
out
in
jno
xchg
lcall
cwtl
xor
fldenv
out
xor
mov
std
addr16
lret
sub
scas
mov
loopne
mov
imulb
jge
jae
ret
sbb
pop
insl
mov
jae
out
pop
sbb
fisubrl
pop
shll
cmp
sub
xor
fs
sbb
fisubs
mov
xchg
das
cmp
push
xlat
inc
js
aas
pop
adc
insl
imul
out
ljmp
push
xchg
stos
mov
adc
lea
xor
mov
push
sbb
iret
adc
add
loop
xchg
ret
jae
jnp
into
movsl
xor
pop
or
rclb
mov
insl
sbb
push
rcrl
rorl
imul
mov
scas
ljmp
loopne
sbb
add
out
adc
clc
push
lock
sub
mov
rcr
xchg
jge
sub
out
mov
insl
cmc
push
fsubrp
fldl
pop
jo
stos
dec
test
in
mov
jne
push
lahf
out
mov
mov
dec
adc
xor
add
cmp
pushf
adc
xchg
adc
fldpi
test
push
or
popf
lahf
movb
ljmp
cmp
mov
test
dec
out
int3
cld
mov
push
dec
cld
enter
out
mov
mov
aad
pop
fwait
out
inc
es
lret
pop
fnstenv
bound
fldl
loop
inc
ja
andb
jp
sbb
mov
fldt
pop
sbb
mov
nop
or
and
rcl
loope
cld
mov
sbb
lret
jns
shl
mov
enter
and
add
loop
adc
xchg
dec
sub
dec
adc
dec
rcrb
stos
mov
sbb
lcall
fmuls
pop
dec
imul
loopne
dec
or
pop
xchg
andb
adc
cwtl
jb
add
jbe
punpcklwd
paddsb
fwait
jge
pop
test
push
cli
cmp
test
loope
xchg
sahf
call
mov
movsb
sahf
cltd
iret
ret
pop
insb
lcall
stc
idivb
jb
mov
test
dec
cli
ret
imul
xor
cmpb
dec
inc
inc
xorl
arpl
shrd
sti
pop
cli
sub
mov
pusha
ficomps
jb
mov
enter
daa
lret
lods
addr16
mov
sub
jne
xor
pop
lcall
mov
mov
dec
mov
int
sar
add
or
mov
jg
sbb
rclb
ret
xchg
xchg
xor
popf
and
xchg
fs
das
std
add
mov
or
pop
push
sahf
lahf
outsb
jnp
pop
int3
inc
stos
sub
push
mov
sub
loope
push
mov
pop
mov
in
das
xor
push
das
jns
pop
sub
ja
arpl
or
add
fdivs
pusha
mov
adc
pop
add
fnsave
movsb
dec
push
not
sub
addl
push
push
jnp
lock
jae,pt
push
fcmovu
push
jns
addb
out
xchg
or
dec
adc
jge
cli
jno
clc
add
imul
stc
push
shll
psrad
fidivrs
std
or
xchg
dec
jno
movsb
std
sub
mov
loop
add
imul
add
jl
pop
fcompl
pushw
pop
xor
xchg
aam
mov
in
fnsave
repnz
outsb
mov
jp
adc
mov
inc
cmpsl
fwait
sub
popa
popf
aam
icebp
ss
enter
adc
jno
in
pushf
enter
stos
cli
mov
inc
xchg
cld
push
es
ret
cmp
rorl
xor
test
adc
and
scas
call
mov
lret
fsubr
cmp
std
mov
mov
mov
lret
jae
or
aad
test
loopne
jge
push
repnz
mov
aad
dec
sbb
mov
jbe
jge
das
mov
outsl
insb
sbb
fwait
lret
lods
pop
mov
in
xor
ss
mov
mov
pop
xchg
in
push
imul
jns
xchg
push
sbb
div
pushf
and
mov
ds
into
mov
mov
fildll
push
xor
iret
pop
xor
in
cmp
adc
shlb
repz
daa
loopne
std
loopne
cmpsb
in
shrl
push
outsl
mov
cmc
xchg
cs
jne
xor
and
adcl
and
mov
cmp
dec
shl
mov
pop
adc
sahf
imul
clc
xor
sub
dec
lds
sti
ret
dec
lock
lcall
jmp
scas
mov
es
test
dec
cwtl
dec
dec
pusha
push
int3
aas
xor
movsb
inc
fmul
test
xchg
sub
pop
sarb
jae
xchg
mulb
dec
push
repnz
sti
pop
pushf
call
stos
lahf
jle
mov
repnz
push
inc
orb
jne
dec
rcrb
mov
pushf
out
mov
stos
adc
mov
mov
or
jns
sbb
add
adc
inc
dec
icebp
insb
mov
mov
testb
hlt
ljmp
sub
jmp
int3
lds
push
push
cmp
daa
mov
outsb
cmp
push
add
nop
mov
sbbb
jge
sub
xor
inc
cld
add
push
xor
push
xchg
inc
addr16
jo
shlb
cwtl
xor
lret
pop
cmpsl
fs
fcomp
dec
and
shrl
in
inc
dec
xor
jecxz
das
clc
lahf
iret
xchg
jmp
ds
pop
dec
arpl
xor
mov
push
leave
add
mov
or
xchg
and
outsl
or
mov
cmp
movsb
and
mov
test
cmpsb
jmp
mov
dec
mov
fmuls
stos
sbb
inc
outsb
jb
jne
sub
clc
ljmp
int
adc
mulb
rcll
xor
mul
sbb
lds
call
daa
push
mov
outsb
push
call
xchg
cmc
mov
mov
xchg
loope
jo
adc
lret
xchg
mov
xchg
dec
lods
mov
pop
adc
mov
aad
cmp
inc
push
daa
and
aad
fsubrp
bound
mov
push
leave
cmpsb
push
loop
andl
push
out
push
jae
in
scas
stos
jg
aaa
popf
adc
pop
les
cmp
push
lods
mov
lock
sub
repz
test
or
in
sbb
xlat
jecxz
loope
adc
lahf
outsl
fbld
leave
insb
int
cwtl
jmp
call
lock
test
jge
leave
jecxz
sub
mov
add
aam
pop
ret
dec
inc
or
std
xchg
or
arpl
mov
mov
int3
pop
ds
clc
or
inc
mov
rol
lahf
aaa
jno
push
cmp
xor
sub
adc
inc
mov
in
call
out
pop
sbb
mov
jecxz
leave
dec
mov
xchg
imul
shr
inc
jne
xor
mov
sub
push
xchg
test
mov
ret
daa
imul
out
cmp
mov
loopne
shrb
orl
loop
inc
in
mov
into
flds
aas
ret
or
xor
in
pusha
cmc
lea
fcoml
lret
aam
dec
cmp
xor
out
shll
lock
ret
push
aad
mov
jge
icebp
sahf
and
xlat
comiss
test
xchg
rcrb
clc
mov
dec
push
mov
je
inc
push
dec
dec
mov
cli
mov
iret
lret
mov
lods
test
je
enter
sub
mov
les
pop
mulb
inc
dec
fnstenv
mov
testl
rol
inc
mov
ljmp
cltd
insb
adc
sub
jg
clc
loope
addl
out
aam
inc
push
xor
mov
pop
push
cmc
sub
lret
and
repz
cltd
cmc
testl
or
pushf
loope
jmp
mov
xor
popf
clc
mov
test
dec
in
add
push
mov
dec
es
ljmp
roll
mov
out
jno
jo
dec
push
add
jge
push
push
nop
subl
push
pop
xor
mov
outsb
mov
ljmp
add
movsl
scas
jmp
je
ss
rcrl
and
adc
lret
test
pop
in
pusha
ss
cmp
popf
inc
daa
lods
jns
push
and
xchg
sbb
inc
addr16
dec
stc
sbb
cwtl
aas
je
iret
ljmp
ficompl
sub
xor
mov
lds
mov
xchg
cltd
push
mov
dec
mov
xchg
std
mov
repnz
rcrb
push
es
aad
loop
cmc
push
xchg
or
push
jge
fcom
lock
or
xchg
loop
cli
lods
lret
loope
clc
pop
jbe
inc
inc
scas
mov
mov
stos
into
call
cmpsl
fistpll
lods
dec
pcmpgtw
aas
sbb
xor
sub
shll
es
out
dec
push
nop
adc
leave
push
pushf
mov
andb
pop
dec
jns
sahf
leave
popf
gs
imul
push
push
insl
jg
pop
lock
cltd
imul
mov
outsb
leave
dec
mov
pop
lds
sub
inc
cmc
cli
ds
aam
adc
test
push
movsl
mov
xchg
sti
imul
cmpsl
iret
xchg
xchg
pop
fld
push
push
cmp
imul
cwtl
dec
loope
sbb
dec
popl
jnp
sahf
sub
xchg
mov
push
push
xchg
push
adc
adc
xchg
mov
push
ss
pop
out
pusha
mov
sub
add
cli
out
cmp
mov
mov
push
ljmp
jo
imul
outsl
aas
jo
mull
pop
insl
cmc
test
arpl
mov
xchg
dec
outsl
sub
cmp
pop
into
out
incb
lret
in
xchg
and
and
or
mov
test
in
popa
ljmp
das
fildll
xor
test
adc
out
fidivrl
cld
mov
mov
push
mov
repnz
xor
adc
xchg
int3
imul
cmp
jmp
jecxz
clc
fwait
in
loop
mov
ss
loope
rol
mov
inc
mov
jne
lret
push
push
fsubrp
aad
sbb
push
add
jbe
sub
xor
loop
fwait
jb
iret
jb
test
movsl
pop
loop
jmp
sbb
inc
repnz
dec
inc
in
xchg
shl
jge
jg
pop
mov
push
es
out
dec
int3
into
leave
fidivrl
pop
push
xor
rcr
xor
fbstp
push
xchg
dec
icebp
dec
aas
mov
adc
ret
sub
push
clc
xchg
mov
sbb
add
xchg
dec
or
daa
mov
shlb
mov
mov
aas
xor
or
icebp
pop
je
jae
xor
mov
dec
and
movsl
or
adc
icebp
dec
scas
push
dec
mov
pop
push
xchg
pop
mov
aam
enter
jne
push
outsb
dec
pop
outsb
push
or
add
jns
jae,pt
loopne
mov
cmp
lret
std
pop
cmp
mov
or
sub
jge
lods
jge
mov
bound
insl
adc
push
mov
push
jo
imul
push
cmp
fimuls
mov
insb
push
hlt
aam
lods
sbb
stc
mov
mov
aaa
dec
mov
or
inc
push
push
pusha
or
loope
or
push
dec
or
dec
ja
push
inc
sub
jae
shll
pop
scas
out
sbb
xchg
cmpsb
leave
dec
lahf
cmp
repnz
shrb
mov
shlb
mov
std
inc
mov
aaa
add
and
xchg
shrl
out
jne
and
dec
sbb
add
pusha
imul
inc
inc
jl
pusha
sbb
adc
je
popa
xor
jmp
mov
sbb
xchg
mov
xor
imul
and
rorl
bound
cmp
and
into
push
out
pop
arpl
loope
mov
xchg
mov
jbe
les
mov
scas
es
mov
scas
test
xchg
or
xchg
jge
pop
clc
roll
lea
sub
outsb
lods
push
jns
add
nop
sub
pop
aaa
in
pop
lods
mov
or
push
add
pop
shlb
out
out
cli
arpl
jmp
icebp
stc
ret
repnz
lods
and
cmpb
xchg
push
fnstcw
cltd
adc
dec
out
mov
mov
pop
lret
imul
xchg
neg
jmp
push
lods
add
imul
jno
push
mov
insb
mov
sub
stc
lret
adc
lock
arpl
dec
mov
jae
sub
cmp
rcrb
mov
in
rolb
jne
lea
xchg
inc
fistpl
push
inc
sbb
add
out
out
pusha
or
adc
ljmp
sbb
imul
fwait
push
push
repnz
out
sbb
ds
fadds
xor
sbb
dec
sub
mov
cwtl
mov
inc
divb
jo
lahf
lahf
mov
jns
or
jb
xor
add
faddl
sub
add
pop
pop
rorb
ljmp
sarb
sub
bound
lahf
dec
cmp
push
and
mov
popa
or
bnd
aad
jp
cmp
cmp
xchg
std
icebp
call
or
adc
jecxz
push
fcoms
fcoml
mov
xchg
movsl
or
dec
out
inc
lret
pop
cmp
outsl
xlat
xor
daa
mov
jmp
test
inc
enter
int3
pusha
cmp
sub
jle
mov
push
push
cmp
adc
scas
jns
adc
jnp
sarl
push
adc
int3
jge
push
enter
sbb
and
inc
and
sub
inc
mov
mov
or
add
pop
stc
sbb
inc
sar
call
dec
xlat
sahf
shlb
xor
cld
sub
and
test
ja
push
xchg
loope
xchg
mov
fisubrl
pop
jb
cmp
inc
shrl
into
sahf
lahf
cld
or
mov
mov
push
push
cli
cmpsl
xchg
or
in
jnp
test
xchg
es
testl
jl
icebp
mov
cltd
pop
ja
bound
and
mov
inc
icebp
inc
adc
aas
mov
dec
test
and
lret
xor
repz
add
sub
out
xchg
push
pop
scas
imul
mov
rcll
cld
cmpsb
and
fwait
lods
inc
xor
jns
cmp
adc
bswap
push
data16
mov
mov
sbb
in
in
mov
fmull
and
test
aad
mov
push
or
int
push
xchg
inc
addr16
mov
enter
mov
adc
divb
inc
int
cmp
pusha
dec
dec
mov
fsubp
fdivrp
inc
jmp
push
push
roll
shlb
jne
rclb
mov
ss
jmp
push
sbb
movsl
sbb
aas
or
xchg
fsubrs
enter
fnstenv
xchg
dec
pop
fistps
fimuls
or
fs
test
xchg
call
pop
sub
test
fst
xorl
je
and
out
stc
insl
lods
dec
js
jecxz
jl
dec
movsl
mov
mov
jo
push
jg
adc
jecxz
cltd
popf
mov
xor
mov
push
pop
adc
mov
push
fs
mov
insl
ljmp
sbb
sar
mov
int
push
mov
sahf
push
out
arpl
mov
xchg
int3
and
loopne
aas
add
xchg
jg
setb
in
stc
add
pop
popa
daa
icebp
cs
xchg
cmp
xchg
inc
sub
popa
sbb
ss
dec
mov
sub
pop
jo
pop
lahf
bound
inc
repnz
inc
mov
test
scas
dec
mov
pop
js
xchg
mov
clc
movsb
mov
lret
idivl
push
inc
cmp
xchg
ja
lock
test
cmpxchg
and
push
shll
and
fmulp
enter
add
mov
fcompl
xor
test
dec
shll
lods
and
cs
cmp
cld
stos
in
testb
dec
and
imul
inc
mov
filds
and
fsubl
adc
jmp
clc
mov
insl
adc
dec
push
add
jg
sub
add
cli
sbbb
add
ljmp
das
shll
enter
push
das
cmp
mov
hlt
or
add
cmp
jo
adc
roll
cmc
pop
cld
daa
sbbl
divl
sub
adc
pushl
in
mov
in
mov
cwtl
jmp
inc
lods
shlb
lcall
cmpsl
je
sub
pop
js
pop
sbb
int
adc
sub
fiaddl
mov
push
cmp
mov
and
cmp
decl
mov
popf
ret
cwtl
call
pop
bound
test
pop
inc
scas
fidivrs
dec
fstl
gs
dec
pop
test
dec
inc
inc
mov
xlat
rol
xor
ret
es
repnz
out
icebp
imul
outsl
or
imul
xchg
mov
mov
inc
ret
cmpsb
sbb
and
arpl
and
int3
sbb
add
mov
lret
in
and
pop
leave
push
inc
jo
add
fstl
mov
call
idiv
ret
adc
fsts
adc
in
xor
or
sti
sub
hlt
xor
cmpsb
cltd
and
push
mov
adc
test
cli
push
add
aam
nop
fdivrs
push
psllq
mov
inc
cltd
sub
jns
popf
mov
xor
jno
stos
test
rcrb
test
or
add
fsubs
std
daa
mov
inc
mov
in
push
dec
jmp
xor
or
int3
aam
cmp
loopne
popf
in
mov
insl
in
push
dec
mull
mov
mov
sahf
inc
sbb
in
pop
cli
and
dec
loope
sbbb
jle
mov
out
cmp
mov
enter
xchg
loope
addl
fst
repz
mov
lcall
cmp
imull
dec
out
je
jl
sti
and
les
sub
rcl
das
shll
xor
or
scas
fwait
int3
push
cltd
push
and
cmp
add
pop
in
je
pop
test
sub
shr
insl
daa
shll
add
lret
lea
bnd
mov
sub
jecxz
jno
repnz
push
dec
fs
xchg
dec
push
xchg
ret
sub
push
sahf
jmp
xchg
clc
cmpsl
outsl
push
and
dec
imul
lret
incb
jbe
sahf
sarl
mov
aas
scas
dec
push
cwtl
fnstcw
sub
popl
into
sbb
cmovae
imul
inc
sub
pop
js
cmp
jnp
aaa
je
imul
ret
call
clc
into
inc
loop
cmp
pop
call
dec
xchg
jecxz
xchg
add
push
adc
inc
insb
mov
add
popa
xchg
push
rcrb
fstpt
outsb
inc
dec
fimuls
outsb
lods
dec
test
jne
mov
sub
mov
bound
out
arpl
and
sub
mov
xchg
cmp
sti
lods
add
dec
xor
push
movsl
and
test
lret
aam
pusha
imul
sub
jp
mov
mov
vpunpcklbw
imul
add
popf
js
rcll
jae
pop
fstl
or
out
cmpsl
add
mov
andb
cmpsb
and
imul
sti
insb
inc
and
fistpl
aad
mov
mov
pop
xchg
jno
push
sub
movsl
je
inc
xlat
out
pop
mov
jp
jge
and
ss
subl
adc
orl
fcoms
jb
xlat
aas
adc
xchg
in
jge
daa
mov
xchg
jns
fst
aad
movsl
xchg
cmp
mov
orl
inc
xor
jmp
iret
adc
sub
out
cltd
incl
adc
div
fs
call
fstpl
jns
jno
sub
fisttpll
mov
int
mov
ret
mov
in
dec
dec
add
stos
add
dec
out
xor
push
lret
sbb
aaa
cs
stos
sarb
pop
stos
in
fldcw
push
push
mov
leave
mov
fisubrl
and
lods
push
mov
sbb
into
mov
sahf
sub
mov
in
dec
popa
inc
sbb
mov
inc
sbb
add
and
int
aad
pop
xchg
jae
pop
add
xor
stos
or
dec
adc
push
pop
cmp
repnz
or
adc
out
and
mov
movsb
xlat
insw
shll
test
rclb
repnz
or
faddl
sub
sub
mov
popa
mov
mov
lea
xor
dec
mov
adc
mov
scas
loope
push
mov
and
inc
mov
xor
jl
aaa
mov
xorl
pop
out
dec
mov
cld
or
mov
popa
insb
std
ds
cmp
std
loop
dec
jmp
inc
mov
pop
cmp
fildl
fwait
test
mov
rcrl
jo
pop
fwait
push
mov
in
cmp
fistpll
inc
mov
ror
add
mov
mov
daa
push
std
movsb
mov
and
int3
mov
dec
mov
out
fnstenv
inc
int
jne
rorl
fldt
data16
xor
popf
lea
mov
xor
imul
jecxz
push
out
mov
add
jno
lea
or
sbb
imul
add
inc
ret
lock
int3
not
jg
add
lods
pop
arpl
push
loopne
sahf
cmpsb
pop
fbstp
xor
incl
int3
push
ljmp
sbb
sub
dec
xchg
mov
push
sbb
mov
leave
mov
mov
push
cmp
inc
popf
add
dec
push
popa
add
rolb
inc
rolb
leave
xor
popf
push
pushf
mov
adc
popa
shll
bound
push
mov
sub
inc
pop
jo
je
mov
xchg
xor
xlat
lret
mov
pushf
jno
xor
insl
fstpt
icebp
test
aaa
ja
push
sub
cli
sbb
sahf
cmp
mov
adc
sbb
or
mov
hlt
pop
sbb
leave
lea
jge
jne
fdivp
inc
aaa
sub
arpl
mov
cmpsb
ffreep
xor
jb
leave
mov
jmp
movsl
and
out
pop
pop
mov
ret
or
xchg
out
js
sub
lret
jo
dec
jbe
fsubrs
cld
into
ret
or
js
int
repnz
adc
adc
ljmp
mov
mov
std
lea
or
jbe
adc
stc
or
lret
mov
icebp
adc
xor
lret
xor
add
imul
loop
adc
dec
pop
test
dec
fstpt
jge
cs
fisubrl
int
mov
mov
xor
xor
ret
cmova
stos
jmp
stos
stc
ja
sub
mov
sbb
or
jo
pop
mov
pop
iret
or
out
into
cmp
and
arpl
pop
adc
inc
flds
imul
push
in
inc
repz
insb
inc
scas
lret
mov
mov
dec
fstps
in
xlat
adc
dec
adc
mov
dec
push
push
add
ss
sbbb
dec
ret
xchg
and
addr16
push
fwait
cmp
dec
jmp
sbb
adc
sbb
and
dec
xor
add
shll
mov
roll
or
inc
jl
in
pop
imul
iret
add
push
add
jle
lock
cmc
add
pop
xchg
sbb
lret
xchg
pop
test
add
mov
jmp
dec
subl
add
inc
mov
enter
addb
and
push
scas
stc
repz
orb
push
decl
jle
jg
pop
jno
mov
mov
popa
into
test
xor
mov
jmp
clc
gs
je
pop
ljmp
lock
pushf
dec
repnz
xchg
or
inc
xor
jnp
mov
dec
sarb
jns
and
cmp
stos
lret
das
cmpb
int
fisttpl
fs
mov
gs
enter
ret
shlb
pop
jo
mov
and
mov
scas
aas
lock
xchg
es
loop
repz
jo
rorb
repz
arpl
inc
out
je
mov
mov
mov
jbe
lcall
into
mov
addr16
in
mov
faddp
int
cmp
push
mov
push
push
dec
das
cmp
sbb
lret
cs
push
jae
jbe
or
inc
pop
test
push
enter
pop
cwtl
in
xor
pop
daa
stos
lds
pop
add
imul
push
jnp
cmp
fadds
mov
xchg
add
out
pop
jle
pop
xchg
lret
dec
cmp
adc
arpl
out
notb
dec
call
jb
stos
adcb
inc
mov
fldl
filds
aad
insl
dec
jmp
test
jns
je
xor
cltd
out
inc
sbb
sub
ret
cmp
aas
call
sub
fsts
into
or
psubw
loop
and
imul
insl
dec
repz
loopne
sub
fsubrp
in
fstl
rolb
and
ret
lods
loope
mov
fdivrp
aam
pusha
vmovq
jbe
pop
fsubrl
stos
incb
sbb
add
jmp
idivb
imul
sub
xchg
pop
xchg
sbbl
mov
mov
subl
jge
inc
lods
cli
and
mov
dec
and
test
stos
pop
mov
cmp
cmc
and
jl
cmpsl
cs
mov
leave
mov
adc
pop
scas
xchg
inc
mov
negb
and
js
rep
jbe
pop
mov
inc
es
mov
sbb
xchg
into
stos
mov
in
aaa
mov
push
mov
mov
sti
fildll
stos
cld
and
into
lock
insb
sti
or
int
sahf
les
sbb
inc
addl
xor
inc
lock
jns
mov
out
js
and
mov
mov
inc
fnstenv
sbb
and
bound
fcomps
sti
pop
pop
mov
sub
mov
nop
rorl
pop
pop
xchg
mov
test
push
pop
into
int3
lods
enter
aam
cmp
inc
clc
popl
add
xchg
add
sub
push
fcoms
jne
mov
adc
mov
and
add
sub
pop
pop
mov
rcrl
or
vcomisd
xor
out
stos
or
pop
jp
add
push
push
ret
cmp
cld
je
lahf
pop
cmp
and
jle
cmp
jge
gs
stos
insl
daa
out
fwait
xlat
stc
aas
push
int
push
jp
inc
sarb
outsb
mov
fs
mov
rcrb
out
lock
and
xchg
add
fnstenv
inc
punpckhwd
jp
mov
sub
push
cmpsl
pop
mov
in
sti
adc
mov
add
in
adc
sti
pop
add
dec
xor
out
icebp
sub
mov
mov
xchg
mov
iret
xchg
outsl
popf
inc
push
push
in
bound
popf
cmp
jg
mov
daa
jno
imulb
pop
ds
jmp
push
push
and
jmp
xchg
addr16
sbb
xchg
cmp
fcompp
mov
cs
pop
dec
int3
jg
inc
dec
dec
push
loopne
int3
iret
leave
sub
sub
pop
subl
add
pop
sbb
in
or
lds
loope
ret
scas
push
pop
out
jg
or
pusha
mov
cmpsb
ja
faddp
push
sub
and
sti
pop
dec
sbb
sbb
or
test
or
xchg
int3
das
inc
jne
xchg
mov
dec
mov
test
out
sbbb
lret
cmp
cmpb
dec
inc
das
data16
add
pop
sti
cmpb
mov
jmp
add
sti
test
pop
cmp
lea
and
je
ret
fmulp
cmp
dec
dec
jnp
jp
xchg
inc
lods
fadds
gs
aas
je
out
into
aad
icebp
cs
es
outsb
out
bound
into
in
and
xchg
mov
ds
arpl
mov
into
cmpsb
dec
call
icebp
cmpsb
movsl
addl
push
sbb
dec
cli
dec
add
int
jae
mov
testl
clc
adc
jb
std
sahf
mov
ja
rclb
sbb
out
popf
sub
aad
js
test
mov
xlat
or
fdivrl
sbb
adc
decl
or
aam
xchg
out
filds
out
lret
fwait
xchg
jb
jne
scas
loop
out
movsl
popf
mov
ficoml
push
mov
push
insb
and
push
cmp
out
fistps
testb
mov
notl
lds
xchg
adc
insb
imul
cmpsl
lds
pop
pop
ret
mov
in
out
stos
and
mov
subl
sbb
and
mov
xchg
fdiv
imul
jp
push
rorl
push
aam
xchg
scas
loope
mov
enter
xchg
push
push
mov
or
stc
std
sahf
xchg
hlt
in
inc
xchg
xor
or
pop
xor
sub
adc
leave
and
and
cwtl
pop
fldenv
fmulp
and
adc
cs
cli
mov
xor
cmpsl
sbb
inc
lods
mov
shr
sahf
mov
dec
cwtl
xor
and
loopne
add
sbb
adc
jns
in
push
scas
addr16
mov
mov
adc
inc
adcl
inc
mov
andl
daa
test
xchg
mov
lea
sub
jb
and
dec
mov
add
enter
ret
add
sbb
xchg
xor
pop
in
jbe
adc
jle
or
sub
dec
lcall
push
push
mov
xchg
fistpll
pop
add
pushf
pop
xor
aaa
sub
push
mov
rcrb
sarl
fs
aam
shr
cmp
mov
push
andb
call
stc
lret
push
cmpsb
out
push
lods
ss
cmp
mov
xor
jmp
fstp
push
insl
xor
rorb
cld
stos
sbb
xchg
mov
bnd
mov
pop
or
mov
lret
inc
pop
push
adc
and
fildl
cltd
sbb
and
jl
push
xchg
dec
imul
push
mov
in
mov
bound
mov
push
addr16
xchg
xor
add
lcall
sub
dec
out
add
loopne
sbb
cli
adc
mov
mov
dec
mov
sbb
cwtl
outsb
push
dec
imul
xchg
shlb
jl
mov
dec
shrl
push
mov
mov
mov
in
jmp
or
decb
fs
ret
pop
inc
js
jne
nop
or
lret
cmp
xor
cld
jns
mov
inc
inc
arpl
jecxz
lods
sub
hlt
add
sbb
mov
mov
cli
nop
sub
addr16
scas
xlat
xor
not
jmp
mov
pop
or
out
mov
sub
and
pop
sbb
call
std
rcrb
lds
mov
cmp
mov
mov
mov
xor
data16
loop
fisubs
push
sbb
sub
out
cld
adc
xchg
pop
mov
stos
inc
mov
adc
pop
mov
pop
loop
test
pop
bound
mov
test
push
cli
daa
and
lds
mov
jecxz
adc
shlb
inc
movsb
test
mov
push
add
mov
lahf
out
inc
lods
sbb
aaa
jecxz
or
sub
fimuls
xchg
inc
pop
rcrb
xor
xchg
mov
leave
js
xchg
pop
inc
in
inc
arpl
leave
and
and
test
jae
shlb
mov
mov
sbb
mov
inc
in
pop
or
cli
in
movsl
fwait
je
idivl
mov
imul
inc
jge
pop
mov
mov
dec
sbb
mov
cmp
les
add
ror
ret
push
fimull
fwait
push
shl
xchg
stos
add
ds
scas
xchg
pop
insb
imul
flds
cmp
adc
or
mov
mov
out
fwait
mov
push
test
dec
sub
mov
leave
mov
jl
push
faddl
addr16
fstl
iret
outsl
and
pop
pop
rcrb
and
mov
mov
xchg
test
jg
inc
leave
lods
xor
rcll
mov
bound
call
cmc
mov
mov
loop
das
xor
lock
xchg
sti
xchg
cwtl
mov
lahf
nop
add
pop
sbb
mov
add
ds
sub
pushf
cld
push
xchg
dec
out
leave
loop
stc
lcall
or
mov
xor
daa
frstor
loop
addr16
mov
movsb
jns
stos
cmp
gs
mov
cmpsb
sub
jle
xor
sub
adc
xchg
mov
int3
outsb
xor
jmp
sub
push
mov
push
loope
rcll
add
mov
pop
cltd
inc
aam
mov
pop
inc
dec
lcall
sub
daa
call
mov
or
int
sbb
int
es
and
sub
cmp
in
mov
and
dec
leave
inc
inc
rorb
jne
push
lock
rol
mov
stc
inc
imul
jge
test
das
cmp
js
xchg
add
loopne
mov
sbb
xor
xchg
iret
orl
lock
dec
lea
sub
push
xchg
jo
jecxz
sub
sahf
adc
mov
and
je
sbb
mov
enter
pop
pop
inc
test
addr16
xchg
push
jge
movsb
inc
sahf
in
jo
mov
xchg
mov
outsb
cmp
lods
lds
es
les
bswap
add
rorb
inc
imul
adc
push
lds
fstpt
inc
shll
adc
rol
js
insb
ljmp
scas
inc
xor
mov
sbb
add
jno
sbb
push
push
adc
cmp
cmp
adc
or
sub
and
fimull
sti
xchg
xchg
int3
in
push
push
pop
add
shlb
es
jns
mov
inc
shufps
fsub
out
sbb
lret
inc
mov
pop
and
adc
jge
mov
xor
pop
jne
mov
lret
std
ja
sub
fildl
mov
dec
sub
cwtl
out
cmp
data16
loope
xchg
hlt
dec
arpl
cmp
leave
lods
or
stos
icebp
pop
or
out
cs
aaa
repz
add
add
mov
add
jae
movsl
xchg
subl
in
and
add
jae
and
add
in
and
pushf
jecxz
frstor
mov
and
sbbl
mov
shlb
testb
add
imull
xlat
mov
or
imul
and
mov
pop
mov
gs
lods
jecxz
fisttps
hlt
cli
inc
in
xor
fwait
outsl
cwtl
je
cmp
jbe
xor
shll
aas
in
fstl
jecxz
fildl
jnp
gs
cwtl
ficoms
and
add
scas
imul
int3
inc
inc
push
inc
pop
dec
push
and
out
nop
sbb
sbbb
and
sbb
mov
fmulp
jno
or
ret
arpl
loop
loopne
aam
pop
mov
clc
sbb
xchg
inc
cmp
ljmp
or
out
in
sarb
push
rcrl
test
rclb
fadds
xorb
inc
inc
pusha
cmp
jmp
jns
mov
pop
cmp
or
jbe
xchg
cmp
sbb
imul
sarb
mov
stos
setb
dec
mov
pop
jmp
ret
mov
mov
insb
shll
inc
lods
xchg
lcall
in
mov
mov
rcrl
andb
bound
jns
mov
sbb
or
pop
bound
push
push
dec
inc
xor
daa
cmpsb
pusha
arpl
sub
dec
pop
mov
in
repnz
and
lods
jne
dec
xor
lea
xor
fstl
mov
adc
lods
xchg
ret
in
pusha
das
fidivl
lods
push
push
lcall
in
fdivr
rcl
ret
insl
insl
mov
pop
sbb
int
in
stc
lea
clc
push
in
shlb
bound
pop
fistl
mov
cmp
fwait
out
push
sahf
rcll
or
jnp
adc
inc
rol
lods
jmp
out
enter
hlt
imul
call
sar
notl
or
lcall
jbe
clc
dec
push
pop
push
jge
stos
jp
loop
and
aam
xchg
or
in
shlb
mov
inc
and
inc
nop
pushf
mov
mov
xor
lods
arpl
repz
test
enter
sahf
lahf
jmp
xor
ret
xor
test
or
es
jl
jecxz
sub
xor
movsl
aas
xor
push
fs
cltd
mov
sub
cwtl
icebp
inc
scas
mov
data16
inc
stos
and
mov
mov
sbbb
orb
outsb
std
sub
and
mull
cli
dec
push
pop
into
xor
push
in
jl
stos
test
adc
es
and
and
pop
ficoml
inc
js
lods
xchg
pop
xor
pushf
push
sbb
cwtl
hlt
or
xor
lods
mov
cmp
into
mov
les
push
push
mov
push
push
clc
cmpsl
mov
pushf
movsb
pushf
jnp
fildll
addr16
pop
in
cmp
xchg
imul
int3
mov
bound
add
fwait
jnp
bound
xchg
pop
gs
hlt
fdivr
adc
cmp
mov
lods
sbb
rcll
test
scas
adc
inc
push
ss
pop
repnz
cmp
pop
mov
fcomp
sub
adc
flds
cli
jg
jl
leave
push
adc
pop
xchg
mov
pop
pushf
insl
jecxz
cmp
iret
push
mov
stc
cmp
xchg
incl
dec
pop
lahf
sbb
loopne
scas
scas
int
push
jg
sub
fisubrs
aam
mov
sbb
or
jbe
pushf
enter
dec
and
sub
sbb
dec
pop
push
addr16
fsts
repnz
ficompl
mov
adc
add
repz
arpl
mov
lods
sbb
in
ret
std
cltd
ja
mov
sbb
xchg
pop
lea
inc
fisubrs
mov
mov
mov
je
sbb
sbbb
and
cmc
mov
push
mov
mov
scas
inc
mov
inc
mov
jle
jmp
mov
popa
lahf
inc
push
rcll
cmp
push
mov
int
xchg
in
rol
ds
cli
sarb
xchg
popf
xchg
cmp
xor
imul
push
push
lods
scas
inc
jo
fwait
jp
imul
and
cmp
inc
mov
xorb
xor
std
sub
adc
mov
sbb
lcall
jnp
movsl
fisubl
push
mov
jmp
stos
push
push
xchg
jl
sub
cmp
int3
and
xchg
cmp
stos
int3
mov
ss
add
fcomps
mov
mov
imul
dec
cwtl
mov
mov
jmp
or
cmp
aas
aaa
add
repz
nop
and
sub
imulb
ficomps
push
push
daa
mov
push
cmp
insb
inc
leave
jne
dec
bound
adc
add
dec
movl
dec
xchg
cli
aad
xchg
push
jne
mov
adc
lea
inc
xor
push
add
andb
fistl
lcall
lock
sub
stos
pop
sub
repnz
jmp
push
xchg
mov
fs
movsl
mov
enter
in
ja
popf
mov
push
das
mov
mov
jle
jmp
out
pushf
mov
stc
dec
notl
or
dec
roll
and
loop
cmp
or
aam
pusha
dec
xchg
xchg
jo
inc
ds
filds
mov
inc
aad
les
cld
data16
pop
push
mov
loope
dec
cmpsl
stos
stc
dec
int
fwait
pop
cmpsl
pop
out
jge
mov
cmp
mov
push
cmp
adc
push
decl
push
imul
mov
pusha
xor
sub
int
iret
cmpsl
xor
outsb
lcall
dec
jne
pop
adc
lock
int3
sub
cltd
rcrb
cltd
and
sbbl
int3
in
cs
push
sbbb
ljmp
mov
cli
adc
movsb
mov
xor
arpl
fwait
inc
dec
enter
ljmp
cmp
xchg
pop
push
push
scas
add
push
mov
push
dec
xchg
dec
std
or
rcrb
dec
int
lahf
sbb
sub
fisttpl
adcl
cmp
sarb
push
ja
mov
mov
cmp
dec
inc
int3
icebp
call
cwtl
roll
out
loopne
stos
cld
mov
xchg
fxch
and
outsl
mov
icebp
xchg
stc
dec
push
movsb
daa
cmc
mov
jnp
or
sbb
outsl
arpl
jmp
jg
inc
addl
lret
xchg
in
sub
frstor
outsb
in
lods
mov
jmp
stos
outsl
pop
rcrl
mov
cmp
mov
inc
nop
push
mov
ret
jnp
sbb
mov
mov
int
push
cs
sub
popf
push
inc
lcall
jge
xchg
push
jecxz
xor
sbb
insb
dec
pop
iret
lods
xor
and
std
dec
mov
pop
fiaddl
xor
xchg
add
loop
jne
mov
std
cli
sti
repz
mov
lds
adc
mov
mov
jg
sarl
xchg
enter
data16
dec
inc
popa
mov
dec
and
and
jp
inc
xor
sbb
sub
mov
and
push
ret
bound
xlat
fcoml
out
aad
xor
clc
pusha
popf
arpl
jne
mov
and
mov
lods
or
inc
push
jl
cld
push
addr16
jnp
ja
iret
push
jo
adc
xchg
pop
sub
out
mov
cmovbe
sahf
loopne
jno
and
fstpt
push
or
shll
sub
dec
adc
lea
mov
test
cmpsl
ds
and
xchg
gs
sahf
jmp
movsb
inc
push
ja
cmp
cmp
fbld
loope
jns
enter
pop
test
add
imul
cs
lds
shlb
in
into
mov
int3
mov
mov
push
push
test
das
dec
aam
push
push
stc
push
and
jb
loop
imul
xlat
and
pop
sbb
daa
sbb
mov
daa
or
xor
iret
inc
in
pop
iret
push
sbb
std
xchg
adc
cmp
lds
mov
insl
sarl
ss
lea
loope
sbb
imul
imul
dec
inc
addr16
or
cmp
mov
xchg
mov
xchg
iret
mov
and
aam
daa
sarl
adc
mov
fisttpl
pop
and
imul
xor
sbb
push
mov
shlb
repnz
das
jns
sbb
and
jno
mov
mov
push
fiaddl
fcompl
pop
pop
sub
fs
lcall
push
pusha
jbe
and
lods
sub
outsb
pop
add
outsl
xor
mov
adc
outsl
bound
leave
push
push
sbb
enter
mov
mov
add
and
jns
fidivrs
ret
cmpsl
sahf
sbb
aas
cld
pusha
rcrb
jle
ja
xlat
pop
push
bound
loope
jecxz
call
xchg
mov
push
aam
push
add
mov
scas
or
push
jge
jnp
push
loope
pusha
shlb
cmp
lods
fdivrl
mov
and
loope
cmc
mov
lock
in
js
je
inc
mov
push
inc
mov
popf
sti
sbb
mov
mov
jb
adc
push
cld
pop
sub
jecxz
mov
mov
add
add
mov
test
aad
arpl
popa
xchg
jl
test
sub
jmp
mov
add
jb
and
out
outsb
in
push
adc
xchg
adc
outsb
scas
cmp
jns
in
mov
pop
mov
sub
popa
push
repz
sub
mov
lret
mul
fstl
sahf
jge
mov
mov
outsb
pop
xor
insl
mov
stc
shrb
data16
mov
adc
shll
inc
loopne
cmpsl
pushl
sarb
or
inc
pop
fmuls
sbb
data16
es
stos
mov
mov
pop
mov
mov
xchg
ficomps
scas
jnp
or
imul
push
push
lock
sbb
addb
fidivs
movsb
fldcw
nop
jp
xchg
mov
xchg
out
iret
pop
jne
fstps
mov
mov
lret
mov
insl
aam
fs
add
in
lahf
mov
inc
loop
pop
dec
mov
ret
mov
loope
dec
outsl
popa
sbb
mov
sub
mov
or
fwait
or
xor
sub
popa
iret
orb
outsl
stos
xor
imul
ret
daa
test
jl
dec
mov
push
roll
cmp
dec
std
inc
inc
fcomp
sti
or
imul
inc
in
in
cmp
and
jbe
sub
push
and
sahf
dec
shrb
test
pop
push
jne
jns
jmp
ret
pushf
stos
ud2
sub
mov
ja
loop
das
ds
dec
movsl
jae
dec
pop
cmp
mov
cltd
fisttpll
pop
inc
jle
aaa
sbb
mov
test
imull
sbb
push
cmpsb
xor
leave
cs
das
jo
dec
test
inc
and
lcall
addb
mov
jl
add
std
imul
jb
pop
adc
jp
cld
xor
xchg
movsl
ds
xchg
mov
mov
cld
lods
xchg
or
cmp
fstpl
loope
jl
test
outsb
jae
out
mov
inc
in
es
push
test
je
sarl
dec
or
push
pop
jno
je
sti
add
mulb
icebp
jne
lahf
sub
sar
outsb
daa
xchg
add
jae
aam
popf
aas
shrb
and
adc
into
pop
jbe
mov
pop
sbb
out
subl
inc
xchg
jae
es
xor
sbb
sbb
std
cmp
adc
sbbb
stos
lret
dec
mov
mov
imul
inc
pop
xor
out
xchg
cld
hlt
inc
push
mov
lret
pop
pop
lock
jle
pop
int3
sub
mov
cmpl
ffreep
mov
xchg
fs
sub
insb
daa
pushf
inc
add
pop
pop
mov
loope
jp
push
stos
repz
daa
or
push
mov
xorl
cmp
fldcw
aam
getsec
and
cmp
cmp
sub
lcall
dec
adc
mov
shlb
mov
and
lods
mov
add
subb
out
and
in
movsb
inc
pop
mov
aam
sti
test
adc
push
jmp
add
jae
lods
push
out
xchg
dec
shl
in
inc
adc
arpl
mov
popf
fwait
adc
dec
mov
push
sbb
mov
ss
cmpsb
mov
outsb
iret
psubusw
ffreep
loop
mov
jmp
stc
mov
push
inc
mov
test
inc
andb
mov
lea
arpl
icebp
in
sub
das
shlb
jbe
ds
out
subl
in
iret
or
or
test
outsl
js
pop
mov
das
ret
into
xor
mov
sub
fs
sti
test
outsb
xor
inc
cmp
out
packsswb
in
push
mov
in
jne
call
hlt
xchg
in
jl
adc
inc
aad
in
mov
sbb
xor
xchg
mov
mov
xchg
cmc
xchg
cmp
clc
sub
or
lahf
or
aam
jbe
fistl
imul
xchg
mov
sbb
sub
cmc
mov
lret
mov
loopne
mov
mov
fptan
mov
mov
push
and
incl
loope
sbb
fcmovne
inc
enter
inc
cmpsl
add
mov
mov
imul
test
push
gs
aad
jle
mov
xchg
inc
aad
mov
popf
xchg
test
stos
sub
mov
pop
test
add
jecxz
mov
push
add
inc
push
shl
mov
sbb
test
mov
mov
aaa
dec
stc
arpl
push
and
push
in
test
daa
sbb
enter
adc
scas
push
add
jbe
xchg
mov
pop
loop
mov
push
add
mov
jns
push
repz
dec
mov
imul
sbb
fldl
or
std
test
cmpsb
shrl
int
into
rol
rsm
lret
roll
das
sbb
je
mov
call
repz
lcall
xor
jns
mov
pushfw
sub
push
gs
movsb
mov
dec
inc
shll
dec
loop
sti
aad
dec
lret
mov
jno
xor
divl
push
pop
cli
pop
subl
mov
adc
ljmp
jae
pushf
cmp
test
inc
aas
lods
push
fsubr
shrb
aam
push
es
pop
test
mov
pop
mov
push
pop
clc
pop
adc
lock
add
fisubl
jmp
mov
fucomp
cmp
mov
cmp
pop
sub
dec
nop
xchg
rorl
out
pop
or
fsubrl
xchg
xchg
jo
rcrl
xor
out
int
jne
scas
jle
inc
cmp
test
pop
mov
push
std
lcall
mov
aas
loop
cmpsb
inc
dec
xchg
mov
enter
fisubrl
adc
xchg
sbb
mov
pop
inc
fistpll
je
add
fmull
inc
push
xchg
inc
popf
mov
fdivrl
pop
ljmp
or
test
inc
mov
test
cmc
xchg
jmp
sbb
or
jb
hlt
or
pop
jno
aad
mov
and
div
std
sbb
cltd
mov
cmp
insl
dec
sbb
addr16
pushw
push
jge
or
cs
in
and
jo
in
mov
in
push
loop
lds
lock
in
inc
outsb
roll
popa
or
or
inc
mov
sahf
rolb
les
into
aaa
mov
shll
into
or
xchg
cwtl
cwtl
dec
sti
sbb
dec
lahf
lahf
adc
scas
pop
out
ljmp
cwtl
and
xchg
in
stos
test
mov
and
out
cld
jmp
jo
sbb
adc
pusha
push
add
lcall
sbb
icebp
ds
sbb
test
cmp
jns
xlat
xor
and
shrb
xlat
mov
fidivrs
mov
cmovne
push
fwait
add
jge
lods
bswap
dec
cmc
push
push
mov
in
mov
jnp
xor
subl
in
xchg
push
sbb
cmp
xchg
sbb
cmc
pop
xchg
pop
pop
jno
cld
nop
sub
jl
push
imul
fwait
nop
adc
adc
pop
jns
dec
inc
adc
data16
xchg
dec
pop
shll
fistpll
add
mov
adc
pop
adc
pushf
xor
pop
adc
jae
jae
mov
xor
pop
aaa
cmp
sbb
mov
xorb
iret
inc
mov
pusha
ret
aad
xlat
cs
inc
cmp
adc
add
jnp
pop
mov
out
ficoms
mov
aas
das
mov
or
mov
mov
lret
jb
cmp
lock
lds
fbstp
cli
cmc
arpl
popa
mov
dec
mov
push
xor
cmp
xor
jae
sub
sub
ljmp
loope
rolb
ds
sbb
and
mov
aaa
add
loope
push
jae
clc
shll
mov
insl
pushf
jp
xor
or
cli
and
lret
mov
cmp
xor
push
jl
fcomi
cli
add
and
xchg
movsl
out
adc
push
pop
popa
sub
outsl
jbe
cld
adc
or
ret
add
jecxz
imul
adc
cmp
mov
push
xor
mov
in
fisttps
cmp
ret
xchg
mov
in
repz
outsb
pop
repnz
pushf
mov
add
lahf
xor
shl
cmpsb
movsb
jno
and
or
cmp
cltd
sub
inc
or
mov
pop
mov
inc
pop
inc
pusha
dec
jno
mov
xor
loop
fisttps
fimuls
popa
pop
dec
mov
sub
push
pop
outsl
xor
and
mov
jb
jp
mov
dec
and
in
filds
test
iret
aas
dec
pop
int
push
adc
mov
mov
loopne
insl
rcrb
xchg
pop
mov
out
xor
push
in
fcmovnb
add
adc
mov
les
push
jnp
mov
jmp
outsb
xchg
imull
add
insl
xchg
jno
loope
pop
fcomps
jne
sub
inc
test
inc
enter
add
xchg
mov
xor
pop
shrb
fidivrs
call
ret
daa
lret
movsb
ljmp
sbb
jb
push
xorl
jne
adc
sbb
sub
mov
test
lods
sub
insl
pop
in
and
push
shll
mov
lods
cli
movsl
xchg
loope
xchg
dec
fstl
push
jge
or
xchg
mov
movl
clc
movsb
jmp
cmp
aad
dec
and
pop
mov
nop
add
pop
aaa
xor
xor
lcall
lret
push
ds
dec
in
and
inc
clc
in
movsl
ret
inc
ljmp
imul
add
add
cltd
inc
mov
ret
arpl
mov
nop
push
loop
and
flds
lcall
aad
std
scas
dec
xor
xchg
loop
fcomps
push
cli
push
pusha
movsb
jns
adc
shrb
sub
loope
sahf
add
nop
iret
xor
in
rclb
sub
pop
into
into
hlt
cmc
repz
rcl
mov
inc
jnp
es
xchg
data16
divl
or
and
scas
repz
pop
je
jae
or
jae
xchg
fwait
mov
lock
xor
nop
stos
loop
in
test
mov
mov
nopl
add
xchg
dec
aad
mov
insl
pushw
mov
lahf
or
inc
aad
out
lret
mov
sub
movsb
repnz
inc
jecxz
jp
movsl
adc
aaa
mov
pop
loopne
xor
mov
push
sub
push
dec
lock
ret
popf
adcb
pop
hlt
sahf
jb
shlb
rorl
xchg
jne
stc
push
cmpsb
std
test
sub
in
xchg
xchg
push
in
push
push
jl
sub
jg
ror
jle
mov
xor
mov
xorps
pop
pusha
lret
push
pop
push
ds
mov
jp
jns
out
mov
xlat
into
lret
outsl
xor
xchg
push
icebp
in
dec
pop
jmp
and
sbb
add
outsb
xchg
jns
sub
mov
add
movsl
outsb
mov
cmpsb
add
nop
xchg
sub
sbb
jecxz
mov
cmp
push
jmp
add
add
xchg
xor
mov
sbb
jbe
fs
xchg
and
xor
jno
sub
mov
sbb
pop
xor
repnz
adc
lock
iret
cld
push
sbb
fdivrs
pop
ret
mov
addl
jbe
scas
clc
sbb
pusha
outsl
add
push
sub
or
rclb
shrl
outsl
je
pop
ret
push
xlat
pop
sub
aad
jmp
arpl
movsb
xor
and
loopne
add
inc
shl
sbb
sti
fidivs
lea
mov
sbb
jnp
js
or
push
cmpsl
das
test
mov
xchg
sub
cs
in
jp
or
imulb
dec
adc
stc
mov
add
inc
or
xor
or
or
and
popf
bound
pop
stos
movsb
das
test
ds
ret
out
and
lret
add
mov
and
fmull
out
movsb
jbe
mov
insl
push
dec
mov
xchg
arpl
sub
or
and
push
outsl
xchg
clc
loope
stc
ja
movsl
adc
out
sbb
les
mov
popa
div
sbb
dec
sbb
loope
add
dec
pop
or
cmp
adc
js
js
mov
ret
fadd
fidivs
sbb
jbe
out
cmp
lods
xor
movsl
pushf
aad
jecxz
fistpll
arpl
or
inc
dec
orl
test
rorl
add
and
std
arpl
dec
mov
test
mov
insl
fldenv
adc
jbe
test
add
pop
adc
cltd
mull
imul
add
sub
xor
jecxz
fldl
xor
in
add
subb
jg
mov
ja
mov
loopne
in
mov
les
shlb
dec
lret
sub
outsl
mov
lret
ficompl
daa
lret
lods
movsl
lods
call
jle
ss
or
aas
jp
sbb
shlb
in
ss
fisubl
cmpsl
mov
ja
sub
add
testl
fimuls
out
out
jg
pop
ret
xchg
sub
jg
fadds
pop
jge
mov
mov
jbe
decl
jb
push
add
into
idiv
js
dec
nop
jno
test
and
mov
sub
std
xor
cwtl
test
mov
inc
inc
shll
les
jmp
pop
mov
cmp
aam
jbe
mov
fsubrl
push
adc
xor
lds
divl
das
cltd
out
add
ret
shrb
jle
cmpsl
pop
loop
pop
add
outsb
pop
daa
sbb
and
rorb
mov
mov
loope
dec
mov
cmpsl
sub
pop
lods
pushf
lcall
sub
and
sbb
fstl
lock
in
push
xchg
fwait
and
or
data16
std
sub
pop
cmp
jns
out
into
lahf
out
sbb
jl
and
jg
mov
or
testb
test
lods
pop
add
dec
nop
jmp
fistps
pop
repz
movsl
lock
repnz
popf
adc
or
mov
fstps
out
mov
loopne
ret
xchg
je
shll
lods
out
flds
add
mov
int3
aad
mov
or
fdivp
mov
les
hlt
push
add
jae
ffree
out
sahf
jge
xor
aam
sbb
mov
gs
mov
fadd
cld
out
mov
mov
lods
es
hlt
sub
cli
push
in
les
pop
adc
idivl
adc
popf
adc
out
ret
popa
pop
bound
add
xchg
mov
pop
rclb
sub
outsl
les
out
leave
adc
fdivrp
cmpsl
push
push
sbb
out
xchg
dec
cmp
enter
ficoms
and
dec
lods
sub
mov
out
jns
lods
gs
addr16
push
lock
push
stos
xor
jmp
push
dec
sub
jle
ja
pop
aam
inc
jg
xchg
adc
mov
bound
xchg
popf
inc
gs
cmpsl
mov
sahf
jge
lcall
mov
jnp
adc
sbb
adc
jb
popa
sbb
lahf
push
jno
into
pusha
cmp
inc
pop
pusha
in
sub
inc
xchg
jmp
jno
mov
dec
and
test
imul
and
jae
jbe
jbe
test
mov
and
inc
mov
cwtl
sbb
jge
stos
pop
hlt
rorb
sub
xchg
mov
mov
dec
push
icebp
mov
pop
shll
rcl
stc
jnp
repnz
cmp
jb
adc
mov
sub
test
mov
pop
test
js
hlt
hlt
xchg
inc
sbb
xchg
sub
pop
sbb
mov
jl
mov
xchg
lock
out
add
jae
or
mov
imul
dec
lock
bound
rcrb
xor
fwait
xorl
push
js
out
popa
aam
mov
add
and
lahf
imul
push
movsl
inc
leave
stos
std
dec
push
into
andl
sbb
daa
test
sarl
sbb
xchg
stos
add
add
aam
cmpb
ret
dec
icebp
and
or
decl
xchg
dec
aad
cmpsb
pusha
mov
enter
hlt
xor
mov
jmp
sarb
into
mov
cmp
les
scas
pusha
push
and
jae
or
push
adcb
jp
or
dec
stos
xchg
movsl
out
cwtl
xchg
dec
lods
mov
fcoms
cmpl
pushf
push
sbb
test
rclb
test
out
adc
cltd
ja
roll
push
sbb
pop
sub
mov
leave
rclb
iret
hlt
fadds
push
notb
add
lret
dec
mov
adc
xlat
data16
cmc
out
and
inc
add
dec
cwtl
outsl
pop
cmp
es
and
sbb
jp
jne
ljmp
ret
fcomps
je
int
mov
mov
inc
test
int3
jle
xchg
lret
mov
push
jnp
or
adc
add
scas
rclb
dec
je
xchg
aas
jb
or
outsl
mov
inc
movsb
add
test
inc
jge
mov
dec
inc
pop
and
sbb
pushf
push
test
mov
cmp
int3
pop
lahf
hlt
lcall
adc
sub
adc
fs
mov
cmp
sbb
jmp
dec
sbb
inc
cli
dec
xor
cmpsl
jl
pop
dec
sbb
bound
mov
bound
jecxz
cld
mov
inc
loop
fcomps
adc
dec
sbb
jl
push
xor
jne
jnp
bound
sbb
pop
in
ficoml
outsb
cmpb
iret
adc
add
mov
ret
jno
sub
sbb
pop
decl
sub
mov
ror
je
js
repnz
mov
mov
das
insl
cmp
fsubr
test
mov
mov
out
xchg
movsl
not
sti
int3
aas
or
adc
aam
dec
or
inc
cli
inc
add
xchg
xor
jae
and
mov
xor
out
lret
sbb
xor
dec
push
push
movsl
mov
xchg
inc
fptan
sbb
xchg
inc
not
jecxz
popfw
and
aam
jo
add
arpl
sbb
out
sbb
xchg
inc
add
sbb
and
push
es
repz
xchg
rolb
adc
movsb
push
ljmp
nop
aad
jecxz
fdivrl
loop
scas
sahf
inc
addl
lods
out
push
add
je
mov
mov
add
jns,pt
push
xchg
out
out
fwait
sti
ja
dec
repnz
fmul
dec
xchg
add
add
cli
push
mov
gs
lods
dec
subb
pop
je
ficomps
push
and
sub
jns
dec
mov
popf
mov
stc
push
sbb
test
pop
dec
lahf
adc
xchg
push
repz
inc
out
aaa
aam
push
mov
or
mov
xlat
jae
or
sub
addl
and
or
dec
mov
hlt
decl
push
cwtl
or
mov
daa
add
ja
xor
mov
neg
leave
out
sub
out
cld
pop
cli
jmp
repnz
dec
jg
add
dec
std
jmp
pop
shlb
and
dec
ret
out
and
push
mov
inc
pop
xchg
inc
sbbb
mov
aaa
mov
sti
push
les
sub
and
sbb
aad
or
jecxz
lods
sub
dec
data16
push
push
mov
sbb
nop
cs
sbb
mov
sbb
loope
jb
icebp
mov
pop
push
push
stos
mov
out
outsb
mov
and
and
pushf
fcomps
ret
jmp
bound
les
push
pop
push
repnz
stos
cmpps
inc
or
movsl
add
jge
push
fwait
insl
sbb
out
pop
dec
or
sti
jne
push
xchg
leave
jg
mov
filds
mov
xor
lock
mov
and
sub
int3
sub
adc
ja
jb
jnp
pushfw
daa
sbbb
xchg
push
xchg
fs
add
xor
dec
inc
push
mov
arpl
ficoml
xor
jge
mov
lar
jmp
out
dec
add
inc
cli
adc
jno
ds
inc
ret
sub
scas
les
test
add
push
pop
dec
aas
js
repnz
push
scas
push
push
lds
arpl
mov
test
jp
subl
xor
add
cld
and
into
pop
fisubl
mull
jp
ficompl
out
addr16
hlt
adc
xlat
sub
jne
lock
hlt
inc
imul
lock
lcall
mov
and
xchg
rcll
mov
mov
insl
lock
push
xor
xchg
fcomps
jp
ja
jecxz
in
fnop
fsubrl
xchg
nop
stc
scas
imul
cli
in
pop
std
insb
enter
arpl
add
cmp
shll
and
leave
push
cmc
add
out
popa
dec
dec
adc
cli
ret
shrl
mov
out
jp
ud1
scas
inc
push
mov
xchg
jg
cmp
xchg
sti
bound
xchg
or
inc
and
push
call
sub
pop
add
jecxz
rclb
int3
inc
fidivs
fisubrl
cmp
call
push
add
outsl
into
pop
push
mov
mov
or
out
lahf
shl
cmpsb
jp
out
jecxz
sbb
cmp
adcl
push
xchg
add
arpl
fwait
pop
lcall
xor
add
aam
stos
data16
scas
int
stos
push
out
jl
or
or
test
or
cld
add
push
dec
inc
mov
shrb
cwtl
je
sti
sbb
das
push
sbb
add
adc
pop
call
and
repz
or
mov
mov
negb
scas
sbb
inc
jge
mov
std
jne
enter
cs
movsl
fisubl
adc
enter
push
pushf
jle
rolb
stc
sbb
and
jae
ffreep
inc
lds
ja
shrb
dec
lcall
mov
insb
mov
int
ss
dec
fwait
arpl
stos
jns
outsl
pop
jnp
imul
pop
mov
cltd
je
in
lahf
call
ret
or
pushf
mov
stos
xor
hlt
mov
test
sub
ficomps
push
les
jns
add
loopne
sub
lock
pushf
ljmp
push
int3
pshufw
or
mov
div
xchg
mov
fcompp
lods
cmpb
repz
jp
sub
sbb
aas
out
cmpsb
addr16
mul
push
push
aaa
cmp
insl
xor
dec
mov
mov
jg
es
mov
or
in
mov
xchg
push
int3
and
mov
pop
fldcw
mov
xor
pop
dec
das
out
push
push
sub
insb
into
icebp
and
pop
sbbb
div
inc
pop
ja
hlt
push
subb
rclb
lea
jns
dec
scas
out
mov
lods
sub
sbb
icebp
aad
cmpl
cld
mov
mov
mov
fldcw
add
aam
inc
test
jmp
cmc
loope
or
pop
sub
push
sub
push
jge
dec
std
inc
out
aam
cmpsw
push
push
jae
inc
xor
pop
sbb
push
les
lret
lock
push
lods
push
test
pop
stc
fstl
loope
call
sbb
xsave
sbb
mov
movsl
lds
leave
jno
cmpsl
mov
fidivrs
cli
sub
push
je
adc
mov
mov
imul
and
int
leave
xchg
enter
xor
add
mov
in
add
fisttpll
test
pop
cmp
dec
gs
add
adc
and
outsb
xchg
dec
push
in
push
fstpt
xchg
frstor
movsb
movb
fcompl
inc
fmulp
je
lds
cmp
jecxz
cmp
adc
xchg
push
ljmp
movsl
call
or
popf
sbb
sbb
ror
or
xor
adc
push
imul
out
imul
sbb
jecxz
inc
push
stos
je
or
das
push
lcall
sbb
xlat
das
cld
xchg
xchg
mov
xchg
out
stos
inc
pop
mov
mov
xor
imul
lock
lods
mov
lcall
dec
sar
andb
adc
mov
ds
in
push
stc
es
inc
pop
js
jb
mov
aaa
sbb
out
pop
pop
mov
jno
xor
jbe
leave
pop
inc
call
sub
fistpl
fs
sahf
xchg
jne
xor
mov
leave
mov
mov
mov
stc
add
mov
ror
leave
addl
ret
push
and
jo
sti
jne
inc
fstpl
xchg
and
imul
mov
xchg
xchg
and
jge
imul
test
mov
shll
push
call
push
mov
je
notl
fsubs
cwtl
fmuls
fiaddl
out
pop
bound
movsb
push
fiaddl
pop
or
lods
sbb
rcrb
test
xchg
and
mov
push
nop
or
jmp
movl
loope
test
loop
push
mov
ret
jno
cmp
daa
or
daa
imul
inc
cwtl
rcrl
cmc
xor
lcall
das
arpl
inc
les
adc
daa
fwait
sub
lods
sub
subb
into
or
xor
clc
idivb
push
xlat
popf
mov
je
lret
adc
sbb
add
jecxz
dec
sbb
movsb
stos
push
xchg
fmuls
sahf
fucom
lea
jmp
iret
ret
mov
push
dec
cltd
and
dec
test
lret
es
cmp
sahf
mov
jg
adc
jne
outsb
testl
sbb
or
fisubrs
arpl
push
mov
inc
mov
xor
test
xor
xchg
fistps
fnstsw
insb
sub
cmp
adc
and
sarb
jnp
push
sub
rorb
getsec
lahf
fdiv
testb
cmp
and
mov
push
and
je
jno
movsl
out
jbe
cltd
mov
lret
or
test
inc
sub
add
ja
jae
add
inc
mov
inc
repnz
fs
testb
cwtl
outsb
pop
sbb
imulb
jl
push
and
lret
popa
pop
dec
pop
pop
push
jp
outsl
cmp
add
int3
or
adc
ret
xor
sub
aad
lea
fstp
cmp
cli
push
or
jno
or
addr16
scas
dec
mov
inc
je
cltd
mov
xchg
jnp
in
lds
xor
add
xchg
ret
xorb
in
lds
imul
xchg
push
ljmp
bound
popa
inc
shll
inc
arpl
and
sbb
int3
popa
enterw
outsb
mov
out
push
movsb
cmpl
mov
aad
movsb
sub
mov
or
add
imul
pop
push
xchg
jo
add
pusha
sti
inc
jb
cs
pop
call
and
lods
es
loop
pop
jp
or
insl
das
lcall
inc
popf
cmp
cmp
xchg
mov
mov
shrl
fsubrp
lods
mov
add
sbb
push
sbb
push
push
cmpsb
xchg
push
jge
xor
inc
cltd
push
rcll
jbe
gs
jns
loop
std
jge
mov
pop
mov
sarb
push
and
ja
ficompl
aad
gs
hlt
dec
jo
dec
dec
push
sbb
or
data16
out
sub
cwtl
push
pop
push
dec
xchg
aas
aad
iret
icebp
add
xchg
testb
data16
dec
out
int3
pop
pop
sbb
into
cmp
rolb
xor
lahf
loop
inc
sub
inc
xor
ljmp
js
dec
mov
cltd
cwtl
adc
movsb
pop
xchg
sbb
scas
frstor
push
popf
mov
loope
mull
cmp
or
ds
arpl
cmpsb
sub
jbe
ss
xor
in
mov
xor
pusha
iret
jno
repz
test
enter
push
arpl
jmp
in
push
mov
scas
fildll
dec
in
jle
pop
lods
lock
or
outsb
inc
shlb
fndisi(8087
rol
xchg
dec
aas
clc
inc
xor
cmp
and
stc
push
push
arpl
or
mov
ret
jo
test
mov
dec
add
mov
mov
ds
lcall
jp
or
out
mov
sbbb
fsts
mov
je
pop
push
stos
es
sti
test
inc
adc
cmp
lock
or
lods
fists
mov
jnp
mov
rorl
das
xchg
test
cmc
sub
in
jle
pop
cmpsb
xchg
xlat
repnz
pop
jecxz
jo
scas
dec
data16
aad
mov
inc
fwait
pop
or
add
mov
mov
fnstenv
enter
out
lahf
jb
fadds
mov
lods
push
in
stc
mov
and
jns
mov
sub
dec
mov
ret
sub
cwtl
ret
push
stos
pop
test
movsb
addps
gs
std
add
adc
jb
adc
xor
inc
inc
push
popa
popf
test
fisttps
sbb
xor
mov
pushf
xor
ds
push
and
add
xor
adc
rcrl
lea
das
push
iret
mov
mov
js
fcomi
stc
stc
or
xchg
jge
inc
mov
cld
aam
mov
ss
mov
stc
jns
fs
push
out
jno
adc
stc
add
jae
dec
mov
xchg
cmp
int
imul
int
andl
aas
ds
stc
loope
popa
dec
pop
movsb
cltd
sarb
jae
inc
sarl
and
and
loop
call
jb
or
sbb
iret
xor
pop
sbb
mov
xchg
outsb
xor
nop
dec
and
sub
mov
jae
out
iret
gs
jne
negl
shr
outsb
jo,pt
xchg
jl
mov
mov
lods
jl
out
aas
scas
lret
cmp
push
cmp
push
cmp
xchg
cwtl
loope
pop
xchg
test
mov
xchg
sbb
xchg
cmp
cmp
ret
fdivl
or
movsl
pop
push
repz
call
nop
in
cmc
add
rorb
jnp
test
mov
mov
pop
cmp
sbb
or
mov
sub
adc
mov
fldt
andb
loope
inc
mov
and
arpl
std
mov
or
lret
sbb
addr16
ffreep
sti
pop
lret
xor
push
fadds
sahf
xor
out
cs
sub
inc
sbb
mov
rol
les
inc
popa
add
mov
sbbb
shll
mov
add
dec
into
pop
cld
or
repz
test
stos
sub
adc
xchg
mov
cmp
stos
loop
test
int3
ret
int
push
shrb
out
pop
add
pop
xchg
addl
nop
je
enter
sub
test
xor
and
mov
lret
stos
add
inc
pop
data16
mov
sti
rorb
das
add
lods
es
in
or
sbb
xchg
sbb
test
scas
shlb
add
add
repz
mov
pushf
cs
jge
imul
in
cmpsb
cmpsb
fisubrs
cmpsb
loope,pn
test
xchg
mulb
xchg
bound
inc
sub
fidivrs
mov
dec
xor
sbb
xchg
mov
stos
mov
mov
jge
xchg
cmp
pop
sbb
sub
xchg
sbb
xchg
mov
jno
ss
push
mov
inc
and
mov
stos
adc
jmp
or
mov
mov
inc
shll
or
push
jo
adc
repnz
repnz
ljmp
push
pop
insl
add
mov
or
push
addr16
xor
pusha
mov
dec
hlt
jnp
adc
mov
sbb
xor
jmp
rorb
jnp
jnp
lods
js
adc
fwait
xor
jmp
mov
adc
mov
mov
pop
imul
sub
jns
push
jecxz
sbb
cmp
inc
ret
xchg
leave
xchg
sti
inc
imul
sub
cltd
cld
and
mov
jp
sub
jae
jle
or
dec
mov
pop
adc
lds
test
jmp
pop
sbb
cmc
jecxz
data16
sbb
fcomp
into
cmp
push
push
out
sahf
fsubl
test
scas
dec
jne
aad
addl
sbb
jnp
das
push
idivl
inc
xor
iret
pop
pop
push
lods
mov
imul
pop
pavgw
jle
cmp
mov
and
mov
bound
cmp
lahf
pushf
add
jns
mov
int3
ljmp
sti
sbb
dec
fwait
imul
mov
test
je
jnp
inc
inc
dec
ds
and
xchg
pop
fnstsw
push
pop
mov
adc
add
addl
push
adc
xor
cmp
inc
fsubrp
mov
and
sub
sbb
inc
mov
in
inc
cmp
rcl
mov
mov
jmp
and
in
xor
adc
pop
faddp
adc
das
pop
js
sub
pop
cmpsl
xor
pop
cmc
add
sbb
incl
mov
and
jbe
in
xor
nop
pop
ficomps
in
outsb
loope
add
push
ffreep
jmp
cmp
into
test
or
sub
cmp
es
imul
adc
lds
and
out
test
mov
fdivr
mov
lret
pusha
out
sbb
in
addb
sub
mov
mov
ds
sbb
jecxz
popf
pop
xchg
int3
xchg
nop
xchg
jl
aas
pop
dec
outsb
sub
sar
sbbl
adc
pop
popa
repz
xchg
icebp
cwtl
repnz
sahf
shlb
inc
popa
push
add
inc
das
mov
test
pusha
fidivrl
xchg
nop
xchg
xor
outsb
cmp
mov
xchg
cmp
mov
push
push
cmpsl
or
and
imul
es
sub
mov
mov
addr16
cld
enter
adcb
stos
pop
dec
mov
pop
or
leave
test
subb
inc
in
pop
dec
test
outsl
sbb
rcrb
inc
mov
cmpb
jns
mov
mov
lds
into
ret
mov
scas
cwtl
sub
roll
mov
adc
jnp
and
add
and
add
repnz
sti
jge
pop
mov
xorl
mov
xchg
cmp
aam
jl
fildl
lock
movsb
and
cmpsb
mov
jns
add
aad
sbb
cmp
pop
test
stc
movsl
push
or
std
in
add
xchg
adc
mov
incl
cmc
jnp
xor
jne
hlt
jb
pop
xchg
sbb
cwtl
in
xchg
pop
stos
adcl
rep
dec
popf
test
add
cmp
mov
rdpmc
xchg
xchg
nop
or
add
push
cmp
ret
xchg
mov
mov
faddl
or
call
sarl
pop
pop
jp
lret
scas
pop
nop
pop
dec
clc
dec
ss
cwtl
cmp
xchg
push
loopne
inc
mov
jb
mov
fcompl
test
adc
jmp
sub
mov
sub
cs
out
add
mov
shll
push
and
in
xchg
adc
lods
dec
fstpl
fs
in
xchg
add
scas
call
mov
scas
or
outsl
ljmp
pop
shrl
push
mov
rcrb
incl
aas
or
int
xchg
xor
add
leave
inc
jb
push
mov
mov
add
jo
xor
pop
push
mov
push
cmp
repz
sbbb
jo
ss
jmp
aam
mov
xlat
outsb
jp
nop
xor
aas
das
ja
nop
repz
fwait
gs
mov
out
mov
pop
into
mov
jns
enter
negl
xor
pop
fwait
data16
and
rolb
pop
pop
pop
sub
sub
jecxz
dec
negb
mov
xchg
mov
push
notl
int
imul
ds
ss
or
pop
and
std
jne
iret
or
xor
add
pop
sub
jo
fwait
jno
xchg
jo
dec
push
int3
sub
push
jmp
pop
sarb
jno
cwtl
inc
mov
mov
addr16
jmp
imul
mov
movsb
mov
push
jg
cmp
adc
shl
pop
pushaw
fwait
insl
or
mov
test
aam
push
jmp
cmp
push
nop
push
xchg
out
roll
xchg
aaa
in
out
mov
stos
fcmovbe
lods
nop
push
mov
cmp
data16
repnz
xor
mov
mov
push
lahf
xor
mov
stos
shlb
shll
pop
jno
cmovb
cmp
inc
ja
adc
push
mov
xor
pop
or
decl
jmp
mov
out
jg
xchg
movsb
add
leave
pop
mov
sub
inc
clc
daa
sub
jge
in
mov
movb
or
popf
mov
arpl
mov
jnp
cmc
pop
mov
cmp
and
push
jbe
test
mov
idivl
and
pop
ret
mov
loop
cmp
sbb
iret
nop
mov
jle
xor
mov
lds
dec
push
arpl
mov
xchg
jle
popa
xor
jge
out
int3
es
dec
lods
scas
add
stc
jp
out
mov
cltd
dec
jmp
mov
test
inc
scas
sub
mov
pop
fsts
push
das
data16
stos
inc
stc
out
mov
xor
jge
loopne
jbe
loope
insl
aaa
ret
mov
out
xor
inc
push
clc
fisttps
jnp
jns
cltd
push
arpl
in
xchg
mov
jae
out
dec
pop
cmpsl
mov
aas
movsw
push
cmp
push
and
cmp
fwait
sahf
mov
sub
into
jae
popf
inc
cmc
mov
lods
add
sbb
dec
lods
out
pop
imul
mov
shll
pop
add
aaa
aas
cmpsl
in
mov
data16
jmp
das
push
scas
pop
repz
imul
lods
imul
cwtl
movsb
mov
in
insb
sub
mov
push
or
mov
in
and
inc
nop
jmp
fldl
sbb
and
and
nop
movsb
scas
xchg
mov
outsl
adc
iret
nop
and
adc
leave
mov
shrb
mov
enter
sbb
push
pop
or
ljmp
loope
mov
lret
cld
sbb
icebp
lret
fadd
push
imul
sbbl
mov
sub
push
enter
xchg
jnp
or
dec
sbb
repnz
mov
add
clc
jecxz
dec
iret
xor
cmp
pop
adc
fsubrl
mov
dec
pop
in
xchg
jge
or
es
sti
and
sbb
jle
and
jp
test
adc
mov
js
movsb
jmp
xlat
pop
pop
in
not
ljmp
jns
inc
out
jl
adc
xchg
aaa
dec
movsb
mov
jb
or
push
sub
pop
cld
fildll
sbb
add
pop
mov
pop
stc
add
jae
fiadds
inc
xchg
or
cs
xchg
cmpb
in
in
scas
jns
mov
cmp
in
cmp
xchg
out
jb
lods
inc
out
xchg
xchg
loop
incb
mov
inc
push
int3
addr16
xchg
xchg
inc
insb
outsb
push
push
adc
dec
adc
in
adc
ret
xchg
sub
lahf
enter
sbb
pop
push
out
mov
std
sub
sahf
dec
xor
mov
dec
aaa
jns
loopne
lock
inc
mov
or
mov
and
adc
dec
pop
pushf
sub
cmp
std
leave
add
stos
pop
adc
lods
add
xor
push
cmpsb
stos
sub
lods
adc
jp
and
mov
jno
push
cmp
test
rcrl
mov
pop
lea
dec
xor
stos
in
jnp
mov
sahf
fildl
mov
jl
hlt
les
test
loopne
sbb
dec
dec
aad
add
push
push
cmpb
mov
bnd
or
push
pusha
pushw
push
hlt
mov
inc
add
dec
pop
xchg
mov
mov
cli
inc
vpshufhw
out
js
int3
mov
push
mov
lea
xor
or
sbb
mov
add
pop
mov
in
aam
in
cmp
xchg
mov
cwtl
rolb
cmp
or
in
dec
sti
ds
daa
mov
mov
mov
pop
adc
shl
add
fs
in
andb
cmp
cmc
mov
xorl
sarl
fldenv
mov
inc
cmpsl
or
adc
sub
xor
dec
insl
pop
add
jl
mov
sub
lret
dec
filds
mov
fwait
and
mov
push
out
mov
ret
mov
and
rcrb
and
movsl
sub
jge
mov
dec
out
lods
hlt
and
ljmp
arpl
out
outsl
lods
sbb
sbb
mov
mov
fsts
adc
pop
cmp
scas
mov
shlb
imul
ds
ljmp
repnz
filds
out
out
cmc
cmp
xchg
mov
xchg
pop
sub
push
mov
cmp
int
call
inc
ficomps
cmp
inc
push
mov
and
jge
arpl
dec
shl
test
cmp
cmc
test
js
mov
inc
lcall
stc
scas
cmp
stos
leave
out
shrl
push
xor
cmp
shrb
push
ret
dec
jno
or
and
mov
pushf
cmp
jae,pt
mov
xchg
into
fistl
data16
loope
inc
mov
rclb
inc
dec
xchg
jl
inc
mov
pop
push
mov
lret
pushl
out
cltd
xor
adc
je
push
sub
adc
sub
lds
push
pop
ret
insl
jmp
push
mov
fwait
sub
push
mov
push
imul
aam
lret
mov
imul
inc
push
and
fcomps
in
sub
dec
aas
and
cmpb
push
imul
adc
sarl
fldenv
incl
push
or
and
jae
test
in
xor
rcrl
pop
bnd
mov
in
inc
cwtl
movsb
movsl
jl
sub
push
mov
push
mov
pop
pop
je
lock
xor
mov
lods
push
movsb
fwait
or
test
and
jb
int3
jmp
out
cmc
pop
mov
and
adc
lret
fistps
pop
or
adc
incb
fmul
push
mov
or
push
inc
insb
imul
int
mov
jl
xchg
mov
lret
sti
and
push
inc
cmp
sub
add
pop
jo
lds
mov
data16
mov
lret
pop
jae
imul
stos
pusha
inc
xor
outsb
add
mov
cmp
rclb
inc
mov
into
xor
pop
lods
fistps
and
lret
mov
data16
mov
aas
mulb
nop
mov
or
add
std
movsb
pop
xor
in
jne
xor
inc
add
jge
sub
cli
push
mov
test
pop
sahf
add
inc
fnstenv
add
inc
inc
push
jmp
cli
lock
into
ds
sbb
icebp
mov
arpl
addr16
or
faddl
pop
fildll
and
adc
inc
mov
add
adc
pop
shl
in
icebp
mov
lret
add
push
and
adc
in
retw
inc
orl
nop
insl
outsl
xor
repnz
mov
inc
mov
paddb
and
push
enter
cld
fs
aaa
stos
dec
cmp
in
mov
jbe
inc
lock
sti
orb
rcrl
ret
fsubrp
incb
scas
pop
mov
lret
lock
mov
popf
clc
sub
shr
add
into
mov
push
inc
and
jns
push
adc
movsb
pslld
fsincos
jno
imul
pop
out
iret
or
mov
xor
sbb
insl
and
mov
jb
cmpb
xchg
movsl
pop
iret
xor
inc
xchg
stc
inc
or
test
or
or
cmp
and
sahf
adc
cmp
hlt
test
fwait
push
push
ret
dec
or
push
add
lods
xchg
or
loop
mov
out
and
cld
mov
in
inc
adc
sbb
xor
inc
push
xor
sti
xchg
and
imul
shll
sti
sbb
in
jb
mov
xor
cwtl
jo
or
sbb
and
mov
mov
dec
push
dec
clc
jmp
push
in
fdivp
or
aaa
add
mov
addr16
aaa
ljmp
inc
sti
adc
cmpsl
popa
insl
ficompl
loopne
dec
cmp
outsb
and
ret
dec
stos
fcmovnbe
jns
testl
mov
jle
mov
adc
adc
gs
mov
xchg
lods
std
subb
dec
movsb
and
rcll
fnstcw
adc
jne
jge
ds
sbb
mov
js
inc
test
mov
rorb
mov
adc
subl
les
and
aam
sub
mov
outsl
rcrb
and
xlat
call
insl
inc
lret
xchg
fsubrl
xchg
dec
inc
and
inc
repnz
roll
jae
out
out
fsubs
mov
sbb
mov
pop
dec
adc
dec
adc
pop
pusha
cmc
and
jno
add
cmpsb
sub
stos
jns
dec
jne,pt
leave
pop
or
lock
aad
test
in
test
jge
inc
cli
data16
repz
mov
jle
lcall
mov
daa
test
jb
enter
idivb
pop
mov
cmp
push
or
inc
je
dec
jmp
int
pop
and
sahf
mov
cwtl
ret
nop
sbb
mov
inc
lock
and
dec
aas
xchg
ret
fs
ret
adc
push
dec
ss
push
les
outsl
jo
dec
idivb
lds
sub
sbb
sti
jg
cmp
mov
lock
mov
int
push
lahf
fists
mov
jae
add
jecxz
test
add
cmp
cs
push
std
push
dec
lock
jbe
rcr
xchg
andl
cwtl
fmulp
into
int3
push
pop
lcall
push
fdivrl
loope
outsb
xor
or
aam
aaa
push
adc
rorl
outsb
shrb
inc
repnz
mov
adc
inc
cmpsb
xlat
lea
ljmp
xchg
mov
es
lods
jmp
addr16
inc
movsb
jle
cmp
xor
xor
jb
mov
cmpsl
pop
out
xlat
in
in
test
adc
xor
jo
repnz
and
repnz
test
ret
lock
push
push
inc
fidivl
xor
es
mov
data16
out
aaa
mov
push
fsubrs
imul
jno
push
pop
and
sahf
fdivrp
adc
or
repz
adc
inc
sbb
scas
ljmp
in
int
mov
push
lahf
sub
xor
jae
dec
shll
lock
and
mov
iret
push
cmc
sti
push
loope
lods
das
pop
mov
cmpl
je
push
outsb
lret
pop
dec
inc
es
sbb
cmp
aam
test
mov
aaa
cs
mov
mov
stc
adc
lahf
pusha
lock
pop
das
xchg
inc
rorl
jb
xor
jae
je
fwait
int3
cwtl
imul
out
notb
popf
mov
outsl
add
mov
and
inc
sahf
imul
xor
jle
add
outsl
jb
or
xchg
jle
mov
lea
mov
ret
push
or
push
xchg
test
push
jno
mulb
dec
in
pop
ss
dec
data16
sbb
add
leave
xchg
sub
pop
pop
mov
in
aas
xor
fldenv
cwtl
xchg
jnp
dec
or
xlat
lds
int
daa
jge
fs
xor
or
lods
pop
nop
pop
int
sbbl
sub
mov
inc
popf
insb
add
adc
sbb
mov
lods
sub
inc
lds
in
sahf
popa
inc
xor
jne
adc
aam
jmp
and
xchg
ljmp
mov
add
mov
xchg
fnsave
sub
sbb
out
cld
rcll
add
or
adc
cld
movsl
sahf
mov
xchg
push
mov
dec
das
xor
std
into
push
add
cmp
fistps
int3
or
push
jp
in
ret
sbb
jae
pop
cmp
mov
ljmp
dec
dec
dec
jl
out
sub
fldcw
enter
inc
fwait
cmp
nop
cmp
jno
stos
inc
cmpsl
sbb
arpl
std
nop
test
movl
cmp
mov
cmp
aad
sahf
or
shl
je
jo
push
sbb
inc
icebp
test
adc
xor
roll
mov
enter
pushf
mov
pop
push
ss
pop
rorb
add
popa
outsb
jbe
xchg
sub
cmpsl
sub
mov
pop
push
xor
and
out
pusha
movsb
sbb
repz
xlat
jmp
mov
cmp
push
mov
lds
inc
js
sti
outsb
mov
gs
sbb
dec
insb
sub
nop
icebp
cmc
das
sub
filds
jg
test
repnz
lcall
mov
pop
or
pop
fcmovu
ljmp
insl
gs
lret
xor
lea
fstpt
push
adc
fiadds
xchg
ret
add
pop
jne
shl
pop
pushl
test
or
or
out
mov
dec
adc
push
xchg
mov
shlb
repz
jle
mov
xor
inc
ffree
push
lea
out
mov
jne
push
xchg
and
xor
xchg
or
icebp
repnz
mov
pop
cltd
movl
adc
add
adc
imulb
push
sub
dec
push
popa
ficoms
mov
das
push
pop
mov
movsb
sbb
mov
dec
adc
pusha
and
bswap
or
mov
sbb
test
ret
js
in
cmpsb
add
sbb
xchg
das
mov
fldt
push
ret
sub
or
pop
push
dec
shrl
cmp
mov
add
mov
add
imul
rolb
and
call
hlt
sub
lds
mov
jno
jle
js
push
cld
enter
in
loop
iret
xor
adc
out
fisubrs
mov
dec
notl
mov
leave
sti
daa
xor
mov
adc
mov
scas
xrelease
scas
outsb
outsl
lods
outsl
pop
je
or
pop
add
xchg
test
stos
xchg
or
push
div
mov
lret
dec
sbb
test
jne
sub
adc
gs
jecxz
xchg
sub
mov
lods
mov
fisttpll
xor
sbb
mov
mov
test
xchg
jge
sub
xchg
xchg
pop
cmp
xchg
xor
dec
in
bound
neg
test
jns
xchg
shll
xchg
leave
xor
je
add
mov
cmp
pop
pop
outsl
push
stos
jne
aam
nop
cmpsb
xchg
imul
or
jecxz
outsl
ds
cmpsl
inc
les
adc
xchg
add
dec
lcall
aam
outsl
in
insb
in
sub
pushf
arpl
cwtl
cmp
pushl
jo
filds
sbb
dec
and
adc
push
inc
inc
mov
mov
addr16
xor
fs
mov
in
jl
jecxz
es
dec
pusha
sbb
adc
fisubrs
outsb
scas
fwait
movsl
mov
cmp
dec
mov
out
xor
add
orl
sbb
xorb
push
push
xchg
lcall
xchg
adc
ss
cmp
insb
mull
leave
cli
pop
sbb
mov
cmp
insb
jbe
call
jg
sti
arpl
inc
call
test
aaa
push
xchg
loopne
cmpb
xor
and
and
dec
mov
jp
fdivp
push
addl
fwait
arpl
pop
jg
mov
xchg
call
lods
sub
lret
out
test
pusha
stc
add
out
addr16
mov
mov
mov
loope
jnp
mov
mov
xchg
and
and
sub
cmp
adc
add
out
mov
cmpsb
add
scas
push
jo
sbb
sbb
pop
sub
dec
jae
sbb
dec
pushl
mov
pop
jb
sti
sub
inc
inc
adc
sub
mov
inc
jo
fisubrl
push
add
xor
lds
fistpl
add
lds
cmp
mov
xchg
aad
lahf
mov
dec
push
push
mov
ficoml
negb
fwait
push
jge
jmp
inc
cmpl
push
push
aad
mull
xor
adc
loop
notl
ret
ret
mov
and
pop
jne
dec
incb
add
cmpsl
ljmp
les
ficoml
push
movsb
outsl
divl
ja
sti
or
push
daa
push
sbb
inc
fnstcw
orl
jle
das
lahf
or
daa
icebp
sbb
or
dec
dec
push
fidivl
and
cmpsl
or
aas
imul
dec
adc
xchg
scas
int
mov
test
scas
enter
cli
dec
pop
push
mov
push
sub
repz
lret
pop
call
push
pop
aas
js
jne
fs
bound
adc
cmp
add
movsl
movsl
fmul
clc
sub
loopne
mov
insl
mov
fnstenv
jae
cmp
mov
and
mov
mov
cmp
dec
test
inc
das
adc
icebp
sub
add
pop
cmp
shr
ret
mov
jl
xchg
inc
insb
fdivrs
jno
push
inc
pop
sbb
adc
jne
or
lods
mov
fmuls
stos
xlat
lds
or
pop
popf
jne
in
rol
dec
xchg
out
lock
push
mov
xchg
rcr
insb
ja
addr16
jmp
lock
fwait
sbb
mov
mov
filds
dec
cmp
xchg
pop
add
shl
shl
pop
cmp
xor
pop
push
sarb
push
xchg
aaa
xchg
dec
pop
fcmovu
jne
lock
fst
xlat
xlat
cmp
push
pop
adc
push
xor
int3
cmpb
je
inc
das
insb
cmpsl
lret
repnz
or
and
aam
push
addr16
jno
ja
adc
jmp
sbb
sub
es
add
cmc
cmpsb
int3
mov
lods
pop
sub
cltd
imul
lea
push
pop
inc
inc
inc
push
xorl
fisubrl
push
in
jge
mov
adc
mov
inc
inc
and
mov
call
test
dec
out
cld
sub
orl
push
jae
jge
push
sarb
sti
dec
test
xchg
sarb
into
cmp
pop
inc
mov
dec
mov
ret
dec
sub
jae
add
lods
pop
lea
bound
in
ret
xor
lcall
idivl
xchg
inc
mov
je
out
dec
jne
lds
arpl
sbb
pop
nop
movsb
xchg
or
lods
and
mov
push
clc
psubb
pop
jo
je
sbb
mov
es
arpl
inc
retw
dec
sbb
outsl
adc
jmp
sbb
lock
inc
jg
mov
xchg
out
push
pop
inc
or
mov
mov
imull
sbbb
test
jecxz
test
xor
mov
insb
xor
daa
movb
mov
popf
pop
or
jo
and
lods
clc
adc
push
test
lds
in
lds
int3
and
sarl
das
imul
sbb
fildll
xchg
ret
rolb
jno
rcrl
ror
push
rol
pop
aas
mov
cld
xchg
mov
add
cmp
pusha
test
outsb
sbb
sti
pop
shlb
mov
mov
loopne
pop
jo
roll
mov
in
gs
mov
or
sub
fnsave
nop
out
mov
and
and
testb
push
inc
inc
imul
imul
rclb
adc
jns
jecxz
xchg
xchg
mov
scas
cmp
repz
jnp
mov
orb
mov
and
in
mov
xchg
rcrl
lret
test
lret
jae
mov
jns
lret
lods
cli
ljmp
sbb
icebp
gs
cmpsb
jmp
xor
adc
or
dec
xchg
mov
inc
sahf
pop
filds
cmp
jecxz
and
imul
addr16
sbb
jmp
ret
adc
loopne
sub
mov
mov
das
mov
ss
hlt
dec
int
add
lret
fwait
push
test
xchg
or
mov
jge
adc
fdivs
adc
push
cmp
mov
in
into
pop
in
xchg
mov
xor
cmpsl
jge
imul
mov
popa
jge
sbb
adc
jo
mov
jl
lahf
rclb
inc
mov
fs
addr16
mov
jae
ret
or
mov
bound
adc
out
push
or
mov
scas
lea
decl
xchg
sbb
fistpll
fs
inc
cmpsl
jbe
mov
xor
sub
cmp
mov
aad
cmp
sub
in
aas
rorl
push
xor
adc
pop
cmp
jb
pop
clc
mov
orb
xchg
mov
movsb
dec
test
out
pop
push
sub
mov
lcall
arpl
push
and
stos
xor
fists
jp
xor
cli
cmpl
js
mov
daa
jno
shr
sbb
mov
fsubrl
lahf
and
jl
les
jns
cwtl
ret
dec
out
jbe
call
in
jge
jmp
pop
xchg
data16
jo
and
mov
ja
add
ret
cwtl
rcll
clc
fsts
lahf
xor
pop
mov
xchg
lock
or
orb
push
daa
xchg
or
cmpsb
imul
jecxz
leave
into
test
jl
test
pop
sub
jae
xchg
mov
ret
inc
ficoml
push
pusha
cs
or
fisttpl
cmp
mov
jp
or
stc
jmp
jmp
mov
adc
pop
pusha
stos
mov
lret
cmp
xor
mov
mov
fs
fbld
sub
clc
sbb
and
push
xchg
insb
jne
push
shrb
inc
fcmove
lods
cs
out
adc
icebp
mov
aaa
icebp
xchg
shl
jno
xchg
add
es
adc
mov
xorb
cli
lret
out
movb
repnz
or
mov
sbb
jmp
int
push
push
sub
sub
add
das
dec
lea
into
xchg
push
enter
xchg
sbb
repnz
je
mov
iret
fiaddl
adc
pop
mov
xorb
jo
adc
and
inc
sarl
xchg
jbe
dec
lret
xchg
insb
in
ret
adcb
jl
es
dec
cs
cmp
pop
nop
xchg
hlt
lahf
insb
add
push
fs
jno
inc
dec
lds
xchg
mov
adcb
pop
je
inc
and
aaa
mov
adc
adc
dec
push
mov
fucomip
adc
adcl
adc
push
jae
xor
scas
cmp
inc
adc
mov
add
ret
test
mov
xlat
mov
fwait
mov
inc
dec
push
xor
inc
hlt
mov
arpl
or
shl
inc
pop
xchg
into
cmpsb
fisubs
dec
or
pop
mov
nop
ss
mov
mov
sahf
jmp
icebp
paddb
iret
in
xor
add
int
shrl
dec
inc
pop
js
xor
out
addl
cmp
outsl
ljmp
mov
inc
sbb
rolb
lea
inc
out
das
push
mov
es
xor
mov
and
scas
pop
pusha
pop
lods
push
cmp
ds
loop
scas
out
xlat
cmp
jge
or
int3
aam
pop
mov
adcb
sti
cwtl
cmp
test
std
mov
test
leave
mov
mov
and
mov
lods
and
sarb
daa
adc
dec
mov
xor
inc
xchg
cmp
mov
hlt
sbb
lcall
test
iret
sub
ljmp
aad
fadds
mov
pusha
call
cmpsb
and
mov
loopne
rorb
adc
aas
int
add
dec
push
mov
rcrl
icebp
adc
hlt
out
cmp
cwtl
aaa
or
push
ja
sub
push
lcall
cmp
popf
sti
pop
xchg
stos
push
popf
cltd
push
jle
jmp
jno
out
dec
sbb
lods
mov
or
inc
call
lret
iret
arpl
add
loop
and
mov
ret
jmp
test
and
cmp
sbbb
or
lret
jnp
sub
out
jae
inc
and
inc
outsl
daa
ds
ja
daa
cmp
dec
and
cmp
pushf
inc
cli
jmp
hlt
xlat
mov
inc
inc
jecxz
add
adc
sub
bound
imul
in
adc
sub
adc
inc
test
jmp
aam
dec
in
out
add
pextrw
sub
hlt
rcl
and
xorl
jns
add
fisubrl
adc
push
ret
xlat
and
in
xchg
jo
pop
adc
cmp
xor
std
pop
cld
ljmp
outsl
push
es
sbb
mov
pop
inc
sub
xor
ret
in
rcl
adc
mov
testl
sub
adc
lods
jae
int
rcrl
mov
jge
ss
adc
pop
lcall
add
push
sbb
aad
xor
push
push
in
push
adc
xchg
andl
cmp
mov
leave
mov
and
out
mov
cmp
icebp
push
dec
ja
rclb
cmp
sbb
sub
xor
sub
pop
and
push
mov
lea
push
jno
sarb
leave
pop
mov
adc
iret
in
addb
push
adc
pop
sub
into
aaa
inc
cmp
sbb
ss
xchg
jecxz
push
mov
fldpi
data16
xchg
stos
cld
jae
or
imul
je
fdiv
mov
dec
cmp
out
shll
xorb
or
sti
test
xor
sbb
rol
xchg
jge
fists
cmp
leave
ja
inc
leave
mov
mov
pop
mov
push
es
jnp
addr16
lcall
pop
mov
xchg
inc
sbb
movsl
xor
les
test
adc
xor
xchg
mov
das
stos
gs
mov
dec
scas
mov
add
or
mov
mov
addl
push
xor
lds
adc
push
mov
mov
imul
cmp
leave
scas
jp
adc
add
pop
jle
bnd
or
sub
xchg
std
or
sub
fcompp
mov
hlt
inc
fcoml
jae
ret
mov
arpl
or
xor
movsb
mov
mov
xchg
scas
out
mov
pusha
mov
push
out
dec
adc
dec
xchg
imul
pusha
jl
cmp
jnp
faddl
mov
adc
fadd
push
inc
adc
mov
inc
xor
sbb
mov
test
aas
sbb
fdivrl
movl
and
int3
mov
icebp
cltd
push
ret
ja
bound
push
ja
insl
ds
lods
cmp
sbb
fsubr
sub
cli
repz
loope
mov
jg
lods
incl
fldt
pop
mov
test
shlb
aas
mov
dec
or
popf
or
repz
jp
sbb
les
xor
mov
adc
enter
mov
into
sbb
popf
dec
movsl
cmp
dec
xchg
sub
push
mov
daa
dec
push
lcall
imul
daa
bound
inc
xor
jbe
sub
adc
mov
and
push
lahf
fisttpl
xchg
mov
sahf
xor
cmp
loop
out
enter
aas
lods
lods
xor
xlat
mov
insl
movsb
test
nop
xor
fwait
int3
xorl
inc
inc
or
pop
sbb
adc
leave
sub
xchg
mov
data16
ret
lock
push
mov
xor
pop
int3
mov
mov
shrb
mull
sub
sub
das
xchg
pop
stos
push
loop
lret
xchg
int
fs
xchg
mov
and
jecxz
jns
sub
fstpl
and
jnp
xchg
mov
cmc
cmp
fwait
push
sbb
jae
lret
xchg
stos
mov
stos
sbb
pushl
ret
js
add
in
aas
inc
inc
add
pop
pop
push
inc
sahf
cmp
inc
mov
xlat
cmp
xchg
dec
aad
roll
pop
sub
enter
in
mov
fildl
out
aaa
test
fsubs
and
cmc
and
pop
pop
int3
bsr
addr16
cmpb
cmovno
mov
out
and
in
push
rorb
or
std
add
js
pop
fildl
clc
fdivr
push
xor
xor
dec
push
pop
dec
into
inc
pop
repnz
push
add
dec
adc
adc
sti
xor
loop
das
inc
pop
xchg
and
dec
inc
pop
dec
repnz
push
aas
scas
push
ret
sbb
mov
inc
loope
repz
inc
cmp
mov
mov
push
cli
or
push
add
jp
push
daa
fsub
push
add
dec
movsl
pop
add
movsb
adc
gs
cwtl
cltd
fildl
sub
dec
jge
out
push
xchg
fldt
adc
add
nop
adc
cwtl
std
in
pop
adc
insb
jo
fiaddl
mov
adc
xlat
inc
xor
or
mov
xchg
nop
leave
cwtl
mov
adc
test
add
lret
cmp
sti
mov
jmp
leave
push
mov
sbb
pop
push
movsl
xlat
je
sbb
shrl
adc
adc
std
jnp
xor
mov
lods
je
pop
cmp
cmpsb
xchg
mov
and
lock
push
popf
pop
cmpsl
adc
xor
cmp
pop
test
aad
es
mov
cmp
sbb
push
push
pushf
push
jo
add
repnz
jae
pop
nop
in
outsb
cmpsb
xchg
mov
aad
jne
push
flds
fisubrs
dec
mov
xchg
xor
jp
ds
hlt
lea
cwtl
icebp
scas
lea
xor
xchg
jg
xchg
test
dec
stos
js
popf
les
jb
nop
sub
or
mov
mov
or
mov
jg
dec
sti
sbb
mov
inc
sbb
cmpsl
cmp
gs
adc
icebp
repz
jbe
mov
in
mov
cltd
sar
hlt
sub
mov
jno
adc
gs
push
fnstenv
mov
lcall
hlt
sub
push
daa
push
pushf
push
icebp
push
daa
imul
movsb
fstl
js
push
nop
inc
jne
dec
xchg
add
adc
out
lcall
cmp
gs
lahf
lcall
dec
lock
push
mov
xor
dec
sub
idiv
push
es
and
inc
cmc
sbb
fwait
lahf
mov
mov
dec
out
cmp
xor
mov
lods
nop
xchg
cmp
mov
scas
outsl
ds
jno
or
fcomps
stc
jne
lods
jbe
sti
lods
sub
inc
das
in
adc
adc
sbb
push
xchg
mov
ds
and
rorb
outsb
popf
outsb
out
lahf
sarb
jecxz
and
dec
push
lret
sbb
mov
xor
out
adc
mov
divb
cmp
iret
cmp
sahf
mov
sub
mulb
adc
mov
inc
cltd
data16
or
mov
xor
or
push
cmp
push
test
xor
cmp
jg
jle
sbb
cmpsl
jmp
sbb
pop
repnz
out
imul
cwtl
xchg
lcall
jge
push
jp
jae
jae
mov
add
test
dec
xchg
cmp
sub
and
mov
movzbl
lahf
xorb
aam
xor
rcll
movsl
loop
lcall
fidivs
xchg
movsl
xchg
mov
inc
test
xor
shlb
inc
es
in
and
mov
or
jnp
dec
sub
push
gs
pop
mull
and
movsl
xor
lods
cmpsb
mov
insl
cmp
test
xor
sub
jmp
mov
repnz
dec
int3
outsb
xor
fnstsw
movsb
stc
pushf
sti
ret
icebp
add
sbb
add
loope
add
or
push
nop
incl
cld
mov
push
dec
daa
push
xlat
nop
out
aad
inc
dec
lods
loope
clc
cmp
sub
outsl
dec
stos
ret
test
adcl
imul
cs
in
mov
int
sbb
sahf
popa
js
xchg
adc
xor
into
in
cli
dec
adc
add
movsl
pop
pop
xchg
test
loop
jnp
movsb
xchg
lds
outsl
cmp
xor
xor
fcmovne
iret
or
pop
inc
push
adc
bound
das
mov
lahf
xor
cmp
mov
shll
and
adc
pusha
lret
mov
jmp
and
push
adc
pop
xor
andb
cmp
loopne
xor
add
jns
clc
sbb
cmp
xor
out
jecxz
jae
mov
arpl
jb
and
sub
enter
adcb
faddl
je
rorb
lcall
inc
adc
in
cmp
mov
mov
mov
gs
negb
jb
dec
pusha
mov
mov
idiv
les
dec
sbb
repnz
xchg
out
push
sub
mov
aaa
push
mov
xchg
cs
add
mov
ja
stos
sub
test
out
inc
dec
ficompl
cmp
jo
mov
vandnps
sub
jmp
fnstsw
and
loop
roll
and
shrb
pop
pop
test
ret
je
pop
push
xchg
xchg
jmp
sub
lret
jae
imul
add
pusha
mov
scas
addb
ss
aaa
inc
fadd
call
mov
repz
mov
popf
mov
inc
and
push
push
jno
es
enter
xor
outsb
or
loopne
into
fwait
and
imul
jl
movsl
iret
xor
mov
pusha
add
cmc
mov
and
rorl
subl
pop
aad
stc
scas
xor
cmpsb
mov
or
faddl
pop
movsb
insl
push
mov
shlb
mov
fdivs
into
cmp
je
rcrb
add
in
or
mov
add
xor
sbb
les
add
fldt
or
pop
sarb
mov
popa
test
mov
aam
pop
mov
mov
cs
fwait
xor
adcl
jl
bnd
fnstsw
pop
mov
add
loop
inc
andl
fs
popf
mov
xchg
mov
test
loope
movsb
sbb
stos
sub
and
cmpsl
shlb
fdivl
scas
jbe
push
in
and
sti
sbb
aas
push
xlat
mov
cmp
jae
xchg
cmc
jg
mov
mov
pop
ret
sahf
push
pop
adc
cmp
push
sbbl
in
inc
xor
fstps
xchg
mov
mov
enter
jb
adc
cmp
inc
lret
enter
pop
test
ret
push
sbb
mov
jnp
or
in
push
ljmp
stc
sub
jb
gs
sbb
pop
pop
les
mov
stc
out
jno
pop
imul
lock
or
fwait
jmp
dec
fs
aam
sbb
lret
and
pop
int3
push
js
or
xor
pop
cwtl
jp
xlat
inc
pop
imul
dec
aad
mov
addb
jbe
sub
dec
pop
mov
es
xchg
stos
dec
mov
setae
dec
push
inc
scas
xchg
push
cmp
add
sbb
add
jb
ja
hlt
add
push
cmp
mov
lahf
sub
mov
pushf
push
mov
add
rorb
cmp
js
test
xchg
mov
sarl
jno
fstps
div
dec
in
cmp
sahf
inc
xor
sbb
pop
dec
call
push
add
sbb
xchg
mov
mov
aaa
loope
adc
pop
arpl
cli
inc
cltd
nop
pop
mov
sub
add
push
or
daa
lea
jge
inc
int3
xlat
mov
dec
cmp
lea
in
imul
fidivrl
call
dec
cmp
add
adc
xchg
cmp
mulb
xchg
dec
leave
or
std
mov
push
pop
subb
rolb
imul
in
frstpm(287
add
in
orb
je
jp
test
mov
inc
rorl
call
hlt
xlat
out
inc
pop
loopne
mov
adc
cmp
fdivrp
int3
sub
jle
popa
lods
lea
subl
insl
add
add
jg
jp
test
xor
mov
mov
inc
icebp
or
test
mov
lods
mov
mov
push
sub
sti
jnp
push
mov
push
sub
and
or
mov
add
cmp
sahf
pushl
and
jo
sub
cmpsl
adc
sub
je
push
cmp
std
les
push
fldl
es
add
not
std
adc
insb
loopne
adc
add
push
xchg
das
ret
or
fnstcw
jnp
push
fdivrs
loopne
ffreep
shrl
cmp
pusha
sub
add
push
and
lock
mov
mov
cli
mov
and
mov
outsl
and
mov
sub
inc
lods
lds
mov
ficomps
push
dec
push
add
xchg
jnp
movb
jl
das
into
imul
cmp
push
lods
pop
leave
fistpl
push
mov
pushw
pusha
adc
dec
outsl
adc
rorb
mov
std
fucomip
test
fisubl
cltd
xchg
test
mov
add
or
mov
and
loope
adc
std
adc
sub
mov
fdivl
loop
notb
icebp
int
sub
sub
mov
jnp
adc
hlt
cld
test
xchg
out
inc
xchg
xchg
cwtl
test
aaa
sbbb
mov
push
fstl
sub
lods
stos
test
push
jnp
inc
push
js
inc
adc
sub
inc
dec
fdivr
inc
fistps
push
and
repz
mov
push
or
sbb
sub
rclb
ret
mov
adc
pop
lds
leave
fiadds
xor
pop
imul
dec
es
inc
cmp
clc
xor
ds
mov
int
xlat
mov
iret
icebp
xchg
pusha
or
sbb
mov
adc
sub
jns
fildl
js
cltd
dec
pop
pusha
aas
inc
dec
pop
ss
adc
dec
popa
jbe
ljmp
cmp
out
stos
mov
inc
sbb
mov
sub
fmull
fdivrp
jmp
add
cmp
mov
js
lock
insb
lea
mov
push
insl
mov
mov
and
out
xorl
test
data16
pop
sub
hlt
popf
das
mov
add
js
mov
loop
pop
mov
jge
jmp
xchg
cltd
cmc
mov
inc
cmc
ss
mov
enter
sub
push
aaa
or
inc
dec
mov
adc
mov
mov
inc
lcall
inc
addl
aaa
add
sub
insl
jp
lcall
jecxz
shlb
ss
xor
mov
clc
xchg
adc
xlat
rcrb
mov
fs
lcall
push
rcl
or
mov
cs
xchg
sbb
xchg
xor
sahf
sub
cmp
addr16
lcall
std
xlat
sbb
sarl
nop
push
sub
nop
pop
mov
hlt
xorl
sub
mov
fnsave
push
les
hlt
and
lds
dec
shrb
stos
and
jns
inc
mov
cs
lods
mov
decb
push
and
inc
sbbb
aam
add
pop
out
stc
in
xchg
hlt
int3
andb
xchg
push
rorb
pop
in
outsl
lods
push
or
gs
int
daa
lods
out
dec
mov
enter
sub
stos
das
pop
dec
or
cli
ja
xor
mov
ss
mov
in
mov
test
inc
push
adc
fdivrl
jne
mov
lock
add
out
aas
add
shll
push
cmpsl
jnp
mov
cmp
mov
enter
dec
imul
popf
push
mov
stc
xor
pop
loopne
in
adc
addb
pusha
aaa
clc
fisttps
jg
adc
in
sbb
xchg
sarl
dec
or
mov
push
imul
adc
hlt
sbb
push
mov
jecxz
push
int
add
sub
imul
testb
dec
fnstenv
push
sub
popf
push
sub
add
jns
xchg
push
out
xchg
lods
mov
cmpsb
xor
cmp
test
inc
pop
cmp
out
pop
mov
mov
test
inc
dec
sub
sahf
sub
out
orb
mov
sub
xchg
leave
insl
adc
dec
popf
jg
je
xor
sub
aam
movsl
xchg
mov
nop
dec
popa
mov
mov
imul
push
movl
pusha
inc
jg
mov
inc
repnz
mov
or
jbe
shl
xchg
fld
push
jl
push
push
or
sbb
cli
inc
call
dec
mov
push
int
stos
jecxz
cmp
dec
test
xor
rcll
ja
imul
mov
bound
or
hlt
push
int3
add
orl
mov
mov
jb
dec
loopne
movsl
sub
adc
or
push
jns
jmp
xor
outsb
pop
int3
fstpl
out
sbb
cltd
push
hlt
push
sub
mov
dec
or
mov
loop
jg
shl
add
cmpb
aas
shr
cmp
xchg
xchg
out
call
je
xor
flds
dec
lds
jne
pop
jmp
cltd
xor
dec
out
fdivrs
xor
sub
xlat
jecxz
push
jnp
mov
cmpsb
nop
add
sarb
out
mov
pop
and
xor
notb
sub
jbe
aaa
imul
rorl
jecxz
push
xchg
sahf
mov
sbb
imul
jb
push
test
outsb
mov
test
cli
lret
nop
mov
outsb
daa
dec
lock
inc
push
jmp
sub
test
dec
std
js
dec
mov
out
divb
xor
jb
js
ljmp
cmpsl
adc
sub
jmp
mov
fildl
push
sub
push
push
imul
push
cmp
sahf
in
xchg
jae
cmc
and
outsb
xor
cltd
sbb
push
adc
popf
mov
scas
adc
push
pop
sub
mov
inc
xor
dec
sbb
lock
outsb
push
dec
ficoml
test
and
add
cmp
popf
cli
ficompl
in
cmp
in
lock
xchg
pop
pop
push
movb
aas
pushf
sbbb
sti
xchg
inc
xchg
ja
aas
aam
xor
sbb
mov
pop
inc
sub
test
jbe
lret
out
xchg
cltd
jle
add
fwait
arpl
mov
gs
push
loope
shrl
jae
enter
mov
cmpsb
dec
mov
add
or
mov
rcr
mov
jl
xchg
add
jmp
pushw
add
jbe
xchg
adcl
mov
and
dec
scas
cmp
mov
and
shlb
sub
mov
mov
adc
shrl
dec
push
jg
cmp
ljmp
xlat
sub
shll
mov
scas
lret
mov
es
mov
cld
push
lcall
or
sbb
popa
inc
or
adc
mov
mov
imul
mov
enter
sbb
punpckhwd
cwtl
movsb
or
lock
sub
flds
inc
xchg
push
jnp
les
mov
and
push
xor
mov
and
xor
dec
cmp
adc
lods
jmp
or
jl
sbb
inc
push
scas
inc
add
dec
cmp
add
xchg
dec
adc
mov
ret
mov
aas
ja
adc
jecxz
pop
inc
push
pop
sbb
scas
mov
jb
int
dec
lea
mov
clc
sti
lahf
sbb
fmull
sbb
ja
mov
iret
call
xchg
mov
lods
lahf
dec
mov
subl
push
jge
fidivl
imul
inc
add
les
insb
adcb
adc
stos
aam
or
adc
fs
sbb
cltd
lods
sti
sbb
sbb
or
inc
pushf
or
out
pop
mov
andl
dec
arpl
fidivl
add
in
xchg
mov
fnstenv
stos
cmp
repz
sub
nop
in
popf
loope
xor
cltd
scas
adc
enter
mov
or
mov
push
add
cmpb
and
ljmp
je
add
cs
xor
adc
fsubr
dec
mov
std
test
and
aad
dec
jne
sarl
sub
mov
push
enter
jl
jnp
test
sub
ret
fwait
inc
test
call
push
cwtl
pop
data16
mov
and
in
add
ja
lret
loope
pop
fsubs
add
fldcw
jnp
test
dec
mov
fdivr
leave
fisubrl
lcall
notl
sarl
lock
pushl
int
and
mov
arpl
fs
addb
andl
fwait
push
and
cmpsb
add
jge
test
daa
iret
and
inc
and
adc
xchg
imul
jge
push
hlt
in
mov
fs
test
int3
xor
in
lret
inc
das
xchg
rcrb
xor
pop
ret
repnz
xor
jno
clc
repz
stos
mul
dec
fmul
adc
sbb
loope
scas
fwait
roll
ss
cmp
xor
cmp
push
push
cmp
loopne
shll
add
mov
jns
stos
scas
and
lods
inc
and
cs
mov
lret
rcll
insb
cld
les
add
push
fwait
aaa
dec
aas
in
aad
pushf
push
ja
xor
fdivp
scas
xchg
jle
rolb
movsb
out
fwait
mov
add
pop
or
ret
and
mov
xchg
add
push
ljmp
xchg
dec
jmp
loop
push
ror
push
pop
add
mov
shl
sub
sbb
imul
insb
enter
cmp
sub
into
and
insl
push
jg
xrelease
je
xor
lea
sahf
and
fldcw
pop
mov
and
inc
inc
loope
test
mov
or
pop
adc
cmpsb
inc
popa
push
movsl
scas
sbbb
sbb
shrl
jg
mov
jecxz
dec
lds
bound
dec
pop
outsl
outsl
mov
xor
dec
dec
push
dec
inc
notl
mov
ret
hlt
ret
rcrl
imulb
pop
sub
mov
ror
sahf
iret
xorl
mov
ret
lds
stos
loop
out
jmp
push
mov
adc
bound
mov
xlat
adc
cld
dec
cmp
xchg
loope
repz
das
sti
dec
xchg
sbb
mov
cmpsl
repnz
movl
push
sub
cltd
outsl
lret
aas
add
jmp
arpl
lahf
lods
add
mov
roll
mov
addr16
je
xchg
lcall
cs
mov
popa
adc
mov
or
mov
xor
dec
pop
cs
push
clc
push
mov
add
dec
mov
imul
movsb
sub
fdivrs
stos
ljmp
aaa
imulb
adc
cmpsb
mov
rcrl
sbb
pop
xor
mov
cmp
repnz
sti
lahf
stos
fidivrs
hlt
pop
in
pop
sbb
insl
jo
repz
jae,pt
add
lods
in
out
xor
popa
or
mov
aas
mov
insl
mov
sarl
cs
lret
add
mov
mov
fcmovnbe
add
je
xchg
jmp
mov
push
ss
push
rclb
jnp
jge
lret
mov
std
pop
pop
addb
mov
dec
sub
pop
jbe
mov
adc
xchg
call
in
repz
cmpsl
das
sbb
mov
stos
aaa
cmp
fstpl
push
lock
cltd
add
outsl
and
pop
into
sbb
sbb
lea
adc
mov
or
push
fmull
roll
ljmp
pop
ss
faddp
icebp
or
mov
mov
out
dec
xchg
adc
popa
sub
jl
test
sarl
inc
pop
dec
ljmp
mov
in
aad
xor
lret
pop
cmp
aam
jle
push
lret
adcl
dec
jge
cld
dec
cmc
arpl
fidivrl
in
or
or
es
sbb
fdivr
sub
mov
xor
iret
add
and
fcmovnu
je
dec
mov
popf
sub
daa
ret
sbbb
fmull
mov
mov
leave
inc
in
sub
lock
inc
pop
jae
loope
xchg
cmpsb
dec
dec
popf
div
adc
cld
dec
xor
popf
jp
insl
stos
scas
cvtpi2ps
xchg
enter
push
adc
lret
mov
cltd
pushf
std
or
xor
or
sub
loop
pusha
mov
ret
lods
loope
mov
das
sub
das
scas
ds
es
lods
inc
mov
sub
mov
jmp
push
mov
jmp
int
push
js
and
mov
mov
lcall
mov
neg
pop
xchg
pop
ret
dec
push
inc
movsb
and
pop
movsb
clc
xlat
popf
rol
das
shlb
xor
and
mov
cs
mov
aad
aaa
and
push
test
or
and
adc
xchg
xor
pop
mov
in
sub
dec
adc
addr16
push
push
bound
pop
fcmovnbe
test
mov
push
xor
jae
cwtl
lcall
cmp
push
movsb
or
leave
jle
fwait
mov
push
aad
and
add
rclb
mov
mov
insb
jmp
dec
lret
sbb
sbb
insb
jbe
stos
inc
jne
mov
mov
stos
add
mov
or
and
inc
enter
jae
dec
xchg
mov
and
jnp
imul
pop
jne
mov
pop
ds
imul
fs
jae
and
lret
and
aad
and
inc
jb
xchg
cmp
push
in
aam
inc
mov
lret
out
sub
push
cmp
or
lock
lahf
jb
out
fcom
imul
sub
test
fcoml
scas
sub
leave
ret
pop
flds
sub
out
repz
xchg
inc
testl
movsl
out
push
mov
pop
and
lahf
outsb
xchg
in
aaa
mov
ja
xchg
sub
insb
enter
pusha
jno
jg
dec
pop
jmp
inc
add
mov
adc
scas
mov
mov
inc
mov
es
std
adcl
jge
stc
push
shl
add
sub
lea
jle
xchg
mov
inc
lret
push
push
pop
push
incl
lds
cmp
pop
pop
arpl
push
xor
mov
pusha
sub
fldenv
mov
cs
fdivl
stos
pop
sbbb
lock
inc
dec
xchg
dec
cmpsl
push
xor
je
movsb
cs
popa
idiv
imul
dec
cmp
out
lods
pop
mov
pop
sub
lds
pop
orl
ja
push
loope
fdivs
lret
jmp
test
jo
mov
aad
sti
dec
lahf
xor
imul
inc
inc
add
mov
bound
xchg
loop
xchg
inc
sub
push
sub
dec
add
andl
jb
inc
mov
and
ja
loopne
push
out
push
loopne
mov
mov
mov
fsubrl
out
stos
jae
pusha
pop
cld
jecxz
rolb
repnz
outsl
pop
push
and
dec
test
jns
gs
xlat
loop
xchg
imulb
dec
in
call
fbld
inc
mov
imul
lcall
push
xor
pop
fimuls
loope
inc
icebp
and
jb
xchg
fdivrs
inc
inc
arpl
xor
sub
aam
push
in
popf
dec
push
mov
outsb
enter
jno
inc
dec
adc
int3
bound
mov
pop
addl
loope
aas
dec
sbb
loop
notb
or
stos
adc
jmp
xor
jl
dec
daa
cmp
mov
aaa
push
movl
loope
fs
andl
inc
push
notl
sub
cli
es
loopne
add
packsswb
and
fcompl
inc
out
fidivrl
aam
or
rcll
mov
pop
xor
iret
in
dec
cmp
aad
mov
xchg
add
pop
xor
pop
imul
cmp
lcall
repz
mov
cmp
jno
xchg
cld
pushf
mov
je
insl
adc
cmpsl
adc
or
dec
lahf
xor
add
jge
sub
add
mov
jno
call
lods
xor
es
pop
mov
xchg
int
mov
aaa
lds
cltd
mov
sub
loop
sub
cltd
cmp
push
mov
xchg
test
je
sbb
mov
cmpsb
sbbb
mov
setae
inc
mov
and
adc
pop
mov
add
into
mov
adc
fstl
pop
push
push
cmc
shrb
stos
loop
pop
mov
mov
mov
insl
mov
jb
adcl
mov
push
jg
scas
cmp
stos
pop
pop
inc
rcl
mov
xor
out
loope
test
dec
mov
cltd
addr16
xor
cltd
and
lock
popf
fimull
mov
push
lock
lods
out
and
jb
insl
jne
and
lods
jp
sub
jae
lea
in
xor
scas
in
pop
aaa
rcrl
shlb
movsb
das
cmp
in
lods
xchg
or
aas
outsl
mov
push
push
adc
ret
cmp
aam
push
jmp
outsl
jmp
sbb
add
jbe
icebp
sub
aam
nop
push
xor
shrb
jmp
cld
inc
mov
and
js
jge
ss
add
xor
repz
loopne
xor
xlat
aad
lret
mov
mov
and
mov
cmpsb
xchg
xchg
inc
xchg
xchg
out
xchg
xchg
sbb
rcrl
lcall
mov
arpl
out
lahf
inc
push
cld
int3
repnz
dec
fstl
scas
xor
lea
mov
mov
jne
jecxz
inc
jg
or
stos
push
adc
jecxz
ficoms
xchg
ss
jbe
js
inc
sub
int
ja
mov
cmp
add
cs
test
push
daa
mov
ja
sub
push
cmp
in
and
aas
aam
mov
or
cli
ljmp
push
pop
roll
fmul
pop
xchg
inc
fisubrl
sub
jno
aaa
jns
jae
xchg
adc
or
faddp
push
je
scas
dec
mov
movsb
dec
leave
cli
xchg
or
in
jne
sbb
repz
lds
pusha
cmp
cmp
mov
std
mov
aad
loopne
inc
mov
mov
outsl
popf
dec
push
inc
sub
shll
dec
xchg
jb
jg
cmp
repz
or
pop
mov
rcll
jg
pop
pop
inc
test
es
cwtl
jp
fcomip
imul
and
andb
out
xor
mov
call
fildl
pop
adc
push
cld
sbb
mov
mov
sarb
or
xchg
loop
pop
adc
das
push
mov
pop
sbb
or
push
nop
lret
aam
lret
jle
iret
add
mov
pop
or
inc
push
dec
test
movsb
ljmp
je
out
enter
aad
inc
and
pop
ficoml
adc
jns
popf
lahf
daa
push
stos
std
daa
mov
ret
jg
ss
out
movsl
les
mov
lds
push
or
jle
loopne
dec
scas
jle
das
adc
mov
das
xchg
mov
inc
dec
sub
mov
xor
mov
nop
push
hlt
jns
mov
lret
jecxz
xchg
inc
daa
ret
push
fnstsw
fsubs
inc
paddusw
sub
mov
mov
aaa
jae
popf
inc
daa
add
xchg
sub
jmp
and
out
mov
xor
dec
push
in
dec
mov
scas
or
xchg
sbb
xor
jb
mov
sti
xchg
pop
pop
repz
add
mov
cmp
cs
shrd
scas
popw
iret
stos
lahf
xchg
int
js
mov
or
and
mov
inc
mov
adc
rorl
fdivrs
test
sbb
jge
sub
sahf
sbb
rorb
roll
ret
mov
mov
rolb
test
int
int
inc
stos
jle
vpmaskmovq
lret
addl
popa
repnz
fbstp
inc
dec
xchg
cmp
dec
cmc
mov
push
or
adcl
fdivrl
enter
repnz
and
cmp
pop
inc
enter
mov
xchg
push
cmc
fs
and
outsl
out
sbb
adc
push
jne
enter
xchg
fcmovb
pushf
lcallw
pusha
iret
divl
adc
push
push
pop
pop
mov
mov
mov
sub
xchg
in
fs
mov
jmp
cmp
ljmp
mov
inc
sbbl
lret
or
sti
setp
mov
add
int3
dec
or
dec
test
adc
std
add
jae
mov
push
cmp
add
sbb
lahf
fs
cmc
iret
popa
jl
fistpl
fcompl
jmp
push
cltd
or
stc
mov
cmp
jp
add
pop
or
stc
jp
mov
inc
scas
push
xchg
jmp
mov
mov
in
add
mov
cld
pop
mov
jno
xor
mov
fisubrs
push
ljmp
jmp
fisttps
cmp
imul
xchg
movsb
add
insb
sbb
popa
mov
jl
mov
mov
adc
loopne
mov
ja
loop
sub
inc
sbb
decb
fiaddl
lods
insl
or
lea
notb
out
aam
daa
das
stc
lea
loop
xor
sub
xor
lahf
pop
mov
cmp
add
dec
push
bound
adc
push
imull
pop
cmp
lods
or
dec
jle
jmp
xlat
es
pop
fnstenv
dec
fsubs
mov
ret
repnz
xchg
in
lock
mov
push
sbbl
pop
lret
aad
scas
sbb
add
sar
sarl
aas
lods
jne
dec
jns
leave
push
icebp
mov
addl
mov
push
insb
pop
mov
icebp
lods
lods
in
test
xchg
cmpsb
notl
je
cmp
js
stos
inc
test
lret
ss
bound
push
add
lcall
in
dec
and
adc
mov
ljmp
cld
push
int
mov
test
imul
mov
popa
data16
ljmp
sub
nop
and
adc
add
inc
imul
lods
repnz
lods
mov
bound
inc
and
fsubl
xor
push
mov
xlat
sub
mov
nop
inc
dec
dec
arpl
repnz
das
mov
cs
mov
xchg
jns
or
ljmp
imul
push
clc
imul
loope
pop
push
bound
insb
add
cli
mov
lds
push
bound
pushf
sbb
shll
dec
adc
jmp
fcom
mov
mov
mov
into
stc
test
in
test
fistpl
jl
and
test
xor
inc
imul
adc
fucomip
sarb
push
xchg
pop
mov
inc
mov
arpl
and
mov
and
mov
cld
out
and
daa
mov
popa
repnz
sbb
or
and
mov
and
pop
in
pushf
fs
fcomps
pop
stos
fstl
adc
lods
inc
inc
adc
adc
add
rclb
arpl
cmpsl
pop
loope
outsl
mov
add
mov
insb
mov
xor
shrb
inc
mov
ret
adc
addr16
mov
sti
cli
pushf
mov
fs
movsl
mov
mov
lods
repnz
and
pushf
add
xor
es
xchg
sub
rcll
mov
call
sti
fdivrl
cmp
pushf
loopne
movsl
stos
fcmovu
pop
stc
jg
sbb
out
pop
inc
and
mov
xchg
mov
mov
pop
ret
cli
std
lea
sbb
mov
dec
mov
movl
push
xchg
lods
fiaddl
mov
pop
cli
aad
inc
jae
pushf
popa
sub
aas
lods
leave
inc
push
add
pop
popf
imul
lea
jb
scas
cmc
or
arpl
add
not
inc
add
orl
bound
insb
imul
into
shlb
daa
dec
int
call
addr16
push
jae
daa
iret
or
xchg
sub
and
test
and
mov
sbb
icebp
push
add
xor
mov
subb
mov
aas
cli
cltd
push
fidivl
push
jne
jp
das
inc
divl
mov
arpl
jge
out
into
call
mov
pop
cmc
fdivr
sub
std
mov
push
scas
cmpsl
iret
and
mov
add
push
cli
sbb
push
jecxz
insb
jns
cmp
xor
inc
add
cltd
dec
lods
dec
lahf
je
stos
sub
ds
sub
mov
sbb
stos
push
in
rorb
ficomps
cmpsl
mov
sub
rorl
pop
mov
mov
bound
sub
cmpl
mov
popa
sbb
mov
and
mov
xchg
xchg
mov
popf
mov
sub
and
lahf
out
sub
xchg
test
fistl
loopne
out
hlt
adc
sbb
or
aad
loope
ret
jb
in
mov
imul
xlat
mov
add
mov
jp
mov
inc
std
shrb
pop
arpl
push
hlt
and
pop
stos
dec
stos
int3
clc
gs
push
out
mov
mov
inc
inc
mov
popf
ljmp
shl
int
outsb
xchg
push
fcompl
das
adc
out
shll
lret
jg
std
test
add
adc
jl
mov
testl
leave
or
cld
outsl
lret
mov
or
pop
hlt
sbb
lods
adc
pushf
mov
adc
jl
and
ret
mov
and
in
and
sahf
clc
xchg
mov
mov
xor
dec
jp,pn
lock
jmp
sbb
cltd
inc
push
xor
js
push
dec
pusha
jecxz
aas
xchg
pop
jge
dec
in
jge
add
movsb
arpl
mov
pop
in
and
mov
mov
adc
imul
mov
test
lds
jne
xor
inc
aas
fwait
push
mov
mov
fcomip
lds
and
inc
lahf
push
scas
jmp
mov
enter
jl
cld
inc
es
mov
push
sub
adc
incl
lret
cltd
mov
lock
add
iret
jb
fnstenv
pop
leave
lret
lret
loopne
mov
mov
mov
inc
mov
xor
lea
enter
push
pop
mov
jo
fidivl
adc
aad
inc
les
jle
gs
aaa
push
and
xchg
push
loop
pop
mov
bound
cltd
outsl
pop
js
bound
and
shl
add
les
lods
test
cwtl
imul
sbb
jo
out
mov
and
xchg
mov
in
cmc
mull
out
mov
mov
xchg
jae
test
sbb
test
mov
mov
loope
pop
jl
aas
cmp
fmull
loop
jecxz
mov
lret
shll
push
mov
lret
xor
iret
jecxz
addb
xor
jae
sub
pusha
sub
push
push
xchg
cmc
add
pop
xchg
or
push
add
out
xchg
mov
jmp
pop
loop
sbb
loop
sub
xor
cmp
push
adc
xchg
adc
jo
pop
outsl
movsl
sbb
adc
inc
xchg
fs
inc
out
insb
mov
dec
or
xor
mov
ljmp
inc
mulb
std
adc
push
xor
inc
inc
in
stos
icebp
inc
xchg
mov
push
dec
jae
cmp
and
insl
mov
hlt
push
fwait
sti
scas
cwtl
or
pop
imul
insb
test
or
ror
cmpsb
fnstenv
rcll
nop
loopne
mov
gs
cwtl
fadd
fdivrs
fiaddl
arpl
xor
ja
mov
repz
loope
add
sub
addr16
pop
mov
cmpsb
pop
xchg
or
adcl
xor
xchg
mov
clc
test
push
leave
ja
outsb
jo
push
aam
xor
dec
fmuls
adcl
inc
mov
orl
inc
fistps
push
lods
xlat
mov
sbb
or
mov
pop
cmp
inc
or
mov
leave
repnz
pop
sbb
push
mov
xor
shl
cmp
fwait
or
out
pop
jg
push
push
outsl
out
lret
rorb
cmp
aam
sahf
arpl
xor
leave
fldt
rorl
inc
sahf
sarl
and
je,pn
jp
adcb
pop
mov
in
xor
outsb
push
cmp
xchg
int
push
push
pushf
inc
push
pop
sub
out
inc
into
icebp
xchg
sti
sub
adc
popf
sbb
dec
inc
rcrb
popa
jge
aad
insb
cwtl
loopne
pop
scas
fnstenv
or
loopne
pushf
aad
xchg
test
jle
push
cmpsl
dec
and
cmp
dec
add
jns
mov
lret
pop
mov
sahf
mov
ljmp
stos
nop
or
rcrl
add
cli
push
mov
sbb
jecxz
dec
inc
sahf
in
jge
adc
outsl
lock
jns
sbb
xchg
imull
or
insl
pusha
jge
fldt
mov
scas
sbb
and
jb
push
add
dec
pop
push
movl
mov
mov
xor
push
rcll
in
adc
inc
gs
jno
ret
insb
mov
jg
and
sar
lea
movsb
xlat
cmp
movl
add
outsl
aam
dec
adcl
inc
loopne
in
push
les
popa
int
nop
sbb
scas
outsb
and
pop
jecxz
movsb
nop
lock
mov
out
jns
adc
cld
add
add
sub
les
mov
adc
and
lss
xchg
movb
imul
xchg
xchg
sub
xchg
and
sub
in
jne
mov
xlat
call
outsb
inc
daa
test
popa
xchg
mov
xchg
or
pop
out
pop
cmpsl
cmp
pop
push
outsl
insb
aam
cwtl
addr16
push
add
lret
xchg
fs
mov
add
jns
mov
cmp
cwtl
lcall
add
ja
xchg
mov
cmpsl
push
arpl
inc
jecxz
push
stc
pop
icebp
xor
sbb
mov
das
adc
stc
fadds
dec
add
or
dec
jae
aam
dec
adcb
pop
inc
mov
xor
xchg
mov
and
inc
mov
icebp
jmp
divl
add
mov
cmc
mov
adc
jl
mov
cmp
xchg
insb
test
and
xchg
jge
lock
lds
int
je
ds
and
mov
fwait
dec
loopne
idivb
fists
in
sti
push
cmpsb
inc
loop
aas
adc
ret
lcall
pop
call
mov
sbb
inc
dec
jnp
enter
sub
pop
dec
rcrl
decb
cmp
and
jl
jl
jns
ljmp
ss
and
or
into
xorb
xor
mov
pop
notl
ret
inc
mov
fmuls
insb
inc
mov
cld
popf
lods
jbe
dec
jbe
popf
mov
lds
cmpsb
mov
xchg
fdivs
loope
cmc
mov
mov
jne
push
popa
mov
out
lods
mov
aam
mov
and
aam
mov
cli
cli
insl
mov
repnz
and
push
subb
jle
pop
push
mov
cmc
dec
int3
inc
cmpsl
stc
rcll
add
mov
mov
imul
mov
shl
jns
or
stos
out
xchg
test
popf
shll
mov
addr16
or
xchg
inc
inc
push
jne
and
nop
jecxz
in
mov
jge
test
out
fistpll
aam
popa
int
enter
in
ljmp
mov
add
in
xor
aam
jb
movsb
loop
sub
xchg
mov
sar
int3
repz
mov
xor
incb
mov
dec
push
sbb
adc
cmp
xchg
hlt
xchg
pop
not
negb
push
jmp
lret
mov
jo
testl
push
mov
mov
jnp
add
inc
pushf
add
js
and
inc
faddl
mov
mov
inc
fidivrs
fadd
vaddsd
inc
sub
stos
into
les
fidivrl
dec
fdivs
fs
jecxz
sbb
les
or
movsb
xchg
mov
jmp
dec
and
mov
adcb
cmp
mov
push
xchg
iret
xchg
movups
sbb
mov
addb
js
dec
loope
pusha
sarb
mov
adc
mov
lods
adc
adc
sub
fisttpl
stos
adc
pop
loop
cmc
dec
ds
out
mov
int
mov
in
pop
and
add
add
sub
jmp
fisubs
js
adc
jle
filds
xor
lret
mov
jmp
shlb
cmp
faddl
pusha
pop
dec
sub
inc
adc
arpl
adc
shll
pusha
inc
push
test
add
mov
add
das
cmp
jl
in
jmp
cmp
or
push
sub
mov
lea
adc
ret
rorb
popf
test
mov
mov
cmp
push
in
mov
inc
lea
int3
inc
sbb
mov
jnp
xchg
xchg
outsl
inc
add
xchg
sbb
inc
xlat
xchg
iret
lcall
icebp
sti
push
movsl
jbe
daa
xchg
jmp
notb
push
cmp
jno
jne
arpl
fildl
mov
jle
mov
fnstcw
mov
sub
pusha
jae
push
fidivrl
in
ljmp
cmp
dec
jo
in
rol
add
lret
push
inc
sbb
into
jo
stos
cmp
cmc
inc
push
mov
pop
cwtl
dec
mov
icebp
or
ret
cmpsl
pop
in
arpl
stos
movb
testl
out
adc
loope
dec
dec
cmp
sahf
and
add
ja
lds
mov
insb
dec
cmp
sbb
rclb
leave
rcll
adc
xchg
sti
adc
fmuls
mov
repz
pusha
mov
fdivrs
and
inc
pop
cltd
movsl
cwtl
adc
cltd
inc
pop
jp
stos
repnz
dec
testl
mov
scas
shrb
imul
data16
and
xor
loope
inc
clc
sbb
ss
dec
hlt
mov
jns
mov
or
inc
nop
popa
lock
out
roll
xchg
rol
fwait
push
mov
xchg
idivb
int
cli
jg
stc
dec
push
adc
adc
cltd
stos
cs
ja
xor
pop
mov
lock
mov
dec
test
inc
mov
xlat
jmp
outsb
push
repz
cli
hlt
or
std
in
jbe
pop
xor
pop
into
outsb
jecxz
push
push
push
push
push
mov
add
mov
add
and
stc
lods
push
test
mov
test
gs
lods
and
pop
lds
jp
ret
out
outsl
or
xchg
adc
mov
cs
mov
xor
pop
jbe
or
sbb
sti
or
jne
pop
push
je
xchg
push
insl
mov
test
mov
out
es
lret
lahf
pusha
xchg
call
or
pop
pushf
loope
scas
mov
rclb
xchg
mov
jo
int3
push
mov
or
lret
imul
xchg
push
or
sbb
add
mov
sbb
and
inc
cld
adc
jle
dec
lds
push
jbe
xchg
fcoms
adc
pop
push
sbb
lea
and
mov
int
data16
je
jmp
test
pop
fnstcw
pop
in
jae
sti
xchg
push
scas
lret
sbb
xchg
pop
mov
mov
mov
bound
or
add
sahf
addr16
inc
leave
mov
popl
pop
daa
lock
scas
add
mov
sub
add
jmp
sbb
sbb
pop
ficompl
dec
in
in
xchg
mov
fsubs
sub
pop
jae
repnz
mov
stc
pop
imulb
add
movsb
xor
adcb
xchg
jo
pop
mov
jnp
xor
sbb
dec
push
dec
jno
mov
and
inc
fmul
loopne
pop
cmp
inc
into
xor
ret
cmpl
fdivrs
lods
clc
call
stos
out
cwtl
xchg
or
loop
jmp
pop
cmp
enter
popl
adc
out
addr16
pop
insb
les
loop
mov
inc
or
insl
jbe
lock
add
cmp
shrb
xor
int3
jl
adc
cmp
subb
cmp
lock
sbb
int3
mov
cmp
xchg
inc
stos
add
lock
ss
das
fsubrs
lods
repnz
xlat
sub
imul
das
lea
pop
jae
jae
clc
int3
mov
dec
insl
out
pop
mov
insb
out
jmp
pop
ds
jb
ljmp
jle
push
sbb
test
lods
adc
and
or
mov
adc
sub
popf
push
ds
fisubs
lcall
and
clc
cmp
cltd
cwtl
fsubrl
clc
add
adc
int3
popa
mov
push
adc
addr16
stc
push
mov
mov
mov
out
imul
adc
pop
adc
mov
jnp
lock
adc
jno
mov
imul
jb
hlt
out
outsb
mov
and
insl
xorb
ds
xor
add
ja
jg
sti
pop
inc
xchg
mov
aad
xchg
jmp
and
cmp
pushf
mov
cmpsl
mov
xchg
push
jge
in
pop
in
jns
pop
test
fwait
js
lods
push
push
adcl
jmp
sub
add
ljmp
int3
mov
andl
dec
clc
int
cmpsb
loopne
cmc
lods
cmp
mov
xor
pushf
scas
mov
sbb
insb
xchg
fstps
stos
jnp
or
out
nop
rol
pop
inc
lret
push
std
int3
jno
fwait
xchg
adc
inc
add
pusha
js
or
cli
dec
call
dec
ret
addr16
push
ljmp
aaa
pop
dec
add
cli
movsb
shr
xchg
xchg
movsl
xor
sbb
mov
dec
cs
jae
lcall
dec
dec
jmp
dec
jnp
or
cmp
push
sub
add
push
bound
push
mov
mov
inc
push
cmp
into
jg
daa
lret
cmpl
cmp
cmp
jg
inc
xchg
and
mulb
xor
push
data16
mov
cmp
cld
rclb
outsl
nop
gs
in
imul
rclb
jmp
js
push
popa
stos
dec
sbb
pop
adc
push
pusha
xlat
out
mov
xchg
out
cld
in
jns
add
popa
cmc
out
mov
sub
dec
dec
popf
inc
push
sti
inc
xchg
fwait
jecxz
or
je
cmpsb
push
mov
les
sbb
push
bound
jmp
push
fnstenv
scas
push
cmc
adc
popa
fwait
test
jmp
insl
mov
cli
dec
aas
jl
and
pusha
sahf
aaa
aas
jno
aaa
sbb
sub
or
add
sbb
xchg
jae
push
cmp
inc
mov
and
decb
cmp
cmp
shrl
mov
sbb
les
adc
mov
mov
cmp
mov
pop
clc
adc
cmp
mov
or
sbb
pop
jmp
loop
adc
or
xor
fidivs
sbb
mov
out
cwtl
mov
add
mov
enter
sub
dec
iret
xchg
data16
std
in
cmp
dec
xorb
imul
adc
push
movd
stos
adc
ficomps
int
ret
cltd
jno
outsl
xlat
sub
add
subl
or
pop
pushf
lahf
dec
aam
or
clc
jg
fnstsw
jns
fmulp
pop
hlt
mov
mov
idiv
dec
adc
or
sbb
jno
outsb
lahf
push
mov
ja
hlt
dec
mov
jb
mov
push
pop
sahf
push
lea
hlt
xchg
out
test
mov
test
fsubrl
jae
mov
call
sahf
testb
lds
xchg
cltd
imul
in
adc
push
enter
mov
jo
mov
mov
xor
je
and
jne
out
cmp
or
adc
nop
loopne
add
push
adc
out
mov
rclb
mov
push
pop
adc
pop
pop
hlt
dec
test
test
mov
ror
in
and
pop
dec
mov
stos
xchg
ret
sub
lret
jg
mov
repz
dec
stos
fcomps
imul
dec
cmp
mov
and
xchg
pusha
mov
es
or
or
xchg
lock
adc
pop
stos
push
jmp
fnstsw
sbb
es
xchg
xor
sbb
add
out
xor
and
mov
leave
pop
push
in
pop
cld
shlb
push
pop
decl
in
pop
out
and
cmp
leave
xchg
xchg
pop
pushf
xchg
int
das
xchg
fsubl
in
push
mov
cmpsb
push
outsl
dec
lret
in
mov
cmp
rcrb
or
mov
inc
test
repz
xor
or
mov
add
or
call
data16
frstor
push
sub
jno
popa
lods
push
ror
or
xchg
in
insl
push
fcompl
mov
or
pusha
andb
jmp
pop
xor
mov
inc
and
daa
xor
xlat
inc
pop
push
cli
enter
pop
sub
les
pop
lea
xchg
xor
cmpsl
es
mov
test
adc
mov
jbe
push
fmull
loop
or
int3
out
add
mov
and
dec
sub
xor
push
push
inc
push
fdivr
scas
mov
repz
mov
fstpt
in
ss
in
in
lret
pop
xlat
popf
add
in
shr
out
stos
cmpsl
mov
nop
mov
dec
ret
int3
jecxz
sbb
je
ret
sbb
push
or
data16
and
pop
stos
test
sub
jge
sbb
cmp
dec
daa
loop
mov
and
mov
popa
rolb
aad
add
outsl
roll
adc
cmp
sub
xor
sti
or
dec
js
in
enter
push
mov
std
sub
xor
fistps
ljmp
loop
stc
add
std
movl
sbb
aas
mov
rorl
mov
push
daa
mov
push
in
loop
pop
shll
imul
ss
mov
rcr
xlat
int
sbb
mov
dec
push
cmc
scas
icebp
sub
aam
rclb
jo
repnz
mov
jmp
mov
clc
fmuls
push
mov
das
dec
lcall
inc
daa
jecxz
mov
insb
sbb
ja
xor
repz
pop
iret
inc
in
nop
int3
test
push
push
int
lock
inc
inc
jecxz
cmpsl
inc
test
jae
dec
hlt
scas
mov
push
and
in
and
stos
repnz
jp
dec
xor
xor
adc
scas
sub
mov
sub
dec
fs
push
jecxz
sub
jl
pushf
push
repnz
mov
mov
movsb
xchg
ret
cs
aam
inc
jne
jl
mov
push
cld
push
adc
es
adc
pop
pop
mov
cmp
pop
movsl
imul
lahf
movsb
icebp
and
cmp
stc
outsl
insb
out
ss
jb
pop
and
push
push
arpl
push
outsl
shlb
cmp
test
jb
sbb
enter
sarl
cmpsl
xchg
arpl
sub
hlt
clc
rolb
and
movsb
shlb
xor
jl
add
mov
sahf
imul
in
jbe
out
sbb
add
or
ret
jge
mov
jecxz
xchg
fistpll
xchg
pop
xchg
jb
lcall
add
push
sub
and
aam
adc
sbbb
inc
addps
hlt
inc
test
sbb
ret
movsb
cmpsb
xchg
add
cs
mov
scas
sar
inc
idiv
outsl
outsl
fadd
popa
ja
cltd
xchg
cmp
xchg
stos
insl
mov
pop
inc
popf
jo
iret
dec
inc
loop
cld
sbb
jns
dec
add
add
sbb
in
and
pusha
jp
push
or
mov
push
rep
cmp
jle
mov
in
pop
pop
cwtl
xchg
cwtl
push
jge
adc
ds
add
mov
dec
xchg
push
mov
dec
and
decl
mov
pop
mov
xchg
cmp
dec
sub
mov
mov
mov
sub
sahf
ljmp
push
xchg
cltd
pop
es
test
out
fsubrl
in
sub
cmp
inc
les
mov
icebp
pop
daa
popw
push
sbb
out
mov
es
add
add
in
test
cmp
push
push
adc
fsubrs
outsl
jns
sbb
jbe
mov
dec
arpl
mov
adc
mov
push
dec
mov
add
repz
mov
and
mov
mov
pushf
inc
stc
jne
sbb
sbb
test
cs
stc
fcmovnbe
and
jg
xor
mov
imul
sub
cmp
sarl
adc
pop
push
xor
dec
repnz
jo
test
out
in
or
dec
mov
cmp
push
add
jmp
js
pop
test
andl
mov
stc
sbb
loop
jo
arpl
jbe
cmp
fcomip
xchg
enter
and
pop
jns
add
pusha
push
sub
mov
push
add
dec
xchg
push
xor
dec
cld
ss
subl
call
ret
arpl
xchg
sub
outsl
dec
add
jne
lods
pushf
test
cld
es
mov
call
add
add
sub
lret
and
cmp
int
inc
fistpl
cwtl
add
sbb
pop
mov
and
aad
testb
and
mov
imul
scas
loope
ja
rcrb
jae
jl
cltd
test
adc
and
into
jge
jbe
mov
fbstp
fsubr
mov
push
push
cmp
inc
xor
push
pop
mov
xchg
cs
addb
ret
and
sub
mov
in
pop
push
stos
push
push
add
or
in
and
xchg
cmp
cmp
add
sbb
and
clc
lret
sbb
jo
loope
les
xor
shl
loop
sub
pop
stos
cmpsb
jae
shl
roll
pop
aam
mov
pop
jns
testl
mov
sub
js
movb
xchg
and
xchg
add
xor
push
and
add
jmp
ds
rclb
xchg
xlat
mov
test
test
aad
jmp
mov
ret
push
cmp
fildl
popa
adc
cmp
in
adc
imul
pushf
mov
or
xor
ja
pop
jle
xchg
xorl
es
fs
fldenv
dec
mov
cmp
cltd
fst
sub
fdiv
aad
sub
sbb
fucomip
xchg
mov
in
inc
aam
dec
push
loope
dec
test
inc
or
rcrl
and
lea
nop
roll
pop
push
inc
cmc
int
jl
jmp
fwait
lods
fidivrl
nop
pop
lock
pop
aas
xor
jbe
jae
leave
jle
outsl
inc
jne
mov
fsubs
in
cmp
adc
mov
test
pop
pop
adc
sub
push
scas
wbinvd
add
scas
cltd
push
and
add
mov
push
pop
frstor
sub
mov
cvtpi2ps
add
adc
xchg
xchg
sub
lock
push
and
push
rcl
out
in
scas
test
pop
shll
jp
dec
movsl
dec
cmp
ja
jge
cmp
xor
add
sbb
shlb
inc
aas
cmc
mov
idivb
sbb
out
pop
adc
mov
mov
mov
jl
scas
cmpsb
cmpsb
push
xchg
out
roll
js
mov
test
mov
mov
mov
movsb
lods
nop
jb
inc
jnp
mov
mov
mov
je
cmp
pop
popf
xor
xchg
das
test
adc
outsl
lret
add
lret
aad
and
es
into
sbb
sahf
push
aam
pop
add
jle
inc
sub
sub
inc
gs
or
insl
inc
mov
cwtl
pop
je
sti
jle
adcl
xchg
pop
test
and
mov
out
jne
pop
repnz
lcall
adc
pop
sti
lds
or
adc
sbb
mov
lret
cmp
pop
or
mov
mov
add
and
pusha
cmp
cwtl
test
cli
adc
enter
cmp
inc
jbe
push
lcall
lea
in
testl
arpl
or
daa
xlat
mov
xor
nop
mov
inc
xchg
loop
jno
inc
decb
xchg
mov
mov
inc
bound
adc
sbb
jb
xor
in
sub
inc
and
sar
xchg
jl
aaa
repz
push
pop
lret
cltd
ja
inc
mov
inc
jns
insl
sub
pop
jo
scas
out
jl
rolb
sbb
lea
jno
test
push
sbb
or
scas
loopne
cmpsl
push
and
or
xor
xor
dec
xchg
out
dec
popfw
stos
in
aaa
aad
test
pop
jge
lea
cs
mov
idivl
mov
mov
les
pop
dec
xor
push
dec
imul
jnp
addb
and
pcmpeqd
add
xchg
jno
js
xchg
testl
xchg
ret
sbb
mov
lods
sarb
daa
movsb
xor
lds
mov
insl
mov
imul
imull
hlt
pop
les
xchg
leave
pushf
jbe
push
push
es
int3
cmpsb
popf
loop
pop
sar
dec
ds
add
jecxz
ror
add
lcall
sub
pop
jnp
addr16
mov
fwait
jge
mov
sarb
int3
sbb
lcall
cmp
sub
clc
movb
xlat
adc
inc
insb
cmc
dec
jp
jb
mul
test
or
jbe
sub
and
or
pop
cltd
add
pop
sti
cmp
call
xor
cli
mov
sub
sub
das
pop
sub
fdivs
xchg
cld
add
mov
out
sub
lret
inc
xchg
adc
outsb
cmc
iret
and
pop
add
mov
xor
in
push
xchg
test
es
pusha
mov
lahf
push
leave
cld
jo
mov
es
adc
pop
mov
push
jae
imul
or
xor
repnz
lea
sbb
cmpsb
sub
and
sar
jg
sub
pop
scas
push
ljmp
rol
out
mov
insb
lcall
lcall
dec
mov
adc
xor
dec
pushf
addr16
add
lcall
mov
pop
test
mov
cltd
pushf
and
mov
sub
xlat
sub
adc
pop
ss
pop
xor
inc
add
dec
in
or
mov
mov
pop
in
aaa
repnz
pop
mov
add
jge
mov
push
mov
mov
xor
out
inc
aas
sub
xchg
inc
imul
xchg
out
mov
pop
gs
mov
adc
int
xor
and
sub
xchg
mov
cmpsb
ret
mov
push
dec
sbb
xor
sti
jne
and
add
sbb
and
shr
cwtl
cli
xchg
andb
xchg
dec
mov
adc
sbb
insl
iret
test
mov
bound
push
jmp
sbb
add
add
int3
dec
xor
test
adc
sub
sbb
push
mov
jnp
roll
cmpsb
fcmovne
aaa
das
mov
cmpsb
pushf
ds
scas
jbe
out
sbb
fildl
ljmp
xchg
repnz
or
inc
xorl
and
dec
mov
idiv
fisubl
dec
out
subl
xchg
jl
and
adcb
push
dec
mov
js
ja
jg
stos
jl
xchg
sbb
popf
into
jge
fwait
nop
adcb
cwtl
lret
add
sbb
mov
mov
add
pop
xor
imulb
cmp
lcall
or
mov
xor
icebp
inc
inc
cmp
jo
ret
jnp
rcr
mov
jg
cmp
push
push
jb
mov
mov
outsb
mov
je
faddl
sti
cmp
cmp
pop
lods
mov
ucomiss
out
push
in
outsb
and
notb
fs
xchg
lret
aad
sbb
push
pop
int
insb
mov
xor
xor
cli
sbb
cmpsl
je
mov
adc
in
or
sbb
sbb
push
mov
sbb
xlat
dec
insl
xor
stos
fidivrl
dec
icebp
hlt
sub
cmp
mov
les
popa
sbb
mov
push
mov
jp,pn
or
cs
ret
push
cmpl
push
and
push
xor
sbb
add
int
repz
cltd
addr16
inc
test
test
movsb
sub
iret
xchg
aas
shl
xor
lret
pushf
inc
mov
aaa
ss
pop
shll
int
cs
and
repz
dec
pop
pop
aaa
movsb
dec
int
inc
in
cmp
dec
xchg
xchg
xor
movsb
flds
adc
pop
inc
fbld
xor
inc
pop
xor
jne
push
and
mov
loope
inc
ret
in
pop
test
push
xlat
adc
cmc
dec
clc
dec
mov
mov
push
into
sbb
pop
popf
jl
pop
call
loope
sub
cmc
jecxz
xor
ja
cmp
sti
or
dec
iret
cld
cmp
ret
data16
int
xchg
or
sbb
jle
pop
shlb
cmp
dec
cli
jle
lea
mov
mov
mov
out
std
inc
in
insb
pop
jo
push
lods
jl
outsb
mov
xchg
lock
xchg
and
cltd
push
mov
mov
lea
mov
mov
inc
stos
push
fisubs
pushl
and
adc
je
shlb
xor
cs
lcall
mov
sbb
xchg
inc
insb
lods
mov
sub
xor
movsl
sub
mov
pop
mov
mov
pop
inc
mov
jne
cmpsl
mov
rcrl
adc
and
popf
xorl
jnp
push
mov
std
xor
ljmp
mov
fimull
or
jne
loop
dec
adc
pop
dec
push
dec
les
mov
mov
or
adc
xor
and
jo
xorl
stc
mov
gs
sub
sbb
out
mov
loop
and
xchg
loope
mov
loope
and
adc
jae
repz
pushf
enter
push
stos
mov
pop
inc
mov
outsl
mov
cmp
orb
sti
mov
fnstsw
loop
enter
fnstcw
mov
daa
mov
fldcw
out
push
stos
sbb
stos
mov
or
hlt
int3
adc
shl
mov
mov
addb
pop
cmp
data16
testl
movsb
mov
repnz
dec
inc
jmp
test
mov
test
pop
inc
fwait
js
data16
inc
push
iret
xchg
adc
add
push
imul
adc
or
mul
xchg
stos
dec
ljmp
sub
pop
pop
incb
jne
subb
sar
out
mov
fxch
dec
xchg
fsubl
pop
out
sbb
inc
leave
sbb
lock
data16
pslld
out
dec
addb
xchg
in
ljmp
cmpsb
or
rcr
mov
popf
inc
loop
push
pushf
add
add
cwtl
mov
in
cltd
mov
test
sbb
outsb
stos
sub
ss
mov
jl
divl
sbb
iret
xor
in
cld
and
icebp
in
mov
sti
inc
mov
inc
xchg
rorl
lahf
pop
pop
jnp
push
rolb
adc
add
lret
stc
inc
lcall
scas
je
sbb
in
mov
xor
cld
and
loopne
in
mov
loop
lock
scas
xchg
mov
aaa
push
pop
dec
xor
xchg
int3
sti
in
push
xchg
sbb
mov
fiaddl
cmpsb
sbbl
fisubl
mov
cld
inc
dec
sbb
adc
push
pop
daa
aad
mov
setle
frstor
subb
insb
movsl
inc
dec
mov
into
add
add
pusha
addl
xor
ret
imul
lds
enter
lahf
xchg
pop
jle
pushf
pop
fwait
xor
rcll
std
xor
pop
xchg
jns
xchg
ljmp
out
movsb
fsubs
mov
adc
test
push
movsl
mov
sahf
enter
push
bound
mov
or
dec
pop
cmpsl
mov
mov
sbb
pop
imul
das
sbb
dec
cmpsb
inc
ja
inc
movsl
in
data16
lea
xchg
bound
jbe
sarl
daa
test
or
jecxz
jl
iret
mov
adc
call
int3
aaa
int
mov
out
inc
pop
xor
aam
xor
mov
faddl
xchg
and
jecxz
mov
insl
fwait
pop
xchg
push
mov
je
cmp
sti
push
jo
ds
xor
movsb
push
out
nop
fimuls
sbb
inc
lock
mov
dec
filds
pop
clc
add
xchg
fstpt
insl
mov
subl
and
jae
and
pop
pop
mov
in
adc
push
insl
sahf
rorb
andb
dec
iret
sub
push
or
test
cmp
xchg
into
mov
inc
lds
xor
pushf
xor
mov
test
mov
rcll
andb
cmp
decl
test
popf
cmp
pop
sahf
nop
popf
jns
mov
push
fwait
hlt
dec
inc
int3
leave
xchg
cmpsl
loope
std
jmp
dec
sarb
test
daa
loop
xchg
or
out
sbb
or
ss
add
xchg
pop
insb
cmp
cmp
xor
repnz
or
pop
aaa
test
jg
daa
fimull
dec
push
out
or
icebp
mov
inc
scas
jmp
and
and
in
mov
sbbl
fldcw
push
rorl
shlb
mov
push
sub
and
inc
notl
cmp
cmp
xorb
xchg
scas
mov
lret
jecxz
out
lods
fsubrs
push
dec
mov
arpl
in
push
addr16
mov
dec
jb
cwtl
adc
mov
jo
and
test
mov
xchg
mov
rorb
sbb
addr16
and
call
ficoms
cwtl
loop
or
cwtl
lret
add
out
cmp
movsl
lds
dec
ljmp
and
sbb
nop
lock
mov
push
mov
dec
pusha
xor
and
pop
daa
loopne
mov
xorb
sbb
push
popl
out
dec
mov
xor
lret
dec
scas
and
and
es
imul
mov
dec
cmp
inc
push
adc
call
sub
and
sarb
xor
jge
jns
jno
ja
jg
cmp
or
fadd
dec
pop
aad
jo
xor
mov
sbb
out
inc
inc
stos
cmp
mov
jecxz
lret
pop
movsb
jns
inc
cmp
out
adc
imul
sbb
call
sbbb
lcall
lods
pushl
jmp
dec
ret
adc
jmp
push
jns
bound
mov
sub
and
leave
push
pop
pop
out
mov
dec
imul
jns
in
and
les
lods
jne
xchg
addr16
lahf
xchg
addr16
frstor
inc
popa
in
push
addl
enter
in
rorl
hlt
rol
vsqrtpd
sbb
lock
adc
pop
adc
mov
adc
stos
mov
xchg
cmp
adc
jmp
xorl
pop
ja
orb
jp
stc
cmp
cmp
sub
jbe
add
mov
dec
inc
sbb
adc
add
negb
arpl
xor
daa
add
cmp
mov
push
mov
int
cmp
push
cld
fistpl
or
fadds
mov
push
jp
out
lret
out
aaa
mov
es
xchg
cmp
aad
bnd
sarl
add
mov
adc
push
adc
cwtl
iret
aad
or
add
in
add
xlat
adc
lods
pop
cmp
int
mov
adc
inc
rcrl
aam
mov
lods
insl
outsl
clc
inc
push
adc
outsb
mov
xchg
int3
cli
cli
xchg
stos
push
adc
jg
xchg
adc
call
std
or
jmp
add
dec
dec
push
or
cmc
jo
cmpsb
cli
jg
aad
shlb
fcoml
subb
cmp
push
cmp
in
xchg
enter
adc
jmp
rolb
mov
push
pop
lret
adc
cmp
fistpll
movsb
cmpl
sub
jl
adc
xchg
jo
cmc
add
inc
outsl
dec
fucomip
mov
fcmovbe
pop
aam
mov
bound
out
sub
add
xor
fs
and
pop
mov
pop
jnp
lret
nop
and
push
cmpsb
push
lock
push
mov
dec
shlb
add
mov
or
cld
cltd
movsl
xlat
mov
dec
push
pop
add
sub
sub
mov
mov
sbb
insl
sbbl
sbb
sbb
xchg
jp
fs
repz
leave
jge
movsb
jno
insl
xor
or
mov
add
aaa
push
mov
jo
outsb
xchg
push
jnp
aaa
dec
stos
xchg
cld
in
sub
gs
add
adc
push
xchg
loopne
adcb
or
mov
aam
or
or
loopne
ret
cmpsb
add
inc
sbb
push
addr16
mov
xor
inc
call
sbb
sub
xor
mov
out
and
push
sti
popa
ja
out
mov
in
cs
mov
sub
int3
or
sbb
mov
xchg
push
scas
mov
jmp
jne
add
nop
cmp
pop
fwait
jae
push
jo
dec
xchg
dec
sub
or
imul
dec
les
decl
dec
pop
mov
cmp
pushf
mov
mov
test
daa
ja
shl
inc
add
adc
insb
inc
fwait
mov
js
adc
mov
mov
fiaddl
scas
pop
xchg
aaa
fdivl
mov
imul
or
inc
jbe
cld
lock
inc
xchg
sti
push
inc
mov
sbb
adc
pop
icebp
divl
js
pop
add
dec
mov
xor
push
pop
sub
push
mov
mov
out
xchg
das
mov
or
push
sub
pop
mov
jecxz
inc
std
lret
xchg
bound
loopne
and
jb
loopne
mov
fdivrl
xor
inc
cmp
adc
xlat
insl
and
mov
std
ret
push
jae
out
cwtl
push
inc
sbb
and
dec
fcomp
sahf
adc
ret
enter
xor
push
xlat
lahf
outsb
jns
dec
jne
mov
jl
adc
xor
or
dec
in
dec
or
xchg
cld
pop
inc
and
mov
dec
jo
adc
mov
adc
jmp
jecxz
es
lcall
mov
or
aas
cs
data16
fidivs
pusha
inc
dec
jmp
insb
inc
lock
jbe
xchg
lcall
std
daa
scas
push
data16
mov
or
mov
dec
xchg
aam
sarl
insb
add
je
xlat
lock
aad
xchg
xchg
pop
inc
std
adc
int
xor
shll
pop
mov
cmp
aad
ret
sub
fwait
aam
adc
ds
repz
add
jecxz
pop
pop
or
cmp
push
add
dec
lea
cmp
mov
mov
adc
or
jne
add
xchg
fists
data16
and
mov
cld
jg
into
dec
xchg
xchg
dec
out
jns
imulb
inc
lock
in
sub
lods
dec
cmp
pop
inc
inc
mov
insb
out
jge
push
mov
ficompl
and
daa
fiadds
push
inc
into
pushf
pusha
inc
testb
dec
std
xor
xor
mov
in
mov
cmp
dec
aas
test
cmp
pop
push
jbe
aas
jnp
fisttpll
fisubrl
or
mov
jns
jp
or
insl
movl
outsb
cld
mov
pop
mov
xchg
arpl
popa
les
clc
bound
lret
and
xchg
and
jns
pop
inc
pop
sub
mov
lock
or
inc
mov
mov
mov
xchg
jg
adc
and
stc
lret
xchg
and
clc
int3
add
je
dec
push
mov
lock
mov
cmc
adc
push
int3
xor
aam
adc
pusha
in
sbb
ja
sbb
pushf
into
cmpb
inc
mov
aas
cmp
cmc
push
popf
scas
fld
rclb
xor
xchg
xor
dec
leave
dec
cwtl
xor
mov
movsb
push
popf
mov
ror
push
fistl
data16
mov
pop
jae
push
mov
cmp
jae
pop
flds
roll
data16
cmp
mov
jge
xor
push
clc
or
jg
xor
add
mov
out
cmp
int3
shll
dec
add
cli
iret
flds
fcoml
pop
cmpsl
sub
sbb
mov
pop
dec
lahf
sbb
jg
stc
clc
push
mov
stos
pxor
ja
sub
mov
clc
lods
add
xchg
loopne
addr16
data16
scas
xor
xchg
jne
and
jne
dec
jae
or
adc
mov
ficompl
imul
hlt
popa
movsb
adc
data16
aad
mov
stos
out
stos
jno
mov
scas
pop
xchg
cmp
adc
icebp
jle
jb
loopne
or
jmp
mov
sti
xlat
push
mov
jmp
outsl
outsb
and
mull
xchg
adc
xor
mov
dec
add
lea
cltd
mov
pop
aam
xor
mov
shrb
decl
lcall
fistps
fisubs
rorb
mov
add
push
loope
push
cli
insl
out
mov
push
sbb
cmp
add
ss
push
jns
push
test
test
shlb
or
lret
push
mov
lods
mov
cltd
mov
mov
mov
stos
adc
xor
aad
insl
jnp
in
push
out
data16
mov
jmp
inc
push
cmp
inc
lock
les
popa
stos
dec
frstor
mov
push
inc
call
jecxz
mov
jo
in
scas
push
orl
inc
fadds
comiss
push
repnz
into
enter
fucom
aad
fistps
sub
aam
movl
roll
sub
xchg
movsl
push
dec
ss
mov
loope
xchg
sahf
notl
bound
mov
mov
dec
das
sti
daa
cmp
cltd
inc
cmp
jge
out
clc
ss
fwait
xchg
mov
decl
xor
repnz
mov
nop
sbb
lock
not
loop
adc
jnp
push
cwtl
shr
addr16
andb
inc
aaa
xchg
add
sahf
xchg
jbe
jbe
xor
orb
std
repz
xor
rcl
cmp
xchg
cmpb
mov
mov
jb
scas
inc
inc
or
jne
mov
mulb
adc
xor
pusha
jge
movsl
outsl
int3
add
pop
mov
aad
loop
push
add
mov
jno
dec
leave
dec
mov
add
fistl
sbb
dec
jmp
mov
xlat
adc
js
cmpsb
xchg
xor
dec
jp
das
xchg
jge
dec
scas
and
std
sub
ljmp
imul
add
mov
pop
in
addb
mov
sbb
nop
jnp
mov
cwtl
pop
shll
in
aad
adcb
rorl
aas
or
jns
test
xor
pop
ret
dec
mov
lret
mov
lahf
stc
les
notl
and
cmp
popf
repnz
into
sbb
rcll
jmp
in
pop
mov
and
mov
movsl
cmp
lock
mov
jl
scas
lods
clc
add
or
repz
mov
loop
das
loop
stc
inc
cmpsb
rcll
pusha
clc
mov
call
xor
and
adc
xor
fstpl
lods
addr16
icebp
cmp
dec
xor
ja
sbb
add
xchg
cld
cltd
fwait
stos
cmp
out
mov
cmp
or
fmul
ds
stos
or
pop
pop
add
adc
in
adc
mov
dec
fisttpll
sbb
xchg
dec
mov
or
or
shlb
data16
lea
mov
sbb
xchg
arpl
inc
add
add
sub
lods
adc
sbbl
add
pop
inc
or
leave
xlat
xor
scas
jge
xor
push
inc
mov
stos
push
stos
ljmp
cmc
adc
rolb
add
and
aad
push
xchg
mov
mov
lock
rolb
lret
scas
inc
jbe
popa
xchg
pusha
gs
mov
daa
sbb
shlb
jmp
xchg
add
icebp
imul
loope
jae
in
fsubr
mov
fbld
hlt
xchg
ror
push
dec
inc
pop
mov
testb
das
push
in
stos
mov
movsl
adc
lds
cmpsl
add
test
mov
fdiv
jne
lea
int3
adc
and
test
cld
out
inc
add
rorl
inc
pop
mov
dec
lods
shlb
shll
test
enter
scas
mov
call
mov
push
into
push
jnp
sub
test
push
loope
and
in
ja
xlat
adcl
loop
and
mov
add
call
mov
mov
out
mov
and
cmp
push
inc
or
rorb
shrb
xor
in
push
test
mov
add
or
add
inc
inc
fidivl
sub
mov
dec
clc
out
stos
cmc
sbb
mov
inc
and
inc
aaa
aaa
mov
pop
jg
test
ljmp
lahf
outsl
mov
mov
out
test
push
and
mov
inc
scas
xor
jmp
inc
imul
arpl
jb
addl
cmc
lds
xchg
adcb
or
fs
sbb
mov
fimuls
adc
stos
inc
iret
mov
add
dec
gs
mov
notl
push
jb
cld
rol
std
xchg
int
insb
mov
movsb
int3
lods
jp
loopne
imul
mov
push
test
sub
ljmp
sub
mov
repz
sub
or
imull
mov
push
add
and
cli
pop
push
inc
ret
out
movsb
mov
stc
dec
cmp
imul
push
push
push
cli
clc
sbb
jae
mov
or
mov
mov
das
in
scas
stc
je
cmpsl
cmp
shrb
fdivrp
cltd
sub
cs
es
dec
mov
mov
scas
xchg
sub
sbb
jmp
repz
add
rorb
test
fs
push
stc
out
mov
push
daa
jb
xchg
xor
or
sbb
ljmp
mov
in
xchg
leave
les
sub
sub
xchg
lods
jge
mov
out
mov
fimull
jb
shll
add
sbb
sbb
jo
aaa
push
lods
push
or
js
popf
cltd
outsb
imul
psllq
cli
popa
cwtl
fwait
arpl
in
jp
in
add
outsb
inc
sbb
mov
sahf
mov
ret
movsl
add
stc
insl
popa
adc
loopne
test
or
aas
sub
sti
gs
jmp
pusha
mov
fimuls
mov
bound
pushf
or
inc
negl
insl
push
les
pop
das
sub
mov
lods
mov
xchg
jbe
lock
dec
inc
out
jns
cmp
ljmp
push
bound
sbb
inc
fildl
in
fwait
test
sub
adc
outsb
les
data16
push
mov
mov
lcall
mov
enter
mov
fistps
lahf
mov
test
pusha
sub
mov
inc
xchg
fcmovb
mov
enter
incl
inc
jl
das
stos
loopne
inc
fldenv
testb
pop
xchg
aad
sub
sbb
fs
lahf
call
inc
pop
in
pusha
adc
xor
xor
jo
loop
fmuls
les
mov
push
dec
stos
push
push
or
and
adc
jno
insb
je
and
movsb
pop
adcb
pop
jno
or
mov
je
push
cmp
adc
shlb
dec
test
xor
ja
lods
xchg
and
movsl
push
lret
add
aaa
xor
pop
subb
mov
dec
mov
push
rcrl
fdivs
push
int
outsl
dec
enter
pushf
xchg
nop/reserved
jae
mov
jnp
add
js
fnstenv
jne
xlat
mov
mov
bound
fwait
jecxz
mov
and
rep
ljmp
push
pusha
out
ret
mov
pop
push
stc
fdivl
cmc
and
cs
shlb
rcrb
jge
jg
imul
dec
lods
sarb
jnp
xchg
cld
jnp
lcall
mov
mov
pop
fisttpl
stc
popf
mov
outsl
addr16
negl
mov
sbb
les
add
or
cmp
mov
ret
sbb
insl
mov
inc
imul
inc
dec
repz
movsl
mov
rcll
std
in
cs
rolb
jge
sub
push
sahf
arpl
cmpsb
inc
cli
lahf
add
bound
in
mov
mov
mov
adc
scas
adc
jecxz
pop
fxch
dec
and
stos
mov
into
pusha
cmp
pop
cli
sub
mov
cli
mov
jbe
shrb
jl
or
outsl
jle
xlat
ja
xchg
rclb
lahf
js
inc
push
jp
pop
enter
fisubl
push
mov
mov
xor
movsb
cmp
and
push
xchg
push
sub
adc
jge
fimull
or
adc
mov
cmp
xchg
adc
cmpsb
cmpl
in
mov
xchg
pop
mov
push
enter
faddl
push
cmp
popa
adc
sbb
scas
sub
xor
cwtl
call
pop
shlb
mov
rorl
xor
mov
idivb
jne
cmp
pop
xor
xchg
test
jb
iret
dec
and
and
dec
ficomps
xchg
leave
in
dec
sbb
mov
dec
dec
test
inc
adc
pop
movsl
sbbl
xchg
adc
idivl
sti
or
and
xchg
dec
pop
adc
outsl
bswap
cmc
jl
push
push
sub
fnstenv
dec
jecxz
iret
mov
data16
loop
adc
push
inc
mov
push
je
dec
xchg
adc
sbb
insb
call
pop
loopne
dec
mov
inc
aad
sub
jp
mov
mov
das
add
inc
jg
jge
or
lea
repnz
xlat
or
xlat
mov
ret
push
xor
dec
add
mov
lcall
cld
and
nop
mov
jle
mov
sbb
add
movsb
stos
paddd
andl
rolb
rorl
pop
mov
aaa
cli
into
rcll
pop
jge
push
xor
sub
add
imul
sbb
fldcw
and
lds
dec
pushf
mov
std
add
ja
fsubs
sbb
loop
leave
xor
xchg
jb
dec
dec
pop
fisubl
fsubrl
popa
inc
adc
pusha
adcb
xchg
xchg
out
fdivs
iret
imul
cmp
std
bound
inc
sarl
mov
mov
dec
testl
int3
orl
outsb
das
add
push
and
and
stos
into
push
lods
loopne
jbe
popf
aad
mov
jge
stos
outsl
loopne
orl
jns
mov
xor
xchg
inc
leave
lret
inc
jmp
xor
mov
cmp
mov
mov
mov
call
pusha
sub
cmp
mov
sub
fwait
cmp
mov
orb
mov
nop
xchg
int
sub
stos
jbe
xchg
jo
pop
dec
xchg
sti
jecxz
into
push
repz
test
js
mov
mov
lds
xchg
popa
push
dec
push
mov
stos
or
fwait
cmp
sbb
fsubrs
std
mov
shll
mov
and
and
pop
cmp
repz
inc
cmp
and
xor
lea
mov
shlb
lods
aaa
sbb
inc
cmp
xlat
jbe
notb
ljmp
ds
ljmp
dec
daa
fdivl
repnz
pop
mov
adc
rcl
mov
push
jp
cmp
arpl
imul
fdivs
divb
inc
out
pushl
les
int3
pop
pop
loope
rorl
imul
jo
push
sub
daa
lods
sarl
dec
stc
xchg
sub
ret
pop
nop
xchg
sti
std
popa
sub
push
mov
jmp
or
cs
cwtl
out
mov
jno
add
mov
in
mov
fcompl
lcall
sub
ffree
adc
or
lds
add
inc
sbb
popa
sahf
outsb
jne
or
adc
fcoms
ret
and
out
jl
mov
and
mov
jnp
dec
pushf
adc
or
sbb
scas
push
cld
xchg
pop
outsl
mov
aam
icebp
fwait
mov
arpl
adc
stos
shll
sbbb
xchg
stc
cmpsl
adc
movsl
rclb
mov
sbb
push
ss
push
add
outsb
call
sarl
or
es
and
adc
and
sbb
xor
pop
inc
or
dec
cmp
cmc
incl
adc
imul
fidivs
popf
adc
pop
and
xor
in
xchg
cmp
push
inc
pop
jae
sbb
sbb
dec
into
pop
pop
pop
inc
stos
xor
xor
insb
es
leave
or
stc
push
xlat
andl
dec
mov
repz
xchg
movsb
xlat
jg
ss
into
mov
out
fcmovnu
daa
pop
fwait
mov
lods
sbb
lods
popf
fsubrs
rcrl
dec
pop
push
adc
lock
es
sbb
push
push
cmp
rol
inc
rcrl
cli
mov
pop
xor
xchg
pusha
mov
lahf
adc
jae
and
fstl
and
aad
aaa
test
xor
mov
cwtl
adc
xor
rcrl
xor
xor
xlat
push
xchg
or
fbld
mov
popf
mov
inc
jno
pop
hlt
sub
add
jecxz
stc
xor
cwtl
pop
cld
mov
inc
sub
jmp
mov
xchg
std
lret
mov
add
jl
pop
rcrl
jbe
add
and
and
mov
dec
pop
mov
ljmp
arpl
std
mov
cmp
mov
leave
aas
and
ss
imul
dec
daa
adc
int
push
mov
xchg
mov
lret
pop
ret
xchg
mov
andl
xor
das
es
sub
mov
cld
jb
int
ret
ds
sbb
xchg
lods
ret
mov
aas
push
rcll
ffree
push
mov
cld
inc
loope
push
xlat
inc
in
pop
adcl
out
int3
mov
nop
jmp
dec
std
cmp
push
mov
fdiv
pavgb
aas
jmp
sbb
mov
dec
inc
jl
ljmp
xchg
and
stc
xor
stos
movsl
push
stc
ja
ja
sbb
es
sbb
cmp
push
dec
movw
sub
jnp
minps
jmp
cltd
aam
mov
data16
aaa
push
pop
sahf
add
in
jae
mov
adc
jae
pop
cmp
inc
pop
xchg
jb
lods
xor
jecxz
int
ret
adc
rcrb
rorb
inc
ret
jnp
es
pop
addr16
scas
fdivp
repnz
or
and
daa
jne
add
std
mov
cmp
mov
ljmp
push
inc
jo
push
cli
jbe
sub
ds
shll
ja
add
dec
xchg
cmc
add
mov
push
lds
and
lahf
in
arpl
jae
jecxz
mov
push
jge
shll
pcmpgtb
cmp
mov
clc
icebp
xlat
jbe,pt
mov
pop
orl
incl
push
int
jge
leave
cld
fnsave
pop
inc
scas
cwtl
les
les
out
lea
inc
sbb
iret
dec
call
and
inc
sub
imul
pop
vcvtps2pd
jg
ud1
sahf
rorl
push
rclb
loopne
xor
add
test
jno
inc
sbb
push
push
push
push
sbb
dec
aam
cmpl
repz
hlt
imul
push
mov
dec
push
or
stc
test
push
mov
insl
and
xlat
insb
mov
aam
lods
mov
jp
or
pop
jecxz
pop
lret
je,pt
xchg
mov
rolb
es
dec
fdiv
mov
push
jecxz
mov
outsb
in
mov
jge
lahf
stc
mov
dec
sbb
mov
lds
cs
push
je
jbe
pop
ja
mov
inc
mov
lret
mov
notl
ret
lods
scas
bnd
fld1
inc
ja
ja
xorb
xor
or
jns
lret
push
pop
lret
scas
fdivr
or
stc
les
sbb
lret
int3
sub
mov
out
mov
inc
loope
cmp
mov
jecxz
push
adc
mov
stos
shll
sub
and
xchg
jle
push
pop
or
nop
xchg
test
push
mov
fisubs
test
cmp
sub
pop
mov
rcll
mov
push
pop
test
rcrl
clc
sub
or
inc
icebp
sbb
lahf
cmc
sbb
pop
paddusw
dec
je
sub
sarl
ffree
out
add
dec
je
add
cmp
cmp
fisubrs
es
add
inc
fists
sahf
sub
add
in
fs
mov
faddp
dec
aas
sub
inc
imul
ffreep
cmp
nop
dec
mov
mov
xchg
xor
aad
aam
insb
fwait
lods
inc
inc
jo
leave
mov
dec
movsb
incl
jmp
je
add
repnz
fs
mov
xchg
sbb
lock
repz
mov
js
sub
movsl
repnz
xchg
adc
fsub
sbb
cmpsb
scas
jmp
loopne
out
shrl
jg
adc
arpl
in
loopne
sub
cld
mov
popa
lock
dec
push
mov
pusha
cmp
mov
jmp
push
and
push
imul
cltd
std
mov
mov
push
inc
sbb
das
push
int
adc
inc
loop
sub
xchg
push
mov
adc
push
test
mov
sub
repz
jge
in
sub
sahf
int3
scas
jg
js
scas
sbb
cmp
inc
adc
mov
push
insb
mov
and
addr16
int3
imul
test
mov
add
test
loop
push
sbb
daa
jle
ds
das
enter
push
mov
sbb
fcmovu
pop
in
les
and
data16
add
mov
jno
repz
dec
inc
and
psubusb
adc
int3
cmpl
jb
nop
fsts
cld
mov
orb
pop
push
pop
mov
add
inc
xor
mov
or
incl
shr
test
push
popf
push
cmp
fistps
hlt
mov
mov
rcll
mov
js
mov
push
push
sub
sub
push
ja
es
and
mov
imul
and
sti
sbb
dec
add
lret
mov
jecxz
icebp
call
push
mov
cmp
cmpps
sbb
jne
movsl
mov
mov
mov
std
inc
jne
aas
adc
and
outsb
jmp
data16
in
mov
xor
aaa
adc
adc
mov
sarb
pop
add
and
mov
aad
out
jbe
push
pop
inc
xor
or
adc
rorb
cs
rcll
scas
arpl
mov
pushf
mov
outsl
repz
add
inc
mov
std
ret
fcomps
jmp
mov
pop
pop
cmpl
out
xchg
pusha
mov
enter
inc
pop
push
mulb
cmpsb
mov
clc
jno
pop
cmc
jb
mov
rcrl
pop
fwait
cs
jl
and
adc
sbb
sar
inc
scas
or
or
and
xchg
iret
cld
or
cli
pop
mov
inc
out
mov
mov
hlt
xor
dec
loope
dec
dec
sbb
loopne
mov
cmc
mov
add
cli
sub
jl
adc
push
imul
mov
mov
mov
into
les
pop
pop
jmp
and
test
aas
nop
lds
mov
xor
jp
subl
mov
xchg
inc
sub
test
lock
daa
cli
mov
imul
cpuid
cmp
jecxz
outsl
mov
jp
cmpsl
dec
push
lds
cmc
pushf
inc
sahf
jmp
rcll
lds
or
mov
rcll
ret
and
sbb
inc
xchg
std
adc
push
and
into
xlat
les
loop
mov
dec
jne
test
outsb
fdivrl
push
mov
ds
lods
pop
roll
push
push
cwtl
add
mov
xor
push
pop
movsb
mov
loope
jecxz
fwait
scas
and
ljmp
push
jecxz
and
lret
cld
adc
outsl
pop
adc
adcb
out
cwtl
cmp
jp
loope
iret
mov
lods
inc
faddp
adc
jbe
push
popf
jg
pusha
push
orb
and
fcomps
pop
xor
sub
mov
mov
jecxz
dec
push
sbb
rolb
add
push
and
adc
cmpsl
and
mov
jnp
out
cmp
jne
aam
cs
push
insl
mov
cmpsb
fnstcw
cmpb
stc
xchg
sarb
cltd
pushl
dec
cmp
jno
test
ja
imul
repnz
fsubs
mov
jp
push
icebp
mov
mov
cmp
push
adc
rcrb
lret
ret
or
pop
sub
popl
sub
cltd
push
pop
arpl
in
in
mov
push
repz
add
popw
push
sti
jns
ljmp
fwait
mov
repnz
jae
in
jo
in
fnstsw
in
aaa
push
cmp
sbb
ja
mov
sbb
addr16
mov
cmp
sbb
out
dec
shrl
mov
popa
iret
xor
mov
js
inc
add
ret
mov
and
or
dec
mov
sti
jp
mov
pop
imul
xor
pop
mov
lea
cmp
xor
int
mov
lahf
push
sbb
adc
fistl
jno
fs
jmp
aas
sti
xor
lods
mov
repz
sahf
cmc
adc
xor
sub
inc
cmpsb
mov
test
mov
outsl
push
inc
in
push
fisttpl
andb
in
mov
add
aam
jg
xor
jbe
int
insb
or
lods
out
insb
lahf
and
pop
nop
bound
pop
or
sbb
inc
dec
imul
icebp
lahf
mov
or
mov
dec
lock
pop
out
adc
xchg
popf
cmp
std
loopne
adc
push
pop
sahf
stos
hlt
sti
add
sub
fidivrl
pusha
jbe
dec
stc
movsb
pusha
ror
clc
lea
scas
mov
inc
add
mov
or
das
enter
movsl
sub
fwait
nop
fisubs
jmp
ret
jbe
and
nop
insl
xchg
rcrl
movsb
aaa
hlt
dec
push
adc
and
jno
xor
jecxz
and
inc
mov
xor
xchg
fldt
das
stos
push
add
dec
xchg
lret
cld
and
ja
cmpl
cmp
dec
pop
inc
add
jecxz
xor
out
loope
cld
or
mov
push
cli
fidivs
aas
xchg
jg
into
je
sbb
add
sbb
scas
dec
push
add
imul
sahf
repnz
xor
das
push
aaa
bnd
js
data16
aad
subl
in
pop
cmp
xchg
dec
iret
test
mov
mov
push
scas
inc
pushf
aad
or
or
mov
rcll
or
clc
shr
push
das
adc
mov
jecxz
mov
sbb
test
enter
sub
adc
test
lcall
inc
push
arpl
pop
jbe
cmp
ret
test
insl
xlat
outsl
test
movsl
inc
mov
jae
pop
xchg
aam
lods
or
or
dec
inc
mov
cltd
test
cmc
ffree
push
lds
in
ds
dec
pop
xchg
cld
push
fimull
into
loope
pop
cmp
or
lret
out
pop
sbb
divb
xor
and
in
add
or
mov
hlt
jns
push
mov
mov
cmpb
in
ret
idivl
push
scas
stos
pop
mov
fstpt
xor
stos
dec
lret
sub
test
insl
pop
dec
inc
inc
insb
nop
or
das
add
ret
and
es
sbb
int3
inc
mov
push
jns
push
leave
leave
lret
and
hlt
jne
add
fisttpl
outsb
rolb
push
sahf
mov
repz
cmpsb
adc
lods
out
pushl
xor
lods
push
push
cmp
cmp
mov
pushf
aad
lods
out
add
adc
and
aam
add
xor
lds
sub
hlt
addr16
mov
ljmp
jl
cmp
repz
shlb
bound
xor
gs
rcll
subb
push
jno
bnd
test
push
insb
lods
ficompl
push
arpl
or
daa
enter
xchg
icebp
dec
in
fwait
ds
adcl
pand
inc
pop
repnz
stc
jecxz
or
xor
std
cmpsl
push
leave
divl
xor
jmp
cmp
adcl
movsb
cltd
lock
fnstsw
mov
scas
test
push
pshufw
ss
push
lea
push
dec
sub
sbb
push
adc
cmp
mov
fmuls
add
mov
in
jae
sub
mov
out
mov
fimull
popl
xchg
mov
pop
ret
xchg
outsl
loope
or
inc
cmp
ret
data16
cwtl
pop
push
js
or
mov
aas
jge
insb
sbb
in
jg
jnp
mov
adc
pop
pop
jnp
sbb
cld
xchg
or
xchg
ret
ss
sarl
push
xchg
inc
lods
cmp
push
cwtl
xlat
in
inc
int
cmovle
in
inc
jle
leave
test
add
movsl
and
inc
sbb
lock
jb
fcomps
inc
dec
cmp
not
xor
xor
into
push
and
cli
dec
inc
xchg
stos
mov
sub
jmp
outsb
cmp
je
add
neg
std
cmp
jo
inc
lea
xchg
xor
ss
popa
adc
hlt
pop
fcoml
jmp
in
addr16
js
les
cmp
int
adc
lret
mov
dec
cs
dec
stc
pop
cmpsb
lods
mov
popa
ss
dec
movsb
fs
test
pop
push
and
mov
inc
lods
sti
add
adc
int3
fcoms
lds
enter
test
and
les
push
fwait
push
sbb
fucomi
iret
outsb
push
sti
sub
sub
cwtl
cmp
jecxz
out
mul
test
inc
andl
mov
cmp
jecxz
inc
fs
cwtl
jae
and
inc
add
dec
lock
or
jge
in
stc
loop
mov
test
jb
jbe
xchg
xchg
xor
cli
test
test
in
lock
in
mov
mov
ljmp
dec
xor
jo
dec
dec
mov
inc
adc
and
sbb
jp
test
negb
jno
mov
in
dec
pushf
adc
xchg
rolb
std
dec
lea
push
inc
sar
aaa
sti
xchg
and
cmp
test
and
sbb
cmp
and
int3
xchg
add
xchg
xchg
rcl
mov
inc
xchg
xor
outsb
insl
arpl
dec
fdivl
in
or
adc
dec
outsb
mov
cmp
lea
adc
sbb
shll
xlat
adc
jb
je
call
dec
sub
push
adc
push
test
call
sarl
repz
scas
int
mov
cmpsb
cld
insl
xchg
cwtl
sub
mov
inc
int
mov
cmc
pop
sbb
mov
cmp
sbb
les
dec
stos
lods
div
sub
fidivl
dec
pop
jle
std
adc
shr
ret
jp
popf
sbb
cmp
pushf
push
jl
mov
push
sub
xchg
mov
das
das
add
fcomps
mov
popl
pop
mov
pop
pop
or
adc
and
add
add
je
jo
imul
mov
out
xor
or
xlat
add
test
ret
shr
loopne
add
mov
je
adc
push
jle
pusha
jb
adc
and
mov
mov
cs
xchg
cmc
inc
push
adcb
push
les
push
movsb
jo
pop
orl
in
jo
dec
repz
fstpl
gs
lret
test
es
ds
outsl
mov
inc
arpl
sets
je
add
stc
sub
int
into
add
inc
and
fisttpl
icebp
cmpsb
shrl
in
add
jge
fistpll
fmull
xor
loope
cltd
dec
jne
xor
imul
inc
sub
repnz
mov
andb
pop
xchg
pop
movsb
cmp
shr
xchg
jp
cmp
incb
nop
shlb
xchg
mov
fimuls
jmp
icebp
out
dec
imul
mov
jmp
and
mov
cmp
popf
rclb
cmp
inc
ret
cli
xor
push
incl
sbb
jbe
das
stos
mov
gs
les
mov
push
andl
mov
fistl
das
fildl
int3
and
jno
push
mov
push
les
or
dec
shrb
pop
or
imul
and
lods
sbb
ss
pop
sub
push
stc
lcall
ds
addl
aam
mov
mov
cld
jo
cwtl
pop
xor
sub
cwtl
mov
mov
mov
fwait
jge
sub
sub
hlt
iret
mov
insb
sbb
lret
push
movsb
in
push
fdivrs
lahf
jl
xchg
add
mov
or
iret
repz
clc
dec
aaa
adc
call
xlat
stos
jo
into
fidivrs
sub
subb
imul
push
add
cwtl
iret
fldt
outsb
push
cmp
fwait
and
ret
mov
daa
add
outsb
or
subb
and
jp
cmp
subb
jbe
loope
call
and
shll
out
adc
mov
sbb
cli
shrb
jl
inc
mov
mov
lahf
int3
jbe
mov
ret
push
push
push
push
setb
pop
ds
xor
jno
push
nop
cwtl
aaa
popf
in
inc
lods
fwait
add
sbb
cmpsl
in
and
add
jg
hlt
mov
xor
ljmp
loopne
sub
adc
mov
jo
push
pop
ja
cwtl
or
inc
adc
mov
sbb
mov
ds
dec
dec
nop
stc
in
cmp
sbb
out
fcomip
add
dec
cmpsb
flds
ret
mov
pop
inc
jnp
dec
pop
xadd
or
shll
mov
int
stc
jnp
cmpsl
sbb
stos
fnsave
mov
dec
fsubl
mov
mul
repz
setge
add
sub
inc
popf
fnstcw
mov
mov
insb
pop
xor
loop
add
and
add
mov
iret
out
mov
outsb
mov
pop
or
xchg
and
outsb
inc
adc
cmp
cmp
insl
pop
mov
repz
pop
sahf
jecxz
stos
bound
outsb
xchg
or
push
jb
add
mov
mov
mov
mov
in
jecxz
cmpl
push
add
pop
lahf
jl
push
cld
mov
sbb
cli
mov
inc
nop
fnstcw
cmp
stc
push
out
cwtl
sbb
jle
xchg
mov
or
call
les
das
lds
mov
mov
movaps
pusha
pusha
pop
xchg
lahf
out
addr16
cmp
jne
jmp
scas
mov
adc
hlt
repz
in
stc
shll
jae
xor
stc
dec
lret
inc
jp
and
or
dec
jecxz
inc
dec
pop
push
add
mov
inc
fs
sbb
insb
push
ficoms
cmpsb
out
popa
clc
sbbl
jne
mov
test
xlat
jo
mov
fnstsw
push
cmc
inc
pop
data16
inc
data16
fidivrl
mov
or
stos
inc
in
pop
addr16
jo
sbb
mov
mov
adc
iret
shlb
lcall
mov
cmp
repz
sub
imulb
sbb
ja
mov
cmp
xor
jle
jo
inc
sti
cmp
push
stos
pop
shl
test
fwait
insl
mov
mov
loope
in
or
xchg
les
adc
jnp
cltd
lcall
nop
pop
sub
popf
cmp
lcall
loopne
or
adc
and
add
outsl
mov
aaa
out
mov
lret
bnd
insb
repz
fdivrs
dec
xchg
mov
cmpl
mov
aaa
insb
mov
and
mov
or
subl
and
dec
ljmp
mov
push
out
sbb
rcrb
fists
jns
in
jo
push
jmp
fldt
xor
push
xor
or
sub
push
add
test
lods
out
cmp
xchg
test
push
ja
dec
dec
in
ret
add
repz
in
sbb
pushf
inc
test
ljmp
xchg
lea
lock
fists
and
inc
xor
test
xor
das
fyl2x
loop
jge
cmpsb
push
inc
xchg
add
imul
fiadds
pop
fimuls
icebp
sub
rcl
ljmp
hlt
inc
js
les
sarb
gs
dec
mov
cmp
into
dec
sbb
pop
mov
sub
cmpsl
je
std
mov
out
adc
stc
test
add
push
mov
jo
and
dec
in
dec
mov
sub
jnp
push
jb
xchg
lods
fadds
jmp
lret
testb
cmp
add
int
pusha
popa
rcrl
lock
es
add
test
or
and
rol
outsb
into
mov
inc
jmp
fcompl
ds
pop
inc
ljmp
loopne
push
sub
in
mov
inc
les
subb
ror
stos
xchg
jne
xor
enter
sub
xchg
pop
adc
arpl
sti
push
sub
pop
es
cli
lods
movsb
ljmp
cld
insl
mov
sub
repz
mov
mov
cmp
imull
out
push
mov
sub
movl
test
in
out
xchg
pusha
inc
mov
xchg
or
insl
adcb
sbb
xor
mov
xlat
in
lret
push
stc
adc
rcrl
inc
inc
test
pop
pop
pushf
idiv
sub
out
inc
push
and
call
dec
sbb
jp
adc
jp
mov
test
dec
cs
outsb
lods
pushf
rcrb
jbe
cmp
push
mov
inc
mov
mov
sahf
mov
pop
add
lret
and
hlt
inc
or
add
test
mov
push
fcom
add
mov
movsb
stc
ret
xor
sub
and
dec
jmp
inc
mov
adc
xchg
push
push
push
adc
mov
pop
mov
mov
push
and
jbe
test
inc
add
ficoml
and
lret
inc
and
lret
add
mov
ds
loopne
shr
movsb
shl
mov
push
or
xchg
cld
das
sbb
iret
inc
mov
dec
sar
aas
pop
mov
mov
and
out
push
jge
loop
and
pop
mov
sbb
adc
xor
pop
pushf
xchg
out
ljmp
idivl
mov
cltd
push
lcall
sub
xor
sub
icebp
cmc
orb
test
mov
pop
ja
xchg
inc
pusha
jmp
mov
xor
in
sti
xor
push
sbb
xchg
hlt
cmpb
dec
cld
sbb
push
sub
out
pop
jp
pop
ljmp
icebp
pop
cmc
ds
and
dec
xchg
lret
jb
movsl
mov
inc
fcmovu
outsb
mov
inc
pop
cltd
mov
movsl
into
jmp
hlt
mov
and
xchg
dec
mov
fdivrs
pusha
loop
imul
push
mov
fldenv
mov
sarb
mov
adc
daa
and
pop
enter
testl
dec
fxch
jecxz
push
cmp
pusha
shrl
es
popa
cmp
stos
jno
mov
bound
xchg
popa
mov
inc
mov
jmp
ret
enter
pop
mov
jge
sbb
and
mov
in
mov
xchg
push
sbb
jg
lahf
and
lahf
rclb
popf
aad
sbb
cltd
shl
add
xchg
adc
shl
jo
out
cltd
mov
fs
cmp
popa
or
cmpsl
lods
fiaddl
push
xchg
push
movsl
dec
in
in
imul
fldl
jp
push
cmp
pop
jecxz
cltd
call
mov
sbb
and
pop
leave
push
ds
and
popl
test
stc
iret
and
add
imul
dec
incl
rcll
or
test
jne
mov
push
add
mov
mov
inc
sub
sbb
jbe
and
and
pop
jbe
push
ss
mov
pop
ret
dec
mov
push
aaa
mov
insb
jge
inc
and
xor
loope
pop
bswap
adc
test
mov
aam
sti
mov
mov
lret
das
or
xchg
push
xchg
mov
xor
repnz
cmp
sti
cmp
xchg
jo
lea
jmp
in
lcall
imul
ss
jnp
mov
sbb
push
fcmovnu
dec
add
inc
mov
repnz
es
insl
sarb
mov
or
cld
or
inc
and
pop
push
sub
mov
fs
and
cmpsl
and
and
pop
cltd
xor
cld
js
push
xchg
mov
and
xchg
shlb
or
pop
or
add
xchg
push
jecxz
stc
push
xlat
movsl
push
lret
mov
pop
mov
sbb
and
cmc
jecxz
jno
add
pop
sub
sub
es
pop
xchg
xchg
pusha
testb
cmp
aaa
pop
xchg
loop
stc
mov
sub
sahf
pusha
dec
ja
xor
icebp
imul
das
add
subb
pop
sbb
pop
mov
daa
es
inc
std
or
sbb
out
cwtl
xor
sbb
pop
cli
stos
call
out
mov
or
loope
fidivl
je
mov
push
pop
bnd
imul
mov
xchg
and
daa
jae
and
pop
add
jne
jmp
pop
jns
dec
fwait
mov
addb
xchg
mov
or
pusha
stos
in
data16
ret
test
mov
push
addr16
aad
pop
je
ficoms
cld
movsl
pop
stos
dec
jnp
gs
test
mov
jmp
popf
adc
ficomps
pop
test
in
and
dec
out
mov
pushf
imul
outsb
sub
aam
push
adc
push
xchg
outsb
cmc
std
cmp
shr
mov
outsl
pop
mov
xlat
dec
add
es
and
fsub
xchg
lret
adcb
ljmp
ja
sbb
stc
sbb
lods
in
sbb
popa
fs
jb
sbb
xchg
inc
add
push
cmp
cld
je
mov
mov
mov
mov
lret
add
adc
mov
pop
or
sbb
test
test
fnsave
popf
mov
push
imull
movsl
cmp
shl
mov
mov
mov
int
push
fidivs
mov
xor
sub
cltd
cli
or
mov
cmp
pop
cmp
add
popa
aam
pop
adc
pop
jg
fldcw
leave
push
or
mov
in
int3
xor
sbb
cli
insb
cld
hlt
mov
iret
cld
shll
mulps
popa
and
rclb
sub
adc
clc
aas
outsl
sub
mov
bound
pop
fisttpll
lret
or
push
and
xchg
add
jbe,pn
rol
icebp
repz
in
das
xor
pop
nop
mov
scas
adc
dec
shll
mov
imul
shll
inc
mov
test
push
or
andb
inc
loope
push
xor
or
pop
loopne,pn
add
jo
int
lahf
lcall
pop
stos
mov
cmp
mov
fisubrl
add
pop
sbbb
and
pop
mov
iret
arpl
dec
push
dec
ss
adc
mov
fstp
rclb
push
add
bound
fnsave
push
sub
push
data16
in
adc
notl
xchg
into
int3
sbb
clc
push
lcall
push
fistpll
mov
sbb
testl
or
in
jecxz
shrl
mov
adc
push
ja
loop
cwtl
mov
jl
mov
in
mov
notb
lret
fs
lcall
cmp
dec
pop
mov
cmp
hlt
stos
js
cmpl
adc
adc
in
and
adc
pop
les
repz
icebp
xor
xor
mov
addr16
movsb
repz
mov
adc
in
call
sub
rcl
add
mov
cmp
mulb
movsb
clc
mov
pop
es
je
add
lcall
or
push
jecxz
push
das
sbb
mov
std
clc
push
je
imul
jg
scas
dec
adc
pop
leave
out
cmpsb
and
addr16
clc
add
leave
push
sub
mov
mov
mov
in
test
jl
loope
sub
sub
loopne
inc
data16
les
adc
into
sarb
mov
push
sbb
adc
movsb
push
cmpsb
fisttps
fcompl
cli
popf
sub
pop
das
dec
cmpsl
es
iret
jmp
fwait
mov
cmc
push
xor
sarl
cwtl
hlt
pmulhuw
lgs
popf
push
aad
mov
xchg
lods
and
in
test
outsb
pop
loop
fdivrl
sub
fwait
push
pop
int
stc
inc
mov
mov
and
clc
fadds
stos
outsl
or
aam
and
xor
cmc
xor
stos
dec
testb
dec
cltd
inc
insl
sub
xchg
pop
orb
sarb
push
mov
pop
fcoml
jp
xchg
sbb
lock
in
jae
sub
and
xor
addr16
xchg
sbb
mov
cld
add
xor
addr16
jnp
and
aad
loopne
adc
psubb
lcall
push
adc
xchg
ja
pop
cmp
dec
xchg
dec
mov
bound
or
xor
push
movsb
jo
sbb
and
or
fildl
ja
pop
xchg
int
movsb
push
sbb
cmp
xlat
mov
orl
pusha
add
pop
sub
jne
nop
movsl
les
pop
jne
inc
cmp
jb
push
pop
cmp
int
sub
leave
sub
adc
aam
xor
mov
mov
inc
lcall
mov
insb
inc
sahf
mov
jns
sub
shl
sbb
into
icebp
push
stc
pop
fisubs
adc
lds
jecxz
mov
jmp
lock
aaa
mov
push
cmp
test
loopne
mov
test
repnz
add
add
pop
mov
dec
pop
fwait
xchg
add
mov
mov
aam
add
movsl
repnz
fsubs
or
enter
adc
clc
add
out
cwtl
push
jl
lods
aad
jnp
mov
stos
mov
pop
clc
fsubrs
in
and
cmpsb
popf
mov
shl
jnp
out
and
push
pop
add
loope
mov
xor
push
sub
sbb
inc
out
pop
dec
and
fidivrs
inc
mov
les
int3
lods
cmp
jg
or
sbb
lds
xchg
fs
dec
dec
sbb
pusha
cmp
in
cmc
xchg
push
jmp
xor
pop
inc
sbb
int3
dec
mov
in
mov
test
pop
out
or
mov
jp
dec
push
xadd
hlt
clc
inc
fld
test
inc
add
xchg
dec
push
mov
imul
inc
dec
andb
inc
jl
jmp
pop
test
sbb
jae
les
ror
pop
loopne
not
inc
xor
or
outsb
in
and
sti
adc
jmp
xchg
roll
hlt
adc
leave
mov
out
pop
cli
push
mov
lds
pusha
xor
adc
xor
cmp
sbb
sub
pop
xchg
pop
mov
sub
orb
jno
mov
mov
pop
pop
ja
outsb
mov
jg
adc
loope
dec
mov
pop
xchg
jae
fadds
mov
xor
push
xchg
pusha
pop
aaa
lods
and
xchg
inc
mov
orb
mov
lret
lods
adc
mov
xchg
or
inc
roll
adc
sar
rcr
pusha
adc
jbe
sbb
mov
mov
jb
icebp
addr16
push
add
cmp
rcl
repnz
mov
mov
cmp
mov
imul
cmp
mov
sbb
add
out
jge
xor
insb
sbb
and
aad
cmp
rorl
mov
cmc
inc
add
add
inc
out
adcl
pop
jo
rolb
stc
add
ret
cmp
aad
xchg
sub
imul
push
aad
fwait
rcrl
and
mov
inc
in
sbb
xchg
sti
lcall
shlb
sub
jp
push
cmp
xor
mov
sbb
and
notl
daa
outsl
dec
inc
test
push
stos
cmp
into
dec
xor
mov
sub
fmuls
mov
sbb
sub
sub
xchg
xlat
sbb
or
sbb
lea
add
pop
repz
push
adcl
push
jg
cmc
pop
cmpsl
dec
in
rorb
lock
xor
push
arpl
xchg
lods
js
mov
lcall
xor
sub
out
iret
dec
sub
adc
jae,pt
mov
and
mov
inc
sbb
xchg
pop
lods
ja
int3
pop
sub
cmp
mov
decl
popf
ljmp
les
das
mov
cli
adc
mov
cmp
push
jnp
les
xchg
stos
mov
xlat
insb
cltd
jo
lahf
in
insb
dec
in
push
xor
hlt
ds
dec
repz
push
lret
cmp
jae
jp
shl
cli
mov
push
and
and
fdivl
push
gs
cmp
mov
adc
xchg
cmp
or
out
xor
pushf
in
jno
fcomps
xchg
nop
push
mov
xor
push
adc
adc
dec
movsb
or
add
sub
hlt
jl
jp
into
and
gs
test
pop
mov
mov
out
fsts
lcall
mov
cmpsl
rorl
mov
or
lret
fldl
push
fdivrl
ficompl
outsb
mov
adc
xlat
mov
push
aaa
enter
fwait
bound
mov
xchg
std
mov
movsl
sub
mov
push
jmp
and
pop
sbb
lahf
xchg
jb
adc
jmp
cmpsl
xacquire
cltd
call
in
in
sbb
pop
mov
jl
jg
adc
inc
pop
and
in
xchg
ja
ss
mov
aas
std
call
stos
outsl
mov
and
xchg
sbbb
mov
cmp
jno
dec
fstpt
mov
push
jg
push
cmp
test
sahf
mov
adc
mov
dec
mov
testb
mov
dec
mov
mov
lods
aaa
fisubrs
mov
mov
aam
sub
psrlq
pop
popf
cmpsl
sub
dec
sbb
inc
sub
xor
mov
arpl
movsl
faddp
insl
cs
jmp
cli
mov
sbb
push
or
int3
in
ss
cli
xor
push
call
imul
decl
repnz
push
xchg
pop
test
icebp
sbb
aaa
outsb
sbb
cmp
aaa
jg
pop
add
ss
movsl
push
insb
repz
movsl
hlt
bound
jmp
sti
mov
nop
mov
dec
iret
adc
mov
das
mov
int3
outsb
faddl
and
cmpsb
lahf
xchg
jnp
lea
mov
divl
movsl
sbb
fs
enter
in
sbb
adc
dec
jae
xor
aam
mov
mov
lret
sbb
fisttps
sbbl
in
addl
add
fldl
fadd
xor
aaa
rcrb
jbe
or
push
test
pop
sub
gs
cmp
fdivr
pop
mov
push
jae
mov
daa
or
not
mov
adc
add
aas
lahf
pop
rcrl
in
mov
in
pop
aad
call
mov
or
fistl
jg
and
test
incl
data16
shrb
xor
mov
data16
or
into
cmp
mov
add
adc
and
inc
sbb
sub
mov
xchg
addr16
jge
or
push
xchg
inc
mov
in
jecxz
incl
mov
in
lahf
and
outsl
xchg
inc
negb
cmp
pop
fwait
movb
cs
lea
pop
in
inc
movsl
cmp
inc
jne
dec
cwtl
cld
in
testl
sbb
mov
test
adc
sahf
mov
clc
dec
mov
adc
or
mov
cmp
shll
aam
adc
xorl
jbe
push
bound
mov
jo
push
cld
sbb
repz
fwait
sub
xor
int3
add
out
aaa
mov
outsl
mov
andb
or
shll
and
mov
xor
insl
pusha
adc
lock
xor
les
jnp
fcmovnb
cwtl
adc
add
cmp
mov
popf
repnz
fiadds
test
push
aad
gs
jns
repnz
adc
enter
pop
xchg
or
jp
xchg
test
pop
add
enter
cmc
nop
mov
cmp
leave
jnp
inc
add
test
je
push
mov
push
les
pusha
pop
shlb
mov
dec
push
adc
dec
pop
sub
pop
mov
lods
sub
lods
pop
xchg
jl
leave
mov
out
lahf
inc
dec
jae
fs
sti
or
sahf
lret
add
fcoml
out
insb
xor
pop
push
mov
sub
mov
add
fcompl
jne
ficompl
cld
leave
mov
jb
fldt
pop
xchg
call
fisubrs
bound
aad
xor
pushf
xor
cli
jmp
push
xor
or
sbb
inc
sub
movb
xchg
pop
arpl
inc
out
bnd
jbe
daa
or
jge
mov
clc
mov
pop
xchg
xchg
or
lcall
outsl
aas
push
adc
mov
pop
xchg
xchg
imul
jg
mov
mov
icebp
add
and
mov
xor
or
xchg
dec
dec
push
fdivrl
xorb
jns
test
fldl
fisubrs
int3
lcall
dec
mov
push
dec
adc
dec
push
pusha
into
inc
in
mov
mov
lahf
add
test
push
fiadds
outsb
or
popa
sub
mov
bound
cltd
pop
movzbl
test
fs
adc
or
outsb
pop
ret
jnp
in
std
in
adc
and
pop
inc
xchg
adc
push
cmpsb
rorb
ljmp
ficoms
arpl
fiadds
outsb
pushl
shrb
mulb
push
decb
adc
cmp
ret
ret
mov
call
push
movsb
lret
sub
dec
jno
or
lds
and
stos
cmp
lock
push
addr16
call
outsl
inc
mov
fnstenv
xor
fbld
push
jnp
lea
or
pop
hlt
sub
jl
xchg
iret
adc
int3
repz
inc
aaa
cmp
xor
push
xor
xchg
out
xor
push
xchg
and
aam
mov
out
shrl
imul
sti
gs
xorb
dec
jb
adc
mov
rclb
mov
cmp
adc
jl
hlt
cmp
adc
fcoml
cmp
hlt
movsl
sub
mov
sub
mov
adc
out
mov
or
ss
pop
fnstcw
leave
dec
fdivl
cwtl
sub
xor
sub
cmc
je
sbb
xor
jle
jle
xor
add
cwtl
adc
addl
js
aam
mov
inc
dec
pop
shrb
push
fwait
int
mov
add
rcrl
clc
ja
jno
pop
sbb
mov
cmp
es
addl
popf
xchg
pop
cmp
aad
or
pop
out
mov
das
push
mov
outsb
loop
int
push
sub
sub
in
in
pop
or
jbe
and
push
xlat
lods
stos
mov
ret
minps
jns
adc
arpl
pop
scas
add
adc
adc
shrb
into
sbb
add
sti
nop
les
jecxz
loope
in
mov
push
jne
sbb
inc
notl
pop
push
add
movsl
mov
cmpsl
xchg
sbb
or
fwait
dec
mov
fdivrl
pop
outsl
jge
pushf
jo
mov
pop
xchg
jne
cmpsb
jno
pop
jbe
leave
add
out
xlat
pop
sbb
popf
sub
sahf
sbb
adc
pop
out
sarb
scas
jg
lahf
xlat
cmp
xor
jl
sub
dec
xor
ret
push
lds
mov
mov
inc
and
cmp
jge
gs
dec
inc
mov
cli
sbb
in
hlt
loopne
pop
inc
sahf
dec
incl
aaa
push
ljmp
test
pop
je
push
ljmp
cmp
xor
add
jl
inc
daa
rolb
loope
stos
lret
mov
cmpsl
loopne
mov
xchg
cmpsb
jno
cmp
lods
test
mov
xchg
sub
stos
xor
cld
orb
js
dec
xchg
popl
fs
lods
stos
mov
shll
push
out
loope
lret
xchg
out
adcl
or
mov
in
xor
leave
push
ret
cmpsl
fistl
mov
faddl
or
shlb
lahf
xor
and
jmp
jle
mov
ljmp
mov
jne
lods
mov
push
je
sarb
test
lahf
xchg
loope
popf
cs
sbb
jae
test
mov
mov
mov
inc
xorb
ja
rorl
dec
add
ret
test
jmp
mov
or
xchg
loop
or
mov
jnp
out
jmp
data16
pop
xchg
inc
sbb
jecxz
das
shlb
aad
mov
ljmp
fbld
push
dec
jnp
in
popf
xchg
daa
cmc
jl
pop
ljmp
cmc
sub
xchg
ror
shlb
rcrb
push
push
mov
mov
mov
cmp
es
fstpl
adc
jl
cwtl
mov
lods
enter
aam
dec
nop
popf
inc
fbld
mov
push
xor
insb
stos
mov
stos
xor
and
or
out
push
xor
mov
xchg
aas
bound
cmp
mov
popa
cmp
test
mov
loopne
shlb
das
std
cmp
pushl
and
ret
fnsave
mul
outsl
cmp
imul
adc
int3
dec
ss
or
mov
jle
aas
sarl
les
adc
out
sub
and
gs
or
jnp
lahf
inc
ret
push
jbe
int3
insb
push
bound
inc
fdiv
stc
jbe
or
andl
dec
sub
lods
loop
lret
cmp
pop
out
push
cmp
lea
mov
xchg
sbb
movsl
xchg
mov
subb
sbbb
and
aam
sbb
pop
aas
repz
in
sub
out
adc
sbb
dec
pop
repz
notb
xor
pop
pop
cmp
mov
or
add
in
or
sub
xlat
aam
les
lcall
jle
lea
gs
es
in
lcall
cmp
lds
and
dec
cmp
ficomps
mov
icebp
cmp
push
sar
xor
jnp
sub
cmp
push
pop
sti
lcall
jo
lcall
inc
fdivs
push
jb
stc
repnz
adc
xchg
fs
shlb
lret
bound
push
dec
add
rcrb
out
fwait
pop
lds
pop
in
loopne
dec
and
call
and
push
sbb
fwait
dec
sbb
dec
xchg
jae
stc
adc
mov
mov
aaa
sbb
jo
stos
xor
out
mov
xor
ja
sub
pop
fwait
in
jne
inc
add
into
in
push
test
jno
jnp
xor
cli
pushf
pop
dec
xor
mov
push
dec
out
filds
xlat
icebp
sahf
jnp
je
ds
popf
cmpsl
push
cmc
jae
mov
pop
sub
int
cli
sub
cmc
jno
ljmp
xlat
push
mov
dec
scas
leave
fistl
nop
popa
sarb
xor
loop
out
mov
pop
and
cs
lcallw
mov
xchg
arpl
inc
nop
jl
pop
dec
jecxz
xor
notb
popa
or
cmp
fwait
push
into
jmp
cmp
fidivl
les
into
fldl
clc
pop
jo
pop
add
dec
dec
cmp
or
push
mov
fisttpll
adc
dec
adc
idivb
or
inc
in
in
push
cmp
inc
jns
dec
inc
mov
aas
gs
and
adc
mov
in
scas
pop
pop
std
cmpl
inc
stos
push
lods
je
jb
popf
out
fimuls
aaa
mov
lcall
pushf
cs
rcl
test
sub
push
rcll
inc
mov
dec
cmp
mov
cmpsb
les
cmp
and
sub
aam
mov
sbb
aam
test
mov
movsb
mov
clc
into
insl
mov
ja
sahf
mov
out
sub
mov
call
sub
pop
sahf
cmpsl
adc
imul
dec
js
push
pushf
ret
and
faddl
jp
leave
andl
pop
lret
dec
fisubrs
pop
cld
popf
icebp
int3
sbb
fisubl
mov
mov
rol
and
mov
add
sub
pop
jns
cmp
jl
xor
pop
pop
xchg
cmpsb
mov
iret
pop
in
aam
inc
add
or
sub
mov
mov
sub
push
iret
mov
push
cwtl
jmp
loopne
pushf
pop
sub
pop
outsl
dec
or
outsb
or
or
sub
loop
gs
jl
ret
rcrb
sub
dec
push
push
mov
jb
mov
repz
test
push
dec
ja
or
adc
test
mov
leave
push
outsl
mov
out
cmp
mov
int
pop
jle
push
sub
cmp
or
mov
jle
fs
dec
test
pop
jo
std
add
jnp
decl
lss
cmp
cmp
loopne
nop
sub
std
ljmp
std
fistps
add
mov
xor
xor
mov
imul
mov
mov
xor
cwtl
pop
sarb
jp
push
gs
xchg
xchg
pushf
lret
or
pop
jae
xor
out
adc
movsb
and
pop
out
rorl
mov
mov
mov
mov
rcrl
es
cmp
pop
and
adcb
dec
sub
add
dec
jne
jnp
pop
pop
gs
push
sbb
mov
int
les
jne
aaa
rclb
push
rolb
xchg
call
mov
mov
mov
dec
pop
adc
xchg
arpl
addl
aas
loopne
jnp
jbe
mov
popf
roll
cs
or
fstpt
or
pop
cmp
xor
mov
cmp
imul
in
cmp
sbb
bound
inc
btr
push
fsubs
sbb
add
repnz
push
jns
loop
lods
scas
outsb
mov
popa
mov
fwait
mov
jo
sub
fdivr
sbb
mov
hlt
sub
mov
scas
and
xchg
push
or
and
and
mov
jb
and
in
cmpsb
mov
mov
mov
divl
push
aaa
cltd
sti
enter
cld
in
rorb
push
sbb
push
jno
rcll
adc
out
es
pop
mov
cmp
mov
xchg
imul
sub
push
sti
sub
jb
outsb
cs
stc
fldl
sarb
dec
pop
or
adc
and
shll
inc
and
fcoml
das
jno
push
mov
mov
adc
test
ja
jge
mov
adc
adcl
pop
rorl
mov
decl
cs
push
addr16
ficoms
dec
sbb
mov
cltd
dec
sti
scas
xor
pop
outsb
cmpsl
add
mov
enter
loopne
cwtl
xchg
cmp
in
push
jl
push
adc
pusha
jne
or
or
int3
fisubrs
sub
pop
addb
punpckhdq
sahf
pop
adc
rcrb
add
fiadds
ret
dec
push
clc
pop
mov
gs
outsb
mov
in
mov
cmp
icebp
add
cli
insb
pop
outsb
int
mov
shrb
inc
ljmp
mov
fcoml
in
sub
push
mov
sahf
cmpsl
loop
ret
pop
adc
push
das
andl
jns
mull
or
push
mov
outsl
loopne
xlat
sub
sub
and
loopne
daa
in
notl
adc
jp
mov
aam
fbstp
xorl
iret
imul
repnz
xchg
adc
repz
fcoms
les
cmp
pop
fcmovu
lods
sbb
lods
dec
jecxz
fs
incb
mov
pop
test
out
mov
jno
adc
push
dec
call
mov
sahf
sahf
cmpsl
xchg
jne
or
test
mov
fdivrp
ja
lret
sti
stc
dec
cmp
fldenv
decl
xchg
jmp
mov
lods
in
mov
loopne
and
sahf
push
fsubrp
mov
add
inc
das
xlat
add
pop
ljmp
pop
hlt
adc
pop
or
xor
push
fimull
ret
pop
out
icebp
jl
adc
mov
cmp
inc
mov
mov
inc
fistpl
or
fwait
cmp
outsb
lds
mov
cmp
add
call
xchg
mov
sbb
lea
dec
push
popa
xor
add
outsl
andl
cmp
push
cmpsl
push
fdivrs
std
mov
dec
dec
mov
mov
or
sar
shr
and
xchg
into
pop
xchg
cmp
mov
or
push
sub
sub
cmpb
mov
inc
cmp
movsl
sbb
push
or
adc
sub
imulb
cwtl
xchg
lcall
xor
sub
imul
shlb
or
mov
repnz
pop
in
clc
or
stmxcsr
push
mov
sub
arpl
add
xor
or
int3
push
fcomip
aas
push
jbe
outsb
inc
sub
adc
loop
cmpsb
jb
or
pop
lcall
ss
clc
ja
pop
xchg
pop
cmpsb
lcall
lds
call
adc
sub
jmp
mov
mov
dec
push
or
or
lods
mov
dec
in
inc
scas
loop
shl
adc
imul
mov
rorb
or
sbb
fsub
add
das
lods
or
das
sub
mov
sbbb
ja
ja
or
pop
out
push
pop
sub
fnstsw
pop
loope
push
clc
xor
push
cmp
je
insb
mov
shll
adc
adcl
shlb
cmp
test
pop
es
lock
popa
xor
scas
inc
test
bound
sahf
aas
rcr
lahf
and
jno
pusha
js
ret
pop
dec
rclb
dec
or
std
movsb
xor
ja
js
cwtl
push
adc
test
roll
mov
mov
pop
jb
mov
inc
clc
and
push
test
outsl
push
sbb
aaa
cmp
adcl
sbb
lods
jb
pop
xor
sti
inc
xor
and
and
mov
fadd
jmp
dec
and
mov
jmp
mov
into
popa
sub
cltd
out
arpl
ret
mov
push
mov
inc
and
mov
in
dec
lods
ss
xchg
adc
xchg
or
das
aam
insb
sub
inc
cmc
push
xchg
pop
cld
mov
push
mov
popf
mov
scas
out
push
mov
xlat
lods
call
inc
pop
dec
mov
loope
adc
adc
into
lods
lcall
cld
insb
stos
sub
fists
loopne
in
pop
data16
fndisi(8087
les
outsl
xor
cmp
into
xor
adc
fincstp
out
icebp
jmp
pop
loop
mov
xchg
inc
sbb
std
fnstenv
pusha
sti
in
push
std
push
cmp
call
test
add
jl
inc
dec
inc
hlt
xor
mov
mov
ret
enter
aas
pushf
cmp
test
pushf
jo
inc
lods
aas
xchg
int
xchg
sbb
addl
ja
dec
dec
outsb
ret
lock
int
and
clc
mov
or
push
jg
addb
jp
cs
inc
mov
outsb
xchg
fidivs
fldcw
inc
inc
cmp
ljmp
dec
loope,pn
sti
inc
cwtl
cltd
xchg
shll
sbb
clc
sub
xor
imul
mov
pop
mov
dec
cmp
ljmp
and
fsubs
jmp
push
enter
loopne
jle
xchg
sbbb
dec
mov
inc
sub
ds
pusha
push
in
push
fcomip
inc
je
sar
ja
les
loopne
enter
mov
in
pop
dec
loop
loop
push
mov
cmc
ss
rcll
jecxz
and
mov
in
lea
in
mov
enter
mov
add
fisttps
push
aad
addr16
adc
loopne
mov
jnp
in
decl
enter
rorl
sti
push
testl
push
xchg
nop
push
add
fwait
setae
mov
pmaxub
mov
out
pop
pop
xchg
mov
adc
and
popa
shrl
frstor
ljmpw
clc
dec
jl
movsb
cmp
jbe
inc
insl
xchg
xor
testb
or
mov
and
repz
jb
bound
scas
inc
iret
mov
addr16
into
imul
or
mov
pop
je
insb
cmp
loopew
sub
cld
outsl
jecxz
mov
fistpll
jmp
lods
jle
lods
dec
js
push
mov
lock
cwtl
ret
out
sub
pushf
test
cmp
dec
cmp
repnz
mov
ljmp
push
dec
jbe
mov
popa
push
das
mov
xchg
inc
lret
dec
adc
xchg
adc
push
xor
pushf
dec
ljmp
jnp
fildl
jle
shl
add
cmp
dec
xchg
adc
push
in
jns
fs
cmp
sbb
push
xchg
cwtl
sbb
sarl
ss
push
mov
mov
pop
xor
hlt
into
addr16
adc
jns
cld
shrb
dec
pop
mov
mov
sbb
fildll
ss
inc
push
mov
add
inc
xchg
cmp
loope
push
cmp
inc
movsl
cmc
clc
js
aam
gs
inc
es
sarl
mov
lret
sub
int3
loop
test
xor
xor
jmp
mov
dec
xchg
jp
stos
jns
lret
xchg
stos
lds
and
xchg
test
fisttpl
xlat
pop
jmp
sub
cwtl
add
pop
lods
and
je
sbb
call
das
lds
sarl
inc
ret
fdivrp
xor
pop
les
lods
pop
movsl
add
or
sub
jge
mov
cld
lcall
rorl
jg
mov
leave
shrb
aad
shrb
mov
outsl
or
pop
stos
incb
mov
int3
pop
sbb
dec
sub
jnp
and
loop
mov
nop
into
dec
shll
adc
int
cmp
sub
out
mov
sbb
add
mov
outsl
push
addb
fnstenv
jo
imul
xor
mov
mov
shlb
daa
roll
lahf
gs
push
xorb
lahf
mov
push
or
add
repz
es
rcrl
jbe
mov
rcrl
pushf
pusha
xor
dec
sbb
sub
xchg
dec
aad
or
jo
jle
push
dec
cwtl
movsl
adc
dec
cmp
outsb
mov
sub
inc
or
ss
xchg
push
aad
ljmp
add
mov
dec
iret
mov
arpl
jo
pop
mov
rclb
add
push
or
or
push
adc
outsb
movsl
and
addr16
mov
jmp
mov
mov
cmp
clc
int
mov
pop
stc
mov
pusha
mov
inc
lods
jns
inc
cmp
cmpsl
icebp
adc
out
sbb
hlt
xchg
idivl
mov
inc
test
pop
sbb
dec
xor
jno
outsl
es
ret
mov
mov
ret
gs
gs
add
adc
test
dec
pusha
adc
push
not
ret
or
add
jae
xlat
mov
cltd
out
xor
icebp
cmp
cwtl
lds
cmpsb
xchg
mov
mov
shlb
inc
stos
jb
xor
popf
dec
in
push
push
pop
adc
fwait
dec
cltd
sub
inc
lret
push
cmp
jle
inc
ljmp
lea
lock
mov
xchg
in
fcoml
imul
dec
cltd
xor
add
xor
mov
jns
ss
daa
or
orb
insl
or
pop
rcrl
jmp
lcall
dec
leave
inc
cmp
shlb
imul
or
pop
fwait
les
lcall
andps
shl
pushf
and
sbb
lods
pop
pop
xchg
jns
addr16
hlt
int
add
lods
xor
arpl
sub
cbtw
out
les
inc
push
sub
cs
or
clc
add
lret
push
xor
xchg
dec
dec
mov
lcall
sbb
dec
cmp
mov
cmpsb
xchg
lods
inc
jno
jns
loope
pusha
ss
adc
pop
outsb
outsb
xor
bnd
ret
pop
out
xchg
cwtl
and
mov
push
jo
sub
sub
lcall
leave
outsb
inc
push
xchg
testl
xchg
repz
js
enter
or
or
adc
filds
leave
scas
inc
mov
jge
sub
ror
btc
mov
inc
xchg
push
hlt
lock
ja
popf
sbb
fcoms
sub
pop
sahf
fdiv
fiadds
ds
push
ds
push
ja
loope
mov
mov
clc
add
mov
xlat
lods
xchg
or
push
push
imul
dec
movsb
lcall
inc
xlat
and
imul
and
es
in
xor
pop
movsl
lahf
or
je
es
into
xlat
call
loop
mov
repnz
notl
std
cmpsb
or
ljmp
mov
push
mov
adc
xchg
jge
sub
dec
lock
mov
cltd
cmpsb
cmpsb
mov
cwtl
out
mov
call
xchg
cmp
shll
cmp
or
out
std
testl
divl
sbbb
and
lret
fildll
fwait
mov
cmp
andl
cs
stos
jecxz
add
int
dec
and
pinsrw
cld
outsl
fdivrs
jg
dec
adc
jmp
adc
std
das
int
dec
dec
pusha
lods
mov
xchg
mov
rcrl
pushf
gs
mov
mov
xchg
jecxz
icebp
out
cmp
inc
pop
adc
xchg
mov
or
xor
jl
fcoml
dec
pop
add
cmp
dec
adc
add
les
pop
adc
subl
pushf
pop
sub
movsb
movsl
ds
rcll
ds
mul
sti
cmc
pop
clc
ja
loopne
call
sbb
pop
daa
xlat
aam
mov
mov
popf
call
mov
xor
xchg
xor
lahf
test
test
lea
push
ss
pusha
jmp
shrl
aam
lret
movsb
inc
xor
pop
lcall
arpl
mov
or
or
or
inc
sbb
sub
and
cmp
sbb
pop
xor
je
repz
rcrb
and
pop
fistpll
imul
outsb
imul
dec
shll
jno
mov
mov
push
jns
leave
inc
push
icebp
push
ret
fwait
insb
xchg
test
scas
stos
mov
and
insl
mov
adc
repz
into
add
dec
pop
jecxz
inc
add
push
test
cltd
loop
and
inc
ret
mov
ds
mov
enter
das
mov
xchg
leave
jg
loope
push
rcrl
jmp
sbb
ja
mov
or
aas
sbb
jp
scas
cltd
scas
adc
lret
mov
sbb
inc
mov
push
andb
adc
push
out
cwtl
xchg
inc
xchg
mov
icebp
out
movsl
aad
and
xchg
inc
addr16
adc
rorb
test
test
jl
jb
bound
outsb
mov
mov
fwait
add
pop
stos
mov
stc
loope
push
mov
repnz
and
ret
pop
hlt
cmpsl
dec
loope
jo
test
mov
les
add
push
outsl
xchg
mulb
sbb
addr16
push
or
adc
outsl
loopne
repnz
inc
fdivs
subb
int3
or
mov
sub
mov
std
pop
jns
cs
rcrb
push
outsb
ljmp
push
sub
test
aaa
into
lds
test
fcmovne
mov
pop
push
cmp
in
test
jmp
dec
push
xor
add
xor
jns
rorl
jecxz
jp
jmp
xchg
fstps
addr16
je
add
dec
int3
xchg
sub
mov
ffree
push
mov
xlat
arpl
add
inc
push
and
jnp
dec
inc
cld
jo
subl
cwtl
shr
test
sbb
cmp
jb
rol
aam
in
cmpsb
add
cwtl
dec
xor
mov
in
mov
xchg
push
ret
bound
push
stos
or
add
cwtl
cwtl
enter
sub
jmp
xchg
fistps
scas
ret
mov
mov
mov
xchg
mov
call
xor
ficoml
pop
fcmovu
add
mov
das
mov
xor
test
pop
xchg
ret
xchg
inc
push
push
push
adc
aas
xchg
rcl
xchg
sub
data16
dec
pop
sbb
loopne
je
fwait
insb
xor
mov
scas
pop
in
mov
push
test
testb
daa
pop
out
lret
cld
aam
stos
pusha
or
addr16
scas
fisubl
outsl
mov
jae
jl
sbb
xor
sbb
decb
adc
cs
dec
push
and
and
mov
movsl
lods
fsubrs
sub
movb
mov
adc
mov
jp
xlat
and
mov
mov
test
or
mov
cmp
imul
cmpsb
std
addr16
scas
js
pop
xchg
mov
adc
insb
sbb
lds
cmp
cmp
ljmp
iret
adc
adc
les
in
iret
insl
push
push
cmpsb
jne
outsw
dec
xor
sbb
inc
add
fmulp
leave
pop
push
rolb
push
mov
shrw
mov
ret
bound
mov
cmp
out
fwait
shlb
jecxz
xchg
popa
adc
sub
pushf
fstpl
dec
add
out
fcoms
popf
sarb
dec
and
dec
rclb
ss
pop
popf
jno
push
cli
cltd
cmc
mov
and
sbb
arpl
jmp
fimull
xor
out
vxorps
lcall
lods
mov
aaa
mov
mov
sbb
mov
or
or
and
add
jae
arpl
inc
ljmp
adc
addr16
pop
cltd
sbb
or
xor
repnz
jae
dec
mov
cmp
add
adc
outsl
pop
fwait
jg
sub
or
fmuls
adc
sub
xor
mov
or
clc
shlb
pop
leave
in
sbb
loopne
xlat
jecxz
mov
adc
stc
stc
insb
sti
stos
rorl
mov
mov
xchg
int3
pop
inc
mov
jl
fxch
mov
test
inc
cmp
push
xchg
in
and
cmp
lds
lea
lret
loope
mov
out
sub
ss
es
sbb
jne
fdivl
jno
scas
mov
ljmp
inc
add
add
testl
or
inc
mov
inc
cltd
stos
cmpsl
jmp
and
scas
xor
data16
scas
add
mov
sbb
xchg
xor
xor
out
movl
lea
dec
sub
dec
mov
inc
ret
les
mov
test
xchg
xor
mov
mov
sub
pop
cmp
sub
xchg
mov
nop
out
jle
jp
mov
subb
pop
mov
adc
pop
adc
repz
dec
adc
mov
lds
out
popa
adc
outsb
imul
scas
std
outsb
fdivl
in
shr
int
rcll
repz
enter
and
daa
and
sbb
xchg
shlb
pop
je
outsl
adc
sbb
int3
lret
cmp
pop
xchg
pop
xchg
inc
jbe
inc
push
outsl
movsl
xchg
je
inc
stos
pop
mov
aas
sub
pop
loopne
add
mov
aad
inc
cmpsl
inc
xlat
xchg
xchg
daa
xchg
mov
mov
cs
test
mull
sahf
fs
xchg
push
xor
mov
ds
adc
es
ss
jge
gs
sub
andl
jge
cmpsb
jo
dec
notl
fimull
xchg
sub
cmp
xchg
mov
pop
stos
call
dec
jl
ret
dec
mov
dec
xor
sub
jmp
lahf
aaa
scas
test
cli
scas
inc
lock
mov
popf
fwait
data16
divb
imul
popa
stc
movsb
jecxz
out
pop
mov
jnp
sbb
mov
movsb
iret
test
xchg
adc
cmp
leave
not
mov
or
fwait
lret
sub
jae
in
dec
lea
sub
push
push
fstps
xor
jnp
pop
lahf
rcl
aad
mov
push
stos
fldenv
inc
add
inc
mov
movsl
adc
sub
sub
mov
mov
pop
add
call
cmpsl
insl
mov
scas
inc
insb
rclb
insl
add
repnz
xchg
nop
mov
jl
cli
mov
or
loopne
cli
ss
je
lock
xchg
cmp
xchg
mov
xor
sub
push
dec
mov
lds
fisubl
or
out
into
sarb
mov
mov
cmp
popa
pop
add
aad
adc
push
cmpsb
xchg
mov
pushf
pop
adc
pop
jge
stc
daa
inc
idivb
js
outsl
daa
pop
ljmp
addr16
int3
dec
das
mov
fldl2t
mov
xor
iret
cmp
fidivs
pop
out
push
push
movsl
jl
adc
adc
mov
aas
mov
imul
fiaddl
cmpsl
pop
fstpt
mov
sub
ja
mov
and
bound
inc
in
cmp
test
popa
lcall
scas
sahf
add
jmp
mov
mov
sbb
and
leave
adc
iret
ret
sub
mov
xor
pop
inc
hlt
aaa
das
mov
hlt
push
cmc
and
fisubs
push
jmp
xor
cmp
in
xor
scas
bound
mov
inc
insl
nop
repnz
out
aad
aaa
lcall
fs
adcb
popa
fcmovnbe
mov
xchg
sub
fistpll
xor
pop
mov
and
cmpb
daa
add
stos
add
dec
mov
jb
sub
mov
or
add
sub
out
sub
xchg
sub
scas
aas
notl
pop
bound
nop
cwtl
inc
rcrb
pop
inc
jl
adc
out
repnz
jo
pusha
loop
jno
dec
insl
add
jo
jle
push
dec
mov
sub
shlb
xchg
jmp
outsl
dec
stc
pop
aaa
adcl
jp
fs
jecxz
xchg
mov
dec
xor
jne
dec
add
mov
pop
test
mov
enter
push
cmpsl
loopne
push
mov
mov
sub
mov
push
clc
or
enter
outsl
les
adc
adc
sbb
pop
inc
cmp
repnz
push
and
je,pt
pop
cmpsl
je
mov
fs
lcall
adc
shrb
lret
pop
insl
les
mov
adc
mov
movsl
andb
insb
leave
inc
loope
mov
cmc
stos
repz
push
dec
subl
adc
pop
cmp
sbb
inc
sub
and
pop
and
das
icebp
shll
and
sarb
lods
adc
scas
scas
sbb
nop
jg
in
jp
jecxz
inc
mov
jae
test
mov
mov
sbb
mov
mov
xchg
rorb
orl
inc
rolb
xchg
add
xchg
mov
pop
fs
fs
pop
fidivl
in
xchg
fiadds
sub
mov
std
mov
fildll
dec
inc
pop
fldenv
jae
pushf
shlb
out
test
mov
movsb
sahf
cld
pop
loopne
sub
mov
cmp
rcrb
mov
xchg
mov
jmp
add
dec
xchg
mov
or
enter
jecxz
xor
jbe
cmp
pushf
dec
out
mov
imul
es
mov
das
ucomiss
sbb
mov
mov
jmp
sbb
ficoms
decl
mov
rcl
push
mov
or
sub
jae
loop
popf
adcl
xor
enter
jmp
mov
cltd
xor
addr16
aam
xchg
loopne
push
lock
sbb
jl
xchg
das
push
movsb
cmpsb
jo
dec
adc
jecxz
inc
mov
xchg
fimuls
xchg
xchg
je
xor
jmp
data16
daa
mov
push
cmp
adc
push
pop
jle
xchg
xorl
inc
mov
inc
out
aad
dec
inc
clc
cld
cmc
roll
mov
lcall
daa
shrl
and
cmp
adc
mov
push
fwait
xor
movsb
sub
xchg
es
out
and
mov
jp
dec
ljmp
data16
in
pop
imull
jne
insl
jge
dec
in
sbb
mov
lea
sbb
cmc
test
pop
mov
into
push
aad
jae
or
dec
add
shrb
popa
aam
popa
leave
add
into
push
jge
jle
fldl
cli
mov
in
mov
divb
sub
fcmovne
adc
dec
mov
repz
dec
mov
jmp
ja
lods
adc
mov
lea
lcall
add
adc
push
pop
popf
xlat
clc
iret
push
mov
nop
jne
jns
jge
iret
xor
push
sub
ja
jmp
inc
pop
pushf
sbb
int3
xlat
add
add
arpl
scas
shlb
dec
and
push
nop
in
mov
xchg
outsl
jmp
add
jns
cmp
lahf
jo
ss
sti
cmpsb
add
cmp
frstor
xor
popa
das
aaa
mov
push
jle
xor
dec
pop
xor
inc
arpl
bound
inc
and
mov
sbb
mov
inc
out
lret
push
call
and
js
scas
mov
fwait
fwait
sarb
and
add
out
mov
dec
sbb
and
fimull
lods
rcrb
stos
cmc
mov
sbb
imul
js
adc
cmp
inc
xor
shll
adc
pushf
mov
lahf
ss
sarl
mov
loope
in
das
adc
sbb
jne
pop
inc
lock
sub
sahf
fildll
mov
push
mov
jmp
inc
push
lcall
into
cli
xor
cmpsl
std
mov
movsb
mov
push
push
and
inc
icebp
fs
insl
jmp
mov
push
adc
jb
cmp
repnz
shl
push
ret
push
sar
mov
adc
sub
pop
adc
dec
test
jp
out
sbb
xor
adc
loop
pop
imul
aas
cmp
cli
scas
cwtl
jno
movsl
int
jb
outsb
dec
test
jl
xchg
ds
mov
and
add
out
lret
dec
pushf
ret
mov
aaa
mov
cltd
pop
outsl
decb
cmpsl
inc
pushf
jbe
cltd
lea
cli
mov
jo
outsl
mov
or
add
addr16
in
imul
pop
inc
mov
mov
xlat
xor
inc
bound
mov
icebp
jge
mov
pop
sub
aas
into
adcb
xchg
xor
out
mov
jle
lret
getsec
mov
and
sub
inc
into
ljmp
mov
push
sbb
test
hlt
int3
cmp
loope
mov
ds
decb
jmp
lahf
pop
push
mov
push
test
and
sbb
in
das
mov
push
inc
dec
push
stos
es
or
fldenv
scas
xchg
insb
pushl
push
out
rep
cmpsb
movsb
xchg
xchg
rorb
loopne
repz
push
jmp
xor
or
inc
adc
cmp
lds
jecxz
jg
orb
cmpsl
lods
inc
stc
shll
mov
adcl
pop
je
dec
movsb
je
adc
faddl
cmp
test
and
sbb
mov
cmpsl
sub
popf
inc
mov
repz
movsb
jmp
test
sbb
mov
call
jl
mov
sub
int
mov
repnz
push
out
xor
jne
loope
and
fadd
jg
add
ljmp
mov
aas
xor
lods
fildl
and
in
aaa
lcall
dec
mov
out
subb
jne
xchg
and
out
ret
jno
pop
imul
insl
iret
imul
outsl
sahf
dec
push
push
idiv
fstps
test
add
daa
daa
jae
ficomps
test
in
pop
icebp
cmp
jg
das
fnstsw
jbe
pop
xor
adc
sub
das
mov
es
in
ficompl
xchg
decb
scas
popf
mov
pop
push
mov
dec
popf
and
mov
cmpsb
dec
shrl
in
aas
icebp
ja
ficoml
sarb
aam
push
pop
fldt
pusha
test
stos
push
sbb
jae
mov
sbb
loop
or
push
jmp
xor
xor
adcl
mov
loopne
movsb
movsl
sti
daa
jge
jge
pop
push
cli
std
loope
enter
xor
loopne
negb
orb
dec
push
cmp
push
fs
jno
xchg
adc
push
cmp
sbb
lcall
cli
ds
pop
inc
imul
xor
movsl
mov
addb
sahf
outsl
push
ret
cmp
xchg
mov
pop
jbe
out
jns
pop
out
lods
dec
pushf
imul
or
enter
insl
pop
aam
pop
mov
out
add
mov
adc
inc
push
nop
dec
imul
mov
sub
inc
push
cmp
ss
jle
jnp
adc
movb
add
cltd
add
in
test
aas
hlt
mov
in
xchg
lahf
xchg
pop
or
outsb
outsb
lret
push
psubusw
sbb
addb
mov
mov
or
addr16
cmc
sub
and
push
sub
cltd
push
jmp
and
cmp
fs
mov
lret
add
xchg
pushf
push
loopne
fwait
shlb
test
hlt
and
mov
int3
push
or
mov
cli
add
mov
cmp
jmp
inc
lcall
fsubr
dec
mov
lret
out
popf
int
push
mov
cwtl
out
loope
xorl
in
push
jne
jb
mov
adc
inc
int
jecxz
lock
scas
pop
movsl
rorl
cmp
add
xor
popf
jno
mov
xor
shrl
jnp
mov
push
xchg
repnz
loope
filds
push
xchg
daa
sti
push
repz
and
mov
adc
sub
cli
popa
and
jno
xor
dec
jbe
mov
cli
ljmp
inc
xor
jmp
enter
imul
cmp
scas
jbe
hlt
ds
mov
jg
and
cmp
int
call
inc
xor
shlb
add
dec
out
daa
lds
cmp
cmpsl
sbb
jae
fidivrs
adc
test
or
cmpsb
mov
mov
enter
mov
xor
and
outsb
data16
shr
ljmp
pop
cmpsl
in
arpl
xor
push
cltd
xchg
cld
mov
ljmp
lea
and
lahf
xchg
in
jbe
lcall
cs
adc
mov
leave
mov
daa
xlat
movsb
insb
cltd
pop
or
test
rcll
xor
leave
sub
mov
call
add
shlb
xchg
cmp
popa
dec
fistps
and
enter
ret
rclb
sbb
movb
add
push
xor
inc
stos
cmp
sub
cmp
push
push
mov
lret
and
fidivrs
test
mov
das
mov
pop
mov
adc
xchg
fsubrl
scas
push
in
lods
xchg
xor
shlb
outsl
mov
jecxz
test
sbb
push
dec
ret
xor
ja,pt
popf
push
sbb
ret
movsb
sub
inc
sbb
scas
aaa
into
imul
fists
mov
add
inc
ds
pop
stos
xchg
fldlg2
les
xchg
adc
clc
bsr
lock
jnp
dec
cmc
push
push
fnstenv
mov
mov
scas
mov
push
icebp
imul
or
xor
jbe
sub
pusha
fdivl
mov
mov
inc
xchg
jmp
outsb
push
jecxz
je
mov
out
imul
jecxz
add
iret
and
push
mov
xchg
push
sub
clc
jmp
ljmp
pop
stos
cwtl
into
xchg
inc
and
aam
xchg
push
iret
out
push
xlat
pop
inc
dec
push
push
mov
ret
stc
fwait
pop
sbb
aas
stos
out
in
into
fmuls
mov
sub
cs
push
les
scas
dec
movsl
pop
mov
shl
addr16
loopne
lock
imul
mov
out
xchg
jmp
push
add
aaa
repnz
or
dec
xchg
stc
arpl
add
xorw
push
fdivs
rorb
shlb
lds
mov
test
fs
add
faddl
add
loopne
addl
insb
and
xor
scas
js
bound
add
or
fsubl
addr16
shll
fcomp
leave
or
clc
mov
or
fimuls
imul
fucom
rcrl
arpl
out
fucomip
add
mov
mov
lods
gs
outsb
dec
mov
jae
inc
pop
xchg
xor
adc
sarb
test
lret
je
dec
iret
dec
xchg
mov
mov
and
dec
inc
lret
mov
or
cmp
lret
xchg
jns
xor
pop
arpl
pop
sub
fisubs
sbb
out
adc
cs
mov
push
inc
xlat
push
jmp
out
pop
xchg
mov
inc
pushf
lret
sbb
push
lods
out
fcmove
lock
call
lret
sub
popf
mov
xor
fwait
and
mov
push
ret
dec
xor
call
rcll
inc
xlat
dec
pop
dec
dec
and
add
jge
push
call
xchg
pop
mov
sbb
xchg
lods
loopne
pop
mov
dec
ret
je
cmp
sahf
insl
push
xchg
xchg
gs
or
sbb
cwtl
lock
test
loopne
rcll
pusha
mov
fistpl
jg
movsl
aam
inc
repnz
xchg
imul
outsl
in
or
add
iret
jg
dec
xor
pop
sarl
adc
es
push
push
rorl
popa
xchg
popf
push
in
mov
dec
push
gs
out
add
sub
hlt
data16
fsubrl
adc
test
mov
aas
std
sub
and
push
jge
sub
movsb
jbe
or
mov
js
nopl
pop
enter
sub
inc
xor
incl
ret
xchg
test
jg
mov
hlt
push
movsb
mov
jp
or
inc
jbe
clc
xor
mov
inc
xchg
ljmp
push
cmp
cmp
shrl
cmp
shl
push
lea
and
loope
orb
pop
fcoms
pop
fcomps
dec
das
dec
iret
inc
push
jnp
or
mov
push
mov
in
pop
fsubr
mov
pop
addl
stc
movsb
fmull
push
loop
scas
arpl
stc
mov
mov
sbb
dec
jne
mov
sbb
in
mov
movsl
dec
inc
fstl
and
push
pop
pop
lock
mov
inc
rcrl
cmpsb
pop
stc
scas
sbb
cmp
cmp
or
mov
cwtl
mov
addr16
jb
insl
pop
pop
xchg
jg
xchg
pop
ss
lea
mov
push
data16
mov
mov
mov
and
or
mov
ljmp
pop
das
pushf
add
adc
sarb
mov
out
ljmp
cmp
sarb
push
out
repnz
inc
js
sub
aam
dec
lcall
hlt
or
les
fisubl
movsl
sti
ss
pop
stos
sub
icebp
shll
and
aaa
imul
mov
sub
cmp
sbb
dec
std
sbb
mov
or
aad
cmpsl
mov
test
std
bnd
add
nop
call
xchg
or
sar
sbb
and
or
pop
cli
add
inc
or
xlat
int
pop
inc
xor
inc
pusha
xchg
xor
sub
jne
je
int3
aaa
pop
stos
jge
ss
mov
dec
stc
ds
mov
cs
jbe
jecxz
cmp
sbbb
xchg
dec
je
or
xor
and
xchg
not
push
decl
jae
sub
insl
in
xorl
or
add
xchg
cmp
jb
aaa
cmpsb
scas
push
sahf
insb
fwait
jmp
shlb
sub
aam
bound
mov
cld
mov
xor
pop
push
and
pop
jo
dec
pop
adc
outsl
cmpsb
pop
mov
push
popf
inc
push
pop
pop
cmpsl
mov
mov
pop
or
push
sub
aas
inc
fmull
movsb
js
pop
bound
bound
push
sub
push
mov
dec
jp
in
lock
outsb
jns
in
sbb
loop
scas
jecxz
add
inc
es
mov
push
push
out
pop
jae
lret
xor
pop
clc
fwait
pushf
fcomps
out
push
cmp
mov
out
sub
cmc
cmpsl
unpckhps
in
in
fsubs
jg
hlt
push
lds
pop
inc
aam
popf
clc
pop
or
lock
out
sbb
dec
ds
lods
shr
lods
jno
xchg
adcb
mov
jmp
das
push
hlt
pop
out
mov
pop
inc
repnz
or
std
decl
push
cmpsb
outsl
test
push
outsl
sahf
lahf
dec
xchg
popf
mov
lcall
or
mov
xlat
push
imul
push
push
cmp
call
lea
cmc
adc
pop
or
sbb
xchg
xor
sub
pop
adcl
pop
cmc
push
and
add
out
aad
sbb
daa
push
cmp
out
dec
arpl
add
outsb
addb
jnp
stos
test
mov
fnsave
pushf
mov
lods
out
leave
mov
test
ret
mov
insl
int
es
fcomi
cmc
xchg
xchg
mov
mov
cld
push
cs
fsubp
or
pop
or
pop
mov
sarl
jge
adc
xchg
pop
pop
fdivrs
inc
ret
xchg
pop
bnd
clc
icebp
add
push
mov
push
mov
cmpsb
cld
xchg
stc
xchg
cmp
and
loop
mov
bound
xchg
das
mov
cmc
dec
bound
dec
out
repz
repz
rep
adc
pop
xor
rcll
add
dec
xor
xor
add
cmpsb
pop
mov
mov
lea
cltd
add
rdtsc
push
ljmp
jnp
dec
ret
sub
xchg
stos
push
shrb
mov
into
or
dec
add
or
jp
inc
cltd
lods
mov
dec
pop
cmpsb
aad
mov
pop
inc
mov
ficomps
sbb
lds
inc
ljmp
into
negl
cld
jae
push
pop
mov
in
jns
push
imul
jl
xor
lock
and
scas
jmp
xor
lds
xor
jno
cmp
jns
mov
cmp
or
pop
mov
xlat
cmpsb
daa
mov
push
je
jmp
add
inc
xor
movsb
xchg
push
movsb
in
xor
jb
cmp
pop
xor
xchg
inc
fsubs
inc
inc
and
mov
test
jge
es
arpl
mov
out
add
add
xchg
mov
dec
mov
add
jne
pop
sub
sub
jnp
fwait
push
cmpsb
push
jo
in
push
push
jo
mov
out
ds
stos
sbb
sbb
push
mov
jl
and
cmp
jnp
mov
xchg
daa
or
mov
adc
mov
cs
jl
test
movsb
insb
pusha
out
clc
notb
scas
call
push
xor
mov
inc
imul
jno
fistpll
mov
add
adc
je
loopne
ja
dec
add
sbb
mov
pop
out
jnp
arpl
test
push
call
cli
pop
cmp
mov
test
and
repz
dec
add
add
lock
data16
int3
mov
pop
movl
xchg
and
xor
out
mov
dec
xor
cmpsb
nop
sahf
dec
sbb
mov
cmc
push
imul
xor
in
fstps
orb
lods
jge
xchg
jbe
ds
fisttpll
adc
sahf
sbb
jp
fistps
fdivl
cmp
imul
sbb
ret
push
movnti
jne
insl
or
sbb
test
cmp
mov
stc
int3
mov
pushf
xor
popf
xchg
repnz
stc
dec
dec
sub
leave
xor
mov
lock
out
push
adc
cmp
loope
xor
test
or
data16
adc
mov
and
push
punpcklbw
push
sbb
mov
jecxz
loop
out
push
xor
and
loope
test
mov
sbb
jno
xor
add
mov
dec
jno
sub
push
xchg
js
dec
dec
push
jo
mov
out
sub
out
sub
dec
dec
xor
jge
test
push
cmp
sub
push
xor
sbb
inc
jbe
test
nop
and
pop
lds
jno
pusha
mov
xlat
test
xor
push
xor
sbb
nop
lds
decl
inc
push
push
xchg
dec
jmp
push
add
or
xor
int3
nop
sub
shll
push
push
rcrb
xchg
out
push
sbb
push
xor
stos
and
mov
xor
pop
mov
pop
mov
push
pop
xor
mov
aam
mov
xchg
xor
sub
repz
call
aaa
pop
ret
mov
fisttpll
pop
int
adc
andl
adc
addb
or
stos
sub
outsb
cmp
mov
rolb
stos
insb
xchg
adc
mov
call
enter
das
int
movb
rorb
inc
es
mov
adc
lea
shrb
inc
jae
call
inc
in
push
cmp
sbbl
sbb
jl
in
lods
push
jge
into
cld
repnz
push
xor
les
subb
push
leave
int
push
ss
scas
pop
sti
je
or
outsl
jg,pt
sbbb
mov
sti
push
inc
cmpsl
stos
cmpsb
cmp
cmc
pushf
jnp
push
xchg
and
outsl
mov
das
lods
daa
lds
inc
mov
mov
jl
dec
dec
jns
comiss
sbbl
ret
gs
sub
pop
or
push
dec
aaa
ja
push
cli
xchg
and
fadds
pop
das
mov
test
xchg
jne
cmpsb
mov
pop
ss
in
fmuls
dec
jmp
push
sbb
movsb
inc
or
mov
cltd
test
inc
mov
xor
or
nop
cs
mov
sbbb
loopne
enter
lea
sub
cmpb
outsb
push
sub
cmpsb
xchg
cli
repnz
mov
sub
ljmp
lds
adc
adc
xlat
inc
push
inc
mov
std
fsts
rcrl
leave
inc
addr16
testl
cltd
xchg
xlat
mov
pop
dec
jp
pop
mov
pop
mov
addr16
ret
cs
shll
ja
ss
jmp
jg
daa
or
jbe
inc
jo
push
mov
dec
fisttps
jb
push
pop
sub
sub
fistpll
subl
mov
in
femms
nop
or
adc
xor
xchg
les
in
lret
and
xchg
or
and
mov
addb
mov
ret
cld
dec
sub
mov
imul
stc
inc
dec
jmp
jae
adc
inc
out
sub
mov
xor
test
xor
dec
jno
jecxz
int3
or
sbb
jne
mov
outsb
xchg
in
and
xchg
xchg
sub
sbb
adc
cmpsl
xor
mov
push
and
xchg
pop
sbb
mov
ljmp
movsb
fbstp
pop
lahf
test
dec
sbb
pop
out
inc
xor
addr16
jae
xchg
js
dec
push
cmp
les
shlb
stos
fdivp
stos
daa
dec
in
mov
inc
stos
cmpsl
pop
cmp
cmpsb
xchg
imul
daa
adc
out
pop
xchg
lock
dec
jg
mov
and
sub
out
xchg
rorl
mov
ret
or
add
incb
add
or
mov
movsb
dec
xor
daa
sbb
xchg
push
sti
dec
mov
bound
pop
ret
jae
iret
lret
lret
jae
lret
xchg
pop
adc
add
xchg
mov
jne
push
ss
push
xchg
xchg
cmc
and
dec
cmp
xor
insl
push
ja
or
mov
xchg
icebp
scas
lock
loop
lea
pusha
fsubrl
fildl
push
mov
mov
xlat
lock
mov
cmp
iret
cmp
fs
gs
xchg
cmp
arpl
and
leave
gs
mov
shl
or
test
lahf
enter
ja
push
mov
jp
loope
stc
xchg
add
shll
pop
or
pop
out
lcall
test
add
cli
lret
clc
lahf
scas
ret
ror
lea
stos
ret
les
xor
movsb
cmp
xor
in
jp
mov
lods
jns
pop
add
sbb
xor
in
mov
xor
lea
jb
jg
imul
adc
add
xchg
ljmp
orl
and
hlt
insl
push
fcom
arpl
hlt
daa
inc
xor
pop
sub
push
mov
inc
xchg
mov
aad
xchg
sub
outsb
jmp
push
pop
add
mov
jb
pop
add
mov
int
pushf
fistps
lods
inc
sbb
adc
mov
adc
push
mov
jl
mov
pusha
dec
ss
dec
jns
divl
mov
scas
push
mov
jl
xchg
add
popa
popl
lahf
pop
ds
xchg
jae
mov
sub
aad
push
addr16
add
test
push
mov
aam
pop
inc
lods
adc
sbb
xor
lea
les
dec
inc
xchg
jmp
outsb
jmp
xchg
loop
inc
push
xor
push
shrb
cwtl
mov
scas
addl
lret
pop
stc
or
sub
outsl
lods
jle
mov
or
pusha
push
mov
insb
dec
adc
jnp
adc
xchg
lods
jge
mov
jmp
ja
or
sbb
call
sub
mov
ja
sbb
xchg
adc
cmp
int3
and
rclb
daa
and
filds
test
mov
pop
cmc
push
stc
sti
xchg
jnp
mov
outsb
mov
jecxz
in
add
mov
xchg
in
jo
ret
push
push
lahf
dec
fcmovnbe
push
cltd
jne
adc
fcoml
inc
loopne
push
cmp
inc
dec
jb
jns
xor
repz
sti
cmp
mov
dec
sbb
add
pop
dec
bound
push
inc
cmp
cltd
fisubrl
pushf
push
mov
xor
sti
inc
pushf
push
addl
mov
and
fcoms
test
in
add
rolb
repnz
xor
lahf
xchg
jo
jb
das
xor
mov
loopne
mov
pop
push
loopne
in
sbb
dec
mov
sbbl
pop
lea
movsl
add
add
push
int3
inc
sbb
or
pop
lds
shlb
sub
xlat
mov
jns
dec
stos
test
pop
fistpll
out
cmp
jb
lret
dec
out
sbb
or
outsb
loop
adc
jg
and
movsb
rclb
int
pop
lods
lret
xchg
hlt
cmc
adc
mov
pop
ljmp
std
mov
out
xchg
out
stos
stc
pusha
adc
inc
push
testb
shlb
int
out
addr16
pop
mov
inc
enter
fwait
idivb
add
pushf
jnp
rclb
or
jae
jno
shrb
sub
test
pushf
sub
xor
gs
insb
pop
stc
xchg
jne
lds
or
mov
dec
cmp
jge
push
movl
jmp
or
adc
mov
inc
rorb
xchg
cmp
xor
aaa
xor
pusha
adc
xchg
push
clc
xchg
mov
sti
mov
movsb
mov
inc
ret
push
lock
sub
or
fcompl
es
mov
lock
cmp
rorb
xor
scas
or
sahf
adc
dec
out
outsb
insl
xchg
sub
sub
and
push
xorb
dec
jmp
js
cmp
stos
fstpt
mov
sti
xchg
dec
into
ret
das
push
push
enter
and
sbb
xchg
pop
adc
ja
xchg
cltd
xchg
push
mov
pop
dec
pop
pop
jle
dec
inc
scas
daa
cld
push
or
push
stos
dec
push
inc
mov
movsl
cmp
movsl
push
scas
test
sbb
pop
adc
jl
stc
addl
xor
push
into
int3
mov
adc
push
lahf
sub
and
clc
mov
fiadds
sub
jp
pop
cwtl
sbb
cmp
pushf
mov
xlat
bound
or
mov
stos
out
cmp
outsb
cmp
dec
mov
and
mov
or
adcb
test
pop
imul
jnp
iret
jmp
add
lret
mov
sub
push
fidivs
push
add
pop
xchg
sub
mov
into
and
test
ljmp
cld
adc
inc
mov
cmp
movsb
xor
dec
mov
shll
fwait
sbb
fwait
call
sbb
adcb
pusha
xor
sbb
and
rclb
push
cmpsb
lea
scas
inc
dec
push
add
xchg
xchg
mov
sbb
mov
test
add
sbb
cli
jg
lods
in
mov
aam
lock
loopne
xor
sarb
add
and
jp
inc
jb
push
adc
jecxz
or
dec
add
mov
int
fmulp
push
or
ljmp
sahf
add
pop
mov
lcall
xor
sbb
rclb
cmpsb
xchg
scas
or
out
push
add
and
sub
add
fmuls
iret
or
cmp
jae
adc
idiv
xchg
adcb
imul
test
inc
sub
fisubrl
test
or
fimuls
rolb
pop
cmp
dec
iret
mov
add
dec
or
mov
std
aaa
cmp
xlat
push
add
pop
jg
hlt
push
ret
mov
stos
in
fcom
mov
bound
cmp
fdivrp
or
pop
insl
adcb
add
sahf
inc
xchg
xchg
movsb
aaa
jb
and
dec
xchg
test
mov
lea
or
fwait
lcall
and
mov
lcall
and
adc
dec
popf
scas
mov
test
jno
mov
mov
loope
dec
and
adc
sti
stos
mov
fnstenv
inc
adc
loope
fidivrs
int3
mov
dec
jle
mov
sub
insl
xor
xor
push
adc
push
popf
fldenv
jno
hlt
add
sbb
aaa
or
and
sbb
imul
lds
movsl
test
cmp
pop
adc
sbb
xor
push
hlt
sti
es
ds
daa
xor
push
aad
cmp
sahf
leave
add
mov
pop
mov
xadd
rolb
fimuls
dec
jmpw
enter
sahf
jp
push
jecxz
push
xchg
mov
addl
in
or
mov
stos
pusha
xor
push
push
adc
aas
aaa
stc
dec
aas
jo
jge
mov
inc
lea
enter
or
dec
bnd
mov
sbb
fmull
cmp
cmpsb
xlat
or
daa
popf
xchg
jo
jl
cmp
mov
jmp
cwtl
inc
popa
insb
jg
cwtl
mov
test
dec
lret
jnp
ja
mov
mov
icebp
punpckhwd
loopne
into
fsubr
pop
shrb
xor
addr16
lea
mov
loope
pop
push
jge
mov
stc
mov
pop
push
clc
dec
out
in
inc
add
leave
bound
push
out
and
push
push
pop
mov
frstor
push
push
push
fsubrs
and
out
outsl
push
scas
push
cmpsl
mov
mov
loope
mov
test
push
ja
sub
subl
shrl
xchg
xchg
add
dec
mov
aaa
inc
inc
frstor
xor
nop
cmpsl
pop
movsl
std
jl
popa
or
je
lea
daa
mov
repz
into
ret
sub
mov
xor
adc
andl
sti
stc
add
sub
lods
lret
sub
loop
sbb
scas
out
push
push
pusha
add
jl
aaa
rorl
xlat
cmp
scas
shl
or
cltd
insb
xor
inc
pop
xchg
sub
mov
aas
and
add
mov
inc
mov
clc
sub
sbb
in
sbb
mov
sub
cmp
cli
jp
in
and
pop
test
sub
stc
jmp
jge
inc
movsl
xor
mov
xchg
addr16
in
adc
movsb
imul
insb
test
jle
cltd
mov
mov
ja
out
sbb
stos
enter
rolb
push
jmp
jb
xchg
and
push
push
pop
push
xor
push
cwtl
cmpsl
sbbb
mov
aad
shll
imul
mov
mov
fistl
gs
jns
aam
aaa
int3
mov
sub
xchg
push
jg
dec
and
xchg
jmp
ficomps
push
push
sbb
or
fs
test
daa
xlat
dec
insb
mov
mov
and
mov
js
mov
and
cs
sbb
jns
push
add
scas
jle
std
out
out
scas
cmc
jmp
fidivrs
nop
sub
mov
lcall
fadd
inc
adc
movb
cmp
push
outsl
inc
sub
add
inc
cltd
or
mov
mov
int3
push
rol
mov
icebp
xchg
subl
jne
les
push
add
push
dec
in
jb
cmp
sbb
add
dec
roll
jmp
lea
cmp
pop
mov
out
add
testl
sbb
push
adc
add
jne
mov
gs
cmpsb
inc
data16
adcl
pop
mov
rorl
hlt
aaa
add
pop
pop
daa
nop
out
repnz
inc
inc
add
rcrl
mov
test
mov
xchg
fwait
rclb
outsl
addr16
lea
scas
fs
mov
lds
pop
xchg
jge
mov
mov
cmp
mov
cli
or
lock
fwait
xor
roll
daa
pop
test
shl
xor
xchg
hlt
xchg
call
in
add
imul
in
jg
sub
insb
int3
fmull
into
xor
insb
imul
adc
xlat
mov
ja
add
fimull
jp
mov
pushf
das
mov
adc
and
fs
ja
scas
pop
cmpsb
xor
or
adcb
or
adc
repz
push
leave
mov
dec
lret
pop
test
jo
daa
mov
jmp
xchg
out
lods
dec
mov
cwtl
cld
dec
and
sub
pop
pop
arpl
ss
push
jns
add
or
inc
jl
push
in
push
xor
shrl
adc
imul
sbb
push
xor
dec
mov
mov
mov
orl
adc
lds
call
ss
cmp
inc
xor
push
add
test
mov
shlb
ret
cld
jmp
sub
sub
shlb
jb
in
std
cld
sub
xorl
sti
loop
push
or
push
xchg
xlat
add
xor
xchg
test
dec
scas
pop
adc
mov
out
repz
pop
or
cwtl
mov
lcall
or
pusha
sub
jecxz
loopne
cmc
pop
push
fcoms
popf
xchg
xchg
xor
push
add
push
push
mov
sub
stos
pop
or
jmp
inc
out
dec
mov
cmpsl
jle
sbb
and
mov
repnz
repz
les
lds
stc
mov
int
pop
sub
jle
lret
mov
scas
bound
dec
cmp
repnz
stos
dec
pop
repz
mulb
mov
pop
call
ficomps
rcl
pop
dec
jecxz
dec
cmp
dec
mov
sti
lea
mov
xchg
cmp
jp
inc
pop
sub
xchg
mov
mov
or
mov
jle
adc
push
mov
insl
lock
xor
ss
xor
jle
test
adc
xor
push
aam
xor
push
mov
std
and
sub
ljmp
jle
jo
lahf
lret
inc
sbb
in
xlat
pop
dec
shll
dec
cmp
or
xor
sti
xor
or
jns
xchg
movsb
cmp
jecxz
sbb
rcl
es
or
orb
dec
mov
xchg
jmp
fcomps
loopne
inc
sub
xor
jo
stos
sbb
outsb
sti
jae
cs
mov
and
mov
mov
or
xchg
add
out
lds
adc
mov
mov
add
mov
js
mov
aaa
loope
push
aas
cld
mov
pop
ds
mov
adc
aad
int3
fisttpl
enter
push
iret
mov
add
mov
jb
inc
sub
mov
pop
cs
repnz
daa
mull
mov
jno
sub
fnstenv
lods
testb
daa
stos
lahf
pop
mov
add
loope
pop
das
test
sbb
inc
es
mov
jno
adc
ss
test
std
pop
xlat
or
rcl
cmpsb
mov
pop
inc
or
sbbl
push
sarb
jmp
pushf
imul
int3
push
andb
aas
push
repz
pusha
and
cmpsb
push
push
in
xchg
in
and
xchg
andb
pop
sub
cmp
jp
enter
icebp
cwtl
daa
pushf
pushf
sbb
bound
push
and
repz
pusha
adc
icebp
inc
jnp
cmp
jne
out
inc
push
sbb
jns
jmp
cmp
xchg
fisttpll
xchg
ret
adc
mov
bound
sub
test
out
or
adc
in
lret
fxch
frndint
add
inc
mov
cmp
xor
into
and
jnp
out
xor
stc
lahf
pop
inc
mov
push
shll
xchg
xchg
mov
dec
fcmove
mov
testl
xlat
testl
aaa
movsl
enter
pop
or
lahf
outsb
iret
and
das
jbe
arpl
lods
cmc
sbbb
ja
icebp
mov
push
xor
adc
mov
jno
test
loop
cwtl
xchg
daa
popf
lret
jle
xor
and
inc
scas
mov
mov
lods
mov
xchg
scas
mov
mov
dec
mov
pop
xchg
jae
sarb
xchg
or
out
repnz
pop
xor
insb
sub
pop
lock
xor
mov
fistpll
gs
pop
and
cmp
push
scas
jecxz
mov
jg
dec
ja
adc
dec
jg
int
jno
lret
mov
jnp
aad
jp
xor
aaa
les
int3
jle
push
fmuls
fists
adc
inc
sub
adc
inc
xchg
dec
mov
and
dec
ds
and
push
mov
test
mov
test
or
jo
jno
mov
je
pop
push
clc
sbb
push
popf
pushf
dec
adc
shr
inc
je
rcll
cli
loopne
dec
adc
sbb
add
int3
ja
mov
or
xchg
fstl
mov
pop
push
jg
sbb
xlat
es
pop
cmpb
add
and
shl
mov
outsl
fcompl
ds
adc
pop
push
mov
pop
nop
fsubs
icebp
subb
rcrl
pop
int3
test
insl
dec
fstl
or
inc
popa
adc
in
sub
lahf
push
ds
xor
inc
cmp
out
mov
fnstcw
cli
stos
leave
or
repz
popf
bound
jl
iret
mov
and
shlb
lea
ficoml
ss
aas
push
sbb
ret
inc
pop
call
popf
scas
fs
cmp
pop
shlb
jle
or
adc
aam
adc
stos
mov
sbb
loope
push
fwait
cltd
bound
mov
mov
cmp
cmp
sarl
sbb
jbe
mov
vmwrite
mov
sahf
sub
and
out
lret
jmp
and
subl
fnsave
mov
cwtl
xchg
sbb
push
adcb
into
adc
pop
push
loope
push
inc
push
adc
aad
push
repz
ficoml
lods
fsts
mov
in
es
imul
dec
mov
sbb
icebp
cli
sbb
imul
jecxz
ret
repnz
mov
imul
mov
lret
lea
mov
jne
cltd
sbb
mov
sub
and
and
sub
mov
daa
ret
sbb
lret
fidivs
lds
fsubs
mov
std
cs
mov
ljmp
int
rcrb
lcall
mov
push
and
mov
sti
cmpsl
xor
inc
add
into
scas
inc
hlt
mov
mov
cmp
dec
addr16
int3
sub
mov
dec
mov
adc
adc
in
dec
sub
cmp
movsb
cli
cmp
shl
and
shrb
mov
sub
jg
or
push
idivb
xor
pop
push
push
outsl
dec
mov
jbe
mov
in
outsb
in
int
into
xchg
sub
shll
cmp
fldcw
mov
pop
push
mov
push
push
mov
lock
mov
fimull
shl
clc
mov
pop
lret
fs
ret
mov
into
inc
lea
lock
dec
pop
jmp
xor
pop
repz
lret
mov
js
lods
lcall
sti
fsubs
jp
lods
roll
xlat
stos
pop
or
xlat
jg
dec
lea
aas
fsubs
int3
fwait
outsl
xor
ja
sub
push
or
int3
inc
mov
leave
mov
pop
xchg
pop
xchg
push
xchg
push
dec
cmp
mov
mov
jae
imul
shlb
mov
jbe
sub
mov
cs
cmp
sub
lock
insl
push
mov
push
mov
cmp
pop
and
out
mov
loopne
ljmp
xor
xor
and
insb
cli
orl
test
push
inc
adc
mov
and
push
xor
scas
push
das
cmp
in
mov
xchg
aas
push
lds
xchg
xor
push
mov
mov
stos
push
xor
stos
cmp
incl
push
fwait
lods
fimuls
cmpsb
push
push
dec
jae
sahf
or
cmp
pop
std
dec
mov
inc
ja
jo
adc
sbb
jno
leave
mov
sbb
dec
lcall
jl
dec
popa
arpl
and
dec
push
std
jns
mov
imul
pop
mov
push
popa
in
pop
mov
pop
pop
push
daa
dec
ret
in
ljmp
add
or
xchg
xchg
push
mov
mov
popf
push
fnstcw
rclb
mov
fsts
movsb
jl
jl
repnz
ret
inc
push
das
test
decb
mov
out
pop
sti
outsl
jle
mov
adc
pop
sub
in
mov
mov
insl
jg
mov
xor
xor
jo
xchg
adc
mov
mov
pop
scas
dec
dec
jmp
push
xor
aad
and
push
test
cltd
sbb
mov
lret
mov
mov
fwait
mov
cltd
mov
xor
sub
xchg
fcoml
dec
jp
std
push
or
fisubrl
jae
dec
inc
in
push
sbb
mov
adc
sub
add
stos
push
push
push
xchg
aaa
xchg
add
jnp
jae
ror
sbb
sub
or
loope
mov
xorl
pop
add
cld
or
test
aad
fisubrs
mov
in
sub
insb
xor
addr16
cs
aaa
ds
adc
adc
or
pushf
inc
ljmp
aaa
jmp
sahf
mov
jecxz
mov
loop
xchg
mov
fdivrs
rolb
xchg
push
stos
mov
mov
test
sub
movsl
lea
jecxz
or
scas
jne
pushf
outsl
imul
lret
test
shll
movsl
add
aam
enter
bound
add
psrad
or
in
psubusw
mov
cmpsl
push
ret
jp
cmp
xor
cmp
sbb
inc
mov
mov
movb
sbb
add
repnz
sub
pop
cmc
movsl
xchg
add
dec
sub
sbb
jns
ja
mov
ds
in
fldt
xor
std
stc
adc
and
inc
sbb
das
cmp
mov
inc
aas
jle
mov
and
pushl
lods
adc
and
movsl
lods
jge
lret
mov
xor
in
ficoml
leave
fiadds
ja
shrb
sub
pop
jno
pop
xchg
mov
repnz
or
fiadds
in
mov
adc
xor
and
lahf
mov
adc
iret
and
mov
fmull
outsl
add
clc
cwtl
fwait
xchg
cmp
imul
sbb
fwait
mov
cmp
push
mov
sbb
sbb
lods
inc
fbld
jge
test
sbb
gs
ss
rol
cwtl
addl
fildl
push
daa
repnz
pop
and
jmp
repz
and
out
in
pop
pop
in
mov
aam
mov
pop
lret
mov
fsts
movsb
push
js
in
dec
rorl
xorl
inc
jp
sub
pop
mov
jo
adc
xlat
pushl
loope
inc
dec
lcall
mov
sbb
or
outsb
xchg
std
dec
add
push
pop
add
jne
lock
dec
pushf
push
addr16
jg
popa
mov
data16
mov
mov
js
mov
and
jmp
fdivrl
out
cmp
mov
mov
bound
push
out
jo
loope
xor
ret
scas
test
pminub
fimull
dec
jg
loop
jle
cmp
scas
std
dec
cmp
pop
lea
adc
test
nop
int
mov
js
lds
incl
cmpsl
sub
xor
das
sbb
pop
stos
add
or
push
cmpl
lock
dec
imul
and
xor
xchg
push
mov
pop
mov
push
gs
pop
pushf
fmul
and
and
add
sub
and
sbb
mov
leave
ljmp
cltd
dec
andb
mov
mov
dec
pop
stc
jl
andl
mov
leave
cmpsl
es
lcall
out
push
pop
xor
js
adc
push
jg
jmp
cmpsb
int3
inc
mov
add
push
sbb
sbb
push
popl
mov
adcl
leave
jge
dec
addl
sarb
add
or
int3
movq
lret
ds
jmp
out
popf
or
cmp
loopne
test
call
xor
add
mov
loop
jns
pop
cwtl
scas
mov
test
dec
mov
imul
pop
pushf
sub
rorb
fdivs
data16
pusha
cmpsb
dec
mov
fimuls
add
pop
dec
cmp
jae
xor
and
ficompl
push
jmp
sub
ss
daa
xchg
lock
and
sbb
int3
sub
inc
ret
sbb
out
adc
push
vmwrite
inc
sbb
divb
int
or
push
pop
sub
ret
inc
sarl
mov
pop
jns
jns
dec
and
jmp
je
pop
inc
popa
fadd
xor
push
enter
dec
sarl
mov
mov
movsl
icebp
fyl2x
icebp
xchg
push
push
mov
dec
je
sub
push
sti
lds
sbb
or
inc
mov
xlat
bound
push
jno
iret
add
dec
dec
call
decb
mov
js
xchg
jp
mov
inc
sbb
jl
lock
adc
add
jg
inc
insl
scas
repz
push
add
pop
fstl
cmp
imul
jp
and
push
add
push
out
arpl
sti
shlb
outsl
mov
fcoml
xor
mov
jl
sbb
adc
out
pop
ljmp
insl
leave
pushf
insb
mov
andl
push
testl
iret
xchg
xor
mov
out
popf
punpckhbw
in
jmp
and
sbb
lock
mov
scas
dec
nop
inc
inc
xchg
add
mov
leave
ja
mov
inc
addb
leave
fsubrl
mov
nop
inc
sbb
adc
pop
add
sub
mov
sub
outsl
lcall
ljmp
ficoms
es
mov
ret
xor
lcall
fsubp
in
add
mov
roll
js
repz
ss
or
xorl
idivb
sti
repnz
add
cmp
pop
xchg
mov
lcall
rorb
mov
pusha
test
inc
je
stos
adc
dec
outsb
les
pop
cli
jno
stos
jecxz
xor
cld
jns
fwait
loop
inc
in
sub
jmp
push
gs
pusha
shll
cli
mov
jae
rcr
inc
js
xor
in
test
in
inc
movd
mov
mov
outsl
pop
icebp
lock
les
jb
rcrl
adc
scas
add
dec
pushf
int3
pop
xor
movsb
xchg
push
lds
fnstcw
out
push
mov
mov
dec
push
cmp
or
mov
imul
push
mov
inc
shl
sahf
notl
push
imul
jnp
jbe
jg
aas
adcb
lock
mov
outsl
or
data16
lods
dec
out
loopne
add
fiaddl
test
sub
fidivrl
sbb
repz
push
std
cmp
xlat
insl
jns
clc
cmpl
sbb
and
fcoml
pop
in
mov
dec
push
rcll
push
pop
test
inc
pop
pop
sub
dec
leave
out
ja
inc
jae
in
sbb
sbb
jno
rorb
imul
mov
data16
dec
call
pushf
mov
mov
lods
xor
push
cld
arpl
test
and
repnz
mov
jae
in
shr
add
push
sahf
sbb
ljmp
rcll
mov
pop
fbstp
loop
data16
fisubrl
lahf
dec
loop,pn
mov
or
sti
mov
scas
int
sub
jno
mov
mov
or
jns
ljmp
orl
add
lret
sti
sbb
inc
shlb
xchg
inc
ficomps
or
mov
push
xchg
lcall
push
mov
xchg
jmp
jle
mov
and
pop
cmp
sti
sbb
add
adc
sub
adc
daa
mov
mov
or
adc
adc
pop
enter
inc
out
repz
xchg
leave
sahf
subb
pop
into
push
aad
push
or
lcall
mov
pop
notb
xchg
xor
jmp
mov
add
mov
add
mov
inc
mov
or
dec
xlat
adc
scas
or
mov
adc
pop
cmp
push
and
inc
test
sti
pop
fcmovnb
cmpsb
mov
xlat
popf
popf
negb
mov
outsb
jge
orl
into
test
xor
or
in
data16
xor
sti
pop
fadds
pop
push
adc
inc
pushf
pop
cli
mov
inc
pop
xchg
dec
xchg
xchg
insl
pextrw
fwait
out
shll
out
lock
mov
mov
sbb
dec
mov
xchg
dec
sub
outsl
clc
in
es
test
sbb
pop
mov
ds
cmp
bndldx
push
lock
cmpsl
out
aas
ljmp
or
mov
lods
outsb
xchg
fucom
repz
ljmp
adc
push
sbb
pop
outsl
pop
push
aaa
jle
adc
pop
cmp
inc
repnz
movsl
dec
ja
or
pop
aaa
adc
repz
aad
roll
inc
enter
xor
cmp
or
out
adc
jo
int3
mov
dec
dec
jb
lret
enter
push
ljmp
mov
sahf
stos
pop
mov
push
add
dec
jo
pop
xchg
inc
add
inc
xor
insb
mov
jae
mov
ja
cld
in
cmp
aam
xchg
xchg
push
or
je
mov
fwait
cmpb
or
add
adc
pop
pusha
sbb
xchg
stos
leave
das
xchg
ljmp
ja
arpl
pop
lea
sub
cwtl
xchg
adc
in
test
and
popf
shlb
push
xchg
jbe
mov
aaa
rcpps
pop
sub
in
dec
sbb
ret
cmpsb
in
lret
xchg
dec
lahf
jp
mov
inc
cs
adc
xor
ret
lock
ds
bound
mov
jge
call
stc
pop
jge
pushf
mov
sbb
mov
add
fwait
xchg
and
out
add
push
mov
jle
aas
out
pop
xchg
and
into
fimull
fdiv
ret
dec
test
mov
push
rorl
dec
jg
or
rolb
nop
pop
mov
xor
rorl
out
push
aaa
adc
movsl
das
lods
cmp
sahf
pop
pop
xlat
stc
xchg
sahf
xchg
hlt
cld
cmpsl
call
shlb
outsb
push
jb
xchg
mov
sti
add
paddusb
mov
sarl
call
cltd
daa
loope
jbe
daa
mov
les
mov
or
or
sub
loope
sahf
push
fcomp
sbb
cmp
cmpl
nop
fiadds
repz
test
ljmp
popf
xchg
dec
daa
push
flds
scas
push
rcrl
rcrb
sub
cmp
aam
mov
cmp
inc
jmp
nop
mov
fldt
das
sbb
fnsave
and
inc
adc
call
ret
pop
sbbl
jne
add
cmc
mov
push
mov
out
mov
iret
lahf
jbe
mov
push
inc
sub
das
movsb
dec
mov
negl
cs
mov
mov
jno
adc
aaa
adc
pop
mov
ret
and
mov
stos
push
adc
lds
pusha
lds
xchg
jae
aad
push
out
mov
and
xchg
mov
mov
stos
sbb
push
pop
pop
jp
ret
cs
icebp
in
enter
pop
push
lret
mov
xor
sbb
xchg
popa
aam
jle
pop
sahf
out
jne
or
or
mov
xor
add
arpl
movsl
ffreep
ja
outsb
popf
test
les
lea
or
scas
lds
test
mov
xor
cli
mov
mov
fnsave
dec
mov
lret
mov
int3
ja
mov
popf
pusha
loop
popa
mov
out
pop
enter
outsl
movb
and
sub
fmuls
out
in
test
pop
stc
mov
or
and
or
ret
out
pop
fs
and
loope
mov
xchg
sub
enter
les
les
inc
adc
shl
add
outsb
xlat
xor
mov
into
jg
push
inc
mov
dec
sbb
imul
testb
enter
imul
scas
or
test
and
sahf
push
dec
and
jb
movsl
push
and
dec
push
out
add
dec
rorb
cli
mov
cs
lea
pop
movsb
mov
pop
and
mov
int
sub
imul
int
fildl
pusha
fadd
out
xor
imul
xor
pop
lcall
mov
lret
movsb
lret
sbb
out
push
fsubs
adc
test
pop
add
jno
nop
push
addr16
jg
pusha
test
pop
jecxz
popf
jns
out
test
mov
imul
cltd
stos
pop
outsb
sub
push
call
dec
sbb
mov
in
xlat
pop
fmul
movsb
out
outsb
sub
loopne
cmpsb
ljmp
xchg
std
fwait
jbe
and
fistps
test
pop
ret
or
int
dec
add
call
arpl
and
jp
movsl
movl
pop
and
nop
lods
imul
sahf
lods
lods
sahf
dec
das
mov
ret
out
add
notb
fdivrl
incl
andb
jmp
push
xor
pop
inc
and
stos
mov
cmc
push
push
dec
div
mov
movsb
mov
mov
stos
cmpsb
sbb
test
mov
cmp
or
mov
sbb
jne
out
and
mov
cli
dec
jbe
fidivrs
call
shlb
sbb
nop
call
out
pop
mov
push
std
clc
push
ret
xor
cltd
or
push
mov
jmp
pop
mov
or
or
xor
pop
push
aad
test
in
add
in
fistps
jmp
fiaddl
mov
lds
shld
or
test
dec
push
pusha
movsb
jno
scas
lret
insb
sbb
jecxz
xchg
mov
jl
pop
and
sub
loopne
cmpsl
stos
cmp
pop
add
add
mov
lods
inc
aad
push
dec
sahf
jbe
push
rorb
add
addr16
clc
push
mov
aas
lods
cmpsb
mov
cmpsl
in
xchg
cwtl
adc
add
in
inc
loope
and
popa
and
aam
sti
jb
inc
mov
push
shrl
fidivl
pop
repnz
bound
or
in
je
out
shlb
clc
inc
icebp
xor
adc
cmp
ljmp
lcall
movhps
add
jbe
fwait
adc
push
fists
or
loope
pop
fiadds
lcall
mov
or
mov
test
dec
push
push
movsb
push
dec
and
cmpsb
sti
adc
or
or
or
xchg
inc
or
and
push
fisubs
push
icebp
mov
jns
icebp
loope
adc
insl
pop
in
pop
mov
stc
jg
and
sbb
test
cmp
lea
mov
js
pop
das
jecxz
sub
out
lds
add
lcall
in
inc
rol
cmp
lret
mov
mov
sbb
movsl
adc
jl
sub
inc
mov
fcomps
inc
insl
cli
int
adc
and
fidivl
mov
fsts
adc
pop
push
sbb
js
stos
push
and
add
repnz
outsl
jnp
idivb
sub
loop
iret
fnstsw
cmp
in
lahf
stc
nop
jne
xor
outsb
stos
xor
mov
pop
fs
lret
add
pop
sbb
mov
jae
mov
movsb
out
ss
and
sbb
bnd
lcall
lea
push
ret
mov
add
test
pushl
test
int
in
mov
push
das
outsb
mov
ss
lds
xor
or
das
ss
out
push
pop
xchg
test
pushf
aam
dec
imul
fldcw
jne
int3
lds
sub
pop
lods
mov
mov
sub
arpl
and
xchg
xchg
lahf
xlat
sbb
dec
dec
push
cmp
fxch
test
ss
and
mov
jo
push
leave
mov
and
mov
cli
pop
lea
icebp
mov
das
insl
jb
mov
and
xchg
divps
mov
cmpb
adc
cmpsb
add
imul
and
test
out
add
ret
test
inc
into
mov
dec
pop
jno
xor
and
cmp
shrl
ds
cmp
fidivs
add
mov
jno
sbb
fcoms
fnsave
xor
mov
pop
imul
aas
mov
out
mov
call
stos
mov
xchg
jo
movl
inc
scas
pop
pop
xchg
gs
xchg
fxch
or
imul
arpl
and
inc
xor
sbb
fwait
and
aaa
arpl
pusha
inc
mov
ret
stos
xchg
mov
pop
pop
stos
xor
daa
ret
mov
scas
jnp
mov
sbbl
sbb
loopne
push
stc
mov
in
mov
sbb
inc
xchg
xor
dec
lret
bound
lcall
jmp
scas
add
outsb
push
pop
xor
je
xlat
sub
stc
sbbb
rcr
pusha
aam
push
adc
cwtl
adc
dec
jno
cmpsb
add
push
sbb
es
mov
in
ficoml
inc
jno
int
add
adcb
pop
cmp
dec
test
es
xor
shll
pop
sbb
mov
hlt
inc
pop
jae
adc
jmp
ljmp
jl
mov
clc
into
xor
jle
ret
cwtl
inc
dec
mov
or
leave
lods
mov
inc
repnz
sub
jmp
mov
in
adc
jle
test
push
sbb
outsb
neg
jns
mov
ret
jg
dec
mov
dec
ret
inc
jmp
pop
sbb
mov
inc
test
jne
ret
adc
push
mov
lret
push
call
test
xorb
push
dec
out
inc
and
mov
fs
std
cmpsl
jne
xchg
outsb
in
mov
aas
and
cltd
push
lcall
mov
cmp
jo
fadds
jb
mov
lods
mov
iret
cmc
pop
inc
stc
add
nop
inc
ret
sti
aad
imul
pop
in
jne
cmp
jecxz
clc
jb
dec
add
and
pop
mov
adc
std
bound
orb
jecxz
xchg
into
aam
mov
sub
push
and
inc
stc
or
xchg
mov
jmp
mov
pop
xchg
out
adc
lea
mov
rcrb
or
test
dec
mov
push
notl
pop
lea
imul
call
jne
sbb
dec
push
pusha
or
mov
cmp
mov
adc
and
jne
call
int3
and
pusha
test
sbb
add
fcomps
add
mov
mov
cmp
stos
or
xor
paddw
and
or
out
repnz
cmp
mov
and
cli
xor
cmp
pop
or
cmpb
mov
sub
inc
xchg
out
lock
push
mov
add
cmp
sub
mov
movsl
sub
and
aam
sbb
mov
movsl
out
addr16
xchg
xor
cmpsl
pop
mov
sub
stc
icebp
std
pop
push
mov
pop
scas
pop
negb
jp
pop
aad
mov
jle
sahf
xor
dec
rcrb
leave
nop
jnp
fs
xor
jecxz
xchg
lods
inc
xchg
inc
inc
xchg
or
sbb
dec
mov
pop
pop
xchg
fcoml
fstpt
cwtl
je
pop
lret
cs
cmp
mov
jo
and
pop
cld
in
pop
lods
lods
ljmp
sbbb
sahf
stc
mov
jb
cmp
scas
call
cmpsb
sub
xchg
pusha
push
add
push
inc
rolb
pop
dec
popa
iret
lcall
shll
ljmp
jecxz
inc
fisttpll
out
scas
sub
add
mov
add
out
jl
cmpsl
xchg
data16
add
int
int
inc
inc
pop
fstps
jns
sbbb
xor
loop
pop
or
adc
adc
fisubrs
jg
push
mov
into
inc
je
clc
xor
test
pusha
add
pop
jg
ret
jo
push
sahf
jae
push
pop
mov
aaa
pop
push
push
mov
loope
hlt
cli
jb
or
ss
mov
mov
jb
mov
push
popa
loopne
das
lcall
and
cmp
hlt
push
mov
push
jmp
or
pusha
add
scas
jo
pop
fcomp
pop
mov
inc
add
push
fldt
mov
sub
sub
sbb
pop
push
mov
xlat
outsl
fwait
adc
adc
inc
insl
aaa
test
xor
popf
cmc
cmpl
or
xor
inc
pusha
testb
ret
clc
or
fsts
psrld
cmpsb
mov
cmp
cmp
lret
popl
test
mov
icebp
stos
inc
jnp
sbb
jo
call
add
xor
xor
idiv
imul
jg
push
mov
xlat
jb
inc
mov
adc
das
and
mov
fldt
js
sbb
mov
in
ljmp
pop
into
cmpsl
xchg
iret
push
mov
adc
or
mov
mov
out
mov
xchg
mov
cmp
negb
lods
mov
lret
pop
lahf
out
test
iret
in
pop
fwait
test
sbb
addl
mov
mov
cs
or
lret
pop
imul
fcmovnbe
jo
scas
xchg
cmp
cmp
aaa
adc
int
pushf
imul
lret
push
mov
adc
adc
mov
sbb
xchg
icebp
jnp
mov
cs
add
ss
sub
xor
js
push
push
push
xor
and
ljmp
popf
testb
addb
dec
in
int3
ss
into
push
mov
jmp
xchg
adc
cmp
out
jns
int3
mov
test
push
mov
push
jb
fldt
jge
dec
pop
push
cmp
sub
insb
jb
sbb
or
or
inc
sbb
ds
dec
imul
or
clc
or
mov
daa
sub
pop
mov
mov
or
daa
xor
dec
hlt
movb
stos
push
sbb
cmp
pop
xor
push
mov
scas
push
sub
add
out
sbb
add
jmp
shrl
leave
mov
or
imul
sti
adc
or
movsb
mov
adc
jl
inc
scas
clc
cli
imul
jno
mov
xor
sti
ljmp
and
and
mov
std
movsb
or
ljmp
sub
clc
xchg
xchg
stos
pusha
add
fcoms
lret
inc
sbb
lahf
mov
shl
inc
mov
add
sbb
adc
cmc
int
or
jae
push
mov
shll
fldenv
mov
mov
dec
mov
in
sbb
lahf
sub
sbb
cmc
clc
push
clc
pushw
cmpsl
rolb
iret
mull
adc
add
push
jno
cmp
dec
cwtl
adc
dec
rorb
mov
mov
sub
lahf
insl
dec
push
mov
mov
jnp
pop
jb
pushf
or
popf
jmp
rcr
jg
fwait
lcall
push
popa
rclb
lret
mov
and
mov
outsl
movsb
popf
ja
pop
int3
fists
lock
es
aad
fisttps
lahf
jmp
mov
mov
popa
je
pop
mov
ret
test
inc
cmp
jne
jmp
js
int3
aaa
or
jnp
scas
push
ret
xchg
jl
mov
fldcw
mov
int3
add
lahf
stos
test
idivl
jno
into
mov
push
jge
cmp
mov
or
sub
repnz
pushf
les
push
pop
les
adc
cli
daa
lock
ret
data16
movsb
mov
adc
xchg
shlb
roll
clc
movsl
adc
push
adc
or
push
aaa
add
push
std
add
xor
or
and
sahf
in
call
lret
xchg
push
fld1
push
sbbb
jge
mov
mov
mov
sub
jl
cmp
and
pop
jae
mov
jecxz
idivl
cmp
push
cli
imul
xchg
in
lahf
mov
jne
sbb
mov
inc
mov
roll
outsl
mov
bound
sahf
and
cmp
outsb
xor
popf
mov
mov
dec
fldenv
push
mov
in
out
pop
push
or
and
shll
sarb
stc
pop
shrl
bound
mov
ret
pop
dec
mov
insl
hlt
stos
xor
sub
jns
jge
sar
add
mov
xchg
sbb
inc
fisubs
push
pop
mov
cmc
andl
push
push
push
push
ja
stos
lock
ss
test
stos
jno
adc
xorb
test
sub
inc
add
adc
mov
shr
add
inc
add
ja
xor
add
sbb
mov
insb
pop
dec
cltd
jecxz
mov
cmc
xor
xchg
xor
lcall
jb
in
push
movsw
jo
inc
sub
push
pop
stc
xor
jmp
xor
jle
arpl
mov
les
fadd
jp
mov
insb
mov
cld
mov
arpl
mov
dec
push
and
pop
in
dec
pusha
push
pop
cltd
out
sub
hlt
or
jg
and
mov
ret
jno
xchg
and
movsb
inc
pusha
xchg
and
push
sbb
bound
fldl
xchg
xchg
pop
cmpb
or
pusha
and
cmp
iret
mov
dec
loopne
rcll
sahf
stos
or
fsubr
sub
repz
out
and
pop
jne
and
push
and
jl
std
sub
aam
cmp
add
fmulp
and
cmp
pop
jb
cmp
mov
sbb
frstor
mov
outsb
cld
lret
sub
mov
jbe
cmp
push
sbb
rorb
pop
imulb
jno
mov
adc
jne
fwait
or
je
adc
xor
in
jg
xchg
inc
sub
aam
dec
sub
cmp
sub
sub
out
stos
je
mov
add
push
cli
imul
movsl
sub
ficomps
mov
jg
add
cmp
pushf
mov
iret
repz
mov
mov
pusha
gs
and
stos
mov
stc
push
xor
ljmp
out
jmp
mov
lret
adc
mov
lods
test
push
lods
subb
jb
push
inc
clc
mov
cmp
arpl
add
icebp
stc
aaa
mov
test
pop
cmp
sbb
jp
cmp
mov
mov
aaa
fildl
call
dec
cmp
stos
stos
jmp
outsl
push
lock
dec
sbb
pop
sbb
shrl
lcall
pop
loopne
xor
sub
mov
xchg
sub
sbbb
push
icebp
std
xchg
lock
popf
dec
fstpt
shlb
stc
ficomps
imul
mov
les
inc
fisttpll
push
mov
xchg
mov
push
adc
jp
push
es
mov
addb
aad
fcoms
fcompl
xchg
daa
test
jle
pop
xor
jno
mov
popf
aad
fmull
or
lcall
pop
in
pushf
xchg
or
je
not
sbb
jmp
fcmovnu
aas
jge
jp
pop
outsb
mov
std
cmp
sub
ret
call
xlat
std
fisubl
sbb
xor
outsl
lods
aas
inc
scas
outsl
xchg
fs
testb
inc
mov
cmp
mov
ja
mov
sbb
or
jne
movsb
nop
inc
fcmovu
or
mov
mov
inc
mov
pop
jmp
imul
sbb
xor
repnz
mov
pop
lahf
push
stos
fiadds
pcmpeqb
insl
pop
cmp
cmp
out
dec
cmp
aam
in
adcb
out
jae
cli
mov
iret
ja
lods
arpl
and
stos
add
push
inc
adc
test
xorl
ljmp
jb
js
lahf
sbb
mov
nop
pusha
nop
lods
xchg
insl
push
js
stos
cs
gs
xchg
cmp
mov
add
movl
jecxz
jecxz
adcb
fwait
or
push
push
jb
sti
mov
lret
repnz
and
outsl
lret
loope
adc
xorps
inc
sbbl
into
push
xlat
pop
mov
fldenv
popf
lcall
ror
out
sbb
fldt
movsl
jno
adc
xor
xor
imul
fsubr
xchg
sbb
cs
jl
pop
cltd
or
or
mov
jmp
cli
mov
loop
lea
testb
jae
dec
clc
fistl
lcall
call
lcall
mov
sub
mov
xor
cwtl
repz
fdivs
jae
mov
xor
call
popa
test
inc
and
mov
enter
cmp
push
pop
popaw
or
aas
dec
jmp
aaa
in
cmp
sbb
pop
mov
dec
add
push
cmp
mov
test
bound
scas
push
cmpl
push
cmp
xor
je
xor
dec
inc
hlt
cs
popa
and
movsl
sub
mov
cmp
fdivrp
adc
push
push
pop
fcomps
pop
jns
inc
repnz
mov
bound
cmpsb
in
add
sub
or
stos
xchg
shr
cltd
in
add
lcall
adc
fdivl
adc
loopne
aas
shrl
add
nop
push
add
xor
inc
and
bound
fistl
pop
sbb
loop
mov
paddusb
mov
and
lock
add
mov
dec
jmp
adc
add
pop
into
cmp
cld
mov
jno
pop
xchg
imul
fwait
adc
cmp
jge
out
sbb
inc
pop
add
pop
stos
push
hlt
in
jbe
sub
test
inc
mov
sub
lds
movsl
movb
jo
sahf
pop
dec
ret
dec
shll
xor
je
sub
cmp
das
cli
in
adc
or
mov
jecxz
mov
lock
shlb
rcll
stos
mov
fcoml
jno
jnp
inc
call
jl
scas
dec
insw
popa
mov
xchg
outsb
cmp
inc
push
pop
cmp
rcrl
jns
jb
rolb
dec
mov
sub
xchg
pop
cltd
arpl
push
cld
sub
push
push
or
fcmovu
lock
adc
int3
je
cld
mov
mov
ficomps
mov
call
xor
roll
fisubs
mov
cmp
pop
mov
shrb
jae
jno
icebp
movsl
adc
dec
mov
in
nop
in
pop
in
loop
or
or
imul
jo
cmp
add
mov
pop
in
mov
xor
jecxz
sbb
sbbb
and
mov
sub
mov
lcall
lds
iret
stc
imul
sbb
gs
jmp
pop
repnz
or
stos
fstps
stos
fisttps
xchg
pop
push
sbb
pop
and
mov
pop
mov
in
xor
out
fisubrl
add
pushf
adc
adcl
add
mov
push
jle
mov
or
lcall
mov
ds
mov
pusha
faddl
insl
sub
mov
push
int
sub
lods
scas
mov
xchg
out
in
fistpll
cmpsb
test
jbe
lock
stos
inc
inc
mov
mov
inc
mov
sub
outsl
cltd
pop
daa
cmpsb
or
sub
lahf
ret
jmp
test
xchg
movsb
ja
mov
imul
xchg
jge
mov
lock
push
ret
pop
stos
outsb
call
dec
adc
sub
pushf
mov
sbb
movsl
sbb
imul
push
arpl
in
repnz
or
cmpsb
xchg
mov
out
in
dec
cmp
sbb
repz
fstpt
shll
jae
dec
clc
jnp
inc
mov
movsb
jbe
out
push
imull
cs
mov
sub
push
lea
add
mov
mov
mov
adc
xchg
sbb
mov
les
aam
pop
decb
jmp
jl
pusha
pop
xchg
inc
xchg
add
cltd
lahf
subl
imul
fistpl
aaa
pushf
rorb
aad
arpl
add
dec
dec
xchg
push
arpl
and
cmp
ds
insb
loope
les
or
stc
cltd
or
pop
xchg
clc
push
shlb
jns
inc
aad
pop
lret
repnz
cwtl
push
movsb
movsl
mov
pop
sarl
pop
movsl
mov
gs
fnstcw
outsb
rcrl
ret
sbb
xchg
xlat
lea
jmp
jns
mov
clc
or
ss
mov
cmpsb
aaa
adc
mov
push
mov
or
mov
mov
cli
dec
loopne
jmp
mov
push
and
adc
pushf
loope
dec
mov
cmp
out
loope
pop
sub
cltd
inc
lock
neg
ret
inc
xor
pop
and
das
mov
pushf
lret
call
cmp
jecxz
mov
or
xor
dec
sbb
test
adc
repz
jo
mov
jg
or
les
xchg
xchg
jno
cmp
adc
mov
push
inc
loopne
stos
dec
xchg
xchg
cmp
cmpsb
add
mov
cmpsl
decb
iret
push
adc
shrb
inc
and
pop
sbbl
pop
xlat
add
cmp
push
test
jbe
pop
xchg
lods
test
push
andb
fdivp
cs
cmp
sub
mov
pop
xlat
shr
jae
addr16
or
or
setle
pop
mov
fdivs
push
mov
mov
sub
inc
push
rclb
push
lahf
iret
hlt
inc
daa
jmp
rcl
adc
sti
ret
adc
xor
push
mov
and
cmp
jecxz
lret
pushf
sbb
or
xor
and
cli
fsts
jmp
or
add
xchg
imul
rcll
mov
insl
movsb
lods
imul
pop
add
cmp
test
cmpsb
sbb
dec
test
pop
mov
add
cli
idivb
adc
dec
aaa
mov
mov
mov
icebp
int
add
push
in
aam
xor
popf
mov
dec
and
pop
and
roll
sbb
add
loopne
add
mov
xchg
arpl
lods
shr
stc
add
sbb
jecxz
fadds
sbbl
xor
imul
popf
ja
push
cld
gs
mov
mov
mov
xor
into
cmc
xchg
push
jp
jmp
fdivr
mov
jbe
dec
in
mov
sub
cmp
cmp
jl
pop
mov
pop
fildll
lods
cltd
or
mov
jo
push
cmp
fbstp
test
out
out
les
xchg
dec
xchg
lahf
lds
hlt
test
aaa
ljmp
decb
cmp
jg
stos
add
je
add
dec
ficomps
fiaddl
xor
scas
push
dec
or
push
sbb
shl
pop
fidivl
pop
mov
pop
insb
scas
pop
pop
pop
rolb
mov
ficomps
jns
scas
inc
nop
dec
lahf
xchg
addl
lods
nop
mov
jmp
iret
imul
cli
xor
test
pop
popa
sbb
outsb
shlb
cmp
and
ljmp
pop
adc
cmp
and
clc
add
in
mov
dec
mov
shrb
mov
inc
sbb
jle
test
xchg
hlt
jmp
cmp
leave
jmp
test
push
icebp
imul
mov
nop
pop
and
inc
mov
fwait
adc
mov
cltd
scas
movb
mov
aas
nop
adc
test
sub
cmp
mov
shrd
xchg
cmpl
cs
cli
and
daa
je
jne
faddl
jmp
mov
data16
jb
into
fs
push
sbb
es
dec
rcr
jnp
pop
in
xchg
cmpl
inc
or
dec
push
std
jge
mov
add
cwtl
jbe
push
mov
insb
sub
cmp
mov
mov
les
mov
mov
xchg
divb
pop
sbbl
int
push
sahf
mov
js
inc
xchg
fidivrl
or
cmp
and
sub
data16
xchg
push
fwait
inc
aam
test
stos
leave
adc
aam
jnp
pop
and
xor
jmp
rcll
lods
adc
push
sti
xchg
pop
mov
or
lods
fsubs
int3
mov
cltd
sub
lahf
gs
sbb
jmp
xchg
lret
pop
sbb
cwtl
lahf
cmc
leave
neg
lret
pop
cli
jg
jge
out
rclb
in
or
add
mov
push
sub
jp
aas
fildll
ja
push
dec
daa
xchg
xchg
inc
incb
xor
push
mov
enter
sarl
dec
mov
or
push
push
or
out
sti
mov
cmpsb
cmp
js
ljmp
lahf
sbb
out
xchg
loopne
ret
adc
fstpl
call
mov
out
cli
xchg
lds
pushf
fwait
mov
in
insb
cs
or
arpl
iret
stos
add
dec
int
test
and
lods
dec
sbb
lret
cmp
arpl
repz
mov
aas
shll
or
aas
xchg
loopne
or
lock
jle
jecxz
xchg
movsb
rol
mov
pop
mov
mov
jns
pop
fucomi
add
or
outsb
pop
scas
inc
inc
sbb
add
mov
inc
add
mov
es
mov
addb
mov
mov
cmpsl
js
fstps
lock
sbb
jl
ret
adc
add
sti
hlt
adc
pop
mov
orb
or
into
stos
pop
ljmp
xor
scas
sti
addr16
adc
int3
aas
sbb
out
mov
xor
cmc
push
lret
push
outsb
adc
dec
inc
ret
test
movsl
and
pop
ret
test
int
mov
jo
add
push
ret
jge
lret
nop
cld
aam
cmpsl
mov
jno
leave
clc
hlt
lea
push
mov
mov
sub
or
popf
imul
es
cwtl
pop
cmp
sarl
addr16
lahf
jmp
mov
out
lret
sub
dec
movsb
mul
push
sub
jge
sub
dec
test
inc
outsb
lret
mov
add
xchg
sbb
push
sbb
out
imul
pop
mov
jl
sub
push
mov
xor
pushf
push
add
cmp
inc
into
in
stos
ret
insb
insl
xorb
add
jb
popf
inc
add
test
and
je
jo
jl
insb
mov
mov
testl
aas
sti
dec
mov
out
cwtl
inc
movsb
xor
int
addb
jecxz
fistpll
mov
add
jbe
les
loope
xchg
mov
into
jns
fwait
xor
mov
shl
lods
lock
xor
or
test
shrl
xchg
dec
add
add
adc
repz
imul
stc
mov
mov
inc
daa
pop
jne
adc
es
loopne
ss
js
cmp
out
cmp
mov
inc
cld
repnz
mov
in
lcall
pop
sbb
jae
and
sbb
adc
push
dec
sahf
pusha
int
js
mov
loop
dec
mov
out
dec
std
ret
scas
dec
push
dec
push
mov
cmpsb
cli
inc
orb
jge
mov
inc
dec
and
popa
sbb
inc
dec
jns
mov
cmp
xor
mov
out
inc
loope
sbb
jmp
mov
cwtl
iret
ret
or
lock
xchg
jmp
cmp
arpl
mov
sub
imul
cmpsb
push
popf
int
mov
popa
fistl
xlat
repnz
pop
into
sbb
jge
dec
push
mov
add
jge
daa
mov
push
cwtl
jae
addr16
add
jns
jne
bound
inc
ss
sub
jno
pop
clc
outsl
call
pop
rcrb
fstpt
cmpsl
arpl
inc
int
fistl
cmp
movsl
jmp
lret
xchg
nop
mull
in
and
and
xchg
imul
lcall
push
lret
xchg
data16
dec
lcall
clc
pop
push
pop
xor
or
pop
popf
cmc
push
movsb
aaa
ja
es
cld
inc
lds
ljmp
ss
insl
stos
in
dec
xchg
cmc
fcoml
ret
mov
enter
xor
sbb
adc
or
and
je
dec
ret
jp
test
xchg
push
je
jo
es
psubusw
mov
fcompl
mov
xchg
xlat
lods
cmp
dec
pop
xchg
insl
loopne
in
mull
add
jmp
fdiv
icebp
cmpl
test
mov
fidivs
add
dec
cltd
mov
in
scas
jne
jp
cmp
stos
xchg
loop
loopne
jge
out
outsl
add
movsl
adc
sbb
or
inc
push
xchg
stc
push
mov
sub
cld
test
cld
insl
xor
inc
sbb
bound
mov
xor
xor
mov
mov
or
mov
and
ficomps
lock
repnz
mov
cli
cmp
pop
ja
add
cmp
sub
lret
and
push
jbe
push
js
jmp
stos
mov
jmp
sub
mov
call
inc
mov
mov
mov
or
mov
inc
rorb
jecxz
rorl
pop
pop
jno
pextrw
and
push
mov
pop
jmp
xor
or
add
sub
lea
fidivrl
mov
repz
push
sub
cmc
dec
sbb
cwtl
push
push
xor
fsubs
pop
jl
dec
imul
pop
pushf
data16
push
scas
cmp
pushf
leave
test
push
adc
bound
or
xor
or
jmp
lods
xchg
inc
and
push
or
lds
fdivr
pusha
mov
pop
mov
pop
bound
adc
lods
pop
subb
xor
shll
xchg
add
jne
sbb
je
xlat
inc
adc
icebp
leave
xchg
add
stos
nop
test
dec
adc
mov
popf
test
jp
je
shr
mov
jmp
pop
rcrl
xlat
adcl
popa
mov
int
pop
in
pop
fisubrs
xor
mov
cmp
push
and
insb
or
pop
and
test
call
dec
cmp
movsl
jbe
and
inc
cmp
push
push
outsb
xchg
icebp
adc
or
add
in
orb
ret
lods
lock
loopne
leave
jl
pop
mov
and
fisubrs
mov
lahf
pop
shrl
xchg
mov
ret
scas
das
fists
sub
ds
cmp
dec
mov
fistl
pop
aaa
push
push
jecxz
ljmp
mov
mov
push
aas
pushf
jge
or
jo
imul
push
adc
dec
das
subl
test
add
insl
cmpsb
imul
push
dec
pop
add
popf
fsubl
outsb
and
mov
mov
jecxz
int3
mov
ja
pop
mov
add
cmp
imul
or
icebp
std
adc
add
cltd
add
sub
daa
int
mov
pop
mov
pop
pop
fcompl
dec
xchg
xchg
jge
mov
icebp
pop
cmp
sbb
div
imul
cmpsl
add
fdivl
sbb
inc
adc
cwtl
jae
pop
jmp
mov
xlat
xor
rcrb
jns
mov
idivl
inc
adc
mov
inc
and
orl
popf
test
xor
and
mov
push
push
cmpsb
test
icebp
inc
dec
cmpsb
pop
shrb
js
xchg
test
fwait
sbb
loopne
jo
dec
xchg
mov
and
mov
and
xchg
adc
enter
int3
xor
outsl
xchg
pop
pop
sub
aas
add
mov
lcall
outsb
fidivrl
out
mov
inc
mov
repz
mov
stos
pop
addb
sarl
lcall
mov
jo
xchg
inc
jl
jno
add
cmc
and
icebp
dec
sub
dec
les
mov
idivb
insb
cld
divb
int
sbb
xchg
cmp
pop
std
adc
or
lods
or
movsl
sbb
cwtl
jecxz
or
cmpsb
and
sub
jmp
jno
int
add
fnstcw
cmpsb
fsubrs
xlat
in
xchg
pushf
test
bound
fdivl
flds
cmp
mov
pop
dec
mov
sahf
sub
ret
xchg
xlat
leave
dec
ja
shrl
inc
and
or
and
sar
cmpl
adc
int
daa
icebp
sbb
aas
rcrb
pop
arpl
inc
jns
pop
mov
lret
jo
add
insb
int
inc
xchg
fadds
out
mov
mov
fsubr
add
popf
call
ss
jns
jne
psubusw
addl
mov
insl
jge
aaa
jle
fs
int
decl
xchg
iret
movsb
push
and
ljmp
dec
outsl
add
dec
sub
adc
out
push
xor
jl
sub
xor
mov
pop
insl
lods
out
cmp
or
cmp
mov
xor
sbb
or
lret
mov
or
insl
ret
int3
addr16
jmp
cmp
inc
int
xor
inc
notl
cmc
in
sub
pop
movsb
mov
fsubrl
cltd
xor
inc
sub
jge
leave
jnp
cmp
fcoms
daa
mov
xchg
dec
mov
mov
shl
repnz
es
xor
nop
mov
outsl
cmpsl
xor
pop
shll
xchg
scas
xlat
nop
mov
test
or
pop
and
insl
sub
mov
outsl
addr16
jge
mov
sub
mov
inc
or
xchg
jno
loop
sub
dec
push
jmp
lods
cmp
inc
mov
mov
push
jns
sub
dec
lods
adc
jl
addr16
notl
or
inc
dec
pop
lods
push
leave
cli
cmc
movsb
xor
jo
mov
loopne
pop
fistl
jno
fildll
into
mov
icebp
sbb
in
inc
push
jmp
and
mov
xor
mov
and
mov
xchg
xor
and
mov
nop
clc
test
add
sub
subl
movsl
jnp
add
mov
push
fidivs
jae
popf
cmp
mov
arpl
xchg
dec
je
and
adc
xchg
pop
fisttpl
mov
add
test
aas
mov
ss
cmpsl
loopne
pop
mov
sub
inc
xchg
dec
xacquire
cli
adc
rcrl
sub
fsubl
loope
popl
sub
cmpsl
and
mov
cmp
inc
stos
or
jo
arpl
lods
loopew
scas
or
cld
add
sub
inc
xchg
add
cld
xlat
cmp
mov
mov
divl
pop
pop
xchg
mov
mov
mov
adc
sub
xchg
fisubs
mov
push
xchg
ficomps
fildl
inc
dec
jmp
xor
push
js
or
inc
lcall
fmulp
push
mov
neg
aas
jbe
jmp
xor
cwtl
xchg
xor
movsl
movsl
pop
testl
sbb
pop
fidivl
cmp
je
insl
push
push
fs
popa
or
dec
push
sub
add
xor
stc
inc
cltd
mov
movsl
ud0
sub
rcr
xor
mov
add
mov
xorb
and
pop
push
test
fsts
sub
dec
sub
les
ss
mov
loope
or
xor
mov
negl
stos
lahf
lahf
adc
and
dec
lret
and
ficoml
xor
push
in
xchg
test
sub
enter
test
cld
pop
pop
mov
push
and
adc
or
mov
jg
fstpl
cmp
fdivl
iret
adcb
mov
and
dec
push
ja
mov
aas
sbb
insl
mov
push
cmpsl
lock
inc
data16
push
dec
add
les
mov
gs
ss
aad
insl
stos
idivl
xor
pop
push
in
int3
and
push
ret
xor
jns
or
imul
mov
mov
or
pop
scas
cmp
mov
mov
mov
xor
inc
imul
push
scas
bound
jl
push
xor
jmp
cwtl
push
xchg
test
cwtl
les
or
out
repz
dec
or
push
push
and
mov
mov
aaa
cmp
sbb
loope
nop
pop
in
sbb
and
and
xor
xchg
fcompl
lea
lahf
js
mov
lods
add
push
gs
ja
xor
jecxz
bound
inc
dec
push
stc
pop
mov
push
cmpsb
test
cld
mov
dec
test
and
pop
clc
mov
ret
jg
or
jp
lea
into
dec
or
insb
clc
scas
rolb
inc
adc
mov
dec
arpl
ret
xor
cs
rcl
sub
sti
xchg
out
sahf
mov
and
pop
ret
loope
push
push
push
js
mov
cmp
sub
stos
inc
test
fwait
mov
inc
dec
jno
inc
subl
xchg
fists
pop
dec
pop
repz
je
es
xor
pop
rolb
movsl
jecxz
stos
xchg
js
test
sub
mov
jo
lods
xchg
shrl
xor
dec
sbb
repnz
dec
aam
mov
in
mov
cltd
xchg
jl
pop
outsl
mov
sbb
je
daa
inc
into
sub
in
sub
and
icebp
dec
shrl
xlat
and
push
dec
lds
loope
lahf
and
xor
add
imul
xchg
ret
lods
inc
cli
lods
cmp
push
sti
gs
into
imul
fldcw
xor
sbb
clc
aas
cmp
inc
mov
lods
pop
jae
sub
out
sbb
push
push
and
stc
xor
gs
out
and
mov
xchg
jb
fisubrl
and
dec
adc
adc
push
pop
xor
test
fwait
in
pushf
push
iret
add
insb
xchg
mov
and
gs
push
push
idivb
push
scas
pushf
add
testl
cmpsb
lea
mov
push
fld
or
dec
lea
insl
dec
push
mov
into
fsubl
add
repz
movsb
not
in
push
test
mov
out
adc
bound
insb
xchg
inc
xchg
sbb
xchg
sub
pop
or
in
dec
mov
call
inc
xor
jnp
scas
jne
mov
sbb
jno
mov
into
sub
in
push
lds
cmp
push
xchg
pavgb
and
call
pop
jecxz
push
les
outsb
outsl
jp
shrl
pop
in
clc
xchg
pushf
pop
fistps
test
arpl
lcall
call
and
test
mov
outsb
imul
inc
imulb
aad
pop
nop
mov
push
gs
xorl
pusha
xchg
sbb
sub
mov
loope
shlb
adc
mov
sbb
in
add
dec
popf
ret
popl
jae
sbb
xchg
adc
call
push
sbbl
ljmp
sarb
ret
xor
je
push
cmp
push
in
test
jmp
addr16
or
and
lods
dec
pop
incl
xor
lahf
push
cwtl
cmc
or
nop
push
loopne
scas
xor
rcrb
cmp
sub
icebp
out
sub
add
add
push
dec
xorl
xchg
add
adc
sub
insb
mov
jg
shlb
cs
pop
arpl
sub
lds
add
gs
cmp
sub
inc
movsl
in
jg
pop
bound
xchg
push
jmp
cld
outsl
add
sub
mov
jecxz
sub
jge
aad
jmp
cmpsl
ret
mov
ret
mov
pop
push
popf
cmp
movsl
add
xor
aaa
pop
cmp
mov
push
in
mov
fwait
loopne
leave
pop
or
nop
inc
ss
fimull
and
iret
jb
mov
add
arpl
rol
inc
ss
aaa
lret
add
jmp
mov
jns
stc
or
inc
adc
shr
icebp
sahf
pop
mov
daa
xchg
adc
inc
dec
adc
mov
jne
cltd
jne
xor
mov
cmp
cmp
fmuls
outsl
ss
mov
adcl
ficomps
inc
adc
lds
add
cmp
or
ds
je
sti
dec
int3
ror
clc
in
punpcklbw
add
cs
outsl
test
out
sub
cmp
int3
rorb
pop
mov
adc
mov
dec
fdivrs
jne
daa
cmpsl
xchg
cs
mov
fimuls
mov
adc
cld
int
cmc
and
in
lret
insb
mov
add
xchg
ja
sbb
repnz
push
call
mov
xor
push
sub
jl
popf
rorl
lea
jmp
xchg
push
and
lds
imulb
push
lods
imul
jl
pop
jne
lock
adcl
inc
mov
lds
sarb
std
leave
rorb
into
or
cmp
inc
cwtl
lcall
test
pop
sub
icebp
sahf
mov
mov
fisttpl
jecxz
jmp
stos
pop
ljmp
adcl
dec
dec
lea
xor
ljmp
fbstp
outsl
loop
sbb
inc
add
mov
jbe
data16
jmp
and
imul
test
out
mov
or
mulb
cmp
repnz
xlat
clc
test
xor
lahf
dec
dec
mov
push
mov
sbb
cmpsl
xor
arpl
sub
arpl
sbb
mov
push
insb
ret
sub
mov
dec
inc
sub
scas
test
movsb
sbb
and
shr
and
clc
cmc
xor
xor
imul
shll
jno
enter
outsl
pop
pop
sbb
dec
add
inc
ljmp
shlb
push
xchg
pusha
push
stc
mov
dec
xor
xchg
into
mov
aad
clc
mov
lret
aas
test
cmc
or
frstor
push
inc
test
cltd
dec
mov
cmp
fucomi
and
iret
fst
std
testl
jmp
push
cmpsl
sti
movsl
aad
cmpsl
loop
out
ret
mov
inc
fcoml
jo
or
dec
jecxz
adc
jmp
ret
sti
out
out
pusha
out
or
xchg
imul
loope
and
push
inc
inc
insl
rsm
inc
addr16
dec
fucom
pop
imul
jae
sub
loope
movsl
inc
fwait
and
repnz
inc
ja
xchg
jp
ds
hlt
test
push
mov
push
mov
or
into
imul
aas
jle
test
xor
dec
mov
addl
arpl
cmp
rolb
cmp
and
cmp
mov
test
sti
mov
loop
mov
inc
pop
sub
aas
or
int
mov
popf
pop
js
pop
leave
sbb
push
push
hlt
cmp
mov
mov
fadd
sub
cmp
lahf
inc
push
in
sbb
popa
mov
icebp
add
aaa
cld
xchg
jmp
in
mov
std
xor
rol
adc
xlat
orb
and
rcrb
insb
sub
jae
pop
xchg
mov
and
mov
inc
mov
enter
std
push
jno
lds
push
imul
fldl
mov
xchg
mov
aas
xchg
pop
sub
and
jge
or
sub
inc
js
roll
add
aam
adc
lcall
icebp
mov
mov
incl
jecxz
inc
jbe
jle
pop
and
xor
xchg
mov
dec
jle
enter
cltd
movsb
add
inc
pushf
xor
adc
scas
jp
xorl
loope
sbb
repnz
out
loopne
stos
fcomps
rclb
je
mov
popa
into
adc
daa
xor
iret
cmp
xor
push
xlat
sbb
mov
lods
shr
cltd
sub
sbb
dec
test
cmpsl
jmp
fwait
inc
xlat
stc
xchg
cld
rorb
loopne
fstpl
cmpsl
xchg
arpl
jne
and
pop
imul
mov
sub
lea
inc
dec
lods
cmpsl
std
es
push
add
sbb
sahf
add
or
pop
je
arpl
ret
sbb
cwtl
and
xchg
ficoms
jnp
clc
and
cmc
sub
hlt
sub
cmp
push
sahf
and
rdtsc
sbbl
lret
pushw
fidivl
add
cmpsb
test
lcall
adcl
or
not
out
jb
mov
push
mov
mov
imul
xchg
xlat
cmp
dec
xor
xor
movsl
xor
mov
and
loope
pop
sbb
rcrl
ss
inc
lock
fs
jge
popa
icebp
push
std
fs
rol
mov
in
aaa
std
in
sub
test
xor
js,pt
repz
dec
fnstenv
lret
or
outsl
outsb
inc
sub
xchg
cmc
push
or
inc
xchg
sub
loopne
mov
cmpsl
mov
jg
test
out
out
mov
std
lock
add
repnz
into
cmpsl
stos
mov
addb
push
dec
insl
sbb
sub
xchg
cmp
adc
mull
shll
mov
fdivs
ljmp
inc
dec
popf
pop
lods
push
add
inc
out
fdivl
in
inc
sbb
and
es
sbb
xorb
adc
fsubs
pop
out
push
pop
out
cltd
add
pop
jns
gs
nop
pushf
push
mull
je
lods
test
and
mov
add
sbb
scas
clc
pusha
xor
stos
jmp
mov
in
mov
insl
xchg
daa
insl
sar
or
xor
sub
mov
loope
mov
push
loopne
or
sub
es
imul
insb
mov
inc
mov
jo
lds
in
repz
repz
mov
rorb
roll
out
arpl
pushf
xor
add
xchg
jb
movsb
cmp
aas
xlat
cmp
out
dec
and
sarb
repnz
stos
popa
push
lahf
aad
dec
mov
mov
jl
in
mov
mov
push
inc
mov
in
push
lahf
sub
xchg
in
ja
dec
int3
jb
mov
mov
push
cmpsl
dec
or
and
push
outsl
cld
mov
sbb
pop
lods
cmpsl
sbb
or
xchg
xor
pop
mov
mov
cmp
and
sbb
add
cld
test
xchg
les
jle
xlat
shlb
lret
push
cli
pop
mov
lock
dec
in
jp
ffreep
sub
sbb
mov
inc
sbb
fwait
insb
arpl
cmp
shll
popf
ljmp
pop
jge
push
in
jge
in
imul
cwtl
ret
xor
out
pop
push
mov
stos
or
mov
int
dec
mov
add
mov
xchg
adc
call
xchg
sub
mov
jnp
inc
mov
lds
out
jo
iret
push
cmp
sbb
scas
pusha
mov
int3
mov
pop
sbb
add
in
jmp
test
mov
nop
dec
fisubs
jno
and
xor
xchg
ljmp
mov
movsb
int
stc
adc
sbb
xor
xor
mov
jge
ret
sbb
pop
xor
add
dec
add
sbb
fisttps
xlat
ds
mov
jb
cmp
push
push
or
icebp
dec
pop
test
inc
adc
adc
ss
daa
mov
adc
int
test
mov
ret
sub
popf
adc
xor
dec
divb
mov
mov
fdivrl
iret
movsb
nop
leave
sub
cmp
cmc
cmp
cmpsl
in
xchg
aas
jg
movsb
sub
lret
xor
andl
fidivs
push
push
sbb
addb
movsl
jb
mov
into
inc
push
into
cmp
push
js
add
js
imul
xchg
inc
jg
sbb
scas
arpl
es
test
mov
xor
gs
bnd
add
adcl
inc
push
or
lock
jg
test
iret
or
push
aam
mov
and
push
lds
mov
pop
cmp
xor
es
mov
dec
adc
or
adc
jl
mov
cmp
or
pop
or
fwait
mov
xchg
and
test
xlat
lcall
stos
sub
pop
outsl
fdiv
mov
mov
fs
jle
xor
movsl
jae
das
pop
popa
out
imul
xchg
jmp
lret
aad
push
add
jl
xchg
pop
ja
loope
ja
cmpsb
outsl
sub
shlb
jo
lcall
xchg
in
inc
dec
fbld
sbb
sbb
imul
aas
lock
xor
repz
pushf
jle
mov
mov
imul
js
jle
jae
dec
int3
dec
jns
and
inc
sbb
std
cmp
and
int3
xchg
aam
decl
fcmovu
outsb
test
arpl
jno
adc
jns
mov
lods
cwtl
jl
sbb
cs
mov
cmp
roll
mov
stc
adc
gs
clc
cmpsb
jmp
push
dec
adc
cs
sub
cwtl
ds
pop
jns
arpl
fisttpl
xor
bound
pop
pop
fwait
scas
insl
sti
cmp
les
fwait
aad
daa
cmp
xchg
xchg
fidivrl
rorl
mov
repnz
lea
stos
or
mov
cwtl
add
daa
faddl
mov
out
in
roll
sub
cs
cmp
push
dec
jmp
adc
lret
adc
xorb
aam
mov
inc
xorps
popa
in
imull
imul
xchg
or
push
aaa
and
dec
ljmp
fs
sarb
pop
in
int3
std
push
sbb
ja
mov
ret
push
cli
xlat
sbb
push
enter
sub
add
fisttpll
daa
mov
xchg
dec
mov
fs
cmp
mov
push
stos
push
add
adcb
xchg
mov
ss
fdivrp
sub
xor
sahf
pop
push
push
out
ret
test
in
lods
or
pushl
into
pop
aam
push
insl
mov
or
mov
ret
adc
into
cmp
inc
mov
add
push
pop
cwtl
inc
dec
sub
stc
or
fists
cmpsl
mov
xchg
mov
cmp
mov
pop
dec
mov
mov
mov
dec
and
addb
imul
or
mov
call
sbb
pop
sbb
sbb
out
sub
and
and
loop
mov
push
xlat
lods
insl
xchg
dec
xor
rcrl
scas
xor
dec
dec
cmp
sbb
jbe
pop
xchg
push
loopne
pushf
repz
test
aad
por
xlat
mov
imul
jbe
inc
adc
fistpl
sbbb
adc
add
test
out
push
mov
test
cmpl
sarb
or
daa
xchg
and
inc
fisubl
adc
sbbl
movsl
adc
xor
pop
imul
mov
sbb
or
sbbl
out
push
fnsave
cmc
mov
mov
mov
popf
or
push
rorl
xchg
push
sub
xchg
ret
aad
cmpsl
add
jg
lods
mov
cmpsb
int
shlb
and
js
hlt
adc
int
sbb
and
and
sub
sbb
or
xor
push
test
int3
dec
scas
mov
or
sbb
add
aad
dec
bound
das
shrl
out
push
inc
shlb
cmpsb
add
add
cmp
cmp
or
push
and
xor
jmp
xchg
jae
inc
pusha
cmp
int
loope
and
loope
fnstenv
mov
aad
adc
cmp
or
fnstcw
ret
dec
imul
push
imul
sbb
pmulhuw
lods
lcall
cmp
cmp
aad
xchg
jb
push
scas
insb
out
sub
pop
lds
ja
iret
or
cmp
jb
call
sti
leave
fs
mov
loopne
iret
dec
dec
rcr
cmp
cmp
adc
lret
aam
dec
lret
mov
lcall
sub
xor
dec
cmpb
arpl
jb
xchg
or
adc
sbb
pop
inc
ds
sub
fcomps
ds
jb
sti
nop
jo
inc
cmc
sub
imul
jb
inc
sbb
int
imul
addr16
jnp
inc
dec
sbb
mov
bound
adc
rolb
inc
xlat
cmc
lds
pop
jecxz
inc
pusha
testl
inc
cltd
jecxz
jns
jbe
lahf
cli
or
add
pop
es
fldcw
dec
add
or
jno
mov
in
sbb
mov
xchg
mov
sub
inc
xchg
cltd
icebp
enter
sub
fisubrs
dec
sbb
jb
mov
andb
adc
daa
and
gs
dec
pop
mov
loop
dec
aaa
ljmp
inc
mov
dec
inc
das
inc
cmp
sub
adcb
das
cmp
inc
shll
mov
lret
scas
leave
jo
or
icebp
sub
jg
sbb
mov
scas
mov
push
enter
or
mull
ljmp
ss
jp
into
xor
pop
lds
shll
cmp
fcomps
pop
push
in
scas
fucom
mov
stc
rorb
dec
aaa
xchg
pop
lods
js
xor
repnz
jmp
jb
mov
jnp
int3
push
mov
aad
daa
mov
mov
mov
push
inc
pop
insl
or
sbb
sahf
adc
and
repz
andnps
into
xchg
mov
or
mov
mov
ret
dec
cmp
cmp
ljmp
add
mov
addb
bound
pop
push
mov
and
jbe
lods
outsb
dec
xor
push
rcrl
popf
scas
jne
mov
fcomp
bound
fisubrl
jae
pusha
outsb
sahf
dec
rorb
jns
lret
push
dec
xor
jle
dec
mov
call
repz
pop
insl
mov
cwtl
and
mov
sub
scas
imul
add
cmp
popf
ds
ss
stc
fs
inc
fbstp
movsb
add
push
clc
daa
xchg
dec
imul
leave
lret
ret
jo
mov
push
sub
icebp
push
or
or
xchg
iret
mov
cwtl
arpl
xor
lret
add
enter
dec
inc
stc
dec
movsb
gs
mov
cmp
mov
xchg
and
out
jmp
and
mov
lret
fincstp
xlat
pop
sbb
dec
insb
dec
pop
cmp
iret
and
sarl
mov
in
inc
inc
orb
repnz
jecxz
pop
mov
jnp
sub
imul
or
sbb
mov
popl
in
cmpsl
xchg
mov
mov
lahf
bound
insb
daa
xor
sub
push
std
out
add
pop
seto
test
sti
or
dec
pop
dec
add
push
cmp
push
inc
loopne
sbb
pushl
adc
rclb
in
push
adc
inc
hlt
pop
sbb
lock
sbb
std
daa
stos
in
pop
xchg
cld
aas
in
mov
pop
inc
dec
inc
aad
std
lret
xchg
xor
xchg
fwait
in
bound
inc
mov
mov
loopne
cmp
repnz
shr
lods
and
lahf
push
mov
cmp
outsl
dec
fdivrs
mov
jb
in
addr16
js
mov
or
push
ficomps
jmp
fadd
adc
jmp
pop
add
fbstp
loop
xchg
lods
or
mov
in
adc
push
nop
lret
ret
fsubrs
mov
push
popf
and
push
inc
push
mov
xor
add
insb
icebp
outsb
adc
jmp
mov
xorb
outsl
cs
or
repnz
test
push
pop
xchg
and
dec
dec
jecxz
fs
lcall
mov
les
push
jns
mov
lret
es
sbb
mov
in
pop
rcrl
jno
inc
and
jg
movsb
sub
les
pop
sbb
out
fwait
xor
mov
or
jno
int3
out
add
cwtl
xchg
dec
imul
ret
pop
enter
mov
enter
xor
inc
adc
aaa
add
test
test
mov
pop
push
mov
push
and
in
icebp
cwtl
mov
rcrl
sbb
add
sub
les
sbb
out
or
in
idivb
mov
aad
das
fbld
inc
aam
xor
mov
ds
lret
in
add
dec
push
mov
sbb
and
mov
out
mov
pushf
sub
outsl
rorl
icebp
fldt
out
mov
pop
mov
loopne
jnp
inc
or
je
push
jb
lock
fistpll
xchg
cmp
js
mov
jnp
insb
int3
add
ss
mov
adc
cmc
rcl
lock
xchg
je
push
jb
jl
outsl
pop
jge
mov
notb
push
cmp
int
jb
jbe
push
enter
mov
sub
aaa
test
popf
insb
enter
push
inc
and
test
rclb
popf
orb
jo
mov
mov
pop
outsl
dec
testb
cld
stc
mov
jns
inc
int
and
jp
xor
insl
inc
lock
sub
clc
jl
jo
add
and
insb
pop
imulb
shlb
push
out
neg
pusha
push
test
mov
pop
sbb
psubq
xchg
jl
xchg
xchg
sbb
lret
mov
icebp
inc
rcr
dec
push
cmc
movsl
jl
fnsave
xor
aaa
cli
fistl
das
out
ret
es
addr16
cld
inc
sahf
shll
jbe
mov
mov
xor
loop
push
mov
push
test
and
shlb
inc
pop
lds
sbb
pop
popa
int3
pop
xor
jns
or
in
in
cli
push
xchg
push
loopne
mov
je
out
pushf
sarb
jle
push
add
add
and
inc
xchg
clc
inc
insl
inc
and
call
sub
adc
add
aaa
jne
fistl
cmpsb
jbe
aas
adc
xor
pop
pop
cmp
push
je
mov
jmp
fnstcw
sbb
arpl
mov
outsb
cmpsb
lret
dec
in
addr16
mov
adc
xchg
fmuls
inc
sub
and
outsl
dec
xor
inc
imul
mov
enter
push
mov
scas
pop
cmpsl
jmp
lret
sbb
sti
mov
int3
mov
mov
add
xor
pop
cli
lret
push
dec
loop
lret
sti
mov
dec
adcb
mov
push
xchg
push
ljmp
popf
std
subb
scas
insb
mov
xor
mov
pushf
mov
repz
in
les
fsubrl
daa
mov
cmpsl
andl
icebp
xor
test
fdivrl
cwtl
pop
ja
inc
iret
addr16
ljmp
ret
sbb
pop
fnsave
enter
clc
add
insl
and
jne
jmp
or
push
mov
mov
cli
imul
cmp
out
jge
dec
mov
popf
das
cmpb
cmc
add
add
dec
mov
add
mov
iret
or
and
jmp
or
mov
jp
jg
and
ljmp
hlt
mov
scas
mov
inc
adcl
test
jb
ret
cmp
cltd
pop
sub
push
fcmove
xor
mov
dec
push
in
clc
std
cmp
in
shll
push
jp
enter
xor
jnp
shr
adc
adc
negb
or
jbe
leave
aaa
nop
mov
pop
xchg
imul
inc
push
stos
cmpsl
sti
push
lahf
dec
cmp
js
adc
pushf
fdivl
mov
and
pushf
shrl
pushf
dec
ret
stos
pusha
and
arpl
add
or
cmp
dec
aaa
jno
in
fwait
add
mov
add
jo
sub
push
push
mov
repz
cwtl
and
mov
idivb
leave
fdivl
adc
cltd
scas
test
cmp
inc
pop
or
frstor
sbb
dec
fbstp
xchg
inc
mov
roll
xorl
sbb
fists
xor
pop
mov
scas
divb
mov
dec
push
push
int3
inc
aaa
xorl
jns
mov
cmpsb
pop
lock
sti
test
call
push
icebp
adc
pop
sbb
btr
dec
or
movsl
or
dec
ja
dec
mov
fisubs
and
adc
xchg
mov
xchg
test
imul
push
jl
xchg
fstpl
out
mov
cmp
fs
aaa
and
and
push
in
and
stos
movsb
mov
mov
stos
in
adc
out
movsb
leave
and
subb
xor
es
and
or
fisttps
dec
add
aam
xor
adc
push
loopne
sub
pop
mov
xor
stc
mov
sub
aad
and
daa
jmp
mov
adc
push
jae
test
ljmp
or
out
cmp
and
pop
clc
pop
sbb
fisubrl
adc
cwtl
pop
push
sbb
jb
aaa
imul
adc
ret
mov
fs
fwait
cld
jmp
inc
pop
es
mov
xorl
mov
jecxz
push
sub
loop
sub
repz
pop
scas
enter
sbb
add
ljmp
in
lahf
lods
and
cmp
sbb
cmp
outsl
jo
inc
inc
hlt
scas
iret
cmp
and
mov
stc
jmp
sbb
mov
mov
pop
mov
xchg
cld
pop
in
cmp
addb
dec
inc
stos
clc
jg
sub
push
popa
imul
clc
dec
lahf
daa
xor
or
xor
int3
ficoms
adc
inc
jnp
mov
sarb
mov
mov
mov
mov
bound
and
mov
push
pusha
add
inc
xchg
out
call
sub
nop
cmp
pop
daa
fsubrl
inc
pop
paddd
jmp
add
fucom
jp
add
outsl
mov
sbb
or
xor
mov
dec
ds
cmp
jmp
or
or
es
mov
fmuls
add
push
xor
loop
ret
int
inc
lock
inc
shrb
in
cmp
pop
into
icebp
push
xlat
adc
dec
lds
sahf
xchg
ss
add
jecxz
neg
inc
out
pop
lahf
cmc
adc
jmp
mov
jge
dec
xchg
pop
sbb
inc
pop
jle
or
ds
inc
mov
std
mov
xor
pop
xor
xchg
push
loope
xor
add
aaa
mov
shl
arpl
cmp
out
inc
f2xm1
mov
in
mov
jge
pop
sub
inc
sbb
and
cmp
das
mov
dec
cld
mov
cmp
ret
inc
jns
jns
pusha
jae
inc
in
adc
jbe
or
inc
fiadds
or
je
imul
adc
mov
jae
andl
jmp
push
inc
test
pop
sub
cmp
sbb
jp
shlb
jne
xchg
mov
rcrl
adc
and
ja
cs
pop
sbb
mov
fidivrs
xor
push
mov
fdivr
cmp
inc
mov
mov
xor
mov
sahf
jle
fs
xchg
sub
ljmp
fidivrs
inc
out
loopne
mov
outsl
xor
andl
jecxz
inc
xchg
mov
das
ss
jecxz
mov
jne
lea
mov
mov
call
jge
push
mov
sbb
pop
in
orl
loopne
push
add
idivb
lods
sbb
cmp
dec
cli
enter
icebp
mov
add
mov
add
subb
inc
add
dec
out
dec
xchg
enter
int3
pop
push
cs
mov
mov
mov
push
cld
into
js
test
pop
pushf
pop
or
mov
or
out
jecxz
int
shrb
jb
jb
inc
mov
fcmovnbe
add
fwait
shll
or
lods
lret
mov
pop
xor
pop
mov
loop
mov
and
lds
jne
xchg
mov
pop
dec
das
mov
cld
push
loope
sbb
pop
shll
jge
pushl
fwait
or
out
stos
ja
cs
shrl
movsl
adc
and
jo
jns
push
jne
ljmp
inc
sti
rclb
cmp
roll
mov
pop
lods
jmp
mov
insl
xchg
cmp
subl
mov
inc
adc
mov
cmp
popa
push
push
popa
mov
outsb
and
mov
rcrl
jecxz
fdiv
pop
push
cmp
adc
inc
xchg
cmpsb
cmpsb
pushw
aad
mov
gs
add
in
lods
pop
and
jge
daa
cmp
mov
mov
movsl
inc
xor
lcall
shll
xchg
les
lahf
xchg
add
outsl
mov
sti
adc
fs
cld
mov
int
pop
mov
mov
mov
mov
jno
pop
test
daa
outsb
loopne
sub
or
inc
imul
repnz
inc
popa
cmp
sarb
lea
lahf
push
loope
daa
xor
cmc
jbe
push
icebp
enter
adc
ja
adc
xchg
xchg
xchg
pop
add
or
mov
in
push
jae
xchg
push
hlt
andl
mov
hlt
pop
push
ficomps
mov
jge
or
mov
std
cmp
push
pop
cs
clc
add
adc
insl
mov
popa
sahf
add
mov
xchg
mov
lods
cmc
jmp
mov
rorb
ja
xor
roll
aad
test
adc
ret
sbb
loopw
fscale
sub
add
dec
mov
push
pop
lods
out
mov
aam
add
mov
sahf
push
repnz
sub
pop
enter
xor
cmp
push
cmp
jp
and
lea
xchg
jae
adc
ds
out
cwtl
addr16
adcb
clc
cltd
int
jge
dec
cmp
push
jmp
arpl
leave
jecxz,pt
lahf
push
outsb
out
inc
in
mov
inc
sahf
sbb
push
lock
pop
fadds
scas
xchg
call
addr16
out
idivb
sub
ror
das
lret
lea
mov
ss
in
fsubl
mov
mov
insb
sti
pusha
jge
adc
push
cmp
xorl
mov
push
iret
pop
jo
jge
or
dec
dec
imul
sahf
stc
inc
fcompl
dec
adc
push
fisubrl
mov
and
and
popa
adc
ret
aaa
mov
and
fbld
cmpl
and
shrl
inc
movsb
push
push
call
adc
xor
xchg
push
sbb
rorb
cmp
or
outsb
mov
jle
xor
jno
mov
test
push
jmp
in
hlt
xor
mov
sti
les
shll
push
push
push
adcl
sub
out
sub
stos
sbb
fisttps
pop
jns
ret
adc
and
hlt
fbld
lods
or
imul
sbb
ret
mov
icebp
insb
push
clc
jb
std
test
jecxz
imul
in
push
out
lahf
dec
inc
jmp
add
jg
arpl
mov
mov
popf
repz
adc
idiv
cmc
test
pop
pop
add
dec
push
out
pop
and
pusha
add
or
xchg
out
push
mov
test
push
xchg
xchg
xchg
lods
pop
sbb
jnp
xchg
jno
movsb
stc
fisubl
or
cli
jb
fidivs
aam
hlt
vcomiss
fidivs
mov
test
in
scas
setl
push
repz
adc
out
mov
addr16
mov
mov
push
testl
pop
cmp
mov
movswl
mov
push
pushf
imul
mov
out
jecxz
xchg
mov
in
dec
sti
icebp
inc
sbb
fistps
js
orl
sub
sub
jge
dec
shl
xor
test
push
insl
add
push
inc
xor
test
dec
idivb
or
xor
scas
movsl
movb
lock
lahf
jmp
mov
and
shll
sbb
pop
or
cmp
cmc
inc
ret
in
fdivrl
cmp
sbb
cmp
call
dec
test
push
cmp
sbb
out
sbb
jle
aas
inc
je
sbb
in
push
in
leave
mov
dec
dec
dec
sahf
mov
fidivrs
adc
mov
mov
rcrl
les
xchg
outsb
add
fwait
add
sub
dec
sti
xor
or
scas
les
push
in
mov
std
sar
jecxz
add
sbb
and
and
jmp
sbb
push
and
jge
loopne
arpl
inc
aam
sbb
aas
bound
add
push
in
test
ret
imul
lahf
push
test
cs
mov
push
gs
rcrb
das
inc
or
shll
ret
mov
stos
jns
mov
fidivrl
xchg
stos
es
call
xor
js
cmp
pop
inc
ds
push
xor
fistps
adc
and
pusha
scas
rcl
jb
aam
pushf
out
xor
inc
cmp
add
jl
loope
dec
jbe
gs
loopne
lods
xor
bound
rcrl
or
cltd
lret
in
lret
jp
fnstenv
or
and
in
jmp
movsl
fiadds
mov
add
mov
roll
stc
pop
add
pop
jb
xor
fnsave
aaa
lods
ja
daa
ja
inc
xchg
movsb
sbb
dec
xor
je
xchg
stc
xchg
mov
daa
sbb
aaa
in
cwtl
or
mov
pop
fbstp
lcall
imul
push
lcall
xor
xchg
int
jle
fnsave
cmc
mov
sub
repz
shr
push
pop
inc
mov
loopne
sub
sub
pop
gs
jge
lea
lods
in
pop
fsubrl
cmp
pop
lock
xorb
lret
test
pop
cmp
xor
out
inc
add
std
mov
mov
adc
pop
push
cli
mov
xlat
mov
mov
xchg
inc
test
sub
jns
out
iret
cmp
lods
adc
and
add
inc
mov
sarb
inc
shll
sti
cmpsb
and
adc
icebp
movsb
mov
arpl
in
pop
push
arpl
xchg
hlt
inc
std
or
out
dec
cmp
cs
test
jp
std
jge
mov
outsl
xchg
mov
xchg
inc
add
cmp
cltd
mov
mov
dec
dec
pop
xchg
mov
pop
push
aad
sar
xchg
inc
andl
imul
jecxz
cld
call
sbb
inc
nop
cmpsl
mov
cs
loop
sbb
add
sbb
lds
adc
inc
cltd
pop
dec
xchg
arpl
push
fwait
or
arpl
aaa
mov
jno
push
fsts
cli
xchg
clc
mov
ss
cmp
push
hlt
addb
xchg
dec
lret
or
cltd
daa
and
mov
pop
xchg
and
sub
sarb
push
pop
or
dec
xchg
mov
push
jbe
or
xor
sti
and
jle
lret
mov
orb
hlt
test
ret
lods
test
adc
sub
aad
sub
add
cmc
jle
in
lret
jo
jmp
push
ljmp
mov
in
pusha
fmuls
mov
mov
sbb
pop
cmp
adc
xor
test
sbb
xchg
adc
pushf
mov
mov
fwait
lret
inc
call
mov
mov
icebp
scas
enter
dec
sbb
push
dec
popf
stos
dec
fidivrs
out
pop
popa
stc
mov
add
test
ds
jmp
loop
mov
sub
aaa
dec
mov
push
ljmp
mov
movb
and
pop
or
cli
xchg
pop
mov
mov
cmp
jne
mov
outsb
insl
inc
inc
push
dec
ja
adc
in
es
scas
mov
jae
push
mull
repz
lock
pop
cmp
mov
jae
push
lahf
imul
testl
test
xchg
scas
cmc
mov
push
or
mov
outsb
shlb
fstps
xor
push
jecxz
pop
or
mov
xor
inc
repz
pop
fdivs
fdivrl
lock
mov
data16
ds
bswap
cmp
pop
cmp
mov
jge
push
sti
test
push
and
orb
mov
xchg
jle
idiv
mov
xlat
mov
dec
dec
xor
sti
inc
push
cs
xor
rclb
or
sbb
ja
lcall
lret
in
pushf
inc
leave
stos
addr16
popa
mov
pop
xchg
fwait
mulb
push
or
pushf
push
shrl
mov
push
popf
mov
movsl
mov
loopne
imul
out
sub
je
ret
call
clc
push
push
out
data16
scas
push
enter
cld
movsl
lods
or
int
inc
adc
movsl
icebp
mov
xchg
xor
pop
loope
jecxz
insl
cli
cmp
sahf
or
imul
ljmp
into
jo
pushf
test
scas
jo
mov
xorl
lcall
insl
dec
aas
inc
lock
jg
imul
out
loopne
xor
out
adc
nop
add
cld
push
cmp
jo
adc
add
jmp
push
call
lahf
cld
paddusw
jg
data16
lods
add
iret
test
stos
cmp
pop
dec
sbb
mov
push
sbb
dec
and
jns
bound
dec
pop
push
sbb
dec
adc
xchg
fsubs
mov
repz
ffreep
out
ret
jae
cmp
mov
scas
mov
sub
loopne
iret
jmp
mov
imul
lahf
filds
in
fstps
out
jno
dec
and
push
out
data16
and
or
push
popf
and
mov
jo
loopne
aad
mov
sub
call
cltd
jns
jg
pop
and
pop
adc
xchg
dec
sahf
lret
cli
mov
sbb
jne
add
xor
lods
mov
sahf
dec
sarl
bound
lcall
mov
out
daa
fcmovne
imul
dec
mov
pop
ljmp
inc
out
ret
add
daa
addr16
fnstenv
ds
insl
clc
scas
mov
ds
pop
jb
xchg
mov
inc
add
inc
adc
out
mov
fstpt
pop
jl
xchg
pop
mov
jle
stc
sbb
in
lock
sub
xchg
pushf
add
sbb
push
mov
jge
cmc
into
or
mov
es
or
push
and
xchg
jnp
mov
leave
fidivl
adc
imul
or
stos
mov
test
cmpsb
std
cld
outsb
mov
pop
lds
sub
push
stos
test
sub
pop
clc
pop
int3
loopne
insb
fcompl
lock
js
aad
xchg
in
or
push
mov
rclb
inc
xchg
ret
in
cmpsb
loopne
test
popf
aad
cmp
mov
pop
out
cmp
rcr
mov
pusha
pop
jp
dec
das
pop
incb
lret
mov
adc
out
mul
mov
aad
and
dec
xchg
andb
pushf
test
mov
and
in
pop
out
push
inc
int3
cs
jmp
fsubrl
mov
in
inc
xchg
push
sbb
fs
call
mov
xor
adc
adc
adc
or
and
cmp
mov
repz
test
stc
sub
sbb
out
push
mov
loop
iret
fdecstp
adc
pop
ljmp
push
inc
or
and
xchg
sbb
stos
xor
int3
es
jmp
repnz
inc
or
sbb
or
or
jo
push
rcrb
cld
je
imul
fildll
test
inc
mov
cmc
imul
jo
pop
sarl
insb
push
js
xor
enter
ret
repnz
fisttpl
lahf
mov
shld
sbb
int3
mov
mov
jl
mov
and
aaa
mov
cwtl
and
jne
adc
stos
dec
lock
mov
scas
adc
int
enter
cmp
es
dec
gs
int
fs
lcall
repz
cmp
jo
ss
inc
je
mov
push
mov
jp
rorl
sub
push
cmp
push
cmc
inc
jnp
jge
mov
out
aaa
daa
inc
jne
xchg
stc
xchg
mov
loopne
sarb
flds
test
and
aam
and
mov
sbb
shr
sbb
testb
and
cmp
cmc
sbb
jmp
insl
enter
push
jge
push
mov
pop
mov
mov
add
xor
pusha
dec
xor
dec
bound
in
mov
repnz
clc
cs
stos
inc
sarb
or
add
enter
pop
add
jle
loope
and
push
rclb
mov
mov
lret
sbb
xchg
movsl
daa
add
xchg
adc
lea
xchg
test
sbb
fsubr
icebp
add
adc
inc
add
lock
cmpl
cmp
out
cwtl
pop
popa
in
inc
xor
insb
jle
cmp
xor
cld
dec
fnstcw
push
js
dec
out
mov
test
shl
add
roll
ja
fld
sti
lods
sbb
ljmp
xchg
cmp
shll
ja
jae
xchg
xor
call
mov
xlat
adc
cmp
sub
jg
add
jg
push
add
mov
xchg
jecxz
cmc
test
xor
cmp
inc
jo
pop
fcompl
xor
ja
inc
cmp
add
mov
jg
pop
mov
fstl
aas
lods
flds
sub
aam
ss
stos
cmp
sbb
add
cmp
mov
inc
loope
sbb
jmp
ss
xchg
lock
mov
or
imul
xchg
push
cmpsl
add
push
sub
dec
scas
loop
push
fsubl
xor
fistps
mov
xchg
add
bound
dec
fcmovbe
sub
xor
xchg
adc
pop
test
ja
popf
out
pop
sub
adcb
or
xor
inc
mov
and
cmp
jno
or
pop
out
scas
pop
xchg
sbb
nop
or
or
scas
jo
and
and
dec
inc
mov
inc
or
fistps
and
ja
pop
dec
xchg
fs
loope
rcrl
mov
dec
cmpb
mov
inc
clc
xor
push
call
aaa
test
dec
ret
inc
or
inc
shlb
mov
and
es
push
inc
xor
stc
stos
jmp
pop
pop
push
imul
mov
mov
cmp
scas
push
sub
mov
inc
int
in
xor
outsb
imul
sbb
or
call
and
adc
xchg
mov
movsl
push
or
popa
jo
jg
sub
scas
pop
loopne
mul
cmp
movsb
mulb
out
and
inc
or
xchg
stc
adc
and
mov
xchg
seta
mov
cmp
inc
mov
cwtl
cmp
xor
and
dec
xchg
or
sbb
shl
xchg
jbe
imul
push
push
in
clc
fnstsw
jecxz
lahf
out
fbld
lods
sub
int3
xchg
imul
int3
jge
mov
mov
aad
sahf
into
inc
jns
mov
pop
add
int
mov
dec
pop
cmp
lods
adc
adc
pushf
shr
fwait
xchg
shl
xchg
mov
scas
lods
push
cltd
je
pusha
iret
push
aam
mov
aas
mov
sbb
scas
xchg
outsl
xchg
mov
jge
mov
repz
sub
add
in
mov
int
cmp
repz
xor
outsl
jl
jg
adc
xchg
scas
daa
dec
ljmp
stos
dec
push
xor
fsubr
insb
pop
mov
mov
sub
cltd
mov
sti
imul
xchg
mov
outsb
out
enter
call
aas
adc
sbb
adc
or
lret
lret
popa
or
mov
inc
jmp
popa
mov
inc
fldl
jge
stos
pop
mov
adc
enter
addr16
mov
jbe
cmp
mov
int
fcmove
mov
pusha
scas
rcl
nop
mov
sbb
lock
iret
xor
jbe
repnz
out
jle
imulb
repz
cmp
jno
sub
js
inc
xchg
inc
inc
bound
repz
or
xchg
sbb
adc
lret
loop
or
es
dec
or
push
push
std
out
icebp
sbb
push
pop
scas
ret
xor
xlat
or
and
sub
push
aaa
in
xchg
dec
notb
sub
adc
pop
insb
pop
leave
in
inc
xlat
cmp
les
fsubl
leave
add
pop
adcl
cli
ret
dec
dec
dec
outsl
imul
xchg
enter
cmc
aas
and
gs
pop
enter
xchg
inc
jge
jo
sbb
stc
pop
loopne
xor
mov
shrl
adc
les
xchg
mov
push
jle
outsb
dec
rolb
jl
pop
jno
push
loope
inc
lea
cld
pop
lds
call
icebp
out
push
or
mov
movsl
jbe
sbb
test
ljmp
aad
fidivrl
lods
and
push
out
clc
popa
pop
in
outsl
in
cmp
jnp
cmpsb
es
pop
es
cmp
mov
mov
cmp
xlat
mov
mov
sti
xchg
nop
dec
in
mov
or
lds
xor
add
inc
fists
sub
dec
dec
xchg
inc
xor
lods
cmp
sarl
lret
les
jmp
jnp
push
xchg
and
jae
add
pop
sub
ss
fwait
xchg
out
loope
push
in
xor
add
lret
and
jae
sub
pop
rolb
incb
inc
and
popa
fidivs
sub
insb
lds
mov
fldt
inc
push
jecxz
adc
les
jl
outsl
sub
inc
inc
xlat
scas
mov
nop
cmpsb
push
fldt
jb
daa
dec
pop
push
rol
in
dec
lock
push
hlt
in
adc
jae
push
push
fistl
and
sub
iret
pop
mov
mov
push
mov
sbb
and
sub
cmp
pop
js
push
outsl
adc
mov
dec
push
jmp
jb
cwtl
das
sub
mov
mov
jnp
negb
xor
stos
mov
jns
xchg
or
inc
lahf
push
add
push
jb
mov
dec
aaa
movsb
in
in
test
test
push
mov
adc
push
daa
mov
roll
pop
inc
iret
inc
aaa
xchg
out
repnz
lahf
scas
sbb
adc
sub
sub
lret
jae
mov
mov
mov
adc
xor
mov
mov
xchg
rcrl
out
subl
jnp
dec
dec
xchg
mov
xor
dec
je
js
add
pop
insb
push
inc
mov
inc
mov
jbe
pop
mov
xchg
ss
or
lret
popa
pop
xchg
cmc
mov
jmp
inc
pushl
mov
pop
rcrb
mov
pop
dec
sub
or
or
iret
fisubs
dec
adc
ljmp
sti
jp
jb
mov
dec
xchg
punpckhdq
dec
pop
popa
mov
mov
push
addl
sarb
cmc
addr16
sbb
inc
dec
imul
ja
pop
orl
lock
into
and
in
repz
addl
push
and
loope
int3
in
insb
cmp
dec
imul
push
ljmp
push
xor
add
mov
mov
sbb
inc
add
mov
sub
or
scas
mov
xor
add
arpl
add
cmp
js
mov
in
xchg
mov
dec
jp
push
lock
pushf
pop
push
rcr
xchg
rcrl
test
aas
fistps
sub
mov
add
jb
call
xchg
inc
insb
pop
sub
add
push
jge
pusha
or
xchg
fdivrs
dec
sub
xor
mov
pop
test
add
add
lcall
fcompl
insb
aaa
popa
cld
jnp
cmc
inc
jb
lcall
bound
aas
call
cltd
jg
pop
inc
xchg
add
add
xchg
cmp
sbb
repz
and
out
pop
mov
ret
inc
outsl
dec
scas
or
jb
ja
andl
or
mov
sti
andl
jno
and
add
fwait
sti
inc
mov
and
mov
mov
repz
addl
xchg
stc
arpl
aad
push
inc
add
dec
subb
mov
fdivr
sub
inc
daa
xor
daa
fimull
test
testb
sbb
fstps
mov
sbb
mov
mov
fstl
sar
xchg
clc
adc
pushf
out
scas
cmp
stos
cwtl
scas
in
ret
aaa
jbe
je
adc
mov
adc
xor
and
shll
mov
pop
imul
xor
cmpsb
cmc
jp
jns
pop
loop
mov
push
xor
add
cmpsb
push
jo
mov
nop
pushf
add
sti
push
lock
imul
dec
fs
mov
sub
mov
xlat
or
jne
or
cmpsb
test
adc
or
pop
mov
pop
dec
cmp
sti
mov
cli
sub
lock
iret
push
btl
jl
lahf
sbb
jne
dec
ret
fucomi
sbb
jmp
pushf
aaa
push
es
js
xor
cmp
fisubrs
clc
mov
sbb
and
xchg
dec
mov
sbb
sbb
adc
cmp
fwait
les
idiv
shlb
jle
movsb
cmp
pop
loop
mov
mov
stc
mov
xor
xor
or
or
mov
adc
repz
or
repnz
pop
cmp
xlat
pop
mov
jo
pop
pop
inc
mov
and
pop
mov
shlb
or
jne
mov
fcompl
mov
in
mov
xor
lcall
je
in
test
xor
sub
jl
test
fstp
inc
or
cmp
sbb
pop
and
movsl
or
mov
add
std
addr16
mov
andl
mov
in
cltd
cmovp
addr16
test
or
cmpsl
std
in
iret
cld
andl
fsts
lds
lods
sub
push
push
pop
xor
push
and
dec
iret
daa
cwtl
mov
push
lods
push
inc
movsl
int
lcall
fildl
mov
sti
jo
and
shlb
std
cmp
sbb
in
shlb
leave
dec
icebp
test
cwtl
add
push
sbb
mov
and
fisttpl
je
or
je
adc
in
sub
pop
push
and
mov
pop
and
cwtl
mov
xor
xchg
sahf
mov
lret
scas
les
hlt
enter
jmp
enter
xchg
jne
stos
xchg
je
fadds
cmp
testb
rcll
fimuls
mov
sub
jl
in
adc
aad
push
cmp
adc
xlat
scas
jae
sbb
pop
fstps
pop
jmp
shrb
dec
jno
sub
jp
push
test
or
sti
jle
aas
iret
fstl
movsl
outsl
mov
loopne
iret
jae
loope
lret
jns
loop
int3
fcomps
out
or
jns
movsl
push
test
mov
xchg
es
xlat
cmpsl
dec
bound
stos
or
aam
xor
lea
mov
push
cmp
aas
mov
idivb
xor
cli
ss
lret
stos
jb
jg
xorl
in
xor
sub
lret
test
gs
out
pop
stc
leave
xchg
mov
shlb
adcb
jmp
test
repz
jns
dec
cmc
mov
nop
pop
cmpsl
fidivl
dec
xchg
mov
movsb
push
sbb
sahf
test
call
test
das
mov
push
subb
aas
cmpsl
sub
push
test
fidivl
xor
out
inc
call
and
into
and
fs
jl
in
add
push
jg
pop
aaa
push
jge
aas
stos
lods
cmp
aad
or
test
fs
sub
fldcw
add
and
test
ljmp
cmpsb
movsl
adc
mov
mov
dec
aad
dec
int3
ss
mov
sbb
ret
mov
xor
ja
push
add
and
aas
adc
mulb
fdivr
loopne
sub
fadds
inc
xor
adc
shrl
and
mov
mov
xchg
cmp
insb
and
lahf
cmp
lods
cmpsb
out
je
jo
dec
xchg
push
mov
push
sub
gs
iret
and
mulb
sbb
daa
int
xchg
in
mov
jge
mov
and
pusha
dec
lods
mov
outsl
out
mov
lret
and
adc
outsl
push
push
ja
dec
mov
mov
add
mov
xor
fwait
push
add
push
jae
xor
movsb
mov
or
aam
out
gs
mov
xor
mov
mov
pop
sbb
scas
and
aaa
jbe
inc
arpl
rorb
fdivr
mov
jle
loop
arpl
out
ret
shrb
xor
mov
sbb
rclb
sbb
sti
dec
dec
pop
jle
push
fmul
cmp
mov
imul
lret
xchg
lret
push
cmp
stc
and
cltd
cmp
scas
imul
subb
adc
hlt
std
loopne
mov
lea
jle
lret
lods
adc
ss
fcmovu
mov
lcall
movsl
adc
dec
mov
mov
lea
jle
ret
lret
outsl
in
inc
dec
adc
xchg
cmpsb
sbb
dec
scas
pop
fisubrl
sub
inc
fldl
mov
ljmp
push
jno
xchg
pop
sub
sbb
xchg
sbb
xorl
jp
push
movsl
add
je
pop
ljmp
inc
mov
lcall
mov
and
push
std
cmp
lods
fistpl
insb
pop
std
mov
xchg
arpl
push
jecxz
and
loope
xchg
jbe
xchg
subb
clc
add
pop
cmp
inc
int
lods
push
das
lcall
nop
xchg
sub
inc
popa
sub
out
fisubl
jb
gs
cmc
cli
cmp
cmp
out
mov
push
rcrl
inc
enter
fwait
iret
push
and
js
mov
ja
fiadds
mov
xchg
xchg
sahf
inc
sbb
xchg
xchg
aad
mov
rcll
mov
sbb
cmp
ret
insb
adc
insl
adc
mov
scas
ljmp
testb
pop
push
mov
pusha
daa
out
xlat
mov
add
dec
std
subl
xor
popf
into
fidivrl
scas
add
push
gs
pop
pop
add
sub
sub
orb
ja
add
lds
out
xchg
push
addr16
shlb
in
cmpb
cmp
cmp
ljmp
movsl
sti
loope
push
test
fs
push
mov
pop
fcoms
shrb
icebp
push
out
and
cltd
inc
imul
or
je
xchg
test
lods
pop
sub
pop
push
les
sbb
add
rclb
dec
in
pop
mov
xlat
adc
or
dec
in
adc
fildll
idivb
les
jecxz
cli
mov
dec
mov
repz
stos
stc
mov
fsubr
push
enter
loop
mov
sti
loopne
add
fdivrp
pusha
jno
push
adc
mov
loope
mul
or
gs
add
rcll
xchg
dec
int3
outsb
iret
in
cmp
jno
and
mov
mov
sbb
test
push
es
sbb
in
imul
push
sbb
inc
sbb
js
xchg
data16
or
call
insl
pop
pop
loopne
inc
or
push
lock
faddl
mov
pop
or
cmovs
pop
ds
mov
dec
in
or
js
int
xchg
insb
sub
xchg
mov
and
divl
or
xchg
add
test
lea
mov
lahf
lret
lahf
leave
add
adc
lock
pop
add
and
nop
adc
movsb
xchg
push
dec
clc
mov
cmp
test
pop
divl
pop
repz
test
inc
je
sarl
ljmp
lods
jmp
xor
ljmp
xchg
push
in
test
push
dec
aas
mov
add
jmp
popf
test
dec
push
inc
cs
push
pop
out
add
fsts
mov
shll
sti
add
outsb
fstpl
fsubs
and
std
dec
cmp
aam
push
mov
xchg
inc
mov
popa
adc
scas
or
sarl
xchg
movaps
mov
jmp
ret
xor
scas
dec
cmp
lcall
movsl
into
and
inc
pushf
mov
and
mov
jno
fsubr
cwtl
push
icebp
loop
mov
or
lds
rcl
ds
icebp
sub
push
ss
fucomip
int3
sahf
dec
pop
or
push
and
cmp
add
mov
xchg
mov
cmp
pusha
fcmovb
mov
jne
lods
sub
fsubp
fwait
shrl
inc
sub
mov
jp
ret
mov
out
cmpb
lds
xor
shl
adc
and
or
or
push
and
jg
xchg
or
imul
mov
aaa
pop
pushf
adc
xlat
pop
lret
cmpsb
adc
pop
and
mov
or
stc
dec
fidivrs
dec
fnstcw
scas
sbb
jp
and
shlb
dec
int
rcr
pop
ss
mov
push
mov
inc
imul
push
sub
scas
sbb
aas
cld
js
jge
fcompl
inc
cmp
pushf
inc
clc
or
dec
or
xchg
sbb
sbb
or
stc
mov
icebp
inc
ss
in
fwait
pop
loope
cli
dec
add
sahf
pop
test
adc
ret
sahf
lret
repnz
xchg
mov
pop
shlb
dec
test
inc
xor
ja
fs
int3
fistl
push
or
push
lds
fnstenv
lea
pusha
lods
mov
dec
push
repnz
icebp
mov
arpl
into
into
lea
jge
fldenv
pop
les
cmpsb
lret
xor
addr16
outsl
aas
sti
lods
hlt
dec
push
aad
inc
mov
sbbb
mov
mov
mov
ja
incl
int
int3
jne
xor
inc
sarb
jb
mov
dec
jp
adc
push
or
lcall
fidivl
add
cmp
out
sbb
push
mov
std
push
push
inc
shll
lret
mov
xor
inc
mov
sbb
xchg
ds
pmuludq
xchg
add
in
movsl
mov
int
les
mov
xor
out
xor
fisubs
cmpb
and
arpl
xor
cmp
adc
add
mov
sbb
jns
out
or
adc
mov
mov
orl
push
add
insl
mov
inc
int
popa
sete
sub
adc
adc
and
dec
xchg
fwait
in
jle
js
mov
xchg
sub
cmp
mov
fisubs
sbb
scas
movsb
jp
decb
mov
sahf
pushf
inc
sub
sub
jl
pop
jo
fstpt
sub
mov
pop
rcll
repz
icebp
or
pop
mov
bound
sbb
adc
xchg
add
sub
cmp
lds
inc
cmc
mov
adc
sub
ret
mov
scas
sbb
movsb
cltd
cmp
scas
mov
idivl
sub
adc
out
scas
xor
mov
xchg
push
lods
adc
popa
aas
loope
mov
push
push
or
lds
ss
jmp
in
fdivs
dec
sub
xchg
xchg
in
aaa
arpl
inc
sub
rcrb
je
clc
pop
fcompl
test
icebp
xchg
out
add
mov
je
or
push
dec
aad
inc
add
or
sahf
mov
pop
not
and
inc
push
out
add
mov
push
frndint
aas
sbb
mov
outsb
pop
clc
mov
or
jno
dec
cmp
into
sbb
jmp
add
jo
loopne
mov
test
in
nop
inc
mov
scas
push
rclb
idivb
mov
pop
jo
frstpm(287
mov
test
mov
mov
loope
unpcklps
repnz
jl
mov
rclb
hlt
loope
pop
mov
loope
pop
pop
and
sub
cmp
mov
xchg
or
fistl
inc
test
dec
aam
inc
lock
aas
rcr
sbb
clc
push
cltd
add
addl
lahf
test
subb
and
mov
xor
xor
les
aas
mov
jns
int
in
inc
pop
dec
inc
mov
dec
out
testb
mov
outsb
jbe
push
loope
hlt
and
stos
in
in
test
mov
out
mov
popa
adc
pop
out
cmc
adc
sub
push
gs
int3
fs
rcr
rclb
pop
or
dec
repnz
adc
shlb
into
pop
xor
dec
jle
xor
push
mov
sbb
inc
mov
pop
push
push
jne
mov
shll
es
dec
xor
push
or
xchg
daa
sub
incl
and
mov
sbb
orb
add
inc
lods
push
add
jnp
into
adc
and
push
mov
and
jno
fisubs
pop
xchg
xor
stos
jae
mov
dec
in
sub
dec
rorb
xchg
leave
inc
xor
pop
push
mov
imul
enter
sahf
mov
sbb
and
push
push
xchg
push
pop
insb
sub
mov
loop
sub
outsl
xor
mov
aaa
or
and
std
push
scas
out
movsl
sub
mov
adc
test
pop
mov
mov
jge
inc
test
jl
and
add
jae
xchg
inc
aaa
lahf
mov
pop
ds
dec
aas
mov
inc
xor
pop
pop
shl
mov
adc
dec
add
imul
xchg
aad
sub
in
aaa
inc
jg
fwait
add
ret
mov
mov
jl
push
jns
pop
or
mov
fildll
xor
push
xor
or
adc
pop
or
pop
and
div
test
testl
push
mov
and
push
sbb
pop
ja
es
jne
pop
int3
adc
mov
rcl
mov
push
idivl
sbb
push
pop
fsubrl
lret
int3
lret
test
hlt
jl
test
scas
and
push
push
js
push
pushf
and
add
or
dec
out
mov
in
push
dec
insb
push
rcll
or
fs
icebp
pop
push
adc
out
add
das
bound
insb
push
ljmp
int
int3
push
dec
pop
int
movsb
push
xchg
jnp
or
scas
lock
pusha
rolb
cmpsb
mov
in
pop
and
orb
fadds
pop
mov
fsubrp
in
jmp
sbb
loop
adc
dec
jno
or
cmp
adc
push
movsb
jb
enter
aad
xor
or
enter
pop
mov
pop
lea
cmpsb
cltd
jecxz
mov
xor
push
mov
mov
xlat
xor
mov
xchg
add
and
and
negl
jno
xchg
xor
fmull
ljmp
xorl
nop
add
pop
js
cmp
and
add
mov
fwait
push
bound
dec
fildl
leave
jge
arpl
pop
into
mov
fmuls
nop
add
xor
inc
inc
dec
jp
dec
dec
cmp
push
inc
push
jle
out
movups
jl
cmpsb
iret
dec
push
scas
push
enter
setae
cmc
rcll
jp
dec
and
xor
xchg
and
adc
inc
les
and
mov
push
cs
je
or
adcb
rcrb
lods
and
in
xchg
ds
add
ja
fs
arpl
xor
test
ljmp
ds
dec
mov
sbb
lret
fs
mov
pop
negb
or
rcl
jne
fists
push
mov
das
jmp
inc
push
adc
lret
pop
ficompl
sti
arpl
popa
in
mov
inc
popf
mov
or
adc
adc
mov
push
aam
mov
dec
pusha
pusha
xorl
pop
dec
aad
rcrl
push
dec
mov
and
inc
xchg
adcl
pop
xchg
pop
dec
inc
sub
fwait
mov
aad
data16
xor
cmpsb
movsl
out
insl
add
je
sbb
addr16
hlt
nop
sbb
hlt
lret
mov
jmp
inc
cmp
cmpsl
mov
ljmp
shl
out
sub
sbb
outsb
and
in
push
inc
sub
jae
stos
pop
mov
arpl
and
push
pop
and
and
sub
stc
pop
fdivs
loopne
push
xor
fstpl
fwait
pop
and
clc
shrl
push
sub
imul
jne
inc
sbb
add
outsl
ficompl
aad
pushl
lds
cmp
pop
pop
movsl
mov
cmp
mov
mov
jnp
xchg
or
test
xor
fcomps
pop
inc
aad
cmp
pop
testl
sbb
xchg
sub
int3
xchg
dec
mov
loop
dec
inc
and
fldcw
cmc
xchg
adc
test
fimull
out
shr
and
adc
sbb
or
add
jbe
xchg
mov
or
cmp
cmp
jae
pop
mov
pusha
aad
jecxz
sub
mov
pop
mov
and
jg
aaa
add
dec
imul
cmp
cmc
shlb
mov
fs
icebp
popf
and
arpl
ds
adc
insl
cmc
mov
push
sbb
pusha
or
aam
jmpw
mov
lcall
xchg
mov
mov
cli
or
xlat
pop
ljmp
jge
enter
arpl
push
sbb
int
out
out
loop
fldcw
daa
add
fisubl
scas
cs
pop
jb
jge
xchg
adc
in
mov
mov
mov
jp
mov
imul
cmp
jl
lahf
sahf
dec
push
or
xor
adc
pop
add
roll
xor
fmull
jl
ss
icebp
mov
adcl
cmpsb
jns
daa
mov
mov
push
rcr
dec
repnz
icebp
rcrb
jg
inc
jl
inc
aad
jle
push
movsl
pop
clc
popa
pop
xchg
or
aaa
dec
and
mov
mov
cmpsl
iret
inc
adc
jmp
mov
test
ret
jnp
jge
inc
add
test
inc
imul
pushf
icebp
jl
popl
int
jnp
clc
cmp
loopne
fimuls
xchg
loop
xchg
imul
test
adc
or
pop
cmpsb
inc
imul
addr16
inc
cmc
xchg
mov
inc
xchg
icebp
jne
popa
mov
hlt
mov
mov
inc
lods
sub
test
add
insb
mov
adc
mov
lcall
jge
je
test
mov
sbb
cmp
pop
sub
lods
xor
in
or
sub
sbb
jae
push
mov
and
xor
sub
sahf
outsl
adc
negb
stos
inc
std
mov
fistpll
dec
xorl
movsb
aaa
cmp
iret
fisttps
mov
mov
xlat
out
in
movsl
psrld
lret
xchg
and
sub
test
test
xor
inc
xor
aaa
add
addl
flds
es
sbb
in
xchg
xor
dec
and
jb
xor
arpl
cmp
dec
test
cwtl
pop
mov
push
cld
xorl
and
in
mov
int
add
push
ds
xchg
clc
test
inc
cmpsb
pop
movsl
fmull
jecxz
outsl
ret
xchg
arpl
xlat
int3
push
shrb
sarb
or
jp
adc
or
push
ss
sub
sub
cmp
in
sbb
mov
cmp
mov
adc
rclb
repnz
or
cmpsl
leave
adc
ss
std
mov
gs
pop
cmp
or
mov
xchg
scas
fldt
sbb
dec
xchg
test
or
or
lahf
xchg
adc
addl
ljmp
rol
pop
scas
cmp
lret
or
ljmp
rcrb
mov
in
ret
and
dec
and
es
add
add
mov
in
cmpsb
sbb
in
sbb
push
dec
xor
arpl
or
aam
lods
jmp
setb
adc
clc
bound
rorb
adc
call
dec
xor
popa
sub
cmc
mov
push
add
sub
into
outsb
dec
cmp
repz
mov
push
lcall
test
test
jecxz
hlt
rorl
mov
cltd
jle
jl
stos
and
dec
or
ret
movsb
mov
insb
push
je
push
jg
sub
or
loopne
mov
jge
pop
mov
imul
subb
fistpll
inc
inc
or
lahf
sbb
insl
fimuls
clc
in
std
xor
or
movsl
mov
aad
dec
fwait
push
push
out
rol
dec
pop
jbe
add
loopne
or
mov
add
cmp
dec
sbb
out
push
pusha
push
cwtl
stc
push
stos
jmp
or
mov
or
and
xchg
xchg
xor
jbe
scas
sub
push
into
mov
imul
les
inc
test
shrb
in
xchg
jecxz
mov
sub
xchg
ret
imulb
push
cmp
xor
push
in
add
dec
jo
sti
sbb
and
movsb
test
cld
shlb
xchg
lock
addl
sarl
ds
push
adc
sub
mov
test
jle
xchg
shlb
cmpsl
xor
les
jle
and
pop
cs
lret
and
in
movsl
hlt
push
pushf
add
fwait
insb
sub
nop
cmpsl
fbld
sbb
dec
adc
das
xor
rclb
fisubrl
xchg
cld
arpl
inc
push
adc
adc
xchg
xchg
mov
nop
orl
aam
out
outsb
pop
mov
mov
neg
jmp
ficoms
popa
sub
adcb
ret
jmp
inc
aad
dec
movsl
shrl
or
lods
shlb
imul
ljmp
add
popf
push
xchg
sub
pop
mov
mov
adc
jmp
jne
data16
mov
lret
lods
adc
addr16
rolb
stos
lahf
sub
imul
jne
cli
adc
mov
jl
push
cmc
xorl
mov
daa
xchg
push
inc
dec
dec
ljmp
fimuls
sub
inc
test
mov
dec
imul
insb
mov
cmp
and
fwait
lock
test
sub
xor
andl
ret
imul
and
js
sti
movsb
insb
pushf
ret
dec
and
enter
sbb
sub
mov
sbb
rol
dec
rorl
dec
push
in
xor
push
nop
orb
imul
mov
stc
out
shl
cld
push
cmp
test
lahf
arpl
pop
roll
sbb
add
xchg
stos
dec
push
sti
stos
cld
add
mov
inc
xor
cmp
rcrb
dec
inc
xchg
cli
mov
inc
mov
jmp
addr16
rolb
lds
call
xchg
leave
pusha
movsl
adc
pushf
xchg
xor
mov
in
sahf
stc
ljmp
sub
movsb
add
movb
mov
adc
addr16
insl
mov
mov
pop
out
add
pop
jne
rcrl
iret
and
pushf
pop
fnstenv
je
lret
arpl
xor
pop
shr
mov
call
pop
cli
pop
xchg
adc
xor
inc
loop
shrl
push
das
dec
dec
jbe
int3
cmp
inc
clc
and
out
lods
jb
gs
mov
out
lcall
or
shl
test
insb
mov
pop
jnp
fistps
das
leave
gs
mov
jl
jmp
mov
or
xchg
jg
loop
mov
movsb
fs
ret
push
xlat
xor
cmpsb
imul
test
or
xor
scas
xor
pop
dec
jb
cld
and
ds
mov
mov
scas
shlb
insb
jae
repz
sbb
push
jo
orl
movsb
popf
cld
mov
or
insb
test
lcall
xchg
cmp
cld
jno
dec
scas
mov
movhps
stos
gs
pop
add
sbb
std
fnstsw
andb
push
mov
dec
xchg
mov
cli
mov
outsl
mov
and
fdivl
xor
sahf
adc
sbb
mov
or
aas
push
and
xchg
inc
sbb
pop
push
pusha
and
das
mov
cs
xchg
mov
push
xor
adc
repz
push
int
sub
test
sbb
divl
loop
enter
ja
push
mov
xor
aad
pop
or
test
enter
mov
jnp
roll
pop
sub
mov
cmp
fldcw
sbb
in
inc
push
int
adc
mov
sub
cmpsb
inc
mov
mov
inc
sub
mov
jl
xlat
frstor
sti
pop
pop
or
push
sahf
out
push
sbb
mov
bound
xor
pop
cmpsl
sti
popa
xchg
xor
xchg
mov
push
inc
cmpsb
push
fldenv
enter
pop
xchg
pop
fnsave
neg
bound
or
popa
dec
dec
adc
and
push
in
cmpsb
lret
inc
and
cld
in
jne
fcomp
pusha
out
sbb
loopne
scas
fnstsw
xlat
xchg
adc
sbb
test
mov
cmpsb
cmp
jge
xchg
incb
lods
jb
mov
mov
add
jo
mov
outsb
xchg
outsb
mov
das
adc
jmp
pop
jns
mov
add
out
dec
fstps
scas
rol
push
add
add
add
add
stos
std
adc
iret
in
sahf
adc
aas
insb
jp
push
or
pop
pop
push
mov
lock
idivl
lret
inc
jb
test
flds
jmp
stc
adc
or
pop
shlb
sub
jae
xchg
in
xlat
cmp
lret
push
adcl
daa
pop
pop
inc
mov
adc
ds
mov
rolb
dec
mov
or
sub
rolb
mov
inc
fcoml
xchg
inc
cmp
cmp
iret
insl
insl
cmpsb
or
ffreep
ret
adc
sub
rcr
push
xor
clc
imul
daa
dec
out
aaa
notl
or
inc
loopne
stos
pop
push
xchg
in
and
cmpsl
into
xor
loope
dec
inc
jmp
xor
pop
pop
cld
pop
xor
cmp
mov
movsl
mov
rclb
push
or
sub
push
pop
out
shlb
jbe
fwait
enter
repz
mov
leave
xchg
pop
imul
movsb
mov
arpl
mov
add
cld
out
sbb
test
jne
and
sub
js
pop
mov
movsb
mov
dec
orl
in
cltd
push
outsb
dec
jns
or
repz
pusha
mov
pop
sub
lcall
mov
cmp
and
icebp
dec
lret
iret
or
sub
or
xchg
subb
dec
mov
cmp
notb
pop
leave
shrl
and
push
fildll
push
inc
jge
mov
dec
mov
in
sub
jns
imul
inc
sub
fs
gs
lds
cli
int
dec
and
in
insb
fdivrs
fsubl
mov
repnz
fdivs
std
jp
loopne
loopne
sbb
scas
push
ret
in
or
outsl
hlt
outsl
cmp
loope
mov
fildll
jp
dec
cmp
ds
in
aam
or
and
xor
sbb
shll
xchg
call
mov
imul
aas
rorl
mov
out
xor
add
push
nop
lret
aas
add
pop
push
pop
jne
imul
sbbb
ss
icebp
into
fstl
mov
mov
test
mov
mov
or
sbb
xchg
test
mov
dec
and
mov
out
push
xor
dec
fsubl
jecxz
scas
xchg
cmp
test
xchg
jl
aam
add
sbb
fldcw
mov
push
andb
lods
xlat
mov
in
jo
cmpsl
sahf
aaa
js
cmp
hlt
cli
std
jb
mov
sub
push
adc
icebp
es
add
sbb
mov
jbe
test
bound
js
dec
popf
cmc
adc
lret
fsubrs
out
inc
add
jp
ret
cmp
and
leave
pop
adc
cld
clc
pop
mov
mov
mov
xchg
push
popf
mov
iret
jg
jmp
mov
mov
cs
lahf
mov
mov
dec
sarl
lock
cmp
xor
cmp
push
movsl
xchg
pop
das
mov
test
dec
jl
js
xor
xrelease
adc
jbe
mov
mulb
leave
jg
push
jge
xor
iret
pushf
int3
lret
xchg
les
cld
pop
es
mov
sbb
mov
push
fsubs
mov
ds
jmp
xchg
and
sar
mov
mov
push
iret
arpl
jo
test
adc
mov
mov
jnp
ret
jp
cwtl
push
push
dec
xchg
repnz
and
mov
out
dec
adcb
pop
xor
leave
pop
mov
push
ss
out
and
mov
nop
adc
lret
adc
adc
scas
mov
addr16
loop
cmp
js
icebp
shrb
add
pop
and
dec
test
dec
pop
add
mov
adc
sub
mov
into
stos
sbb
mov
xchg
test
mov
push
filds
das
cwtl
pop
aas
dec
daa
and
orb
push
test
mov
cli
lds
scas
cwtl
fimuls
sbb
lods
pop
sub
fsubp
sahf
jno
outsl
outsl
push
dec
insb
in
sub
push
mov
push
add
dec
adc
dec
inc
std
or
push
add
jne
inc
xorl
mov
xchg
xchg
loop
iret
xor
xchg
stos
mov
scas
fwait
sahf
xchg
mov
fidivrs
mov
xor
mov
mov
xchg
and
lods
in
push
mov
popf
pop
push
inc
sti
inc
xchg
inc
pop
rcrl
in
adc
xchg
or
imul
shlb
fisubrs
dec
enter
imul
pop
push
mov
pusha
dec
or
hlt
push
outsl
mov
out
or
xor
outsl
rcll
inc
inc
scas
add
pop
jno
add
dec
mov
fldl
jb
jb
xor
bound
imul
push
push
pop
cwtl
push
inc
xchg
fldcw
xchg
jnp
loopne
cmp
xchg
cltd
sub
insl
lds
push
mov
jo
push
in
pop
dec
push
subb
mov
fstpt
js
mov
cli
cmpsb
ror
int
lcall
lods
or
mov
call
lret
std
mov
fwait
repz
adc
fists
fildl
clc
mov
incb
add
mov
loope
jg
mov
pushf
sbb
popa
cmpsl
and
hlt
mov
in
sti
sbb
sub
xchg
jg
sub
test
cld
mov
mov
out
icebp
out
inc
jno
lret
stos
iret
jecxz
mov
and
sbb
sub
shrl
loopne
jnp
iret
pop
jo
ljmp
int
lret
xchg
lcall
sub
rolb
test
push
test
jmp
aas
and
lcall
adcb
test
push
js
jp
mov
stc
js
or
aam
test
or
adc
adc
and
stc
mov
pop
sub
sbb
mov
push
ljmp
adc
adc
mov
loop
push
inc
lret
pushf
adc
mov
bound
jae
repz
mov
pusha
push
mov
mov
gs
mov
call
mov
inc
cmp
cmp
fdivrs
rorl
add
adc
cmp
push
out
inc
and
xor
sbb
out
stos
in
std
int3
bound
dec
test
std
lcall
std
out
mov
or
repz
sub
inc
iret
jge
scas
mov
mov
mov
outsb
sbb
out
jb
inc
jmp
mov
notb
fistl
mov
jmp
in
stos
sub
pop
out
mov
fxch
int
mov
mov
sbb
xor
in
mov
jne
arpl
arpl
fstp
adc
insb
xor
ss
fiadds
std
sbb
mov
xor
dec
push
push
das
dec
jp
js
add
cwtl
fimuls
sub
rol
in
cld
or
das
out
lea
and
idivb
je
lahf
or
or
dec
inc
mov
imul
xchg
inc
rcrl
push
sbb
mov
sub
mov
xlat
adc
popa
mov
mov
stos
dec
test
test
and
sub
pop
shll
lret
xor
cmp
shr
mov
mov
push
sahf
add
sahf
pop
loopne
pop
mov
and
insl
test
jnp
test
cs
mull
fnstenv
aas
xor
add
jmp
jae
and
cmpsb
inc
iret
add
jmp
add
out
push
cwtl
rclb
and
fstl
adc
cmp
popa
hlt
scas
sub
push
mov
mov
je
dec
sub
push
inc
sbb
movb
sub
je
adc
jge
push
and
mov
push
mov
pop
int3
iret
leave
popf
dec
adc
in
in
pop
adc
loop
mov
inc
repz
pop
pop
aam
xor
aad
mov
and
call
fnstenv
lret
dec
pop
loope
int3
das
adc
aaa
xchg
out
mov
and
insl
in
stc
jb
js
cmp
xor
sub
xchg
push
clc
mov
sub
mov
push
in
icebp
xor
cmp
push
cmp
out
xor
std
setg
jecxz
inc
jne
add
aad
mov
mov
lods
addr16
les
stc
jecxz
inc
mov
mov
movsl
movsb
daa
insl
vpavgw
add
mov
addb
movsb
adcb
pop
bnd
push
adc
into
add
rol
inc
and
xor
sqrtps
or
loopne
mov
push
fsts
lret
adc
ljmp
adc
fildl
pop
pop
fcmovnu
daa
mov
movsl
xorb
pop
add
cmp
lods
je
inc
push
pop
mov
add
es
inc
arpl
or
dec
mov
dec
jmp
sub
aam
nop
lock
jle
inc
lahf
aaa
insl
in
aas
xchg
push
cmp
les
sarb
pusha
pushf
dec
mov
adc
in
mov
lcall
fmull
lea
sub
out
jg
adc
pop
mov
pop
and
xchg
loope
scas
hlt
mov
cmpsb
lcall
push
push
fdivrs
in
sbb
adc
sub
mov
push
cld
lret
push
rcrb
in
cs
cmp
das
test
shlb
pop
pop
jo
adc
fwait
xor
loope
jo
in
mov
arpl
pop
sub
pop
cli
adc
test
mov
lahf
cmp
push
jle
loop
push
aam
jne
imul
lahf
pop
repz
in
lock
mov
mov
stc
sub
fucomp
sbb
orl
or
shlb
repz
mov
add
clc
fs
sub
lret
aam
test
sbb
gs
sarl
pop
jo
dec
pop
fmuls
test
mov
pop
push
faddl
add
jle
cwtl
insl
or
int3
mov
push
out
adc
shrl
sbb
aaa
jne
into
iret
push
rcrl
mov
xchg
xchg
jns
mov
dec
or
pushf
pop
test
xorb
add
xchg
inc
cs
ficomps
mov
cld
insl
test
and
das
test
aad
ret
lock
shll
xchg
popa
push
ret
inc
mov
js
cmc
mov
push
lea
mov
in
xlat
jno
std
and
icebp
mov
inc
cmp
or
pop
aad
mov
and
aas
aam
addl
dec
and
sub
jb
daa
xor
in
loope
out
in
cmc
stc
popf
mov
mov
insb
add
dec
and
mov
mov
and
or
js
lret
jge
popa
sbb
mov
pop
dec
int3
or
cmp
stos
push
fbstp
mov
mov
or
cmp
pop
test
cltd
add
ds
out
lret
js
ds
call
cld
xor
and
or
pop
mov
and
js
jmp
mov
sub
mov
fbstp
int
sbb
cwtl
pushf
ja
js
lods
fcoml
cld
mov
dec
mov
cltd
cwtl
xchg
push
out
pushf
dec
mov
pop
loopne
or
jecxz
loope
push
mov
mov
mov
jp
inc
mov
add
mov
mov
adc
movb
shlb
paddusw
mov
adc
ret
dec
cli
dec
lret
dec
jb
loopne
fsubl
push
fisttpll
push
in
addr16
cwtl
add
jl
cld
flds
in
pushf
neg
gs
pusha
nop
xchg
cmp
call
in
popa
call
lods
int
lods
mov
imul
jp
or
pop
mov
inc
push
sbb
dec
shll
pop
sub
xchg
aaa
mov
call
frstor
dec
xor
stos
inc
movsb
sub
inc
and
and
ficoms
test
lock
hlt
es
jg
jno
and
in
adcl
test
fcomps
std
repnz
push
sub
enter
jge
mov
and
mov
sub
mov
mov
cmp
stos
inc
pop
xchg
mov
nop
addb
lods
xchg
stos
add
xchg
int3
pop
xor
sarl
lahf
push
xchg
inc
jle
xchg
mov
xchg
cmpsl
out
call
out
add
or
or
addr16
push
xchg
movsb
add
pop
repnz
xchg
sub
inc
jb
scas
pop
mov
aas
sub
or
xchg
jnp
xchg
cmpsl
mov
fs
fdivrs
ret
cld
lahf
sbb
jp
aam
adc
sub
add
sbb
ja
aaa
sbb
adc
arpl
mov
rorl
jnp
jne
add
inc
xor
xor
add
dec
aas
mov
lods
or
push
push
repz
add
fstps
mov
cmp
inc
push
call
fldenv
jmp
mov
and
xor
cmp
or
cmp
mov
lds
and
bound
fwait
das
dec
mov
sahf
inc
cld
and
adc
add
mov
orl
pop
adc
lea
adc
pop
movsl
insb
popf
daa
shlb
bound
insl
jp
pop
or
and
popf
sti
sub
in
inc
inc
add
mov
out
add
jo
adc
loopne
shll
enter
les
and
mov
xchg
adc
inc
cs
push
stc
pop
cwtl
inc
add
sub
scas
ror
fwait
ds
lods
add
aad
pop
xchg
jge
bound
aas
in
ljmp
test
or
mov
push
adc
addr16
imul
xlat
push
iret
xchg
mov
stos
xchg
adc
xchg
cmp
mov
test
fisttps
scas
jno
inc
aas
das
sbb
xor
dec
xchg
sub
cli
addr16
pop
pop
pop
mov
pusha
mov
leave
data16
cwtl
adc
shlb
jge
cmp
mov
jb
or
dec
addr16
or
cmpsl
insb
mov
push
inc
loope
cmp
cmp
pop
xor
push
test
test
fwait
ret
add
lds
mov
ja
stc
not
inc
fdivs
int
or
repz
sbb
lods
sbb
add
inc
mov
cwtl
jmp
iret
lds
stos
and
sbb
mov
adc
fbstp
fbld
stos
xchg
mov
adc
loopne
cmp
mov
and
cs
push
pop
mov
inc
jmp
mov
cmp
mov
or
adc
sahf
jp
mov
or
xchg
insb
ficompl
test
xor
jns
xchg
lds
std
lret
insb
and
and
out
je
std
dec
jg
addw
add
jb
sub
or
cmp
aam
daa
dec
movsl
pushl
sbb
fs
cmp
jcxz
rcrl
fs
imul
rorb
nop
sbbb
aad
mov
and
lahf
aaa
adc
and
out
pop
sahf
out
adcb
mov
in
mov
push
lcall
cwtl
sub
jo
movsb
lea
iret
loopne
stos
addr16
jns
mov
rcrb
push
popa
loopne
sub
or
repz
dec
cmpl
arpl
jl
sub
or
add
cmc
fimull
stc
sti
inc
les
adc
add
fsubs
pushf
inc
pusha
mov
in
lods
cmp
repz
test
es
pop
pop
mov
mov
imul
lcall
add
sub
ss
insb
jns
and
sub
mov
lret
mov
jne
ret
mov
repnz
jo
std
inc
imul
sub
adc
and
push
jge
pop
enter
adc
mov
xor
fldenv
mov
in
sub
in
fs
out
rorl
imul
in
sbb
fstps
fisubrl
dec
jns
iret
out
mov
fs
arpl
mov
mov
mov
mov
mov
sbb
lret
test
xchg
mov
loopne
cs
push
jle
jns
ffree
out
adc
cmp
mov
daa
pop
jl
hlt
sub
mov
mov
pop
and
mov
add
data16
subb
jnp
int3
push
inc
das
push
out
insl
ret
js
or
jae
scas
jl
clc
add
add
xchg
call
scas
push
xlat
mov
test
insl
xor
out
xor
cmp
sbb
insl
popf
add
loope
roll
sbb
xor
pop
repz
sub
lret
sub
and
sbb
pop
fwait
xchg
cltd
mov
or
cmp
stos
mov
mov
dec
ret
add
filds
and
pusha
jo
xor
pop
mov
inc
sub
enter
push
pusha
mov
mov
mov
cltd
outsl
ja
cld
and
stc
pop
xor
xor
push
iret
mov
lock
das
out
out
mov
inc
ret
stc
ds
fs
dec
popf
les
outsb
cmp
out
imul
imul
repz
fwait
push
push
add
cltd
aaa
jmp
das
hlt
pushf
rcrb
sbb
pop
jmp
xchg
xchg
xchg
pushf
or
arpl
lods
xor
bsr
push
mov
jmp
adc
sbb
hlt
mov
xor
bound
popf
mov
in
popf
pop
dec
adc
aam
mov
in
data16
cld
push
das
sbb
push
cmp
dec
jecxz
pop
mov
std
outsb
imul
add
add
lods
xor
movsl
jbe
inc
fsubrp
dec
sbbb
shlb
shrb
addb
aaa
dec
enter
notl
or
add
mov
pop
fistpll
popa
inc
cmp
ror
rcl
test
ds
mov
mov
lea
push
movsb
sub
dec
pop
xor
sbb
and
leave
in
pop
subl
ds
or
or
adc
cltd
sub
add
and
fstpl
push
push
push
xchg
push
jbe
sub
les
or
pop
sbb
negl
jge
mov
adc
outsl
cmp
jmp
sahf
xor
dec
xchg
inc
repz
jecxz
je
fnstsw
push
push
dec
inc
dec
ss
mov
loop
pop
mov
jae
sbb
push
xor
jne
ds
mov
sub
sub
sub
lret
call
out
insl
adc
dec
xchg
sub
xor
xor
or
xor
mov
push
lret
aaa
mov
out
cmpsb
into
lcall
add
popa
bound
shll
mov
and
jo
xchg
sbb
aaa
pop
mov
adc
enter
push
mov
std
push
std
cwtl
lahf
outsb
movsl
or
test
ja
arpl
out
repnz
rcll
cmp
sahf
xlat
xchg
mov
cmp
sbb
add
add
mov
xchg
addr16
fstpl
cmpl
push
push
aaa
jecxz
xchg
jne
cmpb
in
adc
push
leave
in
dec
int
lret
ret
out
xor
mov
sahf
mov
mov
mov
in
jb
pop
xchg
aam
xchg
inc
test
push
adc
jbe
imull
mov
enter
je
insl
js
and
and
add
xchg
int3
inc
in
js
mov
xor
cmpsl
nop
cmp
pop
pop
aam
test
out
movsl
xchg
jl
adc
xchg
jae
sub
lea
in
cmp
out
div
push
mov
in
imul
iret
and
cmp
shll
jbe
in
mov
loop
aam
and
and
xlat
repz
negl
lret
std
cli
inc
ret
adc
jp
mov
insb
stc
cmpl
and
mov
inc
push
xor
pop
lahf
jo
and
and
test
xchg
push
out
or
adc
outsl
dec
cmp
imulb
lock
hlt
mov
push
loope
sbb
dec
rol
aaa
dec
pusha
cmpsl
dec
inc
add
jno
dec
das
xchg
mov
stc
fwait
fs
test
mov
fstpt
jae
ds
aad
in
adc
sbb
or
fwait
jne
inc
test
outsl
ljmp
mov
add
fisubs
cld
sbb
js
test
xor
mov
lret
shll
dec
xchg
or
cmp
cmpsb
xchg
arpl
out
clc
pop
test
jmp
mov
jl
mov
in
mov
sar
cld
mov
js
bound
jl
mov
mov
xchg
inc
xchg
mov
cmp
ds
mov
or
add
mov
cmp
in
sub
add
mov
jb
movsb
sbb
add
mov
add
adc
fwait
rorl
imul
fnstcw
stos
std
xor
push
inc
xor
or
cmp
das
cmp
push
lret
dec
cmp
sub
lret
pusha
lret
rcl
cmpsl
int
pop
jbe
daa
dec
aad
je
les
cmpb
aam
mov
lcall
push
les
enter
fstp
fiaddl
push
arpl
xchg
daa
push
add
fnsave
call
popa
pop
dec
push
and
fmull
enter
int
xchg
sub
pop
and
jl
test
xor
sti
pushl
mov
add
fstpt
dec
test
cli
es
mov
xchg
out
xchg
jp
cmp
and
lcall
and
xchg
mov
adc
mov
mov
cmp
aas
xlat
mov
test
pop
fisttpl
xchg
cmp
hlt
fstl
rcl
inc
dec
test
jno
mov
and
es
mov
pop
scas
jl
loope
orb
push
test
out
sub
in
push
xlat
and
fdivrs
mov
ret
insb
or
sti
jp
adc
pop
xchg
add
clc
mov
xchg
push
rorb
mov
xchg
sarb
imul
scas
fwait
aas
jmp
sti
mov
xchg
add
xorb
dec
jne
mov
sub
ret
pop
and
adc
sbb
mov
loop
mov
sub
arpl
jmp
lods
pop
mov
xor
in
aam
cmp
into
mov
sbbl
push
mov
fmuls
mov
in
mov
dec
xchg
and
jp
jbe
cmpsl
insb
sbb
call
int3
and
pop
sub
xorl
push
pop
in
nop
cmpsb
push
shlb
sub
push
inc
cwtl
pop
fidivs
daa
mov
ds
or
xor
adc
xchg
in
adc
mov
mov
cmp
jo
and
cmp
mov
jae
pop
push
mov
add
out
jae
mov
lock
mov
pop
mov
dec
pop
gs
js
xchg
or
mov
pop
mov
mov
push
std
imul
add
ret
ficoml
mov
mov
sbb
test
test
mov
push
sbb
inc
jne
or
shlb
xchg
adc
mov
int
jecxz
mov
aad
int
sbb
mov
xchg
push
insl
sarl
jns
out
jae
sahf
mov
inc
call
cs
jmp
ljmp
cmp
dec
pop
fdivrp
or
test
loope
and
test
inc
add
lahf
hlt
push
xchg
mov
scas
add
add
cmc
lret
test
cmp
lods
lock
lods
mov
push
addr16
add
jae
xor
adc
js
mov
inc
adc
loopne
bound
add
jne
sbb
cmp
and
add
sub
ja
xchg
or
xor
je
xchg
fsub
in
arpl
lret
ss
pop
in
cmp
fdivrs
das
xchg
push
aaa
pushf
push
or
ret
dec
ja
mov
xor
lea
inc
nop
and
jmp
sti
cmpsl
mov
add
in
stos
pop
inc
mul
sub
aaa
aad
push
sbb
pop
inc
push
mov
or
mov
xlat
or
jnp
xchg
push
inc
cmpsb
inc
cmp
or
imul
xlat
sbb
xor
push
lahf
lock
jle
pop
pusha
loop
mov
fimuls
sbb
in
lret
and
pop
mov
mov
sub
push
addl
cwtl
mov
jbe
ret
fisttpll
dec
or
pop
js
lret
and
aam
mov
jmp
push
shrl
add
mov
or
outsl
jno
scas
xchg
mov
inc
mov
call
and
xchg
rclb
addl
dec
lret
xchg
mov
cmp
mov
mov
pop
sub
cli
add
mov
stc
lret
push
std
shrl
aas
sbb
aaa
por
repnz
mov
ljmp
pop
das
shr
lods
adc
lock
add
dec
addb
jbe
push
shl
sahf
insb
ficompl
in
push
imul
test
ss
mov
imulb
xchg
pop
test
mov
push
add
xor
or
stc
lea
jp
jne
mov
orl
sub
mov
jmp
xor
xlat
call
push
int3
fnsave
push
sub
pop
mov
jo
out
sbb
push
enter
mov
xor
pop
negl
fstpl
push
repz
imull
inc
dec
std
imul
xchg
mov
adc
bnd
xor
xor
das
push
in
inc
pop
data16
cmp
mov
and
xor
inc
xor
stos
insb
mov
incl
popf
push
inc
xchg
adc
icebp
ret
rorl
hlt
or
and
insb
repz
cmp
dec
adc
add
adc
xorl
sub
and
shll
mov
dec
pop
int3
js
xchg
inc
mov
movsb
xor
xor
fdivrl
js
mov
mov
gs
negl
xor
sbb
cmpsb
arpl
lods
or
xchg
stos
cld
or
insl
sbb
mov
fmuls
xchg
sub
popf
ret
or
and
jl
jg
es
rcll
xchg
lods
lret
popa
xchg
pushf
push
cmp
sbbl
fsubrs
imul
sub
sbb
jmp
cmp
push
mov
mov
les
jne
mov
xchg
test
push
subb
aas
pop
dec
mov
pop
fcompl
xchg
fbld
push
sbb
mov
and
mov
jae
mov
cmp
push
pop
mov
outsb
jae
mov
and
mov
lods
add
repnz
mov
sbb
nop
aaa
inc
pavgw
lea
ret
sbb
mov
enter
inc
sbbb
imul
cmpsb
push
and
mov
or
js
inc
cmp
xchg
shrb
sbb
cwtl
fidivl
mov
imul
enter
mov
mov
push
cmp
cmp
movsb
xchg
dec
cmp
cwtl
fwait
add
jge
push
lret
or
xchg
xor
in
fmuls
and
cs
push
sub
push
add
aaa
cmp
call
jae
in
sbb
push
nop
pop
xor
mov
jl
add
mov
jns
outsl
loop
in
fdivrs
push
mov
pop
ret
out
xor
cmc
jmp
jmp
ss
or
mov
or
inc
loopne
fs
push
aaa
js
mov
xor
inc
shll
jmp
ss
out
int3
and
lods
rorb
jmp
sub
push
sti
mov
pop
push
dec
jl
shlb
int3
pop
clc
mov
or
fsubrl
fistps
cmp
dec
gs
popa
lsl
pop
inc
push
cmp
rcrl
push
jecxz
outsb
xchg
ljmp
cmpsl
leave
pushf
mov
lock
faddl
jge
in
xchg
xchg
push
dec
cli
add
pop
sub
xchg
jg
xchg
pop
sbb
das
std
iret
ret
cmpsb
adc
cmp
adcl
xchg
fcoms
loope
in
fistps
out
rcll
leave
add
mov
pop
ds
popf
fwait
pop
lea
int3
jno
in
cmp
add
xchg
push
sbb
clc
and
lahf
mov
stos
xor
adc
xlat
add
je
ljmp
into
mov
dec
and
in
loopne
push
fiaddl
add
lock
sub
sbb
fnstsw
mov
cwtl
add
fiadds
xchg
jne
sbb
divl
fwait
add
orb
aaa
scas
cmp
mov
scas
lret
mov
lcall
add
push
stos
movlps
lea
add
lock
mov
data16
sub
mov
sub
mov
pop
int
pop
rcrb
imul
add
push
jp
cmp
push
shlb
rol
xor
outsb
sub
cmp
cmpsl
in
movsb
cltd
mov
sbb
aaa
jbe
mull
sub
jbe
dec
out
fs
and
jg
popf
xchg
push
xlat
mov
insl
icebp
pusha
pmulhuw
mov
nopl
push
push
lds
mov
sbb
subb
adc
loope
stos
cs
stos
out
inc
andb
mov
push
mov
loopne
jnp
dec
pushf
push
roll
fistpl
test
imul
roll
inc
popa
inc
inc
adc
cmp
jne
cmp
push
jge
flds
adc
xor
dec
and
in
or
jmp
push
sbb
fxch
xor
jge
loope
subl
incl
jbe
outsl
inc
aad
push
inc
xor
lret
push
push
xor
fldcw
pop
outsb
pop
or
push
or
mov
mov
jecxz
lods
cmp
push
test
in
push
jo
mov
jge
test
pushf
mov
dec
daa
adc
jo
sbb
outsl
lods
mov
xor
popa
ljmp
inc
dec
int3
sbb
pop
subl
ljmp
outsl
jle
pop
inc
popa
divl
xchg
jp
push
fdiv
pusha
xchg
push
ja
xor
pop
xor
push
jp
in
sub
or
and
add
xchg
sub
jmp
pop
rcrl
and
jge
push
icebp
pop
add
std
gs
andb
mov
jp
mov
mov
and
in
push
xor
popa
popa
cmp
adc
addr16
push
jmp
sub
ret
sbb
pop
cmp
add
xchg
push
xor
add
xor
inc
xorb
push
jb
sub
jno
gs
xchg
add
repz
lcall
mov
jle
lcall
in
in
add
enter
scas
and
jmp
cmpsl
insl
test
xchg
push
mov
stos
clc
lret
mov
aaa
xchg
or
mov
mov
or
pop
repnz
inc
mov
call
ret
cwtl
pop
aad
mov
push
xchg
outsb
sub
mov
push
sarl
dec
sub
cmp
pushf
lds
out
sahf
add
cmp
dec
and
adc
das
sub
dec
es
cmpsl
jnp
decb
aaa
fsubr
pop
out
mov
xor
movsb
xchg
pop
in
inc
rcl
sbb
cmp
das
cmp
js
movb
mov
push
imul
int3
sahf
sub
jb
cmp
insl
pop
adc
lea
push
sbb
divl
popa
testb
push
iret
loopne
clc
or
dec
dec
je
sub
stos
mov
sub
bswap
and
push
insl
inc
fnstenv
out
mov
cld
inc
cmp
fwait
cmpsb
xor
dec
cld
adc
mov
add
scas
mov
jp
push
inc
cmp
pop
stos
fnstsw
addb
loope
movsl
leave
fsubrl
mov
rorl
cltd
mov
mov
mov
fcomps
das
push
lea
push
and
fdivl
mov
dec
mov
lds
adcb
imul
xchg
mov
das
inc
adc
out
add
es
cmc
pop
scas
push
out
movsb
xor
mov
js
pop
push
or
cmp
mov
mov
adc
fidivs
push
iret
mov
das
xchg
mov
dec
cli
mov
hlt
and
add
jb
mov
cmc
sub
ljmp
push
xor
lcall
pop
xchg
js
in
push
orb
into
aaa
js
jae
test
jle
xor
cmp
jmp
dec
jb
mov
stos
dec
and
fbld
rcl
mov
imul
jecxz
pop
out
jne
dec
int3
insl
cld
push
bound
pop
loop,pt
fiaddl
lahf
push
dec
fists
mov
xor
scas
lods
mov
addr16
lods
cmpsl
adc
cmpsl
inc
enter
fisttps
arpl
pop
pop
shlb
out
popf
mov
cmc
stos
xor
shlb
dec
mov
sub
repz
adc
outsb
jno
sub
es
jbe
stos
mov
jne
outsb
movsb
aas
mov
rolb
add
sub
or
jno
or
bound
jle
xchg
iret
cli
xorl
inc
stc
and
jne
add
add
scas
sbb
mov
je
aad
cmc
in
andb
fcmove
scas
mov
mov
push
and
xchg
aam
lea
inc
popa
add
popf
push
enter
sti
clc
xchg
xor
cwtl
gs
sti
stc
ret
sub
adc
cltd
in
push
stos
dec
dec
dec
fildll
jae
inc
cmpsb
adc
mov
pop
test
aad
mov
mov
add
sub
sbb
mov
or
or
or
adc
enter
sbb
sub
xor
in
fldcw
shr
arpl
lret
jp
enter
clc
js
cmp
jge
add
cmpsb
mov
out
jb
negl
sub
arpl
out
jge
dec
into
shlb
sbb
pop
inc
cmp
sti
adc
in
sub
call
dec
addr16
and
adc
in
out
push
ds
ljmp
enter
pop
outsb
inc
pop
lds
insl
and
divl
lods
frstor
dec
cmc
mov
add
int
lds
test
xor
pop
mov
sub
pop
out
repz
sub
cltd
popf
pusha
arpl
and
stos
addb
ficomps
iret
cmp
xchg
decl
xchg
cmp
cli
into
pop
xchg
mov
testl
out
arpl
jns
aaa
jmp
mov
fwait
push
lcall
lods
sbb
pop
fimuls
insb
mov
or
data16
dec
rclb
stc
sahf
fs
mov
mov
les
jl
xchg
pop
push
repz
mov
addr16
outsb
and
fwait
outsb
xchg
imul
xlat
push
dec
les
pop
rcll
mov
sbb
dec
lods
cmc
lds
popf
icebp
xor
sbb
xchg
test
mov
sbb
popa
push
dec
and
pushl
jge
xchg
mov
cs
sbb
aas
stos
push
loopne
in
jge
adc
data16
mov
inc
mov
fcompl
add
jb
mov
sbb
pop
mov
repz
loope
shrl
mov
mov
xor
leave
sub
jb
mov
pushf
imul
out
mov
cmp
mov
fcomps
popa
lret
je
movsb
pop
or
xlat
pop
call
dec
aam
xchg
sbb
daa
shll
shlb
leave
lcall
fidivrs
pop
fldt
int
pop
daa
in
mov
mov
in
mov
fildll
icebp
xchg
pop
add
adc
das
pop
int3
jne
pop
sahf
inc
test
pop
sahf
insb
or
clc
or
enter
pop
repnz
fistpll
int
sbb
pop
or
xchg
roll
fstpt
pop
jo
pop
sub
out
dec
jo
inc
cmp
outsl
pop
pop
mov
mov
inc
push
icebp
xlat
and
cmp
sub
cmc
and
inc
mov
cmp
in
sar
cwtl
or
jo
and
or
orb
push
inc
sbb
xor
push
sub
xlat
jge
pop
stos
mov
mov
inc
mov
shl
adc
mov
ja
dec
push
shrl
xor
clc
sbb
pop
lcall
jb
movsl
aaa
nop
ja
pop
adc
push
ss
push
sbb
les
jle
stc
adc
adc
mov
xor
sub
push
es
inc
dec
add
xchg
std
push
pop
adc
dec
movsb
jl
mov
lcall
shl
movsb
mov
popa
es
movsl
jmp
cmpsl
lods
xorl
outsl
cmp
and
inc
jg
xchg
insl
and
leave
lret
cmc
and
inc
sbb
arpl
dec
stc
fmull
adc
rolb
or
cltd
loopne
pusha
clc
outsl
jbe
pop
adc
pop
add
je
mov
or
psubusb
jp
cmpsb
mov
cmc
test
inc
mov
cmp
push
inc
out
lods
lods
xor
mov
push
mov
add
add
dec
adc
pop
sub
fdivrl
mov
xchg
mov
lret
ljmp
and
pop
out
test
sbb
rclb
scas
xlat
or
xlat
aas
lret
outsl
sbb
fdiv
inc
xchg
sub
mov
es
insl
mov
mov
mov
cwtl
adc
stc
lods
dec
xor
in
bound
cwtl
ja
mov
adc
xchg
outsl
nop
add
sbb
mov
movsb
aad
mov
aam
loope
mov
lahf
inc
adc
mov
mov
xchg
jo
jge
inc
cmp
movsl
ficomps
movl
repz
test
xor
jae
ficoms
pop
mov
cwtl
mov
nop
call
jmp
or
mov
fucomip
mov
inc
add
ja
and
lahf
stc
push
repnz
adc
jcxz
and
jp
sbb
adc
xor
push
inc
sub
fs
notb
in
iret
pop
ja
pop
rcll
aas
bound
clc
out
orl
inc
shl
and
add
lods
and
sbb
fisubs
mov
cli
or
add
les
mov
out
nop
lahf
je
mov
test
or
in
and
lods
out
push
decb
inc
cmp
incl
mov
and
push
pop
mov
push
mov
ja
dec
mov
jns
daa
and
add
repz
jle
pop
jns
iret
stc
cmp
lods
nop
jp
xchg
xchg
movsl
sbb
jge
mov
cmp
inc
aaa
cli
addl
stc
ja
in
ds
in
xchg
stos
lods
jb
fsubrs
push
jge
nop
out
fnsave
les
push
mov
dec
push
imul
sub
pop
mov
sbb
pushf
mov
push
test
mov
jae
mov
push
sbb
mov
mov
cli
fmuls
mov
sbbl
sbb
cmp
js
jbe
hlt
fidivrl
stos
or
call
pop
dec
data16
xchg
out
mov
mov
add
sub
cmp
aaa
xchg
call
fbstp
ljmp
push
jg
dec
ror
inc
cli
icebp
or
fnsave
movsl
icebp
dec
je
rcl
jle
mov
push
iret
aam
mov
out
jle
pop
pop
jecxz
push
int
test
inc
pop
inc
leave
xor
es
pop
sub
xchg
sbb
popf
sbb
imul
cmp
es
jae
scas
xor
test
nop
pusha
inc
pop
mov
int
cs
std
test
insl
rolb
mov
pushf
inc
mov
adc
and
cld
in
and
or
insl
cmp
inc
sarb
dec
aam
imul
jb
and
sahf
jo
dec
in
adc
mov
pop
add
dec
and
in
data16
test
xchg
dec
pop
ss
nop
mov
push
stos
xor
jo
leave
daa
out
xchg
dec
add
insb
pop
xor
sub
fidivs
dec
orb
sti
pop
push
aam
jg
sbb
icebp
mov
xchg
pusha
mov
mov
scas
push
in
stos
mov
mov
or
push
testb
stc
push
mov
add
mov
ficoms
pop
in
jo
or
loopne
mov
add
outsb
pop
jmp
in
imul
adc
pop
sbb
inc
adc
jg
mov
dec
das
lock
outsb
mov
sbb
mov
dec
insl
and
adc
and
jbe
sbb
cmp
subb
mov
ds
sub
es
aas
repz
fadds
pop
mov
mov
push
jne
mov
fbld
sub
push
dec
dec
mov
mov
push
clc
cmp
into
stos
sti
xchg
jns
mov
call
cmp
xlat
sarl
sahf
and
jae
add
scas
out
inc
or
xchg
or
movlps
leave
pop
add
push
xchg
mulb
cs
ret
push
fcompl
imulb
cmp
push
iret
inc
movsl
adc
and
mov
xchg
inc
xchg
mov
jbe
int
loop
xchg
xchg
outsb
ret
ljmp
push
push
xchg
fisubl
jae
inc
mov
jns
mov
imul
scas
pop
pushf
fmulp
mov
dec
clc
jae
xchg
mov
xchg
xor
inc
mov
lahf
cmp
push
lcall
aas
mulb
dec
push
andw
push
hlt
jo
xchg
pop
dec
pop
movsl
scas
cld
repz
or
js
aas
jae
movsb
mov
mov
pop
cmp
pop
push
and
add
sti
cmp
lods
mov
rcrl
out
repz
push
repz
loopne
jne
es
movsl
div
gs
push
repz
jae
sarb
add
add
xchg
push
mov
icebp
lea
push
sti
divb
movsl
cltd
clc
call
xor
das
and
lods
out
mov
aam
scas
jp
sub
lods
jg
stc
or
mov
popf
pop
xchg
icebp
push
arpl
sub
enter
xor
je
mov
imul
jmp
movsb
into
push
cld
add
xor
loop
cmp
adc
inc
arpl
sbb
shld
push
in
xchg
movsb
sub
push
push
push
pop
sbb
lret
bound
jb
mov
shl
dec
pusha
loope
shrl
inc
xor
xor
int
jp
sub
xlat
inc
in
insl
loop
orl
dec
fwait
fwait
xchg
addr16
nop
subl
jecxz
adc
and
inc
cmp
out
shrb
lods
fs
js
push
int3
and
icebp
notb
popf
jno
xchg
or
cmpsb
icebp
sbb
pop
ds
adc
mov
or
and
push
mov
lret
sarb
sub
mov
jecxz
and
adc
adc
stos
rcrb
les
push
lods
out
push
rcl
sub
pop
fwait
movb
and
cmp
cmp
sbb
mov
mov
mov
addb
push
popf
loop
inc
or
and
jge
mov
add
sub
inc
push
jae
out
or
aad
repnz
push
and
sub
xchg
ret
rol
mov
call
dec
aam
xchg
cs
pushf
insb
sub
sarb
out
fwait
aad
div
inc
sub
and
lahf
das
cmp
int3
sarb
mov
pop
cltd
mov
adc
test
mov
mov
push
shlb
push
lock
call
int3
enter
mov
aaa
in
or
sbb
mov
in
stos
rorb
je
idivl
dec
adc
mov
lea
stc
pop
push
jae
ds
ja
shll
push
pop
fwait
inc
insb
mov
outsl
call
inc
mov
stos
test
jb
movsb
push
dec
leave
cmpsl
and
and
xor
jb
or
in
sti
push
xchg
je
clc
jae
aaa
jns
cmp
push
adc
and
ret
ret
mov
inc
int
mov
pop
in
jnp
je
into
jmp
pop
psllq
and
push
enter
leave
ret
jecxz
jmp
in
ljmp
prefetch
or
je
cmp
push
add
xchg
push
jno
mov
dec
add
add
js
cmp
cwtl
sar
sbb
cmp
cli
jae
cmp
sarl
and
mov
jmp
cwtl
pop
cltd
jle
icebp
adc
jp
js
mov
fists
xchg
cmp
in
fptan
xchg
es
push
lret
fwait
fs
cs
lret
addr16
cmp
and
sub
clc
shll
inc
pop
inc
push
mov
pop
in
cmp
call
sbb
mov
lcall
xchg
jns
cmp
pop
xorl
hlt
iret
aad
scas
and
shr
cltd
adc
mov
and
lea
xchg
imul
adc
adc
inc
ds
loop
mov
mov
jo
mov
out
cli
jle
lods
mov
stc
push
add
popf
fcmovnb
pop
dec
xor
sbb
pop
je
and
xlat
imul
stos
lock
stos
cmp
cli
imul
out
jno
aas
shlb
popf
jl
gs
rcll
push
call
ret
fsubl
lods
out
dec
pop
mov
adc
mov
cmc
movsb
add
add
xor
pop
dec
out
mov
insb
lods
or
and
xor
xor
sbb
fmull
dec
xor
inc
incl
lret
mov
cli
mov
pop
jb
lea
jbe
shrb
loope
cs
mov
cmp
and
pop
xchg
add
sbb
push
inc
cld
repz
cmc
cmp
pushf
out
sbb
pop
xchg
movsb
fwait
les
sti
jecxz
jecxz
adcl
outsb
xor
sub
jecxz
lret
xchg
pop
xchg
insl
popa
sub
xchg
or
dec
add
movsl
dec
pop
inc
aam
pop
mov
push
mov
push
adc
cmpb
insb
mov
and
out
negb
adcb
jb
loope
push
lcall
fwait
jbe
xlat
test
cwtl
xor
shl
dec
cmp
push
jp
hlt
mov
cwtl
xchg
push
bound
pop
push
jp
cmp
mov
inc
mov
sub
push
mov
fs
mov
cltd
dec
sbb
fidivl
pushf
scas
fs
mov
sbbb
cmp
mov
in
fadd
jp
and
adc
sub
subb
jecxz
mov
clc
cmp
popa
mov
fdivl
ja
sti
sub
sbb
push
or
sub
push
add
adcl
xor
dec
push
cld
insb
xor
cmp
add
mov
mov
push
lret
pusha
cwtl
xchg
insl
add
mov
das
xor
inc
jae
sbb
push
push
pop
fidivrl
scas
adc
outsl
mov
push
mov
xchg
in
jae
lret
mov
cmp
xor
push
pop
aas
mov
add
or
out
xchg
popa
sub
mov
pop
mov
push
pop
fsts
push
push
lds
pop
sbb
jbe
mov
and
lret
dec
popf
push
jg
mov
mov
mov
mov
rolb
mov
pop
pop
adc
lret
xor
pop
mov
jg
dec
incl
xlat
dec
mov
movsl
sbb
daa
pusha
ror
adc
xchg
lods
and
out
inc
sbb
add
out
pop
pop
shll
daa
in
push
call
xlat
stos
mov
int3
sbbb
inc
rclb
add
mov
sbb
aam
mov
pop
lds
inc
push
adc
pop
xchg
cmp
and
xchg
mov
jp
enter
dec
mov
push
pop
xlat
ja
xor
xor
fdivrl
out
data16
int3
xor
jnp
rol
cmpsb
in
sub
add
xlat
data16
jp
jns
daa
and
cwtl
xor
insb
push
jmp
jmp
jg
cmpsb
jmp
daa
imul
jle
mov
lret
and
adc
jne
pop
stos
dec
push
and
or
pop
scas
inc
fcomp
xchg
dec
ja
lods
notb
and
add
or
cmpsb
xchg
rcll
lahf
mov
push
in
imul
aas
ss
stos
xor
push
fnstcw
mov
fs
repz
and
js
and
clc
sarb
cli
popf
adc
rcll
enter
repnz
cld
inc
gs
out
sbb
addr16
test
push
fdivs
pop
sti
add
mov
pushf
test
das
movsb
xor
rep
mov
dec
xor
int3
or
mov
or
add
xchg
adc
out
aas
adc
dec
and
pop
cltd
aaa
fdivr
xor
rcl
and
rcrl
jno
je
dec
sbb
adc
fcmove
cmpsb
push
sbb
push
pop
aas
sbb
push
mov
hlt
mov
outsb
js
jmp
xchg
aas
mov
pop
adc
cmp
cmpsl
jbe
xchg
and
push
inc
popa
fstpt
shll
fbld
cmp
push
or
sbb
test
ret
add
mov
loope
pop
adc
outsl
test
mov
cmp
fcom
inc
clts
sbb
mov
sahf
pop
js
repz
ret
lea
cmp
add
sahf
mov
in
ds
cmp
and
scas
mulb
hlt
insb
xchg
scas
call
dec
imul
mov
pop
hlt
dec
lret
sub
and
cmp
hlt
jne
xor
add
jnp
mov
sub
mov
pop
pushw
jbe
mov
jp
adc
cmp
mov
mov
push
xor
jb
sub
leave
and
fwait
cmp
mov
push
push
jle
pop
mov
jmp
stos
mov
out
fmull
test
push
andb
mov
or
dec
adc
mov
testb
jae
in
mov
insb
jecxz
popa
jl
rolb
add
mov
js
push
jne
pop
dec
or
pop
gs
add
cmpsb
dec
xchg
dec
movsb
fcmovu
mov
lods
pop
fcompl
js
loope
lea
cmp
mov
call
je
imul
mov
add
jmp
xor
pop
xchg
push
mov
pop
repnz
pop
jne
add
sbb
dec
adc
dec
and
flds
mov
lods
sub
xor
leave
xchg
lret
gs
mov
pop
insl
mov
sti
adc
out
xor
fidivs
imul
imull
cltd
fnsave
mov
je
sbb
nop
adc
das
push
cs
mov
mov
sbb
das
and
or
nop
int
xchg
das
out
cmp
arpl
movsl
in
jb
mov
and
mov
inc
sahf
or
mov
pop
call
arpl
sbb
push
aam
cld
or
ret
add
negb
ret
mov
jecxz
js
xor
nop
mov
repz
add
pushf
test
pop
mov
adc
sbb
or
in
fs
mov
and
xor
xchg
std
jl
add
sti
out
lods
bound
fwait
movsl
add
pop
aam
mov
xor
add
std
sarb
mov
and
add
fstpt
ljmp
outsb
test
or
lret
repnz
stc
aam
sbb
cmp
vorps
mov
dec
sub
mov
loopne
jecxz
std
rorl
fldt
aad
rolb
les
mov
push
jne
pop
mov
dec
call
jno
pop
sub
xor
jno
add
mov
mov
xlat
pop
jmp
dec
inc
in
loop
cmp
scas
mov
xchg
jmp
rcrb
fs
xchg
mov
test
ljmp
jbe
loope
popf
sarl
out
fstps
cmp
sub
mov
xchg
or
clc
sub
or
and
add
cmc
in
dec
test
dec
and
std
cmp
repz
test
fisttpl
fidivs
pop
xchg
int3
jbe
pop
or
mov
sub
arpl
xchg
inc
int3
sbb
pop
shld
das
sbb
lret
out
nop
or
test
pop
sbb
jp
outsb
cmp
fdivl
test
dec
sub
pop
dec
sbb
int
int3
sbb
into
sarl
ret
mov
aaa
in
mov
pop
cmp
notl
jno
adc
daa
jmp
inc
outsb
fists
inc
mov
mov
cmp
mov
lods
and
push
xor
pop
cld
push
out
xor
movsb
and
push
cltd
sub
xchg
out
mov
lret
dec
gs
mov
aas
mov
call
jns
sbb
hlt
adc
and
cmp
lea
mov
push
les
mov
push
rorl
in
jp
jae
adc
loop
clc
and
xchg
push
push
mov
and
adc
dec
sub
jne
pop
int
test
fstp
shll
jg
dec
push
lret
fcmovb
sbb
mov
rolb
and
push
call
dec
jae
push
inc
fs
sub
cltd
xchg
xchg
sbb
dec
xor
fldl
xor
pop
mov
mov
jnp
cmp
mov
fldt
xchg
aam
sarl
adc
frstor
imul
push
popf
enter
loop
pop
xor
inc
je
cmpsb
cld
scas
push
jle
hlt
lcall
ja
mov
lods
sti
sti
sub
push
fnstcw
fldpi
jmp
xor
iret
mov
mov
data16
sub
leave
mov
dec
pop
inc
mov
jecxz
or
and
pop
lods
insl
shr
dec
roll
mov
or
aas
shl
andl
es
sub
mov
popf
lret
push
xchg
mov
stc
in
imul
rcr
icebp
jmp
dec
cli
sub
sbb
lea
movsl
and
xchg
mov
cmpsb
movsbl
inc
push
ror
imul
aam
mov
or
subl
inc
jno
test
popa
sbb
insl
dec
xor
xor
iret
push
stc
add
rcr
cs
data16
ret
icebp
out
add
and
push
add
aam
leave
mov
mov
adc
push
lret
pop
sub
jne
push
cmp
pop
xchg
jno
cmp
adc
or
fdivr
adc
push
sub
movlhps
iret
sarb
and
sahf
pop
xchg
loop
cmp
jecxz
scas
or
jnp
hlt
sbb
icebp
or
lds
inc
push
mov
shll
stc
ss
add
add
repnz
lea
xor
into
int3
ret
and
and
sub
or
adc
mov
ficompl
loop
jo
xchg
cwtl
xor
icebp
jmp
ret
adc
jl
jl
pushl
dec
or
out
int
inc
out
scas
mov
test
mov
sarb
popa
loopne
sbb
rcl
adc
cmpsb
lahf
xchg
adc
lods
mov
cmpsl
dec
push
ret
xchg
adc
cmp
dec
js
shlb
sub
hlt
jne
sbb
nop
mov
push
sti
pop
lahf
sub
rcrb
cmp
mov
push
nop
fs
inc
adc
es
stos
adc
jle
hlt
addb
hlt
dec
push
ret
ret
xor
std
test
lock
lret
lea
stc
scas
loop
mov
xchg
ret
lret
in
xchg
and
jnp
jnp
lds
cmp
or
lock
ret
gs
roll
lcall
mov
or
jnp
cmpsl
adc
push
das
addl
call
loopne
ret
xorl
enter
jmp
push
adc
push
mov
cwtl
pop
jnp
mov
insl
pop
out
insl
adc
fcoml
aam
pop
sbb
movsl
inc
sti
popf
fwait
jp
xor
cmp
outsl
and
inc
and
lret
lahf
adc
orl
jg
sahf
lods
lea
dec
addr16
lock
loopne
cwtl
jae
sub
jnp
or
data16
mov
mov
loop
shlb
loopne
push
hlt
lock
mov
and
mov
sub
shll
and
dec
pop
fisttpll
lcall
mov
pop
lahf
stos
xchg
jle
shrb
mov
xchg
shrl
pop
mov
cltd
scas
orb
daa
mov
roll
stos
or
jmp
dec
cmc
cmp
cmpsl
adc
les
and
xor
or
pop
sub
dec
insl
or
aas
je
pop
outsb
loopne
stos
push
push
lods
or
ret
lea
leave
add
dec
aaa
mov
and
pushf
loop
gs
in
sub
scas
jbe
in
adc
es
mov
lods
mov
loopne
and
cs
imul
mov
pushf
dec
or
push
pushf
inc
pop
sti
dec
movsl
leave
scas
or
shlb
les
and
out
cmc
pop
pop
inc
test
test
insl
mov
jp
or
sub
and
pop
in
ljmp
add
pop
outsb
sub
inc
xor
dec
add
push
cmpb
push
and
ljmp
mov
enter
cmpsb
mov
fs
jl
dec
mov
ljmp
jo
into
push
fisubl
in
pop
and
adc
aaa
je
fimull
lret
cmpsb
jo
dec
pop
mov
shll
mov
mov
adc
push
xor
cmp
adcb
xchg
in
or
lret
and
fs
mov
dec
sbb
lods
leave
xor
sbb
pop
mov
shlb
inc
daa
push
fistpll
je
aad
mov
insb
add
xchg
dec
cmp
xchg
push
fwait
loopne
xor
and
and
cld
inc
cltd
jge
inc
das
scas
insl
dec
mov
sbb
or
mov
jmp
int3
icebp
fs
add
in
add
rorb
mov
aad
mov
inc
sbb
lds
inc
jge
push
cmp
repnz
mov
sub
lea
scas
test
dec
lds
sti
cwtl
sub
mov
mov
mov
push
mov
paddusw
dec
and
mov
add
inc
and
addr16
or
cmp
mov
imul
push
and
loopw
nop
jnp
xchg
pushf
dec
jmp
adc
mov
popa
hlt
cltd
jmp
insb
xlat
cmp
xor
xchg
adcl
mov
scas
loope
in
fdivs
aam
mov
sbb
xlat
repz
sbb
mov
addr16
or
sbb
dec
fwait
adc
cmpsb
ja
push
icebp
aam
and
adc
fbld
ja
sub
std
mov
fldt
and
pop
ljmp
aas
out
xchg
outsb
adc
mov
sub
and
hlt
cmp
adc
not
cmpsl
jbe
mov
mov
sbb
imul
sub
mov
cltd
gs
inc
in
xchg
mov
subb
jb
xchg
das
or
push
push
sub
leave
ljmp
jae
add
orb
push
into
dec
loop
add
in
rdpmc
jns
push
out
add
fcomps
push
push
and
enter
mov
cpuid
sub
sub
add
mov
inc
xchg
lods
leave
loopne
out
stos
cwtl
sti
cmpsb
push
inc
shlb
mov
fiaddl
and
pop
push
xor
pop
rcrl
js
mov
test
mov
sub
xchg
test
loope
push
cmp
fnstenv
sub
sbb
xor
xchg
les
mov
mov
push
aad
pop
and
jbe
leave
std
push
mov
test
and
mov
cltd
clc
push
mov
dec
mov
sub
aad
xor
adc
cmp
nop
int
push
cld
or
test
arpl
stc
icebp
add
int
and
jo
fsubrl
push
cli
push
shll
jns
jnp
lcall
gs
sti
sub
jl
jp
lods
sub
jns
and
adc
or
mov
test
orb
cld
mov
repnz
mov
ljmp
dec
adc
ss
andb
pop
stc
pop
scas
out
mov
gs
not
mov
in
int
mov
out
pop
test
push
mov
sahf
es
mov
xchg
iret
rcrl
je
sti
sti
pop
lods
inc
sub
sbb
pop
mov
mov
jnp
pop
aas
int3
and
pop
aas
popf
sub
mov
mov
sbb
lret
outsb
add
mov
cli
dec
bound
pusha
jns
loop
pop
pop
mov
lds
or
dec
mov
inc
aad
adc
out
stc
sbb
pop
orl
dec
imul
push
inc
lock
int
pop
add
out
cltd
call
shr
pop
and
lea
fcmovu
aas
push
sub
jb
xor
or
pusha
imul
dec
mov
shrb
inc
jns
inc
jno
adc
push
dec
inc
cmpsl
call
inc
add
fldt
das
loop
pop
jge
das
xchg
in
lret
add
inc
dec
dec
or
and
jle
mov
push
or
ret
push
cmp
aaa
sahf
or
xchg
push
je
stos
adc
jmp
xchg
dec
push
sbb
sbb
fisttps
jb
test
imul
cs
push
mov
adc
fbstp
push
and
shll
jecxz
pop
pusha
xor
cmc
aas
adc
sbb
pop
roll
pop
icebp
inc
push
hlt
mov
scas
adc
ds
xor
sahf
imul
mov
out
rolb
pop
scas
push
dec
push
popf
insl
sarb
pop
idivb
call
lret
jge
lcall
dec
and
jp
sbb
mov
cmpsb
pushf
call
jbe
int
in
jmp
xchg
stos
pop
js
xchg
repnz
mov
inc
push
mov
gs
test
and
subl
lea
aas
out
cmc
inc
push
outsb
fsub
imul
jmp
jne
push
inc
in
fs
mov
sbb
sahf
stos
mov
jne
xlat
sub
cmpl
mov
fsubrl
out
lret
push
mov
lea
push
movsl
push
es
cs
mov
and
xchg
lcall
cmp
sub
sub
clc
out
sahf
ret
push
xchg
add
xor
jne
cs
pop
jo
inc
imul
and
mov
jmp
hlt
add
rcr
sbb
push
push
pop
rorl
into
xchg
das
dec
test
shr
jg
mov
or
ret
repnz
push
outsb
inc
outsl
adc
add
dec
or
es
stos
mov
jae
pushf
jnp
pop
addr16
aam
jge
dec
mov
adc
ficoml
sub
cmp
xor
mov
iret
mov
das
dec
pop
add
mov
pop
add
lahf
mov
mov
cmp
cmpsb
sub
outsl
lahf
push
adc
push
int3
insl
out
adc
jmp
or
mov
repnz
leave
sbb
out
pop
insl
in
xchg
lret
jecxz
cltd
stos
pusha
out
icebp
lea
and
sbb
sbb
pop
and
xchg
xor
and
outsb
push
pop
xchg
or
cs
lret
push
rcrl
test
mov
ret
sub
and
mov
test
bound
add
jmp
test
daa
dec
xor
or
stos
enter
aam
cmpsb
push
xor
hlt
lea
jo
xchg
jae
xor
ret
push
mov
les
mov
dec
jle
xor
dec
mov
loopne
or
mov
inc
jns
pop
insb
mov
arpl
xor
xor
mov
popa
xor
mov
or
mov
notl
leave
cmc
ror
pop
shr
outsb
loop
push
in
shl
in
or
cld
cmp
popf
int3
jg
cmp
aas
fbld
xor
add
dec
mov
or
sbb
mov
add
pop
xor
je
mov
jp
add
push
mov
dec
into
inc
outsl
imul
jp
sub
push
xchg
out
sbbb
arpl
ret
adcb
cs
js
mov
dec
xor
inc
xchg
jp
xor
push
cmp
stc
int
dec
and
dec
mov
push
sahf
aaa
pop
mov
mov
mov
ljmp
xchg
lahf
inc
cltd
nop
mov
pop
lock
aam
stc
mov
add
push
inc
int3
inc
sti
mov
shll
dec
clc
push
aad
sahf
pop
add
in
in
dec
lcall
mov
pop
xchg
add
and
xor
imul
sub
movsb
pop
pop
int
aad
shll
enter
xor
test
scas
pushf
lahf
sbb
lods
xor
sub
je
insl
dec
jg
shrl
sub
mov
push
inc
cltd
out
movsl
sub
imul
popf
jmp
jl
or
cmpb
dec
js
movsl
add
sbb
std
inc
mov
pop
cs
inc
leave
dec
or
in
push
repnz
sbb
mov
hlt
sbb
leave
out
insl
adc
fwait
pop
movsb
push
jnp
fadds
add
rclb
add
dec
ja
fxtract
pop
aas
leave
test
ljmp
mov
clc
dec
in
lahf
jo
aas
fwait
test
in
mov
adc
fwait
sub
cmpl
out
sub
shrb
mov
sbb
pushf
clc
or
jp
aad
jecxz
add
xchg
cmp
sbb
sub
jno
sbb
sub
sahf
dec
sbb
addr16
test
divl
adc
mov
ss
adc
add
scas
das
lret
aad
jle
jne
shr
rcr
mov
xchg
mov
sbb
jno
pand
mov
and
xorps
aas
dec
sub
aas
outsl
sbb
mull
cli
repnz
jp
mov
sub
pop
push
jns
xchg
fsts
mov
loop
push
outsb
imul
out
mov
mov
xor
lret
jb
loopne
je
and
mov
dec
int
mov
xchg
xchg
lds
shll
adc
or
movsb
push
dec
sbb
lock
nop
rorb
push
mov
sbb
leave
inc
out
outsb
addr16
mov
and
add
hlt
lret
mov
out
aas
fxch
flds
les
aaa
lods
fwait
sti
mul
adc
dec
jmp
fbld
and
sbb
cli
lock
js
aas
pop
les
test
outsl
inc
pop
mov
in
insb
mov
sti
mov
loop
pop
jbe
ficoms
aad
mov
xchg
jmp
mov
daa
testl
lods
adc
loop
scas
adc
js
rolb
in
insl
lahf
test
pop
xor
dec
xor
cltd
or
xor
rcrl
add
out
pop
roll
cmp
sub
mov
sub
sbb
sbb
xchg
sbb
inc
sti
rclb
cmp
fildll
mov
jb
test
das
cli
mov
xchg
cmpsl
sub
fucomi
jle
fwait
mov
mov
xlat
scas
imul
into
test
xlat
add
jns
sbb
int
test
xor
int
jb
je
repnz
mov
outsb
and
in
ss
cmc
int3
mov
fs
add
nop
dec
test
jp
and
xchg
in
test
adc
sbb
and
dec
sub
sub
dec
imull
jno
xchg
and
ljmp
or
sti
mov
mov
rorl
enter
out
lea
shlb
jns
or
mov
pop
sub
jle
cmp
push
leave
sbb
and
mov
push
inc
or
outsb
aad
scas
mov
jmp
jo
adc
jg
imul
and
push
sti
movsl
lahf
push
insl
mov
cmp
ss
in
mov
roll
pop
xchg
shll
movsb
sbb
xchg
xor
stos
sub
lods
pop
lret
adc
mov
aaa
movsl
stc
push
push
pop
cmp
ja
cmp
js
shrb
jg
mov
addr16
test
ja
clc
adc
in
ret
icebp
cmp
and
mov
mov
and
adc
loopne
jb
mov
cmp
aad
sub
mov
xor
dec
and
iret
fildll
mov
jb
fs
jno
neg
test
pop
mov
test
aas
and
push
mov
test
fld
and
sbb
xchg
mov
nop
mov
cmp
jnp
lret
gs
and
stos
mov
out
ss
testl
xor
mov
lret
dec
adc
aaa
cmp
and
std
lcall
movsb
aaa
ljmp
jg
popa
push
outsl
inc
jo
out
popa
or
fcoms
lea
jns
jmp
mov
push
cmpsb
mov
pop
and
ret
mov
add
pop
outsb
test
subps
orb
add
dec
out
int
lea
mov
ret
fisubrs
ficompl
iret
stos
fsubs
in
xchg
pop
and
push
nop
push
dec
ljmp
cli
inc
popfw
jb
int3
lods
xchg
fsub
lahf
icebp
xchg
jl
jecxz
cmp
hlt
in
mov
les
sahf
mov
mov
ret
out
daa
mov
cmp
cld
aaa
in
pop
arpl
mov
sbb
mov
sbb
addr16
stc
pop
inc
out
adc
stos
push
pop
divl
dec
push
mov
mov
cmp
xchg
inc
inc
shl
mov
and
call
daa
add
pop
push
stos
pop
imul
xor
pop
adc
test
mov
adc
jge
mov
adcl
out
adc
mov
cld
xor
js
cmc
sahf
cltd
pop
mov
stos
push
jmp
out
xchg
dec
xchg
in
stc
push
pop
dec
popa
es
arpl
roll
push
mov
fadd
add
jp
sti
sub
mov
fs
addr16
sti
sub
push
ret
loopne
mov
adc
jnp
int
cmpsl
push
xor
out
adc
cmp
pop
cmp
jns
xor
jae
rcll
xchg
or
pop
pop
loop
pop
push
mov
ss
sbb
into
fcomps
mov
fidivrl
fdivl
push
insl
mov
adc
fcmovu
mov
mov
and
adc
icebp
fcoms
mov
clc
jno
push
in
mov
icebp
xchg
jge
jnp
divb
jg
pop
pop
sub
lea
bound
sbb
jae
jge
inc
lahf
push
jns
call
jge
fisubrs
clc
adc
jmp
in
xchg
scas
addr16
pop
subb
lcall
mov
gs
mov
xor
inc
jbe
xor
out
mov
lret
mov
mov
dec
inc
outsb
sbb
clc
call
scas
cmpl
cmp
add
lods
cmc
mov
fdivl
mov
imul
sub
push
lods
jbe
dec
lods
add
enter
call
inc
jnp
xor
dec
sbb
and
push
pop
adc
mov
jl
pop
jne
mov
sbb
push
push
mov
dec
pop
push
jns
into
mov
pop
sub
lock
xchg
bound
imul
and
dec
push
sub
jg
mov
mov
xchg
cmp
shr
mov
adc
push
adc
inc
movsl
cmp
inc
pusha
enter
rcrl
jns
jmp
mov
add
cltd
and
lret
rep
and
loop
sbb
and
out
pmulhuw
jmp
ret
cmpsb
aad
arpl
scas
cmp
mov
mov
cmp
pop
and
int
adc
sub
mov
cmp
cmp
hlt
xorb
cli
sub
adc
rorl
cmp
scas
push
push
gs
xorb
xlat
aas
push
or
lods
jecxz
in
push
pop
pop
sarb
shlb
arpl
inc
pop
mov
push
fimull
ret
dec
jns
adc
cwtl
push
ljmp
mov
adc
andb
cmpsb
jbe
ljmp
mov
or
gs
mov
dec
push
outsb
test
sub
push
cmp
je
hlt
fwait
repz
push
cmp
rcrb
in
rcr
push
lahf
or
repz
and
cvtps2pi
and
pop
push
les
add
inc
lea
fcoms
in
and
lret
aas
das
popf
jbe
jg
xlat
sbb
jmp
popf
dec
xlat
jl
sub
loop
xchg
mov
insl
inc
adc
pop
bound
fisubl
rcll
cmp
jge
aaa
or
aas
jg
xchg
inc
jae
sbb
cli
push
inc
fiaddl
or
gs
mov
mov
imul
mov
stos
xchg
daa
lock
test
sbb
ret
test
sbb
jae
sahf
nop
push
cmc
mov
dec
rcll
jno
pop
pushf
mull
xor
out
cmp
add
fcompl
push
dec
adc
je
sub
lret
sbb
mov
push
mov
fs
mov
cli
out
les
inc
bound
lods
call
pop
enter
ret
cmpsl
rolb
pop
pop
xor
arpl
mov
and
adc
jg
test
in
fucom
push
cwtl
xorl
and
sbb
lds
inc
test
fdivl
movsl
mov
ret
dec
push
push
lods
popf
cmp
int
movsl
add
rcr
adc
cltd
jno
or
mov
ja
and
cltd
and
cmpsl
mov
shll
mov
scas
scas
mov
jl
mov
test
scas
pop
pusha
dec
sbb
sbb
sub
xchg
xchg
mov
cmp
jmp
aaa
xchg
push
mov
sahf
jmp
push
stc
daa
cwtl
adcb
enter
movsb
mov
pop
clc
test
inc
test
dec
add
sub
loope
cs
outsl
push
popf
cmp
imull
call
mov
aad
sub
sbb
mov
mov
lret
fbld
test
shl
xorl
rorb
add
inc
fmull
jge
mov
testl
xchg
test
sbb
test
xchg
dec
shll
outsl
push
xor
lea
outsl
nop
enter
loope
jg
push
cmp
add
nop
insb
sarb
xchg
stc
clc
movsb
js
pop
add
lea
xlat
lock
jbe
adc
fistpll
pop
test
mov
or
push
xchg
mov
inc
lock
shll
push
pop
aad
or
mov
lds
dec
pop
jge
add
mov
fs
cltd
xchg
mov
push
cmp
jmp
sbb
inc
lret
xchg
rorl
inc
bnd
add
es
push
cmpsb
cmp
push
add
xorb
and
push
stos
mov
cmp
aas
sbb
push
mov
or
inc
nop
adc
imul
fwait
or
clc
add
sti
mov
lahf
inc
add
and
inc
push
int3
out
sub
sub
mov
or
std
testb
mov
adc
dec
adc
xor
adc
popa
enter
cltd
add
or
push
rorl
lods
inc
push
mov
adc
adc
aad
mov
sbb
adc
and
jae
cwtl
push
scas
in
xor
sub
adc
cmp
loopne
cld
or
jo
jno
cmpsb
push
sarl
mov
out
dec
lds
cmp
sbb
fisubrl
push
jbe
ds
nop
jle
mov
mov
test
lock
dec
shl
je
lea
sub
fidivrl
paddw
negb
cmp
mov
jo
dec
mov
scas
cmp
adc
call
sahf
push
repnz
arpl
sarl
in
xor
adcb
ljmp
fbstp
xchg
xorb
pop
xor
adc
sbb
cs
and
xor
add
test
lods
xor
add
add
popf
jbe
jbe
push
mov
pusha
cmpsb
adc
cmp
pop
fwait
push
cmp
pop
push
mov
lods
push
bound
inc
push
cmp
cmp
sti
nop
pop
xchg
mov
cmp
aad
sub
arpl
sbb
pop
fs
xchg
dec
push
xor
xchg
ret
cwtd
ficompl
mov
pop
push
mov
std
jge
fldlg2
pop
outsb
nop
addr16
jae
aam
sahf
lret
movsl
xchg
lea
xchg
dec
loop
add
fwait
in
fisubrs
jbe
cli
pop
ss
adc
outsb
movsl
lret
jecxz
xor
mov
push
mov
cmc
int3
fwait
mov
pop
or
jl
mov
sbb
and
inc
stos
inc
enter
and
aad
clc
int3
mov
jno,pt
int
imul
icebp
enter
lods
sar
sbb
and
xor
xorl
fucomip
adc
es
inc
ja
pop
dec
sbb
adc
loopne
xor
add
loope
sub
sbb
scas
fisubrl
xchg
les
orb
pop
or
sbb
idiv
loop
jnp
jae
insb
inc
pusha
push
cmc
pusha
dec
test
pop
gs
arpl
adc
push
loope
int3
jmp
cmp
xchg
inc
mov
in
inc
and
xchg
push
pop
pusha
inc
jnp
and
and
stos
or
dec
xor
rcrb
jne
jp
cmovbe
imull
mov
xchg
movsl
xchg
je
notb
repnz
or
inc
mov
mov
add
push
push
pop
sub
popf
sarb
dec
insl
popa
dec
dec
mulb
scas
cmp
cltd
mov
out
movsl
or
pop
stos
js,pn
ret
cli
int
mov
test
push
lods
xor
fdivrl
aaa
fistl
cmp
push
pop
jb
movsb
or
enter
cmp
sub
mov
mov
in
in
loope
pop
sub
test
push
jno
and
jb
das
ja
adc
cmc
push
orl
mov
lahf
push
addr16
ljmp
adc
popa
cs
aam
push
sub
cltd
sbbl
xor
aam
xchg
add
mov
mov
cmp
aas
jne
or
scas
dec
push
cmp
jo
fcomps
cmpsl
sbb
shlb
data16
jnp
pop
xor
sarl
les
sub
es
xor
mov
mov
sub
pop
xchg
inc
mov
add
xor
loop
mov
das
popa
push
xchg
out
icebp
push
mov
test
add
lods
xchg
pop
fsubl
sbb
divl
xchg
inc
popf
mov
jecxz
jne
and
out
push
push
out
aaa
mov
daa
outsl
pop
jg
out
add
cmpsl
push
stos
jge
out
jnp
jl
mov
enter
or
xlat
xchg
add
adc
dec
dec
cld
push
out
pop
jg
arpl
add
xor
xchg
inc
add
xchg
inc
shlb
inc
lds
mov
push
test
xchg
xor
and
fnstenv
jg
inc
das
mov
mov
adc
pop
add
pop
push
and
sbbl
push
xor
xchg
clc
aad
sub
sub
push
sub
mov
mov
inc
cmp
or
jb
mov
scas
mov
sarl
sarb
ljmp
or
xchg
testb
sub
in
cmp
jmp
loope
iret
adc
pop
push
hlt
js
fwait
pop
pop
loopne
fidivl
insb
add
mov
mov
sarl
mov
ficompl
lods
aad
sahf
xchg
xor
call
in
cmp
jle
popf
imul
ficompl
sub
and
xchg
mov
insb
movsl
sub
fldl
loopne
test
imul
xchg
rclb
mov
in
add
mull
or
scas
fs
adc
leave
aam
xchg
xchg
add
adc
scas
lret
sbb
mov
xor
pop
sbb
repnz
push
js
movsl
sub
pop
push
aad
jb
or
adc
loop
sbb
add
sub
mov
push
push
imul
jbe
sahf
scas
push
mov
add
jae
xchg
push
inc
push
jbe
in
mov
les
mov
lcall
xchg
or
mov
mov
mov
jns
and
or
pop
cmpsl
xor
sub
sub
test
fistps
in
notl
push
xor
movsl
push
push
mov
insb
lock
stc
jge
dec
aas
push
push
mov
jbe
sub
sub
mov
idiv
jg
lahf
dec
inc
in
dec
fwait
sti
cwtl
dec
cltd
fnsave
scas
lods
jp
mov
lods
in
xchg
push
push
push
inc
lret
fisubrl
push
xchg
inc
aam
xchg
mov
add
mov
jne
icebp
add
ljmp
gs
rcll
lret
dec
lds
mov
jb
and
push
pop
mov
mov
movb
cltd
mov
mov
sbb
add
push
lahf
fimull
lea
sub
add
popf
aas
lret
les
and
mov
lret
xor
pop
pusha
push
mov
jp
cmp
lret
jnp
fdivrl
lret
push
cmp
clc
and
xchg
xorl
mov
cmpsl
cwtl
cld
ja
stc
and
pop
test
mov
inc
pop
adc
in
fbstp
pushf
xor
xor
cmp
jb
mov
push
and
shll
and
fldenv
mov
rolb
mov
imul
faddl
scas
cmc
ss
sti
xor
leave
and
cmp
gs
test
dec
inc
sbb
test
sub
dec
icebp
mov
add
and
or
js
test
int
and
je
sub
add
lods
pop
not
pop
inc
in
ret
ja
jle
les
lahf
sahf
sahf
movl
stos
out
dec
in
sbb
adc
pop
mov
sub
lods
fadds
lock
xorb
mov
in
aaa
jb
cmp
push
sub
push
imul
into
push
out
push
cmp
mov
adc
test
not
sarb
and
xor
jmp
xchg
and
push
or
add
xchg
xchg
inc
nop
into
mov
ret
mov
aam
cmp
fimull
rol
fsubs
pushf
xchg
es
jo
mov
xchg
xchg
pop
fs
scas
push
and
stos
add
sub
sbb
pop
add
inc
adc
insl
sbbl
push
mov
jo
jns
jle
std
popf
out
and
inc
iret
lods
mov
std
stc
jns
lret
dec
ds
cli
nop
and
push
ret
sub
xchg
ret
mov
fdivrs
insl
xchg
fmull
cwtl
jno
jo
cmp
sbb
xchg
push
xor
xor
in
cwtl
sbb
jae
sahf
ds
and
dec
sahf
mov
js
mov
push
xor
push
call
push
inc
mov
sub
stos
in
les
or
loop
xor
jmp
push
into
imul
sub
vmread
or
je
mov
gs
xchg
pushl
mov
jno
sbb
mov
mov
cmp
rcll
int
addr16
push
jmp
mov
insb
jnp
pop
iret
das
dec
jno
sbb
xor
stc
fnstcw
pop
mov
loope
xchg
inc
fs
xchg
inc
ret
imul
sub
or
mov
lea
cmp
sub
push
mov
lret
ret
cmpb
cmpsb
ja
in
pop
mov
ds
mov
push
push
stc
cs
cmpb
lcall
daa
iret
inc
jg
es
add
mov
cli
add
iret
jge
rcr
pop
pusha
aad
cltd
cmp
fistpll
and
mov
jg
sbb
mov
loopne
pop
sub
scas
or
lahf
sub
aas
adc
lahf
int
sbb
jl
divb
addr16
jbe
lahf
xchg
lret
pop
lahf
add
movsb
cmpsl
mov
int
orl
mov
push
jae
mov
inc
loopne
xor
xchg
mov
loope
test
call
mov
push
lret
in
aas
sbb
adc
cmpsb
in
mull
sarl
pop
imul
in
daa
pop
pop
aaa
iret
pop
rclb
lock
ss
sub
xchg
repnz
lcall
cmp
and
jge
fstps
stc
jbe
jo
adc
push
in
jecxz
jp
gs
mov
ss
mov
push
cmpsl
sbb
pop
ja
bound
cmp
ljmp
mov
mov
push
push
mov
mov
cltd
dec
int
insl
sti
push
lcall
inc
xchg
in
mov
imul
sbb
mov
daa
xchg
push
shrb
test
mov
jl
insb
repnz
jae
in
push
and
lret
js
vpmaxub
sub
pop
add
jmp
imul
push
test
lcall
icebp
xchg
iret
sbb
add
xor
mov
inc
jns
cmc
and
loope
add
mulb
fwait
xchg
movsb
push
outsl
xchg
les
sti
push
mov
repnz
pop
push
adc
mov
in
sub
jns
adc
shrl
push
insl
ss
icebp
fstps
or
sub
daa
int3
mov
mov
mov
movsb
fistps
pop
mov
xchg
adc
mov
pop
ljmp
es
fnstcw
push
xor
outsl
mov
push
iret
int3
push
add
hlt
cmpsl
mov
pop
repz
shll
js
hlt
icebp
mov
lret
and
outsl
aam
mov
push
in
push
shr
inc
popf
pop
cmp
add
stc
and
out
fisttpl
dec
or
sti
push
xchg
push
leave
popf
push
fildll
inc
xor
sbb
mov
inc
sbb
push
push
cltd
and
jbe
mov
dec
mov
test
dec
iret
dec
sbb
cmp
jecxz
cmpsb
sub
adc
sti
fs
outsl
mov
call
mov
push
scas
lahf
je
push
ret
inc
jns
dec
in
imul
lods
jle
insb
fists
leave
leave
test
shrb
imul
ljmp
add
aaa
jecxz
aas
mov
or
cmc
iret
lcall
sahf
fadd
and
add
sbb
lret
xor
test
test
mov
ret
in
test
inc
in
mov
ja
scas
aaa
inc
sub
pop
movb
cmpsl
dec
ljmp
jp
sub
add
mov
cmpb
and
adc
imul
dec
cmp
in
jo
icebp
xchg
sub
mov
sbb
lods
or
or
mov
cmpsb
out
mov
into
push
pop
mov
inc
orl
fwait
ja
mull
dec
cmpsl
aad
sbb
iret
ret
mov
clc
pusha
enter
and
inc
add
jae
aad
mov
sub
xlat
pusha
jmp
aaa
pop
jecxz
push
ror
nop
and
jbe
subl
lahf
push
pushf
js
arpl
dec
scas
sub
push
push
pop
xchg
pop
adc
mov
fcom
ret
jb
scas
push
test
scas
and
ljmp
daa
adc
push
popf
or
mov
andps
jo
stos
inc
xchg
fmuls
popl
sbb
out
imull
push
sarb
dec
test
push
dec
or
or
dec
mov
push
sub
cltd
in
cmp
adc
push
fs
push
mov
aaa
or
outsl
xlat
scas
lea
cmp
mov
dec
in
pushf
shrl
in
fildll
jns
push
je
out
aad
and
add
aas
icebp
in
shl
repnz
xchg
push
mov
mov
xchg
cmc
stos
xchg
ret
jnp
arpl
nop
mov
sti
jne
adc
lea
into
pop
cmpsl
and
sub
jo
jne
push
gs
cmpsl
xchg
faddl
push
jne
iret
imul
adc
xchg
adc
mov
or
xchg
je
mov
cwtl
rorl
cmc
inc
lret
fnstsw
hlt
sbb
cmp
mov
and
mov
fadds
cmp
popl
je
in
test
dec
pop
iret
sbb
add
arpl
icebp
pusha
mov
fistpll
sahf
adc
inc
jns
daa
mov
enter
pop
mov
jg
out
outsl
xor
je
mov
cmp
std
bound
push
mov
adc
mulps
movl
cmp
andl
adc
mov
xor
push
sub
hlt
inc
dec
mov
out
test
mov
adc
pxor
jp
sbbb
pop
sahf
xor
dec
in
std
xchg
jge
sub
incl
inc
ja
outsl
sbb
data16
decb
lcall
sub
loope
lea
and
in
fisttps
stos
jg
sbbb
andb
icebp
xchg
jecxz
cmp
sub
or
shrl
fs
aaa
jno
xor
xor
fwait
hlt
inc
bnd
insb
adc
sbb
shll
outsl
lcall
sarb
push
sbbl
enter
add
imul
dec
lods
add
jnp
int
int
ss
popa
rclb
mov
mov
sbb
push
and
inc
sbb
js
add
dec
xor
fsubp
sbb
aaa
adc
sub
inc
or
ljmp
loope
adc
xchg
in
sbb
data16
mov
and
add
jp
push
pop
repz
mov
fsubl
xchg
push
mov
in
fdivs
xchg
xchg
lret
movlhps
sbbb
cmc
and
jae
filds
xlat
pop
fst
ds
cmc
stos
clc
iret
roll
jae
enter
jecxz
dec
ljmp
jl
push
mov
ffreep
leave
mov
sbb
xchg
pop
ffree
adc
sarb
push
lods
adc
dec
scas
xlat
fistl
in
fcmovne
sub
push
cmpsl
or
insb
aas
xchg
fidivl
xchg
int
sbb
call
insb
iret
xlat
sbb
xchg
sahf
mov
mov
add
or
xchg
mov
fisttpl
pmaxub
or
mov
fadd
xchg
xor
shlb
inc
mov
xlat
xchg
or
test
or
int
inc
fiaddl
movsb
mov
add
pop
inc
cmp
xor
lock
insl
inc
cwtl
int3
aam
sub
clts
xor
add
add
ljmp
ret
jnp
add
cmp
and
insb
data16
arpl
lods
je
addr16
out
push
xchg
mov
mov
aad
xlat
jmp
jne
inc
mov
cmp
in
xchg
data16
cs
scas
pop
or
ds
sbb
jo
imul
push
orl
lods
in
mov
jno
push
xchg
pop
and
xor
cmp
mov
lret
lods
adc
icebp
leave
das
lods
imul
out
inc
stc
sbb
cmp
clc
rcll
out
iret
add
mov
movsl
add
ret
leave
pop
dec
frstor
flds
das
add
addl
xor
mov
inc
ds
pusha
sbb
cltd
aas
cld
sbb
jmp
sub
push
ss
mov
mov
cld
xor
scas
pop
pop
and
push
mov
inc
pop
ss
imul
add
push
lods
cld
cwtl
aad
dec
push
fldenv
mov
xor
fidivs
sub
or
insl
cmpsb
mov
call
add
mov
sahf
shlb
and
mov
sbb
test
stc
fisubl
aad
cmpsl
loope
lcall
push
pusha
fs
std
sti
dec
cmpsl
pop
outsl
ljmp
pusha
pop
leave
dec
stos
mov
pop
icebp
scas
pop
dec
and
jnp
cld
dec
adc
shl
paddusw
cmc
orl
lahf
mov
xor
call
pushf
scas
xchg
out
into
mov
pop
call
xchg
ja
jecxz
fdivs
cmpsl
lret
andl
jb
dec
into
pcmpeqb
push
dec
iret
movsl
xchg
mov
xor
int3
test
pop
hlt
aam
icebp
dec
jmp
aam
lods
inc
popfw
inc
dec
repnz
mov
imul
mov
out
adc
cmp
imul
arpl
divb
fwait
mov
icebp
mov
sahf
pop
or
xchg
sub
hlt
pop
clc
in
repnz
es
inc
inc
loop
and
xchg
adc
mov
jno
daa
push
loope
add
mov
adc
add
popf
and
pop
push
mov
fdivrl
js
push
loope
lds
xor
outsl
in
ret
ljmp
dec
les
in
iret
stc
mov
aad
insl
loop
pop
repz
xchg
call
movsl
hlt
xchg
decl
fabs
mov
ss
mov
pop
cmp
jmp
mov
addr16
movsl
cmp
fistps
sbb
sbbl
adc
adc
adc
lods
mov
add
fstl
jecxz
ret
xchg
notb
fsubl
mov
xor
sti
mov
ja
movsb
push
insl
leave
cmp
fsubs
pop
xlat
mov
es
push
and
lcall
inc
divl
je
les
jnp
xchg
repz
adc
push
stos
loope
sahf
std
lcall
mov
jne
and
cwtl
sbb
push
ret
or
push
jp
mov
sti
lods
in
jge
or
mov
mov
popf
nop
in
mov
imul
or
add
ss
and
adc
pop
adc
pushf
and
stos
xlat
sbb
in
test
mov
in
test
inc
test
aam
sub
icebp
out
sub
xor
jecxz
and
sub
pop
mov
xor
mov
dec
pop
pop
jmp
xor
cmp
orb
add
push
imul
cmp
inc
insl
sbb
and
and
cmp
stc
jb
rcr
cmc
mov
or
std
inc
imul
shrb
lret
mov
addr16
clc
push
xor
push
sahf
icebp
movsb
insb
add
adc
mov
fcoml
or
lock
sub
xchg
dec
test
sti
out
dec
shll
insb
ja
sub
push
iret
push
mov
fs
rcr
loop
xchg
adc
pop
out
push
cs
fxch
lcall
adcb
mov
daa
cld
repnz
xchg
add
lret
cmp
and
loope
push
adc
cmpsb
mov
xchg
push
jno
mov
adc
sbb
orb
pop
mov
sub
dec
dec
push
out
and
mov
mov
adc
pusha
aad
ja
jns
lods
popa
stos
cwtl
jo
xor
jbe
sub
repz
ret
lret
rclb
cmp
sub
hlt
outsb
sbb
pop
aaa
scas
shll
stc
es
dec
sbb
js
and
or
mov
add
jns
cmpsl
xchg
mov
mov
jno
dec
lock
mov
data16
pop
xor
call
cmp
hlt
lcall
sbb
xchg
ljmp
out
cli
and
cmp
enter
pop
jnp
aas
in
push
hlt
cmp
out
std
jmp
mov
pop
sub
mov
in
xchg
mov
int3
sbb
mov
adc
test
push
pop
dec
push
outsb
cmpsb
mov
setle
adc
sub
and
leave
pop
sahf
pop
dec
dec
cmp
hlt
xor
mov
pop
call
mov
push
dec
add
jmp
xchg
xor
mov
imul
pop
shlb
mov
jb
mov
movsb
push
mov
mov
int
and
jl
iret
cld
cmp
addr16
mov
inc
dec
int3
xlat
sbb
jle
push
pushf
lock
mov
cmp
subb
and
rcll
mov
xor
fdivl
mov
mov
adc
mov
or
bound
sbb
iret
sub
mov
imulb
cld
jbe
cmc
pop
out
popa
popa
lcall
push
popf
sub
cltd
int
or
add
ljmp
mov
mov
sub
and
lea
pop
push
push
imul
push
inc
out
cli
jne
sbb
hlt
lock
out
aad
ret
sti
push
sub
cli
and
xor
insb
rcrb
lea
cli
jbe
lahf
and
inc
mul
aam
hlt
jle
inc
mov
lret
jl
jo
cmp
out
mov
xchg
mov
mov
aam
fs
adc
stos
aas
cwtl
mov
jecxz
in
mov
out
add
mov
push
adc
divps
lds
cmp
ficomps
or
and
push
mov
ja
bound
adc
and
mov
sbb
insb
out
lea
ficomps
fsubrs
inc
popf
outsb
inc
mov
push
out
inc
xchg
test
daa
cmp
icebp
sti
pushw
jmp
pop
scas
in
imul
dec
stos
fstps
jp
repnz
inc
mov
dec
jb
ficoml
in
lds
and
in
mov
imul
enter
pop
hlt
insb
jecxz
push
in
cmpsb
mov
scas
test
cmpsl
fldcw
cltd
je
jl
jns
jmp
ds
cmp
repnz
leave
idivl
leave
xchg
push
rolb
test
inc
ljmp
inc
rcl
sbb
or
xchg
das
push
pop
aaa
popf
stc
cmp
mov
push
int3
jl
int
lock
gs
jecxz
and
aad
data16
sti
pusha
hlt
add
xlat
jge
push
loope
add
xchg
sbb
cmp
jne
mov
subb
lock
sub
cld
dec
into
loopne
inc
or
sub
cli
in
inc
xchg
xorl
sbb
bound
add
push
pop
adc
int
rorl
fists
jb
call
hlt
dec
cmc
imul
rolb
push
leave
xlat
mov
mov
shr
cmpsb
shl
es
or
push
jb
in
cmpsb
loope
cmp
mov
lods
mov
roll
cwtl
xchg
sub
fdivr
push
rclb
xor
cmpsb
fldl
cltd
pop
ss
xlat
das
sbb
push
jno
test
or
bound
ja
in
adc
fisubrs
inc
push
xor
add
imull
and
aad
clc
adc
gs
outsl
aas
sbbb
cs
iret
pusha
rcrb
testl
push
mov
pushf
cli
andb
sti
cmp
cmp
xor
add
pop
ds
sbb
lretw
fnstsw
subb
push
or
leave
ftst
test
mov
push
fistpll
push
xchg
adc
mov
loopne
cmp
fimull
sbb
push
imul
mov
cmpl
cwtl
or
lock
gs
cli
jmp
pop
jnp
shrl
cmp
aas
add
insl
sub
into
in
inc
sbb
pushf
sbb
fsubrs
adc
pop
push
mov
push
pop
xlat
call
rol
pop
sahf
add
repnz
pop
cmp
sub
mov
fs
andb
pop
or
and
jo
cmc
fwait
jne
ljmp
hlt
test
sbb
sbb
out
fnstenv
xor
xchg
and
push
xchg
pop
lods
or
mov
out
sub
jl
add
push
ret
pop
scas
inc
dec
pop
stos
inc
xchg
xor
push
das
fxam
test
adc
jle
jns
lea
push
in
cmp
dec
mov
add
xchg
repz
inc
fmuls
subl
mov
push
in
mov
dec
mov
movq
insl
lods
je
inc
popa
lods
lret
in
aas
movsl
push
mov
faddl
ret
fsts
mov
test
imul
jmp
pop
int
add
cmp
adc
push
es
dec
cmp
ljmp
xor
inc
mov
andl
sbb
sbb
daa
daa
jbe
push
clc
jmp
lods
sbb
sbb
push
xchg
cmp
sub
aas
fwait
mov
test
pusha
scas
push
mov
or
xchg
or
mov
andl
loope
adc
pop
mov
imul
stos
inc
add
and
xor
cld
cmp
int3
cmc
mull
cmp
nop
dec
in
or
mov
imul
jno
insl
inc
cs
cli
lcall
cmp
popf
mov
add
add
std
or
in
fnstenv
int
ret
adc
lock
std
addr16
jbe
pushf
xchg
push
outsl
mov
popfw
iret
aaa
pop
sub
in
mov
mov
cmp
scas
sbb
mov
pusha
pop
addr16
popf
xchg
insb
add
xchg
sbb
mov
je
lods
sahf
hlt
adc
ss
je
arpl
insb
lcall
pop
push
mov
test
xchg
stos
mov
inc
movsl
cmpb
push
and
add
sbb
sub
mov
jns
mov
ret
int3
pop
dec
mov
sbb
lods
xor
aam
lret
inc
add
push
ds
add
leave
popf
mov
xor
imul
jl
in
addr16
clc
aas
das
je
ror
and
jne
int
aad
and
and
pushf
mov
mov
lock
xchg
sbbl
std
xor
adc
or
incb
pop
fsubs
and
jae
jns
std
push
rorl
mov
shrl
fs
insb
ss
or
sub
sbb
jecxz
inc
dec
mov
int3
add
loopne
cmp
push
mov
jns
and
shl
out
adc
inc
mov
cmp
jecxz
push
dec
rcrl
lcall
xchg
rcrl
incl
xor
in
adc
insl
xchg
sub
lds
inc
add
mov
shll
mov
stc
shll
push
mov
sbbb
aas
push
fstps
xchg
sahf
int
mov
orb
popl
enter
das
jns
push
jmp
out
mov
xchg
dec
repnz
mov
ret
dec
mov
cmpsl
jge
and
je
cmp
mov
int
push
xchg
lahf
mov
xor
scas
sti
sub
cld
lods
inc
imul
pop
mov
cmpb
cmp
cmp
ss
aas
sbb
xchg
ljmp
sub
mov
in
mov
xlat
xchg
cltd
imul
mov
negl
jns
aad
orb
adc
sub
fisttpl
add
lret
jo
push
adc
and
imul
int
adcb
cmp
gs
dec
ret
fs
filds
mov
mov
repnz
lods
bound
mov
jnp
mov
inc
adc
scas
xchg
mov
inc
push
imul
ret
dec
sar
fs
xchg
sti
jb
push
dec
xor
xlat
push
out
cmpsl
xchg
int
mov
aas
fimull
scas
mov
mov
loope
add
ljmp
insl
out
rcll
inc
stos
enter
jmp
stc
add
ret
insl
cmp
aad
cmp
movsl
rorl
fidivl
jl
push
arpl
pushf
movsl
xchg
cmpsb
jge
mov
mov
out
push
popa
push
xor
nop
push
xchg
mov
push
push
pop
adc
push
and
push
sbb
movsl
mov
push
and
adc
aam
xor
sub
stc
mov
ss
sub
mov
sub
pop
aaa
movsl
xor
adc
jnp
xchg
test
jns
xchg
push
mov
lods
jg
xor
mulb
mov
xchg
fs
mov
xchg
xor
lock
xor
mov
sbb
clc
add
daa
out
jg
out
sti
pop
add
xchg
test
popa
outsb
in
call
mov
call
in
add
mov
in
decb
testb
outsb
add
xor
stos
mov
xor
roll
inc
and
adc
add
imul
lock
ds
sbb
sbb
in
push
aas
notb
enter
inc
add
lock
test
sub
pop
add
fdivs
nop
xchg
cmpsl
mov
mov
test
lret
cli
or
dec
dec
leave
pop
cltd
mov
jb
add
in
adc
jl
icebp
push
ds
pop
adc
xorl
dec
mov
cmp
test
cmp
stos
sbb
test
pop
pop
mov
rcrb
and
push
jge
xor
mov
jns
mov
cs
int
push
push
int3
cmp
push
cli
jecxz
lcall
inc
ljmp
cs
adc
xchg
or
psubw
dec
mov
aaa
push
cli
mov
rolb
unpcklps
cmp
push
push
or
mov
into
jecxz
jl
testb
cmpsb
mov
dec
out
push
push
cmp
and
cs
das
nop
sub
lds
mov
inc
sub
jle
xchg
aas
or
cmp
fs
xorl
scas
jmp
xor
stc
test
out
pop
xor
mov
lret
xchg
sbb
jns,pt
orb
push
xchg
int
adc
inc
push
ret
mov
dec
call
lcall
data16
jp
sbb
andb
mov
sub
and
push
ret
mov
loop
cmpsl
int3
mov
jecxz
jp
popf
decb
mov
popl
lcall
insb
mov
lods
cmc
lods
call
andl
mov
pop
dec
pop
pop
xchg
outsb
jne
mov
or
sarb
push
filds
cld
int3
push
mov
push
push
es
dec
imul
lret
jne
or
jecxz
arpl
insl
push
pop
cld
popw
sub
cmc
pushf
in
sbb
jae
dec
jecxz
jb
sub
hlt
repz
dec
shlb
leave
mov
lds
xchg
dec
ja
mov
sub
adc
test
xchg
cmp
arpl
mov
in
pop
cld
popf
jno
sub
lret
loopne
insl
mov
cmc
data16
movsl
jge
andb
mov
xchg
es
mov
movsb
fisttpl
imul
xchg
mov
and
imul
sbb
fsubrl
push
mov
jnp
test
lahf
data16
push
loopne
scas
stos
je
push
scas
sbb
sbb
mov
push
ljmp
pop
daa
es
fnstsw
mov
ljmp
push
adc
mov
incl
or
mov
adc
add
sub
test
dec
jae
mov
dec
push
mov
dec
add
fistpl
or
in
sbb
iret
fdiv
sbb
or
mov
fdivp
xchg
testb
outsb
dec
icebp
int
cmc
fidivrl
dec
pop
out
inc
test
sub
add
push
in
inc
lret
mov
mov
out
ret
push
mov
xchg
sub
dec
rcrb
call
lods
mov
cmp
test
xor
mov
out
ds
daa
jo
mov
fnstenv
mov
sbb
popa
ds
je
adc
sbb
pop
in
adc
push
and
mov
in
fmul
jnp
or
adc
mov
repnz
test
sbbb
jg
mov
mov
sahf
dec
notl
or
cmp
adc
jnp
mov
fsincos
mov
mov
js
inc
mov
sbb
sbb
jnp
jo
pop
rorb
lock
pop
lcall
pop
xor
pop
repnz
sbb
ret
fistpl
mov
pop
sub
stos
sub
outsb
xor
inc
sahf
xchg
mov
mov
jecxz
sbb
pcmpeqb
jb
jle
das
ret
cwtl
leave
outsl
xchg
clc
jo
lret
shlb
sub
rcrb
pushf
cmp
daa
out
jne
ljmp
jge
inc
arpl
negl
nop
dec
jnp
xchg
jae
xchg
lds
inc
pop
scas
ja
pop
decl
mov
push
xchg
das
std
add
push
ret
mov
lret
and
cmp
scas
or
xchg
aas
pop
pop
repz
mov
iret
jle
mov
nop
inc
ja
xlat
mov
fucomp
lret
scas
hlt
fwait
pop
mov
lods
mov
lret
pop
ds
jge,pt
loope
jge
fs
int
fdivs
mov
inc
mov
cmp
jecxz
mov
cmp
and
cmp
pushl
mov
mul
sbb
sbb
aam
test
fidivrs
aad
sahf
dec
test
dec
imul
jmp
inc
or
add
test
lds
bound
in
push
adc
scas
addr16
dec
dec
jp
xor
sti
out
out
jl
xor
insb
scas
out
sbb
pop
xchg
popf
fwait
sbb
push
push
mov
or
insb
sbb
imulb
add
mov
shrl
add
pushf
jmp
dec
pop
idiv
push
outsb
pusha
ss
mov
lds
pop
cmp
push
mov
cld
jecxz
in
sbb
andb
add
data16
out
mov
push
insl
loopne
std
sbb
dec
xchg
push
and
ljmp
sbb
inc
mov
enter
jecxz
dec
les
cmpsl
mov
sub
mov
daa
add
insb
out
pop
mov
mov
jns
out
scas
xor
inc
mov
dec
addr16
stos
in
push
mov
into
cmp
jmp
test
pop
inc
scas
adc
inc
fnstsw
pop
arpl
sub
pop
sbb
stos
push
js
mov
cmpsl
lcall
mov
imul
aaa
or
imul
or
and
mov
std
in
test
int3
jmp
push
mov
pusha
test
in
hlt
in
inc
fidivs
xor
jmp
aas
std
sub
ja
push
fsub
pop
cmp
call
mov
test
bound
in
mov
cli
mov
fwait
int3
sub
cmp
dec
pop
ja
push
inc
jl
stc
adc
pop
or
sbb
xchg
jno
and
jb
adc
sbb
pop
sahf
test
and
jne
pop
cmpsb
inc
jo
sbb
xchg
jecxz
pop
xchg
loope
sbb
jbe
inc
xlat
lret
insb
mov
rcrb
xor
jno
or
or
loopne
push
loope
pop
xlat
leave
std
lods
mov
scas
mov
fdivrp
fdivrs
mov
insb
lahf
cld
xchg
fbld
dec
rorl
jg
mov
mov
adc
xor
jl
dec
xchg
dec
adc
sti
pop
subl
arpl
call
sub
ljmp
add
xchg
ret
xor
adc
xchg
or
popf
fists
aas
ja
mov
add
stos
and
scas
fst
sbb
mov
add
jae
xchg
or
jmp
lea
or
clc
mov
popl
loope
dec
in
inc
orl
sub
sub
and
icebp
fnstcw
daa
leave
sbb
in
test
cmp
jmp
andb
scas
popf
and
lcall
lcall
out
push
sub
clc
inc
xchg
add
cs
xchg
sub
in
xchg
outsb
ret
or
nop
sbb
outsb
lods
rcll
xchg
lret
mov
clc
sub
ror
shll
sub
call
sbb
sub
imul
push
out
lcall
sbb
pusha
lods
push
mov
sub
mov
js
leave
mov
lret
jmp
and
daa
mov
int
jp
fldt
std
in
and
insb
jnp
jl
xor
mov
inc
ljmp
hlt
mov
aas
ljmp
inc
imul
add
pop
sbb
mov
stc
out
movsl
scas
sbb
jnp
inc
xor
ret
xrelease
jb
xor
fstpl
jne
dec
cld
or
mov
jne
xor
sub
dec
orl
ss
dec
sbbl
pop
mov
add
mov
clc
cmp
faddl
jle
outsb
in
cltd
enter
jge
in
leave
ficomps
pop
jg
popf
jne
out
push
sbb
call
sti
pop
cmp
int3
inc
push
cwtl
xchg
mov
testb
leave
sbbb
ja
shl
mov
pop
pop
std
lea
inc
push
mov
jmp
sbb
out
xchg
imul
outsb
imul
shl
cmpsl
push
xchg
adc
mov
clc
mov
xor
aam
aaa
out
adc
sub
insb
mov
imul
cmp
jl
mov
in
daa
sub
lahf
pop
inc
mov
mov
or
mov
xor
push
or
iret
rcr
pop
mov
inc
xchg
mov
aad
mov
lods
loop
subl
push
jmp
das
mov
das
lcall
inc
sbb
pop
xor
stos
flds
jg
adc
jl
xchg
divl
sub
out
pop
shll
test
mov
mov
mov
dec
mov
in
or
inc
push
imul
pushf
sub
insl
in
insl
shlb
shr
xlat
mov
inc
pop
adc
pop
jp
pop
mov
jg
add
test
insb
rcl
pop
add
fwait
xor
jns
sub
in
test
cld
in
xor
mov
pop
pushf
push
andl
adc
loop
push
sbb
in
mov
popa
movsl
mov
jns
dec
push
jne
sbb
mov
call
call
ljmp
jbe
lds
inc
mov
push
inc
jbe
sbb
adc
cmpl
xor
hlt
or
and
pop
repz
mov
pop
adc
dec
sbb
pop
and
pop
jmp
imul
jle
shrl
je
jns
cmc
lret
push
loop,pn
or
sub
mov
xorl
leave
or
jecxz
scas
je
inc
xchg
adc
jg
popf
push
ret
mov
mov
aad
dec
xchg
lock
xchg
std
cmp
bound
imul
cmp
or
inc
inc
mov
jge
add
out
or
imul
mov
pushf
pop
cltd
push
pop
bnd
jp
cmp
xor
xchg
mov
fimuls
pushf
push
ficompl
mov
sbb
in
and
jbe
lcall
mov
xchg
mov
sbb
int
insl
fs
pop
in
pop
inc
cwtl
insb
push
imul
aaa
mov
addr16
ror
popa
mov
mov
in
pop
push
or
lret
cmp
gs
pop
dec
inc
cmpsb
aam
push
inc
mov
hlt
outsl
xchg
inc
xchg
push
xchg
pop
mov
sub
push
test
jns
aam
addr16
push
in
sub
enter
movsl
call
fcmove
push
sub
sti
xchg
mov
push
xchg
in
xlat
jo
int3
and
mov
pop
mov
das
mov
dec
addb
sti
inc
adc
mov
test
mov
loopne
in
imul
push
sub
sbb
mov
mov
fnstenv
mov
jne
adc
sub
shl
cmc
sbb
data16
aas
xor
cmp
sahf
add
or
xchg
repnz
cmp
mov
sahf
fstl
jmp
fmul
xchg
pop
loopne
gs
loope
repz
and
sbb
mov
outsb
das
ret
jo
mov
xchg
jg
dec
pop
in
cmp
mov
sbb
xchg
or
repz
pop
dec
mov
mov
clc
mov
sti
xchg
cmp
cltd
mov
imul
daa
sub
pop
xor
and
js
or
add
push
dec
mov
sub
out
scas
xchg
loope
mov
add
add
sub
stc
stos
jecxz
jne
lahf
sarl
scas
dec
les
mov
pop
sti
jae
lahf
or
ret
mov
lahf
stos
aad
cmp
fadd
cmpsb
shrl
ss
and
ja
lds
repz
add
mov
sbb
mov
inc
in
test
stc
test
enter
mov
mov
and
mov
bswap
cs
lret
mov
inc
insl
std
xchg
xchg
sub
xor
xor
or
and
mov
mov
fsubl
adc
icebp
and
dec
enter
arpl
add
push
insl
jecxz
bound
insb
dec
xor
mov
shll
jmp
inc
fucomi
popa
push
stos
mov
jmp
push
andb
mov
ja
enter
cld
pop
pop
push
into
lea
mov
jge
xchg
xchg
cld
jmp
push
jmp
xchg
xchg
ss
mov
add
loope
mov
pop
and
lret
jno
sub
cld
ss
rcrb
cmc
mov
aas
aad
bound
mov
ss
ret
stc
push
inc
dec
mov
pop
loope
xchg
data16
jno
lock
ret
jecxz
add
xchg
pushf
or
loopne
in
xchg
pop
pushf
sub
dec
rcl
sbb
lret
jp
rol
ds
movsl
jg
cmp
sbb
movl
aas
out
mov
cmc
pushf
shlb
jae
push
cmpsl
push
shufps
mov
xor
js
lock
inc
lods
test
je
ja
dec
xor
ljmp
and
popf
fstl
fdivrs
incl
ret
cmp
pavgw
xchg
jns
loope
aam
scas
mov
xchg
cmpb
ljmp
add
cmpsb
pop
fbstp
pop
arpl
mov
xor
scas
and
lcall
adc
and
jns
out
jo
cmp
in
push
iret
pop
push
fbstp
cmpb
lcall
scas
sbb
xchg
lret
ret
jg
je
cli
pop
sub
scas
stc
frstor
adc
sub
dec
mov
sbb
push
jmp
loope
dec
push
inc
push
daa
iret
sbb
aam
sub
stc
pusha
popa
pusha
movsb
out
int
push
cld
push
les
push
fistl
repz
push
in
pop
jge
push
or
push
sub
ljmp
adc
cmp
iret
inc
sbb
mov
sbb
ds
push
andb
or
mov
adc
js
in
pop
mov
popa
stos
hlt
xor
push
push
mov
dec
mov
xchg
xorb
sub
mov
and
and
ss
add
jl
lods
movsl
ret
push
int
lret
pop
insl
mov
fucomp
sbb
dec
in
ret
loopne
out
in
out
rcll
and
insb
jge
fcmovb
or
mov
mov
jo
call
popf
xchg
mov
sbb
cmc
xor
movsl
sub
mov
test
fisubrl
in
fnstsw
mov
and
inc
cmpsb
call
lret
xor
push
pop
mov
jno
adc
testb
rcr
data16
sub
test
mov
shl
pop
shll
jecxz
gs
fwait
stos
gs
cmpsb
sbb
xchg
loop
ret
lods
inc
jecxz
imul
aaa
dec
xchg
jle
imul
cmp
fistpl
shlb
pmaddwd
repz
hlt
sub
imul
and
scas
pop
or
fisubs
mov
call
push
les
out
and
fstps
or
add
bound
ds
arpl
pop
pop
das
xchg
pop
mov
sub
pop
insl
dec
fldcw
test
lock
icebp
repz
dec
loop
inc
sbb
lret
repnz
ds
pop
pop
in
nop
sbb
sti
ffree
stc
inc
fisttps
loopne
jno
in
out
aaa
inc
scas
adc
rolb
scas
dec
mov
imul
cmc
test
int3
pop
sub
repz
push
jno
mov
adc
jbe
sbb
scas
lcall
aam
add
mov
fistpll
mov
cmp
or
or
mov
xor
loopne
add
sub
pop
sub
pop
aam
fwait
das
dec
xor
test
jnp
sub
cld
pop
jb
dec
xchg
jo
insl
push
mov
cmpsl
cmpsl
or
outsl
xor
xlat
in
sbb
test
mov
jns
mov
mov
daa
mov
dec
push
xor
or
stc
add
add
rcrl
xor
into
push
imul
mov
pop
icebp
icebp
popf
lock
testb
imul
add
test
or
mov
aad
dec
mov
adc
rorb
pop
inc
es
std
cmp
jle
pop
leave
add
dec
leave
sbb
movsb
add
scas
add
cmp
push
mov
ds
pop
push
lods
inc
and
push
mov
sub
dec
jecxz
add
pusha
mov
movsb
mov
sub
sub
dec
jmp
in
mov
mov
in
out
inc
mov
lret
pop
lret
jle
xor
xchg
cltd
add
cmp
stc
lods
pop
cmpsl
push
push
rorl
cmc
push
jg
sahf
sub
push
in
sahf
sub
in
push
ja
fidivrl
mov
call
cmp
inc
nop
movsb
jno
lds
orb
or
sbb
mov
mov
mov
das
sub
add
imul
xor
fs
inc
outsl
xor
mov
into
xchg
std
incl
cwtl
mov
roll
xchg
xchg
iret
jp
push
jb
pop
cmpsb
mov
cmp
cs
cmp
jp
mov
sub
sbb
lds
movsl
sub
push
cmp
iret
dec
sti
ds
push
rcrl
pop
pusha
faddl
cmp
xchg
mov
mov
faddl
or
lock
std
push
sub
xor
add
ljmp
sti
inc
sbb
dec
pop
ss
mov
xchg
xchg
ret
or
inc
mov
subl
inc
mov
popf
sbb
xchg
push
dec
xchg
imul
xor
push
mov
adc
sbb
aad
or
call
push
sub
in
icebp
jmp
aam
xor
or
ret
dec
loopne
mov
int
addl
mov
dec
stc
lock
adc
shll
or
push
in
xor
adc
push
ss
hlt
int3
inc
sub
adc
ret
jno
cwtl
andl
add
pop
push
mov
fnstsw
xchg
sub
mov
ficompl
in
add
sub
out
mov
fldt
and
push
subl
rclb
sbb
shll
sub
sbb
push
aam
lods
scas
in
xor
lock
ret
jns
ret
div
sub
lret
add
stos
loopne
or
add
stos
lea
push
push
stos
mov
aam
insl
leave
aad
mov
pop
andb
or
int3
sub
pop
cmp
add
and
fiaddl
icebp
data16
aas
xchg
push
loope
repz
pcmpeqw
pop
jno
pop
inc
rcrl
adc
inc
cmpsb
fldt
out
adc
sahf
jmp
jmp
xlat
cmp
add
test
pop
mov
leave
sbb
xor
out
pop
inc
lds
mov
call
outsb
pop
mov
insb
mov
fbstp
inc
push
lret
fbld
sbb
movsl
and
jo
or
repnz
cmpsb
loope
push
bound
adc
test
cld
hlt
inc
frstor
ljmp
and
fwait
xchg
rcll
jo
movsb
jns
enter
xchg
sbb
ss
lahf
js
out
popf
fdivs
xchg
out
enter
out
sub
cmp
or
push
bswap
negb
cmp
cmpsl
jmp
xor
loope
pop
jne
pusha
pop
inc
mov
pop
mov
pop
add
xor
lcall
sub
xor
mov
fnsave
aas
xorb
sbb
je
inc
es
rcll
xchg
pop
jb
bound
sbb
lods
ret
out
dec
data16
fwait
pop
xchg
into
pop
or
add
jecxz
leave
xor
imul
test
cld
pop
shrl
es
jb
cli
enter
daa
adc
shrl
pusha
push
fcoms
mov
fwait
popf
jbe,pt
sbb
mov
sbb
cmp
mov
ret
fbld
movsb
out
push
loope
pop
scas
testl
out
sti
add
xor
inc
and
aad
movsb
mov
in
shll
hlt
inc
subb
cmc
icebp
sahf
jb
cld
in
js
mov
xchg
fdivl
xor
clc
push
xchg
sbb
mov
push
leave
fadd
mov
imul
xlat
push
inc
std
bound
aam
fwait
pusha
add
fsubl
or
sbb
mov
repz
jmp
loop
mov
inc
push
cli
cmp
and
and
sbb
add
pop
lret
leave
sbb
pushf
ficoms
jg
imul
cmp
mov
in
test
fldt
bnd
or
je
popf
clc
popf
xchg
xchg
rolb
clc
jle
and
push
dec
inc
stos
or
pusha
js
pushw
aas
inc
push
mov
ficomps
pushl
mov
xor
fwait
mov
out
push
or
pop
sarb
add
push
out
pop
sahf
movsl
ja
mov
iret
in
mov
mov
movsb
lahf
dec
in
jns
stos
push
popf
inc
sarl
ret
add
sti
sbb
data16
jno
dec
dec
cs
inc
aaa
push
mov
test
divb
aas
xchg
xor
sub
cmp
xor
test
outsl
dec
in
xchg
push
fiaddl
inc
aaa
mov
dec
sbbl
jae,pt
out
cmp
cwtl
push
xor
fwait
and
jnp
cwtl
fisubs
insl
inc
in
ficompl
ret
dec
inc
sbbl
stos
lods
out
jle
fisttpl
and
inc
sbb
pop
lods
popa
clc
movsb
sbb
cmp
loopne
pop
and
push
lret
adc
jmp
pop
ret
add
enter
sti
sbb
cmp
jnp
push
aaa
mov
mov
push
enter
adc
adc
jge
aam
adc
mov
sub
push
xor
stos
sub
push
sbb
mov
cltd
dec
or
xor
and
pop
pop
mov
enter
fidivs
jecxz
roll
sbb
out
and
add
jecxz
jno
adc
aaa
or
aad
push
xchg
push
sub
movsb
mov
cli
dec
jb
inc
lahf
dec
lret
js
out
and
pop
mov
int
mov
gs
inc
push
in
cmp
nop
test
into
or
sub
mov
xor
rcrl
std
sbb
push
xor
repz
in
iret
cmpsl
lock
fs
loope
popf
jo
push
imul
std
aad
push
jl
xchg
arpl
fcoml
inc
popa
mov
in
xlat
movb
mov
add
inc
cmpl
mov
movsb
out
push
push
movsw
repz
fcompl
scas
daa
negl
repz
push
aaa
ret
out
inc
mov
jle
jno
sbb
enter
inc
jno
rorb
iret
fists
xor
es
fcompl
xchg
jmp
loopne
dec
test
jmp
testl
jne
xchg
add
test
pushf
xchg
mov
inc
push
js
dec
in
mov
fldl
mov
scas
lods
stc
fcomi
loope
fidivrs
loope
xor
test
mov
ja
test
test
inc
mov
sub
mov
add
cwtl
negl
xor
mov
push
pop
dec
fstps
xlat
int3
arpl
loop
mov
lock
bound
test
mov
fldcw
inc
sbbb
xor
xchg
or
mov
int
cmp
repz
jg
and
popf
pop
xchg
loop
leave
push
dec
aaa
pop
test
push
pop
fimull
lods
push
pop
ds
scas
ret
dec
mov
sub
mov
dec
mov
add
aas
and
mov
pushf
fstpt
inc
dec
pop
fsubp
test
fistps
add
test
iret
call
adc
adc
call
pop
arpl
lods
mov
xchg
mov
mov
test
fdivr
setae
fwait
sbb
xor
cmovns
adc
mov
in
and
adc
mov
xlat
jl
pop
into
stc
jmp
hlt
aad
mov
push
mov
dec
dec
adc
imul
mov
xor
pop
data16
cmp
xchg
xchg
mov
dec
aas
pop
imul
jmp
sub
dec
dec
jle
popa
and
mov
lods
push
cli
pop
aad
sub
enter
adcb
fnstsw
adc
test
fdivrl
push
loopne
push
out
jl
ds
stos
adc
pop
leave
daa
gs
jnp
ljmp
pop
sub
int3
push
push
in
cmovne
sub
cltd
sub
insb
cmp
mov
aas
mov
adc
ds
sub
dec
in
cmpsb
shrb
jg
daa
movsb
loop
out
stos
and
outsb
pop
pop
jae
lret
push
loop
rclb
push
stos
adc
shrl
inc
lcall
and
addb
fs
xlat
sarl
mov
test
push
pusha
lret
push
jle
mov
jl
ret
push
test
repz
or
dec
add
xchg
xor
imul
push
not
ljmp
scas
jge
sbb
dec
push
fidivl
adc
out
jne
sbb
loopne
mov
repz
out
lods
mov
and
xor
sub
jle
xor
sub
dec
addr16
dec
mov
and
pop
leave
or
cmp
jp
dec
sub
mov
dec
jmp
xlat
cmp
imul
fisttpll
or
jp
in
jb
add
jecxz
test
jecxz
or
push
push
arpl
mov
push
jnp
mov
inc
dec
movsl
shlb
adc
adc
lea
jae
fcmovu
arpl
lds
loop
aam
sub
lcall
push
testb
clc
cmp
jbe
jl
mov
stc
push
mov
dec
push
sahf
mov
int3
jmp
pop
mov
out
mov
sub
addl
push
hlt
icebp
jecxz
xchg
sbb
repnz
cmp
les
push
hlt
cmc
xor
jae
js
push
sub
lods
or
divb
cmpsb
add
cmc
jno
int
in
jbe
push
movsb
sti
jg
pushf
fisubl
jb
push
cmp
mov
pop
in
lock
and
aad
cmp
je
sub
scas
hlt
les
dec
adc
sub
and
lock
push
jmp
pop
push
cmpsb
mov
push
mull
js
int
popa
dec
dec
ret
inc
sbb
lods
xchg
sbb
dec
cmp
xor
jo
push
add
in
xor
sub
push
scas
enter
cvtps2pi
cwtl
dec
push
xor
test
fisttpll
cmp
pop
jmp
xor
fdivl
adc
mov
fcoml
insb
lods
jb
cld
ss
mov
aam
sbb
push
inc
dec
in
cmpsl
mov
xchg
cmp
sub
pop
xlat
mov
outsl
in
jnp
xchg
gs
mov
filds
cmp
add
dec
jge
jecxz
adc
inc
icebp
push
xchg
xor
lods
out
jo
repz
mov
push
pusha
mov
ret
insl
cs
jge
ret
and
or
push
and
push
test
sub
xor
dec
push
add
jae
stc
push
xor
out
and
sub
mov
jmp
cmp
das
xchg
test
sahf
fsubl
leave
js
jg
cltd
je
ret
roll
pop
subb
pop
je
in
loope
and
adc
or
mov
push
xchg
xchg
sahf
imul
leave
cmp
sub
xchg
cs
and
xor
out
and
sbb
cmp
imul
jae
xchg
adc
and
mov
mov
pop
in
jl
popf
inc
movsl
jnp
cmp
and
movl
scas
mov
sub
mov
push
cs
shll
repz
into
jno
movsb
mov
xchg
push
push
dec
hlt
inc
dec
cltd
ja
cltd
mov
in
dec
rcr
jne
and
loopne
inc
pop
fisubl
aaa
push
ss
mov
int
adc
or
mov
or
icebp
cmc
test
mov
lods
lret
sbb
mov
adc
outsb
imul
mov
jbe
std
test
mov
mov
xor
xchg
xchg
mov
cmp
dec
and
into
pop
shl
data16
loopne
push
jg
dec
jb,pn
sti
mov
movsb
add
pop
fcmovbe
fwait
ret
lds
mov
xchg
pushl
or
adc
and
push
int
or
push
rcrl
xchg
mov
lret
je
xor
into
out
sbb
out
and
cmp
test
push
repnz
ljmp
shll
out
inc
sarb
mov
push
stos
mov
aad
mov
rorb
jo
cmpsb
mov
inc
scas
fiadds
sub
pusha
xor
dec
into
es
ficoms
mov
xchg
rorl
outsl
pcmpgtw
in
jmp
nop
lret
repz
cmpsb
cmp
push
sahf
jp
cli
sub
es
cmp
inc
sub
ret
sahf
lock
rorl
mov
outsb
lret
cs
imul
mov
pop
jbe
in
xchg
xchg
ja
add
repnz
es
js
imul
pushf
dec
cmpsl
orps
mov
cld
xchg
enter
int
push
jg
imul
xchg
push
loop
sub
divb
sbb
or
cmp
aad
jmp
aam
xchg
dec
mov
shrb
rcl
xchg
sub
fsubl
ss
movsl
or
lcall
inc
cld
loop
iret
xchg
repnz
jg
mov
sti
mov
mov
fcompl
and
lock
lea
jmp
jne
mov
sarb
sarl
adc
sbb
add
mov
sub
mov
loopne
adc
in
sub
or
fmulp
push
inc
dec
mov
lahf
add
sbb
sub
loop
inc
int
xchg
addb
jnp
sbb
fdivl
mov
jae
fdivrs
jbe
inc
cmpsl
leave
xchg
xor
push
pop
test
lcall
adc
ficoms
aas
loop
movsb
aad
dec
cmp
and
mov
push
adc
adc
aad
xor
inc
adc
xchg
push
mov
add
repz
gs
addl
jg
repz
sbb
insl
ret
adc
xor
mov
push
pusha
movsl
dec
adc
push
adc
lret
out
xchg
bound
mov
mov
jge
mov
test
outsl
hlt
cmc
or
test
dec
xchg
dec
scas
subb
add
inc
pop
ja
jb
out
lods
fsub
sub
and
filds
pop
jle
lcall
sub
inc
dec
xchg
or
repz
jo
mov
fxch
add
xchg
aaa
xchg
js
int3
sub
mov
mov
mov
pop
sub
ds
inc
stos
cmpsl
mov
lret
cmp
clc
dec
mov
sbb
sub
insl
mov
fwait
cltd
mov
fidivs
push
ret
adc
loop
fldt
push
mov
xchg
je
inc
in
js
nop
sbb
xchg
fmuls
pop
pop
dec
stos
and
or
jo
mov
aam
dec
out
xchg
daa
jno
lods
and
mov
xlat
sbb
cmp
loope
aad
cltd
test
pop
scas
cld
pop
mov
adc
mov
or
cmp
fmull
xor
push
mov
test
notl
mov
mov
sbb
jbe
andl
add
inc
cwtl
mov
loope
cmpsb
dec
dec
dec
dec
dec
mov
cmp
pop
dec
in
and
aam
mov
sbb
pop
addr16
cli
cmp
aas
inc
shll
rorl
aad
scas
test
jle
sbb
shll
cmp
mov
popf
jecxz
mov
cld
cmp
mov
pop
mov
outsl
pop
fwait
jl
pop
jecxz
push
imul
cmp
xchg
test
push
jecxz
loope
sub
pop
xor
mov
arpl
push
and
stc
aad
pop
push
out
shll
addb
cltd
js
mov
and
pop
push
fidivrs
push
xchg
test
cmpsb
sbb
scas
js
xchg
popa
repnz
mov
jecxz
icebp
push
aad
aam
mov
into
lock
fwait
adc
dec
sbb
mov
mulb
sub
popf
repz
int3
divb
std
push
and
faddl
lock
inc
dec
mov
jns
sub
scas
or
add
in
pop
cmc
inc
int
aad
adc
cli
loopne
inc
addr16
lea
dec
xor
ds
mov
movsb
pop
js
or
fdivs
mov
jg
imul
add
sbb
dec
iret
mov
pop
and
push
aaa
fnstsw
xchg
push
push
fisttps
call
idivl
add
enter
pop
adc
mov
mov
gs
repnz
fistpl
sub
push
daa
lcall
or
push
mov
or
enter
cmc
mov
mov
and
push
loop
sub
and
add
out
and
dec
lahf
mov
mov
shl
xor
jge
lods
push
mov
pop
pop
pop
and
xor
adc
pop
stc
jg
mov
rorl
in
lea
notl
scas
fisubrs
push
push
insb
mov
aam
mov
jg
enter
repz
jge
inc
scas
xchg
pop
cmp
nop
inc
push
jmp
fstpl
icebp
les
jne
xchg
mov
sbb
inc
ds
dec
adc
or
mov
sbb
fistpl
jmp
jne,pt
rcrl
mov
xchg
repnz
call
pop
mov
xor
fldl2t
lea
arpl
push
mov
fidivrs
fcomps
stc
es
inc
adc
repz
pop
adc
mov
mov
loop
xchg
inc
jle
leave
shlb
add
arpl
test
push
int3
cmpsb
add
ret
sbb
mov
mov
mov
pop
and
mov
cmp
mov
ret
mov
and
adc
add
add
test
in
lahf
dec
jbe
xlat
xorl
and
in
decb
pop
shr
shll
jns
inc
inc
and
lahf
mov
or
jg
popf
negl
jb
ss
outsb
int3
mov
push
icebp
xchg
push
and
aas
ljmp
xchg
push
push
fwait
xorl
pushf
dec
adc
in
mov
pop
xor
mov
mov
cld
lcall
jns
dec
push
scas
pop
sbb
mov
inc
pop
cli
push
fs
icebp
dec
out
inc
loop
dec
dec
je
mov
data16
enter
mov
mov
and
inc
pusha
dec
inc
daa
scas
xchg
scas
test
inc
mov
inc
dec
fisttps
push
orb
fcoml
iret
jno
lods
jp
aad
add
sbb
stos
cmp
mov
adc
imul
loop
incb
adc
aam
in
pop
pop
and
hlt
jne
sbb
inc
add
cld
xor
mov
push
push
mov
mov
mov
adc
imul
push
cmpsb
fdivrs
xor
jge
sarl
lds
filds
cwtl
cmp
loopne
lds
cmp
sbb
ret
jno,pt
jp
push
stc
xor
aam
mov
outsl
xchg
outsb
test
mul
cmp
cld
cmpsb
sbb
jmp
mov
sbb
mov
cmp
push
je
mov
cmc
or
aas
or
pop
aas
imul
cli
jp
sub
dec
add
cmp
dec
movsl
xlat
in
jg
outsl
xorl
leave
bound
push
sub
aaa
std
stos
jnp
out
es
sub
pop
push
mov
mov
movsl
jb
outsl
in
xchg
xchg
call
jp
pop
push
in
mov
sub
mov
cmp
mov
sbb
jecxz
sbb
pusha
dec
sub
cmpl
sub
jecxz
jo
inc
jb
sarb
cmpsb
mov
cmp
add
xor
pop
inc
ret
cmp
subb
and
mov
ficoms
cmpl
sub
decl
jmp
push
sarl
lahf
xchg
loopne
lods
gs
cli
cmp
icebp
jb
xchg
cmp
adc
sub
inc
push
repz
push
sbb
adc
lahf
push
into
lea
inc
or
out
in
iret
add
dec
inc
jne
notl
shl
or
stc
mov
into
sbb
insb
int3
iret
add
imul
xchg
rolb
outsb
pop
shlb
inc
test
fcomip
mov
mov
aam
mov
bound
cmp
jnp
or
aad
negb
pop
or
shr
push
aad
push
mov
outsl
and
test
cmp
pushf
cmp
dec
and
dec
adc
mov
jb
add
sarl
jmp
cltd
stos
jge
mov
xorl
aaa
pushf
repz
pop
repz
aad
push
aas
les
mov
sbb
and
out
or
or
lds
push
ret
or
gs
aad
push
jns
int3
mov
cmp
lds
inc
iret
jg
pop
cmpsl
das
mov
cmpsl
cmp
andl
fnstcw
push
jle
pop
dec
pushf
int3
nop
mov
outsb
cmpsb
jnp
repz
stc
mov
push
inc
or
dec
xorl
dec
test
movsl
mov
sbbl
cmc
or
sti
movsb
dec
mov
and
jl
mov
icebp
arpl
arpl
movb
pop
cmp
jae
lds
ds
xlat
fidivrl
inc
xor
nop
xchg
jl
lret
sub
mov
add
dec
movaps
jge
dec
lret
lahf
sub
jmp
jl
push
xchg
jbe
test
mov
fsubs
mov
jecxz
adc
lret
addr16
jbe
push
jp
dec
jecxz
xchg
pop
sbb
adc
jl
pop
mov
shll
les
xchg
imul
push
in
fmull
ret
sarl
xchg
shll
add
leave
out
sti
movsl
adc
xchg
cli
xchg
into
shll
cmpsb
cmp
ret
sbb
je
adc
sbb
test
pop
xor
add
lea
cmp
mov
test
out
lcall
test
pop
enter
sahf
push
ret
stos
repnz
data16
and
pop
xchg
aad
jo
pop
repnz
xor
shlb
xchg
dec
xor
sti
or
aam
lahf
sub
ret
xorl
divb
mov
stos
pusha
xchg
jbe
std
sub
adc
imul
jnp
xor
out
cld
add
cltd
sbb
popa
pop
pusha
repz
xlat
xchg
xchg
loop
lods
and
movsl
cmc
aad
cmc
xor
and
dec
pushf
nop
gs
sub
pop
xor
outsb
out
aad
lock
pushf
sbb
aad
jmp
or
shll
dec
negl
mov
ret
cltd
mov
pop
cld
hlt
adc
mov
je
or
mov
or
mov
pushf
mov
pushf
mov
jnp
mov
mov
popa
es
cmpsl
push
add
cmpsb
add
pop
sub
xor
cmp
sbb
xor
scas
mov
push
lahf
inc
xchg
or
cmp
sbb
cmpl
loopne
mov
adc
and
push
adc
movsb
cli
cmp
mov
xchg
mov
hlt
fimull
ja
lea
clc
je
add
dec
insb
jp
jecxz
lcall
xor
adcb
in
roll
mov
mov
push
sbb
cmpb
push
test
cmp
sbb
mov
push
bound
mov
mov
xor
mov
xchg
jle
bound
ds
ja
cmpsb
add
ss
push
lock
sbb
je
or
lahf
test
lods
aad
or
add
xor
jecxz
ljmp
mov
sub
out
bound
cmp
mov
popa
cwtl
xchg
insl
adc
xor
es
cli
pop
adc
shl
xchg
pushf
insb
call
scas
imul
test
pop
mov
test
pop
cwtl
leave
mov
add
dec
cmp
mov
fs
pushf
mov
lret
sbb
call
cmp
insb
and
rcr
mov
into
lea
jne
adc
into
clc
add
xchg
mov
fsubs
xchg
iret
sbb
xchg
xor
test
out
cmp
sub
iret
iret
dec
stos
xchg
push
imul
or
xchg
inc
loop
or
sub
stos
scas
ja
mov
inc
scas
lcall
nop
push
mov
pop
pop
sbb
add
into
pop
push
mov
sub
imul
xor
popl
mov
jecxz
push
sarb
shr
xchg
aam
pusha
pop
lock
sbb
arpl
adc
les
test
or
push
jle
stos
lahf
mov
ljmp
pop
jno
jg
rclb
es
push
mov
insb
inc
lahf
lret
test
ret
cld
push
lret
les
jmp
dec
imul
mov
lds
inc
in
add
out
data16
mov
outsb
into
in
push
insl
add
and
hlt
das
jl
cs
ror
sbb
mov
scas
out
adc
insl
rorl
sbbl
push
sbbb
mov
inc
mull
addl
sbb
jb
aad
idivl
loopne
sbb
inc
add
adc
push
sub
out
mov
mov
shll
lcall
pop
push
jg
xor
scas
test
jg
xor
and
cmp
insb
push
out
pop
fsub
mov
iret
push
in
icebp
and
enter
imul
sub
out
xchg
push
add
out
scas
or
jae
push
fcompl
mov
ss
les
mov
push
sarb
inc
leave
mov
je
je
imul
pop
or
mov
or
mov
lcall
mov
push
or
ljmp
mov
mov
mov
enter
repnz
popa
xor
sbb
sbb
jp
fcmovnb
cli
xorl
fwait
iret
jns
lds
cmc
test
jecxz
out
aad
rcl
test
xor
iret
xchg
cmp
mov
mov
add
push
or
dec
test
incl
ret
jl
cmp
pop
fldl
jno
cmc
mov
lods
repz
lock
inc
inc
fwait
adc
xchg
push
mov
push
mov
call
out
test
dec
dec
fucomp
sub
jbe
outsb
add
fdivrl
adc
nop
mov
push
pop
push
fcoms
cmp
push
or
inc
push
andl
push
rcrb
xlat
jnp
mov
sbb
jmp
aam
jmp
xor
sbb
fwait
fs
and
stc
mov
adc
add
bound
dec
cwtl
scas
clc
insb
daa
mov
xlat
push
cmp
int3
pop
pop
fwait
int3
imul
stos
sbb
add
out
pop
or
rolb
or
pop
sub
iret
or
fsubrl
mov
cmp
inc
add
xchg
push
mov
icebp
cmp
ljmp
aaa
or
push
aam
inc
push
hlt
and
repnz
test
aaa
xchg
ret
inc
mov
and
scas
jp
xor
shll
cmpsl
imul
lcall
setno
fs
out
dec
and
stos
lods
add
cmc
lock
fisttpl
xor
fsts
jmp
and
lds
cltd
xor
and
jmp
lods
mov
mov
in
inc
out
sub
ret
jl
and
and
cli
lock
jnp
mov
mulb
stos
add
adc
mov
inc
mov
pop
orb
and
aam
and
imul
or
leave
sub
movsb
ss
xor
in
add
or
out
ret
in
push
xchg
pop
jmp
mov
lods
loope
xor
sbb
mov
pop
aam
imul
sub
or
mov
repnz
mov
cld
dec
dec
out
mov
xor
leave
mov
mov
ja
mov
dec
mov
popf
inc
outsb
xor
loopne
mov
jg
aad
stos
pusha
sbb
shl
jmp
cmp
push
cmpsb
jmp
addr16
ret
je
mov
lea
cli
inc
or
addl
inc
xor
aas
addr16
mov
push
dec
lret
nop
mov
and
sbb
into
fidivl
lods
and
adc
ja
stos
mov
lods
inc
xchg
cmp
in
mov
mov
cmp
adcb
hlt
xchg
andb
adc
lcall
aad
sub
shrb
shll
xchg
loope
enter
addr16
or
cmc
inc
in
push
pop
jp
pop
in
ss
fadd
pop
outsl
push
and
cld
mov
or
pop
sub
or
enter
outsl
or
and
inc
shr
fstl
jne
cmp
sbb
int3
cld
idiv
add
xor
in
inc
cs
xor
lods
sbb
shl
jl
mov
dec
imul
cmp
adc
loope
mov
lret
pop
ret
inc
mov
jecxz
xor
out
aam
mov
nop
xchg
loopne
pop
jecxz
jecxz
orl
idivb
shl
cs
mov
movsb
andl
out
add
xor
jbe
xchg
mov
and
mov
push
fistpll
jle
xchg
pop
clc
es
ss
inc
xchg
and
xchg
es
mov
das
lret
scas
pop
xchg
clc
jb
xchg
mov
mov
and
out
xlat
jo
sti
dec
lock
xchg
inc
xchg
mov
fadd
lcall
repz
test
xchg
je
jae
daa
adc
sarl
mov
std
test
inc
dec
movsb
scas
in
sbb
aaa
pushf
ja
cmp
xor
and
dec
aas
pusha
call
and
xchg
out
sbb
les
int
fwait
cmpsb
cmp
cld
xor
rol
cmp
mov
dec
lods
bound
imul
shr
push
mov
out
call
lock
jb
pop
sar
subl
loope
mov
pushf
and
std
and
inc
cli
incl
dec
lds
or
inc
outsb
jg
inc
mov
cmp
dec
scas
add
int3
xchg
sub
cltd
shl
sbb
popa
fmuls
inc
cmp
pop
jo
stos
loopne
cwtl
sbb
lsl
sti
cmpb
push
popf
jecxz
aas
push
push
inc
lret
rcll
pop
in
hlt
adcb
xchg
add
stos
inc
gs
inc
popf
inc
subb
jecxz
push
aam
ja
jecxz
bound
jbe
adc
je
dec
adc
sbb
and
jle
idivl
inc
dec
imul
cmpsb
push
mov
mov
cmpsl
xchg
lods
pop
cmpl
jmp
stos
stos
dec
movb
lahf
stos
and
xor
mov
stc
inc
push
mov
in
jns
inc
push
ds
mov
and
jl
cmc
or
test
pop
cld
es
lahf
lahf
out
adc
ret
add
cmp
push
mov
push
pop
xor
mov
clc
mov
sub
test
xor
lret
xor
in
adc
mov
xchg
sub
call
cs
in
xchg
aas
cmpl
scas
inc
xorb
in
push
loop
pop
fadds
pusha
and
inc
adc
sub
jo
lret
dec
mov
adc
inc
dec
loop
or
push
xchg
lea
inc
cmp
clc
out
out
repnz
je,pn
adc
xchg
sbb
pop
xor
int3
cli
inc
sub
sub
inc
ret
xor
loope
add
hlt
lret
push
inc
and
or
fsub
movsb
sahf
mov
shlb
fldt
je
sub
loope
movsl
adc
mov
sub
add
inc
leave
mov
add
lea
mov
xor
or
push
sbb
jno
jbe
jno
lock
push
and
sahf
adc
sub
int3
pop
ficomps
mov
push
push
ss
jle
icebp
push
jge
out
or
add
dec
adc
out
arpl
repz
inc
xchg
je
push
jl
sbb
testl
adc
xchg
xchg
popl
push
jecxz
push
imul
in
inc
jecxz
out
dec
lods
push
mov
pushf
mov
mov
inc
cmp
cmp
insb
mov
dec
dec
and
test
int3
ror
scas
mov
mov
add
mov
push
adcl
mov
test
add
inc
je
imul
clc
mov
jbe
pop
imul
push
sub
aam
addr16
and
loopne
mov
sti
inc
lahf
adc
mov
mov
jne
loopne
sub
popf
xchg
arpl
mov
sbb
loope
daa
movsb
stos
in
jmp
in
ja
adc
lret
inc
dec
popa
cwtl
ret
mov
outsb
cmp
fistpl
push
inc
movsb
mov
in
adc
mov
pop
movb
xor
lret
lea
xchg
repz
mov
xor
add
fs
push
cmp
repnz
loopne
mov
loop
dec
jg
call
cmpl
insl
fisubrs
pop
icebp
aaa
sbbb
inc
mov
mov
and
shrl
popf
fwait
aad
ret
mov
cmp
xor
fisubrs
mov
mov
cld
mov
imul
hlt
lret
loope
xchg
or
pop
push
xchg
icebp
outsl
push
add
fucomp
stos
push
push
sub
jae
pop
mov
pop
psrld
in
aam
lock
arpl
ret
pop
or
and
push
pop
mov
xchg
inc
pop
fisttpll
mov
out
push
out
shlb
mov
flds
test
inc
sub
mov
ss
ja
mov
mov
adc
dec
enter
out
or
out
mov
mov
jl
pop
les
pop
adc
flds
es
ja
xchg
inc
in
sub
aas
mov
in
sub
divl
test
xchg
dec
outsl
cld
and
jo
movsl
stos
xchg
adc
sub
mov
cmp
insl
push
fs
scas
xchg
leave
mov
out
out
dec
pop
jge
mov
in
test
add
testb
test
mov
data16
adc
mov
and
iret
call
mov
leave
es
xchg
push
mov
xchg
pop
sub
xchg
imul
loop
imul
or
cmpsb
lods
mov
pop
xchg
pop
adc
add
sub
in
movsl
popl
aad
and
mov
mov
scas
filds
dec
jp
mov
call
and
pushf
push
cmp
cmpsb
bound
mov
ljmp
mov
push
hlt
adc
dec
push
popf
jbe
hlt
mov
jp
and
or
lods
jo
jno
fdivs
les
mov
mov
inc
sarl
int
pop
dec
ret
lods
push
test
leave
push
ficomps
jecxz
int3
cmp
rorb
mov
mov
ljmp
sub
and
les
jg
adc
bound
dec
shr
movsb
scas
negl
divb
sub
fcomi
push
mov
push
cmp
in
in
mov
je
and
jb
rclb
jge
iret
sbb
popl
movsb
or
pop
dec
xchg
sbb
scas
pop
mov
sbb
push
sub
decb
mov
lock
test
mov
in
loope
xchg
movd
jne,pn
loop
mov
mov
icebp
mov
jae
jno
push
std
ret
shll
mov
es
ljmp
ljmp
jns
jne
pop
sub
pop
add
lock
iret
int3
sub
pop
inc
mov
lods
sarb
inc
push
dec
lea
aam
je
cmp
test
adc
das
adc
dec
mov
lea
sbb
arpl
jns
dec
imul
loop
sub
xlat
xor
lods
cld
inc
js
in
leave
cmc
mov
mov
push
push
loope
add
jae
lret
outsb
fmul
sbb
cld
shlb
mov
into
cmp
or
test
das
popf
mov
ficomps
notl
popf
ljmp
jle
aad
jl
dec
mov
lahf
and
cmp
lcall
fwait
mov
and
aad
sub
ljmp
push
cmp
mov
lahf
mull
lods
jge
movsb
daa
or
push
ja
lcall
xchg
dec
pop
jnp
xchg
ja
out
lahf
xchg
fildll
xor
test
xchg
push
lret
mov
andb
xchg
loop
jl
fstpl
sbb
ret
pop
fcomp
js
jae
out
rcl
cli
sub
or
push
jo
xor
in
iret
xor
or
arpl
mov
and
push
xchg
loop
lcall
mov
ret
daa
popa
xchg
sub
mov
insb
pop
pusha
ds
test
scas
lock
xchg
pop
bound
lret
cmp
scas
loope
sti
lret
dec
push
sahf
pop
cmpsb
bound
lret
mov
mov
outsl
call
jbe
mov
xor
mov
test
cltd
lahf
aam
inc
sbb
add
notl
xor
mov
sbb
orl
jbe
lds
in
ret
add
lea
and
pop
mov
inc
xchg
hlt
fdivrl
popa
pop
fbld
jno
pop
clc
pop
and
out
fcoml
push
push
fcompl
int3
out
or
add
mov
cmp
gs
ret
xor
push
or
addb
adc
addr16
add
sbb
fadd
out
cltd
push
lcall
sbb
mov
mov
or
and
out
mov
fwait
push
loop
or
test
scas
jg
pop
push
pushf
ror
loop
push
negl
out
test
and
rolb
inc
xorb
popa
imul
add
je
cmp
mov
xchg
cld
imul
mov
push
jne
xchg
cmpsb
xchg
popf
ss
cmp
aad
addr16
mov
jne
or
mov
pop
sub
andl
mov
orb
sbb
pop
lahf
enter
fdivrs
fldl
push
and
or
xchg
movsb
or
aam
xor
push
aam
scas
lds
test
mov
cltd
sbb
loope
sub
popl
roll
cmp
movsl
loop
add
outsl
pop
insl
and
inc
push
mov
rolb
add
sub
test
imull
jnp
notb
pop
ret
ljmp
in
cmc
sub
iret
rcll
int3
arpl
and
push
jne
dec
data16
ficoms
fcompl
push
inc
lods
cmp
enter
rolb
test
xor
incb
in
pop
outsb
adc
dec
sbb
sbb
push
pop
inc
imul
lds
pop
xor
lcall
daa
xchg
jecxz
xor
inc
clc
test
push
data16
and
out
cld
out
addr16
repnz
mov
pop
pop
cmp
add
sub
mov
xor
pop
in
jle
mov
fwait
jae
jne
loope
dec
insl
in
jp
out
clc
ja
xlat
bound
xchg
cli
sbb
sub
popf
jne
xchg
fmul
jns
loope
sub
and
repz
adc
ret
sbb
or
inc
xchg
enter
push
in
dec
xchg
fwait
sub
add
fistl
push
inc
jge
adc
lods
shl
outsb
mov
in
cmp
sahf
in
mov
mov
push
es
inc
into
jne
movsl
rol
mov
mov
mov
cmpl
sbb
cmp
push
or
fidivrs
ljmp
sarb
xlat
push
mov
scas
ret
inc
test
xor
pop
and
xchg
sub
inc
adc
popf
mov
or
sbb
mov
push
out
sub
lock
fbstp
jg
xchg
leave
push
mov
sbb
pop
xor
mov
dec
inc
mov
add
pusha
mov
stos
add
mov
lret
and
es
mov
mov
jb
shl
mov
das
loopne
imul
fwait
std
pop
fnstsw
cmpsb
fwait
cmp
mov
ret
xor
push
int3
ret
dec
xchg
test
ja
mov
mov
jnp
in
mov
stos
addr16
rcll
mov
and
in
mull
das
jp
mov
repz
xchg
cmp
iret
and
inc
pop
mov
mov
add
push
out
sbb
inc
rcrl
sbb
imul
int
repz
test
mov
mov
jl
and
fdivrs
adc
push
fdivs
xchg
xchg
mov
popa
loop
arpl
data16
mov
lods
lods
repz
lods
inc
int
mov
out
fldcw
sub
je
mov
lret
repz
lock
xchg
daa
lea
mov
lods
dec
fidivrs
sbb
in
or
test
adc
push
ret
pusha
mov
mov
add
aas
cli
arpl
sbbb
dec
xchg
inc
xchg
adc
mov
mov
mov
mov
jmp
mov
cmc
aaa
cmp
out
les
cli
push
dec
sub
int3
mov
xlat
sbb
lretw
cs
test
aas
movsl
movsb
loopne
std
daa
sbb
out
dec
aas
sub
xchg
jbe
lock
lea
sub
fadds
mov
and
ret
dec
call
inc
cmp
sbb
rcll
sub
bound
jp
movsb
rcll
cmp
or
je
xchg
push
subb
pop
sub
mov
shlb
push
fbld
sbb
push
push
js
mov
pop
sar
loope
test
xchg
scas
sbbb
push
jmp
sti
mov
cs
mov
fidivl
sub
lahf
or
in
mov
stos
cmp
and
rcr
stos
popa
add
xchg
test
rorb
rdpmc
aas
cltd
jno
lea
pushf
xchg
sub
jnp
mov
insl
lcall
add
adc
outsl
test
call
pushl
push
jmp
inc
fadds
jmp
ja
enter
mov
and
sbb
aam
ret
and
nop
or
adc
lret
in
mov
outsb
xor
nop
mov
xor
mov
inc
push
mov
inc
mov
mov
fsubrl
push
mov
jae
test
nop
cmc
sub
mov
and
xlat
jbe
push
xchg
fnstcw
mov
clc
stos
lods
push
push
xor
adc
clc
ret
sbb
fsubl
mov
and
cmp
int
push
cmpsl
jge
and
nop
mov
pop
repnz
xchg
jo
pop
stc
pop
data16
cld
out
fwait
xchg
rolb
fwait
inc
ja
mov
or
cs
test
adc
test
jns
push
xor
in
and
lods
in
lods
daa
mov
adcl
or
sub
dec
mov
dec
mov
scas
out
sub
hlt
sub
pop
pop
lret
and
mov
lock
outsb
aaa
sbb
adc
push
in
hlt
fs
pusha
in
pop
das
bound
lret
push
popf
or
jne
mov
rcll
lock
dec
mov
adc
iret
pushf
sti
add
out
aas
push
xlat
adc
incb
cmp
negl
dec
sub
mov
xchg
gs
loope
inc
pop
fists
lods
decb
push
ljmp
mov
jns
mov
cwtl
sub
incb
imul
sub
fucomip
lods
mov
ret
pop
jge
das
xchg
cmp
sub
and
cld
ret
rclb
ss
sbb
mov
jmp
insb
ja
xlat
dec
pop
fs
inc
in
and
push
mov
jmp
inc
push
sub
addl
adc
mov
shll
sub
jmp
cwtl
jl
push
xor
cmpsb
pushf
mov
mov
and
in
call
aad
push
jl
inc
inc
sbb
mov
dec
insl
xlat
daa
iret
out
push
in
jge
fstl
stos
cmp
rolb
ja
test
scas
lret
call
cmp
repnz
pop
mov
pop
aad
in
xchg
cmp
pop
adc
xor
push
adc
xchg
gs
jne
loopne
fisttps
adc
mov
xor
xchg
enter
stos
fwait
push
lds
ja
jge
inc
xlat
sbb
and
imul
mov
jns
or
jae
mov
sub
xchg
insb
cmp
push
sti
push
xor
sbb
or
ror
sub
cmpl
push
dec
dec
jp
xor
addr16
pop
cmp
xchg
aaa
jecxz
adc
cmpsl
jp
sbb
call
aas
mov
push
test
call
test
and
outsl
scas
movsl
mov
call
jbe
fistpl
xchg
jle
cmp
js
xor
cmp
incb
jnp
stc
xchg
jo
hlt
ss
and
push
cwtl
sahf
pop
movsb
and
in
popf
out
pusha
jmp
add
jecxz
or
mov
push
mov
cltd
out
xchg
jns
push
daa
adc
sub
jg
mov
jmp
fwait
js
mov
add
loop
push
bound
insb
inc
jecxz
stc
fwait
pop
fistpll
lock
loope
jmp
and
dec
scas
add
ljmp
mov
sub
inc
or
mov
hlt
aad
push
sbb
mov
fsubl
push
cmp
or
jo
aas
sbbl
xor
inc
popa
rcrl
out
lds
add
xor
fwait
push
mov
jmp
inc
cmp
or
pop
dec
enter
inc
fildl
xor
add
ror
outsb
jg
pop
xchg
dec
cmp
mov
pop
lock
push
sbb
push
mov
push
sbb
pop
scas
cltd
jb
jae
push
xchg
int3
cltd
adc
pop
sub
mov
push
adc
add
pop
scas
mov
push
adc
xchg
cmp
adc
cltd
and
push
lea
roll
push
sub
adc
dec
pop
outsl
mov
fiadds
cmp
sbb
add
call
adc
js
adc
fs
mov
add
push
jbe
mov
and
sub
fcmovnu
cmp
pop
insl
loopne
xchg
lcall
int3
or
jmp
aam
pop
and
xor
sti
movsb
push
cmp
xchg
lahf
cmp
outsb
jp
pop
cmc
sub
outsl
aaa
xlat
ds
xor
clc
shlb
mov
lret
jnp
les
aaa
mov
adc
in
loope
lcall
jns
icebp
adc
movl
dec
xor
aam
sbbl
incb
xchg
stos
pop
cmp
fldl
lea
push
mov
pop
bound
inc
mov
clc
jae
cmpsb
out
xchg
inc
int
insl
es
push
fsubp
mov
xchg
pop
push
ror
out
push
pop
ret
fwait
dec
int
push
movsl
mov
xchg
push
mov
js
sbb
pusha
test
mov
xlat
iret
push
mov
or
add
dec
out
xchg
mov
lds
push
sti
fs
jae
push
dec
or
cmp
add
scas
xor
add
sbb
inc
sbbb
inc
jbe
push
add
mov
push
mov
mov
mov
pop
jmp
inc
jecxz
dec
test
cltd
push
pop
dec
mov
mov
or
xor
flds
subb
pop
jno
mov
ljmp
cmp
mov
pop
pop
jge
rclb
loopne
int3
imul
cmp
xchg
lret
fmul
mov
gs
out
mov
sub
xor
jmp
pushf
cltd
mov
mov
std
xchg
sbbl
mov
mov
mov
leave
pop
jp
dec
xor
lods
pop
mov
dec
adc
jns
jno
mov
pushf
dec
xchg
icebp
rorl
push
outsl
and
call
dec
sub
jnp
jmp
jge
in
shrl
icebp
insb
inc
rorb
push
sarb
shrl
outsl
mov
insl
pop
addl
std
jge
push
pop
adc
mov
and
dec
xor
jb,pn
lcall
mov
sahf
dec
and
ss
adc
aas
push
scas
and
cmp
and
push
mov
push
mov
je
loop
call
pop
mov
or
pop
js
popf
add
jae
mov
lret
push
loop
aam
xchg
jl
or
mov
stos
fsubrl
rolb
mov
xchg
call
adc
gs
or
push
fdivrs
dec
incl
jp
sub
aaa
mov
adc
aad
fcoms
js
dec
push
shl
loope
cltd
mov
insl
in
add
mov
and
cmpsb
sti
mov
dec
push
push
jb
outsb
add
sub
outsl
inc
out
ljmp
dec
inc
cmp
dec
fisttps
daa
xchg
lea
sti
and
cmp
inc
pop
pushf
mov
adc
mov
divb
sbb
sbb
int3
in
xlat
mov
xor
inc
push
or
aaa
psubd
cmp
fdivrs
in
xchg
in
mov
push
clc
and
push
sub
movsl
xchg
movsb
orb
sbb
cltd
dec
push
leave
mov
and
int3
movsb
jns
add
mov
call
xor
int3
lret
shll
inc
jl
out
mov
in
out
jle
push
leave
daa
sbb
aam
andl
testb
inc
pop
fldln2
imul
orps
dec
sbb
sub
adc
hlt
lds
aas
xor
and
cmp
test
daa
mov
sbb
sahf
and
vmread
fs
insb
inc
dec
sbb
adc
ja
sbb
fidivl
sahf
pushf
pop
aaa
jp
xor
scas
mov
jp
out
inc
cmp
inc
pop
leave
pop
add
arpl
mov
pop
lock
pop
enter
stc
mov
fldl
inc
xor
cmp
or
scas
insb
adc
and
std
pop
cli
xor
push
push
jno
sub
mov
inc
dec
and
loopne
stc
mov
cmp
cmc
add
push
adc
clc
xchg
adcb
sbb
dec
repz
inc
test
repz
mov
push
jns
push
ss
ret
adc
jle
push
fiadds
fistps
mov
adc
fstl
jno
stc
bound
stos
and
clc
into
lret
or
and
in
pusha
jnp
and
clc
aad
push
jp
aam
enter
or
mov
jl
or
xor
ja
scas
gs
mov
push
incb
mov
movsl
push
ret
xlat
gs
loopne
mov
push
ja
cmpsb
popf
cmpl
std
push
pop
push
test
adc
cwtl
inc
clc
rep
cli
cmp
out
push
loopne
mov
insb
js
mov
in
add
dec
test
xor
jb
fsubrl
lret
xor
scas
fisttpll
dec
cmp
rcl
push
push
xchg
and
mov
adc
es
das
gs
js
add
cltd
push
push
test
int
pop
mov
sub
pop
popa
cmp
ret
mov
lret
clc
cmp
add
fmull
and
adc
sar
push
mov
mov
mov
fstps
aaa
popf
test
icebp
push
add
ss
pop
clc
push
pushf
add
push
sub
dec
pop
bound
adc
nop
mov
bound
gs
outsl
adc
add
inc
popf
dec
and
repz
xor
sbb
dec
mov
scas
pop
xchg
inc
adc
add
add
add
fucomip
fidivrs
jl
pop
repz
cmpsb
cltd
leave
ret
pop
sbb
mov
cmpsb
sete
xchg
addr16
out
out
jo
inc
or
jmp
jnp
int3
addr16
bound
sahf
sbb
filds
sbb
out
jmp
pop
aaa
dec
insl
outsb
dec
lods
jp
jns
pop
pop
arpl
inc
add
sub
xchg
pushw
rcrl
add
mov
or
and
xchg
sub
jne
xor
testl
testl
sub
push
dec
fnstsw
imul
xor
sub
pop
std
mov
dec
sub
icebp
inc
push
mov
cld
mov
jmp
mov
and
ds
pop
je
cmp
adc
inc
iret
rcrb
lret
out
adc
divl
dec
add
sbb
into
mov
in
and
mov
jb
fldcw
xchg
mov
aad
mov
fbld
xchg
adc
lret
add
sub
jo
gs
test
popa
add
dec
pop
test
pop
popf
push
mov
iret
loope
mov
pop
mov
cmc
outsl
cmp
xchg
test
pushf
out
cmp
repz
adc
fdivr
mov
adc
sbb
fwait
loopne
xor
xchg
jp
call
mov
or
test
push
add
mov
cli
cmpl
xchg
and
mov
fnstsw
aaa
lahf
pop
rep
or
add
int
mov
nop
ret
gs
movsl
inc
ss
cld
mov
cmp
jnp
test
mov
mov
jae
sahf
add
shl
loop
mov
adc
push
dec
jmp
icebp
jo
das
mov
inc
hlt
js
push
cli
sarl
cmc
dec
fistps
mov
adc
sbb
xor
shll
subl
decb
test
imul
adc
fsubl
add
fbstp
mov
enter
jnp
add
imul
jecxz
pop
and
icebp
push
in
sahf
es
inc
ds
mov
fs
push
pusha
jp
in
out
xchg
sar
push
dec
clc
lret
xchg
ja
xor
mov
rorl
xchg
cmpsl
inc
shr
lods
and
lcall
mov
loope
xchg
sub
int
pop
scas
pop
or
js
notb
sub
sub
xchg
mov
dec
call
pop
push
out
iret
inc
int
arpl
push
jl
psrld
mov
push
loope
outsl
pop
fstl
loopne
xchg
test
lret
mov
scas
dec
push
pop
xor
pop
xor
dec
add
clc
cmp
fistl
fmuls
push
mov
nop
add
negl
mov
inc
outsl
out
cwtl
adc
dec
inc
xor
or
ds
arpl
add
stc
add
jge
mov
ds
gs
and
cmp
lock
mov
lcall
popf
push
sahf
mov
inc
sti
pmuludq
inc
sbbb
jae
pop
inc
leave
dec
mov
out
push
repz
jmp
push
add
cmp
sarb
icebp
enter
pop
std
xlat
data16
xor
aam
call
mov
xor
or
jae
jbe
out
cmp
jnp
adc
cli
fnstenv
adc
mov
outsl
mov
xlat
inc
push
mov
mov
cmpsb
pop
push
adc
pop
js
pop
out
jns
push
xchg
popf
aas
fidivs
mov
adc
add
jnp
movsb
sbb
pop
xchg
inc
jb
lock
outsb
push
out
add
mov
sarb
fwait
or
movsl
mov
icebp
lods
scas
xor
rorl
add
xor
xchg
push
out
loopne
daa
mov
testb
cltd
mov
cli
out
add
pop
pop
mulb
add
push
aad
push
ja
add
roll
fbstp
jne
jne
pop
fwait
bnd
movsl
inc
out
sahf
or
push
js
sahf
lcall
mov
arpl
mov
arpl
cwtl
inc
mov
cs
mov
jp
fidivrl
cmp
push
xchg
jmp
jne
sub
mov
mov
xor
lcall
clc
shrl
mov
and
xchg
je
dec
pop
xor
lds
jge
mov
inc
xchg
cmp
cwtl
les
dec
mov
inc
lcall
shlb
dec
sub
pop
cwtl
jnp
xchg
scas
mov
test
jle
mov
dec
push
xor
jns
mov
fdivs
call
dec
out
call
jecxz
jl
clc
fcoml
add
inc
in
push
jl
cmp
in
mov
xlat
mov
mov
flds
add
adc
xchg
inc
or
les
aad
cmp
f2xm1
jae
insb
jno
jmp
ficompl
fwait
test
loope
aam
mov
pushf
daa
out
or
push
icebp
lcall
jbe
jns
and
sarl
or
jmp
orl
fmuls
lods
out
jns
jg
or
inc
sbb
inc
std
fdivl
inc
mov
stos
sub
insb
sbb
shl
outsb
imul
sbb
inc
aaa
xchg
pushf
js
popf
lds
aam
ret
mov
leave
push
push
mov
jb
xchg
movsl
leave
add
movsl
xchg
popf
in
xchg
aad
stos
popa
add
outsb
xchg
stos
fists
fcomps
lods
sbb
mov
rcrl
sub
xor
or
test
and
adc
xchg
lock
pop
inc
test
outsb
adc
xchg
mov
sbb
inc
stos
cld
sbb
pop
fdivrl
mov
adc
mov
lret
in
or
aaa
pop
cmp
in
cwtl
xchg
sar
pop
sbb
gs
test
test
sub
lahf
cmc
sub
out
sbb
jge
xor
aam
fwait
negl
out
mov
sbb
sbb
rorb
int
xchg
fdivrl
push
push
push
xchg
aaa
mov
shr
lret
or
stos
test
inc
fsubs
testb
mov
sbb
stc
dec
mov
push
jl
or
dec
push
and
push
inc
or
scas
arpl
test
sbb
add
push
add
sbbl
mov
xchg
mov
pop
mov
or
sbb
cltd
cs
xor
loope
add
insw
jbe
icebp
push
mov
xchg
and
hlt
mov
cmp
enter
mov
dec
push
xor
cwtl
mov
or
mov
orb
mov
jbe
gs
cwtl
push
mov
jns
xor
push
mov
cltd
inc
pop
mov
adc
push
inc
adc
push
in
push
ret
imul
xor
and
scas
sahf
js
adc
imul
popa
add
cmp
pop
pushf
fildll
mov
leave
imul
jecxz
dec
outsb
decb
gs
leave
push
adc
adcl
call
inc
cmp
mov
orl
fimull
frndint
ret
ljmp
and
pop
out
cli
mov
fimuls
pushf
mov
adc
pop
mov
xchg
cwtl
adc
cmp
rolb
jg
ljmp
mov
mov
and
outsl
cmp
mov
xchg
mov
es
sub
xchg
jle
add
push
add
dec
mov
xchg
mov
push
jl
clc
cwtl
cwtl
loopne
pop
loope
cmp
push
mov
add
push
int3
mov
and
int3
pop
loopne
inc
in
jnp
jle
dec
es
jnp
jmp
in
and
out
mov
pop
cld
pop
cmp
mov
mov
xor
cld
xchg
mov
mov
scas
or
sub
cmp
data16
sub
jbe
les
mov
add
js
push
pop
add
xchg
xor
mov
fstps
xor
rol
mov
adc
jns
cli
push
arpl
les
sbb
popa
add
mov
rcrl
mov
pop
imul
scas
test
clc
and
add
insl
popf
pop
addr16
jb
push
inc
cld
cmp
add
aam
mov
test
add
push
hlt
mov
xlat
mov
cmc
fimull
lahf
mov
movsl
lea
test
or
lods
lds
ret
imul
sbb
imul
lahf
nop
sbb
and
mov
call
mov
dec
dec
cli
sbb
or
test
in
and
mov
push
in
jne
and
adc
and
ficomps
in
or
inc
jne
scas
mov
mov
xchg
jecxz
pop
addr16
rcll
and
fsubs
clc
imul
outsb
enter
pop
outsb
hlt
aaa
add
mov
lds
jns
loop
mov
stc
sbb
int3
popa
lods
in
fistpl
lods
ret
jmp
bound
lds
sbb
les
in
xchg
test
fidivrl
cmp
jbe
cmp
bound
xchg
sahf
jnp
xchg
ret
jno
mov
cmpsl
jecxz
lret
stos
outsb
movsl
adc
or
out
ss
test
push
lods
push
ljmp
lea
xor
mov
jae
push
cwtl
int
stos
test
rcrb
sub
push
mov
push
out
fildll
sbb
icebp
aam
outsl
hlt
mov
push
xchg
lret
loopne
sti
jp
mulb
jns
xchg
add
sub
push
xchg
adc
dec
repnz
cmpsl
lods
cmp
ss
mov
xchg
push
cs
mov
sbb
cmpl
adc
cwtl
enter
sub
fisttpll
adc
imul
je
adc
jbe
pop
xchg
leave
jbe
imul
xchg
jg
cvtps2pd
mov
bound
ret
lcall
repnz
jg
lock
mov
in
sbb
lret
icebp
pop
bound
xor
mov
lahf
not
cmc
xchg
adc
pushf
xchg
dec
hlt
pop
into
lahf
test
fcomps
dec
nop
xor
fstpt
xchg
lcall
xchg
adc
shlb
loope
aad
idivb
lods
insb
inc
data16
pop
mulb
cld
jb
repz
push
or
popf
inc
js
jle
or
into
pop
repnz
dec
xor
jbe
jo
jecxz
orl
add
pop
push
shl
js
movsl
cld
lods
cli
fwait
inc
enter
daa
jno
adc
pop
cmp
or
mov
mov
mov
int
pop
arpl
xlat
js
push
mov
shr
fildll
push
int
mov
out
lret
lods
test
incl
call
mov
jmp
imul
test
dec
cmc
or
mov
xlat
mov
inc
or
mov
sbb
xor
push
and
gs
scas
mov
adc
push
sbb
pop
and
shll
frstor
push
sbb
add
insb
or
pop
fs
gs
cltd
xlat
lahf
popf
repz
les
xor
add
mov
mov
xchg
mov
shl
adc
pop
test
repz
push
add
push
xchg
stos
push
pop
jbe
mov
frstor
pop
xor
inc
fcmovnb
clc
enter
loope
scas
loopne
shrl
jae
pop
popa
ficoms
sub
out
scas
fidivrl
mov
sub
xchg
and
ret
xor
mov
dec
xor
xchg
sub
lods
leave
addr16
stos
add
ror
aaa
jmp
es
xchg
lahf
data16
popa
stc
xor
xchg
sub
mov
pop
gs
mov
icebp
inc
and
sbb
out
or
mov
lcall
imul
xlat
ja
or
push
popf
imul
movsl
cmp
inc
rclb
jecxz
push
stos
cmp
jge
fsts
cmp
and
jnp
ja
inc
add
and
dec
xor
jmp
jb
subl
xchg
scas
int
adc
lods
ljmp
rcr
int3
push
pop
nop
mov
adc
inc
pop
mov
mov
push
push
leave
push
dec
roll
sbb
test
and
in
sahf
adc
mov
test
mov
dec
std
pop
clc
sti
loop
adc
ds
sub
fisttpll
push
fisttpll
inc
xchg
inc
pop
sbb
adc
add
bound
ficomps
jae
addl
outsb
popf
popa
cld
repz
movsb
inc
xchg
xor
sub
xchg
repz
out
cmp
jbe
mov
jne
ret
or
mov
mov
cmpsb
in
or
es
xor
icebp
xor
fdivrl
loop
ret
aaa
adc
pop
leave
mov
sbb
mov
iret
xchg
push
dec
lcall
iret
es
loopne
cltd
adc
add
test
xor
xchg
int
loopne
repnz
push
add
daa
daa
std
data16
pushf
out
repnz
jnp
shlb
sub
dec
inc
shrd
sbb
movsb
mov
in
push
pop
jae
lock
add
divl
icebp
sub
outsl
out
xor
and
inc
cmp
lods
inc
test
stos
pushf
push
mov
shlb
dec
ficoml
fnsave
dec
popa
roll
popf
into
mov
fs
les
movsl
imul
in
cwtl
int3
lock
ja
inc
bt
or
xor
pop
inc
adc
mov
movsl
pop
and
ret
cmp
pop
adc
adc
cmp
mov
mov
ljmp
mov
das
push
fs
mov
out
shlb
jmp
pop
mov
loopne,pn
cwtl
sub
iret
or
dec
xor
mov
icebp
jb
sti
pop
add
mov
push
add
mov
aad
push
xchg
or
xor
outsl
inc
inc
aad
push
sbb
jbe
inc
xchg
loopne
xchg
mov
dec
lea
jle
mov
xor
push
test
sub
xor
mov
mov
cmpsb
clc
and
cld
mov
cmc
cs
sti
adc
adc
subb
xchg
sub
sbb
dec
out
cmc
iret
xchg
mov
or
outsb
testl
lock
rcll
pushf
idivb
or
int3
rorb
jp
mov
adc
jmp
mov
xchg
xchg
aas
out
pusha
daa
cmp
pop
xchg
pop
add
xchg
fadds
dec
addb
loope
pusha
cwtl
movsb
add
ljmp
pop
jmp
pop
push
ret
add
mov
inc
es
arpl
outsl
adc
pop
xor
inc
mov
lcall
sub
fbld
xlat
sub
loope
xlat
and
push
jg
shlb
clc
inc
or
inc
or
pop
and
rclb
imull
das
jp
pop
push
sahf
inc
pop
lea
cld
cld
lea
sub
sbb
push
xor
push
jp
mov
out
js
out
stos
insb
dec
shr
roll
aaa
sub
jns
sub
repz
sub
sar
xchg
or
sub
pop
shrl
dec
daa
add
mov
push
sahf
inc
int
aad
xchg
xchg
xor
lret
push
std
sub
out
mov
or
icebp
popa
arpl
hlt
mov
ret
xor
push
push
pop
stos
mov
notl
and
lret
jl
dec
ja
mov
dec
sbb
inc
je
pop
push
leave
or
add
or
pop
xlat
test
ficomps
ret
movsb
mov
mov
sarb
sub
cwtl
adc
adc
xor
inc
imul
jne
mov
shr
dec
jl
lock
lret
mov
sar
int3
rol
push
push
push
pop
lret
jmp
inc
shr
push
xor
mov
shrl
stos
xchg
or
arpl
nop
lret
pushf
mov
inc
mov
adc
sub
outsb
jecxz
sbb
push
jbe
lea
dec
mov
or
daa
sub
test
jnp
mov
loope
aaa
sti
ret
mov
and
in
sbb
jmp
adc
mov
pop
and
mov
sbb
rcpps
mov
aas
push
inc
popf
stc
scas
sbb
mov
imul
cmp
or
vcvtsi2sdl
leave
movsb
pop
adc
xor
and
pop
shrl
gs
pop
shll
jmp
mov
push
sar
jno
jmp
sub
cli
aad
mov
lcall
stos
xchg
loope
bound
movsb
fldl
adc
sbb
or
jg
scas
flds
push
or
repnz
xor
mov
xchg
jbe
stc
cmp
es
jno
icebp
stc
dec
cltd
xchg
add
or
add
dec
pop
lock
fists
out
xor
adcb
inc
mov
mov
adc
rclb
lock
pop
adc
sar
adcl
repnz
rcrl
push
lea
mov
int
movsb
inc
ficomps
out
push
ljmp
cmp
outsl
insb
push
xor
xchg
mov
and
std
push
pop
xor
sub
loope
repz
push
movsb
imul
dec
dec
clc
popf
stos
outsl
loope
jnp
sub
pop
mov
mov
jbe
orl
mov
ljmp
aad
pop
sbb
sahf
add
std
fnstsw
sbb
mov
data16
loopne
pop
inc
sub
inc
xlat
out
jle
jae
dec
pop
mov
jnp
jns
cwtl
cmp
xor
mov
aam
cmc
or
mov
jo
inc
mov
iret
mov
ja
dec
aam
cli
test
dec
pop
jge
jbe
std
pop
jo
jmp
pop
shll
mov
adc
fcmovbe
stc
mov
adc
imulb
cmp
pop
lods
inc
sub
pop
pushf
sbb
mov
pop
push
dec
mov
or
and
rcrb
xchg
or
mov
mov
add
sti
fldcw
dec
adc
sbb
mov
jo
pop
out
sub
or
scas
rcrb
cmpsb
fidivrs
mov
aam
push
xor
jo
rclb
jl
aas
mov
enter
push
cmpsl
rcl
xchg
popf
insb
repnz
adc
ret
cmpsb
repnz
shl
cs
and
cmpb
dec
add
pop
mov
test
rol
js
int
mov
dec
ret
out
jecxz
in
iret
lods
or
pushf
add
stos
sti
scas
movsb
aaa
and
cmpsl
xchg
cmpsb
add
or
mov
xchg
push
push
es
dec
call
pushf
lds
sbb
lahf
bound
sbb
jo
inc
repnz
sbb
insl
out
insb
aas
mov
add
push
ljmp
lret
ret
xchg
xchg
shll
pop
arpl
mov
mul
fwait
cwtl
jne
lahf
stos
leave
jecxz
rcl
and
in
sub
lcall
pushf
rcrb
jbe
mov
daa
je
lock
sti
inc
out
jns
add
mov
inc
pop
loope
lret
callw
jae
js
lcallw
push
aas
mov
out
xchg
mov
nop
mov
push
adc
dec
and
hlt
loopne
hlt
pop
lods
mov
shlb
add
sti
test
xor
sbb
std
hlt
orl
rcr
inc
je
and
mov
mov
xor
sub
in
mov
or
cmpsb
int3
add
cmp
mov
in
mov
lret
scas
jb
call
mov
nop
aaa
loope
scas
xchg
xchg
idivb
adc
pop
testl
dec
push
lret
sub
or
inc
js
adc
mov
in
mov
or
out
xchg
jg
into
xorl
sub
inc
jae
xchg
xchg
in
add
rorb
icebp
jecxz
jns
xchg
insl
hlt
test
push
pop
ret
or
jmp
dec
ds
mov
sbb
fistl
push
sbb
call
lcall
or
or
and
aad
leave
gs
repz
subb
and
mov
xchg
push
xchg
es
inc
jg
dec
pop
mov
and
jl
arpl
cmp
in
test
fbld
sub
adc
jne
add
test
lret
test
and
mov
add
cmp
iret
jb
cmp
mov
cmp
push
jle
jnp
test
xor
jg
aam
xor
jge
xchg
mov
mov
xchg
dec
outsl
or
into
lea
mov
adc
cmp
dec
std
mov
enter
cmpsl
mov
int
mov
lcall
stc
enter
pop
jge
aam
loop
add
out
aaa
jnp
mov
jb
dec
cld
mov
loopne
lahf
mov
lahf
test
orl
sti
fsubrl
mov
dec
jae
arpl
sti
ret
loopne
push
mov
or
mov
cmp
fldenv
arpl
insl
jle
cli
fsubrp
push
leave
mov
cld
mov
sub
inc
sarb
cmpsb
mov
lods
mov
jge
les
or
pop
nop
add
lods
rorl
cld
cmp
mov
push
cwtl
push
mov
mov
mov
out
fdiv
pop
aam
mov
into
popa
push
jp
popa
test
mov
cmp
fnstenv
cmp
sub
push
lret
jg
cmpsb
or
fdivrp
inc
stos
mov
out
adc
push
jp
fisubl
loope
mov
mov
mov
dec
cmp
lea
mov
mov
push
sub
mov
push
add
jo
sub
inc
nop
int3
mov
sbb
mov
and
popf
inc
int
mov
andl
popa
push
nop
insl
sub
mov
cmc
scas
test
pusha
push
pop
or
in
loopne
mov
fs
mov
inc
push
sti
ljmp
roll
in
insb
push
inc
sub
inc
push
jg
dec
cltd
dec
jnp
out
and
outsl
cmp
mov
clc
xchg
arpl
outsl
xor
and
ret
mov
xchg
inc
xor
dec
sti
popf
notb
pop
pop
pop
and
jge
xchg
data16
insb
daa
mov
data16
in
cmp
pusha
in
bound
lret
mov
mov
add
inc
lock
out
lock
pop
mov
mov
shlb
adc
xor
rcrl
mov
sti
pop
dec
lcall
repnz
jmp
cmp
add
jnp
sbb
ljmp
lods
jmp
adc
inc
cs
push
mov
cmp
pop
sbb
lods
cli
mov
adc
mov
ljmp
push
sbb
out
divl
cmp
jmp
dec
nop
repz
and
loopne
sbb
mov
push
lret
jbe
mov
xchg
mov
aas
lcall
jb
ljmp
jle
mov
mov
mov
mov
mov
add
cli
and
fwait
les
js
aam
scas
addl
fs
and
mov
cmp
dec
jmp
jb
xor
dec
push
int3
push
out
leave
sti
xorb
mov
popf
mov
adc
inc
pop
jb
mov
jmp
and
add
mov
push
fldcw
mov
cmp
leave
lock
xor
icebp
sbbb
sbb
adc
test
mov
add
sti
movsb
adc
mov
outsl
out
jbe
mov
pop
call
fdivrs
push
xchg
pushf
ja
stc
sub
out
mov
mov
inc
sbb
mov
pop
push
jmp
popa
jge
ret
sbbb
push
inc
jae
nop
pop
mov
es
xchg
out
mov
test
sar
add
cmp
xchg
add
lods
sbb
idivl
mov
dec
sub
cmpb
imull
and
pop
fsub
mov
dec
stos
loopne
out
sub
repz
fdivrs
aaa
ljmp
sbb
fidivrl
dec
pop
ret
mov
xchg
test
sbb
insl
jmp
mov
out
fsts
int3
jns
cmp
scas
in
loop
icebp
xlat
leave
fisubrs
dec
test
out
adc
leave
adc
jmp
int
mov
fmul
cwtl
jge
scas
jmp
stos
pop
and
cmp
call
mov
loopne
or
xchg
mov
dec
jae
sbb
and
mov
cmp
adc
mov
sub
mov
ret
xor
out
mov
dec
xchg
arpl
icebp
test
loop
pop
dec
imul
cmp
dec
xlat
les
mov
xor
lret
jmp
fcom
pop
leave
dec
std
arpl
ret
arpl
repz
int3
insl
sbb
mov
mov
xchg
sbb
jp
je
imull
daa
or
pop
stos
jge
pop
ret
push
sti
mov
inc
dec
push
cli
ja
aaa
mov
inc
arpl
jnp
data16
cli
nop
dec
mov
insl
dec
sti
cs
fdivl
mov
in
cmc
shlb
and
dec
push
cld
jno
mov
andl
xchg
adc
xchg
cwtl
aam
shll
jbe
popa
mov
mov
clc
cld
cmp
pop
mov
ret
cmc
pop
or
or
mov
in
adc
mov
cmp
jb
push
ret
dec
and
jp
cmp
jl
or
loope
mov
sub
mov
jne
pop
leave
cld
jb
mov
mov
stos
mov
popa
int
jg
xorl
insl
adc
mov
push
gs
std
xor
pop
jbe
xor
push
jo
ficompl
scas
cmp
call
mov
fisttps
aaa
xchg
add
sbb
inc
mov
je
and
mov
insl
and
sbb
or
mov
jno
js
stc
mov
and
subl
pop
xor
mov
rcll
mov
jae
pop
xor
push
mov
mov
mov
pushf
cs
mov
dec
mov
mov
out
pusha
mov
push
adc
push
pop
std
call
cli
inc
aam
or
dec
sub
mov
fwait
xor
imul
dec
mov
sarb
ss
pop
or
sbb
sbb
mov
outsb
cli
xchg
in
ja
test
push
jno
push
insb
in
xchg
shr
sbb
mov
pcmpeqw
pop
ss
adc
cmpb
lret
insl
push
adc
cwtl
imul
fwait
push
call
sub
push
pop
lods
loop
imul
testb
add
and
push
jae
cwtl
xchg
pusha
clc
cld
push
adc
dec
push
xchg
xor
popf
shrb
insb
adc
sarl
lock
cmp
repz
aaa
cmp
mov
inc
push
mov
loope
popf
add
das
adc
lahf
lcall
pusha
out
jno
out
lock
dec
mov
xor
popa
adc
daa
mov
out
adc
add
xchg
addl
inc
pushl
je
nop
cmp
cwtl
das
fwait
sub
ss
xchg
lret
adc
mov
jle
es
stos
pop
imul
lcall
imul
in
adc
leave
loop
mov
sub
popf
sbb
out
loopne
xor
rorb
and
cltd
pusha
jns
xor
fcoms
test
pop
sbb
sub
lret
cmp
fidivrs
in
mov
ficoms
xlat
sbb
clc
pop
or
mov
inc
pop
or
dec
leave
nop
xchg
rcll
aam
mov
sub
mov
mov
and
cltd
mov
xchg
in
ljmp
and
mov
fwait
inc
stos
inc
pop
jp
movsl
pusha
imulb
pusha
call
pushf
ret
jno
add
xor
sbb
hlt
push
icebp
xor
pop
nop
mov
sub
fisttpl
push
fnstsw
dec
xchg
xchg
neg
jle
cmp
das
lods
push
jae
cmc
sbb
jge
jae
subl
je
dec
xchg
js
sbb
incl
lock
lret
repz
and
xchg
push
data16
pop
or
call
adc
xchg
jg
mov
jnp
push
aad
sbbl
dec
adc
nop
cltd
mov
loop
mov
jg
loope
roll
cmp
dec
call
lret
sbb
mov
jge
ljmp
push
pop
outsb
out
mov
pop
mov
std
test
inc
shrb
jno
cmp
mov
jo
xor
int
ja
jp
pop
cmpsl
push
scas
adc
or
jp
mov
and
jg
leave
mov
jmp
addb
lahf
push
push
ret
mov
mov
jne
or
icebp
xchg
mov
jbe
loopne
sarb
dec
fsts
cmp
or
inc
add
mov
mov
cvtps2pd
clc
repnz
xor
adc
repz
data16
jge
sti
adc
and
stos
movsl
sub
test
daa
std
fmull
pushf
xor
dec
dec
ds
dec
mov
daa
mov
inc
jns
or
sahf
mov
pop
or
add
inc
loope
cwtl
cmp
sub
dec
push
in
stc
insl
add
xchg
arpl
shlb
jbe
mov
fsubrl
lock
outsb
push
sub
mov
int
pop
dec
dec
add
adc
and
mov
cwtl
sub
pop
mov
or
adc
push
sbb
sahf
mulb
cmovl
fadds
sub
sub
ss
test
jl
daa
adc
push
xchg
inc
mulb
test
lret
hlt
fiadds
movsl
push
or
xchg
pop
in
stos
pusha
bound
lcall
adc
mov
shrl
stc
cltd
das
fisttps
popf
add
mov
fistpl
pmaxsw
xchg
pop
jp
jae
pop
xchg
sarl
xchg
hlt
imul
jge
in
loope
out
jno
add
mov
das
je
aas
neg
ljmp
sub
adc
jge
icebp
cmp
sbb
aas
xor
in
daa
jp
jne
fidivrs
pop
test
sub
adc
xchg
or
inc
movsb
xchg
int3
xchg
cwtl
addb
ljmp
push
fs
xlat
mov
loope
stc
jg
pop
clc
sbb
into
sahf
mov
add
inc
sbb
sub
xor
inc
sti
or
aam
std
int
ljmp
dec
xchg
in
sub
in
mov
cmp
leave
aas
mov
sbb
sbb
loop
cld
mov
and
pop
xor
sub
jecxz
jbe
sub
push
push
out
cmp
mov
inc
mov
outsl
or
daa
xchg
in
mov
or
insl
addr16
mov
cs
lods
jmp
out
fldt
sbb
jg
xor
jne
dec
mov
cwtl
xchg
inc
movsb
cmpsl
andl
jecxz
popa
add
js
mov
dec
push
fdivs
iret
mov
xchg
js
les
push
mov
push
xchg
pop
adc
cld
stos
xor
push
push
and
mov
inc
mov
pop
inc
int3
dec
fwait
stos
insl
jecxz
lcall
sbb
sahf
push
mov
cld
mov
movsb
mov
lock
push
push
jns
out
jp
out
push
push
leave
fisttpll
push
push
adc
pop
scas
xlat
jg
xchg
test
into
and
pop
cltd
pop
adc
pop
sbb
push
mov
dec
outsb
xchg
faddl
addr16
mov
cmp
cld
and
std
incl
dec
outsl
ret
inc
pop
push
or
sbb
and
lret
daa
andl
pop
sbb
imul
cmp
ret
mov
pop
push
inc
inc
xor
xor
inc
popf
add
pop
mov
mov
jnp
cmpsl
xor
aaa
inc
leave
dec
sub
loope
dec
cmp
mov
mov
push
sahf
int3
js
stos
dec
xor
xchg
xchg
addr16
sub
addr16
dec
cmp
dec
adc
mov
out
xchg
or
cmp
fbld
daa
sbb
push
repz
mov
in
jno
cltd
test
lea
pop
xchg
lcall
pop
adc
xchg
mov
lea
mov
mov
fstps
and
mov
aas
int3
xchg
dec
mov
inc
ficoms
cmpsl
jno
stos
cmp
mov
mov
cltd
imul
push
lret
sbb
and
lcall
ret
decb
xor
shll
scas
test
ret
dec
mov
xorb
hlt
push
inc
or
or
add
sarb
mov
push
mov
iret
imul
adc
cld
inc
test
jae
inc
and
pop
imul
dec
xchg
sbb
cmp
dec
dec
mov
pop
cmp
shlb
xchg
dec
ffreep
jne
mov
addr16
push
movsb
mov
jne
cmpsl
mov
and
push
cmc
and
ja
lds
sbbl
aam
xor
xchg
sub
add
adc
pop
cmp
cmpl
inc
mov
and
outsb
inc
imulb
decl
rclb
cmc
or
jo
push
add
mov
push
mov
mov
and
jle
bound
aas
jne
test
pop
clc
mov
cmp
adc
push
mov
cmpsb
mov
mov
xor
jb
mov
jmp
mov
ja
mov
push
cmp
mov
adc
add
or
push
fidivrl
jne
pushf
xchg
push
daa
dec
in
or
inc
fldcw
iret
cmpsb
cli
out
jbe
jecxz
lahf
add
testb
and
data16
jo
inc
fisttpl
loopne
jne
addr16
popl
add
out
cli
mov
sbb
test
imul
decb
cmp
mov
hlt
xor
inc
sti
loop
in
fadd
jb
ret
mov
fdivs
mov
pop
inc
push
xchg
and
inc
sbb
sbbb
mov
jecxz
cmp
cmp
sbb
mov
pop
mov
inc
pusha
cli
dec
test
xchg
pop
adc
pop
push
mov
addb
cli
ja
arpl
filds
loop
aaa
mov
pop
mov
mov
into
or
push
push
pop
pop
test
sti
xchg
jne
xchg
xor
mov
test
dec
ret
in
dec
push
jmp
pushf
xor
repz
jb
test
push
jbe
sbb
sbb
daa
and
ja
mov
ds
out
stc
jb
addr16
cwtl
jge
dec
int3
in
push
jmp
lea
test
mov
pop
adc
addb
imul
dec
xchg
insb
outsb
lock
xchg
std
mov
xor
fbld
mov
jl,pt
or
aam
cld
out
adc
ljmp
pushf
daa
lret
jnp
int
and
sbb
xor
cmp
push
xchg
inc
out
mov
push
sbb
lret
jbe
ret
xchg
test
push
dec
fs
clc
hlt
xor
push
jo
cli
cs
popa
aad
aas
in
mov
mov
add
into
cmp
dec
movsb
and
mov
sbb
fidivs
lcall
adc
fiadds
lea
sub
mov
lret
ffreep
mov
mov
mov
mov
xchg
cli
mov
push
or
aas
mov
out
mov
and
mov
fildll
cmp
icebp
cltd
mov
outsb
jns
lds
into
fimuls
data16
xchg
ret
and
fisubs
add
mov
mov
add
push
add
push
mov
jp
xor
mov
cs
jmp
arpl
xchg
ficoms
cmpl
dec
into
rcrl
sbb
push
jge
adc
inc
daa
ror
sbb
cmc
loope
push
or
xor
insl
fs
fwait
icebp
push
outsb
push
roll
or
fadds
fsubl
ret
adc
inc
adc
pop
fprem
std
adc
aam
adc
ret
scas
divb
or
jecxz
inc
jg
xor
cli
test
sub
xchg
xor
testl
lret
mov
push
pop
dec
inc
cld
movsb
call
arpl
mov
sub
xchg
sarl
push
out
and
sub
repz
js
mov
shlb
sbb
push
and
mov
jne
sbbl
mov
imul
repnz
int3
mov
jnp
outsl
jl
divl
aam
fsubrs
push
jo
int
dec
in
cmp
add
ds
lea
call
sbb
insb
adc
in
es
push
xorb
pusha
mov
pusha
jecxz
pop
rol
mov
sbb
push
mov
aad
pushf
fs
lds
xchg
addr16
sub
push
mov
ret
test
xchg
movsl
fistl
js
cltd
push
xorb
adc
push
push
cmp
adc
jns
mov
enter
or
push
adc
mov
in
mov
dec
push
mov
xchg
clc
sbbb
xor
jg
mov
test
cld
add
std
mov
shr
fidivl
cs
mov
addl
xchg
xchg
out
pop
ds
sub
adc
mov
pop
insl
icebp
add
push
sub
inc
dec
jle
and
pop
inc
out
ret
into
cmp
fstl
push
jge
dec
sahf
or
mov
dec
in
xor
imul
push
sbb
add
mov
lock
fsts
push
jbe
in
xchg
and
jmp
call
jno
pusha
sbb
test
and
fdivs
mov
xchg
xlat
jecxz
lret
pop
sahf
sahf
xor
mov
dec
pop
and
push
sub
shll
mov
jae
cmp
loope
ss
add
dec
scas
cwtl
cld
outsl
sub
pop
sbb
cmp
ret
dec
sub
in
gs
and
cmpsl
pop
cmp
loop
push
mov
movsl
mov
xchg
push
mov
mov
cmpsb
mov
cmp
ljmp
pop
add
outsl
jae
lods
pushl
sub
mov
stos
nop
cld
loop
ss
fimull
pushf
or
mov
mov
aaa
cmpsb
sbbl
or
jecxz
pop
in
in
popf
mov
sbb
pop
jae
mov
jno
push
loope
dec
jp
icebp
cmp
loopne
pop
pop
sbb
push
inc
cwtl
cmp
stos
out
xor
ja
aad
pop
dec
ja
imul
and
fisttpl
ja
addr16
xchg
pop
rcll
add
add
xor
std
mov
das
and
mov
aam
jbe
ja
or
lcall
jge
push
dec
gs
sahf
stc
jno
or
lahf
cli
inc
push
mov
xlat
aam
pop
popa
insb
lods
dec
ret
sbb
mov
and
in
lock
pop
or
lods
dec
mov
mov
dec
shll
gs
jmp
arpl
push
sub
leave
xchg
into
inc
rorl
sbb
enter
out
sbb
std
fwait
icebp
adc
pop
adc
loop
jbe
into
mov
jge
leave
mov
sbb
stos
pop
or
add
imul
mov
cmp
pop
movsb
test
pop
je
stos
push
or
and
mov
xor
fs
iret
xchg
jmp
and
and
xchg
arpl
rcl
pop
lock
test
addb
push
out
add
mov
mov
cmp
sub
filds
sbb
outsl
ljmp
dec
pop
sub
iret
subb
addr16
in
jg
inc
mov
fnsave
sub
out
adc
mov
mov
jo
enter
popa
jl
push
loope
sbb
imul
fdivrl
out
jne
dec
jne
fdivs
add
pop
shlb
stos
lods
cmp
insb
inc
mov
lahf
mov
cmp
lret
mov
add
xor
pop
mov
jge
cld
dec
ja
imul
and
dec
cmp
cltd
fst
inc
mov
jecxz
repz
scas
xor
adcb
mov
add
jnp
jle
push
mov
sub
dec
int
ret
jmp
nop
fadd
mov
dec
dec
cmp
and
notl
sti
inc
push
popa
andl
dec
addr16
mov
mov
scas
inc
jmp
shlb
xor
push
addr16
loopne
or
xor
aas
and
inc
je
adc
test
adc
jmp
sbb
imul
and
test
push
jne
adc
xchg
into
jmp
rcr
inc
into
mov
pop
xchg
inc
dec
insl
lcall
mov
mov
adc
das
mov
shlb
xlat
int
cmc
mov
aam
fisubs
adc
sbb
daa
add
ja
mov
mov
addr16
iret
loope
xor
push
mov
rolb
insl
stc
sub
inc
add
adc
loopne
iret
xchg
cmp
and
jecxz
ret
fisubl
add
add
daa
and
jno
inc
movsl
push
lcall
dec
cmc
xor
cmpsb
cwtl
fidivl
mov
mov
add
and
test
cli
add
aas
xchg
adc
cmp
adc
fstps
fidivs
lock
sub
sbb
gs
arpl
std
sbbl
mov
sbb
cld
cmovs
imull
int3
icebp
mov
rcl
shrb
jae
ret
jmp
sbb
xchg
mov
orl
sbb
mov
popf
jo
sbb
cmp
ret
or
popa
push
xor
enter
xchg
pop
lods
imul
lea
push
push
aad
gs
dec
in
pop
in
dec
or
mov
ljmp
into
cmpsl
insl
roll
daa
call
push
cmp
flds
repz
xchg
dec
inc
sti
jmp
lods
cmpsb
outsb
flds
adc
lcall
mov
mov
push
or
mov
lcall
loop
sub
sub
xor
cmp
sahf
addr16
add
repz
mov
stc
sbb
in
imul
adc
cmp
stos
fs
stos
dec
addr16
jecxz
or
cmp
icebp
mov
pushw
lahf
mov
mov
popf
inc
stos
fimull
movsl
in
sub
sub
cmpsl
dec
mov
rcrb
xchg
mov
ja
lcall
sub
push
pop
push
xlat
pop
fstpt
dec
cmp
fdivl
cmp
rclb
mov
nop
cmp
rorl
fcomps
popa
mov
xchg
rcll
mov
ds
loope
imulb
cli
cmp
lea
loopne
cmpsb
fisubs
stos
scas
pop
jmp
dec
xlat
mov
jnp
pop
pop
fisttpll
and
and
stc
adc
sahf
roll
cld
test
mov
dec
cmpsb
leave
xchg
cltd
mov
add
push
fstpt
pop
and
clc
mov
stos
jmp
lahf
sub
sbb
or
pop
jne
test
cli
sub
inc
int3
ss
inc
jnp
sahf
aaa
xchg
xor
mov
xor
adc
mov
mov
xchg
out
aaa
sbb
cmpsl
xor
sar
int
jne
jae
mov
cmp
mov
jns
lahf
shl
sbb
ret
dec
stos
mul
into
cmp
adc
adcl
inc
inc
add
shl
cmpsl
dec
rcr
fdivs
inc
ss
mov
outsl
push
cmpsb
mov
dec
pop
lock
test
jo
mov
mov
sbb
adc
xorb
jmp
mov
insl
xchg
dec
dec
sub
inc
aam
sbb
xchg
pop
jg
pop
jns
mov
clc
das
cmp
sbb
and
xor
cmp
lahf
jb
push
repz
bound
scas
push
pop
mov
sbb
ss
mov
xlat
in
ret
inc
cmp
inc
cmp
aas
leave
ljmp
imul
cmc
lcall
arpl
push
in
insl
lret
sarl
lcall
push
adc
xchg
push
aad
mov
rcrl
dec
sub
in
adc
inc
fisttps
xchg
je
pusha
aam
bswap
pop
adc
add
pusha
in
fistl
pop
int
lret
xchg
jb
data16
outsl
mov
mull
inc
jae
xor
std
lcall
into
xchg
jmp
cmc
call
inc
mov
xchg
popa
xchg
push
xor
movsb
push
daa
sti
push
push
push
out
cmp
add
nop
or
stos
daa
and
inc
dec
push
aad
pushf
cwtl
and
out
mov
aad
mov
popa
clc
fsubrs
out
cwtl
popa
inc
popf
and
mov
into
or
lret
cmp
int3
push
sub
cwtl
fs
sub
dec
cmpsb
cli
scas
jmp
stc
cmpsl
cltd
push
fadd
add
stos
and
ljmp
out
xchg
and
scas
shr
push
jo
ret
xchg
loop
js
mov
mov
outsl
lahf
pushf
adc
push
mov
pop
xchg
out
cmp
push
push
push
sbbl
iret
jns
cmp
aas
gs
pusha
inc
sub
test
sahf
imul
push
push
aas
pop
sbb
push
or
mov
mov
imul
add
push
ja
fcompl
mov
cli
push
cmp
jo
imul
test
cmpsl
sbb
repnz
in
rcrb
xchg
das
insl
xchg
in
and
stos
mov
xchg
jp
inc
ldmxcsr
incb
and
lcall
je
pusha
mov
ja
fs
jmp
dec
cmp
cli
dec
mov
and
bndldx
and
add
mov
orb
loope
fsubl
loopne
test
iret
sbb
cmp
mov
push
dec
mov
out
lds
sbb
adc
leave
out
push
lahf
cmp
sbb
mov
dec
shrb
sbb
mov
inc
shlb
push
sbb
fdivs
mov
adc
inc
add
stos
mov
mov
jle
dec
and
inc
jle
xorb
xchg
dec
inc
inc
pop
jl
das
stos
loope
js
movsb
in
cli
das
and
repnz
js
icebp
icebp
sub
dec
cmp
push
add
addr16
jecxz
outsl
jmp
xor
mov
lds
dec
mov
mov
adc
push
fiaddl
lods
inc
int
mov
sbb
add
cmp
imul
scas
inc
stc
sub
fwait
jnp
inc
outsb
in
or
or
scas
fwait
cmp
xor
clc
jae
inc
push
inc
xorl
cmp
add
xor
stos
leave
dec
xor
add
sbb
imul
or
std
and
pushw
jle
dec
mov
sbb
sub
lahf
push
adc
stos
jge
jb
mov
adc
sbb
inc
dec
push
cld
stos
pop
jnp
adc
cs
dec
call
loop
mov
adc
cmp
dec
pop
push
pop
or
xor
das
ror
fistps
mov
xor
outsb
insl
pop
xchg
fdivrp
lcall
mov
imul
and
cmp
inc
scas
mov
jne
add
imul
xchg
mov
fcomip
ds
enter
lods
push
xchg
cli
call
cmpsl
popa
add
sub
cmc
in
popa
push
dec
stos
jno
ret
push
pop
mov
sbb
inc
jns
adc
mov
adc
dec
dec
test
add
inc
cmc
pop
mov
push
aad
pop
and
loop
movsb
shlb
dec
cmpsb
cmpb
mov
out
fildll
popf
xor
bound
sub
mov
cmpsl
out
mov
cli
insl
mov
daa
insb
xor
orb
icebp
mov
push
fwait
mov
rcr
and
adc
fidivrl
int3
dec
loop
call
push
mov
dec
imul
outsb
xchg
movsl
js
xchg
stos
les
repz
stos
sub
insb
or
loop
rol
ss
mov
jle
sbb
sbb
inc
sahf
pop
data16
adc
test
mov
jns
push
mull
frstor
mov
or
lret
loopne
movsl
test
dec
into
inc
jmp
ret
pop
or
gs
xchg
and
test
scas
sbb
fdivl
cwtl
jl
xor
lods
insl
mov
pusha
jbe
xchg
mov
cmpl
roll
lret
test
mov
scas
repz
or
bound
add
push
sbb
jb
xor
dec
xchg
and
sahf
js
pop
jne
fcmovbe
mov
pop
aas
mov
sbb
mov
push
push
int
fcmovb
cld
movsl
sti
push
xor
fcompl
dec
mov
stos
test
fdivrp
cmp
imul
jl
cmp
paddd
dec
inc
pop
add
dec
xor
pop
jae
mov
dec
sub
test
test
mov
cmp
cmc
jecxz
pop
xchg
or
dec
lock
popa
jo
xchg
lea
fwait
jecxz
arpl
inc
xchg
imul
pushf
add
sub
mov
lea
pop
adc
into
xor
adc
lods
enter
sub
push
cmp
out
adc
cld
int3
sbb
lods
cmp
cmp
insl
mulb
sahf
insb
jge
xchg
pop
cmp
cmp
push
stc
jne
fiaddl
stos
xchg
push
xchg
stc
in
push
mov
add
or
fldpi
aas
xor
and
or
pop
mov
jbe
dec
scas
pop
add
in
in
inc
outsb
mov
add
fdivl
sahf
lods
inc
and
lret
fnstenv
cmpsb
out
dec
mov
pop
xor
pop
push
add
insb
pushf
icebp
daa
sbb
in
addr16
test
inc
xor
dec
imul
inc
jp
dec
jb
ret
or
mov
out
cmpsl
xchg
add
mov
test
cmc
jno
popf
sub
xor
mov
sahf
mov
jp
fimuls
inc
adc
call
pusha
addr16
xchg
mov
mov
pop
ficompl
inc
cmpsl
push
out
fldt
cmc
or
push
out
xchg
icebp
mov
xor
data16
xchg
pop
movsb
andl
and
fsubp
loope
out
ret
rolb
dec
xchg
clc
pop
sbb
jne
mov
test
faddp
in
jnp
dec
xchg
fwait
into
push
ret
sub
adc
repnz
std
shll
inc
xchg
sahf
push
in
mov
mov
aas
setg
mov
mov
pop
and
sub
imul
fldenv
aas
lds
xlat
dec
cmc
pop
adc
test
loopne
xchg
fstp
das
ja
nop
xor
clc
rcrb
scas
jnp
loope
sbb
mov
adc
shr
nop
popa
dec
pop
dec
repnz
shll
or
gs
jge
rcl
into
lods
mov
mov
fucom
sti
mov
movsl
imul
or
mov
and
stos
mov
stos
sbb
or
cmp
ror
jl
or
call
or
sbb
pop
mov
dec
repnz
push
and
fs
pop
arpl
sbb
mov
gs
jmp
sbbb
dec
loope
dec
sbb
inc
jp
int3
jo
outsb
aad
nop
inc
xor
mov
adc
jo
jecxz
xchg
mov
fisubrl
fsubr
xchg
or
aaa
outsl
sahf
call
push
ds
ficomps
es
fisttps
pop
or
outsl
out
push
sahf
pop
sub
int3
lret
or
push
lds
int3
lahf
int
push
jg
pop
lock
popf
out
mov
scas
jecxz
repnz
xchg
mov
xlat
cmp
sbb
lds
call
add
sub
jmp
aas
push
adc
and
dec
and
inc
loop
cmp
es
sbb
fs
ja
mov
jno
cld
add
mov
fisttpl
ds
mov
sbbb
add
negl
jg
dec
pop
nop
shlb
inc
cmp
mov
int
mov
pushf
ffree
jle
ds
loop
cmp
out
adc
push
add
enter
mov
xor
mov
scas
mov
pusha
dec
push
push
fs
bnd
sbb
jbe
sub
xor
mov
sahf
icebp
cwtl
mov
push
movsl
lods
lcall
clc
mov
lcall
add
mov
int
sbb
jae
jp
subl
adc
orl
sbb
fwait
push
mov
pop
iret
cmp
std
mov
adc
rcpps
fildl
dec
mov
add
cs
fwait
xchg
stos
mov
cs
xor
gs
mov
mov
scas
nop
and
es
xchg
stos
adc
cmp
mov
xchg
or
out
aaa
ficomps
and
sbb
mov
dec
into
xchg
add
push
jae
xchg
js
xorb
jl
lods
orl
cmp
jecxz
mov
aad
xchg
pop
das
push
dec
pop
movsb
pop
add
sarl
sbb
pop
xchg
xchg
cmp
pop
and
mov
into
orl
jno
insl
rcrb
imul
and
outsb
int3
xchg
ljmp
push
clc
mov
cmpsl
xor
pop
cltd
xor
or
inc
imul
ret
push
inc
aam
jae
stos
cltd
pop
test
inc
sub
dec
int
ss
rclb
or
and
cmp
sub
dec
pop
dec
andb
repnz
sbb
add
push
out
pop
jnp
push
icebp
fsubrl
cmp
aaa
cli
mov
arpl
mov
jl
or
in
rclb
mov
je
sbb
shrb
aas
shrb
dec
cmpsb
shlb
stc
out
into
mov
mov
in
call
std
dec
add
je
push
xor
aaa
jmp
cmp
xlat
push
add
mov
int
or
sub
sbb
in
int3
sti
loopne
divb
jo
mov
daa
dec
aas
jmp
inc
out
into
xor
inc
or
jl
faddl
insb
aaa
nop
fwait
aad
pop
mov
icebp
dec
jb
xchg
sbb
add
jnp
xor
mov
sbbb
imul
sbb
in
mov
pop
imul
ljmp
adc
jno
sti
mulb
scas
fidivrl
fisubs
cmp
xorl
mov
stc
movsl
xor
xor
dec
sti
in
cld
sahf
or
call
ret
inc
adc
jne
xlat
loope
push
lahf
pushf
or
shlb
jl
divb
mov
jnp
stc
xchg
rclb
cmp
xor
mov
adc
fisttps
pushf
push
shld
scas
pop
xchg
hlt
adc
xor
js
jge
or
mov
insb
lret
out
sbb
ficomps
mov
sub
ja
scas
sub
cmp
mov
xchg
fistps
xlat
adc
cmp
or
stc
rolb
cs
lods
xchg
push
dec
jge
out
mov
push
mov
xchg
pop
aaa
sbb
je
cld
mov
xor
ds
imul
xor
in
jmp
stc
pop
adc
xchg
movsb
stos
cld
sub
cmpsl
sarl
cld
dec
in
xor
loope
mov
sub
adc
jecxz
adc
mov
xor
in
movsl
mov
or
jl
dec
cmp
xor
or
insb
xor
fwait
push
push
insb
outsl
push
ss
jbe
add
push
scas
mov
pop
push
mov
jmp
pushf
fwait
cmp
cmc
enter
addr16
out
ret
fcoml
mov
push
push
cltd
push
adc
stos
idiv
dec
aaa
jno
push
cltd
arpl
sbb
inc
or
xchg
push
addr16
push
sti
in
cld
cmp
arpl
iret
and
lret
std
ja
add
scas
xchg
sbb
imul
les
jecxz
inc
and
loop
sub
cwtl
testl
pop
dec
movsl
push
popa
jno
mov
pop
push
stos
sub
out
push
fwait
lea
movb
jecxz
mov
aas
adc
cld
in
popf
and
and
add
adc
cwtl
jmp
or
stos
adc
sti
lods
orl
adc
and
dec
mov
aas
pop
mov
lret
xor
mov
pop
inc
xor
bound
enter
push
mov
shl
pop
lret
push
mov
mov
or
dec
ja
pusha
mov
or
or
sub
mov
jo
rorb
jb
add
imul
cmpsl
xchg
into
pop
imul
lahf
ds
mov
push
mul
xchg
shrl
cwtl
push
and
xchg
popf
testl
js
mov
cmpsl
mov
ret
sub
shrl
xchg
cmpsl
pop
mov
or
mov
lahf
push
pusha
inc
mov
cs
xor
ret
arpl
xor
repz
out
sub
mov
xchg
pop
mov
outsl
idivl
cmc
rcrl
sti
xchg
repz
push
rcl
sub
daa
aam
sbb
dec
addr16
cmpsl
imul
pop
xor
sbb
xor
gs
lods
mov
xchg
aam
sub
mov
fucomip
inc
xor
dec
push
pop
jae
and
xchg
lods
nop
xor
xchg
mov
cmpsb
add
lods
mov
xor
addb
sub
aam
adc
xchg
test
adc
movsl
lea
call
fs
call
je
lret
and
fdivs
sbb
pop
ds
loope
mov
jmp
sub
icebp
and
inc
mov
pop
or
hlt
pop
fs
std
xor
repnz
add
and
xor
daa
sbb
jnp
dec
xchg
push
insl
mov
dec
adc
jb
or
lret
shll
testl
or
call
sbb
fstpl
arpl
shll
xor
dec
shr
mov
cmp
ds
movsl
inc
jg
mov
sub
add
jo
fimull
stos
fsubr
sbb
add
xor
das
mov
cmp
fisubrl
pusha
leave
xchg
fistpl
sub
rolb
punpckhbw
cmp
pusha
enter
cmp
dec
cmpsb
or
std
aas
loope
mov
repnz
add
stc
pop
sbb
rcrb
cwtl
dec
roll
jp
push
xchg
fcomp
out
orl
add
lfs
mov
test
sub
fsub
mov
addr16
outsb
nop
into
iret
fsubl
mov
stos
pushf
cmpsl
mov
icebp
pop
in
push
pusha
jmp
aad
das
push
scas
adc
adc
loope
jmp
cmp
mov
scas
mov
into
loope
jle
and
in
gs
out
xor
pusha
arpl
aam
fisttpl
lods
cmpl
xor
lds
and
or
cwtl
shrb
fcmove
das
scas
sbb
mov
cmc
dec
das
jg
lea
mov
jl
out
inc
cmp
add
mov
scas
mov
nop
adc
mov
aad
sub
pop
ret
or
and
sbb
push
pop
mov
mov
mov
nop
mov
pop
adc
jbe
hlt
shl
jbe
insl
ss
xlat
xchg
lea
mov
inc
imul
mov
lock
fisubrs
lret
xlat
je
jecxz
pop
jb
sbb
push
pop
scas
xlat
loopne
and
mov
jne
aam
push
ljmp
daa
add
and
lcall
outsl
scas
mov
outsl
shr
sub
lods
mov
bound
lahf
sub
xchg
mov
fisubl
push
push
jns
in
dec
mov
bound
shrb
mov
dec
and
test
stos
nop
sti
cmc
xlat
inc
sbb
fidivs
mov
je
test
push
dec
mov
push
cmc
hlt
or
mov
fildll
inc
ret
cmp
sahf
jne
lahf
js
sub
pushf
in
mov
jae
xor
xor
stos
cmp
jno
int3
lret
sar
mov
loope
pop
test
mov
inc
adc
das
add
cltd
fdivrl
and
test
iret
inc
jns
cmpsl
and
addl
cmpsl
test
cli
fdivl
mov
jno
dec
test
sub
inc
adc
out
fiaddl
shlb
scas
scas
or
incb
stos
pop
xor
dec
out
jbe
adc
or
adc
repnz
mov
mov
ret
ret
cmp
aaa
and
mov
mov
pop
or
push
push
ja
jb
dec
lret
sbb
scas
mov
xchg
insl
cs
loop
fstpl
jne
sub
ljmp
nop
sarl
cmc
and
popa
shll
or
enter
cmp
xor
add
inc
xchg
ret
mov
lods
and
cld
pushl
inc
dec
insb
lods
int
jae
out
pop
pop
repnz
and
adc
repnz
sarl
out
xchg
inc
inc
pop
jae
icebp
add
loop
pop
adc
sub
sub
push
ret
arpl
cmpl
xchg
mov
xchg
shrb
cmp
sti
pusha
adc
loopne
shlb
cmpsl
jl
lods
fstps
dec
and
dec
in
mov
xlat
stos
fwait
mov
imull
daa
dec
loop
loopne
flds
fs
xchg
aaa
scas
or
pop
cmp
hlt
ds
cmp
xor
cli
mov
jl
inc
and
icebp
fistpl
stos
or
lret
scas
lods
add
in
jmp
inc
jbe
iret
clc
cmp
cmp
jb
fcmovnb
ljmp
mov
shrl
aas
push
inc
inc
iret
add
adc
lahf
lds
dec
mov
inc
into
adc
xchg
add
nop
push
into
in
mov
cwtl
pop
les
sbb
adc
popl
in
ret
mov
test
sti
push
inc
mov
inc
arpl
sbb
sbb
lahf
cmp
fistps
pop
mov
sbb
pushf
or
ror
fcmovb
inc
push
pop
mov
lods
or
inc
dec
mov
repnz
mov
xchg
outsb
loope
clc
pop
js
es
js
adc
adc
out
jo
xor
fadds
mov
inc
sub
idiv
cmp
xor
lahf
fsub
jecxz
or
sub
or
sti
cmp
ret
pop
jae
cmp
or
clc
sub
lods
repnz
lea
push
loope
arpl
call
cltd
and
iret
les
adc
jl
pop
aas
push
out
jo
mov
sbb
jl
and
ficoms
dec
mov
fwait
scas
add
scas
movsl
dec
daa
cmp
mov
lock
pop
xchg
lds
out
sbb
mov
test
in
ja
outsl
movl
sti
pushf
push
hlt
sub
jg
rolb
inc
and
jmp
in
and
mov
popa
mov
or
mov
sub
jl
and
adcl
scas
fwait
std
lds
popa
cmp
jo
scas
jbe
fildll
xchg
int3
shrb
and
mov
lahf
dec
add
push
mov
sahf
inc
push
fsubs
cmpsl
mov
cwtl
fsubl
jecxz
imull
shrl
inc
pop
jae
and
mov
gs
fwait
popa
cmp
sub
popa
push
add
std
rorb
test
aam
xchg
ret
add
dec
mov
adc
pop
fnstsw
lds
inc
dec
mov
fdiv
push
mov
call
shll
pusha
movsl
ja
pop
xlat
xchg
es
cmp
dec
cld
shlb
adc
scas
add
fimull
test
not
jmp
adc
jo
pop
jns
jnp
stos
in
loopne
jp
out
xlat
fisubs
adc
sub
jno
inc
movsl
push
xchg
dec
cltd
jno
out
push
in
jae
add
or
cld
jbe
sub
lea
lret
xchg
dec
or
cli
jae
and
or
push
cltd
lods
sbb
movsb
push
inc
sbb
xor
xchg
lret
jmp
shl
jnp
movsb
in
andl
rep
jge
fdivr
add
mull
clc
mov
jle
jl
inc
fcoms
fsts
int
adc
outsl
inc
pop
dec
addr16
and
aas
mov
jb
add
push
out
push
pop
jnp
mov
roll
insl
enter
push
mov
aam
pushf
add
dec
xor
loop
jnp
and
or
fsubrl
dec
jae
jp
es
adc
inc
xchg
add
pusha
int3
cmp
xor
iret
xchg
mul
cmpsl
stc
push
jnp
dec
add
rcrl
ss
ds
dec
call
test
push
lock
push
cmpb
add
xor
loopne
aaa
out
out
into
mov
std
jmp
jne
subl
adc
mov
js
icebp
movsb
push
pop
jae
cwtl
loop
mov
add
out
pop
push
lock
adc
or
lahf
jmp
fs
shlb
mov
mov
pushf
das
xchg
sub
pop
xlat
in
arpl
js
or
jb
mov
sbb
jle
popa
cmp
xchg
ss
sahf
pop
daa
inc
mov
push
sbb
pushf
mov
inc
sbb
sub
jmp
mov
sub
sahf
dec
mov
fwait
inc
xor
xor
push
sbb
xor
shl
subb
cmp
sub
add
imul
js
or
jmp
rcrb
add
nop
sbb
sub
in
pop
cmpsl
icebp
iret
pop
and
cmpl
rorl
int
adc
in
sub
or
inc
clc
sub
jae
add
jmp
mov
xor
pop
add
ret
pop
cs
xlat
adc
jmp
cmp
push
and
in
mov
pop
mov
mov
pop
xor
subb
rcrl
push
call
inc
adc
out
mov
leave
jg
sbb
test
jecxz
cltd
cmc
xchg
bound
mov
cmp
loopne
ss
aas
sub
daa
jp
sahf
xchg
mov
addr16
ss
and
jg
xorl
push
cmpsl
pop
movsb
pop
inc
inc
cmp
cltd
inc
add
xchg
lret
aaa
or
mov
lcall
lahf
push
jno
repz
lcall
popa
ficoms
fildl
mov
sahf
jne
das
rcrl
lahf
mov
subb
cmp
sub
mov
cmc
stos
jmp
ds
sti
xchg
movsb
rcll
add
ja
mov
pop
gs
int
cld
mov
shlb
in
add
orl
cli
push
jnp
stos
sbb
or
mov
add
fnsave
lret
into
test
jno
add
cld
mov
dec
xchg
inc
movsl
push
js
and
daa
ret
or
push
jns
mov
stos
sbb
xchg
push
mov
push
fidivs
fnstcw
inc
sub
sbb
fs
mov
jecxz
fs
xchg
lahf
cmp
mov
mov
or
les
push
fidivl
sahf
lds
add
sub
fldl
mov
test
arpl
dec
cli
lahf
add
inc
inc
ds
xor
mov
pop
dec
mov
pop
cmp
imul
mov
imul
pop
cmpsl
jno
in
ret
mov
fisubrs
gs
xchg
push
adc
xor
mov
je
pop
addr16
aas
stos
mov
push
bound
jl
loopne
mov
adc
test
daa
fisubrl
xlat
push
inc
stos
mov
mov
enter
mov
mov
ret
aam
mull
xlat
adc
adc
mov
popa
dec
inc
mov
xor
push
enter
mov
sub
cmp
push
or
je
jmp
shl
incb
push
mov
xor
rolb
rclb
mov
jmp
jge
lret
xor
int3
adc
outsl
in
pop
mov
xchg
add
xor
mov
jg
xor
xchg
push
cs
incl
bound
cld
add
addl
clc
jcxz
bound
fs
xor
cs
xchg
and
in
lds
push
push
pop
mov
push
test
push
fsts
orl
xchg
inc
stos
hlt
test
lea
adc
push
fcoms
cmp
pop
mov
je
push
inc
add
sub
sub
push
pop
movsb
and
arpl
dec
lds
faddl
imul
clc
cmp
push
aad
es
jnp
add
xchg
adc
pop
cmp
inc
ljmp
pop
fists
loopne
in
iret
ss
lods
in
xor
mov
push
adc
inc
dec
xorl
fcom
sbb
cmp
sub
and
ret
lea
pop
out
or
pop
or
pushf
dec
mov
pusha
outsl
test
shrb
out
mov
cltd
and
mov
mov
adc
jo
wbinvd
lock
aaa
gs
test
das
cmp
insb
xchg
mov
xor
ficomps
pusha
and
mov
jg
jmp
daa
push
sbb
pop
ja
cmp
out
adc
pop
cltd
or
test
pop
mov
mov
xchg
adc
lds
popa
lret
rcll
mov
pop
mov
add
outsl
lock
iret
dec
mov
daa
mov
mov
repnz
push
jle
lea
cmp
test
cs
add
lea
mov
iret
scas
adc
or
jo
pop
scas
mov
fildll
add
pop
adc
mov
test
dec
dec
shll
fmuls
dec
fwait
push
mov
hlt
pop
ja
sub
inc
push
sbb
inc
dec
xor
cli
fiaddl
data16
sbb
or
in
pushf
and
push
loopne
inc
popf
push
xchg
xchg
inc
lods
fs
andb
or
les
ljmp
fdivrs
jbe
cmp
jb
lret
cmp
ss
adc
dec
imul
gs
nop
xor
subl
imull
mov
xor
jae
leave
call
call
push
imul
fwait
shr
cmp
sub
jae
inc
jns
mov
sbb
iret
jg
sub
mov
add
popa
rolb
outsb
adc
insb
scas
pop
in
stc
icebp
shrl
push
adc
test
fdivrl
adc
dec
xchg
rorb
xor
popf
inc
in
adc
inc
ret
jae
mov
mov
mov
daa
jmp
nop
aaa
xchg
and
sahf
mov
inc
or
shll
repnz
arpl
sub
jp
push
pop
add
lret
jg
sbb
mulb
mov
xchg
push
sub
inc
xchg
rcll
mov
fwait
push
adc
mov
mov
cwtl
jmp
das
stos
push
and
in
les
idiv
idiv
or
or
aam
xor
cmpsl
cwtl
in
test
or
cmp
std
xor
ljmp
pop
aam
pop
dec
dec
and
jno
cmpb
imul
es
sub
js
sub
inc
push
and
add
xlat
lds
subl
sbbl
jnp
aas
jno
xchg
cmpsb
sti
sub
push
xor
adc
sbb
mov
adc
into
mov
dec
push
mov
nop
outsl
in
cmpsl
push
and
mov
sti
inc
mov
data16
repz
rcll
jns
adc
fwait
inc
fstpt
mov
pop
mov
pop
pop
pop
or
inc
mov
sbb
push
jno
inc
sti
mov
inc
cmp
mov
and
and
pusha
ror
call
sbb
mov
jg
or
cmp
pop
subl
testb
out
lds
push
pop
and
fstpl
or
rcr
daa
into
aaa
xor
sbb
mov
fists
xchg
mov
in
repz
and
inc
in
std
movsl
inc
aas
mov
repz
cmp
push
addr16
ja
pop
ss
mov
aam
add
fmulp
jp
sbb
push
insb
pop
xchg
cltd
stos
out
dec
into
pop
xchg
out
xchg
rcrb
xor
push
js
mov
fxtract
addb
mov
jb
mov
pop
iret
mov
fbld
jle
popf
ljmp
orb
or
insl
fidivrl
push
cmp
cmpl
pop
cmp
lret
and
mov
in
sbb
pop
ret
addl
shll
and
lcall
leave
in
mov
sub
hlt
jp
mov
cld
das
rorb
and
mov
stos
ljmp
test
pop
js
push
jmp
pop
xchg
add
mov
andl
faddl
int
hlt
imul
push
aad
les
xor
jp
lcall
push
inc
adc
mov
movl
mov
daa
cmc
jge
dec
xchg
mov
lods
in
mov
xchg
pop
xchg
jne
xchg
icebp
fdivl
jb
das
inc
shr
out
aad
ret
into
fistl
sti
stos
cmc
mov
push
test
dec
cmp
pop
icebp
dec
push
xlat
xor
pop
mov
sub
fnstsw
xor
mov
mov
push
ficoms
out
out
fxch
loop
ficompl
leave
int
popf
push
xor
xor
cltd
fdivs
ja
sbb
outsl
mov
xchg
pop
push
daa
mov
mov
test
jns
mov
mov
xchg
adc
pop
xchg
in
adc
and
mov
xor
mov
popf
mov
jb
dec
mov
notb
and
out
imul
pop
sahf
push
pop
jae
leave
jle
out
aam
push
pop
jp
or
ret
scas
fmull
inc
xchg
out
or
mov
rclb
jge
lods
cmpsl
xchg
xor
cmc
sub
pusha
mov
add
or
rorb
out
or
dec
or
and
aad
repnz
js
loop
push
sahf
mov
mov
inc
orb
adc
jno
xor
out
notl
clc
jo
jecxz
jbe
idivb
in
jmp
push
lock
add
jbe
mov
data16
fsubrs
lahf
test
ljmp
mov
scas
aaa
cmp
push
jae
loope
lret
int3
idiv
mov
mov
shrl
hlt
adc
fwait
lock
lods
pushaw
idivl
mov
lret
roll
push
cmpb
jae
or
jo
std
popf
mov
and
or
loope
jle
jecxz
out
iret
inc
fwait
mov
cmpsb
pop
pusha
cmp
or
gs
xor
lretw
mov
cmp
lcall
pop
andb
test
jmp
inc
dec
dec
pusha
sbb
sub
sbb
inc
outsb
rol
mov
xchg
movsl
lock
dec
xor
bound
mov
loopne
insl
jmp
shlb
jne
jge
subb
sar
cltd
add
dec
push
movsl
repz
loopne
mov
cmpsl
andb
xlat
cmpl
sub
mov
ret
cli
lret
xchg
outsb
insl
inc
imul
jb
jne
mov
mov
shlb
cmpsb
aas
push
or
mov
movsl
add
fs
movb
and
mov
jl
pop
xchg
dec
sahf
jns
jecxz
pop
push
xor
jl
mov
inc
ret
movsb
shr
xchg
cmp
and
sbb
das
fucomi
add
in
sti
sbb
cltd
popl
das
fs
jp
aam
cmp
repnz
cmp
jb
xchg
jge
mov
and
mov
sbb
xor
icebp
mov
sbb
xchg
jae
mov
bound
pop
jp
fistpl
xor
adc
cmpsb
mov
les
cli
push
cld
das
jb
test
jne
in
xor
test
lds
scas
mov
iret
flds
sub
int
popf
sbb
sub
call
cmp
stos
adc
mov
mov
scas
out
adc
vmovups
cmpsb
adc
mov
scas
push
mov
outsl
xchg
fwait
jmp
in
push
arpl
loopne
cmp
mov
sahf
stos
add
xchg
xchg
push
ja
push
std
outsb
gs
push
cmp
inc
add
sbb
or
push
xor
inc
push
pop
aaa
adc
bound
sbb
les
sub
imul
mov
adc
iret
icebp
cmpl
xchg
sti
outsb
xlat
jle
lea
fstps
outsb
je
sti
push
mov
data16
push
bound
ficoml
std
xor
and
aad
dec
hlt
aad
push
cmpsb
or
mov
sbb
mov
in
jmp
inc
test
sub
add
aam
jmp
lds
push
mov
or
sarl
cltd
les
sbb
shll
inc
push
and
sahf
jle
pop
sub
fdivp
nop
icebp
fisubrl
rol
in
sahf
cmp
push
ja
shll
inc
andl
cs
shll
mov
mov
notb
lret
sbb
mov
add
outsl
and
rcrl
sbb
sbb
outsl
add
ret
es
das
xchg
popf
mov
dec
pushw
cmc
inc
jae
js
scas
lds
push
ret
out
pop
pop
push
and
cmp
test
xor
aas
cmp
cmp
push
jecxz
push
jnp
stos
scas
dec
fildl
dec
out
dec
pop
push
jae
std
sysret
push
xchg
and
stos
pop
lock
lret
leave
jno
xchg
outsl
ret
jne
pop
mov
es
mov
mov
mov
or
jl
jecxz
mov
adc
cmp
cld
xchg
xchg
pop
push
lods
jmp
mov
mov
lret
insb
mov
dec
fstps
mov
sub
cmovno
push
push
ficomps
fisubrl
imul
popa
dec
sbb
mov
inc
aam
sub
daa
adc
push
sarb
dec
shll
imul
mov
xchg
pusha
enter
pusha
mov
leave
mov
lea
lahf
mov
setne
dec
int3
rorb
inc
loopne
jae
ret
test
xchg
xor
sbb
test
and
jnp
pushf
jb
or
aad
clc
xchg
xchg
lods
and
fnstsw
adc
xchg
mov
cmp
loop
inc
xchg
cmp
lods
std
adcb
aam
nop
sub
data16
pop
mov
adc
movsb
xor
aas
cmpsl
mov
and
fdivrl
adc
out
jmp
pop
aam
cwtl
je
loopw
mov
notl
insb
insl
mov
bound
addr16
cmpl
mov
push
loopne
jg
mov
in
mov
test
inc
fistps
cmpsb
sbb
out
sahf
in
into
push
mov
je
sbb
ds
xchg
lret
loope
sbb
xor
sbb
shrl
test
pushf
lds
ret
loopne
sti
cmp
mov
cli
cmp
std
sbb
pop
cmp
lods
mov
imul
sbb
das
orb
sbb
pusha
lds
inc
in
test
repnz
test
mov
lahf
enter
dec
sub
sub
int3
or
enter
fdivrl
dec
stos
mov
loope
push
loopne
lret
outsb
aaa
cmp
jo
fidivs
addr16
xchg
imul
cmp
ret
clc
push
jmp
subb
ss
cld
ficompl
jns
jle
ror
rclb
inc
xchg
pop
popl
jb
sub
mov
ret
movsl
pop
sub
sub
push
mov
lret
movsb
sbb
cltd
sub
shlb
ds
jne
loop
push
data16
sub
popa
sbb
push
xor
test
cmp
les
jg
jg
push
int3
add
stc
je
jecxz
xchg
xlat
lock
adcl
in
dec
inc
cltd
nop
test
insl
hlt
jns
ror
xchg
sahf
iret
out
and
and
adc
iret
push
sub
pop
or
mov
stos
cltd
lret
int
push
cmp
mov
xchg
push
xchg
pop
mov
cmp
scas
cmpsb
mov
dec
fdivl
fcmovne
jg
sti
jnp
aad
pop
fucom
cmpb
pushf
adc
fidivs
adc
arpl
jmp
sbb
ret
mov
stos
lock
jno
arpl
loop
cmp
pusha
cld
inc
and
scas
xor
add
out
js
ret
sbb
shlb
push
sub
xchg
sub
das
insl
pop
mov
iret
cmp
lds
add
lods
pop
int
mov
jge
lret
lahf
xor
cli
pop
out
fstpl
jg
pop
bound
sub
push
jo
mov
adc
scas
shrb
gs
test
push
fildl
jnp
xor
lods
jl
pop
add
scas
pop
fnstcw
movsb
cltd
clc
nop
rorb
cmp
out
cmp
and
jmp
repnz
mov
scas
push
mov
testl
xchg
sbb
aas
imulb
out
out
pop
sbb
fstpl
push
outsl
fdivrs
mov
xchg
rcll
test
cmp
push
dec
repz
test
sbb
out
ret
mov
test
ds
les
jp
xor
sub
jne
pushf
pop
jno
je
jbe
shrb
mov
mov
fwait
movsb
cmp
adc
call
pop
mov
ss
stc
sbb
mov
call
imul
ret
ret
sbb
adc
imul
leave
sbb
add
jl
dec
cmp
inc
dec
dec
mov
cwtl
sub
jno
lahf
fs
mov
mov
pop
orb
add
imul
jne
das
or
je
daa
sub
mov
loope
jae
push
lret
lds
mov
mov
inc
sub
sub
mov
aam
popa
mov
cli
jno
cltd
push
xchg
sbb
mov
idivl
add
sbb
movsl
mov
dec
lea
mov
pop
mov
inc
and
sub
mov
in
sbb
inc
and
icebp
aaa
xchg
call
mov
out
sbb
adc
xchg
cmc
xor
addr16
divb
std
loopne
dec
pusha
sub
cli
call
sbb
insl
sbb
and
push
rclb
mov
pushf
sub
sbb
rclb
inc
mov
inc
add
push
imul
aam
nop
xor
arpl
fcmovnb
sbb
bound
xlat
and
jmp
xor
mov
or
inc
and
sbb
gs
xlat
add
sti
sahf
popa
mov
jp
testb
push
jp
inc
mov
sub
ficompl
xorb
sbb
cmp
iret
xchg
mov
in
mov
lea
and
adc
daa
cmp
push
ljmp
adc
jg
neg
dec
fimull
stos
dec
rol
fdivrp
rcll
add
stos
in
sbbb
shlb
mov
dec
fdiv
outsl
cmc
fsts
clc
loop
jo
adc
mov
sbb
repnz
push
sbb
or
lret
stc
jp,pn
mov
stos
adc
cmp
mov
je
decl
negb
loopne
ds
lock
insl
pop
incl
imul
aaa
dec
mov
inc
xchg
lret
imul
push
mov
push
lret
addl
out
cwtl
sbb
test
fdivl
push
icebp
nop
adc
data16
sbb
jns
fwait
mov
aaa
and
fmulp
cmpl
cmp
adc
dec
cmpsb
add
dec
sub
adc
push
mov
mov
outsb
fisttpll
scas
pop
ja
pusha
add
aad
shll
mov
mov
jecxz
andb
pop
sbb
imul
mov
scas
adc
dec
test
popa
inc
rol
fsts
into
fsts
adc
dec
ss
push
xchg
test
xchg
sbb
jmp
cmpsb
mov
rorl
xor
lahf
fisubrs
lods
stos
into
or
xor
sub
cmp
jmp
fisttpll
and
rcl
int3
ja
loope
dec
cltd
sbb
xor
sub
dec
enter
mov
mov
fdivrl
jb,pt
mov
xchg
pop
into
mov
mov
jl
add
stos
cs
and
mov
psubsw
xchg
shll
or
fs
test
int
xor
fld
ret
test
fbld
inc
enter
out
test
sahf
jg
mov
jae
mov
jo
sbb
sub
sbb
mov
mov
push
add
sahf
test
cs
out
xor
xor
cs
bound
cmp
test
int
and
xchg
xchg
loopne
lcall
rorb
mov
call
mov
pop
push
adc
fcomi
mov
cmp
mov
jecxz
sbb
js
pop
pop
fbstp
loopne
fldenv
les
divb
xor
loopne
jae
and
mov
lret
jb
addl
sbbb
jo
jle
push
cltd
cli
icebp
mul
movsb
jne
fstps
or
mov
push
outsl
sub
adc
and
or
popf
add
dec
ja
cmpsb
loope
cwtl
cmpsb
xchg
and
mov
jns
std
stos
sub
jne
xor
in
pop
mov
ret
fsub
sbb
sub
inc
or
mov
out
xlat
sti
and
jg
je
sub
outsl
pop
adc
es
cmp
lret
mov
rcrb
xlat
add
gs
fcoml
xchg
ss
push
aas
jmp
mov
insl
push
mov
je
and
sbb
xor
mov
dec
jle
popf
mov
lds
lret
cmpsl
popf
out
add
sti
cs
stos
dec
call
hlt
mov
jae
sub
bound
cs
je
sbb
outsl
cmp
dec
xchg
cmpsl
adc
cmp
aas
and
pop
sahf
sbb
stc
add
or
sub
into
mov
and
movsl
aas
lret
inc
repz
std
sub
push
cwtl
mov
cmp
xchg
xorl
lret
and
lods
das
and
push
lods
fisttps
jecxz
mulb
loope
rcr
push
mov
test
sbb
mov
push
add
push
aas
jae
scas
cs
into
shlb
fwait
inc
nop
data16
push
mov
dec
pop
arpl
push
cmp
lock
loop
cld
xchg
jg
xchg
gs
cmp
mov
cmp
push
mov
xchg
jns
sbb
adc
loope
insb
xor
mov
jbe
push
push
pop
pop
adc
mov
push
push
sbbb
jbe
pop
sarl
int
popa
pop
sbb
push
cmp
xor
jo
inc
ljmp
xor
cmp
stc
addr16
pop
xchg
cli
add
add
imul
lcall
jmp
in
dec
addl
lea
fnstsw
in
lds
xor
mov
mov
jns
push
cmpsb
mov
and
daa
fwait
mov
ret
cmp
ds
in
and
mov
add
lods
pushf
std
mov
jb
mov
in
lret
pop
ficoms
lret
mov
mov
filds
in
test
mov
clc
outsb
test
dec
pusha
push
push
les
aam
pop
enter
fiadds
ds
clc
push
lds
insl
int
or
lds
scas
leave
test
push
jne
sub
xor
lods
iret
xlat
inc
popa
shll
inc
mov
in
push
inc
sub
aas
int3
mov
mov
test
rcll
and
inc
mov
mov
mov
ret
daa
into
push
jmp
xchg
loop
xor
dec
mov
pop
add
repz
push
das
dec
push
mov
into
cmp
test
cli
jne
ss
aam
adc
out
mov
ficoms
jecxz
cmp
enter
loop
xchg
or
jmp
jg
mov
out
leave
mov
jnp
push
sub
xlat
lret
fsubl
loop
jb
mov
cwtl
stos
jne
mov
add
pusha
add
cmpsl
cli
jl
jno
mov
stos
in
mov
xor
cmc
mov
and
fstp
loopne
lods
and
sbb
xor
pop
popa
mov
and
pop
jbe
or
lods
add
fdivl
pushf
mov
xchg
js
mov
sbb
fidivrs
jle
inc
and
ret
ret
loop
repz
add
popa
and
icebp
stos
xor
and
cmp
pop
jle
mov
movsb
xor
repnz
test
fs
jbe
pushf
and
inc
inc
test
dec
jae
dec
and
fs
jnp
adc
lahf
test
aaa
xchg
mov
pop
add
xchg
push
jb
iret
sub
add
subl
sbb
roll
cmp
scas
pop
push
mov
and
adc
pop
mov
pop
sub
orb
jbe
data16
imul
into
xorl
imul
mov
push
push
jp
dec
pop
outsl
lods
imul
mov
and
ja
fdivl
loop
mov
push
add
pop
sub
leave
and
ret
ds
out
sbb
pusha
stos
cmp
fisttpl
and
mov
mul
cmp
or
sarl
dec
data16
push
rorl
push
inc
mov
arpl
mov
push
push
push
dec
mov
cli
and
cli
adc
shll
xlat
cmp
cmp
sarb
mov
fistl
das
sbb
xchg
mov
push
dec
push
pop
flds
hlt
pop
and
mov
pop
adc
ja
mov
repnz
xor
xor
cmp
es
jnp
cwtl
clc
fwait
push
ret
repnz
mov
or
mov
shll
dec
sub
pop
mov
sbb
jb
and
push
cmpsl
ret
mov
jb
add
scas
xchg
xor
pop
dec
inc
adc
decb
inc
xor
int
rol
imul
or
xchg
and
mov
sbb
add
loopne
push
lret
sarb
inc
or
sub
fsubs
loop
sbb
pop
lea
pop
pop
jmp
push
ss
mov
and
sarb
pop
call
dec
sub
jae
nop
pop
pop
mov
test
mov
push
out
mov
sbb
jno
xchg
fistps
dec
and
mov
ficoms
pop
les
pusha
mov
movsl
ja
push
es
jb
add
jp
mov
xor
int
dec
jge
mov
mov
sub
lret
testl
push
neg
jecxz
add
hlt
movsb
cmpsl
pop
jp
xchg
aad
mov
ds
jecxz
rcll
jbe
icebp
jecxz
push
sbb
sbb
xchg
roll
mov
addr16
and
shll
testl
sbb
lret
xchg
mov
mov
scas
and
push
mov
xchg
mov
or
push
cmp
cmp
sbbl
je
sub
inc
pushf
inc
inc
gs
movb
es
filds
mov
push
dec
ljmpw
mov
ret
jo
adc
aaa
shlb
xchg
and
and
jmp
and
aad
clc
aam
pop
cmp
test
add
pushf
mov
and
popf
inc
dec
ret
gs
inc
jge
push
push
aas
andl
mov
stos
lret
mov
stos
or
pop
je
dec
dec
lcall
mov
ds
jle
xor
pop
or
xchg
out
repz
and
lods
inc
sub
fdivrl
dec
and
adc
orl
inc
rcr
add
mov
pop
push
dec
add
stos
mov
push
push
int3
jo
xchg
xor
fnstenv
or
sub
bound
xchg
and
mov
jns
arpl
inc
sysenter
jl
xchg
and
xor
test
movsb
jl
cltd
jle
sub
cmc
pop
sub
sbb
push
jae
xchg
lcall
xor
inc
lds
pop
mov
mov
mov
add
push
ds
mov
iret
scas
push
mov
bound
add
or
or
mov
jns
mov
test
into
imul
jne
and
adc
int3
aam
shll
dec
decl
jo
jle
pop
lods
mov
xor
pop
stos
popf
ja
hlt
cs
sarl
repz
out
add
stc
rolb
mov
es
fwait
dec
add
adc
or
dec
pop
mov
jae
aaa
adc
in
cld
cs
test
mov
fnstenv
adc
addr16
fsubl
inc
inc
xor
pop
cmp
dec
out
dec
jmp
test
stos
lods
mov
mov
in
jg
or
dec
arpl
mov
pusha
push
fnstsw
mov
sarb
mov
pushf
lds
jnp
mov
mov
sbb
mov
je
mov
arpl
and
sbb
arpl
fsubrs
adc
xlat
and
imul
int
mov
daa
cmpb
stos
mov
jne
or
fcoml
mov
cwtl
xchg
pusha
jbe
ss
cmp
inc
pop
out
test
add
and
js
xor
xor
dec
adc
xor
mov
dec
or
adc
sbb
popf
repnz
mov
dec
pop
push
inc
sub
outsl
jne
repz
in
loopne
pusha
in
inc
adc
fldenv
mov
dec
mov
sahf
scas
jmp
mov
aas
inc
jmp
push
xor
in
rcll
int
je
mov
sub
repnz
push
lods
out
cmp
ja
xor
cmpsl
jnp
pop
inc
pop
cmpsb
jmp
xchg
push
fldl2t
push
mov
xor
popf
fmull
fistl
sahf
mov
imulb
dec
and
push
inc
push
dec
jae
dec
addr16
daa
push
cli
jno
push
push
out
mov
addl
cmpsl
mov
sar
sub
frstor
push
out
cmp
ljmp
sbbb
fnsave
pop
jp
mov
push
jecxz
adc
pop
mov
int
cwtl
ljmp
push
cmp
xor
mov
jbe
mov
clc
sbb
out
inc
add
popa
imul
sub
xchg
leave
inc
add
adc
mov
lcall
ja
mov
orb
mov
mov
ficomps
xchg
push
test
jle
mov
mov
adc
fwait
cmpb
dec
loop
mov
pop
dec
dec
imul
jecxz
mov
rorl
jl
ret
inc
push
bound
sahf
jo
xor
sbb
push
notl
jbe
cmpsl
sub
icebp
mov
dec
inc
pop
test
push
xchg
lods
fcoms
and
flds
add
jne
xor
pop
mov
pmuludq
and
in
xchg
or
mov
pushf
push
or
sar
aam
scas
int3
lahf
cld
inc
push
pop
mov
push
outsb
mov
jbe
lods
jp
xchg
ja
push
mov
inc
ss
fsts
inc
adc
xlat
add
or
push
dec
or
loopne
add
jg
push
cmpsb
mov
xchg
inc
psubb
cmp
sbb
arpl
mov
mov
jbe
popa
jecxz
outsl
jb
in
lret
jb
or
lods
mov
mov
arpl
mov
adc
push
mov
aam
pop
xor
enter
mov
movsb
test
xor
std
cltd
repz
mov
insb
adc
jg
mov
fidivrl
fisttps
shlb
out
adc
and
fs
addr16
push
loopne
loope
mov
jmp
leave
das
in
outsl
mov
ret
std
push
pop
or
lret
mov
loop
xchg
jle
out
mov
or
cmp
mov
or
loopne
sbb
mov
inc
clc
int3
ds
int3
icebp
xor
lahf
jo
inc
cld
enter
and
sbb
mov
mov
adc
fmuls
xor
sbb
into
insl
cmp
xor
mov
orb
imul
lock
xchg
push
movsb
push
cmpb
outsb
pop
mov
mov
or
popf
push
adc
mov
cmp
loope
popf
jno
dec
mov
xor
pop
or
out
sbb
sbb
xorb
lds
scas
inc
inc
lret
sub
cmp
hlt
fdivs
cmp
xor
cmp
mov
sahf
gs
jmp
push
jecxz,pt
or
shl
adc
imul
loope
or
mov
xchg
fmuls
test
add
out
push
mov
loop
xchg
shrb
iret
sbb
mov
lock
movsb
jp
shlb
out
cwtl
clc
int3
scas
mov
insl
mov
imul
or
pop
faddl
int3
int3
ljmp
call
test
loope
ds
repz
lcall
stos
arpl
add
lcall
fldt
mov
push
hlt
test
popa
sbb
pop
xchg
cmp
sbb
sub
and
repnz
push
stos
cmp
imul
or
inc
sub
or
icebp
mov
ret
xor
fdiv
jbe
rcr
cmp
mov
add
test
sbb
mov
mov
lods
and
add
push
push
jne
pop
push
mov
cmp
add
push
mov
mov
and
push
jne
cmp
loope
subb
aaa
pusha
outsb
cmp
adc
imul
hlt
cmp
jge
xor
sbb
inc
es
adcl
dec
ret
fsts
push
pop
sub
dec
xchg
out
sub
push
adc
loope
imul
movsb
test
pop
iret
sub
add
sub
test
leave
movsl
dec
pop
lods
and
push
adc
mov
insb
outsl
push
inc
pop
stos
stos
fwait
cmp
xchg
cmp
sti
pop
cmp
fmull
loope
in
addr16
dec
orl
aad
dec
into
sbb
out
movsb
push
or
dec
stos
cltd
mov
or
sbb
dec
and
loope
xor
add
lods
pop
scas
mov
aam
jle
dec
clc
adc
adc
inc
and
in
mov
mov
lret
xchg
lahf
insl
push
sar
sbb
xor
sbb
sbb
out
jp
movhps
fs
std
aad
mov
jae
arpl
dec
lcall
mov
imul
jo
xchg
pop
mov
push
jbe
fwait
cmp
outsl
aas
push
cmp
jge
in
or
nop
insl
insb
add
std
xor
leave
lret
into
fcoml
js
push
mov
cmp
jge
aam
and
stos
loope
cmp
push
cmp
and
in
add
add
cmpsl
ljmp
cmp
pop
push
lock
ret
jb
cli
push
bound
pop
inc
sub
mov
cmp
or
repz
lcall
add
jbe
push
int3
sub
imull
jmp
cmp
cld
pushf
cld
mov
cmp
je
jb
fisttps
push
mov
lods
test
aaa
pop
jge
rorl
incl
cmp
xchg
scas
insb
push
push
adc
mov
bound
mov
test
dec
pusha
and
out
gs
sbb
cmpsb
inc
sub
mov
icebp
and
int3
jg
xchg
imul
out
hlt
pop
sbb
pop
add
pop
dec
mov
and
clc
sti
adc
les
dec
dec
pop
outsl
lcall
mov
push
xorb
inc
cli
sbb
movsl
push
mov
inc
cs
aam
push
jne
pop
mov
enter
jae
out
or
and
sbb
cld
sub
push
out
ret
xor
push
test
mov
and
adcb
sbb
ud2
push
push
add
mov
mov
dec
rcrb
test
jns
loope
popa
cmp
add
addl
and
cmp
jnp
fcompl
adc
inc
pop
push
lahf
sub
imul
pop
and
lcall
xor
mov
daa
ret
aas
punpckhdq
mov
imul
in
std
adcl
xor
lds
sbb
fildll
push
mov
jle
push
mov
mov
fs
jne
iret
cmp
mov
iret
cmc
pop
mov
cmp
or
out
ret
loop
add
jnp
mov
sub
aam
cmp
fisttps
into
insl
lods
lahf
sub
xchg
mov
or
sbb
or
mov
xlat
es
and
and
pop
loopne
add
mov
cli
add
jb
pop
dec
inc
insb
fidivrl
mov
fnsave
outsb
jecxz
push
dec
aas
inc
or
sub
inc
fidivrl
add
hlt
adc
pop
es
scas
lahf
mov
mull
aas
ss
lods
lret
lods
jp
pop
sub
mov
mov
jle
pushf
xchg
xlat
pop
negb
pop
mov
sarb
adcb
dec
add
hlt
fildl
imul
mov
sbb
lea
mov
stos
mov
mov
lods
push
push
pop
jg
stos
cwtl
mov
dec
aad
fsubrl
push
pop
add
adc
pop
xor
imul
jg
out
cmp
cmp
dec
pop
inc
jecxz
les
xlat
out
ja
xchg
or
mov
lods
push
stos
dec
enter
jnp
fisttpl
sbb
dec
push
xchg
mov
dec
std
jp
jb
adc
ljmp
and
subl
mov
push
pop
lret
data16
cmp
sbbb
sub
inc
xor
mov
repnz
mov
mov
mov
push
cmp
mov
test
jns
push
mov
and
sub
jnp
imul
adc
inc
and
xor
pop
mov
mov
cwtl
cmp
and
faddl
and
ss
push
mov
dec
aas
out
rolb
add
jb
in
enter
in
scas
xor
pop
push
arpl
adc
dec
jp
outsl
lcall
adcb
pop
ret
fiaddl
shr
outsl
lock
jbe
je
ret
iret
inc
in
push
mov
mov
pusha
das
dec
push
push
pop
xchg
cmpsb
push
rcl
mov
in
cmp
pop
mov
push
jg
mov
add
into
aaa
mov
jg
ds
pusha
insb
icebp
mov
push
ficompl
jns
sahf
push
call
xchg
bound
notb
mov
push
dec
cmc
mov
inc
or
and
cmp
push
arpl
aaa
inc
mov
fidivrs
out
push
mov
fidivrl
lds
les
pop
sbb
jae
mov
cmp
jns
jmp
insl
push
cmpsb
leave
popa
ret
icebp
pop
add
pop
inc
pop
imull
in
mov
test
push
stos
pop
popw
xchg
adcl
inc
mov
push
popa
mov
xor
jmp
nop
dec
in
jb
fwait
dec
xchg
popa
iret
xlat
test
daa
push
sub
xchg
imul
scas
cmp
sub
inc
cli
cmc
sarb
rorl
lret
repnz
or
outsb
clc
push
and
lea
pop
fstpt
outsb
xlat
shlb
mov
jmp
or
mov
cltd
sbb
lock
icebp
pop
or
fiadds
incl
into
xlat
and
push
push
insl
leave
adc
sti
arpl
inc
and
fisubrl
cmp
xor
std
mov
addb
mulb
inc
mov
in
scas
push
scas
rol
sub
mov
xchg
xor
inc
adc
pop
shlb
push
or
cmp
sbb
mov
testb
xor
fsubrl
shll
mov
jge
push
mov
out
jns
xchg
pop
repz
jb
inc
iret
outsl
enter
mov
aas
pminsw
add
xor
bound
stos
push
xchg
sub
and
outsl
movsb
iret
push
movsb
idivb
jo
sub
out
jo
orb
cli
cmp
sbb
xor
or
aaa
mov
xor
je
inc
in
xor
mov
and
popa
inc
repz
adc
lret
out
lret
sahf
mov
lock
pop
mov
in
arpl
pushf
xchg
pop
insb
fsub
ss
and
fwait
loop
inc
pusha
sarl
clc
ret
xchg
dec
call
sbb
add
push
mov
mov
rcrb
mov
jmp
inc
mov
mov
xor
mov
adc
jne
and
ljmp
push
fldenv
shrb
add
inc
and
outsb
jge
xchg
shll
pop
mov
mov
out
sub
enter
add
test
and
addb
inc
mov
out
ret
popf
sbb
jle
xchg
add
outsb
call
xchg
lret
adc
or
add
loopne
adc
dec
into
addb
scas
cmp
cmp
push
daa
div
add
dec
dec
cli
mov
adcl
xor
sub
loop
add
gs
lods
xchg
leave
mov
test
pop
dec
lods
push
dec
imul
call
str
xor
pop
cmp
out
lods
nop
dec
repnz
sti
pop
iret
out
and
cmp
xor
pusha
bound
xorb
cmc
pop
fisttpll
cmp
fadds
call
hlt
cmp
out
xlat
pop
inc
outsl
push
add
ja
les
rol
jge
jg
sti
ret
xor
inc
cmp
adc
sub
popf
inc
jmp
inc
xchg
pop
mov
rcrl
push
add
dec
or
adc
add
in
aas
jecxz
lret
cs
adc
nop
lods
fbld
lcall
rcl
out
xchg
iret
mov
or
aad
std
shrl
add
les
or
test
stc
test
cwtl
mov
js
pop
pusha
push
cli
xchg
mov
pop
sub
push
jge
js
jns
push
mov
rcll
fwait
out
testb
sub
sbb
decw
adc
addr16
sarl
mov
xor
xchg
sub
test
jne
cs
call
cmp
sbb
fstpl
outsb
daa
or
ds
xchg
xor
cltd
pop
xchg
xchg
cld
insl
call
daa
out
repnz
dec
push
jns
mov
add
movsb
push
repnz
jl
andb
out
in
jae
mov
scas
mov
neg
adc
mov
mov
push
imul
mov
stc
ja
mov
movb
sahf
fsubl
clc
xchg
mov
jne
mov
in
ja
mov
sub
adc
stos
call
bnd
add
sub
add
fprem
mov
fstpt
repz
loop
in
push
or
adc
push
shr
dec
mov
out
inc
push
cltd
push
pop
shlb
jp
cmp
ljmp
or
cmp
lret
jmp
dec
dec
testl
xor
ss
andb
cmp
int3
divb
loopne
out
sbb
push
fwait
sbb
leave
bound
jecxz
jo
cwtl
or
fs
mov
cld
mov
ss
out
jb
xor
mov
popa
in
jne
mov
rolb
adc
fsts
roll
pushf
adc
push
scas
dec
sbb
cmp
xchg
insl
rorl
and
sbb
aaa
stos
out
and
mov
push
jns
fldlg2
inc
aad
adc
lret
push
test
int
push
ja
pop
xorb
insl
xor
pop
idivl
push
push
das
push
jb
lods
xchg
and
sarb
cmc
out
cmp
add
dec
loop
xor
into
push
gs
pop
mov
in
pushf
dec
inc
ljmp
lods
push
xchg
and
xchg
insl
shll
mov
test
outsb
lret
cmp
movsb
loop
sbb
mov
aas
mov
mov
repz
mov
xchg
mov
inc
int
cmpsl
shr
or
mov
test
stc
cld
adc
jmp
shl
inc
lahf
pop
push
mov
push
das
pop
adc
js
xor
movsb
cmc
or
push
pop
jbe
iret
jge
sarb
cltd
stc
ljmp
xor
cmp
push
adc
cmc
push
dec
push
push
xchg
inc
lret
pop
icebp
mov
mov
lret
inc
popa
movsl
sub
push
loop
das
int3
xchg
into
in
es
popf
pop
cmpsl
cwtl
out
push
scas
xchg
sbb
cmpb
nop
sbb
jo
xlat
and
cmp
sahf
je
loop
pushf
push
inc
mov
dec
in
movsb
mov
ljmp
es
jge
pusha
jae
fcoms
add
push
gs
shlb
push
pop
inc
adc
push
ret
and
dec
bt
iret
jge
rorl
add
push
or
ja
lods
inc
push
movsl
dec
lds
into
ljmp
dec
sbb
cwtl
or
push
testl
mov
movsb
dec
dec
data16
push
pop
sbb
das
sti
mov
int3
stos
insb
xlat
or
imul
dec
adc
ds
jbe
rcrl
or
leave
push
rcrl
fsubs
adc
or
xchg
sbbb
inc
stc
in
jmp
stc
cwtl
popf
insb
rcl
xor
inc
jg,pn
sub
in
xor
add
adc
cmpsb
push
push
pop
roll
mov
adc
mov
jno
and
rcll
xlat
imul
or
std
aam
into
pop
cltd
sub
or
pop
pop
in
loopne
dec
xorb
cld
adc
int3
pop
mov
cld
cwtl
mov
sub
add
xchg
mov
ret
push
dec
testb
adc
fsubl
shlb
mov
aad
cmpl
jb
inc
jae
sbb
lods
sub
sub
sahf
xor
sub
adc
push
shlb
scas
xchg
insl
mov
lea
lods
test
dec
insb
scas
jecxz
int
jl
les
js
fimuls
test
mov
add
xlat
push
sti
shrl
fcompl
cmp
cmc
sub
pop
mov
insl
mov
movsb
in
jno
les
and
inc
nop
jne
add
rclb
addr16
inc
jo
mov
xor
mov
insb
mov
ja
fcomp
mov
xchg
jp
cmp
xchg
lds
int3
push
test
jle
xchg
jae
xor
fbld
stos
pop
ss
cmp
inc
bound
dec
inc
add
loope
test
lret
xchg
cli
pusha
mov
jp
addr16
data16
call
pusha
inc
rcrb
fsts
pop
int
testb
iret
push
daa
cmp
lcall
mov
push
dec
inc
stc
jo
sub
push
cmc
jl
or
mov
lods
jb
in
das
ds
jle
sbb
outsl
xchg
add
imul
int3
nop
aaa
lret
ret
sbb
iret
and
sub
push
pop
sub
sbb
and
stc
pop
dec
inc
pop
xchg
or
sbb
mov
bound
adc
cltd
pop
jge
sbb
lods
cmp
iret
aam
mov
fdiv
lret
addr16
and
pushf
jno
mov
leave
jb
sbb
and
mov
cmp
cmp
pop
out
into
xchg
lods
fisubs
dec
jno
popf
xchg
cmp
sub
jno
and
std
dec
addr16
add
cmp
and
fbld
sarl
idivl
add
arpl
sbb
rcl
fwait
or
cmp
hlt
dec
hlt
test
lods
mov
xchg
add
mov
test
repz
inc
add
inc
pop
jle
xlat
out
push
push
cmp
xchg
mov
popa
nop
mov
push
push
ret
and
push
inc
fwait
das
movsb
mov
fstp
jo
adcl
leave
dec
insb
je
inc
adc
cmp
pop
xchg
aas
xchg
mov
mov
jae
fs
push
lods
sub
loop
aad
push
jmp
inc
inc
pop
lods
sbb
adc
aaa
scas
call
cmpsl
std
push
in
sub
xor
js
mov
push
cmp
ror
or
sub
and
lods
mov
jnp
leave
out
cwtl
sub
fistpl
dec
mov
mov
test
pop
and
xchg
std
imul
in
pop
dec
cli
sti
out
pop
js
imul
dec
call
xor
xchg
sbb
adc
arpl
add
add
fildl
in
add
lcall
xchg
adc
fs
xchg
jl
add
push
jl
add
mov
xchg
ffreep
cld
mov
loope
mov
mov
cmpsb
imul
aad
mov
fisubl
inc
leave
sub
dec
mov
pop
call
push
loopne
mov
fcmovnu
and
push
pop
sub
lods
ficompl
adc
sub
mov
insb
xchg
dec
adc
xchg
mov
insb
mov
jle
sbb
cmpsb
cmp
fucomp
stos
or
pop
push
fs
inc
out
pop
pop
cmpsl
push
mov
call
divl
ds
push
loope
lods
or
sub
pop
stos
mov
lea
sbbb
sarb
mov
push
outsl
loop
inc
into
pop
aad
loope
push
outsb
adc
cli
pop
loop
cmp
add
inc
das
jge
les
cld
cmp
mov
jae
and
ret
inc
pop
xchg
popa
cwtl
int
data16
sub
clc
mov
sbb
sub
dec
mov
je
popa
jl
inc
mov
jb
in
push
popf
cmpsb
insl
aad
test
call
das
ret
into
dec
js
add
pop
cmp
and
inc
pop
cwtl
int3
or
outsb
sbb
sub
les
daa
stos
in
sahf
sub
jno
js
cwtl
sbb
and
aam
mov
mov
cmp
push
cmpsb
lret
jmp
cmp
pop
lock
push
and
pop
dec
fcomps
xor
and
xor
pop
mov
mov
inc
fdivrs
mov
out
xchg
out
lods
add
push
lcall
lods
fwait
mov
or
push
loope
in
mov
mov
dec
data16
xorl
lret
or
mov
retw
xor
jno
jns
imul
pop
les
jbe
adc
out
push
mov
imul
add
mov
mov
jecxz
ja
mov
lret
arpl
mov
cld
data16
int3
jecxz
xor
push
mov
ret
mov
push
mov
inc
sbb
jne
xchg
inc
pushl
stos
sbb
cmp
repnz
repz
xor
out
dec
xor
stc
sti
mov
pop
mov
push
cmp
push
lret
sbb
in
mov
lahf
arpl
inc
test
in
fistl
daa
mov
and
cli
mov
pop
xor
xor
fsts
shrb
xchg
es
mov
or
lods
lret
arpl
aaa
and
lea
sti
iret
fists
dec
xor
aas
mov
adc
loopne
mov
iret
sbb
aaa
xchg
out
fsubs
pop
int3
push
mov
xchg
xor
loop
shrb
orl
push
and
fisttps
jge
push
cmp
mov
pop
in
dec
pop
les
fidivs
cmpsb
inc
test
inc
mov
dec
jmp
add
or
mov
loopne
pop
lea
fiaddl
loope
inc
sbb
jno
ret
jp
push
jge
inc
fidivl
mov
inc
repnz
cmc
leave
and
xor
mov
mov
inc
mov
mov
dec
fnstsw
stos
mov
push
fs
mov
dec
cmp
push
xchg
mov
dec
lods
pop
mov
xlat
or
pop
push
jne
loope
jne
sbb
mov
adc
shrb
mov
insl
adc
arpl
es
add
mov
dec
mov
inc
lea
pop
stos
cwtl
xchg
sub
mov
xlat
jbe
fucom
sti
shr
push
mov
xchg
pop
sub
sarl
inc
xor
cmpsb
jo
and
and
push
aad
push
cmp
xchg
out
pop
fcoms
imul
sbb
popl
dec
sahf
dec
mov
push
mov
jbe
push
inc
jmp
push
fiadds
xchg
shlb
lock
std
nop
and
divl
jmp
cli
aad
sbb
mov
outsb
into
out
cmp
sub
pop
mov
repnz
ds
insl
mov
add
pushf
and
xchg
popf
xchg
mov
mov
int3
movsl
mov
lock
loope
js
cmp
dec
add
dec
sub
out
xchg
rorb
inc
xchg
cs
add
cmp
mov
fld
int
dec
xchg
sub
imull
cmp
std
cwtl
out
dec
dec
lret
addr16
inc
or
adc
ret
std
ja
push
mov
sub
mov
mov
out
and
push
test
adc
dec
int3
int3
out
sbb
jecxz
mov
sub
cmp
fsub
rcll
xor
mov
cltd
xor
push
in
notb
lock
push
xor
insl
pop
outsb
adc
sbb
xlat
mov
imul
mov
push
nop
dec
add
add
pop
cmp
shr
sub
mov
mov
rcrb
cmpl
inc
mov
xor
adc
outsl
sub
dec
outsl
add
ja
sbb
mov
popf
jle
fs
and
add
frstor
aam
test
out
add
aaa
lock
mov
lods
ror
aaa
loop
fwait
scas
xor
jnp
xor
jne
pop
dec
popa
and
dec
dec
mov
sar
adc
push
adc
fs
jmp
and
outsl
mov
mov
sub
fwait
ja
fldenv
cwtl
cmp
insl
xlat
int3
out
cmpb
cmp
lds
out
cld
cld
xchg
jnp
xchg
mov
ret
cmp
icebp
jbe
and
jle
hlt
pop
pop
in
xchg
cmpl
xchg
sbb
pop
xlat
xchg
mov
push
mov
pop
add
pop
push
fcmovbe
pop
fisttpll
shlb
push
lretw
arpl
inc
cmp
mov
cmpsb
mov
and
je
adc
insl
aad
loop
pop
lock
stos
inc
xor
jb
shll
je
push
jmp
or
out
fs
sub
shrl
sub
cwtl
xor
clc
repz
xchg
aaa
inc
enter
sbb
sbb
addr16
test
add
sbb
dec
add
pop
movsl
pop
dec
jno
ja
mov
xchg
mov
mov
loope
mov
pusha
jl
mov
pop
ja
cs
push
inc
adc
mov
es
push
imul
popa
push
pop
fmull
adc
lcall
dec
out
jno
and
jmp
push
pop
lods
sub
ds
mov
mov
xchg
mov
gs
psadbw
es
out
loope
mov
push
ljmp
xlat
jge
lods
sub
jl
call
popa
and
adc
cmp
cmp
test
out
addb
in
push
sti
or
xor
xchg
pop
xchg
call
push
push
insl
fiaddl
mov
sbb
je,pn
pop
fsubp
jmp
xchg
push
cmp
test
sbb
sti
mov
add
xchg
inc
fs
push
insl
cld
rcrb
lret
inc
push
ds
fadd
leave
dec
push
pop
stos
std
jae
psrlq
push
push
pop
add
sbb
inc
fimuls
mov
stc
je
add
sbb
sub
icebp
or
mov
cld
test
sbb
mov
cmp
push
outsl
inc
dec
cmp
xchg
adc
orl
dec
fldt
in
iret
ja
jbe
sbb
mov
add
or
add
pop
cwtl
lret
adc
mov
lea
or
push
sti
outsl
shrb
push
mov
mov
fsubrs
test
sub
ret
jg
in
add
in
outsb
jge
das
gs
jnp
pop
repnz
data16
jecxz
aad
jne
adc
mov
jo
mov
loop
adcb
aaa
stos
bound
dec
sbb
loopne
popl
int
xor
xchg
fcomps
test
insb
push
mov
sbb
mov
nop
xor
add
mov
pop
mov
das
in
call
push
data16
cld
movsl
cmp
fsubrl
int
repnz
or
xlat
fisttpll
fdivp
jbe
mov
mov
push
xchg
xchg
stos
sub
pop
add
xchg
out
enter
mov
lds
inc
popa
mov
sbb
iret
mov
imul
aam
int3
cmpsl
mov
inc
inc
push
movsb
rorl
mov
decb
lret
jle
mov
out
xor
dec
adc
add
pop
push
imul
dec
inc
and
pop
sub
iret
push
mov
or
mov
mov
lcall
or
push
leave
inc
icebp
lods
fstl
sbb
sbb
sbb
mov
jecxz
mov
jbe
mov
fstpt
jge
or
xchg
out
addl
rcrb
lods
mov
ds
dec
stc
push
test
sub
movsb
sub
in
fcompl
mov
jle
mov
pop
es
mov
inc
xor
xchg
push
sbb
imul
pop
test
cltd
pop
movsl
mov
out
sub
aam
xchg
inc
loope
xor
pop
xchg
or
lods
test
pop
sbb
arpl
mov
jl
jb
mov
push
mov
pop
lret
cmp
std
add
push
add
aam
lcall
fcmove
cwtl
fsubl
cmp
and
addr16
sbb
mov
xchg
shrl
dec
pop
out
test
adc
add
dec
dec
stos
hlt
cmp
adc
movsl
in
pop
pop
push
xchg
incb
dec
out
lret
leave
movsb
inc
test
std
movsl
inc
and
and
movsl
loopne
testl
mov
dec
xor
jne
ficomps
push
mov
mov
cmpsb
scas
jmp
xor
cmp
arpl
mov
out
stos
inc
insb
js
and
mov
xchg
jl
nop
out
test
test
inc
test
stos
jbe
fdiv
fistpl
sub
adc
or
in
pop
cli
mov
xchg
xchg
lock
xchg
fldl
ds
inc
insb
inc
jae
cmpsb
das
adc
ficoms
mov
repnz
cs
bound
sahf
shr
cmc
das
test
fcoml
jp
sbb
xor
fidivs
jmp
mov
lods
push
sub
arpl
test
testb
pop
mov
sahf
sbb
je
cmp
mov
pop
clc
mov
dec
jnp
out
mov
xchg
push
icebp
loop
inc
inc
call
lods
mov
mov
mov
in
je
insl
sbb
lahf
push
rcll
cwtl
adc
jns
xor
dec
dec
js
stos
orb
lds
andb
js
xchg
sbb
fcom
push
jmp
test
jmp
or
loopne
or
mov
adc
and
fnstsw
clc
sbb
les
mov
mov
mov
xchg
cmp
adc
lcall
sar
pusha
mov
mov
js
sub
sub
mov
ret
or
mov
pop
pushf
cmp
push
ffree
inc
mov
jno
mov
dec
mov
add
push
loopne
xchg
sbb
mov
loope
movsb
jnp
mov
ss
insl
jecxz
mov
mov
aaa
fs
jo
addr16
jmp
mov
mov
lret
cld
push
enter
mov
sub
dec
sbb
pop
cmpsl
sbb
dec
icebp
pop
repnz
mov
mov
mov
xor
daa
insb
ret
inc
ss
aam
ds
lcall
adc
movb
sarb
push
inc
push
es
lods
cld
push
rol
dec
test
add
loopne,pn
mov
pop
xchg
pop
rcrb
push
movsl
out
lea
les
xchg
lcall
pop
andb
push
pop
xor
push
jp
and
insl
sbb
ret
xor
pop
aam
pop
add
push
loop
sbb
outsb
xlat
mov
shlb
pusha
push
sbb
pop
mov
loopne
mov
cltd
aam
shlb
ret
or
inc
pop
repnz
outsb
pushf
dec
loopne
push
cmp
fiaddl
mov
scas
adc
movsl
js
lahf
xlat
mov
push
mov
sbb
xor
adc
leave
mov
sbb
pop
sbb
push
cmc
xchg
push
fdivrp
js
and
add
aas
adc
and
movsb
adc
out
lea
pop
pop
call
jmp
push
jae
repnz
sbb
xor
std
adc
jg
bound
insl
push
dec
out
add
sbb
arpl
push
ret
in
cmp
cmc
pop
sub
ja
nop
jnp
gs
call
pop
pop
sbb
xchg
cmp
push
dec
lret
sbb
pop
inc
clc
dec
and
jle
dec
and
pop
mov
punpckhbw
push
push
js
lock
pusha
lret
bnd
repnz
es
and
insl
xchg
outsb
lea
out
popa
std
outsb
repnz
cltd
inc
dec
movsl
pop
roll
les
adc
loope
sbbl
int
inc
into
scas
push
inc
push
mov
gs
or
sub
dec
inc
or
mov
dec
jecxz
rolb
sub
adc
inc
imul
and
in
push
lret
out
sahf
push
movsb
outsb
pop
jge
cmp
imul
pop
mov
lds
fcomp
mov
insl
notb
imul
mov
inc
adc
mov
out
mov
mov
fs
cmovs
sti
add
jp
add
jg
subl
fs
mov
xchg
jp
dec
dec
daa
add
divb
cs
out
shlb
jne
cmovo
imul
cmp
push
xchg
fdivs
es
test
popa
inc
pusha
movl
mov
loopne
adc
loopne
out
cwtl
mov
or
test
ss
mov
sti
sub
sbb
test
xchg
pop
ret
mov
shlb
xorb
stc
stos
jb
in
shlb
jns
cmp
clc
jbe
cld
cmp
movsb
or
and
popl
add
aad
pop
rcl
and
xchg
int
and
cmpsb
cmp
mov
push
dec
adc
outsl
stos
jne
test
and
outsb
xor
add
xchg
xor
test
jnp
out
mov
jne
dec
les
add
and
int
cld
jle
pop
rorb
movsl
imul
call
ljmp
arpl
dec
push
pusha
add
jp
mov
int
les
or
pop
push
mov
adcb
fidivrs
into
and
popa
cmp
inc
aad
sub
sbb
jns
or
xor
clc
and
inc
mov
loop
loope
cmpsl
addr16
fs
js
pop
cmovne
push
mov
ficoms
mov
jo
sbb
out
pop
sti
lods
and
popa
gs
rolw
cmpsl
aad
mov
sahf
xlat
iret
clc
xor
popa
fdivrs
mov
jb
rorl
fs
repnz
and
cmp
cmpb
xchg
cltd
ss
lods
sub
dec
out
xchg
subb
adc
xchg
jae
or
pop
adc
jl
les
shl
xor
or
xor
outsl
mov
out
lret
cmp
lret
jp
fstpt
jp
xchg
xchg
inc
inc
xchg
inc
xchg
cmc
fwait
insl
sarb
into
hlt
stc
aas
test
ds
aad
cmp
pop
std
dec
inc
inc
insl
or
cmc
js
and
arpl
xchg
out
pop
jo
pop
pusha
xchg
stos
xchg
xchg
lods
mov
and
mov
jbe
stos
cli
xchg
adc
pop
mov
jo
dec
mov
add
outsb
xchg
mov
es
aad
imul
mov
js
rcl
add
or
inc
jnp
jmp
rcl
in
jbe
test
out
sbb
jne
or
push
push
cltd
push
jae
outsl
fdivrs
sbb
in
test
xor
fldcw
div
stc
jge
cmpsb
lcall
pop
inc
ss
mov
in
xchg
jae
inc
sbb
pusha
and
xchg
loope
cli
mov
pop
lahf
pop
fbld
ljmp
sbb
jle
pop
sub
stc
mov
js
mov
mov
xchg
and
enter
repz
div
rol
mov
dec
sub
cltd
fs
sar
sub
push
outsb
inc
ljmp
in
and
ret
scas
popf
sub
mov
lahf
sbb
lret
sub
inc
cmp
ss
mov
or
test
jns
jns
sbb
push
out
mov
jbe
sbb
lock
sub
movsl
insb
test
notl
inc
and
insb
lods
sti
popa
arpl
ljmp
mov
jl
push
cmp
cmp
aaa
std
dec
and
sub
nop
sub
mov
dec
loopne
lret
push
insb
push
adc
fcomps
xchg
repnz
add
jnp
aas
or
popa
xchg
popl
cmp
aam
fwait
jge
pusha
cmp
and
lods
jecxz
cmp
repz
dec
fadds
xor
hlt
fidivl
ret
cs
xchg
orb
out
out
aad
or
mov
push
fs
inc
sbb
shlb
or
movsb
push
mov
or
push
inc
pop
cmp
lods
stc
xchg
pop
adc
rolb
les
cmp
lock
push
dec
mov
icebp
out
shrb
cltd
jnp
inc
cmp
sbb
clc
ret
jle
rcll
scas
cwtl
pop
xchg
mov
push
add
mov
popa
cmpsb
imul
insb
sub
lahf
outsl
push
lret
mov
int3
xor
idiv
adc
cmpsb
mov
cli
mov
dec
imulb
jnp
xchg
mov
bound
out
mov
das
ljmp
mov
pextrw
pushf
pop
dec
xor
mov
stc
inc
cli
mov
popa
repnz
ret
or
xchg
mov
or
xchg
adc
and
pop
cmp
or
xor
addr16
aam
dec
int3
hlt
push
push
push
outsl
je
or
sub
xor
ret
dec
repz
pop
pop
sub
or
out
arpl
add
pop
mov
jle
out
sub
call
push
clc
pop
sub
inc
mov
xor
mov
cmp
fstpl
dec
jmp
popa
fs
test
test
push
imul
fadds
mov
rcrb
adc
and
mov
subl
push
arpl
pop
cmp
ljmp
sub
into
pop
loopne
iret
mov
mov
rcr
shr
push
cmp
lahf
cmpb
insb
push
iret
adc
push
mov
stos
iret
mov
jmp
mov
mov
xor
push
mov
push
rorl
push
lea
adc
fdivrs
lea
mov
call
sbb
jne
cld
pop
and
mov
push
lock
sti
xor
shr
loop
icebp
jmp
add
cmp
cmp
dec
iret
ficoml
js
jmp
pop
add
hlt
adc
addr16
in
int3
or
sbb
test
mov
loop
sti
subl
mov
enter
mov
sarl
je
cmc
cmp
jb
lds
jns
adc
xchg
sahf
push
add
pop
and
mov
cmpsl
or
out
jle
dec
inc
push
repnz
pop
push
cs
cli
outsb
fwait
sub
fsubl
into
lahf
fistl
pop
insl
jns
add
add
xchg
std
enter
cmpsl
cmp
cmp
addb
mov
push
or
xor
rcl
inc
js
push
xor
sub
sbb
or
stos
scas
pop
negl
ror
leave
call
cmp
iret
sub
aas
dec
gs
shlb
xor
out
in
and
xor
xor
mov
add
jmp
fbld
ljmp
jns
jne
and
mov
insb
adc
or
xor
inc
rol
inc
sbb
fdivp
rol
mov
xchg
call
ljmp
push
loope
lea
xor
data16
sub
mov
push
or
xlat
popa
ds
push
add
mov
or
in
sbb
aas
push
out
daa
sub
xor
pop
stc
outsb
es
bound
xor
and
xchg
sbb
stos
mov
xor
or
lahf
je
fcompl
cmp
jmp
jbe,pn
sbb
mov
enter
scas
xchg
sbb
invd
in
cwtl
insb
mov
mov
mov
xchg
ret
sub
addr16
inc
fidivs
test
int3
mov
cmp
ja
idivb
shlb
mov
movsb
pop
enter
push
jp
jp
loopne,pn
mov
daa
cmp
jmp
jns
pop
dec
stc
flds
inc
mov
jecxz
cltd
sbb
jecxz
orl
mov
arpl
fstl
ds
adc
jl
push
mov
mov
mov
in
jle
add
mov
call
sbb
insl
fstpl
data16
adc
into
cmpb
gs
lds
pop
movsl
pusha
pop
pop
orl
loope
testl
sub
mov
out
push
adcl
cli
mov
cmp
push
mov
pushf
out
sbb
add
sahf
jb
lock
and
jecxz
push
dec
push
dec
stos
call
mov
loop
cs
jl
pop
jne
mov
ds
das
push
nop
fistpll
bound
outsl
stos
stc
out
bound
jnp
cltd
mov
in
sub
add
push
jnp
pop
addb
jae
lret
enter
lods
call
into
sub
dec
je
sbb
cmp
hlt
andl
fldl
je
push
pop
jnp
mov
shlb
push
dec
out
cmp
mov
dec
pop
sbb
xchg
cli
push
mov
fsubp
clc
call
dec
cmp
aam
dec
cltd
fadd
dec
lret
lods
daa
loopne
in
add
adc
test
or
outsl
add
jns
pop
mov
rcrb
or
addr16
xchg
bound
stc
jb
adc
je
fcmovb
sbbl
pushf
mov
sub
sti
xlat
gs
xchg
mov
inc
jo
int3
or
lock
aas
mov
gs
aaa
daa
jg
push
into
dec
xchg
ficoms
pop
inc
dec
xchg
lods
cmpsl
mov
iret
in
xchg
adc
xchg
mov
insb
push
inc
and
popf
out
out
int3
inc
jp
pop
xchg
xchg
aad
fsubrl
int3
jno
xor
das
cmp
enter
mov
push
loop
jp
pop
cmp
adc
mov
or
inc
sbb
adc
jl
ret
clc
mov
stc
dec
dec
adc
inc
montmul
cmpsb
sbb
ret
xchg
out
xchg
jb
scas
cmpsb
inc
sub
js
sub
adcl
jp
cli
sbb
aaa
sbb
scas
inc
imul
jl
test
testb
fdivr
cmp
mov
and
sahf
mov
and
rcrb
xor
aam
dec
popa
sbb
push
xchg
inc
jo
add
xor
xor
mov
mov
inc
data16
sub
push
repnz
mov
stos
test
ficoms
fdivrs
movsb
sub
or
xchg
push
loop
pop
lcall
add
pusha
rcl
aaa
mov
mov
jb
scas
out
mov
js
push
js
lods
dec
sti
pause
cmp
cltd
daa
push
orl
adc
fldln2
or
cld
into
ss
mov
sarl
clc
jne
mov
cld
lds
int
push
pop
mov
pushf
or
aad
adc
ds
jbe
and
inc
in
js
lds
jb
sti
dec
leave
lcall
mov
scas
out
stc
repnz
aam
or
pop
pushf
sub
and
test
shlb
adcb
fs
lret
jns
xchg
pop
mov
mov
or
xchg
push
arpl
fdiv
push
dec
xor
xor
push
not
push
jmp
stos
mov
mov
leave
ret
pop
mov
les
mov
flds
lcall
out
mov
movl
mov
jno
addb
push
cmp
dec
lea
jno
xchg
mov
out
or
jmp
or
or
mov
xchg
cmp
scas
cs
jae
jae
jle
and
mov
sti
xchg
arpl
loop
and
fmull
lcall
pop
fdivr
dec
push
in
mov
jo
cmpb
push
gs
xchg
inc
cmpsb
jne
sbb
add
and
add
repnz
enter
cmpsl
push
insl
into
xor
mov
dec
mov
push
mov
lret
lods
repz
fstpt
cmpsl
ja
incl
xchg
arpl
push
fs
or
jb
push
and
mov
push
xchg
hlt
cmp
lahf
ss
push
fists
jmp
xor
fists
mov
movsb
xchg
fisttps
and
xor
movsb
mov
jle
xchg
adc
ljmp
lds
cmpl
or
lcall
jmp
cld
xchg
lock
fsubrl
jle
add
aam
xchg
push
or
stos
push
pop
sahf
leave
mov
sbb
sub
sub
jb
repnz
ss
xchg
shr
shlb
lcall
cmp
ret
dec
les
lock
or
in
stos
and
popa
jg
push
inc
fcomps
push
pusha
psrad
xchg
testb
dec
call
or
fldcw
fnstsw
data16
push
subb
pop
sbb
dec
repz
and
into
ljmp
push
lock
xchg
mov
je
out
sbb
fldcw
pop
out
sub
adc
scas
shrb
aaa
sub
scas
and
mov
rorl
sahf
pushf
adc
push
sahf
dec
fs
and
inc
or
daa
sbb
mov
and
jg
cmp
inc
fs
ljmp
repz
fmull
lods
mov
ret
icebp
fdivr
es
dec
and
hlt
mov
pop
sbb
jnp
ret
loop
test
mov
out
sub
lahf
cmpsb
incb
jnp
loopne
push
cmp
cmp
mov
into
fmuls
mov
push
scas
pop
dec
imul
sbb
mov
mov
popa
in
and
push
pop
roll
lret
popf
scas
int
in
jno
les
pop
in
sarb
mov
push
pushl
insl
pop
aas
and
movsl
movsb
pop
inc
mov
fmull
orb
ret
mov
std
pop
dec
sbb
pop
mov
mov
and
loope
mov
cmpl
xlat
sti
mov
icebp
jno
fsubrl
xchg
ret
insb
jle
xchg
test
loopne
cmpsb
mov
mov
fldcw
xchg
and
or
hlt
push
mov
xchg
xchg
gs
movsb
cmp
sbb
jae
es
ljmp
ja
mov
aam
push
and
and
xchg
rolb
lock
ret
mov
cli
adc
inc
push
in
loopne
xchg
mov
test
xor
cmpsb
xlat
mov
lock
sbb
scas
mov
out
bound
sti
jmp
mov
aam
outsb
push
ds
test
les
cmp
imul
sub
cmpsl
fidivrs
mov
mov
into
out
sbb
pop
in
ret
sbb
pop
cltd
loopne
xlat
dec
push
insl
inc
inc
mov
xor
mov
push
cld
mulb
mov
jb
imul
sub
es
mov
xchg
push
push
jne
sub
fwait
mov
lret
clc
inc
push
cmp
or
das
pop
jp
movsb
mov
cmp
sbb
stos
pushf
xchg
test
sahf
mov
mov
cli
in
iret
outsl
xchg
das
pushf
lcall
jne
out
out
mov
pop
int
pop
mov
sub
and
mov
sbb
ljmp
add
jge
inc
jne
out
xchg
test
push
insb
pop
add
xor
les
int
pop
adc
ret
add
adc
mov
mov
mov
inc
and
push
or
and
adc
cmp
push
inc
push
push
loopne
and
test
add
cltd
add
imul
inc
loop
push
aas
stos
fwait
cmpsb
mov
push
mov
loope,pt
push
rcrl
xor
xor
sti
fldt
repnz
ss
push
cmpsb
xchg
cmp
mov
xorl
cmpsb
imul
or
push
xlat
lret
aaa
test
ja
pushf
adc
lcall
pusha
and
pop
push
negl
push
pusha
sbb
mov
scas
cli
das
dec
stos
mov
cmp
loop
mov
stos
pop
and
fisttpl
xlat
fwait
pop
mov
or
cmpsb
fiadds
pop
xchg
data16
adc
cmpsb
jae
mov
push
xchg
add
dec
or
sub
gs
dec
mov
fmull
pusha
xchg
push
add
scas
inc
data16
call
and
popf
jmp
jae
icebp
pop
cmp
xchg
mov
out
cmp
std
jno
add
icebp
dec
fildl
icebp
ss
sbb
lods
repz
ljmp
dec
aas
emms
mov
pop
mov
rol
pushf
cmpsl
test
outsl
mov
mov
jecxz
add
fcom
stos
imul
icebp
fsubr
cmp
jl
rorb
push
fidivrl
lods
out
jecxz
mov
adc
inc
mov
es
out
into
inc
jne
push
pop
jno
and
adc
cltd
xchg
cmc
imul
push
test
push
ja
xchg
out
push
jb
xor
pop
lea
clc
arpl
jp
sub
sub
jns
sbb
adc
adc
shlb
sub
jb
cmp
punpckhdq
jo
shll
movsl
add
sbb
stc
xor
push
dec
pop
jecxz
pop
movsl
out
fcomps
add
mov
inc
pop
sbb
fs
out
cmpsl
stos
cmp
aaa
pop
std
jecxz
lcall
pop
push
xchg
mov
sub
sub
lret
out
out
test
test
idivb
iret
or
xor
or
pop
mov
push
pusha
or
add
mov
push
adc
push
ficomps
xchg
xor
mov
jbe
movsb
fstpl
sahf
jbe
cmpsb
mov
inc
add
pop
enter
sub
mov
xor
mov
loope
leave
out
xchg
xchg
mov
cmp
dec
cmp
or
mov
mov
pop
shll
pusha
and
aaa
or
cltd
ja
dec
jp
jle
sub
mov
dec
fwait
jnp
cld
dec
aas
mov
int3
cmp
sub
sub
push
cmp
iret
sbb
shlb
sub
into
mov
push
movsb
hlt
pushf
xchg
popf
xchg
lret
lods
getsec
mov
arpl
dec
mov
fildll
aad
les
xchg
sbb
push
push
mov
out
push
pop
bound
jl
pop
nop
in
test
pop
lods
arpl
lret
or
push
repz
jmp
inc
loopne
push
inc
pop
out
and
pop
push
xor
ss
pop
aad
inc
fcompl
mov
add
inc
mov
aad
mov
xchg
std
cltd
adc
mov
hlt
orb
sti
inc
roll
add
sbb
call
hlt
cwtl
inc
dec
fwait
popa
jle
gs
std
jl
add
mov
cmpsl
shlb
jne
arpl
arpl
mov
cld
jo
bound
das
mov
shl
mov
jp
int
push
fsubs
hlt
cmp
xrelease
inc
out
pop
fiadds
jmp
xchg
dec
pop
jecxz
adc
xchg
fsub
cmp
sbb
notl
adc
cmc
fsubrl
andl
jp
sbb
hlt
outsl
mov
sub
aas
and
push
pop
mov
es
leave
push
stos
stc
pop
xchg
notb
fwait
pop
call
lcall
jnp
dec
and
pop
jno
push
jnp
sarb
insb
jp
mov
orl
sbb
bound
ds
mov
inc
adc
hlt
fs
and
fiaddl
pop
lret
cmp
xchg
sub
sub
lock
call
and
subl
lds
pop
xchg
divl
js
je
pop
push
in
fcmovne
cltd
ret
in
pop
push
xchg
mov
or
lret
cmp
cmc
cli
icebp
lods
sub
pop
loopne
repz
cld
pop
xor
popa
daa
movsl
or
mov
pop
in
xlat
jp
andb
ud0
int
mov
in
cmpb
lcall
and
add
and
inc
jbe
xchg
pop
mov
add
fld
xor
loope
mov
jg
inc
jo
cld
dec
and
testl
mov
xchg
mov
fsubrs
jmp
cltd
fsubr
scas
mov
mov
mov
fdivl
insb
mov
adc
mov
and
loopne
mov
jp
arpl
popa
out
test
cmp
xor
push
cmp
xchg
shll
dec
push
add
mov
pop
ret
hlt
and
rorb
push
es
inc
inc
mov
fisttps
sahf
rcl
mov
xchg
inc
mov
jnp
mov
cmp
in
mov
push
ljmp
in
test
mov
cmpsl
jns
enter
fildl
sbb
xchg
hlt
hlt
cmp
lahf
lahf
ljmp
repz
dec
push
cli
dec
xor
loope
sbb
mov
dec
ljmp
add
mov
popa
cltd
jnp
mov
out
push
push
js
jmp
iret
xchg
in
xor
xchg
rclb
fists
test
dec
scas
adcb
dec
outsl
jp
jae
orl
jb
out
mov
jns
aad
pop
ret
dec
xchg
mov
adc
adc
shl
ss
arpl
add
rorb
mov
lock
and
mov
and
loop
pop
add
inc
and
xchg
lds
mov
mov
test
jle
push
and
sub
xchg
insb
jno
xor
pop
mov
hlt
idivb
push
mov
or
repnz
outsl
or
xchg
lods
mov
loop
jle
push
scas
scas
cwtl
fiaddl
push
xor
jbe
xchg
pop
add
mov
jns
and
lods
imul
ds
pop
dec
jmp
pop
inc
xchg
mov
adc
loop
or
add
sub
add
mov
hlt
or
xchg
loop
or
cld
ss
inc
test
cmp
sbb
cld
push
cwtl
out
mov
aad
push
inc
leave
jecxz
aas
pop
jnp
lds
fildl
sahf
int
out
add
movsl
inc
js
push
dec
imul
icebp
xor
jg
push
aam
pushf
mov
int
add
ret
es
dec
shl
cmpsb
jge
xchg
xor
fldenv
and
testl
add
sbb
leave
imul
test
or
cmp
sbb
add
insl
in
sbb
xor
pushf
mov
addb
xchg
scas
and
fs
adc
sub
aad
mov
out
jmp
dec
sbb
push
aad
lahf
xchg
sbb
dec
mov
ja
in
scas
dec
mov
std
clc
inc
jbe
mov
or
mov
outsb
cli
or
mov
adc
loop
outsl
test
jbe
mov
cwtl
ss
dec
cwtl
imul
cmp
outsb
call
add
addb
push
xorb
cmp
dec
xor
pop
push
xchg
mov
mov
addr16
pop
fs
xor
adc
or
stos
popa
xchg
addr16
aaa
cli
daa
in
mov
repnz
es
adc
adc
orb
loopne
dec
xor
xor
push
es
inc
or
aad
jnp
cli
icebp
repnz
mov
and
mov
jns
mov
roll
aas
mov
or
inc
mov
dec
data16
jmp
xchg
jmp
cmp
ss
mov
ljmp
popa
idivb
repz
push
cmp
or
cmp
xor
mov
mov
sub
mov
ss
test
imul
insl
add
lods
or
xor
mov
test
mov
scas
test
xor
push
mov
icebp
fildll
daa
dec
testb
push
xor
jg
or
xbegin
adc
cs
mov
mov
and
addr16
pop
mov
adc
iret
sbb
adc
inc
pusha
xor
lods
pop
add
insl
cmp
nop
inc
clc
mov
push
out
std
push
negl
sbb
ds
cmc
xchg
ja
and
mov
pop
jno
cli
imul
icebp
stos
jg
add
xor
push
or
mov
push
xchg
pop
cltd
jae
inc
cmp
xor
fbld
pop
data16
push
loope
fdivs
cmp
popf
adc
xor
pop
sbb
jmp
sub
shl
sub
or
stos
sub
mov
mov
jg
jmp
ret
enter
jmp
sarl
add
jae
lock
mov
jle
dec
sbbb
and
xor
mov
pop
popf
pop
inc
sub
inc
sub
add
or
jmp
addb
cltd
push
sbb
imul
mov
jmp
ja
iret
and
stos
mov
lea
lock
sbb
jmp
mov
mov
xor
pop
sbb
sub
mov
lock
jmp
xor
cld
clc
in
scas
shll
divl
sahf
pop
inc
test
stos
inc
sub
xlat
and
out
xchg
fnstenv
lret
pop
cmp
jae
rcr
sahf
test
dec
dec
rcll
inc
popf
add
cmp
pop
add
mov
into
ret
int
scas
cmp
add
in
or
in
mov
and
cli
loope
gs
cmp
mov
popf
sbb
fnsave
mov
cltd
data16
stos
lret
pop
jbe
insb
test
sub
test
pushf
sub
xchg
or
popf
push
movb
cli
inc
xor
sbb
test
cmp
addb
mov
and
clc
xchg
cmp
dec
inc
shrb
dec
insl
mov
pop
pop
popa
andb
dec
or
faddl
lea
xor
push
dec
xor
mov
test
sbb
sub
or
lcall
sbb
je
popa
sub
push
lahf
mov
sbb
sbb
and
lret
push
inc
or
push
mov
out
loope
bound
test
dec
adc
lret
int3
out
mov
fsubrl
cld
sub
cs
xchg
sbb
dec
hlt
add
xchg
cmp
sbb
mov
adc
dec
adc
hlt
dec
mov
jns
xor
inc
pop
pop
js
mov
out
in
into
and
mull
pop
xor
rolb
notb
leave
lods
filds
mov
inc
mov
std
xor
sub
pop
cmp
aam
mov
test
adc
inc
movsl
insb
or
insb
push
mov
rclb
xchg
aam
mov
ljmp
je
mov
adc
xchg
outsl
mov
push
and
ret
sub
push
push
icebp
or
mov
cld
and
push
sub
out
xchg
stc
mov
lds
in
testl
imul
jp
push
or
test
mov
mov
add
insb
lock
dec
and
pop
push
push
inc
loope
jb
push
aas
arpl
pop
sbb
mov
lret
xchg
out
push
fimull
fidivs
movsb
repnz
lods
jge
fs
repz
mov
hlt
lods
int
hlt
je
lret
lret
lds
test
cmp
xor
sub
xor
mov
jmp
xchg
dec
pushf
lock
jecxz
icebp
push
cmp
inc
call
mov
iret
cmp
lods
sbb
or
jmp
ret
subl
repnz
xor
sub
data16
bound
stc
and
aam
sbb
xor
dec
xor
int
cmc
inc
sbb
adc
aad
repz
into
xchg
int3
loop
into
out
int
xor
or
mov
xor
loope
or
ret
mov
pop
in
or
cmp
test
aas
enter
jge
enter
js
mov
xor
subl
scas
or
pop
or
adc
jne
dec
out
enter
fisubl
pusha
push
jno
ret
int3
test
xchg
leave
adc
or
pop
cwtl
inc
aad
push
or
or
pop
sub
add
cmp
fnstsw
xor
enter
fnstsw
push
aad
pop
jae
subl
push
sti
inc
push
push
pop
out
mov
lcall
inc
mov
inc
lret
dec
scas
jae
lahf
xchg
call
cltd
mov
ficoml
xor
enter
pop
mov
outsl
ss
leave
sub
enter
aas
add
dec
pop
mov
dec
int3
pop
aam
ss
rol
loopne
pop
int
fnstsw
pop
lock
push
and
add
pop
jg
bound
loop
xor
xchg
iret
push
jnp
xor
loopne
push
or
sub
push
fwait
inc
cmp
mov
bound
std
arpl
scas
push
cli
cmpb
repnz
dec
xchg
and
fwait
mov
jbe
adc
out
adc
icebp
nop
test
xchg
insl
mov
jb
cmp
ret
stos
xor
xor
mov
lods
movb
outsb
pop
cli
or
jge
sarb
add
mov
xchg
sbb
push
mov
mov
lods
push
mov
cmpsl
sbb
dec
popf
cmp
scas
das
sub
jnp
push
dec
cmp
leave
test
mov
loopne
and
jb
pop
push
add
ss
scas
lock
inc
movsb
lods
shll
adc
rcrb
dec
movsl
dec
push
pxor
push
fdivrs
xlat
mov
xchg
gs
sbb
lret
jg
push
loope
adc
xor
dec
popa
add
aad
les
mov
sbbb
inc
push
rep
aam
pop
mov
sub
mov
inc
roll
mov
stos
pop
add
int3
ljmp
jmp
add
mov
movl
rdtsc
fs
sbb
ds
push
test
addr16
fisttpll
fdivs
adc
cmp
int3
push
aas
jmp
fwait
andl
mov
pop
push
popa
pop
jno
test
inc
xor
dec
and
js
sub
xor
and
flds
mov
mov
iret
mov
inc
ds
gs
ficoml
addb
lret
fucomip
jmp
fisttpl
push
jne
jp
push
push
bound
jge
cmp
fadd
jge
cmp
divb
lret
int3
jge
sub
xchg
mov
mov
int3
test
xor
or
xchg
mov
daa
sbbl
sub
mov
or
mov
fstps
fidivs
pop
cmp
fcmovnbe
mov
xor
sub
out
mov
ret
dec
jbe
push
fldln2
mov
mov
loop
and
push
sbb
adc
inc
lods
or
push
std
xchg
xor
sbb
mov
push
clc
dec
rclb
pop
cli
pusha
jmp
adc
loop
leave
orl
mov
enter
je
popf
mov
test
incb
lock
roll
xor
mulb
push
lock
lret
jno
aad
jmp
jl
out
outsb
inc
jmp
dec
gs
jp
out
fwait
in
fcmovb
sbb
mov
pop
sub
fwait
mov
in
dec
and
dec
inc
jb
mov
add
movsb
out
lods
enter
cmp
das
jbe
pop
inc
cmp
mov
and
pop
js
dec
in
mov
imul
stos
mov
pop
out
aad
mov
sub
cmp
xchg
mov
fdivrl
lret
fcmove
lcall
idivb
das
in
aam
cli
shr
sbb
lock
scas
je
xchg
sub
jle
mov
adc
movsl
movsl
sahf
cmp
cltd
xchg
mov
pop
es
add
pop
into
jp
dec
inc
dec
cs
insl
outsl
xor
movb
out
and
aad
add
lahf
mov
push
in
int3
lods
cmp
outsl
lea
add
insl
cmp
mov
inc
pusha
lret
add
fildl
xchg
in
fstps
mov
jle
mov
insb
imul
dec
xor
xor
ficomps
inc
add
cmpsb
xchg
xchg
cmp
jmp
imul
or
scas
mov
jecxz
jns
cmpsl
push
call
int
cli
dec
in
and
and
sbb
out
inc
and
stos
lret
or
ss
iret
sbb
mov
push
data16
data16
xor
sbb
push
loope
mov
idivl
incb
stos
jno
lds
jo
dec
js
imull
sub
stc
scas
sbbb
xchg
pop
dec
je
adc
lret
mov
test
push
pop
jecxz
in
push
xchg
outsb
fcoms
decb
jb
fistpll
mov
je
ret
loope
cmp
push
sub
pop
mov
sub
sti
and
jg
stos
pop
jo
cmp
or
jle
pop
pop
enter
mov
in
fsts
insl
add
add
das
imul
mov
jno
dec
std
inc
xchg
or
fidivrs
add
test
incl
fwait
pop
out
iret
add
mov
mov
fstpt
inc
cmc
xchg
mov
dec
jp
sub
jae
push
stos
outsl
mov
jae
inc
insb
stc
cmp
jae
pop
int
loope
xchg
clc
mov
mov
pop
xor
je
adc
sbb
int3
xchg
out
cmp
pop
sub
sub
mov
test
jmp
mov
dec
xor
dec
stos
lret
filds
or
jg
in
push
jg
inc
jo
lret
jmp
xor
pusha
jmp
jno
push
or
push
pop
jnp
sub
jae
adc
fstpt
outsl
push
sbb
cmpsl
sub
lods
ficoms
mov
ret
sti
xchg
inc
xchg
cmp
mov
push
jmp
es
sbb
mov
push
mov
loopne
sbb
pusha
in
pop
inc
mov
call
jg
shlb
inc
pop
fcmovne
push
test
adc
sbb
insb
xchg
or
lahf
pop
clc
inc
pop
insw
push
ficoml
pusha
inc
and
cltd
add
loopne
pop
xchg
inc
mov
sbb
pop
adc
insb
sbb
stos
push
lock
sub
repnz
mov
mov
rcl
pop
xchg
shlb
sahf
sbb
jns
insl
cmp
lcall
js
leave
xor
das
jae
xor
imul
into
adc
loopne
pcmpeqw
jp
stos
jl
jo
mov
stc
lea
mov
lahf
xor
jecxz
jl
test
outsl
cmc
shll
stos
lods
daa
add
sbb
in
test
cli
addr16
nop
ret
mov
movswl
mov
jp
jle
jnp
adc
ret
ss
sub
popf
sahf
scas
icebp
out
cmp
mov
xor
push
stc
pop
adc
add
jp
sbb
xchg
jge
outsb
jl
sbb
xchg
mov
mov
dec
adc
sbb
int
call
jns
lret
rclb
jne
mov
fisubl
sbb
and
cmp
mov
in
jg
mov
loopne
inc
pop
scas
jp
daa
mov
add
out
cmp
push
inc
mov
mov
push
pop
jb
and
repz
test
jns
gs
and
rclb
pop
xchg
jb
icebp
xor
sbb
rep
outsl
sahf
adc
mov
imull
notl
test
jnp
mov
cltd
out
lret
iret
inc
dec
xor
push
and
add
mov
xchg
inc
inc
mov
jp
fwait
ljmp
sbb
add
mov
xchg
mov
dec
jp
mov
je
repz
repz
inc
fdivrs
mov
fcmove
mov
in
pop
xor
in
popf
push
mov
movsl
fnstsw
insl
into
push
lods
arpl
adc
shl
aas
dec
xor
push
sahf
pop
inc
inc
push
jno
jmp
insl
inc
cmp
fadds
je
lods
push
imul
xchg
mov
scas
push
fadd
sub
rorl
and
cmp
sahf
mov
cmpsl
mov
sarb
xchg
sbb
push
gs
adc
xchg
aaa
fucom
jae
popf
rcrl
xchg
pop
stc
mov
mov
push
push
mov
das
pop
int
rorb
lcall
addr16
and
adc
enter
imul
mov
mov
adc
loopne
rolb
dec
xor
out
outsl
ds
aam
xchg
add
jno
and
int
sub
das
mov
movsl
test
fcoms
mov
sbb
mov
dec
inc
dec
loop
ljmp
mov
xor
adc
mov
ja
push
sub
xchg
sbb
sub
inc
or
fisubrs
pop
iret
push
or
sar
repnz
das
inc
int3
dec
mov
xchg
hlt
xor
popf
dec
xor
cli
dec
addr16
inc
or
xchg
rol
mov
dec
mov
lds
addb
in
loop
jecxz
jnp
jno
in
orl
pop
jbe
jge
int3
mov
repnz
sub
ret
movsl
aaa
gs
or
jb
fcoms
mov
pushf
sahf
dec
lea
xchg
jle
das
in
mov
cmpsb
aas
sub
push
and
cs
ficomps
das
les
out
push
dec
imul
pop
out
pusha
cld
ljmp
sbb
insb
jo
es
clc
pop
faddl
jmp
adc
je
fdivs
dec
shrb
pop
loop
cmp
cmp
rolb
lret
or
inc
xor
iret
mov
inc
push
dec
cmp
cmpsb
xchg
ja
dec
ljmp
push
dec
dec
pop
es
fimull
stos
mov
and
mov
jno
sbb
xor
rcll
and
icebp
pop
cmp
int3
jae
mov
adc
and
add
fisubrl
rclb
imul
push
and
mov
stos
mov
pop
sub
xchg
test
int3
pusha
jp
in
sub
pop
push
dec
in
sub
or
out
dec
dec
insb
subb
test
push
fxch
lahf
leave
xchg
pop
in
sbb
shrl
mov
mov
jp
test
sbb
mov
std
aad
xorl
sub
pop
daa
pop
mov
dec
mov
outsb
fnstenv
jae
lcall
mov
fidivs
push
aas
cmp
aam
sti
mov
shrl
cli
push
in
jp
dec
dec
xor
inc
gs
push
cmpsb
repz
sahf
lods
mov
push
repz
fcmovnbe
iret
mov
push
sub
xor
inc
es
aad
in
call
int
sub
pop
int
sub
or
mov
mov
mov
push
xlat
lods
daa
pop
pushf
aaa
mov
shll
call
sahf
inc
sahf
mov
and
cmpsb
not
test
pushf
dec
and
mov
xchg
mov
stos
fcomi
xor
out
mov
dec
push
and
sbb
into
cmp
mov
and
ljmp
pop
dec
bound
shlb
sub
pop
or
mov
cmp
lcall
sub
in
fisubs
push
sub
mov
les
movb
mov
test
rcr
scas
aad
scas
iret
xchg
jae
cs
repnz
cmp
mov
insb
cmp
or
fld
xor
cmpsb
nop
mov
cli
pop
imull
cs
mov
jnp
jnp
hlt
pop
mov
pop
je
cmp
mov
ror
jb
pop
inc
mov
gs
push
xchg
pop
mov
sbb
ret
push
jnp
mov
jg
sub
sahf
daa
loopne
cld
js
xchg
add
in
sub
into
les
mov
aad
dec
iret
sbbl
loopne
out
icebp
fistpll
out
fildl
sti
fcomi
arpl
das
cmp
mov
cs
jae
xor
push
push
adc
lock
outsl
ret
push
xchg
jl
insb
adc
jmp
stc
sub
and
insl
popa
aam
lret
outsl
pop
test
imul
jo
stos
dec
xlat
lea
enter
add
mov
mov
xor
mov
add
pop
mov
mov
outsb
jmp
fs
push
rcrl
mov
pop
adc
sub
jnp
inc
pop
mov
jecxz
push
lcall
sahf
je
xchg
cmc
add
std
add
inc
pop
pushf
jbe
mov
xchg
es
ds
jb
inc
fimuls
mov
insb
test
sarb
xlat
jge
sahf
pop
in
push
fwait
add
mov
push
dec
icebp
in
faddl
call
mov
aam
dec
lods
sub
adc
ret
sbbb
pop
int
push
mov
sub
shll
sub
adc
clc
and
or
mov
push
mov
add
ljmp
sti
pop
pop
adc
and
or
push
mov
and
cmpsl
add
and
xchg
mov
call
inc
rorl
push
aaa
out
xchg
dec
xor
sbb
mov
roll
xor
mov
sub
popl
push
or
cs
pusha
je
pusha
imul
inc
daa
std
push
inc
xchg
xchg
aas
outsb
dec
and
scas
sti
ret
popa
insb
shlb
mov
daa
mov
mov
cltd
sbb
pop
push
jne
lock
sub
in
int
testl
scas
leave
out
ret
add
call
or
rol
inc
mov
dec
jg
and
bound
rol
mulb
xchg
test
shrl
cmpsb
jns
cmc
or
popa
gs
mov
ss
ja
add
movsl
push
sbb
rcrb
lret
faddp
cmpsl
ljmp
inc
mov
fs
pop
xlat
adc
das
jp
mov
cmpsl
adc
ss
lds
mov
loope
push
subb
lahf
pushf
call
daa
sbb
push
add
mov
adc
mov
jne
fdivrl
jp
mov
sbb
or
lret
dec
lahf
subl
psubw
aad
push
pop
mov
mov
xchg
ret
inc
dec
mov
fnsave
lahf
mov
in
inc
adc
mov
scas
aaa
and
je
gs
nop
xchg
lods
adc
dec
arpl
andl
fiaddl
shlb
hlt
fmuls
push
es
and
dec
das
jl
pop
xor
enter
aas
sbb
adc
out
inc
flds
cmp
add
dec
cs
jg
test
push
sahf
and
push
add
add
repz
inc
imul
add
adc
aad
mov
jge
or
in
outsl
adc
xchg
addl
clc
push
mov
pop
insb
sub
jle
lahf
ljmp
or
ljmp
and
cmc
cld
lds
add
hlt
cmp
subb
sub
cmpsb
xchg
add
sti
mov
inc
cld
movsl
xchg
xor
roll
call
ret
push
jb
cmpsb
out
ds
sub
insl
repz
fxch
cmp
cltd
sbbb
call
inc
cmpsb
sbb
pcmpgtw
jmp
cli
mov
and
cmpsb
test
push
into
or
pop
int3
imulb
inc
inc
pop
push
pop
mov
fisttpll
jb
jecxz
or
or
jge
push
out
or
in
xchg
loop
pop
insl
mov
ror
cmpsl
pop
jnp
call
jo
jge
test
jno
adc
jmp
mov
jae
pop
and
and
rcrl
lahf
fnstenv
sub
jg
and
sbb
roll
add
mov
aad
and
cmpsb
push
jbe
icebp
loop
ret
in
aad
jmp
sub
sbb
inc
mov
push
xchg
mov
cmp
fcoml
imul
int3
add
pop
out
inc
fisubrl
mov
aad
adc
sbb
add
cmpsb
jge
pop
sti
mov
cmp
cmp
mov
mov
das
push
in
sub
inc
xchg
or
sahf
imul
or
shll
lods
add
xchg
xchg
jo
xchg
lods
adc
cmpb
dec
sub
mov
notl
cmp
out
inc
mov
xor
cmp
xlat
jl
jno
adc
repnz
mov
sbb
cltd
inc
lahf
fsub
xor
adc
movsl
cmpsb
call
jo
fcompl
ficoms
mov
test
aas
mov
sub
mov
jmp
sarl
mull
and
sti
inc
negb
mov
push
shl
std
imul
adc
iret
jge
sub
xchg
test
aas
pop
fs
outsl
out
and
outsb
mov
sub
xchg
or
cmpsb
sub
xchg
push
sbb
add
jmp
jg
arpl
test
sbb
pop
ja
aaa
pop
mov
cmp
out
and
shrb
add
sbb
repz
cmp
scas
mov
outsl
dec
sbb
test
loop
cltd
sahf
cmp
out
outsl
int3
xor
inc
sub
inc
jno
xor
mov
inc
std
and
mov
inc
lahf
call
adc
or
loope
jg
xchg
sbb
inc
jne
mov
inc
sbb
aam
repnz
mov
icebp
and
inc
test
test
cltd
in
into
ficoml
pop
out
pop
cld
sbb
out
in
int
mov
movsl
jg
inc
loopne
rcr
nop
and
push
ds
push
mov
jp
add
sub
fwait
add
gs
jle
out
sahf
pop
aaa
inc
iret
hlt
lds
jp
cmpsl
rorb
popf
hlt
push
fs
xchg
push
in
js
aad
cmpsb
insl
testl
sub
rorb
cmp
mov
push
sub
sub
movsl
fs
pop
jno
xchg
aad
sub
xchg
add
add
jp
repz
pop
xchg
js
mov
aam
rorb
mov
mov
aaa
pop
inc
repnz
mov
push
pop
xchg
test
pop
sahf
rorl
add
push
orb
xor
daa
pushf
out
in
iret
adc
pop
lock
test
call
dec
xlat
mov
iret
icebp
imul
cmp
iret
inc
ret
clc
pop
data16
jnp
leave
test
xchg
mov
jmp
pop
mov
das
jnp
pop
lock
aad
mov
xchg
fwait
jg
vfnmaddpd
cmp
scas
ss
rorl
pop
into
in
adc
shll
adcl
or
jbe
rclb
outsb
adc
stc
stc
inc
lods
out
rol
dec
hlt
repz
lret
ficoml
lods
push
sbb
pop
jbe
xchg
les
adc
arpl
mov
cli
icebp
cs
push
lock
je
mov
sub
dec
push
outsl
add
mulb
stc
jo
imul
cmp
ss
scas
cld
outsb
sbb
shl
out
cmpsl
movsl
and
loope
scas
xchg
push
sub
fs
iret
pop
or
pop
push
mov
sahf
push
and
mov
or
jmp
mov
sbbb
mov
int
fbld
dec
sbb
movsl
ljmp
jnp
outsl
incb
inc
cmp
pop
and
add
stos
cmpsb
fiadds
in
inc
loope
sarb
inc
fwait
inc
xchg
sbb
lock
cltd
add
push
ljmp
sarb
repnz
xchg
test
cmp
orb
adc
scas
push
aam
and
jg
testb
or
shll
rol
mov
mov
jb
call
cld
pop
adc
dec
dec
pushf
test
repz
ret
xor
sti
cltd
sarl
xor
sub
and
cmpsl
xchg
popl
in
mov
pop
mov
add
sub
cmpsl
dec
loopne
pop
pop
in
mov
pop
add
cmp
lret
test
jle
clc
mov
or
loop
rorb
leave
fs
mov
test
je
sub
and
lahf
outsb
pusha
int3
icebp
loope
fsubrl
cmp
inc
inc
sbb
ljmp
pop
jne
pop
jne
mov
pop
out
fisttpl
inc
or
stos
sarl
into
sbb
pop
jg
pop
push
and
dec
in
es
inc
mov
ret
and
shll
jne
fcomps
out
push
xchg
test
popa
push
outsl
lods
jno
jmp
mov
xor
and
decb
push
pop
and
out
cltd
in
xor
cld
mov
iret
or
sti
xchg
rep
aaa
dec
xchg
cmp
cmp
lds
lret
dec
cwtl
sub
mov
jb
inc
outsl
fimuls
movsl
xorl
mov
or
jmp
arpl
push
xchg
mov
fmuls
inc
addb
inc
insb
iret
push
loop
hlt
rep
shl
sub
cmp
and
aaa
adc
inc
sbb
out
inc
icebp
mov
in
lock
ret
out
ss
push
dec
daa
fcmovbe
in
dec
icebp
in
pop
repz
inc
sub
mov
lds
lea
repz
and
lret
push
cli
out
xchg
and
js
mov
cld
jl
mov
sbb
stos
sub
aam
lea
rorl
imul
inc
test
rcl
je
mov
jns
stc
add
mov
repnz
imul
xor
cmp
in
mov
pop
fsubs
and
scas
call
and
insb
dec
jmp
imul
and
xchg
mov
lock
das
mov
arpl
ss
pop
fmul
sbb
add
aaa
adc
sahf
pop
loope
stc
dec
add
pop
inc
pop
lea
cmpsb
lea
xlat
xor
jecxz
sbb
xor
xchg
mov
fcmovu
call
push
adc
lret
lret
xchg
add
jg
fiadds
fmull
outsl
in
bound
loop
dec
inc
sbb
jo
jl
push
pop
lahf
jp
sbb
dec
mov
mov
add
mov
inc
popl
inc
scas
adc
mov
xchg
shlb
sub
jae
inc
adc
sti
inc
push
mov
mov
push
movd
xorb
mov
cli
fcmovnu
mov
mov
das
push
xchg
pushf
mov
dec
pop
das
mov
inc
cmp
lahf
pop
push
ret
push
push
pop
shll
add
jb
ret
add
mov
in
push
imull
loop
dec
or
push
out
dec
xchg
xor
or
pop
push
xlat
mov
lock
ret
adc
mov
inc
xor
xor
scas
mov
mov
call
sub
mov
fwait
cmpsb
call
enter
jge
insb
mov
cwtl
cmp
jg
lds
pop
mov
add
sti
push
rclb
xchg
pop
cmpl
lahf
jno
xchg
sbb
insl
and
scas
lods
xchg
mov
xor
imulb
negl
pop
push
mov
scas
push
repnz
mov
xor
pop
lds
mov
mov
mov
out
cmp
movsb
mov
scas
lods
call
pop
xor
jno
sbb
pop
inc
jae
sbb
scas
pop
fidivrl
pop
mov
and
shlb
out
fs
daa
in
inc
mov
aad
lods
jl
outsb
movsb
sahf
jne
aam
les
jae
mov
mov
es
or
mov
jno
or
cs
pop
push
mov
repz
add
in
clc
push
xor
sbb
xchg
out
frndint
outsb
mov
cmp
mov
jmp
jnp
jnp
pop
cli
adc
lds
push
and
cmpb
xor
cmpsb
push
imul
enter
and
sahf
not
cmp
stc
ss
iret
push
mov
xor
test
popf
call
or
jge
dec
xchg
jmp
add
xchg
imul
and
push
int3
aas
out
mov
jb
stos
and
add
mov
test
dec
dec
lcall
sbb
mov
mov
lcall
inc
xlat
out
lahf
xchg
jnp
incl
jg
repnz
repz
sub
pushf
push
cld
adc
jns
scas
cmovo
xorb
sub
aaa
xchg
mov
xchg
xor
inc
and
imul
adc
inc
jp
push
mov
adc
adc
stos
fbstp
adc
cltd
cmp
sbbl
lahf
jno
in
sub
mov
das
mov
dec
mov
fldenv
push
mov
ljmp
fmulp
lock
clc
mov
xor
push
xor
mov
xorb
xor
in
das
jno
jg
sbb
sti
lcall
loop
out
test
push
xchg
xchg
xchg
fcoms
jg
std
push
incl
iret
cmp
fdivrp
stc
hlt
xchg
sbb
dec
jmp
or
fcmove
sub
mov
inc
in
xchg
dec
push
pop
inc
lcall
cltd
add
xchg
add
sbb
xlat
ljmp
push
push
sbb
lods
mov
cmc
loope
fxtract
mov
pusha
ret
push
nop
sbb
test
fwait
aad
pop
test
int3
inc
pop
les
push
push
sub
xlat
test
testl
xchg
or
mov
cmp
sub
ffreep
aas
or
ss
test
push
push
mov
fwait
pxor
xor
iret
inc
into
test
daa
inc
push
test
push
xchg
pop
mov
jge
je
popf
and
pop
sbb
ja
test
test
jl
xchg
mov
push
out
aad
add
push
push
cli
adc
or
xor
add
adc
mov
mov
jne
add
sbb
idivb
dec
mov
in
popa
pop
not
sub
jmp
in
loopne
pop
popa
lds
clc
or
sbb
pop
push
int
or
sbb
push
les
dec
pushf
dec
les
repz
push
rcll
icebp
pop
or
lods
and
scas
mov
das
das
rcr
inc
cmpsb
mov
push
adc
xchg
jne
and
imul
shll
ljmp
loope
add
mov
cld
or
pop
inc
xor
cltd
mov
bound
mov
sar
pop
mov
dec
mov
nop
ret
mov
push
enter
icebp
test
pop
lods
jo
mov
mov
push
cld
and
test
pop
mov
dec
pop
dec
mov
xchg
lret
sbb
add
mov
adc
sbb
pop
jnp
pop
clc
add
test
sub
leave
imul
cld
outsb
jmp
fidivrs
mov
rorb
in
add
pop
stc
xchg
and
jecxz
nop
imul
dec
sub
and
mov
sbb
outsl
push
cli
push
arpl
and
sub
imul
xor
mov
mov
jecxz
movsb
sbb
push
inc
jecxz
mov
push
int
repnz
cwtl
cmp
or
adc
int
insl
test
xchg
jno
push
loope
fiadds
inc
xor
cmpsl
or
mov
loope
add
loopne
aad
outsl
scas
jno
rcll
jmp
je
fs
or
std
jae
xchg
lcall
enter
inc
lcall
mov
nop
addr16
test
sbb
cmp
cmp
xchg
pop
repnz
sahf
or
fnstcw
stos
mov
out
mov
xchg
mov
adc
xor
xchg
push
jp
mov
fwait
jmp
mov
sti
cmc
fcomip
out
add
cmp
aam
add
jae
outsb
adc
mov
jo
pop
inc
jmp
add
push
int3
mov
outsl
aas
pop
adc
stc
add
jns
iret
jg
jg
dec
push
repnz
fcompp
ss
outsb
test
andb
adcb
mov
aas
es
lds
test
jmp
push
sbb
out
mov
adc
sbb
and
xor
call
mov
clc
rclb
out
pop
imul
fdivp
stos
mov
pusha
cmp
loop
in
test
sbb
rolb
aam
or
jno
stos
test
sub
xchg
xchg
sub
inc
jne
insb
dec
lock
and
pop
sbb
cmp
daa
into
jmp
inc
scas
shrb
mov
in
jnp
add
lock
in
push
cmc
jbe
pop
sarb
mov
roll
pop
lods
pop
test
sub
int3
sbb
add
mov
xchg
cwtl
adc
fists
ret
push
and
push
rcrb
mov
mov
test
pop
and
pop
inc
cmp
dec
mov
mov
push
push
sbb
and
mov
jg
mov
mov
cmc
aam
jb
add
stos
pop
mov
stos
sub
arpl
popa
mov
shll
popa
mov
mov
xlat
cs
and
mov
jno
shr
add
movsl
xor
cld
lret
xchg
push
sbb
push
ficoml
call
mov
mov
push
xor
test
loopne
cmp
leave
or
mov
add
jmp
jp
push
jno
aad
or
shlb
dec
xchg
repz
rorl
divl
jmp
test
cmp
orb
ficoml
dec
xchg
inc
dec
mov
add
fcompl
mov
and
addr16
pop
enter
push
imul
jl
test
xor
sbb
and
jbe
data16
mov
push
cmp
ljmp
pop
pop
outsl
test
dec
movsb
sbb
cmp
adc
sbb
inc
insl
cltd
pop
mov
jmp
fcmovne
cmc
jle
or
in
ds
mov
mov
xchg
jle
mov
dec
pop
filds
rclb
das
loopne
adc
pop
loop
out
hlt
adc
fs
dec
adc
movsb
xchg
test
mov
sbb
adc
ret
add
out
mov
jno
mov
popf
sbb
and
inc
negb
sub
xor
mov
std
test
adc
and
cmpb
shrl
dec
xlat
gs
mov
inc
test
das
shr
dec
ds
pop
xchg
cwtl
les
push
rclb
mov
jle
xor
xlat
inc
outsl
daa
lret
movsb
and
aaa
sbb
mov
xchg
pop
dec
insb
inc
adc
jnp
lret
sti
fsubrs
push
jle
test
ds
inc
loopne
aaa
or
sahf
sbb
add
imulb
in
outsb
sbb
cmpsb
sbb
fsubp
fsubl
std
lret
mov
jg
je
popf
add
xchg
add
inc
or
xchg
xor
cmpsl
lods
loopne
dec
mov
sub
inc
push
aas
out
sbb
pop
enter
jmp
clc
test
mov
mov
jo
lods
xor
pop
add
and
mov
cmp
adc
add
ret
mov
fstpt
stos
loop
rol
iret
sub
rcrb
sbb
imul
repz
sub
fldenv
push
js
test
adc
sub
stos
dec
sub
mov
addr16
out
mov
in
shrb
movsl
addb
mov
sahf
stos
cmp
lods
shlb
les
es
incl
iret
inc
lahf
dec
mov
dec
orb
insb
ds
mov
fstl
jle
push
adc
ret
sbb
cli
or
es
fdivrs
adc
push
dec
fstpl
xlat
lcall
add
pop
jbe
adc
jl
movsb
mov
cmp
adc
dec
jl
cmp
icebp
fistpl
loop
mov
icebp
movsb
js
negl
lds
cwtl
gs
dec
dec
aas
push
mov
loopne
cmpsb
mov
mov
faddl
fimull
cmp
leave
aad
daa
and
jae
ds
fdivr
stc
stc
adc
or
shll
inc
ljmp
cmc
cmp
inc
int
pop
test
pop
sbb
out
push
fcompl
jmp
hlt
xlat
and
imul
mov
rclb
clc
pop
sbb
jecxz
or
pop
pusha
rol
dec
clc
cltd
data16
enter
lret
aas
and
daa
aad
adc
lods
cwtl
jnp
jbe
dec
mov
jmp
cli
lcall
dec
cmp
out
rcrb
stos
mov
fiadds
or
xchg
sub
js
movd
mov
xchg
fldenv
es
add
inc
jmp
cmp
or
clc
sub
cwtl
scas
pop
mov
fcoml
mov
jl
into
inc
push
es
in
outsl
cmp
adc
loope
pusha
lods
push
clc
xlat
mov
rcll
testb
lahf
add
leave
sti
add
idiv
lods
push
dec
inc
in
movsl
jecxz
xchg
xor
in
sub
pop
dec
xlat
adc
jmp
shrb
popf
imul
lahf
out
mov
adc
push
adcl
in
mov
sti
mov
xchg
lods
cmp
jecxz
es
ljmp
mov
sbb
and
aas
aad
add
rcll
xor
out
mov
fiaddl
stc
mov
jp
cs
mov
pop
push
ljmp
pop
cmpb
popw
dec
cmp
movsb
shlb
flds
dec
loope
leave
xchg
inc
adc
or
push
inc
inc
clc
popl
mov
and
mov
cmp
push
enter
movsb
sbb
scas
dec
cltd
push
push
arpl
and
jmp
jp
cmp
xor
daa
sub
rcrl
sub
xchg
add
ljmp
int3
lret
add
pop
cmpsl
jecxz
out
xor
andb
mov
loopne
mulb
aaa
addr16
xchg
push
xorl
cmp
inc
mov
rcl
sbb
cltd
pop
or
sub
aad
inc
jno
shl
pop
and
cmpsl
sbbb
in
sub
pop
push
mov
mov
test
js
insb
adc
pop
inc
mov
fldenv
pop
inc
mov
mov
aad
pushl
mov
cmp
mov
jnp
data16
and
push
sarl
cwtl
xchg
fldt
hlt
add
dec
lods
stos
cmp
pop
clc
aad
mov
test
dec
in
push
pop
push
add
push
jnp
mov
inc
cmp
shll
enter
xor
cmpb
jo
push
cmp
cmp
inc
int
xor
mov
es
insb
pop
shr
dec
add
mov
aam
mov
mov
pop
js
xor
cld
jo
test
mov
int
into
sbb
add
jmp
in
popf
fistpl
mov
lret
inc
hlt
dec
and
fwait
inc
out
xor
add
iret
sub
cld
addb
not
int3
and
pushf
loopne
imul
push
movsb
mov
xor
nop
xor
jge
push
mov
push
jge
jbe
dec
or
and
mov
loopne
xchg
or
adc
jb
int3
mov
cmp
aam
rorl
jae
std
inc
scas
ss
or
dec
mov
fcompl
jb
cmpsb
jns
clc
fs
and
fsub
cmc
adc
push
lods
enter
and
aam
jbe
dec
mov
or
pop
push
fisubl
xchg
je
popa
mov
mov
adc
cltd
push
adc
ret
xor
pop
rorb
push
mov
xor
out
mov
lret
xor
mov
mov
movsl
and
orb
sahf
das
ljmp
sarl
je
fs
mov
mov
xlat
and
pop
jecxz
enter
dec
pop
popa
cmp
mov
stc
push
or
or
sub
xor
push
sbb
cs
push
mov
inc
sub
sbb
sbb
xchg
dec
cltd
mov
sub
dec
sbb
lahf
outsl
mov
icebp
push
or
jae
aas
subl
adc
fsubl
xor
mov
cmp
movsl
pop
or
xor
mov
sarl
xchg
pop
xor
aas
push
out
mov
sub
dec
dec
pcmpgtw
flds
push
mov
add
adc
rcll
imul
jae
fcmovnbe
xor
cmc
clc
outsl
sti
in
movsl
adc
mov
sbb
cmp
pop
in
pop
and
clc
adc
je
add
jbe
dec
pop
dec
push
rcrb
mov
andb
cs
sbb
or
stc
js
dec
mov
addr16
add
in
cmp
mov
aaa
pop
lea
movsb
rorl
inc
or
lock
jb
inc
jnp
cmp
aad
test
sbb
popf
xchg
mov
je
jecxz
cld
mov
ljmp
mov
and
call
xor
icebp
lahf
pop
jl
lds
cmpsl
dec
adc
int
dec
adc
ret
arpl
add
jl
hlt
ss
mov
clc
orb
xor
fstpt
mov
bound
jne,pn
lret
push
mov
cmp
mov
xor
test
xor
les
add
ret
lods
and
stc
dec
popa
popf
fcmovbe
mov
push
xor
cmp
mov
jb
xchg
cld
dec
and
adc
sbb
push
inc
push
inc
js
mov
push
xchg
aad
in
das
call
inc
dec
fdivrs
dec
inc
sbb
dec
jecxz
into
jp
enter
xor
sbb
mov
add
cli
or
jo
arpl
imul
sbb
jo
xor
cmp
mov
or
out
int
push
jmp
or
scas
add
out
negb
pushf
cmp
cmpsb
inc
inc
mov
add
push
pop
cmp
adc
and
in
pop
xchg
push
adc
and
mov
and
and
mov
aaa
imul
jae
and
test
mov
mov
adc
les
leave
movsb
cwtl
add
js
push
and
dec
push
xchg
xor
push
je
push
push
leave
cmpsb
pop
push
fistps
pusha
push
xchg
jo
xchg
ret
jle
ds
enter
popa
dec
push
loop
scas
aas
in
imul
mov
std
out
xchg
jecxz
cltd
sub
sub
enter
inc
xchg
xchg
mov
ja
nop
loope
pop
es
mov
pop
xchg
inc
cmp
std
or
inc
nop
hlt
mov
ret
xor
popfw
sahf
popa
fdivrs
scas
and
push
add
sbb
fisttps
mov
mov
fdivs
push
data16
popa
popa
jbe
sub
js
jns
aad
cli
lcall
iret
out
cmpsl
fdivp
sub
das
pop
jae
das
cs
cmpsl
leave
in
popa
mov
mov
jmp
cmp
in
mov
sbb
ret
mov
xor
popf
scas
in
data16
pushf
loop
cmp
mov
icebp
mov
or
out
rolb
add
or
insb
fbstp
push
add
repnz
aad
movsl
test
loop
adc
sarb
inc
enter
inc
cmpsb
daa
pushf
pusha
adc
pusha
popa
ss
mov
jnp
lods
fwait
daa
shrb
clc
movsl
jnp
addl
sbb
aas
xchg
mov
lods
xchg
shr
dec
sbb
mov
cmpsb
in
imul
add
inc
or
adc
xor
or
xor
adc
push
mov
or
add
movsl
loopne
pusha
mov
enter
data16
pop
dec
jne
or
rep
pop
lods
loope
mov
sbb
pop
mov
or
lea
push
and
push
jge
xchg
in
inc
shrl
roll
call
mov
cwtl
inc
xor
mulb
ss
push
or
cs
imul
cmpsl
out
inc
push
sti
fimull
loop
sbb
add
sub
pop
fstpt
lds
lcall
leave
xchg
sub
cmc
lock
negb
xchg
lock
in
pop
hlt
push
xor
pop
mov
je
xchg
lods
push
in
adc
je
daa
in
and
cmp
fdivp
xchg
fisttps
test
adc
pusha
lcall
ljmp
outsl
pop
fbld
pop
sbb
fimull
sub
or
xor
jl
lods
aad
xor
scas
rolb
mov
jbe
mov
movsl
mov
stc
mov
mov
pop
xor
fidivrl
fildll
mov
in
sarl
cld
push
shlb
scas
and
cmp
fisttps
dec
andb
cmp
pop
pop
mov
and
dec
xor
lods
movsl
mov
stos
cmp
adc
fidivl
jl
mov
mov
xchg
add
scas
cmp
cmp
adc
xor
mov
lahf
data16
mov
dec
mov
das
daa
dec
cmpsb
xorb
dec
push
add
pop
loop
int
negb
jo
pop
add
xchg
sbb
data16
jns
cmp
xor
inc
and
inc
lret
aas
dec
jmp
pop
les
sub
push
in
xchg
push
add
sbb
mov
jb
push
or
movsl
mov
pop
inc
outsl
call
nop
sti
push
push
nop
js
repnz
std
jb
test
fxtract
push
push
js
lods
mov
mov
sub
xor
push
repz
imul
jmp
enter
xor
xchg
xor
jge
pop
ret
das
or
add
inc
dec
pop
and
aas
and
push
test
mov
ret
jle
imul
sarb
insl
movsl
or
xlat
sub
loopne
xchg
lahf
push
out
clc
das
and
jecxz
mov
lods
iret
mov
inc
dec
popa
push
call
or
data16
fwait
outsl
clc
stos
sub
fs
sbb
pop
fstpt
dec
cmp
sub
inc
nop
mov
and
loope
inc
mov
or
mov
fiadds
lea
ja
inc
xchg
and
jmp
push
mov
rclb
add
movsl
leave
repnz
sub
mov
clc
xor
push
negb
sbb
fcomps
adc
cmp
add
dec
lcall
xchg
lods
sbb
jbe
dec
mov
sbb
lods
dec
ret
cmp
out
inc
cmovge
test
mov
jl
rclb
repz
mov
lcall
and
pop
popf
cltd
popf
dec
cmp
sub
mov
inc
pop
sbb
xchg
xlat
push
inc
add
insb
test
push
int3
test
mov
xchg
mov
xor
fs
stc
xchg
imul
aad
stos
mov
sbb
mov
shl
dec
push
data16
xchg
fisubrs
pusha
mov
rcrl
fildll
sbb
jbe
aas
repz
mov
arpl
rcl
ja
or
mov
fstpt
or
jo
push
out
and
fldcw
mov
sub
ret
sti
xor
outsl
int
adc
js
sbb
arpl
jno
mov
xor
add
sarl
in
and
jnp
jecxz
out
insl
xor
mov
xchg
mov
bnd
push
shll
je
mov
out
jle
daa
mov
mov
sbbl
fsubr
mov
std
dec
push
push
mov
pushf
jns
fists
sbb
xchg
mov
dec
cwtl
shlb
mov
lret
add
xor
enter
cmp
inc
sbb
cmpsb
xchg
es
cmp
push
fidivs
and
inc
mov
mov
mov
js
lahf
lods
inc
out
das
test
mov
lcall
sar
jbe
mov
fistl
lcall
jae
jae
push
cmp
and
cmp
adc
repnz
mov
mov
xor
je
or
lods
mov
xor
js
ret
icebp
push
adc
mov
add
iret
add
xchg
pop
aaa
fidivrs
ds
f2xm1
js
sbb
pop
jle
mov
xor
jmp
add
sbb
mov
das
idivl
mov
push
pop
mov
shll
in
int
and
lcall
inc
sahf
jae
xchg
or
enter
lods
fisttps
int3
aaa
add
dec
xchg
inc
fisubrs
cmp
mov
test
sbb
mov
jbe
test
test
leave
enter
lock
fdivr
xchg
aas
xchg
xor
mov
int3
xlat
gs
in
xor
mov
push
test
arpl
push
pslld
dec
fistpl
cmp
popa
lret
std
or
jmp
add
scas
aaa
push
mov
divl
or
xchg
fisubl
subb
mov
mov
dec
in
lret
or
jp
add
clc
push
insl
out
sbb
push
mov
jge
popa
add
mov
std
lds
sub
xchg
iret
pop
sbb
jg
mov
int
jno
lcall
insl
pop
dec
add
out
aad
pop
xchg
lock
inc
in
loopne
scas
xchg
adc
mov
and
pop
sbb
cltd
daa
adc
adc
call
jo
push
cmp
jg
dec
jecxz
mov
sub
ret
push
mov
jb
lds
jp
mov
rcrb
rolb
jl
jo
test
in
mov
or
popf
mov
test
in
inc
scas
jg
lahf
ja
fcomp
mov
and
xchg
repz
shrl
loop
sbb
pusha
pusha
push
out
or
movsb
inc
ret
xchg
ret
outsl
dec
adc
popf
push
push
mov
jmp
call
ficompl
mov
mov
jl
rcll
test
out
jmp
int3
xor
mov
in
adc
push
push
aaa
rolb
daa
jno
js
stos
test
adc
or
scas
bound
add
int3
push
jl
into
mov
sbb
into
cmp
addr16
cmc
cmpl
gs
mov
sub
arpl
bound
clc
clc
inc
and
adc
sbb
mov
inc
lods
mov
scas
sahf
sti
mov
or
rclb
and
push
sub
cmp
inc
shll
mov
or
mov
inc
leave
out
jno
sbb
pushl
dec
divb
adc
out
int3
mov
and
push
insl
add
imul
imul
icebp
sub
inc
push
cwtl
addr16
mov
or
dec
mov
in
sbb
in
test
jmp
adc
and
inc
xor
gs
popf
clc
push
mov
adc
gs
enter
jle
stos
push
cmc
outsb
xchg
push
xchg
shrb
ret
and
pusha
or
mov
stos
adc
jg
rorl
inc
bnd
les
fstps
pop
arpl
push
adc
cmp
xchg
pop
mov
jp
scas
jmp
mov
mov
add
sbb
push
xchg
lcall
jge
push
mov
sarl
inc
cld
mov
and
cmpl
add
ror
pop
inc
mov
fcoml
sub
jl
stos
sbb
test
mov
dec
aas
adc
pop
call
mov
cltd
mov
jb
movsb
stos
pusha
js
into
out
pop
test
pop
pop
in
mov
loope
cwtl
jecxz
lods
add
into
or
mov
fisubrs
xchg
sar
inc
push
jge
iret
add
lock
pop
aam
xchg
call
push
jb
pop
gs
jne
cltd
mov
sub
cmp
cltd
sbb
pop
int3
dec
shl
movsb
in
ja
mov
ds
fiaddl
fisttps
fsubr
adc
push
faddl
or
inc
pushf
int
mov
sub
sbb
stc
push
loopne
pop
in
adc
ret
mov
cmp
ret
jmp
dec
inc
mov
icebp
cld
or
sbb
stc
mov
aas
addr16
ds
mov
aas
dec
jmp
or
add
lahf
je
jno
roll
xor
je
lret
mov
shll
lods
push
jge
jg
ficomps
sub
or
dec
fwait
mov
jo
sbb
ljmp
cmc
lods
sbb
imul
shl
neg
rol
addl
dec
push
dec
mov
fisubl
jnp
lods
cld
hlt
pop
sub
cs
adc
test
fiaddl
pop
and
mov
fcompl
xor
mov
xchg
mov
loop
scas
rolb
fcompl
jne
jnp
xchg
sahf
pop
mov
out
push
mov
lret
enter
jns
int3
loope
xchg
push
int3
cmp
stos
pop
testl
sbb
scas
add
and
ja
fnstcw
or
outsb
lcall
add
inc
mov
lea
mov
fldl
xor
outsb
loop
pop
xlat
int
lcall
pop
xor
js
int3
pop
popa
pop
jge
mov
xchg
xchg
add
xor
jbe
cmp
pop
shl
fsubr
and
cs
xor
cmp
aam
mov
xchg
lds
enter
pushf
sub
ja
fldl
imulb
ds
jbe
lods
lods
jge
es
mov
and
pop
leave
fistpl
pop
mov
mov
or
inc
fldl
mov
xorb
push
loopne
cwtl
push
fsubl
pop
test
or
adc
rclb
adc
aam
je
fsts
cwtl
imul
stos
or
cmp
push
cmp
out
mov
sbb
xchg
lret
imul
js
adc
lret
ja
jp
aad
and
adc
and
inc
push
jnp
sub
cmp
imul
push
jecxz
in
mov
jecxz
testb
sub
mov
adc
cmpsl
and
ffree
adc
and
outsl
and
lahf
out
movsl
mov
sbb
ror
sbb
js
xchg
xchg
das
out
sahf
faddp
pushf
or
mov
adc
mov
mov
mov
add
xchg
mov
cld
imul
leave
push
nop
push
mov
or
movl
icebp
add
mov
inc
lret
pop
cwtl
or
test
push
dec
xchg
and
xor
and
jmp
repz
sbb
sub
shrl
and
movsb
push
cmp
inc
sub
shlb
pushf
adc
xor
negb
test
addr16
rolb
lock
sbbb
js
adc
sbb
sarl
std
xor
mov
sub
dec
bound
lods
or
lds
or
pop
test
adc
test
mov
push
jnp
fdivrl
xchg
arpl
push
addr16
cli
jmp
lret
pop
add
test
dec
inc
adc
mov
in
xor
sub
fsubl
xchg
push
xchg
add
mov
mov
xor
cmp
or
lret
sti
aas
inc
scas
mov
push
mov
je
inc
cwtl
push
cmc
adc
in
mov
add
nop
push
xchg
ljmp
cmp
or
mov
fdecstp
add
leave
push
testl
or
push
pop
xchg
sbb
out
das
daa
push
test
push
xor
comiss
xchg
pop
mov
mov
add
cmp
cmp
sub
xchg
mov
leave
fstpl
lds
in
jns
pop
xor
mov
cmc
mov
ja
push
addb
sarl
and
rcrb
pop
xchg
push
outsb
push
sbb
sbb
pop
jbe
and
bound
xor
cld
sub
xchg
pop
xlat
jmp
ljmp
mov
add
pop
lret
into
xchg
push
into
sub
dec
and
pushf
test
push
daa
stos
pop
aas
test
jge
cmp
adc
sbb
sbb
aad
je
adc
leave
pop
sbb
jb
mov
mov
bound
xor
add
testb
jne
xorl
jle
sub
push
mov
lahf
insb
cmp
mov
dec
push
sbb
mov
popl
out
cltd
fnstcw
roll
xchg
idivb
into
and
pop
idivl
mov
jecxz
inc
and
dec
shll
lcall
dec
push
or
lods
insl
and
aas
mov
cwtl
jae
imul
leave
cli
xlat
fs
lods
sbb
bound
pusha
inc
shl
sub
and
mov
outsb
mov
gs
enter
lods
add
xor
sub
loopne
dec
mov
add
addr16
pminsw
jb
mov
lds
dec
push
frstor
movsb
stc
aas
dec
mov
xor
sahf
jp
cwtl
andb
push
and
and
mov
adc
cmp
mov
mov
adc
movsl
inc
nop
mov
popf
stos
pop
scas
cmp
push
jg,pn
mov
mov
outsl
dec
lret
cmp
ss
adc
pusha
push
push
filds
aaa
cmp
in
cmp
cli
int
testl
dec
adc
jecxz
push
loope
sahf
xchg
movb
adc
mov
arpl
xor
jg
mov
dec
or
aad
pop
sub
repz
add
roll
addr16
mov
lds
fdivl
fcomps
mov
pop
int3
adc
sbb
lods
cmp
mov
xor
push
bound
dec
jp
sub
pusha
add
test
xchg
sbb
popa
std
in
lock
mov
push
xor
xor
and
add
data16
loop
inc
fisttps
pushf
sub
fwait
mov
adc
pop
nop
cmpsb
sbb
rcrb
and
pop
push
mov
outsl
fmull
add
hlt
mov
mov
adc
out
mov
ds
or
loop
test
lods
cs
out
loope
addr16
cli
dec
mov
mov
sub
and
mov
xchg
sbb
xacquire
pop
mov
cld
cmp
xchg
adc
mov
repz
pop
mov
mov
and
gs
xchg
cmp
or
sub
fnstcw
cmp
das
push
adc
sbb
dec
xor
dec
cmp
adc
mov
mov
jmp
mov
inc
nop
cmp
push
lret
rorb
mov
or
aam
in
add
cmp
add
pop
sarl
cmp
loopne
mov
sbb
or
mov
lahf
push
xchg
inc
jecxz
mov
dec
lcall
cld
push
sub
repz
stos
sti
jge
int3
fistps
shr
shl
test
xchg
mov
ljmp
mov
call
mov
mov
jbe
aaa
popa
jnp
repz
or
movsb
ss
jne
jmp
aad
js
lahf
cmp
pop
ret
dec
jno
dec
dec
nop
jbe
xor
inc
mov
test
mov
cmp
orl
dec
lds
mov
aam
movsb
push
dec
inc
lcall
lods
push
cltd
sbb
mov
jmp
jle
test
test
push
lret
movl
cmp
mov
ljmp
mov
xor
sub
mov
jecxz
call
cmp
sub
dec
neg
lret
xchg
mov
cmpsl
imul
cmp
pop
cmp
rcrl
xchg
mov
dec
test
pop
and
cld
ret
push
mov
call
push
out
push
fwait
lds
xor
pop
ret
orb
cmc
es
test
xchg
mov
cwtl
mov
inc
inc
std
pop
pop
imul
add
pushf
mov
adc
fwait
jl
or
push
sbb
lret
sub
fcmovnu
shr
push
inc
je
leave
cmp
mov
push
arpl
aam
dec
cmp
cmp
imul
sub
ret
sbb
test
lahf
ret
arpl
insb
mov
jae
cltd
sub
dec
dec
out
inc
mov
imul
fcomps
jae
fnstcw
xchg
cmp
fnclex
sbb
mov
aas
pop
pop
add
mov
or
ficoml
loope
and
sbb
cs
fisubrs
jno
adc
push
cwtl
fiadds
sarb
dec
or
xchg
fsubrs
dec
scas
jne
leave
push
push
pushl
daa
mov
fldt
sbb
add
xor
aam
in
sbb
push
add
mull
in
inc
fbstp
std
fwait
xchg
enter
add
push
xchg
pop
adc
lahf
inc
push
pop
test
jno
sub
insl
aaa
ret
cmp
jg
add
cmp
push
int3
pop
cmp
mov
jge
into
clc
loopne
jmp
js
pop
outsl
fidivl
cmc
cmp
das
mov
test
stos
jg
mov
shlb
mov
or
test
lahf
xchg
ficoms
out
dec
imul
out
js
mov
addr16
lcall
stos
mov
jb
mov
mov
clc
jbe
xchg
sub
loopne
add
push
nop
cmp
cmpb
xchg
mov
pop
mov
jb
incb
mov
push
enter
negb
sarb
xchg
push
push
imull
inc
repz
inc
push
xchg
popf
rolb
rcrb
add
scas
fs
lods
scas
sub
rorl
jmp
push
dec
xor
pop
pop
or
mov
popf
mov
stc
jp
int3
popf
stos
adc
xchg
pop
push
test
jge
pop
insb
sub
insl
lahf
mov
cmpsb
mov
imul
mov
pop
sti
fcompl
fistpll
loope
mov
repnz
jle
mov
mov
jbe
imul
push
clc
xor
aam
push
xchg
jbe
ret
mov
add
shlb
mov
cmc
pushl
leave
push
insb
sub
dec
xchg
stos
adc
ljmp
cmc
out
pop
stos
sub
dec
adc
mov
sbb
pop
dec
dec
bnd
push
enter
mov
jne
xor
or
insb
xchg
stos
inc
mov
test
fstpt
jns
sbb
pop
add
xlat
inc
sbb
sub
cmpsb
mov
pop
out
out
pop
shlb
push
sub
testl
sbb
in
out
jo
loop
adc
aam
xchg
cwtl
bound
bound
mov
xor
xchg
shrb
dec
stos
addb
js
inc
loope
rorb
loope
aaa
sub
andl
fisubs
mov
ss
push
xchg
fildll
adc
mov
flds
pop
test
js
xchg
xchg
xchg
shrb
stos
jle
sbb
rcl
test
cltd
adcb
mov
jle
jg
xchg
stos
push
flds
push
pop
loopne
gs
add
jo
jle
or
cld
inc
sub
push
rep
pop
mov
cmp
loopne
push
arpl
sub
inc
dec
add
mov
pushf
imul
ds
fidivs
ficomps
and
jbe
call
push
dec
sbb
jecxz
cltd
and
mov
jp
mov
lods
push
add
sub
cmp
out
fcoms
pushf
jmp
cld
or
dec
int3
cmp
sbb
pop
push
inc
xchg
sbb
addr16
xchg
sub
fidivrl
adc
int
sbb
paddsw
mov
inc
fisubrs
pop
xchg
add
idivl
push
das
popa
cmc
loope
adcl
ret
and
fsubl
xlat
mov
mov
adcl
xor
push
in
icebp
sbb
fsubp
mov
add
repz
cmpsb
pop
out
cmp
inc
repnz
pushf
cld
and
mov
lret
dec
idivl
test
jg
loopne
sbb
push
inc
lods
or
push
mov
pop
jno
push
mov
inc
adc
inc
lea
not
inc
repnz
sub
bnd
bound
sbb
jnp
roll
in
enter
clc
jne
jb
movsb
adc
mov
sub
mov
jge
pop
inc
xchg
sub
or
and
es
sbb
cmp
scas
les
fldt
arpl
jnp
aas
dec
pop
dec
fsubrs
mov
mov
pop
mov
push
pop
pop
es
mov
xor
mov
jg
lcall
jno
and
sbb
repz
pushf
ljmp
sbb
xlat
add
xchg
and
stos
fcomps
fldt
xor
fcom
call
dec
adc
mov
mov
leave
mov
lcall
fcoml
cmpsl
dec
mov
ja
sbb
mov
fcmovne
add
xchg
cli
rolb
push
xchg
jmp
add
xorb
mov
sbb
xchg
mov
cwtl
imul
lds
dec
ficoml
in
int
imul
andl
nop
dec
cmp
faddl
sbb
loop
out
adc
xor
fimull
jle
mov
mov
push
fadd
jb
pop
nop
int
jle
and
or
pop
xchg
push
jnp
add
push
mov
leave
sub
mov
inc
xor
cwtl
cmpsl
jle
dec
dec
test
push
mov
xchg
in
loopne
xchg
js
int
jge
xor
insl
sub
cmp
sahf
cmp
mov
xchg
add
pop
cmp
adc
loopne
dec
addr16
mov
mov
push
loop
hlt
enter
nopl
aaa
cmp
cmp
movsb
hlt
lds
cld
icebp
jge
insl
lcall
jo
xchg
xor
cmp
add
push
cltd
insl
cmp
xor
out
rcrl
mov
imulb
xor
in
fsubl
dec
jns
sbb
cmp
push
loop
mov
mov
dec
push
xor
inc
adc
sbb
xlat
mov
sub
shrb
js
into
or
inc
rcrb
rorl
popf
mov
sahf
dec
xlat
pop
push
push
inc
xchg
mov
dec
outsb
mov
jae
pop
dec
ja
inc
lcall
pop
mov
fnstsw
movsb
push
jnp
stc
aad
inc
inc
cltd
cltd
mov
stos
push
push
shll
and
imul
adc
test
sub
sbb
mov
xor
xlat
mov
icebp
and
test
daa
mov
pop
cmpsl
in
mov
sub
ret
loop
mov
add
in
iret
cmpsb
cmpsb
push
stos
inc
lret
push
ret
sub
jno
mov
jb
repz
fbld
cli
pusha
mov
popf
mov
int3
xchg
repnz
cli
sahf
enter
push
lds
ret
gs
test
jb
lret
loopne
inc
or
subb
jg
ret
and
sub
inc
shl
mov
fcomps
mov
nop
cmpsl
mov
in
push
and
pop
in
out
mov
push
in
sub
shl
cmpsl
xorb
mov
sub
pop
inc
cmp
out
loope
in
test
pop
ds
ja
xchg
mov
sbb
and
inc
repnz
xchg
repz
inc
test
jl
call
cmpsl
daa
cmp
push
cmp
rorb
pop
dec
mov
in
mov
xor
scas
dec
push
pop
fstl
cmp
jno
push
pop
fldt
pop
cmp
ss
mov
cmpsb
mov
pop
push
push
or
jne
xor
add
test
popf
out
adc
cmp
mov
jge
jmp
adcl
daa
cwtl
mov
xchg
mov
and
pop
push
or
test
repnz
sti
cld
cmpsl
cmp
sbbl
inc
cmp
mov
fidivl
das
mov
jle
sub
push
lods
hlt
mov
mov
cld
sarb
lock
popa
pop
int
xor
mov
add
sub
cmp
inc
inc
ljmp
adc
popa
mov
ja
pushf
cwtl
dec
xor
in
xor
xor
push
jge
sub
xor
ret
daa
dec
inc
movsl
pop
lahf
subl
mov
mov
aam
pop
js
mov
mov
push
mov
xor
and
call
ds
je
or
sti
sahf
loop
xchg
insb
xor
sbb
push
cmp
or
xor
and
pushf
sub
jl
jl
and
fwait
or
sub
xchg
daa
mov
ficomps
mov
xor
xchg
inc
push
or
fildl
pop
push
hlt
int
inc
popf
xchg
daa
cmpsl
mov
and
push
repnz
call
int
sahf
pusha
sub
mov
cmpsl
das
dec
jmp
sub
js
sbb
mov
lea
inc
push
dec
insl
add
ds
mull
nop
or
dec
jns
pop
fcom
test
insl
out
dec
push
int
dec
fsubrl
inc
or
jo
cmp
out
repz
pop
or
mov
shl
dec
int
pusha
or
inc
les
jmp
sub
jne
cld
data16
sub
enter
out
stc
push
sub
fwait
sbb
pop
shlb
sti
xor
out
cmovb
xchg
and
cmp
adc
cmp
pushf
adc
dec
testl
cmc
inc
jo
mov
jbe
lret
scas
movsb
data16
push
arpl
faddl
xlat
push
dec
xchg
push
xor
jo
mov
push
stc
jnp
mov
dec
fs
xor
rol
jg
rol
add
push
jle
cmp
lock
mov
xor
in
sbb
fyl2x
dec
das
fnsave
jb
jbe
rorb
fst
and
scas
xlat
cli
push
sbbl
shrb
cmc
cmp
and
lods
cmp
mov
cmpsl
dec
xor
add
cli
out
insb
push
push
or
test
inc
mov
push
xchg
mov
mov
dec
mov
orb
jge
add
pop
mov
or
xor
aas
call
cltd
xchg
mov
loop
dec
out
lods
test
test
in
repz
test
scas
jbe
ficoms
push
cmpsl
inc
in
inc
lock
in
add
sub
mov
loop
mov
inc
fs
lret
push
or
add
mov
popf
xchg
stos
orb
ret
arpl
jb
in
and
push
shl
xor
sub
fldcw
sub
inc
test
pop
sbb
sahf
push
pushf
inc
lret
mov
jl
cmp
cwtl
mov
mov
fsubs
dec
and
in
xor
lods
xlat
loope
shl
mov
or
mov
cs
js
leave
addr16
and
mov
xor
push
sub
or
clc
leave
dec
icebp
imul
sahf
imul
shll
hlt
ret
decl
push
sub
sub
xchg
rorl
imul
pop
jb,pt
ficoml
es
dec
stos
sbb
cmpsl
jg,pn
es
pop
into
jp
push
sub
out
mov
outsb
mov
imul
stos
fsubl
mov
ret
imul
jp
je
mov
cmp
mov
out
lds
hlt
mov
push
out
decb
aaa
add
stos
hlt
scas
xchg
push
add
cmp
xor
shll
sbb
gs
inc
dec
sbb
or
clc
roll
sub
mov
lea
xor
mov
das
repnz
lds
aam
inc
pop
mov
push
jnp
inc
mov
psubusw
arpl
xor
inc
xorb
mov
xor
flds
mov
aad
push
lock
sbb
ja
pusha
sbb
jbe
add
push
mov
cmc
lods
iret
sub
inc
lret
mov
or
movsl
or
inc
imul
jbe
mov
ds
mov
xor
add
xor
lea
int3
fistpl
sub
xchg
testb
cmpl
xchg
clc
inc
mov
or
mov
mov
xor
and
out
lods
aam
xchg
lcall
add
cmpsl
cwtl
nop
jnp
out
into
or
or
test
pop
sbb
lret
xor
xchg
out
std
ds
inc
setge
or
adc
and
or
pop
mov
mov
add
jb
imul
hlt
inc
mov
sub
jo
loopne
ds
inc
iret
sbb
sbb
insb
clc
adc
loope
mov
out
jl
ret
call
cltd
add
sarl
cmc
in
xchg
dec
movl
xchg
int3
xchg
push
dec
mov
cmp
mov
rcrl
lea
cmp
inc
ss
adc
jle
loopne
dec
add
in
imul
xchg
aad
or
shrb
push
inc
std
lahf
inc
cmp
or
dec
cwtl
push
test
push
jmp
adc
mul
stos
sbb
pop
adc
bound
bswap
ljmp
and
cmp
xchg
push
test
cwtl
aas
popf
outsl
lods
cs
sti
sub
popf
cltd
push
cwtl
mov
in
push
test
mov
jp
leave
cmp
lcall
stos
je
dec
sti
pop
scas
cli
mov
push
outsl
xor
cmpsl
pop
std
mov
pop
jle
mov
out
sub
mov
pusha
mov
sbb
sbb
sbb
mov
mov
ror
jp
mov
add
call
hlt
add
lcall
iret
xor
jno
jp
cmp
fcoms
enter
in
add
jbe
mov
sahf
adc
pop
or
add
cmp
int3
in
pop
das
mov
repz
lods
mov
pop
sbb
mov
fwait
ja
mov
out
js
imul
rdpmc
cwtl
mov
adc
cmp
or
movsb
pop
addb
lock
inc
dec
mov
jne
jp
jl
pop
aad
shrb
js
inc
lret
popf
push
add
outsl
dec
push
sub
aas
notl
ficomps
sub
cwtl
lock
sub
add
mov
gs
and
cmpsl
outsl
xchg
xor
int3
dec
pop
and
insl
hlt
cltd
pop
popa
mov
jae
pushf
roll
sub
cld
es
mov
xchg
loop
cmp
subl
popf
dec
add
pop
sbb
es
or
inc
or
ja
out
imul
les
jle
in
or
icebp
cmpsb
pop
sti
mov
cmp
xchg
cmovne
rol
les
fwait
fwait
ret
scas
aaa
adc
dec
pop
push
or
xchg
xchg
movsl
pop
idivl
or
dec
pop
jmp
jmp
notb
inc
fwait
roll
in
sub
jl
dec
insl
jg
dec
shl
cwtl
mov
mov
or
sbbl
pop
xor
xchg
push
out
xlat
aam
mov
lahf
mov
sub
xchg
fisttpl
dec
push
orb
adc
shrl
mov
push
movsb
sub
cwtl
sbb
call
ja
push
cmpsl
arpl
push
cmc
mov
cmp
adc
in
js
push
int
in
cwtl
mov
icebp
int
lcall
repz
adc
jne
or
dec
or
xor
hlt
jb
sarl
or
push
sub
mov
push
mov
push
idivb
sbb
sbb
push
nop
arpl
jg
sbb
movsb
sarb
iret
pop
shrb
outsb
lds
jmp
jbe
fldt
hlt
pushf
es
gs
outsb
adc
xchg
sbb
pop
cmp
stc
mov
mov
testl
xchg
jecxz
xor
xor
jle
mov
cld
shlb
ret
cmp
push
xchg
ljmp
hlt
sti
insl
pop
fldt
mov
gs
addr16
xchg
xchg
mov
and
out
add
adc
out
cmp
mov
xor
xor
ljmp
push
pop
sbb
and
cmp
push
sub
add
sbb
inc
sbb
sahf
mov
pop
push
into
out
add
push
jns
adc
loopne
jle
mov
in
sub
push
subl
mov
and
cmp
lret
rcl
inc
lods
hlt
jbe
ss
loop
je
ret
add
mov
xchg
roll
mov
jne
mov
loope
sub
lea
mov
jle
lea
lcall
in
std
lea
mov
es
cmpl
shl
sub
lods
out
sahf
adc
mov
xor
int
loop
inc
inc
push
in
sbb
jns
pop
mov
or
fst
ret
dec
adc
jle
mov
out
pop
je
push
fsubs
sub
add
std
adc
sub
xor
mov
in
add
arpl
xor
pop
adc
and
sbb
inc
arpl
push
in
lret
sbb
imul
fidivrl
xor
mov
fwait
xor
cmp
test
stc
adc
and
mov
test
loope
pop
cmp
daa
mov
les
call
inc
sbb
inc
data16
arpl
rolb
adc
rorb
add
pop
mov
push
ret
cmp
mov
imul
push
ja
mov
inc
xchg
imul
pusha
popf
pop
push
and
loopne
mov
das
or
cmpsl
psubb
cwtl
and
repz
call
xchg
push
sti
pop
mov
popf
xchg
loop
adc
push
dec
movb
mov
pop
div
dec
out
push
xlat
lock
roll
xchg
ret
cmp
jbe
pop
ja
cli
test
or
mov
mov
push
nop
dec
das
repnz
mov
adc
jb
aaa
xor
in
cli
scas
cld
fcmove
xlat
dec
loop
in
ja
mov
sahf
movsb
jl
leave
lds
jne
nop
and
cmpsb
movsb
ds
cmpl
sahf
mov
pop
imul
ds
add
mov
int3
sub
enter
rcrb
adc
call
vmovapd
hlt
mov
dec
xor
movsb
repz
xor
and
repz
scas
mov
popa
rorb
push
int
lea
stos
push
lret
dec
push
cmp
sbb
xchg
or
addr16
and
mov
adc
sarb
jnp
rclb
pop
jecxz
fs
les
pop
fnsave
adc
leave
pop
mov
lahf
iret
xor
fdivr
jmp
fidivrl
cwtl
push
daa
popa
int3
dec
mov
cli
adc
movsb
cmovge
dec
fiadds
pop
outsb
and
loopne
jb
out
mov
imull
mov
mov
xor
mov
pop
and
repz
in
adc
cmpl
loopne
loop
pop
lahf
outsb
push
ds
jae
cmp
dec
mov
cwtl
idivb
add
or
jnp
jle
leave
or
cmp
mov
ret
aad
sbb
sbb
lea
cltd
xor
fcmovnu
fidivl
mov
rol
or
and
inc
nop
cmpsl
movsb
subl
sbb
adc
fsubr
shrd
popa
test
sarb
push
push
and
mov
jnp
lea
xchg
dec
cmp
or
orl
add
pop
cmp
scas
mov
cmc
dec
dec
decl
ja
push
mov
lods
sbb
push
repnz
sub
popf
or
cwtl
and
xor
push
aas
mov
mov
ja
jne
cmp
mov
mov
jl
push
pop
mov
cli
repz
sub
mov
lds
mov
pop
and
mov
mov
xor
movsb
add
pusha
dec
or
xor
add
dec
xor
ds
notl
leave
mov
insl
pushf
or
jae
inc
mov
sbb
push
add
mov
out
push
pop
fdivrs
adc
sub
pushf
sub
xor
or
negl
mov
aam
fildll
adc
push
jle
cwtl
faddp
ret
push
cmp
pushf
test
push
jmp
or
popf
xchg
xor
cltd
cld
scas
test
fs
jl
mov
sbb
loopne
mov
negl
scas
mov
pop
popf
into
or
inc
xchg
add
imul
dec
cmpsb
sbb
sub
pop
outsb
push
leave
scas
lahf
pop
jno
sub
jae
imul
add
mov
cld
jp
ja
cmpsb
mov
aam
xlat
mov
jl
add
inc
sti
mov
adcl
sub
mov
push
pop
dec
movb
sub
nop
lods
loope
mov
sub
nop
aas
fcoml
mul
jmp
mov
and
sbb
insb
dec
mov
gs
push
push
xor
inc
add
mov
je
sbb
cltd
mov
imul
test
rolb
mov
mov
in
xchg
das
add
pop
push
sbb
cmpsb
jo
xchg
jne
xor
push
jns
sbb
sbb
hlt
mov
inc
daa
stos
jmp
or
inc
paddb
into
in
mov
sarl
xor
fucomp
xlat
ret
sbb
adc
and
pop
popf
repz
shlb
test
addr16
jmp
dec
inc
test
xorb
push
mov
in
orb
xlat
dec
mov
sbb
aas
mov
sbb
in
dec
xor
jge
jl
add
push
inc
cmp
adc
pop
ljmp
out
adc
inc
ljmp
push
lcall
push
or
push
clc
mov
and
jno
push
outsl
and
sub
ror
les
xchg
xor
inc
popa
xchg
add
xchg
test
sbb
add
mov
sbb
jmp
aam
std
and
dec
mov
jle
iret
pop
mov
cld
dec
in
shrl
cmpsb
sub
and
inc
loopne
xchg
xor
push
pop
inc
enter
outsb
push
push
mov
push
push
loope
cmp
inc
negb
sti
lock
mov
xorl
mov
xchg
sbb
cmp
arpl
repz
ljmp
xor
pop
fisubl
pop
lock
push
inc
xor
scas
sahf
scas
outsb
xchg
inc
mov
pop
fidivrs
sbb
lods
jmp
imul
jge
push
or
movsb
adcb
imulb
mov
fwait
or
cmp
icebp
inc
lods
mov
mov
adc
loopne
sbb
pop
jecxz
in
lods
repz
cs
fnclex
loopne
push
cld
cmc
xchg
aad
add
loope
mov
or
mov
outsb
adc
adc
or
jo
push
dec
and
div
mov
imul
sub
das
icebp
je
sbb
lock
es
stc
jge
xor
imul
mov
mov
mov
rcr
sbb
inc
cmc
pop
fdivs
fcmovu
leave
cmpsl
pop
push
rclb
out
jne,pn
or
jb
scas
jbe
fistps
mov
arpl
stos
lea
lods
sbbb
xchg
mov
xlat
jae
jecxz
adc
jne
inc
enter
cltd
lods
add
inc
add
lret
lahf
mov
fmull
pusha
in
cmp
fmull
jle
mov
enter
in
test
popf
adc
adc
add
mov
bound
inc
add
aam
sbb
pop
daa
scas
repz
adc
sahf
pop
xor
loop
jnp
or
fdivl
pop
addr16
sub
jmp
ret
jmp
repz
data16
fcmovnu
sub
dec
ja
popa
jbe
stos
pop
xchg
push
movsb
hlt
sahf
pop
cmp
jp
negb
ja
insl
or
sahf
gs
inc
in
icebp
lds
and
sbb
sbb
outsb
inc
int3
imulw
mov
adc
adc
cmp
leave
cmp
dec
aad
lret
mov
adc
out
add
in
push
cmp
pop
cmp
pop
inc
cmp
push
cli
jns
popa
scas
test
shrb
lcall
add
movb
or
mov
jae
push
sub
mov
or
xchg
mov
add
or
xchg
enter
inc
fwait
jns
idivb
pop
jl
pop
into
add
outsl
sub
add
mov
sub
xchg
sbb
cmp
jno
jmp
jecxz
out
dec
and
lods
testb
mov
fwait
call
lret
mov
aad
test
xchg
inc
pop
mov
push
xchg
and
in
adc
fistpl
cmpsb
push
adc
test
cmp
cmp
repnz
out
ret
ret
push
call
pop
out
push
pop
mov
push
insb
negb
mov
xor
inc
dec
mov
push
jne
mov
insb
ss
fs
and
lods
jp
idivl
out
in
xchg
add
cmp
imul
aad
jns
movsb
out
sarb
lds
dec
sub
xchg
mov
test
xor
xorb
jns
pop
cmpsb
jns
lahf
mov
lock
loop
xchg
aad
mov
push
sbb
rol
out
ss
rcl
pop
mov
xor
xchg
sbb
lods
aam
mov
lret
cmp
test
lahf
adc
sub
in
movsb
lock
add
dec
out
inc
stc
fdivr
sub
loopne
jp
sub
sbb
mov
cmp
stos
in
pusha
inc
scas
js
scas
xlat
das
xchg
fldl2t
fcmovbe
leave
cmp
adc
xor
inc
mov
sub
mov
cwtl
sarl
ds
push
in
cmp
shrb
hlt
scas
nop
or
jge
and
sarb
dec
or
ffreep
sbb
pop
cmp
inc
outsb
shll
adc
outsb
daa
inc
mov
in
xchg
xor
dec
in
xchg
lahf
mov
push
lods
rorl
push
outsb
pop
cmp
daa
jo
cmpsl
and
pop
out
out
test
jnp
orb
pusha
pop
div
pop
aad
jne
mov
insl
xor
sub
nop
ret
pop
pushaw
adc
cmp
insb
sbb
jnp
xor
pushf
loope
pop
mov
outsb
and
push
xchg
mov
cmpsl
test
sub
lock
movsb
push
daa
push
stos
sbb
and
and
xchg
ja
shlb
scas
pop
xchg
xlat
jo
inc
pop
aam
jge
cmpsb
pop
jecxz
cltd
or
sub
mov
pusha
push
adc
idivb
and
mov
jecxz
jmp
std
add
xchg
jecxz
scas
out
out
dec
mov
xchg
mov
xchg
aad
loopne
outsl
add
int
rorb
pop
test
and
dec
xchg
cmovbe
cmp
neg
jge
and
data16
sbbl
adc
cld
lock
insb
mov
movsl
or
cs
cs
js
lret
mov
xor
push
out
mov
push
inc
push
int
imul
lcall
loope
lret
clc
rcrl
sbb
fstl
es
and
pop
dec
mov
add
inc
out
cmp
loop
sbb
sbb
lret
fsubs
scas
imul
ror
in
cld
aas
adc
fdivr
jge
sbb
xchg
je
test
jno
cmp
push
xchg
mov
or
mov
cmp
in
in
inc
cmc
aas
sbb
push
sub
mov
imul
inc
mov
add
pop
cld
in
pop
aaa
push
dec
add
hlt
cmc
lahf
mov
ljmp
cmp
rcrb
or
adc
sub
cmp
jle
mov
cmpsl
pop
jne
mov
stc
bound
inc
test
pop
push
out
loopne
mov
cmp
and
xor
push
cmpsl
xchg
out
xchg
cli
icebp
jo
pop
jle
pop
gs
xor
mov
inc
das
subl
jb
ds
inc
mov
mov
mov
mov
add
dec
fstl
mov
push
xchg
xchg
push
push
jne
mov
pop
test
cmp
lret
repz
mov
mov
fs
cmc
xchg
ret
lret
rol
push
cmp
xor
dec
adc
ret
gs
or
frstor
cltd
cmp
shrb
cmpsb
xchg
lods
out
dec
and
adc
inc
inc
xor
add
ret
repz
inc
mov
cmpsl
or
roll
pusha
pop
stos
mov
dec
ljmp
sahf
dec
jne
bound
sahf
cmpsl
push
cmp
repz
pop
stos
test
cmpb
or
je
ret
ljmp
sbb
jge
scas
lods
rcr
sbb
sahf
push
inc
ljmp
sahf
outsl
jl
push
std
push
sub
and
pop
jl
stos
sbb
iret
jne
imul
aaa
fmuls
repz
shll
jb
sub
mov
pop
stc
jecxz
dec
es
add
aad
aaa
pushf
shrl
mov
ret
ljmp
popf
mov
mov
clc
pop
stos
jmp
daa
ret
std
popa
and
pop
mov
add
mov
aas
fstl
mov
and
push
mov
arpl
in
aad
js
push
in
daa
xlat
sbb
add
sbb
mov
pop
shrl
xor
repz
pop
inc
imulb
mov
inc
sarl
pop
fisubrs
ljmp
aam
xor
popf
dec
fucomp
mov
rorl
lock
xchg
xchg
inc
jae
fisttpl
sbb
loope
inc
mov
and
and
inc
pop
sbb
repz
mov
pop
stc
xor
cmpsl
adc
test
mov
inc
mov
loope
pop
mov
repnz
push
adc
insb
mov
xor
in
mov
setle
popf
xchg
sub
and
cmp
pop
outsb
xchg
pop
insl
mov
addr16
test
xor
ret
repnz
not
int
sub
mov
sub
stc
push
out
or
sub
pop
mov
repz
push
shlb
in
adc
sbb
jnp
mov
sub
ss
xor
mov
mov
push
testl
sub
jl
dec
test
out
out
sbb
testb
fistpll
inc
inc
xchg
lcall
cld
sti
pushf
adc
pop
insl
ljmp
adc
dec
dec
test
sbb
fiaddl
push
xor
and
xor
lret
inc
shl
mov
or
mov
jno
repz
push
sub
mov
into
lret
fs
nop
dec
or
jp
js
push
jge
jb
aaa
jecxz
loop
add
popa
xchg
ljmp
loop
scas
fmull
lahf
test
mov
shlb
cmc
rolb
push
out
mov
inc
insb
xor
lods
fildl
fistpl
out
sbb
inc
or
inc
gs
add
mov
in
mov
or
jno
pop
dec
cmp
jo
dec
in
lcall
or
ss
pop
aaa
mov
push
ss
ret
out
cmp
lret
push
popf
popf
jne
cmp
add
imul
pop
scas
push
adc
push
neg
in
ret
dec
sub
mov
and
shlb
adc
arpl
mov
dec
das
and
pop
and
dec
imul
mov
adc
mov
jge
mov
jo
jg
xor
test
mov
cs
mov
or
adc
test
addb
and
in
incb
cmp
mov
push
imul
pop
lret
push
dec
mov
mov
mov
sbb
jbe
push
dec
add
pop
cld
pushf
or
jo
sbb
mov
outsb
cmpsb
loop
jnp
sub
cmpsl
fnstenv
sbb
jo
lods
mov
dec
mov
das
loopne
pop
iret
sqrtps
lret
and
xchg
dec
sub
xchg
pop
cmp
sbb
sahf
mov
pop
adc
add
mov
jno
push
addr16
jb
jmp
stos
mov
int3
fdiv
imul
jb
test
inc
cmp
call
sub
xchg
mov
jnp
adc
mov
test
fistpl
andps
fsts
xor
push
xchg
mov
pushf
stc
jbe
int3
rcr
test
movsb
mov
dec
insb
fldt
rclb
push
leave
or
lahf
jae
mov
sbb
ret
aad
jnp
xchg
cltd
jp
sti
mov
jg
sbb
repz
int
idiv
pop
int3
arpl
pop
dec
inc
xchg
lea
outsl
sub
push
xor
aam
push
adc
cli
repz
cmp
shlb
ficoml
and
test
rclb
mov
icebp
repnz
loope
addr16
sbb
and
lds
pop
popf
data16
xor
pop
xchg
int3
push
and
rolb
add
lret
or
imul
fbstp
jecxz
insl
int3
push
push
dec
test
lds
insb
xchg
std
out
cmp
cmpsb
ret
out
iret
mov
push
loop
testl
ljmp
adcl
or
dec
addb
addr16
mov
clc
in
pop
jno
pop
scas
xlat
fwait
inc
lahf
testb
xchg
jbe
mov
cmp
mov
lods
in
daa
cld
ss
popf
dec
sbb
adc
cmc
repz
fsubrs
sub
mov
int
cwtl
push
out
sub
and
dec
push
and
pop
fisubrl
pop
pop
aas
sbb
aaa
mulb
mov
adc
sub
and
outsl
movsb
daa
pop
push
xchg
inc
jns
add
pushf
jmp
test
leave
jo
lods
lock
sub
lahf
loopne
mov
pop
fisubrs
xor
or
cli
xor
sub
test
popa
mov
es
pusha
lahf
out
fldenv
adc
jg
dec
cwtl
enter
xchg
test
cmp
out
sbb
mov
or
mov
mov
jmp
aad
fwait
cmp
cmp
pop
inc
test
cmp
mov
fwait
xor
mov
adc
and
inc
cmpl
pusha
or
add
in
adc
pop
pushf
mov
cmc
jg
pop
xor
popa
mov
inc
js
mov
mov
iret
adc
aam
std
lret
xchg
push
push
mov
mov
shrb
daa
pusha
jle
mov
or
call
sbb
cli
jnp
gs
or
adc
pop
int3
aas
outsb
test
mov
outsb
push
loope
push
mov
mov
xchg
inc
or
mov
mov
test
jae
fnstenv
sahf
aad
in
xor
insb
push
push
push
inc
aaa
sbb
hlt
sub
fldt
push
sub
shll
shll
sub
fwait
imul
mov
push
rol
pop
adc
inc
fcomps
jecxz
adc
out
mov
vrsqrtps
push
xor
sbb
push
pop
and
xchg
and
inc
push
lcall
fidivrl
mov
insb
popf
test
divb
dec
ljmp
push
in
cmp
es
jbe
jmp
sbbb
sub
inc
or
jns
sbb
iret
stos
push
mov
lds
pop
loopne
sub
insb
jecxz
shrl
lods
inc
ja
jg
shrb
pop
or
sub
call
push
inc
loop
jg
and
fdivs
mov
popf
daa
mov
push
and
or
push
clc
sbb
imul
adc
fcomp
lds
rcr
lock
dec
pop
stos
mov
sbb
jl
mov
cmpsl
arpl
mov
jg
mov
fimull
cmp
dec
push
out
dec
ret
lea
outsb
incb
xchg
push
adc
xor
cmp
push
popa
push
shll
adc
push
arpl
testb
outsb
add
push
ficoms
mov
adc
fistl
mov
xchg
sub
pushf
inc
popa
lcall
xor
mov
or
cld
xor
jmp
mov
cld
fsts
dec
test
add
lret
stos
fisubrl
hlt
sub
mov
in
arpl
lret
xchg
leave
xor
movsl
add
dec
mov
test
lcall
add
popa
sub
or
in
sbb
insl
jno
iret
dec
mov
inc
jne
mov
roll
add
daa
xchg
mov
hlt
dec
mov
dec
out
mov
jmp
je
loope
dec
mov
out
add
andl
adc
std
push
cmpl
popf
movsl
push
rcrb
je
mov
and
add
jnp
mov
iret
push
insb
xchg
lea
call
lock
hlt
clc
xor
push
push
faddl
aam
mov
mov
xor
adcb
mov
fsubr
pop
mov
mov
das
addl
nop
scas
hlt
mov
xchg
sub
loope
data16
xor
sub
fdivrs
pop
xchg
pop
cs
scas
jmp
je
fucomi
cmpsb
pushf
push
idivl
push
imul
ret
fwait
xchg
out
sbb
outsb
dec
ljmp
icebp
cmp
xchg
inc
js
ljmp
xchg
aam
add
dec
daa
sti
jmp
pop
out
test
xor
or
ret
incb
mov
aam
pusha
fsubrs
ja
in
aas
xor
shrb
out
push
xor
aaa
fs
subl
push
movsl
or
cltd
daa
xor
xchg
dec
in
sub
mov
inc
mov
fsubrs
in
mov
fldcw
loop
loop
add
fs
std
push
sti
out
xchg
dec
and
cld
gs
js
pop
mov
push
jno
sbb
sub
fmuls
add
push
mov
rorl
xchg
outsl
mov
not
and
lea
mov
xor
push
scas
sti
xor
ljmp
hlt
mov
in
push
jnp
mov
cmp
xchg
sbb
xrelease
pop
mov
sbbl
sub
mov
mov
repnz
push
push
jno
mov
ja
orb
sbb
xor
sti
jo
bound
or
sarl
add
and
mov
add
dec
test
jmp
stos
pop
imul
mov
ss
hlt
push
xchg
leave
arpl
or
loop
mov
sub
mov
jg
mov
shrl
and
cmc
xlat
mov
adc
dec
push
ss
jl
dec
xor
xchg
addr16
jo
jp
mov
shll
rolb
sbb
shl
push
or
ljmp
pop
leave
cltd
sbb
adc
test
leave
lcall
mov
idivb
cmp
mov
inc
inc
repnz
jle
xor
cmp
mov
clc
jne
sub
and
add
mov
jb
test
lds
add
add
xchg
mov
in
daa
mov
adc
and
or
int3
std
cmpsl
ret
or
fidivs
sbb
inc
dec
push
stos
nop
clc
rclb
fldt
mov
adc
inc
js
stos
frstor
adc
inc
or
cmp
jo
dec
ja
leave
sti
fs
stos
ret
fwait
popf
outsl
mov
pop
or
xchg
fistpll
jl
movhps
sbb
and
les
push
les
ret
cmp
mov
or
popf
fcmovbe
jns
es
loop
addr16
cmp
jb
es
and
mov
cs
test
fistl
and
popa
outsl
dec
or
imul
scas
xchg
add
push
in
xor
jne
andb
mov
in
xchg
xchg
add
popa
xor
lahf
mov
in
jae
js
loop
cmovo
test
add
push
pop
add
pop
and
lea
mov
push
jle
xchg
cmpsb
ja
add
rcr
adc
inc
add
in
jl,pt
lea
xor
pushf
or
call
sub
mov
jecxz
dec
jbe
pusha
sub
or
xchg
stos
int
dec
xorb
sub
adc
inc
push
cmpsl
cmc
adc
mov
lock
pop
fmulp
scas
jne
jbe
mov
pop
mov
fmull
fnstcw
xchg
mov
test
xchg
das
loope
test
adc
add
icebp
nop
push
dec
or
addr16
aad
rcl
dec
insl
lock
or
cli
call
push
outsl
insb
fdivs
leave
jb
cld
ret
mov
mov
jmp
loope
pop
cmp
loopne
lret
sub
nop
dec
jp
mov
nop
sub
pop
jns
nop
je
lret
mov
mov
inc
jo
xchg
xor
adc
inc
call
hlt
jo
lods
cmp
jae
sub
xchg
psrld
stos
inc
jbe
dec
xor
push
sti
mov
cmpsl
sbb
adc
cli
mov
ds
std
cmpsb
mov
scas
cltd
mov
fidivs
xchg
lcall
xor
aam
cmpl
sbb
lock
imul
inc
loopne
and
mov
or
push
mov
repz
repnz
pop
xor
push
dec
fistps
movsl
sbb
push
stos
push
test
mov
inc
adc
cmp
lcall
out
xchg
jmp
popa
sbb
ja
xor
cmpsl
mov
cwtl
mov
imul
movsl
dec
mov
rcrl
dec
jl
sub
mov
movsb
sbb
movsb
or
xchg
test
dec
lods
cmp
xor
push
pop
inc
mov
push
test
push
shlb
mov
ds
out
ds
jl
xor
cwtl
repz
iret
fisttpll
jge
jae
mov
jb
mov
adc
dec
inc
xchg
sub
sub
in
mov
lret
shrl
pop
mov
pop
loopne
push
stos
das
testl
mull
sbb
dec
leave
add
movsb
nop
jbe
out
fistpl
les
xor
incb
test
enter
and
clc
pop
dec
fsubrs
sbb
fdiv
aas
mov
shl
mov
les
lds
cmp
lahf
sub
das
loop
adc
int3
lea
in
push
xchg
sub
cli
rcll
push
pushf
cwtl
mov
cmp
mov
push
fildll
xchg
sub
popf
sbb
push
test
hlt
xor
push
sbb
in
jecxz
imul
and
fwait
pop
add
mov
pop
mov
mov
fwait
ds
fsubl
andl
mov
or
pop
jmp
lods
dec
inc
sub
mov
adc
mov
test
sub
clc
jne
jmp
xchg
xchg
inc
bound
mov
call
push
or
inc
mov
xor
imul
inc
loope
inc
dec
leave
test
sub
fsts
pop
xchg
in
test
cs
mov
push
xor
inc
dec
mov
int3
stos
int
jge
pop
ds
rcr
jp
mov
loope
mov
js
xorb
mov
cmpsb
jnp
insb
jbe
imul
repnz
and
cmp
cmpsb
jno
stos
test
test
cmp
insb
push
fsubrs
and
out
or
push
jecxz,pt
sbb
pop
xlat
dec
cmp
lgs
sub
push
add
cmpsb
cmp
inc
cmp
push
jb
xchg
cmp
jbe
pop
fmull
fsts
stos
push
xor
push
add
xlat
adc
sbb
mov
icebp
pop
push
sti
push
cmp
cmp
jmp
paddusb
jno
cmpsb
fnstenv
xor
rcrl
iret
push
stos
ja
adc
fisubl
cltd
and
jp
call
cmpsl
mov
cmp
hlt
cmpb
xor
test
shll
je
out
mov
jo
jl
ret
pushf
mov
nop
push
lods
xchg
stos
repz
stc
aad
loop
sub
test
and
mov
lock
lcall
add
call
inc
pop
aam
int3
frstor
fcmovbe
adc
add
loope
test
xor
cmpsb
aaa
push
or
out
fsubs
add
pop
push
into
je
pop
push
xchg
mov
cwtl
lret
ret
push
push
movsb
add
sbb
fisttpl
int3
sti
rcll
pop
stos
lret
adc
cwtl
add
mov
push
dec
mov
jl
fs
inc
xchg
loope
xchg
push
push
repnz
dec
pop
rcll
jg
into
out
xchg
or
repnz
outsl
dec
popl
inc
add
lods
jecxz
repnz
sbb
inc
adc
push
mov
push
pop
adc
hlt
adc
sbb
mov
cmp
rclb
mov
dec
jno
add
inc
pop
xchg
inc
insb
xlat
xchg
inc
lahf
pop
aam
xor
lea
and
out
test
mov
ds
clc
push
mov
add
lret
dec
std
mov
rcrb
imul
cmp
xchg
and
idivb
je
xlat
or
in
out
mov
out
inc
inc
outsb
sub
xchg
out
insb
xchg
xchg
jmp
lret
jl
mov
xchg
aaa
stc
movsl
sub
je
jecxz
xchg
inc
fmulp
push
and
jl
fdivrs
ret
sub
std
cmp
push
dec
cmp
icebp
mov
imul
lret
iret
push
adc
outsb
cmp
xchg
sbb
cmp
ret
out
or
daa
pop
das
push
pop
dec
repz
hlt
mov
sub
mov
xor
adcl
mov
stc
iret
mov
add
xor
fs
mov
out
in
jno
lock
call
xorl
jb
dec
dec
or
pop
cmp
pop
push
lret
lods
jle
aaa
mov
scas
dec
repz
pushf
jo
fidivrs
aam
cmp
dec
ret
testl
push
or
sbb
stos
sbb
test
nop
jg
pop
pop
or
and
push
cvtdq2ps
cltd
dec
cmp
idiv
lods
xor
mov
pop
sub
and
xchg
xlat
adc
mov
mov
mov
jo
and
addr16
stos
jl
cmp
xchg
jne
mov
dec
xor
sub
mov
cmp
in
mov
pop
cmpsb
into
nop
cmp
loope
pushf
insl
xchg
lret
mov
or
cld
mov
or
std
and
fs
jg
loop
out
or
jg
dec
loop
dec
into
xor
xor
iret
data16
movsl
iret
cmp
cmp
push
mov
sub
ljmp
cmp
test
in
loopne
mov
dec
loope
call
clc
inc
lret
mov
sbb
in
mov
mov
jg
leave
shll
mov
ja
jne
iret
add
push
cmpsl
mov
aas
and
xchg
add
shrl
sub
pop
jae
push
loopne,pt
xor
xor
inc
push
in
mov
fiadds
call
scas
std
push
cmc
cmp
je
dec
das
sahf
mov
fcmovnbe
mov
inc
push
cmp
imul
jmp
movsl
test
mov
dec
mov
xor
lea
pop
mov
pop
es
ret
mov
ja
cwtl
test
outsl
fists
cmp
xor
or
lock
xorl
filds
loopne
lahf
popf
inc
jns
push
enter
sbb
sub
outsl
aad
push
pop
repz
sub
cmp
pop
sub
es
ljmp
add
jl
aas
push
pushf
inc
xchg
inc
mov
clc
inc
je
insl
cmp
dec
lcall
and
int
inc
mov
nop
xor
outsl
addb
push
fstpt
pop
ficomps
cld
dec
cli
sbb
fwait
insb
xor
sbb
cltd
pause
mov
cmp
mov
jne
dec
dec
pop
pop
lods
ljmp
daa
pop
mov
pop
in
dec
addr16
jmp
sbb
lods
dec
cwtl
mov
adc
or
mov
cmp
xlat
cltd
insl
loopne
push
ret
roll
sub
push
jge
mov
adc
dec
pop
adc
jmp
shlb
icebp
cltd
out
lret
jg
or
fiadds
mov
out
mov
movb
std
dec
jb
and
scas
inc
cmc
xchg
or
ljmp
data16
imul
xchg
jmp
test
mov
fldenv
xchg
mov
pop
inc
std
jp
xchg
sahf
bound
lea
int
jb
inc
pop
mov
jmp
jb
bound
add
push
mov
sub
inc
push
push
lahf
sahf
push
push
xchg
adc
fistps
or
mov
incb
sbb
xchg
imull
cmp
faddl
mov
shll
add
mov
mov
xchg
mov
rcr
js
add
seto
mov
pop
cmpsb
pop
cmp
lret
xor
in
cmp
add
fcompl
mov
mov
clc
lret
fisubs
and
cwtl
inc
aad
arpl
out
or
les
lods
jmp
pop
stos
movsb
push
fcoml
jb
bound
mov
in
test
ja
out
jne
add
std
in
clc
into
les
fistl
mov
lret
mov
sub
leave
out
dec
and
cmp
outsl
lret
and
daa
cld
scas
pop
aad
iret
in
push
cmpsb
movsl
mov
std
repz
loope
out
jne
push
dec
icebp
mov
outsb
lret
stc
mov
jl
mov
or
dec
mov
lods
mov
push
fwait
nop
pusha
xchg
int
push
insl
je
fisttps
xchg
ds
jo
sub
rep
pusha
dec
shll
popf
bound
sbbb
in
fs
ds
dec
mov
mov
mov
xchg
push
pop
mov
mov
pusha
popf
loope
inc
dec
add
inc
cmp
out
inc
inc
push
mov
out
fsub
stos
push
lahf
cmpsb
and
sub
and
iret
outsb
leave
lret
sar
pop
incb
xor
jg
sub
mov
xchg
outsb
les
adc
arpl
jo
mov
imul
das
out
mov
xor
js
jge
or
enter
test
mov
cli
roll
inc
sub
adc
xorl
out
shl
test
xchg
cmp
mov
cmp
pop
ljmp
fsubrs
inc
icebp
mov
in
sbb
adc
jb
add
dec
push
inc
jo
cmpb
js
jge
icebp
mov
or
pop
xor
test
js
mov
pop
dec
fwait
addb
aaa
cmp
pop
mov
out
stos
imul
lret
jne
or
sbb
ja
dec
xor
int3
xor
fscale
mov
fcomip
iret
add
imul
pop
into
mov
ljmp
fcom
pop
cmc
es
mov
cwtl
cmp
adc
xor
cmp
test
dec
push
in
sahf
insl
hlt
mov
lret
fldenv
lods
fsubl
push
adc
xrelease
rolb
cwtl
xchg
cmp
sub
lock
or
les
cmp
fimuls
lahf
mov
lahf
or
mov
cmp
jl
mov
rol
scas
pop
adc
in
xlat
mov
or
clc
ljmp
mov
ja
push
xchg
outsb
test
cltd
mov
repz
pop
fadds
mov
cmp
insb
das
bound
push
test
lret
clc
jp
jle
mov
dec
add
int3
xor
and
jle
std
cmp
xchg
testb
add
repz
scas
dec
movsb
loop
and
out
les
xor
jmp
in
dec
mov
call
or
xchg
dec
psrlw
or
xchg
sub
addb
ficoml
mov
inc
push
dec
cmp
jo
insl
mov
aaa
pop
int
clc
aas
not
bound
or
orl
mov
out
in
je
mov
dec
jno
sub
inc
punpckldq
xchg
cmp
inc
sub
mov
mov
push
mov
adc
std
imull
sub
inc
out
pop
notb
test
fnstcw
dec
adc
mov
sbb
jge
fcoms
sahf
insb
mov
fwait
aad
int
iret
mov
xchg
std
cs
add
or
test
loopne
pop
jp
inc
enter
dec
push
push
mov
xchg
pop
xor
dec
adc
xlat
add
mov
loopne
cmp
loop
or
fmull
mov
dec
ds
add
aaa
inc
outsb
and
xchg
ret
sub
rol
sub
add
xchg
push
int
sti
jmp
mov
inc
in
jo
xor
lret
mov
loope
bound
pop
mov
push
test
fildll
pushw
inc
leave
outsl
data16
adc
out
js
jp
or
insb
xchg
xchg
js
clc
scas
nop
mov
jne
mov
mov
loopne
pop
sub
test
shlb
insl
icebp
jl
fisubl
popf
add
je
add
ljmp
dec
jmp
jo
daa
lret
test
jmp
adc
inc
or
mov
pop
sub
push
loopne
test
jecxz
rclb
mov
loopne
into
jg
dec
shlb
sbb
sti
ret
rdmsr
nop
scas
sarl
nop
mov
pop
addl
ret
mov
icebp
inc
mov
inc
stc
jp
mov
pop
push
gs
mov
jae
jmp
xchg
xor
jge
mov
mov
sbb
adc
fsubr
out
imul
inc
inc
jmp
pop
pop
fstpt
adc
ja
pop
lds
cmp
sbb
or
mov
xlat
sbb
jnp
bound
add
fchs
pop
inc
popa
cmpsb
pusha
mov
inc
or
aas
or
adcl
xor
mov
in
xor
dec
shll
xor
and
or
push
rorl
loop
jp
repnz
scas
lret
mov
xchg
inc
cltd
add
ss
and
shll
fsubl
sarl
popa
stc
in
lea
xor
inc
sub
sub
ljmp
test
sub
jle
dec
inc
das
aaa
push
int3
inc
pusha
mov
pop
cltd
fcompl
and
mov
cwtl
mov
dec
adc
xor
inc
jae
add
jae
aas
aas
cmp
jmp
jge
ds
dec
imul
add
push
es
xchg
pop
out
add
fcoml
fisttpll
and
out
xor
aad
mov
add
mov
jo
lret
sbb
dec
pop
or
jnp
out
pop
loop
popl
xchg
jmp
lds
jecxz
stos
xchg
clc
lcall
aaa
cmovs
lahf
fadd
imul
mov
lods
sbb
push
or
jb
scas
stos
cmp
pop
push
std
out
movsl
mov
cmp
faddp
jp
fwait
dec
xor
fists
incb
jl
test
ja
push
sub
mov
mov
xor
or
push
ret
aaa
mov
lahf
dec
sahf
sub
xor
movsl
xchg
sbb
lcall
and
in
fnstcw
adc
mov
stc
in
movsl
mov
dec
cmpsl
scas
out
push
and
in
mov
stc
cmp
jae
lahf
add
aaa
icebp
jmp
sbb
loopne
mov
mov
cld
dec
insb
scas
shlb
or
call
ficomps
adc
mov
xlat
push
jle
adc
data16
jp
jno
sbb
mov
and
sbb
jg
leave
aaa
inc
inc
lds
jge
mov
outsl
dec
cltd
sub
jle
shl
in
inc
jecxz
push
insl
cmp
xchg
xor
dec
adc
mov
or
adc
cmp
adc
in
ja
outsl
push
and
mov
xor
mov
adc
cmp
inc
jbe
testl
jmp
and
push
fisubs
lds
rcl
pop
movsl
fiaddl
aaa
xorl
push
jae
pop
xchg
dec
mov
dec
mov
xchg
repz
das
push
mov
lods
dec
dec
pop
out
mov
push
cmp
in
in
test
mov
lea
imul
lock
idivb
inc
shll
sbb
push
jmp
xor
push
test
imul
adc
aam
fisubrl
mov
test
mov
push
popa
je
jne
push
call
xorl
repnz
addr16
mov
lcall
push
int
pop
jb
lret
dec
sub
cwtl
mov
in
jmp
pop
mov
adc
and
ror
and
les
in
cwtl
lahf
cmp
mov
mov
frstor
stos
mov
xchg
insl
inc
pop
mov
repnz
call
mov
mov
jne
movsl
mov
mov
fcompl
pop
je
mov
rorb
pop
jbe
jae
fstp
sbb
outsb
imul
mov
mov
push
outsb
jae
mov
lock
iret
jns
xchg
popa
mov
mov
wrmsr
adc
sbb
dec
test
outsb
nop
pop
sbb
test
arpl
or
sub
and
flds
xor
push
sbb
adc
and
fildll
insl
cmp
cmp
inc
nop
aam
cmp
notb
mov
ss
pop
insl
mov
inc
xor
leave
sub
jecxz
cmc
jb
lret
notl
pusha
mov
cmp
push
pusha
mov
out
loop
sub
loope
or
div
jge
inc
lahf
clc
dec
popf
mov
sbb
rcrl
mov
or
test
lret
cmpsl
lock
fnstcw
loop
orb
adc
xor
xor
cmp
xor
pop
jne
sahf
mov
mov
rolb
mov
dec
mov
xor
sub
out
imul
jg
mov
push
outsl
sub
ljmp
add
pop
imul
test
jl
add
sub
int
push
mov
pop
xorb
mov
xchg
mov
sti
inc
jge
sbb
pop
sbb
push
sub
or
jmp
shlb
ds
mov
sbb
dec
xchg
add
inc
pop
sbb
mov
xor
cmp
rorl
sbb
sti
sahf
enter
fidivs
mov
and
cmp
sbb
sti
sub
push
mov
insl
cmp
imul
adc
xchg
out
jnp
or
fistl
push
daa
lods
push
fs
xor
adc
lods
mov
xor
jnp
scas
in
dec
mov
jge
loopne
loopne
aam
cltd
fidivrs
or
jno
cmp
pop
xor
push
adc
ss
adc
pmulhw
and
cmp
sub
push
ja
cli
jo
add
out
loop
and
mov
xchg
mov
add
push
push
inc
dec
and
loop
sbbb
stos
xlat
outsl
leave
jl
inc
pop
lret
xor
ret
jmp
shrl
jp
movsb
mov
mov
mov
jge
xchg
mov
push
pop
mov
lods
pop
jne
xchg
outsb
std
push
pop
les
in
xor
pop
push
add
ret
gs
pop
xlat
in
fs
pop
xchg
mov
push
loopne
mov
xchg
add
fidivrl
gs
xchg
dec
daa
repnz
mov
pop
sbb
pop
sbb
leave
xchg
mov
xchg
xor
lret
sbb
subb
pop
xchg
lods
dec
int
push
lahf
sbb
scas
push
test
sbb
inc
cli
scas
and
mov
mov
mov
mov
pushf
adc
xchg
adcb
sahf
sti
lds
out
pop
movl
sbb
xchg
shlb
int
lock
das
aaa
sub
dec
les
roll
xor
lret
into
cmp
inc
jbe
cmovnp
bsr
bound
jnp
outsb
push
mov
inc
pop
push
ja
dec
imul
jge
pop
pop
inc
mov
dec
adc
xchg
xor
mov
vpacksswb
gs
data16
push
daa
lds
or
aad
push
push
and
inc
scas
mov
add
fldl
mov
cmp
add
mov
xchg
sub
mov
rcrl
fdivrp
mov
enter
ljmp
mov
clc
mov
xchg
hlt
xor
mov
sub
mov
mov
jno
xchg
jbe
xor
data16
xchg
pushf
inc
das
mov
mov
mov
xor
clc
sub
out
sbb
repnz
jp
leave
test
and
xor
test
xchg
adc
cmp
mov
int
shlb
mov
stc
jb
sbb
dec
mov
std
cwtl
push
jp
data16
shll
aad
inc
push
mov
sbb
mov
and
cmp
pop
stc
test
subb
mov
mov
xor
arpl
in
loopne
xchg
cmc
sahf
loop
xor
push
stos
lods
scas
inc
mov
jecxz
mov
ss
adc
js
xor
pop
cli
xchg
iret
insb
aas
cmp
sbb
cmpsb
imul
aas
mov
lock
insb
sti
or
addr16
inc
mov
or
int3
inc
ja
pop
dec
movsb
mov
mov
sbb
inc
mov
jns
sbb
push
test
adc
sbb
pop
fistpll
mov
aad
jae
inc
xor
cmp
mov
push
xchg
pop
mov
test
and
outsl
jg
cli
dec
sbb
cmpsl
sub
sbb
push
jmp
aas
mov
aaa
imull
push
icebp
fdivrp
mov
les
jae
insb
push
nop
push
pusha
lret
enter
popf
pop
fisubl
jp
jno
mov
pop
sub
or
push
jb
test
and
push
std
dec
dec
popa
push
inc
fbld
in
in
pop
cmpsl
sbb
cmp
movsb
sbb
lods
push
popf
xor
bound
in
dec
iret
fiaddl
in
in
out
and
ret
cmp
and
dec
arpl
add
sti
cmp
jno
mov
mov
les
fiadds
dec
lods
dec
pushf
lret
sub
into
jmp
mov
cmp
inc
stos
fstl
notl
pop
mov
xor
std
jl
outsb
insl
pushf
test
fdivrs
add
mov
call
and
mov
pop
orl
pop
mov
inc
pop
mov
in
popa
into
mov
add
popa
ds
out
cmc
leave
xchg
cmpb
lods
rcrb
mov
mov
scas
cmpsl
dec
pop
fsubr
jo
and
jo
bswap
test
push
ljmp
xchg
mov
test
out
repz
add
imul
xlat
mov
push
repnz
jge
cmpsb
push
add
scas
mov
cmpb
xchg
stc
cmc
movsb
scas
adc
divb
mov
sub
fcmovnb
mov
mov
mov
cmp
in
fsts
adc
aas
dec
push
or
sub
movsb
scas
add
jl
pop
and
add
pop
inc
stc
icebp
test
stc
out
pusha
add
bound
es
add
cmp
das
call
inc
cld
mov
push
movsb
mov
adc
lret
cmp
sar
pop
add
xchg
xchg
pop
and
aaa
inc
inc
xchg
xchg
xor
ficoms
dec
adc
test
push
mov
push
mov
rolb
mov
xchg
dec
inc
daa
mov
cmp
jge
lods
aad
test
loope
je
mov
adc
mov
mov
sub
inc
dec
test
sub
sub
imul
or
pop
imul
outsl
pop
sub
push
and
into
ret
les
mov
int3
mov
mov
inc
xchg
mov
pop
mov
inc
lcall
or
mov
aaa
add
jg
call
inc
into
lock
lods
enter
enter
push
mull
ret
jg
xor
push
in
call
or
lds
xor
mov
les
je
xchg
mov
dec
cmpsl
roll
es
or
fidivrs
and
mov
cmp
inc
and
jl
in
add
clc
adc
mov
mov
lds
push
mov
ds
inc
test
push
pop
sbb
int3
ret
cmp
jp
and
pop
mov
in
dec
dec
stc
fldt
les
fbstp
push
sarb
adc
aaa
movsb
dec
fucomi
adc
ss
xor
sbb
cli
mov
repz
ficoml
jns
out
aad
inc
call
movsl
arpl
loop
ret
sbb
push
sahf
mov
jge
pop
pop
bound
out
pop
add
test
enter
out
and
ret
out
lahf
outsl
add
mul
mov
flds
push
xchg
in
or
hlt
or
into
lea
pop
mov
xor
push
dec
and
wrmsr
pusha
cmpsl
mov
test
adc
push
hlt
xchg
repnz
pop
cmp
cmp
pop
mov
fwait
and
lods
sahf
cli
sbb
dec
mov
or
jno
cmp
call
sbb
jp
or
in
fdivrs
dec
mov
icebp
jo
dec
jg
fwait
stos
imul
out
add
jg
add
mov
or
add
mov
or
or
incb
int3
xchg
jnp
jp
mov
pop
nop
stc
loop
xor
es
and
jns
jmp
jge
push
push
sbb
xlat
add
mov
add
xlat
push
mov
mov
das
add
ljmp
loope
pop
out
and
fdivrs
mov
scas
mov
mov
push
dec
xchg
ja
mov
cmpsb
inc
mov
xor
aad
push
imul
sub
mull
movsb
daa
ds
jnp
xchg
sahf
cld
fwait
mov
and
jge
in
insl
das
jno
aas
movsb
xchg
das
pusha
add
dec
jl
xor
sbb
or
add
jnp
sub
shr
rol
and
add
push
test
aam
int3
jecxz
or
cmc
div
jecxz
cmpb
xchg
sahf
or
adc
cmpsb
xor
mov
iret
pop
lret
xchg
mov
inc
cld
adc
pop
scas
rcr
mov
push
xchg
js
mov
pop
stc
popf
cmp
pop
in
divb
leave
push
or
test
out
xor
js
jae
dec
popf
cmc
std
pop
jecxz
adc
mov
inc
dec
and
fildll
inc
mov
push
push
fsubl
or
lcall
bound
lods
cmpsl
adc
sbb
imul
mov
sub
gs
mov
adc
pusha
push
ficoml
jno
jmp
nop
aas
mulb
cld
push
mov
dec
jge
mov
add
sbb
scas
dec
ljmp
sub
pop
orb
out
fwait
mov
fwait
pusha
add
pop
and
xchg
addl
mov
les
mov
loop
inc
pop
xor
add
cmp
mov
pop
mov
pop
clc
or
aaa
lahf
hlt
xchg
mov
and
mov
sbb
xorl
push
sbb
into
shl
sub
xchg
mov
jge
iret
mov
stos
test
mov
cltd
adc
iret
adc
and
daa
ss
testl
xor
imul
cld
xlat
adc
bound
arpl
outsb
cmc
mov
mov
or
sarb
fs
jnp
push
mov
or
popf
pop
jbe
daa
and
scas
or
pop
xlat
push
jbe
cmc
sbb
shrb
and
fsubs
adc
add
lcall
push
outsl
cs
inc
mov
xchg
pop
xor
mov
sbb
mov
cmp
nop
mov
aam
jp
stos
lret
mov
xor
popa
cmpsb
xor
data16
inc
pop
arpl
pushf
adc
mov
xchg
popa
adcl
jp
xchg
add
mulb
add
pushf
and
ss
or
out
test
add
iret
fisttps
push
mov
mov
in
aad
data16
aam
pop
add
and
xor
mov
jnp
lods
out
mov
enter
dec
shlb
cld
push
int
or
cmpsb
and
mov
dec
add
dec
pop
mov
pop
arpl
sbb
cmp
sub
cli
test
mov
test
cld
test
jp
jns
repnz
mov
out
imul
punpckhbw
cmp
xchg
xchg
pop
dec
fcoms
or
popf
jno
lods
or
nop
andb
outsb
loop
sub
jbe
mov
cwtl
sti
lcall
lods
sub
push
add
pop
ljmp
test
ss
test
and
mov
ja
roll
dec
cltd
pop
xor
jae
mov
je
mov
repz
and
mov
adc
sub
dec
rcrb
test
cmpsl
xchg
jmp
push
pop
xchg
pushf
cltd
testb
movsl
gs
sbb
ljmp
cmpsl
and
jno
mov
aad
mov
dec
jecxz
dec
int3
add
dec
popa
sub
mov
jmp
iret
ds
xchg
mov
dec
dec
cmp
sahf
push
push
cs
cmp
lds
call
sbb
aas
xor
inc
xor
mov
mov
into
add
xor
scas
imul
cmpb
into
hlt
xor
cmpsb
mov
mov
pop
add
pcmpeqd
imull
push
aaa
add
subb
push
repz
stos
outsl
cld
inc
inc
xchg
xchg
push
push
mov
sub
mov
sbb
iret
or
inc
or
pop
mov
and
fmulp
mov
lods
in
scas
jae
sahf
xor
cli
outsb
pop
push
and
lcall
adc
out
fdivrl
add
pop
fnsave
pop
push
in
mov
arpl
or
push
push
sti
outsb
aaa
idivb
xchg
outsb
inc
or
js
in
mov
inc
inc
xchg
popa
sbb
iret
into
subb
clc
lds
inc
lret
lea
fstp
stc
int3
xor
fiaddl
pop
sbbb
push
scas
cmpl
aam
push
sbb
push
repz
in
mov
cwtl
xlat
shl
mov
mov
mov
pop
jge
arpl
jo
ss
stc
aaa
ja
mov
daa
in
push
fstpt
jmp
ds
stos
loope
mov
add
xchg
int3
add
mov
fwait
push
inc
aaa
pop
insb
pop
sub
or
mov
insl
imul
fistps
push
push
popa
pop
adc
dec
fistpll
imul
jb
in
sbb
pop
ret
ja
les
cmp
popa
call
dec
mov
xchg
or
sub
in
lds
mov
incb
push
mov
jecxz
clc
mov
lock
iret
into
ja
push
mov
push
or
ficoms
mov
inc
lods
jne
sub
inc
jne
mov
jmp
jecxz
sti
rcrb
js
insb
dec
out
adc
jnp
jb
pop
xchg
mov
cwtl
pop
xchg
add
incb
jbe
sbb
scas
arpl
das
jns
inc
into
stos
sbb
fdivrs
ljmp
cwtl
adc
movsl
push
jns
mov
adc
gs
mov
repz
ds
inc
sub
orb
inc
mov
pop
cwtl
mov
dec
xorb
rcr
dec
and
fldenv
out
cmp
and
pop
dec
fisubs
pop
dec
lcall
insl
neg
popa
fcmovnu
jae
mov
test
fldenv
cmp
mov
int3
sbb
aam
adc
or
pop
outsb
sub
and
or
enter
cli
loopne
gs
cmpsb
aas
les
mov
clc
and
popf
insl
xchg
inc
popf
pop
dec
jns
daa
je
cwtl
pusha
pop
dec
popa
es
mov
mov
cltd
lret
inc
test
pop
into
imulb
mov
push
leave
loop
fxch
push
mov
daa
mov
cmp
jle
fldl
ljmp
push
je
xchg
subl
inc
arpl
lret
add
daa
xchg
sahf
dec
cs
jbe
or
cmp
test
lea
jnp
xchg
jge
jns
ja
push
sbb
mov
fisttpl
loop
es
jb
xor
sbb
push
cmp
inc
nop
sahf
jmp
dec
out
imul
mov
add
xor
dec
sub
xchg
jb
inc
mov
dec
leave
add
mov
notb
push
dec
adc
jae
divb
jl
xchg
cmp
sbb
adc
push
cld
pop
test
dec
inc
test
adc
push
mov
incl
inc
xchg
movsb
jl
ret
pop
jl
inc
and
cmp
lods
push
jg
repnz
cmp
pop
repz
js
gs
lock
xlat
sub
and
into
fstpt
mov
aaa
inc
pop
xchg
clc
and
and
sahf
aad
cmp
inc
pop
cld
stos
push
adc
jo
pop
push
xchg
insl
es
idivb
shll
xchg
das
mov
push
pop
fnsave
call
push
adc
pop
out
mov
and
gs
and
jmp
icebp
adc
loop
aaa
dec
push
imul
outsb
sbb
shl
sub
cs
shl
mov
out
imulb
test
iret
jl
or
ljmp
popl
imul
jle
mov
mov
inc
jae
push
push
jmp
imul
test
outsb
insb
ret
or
mov
aaa
sbb
xchg
ror
aaa
jbe
hlt
fistpll
test
je
jb
inc
mov
shll
in
adc
subb
mov
and
inc
xor
mov
mov
ret
mov
stos
mov
int
xor
popa
pushf
das
das
xor
jle
popa
xchg
jmp
scas
outsb
gs
int3
iret
cltd
out
mov
je
jbe
dec
ja
and
std
jmp
lea
fstpl
jbe
sub
mov
mov
mov
adc
or
ffreep
xor
cmp
jnp
push
sbb
xchg
popf
sub
or
xor
inc
loop
push
jno
xchg
das
and
sbb
sbb
pop
lea
mov
sbb
pop
push
outsl
stos
sbb
add
je
jle
js
sbb
ficoms
mov
les
dec
sbb
repz
movsl
jg
mov
cli
clc
loop
test
fldenv
jecxz
aas
and
cmp
fcmovne
mov
mov
pushf
mov
roll
out
xchg
pushf
sbb
dec
push
cmp
nop
out
pcmpeqd
lret
or
repnz
aaa
aad
cmp
and
out
sub
bnd
push
mov
jmp
mov
and
pop
push
mov
out
inc
aaa
push
lret
or
lahf
cmp
mov
idivb
fdivr
fldcw
popa
pop
and
outsb
iret
mov
loop
mov
cli
es
cmp
jbe
loopne
pop
rorl
mov
dec
mov
ss
sub
test
dec
ss
mov
xchg
mov
cmp
lret
cmc
add
adc
fld
mov
mov
cmp
ss
fildll
dec
cmp
shl
dec
xor
out
and
iret
pop
insb
mov
ficompl
cmpl
xor
aaa
and
sub
fdivrs
push
in
popf
outsl
xor
mov
cs
pop
and
and
fidivl
lret
and
rorb
push
clc
adc
add
mov
cmpsb
lock
pop
jno
xor
mov
rcrl
push
cmpl
fmull
stos
es
fiadds
cmp
ss
test
sahf
mov
and
dec
lret
ja
jp
cmp
and
cmpsl
push
js
cli
jecxz
push
adc
xchg
pop
dec
push
rorl
inc
mov
dec
test
sub
aam
out
inc
pop
popf
adc
cli
mov
mov
ret
mov
sbb
mov
fbld
into
xchg
mov
cmp
sbb
pop
dec
pop
mov
xchg
test
and
imul
dec
adc
test
imul
push
and
mov
add
fsubrl
inc
lcall
pop
subb
pop
testb
mov
popf
test
dec
jmp
mov
push
inc
jno
inc
inc
mov
jge
mov
cmpsl
vpaddw
popf
nop
xchg
int3
loopne
xchg
and
push
stc
test
sti
shlb
mov
lods
pop
out
xchg
lods
lds
call
sti
hlt
mov
xor
pop
notl
push
jmp
subl
push
ret
mov
jmp
xor
arpl
out
adc
je
push
adc
in
xchg
lods
mov
pusha
addr16
jmp
loope
shr
xchg
add
jmp
scas
cmp
cmpsl
dec
mov
int
in
inc
cld
mov
mov
lds
fldcw
icebp
dec
fsubrs
sbb
cmp
pop
fdivrs
add
in
lds
cmp
or
call
and
sub
sbb
out
mov
repnz
addb
and
cmc
dec
cli
mov
cltd
repz
sbb
mov
lock
ss
out
out
lock
pop
ret
jl
out
mov
movsl
scas
add
enter
adc
ficomps
jbe
es
sbb
sti
push
sahf
and
mov
dec
pop
jne
mov
jle
loopne
pop
mov
cmpsl
mov
std
fstps
bnd
sub
out
and
and
fs
push
icebp
sbb
decl
pop
add
in
fs
add
std
mov
add
outsb
cmc
je
test
adc
es
lret
xchg
dec
stos
mov
cmpsl
movsl
loop
cmpsb
mov
rolb
hlt
loope
cld
cmp
out
pop
jnp
lret
out
cmp
ficoms
mov
mov
aas
sbb
int
nop
popf
push
jge
hlt
outsb
cltd
mov
sti
into
mov
shrb
dec
mov
test
mov
imul
push
sub
ljmp
iret
xor
fwait
inc
dec
leave
clc
sbb
mov
shr
pop
lods
xlat
outsb
xchg
in
fidivrs
cmc
inc
pop
shll
mov
pop
add
xchg
xlat
mov
lods
inc
sbb
pop
sbb
xchg
pop
dec
js
in
and
dec
stc
lret
cmp
push
adc
jl
lcall
setae
sbb
test
ss
out
add
inc
lret
and
xchg
cmpsb
pop
and
jo
movsb
lds
cmpsl
and
push
stc
adc
lea
fldcw
mov
lods
cmp
sbb
jnp
lret
lgs
cmp
aas
icebp
sti
xor
inc
lods
xchg
push
pusha
jne
and
loop
mov
adc
ds
lahf
jg
stos
jae
cmpsb
sahf
jnp
ret
in
jo
rorl
fsubl
lods
mov
pop
dec
mov
cs
inc
and
andl
ss
sti
pop
mov
shrl
jge
enter
mov
mov
mov
add
aam
test
push
rcl
stc
std
iret
les
arpl
out
mov
popa
dec
lds
jno
sub
pop
popa
popa
bound
jg
loopne
adc
cmp
push
sub
es
out
insl
xchg
or
push
sbb
jg
xchg
loop
in
mov
fnstsw
cmpsb
out
stos
cwtl
ss
leave
pop
xchg
xor
add
xchg
push
push
cld
fcompl
bound
fsubs
push
icebp
or
inc
pop
and
dec
pusha
xorb
pop
iret
mov
mov
ljmp
pop
sub
inc
insl
pop
stos
pop
sub
mov
das
stc
cmp
vmovq
cmp
sbb
pushf
aas
arpl
lret
and
aam
stc
es
scas
mov
jbe
int3
pop
mov
pusha
mov
int3
into
and
dec
daa
out
cmpsb
sub
lods
daa
test
jmp
mov
notl
ficoml
sub
cmpsb
lods
fcmovnu
cld
fs
insb
int
in
dec
mov
mov
or
bound
or
ljmp
jo
push
gs
into
xchg
aaa
adc
hlt
xor
gs
dec
or
test
aad
mov
push
ja
mov
sub
int3
or
test
lcall
push
sbb
cmovne
out
inc
fists
mov
clc
ljmp
dec
dec
inc
daa
rolb
repz
push
or
xchg
inc
jnp
mov
sub
xor
aas
pop
lret
xchg
addb
aam
push
ret
pop
or
sarb
scas
ss
fucomp
js
in
test
stos
sarl
cmp
mov
pushf
stos
ja
shrl
pop
stos
outsb
fistl
daa
mulb
stos
addr16
ljmp
and
adc
cmpsb
je
xchg
sbb
mov
movsl
dec
addr16
cmc
cltd
aaa
cmc
imull
push
gs
lahf
pop
daa
aam
popf
dec
jbe
icebp
push
sub
sbb
cmp
sub
aaa
sub
fldenv
pushf
repz
mov
cld
push
sub
loop
dec
mov
cs
adc
xchg
xor
in
loopne
cmp
lcall
xor
out
jo
jns
xor
dec
mov
cmp
cmpsl
ss
ds
add
push
push
mov
sahf
xchg
mov
out
pusha
enter
adc
stc
repnz
jl
xor
icebp
xchg
push
js
and
pop
mov
aad
fmulp
push
testb
cmpb
and
mov
mov
gs
outsl
pop
dec
push
add
stos
gs
cwtl
out
jl
jb
ret
xchg
fildl
loopne
scas
mov
mov
push
imul
push
add
test
addr16
mov
add
movl
ror
or
dec
lods
leave
inc
movsb
cmp
mov
test
not
imul
fcmovnbe
pop
in
stos
mov
pshufw
out
mov
popf
and
inc
repz
jp
lods
adc
sbb
inc
sbb
mov
stos
adc
jbe
repz
push
mov
jae
jp
sbb
jle
cs
jecxz
fidivl
call
popf
sub
shlb
into
add
jae
push
mov
dec
push
std
jp
pop
ljmp
es
jns
push
xor
les
jne
ds
hlt
jle
ds
js
out
pusha
outsb
pushl
xchg
aam
std
mov
fdivs
pop
scas
dec
lods
cmp
mov
add
inc
push
sbbb
call
mov
cwtl
xchg
adc
mov
stos
add
xchg
fcmovbe
push
add
dec
mov
cltd
ret
mov
cltd
fmulp
and
mov
mov
mov
loop
and
mov
ss
push
sub
push
lds
loop
push
sub
jno
add
sar
push
push
aaa
adc
lds
mov
sub
adc
aam
fbld
push
adc
jl
pop
clc
xchg
pop
or
into
pop
push
pop
addr16
sub
push
gs
lods
test
lret
mov
lret
pushf
push
lock
ret
xor
sub
mov
sub
or
loopne
in
xorb
or
ja
popa
sub
jnp
sbb
and
sti
sub
ds
std
push
pop
iret
mov
cltd
icebp
in
push
push
mov
inc
add
imul
jae
pop
cmpsb
ja
mov
adc
ret
int
rol
and
icebp
or
pushf
mov
lods
fwait
sbb
sti
imul
ds
rolb
pop
jle
sti
push
jle
push
ret
pop
jmp
sbb
and
sbb
ret
scas
out
and
aas
dec
jne
sarb
in
stos
cmp
shrb
sbb
loop
in
add
loope
mov
jmp
ret
push
test
jno
loope
int3
jns
cmp
cmp
mov
pusha
xchg
cwtl
pop
in
dec
mov
shl
cs
cmp
add
dec
in
cmp
push
dec
lods
jb
test
test
pop
int3
nop
adc
xor
addr16
pop
add
das
icebp
xor
cli
popf
out
mov
loopne
lea
inc
push
pop
sub
push
sub
cs
add
pop
stos
jmp
test
pop
in
out
mov
or
sti
mov
into
cmp
hlt
sbb
ljmp
xchg
gs
jl
stc
xor
mov
xlat
xchg
test
sbb
faddl
jae
std
out
cmpl
and
ret
jns
testb
push
int
pop
push
pop
push
les
orl
lcall
in
add
mov
jmp
int
xor
xchg
es
clc
in
jo
lahf
test
aaa
negb
bnd
dec
adc
push
xchg
test
push
inc
test
xchg
adc
sbb
sub
jno
mov
push
pusha
xchg
cmp
dec
ss
movsb
or
mov
push
pop
and
pusha
sub
insl
loop
adcl
jo
adc
mov
hlt
add
cmp
mov
sbb
std
enter
add
fcmovu
and
sub
inc
inc
adc
mov
rcr
xchg
mov
xchg
pop
ret
xor
dec
adc
xor
incb
fdivl
dec
xchg
push
xchg
pop
in
leave
lods
lcall
jecxz
sbb
mov
xchg
out
sub
fdivl
jnp
dec
cli
cmpsl
out
lret
jns
jns
dec
or
mov
popa
mov
pop
out
lock
sbb
nop
mov
pop
cmp
push
add
add
leave
add
and
dec
out
loop
inc
in
js
xor
or
je
enter
xor
in
pop
jl
int
or
into
jbe
gs
fildl
push
cmp
push
pop
jmp
push
jmp
roll
jecxz
dec
loope
inc
mov
xchg
jb
roll
aas
push
sbb
mov
cmp
fs
mov
pop
and
inc
add
icebp
xchg
and
outsl
mov
push
hlt
jp
jbe
je
add
insb
adc
dec
sub
aad
cli
dec
adc
mov
cmp
lods
into
outsb
stos
shrb
lock
add
sbb
mov
repz
shlb
xor
xchg
bound
add
inc
aad
div
mov
lahf
mov
inc
lods
pop
out
mov
adc
jg
push
push
out
lret
push
jg
movsb
lods
fcoml
in
cld
mov
and
and
inc
imul
mov
test
loope
inc
cmc
dec
dec
xor
test
cmp
std
loopne
xor
cmp
cmpsb
mov
rorb
xchg
repz
push
in
xchg
data16
data16
test
pop
cmp
jo
dec
push
jp
jne
inc
das
sahf
jg
sub
add
pop
xchg
arpl
fistpll
pop
enter
jmp
das
push
push
popf
je
movsb
mull
push
mov
sub
out
xor
cmp
jnp
lea
je
dec
out
stos
push
out
imul
adc
cwtl
sub
jmp
rcl
mov
push
jge
sub
jmp
adcb
push
xchg
sbb
lret
lods
and
dec
mov
mov
push
out
fwait
mov
je
xchg
in
lods
test
and
mov
fsubrl
pushf
sbb
dec
mov
mov
popf
xchg
enter
pop
jecxz
nop
mov
jmp
ret
imul
lds
lcall
jmp
add
inc
mov
mov
add
and
mov
faddp
xlat
pop
std
sub
xlat
lret
lret
hlt
iret
adc
push
dec
cmp
je
adc
mov
femms
mov
mov
rorl
ret
xorl
jbe
dec
push
shrl
inc
mov
test
shrb
push
inc
mov
jo
sub
adc
fidivl
sub
jo
push
ja
xor
mov
shrb
int3
js
inc
scas
sti
push
fnstenv
inc
add
add
mov
jb
cmp
inc
into
mov
adc
ja
arpl
inc
rolb
inc
cli
adc
mov
lgs
mov
and
int3
push
decb
adc
mov
pop
imul
arpl
test
mov
out
push
icebp
or
push
fld
mov
mov
lds
xor
push
in
push
shr
in
push
jne
adc
fildll
sub
xchg
je
test
xor
loopne
jae
dec
fmuls
sbb
sbb
iret
sbbb
aas
jnp
add
cmp
cmp
cmp
aad
fiaddl
pop
mov
jbe
out
fstps
sbb
jge
js
aas
push
lret
push
in
xchg
cmpsl
addl
push
stos
rolb
mov
push
js
jg
notb
adc
ret
dec
lcall
ja
imul
mov
pusha
inc
mov
dec
xlat
fstpl
lods
and
xchg
stc
repnz
sbb
adc
inc
fiaddl
xor
scas
dec
ret
stos
cs
test
pusha
mov
inc
idivl
insb
and
in
enter
jmp
jne
adc
ljmp
js
cld
xchg
pmullw
aas
in
cld
jle
fs
xor
push
repnz
ja
pop
mov
and
mov
imul
jno
testl
pushf
jae
sub
aas
inc
pop
sub
imul
hlt
jo
stos
xchg
aas
push
pusha
andl
clc
mov
pop
ljmp
les
xchg
dec
js
lahf
loop
xor
cmp
lock
xor
jg
fcomi
adc
inc
mov
das
adc
cld
push
fwait
cmp
cmp
pusha
mov
pop
mov
scas
lret
sub
cmp
mov
xchg
xchg
imul
xor
jbe
push
int3
sub
and
mov
mov
in
scas
movsb
xchg
xor
test
in
in
lahf
mov
sub
data16
lret
and
in
mov
mov
pusha
xchg
adcl
sarl
jp
repnz
fists
cmpsl
mov
adc
sub
repz
xchg
mov
in
xchg
ja
adc
push
xchg
rcll
cs
mov
pop
adc
jge
mov
dec
fistps
cmp
jno
jmp
test
jo
jmp
leave
and
mov
sbbl
movsb
cli
sbb
pop
or
inc
xorb
in
cmp
sbb
rolb
jbe
out
xchg
imul
leave
sbb
xor
fmuls
mov
js
test
or
fcomi
jmp
cwtl
jo
sarb
mov
xor
fildll
pop
sub
jecxz
xchg
mov
mov
jno
ficomps
daa
push
std
add
in
add
rorl
and
jp
jge
jmp
xchg
clc
repz
pop
mov
sbb
lcall
sar
jle
adc
mov
repz
stos
mov
cmc
pop
sbb
sbb
lods
cs
cmp
jb
out
imul
test
pop
lock
fcmovbe
sbb
pop
mov
xchg
and
imul
xchg
xor
xor
into
lea
adc
fidivrl
les
outsl
gs
subl
push
cli
push
sbb
shrl
xor
sahf
sbb
divb
mov
daa
ret
stc
aad
inc
adc
mov
addb
mov
lods
sbb
fisttpll
dec
out
imul
test
jae
push
pop
lea
jno
imul
cmpsb
out
jae
mov
jg
jp
mov
in
stos
lock
pop
and
pop
imul
in
cmpsb
pop
inc
ljmp
addl
rclb
imul
and
shr
stos
xchg
int3
pop
hlt
jns
stos
out
das
les
mov
aaa
scas
in
pop
dec
jbe
clc
adc
xor
cmc
cs
jbe
xor
mov
cmp
sub
adc
xlat
cmp
add
dec
rolb
lcall
jmp
movsl
and
and
push
ljmp
sbb
push
sbb
pop
sti
jg
scas
and
je
jno
lods
dec
mov
icebp
dec
xor
mov
jo
adc
cmp
pop
mov
lock
pop
in
je
in
icebp
inc
aam
pop
mov
mov
nop
std
mov
test
loop
xchg
icebp
inc
std
stos
cmp
adc
dec
sbb
cs
rorl
push
fwait
and
push
cmpsb
sbb
xchg
mov
sub
cli
xchg
push
add
xchg
neg
mov
cld
fstp
mov
push
xor
fcmovnbe
out
cmpsb
out
fnsave
xchg
dec
out
push
push
xchg
fmull
mov
jmp
fistps
stos
ret
lcall
adc
std
lret
cmp
jmp
daa
mov
pop
je
das
sub
sbb
sbb
test
xchg
das
sbb
inc
mov
add
mov
xchg
bound
mov
orl
insl
cli
pop
sub
mov
mov
pop
mov
mov
mov
pop
adc
jnp
loop
xor
testl
mov
dec
push
das
dec
pop
mov
into
push
jle
xchg
addl
adc
dec
jecxz
insb
mov
mov
mov
jl
cltd
sub
in
mov
lcall
in
cmc
pop
inc
rolb
out
lret
es
inc
jp
jnp
fs
mov
lds
repz
xor
test
mov
and
in
cmp
incb
inc
stos
mov
xor
mov
insb
imul
mov
and
pop
lea
pop
into
fsubs
xchg
jmp
rclb
lea
loopne
push
out
sahf
mov
fwait
je
inc
rcll
mov
int3
cmp
pop
mov
sub
mov
and
and
test
testl
push
dec
pop
fsub
imul
lret
dec
sub
fwait
aas
pop
push
xchg
lea
jns
inc
mov
inc
pushf
xor
pusha
aaa
cmpsb
xor
sarl
rolb
scas
sub
xor
and
dec
and
xlat
xchg
fisubrl
out
stc
hlt
xor
mov
dec
xor
in
and
gs
mov
std
xorb
xchg
cli
rolb
add
popa
mov
pop
shlb
adc
clc
insb
mov
lret
sbb
xor
daa
in
int3
daa
mov
shll
ljmp
mov
ds
mov
js
mov
into
sarl
shll
mov
dec
aaa
cmpsl
adc
daa
loope
aad
repnz
fsubl
add
adc
pusha
mov
cltd
stos
cmp
cmp
ret
jne
je
outsb
fnsave
fwait
cs
gs
sarl
outsb
mov
jbe
ret
iret
pop
and
inc
jb
add
scas
js
adc
mov
dec
sub
in
dec
mov
cmc
push
ds
lods
nop
inc
fwait
jnp
je
pop
mov
mov
fs
xchg
jo,pn
push
ret
pop
sub
ror
add
je
inc
inc
cli
dec
ja
inc
cmp
jge
cld
cld
jo
pop
xchg
popf
scas
faddl
push
mov
mov
imul
push
fsubl
mov
pop
bound
gs
dec
icebp
cmp
bound
repz
xchg
test
xchg
jle
mov
or
pop
jbe
shlb
js
dec
ret
push
mov
jae
insb
ja
je
fs
fwait
loop
adc
aad
pusha
add
add
jmp
jecxz
xchg
cmp
push
shrb
sbb
es
sti
sbb
inc
and
jb
movsl
sub
pop
lods
scas
and
cld
dec
mov
push
sub
popf
mov
dec
and
in
cmp
rcll
mov
xchg
arpl
or
out
add
jnp
add
push
sbb
aad
sub
popa
dec
fwait
adc
sub
in
dec
xchg
or
ret
scas
mov
cltd
xlat
adc
dec
fisubl
popf
xchg
sbbb
mov
pop
fstps
jae
mov
jmp
jo
adc
jecxz
mov
sbb
xor
and
mov
jg
pop
pop
inc
xor
scas
rorb
cmpsl
in
mov
sub
xchg
cmc
dec
in
and
mov
xor
mov
cmp
mov
gs
mov
in
lret
subl
mov
sub
sub
jno
cmp
out
out
std
lods
loope
cmp
inc
push
dec
lret
and
dec
mov
xchg
dec
gs
and
push
ja
sub
ret
adcb
repnz
jns
lods
jl
jg
xor
iret
imul
adc
and
inc
mov
lods
jmp
sub
inc
orb
cmpsl
or
push
push
jle
adc
repnz
push
imul
sbb
int
dec
test
or
gs
ljmp
sub
je
sub
rorl
fildl
hlt
cmp
push
cld
dec
mov
xlat
fisubl
imul
push
hlt
std
test
rcrb
ret
dec
xchg
adc
inc
or
pushf
mov
mov
test
mov
aam
add
cli
loop
mulb
pop
cmp
bound
aad
std
push
add
rorl
sbb
inc
mov
cmp
cmpsl
push
gs
frstor
adc
int
dec
pop
hlt
sbb
popf
test
and
jl
xor
loop
xchg
movsb
loope
out
jp
and
rolb
std
inc
fsubs
ret
nop
pop
add
push
scas
sar
and
jl
out
lea
mov
in
dec
lret
test
test
fnstcw
stc
fldenv
add
mov
or
pop
and
cs
pop
adc
pusha
xor
or
dec
orl
adc
cmpsl
insl
jo
adc
stos
rol
or
arpl
adc
aaa
int
add
jb
fwait
jmp
in
mov
mov
dec
cs
addr16
fisubl
dec
jnp
aam
jp
xor
or
sbb
rcr
jg
or
lock
dec
cltd
nop
mov
jb
jno
pop
fnsave
sub
mov
mov
dec
insb
or
add
rorb
push
inc
xlat
test
dec
cmp
dec
pop
push
xchg
inc
dec
aam
ljmp
xchg
mov
adc
aad
pop
lret
mov
and
xchg
jl
cmp
insl
ljmp
mov
addr16
lret
push
in
xorl
xchg
stc
xchg
mov
insb
stos
and
mov
push
enter
sbb
pop
xor
and
and
sbb
cmpsl
out
inc
icebp
hlt
xchg
ljmp
xor
inc
jo
rorb
daa
mov
add
mov
ret
or
cmpsb
idivb
movsb
cmp
push
popa
xchg
fmull
pop
mov
aas
jle
push
and
loope
mov
inc
sub
sbb
sahf
lret
ljmp
or
adc
xchg
mov
jge
add
mov
out
jbe
mov
popa
push
dec
jb
leave
imul
nop
and
out
outsb
jb
test
lahf
or
mov
push
aam
xlat
lea
mov
shll
dec
pop
sub
mov
push
lock
fucomp
cmp
mov
pop
xchg
dec
xchg
sub
imul
test
lret
push
or
in
test
mov
scas
push
imul
lods
cmp
mov
fwait
mov
pop
outsl
das
jno
fidivl
rolb
les
jnp
mov
loope
bound
ss
repz
lret
lds
shl
sub
insl
inc
xlat
add
lods
pushf
push
cmp
mov
cmp
cmpsb
adc
and
inc
fstpl
dec
icebp
pop
xlat
pop
aam
add
or
pop
lods
into
xchg
outsl
xor
je
jns
push
imul
xchg
scas
fnstsw
jmp
cltd
sub
loop
push
leave
ret
out
ds
in
fistl
mov
add
int
popf
sar
or
cmp
xor
jl
mov
pop
faddp
and
lcall
sub
push
sub
lret
and
aas
cwtl
sbb
fwait
jmp
out
mul
andl
mov
ror
ljmp
aaa
test
cmp
xor
flds
loope
push
dec
sub
subb
add
ret
dec
mov
mov
pop
sbb
rcll
cmpsl
lcall
movq
mov
mov
testl
mov
test
orb
clc
sub
out
adc
je
cwtl
cmp
insb
jl
pusha
orb
lret
pop
test
pop
adc
jmp
dec
and
sahf
insl
in
in
push
les
cs
mov
jno
ljmp
cli
add
xor
sbbb
enter
sti
push
jb
fwait
jns
pop
pop
js
add
pop
mov
mov
dec
int3
xchg
test
pop
jnp
add
mov
xchg
or
mov
orl
mov
jecxz
push
cltd
lock
mov
outsl
sub
lods
roll
or
mov
adc
fcomps
inc
adc
xchg
or
sub
bound
push
sarb
fsubrs
pop
mov
pop
mov
scas
inc
lcall
jns
jnp
sub
lret
add
in
lcall
sbb
and
in
cmpsl
xchg
insb
sub
jne
push
adc
stos
ja
jae
jnp
jno
ds
lds
and
nop
mov
in
push
orb
mov
loope
adc
add
ror
add
mov
sub
add
jp
xchg
cmp
inc
fsubrl
loop
xor
loopne
or
jmp
test
test
addl
in
mov
fabs
orl
pop
push
test
sub
push
mov
push
lock
push
ret
jp
inc
lds
and
sub
xor
push
stos
stos
add
leave
xchg
cmc
jns
mov
sbb
and
jmp
mov
outsl
push
test
ret
pop
and
dec
data16
in
mov
ss
and
sub
popf
pop
mov
lret
or
insl
cmp
bound
imul
xchg
adc
int3
add
std
push
adcl
int
add
lock
xor
and
and
xlat
loope
xor
arpl
dec
and
and
int3
adc
lds
sub
and
mov
push
mov
outsb
adc
inc
pop
mov
dec
addr16
std
adc
lret
sub
test
jo
stos
add
xlat
adc
mov
jmp
jmp
popf
jle
inc
jae
out
sub
shrb
mov
iret
stc
mov
frstor
adc
into
std
pop
xor
lock
and
fisubrs
cmc
hlt
xchg
cmpsl
push
icebp
movsb
pop
add
out
cmp
mov
sti
stos
push
adc
test
push
push
scas
xchg
stos
fiaddl
dec
shr
js
pop
aaa
int
pop
mov
ljmp
repnz
push
dec
cltd
and
mov
xchg
clc
addr16
cmp
xlat
lods
xchg
adc
mov
sub
push
fsubl
insb
and
icebp
fld
or
jl
mov
into
test
sbb
arpl
pop
pop
out
xorl
dec
cmp
sarb
cld
jg
jne
mov
pop
arpl
dec
xchg
pop
andb
lret
or
ljmp
imul
xchg
fistpll
out
dec
xor
jecxz
stos
ss
or
fs
inc
gs
push
es
push
push
push
loope,pn
arpl
xchg
and
lcall
pop
ljmp
bound
xchg
pop
or
fucomip
mov
sahf
rcl
punpckhbw
xchg
mov
js
jns
fs
cmp
fs
push
jge
mov
sbb
mov
xor
xchg
shl
cwtl
ret
ret
push
fistpll
adc
dec
dec
sub
call
test
inc
imul
shrb
out
fists
pop
adc
ds
jecxz
xchg
test
inc
adc
pop
sub
pushf
and
outsl
je
mov
aam
sbb
pop
enter
movsl
sub
fisttps
cmp
xor
mov
inc
adc
cmp
pop
push
and
pmullw
dec
cmpsl
cmpsl
lock
cmpsb
add
pop
int
out
mov
insb
dec
mov
popf
mov
dec
js
cmp
xor
sahf
cmp
or
popf
imul
cmpsl
cmpsl
loopne
or
xor
and
ss
pusha
mov
push
repnz
adcb
insl
adc
iret
and
hlt
pop
loope
lret
es
fcoms
sbb
addr16
leave
iret
push
mov
lods
cmp
int
cld
mov
pop
add
pop
enter
jnp
cs
in
cs
sbb
xlat
arpl
int3
mov
mov
xchg
pop
neg
push
pop
bound
cmpsb
add
scas
jne
dec
lcall
push
sbb
dec
inc
cs
sbb
jp
mov
clc
xchg
dec
mov
shrb
sub
push
andl
fwait
scas
cmp
andps
mov
insb
adc
jl
insl
stos
adc
jb
mov
cmp
mov
mov
shl
scas
cmp
and
add
or
ja
mov
push
jge
faddl
outsb
sahf
inc
sub
mov
mov
jbe
fcomip
stc
movl
xor
stc
repnz
sub
insl
xor
xor
jl,pt
mov
sbb
adc
mov
sahf
add
lahf
cmc
push
xchg
push
mov
xlat
pop
push
adc
pop
iret
push
mov
mov
mov
mov
mov
mov
sub
cmp
xor
lcall
sbb
pop
jecxz
pop
xchg
ja
or
dec
push
xchg
dec
push
repz
in
in
imul
xchg
mov
decb
add
jp
push
mov
dec
in
dec
cmp
mov
jle
add
fcomi
mov
adc
add
fistps
and
dec
imul
test
bound
or
imul
mov
sbb
sbb
adc
cli
data16
lcall
lahf
lahf
mov
andb
enter
push
ss
jnp
xlat
jnp
test
sbb
bnd
notl
xor
inc
add
mov
jno
aaa
and
cs
out
sbb
mov
rorb
mov
push
cmpb
std
cmp
cwtl
jno
aaa
out
cmp
out
xor
pop
je
dec
pop
mov
in
jbe
pop
or
dec
sub
pop
pusha
cld
jle
gs
dec
mov
insb
cwtl
paddb
ja
out
push
add
mov
sbb
or
xchg
dec
in
cld
rcrl
pop
push
sbb
sbb
or
xor
fisttpl
dec
daa
cs
bound
pop
pop
ret
les
mov
stc
push
sub
push
ret
xchg
xor
scas
xchg
stos
ret
js
popa
clc
dec
dec
jns
mov
sub
test
xchg
sub
nop
mov
mov
stc
push
inc
fucomi
negb
jb
pop
test
movsb
lds
sbb
ljmp
or
or
adc
out
mov
fisubs
inc
mov
jns
imul
mov
adc
xor
sbb
mov
daa
andb
pop
xchg
pusha
ss
push
jl
xorb
mov
mov
ret
rorl
mov
dec
pop
cmpsb
xor
imul
fdivrl
dec
jns
fdivr
lret
stc
sub
in
jbe
mov
test
push
pushf
inc
jl
and
hlt
xchg
push
inc
fildl
loop
inc
ljmp
fsub
dec
pop
in
sub
rorb
stc
aad
xchg
pop
dec
add
jb
ljmp
inc
add
mov
jl
sbb
pop
lock
scas
xchg
sbb
xor
popl
dec
push
loope
sub
sarl
mov
xor
mov
cld
cmp
fmul
imul
pusha
stc
fidivrl
mov
pop
movsl
jbe
ret
out
jecxz
pop
lods
mov
stos
jmp
sti
dec
sbb
insb
lea
inc
dec
mov
adc
xor
sti
pop
jecxz
mov
clc
xor
lret
sbb
test
mov
icebp
ljmp
push
jmp
mov
movsb
dec
mov
xor
mov
push
in
mulb
pop
cmp
in
roll
ljmp
repz
lcall
and
adc
in
filds
outsl
dec
add
inc
scas
cld
repnz
icebp
dec
fcompl
dec
jecxz
ret
scas
add
cld
mov
mov
fwait
icebp
mov
clc
movsb
mov
push
or
mov
in
xor
movsl
mov
mov
imul
shrl
push
xchg
dec
add
mov
inc
sarb
lods
jnp
push
out
outsb
cld
jecxz
test
mov
xlat
sarb
dec
xchg
cmpsl
jno
xorb
adc
mov
pop
imul
jl
cmp
cmpsl
lcall
push
nop
leave
adc
mov
and
js
cwtl
cli
mov
add
inc
lret
scas
inc
out
out
push
out
ret
loopne
xor
inc
mov
iret
xchg
mov
ljmp
xchg
sbb
pop
ret
cmpsb
push
and
xchg
outsl
das
mov
adc
and
aaa
aad
xor
mov
gs
stos
ret
aad
pop
cmpsb
xchg
arpl
test
bsf
dec
jbe
mov
jnp
into
int3
stos
dec
pop
stos
pop
sbb
les
hlt
cltd
lods
xlat
sbb
jl
pop
pop
mov
push
arpl
in
push
stc
push
popf
sub
enter
and
jae
or
ficomps
test
sarb
mov
and
cwtl
out
in
sarb
or
rorl
ds
push
ret
fildl
push
mov
adc
scas
jge
mov
fs
jecxz
movsb
bound
rcrb
scas
xor
xor
lcall
int
je
pop
stos
cltd
out
shlb
enter
jo
test
jmp
loop
cmp
outsb
sub
fwait
iret
pop
dec
leave
stos
adc
or
jo
insb
xchg
sbb
add
sub
call
jo
xchg
out
into
outsb
or
enter
mov
pop
xor
adc
jge
popf
or
or
shrb
hlt
push
in
sbb
shrb
test
jge
mov
and
cmp
repnz
ja
sti
popl
les
and
loope
insl
lret
push
test
sbb
popf
sbb
or
and
and
pop
outsb
xorl
int
xchg
shrl
pushf
invd
cli
dec
repz
outsl
or
jo
push
out
movsl
dec
cmp
dec
add
sbb
jecxz
ret
mov
xor
mov
shlb
add
cmp
sub
data16
adc
pop
fstps
int3
push
or
call
shlb
dec
ret
xor
lcall
cmpsl
sub
lcall
es
push
push
xchg
sub
ljmp
pop
jge
dec
dec
mov
lret
xor
daa
adc
cmpsl
inc
scas
mov
test
gs
dec
insl
adc
lcall
loopne
xor
lret
sub
xchg
lcall
pop
fadd
aam
xor
icebp
test
outsb
jg
ja
lods
bound
add
in
inc
test
orl
divb
adc
mov
call
xchg
lcall
pop
push
pop
lods
xchg
push
pcmpgtd
jle
dec
mov
xchg
popf
setae
push
inc
inc
dec
add
xor
mov
scas
xchg
ret
pop
xor
out
adc
cmp
mov
mov
mov
add
cmpsl
pusha
and
lahf
ljmp
and
fnstsw
leave
test
and
pop
mulb
imul
das
cmp
cmp
outsl
pop
mov
jg
dec
int
js
xor
mov
jecxz
inc
fisttpll
incl
inc
and
rcrl
jb
jge
xor
outsl
or
push
jbe
xchg
pop
fadd
inc
and
cmp
popf
sbb
dec
stos
sbb
dec
jle
loopne
dec
jp
int
mov
adc
push
popf
leave
sbb
pop
iret
sar
aad
lea
jno
addr16
pop
orb
cmp
sub
inc
sbb
jge
xor
cmp
fbld
ret
stos
xchg
scas
pop
inc
xchg
cltd
lea
pusha
xchg
iret
rorl
sub
pop
adc
int
repnz
adc
inc
lret
sti
dec
out
inc
jle
aaa
cltd
shl
cmp
dec
fidivs
pop
pop
adc
xorl
xchg
push
mov
fsubr
loopne
stos
lea
in
fwait
inc
sub
xchg
push
push
jae
movsb
jge
leave
es
in
in
aam
add
shrl
jne
pop
jle
pusha
mov
inc
mov
cli
imul
lock
loope
mov
fwait
or
sbb
nop
bound
pop
dec
sub
or
data16
lods
push
sbb
int
xchg
xchg
lea
mov
sarl
call
int
sbbb
stos
test
xor
inc
lods
daa
inc
pop
mov
mov
push
push
mov
mov
xchg
or
sub
divb
stc
jp
decb
mov
enter
je
or
mov
xchg
jmp
sti
aaa
add
lret
fcompl
jno
push
xor
mov
aaa
mov
nop
push
outsl
mov
scas
jae
out
pop
mov
cmp
imul
sbb
in
sbb
inc
shr
fnstenv
aam
cmp
push
pop
test
lcall
dec
addr16
inc
cs
test
mov
mov
cmp
mov
les
cmp
jnp
jmp
js
scas
push
int3
mov
movl
jae
mov
outsl
push
lea
push
fwait
xchg
jo
fstps
gs
mov
and
imul
subl
or
lods
mov
jne
pop
jmp
push
xchg
fmul
mov
jmp
lcall
xor
push
pop
mov
lock
pop
lea
popf
sub
lcall
je
mov
xchg
and
movsb
idivl
inc
nop
loopne
dec
lret
loopne
xor
xbegin
xchg
push
in
mov
les
test
and
mov
shr
pop
xchg
inc
push
jb
stc
xor
out
addr16
in
mov
xlat
or
insl
mov
test
jae
movsl
xchg
push
dec
sti
sub
push
inc
mov
jno
in
push
push
adc
cmpsl
mov
xor
jbe
adc
push
jmp
and
lods
addr16
cwtl
dec
into
sub
mov
xchg
jecxz
push
bound
gs
and
xor
hlt
fwait
mov
addl
adc
cli
xchg
xchg
mov
sbb
pop
pop
repnz
roll
sub
scas
mov
cltd
jg
mov
lret
test
jns
movsb
pop
xor
pop
add
scas
hlt
repz
or
sbb
sub
mov
dec
cmpsl
push
arpl
jno
mov
dec
pushf
mov
sub
adc
js
xchg
clc
in
jmp
xor
xor
hlt
psubq
sti
cmp
out
jmp
out
cwtl
inc
push
pop
or
icebp
add
stos
imul
fidivrs
fwait
xchg
dec
dec
lret
jle
mov
fxch
dec
lcall
repz
jmp
jp
xchg
fwait
ss
movsl
inc
pop
pop
dec
pusha
dec
popa
jmp
das
xor
fsubrl
mov
or
lods
xor
mov
adc
jl
pusha
arpl
push
cld
xorb
cmp
dec
xchg
sbb
jmp
aas
cmp
pop
cmc
jecxz
add
das
jge
sbb
out
sbb
pop
push
prefetch
fmuls
clc
and
fisubs
push
pop
test
jnp
push
into
movsl
scas
repz
adc
mov
pop
jb
mov
xor
sti
dec
jge
add
and
xchg
popf
mov
mov
outsb
std
push
and
inc
push
pop
enter
pusha
cmp
add
dec
aas
test
ja
jne
mov
mov
dec
adc
stc
dec
mov
pop
or
pushf
daa
sbb
adc
adc
xor
jbe
bound
jns
pop
andl
call
push
cmp
das
test
add
mov
push
repnz
stos
add
pop
and
adc
je
cs
cld
ret
lcall
shr
fwait
int
and
ds
je
popf
cltd
subb
push
mov
push
imul
cmp
or
or
std
cmp
inc
out
inc
pop
mov
lds
shll
lds
pusha
jmp
fsubrs
adc
pop
jmp
pop
dec
adc
ljmp
jns
aam
fadds
mov
mov
les
lods
inc
cmp
rclb
xor
jle
mov
mov
decl
push
dec
rolb
add
mov
das
insl
not
inc
lahf
pop
xor
mov
fld
push
jecxz
dec
test
test
cld
push
push
scas
push
pop
mov
xor
add
pop
xchg
arpl
rcrl
orl
add
pop
ret
xchg
pop
cmp
push
je
js
xor
in
dec
es
sbb
mov
pop
cmp
xchg
leave
inc
pusha
mov
xorb
int
je
aam
pop
xor
sub
les
out
mov
cli
ret
inc
inc
inc
add
mov
in
or
mov
and
cli
loope
in
psubsb
cmpsl
dec
pop
mov
dec
mov
xor
pop
push
inc
jnp
cmpsl
divb
sub
fldenv
aaa
scas
adc
in
xor
in
rol
lock
loopne
adc
pop
test
push
pop
sbb
xor
leave
sbb
push
xor
sub
movsl
cmp
xchg
je
xor
dec
mov
popf
push
mov
jmp
leave
mov
bound
ret
push
es
sbb
sbb
test
xchg
sbb
mov
dec
in
add
xor
dec
pop
and
stos
sarl
out
fisubrs
into
or
inc
xchg
enter
rorb
clc
jl
dec
rclb
lahf
and
in
jg
adcb
lea
jo
mov
lds
mov
enter
enter
aas
jno
or
push
mov
or
imul
rcrb
push
pop
push
sub
and
adc
into
dec
cmpb
lods
rcr
jae
jns
jl
pop
mov
dec
inc
or
test
sti
cmp
adc
fwait
loopne
xor
rcrl
je
mov
cmp
testb
jnp
in
push
aad
adc
pop
sub
jno
fnstcw
or
xor
mov
std
fimuls
mov
gs
cwtl
nop
shl
mov
mov
jne
jae
adc
pushf
add
je
outsl
clc
mov
mov
push
sbb
xor
or
pop
sahf
js
push
mov
dec
mov
mov
sub
inc
cld
fwait
clc
in
shlb
dec
or
adc
repnz
out
lahf
adc
jg
adc
xchg
pop
push
add
lret
lahf
imul
test
rorl
xchg
lock
pop
mov
popf
out
or
stc
insb
dec
rcr
push
xor
nop
call
lods
scas
push
mov
data16
iret
in
mov
mov
enter
ret
iret
sti
dec
in
xor
jmp
mov
push
aad
or
int
inc
push
lret
mov
push
xchg
sbb
jnp
imul
xor
mov
dec
notl
mov
shrb
cmc
clc
stos
mov
fsubrp
pop
insl
xchg
fwait
loopne
aaa
lret
or
lock
shlb
movsb
icebp
lods
pop
sbb
popa
int3
mov
rcll
jne
mov
jb
jmp
in
mov
pop
mov
cld
cmp
xchg
xor
cmpl
mov
or
scas
stos
xor
dec
imul
push
jns
jge
mov
call
jmp
jnp
push
jmp
push
mov
shlb
jecxz
dec
inc
repnz
mov
pop
jmp
scas
scas
jl
mov
punpckhbw
mov
adc
imul
jae
sti
and
inc
loope
and
in
or
mov
shlb
xchg
push
push
push
popa
jnp
push
mov
xchg
mov
addr16
adc
cmp
push
incb
add
mov
imul
mov
sahf
ret
clc
pop
xchg
aaa
inc
sbb
sub
pusha
sub
lret
pop
mov
repz
mov
nop
icebp
push
mov
pushf
inc
test
movsl
mov
pusha
dec
adc
inc
cltd
hlt
jl
jmp
fimull
mov
test
shll
icebp
and
ret
or
add
pop
push
sub
adc
sbb
je
addr16
ljmp
cmp
scas
fsubl
fwait
dec
inc
into
mov
scas
jnp
rclb
xor
in
outsb
pop
xchg
out
adc
push
fidivl
or
push
and
xchg
incb
pop
or
fdivl
popf
xchg
xlat
push
into
or
sarl
test
jo
call
rclb
xor
cwtl
push
adc
and
aad
and
adc
outsb
imul
in
out
pusha
pop
call
sub
dec
push
pop
jp
cmpsb
xchg
xchg
xchg
sbb
push
inc
js
lock
xchg
and
aam
orb
xor
jl
xorl
pop
and
mov
sti
lret
ds
push
clc
adc
xchg
popa
pop
mov
xchg
push
jp
jg
sti
bswap
inc
jbe
mov
and
in
das
lods
dec
sub
imul
pop
fistpl
inc
push
and
test
push
fidivrs
bound
push
sti
push
aaa
xchg
push
push
push
pop
sub
and
dec
mov
and
lcall
sbb
inc
inc
or
push
out
xor
jo
mov
out
xchg
push
int3
fistl
sahf
pop
rclb
push
imul
sbb
insb
or
cmp
arpl
cmpsb
jg
outsb
dec
icebp
repz
inc
sbb
or
push
out
push
in
xor
fstps
and
cltd
sub
pusha
stos
add
andl
cmc
mov
cld
sbb
dec
push
ds
das
pop
enter
xchg
jne
fwait
dec
fdivrl
xchg
xchg
mov
inc
sub
pop
jecxz
xor
and
std
mul
imul
jns
dec
xor
add
stos
push
lret
inc
stc
int
mov
sub
fs
cmc
jb
cmp
mov
ficoms
jno
inc
outsb
jle
mov
lea
inc
fs
jno
sbb
jns
push
fcmovbe
pop
mov
or
scas
jg
inc
xor
xor
push
in
mov
jl
das
clc
repnz
int
jmp
iret
cld
pop
mov
mov
test
xor
mov
and
mov
dec
mov
push
xor
fsub
xchg
cmp
push
in
adc
push
mov
cmc
mov
outsb
xor
aas
cmc
loop
push
leave
sahf
cmp
cmpsb
loop
cmp
cltd
movsb
daa
fwait
repz
lret
xor
jge
cmp
pop
call
xor
pop
ret
sub
ss
sbb
sub
rclb
repz
and
nop
xchg
out
xchg
outsb
jnp
scas
push
in
fidivrs
cmp
fmuls
aam
sbb
push
test
and
rcll
ljmp
inc
push
ljmp
scas
mov
dec
ljmp
movsl
clc
mov
ret
je
mov
xor
inc
sbb
xor
cmp
or
enter
pop
pusha
call
loop
cmp
sbb
xlat
pop
int3
xchg
daa
rcll
mov
movsb
in
cs
ret
xor
shl
jo
sar
insl
dec
aas
cmpb
sbbl
ret
push
scas
scas
gs
inc
jmp
inc
icebp
js
mov
imul
scas
outsb
jmp
into
xor
inc
pop
jle
pop
push
lret
dec
xchg
insb
mov
mov
ja
jb
repnz
aad
ret
outsb
mov
fsub
mov
push
push
jns
or
in
and
pop
lods
mov
sub
add
cmpsb
popa
adc
int
mov
mov
xor
fwait
mov
xchg
hlt
jns
popa
cltd
push
push
mov
movb
adc
dec
movsb
outsb
mov
mov
jbe
pop
pop
subb
cmc
sbb
xchg
lahf
jo
sub
add
fnstenv
pop
rcrl
flds
aad
pusha
jno
xchg
add
mov
sub
data16
mov
mov
ljmp
fdivs
loope
pop
xor
mov
mov
les
into
add
arpl
cmp
ljmp
mov
inc
inc
rcrl
inc
mov
pushl
lods
sub
sub
mov
push
jmp
repnz
stos
add
jns
lahf
jl
loop
bound
pop
dec
call
mov
test
cmp
mov
mov
sbb
stos
xchg
inc
cmpsl
leave
stc
inc
push
sbb
ds
rclb
int
pop
jg
insl
fldenv
ret
in
fldl
mov
cmp
sti
loopne
aaa
pop
jb
pop
or
mulb
in
xorb
xor
in
sub
dec
and
das
cmc
loop
in
xchg
cmpsl
sub
roll
mov
pop
cmp
xchg
ds
stos
ljmp
cmpsb
push
aad
cli
adc
aam
pop
sbb
pop
pushf
orb
mov
in
aad
push
sahf
aaa
push
add
xor
cmp
movsl
shr
int
lods
xchg
test
jge
popf
in
add
rcll
lahf
push
jge
cli
mov
adc
inc
sub
dec
std
xchg
xchg
imul
cmp
or
jp
lahf
jmp
cmc
lcall
or
and
and
sbb
or
lea
jge
int
jmp
pop
jne
mov
jbe
mov
sarb
mov
inc
and
inc
shlb
pop
test
and
sahf
adc
mov
testb
jge
cmp
in
mov
pop
fcmovbe
aam
rolb
mov
sbb
std
sub
xchg
lds
mov
or
mov
xchg
call
jle
mov
push
jno
cmp
fidivl
jo
xor
js
repz
in
das
clc
dec
rsm
and
test
sbb
adc
test
sbb
aam
mov
inc
mov
daa
movsb
dec
or
sbb
sbb
pusha
or
test
out
or
stos
out
xor
jae
mov
cmp
xor
aas
xor
mov
dec
ret
cli
mov
loop
xor
cmovbe
sbb
mov
rclb
jbe
jge
in
aam
sub
lcall
sbb
scas
fimuls
mov
add
mov
lea
icebp
loope
cmp
xor
ror
push
push
or
je
enter
inc
pop
mov
mov
movsl
imul
bound
les
add
stos
or
xlat
adc
out
inc
and
dec
mov
lahf
inc
push
mov
data16
and
mov
movsb
int3
test
sbb
gs
mov
or
xchg
push
cwtl
jnp
out
push
hlt
adc
xchg
add
jbe
leave
cli
jle
dec
stc
and
inc
mov
xchg
adc
adc
jmp
stos
leave
jno
adc
or
insl
add
mov
inc
mov
and
ljmp
xchg
mov
xchg
loopne
mov
mov
cmp
call
mov
sti
mov
mov
mov
fcompl
call
mov
pop
or
or
cs
imul
in
mov
adcb
mov
cmp
cmp
lods
inc
mov
cli
hlt
jmp
shll
movsl
jae
in
jo
cmovle
push
sahf
test
or
imul
gs
addb
cmp
faddl
or
invd
stc
scas
cmpsl
int3
add
jno
mov
repnz
pop
mov
jl
and
daa
imul
jno
push
mov
mov
jge
push
rolb
jp
pop
pop
clc
push
push
clc
scas
sbb
add
mov
jmp
aad
ss
jns
in
push
clc
les
aas
cwtl
sbb
inc
adc
popf
lock
pop
loop
sub
and
jns
pop
push
mov
iret
sub
mov
ds
pop
mov
iret
rcrl
or
or
fsubl
lahf
mov
test
mov
pop
pop
and
push
test
int
jne
and
test
inc
sbb
call
mov
and
arpl
inc
lods
aam
pop
cmp
xchg
adc
lcall
or
push
xor
add
pop
add
iret
pop
shll
sbb
les
stos
inc
mov
inc
dec
mov
xor
daa
decl
rcrl
pop
icebp
pop
pop
ret
xor
cmpsb
xchg
lock
in
mov
shrb
add
cli
mov
inc
jg
ljmp
orb
dec
adc
push
mov
add
push
pushf
fst
mov
and
xor
fidivs
adc
fildl
jg
jmp
or
pop
and
adc
dec
out
mov
dec
dec
jge
push
sbb
je
aad
and
imul
push
outsl
jle
cmp
lcall
sbb
sbb
lods
aad
lret
mov
das
fildll
mull
inc
xor
int
repnz
or
sar
insb
jno
cmovne
ret
fwait
out
icebp
std
das
in
imul
mov
movsb
mov
jp
push
popa
inc
fwait
gs
ret
ret
clc
int
aad
ret
jbe
sbb
pop
mov
jp
scas
aaa
mov
pop
icebp
dec
aaa
mov
mov
mov
push
adc
ret
xchg
adc
pushf
mov
movsb
adc
xor
popa
mov
xor
mov
mov
jmp
ror
in
inc
adc
sub
add
adc
mov
fwait
fwait
xorb
out
inc
sahf
rorb
enter
in
jg
pop
dec
lods
lcall
xchg
xchg
pop
xchg
sahf
aas
mov
jl
add
shl
pusha
out
xor
jp
mov
popf
or
lcall
outsb
subl
lret
mov
aad
aad
loop
fcoms
mov
push
popa
insb
mov
ficomps
inc
imul
add
pop
lcall
sbb
add
sbb
push
jne
int3
push
flds
ret
ljmp
std
pop
pop
imul
or
in
add
sub
xchg
leave
pushf
xchg
add
je
mov
inc
lods
inc
std
sub
pop
dec
inc
insl
loop
movd
cmp
push
and
dec
into
test
jmp
mov
mov
lret
push
shrb
pop
push
push
insb
adc
loopne
dec
sbbb
insb
dec
push
rorb
mov
cltd
int3
push
jo
rclb
push
fstpt
movb
add
sbb
mov
fs
adc
xchg
add
pop
loope
xchg
loop
lods
and
insl
and
pusha
inc
std
or
sahf
into
or
in
adc
notl
bound
xchg
push
pop
ljmp
lret
cwtl
lods
mov
sarb
adc
cli
in
insl
jg
jp
andb
cmp
jmp
push
pop
lock
je
ss
fiaddl
aad
pop
fsubp
call
fwait
xchg
mov
lret
cmp
cmpsb
cmp
leave
push
add
jmp
mov
sub
stc
jmp
lahf
mov
add
mov
orb
scas
cmpsl
divb
test
mov
xchg
ret
shll
jle
adc
loope
loope
je
cmp
mov
mov
inc
pushf
fmull
sub
adc
push
mov
cwtl
or
pop
addl
jns
mov
jmp
loope
mov
inc
outsb
test
leave
cld
mov
sbb
je
xchg
repnz
outsb
jne
jecxz
dec
sti
jg
lds
cmc
push
repnz
test
mov
dec
ret
movb
out
movsb
jle
repnz
cmp
testb
mov
ja
insb
cltd
dec
mov
push
xchg
popa
ficoml
xor
das
mov
das
repnz
loopne
inc
stc
xor
frstor
lds
push
push
mov
rclb
nop
dec
mov
mov
mov
rorl
scas
dec
mov
cmpsl
out
fiaddl
lcall
push
repz
xchg
and
and
es
ja
mov
jle
je
dec
sbb
or
dec
enter
es
and
dec
lret
and
fmuls
sub
add
addr16
push
fwait
adc
adc
xchg
adc
popa
xchg
mov
jmp
std
pop
inc
iret
pop
cli
mov
loop
sbb
mov
data16
int
pop
mov
cld
mov
frstor
cmp
jae
bound
mov
lock
mov
rcrl
mov
mov
inc
aad
aaa
in
sbb
cmp
jb
aaa
and
int3
sbb
mov
out
daa
add
pop
and
out
setge
ja
dec
mov
popa
xchg
xlat
push
in
lods
fisubrl
es
das
insl
dec
int3
xor
sti
mov
mov
jl
jecxz
cli
jmp
es
mov
insl
outsl
sub
lret
inc
mov
mov
loopne
mov
outsl
iret
sbb
into
test
orb
or
in
pop
lret
fcoms
cmp
mov
xlat
jno
jg
push
icebp
outsb
movsb
outsb
imul
inc
inc
clc
lods
imul
add
loopne
rolb
push
xchg
das
add
pop
stos
scas
test
jbe
sbb
inc
lds
popa
push
into
outsl
test
shlb
pushf
mov
sbb
add
call
and
cld
add
jl
inc
je
std
pop
fists
push
jno
rcrl
test
mov
jmp
shll
pop
adc
lcall
cld
fisttpll
ljmp
jl
mov
xchg
inc
imul
shll
xor
push
or
mov
adc
push
imul
xchg
pop
sub
scas
mov
sbb
enter
ss
inc
push
mov
aad
dec
mov
in
mov
xchg
shlb
xor
les
pop
orb
jecxz
mov
test
int
aad
adc
inc
mov
xchg
fiaddl
inc
xchg
paddq
je
push
lret
cmp
loope
shr
les
sbb
jno
sbb
sub
push
sub
mov
addr16
dec
jb
push
dec
test
mov
cmc
push
pusha
dec
or
xor
mov
lds
gs
mov
push
jle
sarl
in
pushf
jmp
icebp
ret
mov
pop
inc
mov
and
nop
sbb
jno
je
or
mov
clc
mov
xor
cmpl
xorl
push
dec
je
sbb
jp
in
lahf
pop
fwait
inc
cmc
rcrl
jge
and
fimuls
test
xor
adc
cmp
pop
loop
cmp
movsb
pop
cs
das
lret
jg
repnz
movsl
test
inc
inc
outsl
subl
add
jecxz
popa
outsb
mov
shr
lods
nop
les
xor
insl
rcll
popa
xchg
mov
stos
dec
iret
xchg
jae
add
adc
in
adc
enter
mov
cmp
mov
and
fdivrs
sbb
mov
pop
ficoms
lock
adc
ret
xlat
les
adc
pusha
jo
or
cmp
popf
in
aaa
cmp
loope
xor
sbb
imul
and
daa
xor
xor
and
sahf
push
mov
inc
push
int3
add
jno
push
ljmp
inc
adc
ret
cmp
or
iret
dec
cmpsb
cld
cmp
sbb
and
and
test
ret
mov
mov
xor
js
sbb
hlt
sahf
or
mov
leave
loope
jg
shl
and
fmull
mov
test
mov
fs
out
aam
fadd
xor
lods
jo
dec
cli
js
negb
rorb
adc
movl
xor
dec
jecxz
es
xlat
repnz
movsb
enter
fidivl
pop
int3
ds
jnp
daa
out
or
lds
fildl
bound
pop
jns
xor
xchg
jl
push
sarb
xor
cwtl
fistps
fimuls
xchg
pop
xor
inc
fsubrs
or
xchg
hlt
mov
setge
pop
mov
xchg
xchg
cld
das
mov
rorb
or
mov
jo
adc
in
jb
adc
sub
movsl
pop
and
mov
push
std
mov
sbb
xchg
mov
ljmp
fstps
mov
mov
cmp
cs
lcall
push
push
sub
cmp
shll
cmp
por
add
sub
jge
push
mov
cmpsl
or
push
aad
in
pop
inc
in
ror
sti
mov
stc
aam
negb
adc
repz
adc
int
pop
xchg
adc
adc
pop
xlat
dec
cmc
mov
cmpsb
ret
inc
scas
pop
push
mov
mov
mov
jg
in
lea
sbb
repz
mov
insl
in
cmp
lret
testb
mov
adc
and
lcall
loope
cltd
add
adc
push
dec
mov
int3
pop
sbb
ds
cmp
subl
aas
mov
mov
imul
inc
fmuls
dec
fldl
xor
xchg
stos
jbe
fstp
shll
pop
cmpb
or
cmp
fnsave
sub
sti
fisttps
je
sub
mov
dec
pushf
mov
fs
rcrb
xor
dec
pop
scas
cmpsl
aaa
cmp
push
xchg
pop
les
xlat
inc
dec
in
test
inc
mov
add
jns
mov
sub
sub
sbb
sub
jb
lock
and
inc
adc
or
or
filds
mov
lcall
cmp
push
js
and
mov
enter
fdivs
and
fistpll
ret
jne
iret
rcr
mov
cmp
mov
pop
jne
xor
lret
mov
dec
or
es
stos
fs
or
mov
outsl
xor
in
push
arpl
push
mov
out
mov
push
xor
cmp
ss
repz
adc
iret
std
daa
aad
jns
or
out
mov
cwtl
fimuls
jns
add
ljmp
shl
ficompl
jbe
mov
mull
repz
ljmp
clc
cmp
aaa
cmpsb
xchg
daa
sti
into
addl
idivb
filds
mov
icebp
mov
repz
int
push
xor
or
xor
sub
scas
push
imul
pop
mov
out
loop
mov
fsubrl
arpl
mov
js
adc
pop
jmp
ret
rcrl
mov
adc
mov
pop
mov
mov
sbb
adc
mov
fptan
or
fiaddl
cmp
jns
int
add
cmp
stc
push
push
sub
in
movsb
divl
mov
mov
idivl
repz
jae
sub
test
mov
es
mov
adc
jmp
and
mov
jno
adc
loop
xchg
inc
lock
sub
xchg
lods
sbb
fs
add
pop
sbb
clc
lret
xor
movsb
add
jne
jp
in
shll
xor
lcall
aaa
in
lahf
xchg
sbb
fisubrl
or
sub
lret
rclb
cltd
mov
sub
sub
dec
push
dec
mov
mov
fdivrl
push
cli
xchg
dec
dec
les
bound
stos
das
xor
shr
sarb
inc
or
xor
mov
pop
jg
xchg
insl
jno
inc
pop
xchg
movsb
sbb
fimull
mov
rcl
daa
xchg
rdtsc
push
mov
ljmp
and
jp
out
outsb
loopne
xor
cmp
jg
frstor
inc
leave
mov
jne
pop
mov
test
push
in
mov
xor
test
aam
dec
ljmp
clc
push
lahf
xchg
jl
out
mov
fxch
lret
inc
jg
mov
cld
fbld
stos
jb
cltd
movsb
in
push
jp
add
mov
nop
movsl
add
lret
test
pop
rclb
das
mov
mov
adc
je
xor
push
inc
push
jmp
cmp
cmc
mov
imul
cmpsl
stos
pop
add
imul
cmpsl
shlb
cmp
xchg
in
subb
dec
adc
add
pop
dec
or
push
inc
jl
loopne
sbb
inc
lcall
mov
jno
push
adc
orl
outsb
or
sbb
lods
adc
cltd
mov
xchg
mov
popa
jmp
sahf
and
popf
sarb
jb
dec
mov
add
in
pop
nop
sar
jae
adc
push
push
dec
jae
popf
mov
jp
xchg
xchg
rolb
sub
outsb
pusha
mov
mov
lahf
push
dec
lods
shl
add
cwtl
mov
leave
cmp
pop
cmp
test
xor
scas
mov
ficoms
ret
jge
fdivl
pop
cmp
in
fs
mov
out
cmpb
and
mov
mov
int
or
in
or
aaa
sbb
test
js
aad
jns
push
dec
pop
jnp
fimull
aam
repnz
mov
and
mov
mov
inc
popa
fiaddl
repnz
aad
mov
int
and
add
lods
popa
gs
lods
loop
jbe
lock
lea
cmpsb
pop
ja
and
inc
mov
xchg
lret
inc
mov
loope
sti
cmpsl
push
sbb
pop
test
sti
fstl
adc
loope
push
lods
out
or
pop
cltd
xchg
out
insb
ret
jbe
xchg
lret
sub
ficoml
push
cmpsl
loope
enter
pop
test
pop
xchg
aam
jo
mov
stos
int3
fdivs
push
adcb
ret
xchg
outsl
dec
dec
and
jl
cmpsb
arpl
inc
mull
xchg
add
jb
fdivl
flds
sub
xchg
gs
int3
jbe
pushf
jo
in
shrb
outsl
add
mov
and
pop
sbb
mov
aam
mov
inc
mov
push
push
push
mov
repnz
add
mov
xor
ss
add
es
sbb
pop
aad
movsl
xchg
or
adc
imul
cmc
add
push
inc
or
and
lcall
cmp
test
stos
jle
bound
or
jno
add
pushf
add
mov
dec
add
jl
sbb
in
jmp
cld
out
mov
shrl
jl
or
adc
xchg
lock
lcall
add
fadd
aaa
out
and
out
rcll
leave
insb
jb
inc
int
clc
dec
inc
gs
mov
fadds
daa
fisubrs
xor
aam
mov
xor
sub
addr16
mov
out
fadd
inc
and
shlb
push
sar
pop
int
iret
push
mov
add
shll
fwait
test
xchg
or
imul
rcr
mov
pop
mov
or
fs
pop
inc
jae
inc
sbb
pop
hlt
mov
sbb
push
jb
pop
aas
or
inc
std
ficoms
mov
test
fnop
out
add
fcompl
xor
pop
push
push
pop
push
sbbb
fs
or
clc
out
sub
jecxz
inc
lock
imul
xor
inc
into
sub
push
out
mov
push
add
dec
loop
sti
cli
mov
adc
pop
es
subb
xchg
pop
lods
jns
repz
popf
lods
or
add
mov
sbb
outsl
adc
loopne
mov
scas
clc
sbb
stos
push
mov
lret
cltd
std
loop
pop
pop
imul
pop
negb
stos
push
nop
cmp
mov
pop
pop
mov
pop
sti
push
imul
xor
pop
cmp
insb
or
out
fisubrs
jnp
jb
pop
cmp
int3
dec
cmp
mov
jae
dec
data16
push
adc
xchg
mov
addb
nop
aad
sub
rcrl
push
xlat
divl
stos
leave
inc
dec
inc
lods
cmc
jo
and
jg
sub
es
mov
ljmp
int
pop
movsb
push
bound
push
push
jo
push
lods
cmpsl
repnz
sbb
pop
imul
test
push
sbb
addr16
jnp
ret
cwtl
clc
sbb
xchg
stos
xor
or
lret
and
push
xchg
mov
mov
popa
fsqrt
mov
xor
pop
mov
lret
ljmp
mov
out
int3
pop
pop
mov
adc
lods
xchg
int3
xchg
sbbb
iret
je
cmp
shl
scas
add
sarb
add
inc
scas
cltd
or
mov
clc
popa
movsb
inc
jmp
fdivs
fidivrl
pop
sub
adc
loope
dec
cmp
sub
cmp
sarl
jg
and
popf
mov
arpl
push
xor
sbb
adc
push
leave
and
xor
movsb
arpl
pop
cld
push
inc
enter
or
insb
add
negb
outsl
or
mov
jb
pop
data16
inc
dec
mov
aad
cld
test
lahf
inc
xor
mov
mov
cmp
insl
xor
cwtl
rorl
mov
inc
mov
or
pop
cmp
loop
aad
dec
movsb
jmp
mov
sub
push
mov
mov
dec
scas
and
mov
pushf
repz
es
jp
call
test
pop
and
fsubrl
repz
popf
sub
xor
cmp
hlt
sbb
gs
ret
xor
pop
mov
push
or
dec
pop
adc
inc
sub
cmp
sahf
lret
and
fbld
pop
mov
push
stos
jl
sub
sar
jp
inc
xor
or
aas
lahf
insb
addr16
xor
ss
xor
or
mov
jne
or
cwtl
fwait
mov
lret
xor
pop
and
add
bound
icebp
bound
rcl
mov
fadd
or
adc
out
sarb
inc
and
inc
mov
aad
sti
rclb
mov
pop
fwait
pop
mov
rolb
xchg
ljmp
or
mov
iret
into
mov
fstpt
dec
cli
mov
out
pop
cmp
dec
xor
dec
test
xor
xor
sbbb
jnp,pt
sbb
pop
adc
shll
loop
pop
mov
adc
push
test
sqrtps
push
pop
pop
jbe
sbb
mov
add
lret
lock
jle
popl
shll
pop
aaa
into
lcall
negl
push
rcr
dec
pop
es
push
push
xor
cmp
arpl
icebp
push
cs
rcr
pop
sub
jns
xor
decl
loop
pop
push
jmp
les
out
xor
mov
mov
sahf
push
jp
or
es
xchg
inc
dec
test
test
xchg
push
int3
test
mov
adc
add
xchg
jne
sub
sarl
fadds
popa
cltd
or
loop
stos
adc
jnp
sub
sub
cmp
ret
mov
cmc
adc
or
adcb
mov
popa
push
mov
push
and
loopne
leave
data16
out
fdivr
lcall
adc
cmp
adc
cmp
sub
jge
aaa
sbb
push
std
sahf
jecxz
mov
lret
mov
cmpsl
push
fsubrl
shrd
rcr
and
cli
dec
out
test
cli
or
pop
xor
sub
xchg
inc
xchg
mov
dec
mov
imul
sub
hlt
stc
and
jo
std
mov
mov
test
lds
mov
fldcw
mov
add
and
ret
sbb
scas
rclb
idivb
lods
inc
push
lret
int3
out
jmp
inc
cmp
sbb
dec
sub
cmp
enter
iret
lods
les
sbb
fdiv
jecxz
pop
fists
cmp
scas
arpl
xlat
xor
cs
xchg
or
sti
scas
add
xchg
call
push
jo
into
cwtl
xchg
cwtl
out
lea
dec
jp
loop
in
loopne
xor
subl
loop
xor
rcrb
nop
mov
sbb
mov
movsb
adc
or
jle
repnz
lea
mov
xchg
pop
sbb
lods
add
and
cmpsb
stos
adc
jge
pop
fmuls
es
test
es
sbb
aaa
jb
cmpsl
test
out
popf
arpl
movsb
cs
adc
dec
cmpb
jmp
sub
cmpsl
jmp
pop
and
sbb
stos
pusha
fcomps
mov
jg
jl
shlb
mov
cmp
loopne
movsb
dec
mov
fcmove
rcr
popf
pop
fisubl
xchg
fildll
hlt
xchg
xchg
lods
jae
sarb
dec
cmp
fnstenv
push
jnp
inc
xchg
pop
daa
into
push
and
mov
out
ljmp
sarl
call
imul
sbb
scas
jbe
in
push
leave
addr16
xchg
add
nop
mov
fisubl
out
sarl
xchg
dec
setle
push
inc
or
pushf
in
movsb
xchg
sbb
inc
push
cmp
das
push
aam
cmc
and
pop
xchg
lret
push
adc
loopne
adc
dec
add
or
cltd
repnz
fimull
rcr
sub
push
jmp
int
movsb
or
xor
or
jp
pop
sbb
imul
movsl
in
sub
adc
out
je
push
loopew
sbb
xchg
popf
stos
jl
sub
cmp
jmp
scas
mov
popf
cltd
int3
sbb
cmp
mov
mov
icebp
cmp
xor
push
dec
mov
out
lret
sbb
inc
or
jbe
fisttpl
mov
adc
rcrb
sub
les
pusha
lret
cmp
push
and
outsb
sahf
int3
mov
loope
xorb
cld
rorl
xorb
pop
into
rorb
push
sbb
xor
and
js
add
mov
ljmp
mov
fs
das
outsl
sbb
xor
stos
cmpsb
jae
rcrb
fwait
xchg
sahf
test
sti
add
arpl
sti
call
xor
mov
and
sub
lahf
sbb
stos
push
enter
sbbb
add
imul
dec
jge
daa
je
movsl
mov
cmp
ljmp
xchg
mov
lahf
and
jo
adc
xor
and
imul
jp
cs
dec
ds
jno
movl
hlt
adc
cli
imul
out
push
push
ja
push
sub
cld
xchg
int
adc
ds
leave
adc
dec
add
xchg
sub
fdivrp
test
push
faddp
add
imul
inc
jl
std
sahf
push
xchg
imul
scas
jae
rcrb
mov
lock
mov
sbb
mov
jg
ret
push
mov
fcomi
fcmove
gs
inc
test
cmp
cmp
sub
test
lret
scas
in
or
sti
sbb
repz
call
dec
and
mov
jmp
or
push
cmpsb
mov
and
jo
add
lret
jl
adc
pop
jp
outsl
push
sahf
push
mov
popa
js
inc
int3
inc
push
sbb
mov
sub
arpl
cwtl
xor
gs
scas
push
inc
pop
insl
stc
test
int
mov
adc
mov
cmpl
clc
cs
mov
addr16
idivb
ret
jp,pt
sti
je
jbe,pn
les
dec
pop
imul
mov
fstpl
daa
lret
dec
mov
mov
es
jp
xchg
mov
cli
push
adc
jp
mov
sti
push
scas
nop
mov
inc
cmpb
ljmp
adc
adc
cmp
fldl
leave
inc
cmp
push
scas
fs
and
sub
jo
jno
push
arpl
test
mov
rol
sbb
lahf
int
or
push
inc
cmpsl
popf
jae
scas
mov
ja
pop
mov
adc
and
mov
sub
movsl
aaa
movsb
mov
lds
xchg
in
mov
test
in
mov
mov
mov
aaa
mov
loopne
xor
xchg
mov
pushf
inc
xchg
cmp
in
int
xchg
ds
xlat
das
mov
cld
fiadds
mov
loopne
jne
stc
dec
popa
sub
cmp
and
sbb
inc
jne
dec
mov
jns
pop
ffreep
scas
mov
push
mov
sub
jmp
shrb
pop
test
push
inc
pushf
cmp
imul
and
push
mov
orb
and
scas
imull
rclb
scas
movsb
shrb
stos
or
adc
int3
insb
mov
sub
mov
jg
xchg
punpckhdq
dec
cmp
sbb
mov
inc
mov
sub
loop
loop,pn
xor
fcompl
or
scas
adc
or
nop
jg
in
sub
dec
pop
pop
adc
iret
fmul
xchg
enter
jns
gs
cmp
cli
pusha
mov
jne
mov
lret
scas
xchg
add
leave
mov
dec
es
add
and
sub
mov
adc
cmpsb
adc
pop
mov
mov
loopne
or
es
repz
push
aas
pop
jg
sbb
sub
push
mov
cli
push
repnz
mov
aad
lea
cmp
mov
iret
dec
sbb
mov
scas
iret
xor
lret
in
or
and
add
ret
test
jnp
fwait
and
dec
inc
or
dec
pop
xchg
popf
popf
xchg
pusha
out
mov
scas
repz
scas
cmp
ljmp
aam
mov
push
mov
dec
data16
jp
inc
testl
jnp
movsl
pop
dec
xor
loop
pop
cmc
add
dec
cmc
xor
mov
imul
push
lods
loopne
or
out
mov
cmpsb
ror
hlt
repnz
in
jmp
repz
mov
push
mov
xchg
fsubrl
jg
jle
mov
scas
push
jo
fisubl
xchg
lahf
mov
mov
inc
scas
loope
push
xchg
fists
cld
jns
outsl
cwtl
rorl
sti
arpl
jmp
mov
add
clc
out
pop
fdivp
jmp
dec
dec
pop
sub
cmp
insl
lret
lret
add
add
and
jne
call
cmp
scas
loope
pop
dec
jle
sbb
cmp
cmpsl
outsb
sbb
pop
jg
inc
inc
push
aam
xchg
mov
jbe
push
cs
outsl
in
push
and
sarb
dec
std
push
cmpsb
mov
arpl
or
cwtl
in
nop
xchg
sub
pop
xadd
in
shll
dec
mov
mov
xchg
jne
or
dec
pop
inc
dec
outsl
cmpl
push
arpl
xchg
fnstcw
xlat
jle
sub
jp
call
loop
fsubs
sub
fistl
xchg
jle
or
cmc
jae
movsb
pop
adc
leave
fs
hlt
out
stc
nop
ret
dec
adc
push
push
xchg
xchg
f2xm1
gs
jbe
lods
mov
cwtl
mov
imul
outsl
sub
gs
inc
adc
pop
shlb
fwait
or
stc
jnp
testb
scas
or
xchg
cmpsb
and
sbb
sub
lds
outsb
push
sub
add
mov
xchg
sub
dec
inc
loope
fimull
es
xchg
push
jle
dec
ja
mov
jno
popf
sub
sub
sbb
xor
iret
cmpsl
int
ret
dec
pop
jne
insl
aas
je
hlt
inc
std
push
test
into
jecxz
in
mov
cwtl
add
pushf
cmp
dec
pop
fstpl
ds
add
in
out
xor
adc
mov
jl
daa
sar
cltd
add
cmp
inc
mov
sub
cli
adc
sub
fnstcw
xor
mov
fcompl
push
bnd
stos
pop
scas
pop
jo
enter
and
jne
mov
xor
notb
fisubrl
jge
leave
push
mov
push
dec
pop
xor
jne
cld
addl
add
push
pop
xchg
js
nop
adc
and
popf
pop
push
outsl
inc
or
nop
push
xor
dec
ds
rcrb
push
mov
mov
cli
les
jmp
outsl
sbb
mov
xchg
mov
mov
jo
jno
sub
mov
aas
leave
addr16
in
cwtl
mov
push
test
push
xor
cs
popf
pop
inc
cltd
jno
mov
mov
ret
pop
divb
cmpsb
mov
in
loope
mov
jg
ja
sbb
xor
mov
adc
jg
fists
dec
jecxz
gs
daa
dec
dec
adc
xor
push
mov
mov
xchg
jnp
cmpsl
dec
mov
rcrb
sbb
inc
gs
int3
add
mov
jae
testl
inc
sbb
sbb
mov
push
inc
mov
xor
adc
ja
xor
jne
icebp
push
pop
mov
dec
xor
add
push
pushl
pusha
lret
push
popa
fsubrs
xor
jecxz
imull
or
pop
iret
xchg
ret
sbb
icebp
fsubrl
jmp
xor
pop
aam
add
in
mov
fsubs
fbld
adc
jle
add
shll
outsl
push
mov
in
and
xchg
fnstsw
test
pop
cmp
mov
dec
mov
xchg
insb
jnp,pt
imul
int
pop
sbb
lahf
and
test
gs
xchg
cmp
out
add
push
movsl
stos
stos
add
dec
addl
mov
ja
mov
dec
jmp
push
pop
into
jmp
ja
test
and
addr16
or
aam
jle
jbe
out
fwait
jl
pop
shl
fs
lcall
imul
xchg
in
mov
cwtl
je
and
sub
hlt
mov
pop
imul
rcl
jns
outsl
mov
jb
sbb
push
lea
sbb
and
stos
pushf
push
mov
repnz
and
mov
mov
mov
push
je
mov
mov
or
pop
mov
movntps
adc
fnsave
pop
xor
lock
aaa
mov
inc
clc
adc
mov
push
in
or
imul
ljmp
notb
hlt
mov
adc
or
inc
ret
aad
xor
xchg
mov
dec
out
mov
dec
dec
aam
dec
mov
mov
pop
sub
iret
mov
out
mov
stos
add
and
fs
sti
insl
mov
lahf
enter
and
test
ljmp
mov
out
ds
sub
xor
cmp
mov
pop
sbb
aas
lret
pusha
mov
adc
loop
jl
dec
inc
daa
call
jl
dec
in
add
aas
es
pop
les
out
ficoms
in
add
hlt
xchg
lds
push
movsb
jecxz
scas
xorb
insb
xor
test
jnp
enter
add
sub
add
out
jmp
cltd
pop
out
sbb
lcall
adc
pop
les
bound
mov
imulb
sub
jl
sbb
movsl
jnp
push
outsl
sub
imull
out
and
addl
sub
fs
mov
out
daa
push
sub
mov
cmc
ljmp
mov
nop
jno
jge
movsb
inc
xchg
hlt
lcall
idivb
mov
dec
popf
jns
sub
leavew
cli
xchg
add
cmp
xor
cs
mov
pop
xor
fcmovnb
xor
sahf
inc
xchg
test
das
adc
and
fwait
xchg
adc
fs
mov
sub
ret
cs
inc
cmpsb
sbbb
mov
cwtl
inc
inc
in
incl
jmp
jecxz
loopne
inc
out
pop
movsb
or
adc
fidivrs
ds
add
hlt
subl
out
mov
mov
mov
loopne
mov
mov
pop
outsb
insl
adc
rcrl
cmp
add
mov
mov
rolb
xchg
adc
adc
scas
sub
js
cmp
aam
pop
call
adc
lock
movsb
and
dec
mov
mov
out
mov
ja
push
fwait
imul
sbb
xor
movb
mov
xchg
mov
pop
pop
inc
push
cmp
inc
adc
or
adc
sub
rcrb
shll
inc
push
jo
dec
xorl
jns
mov
lahf
jecxz
inc
mov
rcll
xor
add
mov
mov
shll
orl
add
ds
mov
jge
idivl
and
and
decl
mov
jno
lock
ret
iret
dec
das
nop
cmpsb
adc
mov
call
out
xorl
sti
push
xchg
pop
leave
jecxz
push
and
mov
or
or
or
cmpsl
jns
mov
jnp
call
movsb
test
test
loopne
icebp
test
test
mov
and
push
cld
negl
cmpl
scas
imul
xor
and
lds
arpl
inc
mov
test
fcomp
test
pop
adc
scas
cltd
xchg
out
stc
and
mov
push
out
fs
mov
add
pop
faddl
cmpl
push
xchg
add
insb
mov
insl
fisttpll
rol
iret
mov
adc
in
arpl
pop
fs
pushf
sbb
mov
add
mov
into
pushf
xor
pop
jge
xor
ss
mov
lret
sub
enter
fwait
and
pop
xchg
and
imul
lea
sbb
out
jp
pop
cmp
and
jmp
inc
sub
jge
js
cmp
or
stos
mov
stos
lock
les
sub
dec
es
aas
addl
mov
das
push
cmc
sub
pop
shrl
lods
xchg
repz
aaa
mov
sbb
push
push
lea
inc
pop
mov
cmpsb
fcomps
push
movsl
push
xor
xchg
pop
lret
std
leave
jae
xchg
pop
push
adc
xor
data16
sub
testl
mov
push
lods
lcall
lahf
adc
mov
enter
cmp
xchg
adc
pop
in
pop
xor
mov
mov
shll
jg
add
sbb
js
outsl
aam
pushf
dec
insl
xchg
imul
push
pushf
sbb
xor
in
es
out
pop
rclb
pop
mov
xchg
lret
jge
ljmp
sahf
fimull
push
mov
adc
daa
dec
jp
jge
and
xor
testl
sbb
mov
cs
push
insl
inc
xchg
into
add
add
inc
popa
inc
shl
lahf
jnp
rcll
out
push
mov
mov
dec
jno
fidivs
and
inc
mov
shl
xchg
xorl
push
mov
gs
xchg
fmull
in
out
or
shll
into
inc
sbb
cmp
loope
jno
imul
sbb
dec
fdivrl
mov
push
or
popl
sti
scas
mov
add
iret
test
mov
mov
xchg
cmp
in
pop
lea
je
mov
imul
push
cld
scas
test
subb
mov
scas
lock
push
xor
aam
lret
in
inc
mov
dec
nop
add
sub
mov
mov
mov
jp
inc
sbb
adc
xchg
data16
lcall
inc
xchg
sub
shll
lea
movb
aas
jp
in
or
dec
and
iret
xchg
ljmp
mov
fidivrs
cmc
dec
sub
ret
sbb
adc
or
mov
jne
pop
pop
xor
adc
jmp
int3
and
icebp
into
into
jns
mov
xchg
pop
cmp
or
sbb
andl
in
and
adc
xchg
pavgw
jmp
inc
imul
adc
test
sub
sbb
insw
iret
ud0
decb
or
adc
and
mov
cmc
or
inc
push
and
mov
sub
into
mov
mov
rcrb
mov
adc
mov
pop
jnp
jmp
mov
mov
mov
or
inc
mov
sub
push
nop
jmp
mov
add
cld
scas
in
cltd
outsl
fidivrl
pop
sub
and
loop
jmp
xor
scas
mov
es
xor
push
inc
mov
test
dec
xor
outsl
mov
dec
test
and
call
xchg
inc
jno
das
inc
push
xchg
aad
mov
push
inc
pop
jb
and
into
cmpsl
cltd
dec
adc
ljmp
mov
data16
std
dec
mov
adc
sbbl
cltd
push
imul
in
xor
mov
out
insb
or
movsl
jae
mov
stos
push
sub
clc
arpl
in
cltd
cmp
xchg
inc
xchg
enter
push
popf
ficompl
add
xor
pop
sub
fwait
popa
int3
inc
inc
movsb
aad
out
sbb
mov
imul
testb
int
adc
mov
clc
and
prefetch
repnz
sub
test
mov
loope
aaa
test
outsb
int3
out
data16
scas
and
outsl
les
mov
xor
in
das
dec
imul
jge
insl
in
add
cmpsl
mov
dec
adc
lds
mov
mov
xlat
adc
ret
mov
test
in
adc
aad
push
and
xor
loope
scas
pop
js
les
pop
bnd
sbb
shl
cs
mov
fcmovne
pop
mov
jnp
lds
test
xchg
int3
adc
pop
enter
sbb
nop
cmp
pop
das
ss
out
mov
out
rcll
loope
add
mov
push
lcall
inc
hlt
dec
dec
repz
jne
pop
mov
out
sub
rorl
mov
aaa
xchg
jp
lahf
into
icebp
je
jmp
lret
ss
call
cmpsb
jle
call
aas
loop
xor
mov
out
in
fistpl
sbb
clc
adc
in
and
fldenv
gs
xchg
imul
add
cld
insl
or
mov
shl
mov
stos
jle
lcall
sbb
cld
mov
inc
mov
inc
xchg
mov
xchg
add
jmp
out
aad
test
add
cmpsl
mov
mov
test
scas
inc
push
sub
xchg
mov
addr16
add
jae
push
es
jle
mov
js
xlat
add
sbb
movsb
dec
cmpsb
fwait
mov
cltd
push
sub
fmulp
lahf
sahf
inc
sub
stc
mov
repnz
jl
fsubrp
and
int3
push
xchg
inc
adc
lds
and
xchg
mov
js
mov
pusha
test
in
loope
jmp
scas
push
pop
ficoms
into
xor
push
les
push
or
popa
cmp
xchg
into
dec
jae
test
enter
sub
out
pop
movsl
cld
lret
or
push
adc
pop
pop
jg
repz
or
movsb
lcall
scas
xchg
fwait
mov
rcrb
aam
ds
add
sub
xchg
push
xor
pop
push
addb
aas
icebp
fdivrl
push
cmpsl
dec
dec
push
sub
mov
repnz
sbb
pop
shrl
mov
jns
push
in
dec
fwait
mov
jmp
xchg
mov
das
xchg
xchg
adc
xchg
out
ds
inc
jp
lret
mov
sbb
push
xchg
aad
clc
rolb
shlb
add
js
mov
mov
fildll
lret
pop
popa
pop
dec
and
xor
mov
std
dec
cmp
mov
mov
inc
pop
xor
adc
test
add
int
sbb
mov
sub
or
sahf
scas
cs
inc
add
push
sbb
cmpl
mov
mov
rclb
subl
add
out
in
mov
inc
add
mov
std
idivb
cmp
shl
or
das
out
sbb
popf
fildll
fucom
lods
mov
cwtl
popf
test
jl
jne
mov
out
add
add
push
and
mov
cli
mov
adc
aad
jo
sub
mov
push
dec
mov
lcall
or
add
aad
ja
imul
mov
lahf
ss
inc
lret
and
mov
push
xchg
mov
xchg
fucomp
pop
inc
scas
fildl
dec
xchg
pop
out
mov
insb
fucomi
sahf
push
cli
out
add
popf
icebp
jo
imul
movsb
xchg
mov
xchg
dec
xlat
cmp
in
movsl
or
mov
fsubrs
mov
pop
loope
xor
je
in
rcll
lret
rcll
repz
mov
aas
daa
aas
ret
ja
pop
fs
cmp
cmp
xchg
add
push
cld
sbb
inc
orb
and
loope
xorb
sbb
sub
mov
mov
pushf
sub
pop
jae
stos
cld
mov
les
daa
in
jne
into
mov
jp
fs
inc
aam
jle
addr16
and
jno
repz
cmpsl
xchg
xor
adcb
cmp
pop
jnp
push
xchg
enter
mov
adc
es
les
and
mov
add
js
mov
cmovg
jno
les
cld
cli
cltd
push
ret
dec
in
inc
sub
sarl
xchg
mov
lods
ja
xor
outsb
out
ljmp
push
adc
adc
xchg
loope
dec
rorb
test
push
fs
or
out
or
or
iret
xchg
int
cmpsb
jg
sub
push
dec
cmpl
xchg
lds
jbe
sub
into
add
popf
out
test
dec
sahf
lret
lea
inc
cwtl
loop
fisubs
inc
xorl
pop
imul
push
int3
xchg
xchg
mov
and
sub
fstpl
push
cld
bound
cmp
jle
jge
cmp
movsb
dec
pop
pop
or
adc
xlat
jae
cmp
js
push
or
jle
clc
insb
sub
mov
dec
ljmp
mov
lahf
sbb
std
ret
clc
and
fwait
aaa
sbb
out
int
mov
fsubrl
test
sbb
sub
stos
pop
push
push
jecxz
rcll
inc
mov
enter
es
pop
ret
or
or
ja
xchg
cmp
add
popa
loope
inc
push
dec
sbb
jne
orb
mov
mov
push
or
ret
or
push
insb
fnstcw
dec
sub
mov
icebp
and
enter
cltd
ret
sbb
rcl
cmp
pop
aam
fiadds
mov
jge
imul
mov
pop
jmp
cmove
pushf
or
or
ja
or
hlt
and
cmp
mov
jl
mov
sbb
sahf
rorl
jle
cmp
fists
repnz
xchg
lcall
mov
dec
jmp
push
mov
xor
lcall
scas
inc
mov
rcrl
scas
push
inc
clc
dec
cs
sub
jecxz
stos
or
sbb
and
int
in
jb
sub
push
insb
pusha
inc
and
int3
popl
lcall
ficomps
dec
fstpt
mov
inc
int
dec
in
xorl
cmp
insl
mov
shl
out
rorl
not
bound
into
out
pop
dec
std
les
adc
dec
jo
cli
cli
in
inc
lods
xchg
sub
das
dec
push
dec
outsb
push
insl
ror
push
xchg
xor
int3
sub
and
fsubrl
into
mov
sub
lcall
jp
ljmp
test
mov
or
mov
mov
andl
sub
arpl
sbb
mov
subl
sahf
xchg
out
pop
mov
xchg
out
cs
js
mov
push
popa
jo
mov
mov
sub
sbb
pop
mov
mov
pop
sbb
sbb
lahf
jno
sbb
jnp
and
ret
mov
push
andl
testl
movl
mov
fisubrl
xlat
fisttpl
daa
leave
lds
ret
or
inc
int3
sbb
mov
mov
cmp
imul
sbb
xchg
shrb
xor
pushf
fcmove
daa
fcomps
cmp
sti
sbb
xchg
cmp
mov
mov
sub
jnp
jle
jmp
mov
fstp
loop
ja
xchg
int
divl
cmp
adc
fildll
xchg
jg
fistpll
or
dec
jbe
add
add
cmpsl
imul
and
in
jnp
lds
lea
push
scas
out
outsb
fldt
xchg
adc
testl
fiaddl
shll
xor
cmp
xchg
pushf
pop
push
sbb
mov
lods
cmpsb
cmpsl
dec
idiv
push
movsb
push
sub
sub
popl
inc
out
lret
fs
fs
pop
int3
jmp
inc
dec
add
into
mov
fdivrs
dec
icebp
push
mov
pop
mov
mov
subl
mov
mov
sub
loope
in
mov
mov
stos
pusha
fbld
iret
into
add
xor
outsl
test
or
adc
mov
and
lret
xor
cmp
push
inc
pop
push
data16
ss
rcl
mov
mov
adc
cmp
sar
inc
popf
leave
pop
mov
loop
hlt
out
xor
push
xor
push
mov
stc
cmp
repz
xchg
sbb
sub
xor
mov
aad
gs
cmp
add
add
and
sub
rclb
iret
jle
jns
inc
or
subl
add
jnp
negl
push
pop
pop
divl
xor
lock
mov
mov
jecxz
inc
popf
addr16
pusha
push
stc
lods
xchg
das
in
and
out
stc
es
sbb
lods
jno
pop
dec
ret
mov
push
push
sti
xchg
arpl
add
imul
or
and
shrb
cmp
insb
sub
jno
adc
dec
test
or
lahf
add
xor
sbb
scas
mov
add
mov
popa
cwtl
dec
out
cmpsb
mov
sarl
pop
lea
jmp
cmpb
aam
aaa
call
mov
xor
jg
popa
mov
push
jo
sbb
mull
pop
test
mov
add
rclb
lcall
jmp
add
stc
and
mov
push
sti
dec
popa
add
fwait
xchg
shl
jbe
je
neg
js
gs
jae
adc
or
inc
in
mov
out
loope
push
sub
lret
std
push
fiaddl
imull
gs
loope
les
jbe
inc
mov
push
lret
sub
cmp
xor
fwait
xchg
test
ficoms
push
push
outsb
sub
jnp
in
in
dec
mov
or
push
outsl
sbb
es
pop
pop
sbb
out
stos
insl
and
test
stos
in
test
int
and
inc
pop
sbb
adc
sub
add
mov
nop
xchg
out
dec
mov
push
push
xor
lahf
pop
pop
xchg
push
testl
pop
movsb
adc
fimull
jns
xchg
test
bound
mov
arpl
dec
push
loopne
sbb
mov
xchg
push
arpl
inc
and
cmpsb
dec
popf
ja
pop
mov
je
ror
out
bound
scas
in
or
adc
scas
cwtl
cli
pop
push
sbb
cwtl
adc
add
nop
lods
notb
repnz
scas
adc
push
pop
or
pop
ja
divb
daa
inc
fstpt
jb
adc
js
out
fisubl
dec
xor
imul
imul
push
cmp
in
jge
push
mov
and
adc
add
cmp
stos
pop
ss
adc
stos
jne
mov
jns
push
addr16
fs
enter
rorl
lds
addr16
xor
outsl
popa
incl
mov
cmp
xchg
xor
repz
xchg
pop
or
inc
movb
jp
shlb
pop
test
push
jnp
push
inc
dec
rclb
mov
and
sar
cli
test
outsl
fsub
or
mov
out
push
jns
add
add
stc
dec
pop
out
fsqrt
cwtl
sbb
jle
mov
popa
cltd
cmp
rcrb
insl
inc
mov
sbb
ds
cmp
pop
enter
and
aas
aas
subb
mov
ffreep
or
daa
dec
nop
and
call
mov
popa
out
xchg
adc
mov
xchg
dec
pushf
aas
jmp
or
in
sbb
in
into
dec
add
dec
rorl
repnz
js
adc
roll
cli
sbb
mov
cmpsb
subb
jge
test
push
orb
sub
add
cmp
mov
repz
out
loopne
pop
pop
lcall
xor
jae
inc
je
addr16
fisubs
fsubl
sahf
cmp
insl
psubb
pushf
or
inc
movsb
sub
leave
pop
test
movsl
in
fwait
popf
fdivs
mov
sub
cmpsl
xlat
lds
mov
xchg
sub
sahf
sarl
dec
jg
mov
icebp
cmc
jle
dec
cmp
adc
out
jg
daa
aam
loopne
adc
clc
loop
lret
cmp
into
push
cmp
and
and
out
xchg
xchg
ss
mov
dec
xor
andl
dec
ljmp
cs
js
mov
fmulp
call
in
adc
ds
call
sub
mov
bound
cs
pop
sub
aas
and
movsb
lar
inc
js
in
add
fsubr
scas
fadds
dec
sub
jle
mov
add
push
or
js
arpl
sub
xchg
lret
lods
mov
sbb
popf
fs
stc
adc
imul
dec
lea
ficomps
add
in
cld
sbb
inc
enter
hlt
ds
jp
inc
pop
ss
dec
fnstcw
aaa
cltd
fisubrs
clc
out
dec
inc
cli
xor
pop
das
mov
popa
or
jle
inc
test
insb
mov
cmp
negl
add
iret
insb
sub
push
int3
sub
leave
and
adc
or
sbb
add
data16
mov
jp
icebp
stc
in
int3
insl
inc
sub
add
enter
dec
xchg
fcmovu
xchg
outsl
lea
push
jg
loope
leave
mov
lret
gs
leave
je
push
mov
cmp
fcmovbe
outsl
push
jno
pop
add
std
pop
sbb
pop
inc
lret
scas
and
movsl
pop
cmp
inc
in
icebp
lea
fisttpll
jns
inc
bound
and
test
inc
shr
sub
mov
jp
pop
loop
sbb
scas
fisubl
popf
es
inc
call
shrb
sbb
inc
or
push
lods
repz
data16
xor
and
inc
mov
sahf
dec
add
shrl
dec
pop
dec
and
shr
icebp
add
shl
xor
les
xchg
dec
cmp
loop
ljmp
lcall
or
ficomps
sbb
mov
insl
adc
out
gs
push
cmp
pop
bound
popf
test
lods
xchg
int
filds
setge
add
xchg
out
loop
icebp
mov
enter
push
jg
outsb
and
jne
add
cmp
aas
and
push
sub
loope
jo
mov
iret
mov
sarl
xchg
in
insl
sbb
lret
add
xor
je
lock
imul
fmuls
outsl
flds
lret
icebp
pop
mulb
out
adcb
jge
daa
mov
pop
mov
adc
and
push
push
jo
ljmp
shl
sbb
mov
stos
dec
mov
in
aam
mov
cmp
jo
cmc
cmp
js
jno
enter
test
sub
cmp
push
lret
jge
adc
lods
xor
cmpb
test
and
in
pop
data16
dec
shl
push
aam
incl
arpl
call
sub
fstpl
arpl
cmc
cmp
pop
xchg
or
push
sbb
inc
mov
aad
push
cmp
mov
out
push
fbld
cmp
cmp
inc
filds
clc
mov
lock
mov
cmpsl
mov
fwait
in
ret
sbb
push
push
adc
push
jnp
cmp
in
mov
mov
push
and
sbb
sub
movsl
pop
or
addr16
fsubr
in
enter
aaa
adc
outsb
mov
mov
push
xor
inc
fisttpl
cmpsl
cmc
pop
pop
cmp
push
dec
cmp
mov
fwait
pop
les
inc
mull
sbb
int
push
data16
dec
aas
pusha
mov
ret
and
cmp
jno
fs
testb
imul
adc
fidivl
jle
aam
nop
mov
std
rclb
sbb
mov
add
jge
sbb
cmp
xor
cwtl
das
incl
test
jbe
jg
out
xor
jno
and
cmp
mov
mov
lret
cwtl
mov
push
add
imul
jae
dec
stos
mov
adc
sti
jnp
ljmp
or
imul
jge
lock
lods
adc
sub
test
mov
or
faddl
loop
addr16
addr16
mov
xchg
ss
add
jp
jne
ss
lret
mov
adc
mov
je
fcomp
pop
jp
enter
dec
mov
mov
pop
rolb
mulb
dec
sarb
clc
inc
subb
xchg
dec
jmp
xchg
cwtl
cmpsl
push
pushf
data16
pop
jge
insl
or
fwait
idivl
shr
and
jae
fimuls
cmpsb
xchg
clc
mov
aas
loop
pusha
sahf
pop
jns
aas
pop
push
int
mov
inc
movsb
pop
call
xor
hlt
out
ja
mov
inc
call
dec
pop
adc
imul
push
xchg
repz
cmp
push
outsl
mov
idivb
sub
insb
arpl
popl
rorl
pop
test
jns
popa
push
je
cs
jnp
leave
in
movsb
ret
xchg
mov
sbb
adc
and
fildl
ucomiss
sbb
add
and
enter
mov
sahf
jno
cmp
scas
push
push
ja
mov
into
iret
mov
jno
loopne
mov
inc
call
fsubs
fdivs
test
push
out
pop
shll
js
add
jnp
pop
jb
dec
loope
pusha
cmpl
in
sti
push
xchg
roll
pop
pusha
inc
xchg
jns
pop
adc
out
fldlg2
push
mov
aaa
cmc
xor
or
out
jmp
mov
icebp
xchg
add
out
mov
out
sbb
sbb
sbb
pop
dec
sarl
js
dec
ficoml
sbb
lods
xchg
or
push
sub
into
adc
out
mov
cmc
pop
inc
inc
imul
scas
test
sub
xor
inc
inc
jl
bound
ret
mov
loope
pop
xor
cs
mov
push
cltd
repz
sub
lcall
pop
clc
inc
js
pop
pop
test
add
push
mov
ja
mov
nop
lret
xor
pop
mov
mov
outsl
jp
icebp
imulb
mov
idivl
scas
sbb
or
sbb
sub
popf
enter
in
lods
or
inc
and
testl
out
pop
add
xlat
arpl
mov
add
jo
lds
mov
inc
dec
add
xor
push
jg
and
push
push
mov
popf
pop
push
lods
xchg
xchg
aad
inc
mov
leave
rclb
cld
and
ret
fiaddl
mov
or
fdivrp
xchg
add
andl
addb
pop
loopne
pop
jg
fnsetpm(287
xchg
pmuludq
add
mov
and
ret
xchg
and
dec
pop
shrl
cmpsl
push
xor
negl
mov
pop
jne
repnz
iret
popa
xlat
sbb
add
repnz
sar
bound
ret
mov
dec
cmpsl
adc
fmul
in
dec
lds
sub
jns
sbb
mov
dec
or
or
adc
fcmovu
cmpsl
pop
push
mov
mov
fnstcw
xchg
push
loop
dec
xchg
int3
das
inc
das
mov
gs
test
test
lods
pop
out
pop
data16
pop
insb
push
das
rcrb
lods
sti
repnz
sbb
jg
int3
and
mov
sarb
adc
in
int3
add
jb
mov
jg
sbb
int
call
out
mov
xlat
push
cmp
mov
aad
cld
je
and
sub
lock
mov
fwait
sbb
push
fs
ret
ds
fwait
clc
mov
fildll
cmp
sub
test
cmp
stos
mov
repnz
xor
cld
xchg
call
mov
cli
jecxz
notl
push
lock
push
shll
testb
je
xchg
jae
push
cmp
jl
sbb
mov
mov
sub
dec
mov
mov
and
loope
jg
testl
pop
or
sub
incb
lret
cmpsb
sbb
fcmovne
add
sub
test
scas
dec
pop
les
sarb
cmc
dec
and
mov
mov
sbb
mov
pushf
ret
mov
addr16
insl
in
cld
mov
mov
mov
jae
dec
or
rcrl
or
pop
jns
int
cmp
aas
sarb
mov
in
pop
jae
lcall
sub
dec
sub
call
inc
fisubs
adc
xor
mov
xchg
mov
leave
jg
in
mov
add
imul
ret
mov
lret
mov
jne
inc
sub
insl
mov
push
cmpsl
sub
int3
add
mov
into
cmp
sahf
pop
stos
loope
fsubrl
dec
cmpsb
mov
mov
inc
inc
cs
stos
xchg
push
imul
int
inc
icebp
divl
mov
and
rolb
jmp
inc
mov
test
daa
dec
cmp
ret
dec
scas
test
mov
cmp
xchg
mov
ret
pop
stos
pop
mov
jl
popf
shr
push
or
or
das
movsb
arpl
pop
dec
mov
and
adc
pop
and
ljmp
pop
inc
outsb
adc
push
push
jp
dec
fldcw
xlat
pop
inc
add
and
mov
mov
fwait
jmp
ss
scas
test
or
cs
adc
es
ljmp
mov
insb
inc
sarl
cmp
mov
jb
enter
ret
lcall
lea
or
push
or
lock
jge
cmp
ljmp
rclb
sbb
xchg
mov
insb
jg
pop
push
roll
jns
mov
mov
mov
cwtl
jno
xor
scas
dec
scas
mov
xchg
lret
inc
mov
jae
xor
mov
push
movl
pop
jmp
es
cli
es
leave
mov
loop
dec
add
cmc
sub
mov
aas
divb
into
ficompl
pop
rorl
rcrb
repnz
and
andb
lahf
pop
movsl
add
xchg
push
std
pop
test
into
mov
pop
cli
xchg
sbb
pop
popa
cld
imul
xchg
mov
adc
jne
mov
repnz
mull
cmc
pushf
mov
js
mov
inc
xchg
stc
rolb
fldenv
sti
sbb
add
pusha
xor
enter
cwtl
fcomip
js
or
add
push
inc
fldt
mov
add
negb
sub
call
inc
repnz
ret
mov
jns
test
jnp
push
dec
das
subl
sbb
in
push
cmp
inc
lea
or
cmp
mov
sar
or
dec
in
push
jnp
in
lahf
and
insl
sbb
aaa
cwtl
adc
push
je
shrl
mov
notl
or
lea
sub
mov
mov
test
sub
jns
loopne
xlat
xchg
inc
sub
push
push
add
cmp
enter
dec
jg
testb
test
addb
mov
add
std
mov
and
inc
push
mov
popf
popf
int3
xor
mov
add
xchg
cli
or
push
lret
add
adc
enter
ret
pop
loopne
push
pop
adc
xor
cmp
popa
daa
add
movsb
pushw
bound
sbb
fcmovne
in
mov
pop
fsubs
pop
adc
dec
adc
xlat
jnp
test
xorb
mov
and
jb
sbb
mov
call
lods
sub
xor
cwtl
pop
inc
out
push
push
scas
out
movq
and
or
xchg
shrl
dec
into
jp
mov
test
loopne
dec
adc
data16
mov
iret
cmp
mov
mov
cli
leave
out
icebp
imul
shll
inc
mov
adc
and
stos
push
clc
jnp
aas
add
orb
call
jae
sarb
and
cmc
pop
andb
mov
ljmp
mov
lea
lret
cvtps2pi
fwait
fwait
hlt
call
loope
mov
arpl
fldt
imul
in
and
mov
mov
call
leave
out
jne
pop
test
test
es
mov
repnz
out
jmp
push
mov
jb
xchg
xor
popa
in
out
sbb
dec
mov
hlt
and
cmpsl
dec
xchg
outsl
pop
dec
jbe
inc
jno
rsqrtps
mov
cmp
xor
orl
insb
pop
cmc
fcoms
mov
mov
inc
gs
cs
fcmovne
icebp
dec
add
push
jecxz
and
psrlq
xchg
fs
and
push
mov
icebp
ud2
hlt
ret
xor
jns
dec
jmp
jnp
inc
cmp
lea
out
out
stos
aad
fs
pusha
rorb
sub
repnz
mov
sahf
sti
sbb
mov
and
add
push
push
inc
dec
andnps
xchg
mov
dec
ja
js
hlt
mov
mov
ret
fcom
lock
cltd
pushf
bound
push
enter
sub
add
sarb
aam
int
mov
jle
or
adc
and
fldl
scas
dec
loope
bound
and
xchg
dec
das
mov
je
pop
in
mov
lds
shl
insb
jp
or
mov
arpl
or
mov
pop
mov
xor
outsb
test
mov
push
xchg
sti
ficompl
aaa
or
sbb
sbb
pusha
mov
in
stc
dec
pushf
or
arpl
xor
sub
pop
mov
bsr
out
push
orb
push
pop
mov
adc
sbb
pusha
je
and
mov
sub
popa
xchg
pop
sub
sub
xor
mov
mov
mov
mov
in
int
push
and
shlb
inc
adc
subb
push
sbb
pop
lret
pop
sbb
jge
stos
lds
pop
pop
popa
aas
adc
fisttpll
sbb
fwait
inc
aam
pop
dec
sbb
movsl
js
adc
fwait
push
out
iret
push
popa
movsl
cltd
add
insl
mov
sbbl
jno
xchg
adc
sub
in
rcll
lock
mov
xchg
sbb
out
call
popa
add
and
cmp
sbb
cmp
movsb
jge
sbb
jbe
dec
adc
loopne
xchg
in
adc
add
or
lea
aam
cmc
enter
lods
in
jmp
pushf
fadds
adc
call
sub
sarb
or
jg
lock
jo
xchg
cmp
push
jae
push
fwait
cmp
pop
pusha
jno
adc
dec
xchg
mov
mov
std
lcall
lahf
adc
cmp
push
nop
lahf
mov
adc
xchg
aas
jb
push
fadds
js
mov
lret
in
and
filds
das
sbbb
cmpsb
sbb
push
fsubl
dec
mov
frstor
aad
jns
sbb
cmpsl
pushf
jl
addr16
lock
jmp
lock
fsub
xor
dec
pop
test
xchg
mov
dec
int
sbb
pushf
stos
xchg
push
fwait
lods
rcl
jge
cmpsb
push
jnp
add
cmpb
add
push
aas
imul
cli
jp
mov
int3
push
mov
dec
sbb
out
nop
inc
xchg
out
nop
loop
mov
lret
fbld
inc
cmc
mov
flds
pop
enter
addr16
jl
pop
les
lea
jb
cltd
into
fwait
inc
cli
push
lds
jb
mov
sbb
jecxz
dec
in
imul
icebp
sub
faddp
int
fmulp
fnstenv
jns
xchg
push
shrb
movsl
inc
lcall
add
std
or
dec
insb
adc
inc
inc
daa
adc
js
loopne
jmp
inc
mov
pusha
mov
fcmovnb
roll
and
mov
mov
add
movsl
and
lds
cmpb
pushf
mov
xlat
test
hlt
pushw
ret
cmp
sub
mov
fwait
les
xor
fneni(8087
out
cli
add
das
dec
fwait
test
and
add
xlat
fmull
inc
push
out
add
inc
pop
mov
pop
pop
shll
bound
mov
adc
adc
fwait
dec
in
lcall
cwtl
inc
pop
push
push
adc
or
xchg
insb
add
stc
and
je
scas
push
outsl
js
fdivp
or
jae
sub
cmc
and
cmp
sbb
das
aaa
fnsave
mov
xchg
shll
cmp
mov
add
test
xchg
test
dec
out
pop
jnp
adc
sti
and
fisubl
rcrb
or
leave
outsb
cmp
sbb
push
mov
lea
adc
mov
rolb
ret
or
cltd
repz
xor
aaa
fcmovb
pop
mov
loope
iret
dec
sbb
aaa
or
in
push
xchg
mov
dec
outsl
pop
push
push
idiv
aas
and
idivb
mov
mov
jecxz
mov
imul
hlt
xchg
lret
jecxz
cld
and
imul
jno
mov
and
adcb
sbb
aas
jne
lea
fdivrs
pop
mov
and
in
push
xlat
subl
mov
sbb
ficoml
leave
popf
pop
push
and
lcall
je
lods
push
dec
movl
push
or
leave
cltd
stos
clc
jae
loop
pushf
cli
cld
mov
xchg
icebp
daa
jl
inc
mov
fdivr
popa
pushf
push
sbb
lcall
out
pop
aaa
pop
repz
rclb
inc
shlb
test
fdivs
sbb
insl
pop
in
mov
xchg
push
movsb
lret
add
out
cmovg
out
pop
jnp
pop
push
inc
mov
mov
adc
push
loope
or
mov
icebp
mov
int
fnstcw
andb
mov
jb
add
stos
lods
hlt
stos
cltd
fs
cmp
mov
into
fiaddl
iret
pop
iret
mov
inc
xor
loop
popa
sbb
imul
mov
or
imul
decl
pop
mov
into
movsb
scas
xchg
clc
fidivrs
jns
in
shll
in
cli
mov
test
dec
int3
xchg
jno
cmp
rolb
loope
xchg
addr16
mov
push
push
repz
xchg
mov
icebp
in
andb
xor
insl
inc
cwtl
or
mov
xchg
outsb
jo
scas
jmp
imul
dec
insl
mov
or
orl
mov
or
push
pop
stos
stc
jne
push
popf
stc
jg
add
pop
inc
adc
mov
mov
xchg
push
pushf
test
cs
mov
popa
sub
mov
push
pop
movsl
arpl
fdivs
cmp
scas
pop
sub
push
mov
popf
mov
sub
pushf
mov
sbb
lock
out
inc
jnp
and
cmc
ds
in
and
daa
into
xor
adcl
cmp
dec
not
aaa
dec
addr16
pop
pop
dec
pop
cmp
jae
dec
dec
pop
adc
add
sbb
add
lds
and
or
mov
out
xchg
xchg
enter
xchg
lods
cld
fmull
insl
bound
dec
pushw
jp
mov
mov
js
leave
pop
cltd
inc
add
xor
jmp
sub
jnp
jg
aaa
dec
xor
cld
xchg
jb
in
inc
lret
imul
gs
or
data16
mov
mov
ja
inc
out
leave
adc
pop
cmpsl
inc
pop
inc
xlat
aad
je
push
mov
gs
repz
xor
and
fsts
and
lcall
dec
inc
mov
inc
mov
inc
fimuls
std
stc
lods
movsl
adc
js
sub
ds
fsub
inc
jbe
pushl
pop
bound
iret
jnp
cmpsl
loopne
imul
cmp
ljmp
fwait
movsb
mov
ret
popa
leave
mov
jp
roll
inc
sub
jmp
push
scas
icebp
movsb
shlb
inc
cmp
pop
add
cltd
ret
lahf
dec
leave
xor
loope
xor
xor
jb
push
sbb
pop
scas
js,pt
dec
sub
test
mov
add
or
mov
inc
loope
and
sbb
in
popw
sarb
test
es
and
ss
inc
pop
vpavgb
imul
sti
leave
push
jmp
mov
xchg
cli
pop
inc
add
jns
daa
and
sbb
outsl
cmc
inc
fcmovnb
lods
popf
lock
cmpsl
test
vphsubbw
inc
sti
and
or
dec
push
mov
sub
pushf
pushf
mov
jge
shrb
cmp
push
into
jecxz
iret
inc
sub
hlt
lahf
and
hlt
jnp
push
inc
adc
jns
and
xchg
aad
dec
jg
data16
cmpb
push
dec
mov
int3
xlat
push
xchg
inc
in
sarl
leave
lretw
mov
mov
lea
sub
pop
je
cld
cwtl
xchg
mov
sub
ds
adc
test
pop
pop
inc
mov
xor
inc
cmc
xor
mov
ret
sbb
aaa
imul
mov
mov
mov
jmp
or
or
jge
test
ret
inc
adc
scas
repz
sub
cmp
push
sbb
lods
mov
push
mov
out
and
jg
mov
push
mov
popa
es
in
cwtl
stos
or
lods
int3
inc
push
out
mov
sub
fstps
cmp
push
xor
pop
mov
in
mov
mov
adc
imul
das
sbb
call
and
loopne
jl
out
adc
subb
xor
neg
cltd
or
lret
iret
and
jecxz
outsb
rcr
dec
popf
and
jle
push
jns
fimuls
dec
in
ljmp
gs
pop
rclb
dec
stos
mov
lods
imul
or
roll
mov
sbb
dec
les
cmc
push
mov
mov
and
es
cmpsb
sbb
fwait
cmp
add
cmp
inc
in
mov
xlat
sub
add
je
jecxz
sahf
test
push
rcr
push
repnz
out
inc
add
adc
xchg
sbb
aaa
mov
mov
mov
sbb
into
push
inc
inc
aas
cld
mov
imul
sub
cmpsb
sub
cmp
outsb
xor
outsb
push
dec
test
xchg
or
mov
sti
add
adc
popf
leave
mov
subb
jmp
mov
frstor
subl
pop
das
inc
xor
dec
sbb
lods
push
popf
cmpsb
or
pop
xlat
inc
xchg
mov
popf
inc
mov
mov
inc
sbb
enter
pop
je
inc
std
adcb
shll
insb
mov
push
repnz
insl
fisttps
jbe
adc
pop
out
inc
sbb
loopne
mov
pop
and
add
cmpsb
xor
movsb
mov
xchg
xchg
pusha
rcl
adc
sbb
lods
loope
and
push
or
and
sbb
into
out
inc
inc
popa
sarb
mov
cwtl
ja
clc
mov
mov
or
aaa
adc
jnp
jnp
pop
xorb
or
push
or
add
fcmove
inc
sarb
sbb
cmc
cmpsb
mov
xor
adc
mov
out
push
jle
push
xchg
pop
or
or
sub
add
in
cmp
test
cltd
or
add
dec
mov
insb
cmp
mov
push
shlb
dec
cmp
imul
or
adc
cmp
sub
popf
jle
xchg
mov
and
leave
fwait
xchg
test
sbb
stos
iret
pop
mov
clc
dec
rcll
add
popa
loop
inc
mov
out
in
inc
jns
into
and
mov
pop
cwtl
repnz
push
sub
jg
xchg
ljmp
adc
sub
dec
cli
add
inc
jae
fbld
push
push
dec
and
dec
jmp
cmp
jle
lret
popa
push
jo
jnp
repz
jns
dec
inc
daa
rclb
mov
sub
mov
xor
dec
pop
nop
es
sub
mov
mov
sbb
and
mov
ds
xor
lods
and
jbe
inc
add
mov
mov
xorl
lock
mov
cltd
add
es
and
xchg
dec
jnp
mov
cmp
cmpsb
call
sub
or
push
jbe,pt
scas
ja
push
add
data16
arpl
test
xchg
leave
adc
lcall
xchg
cs
dec
and
ds
and
pop
fstl
mov
cmpsl
cltd
gs
mov
std
jmp
out
or
pop
fisttpll
mov
fldenv
fcoml
jmp
sti
cmpsl
sub
mov
xor
adc
lods
dec
push
cmp
sbb
mov
push
mov
inc
and
push
je
jnp
mov
mov
push
mov
cmpsb
cli
repz
imul
mov
pop
xchg
mov
adc
fwait
cmc
fs
fmuls
xor
sbb
jo
sbb
mov
data16
f2xm1
jg
adc
ret
call
mov
mov
mov
stc
popf
vdivsd
arpl
movsb
xchg
adc
stc
in
pop
pop
jne
aas
es
imul
ds
lea
inc
outsb
lahf
lcall
mov
push
inc
sub
mov
mov
or
bound
cmpsl
jg
push
cli
repnz
daa
sbb
fs
dec
jmp
pop
adc
outsb
inc
push
daa
sub
and
repz
ret
mov
rcrb
test
jae
fwait
mov
arpl
into
lods
mov
jbe
sbb
sub
aam
dec
leave
jno
pop
out
inc
mov
jmp
mov
push
mov
inc
mov
xchg
test
movsl
inc
pop
or
sbb
popf
shll
xor
ljmp
xchg
inc
subl
cwtl
or
add
cltd
add
jo
std
jb
sarl
mov
jl
sahf
rorb
rcrb
fcmovnb
test
jns
cmp
lret
sub
dec
out
enter
pop
sbbl
out
jmp
jle
std
push
adc
mov
loope
daa
ficoms
scas
iret
pop
add
icebp
xor
stos
mov
into
jbe
sub
adc
aas
push
aad
cmp
out
mov
lret
adc
adc
sub
and
cmpsl
jge
mov
xchg
xchg
xor
mov
push
or
pop
js
clc
insl
mov
xor
mov
and
call
xchg
xchg
sub
inc
addl
cmp
xor
dec
adc
cmp
imul
push
or
aad
mov
rclb
mov
pop
mov
adc
sbb
pop
aas
rolb
or
xlat
ljmp
out
xor
lret
ljmp
fwait
add
je
xor
pusha
je
pop
in
pop
shll
xchg
or
int3
rcrb
nop
in
arpl
push
push
xchg
inc
or
push
mov
add
sbb
and
mov
push
das
out
xor
repnz
addr16
push
hlt
flds
in
mov
lods
xchg
and
test
jg
stos
fistl
loopne
fnstenv
cld
cmp
mov
jp
mov
jmp
push
rcrb
hlt
jo
into
mov
jae
pop
mov
mov
or
int3
mov
jg
mov
movsl
out
pop
sbb
decl
aas
sbb
sbb
jecxz
outsb
fisubrs
sbbb
cltd
ljmp
inc
repnz
mov
push
xchg
out
aam
pushf
xor
pop
fstps
arpl
je
adc
push
sub
mov
mov
mov
mov
lds
push
push
adc
dec
int
xor
les
ljmp
dec
push
mov
pop
cwtl
mov
push
mov
daa
loope
mov
scas
adc
out
add
xor
test
sbb
into
mov
outsb
cmp
add
add
push
sbb
sub
loope
lret
mov
adc
push
jl
xor
inc
jg
cli
sbb
add
js
push
popa
scas
lret
and
sub
lds
xor
cld
adc
mov
ds
lods
xlat
mov
inc
enter
sarl
addb
cltd
repnz
ds
xchg
inc
pop
xchg
or
add
mov
lcall
mov
cmp
xchg
lods
icebp
ds
add
dec
loopne
out
stos
popf
dec
pop
sbb
jb
sub
xchg
imul
cwtl
andb
mov
in
add
call
push
dec
fwait
fwait
movsb
pop
rclb
int
cmpsb
dec
xchg
sahf
cmp
mov
xor
mov
xchg
popl
mov
sar
loopne
mov
popf
mov
fdecstp
push
test
xor
jo
loope
mov
adcb
xchg
adc
cwtl
jl
imul
movsb
sub
jecxz
test
pop
pop
lahf
add
or
fbstp
xchg
iret
test
push
xchg
and
xchg
xchg
xchg
popf
and
cmpsb
pop
divb
cmp
sti
loopne
test
pop
fcoms
stos
lods
sbb
or
xchg
mov
ljmp
mov
jb
mov
sub
and
sub
enter
pop
pop
enter
loopne
ret
pop
push
xchg
fcompl
adc
dec
pop
push
or
repnz
xchg
cmp
stc
xlat
out
add
sbb
es
test
cmp
hlt
add
shlb
sbb
fldenv
nop
inc
hlt
xchg
dec
xchg
pop
jb
dec
xchg
jl
nop
mov
pop
sbb
push
xchg
rolb
mov
push
out
push
mov
fmul
cltd
mov
aam
in
xchg
mov
sbb
or
in
popl
int3
ja
adc
add
dec
mov
and
lods
adc
sbb
lock
jle
jns
dec
mov
dec
stos
popf
into
scas
sbb
shl
adc
push
fiadds
mov
loop
movsb
enter
cmpsl
test
jb
sti
das
dec
xchg
adc
aaa
out
mov
or
leave
or
cld
out
out
sub
insl
lahf
popa
mov
aad
lods
call
dec
xchg
inc
xor
xchg
add
fnsave
cmpsl
imull
call
sbbl
inc
stc
mov
in
inc
xchg
jecxz
cmp
sbb
repz
lock
xchg
cmp
push
lds
or
sbb
aad
sub
xchg
insl
cmpl
mov
aad
push
mov
cwtl
adc
sti
jns
in
in
pop
jnp
adc
add
sti
inc
xor
adc
dec
inc
stc
add
xor
mov
push
sub
popa
loop
pop
xlat
push
aas
pop
cmp
cmp
call
outsb
mov
in
cmp
filds
fists
arpl
mov
fnstcw
cmpl
push
aas
mov
and
push
fsubs
xchg
dec
sahf
js
out
cmpsl
mov
push
push
xor
mov
jbe
into
enter
mov
sub
mov
addr16
out
or
fsubs
xor
nop
sbb
ret
mov
movnti
push
int3
cltd
jecxz
je
mov
lods
call
push
data16
out
inc
decl
add
add
cwtl
push
adc
aas
cmpsl
xchg
shll
dec
mov
mov
jnp
idivb
ja
rcrb
in
push
shrb
mov
inc
xor
push
pop
clc
cmp
fcompl
add
push
in
stc
into
jbe
jno
lods
sub
and
testb
add
pop
sbbl
fnstcw
sub
clc
imul
dec
stos
xchg
add
lea
jb
push
mov
ds
ret
insb
jns
push
sti
xchg
out
setno
adc
and
mov
ret
fistl
push
cmp
rcrl
pop
push
aam
arpl
jmp
int3
and
lcall
lods
inc
dec
cmp
test
pop
mov
call
lock
sbbb
popf
repz
sbb
pop
fsubl
cli
stos
dec
cmp
lret
test
inc
mov
push
jp
xchg
imul
and
push
aas
pop
push
sbb
loope
mov
jbe
inc
jno
jecxz
push
xchg
lods
push
daa
and
pop
cltd
fwait
lods
and
repz
pushf
aad
rcrb
push
imul
sbb
jne
mov
mov
ficoms
cmp
push
push
stos
pop
mov
jmp
jb
or
mov
subl
iret
mov
adc
dec
clc
dec
aas
mov
loopne
pop
les
mov
out
cmp
add
cmp
test
push
gs
adc
call
push
push
push
js
pop
dec
in
mov
cld
sahf
lods
jne
jl
shll
xchg
ret
lods
lods
sub
sahf
inc
in
add
das
jb
pop
push
call
xor
into
sub
sbb
and
enter
test
cmp
es
test
ss
push
rclb
adc
call
cli
sub
sbb
dec
inc
adc
ljmp
stc
cmc
shrl
lds
mov
push
lock
pop
out
cs
cmp
mov
clc
rorl
les
inc
aam
cmp
mov
fsub
add
jbe
mov
lret
push
or
jns
sbb
mov
sbb
cmpsl
mov
pop
pop
jae
int3
mov
shrb
xor
in
mov
sti
gs
xor
adc
and
or
rolb
push
sbb
cmpsb
pop
jmp
lret
clc
idivl
jnp
mov
int
jp
outsl
fadds
mov
scas
sub
jge
push
mov
pop
ljmp
push
push
and
sarl
loope
inc
inc
pop
inc
scas
daa
test
fwait
in
and
divb
add
add
adc
movsb
adc
and
test
push
jno
test
jno
xchg
mov
iret
adc
adc
xchg
xlat
ror
fdivrl
lcall
mov
adc
mov
lods
and
mov
dec
aas
cmpsl
jbe
jb
mull
cmc
push
int
lods
jne
dec
ffree
dec
ror
mov
out
rcrl
push
dec
testb
mov
inc
pop
mov
movsb
call
sbb
push
dec
adc
into
pop
or
mov
add
add
mov
rcrb
movsl
rorb
mov
push
sbb
sbb
jmp
loopne
mov
mov
jb
xchg
pushf
cmpl
cmp
dec
mov
mov
sbb
out
add
inc
repnz
mov
outsb
jne
or
pop
xchg
mov
lret
jo
gs
shlb
add
cmp
lods
xchg
inc
xchg
js
adc
lods
xor
imul
fisttpll
scas
sub
sbb
jne
xchg
out
push
and
push
adc
xchg
pushf
aaa
stos
and
shll
jnp
adc
sbb
repnz
insb
push
sarb
sub
out
leave
leave
addr16
movsb
scas
sub
dec
xor
jmp
fdivs
mov
ljmp
test
out
lcall
rcl
js
addb
lahf
jne
insb
arpl
jg
add
mov
jge
repnz
rcrl
xchg
cmp
mov
rolb
sbb
jg
xchg
add
or
mov
xor
mov
das
add
aam
dec
xchg
xor
cli
dec
in
jb
sbb
ljmp
fwait
inc
pop
aas
push
sub
and
jge
and
mov
fcmovu
fidivl
push
in
push
dec
dec
ffree
cmp
sbb
xor
nop
push
jg
loope
xor
pop
inc
xor
ja
insb
data16
idiv
xor
mov
adc
cmp
pop
cld
adc
loop
jmp
xchg
icebp
ret
out
fistpll
in
add
xchg
and
adc
mov
or
scas
outsb
mov
fidivrs
mov
xor
idivb
mov
sub
jg
mov
sub
ljmp
movsl
mov
or
das
popf
mov
dec
pop
in
mov
push
ljmp
xchg
and
mov
pop
movsb
arpl
clc
je
test
jmp
call
mov
jge
clc
dec
bound
ljmp
cli
lcall
call
into
out
jne
push
dec
mov
jns
sub
and
adc
xorl
push
outsb
stos
and
popf
add
sub
sbb
xor
push
popa
mov
pop
call
push
sti
ss
jl
jns
and
sbb
cmp
or
add
orb
sbb
sub
sar
enter
sbb
inc
lahf
aam
adc
repz
dec
sarl
push
inc
cmpl
or
push
dec
sub
lock
stos
stos
mov
andb
xchg
sub
mov
jo
arpl
cld
mov
push
push
fwait
ret
imul
adc
cmc
cmp
inc
filds
ss
es
hlt
mov
sbb
mov
arpl
push
add
push
mov
inc
loop
push
repnz
jno
adcl
inc
pop
jmp
ret
xor
dec
popf
dec
pop
jae
fldl
dec
jp
sbb
scas
bound
xchg
dec
hlt
lea
and
lods
stos
out
inc
mov
sti
add
les
loopne
adc
lods
rcl
cmp
mov
pop
mov
in
jecxz
cli
add
out
cmp
mov
sbb
push
pop
cwtl
push
aam
dec
out
aad
inc
jns
fsubr
pop
imul
sti
cmp
sbb
insb
into
or
or
cli
mov
outsb
iret
jmp
mov
mov
cmp
pop
loope
nop
push
jmp
and
and
arpl
push
push
je
stc
push
or
clc
mov
call
cmp
test
mov
leave
cmpb
test
mov
loop
notb
cmp
pop
jle
mov
inc
cmp
xchg
adc
and
and
add
hlt
lock
or
bound
shlb
add
lods
ljmp
cmp
adc
push
mov
faddl
push
dec
add
out
and
xor
lahf
xchg
add
hlt
push
cs
lret
xchg
das
mov
and
imul
jb
or
fisttps
mov
or
add
push
cmpb
lods
jb
push
iret
push
mov
movsb
ljmp
push
pop
and
pop
jle
lret
xchg
pusha
mov
aas
xor
and
lock
fstpl
jle
inc
bound
and
gs
pusha
or
cmp
dec
adc
es
mov
mov
popf
jge
cs
mov
imul
dec
aaa
daa
in
adc
lahf
jl
mov
cmc
pop
jne
mov
nop
sub
bound
fucomi
cmp
push
jp
in
push
and
iret
add
dec
arpl
mov
jecxz
pop
lock
push
cmp
lret
mov
rol
push
mov
enter
inc
outsb
ljmp
jo
loope
cmp
xor
lods
push
cmp
cmp
dec
jg
test
dec
icebp
push
ss
jecxz
sub
cltd
push
pop
hlt
lret
lea
xor
add
jnp
imull
int
add
sti
int3
loopne
inc
daa
xor
fwait
adc
sub
cmpsb
xor
lahf
mov
push
sub
ret
sub
aaa
cmp
out
shlb
xor
xchg
ljmp
scas
push
xlat
pusha
lock
inc
push
es
cmp
dec
pop
push
ret
das
add
mov
adc
pop
out
aaa
movsl
xlat
filds
cmp
push
xor
call
mov
pushf
pop
pushf
sti
adc
xor
call
dec
cmp
repz
push
push
jnp
and
sbb
jge
sti
ret
shlb
in
scas
rorb
imul
jbe
cmp
mov
addb
and
pop
push
mov
or
jo
adc
mov
sub
scas
test
test
in
or
jp
int
lea
cmpsb
jno
clc
fcom
stc
or
lret
loop
gs
inc
jmp
sub
adc
xor
imul
cld
xchg
pop
mov
xchg
out
inc
add
sahf
adc
cmp
orb
icebp
shr
mov
mov
cmp
ror
pop
pop
int3
sub
pop
xlat
push
mov
addr16
dec
dec
jle
aas
cli
sti
push
mov
shl
aad
mov
les
loop
pusha
pop
inc
fidivrl
fsubs
lods
adcl
sbb
loope
hlt
stos
or
sub
mov
jno
lret
adc
or
sbb
push
je
aad
outsl
push
das
fsubrl
mov
or
movsb
sub
dec
aam
mov
lods
xchg
repnz
xchg
sub
aaa
inc
je
xchg
je
or
push
jne
jl
insl
inc
push
ljmp
lods
gs
jge
insl
jp
inc
xor
jne
xor
imul
in
mov
jmp
jae
or
iret
outsl
inc
ret
push
cmc
stos
xor
jge
inc
jae
xchg
mov
and
pop
stos
pop
data16
out
push
mov
loope,pn
push
push
stc
and
inc
js
loope
adc
xor
jmp
ret
imul
int3
mov
ror
imulb
cltd
fadd
xchg
in
jae
cmpsb
dec
sbb
xor
xchg
jno
cwtl
or
add
adc
xorb
push
cmpsb
push
lahf
aad
xchg
add
loopne
jle
neg
xchg
mov
mov
lods
pop
jnp
mov
inc
push
pop
in
dec
into
icebp
mov
jb
mov
jmp
repz
mov
push
jge
clc
ret
pop
mov
in
lsl
push
sbb
cld
rcll
pusha
push
sbb
testl
cmp
out
cmpsb
mov
xchg
stos
lea
sub
shr
int
mov
xor
mov
fdivp
xor
insb
xchg
inc
add
dec
push
cmpsl
dec
jp
lcall
bnd
leave
xor
adc
call
js
lret
pop
sbb
add
sub
jb
push
cmp
shlb
scas
lods
popa
xor
out
mov
popf
pop
pusha
decl
ja
js
dec
adc
enter
lods
jns
sbb
rorl
das
popa
fidivrl
out
in
stc
xchg
add
fstpl
inc
sub
lock
sahf
pop
mov
jp
and
lcall
pop
repz
addr16
int
pusha
lds
push
repnz
and
es
add
pusha
mov
das
sbb
inc
inc
or
dec
ret
nop
adc
xchg
movsl
xchg
pop
popa
scas
imul
fwait
ljmp
mov
cmp
jge
test
jp
mov
in
popa
add
sbbl
jl
sub
mov
bound
orl
adc
and
jo
in
sbb
setne
sbb
sbb
mov
insb
or
mov
in
push
jnp
xchg
test
push
mov
mov
movsl
cltd
into
and
movsb
stos
inc
jmp
lods
sub
lods
nop
mov
popf
adc
adcl
mov
and
sbb
mov
and
in
xchg
add
inc
out
repz
sub
into
jmp
push
mov
in
dec
xchg
stos
add
fcoml
lret
in
int3
sbb
xchg
xchg
jns
mov
mov
jmp
mov
jns
data16
push
insl
ljmp
mov
jb
push
insb
scas
enter
and
loop
or
rolb
sbb
add
push
cmp
inc
mov
inc
imul
es
and
cmp
lcall
fimuls
inc
frstor
adc
ret
sbb
popa
sahf
add
cmp
mov
fiadds
movsl
movsb
negb
cmp
popf
xchg
aam
ja
daa
test
inc
lock
scas
stc
int3
sahf
cld
cmp
faddp
and
movsb
jecxz
inc
daa
je
xchg
mov
add
cmp
xchg
ss
ss
shl
mov
push
fsts
bound
xchg
mov
frstor
rcrb
sub
xchg
or
mov
inc
xchg
repnz
sbb
or
mov
mov
mov
cmp
mov
sub
mov
and
jecxz
pop
mov
ds
mov
data16
mov
jg
test
in
lret
cmpsb
int
lods
push
cmp
sbb
xchg
popf
pop
int3
es
rolb
pop
add
clc
dec
in
sub
arpl
out
nop
test
jnp
mov
lea
sarb
or
jb
mov
adc
outsb
iret
mov
ret
inc
lahf
cmp
ss
sbb
cmpsb
push
inc
bound
cmc
fstps
xchg
cmp
shll
fmull
jp
jp
js
sbb
rolb
jecxz
jl
mov
lods
lret
stos
push
push
inc
test
jnp
push
adc
inc
jle
cs
cwtl
movsl
dec
arpl
popf
jns
das
push
ret
testl
negl
dec
or
cltd
outsb
mov
push
cli
arpl
add
sarl
and
insb
xor
fdivrp
icebp
or
das
cmc
aas
or
rcrb
lcall
pusha
pop
xchg
ret
sahf
fs
lock
lds
sbbb
mov
lahf
inc
lds
scas
adc
daa
cltd
gs
in
and
inc
fbstp
fdivr
dec
or
sahf
bound
xchg
divb
jae
ds
xor
sti
iret
dec
aad
cmp
enter
gs
xchg
jl
pop
gs
sbb
cltd
stc
xor
mov
sub
adc
mov
out
jle
sbbb
or
xlat
dec
scas
aam
add
rcrl
je
xchg
cmp
sarb
rol
mov
out
sbbb
mov
lret
xchg
ret
repz
pop
push
jmp
cmp
test
fcomps
fstpl
inc
loope
adc
jge
movb
aad
mov
ret
add
mov
inc
and
jmp
and
fsubl
imul
pop
outsb
adc
sbb
inc
imul
mov
repnz
xchg
frstor
pop
rcrl
ret
jns
call
pop
adc
push
adc
and
or
pop
xchg
imul
shrl
pop
fs
mov
fisttpl
stc
mov
orb
or
lock
xor
shlb
test
outsl
pop
test
shlb
add
fcomps
adc
in
mov
shll
out
ret
pop
cld
jae
push
aad
rclb
jb
stos
mov
push
pushf
icebp
dec
push
icebp
xchg
out
shrl
popf
push
lahf
sti
adc
xor
daa
nop
cs
mov
sub
rorl
cli
scas
leave
mov
imul
cmp
push
jmp
fisubl
arpl
shlb
xlat
jle
shl
sbb
sub
mov
fiadds
sub
bound
dec
push
cwtl
ja
int
adc
mov
out
jo
cmp
adc
fbld
gs
jmp
sbb
aaa
pop
inc
push
inc
xor
sub
rcrb
call
inc
mov
dec
xchg
sbb
int
sub
xor
das
or
cld
popa
in
push
repz
je
add
mov
and
adc
mov
movsb
cltd
es
js
test
dec
xchg
push
pop
std
dec
arpl
lea
xor
or
add
inc
sbb
lds
cmp
sarb
mov
sarl
cmp
es
sub
sub
mov
xchg
push
lcall
shrb
pop
cmpsb
push
adc
adc
inc
sbb
aam
test
loopne
sub
cmp
inc
imul
out
dec
out
or
jle
int
dec
testb
jmp
sbb
cld
enter
xor
adc
dec
inc
adc
jb
movsb
mov
xor
insb
cmpsl
hlt
or
sbb
xlat
xor
add
movsb
fwait
adc
or
sub
sti
sub
inc
mov
testb
aam
fisubl
mov
or
lods
vpsrad
jno
lahf
in
jmp
sbb
test
adc
fstpl
out
fcoml
dec
jno
sbb
pop
mov
mov
lods
mov
xchg
cld
xor
inc
cmp
sbb
push
dec
nop
push
pushf
movb
pop
or
xor
cmpsl
test
cmc
out
inc
and
sub
mov
sub
and
sub
add
cmpsb
inc
stc
shlb
lea
xchg
mov
inc
rclb
enter
ret
lea
ljmp
fisubl
and
push
or
xor
ds
out
push
in
dec
lahf
mov
insb
mov
lea
rcll
faddl
shlb
ret
push
hlt
stos
cmpsb
mov
popf
std
pop
out
mov
inc
pop
jo
push
pop
lods
jecxz
push
ret
sub
sub
adcb
rcr
aas
movups
inc
subl
mov
or
mov
lds
mov
pop
adc
mov
les
mov
push
in
out
sub
scas
cmpsl
and
cmp
jb
jns
fxch
xchg
jb
sub
daa
mov
mov
cmpsb
test
cmp
data16
ds
sub
cmp
enter
popa
xchg
in
xor
cmpsb
inc
jb
out
jnp
ficompl
mov
jno
cltd
mov
xchg
xor
dec
sbb
jnp
cmp
es
adc
call
insb
lock
clc
out
mov
or
leave
lret
cli
xchg
test
popa
add
pusha
shll
xor
fadds
je
cmp
inc
push
lahf
rorl
pop
icebp
mov
iret
and
test
mov
cld
jne
and
movl
inc
inc
and
add
fnsave
movsb
pop
out
push
das
loope
std
inc
dec
inc
aam
jp
hlt
lea
pusha
jo
xlat
mov
cld
lock
aaa
iret
cltd
ret
fisubs
dec
jo
pop
cmp
push
cmpsl
dec
mov
xchg
jp
adc
loopne
fcmovbe
or
push
ror
fnsave
dec
rcrb
push
or
cwtd
mov
lret
cmp
add
mov
fstl
enter
test
push
and
dec
cwtl
push
int
add
jg
adc
sub
mov
aaa
and
daa
imul
das
inc
bound
inc
xchg
add
fcomps
pop
adc
mov
jae
and
in
jbe
mov
aaa
aad
lock
add
pop
cmpsl
fwait
imul
mov
jle
lods
addl
jecxz
stos
in
clc
outsl
jl
and
stc
pop
scas
pop
mov
bnd
sbb
mov
rcrl
ljmp
lcall
and
push
dec
das
or
repz
in
les
pop
inc
or
stc
push
scas
lods
sbb
jns
lods
mov
enter
jp
movsb
sbb
mov
dec
mov
call
jl
loopne
jmp
cmp
test
out
sbb
in
or
xchg
add
loopne
leave
movsb
xor
and
xchg
and
jmp
jns
push
push
call
jge
pusha
rol
call
mov
out
mov
sbb
add
ss
jg
pop
out
dec
adc
xlat
inc
mov
bound
cmpsl
dec
jbe
pop
jl
dec
mov
int3
sbb
jns
xchg
fidivl
lds
push
add
pop
repnz
popa
test
mov
insl
push
popf
sub
fadds
lcall
xchg
pop
test
mov
test
dec
inc
dec
add
or
dec
add
cmp
pushl
insl
insl
sub
sar
mov
pop
into
or
test
push
jbe
xor
in
movsb
lea
dec
and
or
mov
lock
cli
or
dec
jle
mov
iret
mov
pop
jbe,pt
sbb
or
pop
outsb
mov
add
xchg
loop
subl
stos
loope
shrb
mov
xor
inc
into
or
mov
test
mov
lret
incl
and
inc
jle
test
xor
mov
nop
mov
or
inc
xchg
pop
or
push
mov
jno
push
mov
jecxz
lock
ret
push
lds
lea
dec
xchg
in
or
test
sbb
xchg
bound
scas
adc
test
lods
ds
aam
cs
inc
push
clc
test
xchg
subb
push
stos
or
sti
dec
push
les
in
lea
dec
rorl
arpl
push
scas
push
enter
and
cmp
pop
xor
cmpsb
mov
push
push
pop
push
pushf
xor
sub
xlat
and
dec
test
fistpl
dec
jge
jae
sub
test
cmp
xor
pop
and
mov
xchg
cmc
inc
jle
in
mov
int3
push
xchg
push
mov
popa
lds
inc
cmp
ja
orl
push
xchg
push
jno
mov
push
popl
mov
lods
jl
dec
or
and
or
loope
sub
sbb
test
in
jo
in
sti
xlat
roll
pushf
clc
dec
mov
mov
pop
adc
adc
mov
pop
sbb
jnp
iret
stos
sti
pop
shll
xor
cmc
adc
aad
pushf
xchg
inc
or
and
pop
add
int3
push
outsb
cwtl
nop
sub
out
push
repnz
test
mov
sbb
lret
fcoml
ss
cmp
sbb
cld
xchg
jbe
mov
adcb
pushf
testl
or
mov
cwtl
push
clc
addr16
mov
jecxz
push
xor
pusha
push
or
add
mov
xor
lock
adcl
jecxz
sbb
icebp
cmp
xchg
push
xchg
push
jno
jns
imul
xchg
mov
in
aam
lea
mov
mov
sub
xor
push
outsl
stos
xlat
adc
faddl
scas
jb
mov
addr16
push
push
inc
iret
call
jo
sbb
insl
fiadds
std
daa
inc
not
repnz
or
divb
popa
das
mov
dec
mov
stos
adc
jmp
js
add
ret
shrl
fisttpl
and
scas
pusha
inc
push
cltd
clc
cmp
xchg
inc
ret
das
adc
bound
mov
enter
push
adc
xor
pop
inc
addl
rcr
cmc
inc
add
jmp
and
cmp
adc
lds
addr16
cmp
in
xor
inc
xor
lahf
repz
into
cli
push
dec
aam
mov
cmp
cltd
fnsave
xor
loop
add
inc
pop
cmp
cmp
repnz
pop
pop
sub
lahf
sub
xchg
js
mov
fldcw
dec
loopne
je
shlb
jbe
pop
add
jp
add
stos
mov
repnz
movsl
xor
pop
inc
out
movsb
adc
mov
out
cltd
lock
sbb
in
test
movsb
repz
jo
sti
inc
xchg
mov
pop
xchg
pop
mov
repz
jnp
std
imul
imulb
outsl
jne
mov
cwtl
das
add
push
in
ret
lods
xchg
pop
ljmp
mov
lock
lahf
push
inc
sub
or
cmp
fistpll
xor
mov
inc
imul
push
push
push
ljmp
aad
popf
or
push
fldt
xor
dec
adc
push
sti
jb,pn
sub
movsl
push
pop
stos
nop
inc
xchg
pop
lea
lea
pop
sub
mov
sahf
adc
ret
xchg
mov
enter
call
jo
jp
pop
dec
and
mov
aad
sbb
insb
pop
cmp
adc
sbb
and
push
jge
enter
and
lcall
stos
adc
iret
sahf
mov
mov
fcomp
mov
repnz
pop
mov
cmp
push
stos
xchg
jecxz
mov
stos
dec
fildll
mov
add
ja
mov
sbb
loope
gs
incb
cs
popa
clc
pop
or
imul
imull
add
or
xchg
or
test
cmc
test
adc
jle
dec
mov
adc
enter
and
aas
pop
je
adc
sbb
jns
dec
mov
std
loope
fisubrl
adc
rolb
shl
add
adc
cmp
lock
mov
stos
fnstenv
xlat
adc
add
sbb
fadds
sar
inc
dec
or
xlat
loope
xchg
inc
sub
les
mov
lret
in
and
mov
jb
mov
movsl
fsubrs
mov
adc
jp
lock
mov
mov
pop
inc
cmpsb
adc
mov
add
dec
or
xor
mulb
mov
mov
test
sbb
dec
rolb
dec
insb
adc
outsl
mov
mov
push
das
imul
in
and
movsb
mov
out
call
pop
loopne
and
out
cmp
cmp
cmpsl
mov
adc
xchg
sub
jns
enter
out
scas
push
push
inc
mov
es
sbb
movsb
push
xchg
shlb
xchg
lock
push
cmp
addr16
aaa
popf
lahf
and
xor
scas
stc
and
inc
insl
mov
cmc
pop
into
pop
dec
negb
xchg
jne
adc
std
out
mov
mov
cmp
je
jo
sub
loopne
and
mov
repz
fldl
stos
adc
add
insl
mov
adc
xor
xor
sahf
xor
sbb
push
shll
adc
xchg
hlt
mov
pusha
mov
adc
sbb
inc
lds
adc
cmp
je
pop
sbb
adc
sub
fnstenv
ljmp
gs
imul
test
add
movsl
inc
pop
lcall
lahf
xchg
subb
data16
or
cmp
mov
xchg
cmp
pop
test
cmpsl
imul
sub
or
and
dec
insl
jg
pop
mov
repnz
repz
nop
fwait
jp
mov
ds
xchg
add
xchg
sbb
push
push
icebp
ret
xor
js
aad
sub
mulb
push
and
outsl
lea
stc
cmp
sbb
sbb
lcall
pop
inc
lret
and
loop
sbb
push
call
mov
data16
jmp
sub
mov
pop
inc
popf
pop
and
repnz
lock
pusha
push
add
stos
xchg
jle
jne
jl
pop
dec
in
inc
pop
push
nop
sbb
cmp
push
test
inc
adc
inc
mov
mov
mov
mov
mov
mov
in
lahf
iret
dec
jge
outsb
push
into
cmp
out
in
sub
cmpsl
mov
gs
pop
xchg
push
sub
icebp
mov
es
ss
sbb
lcall
add
and
pop
ret
gs
pop
sbb
jecxz
cwtl
dec
jnp
mov
sbb
not
push
lahf
jo
das
adc
mov
clc
inc
jns
push
jno
mov
daa
mov
push
movb
adc
movsb
ret
mov
mov
scas
sti
ret
adc
and
jae
sub
stos
stos
mov
sbb
scas
sbb
cmpsl
lcall
xchg
sub
push
rcrl
call
std
hlt
pop
cmpsb
fidivl
mov
lcall
fcomp
in
sti
mov
fsts
in
sti
cmp
icebp
orb
push
fmull
lods
mov
loopne
jl
aas
jle
pop
mov
adcb
dec
test
jnp
enter
xchg
xor
push
sub
testb
xor
or
arpl
decb
test
out
inc
mov
js
das
pop
sub
mov
xchg
cli
pop
in
mov
pop
pop
pop
andl
repz
jle
jp
ret
insl
mov
xor
lock
dec
addr16
aas
repz
pusha
mov
inc
pop
rcll
cmp
mov
mov
pop
jno
jne
fnsave
repnz
inc
in
aas
fldl
stos
push
jno
mov
mov
mov
dec
push
daa
pop
sti
repnz
arpl
stos
or
fildll
ficoms
and
cld
fwait
adc
into
pop
pop
test
fisttpll
pop
aaa
inc
les
dec
xor
cltd
jb
dec
lret
mov
jae
movsb
je
push
int3
jecxz
fnstsw
xor
mov
or
stos
adc
lea
push
or
jmp
or
std
inc
popf
cmp
or
inc
dec
in
sub
cmpsl
cmp
mov
fldt
enter
sub
mov
or
mov
orl
xorl
cmpb
scas
movsl
inc
pop
sbb
xor
insb
cmp
cmpsb
bound
sub
mov
and
xor
push
lea
xlat
cmc
aam
adc
ss
xorb
adc
jmp
xchg
xor
sub
imul
pop
mov
push
sub
pop
cmp
popl
mov
pop
mov
js
adc
xor
popa
clc
test
in
add
xor
or
mov
adc
lock
fs
jmp
stos
pop
and
ret
ret
scas
hlt
out
negl
jmp
and
loopne
xchg
ljmp
sub
std
lods
iret
sub
push
scas
or
cmp
fld
fisttpll
movsb
xchg
push
or
in
add
mov
sbb
test
repnz
pop
fsubrl
sub
insb
mov
or
push
mov
pop
adc
push
gs
xor
pop
movsb
in
xor
lcall
dec
sbb
gs
jne
dec
stc
stc
int3
xchg
sub
lea
fwait
dec
test
loopne
xchg
xchg
xor
jae
scas
push
mov
pusha
push
movsl
out
idiv
jo
sub
lods
sbb
dec
cmpb
sub
ret
dec
push
add
push
pusha
or
dec
sub
xorl
icebp
mov
dec
cld
pop
ljmp
test
add
insb
add
push
imul
ret
xchg
mov
cmp
ljmp
and
dec
jae
sbb
push
adc
mov
push
jg
push
jge
movsl
mov
int3
pop
pop
hlt
xor
roll
shrb
jne
dec
repz
stos
or
adc
sti
pop
in
sbb
pop
jecxz
clc
dec
outsb
xchg
movsb
inc
or
lods
inc
cli
aad
hlt
sarl
and
in
mov
mov
in
dec
test
adc
push
mull
ja
stos
inc
ret
aas
sbb
insl
ret
scas
into
add
pop
mov
jae
in
mov
xchg
rorb
mov
inc
sub
xchg
outsl
push
sbb
mov
xchg
add
lret
stc
pop
dec
add
daa
mulb
mov
outsb
loope
std
xchg
leave
stos
add
add
pop
insb
adc
adc
lock
mul
fnstsw
movsl
jno
inc
sahf
jne
test
cld
adcb
jo
std
xchg
test
lds
pushf
mov
movsb
les
mov
xchg
adc
dec
xchg
dec
xchg
out
pop
sbb
cs
cmp
cmp
outsl
leave
popa
xor
cmp
sub
nop
flds
mov
and
push
jae
loopne
scas
lods
mov
je
or
mov
mov
push
insb
pusha
enter
cmc
movsb
lock
cwtl
addb
adc
ja
loop
lods
mov
jbe
cmp
pop
and
out
pop
mov
mov
and
jnp
je
mov
in
inc
xchg
ds
add
dec
mov
xchg
enter
ret
adc
or
sarb
aaa
and
inc
daa
ljmp
jmp
or
and
stc
push
stc
fiadds
jmp
xor
mov
dec
sbb
mov
cwtl
sub
inc
pop
sahf
mov
mov
loope
das
push
pop
mov
adc
dec
data16
pop
sbb
dec
push
xchg
outsl
nop
push
mov
aaa
and
dec
cli
aam
add
or
add
not
pop
pusha
push
pop
ror
jae
ret
mov
mov
push
outsl
mov
xchg
lcall
cld
mov
sub
sub
sub
in
jle
jo
sti
stos
out
xchg
mov
jo
xchg
cmp
ret
xchg
insb
test
mov
lret
cmp
mov
mov
cld
adc
int
mov
jb
mov
xor
jl
addb
xor
xor
outsb
sub
sbb
ss
js
mov
mov
adc
pop
push
push
mov
mov
aam
and
imulb
pop
daa
push
sbb
cmp
adc
jne
adc
jb
stos
out
pop
or
sub
push
inc
dec
mov
add
xchg
dec
rcl
mov
fs
cmp
sub
cmpsb
inc
insl
fstl
or
mov
adc
cmp
jno
cmovo
test
sarl
dec
lods
daa
cmp
xor
outsl
sub
fdivrs
push
jl
pop
push
xchg
xchg
push
imul
stos
inc
jle
out
lcall
sbb
dec
sbb
mov
push
pushf
xchg
mov
loopne
pop
shll
dec
push
dec
imul
lds
sbb
jno
nop
cmp
cmpb
or
sbb
adc
and
stc
jecxz
adc
fs
jno
lods
fnstsw
and
daa
clc
hlt
adc
adc
xchg
iret
sub
sar
sbb
pop
out
or
cmp
dec
pop
popa
xchg
and
rcrl
roll
adc
mov
xchg
out
scas
ljmp
and
insb
js,pn
enter
xchg
jg
inc
mov
in
loop
sbb
inc
pusha
outsl
jnp
jg
and
mov
jmp
gs
daa
mov
movsb
je
cmc
xor
insl
jg
sbb
inc
pop
fnstenv
rcr
in
sar
or
mov
je
xchg
frstor
pushf
dec
add
jl
and
mov
push
inc
inc
sub
add
inc
jp
mov
sbb
mov
rcll
sub
add
adc
dec
sbb
pop
add
sub
jns
leave
jp
in
sarl
cmpsl
dec
fwait
pop
arpl
mov
inc
sarl
jle
jecxz
les
inc
scas
imul
jecxz
rcrl
mov
push
jge
clc
push
sub
mov
jg
fdivr
jne
sti
lcall
cmp
in
pop
inc
mov
out
sub
cmpb
jno
xchg
insl
xor
ljmp
and
mov
in
dec
pop
jl
cmp
shl
pop
cmp
xchg
inc
mov
stc
ja
pop
inc
sbb
sub
mov
into
xor
pop
stc
lcall
and
dec
test
mov
in
push
add
sahf
ss
mov
sub
ja
cs
mov
push
bound
inc
adc
xor
inc
roll
push
jbe
lret
adc
mov
leave
test
or
loop
aaa
cld
push
hlt
rcl
cmp
pop
pop
sbb
add
cld
mov
adc
and
cmpsb
je
jnp
je
xor
sub
xchg
dec
xchg
add
inc
icebp
call
sbb
nop
fstps
data16
push
xlat
cmc
fstps
xchg
int3
ret
fwait
pop
adc
or
xchg
mov
xor
clc
test
inc
nop
in
cmp
mov
dec
cmp
test
ficompl
divb
xchg
pop
lods
cmp
frstor
js
push
cmpsl
and
ret
jno
adc
or
das
pop
push
scas
jge
and
divb
call
fdivr
fidivl
pusha
push
push
call
ljmp
sub
mov
mov
xor
lods
lret
adc
lahf
in
in
out
dec
mov
fildll
sub
arpl
ret
stos
inc
iret
in
mov
add
jp
sbb
out
dec
int3
xchg
outsb
cmp
mov
jae
sahf
push
push
push
repnz
sub
dec
rol
jmp
push
mov
add
cs
mov
xor
int3
mov
jnp
mov
xor
jne
dec
jl
int3
shlb
inc
push
fisttps
jno
jae
cs
sbb
js
sub
idiv
sub
movsl
sarl
mov
aad
mov
enter
repnz
adc
pop
mov
es
addl
outsb
inc
rcll
and
mov
inc
lea
ljmp
jmp
inc
jbe
pop
inc
std
add
jge
xchg
xchg
cmp
shll
leave
xor
mov
xorl
mov
or
sbb
push
push
imul
mov
out
push
or
dec
popa
inc
xor
subl
mov
es
fdivr
jae
fidivrl
shll
xor
jecxz
into
in
es
xor
jge
mov
dec
iret
fcoml
test
mov
xchg
dec
jle
jno
in
pusha
fisttpl
or
lock
test
xchg
mov
mov
shr
pop
shl
aas
lds
loopne
repz
repnz
xchg
push
jge
jge
sub
mov
orb
addr16
rcr
jmp
pop
jns
add
adc
mov
cld
add
jg
inc
add
adc
imul
inc
jecxz
dec
lcall
add
les
leave
sub
cmp
pop
int
dec
ret
outsb
and
add
pop
test
xor
mov
fidivl
mov
xor
es
aam
lds
xchg
hlt
test
lret
outsl
jmp
pop
xchg
cld
insb
xchg
push
sub
pop
jmp
test
push
xor
add
ret
xchg
push
stos
ret
jno
jmp
imul
push
mov
add
std
mov
nop
imulb
cmp
fmull
aaa
sub
sbb
jle
sbb
nop
mov
imulb
js
test
add
cli
sub
pop
ret
fldl2t
jge
iret
les
insl
movsb
mov
xchg
mov
cld
xchg
stos
ficompl
mov
dec
orl
rcrl
adc
fists
inc
imul
dec
jg
test
cmp
test
movsb
sbb
add
lahf
icebp
pop
push
jl
sbb
jae
jle
imul
push
fstpt
xchg
fbld
jle
cwtl
sbb
pop
and
mov
adc
lea
sbb
sahf
repnz
pop
jmp
lret
iret
add
adc
rorl
clc
negb
pusha
mov
xchg
lds
movl
cmpsb
lds
push
lret
iretw
jg
sub
fildll
shlb
hlt
or
pushf
add
popa
rcrl
jecxz
xchg
scas
arpl
into
xor
sub
stos
cli
or
pop
xor
test
nop
mov
add
in
outsb
mov
ljmp
into
mov
cmp
sbb
xor
jg
gs
fildl
subl
das
enter
stos
adc
cmpsb
adc
test
cmc
lahf
fadd
addr16
lock
jl
in
mov
data16
sbb
add
sub
push
fbld
fimull
int
jno
cmp
std
add
sub
gs
orb
movsl
jbe
inc
mov
inc
test
hlt
test
mov
ret
scas
fdivp
mov
pusha
push
out
cmpsl
mov
cmp
test
lea
and
adc
mov
test
aam
adc
and
in
stos
mov
push
mov
sub
fstpt
pop
adc
add
add
and
and
jp
mov
and
pushf
ja
push
loope
testb
test
fdivs
sbb
mov
int
sbb
repz
movsb
fcmovb
rclb
dec
divl
add
inc
mov
push
inc
sub
and
or
aad
test
sbb
xor
cmp
pop
int3
scas
js
inc
pushf
jmp
dec
test
xor
xchg
mov
rcll
jae
adc
test
inc
jl
or
mov
ffreep
mov
mov
mov
push
cld
mov
int
add
outsb
pop
inc
stos
jo
pusha
mov
std
pushl
loope
lea
xorb
nop
fs
dec
and
jle
sahf
or
leave
or
jbe
iret
out
pop
add
pop
push
fildll
pushf
sar
adc
incl
cmpsb
add
fwait
jle
add
push
jl
cmp
xchg
dec
or
dec
clc
mov
inc
in
in
cltd
jmp
insl
or
cld
inc
or
dec
sbb
push
je
xchg
testb
jae
imul
lock
lods
mov
sbb
jp
out
and
loop
mov
adc
gs
out
mov
frstor
icebp
sub
add
xchg
loope
mov
in
add
add
mov
je
cmc
mov
ss
cmc
xchg
je
out
sbb
rcrl
sbb
sbb
insb
adc
int3
jno
repnz
inc
pop
mov
jnp
push
mov
mull
mov
xchg
sbb
or
push
dec
rorb
outsb
incl
or
cmp
nopl
push
push
xchg
and
adc
xchg
aam
xchg
lcall
inc
jbe
cli
sarb
inc
jno
mov
orb
imul
xabort
mov
movsl
push
push
shrl
es
inc
pop
push
bound
push
push
add
sub
mov
loop
xchg
adc
sub
rorb
insb
cltd
jecxz
jg
dec
add
mov
cmp
or
pop
es
sub
cmp
mov
fmulp
aaa
xchg
lret
mov
dec
add
fwait
push
add
adc
push
int3
lcall
jp
cmp
xor
add
out
sbb
sbb
dec
ror
adcb
repnz
in
in
std
push
mov
std
lret
adc
outsl
sbb
lods
iret
mov
push
push
xchg
mov
sti
jbe
sub
jae
imul
out
adc
les
inc
mov
test
test
inc
std
sbb
gs
repz
mov
cmp
in
mov
xorb
ds
mov
insl
and
lods
rcrl
imul
mov
loope
adc
shl
pop
mov
jb
fninit
iret
bound
ds
cmc
negl
adc
mov
xchg
fs
or
aad
jne,pn
push
xchg
daa
movsl
in
inc
xor
cwtl
dec
adc
out
dec
pop
hlt
mov
repnz
into
loop
adc
push
clc
xor
gs
xchg
enter
cmpsb
mov
mov
rcll
aaa
cmp
inc
std
shlb
and
scas
test
call
shlb
cmp
je
pop
xchg
pusha
or
jecxz
aas
jge
repz
in
pop
sub
lcall
sub
or
adc
mov
gs
out
popa
dec
je
adc
lods
fimull
cmp
int3
xchg
mov
jbe
jg
and
xor
sti
cmpsl
xchg
sub
or
add
jle
push
adc
and
push
out
nop
rorl
jne
jg
test
sub
sbb
fistpll
cli
in
leave
and
rcl
xor
test
pop
sbb
lds
rcrl
stos
adc
adc
int
cmp
mov
push
and
cmpsb
cld
xchg
fsubrl
xchg
push
shll
out
mov
inc
repz
lods
ds
mov
push
and
mov
adc
push
or
push
out
push
fnstenv
hlt
arpl
cmpsl
sahf
mov
push
mov
call
inc
add
test
sbb
mov
imul
xor
js
nop
btc
clc
pop
outsl
ret
cmp
icebp
addl
pop
push
cli
test
cld
or
and
pop
cmp
in
and
add
xchg
movsb
xor
pop
xor
mov
in
aas
pop
jp
loope
out
es
pop
int
das
adc
xor
jnp
sbb
or
iret
in
push
xor
outsl
pop
or
js
xor
subb
mov
mov
cmp
cmp
out
ja
fcoms
fsub
push
sub
mov
pop
sub
cmp
pusha
adc
test
pop
dec
js
repnz
mov
out
and
insb
adc
lods
aaa
pushf
push
lods
aad
pusha
cmp
mov
test
bound
insl
pop
mov
outsl
out
gs
insb
aaa
adc
loop
lret
aas
aad
decl
xor
mov
clc
sbb
adc
and
push
sbb
push
mov
xchg
loope
mov
lods
adc
shll
fdivrl
shl
xor
pop
jecxz
repz
rorb
jae
adc
test
jne
ss
mov
stos
test
test
aam
dec
ret
xchg
sbb
mov
fcompl
jg
fnstcw
or
loop
pop
sub
in
pop
jae
ja
cmp
fnstsw
jmp
jmp
movsl
adc
sub
pop
int3
lcall
jg
xor
out
jp
xchg
sub
fwait
outsl
mov
jno
mov
js
stos
cmp
shll
pop
insl
jge
fldenv
lods
test
mov
pop
shll
xor
xlat
push
daa
dec
add
aaa
dec
cmp
adc
mov
mov
fildll
testb
jmp
loop
out
add
test
outsb
fbstp
out
test
rorl
jno
out
cmp
inc
std
int
clc
xchg
shrb
out
mov
es
scas
cltd
push
lock
xlat
or
mov
sti
fs
inc
jne
in
jecxz
jae
pop
sub
mov
mov
adc
push
mov
inc
push
cli
popa
in
sub
in
movsb
mov
pop
iret
dec
adc
xchg
lahf
xchg
iret
fsts
sub
adc
popa
xor
lea
xor
sbb
add
repnz
mov
inc
leave
xchg
mov
pop
testb
inc
add
popa
scas
and
in
or
adc
ret
dec
cmp
out
add
jge
lods
mov
inc
lds
sarb
xor
cs
in
mov
movb
mov
jl
and
mov
xchg
inc
mov
xor
stc
lock
and
mov
hlt
loopne
adc
icebp
shr
sub
sbb
xchg
mov
test
xchg
pop
and
cmp
pop
call
or
pop
mov
mov
ret
sti
call
pop
outsl
insl
addr16
mov
int
mov
xchg
mov
data16
push
insb
lods
shr
pop
lret
pushf
jae
jmp
mov
enter
in
or
ja
pushf
dec
std
movsl
dec
bound
and
rsqrtps
dec
adc
xor
sarl
adc
aad
jge
xchg
and
lock
push
shrb
mov
out
xchg
inc
icebp
icebp
dec
fisubrs
insb
arpl
dec
test
repnz
out
sub
in
xor
addr16
scas
sahf
pop
sub
ret
dec
xor
cli
mov
insb
lea
or
std
fs
jb
int
fsubrl
xchg
push
adc
shr
jge
into
stc
mov
mul
mov
jns
add
je
cli
outsb
nop
sbb
xchg
add
dec
dec
xchg
push
cmpsb
sahf
mov
hlt
mov
jns
in
stos
push
movsl
dec
mov
aaa
mov
xor
jns
inc
push
xchg
rorl
add
loopne
ret
pop
pop
add
das
jmp
adc
test
in
cmp
dec
repz
aam
out
add
push
je
sbb
pop
cmp
mul
dec
xor
lcall
daa
push
cmpsl
and
gs
jge
push
imul
adc
mov
loope
rorb
shr
dec
mov
mull
sahf
jb
repnz
xor
adc
outsb
lcall
xchg
xchg
clc
hlt
addr16
mov
pop
ss
dec
lret
and
adc
or
sub
inc
add
mov
test
push
inc
ret
out
mov
dec
in
push
mov
jb
adc
daa
dec
dec
loop
jbe
arpl
subl
mov
and
cmp
insb
mov
add
shll
lret
insl
pushf
shl
xchg
std
push
pop
popa
imul
xchg
sbb
ja
dec
pop
sti
push
test
out
inc
xchg
fsubrs
cmpl
stos
cli
hlt
jmp
inc
mov
bound
push
mov
int3
lahf
jg
pop
or
cs
add
push
cltd
pop
jnp
outsb
shrl
add
into
loope
test
bound
subl
sub
inc
test
push
pop
mov
sub
aaa
inc
mov
mov
mov
std
mov
ds
addr16
call
and
xchg
jmp
mov
in
adc
imul
and
dec
mov
or
iret
int3
idiv
aaa
xchg
jmp
cmpsb
dec
sbb
stos
mov
int
sbb
daa
inc
popa
push
out
movsl
inc
mov
rcll
gs
das
add
out
enter
xchg
lods
movsl
add
lods
hlt
xchg
cltd
mov
mov
push
fdivrs
jo
xchg
pop
shlb
mov
int3
mov
jge
mov
lods
int
push
push
jge
lahf
push
repz
lods
push
out
fcomps
dec
push
inc
or
data16
ds
ss
iret
je
fsubp
test
adc
mov
mov
daa
mov
cmp
cli
cwtl
fimull
popf
lods
icebp
push
mov
out
mov
or
dec
add
lret
mov
dec
xchg
scas
popf
mov
out
and
pop
cmpsl
pop
jo
add
mov
ss
sarb
mov
cs
mov
cmpsb
mov
inc
cltd
out
mov
inc
jg
nop
out
jmp
popa
cmp
sub
dec
inc
lock
lret
dec
aad
cmc
sbb
push
cs
ds
sbb
push
add
sbb
sub
add
mov
cmp
jnp
dec
jle
notl
mov
cld
imul
push
js
jns
xor
loop
dec
mov
cmp
mov
imul
dec
push
xorl
es
scas
cmp
inc
xor
repz
xorb
mov
inc
mulb
mov
push
cltd
lret
xchg
and
pop
loope
xchg
dec
lock
jp
scas
and
ljmp
pop
sbb
xchg
jns
cmc
xchg
adc
jle
lock
icebp
popa
in
push
sub
xor
jnp
jmp
push
arpl
es
sbb
test
sbb
lods
data16
xchg
setne
dec
cmp
insb
mov
insb
mul
stos
inc
dec
repz
mov
push
mov
sarl
adc
insb
ss
ret
xchg
and
fidivrl
roll
jno
sub
or
jo
ret
sub
jns
test
stos
ficoml
shl
hlt
gs
fldenv
adc
shlb
push
and
call
cmc
loop
insl
aad
push
insb
subl
outsl
xor
cmpsb
ficompl
aaa
lds
int
mov
xchg
cs
xchg
sbb
bound
xchg
sti
jb
pop
pop
out
push
sub
jmp
push
or
mov
minps
cmpsl
add
inc
mov
insl
fbld
push
hlt
inc
pop
outsl
aas
outsb
movsb
rcrb
sub
cmp
dec
lock
inc
jmp
stos
insb
out
insb
enter
ret
mov
mov
in
adc
xchg
sub
mov
xchg
sub
push
leave
mov
rcll
push
inc
push
adc
or
test
notl
imul
mov
inc
xlat
pop
ds
pop
dec
push
adc
js
mov
lahf
fisttpl
mov
add
sbb
lret
pop
dec
pop
aas
or
jp
or
inc
push
dec
adc
cmp
dec
stos
mov
andb
scas
gs
mov
scas
aas
sub
cli
mov
std
std
adc
sbb
outsb
and
push
pop
push
or
xlat
mull
movsl
adc
adc
jne
jno
es
mov
es
push
mov
imul
jecxz
add
adc
mov
or
or
adc
cmp
mov
out
arpl
mov
adc
mov
push
adc
lds
xchg
arpl
mov
push
aad
push
or
cli
jbe
xchg
shl
inc
mov
add
xor
pop
adc
out
adc
cmc
fcmovnb
loop
xchg
cs
daa
and
shll
and
cmp
cmp
xchg
les
mov
mov
mov
push
pop
mov
std
sub
jg
mov
jp
out
fbld
mov
or
push
ficompl
cmpl
ss
cmp
add
sbb
shrl
add
rorb
dec
loope
pop
fsts
add
lret
inc
and
vpmacsswd
leave
dec
push
dec
push
lret
xchg
or
pusha
sub
xchg
mov
inc
lret
fnsave
xchg
pusha
push
enter
shr
jb
repz
mov
add
add
xchg
push
lret
mov
xchg
fcom
test
test
xlat
push
sbb
xchg
inc
and
push
bound
fsubs
aam
cmp
push
push
pop
fmulp
scas
js
xlat
dec
rcll
or
dec
test
add
les
push
mov
xor
lcall
imul
clc
xor
shrl
stos
sub
cmc
stos
in
push
test
rol
and
bound
xchg
mov
jge
mov
xchg
push
insl
and
cli
je
cmpl
xor
into
jo
and
xchg
cmpsb
sarl
ret
lea
cmp
mov
inc
stos
shll
xlat
xlat
pop
imul
jne
ljmp
sbb
sub
mov
test
jbe
add
pop
jge
mov
xlat
loop
aas
mov
enter
outsb
pushf
fmull
dec
and
stos
cmp
loop
xchg
mov
aaa
jge
popa
pop
test
pusha
adc
orl
sahf
fldcw
insl
inc
push
jp
fwait
jp
fisttpl
js
sbb
mov
pop
andl
xor
xchg
jmp
and
mov
nop
daa
lret
out
leave
adc
mov
jno
loope
mov
shlb
bound
aaa
mov
fnstsw
test
lret
ljmp
cmp
jae
xchg
xchg
jl
pop
scas
fisttps
cmp
ljmp
pop
or
repz
pop
inc
addr16
xlat
enter
xor
in
cmp
sbb
or
mov
push
jnp
xlat
out
shll
sarb
es
cmp
les
add
in
add
das
lock
stos
sbb
scas
adc
inc
jle
dec
or
sub
pop
mov
int3
into
aaa
cmp
rorb
sub
cld
mov
sbb
adc
or
rcrb
push
add
cltd
adc
inc
push
mov
in
pop
mov
std
sub
mov
jbe
or
cmp
mov
mov
fisttpl
push
jno
push
stc
scas
nop
sub
jle
aas
mov
adc
mov
push
mov
jmp
pop
dec
dec
sbb
loope
jge
jne
jecxz
mov
cmp
fnstenv
and
lods
mov
jb
add
daa
bound
cmp
sahf
mov
fwait
pop
adc
cmp
jo
fdivl
jbe
mov
insl
js
sub
xchg
icebp
daa
add
fstpl
mov
cli
push
jp
or
cmp
jecxz
xchg
mov
jg
mov
mov
aam
test
andb
push
imul
jae
cltd
mov
sbb
aam
inc
push
test
jl
xor
push
adc
lds
jp
into
dec
stc
dec
add
scas
dec
xor
cmp
push
stc
push
adc
pop
pop
int
stos
xchg
push
out
mov
pop
mov
pop
clc
mov
cli
xchg
pop
sbb
xorl
cmp
fistpll
js
jmp
loop
sbb
ficoms
sbb
call
push
xchg
mov
jbe
movsl
jo
btc
dec
jmp
hlt
inc
popf
lods
mov
pop
pop
jecxz
pop
jecxz
aad
add
or
dec
in
stc
aaa
out
fwait
js,pn
jb
mov
ljmp
or
mov
mov
movsl
push
xchg
add
test
in
mov
mov
int3
aam
aaa
outsb
adc
push
jno
mov
xchg
aas
roll
push
sbb
les
xchg
push
lea
es
jle
test
and
dec
push
test
mov
in
daa
aaa
sar
lock
sti
stos
pushf
data16
fcoml
int
fs
xchg
ds
test
stc
lods
xor
in
fsub
mov
and
rcrl
jb
mov
dec
sub
mov
xor
movsl
jecxz
push
mov
cmp
pusha
sbb
inc
gs
and
mov
cs
push
popl
sarb
jo
jno
push
pop
stos
adc
push
or
pushf
dec
les
xor
fs
or
push
xchg
push
or
xchg
lahf
and
movsl
sbb
negl
dec
adcb
stos
xchg
mov
shll
push
out
lock
jmp
aaa
lret
idiv
mov
dec
pop
push
xor
xchg
leave
cwtl
and
je
inc
dec
rcr
push
arpl
mov
mov
add
mov
rclb
pop
pop
inc
sub
je
arpl
push
mov
call
jecxz
mov
mov
lea
mov
xchg
aam
mov
inc
mov
out
add
lea
jns
aaa
or
mov
lret
in
les
mov
push
jge
ja
push
cmp
sub
and
bound
ss
mov
jle
lret
inc
ret
jb
mov
inc
cmp
jle
in
cli
adc
sbb
cmp
stos
xchg
repnz
sub
mov
cmp
sbb
jge
in
adc
mov
xchg
std
mov
xchg
dec
loop
sub
jl
inc
je
xor
pop
mov
and
je
xor
mov
call
les
mov
dec
push
addb
inc
sub
pop
insl
lahf
mov
cmp
imul
mov
xor
outsl
and
sbb
inc
imul
mov
xchg
xor
add
ss
jb
dec
mov
or
fisubs
leave
js
subb
cmpsl
cmp
test
or
and
push
rorl
data16
jae
xor
cmp
and
push
aaa
xchg
mov
inc
push
pop
loope
lods
mull
repnz
loop
add
mov
xchg
xchg
and
pushf
ss
repnz
loopne
xchg
pop
fiaddl
data16
cwtl
inc
and
call
in
and
push
stos
rol
or
rol
inc
or
int3
cmp
mov
test
stc
insl
mov
gs
sbb
cmp
scas
pop
lret
into
sbb
push
out
iret
pop
xchg
enter
add
pushf
cld
testb
cmp
fldt
or
fists
mov
andl
cmp
mov
adcb
mov
mov
into
lret
fcoms
sub
icebp
dec
mov
scas
data16
sahf
mov
xor
loop
push
xchg
fsubrl
xor
shll
add
ret
lock
sti
jnp
shr
jp
enter
jmp
adc
imul
pop
js
stos
cmpsb
or
push
jno
movsb
lock
out
ret
sbb
inc
jnp
shll
or
notl
ror
mov
ja
into
push
push
cwtl
add
or
je
mov
std
sahf
or
add
push
fldt
sbb
sbb
xor
ljmp
ss
xchg
sbb
mov
pavgb
cmc
rclb
mov
push
dec
push
pop
cmp
cmp
mov
xor
mov
loop
pop
pop
pop
push
xorb
leave
sub
cmpsl
xchg
and
imul
arpl
pop
cmc
add
pop
jnp
cld
inc
js
jbe
or
loopne
xchg
mov
dec
fnstsw
mov
add
jo
sahf
mov
je
mov
insb
sub
sbb
pop
movsb
lret
lea
fisttpll
roll
xchg
in
cmpsb
jecxz
or
mov
jmp
xchg
lret
mov
mov
and
jg
dec
push
aam
imul
mov
jmp
iret
ret
xlat
mov
and
add
adc
adc
inc
aas
addl
int
lea
cmp
sahf
cmp
and
mov
sbbl
fnsave
and
loope
and
cs
mov
ss
jno
jns
mov
xchg
push
fwait
or
pusha
hlt
add
jbe
xchg
lahf
out
cmp
and
pop
xchg
scas
scas
or
fcompl
push
adc
sub
cli
dec
mov
jg
and
or
sahf
mov
lret
jg
xor
test
or
test
inc
aad
cmp
jns
fcmovbe
ljmp
jno
fbstp
mov
adc
cmp
out
sbb
cs
jo
rol
mov
leave
ret
mov
and
xchg
ret
mov
das
sub
aam
mov
hlt
or
mov
jmp
rcrb
push
sub
jb
and
dec
jg
fstl
jne
pop
loope
test
cmpsb
mov
fs
lods
and
out
inc
push
pop
pop
inc
pop
icebp
lods
inc
cmpsb
xor
ja
xchg
adc
lret
xor
out
sarl
cmpl
pushf
push
cli
std
dec
xor
mov
cmc
cmpsl
mov
outsb
dec
xor
xchg
mov
mov
scas
test
push
add
or
fsubrl
lcall
xchg
dec
push
jmp
push
dec
scas
push
mov
ret
inc
jbe
mov
push
mov
nop
sbb
movsb
xchg
cltd
cmpsw
fisttpll
push
sbb
aas
in
outsb
popf
inc
fists
sahf
cmp
in
test
icebp
cwtl
call
sbb
popa
enter
out
lods
loop
push
pop
and
ret
xlat
cmpsb
test
jp
mov
dec
inc
lahf
and
push
xchg
mov
mov
in
dec
dec
pop
mov
jecxz
stos
or
out
and
addr16
dec
push
push
sub
push
sbb
cmpsb
pop
sbb
aam
mov
or
push
xor
xchg
mov
leave
adc
mov
out
mov
hlt
stos
mov
sbb
lcall
gs
dec
lea
fldt
aaa
outsl
push
xor
cmpsb
popa
adc
into
gs
aaa
mov
sub
dec
icebp
dec
adc
mov
clc
pop
pop
dec
shl
mov
stos
xor
jp
fsubrl
fmulp
push
add
dec
lock
xor
sbb
dec
xchg
mov
adc
adc
into
pushf
lea
gs
xchg
lds
repz
sub
pop
daa
add
jp
mov
adc
leave
into
mov
rorb
jecxz
sti
mov
movsl
sar
popf
inc
cmp
loopne
insb
cmp
stc
insb
out
addb
pop
mov
fdivs
jecxz
leave
repnz
sahf
in
sub
dec
sub
je
fucomi
inc
sbb
outsl
loop
mov
adc
xbegin
test
or
dec
lods
sub
es
inc
mov
ja
add
ljmp
and
mov
dec
pop
xor
xchg
stos
dec
lret
mov
mov
int3
cmp
out
movsb
inc
or
fs
fnstenv
mov
fsubrp
jo
sub
sub
add
mov
js
cmp
les
cli
addr16
rcr
cld
sub
mov
jae
sbb
xor
mov
imul
adcl
clc
es
aas
out
imul
addr16
and
inc
sub
lods
pop
jnp
gs
inc
dec
sbb
adc
xchg
loop
movq
lods
out
jp
mov
out
lret
pop
sti
pop
inc
daa
jmp
mov
sbbl
daa
stos
dec
je
mov
xchg
inc
imul
inc
xchg
mov
out
out
shrb
incb
push
fnstsw
sti
adc
test
xchg
hlt
push
dec
les
lods
xor
movsl
push
and
and
stos
add
inc
mov
daa
push
shlb
jbe
mov
mov
sub
incb
ds
lods
call
mov
xor
daa
arpl
lods
sub
jl
mov
imul
ret
int3
xchg
xchg
sti
xor
je
bound
insl
icebp
insb
push
mov
push
xchg
sti
es
inc
rolb
xchg
inc
decl
jg
mov
lret
adc
xor
fdivr
push
pusha
or
sti
lea
lahf
js
jg
lcall
outsb
inc
std
sbb
xchg
enter
dec
adc
sar
xor
jge
mov
in
dec
idivb
pop
or
imul
popf
in
xchg
ret
mov
cltd
ja
incb
or
or
add
imulb
dec
insb
push
js
pop
jecxz
xlat
test
stos
sub
loop
xchg
rcr
pop
mov
xor
mov
xchg
jge
dec
les
mov
cld
leave
jle
pusha
push
mov
dec
cltd
xor
jo,pt
stos
sub
fstl
add
cmpsl
and
pop
push
scas
and
pop
adc
or
and
mov
loope
lea
sub
pop
dec
pop
movsb
adc
mov
sub
inc
int3
icebp
idivb
lock
mov
adc
xchg
xchg
insb
push
std
pop
add
mov
push
push
sub
mov
in
adc
mov
xchg
jle
mov
icebp
mov
jle
lret
adc
enter
or
and
push
or
pop
add
out
popf
js
aad
mov
cmp
outsl
add
or
popa
push
push
outsb
add
add
cmp
sub
test
mov
punpckhdq
sbb
cmc
dec
lods
mov
and
jnp
or
stos
cmp
inc
or
push
jo
test
test
shl
push
jbe
inc
ror
ret
arpl
mov
cmp
sub
pop
push
push
sub
je
fstpt
mov
stos
push
xchg
mov
scas
rcll
fistl
push
movsl
pop
inc
pop
push
jmp
push
cmovns
sub
cmpb
pop
mov
mov
les
pop
or
mov
xchg
iret
mov
push
pop
mov
dec
adc
lcall
daa
adcb
sbb
cmpl
mov
outsb
insb
pusha
and
adc
mov
bound
popf
inc
dec
out
pop
adc
test
jbe
or
int3
pop
js
adc
jge,pt
adc
add
jae
cmpsl
mov
movsl
int
add
sahf
les
add
mov
jns
jbe
sub
xchg
mov
icebp
fldt
test
lahf
pop
xor
push
adcb
das
xor
stos
je
push
mov
jle
pusha
xor
xchg
ja
out
stos
jp
imul
add
dec
mov
xor
inc
or
rolb
mov
mov
dec
jmp
js
xchg
loopne
ljmp
pop
in
adc
jns
mov
mov
sbb
push
mov
leave
aad
pop
cmp
lret
ds
ss
or
fmulp
sbb
adcl
outsb
cmpsb
ds
mov
in
mov
repz
je
rorb
insl
inc
test
xchg
movsl
sbb
jmp
sub
jmp
out
lds
das
add
je
cmp
dec
roll
adc
push
dec
jo
into
imul
xchg
stos
andl
or
inc
push
pop
xor
js
jbe
push
outsl
mov
enter
jne
jmp
inc
cwtl
xor
or
xlat
loopne
shl
xchg
notl
inc
stos
cmpsb
out
adc
clc
mov
imul
inc
and
repnz
in
and
lcall
cs
sbb
lods
in
cmp
jno
adc
cmp
cltd
out
jno
xor
lods
sub
pop
fwait
js
mov
mov
adc
mov
mov
shlb
dec
push
jp
in
mov
mov
lret
xchg
clc
push
ficompl
jle
mov
pop
cmp
push
inc
imul
jb
loop
loope
mov
repz
push
dec
xchg
xchg
loope
lock
or
lret
cmpsl
cmp
cltd
popf
inc
nop
popf
movsb
inc
clc
xor
xor
aaa
test
sub
jne
stos
xor
addr16
jo
inc
popa
cmc
sub
imul
or
stos
sbb
cmp
popa
icebp
movsl
cs
mov
jle
pop
in
ljmp
push
mov
jmp
push
cmp
sbb
sub
push
xor
stc
andl
cli
and
in
lahf
rolb
out
stos
ja
jmp
mov
mov
jns
loop
cmp
and
lahf
or
mov
push
jbe
jp
adc
out
faddl
rcrb
sub
adc
int
jb
and
test
int
jl
inc
sarb
les
inc
iret
adc
loop
jmp
cmpsb
cltd
pop
push
int
jb
sub
int3
jmp
xchg
in
jl
fadd
mov
loop
dec
ja
add
fsubrl
inc
mov
popa
aas
xor
mov
add
cli
adc
cmp
mov
adc
repz
dec
pop
cld
mov
wbinvd
pushf
jl
cmp
jl
dec
xor
arpl
sbb
sub
loop
mov
test
jne
jp
ror
mov
jmp
inc
out
je
mov
mov
inc
mov
xchg
gs
xchg
push
dec
lds
cmp
subl
scas
add
adc
mov
xor
push
iret
roll
ja
ljmp
imul
lods
in
sarb
movsb
aam
in
lds
and
dec
aam
cwtl
sbb
xchg
mov
sbb
mov
and
fnstcw
cmp
dec
jecxz
push
dec
fldcw
adc
popf
cmp
push
jle
sub
js
addr16
bound
jne
xchg
jo
cmp
sbb
pop
lret
inc
movsb
test
cwtl
sbb
jl
ret
mov
xlat
push
sbb
mov
out
mov
mov
lret
pop
mov
daa
mov
adc
mov
cmpb
enter
adc
inc
das
fxch
dec
ret
sbb
repnz
pop
mov
and
andl
dec
push
mov
xor
enter
test
cmc
notl
cmp
nop
mov
push
pop
lret
jle
ret
fistpll
or
cmc
gs
and
sahf
insl
and
lods
int3
pop
or
inc
xor
or
je
out
inc
cltd
xor
xchg
sub
sbb
popa
loopne,pn
ljmp
xchg
bound
mov
pop
cmpl
and
lret
cltd
mov
ret
jg
nop
cli
adc
test
out
shll
jle
mov
xor
push
pop
movsb
cmp
lea
je
fwait
test
mov
mov
cmpsb
pop
pop
stos
mulb
and
ss
imul
add
stos
add
arpl
ljmp
aaa
jae
scas
or
int
and
xchg
mov
xchg
into
or
push
sub
mov
mov
dec
mov
fstps
dec
pop
cmp
cltd
sbb
xor
mov
nop
dec
fcmove
idiv
xchg
repz
out
adc
push
dec
mov
sbb
sub
jno
pop
mov
push
and
xlat
repz
pop
or
scas
jnp
xchg
dec
mov
loop
flds
das
sbb
gs
mov
cmpsb
mov
and
adc
add
call
into
daa
sti
out
hlt
dec
test
hlt
aaa
in
imul
add
cmp
push
gs
sub
push
fs
pop
xchg
cwtl
fistpll
pop
cltd
and
flds
push
inc
or
repnz
xor
xor
adc
sub
and
dec
xchg
xchg
int
sub
fidivl
cs
loope
jecxz
mov
or
dec
daa
pushw
lcall
pop
mov
stc
xchg
pop
aaa
inc
and
push
pop
outsb
cltd
in
jne
jg
dec
into
push
in
lea
in
pop
mov
lret
adc
sbb
jl
adc
xor
adc
out
test
mov
add
addl
inc
push
or
and
popf
outsb
je
jo
and
fwait
cmp
outsl
ss
mov
cmpl
push
imul
xor
iret
dec
mov
mov
ret
pop
pop
inc
mov
bound
enter
pcmpeqd
jle
mov
dec
push
mov
mov
nop
lcall
subb
and
jnp
jb
cmp
xbegin
sub
fs
test
inc
leave
jg
mov
ljmp
jns
mov
std
in
imul
and
cmp
mov
add
add
adc
jle
addb
cmp
fsubs
push
pop
cmp
mov
pop
cmp
inc
mov
jne
cmp
fs
add
clc
outsl
iret
inc
test
mov
cmpsl
xchg
and
xchg
ds
mov
mov
adc
arpl
leave
jmp
adc
lea
add
insb
pop
pop
sbb
iret
arpl
out
xlat
adc
mov
mov
add
test
je
jmp
idivl
lds
jmp
mov
and
repz
lods
andb
outsl
shl
push
int3
fistpll
test
call
movb
cmp
sub
jl
popf
insb
je
lock
jle
imul
jbe
icebp
out
sahf
mov
cltd
call
dec
inc
push
jns
cmp
popa
mov
fsubl
std
sbb
mov
sub
insl
gs
stos
js
out
sub
dec
shrl
xchg
lock
cwtl
xor
and
outsl
int
xchg
inc
inc
push
push
pop
aaa
mov
popw
stos
enter
pop
push
jno
dec
sub
push
addr16
mov
movsl
andl
jbe
mov
outsb
mov
mov
jbe
push
pop
and
out
loop
push
mov
mov
add
and
shrl
in
pop
into
push
jg
sqrtps
gs
testb
sub
xchg
mov
lods
add
and
mov
loopne
les
insb
sub
xchg
cmpsl
xchg
scas
fs
in
shl
dec
fcomps
push
sbb
mov
test
or
adc
or
push
jne
es
test
negb
shl
mov
pushf
aad
pushf
mov
push
leave
sub
cmp
adc
in
test
mov
add
insl
push
jecxz
fidivrs
movsl
sbb
cmp
pop
lea
rcll
clc
jbe
sub
mull
cmpsl
loop
or
adc
and
nop
stos
push
mov
or
push
xchg
jne
add
in
and
pop
mov
jo
sbb
das
lods
xchg
inc
sub
stos
cwtl
push
out
jne
shll
adc
xchg
sahf
test
inc
or
inc
sbb
cmp
outsb
stos
mov
repnz
jmp
scas
push
add
mov
or
addr16
dec
xchg
add
or
cmp
pop
cmp
mov
adc
imul
add
mov
pop
icebp
sbb
jge
or
ljmp
adc
add
data16
lods
lret
add
jno
dec
mov
sub
sub
scas
loopne
test
xor
lret
ds
incb
mov
out
aam
fnstenv
mov
fldenv
xchg
scas
arpl
jne
add
and
push
push
sbb
push
mov
cmp
push
fisttpll
in
mov
mov
push
sarl
mov
cmp
popa
jg
jo
fistpl
inc
jns
jl
sub
mov
add
icebp
mov
loopne
and
imul
or
pop
add
rcl
cwtl
pop
xlat
cmp
inc
jbe
daa
mov
cltd
fistps
mov
mov
andl
mov
pop
out
fcompl
movsl
and
jecxz
lds
sbb
subl
mov
jle
add
dec
faddl
cmp
mov
push
xchg
xor
mov
rorl
scas
add
enter
subl
lret
insb
cmp
out
adc
shrl
adc
lods
out
repnz
cmp
and
pop
pop
xchg
or
cltd
addr16
loope
jo
je
shr
and
or
outsb
ja
mov
dec
push
cmp
nop
sti
inc
loope
in
cmp
mov
and
lods
shr
jns
mov
add
push
cmpl
data16
leave
mov
js
jle
movhps
sbb
jns
cmpsl
je
jmp
add
push
out
stc
add
stos
out
rcll
pop
pop
push
push
mov
scas
ja
sbb
cmc
int3
push
xchg
shlb
push
mov
clc
add
loope
std
test
out
std
xor
scas
addr16
inc
mov
pushf
nop
mov
call
das
inc
jl
xchg
push
dec
bound
xchg
cmpsl
arpl
add
aas
and
in
sbb
jge
in
lret
pop
xchg
scas
push
pop
pusha
mov
out
test
xchg
mov
sar
lahf
fwait
xchg
popf
xchg
imul
xlat
adcl
sbb
dec
inc
cmpsb
push
enter
pusha
xlat
xlat
xchg
inc
in
out
inc
inc
mov
or
push
xchg
or
dec
mov
imul
and
pop
adc
mov
aam
adc
or
andl
imul
test
sti
jl
daa
cltd
jo
faddl
xchg
in
test
dec
test
out
leave
roll
ds
jbe
jecxz
fdivrs
xchg
and
data16
xchg
add
xor
sti
lds
and
in
push
ss
bound
scas
mov
jmp
cmp
mov
push
mov
call
jecxz
xor
repnz
add
out
ja
jge
std
roll
add
jg
and
cmp
ficomps
nop
sub
stc
jp
jl
mov
and
jbe
sbb
je
lret
mov
xor
lret
add
test
cs
lret
push
test
jns
dec
dec
and
sub
fcmovbe
dec
mov
pop
xlat
ja
int
xchg
out
pushf
or
arpl
repz
in
jp
mov
sub
mov
fsubrs
jmp
outsl
mov
scas
adc
out
pushf
gs
fs
mov
pushf
shll
scas
push
mov
jg
cmp
push
pop
dec
xchg
fsubs
outsb
dec
sub
or
and
call
mov
inc
ret
insb
cmp
fiadds
sub
sbb
mov
xor
push
push
movsb
inc
das
pop
add
mov
mov
mov
dec
fnsave
jp
jae
sub
or
adc
into
frstor
mov
int3
insb
jns
jae
mov
cmp
pushf
dec
mov
jmp
fstl
mov
push
mov
sahf
add
sarb
or
pop
lds
and
push
xor
hlt
sti
and
int3
xchg
aaa
sti
pop
jns
and
mov
iret
adc
loop
int3
jbe
mov
test
and
enter
push
add
in
lahf
mov
xchg
imul
inc
gs
or
sub
rcr
in
in
mov
add
adc
sbbl
jg
ret
jno
pop
add
cli
jne
ljmp
push
dec
mov
inc
fidivrs
mov
push
mov
add
cltd
gs
arpl
daa
shll
aaa
cld
xchg
mov
je
xchg
cmp
inc
aam
test
notl
or
dec
adc
aad
jmp
arpl
mov
add
test
fdivl
jl
lret
or
je
push
movsl
jp
mov
mov
insl
pop
sub
pop
push
cmp
sti
int
lret
jb
clc
dec
mov
xor
arpl
lcall
jp
ljmp
adc
or
or
fwait
and
fadd
sub
pushf
fcom
jp
aaa
scas
mov
sub
frstor
in
fsubp
add
out
jg
sbb
pop
and
test
sub
jb
in
pusha
insl
xor
sub
inc
push
cmp
mov
mov
cmp
xchg
mov
out
cmp
movsb
in
in
aam
dec
jbe
add
add
ss
add
out
mov
cld
call
mov
sub
testl
popf
popf
jne
lret
lcall
fcoms
push
pop
jge
jg
push
add
int3
hlt
in
mov
mov
ror
xorb
or
sti
xor
or
xorl
jmp
popa
sub
dec
outsl
daa
jecxz
out
jle
pop
aad
cmp
add
mov
pop
xchg
loopne
rorl
mov
add
cld
sbb
add
adc
inc
push
shrb
mov
dec
add
scas
cli
leave
hlt
sub
xor
icebp
xchg
push
lock
dec
mov
stos
aaa
inc
lret
mov
jl
jg
xor
dec
rorb
push
out
push
das
in
xlat
jo
popf
mov
mov
icebp
lock
xchg
add
sbb
shlb
insl
jae
leave
shrb
movsl
jns
xlat
fsubs
sbb
dec
push
scas
mov
fistpll
cmpsl
fnsave
push
mov
clc
out
pop
fstpt
repz
ffreep
imulb
pop
scas
in
jge
mov
jecxz
adc
xor
dec
scas
insl
and
ffree
int3
insl
fstpl
ficompl
jle
jmp
or
shl
xchg
daa
jno
mov
test
push
outsl
lea
jns
inc
es
sbb
out
sti
mov
push
loop
test
adc
scas
push
repz
sahf
sahf
xchg
out
xorb
out
test
inc
and
mov
call
fmuls
int
rclb
imul
js
cmp
dec
xchg
in
lahf
mov
and
mov
jecxz
xlat
jp
and
jl
cmpsl
outsl
repz
test
bound
call
or
mov
sti
mov
mov
and
stc
popf
negb
fisubl
jmp
mov
jmp
xchg
push
xchg
cmp
adc
flds
in
push
dec
xchg
xor
xchg
sahf
es
pop
jb
ss
mov
jo
cmc
add
xchg
cmp
fldcw
pop
outsl
cmpsb
push
loopne
xchg
sub
sbb
stos
mov
std
pop
push
mov
lret
repz
divb
jns
inc
add
cmp
cmpsl
jle
xlat
stc
sbb
mov
adc
push
loope
mov
xor
and
adc
nop
fwait
dec
sub
shlb
rolb
stc
add
jge
fdivs
or
push
mov
in
xchg
out
sbb
out
mov
hlt
add
js
mov
sub
mov
pop
pop
in
rcrb
inc
outsb
out
fiadds
int
std
xor
adc
push
cli
mov
aaa
cmp
mov
in
jns
xor
int3
xor
dec
push
xchg
iret
lcall
cmpsl
xchg
leave
inc
into
add
sub
popa
cmp
push
jl
pusha
mov
mov
cld
lds
dec
les
mov
fistps
in
xor
xor
adc
jecxz
scas
out
dec
jmp
mov
insl
inc
outsl
pop
cld
ljmp
xor
add
bound
pop
testb
xchg
lret
mov
or
negl
mov
hlt
stos
pop
push
lea
adc
mov
dec
adc
repz
stos
or
xchg
mov
xor
sub
mov
cmpsl
and
mov
sti
daa
pushf
pop
inc
adc
cmp
cmp
xchg
inc
pop
add
orb
ds
or
jg
mov
insl
cmp
lea
mov
cmp
ds
fsts
adc
pop
adc
aad
test
imul
xchg
cwtl
inc
xchg
mov
xchg
jg
cmp
in
in
fadd
iret
jb
pop
out
mov
lret
mov
adc
jle
fsub
jecxz
pop
push
jns
pop
fisubs
pop
mov
jne
inc
add
or
pop
jge
or
insb
movsl
sbb
jecxz
mov
scas
add
nop
xor
int3
and
inc
inc
lea
mov
push
pop
mov
sar
pop
or
xchg
mov
xchg
sti
enter
xchg
les
dec
shl
ja
xor
popf
addl
push
cld
mov
cvttps2pi
stc
xchg
pop
fistpll
pop
int
sbb
xlat
cmpsl
or
inc
imul
cwtl
sub
cmpb
and
fstp
lds
repz
jns
lret
cmp
inc
push
pop
or
cmpsl
pop
cld
push
fmuls
add
jo
cld
adc
lret
xlat
outsb
aas
xor
mov
pop
push
push
sbb
xchg
insl
xchg
out
mov
popa
mov
arpl
cmp
daa
pusha
mov
cli
dec
jnp
arpl
xchg
rclb
mov
jb
jne
divb
sub
movsl
add
fiadds
stos
adc
inc
xor
adc
dec
mov
mov
js
and
aam
repz
mov
xorl
or
mov
cmp
stos
adc
and
adcb
into
xchg
sahf
insl
or
dec
mov
in
push
xor
in
push
les
cmp
adc
ror
dec
sub
mov
test
mov
test
add
inc
inc
push
push
jo
jp
test
daa
mov
cwtl
jbe
js
pop
lea
adc
out
jo
dec
or
bound
mov
xorb
jp
loop
pop
push
pop
push
jp
xchg
popl
fstpt
add
or
pop
cmpsl
dec
sub
jmp
push
aad
jne
pop
mov
data16
rcll
repnz
popf
lret
cmp
jecxz
into
fwait
xchg
cmp
add
subb
dec
loope
or
movsl
dec
sub
fisubrl
mov
iret
ja
and
out
cmp
pop
rcrb
xchg
scas
mov
out
sti
popa
or
outsb
sub
cmp
aam
or
push
inc
cld
orl
incl
xor
and
into
sarl
in
leave
rclb
mov
lea
lahf
das
cs
clc
cmpl
xor
shll
add
mov
cmc
ljmp
push
and
lock
or
or
mov
xor
int3
inc
ss
aad
cli
testl
xchg
rclb
mov
xchg
mov
mov
into
hlt
cmpl
sahf
out
jns
inc
dec
or
jmp
into
stc
and
insb
icebp
jle
scas
sbb
ret
and
cli
das
xor
lea
sbb
xchg
sbb
or
cmpsb
nop
stos
enter
jb
mov
repnz
xchg
enter
fsts
mov
and
aaa
pop
neg
cli
jo
fwait
cmp
jge
arpl
push
jo
sahf
dec
cld
or
es
mov
mov
outsb
and
push
test
push
popf
inc
scas
add
leave
push
push
out
push
ret
sub
xlat
addl
inc
dec
out
into
fnsave
popf
dec
test
mov
pop
xadd
pop
mov
lahf
je
pop
out
cmp
sbb
into
sub
mov
pusha
adc
pop
mov
sbb
ja
mov
ja
pusha
mov
iret
adc
sbb
push
sub
add
rcrb
xor
adc
mov
lahf
xor
mov
mov
fs
mov
mov
std
push
and
jbe
popaw
ljmp
ret
repnz
xor
in
jne
xchg
out
dec
das
mov
dec
fistps
shrb
int
add
icebp
into
in
mov
mov
pop
adc
les
inc
adc
les
mov
sbb
rclb
mov
stc
scas
xor
jo
subb
ret
inc
mov
std
pop
out
mov
push
mov
lds
or
scas
call
push
push
sbb
je
and
xlat
fsubs
and
and
push
cmp
push
push
and
push
aam
cmp
cmpsl
dec
sub
mov
push
xchg
aam
lret
mov
sbb
push
lock
xor
cwtl
sarl
adc
int3
sub
or
aaa
xchg
or
lock
cmp
ja
outsb
xor
add
mov
popa
adc
dec
pop
mov
mov
cmp
adc
adc
adc
jae
push
xchg
shl
sahf
sbb
arpl
out
sbb
push
xor
pop
mov
into
ret
popa
mov
jns
aaa
mov
inc
popa
push
adc
pushf
sldt
fdivl
lea
icebp
jae
je
or
std
loopne
das
outsb
push
mov
lods
lahf
pop
dec
inc
push
negb
mov
add
testl
jb
rcl
mov
insb
jle
xchg
ljmp
jp
stos
or
xor
cmpsl
aam
mov
sub
call
daa
cmc
fldcw
mov
mov
sbb
pop
pop
xadd
xor
int3
mov
xor
and
push
and
inc
adc
les
cltd
out
aam
jno
xchg
and
movsb
pop
or
xor
mov
mov
cld
out
loopne
pop
push
imul
push
inc
imull
lods
fnstenv
add
mov
add
pushf
roll
mov
or
and
clc
pop
mov
mov
dec
movsb
loop
test
negb
setbe
push
pop
sub
xchg
aam
inc
cmpsb
mov
pop
xchg
test
gs
and
sahf
fcomps
addr16
es
test
jo,pn
fwait
fwait
ret
jp
add
and
jge
loope
scas
imul
call
outsb
sbbl
cmp
pusha
lea
pop
rorl
ret
inc
ficompl
mov
mov
icebp
bound
insb
adc
jp
xor
subb
push
xor
pop
xchg
push
inc
iret
test
daa
inc
imul
negl
add
aas
xor
shld
mov
rcll
sub
jmp
dec
and
jp
cltd
cwtl
push
inc
adc
cmp
mov
mov
jns
jle
xor
das
xor
sub
flds
sbb
add
dec
in
jae
pop
sahf
xor
pop
sub
sbb
xchg
scas
mov
stos
mov
fs
imul
xchg
push
dec
loope
mov
sbb
adc
nop
stos
mov
mov
mov
arpl
mov
jl
mov
pop
iret
test
and
sti
jo
push
jbe
dec
sub
xchg
test
inc
insl
shrb
and
lock
sahf
cld
dec
insb
pop
mov
mov
clc
mulb
enter
popf
xchg
test
jb
add
fisubrl
inc
sub
mov
fsubl
das
sbb
dec
add
push
arpl
mov
push
xor
sub
icebp
mov
popl
cmc
jno
mov
and
xlat
mov
push
lods
jmp
adc
outsb
jns
pop
test
mov
dec
xor
xchg
mov
xchg
mov
stos
push
fidivl
icebp
fwait
or
gs
sbb
sti
cli
dec
adc
jno
je
xchg
or
bnd
notb
ror
nop
push
sbbb
mov
mov
dec
xchg
and
xchg
mov
push
pop
and
js
int3
insb
shll
push
jmp
cld
es
dec
mov
das
or
mov
les
mov
dec
xchg
sub
out
and
lret
call
inc
xor
cmpsl
dec
push
lret
fwait
dec
rorl
repz
lcall
test
sbb
add
stos
ss
outsl
inc
aas
iret
shrb
mov
pop
xchg
adc
pop
dec
imul
mov
mov
mov
test
lsl
mov
out
jno
adc
scas
jecxz
jl
movlps
pushf
pushf
jmp
or
pop
cld
and
fadds
add
mull
xchg
ud2
div
mov
adc
xor
cli
sbb
add
es
add
sub
mov
xorl
pop
out
push
pop
out
repnz
pop
dec
jmp
cmp
addr16
push
adc
fdivrl
out
cmp
gs
inc
loope
push
jno
rcl
push
cwtl
cmpsl
mov
loop
push
cmpb
sahf
inc
jge
imul
mov
jl
cs
cltd
cmp
xchg
push
lahf
xchg
cmc
stos
mov
shl
mov
test
and
cmp
mov
jnp
jp
das
aam
js
in
mov
mov
inc
lahf
push
stos
sahf
and
shlb
dec
in
call
mov
cmpsb
push
pop
adc
fst
inc
jecxz
mov
lret
add
dec
pusha
xor
mov
push
dec
jecxz
mov
add
xor
cmp
ret
pop
imul
data16
outsl
out
cmp
addr16
add
mov
inc
lea
jecxz
ja
sub
push
jle
iret
adc
cmpsb
mov
lock
inc
dec
stc
and
outsl
mov
dec
cmp
pop
mov
aas
sbb
cltd
push
inc
jp
or
and
mov
addr16
or
push
ret
mov
nop
ljmp
xchg
mov
jns
adc
fisttpl
jmp
scas
loopne
and
jle
movsl
hlt
test
das
dec
mov
pop
pop
jae
and
lret
loopne
pusha
test
pop
das
mov
ljmp
mov
push
test
xchg
int
pop
loop
fmull
xchg
outsb
divl
or
mov
mov
mov
inc
pop
and
sbb
jmp
lods
sarl
pop
push
scas
cld
mov
fwait
xor
xchg
pop
ret
stos
sbb
sub
pop
inc
mov
aam
xchg
movsb
repz
outsb
mov
in
sbb
ret
mull
cmp
orl
jne
dec
andl
cmp
push
imull
or
inc
pusha
cmp
add
sbb
add
pop
or
cs
lret
jg
push
stc
outsb
fiaddl
and
lock
mov
lcall
mov
testb
cmp
insb
andl
ljmp
rorb
jo
in
mov
loopne
dec
adc
and
in
mov
sbb
js
add
and
mov
mov
pop
push
jb
sub
jae
repz
jnp
pop
jne
fidivrs
or
loopne
push
mov
shll
mov
fsub
shrb
lock
stos
ja
sahf
in
dec
xchg
mov
mov
in
dec
js
dec
add
sub
idiv
cmpsl
int
mov
mov
add
dec
in
stc
std
dec
lcall
add
push
fcoms
jnp
test
xorl
ljmp
mov
add
fdivs
dec
jge
and
xor
sbb
jbe
sub
or
jle
sbb
pop
cmpsb
scas
test
bound
mov
mov
jno
ds
mov
push
pop
cmp
cmc
dec
in
fidivrl
mov
in
out
mov
std
inc
std
hlt
ljmp
mov
push
and
lds
test
mov
sti
lods
add
test
sub
hlt
int3
adcb
or
mov
jge
out
inc
add
aad
testb
xchg
xchg
shl
mov
and
popf
jg
jl
add
adc
out
cmp
ds
inc
fcompl
push
sub
movsb
jp
sub
dec
int3
stos
out
arpl
adc
adc
mov
in
mov
in
xchg
pop
gs
mov
mov
push
daa
in
nop
popl
addr16
sbb
xchg
int
lahf
daa
out
aam
pop
jecxz
xchg
jecxz
pop
cmp
std
jl
push
mov
and
cmp
lret
cmp
jae
dec
or
setle
ds
dec
cltd
jmp
dec
dec
cmp
xchg
mov
dec
ficompl
cmpsb
or
and
mov
scas
sub
ss
push
jo
hlt
jl
std
and
sub
cli
stos
xchg
and
mov
pop
inc
mov
movb
pop
jne
dec
popf
sbb
decl
out
mov
add
dec
dec
out
out
fwait
testb
jg
mov
mov
xchg
scas
stos
int3
push
mov
push
adc
arpl
jne
sub
mov
and
jmp
mov
push
data16
test
rclb
mov
leave
cs
jge
fmull
jmp
cld
sar
out
cli
ret
mov
out
out
add
push
or
xchg
lcall
aas
and
and
fwait
loopne
push
mov
decb
arpl
sahf
outsl
adc
mov
xchg
mov
add
pop
cld
jbe
xchg
sub
xchg
xor
fcoml
hlt
lret
or
data16
ljmp
arpl
int3
lds
addr16
add
insl
adc
andl
ret
in
cmp
mov
mov
xor
jno
in
adc
add
sub
rolb
pop
int3
mov
movsb
inc
xchg
lock
mov
js
push
sbb
dec
ficompl
and
aas
jle
loope
mov
dec
inc
iret
fsubr
mov
mov
test
push
push
fstpl
mov
xchg
xlat
jg
mov
icebp
push
mov
xor
push
push
jns
rorb
jmp
jle
in
lret
lds
xchg
scas
fs
sbb
test
cs
dec
xor
xor
fdivrs
mov
mov
add
addr16
sbb
adc
loop
shlb
mov
xor
aam
cltd
int3
sub
jns
fiadds
or
dec
cltd
add
jbe
xchg
stc
int
inc
insb
xor
mov
idiv
push
ds
push
ljmp
xchg
mov
insl
dec
adc
push
aam
mov
loope
imul
loopne
add
test
mov
jb
xchg
jl
push
sbb
mov
cmp
outsb
mov
xor
xchg
pop
adc
rclb
mov
and
addb
out
jecxz
inc
dec
inc
movsb
mov
cmp
int3
pusha
fnstenv
xor
int3
dec
inc
adc
and
lret
inc
pop
or
mov
add
test
or
pop
cmp
inc
popa
ret
push
adc
fisttpll
jle
mov
popa
and
stos
xorl
jns
repz
xlat
sahf
movsl
and
loop
cmpsl
mov
cltd
push
cmp
mov
adcl
imul
inc
test
shlb
dec
insl
dec
mov
mov
fisttpll
shlb
mov
dec
js
call
dec
call
lret
cld
add
stos
jmp
ja
fisttps
dec
hlt
pushf
mull
lock
das
or
push
loop
stos
add
dec
imul
mov
rcl
and
js
push
fwait
ret
repz
dec
aaa
add
lea
fcompl
shlb
fcmovnb
xchg
mov
rcll
stos
push
fsubrs
jbe
jnp
dec
cmp
xor
adc
adc
inc
loop
ja
sbb
xor
jnp
popa
dec
stc
fwait
ja
sbb
jb
call
push
cmpsl
es
mov
mov
shlb
mov
fmuls
loop
mov
cmp
pop
cmp
mov
lds
pushf
add
mov
in
pop
gs
and
pop
ja
adc
jbe
push
dec
call
call
pop
icebp
xor
das
test
jns
lahf
lret
lret
inc
pusha
std
out
int3
or
in
inc
push
stc
test
cmp
adc
jge
and
jmp
dec
stc
mov
push
sbbl
and
cmp
push
testb
jle
rcrl
scas
mov
push
and
xchg
fisubl
shlb
pusha
adc
cmp
add
xchg
repz
outsl
add
mov
jp
ret
int
jmp
clc
gs
sub
inc
mov
call
int3
decl
int
cli
mov
or
pop
or
vmaxss
in
mov
mov
test
out
aad
add
stos
cli
ss
adc
pop
or
inc
push
lcall
das
mov
pop
dec
out
test
add
out
jl
cld
je
and
xchg
xor
sub
stos
or
scas
push
xchg
andl
and
in
fisttpl
outsl
ret
int3
sub
cmc
dec
xchg
lock
sub
dec
mov
cmpsb
xor
xchg
stc
pop
add
popf
inc
xchg
add
ret
pop
fcoml
push
out
cmp
cmp
in
xchg
js
push
mov
sub
or
inc
xchg
out
sbbl
inc
pop
adc
mov
jne
jae
jp
lods
sub
in
jg
lret
test
sub
push
lcall
iret
pop
fisubrl
ss
cmp
xchg
sbb
and
stc
les
jns
jmp
lcall
xchg
fidivrl
mov
xor
add
test
push
das
add
dec
dec
inc
and
pop
pop
push
rolb
push
mov
add
push
in
in
jp
cmpl
xchg
dec
ss
sarl
adc
ficoms
mov
test
mov
outsl
out
addb
xchg
fdivrl
cmp
mov
push
sbb
mov
mov
out
test
js
jmp
sbb
jecxz
addb
inc
push
or
int
push
ljmp
lods
sub
mov
pop
pop
dec
aas
pop
push
out
lret
and
fdivs
push
xor
enter
nop
xchg
push
in
adc
xchg
add
xor
loopne
or
adcl
outsb
icebp
gs
call
sbb
in
mov
sub
adc
int
popf
daa
and
add
push
inc
dec
push
in
jge
inc
mov
push
in
pop
adc
outsb
sahf
mov
stos
add
gs
xchg
out
dec
inc
jb
nop
lock
test
cmp
lea
mov
jnp
cmp
insl
mov
fsubrs
or
daa
dec
push
and
loop
ret
out
mov
xchg
dec
out
mov
in
sub
jle
inc
test
or
xchg
pop
pop
fildl
std
popa
out
push
fdivrs
outsl
shll
fsubp
jbe
inc
test
inc
adc
mov
mov
testb
xchg
xchg
mov
push
aam
and
add
insb
xor
enter
xor
clc
rorl
xchg
add
aad
loop
and
iret
adc
xchg
adc
sub
xchg
xchg
int3
stc
and
cli
cld
xchg
jle
not
sti
mul
adc
or
pop
push
push
adc
test
add
sbb
push
sub
rcrl
aad
pop
and
hlt
push
and
mov
add
mov
cmp
pop
xor
std
aad
loop
sub
lock
out
adc
pushf
into
jmp
pop
lds
gs
int3
and
cmpsb
sbb
xlat
enter
cld
insb
mov
jecxz
out
cmp
test
repnz
or
in
jne
imulb
sbb
sahf
push
les
xor
out
scas
insl
bound
or
pop
mov
push
sub
add
clc
sub
subb
or
xlat
jae
cli
js
or
add
xchg
inc
fcmovb
addl
and
jae
fsubrp
incl
mov
inc
mov
push
push
jno
push
sub
push
insb
cmp
dec
out
scas
mov
xchg
hlt
jge
mov
xchg
jbe
fists
add
jmp
mov
stos
movsl
add
mov
imulb
rol
mov
shr
jmp
cmpsb
out
aam
mov
xor
jbe
ja
lcall
jg
hlt
add
sysenter
pop
or
jp
aas
inc
sub
dec
js
or
push
mov
cmc
add
lods
xchg
icebp
cmp
in
push
inc
outsb
imul
out
xchg
lods
dec
lock
mov
clc
fwait
lret
int3
jg
lods
mov
xor
jl
jle
cmp
idivb
fidivl
mov
mov
sbb
jp
add
out
ja
jbe
out
ds
out
dec
shll
jp
int3
sub
in
out
adc
les
adc
and
cmpsl
and
jmp
cmpsl
lret
pushf
imul
pop
inc
movsl
lahf
lahf
or
out
xor
xor
mov
jp
adc
ja
add
xchg
movsb
stos
shl
jmp
aas
sarl
inc
sub
xchg
and
into
xchg
push
dec
inc
cmpsl
mov
mov
loope
iret
sbb
in
sub
out
sub
pop
das
fbstp
jle
xchg
popf
mov
xchg
rcl
pop
enter
push
pop
aam
sbb
lods
and
adcb
cmp
jbe
jmp
xchg
out
push
xor
cmp
outsb
je
repz
jmp
sub
mov
shll
sbb
shrb
scas
sub
inc
cmp
call
test
mov
inc
mov
out
sbb
stc
insl
cmp
ret
addl
testl
mov
bndldx
out
sbb
jmp
sub
xorb
les
data16
dec
mov
mov
shrb
add
jge
mov
int
add
ljmp
inc
stos
xchg
mov
jl
iret
pop
and
or
push
ficomps
xchg
and
repz
ss
pop
mov
and
push
pusha
mov
jno
sub
cmp
pop
sarb
push
cmp
leave
sub
inc
sar
ret
iret
clc
cltd
pop
pushf
sub
push
mov
push
sub
insl
mov
icebp
int3
dec
outsl
pop
cmp
enter
ds
filds
sub
test
sub
mov
sahf
cmp
dec
pop
out
xchg
nop
sbb
jecxz
pop
pop
adc
addr16
mov
shrl
imul
and
loop
pop
aas
lock
lahf
out
fwait
loope
jo
jb
mov
leave
jg
sarl
mov
cmpsl
sahf
cld
jmp
mov
hlt
adc
int
daa
dec
inc
ja
cmp
mov
daa
mov
mov
es
in
pop
ss
fsubrp
mov
popf
imul
aam
sahf
mov
mov
push
cli
push
test
sbbb
mov
mov
lds
mov
xchg
andb
sub
and
mov
fcompl
bound
lahf
sub
gs
mov
mov
int3
insb
lret
stc
xor
push
jge
stos
push
fcmovb
push
mov
adc
dec
adc
adcb
mov
adc
push
mulb
stos
mov
sbb
insb
cmp
xchg
and
jns
mov
in
push
or
or
fnstsw
lea
adc
cmpsb
push
xor
mov
dec
xchg
dec
mov
mov
rol
jmp
pop
pushf
dec
fsubl
lea
xor
jbe
jmp
jecxz
sbb
inc
push
jg
mov
jnp
les
mov
stos
cmp
mov
adcl
call
lods
cmc
dec
mov
push
stc
pop
adc
lock
or
outsb
ss
xchg
mov
pavgb
hlt
inc
jmp
inc
mov
adc
mov
test
pop
mov
ret
add
fldt
mov
fwait
ja
inc
mov
xchg
inc
add
rol
scas
ja
fs
stos
push
add
insl
sbb
mov
in
sbb
adc
cli
aaa
rorl
iret
repnz
jns
test
mov
leave
pop
push
jecxz
loop
push
shl
pop
das
mov
push
fs
lods
scas
push
cmp
repnz
loopne
or
or
dec
jp
mov
js
outsb
mov
out
in
mov
xchg
lcall
xchg
insb
aas
push
push
shl
les
imul
xchg
adc
inc
insl
icebp
test
push
and
push
cmp
scas
dec
cmp
mov
cmc
addl
rcrb
scas
cmp
das
mov
ss
adc
int
movsl
mov
add
mov
mov
loope
bound
push
jg
loopne
add
push
xor
lret
inc
loope
and
stos
arpl
xchg
jnp
sub
in
fs
mov
pop
xchg
inc
imul
adc
inc
ret
dec
xchg
cmp
bts
out
sub
xor
xchg
jecxz
xor
sub
mov
ret
cmp
enter
mov
mov
addb
insl
gs
out
push
dec
lret
fdivr
insb
sub
fs
mov
shll
daa
mov
ds
ret
cld
out
push
pop
sbb
rorl
ss
pop
sbb
inc
mov
add
outsl
std
cli
cmp
sbb
out
out
sbb
adc
inc
je
test
and
popf
sbb
inc
mov
push
in
mov
arpl
or
ja
cmpsl
xchg
movsl
loop
roll
lds
push
ds
lock
lods
dec
stos
fwait
pop
enter
jge
push
adc
int
add
lock
mov
insb
cmp
cmpsb
mov
ja
or
mov
jae
or
fisubrl
fstps
push
movsl
add
mov
in
mov
xor
jge
mov
cmpsb
popa
inc
sbbb
loop
pop
mov
scas
jnp
xor
jnp
arpl
pop
push
jnp
mov
xor
sub
sbb
rcrl
mov
imulb
inc
fcom
fcmove
mov
jnp
scas
pop
sbb
in
loopne
call
adc
pop
cltd
pop
cmp
fadd
mov
dec
mov
add
or
insb
outsl
ljmp
adc
mov
stc
mov
push
sub
gs
dec
and
add
repnz
aad
scas
mov
sbb
inc
adc
call
mov
insl
xchg
pop
inc
and
fnstenv
push
stos
loope
xor
out
or
mov
cmpsb
cmp
mov
mov
xchg
aad
loop
leave
rcll
mov
repz
push
bound
lock
lods
jg
push
jo
push
jbe
out
hlt
fcompl
sub
cmp
mov
xor
test
imul
add
xor
pop
mov
clc
add
popa
xor
add
call
mov
xchg
push
sub
jmp
ret
imul
or
rcrb
cld
push
jle
repnz
jne
insb
je
lcall
mov
and
or
push
fstl
add
test
push
xor
popf
mov
mov
aaa
mov
jge
jle
fcoml
call
lock
add
jnp
mov
dec
popf
jae
fs
mov
xchg
rorl
daa
loop
dec
stos
fsubrs
xchg
jb
and
cmp
mov
sti
and
aaa
mov
inc
pushf
mov
cwtl
push
repnz
fdivrl
movsl
adc
ficompl
pop
in
lods
push
cmp
fbstp
xchg
aaa
cltd
rcrl
jmp
cli
jg
adc
out
mov
add
add
xchg
mov
mov
lock
push
push
push
popa
cmpsl
in
mov
add
dec
push
pop
mov
mov
push
sub
fidivl
dec
and
push
out
dec
leave
sub
sbb
jge
test
xlat
or
adc
or
xchg
push
xchg
or
adc
shl
push
dec
cmc
adc
fistl
pop
add
fnstsw
or
cmp
fdivs
bound
out
rorb
push
fbld
cli
mov
cmp
std
es
or
and
mov
jmp
divl
cmp
or
xchg
mov
xor
cli
rcll
and
mov
orl
gs
xchg
cmp
xor
mov
sarb
mov
pusha
les
movsb
xor
cld
movd
jne
adcb
cli
inc
test
lcall
movsl
add
push
es
mov
adc
xor
sub
xor
add
cmc
and
sarl
enter
push
imull
xchg
push
cli
cmp
mov
iret
add
push
dec
test
mov
adc
icebp
fsts
out
fildl
jl
mul
xchg
mov
ja
lock
pop
rcl
jg
add
sbb
sbb
sub
outsl
jl
imul
jecxz
pop
xor
add
jo
jbe
fwait
push
insb
mov
dec
jae
icebp
cmp
test
repnz
cmp
fstpl
xchg
or
mov
aaa
push
jo
dec
pop
hlt
add
scas
pop
xor
addr16
aas
les
setns
jmp
pop
push
add
and
cmp
jnp
push
push
and
mov
cmpb
vmovlps
outsl
call
sub
popf
loop
jbe
out
sub
pop
xor
lret
fs
int3
sahf
adc
cmpsb
subb
cmp
or
pop
mov
mov
jmp
push
insb
or
xchg
aas
lods
out
inc
push
loope
add
dec
or
inc
mov
fiadds
loopne
inc
jnp
pop
pinsrw
ret
xlat
mov
push
jae
mov
mov
int3
pop
das
fs
rcll
sub
int
rolb
and
repnz
dec
dec
mov
jmp
cltd
imul
aam
ret
ljmp
sub
sub
cld
cwtl
int
loopne
mov
fstps
mov
mov
xchg
lods
xor
clc
popf
push
adc
jae
xchg
leave
dec
and
xor
mov
lahf
add
mov
aam
mov
cmpsb
and
or
es
push
testb
shr
mov
call
pop
cmp
cwtl
fwait
add
loopne
popa
sbb
mov
jo
push
pop
fcomi
sbb
dec
scas
xor
jo
cmp
out
inc
push
imul
rolb
and
fwait
jecxz
dec
int3
pop
xchg
adc
adc
mov
cmpsb
shlb
mov
jl
cmpb
and
sti
test
scas
imul
das
cmp
adc
repnz
fcomip
mov
call
aam
mov
pusha
mov
sbb
and
scas
xchg
shll
push
rolb
mov
push
iretw
je
inc
and
push
stc
jb
and
pushf
or
or
xor
ret
aad
sbb
cmp
popa
inc
into
xor
popf
dec
sub
jle
dec
shl
xor
push
sti
lahf
lahf
stc
jg
gs
cltd
addr16
or
push
pop
cmpsl
pop
sarb
stc
repz
jg
mov
adc
fs
test
or
pop
xchg
adcb
mov
outsl
mov
sub
jbe
call
je
incl
jno
repz
jb
or
out
xlat
repz
fcomps
insb
jp
jae
push
into
fwait
movsl
lock
xchg
mov
test
pop
mov
clc
loope
inc
into
adc
es
movb
cmpsl
mov
push
add
cmp
negb
adc
mov
fidivl
int3
sbb
icebp
daa
sahf
or
popf
mov
imul
frstor
push
clc
jl
xlat
jbe
jg
subb
mov
sti
dec
sbb
push
jecxz
mov
or
pop
add
pusha
ret
cli
or
ret
cmp
dec
dec
ja
sub
out
xchg
sahf
adc
dec
sub
jmp
push
jl
jp
lcall
jecxz
ret
js
and
cmp
vphaddwq
xchg
or
inc
bound
mov
loopne
sub
cmp
add
jno
or
lret
pop
testb
xchg
jle
mov
xchg
cmp
rolb
mov
in
lods
lock
inc
mov
cmpsl
das
pop
call
inc
xchg
sub
and
mov
xor
xchg
fwait
or
lods
loopne
js
out
ds
hlt
test
push
pusha
pop
push
push
inc
push
sahf
jae
jae
mov
mov
ds
arpl
inc
cmp
sbb
xor
mov
sub
adc
ret
sar
in
mov
xchg
push
mov
push
daa
out
pop
cmp
cwtl
sub
rcrl
stos
dec
mov
mov
sub
xchg
cmpsl
inc
out
xchg
retw
jle
shl
cmp
fwait
xchg
insl
mov
clc
gs
xchg
mov
mov
jbe
push
call
mov
or
lret
je
and
inc
jmp
and
xor
pop
pop
stos
jle
test
sbb
add
stos
push
mov
cmp
sti
xchg
lods
lods
sub
je
jnp
call
or
mov
lahf
pop
stc
das
pop
aas
add
imul
enter
out
xchg
fs
or
pop
adc
pop
jg
mov
add
arpl
pop
push
xor
add
mov
lock
dec
jb
dec
stos
xorl
xadd
inc
in
xor
cmpsl
xor
pop
mov
jmp
stos
jnp
mov
in
or
repz
lods
or
je
inc
sub
fwait
jp
xchg
sti
addl
lods
lock
or
les
stc
push
xchg
repnz
inc
clc
pop
mov
mov
mov
jmp
movsb
xor
es
inc
xchg
jl
mov
xchg
nop
push
out
jle
dec
or
aam
cmpsb
fldcw
jl
cli
test
das
sar
mov
dec
iret
mov
inc
fdivrl
scas
into
imul
into
test
mov
adc
and
lret
jnp
pop
jmp
push
adc
ds
shl
xor
das
xorb
add
daa
xchg
in
xchg
cmp
add
mov
movsl
aas
daa
jmp
shll
sub
mov
inc
cmp
mov
pop
cli
jmp
or
adc
out
int3
adc
push
add
fadd
cmp
inc
and
xlat
popa
pop
ret
jnp
sbb
cmp
push
mov
jl
cs
shlb
mov
out
sub
into
adc
dec
jb
mov
pop
jae
jmp
out
push
xlat
in
int3
mov
xchg
int3
mov
cmp
dec
les
cmpsb
adc
push
scas
cmc
and
mov
mov
add
pop
jg
push
push
push
scas
push
fnstsw
ljmp
jmp
push
cmp
dec
jle
cmpsl
mov
jae
mov
push
mov
jne
mov
or
movsl
repz
loope
mov
lods
add
pop
ficomps
bound
jo
test
jg
mov
aas
fiadds
jg
xchg
in
cmc
scas
out
inc
mov
jo
fsubrs
sbb
lret
cs
scas
xchg
out
enterw
mov
inc
adc
sbb
bound
fmuls
dec
cli
mov
mov
cmpsl
fimull
rcrb
jne
cmp
cmp
cmp
int
and
lods
lret
jp
mov
daa
sub
add
push
iret
cmp
mov
repz
nop
mov
cmp
scas
loopne
sahf
mov
push
lahf
push
out
add
or
fwait
xchg
sbb
xchg
mov
pop
or
movl
pusha
add
outsl
fiaddl
test
push
lret
sysexit
xlat
sub
mov
inc
out
push
jnp
mov
out
jecxz
jae
pop
sub
push
iret
mov
loopne
popa
test
pop
sub
dec
in
mov
lods
or
outsb
inc
mov
mov
push
inc
lock
loope
xchg
add
fcmovb
enter
xor
sbb
int
pop
in
sub
decl
mov
pop
into
dec
xchg
inc
fiaddl
out
lods
and
mov
mov
jmp
mov
repnz
push
push
test
fmul
das
hlt
sbb
jns
mov
lods
adc
adc
and
xor
dec
fwait
std
xlat
mov
pop
std
mov
jecxz
int
push
mov
mov
sbb
adc
push
xor
jp
mov
popa
adc
andb
fldenv
mov
dec
imul
mov
mov
and
cld
test
loope
mov
sbb
jge
dec
adc
iret
sbb
jge
and
mov
and
mov
ss
cmpsl
inc
dec
and
inc
outsb
imul
xorl
pop
sbb
sub
mov
shll
sub
test
ljmp
cmp
je
fisttpll
dec
js
fsubrs
test
imul
adc
ret
mov
or
hlt
and
jmp
orl
js
jne
jne
push
aaa
pop
nop
sti
dec
add
pop
je
enter
jle
adc
inc
mov
cltd
xor
mov
loop
or
popa
lods
ret
xor
mov
push
cmp
sub
pop
xchg
lods
iret
adc
and
inc
dec
inc
xchg
inc
js
jnp
clc
rcl
imul
scas
mov
dec
test
sahf
mov
pop
dec
adc
popf
in
push
push
dec
pushf
test
adc
add
lds
lahf
ret
sub
push
test
out
roll
push
sbb
scas
inc
push
xor
xlat
int3
adc
in
mov
or
loope
adc
arpl
int3
jmp
mov
xchg
push
or
mov
fisttpll
mov
and
imul
flds
or
jg
inc
or
lea
test
cltd
aam
rcl
fbstp
mov
push
or
mov
sbb
inc
mov
in
add
jae
out
aas
sub
sub
cwtl
out
push
add
movsl
ja
push
and
and
add
and
pop
das
inc
iret
inc
repz
adc
and
or
and
test
xchg
daa
fwait
mov
stos
dec
das
andb
sbb
scas
pop
insl
mov
sub
jp
xchg
jns
test
xor
push
xchg
jbe
xchg
into
cltd
mov
out
std
pop
adc
mov
inc
pushw
ljmp
data16
cmp
sti
inc
push
and
sti
mov
repnz
or
aas
mov
and
sub
jp
ljmp
scas
aad
rcll
and
jle
outsb
xorl
out
xchg
mov
sbb
xlat
push
push
leave
and
das
ret
in
int3
imul
test
mov
pushf
xchg
sub
add
or
fs
lret
fistps
sub
stc
loop
iret
sarl
pop
insb
jno
add
leave
add
test
mov
push
lods
dec
and
stos
cmpsl
flds
fildll
mov
mov
icebp
or
push
scas
stos
push
orb
cmp
aam
repnz
lcall
lcall
insl
or
addb
mov
ret
arpl
push
hlt
mov
sbb
jno
push
sbb
pop
lods
push
inc
xor
mov
sbb
bound
cltd
cmp
fwait
mov
jmp
sub
lahf
jmp
pop
pop
jno
sbb
jns
mov
mov
in
jbe
int3
roll
in
or
xor
push
and
pop
sbb
lahf
daa
into
testl
jno
pop
mov
into
aas
lcall
rclb
pop
xchg
mov
jb
inc
movsl
and
xchg
out
out
scas
cmpl
mov
dec
in
xor
xchg
inc
ja
mov
popl
cmpsl
outsb
pop
outsb
cli
es
push
fwait
inc
adc
mov
ficomps
jnp
ds
jbe
jb
sub
insb
pop
dec
enter
jae
fisubs
nop
pop
sbb
sti
dec
jae
sti
mov
cmpsb
xchg
sarb
add
loopne
inc
inc
sbb
in
sbbb
inc
repz
adc
push
adc
notb
xor
mov
sbb
pop
faddl
or
popa
xchg
movsl
add
pop
mov
jns
mov
sti
decb
mov
lods
or
xchg
and
jecxz
js
pop
cmp
jge
test
inc
dec
sub
cmp
adc
inc
or
fstpt
adc
pop
fucomp
or
jl
js
aad
aad
shl
int3
rcll
lret
call
dec
idivb
loopne
xlat
in
dec
call
test
dec
andb
int3
pusha
push
stos
mov
sub
and
daa
cli
fcoms
sub
push
ret
adc
bound
pop
and
das
inc
adc
cmp
in
pop
inc
sub
or
sub
inc
mov
push
andb
jge
sub
mov
in
adcl
xlat
push
lcall
nop
and
mov
adc
mov
sbb
sti
insl
or
clc
cli
adcl
lret
adc
and
push
push
adc
dec
adc
jle
add
mov
stos
out
inc
lods
and
packsswb
arpl
cmp
push
xchg
cmc
mov
fisttpll
or
out
jo
jnp
jae
pop
mov
lock
insl
push
xchg
pop
test
repz
lea
repnz
inc
gs
in
sbb
shrb
inc
jno
cmp
cmpsb
out
sbb
mov
adc
fucom
int3
push
les
push
mov
push
push
mov
pushf
or
cmp
idivl
sbb
fildll
fmuls
jae
mov
inc
pop
jns
data16
xchg
iret
es
int3
mov
pop
and
fwait
jo
mov
and
xor
or
mov
and
ret
push
test
cld
cmp
jle
insl
in
xchg
aaa
dec
add
test
js
gs
inc
stc
stos
xchg
push
rclb
fmuls
shr
sbb
sub
mov
cmp
or
add
fisttpll
ds
jge
ret
add
xor
dec
push
jmp
push
adc
adc
pop
std
push
aad
pop
cli
loope
movl
pop
mov
out
mov
push
mov
jp
aam
scas
xor
rorl
mov
add
cmp
add
push
lods
xor
mov
push
scas
pushf
ret
mov
fwait
pop
xor
xchg
sub
jnp
and
icebp
imul
aas
stos
or
cli
lods
fstpl
test
in
out
fldt
adc
fnsave
aam
xchg
mov
shlb
nop
cld
sti
pop
imul
mov
add
jge
cwtl
push
cs
lock
push
sar
imul
mov
mov
mov
inc
daa
or
mov
aam
stos
fnstcw
jnp
push
fdivrl
mov
dec
cmp
xchg
add
std
fidivrs
jle
fmull
stos
subb
or
int3
arpl
outsl
outsb
in
test
je
sbb
inc
sub
ds
dec
fisubrs
xchg
adc
es
inc
push
shl
push
test
xlat
sbb
std
sub
push
sub
shr
mov
lret
in
stos
mov
push
sarl
sbb
leave
xchg
adc
xchg
dec
int3
jbe
jno
mov
scas
sub
std
lods
pop
jmp
stos
mov
dec
call
xor
andl
mov
mov
into
mov
scas
test
jo
shll
iret
pop
add
mov
test
adc
push
pop
in
loop
in
inc
push
repz
xchg
notb
xchg
xchg
mov
mov
pop
movb
push
test
push
into
inc
push
pop
push
fcoml
push
and
outsl
inc
sbb
xchg
sub
and
pop
jno
xlat
out
xchg
inc
fcoml
in
mov
and
in
xor
jl
aaa
and
out
popf
movsb
xlat
aad
adc
push
sub
mov
pop
ret
sbb
stc
and
jne
xchg
and
fisubs
mov
stos
out
repz
sub
in
call
inc
mov
pop
imul
sbb
xchg
loop
nop
xchg
adc
or
data16
loop
cmp
inc
stos
jge
movsb
jge
fs
in
cmp
out
mov
push
sbb
cltd
jg
fisubrl
and
adc
sbb
push
addl
push
xchg
inc
add
cmp
fisttpl
xor
outsl
or
pop
cmp
adc
pop
or
fiadds
adcb
add
js
adc
dec
cmc
add
xlat
mov
rcrl
xchg
aas
inc
inc
fistps
fmull
and
ja
jnp
shrb
xchg
inc
aaa
add
or
mov
and
cmp
xchg
adc
ss
adc
hlt
mov
push
into
fistpl
subb
rcrl
mov
cld
ficoms
fidivrl
xchg
xchg
add
pop
mov
shll
pop
sbb
out
pop
push
pop
mov
add
push
jo
pop
jnp
adc
xlat
cld
push
inc
cld
or
bound
push
shrl
imull
pop
adc
mov
arpl
cmp
xchg
or
fndisi(8087
and
dec
into
es
daa
push
xchg
xchg
in
mov
gs
jae
ja
arpl
add
out
pop
adc
popf
fcompl
mov
mov
jmp
xorl
sbb
jae
dec
pop
jg
in
lea
xchg
sbb
pop
lea
xor
ret
mov
fldl
inc
push
sahf
loop
sahf
enter
mov
mov
je
sbb
xchg
mov
add
mov
stos
lds
fildl
insl
jge
in
inc
imul
adc
ja
in
mov
stos
add
test
subl
cmp
cmp
scas
sbb
in
add
add
int
and
cmpsb
out
outsl
inc
idivl
idivb
aam
les
hlt
lret
aaa
pop
ret
shl
mov
inc
popf
push
shl
jb
push
bound
pop
movsb
adc
inc
dec
arpl
or
jge
ficomps
mov
sbb
pop
movsl
xchg
xchg
sbb
sub
adc
popf
mov
fdivl
lods
mov
jnp
cmp
lock
add
shlb
add
mov
inc
mov
xor
mov
out
sub
test
mov
sbb
add
data16
int3
cmp
test
fs
cli
push
imul
xchg
mov
pop
cmp
xchg
lahf
jp
mov
mov
outsb
pop
dec
cmp
xor
and
aam
mov
fcmovb
jb
mov
add
inc
dec
loop
in
jmp
std
push
cmp
in
add
andb
ljmp
rol
call
arpl
insb
shlb
loop
add
aas
cld
fdivrl
out
sahf
cmp
sub
jg
jmp
in
clc
rcll
cmp
shl
push
pop
insl
inc
arpl
pop
popf
aad
pop
outsb
lret
mov
jb
out
mov
xchg
inc
mov
xor
xor
daa
adc
sahf
xchg
outsl
mov
lahf
and
jp
xchg
nopl
fisttpll
xor
add
pop
and
xchg
cmp
cmp
push
aad
testl
xchg
stos
dec
add
int
mov
lods
fucomi
subl
aam
add
cltd
out
add
sub
loopne
movsl
push
repnz
nop
cwtl
or
mov
inc
cld
repnz
dec
int3
pusha
hlt
inc
mov
in
mov
rclb
or
rcrb
ja
aam
daa
movsl
test
popa
cmpsb
inc
idiv
mov
hlt
or
icebp
xor
mov
sub
fldcw
mov
inc
inc
inc
jo
inc
xor
pop
roll
sbb
cmp
clc
xchg
push
adc
rcrb
fsubrs
movsb
pop
shrb
call
subl
cld
and
or
adcb
mov
loopne
mov
add
inc
jle
les
fnstsw
cmp
pop
push
and
fisttpl
pop
movsb
or
cmc
cltd
lock
push
pushf
cld
notl
out
adc
inc
js
stos
lods
mov
push
inc
adc
mov
negb
hlt
out
in
adc
clc
ret
xchg
mov
pop
dec
xor
adc
dec
jne
xchg
push
sub
push
ret
test
add
insl
pop
je
adcb
xor
pop
add
in
jae
mov
int
add
and
aas
sbb
int3
loopne
mov
orl
jl
jns
push
imul
jno
sub
inc
stc
movsb
mov
jns
scas
mov
cwtl
sbb
nop
mov
add
cmpsl
and
or
or
jmp
rorb
out
aaa
test
add
fnclex
imul
push
cmp
in
mov
imul
sub
fmuls
cmpsb
sbb
jae
in
es
sub
jne
stos
out
push
je
xor
popf
cld
sub
aam
test
mov
jl
xor
bound
data16
xchg
lods
inc
jmp
xor
fucomp
sbbb
repnz
adc
sbb
push
sub
pop
and
mov
jp
cmp
and
arpl
inc
or
dec
jge
test
hlt
aam
fisttps
fbstp
addr16
pop
loope
add
jecxz
inc
les
ret
dec
cmp
movsb
jnp
shrl
idivb
fcmovnu
inc
out
mov
push
pop
incl
mul
pop
or
sub
ss
mov
xor
push
jecxz
jle
rcrl
test
push
test
shlb
sub
mov
outsb
inc
scas
insb
adc
repnz
subps
push
addr16
pusha
mov
outsl
dec
mov
scas
jmp
clc
or
scas
ret
ret
sub
lods
lret
add
hlt
add
mov
xchg
dec
arpl
push
dec
shl
movsl
dec
xchg
mov
js
in
dec
inc
jno
push
pop
pop
mov
dec
arpl
sbb
imul
sahf
jbe
pop
pop
cwtl
mov
dec
pop
ss
jmp
jbe
push
stos
xor
out
cmp
add
stos
nop
mov
pop
mov
dec
mov
inc
mov
push
je
dec
aas
add
fiaddl
iret
xlat
mov
xor
sub
ljmp
fwait
fidivrl
sbb
clc
xor
xor
adc
mov
cmp
loop
test
pop
aas
and
data16
jecxz
fcmovnu
xchg
das
mov
jmp
mov
xchg
mov
in
leave
rcll
into
js
mov
imul
dec
cmp
and
nop
fidivrl
aaa
sub
xchg
daa
aas
mov
xchg
enter
add
pop
or
pop
inc
leave
mov
xchg
data16
hlt
sub
mov
pop
add
clc
ret
popf
fmulp
ret
push
jle
pushf
loope
push
pop
sbb
cli
out
scas
pop
in
or
cli
push
lock
outsb
fwait
jb
js
sub
addl
imul
adc
outsb
dec
jmp
rorl
mov
ret
cld
scas
xchg
hlt
xlat
int
movsb
mov
out
pop
jns
in
xchg
pop
lret
sub
fs
fcomps
push
ret
shl
push
mov
cwtl
push
test
mov
stc
nop
mov
call
jne
sub
sub
inc
xor
aas
andl
dec
mov
xchg
sar
imul
mov
cs
fs
movsl
push
mov
or
lret
insl
rdpmc
mov
in
aas
xor
push
add
cmp
out
ret
icebp
add
push
sti
lds
cmpsb
rcll
jp
out
repz
imul
enter
mov
and
jmp
sbb
fwait
cmpsb
cmp
dec
loope
lcall
sub
inc
popf
cmp
sbb
mov
in
jns
mov
in
aas
mov
pop
mov
hlt
xchg
imul
loopne
mulb
mov
xchg
push
clc
testb
push
popf
test
cmp
push
jecxz
nop
rcr
fnsetpm(287
push
mov
push
xchg
out
or
mov
imul
rcll
movl
mov
cmp
jl
xor
mov
sub
decb
push
addr16
fidivrs
mov
in
fidivl
flds
mov
stos
shll
dec
or
dec
je
fadd
out
sti
or
add
and
popa
sub
dec
je
mov
jo
mov
xchg
pop
adc
push
mov
int3
cwtl
fs
mov
into
cwtl
cmp
out
and
outsb
lret
sarb
aas
rorl
add
add
leave
out
xor
incb
inc
sub
popf
mov
shrb
sub
xchg
ret
fs
je
call
mov
sbb
in
test
pop
out
aaa
lret
orb
mov
sahf
or
fs
mov
inc
cmp
aad
subb
mov
fidivs
inc
add
dec
iret
sub
adc
or
or
ja
ja
into
loope
xchg
mov
or
hlt
or
jnp
jne
push
outsb
aam
shrl
lret
sbb
cmp
jns
add
or
cmp
mov
mov
jnp
sbb
lods
jle
adc
pusha
pop
outsl
push
mov
pushf
cmp
inc
repnz
ficoms
popf
mov
mov
and
sbb
arpl
repnz
lcall
or
jecxz
test
dec
push
ficoml
mov
dec
sub
icebp
and
cmp
xor
jmp
shll
sbb
jbe
out
or
fnstenv
adc
mov
pop
jbe
and
test
std
cmp
imul
subl
mov
xchg
cmpsb
cvtps2pi
rolb
or
jmp
in
add
mov
movl
lcall
jge
out
sub
dec
mov
mov
movsl
jo
mov
fs
addr16
sub
mov
cmp
test
mov
xor
jo
sarl
fdivs
or
adc
mov
sbbb
lock
mov
adc
lods
xchg
and
mov
jne
mov
xor
add
iret
repz
sub
jbe
mov
sbb
testl
js
sahf
cmpsl
movsb
xchg
jge
outsb
push
stc
xchg
xchg
lds
adc
mov
pop
xchg
push
ret
pop
das
rcrl
xchg
and
movsl
jae
test
cmp
pop
jmp
or
dec
bound
fsub
sti
les
adc
jl
shl
out
inc
sub
lea
shl
sub
andb
add
incb
test
mov
stc
rol
inc
cmp
jno
pop
cmpsl
mov
push
mov
popf
bound
fwait
pop
call
jo
mov
dec
out
jne
data16
sbb
jbe
cmp
pop
xchg
int
sub
je
push
out
cmp
jne
pop
les
bound
mov
orl
jnp
adc
add
cmp
mov
daa
xchg
pop
sbb
leave
mov
mov
dec
inc
int
fidivs
lret
pop
aaa
push
and
std
fs
outsb
xor
sub
push
in
and
imul
jp
mov
js
testl
jmp
jg
cmp
ljmp
aam
in
mov
into
movsl
test
and
add
ret
xlat
push
mov
inc
outsb
push
cmpsb
addr16
negl
sub
cmp
test
pop
int3
cmp
add
rcll
inc
sbb
cmp
and
test
inc
test
addl
pop
push
shll
push
insl
pcmpgtw
push
and
mov
mulb
repz
cmc
xchg
mov
xlat
inc
adc
ret
lcall
jns
int3
ds
sahf
dec
push
loopne
mov
inc
sbb
jle
push
mov
or
push
mov
imul
jnp
lret
cmp
mov
jb
cltd
dec
cs
jb
lret
sbb
jo
loopne
xchg
sti
pop
sbb
sub
xor
and
add
leave
xor
cmp
pop
inc
inc
cmpsl
testl
mov
test
cmpsl
mov
or
push
or
out
imul
repz
cmc
mov
rcll
leave
adc
aad
repnz
outsl
rolb
fdivrs
mov
adc
add
xchg
mov
cmp
popa
xchg
rcrb
arpl
push
subb
insb
pop
pusha
cmpsl
xchg
cmp
ret
jo
in
sti
movsb
ret
mov
in
pop
cs
inc
xchg
push
mov
and
push
pop
lock
push
push
or
lock
mov
ret
gs
lret
inc
loop
lret
and
lcall
push
adc
lcall
mov
loop
mov
call
sub
or
andl
popa
push
fiadds
mov
jnp
xlat
pusha
lea
adc
sti
scas
push
sbb
mov
pop
leave
xchg
xchg
testl
sti
fstps
rcr
push
cmp
je
lods
das
fdivrl
dec
inc
fidivs
es
imul
dec
test
jne
push
loope
inc
jmp
and
mov
pushf
jg
sub
add
dec
out
aad
stc
xor
faddl
in
cwtl
xor
xor
jo
rcl
ja
push
mov
cmpsl
loope
mov
fwait
enter
mov
repz
daa
stos
daa
and
sbb
cmpsb
cmp
pop
sbb
incb
cs
ret
xorb
dec
cmpsb
jne
stc
sub
ss
and
inc
cmp
scas
idivb
jns
mov
sub
daa
stos
add
cwtl
in
loop
pushf
and
lret
imul
or
fcomip
push
jno
fsubp
add
shld
mov
notb
mov
imull
mov
in
pop
xor
icebp
test
jmp
loopne
jecxz
mov
mov
ja
xchg
sub
les
outsb
insb
push
xchg
sub
cwtl
loopne
or
aam
add
out
dec
xor
fwait
xchg
or
shlb
rclb
mov
mov
pushf
popa
push
jno
rorb
cli
pop
pop
movsb
daa
or
or
ljmp
push
sub
imul
jg
jo
pop
cltd
lret
mov
mov
dec
or
mov
mov
push
jmp
adc
pop
xchg
dec
cmc
jmp
push
loopne
bound
ljmp
push
cmp
mov
push
mov
pop
sub
pop
and
add
jno
inc
insl
xlat
lret
repnz
xchg
cli
mov
jbe
pop
add
or
and
inc
int
fsubrl
jg
stos
dec
cld
inc
shlb
out
dec
insb
lods
mov
sub
add
push
jns
ficompl
sahf
lret
imul
inc
xor
int3
or
push
sbb
testb
fmuls
xchg
cmp
outsb
and
ljmp
inc
out
jne
mov
pop
sti
and
mov
jle
sbb
aad
inc
pusha
addl
sbb
outsb
dec
push
invd
sub
repz
insl
sub
cmp
jmp
lret
mov
xor
mov
idivl
push
out
push
xor
mov
cld
dec
mov
xor
pop
shlb
shlb
inc
push
mov
iret
sbb
repnz
in
push
ljmp
dec
lret
mov
in
in
stos
xchg
xsave
add
pop
sahf
jo
sub
shrb
insb
add
adc
xor
mov
movsl
mov
and
xchg
xlat
push
mov
cmp
gs
icebp
out
addl
ljmp
dec
mov
pop
lret
imul
push
jnp
sbb
and
mov
and
in
jle
ss
dec
fwait
pop
daa
xchg
mov
sub
inc
cmp
jo
mov
and
lret
mov
or
push
cmp
in
aam
push
aad
push
dec
cs
jg
ljmp
add
cltd
in
inc
jp
call
outsb
add
and
push
push
or
lcall
jge
inc
ret
addl
loopne
fsubrs
ds
inc
sub
mov
movsl
cltd
pop
pushf
pop
cmp
loopne
cli
adc
push
outsl
or
daa
adc
bound
push
aaa
dec
sub
xchg
push
pop
mov
jbe
loope
stc
adc
movsb
ljmp
mov
xchg
es
cmpsb
gs
sarb
aad
popf
jg
clc
dec
ljmp
sub
rcrb
inc
pop
js
fwait
pop
adc
xchg
in
xlat
or
xchg
cmp
out
jnp
mov
data16
cmp
ss
fnsave
jl
cld
mov
or
push
add
pop
decb
dec
mov
sbb
bound
imulb
and
and
push
movsb
add
das
cmp
fadd
pop
fst
pop
push
clc
and
push
or
jmp
inc
gs
push
or
and
in
add
cmp
aaa
add
jecxz
adcb
adc
mov
adc
inc
cwtl
sbbl
jo
call
dec
mov
sahf
cmc
ret
cs
loop
inc
adc
xor
mov
aas
push
sub
xor
loop
sbb
sbb
dec
es
rcll
lds
fimuls
cs
lods
push
sti
mov
movsb
stos
jae
ds
in
sbb
sbbl
push
jo
push
sbb
lahf
mov
inc
outsl
jl
test
dec
mov
xor
pop
jne
insb
push
or
jo
push
or
and
in
cld
shlb
sahf
popf
sub
dec
das
sbb
loopne
iret
push
jl
ja
jecxz
sbb
in
pushf
sahf
aas
pop
out
xlat
cmpsb
xor
lods
xchg
aam
cli
popf
into
sbbb
mov
int3
push
sub
out
roll
jecxz
cltd
pcmpgtb
ficompl
rcl
cwtl
mov
out
shl
cmp
xchg
lods
out
inc
repz
loop
pop
test
test
jnp
ret
fmuls
cli
lahf
fnstenv
popa
cmp
mov
or
mov
cmp
sbb
ja
jle
add
adc
xchg
xchg
ds
test
aaa
adc
daa
ja
fwait
nop
dec
pop
shlb
inc
push
sbb
call
insl
das
push
xchg
insl
outsl
btc
ljmp
mov
ficomps
cmc
xchg
push
pop
pop
ljmp
dec
inc
jne
and
mov
sub
inc
xchg
jae
cmc
ja
shrb
scas
leave
pop
mov
mov
fiadds
and
jle
in
rol
dec
mov
rorb
sub
mov
je
inc
adc
sarb
sub
cwtl
pusha
sub
mov
ljmp
pusha
mov
outsb
fildl
out
cwtl
jmp
enter
sub
popa
jmp
pop
sub
and
pop
cli
mov
mov
mov
push
xor
xchg
jg
xor
lods
ds
lcall
outsl
add
mov
mov
jae
push
pop
jp
sti
inc
dec
push
dec
sub
shrl
imul
xchg
out
imul
aaa
scas
std
pushf
mov
sub
aad
ds
movsl
movsb
leave
adcl
cmp
mov
jb
and
jnp
nop
sbb
or
or
jae
fdivrs
inc
inc
lret
xor
mov
dec
pop
push
loope
test
mov
rorb
out
imul
repnz
push
sub
pop
sbb
gs
xor
sbb
mov
or
xchg
andl
mov
add
mov
cmpsb
test
cmc
push
xchg
dec
mov
lret
pop
pop
insb
mov
sbb
dec
mov
xchg
fwait
dec
ljmp
dec
cmp
ficompl
cmp
mov
imul
js
daa
or
pop
popa
insl
lret
stos
xchg
xchg
add
ja
shll
cmp
lea
mov
stc
sahf
je
push
jbe
arpl
mov
int
lods
jmp
sub
aam
mov
adc
jne
pop
adc
cmp
jo
mov
xchg
pop
mov
jl
jmp
cmp
fldcw
das
sub
loope
dec
lds
enter
sbb
div
and
mov
roll
lret
leave
sbb
stos
out
aam
mov
pop
xchg
mov
lock
xor
hlt
imul
in
mov
or
cmp
sub
psubsb
push
aam
mov
or
sub
or
pop
mov
add
mov
bound
or
mov
cmp
or
pusha
sbb
adc
mov
jbe
shrl
push
fisttpl
lahf
pop
jle
xchg
jne
shlb
in
dec
add
push
das
mov
int
push
sti
xor
dec
xchg
or
mov
adc
push
sbb
inc
or
dec
pop
cmpsb
and
xor
rorb
fwait
pop
pop
int
mov
cmp
mov
mov
push
imul
jo
adc
cld
adc
inc
inc
pop
cmp
in
leavew
jp
loopne
pushf
scas
call
addr16
and
push
lods
jge
bound
test
and
add
lods
leave
in
mov
jbe
fbld
or
mov
adc
lods
cld
sub
and
or
insb
ret
and
test
mov
jb
push
or
in
popf
mov
push
jns
in
shlb
jle
pop
lea
popa
push
cmp
fidivl
cmp
stos
push
add
push
ss
mov
inc
push
lods
cmpsl
mov
dec
mov
fwait
dec
add
cmpb
add
ret
mov
nop
js
test
hlt
push
sarl
dec
jg
add
sbb
and
mov
or
cmpb
hlt
ret
pop
inc
loope
cmp
in
fbstp
xor
psrad
dec
pop
daa
lcall
roll
aam
jl
lret
pop
fmul
mov
adc
jp
push
stc
pop
mov
cld
fwait
addb
stc
push
cmp
pop
repnz
sbb
ret
dec
aaa
cmpsb
loopne
xor
push
out
adc
vpunpcklbw
mov
mov
ret
inc
and
xchg
inc
in
jl
mov
mov
daa
cli
inc
push
pop
inc
mov
or
insl
cmpsl
std
popa
push
in
pop
je
mov
cmp
push
xchg
paddq
xchg
dec
and
sahf
fwait
sarb
daa
outsl
cmpsl
sbb
lds
xor
lds
sti
or
push
ffreep
and
fstpt
push
enter
sarb
jge
xchg
and
xchg
mov
dec
sbb
jp
je
arpl
lds
lds
cmp
mov
mov
repnz
mov
mov
inc
stc
icebp
jmp
jmp
adc
pop
cmovb
jge
ret
jecxz
mov
cmpsl
or
out
add
jg
andl
pop
and
xchg
loopne
sub
stos
mov
aaa
shlb
out
enter
insb
mov
lods
pop
push
popa
aaa
or
pop
push
aad
mov
leave
cmpsb
cltd
mov
popa
sbb
in
imul
mov
clc
sbb
xchg
in
test
cltd
lock
adc
pushf
lods
mov
xchg
stos
leave
out
fwait
and
or
outsb
dec
lods
int3
sub
sbb
adc
imul
aad
jnp
pusha
inc
inc
push
ljmp
test
leave
movsl
nop
and
xchg
ja
mov
popa
adc
sbb
xchg
mov
adc
in
test
mov
cwtl
or
pushf
test
mov
mov
inc
das
cmc
shll
sub
fmul
mov
gs
out
xchg
sub
push
daa
jo
mov
mov
decb
std
pusha
aaa
insl
mov
clc
mov
imul
inc
test
pop
adc
pop
imul
data16
add
aad
and
cmp
nop
jo
adc
and
scas
scas
push
inc
lret
push
cld
fucomip
popf
mov
je
cmpsb
cmp
add
sbb
div
sbb
cmp
in
loopne
sub
cmp
fs
sbb
add
and
or
push
leave
jmp
lea
gs
mov
cmp
or
pop
insb
jecxz
daa
fisubrs
fs
mov
arpl
sbb
pop
mov
cli
fs
dec
sub
mov
and
stos
pop
push
xlat
pop
mov
mov
push
or
mov
dec
inc
dec
ljmp
jo
std
iret
lahf
call
jne
mov
or
mov
dec
call
lock
jge
sub
mov
repz
fwait
push
subl
add
dec
xchg
xchg
sbb
loop
lods
lcall
mov
dec
das
mov
sub
adc
and
push
add
cltd
testb
lahf
cmp
xchg
mov
xor
decl
inc
shll
call
push
fnstsw
lock
test
adc
mov
ds
mov
mov
arpl
lcall
adc
testl
shll
xor
rolb
sbb
xorl
call
rcr
lds
sub
popa
xor
test
aam
mov
jmp
popa
xchg
cltd
ror
fwait
sbb
fldl
sbb
xorb
out
pop
lcall
lods
mov
stc
imul
pushf
out
mov
sti
jmp
mov
aam
xor
xor
arpl
push
cli
lea
mov
fisttps
lds
imul
es
sub
xchg
and
and
mov
jmp
push
rcrl
jo
out
and
jae
repnz
test
mov
xchg
and
and
or
sahf
repz
inc
or
xchg
call
add
cmp
lret
sub
mov
fistpl
out
add
sbb
and
je
jae
or
ja
jno
pop
cmp
nop
jmp
out
lahf
ljmp
add
cmp
xchg
jmp
mov
sbb
lock
out
sub
mov
pop
lret
sbb
and
dec
lret
movsl
adc
mov
adc
out
adc
and
ds
mov
add
lcall
dec
sbb
pop
cwtl
xor
test
adc
fisttpl
pop
arpl
jp
test
bound
aam
cwtl
loopne
push
fcmovu
xlat
fidivl
lock
xchg
scas
pop
shll
call
pushf
dec
xchg
sbb
push
xchg
add
fs
out
and
je
fcompp
jle
ret
xchg
dec
movsl
data16
out
xchg
cmp
cmc
push
xor
sub
inc
jg
cmp
push
stc
dec
pop
or
inc
and
call
icebp
cmpsb
push
pop
or
mov
mov
pop
and
lods
mov
lea
repnz
test
add
and
inc
jne
mov
dec
cli
outsl
mov
mov
lcall
js
jl
push
xor
jnp
jne
adc
ss
dec
xchg
jmp
xchg
pop
dec
inc
jge
dec
shr
rcrl
aam
add
mov
movsb
or
push
popf
mov
push
div
cmp
mov
push
movb
add
xor
push
adc
cmp
sub
repnz
scas
dec
test
cmp
xchg
movsl
add
test
cmp
mov
mov
or
dec
or
leave
scas
pop
sbb
fcompl
mov
lods
sub
scas
xchg
stc
out
or
push
cmp
out
push
add
push
xchg
das
enter
std
fwait
bound
add
push
adc
movsb
aam
xchg
daa
insl
test
inc
sub
in
dec
ret
shlb
out
jle
in
xor
mov
cmp
in
adc
repnz
call
mov
fcmovbe
xor
nop
pop
push
xor
mov
cltd
fcmovb
push
int
jns
mov
sbbl
icebp
stos
shlb
in
push
jmp
ficoms
cmc
xor
pop
rolb
mov
adcb
and
enter
sbbl
add
rolb
fnstcw
icebp
pop
mov
stos
jmp
or
sbb
cmpsl
xchg
sbb
xchg
cwtl
add
fcomi
inc
ljmp
xlat
xchg
mov
and
les
insl
pop
loopne
jae
sub
sbb
je
lahf
and
cs
rcrb
adc
stos
orb
jle
out
pop
inc
iret
or
sub
jns
movsl
repz
outsb
lods
mov
cmp
sarb
ficomps
test
jl
mov
cmpsb
lret
outsb
cmp
jmp
push
mov
cmp
mov
inc
mov
call
fnstsw
iret
mov
xor
shrl
mov
imul
in
scas
cltd
popf
imul
jns
pop
sbb
jmp
add
out
aam
push
cmp
insl
out
dec
mov
pop
push
aaa
iret
pop
les
lea
es
cmp
ds
stos
pop
push
and
pop
lds
jb
fidivrl
sbb
mov
sub
mov
inc
mov
mov
pop
lea
dec
mov
adc
and
dec
jmp
mov
dec
addl
mov
jecxz
and
movl
sahf
fstl
pop
out
rclb
outsl
fiaddl
jl
mov
test
lea
in
test
and
sub
es
daa
jge
scas
mov
or
aaa
test
fstl
cmpsl
fwait
pop
cmpb
dec
mov
daa
pop
in
popa
out
sub
inc
call
mov
mov
xchg
clc
sbbl
cmpsb
das
fwait
int
push
shr
add
or
dec
dec
ds
int
push
fs
dec
adc
data16
sbb
faddl
fdivs
sub
outsl
adc
jb
inc
call
mov
test
xor
pop
inc
psubsw
stos
lods
sahf
pop
xchg
fcoms
mov
jmp
push
dec
mov
xorl
xchg
inc
xchg
mov
stos
jecxz
imulb
sahf
inc
inc
inc
or
mov
jo
inc
add
add
in
xchg
iret
fdivrs
shl
pop
inc
pop
mov
aad
les
jmp
aas
subb
addb
mov
xchg
popf
js
out
inc
mov
inc
jmp
mov
add
pusha
call
xor
in
sub
fldenv
es
mov
push
sub
std
loop
fsts
dec
subl
lds
mov
dec
aad
adc
into
mov
and
cmp
xchg
int3
lock
xchg
test
xchg
stos
add
xor
movsb
mov
cmp
scas
cmpsb
add
mov
insb
sbb
outsb
ror
daa
rorl
mov
mov
hlt
mov
fcompp
jecxz
gs
jg
stc
lahf
mov
push
push
popf
pop
sub
ljmp
jnp
xor
test
pushf
scas
sub
and
dec
into
fwait
into
fsts
or
mov
repnz
add
loop
inc
dec
xchg
jno
and
mov
pop
fnstenv
mov
stos
pop
jp
imul
mov
xchg
xchg
cmpsl
psllq
outsb
lea
ret
add
mov
jmp
mov
jae
pusha
loopne
dec
sahf
arpl
loop
adc
faddl
bound
in
mov
pop
dec
jns
popf
adc
test
xchg
leave
cmpsl
aaa
pop
sub
pop
cld
ljmp
cmpsb
arpl
mov
and
add
repz
scas
ja
test
bound
aad
mov
mov
cli
fnstsw
xor
xchg
imul
add
pop
lea
add
lods
xchg
lret
js
inc
out
shll
negb
fiaddl
xor
push
sbb
push
sub
test
shlb
pop
nop
sbb
and
lret
dec
iret
pop
xchg
mov
aaa
lahf
inc
jp
mov
dec
fwait
sarl
int3
out
pop
sti
test
vpsllw
scas
mov
xchg
lret
leave
fdivr
incl
pushl
xchg
lea
jge
adc
push
inc
add
dec
xchg
dec
mov
adc
jecxz
int3
je
mov
ret
push
insl
jo
fcompl
lahf
sbb
pop
mov
and
mov
sbb
into
cmp
test
aad
fdivs
add
inc
sub
leave
cmp
fwait
test
or
xchg
outsl
or
icebp
xor
jge
xchg
xchg
adc
mov
mov
mov
lods
xchg
adc
or
xor
adc
mov
add
leave
fdivl
jmp
adc
push
stos
pop
push
xor
test
adc
mov
andl
fcmovne
in
mov
sbb
jb
pop
les
pushf
scas
insb
mov
aaa
int
pusha
aas
jnp
push
adc
hlt
cli
divl
xchg
dec
mov
adc
sbb
mov
outsb
cld
adc
cmp
pop
jnp
jle
ret
mov
inc
add
in
lock
inc
mov
mov
lahf
outsb
add
pop
push
data16
or
loopne
cmpl
pop
fwait
cmp
int
scas
hlt
pop
shll
and
mov
pop
lds
mov
ret
dec
js
push
mov
jb
push
mov
rcrl
push
sbb
clc
test
xchg
lea
adc
cmc
jo
pop
insb
addr16
push
rcll
shlb
lahf
sti
ret
cmp
fidivl
jno
push
aam
sub
and
xlat
inc
pop
or
fmull
sub
mov
add
sti
pop
inc
mov
inc
push
push
xchg
mov
fmull
inc
sbb
push
sbb
lea
xchg
test
cs
daa
jmp
adc
cmp
or
xchg
mov
add
or
pop
lods
mov
jl
mov
inc
cmpsl
or
arpl
sub
clc
cmp
sbb
in
shl
dec
loopne
bound
test
cli
aam
stos
mov
cmp
stc
mov
pop
ss
arpl
inc
imul
fsubrl
mov
jne
jle
lock
int3
call
cli
and
jbe
movsb
xchg
adc
jb
and
mov
ljmp
add
int3
daa
xor
inc
cltd
test
pushf
and
xchg
xchg
xchg
mov
mov
or
in
push
ja,pt
and
sbb
cwtl
cltd
sahf
mov
int
cmp
mov
mov
fadds
cltd
pop
outsb
push
std
cs
lods
fbstp
jmpw
bound
pop
enter
flds
jns
fcmovne
adc
pop
add
jge
aam
cmp
mov
sub
in
and
xchg
inc
dec
mov
dec
or
mov
cmp
pop
mov
mov
ret
push
out
ret
cmc
mov
lahf
adc
mov
test
aas
push
and
xor
stos
lods
sti
mov
outsb
mov
jge
jle
add
mov
push
mov
xor
xor
daa
loop
test
imul
imul
jo
mov
jnp
push
lret
push
dec
pushf
test
jecxz
fdivr
push
pop
xchg
imul
repnz
call
dec
add
inc
cmp
jle
sub
inc
repz
int3
cwtl
xchg
inc
dec
rcrl
jge
mov
mov
inc
mov
jbe
jmp
mov
adc
fldcw
or
mov
out
outsl
test
leave
mov
nop
jbe
ljmp
add
push
adc
iret
sbb
push
cwtl
jecxz
inc
fstp
sar
and
fidivl
test
rol
scas
mov
aad
dec
xchg
icebp
clc
ds
pop
test
jnp
adc
mov
das
bnd
mov
fildl
rcrl
fisubs
or
insb
jno
stc
je
cmp
push
stos
scas
daa
pop
insl
filds
jmp
cld
insl
mov
xor
and
or
mov
addr16
das
push
sub
and
ljmp
int3
xor
and
xor
inc
xchg
shrb
xchg
push
mov
inc
dec
push
fs
les
dec
fs
xchg
aad
stc
and
inc
jae
inc
add
mov
test
push
xchg
outsl
stos
fstps
mov
dec
ret
adc
insl
ljmp
cmpl
cli
ficoms
testl
outsl
frstor
test
jl
filds
lods
mov
cmpsb
or
cmp
in
inc
stos
stc
and
sub
sbb
jae
imulb
mov
das
or
aas
lahf
shlb
loop
fbld
cmp
xchg
repz
mov
ja
xchg
push
lcall
sbb
push
out
hlt
mov
jb
adc
pushf
bound
roll
or
mov
pop
adc
les
adc
dec
nop
adc
cmp
out
push
addl
xor
aaa
movsb
jmp
dec
aad
add
add
scas
sbb
xchg
lret
rcrl
jno
dec
adc
jl
rcll
mov
lahf
inc
push
int
ret
leave
mov
or
rolb
popf
enter
pop
fcomps
sahf
popa
add
jp
insl
push
jo
push
xlat
call
dec
sbb
pop
test
pop
int
and
into
pop
jno
into
add
inc
mov
mov
add
ret
pop
mov
out
lret
je
sbb
add
inc
cmpsl
shll
add
lods
hlt
in
jb
sbb
mull
push
mov
or
lret
int
xor
push
inc
inc
xlat
adc
cmpsl
sbb
sub
sub
xchg
and
sti
aaa
pop
cmp
lods
push
std
inc
mov
clc
popa
xor
xchg
inc
ds
xchg
popa
xorl
lret
and
or
jmp
dec
mov
mov
sbb
mov
sar
xlat
add
jnp
add
push
sbb
cmp
mov
mov
lea
inc
lcall
outsl
lcall
ds
mov
int3
adc
xlat
bound
and
lar
xor
cmp
and
mov
aad
arpl
mov
sbb
xlat
dec
dec
jmp
jno
ret
shr
leave
or
aad
adc
test
outsb
and
jle
iret
xor
and
pop
and
pop
stos
sub
and
pop
rorl
imul
cs
nop
mov
dec
cmp
push
lret
cmpsl
inc
frstor
xor
dec
mov
cmp
mov
and
sbb
jae
xchg
push
add
mov
push
push
and
inc
std
enter
daa
push
sbb
fsubrl
mov
sbb
aam
hlt
push
push
mov
mov
dec
adc
pop
jae
int3
jl
bound
sarb
outsl
popf
and
jne
push
insb
cs
in
push
pop
repz
jl
jge
xchg
lret
sti
adc
fadds
lds
xor
or
jbe
xchg
jmp
mov
or
mov
imull
xchg
fdivrs
jo
lret
cmp
loop
sbb
push
rcrl
or
and
add
fildl
or
push
roll
dec
jmp
mov
imul
push
mov
testb
aam
cmpsl
mov
js
shlb
and
mov
xor
lahf
sbb
xchg
out
add
mov
mov
jecxz
mov
in
or
sub
sarl
fs
mov
adc
shll
cld
xor
outsb
es
push
lahf
hlt
fisubs
xchg
cmp
jmp
inc
inc
pop
stc
rorl
arpl
cmp
pop
in
mov
adc
sbb
add
and
test
addr16
les
arpl
lock
push
dec
imul
push
adc
pusha
lea
test
mov
addr16
inc
xlat
jg
mov
imul
ja
ds
outsl
cmp
add
decl
fcmovu
dec
test
subb
jmp
mov
jecxz
inc
and
mov
or
rclb
and
fwait
pop
cld
push
ret
imul
jge
fidivs
jbe
cmc
lret
rcll
cmpsb
sub
dec
out
mov
in
fdivrl
sbb
mov
push
xchg
sub
xor
push
jns
pop
movsb
sbb
mov
hlt
push
push
outsl
enter
scas
mov
out
hlt
mov
les
pop
and
sbb
inc
sti
pop
inc
xchg
cmp
enter
test
ds
inc
lret
lret
call
push
mov
xor
andl
sahf
nop
testb
dec
movsbl
imul
jl
and
cmpsb
jae
and
mov
cmp
pop
xchg
cltd
or
or
sub
stos
xor
out
loop
fwait
inc
stos
fmulp
sub
call
push
cmp
aad
ss
or
pushf
xchg
popa
mov
push
gs
xlat
mov
int
lcall
mov
adc
jb
in
scas
fneni(8087
and
mov
dec
fistpll
rclb
xchg
sahf
andb
push
jl
mov
mov
lock
cmp
shl
out
jl
mov
inc
les
xorb
or
lret
stos
stos
mov
gs
push
pop
int3
dec
shrb
cmc
rcrb
std
push
loop
and
sbb
gs
in
out
mov
cmpl
or
insl
sahf
inc
std
mov
jmp
xor
icebp
loopne
jle
adc
or
icebp
or
mov
mov
lcall
push
jns
xlat
mov
imul
cmp
or
inc
mov
fstpl
sbbb
test
ljmp
inc
sub
add
sbb
imul
lret
mov
and
inc
push
lea
nop
jne
inc
les
xchg
aaa
lea
cmc
xor
and
cmc
push
je
add
sbb
enter
fldl
sbb
pop
jo
es
mov
movsb
dec
pop
xchg
scas
sub
mov
adc
jae
daa
shll
jecxz
fnstenv
movsb
jl
mov
jo
pop
imul
mov
mov
push
sbb
and
jp
test
mov
mov
mov
jnp
sbb
fisttpl
nop
inc
cmp
out
sub
pop
pop
pop
dec
mov
inc
mov
jae
xchg
clc
mov
mov
push
shlb
fmul
dec
loop
xchg
sub
les
movhps
insb
pop
sub
sub
lcall
inc
cmpsb
call
push
add
xor
in
sbb
aad
test
push
inc
and
xchg
rcll
xor
or
fsubs
dec
sbb
imul
int
and
std
das
fiadds
repnz
mov
jae
add
mov
sbb
gs
imul
roll
mov
dec
stc
fimull
sub
dec
loope
ja
xor
scas
pop
xor
enter
xchg
repz
sub
adc
jno
int
aas
adc
in
orb
out
fbstp
push
ret
stos
dec
lock
mov
xchg
insb
pop
mov
lcall
mov
add
mov
andl
cmp
cmp
imul
jbe
mov
fwait
cmp
mov
mov
push
push
out
ljmp
nop
sub
add
popf
in
aas
js
daa
fdivr
int3
adc
jmp
dec
shl
dec
popl
dec
push
adc
lahf
in
in
jecxz
cmp
dec
inc
ss
testl
jl
pop
xorl
xor
outsl
int
mov
xor
shrl
lds
aam
jb
loopne
outsb
dec
push
out
mov
dec
or
mov
leave
sti
inc
and
mov
inc
cs
fidivs
idiv
mov
imulb
inc
les
pop
add
subb
pusha
mov
bound
stc
cmp
jecxz
aaa
jecxz,pn
mov
sub
xchg
lret
sbb
leave
cmpsb
stos
adc
adc
xorb
mov
int3
lds
fstpt
pop
cli
pavgb
dec
mov
sub
xor
dec
lahf
lods
imul
sub
into
pop
aaa
lds
add
mov
adc
rcrl
ret
cwtl
mov
mov
sbb
bound
out
les
and
xchg
pop
jecxz
mov
shr
ds
enter
mov
loopne
mov
push
aaa
lods
bound
and
adc
movsl
andb
stos
add
mov
sub
cltd
fwait
das
mov
in
aas
cmp
repz
pop
pop
xlat
jp
mov
test
nop
icebp
repnz
fdivrs
push
push
dec
hlt
out
lret
adcl
sub
mov
imul
mov
mov
cld
js
cli
jl
pop
dec
pop
dec
jle
xor
jmp
xchg
jno
jb
ljmp
pop
cld
fmull
add
xchg
xchg
pop
pop
xchg
int3
inc
test
cld
into
scas
scas
push
and
popa
adc
add
ja
movsb
repz
mov
mov
cmp
shll
jg
pop
adc
dec
aad
pop
xchg
clc
les
mov
or
fnstsw
iret
sub
divb
and
pushf
stos
jbe
rclb
test
cs
mov
and
call
push
xchg
mov
adc
push
add
inc
inc
mov
clc
lahf
add
push
fstpt
push
ljmp
lret
push
shll
cmp
inc
fdivr
in
adc
idivb
push
insb
int3
in
sti
xchg
mov
nop
int3
imul
pop
imul
sbb
jno
enter
int3
sub
ficoms
push
ficoml
cmp
cmpsl
push
clc
pop
pop
cmpsl
sub
adc
fcoml
pop
dec
stc
loope
jnp
jo
insb
fadds
test
mov
xchg
test
fisubrl
out
aas
insb
lret
adc
mov
jecxz
cltd
stos
xchg
sub
mov
test
mov
jbe
shll
adc
xchg
movsl
sub
cwtl
push
fwait
pop
test
mov
cmp
movzbl
xchg
or
cwtl
scas
outsb
orb
pop
in
std
sub
sbb
aad
dec
or
cli
fsubrl
shll
or
mov
cltd
data16
popa
sbb
mov
pop
ret
call
mov
cmp
mov
in
xor
xor
call
mov
ret
mov
stos
lds
add
sub
xorb
lahf
sub
dec
es
int
push
jne
arpl
dec
sbb
enter
dec
mov
test
cld
sub
inc
add
xor
fisubs
fidivrl
xlat
jno
mov
popa
push
test
jl
cmp
pop
cwtl
jmp
rol
sub
dec
enter
push
rorb
fwait
sbbb
cmp
scas
sbb
sahf
inc
into
mov
push
ret
xlat
mov
add
fwait
push
push
stc
pop
imul
cwtl
ljmp
cmpsb
cli
loopne,pt
mov
push
or
mov
int
test
push
jl
and
and
sahf
dec
cmp
inc
int
aad
jo
call
xor
lret
mov
rcll
std
mov
jl
out
lock
push
sub
ss
imul
sbb
push
jb
and
cmpsb
sbb
jno
ds
jno
dec
lcall
jle
imul
loope
add
daa
repnz
adc
or
je
mov
shll
loop
pusha
std
aad
push
mov
push
inc
mov
loopne
add
jmp
lea
ss
mov
pop
cmp
push
dec
lret
sub
dec
mov
xorl
or
enter
adcl
xor
lods
adc
cmp
shll
pop
test
jno
ret
push
cld
xchg
arpl
mov
das
scas
pushf
dec
pop
fs
xchg
and
dec
and
popa
leave
imul
adc
negl
cmp
inc
dec
xchg
mov
aaa
or
jg
xchg
test
fs
pop
fsubrs
mov
call
adc
negb
push
add
dec
bound
push
xlat
adc
cmc
push
add
xchg
in
inc
and
loop
add
lret
in
lret
mov
pop
cmp
cmp
insl
or
cmp
inc
lret
in
inc
adc
jo
dec
push
or
mov
leave
bound
xchg
std
pushf
jg
xor
jo
inc
jne
xchg
test
xor
sub
push
xchg
push
adc
lods
aaa
and
xor
std
adc
sbb
xchg
lahf
jae
imul
push
ss
dec
call
or
cmpsl
adc
jno
rol
push
cmpsb
sti
int
in
xlat
xchg
sbb
sahf
push
roll
lea
or
or
iret
jmp
push
icebp
pop
mov
pop
mov
and
dec
mov
inc
sub
and
push
mov
je
mov
jnp
pusha
ret
icebp
xchg
cmp
cwtl
xlat
sbb
cmp
or
dec
in
add
pop
sahf
mov
movsl
push
mov
xchg
popf
lock
xor
add
dec
mov
inc
insb
jge
lods
jb
or
sub
inc
push
jge
jmp
and
add
jo
popa
inc
pop
movsb
inc
flds
push
mov
data16
in
inc
jp
testb
jno
mov
in
adc
out
jno
cmpsb
jp
mov
jl
pop
out
call
repnz
pop
pop
inc
arpl
cmpsl
test
ss
jno
lahf
sub
bound
jg
or
pop
xor
js
dec
add
lods
ficomps
and
cwtl
jno
sub
fstps
ficoms
negb
in
inc
jno
xchg
xchg
xchg
hlt
or
mov
fmull
loopne
inc
or
ret
imul
mov
addr16
sub
mov
inc
dec
das
aaa
movsl
dec
sbb
lods
xchg
sbb
adc
in
mov
lea
stos
inc
jp
mov
call
movsl
push
push
pop
jne
aas
xor
pop
lods
inc
flds
cltd
cltd
lods
cmp
into
bound
fnsave
sbb
xchg
cmp
dec
dec
rclb
add
rolb
mov
je
data16
hlt
loope
or
jg
sub
fdivrs
sub
movsl
out
xchg
mov
inc
cli
add
push
lds
sbb
add
mov
outsl
cmp
mov
lods
mov
xchg
xor
mov
sbb
pop
stc
js
enter
es
mov
push
push
adc
stos
jne
push
lahf
push
xor
adc
das
dec
pop
outsb
sbb
lods
push
aad
ret
cmp
jg
in
xchg
jmp
in
inc
pusha
jle
lcall
add
jno
add
adc
mov
enter
fdivl
inc
inc
cli
pop
sbb
cmc
iret
xchg
push
test
mov
and
mov
jo
mov
mov
pop
jae
or
xchg
jno
inc
push
mov
je
inc
or
mov
pop
repz
mov
fs
out
fwait
icebp
jp
pop
add
jg
cwtl
sub
sbb
mov
sahf
std
mov
insl
rclb
inc
shll
test
push
pop
sti
cmp
iret
cmp
dec
out
js
loop
aad
fcomps
adc
cmpl
repz
adc
xchg
ret
pop
scas
in
cmp
add
jecxz
test
push
mov
push
aas
jmp
jecxz
mov
sahf
or
mul
pop
cmp
icebp
mov
pop
scas
and
shlb
inc
cld
sub
sub
push
or
or
inc
iret
sub
push
clc
mov
xchg
into
push
adc
mov
stos
ret
fistps
fidivl
pop
add
jo
into
mov
cmpsl
push
loop
icebp
movsl
cmp
jne
les
std
sub
push
out
jmp
jno
add
add
xchg
movsb
push
lock
sub
in
cld
xchg
shlb
adc
popf
xor
sub
int3
mov
out
fs
and
mov
pop
iret
in
cmp
push
cmp
sbb
jp
cmp
ret
das
push
mov
ret
dec
mov
inc
inc
imul
jnp
sub
jmp
adc
push
jne
jb
mov
test
push
pop
fnsave
call
aam
jmp
xor
ds
add
jg
cwtl
dec
je
inc
rcr
dec
cmpsb
repz
sarb
pushf
ja
mov
cmpl
dec
push
insb
adc
jnp
ds
mov
sbb
sti
adc
stc
cltd
test
add
ret
rcl
cltd
pop
mov
shrb
js
push
xor
imul
mov
adc
dec
add
lahf
inc
jecxz
mov
jecxz
xchg
cltd
pop
inc
push
push
ljmp
push
fwait
mov
jmp
mov
out
outsl
into
fdivrl
mov
stc
jae
pop
mov
out
cmpsb
bound
inc
or
sbb
popa
and
mov
inc
and
hlt
loop
sbb
pop
das
sahf
mov
xchg
dec
repnz
inc
jns
cmc
fldcw
and
xlat
mov
icebp
ljmp
inc
and
daa
push
into
cs
cmp
jmp
lods
fistl
stc
or
mov
pop
lret
sub
imul
mov
and
push
adc
push
into
movsb
test
out
hlt
bound
test
push
std
mov
mov
sti
sub
popa
lock
inc
lcall
in
push
xchg
insb
pop
fidivrs
add
pop
and
das
leave
jns
pop
adc
sbb
jne
pop
scas
lock
cmp
test
mov
je
and
dec
outsl
cmp
fsub
dec
jae
sub
lahf
mov
add
scas
sub
fisttpll
imul
push
xor
insb
mov
xchg
mov
jl
inc
daa
mov
pop
push
push
in
adc
inc
ret
dec
imul
jmp
inc
out
fnstenv
mov
movsl
arpl
popa
cmp
add
xchg
testb
sbb
jle
jno
xchg
in
or
mov
test
push
div
jb
sbb
mov
dec
sub
mov
cmpsl
cli
clc
aas
nop
mov
sbb
leave
add
mov
xor
sbb
out
dec
xor
mov
sti
dec
js
ss
pop
lds
movsl
xchg
push
sbb
push
sbb
pop
lret
insl
inc
fwait
push
jae
and
jmp
sub
mov
pop
ds
cmp
lea
mov
adc
mov
mov
lcall
fnsave
ret
out
lea
inc
repnz
pushf
popf
dec
sbb
fidivs
add
cltd
jae
out
mov
pmulhw
jg
loope
mov
pop
imul
xor
adc
mov
mov
notb
dec
push
cmp
leave
cltd
sar
repz
adc
out
mov
mov
lret
scas
cmpl
imul
jne
inc
cmpsl
subl
mov
jmp
xchg
addb
cmp
mov
cmp
push
cmpsl
jo
clc
lahf
pusha
jb
xchg
lret
dec
test
adc
fdiv
cmp
and
dec
stc
btc
pushf
ret
lcall
outsl
into
ja
and
lea
or
mov
fistpll
cltd
mov
inc
xchg
imul
lods
in
dec
in
leave
cli
jmp
sbb
aam
sbb
sub
inc
lods
jmp
gs
inc
repz
mov
scas
out
push
andl
dec
cmp
and
pop
mov
call
shl
inc
movsb
xchg
jb
push
jno
xlat
fidivrs
lcall
xor
sbb
stos
xchg
mov
mov
rep
adc
or
mov
add
sahf
jns
jl
mov
mov
lock
mov
mov
fidivl
pop
jnp
jmp
iret
rorb
insl
std
and
insl
sbb
dec
jne
les
ja
scas
sbb
mov
outsb
xlat
push
jno
bound
out
loop
out
fnstcw
or
dec
in
fwait
aad
dec
xchg
cmp
sub
enter
pop
jae
dec
out
hlt
jge
imull
cmp
or
enter
insb
jo
mov
jle
xchg
hlt
lret
in
and
cmp
mov
xor
push
cltd
ret
out
push
sub
in
das
mov
mov
cmc
jg
pushf
cmp
mov
jne
scas
jno
sbb
fimull
mov
test
es
dec
pop
xchg
jns
sahf
xor
lods
cmc
inc
dec
pop
rol
pop
and
imul
push
out
clc
shrl
sahf
data16
inc
jecxz
mov
movsl
das
out
sbb
pop
scas
mov
mov
lret
lods
into
pminub
test
mov
inc
pop
int
cmp
dec
les
in
ret
int3
mov
xor
mov
ljmp
dec
shlb
xchg
gs
push
push
loopne
movsl
push
add
repnz
mov
std
push
inc
xor
sbb
push
pop
sahf
pop
addr16
movsb
sbb
mov
out
lds
lret
int3
mov
popa
mov
sbb
and
inc
shl
pop
out
ds
xchg
pop
or
popa
leave
fimuls
les
lds
and
xor
in
mov
sarl
shrl
xchg
cs
mov
mov
fsubr
push
adc
mov
lds
pop
jg
adc
and
or
in
jp
cmc
pop
in
out
ret
push
push
mov
jmp
cltd
cmpsl
mov
fnsetpm(287
fisttps
sub
push
mov
xor
mov
mov
insb
ret
push
insb
add
and
dec
lret
sbb
lahf
adc
stos
popf
xor
int
mov
iret
push
adc
aaa
jbe
mov
mov
rcll
mov
dec
mov
and
ret
popa
jg
jp
jmp
outsb
das
jb
jbe
inc
out
leavew
loope
pop
mov
jnp
adc
mov
in
shll
jb
shlb
ss
and
sti
stos
xchg
cli
sub
push
jns
je
jg
shr
or
es
dec
add
repnz
insl
mov
inc
mov
ja
cltd
cmp
or
sbb
pop
iret
repnz
xor
sbb
cwtl
lock
pop
insl
jp
idivl
xor
ds
fcoms
xor
cmp
cmc
dec
shll
push
cwtl
dec
addb
xchg
jecxz
iret
imul
cld
shlb
xchg
popf
sahf
xor
fsubr
ret
add
sub
fucomp
shll
pop
repz
sbb
cmp
lret
adc
push
arpl
mov
jb
dec
dec
pop
dec
lcall
jmp
push
cwtl
aam
and
mov
dec
lock
mov
repnz
mov
sbb
xorb
hlt
insl
imul
mov
ret
add
daa
lea
mov
sti
xor
mov
jb
jmp
xor
mov
or
pop
nop
test
add
xor
ss
push
fs
xor
cs
sbb
jne
aaa
or
iret
xchg
daa
add
dec
out
call
cli
je
sbb
test
ja
shlb
push
push
mov
int
hlt
loope
imul
mov
loope
notb
imul
add
lods
push
dec
movsl
leave
push
dec
inc
mov
notb
pop
jmp
mov
enter
jbe
aam
mov
pop
or
aam
popa
fwait
push
jecxz
ret
cld
push
and
pop
ret
cs
sbb
outsb
lods
jno
sub
cmp
push
adc
jno
inc
in
rcl
or
add
scas
push
or
pop
iret
out
pusha
dec
cmp
or
mov
or
roll
jb
mov
sub
xchg
inc
jmp
push
shlb
sbb
mov
movsb
shlb
leave
or
in
clc
btc
jle
imul
mov
mov
mov
fcompl
cmp
das
popa
pop
mov
push
sbbl
inc
js
repz
inc
mov
jo
dec
fsubrs
aaa
dec
jle
lods
inc
mov
mov
push
dec
jbe
mov
push
clc
lret
sub
mov
lcall
cmpl
sbb
xchg
sarl
hlt
mov
repz
aad
jmp
imul
shrl
dec
push
insl
jge
pop
test
sbb
cmp
mov
xor
fcoms
aad
xorb
dec
and
ss
push
cwtl
in
call
cli
test
mov
decl
or
cmp
adc
mov
cmpb
adc
js
fwait
mov
push
je
in
data16
xchg
mov
lods
mov
test
lea
add
rcrb
push
cmpsb
xlat
pusha
mov
mov
push
mov
scas
fadd
adc
mov
jmp
and
hlt
fdiv
xchg
ss
xor
test
movsb
dec
jb
idivb
sub
lods
fcmove
iret
test
xor
mov
out
cmp
mov
insb
xchg
push
dec
outsb
inc
cmp
movsl
pop
mov
ret
iret
mov
jnp
ret
scas
out
outsl
imul
push
push
hlt
or
sbb
dec
inc
jns
jno
pop
sbb
cmp
cmp
pushf
xchg
xchg
sub
lret
or
jp
dec
cld
mov
xchg
dec
xchg
dec
xchg
push
test
pop
push
aaa
add
popf
sahf
adc
jns
jle
nop
and
and
dec
popa
rolb
mov
xchg
jg
adc
out
mov
gs
mov
lods
movsb
outsb
test
sbb
in
cmp
sbb
and
pop
mov
dec
xlat
add
incl
adc
std
pushl
lcall
sub
lret
sbb
movsl
mov
ljmp
cmp
lds
clc
mov
inc
add
into
inc
fistpl
sbb
out
pop
sbb
arpl
or
mov
test
pusha
inc
xchg
std
lret
push
outsl
orb
mov
stc
dec
and
popa
push
out
dec
pop
sub
pop
or
aaa
scas
popf
enter
mov
addb
dec
std
push
inc
std
cmpsb
js
or
mov
scas
sub
xor
imul
out
push
test
sti
inc
add
adc
sbb
sub
aaa
test
xchg
push
leave
cmp
cmc
push
sbb
sub
in
xchg
pop
sbb
xchg
add
into
les
adc
clc
movsb
ja
jnp
dec
bound
mov
push
sbb
and
or
mov
idivl
ljmp
and
pop
es
cmc
mov
push
lods
clc
lret
add
cmp
aad
rorb
imul
cmp
inc
mov
add
sbb
faddl
imul
inc
repnz
lret
popa
sub
sub
mov
lods
push
fildll
xor
push
lret
jnp
aam
sbb
sub
movsl
jae
dec
lret
stos
les
ffree
rcr
addr16
add
call
stos
pop
add
inc
add
push
dec
xorb
cwtl
mov
fnstenv
dec
sbb
and
fsubrs
jmp
inc
xchg
cld
push
sub
lods
test
cltd
sarl
cmp
addb
mov
fstpl
mov
int
jns
mov
mov
sbb
movsl
mov
frstor
adc
jmp
xchg
pop
mov
cltd
xor
mov
test
add
or
scas
cli
mov
pop
lahf
mov
inc
out
ljmp
mov
jecxz
xchg
fwait
mov
mov
data16
xlat
aad
fdiv
mov
sub
mov
in
pushf
push
push
in
xchg
jl
aas
outsl
jge
and
cli
sbb
mov
mov
stc
xchg
addr16
dec
addr16
jnp
das
fcmovne
jl
fcomip
call
andb
dec
je
ret
es
xor
ljmp
push
push
jo
cs
adc
stc
dec
jne
xlat
cltd
cmpsl
loop
push
shl
mov
jnp
call
stos
aaa
cwtl
insb
ja
roll
inc
in
in
fcomp
mov
pusha
jmp
jb
iret
cmp
je
mov
xor
xlat
sbb
cli
movsb
jg
leave
xor
mov
push
out
rcrb
mov
mov
cmp
inc
lods
or
dec
jg
mov
andb
lods
in
xor
dec
mov
rorl
xchg
push
fisubrs
lret
je
aad
clc
xchg
cmc
lret
mov
add
pusha
dec
mov
and
ds
dec
push
jecxz
mov
ja
repz
push
dec
ret
filds
lods
xchg
rcr
sub
mov
sti
pop
rcll
xor
pop
scas
mov
push
mov
repz
addr16
out
xchg
mov
pop
lret
daa
or
popf
in
jg
icebp
pop
aad
daa
pop
nop
aam
mov
jae
mov
dec
leave
test
ds
xor
dec
adc
xchg
sbb
push
cmp
push
sub
push
xor
or
xor
cmpsl
cs
lods
add
mov
dec
in
bound
lret
sub
mov
das
testl
stc
pushf
xor
imull
and
frstor
jp
punpckhdq
cmp
fstpt
inc
in
aad
lret
sahf
xorb
shrb
mov
and
mov
daa
mov
cmpsb
push
ficomps
arpl
pop
mov
adc
popf
and
hlt
loopne
leave
pop
loop
or
imul
lahf
ja
jecxz
ret
test
cli
jo
or
jp
repz
pushf
jl
or
es
loope
outsb
lahf
cmp
jp
xchg
fldcw
xchg
repz
test
and
in
pop
int
pop
or
dec
sub
jecxz
mov
mov
test
jge
insb
adc
shlb
imul
inc
mov
jg
sahf
movsl
outsb
in
cmp
test
pop
or
insl
dec
inc
outsl
push
mov
decb
dec
iret
push
dec
pop
jmp
rcr
fwait
sub
xchg
sub
xchg
imul
pop
add
push
cs
rcrb
mov
push
push
in
cs
pop
mov
xor
dec
nop
xor
hlt
out
das
movsb
xchg
pusha
push
mov
hlt
pop
std
in
adc
xchg
xchg
mov
sbb
push
push
lcall
rolb
xchg
cmp
xchg
mov
xchg
cld
xchg
iret
and
xchg
imul
mov
rcrb
jl
pop
dec
movsl
mov
ficompl
add
mov
push
push
pop
push
jl
cld
mov
jecxz
dec
inc
jne
xor
aas
fs
jb
cli
add
inc
jle
jl
xchg
xchg
push
add
cltd
push
xchg
test
push
lcall
jo
lods
imul
shrb
aam
xchg
mov
mov
std
push
fistps
dec
in
jns
and
cmp
adc
fmull
lods
ds
push
xor
rorl
jo
jecxz
imul
jb
mov
dec
imul
jecxz
or
inc
gs
sub
xor
lret
in
jns
xor
idiv
je
das
jo
pop
or
add
insb
js
sahf
xchg
jp
mov
add
inc
repnz
aas
stc
insb
pmulhuw
sbb
loope
insb
insb
jge
testb
addr16
notl
mov
sbb
adc
sbb
inc
lea
pop
lods
sbb
lea
out
add
fstp
cmpsb
pusha
jmp
mov
cmp
shll
xor
popa
js
pop
popa
enter
sbb
xchg
sub
les
jnp
out
nop
ret
cmp
sub
dec
xor
add
popf
enter
xchg
shlb
sub
xor
mov
push
fildl
and
add
ljmp
sub
inc
jg
jnp
add
sbb
test
sbb
icebp
jae
ja
mov
fsubp
jo
cmp
or
fcomps
push
sub
mov
inc
cli
inc
outsl
cltd
aad
dec
dec
ds
jg
fs
xchg
cmp
aaa
push
sbb
aam
inc
and
adc
out
ss
out
lahf
inc
mov
testb
cs
or
cwtl
es
scas
cltd
or
int
sbb
sbb
xchg
xchg
std
xorb
daa
addr16
cld
push
xor
adc
or
xchg
mov
pop
pop
loopne
push
loopne
mov
insb
inc
and
sub
int3
aad
xchg
mov
mov
or
inc
int3
sbb
inc
or
pushf
mov
cmpsb
in
xchg
or
jae
imul
jge
fdiv
call
addl
in
hlt
fs
fabs
jge
movsb
pop
mov
int
pop
add
push
sahf
sub
adc
add
std
xchg
cmp
push
cmpsb
fistl
xlat
adc
cmp
xorl
lret
pusha
push
cmc
push
mov
add
jp
not
jns
cmp
add
and
fmull
les
cmpl
in
sbb
movsl
filds
push
mov
in
scas
jecxz
push
int3
mov
jnp
popf
jns
les
std
test
dec
bound
lock
call
bnd
jne
rorb
loope
jae
shlb
dec
cmpsl
ret
aas
sub
loopne
in
shl
push
dec
dec
push
int
adcb
jge
pop
mov
shll
gs
jnp
jno
push
push
pop
mov
xchg
in
ss
inc
ret
push
push
and
mov
arpl
mov
js
mov
lahf
push
mov
pop
jge
xor
add
and
sbb
cmp
das
mov
ljmp
jle
pusha
fwait
inc
jmp
push
xchg
fs
in
std
jp
lds
ljmp
fs
lret
mov
repz
jle
orb
or
sub
cwtl
movsl
and
lods
fisubrs
sub
mov
in
fsubrp
sbb
das
fidivrl
or
lods
pop
cmp
int
cwtl
test
std
inc
cmp
pushf
bound
inc
mov
inc
cltd
cmpsb
mov
adc
mov
test
fstl
sarl
xchg
xchg
outsl
loope
or
mov
or
sbb
dec
cwtl
sub
cld
cs
pop
movsb
jge
cwtl
cmpsl
cmpsb
mov
dec
xor
nop
clc
movsl
or
fs
sbb
test
movsw
les
mov
push
fcoms
stc
loopne
in
or
and
inc
cmp
dec
insl
push
scas
dec
add
leave
int3
and
push
lahf
mov
aam
movsb
inc
xchg
cltd
fidivrl
mov
out
enter
idiv
out
jcxz
mov
cmp
inc
popl
pop
add
lcall
stc
stos
add
jbe
inc
adc
pop
inc
enter
clc
jmp
ss
out
push
sarb
cmp
das
xor
pushf
cwtl
rcrl
jno
mov
xchg
mov
stos
xchg
outsl
int3
sbb
cmp
mov
cmpsl
cmc
jmp
into
insb
shrl
xchg
call
push
mov
movsb
pop
dec
loop
clc
out
adc
cwtl
cmp
pop
dec
or
sub
pop
pop
mov
in
repnz
push
outsb
insl
lea
loopne
out
test
addl
push
push
js
cwtl
cltd
xchg
cmpb
aas
fwait
outsl
fcomp
dec
xor
aas
ret
sbb
push
fdivrl
in
push
sbb
xor
shr
ds
fsubs
dec
mov
out
mov
hlt
lret
sbb
dec
xchg
xor
cmp
mov
sbb
xor
int3
in
mov
mov
mov
push
lcall
mov
outsl
ror
xor
pushf
xchg
stos
adc
in
shlb
pop
cmpsl
std
fnstsw
test
notl
push
leave
leave
sbb
daa
pop
jne
mov
cmp
jns
sarl
in
push
inc
movsb
push
sub
xlat
sbb
or
xchg
popf
leave
ljmp
out
mov
pop
pop
adc
cmp
lea
js
hlt
pop
xchg
repnz
adcb
arpl
ffree
lea
into
pushl
xor
and
cld
mov
stos
outsb
jns
add
push
xlat
push
jbe
ss
stos
jge
jae
cmp
adc
fwait
jecxz
pop
mov
adc
pop
mov
mov
push
fdivr
sub
clc
or
jns
or
ret
pop
add
insb
pop
inc
in
nop
in
es
and
jne
insb
xchg
lret
xlat
and
out
sbb
loop
and
mov
cmp
lahf
mov
cmpsb
push
pop
pop
push
or
aas
ret
inc
jg
xor
dec
lea
inc
rclb
fwait
mov
dec
loop
into
lret
pop
in
ja
cmpsl
insb
mov
lret
fstpl
ss
aas
loop
fistps
pop
push
push
mov
repz
sub
push
sarb
idivb
inc
push
cmp
int3
jecxz
mov
push
mov
fwait
out
jb
mov
arpl
jp
push
mov
or
jp
mov
repnz
es
or
jl
push
and
xchg
lret
fsubs
pop
icebp
mov
loope
mov
repnz
xchg
fadds
in
rorb
rolb
stos
nop
rclb
pop
pushf
jl
insl
jmp
push
lock
imul
sbb
les
idiv
arpl
ret
test
ljmp
loopne
sub
mov
int
ficompl
fwait
lods
int3
push
xchg
cmp
inc
push
movsl
or
lret
ljmp
jge
inc
sahf
popa
out
cmovne
pop
sbbb
dec
mov
jp
stos
call
jno
xchg
test
das
jae
mov
or
jge
fsubl
loope
push
xchg
mov
adc
inc
jb
pop
cwtl
dec
pushf
ljmp
or
outsb
leave
arpl
pop
mov
and
clc
lcall
mov
loop
imul
movsl
js
nop
jb
dec
ret
adc
imul
sub
lcall
into
negb
std
cmpb
cltd
mov
mov
fsubrs
enter
test
inc
mov
jo
jns
into
xchg
ret
mov
les
dec
or
insl
sub
sbb
test
add
je
in
sub
stos
push
inc
add
cwtl
out
clc
xor
mov
add
sub
mul
xor
lahf
push
xlat
xorl
lds
inc
xor
out
out
push
lods
out
in
jbe
xor
lods
dec
out
sub
or
mov
lods
test
jle
mov
pop
mov
gs
xor
inc
adcl
sub
sub
fisubl
stos
sbbb
aas
shll
jmp
testb
lods
cmp
ljmp
sub
divl
cmp
stc
das
inc
fnsave
cs
lret
loopne
inc
test
xchg
outsl
pop
dec
out
int
pop
sbb
repz
sub
and
rorl
lahf
mov
fstpt
and
add
in
xchg
inc
sbb
jp
pop
enter
pop
xchg
clc
ja
loope
pop
ficoml
lahf
mov
xchg
xor
add
push
jne
dec
sub
lret
ss
stc
jne
cmp
xor
mov
fwait
inc
fmul
ss
imul
dec
dec
sbb
lock
mov
fs
mov
out
mov
sub
xchg
mov
fbld
push
pop
mov
add
mov
lds
xor
flds
cwtl
enter
nop
lahf
jge
test
mov
cwtl
testl
aaa
adc
mov
mov
aad
daa
fistpll
pop
xchg
in
iret
xchg
stos
ds
pushfw
in
jno
or
xlat
popf
roll
mov
push
outsl
xor
inc
xchg
xor
sub
gs
mov
gs
push
loopne
or
sbb
push
add
sbb
fists
mov
loopne
sti
iret
cli
daa
and
ss
sbb
leave
hlt
insl
ja
and
lods
or
mov
orb
leave
xor
addr16
pushf
sub
mull
fisubs
or
and
scas
add
aas
mov
mov
lock
js
repnz
dec
sahf
mov
clc
repz
mov
xor
mov
stos
adc
iret
cmp
in
fwait
or
jno
dec
popa
jmp
rorb
cmp
push
es
mov
les
xor
mov
xchg
out
xchg
imul
in
and
loopne
pop
clc
cwtl
jl
je
jbe
xchg
rol
jmp
mov
in
mov
ss
outsb
arpl
push
daa
aas
push
lods
dec
dec
outsl
je
pop
adc
dec
sti
mov
icebp
mov
hlt
lods
xor
lcall
frstor
cmc
fiadds
inc
cmp
inc
inc
adc
cs
popf
pop
mov
xchg
xchg
ljmp
or
jo
sbb
inc
mov
loope
sahf
pop
add
jl
or
push
into
test
repz
sbb
sub
mov
or
pop
add
inc
inc
sbb
xlat
push
add
xor
adc
clc
xor
ret
test
push
movsb
mov
dec
pop
aaa
mov
jb
leave
push
out
mov
mov
in
sbb
dec
mulb
sbb
mov
repnz
xchg
dec
stc
push
test
pop
mov
sub
ja
cmc
ret
mov
mov
sbb
xor
pop
fldcw
shrb
pop
pop
repnz
xor
mov
cwtl
jle
mov
mov
and
daa
mov
mov
icebp
dec
pop
cmp
in
pop
out
cmp
mov
xor
sbbl
adc
jg
or
sub
xchg
outsl
pop
jbe
push
pop
jge
lcall
push
pop
addr16
xor
insb
rcll
int3
cmp
insb
inc
mov
xchg
adc
imul
popa
xor
mov
jno
sbb
shl
xchg
mov
xchg
imul
call
sub
xchg
fst
stc
sbb
bound
pop
xlat
insl
nop
lcall
loop
jne
daa
push
add
dec
rcrb
call
loopne
jp
lds
sub
push
call
push
pushf
jo
fwait
add
pushf
pop
jle
mov
incb
sarb
dec
jmp
mov
xchg
jnp
ds
push
sub
pop
dec
push
in
ljmp
scas
je
dec
ja
pop
test
and
stos
call
mov
xchg
push
rclb
sbb
or
push
jbe
mov
sbbl
outsb
adc
je
xor
in
mov
or
pop
xchg
fstpl
xor
xchg
pop
mul
push
xlat
lahf
push
push
xchg
and
lcall
aad
sbb
and
cmp
jnp
mov
mov
add
pop
adc
das
jnp,pt
into
jb
ljmp
nop
or
cmp
into
jns
movsl
leave
push
repnz
push
cmp
mov
imul
push
pop
or
fimull
or
insb
pop
ja
inc
xor
adc
and
into
xchg
mov
jno
jl
jge
mov
and
push
enter
cld
iret
mov
mov
sbb
ja
xor
xchg
xchg
inc
push
jmp
shll
jbe
into
cmc
xchg
xor
rorl
xchg
cmpsb
or
ficoml
movsb
sbb
dec
xor
xchg
add
aas
pop
push
lods
insb
shrl
xchg
inc
xlat
sbb
lcall
dec
cmp
sbb
stos
inc
push
outsb
fstpt
inc
mov
lods
dec
sbb
push
pop
adc
and
sub
xchg
sub
mov
cltd
add
outsl
and
sti
xor
shrl
jnp,pn
jecxz
push
loope
stos
bswap
xchg
in
xchg
pushf
ds
jg
inc
andb
sahf
pop
jmp
ljmp
sarb
into
adc
sarb
jge,pt
and
dec
sub
mov
and
xor
inc
mov
xor
cmp
pusha
les
aaa
repz
inc
push
sti
inc
test
lea
mov
fnstcw
out
and
arpl
sbb
lods
sti
shll
mov
push
repz
xor
aad
mov
adc
inc
inc
cmpsb
test
out
lods
pop
jmp
popa
sub
cmp
cltd
xchg
xor
mov
sub
jne
pop
scas
or
leave
cmpsl
js
sub
aam
sub
pusha
dec
xchg
gs
nop
fiaddl
scas
cmp
dec
sahf
mov
push
push
dec
sub
pusha
dec
sarl
test
or
sbb
movsb
and
and
jecxz
stos
sbb
shrb
inc
sbb
int
aaa
xor
inc
pop
lcall
sbb
mov
jno
mov
or
icebp
ret
and
popa
mov
mov
pop
pop
push
cli
sub
pushf
int3
sbb
sub
sub
pop
mov
cmp
jne
lret
lods
and
pop
push
addr16
xchg
and
push
and
sub
jp
cmpsl
pop
test
mov
sub
pop
xchg
xlat
into
pop
adc
into
addb
push
adc
cmpl
mov
push
dec
pop
jecxz
pop
insb
pop
mov
imul
les
mov
int3
lea
and
xchg
xchg
push
flds
bnd
cmp
dec
icebp
call
movsb
ret
repz
mov
jecxz
pop
clc
jbe
pop
jb
dec
cld
mov
in
negb
clc
jp
aad
test
jb
outsl
jp
jae
shlb
cmp
fistps
mov
xor
rol
cmp
jge
or
fisttpl
jo
iret
aaa
push
fcoml
aad
mov
add
pop
and
insl
test
fisttpl
rcrb
xor
mov
stos
pop
xchg
es
xchg
imulb
fnsave
mov
pushf
inc
jecxz
and
imul
cld
jb
sahf
out
in
ds
les
mov
leave
popa
sbb
xsaveopt
lcall
shlb
imul
jmp
pop
cltd
inc
aam
push
dec
or
fmuls
pop
add
mov
aam
cmp
push
jbe
xchg
inc
jge
int3
mov
loope
cmp
pop
insl
cld
jmp
push
or
in
adc
cmp
inc
inc
cmp
adc
sbb
test
loopne
xchg
lcall
repnz
sub
aas
mov
mov
sub
xor
cmp
fmuls
sub
jnp
loopne
mov
cmp
cmp
jno
xchg
cld
imul
mov
pop
inc
sbb
jae
int
add
jecxz
push
xor
cmpsb
cmpsb
addr16
loope
add
pop
cmp
xor
sub
push
mov
lret
xor
push
inc
cmpsb
mov
popa
pop
test
cwtl
xor
mov
aam
sbb
ljmp
fidivs
xchg
jg
pop
call
rolb
sub
int3
cli
or
aaa
aad
jo
cmp
or
call
movsl
out
mov
pop
fistpl
mov
lea
xchg
rcl
rcr
dec
dec
gs
cmp
mov
mov
cmp
sub
adc
clc
je
shll
popf
inc
add
push
or
loop
dec
sarb
iret
sub
sbb
push
lods
pop
incb
insl
add
mov
mov
pop
push
mov
push
sbb
xchg
adc
pop
test
push
dec
lahf
leave
inc
push
in
or
add
mov
sbb
or
mov
push
sub
in
dec
xor
stos
mov
jmp
fs
imul
inc
dec
inc
cwtl
push
sbb
pop
sbb
std
mov
sub
and
out
xchg
mov
mov
jmp
enter
mov
push
mov
push
jne
add
lahf
push
cmp
fistps
clc
arpl
xor
jmp
lea
add
loopnew
lods
stos
mov
push
adc
lds
sub
or
cmpxchg
xorl
paddusw
movsl
iret
xchg
enter
je
and
lods
testb
loope
mov
add
pushf
movsl
lods
sahf
pop
mov
or
add
cltd
adc
push
aad
sahf
sbb
inc
cmpsb
out
fstl
imulb
jnp
adc
adc
cmp
scas
xor
je
ret
outsl
dec
rcrl
adc
rcrl
mov
sbb
or
cltd
iret
or
dec
dec
cmc
xchg
dec
cli
mov
int3
xor
push
mov
dec
mov
and
iret
pop
movsl
mov
mov
inc
inc
or
data16
xchg
aam
or
xor
jge
mov
adcb
stos
loope
cmp
or
fstpt
lods
add
pop
push
je
pop
push
add
rol
xor
test
mov
imul
jecxz
lds
aaa
int
sti
jecxz
out
bound
xchg
push
je
pop
or
mov
adc
mov
test
xchg
ret
call
scas
push
xor
aad
mov
sarl
xor
pop
movsb
test
jg
in
stos
dec
lods
lods
gs
test
ds
cmp
shrb
fidivrl
mov
xchg
arpl
cmp
dec
adc
inc
outsl
inc
iret
inc
add
shl
test
sbb
lods
negb
sbb
pushf
adcb
sbb
or
inc
push
sub
xchg
xor
call
imul
dec
imul
mov
pop
xchg
or
mov
shrb
or
in
push
add
mov
test
inc
and
inc
dec
movsb
cmp
fists
xor
pushf
or
mov
dec
cmp
std
ret
addr16
jb
pop
shlb
hlt
sbb
push
lds
sbb
cli
sbb
cwtl
push
push
dec
ja
insb
repnz
es
add
rcr
pop
outsl
sub
xchg
pop
dec
mov
mov
mov
popf
jg
sub
and
je
push
call
dec
sti
xlat
mov
or
push
and
rolb
pop
cmp
mov
lret
outsb
mov
mov
faddl
cmp
push
jae,pn
dec
jne
push
inc
and
fildl
pop
insl
pop
mov
xor
push
loopne
dec
lahf
loope
leave
sbb
cmc
push
dec
xchg
pop
jecxz
stos
and
hlt
rcll
jo
cwtl
cli
jp
js
mov
cmp
cmp
jne
lods
xchg
inc
sub
or
adc
dec
or
sbb
pop
sbb
in
jmp
cmp
gs
push
cmp
mov
or
jle
jp
pushf
pop
mov
rcll
sbb
repnz
dec
enter
roll
xor
sub
and
out
ds
mov
aad
or
lock
cmp
xor
stc
dec
jp
or
jge
adc
imul
cmc
test
shl
lock
scas
lea
cmp
dec
inc
mov
jns
lahf
ret
cmp
dec
test
ret
dec
mov
leave
cs
jb
loope
pushf
movsb
push
mov
es
stos
inc
mov
sbb
mov
pop
fisubrl
mov
stc
push
jmp
sbb
adc
int3
inc
cmpsb
dec
cmp
stos
movsl
ret
cmp
pop
lret
hlt
xchg
jl
out
enter
mov
stos
dec
lods
cmp
push
pop
lahf
sbb
loop
pop
jo
lahf
in
cmp
mov
sbb
sbb
leave
popa
out
out
xor
mov
rcrb
xchg
pop
iret
dec
nop
cmp
mov
inc
loopne
lods
xchg
pop
xorb
jecxz
jae
pop
and
sub
mov
adc
stos
hlt
xchg
sbb
test
mov
int
sub
movsb
add
xor
mov
xor
push
sbb
mov
fcom
jle
push
in
push
xchg
or
push
std
jg
jno
pushf
or
imul
dec
lcall
lret
push
mov
out
in
mov
fnsave
xchg
aaa
das
inc
adc
xchg
pop
mov
add
mov
mov
cmp
push
jo
xor
sub
repnz
sbb
jne
stos
test
stc
or
addr16
and
push
xchg
daa
out
rorb
mov
sbb
adc
cmp
jge
xor
aam
jbe
adc
and
cmp
jb
das
sbb
sub
jecxz
lds
in
xchg
cmp
dec
in
jecxz
inc
mov
xor
inc
leave
out
jge
push
cld
jb
int
iret
scas
test
xlat
inc
lcall
fucom
push
lock
movsb
je
fldcw
int3
mov
jb
push
mov
xchg
sbb
jmp
cmpsb
push
ret
inc
dec
test
ds
mov
scas
movsl
push
in
pop
or
sbb
cmc
std
sub
jne
push
sbb
mov
push
out
xorb
jl
adc
aaa
sahf
scas
imul
or
dec
push
push
pop
scas
mov
popf
push
mov
mov
xchg
mov
or
aam
sbb
test
xchg
adc
xchg
jns
je
add
or
add
push
pop
aas
rorl
xchg
sbb
add
or
sbbl
jae
xor
jne
cmp
mov
ss
mov
loopne
fldt
push
xor
push
stc
adc
stos
pop
test
ds
in
sub
inc
sti
mov
adc
pop
jo
loopne
lds
dec
jmp
cld
adcb
mov
aas
movsl
add
test
push
dec
mov
inc
ret
jne
fldcw
daa
pop
pop
push
or
icebp
ljmp
mov
add
lret
nop
sub
loop
je
cmpsl
lret
push
aam
lret
in
add
push
mov
mov
aam
jne
and
mov
pop
out
cs
aas
cmc
add
ss
cs
hlt
xorl
mov
mov
dec
xor
faddp
mov
inc
es
add
and
jge
mov
cmpsl
push
in
push
test
sub
mov
mov
pusha
or
psadbw
xchg
jno
push
sbb
xchg
sti
cli
dec
push
xor
std
nop
lret
pop
test
mov
push
in
pop
fwait
pop
cmp
bound
aas
test
cmc
leave
jmp
push
and
imul
mov
jl
in
mov
cmp
ds
or
mov
fimull
fisubs
das
shlb
or
cmpsl
xchg
ret
testl
lds
aam
outsl
out
fists
std
je
dec
movsl
lcall
sbb
loop
inc
mov
test
mov
sbb
cmpsb
sbb
das
cmpsb
ja
jp
js
sbbb
mov
cmp
inc
add
fisttpl
mov
fs
insb
push
lret
out
and
jo
cmp
shlb
jae
dec
gs
lahf
or
xchg
jmp
jp
sub
into
xchg
cmp
jl
aaa
add
subb
mov
outsb
mov
aaa
jno
ret
icebp
ss
mov
fnstenv
mov
ljmp
ret
lcall
push
and
test
pop
sbb
push
mov
jns
movsl
das
inc
and
jbe
xor
push
popa
or
pop
fs
nop
es
pushaw
rorl
lds
pop
jb
mov
mov
push
mov
jg
dec
dec
ficoml
xchg
and
icebp
aas
mov
aam
scas
cltd
xchg
push
shrl
dec
movsl
pop
mov
pop
xchg
add
pop
aad
stc
rorb
lret
cmp
repnz
sbb
das
ljmp
ret
arpl
inc
xor
outsl
lret
sub
push
sub
mov
mov
ret
cmc
lret
aas
xchg
loope
fst
and
mov
repz
movsb
add
jns
repz
stos
xchg
push
xor
mov
push
xor
or
jmp
adc
std
mov
or
mov
test
pop
dec
arpl
mov
nop
xor
add
dec
xchg
inc
sub
imul
sub
jns
nop
ret
outsb
mov
push
lods
test
and
and
mov
sub
sbb
jmp
cs
and
imul
aad
mov
fidivrl
jne
sub
fbstp
lahf
dec
xchg
jb
sbb
lods
int
cmp
stc
lods
mov
dec
xor
jmp
mov
xchg
lods
es
loope
xor
mov
iret
mov
pop
pop
pop
push
cmp
je
sub
sbb
test
add
push
nop
pop
addr16
mov
jno
in
lock
subb
xchg
js
jge
lods
add
xlat
inc
hlt
icebp
push
int3
mov
push
fsqrt
or
jg
jbe
jg
adc
cmpsb
aaa
sbb
rcr
pop
mov
imul
leave
push
sti
push
mov
mov
movntq
out
adc
dec
sbb
lds
adc
push
testb
fs
push
fwait
stos
pop
lds
mov
jecxz
xchg
and
cmpsl
popf
sbb
push
lahf
ljmp
sub
in
mov
sub
cltd
sbb
rolb
push
pop
jne
or
push
sbb
jns
aas
in
sub
aam
aad
inc
sub
in
das
mov
and
adc
insb
pop
nop
lea
pop
aam
inc
sarl
out
sub
fwait
ljmp
mov
addr16
add
rorb
mov
dec
inc
cmp
imul
cwtl
adc
mov
out
dec
jno
or
lods
std
pusha
xchg
into
add
adc
mov
mulb
mov
les
dec
mov
and
push
repz
fs
and
dec
int
mov
mov
jmp
add
out
aaa
movsb
ljmp
mov
jle
mov
add
sub
or
out
sub
sub
mov
push
dec
jecxz
dec
push
push
fisttpl
scas
add
dec
xor
icebp
cmp
mov
pushf
xor
pop
or
mov
fidivrl
add
insl
add
mov
lcall
dec
not
sbb
adc
pop
adc
mov
int
into
imul
in
ficompl
daa
mov
xor
popa
push
vmwrite
popf
pop
mov
mov
imul
ljmp
jge
sub
fs
ljmp
in
xchg
rolb
dec
adc
adc
mov
push
dec
test
push
add
int3
rcrb
xor
adcb
mov
sbb
push
xchg
ret
xchg
cmp
mov
sbb
and
aaa
mov
clc
inc
or
add
mov
loope
and
push
or
add
shlb
mov
movsb
xchg
loopne
push
or
iret
xchg
shl
loopne
xchg
mov
add
loop
mov
push
lret
push
mov
jmp
sbb
xchg
dec
test
fxch
push
out
cmpsb
sub
jmp
test
hlt
outsb
aam
cli
aad
lods
cmp
int3
aam
lret
adc
sarl
stos
in
push
cmp
out
movsl
and
sarl
jecxz
jle
sbb
aam
pop
lods
pushf
push
icebp
or
in
xor
xor
cwtl
jle
std
lret
pop
in
pop
mov
push
scas
fdivl
hlt
loop
movsl
mov
jp
mov
ret
pusha
lea
cmp
out
jb
cmp
mov
mov
push
jmp
imul
clc
cmp
push
dec
pmaddwd
lea
push
fisubrs
cwtl
addr16
jmp
jo
or
ss
ljmp
dec
cld
loop
inc
xadd
add
gs
lcall
cmpl
mov
cltd
cli
adc
imul
fistpl
mov
jecxz
lret
aaa
jle
stos
pop
stos
mov
or
xchg
dec
test
adc
inc
in
push
pop
or
mov
mov
mov
and
mov
push
push
cmpb
lret
int
pop
js
cmp
mov
addl
nopl
mov
mov
push
out
xor
fisubs
lahf
jb
sahf
icebp
repnz
push
cmp
sub
sbb
enter
jg
shl
or
ret
fsubrs
and
in
pusha
fucomi
add
sub
roll
aaa
mov
fucomi
mov
xor
or
sub
cld
test
jno
dec
in
inc
inc
test
mov
jge
stc
fbstp
mov
xchg
in
pushf
mov
adc
les
ret
js
mov
stos
pop
mov
or
out
dec
pusha
insb
in
push
pushf
imul
pop
mov
jle
arpl
ss
jo
adc
aas
or
cmpsb
xchg
mov
ret
in
rcl
mov
jg
loop
iret
aad
aad
lds
mov
fnclex
xchg
subb
ljmp
daa
aam
fistl
push
mov
das
sbb
sbb
sbb
jb
sub
shrl
xchg
pushf
fdivl
jnp
lcall
cli
push
sub
inc
push
jae
add
push
or
push
rcr
in
mov
xchg
out
cli
pushf
jg
xchg
repnz
das
and
pop
pop
jmp
in
add
int3
loopne
enter
ret
cltd
and
sbb
lods
loope
jg
lock
dec
add
sbb
out
cmp
int3
xor
sahf
pop
pop
loopne
dec
popf
sub
sbb
cld
pusha
xchg
jne
inc
lods
sub
scas
into
test
pop
pop
pop
daa
stc
mov
adc
test
in
xchg
xor
shll
stos
pop
xor
out
notl
inc
movl
adc
xor
or
sbb
and
scas
bound
add
push
push
loopne
or
aad
add
mov
jge
pop
fldenv
inc
into
jae
inc
add
and
ljmp
daa
push
mov
js
cmp
cltd
xor
or
xchg
int
fnsave
incb
mov
testb
inc
mov
adc
pop
mov
outsb
cld
xchg
mov
xchg
cmp
aas
andl
pop
push
mov
pop
sub
int3
push
sbb
mov
mov
fwait
arpl
test
or
xchg
mov
adc
inc
jmp
aam
or
fadds
sahf
popf
xchg
adc
outsb
enter
loopne
mov
jl
cli
push
jns
addr16
mov
mov
xorb
cmc
fnstenv
aaa
jmp
mov
xor
sahf
mov
roll
cmp
scas
jae
cs
shrl
fs
loop
int3
pop
daa
add
lahf
xchg
adc
cmpsb
inc
sbb
int
cmpsl
mov
xchg
push
mov
adc
or
push
ja
cmp
xchg
inc
in
sbb
sub
xor
nop
inc
or
or
lahf
out
or
mov
test
adc
push
rol
movsb
popa
unpckhps
ss
out
hlt
xchg
push
inc
and
cmp
adc
jle
test
scas
and
and
cmp
outsl
lods
cmp
ss
fmulp
push
loope
imul
cwtl
test
jge
dec
imul
xchg
mov
cmp
inc
sti
inc
scas
aam
dec
ds
pop
mov
push
xchg
std
loope
add
mov
popf
push
xor
or
push
jecxz
pop
sbb
cmp
and
test
int3
roll
sub
mov
xchg
not
adc
fwait
or
sub
sti
js
and
int
xlat
out
fcomps
pop
imul
dec
dec
mov
lods
in
jecxz
cs
hlt
gs
shrl
dec
adc
mov
add
scas
sti
sbb
or
fsubs
adc
cmp
jno
pop
and
mov
sahf
cmp
inc
pushf
cmp
in
dec
sub
aam
xor
sbb
and
dec
test
and
fstl
pushf
into
shl
pop
outsb
lods
dec
cld
aas
ljmp
push
add
pop
lahf
ljmp
push
dec
out
or
sbb
ret
add
mov
lock
imul
popf
inc
dec
push
loopne
xchg
test
mov
pop
mov
push
pop
daa
dec
jno
xorb
mov
xchg
fs
mov
test
mov
call
push
dec
out
jle
lret
mov
push
je
mov
add
cmp
fsts
rcrl
mov
orb
add
dec
addr16
stc
rcrl
test
adc
ja
out
into
add
testb
dec
icebp
sahf
push
jp
test
mov
and
xorl
and
stos
pop
mov
mov
lods
xchg
and
cmpsb
push
add
and
shlb
movsl
leave
fdiv
das
movsl
test
sbb
loop
pop
mov
mov
inc
ret
xchg
ret
xchg
data16
cli
out
sub
xor
mov
pop
mov
sbb
daa
fwait
les
inc
sub
hlt
mov
or
push
push
add
dec
addr16
iret
ds
stc
jle
xchg
xchg
mov
mov
mov
sti
fcos
daa
pop
stc
jl
in
fidivl
push
mov
loop
cmp
lret
lea
arpl
cmp
cs
push
fdivrp
mov
out
and
jne
cwtl
xor
bound
rorb
mov
jno
push
lahf
jb
sub
sbb
sub
pop
mov
push
mov
cld
inc
jp
mov
enter
and
push
push
test
nop
and
outsb
inc
cmp
push
inc
lds
sti
fcoms
bound
scas
lea
scas
sbb
mov
jmp
jmp
xchg
imul
je
mov
outsb
arpl
mov
add
push
aas
xchg
dec
jbe
push
jns
add
or
add
es
call
sti
xlat
loopne
and
sub
mov
in
pop
fwait
cmp
push
jmp
mov
div
mov
out
int
sahf
xorb
mov
nop
lods
mov
cmp
dec
movsb
nop
arpl
cmp
outsl
test
add
mov
les
xor
es
pop
push
dec
lock
inc
rep
add
or
in
into
inc
repz
pop
push
adc
add
dec
push
or
xor
out
mov
dec
inc
out
mov
enter
adc
pushf
mov
xchg
push
mov
cmpl
sub
mov
lea
insl
fcoml
or
xor
pop
jecxz
inc
adc
inc
pusha
add
dec
and
insb
pop
sub
pop
cmp
xchg
cmp
mov
add
pop
in
movsb
fcomi
adc
dec
stc
ljmp
adc
in
iret
int
inc
jge
stos
out
push
mov
sti
mov
imul
imulb
mov
cmpsl
lret
fisubs
stos
loope
out
mov
mov
jns
jo
dec
iret
pop
and
lret
mov
mov
movsl
xchg
xor
mov
out
cmp
adc
mov
pop
in
jl
cmc
lahf
stc
incb
in
ss
or
push
aas
mov
jg
push
ds
cli
popa
xchg
iret
pusha
xor
sbb
pop
mov
pop
stc
jmp
rcll
sbb
dec
adc
xchg
pop
fisttpl
clc
dec
decl
xchg
pop
push
je
jge
push
dec
les
pop
fwait
addb
repnz
sahf
out
les
fwait
push
outsb
cwtl
sub
mov
shlb
inc
sub
sbb
js
dec
pop
pop
or
sarl
enter
dec
movsl
mov
incl
sbb
mov
sub
inc
dec
mov
xchg
lods
mov
or
push
sbb
stc
adc
addr16
or
cld
fneni(8087
cmpsb
or
outsb
cmp
cld
cmp
dec
adcl
pusha
cli
inc
sti
add
mov
inc
shlb
push
push
mov
stos
lods
mov
cs
ljmp
ja
pop
sbb
xchg
jo
loopne
inc
dec
xlat
repz
inc
pushf
aas
add
insb
shlb
hlt
sarb
push
loop
popa
or
subb
add
repz
push
and
lret
rorl
xor
xor
adc
xchg
test
sbb
call
insl
pusha
scas
pop
add
sub
inc
je
push
push
xchg
in
xchg
jno
shl
out
mov
lret
and
and
jle
sbb
mov
nop
divb
test
cs
cwtl
pushf
lcall
int
pop
xchg
imull
pop
gs
addl
lcall
aas
xchg
clc
push
rclb
push
fmulp
or
mov
cmpsl
push
sub
dec
enter
dec
scas
jbe
shll
adc
or
push
mov
jns
out
adc
in
pop
movsb
into
imul
mov
jns
cmp
mov
mov
test
cmp
adc
loope
outsb
aam
sub
xor
or
push
lcall
cmp
clc
inc
sub
stc
cmp
std
mov
inc
jb
cwtl
lods
add
sti
sbb
test
test
add
aaa
dec
mov
ja
pop
and
rorb
out
roll
push
jbe
in
sbb
jnp
jnp
mov
inc
jno
mov
shlb
sbb
sbb
cwtl
jecxz
add
sbb
scas
les
jno
push
cmp
cmp
add
popa
sbb
in
push
sub
repz
or
mov
pop
pop
mov
pusha
inc
xchg
rorl
jbe
dec
or
push
jne
push
enter
cmp
add
push
int3
or
fnstenv
push
mov
pop
nop
push
aas
adc
lret
rolb
jp
je
iret
insb
jmp
repz
insb
inc
daa
jo
fistpll
adc
pusha
jl
mov
xor
mov
mov
sbb
fwait
pop
xchg
fildl
and
pop
mov
cmpb
jg
iret
fldl
popa
lea
fnstenv
sub
cmc
adc
cwtl
and
mov
outsb
pop
push
xchg
mov
movsb
xchg
push
sub
mov
sub
mov
imul
cmp
sub
shl
imul
xlat
or
shrb
iret
or
and
rcrb
inc
popf
push
pop
pusha
dec
cwtl
xchg
pusha
enter
fsts
ljmp
addr16
shll
shlb
nop
js
mov
pop
das
dec
jne
add
jae
mov
xor
loopne
scas
lret
sub
into
xchg
outsl
stc
lret
cmpsb
sbb
divb
xor
dec
inc
mov
fstpl
xchg
dec
cmp
hlt
sar
xchg
sti
clc
mov
pushf
sub
lds
jmp
pop
lahf
inc
or
jmp
mov
add
mov
inc
clc
addr16
cld
pop
and
ljmp
loopne
pop
adc
pushf
fistl
jne
pop
inc
push
mov
push
lods
mov
lock
sbb
pop
or
mov
pop
xor
add
daa
shl
and
add
sub
jmp
call
imull
lds
dec
scas
xchg
sahf
jp
mov
push
fidivl
add
mov
test
mov
mov
sub
loop
pop
sbb
cmpsl
in
call
jo
cwtl
int
in
sti
sub
orb
repnz
xchg
icebp
lret
jecxz
dec
idivb
clc
xor
sti
adc
or
fwait
js
lds
sub
push
and
stos
mov
out
popa
movsl
aas
mov
int
jnp
add
decl
jp
jecxz
cmp
popa
ja
adc
enter
xchg
add
nop
sub
xor
xchg
jmp
xor
into
sar
lret
cli
leave
dec
loop
add
xchg
and
add
sbb
xchg
push
hlt
add
mov
xor
fsubs
dec
jmp
xchg
gs
jne
adc
leave
or
xor
aaa
cmp
cmp
push
jge
sbb
adc
into
dec
into
adc
ret
inc
cmc
pop
xchg
es
xchg
stc
imul
push
stc
sbb
cwtl
jne
add
lods
sbb
dec
arpl
gs
fiaddl
pushf
pop
gs
fs
pop
lret
lcall
jbe
scas
out
xor
and
push
xchg
mov
dec
aas
lcall
rclb
loop
das
mov
ficompl
rcrl
ja
mov
jno
jmp
arpl
push
xor
lret
xor
jmp
pop
test
sub
dec
popa
add
jo
sbb
dec
add
lds
add
out
gs
pop
out
idivb
enter
enter
daa
loop
icebp
push
testl
or
mov
leave
pop
inc
mov
clc
movsl
pusha
mov
insb
xlat
sti
xchg
stos
pusha
stc
add
bound
inc
cmp
cmp
sti
adcl
jle
mov
push
sub
fs
push
jae
movsl
jno
dec
jo
pop
data16
sub
and
in
std
insl
dec
or
inc
jne
jno
mov
in
xor
push
inc
ja
jb
rclb
and
xchg
jb
add
stc
lcall
mov
jne
sub
pop
pop
shl
mov
fstpl
pop
clc
mov
push
fldenv
xchg
adc
xor
imul
fistps
je
add
and
lret
loop
sbb
pop
mov
loopne
pop
in
in
aas
mov
mov
xchg
lret
stos
hlt
icebp
inc
aam
dec
test
jo
mov
cmpsl
mov
fmuls
xor
stos
inc
cmpsb
gs
adc
or
pop
mov
or
std
jmp
nop
cmpsb
loopne
push
and
sarl
or
jecxz
mov
mov
jge
xor
sub
fnstcw
or
push
test
mov
out
adc
test
xchg
xchg
push
lcall
sub
or
pop
adc
in
pop
rcll
jno
push
sbb
add
mov
in
ret
divb
mov
pop
pusha
in
sub
js
lret
lock
cmp
mov
scas
cli
cmp
and
xchg
cmpsl
mov
test
inc
pop
fdivp
or
rcrl
sub
fldcw
xchg
fs
inc
sbb
sub
sub
adc
mov
lcall
cmp
mov
iret
cwtl
jae
dec
outsb
shrb
lea
andl
push
test
enter
aam
mov
sub
sti
adcb
push
in
sbb
sbb
and
pop
enter
push
mov
sub
mov
loop
les
les
ret
pop
push
xchg
mov
ljmp
jne
pusha
int3
fistpl
imul
pop
mov
jg
push
push
cmp
xchg
xchg
pop
pop
movsb
jecxz
data16
and
popa
ret
out
sub
test
lcall
sbb
rclb
movsl
cmp
sub
jnp
das
movsb
lcall
movsl
adc
das
dec
inc
mov
xor
aas
cmpsb
xor
pop
insl
and
inc
test
js
push
xchg
cmp
mov
sahf
adc
xor
in
leave
sub
addr16
inc
insl
pop
cmp
les
push
leave
movsb
or
fnstcw
iret
sarl
movsl
out
repnz
add
cmp
or
dec
sub
adc
ljmp
xor
test
loope
pop
push
icebp
sub
lds
lock
mov
ss
fchs
imul
cmp
rclb
jg
aad
sbb
mov
xlat
dec
adc
mov
in
xor
dec
mov
sbb
xor
inc
pusha
sahf
adc
bound
pop
repz
fs
push
lahf
ds
sbb
push
stos
cmp
mov
xchg
cmc
inc
arpl
adc
out
sbb
shl
jo
push
sbb
das
add
jmp
mov
xor
or
mov
sbb
fcmove
push
xchg
jns
das
out
sti
xchg
into
je
mov
xchg
cmp
xchg
sub
pusha
mov
pop
lods
cld
push
mov
fsubs
pusha
cmp
jp
inc
mov
inc
fsub
sbb
cwtl
cmp
mov
mov
push
ds
cmc
imul
push
sub
mov
jne
pop
lahf
cmp
pop
cmp
xor
mov
xchg
leave
mov
push
mov
mov
mov
xchg
pop
mov
sub
adc
int3
shll
call
stos
push
lcall
cmpl
mov
insb
xchg
lds
push
push
sub
dec
mov
sub
jb
xor
jns,pt
rorl
mov
das
cmp
gs
mov
enter
pop
bound
mov
add
lods
test
dec
jge
pop
into
lcall
push
mov
scas
xchg
lea
pop
mov
and
lea
xchg
cmpsl
and
push
outsl
scas
pushf
fidivs
push
xor
cmc
mov
lcall
and
xchg
loop
clc
sub
mov
faddl
vmwrite
je
sarl
xchg
add
mov
int3
mov
add
fidivrl
adc
adc
jecxz
icebp
or
jmp
in
cmpsl
std
xor
push
pop
mov
pop
jno
xchg
cmc
aaa
mov
and
sbbl
xor
or
aad
push
mov
fs
mov
aam
repz
cs
add
cmpsb
scas
adc
pop
das
je
lret
out
xchg
inc
pop
sar
gs
subl
ss
loopne
test
fistps
mov
and
mov
and
lahf
or
call
pop
jle
sbb
aaa
mov
bound
cmpsl
push
shrl
mov
dec
jle
pop
sub
ficoml
clc
cmpsb
mov
jo
sbb
insb
cmp
popl
cli
ret
mov
movsb
inc
nop
dec
les
repnz
fstl
test
test
imul
mov
mov
je
out
pop
mov
cmp
or
incb
stc
sub
jge
jbe
mov
cmc
sub
push
and
or
jle
inc
cwtl
cs
enter
xor
mov
call
stc
pop
popa
or
test
lea
adc
push
fsubrp
pop
fdivrs
aaa
repz
jbe
push
mov
dec
into
orl
lods
lods
in
andl
mov
push
je
icebp
jne
push
dec
sbb
dec
popf
sbb
jne
enter
ja
xchg
and
repnz
dec
pop
mov
inc
lret
adc
icebp
sub
in
inc
out
mov
push
push
shll
pop
ljmp
popa
outsb
pop
cwtl
fidivl
pop
int3
stc
shl
bound
jl
jl
lea
movsl
nop
jo
das
sti
fiadds
in
mov
movsl
mov
jmp
lahf
insl
mov
dec
jp
lret
xchg
xchg
inc
mov
inc
stos
out
dec
in
mov
daa
jp,pt
je
add
scas
sbb
addr16
sbb
fisubs
adc
sbb
stc
stc
inc
loop
xchg
or
aas
pop
lcall
notl
sbb
mov
mov
inc
mov
aaa
test
mov
jno
mov
aaa
pop
out
xchg
mov
inc
jnp
lea
add
mov
popf
fistpll
cld
push
push
sub
jle
add
jg
jb
insl
push
into
push
loop
or
jnp
fsub
cli
in
xchg
ret
xor
inc
inc
ret
fisubrs
or
addr16
lods
and
xor
jp
mov
es
in
cmpsl
cmpsb
add
pop
mov
sbb
dec
lods
jmp
add
lret
cmpb
movsl
fildll
pop
and
ret
ss
inc
cmp
push
push
xchg
repz
sub
clc
pop
push
ds
adc
lcall
mov
shrl
push
cs
into
or
jno
test
xor
int3
inc
xchg
push
js
xchg
and
loopne
add
mov
push
cmp
add
add
lret
pop
sub
call
push
cli
push
pop
aad
push
dec
daa
popf
adc
nop
xchg
stc
cmc
es
sub
xchg
mov
aad
je
mov
inc
mov
pop
js
ret
pop
mov
jne
mov
pop
jl
das
xor
loope
cmpsl
mov
repz
fs
repz
push
xchg
push
test
push
pop
add
xor
fimuls
or
imul
dec
sub
inc
sbb
mov
mov
stos
in
xchg
inc
add
push
dec
mov
fstpt
mov
js
mov
pop
mov
pop
xchg
push
sbb
ret
jp
pop
mov
sbb
stos
adc
jbe
mov
inc
or
imul
or
pop
jb
cli
add
ret
nop
lret
gs
adc
cs
add
adc
sbb
jecxz
jo
push
gs
sub
xor
ja
mov
pop
mov
lcall
out
inc
mov
pop
clc
mov
pop
and
cmp
fsubl
and
incl
mov
cmp
push
imul
xchg
mov
ljmp
orb
sbb
adcl
je
jae
mov
stos
mov
stos
mov
loopne
ja
into
sub
mov
cmp
aam
xchg
pop
xor
cs
loope
popa
fstpl
push
dec
sub
ljmp
sub
scas
out
push
adcl
jmp
cltd
test
mov
push
lds
test
mov
dec
test
shl
addr16
inc
jge
shrb
pop
into
fidivrs
js
mov
dec
cmp
dec
mov
cmc
mov
loopne
popa
loop
aas
dec
shrb
adc
xchg
aad
pop
sbb
mov
aas
dec
sbb
sbb
insl
jg
jl
clc
mov
test
test
adc
fiaddl
fiadds
push
enter
into
fldl
push
inc
jle
pop
xor
push
pushw
mov
test
sub
sar
lret
in
and
sti
fcomp
test
pop
je
outsl
jne
cld
mov
sub
mov
cmp
cmp
fistl
imul
call
lcall
or
insb
in
mov
mov
mov
lods
cmp
pop
outsb
stos
cmp
inc
pop
cmpb
lds
sbb
mov
pusha
ds
jb
adc
das
hlt
fcomi
pop
dec
jbe
call
dec
lret
call
pop
sbb
or
shl
jg
inc
sti
dec
std
arpl
pop
mov
jecxz
icebp
and
filds
cwtl
pop
cli
fistl
pusha
scas
aaa
pop
dec
jmp
rorb
out
ja
jl
dec
shlb
adc
mov
xor
mov
push
or
das
test
fcoms
mov
jl
push
imull
pop
pop
mov
dec
insb
std
and
adc
in
jl
sti
ljmp
cmpsb
dec
mov
dec
inc
jne
adc
add
xchg
and
fidivrs
sbb
push
int3
jle
mov
pop
add
fstpl
ja
dec
and
movsl
xlat
sbb
inc
inc
mov
inc
out
or
ds
mov
lea
mov
push
es
orb
das
jo
lods
subb
iret
cli
jge
cs
lock
jl
inc
or
jns
push
and
clc
imul
cmpsl
es
add
add
popf
call
xchg
das
mov
dec
ss
stc
dec
pop
push
test
shrb
or
push
cmp
out
lods
lods
dec
pop
cli
iret
std
adc
adc
jp
jbe
inc
aas
adc
out
mov
mov
xor
sub
imul
ret
jecxz
sbb
scas
test
xchg
outsb
inc
xor
xchg
int3
jge
xchg
inc
mov
mov
repz
fidivl
jecxz
sarl
or
fsubrp
adcl
push
int
rcrl
popa
hlt
and
jecxz
rolb
xchg
ret
mov
or
lret
mov
roll
cs
addr16
xor
push
lods
and
or
lret
xchg
sub
jp
push
aam
cmp
movsl
orl
mull
das
iret
sbb
pop
xchg
repz
pop
pop
addr16
stos
inc
jecxz
fcomps
sbb
fldcw
int3
je
fst
adc
inc
xor
cmp
jge
mov
inc
aam
sbb
mov
cli
add
loop
orb
bound
enter
dec
bound
cmp
test
popa
rcr
fisttpll
sti
jl
xchg
cmp
cmp
jl
push
mov
push
rolb
jnp
fnsave
adc
arpl
iret
jnp
hlt
xor
enter
insb
in
fs
mov
mov
cmp
pop
mov
push
or
cmc
jae
pushf
jnp
adc
stos
sti
jg
add
ja
sbb
or
shlb
cltd
scas
sub
cmp
and
inc
push
in
stc
fbstp
xchg
or
sbb
sbb
or
xchg
repz
dec
shl
sub
cmp
leave
mov
leave
fbstp
push
add
icebp
enter
fsubl
pop
xchg
inc
add
jae
pushf
fstpl
out
addps
mov
push
aam
dec
mov
pop
push
minss
jecxz
mov
ficoml
inc
mov
cld
sub
fdivrl
mov
in
cmp
ljmp
insb
pop
xor
push
cmp
out
js
cmp
pop
mov
sti
add
pop
pop
or
stos
lret
jecxz
xchg
push
push
mov
cmp
sbb
out
adc
sub
cmp
mov
aas
push
mov
cli
jae
jnp
in
cmp
aad
xchg
enter
sarl
xchg
arpl
loope
and
lret
rclb
data16
shlb
outsl
test
rcrl
sti
jo
scas
dec
xor
adc
cmp
sub
xchg
enter
lods
ret
xchg
rcl
pop
adc
popf
shr
aas
jmp
jmp
push
jae
and
jmp
lretw
adc
repz
adc
repz
dec
sbb
push
cwtl
jb
jg
ret
test
in
push
rcrl
loopne
cld
sub
fcmovb
addr16
inc
xorl
das
cmp
fcom
jmp
sub
mov
jp
add
jmp
ret
adc
lock
lret
js
or
fs
push
push
xor
sub
xchg
cmp
icebp
jmp
adc
sar
cmpsl
add
ret
xor
je
add
inc
push
mov
sub
shrl
stos
daa
or
xchg
test
sub
ret
cmp
fwait
or
xchg
inc
or
push
inc
ficomps
cs
cmp
mov
adc
loopne
sbb
cld
lret
add
adc
imul
adc
sbb
stos
in
xchg
add
ficompl
jns
repnz
arpl
es
inc
lock
and
sub
ja
jmp
insb
mov
jp
lret
ror
and
adc
sbb
mov
cwtl
sbb
adc
xchg
and
icebp
lods
adc
es
lret
mov
dec
stc
enter
ret
jl
push
or
pop
sbb
aaa
xchg
cmp
jno
jge
mov
int3
xor
inc
fwait
mov
ret
mov
adc
out
sub
push
cld
lea
movsl
inc
lcall
push
push
shl
out
stos
call
fs
in
add
jnp
cmpb
movsl
fisttpl
add
divb
ja
ds
dec
fprem1
ret
sbb
fs
pop
jg
dec
loop
mov
inc
cmp
gs
cmp
pop
fcos
loopne
outsl
adcl
lock
leave
cmp
in
mov
sbb
push
fsubl
clc
je
dec
iret
data16
ss
inc
push
pushf
jns
xor
inc
int
inc
dec
loop
leave
xchg
in
xor
inc
std
mov
inc
aam
ffree
or
push
test
andb
push
into
mov
cld
mov
jmp
jae
mov
insl
inc
pop
mov
inc
sbb
and
das
sub
mov
mov
fiadds
push
enter
popa
pusha
outsb
lock
dec
adc
shr
ds
pop
xor
ret
test
insb
cmp
push
and
sbbb
push
lcall
mov
jno
mov
outsb
push
or
pusha
daa
mov
xchg
jne
decl
fistpl
cmp
and
mov
cmp
xchg
inc
daa
or
jle
add
xlat
and
mov
sahf
mov
imul
jp
mov
mov
fidivrs
cmc
test
call
sub
mov
lahf
mov
mov
cmc
pop
jbe
loope
pop
jecxz
sti
out
rolb
cmpsl
jnp
inc
out
mov
enter
movb
add
xchg
add
mov
arpl
movsb
addr16
mov
mov
and
inc
cli
mull
dec
outsl
mov
outsl
jg
rcll
sub
and
xchg
std
jo
pop
sar
out
mov
add
aaa
inc
jbe
adcl
xchg
fstpl
jbe
scas
or
fidivs
das
sbb
lcall
ret
inc
into
mov
cmpsb
pop
inc
lock
shlb
jb
jp
jbe
loop
sti
enter
insb
push
push
iret
stos
jne
mov
mov
push
sbb
sbb
add
fistps
sbb
out
or
daa
ret
pop
ficompl
dec
mov
decb
or
sbb
mov
xchg
sub
cwtl
dec
mov
fiaddl
jle
out
cmp
adc
lret
inc
rclb
jl
fwait
mov
lds
mov
fnstcw
out
in
cltd
pushf
add
dec
std
cmp
jle
shll
outsl
inc
scas
roll
popa
jno
add
call
add
insb
lahf
mov
jns
xor
push
sbb
in
out
popf
sub
repnz
dec
mov
xchg
shlb
jg
push
inc
mov
xor
xor
mov
inc
mov
pop
leave
jno
cmp
fsubr
adc
mov
push
movsb
outsb
and
jl
lret
push
test
icebp
dec
out
lret
mov
push
mov
inc
xchg
push
xor
sbb
or
cmpsb
outsl
iret
popa
add
mov
clc
fcoms
sbb
jg
jmp
inc
js
cmc
in
cwtl
pop
cs
dec
daa
mov
loopne
test
add
jl
sahf
jbe
dec
push
loope
xor
pop
add
xchg
jp
std
xor
mov
xor
mov
loop
cli
hlt
lock
pushf
inc
es
jnp
sbb
mov
daa
jecxz
int3
lret
shrl
mov
enter
xchg
je
xchg
and
sti
push
mov
mov
subb
cmp
sahf
xor
push
mov
xlat
xor
ljmp
sub
jmp
ss
push
jns
mov
call
add
sub
lock
mov
mov
push
aam
lahf
in
mov
lcall
call
clc
ret
xchg
adc
xor
jbe
mov
fildl
pop
or
fmull
sub
fisubs
stos
int3
push
loopne
fldt
mov
push
cmpsl
fadds
sahf
sahf
pop
lahf
setne
xchg
stos
pop
sbb
clc
push
mov
scas
sub
ja
lds
mov
and
out
rol
cmp
xchg
rcr
lcall
push
adc
das
ret
xor
inc
cmp
lods
mov
les
jnp
je
mov
xor
movl
pop
popa
jmp
xor
xor
cmp
pop
mov
jae
fdivrl
cmpsl
aam
mov
adc
pop
nop
mov
icebp
adc
shl
adc
pop
inc
add
adcl
jmp
dec
test
and
cmp
clc
in
scas
lds
pop
inc
ss
push
pop
imul
lock
nop
in
mov
lcallw
in
movl
push
shlb
mov
xchg
test
aaa
or
xchg
push
xchg
sbb
inc
pop
dec
sti
xchg
push
insl
movsl
cmpsb
bound
push
pushf
mov
cmp
cmp
ret
push
dec
lret
dec
xor
or
gs
jnp
rcrb
adc
xchg
arpl
inc
dec
cmp
out
orb
scas
ret
imul
jmp
mov
jge
xor
lods
inc
sahf
xor
push
rcrb
cs
bound
adc
ja
or
decb
cltd
sub
or
pop
jae
sbb
mov
mov
pop
les
jle
push
enter
mov
mov
js
push
jp
mov
outsb
fiaddl
sub
cmpsl
sub
mov
repnz
dec
mov
lret
cs
or
dec
sbb
fsubrp
stos
xor
xchg
cmp
pusha
dec
std
push
mov
enter
push
pop
mov
xor
sbb
aam
push
fcom
xchg
xor
lods
scas
aaa
in
insb
movb
mov
shl
jp
idivl
jns
xchg
loope
xor
mov
jb
rorl
xor
mov
out
lcall
and
int3
mov
jo
imull
mov
cmpsb
mov
xor
xor
cwtl
or
sub
je
pop
je
mov
add
outsl
lahf
pusha
repnz
xor
sub
push
inc
jp
scas
aam
rclb
xchg
leave
sub
enter
pop
jmp
sbb
movsb
dec
pop
in
xchg
mov
loop
mov
ret
aas
into
push
dec
aas
imul
rep
aas
dec
mov
pop
cmp
aad
mov
lds
mov
out
sbb
ljmp
mov
testl
lret
lcall
mov
xor
cmp
movsb
idivl
inc
out
cmp
mov
mov
cltd
jmp
imul
jmp
mov
in
scas
pop
aaa
out
aas
orb
or
and
arpl
or
out
sub
xchg
aas
outsl
notb
dec
inc
jl
das
mov
test
fucompp
ja
sub
add
push
out
dec
xchg
mov
mov
cmpb
jb
clc
fstl
or
sub
lahf
cmp
mov
mov
push
lods
iret
out
bound
inc
subl
in
out
adc
jae
mov
rol
decl
mov
xor
imul
xor
sbb
sbb
fsubrl
pop
shrl
or
mov
stc
xor
fdivr
jne
icebp
and
shlb
leave
lret
or
lods
dec
adc
xor
push
in
mov
xor
inc
jno
jl
add
fmull
ror
inc
leave
lock
add
scas
xor
mov
cmp
gs
inc
mov
mov
in
xchg
inc
mov
ljmp
xor
addr16
iret
and
out
mov
lods
xor
hlt
pop
hlt
jp
hlt
clc
shlb
jno
mov
test
fcmovb
cwtl
push
cmp
in
xor
mov
push
nop
das
cmp
adc
and
jb
sub
jecxz
hlt
cmp
mov
sbb
mov
pop
stos
int
mov
or
xchg
test
xor
dec
loop
sti
cmc
push
xchg
mov
shll
mov
mov
add
xor
jne
aam
fldl
adc
lahf
add
sub
movsl
test
cmp
dec
and
insl
mov
scas
add
inc
push
adc
pop
jge
clc
add
mov
mov
cmp
mov
pop
adc
mov
leave
out
pop
and
and
lock
mov
push
mov
or
fnstenv
sbb
fsubl
hlt
cld
fs
test
stos
and
add
push
jmp
stos
adc
fisubs
je
stos
xchg
mov
outsl
sbb
push
jnp
xor
inc
sub
out
and
adc
test
mov
pop
xchg
push
jg
mov
jle
cmp
sub
adcl
mov
xchg
xchg
lods
xor
loope
movsb
cmp
or
bound
pop
cmc
jne
sbbl
call
lret
push
out
push
pop
xchg
out
push
outsl
aas
mov
or
sar
stos
xor
xchg
or
pop
les
aas
jmp
cs
cli
stc
test
test
and
in
test
in
pop
faddl
imul
jb
and
sbb
jae
jp,pn
movsb
lds
push
mov
cmp
jo
push
and
jecxz
mov
scas
push
arpl
dec
mov
scas
lret
add
mov
jl
in
in
xchg
dec
rclb
in
push
push
mov
adc
lock
xor
imul
movsb
mov
lahf
inc
push
jne
fadd
popf
jbe
inc
jg
jle
adc
cmpsl
rorb
mov
jl
or
inc
mov
std
cmpsl
aad
inc
and
fcompl
fsts
xor
sub
dec
aaa
aad
lahf
jne
jbe
fstps
lods
insb
inc
xchg
lret
or
adc
and
fcmove
fstp
fstl
in
and
cmp
test
fisubs
xchg
pop
cld
loop
sub
pushf
test
cmpsl
mov
insl
add
sbb
xor
sub
jp
loopne
sbb
dec
add
push
or
mov
sbb
out
sbbb
nop
sbb
dec
and
xchg
mov
cmp
aad
iret
in
test
jecxz
movsl
and
rclb
jle
syscall
outsl
out
insl
int
mov
stc
or
fldl
xlat
dec
roll
cmp
fmuls
jo
subl
movsl
sbb
insb
fwait
add
mov
data16
pop
cli
stos
push
sub
cmp
and
cmp
ds
pop
lds
jnp
repz
xchg
xor
dec
sbbl
mov
sub
push
lret
lods
rorl
pop
fistpl
stos
jnp
push
push
xor
xchg
push
push
stc
nop
test
xor
lret
mov
push
jb
dec
inc
ja
xor
inc
dec
jmp
inc
sub
add
mov
jl
fnstsw
fsubr
or
sbb
push
stos
push
push
xchg
pop
imul
sub
push
int3
loope
fmulp
sub
cmp
or
xor
cli
push
or
subl
jg
pop
repnz
sbb
out
xchg
daa
jle
pop
stc
inc
inc
fucom
adc
jbe
pusha
sub
nop
jl
nop
add
imul
in
call
cmp
test
pop
imul
addr16
cwtl
lret
pop
cmp
pusha
data16
xor
inc
and
scas
xchg
xchg
inc
test
fbstp
iret
dec
imul
stos
jl
out
jle
push
add
sbb
or
lods
sub
fstpt
jbe
negl
dec
stos
inc
lret
push
sub
pop
insl
add
nop
ja
andb
pop
pop
inc
jl
mov
mov
inc
pop
fistl
out
outsl
cltd
int3
xor
aam
mov
sbb
call
adc
stc
add
movsl
lret
stos
outsb
fcoms
sbbb
xchg
test
push
jl
loop
cmpb
pop
jl
push
cmp
ds
xor
and
add
jae
adc
jle
clc
lea
xor
mov
std
ret
ret
sahf
adc
sbb
nop
loop
xchg
add
mov
sti
and
movsb
or
into
fwait
out
mov
out
xchg
and
mulb
into
mov
cwtl
jbe
cmpl
sbb
fstpt
sub
cwtl
js
repnz
repz
jle
bound
repnz
lcall
mov
mov
xor
movsl
mov
or
mov
in
addr16
mov
data16
xor
ret
adc
jae
mov
push
scas
arpl
sbb
rclb
rolb
push
and
ret
xchg
popl
add
int
jno
je
out
fmull
dec
sbb
mov
test
sub
mov
es
outsl
jne
sbbb
in
push
daa
out
sub
into
cmp
push
pop
mov
xchg
dec
loop
mov
aam
ljmp
cwtl
mov
insb
stc
into
cs
lret
ret
andb
out
pop
clc
testl
mov
sbb
add
fs
iret
in
push
sbb
mov
fs
cwtl
or
mov
fs
dec
sub
stos
leave
lret
fsubrs
outsb
lods
push
add
adc
mov
stos
push
test
aad
sbb
lret
mov
add
inc
iret
jno
xchg
push
jg
inc
push
bound
mov
sti
mov
jo
pop
xchg
adc
and
mov
or
hlt
mov
loop
and
in
lds
fidivl
insb
lret
adc
movsb
bound
flds
cli
mov
in
or
mov
pop
movsl
out
sahf
sahf
ret
jp
fsubr
mov
pushf
inc
imul
inc
adc
lea
dec
scas
mov
dec
imull
pop
sbb
xchg
adc
or
inc
xor
orl
sbb
or
jo
push
adc
and
add
pop
sub
mov
stos
das
xchg
clc
nop
mov
test
fcoml
mov
push
std
mov
mov
and
add
fdivr
jae
push
xchg
add
stos
dec
inc
add
jbe
mov
add
in
xchg
fisubrl
dec
mov
cmpsb
fldl
aam
fsubrl
call
ss
ret
int
add
cmpsb
inc
repnz
aad
inc
pop
push
inc
pop
dec
mov
fistpl
push
rorb
filds
lods
out
mov
nop
jno
xor
inc
xchg
mov
shlb
mov
aas
jge
xchg
mov
sub
xchg
xchg
mov
mov
aaa
xchg
hlt
push
out
popl
xchg
ror
add
jnp
lock
xchg
sbb
dec
adc
negl
test
inc
aad
mov
dec
adc
inc
stos
cld
mov
mov
sub
ss
scas
mov
stos
push
stos
ljmp
mov
and
ret
sub
icebp
push
in
dec
xlat
sbb
sbb
popa
loop
pop
orl
pop
pusha
push
mov
jnp
je
xor
aam
sti
xchg
add
cmp
add
adc
sbb
rolb
mov
lods
xor
jb
jecxz
insb
push
cwtl
aam
inc
and
and
stos
sti
repz
mov
repz
jle
pop
xorb
pop
xchg
inc
sbb
repz
inc
std
push
ss
ja
int
adc
jecxz
pop
push
sbb
xor
adc
sbb
jmp
mov
das
sub
js
adc
or
inc
ds
jb
dec
jle
loopne
sub
test
or
cmp
data16
out
xchg
int3
pop
sub
mov
data16
xchg
jne
mov
mov
pusha
and
mov
stos
pop
lcall
sbb
and
adc
jb
scas
outsl
addr16
mov
jmp
popa
ret
ret
xor
sbb
xchg
test
cwtl
sub
cmpsl
ss
into
mov
js
pop
push
mov
and
jmp
leave
jb
fwait
add
fbld
mov
push
pop
and
mov
xchg
inc
and
jo
push
cmc
shl
mov
push
cmp
dec
scas
mov
mov
push
mov
pop
cld
dec
jle
xchg
lea
push
andl
loop
sbb
data16
ja
jns
push
ret
cmp
inc
sub
movsl
push
inc
jne
adc
push
int3
and
dec
enter
and
add
push
xor
add
and
pop
lret
aad
push
imul
mov
jne
shll
ja
jae
sbb
xchg
and
mov
daa
add
xor
sbb
cmpsb
call
fldenv
fiaddl
jmp
dec
add
fdivr
test
mov
mov
aaa
mov
mull
test
outsb
into
sub
int3
ret
inc
xor
sti
cmc
neg
mov
clc
pop
adc
cld
in
aaa
je
xchg
push
cmpsl
stos
add
iret
pop
xlat
test
push
mov
pushf
xchg
push
push
test
inc
loope
push
add
jle
pop
ds
xor
mov
bswap
jmp
mov
inc
lret
dec
dec
test
dec
insl
lock
mov
js
mov
nop
sbb
jg
cwtl
lock
xor
popa
sahf
aad
inc
sub
cmp
add
or
jns
test
mov
mov
cmpl
sbb
push
cmp
inc
int3
out
leave
test
jle
ret
or
push
mov
inc
and
popa
test
jle
mov
aam
movsl
adc
mov
dec
sub
movsl
dec
rclb
xchg
fs
imulb
ja
cmp
rorl
ret
mov
imul
xor
mov
cmp
inc
jmp
std
add
sub
pop
push
cmp
loope
icebp
stos
jl
inc
jno
insb
fisubs
dec
add
repz
stos
xchg
aam
dec
mov
inc
push
adc
xor
and
mov
mov
mov
sbb
jbe
bound
mov
and
scas
std
adc
jge
mov
or
or
cltd
test
dec
jecxz
stos
push
sbb
push
xor
mov
or
xchg
cmp
imul
shlb
jbe
mov
fcompl
or
jo
stc
inc
andb
loop
xchg
pop
fdiv
arpl
xchg
enter
and
ds
cwtl
mov
sbb
rorb
push
aad
arpl
push
pop
testl
rcr
xbegin
ja
inc
test
movsb
aas
enter
jae
outsb
in
call
ficomps
das
or
shll
mov
pop
cli
loop
int3
cld
pop
cmovo
aas
in
imul
mov
pop
stc
ja
test
leave
lret
cmp
push
dec
pop
sub
sub
xchg
mov
and
lea
repnz
inc
xchg
test
add
lock
jae
iret
mov
push
sbb
jbe
stc
dec
jo
repz
mov
and
xor
stc
mov
cmpsb
pop
mov
and
inc
aaa
loope
daa
lahf
jmp
jp
and
push
mov
mov
lods
cmc
push
mov
into
jae
stc
xchg
adc
mov
loope
cmp
mov
push
dec
jle
test
ljmp
jno
scas
fwait
pop
test
push
stc
ud1
test
roll
aam
lds
out
xchg
fldcw
sti
out
mov
fwait
inc
shll
ss
testl
mov
xchg
in
pop
clc
sbb
push
or
mov
jb
in
xor
mov
xchg
movsb
xchg
outsb
cmp
mov
testl
mov
jl
arpl
mov
sbb
pop
lcall
dec
stos
rcrl
fsubr
push
sbb
pop
inc
jle
outsb
clc
or
dec
loope
lea
push
in
cmp
pop
dec
add
jp
int
add
xor
jmp
push
add
xchg
xchg
pop
and
mov
pushw
shlb
das
es
mov
scas
dec
adc
jle
sarb
test
dec
push
call
lret
and
xor
inc
mov
js
rorl
mov
ss
pop
cmp
xor
loope
mov
loope
cli
mov
xor
sbb
mov
shrb
dec
scas
in
outsb
mov
orb
insl
bnd
lret
fcmovbe
cmp
mov
les
jmp
outsb
xchg
ficoml
xchg
faddl
fbstp
adc
jmp
pop
fcomp
mov
xor
mov
xchg
aaa
mov
rcrb
jmp
jp
inc
add
mov
es
xchg
or
ficompl
test
or
fs
sbb
jge
popf
mov
jge
out
mov
repz
push
cld
inc
add
fwait
sub
daa
mov
push
cmp
push
out
adc
jne
push
jbe
xchg
mov
ficompl
in
xor
repz
cmp
lea
push
popa
adc
xchg
and
adc
mov
je
jecxz
les
mov
mov
pop
pop
mov
out
imul
adc
adc
nop
rcr
inc
jp
ljmp
shrb
push
and
or
add
push
mov
rclb
xchg
dec
dec
nop
rcrb
cltd
sbb
inc
fnstcw
sahf
push
pop
aam
xchg
in
js
push
push
lock
insb
out
dec
sarb
or
shrb
add
push
sub
or
mov
push
call
mov
into
cmp
mov
sub
or
or
popf
or
hlt
mov
pop
shlb
das
mov
scas
mov
xchg
pushf
inc
cmp
fmuls
push
pop
ja
add
push
lahf
mov
out
fst
and
aam
adc
jae
mov
int3
mov
mov
jbe
pop
aam
xlat
adc
shl
cmpl
add
ds
and
iret
pop
int3
mov
leave
into
inc
stos
jne
outsb
hlt
nop
iret
leave
mov
dec
mov
jbe
pop
ja
int
repnz
add
mov
cwtl
jne
mov
stc
sbb
xchg
xor
jae
mov
mov
xchg
shll
dec
testb
inc
dec
xor
xorl
mov
dec
aaa
or
imul
push
fsts
add
in
mov
xchg
or
sub
repnz
mov
lret
sbb
push
stos
or
call
sub
push
and
dec
mov
dec
enter
inc
imul
aad
stos
fistps
imul
in
inc
dec
aam
sbb
lret
lahf
rcrl
psrad
push
push
push
xor
jbe
fstl
iret
sbb
andl
and
push
xor
into
adc
ljmp
ds
dec
popf
shll
mov
sbb
push
push
sbb
push
pop
mov
pop
push
es
dec
lret
iret
cmc
push
pop
lahf
or
incl
push
out
mov
jbe
fidivl
out
pop
pop
mov
xor
sub
mov
movsb
pop
inc
push
pop
testb
xor
pop
sbb
push
pop
push
lret
dec
xchg
pop
ljmp
mov
bound
add
mov
adc
xchg
nop
ja
movsl
incb
iret
mov
cmp
jbe
stos
pop
dec
sub
stc
outsl
sbb
mov
push
cmp
pop
lret
repnz
in
mov
and
sub
dec
pushf
sub
filds
xchg
enter
rorl
xchg
and
test
or
adc
push
adc
dec
testl
push
inc
mov
jl
xchg
add
jbe
xor
out
lods
sub
dec
lock
push
loopne
dec
sub
inc
adc
pop
push
add
sti
insl
adc
das
out
lock
jmp
dec
mov
pop
enter
dec
lcall
xchg
mov
dec
aad
aas
mov
enter
cmp
inc
mov
or
popf
or
in
je
mov
int
jle
jb
mov
fidivl
cltd
incl
dec
sub
xor
in
inc
xchg
push
dec
loop
cmp
push
adc
dec
sub
addb
imul
not
out
xchg
rorl
jne
ds
scas
add
pop
jge
sub
xor
sti
pop
xchg
sub
insl
push
int3
pop
out
jmp
gs
add
dec
test
clc
ret
push
cltd
lret
jl
iret
sbb
inc
xchg
cmp
cmp
and
mov
enter
jbe
sahf
or
aas
sub
dec
daa
sbb
out
ror
mov
sbb
rcrl
ffree
mov
rorb
push
adc
xchg
lret
mov
fwait
das
das
jecxz
fmull
rolb
push
mov
adc
bound
sarl
jnp
mov
mov
push
xchg
stos
mov
and
pop
aad
je
lods
mov
out
ret
clc
xor
movsl
in
push
cs
rolb
rcl
xor
mov
adc
movsl
sbbb
popf
out
cld
insb
dec
rolb
pop
or
pop
sbb
addb
sbb
test
fcomp
es
into
sub
push
enter
dec
repz
inc
pop
ret
cmc
sub
cwtl
xchg
adc
movsl
nop
cmp
jno
jecxz
cld
imul
mul
mov
sti
sub
es
sub
and
popf
sahf
jb
inc
ret
jne
push
xchg
xchg
jmp
bound
icebp
dec
or
imul
or
cmpsb
sub
pop
out
mov
sbb
in
push
push
mov
jg
mov
or
mov
test
popf
push
dec
and
lahf
cli
mov
popa
mov
or
lock
mov
aad
clc
fldt
push
xor
pop
nop
add
movsl
cmp
push
sub
xor
rclb
ret
and
jns
insl
lahf
pop
dec
ja
lock
inc
push
flds
test
xor
add
adc
test
lret
lret
sti
data16
leave
shrl
mov
push
mov
sub
cld
stos
sbb
add
or
sub
popa
push
mov
dec
mov
jns
std
inc
and
jp
jmp
mov
and
lcall
sub
ja
mov
fs
inc
mov
mov
xchg
inc
addb
clc
xchg
xlat
dec
lret
mov
in
sti
in
int
roll
mov
jb
out
or
cmc
xchg
cmp
lret
jp
mov
jo
xchg
lcall
mov
pop
add
icebp
sub
push
mov
out
jecxz
cmp
test
dec
mov
sti
sbb
stos
hlt
repz
cmp
into
int
sub
push
leave
rcrl
imul
mov
jb
xchg
mov
dec
popa
push
dec
rclb
push
lods
repnz
or
loop
jbe
xchg
iret
mov
jbe
fwait
adc
push
dec
adc
rcrb
jmp
lret
dec
aaa
fdivs
pop
ss
xor
sti
lds
xor
frstor
mov
pushl
dec
mov
sbb
enterw
jb
repnz
les
mov
das
and
mov
or
xor
lret
and
jae
loop
sbb
jmp
mov
lahf
es
mov
cmp
or
popa
out
jo
insl
push
push
pop
dec
scas
js
lock
cmpsb
pop
in
fistl
mov
xor
adc
pushf
cmp
stos
shlb
rol
cltd
jp
pop
test
shrl
xor
mov
ret
insl
jnp
fstp
pop
dec
fidivl
testb
mov
push
shrb
rcrl
test
loop
je
clc
inc
xchg
inc
cmc
xor
jnp
out
not
js
jecxz
leave
inc
pop
shlb
push
rcl
mov
fists
or
push
adc
ret
mov
xor
ret
or
cmpsl
dec
or
jge
mov
int
stos
scas
mov
sbb
jae
jecxz
jae
lods
cs
add
rorl
jecxz,pn
xor
or
cmpsb
pop
sar
mov
movsb
repz
or
loope
repnz
fdivl
adc
mov
imul
mov
add
xor
mov
int3
scas
ds
lock
jl
sahf
sahf
bound
dec
aad
stos
popf
aam
push
cmpsb
jl
xor
out
mov
call
mov
cmp
stos
outsb
sahf
pusha
lock
jno
fiadds
into
lock
or
sbb
std
adcl
ret
bound
pop
jle
mov
or
int
cld
pushf
in
mov
sbb
xchg
imul
pop
outsl
cmc
mulb
out
daa
iret
sbb
in
sti
xchg
sbb
scas
jecxz
mov
fwait
push
mov
fs
mov
jno
sahf
rcr
je
sub
iret
mov
mov
loopne
xchg
adc
loop
xchg
dec
jns
push
outsl
aam
sbb
push
lret
clc
xor
add
aas
sub
stc
or
loopne
movhps
lea
xor
popf
add
inc
jl
xor
sub
sub
and
mov
jmp
push
mov
push
and
mov
dec
sahf
rolb
mov
dec
ficompl
xchg
xor
ret
cmpsl
mov
roll
in
ljmp
scas
mov
mov
cs
icebp
dec
add
ljmp
fildl
daa
push
mov
dec
rolb
or
insb
mov
pop
js
sbb
xchg
arpl
xor
pop
scas
or
in
adc
push
xor
hlt
sti
cmp
ret
or
insb
clc
dec
pop
les
sub
bswap
test
sub
xor
mov
add
pop
push
stos
outsb
out
push
inc
shrb
adc
bound
mov
and
cs
es
push
sub
lahf
dec
test
lds
rorl
insl
mov
rclb
jge
mov
out
mov
mov
pop
mov
or
out
out
test
pop
xchg
jb
std
jne
add
aam
push
inc
std
or
pop
scas
call
mov
sub
ret
cld
testl
mov
push
pop
mov
sub
int
inc
and
aam
sub
push
cmpsb
mov
add
and
push
xchg
xchg
and
or
push
sahf
inc
repnz
mov
mov
sub
test
scas
jb
mov
lods
pop
cmp
xor
call
jns
rcrl
nop
hlt
push
out
mov
xchg
ljmp
out
int
into
xorb
xchg
pop
fmull
mov
jne
xchg
cmpsb
shlb
divl
push
insl
xchg
shrb
push
push
mov
pop
xchg
and
movsb
sbb
pop
and
push
rclb
addl
jg
or
in
pop
out
mov
gs
lret
or
movsb
mov
jae
mov
mov
mov
repz
mov
and
mov
xchg
or
ljmp
inc
xchg
dec
mov
push
mov
inc
notb
push
jge
push
scas
push
adc
sahf
fwait
sbb
adc
inc
leave
mov
add
insl
sbb
pop
jl
mov
loope
outsb
xchg
inc
stos
insb
xor
mov
jno
pop
ficoms
fcomp
mov
xchg
mov
addb
jo
push
repz
fstpl
imul
add
push
push
mov
ficomps
ret
rcrb
in
gs
mov
mov
imull
sbb
hlt
sahf
scas
xchg
lds
sahf
fyl2x
in
fiadds
mov
fisttpll
aam
lock
mov
xchg
nop
mov
lds
lcall
in
sub
cwtl
mov
pop
mov
and
rorl
dec
outsl
sbb
in
cwtl
sub
mov
dec
sub
adc
mov
div
test
add
sub
jb
lods
mov
jno
sbb
xchg
shl
cwtl
cwtl
inc
push
xor
hlt
jo
xchg
xchg
sbb
sbb
push
fimuls
sar
jae
fidivl
aas
fwait
push
fidivs
pusha
pop
aaa
nop
test
pusha
scas
lock
dec
mov
shlb
xchg
push
test
mov
popf
inc
jl
lret
xor
sbb
add
getsec
jne
inc
pusha
xor
push
ja
sbb
mov
jno
aam
push
jp
rcl
sbb
fldt
mov
mov
inc
mov
jbe
aas
dec
xchg
out
lds
sahf
or
jmp
mov
mov
outsb
std
popa
and
call
jl
jb
std
lret
into
cmp
cmp
ret
test
clc
xchg
int3
and
dec
es
mov
loope
test
mov
mov
fsts
in
pop
sbb
in
xchg
cli
mov
jne
mov
mov
cmp
mov
pusha
movsb
das
pop
cmp
adc
stos
cmc
add
popa
xor
movsb
jp
in
sub
out
xchg
xchg
add
inc
cmp
push
es
hlt
push
icebp
pop
dec
mov
jl
xchg
imul
pop
in
jmp
lret
fsubl
adc
cmp
sbb
pusha
sahf
mov
js
fmuls
sub
dec
push
pop
push
dec
xchg
xor
jno
loop
mov
sbb
jmp
int3
in
sti
xchg
leave
inc
or
int
mov
mov
push
pop
mov
mov
mov
xlat
inc
push
or
lock
loope
sbb
xor
mov
into
adc
adc
inc
and
inc
add
xor
imul
add
jmp
inc
fldcw
jb
mov
push
inc
push
bound
xor
or
xor
xchg
sbb
mov
mov
stc
push
das
mov
insl
sahf
int3
cmpl
mov
imul
push
cmpsl
push
outsl
mov
cmp
xchg
icebp
jmp
jns
aas
bnd
fsubs
lret
or
pop
sahf
adc
cmp
xchg
pop
test
xchg
pop
ret
adc
mov
inc
mov
jne
imul
mov
sub
xchg
sub
jae
xchg
clc
stos
lret
push
aaa
loop
cmpsl
mov
lea
adc
jge
loope
outsl
pop
push
sbb
add
paddw
push
out
jmp
cmp
loop
push
scas
push
movsl
jl
out
sub
aam
sub
frstor
sbb
lcall
loopne
fcmovnb
bnd
sub
add
cmp
cmpsb
push
push
push
jb
mov
stos
jg
rcrl
pop
cld
push
aaa
les
enter
mov
out
sahf
inc
mov
dec
mov
dec
iret
sbb
pop
and
frstor
inc
dec
mov
cmp
in
loop
decl
sbb
out
sub
cmc
jo
jp
loop
sbb
mov
aas
mov
loop
pop
mov
fsubrs
cwtl
notb
inc
sub
pop
inc
push
cmp
cmp
xor
aam
nop
dec
or
add
adc
stos
loopne
fcomp
sub
test
mull
fwait
sub
scas
fimull
and
pop
popf
pop
sbb
push
push
aas
inc
mov
xchg
fdivs
stos
xor
cmp
lcall
mov
dec
and
lcall
aad
mov
sbb
inc
or
dec
pop
fadds
xchg
cmp
adc
mov
push
adc
dec
mov
jle
aad
lea
stos
jnp
cmovp
sar
dec
lods
cmp
dec
fsubrs
pop
sbb
mov
iret
int3
mov
xchg
ja
sarl
out
sar
mov
scas
cli
inc
call
iret
bnd
xor
adc
je
dec
icebp
add
ljmp
test
lock
in
inc
repz
sbb
or
shlb
cmpsb
imul
or
adc
or
imul
adc
loopne
or
ja
mov
fucom
jbe
jmp
sub
jae
mov
mov
adc
dec
in
cmp
mov
xchg
in
add
cmp
cs
leave
addr16
sbb
std
and
stc
xlat
das
sbb
or
mov
dec
xor
inc
sahf
mov
out
cmp
loope,pn
dec
or
out
push
xchg
lods
jmp
push
lock
xchg
dec
mov
mov
lods
pop
frstor
add
inc
cwtl
push
call
negb
lea
pop
ds
std
inc
mov
and
fstl
nop
add
leave
fcmovnb
mov
cld
xorb
pushf
mov
fiadds
fstl
pop
pop
mov
cmp
sub
xlat
dec
sub
jns
leave
int
leave
pop
add
pushf
cmc
xchg
xor
sti
jl
xor
dec
fstps
lahf
cmp
push
xor
imul
mov
aad
mov
movsb
popf
stos
test
imul
rolb
adc
push
in
stos
dec
xchg
das
xor
popa
pop
pusha
das
adc
in
cmp
and
push
hlt
stc
dec
int
cmc
aas
adc
rcrb
movsl
mov
insb
push
pop
cld
fdivrl
lods
shl
insl
sub
mov
pop
sbb
fwait
data16
jl
clc
aas
cmp
aad
ds
jge
leave
lcall
adc
pop
icebp
xchg
aad
test
lods
push
cmpl
push
pop
mov
xorl
push
and
shrl
cmp
jecxz
jno
sbb
lds
sbb
ss
in
push
inc
iret
outsb
movsb
mov
cmp
xor
xlat
inc
mov
loop
mov
icebp
sbb
xchg
fsubrp
adc
pop
xor
leave
pop
out
popf
mov
and
imul
jle
fsts
xchg
sub
in
inc
or
pop
fnstenv
lahf
decl
mov
or
lret
int
xchg
dec
add
fsubrl
xor
out
pushf
sub
inc
rorb
cmp
gs
mov
lret
out
xchg
add
push
pop
fwait
lods
inc
jne
aas
repz
jp
sti
adc
in
jnp
outsl
cmp
call
loop
pop
stos
push
sbb
push
adc
inc
add
adc
popf
jno
pop
or
cmc
dec
inc
cltd
inc
mov
xchg
xlat
cmc
inc
add
push
cwtl
fsubrs
fmull
and
cmp
fbstp
cmpsl
adc
fyl2x
mov
jnp
rcr
cmp
out
pop
bound
fnsave
add
pmulhuw
pushl
sub
dec
sbb
push
mov
pop
xchg
adc
sub
pop
aad
xchg
cmp
mov
cmpsl
into
loop
shlb
push
push
sbb
in
outsl
imul
pop
inc
inc
and
mov
loop
mov
and
mov
bound
repnz
lret
int3
ss
jno
inc
cmpsb
ss
and
dec
or
sub
frstor
gs
test
pushl
loope
pop
mov
hlt
ss
fnstcw
push
jle
fnstcw
xchg
sbb
cmp
movsl
sub
outsb
lahf
fiadds
add
call
fstpt
imul
push
jmp
rolb
icebp
stos
adc
out
pushf
mov
add
mov
icebp
stos
outsl
leave
shlb
arpl
outsl
shl
sbb
rcrb
decl
addl
dec
fimuls
push
mov
ret
cmp
jo
aad
cli
dec
loope
frstor
dec
jg
scas
test
adc
movsb
div
in
test
xchg
cmp
mov
aad
add
mov
imul
cmp
outsl
and
and
jb
iret
and
stc
add
aam
sarb
xor
loopne
imul
jl
cmp
sbb
pop
xchg
icebp
mov
xchg
and
nop
filds
lock
mov
insl
data16
lea
pop
lods
cmp
pop
jns
jmp
ret
mov
add
mov
inc
hlt
sub
xchg
mov
in
test
mov
mov
addr16
int3
pop
out
arpl
pusha
mov
sti
ds
pop
mov
jecxz
sbb
and
pop
icebp
lcall
or
dec
ljmp
fs
nop
sub
or
fs
and
mov
daa
push
or
scas
ljmp
in
jne
movsl
iret
fsubrl
mov
out
lcall
pop
pop
ljmpw
mov
outsl
xlat
lock
push
sub
lds
jge
mov
xchg
jae
addr16
sbb
aam
nop
ja
cmp
incl
sub
sti
jo
leave
sti
add
out
clc
mov
test
mov
mov
push
push
into
hlt
or
xchg
and
pop
mov
loope
shlb
push
popa
cmp
ja
pop
shr
lds
cli
and
jb
or
jle
push
addb
xor
sub
mov
out
cmpsl
dec
icebp
jnp
adc
daa
cmp
lock
dec
pop
andl
das
push
push
xor
dec
mov
jmp
mov
mov
cli
pop
jb
inc
out
dec
das
nopl
sub
in
sbb
popf
mov
jge
out
push
xchg
shrl
hlt
cmp
xchg
icebp
rcr
and
pop
mov
pop
out
dec
loopne
inc
sub
inc
or
cmp
push
or
jne
sbb
jge
mov
test
or
rclb
pushf
scas
in
jge
sbbb
xchg
in
jge
jae
add
cmp
push
jae
and
outsl
addr16
xchg
insb
and
shll
fcompl
sbb
loopne
jno
push
adc
xchg
ret
gs
jns
cld
lea
push
push
add
mov
cmp
repz
jp
inc
add
test
subb
dec
enter
mov
out
jmp
push
jg
test
test
sub
scas
in
push
test
xchg
xor
add
hlt
mov
mov
stos
dec
cld
je
and
hlt
std
cli
mov
addr16
jno
push
stos
inc
popf
push
dec
mov
mov
pop
je
loope
dec
cmp
shl
mov
adc
lods
mov
sub
daa
imul
adc
popf
push
je
sbb
xor
jp
push
testb
and
dec
roll
dec
dec
movsb
sahf
jo
push
jl
dec
pop
sarl
mov
es
pop
mov
call
or
nop
les
sbb
push
cmc
dec
xor
daa
xchg
lock
mov
sub
rcrb
int3
cmp
xchg
inc
out
addb
jg
repz
pop
cltd
in
in
std
loop
sbb
adc
cld
adc
stos
pop
lcall
mov
push
mov
xchg
lahf
fisubrs
scas
loop
or
fiadds
ret
mov
xchg
std
dec
xor
decl
int
mov
loopne
cmpl
mov
sti
jae
sbb
or
lcall
ret
lahf
dec
pushf
push
adc
sarb
ss
movl
push
leave
mov
xchg
es
xor
inc
daa
xchg
enter
xlat
dec
mov
stc
pusha
jno
gs
incl
add
std
in
cmpsb
cmp
lds
jb
insl
xor
in
nop
fs
fabs
push
cwtl
scas
mov
stc
cmp
jmp
js
pop
mov
imul
push
sub
xlat
sub
dec
movsl
sarl
iret
push
xchg
xchg
jae
cltd
cmp
test
outsb
rolb
sahf
daa
lahf
jecxz
mov
add
loop
xchg
jge
xchg
lret
fildl
js
jae
insb
push
mov
mov
cmp
xchg
arpl
outsl
rcl
mov
push
cmp
ret
mov
xchg
jge
sarb
movl
dec
hlt
imul
and
pop
popa
call
fisttps
rep
ds
add
outsl
xchg
fsubl
aaa
inc
xchg
sarl
sbb
add
addr16
sub
xor
pop
cmpsl
call
popa
lock
dec
inc
xlat
pop
sbb
dec
mov
iret
movsb
iret
xor
ret
cmp
cmp
jbe
idiv
rcrl
push
push
push
push
jmp
lods
add
movsb
aad
sahf
andl
xor
push
cli
cltd
mov
push
inc
and
cltd
sbb
sub
fwait
fwait
es
and
add
sbb
stc
idivl
fcmovb
addb
rol
push
mov
insl
pop
xlat
jecxz
mov
ds
popa
lock
fbld
data16
stos
or
shl
sbb
mov
es
xchg
push
dec
mov
andl
imul
idivl
sub
sbb
inc
jmp
xchg
lock
aas
push
sub
inc
icebp
adc
fisttpl
out
cwtl
mov
add
aam
insl
cltd
xor
push
jg
cmp
mov
and
inc
inc
lock
pop
inc
cmp
nop
mov
or
jbe
faddl
inc
jne
inc
jmp
call
fistl
inc
xlat
add
jne
clc
inc
or
pushf
stc
sahf
in
push
mov
fdiv
subb
popa
lahf
sarl
icebp
nop
popf
and
std
inc
pop
out
pop
inc
call
adc
fadds
mov
xorb
fucomp
imul
inc
stos
mov
out
loop
out
leave
push
push
pop
stos
out
aad
mov
aam
loop
dec
das
cltd
idivb
int
adc
lock
ds
ljmp
add
push
inc
xor
std
mov
xor
testl
jb
icebp
mov
notb
orb
push
jp
xchg
das
pop
mov
aas
arpl
cwtl
pusha
sbb
sub
cmp
faddl
pop
inc
xchg
inc
clc
push
out
inc
loopne
inc
sub
push
inc
daa
fstp
dec
lahf
int3
mov
mov
jg
ror
xchg
sub
push
das
push
je
cmc
ficoml
push
popf
xor
test
dec
lahf
jge
aam
cmp
lds
leave
pop
adc
or
jbe
pop
daa
and
inc
call
fstl
cmp
add
aad
stos
cltd
pop
sub
sbb
cltd
shrb
popf
filds
jg
xchg
jae
fcoms
imul
lea
lcall
repz
scas
pop
cmpb
scas
movsb
fcoms
into
dec
add
cvtps2pd
popa
popa
pop
sbb
inc
xchg
in
cmpsl
mov
and
push
rorb
dec
dec
aam
ja
mov
stc
cmp
add
push
dec
in
dec
mov
push
mov
xchg
push
dec
or
jp
adc
push
mov
in
push
lcall
jb
cwtl
pop
inc
pop
mov
les
push
lcall
adc
fsubrl
add
inc
jne
mov
mov
in
ds
imul
mov
sbb
mov
negb
shrb
adc
aas
fidivrl
fstps
lret
mov
fisttpl
cs
test
xor
inc
fnsave
mov
enter
test
mov
push
lret
mov
pavgw
fsubrl
push
cld
jb
fs
dec
mov
xchg
je
jmp
and
insl
xor
dec
inc
dec
cld
push
push
out
sub
xchg
test
mov
imul
xlat
xchg
repz
ds
lods
mov
cmp
pop
and
adc
jecxz
cmp
sub
or
pop
sbb
enter
jo
es
testb
mov
cmp
mov
fwait
in
jl
fsts
pop
jbe
jae
shrl
icebp
adc
aad
mov
xor
leave
repnz
sbbb
mov
adc
mov
idivb
mov
xor
leave
scas
daa
mov
push
add
inc
mov
xor
sub
mov
enter
das
pushf
mov
stos
add
bnd
mov
jo
jnp
popa
cltd
mov
imul
pop
movsl
cmp
fs
shrl
pop
fwait
hlt
dec
ret
into
cmp
daa
stc
mov
das
inc
lret
and
sbb
xor
lcall
fisubrl
nop
jb
mov
mov
sbb
adc
testl
sahf
adc
pop
jns
aad
pop
fistpll
pop
add
outsb
mov
lods
pop
add
pop
jo
push
test
mov
addr16
mov
in
push
jge
f2xm1
lock
mov
js
jb
jo
shrl
popf
mov
xchg
aas
dec
xchg
in
scas
mov
or
and
mov
sub
shl
ds
mov
fistl
call
outsb
xchg
shll
add
mov
insb
adc
inc
mov
jmp
loopne
push
mov
sbb
sub
mov
pop
pop
jns
xor
inc
ss
outsl
js
cltd
jecxz
dec
pop
xchg
loop
mov
cld
nop
xchg
xor
mov
mov
ds
bound
mov
push
inc
mov
dec
nop
cmp
incb
push
dec
sbb
ret
add
notb
insl
sbb
scas
es
push
in
mov
jnp
repz
sbb
bound
pop
repz
pop
push
adc
cmp
je
scas
and
mov
and
sbb
inc
adc
mov
or
or
cmp
dec
push
fcoml
pop
xchg
repnz
xorl
mov
into
xor
sub
jbe
jl
daa
sub
leave
sbb
or
sub
hlt
sub
inc
and
jns
dec
xor
mov
mov
inc
cmp
enter
testb
mov
lahf
divl
inc
aaa
sbb
mov
mov
icebp
xchg
pushf
psadbw
scas
leave
inc
leave
mov
jge
rorl
rclb
dec
inc
es
aam
lods
add
inc
adc
pushf
mov
sub
or
mov
dec
adc
add
ret
sbb
outsl
jnp
xchg
xor
jnp
gs
push
repz
imul
mov
mov
mov
pushf
test
lds
push
xchg
in
mov
or
cld
xchg
adc
add
jns
mov
adc
call
mov
xchg
and
cs
aam
sub
and
pop
in
push
sahf
addr16
mov
inc
mov
inc
mov
daa
xchg
fcoms
inc
mov
and
enter
xor
xor
pop
scas
xchg
push
and
repz
push
mov
sbb
scas
push
and
mov
xchg
in
pop
xchg
arpl
jg
fnstenv
inc
mov
jae
repz
orb
pop
mov
sbb
repz
fucomip
fucomip
ret
sbb
xchg
and
scas
daa
daa
insb
dec
mov
cmpsl
mov
lds
mov
jbe
sbb
in
outsl
cwtl
in
fisubs
mov
sbb
mov
xor
repz
and
inc
je
in
xor
mov
xor
mov
negl
cli
inc
test
mov
sbb
xchg
int3
and
cmpsl
pop
xchg
pushf
jmp
aas
loopne
xor
pop
xrelease
cwtl
cmp
inc
mov
insl
mov
sbb
les
lock
out
mov
addr16
shlb
dec
cltd
pop
pusha
lret
das
sti
push
mov
xchg
push
push
out
mov
in
cmpsl
jo
mov
lcall
or
fs
dec
insb
kmovb
mov
aaa
dec
faddl
lret
jns
pop
ss
jge
int
jne
dec
loope
add
and
ret
call
pop
sub
fidivrl
cmp
sti
incl
jmp
mov
stc
jae
std
imul
cmp
cmpsb
into
sbb
jno
pop
aad
or
insb
loop
sub
test
mov
lods
jg
insl
push
push
sub
jge
add
stos
data16
xchg
insl
movsl
mov
aaa
xchg
ds
cmp
cli
pushfw
ljmp
sbb
mov
pushf
test
mulb
loopne
lea
mov
mov
jne
add
sti
xorl
in
mov
lret
add
aam
icebp
daa
mov
mov
outsb
rolb
mov
test
es
sub
rcll
lret
cmp
inc
xor
jnp
sahf
cmp
test
cld
jno
lds
fimuls
or
mov
push
inc
xor
cli
popa
jmp
cmp
sbb
add
or
pop
je
lahf
pop
push
jmp
fdivs
or
and
and
pop
sub
cmpsl
mov
data16
jl
jmp
pop
dec
aaa
mov
mov
push
xor
inc
sub
adc
lret
sub
sub
bound
dec
xchg
mov
push
aas
jb
jg
push
popf
push
xchg
push
in
rcrl
in
mov
dec
pop
test
xlat
sbb
testl
xchg
cmpsl
lds
es
mov
out
ds
inc
jle
and
sbb
or
subl
punpcklwd
je
sbb
mov
adc
inc
sub
or
adc
adc
xor
mov
adc
in
mov
xor
and
xor
jne
stos
mov
sub
orb
mov
and
mov
inc
cmp
adcb
dec
jp
test
sarb
mov
icebp
es
xchg
jmp
cmp
std
mov
ret
addb
arpl
imul
mov
lea
pop
lret
push
mov
arpl
fisubl
cld
out
sar
inc
jg
adc
pusha
aad
dec
test
je
pop
adc
dec
and
or
hlt
dec
push
popa
clc
lods
iret
sbb
shr
outsb
data16
aam
push
xchg
push
pop
into
pop
dec
incb
or
fimull
dec
jge
ret
sti
sub
sbb
pop
adc
and
popf
ljmp
inc
mov
int
mov
and
rcrb
je
or
xchg
xchg
inc
rep
shrl
adc
mov
pop
mov
cmp
mov
popf
std
sbb
push
movsb
dec
sbb
xlat
out
sbb
pop
xchg
int
pop
into
test
leave
xor
mov
push
sbb
lcall
or
ret
insl
xor
mov
fwait
aam
mov
ja
pop
stc
jmp
sub
ret
jp
rcrb
pop
hlt
clc
cmp
pop
jle
pop
xor
out
mov
pop
aaa
sbb
xor
jbe
insb
in
in
push
dec
imul
sub
add
jp
scas
out
in
dec
xchg
sub
les
inc
inc
movsl
mov
sub
fwait
ss
aas
sbb
jno
pop
mov
movsb
and
movsl
jno
jo
scas
adc
push
movsl
push
mov
pop
push
mov
loop
imulb
sahf
inc
mov
cmp
lds
int3
insl
dec
jne
jnp
aad
fsubrl
cli
push
cmp
out
xor
mov
sub
cltd
sbb
nop
lret
pop
loopne
cltd
and
mov
xor
leave
popf
into
jp
sub
jmp
dec
ss
or
es
sti
nop
and
sbb
rolb
test
mov
aaa
cli
pop
cmp
mov
jb
call
faddl
into
call
aad
push
inc
hlt
ljmp
push
stos
std
cmp
push
in
outsl
jp
push
ds
add
stos
loope
mov
or
jle
inc
fldcw
nop
test
loop
cmp
xor
add
mov
lods
nop
nop
lahf
fnsave
iret
rorb
push
jb
inc
incb
add
push
mov
movsb
popl
adc
push
mov
mov
jbe
dec
rcrb
xchg
mov
or
or
aas
testb
dec
sub
ret
test
xor
rcrl
mov
xor
js
pop
lahf
inc
jo
push
lcall
test
rorb
mov
sub
push
push
out
into
in
jl
dec
and
lcall
and
ror
xor
adc
mov
cmp
adc
sub
pop
or
mov
fstps
loop
dec
inc
ljmp
scas
or
dec
fs
mov
pop
xchg
mov
or
cmp
or
xor
ss
lock
mov
ss
push
pop
mov
call
or
and
stc
rorb
and
pop
pop
fmull
mov
les
ss
movsb
es
test
mov
mov
psubb
std
xchg
push
aas
into
out
test
jecxz
daa
sub
out
inc
mov
sbb
cmp
insl
mov
mov
scas
out
mov
je
ds
ret
fsubp
fiadds
popf
out
dec
lahf
cs
mov
or
ret
add
into
testl
push
mov
ja
lea
leave
push
aas
jbe
cs
jb
rorl
iret
fwait
jecxz
mov
fbstp
ret
and
sub
mov
aam
dec
pop
mov
sub
popf
or
cwtl
mov
leave
or
xchg
and
aam
xor
add
cwtl
stos
pop
inc
xor
bound
dec
push
lock
cld
ret
jbe
pop
addr16
jg
jae
cli
jmp
ret
xchg
jecxz
fistpll
adcb
or
xchg
cli
mov
sbb
jno
cmp
mov
rorb
cmc
loopne
mov
ja
data16
addl
push
push
and
add
bound
fsubrl
shl
pop
xchg
push
inc
hlt
pop
in
adc
inc
lds
daa
mov
sub
mov
out
xor
xchg
rol
lret
inc
xchg
jecxz
lret
test
push
adc
cmc
test
dec
hlt
jb
sti
rcrb
push
push
pop
sti
sub
out
sti
ja
mov
push
sub
jp
popa
mov
push
jge
sahf
and
loop
jno
loopne
mov
mov
mov
aaa
sbb
and
adc
jo
les
inc
dec
lret
sti
dec
fildl
mov
pushf
mov
mov
rcrl
es
outsl
scas
stos
test
in
lcall
stos
and
in
pop
push
xlat
xchg
nop
cmp
andl
cmp
sbb
push
push
xor
sbb
aas
and
repnz
dec
push
bound
in
adc
mov
fnstenv
dec
out
pop
into
push
call
mov
rcrl
jg
push
push
fists
cmp
scas
or
test
out
jo
adc
cld
xlat
dec
sbb
xchg
pop
popf
push
stos
push
aad
cli
imul
jg
or
xchg
fstpt
push
push
fisttps
loop
xchg
repnz
add
test
dec
sbb
inc
inc
ljmp
jbe
adcl
out
mov
orl
fsqrt
push
inc
imul
stos
leave
pop
mov
pop
xor
shl
inc
cmp
dec
fcoml
in
orl
les
aaa
ds
push
orl
fsubp
jo
lahf
std
pop
fwait
outsb
push
cs
stc
iret
push
dec
pop
pop
fsubrl
addl
jp
inc
gs
fwait
std
pop
push
jb
mov
scas
rcll
orb
cmp
cmc
inc
sub
pop
ds
pusha
and
xor
push
push
cmp
jmp
push
push
icebp
push
or
test
cmp
mov
loop
clc
mov
and
sbb
xor
shll
add
mov
nop
fcom
xor
call
iret
lcall
sbb
add
fld
mov
push
int
and
enter
call
lock
nop
xchg
negb
pop
or
mov
adcl
jno
cltd
fnstenv
xchg
inc
leave
scas
inc
cwtl
repz
cmpb
push
addb
movsb
pop
cmpsb
movaps
call
push
and
mov
dec
jb
mov
inc
ror
dec
jns
adc
bound
dec
js
mov
mov
fcmovnbe
jge
sbbl
stos
jne
hlt
fnsave
cmp
or
aas
ror
jb
outsl
xor
cltd
dec
push
sbb
ret
ficoml
jae
add
pop
fstps
popa
sub
lock
ja
loope
aad
and
aas
jge
lret
leave
sub
outsl
pop
pop
mov
add
outsl
pusha
hlt
inc
cs
dec
jmp
sub
test
andnps
xchg
arpl
scas
xchg
adc
test
cwtl
add
pop
mov
repnz
nop
das
mov
xlat
dec
mov
ffreep
and
in
jge
data16
mov
hlt
or
mov
cmp
jl
rorl
xchg
aad
mov
ror
je
push
jmp
test
jp
pop
test
insl
inc
or
stos
ja
push
pop
out
lods
mov
dec
and
cmp
lahf
ja
add
dec
jno
push
push
mov
aas
fistpl
and
mov
pop
mov
cli
mov
loopne
pop
xchg
cltd
pushf
push
mov
mov
popf
add
paddb
addr16
dec
inc
push
psubusb
push
sub
mov
shr
xchg
push
xor
mov
enter
cmp
outsb
std
dec
add
pop
fcompl
pop
jae
pop
int
dec
push
mov
pushf
cmp
stos
xchg
mov
sub
jge
add
and
add
les
sbb
ja
push
xchg
and
mov
lret
dec
inc
push
imul
shlb
mov
mov
stos
jge
aam
cmp
add
pop
aas
data16
lock
mov
push
push
arpl
in
mov
mov
lods
jmp
or
adc
icebp
xchg
adc
dec
jbe
imul
mov
pop
movd
movsl
rolb
int3
or
int
jbe
dec
cli
xchg
cmp
into
lahf
xchg
cmp
and
xor
mov
or
pushf
jno
add
in
dec
sbb
insb
roll
or
jmp
pop
cwtl
mov
dec
and
pop
scas
push
and
hlt
in
pop
jo
fldenv
arpl
pop
push
insl
cli
cli
push
xchg
imul
dec
xor
add
push
shlb
ja
lcall
mov
adc
fistps
mov
push
mov
mov
std
push
lods
jo
cwtl
push
add
cmp
subb
cmp
fdivs
and
ljmp
and
outsb
ret
xchg
add
lock
sahf
cmpsb
push
divb
pop
into
and
mov
pushf
je
addr16
adc
clc
out
pop
lret
xchg
inc
call
push
mov
lods
push
mov
jae
rcrb
dec
je
das
popf
lea
imul
push
mov
xchg
rcll
mov
cwtl
or
or
jle
cmp
scas
mov
or
mov
imull
repnz
mov
cmp
cwtl
imul
or
dec
xchg
and
cmp
mov
sti
fildl
dec
xchg
xlat
jle
jno
sbbl
scas
aas
mov
push
pop
or
lock
movsb
notb
mov
mov
cli
movl
int3
adc
inc
xchg
jmp
push
push
fidivl
sbbl
jecxz
jle
add
xchg
call
pop
loope
lahf
ror
mov
jo
cmpsl
mov
xchg
mov
mov
adc
jp
scas
gs
clc
mov
ljmp
pop
mov
icebp
and
or
ret
lock
outsb
and
jne
stc
pop
loopne
dec
cmp
or
or
pushf
sar
sahf
jno
rcll
dec
push
fadd
pop
mov
movsb
jae
push
insb
test
sbb
cmpb
push
outsb
xchg
mov
aas
jmp
mov
jno
push
mov
andb
fsubs
imulb
es
data16
dec
movups
and
mov
mov
dec
add
jl
lock
xchg
push
dec
jmp
sub
in
hlt
sub
sbb
repz
or
and
loop
fadd
test
lret
xlat
add
inc
xchg
mov
jo
out
dec
lods
xor
and
cltd
mov
mov
cmp
dec
dec
sbb
das
cmpsb
mov
pop
dec
dec
push
and
pushf
dec
in
mov
sarl
mov
lret
lods
push
inc
push
push
insl
addr16
decl
int
mov
bound
sub
xchg
inc
mov
jno
shll
pusha
scas
fucomp
and
in
jecxz
pop
fiaddl
jbe
mov
lds
shlb
jmp
popa
faddl
adc
repnz
cli
push
xlat
jge
lods
push
andb
rcll
movsl
pop
nop
push
cmp
adc
cmp
out
mov
cmp
cwtl
fdivrp
mov
jae
mov
mov
fnstsw
push
sti
inc
dec
cmp
xor
mov
add
clc
arpl
pop
popa
inc
xchg
jp
fstpt
jecxz
fiadds
fcoml
sbb
adc
stc
pop
jo
xchg
lret
test
adc
gs
or
imul
out
sbb
mov
cwtl
pop
jmp
pop
bound
mov
mov
or
stos
mov
pusha
fidivs
movsl
push
jmp
scas
or
cmpsb
or
addl
xchg
pusha
loope
arpl
cwtl
sbb
fwait
addr16
pusha
sti
shll
jnp
test
rol
loope
pop
jae
or
xchg
imul
cmp
fs
out
out
fnstsw
xchg
adc
mov
sub
imul
mov
cmp
adc
jnp
rcl
ljmp
pushf
inc
push
or
xor
shll
lret
insb
add
cmpsb
dec
enter
jge
mov
jle
push
imul
lret
clc
mov
mov
lods
ficoms
pop
jmp
repnz
rcrl
or
pushf
or
loope
in
lock
fsubrp
add
clc
ja
sbbl
and
lods
fcmovbe
cmc
sub
pop
push
pop
or
lret
shrb
mov
mov
mov
mov
mov
add
push
movsb
aas
push
std
mov
bound
xchg
mulb
or
imull
repz
arpl
fwait
insb
mov
iret
call
js
cmpsb
jae
mov
mov
jo
loop
pop
frstor
out
mov
les
movsbl
sub
push
mov
lea
stc
les
pop
mov
push
xchg
insb
or
aaa
fld1
sub
insb
add
inc
mov
pop
or
jne
and
pusha
ror
ss
jno
cmp
aas
imul
xchg
pushl
sbb
outsb
add
stc
ret
fwait
shll
adc
dec
pop
pop
pop
fcom
nop
pop
fildl
cmpsb
mov
scas
mov
cmp
or
push
lods
cmp
dec
test
insl
push
jmp
pop
dec
mov
bound
mov
lea
shll
adc
insl
cmp
jle
jge
cmp
xchg
ss
sahf
pop
jge
ja,pn
iret
cmp
add
mov
int
cmp
cltd
mov
mov
jo
in
scas
aaa
sub
rcl
scas
mov
sub
test
mov
jae
movsb
dec
pop
jecxz
repnz
mov
shr
andb
cltd
insb
xor
mov
add
mov
aaa
sub
test
and
inc
sub
lods
ja
mov
fcomip
dec
add
cmp
cltd
adc
cmpsb
adc
lea
clc
adc
or
in
es
push
add
int3
sbb
jge
fucomp
das
jp
inc
add
adc
lea
xchg
gs
sbb
popf
mov
inc
xor
lret
into
rolb
aas
subl
push
and
lret
pushf
xor
inc
xchg
or
push
je
out
ret
xchg
lcall
mov
mov
lods
xor
movsl
dec
cmp
mov
mov
inc
mov
inc
jl
ffreep
xchg
out
in
int3
cmp
sahf
adc
repnz
sub
int3
fistl
pop
cwtl
int
orl
cli
cmp
xchg
ret
lcall
cmpsl
xor
push
dec
loop
push
or
lods
add
aam
mov
les
pop
lcall
push
loope
pop
xchg
xlat
popf
jg
add
sti
cli
arpl
jb
pop
jp
jmp
fs
ret
fistpll
outsl
dec
mov
jp
push
cltd
jecxz
popa
push
pop
and
xor
xor
xor
jns
dec
push
cmp
cld
inc
test
sbb
fnstcw
xchg
pusha
pusha
pushf
mov
mov
pop
faddl
aam
xor
outsl
out
andb
mov
loopne
movsb
jle
xorps
cmp
mov
jns
ljmp
std
enter
mov
jmp
xchg
xchg
lods
push
roll
scas
test
lock
dec
ljmp
pushl
push
out
lahf
es
negb
test
and
adc
shlb
inc
cmp
cmp
jne
xor
mov
lods
rclb
mov
and
nop
mov
mov
and
iret
cld
jmp
mov
add
sub
lret
push
add
mov
jg
pop
cmp
push
push
cmc
lds
add
push
pop
push
into
cmp
or
ret
mov
inc
inc
pusha
daa
cmpl
push
insb
test
mov
mov
sarb
insb
mov
push
int3
push
sub
mov
xchg
xlat
jae
stos
jge
sub
mov
aaa
adc
outsb
dec
and
ja
or
insl
jle
adc
repz
ds
jmp
sub
cltd
and
ret
push
and
adc
adc
in
push
scas
and
push
mov
jb
aam
lcall
adc
cmc
cmp
or
or
fwait
nop
loopne
data16
js
lahf
add
fimuls
int3
loop
inc
add
inc
ljmp
adc
subl
fwait
sbb
mov
lea
lret
lods
cld
out
push
jecxz
dec
in
xchg
push
and
xchg
rcll
movl
add
fmuls
pusha
bound
mov
movsb
inc
mov
cs
lret
mov
mov
add
mov
in
inc
ja
int3
fistl
push
push
xorl
cmp
lret
sbbb
pop
mov
xchg
nop
inc
push
pop
leave
jp
mov
inc
mov
aas
into
loope
ds
daa
sbb
cld
in
or
mov
inc
pop
mov
fwait
inc
ret
sahf
add
out
rcl
add
dec
pop
outsl
or
imul
pop
mov
out
pop
adc
lret
push
cld
dec
mov
jecxz
push
fnstcw
add
xchg
ret
ds
lcall
js
mov
jbe
fcmovnu
rclb
movl
mov
sub
das
and
rol
mov
inc
sbb
ret
clc
lret
es
adc
cmp
ds
mov
push
adc
cltd
fstp
fwait
int3
loopne
sbb
stos
adc
test
pop
test
push
mov
fs
fistpll
int3
out
mov
scas
out
insb
sbb
add
adc
and
adc
aas
or
dec
lds
bnd
inc
sqrtps
andl
int
and
adc
std
push
test
xlat
xor
aas
ret
inc
out
or
xlat
shlb
mov
mov
push
cltd
inc
push
addr16
fdivrl
mov
sbb
loope
ret
xchg
popf
es
sahf
mov
clc
mov
jp
pop
lods
fs
cmp
and
mov
sub
pusha
ret
push
fs
fistps
and
mov
pushf
jno
mov
push
dec
and
mov
sbb
iret
mov
ds
lahf
rclb
je
jb
and
xchg
imul
sahf
add
lahf
mov
sbb
imul
pushf
or
pop
add
adc
mov
sub
roll
sub
pusha
pop
out
mov
les
das
in
push
test
incb
jp
incl
sbb
movsb
orl
cwtl
mov
mov
xor
sbb
and
xchg
pop
ret
push
fwait
leave
inc
jle
jle
mov
scas
xchg
jl
push
js
pop
fs
das
js
mov
cmp
pop
mov
push
fiadds
sub
jb
pop
and
lret
jae
pop
scas
or
ret
js
sub
ficoml
sahf
push
ja
mov
sub
aaa
cmp
imul
xor
xchg
call
mov
enter
push
mov
ficoms
cld
jmp
sub
repz
test
inc
ret
leave
jmp
pushf
fcom
lods
ret
lock
xchg
xor
mov
lods
jge
mov
movsl
push
rol
xchg
mov
cli
and
ret
aaa
jle
jae
ljmp
bound
sub
inc
mov
das
mov
jp
push
push
test
adc
in
pop
je
addb
sbbb
push
fmuls
inc
incb
add
pusha
je
je
rorb
call
mov
and
loop
stos
sarb
into
call
aaa
leave
jp
negb
fsub
inc
je
and
fmuls
dec
nop
shrb
inc
sub
cmovl
popa
pop
std
or
imul
or
dec
push
adc
rolb
lods
and
cli
xor
xor
sbb
jle
fisttps
jge
sbb
mov
sub
imul
jl
xchg
xor
lcall
mov
lret
js
clc
jae
pop
mov
adc
imul
scas
cmc
pushf
xor
lods
aam
jge
mov
mov
scas
lcall
xchg
push
cmp
push
or
cmc
push
push
dec
xor
ds
mov
adc
lds
push
add
mov
jne
mov
sub
push
cld
xchg
bound
lret
mov
mov
xchg
fistl
cmp
cmp
hlt
jns
xchg
ljmp
pop
dec
fs
mov
sub
xchg
pop
fiadds
xor
popf
mov
xchg
sub
push
rcll
movb
daa
pop
xor
pand
pop
out
popf
scas
push
rorl
mov
pop
inc
mov
mov
mov
call
or
imul
decb
fisubl
pop
mov
push
test
lock
iret
psubusb
inc
xor
clc
nop
insb
popa
jge
mov
pop
sub
mov
in
adc
and
xor
imull
mov
and
dec
je
mov
imul
jecxz
mov
es
push
pop
mov
adc
inc
aas
pop
jle
jns
cltd
ljmp
mov
sbb
mov
xchg
sbb
xchg
mov
ds
into
sbb
clc
movsl
mov
fwait
xchg
test
imul
lea
dec
cwtl
mov
adc
lret
mov
pusha
push
cmp
sub
stos
lds
and
xchg
jno
testl
mov
xchg
cmp
stos
mov
adc
fs
lcall
std
ret
xor
add
test
incb
inc
jmp
cltd
test
or
mov
cli
and
xchg
add
stc
xchg
dec
mov
and
mov
std
push
loop
lcall
mov
pop
in
int3
pop
mov
cli
fdivs
push
jb
fistpl
mov
pop
clc
inc
mov
and
test
or
sub
jl
sbb
cmp
cltd
xchg
mov
inc
dec
faddl
rorb
mov
and
mov
mov
dec
iret
fsubrp
ja
push
out
and
sbb
imul
or
scas
pop
cmp
push
andl
cltd
lcall
sub
adc
mov
pusha
icebp
cltd
orl
lea
pusha
jo
push
roll
popf
inc
adc
jne
adc
loopne
add
push
mov
cltd
xor
and
dec
es
pop
xor
out
pop
mov
push
push
ret
test
sbb
cltd
pop
and
adc
outsb
xor
adc
xor
or
test
inc
jae
inc
xchg
add
enter
jne
in
push
out
in
lcall
sbb
stc
add
adc
jb
cmp
push
xchg
popl
movsl
xor
cmp
in
repz
inc
sub
mov
jnp
hlt
outsb
mov
mov
inc
mov
fisubs
ljmp
or
cmpsb
dec
mov
mov
lret
add
xlat
xchg
dec
mov
arpl
icebp
ss
sbb
mov
rcrl
scas
xchg
icebp
lahf
fidivs
jmp
jle
xor
mov
mov
dec
lahf
aas
ret
pusha
mov
sarb
inc
enter
inc
lods
movsb
push
xor
dec
test
sbb
stos
mov
cmp
or
fdivrs
jmp
fcompl
jne
cmp
js
mov
test
mov
mov
fisubrl
jg
lods
adc
or
ss
sbb
pop
arpl
fnstsw
outsb
in
lods
xchg
dec
in
inc
sbb
in
cld
mov
in
fsubr
sub
ret
pop
push
in
cmp
sbb
mov
repz
sbb
push
repnz
lret
fisubrs
int
mov
pop
mov
and
pushf
pop
or
sbb
lea
push
xlat
xchg
and
xchg
xor
xor
daa
ret
ds
and
push
repz
pop
loope
pop
cmpsb
sti
adc
jp
adc
rcrb
addr16
shll
frstor
mov
insb
loop
popf
icebp
leave
ljmp
idivb
cmpsb
scas
test
das
sub
fnstsw
mov
lcall
cld
std
sarl
mov
test
bound
std
nopl
into
lea
icebp
in
cmp
xchg
xor
jnp
int
sahf
jp
test
cmp
test
ss
ljmp
mov
jle
in
ljmp
in
xor
push
shrl
fs
movsl
pop
outsb
ret
dec
test
mov
stos
int
push
add
push
ljmp
push
sbb
in
sub
push
mov
rcrl
in
or
mov
xor
mov
pop
xchg
jmp
cld
mov
sbb
pop
mov
aaa
xchg
outsl
mov
fildl
pop
cwtl
stos
leave
ficomps
testl
jnp
stc
scas
stos
out
xchg
test
xchg
push
enter
movsl
repnz
mov
es
mov
sbb
adc
scas
repz
enter
jmp
stos
adc
cmp
add
sub
jns
call
out
mov
jno
arpl
sbb
stos
mov
mov
int3
movsl
cmp
inc
pop
test
xor
pushf
inc
push
adc
mov
stc
lock
ficoml
and
mov
pop
ds
sti
in
jle
xor
inc
mov
mov
inc
push
xchg
aas
dec
jmp
int
jae
not
dec
push
scas
js
mov
gs
or
and
movb
jo
loopne
jecxz
mov
push
sarb
add
lret
ljmp
data16
jge
adc
xlat
sub
or
vminpd
insl
out
pop
cmc
mov
jp
lcallw
mov
xchg
xor
test
aam
addl
sarb
push
or
mov
ja
sub
nop
into
shlb
and
mov
pop
scas
jb
and
pop
adc
loope
aaa
add
test
mov
dec
sub
enter
xor
mov
nop
sahf
movsl
jne
outsb
jo
bound
stc
push
mov
pop
xchg
lea
pushf
lret
pushf
ret
imulb
sbb
jle
mov
mov
or
mov
push
and
mov
push
stos
test
sbb
stos
sub
pop
dec
fmull
mov
fs
jg
xor
adc
mov
jl
pop
sub
sti
mov
cmpsb
jae
ds
daa
dec
push
repz
ljmp
or
mov
iret
std
aad
hlt
push
mov
sub
daa
ret
sbb
pop
sub
adc
sub
fstpl
mov
cmp
and
xor
into
jp
inc
xchg
dec
mov
dec
into
test
xor
movaps
pop
jae
stos
call
and
adc
inc
bound
push
cs
lret
adc
xor
xorl
push
xchg
enter
jecxz
sbb
ja
pop
cmp
pop
dec
pop
and
dec
into
int
cmc
jp
add
ret
or
mov
jb
clc
test
inc
outsb
in
mov
add
or
pop
jle
pusha
push
push
xchg
xor
add
dec
mov
hlt
call
adc
mov
clc
mov
sbb
js
and
sub
jne
push
or
push
icebp
jp
jecxz
and
and
lret
or
mov
push
pop
ljmp
fwait
in
xchg
popf
cmp
sbb
addb
xor
shll
mov
pop
cmp
insl
bndstx
jmp
mov
lods
test
xor
jl
jp
jns
rclb
xor
addr16
cmp
mov
mov
and
mov
test
fimull
int
stos
icebp
dec
xchg
xchg
jns
dec
int3
mov
sti
pop
sbb
add
dec
int3
cli
xor
xacquire
pop
cmp
cmp
inc
push
or
inc
mov
sbb
mov
jne
lods
rcrb
jmp
imul
test
pop
sub
inc
push
lea
inc
pop
cmp
hlt
inc
fmul
cmc
cs
nop
sbbl
and
or
cmp
cs
pop
leave
mov
cwtl
push
call
mov
cmp
out
dec
push
decl
jns
mov
repz
int3
xchg
inc
mov
dec
sub
fildll
xchg
mov
int3
jbe
repnz
aaa
fwait
cmc
jp
mov
sbb
jo
mov
outsb
and
ds
adc
push
adc
sbb
pushf
pop
inc
in
lret
sbb
arpl
lea
sbb
cmc
xor
pop
push
aam
push
lock
mov
mov
cmpsl
xchg
pop
mov
pop
nop
shl
push
push
push
cmc
aas
nop
cltd
fidivrl
inc
call
or
adc
pop
into
repz
xchg
iret
push
dec
mov
popa
imul
pop
out
push
cld
pop
lret
mov
inc
mov
sahf
pop
test
dec
mov
sbb
pop
or
inc
imul
jecxz
cmp
out
fdivs
movsb
sbb
hlt
dec
mov
jnp
dec
fldenv
mov
push
ljmp
cli
mov
in
cs
mov
mov
dec
adc
pop
sbb
xchg
call
ja
out
mov
mov
in
pop
push
dec
adc
clc
xlat
xchg
mov
lret
movl
mov
jp
dec
dec
or
aaa
rol
inc
xchg
jg
add
sahf
outsl
add
mov
jb
xor
push
push
shrl
into
ret
sub
and
cwtl
dec
lahf
mov
roll
call
cmp
mov
pop
insl
push
imul
notl
jp
adc
cmpsl
jmp
nop
test
mov
adc
push
dec
mov
lret
call
insl
scas
in
scas
subl
sub
rolb
hlt
ljmp
insb
mov
pop
stc
js
mov
enter
xchg
adc
push
rcrl
push
jp
aaa
lock
scas
inc
iret
lahf
fs
or
outsb
mov
mov
dec
ss
out
jg
jecxz
jecxz
jnp
mov
push
cmp
into
repz
push
mov
out
jp
cmp
pop
inc
push
dec
lret
ds
test
outsb
mov
jmp
cmp
out
fildll
mov
adc
dec
outsl
jae
lea
icebp
jmp
int
mov
test
jg
out
push
repnz
movsb
push
inc
inc
xchg
outsl
mov
faddl
xchg
xchg
push
ficomps
and
clc
add
dec
dec
add
dec
sarb
out
cmp
iret
into
inc
cmp
push
rcll
roll
push
fdiv
jno
xor
movsl
push
mov
outsb
mov
inc
jl
dec
and
imul
dec
jns
add
cltd
clc
mov
fistl
rcrb
shrb
mov
test
mov
fmulp
clc
filds
xchg
mov
loopne
cmp
xlat
repnz
out
movsb
mov
iret
test
jmp
test
adc
dec
xchg
pushf
es
lahf
xor
cltd
popf
sbb
push
dec
ficomps
sub
les
sbb
xchg
xorl
js
frstor
dec
inc
mov
pusha
fadd
bound
add
daa
mov
jge
adc
popf
cmpsl
sbbl
jae
xchg
popa
push
lret
cmpsl
add
adcb
mov
pop
mov
shll
mov
scas
es
inc
inc
or
je
dec
jne
cltd
stos
andl
inc
or
pop
mov
pop
in
cmc
mov
lret
jl
ljmp
test
sbb
mov
sub
popa
mov
out
jg
cli
fldl
push
sub
notl
jae
or
fwait
sbb
lahf
dec
dec
inc
xchg
mov
ds
xor
sub
jl
hlt
add
xor
stc
lds
test
cmp
fwait
or
std
aas
dec
stc
jnp
jmp
ret
js
aad
pop
mov
add
push
ja
insl
push
or
xchg
push
adc
pop
imul
inc
sahf
xchg
lret
mov
jb
pop
data16
mov
pop
xor
lret
repz
out
ds
out
mov
xchg
loop
and
jmp
inc
cld
lods
cmp
push
mov
jno
inc
cmp
das
stc
xor
dec
dec
add
cmpsl
or
xchg
jg
scas
sbb
testl
lahf
arpl
mov
lcall
insb
mov
lcall
sub
cmpsb
mov
neg
mov
loope
arpl
dec
adc
test
dec
jno
sbb
loop
pop
insl
sub
sbb
inc
push
enter
jbe
fwait
mov
popa
xchg
mov
or
mov
cs
adc
jge
jge
ljmp
iret
pop
cmpsl
xorb
inc
jns
repz
adc
jmp
jl
pop
pop
lea
dec
fnstenv
xchg
sbbl
inc
data16
or
ljmp
test
fdivs
push
les
jno
adc
cmpsb
leave
mov
xor
mov
xor
lcall
mov
jge
std
dec
mov
mov
ficoms
jno
jb
scas
sarb
movsl
repnz
mov
mov
add
jmp
push
lcall
adc
cmpsb
add
stos
and
jmp
ljmp
adc
pusha
sbb
enter
sub
popf
scas
mov
test
popa
cmp
loop
iret
xchg
arpl
lret
adcb
enter
mov
lds
or
push
lods
mov
lret
setp
push
inc
jmp
pop
sub
faddl
pop
dec
xorb
mov
add
xor
es
sub
rcrl
mov
mov
add
inc
sub
dec
ja
jae
push
inc
fs
cli
or
lahf
sti
mov
sbb
pop
loope
xchg
cs
int
sahf
pop
sbb
mov
cmpl
rclb
add
push
inc
lods
test
cltd
and
mov
fildl
sub
dec
pop
cmpsb
ret
insb
jns
or
orl
fsubr
fstl
scas
cmpl
sbb
sub
int
pusha
out
jne
cmp
cmpsl
int3
push
rorb
lahf
nop
lock
fidivrl
aaa
cmc
arpl
pushf
sahf
in
roll
push
mov
inc
jle
ja
inc
jp
insb
jle
icebp
add
cld
sub
push
dec
push
aaa
movsb
cltd
mov
addr16
xlat
lods
cmc
fcoml
movsl
jo
xchg
lods
popf
mov
ss
push
mov
sahf
mov
pop
cld
std
popa
mov
jecxz
jg
gs
mov
cmp
mov
loop
xchg
dec
jecxz
jle
js
test
rep
mov
movzwl
adc
fldenv
inc
aas
jge
stos
or
xor
fsubr
adc
adc
xchg
cmp
mov
in
rcrb
mov
inc
cmp
pushf
imul
cmp
push
rorb
push
jp
dec
call
stos
pop
pusha
fwait
bound
cmp
mov
cmp
fidivs
rcrb
sub
and
sbb
xchg
test
sarb
fcoml
pop
mov
pop
xchg
cmp
mov
add
and
ficompl
ret
add
or
xlat
es
dec
cmpb
aaa
mov
sti
fistpll
add
or
xchg
or
add
fcoms
push
clc
pop
ds
jo
jle
cmp
jae
mov
push
add
sub
gs
mov
cmp
ja
xchg
mov
xchg
lret
jecxz
pop
dec
fbstp
jg
add
xchg
xchg
add
shll
je
in
add
xor
das
outsl
iret
fstpt
push
int3
xchg
mov
jmp
jmp
out
xor
icebp
dec
jg
mov
add
hlt
mov
sahf
orl
iret
sub
jg
inc
es
test
lds
xor
xor
bound
pusha
test
mov
fstpt
xchg
push
fdivrl
dec
inc
push
add
loope
insl
cld
clc
sbb
ds
shlb
jg
nop
daa
jl
lock
in
jg
pusha
data16
insb
lahf
jbe
scas
popa
and
cli
leave
das
cs
test
add
xlat
cmpsl
push
icebp
imul
pop
fs
xchg
pop
sbb
ret
daa
mov
mov
adc
cmp
inc
pusha
push
shld
jo
rclb
adc
out
ja
imul
dec
adc
push
add
inc
mov
pop
in
in
add
frstor
xor
push
ficoml
and
into
sti
and
inc
idivb
pushf
test
mov
push
and
mov
inc
jmp
xchg
out
imul
cmc
xchg
pop
inc
mov
popf
jo
sbb
icebp
adc
push
xchg
fiadds
adc
or
nop
jle
mov
xchg
int
test
leave
dec
fwait
cld
push
xchg
mov
push
dec
sbb
mov
inc
push
pop
push
shr
pop
and
sbb
add
clc
sub
dec
lods
and
pushf
mov
popa
mov
daa
xchg
jae
repnz
jo
mov
mov
icebp
push
in
imul
sub
cmp
cs
adc
dec
cmp
xor
cmp
ror
push
pop
jne
mov
inc
inc
cmpsb
dec
ds
inc
lret
ds
arpl
and
push
sbb
or
dec
fdivs
mov
lock
shlb
xor
cmpsl
push
pop
popf
lret
cmp
shr
and
mov
rcl
insl
mov
pop
repz
nop
sub
sub
test
clc
add
cmp
mov
jecxz
ltr
idiv
adcb
and
aaa
dec
jae
je
sbb
fildl
lcall
sub
stos
jmp
pop
ds
insl
xor
idivb
icebp
xor
xchg
push
xor
mov
inc
les
imul
jecxz
lret
int3
lcall
jmp
sahf
mov
dec
call
inc
lret
loope
dec
sub
push
cmp
out
out
sbb
jmp
jmp
repnz
inc
pushf
lahf
mov
xlat
mov
xchg
test
dec
roll
mov
inc
jp
push
inc
push
stc
mov
cmpsl
je
fadd
loope
lret
data16
mov
popa
sbb
push
std
rorl
pop
sub
lods
je
inc
addl
cmp
into
fisubrs
jle
adc
add
rcll
push
or
aam
push
cltd
xchg
adc
mov
out
sub
pop
mov
xchg
pop
sub
push
shrb
dec
pop
inc
push
xchg
out
aam
fstps
mov
addb
ret
lock
push
imul
mov
xor
xchg
adc
mov
ja
mov
jge
mov
nop
scas
mov
cmp
jb
xor
jmp
ds
popa
shlb
scas
dec
stc
adc
repz
loop
or
mov
jb
mov
sarb
in
cs
out
cmp
xchg
fs
addr16
push
jnp
ja
popf
cltd
aaa
inc
lahf
stos
pop
sub
ljmp
push
out
inc
call
lock
mov
mov
inc
push
cs
xor
adc
cli
mov
test
pop
jb
in
out
es
in
lahf
andl
pop
cmc
into
call
sub
cwtl
sbb
outsl
mov
les
or
cmp
iret
ds
bound
sbb
ljmp
pop
xor
pop
into
xchg
and
xchg
xchg
loop
sbb
ja
mov
data16
lahf
and
mov
jmp
jl
mov
dec
adc
sbb
stc
int
je
push
mov
mov
lahf
or
les
inc
add
ficomps
push
sbb
shll
add
push
sbb
fldenv
push
leave
sub
into
pushf
mov
cmp
aas
cld
sbb
mov
adc
mov
and
pop
icebp
rorb
push
sub
adc
add
push
sbb
pop
ret
or
lock
decb
fwait
and
cwtl
mov
out
dec
call
shlb
push
sub
outsl
fs
inc
outsb
lods
leave
stos
adc
pop
mov
arpl
fisubrs
xcrypt-cbc
cmpsl
xchg
inc
xchg
pop
stos
fcmovne
cmovs
add
out
in
push
push
push
ds
mov
push
insl
mov
scas
loope
fbld
mov
aas
sbb
mov
push
je
mov
xchg
out
jnp
mov
clc
mov
jns
pop
scas
xor
enter
test
jp
gs
xchg
test
in
dec
cwtl
into
popa
mulb
dec
test
add
loopne
cmp
jb
rorl
xor
mov
or
add
adc
dec
push
cmpsb
les
and
jle
hlt
jns
add
orl
mov
inc
push
cld
sbb
fs
leave
lcall
jnp
stos
mov
sti
cmpsb
fs
pop
enter
sub
das
jmp
jo
daa
inc
daa
or
es
jne
cmp
clc
cmc
mov
mov
rol
ljmp
or
jo
cltd
pop
sbb
fcmove
jecxz
mov
rolb
ret
add
stc
outsb
fadd
dec
xor
hlt
mov
add
xor
clc
int3
mov
out
fisubl
fiadds
xchg
shll
arpl
jo
push
rcll
aam
adc
mov
pop
or
xor
sub
das
pop
jecxz
int
aad
lahf
fnstcw
xor
sbb
push
inc
cmp
shrl
mov
push
lods
jge
std
and
mov
icebp
cmc
roll
xchg
or
add
sbb
jle
fidivrl
hlt
mov
bnd
cmpsb
adcb
jmp
movsl
mov
insb
push
push
daa
popa
push
test
dec
cmpl
subl
mov
mov
shl
xor
xor
sbb
add
xchg
adc
rorb
aad
or
adc
sti
jl
outsl
xchg
dec
aas
dec
inc
mov
pop
sub
sbb
jp
sbb
mov
daa
jne
jnp
cs
sbb
imul
add
es
add
sub
mov
mov
and
pop
adc
pop
and
cmp
sbb
mov
cli
pop
adcl
bound
pop
mov
xchg
or
push
add
shll
js
addr16
dec
int
xchg
add
cli
ret
pop
xlat
and
adc
jmp
sti
jl
pop
push
dec
sbb
xor
or
outsb
in
jo
loope
ret
xchg
jecxz
cmp
dec
pop
push
js
add
les
cld
mov
movsb
mov
test
in
mov
sti
ret
mov
sub
xor
lret
flds
mov
mov
mov
push
lock
imul
dec
pop
dec
rorb
push
xor
imul
insl
enter
xchg
aad
inc
push
mov
xchg
insl
mov
push
cmp
jge
pop
loopne
pop
js
pop
pop
adc
push
icebp
fwait
jecxz
sbb
jo
jne
jno
pop
or
movsb
or
pop
jmp
sbb
mov
sbb
or
mov
adc
inc
jl
dec
arpl
mov
out
mov
pop
adc
scas
sbb
scas
sub
mov
mov
movsb
out
xor
push
xor
sbb
adc
fimuls
add
cmpsl
out
mov
xchg
cmp
pop
movq
cld
dec
sbb
sub
call
adc
push
stos
mov
movsb
leave
rorl
ja
hlt
sbb
shl
push
mov
pusha
test
les
mov
or
lock
jo
imul
je
mov
or
jne
dec
jecxz
sub
icebp
in
mov
pop
pop
lds
gs
jb
in
cmp
nop
inc
xchg
cmpsb
jmp
bndldx
mov
lahf
mov
fcomp
add
fldt
int
int
mov
stos
xor
mov
xor
pop
nop
stos
jl
rclb
jb
insb
std
inc
decl
jns
sbb
xlat
pop
aam
jb
test
negb
pop
daa
rclb
test
ds
xor
mov
cmp
orl
mov
jb
frstor
clc
push
dec
je
in
fld1
int
iret
pop
or
xchg
cmp
mov
movsb
dec
or
cmpsb
stc
imul
push
pop
in
pop
pop
mov
loop
cmpl
and
xchg
and
mov
repnz
push
bound
in
jo
inc
xchg
into
rol
lea
mov
cmp
fstp
out
into
xchg
push
xrelease
lcall
lahf
mov
mov
adc
fstps
daa
in
aas
xchg
mov
jne
mov
valignq
or
cltd
mov
jl
test
pop
imul
jnp
jle
frstor
jp
sub
popf
add
add
add
cltd
xchg
xor
sub
mov
cltd
jo
frstor
movsl
sub
aaa
pop
mov
dec
ds
ja
stc
push
incl
add
rol
xor
test
out
jmp
out
lods
and
nop
sahf
in
mov
fwait
das
mov
xchg
iret
jge
fiaddl
test
hlt
dec
mov
cmp
fbld
sub
and
movsb
outsl
mov
dec
int3
dec
xor
xchg
push
insl
daa
jnp,pn
sub
dec
icebp
je
pop
fcom
lcall
arpl
or
hlt
push
sub
pusha
lahf
adc
mov
enter
jg
repnz
mov
enter
push
insl
inc
jae
xchg
movb
inc
mov
ret
cmp
jb
pop
dec
mov
mov
orl
lock
scas
adc
repz
call
push
xor
jns
jo
and
lcall
xor
sbb
jecxz
mov
ja
out
sbb
cmp
sub
inc
fcmovnb
int
adc
fisttpll
sub
mov
inc
xor
mov
jg
xor
sbb
loop
movsl
dec
xchg
push
dec
aad
inc
mov
mov
into
repz
aam
notl
xor
loope
jb
sbb
test
mov
dec
push
idivb
mov
fldt
dec
loopne
push
popf
dec
mov
mov
push
in
jge
pop
insl
fiaddl
cmp
lret
push
adc
xor
inc
inc
push
mov
stos
int
cmp
stc
cld
push
iret
fs
adc
das
es
and
jne
mov
mov
lds
out
sub
mov
loop
jl
subb
jne
push
mov
lahf
dec
ret
mov
ret
cltd
enter
and
and
push
sarb
repnz
stos
mov
pop
popf
or
lcall
lret
xchg
push
mov
push
xor
into
jns
in
sbb
sarl
leave
and
out
cmc
aaa
pop
add
xor
sbb
mov
hlt
cmp
js
fwait
sbb
cld
pop
fwait
mov
inc
orb
cld
pop
dec
subl
mov
jne
test
in
adc
movsb
jno
in
mov
pop
fbstp
add
push
push
mov
push
shr
std
pushf
insb
xchg
push
insb
xchg
enter
lret
add
adc
inc
push
shll
mov
dec
loop
out
cli
mulb
jge
pop
mov
sbb
adc
mov
xchg
mov
push
mov
lcall
xchg
test
or
mov
cli
sarb
out
cwtl
sub
das
ret
push
dec
push
cltd
popf
jo
add
xchg
jae
cmpsl
aas
ljmp
fldenv
bound
clc
and
insl
sbb
or
pop
adc
call
jecxz
adc
mov
mov
std
iret
pop
jno
dec
repz
leave
bound
ja
sbb
lods
test
push
pop
jo
scas
out
lds
mov
loop
repnz
add
pop
rolb
push
in
pushf
fmuls
lock
imul
sub
je
cmpsb
cld
inc
inc
push
fsubl
ret
mov
movsl
or
sti
int
cmpsl
sahf
pop
mov
outsb
ret
xor
inc
sbb
pushf
mov
hlt
or
pop
cmp
mov
and
jl
inc
jle
mov
adc
imulb
xchg
jne
das
ds
push
lret
daa
sahf
scas
mov
xlat
cli
test
sub
in
fnstsw
mov
add
push
cmp
sbb
testb
rclb
mov
out
pop
push
jmp
negb
push
test
xor
add
sub
add
adc
cltd
and
daa
sbb
insb
inc
pop
adc
mov
xlat
popa
mov
xor
mov
inc
and
xlat
push
notb
add
cmp
ja
jbe
mov
cmp
jnp
pop
dec
add
loop
add
jns
push
sti
pop
cmp
scas
jo
clc
jge
lahf
inc
push
lds
gs
aam
insl
cs
xchg
inc
xor
out
sub
pusha
subb
adcb
and
rcr
xchg
cmp
jnp
fdivs
or
adc
int
jecxz
fcoms
mov
adc
stos
cmp
adc
lea
cmp
push
test
mov
mov
xchg
sub
jecxz
loope
shl
pop
repnz
cld
mov
ret
ljmp
add
rcll
mov
mov
mov
xchg
jns
push
xor
hlt
mov
daa
shrl
insl
xchg
sbb
adc
inc
cmp
les
mov
jnp
cmp
inc
add
jno
dec
dec
sbbb
sbb
cli
push
xor
adc
popf
adc
or
jmp
cmpsl
xorl
jg
mov
and
lock
fldenv
inc
pop
inc
cmc
lods
jmp
ja
push
mov
daa
popa
pop
jge
fidivl
and
ret
imul
cs
movsb
mov
mov
inc
dec
bound
mov
pop
and
cmp
xchg
aam
outsb
aas
test
mov
stc
add
mov
sub
ret
fcmovu
flds
sbb
or
fs
and
lahf
daa
hlt
adc
cmp
pusha
mov
inc
ss
repnz
mov
popa
xor
in
dec
ret
test
clc
pop
pusha
xor
ljmp
addr16
adc
mov
mov
jmp
pusha
popf
and
mov
addl
jmp
mov
out
xchg
sub
aam
sbb
mov
xchg
push
xchg
aas
mov
push
out
jo
xchg
sbb
insl
jo
lea
mov
sbb
inc
xor
imul
push
push
mov
push
inc
mov
in
inc
sbb
inc
in
jle
shrb
movsb
inc
sub
arpl
nop
ljmp
push
push
rorb
in
sub
mov
mov
sar
lds
lods
or
aaa
mov
ret
mov
mov
fs
jno
in
adc
in
mov
mov
cmp
and
out
popa
pop
std
push
int
xlat
mov
sbb
js
adc
add
test
cmp
movsb
mov
dec
mov
aaa
stos
repz
imul
mov
xchg
add
ss
fiadds
sub
lods
cmpsl
cmc
fmuls
xchg
jnp
lahf
xchg
jl
mov
pop
jae
cltd
jnp
std
aas
in
fistpl
out
int
in
js
iret
cs
les
add
mov
xchg
dec
imul
pusha
adc
mov
out
shlb
pop
sbb
inc
mov
nop
int
xchg
jae
mov
std
adc
mov
mov
pop
incl
mov
push
mov
ss
cmp
or
test
pop
jl
dec
inc
sbb
shrl
aaa
fnstenv
test
xchg
lahf
mov
xchg
aas
mov
inc
mov
jnp
lods
loope
shl
xorb
sarb
popf
push
bound
lock
xchg
fdivs
dec
call
inc
push
or
push
into
jg
add
mov
and
cld
cwtl
pop
fcomps
outsb
sbb
mov
repz
dec
pop
filds
popa
adc
test
mov
push
push
mov
lods
dec
add
cmp
mov
rcll
popa
arpl
stos
mov
lahf
les
ret
lods
or
mov
pusha
jnp
adc
ja
fidivrl
inc
and
add
cmp
les
push
cli
mov
scas
cld
xor
pop
ret
lods
outsb
ret
in
je
lret
mov
cmp
rol
mov
push
xchg
out
aaa
mov
push
js
xor
leave
stc
xchg
cmc
pop
cmp
fildll
and
dec
push
jb
lds
or
lcall
push
or
xchg
iret
mov
mov
adc
jne
mov
mov
dec
in
lret
adc
sbb
iret
imul
int3
inc
icebp
dec
xor
int
test
mov
outsl
outsl
jg
nop
cmpsl
in
adc
loope
mov
xchg
adc
lods
lret
stc
xchg
decb
and
dec
and
stos
adc
xlat
rcl
add
mov
or
mov
stos
pop
jp
xor
jbe
jo
rolb
ss
das
jno
adc
mov
jb
cmc
aas
add
shlb
inc
xor
into
imul
ds
mov
or
andb
fstpl
mov
jmp
xchg
cmpsl
xor
lds
test
pop
add
pop
sbb
push
in
xchg
add
mov
loopne
or
mov
movsb
push
gs
std
mov
mov
mov
js
xchg
or
pop
adc
xchg
dec
je
or
mov
cltd
cld
or
cmp
xor
js
rolb
mov
cmp
rcll
mov
stos
imul
jge
scas
aam
scas
mov
fisttps
and
inc
jo
movb
fidivl
cmp
les
mov
shlb
mov
and
insl
insb
ja
rcl
cltd
das
add
jg
push
pop
imul
pop
adc
mov
shlb
aam
mov
outsl
pop
pusha
cltd
push
dec
in
mov
pop
mov
popa
mov
sub
insl
stc
push
pop
fwait
iret
or
in
ss
ljmp
push
mov
sbb
aad
bound
inc
nop
pusha
aaa
ror
mov
lahf
add
lock
lret
out
and
pop
jge
shll
outsl
jp
xchg
adc
or
lods
xchg
sub
idivb
jno
xchg
cmc
inc
ljmp
popa
push
sbb
mov
lahf
pusha
leave
jecxz
lret
xchg
cld
dec
mov
cld
test
pop
dec
xchg
push
adc
rorl
mov
mov
pop
data16
xchg
dec
clc
mov
rclb
loop
push
popf
fcomip
and
sbbl
jmp
dec
arpl
ret
in
jp
mov
jae
cmp
pop
ds
mov
jb
push
lcall
and
xlat
xchg
xchg
sub
pop
daa
andl
sub
cld
std
je
add
rcrb
movsb
scas
push
call
clc
shl
iret
shrb
fadds
sbb
rorb
stos
cmp
stc
cmp
mov
dec
movsb
or
adc
sub
notb
mov
mov
rclb
sahf
xor
adc
push
nop
add
out
dec
cmp
sbb
loop
mov
pop
gs
jae
pop
cld
mov
cmpsl
jge
push
sub
jbe
xor
and
scas
fwait
dec
punpckhdq
adc
lock
test
dec
add
mov
add
inc
inc
xchg
jnp
fbstp
mov
data16
dec
xchg
mov
notb
movsl
adc
out
mov
mov
ljmp
mov
in
inc
js
inc
and
add
cmpsl
cwtl
pop
jae
test
adc
wbinvd
dec
adc
lock
push
loopne
sahf
dec
imul
ret
int
sbb
inc
das
and
add
stos
dec
xchg
mov
mov
ds
mov
popf
sahf
jp
nop
lret
and
push
pop
jp
test
cld
stc
fs
loop
adc
adc
adc
out
push
or
rol
xorb
push
dec
pop
lea
mov
test
xchg
push
cmpsb
adc
dec
mov
mov
rorl
ret
insl
adc
xchg
jge
sub
xchg
inc
outsb
dec
fcompl
cmc
aad
xor
stos
push
lods
add
popfw
and
divl
pop
lods
mov
int3
cmpb
xchg
fcomp
shl
aad
xorl
pop
repz
xor
sbb
pusha
push
fildl
or
pop
loope
ljmp
cltd
mov
push
cmp
in
sbb
adc
and
xor
fldl
mov
js
dec
mov
push
test
mov
negl
out
gs
lods
mov
cmc
pop
lcall
in
mov
cmp
inc
push
pop
and
in
inc
int
xchg
fsubl
xor
mov
test
mov
into
pop
jne
nopl
dec
scas
inc
clc
outsb
in
jle
fbstp
sbb
pusha
jp
cli
mov
cltd
gs
sahf
je
mov
xchg
cmpsb
rorb
sub
in
push
sub
sub
push
lock
mov
insb
pop
pop
loopne
xchg
loopne
xor
push
outsb
or
in
pop
fcompl
inc
ja
add
pop
in
aas
pop
leave
add
pusha
jb
jecxz
sti
pop
nop
mov
xchg
xor
push
pop
cld
sub
ret
pop
inc
fwait
cs
popa
outsb
xchg
jae
xor
jp
aam
popa
xor
xorl
jno
rcrb
andl
bound
fldcw
xor
dec
outsl
negl
and
stc
std
and
pop
sahf
push
push
mov
xor
cmc
rcrl
jg
mov
imul
jno
pop
xlat
test
sbbb
xor
ljmp
leave
sbb
push
pslld
fucompp
lcall
fisubs
es
test
inc
lock
jne
mov
ljmp
or
lret
fidivrs
fisubrl
pop
pop
test
pop
out
xor
or
lcall
jmp
in
mov
jle
cli
lods
imul
jb
push
test
jno
mov
cs
dec
mov
pop
xchg
add
mov
mov
popf
cmp
data16
inc
fiaddl
jp
push
mov
xor
cmpsl
jne
mov
mov
mov
mov
data16
push
inc
cmp
add
enter
add
aaa
mulb
fiadds
push
jno
and
xlat
lock
jns
add
jge
sbb
scas
mov
mov
rclb
adc
sbb
sbb
in
mov
or
and
jl
xchg
cmc
lret
jge
cmp
jle
daa
movsl
jge
jne
in
mov
lods
mov
notl
xchg
adcl
ljmp
cmp
les
dec
std
and
xchg
inc
notb
jb
pusha
ja
jne
icebp
aaa
pshufw
mov
jae
enter
jnp
arpl
mov
push
or
mov
clc
cmp
jo
push
and
mov
fiaddl
aas
testl
sub
out
test
add
lods
xchg
es
scas
sbb
into
cmp
stos
sbb
xor
and
sbb
js
push
pushf
dec
add
in
dec
inc
daa
push
jl
xchg
mov
gs
fiadds
and
in
sahf
sub
pop
mov
lock
mov
jo
fldl
lock
sbb
xchg
mov
xchg
sub
mov
xchg
add
outsl
sbbb
jno
mov
adc
pop
mov
or
into
xor
aas
adc
inc
jg
rclb
loop
sahf
lret
lret
add
or
inc
and
stc
loopne
call
pop
pop
or
je
adc
pop
add
add
pushf
mull
dec
or
inc
push
dec
or
cmp
mov
jno
inc
dec
jb
sbb
loopne
das
hlt
jmp
nop
inc
push
mov
adc
jo
test
popl
or
dec
jmp
dec
rolb
stos
mov
pop
imul
push
or
test
scas
mov
push
loope
aam
std
mov
pop
pop
pop
sbb
fnstsw
sub
xchg
cmpsb
ret
mov
push
cmp
inc
es
rcrb
js
arpl
and
push
scas
xchg
call
jno
ret
or
adc
mov
nop
inc
xchg
aaa
inc
add
cmp
pop
faddl
rcll
test
mov
or
or
fistpl
ret
inc
or
add
dec
or
push
addr16
je
mov
jb
shrl
lcall
sahf
fcomps
cli
pop
sti
xchg
and
test
cltd
pop
in
mov
dec
pushl
lcall
out
insb
mov
shll
mov
into
jmp
mov
lret
dec
add
out
or
cli
jae
adc
leave
mov
aas
lea
daa
out
stos
or
dec
icebp
rorl
dec
rol
shlb
mov
aas
dec
sbb
arpl
push
inc
add
js
subb
insl
bound
ja
pop
fs
mov
iret
lahf
sub
loop
or
push
enter
cmp
xchg
push
push
in
pop
bound
ds
dec
push
std
pushf
pop
jb
or
out
inc
icebp
testb
push
xchg
push
fstpl
in
sti
ljmp
or
mov
cld
insl
out
insb
aas
sub
lods
pop
ret
add
sbb
jge
jge
pusha
inc
dec
and
xlat
and
jae
fmul
jae
outsb
mov
outsl
outsb
imul
adc
test
arpl
jle
xor
mov
incl
das
push
andb
loop
sbb
pop
push
push
dec
jb
xchg
mov
shrb
dec
fisttpl
imul
test
rcr
mov
shrl
pop
mov
sahf
mov
push
xchg
xor
push
pop
decb
mov
inc
stc
movsb
in
daa
push
imul
bound
rol
addr16
addb
or
jno
mov
mov
dec
dec
or
pop
gs
stos
cwtl
je
loopne
pop
dec
mov
ret
xchg
pop
dec
rcrl
and
mov
into
outsb
jne
out
pop
lds
decb
xor
idivb
dec
inc
dec
stos
mov
xor
mov
push
and
inc
je
fnstsw
lds
sub
lds
xchg
xchg
arpl
sbb
sbb
mov
lret
or
fs
fbstp
cmc
inc
mov
scas
dec
sbb
loope
fcomip
sarb
mov
xor
mov
xor
cmp
push
cs
jne
lret
lea
push
repnz
arpl
mov
in
scas
jb
cs
add
xchg
xabort
push
jmp
aam
pop
pop
jp
cmpsb
and
push
adc
cwtl
out
xor
push
loop
pop
pop
daa
fimull
xchg
xchg
sub
ret
cld
xchg
xor
roll
fwait
dec
in
inc
push
push
aaa
cmpb
dec
mov
push
fcomps
movsb
xor
adc
push
sbb
mov
mov
sub
jecxz
loop
lods
add
adc
std
imul
fistpll
movsb
sbb
fcomps
into
rol
call
xchg
mulb
cmp
stos
adc
and
ds
scas
mov
mov
xchg
cmp
xor
mov
mov
and
ja
movl
xchg
outsl
mov
stos
jb
xlat
sbb
mov
or
jecxz
cmp
xchg
sahf
nop
les
xchg
sub
std
je
adc
out
mov
mov
mov
dec
scas
inc
mov
push
mov
inc
test
add
add
xchg
outsb
pop
mov
jo
adc
and
movsl
jo
jbe
lahf
out
xor
mull
cmc
mov
push
je
insb
cmc
je
int3
in
dec
popa
xlat
xchg
cld
fldenv
leave
nop
push
movsb
inc
arpl
in
stos
fs
pop
pop
mov
int
loop
adc
adc
imul
mov
dec
and
adc
jbe
sbb
or
out
sbb
push
adc
lahf
jle
inc
imul
or
fwait
push
push
pop
mov
jp
mov
add
push
inc
and
clc
std
jnp
fistps
daa
mov
sub
xchg
sub
mov
test
pop
iret
pop
repz
inc
in
add
mov
dec
sti
cmpsl
mov
push
or
mov
les
aam
adc
jo
pop
adc
dec
lret
and
cmpsl
ret
xchg
mov
jne
nop
in
add
mov
jb
xchg
or
or
cmpsl
stos
xchg
mov
xchg
imul
ret
movsb
cmp
cmp
outsb
jle
adc
aad
jo
xor
add
xlat
adc
das
lea
js
daa
cmc
out
bound
dec
cmp
jmp
pushf
int
and
test
sbb
sbb
pusha
repnz
mov
stc
mov
pop
test
orb
or
pop
js
adc
push
cmp
in
and
out
mull
add
sbb
cli
aas
sub
sar
mov
fsubrl
mov
jmp
mov
xchg
int3
or
imul
adc
push
sarl
mov
das
stos
stos
sub
push
jne
iret
repz
jbe
pop
mov
ljmp
mov
gs
sub
mov
inc
and
iret
xchg
out
hlt
enter
fists
inc
dec
outsb
xchg
jg
enter
test
adc
mov
push
lahf
dec
rorb
jg
or
push
xchg
mov
aaa
cli
cltd
mov
mov
push
in
stos
adc
aas
sub
adc
mov
xchg
dec
sbb
enter
test
and
mov
dec
aam
mov
cmpsb
pop
lahf
inc
aaa
pusha
mov
scas
push
add
ds
aam
inc
lds
jno
in
push
mov
push
mov
mov
in
push
popa
ffree
lcall
ja
data16
push
sbb
shr
xchg
sbb
adc
push
das
mov
cltd
out
les
outsb
jo
aas
test
icebp
scas
cli
clc
sbb
jle
cmp
scas
pop
stc
subb
push
pop
push
jmp
in
inc
bnd
dec
xchg
shrb
mul
cmp
outsb
or
outsb
out
push
or
pop
in
pop
dec
mov
sub
jmp
dec
and
jecxz
sub
out
jnp
aam
loopne
xor
mov
les
inc
fiaddl
or
push
loop
insl
mov
or
push
ror
dec
jp
iret
xchg
aad
aam
ret
fadds
fwait
data16
rol
test
movsbl
in
jge
mov
sbb
mov
inc
imul
inc
insb
cmc
lret
insb
dec
enter
or
inc
add
push
jmp
arpl
stc
push
inc
pop
stos
hlt
test
jno
add
aam
sub
stos
inc
pushf
mov
jae
cli
mov
jge
add
mov
mov
push
mov
pop
add
dec
imul
cmp
das
xorl
cld
flds
dec
gs
dec
sti
cmc
xor
cmp
out
popa
ss
adc
filds
ret
dec
xchg
inc
jns
pop
rclb
into
pop
dec
or
test
adc
arpl
in
jne
rorl
mov
fdivrl
dec
lcall
in
cli
ljmp
les
sarb
inc
gs
nop
in
jae
xor
test
xchg
dec
cmp
jle
push
lret
lds
jmp
fimuls
out
jbe
inc
pop
mov
or
scas
inc
or
lods
sub
sub
pop
imul
mov
mov
dec
in
cli
xor
xchg
jle
mov
int3
aaa
pusha
cmp
adc
inc
inc
pop
sub
adc
sub
stc
pop
xor
fcmovbe
ja
cld
adc
xor
mov
jge
cmc
jno
int
or
or
aaa
adc
push
in
mov
cmp
xor
pusha
paddsw
ret
pushf
cld
cmpsb
mov
cmpsb
subl
sbb
mov
lea
cmc
mov
sbb
inc
mov
and
test
inc
push
dec
jbe
adc
divl
or
dec
dec
das
sbb
mov
mov
stos
test
and
push
pop
fs
mov
mov
inc
and
xor
lret
scas
and
sahf
outsl
adcl
out
sti
and
mov
fidivs
or
test
push
in
daa
jno
test
outsb
imul
cmpsl
sbb
lfs
push
adc
add
out
call
inc
mov
outsb
inc
push
loope
mov
and
aam
test
movsl
jmp
or
lahf
movb
dec
out
jl
cmp
add
jo
and
cmpsl
pop
jg
rcrb
inc
ror
int3
or
outsl
ret
mov
imul
stc
jmp
into
or
pop
cltd
dec
pop
inc
inc
lods
mov
inc
push
xchg
data16
mov
jmp
scas
dec
call
ljmp
enter
dec
adc
incl
mov
push
es
int
xor
insl
and
sbbb
push
push
cmc
xchg
xchg
hlt
aam
shl
mov
pushf
fwait
or
xchg
inc
ljmp
std
pop
mov
insb
movsb
pushw
lahf
add
xor
imul
sub
mov
fsubrs
and
lods
int3
xchg
jl
es
pop
call
sar
add
adc
adc
mov
repz
lods
ss
mov
outsl
subl
int
mov
inc
nop
mov
test
xchg
sbb
notl
fmuls
adc
ds
jno
jo
dec
mov
subl
sbb
mov
in
or
mov
sahf
movsl
push
outsl
xchg
mov
enter
xor
mov
out
xor
or
lds
add
or
lods
mov
or
push
addl
mov
push
pop
movsb
test
insb
lods
mov
mov
fwait
jo
pop
xchg
cmp
loope
dec
lcall
stos
push
sbb
lahf
pop
cwtd
pop
and
jmp
xchg
je
std
add
pusha
cltd
push
pop
cmp
or
aam
inc
push
movsb
pop
call
lahf
pusha
jle
xor
int
aam
mov
adc
xchg
dec
fwait
mov
push
jns
clc
es
es
or
call
ret
hlt
fxch
xor
leave
xchg
lret
mov
sbb
orl
add
leave
movsb
inc
jae
and
dec
sub
mov
fdivl
xchg
cmp
imul
addb
xchg
lcall
decb
sub
jb
or
in
pop
cld
nop
scas
mov
aam
leave
scas
add
dec
xchg
add
or
sbb
aaa
ss
in
mov
mov
int
push
jns
mov
and
push
pop
shrl
mov
fwait
pop
ds
je
sbb
xchg
les
dec
jne
mov
ds
fs
movsb
dec
test
sbb
adc
cmp
push
or
aas
fimuls
add
mov
push
das
push
push
inc
jecxz
imul
and
xchg
dec
jnp
lcall
insb
dec
inc
adc
jl
lret
jge
repnz
lds
stos
fwait
mov
sbb
push
jbe
adc
aaa
mov
popa
cmp
mov
pop
mov
mov
enter
sub
mov
cwtl
fnstsw
xor
mov
std
cmc
add
icebp
daa
xlat
mov
popa
xchg
in
dec
and
in
mov
imul
andb
int
scas
sbb
mov
add
cmp
push
xchg
sbb
test
xor
sub
shr
out
or
xchg
es
add
test
xor
adc
and
mov
cmp
dec
icebp
add
push
adc
daa
int3
cmpsb
out
jne
xchg
xchg
or
out
push
inc
imul
mov
mov
bound
jns
xor
mov
daa
ror
ret
out
addl
cmpsl
stc
movsl
loope
push
stos
jne
mov
xchg
pop
fcmove
daa
pop
mov
arpl
movl
movsl
movsl
pop
les
cmp
mov
cmp
loope
dec
pushf
ss
lds
add
aam
add
sbb
fwait
lea
or
mov
and
pusha
mov
ja
insl
sbb
ret
dec
dec
dec
lods
xor
pop
fdivrp
stc
pop
or
sbb
or
lock
cmovns
pop
ds
pop
fimull
push
loop
cld
cmp
pusha
xor
test
fwait
pop
outsl
adc
test
dec
jns
or
dec
test
lahf
push
jo
aad
iret
and
push
lcall
divb
stos
in
push
sub
int
cld
jp
jbe
adc
jnp
mov
xchg
add
cmp
cmp
jbe,pn
xchg
dec
stos
es
es
mov
inc
jne
xchg
in
sub
cmp
cmp
pop
test
loope
and
sub
daa
dec
sub
mov
jp
add
test
dec
pop
loopne
add
cmp
pop
adc
sbb
pop
mov
mov
cmp
les
sbb
call
es
daa
enter
add
and
inc
xor
sbb
mov
adc
data16
scas
pop
repz
adc
mov
popa
xchg
xor
arpl
cmp
push
dec
cmc
insl
in
fsubrs
sub
mov
aas
int
dec
mov
in
fs
ret
sbb
jno
push
adc
and
loope
xor
out
or
scas
ret
pop
ja
jecxz
and
add
fwait
sub
das
es
adc
rol
aaa
push
sti
jg
stos
adc
andb
cltd
and
pop
xchg
cmp
cmpsb
hlt
sahf
jbe
out
xchg
inc
sbbl
notb
xchg
adc
sub
movsl
xchg
jns
icebp
xchg
movsb
mov
mov
xchg
mov
xor
cld
popa
add
mov
inc
push
and
lods
bound
and
bound
ljmp
shrl
or
ja
push
test
mov
jg
cmpsb
inc
cld
daa
add
js
cmp
push
dec
or
adc
mov
cmp
fwait
popa
jnp
divb
cmpsb
mov
jb
sti
xchg
sti
jle
daa
mov
jl
das
add
cmp
fwait
xchg
pushf
int3
fcmovu
sbb
rorb
orl
ror
add
inc
pop
push
lahf
push
inc
jp
dec
push
push
xor
fimull
sti
or
in
dec
data16
lods
dec
es
in
mov
movsl
movhps
mov
mov
xor
or
mov
jae
test
test
mov
push
dec
mov
cmpsb
cli
xchg
mov
or
aaa
sub
sub
mov
insb
pop
stos
shll
popa
pop
sahf
and
fldt
loopne
cmp
or
cmpsl
ror
movl
push
cld
out
add
xor
ss
mov
mov
lds
cmpsb
jb
repz
jle
in
pop
mov
or
jmp
andl
sub
pusha
adc
jo
leave
pusha
mov
test
push
sahf
and
sub
cmc
inc
sbb
xchg
dec
adc
cmp
int
sarb
cmpl
pusha
mov
es
cld
sti
inc
xor
inc
xchg
cmp
pop
sub
mov
fs
push
sbb
gs
cmp
push
adc
or
cmp
inc
add
pop
inc
mov
bound
outsb
movsl
add
add
and
ss
rorb
mov
es
add
in
pop
pop
arpl
fildl
dec
xchg
dec
outsl
sub
out
push
cld
xchg
cmp
ss
dec
jge
arpl
xor
cmpsb
into
lods
xor
sub
jle
sub
pusha
fcmovnu
xchg
adc
cs
mov
daa
movsl
outsb
mov
stos
scas
xor
popa
and
jge
sahf
sub
insb
xchg
sub
xor
add
add
mov
push
jle
ljmp
jl
pop
mov
fsubrl
add
inc
or
push
stc
sbb
jmp
xchg
ret
out
inc
loopne
mov
adc
bound
call
xchg
cltd
js
lock
lcall
mov
jo
movsb
pop
bound
sti
adc
ds
mov
js
and
mov
push
flds
std
test
jmp
fcompl
or
dec
jle
mov
rorb
mov
mov
push
loope
shll
add
add
popa
jb
iret
shll
jns
add
in
jmp
or
mov
xlat
push
sbb
fsubrl
or
stos
lea
divl
push
scas
neg
adc
dec
lret
jno
pushf
cmpsb
testl
jbe
inc
sbb
add
cmp
insb
insl
add
filds
iret
add
jb
pushf
inc
sbb
nop
pop
lock
push
dec
add
dec
pop
fists
sbb
stc
lahf
adc
ficomps
and
cmp
insb
cmp
jnp
fdivrl
sub
ss
stos
mov
in
sbb
sar
and
cld
bound
sub
call
and
or
jbe
mov
mov
repz
mov
pop
push
cmc
testb
lods
mov
aam
aaa
mov
inc
xchg
into
repnz
lock
lahf
xor
in
xor
out
js
cmp
pop
push
mov
insb
lds
mov
mov
mov
xchg
push
adc
adc
testl
out
lods
lahf
fsubrl
dec
push
cmp
pop
or
out
xchg
hlt
jo
pushf
inc
adc
sub
mov
push
pop
cmp
je
imul
dec
bound
mov
ja
cmp
aad
dec
or
pop
mov
loop
lock
fsubs
sbb
push
ljmp
push
lcall
lds
adc
jbe
jbe
daa
dec
xor
push
into
mov
mov
pop
daa
stos
or
pop
lret
xchg
test
jnp
insl
popa
add
jae
aaa
sub
insl
sbb
icebp
stos
frstor
jp
fisubs
add
outsb
push
cmp
dec
scas
or
pop
iret
pushf
push
test
jg
clc
jae
jle
inc
sbb
xchg
adc
push
xchg
mov
stos
cmp
xorb
mov
lods
add
popa
xchg
pop
andl
lds
jno
or
dec
jns
adc
add
out
pop
inc
add
sub
out
mov
int3
mov
mov
imul
cmp
xchg
mov
stos
bound
loopne
sahf
andb
iret
call
sbb
and
lea
cmc
adc
pop
clc
xlat
push
add
repz
inc
in
roll
call
adc
stos
sbb
test
out
jl
xchg
int3
push
sub
ljmp
push
rorb
adc
ja
xchg
mov
cmp
stc
pop
aad
fistpl
lcall
xchg
cmp
sbb
sbb
aas
cltd
xchg
pop
xchg
std
push
ret
ljmp
aam
sbb
pop
cmp
ss
push
sti
mov
cltd
mov
stc
xor
into
in
ss
fmuls
xor
push
sti
mov
ljmp
fcomps
pop
ljmp
shrb
inc
sbb
mov
imul
and
sarb
mov
hlt
mov
xchg
mov
sub
mov
mov
dec
je
push
dec
fwait
js
mov
jmp
mov
mov
ficomps
aas
imul
sub
dec
mov
and
adc
xchg
decl
inc
in
xor
xlat
jns
sbb
aaa
hlt
les
je
mov
movsb
aaa
cmp
dec
mov
dec
arpl
clc
add
dec
pushf
test
in
pushf
xor
xchg
cli
add
cltd
sub
or
lea
out
or
dec
or
or
jge
adc
adc
jnp
loope
jno
mov
notb
clc
xchg
insb
cmp
les
pop
push
js
hlt
fs
or
pop
repnz
movsl
ljmp
jge
or
push
inc
cmp
jg
lea
push
dec
mov
lahf
divb
adc
bound
lock
das
cmp
mov
out
push
sbbl
mov
cltd
insl
push
push
mov
inc
inc
es
ret
jb
xchg
lcall
mov
rcrl
std
push
addr16
outsl
adc
push
ss
cmp
mov
xchg
lock
push
jnp
add
inc
sbb
orb
scas
fiadds
mov
int3
dec
aas
jl
sub
cmp
ljmp
xor
inc
lret
cltd
je
into
cmp
inc
xor
jno
jb
int3
imul
cli
or
mov
ljmp
data16
outsl
ss
mov
mov
cmp
adc
xor
sbb
and
movsl
mov
popf
lret
xchg
xor
jecxz
hlt
shrb
xor
xchg
xchg
push
xchg
je
pop
inc
mov
cmp
add
inc
jg
mov
xorl
repnz
in
fidivrs
add
push
addr16
mov
dec
je
sbb
add
bound
ljmp
sahf
es
add
int3
jmp
cmp
add
loop
bound
icebp
and
in
loop
sti
dec
in
sub
icebp
pushf
inc
mov
dec
xor
push
pop
and
ja
pop
mov
mov
mov
pop
aad
sub
loop
pop
mov
outsl
ret
popa
sub
push
ja
sbb
ljmp
push
and
sub
pop
aam
les
mov
adc
sbb
out
xlat
pop
and
xchg
ds
sbb
and
adc
jp
and
dec
add
jecxz
mov
jbe
pop
out
mov
pop
stos
cltd
arpl
dec
sub
or
mov
lret
faddl
mov
mov
xchg
inc
xor
mov
mov
mov
mov
pusha
and
push
cld
xchg
xor
and
inc
jo
push
aas
les
jmp
pop
ljmp
mov
mov
cmp
scas
fidivrl
scas
fldl
leave
cmc
fs
pop
mov
scas
adc
jle
pop
test
sti
xchg
mov
mov
mov
dec
inc
mov
aam
adc
xor
mov
jnp
bound
test
mov
or
adc
dec
repz
jo
inc
mov
add
sub
fwait
jmp
sbb
xchg
daa
cwtl
lret
lds
int
insl
xchg
fstps
sahf
mov
sbb
sub
add
sub
push
sbb
leave
cmpsb
popf
popf
dec
adc
and
ret
int3
lahf
lock
test
cmp
mov
jns
xchg
ds
and
push
test
divb
icebp
or
jbe
dec
pop
pushf
pushf
mov
es
je
inc
xchg
in
shr
dec
xor
iret
ret
fs
add
xor
inc
int3
lds
mov
imul
cmpsb
push
push
test
sbb
xchg
nop
or
inc
test
out
in
sbb
sbb
fldt
or
cmp
jns
adc
lahf
mov
or
mov
xchg
mov
mov
imul
loopne
pop
lret
pop
mov
or
jl
fiadds
cmp
cli
ss
push
fwait
jns
stc
sub
nop
cli
inc
mov
inc
jb
or
jo
inc
cltd
mov
push
mov
dec
sub
mov
popf
std
aaa
pop
pop
loop
std
mov
lds
int3
leave
dec
adc
lock
movsb
xor
xchg
or
leave
or
cmc
repz
jmp
pop
pop
fdivr
dec
add
jp
loope
sub
ss
mov
aaa
cld
bound
mov
movsb
cld
jmp
stos
jo
loop
pop
jle
repnz
adc
sbb
cmp
adc
mov
mov
xchg
mov
imul
dec
jg
mov
mov
pop
mov
mov
dec
gs
add
ret
bound
adcb
xchg
leave
fdivl
or
imull
test
rorb
rorb
sub
insl
jno
std
pop
sbb
sub
and
cmp
push
xorl
pop
push
fdiv
lods
lahf
gs
cwtl
imul
and
pop
iret
adc
sbb
sbb
xor
cmc
sub
jle
dec
imul
mov
mov
inc
dec
xlat
mov
mov
xor
and
dec
pop
push
lcall
pop
sbb
jle
dec
cbtw
add
xor
jbe
data16
mov
pusha
or
sbb
in
pop
adc
stos
popa
int3
xchg
pop
jle
adc
stos
sahf
subb
std
cltd
aam
or
cmc
xor
aas
adcl
lds
imul
sbb
push
ret
push
test
clc
inc
das
test
pop
lods
jne
in
or
xchg
imul
stos
out
push
mov
xchg
or
push
inc
xor
fdivs
into
ret
pushl
imul
ljmp
loope
adc
mov
push
pop
mov
scas
fnstsw
scas
dec
negl
insb
aam
cltd
sub
in
inc
sub
clc
sbb
cmp
ja
movsl
pop
cmp
jnp
xchg
in
sub
fdivr
mov
add
or
hlt
mov
lea
ss
stos
sbb
mov
pop
dec
or
lods
fsubl
jae
arpl
aam
in
lea
cmp
mov
add
sti
xchg
jb
mov
mov
adc
or
sbb
xchg
jnp
inc
lock
and
push
adc
cwtl
and
clc
call
roll
lods
fcmovnbe
add
mov
mov
and
movsb
sbb
call
lret
xchg
lret
jo
sub
mov
aaa
sub
sbb
mov
enter
mov
dec
loop
lds
pop
lea
daa
or
bound
cmp
repz
inc
mov
xor
sub
mov
adc
xchg
push
xorb
nop
stos
mov
in
adc
dec
test
cmp
sbb
dec
push
adc
xor
js
pop
xchg
test
pop
sbb
jae
add
adcl
mov
cld
mov
aas
xchg
lret
mov
mov
lock
sarb
xchg
or
imul
xorl
mov
inc
fsubp
ljmp
inc
stos
mov
lahf
cld
cmp
push
pop
xchg
repnz
add
sub
insb
pop
lods
faddl
mov
in
out
dec
jmp
in
mov
dec
popf
test
and
fs
sahf
loop
dec
adc
xchg
mov
pop
or
data16
mov
ds
xor
enter
cmc
int3
dec
push
negb
cltd
pop
add
ret
ret
rcll
inc
outsb
or
cmp
je
pusha
fisubl
iret
sbb
in
push
jl
mov
jmp
add
sbb
adc
mov
push
dec
mov
pop
shrb
out
and
pop
mov
xlat
push
mov
xchg
jmp
orb
test
aaa
xchg
xor
sarb
adc
decb
inc
pop
arpl
xlat
test
jne
jo
or
push
mov
pop
pushf
aaa
or
std
cs
xchg
int
add
xchg
jp
mov
add
in
cmp
in
sti
jno
ja
xor
out
and
cld
insb
jnp
mov
or
dec
mov
pop
push
jmp
in
setae
rcrb
jne
test
dec
scas
add
xor
sub
shrb
out
ret
sysenter
mov
adc
aas
dec
imul
lahf
push
andl
arpl
mov
and
loop
mov
lahf
inc
xchg
incb
stc
xlat
clc
addr16
jge
dec
xchg
nop
add
orl
push
test
das
addb
pushf
mov
xor
rclb
popa
cwtl
or
jb
mov
or
fisubrl
adc
shll
cmp
movsl
cmp
jo
or
in
mov
xor
xor
mov
addr16
in
test
imul
neg
out
shlb
and
push
shlb
pop
ret
fwait
shl
and
xor
lcall
stos
push
dec
cwtl
cli
stos
ds
mov
mov
or
lock
and
fld
out
jno
daa
adc
stos
fwait
rclb
sbb
inc
push
icebp
xchg
fcmovnu
out
mov
stos
std
je
or
addb
sub
xchg
ljmp
push
pushf
or
xchg
je
or
add
or
pop
and
es
fdivrl
gs
rclb
and
cmp
jp
pop
imul
xor
cwtl
andl
pop
mov
xchg
pop
fucomip
adc
mov
jp
shlb
addb
test
xor
outsb
loope
xlat
or
cltd
hlt
jge
imul
in
xchg
cmpsl
jecxz
test
sub
cwtl
adc
cltd
mov
mov
xchg
aaa
xor
add
jb
cmp
mov
push
loope
repnz
mov
adc
ljmp
aam
cli
loop
ret
push
cmp
push
adc
pop
adc
jae
aaa
dec
dec
mov
in
mov
sbb
fs
or
andl
push
daa
jo,pn
cmp
sub
sbb
push
jmp
sarb
and
std
aam
lret
adcl
mov
loopne
lods
mov
sub
cmp
and
jl
dec
ds
xchg
rclb
jb
mov
push
dec
arpl
xlat
adc
sbb
cmc
daa
push
dec
outsl
pop
xchg
lods
mov
sbb
sub
lcall
lods
xlat
mov
xchg
mov
and
addl
fstl
mov
pop
clc
pushf
test
or
rorb
in
incl
sub
rolb
pop
mov
sahf
add
mov
cltd
push
rclb
dec
lds
lds
fs
add
mov
in
dec
dec
es
into
jb
lods
cli
push
je
jns
mov
fimull
fmuls
push
lcall
xchg
fcmovnb
loopne
cmpsb
fdivrs
popf
xchg
xchg
and
mov
xor
data16
lret
out
push
sbb
push
inc
in
insl
fwait
shrw
mov
aad
adc
mov
nop
into
inc
or
jbe
mov
js
outsl
int
jbe
loope
mov
dec
lods
sbb
xor
ret
mov
cmp
mov
outsl
and
cmpsl
loope
dec
mov
jbe
int
shrb
jecxz
and
insb
jle
push
clc
inc
test
out
pop
jmp
test
in
bound
dec
jmp
pop
xor
adc
icebp
es
out
mov
pop
stos
insl
dec
ret
xlat
rcrb
push
pop
and
fsts
jg
data16
mov
in
cmc
rcrl
sbb
dec
pop
xor
cmp
stc
movsb
pop
mov
and
inc
sbb
shlb
hlt
and
mov
mov
lods
stos
push
jnp
push
fnsave
and
out
stos
push
loopne
mov
incb
and
fadd
push
jbe
je
jae
sti
mov
ficomps
mov
pop
or
adc
inc
xlat
mov
sti
add
icebp
mov
push
dec
xchg
pop
xchg
xor
call
push
push
pop
popf
scas
fdivr
xchg
mov
cmp
movsb
jae
lahf
xor
xor
testb
js
cmpsb
nop
rorb
dec
jo
adc
popf
mov
inc
imul
nop/reserved
and
jo
jl
sbb
push
cltd
nop
jo
shlb
add
mov
nop
or
incl
cmp
pop
lea
adc
jns
or
xor
push
popa
pop
push
xor
inc
xchg
sarl
sarl
xor
hlt
cmpsb
and
or
out
cmp
dec
mov
push
es
push
popf
mov
mov
inc
movsl
incl
cmp
push
mov
pusha
sub
push
cmc
jbe
cs
popa
jnp
dec
adc
add
dec
fucomip
fwait
or
subb
and
in
imul
cmp
insb
jbe
xchg
add
stc
push
std
icebp
out
xchg
data16
pop
out
mov
aaa
gs
nop
mov
mov
repz
imul
repnz
dec
adc
outsb
insb
gs
jp
test
cmpsb
dec
fistpll
mov
mov
loopne
les
sahf
ja
inc
cmpsb
call
sahf
out
ret
push
push
or
adc
push
jp
mov
negl
aas
sti
jle
out
adc
jns
sahf
push
push
or
gs
cmp
mov
sub
push
sbb
test
cltd
insl
or
cmpsl
div
mov
addl
jno
push
jb
and
xor
mov
scas
mov
outsl
test
mov
mov
inc
fidivrs
fisubrs
popa
jmp
xor
jl
xchg
inc
sbb
jg
inc
xchg
lock
daa
in
pop
mov
inc
das
jge
stc
stc
dec
fmulp
cwtl
xchg
insb
xlat
add
out
outsb
shll
sbb
leave
mov
rorl
movsb
xchg
or
cmp
lahf
shlb
test
jo
mov
inc
fisubs
mov
cmp
inc
or
in
sbb
and
adc
lods
shll
int3
movsb
dec
int
and
or
xchg
sub
inc
mov
cli
mov
xchg
int
jge
arpl
xchg
iret
jp
inc
push
jg
sti
dec
fwait
push
outsl
jle
dec
inc
push
mov
and
and
testl
push
push
jnp
ljmp
daa
pop
fistps
push
or
stc
cld
push
pusha
leave
cmp
je
loop
shll
push
mov
cwtl
loopne
xor
lods
sarb
mov
aad
and
sub
push
rcll
std
popf
das
cmpsb
int3
jle
leave
jle
sub
or
testl
imul
lods
sub
mov
mov
dec
bound
dec
leave
xor
rclb
jno
in
ja
or
sub
cld
mov
pop
loope
fisttpll
mov
iret
mov
pusha
jbe
je
lods
in
push
mov
js
add
xor
sub
dec
pop
sbb
push
add
roll
mov
leave
and
jne
cmp
mov
repz
jne
mov
sub
and
mov
or
test
imul
inc
in
add
scas
jp
mov
xor
inc
movsl
cmpsl
stos
mov
ret
sub
xchg
lods
fwait
or
add
pop
lahf
sbb
sub
push
mov
push
stc
pop
xchg
loope
lret
mov
jecxz
push
mov
cmp
pop
push
stos
data16
mov
push
imul
sub
popa
fdivl
lret
sub
pusha
test
jo
push
insb
mov
in
insb
and
scas
test
xchg
mov
sbbb
cmp
fidivl
aad
add
iret
push
dec
push
push
adc
jnp
lods
out
mov
push
shl
xchg
inc
pop
push
pop
xchg
ror
dec
inc
mov
bound
icebp
adc
pushf
cmp
push
sarl
mov
mov
inc
inc
int
or
mov
out
or
test
inc
call
in
int3
iret
add
add
push
pop
leave
push
push
fsubl
jmp
sbb
pop
inc
add
mov
out
xor
jmp
pop
xchg
cmp
add
xchg
push
and
mov
jae
mov
sub
icebp
cltd
mov
imul
stos
fdivrs
adc
int
sbbb
cwtl
testl
inc
pop
mov
sarb
loope
push
lock
pop
jecxz
shll
inc
jae
xchg
jb
mov
xor
inc
dec
xor
fistpll
fs
jecxz
mov
out
stos
xchg
dec
ja
inc
xor
mov
xchg
mov
cmp
jle
cmp
imul
cmp
cltd
cmp
std
sahf
ss
fdivrs
in
pop
iret
int
xchg
call
sub
cmp
in
add
testl
stc
lods
int
mov
sbb
shlb
outsl
loope
xor
jbe
movsb
icebp
xchg
stc
xlat
test
add
outsl
mov
sub
mov
pop
jp
imulb
lock
jo
pop
adc
xchg
mov
in
lahf
enter
dec
fiaddl
std
pop
or
sbb
sub
addr16
xchg
jne
dec
into
mov
lcall
sbb
je
sahf
xor
adc
xor
inc
lcall
outsb
pop
leave
push
insl
and
mov
stos
lock
mov
ret
push
sub
cwtl
jecxz
mov
movb
pop
scas
sbb
inc
pop
pop
lock
int
shlb
sbb
jne
mov
jo
enter
cmpb
cmp
out
out
mov
test
dec
push
pop
out
adc
out
arpl
inc
push
icebp
cmp
lods
push
cmpl
push
cmp
mov
insl
nop
jmp
ret
mulb
push
in
lea
inc
sarl
sti
push
in
jge
dec
push
cmp
jmp
xor
mov
mov
push
ret
pop
mov
dec
roll
jne
push
xor
pop
mov
mov
adc
insb
mov
and
adc
xorb
popa
roll
fisubrl
cmp
mov
shlb
fwait
int
lea
xor
movsl
jbe
out
sub
xlat
mov
dec
loope
in
lods
lods
mov
test
cmp
or
negl
mov
cld
and
and
xchg
in
mov
out
lahf
ud1
mov
push
pop
lea
ret
push
push
dec
mov
mov
loop
insl
sbb
inc
and
out
cld
inc
adc
sbb
mov
mov
xchg
loope
dec
enter
dec
andl
cmp
or
fnstsw
ud1
inc
and
inc
lea
inc
mov
popf
and
adcb
jmp
jo
pop
xchg
mov
scas
sbb
add
inc
or
divl
jb
addb
mov
cmc
xchg
xor
add
cmp
dec
cwtl
xchg
jp
test
or
in
ficoms
lds
rcll
cmpsb
adc
dec
pop
movsl
jmp
repz
fiaddl
bnd
pop
pop
lret
dec
jmp
xchg
jbe
pushf
push
sbb
inc
test
aad
cmp
fcoms
lds
pop
pop
test
fisubl
xchg
mov
or
sbb
dec
pop
xlat
dec
rcr
cli
pop
test
ljmp
ljmp
bound
add
cmp
fidivs
aas
inc
fs
scas
es
test
aam
jmp
cld
loopne
ja
js
arpl
inc
sbb
add
imul
lret
pop
test
std
push
test
shrl
shrb
imul
inc
inc
test
cmp
xor
cs
gs
pop
jmp
daa
inc
jnp
pop
xor
adc
jno
xchg
adc
inc
push
xchg
pop
and
mov
in
repnz
popa
pop
sar
xchg
mov
sub
int3
filds
jl
andl
pop
and
mov
into
cmp
or
jmp
inc
sbb
mov
push
mov
add
aad
xchg
bound
xchg
pop
or
insb
adcb
jne
jp
icebp
and
pop
adcb
imull
mov
shll
mov
xor
call
pop
jge
jno
push
int
outsb
xor
in
movsl
imul
cmpsl
stos
xor
stc
dec
cmpsl
mov
adc
aam
xor
imul
bound
jmp
mov
ja
or
pop
filds
push
inc
inc
add
mov
jmp
cld
lods
scas
imul
das
adc
pop
push
dec
xor
dec
cwtl
pop
pop
inc
leave
fs
call
xor
xchg
testb
gs
adc
xchg
lret
mov
in
push
pop
inc
test
lods
xchg
xor
and
loop
cmc
mov
jle
outsl
sbb
jge
add
mov
or
xchg
daa
or
xor
gs
mulb
add
fcomi
xlat
scas
enter
loope
gs
push
ficompl
mov
fs
mov
sbb
mov
test
popa
sbb
dec
xor
mov
insb
data16
fbld
jge
cltd
gs
insl
cwtl
xor
mov
pop
insb
mov
xchg
mov
mov
out
popa
xchg
xchg
fcompl
out
sub
shll
cltd
sti
mov
cmc
hlt
iret
mov
and
xchg
icebp
pushf
aaa
adc
mov
xchg
add
jb
cltd
add
push
enter
push
daa
hlt
mov
and
sub
lret
push
fdiv
mov
mov
arpl
sbb
das
pushf
dec
jbe
andl
push
sarb
lahf
push
sti
jb
jne
add
in
out
fs
lds
sub
inc
fildl
lods
xor
stos
mov
mov
mov
lahf
orl
pop
mov
inc
inc
insl
loop
lret
and
movsl
and
out
sti
ret
loope
arpl
shll
stos
xchg
and
mov
arpl
add
aad
bound
pop
push
nop
lret
and
fcoml
stos
mov
hlt
push
fs
pop
mov
repz
enter
mov
or
jae
push
ss
jl
xlat
or
ret
jmp
pop
xorl
or
adc
add
pop
les
xor
push
xchg
jno
mov
push
inc
push
fstpt
cltd
jne
outsb
test
jne
mov
mov
pop
push
daa
aam
pushf
pop
test
cmp
stc
xchg
inc
mov
stos
xorl
out
and
dec
lret
cld
xchg
xor
and
fistpll
fstps
popf
nopl
fcoml
in
lcall
hlt
dec
cmp
cmp
pop
sahf
addb
add
xchg
lds
cltd
outsl
cltd
mov
cmp
xchg
sub
xchg
pushf
push
cmp
addb
lods
lret
mov
insb
xor
out
cs
add
sub
cld
xchg
pop
sub
or
sbb
loope
xchg
jg
lret
push
jno
pop
mov
faddl
inc
sar
lret
jmp
mov
pusha
push
mov
hlt
shl
dec
aas
jns
nop
inc
mov
ja
mov
push
ror
fs
sahf
mov
daa
push
in
adcl
push
out
insl
outsb
idivl
js
stos
les
ret
pop
jl
dec
lcall
shl
rcl
pop
gs
xor
dec
mov
adc
sahf
mov
fcmovnbe
rcl
sub
icebp
scas
movsl
fs
fstp
mov
push
pop
xchg
mov
or
fnstenv
adc
aaa
mov
test
and
gs
repz
dec
or
pop
into
xor
dec
fdivrl
sub
popf
aad
xor
or
arpl
push
jge
lods
sub
cltd
dec
fwait
sbb
loope
push
out
mov
cmpsl
sub
xor
inc
je
and
int
inc
push
push
xor
mov
or
mov
das
mov
roll
inc
js
outsl
sub
ds
fs
mov
xor
pop
pop
ror
adc
addr16
call
xor
xchg
sahf
das
mov
ss
inc
fadds
sbbb
add
bound
nop
cmp
fldl
xchg
inc
lods
js
adc
or
popa
inc
imul
fwait
stc
data16
movsb
in
imul
and
je
or
leave
cmp
incl
sub
sbb
int3
js
sbb
mov
insl
xor
outsb
sub
lret
add
xor
int
sbb
sbb
sahf
das
addb
imul
fstpt
push
maskmovq
push
insb
add
push
rclb
les
cmp
push
jae
lret
adc
out
xlat
mov
xchg
cmp
pop
lock
not
shlb
xchg
mov
fbstp
mov
xor
or
aam
aam
push
xchg
mov
mov
fs
jbe
je
repnz
jmp
pop
mov
mov
ja
and
std
test
xchg
mov
cmp
sub
gs
mov
add
xor
jle
mov
jecxz
rcrl
lcall
loop
inc
rcr
push
loopne
test
negb
sbb
mov
push
out
jle
push
dec
leave
js
add
or
and
inc
stc
addb
out
iret
push
adc
dec
lds
mov
imul
in
cmp
rcr
ja
and
sbb
std
repz
xorl
add
jns
out
mov
js
adc
out
loop
mov
xchg
add
sbb
jge
pop
decl
repz
sub
cld
dec
mov
jmp
sbb
negl
imul
jne
call
push
cmp
jecxz
jbe
outsb
lret
add
les
fucomip
lret
mov
dec
mov
xchg
mov
setne
lahf
fidivrs
push
push
pop
mov
xchg
mov
sahf
lods
je
js
pop
in
movups
sbb
mov
es
dec
sub
sbb
pop
mov
in
je
xacquire
scas
sbb
push
daa
jae
insl
push
sbb
mov
lret
out
add
mov
cmpsb
mov
mov
movsl
adc
fbstp
add
les
cmp
rorb
popf
enter
cmc
push
xchg
repz
sti
out
js
in
mov
ss
add
inc
test
sbb
inc
or
out
movsl
add
addr16
imul
cwtl
pop
ss
fldl
in
aaa
add
jo
and
push
dec
add
ljmp
outsl
shl
push
ret
lea
adc
sbb
push
insl
mov
sahf
adc
stc
test
pusha
cwtl
sbb
popa
es
and
sahf
xchg
hlt
imul
add
loopne
or
and
ss
insl
bound
test
jae
jmp
test
dec
icebp
inc
xor
js
jg
cmp
push
lcall
test
cmp
imul
mov
cmp
mov
inc
stc
xor
cs
sub
jns
or
jl
jmp
dec
dec
or
negl
ficoml
sub
jmp
into
in
xor
push
inc
pusha
sbbb
pop
and
in
mov
xchg
pop
js
adcl
iret
pop
je
push
iret
pushf
mov
and
add
adc
jb
xchg
insb
push
dec
fbld
scas
pop
hlt
inc
ret
mov
lds
cmp
rol
ljmp
pop
adc
pop
xor
out
mov
outsb
imul
movl
clc
dec
xor
addr16
rcrb
inc
ds
mov
popa
or
clc
or
xlat
jecxz
add
loopne
test
mov
mov
adc
scas
sahf
and
rcll
push
je
sbb
jge
scas
mov
fs
mov
out
ds
outsb
test
mov
test
lds
ljmp
push
es
lcall
push
adc
les
in
pop
ret
push
sarb
outsl
test
enter
sub
mov
inc
push
test
cmc
test
pop
sbb
repz
fidivrl
or
xor
ret
xor
fildl
and
adc
inc
or
lods
mov
arpl
shl
xchg
jne
rolb
jns
repnz
rcrb
decb
cltd
push
cli
mov
xchg
add
pop
xchg
mov
jg,pt
fmull
add
outsb
cmc
xor
popf
inc
push
push
adcb
push
in
add
lock
jne
push
jne
push
or
jecxz
lea
push
add
fmuls
xor
lods
psrlw
mov
orb
inc
into
dec
inc
push
pop
xor
add
jge
push
and
sub
xchg
mov
leave
cs
loopne
test
imul
data16
jno
adc
mov
sbb
dec
jo
cmp
out
scas
fidivrs
bound
pop
xor
jo
repnz
sbb
dec
cs
ljmp
lds
xor
gs
cmp
outsl
mov
cmpl
push
inc
test
sub
aam
mov
jecxz
inc
mov
xchg
sub
xor
cmp
movsb
push
cltd
dec
dec
adc
mov
xor
cmp
mov
sbb
xchg
lret
fstps
cli
loopne
mov
xor
mov
loope
pop
sub
jle
aam
insl
inc
xchg
lods
cmp
jb
in
jg
push
push
shrb
test
add
fwait
fs
add
add
repz
pop
mov
movsb
pop
or
xor
xor
fdivrs
push
rcl
inc
iret
loopne
jns
mov
inc
mov
inc
inc
hlt
dec
sbb
cmp
rcrb
ja
xor
clc
add
mov
andl
in
mov
int3
dec
test
cmpsb
cwtl
add
testl
loopne
cld
or
pop
pop
xchg
fiaddl
popf
push
movsl
sub
stos
out
mov
lcall
in
and
lahf
jmp
pop
sbb
dec
outsb
repnz
ss
andl
ja
test
mov
ss
aam
repz
movsb
shll
add
aas
add
cmp
insb
add
jecxz
insb
or
adc
lock
push
aaa
lock
mov
pop
push
ret
adc
mov
lahf
fistps
cmp
mov
scas
push
inc
insl
fsub
jne
out
mov
stc
mov
pusha
lahf
test
ja
adc
cmp
pop
ljmp
enter
test
movsb
push
lods
ret
mov
and
ja
ret
sbb
int
loop
mov
pop
mov
jle
adc
mov
jbe
in
icebp
mov
sbb
popf
bound
ret
cld
aad
dec
or
mov
fbstp
or
rolb
push
fwait
in
stc
jns
into
repnz
mov
cmp
lret
pop
sub
mov
sahf
cmpsl
mov
clc
dec
test
inc
rcrl
mov
test
test
pop
test
add
push
hlt
aaa
xor
data16
inc
je
xchg
xlat
mul
ss
sahf
push
or
mov
jbe
xor
mov
mov
dec
in
lock
xor
jne
mov
or
into
popa
lock
pop
fnsave
cmp
bound
and
rorl
xchg
test
outsl
loopne
push
sub
mov
jns
add
popa
jae
jnp
dec
jge
out
pop
mov
lods
mov
out
fnsave
lea
sub
push
jp
mov
mov
arpl
jb
push
add
lods
das
hlt
je
xchg
ret
daa
dec
and
mov
jb
loopne
xchg
inc
push
jp
lea
out
xchg
hlt
sub
xor
xlat
sahf
inc
cmp
xchg
jne
pavgw
add
push
daa
mov
mov
jg
add
jg
shrl
stc
dec
cs
pop
sub
xlat
jl
loop
fimull
bound
adc
and
leave
and
aas
loopne
add
pop
sbb
js
loope
jmp
cmp
pop
mov
es
mov
adc
dec
outsl
cmc
lds
scas
jecxz
cltd
lods
dec
inc
xchg
pop
call
scas
or
lahf
cltd
loope
mov
lods
test
aas
xchg
cli
daa
cmc
sub
pushf
dec
pop
lods
mov
jns,pt
sbb
loop
dec
mov
adc
lahf
lcall
testl
push
je
pushl
cmp
int3
lds
jg
xchg
iret
mov
pop
cmp
push
out
pop
mov
insl
test
scas
icebp
and
out
ficomps
xchg
adc
mov
es
dec
cs
cs
mov
mov
sub
jno
iret
fstpt
sub
inc
xor
enter
imul
int3
jle
or
enter
xchg
jb
sbb
sub
push
test
rcll
xor
jl
sbb
fldl
fs
dec
mov
std
push
xorb
ret
repz
mov
jl
jge
cmp
and
cmpsb
pop
into
subb
call
lds
sarl
pop
outsl
inc
and
lret
jge
xchg
jecxz
test
xchg
push
jmp
cmc
push
icebp
xorl
in
adc
test
das
mov
test
sub
test
shlb
ja
pop
cmp
cmp
xchg
sbb
sbb
pop
lods
test
pusha
idivb
dec
outsl
dec
pop
xor
sub
add
data16
lods
shr
pop
xor
sarl
sub
dec
and
scas
out
stos
scas
mov
cmp
jle
stos
lock
cli
push
out
pop
jns
jmp
xchg
xchg
jb
mov
es
dec
das
adc
popa
xchg
popf
jp
jnp
adc
mov
mov
and
jmp
mov
mov
xlat
push
out
subl
cmp
push
cmova
out
sbb
sbb
mov
sti
pop
pushf
xchg
movsl
insl
mov
lds
sub
fcomps
out
add
pop
lea
sub
sbb
out
cmp
imul
xchg
lods
push
aas
mov
ret
xchg
adc
pop
jae
or
dec
xchg
es
xchg
mov
cmp
leave
pop
icebp
cmp
xor
loop
shl
daa
addb
sbb
inc
aad
repnz
stc
stos
adc
mov
pop
mov
les
scas
out
dec
sahf
or
xchg
out
inc
mov
mov
or
jg
je
fs
cmc
xor
sbbl
adc
lret
sarb
pop
pop
cmpsb
xor
push
or
jecxz
jp
inc
jp
xor
jmp
mov
and
shl
das
or
pop
hlt
cwtl
add
adc
pusha
or
sbb
adc
xchg
sbb
bound
idivb
mov
cmpl
adc
jne
data16
cmpsb
decl
mov
subl
stos
sahf
push
fiadds
in
mov
mov
adc
jb
cltd
ja
mov
push
jo
out
jg
into
sahf
inc
inc
cmp
test
in
cmc
insl
loopne
jmp
or
out
xor
lds
mov
dec
jge
mov
jne
xchg
jnp
mov
scas
push
insl
and
lcall
and
pop
pusha
ret
push
aaa
cmpsl
sbb
push
sub
inc
cmp
fdivs
jp
fisubrl
jae
cmp
aad
pop
lea
and
mov
mov
mov
xor
pop
mov
xor
lret
nop
fisubrl
push
ljmp
inc
xchg
inc
dec
repnz
push
in
test
push
dec
stos
jg
popf
add
xor
or
dec
xor
js
sahf
and
mov
push
xchg
add
out
cmp
rcr
cmpb
in
inc
mov
push
cmp
lret
sbbl
dec
out
add
testb
test
jbe
jne
gs
fistl
pop
icebp
lods
adc
cmc
add
xor
lcall
mov
sahf
pop
rcrl
dec
sahf
stos
cmp
subl
imul
je
cmp
outsl
sbb
cmpsb
cwtl
pop
in
and
stos
and
leave
jmp
cs
lea
xor
insl
xor
sub
cmpsb
xchg
in
fcoml
test
lock
mov
outsl
pushf
inc
int
xchg
das
push
movsb
div
lds
dec
add
pop
aas
push
int
test
xchg
int3
cmp
popa
mov
jno
sbb
arpl
xchg
loope
inc
jae
arpl
repnz
cmpb
pop
and
push
mov
out
int
inc
sub
negl
dec
pop
sbb
sbb
out
mov
in
mov
or
jae
jle
je
mov
out
test
add
adc
mov
scas
cli
mov
pop
arpl
loope
pop
call
adc
mov
dec
lret
and
emms
lahf
int
pop
mov
fstps
fnstcw
jmp
icebp
int3
fstpl
xchg
inc
mov
fsubrl
fsubr
or
mov
jae
mov
leave
push
xor
lods
loopne
push
faddl
fidivl
loope
imul
in
mov
lds
insl
insl
push
sti
push
movl
shll
and
push
jo
rclb
adc
inc
push
sbb
shlb
mov
lahf
and
jecxz
aas
pop
ljmp
xchg
and
adc
sub
stc
adc
fsubrs
mov
cs
adc
jae
push
movsb
es
add
sub
and
mov
aaa
decb
addr16
cmpsl
bound
jmp
nop
sub
or
mov
mov
stos
pop
adc
jo
lods
arpl
outsb
les
rcrb
fcmovnu
loopne
jmp
aaa
xchg
stos
testl
dec
sbbl
xchg
mov
jnp
dec
cmpl
xlat
ss
popa
push
or
pop
or
mov
jl
popl
jne
and
arpl
fcom
pusha
shl
dec
mov
fs
gs
dec
mov
mov
sub
sbb
xor
jns
stc
lods
fisttpll
xchg
movsb
scas
aad
push
icebp
cmp
push
mov
test
adc
mov
and
adc
shll
inc
rclb
pop
jecxz
or
xchg
mov
enter
adc
sub
jp
and
sti
fisubrl
add
or
leave
xor
or
into
out
push
xor
adc
xchg
popa
sub
not
fstl
xchg
add
ret
sbb
adc
pop
in
arpl
incl
mov
aaa
mov
ret
bnd
xchg
sub
test
dec
inc
and
mov
lcall
dec
pop
and
dec
push
cmp
stc
push
jne
movsl
mov
xchg
cmp
push
sti
lcall
aaa
lds
jmp
sbb
sub
test
repnz
roll
dec
js
cld
in
jnp
xchg
cld
xor
mov
ret
in
push
mov
lcall
hlt
sub
jl
out
jmp
mov
loope
fildl
mov
jg
jl
hlt
outsl
loop
cmp
fildll
movsb
or
add
subl
repz
nop
test
mov
mov
aas
mov
and
jl
dec
mov
inc
xlat
pusha
jne
xchg
es
pop
ficomps
ret
ret
dec
or
add
movsb
icebp
dec
sarl
aad
subl
outsl
loope
hlt
insl
or
sub
outsl
popa
insl
jb
add
fwait
inc
sbb
and
mov
pop
dec
sbb
cld
cmpsl
call
adc
movsb
rcrb
lret
push
adc
xchg
scas
and
inc
lods
mov
add
adc
mov
orl
in
jne
pop
xbegin
je
mov
or
out
aas
fimull
fsubrl
lods
test
ljmp
jle
inc
mov
loopne
dec
pop
push
js
dec
jns
pushf
jnp
test
push
les
or
mov
addr16
je
mov
iret
mov
stos
inc
test
mov
mov
daa
push
jecxz
cmpsb
sbb
dec
bound
pop
inc
std
sbb
mov
std
and
sub
jns
sub
std
lret
mov
push
push
or
sbb
enter
lret
xor
dec
gs
data16
pop
lea
xchg
mov
cwtl
ret
push
enter
repz
pop
pop
mov
int3
insl
int3
dec
test
adc
pop
and
mov
push
mov
sub
jne
es
call
jo
push
cld
lods
arpl
lods
enter
xchg
mov
pop
and
iret
or
fcompl
ds
test
mov
pop
adc
mov
stc
fchs
mov
cmp
dec
enter
sbb
pop
sub
mov
xor
cmpl
test
or
mov
mov
int
fdivs
dec
cltd
rcrb
mov
xor
nop
jg
daa
mov
cwtl
adc
sub
iret
sub
in
lcall
jmp
aaa
mov
ret
test
aad
xchg
push
inc
clc
or
lahf
stos
xchg
or
mov
push
push
mov
pop
inc
xchg
mov
jmp
out
stos
scas
push
lods
inc
mov
sbb
xchg
insb
stos
jns
mov
jns
testl
out
jno
add
mov
pop
xchg
ljmp
jns
and
mov
sbb
and
push
outsb
in
movsb
lods
inc
mov
arpl
fldcw
out
xor
cwtl
mov
adc
push
inc
mov
cvtpi2ps
fisubs
hlt
fs
dec
pusha
pop
and
mov
lret
movsl
lret
cld
cmp
pop
outsb
adc
scas
sub
mov
push
mov
out
loope
es
ja
movzwl
cmpsb
pop
sti
jmp
out
inc
xchg
pop
cmpb
pop
ret
fwait
ljmp
push
fiadds
or
leave
dec
fsubr
adc
or
and
inc
arpl
insl
ss
popf
enter
rolb
cld
pop
lods
mov
aaa
les
filds
cmpsl
cmpsl
xchg
xorl
sub
lret
push
pop
mov
sbb
jbe
add
fs
xchg
push
xchg
sub
enter
sbb
cmp
and
or
cld
jle
in
scas
pop
xor
xchg
push
ret
fdivrs
and
inc
dec
mov
or
xchg
jns
add
jecxz
scas
out
xchg
mov
dec
mov
aad
jo
in
fsubrl
test
mov
rcrl
mov
cmpsb
pop
cmp
ret
mov
dec
stos
sbb
decl
imull
inc
jecxz
dec
test
push
adc
out
mov
cmc
es
sbb
aam
fwait
add
sbb
ret
fisubs
dec
bound
and
sbb
loop
psrld
int
in
add
sahf
xor
dec
insl
dec
mov
addr16
or
aas
mov
popa
pop
sub
pop
mov
mov
insl
xor
cmp
out
push
jg
mov
sti
mov
mov
loope
icebp
adc
shll
xchg
dec
ljmp
call
fldcw
mov
inc
sub
bound
test
addr16
mov
pop
push
mov
aam
push
loope
shll
jne
sub
test
leave
cmp
sub
aam
and
cli
decb
adc
cwtl
out
sti
dec
jge
inc
aaa
ret
sahf
sub
data16
cmp
and
cmc
bound
ds
cmp
add
or
jle
push
cmc
mov
mov
out
andb
mov
and
adc
out
int3
aad
dec
push
lock
and
or
out
cmc
insb
cs
mov
or
aaa
into
loope
imul
hlt
in
adc
add
xchg
pop
push
test
out
js
inc
xor
test
in
shlb
hlt
fsubs
test
or
xor
sub
cmp
andb
pop
lret
mov
cmp
fisubs
cltd
sti
adc
mov
clc
xchg
int3
adc
stos
sub
or
xor
test
lret
imul
jae
cld
je
xchg
aad
jb
sbb
out
jmp
daa
jno
sahf
push
movsb
mov
jno,pt
stc
mov
ret
mov
xor
adc
aam
cmpsb
clc
add
jo
bound
inc
xchg
jle
dec
xor
jns
adc
cltd
mov
and
ret
in
in
jl
and
xor
cld
aam
xor
dec
inc
sub
xor
sub
adc
imul
sub
mov
jbe
add
sbb
pop
mov
sub
arpl
jl
aam
cmp
ss
mov
sub
cld
hlt
mov
aas
int
add
cmpsl
xchg
mov
js
rcr
rcrb
inc
and
dec
mov
mov
shrl
dec
stc
cmc
mov
push
fdivrp
pop
loope
mov
pop
clc
xchg
outsl
mov
imul
xchg
inc
cmp
icebp
nop
cld
push
pop
das
push
pop
xor
ss
xchg
jbe
push
in
insl
mov
mov
daa
stos
lcall
dec
mov
xchg
jno
adc
lahf
adcl
ja
call
add
mov
cmpsb
xlat
or
frstor
aaa
hlt
and
fwait
push
cld
scas
push
stc
xchg
enter
dec
aad
aas
push
pop
sbb
shll
iret
pop
mov
sub
std
stos
and
add
in
jbe
out
mov
pop
ljmp
lock
cvtdq2ps
enter
movsb
cmc
scas
out
and
data16
xor
add
je
sahf
bt
adc
cmpsb
mov
inc
dec
add
jno
xchg
in
cmp
push
dec
xor
xchg
jmp
insb
mov
pusha
imul
sahf
push
cmp
push
or
js
cwtl
or
jl
pop
jmp
mov
or
int3
addl
xchg
mov
ret
insl
inc
and
leave
mov
loopne
sarl
call
mov
pop
out
in
sub
movsb
pushf
xchg
mov
or
aas
scas
pop
adc
mov
mov
ds
and
or
enter
dec
sbb
mov
xchg
aad
jg
std
jb
scas
or
dec
rclb
mov
ror
sub
mov
sub
cltd
sub
or
test
xor
mov
add
add
inc
xchg
scas
adc
jl
mov
sbb
add
xchg
pop
inc
enter
xchg
mov
popa
enter
pop
mov
fimuls
fldl
sbb
or
hlt
scas
xlat
movsb
mov
into
cmp
dec
jnp
dec
jnp
xchg
mov
push
shlb
lock
fcmovu
xor
adc
jmp
inc
out
mov
or
pop
shlb
in
insb
cmp
pop
adc
js
ja
inc
pusha
sbb
loope,pn
and
add
lock
mov
mov
lahf
jle
orl
add
pop
and
xchg
sub
cltd
hlt
xor
mov
jl
pop
inc
push
jo
cmpsl
mov
dec
jns
testl
mov
cmc
sti
dec
mov
nop
push
xlat
add
push
or
push
jmp
popa
addb
add
xchg
or
adc
jp
jae
cmp
push
mov
into
adc
jecxz
das
and
jne
xchg
mov
enter
mov
jmp
dec
adc
mov
mov
int3
adc
insl
les
or
fisubrl
mov
xor
lods
mov
jmp
xchg
push
mov
jnp
add
pop
sbb
add
mov
lcall
filds
ljmp
shll
fwait
mov
and
ljmp
or
jmp
movsb
adc
xchg
inc
mov
shll
xchg
in
and
pop
xchg
mov
ja
imul
iret
fcmovbe
fs
and
add
mov
sti
fisttps
lret
cltd
mov
or
int3
mov
arpl
sbb
in
mov
lock
rcl
std
jo
pop
imulb
dec
sbb
xor
inc
inc
ret
push
adc
out
sti
mov
es
mov
jmp
jo
lods
stos
push
pop
movsl
cli
out
xchg
xchg
insb
test
xor
ljmp
in
dec
icebp
xor
lds
sbb
mov
iret
addb
stc
sbb
sbb
icebp
push
mov
jmp
pop
leave
jmp
jg
inc
shll
pop
xor
inc
sub
pusha
stos
test
adc
lret
dec
sahf
adc
das
or
fs
dec
nop
push
mov
sub
mov
dec
stos
mov
sbb
pop
xor
mov
fsubs
ljmp
xchg
sub
xchg
pop
insb
in
fstpt
enter
fmull
imul
fstps
lea
inc
sbb
sbb
aas
lock
fwait
push
icebp
lret
push
pop
push
xlat
lods
cwtl
mov
xor
mov
ja
pushf
enter
out
cwtl
das
jnp
subb
dec
cli
outsl
and
cmp
pop
mov
mov
mov
daa
mov
dec
cmpsb
push
in
inc
and
push
stos
adc
mov
inc
or
xor
idivl
movsl
push
mov
push
dec
call
mov
enter
pusha
inc
and
and
add
ret
pop
je
dec
mov
rcr
or
adc
mov
sbb
pushf
jns
mov
dec
xor
mov
nop
and
sub
add
imul
cmpsl
pop
xor
cli
or
adc
pop
push
dec
or
dec
pop
sub
popa
xor
test
jb
int
pop
adc
pop
jmp
out
adc
ljmp
stos
daa
push
nop
jp
addr16
push
imulb
pop
mov
sub
jb
shll
lret
fwait
mov
loopne
pop
pop
fs
jle
imul
or
out
push
adc
test
sub
mov
mov
dec
fnsave
sub
mov
add
push
mov
push
aad
mov
add
dec
xor
mov
outsl
push
call
ret
push
push
mov
test
test
inc
jecxz
jae
lods
out
cmc
cld
jno
cmp
std
sub
fs
pop
sbb
push
xchg
insl
leave
dec
stos
ds
iret
sarb
pop
icebp
sbb
dec
lea
add
xchg
mov
je
icebp
or
xor
imul
mov
jle
dec
xchg
add
mov
popl
push
mov
sub
in
test
jge
pop
addb
ds
pop
pop
cmp
xchg
inc
xor
ret
nop
xor
dec
js
loopne
mov
add
inc
lret
hlt
sbb
mulb
jp
sti
mov
and
sbb
hlt
clc
xchg
sub
pop
push
fcomi
mov
fcoml
cmp
int
mov
inc
lock
lret
movsb
or
inc
les
sbb
sbb
cli
iret
nop
idivl
je
popf
mov
jle
out
and
push
pop
lret
in
fs
xchg
js
jae
mov
ror
xchg
mov
xor
pop
mov
mov
pop
pushf
dec
add
and
fbstp
mov
sbb
je
loopne
sbb
outsl
pandn
lock
lock
push
pop
xchg
mov
mov
sahf
jl
inc
push
cmp
jle
addl
pop
movsb
jae
lds
rcl
add
pop
movsl
imul
pop
repnz
push
lret
iret
push
test
icebp
insb
cld
jae
data16
cltd
cmp
movl
xchg
add
orb
inc
jno
sub
dec
outsb
bnd
call
and
mov
aad
cmp
mov
push
mov
mov
push
clc
and
clc
cmp
sub
xchg
jo
mov
es
mov
sbb
adc
lea
jb
mov
nop
dec
stos
and
scas
push
mov
mov
cli
ja
insb
leave
jg
cmc
popf
pop
pop
inc
pop
mov
pusha
adc
fstps
jp
add
lret
xor
and
cmp
fcomps
jns
xchg
popa
sbb
fldlg2
push
fcomp
lcall
add
mov
inc
ss
pusha
jp
addb
aas
mov
push
repnz
ret
jl
mov
std
cmp
shr
xchg
inc
int3
pusha
pushf
jge
imul
insl
and
mov
xchg
adcb
mov
ffree
jno
repnz
sbb
lret
inc
or
lcall
sub
push
mov
cld
cli
xlat
push
xchg
dec
jmp
or
push
add
std
and
cmpsl
add
aam
push
aam
push
xorl
mov
imul
and
dec
cmp
vdivpd
jge
and
adc
stos
lods
xor
out
in
lock
jno
ffreep
hlt
jo
test
rorb
insl
mov
xorl
pusha
jbe
and
xor
sarl
sbb
ljmp
or
jbe
sbb
lods
or
es
jb
repnz
out
pop
int3
sbb
pop
and
adcl
repnz
inc
cmp
ljmp
sub
push
jle
das
aam
mov
xchg
cld
mov
cmp
cmpsl
fdiv
jno
iret
fnstsw
push
movsb
inc
test
mov
and
daa
xchg
fwait
jo
xchg
loope
repnz
lret
add
dec
flds
add
xlat
mov
cmp
arpl
rorl
mov
cmp
xchg
and
and
jge
js
mov
dec
inc
sbb
iret
add
int3
pop
jge
lods
sarl
pop
mov
jecxz
pop
or
cmc
cmpsl
push
xchg
mov
inc
pop
mov
lods
and
in
scas
or
repnz
bound
cmp
or
inc
pusha
ja
and
icebp
jnp
lods
enter
test
mov
jb
or
fisttpl
clc
push
sub
mov
leave
adc
rcrl
jmp
or
pop
cmp
mov
cmp
movsl
sub
outsb
push
out
push
mov
sub
mov
mov
test
and
lret
pop
rep
or
lret
lods
dec
xchg
ror
jae
xor
adc
jne
inc
sarl
jno
push
daa
call
sbb
test
sub
arpl
mov
xchg
stos
jge
xchg
inc
rorb
mov
cs
movsb
push
jnp
rcll
fiaddl
mov
mov
das
push
adc
jecxz
adc
mov
mov
sbb
mov
adc
les
cmp
xor
ret
pop
movsl
lret
push
outsb
jmp
sub
ljmp
jge
and
cmp
dec
sarl
in
icebp
jb
hlt
inc
mov
insl
addr16
xadd
push
jo
cmp
addr16
or
and
jl
cmp
imul
in
xor
pop
cmp
sub
leave
push
int
rclb
popf
lea
push
outsl
or
sbb
idiv
dec
ja,pt
cli
sub
fadds
or
out
pop
mov
lcall
push
fsubrl
mov
mov
adc
mov
sahf
and
pop
sub
fsubp
jbe
sbb
hlt
add
jo
jae
or
mov
jle
jo
int
push
pop
nop
push
jge
loope
push
mov
mov
outsb
aaa
mov
mov
push
out
jmp
mov
nop
mov
in
frstor
xchg
rcr
sub
dec
das
mov
and
sub
xor
cwtl
mov
xorb
pop
push
and
mov
imul
aas
xchg
sbb
sbb
imul
mov
bound
cld
pop
push
mov
mov
push
popa
mov
outsb
nop
push
sub
nop
call
xchg
push
mov
rcrb
shlb
sub
or
or
gs
and
es
aad
out
arpl
and
pop
adc
pop
mov
mov
fwait
dec
cmc
jbe
addl
cmp
shlb
js
add
xchg
iret
sar
add
or
out
push
push
lods
outsl
lods
sub
lea
test
pusha
cld
mov
xor
pushf
bnd
test
cmp
stc
in
sahf
loopne
push
adc
push
stos
dec
sbb
mov
scas
cmp
inc
pop
loop
inc
jp
dec
cld
js
pop
das
in
xchg
add
mov
lds
hlt
mov
sub
dec
icebp
negl
mov
addr16
fwait
mov
add
xlat
push
mov
movsb
repz
lock
addr16
cmp
gs
mov
sti
enter
jae
inc
push
jae
test
or
mov
jge
mov
jae
clc
pop
adc
add
js
and
loope
enter
jbe
ficoml
pop
js
insl
dec
adc
popl
repz
push
test
cmpsl
clc
pop
push
jp
jmp
jbe
and
mov
hlt
pop
jmp
scas
dec
loope
dec
and
sub
sbb
sbb
stc
sub
xor
jg
jo
jle
imul
bound
test
push
adc
stc
hlt
mov
adc
adc
jg
cmp
stos
aaa
leave
lods
sub
push
cmpsb
mov
mov
mov
pusha
mov
hlt
sbb
std
inc
sbb
dec
jne
sub
inc
jne
iret
loop
xchg
pop
xor
push
sbb
jp
sub
inc
push
inc
fildl
cld
stc
mov
mov
push
mov
cltd
shrl
mull
fs
push
cmpsb
lahf
ja
pop
jge
sbb
lea
mov
xchg
mov
or
mov
sub
mov
or
mov
push
jg
mov
sub
das
dec
or
cwtl
repnz
mov
nop
or
scas
cmpl
mov
nop
sbbb
lods
int3
dec
ret
sbb
rcl
aam
pop
xchg
data16
cld
or
pop
dec
xchg
xorb
add
adc
sub
dec
push
fisttps
mov
cli
mov
mov
aam
push
sub
hlt
mov
sarl
push
mov
hlt
popa
jns
in
jo
fmuls
dec
out
call
push
lock
jo
pop
pushf
lods
jne
push
shrl
push
mov
jno
mov
popf
out
into
shrb
movsl
xchg
sbb
mov
cld
mov
stc
and
mov
stos
lock
out
mov
adc
ds
sub
adc
cwtl
ja
leave
out
les
out
popf
repz
and
imul
sbb
mov
sub
mov
in
fcoms
adc
cmpb
mov
mov
sti
pop
push
adc
outsl
jb
ret
inc
imul
jg
mov
push
ja
jmp
jne
ljmp
insb
mov
mov
mov
push
sub
jmp
cmp
test
xlat
mov
cmpb
sub
push
in
movsb
addl
dec
mov
and
fdivrl
or
push
ret
movntq
mov
jne
and
add
cltd
sbb
mov
push
scas
dec
sbb
sarl
dec
div
xchg
adc
push
mov
xchg
outsb
mov
sub
mov
dec
std
and
pop
fmuls
push
pop
adc
jmp
and
rcrl
cmp
mov
into
mov
pop
mov
sub
movsl
addb
insb
mov
rorl
fmuls
loopne
inc
fld
sub
lahf
fildl
jle
mov
cltd
inc
cmc
push
ret
movsl
jmp
outsl
mov
dec
je
mov
jbe
loop
push
add
add
jecxz
in
push
popf
push
inc
xor
cli
sub
daa
and
into
inc
mov
pushf
or
cs
xchg
dec
mov
push
and
sub
mov
xchg
hlt
or
into
cld
shrl
adc
add
mov
gs
and
int3
test
or
in
add
fnstenv
mov
mov
inc
sti
and
jp
mov
push
sbbb
pop
sbb
push
dec
mov
mov
orb
scas
insb
add
mov
ja
adc
arpl
pop
xchg
or
or
insl
push
lcall
xor
mov
int3
dec
lods
stos
mov
cmp
outsl
rclb
add
mov
les
xchg
mov
insb
fcompl
repnz
adc
push
in
mov
ror
or
mov
xor
in
sub
rorb
inc
fidivs
shll
fldenv
lods
xchg
nop
rclb
or
fisubrl
adc
mov
subb
loope
pop
int3
sub
adc
adc
mov
adc
adc
cmp
clc
lods
and
mov
stos
gs
test
push
mov
stos
dec
xchg
xchg
outsl
fwait
call
mov
cltd
cmp
and
push
fiadds
xor
hlt
shrb
mov
sbb
in
pop
inc
or
add
js
xchg
push
adc
and
in
out
xchg
scas
dec
cmp
mov
pop
sbb
shll
fimull
aaa
repz
paddsb
clc
jne
leave
xchg
mov
lret
dec
divb
ljmp
cltd
add
and
rep
sti
or
in
pushf
outsl
add
jp
push
inc
mov
add
adc
leave
shrl
bound
xchg
iret
mov
fnstsw
mov
mov
cli
push
mov
inc
mov
cmp
xor
mov
js
and
or
aas
cs
sbb
das
rcrb
fcoml
int
sub
jl
sti
mov
fisubs
sub
xchg
jo
adc
xor
jg
push
mov
dec
dec
loope
add
sub
cwtl
push
mov
dec
xor
sbb
dec
inc
cmp
je
bound
cwtl
dec
sub
ljmp
dec
jp
ficompl
mov
stos
adc
int3
scas
bound
mov
imul
lods
int3
or
mov
loopne
repz
mov
and
inc
stos
shll
push
xchg
psrad
in
and
jb
sbb
mov
jge
push
int
add
mov
mov
xchg
sbb
out
pushf
push
sub
inc
adc
push
sbb
cmp
fwait
gs
jb
inc
call
movsb
sti
mov
jmp
push
mov
rcl
aas
shrl
adc
adc
and
pusha
xor
testb
mov
sbbl
mov
mov
out
jp
push
add
das
mov
add
addr16
xlat
mov
xor
scas
push
lcall
cmpsl
or
scas
sub
pop
loop
into
cmp
xchg
out
or
pop
xchg
out
xchg
cwtl
jecxz
cmc
sub
xchg
stc
xor
mov
or
test
int
adc
push
mov
pop
add
mov
mov
push
cmpb
outsb
int3
cs
scas
addr16
lret
arpl
mov
cld
pop
aam
leave
mov
in
outsl
xor
stos
or
push
xor
aaa
sub
popf
clc
loopne
push
loop
jo
repz
outsl
ja
daa
pop
mov
sbb
cmp
idivb
fwait
popf
and
or
dec
int
xor
dec
lock
mov
adc
add
add
push
inc
mov
sub
dec
dec
in
lods
sbb
out
out
add
mov
stos
shl
inc
mov
cmpsb
sub
std
and
mov
cmp
das
outsb
js
xor
mov
je
rcl
lods
test
jp
arpl
cli
dec
dec
dec
jns
scas
cmp
daa
or
pop
lea
sub
test
xor
cmpsl
and
out
xchg
sbb
mov
rcll
fisubs
repnz
test
jne
pop
loope
sbb
fsubrs
or
push
mov
jge
ret
into
popf
or
sbb
adc
repnz
ficomps
rcrl
inc
sub
jno
test
bound
add
shrl
adc
sbb
mov
mov
mov
scas
mov
mov
jb
push
data16
mov
jo
dec
cld
sbbl
mov
out
dec
cwtl
xchg
dec
push
pusha
mov
pop
push
imul
fst
xchg
mov
dec
ljmp
ja
sub
rorb
ret
push
or
leave
in
roll
mov
inc
mov
out
loope
iret
andl
lods
in
movsl
or
bound
aad
jmp
xor
shl
stos
and
cmp
jle
imul
sbb
cmc
cmc
stos
test
test
mov
add
jb
mov
outsb
scas
call
adc
scas
mov
push
ret
push
call
gs
dec
stos
leave
adcb
das
cmp
insl
aam
jno
push
insb
xchg
mov
mov
filds
push
sahf
or
je
lcall
adc
pushf
arpl
and
mov
mov
cmc
mov
cmpl
jno
push
lahf
jo
dec
out
pushl
cmp
dec
je
loop
pushf
aam
xor
mov
aam
rclb
lods
pop
jle
adc
cltd
lahf
test
dec
mov
xchg
xor
rcrl
movsl
jge
xor
adc
inc
cmp
and
out
js
pushf
fwait
clc
pop
sub
push
add
cwtl
push
sbbl
push
jne
testb
stc
cli
or
xor
stos
fcompl
or
xor
cmp
ds
or
adc
dec
sbb
lods
xlat
xchg
in
into
movsb
aad
cmp
xchg
outsl
jno
loop
movsb
std
mov
jg
testb
xlat
and
mov
andl
jo
enter
aas
inc
push
mulb
ja
cmp
movsl
push
aam
aas
in
rep
clc
dec
or
mov
ja
push
insb
cmpb
jecxz
adc
aad
out
mov
sbb
mov
into
and
and
mov
sahf
mov
pop
sahf
push
mov
pop
mov
xor
xchg
test
xor
aam
or
xor
push
lds
xchg
sub
fnstcw
jecxz
push
aas
jp
xor
push
jno
adc
adc
repz
adc
fisubrs
out
mov
enter
test
repz
lret
lds
xor
mov
ret
pop
int3
popl
push
ss
inc
sub
and
push
test
int3
pop
and
inc
inc
lcall
popa
mov
mov
push
push
jge
pop
pop
adc
data16
pop
mov
jge
sti
pop
jns
ljmp
xchg
mov
mov
sub
cwtl
sbb
imulb
dec
jns
fisttpl
inc
cmp
mov
pop
inc
pop
subb
movb
sbb
inc
push
cltd
inc
jl
outsl
out
test
in
inc
adc
scas
push
lret
aaa
push
ret
aas
jmp
ljmp
lods
imul
mov
mov
stos
add
aad
out
add
mov
jns
pop
sbb
test
mov
and
adc
bound
xlat
jbe
sub
cmc
adc
daa
cmpsb
test
or
sbb
ss
orb
xchg
xchg
add
stos
xlat
dec
pop
ljmp
push
sub
xchg
cmp
sahf
aad
adc
mov
ja
sub
rcrb
dec
enter
aas
jae
mov
insb
sarb
out
or
insl
sbb
enter
mov
fbld
xchg
leave
scas
sub
leave
aas
cs
xchg
sti
out
xchg
sarl
adc
out
mov
out
sbb
sbb
call
mov
fcomps
jecxz
lret
or
outsb
scas
inc
sub
jbe
sbb
es
int3
sub
andl
pop
fisubrs
hlt
mov
cmpsl
mov
or
jle
push
loop
adc
test
fwait
jp
jle
leave
adc
loope
xor
jmp
sbbb
loopne
sub
cli
add
sarl
shll
pop
test
pop
sbb
into
pop
outsl
sub
repz
rorb
int3
stos
repnz
push
push
movsl
sarl
sub
xchg
out
ljmp
dec
out
ja
in
mov
cs
mov
or
inc
lods
sbb
inc
outsb
cwtl
imul
cli
stc
cmp
pop
mov
lea
lahf
adc
cmc
lods
dec
mov
push
test
out
mov
and
adc
mov
push
imul
in
adc
xor
lods
aam
dec
mov
add
xor
adc
data16
push
testb
xor
dec
rcr
outsl
and
push
xor
cmpsb
idiv
xchg
pop
ja
sbb
mov
push
sbb
dec
insl
pop
add
movsl
dec
icebp
aam
scas
bswap
jbe
or
rcrl
push
nop
lret
sbb
mov
mul
cli
cli
scas
push
cmp
pop
lea
adc
sbb
push
lods
jp
je
mov
stc
outsl
jge
dec
adc
add
call
pop
in
fs
popa
ss
and
xor
inc
cmp
ja
mov
call
push
pop
lods
jle
xchg
das
add
xor
arpl
shlw
lods
pusha
or
in
pop
lret
cmpsb
fidivrl
pop
fdivrs
mov
xchg
jb
sbb
adc
pop
cmpsb
int3
repnz
dec
mov
add
mov
mov
lock
jno
fwait
pop
fldenv
mov
mov
adc
or
enter
imul
imul
stc
pop
pop
push
inc
xchg
iret
cmp
insb
int
mov
xchg
out
fcoml
imul
shll
push
adc
jno
lahf
jno
xchg
shlb
push
mov
push
shrb
dec
loope
mov
dec
push
xor
mov
cmp
push
fsubrl
mov
hlt
xor
loope
pop
xchg
popa
icebp
sti
xchg
out
pop
mov
and
mov
xchg
inc
push
push
fwait
and
out
sbb
clc
insb
jmp
int3
mov
xchg
push
xchg
push
movsl
add
ror
mov
fnstenv
dec
or
xchg
pusha
sbb
xchg
fidivrl
jbe
or
outsb
lds
sub
loope
mov
lcall
sti
or
mov
push
pop
jae
pop
fsts
or
jecxz
and
mov
mov
sub
dec
int
xlat
cmc
pusha
outsl
aas
scas
sub
lods
outsb
mov
bound
mov
cmc
adc
subb
sub
add
iret
and
roll
sbb
sbb
pop
inc
adc
adc
je
fmull
and
inc
xor
fidivrs
outsl
cs
dec
data16
jg
pop
stc
dec
fildl
mov
popf
inc
xchg
lods
mov
push
das
dec
mov
int
test
inc
fcmovnbe
sub
xchg
add
loope
stos
jnp
pop
pop
jno
in
outsb
stos
fcom
jbe
les
rcrl
mov
mov
pusha
mov
adc
cld
and
mov
inc
mov
dec
jnp
push
cltd
out
xorb
jg
pop
imul
repz
movsb
rol
std
rcrb
cmp
push
jb
pop
out
dec
pop
je
vphaddubd
nop
arpl
in
sub
push
inc
pop
push
call
adc
inc
jns
sbb
in
inc
mov
pop
imul
jp
xlat
ss
imul
or
push
ds
int
aam
movl
sub
add
adc
adc
inc
mov
cltd
dec
call
jbe
add
jge
add
in
fwait
mov
inc
xchg
mov
pop
adc
dec
movsb
aaa
xlat
dec
shrb
out
add
inc
decl
push
xchg
movsb
sbb
scas
sub
xor
mov
xchg
insl
mov
dec
movsb
push
push
in
insb
dec
jmp
rolb
fiaddl
in
and
test
lahf
arpl
pop
inc
xor
push
bound
or
outsb
inc
aam
inc
addl
ret
xchg
or
dec
mov
dec
jl
sarb
add
scas
dec
xor
jl
mov
xor
cmc
and
ror
sarl
mov
insl
push
or
sub
clc
out
pop
dec
jge
mov
jbe
mov
push
mov
sub
fxam
test
add
adc
add
inc
or
pop
movsl
and
test
mov
jno
dec
adc
push
mov
mov
dec
cmp
xor
xor
fimull
mov
mov
jb
popa
mov
int
into
inc
fsubrl
or
fistpll
rclb
ficoms
add
test
sbb
push
jne
imul
sub
mov
int3
sbb
adc
pop
fidivs
in
add
xlat
into
out
add
ret
sti
popf
jmp
dec
frstor
xadd
inc
out
or
pushf
dec
xchg
inc
inc
stos
rorb
stos
sbb
jno
dec
cs
xor
cwtl
jecxz
push
out
jne
jmp
in
je
ss
fmuls
int
cmpsb
roll
enter
mov
pop
mov
push
movsl
mov
push
scas
ss
loop
push
in
mov
lods
mov
cmp
sarb
xchg
in
jo
outsb
pop
gs
icebp
dec
add
and
mov
push
sub
or
adc
or
xchg
xchg
repz
pminub
or
or
sub
pusha
rorb
mov
ss
cmp
cmc
push
mov
dec
jmp
scas
push
ja
es
push
cmpsb
or
dec
inc
xor
fcoms
test
shrl
xor
pushf
push
pop
xchg
xorl
test
sub
mov
pop
sbb
fs
xchg
int3
mov
pop
push
gs
dec
push
gs
xor
mov
jno
push
ret
jl
or
xor
testb
imulb
dec
mov
js
loopne
lret
inc
xlat
out
add
cmp
mov
and
xchg
mov
add
hlt
jns
test
and
sbb
xchg
cltd
outsl
stc
stos
or
and
dec
data16
add
stos
mov
notb
mov
add
cltd
lahf
adc
lcall
xchg
xchg
inc
sbb
mov
add
aaa
inc
mov
push
mov
cs
rclb
es
imul
lea
cli
and
mov
jmp
jbe
js
pop
xchg
jmp
dec
stc
mov
fs
rorb
loopne
mov
cmpb
test
jb
test
repnz
scas
push
cmp
pop
inc
or
xor
adc
jp
xor
movsb
shlb
int
popl
ret
lds
fmuls
or
stc
jnp
imul
jmp
cli
jmp
sbb
xor
and
ljmp
xchg
cltd
or
adc
daa
jbe
rclb
pop
cmp
add
pop
xlat
adc
insl
mov
push
mov
and
jge
inc
mov
jmp
divb
int3
mov
mov
enter
and
fsubl
jb
int
fimuls
pop
fnstcw
sbb
add
dec
xchg
xor
cwtl
xor
sub
frstor
popf
sarl
mov
test
mov
mov
test
pushf
iret
add
lods
insb
jmp
bnd
jge
xchg
divb
dec
incb
out
test
fcmovne
cs
iret
push
dec
push
cmpsl
jne
jl
cmovo
les
push
lret
aas
pop
out
shll
fwait
cmp
lahf
lods
jmp
in
xchg
dec
lods
jo
dec
dec
sub
sub
xchg
add
fisubs
js
pop
sbb
shld
or
jecxz
push
pop
pop
push
fstps
test
test
pop
les
sbbl
stos
jns
jno
lock
adc
test
negl
in
popa
int
aaa
mov
imul
shll
ret
and
cmp
xor
jp
fisttps
pop
out
jns
cmpsl
enter
mov
jmp
loop
inc
pop
mov
xor
pusha
sar
fadd
pushf
int3
mov
mov
add
mov
lahf
nop
xacquire
pop
test
cmp
mov
pushf
outsl
and
push
push
outsb
dec
sub
ss
int
mov
cmc
push
lret
test
les
test
mov
mov
xor
nop
cmp
xchg
lods
mov
xor
inc
push
push
adc
xchg
and
in
xor
inc
sub
insb
dec
stos
add
lods
or
movsb
andb
fidivrs
jo
sub
outsb
movsb
mov
pop
shlb
and
sbb
mov
mov
and
push
in
and
sub
mov
stc
pop
sbb
sbb
xor
mov
loopne
incl
pop
xchg
cmp
push
adc
insl
imul
mov
pop
je
jo
jl
mov
cmp
push
pop
out
xlat
add
push
outsl
xor
or
mov
stos
push
ljmp
rclb
adc
jmp
repz
inc
jge
imull
sahf
add
pop
and
pop
dec
xchg
scas
mov
fcomp
push
push
stos
andl
xchg
adc
jle
xchg
xchg
out
xchg
icebp
xor
push
push
pop
or
push
mov
pop
hlt
mov
shr
arpl
cmpb
subb
adc
or
and
sbb
inc
pop
mov
fiaddl
mov
stc
and
lcall
test
in
jnp
loopne
repnz
and
test
into
push
call
push
and
or
and
ljmp
mov
in
rcll
cwtl
xor
icebp
les
pop
mov
xchg
sbb
xchg
leave
loopne
dec
fcmovbe
mov
es
sub
js
cs
mov
fimuls
mov
add
pop
sbb
push
lret
lahf
inc
cmp
push
mov
add
pusha
sub
jp
outsb
incb
fdivrl
in
icebp
cmpl
or
shll
pushf
xchg
inc
int
cmp
mov
test
or
xchg
inc
ret
sbb
mov
pop
inc
in
stc
mov
das
jb
lea
fsubl
mov
test
aad
outsl
roll
cwtl
mov
stos
xlat
or
mov
fcmovnu
ficompl
jo
push
inc
outsl
out
and
adc
and
cmovno
push
jo
iret
or
in
mov
push
adc
arpl
xchg
outsb
insb
pop
xchg
pop
jae
aam
shlb
movsb
inc
sub
jg
dec
rcrb
pop
inc
sub
fcoml
xor
add
sbb
or
daa
adc
lret
aam
movsl
xor
fistpll
cmp
mov
jecxz
out
fs
imul
data16
icebp
test
push
repz
pop
mov
out
or
and
push
lods
xor
xchg
enter
cs
nop
and
xchg
xchg
cmp
mov
fs
inc
inc
xor
loopne
xor
and
subl
or
popf
xor
mov
test
mov
dec
add
dec
aas
mov
cmp
je
imul
or
icebp
dec
pushf
sti
add
arpl
and
jae
shl
jne
jmp
into
fstps
ja
pop
dec
imul
aam
loopne
sbb
mov
dec
mul
mov
insb
in
push
pop
sbbb
dec
xor
jle
fnstenv
popa
test
cld
test
cmp
mov
das
repz
rcr
inc
shl
movsb
out
pop
and
repz
dec
lea
je
xor
mov
mov
decb
dec
es
xor
cmc
adcl
iret
xor
or
nop
mov
push
mov
out
fcomip
movsl
test
cmp
test
and
mov
lods
cld
jecxz
push
or
pushf
int3
pop
loopne
int
mov
fwait
sbb
dec
lret
jbe
aam
inc
ret
loope
insl
sbb
jmp
mov
mov
adc
add
ss
mov
insb
jo
pop
sbb
dec
in
insl
cltd
xchg
mov
stos
mov
jno
stos
dec
movsb
push
xor
xor
cmp
fsubrs
fbstp
test
inc
popf
fldcw
pop
jae
data16
mov
push
fcmovnu
push
push
or
add
stos
outsb
mov
ja
mov
into
or
adcl
jo
push
push
cmp
pop
dec
pop
adc
cmp
sahf
hlt
mov
add
ret
daa
lahf
push
and
pop
mov
and
sbb
loopne
dec
movd
outsl
pop
cs
dec
sub
push
push
ret
jae
mov
cmc
mov
out
jmp
sub
adc
cmp
nop
pop
mov
das
jns
lcall
xor
pusha
fstps
or
fs
push
push
mov
mov
loope
inc
std
xlat
scas
fnstcw
fimull
cltd
xchg
add
pop
push
loope
fucomip
inc
jbe
lret
iret
loop
push
add
pusha
popl
hlt
inc
fwait
push
mov
jnp
and
pop
xor
mov
iret
testl
scas
test
sbb
xor
push
jecxz
push
xlat
inc
cli
mov
in
dec
fimull
adc
inc
in
dec
fmuls
inc
add
shll
and
jmp
push
es
cmp
and
out
and
bound
pop
inc
jbe
imul
push
dec
icebp
dec
pminub
mov
fs
imulb
adc
push
dec
cs
sbb
repz
jl
shll
push
add
repnz
aam
lahf
imul
jge
and
sbb
pop
arpl
fsubrl
cmpsl
jmp
imulb
imul
inc
cld
adc
sub
pop
int3
leave
popf
ret
data16
inc
lcall
push
es
sub
jg
sub
or
mov
add
addb
inc
jp
sbb
push
jb
fnstcw
pop
xchg
dec
sbb
je
cli
lahf
pop
xchg
sbb
push
into
aad
test
sub
push
pop
sti
pop
fnstsw
cmpb
ljmp
shrl
push
mov
pop
push
and
add
pop
test
stos
shr
test
loope
pop
sbb
out
fsubs
jp
nop
push
jnp
rcrl
cmp
fs
add
cmc
xor
shrl
mov
js
loope
gs
cmpsl
cmp
sub
notl
jmp
cld
sub
pop
mov
xchg
in
bound
in
push
pop
lret
outsb
clc
pop
xlat
ret
rorb
cmp
ss
dec
and
cli
sti
imul
mov
xor
movl
stos
pop
xchg
aaa
mov
pop
push
stos
arpl
inc
ret
jo
cwtl
lea
mov
add
bound
add
inc
insl
outsl
mov
test
cltd
lret
loop
cltd
gs
jb
mov
shlb
mov
lret
in
push
push
aam
mov
les
lret
rclb
push
lret
push
mov
js
out
lods
mov
test
lods
stc
sbb
aas
int
add
pusha
pop
repz
jl
push
in
xchg
xor
imul
cmpsl
inc
aad
sub
inc
je
test
popf
jge
subb
or
lock
pushf
mov
dec
dec
mov
mov
push
cmp
fucomp
jp
pop
in
idivl
ret
out
fistps
inc
insl
sub
fiaddl
add
loop
out
pop
inc
mov
popf
jg
jne
push
add
xor
arpl
les
int3
fadds
xchg
dec
mov
xchg
or
xor
xor
mov
jge
sbb
icebp
mov
pop
xchg
bound
cmp
mov
les
test
cmp
jns
jecxz
testl
nop
xchg
fildll
mov
mov
cmp
mov
mov
movsb
mov
add
mov
enter
sub
adc
scas
mov
sahf
dec
add
dec
test
pop
and
sbb
push
mov
ret
xor
and
lods
sbb
addr16
push
les
xchg
movsl
adc
and
inc
mov
or
add
ret
nop
cmp
daa
jmp
dec
pop
sub
mov
xchg
mov
add
lds
push
or
pusha
les
adc
lret
test
xchg
jno
stos
outsb
xor
pop
test
inc
or
add
add
add
adc
jns
loope
xchg
push
xchg
ret
test
mov
cld
or
jl
incl
in
cmp
cmp
xor
in
pop
mov
vmread
xchg
cmp
popa
or
pop
mov
adc
sub
mov
out
sbb
mov
nop
adc
jns
adc
mov
push
cmp
add
inc
ret
ds
insb
mov
jmp
lahf
lcall
mov
imul
pop
dec
mov
fnstenv
mov
pop
jecxz
arpl
jl
mov
push
xchg
jne
cmp
in
sub
out
in
adc
pop
rorl
add
test
jl
and
dec
lods
lods
lods
adc
jp
jge
lock
xchg
shlb
sub
add
jnp
pop
daa
jl
out
stos
int3
lea
sub
cmp
xor
mov
pop
stc
pop
pop
aaa
daa
shr
or
inc
add
sahf
mov
movsl
shlb
lahf
sub
inc
outsb
push
mov
mov
test
stos
inc
push
xor
inc
test
out
lea
jge
sbb
xchg
xchg
stos
or
mov
mov
aas
cmpl
scas
jmp
dec
dec
dec
test
icebp
push
movsb
inc
cwtl
xchg
insb
push
and
push
cwtl
fsubl
mulb
leave
ljmp
pop
cmp
ja
bound
mov
sub
arpl
dec
xchg
inc
inc
mov
jbe
pushf
push
mov
sbb
leave
jbe
push
xlat
addr16
mov
add
adc
aad
xchg
dec
insb
iret
int
push
jecxz
pushf
pop
pop
cltd
mov
and
mov
insl
inc
arpl
fistpll
pushf
mov
sbb
daa
divb
sahf
dec
mov
inc
adc
adc
xchg
dec
sahf
scas
shll
mov
mov
and
mov
lods
out
inc
pop
cmp
arpl
ljmp
sub
mov
sbb
adc
cmp
aas
decb
pop
or
dec
enter
ret
or
out
mov
pop
sbb
rolb
pop
movsb
inc
push
not
and
and
jns
leave
push
cmp
adc
adc
sahf
push
test
mov
sbb
xor
and
arpl
pop
mov
pop
inc
gs
loop
push
std
pop
xchg
lods
test
xchg
xchg
inc
addr16
jns
addr16
stos
xlat
cmp
popa
mul
or
jne
xchg
andb
sub
daa
xor
fldenv
fs
js
xchg
jno
cmp
pop
into
push
scas
cmc
ljmp
add
pop
out
dec
lret
or
es
mov
mov
lods
stos
addb
popf
pusha
leave
fsubl
lea
jecxz
xor
cmp
and
push
imul
cmpsl
dec
pop
test
enter
jo
xor
xor
cltd
lock
pop
inc
lock
addr16
mov
jp
sub
sub
rclb
shrb
das
sub
pop
inc
xor
push
sub
arpl
nop
adc
mov
fstpt
sub
movsb
hlt
mov
repz
push
xchg
push
lcall
roll
gs
pop
dec
xchg
dec
inc
mov
int
xchg
out
scas
dec
mov
pop
pop
out
jmp
mov
sbb
icebp
push
jmp
pop
mov
scas
mov
mov
data16
push
pop
fists
in
fisttpll
cltd
inc
sub
ljmp
test
cltd
pop
jp
es
pop
push
daa
xor
push
xor
fwait
cmc
push
stos
push
or
add
mov
xchg
stc
xor
dec
cmp
mov
lcall
add
jne
les
jp
cmp
enter
nop
call
testl
ljmp
ljmp
push
mov
sbb
mov
lea
fwait
imul
mov
ljmp
pusha
cli
sub
sub
popf
and
popaw
fucomi
dec
add
sbbb
into
mov
mov
mov
out
in
dec
cld
mov
jns
sbb
dec
inc
sub
scas
sahf
sarl
lret
mov
sahf
xchg
add
ret
sub
dec
inc
xor
mov
xor
sbb
es
cmpsb
cltd
int
dec
vmulss
outsl
pushf
jae
aaa
loopne
sahf
xchg
pop
mov
dec
sbbl
pop
subb
dec
xchg
xor
inc
fsub
mov
cmp
aad
jge
data16
push
sbb
aam
icebp
or
mov
push
push
push
and
arpl
les
frstor
out
xor
cmc
arpl
std
ss
or
fcoms
inc
dec
imul
aam
lcall
int
sbb
pop
jge
repz
jp
and
jns
lods
enter
sahf
fmuls
cmpsb
shll
in
pop
ss
xor
dec
pop
lret
out
pop
rcrl
cmpl
pop
enter
aam
repnz
out
imul
ljmp
jp
jbe
mov
in
faddl
shr
mov
jle
std
adc
shll
dec
in
ja
mov
aaa
jnp
xor
pop
nop
mov
in
push
sbb
pop
lea
sbb
aas
mov
std
pop
mov
mov
pusha
lret
xor
sbb
or
fucomp
andl
insl
leave
or
pop
loope
mov
loopne
loop
or
fisubs
ret
dec
ret
js
mov
mov
rolb
add
inc
or
je
ret
sub
andb
jno
cmc
test
sub
add
mov
js
mov
mov
aas
mov
add
or
or
xchg
lahf
add
xorb
ret
xchg
pop
nop
push
movb
mov
xor
inc
js
loopne
ret
adcb
insl
mov
inc
fstpt
je
aam
orl
sbb
hlt
imul
les
mov
jo
inc
cmp
lds
adcl
add
sub
iret
or
shlb
mov
jp
cmp
fcoms
sbb
jle
sbb
push
loopne
add
daa
sti
pop
pop
cmp
in
ja
sub
mov
pop
pop
xlat
dec
add
ds
dec
lea
rclb
mov
pop
aam
xchg
cmpsb
daa
xor
lret
loop
fidivs
cmc
pop
dec
cmc
adc
add
cmp
push
test
push
inc
jne
mov
scas
xlat
mov
call
outsl
mov
pop
jl
prefetcht0
add
popf
daa
and
ja
nop
repz
pusha
xchg
shlb
stos
ficoml
movsl
pop
jnp
imull
bound
inc
inc
mov
mov
gs
ja
push
push
fstps
push
xchg
lock
and
mov
test
in
pop
cmpsb
stc
add
in
sub
and
daa
aaa
data16
mov
push
push
test
lock
out
adc
jbe
push
fsubrl
pop
rcrl
xchg
cmp
jbe
jne
sbb
mov
pop
push
mov
addr16
xor
aas
and
sub
or
movsl
cmpsw
test
out
mov
loopne
lds
xchg
les
jge
push
enter
mov
and
push
lods
sub
xor
adc
out
add
lock
adc
xchg
or
das
jae
sbb
or
xor
sub
mov
cmp
ljmp
xor
or
jns
jmp
mov
fmull
test
into
cmp
shlb
mov
movsb
imulb
cmpsb
gs
dec
std
int
sbb
pusha
push
jl
add
xchg
insl
push
imul
xlat
loopne
scas
mov
or
in
int
out
sahf
sub
add
mov
aad
pop
mov
cmp
popa
jge
add
inc
call
cs
data16
mulb
add
push
or
mov
stos
frstpm(287
sbb
test
adc
sub
lods
lea
notb
mov
stos
jg
push
mov
sbb
arpl
or
fyl2x
xor
and
outsb
inc
xchg
movsl
clc
addr16
mov
add
enter
ja
jne
mov
insl
jno
dec
sahf
sbb
notb
in
lds
sub
outsl
lock
and
xchg
and
adc
out
shlb
into
sub
inc
inc
rdtsc
add
jmp
mov
shl
mov
mov
sahf
push
popa
sub
inc
insb
cs
add
das
push
dec
idivb
cmp
push
fucom
inc
push
or
lea
out
dec
inc
fimuls
scas
adc
xor
or
ds
int
addr16
sub
cmpsl
mov
aaa
cli
mov
sbb
xorb
or
mov
jle
pop
sbb
dec
ja
cmp
aas
adc
call
lock
out
mov
sahf
push
shll
loope
dec
mov
or
insl
add
loopne
hlt
push
dec
das
aas
fistpl
dec
cmpsl
jle
fldt
mov
pop
push
pop
sgdtl
add
sub
jae
jmp
fs
out
jo
cltd
in
and
jg
fwait
popf
mov
adc
imul
and
adc
and
sar
test
and
inc
add
cwtl
xchg
stos
movsl
outsl
mov
xor
clc
jg
add
mov
rorl
or
out
cmpsl
push
imul
aaa
mov
test
adc
icebp
jno
aaa
inc
jns
cmp
rorb
adc
mov
add
inc
cmp
out
loopne
jae
aad
mov
jne
cmp
add
test
cmpsb
cmpsl
adc
rorb
or
jnp
sahf
clc
mov
inc
xor
bound
iret
push
push
popf
out
addr16
sbb
ss
cmp
mov
xchg
cmp
mov
jb
rclb
or
pop
mov
iret
out
xor
and
jl
pop
xlat
push
ja
add
pop
sbb
inc
add
mov
ret
add
cmp
push
dec
pushf
testl
inc
cli
lods
dec
and
adc
scas
inc
inc
into
loopne
push
dec
pop
and
mov
test
adc
decl
dec
adc
sar
fadd
jne
cmp
mov
lea
sub
add
pop
xor
scas
push
pop
mov
dec
les
xlat
stc
inc
pop
pop
dec
mov
outsl
enter
mov
jg
imul
enter
js
sub
scas
or
ret
xchg
adc
xor
xchg
bound
lods
lret
es
pop
enter
sti
lret
lds
push
push
int3
cli
imul
imul
pop
and
movsb
sub
jle
jbe
in
and
enter
inc
pushl
and
movsl
sti
int3
pop
jg
cmpsl
psubusw
popa
sub
add
jmp
test
inc
push
adcb
xor
sub
xchg
jae
sub
imul
aas
push
imul
aad
xchg
iret
neg
out
push
std
cmp
jle
in
fs
fs
jl
xor
add
adc
out
leave
push
pop
adc
subl
ljmp
mov
sub
aam
dec
clc
stc
push
xor
cmp
sahf
add
jne
or
and
sbb
jmp
dec
rcrl
dec
and
sub
sub
fdiv
push
xchg
insb
in
movsl
mov
pop
or
int
fmul
push
andb
cld
lds
xchg
and
inc
js
out
sbb
inc
pop
int3
jns
jns
setbe
aaa
mov
pop
rcr
cmpsl
out
jle
sbb
fsin
mov
ss
lds
xchg
imul
popf
jb
push
xor
sbb
das
outsl
adc
lds
jo
sbb
sub
lret
inc
cwtl
push
in
cwtl
adc
pop
inc
cmp
add
mov
lea
adc
ds
cmc
cli
lcall
in
testb
push
xchg
cmpb
sbb
adc
or
push
jmp
add
mov
cmp
mov
sub
fsubrl
scas
mov
add
add
cmc
cmp
test
jbe
dec
dec
push
and
inc
dec
jnp
or
sbb
adc
xor
negb
daa
repnz
or
or
daa
adc
pop
push
iret
cmp
scas
xchg
jp
cmp
pop
mov
das
sub
xchg
and
jns
add
mov
jge
negl
sar
sbb
sahf
mov
xchg
fildll
pop
pop
in
filds
mov
jb
mov
push
add
in
dec
xchg
or
pop
sub
push
movsb
enter
insb
add
push
daa
inc
mov
sahf
jae
mov
sub
xchg
xchg
push
push
mov
pop
icebp
insb
cwtl
push
xor
add
sbb
inc
adc
int
sub
clc
push
fcoml
cld
cmp
jmp
leave
pushf
movsl
cwtl
xchg
mov
jnp
dec
push
int3
pushf
mov
cs
insb
sbb
lret
push
xchg
into
imul
arpl
int3
cmpsl
ss
xchg
and
mov
mov
and
fadd
mov
pop
lcall
loope
jbe
jb
add
mov
rcrl
shll
addr16
push
cmp
mov
mov
es
pop
addr16
xor
rorb
pushf
xor
mov
testl
and
sub
inc
jno
and
mov
shld
mov
pop
sub
cli
ja
call
mov
lret
push
add
insb
jge
cmc
shll
xor
imul
inc
adc
mov
gs
pop
inc
mov
mov
jnp
sbb
cwtl
mov
xchg
ret
push
adc
pop
call
xchg
adc
mov
rcr
dec
bound
adc
push
mov
cmp
dec
xor
mov
out
pop
and
mov
inc
sub
bound
xor
out
dec
xchg
cmp
xchg
aam
mov
xor
pusha
pop
push
cmpsb
sub
iret
push
sbb
push
jle
or
ret
add
fsubp
jno
stc
orl
pop
rorb
icebp
sub
push
repz
dec
mov
xor
pop
lock
sub
in
cmp
popf
pop
inc
das
mov
xchg
hlt
std
jecxz
adc
xchg
fimuls
cli
push
sbb
les
dec
fdiv
movsl
lahf
xchg
adc
pop
fnsave
cmc
inc
stc
xor
je
add
xor
cmc
mov
and
shrb
xchg
shl
sti
mov
lds
rep
push
mov
or
dec
jecxz
mov
out
gs
xor
jmp
sub
sti
cmp
jge
inc
xchg
mov
int3
fdivr
jne
nop
inc
lods
ret
out
lods
movsb
sarl
xchg
iret
dec
mov
add
jnp
mov
mov
mov
clc
mov
push
push
nop
dec
mov
movsb
lahf
movsb
push
scas
inc
cmp
pop
aad
sbb
pop
mov
into
ret
adc
mov
xor
in
mov
hlt
pop
fstps
das
into
and
sbb
mov
outsb
rcll
stc
xchg
addb
xchg
clc
sarb
bswap
in
rorl
and
mov
cmp
mov
or
mul
jne
mov
adc
inc
pop
loope
stos
arpl
stc
adc
insl
push
xchg
lret
cld
adc
xchg
jge
adc
test
pushf
movl
jl
push
mov
push
enter
pop
mov
adc
xor
cwtl
outsb
inc
jnp
cmp
mov
enter
rolb
popa
cmc
es
hlt
jg
jmp
int
dec
sub
in
test
lahf
xchg
std
dec
movsb
jge
sub
pop
pop
std
fs
pop
xchg
fidivrl
rcr
push
clc
lret
push
out
mov
xor
test
jo
mov
roll
aas
fisttpl
int3
jne
out
iret
in
and
pop
add
andb
fnsave
pop
xchg
popa
js
cmp
push
shll
dec
jne
adc
shl
inc
push
cmp
jecxz
mov
sahf
push
stos
dec
mov
aad
jne
lock
cwtl
lsl
rcrl
mov
cmp
shll
push
mov
adc
pop
add
lret
ljmp
jo
and
enter
mov
push
adc
insl
stos
int3
lcall
inc
dec
les
es
mov
xchg
jmp
fprem
jae
stos
mov
scas
cmpsb
mov
aas
mov
or
cli
in
fldt
mov
add
sub
mov
jbe
popf
jmp
scas
mull
fidivrs
repz
jbe
insl
push
adc
cmp
sbb
gs
jecxz
test
addr16
js
inc
add
cs
fucomip
std
mov
bound
in
incl
repz
lcall
pop
jl
adc
in
mov
xchg
scas
inc
cli
pop
shrl
sahf
cmp
inc
add
les
test
rclb
insb
or
cmp
xchg
aad
in
or
mov
movsl
das
loop
aam
and
inc
and
popf
pop
or
test
inc
fdivr
mov
inc
test
dec
fmuls
xchg
hlt
pop
mov
cwtl
enter
xchg
fadds
xchg
fistps
mov
or
cmp
jmp
cmp
mov
sub
movsl
shlb
shrb
das
jp
mov
loope
jle
inc
mov
jle
xor
mov
icebp
insb
cmc
gs
hlt
xor
pop
jo
std
lock
cmp
daa
push
imul
or
out
jb
inc
ret
sbb
pop
in
popa
jle
dec
loop
add
fwait
dec
jo
data16
push
lret
adc
addr16
push
mov
jnp
out
jl
mov
movsl
and
pop
xchg
nop
insl
push
cmp
dec
das
add
or
dec
int3
jb
mov
xchg
cli
inc
jle
sub
dec
stc
fdiv
out
cwtl
mov
into
negl
test
adc
loope
movsb
xchg
testl
repnz
cli
rep
mov
mov
xchg
nop
cmp
mov
loopne
inc
ror
lret
sbb
jbe
push
fninit
pop
vdivps
mov
inc
push
idivl
add
adc
push
cltd
bound
xchg
push
mov
lret
cmpsl
iret
icebp
fistl
xchg
adc
mov
dec
add
xor
xchg
out
adc
xchg
and
cs
push
mov
dec
push
pushf
loop
imul
push
jmp
loop
imul
fimuls
pop
lds
imull
adc
lds
ja
sub
clc
pop
inc
push
jecxz
or
pop
leave
push
imul
or
jecxz
mov
shl
mov
andb
dec
jmp
iret
data16
mov
and
int3
jle
stos
or
ja
fisubrs
jno
mov
mov
int3
cs
mov
jecxz
fnstsw
inc
cmp
mov
mov
adc
loope
cmp
mov
call
paddusb
mov
test
sbb
int3
sub
stos
sbb
repnz
test
jmp
fwait
inc
sbb
scas
rcrb
aaa
rclb
jb
pop
fwait
inc
pop
fs
mov
push
mov
ficoml
jmp
rorl
inc
loop
js
sbb
call
outsb
adc
mov
ja
lock
fbstp
mov
aas
data16
aas
jle
dec
jno
fcoms
mov
repz
dec
mov
pop
js
mov
mov
lahf
and
aas
jg
jbe
mov
jno
jnp
shll
mov
jg
jb
pop
add
jne
xor
daa
inc
mov
addr16
scas
rol
lret
xor
add
shl
jg
xchg
idivb
pushl
dec
sbb
jmp
leave
mov
lods
roll
mov
push
sbb
pushaw
lods
push
cwtl
inc
test
ja
cli
ret
xchg
movsb
out
xchg
pop
add
test
xor
fldcw
cmpsb
mov
mov
and
add
push
ret
rcrb
sbb
xchg
cmpsl
negl
sbb
fmull
icebp
adc
int
data16
bound
add
data16
stc
insb
adc
pop
add
subb
icebp
aas
sahf
jg
cmc
inc
sbb
dec
pusha
ficoms
push
pop
and
jge
data16
mov
adc
jp
scas
clc
orb
loop
jmp
lret
cltd
ja
lods
data16
inc
xor
sub
lret
faddl
outsb
mov
sbb
mov
pop
mov
push
adc
movsl
lock
add
mov
sub
in
cmpsl
rcll
mov
inc
cld
and
ja
sar
and
sub
dec
lcall
cld
sti
mov
pop
data16
adc
jg
loopne
jecxz
lret
rol
scas
leave
int
test
sti
inc
out
xchg
inc
adcb
mov
jmp
adc
movsl
pusha
lahf
adc
iret
test
pop
xor
and
fists
dec
and
push
out
add
cmp
fsubs
jbe
aad
iret
push
rcl
adc
push
xor
das
and
adc
pop
scas
mov
xlat
jne
mov
out
push
xchg
das
out
jg
sub
outsb
cmp
mov
sti
out
mov
jo
add
iret
xor
sub
adc
jle
stc
cmc
mov
iret
cmp
adc
movsl
inc
push
jmp
inc
sbbl
into
cmp
jb
sbb
push
and
dec
mov
mov
push
aam
mov
pop
mov
sub
jns
loopne
loop
ss
subl
fdivl
and
mov
icebp
imul
loope
test
pop
xchg
out
stos
cs
xor
mov
mov
mov
daa
xchg
xchg
lcall
in
mov
dec
push
mov
icebp
hlt
repz
mov
test
mov
js
adc
or
out
mov
lret
js
aad
bound
scas
imul
int
sbb
mov
scas
out
rcrb
sub
sbb
aaa
iret
mov
adc
out
gs
dec
aam
xlat
mov
imul
jbe
mov
movsl
or
mov
sub
xor
inc
in
mov
cmp
and
loop
push
scas
loop
dec
pop
xchg
jbe
cli
call
jp
aam
fimull
jb
jo
in
loop
jns
xchg
xor
sahf
decb
cmp
jo
adc
iret
test
imul
in
loop
in
jecxz
sub
push
adc
test
cmp
call
adc
jnp
xor
divl
inc
fs
sub
mov
pop
pusha
andl
mov
mov
lock
cmc
mov
jmp
push
and
jge
subl
mov
adc
je
clc
lcall
js
outsl
pop
ss
xor
es
jbe
sti
mov
mov
jno
mov
mov
lods
push
and
inc
push
jo
xor
xor
sahf
push
shrl
cmp
stos
jo
xor
pop
dec
out
xchg
mov
mov
pop
pop
mov
lea
sub
mov
xor
push
and
add
leave
fsubr
cli
pushl
jmp
cmp
ficompl
jo
xlat
and
push
mov
jns
xlat
inc
loope
mov
xlat
push
mov
cs
xor
mov
and
int3
jne
call
fldcw
cmp
popa
mov
popf
sbb
aas
ud2
lea
mulb
das
push
pop
add
sbb
pushf
adc
call
fldl
enter
hlt
and
inc
push
popa
sub
sub
movsb
repz
faddl
lods
mov
dec
xchg
push
xlat
push
mov
pop
inc
jg
inc
sbb
mov
sub
or
adc
lret
es
inc
cwtl
insb
iret
xchg
mov
movsb
shlb
push
push
sbb
iret
xor
ja
xchg
movsl
sarb
sbb
int
sub
fdivrp
sub
xchg
sarb
jg
inc
movsl
add
mov
jo
inc
adc
addr16
sbb
lcall
repnz
das
jnp
sbb
xchg
into
adc
daa
gs
fidivs
dec
fmuls
mov
and
shlb
push
call
mov
jg
mov
rclb
cmp
lods
xchg
and
les
aas
ss
pop
int
mov
aas
stos
filds
add
es
stos
dec
test
test
and
loop
cmp
push
cmp
dec
adc
icebp
jo
xchg
or
mov
rclb
cmovo
loop
pusha
mov
mov
cmpsb
xlat
mov
fistpll
mov
ret
std
mov
ljmp
shrl
sbb
fisttpll
dec
cmp
sbb
iret
ljmp
push
les
or
xor
imul
jecxz
sub
lcall
xchg
mov
js
jns
je
popa
sub
in
fimuls
aaa
loope
pushf
insb
mov
test
mul
shlb
sbb
out
or
outsl
add
mov
je
gs
or
and
xlat
mov
mov
arpl
pop
arpl
arpl
xchg
into
out
loopne
dec
push
jge
xchg
fstpl
inc
push
mov
xchg
inc
add
xchg
push
xchg
fcmovne
ss
ficomps
mov
mov
mov
xchg
sbb
xchg
adc
inc
enter
sahf
pop
sbb
mov
lock
xchg
jbe
mov
aaa
aam
mov
scas
scas
rorb
lds
jnp
xchg
je
loop
cld
clc
jmp
or
rcrb
lahf
in
mov
and
mov
das
pushf
popa
movsl
sub
fs
cmpsb
lea
aam
adc
cmp
cmp
or
ljmp
test
fistl
insl
test
mov
adc
ljmp
mov
cltd
inc
mov
clc
adc
sub
std
jecxz
lcall
mov
and
add
cli
push
adc
push
push
mov
inc
addr16
test
xchg
mov
adc
scas
insb
cli
push
cwtl
add
out
pop
jne
into
fistl
roll
pop
and
insb
orb
mov
vcvtsd2si
imul
add
outsl
jl
repnz
nop
sub
out
or
cld
mov
pop
in
dec
outsb
popa
push
mov
out
stos
push
sub
fdivrp
jle
push
pushf
or
mov
gs
push
int
cmp
jl
inc
insb
jmp
lret
add
add
jnp
dec
push
lret
push
cmp
dec
sub
cmp
mov
loope
lock
and
sbb
pop
pushf
jbe
out
mov
sti
popa
xor
jle
lea
sbb
cmpsl
push
nop
lea
pushf
jbe
mov
std
daa
scas
insb
negl
jmp
ret
addr16
popa
sub
adc
je
testb
dec
das
inc
lret
dec
fcoml
sbb
stos
fs
clc
inc
gs
mov
xor
mov
and
std
add
adc
nop
pop
dec
inc
clc
fwait
daa
imull
adc
icebp
mov
lea
sbb
jnp
mov
xchg
dec
js
andl
sub
cmpsb
xchg
sbb
lea
and
lods
ljmp
cld
fisttpll
inc
jb
add
or
aaa
mov
leave
aas
add
imul
or
je
aam
iret
cmpsl
scas
and
push
push
xorb
push
dec
adc
mov
pop
daa
dec
xchg
popa
cld
and
js
icebp
pmaxsw
loope
ror
fildl
xor
popf
sbb
sbb
mov
mov
lock
mov
lea
ret
adc
xchg
jecxz
pop
or
pop
xlat
repz
int3
mov
cmp
mov
or
outsb
sub
andb
stos
enter
rclb
jmp
outsl
cmp
mov
ds
adc
cmp
stos
adc
lds
pop
xlat
jo
mov
add
and
pop
sub
or
roll
jo
pushf
cld
jge
sub
mov
inc
xchg
adc
xor
leave
xchg
adc
push
sub
or
or
push
and
xor
inc
adc
pusha
stos
lcall
dec
lds
lods
aaa
jae,pn
fwait
stc
aaa
inc
sub
dec
lret
jnp
in
mov
push
and
shlb
movsl
adc
and
dec
push
sub
jmp
xchg
mov
sarb
popf
shlb
push
add
fwait
clc
int
movsl
cmpsl
xor
push
dec
xchg
ret
xchg
cmp
adc
jno
insb
xchg
xchg
dec
push
aad
jnp
adcl
dec
pop
adc
push
cmpsl
lods
bnd
fstpt
push
js
scas
cwtl
dec
scas
pop
inc
or
xor
popf
aam
iret
mov
pop
enter
stc
ss
push
gs
or
les
and
sbb
xlat
test
pop
mov
push
addl
xor
xor
xchg
ret
pop
out
and
mov
scas
shrl
jne
cmc
fiaddl
pop
jmp
decb
lea
sahf
testl
das
subl
call
jns
sub
mov
xchg
lcall
mov
push
jae
inc
int3
outsl
aas
pop
pop
imul
dec
pushf
jns
outsb
inc
jbe
je
sub
inc
jns
in
int3
aaa
adc
pop
cmpsl
xchg
jmp
jo
xor
sub
add
insb
pop
gs
dec
jnp
jp
dec
adc
mov
fsubs
ja
cmpsl
aam
cmp
jno
ficoml
dec
pop
mov
sbb
jnp
xor
jmp
mov
inc
imul
push
dec
push
dec
int
out
cmp
xchg
shl
int3
std
int3
adc
and
dec
pop
push
lods
pop
insb
repnz
or
imul
push
out
scas
pop
mov
fsubrl
mov
mov
insb
das
icebp
les
pop
sub
cmc
dec
xchg
pushf
into
and
add
rorl
jp
jmp
mov
je
jns
inc
push
dec
int
insl
dec
leave
push
sarl
jbe
test
sar
mov
sub
lret
cli
pop
pop
imul
mov
icebp
clc
outsb
lock
sbb
lret
ficoml
mov
pop
lock
xor
sub
sahf
cmp
mov
mov
pusha
push
mov
clc
rorl
aam
jae
cmpb
in
cwtl
mov
sub
out
je
daa
and
fs
xor
in
dec
mov
sub
shll
pop
xchg
aad
dec
xchg
dec
mov
das
inc
add
push
clc
scas
and
or
inc
ja
mov
cld
rorb
mov
inc
data16
int
jo
push
ds
sbb
sar
mov
dec
movsl
sub
lods
inc
lahf
repnz
in
xchg
movsl
mov
loop
dec
scas
sti
scas
int
push
sti
xor
sbb
aam
inc
mov
das
cmpl
mov
loopne
repz
adc
add
jecxz
inc
cmp
xor
push
movsl
out
push
adc
iret
jg
cmp
xor
add
xchg
inc
cmpsl
or
enter
jl
and
arpl
push
fisubrs
loopne
gs
push
std
pop
aam
push
cwtl
out
add
insl
daa
xor
rclb
jmp
mov
inc
cmp
and
push
pop
or
mov
sbb
fdivrp
mov
fcmovu
dec
dec
stc
mov
and
mov
in
cmp
popf
test
outsl
mov
push
inc
jmp
push
pusha
sub
loopne
aam
xchg
xchg
inc
mov
inc
shl
xor
loop
outsl
sar
push
insl
adc
jl
into
xchg
push
mov
sub
ljmp
bound
ljmp
jp
in
sbb
push
mov
into
xor
scas
jmp
test
lea
mov
xchg
pandn
loop
pop
adc
and
ljmp
int3
sbb
sub
dec
mov
push
fildl
das
fldenv
push
outsb
cmp
push
fcoms
push
popf
mov
mov
jb
xchg
mov
xor
add
ret
enter
mov
xor
sub
add
incb
mov
stc
mov
pop
pop
and
mov
mov
xor
xchg
mov
sbb
add
adc
enter
push
insl
sbb
xchg
mov
aam
mov
fsub
adc
mov
sbb
or
sbb
dec
jno
inc
scas
repz
mov
sub
xchg
dec
in
add
stc
ficomps
loopne
movsl
icebp
jg
lds
es
insl
fistl
cs
lods
cmp
pop
and
cmp
mov
lock
dec
sub
mov
test
fisttpl
xchg
mov
and
jno
pop
adc
ret
repz
xor
adc
test
enter
inc
mov
out
mov
lcall
adc
and
mov
test
mov
mov
rorb
lret
cld
xchg
repz
push
mov
loopne
xchg
add
xor
cmp
pop
imul
xor
negb
cs
pop
ds
cmc
test
push
aas
or
cltd
jne
ja
icebp
push
or
mov
xlat
and
sbb
mov
xchg
sub
lods
and
xlat
mov
stos
leave
push
hlt
orl
scas
fcomi
push
call
mov
js
cmp
mov
jp
add
jbe
mov
xchg
and
cmp
jno
data16
popa
loope
out
enter
sub
or
outsl
loop
jb
push
inc
jne
push
xchg
lock
sbb
xchg
ret
out
inc
sub
aad
sbb
mov
xchg
push
jo
scas
aam
xchg
test
sub
mov
jo
leave
sahf
jle
mov
sahf
fs
sbb
fisubl
test
scas
and
cmp
hlt
mov
push
push
jno
dec
cli
loope
adc
jge
mov
mov
in
push
add
xor
push
push
adc
stc
add
xchg
jle
mov
pop
jp
cltd
mov
and
lea
pop
jg
pop
cld
fnstcw
int3
add
popa
push
mov
mov
icebp
pop
mov
fimull
or
les
mov
sub
push
pop
js
sbb
in
lea
and
stc
outsb
in
sbb
in
mov
fcmove
loop
adc
into
mov
mov
jno
push
in
jl
pop
sub
or
jge
aaa
xchg
push
in
testb
mov
lea
repz
sbb
fadds
or
or
adc
imul
pop
or
xchg
xchg
daa
mov
push
int3
mov
xchg
or
mov
xor
fdivl
push
inc
test
dec
adc
push
cmpsl
aaa
ljmp
jne
mov
rcll
lods
xchg
push
xchg
mov
lock
cmc
shrl
dec
lahf
xchg
shlb
push
xchg
outsb
inc
leave
mov
jecxz
adcl
fimuls
xchg
push
les
fs
out
ret
push
jle
in
mov
inc
and
mov
add
stos
pop
dec
push
cltd
dec
cs
bound
ja
in
mov
lds
aas
push
jl
sub
dec
push
cmp
cmc
neg
adc
mov
call
test
test
je
mov
ds
dec
lock
mov
mul
push
dec
inc
or
push
jne
dec
xorl
std
dec
fsubrl
mov
mov
jp
push
inc
ds
insl
test
and
shll
push
jne
test
push
lahf
adc
decb
xchg
add
sbb
dec
addb
ds
adc
mov
cwtl
and
jne
ret
icebp
mov
cmp
aaa
dec
lret
test
push
pushf
inc
inc
mov
jp
or
dec
mov
movsl
loope
push
xchg
fwait
push
or
insb
mov
fisubrs
push
dec
xchg
mov
stc
lahf
stos
or
cmp
nop
xlat
idiv
cmp
sub
sub
test
ret
xchg
ret
das
pop
int3
and
adc
push
lret
cmp
xchg
lds
adc
fldl
push
jle
rcll
xchg
aas
scas
lahf
jno
sub
sub
fdivr
stos
push
sbb
pusha
add
fwait
in
pop
stos
adc
test
pop
in
popf
in
imulb
scas
in
mov
pop
pusha
mov
lahf
inc
push
fcmovnu
jns
aam
ret
pushf
scas
insl
or
cltd
rcrb
dec
xchg
push
mov
mov
dec
aad
cmp
mov
pop
movsl
in
cmp
mov
enter
cmpsb
popa
in
pusha
test
and
test
dec
lret
clc
js
sub
jp
ljmp
leave
mov
pop
add
sarb
cmp
mov
lods
xchg
aam
sti
inc
es
imul
mov
ret
mov
outsl
aad
adc
pushl
adc
stos
outsl
and
adc
enter
aas
xchg
loop
data16
xchg
test
das
lods
les
adc
cmp
orl
mov
push
push
mov
test
cwtl
jl
outsb
mov
sub
outsl
fisttpll
inc
add
fcoms
fsubrp
js
dec
orl
in
lock
sub
fwait
int
or
sti
fidivs
fcoml
adc
dec
repnz
stc
jno
and
test
pushf
pop
lret
das
loope
test
in
rolb
fwait
pop
mov
scas
push
cli
fisubl
cmc
or
js
imul
movl
mov
dec
icebp
daa
repnz
jno
mov
and
add
cmp
in
loopne
fwait
and
ret
ror
notl
out
rcll
clc
or
push
or
xchg
jb
aaa
gs
aam
xchg
fwait
mov
loop
lret
mov
faddl
les
pop
test
fstpt
pop
mov
shl
push
in
in
dec
cmp
dec
or
push
sbb
popa
out
sub
in
movsb
mov
adc
pop
aas
add
mov
roll
mov
push
mov
dec
mov
and
xor
mov
xorl
dec
ss
paddd
sub
push
sub
push
lret
dec
cwtl
lret
lret
xchg
fwait
inc
imul
cltd
xor
or
inc
sbb
ficoms
dec
pop
and
mov
dec
mov
push
xor
pop
xchg
push
pop
jns
pop
inc
pushf
aas
aaa
pop
mov
rclb
aad
xor
push
mov
sti
clc
insb
jne
push
popa
pop
arpl
out
adcb
lods
cwtl
cs
out
fbld
notb
ret
and
and
cmpsl
fidivl
out
xchg
jo
pop
pop
inc
sbb
push
pop
aam
and
test
popa
js
sub
cmp
pop
cmp
movsl
fnop
mov
ja
pop
sub
mov
cmpsl
int
loop
scas
adc
int
js
inc
aaa
repz
jle
popf
mov
lods
add
int3
mov
dec
jge
sub
arpl
in
and
out
testb
pop
jecxz
iret
clc
or
loope
jbe
lret
outsb
dec
jge
and
inc
and
push
sbb
xchg
xor
mov
adc
pop
jo
xor
xchg
dec
push
sub
fs
in
and
fwait
mov
scas
fcoms
add
jl
mov
js
and
scas
sbb
xchg
sbb
cli
hlt
aaa
icebp
mov
pushf
cs
sbb
and
jle
adc
xor
add
imul
jmp
cmc
push
cmp
mov
cwtl
lret
or
lcall
push
add
ss
cmp
mov
or
dec
dec
es
cmp
test
lods
xor
mov
mov
push
sbb
fisttps
int3
jp
cltd
shlb
xlat
lret
stos
or
sbb
mov
movsl
mov
pop
cwtl
cld
cmp
mov
jne
test
adc
pop
clc
jb
mov
push
mov
xchg
sbb
mov
fstpl
imul
inc
pop
fwait
push
pop
test
pop
cmp
imul
mov
mov
fsub
lods
or
repnz
xchg
scas
push
movsl
jp
sbb
sti
pop
xorb
pop
mov
push
call
lods
shll
inc
cmp
pushf
push
mov
mov
ret
movsb
fs
xor
mov
sbbl
or
or
insb
fimuls
adc
mov
mov
push
mov
int
data16
cli
pop
push
insb
sub
les
out
es
push
mov
shll
out
cltd
inc
fidivrl
pop
mov
xchg
mov
sbb
mov
ds
mov
mov
jecxz
mov
lret
dec
arpl
insl
pop
xor
mov
shrl
xor
test
ret
mov
mov
mov
in
out
ret
fiaddl
cwtl
loopne
adc
xchg
xor
dec
loopne
and
cmp
mov
fdiv
loopne
add
pop
mov
jle
stos
cmp
cmp
pop
notl
sub
and
push
pop
mov
insb
out
dec
mov
cmp
sbb
adc
in
out
pop
mov
pop
and
pop
dec
clc
pop
imul
aaa
jle
leave
lods
jecxz
cmpsl
inc
aas
dec
add
gs
mov
push
xchg
nopl
gs
sub
imul
mov
aam
scas
clc
push
mov
filds
pop
ljmp
fldt
xor
cwtl
lahf
mov
arpl
inc
xor
clc
sbb
aam
dec
add
repnz
pop
push
cmp
repz
jns
pop
leave
sub
je
push
inc
ljmp
pop
pop
xchg
mov
loop
shll
out
mull
xor
cmp
sub
lcall
jnp
mov
pop
adc
gs
cmp
jo
adc
sub
mov
jnp
ss
xor
mov
mov
mov
push
jne
movsb
ftst
fcmovbe
push
sub
add
push
xchg
cli
dec
or
jp
inc
jecxz
push
mov
inc
ss
aas
ja
and
cmp
out
or
sbb
inc
sbb
or
jb
cmp
out
xor
cmp
bound
push
cmpsb
data16
mov
add
hlt
sub
shl
scas
jns
pop
or
fs
xor
rorb
sub
ror
pop
lahf
lret
jno
jge
push
pop
iret
test
pop
pop
mov
add
push
int3
icebp
add
cmp
js
ljmp
fcoml
xchg
ss
xchg
andl
or
push
fstl
push
adcb
sbb
pop
loop
stos
sbb
mov
and
cmp
push
push
shrl
cmc
cmp
jo
scas
in
mov
add
jno
xchg
fdivr
sahf
mov
testl
or
fildll
mov
enter
fstl
mov
mov
add
push
insb
mov
sub
sbb
cwtl
in
mov
daa
cmp
mov
push
adc
int
mov
or
out
push
dec
xor
jle
pushf
fsubrs
ljmp
dec
in
add
fnstenv
loope
fdiv
lods
fwait
push
xchg
sub
pop
cwtl
cli
repnz
mov
pop
push
outsb
inc
xchg
pop
cld
push
or
mov
adc
push
js
or
test
stos
add
push
sub
dec
sub
jnp
lret
xchg
aad
or
add
out
sub
rorb
xchg
adc
rclb
mov
scas
mov
aad
mov
mov
lret
jns
or
mov
stos
jb
adc
inc
sub
xchg
aas
repnz
push
adc
sahf
or
mov
fbld
in
sub
pop
es
pop
insl
xor
shlb
sbb
push
cli
mov
mov
ja
and
mov
add
jnp
push
cmp
dec
sahf
sbb
mov
xor
repnz
out
bound
sub
loop
mov
jno
xor
sub
cmp
mov
dec
jb
ret
jbe
scas
les
cmovbe
cmp
repnz
fwait
push
aaa
mov
bound
push
pop
sbb
cmpsl
cs
cmpl
mov
nop
mov
dec
ret
faddl
push
push
xor
cmp
cld
out
and
es
xchg
sahf
shlb
movsb
add
and
scas
adc
rcrl
pop
jo
and
cmpsb
ret
or
xchg
lods
mov
cmp
in
dec
jb
add
jl
fstl
js
pop
xchg
pop
test
add
pop
pop
stos
iret
rcr
sub
dec
vmulpd
cmp
sbb
sbb
push
int
cwtl
add
push
or
mov
and
mov
push
aas
cmpsl
popf
pop
lods
adc
rclb
ljmp
les
dec
xor
xchg
jl
ja
pusha
loope
fcompl
and
push
dec
pop
imul
push
cmp
add
stos
or
movsl
xor
inc
pop
ds
push
dec
sub
loopne
daa
out
int
inc
out
test
mov
pop
adc
nop
mov
loop
adc
gs
cmp
xchg
xchg
inc
xchg
shlb
add
jge
mov
outsb
or
push
push
push
xor
push
mov
into
jge
sub
out
aaa
lods
jge
cmp
lcall
jp
and
test
enter
ja
pop
faddl
lret
sbb
ret
xor
pop
sub
repnz
mov
cltd
aam
cmp
popa
ss
or
cmpl
cwtd
imul
jg
pushf
push
addb
push
mov
add
xchg
rcll
aaa
int
nop
adc
lods
ljmp
stos
lret
fmuls
pop
addl
aam
pop
das
cmpsl
icebp
push
fldl
push
jbe
xlat
stos
out
loope
gs
ja
repnz
icebp
or
jp
ss
adc
push
ljmp
shrb
fnstenv
mov
insb
ljmp
aaa
sbb
in
sarl
fwait
call
jno
or
cmp
sbb
cmp
inc
fists
and
test
push
ret
mov
pusha
push
push
push
jle
enter
push
movb
or
push
jge
sub
push
dec
out
clc
rorl
cmp
lock
pop
int
sub
push
insl
cmp
or
mov
push
dec
pop
push
jge
shr
ror
pushf
fsubrs
clc
daa
inc
ror
cmpsb
mov
and
pop
test
neg
jecxz
and
push
or
sarl
pop
stos
inc
mov
rclb
lret
fdivrs
aaa
in
and
and
xchg
es
movsl
sar
fdivrs
xchg
nop
jno
mov
cwtl
cli
ja
in
in
pop
xor
xchg
int
sbb
add
scas
add
sub
fwait
xor
dec
adc
mov
pop
adc
mov
jecxz
gs
cli
call
mov
push
cmpsb
push
fbstp
imul
or
and
ret
out
and
stos
or
cmp
xlat
xor
mov
int
cmp
mov
push
or
stos
daa
push
movsb
jno
jo
dec
fwait
inc
add
push
push
push
jle
xor
inc
xchg
push
out
sbb
sahf
fildll
adc
jle
addr16
outsl
repnz
sbb
sub
scas
rcll
rorl
fsubrl
mov
popf
pop
push
cmp
loopne
inc
sub
xchg
cmpsl
or
bnd
mov
cld
loopne
and
enter
ds
lock
call
inc
mov
fsubl
and
aaa
insl
out
adc
or
push
mov
dec
jmp
push
and
inc
pop
je
out
and
cwtl
push
aam
add
movsl
dec
xchg
fcoms
push
ljmp
xor
sub
sbb
gs
inc
testl
scas
aad
in
pop
add
rol
add
data16
sbb
push
push
lds
inc
pusha
shrl
mov
push
out
je
xor
mov
insl
jne
or
int
scas
out
or
fldt
cmp
cmpsb
pop
mov
fisubl
mov
rcl
pop
jmp
mov
shr
loop
jmp
pop
ljmp
scas
ret
out
add
jb
and
mov
push
mov
outsb
insb
dec
repz
inc
fdivrp
jns
xor
mov
push
incb
sub
pop
pop
cmp
out
inc
xor
pushw
das
lcall
divb
cmp
sbb
nop
repnz
or
mov
jmp
xor
fidivl
jbe
mul
fwait
jo
ret
jle
jbe
stc
sub
mov
nop
fisubrs
in
mov
cld
movsb
inc
lret
pop
fmulp
jecxz
mov
test
and
xlat
cld
xchg
sbb
sbb
mov
jne
pop
fisubrs
mov
adcl
dec
ljmp
mov
loope
pop
mov
stos
cmp
outsb
gs
push
rclb
fwait
rcl
lret
fstpt
inc
jno
arpl
cmp
cmc
addr16
jbe
xor
inc
push
jle
rorb
shr
xchg
movsl
repnz
pop
jecxz
jp
add
cmp
sub
mov
cmp
out
nop
repnz
sbb
js
ficoms
leave
fwait
out
in
gs
jl
mov
popa
push
mov
xchg
fnstenv
dec
jl
rol
cmp
sub
fbld
adc
mov
mov
mov
scas
mov
pop
adc
int
in
sbbl
pop
pop
cmp
xchg
jmp
push
aad
in
pop
and
cmp
pop
jge
sahf
movsl
sub
inc
mov
negl
sbb
int3
std
and
inc
arpl
cwtl
pop
and
jnp
push
add
xor
nop
mov
pop
xchg
pop
stos
xorps
adc
icebp
lcall
mov
negl
fmuls
shl
or
add
ds
sub
data16
mull
ds
mov
mov
in
int3
in
adc
xchg
stc
or
mov
sarb
jge
sub
insl
out
sub
jb
sbb
cwtl
call
xor
push
xlat
mov
xor
push
cmp
sahf
xchg
xchg
out
mov
imul
fstl
std
enter
adc
test
xchg
xlat
xor
mov
leave
push
xor
xlat
pop
cmp
repnz
pop
cmpsl
xorl
add
inc
test
in
mov
dec
pop
push
jbe
lahf
nop
ret
aam
sbb
xor
add
xor
jl
dec
lock
and
adc
mov
inc
pop
mov
ds
adc
or
sbb
xchg
inc
dec
add
jb
xor
scas
cmpsb
mov
in
out
jb
mov
fbstp
pop
adc
fidivrl
mov
mov
ss
mov
in
sarl
push
cmp
sub
out
imulb
popf
lods
jbe
push
sbb
cmpsb
iret
testb
scas
mov
std
das
add
loope
clc
dec
iret
cmp
inc
out
sub
punpckhbw
out
sbb
sbb
in
mov
lock
push
inc
push
push
add
ja
mov
lea
in
dec
cmp
jmp
sbb
mov
xor
or
mov
fcomip
adc
xchg
flds
sub
dec
and
push
mov
repz
es
into
clc
test
inc
cmc
fimuls
xchg
gs
sbbl
mov
test
aaa
aaa
test
inc
insl
mov
ds
pop
jge
jmp
mov
mov
test
imull
movsl
and
adc
out
mov
mov
or
inc
fsub
mov
xor
js
and
enter
pop
int
pop
xor
sarb
imul
sub
filds
fldcw
lds
popa
int3
pop
bound
pop
pop
cmpsl
push
mov
shlb
shlb
leave
jp
jecxz
je
xor
outsb
xchg
rclb
mov
nop
in
outsb
adcb
outsb
fs
cmp
pop
cli
js
fldt
rcl
dec
ljmp
imul
negb
pop
xorl
dec
or
inc
cs
push
add
or
cmp
dec
push
orl
lret
imul
mov
mov
scas
add
cmp
div
out
cwtl
outsl
pop
add
clc
push
into
cmp
inc
xchg
movsb
dec
xchg
cmpsl
aaa
pop
dec
xlat
sub
dec
sub
jno
imulb
jbe
ja
test
dec
mov
fnsave
add
cmp
cltd
ds
ljmp
sub
fsubp
mov
xlat
xor
pop
stc
push
add
mov
push
or
jne
cmc
jbe
adc
cmp
lret
push
xchg
push
fwait
pop
stos
adc
fdivl
mov
sbb
add
add
and
pop
xchg
imul
jmp
mov
lock
ss
xor
jo
push
mov
jl
and
dec
mov
jl
sub
sbb
and
mov
ja
stos
leave
cld
sbbb
out
fcmovnbe
and
in
out
lea
mov
es
sbb
lcall
icebp
mov
push
lea
int
orl
ds
jmp
pushf
inc
pop
fdivl
sarb
or
insl
call
call
or
roll
adc
push
and
ljmp
int
pop
cmp
test
xchg
mov
testb
rcr
mov
add
sbb
daa
xchg
lcall
scas
jmp
imul
xchg
jp
loope
adc
das
pop
stc
xchg
pop
or
or
mov
rclb
jb
add
mov
pop
xchg
lock
insl
stc
and
jb
mov
sub
cld
mov
out
mov
or
dec
jmp
call
pop
ja
pop
js
mov
xor
test
stos
and
popf
repz
test
xchg
push
mov
jg
xor
adc
cmc
jb
xor
mov
aaa
dec
sbb
sub
jmp
xchg
fldl
in
mov
das
push
les
push
cli
inc
jg
push
data16
addr16
hlt
xchg
push
out
pop
fdivrs
cwtl
in
push
and
cs
push
sbb
jmp
cli
cmp
adc
sub
call
movsb
cld
mov
lcall
and
sub
xchg
enter
pop
mov
jae
xorb
popf
and
lfs
mov
loope
add
iret
cmp
push
stos
in
cmp
arpl
ja
add
nop
out
cmp
inc
in
mov
inc
or
das
add
stc
cmp
repnz
inc
lahf
jbe
aas
mov
xchg
inc
aas
outsl
loopne
cmp
jmp
push
in
imulw
std
xor
dec
sbb
add
aas
adc
push
btr
fistpl
cmpsb
mov
cmpsb
adc
imul
mov
jne
mov
test
xchg
push
inc
ret
les
mov
pop
dec
call
std
out
fs
mov
add
add
andl
lret
cmp
notb
popa
fisttpl
add
or
add
in
jns
inc
aam
js
out
sbb
into
pop
negb
add
idivb
data16
fnstsw
jno
push
iret
dec
mul
and
pop
inc
int
test
xchg
add
dec
sub
and
jl
sbb
ror
fld
jmp
dec
jo
dec
aas
aaa
or
mov
add
dec
push
ja
xor
stc
daa
pop
andb
loope
push
dec
dec
pop
mov
mov
addr16
jnp
mov
vandpd
stos
push
test
push
mov
ss
jbe
add
cltd
fnstsw
and
movsl
pop
mov
mov
das
ffree
mov
ret
es
pop
fprem
pop
adc
adc
leave
mov
sub
mov
add
out
dec
outsl
xor
xor
shrb
repz
jl
ret
mov
fimuls
sub
adc
arpl
adc
or
aad
inc
mov
sub
pop
mov
pop
mov
enter
and
pop
add
xchg
addr16
mov
sahf
lahf
sbb
cmp
jge
xchg
add
inc
adc
push
pusha
rorl
adc
and
ja,pn
add
dec
out
push
inc
cs
or
dec
cmp
adc
sbb
addl
add
int3
xchg
ljmp
sarb
push
add
sub
nopl
mov
stos
sbb
dec
sub
add
add
cltd
mov
adc
fmull
pop
sub
cmpsb
xchg
xor
imul
push
test
push
in
pop
mov
jo
pop
adc
mov
dec
dec
test
sbb
std
sbb
fcmovu
in
cmp
cmp
or
addr16
jl
jne
xor
sbb
inc
pop
mov
push
mov
scas
outsb
cmp
jecxz
push
xchg
aam
jno
lds
pop
lock
in
mov
or
aas
sahf
aaa
aas
push
fcoms
je
fcmovu
nop
in
pushl
mov
aas
mulb
shll
and
lock
sarl
xor
cwtl
mov
xchg
sar
xlat
into
sahf
cmpsl
jge
aad
cltd
xchg
jnp
loopne
jmp
inc
orb
jl
push
repz
push
shl
das
adc
sahf
pop
arpl
jle
sbbb
iret
or
mov
insb
push
js
sbb
fldcw
nop
pop
push
mov
shlb
popf
mov
sbb
dec
sti
shll
sbb
scas
or
lret
xor
ret
pusha
inc
inc
jo
jmp
mov
mov
fmuls
mov
mov
mov
dec
outsl
imul
fistps
jae
xor
and
add
pushf
ljmp
stc
push
pop
mov
or
push
aas
lahf
test
inc
mov
ficompl
xlat
adc
jns
std
mov
pop
std
add
xor
stc
push
stos
cmp
pop
pop
fxch
iret
cltd
sbb
sub
fchs
out
jbe
mov
cld
sarb
scas
adcl
sbb
push
test
lods
add
mov
jecxz
cmp
mov
push
repz
nopl
shlb
sti
jmp
out
sbb
adc
pop
add
adc
inc
pop
push
out
or
cmp
mov
in
xchg
shl
addr16
or
out
bound
jnp
xor
dec
push
push
mov
rolb
jnp
inc
adcl
push
aas
aad
mov
sbb
mov
aam
pop
jp
push
mov
pop
xor
mov
push
loop
shl
dec
xchg
adc
and
test
in
cmp
inc
testl
or
push
mov
jns
xchg
call
jns
mov
scas
ret
jge
push
cmpsl
pop
loopne
in
sbb
push
aad
or
push
xor
mov
dec
jmp
add
dec
out
outsl
aam
sub
and
int
jmp
push
scas
push
xchg
sbb
and
sbb
enter
push
cmp
and
and
xor
pop
cld
jb
lock
stos
xor
add
fmul
out
je
mov
or
cli
clc
out
lret
xor
pop
jle
sub
andb
push
fistps
insb
ja
in
movsb
or
inc
fnstcw
sub
dec
fisubrl
daa
mov
rclb
adc
mov
pop
or
int
pop
fdivrs
loope
and
int3
xchg
mov
fildl
sahf
or
mov
leave
add
into
mov
adc
and
push
das
es
lret
fmull
ret
lret
lret
pop
sbb
xor
sub
neg
pop
rorb
mov
push
pushf
clc
lea
inc
push
push
fdivrs
notl
sti
sub
repnz
addr16
xchg
jbe
fisttpll
push
xchg
adc
enter
push
iret
das
sbb
pop
ja
adc
incb
add
xchg
inc
and
push
hlt
das
sbb
sbb
arpl
stc
or
cmp
testb
pop
dec
xchg
call
and
adc
fistpll
ss
out
in
jns
cmpsb
cmp
mov
stos
scas
mov
das
lret
pop
adc
push
cmp
mov
stc
add
rcl
hlt
mov
push
dec
loope
test
dec
inc
stos
loopne
outsb
in
fldenv
std
mov
adcl
daa
cmp
add
jnp
lock
negb
push
mov
sub
inc
adc
jp
ljmp
push
mov
mov
adc
lcall
push
mov
pop
pop
mov
add
push
arpl
aam
fidivs
cmp
jmp
dec
faddl
js
cmc
mov
dec
xor
test
dec
leave
adc
pushf
sbbl
push
out
adc
jp
outsl
mov
scas
push
jbe
inc
ret
sahf
or
or
inc
adc
mov
sbb
sbb
xchg
ds
jb
sbb
clc
ret
aam
mov
leave
aaa
repnz
mov
inc
xor
lods
movsb
lcall
mov
sub
dec
aas
cmc
xchg
cmp
dec
pop
js
xchg
cmpsb
mov
loopne
or
gs
mov
mov
aaa
sub
xchg
mov
push
mov
xchg
cs
push
lret
shr
inc
imul
fidivrl
testb
mov
pop
lock
mov
scas
in
jno
push
mov
insl
cmc
stos
stc
pop
sahf
mov
adc
cmp
cltd
repnz
ret
or
adc
stos
pushf
loop
cmpsl
loop
push
sahf
pusha
inc
addl
gs
sbb
imul
ss
or
ret
and
push
inc
mov
fwait
mov
in
inc
jo
lock
movsb
mov
mov
insl
outsl
mov
in
cld
add
cwtl
sub
push
sub
push
push
mov
xchg
jle
test
mov
pop
xchg
jle
movsb
ss
out
push
mov
mov
pop
xlat
cmp
js
cmpsb
pusha
sbb
ja
xchg
call
scas
dec
sbb
jecxz
iret
jmp
and
ret
aam
out
pop
or
inc
inc
je
sar
stc
shr
sti
jno
int
imulb
xor
inc
popl
ficomps
fld
pop
and
subl
movsl
sub
cmpsb
sbb
mov
push
sub
xlat
enter
es
xor
cmp
xchg
test
enter
push
aad
inc
add
test
cmp
and
xor
repz
push
imul
mov
cmp
js
jge
mov
lea
shll
jl
in
imul
and
jge
mov
inc
adc
lret
enter
in
inc
xor
dec
adc
adc
shl
je
push
aam
arpl
andl
dec
mov
mov
push
push
push
test
pop
out
shlb
xor
jg
push
pushf
ficompl
lock
fildl
mov
ret
pop
adc
ret
ss
mov
cwtl
arpl
jns
pop
jl
push
ffree
lods
aad
ret
in
jne
imul
mov
add
or
sbb
rcll
sub
int3
sbb
mov
xchg
test
fcom
cmpb
int
xchg
pop
ror
add
out
in
inc
cmp
xor
adc
out
pop
or
fwait
mov
stos
pop
shll
inc
adc
lds
mov
pop
or
repz
aas
push
mov
sarl
push
lods
jg
ret
cwtl
inc
lret
xor
in
lds
pop
outsl
aad
test
out
sub
mov
inc
cli
call
insl
xchg
stos
mov
xor
mov
stc
out
imull
repnz
lret
push
sub
in
pop
aad
into
sub
xor
add
leave
jmp
loopne
aad
stc
fwait
in
inc
inc
hlt
dec
add
sub
shlb
or
stc
and
mov
rolb
push
arpl
shrl
dec
mov
stos
dec
insl
bound
cmp
mov
jmp
test
les
and
stos
cmc
pcmpeqw
cmc
imul
push
insl
ret
mov
mov
clc
adc
cmp
clc
les
xchg
adc
mov
adc
xor
shlb
mov
dec
std
pop
std
fnop
add
rorl
in
push
nop
push
daa
std
xor
mov
popf
rcll
adc
pcmpeqd
icebp
pop
cs
cmpsb
xor
xor
xor
addr16
shll
vpunpckldq
inc
pop
sub
push
rolb
push
lea
jno
icebp
and
out
testl
fwait
insl
or
lret
xor
mov
leave
test
mov
shll
in
xor
adc
and
push
shll
fimuls
and
pop
fisubrs
sub
mov
mov
mov
inc
dec
out
jae
adc
jmp
push
outsl
testb
mov
mov
mov
cmpsb
das
loop
jne
xchg
add
push
and
shll
jmp
idivl
testl
cmp
fimull
test
fstps
xlat
dec
loop
pop
cs
js
add
sub
and
movsb
push
mov
lret
dec
repnz
and
mov
das
aam
inc
stc
mov
mov
enter
loope
mov
add
inc
lods
rolb
out
out
adc
scas
jae
fwait
addr16
mov
shrb
orb
mov
nop
pop
xchg
out
cld
pop
daa
sbb
lcall
cmpb
sub
push
lock
inc
nop
shrl
xor
jb
ss
dec
xchg
sbb
jg
push
jne
jmp
adc
lret
mov
outsl
dec
stc
sahf
call
xchg
mov
mov
fstl
inc
xlat
push
int3
icebp
sub
ret
and
in
sbb
jge
das
in
cltd
out
sbb
mov
call
pmuludq
or
sbb
push
sub
fstl
sbb
jbe
sub
das
mov
daa
ja
xchg
fwait
sarl
push
add
pop
cmp
mov
jle
and
jg
adc
hlt
add
dec
loop
dec
sub
adc
es
cwtl
inc
movlps
out
enter
inc
test
sbb
add
cli
mov
call
lods
arpl
movsb
sub
aad
jb
pop
into
xchg
pop
lds
mov
jle
stos
movsl
mov
xlat
mov
stos
and
adc
jecxz
xor
xor
xor
add
xor
mov
inc
jp
cmp
sbb
ljmp
lock
fdivrs
ljmp
jle
lods
int
in
pop
lock
icebp
lcall
push
adc
loopne
adc
mov
pop
xchg
rcrl
out
jbe
leave
pop
adc
sti
sbb
mov
sub
pop
push
ja
outsl
mov
sbb
fstpt
test
or
and
daa
je
fld1
fnstcw
mov
dec
inc
sbb
ss
inc
cli
fxch
push
lods
sbb
jmp
lcall
lock
cmp
rolb
mov
es
jecxz
outsb
jl
mov
jmp
push
or
inc
or
mov
sub
or
ja
decl
xchg
imul
xor
dec
outsb
fldln2
ficoms
fucomp
popf
and
movsl
jmp
jle
push
and
push
add
movsb
imul
xchg
ljmp
mov
push
mov
int3
movsb
jae
daa
dec
xchg
ret
adc
lods
mov
imul
stos
insb
sbb
mov
in
movsb
movsl
dec
dec
inc
xchg
cs
cld
xor
test
aam
orb
adc
or
or
inc
ret
je
ja
mov
dec
adc
jne
insb
mov
sub
lds
cmp
mov
lcall
sub
mov
cmc
xor
mov
adc
mov
sub
inc
cmp
scas
mov
scas
mov
ljmp
mov
ret
or
push
or
leave
inc
jle
aad
add
test
lret
aaa
std
jnp
fcom
push
or
dec
add
add
fdivrl
xchg
movb
fs
lds
sti
inc
dec
cmp
sub
test
sbb
roll
jecxz
dec
inc
ret
dec
cmpb
out
pop
dec
or
sbb
daa
rolb
adc
mov
dec
aam
dec
cmp
daa
outsb
loopne
insb
aas
lods
mov
mov
xor
rcr
mov
inc
test
std
pop
mov
xlat
or
sbb
push
cmp
push
sbb
cmp
sbb
aaa
add
test
pusha
pop
and
test
in
pop
and
mov
dec
aaa
stc
mov
ds
inc
xchg
or
mov
and
or
xchg
sbbb
cmpsb
jnp
dec
dec
push
pop
inc
aad
cmp
xchg
int3
pushf
add
inc
popl
out
hlt
and
fsubrs
push
add
mov
mov
push
and
cmpsl
das
pop
daa
shlb
mov
ljmp
hlt
lcall
cld
mov
sub
pop
insl
pushf
test
adcl
lret
pop
push
sbb
push
sbb
mov
aam
push
lahf
daa
repz
or
xchg
jb
imul
test
cmc
ret
adc
shrl
je
dec
jnp
lods
push
fadds
cli
scas
adcb
xchg
lret
xchg
pop
mull
in
push
mov
adc
fcmovb
xor
lods
stc
lahf
inc
cmp
pop
pop
leave
mov
mov
mov
lahf
dec
adc
mov
lcall
mov
andl
hlt
dec
mov
mov
movsb
bound
mov
jo
bound
jnp
jg
sub
stos
sti
or
sti
add
add
mov
jbe
jb
inc
mov
call
mov
push
or
xchg
dec
sbb
adc
dec
push
je
or
lahf
clc
push
ret
xor
sub
sub
jle
jo
pushf
xor
loope
jns
add
repz
loope
mov
movsb
push
mov
repnz
dec
pop
iret
mov
or
lds
adc
subb
mov
xchg
xor
xchg
cmp
stos
movsl
in
mov
lret
stc
stc
cli
jbe
sub
sub
ror
jno
fcompl
push
les
push
sbb
stc
loopne
rcl
out
mov
shll
push
adc
sub
int
arpl
cmp
mov
xchg
int3
fsts
data16
or
cmp
mov
and
jg
jp
and
push
cmp
aaa
mov
mov
imul
lods
pop
adc
xchg
pushf
in
jp
jae
mull
push
lcall
loop
ja
or
mov
gs
pop
mov
sub
lods
add
ret
loop
lods
or
fstpt
mov
aaa
xlat
adc
repz
les
hlt
xchg
fsubrl
repnz
mov
les
out
cmp
mov
jne
clc
jle
xchg
mov
insl
and
mov
stos
scas
mov
jb
dec
cmp
cmpsl
hlt
into
xchg
into
sbb
fld
cltd
mov
push
enter
enter
mov
out
push
mov
sti
iret
das
fistps
aaa
loope
sti
mov
mov
sbb
test
fs
cwtl
mov
xchg
inc
test
fisubl
fiaddl
loopne
xchg
ljmp
popf
dec
aad
insl
and
push
xor
ljmp
pop
xchg
aam
sub
inc
scas
aam
jb
jo
adc
sub
mov
pop
push
inc
jne
cmpsb
fstps
loopne
insl
pop
test
call
jnp
cmc
xor
xor
imul
pop
outsb
add
mov
push
and
icebp
loop
mov
outsb
idivl
mov
dec
fcmovnbe
xlat
call
insb
dec
outsb
add
push
dec
fildl
cmp
pop
sahf
sbb
add
fistpll
or
dec
push
repz
stos
aaa
mov
sbb
ss
push
cmp
xchg
xor
dec
sub
mov
test
xchg
add
shrl
pop
sub
push
mov
push
sbb
sahf
xlat
inc
cld
add
sub
jl
pop
loop
jns
mov
not
jb
mov
push
add
arpl
pop
add
and
xor
cld
mov
xor
test
and
mov
xchg
lret
push
mov
insb
push
in
lret
push
or
inc
push
stos
push
push
pop
les
mov
sub
sub
jmp
imul
cmp
fs
jnp
cmp
hlt
dec
int
and
mov
icebp
inc
movsb
fmulp
inc
add
and
mov
mov
daa
xor
jae
ficompl
sub
adc
daa
push
push
add
into
inc
xor
mov
dec
and
sub
mov
sub
jge
adcl
inc
clc
mov
ret
mov
shll
cmc
outsb
sbb
cmp
or
test
aam
inc
pop
test
xchg
push
sub
jl
into
sub
adcb
sahf
push
adc
xchg
cmc
sub
jmp
sbb
jne
pop
sbb
roll
sahf
xor
xchg
sub
popa
das
clc
dec
or
leave
insl
sarb
add
lret
and
push
mov
mov
leave
frstor
ret
testl
mov
daa
cltd
inc
cmc
out
xor
negb
and
sbbb
mov
cmp
dec
cmp
ss
push
sar
mov
mov
cmp
push
test
dec
mov
fdivr
ret
cmc
pushf
fcomps
ja
cmp
xor
push
mov
and
cmp
jp
mov
sti
pop
mov
cmp
sbb
push
add
xchg
push
pop
fs
jnp
roll
lret
int
xchg
insb
inc
les
mov
jp
inc
pushf
jl
xchg
fdivl
dec
enter
mov
cmp
jns
dec
aaa
cmp
mov
addr16
inc
push
pop
aaa
jle
out
lock
add
jo
push
ja
mov
cmpsb
or
inc
out
shlb
arpl
mov
icebp
insb
call
xchg
testl
test
and
cmp
pushf
mov
mov
push
push
orb
mov
jmp
dec
arpl
pop
fisttps
cli
jo
xor
jecxz
movsb
ret
sub
cmp
stos
xchg
aaa
pushf
mov
cmp
hlt
and
mov
ljmp
ud2
xor
bound
pop
imul
andb
repnz
std
xchg
je
mov
fsubl
shld
fmuls
jecxz
inc
js
fs
add
add
arpl
imul
mov
and
jno
es
pop
lods
fisttpll
xchg
jecxz
nop
out
cwtl
jecxz
test
push
mov
outsl
fsubl
xchg
add
add
icebp
movsl
in
addr16
dec
pop
xchg
mov
mov
dec
aad
insl
push
test
fwait
lods
ljmp
xchg
cmp
jge
lds
inc
iret
imull
adc
js
loopne
push
mov
add
stc
add
push
jno
ret
mov
sub
push
mov
jmp
stc
dec
jae
or
push
mov
xchg
and
cmp
sahf
mov
ret
lock
cmp
outsb
push
incb
lods
xchg
push
jge
iret
mov
add
push
loopne
jne
xor
or
sub
xorb
mov
mov
aad
adc
push
out
sub
icebp
jae
mov
push
sub
jle
mov
nop
mov
mov
add
cs
or
sub
xchg
pop
lea
dec
out
int3
xor
int
test
loop
enter
dec
mov
test
jne
std
push
and
movsb
dec
jecxz
jo
test
out
dec
sbb
int3
out
sahf
lahf
mov
lret
and
sahf
add
cli
xchg
stos
outsb
sbb
dec
push
mov
xor
pop
loop
rep
insb
jmp
adcb
mov
dec
movsl
cmp
dec
call
mov
in
xor
xlat
cwtl
lret
jle
and
add
out
mov
jecxz
jecxz,pn
pop
xor
pop
sub
imul
icebp
lock
adc
fisubrl
push
sub
adc
lea
cmpsw
push
xchg
loop
in
jb
add
bound
lret
or
in
test
inc
jmp
dec
mov
loopne
mov
push
mov
sahf
out
shll
lahf
outsl
push
sbb
imul
fbld
out
insb
inc
shll
aaa
push
xor
push
movsb
mov
popf
sbb
or
outsb
ja
lahf
sbb
xor
test
aam
xchg
js
or
repz
scas
sbb
xor
mov
stos
and
movsl
or
mov
add
fs
rol
pop
js
aaa
mov
adc
jnp
jo
jmp
and
mov
sbb
xlat
mov
mov
leave
push
fisubrl
jno
inc
ljmp
mov
or
and
dec
icebp
mov
mov
cltd
fcoms
push
and
sahf
mov
nop
mov
scas
mov
rep
dec
outsb
outsl
add
inc
xor
cmp
lock
cmp
notl
lahf
dec
loopne
ja
add
sbb
cmp
push
inc
mov
test
cwtl
mov
xor
add
pop
push
hlt
mov
jle
repz
xchg
mov
ja
ss
fidivs
cmpsb
ljmp
in
outsl
mov
lods
lods
pand
xchg
fucomip
repz
adc
xchg
fdivl
xrelease
mov
pop
mov
jle
shlb
adc
pop
mov
iret
xchg
ja
loopne
fstps
mov
inc
pop
add
xchg
outsb
int
dec
inc
mov
stc
les
xchg
sbb
jmp
add
in
notb
scas
lret
mov
jecxz
out
lods
je
movsb
out
jns
sub
xchg
clc
cmc
lahf
cs
mov
jmp
iret
ret
lea
mov
dec
jge
and
jnp
jo
lcall
adc
sbb
mov
aam
cmp
jg
clc
movsb
les
mov
inc
inc
jmp
adc
cmp
jnp
jns
xor
outsb
xchg
arpl
push
jle
pop
imul
sub
lods
mov
xchg
sbb
mov
lods
sbb
xchg
adc
fbstp
dec
pop
mov
outsb
les
sub
popa
negb
arpl
sti
dec
in
fwait
mov
xor
and
pop
pop
cmp
cmp
lcall
pop
popf
mov
push
pop
mov
or
les
add
xchg
jmp
mov
push
repnz
mul
jns
arpl
sahf
je
enter
pop
test
jo
fcmovb
dec
les
les
push
out
sahf
or
pop
mov
mov
jg
icebp
lret
gs
sarl
test
sarb
and
out
fcmovne
add
cmp
rcrl
mov
movsb
pop
dec
sub
fnstsw
mov
xchg
or
push
fbld
leave
cmp
xor
lahf
push
dec
adc
adc
cmp
das
jg
push
nop
ds
lret
push
movsl
sbb
inc
sub
popa
les
rcrl
imul
mov
or
pop
out
dec
into
bsr
aaa
inc
addr16
and
call
lret
cltd
xchg
rcl
or
sbb
lret
push
dec
add
enter
lds
sbb
iret
adc
pop
rcrl
xor
dec
jg
js
int
lea
jb
mov
arpl
pusha
mov
push
clc
mov
push
movsl
movsb
or
inc
mov
mov
js
lret
lcall
mov
outsb
adc
mov
add
inc
aam
in
arpl
xchg
movsl
adc
test
imul
xchg
out
pop
xor
xor
inc
dec
push
clc
mov
sub
in
outsl
adc
add
push
jle
sbb
pop
mov
cs
sub
cmovs
jns
mov
movsb
adc
mov
add
enter
aas
andl
stos
nop
std
lcall
ljmp
rclb
gs
daa
lret
fs
jo
mov
or
fnstenv
test
fld
test
gs
ret
ds
rolb
je
jo,pt
clc
hlt
fs
inc
jecxz
hlt
iret
lea
pop
or
inc
jle
repnz
dec
jecxz
adc
push
ss
add
into
mov
or
leave
into
xor
ja
fwait
push
sub
pusha
mull
cmp
xor
popa
call
add
movsl
mov
ja
jno
mov
mov
fisubs
push
mov
rolb
iret
cmpsb
or
in
add
call
ss
sbb
test
or
adc
mov
arpl
sarl
mov
mov
xchg
pop
cmp
xchg
mov
scas
sbb
out
add
pop
icebp
xchg
push
pop
jne
adc
test
add
jb
lods
adc
ja
dec
xchg
mov
mov
aas
adc
cmp
jle
jle
cmp
adc
divl
adcb
xchg
and
sub
ret
and
and
add
mov
and
fbstp
dec
dec
call
mov
movsb
leave
mov
test
cmp
mov
xor
mov
inc
pop
call
out
enter
out
arpl
rcrl
cmp
inc
inc
xchg
push
xor
in
adc
lret
xchg
dec
inc
mov
lods
add
sbb
aaa
and
sbb
jp
xor
test
and
cli
sahf
mov
lods
mov
xchg
nop
stos
lret
shl
push
inc
inc
test
sub
xchg
pop
mov
dec
ret
sub
movsl
mov
js
gs
scas
mov
and
adc
pop
out
lods
inc
push
out
negb
test
jne
sarl
adc
cltd
add
mov
adc
les
xor
popa
xchg
lds
fwait
hlt
mov
dec
into
lret
out
je
stos
sbb
bound
push
push
xchg
push
or
rol
xchg
aaa
cmp
push
or
pop
sahf
push
js
or
fimuls
int
add
dec
in
lods
jns
cmp
pop
cmp
enter
dec
mov
or
mov
into
inc
jns
jge
lea
addb
add
lods
mull
jecxz
sbb
xchg
or
xor
cmp
lods
xlat
in
sub
ljmp
in
data16
test
pop
pop
fists
fdivr
int3
repnz
clc
xor
mov
xchg
rolb
aaa
loope
and
mov
xchg
clc
push
icebp
sbbb
gs
push
cs
dec
mov
test
ret
mov
xlat
ds
push
iret
dec
jbe
loope
fucom
cmp
sub
jp
fildl
inc
pushf
mov
add
sbbl
ret
rclb
test
add
leave
push
js
inc
inc
and
aaa
dec
or
cmp
sub
and
incl
enter
imul
mov
loopne
shrl
dec
inc
push
xor
inc
test
or
pop
aad
cli
xchg
fiaddl
xor
test
add
xor
loope
pop
in
pop
sbb
inc
cmp
cmp
lea
into
icebp
add
pop
sub
pusha
jge
push
adc
iret
xchg
shl
pop
pop
push
daa
xchg
xchg
orl
loope
test
out
ja
jbe
sbb
ds
push
mov
es
mov
pop
or
jb
pop
ret
dec
pop
outsl
add
sub
cwtl
ret
movsl
scas
xchg
pushl
jmp
stos
xor
mov
pusha
inc
hlt
pop
pop
jl
je
das
push
jb
lock
stos
adc
mov
into
shll
lea
ficompl
inc
xor
dec
test
jbe
jle
vpunpckhqdq
dec
pop
stos
es
jmp
xchg
js
mov
dec
sub
call
jg
cltd
jbe
jbe
ja
sub
push
loope
sub
shlb
popf
xchg
mov
stos
leave
adc
stos
push
jnp
inc
mov
dec
pop
mov
std
repnz
adc
jl
add
or
icebp
pushf
daa
mov
ljmp
xchg
nop
sbb
lea
mov
cwtl
pop
and
clc
test
add
call
stc
hlt
sahf
in
jbe
cwtl
jns
es
dec
fldt
cmp
and
nop
mov
mov
sub
jne
xor
es
bound
es
mov
add
popf
jp
and
in
push
sbb
inc
lret
rcll
dec
adc
dec
cmp
jnp
sub
nop
jecxz
and
add
ja
push
push
jmp
mov
add
pop
sbb
lcall
and
mov
mov
rorb
js
pop
fwait
pop
inc
andl
jbe
push
jns
jmp
jle
inc
sub
dec
mov
cmpsb
xor
jp
dec
jge
add
pop
lds
sub
lods
js
cmpsb
xor
fidivl
pop
lea
push
jne
or
mov
lock
adc
xor
push
mov
leave
rolb
mov
in
pushf
cmp
lock
xchg
lret
shrb
cmpb
sub
cmp
pushf
dec
push
shr
daa
sbb
ss
mov
fnstenv
aaa
and
jbe
sub
mov
xor
gs
test
inc
inc
subb
add
or
sarl
xor
daa
xorl
ror
pop
push
sbb
cltd
outsb
inc
call
add
lods
je
mov
loope
fcmovnbe
cmp
lea
jmp
call
sbb
aad
jo
mov
cmpsb
jmp
cmpsb
pushf
pop
xchg
mov
pop
sbb
stc
mov
loopne
mov
mov
lcall
or
cmp
lahf
shlb
stos
and
add
push
out
fwait
adc
add
mov
adc
stc
outsl
imul
pop
negl
mov
xor
ret
cmp
push
fistpll
pop
aad
xchg
cwtl
lret
push
fildl
fdivrs
ljmp
aad
or
fnstcw
pop
jmp
mov
cwtl
test
int
scas
xchg
iret
scas
sbb
push
mov
mov
call
mov
fstpt
push
pop
js
lret
adc
mov
addr16
push
mov
mov
sahf
lcall
les
scas
adc
stos
das
inc
add
and
movsb
mov
rcll
lcall
cmp
scas
int
jns
push
xor
lods
jo
ss
stc
and
lock
cmp
cmpsb
sbb
js
in
cmp
fstl
data16
xchg
add
push
adc
inc
movb
push
sub
push
scas
sub
mov
mov
movsl
add
xchg
sbbb
xchg
roll
cs
lods
aaa
mov
ror
ljmp
cwtl
mov
ljmp
mov
adcl
jge
cmovbe
add
fstl
in
and
outsl
pop
mov
ret
xchg
cmp
adc
ficomps
sub
pusha
xchg
cmpl
jg
das
inc
xchg
loop
paddsb
fiadds
addr16
loop
sbb
movsl
jae
dec
fstl
int
popf
xchg
imul
ljmp
js
lret
pop
out
movsl
cmp
pusha
ds
add
sub
fucomp
leave
jle,pt
andl
popf
loopne
in
mov
dec
xchg
adc
add
movsb
mov
sub
mov
aas
ficoml
add
cmp
or
mov
xchg
inc
sbb
lcall
sbb
mov
inc
inc
pop
outsl
push
push
fistpl
mov
orl
shrl
inc
mov
ret
mov
cmp
sub
fucom
and
jg
es
out
dec
cwtl
push
dec
sbb
push
xor
faddl
test
jbe
push
int3
setle
fidivrl
mov
jne
adc
mov
jnp
cmp
cltd
loopne
inc
xor
mov
aad
sahf
inc
mov
dec
lock
nop
mov
stos
int3
push
dec
mov
clc
daa
in
cmpsl
pop
pop
pop
inc
sbb
sub
mov
push
orb
loop
sti
mov
inc
sahf
sbb
cs
inc
pop
push
adc
fcompl
shll
lcall
sahf
mov
aas
movsl
aaa
xor
adc
aas
mov
xor
jns
lcall
clc
mov
push
inc
pop
and
cmp
pop
stos
mov
mov
pop
call
mov
pop
xor
aaa
sbb
sub
cmpsb
sbb
inc
out
into
mov
mov
cmpsb
clc
stc
gs
mov
xchg
pop
cld
mov
sahf
addb
aas
add
mov
cli
jl
daa
movsl
and
mov
mov
rcr
and
outsb
pop
movsb
icebp
or
in
jge
xlat
jae
push
rolb
ret
stos
outsb
push
add
add
sbb
push
add
cmp
int3
lods
test
imul
aam
add
cmp
sub
jno
xchg
inc
arpl
xchg
ja
jmp
jns
loope
ss
popa
pop
std
lea
add
sbb
sub
or
lcall
pop
in
push
gs
xor
aaa
and
cmp
in
fdivp
stos
ds
pop
insl
dec
sub
imul
or
cmp
ja
mov
pop
cmc
jb
stc
pop
iret
xchg
popf
xchg
xchg
sahf
push
push
imull
pop
add
pop
stos
sbb
outsl
push
jbe
mov
js
inc
sub
outsb
xchg
mov
lods
inc
dec
nop
xchg
loope
sub
lods
stc
xchg
stc
cmpsb
pop
lahf
lea
inc
int
xchg
jno
push
loope
cld
lcall
dec
push
addr16
outsb
in
mov
xor
sub
test
xlat
and
sahf
mov
test
jle
in
inc
out
cltd
or
push
lods
jge
ss
cs
inc
sub
dec
pop
fldcw
icebp
int
mov
mov
push
test
cli
outsl
mov
sbb
xchg
imulb
enter
repnz
xlat
mov
es
sbb
test
pusha
push
es
out
add
pmulhuw
xor
push
fldl
movsb
fcomps
bnd
mov
jbe
mov
cmp
mov
mov
outsl
mov
adc
add
loop
xchg
test
push
adcl
xor
adc
xor
inc
push
pop
mov
xchg
jbe
fidivrl
lea
es
jmp
sbb
std
cmp
daa
outsb
imul
sub
pop
mov
push
sbb
dec
jle
mov
adc
inc
addr16
mov
nop
ds
dec
std
pop
mov
aad
test
jmp
fistps
add
out
dec
ds
leave
cmp
jns
orb
sbb
pop
imul
outsl
sbb
add
cmp
sbb
jl,pn
sub
push
adc
lds
div
mov
jno
fs
cmp
sbb
xchg
imul
repz
adc
js
cmc
bound
popf
stc
out
push
imul
cmp
lods
jge
in
pop
shr
rcll
out
pop
adc
inc
push
mov
rcl
out
sub
cmp
movsl
not
inc
lea
xchg
and
adc
test
mov
cmc
or
fsubl
and
pop
in
insl
xor
fucomp
in
test
fidivrs
jno
inc
xchg
push
arpl
jo
push
xor
adc
test
push
mov
mov
push
xchg
push
push
push
repnz
xlat
repz
bound
pop
lods
int3
dec
mov
xchg
sbb
cmpsb
pop
mov
fisubrl
test
dec
dec
mov
popf
xor
adc
fisubrl
xchg
icebp
push
ljmp
sbb
cmc
add
out
shrb
enter
mov
xor
jge
fwait
pusha
int3
int3
mov
fwait
mov
call
stos
sub
test
mov
test
mov
sbb
or
aad
fcmovnu
daa
fists
push
cmp
mov
jnp
aas
sbb
push
lahf
push
imull
mov
mov
or
adc
xlat
cmp
je
sub
pop
mov
hlt
enter
icebp
jge
jnp
mov
xchg
dec
popf
inc
xor
lcall
jb
add
jl
dec
sbb
aaa
stos
int
dec
rcrb
mov
adc
jo
daa
pop
dec
sbb
jle
jle
add
xlat
pop
scas
rcrl
ja
xchg
xchg
aaa
or
lahf
adc
dec
aaa
inc
js
cmp
paddd
jmp
shrb
scas
in
lods
ss
out
inc
sbb
lcall
jae
repz
jb
adc
call
push
ret
pop
int3
jp
mov
jg
fldt
enter
xchg
cmp
stos
in
adc
mov
lret
lahf
andb
pop
jg
xchg
add
adc
and
dec
icebp
jbe
enter
in
inc
or
mov
or
test
out
inc
cmp
shr
bound
sahf
push
and
mov
call
mov
jmp
sar
mov
fmull
aas
mov
pop
mov
push
das
das
sub
mov
lret
nop
xchg
pop
mov
rclb
pop
out
repnz
pop
ffree
aaa
popa
pop
and
adc
mov
stos
jae
xchg
enter
test
mov
push
xchg
cmp
add
adc
mov
pop
or
fsubrp
flds
or
les
cwtl
mov
into
repnz
jne
pop
sub
mov
imul
call
cmp
xchg
testl
sbb
mov
xchg
pop
sti
ret
ds
cli
jmp
mov
push
cmc
jecxz
stos
imul
jne
cs
insl
add
mov
out
or
xor
ja
movsb
sbb
mov
into
aaa
rcrl
sub
mov
sahf
mov
jecxz
dec
aaa
test
mov
mov
in
mov
jmp
lcall
inc
scas
mov
mov
shrl
or
aad
mov
lock
xor
push
std
jle
pop
rolb
out
fsubrp
mov
lahf
mov
scas
inc
sbb
cmp
ds
add
bound
mov
jb
aad
cmp
aad
jle
sub
push
ror
sbb
pop
pop
cmp
pop
into
pop
inc
inc
pushf
int3
xor
cmc
imul
xor
push
enter
imul
cmpsl
mov
dec
sub
xchg
imull
and
jno
sbb
or
xchg
mov
dec
ror
test
je
mov
pop
jle
and
adc
fsts
sbb
clc
dec
push
cmp
and
xor
pop
sbb
pop
mov
jl
out
fwait
sub
xchg
xchg
cmp
daa
inc
mov
push
int3
mov
out
xchg
dec
jle
fistpl
add
ret
dec
movsl
out
mov
and
pop
icebp
add
scas
jnp
sub
pushf
jmp
pop
xor
add
outsl
add
lahf
lret
xchg
mov
mov
pop
bound
add
sbb
xchg
divl
mov
ud2
int
ret
pop
sbb
jp
push
pop
gs
gs
dec
bound
jne
inc
pop
mov
push
cmp
test
cmc
cmpsl
cli
lret
inc
addr16
rcrb
cli
ljmp
lods
and
adc
and
xor
push
xchg
inc
nopl
icebp
repz
movsl
imul
push
mov
xchg
out
mov
pop
dec
mov
out
mov
jne
inc
sub
or
shlb
cmp
test
xchg
push
hlt
bswap
inc
lahf
mov
xor
jge
or
popf
cmp
jl
push
psubq
xchg
rclb
sbb
jl
lahf
cmpsl
pop
mov
cmp
cmp
mov
mov
xor
cmp
mov
mov
pop
push
push
adc
sbb
add
sbb
stc
cmp
and
subl
xchg
jne
test
xor
xchg
add
call
ds
shll
repnz
in
ret
out
xor
xor
push
jns
inc
jle
call
pusha
jl
xchg
orb
mov
lcall
cli
ss
shlb
adc
inc
leave
lods
mov
into
add
ret
enter
pop
bnd
lret
ret
xor
jno
nop
sub
lea
sbb
sahf
clc
xchg
adc
leave
jne
outsb
cs
sbb
mov
outsl
pop
add
adc
cld
enter
orl
and
out
addr16
xlat
add
or
mov
or
fs
imul
inc
std
lods
or
xlat
mov
push
or
mov
fwait
popa
inc
jns
xor
mov
loop
push
push
test
inc
insb
pushf
and
rolb
or
mov
scas
push
in
xor
cwtl
mov
mov
test
aas
sub
rorl
daa
push
and
inc
ret
or
out
lock
scas
mov
in
es
repnz
mov
ret
jl
arpl
cwtl
push
cmp
jne
rcll
ffree
inc
lock
inc
fildll
sbb
sbb
nop
je
push
inc
int3
mov
xor
sbb
stos
scas
adc
out
outsb
int
fwait
inc
mov
inc
js
xor
mov
notl
xchg
adc
dec
push
dec
xor
out
xor
stos
push
xor
movsb
adc
vmovapd
addr16
ffreep
jecxz
and
loope
add
repz
push
sbb
ret
js
sbb
ret
dec
lret
scas
push
adc
sbb
mov
sbbb
xor
lock
mov
int3
sub
sahf
jecxz
jo
jmp
jae
aad
dec
mov
test
repz
jae
inc
aad
add
mov
ljmp
jg
es
xchg
cmpsb
cli
lret
stos
jp
dec
jae
cmp
dec
out
pop
inc
aad
push
jecxz
into
cmpsl
push
mov
into
ret
frstor
xorl
cmc
jl
cs
xchg
push
push
in
add
stos
add
sbb
imul
push
sbb
xchg
or
loop
xchg
pop
std
loop
mov
or
call
gs
inc
mov
sbb
into
jae
pushf
shl
fcmovnb
je
xor
cmc
sub
jecxz
inc
or
xor
daa
fs
sahf
dec
jp
xchg
imul
jmp
daa
outsl
mov
dec
repz
fmulp
sub
xor
insl
adc
addb
pop
cmp
ja
clc
add
or
in
jnp
mov
frstor
mov
in
add
adc
test
add
inc
dec
clc
mov
mov
mov
lods
jb
jne
add
push
daa
pop
pop
sub
out
int3
fisubrl
push
stos
or
imull
sub
sub
cmp
mov
es
sti
jp
es
outsb
xchg
rcll
out
pushf
sub
cmpsl
inc
pop
into
pop
push
pop
xchg
fidivrl
sub
and
jae
mov
addr16
bound
in
adc
adc
arpl
dec
and
movsl
jmp
cmc
ret
daa
sub
push
add
data16
add
mov
mov
mov
jg
pusha
jns
sahf
cltd
mov
out
vmaskmovdqu
jmp
mov
adcb
sub
mov
lret
mov
xchg
sbb
cmpsl
mov
adc
xchg
insl
dec
jmp
inc
insl
rcr
aaa
jmp
add
mov
mov
cmp
scas
cmp
jmp
sbb
mov
xor
lods
scas
rcll
imul
jp
icebp
jno
xorl
mov
pop
mov
add
imul
xchg
jg
xlat
mov
mov
mov
shlb
je
jl
out
jmp
push
inc
pop
and
iret
lds
popl
dec
movsl
ss
mov
bound
lcall
je
and
sti
fists
aas
dec
ss
jecxz
mov
aam
jno
sub
jnp
inc
jns
out
sbb
repz
cld
sbb
pop
call
aam
mov
sbb
xchg
adc
pop
fwait
push
xchg
popa
cmp
pop
std
adc
mov
stos
pushf
cmpsl
cmp
dec
mov
insl
fisubs
mov
xor
cmpsb
jmp
or
jge
xor
je
pop
je
dec
add
jnp
mov
cmpsb
dec
aaa
jle
sbb
jg
mov
lods
ds
mov
xor
mov
js
jnp
inc
cli
xor
sti
fs
dec
fldl
dec
pop
dec
cmp
mov
out
in
dec
bound
inc
or
adc
pop
cmp
in
testl
pop
sbb
ret
les
jle
mov
jb
adc
pop
inc
int3
lret
add
jg
xchg
add
add
lahf
shlb
lods
push
mov
mov
adc
cmpb
repz
and
setg
push
pop
inc
cmpl
dec
iret
lret
popf
aas
mov
lea
dec
sub
test
or
stos
aam
mov
jge
outsb
imul
mov
xchg
and
xor
mov
ljmp
jne
imul
cltd
adc
mov
js
mov
jae
push
dec
into
jmp
fldcw
std
jecxz
push
mov
lret
loope
push
movsb
jle
mov
sub
inc
mov
fimull
fwait
cmp
pop
inc
xor
in
cmpl
dec
inc
lods
mov
push
cmp
sbb
adc
outsl
inc
pop
dec
je
inc
call
jb
iret
test
dec
mov
push
out
pop
repz
les
mov
cld
jmp
xchg
dec
lods
stc
push
test
sarb
daa
iret
mov
xor
cmp
rorb
gs
leave
mov
push
jg
shrb
stc
mov
inc
jmp
adc
cmp
in
adc
adc
mov
ret
xlat
fmuls
jecxz
pop
jecxz
dec
das
in
es
add
hlt
repnz
xor
rep
dec
neg
bound
aas
movsl
cmc
outsl
pusha
rcrb
pop
ret
mov
cli
mov
pop
pop
sahf
addb
outsb
adc
push
inc
mov
in
mov
test
cmp
shll
add
dec
mov
inc
and
sar
lret
cs
xor
pop
leave
ss
mov
and
es
inc
test
mov
jne
xor
testl
add
aaa
xor
call
in
sti
lcall
test
lahf
test
mov
xor
or
loope
lods
mov
add
or
adc
stc
push
test
dec
sti
das
inc
std
scas
call
or
push
imul
push
xchg
lcall
xchg
and
sbb
shrb
clc
clc
jg
jbe
mov
jg
jnp
sub
xor
push
mov
pop
or
mov
mov
aaa
cmp
fcoml
adc
xchg
mov
out
lcall
adc
fiadds
cwtl
cmp
mov
or
rcr
push
xlat
push
cmp
cmp
mov
nop
ds
dec
xor
mov
adc
jns
lcall
mov
mov
mov
sar
cmp
xchg
cmp
mov
sub
movsl
xchg
sbb
out
icebp
imul
jecxz
fiadds
ret
aaa
pop
pop
add
add
push
shl
inc
mov
sbb
fistps
jb
gs
mov
jecxz
addb
jp
add
jae
pop
scas
lret
adc
add
xor
into
push
mov
bound
repnz
lock
addr16
push
xorw
imul
pop
test
rorb
jae
dec
mov
mov
or
mov
shr
push
mov
lock
repz
jnp
clc
sbb
or
in
stc
mov
fdivs
pop
dec
mov
int3
dec
pop
fidivl
aam
xchg
ds
lahf
int3
sub
cmpsl
sbb
ljmp
test
dec
mov
enter
adc
mov
and
lods
pop
dec
xor
dec
call
mov
pop
movsb
push
cmp
clc
js
test
mov
xor
lahf
enter
add
jp
scas
mov
rcll
call
pop
xchg
or
push
cmp
call
rcll
mov
insl
fnstenv
lock
cld
nop
or
xchg
cmp
ja
incb
outsb
jg
xchg
dec
testb
idivl
sub
jg
loop
pop
sahf
int3
iret
mov
push
push
aas
and
das
xchg
into
fcmovne
mov
stos
pop
pop
xor
mov
dec
pop
jl
cli
jb,pt
cmpb
outsb
pcmpgtb
push
jns
xchg
or
pop
cwtl
adc
dec
add
and
pop
jnp
jns
adc
out
cmc
add
pop
dec
mov
push
push
loop
jb
lds
cwtl
cwtl
jp
sub
mov
sub
add
sti
ljmp
bound
xchg
fdiv
clc
and
and
out
aam
mov
scas
push
jecxz
aaa
scas
dec
mov
pop
mov
cmp
pop
sbb
sbb
and
dec
out
push
mov
xchg
jo
daa
jecxz
sbb
pop
mov
out
mov
push
mov
lea
xchg
xorb
cmpb
and
push
lret
add
mov
cmp
test
movsl
xor
data16
push
lahf
xchg
xor
adc
lods
pop
aaa
ljmp
mov
lds
cmp
add
sub
mov
and
fimull
ret
and
inc
cmp
out
pop
mov
cmp
xlat
push
pop
cmc
cmp
ds
pop
inc
xor
shrb
xor
jge
cmp
jbe
adc
pop
add
inc
and
jle
pop
or
push
insb
or
test
dec
inc
pop
rcrl
pop
inc
icebp
dec
mov
inc
aaa
and
xchg
jo
jb
in
call
push
xlat
jae
mov
xchg
inc
push
bound
pushf
ret
lds
jns
cmp
outsb
mov
pop
ficoms
jnp
repnz
mov
jae
jnp
ljmp
cwtl
icebp
jle
xor
cmp
cmp
jne
xchg
mov
lahf
sbb
outsl
cmpsb
mov
xchg
gs
ja
popa
cwtl
mov
push
push
stos
mov
mov
repnz
outsl
fnstsw
lods
xchg
jl
inc
rolb
dec
pop
cmc
aam
shl
and
mov
int
push
inc
les
mov
dec
xchg
mov
popa
cmp
jns
clc
loope
pop
test
cmpsl
in
cmpsb
ret
jbe
cmp
int3
adc
test
xchg
jmp
imul
lods
cld
or
xorb
cli
pop
pop
loope
push
lret
mov
popa
dec
in
and
das
stos
sbb
pop
sub
jp
push
xor
mov
or
mov
pop
outsl
push
mov
fisubrs
cmc
adc
jnp
xchg
sti
or
stos
sbb
mov
jne
pop
pop
adc
ret
mov
out
lahf
push
or
jle
push
xor
pop
sahf
xorl
dec
out
fidivl
push
push
int3
push
add
repnz
xchg
repz
push
fcmovnb
inc
jmp
mov
leave
das
ret
or
cmpsb
xchg
fdiv
add
cmp
dec
mov
in
push
cmc
inc
out
or
stc
cli
dec
adc
lods
jle
dec
fmuls
hlt
dec
insl
push
insl
outsl
popa
sbb
mov
add
xor
mov
lahf
outsb
jns
add
loopne
mov
pop
cmpsl
add
int3
xor
enter
ret
repnz
incb
and
out
mov
or
inc
leave
pop
sub
pop
inc
pop
push
scas
mov
daa
in
sbb
pop
shrb
fmulp
mov
mov
mov
fidivrl
call
std
add
call
orb
dec
in
sar
cmp
std
sbb
adc
sub
outsl
add
lcall
int3
inc
pop
mov
in
insl
js
push
subb
xchg
inc
mov
push
xchg
bound
int
xor
fisubrl
xorl
xor
sbb
nop
cmpsl
cmp
shlb
in
rcll
in
jecxz
inc
inc
push
mov
cmpsl
fisubs
adc
jl
dec
mov
icebp
mov
dec
aas
lock
shll
nop
js
shll
jle
iret
mov
push
aas
push
lahf
cmc
sub
cmpsl
mov
jne
mov
cli
push
icebp
adc
pushf
aad
cld
xchg
movsl
fs
jp
sbb
and
adcb
jmp
mov
lods
lods
ljmp
ja
dec
hlt
jecxz
call
test
inc
stos
jg
lahf
fdivl
jge,pn
jae
adc
mov
jns
pmaxsw
mov
pop
int3
jmp
int3
mov
xchg
loop
xor
mov
push
dec
mov
jp
cmpsb
int
movsl
xchg
ja
or
leave
sub
ja
push
mov
shr
xchg
lds
pop
leave
lods
push
ror
mov
bound
lods
aad
mov
inc
sti
mov
sbb
push
shlb
pop
fsubr
mov
int3
mov
sbb
out
dec
sbb
in
or
jp
push
jge
dec
addr16
out
cmpsl
xor
gs
adc
jne
aaa
loope
clc
iret
dec
sbb
jg
and
sub
mov
jle
in
fsubs
iret
mov
mov
pop
loop
aam
shrl
pop
inc
xchg
cwtl
sbb
scas
in
out
xchg
xor
gs
jg
loopne
cltd
fs
stc
push
cmpsb
mov
adc
push
subl
xor
add
push
or
or
and
dec
daa
hlt
js
mul
fs
repnz
and
aas
jno
mov
addr16
push
jge
mov
pop
jo
aam
int
xchg
cmp
push
xchg
adc
inc
adc
dec
adc
icebp
insb
ja
aaa
enter
cld
dec
mov
pop
mov
fimuls
ss
push
dec
int3
xor
mov
fcomps
and
jle
dec
pop
mov
adc
mov
lock
jp
adc
dec
inc
mov
push
push
mov
or
xlat
js
fs
mov
jnp
push
or
and
movups
jne
cmp
nop
cld
stos
pop
push
lods
and
rol
arpl
lcall
push
cmp
gs
push
adc
mov
popa
fwait
int
leave
scas
lods
mov
incb
pop
int3
sar
inc
lret
jne
lret
scas
sub
pushf
push
leave
and
inc
adc
stos
mov
xchg
jmp
push
add
lock
andl
jo
push
incb
mov
pop
cmpsb
scas
arpl
mov
cmp
scas
push
pushf
cwtl
iret
push
jne
mov
stos
fldt
pause
in
into
sbb
addr16
out
aam
jge
sbb
mov
lcall
adc
pop
int
imul
jb
ss
cmpsl
sbb
xlat
add
lds
mov
ss
shl
sbb
lods
xchg
mov
mov
inc
mov
or
push
and
inc
add
nop
data16
faddl
fidivl
int
add
jecxz
sbb
dec
mov
nop
iret
scas
cmp
or
imul
arpl
mov
adc
lahf
sbb
cmp
fstl
mov
int3
pop
ljmp
sysenter
sbb
repnz
insl
daa
mov
icebp
test
adc
inc
or
sbb
inc
mov
ja
add
add
fnstsw
les
mov
repnz
call
lods
addb
mov
mov
rclb
push
xchg
add
xchg
mov
aaa
inc
cmpsb
test
or
pop
stos
jp
outsl
insl
inc
mov
test
jg
cmc
pop
cmpsb
mov
xchg
lds
mov
inc
movsb
notl
inc
push
test
mov
dec
incb
and
jg
push
mov
mov
pop
pop
push
cwtl
fldt
sub
mov
ret
add
gs
sub
adc
xor
cmp
cltd
jge
adc
enter
inc
pushf
jmp
mov
dec
call
fs
nop
sub
adc
lcall
xchg
xchg
xchg
xchg
dec
int3
das
inc
repz
or
fldcw
and
jno
pushf
mov
shl
ljmp
jb
cmp
in
or
cmpsb
sbb
shlb
ret
cmp
inc
push
imul
cmp
lahf
test
mov
xchg
divl
mov
mov
sbb
jns
movsb
ss
sbb
dec
add
test
ret
cmp
pop
addr16
cmp
stos
jmp
sub
sbb
scas
adc
push
imul
inc
mov
sbb
lahf
fidivrl
dec
lock
lea
cmp
out
mov
gs
movsb
mov
inc
push
sbb
inc
push
fwait
ds
js
or
out
jno
pop
es
gs
mov
xor
imul
push
push
insl
xlat
in
and
mov
test
jp
stc
or
in
icebp
dec
icebp
cltd
jmp
movsb
xchg
ja
pop
add
add
lods
inc
repz
out
inc
bound
sbb
or
in
loopne
mov
paddw
pop
int3
into
pop
xchg
sbb
mov
xchg
mov
add
sbb
jo
mov
mov
jmp
in
pop
rcr
mov
aad
icebp
call
xchg
jge
lret
cmp
in
stos
test
repnz
jns
mov
jecxz
scas
mov
cli
mov
add
pop
pop
jge
das
stos
pusha
pop
test
fildll
fs
daa
mov
add
daa
stc
cmp
and
push
mov
xchg
dec
out
nop
jmp
dec
scas
sub
jp
icebp
in
mov
js
mov
add
pop
mov
les
adc
mov
push
stc
push
dec
fsubp
ja
rorb
sub
dec
xchg
mov
dec
cmp
adc
lcall
loop
mov
subl
sbb
inc
repnz
mov
sub
cmp
lahf
inc
cmp
sub
std
iret
mov
xchg
dec
outsl
mov
mov
inc
and
dec
cmp
dec
add
pop
jp
iret
popf
and
and
cwtl
cmp
xchg
movsl
and
test
fwait
xchg
inc
outsl
jbe
pusha
and
shll
pop
popl
xlat
js
xor
inc
xchg
clc
push
outsb
mov
jg
lods
pop
enter
sti
adc
push
xor
push
add
test
cpuid
inc
cmc
data16
push
inc
jne
notb
xor
ror
add
jno
cld
xchg
and
cmp
adc
xchg
add
ret
mov
imul
dec
leave
nop
fldcw
int
hlt
stos
imul
jo
mov
addr16
call
xchg
fdivs
sub
inc
adc
cmp
or
jmp
in
pushf
out
xchg
and
loopne
jne
aam
pop
out
movb
jne
fisubs
adc
cmc
lock
mov
cmpsl
adc
push
add
loop
sbb
sbb
push
hlt
fsubr
xor
fbstp
mov
rolb
fdivrl
dec
ror
pop
jb
ljmp
hlt
jno
dec
imul
repnz
mov
cmp
aam
ljmp
jno
mov
xor
inc
mov
in
fstpl
fsubl
push
add
mov
nop
int
and
fldt
and
imul
inc
cmc
sahf
rolb
xchg
xchg
lds
insl
adcb
jns
rcll
test
pop
jecxz
push
movsl
test
xor
inc
mov
stc
dec
xor
pop
dec
adc
jne
xor
outsl
mov
push
xlat
imul
inc
inc
pop
push
xchg
out
arpl
dec
scas
mov
test
jge
lret
jns
shll
xor
xor
sub
lds
inc
loop
jle
loop
jl
and
jecxz
add
push
mov
sbb
shrb
inc
mov
cld
lea
inc
sbb
mov
sbb
out
cmp
testl
scas
add
xor
fisttpll
cltd
stc
jbe
int3
out
push
lcall
fwait
pop
test
pop
xchg
mov
insl
dec
jmp
gs
pop
jge
stc
mov
mov
xor
mov
test
jnp
add
mov
pop
cltd
rcrb
xor
lcall
mov
xor
dec
xchg
fiadds
adc
loop
xlat
mov
cmpsb
cmp
pop
sub
pop
mov
scas
inc
lock
ret
nop
ret
cmp
pop
push
sub
addr16
ret
or
scas
push
movsl
div
loop
hlt
push
jno
mov
ficoml
cmp
leave
jecxz
je
daa
aad
cmp
push
sti
adc
pop
imul
jp
jns
adc
jle
cmp
out
das
addl
xchg
inc
dec
jl
icebp
xchg
lods
lods
iret
out
cmpb
lahf
or
insl
cmp
fldcw
bound
lcall
mov
std
cmp
xor
insl
jge
dec
mov
push
xor
gs
adc
jp
xor
icebp
add
imul
negb
mov
pop
bnd
and
test
sub
mov
lret
add
add
dec
sbb
incb
into
push
insb
jl
std
cmp
inc
stos
jns
push
and
imul
and
add
rcl
div
ja,pn
scas
pushf
je
bound
test
and
test
das
sub
sbb
cmp
push
push
pop
push
jb
and
mov
jmp
lods
lock
xor
jmp
bound
xor
push
xor
lock
loope
pop
xor
adc
lods
sub
fidivrl
lea
dec
mov
xchg
sti
xor
mov
pusha
mov
fucomp
xor
shl
scas
es
push
sahf
fidivl
and
popa
jg
mov
iret
sub
sbb
mov
loopne
and
add
nopl
jno
pop
je
mov
pop
rcrl
mov
mov
or
xor
daa
push
or
pushf
xorb
or
shll
xchg
in
push
mov
iret
fldl
sub
xchg
aam
or
lahf
mov
dec
xor
or
xchg
repnz
js
call
into
jecxz
push
das
cmp
stos
dec
pushf
xor
repz
cli
pop
mov
ret
repz
rol
jmp
jp
inc
cmp
loopne
xchg
cld
in
push
jb
sub
jecxz
mov
and
push
sub
leave
call
pushf
call
push
das
sti
fwait
pop
jl
sbb
sbb
mov
mov
adc
loope
sbb
jae
repnz
jns
out
scas
arpl
pop
dec
mov
xlat
ds
std
cmp
mov
outsb
and
frstor
lret
dec
adc
clc
sbb
jnp
sub
arpl
shll
hlt
mov
and
jns
push
stos
cmp
sub
test
aam
data16
mov
sbb
rol
clc
xchg
add
dec
sbb
pusha
cmp
sbb
or
sbb
mov
cs
or
insl
out
mov
jae
push
adc
popf
mov
scas
in
lret
jae
jge
repnz
lcall
pop
mov
dec
ljmp
cmpsl
in
xchg
inc
add
mov
cmp
pop
pop
mov
xchg
insb
xchg
loope
daa
bound
ret
dec
jno
cwtl
lahf
sub
imul
insl
pop
and
call
fstl
xchg
int3
ss
out
jno
mov
push
lods
sub
cmc
push
and
scas
dec
inc
pop
dec
mov
popa
pushf
cmp
cwtl
pusha
in
sbb
aas
push
filds
in
xchg
mov
fidivl
nop
mov
cli
stc
inc
xorl
sbb
in
cs
push
pusha
mov
mov
cmp
xor
imul
inc
dec
xlat
inc
pop
pop
adc
mov
fs
out
jno,pn
and
out
or
jae
push
sbb
jge
lods
jp
push
push
addr16
repnz
std
std
mov
lahf
lea
aad
les
inc
out
mov
out
addr16
aam
or
ficoms
push
stos
mov
and
push
dec
inc
jle
shrl
inc
les
sub
pusha
int
aam
mov
or
mov
or
rcr
inc
push
and
jbe
js
adc
icebp
cmp
pop
and
aam
xchg
mov
inc
ljmp
xchg
sbb
scas
push
mov
dec
in
mov
jmp
push
cmpl
cmp
add
test
sub
inc
cmc
push
hlt
aaa
xchg
inc
push
add
stos
sub
pop
cld
xchg
adc
rorb
pushf
pop
pusha
jb
jno
cli
aam
test
dec
mov
repz
imul
push
pop
sbb
gs
fsubl
xchg
inc
pop
jl
sbb
push
or
lock
rolb
jmp
cltd
cmp
les
cmp
adc
clc
es
push
filds
out
fnstcw
pop
dec
daa
cli
mov
push
and
xorl
xchg
int3
mov
mov
and
call
mov
mov
mov
lods
icebp
cmp
iret
sbb
xchg
jle
jae
or
mov
xchg
andl
sbb
frstor
lds
xor
jno,pn
push
or
push
loope
imul
hlt
arpl
jecxz
imul
pusha
lds
inc
jmp
fucomp
ficoml
mov
push
les
push
cmp
mov
sbb
pop
push
mov
mov
pop
and
out
js
or
out
rolb
cmpsb
mov
cli
insb
adc
xchg
push
je
data16
inc
shl
push
dec
sub
xchg
je
dec
push
pop
addb
mov
mov
xchg
sbb
in
xchg
jl
dec
mov
push
cwtl
push
gs
push
int
cmp
mov
cmp
push
add
mov
and
fisubs
cmc
jge
dec
pop
xorb
xchg
mov
loop
cmp
repnz
add
mov
rcll
or
fisttps
shll
lcall
stc
push
stos
leave
fistps
mov
mov
adc
mov
cltd
mov
shll
xor
mov
pushf
divb
sub
or
jge
xchg
mov
sbb
xchg
in
loopne
rolb
jbe
nop
and
repnz
call
sub
int
pop
lods
push
and
cmpsb
movsl
mov
loop
loopne
lret
into
fdecstp
lret
sbb
pop
xchg
cltd
cli
push
inc
mov
nop
outsb
xchg
sarl
jne
xor
lock
pop
lea
pop
pop
daa
rcr
sub
lds
xchg
xor
loopne
leave
in
adc
fnstcw
aam
push
add
jle
mov
cld
clc
sbb
cmpsb
into
push
mov
orl
rclb
inc
mov
dec
mov
jp
in
mov
xor
push
xchg
xchg
into
pop
adc
xchg
dec
pushf
lret
or
inc
nop
sahf
mov
rcl
ficoms
cmp
ja
fisubs
test
push
adc
cmpsl
pop
les
popf
popf
cmc
subl
inc
mov
pop
lcall
jbe
sub
mov
jo
adc
inc
push
sub
mov
xor
daa
xchg
xor
jl
cltd
mov
mov
fnsave
subb
xlat
rcl
test
sub
les
cli
sbb
add
xor
and
je
xor
and
in
inc
and
xchg
jno
daa
js
jp
mov
fnstcw
hlt
fadd
cmp
filds
lock
xchg
neg
mov
ret
cmp
mov
mov
pop
adc
icebp
inc
and
lahf
push
jg
int3
testb
popf
push
cmp
pop
xchg
jns
mov
jle
lret
mulb
lcall
loope
mov
mov
sbb
pushf
inc
lea
andl
ja
leave
pop
cmp
xor
movsb
mov
shrl
test
pop
lods
repz
cld
inc
fmull
out
into
xchg
cmp
into
mov
sub
in
movsb
pop
add
pushf
lods
gs
test
jmp
aad
clc
jecxz
mov
mov
dec
mov
pop
jecxz
fsubrs
icebp
insl
cs
pop
mov
js
lahf
xor
out
push
push
sub
push
hlt
pop
jne
pop
arpl
cmp
int
sbb
sbb
fstpl
jo
jb
scas
out
inc
stos
xor
dec
mov
fsts
push
xchg
inc
xchg
xchg
ja
mov
das
sub
cmpsb
lods
jnp
push
adc
hlt
sbb
insl
dec
lret
mov
or
cwtl
mov
jb
add
cmp
mov
mov
movsb
xchg
dec
movsb
inc
cmp
jp
pop
imul
lock
adc
xor
cmp
cmp
lock
pop
sbb
or
and
bound
xchg
mov
std
sbb
inc
cmp
push
add
push
mov
push
data16
stos
sti
jns
iret
jmp
cmp
sbb
mov
and
addr16
push
inc
arpl
repnz
or
jge
cmp
sbb
jecxz
or
in
inc
stc
add
jbe
jmp
mov
mov
rcrb
inc
or
mov
je
or
push
jo
and
cmp
xchg
sub
mov
mov
lock
icebp
dec
jg
sub
sub
sete
ret
push
loope
xor
xchg
aas
adc
test
nop
jo
fwait
sbb
shl
lds
sar
decb
stos
push
cmc
sub
dec
scas
dec
xorb
dec
push
repnz
dec
pop
and
mov
xchg
and
xchg
loope
rcr
dec
aad
mov
iret
lcall
dec
inc
mov
mov
jl
shlb
mov
mov
xchg
sti
and
sbb
sub
addr16
or
jo
sub
fwait
rcrb
test
pusha
jmp
jg
mov
jmp
mov
dec
jmp
pop
fsubrl
stos
mov
push
push
inc
jmp
rcrl
daa
sub
xor
xchg
jo
push
cmp
sbb
dec
mov
push
cmpsl
fnstsw
cltd
and
add
movsb
test
shl
in
sahf
addr16
daa
add
push
xchg
lcall
loopne
dec
aad
nop
mov
fcmovne
mov
xchg
into
add
xchg
add
xor
sarl
arpl
dec
cmp
loope
fidivs
mov
or
push
pop
cmc
jl
or
roll
fistpl
jmp
cmpl
adc
call
les
push
iret
xchg
or
jmp
subb
loope
dec
neg
adc
mov
fcmovnu
daa
cmp
push
std
jb,pn
or
mov
test
in
jg
sub
fsub
or
int
das
sbb
cmp
fwait
mov
xor
jg
inc
mov
xchg
cmp
mov
sub
push
je
add
cltd
mov
mov
pop
orb
inc
cmp
fistps
int
clc
fptan
into
dec
shrb
cltd
xor
movsb
xor
cmp
xor
arpl
or
push
imul
es
and
stc
imul
pop
stc
sub
dec
jne
xor
pop
inc
xor
adc
xor
cli
sub
jne
arpl
shll
xchg
imul
adc
iret
cmpsb
das
mov
iret
dec
sbb
inc
sahf
inc
cltd
mov
jne
inc
xor
imul
icebp
and
jle
sub
repnz
icebp
xchg
sbb
add
jae
jae
into
ss
cmpsb
mov
push
jo
sub
cwtl
and
sub
and
rcr
or
test
jb
test
rorl
mov
or
inc
gs
jmp
push
dec
out
sub
xchg
cmpsl
and
shlb
inc
hlt
iret
mov
push
and
loopw
pop
sbb
sub
in
and
cs
and
int3
xor
les
dec
push
mov
icebp
insb
push
lods
jmp
mov
sbb
pop
dec
cmp
and
imul
sub
push
cmpsl
fstpl
jnp
js
mov
out
je
adcl
jae
pop
xor
or
pop
push
push
jnp
and
lds
jecxz
inc
cmp
sbb
push
or
xor
leave
lods
rol
cmc
adc
xlat
int3
out
paddsb
push
repnz
inc
or
dec
mov
pop
sbb
sbb
je
dec
mov
ret
jl
mov
lds
test
pop
enter
add
push
mov
lahf
jmp
daa
and
sti
lods
xor
daa
mov
inc
mov
test
add
lret
in
add
xchg
add
jl
enter
inc
movsl
mov
adc
cmc
push
hlt
add
pushf
push
lea
mov
push
mov
sub
xor
rorb
dec
scas
push
jae
in
lahf
insl
pop
jae
subl
shlb
push
xor
push
cmp
jmp
jbe
jl
push
mov
inc
shll
xor
lret
push
push
mov
lcall
adc
cmpl
jle
push
sbb
push
pop
mov
in
fildll
cs
iret
adc
jbe
test
pmulhw
add
hlt
mov
mov
cmp
jo
or
arpl
and
pop
add
mov
push
xchg
hlt
sti
enter
popl
pop
sub
insb
sbb
repz
fwait
shll
inc
dec
mov
or
pop
pop
and
icebp
sub
sub
lret
xlat
and
sbb
xchg
stos
push
cs
test
mov
dec
inc
mov
je
hlt
pop
test
push
jg
dec
sarb
addl
fcoms
mov
jmp
pop
jl
adc
scas
frstor
sti
dec
addb
xchg
pop
mov
push
hlt
xor
cmpsl
js
mov
shll
js
push
adc
out
lock
xchg
or
std
xchg
xchg
nop
push
sbb
sbb
sbb
rorb
add
jnp
sbb
and
arpl
jecxz
fwait
icebp
push
pushf
fcoms
xchg
pop
sbb
xor
into
sti
int
dec
xchg
test
cli
jno
clc
insb
dec
jns
lea
fiaddl
clc
ds
inc
sbb
or
rolb
push
mov
mov
mov
cmp
in
mov
ja
mov
xlat
call
sbb
movb
out
aad
gs
pop
ja
rcr
shl
push
and
and
test
movsb
jb
rcll
xchg
mov
cmp
push
mov
pop
push
insl
pop
fsubp
dec
lahf
add
mov
addb
sbb
test
loop
dec
movsl
xchg
mov
push
sub
fdivrs
rorb
test
es
cmpsb
in
and
jecxz
pop
sbb
sub
insb
jecxz
cmp
cltd
jg
out
or
mov
loope
bound
mov
mov
xchg
in
mov
cld
cmpsb
jecxz
jp
gs
jmp
add
hlt
cmpsl
fcmovnb
jle
lea
xor
cmp
pop
pop
cltd
cmp
xor
pop
daa
popa
push
gs
xchg
mov
xchg
dec
or
out
dec
mov
jge
popf
out
es
pusha
jo
bound
clc
jae
lahf
in
dec
mov
int
sbb
and
pop
ret
xchg
aad
stos
pop
jge
call
cmpsl
mov
scas
lea
int3
test
dec
adc
or
sub
adc
cmc
pop
and
mov
xchg
dec
mov
jl
dec
push
insl
out
mov
cmpsb
push
test
cwtl
popf
xchg
push
and
lods
fimull
or
pop
xchg
cld
fwait
pop
mov
xchg
mov
arpl
fimull
lods
fwait
clc
test
cmp
jecxz
and
ficoms
cwtl
lret
and
and
pop
sti
mov
lcall
adc
shlb
dec
pop
loope
cs
and
mov
mov
pusha
insl
mov
dec
cmp
rolb
mov
pop
mov
xor
sbb
fldcw
xchg
cmpsl
pushw
ror
cld
push
incl
and
sbb
sub
fs
sbb
sub
in
pop
sbb
int
add
xchg
adc
jecxz
es
bound
push
mov
int
and
sub
in
stos
aam
rolb
arpl
jle
inc
mov
mov
or
lahf
lods
inc
push
sub
cmc
or
push
or
push
subb
stos
pop
pop
shl
dec
add
dec
mov
push
gs
xchg
push
xor
loopne
nop
fiadds
add
xchg
xchg
repz
sub
cmp
nop
dec
lret
mov
outsb
fadds
repz
mov
shll
sbb
xor
xchg
xor
hlt
add
aam
rcl
mov
fldt
shll
ret
xor
cmp
sbb
je
sarb
inc
stc
xchg
fadd
cli
outsl
sbb
sub
xor
cwtl
dec
xlat
jne
lret
aas
aas
sti
xchg
cltd
pop
xor
pop
rorb
out
ja
sub
int3
lds
xor
cmp
ja
pushf
pop
mov
dec
scas
add
addb
scas
xchg
adc
mov
pop
push
bound
lea
xor
push
fimull
mov
lds
xor
fs
jnp
lahf
add
call
xor
inc
mov
repnz
push
jo
sub
mov
aam
push
cld
imul
sbb
sarl
aaa
rol
dec
lahf
fmull
xor
movsb
ret
popa
arpl
pop
bound
sahf
or
dec
mov
mov
jecxz
fcmovnb
aaa
cmp
push
out
adc
iret
sbb
call
jbe
mov
cmp
fists
push
out
mov
stos
inc
int3
adc
in
pop
imul
xchg
movl
popf
adc
dec
jg
sahf
cmpsb
aaa
sbb
push
cmp
jle
mov
jbe
outsl
push
mov
decl
push
xor
dec
sahf
insb
jle
sub
mov
mov
das
xchg
fdivrs
and
dec
jno
cmp
ja
cld
in
mov
mov
push
mov
subb
cmp
lahf
add
xor
arpl
push
xlat
sbb
mov
mov
and
inc
pop
xchg
cmp
mov
pop
mov
xor
lcall
in
aam
add
lret
outsb
adc
insb
pop
bound
dec
inc
popa
insl
das
inc
in
shrl
loopne
loop
leave
scas
and
adc
ss
mov
out
dec
scas
xor
sub
scas
pop
xor
jp
ficomps
mov
shl
mov
inc
movsl
jp
sbb
add
or
xor
cwtl
adc
fdivrl
out
stc
cld
insl
xor
jb
je
xchg
jo
mov
xchg
incl
in
mov
in
insb
pop
xor
inc
cs
sub
test
into
scas
sbb
jns
scas
or
ret
mov
lods
adc
jge
cmpsl
popa
jnp
add
out
outsl
mov
jo
push
mov
cwtl
sub
es
fdivrl
aaa
mov
mov
pop
sqrtps
jne
out
push
push
cmp
fsts
and
in
es
xlat
insb
mov
xchg
pop
mov
add
in
mov
dec
mov
arpl
f2xm1
mov
lods
push
sbb
pushl
faddl
aam
sbb
roll
xchg
xchg
gs
stc
dec
inc
sub
push
sar
add
push
mov
stos
bound
cwtl
mov
cmpl
mov
movsb
pop
loop
int
pop
jo
rcll
xor
shl
mov
test
fisttpll
testl
xorl
mov
inc
push
pop
popa
inc
in
movl
aad
mov
mov
xor
imul
add
pop
inc
lods
test
xchg
cli
or
mov
in
jecxz
jb
push
nop
test
xchg
xchg
pop
outsl
mull
xchg
and
mov
icebp
xor
stos
sub
xchg
lods
fcomi
in
pushf
sbb
shll
out
add
push
test
mov
loopne
sbb
xchg
mov
xor
inc
mov
or
dec
push
ret
mov
stc
fwait
cwtl
inc
int3
imul
scas
or
call
xor
xchg
xchg
std
dec
mov
aad
pop
jo
push
mov
push
inc
cmpsb
fnstenv
sub
cmpsl
jbe
dec
neg
pop
mov
mov
clc
fcmovne
cmpsl
jns
mov
lret
xchg
cmp
adc
call
int3
cmc
mov
jp
iret
fiadds
fiaddl
mov
in
jmp
cmpsl
mov
aad
dec
push
mov
push
popaw
insl
and
add
adc
push
adc
cwtl
aas
push
inc
push
cmc
dec
sub
add
push
movsb
stc
dec
sbb
xor
xor
jo
rorb
sub
xchg
mov
or
pop
push
push
int
mov
cmc
mov
mov
fwait
mov
out
cmp
add
jno
jle
sub
loop
push
xor
lcall
ljmp
cld
push
dec
push
fld
mov
mov
repz
rolb
test
inc
sub
fldl
lods
adc
out
dec
xor
adc
mov
frstor
mov
out
dec
loop
and
sbb
imul
ljmp
xchg
xor
pushf
jae
aam
clc
sbb
add
insb
fldl
xorl
add
nop
fmulp
inc
inc
xchg
or
fwait
hlt
add
test
inc
mov
mov
push
in
pop
inc
jl
jmp
ljmp
outsl
out
cmc
call
sub
mov
or
mov
push
xor
mov
daa
into
cmp
je
fistl
push
icebp
inc
xchg
addr16
dec
cmp
xchg
loope
xchg
jmp
callw
sbb
push
pop
pop
dec
popa
stos
jp
cmpsl
faddl
mov
and
mov
out
jbe
push
jbe
stos
inc
bound
mov
inc
mov
mov
or
rorl
xor
xchg
pushf
add
mov
add
jecxz
push
addr16
sar
aad
add
fcmovb
mov
pop
das
xchg
inc
ja
not
imul
or
adc
mov
xchg
and
adc
xchg
imul
xchg
push
cmpsl
test
jge
sbb
pop
inc
mov
sbb
pop
and
mov
mov
jge
not
jecxz
push
dec
shll
rclb
jmp
sbb
sub
fldcw
sbb
rcrl
mov
or
sub
mov
and
aaa
inc
sahf
cmp
ljmp
jmp
pop
sbbl
xchg
or
outsb
fistps
push
mov
mov
mov
fldenv
fsubl
in
int3
xchg
je
fs
sub
je
sbb
ror
daa
jmp
iret
daa
push
aaa
incb
leave
push
and
inc
loop
cld
lds
in
andb
dec
popa
mov
fiadds
add
adc
fs
xor
pop
mov
xor
std
rclb
nop
icebp
push
sub
jne
sub
ret
xchg
mov
sub
subl
sub
loopne
add
dec
aaa
xor
or
jle
xor
scas
sbb
shlb
push
inc
xchg
repz
shlb
out
clc
stc
pop
scas
lcall
xchg
xor
push
mov
out
cmp
cmpsb
sbb
jp
cmp
mov
stos
rcl
and
inc
lds
push
fnstenv
out
sbb
pop
xor
into
or
call
addr16
inc
rol
mov
fs
pop
jle
and
mov
jl
xor
mov
add
cmp
movsb
shrb
cmpsb
mov
mov
into
popl
pop
inc
jmp
lock
push
mov
mov
pop
insl
mov
popf
std
mov
lea
pop
int3
mov
cmp
ljmp
xor
xchg
lcall
popf
fadds
xchg
adc
iret
mov
shrb
rolb
inc
lret
insb
pop
sbbl
cmp
addb
xchg
push
push
mov
fnsave
mov
cli
xchg
in
pop
leave
jle
sarb
ljmp
lods
bound
rorl
xor
jnp
sbb
clc
or
imul
dec
sbb
sub
lret
mov
xchg
mov
xchg
pop
mov
inc
jb
arpl
xorl
hlt
or
rcll
test
sbb
loopne
xchg
iret
fs
lret
test
push
mov
mov
ret
pushf
or
mov
lret
lahf
sbb
shrb
inc
inc
sti
jno
ss
jo
jno
xor
rorl
pop
xchg
inc
lret
std
popa
test
clc
sbb
mov
dec
fs
xchg
aam
out
xchg
xor
mov
sbb
fwait
out
out
pop
movsl
mov
pop
jns
cmp
xchg
fidivrs
lret
cmp
sahf
repz
in
and
push
loopne
add
arpl
imul
push
mov
cmp
mov
sub
cli
aam
inc
roll
adc
push
push
stc
arpl
pusha
adc
neg
imul
xchg
push
jbe
scas
pop
push
sar
scas
push
mov
iret
mov
cmp
jl
hlt
roll
dec
stc
cmpsb
cwtl
mov
and
cld
or
xchg
and
enter
push
cmpsb
xchg
add
sbb
scas
iret
rorl
xchg
lods
cmp
or
push
in
out
xchg
std
sub
adcb
dec
or
adc
aas
into
mov
mov
mov
pop
jnp
not
cli
and
sbb
push
je
mov
iret
in
jbe
inc
dec
imull
arpl
fnsave
bound
lret
add
mov
aas
mov
dec
mov
das
jmp
adc
or
and
pusha
and
jae
jns
push
jle
test
arpl
xchg
push
jmp
mov
sub
sbb
adc
test
add
lea
or
cmpsb
push
inc
or
lcall
mov
jge
imul
jmp
das
ret
lret
ror
adc
movsl
fst
in
cmpsb
mov
mov
inc
icebp
xchg
jp
inc
stos
jo
add
test
rol
inc
test
or
push
push
jno
js
test
and
jp
inc
mov
test
sbb
xchg
or
sub
pop
mov
and
xchg
adc
hlt
jle
jnp
sub
outsl
inc
das
cltd
dec
stos
cmp
ljmp
test
xchg
adc
jmp
fs
testl
test
jg
add
rorb
in
je
or
lret
sbb
xchg
and
pop
jns
cmpsl
pop
push
or
jo
lds
push
dec
lcall
sar
lock
xchg
cmp
in
call
cmp
fiadds
repz
adc
pop
lret
out
loop
adc
cmpl
ret
cmp
sbb
xor
or
ret
test
push
sti
addl
mov
push
pop
das
hlt
loope
sbb
repz
fildl
add
int3
mov
add
pop
push
push
lods
fcomi
sub
push
mov
test
cwtl
mov
mov
loopne
inc
pushf
xchg
jns
cmpsl
mov
fmulp
cli
into
fsubrp
ss
cld
push
push
cmp
out
inc
test
imul
repnz
divl
adc
scas
sbb
jns
adc
mov
jo
cmpsl
cli
push
pop
inc
jp
pop
mov
push
fdiv
dec
lcall
aam
jp
mov
pushf
inc
iret
add
mov
jg
in
cld
dec
fidivs
or
xchg
repz
xor
pop
addl
andl
sub
in
mov
push
sbb
mov
mov
xchg
ret
lahf
shll
das
cmp
mov
clc
xor
xor
mov
shlb
nop
imul
lret
addr16
dec
jl
aas
xor
mov
cmp
push
test
mov
mov
mov
sbb
mov
adcl
mov
cmp
mov
pushf
ja
jmp
stos
push
or
xchg
add
stos
out
xchg
loop
movntq
pushf
aad
cmpsl
push
arpl
cwtl
insb
sub
loop
icebp
push
in
in
loop
or
cmpsl
ds
test
andb
and
aad
pop
add
sbb
cmp
fldt
and
mov
fisubs
imul
cmp
clc
std
ljmp
push
in
addb
dec
and
push
sbb
push
lret
ret
mov
aam
mov
popa
xchg
repnz
xchg
and
sbb
fsubrl
jecxz
jge
inc
and
push
mov
push
in
push
mov
push
imul
out
mov
inc
mov
cld
add
xchg
mov
and
mov
fmull
out
inc
or
es
xchg
cmp
mov
ja
and
xlat
add
roll
arpl
ljmp
shl
jno
pop
or
xchg
xchg
and
rcrl
fldcw
repnz
sbb
aas
add
icebp
adc
push
loopne
add
clc
jb
scas
and
add
lgs
aad
sub
sbb
dec
jne
inc
add
ja
pop
push
lds
pop
or
jns
call
shll
mov
cmpsb
pop
fisubl
fidivl
and
pop
or
fisubrl
mov
mov
test
pushf
push
out
push
push
jle
aaa
add
paddq
mov
call
fcmovu
inc
fdiv
in
jg
shr
leave
in
ret
aas
je
in
or
ficompl
adc
xchg
lahf
xor
cmpsl
inc
cmpsl
pop
lcall
rcr
adc
inc
dec
fidivl
inc
push
nop
xchg
aas
push
pusha
mov
pop
sbb
xchg
pop
aaa
enter
fistps
cmc
pop
sub
or
insb
mov
xor
das
stos
or
movb
mov
pop
push
insb
enter
jecxz
cmp
test
orb
outsb
xchg
pop
mov
or
cld
iret
mov
aaa
aas
mov
scas
lock
mov
jbe
mov
xchg
loop
push
xor
pop
push
push
movsb
or
scas
mov
xchg
jmp
daa
in
and
leave
test
push
push
aaa
lret
aaa
pop
rcl
pushw
cmp
rorb
fimuls
leave
sbb
dec
inc
mov
xchg
and
je
jb
popa
jo
jns
pop
aad
ss
pop
call
pop
jbe
movsb
mov
dec
push
ret
and
fs
pop
scas
in
xor
notl
pusha
pop
xchg
cwtl
frstor
repnz
in
push
punpckhwd
jno
aaa
and
mov
pop
mov
orb
stos
inc
sbbb
sbb
xchg
pop
sub
out
data16
mov
push
cmp
pop
or
mov
cmp
notb
imul
rcr
mov
in
mov
push
dec
jl
pop
dec
cmc
inc
push
jb
jg
icebp
fs
jns
outsb
outsb
xor
fmulp
js
and
imul
inc
pop
leave
add
xchg
outsl
testb
imul
mov
pop
jb
cld
stos
decl
push
adc
add
bound
das
mov
push
lret
repnz
pop
aaa
aas
and
mov
mull
mov
popf
mov
add
out
mov
loopne
imul
shlb
push
scas
cmp
push
fdivrs
jae
shrl
xchg
push
jmp
imul
aam
incl
rol
fmuls
cmc
pushf
mov
jne
jmp
mov
sbb
insl
mov
pop
inc
mov
xor
mov
cmp
push
push
push
sbb
arpl
cmp
or
mov
seta
int3
mov
lcall
jae
pop
je
pop
jecxz
xchg
and
js
cs
in
imul
ss
mov
scas
xor
sarb
jp
je
inc
outsb
faddl
aas
dec
xchg
sub
test
in
popf
xor
pop
add
call
mov
or
push
dec
dec
cmp
mov
fwait
xchg
or
stc
les
int3
jg
lret
outsl
test
dec
data16
lret
push
adc
and
out
add
repz
jp
push
int3
ljmp
cmpsb
xlat
lds
jge
mov
shll
push
xor
mov
jb
insb
movsb
idivb
insb
pop
xchg
loop
pop
inc
jmp
nop
xor
fmul
and
iret
pop
sbb
pop
cld
add
add
pop
push
jne
aas
lret
push
push
lods
mov
jle
scas
test
or
fsubrl
inc
addl
andb
adc
outsl
cmp
roll
mov
pushf
cmp
add
scas
xor
pop
mov
dec
jno
clc
sarl
jmp
ss
shrl
push
stos
pushf
cwtl
adc
lcall
jp
jne
fwait
adc
lret
scas
ss
out
mov
sbb
or
adc
push
ds
and
int
scas
or
push
out
fcmovb
clc
ja
outsb
ret
sbb
sub
sub
add
mov
cs
lods
mulb
lea
mov
sub
push
adc
je
adc
std
sub
push
psadbw
jne
pusha
jns,pn
xor
hlt
inc
adc
stos
test
push
inc
outsb
sbb
xchg
pushf
aaa
add
pop
or
out
jp
outsb
mov
xchg
inc
in
test
mov
push
push
iret
mov
stos
push
ret
cmp
addr16
and
lret
xor
dec
or
scas
or
iret
ss
sub
bound
out
aas
fsubrl
rcrb
into
loopne
call
into
sarl
add
lret
adc
adc
dec
loopne
push
cwtl
xchg
push
loope
std
push
sub
ljmp
mov
aad
sbb
stos
movsb
enter
lock
aaa
cld
js
in
test
addr16
rcr
cmc
nop
and
imul
lods
mov
pop
daa
rcrl
pop
jnp
add
in
inc
or
cmpl
loope
mov
push
jbe
leave
cmc
fs
outsb
mov
jmp
xchg
lds
test
sbb
jg
rcrl
std
ljmp
arpl
stos
test
xchg
out
adcl
out
mov
inc
push
push
bound
pushf
pop
mov
das
mov
test
cmc
dec
fdivrp
mov
jne
fs
cmp
cmp
in
push
cmpsb
jle
jle
je
shrl
mov
mov
dec
stos
cli
das
lcall
cmp
adc
xchg
ljmp
dec
adc
imul
addr16
cmp
bound
pop
or
inc
arpl
ficomps
dec
outsb
cmp
inc
dec
aam
jmp
or
cmpsl
mov
push
shrb
fisttpll
filds
or
rcrl
insl
jge
dec
mov
push
je
pop
test
ljmp
into
or
fdiv
out
stos
xlat
dec
fucomip
ja
push
jne
xor
sti
pusha
lahf
nop
gs
lock
pop
dec
int3
pop
and
push
shll
js
int
mov
sub
cmp
loop
or
int
sbb
stos
mov
cmp
push
cmp
jne
bound
mov
sub
imul
pop
sbb
mov
pop
sub
scas
ss
push
and
loopne
dec
adc
jge
leave
xlat
call
test
xchg
mov
int3
stc
insl
fcmovne
sbb
jp
add
ficoms
dec
and
mov
xchg
iret
mov
loope
xchg
dec
xchg
add
push
xor
pop
sub
rcrb
pop
mov
shl
fnsave
mov
inc
pop
js,pn
xlat
and
dec
popf
out
fdivrp
adc
out
push
xor
dec
and
mov
aam
in
adc
add
mov
cmp
mov
pop
hlt
jmp
popa
in
push
movsb
mov
push
xchg
push
inc
jb,pn
lahf
sbb
test
sahf
xorb
push
out
not
sub
sbb
pusha
cld
in
cmp
pop
movsl
inc
sub
mov
cld
sub
xor
push
pop
iret
mov
jmp
mov
pop
sub
xor
cltd
push
fistl
fisttps
adc
ror
mov
aad
push
jmp
jns
sub
cmp
dec
ffreep
adc
xchg
mov
xchg
fnstsw
sub
movsl
cwtl
fmuls
xor
mov
and
push
and
dec
cltd
sbb
push
jne
sbbb
xchg
xchg
outsb
int3
xchg
fucomi
xchg
adc
insb
movsl
jge
adc
fsts
nop
inc
push
addr16
adc
adc
pop
into
pop
popf
or
jge
inc
push
and
sub
xchg
add
jbe
add
repnz
mov
mov
cld
negb
into
pop
shlb
sub
inc
or
mov
dec
repnz
ret
dec
cmc
je
sub
sub
inc
ds
sahf
addr16
mov
lods
and
sbb
enter
das
xchg
xchg
mov
hlt
into
mov
sbbl
dec
jmp
cltd
jmp
jmp
bound
test
lock
out
sub
adc
or
jp
adc
test
inc
cmp
add
dec
xor
ljmp
inc
lret
push
sbb
push
pop
add
fldt
add
sti
dec
xchg
stos
and
cltd
test
inc
cmc
mov
fimull
fstpt
mov
fsubs
xchg
popa
stc
int3
xchg
pop
inc
stos
cli
xchg
repnz
ss
movsl
outsb
pushf
test
cmpsb
sub
lret
test
lock
jns
mov
push
xchg
idivl
adc
mull
addb
push
mov
arpl
out
addr16
aad
add
popa
std
pop
sub
mov
dec
pop
insb
fs
lods
dec
call
push
je
mov
xchg
dec
mov
jne
loopne
pop
leave
push
fldl
loopne
add
mov
adc
imul
test
push
xchg
scas
push
fadds
cmp
arpl
push
xchg
add
mov
add
sbb
fdivrl
in
sub
or
cwtl
cmc
int3
lds
push
das
mov
jp
pusha
jmp
out
loope
enter
bound
xorl
sub
jb
out
mov
or
xor
push
imul
stos
xchg
mov
pop
shr
das
call
mov
dec
test
mov
mov
push
xlat
push
loop
in
mov
mov
lock
dec
call
test
movb
ja
mov
jbe
push
jnp
xlat
ja
dec
ja
inc
xchg
xor
pop
cmc
lea
dec
lahf
lahf
movsb
dec
mov
jg
mov
orb
jae
int3
jbe
ret
aaa
xchg
cmp
fldl
addr16
adc
dec
sti
rcrl
enter
cmc
jae
loop
in
sub
repz
in
inc
call
adcb
inc
fwait
mov
aad
mov
ss
aam
sarl
xchg
add
dec
iret
inc
and
stos
push
ds
cmpsb
cmpsl
leave
mov
mov
pop
push
dec
sbb
arpl
push
add
pop
stc
push
add
iret
fadds
mov
inc
sub
xchg
mov
nop
xor
mov
cmp
leave
outsl
jg
testb
inc
sbb
xchg
sbb
sub
add
mov
push
pop
xchg
sbb
sbb
shll
push
shll
inc
jae
andl
outsl
add
aas
shrl
pop
sub
mov
xchg
lock
pop
fcom
mov
adc
jno
cmp
popa
add
mov
jl
gs
sub
sbb
rdtsc
rcr
and
mov
mov
xor
iret
jl
inc
loopne
loopne
pushf
daa
pop
test
inc
ljmp
sbb
mov
pop
insl
inc
out
mov
mov
jae
rol
xor
and
bound
pop
clc
jg
iret
pushl
add
lods
ficoms
rolb
mov
fisttpl
push
add
or
add
sub
fldt
cmpsl
sbb
in
out
cmp
or
insl
cmp
out
fsubl
push
out
outsl
xchg
aas
sub
bound
rol
pop
nop
mov
dec
or
mov
js
ret
mov
xchg
mov
jbe
mov
push
mov
mov
jb
call
push
rcrb
movsb
mov
test
pop
aas
pop
xchg
and
dec
ljmp
insl
mov
out
push
scas
pop
stos
jle
mov
sbb
push
xor
inc
sub
jnp
cltd
je
fwait
movmskps
lret
lahf
repnz
jbe
loope
in
mov
xor
in
mov
push
xchg
sar
inc
int3
dec
cltd
lock
mov
iret
subl
lret
mov
mov
cvtps2pi
dec
xor
push
arpl
sbb
fcoms
aam
cmp
jmp
or
mov
pop
inc
mov
arpl
icebp
mov
data16
mov
pusha
xchg
loope
dec
arpl
lods
into
sahf
or
stos
mov
inc
roll
jbe
xchg
cwtl
dec
xor
movd
mov
xor
std
mov
jmp
dec
dec
sub
mov
fmull
cltd
scas
ljmp
aam
iret
addb
data16
push
sub
jle
pop
xlat
or
into
movsb
outsl
inc
or
js
mov
sahf
outsb
jo
sbb
roll
pop
pushf
andl
add
jnp
xor
call
sbb
and
or
imul
pop
icebp
mov
and
inc
data16
nop
ja
mov
jecxz
outsb
push
cli
ljmp
ret
lods
out
fs
and
pop
mov
subl
or
cli
sahf
xchg
loope
adc
lcall
pop
dec
jle
int
aam
lret
xlat
dec
mov
and
orb
cmp
cli
cltd
sub
mov
repz
scas
clts
sbb
nop
daa
and
mov
sbb
dec
test
jge
jno
adc
cmpsb
adc
lods
dec
mov
mov
sbb
lods
sbb
cli
or
push
ficoml
loope
out
pushf
icebp
data16
movsl
je
loop
fdivrp
pop
popa
add
push
int3
clc
lods
jle
scas
int3
in
sub
bound
inc
insb
es
insl
popf
in
mov
xchg
das
scas
stos
ret
mov
rolb
mov
dec
lods
repnz
loopne
jge
in
sbb
aad
cmc
test
add
stc
push
inc
xor
and
pushf
mov
jno
cmc
ret
ds
sub
sbb
repnz
mov
xchg
pop
test
insl
jnp
pop
jecxz
pop
out
mov
mov
or
repz
sub
fldenv
addr16
pop
es
jo
jp
push
push
or
sbb
push
mov
icebp
push
mov
lods
sub
mov
les
aam
mov
cwtl
jg
jnp
mov
add
jg
cmp
lcall
mov
loope
xor
dec
add
mov
aad
push
std
mov
dec
sbbl
and
sbbl
mov
movsl
ja
ret
xchg
push
and
or
jle
push
fstl
inc
popf
scas
pop
mov
inc
into
lds
xchg
aam
fstpt
lcall
pop
dec
jns
aam
mov
aam
dec
jge
xchg
mov
mov
sarb
shr
or
into
adc
fnsave
pushf
xlat
and
sub
mov
inc
inc
insl
mov
jne
mov
mov
and
aaa
orl
outsb
aas
in
or
fldenv
adc
imul
popa
negl
adc
aam
out
dec
mov
inc
pop
inc
mov
lds
pop
mov
pop
aam
fisubrs
sar
jg
jecxz
repnz
inc
sbb
push
ret
mov
loope
loopne
or
ja
into
rolb
sub
into
add
lret
shll
mov
outsl
movb
and
ss
loopne
arpl
retw
add
sbb
movsb
xchg
imul
in
or
stc
je
ret
dec
xchg
pop
inc
fwait
push
cmp
inc
sbb
out
movsb
dec
mov
aad
mov
mov
add
or
mov
jg
dec
loope
mov
mov
ja
pop
pushf
inc
call
es
std
xchg
jg
cmp
sahf
sub
rcr
mov
dec
jecxz
xor
mov
inc
xor
cld
loope
sub
test
outsl
add
ljmp
dec
das
mov
jl
or
mov
lock
jecxz
and
clc
jnp
add
or
pop
sarl
ds
xchg
mov
test
stos
cmp
call
inc
and
outsb
pop
mov
sahf
clc
or
imul
add
pusha
mov
fistps
sbb
pop
fstpt
mov
add
aas
cmp
lods
cmp
jl
sub
sub
movsb
sbb
add
test
in
mov
pop
or
push
push
leave
xor
pop
add
pop
dec
popa
pop
sbb
movsl
mov
xchg
push
push
pop
push
add
and
stos
or
cld
imul
jle
rol
and
inc
add
sbb
pop
pop
dec
push
jp
mov
into
push
lea
in
fcmovnb
push
xchg
leave
pop
insb
call
ja
push
mov
scas
leave
and
adc
mov
icebp
mov
xchg
in
scas
outsb
adc
daa
inc
stos
mov
in
aaa
imul
add
sti
sahf
int
pop
data16
out
dec
push
pop
fwait
stos
in
jmp
dec
pop
xchg
insb
push
jns
icebp
adc
push
xchg
orb
movsl
insl
test
inc
push
fildl
sbb
mov
jns
ja
lahf
dec
xchg
int
das
scas
mov
out
push
jno
add
inc
les
sub
xchg
fwait
jno
sub
and
push
pop
adc
sub
xchg
mov
push
xor
ret
je
leave
inc
out
xor
iret
loopne
adc
and
xchg
dec
push
sarl
mov
mov
movsl
push
out
pop
mov
xchg
jg
test
push
push
test
cmp
cmp
xor
inc
lods
fisttpl
xor
pop
push
clc
lods
lds
adc
call
pop
aas
push
dec
mov
in
push
les
add
dec
arpl
pop
add
xchg
loope
adc
jp
enter
fildll
aad
add
aad
xor
movsl
dec
int3
add
jnp
jecxz
sub
bound
mov
popa
xor
mov
lcall
shrl
pop
outsb
xchg
pushf
sbb
push
gs
or
out
ja,pn
jb
sar
popf
imul
inc
pop
mov
mov
lcall
aad
sbb
adc
js
or
stos
hlt
jge
pop
cltd
pop
in
cmp
lock
jmp
cmc
cmp
mov
mov
mov
or
addr16
int3
addr16
cmp
mov
mov
jecxz
shr
add
std
and
aaa
inc
mov
fmul
ret
sarl
js
cltd
push
mov
mov
js
loopne
sbb
jne
mov
sub
ljmp
insl
push
pusha
insb
cmp
mov
pop
push
or
mov
je
push
inc
cmpsb
sub
pcmpeqd
xchg
mov
mov
cmp
ljmp
icebp
push
aam
adc
aas
mov
add
sub
mov
mov
outsl
pop
insl
push
jae
or
loopne
push
daa
fldln2
loope
stos
xchg
and
leave
mov
repnz
mov
adc
leave
push
cmpb
pop
inc
jnp
into
jge
pop
stc
repz
mov
in
enter
inc
stc
ljmp
jmp
add
repnz
lret
xor
cmp
pop
and
cmp
cli
insl
sbb
mov
imul
sbb
fnstsw
mov
addr16
mov
iret
dec
fwait
arpl
in
mov
pop
mov
ret
pop
sahf
xor
gs
subb
mov
stc
or
int
arpl
imul
inc
lods
inc
xlat
loope
aas
push
add
sub
scas
or
pop
add
es
lcall
daa
cmp
sbb
clc
shll
fcmove
push
sarl
stos
out
data16
fcmovb
add
mov
inc
adc
mov
ss
mov
fmul
pop
lock
ror
push
xor
push
movsl
loope
mov
sub
js
mov
stos
sub
dec
rolb
pop
lds
je
shlb
mov
inc
cmp
sub
push
mov
mov
lahf
cli
into
cwtl
sub
sub
sbb
mov
je
pushf
lcall
jne
loope
mov
xor
cmp
lcall
test
cli
or
pop
add
push
mov
cmp
mov
in
lock
push
push
lcall
push
or
aam
ja
movsb
pop
call
xor
push
cltd
mov
dec
ret
mov
sbb
mov
pop
js
sarl
sub
inc
jl
adc
popf
movsb
into
pop
inc
les
push
divb
and
jb
pop
shl
rcll
insl
fs
out
push
pop
sti
adc
lea
mov
out
in
dec
fisttps
mov
push
adc
test
or
mov
hlt
mov
cmp
test
decb
xor
into
pushf
out
xorb
push
dec
mov
shr
mov
sub
mov
insb
fimull
mov
push
xchg
add
popa
test
jg
stos
add
xchg
pop
hlt
imul
mov
inc
jecxz
dec
ja
xchg
pop
or
cmp
sbb
add
cmpsb
insl
sbb
mov
aas
movsl
mov
dec
loope
xor
xor
and
mov
es
mov
xor
sbb
ret
dec
cmp
xlat
mov
pop
std
pop
je
jge
dec
or
mov
pop
pop
jecxz
mov
mov
mov
push
data16
push
cltd
jge
jae
jge
push
sbb
pop
cmpb
sub
jne
decb
ljmp
xchg
lea
mov
ds
out
xor
je
xchg
mov
dec
push
add
aaa
xor
add
mov
in
xor
mov
xor
cltd
push
fisubrl
lods
pop
dec
clc
cmp
inc
mov
mov
es
repnz
sub
inc
ret
jecxz
sub
mulb
dec
je
lret
cs
lcall
cmpsl
pop
sahf
mov
in
and
scas
mov
inc
lcall
and
ljmp
cmp
test
sahf
and
or
pop
clc
les
add
aas
sbb
or
xorb
and
push
ljmp
aam
dec
pop
leave
inc
mov
adc
dec
and
add
imull
sub
pop
ljmp
mov
movsl
jo
pop
mov
mov
aaa
hlt
test
inc
out
mov
jg
dec
sti
popl
out
addr16
mov
das
mov
or
xor
popf
cwtl
cld
addl
scas
mov
pop
xchg
mov
addb
das
inc
repz
xor
in
addb
sbb
mov
std
xlat
inc
mov
jne
mov
push
lods
imul
pop
push
ret
test
xor
loop
subb
add
cltd
push
jbe
mov
pop
jns
mov
jb
into
pop
push
mov
and
xlat
lds
add
pushf
push
jmp
and
pop
pop
aad
sub
pop
addr16
jo
push
test
cmp
dec
push
or
subl
pushf
adc
cltd
xor
push
test
add
cmp
jo
jb
aad
cmpl
ljmp
movsb
sbb
lret
lahf
mov
movsb
fnstcw
inc
mov
lahf
les
lds
pop
into
aad
rorb
shrb
cmc
and
inc
mov
pop
and
ret
add
or
mull
stc
mov
aas
movsl
or
jecxz
pop
xor
popl
jmp
mov
pop
in
das
jnp
jmp
rorl
xchg
mov
mov
add
jmp
test
das
jno
jp
mov
lahf
ss
icebp
daa
or
mov
dec
div
mov
jno
fcmovu
jp
jno
jg
cmp
rcll
jp
insl
arpl
stc
inc
repz
sti
or
cmp
loope
fdivp
and
jle
incl
addr16
enter
cmp
popa
out
adc
mov
and
mov
jp
sub
pop
pop
mov
jge
or
loopne
in
call
add
leave
ja
das
sbb
cmp
hlt
stc
cmp
rclb
push
mov
or
pop
sbb
insb
loope
scas
mov
or
sbb
pop
dec
mov
lcall
mov
mov
xor
and
mov
lret
sti
xrelease
loope
mov
sub
scas
pop
inc
mov
pop
jp
xchg
push
add
iret
mov
aas
cs
mov
add
je
notb
inc
mov
xor
fisttpl
rcll
xchg
or
fsubrp
ficoml
cmp
mov
imul
inc
adcl
inc
adc
icebp
lea
xor
inc
sbb
pop
dec
out
shrl
cmpl
insl
pushl
jb
arpl
mov
test
iret
inc
xor
add
mov
sbbl
lods
pop
sbb
rcrl
enter
dec
add
sub
ret
stc
in
mov
sar
mov
jg
insl
xchg
dec
adc
repnz
notb
pop
jecxz
subb
xchg
inc
add
push
bound
call
xchg
mov
fidivl
lcall
cmp
cmp
movsl
add
int3
lock
loope
cmp
mov
push
dec
popa
add
outsl
ds
inc
push
mov
sbbl
insl
or
hlt
out
inc
adc
dec
ficompl
sti
xchg
dec
aaa
push
adc
ffree
rcr
adc
add
jecxz
mov
mov
sahf
fcmovb
add
push
lods
ret
xchg
imul
dec
lea
push
cmc
xchg
dec
call
mov
std
push
pusha
stos
fisubrs
sbb
dec
jne
push
mov
lcall
xlat
jnp
repnz
inc
jge
xchg
xchg
mov
push
push
stos
incb
and
test
into
pop
popf
addl
pop
pusha
bound
add
xor
lock
int3
test
mov
fldenv
cmpsb
push
mov
test
mov
js
out
addb
mov
jp
sbb
cld
dec
add
repz
iret
sti
js
ja
pop
mov
lret
inc
and
xor
adc
insb
orb
jb
into
jg
or
popl
xor
ror
call
popa
flds
jbe
scas
rolb
pop
jl
and
daa
cmp
add
into
mov
scas
and
push
push
imul
pusha
popf
dec
adc
cltd
mov
push
pop
xchg
in
inc
lahf
lret
popa
xor
jbe
jns
fisubrs
repz
int3
xchg
clc
sub
clc
fld
add
push
mov
adc
repz
fidivs
jb
xor
leave
mov
mov
stos
jno
scas
pop
cld
imul
aad
xchg
aaa
test
ljmp
mov
mov
mov
xchg
xchg
mov
hlt
mov
and
xchg
aas
and
aas
xchg
mov
in
sarb
int
push
roll
sbb
fildll
aam
rclb
sbb
or
adc
lods
shll
out
scas
mov
subb
cld
roll
movsb
mov
mov
adc
mov
jno
popa
dec
dec
jns
addl
lods
fwait
and
add
sub
and
inc
mov
hlt
dec
inc
out
pop
mov
cmp
dec
add
popf
rcr
inc
stos
clc
mov
cs
mov
xor
or
les
pop
popa
sbb
cs
sbb
lahf
jle
insl
jp
pop
and
push
push
add
jp
loop
insl
and
jns
push
shrl
add
mov
test
jle
mov
fldcw
dec
mov
jge
adc
xor
adc
rorl
xor
shr
adc
in
shll
fists
jecxz
aas
push
inc
icebp
cld
push
inc
mov
arpl
pop
push
pop
fsubrs
out
adc
jp
shrb
pop
sub
outsb
in
mov
aam
add
daa
std
inc
dec
xor
adc
orb
int
rcrb
cmpsb
stc
and
ret
jb
push
sbb
fisttpll
cmp
repz
stos
pushf
nop
std
sti
jno
inc
pushf
in
cmp
enter
ftst
adc
mov
lcall
add
mov
cmpsb
repz
cmpsb
push
xor
sub
mov
mov
inc
cs
cmp
lahf
push
jecxz
xlat
xchg
popf
pop
pusha
mov
xchg
stos
arpl
int3
mov
xor
add
mov
aam
push
test
out
mov
clc
xlat
xchg
push
xor
pop
imul
jne
dec
in
inc
inc
mov
push
insl
sbb
inc
sub
xchg
imul
xor
gs
or
scas
sub
mov
cmp
jecxz
je
and
hlt
or
jmp
cmp
cmp
inc
or
mov
cwtl
ja
das
aam
or
xor
pushl
xchg
popa
sbb
lahf
xchg
xor
cmc
pop
imul
xchg
ret
into
cmp
sub
je
xchg
dec
cmp
jle
inc
push
shll
addr16
arpl
push
loopne
cmc
mov
jecxz
add
movsl
xor
push
add
pop
xchg
pop
mov
jo
xchg
pop
sub
mov
lcall
cmp
std
fstpl
push
xor
ret
xor
or
sti
push
mov
xor
xor
and
repnz
mov
xlat
call
pop
fucomi
sub
jb
push
sbb
inc
or
mov
ret
dec
push
mov
cmp
outsl
adc
aas
pop
fbstp
leave
in
rorl
fnstcw
es
add
das
decl
sbb
outsb
xor
shl
xlat
out
out
mov
lcall
mov
or
or
ret
xlat
jo
sbb
push
inc
fwait
pop
fidivrs
xchg
cs
xor
in
repnz
dec
and
jo
data16
pop
movsb
loopne
mov
sbb
daa
dec
sbb
push
pop
or
jmp
pop
push
mov
out
jb
into
sub
sbb
inc
aaa
mov
push
mov
test
outsb
outsb
xchg
mov
push
lds
pop
fcmove
fildll
shll
dec
pop
jnp
sbb
adc
jle
mov
dec
dec
aad
roll
fnstenv
xchg
popf
jo
loop
imull
ret
jae
rorl
mov
int3
or
popa
je
jg
cmp
std
pop
dec
in
iret
mov
fyl2x
mov
sbb
push
repnz
bound
push
lock
fs
nop
dec
inc
mov
ret
xorb
rcrl
jecxz
pop
repz
adc
mov
mov
ja
imul
testb
sub
adc
dec
cmpl
dec
or
jp
add
dec
imul
mov
inc
dec
mov
sub
shlb
mov
push
lods
add
bound
mov
pop
push
into
subl
jne
insl
dec
test
mov
cltd
cli
add
int
or
andb
dec
popa
repnz
je
xor
xlat
mov
sub
xchg
mov
xchg
and
je
bnd
cmp
mov
adc
pop
call
out
cmpsl
insl
cmc
xchg
dec
cltd
jp
dec
out
dec
mov
lret
adc
push
mov
ja
imull
clc
sub
cmp
lcall
dec
xchg
jae
push
sub
pushf
dec
stos
dec
rorb
aas
lds
pop
pop
jg
adc
mov
nop
lods
dec
adc
jnp
cmp
and
outsl
adc
mov
sahf
sahf
push
lock
imul
loop
jns
or
xlat
mov
and
orb
sti
inc
add
cmpsb
int
pop
mov
push
enter
hlt
aad
cmpsb
ror
dec
cltd
stos
add
and
fs
testb
cmp
shll
int3
dec
shrb
mov
pop
cmp
mov
ficomps
sub
xor
pusha
ja
mov
dec
inc
or
inc
int3
sub
addr16
xor
daa
ret
inc
cmc
cwtl
or
lods
xor
mov
stos
jae
test
stc
inc
aaa
pushw
push
leave
test
stos
lea
leave
jecxz
call
dec
ss
jae
ja
ficomps
popf
insl
inc
xor
sub
pop
mov
jmp
sbb
push
xor
pop
imul
insb
xchg
jne
sahf
xor
gs
lds
loop
push
jmp
shl
call
push
lret
dec
pop
xor
adc
loop
fcomps
push
xor
cld
mov
push
adc
jmp
adc
inc
push
lret
add
cwtl
mov
test
xor
xlat
push
popa
imul
jnp
jl
sbbb
es
ljmp
negl
xor
sub
stc
sahf
ret
sbb
outsl
inc
cli
loope
dec
dec
pop
pop
imul
jo
loopne
test
mov
mov
fs
adc
popf
mov
xlat
jns
xchg
xor
mov
gs
or
xchg
incl
inc
divb
fsubl
outsb
cmp
lods
jg
jle
notb
stc
cmp
pop
add
mov
ss
jb
sbb
pop
fldcw
mov
dec
test
ja
fstl
pop
jle,pn
push
or
mov
loope
ret
orb
test
js
push
stc
out
add
cld
mov
adc
enter
fwait
add
dec
pop
aad
adc
and
shl
outsb
mov
pop
lods
and
cltd
fnstcw
xchg
testb
xchg
push
xchg
ret
mov
mov
dec
adc
inc
xchg
push
inc
dec
jmp
stos
fmuls
sub
dec
and
xlat
push
and
mov
stc
ss
lret
xchg
mov
xchg
arpl
clc
test
out
das
popf
add
in
lcall
test
sbb
or
xor
outsb
insb
icebp
ret
push
outsb
sahf
iret
nop
cmp
sbb
repz
push
mov
pusha
mulb
push
lcall
or
adc
mov
xchg
imul
lods
into
inc
or
out
insb
or
loopne
js
adc
stos
sub
sub
dec
or
xchg
mov
pop
mov
rcrl
mov
inc
cli
push
lods
and
push
clc
push
jecxz
and
dec
xor
fildll
and
cmp
test
and
dec
fistl
cmp
pop
pminub
jne
push
inc
xchg
mov
in
out
jb
ja
xor
ds
lea
jl
add
sti
and
clc
and
sbb
mulb
mulb
mov
shll
mov
adc
dec
clc
in
mov
test
scas
movsb
das
aam
stc
insl
inc
gs
dec
pop
push
or
xor
filds
idiv
movsb
cmp
test
out
in
mov
mov
aas
cmc
mov
scas
pop
or
je
es
outsb
in
popa
push
rorl
orb
mov
movsb
rcrb
nop
fldl2e
int
into
sub
sbb
mov
mov
xorb
mov
jns
sbb
pusha
nop
negl
mov
js
dec
lods
xor
push
hlt
mov
and
dec
repnz
popa
jno
mov
push
mov
int3
scas
sub
sbb
fldt
test
push
clc
lahf
pop
lea
xchg
cmp
sbb
rsm
add
stos
push
jne
push
pop
fidivrl
pop
dec
shl
sub
and
xor
jne
jmp
xorl
xchg
dec
jbe
gs
push
sbb
std
add
lret
inc
repz
push
stos
lods
imul
xchg
xchg
arpl
cmp
in
adc
gs
pop
popf
lahf
stc
add
jnp
and
lods
xchg
out
sub
xor
stos
inc
les
aam
clc
out
shl
xchg
cmp
dec
jecxz
dec
in
stc
adc
jecxz
fisubrl
mov
fbstp
hlt
xor
daa
addl
pop
cmc
pop
adc
orl
enter
dec
in
pop
aaa
sti
sub
push
pop
fwait
movsb
cld
pop
fnstsw
lahf
out
test
xchg
push
pop
push
inc
pop
shll
adc
loopne
out
test
popa
sbb
inc
jl
sbb
mov
lock
decb
add
pop
add
nop
and
and
push
outsl
mov
test
test
and
xor
fxch
inc
test
fsub
mov
pusha
psubusb
sub
shl
imul
mov
cs
out
sar
aas
andl
lock
dec
pushf
pop
add
push
xorb
rorb
or
testb
lret
int
xlat
lods
insl
in
mov
outsb
or
mov
lret
mov
push
mov
pop
jg
out
cmp
imul
cmp
mov
cld
int3
sbbb
out
xchg
push
mov
int3
iret
test
cld
sti
stos
or
test
push
lods
ljmp
push
dec
adc
lahf
aaa
clc
leave
ss
jmp
push
cmp
out
or
aam
fidivl
inc
lods
xorb
mov
add
mov
insl
loope
push
icebp
lea
daa
clc
cli
and
sub
imul
fwait
lea
push
or
in
and
jnp
mov
push
out
adc
sbb
pop
orl
inc
pop
jno
xchg
inc
shr
outsb
dec
shrl
adc
mov
std
sarb
lock
andb
sub
sbb
fcomps
inc
in
fisubl
gs
xchg
insb
hlt
addr16
into
stos
dec
mov
jno
inc
imul
scas
sbb
mov
ficompl
and
in
clc
test
fsubrl
lds
jg
jl
mov
cwtl
jnp
sub
subl
push
lret
cld
or
nop
pusha
lret
dec
test
pop
mov
and
daa
sbb
pop
inc
xor
add
int3
sbb
fildll
xchg
mov
les
fsubrl
adc
cld
xchg
xor
cltd
popa
cmp
and
stc
or
js
clc
xchg
inc
add
xlat
enter
jo
jle
dec
and
cmp
lcall
js
pop
stos
cmc
icebp
lret
fsubp
enter
xor
dec
scas
rclb
in
cmp
addb
jae
movsl
sub
inc
adc
out
shrb
push
and
movsl
js
mov
mov
xchg
add
mov
pop
xor
mov
lock
mov
and
daa
dec
in
pop
sahf
adc
movsl
push
mov
adc
and
mov
sub
add
inc
inc
int
or
jecxz
or
and
pusha
cmp
push
cmp
ret
mov
gs
and
cwtl
push
popf
add
and
ret
and
xchg
inc
jmp
iret
test
out
pop
rolb
and
pop
fucomp
ja
and
aaa
cmp
sahf
or
enter
cs
shlb
xchg
add
roll
dec
cwtl
int
inc
add
push
jb
dec
fsubs
cmp
bound
mov
cli
sbb
int3
xor
xchg
sti
mov
sbb
mov
movsb
jno
scas
ret
es
mov
lock
mov
push
cltd
jae
pop
mov
mov
cmpsl
push
pop
mov
mov
outsl
xchg
mov
pop
add
dec
pop
popf
repnz
jo
mov
fnsave
mov
imul
out
iret
push
test
adc
stc
and
mov
int
add
mov
int3
enter
test
or
sub
or
inc
fildl
push
out
lods
xorl
jle
data16
and
xor
mov
les
mov
dec
repz
nop
jb
xor
lds
mov
jne,pn
fs
pusha
inc
lods
mov
sti
xchg
addb
pusha
mov
jp
dec
mov
sub
cltd
push
icebp
mov
or
es
mov
adc
cmp
jp
cmp
divb
insl
imul
addb
jae
popa
test
orb
dec
xchg
jbe
in
mov
pop
cmp
in
add
push
pop
push
or
das
das
mov
pushf
lock
lret
popf
sar
lret
addr16
add
stos
pop
xchg
dec
call
jg
iret
pop
popa
or
and
inc
rcrb
test
push
and
stos
out
pop
fcomip
leave
test
and
add
sarb
das
mov
pusha
xor
outsl
flds
xchg
jae
push
loop
mov
stc
insb
lock
xchg
int
js
lea
imul
fdivrl
cmpsb
mov
loope
loop
and
arpl
outsl
xor
fcoms
jge
push
aaa
or
insb
jne
ficompl
lods
push
pushf
mov
aam
mov
mov
dec
shl
scas
inc
push
ds
int3
mov
jnp
and
add
fistl
add
and
in
adc
pop
in
or
lock
cmp
sub
push
and
std
cmpl
fstl
cmp
or
stos
cmp
xor
mov
jbe
mov
arpl
adc
subl
add
mov
jne
mov
xor
orb
ja
lahf
lds
and
rcll
mov
fwait
pop
lods
or
test
out
fildl
movsb
inc
mov
lret
xor
add
lar
and
outsl
rol
mov
pop
js
icebp
inc
pop
divb
mov
gs
mov
insb
mov
outsb
aas
shll
cmp
xchg
mov
adc
les
or
loop
mov
lahf
and
or
add
insl
in
jmp
sbb
push
pop
in
xchg
push
xor
test
mov
aaa
xor
sbb
scas
and
mov
repz
dec
xchg
jmp
lods
popa
pop
mov
dec
daa
sub
xor
enter
mov
dec
add
and
aam
dec
loopne
push
movsl
add
xor
push
pop
test
inc
lods
inc
sub
cwtl
pop
lret
mov
mov
sub
inc
jle
inc
dec
js
int3
mov
dec
aam
jae
cli
cmp
int
pop
mov
test
xor
popa
ja
cld
push
mov
pop
out
mov
mov
mov
push
lret
jnp
dec
push
sub
mov
loope
or
xchg
testl
jne
outsl
cmp
leave
js
inc
mov
xchg
dec
test
arpl
mov
aas
inc
mov
adcl
pop
push
movsb
cmp
xor
sbb
imul
mov
add
or
sub
pop
jnp
dec
leave
sbb
fldt
adc
sbb
ja
inc
in
into
cwtl
gs
fs
aad
mov
push
sbb
mov
sbb
ret
es
jecxz
mov
call
fmul
xchg
lods
pop
enter
or
stc
mov
dec
test
xchg
addps
sbb
push
mov
or
cmp
jbe
mov
jg
outsb
cmp
roll
out
into
in
std
add
notb
xor
sub
jecxz
mov
pop
lret
sbb
and
mov
out
mov
leave
lods
pop
out
mov
call
mov
jecxz
jge
lret
cltd
pop
mov
adc
or
out
in
mov
and
xchg
or
push
fbld
ds
int
inc
push
pop
mov
or
testl
cld
jecxz
lock
jge
repz
adc
pop
gs
mov
fisubrs
mov
mov
stc
insl
pop
inc
mov
mov
stos
sub
inc
or
dec
sub
ficoml
ret
lcall
test
sti
cmp
aad
mov
outsb
cld
push
ds
cli
mov
roll
enter
and
mov
fwait
sbbl
push
fisubl
or
je
xchg
test
hlt
mov
mov
adc
int
sbb
pop
aas
cmpsb
sbb
pop
shrb
mov
popa
fisubs
pushf
push
jb
or
int
adc
push
sbb
inc
xor
scas
incl
ret
jmp
xchg
shll
pop
pop
or
push
dec
movsb
xor
pop
mov
stos
leave
ja
or
cmp
sti
repnz
leave
insb
mov
dec
mov
mov
inc
pop
mov
add
cltd
fcmovnbe
stc
pop
shrb
hlt
fldl
insl
cli
ret
test
cmpsb
shlb
imul
repnz
adc
sarb
ja
nop
insb
mov
pop
clc
mov
push
dec
imul
pusha
scas
out
mov
outsl
fsubs
rolb
popa
mov
in
cmpsb
scas
xchg
jns
cmp
add
push
pop
mov
dec
sahf
lret
in
jle
mov
push
lret
mov
mov
mov
jge
clc
loopne
xor
xor
lret
xlat
in
add
pop
add
jp
test
scas
mov
or
cltd
push
adc
lcall
pop
ds
fimuls
xchg
mov
into
push
stos
inc
cmp
and
test
pop
xchg
xor
sub
adc
mov
xor
cmp
push
push
pop
mov
cmpsl
jb
and
gs
fisubrl
pop
dec
jl
into
sbb
lret
repnz
sub
xor
mov
outsl
addr16
test
xchg
and
adc
es
pusha
addr16
or
bound
mov
shl
mov
cmpsb
sbb
mov
dec
sub
push
lock
cmp
mov
das
aam
hlt
call
imul
or
mov
cmp
lret
push
xchg
negb
loopne
fisttpll
xlat
push
mov
fmull
dec
mov
xchg
mov
push
sbbl
or
dec
dec
mov
mov
cld
pushf
sti
xor
xchg
sub
or
stos
in
xlat
jae
push
clc
int3
int
pop
mov
inc
fldl
inc
sbb
push
and
pop
imul
dec
adcl
lea
sahf
add
dec
lods
data16
rclb
jo
stc
adc
xlat
call
lcall
mov
xchg
inc
add
jg
jno
mov
dec
or
jmp
incb
xchg
mov
mov
pop
data16
or
jl
loop
lahf
push
push
pop
xchg
dec
dec
inc
push
xchg
push
mov
pop
xchg
xchg
dec
pop
xlat
in
dec
dec
shl
mov
xorl
js
or
inc
xlat
sahf
xlat
outsb
gs
mov
loope
push
out
sub
mov
push
or
addl
add
xchg
cmp
in
cmp
call
rcl
mov
stos
inc
mov
cli
ljmp
cltd
cmc
xor
pop
daa
cltd
fldenv
push
fsubrp
push
aaa
push
xchg
cmp
scas
or
adc
ret
dec
dec
orl
xchg
nop
inc
ret
js
sarb
mov
iret
roll
adc
popa
jo
push
ficoml
pop
mov
xor
enter
adc
ret
xchg
mov
popf
jo
xchg
loope
mov
push
scas
push
dec
jne
negb
enter
jae
outsl
nop
es
sbb
fsubl
xchg
stos
into
loop
pop
out
dec
cwtl
jle
mov
scas
in
dec
or
rorl
mov
arpl
bound
inc
addr16
dec
cmp
cmpsb
or
push
inc
and
fiaddl
mov
push
mov
lahf
loope
jns
fisubrl
dec
pop
push
addl
mov
adc
or
out
outsl
scas
add
shl
rcl
jp
movsl
push
rclb
pushf
movsl
cmpsl
movsl
fidivrs
arpl
or
push
loope
jbe
movl
push
jb
sub
stos
push
addr16
dec
dec
es
mov
out
nop
ds
add
jmp
jo
stos
lods
js
and
add
in
mov
mov
jns
pusha
test
cwtl
mov
adc
shrl
lock
out
ret
add
leave
mov
pop
mov
lods
ja
cmp
lea
sub
cmp
xchg
pop
jge
fwait
imul
xchg
dec
adc
sbb
dec
pop
sahf
dec
sbb
mov
fistps
xchg
add
into
pushf
lcall
repz
sbb
in
pop
fsts
xchg
cmp
or
xor
rclb
push
jmp
jg
xchg
shrb
mov
jg
ror
xchg
imul
adcb
fidivrl
fldenv
xor
pop
adc
mov
push
addl
scas
aam
rclb
stc
lods
xor
xor
mov
scas
ljmp
test
rorb
nop
sti
mov
mov
mov
outsl
into
mov
aas
sar
or
xchg
add
mov
mov
push
es
repz
ja
outsb
push
add
sub
aam
in
out
lods
in
pop
test
stc
ja
sbb
icebp
movsl
jl
ss
cmpsb
daa
and
inc
aas
adc
and
inc
mov
adc
out
jns
pop
ret
lock
inc
mov
xchg
insb
inc
dec
xchg
aaa
shll
cli
lret
test
jle
dec
daa
pop
in
cmp
test
mov
adc
and
int
loop
shl
popa
test
cmp
je
jne
xchg
push
adc
dec
sub
clc
insl
cmp
cmpsl
mov
data16
or
addr16
mov
push
imul
jo
xor
jbe
jl
arpl
leave
ja
nop
and
int
leave
insl
ds
push
fdiv
sub
pop
icebp
and
adc
mov
mov
leave
fsubrl
aaa
ja
out
int
cmpsl
push
mov
sahf
jb
clc
jg
cli
mov
int3
mov
leave
mov
aam
call
mov
jecxz
mov
enter
lods
ret
mov
dec
in
mov
push
in
cld
sbb
dec
inc
shlb
or
ret
bound
and
mov
mov
cmpsl
xchg
jmp
push
loopne
mov
xchg
sbb
rcl
shll
xchg
test
imul
bound
inc
add
and
xor
mov
and
popf
out
inc
pop
outsb
out
xor
lret
leave
repnz
pop
js
or
dec
mov
jo
push
lods
call
daa
mov
cmp
dec
dec
and
aad
cld
xchg
rcr
xchg
aas
push
mov
icebp
cmc
cmp
adc
mov
xchg
and
inc
pop
push
lcall
sbbl
mov
dec
orb
mov
xchg
xchg
rorb
pusha
push
daa
jns
sarl
push
inc
or
xchg
inc
lock
outsb
paddd
adc
gs
xor
xchg
lcallw
pop
dec
mov
xchg
sub
lahf
call
loope
icebp
cmp
fadds
adc
cmp
sbb
pop
ret
pop
imulb
adc
jns
cmp
and
into
xchg
fdivl
imull
sbb
nop
rclb
inc
dec
dec
sub
add
movl
mov
xor
cli
cmp
sbbb
or
clc
in
sub
aas
mov
outsl
scas
cltd
icebp
add
dec
push
adc
das
mov
dec
cmp
xchg
add
add
cmpsb
mov
pop
jne
shrl
dec
add
loop
out
lock
xor
inc
mov
mov
jo
fs
hlt
mov
lret
movsb
stc
and
hlt
iret
lods
movsl
add
rcr
cmp
cmp
jg
sbb
aad
fnstcw
sub
lcall
xor
movsl
inc
lods
mov
xor
mov
pop
cmpsl
sub
dec
or
pop
imul
lock
push
das
pop
sbb
lea
leave
cmpsb
push
cmp
jo
mov
fwait
enter
mov
cmpsb
inc
or
call
mov
sbb
xchg
or
fdivrs
or
pop
jmp
stos
aam
mov
cli
pop
es
and
mov
stos
pop
lea
push
rcl
jp
jns
xor
clc
aad
mov
add
push
jmpw
xor
jns
in
in
pop
loop
cmp
bound
and
sahf
cmp
sub
pusha
dec
sar
sbb
push
xchg
adc
pop
or
mov
xor
sub
push
rorb
fwait
dec
sti
sbb
stc
lds
sarb
sub
addr16
pop
mov
cmp
fcmovnu
imul
aam
pop
adc
das
js
or
in
clc
fld
arpl
jns
inc
push
xchg
mov
stos
psrlw
xor
sub
test
push
lds
and
je
push
sub
iret
lock
int
daa
inc
mov
add
addl
xchg
call
dec
fiaddl
scas
add
jns
movsl
clc
fisttpll
jge
add
sbb
pushf
inc
pop
pop
jmp
ja
ja
jns
jo
hlt
and
imul
in
sahf
loope
sbb
test
cmpsb
imul
clc
ljmp
ljmp
jg
pushf
pop
mov
pop
cld
sub
xchg
iret
cs
and
jae
adc
stos
mov
pop
daa
pop
lahf
ds
xchg
mov
lahf
sbb
xchg
push
pop
fsubl
inc
sbb
movsb
lock
aaa
jae
and
fnstenv
jmp
adc
sub
mov
jae
xchg
out
cmpsl
mov
pop
sub
sbb
jno
xor
loope
xchg
mov
pop
testl
dec
dec
icebp
movsb
add
je
test
mov
xor
into
sti
push
push
xchg
bound
and
fimuls
or
sbb
cli
out
add
mov
ja
sbb
arpl
fwait
leave
ss
and
lods
stc
or
push
xchg
stos
pop
mov
jmp
inc
xor
addr16
cli
sbb
leave
pop
movsl
scas
xchg
inc
fwait
jb
mov
rcl
lcall
shll
sub
loope
je
imul
test
pop
mov
xor
bnd
cvtpi2ps
mov
mov
pop
mov
negl
inc
jl
jnp
sahf
add
jno
loope
jl
pop
sub
stos
jg
xor
sub
jb
js
xchg
out
test
push
std
pop
cmpsb
out
out
xchg
mov
lds
nop
or
aam
pusha
xchg
push
sub
mov
insl
mov
sarb
pop
mov
out
lret
and
out
push
je
push
sbb
mov
add
insw
fistps
xor
mov
xor
mov
dec
mov
cmp
sbb
inc
cmp
ss
jecxz
fldcw
lret
je
adc
packssdw
mov
mov
push
xchg
test
aam
inc
pop
pop
add
int
xchg
repz
sbb
xchg
notl
push
mov
dec
test
push
mov
scas
pusha
lods
inc
test
push
movsl
aas
push
cmovl
or
ss
imul
sub
or
adc
xor
xchg
adc
dec
pop
and
jmp
sub
ljmp
pop
jl
test
sbb
mov
adc
int3
mov
or
xchg
lahf
add
cmpsb
call
fbstp
icebp
lea
jmp
xor
fsub
mov
in
sub
sarb
pushf
xor
outsl
mov
add
jbe
mov
pop
pop
pop
mov
movsl
cmpsb
pop
xchg
fdivl
lods
dec
les
ret
pusha
imulb
divb
test
orl
add
std
fldenv
es
gs
add
adc
jmp
arpl
das
cmp
pop
int3
pop
in
fstl
sub
adc
cs
xor
pop
pop
rorb
xchg
push
test
addr16
outsb
xor
test
pop
leave
ljmp
into
das
arpl
sub
stos
jmp
add
mov
je
negb
leave
mov
sti
daa
jge
xchg
outsl
in
sub
dec
cltd
sub
mov
gs
push
ret
pop
andb
cmp
mov
loop
or
jne
inc
insl
push
push
addr16
repz
loopne
mov
mov
mov
aad
mov
cmp
std
push
xchg
xor
scas
jae
js
push
mov
pop
jno
push
jle
cmp
dec
out
ds
xchg
sti
cmpsl
pop
xchg
test
pushf
mov
sbb
pop
fnstenv
lret
test
inc
out
mov
fwait
xor
movsb
xchg
or
jmp
mov
aad
scas
pop
ja
lods
int3
sbb
dec
mov
imul
arpl
mov
les
mov
fcomip
out
lea
mov
add
inc
adc
push
xor
dec
daa
pop
hlt
mov
and
insb
adc
mov
mov
scas
jge
scas
jbe
nop
cmp
daa
lods
inc
mov
sti
lea
or
loope
add
into
gs
inc
xchg
cmp
mov
test
add
imul
or
jg
sarl
mov
add
mull
and
xlat
sbb
sbb
ljmp
bound
shrl
xchg
loope,pt
cmpsb
decl
shlb
test
cmc
ret
dec
shl
pushf
cwtl
lea
fldl
scas
cli
div
pop
jmp
idivb
dec
cwtl
inc
jmp
lods
push
test
pushf
cmpsl
shll
imul
mov
hlt
divb
dec
push
mov
jo
lret
jnp
mov
mov
dec
and
test
arpl
mov
xchg
lret
and
shr
inc
fsubrl
mov
pushl
jecxz
pop
out
iret
mov
outsb
call
lahf
mov
or
cmpsb
xchg
popf
repnz
fcmove
mov
aaa
xchg
inc
call
movsb
push
xor
insb
loopne
adc
dec
scas
icebp
es
in
fs
mov
hlt
push
xchg
sbb
std
pop
jmp
dec
sbb
mov
jno
inc
insl
sub
mov
outsl
mov
rolb
lods
xchg
rclb
push
outsl
cmp
and
fucomi
sub
sbb
mov
jl
cmc
jo
or
call
lcall
pop
xchg
inc
mov
cmp
pop
dec
enter
roll
cmp
nop
push
push
sub
ss
push
inc
mov
dec
ret
adc
pop
push
push
adc
fidivrs
dec
and
adc
pop
push
mov
push
xor
cmc
push
cltd
jecxz
pop
iret
jnp
inc
aam
iret
dec
xchg
push
add
inc
ret
imul
pop
fisubrs
xlat
fcmovnb
enter
mov
xor
mov
int
pop
add
in
xor
shr
dec
mov
in
fmull
cmp
or
push
repnz
jns
fs
sub
jne
in
push
mov
loope
ret
jge
rcr
jle
pop
xchg
jecxz
lds
in
mov
lds
sti
imul
adc
lods
jle
jle
movl
arpl
pop
mov
mov
mov
in
enter
imul
cld
xorl
sbb
scas
insb
push
jnp
pslld
or
add
xchg
mov
cmc
push
push
jge
les
in
call
mov
sub
mov
mov
rorb
repnz
dec
addl
out
pop
test
mov
jmp
and
and
sbb
pop
cmp
push
pop
nopl
jnp
add
cltd
adc
enter
test
pop
lods
je
xor
repnz
enter
pop
lds
cli
fidivl
js
xchg
sar
xchg
lods
popf
stos
insb
shll
inc
mov
es
push
sahf
sbb
lret
int3
fidivs
lock
cmp
test
test
mov
orl
ljmp
inc
mov
jecxz
adc
imul
dec
orb
push
xchg
xchg
jle
jno
nopl
stos
sbbl
mov
dec
rorl
mov
mov
outsl
fcmovbe
fcompl
add
stos
dec
sub
pop
pop
mov
adc
sbbl
xchg
mov
js
dec
inc
or
mov
inc
push
xchg
or
dec
push
and
and
xchg
and
pop
mov
bound
mov
scas
pop
and
mov
push
hlt
enter
dec
sti
adc
stos
rcr
cs
insl
mov
inc
lods
dec
and
pop
adc
sti
insl
movsl
sti
mov
push
popa
aad
and
dec
sub
mov
mov
pushf
mov
xor
pop
lds
sub
xchg
out
jp
adc
and
mov
popf
negl
popa
push
xorb
cmpsb
lea
icebp
mulb
movsb
aad
aad
rolb
mov
test
push
dec
clc
lods
sub
stc
and
mov
addl
jp
dec
fists
cmp
mov
mov
out
xor
push
pop
jp
test
out
mov
xor
and
gs
shrl
inc
cmpsb
xor
xor
insl
xor
or
xor
push
xor
xchg
sbbb
xchg
es
xor
push
scas
sahf
or
jnp
std
lock
and
subl
or
mov
shll
push
bound
cmp
push
inc
and
add
imul
mov
pusha
pop
push
call
dec
les
push
insl
fisubs
xor
leave
sub
ds
jle
adc
adc
xor
pop
cwtl
mov
mov
rcrl
sbb
das
xlat
mov
mov
ficompl
jne
cld
jae
push
xchg
pop
cmpsb
test
push
add
xor
pusha
shlb
bound
in
mov
sub
adcb
loopne
addb
mov
jbe
jbe
or
cmc
sbb
dec
mov
lret
repz
mov
ficoml
insb
jg
lcall
imul
pop
and
out
popl
nop
lcall
jnp
inc
mov
cs
adc
cs
das
push
lahf
and
insb
dec
aad
adc
cmp
fisubl
mov
cmp
ret
test
insl
js
sub
popf
pop
pop
fstpl
test
push
sbb
mov
js
iret
sub
adc
xor
fwait
int3
cmpl
xchg
outsl
push
xchg
rclb
xchg
lret
mov
mov
push
push
dec
fs
les
or
gs
mov
rcl
lea
outsb
jp
mul
and
cmpsb
mov
or
cltd
xor
push
stos
test
xchg
mov
aam
sub
aam
test
cwtl
rcr
mov
fcmovnb
jecxz
fistps
mov
out
fwait
aad
popf
imul
pushf
mov
adc
js
push
pushf
pop
test
push
repz
or
sbb
mov
loop
jbe
popf
or
imul
shrl
dec
mov
mov
cmc
stos
xchg
push
adc
shrl
outsl
incl
adc
repnz
lahf
mov
cmpsb
jae
inc
jecxz
xor
push
fnstsw
dec
pop
jp
rclb
dec
daa
or
pop
jl
mov
adc
push
movsl
cmp
xchg
pop
in
imul
jno
lcall
adc
loop
xchg
subb
sbb
mov
fsubrl
cmp
push
push
xchg
mov
push
mov
out
mov
loopne
sub
sub
dec
and
pusha
fidivrl
adc
push
adc
ja
mov
lahf
ficoms
adc
pop
cmpsl
mov
orl
or
in
mov
rorl
cli
in
lcall
scas
push
or
enter
popf
mov
and
inc
xchg
sahf
or
es
cmpsl
imul
call
dec
ret
xchg
inc
push
inc
faddl
add
pop
enter
and
daa
and
fdivs
fmulp
into
jmp
xchg
jns
clc
mov
popa
mov
enter
inc
arpl
push
or
icebp
sbbl
jne
sub
mov
mov
pop
cmp
mov
mov
iret
pop
fdivp
xchg
orb
dec
sub
pop
icebp
shl
inc
popf
jo
icebp
adc
out
lahf
lret
adc
and
cmp
shlb
fsubl
add
test
sbbl
sbb
sbb
nop
push
sub
xor
jae
dec
test
inc
add
test
lea
add
xchg
pop
sbb
sahf
leave
aad
push
sub
jo
jp
sub
aas
fcompl
pop
sti
xor
std
gs
dec
icebp
push
fs
jmp
mov
xchg
out
call
inc
subl
loope
or
bswap
xchg
loope
rorb
mov
insb
mov
xchg
sbb
test
adc
imul
push
ret
out
les
cmpsl
mov
sbb
icebp
adc
lea
sub
insb
hlt
lea
xor
fcomip
push
ja
adc
inc
lahf
cmp
dec
fdivl
jl
push
adc
cld
repz
push
shlb
bound
push
ss
hlt
sarl
sub
mov
addr16
push
and
cli
push
es
and
jns
dec
jecxz
xchg
xor
ljmp
clts
inc
xchg
push
or
sub
cmp
les
xlat
jo
sub
jg
pop
testl
aam
or
aam
mov
mov
or
notl
mov
dec
mov
pop
xchg
lret
jnp
push
mov
xchg
adc
in
ljmp
xchg
inc
dec
or
pop
xor
inc
inc
pop
aas
adc
in
mov
dec
push
mov
lahf
cmp
iret
jbe
sahf
pop
test
movsb
fwait
pop
push
pop
into
mov
pop
xadd
mov
rep
adc
sti
mov
sbbl
xchg
fildl
fisttps
aam
bound
lock
mov
outsb
xchg
mov
bound
inc
fisubrl
daa
mov
leave
int3
push
mov
orb
xor
ja
push
sbb
mov
pop
sbb
dec
std
icebp
sub
cmp
loop
lcall
stc
mov
push
popf
inc
mov
jns
mov
or
xor
cmp
mov
loop
jge
test
mov
cmc
int3
ret
inc
push
xchg
cmc
repz
jns
sbbb
lret
xchg
insl
in
cld
jo
adc
sub
jbe
xlat
mov
xlat
xor
fisttpl
out
sub
add
push
scas
fwait
or
insl
inc
add
xchg
and
jns
pushl
jne
mov
or
iret
mov
rcrl
push
movsl
call
push
in
fsubrs
lods
pop
xchg
ljmp
rolb
mov
imul
ja
push
insb
repz
dec
and
stos
test
clc
xchg
cmp
imul
xchg
sarb
and
inc
mov
sub
add
inc
inc
pop
je
arpl
int
mov
mov
data16
jns
cmp
ficoms
aad
sarl
pop
adc
fnsave
xchg
add
lods
sbbb
stos
inc
stc
sbb
cli
mov
scas
out
cmp
sub
jmp
inc
sub
jnp
mov
sub
jne
mov
pop
mov
adc
jo
pop
pop
push
add
dec
sbb
sbb
mov
jbe
lahf
ja
xchg
adc
scas
cmpsl
iret
sbbb
movsl
daa
xor
lods
mov
lods
mov
sub
pop
daa
imul
adc
clc
add
sbb
pop
inc
push
or
movsb
xchg
or
dec
mov
jns
shll
adcb
dec
js
and
inc
add
lcall
cli
lock
xchg
out
aas
add
jb
rep
cmpsb
add
jl
lcall
mov
popf
push
add
lds
mov
movsb
jl
mov
cmp
roll
rorb
cmpsl
dec
dec
jb
fwait
xor
and
jae
adc
mov
xor
adc
into
outsb
pop
cs
push
xor
inc
orl
mov
cmp
add
sub
pop
in
lahf
or
xor
pop
and
adc
inc
adc
outsb
and
or
or
enter
das
lahf
dec
mov
jae
mov
adc
xlat
mov
push
rcl
test
push
shrl
xchg
mov
dec
mov
jns
sbb
pop
inc
daa
cli
jae
outsb
sbb
testl
add
push
add
pop
test
jle
jle
pop
cld
call
or
repnz
test
or
insb
jecxz
mov
push
loopne
sub
pusha
push
int
dec
sahf
iret
mov
ficompl
xor
pusha
xchg
aad
pop
dec
push
push
or
cmp
jne
aas
stos
mov
sub
addr16
and
pop
int3
mov
cmp
fcmovb
fcmovb
jg
out
sub
lock
sti
mov
aad
out
iret
inc
pop
adc
jbe
push
lcall
jb
out
fidivl
lea
std
fnstenv
mov
clc
mov
sub
vmwrite
std
mov
imul
daa
adc
ret
insl
jp
or
cmp
rcl
sbb
jo
push
cmp
call
pop
xor
pop
sub
pop
nop
adc
cmpsl
xor
in
fwait
test
push
int
xchg
pushf
bound
les
sbb
dec
cs
movsb
imul
ficoms
and
cmp
mov
shlb
add
movsb
cmp
pop
inc
in
mov
mov
mov
fiadds
mov
mov
pop
jnp
fistpll
cmpsb
cwtl
and
jmp
dec
or
ljmp
inc
and
stos
dec
lcall
mov
push
loop
jp
xchg
ret
in
int3
dec
xchg
imul
cmc
mov
jecxz
popw
xchg
out
lods
rcll
hlt
mov
out
sbb
sub
cld
xchg
cmpsb
mov
pop
push
movsb
push
mov
pop
and
dec
js,pn
cmc
out
addr16
pop
mov
add
out
inc
lcall
push
pop
push
imul
mov
xchg
cmp
insb
ljmp
faddl
sbb
pop
mov
mov
insl
aaa
push
dec
lahf
xchg
inc
sar
stos
adc
insb
scas
sub
ret
mul
jns
mov
test
xlat
dec
mov
pop
push
movsb
inc
es
jno
ret
jge
test
sub
mulb
movsl
lds
in
fwait
jge
mov
jmp
push
mov
ret
mov
sub
mov
mov
add
add
jbe
mov
inc
insl
cmp
push
lret
add
loopne
flds
xchg
mov
adc
push
jmp
and
lods
lock
pop
sub
xchg
dec
push
outsl
and
int
cmpl
shll
aaa
imul
sbbl
addb
pop
and
pushf
lcall
jmp
push
out
mov
sub
sbb
loope
test
ret
mov
out
rep
sbb
inc
fimuls
inc
hlt
fildll
jo
movsb
outsl
outsl
ret
daa
mov
inc
inc
sbb
and
je
imul
mov
lcall
das
lret
mov
lahf
out
and
sahf
add
adcl
imul
sub
mov
jge
sbb
inc
xor
jmp
cmpsl
xchg
iret
mov
and
pop
inc
out
push
dec
cmp
cmc
pop
popf
and
xchg
fisttpll
pop
jp
jbe
rorb
xchg
mov
mov
pop
jo
mov
xor
fldt
dec
and
jp
pop
mov
lret
mov
push
loope
mov
fadd
test
bound
incl
call
mov
pop
ja
lods
fwait
mov
into
fdivrp
ljmp
cwtl
and
cmc
ja
cld
pop
cmc
ret
icebp
es
stos
ljmp
xor
mul
sub
cli
push
clc
cmc
lock
adc
sti
mov
push
outsl
or
div
std
and
ljmp
jb
loopne
fnsave
xchg
rcrl
mov
and
into
cs
adc
mov
stos
dec
xor
cmp
dec
dec
or
nop
dec
xchg
es
dec
dec
in
sbb
popa
les
jns
dec
lds
loopne
aaa
mov
sub
jno
pop
xchg
lods
iret
mov
rcl
out
dec
mov
push
jns
loop
xchg
xchg
add
pushl
jle
mov
xor
fwait
ljmp
jns
mov
fwait
lods
mov
insb
testb
and
or
dec
xor
adc
hlt
mov
repnz
inc
test
push
aaa
or
ds
aad
adc
and
sti
and
in
cmp
inc
in
ja
xchg
adc
outsl
aam
inc
pop
ds
xchg
movsb
dec
mov
fldl
mov
mov
shll
mov
mov
sbb
aad
mov
insl
push
xor
test
ja
fsubs
dec
inc
push
push
pop
add
repnz
pop
mov
sub
cltd
rcr
push
and
xchg
std
sub
mov
fwait
lea
dec
cwtl
sbb
sahf
push
iret
push
mov
ljmp
ljmp
push
pop
pop
sbb
stos
pop
mov
ret
stos
adc
lahf
push
xor
add
daa
add
and
cs
lret
inc
mov
adc
cmpsl
xlat
mov
icebp
dec
push
cmp
cmp
mov
inc
mov
jp
sub
jp
push
sbb
fwait
jmp
rclb
fistps
cs
sbb
cmp
sub
mov
cmp
shlb
dec
mov
adc
xor
popw
and
pcmpgtd
lcall
sbb
outsb
stos
or
xchg
xor
add
jae
pop
sti
xchg
imul
call
or
ss
test
test
and
inc
int3
xor
incb
cwtl
push
in
jmp
mov
mov
pop
or
push
cmp
and
push
lahf
mov
dec
test
pop
enter
lea
xor
jo
movd
gs
pop
push
ret
push
xor
ja
mov
jae
sti
outsb
dec
shrb
push
and
sub
loop
pusha
or
out
jne
aad
mov
cltd
push
jge
mov
dec
fadds
sub
fwait
lock
mov
pop
cld
les
mov
arpl
arpl
in
push
pop
pop
jmp
or
push
and
repz
lcall
inc
and
xchg
or
stos
sbb
pop
and
pop
jge
iret
lcall
pop
fcmove
jb
and
outsl
inc
aam
pusha
jae
or
mov
jne
push
jo
fmul
jo
inc
ljmp
jnp
sub
sarb
scas
push
mov
dec
jle
push
ljmp
call
dec
and
pop
loopne
sbb
adc
out
enter
out
es
pop
mov
mov
xchg
pop
leave
inc
mov
and
out
iret
jl
mov
mov
adc
fistps
sub
mov
cmp
test
inc
add
dec
cmp
or
pop
movsl
ss
filds
dec
dec
jg
outsl
dec
pop
push
add
pop
add
add
inc
mov
pop
stos
sub
cmp
pushf
cmp
enter
xorb
mov
jnp
scas
fldt
lcall
inc
cmp
sbb
fldt
shll
mov
and
pop
mov
push
and
push
and
lock
xor
cmc
mov
adc
lods
sti
neg
xor
fisttps
mov
cmp
mov
mov
int3
insl
clc
sbb
es
fmull
faddp
pop
and
cmpsb
pop
lds
test
xor
jge
fistps
sub
fdivs
pushf
loopne
or
frstor
dec
popa
lods
inc
xor
mov
ret
inc
divl
sub
loop
dec
pop
cmpsb
xor
ljmp
or
test
icebp
dec
push
jp
adc
icebp
sbb
mov
in
sbb
shrl
loopne
repnz
mov
les
xchg
mov
pop
stos
mov
dec
mov
jecxz
popa
sbb
outsb
je
aas
stc
pop
clc
jmp
int3
xor
les
std
dec
cld
ljmp
dec
jp
mov
cwtl
test
mov
fidivl
inc
xchg
dec
dec
dec
sbb
mov
push
pop
ljmp
cmp
and
dec
adc
push
push
cli
cmpsl
popa
stc
jno
pusha
push
mov
adc
lds
xor
cld
fucomi
mov
scas
enter
push
adc
imul
mov
or
add
sub
xchg
test
or
test
push
jno
imul
xchg
add
jmp
loopne
inc
fs
enter
push
leave
mov
pop
cli
hlt
adc
mov
adc
std
adc
loopne
pop
cld
in
inc
fcoms
sar
fmull
pushf
sub
mov
enter
cmp
sbb
ret
sbb
clc
int3
pop
mov
mov
frstor
jb
mov
inc
sub
es
jl
jb
call
jb
mov
xchg
ret
jnp
inc
push
push
push
mov
pop
std
pusha
sbb
jmp
test
into
xchg
dec
pop
jbe
es
push
fsubrs
gs
mov
jns
lea
xchg
stos
or
xchg
cwtl
stc
sbb
push
dec
mov
mov
xchg
xchg
out
xor
mov
rclb
mov
movsb
jp
xlat
xchg
jmp
inc
dec
add
fisttps
pop
out
add
dec
inc
mov
out
sub
sbb
test
outsb
mov
or
add
sbb
leave
sti
push
movsl
stos
jg
mov
lea
insb
inc
cmp
loopne
jl
mov
dec
xlat
push
in
mov
jno
pop
mov
adc
imul
add
jecxz
idivb
jno
push
cwtl
pop
and
mov
pushf
dec
jle
scas
pop
ret
xchg
pop
inc
shll
mov
cmp
cmp
dec
loopnew
fs
xchg
outsb
mov
cltd
lret
inc
ss
adc
das
inc
xchg
xchg
pop
cmc
and
fcoml
lret
mov
in
mov
jmp
pop
mov
loope
add
mov
or
int3
inc
xchg
stc
lods
xchg
cli
bound
cmp
cmpsb
xchg
fisttpll
aam
ss
xchg
insl
inc
push
mov
mov
dec
add
jbe
sbb
adcl
dec
fnstsw
iret
mov
icebp
dec
jmp
inc
mov
mov
lea
add
push
mov
in
mov
movsb
imul
rorl
loopne
out
jge
xor
mov
and
fadds
test
mov
inc
ds
pop
clc
mov
out
push
sbb
xchg
ret
push
dec
cmp
mov
xchg
int
sbb
mov
into
ja
pop
inc
out
inc
pop
scas
inc
loope
xor
in
jb
dec
push
jbe
add
or
pop
jmp
movsl
add
mov
sbb
aam
lahf
lods
xchg
pop
inc
mov
xchg
and
pop
jns
rorb
subl
aam
dec
aad
xlat
lods
out
int
call
sub
jno
xor
into
adcl
xorl
jmp
out
popf
arpl
cli
das
xor
xchg
outsl
test
aas
imul
or
aam
cmpsl
stos
fs
imul
pmaxub
sub
clc
sbb
repz
imul
xlat
stc
add
lds
mov
les
mov
mov
xchg
loope
dec
movsb
outsl
sub
shrl
and
out
cld
nop
inc
dec
or
lock
fs
add
inc
rcr
fwait
jo
mov
arpl
sbb
aad
jl
fnstenv
scas
scas
outsb
sub
jne
adc
hlt
and
mov
out
cltd
lahf
in
pop
int
mov
test
and
push
jns
xor
and
add
dec
insb
and
sbb
jbe
shll
into
leave
stos
mov
mov
cltd
cmc
cli
sbb
cmpsb
or
es
rorb
lahf
mov
add
scas
xor
mov
or
xchg
in
pop
push
xor
mov
jp
inc
scas
jmp
out
arpl
shlb
or
std
nop
je
lret
dec
ret
mov
adc
xor
jge
inc
fwait
lret
or
aaa
adc
adc
insb
push
clc
push
add
xchg
insb
dec
enter
or
cmc
je
push
xchg
pop
fnsave
outsb
xorl
scas
mov
dec
and
or
and
push
sbb
mov
sub
inc
push
jle
out
lea
pop
mov
mov
test
test
sti
push
mov
mov
cwtl
lods
push
les
mov
push
lahf
pop
lsl
icebp
mov
mov
mov
cmp
loope
mov
in
adc
aas
lahf
lock
aaa
push
lret
jecxz
pusha
std
pop
fs
gs
push
div
fmulp
mov
in
into
pop
dec
fnstenv
shlb
fwait
jno
cmp
mov
jo
jb
ret
xchg
jmp
shl
mov
inc
jl
imul
stos
dec
sbb
mov
repz
mov
pop
sub
notl
inc
test
mov
lock
dec
pop
sbb
addr16
mov
inc
adc
lahf
pop
or
dec
push
pop
pop
jmp
fiadds
mov
fwait
push
sub
inc
pop
sub
inc
loop
fisttpl
add
cmp
test
mov
adc
pop
jo
and
mov
hlt
or
mov
dec
gs
sbb
mov
imul
fisttps
cmpsb
inc
sub
or
push
mov
loope
in
outsb
fcoms
pop
lods
mov
call
jmp
mov
test
pop
mov
add
push
insb
cmp
xor
xchg
push
sahf
sbb
dec
je
mov
jne
inc
and
mov
push
push
in
in
in
lods
pushf
test
or
addr16
add
mov
pop
pop
cltd
rcrb
aas
insb
lds
add
jp
aas
cmp
cmc
mov
jl
dec
pop
incb
jl
popf
cmp
lods
lock
out
hlt
andl
xor
hlt
orb
xchg
bound
jmp
cs
dec
mov
sti
repnz
rolb
fbstp
sub
jns
scas
cmp
daa
das
pop
mov
mov
sbb
pop
andb
add
inc
adc
mov
or
cmpsb
addl
ret
stc
xlat
test
mov
cmpb
xor
aad
out
fwait
in
hlt
sahf
dec
cwtl
popa
xchg
mov
mov
out
push
mov
push
inc
pop
mov
jecxz
loop
mov
rorl
test
pop
lods
mov
inc
ret
rorl
sbb
and
sbb
cmpsl
rolb
pop
fcoms
arpl
add
stos
sub
push
jp
xchg
addr16
adc
nop
mov
inc
outsl
loop
cmove
cs
aas
mov
adc
movsb
pop
push
fwait
lea
lret
push
mov
sub
sub
jmp
jl
lret
pop
test
lret
mov
jecxz
mov
sub
or
loope
xchg
clc
xchg
push
push
add
lea
cmp
out
or
push
jb
out
jmp
cmp
decb
rolb
shl
and
rep
sahf
cmp
adc
push
repz
or
bound
lods
xchg
cmc
js
dec
mov
jmp
jb
pop
push
test
incb
inc
movsl
into
in
inc
ds
lods
mov
xchg
cmp
xor
xchg
dec
xchg
jae
sahf
in
imul
mov
leave
push
add
rcl
repnz
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
into
mov
popa
inc
or
mov
push
or
jmp
xor
jb
xor
enter
push
pop
mov
xor
xor
adc
sub
test
int3
fmuls
jp
sbb
into
dec
sub
push
xchg
jg
xor
jge
cwtl
mov
movsb
xor
fmull
mov
push
adc
ret
cli
push
inc
popa
iret
and
sub
repnz
xchg
ret
jnp
es
mov
cmp
imul
pusha
jmp
out
ds
inc
subb
std
sbb
and
xchg
pop
loopne
in
mov
mov
and
mov
negl
call
test
cs
jo
pop
mov
testl
xchg
rclb
dec
jmp
cmc
in
lea
lret
rcl
mov
cltd
enter
cmp
sub
cmpsl
test
insl
andl
add
stc
mov
lcall
sub
add
xor
mov
jmp
pushf
xchg
pop
cmp
orl
and
mov
gs
sbb
sahf
rol
daa
xor
and
stos
test
enter
loop
jno
sbb
adc
inc
sub
inc
dec
shrb
icebp
xor
movsb
iret
xor
clc
ss
loop
cltd
push
mov
bound
negl
adc
mov
jnp
pop
mov
push
dec
cmp
mov
outsb
jae
mov
or
lea
sub
lods
jbe
cmp
xor
iret
cwtl
add
and
push
pop
sub
dec
mov
jb
add
xor
rorl
rolb
scas
or
out
aam
lcall
stos
sub
inc
pop
inc
rorl
fisubs
stc
sub
out
and
inc
mov
cli
sub
mov
rcrl
sbb
cmc
xorb
divl
icebp
jno
or
shrb
and
call
sbbl
popf
cmp
and
daa
cltd
jge
or
xlat
mov
inc
scas
add
pusha
jge
adc
lock
push
inc
cmc
fs
aas
cwtl
inc
sarb
ja
cmp
sub
inc
inc
mov
mov
jnp
lret
addr16
lea
push
xchg
int3
inc
push
hlt
fwait
and
xlat
sbb
test
out
push
pop
or
into
sbb
mov
jae
into
fs
idivb
out
push
mov
movsl
or
or
inc
add
dec
mov
scas
push
fnstenv
xchg
int3
cmp
insl
jmp
mov
lret
mov
test
daa
stos
push
xor
pop
push
fidivs
fnstsw
in
jg
popf
push
das
nop
rclb
sub
mov
jb
inc
jne
mov
repz
mov
outsl
cli
push
jb
add
arpl
lret
mov
stc
in
push
subl
jle
xchg
rcrl
pushf
pop
sbb
sbb
mov
cld
pop
pusha
enter
pop
movsl
xor
jbe
sub
xchg
out
sub
adc
dec
push
or
and
jecxz
add
sbb
rorb
mov
inc
pushf
inc
mov
mov
cmc
mov
aam
mov
call
xchg
mov
mov
int3
pop
repnz
aam
inc
ja
rcrl
and
mov
pop
int3
aas
sub
xor
sub
push
inc
jle
mov
xlat
movsb
jg
int
mov
cmp
aas
fsub
insb
fisubrs
add
xor
mov
or
add
sub
ljmp
push
pop
inc
push
jnp
sub
stos
test
imul
xor
add
cmc
rcll
into
faddp
sbb
or
cmp
shrl
aam
push
cmp
lret
mov
mov
push
popa
mov
sub
stos
mov
loop
roll
mov
cwtl
cmp
insb
mov
lret
mov
mov
stos
addr16
dec
sbb
aas
adc
incl
xchg
adc
je
gs
dec
fsubs
data16
lock
out
fnstenv
xchg
nop
addl
movups
in
fistps
jo
pop
xor
rclb
ret
inc
pop
cmp
stos
and
add
add
push
cmp
lds
lcall
nop
mov
mov
imul
push
lret
mov
lcall
scas
imul
cmp
inc
out
jae
xchg
fwait
push
in
adc
or
cmp
mov
lea
test
mov
frstor
rcrl
xchg
stos
push
sbb
test
popa
pop
shrb
push
sbb
sub
sub
mov
adc
adc
inc
dec
scas
mov
lret
adc
test
or
dec
inc
imul
sbb
dec
mov
push
jl
mov
jp
dec
push
jns
sub
insb
imul
scas
xchg
test
je
inc
fcoml
movsl
adc
fiadds
and
mov
sub
mov
jmp
and
dec
std
fs
pop
xchg
push
adc
jbe
cmpsb
pop
jbe
in
mov
aam
test
test
adc
in
andl
int
cmc
imul
add
shlb
bswap
and
inc
test
subb
js
sbb
jnp
cmove
in
mov
push
mov
test
inc
divb
pop
repnz
add
inc
mov
mov
push
pusha
jbe
fcoms
stc
rol
jb
jp
mov
push
lds
out
divb
addr16
adc
in
je
jmp
jae
cmp
loopne
lret
sbb
popa
sbb
jae
push
add
mov
xor
dec
xchg
incl
push
pop
mov
call
xor
inc
xchg
les
and
mov
mov
fstpl
outsl
adc
xor
ds
inc
jmp
nop
addl
fs
and
jbe
je
imul
cld
test
out
xchg
add
out
push
enter
mov
div
xchg
lcall
push
xchg
imul
xchg
xorb
adc
test
inc
lods
inc
push
lcall
fldcw
das
push
leave
test
dec
cltd
push
mov
push
dec
int
int
les
sbb
xorb
imul
push
mov
jp
mov
mov
mov
lahf
mov
mov
loope
aad
xchg
inc
mov
and
dec
loope
dec
push
cmpsl
loop
jp
out
mov
popf
dec
dec
push
out
leave
mov
cmp
inc
pushf
jne
stos
lods
negl
ret
cwtl
and
or
xchg
sbb
popl
pop
out
pop
fldl
add
add
add
add
add
add
inc
xchg
adc
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
