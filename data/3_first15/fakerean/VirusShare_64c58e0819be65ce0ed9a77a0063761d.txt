inc
and
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
mov
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
lea
call
mov
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
mov
lea
mov
movl
movl
movb
mov
push
push
mov
call
test
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
mov
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
movzbl
xor
and
shr
xor
add
sub
jne
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
mov
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
pop
pop
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
push
mov
call
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
cmpl
lea
jne
push
call
add
test
je
push
push
xor
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
mov
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lds
add
add
pop
add
add
rolb
add
daa
mov
add
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
jno
inc
add
bound
add
mov
hlt
add
add
add
add
sahf
iret
pop
add
data16
push
pop
lods
add
add
add
scas
int
les
out
add
add
add
add
jl
je
add
int
jmp
mov
xchg
in
popa
add
test
xchg
jp
push
add
sti
xchg
lahf
add
gs
push
mov
add
push
push
push
push
push
push
call
add
add
jmp
add
add
add
stos
jbe
mov
popl
mov
add
cmc
add
add
hlt
add
pop
mov
out
sub
pop
popl
push
lea
push
push
lea
push
push
push
push
push
push
call
add
fistl
mov
xchg
test
add
jecxz
mov
rcrl
lods
scas
add
add
add
add
lea
movsb
add
xchg
mov
hlt
add
add
add
fisubrs
in
fdivr
lcall
push
push
push
push
push
push
lea
push
push
push
call
xchg
mov
add
add
add
aad
push
out
push
xchg
add
pop
add
jge
add
lds
pop
add
fildl
test
mov
push
cmc
jns
lods
addb
roll
add
add
add
add
add
push
lea
push
lea
push
call
add
movb
add
in
ret
jae
add
mov
movsl
add
iret
les
xchg
mov
add
cmpsb
add
lods
add
hlt
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
addl
add
out
jno
add
xchg
add
xchg
mov
push
pushf
ja
add
add
popf
mov
add
add
xchg
add
in
fcompl
call
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
jge
add
int3
icebp
out
pop
add
push
jbe
add
add
mov
orl
add
out
add
cld
roll
in
fcomps
add
lea
push
push
push
push
push
lea
push
push
push
call
mov
jnp
add
jle
add
pop
add
lods
jno
add
pop
popa
popf
add
add
addl
lret
mov
out
add
jp
gs
push
addl
in
fdivr
lcall
hlt
push
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
cmpsb
lcall
lea
mov
add
add
add
in
sarl
add
add
add
in
jnp
movsb
cltd
arpl
sub
pop
jmp
ret
push
push
push
push
push
push
lea
push
lea
push
call
add
pusha
subb
add
jmp
add
enter
mov
push
lds
add
add
lret
lret
add
add
mov
lret
add
cmpsb
add
mov
xchg
rorb
add
add
lcall
inc
hlt
push
push
push
lea
push
push
push
push
push
call
jns
mov
push
add
insb
jne
stos
scas
add
add
add
les
mov
jp
xchg
lods
movsl
add
xchg
ja
loope
add
mov
push
add
fmuls
lods
add
pop
hlt
push
push
lea
push
push
call
mov
bound
add
stos
pushf
test
clc
stos
jb
bound
mov
add
idiv
add
add
add
addb
int
fld1
push
add
repnz
push
add
add
lods
loop
xchg
jecxz
filds
fmul
add
cwtl
jnp
addb
sub
pop
add
add
push
push
push
push
call
outsl
leave
iret
outsl
add
lods
add
mov
int3
add
push
jne
fwait
stos
ljmp
pusha
sub
mov
outsl
pop
add
push
pop
add
mov
push
push
push
push
push
push
call
ja
gs
faddl
push
xchg
out
insb
aad
add
mov
pop
add
push
jl
mov
push
loopne
test
add
add
add
add
idivl
add
add
add
add
out
int
add
add
pop
xor
push
push
lea
push
push
push
push
push
push
call
fbld
pop
in
push
mov
push
lds
mov
push
rclb
call
add
add
stos
movb
push
addr16
test
add
pop
loopne
jl
add
jge
add
cmpsl
fs
jmp
add
insb
outsl
arpl
stc
add
filds
out
sahf
add
xchg
push
jae
mov
mov
pop
add
push
push
sub
ror
push
and
add
inc
sub
not
pop
sub
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
jnp
ljmp
sar
cltd
mov
add
xchg
jno
fistps
jns
flds
add
xor
jns
push
shlb
fdivr
lcall
jne
push
push
lea
push
push
push
push
call
pop
call
jae
std
add
fucom
push
incb
add
loop
jmp
jl
pop
add
add
mov
icebp
sub
pop
call
mov
push
push
push
lea
push
push
call
iret
mov
fcoml
mov
aad
xchg
fldl
ret
mov
pop
add
movb
xchg
pop
addl
lcall
inc
call
push
push
call
rolb
out
mov
add
jnp
mov
add
add
add
add
add
popf
add
clc
ljmp
add
add
push
testb
add
add
scas
in
ljmp
in
clc
pop
lea
push
push
push
push
lea
push
lea
push
push
call
insb
andl
shr
fwait
add
addr16
jp
jnp
call
mov
add
in
pop
push
out
aam
add
add
add
mov
add
popa
add
in
call
pushl
push
lea
push
push
push
lea
push
call
testl
add
stos
repnz
movsl
std
add
add
fdivrs
repnz
call
add
jns
add
jecxz
add
mov
add
pop
jp
aam
jbe
sub
pop
call
push
lea
push
push
lea
push
push
call
scas
andl
xchg
loope
movsl
push
add
cld
cli
push
add
add
add
add
push
jno
nop
pop
ret
pop
add
stc
lods
test
mov
jo
mov
add
jnp
add
nop
cmpsl
fstpt
in
in
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
call
add
jno
add
add
add
fidivrs
add
add
push
jmp
mov
add
lods
add
add
add
add
in
fdivr
lcall
jne
push
push
lea
push
lea
push
push
push
push
call
mov
add
jne
add
ret
add
hlt
add
jbe
mov
lock
mov
jo
add
xchg
pushf
add
add
add
nop
add
add
add
add
push
jae
mov
add
add
mov
popf
test
pop
mov
sub
pop
call
push
push
add
shr
inc
push
or
inc
add
ror
sub
pop
xor
pop
push
push
push
push
push
push
call
add
push
mov
fcompl
mov
add
shll
add
mov
repnz
rorb
nop
insb
mov
lcall
jne
push
push
call
scas
xchg
test
pop
add
mov
sarl
scas
add
mov
cmpsl
mov
test
add
cwtl
add
add
shl
in
popf
stos
add
cmpsb
clc
jmp
out
ljmp
sub
pop
call
push
push
push
push
lea
push
lea
push
push
call
mov
add
add
jge
pusha
flds
add
add
add
stos
push
lret
jbe
cmc
mov
add
add
repnz
xchg
add
mov
rcrb
movl
in
lcall
inc
push
push
sub
lea
xor
push
or
not
add
add
lea
sub
shr
lea
pop
rol
not
sub
shl
pop
push
lea
push
push
push
push
push
push
push
push
call
add
mov
cmc
xchg
jb
push
cwtl
mov
leave
mov
lea
add
les
add
pop
notl
outsl
add
test
popa
arpl
mov
add
push
lods
movsb
jmp
add
add
ret
add
lcall
push
push
push
push
push
push
lea
push
push
call
loop
push
add
add
add
jbe
add
jne
ficoml
cwtl
add
testb
js
mov
add
adcl
ja
mov
xchg
add
add
in
mov
cmc
push
add
fs
leave
lea
lcall
add
jge
cmp
add
aad
mov
fdivrl
xor
jmp
add
push
add
add
arpl
add
jle
out
mov
jb
xchg
add
xchg
jmp
in
clc
pop
call
mov
push
push
lea
push
lea
push
push
push
push
call
add
jl
add
add
xchg
add
out
loope
xchg
jge
mov
xchg
add
mov
add
push
mov
jle
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
or
xchg
cmc
add
add
mov
sti
ljmp
mov
add
mov
add
mov
add
push
add
add
push
push
push
push
push
lea
push
push
push
call
in
jmp
jp
cmc
mov
add
fildl
add
int3
lcall
add
add
fwait
push
repnz
add
add
scas
mov
pop
add
popf
add
mov
add
add
add
loopne
lcall
pop
hlt
add
push
lea
push
lea
push
call
sahf
jae
rorl
add
mov
jo
push
testb
mov
add
out
sar
mov
add
jl
add
stos
je
pop
add
test
add
into
add
cmc
mov
add
pop
fwait
addl
sub
pop
add
add
push
push
push
push
push
push
push
lea
push
call
pop
add
add
rolb
mov
add
cld
add
mov
add
mov
pop
popa
add
repnz
out
add
add
add
mov
sti
add
in
add
bound
pop
mov
add
add
addl
add
xchg
aam
pop
sub
pop
mov
xor
push
push
push
push
push
push
lea
push
push
call
shl
xchg
mov
movsb
add
loopne
loop
icebp
xchg
add
add
mov
lret
add
test
add
mov
add
fbld
add
roll
add
fisubl
ljmp
lcall
mov
fcomps
test
test
movsb
enter
pop
add
push
push
lea
push
lea
push
push
push
push
push
call
add
push
mov
insb
add
jne
rol
jl
add
cmc
jl
into
gs
mov
add
jae
lcall
mov
adc
add
mov
test
jecxz
xchg
pop
add
xchg
add
mov
testl
loopne
aad
mov
frstor
lcall
push
push
lea
push
push
call
add
jecxz
jge
pop
mov
pop
mov
push
movsl
add
mov
add
shrl
push
mov
test
mov
out
out
add
add
mov
cltd
add
data16
shll
arpl
push
add
add
sub
pop
mov
xor
push
lea
push
push
call
push
mov
arpl
add
gs
xchg
fs
mov
mov
stos
je
sahf
insb
out
add
add
hlt
pop
add
push
lea
push
push
push
call
rcll
in
add
pushf
mov
jo
lds
push
rcrb
mov
pop
mov
std
pusha
aam
jle
add
add
add
scas
add
add
lcall
mov
xor
push
push
push
push
push
call
pop
add
loope
add
push
movsl
push
xchg
xchg
add
add
cld
pushf
add
cwtl
notl
add
pop
add
jne
add
jb
add
stc
cmpsb
pop
add
push
push
rol
not
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
imul
jo
add
add
into
add
add
cmpsl
add
out
mov
in
mov
icebp
add
lcall
mov
lcall
gs
mov
cltd
cld
push
add
mov
pop
xor
push
push
lea
push
push
push
call
fwait
add
shlb
hlt
mov
stos
jle
push
enter
mov
mov
add
add
lods
js
int
add
add
add
jb
lret
add
add
pusha
cmpsb
add
push
xorb
mov
push
addl
add
call
xchg
shll
in
add
test
add
in
in
lcall
les
add
push
add
xor
pop
sub
push
lea
push
push
push
lea
push
push
push
call
add
jmp
add
add
pushf
jno
xchg
mov
ja
xchg
add
add
add
ret
pop
add
jne
add
add
adcl
icebp
add
aam
jecxz
mov
aam
add
fnstsw
add
in
pop
push
push
push
push
push
call
mov
roll
add
mov
shlb
pop
add
add
mov
add
fldl
fiadds
add
add
addb
add
pop
ja
xchg
add
cmpsl
add
stos
add
add
add
add
ljmp
add
into
add
loop
add
add
js
addl
lcall
movsb
pop
push
push
lea
push
push
call
mov
add
add
arpl
push
cld
xchg
icebp
add
mov
ljmp
mov
fsubl
xchg
orl
add
add
mov
add
adcb
add
int3
add
in
add
push
in
add
xchg
add
sub
pop
mov
push
add
pop
add
push
pop
add
push
dec
pop
add
mov
xor
push
lea
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
mov
add
add
lahf
add
lds
popf
in
add
add
in
add
jne
jp
mov
xchg
add
fisubl
in
push
mov
xchg
add
add
fwait
add
add
cwtl
icebp
imul
hlt
sub
pop
xor
push
push
lea
push
call
mov
add
ljmp
loope
imul
lods
ljmp
add
fisubrs
push
mov
jle
add
add
add
lcall
les
add
push
lea
push
push
push
push
push
push
push
push
push
call
add
xchg
aam
outsl
out
mov
add
add
mov
pop
bound
outsl
add
in
test
add
cmp
add
add
add
add
push
mov
sub
pop
mov
xor
push
push
push
push
call
mov
stc
add
stos
add
add
jge
sti
mov
mov
iretw
into
addb
addl
mov
mov
add
add
fiaddl
add
lcall
ret
loopne
pop
dec
aam
push
call
lea
lods
xchg
pop
add
add
add
in
add
mov
push
lods
mov
xchg
add
clc
test
add
add
push
in
mov
add
movb
xchg
add
add
jecxz
add
add
jno
jae
add
loop
add
add
mov
add
sub
pop
add
mov
push
push
dec
push
or
inc
add
inc
shr
sub
pop
dec
add
add
pop
push
pop
pushl
push
inc
rol
pop
call
push
push
push
add
push
or
inc
add
sub
ror
ror
sub
not
sub
pop
ror
inc
pop
push
lea
push
call
add
pop
fiaddl
add
add
add
push
js
leave
pop
add
in
add
or
jne
in
clc
lcall
push
inc
inc
rol
pop
push
call
push
ror
rol
ror
pop
mov
push
not
shr
pop
push
push
push
shl
pop
mov
push
lea
push
push
push
push
push
push
push
call
mov
mov
add
nop
pushf
add
in
outsl
add
add
outsl
push
fiaddl
bound
add
add
push
test
mov
mov
add
jo
xlat
iret
stos
add
mov
add
add
pop
add
add
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
leave
add
add
add
jno
in
add
hlt
jle
pushf
add
add
xchg
add
stc
jne
insb
jne
add
fiadds
add
push
add
test
jmp
sub
pop
add
push
add
shl
pop
mov
xor
push
lea
push
push
push
call
cltd
add
repnz
push
add
add
lahf
xchg
faddl
add
cld
mov
xchg
add
ljmp
mov
add
scas
rolb
add
add
mov
mov
pushf
add
shlb
push
test
add
jno
int3
out
add
rcll
jp
add
add
jne
push
lea
push
push
call
add
add
mov
add
js
lds
add
jnp
push
xchg
xchg
mov
test
jmp
mov
sub
pop
push
push
pop
mov
push
push
push
push
call
lods
mov
push
add
pop
jne
add
lock
add
mov
add
push
hlt
add
mov
add
lahf
fcomip
lahf
push
aam
add
add
add
add
add
out
jl
call
add
add
add
rolb
add
in
hlt
lcall
add
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
icebp
add
enter
mov
add
add
popa
stos
mov
xchg
outsl
pop
clc
lret
push
jno
cltd
data16
data16
jae
mov
hlt
je
pop
sub
pop
add
push
inc
dec
not
dec
pop
add
push
push
push
push
call
test
add
jno
fildll
add
add
jae
add
test
xlat
gs
out
jge
nop
add
mov
add
mov
jnp
jb
push
mov
mov
add
push
add
add
add
stos
les
std
jmp
lock
lcall
mov
xor
push
xor
shl
pop
rep
push
inc
lea
add
pop
mov
xor
push
xor
pop
or
je
mov
xor
push
rol
pop
mov
xor
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
idivl
add
add
add
hlt
add
mov
cmp
nop
std
cltd
out
leave
stos
in
iret
push
outsl
leave
add
out
mov
mov
mov
fildl
imul
add
pop
pop
push
mov
in
fcompl
repnz
push
push
push
push
push
push
call
add
sub
jmp
push
add
jne
loop
add
les
mov
in
in
add
push
push
push
push
lea
push
push
push
push
push
push
call
add
ja
add
add
test
movsl
add
mov
js
add
add
mov
add
add
fistps
in
fcompl
inc
or
mov
push
lea
push
push
push
call
mov
mov
add
xchg
push
mov
sahf
andb
xor
add
mov
xchg
add
insb
aam
add
mov
xchg
int3
mov
mov
jb
je
add
add
in
in
lcall
lock
shl
rol
dec
pop
pop
push
xor
inc
xor
pop
rep
push
shl
inc
dec
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
call
clc
test
add
add
mov
mov
add
add
data16
nop
cli
loop
add
iret
hlt
xchg
in
out
mov
jne
call
loopne
xor
push
lea
push
push
lea
push
push
call
xchg
rolb
add
xchg
xchg
loopne
add
add
add
xchg
mov
jp
rclb
add
les
add
push
push
push
push
lea
push
push
push
lea
push
push
call
aam
jns
add
insb
mov
pusha
add
push
out
pushf
add
add
ljmp
ja
add
add
mov
std
int
xchg
mov
push
fldl
out
pushf
add
add
push
jecxz
pop
add
sar
jge
arpl
sub
pop
or
je
push
lea
inc
lea
pop
mov
add
push
sub
pop
add
rep
push
shl
pop
pop
push
push
push
sub
add
lea
xor
not
sub
inc
pop
xor
pop
push
push
push
lea
push
call
lods
or
add
addl
mov
add
mov
nop
add
xchg
add
fimuls
add
xchg
fcompl
fwait
lret
add
fdivl
push
add
mov
pop
pop
jns
je
insb
add
bnd
mov
pop
push
inc
pop
mov
push
push
push
push
push
push
lea
push
call
icebp
add
mov
mov
fcmovnb
add
mov
add
fildl
add
add
testb
push
add
add
jle
stc
stc
jl
fs
add
insl
hlt
mov
push
push
push
push
push
push
push
push
lea
push
call
stc
insb
add
add
add
test
orl
add
add
add
jmp
mov
xchg
add
add
out
add
lcall
loopne
push
push
push
call
add
jge
add
hlt
loopne
jmp
add
arpl
add
sarb
jle
pop
add
add
add
rorb
add
add
add
in
hlt
lcall
in
push
dec
pop
add
push
push
push
push
push
push
push
push
call
popa
jbe
enter
add
aam
add
leave
mov
add
loopne
aam
stos
add
push
add
pop
add
bound
xchg
add
push
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
jne
movl
lock
mov
xchg
push
insb
add
push
add
add
rcrl
loopne
cmc
add
mov
iret
add
adc
add
movsl
add
push
add
mov
mov
in
call
push
push
push
push
push
push
call
add
clc
add
add
cwtl
mov
out
add
add
pop
add
cld
mov
xlat
sti
out
add
rolb
test
add
mov
in
lock
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
xlat
mov
fwait
add
jno
notl
add
add
mov
xchg
rcrb
jp
rcl
add
in
add
jae
movsb
pushf
jmp
add
add
in
fcompl
push
dec
sub
add
add
pop
pop
pop
push
sub
pop
pop
leave
push
inc
sub
pop
ret
push
lea
push
lea
push
call
loop
in
add
mov
add
loopne
mov
mov
mov
nop
fs
pop
cmpl
add
mov
mov
sub
pop
push
push
lea
shl
sub
pop
mov
push
sub
not
shl
pop
add
push
push
push
push
call
jmp
add
pusha
add
add
iret
mov
add
ror
sahf
movsl
add
add
pop
mov
add
aam
mov
out
ficompl
ja
add
adcl
movsb
hlt
add
add
add
lcall
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
movsb
jae
jecxz
add
add
mov
xchg
negb
add
je
mov
addr16
mov
insb
test
scas
add
in
add
pop
add
cmpsl
cmpsb
cltd
outsl
push
pop
loope
lods
mov
add
push
stos
ljmp
mov
add
add
jp
in
fcompl
push
rol
add
sub
shl
pop
push
push
sub
inc
pop
movl
push
shl
pop
addl
push
add
add
pop
test
je
mov
push
xor
pop
pop
push
push
push
push
push
push
push
call
mov
int3
add
ret
pop
add
cltd
cld
data16
add
in
add
loopne
aad
add
xchg
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
pop
loopne
add
pusha
jns
rolb
mov
les
in
ror
gs
mov
fwait
add
fnstenv
jnp
sub
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
lods
jnp
add
out
sahf
sti
push
add
add
push
add
jb
mov
add
mov
mov
xchg
add
push
add
rclb
lcall
push
add
pop
ret
push
push
sub
rol
dec
pop
mov
push
inc
sub
shl
pop
add
push
push
dec
pop
push
push
lea
push
call
add
add
je
add
add
add
pop
add
xchg
pop
add
add
xchg
add
jne
in
xchg
fsubrs
mov
and
add
xchg
mov
rcrb
mov
jb
cltd
add
je
add
in
clc
lcall
push
push
push
push
push
push
push
call
add
movsl
add
pop
call
jle
add
add
add
pop
fcmovu
adcl
mov
add
add
add
add
add
leave
pop
stos
add
add
mov
stos
movsb
hlt
add
sub
pop
push
testl
push
push
push
push
call
mov
add
jecxz
pop
add
add
nop
add
lret
push
out
mov
fimull
pop
cwtl
add
test
add
pop
cmpsb
lret
int
cli
jmp
ja
popl
add
in
add
or
fwait
add
mul
mov
mov
out
rcr
push
in
lock
addl
push
lea
pop
push
push
lea
sub
pop
call
push
rol
ror
pop
mov
push
push
push
push
lea
push
push
call
ja
mov
add
xlat
add
fiadds
arpl
push
cmpl
ja
mov
mov
add
add
arpl
add
mov
jno
cmpsb
add
add
cltd
fiadds
add
add
add
pusha
out
add
cwtl
add
jecxz
add
pushl
push
lea
push
push
lea
push
lea
push
call
jecxz
lods
stos
push
add
add
pop
mov
lret
add
xchg
addl
sti
imul
out
add
pusha
pop
jecxz
add
mov
in
in
lcall
call
push
push
call
mov
mov
push
add
adcl
add
add
add
add
add
icebp
cwtl
add
pop
ljmp
add
insb
lock
add
push
push
push
call
cltd
hlt
jbe
in
add
add
faddl
std
add
pop
add
mov
imul
add
add
push
add
add
add
add
add
ja
add
add
mov
data16
mov
sub
pop
call
cmpl
jne
push
push
push
lea
push
push
lea
push
lea
push
push
call
mov
add
int3
add
rolb
add
mov
add
mov
mov
sub
pop
pop
push
rol
pop
pop
push
push
push
push
push
push
push
call
add
push
push
mov
add
loope
add
int
add
mov
enter
push
lock
add
testb
mov
cmc
mov
add
mov
testb
movb
add
mov
fwait
idivl
outsl
roll
sub
pop
pop
push
add
xor
not
pop
pop
push
lea
push
push
lea
push
call
in
fisttps
stc
add
add
add
add
jne
add
ljmp
add
testl
xchg
fs
add
lock
std
out
jp
fnsave
add
add
push
int3
add
add
add
scas
test
mov
sub
pop
leave
push
sub
xor
pop
ret
push
push
lea
push
lea
push
lea
push
push
push
push
call
test
add
into
sahf
hlt
add
xchg
add
mov
add
add
cmp
add
add
add
xchg
lret
mov
pop
mov
push
mov
out
sub
pop
push
push
push
call
ljmp
clc
mov
mov
add
iret
add
fildl
add
cltd
iret
lock
mov
mov
add
jne
ja
add
lret
add
jl
sub
pop
mov
push
sub
shl
pop
add
push
push
shl
shr
pop
push
push
ror
ror
pop
push
push
push
push
call
out
ret
add
pop
xchg
jb
add
fs
mov
jp
mov
cmpsb
jo
jns
sub
pop
movl
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
aam
loopne
add
add
add
mov
add
out
shrl
jecxz
mov
lret
in
lcall
add
or
call
js
push
call
add
jno
shll
fsubp
cmpsb
mov
insb
add
jp
lds
pusha
xchg
mov
loopne
nop
loop
add
in
outsl
aad
cltd
add
pop
lds
add
in
lock
push
push
push
push
call
add
fimuls
add
lock
xchg
add
fiadds
cltd
in
add
mov
push
popf
cmpsb
add
sar
call
fld
jecxz
sub
pop
subl
cmpl
jne
push
lea
push
push
push
lea
push
push
call
add
jge
mov
lcall
pop
add
add
add
scas
add
mov
add
pop
jmp
pop
add
add
pop
jl
mov
add
sahf
sub
pop
pop
push
rol
add
pop
pop
pop
push
ror
sub
add
pop
pop
push
xor
dec
sub
pop
leave
push
lea
push
push
push
push
push
push
push
call
stos
add
mov
add
lret
loope
add
pop
loop
scas
push
mov
mov
mov
add
lock
add
std
mov
loop
add
add
insb
sti
ficomps
js
add
mov
fsubr
sub
pop
ret
push
ror
shr
not
pop
push
push
dec
xor
ror
inc
pop
mov
push
lea
push
push
push
push
lea
push
push
push
push
push
call
insb
shlb
add
add
mov
add
add
mov
repnz
add
add
add
add
add
sti
add
jns
outsl
mov
add
data16
add
lods
add
loop
add
jle
scas
jle
lods
xchg
jnp
mov
fcomps
cld
push
push
lea
push
push
push
push
push
push
lea
push
push
call
movsb
cld
push
add
fistpl
add
leave
popf
jnp
fmuls
jo
into
std
jl
repnz
icebp
ret
loop
mov
mov
jle
add
test
add
add
add
push
xlat
aam
add
movsl
xchg
pop
lcall
push
inc
sub
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
add
add
out
test
mov
mov
std
mov
gs
nop
iret
addb
add
add
add
test
fisubl
lds
in
ja
in
enter
ja
add
in
fcompl
push
rol
lea
pop
push
push
add
pop
mov
push
push
push
push
push
push
call
test
xchg
addr16
jnp
shl
add
call
mov
jge
leave
sahf
add
add
out
gs
add
add
add
add
ljmp
shl
mov
add
lahf
sahf
in
data16
hlt
jp
sti
add
in
subb
lcall
inc
cmp
lea
add
pop
sub
push
push
push
lea
push
lea
push
push
lea
push
call
jecxz
push
add
mov
jb
lea
imul
ret
add
int3
roll
add
popa
hlt
and
mov
add
add
add
lret
pop
jb
add
in
add
mov
add
icebp
jmp
fildl
mov
pop
jp
pop
addl
fs
push
push
push
push
push
push
call
je
add
iret
add
add
mov
mov
in
add
mov
add
mov
testl
loopne
lcall
call
push
xor
not
pop
mov
push
xor
lea
dec
pop
mov
push
sub
sub
sub
pop
add
add
push
sub
inc
inc
pop
mov
push
sub
rol
shr
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
test
add
stos
lods
in
mov
push
movsb
add
add
add
add
mov
jp
jle
cmpsb
insb
push
mov
add
add
add
add
add
xchg
add
add
popa
add
push
shlb
jge
notb
add
scas
out
mov
push
xchg
jmp
sub
pop
cmp
jne
push
lea
push
push
lea
push
lea
push
call
nop
fucomi
push
mov
add
stc
add
jne
add
ja
add
sarl
xchg
pop
lea
add
pop
add
ljmp
cld
test
sub
pop
cmp
jne
mov
push
push
call
add
add
push
jae
mov
mov
push
add
add
add
out
push
add
cmpsl
mov
add
mov
sub
pop
movl
push
inc
not
pop
jmp
push
lea
push
call
add
jle
push
popf
mov
mov
fldl
out
xchg
mov
add
pop
add
push
add
push
mov
stos
jl
cmc
ja
fwait
popl
pop
jecxz
sub
pop
mov
push
push
call
bound
add
shrb
in
xchg
scas
jo
add
jp
shll
mov
fs
filds
add
lret
call
int3
out
fiadds
add
jbe
int
lcall
add
out
notb
add
sub
pop
mov
push
rol
add
ror
pop
sub
jne
mov
push
push
push
push
push
push
lea
push
push
push
call
add
test
mov
les
aam
lods
push
nop
add
add
push
push
add
add
movl
clc
lods
jns
add
enter
cmpsb
add
add
repnz
add
add
jmp
push
lea
push
push
push
push
push
push
call
imul
sarl
lock
jae
jo
xchg
add
imul
push
add
add
add
jmp
add
test
into
xchg
mov
jp
mov
fildl
add
addb
pop
mov
mov
push
push
lea
push
push
push
call
add
add
enter
add
mov
xchg
int
ja
mov
aad
mov
mov
push
add
add
in
add
xchg
into
add
add
arpl
lret
lods
filds
add
test
add
add
fwait
push
sub
pop
cmp
jne
mov
push
inc
rol
pop
movl
jmp
push
lea
push
push
push
push
call
add
add
add
les
add
out
add
shlb
push
jns
sar
pop
mov
les
std
add
lret
clc
in
loope
xchg
sub
pop
mov
push
dec
inc
shr
pop
cmpw
jne
push
not
pop
mov
push
pop
movl
push
shr
add
sub
pop
jmp
push
add
pop
pushl
pop
push
dec
pop
mov
push
ror
xor
add
pop
mov
push
lea
push
push
push
lea
push
push
push
push
call
xchg
mov
add
int
add
loope
xchg
push
jne
mov
pop
popa
push
add
scas
push
mov
add
int
add
add
push
or
inc
pop
inc
push
not
shl
inc
push
or
inc
add
sub
sub
sub
ror
sub
dec
pop
lea
pop
push
shr
dec
rol
dec
pop
push
push
lea
push
push
lea
push
call
add
add
popf
loop
pop
pop
filds
add
movl
int
pop
add
add
xchg
add
jb
add
ret
jne
test
add
add
push
add
lcall
xchg
xor
or
add
add
fildll
add
ja
lods
mov
in
aam
bnd
jnp
sar
jns
in
xchg
add
sti
add
aam
add
push
mov
add
pop
push
add
add
add
add
mov
gs
xchg
add
add
sub
pop
cmpl
je
push
push
not
inc
ror
push
or
not
add
xor
rol
sub
ror
pop
not
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
cmpsb
pop
add
add
lea
mov
xchg
jbe
add
lods
shrb
imul
add
add
stc
add
jge
add
sub
pop
push
push
inc
pop
call
cmpl
je
push
push
not
add
push
and
add
lea
lea
sub
shr
not
dec
add
pop
inc
add
ror
pop
push
push
call
pushf
add
add
in
add
out
mov
push
add
mov
fistpl
out
jb
add
cld
add
add
add
add
outsl
out
push
addb
cwtl
pop
add
xchg
add
add
add
cld
add
push
mov
add
add
ljmp
lcall
push
lea
push
lea
push
push
lea
push
push
push
push
call
nop
add
hlt
fiaddl
add
jle
cld
mov
fadds
stos
add
fdiv
xchg
add
add
fisubrs
lcall
xchg
xor
add
int3
je
push
push
push
push
pop
add
sub
pop
lea
pop
push
push
push
lea
push
push
call
cwtl
push
test
fcoms
add
xlat
cmpsl
fcmovnu
add
icebp
loope
add
mov
out
imul
add
add
add
add
jnp
mov
add
test
add
cmc
add
mov
add
xchg
push
fwait
add
je
pop
pop
add
jbe
mov
sub
pop
push
push
dec
pop
call
push
sub
rol
add
pop
cmpl
je
push
push
lea
rol
push
push
pop
add
add
xor
sub
xor
sub
shr
pop
add
add
pop
push
push
push
lea
push
push
call
mov
mov
add
add
jb
lret
cli
outsl
arpl
add
movsl
lea
mov
bound
jae
add
idivl
rolb
movsb
add
xchg
mov
xchg
pop
push
xchg
push
jl
add
lcall
push
lea
push
push
lea
push
call
scas
pop
add
add
sahf
add
jns
cld
pusha
gs
add
push
add
outsl
pop
xchg
movsl
std
add
scas
add
add
add
lahf
sahf
add
add
add
add
add
add
sub
pop
call
push
push
push
push
push
push
call
pop
mov
test
fisubrs
add
mov
cltd
add
xchg
ja
movsb
aad
sti
xchg
add
xchg
add
mov
adc
mov
xchg
in
sbb
add
mov
fidivrl
mov
push
add
call
cmpl
je
push
push
inc
shl
add
push
or
inc
add
ror
sub
inc
pop
not
add
ror
pop
push
add
rol
pop
push
call
push
push
push
push
call
cmpsb
add
movl
mov
pop
add
jne
add
add
int
xchg
filds
add
test
jns
mov
add
add
add
push
mov
add
rcrl
cmpl
je
push
push
add
rol
inc
ror
push
push
pop
add
xor
sub
shr
xor
pop
shr
lea
sub
shr
pop
push
push
lea
push
lea
push
lea
push
push
push
call
pop
movsb
add
add
movsb
pop
xchg
add
jb
lock
add
scas
add
add
lds
push
les
xchg
add
aad
repnz
jb
add
add
pop
xchg
mov
add
add
add
xchg
gs
sub
pop
push
push
inc
inc
pop
call
cmpl
je
push
push
add
add
xor
push
sub
add
add
sub
add
pop
not
pop
push
sub
sub
pop
push
push
add
ror
shr
pop
call
push
push
lea
push
push
push
push
push
push
call
mov
jae
movsb
add
repnz
in
add
add
test
pusha
adc
add
add
shlb
lahf
pop
add
pusha
sub
pop
cmpl
je
push
push
ror
push
or
inc
add
not
inc
shl
add
sub
shl
pop
add
rol
not
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
movsl
jle
popa
mov
stos
pusha
cld
jnp
add
add
xchg
mov
leave
mov
sbb
push
ja
jl
add
cltd
movsb
testb
add
lds
add
add
add
mov
data16
add
loopew
add
ljmp
in
fcomps
call
push
not
dec
xor
pop
cmpl
je
push
push
lea
push
and
add
rol
sub
sub
pop
sub
pop
push
pop
push
push
push
lea
push
push
push
lea
push
call
mov
push
add
add
add
add
add
add
add
mov
fidivrl
push
add
test
in
call
add
push
sub
pop
cmpl
je
push
push
lea
sub
push
or
not
add
sub
sub
add
add
pop
sub
xor
pop
push
lea
push
push
call
int
push
add
add
mov
add
add
add
jecxz
push
add
idiv
pop
movsb
loopne
iret
loop
pop
xchg
pop
in
fadds
out
ja
mov
imul
add
push
add
out
ret
add
add
movb
add
fldl
fwait
add
add
add
add
mov
push
push
lea
push
push
call
add
add
jbe
sahf
std
add
add
popl
add
add
ffree
pop
add
imul
andl
add
hlt
pop
call
cmpl
je
push
push
sub
push
and
add
xor
ror
shl
add
sub
ror
pop
lea
pop
push
push
push
push
push
push
call
add
cld
pushf
xchg
cmc
scas
lcall
add
add
jb
push
add
stos
shl
add
add
jp
rcll
add
add
pop
jo
mov
add
add
add
add
push
push
push
push
push
push
push
push
lea
push
push
call
pusha
out
add
xchg
in
les
roll
mov
push
mov
add
and
add
add
add
rclb
call
mov
mov
aam
into
pop
add
add
jo
shlb
in
fdivr
lcall
in
add
cmpl
je
push
push
add
add
push
xor
add
add
not
inc
inc
sub
add
pop
shl
xor
add
shr
pop
push
lea
sub
pop
push
call
push
lea
sub
sub
pop
cmpl
jne
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
test
mov
pop
add
add
jo
jl
ret
mov
jle
leave
lock
fdivr
lcall
add
add
add
or
not
ror
lea
pop
xor
pop
push
add
add
sub
inc
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
jno
jmp
add
jnp
sahf
lcall
test
insb
movsl
jnp
push
mov
sti
add
add
add
int
add
mov
add
add
cld
push
loopne
add
in
fdivr
lcall
push
push
call
add
in
jo
call
add
add
fwait
hlt
scas
add
shrb
add
int3
jmp
stos
jns
cld
push
sahf
add
jecxz
mov
add
mov
jne
add
clc
lcall
ret
push
pop
push
push
push
push
push
push
push
push
push
call
jno
push
add
add
aam
in
arpl
add
add
add
add
in
add
push
lea
push
push
push
push
call
mov
lret
imul
xchg
lods
lock
icebp
add
add
jl
add
add
jns
push
in
mov
ljmp
ret
add
out
add
jl
out
in
add
loopne
sti
push
nop
std
pop
xchg
jns
add
mov
sub
pop
cmpl
jne
push
push
lea
sub
push
or
not
add
inc
rol
sub
xor
add
pop
dec
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
movsb
sub
jbe
add
fxch
add
add
add
jo
add
add
add
testl
ljmp
add
fcmovnu
fsubs
in
fdivr
lcall
jne
call
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
push
lock
add
xchg
add
add
add
add
xchg
jecxz
add
ljmp
enter
cwtl
xchg
jl
push
add
jge
add
add
jnp
add
xchg
enter
fcomps
call
faddl
call
push
push
push
push
lea
push
call
pop
outsl
cld
enter
add
testb
out
mov
xchg
sti
test
mov
pushf
lock
add
les
jl
aam
cli
jmp
lret
add
xchg
add
fists
add
add
ja
add
fcomi
fiaddl
pop
add
stos
pushf
push
lcall
pop
sbb
add
lea
push
call
add
cltd
lods
push
imul
jb
fiaddl
add
inc
jns
lret
lahf
mov
faddl
add
add
jge
add
test
add
add
test
dec
not
sub
pop
mov
push
add
rol
pop
call
push
lea
push
lea
push
push
lea
push
push
push
call
add
mov
add
jae
add
add
jo
cmpsb
lret
add
imul
add
add
add
movsl
addb
icebp
mov
add
sarl
incb
add
lcall
push
rol
pop
jmp
push
pop
cmpl
jne
push
push
sub
lea
push
or
inc
add
ror
add
sub
lea
add
pop
shr
shl
sub
pop
push
push
push
push
push
call
add
add
add
leave
add
stc
push
add
mov
add
add
push
sahf
mov
je
out
xchg
addb
iret
fcmovb
addb
add
add
pop
stos
pop
scas
add
cltd
push
ljmp
lcall
jne
push
sub
lea
shl
pop
call
push
push
push
lea
push
call
jge
fdivs
fstl
fcomps
fdivrs
flds
fiadds
enter
add
mov
add
add
add
add
pop
call
push
shl
xor
sub
pop
jmp
cmpl
jne
push
inc
pop
mov
push
push
push
push
push
push
lea
push
push
call
xchg
xchg
xchg
push
aad
test
add
add
add
jp
call
outsl
add
jmp
pusha
add
movsb
mov
mov
stos
fs
add
cmpsl
movsl
xlat
add
flds
jmp
loopne
lcall
add
add
push
push
push
push
lea
push
push
call
in
repnz
add
test
add
int3
cmpsl
int
cmpsl
movsb
clc
add
mov
pop
mov
rcr
pop
cmc
cmpsb
lods
bound
add
add
jno
mov
xchg
pusha
add
add
mov
add
add
add
pushf
testl
add
nop
add
pop
push
push
push
add
xor
rol
push
push
pop
add
lea
sub
shl
pop
shr
pop
push
dec
pop
pushl
push
ror
pop
call
call
push
push
shr
sub
push
or
inc
add
lea
sub
sub
pop
xor
rol
pop
push
add
shr
pop
pushl
push
push
lea
push
push
lea
push
lea
push
call
addr16
in
jmp
repnz
push
shlb
out
sahf
mov
cmpsb
add
out
les
add
jo
mov
jge
add
iret
int3
add
mov
mov
add
fists
add
lcall
xor
add
jbe
pop
hlt
lcall
call
add
fiaddl
sti
int3
add
mov
pop
mov
nop
add
add
mov
mov
add
add
lahf
rolb
mov
shrb
add
pop
add
into
xchg
add
mov
addr16
add
aad
add
push
mov
imul
test
roll
shrb
and
add
xor
push
xor
add
add
dec
sub
lea
pop
sub
ror
add
sub
pop
push
ror
sub
dec
pop
pushl
push
lea
push
call
mov
rcr
add
shrl
mov
lods
add
mov
add
mov
add
add
in
clc
lcall
inc
and
add
ret
xchg
int3
test
shrb
cmp
dec
push
add
ror
add
push
or
not
add
xor
not
sub
inc
pop
xor
xor
pop
push
push
lea
push
call
add
xchg
jae
cmc
out
out
roll
test
ljmp
add
add
add
mov
pop
mov
hlt
lcall
jne
call
push
shr
lea
pop
call
push
push
shl
push
sub
add
ror
add
add
sub
sub
xor
ror
rol
pop
lea
rol
sub
pop
push
inc
not
rol
pop
pushl
call
push
dec
pop
call
push
push
add
not
xor
push
or
inc
add
sub
sub
ror
ror
pop
not
ror
pop
push
push
push
push
lea
push
push
call
add
pop
int
clc
add
pop
add
mov
out
lock
les
add
pop
add
add
mov
stc
mov
nop
fs
lea
mov
outsl
pop
xchg
flds
mov
fidivl
add
mov
ljmp
add
ret
add
imul
call
pushl
push
push
lea
push
lea
push
push
push
push
call
jne
add
lret
add
push
xchg
push
popf
stos
add
add
add
jmp
add
mov
enter
xchg
add
in
call
call
push
push
shl
push
and
add
xor
add
shr
sub
shr
pop
rol
ror
pop
push
push
push
push
lea
push
call
js
push
bnd
add
lcall
hlt
enter
add
nop
add
add
pushf
add
add
stos
pop
lods
repnz
push
add
mov
imul
cltd
cltd
add
add
mov
add
test
sub
pop
pushl
push
push
push
push
push
push
push
call
jae
stos
add
add
xchg
cwtl
mov
jmp
add
add
mov
add
add
add
shr
mov
pop
cmpsb
iret
out
loopne
and
add
add
add
add
gs
out
add
add
pushf
add
add
inc
and
add
shrl
aam
call
push
push
sub
push
push
pop
add
dec
sub
sub
xor
pop
inc
add
pop
push
lea
push
lea
push
push
push
push
push
call
shrl
mov
mov
add
mov
add
pop
xchg
test
popl
test
loope
repnz
testl
sub
pop
pushl
call
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
xchg
in
lret
pushf
mov
mov
outsl
add
add
enter
xchg
pop
add
lods
pop
add
leave
mov
movsb
add
add
in
add
imul
fwait
jmp
ret
add
lret
jp
add
pop
add
add
out
loop
mov
sub
pop
call
push
push
ror
ror
xor
push
sub
add
not
sub
ror
dec
pop
add
sub
pop
push
xor
xor
pop
pushl
call
push
lea
push
push
push
push
push
lea
push
push
push
call
data16
lret
mov
mov
add
jnp
movsl
movsl
add
nop
add
lcall
add
mov
in
sahf
add
add
add
xlat
mov
xchg
cmpsb
add
in
bound
add
push
ja
xchg
add
add
lcall
shrb
subl
xor
add
shl
sub
pop
sub
pop
push
lea
push
push
push
lea
push
lea
push
call
rolb
xchg
scas
mov
pop
jge
jge
sti
mov
hlt
pop
roll
gs
scas
add
add
imul
add
fiadds
add
into
add
xor
ret
push
sub
pop
pushl
push
push
call
add
add
pop
addb
mov
lock
in
jo
mov
jmp
rcrl
cwtl
int3
add
add
push
enter
pop
in
mov
add
aad
mov
mov
stos
addb
xchg
mov
imul
in
cltd
in
add
roll
fs
sub
pop
call
push
inc
xor
pop
lea
push
push
shr
pop
call
push
push
shl
lea
push
and
add
sub
lea
shl
xor
pop
ror
rol
ror
pop
push
push
lea
push
call
add
add
lahf
add
orb
pop
jbe
push
add
add
pop
xchg
movsb
gs
popf
loop
stos
add
fstps
add
mov
add
mov
xchg
aad
out
add
mov
imul
hlt
lcall
jne
call
push
add
pop
call
push
push
shl
rol
sub
xor
push
or
inc
add
inc
sub
xor
ror
pop
xor
inc
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jns
icebp
flds
add
add
add
add
cmpsb
add
mov
mov
add
test
out
loopne
add
add
pushf
addr16
add
out
push
gs
add
jb
add
test
add
push
int3
add
jp
mov
add
gs
iret
add
stc
cli
add
sub
pop
pushl
push
inc
shl
pop
call
push
push
call
add
add
test
add
test
test
insb
mov
in
push
negb
enter
mov
add
roll
xchg
xchg
mov
add
mov
add
add
fildl
ja
jne
add
in
fdivp
add
add
lcall
shrb
aas
imul
rolb
add
sub
dec
pop
inc
shl
pop
push
not
add
sub
pop
pushl
call
push
lea
push
push
push
push
push
push
lea
push
push
call
scas
add
add
add
add
in
jb
jbe
roll
add
out
mov
add
divl
add
pop
add
movsl
sub
pop
call
push
push
sub
shr
push
or
inc
add
shl
shr
sub
inc
dec
pop
sub
pop
push
push
push
push
push
push
push
call
popa
popf
jp
pop
mov
add
add
add
je
mov
nop
add
add
add
add
mov
add
out
pop
add
out
add
jmp
add
jne
call
push
push
shr
push
sub
add
ror
sub
rol
sub
pop
shl
pop
push
push
inc
sub
push
or
inc
add
inc
shr
add
sub
not
add
add
add
pop
add
pop
push
push
lea
push
push
push
push
push
push
push
call
add
lea
aam
repnz
int
bound
icebp
lods
lret
movb
repnz
add
push
out
mov
filds
repnz
loopne
lcall
repnz
sub
pop
call
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
hlt
add
into
mov
push
jno
add
popa
xorb
push
in
add
out
in
xchg
sbb
xchg
mov
add
pushf
insb
les
clc
aad
in
xchg
mov
pop
mov
xchg
add
std
in
outsl
add
add
lcall
push
push
push
push
lea
push
call
mov
add
pop
jo
repnz
stc
aam
add
add
pop
add
push
add
add
mov
add
lcall
jne
push
push
lea
push
push
call
xchg
add
jle
in
add
add
lods
in
stos
add
add
mov
stos
jb
mov
add
jge
lods
push
repnz
fmulp
push
imul
clc
movsb
add
add
pop
mov
add
movsb
add
xchg
stos
add
mov
jmp
lcall
mov
add
push
push
push
push
push
push
push
push
call
scas
mov
cwtl
ror
mov
xchg
jle
add
mov
pop
add
add
push
insb
xchg
add
sub
pop
mov
int
push
shr
shl
pop
lea
push
push
sub
dec
sub
push
push
pop
add
sub
lea
sub
pop
sub
pop
push
push
push
push
push
push
lea
push
lea
push
call
add
lds
add
mov
pop
add
add
clc
incb
in
xchg
lcall
xorl
out
pop
add
add
add
scas
fsubrl
les
rclb
mov
pop
add
lahf
std
fwait
rcrl
add
jne
push
lea
pop
call
push
shr
add
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
push
cmpsb
andl
imul
jle
add
movsl
hlt
add
cli
je
push
test
fwait
add
fisubs
mov
cli
leave
add
lcall
shrb
jno
push
push
sub
push
or
not
add
rol
sub
add
add
lea
pop
inc
lea
pop
push
push
push
call
out
aam
add
add
ret
add
xchg
lods
add
xchg
out
add
add
popa
testl
lds
add
out
add
lea
movb
loope
in
hlt
pop
pushl
call
push
lea
push
push
push
call
xchg
add
movb
add
addl
add
fs
add
add
pop
addl
ja
add
add
add
add
fisttps
add
in
jae
push
add
ljmp
mov
in
fwait
mov
fstp
test
jl
add
sub
pop
call
push
sub
add
pop
mov
push
push
push
push
call
mov
mov
add
lcall
mov
add
add
add
in
mov
add
lret
popa
add
scas
stos
add
add
leave
idivb
add
movsl
lahf
std
mov
sub
pop
lea
push
push
add
push
or
not
add
sub
dec
pop
not
pop
push
rol
not
dec
not
pop
pushl
push
inc
ror
ror
pop
call
push
push
push
push
push
push
lea
push
push
call
add
add
add
push
add
jecxz
stos
add
add
lods
mov
ja
imul
arpl
add
add
mov
pop
xchg
ja
enter
call
pop
pop
scas
add
add
add
in
lods
arpl
add
out
mov
loope
mov
xchg
sub
pop
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
pop
insb
popf
cld
add
xchg
sti
call
jb
movb
add
add
in
jle
add
push
mov
add
cli
cwtl
add
add
add
add
mov
add
scas
sub
pop
push
push
push
lea
push
push
lea
push
call
pop
pop
jp
add
roll
scas
ret
popf
mov
jno
scas
mov
add
add
lahf
fmul
add
mov
faddl
add
add
jnp
add
fildl
lcall
add
rcrb
jne
push
push
inc
push
push
pop
add
sub
rol
lea
add
sub
ror
pop
add
add
sub
pop
push
lea
add
add
add
pop
push
call
push
push
lea
sub
shl
push
push
pop
add
not
add
sub
add
pop
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
pop
cwtl
popf
ja
ret
jb
out
sti
add
enter
add
fisubrs
fwait
mov
rcll
add
lcall
add
icebp
add
jecxz
std
add
jnp
cli
add
sub
pop
pushl
call
push
sub
pop
push
call
push
push
rol
shl
rol
sub
push
or
not
add
shl
dec
sub
shl
add
pop
not
add
pop
push
xor
pop
pushl
call
push
push
push
lea
push
push
call
add
add
aam
add
movsl
jns
add
add
data16
loope
testl
add
sub
pop
call
push
add
not
pop
pushl
mov
push
push
push
push
push
push
push
push
push
push
call
add
icebp
shl
jbe
mov
lock
roll
mov
add
add
cld
std
enter
xchg
add
fistpl
cli
mov
movl
fiadds
popl
jns
stc
sub
pop
jmp
push
push
dec
push
push
pop
add
lea
sub
add
sub
xor
pop
not
add
shl
pop
push
lea
sub
pop
pushl
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
out
scas
ljmp
lock
jne
movsb
push
js
sahf
add
rorb
mov
int
jb
push
add
push
lds
lcall
cli
adc
add
shrb
push
push
shr
shr
pop
call
push
push
dec
push
push
pop
add
shl
add
rol
sub
sub
inc
inc
pop
rol
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
arpl
jnp
jl
add
xlat
jno
add
sahf
sahf
int
cmpsb
insb
fdivrs
mov
add
cmc
fildl
ljmp
fdivr
lcall
jne
call
push
not
add
ror
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
add
jne
add
mov
mov
add
test
add
add
add
shl
xchg
add
int3
popa
add
xlat
aam
push
add
add
loopne
call
leave
push
push
push
lea
push
lea
push
push
push
call
test
add
add
add
ljmp
add
mov
stos
pusha
clc
add
add
push
stos
xchg
roll
popa
jp
add
add
add
hlt
stc
add
pop
mov
out
add
add
int
add
lcall
jp
add
add
add
aad
lret
mov
aad
in
in
add
push
lea
pop
pop
push
push
push
call
push
pop
mov
push
add
mov
add
add
add
test
jge
cli
lcall
mov
pop
xorb
mov
add
ret
add
mov
scas
fwait
jo
std
add
jno
add
lret
hlt
rolb
push
lea
push
push
push
push
push
push
push
push
call
pusha
aad
push
push
pop
jns
scas
mov
add
lock
add
add
add
add
icebp
add
int
add
movsb
xchg
add
hlt
jle
jmp
je
jl
jae
add
sub
pop
pop
xor
push
push
push
push
push
push
push
push
push
lea
push
call
movsl
add
clc
loopne
out
jbe
jns
imul
add
mov
add
push
push
add
mov
mov
popf
add
ljmp
push
add
movsb
hlt
add
jmp
lcall
push
push
push
push
push
lea
push
push
call
shr
fdiv
gs
add
lods
add
add
jecxz
add
mov
add
add
enter
add
mov
add
test
push
fidivrs
shrl
mov
pop
flds
lcall
or
leave
push
lea
push
lea
push
push
push
call
cli
filds
add
mov
shll
xchg
mov
xchg
xchg
aam
clc
add
scas
pop
je
stos
add
movb
jecxz
add
aad
add
fidivrl
addl
clc
fwait
out
fwait
enter
cld
mov
jbe
add
lcall
or
push
push
lea
push
lea
push
push
call
mov
mov
add
add
test
imul
add
pop
add
mov
mov
loop
add
add
shll
xchg
add
jl
out
in
in
lcall
push
rol
shr
rol
add
pop
mov
push
lea
push
call
add
add
add
lret
fadds
pop
test
add
testl
cwtl
mov
fdivrs
sti
sub
pop
cmpl
jne
push
push
push
call
jo
add
test
mov
xchg
lods
icebp
arpl
lret
pop
push
add
add
iret
add
mov
xchg
xchg
push
mov
les
cli
loope
imul
cmpsb
add
pop
add
jge
add
enter
loope
mov
add
add
add
stos
rolb
add
movsl
in
movl
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
xchg
in
jno
add
addb
add
add
add
add
add
mov
add
fildll
fcompl
adc
add
push
lea
inc
pop
mov
push
xor
pop
and
xor
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
jbe
mov
add
add
out
mov
lea
mov
jae
sarl
ret
mov
leave
enter
sub
pop
xor
add
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
roll
ljmp
in
fildl
scas
aam
add
ret
add
add
loopne
loope
push
add
add
repnz
je
mov
jno
add
add
fldcw
stos
add
mov
ror
add
add
add
push
in
jae
mov
lcall
dec
call
dec
lea
push
lea
push
push
call
stos
add
add
pushf
lret
pop
add
in
repnz
pop
add
push
cmpsb
stos
add
lahf
outsl
int3
push
testl
add
mov
add
cmpsb
addl
add
pop
add
add
fdivrs
in
pop
ja
add
sub
push
lea
push
push
push
push
push
call
pop
add
add
nop
call
out
flds
xchg
mov
add
add
add
jne
add
add
add
add
add
fcmovbe
add
cmpsl
add
add
add
add
add
add
add
in
call
add
push
push
call
in
add
add
add
in
cmpb
add
add
sti
jle
jnp
push
incb
push
stos
bound
lret
mov
cltd
out
imul
pusha
pop
add
add
fs
add
mov
in
clc
pop
sub
push
add
ror
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
mov
jae
xchg
add
loopne
insb
add
add
stos
add
les
add
add
lds
cmpsb
scas
les
sub
pop
pop
push
push
push
call
rolb
push
add
mov
loop
jecxz
mov
add
aam
roll
add
jo
add
push
xchg
add
add
shl
in
aam
xorb
add
in
jbe
ja
testl
in
hlt
pop
sub
cmp
jne
push
push
push
push
push
push
call
shrl
enter
insb
add
add
hlt
add
add
movb
flds
rclb
add
add
add
add
je
lods
in
jl
add
iret
movb
pop
mov
push
shr
sub
pop
lea
push
inc
sub
pop
sub
mov
push
push
push
push
push
push
push
push
lea
push
call
je
mov
add
adc
add
mov
lods
in
add
add
imul
fldt
add
fdivr
lcall
jmp
lock
out
jns
push
push
push
push
push
push
push
push
call
add
add
push
in
mov
jae
push
out
add
add
add
add
cltd
add
pop
filds
scas
sub
pop
add
sub
push
shr
shl
pop
pushl
push
push
push
push
push
push
call
add
rclb
add
out
xchg
add
out
fst
lock
shl
popa
jb
add
mov
add
cwtl
push
add
add
sti
add
pushf
push
fcoml
add
pop
add
add
push
add
xor
sub
pop
pop
shr
push
push
push
lea
push
push
push
lea
push
push
push
push
call
cld
sti
add
imul
add
cmc
add
pushf
bound
mov
loop
fildl
add
fildll
add
mov
lahf
add
lds
add
mov
test
mov
out
sub
pop
and
push
inc
pop
sub
push
push
push
lea
push
call
push
mov
add
mov
add
fnstsw
std
add
shl
jmp
clc
push
cwtl
mov
push
add
loopne
sub
pop
cmp
jne
leave
push
push
push
call
xorl
xchg
add
add
add
add
add
stos
xchg
mov
push
pusha
mov
std
call
add
jge
add
mov
add
add
test
lret
roll
cld
sub
pop
ret
push
sub
inc
pop
push
push
add
pop
mov
push
dec
ror
xor
add
pop
add
push
push
shr
dec
sub
pop
push
push
push
rol
dec
shl
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
lret
add
add
add
add
add
in
add
add
add
add
add
push
mov
incb
push
add
sub
pop
mov
push
pop
lea
sub
push
shr
shl
pop
mov
shr
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
mov
jl
lods
ret
nop
pushf
stos
jae
addb
jmp
sti
xchg
add
add
add
enter
add
add
mov
mov
aam
mov
add
push
in
add
jge
add
lcall
fimull
add
sub
pop
add
push
not
dec
pop
mov
add
push
push
push
lea
push
push
push
push
call
add
lahf
add
add
add
add
movsl
add
int
push
ljmp
add
add
push
lret
insb
lock
add
add
add
popf
add
sub
pop
xor
push
inc
xor
pop
mov
push
push
call
add
mov
jno
cmpsl
jne
mov
xchg
add
int
jmp
cli
popf
leave
jbe
in
stc
ret
fiaddl
flds
jmp
out
add
lds
rcr
xchg
add
popf
add
add
cwtl
mov
add
add
add
add
arpl
ljmp
add
lcall
loopne
push
sub
sub
ror
pop
rol
rol
push
xor
sub
sub
rol
pop
xor
inc
push
push
push
push
push
push
push
push
call
add
add
test
faddl
test
add
lds
add
fidivl
add
add
add
lea
add
rolb
fadds
ja
add
push
fcoml
test
roll
pop
cmpb
jne
push
dec
add
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
push
call
lds
push
add
jo
add
test
test
int3
add
pop
rolb
add
pusha
roll
out
imul
push
add
incb
pop
xchg
loopne
xchg
add
sub
pop
cmp
je
push
push
push
push
push
push
push
lea
push
call
mov
popf
mov
enter
push
xchg
out
mov
add
cli
std
add
scas
add
lods
add
scas
jge
push
popf
add
add
test
add
addl
in
loopne
add
cmpl
jne
push
ror
pop
xor
push
sub
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
gs
add
add
lods
in
add
add
add
add
xchg
mov
add
mov
add
cwtl
fwait
jle
fiadds
mov
pop
jmp
lcall
pop
push
inc
pop
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
in
add
lods
cmpsb
in
add
popf
gs
add
add
into
arpl
cmpsb
add
int3
add
pop
int
mov
out
outsl
fildl
xchg
addr16
add
add
add
xchg
sub
pop
leave
push
lea
push
lea
push
push
push
push
push
push
call
in
pop
jp
xchg
add
scas
push
je
mov
pop
xchg
mov
roll
mov
mov
mov
add
lds
scas
les
mov
stos
xchg
je
add
add
movsb
cli
pop
aam
rolb
jl
add
add
cwtl
mov
add
in
loopne
lcall
or
push
dec
lea
dec
shr
pop
mov
add
push
lea
shl
pop
mov
push
push
sub
pop
mulb
push
dec
dec
pop
pop
push
shl
pop
call
push
push
call
xchg
add
xlat
xchg
pushf
in
mov
rorb
add
cld
int
shlb
cwtl
lea
repnz
add
jns
lds
loope
add
jle
mov
add
add
insb
filds
jne
xchg
add
add
std
ja
fidivl
sarl
add
lds
in
clc
lcall
call
push
push
lea
push
call
lock
add
xchg
mov
push
cli
jmp
add
imul
add
mov
rolb
test
add
jmp
add
cmpsb
ja
add
jge
add
mov
fistpl
addb
add
add
hlt
movsb
int3
sub
pop
xor
push
push
push
push
lea
push
call
xchg
add
aad
add
pop
xorl
stos
add
add
jle
aad
add
lahf
add
mov
mov
add
fadds
pop
add
pop
fiadds
add
int
add
fcomi
mov
mov
hlt
scas
pop
sub
pop
pop
pop
push
inc
add
sub
shl
pop
pop
push
sub
not
pop
pop
push
push
call
jnp
mov
add
add
fwait
imul
jp
add
add
add
cld
cld
mov
pop
add
data16
xchg
add
pushf
js
mov
in
std
xchg
xchg
in
add
out
int3
add
pop
mov
sub
pop
pop
push
push
push
push
push
call
push
add
jge
add
xchg
add
push
jne
mov
testl
insb
faddp
testb
add
roll
jmp
scas
add
pusha
add
test
xchg
add
ret
in
in
lcall
push
add
pop
ret
push
push
push
push
call
add
add
add
insb
add
fcmovnbe
cwtl
mov
jo
gs
stos
xchg
jmp
fistl
add
ja
imul
xchg
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
jecxz
incb
push
push
add
push
add
add
jnp
add
out
cmpsl
loopne
bound
mov
jns
push
test
mov
add
xchg
add
lea
fsubrs
xchg
add
mov
scas
mov
in
lcall
in
add
push
dec
lea
pop
push
push
lea
push
call
cwtl
jbe
iret
push
xchg
add
push
repnz
mov
add
mov
mov
pop
cwtl
test
add
pop
add
add
mov
add
enter
roll
pop
add
push
int3
clc
mov
jbe
cmpsl
icebp
rolb
addl
add
add
add
sub
pop
push
push
add
add
pop
push
push
rol
dec
pop
push
mov
push
add
not
add
pop
push
push
pop
pop
lea
push
sub
pop
sub
mov
push
push
lea
push
push
push
call
bound
xchg
ljmp
cwtl
fwait
push
mov
add
ljmp
add
scas
add
std
add
cli
add
xchg
fmul
xlat
sub
pop
shr
push
lea
push
push
lea
push
push
lea
push
push
push
call
jns
add
enter
add
add
pop
arpl
cmpsl
mov
add
add
add
jnp
add
push
push
test
pushf
add
cld
add
add
ja
add
add
addl
fbstp
in
loopne
lcall
fimull
mov
fimull
jp
push
push
call
int3
mov
iret
add
add
add
add
mov
movsl
aam
arpl
mov
rolb
mov
add
rolb
add
stos
cld
nop
sti
pop
mov
fstpl
mov
fmulp
mov
lcall
fcos
jae
push
lea
push
lea
push
push
push
call
xchg
jmp
add
add
addr16
addl
add
add
std
jl
sub
pop
popl
push
shr
pop
mov
push
dec
pop
add
push
not
xor
shl
pop
xor
push
lea
push
push
push
push
push
call
imul
add
add
xchg
pop
mov
imulb
lahf
add
add
lods
add
add
add
jecxz
popa
jns
add
jae
xchg
rolb
pop
add
shrl
sti
add
cmpsb
add
add
adc
mov
push
add
rol
pop
add
xor
push
xor
pop
rol
nop
push
lea
pop
nop
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
add
jb
lea
mov
push
jnp
icebp
fcoms
int3
add
jno
movb
aad
mov
push
add
add
mov
add
push
mov
fnstsw
push
loopne
lcall
add
pop
nop
push
lea
add
pop
inc
push
xor
pop
nop
push
inc
sub
not
ror
pop
nop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
js
mov
jb
add
mov
rclb
add
add
add
in
mov
pusha
mov
add
jb
add
add
mov
scas
add
add
jl
jmp
xchg
rcrl
mul
add
add
stos
mov
les
shrb
sub
pop
cmpb
jne
push
not
pop
add
push
shl
lea
pop
nop
push
dec
shl
pop
nop
push
lea
push
lea
push
push
push
push
push
call
mov
out
mov
jmp
add
addl
xchg
add
jnp
les
ret
add
jge
stc
add
push
lods
rolb
add
add
add
jb
out
imul
loop
add
add
fcoml
add
add
out
add
movl
add
sub
pop
cmp
je
push
push
push
push
push
push
lea
push
push
call
pop
addb
mov
mov
lds
add
mov
nop
leave
add
xchg
hlt
pop
mov
fmulp
sub
pop
nop
push
pop
nop
inc
push
xor
pop
nop
push
xor
sub
pop
nop
push
push
push
push
push
lea
push
call
je
ret
mov
out
add
out
lods
loop
push
ja
xchg
add
fldl
lods
les
add
mov
fiadds
add
lcall
jne
jb
xor
push
push
push
push
push
push
lea
push
push
lea
push
call
insb
cld
mov
add
addr16
pop
jns
add
push
add
add
roll
xchg
add
int
pop
jl
jl
stc
add
add
ja
cmpsb
movsl
add
rolb
add
popf
add
cmp
xchg
enter
jbe
mov
push
mov
add
sub
pop
jmp
push
push
push
push
push
push
push
call
xlat
add
idivl
add
pop
add
cmc
add
add
add
ja
adc
stc
add
add
add
nop
test
add
add
add
add
fstps
imul
repnz
fwait
aad
in
in
lcall
push
and
push
push
call
pusha
cltd
xchg
jl
fcomps
mov
fcmovnbe
add
fucomi
ffreep
repnz
lods
add
add
add
add
add
add
mov
mul
outsl
add
jle
add
add
mov
roll
lcall
rorl
mov
jb
sub
sub
sub
pop
mov
push
push
call
addl
pop
add
mov
stos
add
add
jl
nop
push
out
out
mov
mov
add
add
testb
flds
add
lcall
mov
add
add
popa
popf
add
jno
add
add
add
lcall
rorl
out
or
add
add
loopne
jmp
mov
xchg
mov
hlt
xchg
jb
add
add
add
add
add
add
mov
add
movsl
add
mov
mov
lret
leave
enter
add
push
jl
add
ljmp
add
mov
ljmp
pop
xor
push
add
pop
xor
push
add
pop
shl
push
push
push
push
call
into
add
hlt
add
repnz
fucomp
fstpl
fldenv
mov
add
jmp
push
push
mov
add
add
mov
in
push
add
mov
clc
add
fistps
in
lock
xor
shl
push
sub
pop
xor
push
push
call
scas
add
flds
jbe
push
subb
add
hlt
add
xchg
pop
in
iret
lea
add
jmp
add
mov
add
jecxz
mov
repnz
lcall
loope
push
lea
push
push
push
push
lea
push
lea
push
push
call
stos
scas
mov
mov
mov
cmc
add
out
add
pop
jp
add
in
add
add
sti
mov
mov
add
add
mov
add
roll
add
jb
add
in
loopne
xor
push
lea
push
push
push
lea
push
push
push
call
sub
imul
mov
fcoms
aam
movb
movsb
add
sub
jno
les
add
test
lods
add
add
incb
ficoml
imull
in
xchg
add
lret
sub
pop
mov
push
xor
sub
dec
pop
add
push
add
shl
rol
shl
pop
pop
pop
push
not
rol
shr
pop
pop
push
inc
pop
pop
leave
push
push
push
push
push
push
push
call
out
add
jp
lods
lcall
mov
add
add
jae
mov
aad
add
add
test
rorb
lcallw
pop
pop
jno
jle
jb
xchg
fsts
push
sub
pop
ret
push
push
shr
pop
mov
push
push
push
push
lea
push
lea
push
call
xchg
jo
jl
push
add
pop
imul
out
add
mov
add
add
in
xchg
loopne
xchg
cmc
add
mov
add
add
add
add
out
add
hlt
sub
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
and
repnz
add
mov
push
add
imul
sti
fadds
jle
add
add
add
mov
fistpl
add
xchg
lds
in
jl
ficoml
roll
sub
pop
push
push
lea
push
push
push
push
push
push
call
add
lret
lcall
stos
scas
loop
mov
out
rcrl
icebp
push
xchg
add
push
cmpsl
add
mov
add
push
mov
jmp
aam
idivb
jmp
add
xchg
mov
pusha
xchg
out
add
add
rolb
sub
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
cmpsl
push
lds
add
ret
lds
xchg
add
or
scas
stos
fdivs
in
imul
add
movsl
popf
pushf
gs
pop
jo
enter
mov
and
rorb
add
fistl
pop
sti
add
out
sub
pop
push
push
pop
mov
push
rol
xor
shl
add
pop
mov
mov
push
shl
add
not
pop
test
je
push
push
lea
push
push
call
add
add
mov
add
add
jnp
fwait
loope
add
add
add
pop
mov
add
mov
lods
jno
mov
add
ficomps
add
add
add
arpl
cmpsb
add
addb
add
add
push
push
push
call
jo
pop
xchg
int3
add
movl
leave
cwtl
aad
add
mov
add
ja
int
add
add
pop
roll
push
fistpll
hlt
lcall
testl
call
mov
push
jbe
push
add
mov
add
sti
jno
loop
test
jae
add
loopne
add
add
add
lods
add
mov
mov
mov
add
add
add
jne
out
in
xchg
add
jecxz
in
clc
pop
mov
inc
push
ror
add
not
pop
cmp
je
test
je
push
push
push
lea
push
lea
push
call
scas
add
cltd
lock
shrl
mov
stos
ret
jle
pop
cltd
add
sti
add
add
add
add
pop
mov
add
cltd
loopne
jecxz
add
cld
push
bound
pop
pop
sub
pop
mov
push
sub
add
pop
inc
cmp
je
push
sub
inc
pop
test
jne
push
shr
sub
ror
pop
xor
push
push
lea
push
push
push
call
add
add
add
test
add
testb
mov
into
mov
jle
add
enter
mov
jo
add
out
add
lahf
add
push
mov
pop
add
jnp
sub
pop
pop
pop
push
push
push
call
add
roll
add
add
add
popf
add
pusha
int3
pop
add
pop
add
push
icebp
sar
pop
loop
add
mov
gs
xchg
jp
add
enter
leave
out
mov
add
push
add
shr
in
hlt
pop
pop
pop
push
lea
push
lea
push
push
lea
push
push
push
call
out
add
incb
add
add
les
addb
mov
xchg
add
jle
add
add
mov
mov
add
add
call
test
add
scas
add
arpl
aam
sarb
cmpsb
add
movsb
mov
add
push
movl
in
lcall
ret
push
inc
sub
add
pop
mov
inc
push
pop
cmp
jne
push
push
call
add
add
add
out
add
cli
icebp
mov
lods
add
data16
add
mov
push
mov
push
push
into
fdivrs
rolb
add
mov
add
fsubrl
mov
add
cltd
mov
jns
insb
jno
xchg
test
lcall
test
in
clc
pop
lea
push
lea
push
call
push
mov
test
rolb
jmp
add
rcrl
hlt
add
add
roll
test
mov
fildl
add
push
add
add
add
scas
nop
mov
jge
add
mov
clc
pop
mov
test
je
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
sti
add
add
cltd
test
out
add
pop
fucomi
add
add
jo
add
add
add
je
mov
xchg
add
pop
add
add
pop
in
add
pop
push
add
scas
add
add
icebp
icebp
pushf
nop
xchg
in
scas
mov
scas
int
stos
adcb
cmpb
sti
add
scas
jbe
sub
pop
mov
push
lea
push
push
call
stos
subl
jmp
scas
lods
int
xchg
imul
js
add
add
cwtl
add
ljmp
mov
add
add
scas
stos
fiaddl
add
rolb
add
add
ret
jno
push
addl
add
test
hlt
lcall
movb
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
call
add
shr
lods
clc
add
adcb
testl
add
push
fwait
movsb
mov
ficoms
std
incb
add
add
push
gs
mov
roll
filds
sub
pop
cmp
jne
mov
push
sub
pop
test
je
push
not
pop
mov
add
push
sub
lea
pop
cmp
je
push
sub
pop
jmp
xor
push
push
push
lea
push
call
sahf
add
add
push
pusha
add
fisttps
lods
add
lods
add
xlat
in
mov
add
pushf
add
add
push
cmc
out
fs
std
aam
scas
add
jno
movb
les
stos
add
sub
pop
pop
push
shr
pop
pop
push
push
push
call
add
add
js
add
jb
jge
lods
mov
add
jo
roll
xchg
jecxz
add
fdiv
popa
add
mov
lcall
pop
push
not
pop
leave
ret
push
push
push
push
push
push
lea
push
lea
push
call
push
jecxz
add
faddl
add
hlt
int
js
int
bound
add
push
add
imul
pusha
mov
popf
add
sar
incb
mov
pop
add
lcall
inc
lcall
lea
push
lea
push
call
add
add
fiaddl
add
add
mov
mov
add
test
xchg
cmpsb
jmp
popl
add
in
add
pop
add
hlt
pop
pop
push
dec
pop
pop
push
lea
push
push
call
xchg
test
add
int
test
leave
add
test
mov
out
insb
loope
mov
loopne
int3
loope
in
hlt
lcall
leave
push
push
lea
push
lea
push
call
sbbl
jnp
add
add
xchg
out
test
test
shlb
add
add
outsl
enter
pop
mov
fiadds
iret
jge
icebp
add
test
mov
mov
jmp
jb
cmpsl
add
add
lock
lcall
or
push
lea
push
lea
push
push
lea
push
push
call
add
popl
fiaddl
add
jle
add
mul
mov
rolb
push
lock
add
push
add
arpl
add
pop
pop
mov
lcall
push
push
push
push
call
xchg
leave
lock
addl
xchg
mov
mov
add
rcr
add
movsl
add
jno
idivl
add
lahf
mov
xchg
les
out
add
add
in
lock
pop
push
push
push
push
lea
push
call
lds
add
jle
add
in
add
enter
jp
in
jo
jle
pop
add
add
push
mov
add
add
add
push
add
jo
add
add
ljmp
int
sub
pop
pop
push
lea
push
push
push
push
call
add
mov
movsl
add
xor
add
add
add
mov
add
mov
add
add
add
mov
mov
push
add
pop
pop
push
not
add
pop
pop
push
sub
pop
leave
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
mov
add
lahf
mov
jecxz
add
add
mov
add
rcl
mov
push
mov
movsb
cltd
pop
sub
pop
ret
cmp
mov
xor
mov
mov
mov
icebp
into
mov
ror
mov
mov
lret
std
lret
xchg
lret
or
pop
push
enter
add
mov
dec
scas
shrl
dec
jns
xor
in
xchg
jmp
jmp
inc
lcall
gs
movsb
dec
lods
push
push
jne
inc
mov
push
or
and
push
mov
cmp
mov
inc
jecxz
sahf
cmp
inc
int
psubsw
add
jg
push
push
cmpl
imul
fwait
hlt
outsb
pop
jg
dec
jmp
cmp
fucomip
xor
add
cltd
out
aad
mov
stos
and
sarl
imul
scas
xchg
pop
dec
fs
fadds
mov
int
push
sti
popa
and
or
std
negl
cs
sbb
cmp
popf
adc
push
mov
sub
mov
sbb
or
or
cmp
pusha
bound
stos
aaa
divl
push
push
adc
mov
adc
enter
mov
imul
xchg
lahf
pop
pop
dec
pushf
cmp
repz
xor
push
xlat
mov
dec
pop
fsubrl
or
enter
je
lods
jle
push
daa
xor
dec
data16
sbb
imul
loop
imul
cmp
mov
psrlw
clc
xchg
mov
add
xchg
sub
aam
dec
mov
fnstenv
xchg
cmp
jg
add
cmp
shrl
pop
dec
push
stc
xchg
inc
lds
fcompl
xor
insb
mov
out
and
cmpsl
cmpl
imul
xlat
fiaddl
cli
insb
fisttps
pop
popf
mov
in
aaa
adc
and
pop
xchg
jmp
nop
jno
jl
lods
fstpl
or
js
shl
sbb
mov
pop
rcrl
sbb
sbb
inc
cmp
shlb
add
xchg
cltd
std
mov
insb
lods
mov
mov
in
and
ja
into
or
add
sub
xor
xchg
iret
stc
xor
in
xor
jns
jne
mov
pop
test
inc
or
mov
add
lods
push
and
xchg
and
dec
mov
push
mov
psubusw
pop
mov
rolb
cmp
jle
lods
mov
outsb
int
jmp
push
or
pushf
and
in
and
popa
lret
pop
rorl
dec
xchg
ret
shrl
pop
cmp
mov
int
decl
popa
pop
mov
sbb
fmull
or
push
scas
loopne
aad
loop
inc
in
dec
and
repz
jb,pt
out
inc
repnz
in
adc
shlb
jmp
mov
jne
dec
fs
ret
jecxz
stos
or
pop
push
mov
sbb
in
stos
es
inc
add
push
jnp
jns
clc
data16
fsubrl
lcall
stc
cmp
mov
push
fcmovbe
push
add
xchg
mov
cli
loopne
pop
int3
repz
inc
imul
jbe
loope
mov
xor
add
jno
imul
fwait
in
int3
xchg
aaa
scas
stos
out
xlat
mov
repnz
sti
out
xor
into
mov
shlb
xor
cmc
enter
adc
mov
sub
push
push
add
adcb
mov
stos
mov
mov
fdivl
or
mov
out
nop
cmp
mov
or
pop
jnp
fstps
movsb
and
push
xchg
rcl
push
lods
inc
into
mov
jmp
xchg
pushf
fs
push
mov
test
repz
outsl
mov
stos
xchg
stos
mov
pop
jns
jno
mov
xor
and
xchg
dec
jno
xor
dec
mov
ficoms
subb
xlat
sub
jmp
test
out
stc
and
xor
and
aad
or
hlt
inc
adcb
loop
lret
sub
fimull
pop
mov
jae
cmpsb
into
inc
daa
cmp
test
or
jle
add
dec
repnz
jge
fisttps
call
into
add
mov
stc
fisttpll
push
pop
stos
cmpsb
jno
sbb
add
jno
add
push
aaa
fwait
lea
pushf
lahf
xchg
repnz
dec
mov
shld
mov
imul
in
mov
loop
outsb
loopne
dec
jns
dec
inc
repz
dec
push
mov
cltd
faddp
repnz
inc
mov
add
mov
dec
rclb
dec
xchg
add
xchg
jecxz
sub
imul
insl
shll
rcll
dec
jne
fsubrp
shlb
js
jae
cmp
push
dec
cmp
test
cmpl
aaa
mov
pop
inc
and
sbb
mov
nop
pop
outsb
outsl
pop
cmpsl
mov
outsb
loope
xor
jmp
jle,pt
fiaddl
mov
enter
inc
dec
dec
or
inc
sub
test
mov
out
or
clc
xchg
jecxz
sbb
outsb
add
pop
bound
sbb
fadds
and
push
repnz
mov
jae
pop
inc
or
inc
xor
cmp
test
iret
push
jmp
xlat
xor
jb
xor
push
xchg
pop
cli
dec
mov
sub
fisttps
and
jbe
jno
mov
imul
jp
in
and
push
outsl
mov
aam
fcoml
sbb
cli
inc
xor
pop
jnp
mov
mov
or
stos
lahf
cmp
cmp
fimull
fldcw
imul
sbb
addb
xor
sub
xchg
adcb
cmpsb
gs
cmp
sbbl
popf
cmpsl
stos
xchg
mov
add
outsl
pop
fstl
fimuls
and
adc
les
mov
inc
add
push
push
pop
inc
mov
into
jo
cmp
mov
popf
xchg
and
jo
dec
lahf
mov
mov
or
pop
loopne
scas
dec
pop
scas
or
push
mov
push
in
ficoms
inc
add
push
jmp
pusha
or
sbb
inc
data16
push
pop
mov
sahf
call
xor
aaa
aam
lods
stos
adc
ss
mov
sub
xorb
lahf
lahf
pop
scas
pop
xor
jo
add
pop
mov
out
into
pop
cmc
mov
aas
mov
neg
xor
sti
lahf
jmp
add
addr16
lret
fsts
pop
cmpsb
xchg
inc
test
jns
divb
sbb
insl
call
mov
push
rcrl
ss
outsb
sub
xor
frstor
dec
int
imul
jnp
pop
or
mov
pusha
scas
int3
mov
sub
cmp
and
sub
stos
inc
jecxz
in
xorb
and
sbb
movsl
add
push
or
adc
rep
and
pushf
xchg
cmp
push
mov
xor
cmp
data16
xchg
jp
out
addr16
and
dec
decl
int3
jo
xchg
gs
shll
int3
cmp
and
jge
loop
and
into
dec
je
push
adc
pop
or
jmp
lret
or
and
ja
js
dec
cmc
and
push
push
cltd
loope
xchg
and
cli
js
xchg
push
faddp
lret
mov
leave
and
mov
push
in
push
scas
pop
pop
js
dec
sti
jns
jl
nop
pop
lret
sbb
xchg
inc
addr16
push
addr16
lret
xlat
sbb
xorb
mov
rclb
pop
loope
popa
mov
iret
xor
mov
add
mov
xor
cmp
outsb
mov
inc
imul
xor
imul
dec
gs
int
inc
mov
or
in
call
or
insb
fstpt
gs
inc
or
inc
testb
fisubl
shr
jb
shlb
push
iret
fs
dec
jns
pop
add
sti
lods
cs
or
adc
movsb
in
lds
out
nop
test
aad
cs
xchg
push
pop
lods
or
clc
and
adc
js
rol
loope
aad
inc
jle
push
mov
mov
subb
xchg
mov
pop
out
push
sbb
add
ljmp
mov
in
cmp
lahf
xor
mov
into
cmp
int
scas
inc
mov
scas
clc
or
mov
cmp
adc
xor
push
dec
fnstenv
gs
mov
xor
push
add
inc
insb
mov
lock
ffreep
aas
addb
or
add
push
stc
aad
call
adc
mov
rol
jae
xchg
call
gs
loop
rcll
mov
mov
and
int3
mov
std
add
testl
pop
and
mov
and
inc
test
ret
arpl
out
outsb
je
rclb
pop
jle
and
inc
mov
addl
jns
and
mov
mov
dec
sub
mov
dec
jl
out
jge
adc
or
push
enter
test
cltd
in
adc
sub
arpl
xchg
notl
mov
fistps
push
adc
and
test
rorl
andb
je
cmp
pop
adc
pop
xchg
sub
ret
push
adc
popa
add
ret
int
lret
jo
jge
fistpll
cmp
shrl
daa
xor
leave
add
or
ret
sub
fisubs
es
mov
mov
insw
push
cmp
test
ljmp
cmp
ja
ret
ret
sbb
jne
xchg
jb
int3
ror
or
fadds
mov
mov
sub
in
inc
pushf
xor
test
adc
das
js
sub
jl
rcrl
mov
mov
add
mov
sahf
ja
and
cmp
lahf
and
sbb
scas
sbb
imul
mov
lods
jmp
cltd
mov
shlb
add
pop
stc
push
and
int
jae
push
sbb
dec
pop
pop
xchg
hlt
mov
and
popf
sbb
dec
mov
icebp
shrb
push
cs
addr16
push
jge
jnp
sbb
mov
dec
lahf
fwait
push
cltd
mov
ret
mov
inc
aaa
leave
je
sbb
pop
jbe
cmp
lret
dec
mov
pop
or
fisubl
mov
or
jbe
mov
cld
in
lahf
sbb
adc
xor
in
arpl
pusha
out
js
xchg
dec
xor
iret
js
push
push
mov
sbbl
bnd
sbb
add
adc
iret
jge
sahf
orl
pushf
cli
jo
out
jg
dec
xlat
mov
clc
test
mov
movsl
cmp
jo
and
and
cmpsl
lahf
lds
jecxz
sarl
mov
inc
pop
inc
inc
in
cltd
mov
adc
test
daa
aas
add
or
dec
xlat
shrb
imul
rclb
dec
push
sbb
xor
stc
jb
push
xchg
loop
fs
fnstcw
mov
inc
les
mov
mov
movsl
pop
xor
cmpsb
push
sub
jns
cwtl
adc
pop
adc
or
mov
jb
mov
inc
call
add
adc
and
cli
lret
cmp
push
movsl
aas
gs
sbb
push
stc
std
jne
jle
in
or
sbb
cmp
inc
mov
mov
stc
movsb
inc
cmp
shll
cmp
adc
std
aam
or
pop
test
cmp
test
mov
int
shrl
data16
add
push
push
fsubs
push
insl
aaa
lock
sti
add
cs
cmc
mov
jo,pn
inc
ss
lahf
push
push
mov
enter
fs
out
cmp
cmp
ja
popf
sbb
loope
lahf
aad
fs
shll
pop
repz
es
jne
add
cmp
scas
popf
xor
sbb
test
pop
ret
inc
xlat
popf
xchg
enter
sub
xchg
lahf
repnz
lcall
inc
imul
insl
int3
mov
push
mov
mov
rcrb
push
fistps
jp
jns
pop
sbb
ret
jnp
jle
xor
in
mov
inc
push
pop
push
pop
mov
and
cmp
pop
push
jns
outsb
inc
cmp
test
sub
lret
testb
scas
ret
test
insb
push
push
out
jl
inc
inc
jne
in
inc
push
dec
push
ret
jb
ja
push
mov
dec
dec
out
aad
lret
out
in
pop
and
ds
mov
xchg
lds
mov
cld
in
inc
mov
dec
fdiv
cwtl
cmpsl
or
push
adc
nop
ljmp
adc
lock
lods
fisttpll
cli
xlat
aad
cld
sub
mov
dec
incb
fbstp
cltd
rcr
mov
in
xlat
mov
cmp
out
cwtl
fwait
mov
pop
je
and
jo
mov
cmpsl
out
cmp
sub
cmpsl
cmpsl
das
test
or
ds
mov
xchg
mov
andl
mov
pop
icebp
xchg
pushf
pop
inc
dec
mov
addl
sbb
and
adc
push
fistpl
pop
fsubs
pop
xlat
ds
aad
gs
std
adc
insb
mov
test
stos
mov
xchg
mov
imul
lods
or
sti
ljmp
dec
cmpsl
ds
stos
pop
inc
ret
ds
mov
out
xchg
pop
jl
loope
adc
repz
sub
jnp
hlt
inc
punpckhwd
lcall
dec
loop
cmp
fidivs
std
popl
push
ss
pushf
xchg
ja
xlat
nop
or
add
xor
int3
sbb
mov
mov
fsubr
jg
xchg
mov
push
xchg
mov
aas
fstp
mov
shrl
xor
inc
jnp
dec
mov
fcoms
sbb
imul
jb
popf
jns
imul
sub
xchg
push
pop
fs
inc
inc
addr16
outsb
pop
push
lahf
push
loope
inc
cmp
outsb
mov
push
out
shll
fdivl
out
cmp
xchg
aas
jns
orl
fs
pop
in
ljmp
fidivl
cmp
sub
icebp
sub
add
cmpsl
mov
add
pop
stos
mov
divb
jle
sub
pop
xchg
dec
jge
fldt
xor
jle
inc
pop
push
mov
vmread
or
xor
rep
loopne
mov
xor
pop
out
cltd
ja
cld
jecxz
mov
pop
jmp
mulb
mov
popf
jp
and
cmpsl
rcrl
repz
mov
or
mov
adc
out
dec
into
shll
enter
mov
dec
xchg
sbb
cmp
dec
add
jb
pop
push
in
or
add
dec
mov
jle
je
cmpsb
test
jl
bound
loopne
loop
pop
cmp
rcrl
in
int3
sbb
jne
pop
add
sub
insb
into
dec
ljmp
jno
cmpsb
fdivrs
adc
push
popa
dec
cmc
sub
pushf
roll
arpl
mov
push
add
out
mov
cmp
cmp
push
sti
jle
cmp
in
dec
mov
or
xchg
das
test
movsl
stc
sbb
std
lock
into
mov
or
movsb
adc
push
adc
aam
out
outsb
daa
lods
mov
lock
cmp
push
sub
aam
jmp
nop
mov
or
sbb
pop
inc
and
push
pop
in
xchg
jne
adc
pop
pop
lock
sbb
mov
aam
mov
xchg
jb
cmp
loope
lock
movsb
cmpsb
add
push
xchg
mov
adc
cmp
clc
leave
hlt
xchg
push
js
xor
push
and
lea
out
icebp
jno
sarb
or
in
mov
cltd
inc
sahf
scas
ret
xor
cmpsl
adc
jmp
jmp
xchg
adc
inc
push
andl
cli
inc
cwtl
lods
das
push
aas
in
jns
mov
sub
lcall
mov
shll
cmpsb
fsubl
rcrl
in
pop
mov
adc
pop
sub
dec
fldenv
inc
loope
sahf
xchg
movsl
push
mov
data16
sbb
rcr
xor
mov
je
daa
leave
repnz
sbb
jle
jns
xlat
std
lret
es
xchg
fists
repnz
cs
mov
mov
sub
testl
xchg
sbb
dec
aam
mov
jmp
ret
dec
mov
add
mov
or
ljmp
je
insl
sub
pop
push
popl
xor
fs
or
pop
dec
inc
mov
fwait
out
mov
ret
ss
mov
shrb
stos
outsb
ret
cmp
push
mov
mov
pusha
push
in
es
lods
mov
adc
fnstenv
cmc
addb
or
mov
cs
shll
repz
ds
jae
je
mov
mov
pop
cmp
xchg
sti
push
mov
insb
mov
xor
mov
push
fcompl
ljmp
mov
test
jl
ss
sbbl
nop
icebp
out
mov
imul
adc
repnz
mov
push
push
add
test
mov
fwait
dec
mov
lret
jg
movsb
sbb
in
xor
lods
je
xchg
movsl
pusha
and
sub
fildl
jmp
mov
sub
mov
jmp
popf
fidivrs
jmp
jae
xchg
push
xlat
jbe
xlat
or
loop
or
iret
fcomps
or
mov
je
test
es
mov
sub
pop
or
rolb
shlb
mov
sub
adc
in
notl
jle
stc
repz
xchg
cltd
outsb
add
ret
imul
sahf
movsb
clc
inc
and
xor
sub
sub
out
sub
dec
test
xchg
or
adc
jmp
xor
daa
mov
xlat
push
mov
sub
loope
push
je
stc
xchg
xchg
or
push
jnp
lret
jle
test
mov
pop
jnp
mov
mov
dec
mov
jmp
mov
pop
jp
inc
cltd
push
jp
cmp
xchg
call
leave
stos
cmp
stos
mov
pop
xchg
xchg
int
clc
aaa
sub
lcall
cmp
inc
ret
test
xchg
mov
lds
out
mov
mov
push
jno
rcrl
sti
je
js
fcoml
jbe
pop
out
fimull
jns
xchg
in
or
jle
je
push
add
dec
or
fimuls
loope
iret
push
fdivr
mov
addr16
aas
pop
sbb
test
es
inc
ror
adc
mov
ja
sahf
jge
jno
or
adc
push
mov
pop
insb
addr16
fnstsw
bound
lcall
or
push
jmp
pop
jle
insl
mov
sub
lret
daa
push
jge
enter
test
mov
adc
push
cmp
dec
ljmp
jl
lock
mov
mov
stos
pop
mov
add
mov
cmpsl
xor
rcll
or
leave
pop
fdivrp
lds
inc
in
cld
or
and
push
xchg
js
jge
flds
sbb
add
push
add
adc
pushf
mov
and
xchg
or
lret
imul
loopne
arpl
mov
into
mov
mov
pop
fimuls
data16
push
cmp
fstp
mov
push
dec
movsb
jo
mov
mov
stc
and
push
out
fptan
jecxz
fdivrl
inc
in
xchg
jbe
push
xor
add
lea
cmpb
cli
push
cltd
mov
sbb
sub
inc
scas
mov
mov
xchg
sbb
clc
push
push
jg
inc
in
iret
xchg
or
or
xchg
sub
or
in
aas
jl
jb
fwait
adc
jle
mov
sti
test
lret
xchg
pop
xchg
adc
push
sub
adc
pop
push
stos
push
push
sbb
jne
outsl
int3
mov
pop
arpl
push
out
inc
pop
sub
or
insb
sbb
adc
push
mov
pop
pop
dec
nop
inc
add
in
xchg
cmp
mov
push
mov
das
stos
mov
jg
lret
push
data16
mov
mov
pop
adc
imull
add
add
addr16
leave
movsb
mov
sahf
call
sub
sub
push
push
dec
push
stc
fsubrs
mov
push
loop
inc
in
jp
inc
lods
fs
cmpsb
jns
jmp
xchg
xchg
js
xchg
scas
cmp
and
fbld
push
mov
sub
jns
cmp
loop
jne
sbb
mov
sub
es
sbb
adc
mov
inc
push
fisttpl
mov
add
divb
jge
mov
cmp
push
lds
rep
jns
outsl
int
insl
loop
inc
das
test
mov
mov
repz
and
mov
xor
add
mov
test
add
push
dec
js
stc
lods
jb
cmp
in
adc
testb
mov
shrb
jle
fwait
lret
loope
int
inc
orl
mov
lods
fadds
mov
repz
rorb
mov
jle
cmp
jecxz
popa
xchg
lock
enter
dec
xor
xlat
xchg
mov
xor
and
push
es
aaa
sbb
ficoms
sbb
mov
les
jle
les
mov
loop
pop
pop
sbb
and
call
pop
jge
mov
je
imul
cmp
popa
dec
jg
push
cmpsb
pop
jle
test
loop
popa
int
rcll
sti
sub
inc
or
cmp
fcomp
jb
stc
cmc
shl
cmp
push
mov
mov
mov
popa
sahf
out
or
sub
dec
xor
add
xor
shl
push
sahf
iret
adc
leave
adc
pop
arpl
int
jne
repnz
out
xchg
pushl
jl
cmpsl
test
sbb
cmpb
lods
xchg
xchg
pushf
lods
push
lahf
or
cmp
stc
cwtl
addl
repz
sti
jge
cltd
mov
sbb
jbe
lods
fs
pop
adc
inc
aam
fwait
rcrl
pop
jo
pop
mov
fucomp
xor
jo
xor
les
rcrb
push
out
inc
roll
cltd
adc
scas
pop
imul
push
jne
addl
cmp
add
jo
sub
call
cmp
sub
fcomps
mov
mov
and
adc
mov
push
xchg
icebp
sti
ficomps
mov
mov
adcl
fsubrl
mov
nop
add
lods
xor
xchg
mov
in
fs
rorl
sub
xchg
je
repz
pop
push
std
jns
push
popf
lcall
cmc
into
adc
pop
push
or
repnz
into
out
fwait
mov
inc
pop
xchg
adc
bound
push
jbe
mov
adc
loop
inc
mov
xchg
pop
test
mov
sbb
xchg
push
pop
xlat
and
mov
mov
test
jbe
fsts
cmp
sti
out
jns
add
mov
fldenv
add
xchg
mov
and
cld
fimull
lret
and
test
lods
pop
adc
sarl
ljmp
cld
hlt
cmpsl
rolb
inc
pop
insb
stc
popf
std
inc
mov
scas
push
jle
sub
das
jp
orl
dec
pop
arpl
cmp
cmpsl
ror
push
inc
jmp
pop
cmc
jae
sbb
lcall
xchg
pop
cmpsb
lds
mov
jo
hlt
pop
sub
lcall
icebp
inc
shlb
lock
jl,pn
mov
clc
mov
out
outsl
stos
push
mov
mov
ds
jbe
insb
inc
and
add
cmp
out
out
aam
out
and
add
fistpll
cld
test
in
pop
das
cwtl
lahf
movsb
mov
std
mov
mulb
mov
jle
sbb
sbb
sahf
pop
sub
rclb
ljmp
push
scas
xchg
stc
fwait
ljmp
arpl
jne
or
jno
inc
sub
ret
and
or
push
outsl
loope
mov
inc
sbb
xchg
inc
jl
mov
out
imul
sahf
sub
sbb
imul
sub
addr16
test
or
aam
loope
popl
frstor
sbbb
lahf
xchg
xor
xor
push
xchg
scas
inc
cli
cli
lret
adc
ret
mov
jno
stos
jecxz
or
orl
dec
fildl
imul
bound
rcrb
and
add
sbb
sbb
dec
xchg
mov
lods
fwait
mov
mov
lret
adc
add
ss
adc
xlat
jns
adc
dec
add
mov
cmpsb
cltd
jge
push
invd
jle
or
bnd
adc
adc
inc
jmp
adc
popa
xchg
scas
aaa
push
add
xor
test
stc
repnz
std
and
cmp
sub
xchg
jmp
shrb
arpl
jo
inc
call
scas
shrl
das
scas
les
fmull
xor
rcr
hlt
cmc
std
jbe
repz
fsubrs
inc
scas
mov
cs
xor
sub
sbb
jp
aaa
jnp
sub
add
xchg
fmuls
cmpsb
or
xchg
inc
cmp
imul
das
dec
aam
fsubrs
leave
or
xchg
and
jne
dec
xchg
enter
clc
ds
ret
popa
sub
jo
and
mov
jbe
mov
jbe
jb
sahf
cmp
cmpsl
jecxz
sub
mov
arpl
xor
push
sbb
xchg
fdivp
xchg
push
pop
mov
lcall
and
inc
jnp
xchg
and
jne
adc
ss
out
inc
mulb
int3
mov
sahf
adc
inc
fldcw
outsl
int3
cltd
adc
dec
stos
push
fwait
push
or
data16
adc
jecxz
cltd
call
mov
push
jo
in
nop
pop
ljmp
arpl
push
into
in
inc
jne
pop
scas
mov
shl
xchg
mov
mov
pusha
ja
push
dec
xchg
mov
inc
insb
jmp
mov
mov
sbb
xchg
jns
movsl
hlt
pop
mov
mulb
roll
cmp
or
jbe
cmpsb
movsl
mov
sbb
int
sti
fmuls
rcll
jg
ja
push
adc
dec
xor
sbb
je
aaa
movsb
test
pop
sbb
dec
cmp
pop
pop
aas
or
cmpb
daa
adc
mov
cmc
dec
outsb
xchg
mov
inc
sub
ds
mov
pop
bound
push
dec
clc
xor
outsl
and
xor
mov
push
pop
stos
mov
fwait
out
fsubrs
jecxz
add
movsb
mov
xor
xchg
ficompl
je
ds
add
sahf
repz
pop
in
fnstcw
sub
aas
gs
imul
xchg
push
cmp
adc
xor
jg
mov
and
rorl
decb
jae
mov
and
loop
xchg
rorb
repz
imul
add
cmp
pop
hlt
je
nop
xchg
cmp
test
mov
mov
addr16
addb
std
mov
in
mov
adc
xor
int3
adc
push
jns
and
psraw
mov
xchg
icebp
in
sub
test
jmp
xchg
jns
or
lret
inc
or
or
mov
bound
int3
mov
sysret
call
jo
dec
push
mov
push
sbb
lock
mov
dec
dec
sub
in
adc
cli
mov
ja
push
jge
sub
inc
adc
sub
adc
pop
loope
out
push
in
cmp
loop
fs
movsb
cmpsb
inc
add
fnstcw
xchg
data16
shr
ds
and
cld
mov
addb
push
inc
jmp
add
add
cmp
mov
sahf
push
jmp
mov
jge
inc
aas
incl
frstor
ss
xchg
rcrb
gs
adc
aas
xchg
dec
scas
adc
and
insl
and
movsl
call
push
aam
fcmovb
pop
mov
mov
mov
sarl
inc
push
inc
cltd
outsl
aad
sar
popa
leave
fimull
xchg
add
lock
aad
pop
sahf
pop
adc
mov
aad
push
cmpsb
adc
rolb
xor
sahf
test
push
add
and
test
pop
outsl
sbb
mov
dec
insl
outsl
or
test
dec
jecxz
nop
xor
jnp
fistpl
cmp
rcll
xchg
inc
in
mov
aad
test
fwait
imul
pushl
aaa
loopne
enter
aad
dec
jge
aaa
xchg
sbb
cmp
jnp
jecxz
sbb
push
loope
lret
test
loop
push
push
mov
xor
inc
pop
inc
pop
movsl
movsl
stos
sub
es
mov
adc
sbbl
pop
lock
add
scas
mov
gs
mov
cmpsb
lret
mov
sbb
gs
es
int
in
pushf
xchg
std
in
cmp
negb
lds
ss
sbb
jns
dec
lret
pushf
test
movsl
and
jbe
out
dec
pop
popf
enter
mov
push
adcl
dec
shl
inc
xchg
inc
adcl
addb
movl
cmc
cmp
lea
mov
scas
adc
push
int
inc
addr16
aaa
jg
test
and
ljmp
ret
gs
in
mov
xchg
cmp
divl
out
xchg
cld
iret
std
jne
in
das
test
dec
stc
bnd
mov
or
sub
iret
scas
cmp
loop
mov
inc
andb
inc
loop
inc
and
enter
push
nop
clc
pop
cltd
fidivrs
fstps
into
es
lahf
sub
gs
ror
test
das
xor
paddusw
mov
add
fcmovnb
lahf
dec
mov
cmp
sbb
pop
add
aaa
push
jmp
repnz
arpl
mov
inc
dec
jb
lret
lods
xchg
andb
popf
imul
mov
mov
jo
arpl
lahf
imul
mov
push
or
xchg
mov
mov
cmc
mov
imul
mov
adc
cmp
shrb
test
push
jo
outsl
mov
daa
sub
inc
mov
mov
dec
and
add
ljmpw
dec
mov
dec
mov
fisttps
outsb
cs
adc
test
mov
sarb
daa
ljmp
push
enter
lahf
dec
aad
jmp
mov
lahf
jbe
add
dec
jge
std
xor
shrl
or
loop
ret
cmp
xlat
insl
sbb
jmp
jbe
xor
or
or
out
push
f2xm1
push
sub
lds
mov
fdivl
adc
subl
xchg
push
mov
mov
jnp
imul
push
enter
push
icebp
dec
jae,pt
lock
into
sti
gs
test
mov
mov
dec
mov
lods
adc
cmp
icebp
push
cli
sbb
and
and
push
pop
inc
aam
ds
pop
mov
test
dec
xor
mov
inc
and
push
ret
jl
daa
xchg
mov
and
inc
fs
enter
shr
mov
sub
xchg
addr16
lret
pop
sub
daa
xchg
xor
fmuls
loope
cmp
push
cmp
test
andb
pop
lods
hlt
push
mov
outsb
mov
stc
lods
fisttpll
fmuls
mov
jno
cmp
andb
aaa
mov
daa
outsb
cltd
daa
jl
sbb
out
or
cmp
pop
pop
xorb
es
dec
insb
xlat
cmp
add
or
push
cmc
fisubl
fucomi
gs
cmpsb
es
movsl
inc
stos
lcall
adc
mov
popf
and
dec
je
xor
pop
mov
stc
scas
lret
sti
mov
and
sbb
mov
cwtl
rdtsc
dec
in
mulb
sbbl
out
aam
jb
mov
aaa
mov
push
stos
test
and
enter
movsl
hlt
rcrb
mov
pop
cmpsl
imul
push
push
rcr
xor
mov
mov
mov
pop
push
cmp
mov
ja
faddl
and
add
push
fwait
xor
lock
pop
arpl
sub
mull
inc
ret
out
pushf
data16
mov
repnz
xchg
mov
pusha
jge
pop
adc
pop
imul
mov
pop
cmp
xor
packsswb
mov
fsubl
imul
mov
push
fdivrs
cmp
pop
stc
sbb
clc
movsl
ret
scas
add
sbb
cltd
dec
mov
adc
fisttpl
inc
data16
jle
fdiv
int
inc
fs
pusha
jecxz
jbe
and
arpl
mov
push
call
fidivrs
sub
jmp
cli
xor
jmp
lods
and
push
outsb
and
xchg
lds
sbb
insl
outsl
das
pop
int
pop
pop
leave
test
push
jl
in
filds
lds
xchg
dec
and
adc
xor
push
inc
rcl
push
dec
xchg
adc
xchg
push
xor
add
jbe
int
push
out
pop
cwtl
movsb
xchg
cwtl
mov
and
rcrl
cmc
jo
or
dec
aad
stos
lret
aam
ror
loop
fldt
mov
ljmp
imul
pop
or
mov
adcb
movsl
jle
cmpb
out
and
adcb
outsb
add
addr16
push
pop
xchg
mov
testl
lds
sub
push
imul
out
jae
jge
test
pop
xor
mov
xor
mov
fists
inc
ret
fdivrs
mov
loopne
into
shl
out
std
sub
xchg
out
adc
scas
or
cmp
cs
mov
ljmp
mov
mov
aam
sub
xchg
lock
push
inc
testb
scas
je
pop
sbb
push
data16
hlt
insb
leave
mov
sbb
sub
mov
les
add
scas
and
mov
dec
and
xchg
cs
ja
sub
test
xor
shrl
inc
insb
adc
add
je
push
pop
push
sub
pop
xchg
lret
mov
adc
xor
arpl
enter
sub
mov
jae
mov
ret
push
fdivl
mov
pop
mov
scas
je
mov
inc
in
jne
pop
add
inc
jae
idivb
push
out
jg
adc
aad
push
sub
ds
sbb
aas
or
out
ret
mov
sbb
or
xchg
inc
stos
cs
je
fidivs
shr
cmp
mov
pop
cmp
ss
mov
ljmp
xor
lods
jge
inc
push
sub
ret
pushf
lds
inc
fdivl
call
dec
adc
mov
xchg
sbbb
jnp
in
jnp
cwtl
xor
jns
mov
lods
mov
test
ficomps
xor
out
jb
mov
data16
in
add
mov
out
hlt
push
imul
pop
arpl
push
sbb
arpl
gs
loopne
mov
sahf
jno
xlat
mov
les
mov
aaa
push
sub
xor
mov
sbb
ljmp
arpl
adc
cmp
fmulp
jo
jge
pop
ss
xchg
sub
mov
add
adc
into
lods
lds
movsl
hlt
xchg
test
fiadds
sub
add
lods
popa
sub
jp
or
and
xchg
fsubrp
test
imul
out
sti
adc
outsb
jne
icebp
arpl
sbb
add
es
sub
lods
shlb
mov
mov
cmp
gs
shll
scas
insb
add
loop
cmp
push
xchg
scas
push
mov
dec
pop
push
xchg
mov
mov
sbbl
xchg
adc
ja
adc
xorb
pop
out
dec
out
inc
cltd
pop
inc
xlat
pop
outsl
shlb
or
dec
push
jo
dec
mov
jo
mov
aam
pop
rolb
cmc
add
and
jecxz
jo
pop
addr16
pushf
jb
lea
mull
xor
or
mov
dec
push
jbe
lcall
mov
pop
push
mov
into
and
mov
mov
dec
dec
in
or
sahf
je
stos
scas
sbb
jae
mov
sub
in
stos
dec
cltd
mov
enter
test
jae
cmpsb
dec
ljmp
lcall
cmp
sub
and
jne
cmp
xchg
pop
addb
pop
pop
inc
fcomps
outsl
or
adc
rcr
lahf
rolb
dec
sbb
movsl
lock
idivl
in
lea
test
cmp
sub
mov
cltd
sub
xor
jno
icebp
lahf
and
and
dec
sub
jbe
fcoms
jmp
aas
sarb
hlt
sbb
rcl
mov
xchg
mov
cmp
outsl
lods
mov
or
inc
mov
popf
movsl
pop
pop
sub
pop
mov
push
int
stos
or
mov
or
push
shrb
xor
push
push
mov
daa
shrb
pushf
mov
mov
xor
scas
test
lret
cltd
lds
pop
jns
das
mov
fildll
cmp
xchg
test
cmp
sub
jae
loop
jl
dec
adc
add
shll
into
mov
cmp
inc
movsb
mov
cmp
adc
idivl
into
ret
push
add
sti
negl
jbe
lods
mov
ljmp
mov
mov
stos
stos
arpl
stos
pop
xchg
shlb
push
adc
scas
mov
je
scas
xor
jl
or
xchg
loope
lret
mov
xor
xchg
lea
dec
or
daa
mov
xchg
stc
sahf
mov
hlt
aam
inc
xor
pop
out
xchg
and
add
sub
adc
aaa
out
or
mov
stc
sub
in
loope
or
enter
sbbb
inc
adc
xchg
outsl
and
jo
push
jmp
jb
adc
xchg
mov
pop
adc
shrl
out
insb
pop
loopne
fwait
idivl
dec
push
jno
jge
enter
iret
popa
fs
out
lods
add
lret
adc
pop
xchg
mov
mov
jbe
rcrl
pop
addr16
or
add
adc
fs
or
ss
or
fiadds
fdivrs
sub
lcall
push
sarb
add
lret
add
adc
mov
inc
cli
or
or
xchg
lcall
xor
sarl
mov
mov
sbb
aad
repz
ficoml
add
out
mov
popa
cmp
std
add
mov
pop
out
mov
loope
xchg
push
aaa
mov
sub
aaa
clc
dec
in
sbb
loope
nop
push
push
in
lea
stc
push
rorl
mov
addr16
lods
stc
mov
add
adc
pop
dec
inc
adc
adc
nop
push
adc
xchg
movsl
or
and
xchg
xlat
or
or
sbb
clc
ret
aas
jmp
data16
adc
outsb
mov
daa
aas
loop
lods
push
outsb
cmp
fidivrs
bound
jg
negl
dec
stos
les
xchg
push
mov
sahf
gs
xchg
sbb
loope
test
mov
push
pop
insb
out
aad
and
aaa
sbb
mov
insl
bound
add
outsl
inc
jmp
jne
notb
cli
and
fnstcw
push
mov
jae
inc
jp
inc
mov
sub
xlat
leave
and
xchg
cld
mov
cltd
subb
adc
cli
arpl
or
scas
call
sub
cmp
ss
int3
jg
pop
add
cmp
xor
push
stc
lret
fucomp
jae
xchg
dec
cld
daa
stos
sbb
pop
add
je
sub
mov
js
sbb
xchg
nop
push
xchg
movsb
test
push
fcompl
add
pop
loope
ds
cmp
test
dec
in
mov
sbb
inc
inc
xchg
movsb
adc
daa
out
push
xchg
shrb
inc
or
pop
pop
and
fsubl
push
clc
adc
clc
sbb
jbe
fisttps
sub
add
scas
push
mov
int3
and
sbb
aad
mov
inc
popf
pop
jecxz
test
cmpsl
stc
add
test
loop
fdivrs
jl
pop
xor
data16
ss
mov
pusha
sti
loopne
imul
fmull
lods
fs
lcall
stos
loope
ss
out
push
popf
push
add
aam
es
stos
mov
sbb
push
push
pop
lret
enter
xor
sub
scas
xor
das
fistpll
in
lret
and
sub
lds
js
push
outsb
push
and
cmp
and
add
sbb
data16
out
or
jbe
xor
xor
xchg
inc
xor
jbe
rorl
cmpsl
cmp
repnz
lods
jmp
outsl
in
pop
addr16
rcr
aas
jl
mov
and
sub
jge
mov
cmpsl
pop
or
sbb
rcrb
aas
dec
pusha
mov
sbb
js
ret
aaa
mov
cmpsb
mov
mull
int3
adc
nop
leave
es
test
add
mov
jp
cmpsl
or
rep
test
mov
inc
cmp
xchg
push
popa
daa
dec
mov
outsb
mov
adc
js
dec
std
or
push
adc
adc
adc
rorl
outsb
sub
lahf
add
inc
lret
cltd
leave
mov
xlat
gs
inc
fwait
pop
pushf
dec
push
mov
mov
add
lock
lret
outsl
xchg
mov
jnp
andps
loopne
and
mov
pop
das
out
inc
fsubr
xchg
mov
push
jge
pop
sub
xchg
sbb
test
jbe
roll
or
cmp
aam
sub
dec
add
shll
out
data16
push
cmp
mov
cmpsl
lods
lcall
and
mov
fisttpll
test
or
adc
test
push
psllw
mov
sub
shrl
orl
pop
adc
inc
mov
mov
mov
sub
adc
xchg
xor
mov
das
popf
arpl
fnsave
adc
or
das
mov
ds
and
xchg
ss
jo
xor
adc
in
pop
pop
cmp
ljmp
test
jmp
shll
lods
iret
push
stos
pop
jge
ds
arpl
rorl
test
pusha
pusha
pop
aaa
jb
mov
pop
outsl
pop
push
leave
out
aam
fstps
dec
mov
mov
jle
movsl
adc
sbb
roll
loope
mov
repz
lds
nop
test
dec
mov
rcrl
xchg
in
int
cmpsl
push
mov
sub
into
rcl
jg
sbb
movsl
xchg
jo
inc
xchg
adc
aaa
dec
into
add
enter
cmc
jmp
xorl
push
out
jno
ret
data16
sbb
test
ljmp
sbb
lret
pop
test
push
and
decl
xchg
inc
push
and
jmp
stos
in
subb
cmp
out
sbb
adc
test
add
pop
and
mov
pop
nop
ljmp
sbb
stc
ret
fmuls
cmp
mov
push
lods
les
push
shll
ljmp
xchg
sarb
test
lock
sub
movsb
imul
jle
scas
lds
insl
pop
fs
inc
cli
add
int
test
in
mov
sub
stc
sub
fisttps
andl
pop
orb
cwtl
push
lahf
xchg
icebp
imul
les
test
pop
push
xlat
jle
inc
push
cmc
or
sbb
mov
jne
cmp
test
adc
scas
cmp
dec
stos
mov
mov
mov
push
insb
jl
ret
sbb
sbb
mov
mov
push
mov
or
loopne
push
cmp
or
subb
add
cmp
adc
pop
inc
mov
cltd
jp
inc
mov
shlb
sbb
dec
xor
cmc
int3
cmp
sbbl
or
out
add
ljmp
adc
int3
loope
addb
mov
or
cs
or
push
inc
push
and
je
in
mov
xchg
sub
add
add
push
test
fwait
mov
mov
imul
es
clc
add
push
movsb
lock
aas
cld
pop
add
xchg
fisttpll
test
imulb
and
stos
int
xor
ss
jl
frstor
sbb
sub
mov
jl
popa
ja
mov
test
inc
call
cmpsl
push
mov
mov
out
cmp
fs
dec
jns
cli
dec
ret
xchg
add
stos
dec
imul
or
imul
cmp
or
xlat
mov
icebp
bound
pop
lods
fdivl
popf
jecxz
mov
push
subl
leave
push
adc
ja
add
adcl
sub
lret
add
stc
mov
cld
inc
fidivrs
in
jl
mov
lret
jae
inc
mov
cmp
cmpsb
stc
push
push
jmp
dec
mov
in
mov
mov
jnp
jge
jmp
inc
or
out
or
stos
add
add
test
idivl
call
sbb
fwait
imul
mov
or
lock
pop
add
scas
mov
popf
mov
gs
or
add
fwait
dec
xor
or
jl
sbb
es
lea
ljmp
pusha
and
xor
fidivrl
call
sbb
jmp
jo
fdivs
adc
dec
mov
xor
mov
bound
unpckhps
inc
lods
cmp
andb
mov
lea
vxorps
outsl
xchg
ficoml
dec
push
dec
mov
pop
inc
push
inc
pop
mov
add
or
mov
sbb
lea
test
adc
outsb
mov
pusha
xchg
jnp
mov
sub
rep
push
mov
int
aas
and
pop
cld
popf
jae
mov
or
movsl
js
fwait
add
cmovl
leave
inc
xor
push
bswap
cmpsl
xchg
xor
fdivrl
sub
rorl
movsb
test
lret
mov
outsl
orb
fistpll
pop
inc
mov
sub
sbb
mov
ret
xorl
jge
push
push
dec
mov
fs
cltd
lods
cmp
mov
push
mov
mov
sub
shrl
add
inc
iret
call
cmp
insl
pop
daa
push
mov
and
ja
repz
mov
stos
outsl
or
add
sub
xchg
stos
scas
xor
adc
repz
push
out
icebp
add
shlb
lahf
jnp
mov
imul
xchg
je
cmpb
hlt
sbb
and
cmp
ret
movl
or
push
and
cmc
adc
mov
or
ljmp
mov
sub
sahf
shl
mov
jge
add
and
xor
or
adc
mov
sub
or
fstl
mov
sbb
xor
xchg
jle
daa
in
das
cmp
cmp
and
add
out
add
fwait
inc
sbb
not
xchg
jbe
sbb
mov
rol
insb
cmpl
iret
subl
and
fimuls
fadd
cli
loop
cmp
stos
imul
mov
bswap
mov
add
and
aaa
sub
je
add
sub
bound
in
inc
lahf
and
adc
xor
xor
test
repnz
xchg
in
lcall
lret
aam
push
xor
movsb
mov
rcrl
pop
enter
jge
mov
cmp
adc
jp
push
fstps
inc
xchg
cmp
jmp
pop
aad
lret
icebp
xchg
dec
and
cmp
add
push
in
arpl
imul
cmpsb
jb
icebp
cmp
je
ret
dec
jb
das
jmp
rcll
mov
mov
mov
sbb
imul
xchg
mul
or
jb
jge
fldcw
das
sbb
adc
xchg
ret
dec
dec
repz
add
and
dec
adc
fcoms
insl
jmp
aaa
push
aaa
mov
leave
push
mov
fwait
xchg
xor
jne
in
push
movsl
xor
rcr
out
xchg
repz
mov
adc
clc
pop
test
fldt
mov
bound
out
mov
jo
into
in
mov
mov
int
and
test
and
dec
and
je
or
rcrl
adc
xor
filds
mov
lret
sbb
je,pt
in
jne
fldl
mov
jl
xchg
inc
paddusb
pusha
jbe
pop
push
movsb
mov
pop
loope
cld
sbb
sub
jbe
xchg
sti
sbb
in
add
mov
xlat
bound
nop
xchg
ljmp
in
out
inc
push
pop
mov
mov
fldt
fs
sahf
aad
or
ja
nop
insl
xor
mov
sahf
ret
pop
ret
imul
xor
cltd
icebp
add
fdivs
inc
cmp
lahf
push
xchg
dec
cld
push
add
loope
inc
add
fiaddl
jmp
in
movsb
imul
xor
clc
ds
in
push
hlt
pop
cmpsl
adc
hlt
dec
inc
mov
pop
sub
xor
sub
mov
push
filds
sub
jp
jns
fcmovb
mov
dec
popf
jne
dec
mov
sbb
xor
stc
and
pushf
adc
test
fsubrl
xor
mov
xor
std
or
xchg
mov
sbb
das
ficompl
mov
adc
xor
xchg
jmp
cmp
jp
imul
pop
jl
sub
sub
or
imul
mull
jmp
mov
scas
cmpsb
mov
push
push
nop
xchg
pop
sbb
dec
lods
inc
out
mov
insb
adc
rcll
scas
into
xor
add
bound
bnd
faddl
cmpl
add
test
and
inc
loopne
aad
cmpsl
fists
cmp
sbb
incb
mov
mov
fdivl
dec
xor
in
lods
mov
and
out
adc
addr16
mov
nopl
test
test
and
dec
por
inc
inc
cmp
sbb
arpl
fistpl
pop
idiv
test
pop
xchg
int3
pop
test
cmpsb
outsl
cmp
std
mov
push
lods
fcoml
jmp
push
xor
xor
imul
inc
push
mov
and
rorb
pop
pop
push
stc
leave
inc
stc
out
ja
or
js
cmp
xchg
mov
sub
insb
aad
and
and
in
icebp
int
stos
and
mov
push
dec
and
sbb
sub
ss
aaa
subb
mov
sub
xorl
or
lahf
pmullw
push
inc
repz
popf
mov
les
nop
mov
mov
cmp
jl
lods
popf
cltd
mov
inc
push
jbe
pop
cmp
test
popf
out
mov
aas
ljmp
hlt
jp
loopne
mov
jp
hlt
mov
add
fistpll
mov
bound
push
insb
imul
mov
repnz
and
std
adc
lock
pop
pop
movsl
fbld
xchg
xchg
adc
jns
lods
dec
loop
repz
dec
int3
sbb
sbb
ja
shlb
push
pop
pop
cmp
scas
cmp
daa
pop
push
stc
pop
push
popf
jecxz
movsl
sub
fisubrs
adc
cmovp
mov
adc
insl
mov
cld
jns
and
pop
sbb
adc
dec
sbb
pop
jg
cmp
xchg
sub
call
add
jne
ret
pminub
and
mov
imul
cmpl
mov
mov
inc
out
pusha
sbb
dec
arpl
mov
ljmp
insb
fdivr
mov
psubusw
lcall
xchg
jne
mov
iret
cli
jl
bnd
pusha
push
sub
lods
fnstsw
fists
sub
pop
sbb
or
add
pop
adc
lcall
mov
xchg
aas
jbe
mov
stc
ret
lret
test
in
push
mov
mov
lds
mov
cltd
or
or
lods
movsb
mov
push
pusha
in
loopne
outsl
cltd
lcall
mov
push
dec
pop
dec
ror
sub
adc
pop
push
lahf
and
push
push
mov
test
or
fdivl
xor
add
imul
cmpsb
push
fsubr
mov
inc
dec
fisttpll
gs
cwtl
rcrb
mov
jge
mov
pop
out
xchg
push
jo
lret
push
and
adc
add
dec
leave
pop
ja
xor
adc
aaa
adc
push
push
sarl
fcompl
test
std
cmp
push
sbb
xor
mov
cli
pusha
out
ret
stc
adc
movsb
cmp
lock
filds
sbb
outsl
hlt
sub
lret
pusha
es
ljmp
iret
lods
sbb
pop
sub
add
psrad
mov
out
mov
aas
jb
addb
imul
xor
push
mov
pop
pop
stc
dec
sbb
lea
leave
imul
pop
dec
push
rcl
inc
mov
push
adc
cmp
and
adc
mov
rorl
mov
pop
and
cwtl
leave
adc
fsubrs
sbb
cmp
clc
scas
jp
cmp
popf
in
sar
fdivs
cmp
sbb
daa
mov
push
sbb
fdivrl
push
mov
pop
mov
fdivrp
int3
xorl
dec
push
pop
test
sbb
leave
fcmovnu
adc
pusha
mov
lds
arpl
out
cmp
ss
cwtl
rorb
push
scas
dec
in
mov
rclb
or
mov
imull
cltd
or
movl
push
fists
cmpsl
out
mov
stc
das
ret
sbb
mov
mov
xor
adc
and
mov
jmp
mov
inc
data16
int
jbe
cmpsb
and
sub
in
sub
ds
test
icebp
call
int3
jmp
and
cmp
fcom
add
leave
adc
xchg
jo
jecxz
push
stos
mov
mov
loope
pop
add
ss
sbb
dec
icebp
aam
sub
out
mov
ret
xor
ss
push
shlb
push
adcl
lcall
jecxz
mov
pop
xchg
sub
jl
push
out
mov
sub
push
lahf
aas
movsb
data16
aad
and
cmpsl
mov
shlb
dec
sti
and
sub
dec
addr16
out
mov
test
out
mov
pop
sbb
lods
les
mov
push
test
cmp
jmp
xlat
lds
push
enter
imul
jb
loope
loop
jl
mov
pop
xlat
sarl
test
fwait
dec
in
or
add
ja
popf
ljmp
ds
negb
arpl
mov
call
das
cltd
mov
adc
inc
add
lcall
cmp
dec
pop
push
int3
push
mov
jecxz
test
dec
out
inc
pop
or
faddp
xor
arpl
cld
insb
fdivrl
imul
sti
insb
test
adc
repnz
in
movsl
addb
xor
je
add
add
or
rorb
pop
add
mov
dec
stos
or
rorl
popa
cltd
inc
test
sar
nop
add
sbb
roll
cmp
pop
adc
ds
xchg
fcoml
gs
scas
das
lock
out
dec
push
dec
mov
mov
fst
fisubrl
ret
pop
cmp
sbb
xchg
shlb
mov
enter
mov
push
push
inc
xchg
test
push
pushf
jecxz
out
sbb
mov
or
jmp
lahf
cmp
mov
xor
les
push
ds
loope
cmp
scas
xchg
int3
movsb
ret
jno
cmp
push
in
rcrl
icebp
leave
lds
push
mov
test
clc
mov
dec
inc
pop
or
xlat
movsl
dec
aas
mov
mov
mov
jns
push
movsb
andl
mov
sub
loopne
sahf
imul
xor
adc
inc
cmp
sbb
jne
jmp
sbb
lea
addb
adc
shrb
xor
xchg
mov
jne
jmp
sbb
rcll
mov
xlat
ljmp
dec
dec
xor
jns
popl
scas
out
mov
xor
test
and
cmpsl
add
sbb
sti
leave
sub
adc
scas
or
cli
pop
movsl
dec
mov
insb
in
xlat
lods
scas
loop
lret
xchg
jl
fs
cmp
in
out
test
in
xchg
shlb
pop
hlt
cs
shl
pusha
cltd
push
cmpsb
sbbl
xor
xchg
cmp
jae
popf
xor
and
jge
outsl
xor
jb
fidivl
jp
mov
inc
cmc
test
mov
and
sbb
sub
and
push
ds
ds
iret
xor
out
push
jmp
or
mov
xchg
pop
add
loop
push
mov
xor
lock
mov
and
cmpsb
or
dec
jle
in
sar
int3
addb
adc
loop
mov
mov
test
sbb
in
xor
fwait
mov
sarb
gs
lods
dec
pop
fnstenv
or
sub
sub
push
adc
pop
mov
out
dec
repz
iret
xor
dec
rorl
adc
pop
lahf
mov
es
adc
mov
sub
cmpsl
cltd
rol
nop
rcrl
or
pop
movsb
out
imul
lods
dec
jge
lahf
imul
sbb
xchg
ret
pop
cmp
scas
in
add
push
lea
xor
jne
jge
lret
stc
cmp
sti
push
hlt
gs
rcrl
sbb
lods
and
dec
mov
pop
in
lds
adc
push
out
vmovaps
adc
daa
dec
sbb
int3
js
int3
or
pop
notb
mov
mov
out
enter
xchg
in
aad
sarl
fisubs
aad
ret
lcall
dec
sub
add
and
les
popa
leave
jno
inc
jg
in
sbb
mov
jmp
push
or
in
scas
or
fstps
mov
push
std
add
mov
mov
outsl
cmp
pushf
rol
sub
inc
inc
in
mov
mov
push
mov
xlat
scas
repnz
push
inc
aad
pop
cwtl
cmc
rorb
sub
insb
dec
leave
or
add
cmp
lahf
sub
pusha
sbb
pop
lods
shll
out
xor
iret
xor
in
cmc
mov
pop
pop
dec
jo
dec
test
cld
mov
lock
push
pop
and
imul
xor
mov
cld
ds
leave
in
pop
xchg
orl
cwtl
pop
push
outsb
jp
movsb
mov
sahf
lret
add
test
stc
andl
imul
pushf
in
lds
xlat
in
rcr
cli
push
test
int3
fwait
std
push
jmp
sbb
sbb
es
pop
xor
push
fiaddl
xor
pop
xchg
notl
mov
int3
fldt
fldl
push
dec
data16
je
cmp
adc
lea
or
cmc
popf
mov
mov
cmp
push
sbb
test
adc
jae
xchg
lsl
inc
gs
std
push
sub
jg
jmp
mov
test
and
push
shrb
gs
leave
mov
dec
fstpt
adc
in
scas
mov
dec
lock
test
lds
xor
fisubl
pop
sub
adc
lds
xchg
cmp
les
sub
gs
pop
iret
sbb
xchg
inc
in
push
mov
out
inc
mov
adc
mov
lock
sub
inc
xchg
jmp
ret
jbe
stos
cli
arpl
push
mov
xlat
hlt
sti
enter
xor
lret
subb
xor
inc
add
leave
movaps
sub
sbb
test
pop
sahf
pop
dec
clc
icebp
pop
iret
in
in
pushf
mov
cmpsl
pushf
movb
dec
adc
xchg
push
jmp
and
xor
inc
movsb
movsl
orb
call
and
mov
sub
int
daa
pushf
and
and
mov
rcl
dec
cmp
in
inc
movsb
inc
cli
push
lret
rorl
ud0
flds
int
xchg
cmp
inc
call
push
fistpl
mov
cbtw
js
pop
pop
mov
mov
sbb
push
aas
insb
mov
jae
aad
fwait
cmp
test
test
and
call
test
add
xchg
fs
push
and
sbb
int
cld
jae
std
cltd
mov
adc
outsl
push
push
ss
push
adc
dec
int
in
adc
cmpl
pop
sahf
xchg
inc
stos
lret
dec
int3
fcmovne
repnz
bound
pop
jns
das
ret
jno
fcoms
out
popa
jnp
inc
dec
sbb
fs
xchg
mov
sti
and
stos
mov
int3
imul
ss
mov
out
fldcw
icebp
add
cmp
dec
inc
pop
mov
push
jg
push
fcoml
test
sti
push
mov
xchg
jbe
inc
jl
lahf
out
sti
xchg
xor
cmp
mov
stos
xor
int
in
jne
sub
mov
movb
shrb
aaa
pop
mov
sti
enter
test
pop
sub
fdiv
adc
leave
xor
mov
outsl
data16
xor
jp
in
jp
sub
sbb
jl
sbbb
and
cmp
sti
stc
pop
shll
inc
fadds
mov
sub
lahf
movsb
jne
xor
insb
repnz
daa
cld
fidivl
movsb
imull
push
cmp
inc
loop
cmpsb
inc
push
in
lret
sbb
pop
aaa
in
sub
lret
push
jae
and
dec
lea
jo
fs
ror
pushf
repnz
mov
fwait
cmp
scas
or
ficomps
loopne
cmpsl
stos
mov
fsubrs
arpl
mov
or
xor
xor
sahf
mov
or
in
icebp
push
jg
mov
mov
mov
push
ja
xchg
mov
ret
stos
or
mov
inc
lret
sbb
or
or
stos
pop
sub
fucom
fisttpll
lods
xor
test
nop
ds
or
orb
aas
imul
mov
xchg
jg
xchg
sub
stos
mov
or
sub
aad
bound
fdivrp
scas
stc
xchg
adc
cmp
mov
mov
and
scas
out
ljmp
outsb
es
std
fstpl
cld
out
rorb
mov
sbb
push
jg
int
loopne
or
test
movsb
dec
mov
or
call
sbb
xlat
mov
mov
in
pop
vsqrtss
call
addr16
cmc
or
mov
sub
pop
pop
pop
adc
mov
pop
aaa
cmp
sbb
mov
cmp
mov
jae
xor
mov
push
sbb
ret
or
pop
fisttpll
cmpb
lahf
cmp
adc
xor
fsubrl
jno
inc
mov
mov
and
or
pop
push
and
repz
imul
cmp
ret
pushf
jbe
mov
aaa
adc
mov
cmpsb
mov
push
pop
lock
sbbl
ljmp
or
lods
adc
pop
xor
xacquire
push
fistpl
or
dec
mov
push
in
fnstenv
adc
inc
aas
out
mov
mov
jo
push
sti
int
xor
xchg
sarb
adc
out
add
repnz
imul
push
call
xor
inc
popa
pop
daa
rcll
imul
aas
mov
cmp
sbb
jne
push
stc
test
cmp
dec
ret
std
pop
jne
imul
push
push
push
sub
jl
lret
clc
fs
jg,pn
negl
pop
cmp
mov
jno
or
xor
mull
and
push
mov
js
andl
out
xchg
repz
arpl
xlat
cmp
ds
mov
lahf
pop
stos
xchg
aam
aam
mov
jb
pushf
shrl
insl
pop
push
pop
enter
cmp
mov
jb
insw
pusha
mov
je
es
inc
push
je
dec
adc
push
inc
int
jmp
ss
icebp
fisubs
mov
ret
dec
adc
fs
outsl
les
incl
jle
cwtl
inc
pop
inc
lock
js
xchg
imul
inc
pushf
xor
ret
cmp
adc
sbb
sarb
js
and
stc
jmp
dec
or
subl
mov
in
out
fldl2e
pop
jp
xlat
je
and
inc
mov
dec
ret
movsl
cs
ret
insl
stc
jns
pushf
sahf
sbb
mov
imul
ror
out
mov
and
jmp
xor
scas
xor
ret
outsb
mov
cs
push
mov
jmp
push
jae
imul
add
addr16
outsb
cmpsb
push
pop
adc
mov
lret
sahf
icebp
pop
add
inc
dec
xlat
push
stc
sbb
sub
scas
add
cs
add
daa
fdivrs
gs
popf
push
mov
inc
fs
xchg
inc
dec
adc
cmp
and
loope
xchg
mov
xor
enter
dec
jl
js
ds
in
aad
mov
ja
hlt
and
lret
jno
sbbb
xor
std
dec
pop
push
xchg
lock
jnp
push
adc
xor
jecxz
fcoms
sub
scas
lcall
or
mov
ds
movsb
and
push
popf
adc
sbb
int3
pop
jle
ret
lods
lret
cmp
push
jle
les
cld
fwait
cmp
fistpll
or
xchg
loope
xor
popa
out
addr16
inc
jl
push
dec
add
rorb
imul
pop
in
gs
cmc
cwtl
scas
inc
movsb
add
notb
sbb
or
sti
arpl
dec
stos
mov
nop
mov
aam
pop
sbb
and
adc
sbb
inc
pop
movsb
fdivl
repz
add
test
int
sbb
jecxz
icebp
sti
pop
add
out
pop
inc
in
lea
imul
cmp
jb
xchg
push
aad
loope
xchg
arpl
and
pop
mov
cmp
push
mov
and
lahf
or
sbb
push
iret
inc
ja
xchg
repz
push
xor
std
add
cmp
popa
into
iret
jl
lret
repz
loop
ds
mov
pushf
adc
jmp
xchg
in
cmp
stos
or
es
mov
imul
fnstsw
aam
sbb
sarb
mov
lret
cld
inc
lods
sub
into
cs
insl
mov
test
xchg
loopne,pt
test
and
js
and
je
push
push
fdivrp
aad
dec
add
popf
inc
adc
popf
mov
mov
mov
cli
xor
inc
hlt
lret
adc
jp
ret
sbb
call
pusha
lock
imul
jge
rcrl
xor
cltd
int
bound
mov
aaa
lods
out
jae
nop
dec
xchg
cltd
insb
pop
jecxz,pn
std
sbb
lcall
cli
push
mov
lds
je
iret
fimull
fidivrl
ljmp
les
xchg
jbe
pop
adc
fimull
arpl
addr16
cmp
mov
mov
xchg
stos
xlat
rcrl
or
pop
sbb
loope
mov
push
mov
daa
stos
lcall
int3
ret
and
addr16
xchg
out
mov
movsb
rcrl
inc
xchg
inc
cmpsl
xor
cmp
jo
or
paddq
or
jmp
push
test
inc
and
cmpsl
int
push
xor
xchg
pop
mov
mov
pop
fisubl
test
nop
adc
rcl
bound
popa
pop
sub
mov
in
ss
imul
idivl
push
cli
inc
andl
pop
cmp
sbb
pop
shl
enter
mov
xor
mov
jge
mov
inc
push
cmpsl
in
je
ja
ds
mov
dec
icebp
dec
mov
ss
dec
add
in
call
mov
std
mov
xchg
push
push
xor
or
mov
xorl
and
movsb
pushf
mov
and
jecxz
cld
pop
mov
jmp
bound
mov
dec
mov
int
sub
adc
inc
xchg
lret
out
xor
stos
push
imul
push
mov
adc
call
jp
jbe
jbe
pop
adc
sbb
push
into
out
mov
add
push
and
add
shlb
or
inc
sbb
ret
inc
dec
insl
mov
pusha
lock
add
sbb
outsb
pop
xorb
leave
pop
mov
leave
jl
mov
or
push
mov
sub
mov
cmp
mov
pop
pop
repz
mov
push
sub
push
mov
bound
sahf
xchg
pop
adc
push
insl
push
and
mov
mov
and
adc
dec
ret
mov
int
daa
xor
jp
stc
inc
mov
jo
cltd
psrad
adc
cmp
jmp
repnz
clc
pop
out
add
sarb
or
or
add
lea
mov
inc
lds
jae
ds
mov
push
hlt
leave
mov
fwait
add
mov
xchg
sbb
js
fmulp
pop
sbbl
hlt
sub
loope
fcomps
gs
sbb
push
sahf
mov
push
imul
cmp
jp
sub
xor
daa
xlat
pushl
enter
inc
jnp
pop
je
aad
cmp
cmp
stos
call
sbb
xor
inc
orl
mov
ret
rcr
aas
jbe
cltd
cmp
stc
je
inc
mov
push
inc
jne
sub
mov
mov
pusha
add
mov
cmp
out
xchg
inc
xor
aad
nop
repnz
movsl
dec
pop
sbb
fldcw
out
sahf
dec
ret
cmp
mov
cmc
addr16
ret
add
mov
pop
dec
and
push
sbb
test
dec
les
xchg
cwtl
lock
pop
frstor
mov
pop
test
cs
mov
fcomps
movl
lods
jecxz
fcomps
fadds
sti
arpl
orl
cmp
jle
sub
inc
mov
pop
lock
sbb
lds
adc
push
mov
push
loop
shl
push
xor
stc
fstpt
repz
add
add
add
lds
addr16
push
cmp
and
ljmp
cmp
xchg
lds
xor
mov
imul
and
push
jg
pushf
addr16
mov
outsl
mov
je
cmp
fiadds
and
repnz
dec
add
or
pop
xchg
add
out
lret
sub
hlt
push
das
stos
out
imul
mov
insl
dec
mov
adc
btr
and
mov
jo
or
jmp
dec
mov
push
sub
adcb
popf
mov
sbb
test
mov
mov
rolb
mov
xor
insl
sub
xchg
call
mov
pop
imul
xchg
repz
or
repnz
pop
stc
mov
cmp
jne
je
test
sub
sbb
mov
dec
es
imul
stos
or
iret
xorl
mov
std
imul
jns
insb
mov
test
sarb
pop
js
lods
jmp
mov
xchg
out
mov
fnstcw
jne
add
mull
push
mov
and
in
or
mov
int
jle
inc
and
pop
pminub
mov
xor
cli
mov
nop
movsb
jp,pn
scas
lds
xchg
push
int3
jne
xor
mov
pop
mov
mov
mov
cltd
pop
or
cmp
dec
lea
pop
push
insb
jle
gs
xchg
or
ret
adc
sbb
push
mov
xchg
adc
repz
fcoml
rcl
cmp
test
popa
addl
sbb
sbb
adc
push
xchg
stos
cmp
add
bound
inc
sub
jo
rcrl
push
cmp
sub
out
ret
scas
mov
dec
jmp
int3
lea
lods
arpl
jne
push
outsl
sbb
xor
leave
arpl
push
pop
cmp
push
adc
pop
add
and
insb
add
decl
mov
push
les
loope
dec
outsl
or
mov
fisubl
insb
mov
pushf
xchg
mov
stc
inc
mov
push
dec
stc
nop
cmp
xlat
adc
test
std
loop
jecxz
or
movsb
pushf
dec
cmpsb
xor
outsb
cltd
or
and
imul
mov
add
xchg
jmp
ljmp
and
mov
xchg
lret
call
adc
sub
push
sub
cmp
mov
inc
and
pop
sub
xor
scas
xlat
cmp
lea
mov
outsl
call
sbb
push
adc
inc
mov
or
decl
ficompl
mov
sub
cmp
cmpsl
rolb
mov
push
aas
push
movsb
int3
fnsave
sub
add
lahf
lds
jnp
mov
add
inc
ss
lds
cli
loopne
cli
dec
leave
dec
pop
sbb
movsl
pusha
inc
pop
push
xchg
pusha
xchg
push
test
cli
shlb
and
in
or
sub
mov
pushf
int3
imul
lods
cmc
loop
in
pop
or
cld
cs
loopne
daa
ret
in
xchg
idivl
test
stc
mov
mov
iret
shlb
scas
es
push
fcom
jge
cmpl
addr16
imul
jnp
cs
dec
outsb
jo
jnp
xchg
rcrb
push
aad
out
out
roll
mov
inc
cwtl
jmp
call
cld
cli
xchg
in
pop
jne
mov
pop
or
pop
andl
outsl
push
repnz
sahf
ret
scas
andl
repnz
jno
cs
pop
shl
outsb
jmp
aaa
aas
pop
bound
scas
leave
sahf
bound
movsb
jno
pop
lcall
lret
popl
push
inc
xlat
inc
xchg
cli
cmp
ret
movsl
hlt
inc
sub
aas
jns
cmpsl
jb
in
or
inc
push
outsl
dec
add
lods
sbb
mov
pop
repz
jns
xchg
xchg
outsb
jmp
stc
lea
lret
enter
and
pop
xchg
pop
pop
out
jmp
jecxz
or
cmp
mov
push
daa
orl
imul
out
arpl
jnp
cld
nop
insl
lds
pushf
ficomps
fcoms
in
mov
jno
sbb
roll
cld
das
fmuls
repnz
clc
xor
add
daa
jmp
js
mov
mov
movsb
sbb
adc
ja
push
jns
adc
scas
dec
daa
pop
cld
cmp
mov
fiadds
add
add
mov
jle
add
loopne
mov
stos
and
sub
call
add
cld
movsl
in
popa
std
adc
js
push
push
aad
fbld
inc
adc
push
test
insb
mov
pop
mov
mov
fsubl
les
lcall
inc
mov
jecxz
dec
jg
test
inc
or
sbb
cmc
int
xor
lea
and
dec
push
call
mov
add
es
bound
cltd
aaa
sbbl
stc
das
fidivrl
jno
push
inc
mov
xor
call
xor
data16
push
xchg
adc
stos
imulb
rcrl
es
pop
push
jns
rolb
inc
mov
cmc
mov
dec
jo
lahf
mov
cwtl
mov
std
test
and
jg
mov
pop
aam
roll
test
sbb
jl
xchg
mov
mov
dec
push
outsb
and
dec
fiadds
or
js
xor
jbe
jns
cs
push
inc
and
add
test
stos
jge
cmp
mov
nop
jno
cld
lea
dec
or
pop
stc
sub
cs
cwtl
xchg
loope
mov
cmp
and
test
into
push
xor
and
stos
jp
aas
out
mov
bound
daa
pop
dec
cwtl
cmp
cmc
cmpsl
mulb
jecxz
sahf
jbe
mov
into
enter
mov
xor
pop
dec
xchg
sahf
xor
mov
aad
inc
and
mov
jne
pushf
push
cmp
cmpsl
out
orl
mov
or
sbb
or
inc
dec
xchg
into
cltd
mov
xchg
push
jmp
je
xchg
ss
add
sub
jge
cmpsl
pop
sub
lea
je
lret
xor
and
jecxz
imul
out
dec
clc
leave
clc
mov
scas
mov
sbb
and
out
imul
push
lods
iret
ljmp
out
xor
jnp
sub
stc
adc
test
sbb
popa
xchg
sbb
xchg
ret
call
dec
jns
xchg
mov
inc
sbb
cmp
andb
aaa
add
adc
mov
sub
inc
nop
sub
mov
push
fisubl
aaa
stc
outsb
xchg
dec
xchg
mov
and
cmc
lcall
dec
pop
push
pop
cld
cmpsb
cld
cmpsl
in
jae
loope
sbb
mov
and
ret
dec
test
dec
dec
mov
dec
sub
ficoms
lock
jns
adc
iret
daa
cmp
jge
in
mov
push
lahf
mov
inc
sbb
mov
inc
test
out
js
and
jbe
lods
mov
outsb
or
nop
cmp
popf
push
jo
dec
mov
es
sbb
shrl
pushfw
push
add
arpl
or
sub
cltd
sub
xor
inc
inc
cmp
sbb
inc
addb
test
xchg
ds
ret
pop
and
sbb
lods
test
push
mov
pop
xor
jmp
stos
int3
jno
xor
mov
repnz
jmp
loopne
shrl
and
nop
cmp
in
jmp
loopne
leave
int3
int3
lock
pop
clc
mov
jge
test
mov
pop
gs
addr16
test
ret
arpl
mov
insl
call
ja
aam
adc
in
mov
insb
out
add
sub
lcall
aad
hlt
add
xchg
inc
or
nop
push
cmpsl
dec
fisttps
ljmp
sub
add
pop
jl
int3
mov
xchg
and
jmp
in
mov
movsl
push
mov
push
or
pop
or
iret
jl
ret
xor
lea
loope
mov
xor
popa
or
cmpsb
sbb
and
cli
cmp
sahf
and
lcall
pop
xor
mov
imul
daa
daa
cli
cmp
push
pop
cmp
cwtl
dec
shlb
iret
add
clc
orl
mov
jge
mov
or
jg
mov
or
add
loopne
lret
push
and
cmc
push
jbe
hlt
in
inc
mov
pushf
stc
test
ljmp
dec
push
push
daa
stos
push
fbld
bound
xlat
sub
inc
ficomps
mov
jne
lods
int
dec
mov
xchg
and
xlat
add
enter
imul
dec
shll
insl
mov
loopne
outsl
aas
sub
stos
adc
nop
cltd
jl
push
xchg
or
stc
mov
mov
out
arpl
repnz
sbb
sbbl
test
fdivs
dec
pusha
mov
cmp
rcl
in
mov
xor
mov
inc
popf
mov
dec
mov
out
bound
pop
jno
aad
jp
aaa
repz
jecxz
leave
sti
call
push
test
mov
mov
aas
dec
inc
cltd
aaa
ror
inc
mov
cld
xor
test
test
push
addr16
jae
loop
xchg
push
xor
adc
shlb
scas
lock
rcl
lcall
push
cli
ret
cli
mov
bound
cmpsb
pop
je
sti
fs
int
dec
push
sub
scas
iret
or
mov
loop
mov
dec
cmpsl
cltd
leave
inc
movsl
rcrb
sub
inc
or
xchg
xchg
adc
cmpsb
sbb
cld
ret
loop
dec
data16
push
sbb
and
in
and
add
cli
shl
in
xor
inc
jge
mov
loope
push
push
inc
insl
add
pushf
je
or
icebp
into
fwait
pusha
test
jb
mov
jbe
loop
cs
test
outsl
enter
inc
jg
ds
sahf
pop
repnz
rcll
idivl
fiaddl
scas
cs
xchg
and
inc
dec
xchg
mov
xor
pop
je
cli
adc
bound
mov
xor
test
jmp
sub
subb
cli
fdivrp
pop
pop
mov
and
jb
mov
mov
cld
inc
lds
cmpsb
sbb
xadd
jp
inc
jne
fucom
lods
test
dec
aas
shll
sti
pushw
mov
add
out
and
dec
inc
inc
lret
pop
add
out
cmpsb
jb
not
mov
inc
popl
pop
out
push
scas
push
fdivrs
xchg
mov
test
out
and
fisttpl
and
rorl
lea
sahf
aam
xchg
lea
out
add
sbbb
sub
dec
cmp
fidivs
add
adc
into
mov
dec
arpl
hlt
xchg
loop
sbb
jle
sahf
ror
movsb
pop
lret
xor
shl
out
gs
pusha
leave
jo
int3
jb
aas
push
dec
clc
arpl
adc
shll
mov
int
xchg
out
iret
mov
sbb
fcoms
dec
jns
inc
lahf
xor
sbb
push
aas
outsl
dec
aaa
mov
push
sahf
mov
adc
fincstp
out
adc
mov
push
dec
pop
cmc
shlb
adc
ljmp
int
push
mov
adc
xor
outsb
sbb
or
mov
rolb
or
int3
clc
pop
movsl
test
mov
and
scas
clc
or
dec
rcr
pushf
fnstenv
mov
mov
in
ficompl
dec
ret
pop
jmp
jg
out
iret
pop
ret
test
xor
adc
mov
pusha
xlat
cltd
in
push
xor
lcall
pop
out
je
xor
test
xor
in
sub
pop
inc
mov
out
daa
push
push
pop
push
stos
xlat
test
lods
xlat
push
mov
rcrl
pushl
adc
mov
mov
mov
xchg
imul
scas
and
test
fdivs
inc
xchg
and
dec
cmc
sub
jge
ret
inc
xor
jno
sbb
pusha
int3
stos
pop
in
call
arpl
sbb
sub
aam
lea
call
test
or
out
cmpsb
addb
ljmp
and
stc
xchg
jne
push
outsb
jne
ret
mov
and
cld
cmpsl
mov
add
lock
or
and
fsts
call
loop
or
cmp
inc
xchg
add
movsb
lahf
lret
push
or
xchg
test
test
pop
cld
fistl
inc
xchg
push
jle
xor
inc
movsb
xchg
or
flds
cmp
mov
adc
pop
dec
pushf
rolb
cs
cwtl
ret
adc
mov
jb
mov
int3
dec
adc
mov
inc
pop
push
test
adc
mov
pop
in
pop
dec
sti
xchg
js
mov
cmp
cs
jae
imul
mov
out
imul
in
lcall
adc
pop
je
je
movsb
xlat
pop
pop
jge
push
xchg
cmp
xchg
sbb
rol
popf
rclb
inc
pop
push
mov
mov
inc
pop
outsb
fsubs
cmp
or
in
mov
cmp
sbb
out
jns
aas
xchg
jb
sub
mov
mov
je
divb
pop
push
and
and
dec
and
xor
lahf
lock
jb
out
mov
mov
mov
push
lcall
cmp
stos
cmp
adc
icebp
pop
ss
call
je
mov
std
push
sbb
pop
and
scas
or
jno
dec
jae
ficoml
dec
mov
jb
add
mov
repnz
rorl
fildll
ret
sbbb
loopne
std
gs
sub
les
aaa
push
sub
fstp
mov
mov
scas
jnp
push
out
mov
sti
aam
out
arpl
dec
aas
add
mov
push
cli
fwait
cld
fwait
inc
xlat
cli
add
pushf
shl
mov
pop
jnp
movsb
xchg
push
xor
pop
mov
jp
and
and
popf
inc
cmp
outsb
mov
xlat
mov
in
pop
repnz
mov
es
mov
xchg
mov
pop
iret
jb
std
add
xchg
adc
add
addr16
imul
repnz
xchg
mov
and
mov
or
inc
lock
cmp
in
mov
mov
js
jp
mov
sub
jnp
and
sub
popf
out
or
dec
dec
pop
pop
in
jge
cmc
inc
out
movsl
pop
pop
and
sbb
enter
fnstsw
fcoms
stc
sub
mulb
dec
mov
sbb
fisttps
jmp
ret
cmp
or
mov
aad
mov
jbe
pop
lret
nop
mov
push
add
and
add
push
xor
cmp
loop
and
daa
repnz
sub
jmp
sub
dec
fs
pop
pushl
in
loop
or
imul
cmp
scas
lret
sbb
int
stos
sbb
daa
mov
call
es
push
lcall
adc
push
dec
test
dec
out
insb
pop
jbe
adc
xchg
scas
popa
mov
out
popf
or
into
out
push
cli
xor
lea
or
shl
jns
pushf
movsl
xchg
push
outsb
test
pop
in
xchg
aaa
mov
adc
call
push
pop
stc
jmp
add
ss
sbb
lods
jge
and
lcall
es
mov
and
in
fsubrl
jge
sub
arpl
inc
fcomps
stos
push
repz
lods
mov
lret
dec
cmp
sbb
mov
clc
add
ret
push
mov
into
mov
mov
sbb
popa
push
adc
cli
mov
adc
inc
adc
sarb
in
mov
push
daa
dec
dec
data16
sub
loop
sbb
mov
xlat
pop
roll
ret
adc
scas
rcrb
ret
cld
xchg
insb
mov
ret
movsl
xor
lods
add
push
jne
mov
lods
and
jb
mov
xchg
sbb
sbb
cld
insl
mov
test
aas
in
push
push
pop
dec
xchg
and
pop
repz
mov
fwait
mov
addr16
sub
aam
subb
insb
dec
lcall
add
pusha
jb
fsubp
xor
xor
adc
add
out
sbb
xchg
add
mov
cmp
ds
enter
iret
fwait
xchg
repz
sti
pop
jl
pop
mov
add
je
push
icebp
jmp
inc
cmpsb
mov
loop
arpl
cs
jmp
test
adc
data16
dec
jae
hlt
adc
push
push
stos
mov
jb
cs
adc
js
xor
lock
out
dec
or
add
lret
or
pushf
xlat
xor
lea
sbb
add
adc
cmp
push
pop
sbb
icebp
outsl
enter
pop
pop
lods
cmp
ja
bound
pop
and
ss
in
push
aad
outsl
xor
loop
in
inc
fcoms
dec
push
jg
cli
cmp
push
xchg
push
jo
xlat
adc
test
insb
loope
movl
enter
inc
mov
xchg
mov
cmp
mov
pusha
and
and
pop
mov
pop
pop
ss
jo,pn
sbb
mov
pushf
mov
mov
addb
mov
cli
sahf
outsl
jne
push
add
mov
xchg
cmp
push
mov
cld
imul
movsl
push
in
xchg
sub
arpl
mov
xchg
aam
lret
xchg
subb
inc
push
push
aam
stos
xor
fdivrs
xor
lds
repnz
mov
xor
cmp
stos
lahf
sti
mov
jp
or
pop
cmp
sbbl
xorl
fcomps
jg
or
xchg
lret
cmp
lods
jle
xor
add
aas
push
push
insb
lret
popa
dec
aad
std
push
dec
cs
dec
sbb
jle
sub
xchg
cltd
mov
fwait
lcall
jl
test
mov
lods
mov
stc
cmp
jne
mov
adc
jle
iret
and
xchg
xchg
sbbb
xchg
hlt
int3
pop
adc
sbb
pop
repz
out
xchg
roll
loope
pop
dec
adc
insb
sub
xchg
loopne
jmp
mov
mov
sub
push
pop
loop
pop
mov
je,pt
loopne
iret
push
hlt
orl
pop
and
shll
sbb
push
inc
lcall
sbb
adc
ud2
cmp
movsl
cmp
inc
out
stc
rclb
jbe
jae
jb
aaa
pushf
pop
pop
adcb
and
out
shll
int
push
bound
stos
xchg
push
jle
shrl
jl
sahf
rcl
inc
or
decb
test
test
mov
and
xor
sbb
pop
popa
mov
push
icebp
pop
xchg
mov
xor
push
loopne
insl
and
fwait
inc
arpl
mov
fisttps
xor
fnstsw
dec
repz
dec
push
xchg
sub
jbe
repz
jp
sbb
out
int
push
test
cli
stos
lret
adc
mov
icebp
cmpsl
dec
mov
scas
enter
fwait
sbb
mov
in
rcrb
sub
jmp
cwtl
fwait
test
inc
in
cmp
data16
sbb
mov
jbe,pt
stos
adc
xchg
mov
jno
imul
or
sti
adc
sub
stc
jl
jno
push
ja
cmpb
sub
shll
or
and
pushf
push
pop
mov
xchg
filds
inc
pop
in
clc
xor
sub
ss
cmp
add
inc
jb
dec
ja
popf
ljmp
xor
in
ficomps
cmp
ds
mov
out
inc
pushf
push
cmp
cmp
clc
cmp
cltd
adc
stos
mov
push
jmp
in
xlat
mov
add
mov
and
inc
aas
xchg
pop
xor
in
pushf
pop
ss
jge
sbb
hlt
ss
and
adc
jle
iret
cmpb
sahf
imul
pushf
xor
in
aam
sub
jle
mov
adc
mov
jl
or
adc
xchg
pop
das
jno
xchg
sti
or
push
mov
divl
adc
and
dec
pop
mov
cltd
sbb
inc
nop
int3
loope
mov
enter
inc
jbe
rcrb
cmp
sub
push
jo
lods
pop
dec
pusha
sbb
dec
int3
mov
hlt
test
repz
nop
cmp
ret
in
sbbb
mov
cltd
xor
sahf
jns
lea
sub
mov
mov
lret
mov
add
mov
lds
repz
mov
lods
push
insb
inc
bound
in
stc
inc
push
dec
fcmovbe
imul
les
in
leave
icebp
inc
sbb
cmpl
cwtl
mov
mov
adc
pop
cs
sar
push
jg
pusha
lea
ret
bswap
xor
test
jne
cmp
inc
subl
adc
xor
jae
cli
add
xor
xchg
cld
sbb
mov
dec
adc
mov
std
fldenv
dec
push
or
and
lods
mov
mov
out
loope
adc
lret
push
pop
leave
or
mov
fidivl
das
daa
es
push
movsl
dec
int
jae
xor
in
sahf
jo
sbbb
sub
in
data16
push
cmpsb
in
jae
movzbl
pop
scas
into
add
sub
pop
lods
add
xor
xchg
mov
mov
data16
xor
push
lods
imul
addb
jae
push
pop
pop
test
add
and
xor
xor
push
push
jae
mov
or
jbe
aam
xorb
loopne
inc
das
cmp
and
insb
or
pushf
mov
rcrb
call
and
jge
bound
into
sub
je
aaa
test
testl
and
daa
into
mov
imul
and
ds
sar
pop
pop
loope
add
test
stos
cwtl
nopl
enter
outsb
cltd
xchg
dec
rcrb
ficomps
or
lods
inc
fildll
mov
mov
adc
rorl
sub
scas
ja
mov
xor
out
pop
add
inc
xchg
pusha
pop
dec
jo
xor
or
xor
and
cli
addr16
jae
enter
and
repnz
hlt
sub
cmpsb
mov
icebp
ds
jl
pop
push
sbb
or
xchg
loopne
sbb
cmpsb
mov
cmp
sahf
sub
pop
inc
fmull
sub
mov
stos
lahf
test
js
xor
add
lret
mov
ret
div
pushaw
je
fsubs
push
cwtl
call
jno
push
push
fists
call
jns
leave
movsb
jo
in
out
shl
sub
mov
mov
pop
push
outsb
mov
cmc
aas
test
or
mov
lcall
jbe
leave
inc
adc
outsl
or
add
popf
rorl
push
cwtl
push
pop
sub
push
test
mov
mov
inc
pop
jge
mov
scas
aaa
jp
push
in
repz
and
lods
mov
addr16
iret
cmp
sub
or
in
int3
mov
mov
bswap
mov
insb
lahf
imul
mov
jne
pop
jl
mov
jl
orl
push
jne
mov
int3
cltd
nop
scas
jnp
loopne
into
repnz
jnp
ja
fldpi
dec
or
push
xlat
add
mov
push
out
sub
leave
pop
les
clc
in
push
in
testl
aaa
andl
jp
shl
sahf
pop
and
pop
inc
loopne
cmpsb
daa
mov
dec
daa
std
pop
mov
outsb
in
add
ret
xorl
sub
stc
sbb
and
call
cmc
mov
pop
in
rep
test
std
in
inc
dec
or
xor
xchg
xchg
cmp
mov
sbb
mov
aaa
loope
mov
cmc
movsl
mov
insl
xchg
inc
loop
mov
pop
out
int
inc
test
xor
maxps
popf
jle
mov
mov
call
jb
paddw
lea
mov
je
in
sub
mov
in
gs
pop
sbb
mov
in
dec
mov
shrb
data16
shrl
sbb
pop
add
xchg
int
push
aad
cmpxchg
mov
lds
mov
cwtl
aaa
scas
test
shll
pop
andl
rclb
push
push
insb
outsl
push
repnz
or
pop
ja
lods
ljmp
test
and
jmp
adc
test
inc
sub
popf
push
shrb
mov
inc
xchg
aaa
xchg
scas
push
loope
inc
stc
movsb
mov
mov
outsl
mov
leave
add
aad
enter
push
dec
and
bound
mov
sub
nop
mov
pop
movsl
sub
repnz
jl
xchg
push
cwtl
std
cld
xor
xchg
xor
jae
lret
iret
xor
jmp
push
push
push
daa
lea
cs
mov
mov
push
clc
jle
xor
inc
rcll
shlb
out
in
aaa
sub
shl
aas
ja
ficompl
lahf
sub
test
cmp
inc
sahf
dec
enterw
repnz
je
stos
cli
jbe
lods
mov
lret
xor
mov
push
jne
add
xor
xchg
ja
inc
and
jo
xchg
jecxz
and
lock
mov
ss
cmp
xchg
into
cmp
adc
dec
add
or
outsb
mov
fldcw
inc
sub
lods
mov
xchg
push
jne
sbb
inc
sub
or
mov
pop
mov
mov
adc
cmc
xor
xor
dec
test
aam
pop
push
lahf
sbb
ret
inc
push
jbe
in
lcall
fucomp
sub
insb
pop
cmp
shrl
inc
mov
les
pop
xchg
mov
cmp
in
in
sub
jmp
dec
cmpsb
inc
and
test
xor
jle
loope
fwait
push
dec
lds
sub
outsl
jl
jmp
add
push
fists
xchg
mov
xor
pop
dec
mov
pop
enter
cmpsl
mov
push
or
dec
push
cmpsb
pusha
lods
sti
test
and
outsl
mov
adc
sbb
jecxz
xchg
jmp
sub
dec
xchg
lods
cwtl
cmpb
push
xor
loopne
pop
and
sti
push
mov
and
in
and
test
sbb
cmp
adc
hlt
and
out
mov
sbb
dec
stos
add
pop
xchg
lds
not
mov
adc
push
shlb
mov
cmp
lea
xchg
and
ja
sub
repz
notb
and
mov
mov
test
and
cli
sahf
daa
push
xchg
aam
or
or
fsubrl
xchg
int
and
roll
bound
or
cmp
cmp
fwait
adc
dec
xchg
jo
cltd
pop
into
mov
std
jge
ja
in
push
push
sub
in
roll
int
push
pushf
int
push
jae
push
or
inc
pop
mov
addr16
pushf
aad
test
call
aas
aaa
mov
xchg
or
movb
or
inc
sbb
push
mov
mov
and
int3
jmp
or
push
cltd
push
pop
enter
mov
outsl
adc
aad
add
mov
add
aas
inc
divb
pushf
orl
movsl
jge
jo
or
scas
mov
add
mov
std
lret
jmp
inc
cmp
call
jnp
gs
outsl
pop
jae
lock
cmp
pop
aad
scas
ss
loopne
movsl
or
mov
cmpsb
dec
or
repz
movsl
decb
loop
in
ja
out
add
fucomip
pop
dec
cmp
dec
es
lret
xchg
adc
xchg
inc
hlt
test
out
scas
mov
adc
jl
add
sub
sarl
sub
ljmp
repnz
fs
sti
mov
lcall
mov
cmp
inc
sar
push
rolb
int
xor
push
mov
pop
aad
xchg
popa
loopne
icebp
outsb
xchg
jnp
pushf
addr16
mov
ret
jmp
mov
inc
gs
scas
aam
outsl
xchg
and
out
cmp
jmp
sub
or
insb
sbb
iret
fstp
sub
inc
dec
scas
pop
or
push
xchg
out
xchg
xchg
add
mul
enter
fyl2x
push
sarl
call
lret
cmp
cltd
mov
xchg
mull
insl
lret
push
and
ss
xlat
js
out
mulb
pusha
jg
jbe
add
sarl
sbb
mov
int
xor
out
rol
nop
lret
out
pop
out
mov
jb,pn
xchg
andb
or
lds
aam
mov
insl
pop
cltd
fadd
jbe
sub
xchg
xor
mov
aaa
and
shll
adc
in
das
dec
dec
add
pop
test
pop
rolb
inc
adcl
pop
test
xchg
sub
fisttpll
mov
jno
mov
in
pop
jno
ljmp
fninit
movb
cmc
cmp
loope
dec
subb
or
aam
xchg
cmp
ja
push
int
into
movl
jae
arpl
jmp
insb
xchg
push
push
sbb
dec
scas
lret
ljmp
call
fisubrl
pop
sbb
mov
mov
js
negb
nop
sbb
push
mov
inc
sub
pop
clc
sbb
xor
mov
mov
insl
push
mov
mov
adc
mov
punpckldq
clc
int
push
pop
test
push
cwtl
sub
les
add
xlat
bswap
mov
lea
stos
sbb
xor
in
xor
dec
pop
mov
cmp
mov
pusha
outsl
lahf
add
xchg
jnp
divb
xor
test
pop
mov
pop
pop
stos
inc
inc
xor
xor
icebp
dec
mov
imull
mov
popf
mov
in
movsl
fs
push
jl
shll
dec
mov
int
xchg
bound
es
dec
adc
and
shrl
cld
lock
out
mov
nop
mov
dec
cmp
scas
imull
out
mov
ret
nop
jge
pop
ja
fstpl
stc
or
fisubl
mov
mov
rcl
aad
fs
mov
sbb
or
mov
or
mov
orb
sbb
rcrl
cwtl
data16
cmp
push
mov
dec
jl
jp
pop
cltd
out
int3
ficoms
loopne
loope
sarb
pop
xor
xor
jge
aad
pop
mov
cld
lahf
jecxz
sbb
adc
mov
loope
test
cmp
pop
dec
push
movsl
jbe
push
std
stc
mov
dec
jno
movd
stc
jmp
decb
jp
inc
aad
push
adcb
mov
iret
insl
sub
xchg
stos
movb
mov
mul
mov
mov
jecxz
aas
pop
ljmp
lods
les
shlb
cmp
das
insb
mov
cs
out
fistpl
push
int
xchg
popf
pop
and
mov
repnz
outsb
jmp
lock
jbe
stos
or
push
lcall
jne
dec
movsb
add
push
mov
stos
mov
mov
push
push
ficoms
jnp
push
loop
ja
mov
movsb
cmp
mov
iret
cmpsl
and
or
divl
jno
sahf
test
popa
js
popf
jbe
daa
frstpm(287
nop
pop
push
xor
mov
inc
sbb
ss
mov
dec
dec
aad
inc
test
jae
mov
out
outsb
subl
adc
sahf
sbbl
mov
push
dec
arpl
les
mov
mov
jmp
jge
jmp
pop
push
sbb
push
adc
nop
scas
mov
xlat
pop
mov
shll
mov
mov
xor
rorb
fisubs
sub
mov
or
ret
push
xchg
xchg
jnp
lods
ja
jnp
cmc
mov
rcrl
dec
pop
jo
ja
mov
xchg
je
decl
in
cmpb
jp
fstps
cmpsl
dec
add
arpl
inc
insb
inc
clc
jno
mov
xchg
dec
xor
test
repz
xor
adcl
lret
out
mov
scas
stos
sub
rcl
mov
dec
mov
aas
fnsave
push
jns
je
jnp
mov
jg
inc
adc
push
push
into
cmp
xor
xrelease
mov
enter
add
push
jle
push
push
gs
mov
subl
pop
or
mov
nop
fists
jge
neg
jecxz
and
dec
and
push
jge
push
and
scas
push
out
push
lahf
pushf
pop
xchg
shr
gs
out
rolb
sbb
aam
test
int3
add
mov
cmp
inc
push
mov
and
mov
nop
inc
pop
fdivr
mov
psubsw
hlt
dec
cwtl
dec
stc
repnz
xor
js
nop
ret
or
mov
outsb
clc
aad
cs
loop
test
out
in
xchg
daa
out
dec
adc
sub
mov
fdivrs
mov
mov
jns
cmp
sub
add
jns
jns
lahf
js
sub
jae
add
stos
shlb
and
inc
adcl
jnp
icebp
movsl
adc
jnp
loopne
lret
push
mov
stos
adc
dec
inc
repz
sbb
lods
inc
pushfw
mov
ds
inc
mov
lret
arpl
mov
xchg
mov
push
sahf
pop
fidivrs
adc
push
mov
aaa
sbb
mov
insl
jg
in
les
mov
mov
scas
ja
xchg
mov
int3
ss
xchg
xchg
xor
cmp
icebp
dec
rorb
lret
mov
scas
push
inc
int
dec
and
and
and
imul
imul
ja
leave
push
stos
inc
xchg
rcll
dec
push
cmc
push
aam
ljmp
jmp
imul
shlb
inc
mov
decl
cli
xchg
stc
push
addr16
lahf
xchg
loopne
mov
sarl
fscale
pop
jno
cmc
and
mov
inc
adc
call
out
sbb
sbb
inc
mov
adc
mov
jbe
mov
dec
in
loopne
dec
ret
test
xchg
push
neg
cmpsb
mov
add
add
sarl
aaa
cmp
fmull
or
int
loope
push
subl
test
sahf
pop
call
cmc
std
mov
cmp
cmpsl
pop
jg
sbb
in
out
and
xchg
into
outsb
roll
jg
pop
imul
jo
adc
or
dec
aad
and
loope
insb
mov
ds
jb
cmp
mov
lcall
sbb
xorl
outsl
dec
pop
cmpsb
dec
xor
insl
repnz
clc
fmuls
cmp
cwtl
jns
pop
jae
movb
mov
js
jmp
xchg
adcl
sbb
xor
sbb
mov
stos
insb
pop
outsb
cmp
push
pop
outsl
inc
xchg
mov
jl
aaa
xor
pop
test
in
and
mov
out
inc
or
es
add
sbb
into
pop
mov
jmp
sbb
push
jmp
push
das
xorb
add
dec
imul
lea
xchg
mov
push
pop
in
add
ljmp
push
enter
jno
xlat
inc
daa
fucom
jae
fcmove
aam
sbb
or
mov
inc
insb
cmp
lea
lods
out
add
sub
jne
inc
pop
je
push
enter
out
nop
aam
outsb
imul
or
fildl
fistl
cmp
cltd
fistpll
mov
push
sti
cltd
imul
pusha
push
pushf
lods
jecxz
push
pusha
lret
mov
arpl
lods
ret
mov
cmp
outsl
xor
fcompl
inc
loop
mov
dec
shrl
pop
sub
pop
fisubrl
jns
out
fistl
aas
cmpsl
push
js
sub
fs
sbb
fldl
cmc
movsb
mov
imul
aam
dec
movsl
call
mov
mov
stos
push
mov
rolb
adc
lea
imul
outsb
push
scas
mov
cmp
pop
mov
scas
cld
xchg
inc
popf
scas
jae
sbb
mov
add
pop
gs
mov
xchg
cmp
repz
sbb
lock
enter
adc
cs
cmp
clc
pop
sub
jb
jp
adc
addr16
pop
std
xchg
bound
xchg
xchg
fisubl
rorl
mov
outsb
aaa
std
std
cmp
fdivrl
push
movsl
ss
movsb
ja
xorl
scas
sub
jle
sbb
adc
outsb
ret
dec
pop
push
sbb
sub
sub
fdivr
cmp
cmp
scas
lock
int3
push
iret
enter
mov
push
ficoml
sub
shl
nop
cmp
mov
and
outsb
xchg
mov
jmp
and
mov
sub
push
or
in
jne
sub
or
mov
nop
dec
push
shl
ja
jnp
sub
sbb
lds
adc
iret
loopne
cmc
sub
ljmp
cmp
scas
insl
movsl
inc
ja
addb
mov
mov
negl
sub
pop
jno
or
stos
loopne
cmp
repnz
push
in
jmp
and
lods
or
lods
lods
xor
sbb
mov
inc
ljmp
mov
mov
imul
xor
mov
push
mov
out
outsl
inc
fdivrs
rclb
das
lea
jmp
enter
cmp
mov
xchg
jecxz
mov
lret
add
mov
repz
mov
ss
lods
in
xchg
pop
inc
out
loopne
cli
mov
movsl
and
inc
cs
lock
nop
iret
sbb
fwait
inc
jb
add
sbb
repz
test
dec
sbb
fisubrs
fadds
sub
dec
arpl
pop
dec
in
out
icebp
pusha
jge
imul
insl
inc
dec
add
pop
push
jne
enter
mov
push
inc
icebp
jbe
pop
pop
dec
pop
adc
sbb
adc
ds
mov
jge
jo
jge
stos
cmc
mov
pop
leave
mov
mov
mulb
inc
test
xor
imul
sti
push
fs
push
and
mov
out
daa
dec
jmp
test
cmp
pop
or
cmp
xor
imul
sbb
clc
or
cmpsl
mov
scas
sbb
xor
and
add
fadd
idiv
jnp
fs
rcll
movsb
rorl
cmp
inc
jg
sahf
orl
cmp
add
jbe
out
mov
test
xor
or
loopne
lahf
fsubrl
fiadds
scas
sti
into
cmp
mov
daa
add
push
mov
xor
lcall
dec
imul
insl
inc
lret
dec
sbb
ror
dec
leave
lret
pop
lods
inc
jae
push
sahf
loope
xlat
pop
adc
fwait
pop
rcrb
call
cmpsb
or
daa
mov
ret
and
in
add
jecxz
outsb
pop
lock
sbb
gs
mov
jns
outsb
or
jae
lcall
cld
dec
push
xchg
ja
lcall
aaa
sub
push
shrb
jbe
sub
gs
cmpsb
bound
dec
push
add
out
cs
cltd
xchg
scas
rcrb
bound
je
pop
sbb
mov
pushf
mov
jne
mov
inc
jno
es
xorl
mov
adc
add
addr16
pop
sbb
sbb
xchg
in
sbb
sub
insb
mov
scas
and
popf
sahf
push
adc
insl
lcall
cmp
inc
xchg
stos
and
es
pusha
mov
inc
icebp
push
push
sti
jne
xchg
and
push
inc
inc
mov
push
add
push
xlat
inc
mov
pop
gs
fadds
icebp
push
jecxz
or
pop
jb
stos
outsl
dec
inc
adc
pop
dec
movsb
aas
or
xchg
adcl
imul
push
mov
dec
cltd
jp
adc
mov
jp
and
jne
cs
ja
lret
mov
call
xchg
push
iret
jge
xchg
xor
cmp
sub
adc
and
in
jbe
adc
push
adc
sub
lods
adc
add
mov
xchg
addb
inc
mov
insb
roll
js
lds
or
in
inc
stc
ret
mov
jp
push
out
inc
arpl
cwtl
mov
movsb
cmp
test
pushf
loop
push
push
and
lret
loopne
sbb
jns
mov
and
or
fs
dec
js
int3
cmp
cltd
ss
jnp
mov
test
xchg
push
mov
add
sbb
dec
nop
jne
adcb
out
jb
jl
loope
cmp
ss
cmp
mov
cmp
fldt
sahf
push
leave
and
pop
mov
mov
les
fidivs
inc
in
jmp
adcb
clc
cmpsb
cmp
cmp
cli
xlat
cwtl
dec
sub
in
or
in
flds
mov
sarl
outsl
push
push
xchg
es
out
sahf
xchg
add
push
aam
cmpsl
in
lret
push
lahf
adc
dec
mov
inc
shl
dec
ss
stos
sbb
pop
pop
fsubr
xor
xor
jno
xor
stc
enter
loop
xor
adc
insb
fsubs
sub
and
js
loop
insl
adc
sub
push
push
or
cmp
pushf
dec
idivb
and
push
mov
mov
mov
or
add
xlat
jnp
mov
enter
jmp
inc
inc
push
jne
dec
je
jmp
iret
pop
xor
xor
gs
jmp
cltd
ljmp
addl
xchg
add
out
xchg
jns
adc
sub
lds
or
or
mov
push
jp
shlb
sub
push
jle
cmpsb
popa
inc
cld
jle
cmp
mov
xchg
fs
cli
setp
xor
sbb
dec
pop
jns
mov
push
push
lds
xor
inc
in
mov
mov
add
cmpsl
inc
fisubrl
jl
pop
jne
cmpsb
bound
mov
popf
lahf
dec
fs
fistl
dec
mov
cmp
ret
push
insb
cli
aad
test
ret
hlt
daa
orb
sub
data16
push
pop
sbb
xor
add
and
out
icebp
xor
aad
loop
pushf
setne
fistps
dec
fcmovne
add
test
test
cmp
popf
cli
dec
add
stos
dec
stos
jnp
mov
sub
mov
jp
outsl
das
mov
imulb
sub
jle
adc
aam
dec
ret
mov
push
rclb
sbb
pop
push
in
mov
subl
xchg
insb
ror
push
jg
jge
xor
out
lcall
shlb
mov
pop
and
mov
into
pop
push
jge
and
dec
xor
cli
outsl
add
xchg
loopne
push
jl
or
pusha
xchg
mov
test
out
lea
gs
aas
xchg
dec
dec
cmp
cltd
movsb
pop
das
cmp
test
xchg
lea
xchg
fisttps
mov
jp
shr
cmc
jne
mov
es
dec
push
fwait
outsl
jp
sub
stos
inc
jo
push
insb
xchg
inc
pop
stc
push
notl
and
pop
adc
aaa
pop
in
lret
pop
push
sub
ds
in
xlat
shrl
mov
lret
dec
in
sbb
xchg
adc
xor
mov
push
mov
mov
dec
sub
outsl
pop
inc
call
cld
inc
mov
out
out
mov
outsb
or
sarb
add
outsl
lahf
mov
add
push
ss
lods
xchg
sti
adc
xor
popa
mov
lods
sbb
inc
cmp
sbb
scas
or
sub
xor
insl
addb
loopne
test
jb
sbb
mov
neg
push
rolb
pop
adc
js
mov
imul
out
dec
icebp
adc
cmp
add
sahf
jb
insb
mov
jno
incb
ljmp
out
xor
fstps
dec
sti
jmp
push
inc
jae
dec
subl
push
repz
sarl
ret
lods
rorl
push
mov
xor
xor
mov
popl
inc
cmc
mov
mov
imul
lods
fs
fcmovbe
fs
jle
jg
dec
mov
sub
mov
mov
pop
jge
in
push
and
cmp
stos
xchg
data16
andl
lcall
out
push
pop
data16
clc
inc
jne
adc
mov
push
mov
je
orb
mov
in
fwait
mov
sub
pop
adc
mov
jg
mov
movsb
xchg
inc
jle
js
orl
cmp
jnp
add
sbbl
mov
or
sub
out
mov
sti
cli
shrl
xor
lods
aaa
add
fmuls
ljmp
and
cmc
sbb
pop
push
sti
stc
dec
mov
mov
mov
int
in
xchg
icebp
adc
add
mov
jb
test
lret
aad
xorb
and
pushf
or
adc
pop
clc
dec
mov
into
xor
faddl
call
or
lea
and
mov
add
aam
in
sub
or
inc
dec
pop
ficoml
adcb
in
pop
push
cli
adc
fidivl
push
push
test
jge
sub
test
cmp
movsb
pusha
stos
je
mov
mov
pop
cmp
xchg
inc
rorl
stc
out
clc
ret
xchg
jo
test
lahf
ja
push
sahf
pushf
in
mov
mov
jo
mov
and
out
sub
jmp
xchg
cs
push
add
insb
xchg
addr16
fisubl
mov
stos
sarb
or
mov
pop
adc
sbb
in
adc
std
pop
sub
jne
push
xchg
dec
call
icebp
inc
xor
jbe
int
sub
xchg
adc
fwait
movsb
cltd
mov
sbb
xchg
jge
test
mov
ja
jg
icebp
pop
cmp
aad
cmpsl
jb
fdivs
fwait
outsb
sub
adc
mov
repnz
mov
arpl
lahf
ss
sbb
mov
loope
push
adc
popf
ret
and
xchg
stos
mov
or
insb
push
lcall
sbb
ja
dec
mov
xor
jno
aas
xor
mov
sub
iret
mov
pop
rorl
adc
mov
adc
in
xor
mov
cmp
mov
outsl
pop
in
inc
and
int
xchg
test
push
cld
pop
out
pop
inc
push
dec
dec
push
int
and
shlb
mov
lcall
int
lock
mov
loop
loop
push
daa
rep
jno
fs
cltd
push
hlt
lahf
pop
dec
xor
aas
pop
mov
cld
inc
mov
push
push
inc
idivl
cwtl
jge
es
repnz
loope
dec
sbb
mov
inc
aaa
xchg
jg
mov
sbb
inc
out
lds
ljmp
pop
xchg
int
mov
push
mov
mov
or
inc
iret
popa
data16
pop
push
push
xlat
fdivrp
cmp
scas
mov
test
roll
lods
sbb
ss
jge
mov
xchg
xchg
lock
or
cmpsl
sbb
xchg
nop
int3
jp
flds
inc
pop
aad
cli
jb
dec
test
inc
insl
push
movsl
mov
pop
rcl
ljmp
inc
lahf
lahf
int3
fidivl
dec
loop
in
lret
sub
jp
outsb
rcrl
rcrl
jg
inc
out
cmp
cmp
xlat
xchg
orl
xchg
bound
pushf
add
and
mov
pop
cld
xchg
and
cli
enter
xchg
add
push
cmp
addr16
stos
jle
lods
andb
xchg
adc
hlt
push
jle
push
imul
pusha
sbb
xchg
dec
dec
dec
xor
aaa
xor
nop
or
xchg
mov
ds
hlt
addl
ss
scas
adc
xor
adc
dec
into
cmpsl
push
imul
mov
sub
mov
fstpt
out
sbb
rcrb
dec
push
xor
lock
nop
sub
cmpl
adc
test
jle
jp
rorb
repnz
ja
cmp
test
insl
xor
sbb
push
out
enter
movsb
pop
mov
insb
pop
push
adc
push
dec
pop
push
clc
sub
data16
sbb
cmpsl
mov
mov
and
inc
int
jb
out
cmc
mov
data16
je
dec
repz
lahf
in
cwtl
cmp
pop
xor
imul
mov
in
mov
adcb
cmc
push
cmp
shl
inc
dec
and
or
int
cli
push
std
push
mov
lea
push
cmp
push
movsl
in
fcmovnb
movsl
jmp
cmp
or
push
push
inc
dec
out
xchg
sub
xor
push
in
lcall
test
jnp
mov
in
mov
std
xchg
cmc
out
test
loope
stos
das
int3
loop
mov
in
push
pop
jge
adc
mov
shlb
nop
push
test
in
adc
fistpll
push
xor
int3
mov
ret
imul
sub
push
jecxz
mov
loope
mov
test
push
shr
jl
imul
lock
fisubrs
cmpsb
adc
mov
pop
pushf
lret
jg
sub
mov
out
sub
add
sbbw
pushf
std
mov
adc
jle
jmp
and
xor
sahf
sahf
outsl
pop
lcall
mov
pop
out
jmp
sbb
sahf
pop
sti
xchg
xchg
xchg
ja
outsl
in
mov
in
sub
sbb
out
jns
nop
adc
out
rclb
out
popa
inc
jmp
sub
inc
je
das
cmp
jmp
sbb
and
mul
int
test
lods
jae
push
gs
flds
test
inc
fistpl
cmpsl
aas
imull
out
inc
movsl
xchg
add
sbb
shrl
cmp
cmp
aas
jo
adc
add
js
inc
xor
sbb
push
add
push
lods
xor
aam
std
test
mov
vpaddd
insl
push
loope
loop
adc
rcrl
test
pop
jnp
and
dec
aad
inc
push
inc
mov
jmp
push
xchg
loopne
mov
xchg
jge
pop
jmp
mov
js
lcall
cs
negl
ss
push
push
push
xor
inc
outsl
xchg
into
int3
lahf
xchg
or
sbb
call
mov
and
jl
ljmp
jbe
adc
cmp
pop
adcb
jbe
pop
fcomps
or
inc
rcr
mov
hlt
pop
orl
clc
and
inc
mov
sub
adc
cltd
adc
and
jns
in
lcall
shl
adc
repnz
rol
cmpl
mov
mov
in
mov
jne
dec
cmp
xchg
addr16
sti
pushf
pop
mov
mov
scas
in
in
fucomi
add
jns
loopne
arpl
jg
and
fimuls
shr
inc
xchg
sbb
into
jno
hlt
adc
push
dec
cld
test
mov
cs
lea
ds
push
xor
scas
stos
adc
mov
xchg
movsb
push
mov
loopne
pop
fidivl
movsl
inc
jmp
push
inc
mov
loopne
jp
sub
dec
push
inc
gs
fnsave
loopne
pop
lret
aaa
loope
jo
pusha
sub
nop
out
mov
fldenv
lret
nop
shrb
dec
idivl
enter
sub
sub
push
ds
sbb
fxch
ljmp
js
lcall
push
inc
fists
and
lods
leave
dec
in
insl
and
addb
pop
imul
xor
movsb
ljmp
loop
iret
aaa
inc
test
icebp
cli
cmpsl
mov
call
add
repnz
push
jge
add
sbb
push
or
mov
insl
sbb
jmp
and
sbb
mov
rcll
outsl
popf
aas
sbb
sbb
jnp
arpl
jmp
push
int3
ret
jno
shl
jno
pushf
lods
test
adc
or
pop
push
in
icebp
cltd
aad
pop
ss
dec
sub
jae,pn
mov
add
fsubs
xchg
subb
jnp
cmpsl
scas
lcall
xor
dec
sub
and
lock
adc
mov
cltd
pop
aaa
xchg
divb
dec
xlat
in
adc
ret
dec
outsb
hlt
std
popa
add
into
insb
sahf
or
ficomps
mov
or
fisttpll
ret
xchg
adc
push
jns
xchg
loope
lods
inc
scas
and
pop
dec
push
mov
pop
sarl
inc
mov
loopne
in
nop
sbb
inc
mov
fldenv
push
lods
and
sub
jae
loope
xor
jge
sbb
je
mov
push
or
bound
cmp
fneni(8087
sub
ficomps
or
mov
out
xor
pop
mov
xor
test
sbb
sub
or
aam
cmp
or
jge
ret
pop
add
adc
and
int3
mov
jnp
bound
out
adc
pusha
and
mov
popa
dec
scas
mov
jmp
mov
push
in
xchg
ljmp
bnd
push
jl
mov
xor
xor
dec
xor
popf
dec
cmpsb
sbb
or
cs
ljmp
xchg
and
mov
test
daa
addl
inc
xchg
mov
pop
cld
in
and
cmp
loopne
sub
xor
and
mov
mov
popa
mov
arpl
jmp
xchg
js
dec
aas
push
add
arpl
in
outsb
imul
out
mov
dec
test
cmp
and
or
aaa
xor
mull
test
fcoms
lods
int
icebp
adc
rorb
shrb
insl
outsl
hlt
test
pop
cli
or
test
sti
sub
stos
test
and
push
push
mov
or
mov
xchg
cmp
mov
out
lahf
adc
adcb
inc
lret
hlt
shlb
out
sahf
jns
ja
push
jle
and
or
sub
out
aaa
inc
mov
pop
mov
bound
mov
cmpsl
and
enter
daa
jp
addb
or
push
inc
hlt
clc
dec
ret
mov
inc
push
addr16
push
jne
sbb
decb
jne
xchg
push
mov
jg
popf
sbb
adc
pushf
sarl
movsl
xchg
popf
shll
aam
add
gs
test
dec
sub
shl
inc
rol
mov
inc
and
push
mov
dec
loopew
jle
push
xchg
enter
push
sbb
loope
dec
rorl
push
mov
or
in
dec
pop
fmuls
mov
out
mov
push
out
cmpsl
lds
test
mov
mov
mov
add
jge
xor
xor
pop
out
insl
xor
jl
jle
add
or
repz
fwait
push
repz
xchg
mov
fisttps
mov
pushf
jns
cmpsb
mov
add
mov
cmpsb
sub
sbb
addr16
adc
xor
inc
movb
pushf
aad
std
jb
pop
push
jg
orl
xchg
or
test
std
aas
mov
mov
jns
shrl
jl
out
fs
dec
aad
movsb
mov
sub
pop
mov
pop
jecxz
sbb
jbe
push
mov
mov
xor
fisttps
pop
xor
movsb
arpl
cmpb
sbb
push
push
cli
push
pushf
and
pop
shrb
je
pop
ja
pop
out
xor
adc
sbb
insb
std
pop
fildl
cmpsb
sarl
aam
pop
sbb
clc
das
loop
mov
int3
mov
arpl
mov
fwait
inc
jmp
adc
repz
push
mov
cmp
pop
push
push
adc
push
adc
xchg
out
js
lods
sbb
andb
and
inc
or
cwtl
adc
out
jmp
or
dec
ljmp
jge
add
mov
pop
fldcw
popf
out
pop
in
jmp
pusha
dec
daa
sbb
push
mov
pop
or
mov
pusha
inc
xchg
movsl
repz
aaa
mov
ljmp
enter
or
and
push
cmpsb
aam
or
leave
cmp
das
pop
into
out
bound
pop
pop
fistpl
sbb
fcmovnb
neg
jae
ds
pop
adc
test
fbld
xchg
scas
push
clc
dec
pop
mov
push
out
out
fstpl
push
aas
xchg
outsb
push
lock
nop
xchg
mov
inc
pop
xlat
sub
jl
scas
lret
js
outsb
loope
mov
nop
out
adc
js
fdivrs
lret
ss
dec
movsl
imul
ret
mov
pop
dec
inc
xchg
popa
in
repz
adc
push
mov
sub
xchg
or
sbb
push
pop
aaa
sub
jmp
in
add
mov
sub
shll
cmp
or
mov
fsubrl
adc
mov
imul
js
inc
shlb
data16
sbb
sub
push
and
or
movsl
pop
dec
push
sti
sub
xor
fisubrs
stos
sbb
and
mull
out
inc
jmp
sbb
xor
adc
shl
pop
neg
mov
inc
ja
add
inc
into
icebp
pop
adc
das
data16
jle
jle
enter
xor
mov
inc
or
dec
mov
jg
inc
mov
xchg
stos
ds
roll
popf
xchg
add
jnp
cli
icebp
sbb
dec
inc
mov
scas
lds
sarb
mov
jae
pop
dec
shr
das
cs
mov
arpl
lret
sbb
inc
test
sbb
stc
xlat
stos
jg
pushf
mov
lock
jo
fsubr
std
bnd
out
push
aaa
into
sub
les
push
rolb
inc
mov
shrl
mov
test
xor
mov
inc
rorl
xor
push
mov
ds
jo
adc
cmp
daa
jns
push
sub
inc
jb
leave
add
in
fisttpl
das
jmp
and
mov
cmp
mov
out
stos
mov
push
or
lock
jecxz
fbstp
xor
fbld
inc
into
cmp
out
sbbb
jecxz
pop
mov
push
ret
pop
mov
lret
or
je
mov
test
test
push
push
push
mov
loopne
push
ds
aad
sarb
mov
std
push
jns
scas
dec
push
ss
jae
fs
fidivl
cltd
inc
push
xor
push
out
js
rol
pop
leave
mov
sysenter
gs
inc
scas
test
mov
aad
mov
mov
dec
cli
das
icebp
in
add
pop
push
test
inc
dec
iret
sbb
loope
xchg
ljmp
add
sub
rcr
aaa
ds
cmp
dec
aaa
fs
shlb
inc
test
addl
loope
ret
movsl
and
cmp
nop
add
pushw
ljmp
cld
xchg
or
loop
cwtl
adc
pop
adc
push
lods
je
jl
jnp
adc
rorb
sbb
lods
jnp
dec
xlat
pop
add
in
aaa
mov
shlb
enter
arpl
in
mov
and
push
xor
dec
xchg
jg
push
or
pop
in
mov
int3
enter
stc
mov
shrl
cmp
mov
push
sub
xor
jno
mov
cmc
fwait
arpl
xorl
aaa
js
in
cmp
and
nop
pop
scas
sbb
and
mov
ljmp
mov
mov
cmpl
jno
cmpsl
cmp
or
out
aaa
pusha
pop
and
lods
sub
sub
push
aaa
loope
push
dec
int
mov
pop
pushf
adc
jecxz
add
cmp
jge
aam
movsb
inc
pop
mov
and
pop
stos
pop
sub
pushf
or
adc
dec
push
lcall
add
fistpll
mov
and
fs
lahf
loopne
pop
ja
das
lea
adc
movsb
scas
and
lock
negl
mov
push
mov
sub
pop
out
clc
lods
add
mov
cli
fwait
les
add
stos
and
inc
jne
jo
fcmovnu
scas
mov
or
mov
pop
xchg
adc
xchg
stos
mov
fldl
test
cs
fs
jno
xlat
cmp
lahf
out
fldcw
sub
dec
mov
sub
inc
rolb
rorb
jecxz
mov
dec
push
test
mov
mov
mov
cmpsl
jo
stos
aas
jne
inc
ds
repnz
fisttpl
mov
das
negb
lock
xchg
psllw
fs
cmp
jo
jns
push
shlb
les
aad
imul
add
mov
cli
or
push
fimuls
jns
call
bound
leave
lcall
inc
mov
js
mov
or
jl
add
xor
outsl
test
repz
mov
lds
int
shll
scas
sbb
sub
and
xor
pop
sbb
mov
cld
pop
mov
push
cmp
rol
mov
mov
arpl
out
cmp
fldt
in
push
xlat
fs
mov
lods
sub
and
add
push
mov
cmpsb
sub
push
add
test
cld
mov
adc
out
les
popa
icebp
sub
dec
lret
add
loop
cs
scas
and
cmp
sbb
or
jo
in
jle
push
and
idivb
mov
sub
scas
cmp
sbb
mov
mov
inc
dec
and
cmp
mov
cmp
call
mov
fimull
jne
lcall
add
in
adc
and
mov
test
sub
rorb
jp
test
js
adc
and
cmp
jle
les
mov
xor
jno
bnd
mov
cmpsb
sub
xor
mov
push
js
adc
test
mov
pop
js,pn
std
dec
mov
xor
jle
insl
jo
mov
jmp
lds
sahf
inc
sbb
dec
cmpsb
jl
outsl
sub
imul
mov
ret
sti
mov
fsubrl
sub
out
imul
or
ror
dec
mov
ja
cmpsl
rep
mov
out
dec
ffree
repnz
sub
inc
lock
outsl
and
xlat
and
and
xor
insb
loop
or
jg
stos
add
adc
sub
lcall
andb
aam
push
mov
push
dec
ja
lea
push
push
cmpsl
out
int
jle
jl
adc
decb
xchg
andb
ret
test
xor
dec
cmp
sbb
xchg
add
pop
rorl
negl
pop
dec
sub
scas
js
cmp
test
or
ljmp
lret
mov
mov
mov
xchg
fiaddl
mov
mov
popf
hlt
or
sbb
shrb
daa
inc
decb
push
cmc
and
stos
sbb
mov
repz
xor
pop
inc
fwait
sub
sbb
ljmp
test
mov
movsl
loope
xorl
data16
movsb
inc
sbb
jl
jl
aad
cmpsb
lcall
notl
pop
jp
insb
lds
into
push
stos
and
cmpsb
xchg
std
and
in
subl
mov
rcrb
and
fiaddl
data16
push
cli
inc
nopl
sbb
lahf
insl
or
xchg
aam
push
xor
jae
push
out
adc
enter
mov
je
pop
sarb
sub
jmp
pop
fsubs
into
pushf
movsb
outsb
xchg
shrb
gs
in
lret
add
incl
pop
inc
xchg
dec
js
rol
fstpt
fiadds
xchg
aaa
and
addr16
mov
sub
in
cmpsl
daa
dec
push
push
test
cmp
cmp
cld
lds
push
and
enter
hlt
in
das
pop
fnstcw
dec
sub
adc
sbb
shll
in
jmp
inc
dec
loope
xchg
push
mov
mov
sbb
data16
sub
xchg
jl
push
lret
add
mov
lods
aas
cmp
cmpsl
orl
lods
adc
xchg
mov
scas
lahf
out
xchg
pusha
in
mov
dec
pop
sbb
add
and
mov
add
mov
jne
push
mov
lods
cltd
int3
inc
mov
push
lret
jmp
sti
or
in
or
mov
lods
dec
pusha
jno
cmpl
addr16
inc
out
pop
push
adc
stos
xlat
out
mov
ret
mov
out
mov
cld
dec
adc
push
push
xor
xchg
out
roll
lea
je
jmp
mov
sahf
pop
lret
aad
ret
or
in
ret
les
mov
ds
repnz
or
mov
outsl
inc
pop
inc
mov
shl
jecxz
inc
inc
je
stos
mov
nop
mov
das
std
and
lods
loope
pop
sub
popa
add
movsl
lret
insl
loop
xor
sbb
sbb
rolb
jmp
push
lea
cmp
lcall
dec
in
push
pushf
and
lods
fdiv
add
je
fisubrs
lea
dec
rcrl
cld
xchg
addr16
out
inc
xchg
loope
xchg
pop
cmp
arpl
pushf
test
in
xor
mov
sbb
jno
and
jmp
push
fs
xor
imul
and
mov
mov
push
lds
dec
dec
add
jae
mov
outsb
pop
popa
aad
fwait
into
rolb
and
pushf
sbb
mov
stmxcsr
pop
jae
and
sbb
fucom
jbe
xor
cmp
dec
es
fcoml
cmp
into
adc
xor
andl
mov
das
mov
xchg
icebp
mov
jno
test
mov
adc
aad
mov
sbb
stos
orl
fwait
out
lods
imul
xor
push
fisttpll
xchg
mov
xor
in
rcrb
sub
pop
subb
jmp
pop
or
cmp
push
orl
sub
imul
cltd
adc
inc
jbe
stos
inc
movl
stc
adc
xor
mov
mov
sbb
xor
jg
xchg
insb
pop
pop
push
dec
xor
sti
push
dec
fists
mov
sbb
mov
fst
adcb
push
dec
or
pop
xchg
and
decb
loope
enter
frstor
mov
out
pop
or
repz
pop
fs
arpl
btc
cmpsl
mov
pop
jp
add
mov
sub
popw
decb
rorb
mov
pop
rcrl
in
mov
notb
jmp
mov
gs
scas
adc
outsb
arpl
stos
lock
sar
loope
push
and
xlat
insl
fnstenv
mov
repz
movsb
dec
inc
xor
xchg
aam
ficoms
lea
popf
xor
inc
or
lds
mov
xlat
jne
xchg
ret
mov
mov
lds
ja
call
xor
mov
push
xor
push
int
push
out
call
fidivrl
dec
mov
mov
or
es
sbb
xchg
dec
cs
movsb
pushf
testl
xchg
test
push
jnp
and
movsb
mov
xchg
push
fs
aaa
je
jo
mov
outsb
xor
adc
lods
push
sub
inc
mov
fsts
mov
js
mov
jnp
sahf
dec
sbb
or
leave
sbb
cwtl
decl
mov
or
cs
outsb
cmp
sub
and
push
xor
aad
loopne
loopne
xor
rolb
addl
jbe
rorb
mov
sbb
cmp
stc
mov
push
xchg
add
outsb
gs
ds
dec
in
mov
add
lcall
push
aam
sub
mov
nop
bound
repnz
push
test
push
insl
pusha
stc
jb
add
enter
xchg
push
or
xchg
pop
push
jle
pop
das
cltd
inc
cs
jae
loope
mov
add
jp
mov
adc
test
aam
cmpsb
fistpl
inc
lret
add
pop
push
addr16
add
add
push
divb
and
mov
lcall
adc
leave
sub
dec
push
add
ret
push
mov
pop
inc
sub
dec
adc
adc
mov
xchg
aas
xor
or
and
ja
jbe
js
or
cs
mov
out
jmp
sub
pop
fwait
out
xor
cmc
test
mov
push
cltd
jnp
dec
cmp
mov
out
inc
push
fimull
push
push
sub
add
mov
insb
sahf
pop
push
pop
mov
push
fiadds
inc
scas
or
icebp
push
and
aam
mov
sahf
not
addr16
hlt
addb
out
adc
cld
push
jmp
test
mov
scas
orl
adc
loope
xor
xor
shll
test
jb
sbbl
cmp
push
dec
out
or
push
inc
jmp
hlt
pusha
jo
jl
and
mov
push
push
xchg
imul
xor
sahf
and
orl
out
js
mov
xor
add
xor
lea
cs
mov
push
imul
in
cmp
xchg
push
sub
jae
dec
xor
push
mov
jp
mov
shlb
aaa
les
pop
inc
pop
lods
jnp
scas
stos
jae
pop
mov
cmc
push
mov
add
mov
inc
icebp
cmpsl
ljmp
lret
inc
push
imul
test
jnp
lret
nop
hlt
pop
and
adc
pop
pop
xchg
cmp
xchg
and
pushf
xchg
inc
pop
inc
insb
xchg
fimull
push
inc
push
push
xor
sahf
mov
ljmp
jnp
jmp
cmp
fiaddl
mov
xor
pop
fsubrl
lock
fidivl
sub
push
js
fisttps
pop
pop
pop
orb
xor
adc
in
push
addr16
jge
xchg
testl
dec
sub
jne
mov
daa
xor
xchg
add
inc
mov
pop
cli
pop
cmpsl
cltd
mov
cmp
jg
xor
dec
or
pop
outsl
or
imull
popf
adc
wbinvd
jl
adc
mov
enter
xchg
sbb
jmp
mov
jnp
add
mov
jecxz
and
cld
sbb
mov
notb
jl
jns
xchg
adc
adc
aad
out
cmp
out
std
mov
jae
jle
jne
inc
xchg
or
mov
or
push
or
dec
aaa
sbb
inc
jae
scas
mov
jmp
push
add
pop
mov
mov
or
nop
dec
movsl
pop
adc
add
xor
in
sahf
cmp
in
sbb
pop
dec
mov
or
and
mov
mov
push
sub
jmp
push
sub
inc
pop
sbb
inc
dec
cmp
mov
inc
js
mov
flds
pop
in
sub
push
call
xchg
ss
sub
push
or
lcall
hlt
inc
ret
mov
punpckldq
cmc
nop
sbb
inc
xchg
mov
or
lret
push
jae
aad
jecxz
push
in
inc
mov
mov
sbb
cmp
stos
xor
fs
xchg
in
mov
daa
jb
dec
jo
mov
push
mov
mov
pop
dec
sti
jno
lcall
daa
sub
cmp
add
dec
inc
cwtl
add
sbb
in
cmp
xchg
dec
push
add
push
in
std
ret
mov
cs
rorb
inc
sbb
mov
or
mov
jae
jno
jns
and
or
push
clc
iret
enter
sub
in
roll
sbb
push
jmp
xor
cmp
pop
sbb
dec
popf
adc
jb
inc
sub
rcrl
add
iret
jge
movd
ret
adc
mov
lahf
out
lock
test
push
inc
data16
jp
aaa
out
movb
jmp
inc
fstpt
arpl
sbb
int3
pusha
shrb
xchg
and
xor
insb
sbbb
push
gs
fwait
xor
testl
push
je
sub
cltd
mov
mov
mov
push
outsl
and
inc
push
ret
add
xchg
outsb
lret
lods
rcrl
stos
std
xchg
or
scas
mov
jg
fists
in
fiadds
aad
xchg
fbstp
rolb
sbb
adc
mov
add
ljmp
dec
test
jo
lds
pop
adc
popa
adc
jg
imull
loop
shll
in
into
divb
shl
and
ret
aam
cmp
fwait
mov
push
pop
int
xchg
push
fiadds
jno
xchg
mov
jb
add
jo
in
in
jno
adc
pop
push
repnz
mov
xchg
scas
mov
js
repz
mov
mov
loop
pop
aad
iret
lods
lret
mov
mov
fs
jle
loope
pop
shll
out
movsb
jne
mov
lahf
scas
ljmp
mov
pop
idivb
or
loop
xchg
es
mov
push
in
scas
rcll
jne
pop
or
sbb
in
pusha
jge
cwtl
jecxz
adc
iret
icebp
fnstsw
movsb
xchg
jg
std
loop
mov
mov
inc
lock
jg
jmp
cltd
pop
inc
js
rorl
pop
fildl
add
stc
std
mov
sar
xchg
push
loopne
subb
gs
sub
xor
xchg
pop
fisubs
mov
and
sub
sub
inc
jle
aam
dec
ja
ds
mov
sbb
cmpsb
aad
mov
outsb
repnz
dec
loope
rcl
add
js
cwtl
or
xchg
jp
inc
mov
pop
scas
jbe
sub
jecxz
jno
cwtl
adc
leave
fdivrs
hlt
jp
mov
xor
adc
insb
call
je
lret
push
pop
push
push
add
or
mov
xor
in
cld
dec
fs
es
data16
pop
jns
lock
jmp
inc
pop
mulb
repnz
xchg
mov
andl
or
shrb
leave
dec
test
dec
ss
xchg
out
lcall
stos
sahf
and
and
pop
mov
shll
bound
jbe
or
lock
add
int3
jmp
mov
leave
dec
in
outsb
xchg
rorl
ret
sbb
mov
imul
dec
or
test
jns
mov
xchg
jbe
movsb
sub
repz
sub
mov
and
loopne
or
cltd
movsb
sub
jecxz
mov
lahf
mov
lret
xor
enter
or
fidivrl
cs
stos
out
inc
sbb
lock
loopne
test
cwtl
or
push
cld
pushf
xorl
cld
and
inc
popf
fdivs
call
mov
rcll
sarl
fdivs
sbb
movsl
gs
xchg
push
sahf
mov
cmpsb
mov
push
pop
cli
leave
xor
ss
xchg
cltd
jo
pop
inc
bound
sbb
ja
sbb
mov
sub
rolb
int
dec
dec
data16
mov
in
or
iret
sahf
xchg
sub
popa
rclb
in
cmp
sub
clc
mov
push
dec
and
out
push
mov
lds
das
rcrl
mov
pop
pop
sub
mov
stos
cmpsl
dec
mov
push
add
rcl
jns
pop
lods
cmp
sbb
xchg
mov
pop
cmpb
xor
xchg
mov
xchg
mov
xchg
cmc
into
mov
dec
int3
and
dec
ljmp
pop
push
jno
adc
sub
sarl
pop
fst
push
pop
xchg
add
out
stos
or
inc
sahf
dec
aad
loope
filds
mov
or
pop
inc
push
jl
mov
sub
nop
mov
push
frstor
scas
lea
jmp
and
inc
hlt
lret
in
dec
push
sub
or
jl
adc
inc
dec
sbbb
adc
mov
xlat
fistps
out
adc
lods
lahf
mov
sub
cmpsb
ds
fnstcw
bound
fisttpll
xor
xor
shrb
add
mov
imul
inc
data16
dec
out
mov
sahf
sbb
adc
outsl
das
jmp
add
popa
mov
orl
jne
dec
lds
mov
push
xchg
adc
push
push
cmp
mov
push
addr16
mov
cmp
xor
mov
push
xor
jecxz
int3
mov
icebp
imul
push
sbb
lock
sarb
mov
lahf
sub
xchg
mov
icebp
sbb
push
jecxz
adc
mov
out
fstpt
jecxz
mov
decl
ret
pusha
clc
xlat
xchg
je
std
mov
icebp
dec
mov
ljmp
out
dec
sar
mov
out
in
mov
outsb
add
inc
hlt
dec
lods
lret
push
add
push
fcomp
jmp
outsb
pop
inc
fnstcw
pop
mov
movb
sbb
and
hlt
fwait
cmp
lods
outsb
or
sbb
ja
fnstcw
xor
adc
divb
int3
mov
xor
test
mov
je
inc
fisttps
push
ja
cmc
lds
add
sub
and
mov
or
push
mov
ret
icebp
subl
pop
inc
sub
jno
fwait
les
shlb
jno
arpl
js
out
mov
sub
addr16
stos
xchg
cmc
mov
mov
and
inc
pusha
push
inc
enter
sub
sbb
mov
fs
pop
mov
sub
adc
scas
cltd
adc
and
and
push
mov
sub
js
idivb
pop
sbb
xchg
dec
hlt
outsl
out
out
adc
mov
test
xchg
pop
in
in
lock
push
sub
cmp
pop
push
popf
rorl
jbe
lods
cmc
push
gs
leave
inc
xchg
in
mov
add
rorb
xchg
ret
adc
sbb
adc
adc
jmp
popf
cmpsl
mov
icebp
cmp
push
adc
rclb
or
arpl
pushf
lock
orl
sbb
mov
pop
jg
jnp
push
pop
hlt
jb
mov
mov
pushf
std
cmp
mov
jmp
sub
nop
add
scas
nop
push
sub
js
fstps
stos
xchg
push
pushf
loopne
mov
xchg
ljmp
mov
xor
mov
inc
add
pop
fmull
mov
int3
pushl
or
mov
mov
sub
flds
push
cmpsb
xchg
sub
xchg
jno
mov
push
es
jecxz
jecxz
ljmp
jne
mov
sub
clc
jl
xchg
xchg
loop
pop
sbb
mov
sub
dec
mov
xor
push
jle
sahf
lods
aam
mov
sub
pop
push
sbb
inc
test
imull
cmpsl
arpl
mov
pop
xchg
mov
pop
cld
mov
out
push
mov
sub
xor
xchg
dec
fcoms
ljmp
xchg
xchg
arpl
sub
fistl
xor
jp
or
mov
dec
ffreep
cmp
pop
dec
loopne
nop
mov
push
dec
and
and
pop
loopne
jp
scas
leave
dec
adc
mov
xchg
mov
mov
lods
sub
test
push
mov
jmp
fldcw
cltd
cmp
or
mov
jg
sub
mov
out
loopne
sub
mov
mov
stos
rcr
rcrb
call
stc
and
mul
or
aam
adc
das
jmp
cmp
push
testl
lods
mov
push
jle
es
lcall
sub
negb
imul
and
icebp
pop
inc
rol
sub
out
sbbb
dec
ljmp
mov
pop
leave
inc
fs
jno
inc
fs
push
arpl
cmc
lcall
xor
xchg
in
sbb
push
sti
jnp
out
in
add
dec
jge
adc
into
int
mov
push
jae
mov
sub
int3
les
cmp
cmp
pop
push
jns
loop
mov
insl
mov
popf
or
pop
push
pop
mov
add
xor
and
outsb
fistpl
int
or
inc
sub
cmpsl
stc
jmp
push
popa
imul
cmpsl
cltd
out
fidivrs
ljmp
pop
insb
das
mov
leave
stc
xchg
add
pop
mov
sub
cltd
xlat
fwait
rol
mov
sbb
int3
jno
push
aad
pop
adc
fs
pusha
xchg
in
ja
and
lret
pushf
dec
in
iret
adc
fcoml
push
adc
ja
sti
add
dec
or
lods
imul
inc
outsl
pop
ljmp
ret
adc
sarb
dec
and
adc
jge
xchg
iret
xchg
imul
push
mov
test
hlt
in
setno
mov
cld
jl
imul
and
inc
jecxz
cmpsl
inc
mov
lds
push
push
arpl
sbb
ror
mov
stos
popa
fisubrs
insb
mov
or
fcompl
aas
push
and
push
es
sub
jge
jmp
jl
inc
leave
rolb
jb
test
popf
test
shr
das
fsub
mov
dec
cmp
fstpt
fwait
lds
add
push
sbb
or
test
repnz
or
test
xor
dec
inc
inc
dec
out
sbb
mov
xchg
insb
mov
ljmp
jo
dec
fsubrl
fisubs
ds
pop
dec
xor
or
mov
js
pop
cltd
add
dec
sbb
jne
mov
jo
or
nop
and
outsl
lock
pop
dec
cmp
lds
ds
sub
ret
pop
cs
stc
sub
aas
xlat
push
stc
mov
xchg
aad
jg
pusha
xor
ret
fisttpl
pushf
stc
pop
and
push
xorb
cltd
xor
inc
jae
data16
stos
mov
sub
xchg
push
lea
outsb
jb
das
adc
ss
jae
push
ja
mov
mov
mov
addr16
sub
inc
jle
rcll
int3
push
add
inc
lds
inc
push
adc
sti
iret
cmp
adc
inc
imul
out
push
mov
rclb
dec
mov
sub
scas
sub
aam
in
or
jp
js
sbb
adcl
test
add
lds
test
xchg
mov
insl
jno
dec
loope
or
pop
push
add
dec
push
mov
divl
inc
inc
ret
dec
push
pop
sub
pop
loop
sbb
aas
jmp
and
jge
ds
movsb
jl
jnp
movsl
or
xchg
jecxz
mov
mov
mov
les
scas
lds
in
movsl
mov
shl
in
sub
xchg
jl
test
jbe
sti
nop
add
sub
push
addr16
sbb
xlat
mov
movsl
adc
mov
subb
cmc
push
pop
push
inc
mov
fs
pop
insb
mov
mov
clc
ret
cmc
cltd
push
pop
mov
jmp
lret
icebp
std
aam
sub
fsubrs
movsb
inc
outsb
out
push
lcall
push
lahf
lods
mov
int
mov
mov
mov
call
mov
icebp
fbld
loopne
adc
jb
bound
iret
inc
mov
cmp
mov
sub
mov
decb
and
popa
fwait
mov
mov
std
xor
roll
cld
sti
dec
outsb
fmull
scas
aam
mov
fsubs
lret
mov
aam
cmp
jb
roll
mov
mov
fabs
push
sub
out
and
jno
shl
call
xchg
ja
xor
fdivr
mov
jae
stos
cwtl
icebp
jge
aaa
addr16
orl
bound
dec
xchg
loope
in
pop
jno
das
fs
jne
shll
push
mov
jp
enter
cmpsb
or
mov
pushw
adc
adc
adc
xchg
je
movb
cmp
popf
insl
rol
icebp
push
cmpsb
pusha
sbb
mov
test
cwtl
aaa
adc
leave
xchg
xlat
xchg
xchg
frstor
mov
clc
cmpb
mov
adcl
fsubrl
sub
cmp
jp
jl
fstpl
daa
mov
clc
jl
das
jmp
inc
mov
popl
dec
push
push
push
mov
cmpsl
sti
lods
rol
les
mov
ds
push
xor
lods
js
stos
inc
mov
adc
cmp
add
lds
adc
xchg
mov
dec
hlt
mov
adc
and
test
xor
and
aad
dec
fstp
call
cmp
mov
data16
lret
inc
jb
mov
mov
adc
stos
stos
inc
fnsave
xor
jnp
add
data16
xchg
dec
and
fistpl
mov
mov
lods
in
sarb
out
push
cltd
enter
pop
add
mov
dec
push
jb
xchg
mov
xlat
sbb
inc
rcll
cli
push
sub
mov
repz
popa
mov
mov
ret
mov
int
movsl
sbb
es
iret
inc
adc
mov
aam
pop
push
aas
subb
adc
jl
call
int
cmc
push
jnp
cwtl
pop
mov
mov
imul
fwait
sbb
scas
inc
xchg
scas
sbbl
ror
dec
inc
movsl
mov
xchg
es
lcall
and
push
loopne
adc
imul
loope
xor
mov
lock
fwait
clc
lret
mov
icebp
mov
adc
lods
lahf
incb
jo
inc
xor
pop
inc
push
test
mulb
jl
mov
test
dec
out
in
mov
sub
cmp
insl
dec
movsb
fcompl
or
fdivs
sbb
jg
fwait
lea
aas
testl
adc
sbb
xchg
xor
dec
loope
jmp
or
gs
jle
xor
or
mov
testb
out
xchg
sub
mov
jmp
mov
xchg
in
jl
xchg
cmpsb
push
xchg
adc
xchg
daa
push
jne
add
sbb
sbb
mov
xchg
and
int3
sbb
pop
clc
and
outsl
les
adc
pop
gs
mov
and
insb
fidivs
adcl
push
imul
daa
adc
pop
out
ret
int
push
cmp
mov
jp
leave
mov
jo
mov
push
add
dec
jmp
lret
out
push
jge
push
stos
lea
in
test
mov
fcom
cmp
repnz
lea
and
ja
or
sarb
stc
jmp
in
inc
mov
dec
std
dec
orl
nop
xchg
push
mov
imul
aas
jae
data16
imul
cltd
xchg
gs
aaa
push
mov
rorl
aad
in
shrl
ja
xchg
repz
cmp
add
or
ficoml
xchg
push
xor
mov
aad
sbb
cmpsb
mov
mov
adc
mov
dec
leave
out
or
jle
jmp
sub
in
mov
data16
adc
push
mov
andl
js
xchg
je
xchg
fsubs
pop
stos
adc
je
insl
fnstcw
mov
test
test
imul
add
std
push
ficompl
inc
jp
pop
lods
lea
out
push
fnstenv
rcrb
xchg
sbb
and
sub
lods
movsl
subb
aaa
adc
sbb
dec
cmp
mov
push
cld
repnz
clc
mov
xchg
mov
pop
rcrb
scas
aam
mov
sbb
shll
jo
inc
arpl
adc
sub
push
mov
out
fnstcw
push
aam
aas
cwtl
lods
xchg
cmp
mov
lods
cmpsb
mov
mov
sub
dec
test
sub
pop
xchg
xor
ja
jne
insl
adc
cmpsb
jge
cld
lods
leave
bnd
stos
and
or
mov
xchg
or
aam
add
add
test
or
sbbb
sub
ljmp
push
dec
in
jno
std
jb
sti
xor
mov
and
out
out
jecxz
adc
int
push
sbb
xor
rcrb
mov
repnz
das
cmpsl
sub
loop
rorl
add
adc
adc
jns
pop
pop
popa
jecxz
inc
cwtl
repz
sbb
or
popf
fsubl
mov
add
inc
inc
aad
lret
mov
jbe
xor
outsl
in
test
shll
and
push
in
in
xorb
or
loope
std
stos
lods
pop
xlat
sahf
hlt
jnp
jbe
cmp
jb
pop
add
mov
mov
mov
ds
push
mov
adc
fists
sbb
adc
pop
push
pop
add
dec
stos
or
in
mov
mov
pop
mov
adc
fsubrs
jp
js
push
fst
cwtl
adc
cmpb
mov
xlat
and
xchg
xor
mov
fcomps
push
ss
xor
gs
insb
jmp
jecxz
xchg
rcrl
and
lret
sbb
in
mov
push
add
adc
mov
cwtl
int3
in
push
sbb
mov
jae
stos
xor
popa
xchg
mov
add
pop
or
loop
pop
cld
out
push
jo
mov
sbb
add
cli
movsb
mov
dec
push
and
fisttpl
scas
sub
mov
rorb
movsb
pop
test
mov
and
sub
add
inc
push
cmc
sbb
ret
inc
adc
mov
mov
sub
shl
jb
or
addr16
dec
mov
and
inc
push
insb
mov
jo
push
mov
popa
rclb
xorb
lock
dec
ljmp
xor
inc
stos
mov
pop
mov
dec
pop
cwtl
pop
sub
pop
dec
adc
pop
lds
adc
cmpsb
shrl
mov
rcll
ja
and
xor
or
pusha
jg
aas
inc
aam
jg
pop
fisttpll
cmp
or
push
fs
repz
lods
and
enter
dec
icebp
xor
ja
push
pop
leave
outsb
aaa
ja
xchg
push
dec
jno
mov
xchg
lds
idivb
cmpsl
adc
adc
or
call
jne
addl
mov
mov
sbb
in
insl
cmp
sbb
ss
into
sub
mov
clc
sbb
add
xchg
jp
xchg
add
lret
loope
and
dec
xor
imul
test
xchg
pop
adc
and
push
inc
add
test
and
jb
pop
cltd
xor
pop
in
jp
sbb
pause
jae
push
jnp
mov
or
mov
push
in
pop
mov
lock
xchg
add
dec
mov
adc
mov
sub
sub
or
add
subl
lret
decb
nop
insl
dec
cmc
mov
sbb
int
or
cmp
movsl
aas
add
test
lret
adc
mov
xor
mov
pop
dec
dec
and
fwait
call
fsubl
lret
ljmp
loopne
dec
fdivrp
aad
ss
dec
lods
mov
jb
xor
mov
js
iret
cmp
jno
sbb
push
sbb
pusha
lea
add
mov
xchg
fisubl
addr16
fdivrp
cmpsb
das
cmp
frstor
adc
sub
xchg
out
cmp
cmp
mov
mov
fdiv
aad
or
dec
add
adc
call
fcmovnbe
dec
daa
in
push
pop
add
loope
movsb
fmull
inc
xchg
stc
in
lret
push
add
dec
jp
and
xor
lea
mov
mov
mov
add
or
dec
lock
hlt
mov
cld
mov
sub
sub
cwtl
lds
popl
and
mov
lcall
cmc
popa
mov
cltd
decl
jne
fldt
ret
dec
fwait
scas
xor
and
xor
repnz
xchg
sub
adc
std
rcrb
sbb
bound
cld
add
mov
pop
ret
call
insb
jno
out
ja
push
add
fcomi
mov
cmp
mov
mov
push
movsl
jle
mov
bound
mov
push
jmp
cli
sub
leave
mov
push
lea
mov
sub
cmpsb
aaa
ret
stc
xchg
xchg
ljmp
add
and
into
iret
rep
mov
inc
xorl
mov
sbb
aas
test
sbb
jne
adc
int3
shlb
cwtl
mov
jle
pop
jnp
ficomps
jns
adcl
mov
cmc
xchg
mov
jnp
test
xor
sub
std
push
mov
dec
xor
aaa
jo
mov
les
push
jbe
pop
subb
pop
inc
push
xor
push
test
fxam
movsb
and
mov
inc
out
hlt
and
dec
stos
cmpsb
ret
nop
pusha
test
inc
or
push
sahf
inc
enter
call
mov
fldz
pop
mov
loope
mov
or
out
push
mov
std
mov
add
stc
aas
xchg
adc
cmp
cmp
and
fsubrl
sahf
mov
add
inc
mov
sub
sbb
popa
pop
bound
xor
sbb
cmp
mov
sahf
shl
ja
movsl
mov
aam
mov
repnz
sub
mov
sbb
dec
xor
xlat
ss
or
ljmp
js
pop
sub
mov
pop
mov
and
movsw
inc
sti
xorl
repnz
and
andb
in
stc
cmp
cmp
movb
imul
in
jmp
xchg
cld
test
xor
mov
xchg
pop
push
mov
sbb
loope
dec
fwait
stc
ljmp
leave
leave
mov
mov
ss
mov
divl
adc
lea
jge
cmc
mov
dec
mov
daa
mov
mov
scas
mov
xor
sbb
sbbb
xchg
pop
jnp
das
push
ja
push
test
lcall
adc
xchg
pop
scas
and
int
arpl
add
cmp
loopne
add
adc
dec
mov
adc
lea
xchg
jg
sbb
mov
mov
and
js
lret
aas
movsb
push
xchg
xor
aaa
into
popf
aad
notl
insb
mov
inc
movswl
xchg
cld
adc
fistpl
popf
out
jnp
xor
xor
nop
inc
push
jns
dec
pop
inc
xor
repnz
push
aam
sar
adc
push
js
aad
frstor
subb
jno
lds
xchg
adc
mov
mov
pop
bound
aam
mov
sbb
xchg
mov
in
pusha
xor
jecxz
push
sbb
fidivrl
in
bound
jo
and
xor
das
aaa
mov
add
fmul
scas
cs
jge
xchg
jmp
lds
dec
jge
hlt
dec
xor
aas
adc
xor
inc
jmp
in
mov
cmp
mov
cli
or
arpl
inc
mov
enter
rolb
cmc
movsb
lahf
subb
mov
push
outsl
in
aam
rcrl
aaa
jp
sub
jae
aaa
lods
sahf
jl
shrl
push
nop
out
xchg
mov
mov
subl
mov
add
je
push
lods
mov
in
push
jno
cmpsb
jecxz
adc
enter
mov
sarl
popf
pop
jl
pop
clc
push
pop
jns
lahf
ss
sub
shlb
push
push
cmp
push
loop
outsl
add
sub
out
inc
scas
push
lock
mov
daa
jns
ret
pusha
mov
or
xor
call
inc
xor
test
pushf
lcall
notb
jp
push
fcmovbe
jno
lret
arpl
lds
dec
jno
jmp
imul
mov
xor
out
daa
in
scas
icebp
in
das
mov
push
xor
sub
lret
mov
pop
xlat
ljmp
in
inc
popf
data16
fcoml
sub
loop
out
lahf
xor
hlt
mov
loope
mov
lcall
mov
jp
psllw
xchg
mov
std
je
jnp
fsubs
xchg
mov
ret
push
mov
fldenv
mov
loope
inc
push
inc
xor
lret
and
imul
dec
mov
sbb
or
xchg
xor
jge
addr16
fmull
cmp
push
mov
inc
or
fiaddl
outsl
pop
mov
pop
push
cmp
popa
fstpt
daa
leave
cmp
cmpsb
mov
std
popa
cwtl
mov
xor
sbb
lods
int
insb
fisttpl
mov
inc
lea
adc
inc
out
pop
cmp
mov
sub
xchg
ret
cmp
sub
mov
stc
xchg
sbb
push
pop
add
loop
xchg
clc
fstpt
rolb
nop
dec
inc
clc
inc
mov
pop
pop
cmpsb
inc
add
cmp
scas
lods
mov
sub
aaa
mov
shl
fstp
insb
jne
mov
mov
mov
sub
mov
jl
pop
pop
testb
sub
lahf
sub
sub
xchg
xor
sbb
daa
pop
jg
iret
in
stc
pop
xor
stos
aaa
addr16
lea
cli
repz
out
outsl
adc
stos
flds
xorl
sub
pop
pushf
in
xchg
rorl
inc
xchg
gs
rorl
mov
out
sub
cld
xlat
sbb
jmp
loope
lods
push
inc
inc
gs
mov
loop
and
mov
pop
mov
lahf
insb
in
in
mov
loopne
js
xchg
mov
cmpsl
cmpsl
les
xor
add
jnp
xorl
sub
stos
dec
adc
nop
nop
mov
rcll
xor
fistpll
sbb
mov
sbbb
xchg
or
test
add
or
lods
and
mov
jnp
adc
adc
scas
xchg
cmp
and
inc
and
stc
in
inc
pop
sbb
pop
ret
ljmp
mov
leave
push
mov
adc
je
add
movsl
jno
mov
fidivs
stos
popa
xorb
pop
mov
sub
test
jge
lahf
push
mov
test
push
cmpsl
cmc
mov
scas
insb
fstpt
cltd
fdivrs
lcall
jbe
idiv
scas
adc
push
inc
mov
iret
xchg
xor
push
add
inc
and
and
add
call
cmp
fcomps
repz
xor
jo
adc
mov
pop
mov
pop
push
and
iret
test
iret
add
mov
or
in
adc
stos
add
fstp
shlb
add
lock
dec
int3
add
jecxz
xor
lret
loope
mov
push
mov
mov
test
sbb
inc
pop
sar
ror
pop
std
stos
lret
cltd
pop
dec
hlt
push
dec
movsbl
mov
add
fdivs
cli
call
push
stos
mov
mov
inc
mov
mov
dec
pop
sbb
std
sbb
into
popa
add
test
adc
mov
js
pushf
pop
icebp
sti
ds
inc
insl
test
stc
out
subl
fmul
out
scas
mov
bnd
xchg
lret
mov
shll
cs
addl
mov
mov
lods
cmp
adc
cmpsl
popa
xchg
fstl
iret
daa
lds
push
mov
xor
daa
adc
lds
xchg
fs
loop
jnp
orb
loop
std
add
jl
aas
mov
xor
outsl
adc
mov
clc
scas
and
jecxz
ds
loopne
fdivrl
cli
mov
pop
fsub
bound
push
ret
inc
mov
push
insl
out
push
inc
jle
inc
dec
pushf
mov
lret
xchg
rcll
pop
sbb
cmp
jne
andb
xchg
push
fildll
pop
jb
jae
jl
repz
inc
lcall
cltd
push
cmp
hlt
aaa
push
filds
xchg
ljmp
or
add
sbb
add
daa
mov
pop
repnz
das
jns
xchg
sub
lahf
aaa
mov
push
xor
ljmp
sub
jae
lock
test
xchg
mov
xlat
cld
push
inc
jl
ljmp
and
mov
int
or
or
fcmovnbe
insb
xor
mov
xor
mov
mov
dec
loop
push
xchg
int
jecxz
inc
sub
jmp
jle
add
cmp
test
fwait
adcb
and
out
in
int
lods
pusha
popa
xchg
imul
dec
xchg
jbe
cld
mov
jge
clc
xor
pop
loope
adc
ds
add
sub
mov
aaa
inc
fcomps
mov
add
mov
mov
repnz
outsl
pop
fdivrs
xor
xchg
jnp
insl
sti
pusha
fwait
adc
xchg
bswap
addb
mov
clc
cmp
ljmp
xchg
xchg
repz
add
cmp
lea
clc
mov
rolb
in
and
repnz
cmp
jmp
pop
xchg
pop
ret
fldl
lret
inc
cli
sbb
dec
bound
inc
jl
movsb
sbb
push
in
jns
ss
sub
test
cmpb
repz
lret
or
sub
in
push
cmpsb
sbb
shl
sbb
or
push
in
push
or
mov
pop
hlt
sub
lods
sahf
xchg
adc
hlt
sub
adc
repz
add
sbb
test
inc
dec
mov
call
pop
mov
jl
popf
sahf
lock
xchg
rorl
xchg
test
test
pop
mov
insl
shlb
pop
mov
dec
jecxz
les
dec
cmc
push
repz
add
jp
repz
mov
test
ljmp
bound
sub
stc
sti
dec
dec
lods
lret
out
sub
or
out
aaa
jecxz
out
pop
scas
in
cmp
lods
push
enter
mov
and
sub
dec
in
lods
xor
push
movsb
aad
sub
push
xchg
rclb
adcl
adc
nop
mov
cmp
arpl
xor
inc
je
std
imul
js
pop
mov
icebp
das
mov
hlt
shrl
or
xor
cs
repnz
dec
pop
loop
cmp
int3
enter
std
add
lret
xchg
pop
jb
fcomps
add
lea
adc
push
pop
movsb
push
std
data16
icebp
fisubs
cmc
mov
in
jns
pop
les
push
sbb
lgs
mov
pop
xchg
fnsave
test
inc
lock
pop
xor
push
cmp
aas
in
mov
cmp
dec
sti
ds
jae
jp
test
fdivs
push
xor
scas
aaa
lahf
push
aad
adc
popf
sarl
xchg
mov
xchg
and
stos
inc
loop
add
fwait
dec
scas
movsb
xadd
mov
mov
fwait
sbb
mov
inc
xor
mov
dec
xlat
sbb
imul
inc
and
out
xchg
jb
add
inc
stos
push
ret
xchg
xchg
mov
lods
sarl
lcall
mov
push
outsl
fsubs
imul
and
xchg
or
jmp
nop
dec
push
ja
movsb
jno
pop
test
test
std
mov
mov
outsb
jmp
push
popl
sarl
cltd
nop
int
fnsave
into
mov
dec
xchg
push
insb
push
cmpb
ja
mov
cld
cmpsl
and
dec
int3
dec
push
out
pop
jb
daa
cmp
std
clc
mov
incb
pushf
inc
adc
fisttps
pop
pop
xchg
in
dec
inc
ficoms
xchg
jnp
cli
cltd
scas
cmp
add
notl
sti
push
ljmp
nop
sbb
je
ficoml
dec
or
shrb
ret
ja
std
arpl
jl
jmp
ljmp
mov
cmp
push
and
jb
jecxz
insl
or
jmp
jb
incb
pop
inc
in
ret
push
sbb
inc
iret
pusha
ja
add
das
out
test
sub
and
je
or
lock
enter
mov
mov
push
lock
clc
push
mov
mov
sub
dec
mov
push
stos
rcll
aas
dec
insb
data16
sub
in
cmpsl
shll
adc
dec
aaa
in
call
push
sbb
int3
fcomp
aaa
add
out
loopne
inc
mov
xor
inc
add
jecxz
fisttpl
cmp
je
call
lods
out
mov
pop
xor
ret
mov
inc
les
mov
enter
fstl
jne
lret
stc
xchg
adc
mov
fsubs
sbb
jp
jb
mov
or
cli
sub
rcll
iret
xchg
adc
push
sbb
mov
sub
fdivr
dec
int
cmpsl
inc
ljmp
pop
push
inc
mov
aas
jbe
scas
les
pop
mov
cmp
sbb
jbe
data16
add
pop
imul
mov
gs
sub
shll
imul
pop
fisttpll
test
stc
push
aaa
sti
sti
in
adc
aad
jns
add
pushf
or
fsts
cmp
jg
scas
push
mov
inc
gs
add
mov
pop
push
jnp
pop
add
cmp
shlb
icebp
or
iret
arpl
loop
test
inc
pop
and
jmp
out
jmp
out
lret
mov
orb
enter
aaa
push
shrb
xchg
mov
repnz
pop
mov
aas
mov
js
mov
add
enter
cwtl
xchg
cmpsb
adc
cld
lods
xlat
ret
cld
es
sbb
push
fistpl
jae
push
in
push
or
sub
xchg
shrl
jns
xor
gs
pop
popa
jns
push
in
out
in
dec
or
adc
stc
movsb
and
sub
in
out
mov
or
or
xor
add
roll
cmc
lods
ja
pop
xlat
xchg
cmpsl
jp
aaa
mov
dec
imul
cmpsb
xchg
push
jne
jg
and
mov
xchg
cmpsb
add
cmc
and
mov
pop
std
xor
loop
mov
js
hlt
mov
gs
mov
xchg
mov
enter
bound
push
mulb
das
cmpsl
cmp
fst
sbb
mov
ret
addl
adc
mov
test
int
inc
cmpsb
ja
cmp
xor
fists
ss
jecxz
dec
mul
repnz
and
inc
jo
rcrb
dec
mov
ja
into
push
mov
loopew
test
repz
bound
xchg
ljmp
scas
xchg
or
inc
inc
out
push
mov
dec
cmpsl
mov
imulb
dec
das
enter
mov
mov
cmc
lcall
cmp
add
sbb
pop
jbe
mov
and
fisttpll
aad
movsb
adc
inc
or
adc
cli
movsb
jge
xlat
test
xchg
loope
ja
cmpsl
and
inc
or
jp
push
fwait
and
leave
je
pop
in
cs
es
aam
add
popa
imul
lahf
mov
or
sbb
cmc
inc
divl
cmp
and
mov
adc
nop
inc
push
call
jg
and
mov
stc
movsl
hlt
test
jmp
mov
das
xchg
xor
shrb
aaa
mov
aaa
push
xor
cld
int
inc
dec
jne
sahf
inc
adc
push
jmp
repz
out
test
cld
fisubrs
das
loop
in
push
cld
std
mov
lea
mov
adc
dec
aam
cmp
idivl
push
or
mov
and
jae
stos
mov
repz
xor
cmp
jae
xchg
jb
and
fsubl
movsl
lods
mov
repz
mov
lret
cmovg
dec
mov
gs
sbb
jmp
inc
movsl
gs
dec
or
dec
push
lds
jne
dec
and
repnz
lea
mov
xor
cmovno
rcrb
das
cmpb
cmp
scas
leave
adc
mov
jns
xchg
mov
adc
fildl
pushf
pop
cmpsl
pop
fldl
rolb
inc
push
lahf
test
imul
cmp
into
or
ret
xchg
xchg
aam
add
sub
mov
loop
jmp
out
and
clc
repz
incb
xlat
or
pop
or
ret
push
and
ja
addr16
and
or
xchg
shrl
adc
mov
add
mov
mov
pop
jae
cmp
or
inc
rcll
or
xchg
in
fsts
pop
and
sbb
dec
cld
adc
jb
sbb
repnz
js
push
sbb
cmp
aas
repnz
and
xchg
scas
sub
scas
rcrl
sbb
popa
cltd
mov
lods
mov
sub
js
adc
ja
repnz
xor
pop
pop
lret
aad
pop
loop
pop
rorb
into
clc
into
pop
xor
xor
in
push
push
aas
mov
xor
lcall
in
and
sbb
inc
pusha
and
jno
ret
add
xchg
push
movsl
mov
lret
sbb
popa
mov
and
sbb
scas
lods
add
cmp
hlt
js
jg
add
pop
jge
shrl
xchg
fwait
pop
lods
scas
sub
cltd
or
js
push
int3
imul
mov
dec
sub
into
repnz
push
popa
js
and
mov
lret
adc
lods
xchg
push
fcoms
or
ret
loope
push
aam
dec
pop
cmp
dec
lahf
pop
pop
sub
pop
inc
imul
inc
dec
push
int3
push
aam
xor
dec
pop
data16
and
cltd
xor
shll
push
jp
add
jno
mov
in
add
repz
inc
jecxz
imul
inc
cwtl
pop
repnz
push
sbb
xor
imulb
int3
aad
xchg
call
lahf
in
sub
push
dec
sar
int
out
xor
sub
mov
sub
repnz
add
and
mov
mov
out
pop
jmp
cwtl
jp
xorl
xor
pop
repnz
ss
dec
popa
aam
push
lret
jb
push
add
pop
cmc
jb,pt
adc
mov
inc
dec
jns
std
out
in
sbb
imul
movsl
into
xorb
push
mov
add
adc
mov
jp
nop
jecxz
cmc
push
and
xchg
out
outsl
jae
sub
mov
or
dec
mov
rcrb
js
test
subl
xor
rorl
cmc
dec
add
push
js
push
test
movsl
rcrl
stos
movsb
repnz
add
inc
mov
xchg
adc
pop
jne
push
xlat
mov
fcoml
lock
hlt
xor
xor
inc
mov
in
outsb
scas
hlt
jge
das
sti
stos
pop
addr16
sti
into
mov
add
sarb
in
fbld
inc
inc
rclb
jmp
or
js
jge
mov
shrb
out
jl
rol
repz
lds
add
pop
mov
enter
push
popf
pop
adc
mov
jmp
sub
dec
inc
into
mov
adcl
add
mov
pop
test
pop
in
jge
inc
out
push
xor
int
dec
call
inc
cmp
push
jno
sbb
idivl
fucom
jmp
xor
stos
in
push
push
xor
in
xor
adc
sbb
cmp
jl
ror
icebp
pop
lahf
and
cmp
pop
int
je
vandnps
jae
out
mov
lret
push
mov
mov
pop
inc
mov
mov
xchg
ret
xor
jle
push
bound
inc
dec
mov
push
and
lock
add
enter
dec
mov
cmpsb
hlt
lock
sub
jmp
mov
hlt
mov
movsl
cmp
cmp
int3
mov
ficomps
xchg
das
adc
aas
fstps
push
sub
xchg
adcl
mov
cmp
jecxz
lea
lods
mov
icebp
inc
stc
rorb
addr16
mov
fisttps
mov
pop
inc
fdivr
adc
in
lret
popa
xor
rcl
inc
out
pop
sub
mov
sub
cmp
sbb
into
or
pop
outsl
add
mov
aad
jbe
fwait
mov
inc
and
test
sub
pop
addb
jecxz
cmp
jns
and
jb
dec
dec
repnz
push
sbb
dec
pop
lcall
pop
call
pop
mull
jg
xor
cs
imul
out
mov
in
sbbb
jnp
jbe
pop
popa
cld
xor
bound
push
cmc
mov
sub
lahf
test
mov
or
sub
jb
xchg
mov
sub
dec
mov
ret
sub
cmp
int
add
cmpsb
dec
xchg
out
imul
outsb
jae
xchg
dec
pop
jb
out
call
mov
in
stc
popf
enter
movl
jecxz
lret
sub
loope
add
or
out
loop
in
cmp
lods
cmpb
pushf
ljmp
sar
inc
repz
xor
adc
inc
repz
mov
dec
in
leave
pop
not
dec
fstpt
int
aad
sbb
or
cwtl
cmpl
cmp
std
loopne
outsb
out
movsl
mov
or
ret
mov
cltd
pop
int
rdpmc
push
xor
cwtl
push
mov
in
cli
or
xor
sbb
add
pusha
jnp
mov
movsb
call
fpatan
sub
mov
iret
test
push
or
fdivs
mov
or
imul
push
jmp
push
dec
dec
mov
or
fwait
mov
movsl
mov
sub
leave
fisubl
jp
sbb
bound
addr16
insb
iretw
and
addr16
fdivrl
jnp
popa
push
adc
inc
cmc
or
inc
pushf
add
pop
fdivr
mov
sbb
stc
lods
icebp
adc
mov
mov
inc
xchg
pop
mov
cmp
sub
add
lds
les
icebp
mov
and
dec
xor
fnstsw
aad
pop
scas
lcall
and
pop
sbb
push
rorb
negl
popa
lret
test
cmc
pop
cmp
cmp
fisttpl
icebp
fcoml
mov
adc
mov
xor
push
pop
pop
jmp
adc
jp
popf
dec
outsb
lods
mov
pop
repz
test
popa
sbb
stc
addb
push
push
orb
in
idivb
dec
xchg
jb
popf
xor
mov
xchg
adc
dec
inc
adc
shll
jbe
aaa
stos
push
mov
fdivrs
addr16
sbb
out
jmp
lret
and
out
push
sbb
add
ja
sub
lea
adc
ret
mov
lods
pop
test
mov
in
das
inc
xor
cmp
xor
sahf
fiaddl
fs
or
jb
fsts
rolb
cld
loopne
orl
or
cmpsl
mov
pop
shlb
jnp
pop
sbb
or
popf
pop
sarl
out
out
jp
sub
mov
jl
add
dec
inc
je
lcall
jl
push
adc
xlat
std
and
xchg
xchg
dec
cwtl
push
add
sub
outsl
mov
xor
hlt
ljmp
insb
icebp
stos
pop
rorl
xchg
dec
pop
les
call
pop
enter
pop
jecxz
ja
mov
mov
inc
jmp
adc
mov
xor
jge
xor
mov
cmp
in
xchg
mov
clc
xor
and
adc
daa
xchg
push
dec
jmp
es
cwtl
inc
shrb
jmp
adc
cld
sbb
imul
xchg
call
xchg
popa
ja
sub
ret
dec
mov
sub
das
push
sub
repnz
xchg
idivl
push
aam
sub
fwait
jp
imul
ror
xchg
daa
and
imul
cli
icebp
enter
xor
push
xor
mov
arpl
test
je
in
test
push
ds
in
loopne
mov
mov
xchg
mov
in
dec
pop
xchg
jnp
dec
cwtl
add
and
push
xchg
jne
add
sbb
pop
push
or
les
xchg
fwait
xchg
pop
out
lret
xchg
rcrl
dec
repnz
pop
inc
and
test
push
inc
leave
push
xor
jl
repz
jge
dec
mov
mov
push
std
cmc
mov
stos
jo
jb
xor
ret
sbb
mov
sbb
sbb
push
mov
mov
and
out
and
cmpsb
loop
push
int
mov
jge
sbb
mov
adc
in
jns
push
add
hlt
lahf
inc
es
ja
sub
push
bound
js
test
sarl
sbb
and
mov
xor
addr16
xlat
jns
push
cmpsl
into
pop
ret
loope
mov
pop
insb
arpl
xchg
icebp
cmp
arpl
aaa
jmp
sahf
int3
loope
pop
xchg
rcll
cmp
sarl
jle
rep
sub
sbb
xchg
sti
cld
mov
test
gs
sbb
addr16
pusha
xchg
out
or
or
sbb
loop
cmpsl
andl
add
out
ds
out
cmp
xchg
adc
dec
dec
ret
sarl
inc
xchg
repnz
lahf
lds
and
call
push
dec
push
flds
or
xor
mov
leave
je
pushf
ja
sarl
lods
mov
sub
cmp
cmp
pop
xchg
mov
dec
or
add
lock
pminub
pop
push
iret
jae
adc
bound
icebp
pop
xchg
cli
xchg
dec
shlb
loop
xchg
mov
ret
mov
ret
cmp
push
repz
lret
and
pop
mov
in
roll
ss
mov
fabs
inc
push
outsl
in
mov
jg
mov
je
mov
imul
or
cs
mov
fstpt
out
cmpsb
adc
into
test
push
and
test
orl
ja
cmc
cli
aad
cmpsl
xchg
lahf
int3
mov
sbb
out
int3
call
and
mov
sbb
out
xor
imul
call
sbb
mov
dec
lea
shll
push
popl
xchg
sti
stos
push
lahf
mov
out
xchg
push
lahf
sbb
imul
adc
out
mov
mov
divb
repnz
and
cltd
and
rcrl
pusha
dec
mov
stos
xchg
call
adc
movsb
adc
mov
pop
testb
sbb
pushf
enter
sbb
ret
int3
add
aas
jns
out
inc
mov
sub
adc
imul
stos
fstpt
and
push
aam
xchg
add
aam
subb
push
mov
mov
out
jge
in
jne
cli
fwait
xor
xor
lods
enter
int
cmpb
dec
inc
xchg
test
pushf
sahf
ss
jno
iret
dec
or
xor
xchg
push
enter
jb
mov
std
std
mov
mov
outsb
adc
testl
pushf
dec
or
sub
xor
jmp
mov
dec
mov
sub
gs
and
add
das
into
push
mov
sub
fdivrs
mov
iret
and
repnz
outsl
and
movsb
push
cs
dec
and
jne
ss
mov
pop
je
sub
in
repz
mov
ja
mov
hlt
out
out
and
add
or
mov
pop
push
mov
addb
dec
js
test
sbb
ret
test
fwait
jl
cltd
imul
or
ds
adc
sar
jae
inc
dec
inc
and
fdivl
inc
xchg
rclb
inc
mov
fcmovnu
mov
mov
mov
mov
pusha
je
ja
call
bound
dec
mov
fldl
js
sahf
lods
sbb
mov
sti
mov
shll
test
and
test
in
rolb
sbb
js
sub
mov
mov
jmp
inc
dec
hlt
fisttps
sbb
add
add
add
in
hlt
fldt
loop
dec
jmp
aaa
lock
mov
add
lahf
jl
repnz
mov
into
and
jl
jb
cmp
fwait
and
push
xchg
mov
mov
dec
cwtl
cmpsl
adc
adc
mov
daa
cmp
js
add
repnz
stos
or
xchg
sbb
jae
inc
mov
rol
divl
repz
mov
ljmp
jae
push
test
cmp
lea
lock
sahf
cltd
xchg
sbb
pushf
and
movsb
add
ss
into
pop
pop
xlat
les
mov
dec
sbb
enter
add
adc
fdivrs
outsl
adc
call
pushl
pop
mov
mov
inc
fucom
popa
sub
divb
xor
ret
add
adc
adc
sbb
xchg
jns
aaa
mov
lods
push
mov
jae
loopne
add
mov
repnz
mov
xor
pop
pop
insb
hlt
dec
jmp
xchg
adc
adc
out
and
adc
leave
adc
pop
fisubrs
repnz
aad
xor
pop
sbbl
stc
sbb
mov
cli
sub
add
leave
adc
in
div
lcall
inc
fs
mov
push
push
sbb
cmp
aad
dec
jne
cltd
mov
or
jle
outsl
ja
es
add
out
shrb
leave
idivl
mov
push
cmp
sti
int3
cmp
and
je
pop
repnz
dec
mov
testl
push
push
mov
gs
cmp
sbb
xchg
jge
push
popa
push
in
adc
fiaddl
xor
rorl
pop
mov
imul
cmp
add
mov
mov
or
xchg
call
ret
mov
dec
popf
pop
adc
fldcw
jl
lods
dec
adc
sbb
xacquire
sub
test
clc
inc
in
mov
pushf
cmp
xchg
ret
cli
call
stc
stc
aad
mov
idivl
mov
popf
sbb
mov
popl
out
adc
call
arpl
push
in
mov
lods
xlat
hlt
xor
test
sub
and
xor
ret
repz
or
test
enter
ffree
shll
inc
sbb
cmc
mov
decl
scas
scas
subl
movsl
cmpsb
mov
jg
add
add
arpl
dec
loopne
es
sbbb
push
lea
test
aaa
pusha
pop
xlat
add
into
sub
jecxz
test
out
push
mov
cmpsl
rol
out
cld
fs
std
mov
xor
clc
jecxz
popf
mov
mov
cmp
lret
push
mov
mov
push
bound
push
cmp
in
mov
xor
and
mov
push
or
or
add
in
fs
sbb
ret
stc
and
jl
mov
inc
leave
dec
lcall
loopne
repnz
push
pop
int3
stos
sahf
loopne
rcrb
sbb
push
in
insl
imul
cmpsl
push
and
xchg
add
mov
lds
popl
decb
js
sbb
or
jmp
hlt
insl
in
and
in
cwtl
les
mov
sbb
mov
jmp
fisubrs
test
xor
shll
xchg
lret
mov
xchg
mov
lods
cmove
mov
frstor
mov
jno
mov
outsb
cs
fwait
leave
cwtl
shll
or
cmp
pop
pop
push
stc
mov
pop
inc
pop
out
ds
ficompl
stos
jb
pop
cmp
ljmp
cltd
rorl
sar
push
shrl
pop
xor
ret
push
cli
outsb
mov
inc
xchg
out
imul
lods
insb
into
jne
sub
pusha
ffreep
push
dec
imul
icebp
aas
scas
mov
xchg
or
loopne
mov
lret
cmc
pop
aam
xchg
filds
mov
mov
imul
insb
mov
cmpsl
test
out
pop
ja
xchg
cmc
xorb
mov
inc
cli
add
pop
or
xor
pop
push
cmp
lcall
out
xlat
ja
insb
mov
cmp
sbb
push
xchg
insl
push
hlt
andl
inc
int
mov
cmpsl
out
adc
cmp
stos
fmul
mov
stos
jbe
push
test
mov
imulb
xor
push
jne
in
add
pushf
ficoms
stc
inc
mov
stos
mov
lret
fisttpl
sbb
stos
and
pop
and
xchg
cmc
lret
imul
jo
xlat
into
hlt
xor
cmp
add
out
dec
jl
push
pop
mov
dec
je
cli
jge
es
hlt
out
cltd
mov
pop
movsl
jecxz
mov
adc
enter
xchg
daa
push
icebp
outsb
dec
sub
add
dec
push
int
sbb
xchg
in
push
inc
in
int
jno
mov
mov
lret
sbb
jle
shl
loopne
jmp
sub
mov
xchg
in
sahf
js
jl
cld
ds
scas
xchg
out
repz
jo
cwtl
insl
mov
mov
repnz
xchg
xor
popf
add
pop
std
aad
cs
pop
dec
enter
icebp
adc
add
test
out
fcoms
mov
jns
aam
sub
cmp
xor
sub
adc
push
in
or
xchg
cld
mov
loope
xor
adc
adc
pop
mov
adc
add
addl
enter
ds
inc
xor
gs
dec
pop
sub
das
push
es
scas
sahf
push
jmp
inc
mov
test
sbb
and
jl
dec
mov
mov
test
fnsave
jp
xor
cmp
enter
push
jno
or
dec
ss
push
mov
inc
pop
mov
dec
rcr
std
insl
lds
mov
jb
in
inc
sub
cmpsl
inc
mov
xor
pop
mov
sub
xor
mov
in
stos
arpl
bound
cltd
xchg
scas
into
lea
jp
xor
xor
mov
sub
or
mov
or
mov
xor
popa
pop
jle
aas
fistpl
addr16
aad
push
sub
imul
xchg
mov
in
cmp
pushf
bound
je
mov
jo
jg
outsl
shlb
and
fisttps
rcl
adc
stos
aaa
pop
cs
xor
popf
sbb
mov
dec
sbb
pushf
int3
lret
sbb
inc
bound
xlat
and
cltd
pop
jecxz
loop
daa
aad
cmp
test
inc
xchg
mov
sub
ficoml
xchg
lea
fcomps
mov
add
sbb
xchg
adc
xchg
shll
ss
sbb
jnp
aam
mov
testl
stc
bswap
mov
sub
lahf
popf
std
xchg
xor
lds
mov
pop
outsl
inc
int
push
sahf
ds
mov
es
stos
cmp
test
or
jns
je
addr16
test
stos
aaa
stc
cltd
xorl
sbb
inc
push
jb
or
push
dec
lret
xor
str
push
sti
sub
sbb
xchg
pop
jns
adc
sbb
and
rcr
xlat
test
mov
mov
retw
rcll
mov
push
mov
push
mov
jmp
xchg
jb
pop
cwtl
movsb
add
outsl
jno
dec
mov
pop
hlt
out
pusha
and
std
aad
nop
les
addr16
jmp
rcr
out
lock
test
add
or
shrl
mov
out
mov
jmp
jmp
cltd
mov
lea
jl
and
mov
pop
mov
negl
out
add
adc
and
aas
cmpsl
xor
jnp
inc
call
jle
setp
test
mov
ret
inc
lcall
jnp
add
jbe
fdivrl
pop
or
and
aad
pop
mov
inc
cmp
mov
mov
pop
leave
push
loop
out
sub
xor
xchg
daa
jle
cmp
sbb
mov
shrb
push
xlat
and
flds
je
adc
sbbb
es
icebp
fcmove
pop
or
mov
daa
push
inc
or
loop
dec
mov
sub
rcrl
push
lret
inc
test
das
movsb
scas
add
xchg
in
int3
pop
lcall
jne
jle
dec
push
add
in
int3
mull
xor
add
inc
sbb
faddl
sbbb
pop
fsubl
dec
xor
jge
fnsave
add
ds
lods
das
into
xor
pop
jbe
ja
jae
pop
sbb
mov
testb
sub
in
aas
lods
add
sahf
xlat
add
mov
pop
push
outsl
mov
rorl
rorb
xor
ret
clc
insb
mov
sub
push
push
les
mov
lods
xchg
mov
pusha
push
mov
pop
out
jb
xchg
push
in
add
into
je
outsl
pop
sub
or
and
ss
shll
dec
shrl
lea
mov
cmpb
xchg
mov
std
pop
pop
mov
test
fisttpl
cwtl
push
sub
subb
addl
inc
ss
lods
test
xor
out
sub
ja
subb
rcrl
test
cwtl
xchg
ror
jo
pop
fnstcw
lret
mov
testl
hlt
push
test
push
or
lcall
dec
push
jns
and
pop
loop
sbbb
out
lcall
imul
gs
dec
sub
mov
pushf
pushf
out
jo
pop
sbb
mov
cwtl
push
inc
fdivp
test
clc
test
push
pop
and
adc
sti
pop
sbb
dec
stos
or
sub
and
mov
adc
jae
jg
inc
mov
pop
add
mov
jae
mov
adc
mov
mov
xchg
jae
test
adc
jle
and
ficoms
out
lods
mov
fimuls
lret
xchg
les
push
loop
mov
mov
jp
adc
ljmp
inc
mov
and
xor
xor
and
data16
sub
cli
cmp
push
jle
inc
jg
push
stos
ret
push
aam
data16
scas
dec
pop
inc
mov
push
xchg
out
xchg
inc
xor
mov
inc
jecxz
adc
mov
lcall
jb
inc
sbb
clc
nop
icebp
pop
xor
push
mov
popf
sbb
test
rorb
dec
push
nop
cmpsl
cli
loop
push
into
stos
setnp
xchg
pop
movsb
popa
icebp
dec
shl
sub
mov
inc
pusha
ret
fs
mov
imul
imul
or
and
push
imul
add
dec
pop
mov
stc
sub
clc
in
jle
pop
inc
mov
in
and
mov
dec
test
sub
aad
pushf
popa
mov
jle
add
movsb
add
mov
pop
jae
push
push
arpl
or
add
ret
daa
insl
je
mov
xchg
js
fcmovbe
xchg
scas
outsl
mov
inc
xchg
mov
add
loop
cli
sub
ja
pop
sahf
and
inc
mov
leave
fdivr
sub
or
movsl
sbb
adc
mov
or
push
sub
je
pop
mov
sbb
push
les
pop
jne
or
or
mov
mov
imul
sbb
pop
push
movswl
dec
sub
xchg
jecxz
lock
test
ja
int
pop
xor
pop
pop
dec
dec
bound
stos
and
sahf
out
aaa
test
dec
xor
xor
into
les
enter
enter
jne
pop
fstl
scas
sub
lea
stc
jecxz
and
outsl
mov
mov
push
jb
inc
dec
jne
mov
es
shr
sbb
pusha
push
adc
jge
jp
stos
push
pop
pop
jmp
push
jno
sbb
jns
out
xor
xor
aaa
push
push
push
dec
lock
xchg
arpl
or
clc
jle
mov
shrb
cmpsl
int
loop
ljmp
data16
inc
inc
inc
into
fiadds
mov
aam
push
push
ja
dec
mov
negl
rcr
shll
enter
adc
mov
mov
aam
mov
mov
jecxz
ja
mov
mov
mov
mov
mov
inc
imul
out
mov
sti
clc
mov
add
add
xchg
cmpsb
mov
sub
mov
ss
loop
and
push
stos
xor
ja
mov
mov
xor
pop
inc
sub
jbe
push
inc
cs
and
push
mov
insl
cmp
loop
cmp
push
adc
addl
idivb
aas
cli
pop
faddp
dec
mov
mov
loop
mov
add
pop
dec
push
xor
and
mov
cmp
xor
adc
jne
shl
ljmp
jnp
daa
inc
and
adc
and
std
cmp
xor
test
cwtl
fists
insl
imul
mov
or
dec
lret
call
mov
pop
jo
push
icebp
lock
ret
repnz
mov
jl
pusha
bound
pop
adc
or
scas
inc
popf
inc
pop
jecxz
add
xor
stos
mov
add
dec
xchg
fistpl
cmpsl
xchg
push
ds
stos
mov
or
dec
inc
sub
frstor
sbb
dec
aas
mov
in
int
mov
outsl
jbe
shrl
cli
call
mov
daa
inc
or
jg
loop
rep
cmp
pop
movsb
adc
pop
sub
in
dec
add
mov
out
jns
js
inc
inc
mov
push
movd
imul
repz
lock
jmp
lods
mov
repz
scas
cmpsl
in
insb
sbb
mov
stc
lock
icebp
add
int
dec
add
pop
std
faddp
mov
pop
dec
pusha
stos
test
xchg
xor
insb
cmpsl
inc
inc
xor
push
cs
mov
mov
mov
jle
jle
fs
xchg
xchg
mov
xorb
xchg
pop
sub
rcll
adc
sub
enter
cpuid
dec
iret
cld
sar
push
pushf
fbstp
cmp
dec
cmp
mov
push
add
mov
fimull
xchg
or
xchg
and
pop
in
jb
or
jb
mov
mov
ja
mov
mov
mov
jns
movsb
shll
cli
sbb
xchg
sub
push
push
ds
popa
sbb
inc
mov
mov
mov
mov
inc
inc
jo
mov
xor
jecxz
or
push
lcall
pop
fwait
and
adc
gs
and
les
inc
adc
enter
xlat
xor
aas
and
xor
xchg
mov
std
dec
dec
add
cli
pop
imull
movsl
outsb
fidivs
fdivrs
jmp
pushf
push
out
xchg
lret
xor
aaa
pop
aas
cmp
jns
xchg
mov
xchg
arpl
sub
lahf
addl
sbb
pop
ljmp
fidivrs
loopne
mov
mov
sbb
adc
sti
int
iret
push
stc
dec
mov
lahf
pop
cli
cmp
dec
or
sarl
sti
and
sarb
mov
sbb
add
push
mov
lods
inc
scas
pop
mov
hlt
cs
test
cld
jge
arpl
cmp
out
pop
in
mov
sahf
xlat
mov
jp
lds
push
in
adc
je
xchg
mov
inc
jo
xchg
bound
ljmp
cmp
mov
fiadds
ljmp
sbb
jle
les
and
inc
cmp
insl
mov
add
icebp
outsb
push
xchg
xchg
gs
push
and
cs
adc
mov
mov
jno
mov
mov
xchg
jne
in
add
shl
and
sbbl
pop
mov
data16
lds
mov
mov
loop
cmp
jmp
das
jl
dec
or
xchg
test
bound
sub
xor
adc
sbb
mov
das
imul
xor
push
or
sbb
push
enter
jb
jnp
fdivr
dec
sub
and
pop
cltd
or
xor
add
adc
inc
adcl
jbe
js
lret
sbb
bound
dec
into
cmp
mov
mov
xor
dec
jmp
adc
push
mov
or
dec
lods
add
psrlq
iret
fcoml
push
sub
dec
and
jnp
and
fistpl
rorl
pop
mov
dec
sub
cmp
pop
ljmp
pop
fdivrs
mov
pop
mov
dec
scas
lea
pop
imul
out
add
mov
les
mov
in
xorl
push
xor
and
andb
std
fisubs
inc
adc
aam
movsb
add
cmpsl
inc
cs
inc
loop
dec
das
decl
insb
dec
fs
ror
pop
je
or
xchg
inc
sbbl
ret
out
fidivrl
mov
paddq
push
jp
in
repz
mov
mov
dec
fbstp
lods
xor
scas
jg
cmp
jmp
cmp
jp
add
and
inc
sti
mov
xchg
fwait
lcall
cmpb
enter
push
movb
fisubs
call
inc
adc
in
cmc
bound
repz
int3
and
or
fisttpll
adc
adc
fsubrs
jle
and
and
ljmp
or
and
mov
jge
rclb
nop
sbb
pop
fistpll
cmp
pop
pop
xor
cmp
es
sub
cmp
and
rolb
loop
add
in
divb
jecxz
xchg
loop
or
cli
xchg
lods
lds
inc
subb
lods
dec
enter
aam
mov
stos
arpl
inc
add
jmp
or
mov
iret
mov
lret
lret
in
mov
fistps
fists
or
mov
push
je
add
fistpll
mov
ljmp
jo
std
push
jge
lahf
mov
lret
sar
std
push
movsb
inc
push
fmull
push
jecxz
in
into
inc
mov
aad
pop
sub
out
mov
test
imul
pop
dec
lret
adc
xor
movsb
in
xor
mov
lds
cmpsl
adc
xorl
stc
sub
fildll
out
mov
xlat
push
sbb
mov
insb
repnz
dec
push
mov
push
aas
fidivrl
sarb
stos
push
xor
xchg
shlb
leave
in
add
or
sub
bound
add
ss
movsl
ret
sub
or
or
or
mov
xchg
test
pop
sti
adc
fmull
dec
ret
mov
cltd
je
mov
hlt
aas
or
cwtl
hlt
iret
mov
add
inc
jbe
xchg
mov
int3
mov
mov
pop
sbb
and
cwtl
mov
jge
sti
pop
fsts
ret
int
adc
inc
enter
inc
lcall
popa
fwait
mov
jo
dec
lods
cmc
sub
ss
ds
repnz
or
shll
pop
lahf
xchg
adc
outsb
insl
xor
xorb
gs
xor
mov
test
rorl
fmulp
repnz
mov
das
sti
inc
mov
es
roll
jno
xlat
adc
cmpsb
cli
gs
mov
xchg
mov
lea
das
xchg
mov
mov
dec
dec
rcrl
gs
ds
dec
lods
inc
add
jecxz
jno
dec
xchg
lahf
jge
dec
test
loope
or
nop
sbb
push
mov
insl
jno
clc
cmp
into
jge
ret
xor
adc
movsb
mov
jecxz
mov
sub
push
push
xchg
and
lret
in
push
sub
in
pop
sbb
jl
movsl
fwait
cmp
in
or
push
mov
push
pop
hlt
repnz
test
mov
or
ljmp
jmp
fldln2
jle
jecxz
std
xchg
es
inc
es
push
loopne
rep
pop
lret
jp
out
scas
xchg
loopne
push
test
xchg
jmp
mov
jne
shr
fisttpll
xchg
mov
nop
adc
dec
inc
cmp
sbb
divl
adc
orb
shlb
adc
and
leave
or
iret
dec
cmpsl
test
push
add
negb
xchg
mov
outsb
xor
cli
mov
lods
out
js
add
xor
xchg
mov
in
fdivrl
test
push
sbb
test
cmp
ds
adc
jno
int
jae
test
arpl
loopne
or
shl
jp
movsl
push
push
scas
shlb
inc
jo
and
lock
push
cmpsl
xchg
adc
ficoms
addr16
inc
pop
push
enter
mov
pusha
or
arpl
xchg
ffreep
lahf
fwait
daa
jg
xchg
mov
mov
sub
adc
icebp
in
lock
and
push
idivl
jle
call
inc
idivb
test
xchg
in
int3
adc
xchg
fildl
in
inc
cmp
lds
notb
jno
mov
cmp
sub
cmpsl
jae
push
lods
cmp
add
sub
daa
mov
test
or
and
sbb
adc
mov
and
pop
jp
mov
cmp
push
jg
into
repnz
hlt
aam
xchg
lods
in
ljmp
cmp
stos
int
or
push
and
xlat
mov
jae
sbb
or
jecxz
cmp
or
loope
int3
gs
xchg
call
sbb
push
ret
jne
sub
lods
adc
pop
ret
mov
ficoms
enter
xor
add
sbb
cmpsb
out
cltd
cmpsl
negl
push
dec
lods
push
jno
fiadds
xchg
inc
add
loop
test
inc
rolb
sbb
iret
sbb
mov
and
push
mov
vcvtps2dq
addl
xchg
push
sbb
jecxz
adc
jge
pop
jge
int
xchg
rorl
in
cmp
fld
cwtl
shr
pop
outsb
enter
pop
cmc
adc
inc
pusha
sub
pop
into
daa
pusha
mov
jge
testb
cmp
dec
pushf
jbe
inc
ret
pop
ljmp
imul
or
in
mov
inc
int3
fsubl
pusha
inc
inc
dec
sub
mov
enter
lahf
sbb
push
push
mov
mov
sti
xchg
or
xor
sbbb
ror
mov
sbb
mov
jp
aaa
shl
cltd
mov
xchg
mov
push
ret
out
lcall
jae
fcomip
ret
add
out
push
xchg
mov
fidivrs
out
out
mov
add
out
aam
dec
cmp
push
std
dec
pop
push
xchg
fdivs
xor
dec
hlt
mov
jg
jnp
out
sbb
jo
test
and
xchg
je
sbb
stos
inc
loope
xchg
scas
insb
mov
in
fdivp
mov
fwait
add
cmp
xchg
sahf
adc
mov
cmp
gs
cmp
cwtl
lret
or
dec
gs
and
and
xorl
cmpsl
inc
into
imul
mov
push
jle
stc
stc
cmc
fmuls
arpl
int3
sbb
fistpl
sub
mov
out
mov
xor
pushf
lock
mov
sahf
fldt
jo,pt
or
mov
and
or
adc
dec
dec
insb
dec
adcl
jmp
lods
call
or
xor
mov
dec
sti
xchg
filds
add
repnz
cmp
icebp
add
mov
lods
cld
or
mov
loope
inc
and
std
das
mov
xchg
fists
mov
jecxz
stos
enter
aad
jnp
les
inc
in
xchg
jle
lea
lods
es
ljmp
in
sub
bound
out
push
xor
jecxz
popf
mov
dec
sti
int
daa
js
and
xorb
push
sbb
fldenv
mov
es
lea
leave
inc
hlt
xchg
imul
mov
cmp
lea
mov
jnp
cvttps2pi
xchg
imul
push
aam
mov
xchg
xor
mov
add
or
mov
mov
movsb
and
dec
dec
popf
je
loope
fistpll
stc
loope
mov
jne
push
lret
cmp
notb
daa
test
or
adc
inc
cltd
mov
push
ljmp
in
cmp
bound
push
out
out
sbb
mov
add
xchg
lahf
xchg
push
lods
mov
jb
lret
pop
in
or
sbb
adc
and
std
mov
aaa
xor
mov
loop
test
frstor
loope
sbb
lcall
mov
jl
aad
push
popf
sbb
fsubl
jb
in
lock
lcall
insl
shl
jns
sahf
pop
shlb
notb
icebp
pop
and
cltd
fwait
icebp
adc
cwtl
xor
pop
js
jae
ljmp
pop
inc
sub
insb
mov
scas
jmp
shrl
sub
cmp
test
mov
push
int3
fsub
std
or
xchg
sarb
cwtl
addl
or
shll
push
fdivl
in
js
add
aam
jne
dec
xor
add
cltd
inc
pop
ret
jne
sbb
fwait
out
lock
imul
add
pusha
or
loop
push
jl
jb
cmp
addr16
jne
enter
xchg
hlt
int3
jl
inc
imul
imul
cmpl
out
in
popf
pop
fsubr
inc
cmp
and
mov
or
cmpsl
inc
je
jg
mov
enter
sti
cwtl
decb
jmp
call
xchg
push
mov
mov
pop
mov
scas
mov
push
mov
mov
xor
pop
jl
repnz
fsubr
mov
jo
pop
lahf
cli
mov
jge
hlt
mulb
dec
push
cltd
ljmp
sbb
mov
pusha
add
mov
mov
imul
mov
inc
fists
push
movsl
fdivr
cli
lcall
imul
cmp
push
cwtl
pop
cmp
add
push
inc
push
xchg
dec
xor
xchg
mov
mov
mov
into
cmc
mov
cmp
fcmovne
mov
cli
pop
and
fwait
loope
jg
sub
xchg
pop
push
jp
cli
sub
leave
xchg
push
movsb
pop
andl
xchg
mov
fsubl
jae
clc
addr16
push
mov
test
rcl
in
mov
push
or
jp
or
leave
outsb
lret
inc
mov
inc
sub
sbb
clc
xchg
jae
loop
sbb
push
pop
sub
stos
sbb
mov
xor
pop
mov
movsb
mov
ljmp
adc
fisubl
arpl
inc
jge
or
cli
push
filds
jb
addr16
cmpsb
mov
std
jg
jmp
fstpt
scas
cwtl
fs
inc
sbb
push
inc
push
add
add
repz
jl
mov
orb
push
jb
sbb
xchg
mov
pushf
adc
sub
adc
jae
jns
fldenv
push
stos
dec
pop
inc
pop
push
test
xchg
jecxz
shll
inc
aad
lods
sbb
xchg
push
xchg
inc
inc
std
popl
cmpsl
jg
dec
in
in
pop
xchg
sarb
mov
dec
int
inc
mov
fsubs
shll
push
lea
jne
add
jbe
fs
shrb
add
pop
or
cmp
cmpsb
or
pop
adc
out
dec
jp
je
mov
jnp
or
movsl
dec
cld
pop
or
rorb
fsub
hlt
ret
pop
icebp
adc
ret
push
xor
push
out
ljmp
add
rcrb
dec
mov
pop
jnp
cltd
inc
test
lcall
aaa
adc
or
enter
pushf
sub
xor
dec
orb
rcll
test
out
pop
movsb
scas
push
xchg
cld
mov
mov
gs
leave
out
gs
mov
movsb
dec
inc
in
scas
and
sbb
adc
out
jge
adc
adc
outsb
mov
cmp
push
imul
fwait
jp
in
nop
inc
mov
rcrb
imul
mov
clc
js
rolb
in
das
jecxz
sbb
jecxz
pusha
jb
pop
popa
pop
negl
into
sub
sarb
mov
shl
loop
into
push
fwait
dec
or
jp
cmc
mov
add
sub
adc
cs
sahf
jl
pop
out
imul
mov
daa
mov
test
mov
pop
mov
mov
mov
fdiv
call
mov
stos
and
mov
cmpsb
sbb
add
cs
xor
adc
cmpsb
and
adc
gs
hlt
out
bound
cwtl
out
sbb
dec
xor
lret
xor
imul
push
arpl
inc
xor
or
sbb
push
and
ds
mov
mov
jnp
sub
lret
aam
xor
int
cwtl
loopne
inc
add
idivl
into
pushf
movsb
leave
inc
test
shll
rcrb
ret
dec
out
mov
ljmp
ret
jl
not
pop
cmp
movsb
and
in
and
hlt
inc
repnz
lock
cmp
dec
push
dec
inc
iret
cmc
in
xor
in
cwtl
push
sbb
push
movsl
mov
shrb
popf
in
sub
xor
adc
and
mov
inc
ja
pop
insb
jge
add
sbb
pop
dec
dec
mov
xchg
adc
sub
loope
xor
mov
test
lods
jle
or
test
icebp
mov
mov
bound
push
jl
in
dec
push
mov
insb
mov
push
es
jg
gs
std
je
fistps
cmp
push
negb
clc
je
leave
mov
or
mulb
sarl
int
jns
fisttpll
sti
pop
loopne
pushf
cwtl
fadd
pop
loop
and
fs
push
test
push
incb
mov
or
test
jge
dec
dec
jle
les
mov
jg
dec
pop
sbb
das
inc
call
and
sub
clc
aas
and
push
test
jmp
dec
mov
dec
mov
pop
or
lahf
mov
xchg
and
leave
fmuls
dec
fwait
data16
jo
jne
std
xor
mov
sub
icebp
in
mov
xor
in
cmp
stos
rclb
cmp
xchg
int3
xchg
mov
sub
lret
movsb
loopne
scas
and
enter
addr16
xlat
cmp
test
fidivl
adc
and
and
cs
mov
test
mov
outsb
ljmp
pop
mov
dec
sub
add
rcr
lds
or
ljmp
roll
lods
in
setae
inc
fisubrs
repnz
imul
mov
fldenv
scas
test
dec
adc
inc
callw
push
pop
fnstenv
mulb
fidivrl
lods
scas
jb
inc
ret
test
imul
push
shrd
aam
and
mov
movsl
fidivrs
cmp
stc
mulb
lds
add
lods
xor
push
inc
and
xchg
jecxz
mov
loopne
loopne
fmull
stos
outsl
idivl
fidivrs
push
pushf
and
xor
test
sub
popf
sub
xor
inc
bound
xchg
sbbl
jno
jmp
jo
xchg
out
pop
sub
sbb
loope
sbbl
cmp
xlat
mov
mov
add
ss
mov
mov
push
fldcw
inc
in
xor
lds
stos
test
cmp
push
adcl
mov
xchg
inc
jge
dec
inc
add
jmp
cmp
add
and
push
xchg
add
add
shlb
adc
mov
daa
sub
sbb
and
mov
inc
and
add
pop
jno
mov
cld
xchg
xchg
fisubs
and
push
out
adc
insb
clc
push
push
sub
imul
add
imull
mov
sarl
jg
stos
notl
test
and
in
sub
fsubrl
sub
sahf
das
lds
loopne
fidivrl
cmpsb
dec
jbe
lret
mov
mov
lea
xor
sbb
mov
push
inc
bndldx
mov
test
adc
jl
mov
movsl
sarb
pop
add
mov
ficoml
repz
inc
xorl
scas
and
rcll
movsl
cmp
xchg
mov
call
loope
and
inc
sahf
and
notl
xchg
arpl
dec
jecxz
icebp
insb
shr
or
pop
repnz
decl
stos
aaa
push
jb
out
jle
cltd
ss
in
out
cmc
sbb
lret
sahf
xor
repz
and
mov
or
pop
xchg
add
xchg
outsl
push
idivl
jno
outsb
movsb
fnstcw
xor
pop
sub
es
in
jle
mov
mov
mov
sub
cmpsl
stos
rcl
pmulhw
push
jbe
jecxz
into
sbb
fs
mov
dec
hlt
test
test
and
fldl
xor
testb
xor
lods
inc
or
sbb
sbb
jl
xchg
aas
and
cmp
ljmp
jnp
lret
out
bound
mov
scas
sub
mov
xchg
pusha
push
stos
and
repz
outsl
sahf
cmc
xor
mov
bound
adc
mov
sbb
and
sub
int
xchg
es
cmp
in
jl
decl
mov
jecxz
jbe
cmp
push
mov
hlt
mov
jnp
add
pop
inc
xchg
fmuls
or
dec
das
scas
sbb
jns
jb
sbb
xchg
jbe
pop
mov
mov
xlat
and
out
je
push
mov
xchg
in
cmp
pushf
fistl
mov
ret
inc
mov
and
movsl
cmp
push
mov
stos
out
imul
shrl
addr16
lea
adc
int3
sbb
mov
mov
pop
inc
inc
xor
roll
dec
fs
mov
mov
std
fnstcw
shlb
pusha
mov
cmp
scas
pop
pop
out
sub
jmp
leave
adc
icebp
push
icebp
inc
lret
xor
and
setb
cmpsb
inc
dec
jb
mov
sub
fisubrl
xchg
cld
sbb
ljmp
sahf
or
test
cmp
cmp
mov
xchg
aaa
dec
dec
scas
cltd
mov
xlat
mov
icebp
mov
add
xor
in
in
push
jb
ret
xchg
movsb
sub
mov
out
and
das
scas
pop
adc
sti
mov
mov
mov
mov
and
mov
dec
jmp
lods
ret
stc
push
jb
fstpt
mull
int
clc
je
jmp
test
fdivrl
pop
xchg
push
mov
jno
mov
xor
jmp
pushf
pop
or
mul
xchg
sbb
push
outsl
pop
movsb
inc
enter
jl
mov
mov
into
je
jb
movsl
sub
xacquire
pop
in
dec
jl
and
push
pop
dec
imul
mov
bswap
sub
imul
push
cli
loope
das
mov
pop
inc
sarl
add
cmp
mul
mov
dec
bound
add
nop
in
mov
loope
adc
add
fsubl
stos
not
and
and
or
sbb
inc
sti
addr16
popf
popa
or
cwtl
movsb
mov
int3
or
adc
aas
lcall
test
adc
subb
mov
repnz
cmp
out
imul
mov
push
pushf
xor
jno
std
dec
mov
push
int3
xchg
sub
jbe
pop
mov
enter
dec
cmp
aaa
or
hlt
in
pop
lock
sub
andb
int
mov
push
addr16
js
popa
jmp
and
cli
inc
mov
xchg
and
mov
mov
mov
cmp
popl
xchg
aam
gs
jno
popa
push
test
jecxz
adc
loopne
fwait
mov
cmp
mov
adc
and
mov
dec
cmp
int
sbb
pusha
or
out
addb
aam
nop
pop
mov
fistpll
fs
jmp
idivl
jns
ljmp
cltd
xchg
mov
clc
mov
adc
jp
outsb
xlat
cmpsl
rol
popa
stos
sub
lea
fcoms
lcall
mov
fwait
lods
fisttpl
iret
jle
pushf
stos
adc
cmp
repnz
jbe
xchg
sbb
fcmovu
popf
cli
outsl
sub
jp
xchg
test
xchg
mov
push
dec
lcall
and
add
pushf
pop
loopne
shll
cmc
leave
test
pop
push
popf
adc
xchg
arpl
sub
add
lds
or
hlt
lea
mov
mov
mov
jae
nop
and
loope
push
and
sbb
outsl
xor
cs
pop
or
pop
insb
lret
movl
push
dec
inc
dec
sbb
cmpl
inc
inc
xchg
push
mov
add
imul
ds
xor
ja
aad
incl
and
mov
test
push
inc
mov
inc
mov
mov
mov
aam
imul
cmpsb
lds
mov
jge
add
jp
aam
dec
repnz
loope
pop
andl
mov
fbld
ja
push
push
lock
jmp
fisttpll
xor
dec
out
pop
mov
ljmp
xchg
dec
pushf
sub
bound
scas
sub
jb
cli
pop
mov
in
pop
stos
repnz
add
inc
movsb
mov
movsb
hlt
dec
cmp
sub
jg
push
pop
sub
stc
arpl
push
pop
mov
shlb
aam
stc
fdivs
push
bound
mov
push
pop
ljmp
into
pop
sub
xor
sub
sub
mov
mov
aad
in
pop
pop
jl
inc
adc
cmc
fs
sbb
sub
je
push
push
aad
jno
inc
lahf
mov
jge
loope
push
mov
inc
adc
fwait
ds
mov
imul
cmp
notl
das
jnp
push
mov
adc
cmp
mov
mov
jl
push
jp
cmpb
out
xchg
aas
inc
mov
push
mov
in
lods
push
xchg
scas
sbb
stos
enter
hlt
test
stos
jg
push
mov
or
pop
and
cmp
lahf
mov
push
pop
inc
aad
sub
outsl
mov
stc
pop
stos
lods
mov
cmpsb
mov
cmp
lret
mov
addr16
or
xchg
mov
fcompl
jae
fnstenv
jmp
sbb
mov
pop
mov
cmp
push
shrb
pop
call
jns
jb
or
mov
mov
cld
rolb
cmp
sub
pushw
sub
lock
scas
xor
mov
push
lds
jl,pt
fcmovnbe
insb
push
mov
nop
cwtl
sbbl
mov
loopne
xchg
into
push
movsl
mov
das
ja
cltd
movl
lcall
add
xchg
jle
out
repz
test
adc
sahf
mov
xor
xor
imul
inc
inc
sub
test
sub
mov
sbb
pop
bound
sub
mov
ret
sub
pop
xchg
flds
dec
add
pusha
mov
pop
imull
out
negl
cmp
ret
mov
xchg
add
jo
stos
sbb
scas
std
xor
cmp
inc
fldcw
cmpsl
cmp
cli
add
jecxz
xor
mov
in
shlb
mov
add
add
loopne
dec
lods
and
push
and
mov
inc
xchg
inc
je
daa
mov
movsb
mov
inc
ret
in
cmp
shrl
leave
cmpsl
pop
into
push
in
mov
sbbb
mov
and
fists
jae
pop
lock
out
mov
pusha
jge
jne
insl
push
push
inc
inc
xor
inc
push
out
push
inc
insb
mov
xor
pop
test
jg
movsb
cld
inc
or
out
jo
fmuls
push
pushf
ds
shlb
lret
in
arpl
mov
fs
add
shll
mov
pop
push
cltd
jmp
lret
enter
push
jg
pop
aam
and
sub
inc
mov
dec
jns
mov
mov
sub
daa
mov
inc
ljmp
cmp
test
cmpsl
xchg
or
mov
mov
push
cmp
aad
pushf
mov
jbe
mov
mov
jnp
dec
dec
and
les
les
fsubr
shl
dec
dec
cli
rorb
push
enter
push
pop
cs
jge
adc
pusha
es
cmp
sbb
popl
mov
fldenv
and
imul
or
call
inc
into
mov
and
in
fsubrs
adc
ja
hlt
sub
ret
cmp
push
mov
loop
push
xor
addr16
bound
mov
test
fyl2xp1
pop
repz
scas
js
mov
inc
cmp
iret
xchg
jle
ret
movsl
std
repnz
jge
jae
inc
adc
testb
popf
dec
loopne
add
insb
dec
cmpsl
sub
and
pop
in
rorl
dec
xor
mov
cmp
loope
jae
mov
out
out
add
ret
push
imul
pop
hlt
add
fnstenv
and
shrb
adc
or
add
sti
add
add
dec
in
sbb
jmp
jg
out
push
adc
scas
mov
vmovntps
mov
in
xchg
inc
push
ljmp
jns
jecxz
nop
into
out
or
popa
adc
sub
pushf
mov
aaa
push
rol
cs
sub
mov
cmp
and
addr16
or
popf
inc
sub
hlt
fisubl
cmp
ljmp
dec
test
jg
sub
cmp
mov
push
popa
mov
fimuls
mov
loop
dec
push
mov
cwtl
pop
aaa
out
fmull
in
mov
mov
pop
mov
sub
out
insl
mov
out
inc
loop
cmpl
fs
imul
jecxz
xchg
loope
dec
push
cmpsb
mov
shll
insl
ficoml
cltd
pop
xor
fs
and
outsb
lret
mov
jmp
and
pop
pop
lcall
and
mov
dec
mov
fimull
scas
ret
scas
daa
pop
movsb
popa
mov
xchg
add
mov
pusha
xor
xor
shll
mov
negl
aaa
add
or
les
sub
es
ret
gs
push
int3
pop
cmp
test
xor
aaa
mov
std
push
jns
jle
mov
add
mov
pop
xor
mov
add
pop
xor
xchg
cltd
mov
or
mov
sub
add
or
icebp
lods
pop
xchg
rcr
pop
cmpsb
xchg
sub
les
movsl
sub
mov
sbb
sub
movsb
icebp
jae
divl
cwtl
je
mov
gs
xchg
mov
inc
dec
inc
add
cmp
out
or
inc
mov
mov
cmpl
sbb
push
sub
aad
adc
and
mov
sub
pop
add
loopne
popf
dec
je
mov
adc
mov
jp
inc
in
xor
das
add
ret
ffreep
mov
push
in
mov
lds
pop
cld
shrb
push
lds
fwait
mov
jecxz
out
jge
mov
out
lret
sti
lds
xor
xlat
add
in
dec
lods
dec
or
mov
push
orb
adc
fnstenv
dec
fwait
mov
mov
pop
and
sbb
pop
adc
sbb
pop
add
ljmp
add
xlat
ret
cmpb
outsl
and
inc
pop
dec
mov
lret
inc
pushf
testb
stos
dec
stos
lock
and
enter
dec
fisttps
mov
jbe
loopne
fists
shld
xchg
adc
stc
movq
sub
sub
mov
sub
popa
icebp
loope
lock
adc
mov
sbb
jl
es
jecxz
xchg
cli
aas
jbe
pop
lret
mov
test
jl
mov
lea
jnp
ret
inc
mov
add
cmp
sub
in
stc
jge
das
or
jae
pop
jge
int3
ficompl
sbb
into
cmp
jbe
jae
rcll
stos
mov
add
or
pop
filds
cmp
mov
into
out
cmc
sub
cwtl
mov
stos
push
cltd
sahf
sub
lahf
cmpsl
xchg
hlt
out
stos
sahf
mov
pop
fdivs
jge
adc
jnp
notb
lret
out
fdivs
popf
std
jne
movsb
lret
divb
cmpsl
mov
stos
je
sub
pop
inc
dec
or
sub
loopne
pop
adc
mov
popf
jmp
test
fmul
dec
and
leave
inc
lret
dec
mov
call
jle
add
sti
mov
xchg
jbe
xchg
pushf
aad
mov
mull
int
and
negl
xor
mov
cmp
jbe
popa
cwtl
add
enter
fucomip
fstp
and
aas
adc
cmp
sbb
cmc
mov
jg
and
cmp
xor
push
mov
mov
cmp
bound
or
xchg
cmpsb
and
add
mov
add
ret
icebp
or
and
filds
out
xor
inc
stc
stos
nop
shr
xor
stos
jmp
sbb
lods
push
or
rcr
sub
ret
inc
push
cmp
add
sbb
or
in
fsubrl
adc
adc
mov
inc
clc
xchg
test
and
testb
inc
cmp
leave
clc
cli
sbb
loopnew
adc
shll
aas
jo
loop
mov
outsl
call
sbb
jne
stos
push
jmp
test
ret
pop
pop
jb
mov
dec
jecxz
test
add
outsl
mov
popf
fsubs
inc
cs
iret
movsl
fidivs
cs
cld
cmp
lret
aad
jns
fmull
sub
jl
imul
pop
xchg
xchg
loope
add
fdivr
and
lcall
pop
out
fdivrs
stos
mov
and
xor
pop
leave
adc
aas
mov
gs
loope
or
leave
dec
xchg
cmpb
sbb
stc
pop
pop
mov
stos
lret
ror
aam
add
mov
jmp
arpl
adc
in
loope
call
adc
pop
jmp
inc
ror
pop
push
mov
and
insl
pop
and
pop
xchg
adc
and
fdivr
xchg
pop
mov
inc
out
les
cli
lcall
xchg
xor
xchg
jbe
into
out
push
jmp
jbe
jno
out
not
jb
shll
xchg
in
lods
mov
pop
push
jg
xchg
dec
sub
jmp
push
jnp
cmc
shll
dec
shll
or
xor
cli
lret
mov
and
mov
pop
push
bound
cmc
gs
aad
insl
mov
add
mov
fwait
sbb
cwtl
fsts
test
or
fstpl
fidivrl
push
and
push
jp
sub
ja
fdivs
nop
push
and
pop
cmpb
bound
xlat
fdivrs
pop
flds
lods
js
xor
mov
inc
popf
sbb
mov
or
or
shll
andb
push
hlt
push
xchg
and
ss
out
aad
xchg
ja
sarl
out
out
adc
and
cmp
and
sub
loopne
fcmovb
leave
push
pop
leave
sahf
cmp
aam
clc
jns
es
inc
shlb
incl
mov
jmp
loope
or
ja
scas
push
or
push
into
std
jne
jns
sahf
ret
in
push
sbb
lods
loope
xchg
jmp
rol
insl
bound
sbb
ret
inc
cmp
pop
fst
lcall
xor
mov
sub
outsl
push
mov
sbb
test
add
lea
lahf
xchg
pusha
mov
cli
negl
dec
pusha
xchg
fistl
rorb
pop
mov
fimuls
in
stc
sbb
sbb
jp
cmpsl
jge
sbb
mov
sub
das
js
jp
les
addl
xchg
das
add
outsb
jb
mov
cmp
loopne
mov
and
adc
fwait
mov
jmp
notb
rcll
rorl
jg
jno
mov
ds
mov
sub
fs
repz
cmc
sahf
cmp
popf
xor
mov
mov
xchg
out
imul
sub
popa
imul
pop
cmp
jae
pushf
pop
cltd
lahf
xor
ret
lods
push
or
ds
push
sub
icebp
jo
ret
cmp
pop
cmc
push
mov
repz
sub
jne
inc
adc
mov
sub
mov
ljmp
sti
dec
je
mov
test
push
cmpsb
xor
scas
and
fwait
aaa
xchg
pop
dec
mov
push
add
cmp
push
loop
push
mov
out
or
pop
out
mov
hlt
inc
outsb
or
sub
push
lds
fistps
push
push
shll
sahf
add
add
sub
pushf
push
xchg
scas
test
ret
and
cmp
mov
push
scas
xchg
sub
and
mov
int3
push
les
mov
lds
nop
xchg
cld
subl
mov
lret
andl
iret
inc
lods
mov
add
push
enter
inc
cltd
les
cwtl
ret
cmpsl
mov
adc
lcall
shrl
std
mov
lock
dec
movsb
sub
or
dec
and
cmp
lahf
jmp
push
xchg
dec
mov
xor
mov
ret
aas
push
pop
jg
jmp
cmp
cli
and
cmp
jmp
xchg
xchg
andb
popa
inc
xchg
mov
addr16
stos
fwait
and
sbb
cmpb
jle
cmp
insb
call
mov
jmp
adc
les
in
jb
mov
and
inc
mov
lock
loop
test
dec
sub
iret
repz
xchg
jecxz
adc
cmp
cld
pop
push
outsl
and
fiadds
jmp
push
aaa
and
sbb
mov
mov
arpl
lods
xchg
mov
or
dec
mov
sahf
cs
push
push
imul
xchg
inc
xor
loop
out
jp
adc
fdivs
mov
mov
or
cmp
mov
xchg
and
arpl
add
lahf
inc
pop
fwait
jbe
mul
xchg
inc
inc
jae
jbe
push
push
jo
jo
or
mov
jmp
mov
mov
mov
shrb
shlb
add
lods
push
mov
cld
es
mov
fnstcw
es
mov
aaa
mov
inc
mov
fimull
xlat
stos
lret
jg
icebp
mov
jle
int3
call
jecxz
test
dec
fldenv
aad
sub
cli
xor
mov
jbe
mov
outsl
pop
test
inc
jecxz
xchg
jb
aaa
lock
push
mov
cwtl
add
or
dec
and
fs
push
mov
mov
bswap
sub
sahf
pusha
popa
int3
cmp
stc
jmp
cmc
gs
sbb
mov
jb
jmp
xchg
and
mov
leave
lds
lret
xchg
mov
or
enter
movsb
jbe
cmp
mov
dec
iret
stc
mov
shrl
fmuls
jle
push
sub
push
adc
lcall
mov
xor
push
inc
pop
push
bnd
cmp
add
adc
jmp
psubusw
cmpb
adc
int
mov
mov
add
push
enter
mov
outsb
in
iret
in
test
add
sub
mov
es
pop
icebp
out
mov
es
mov
aam
push
add
mov
fisttps
adc
dec
enter
insb
adc
fmul
cltd
cmpsb
mov
mov
jno
mov
insl
cmp
jne
xchg
jnp
pop
rorb
neg
inc
cmc
mov
mov
in
add
lret
enter
mov
pop
pop
xor
adc
add
es
lret
push
mov
ret
jp
xchg
les
mov
bswap
sbb
clc
fnstcw
loopne
pop
imul
add
sub
ljmp
in
cli
push
insl
cwtl
fimull
jbe
cli
adc
and
addl
sbb
cmpl
movl
movsl
bts
fld
faddl
movsb
pop
or
test
arpl
out
push
sbb
ret
out
cmp
mov
movsb
stos
xor
icebp
inc
and
or
in
adc
test
mov
test
arpl
insl
adc
movsb
rolb
fdivr
mov
dec
sub
inc
nop
je
loope
pop
jne
movl
ljmp
sub
pushf
xchg
ljmp
mov
test
fimuls
add
stos
sbbb
pop
cmp
aaa
mov
push
mov
shll
test
insb
fisubrs
das
or
test
out
mov
movsb
adc
xor
push
push
jnp
es
or
clc
and
mov
mov
and
or
aad
daa
iret
mov
sub
aam
add
daa
mov
xor
fsubrl
push
and
sub
sbb
xor
and
stos
les
sbb
fbld
dec
jmp
push
int
test
pop
loop
xchg
pop
add
mov
jne
cmpsb
jl
cmp
dec
bound
mov
cld
mov
mov
outsb
lds
scas
mov
movsb
scas
je
cmp
test
sbb
aad
jecxz
mov
add
cmc
add
mov
cmp
ffree
shrl
pop
test
ret
sbb
jecxz
cltd
and
pop
cmp
js
je
push
jg
add
arpl
adc
out
arpl
out
xor
xchg
lea
or
iret
and
sti
outsb
arpl
pop
add
adc
popf
hlt
inc
stos
loopne
sbb
and
adc
ljmp
les
xor
mov
mov
movsl
push
mov
pop
push
xchg
jbe
jmp
inc
int
mov
xchg
je
mov
push
lret
xorb
push
pop
mov
xor
and
cmp
push
push
mov
loop
std
fdivr
and
dec
fbstp
mov
int3
push
lock
sbb
xchg
adc
aas
mov
push
insb
or
cmp
movb
sarl
cltd
xchg
cwtl
daa
mov
test
fisubl
sbb
out
sub
nop
push
inc
mov
in
sbb
xor
and
mov
inc
mov
ja
cmpsb
jae
imul
sbb
mov
rcrw
imul
int
add
add
mov
out
pop
cmp
jnp
sub
jmp
pop
xchg
fdivrs
or
adc
rolb
dec
dec
cmp
sub
and
shr
fisttpll
mov
aaa
shlb
fcomps
cld
test
dec
mov
jnp
daa
mov
fdivs
shlb
cmp
lock
and
push
mov
sub
cld
aas
push
push
repz
mov
lods
hlt
mov
mov
in
or
inc
shll
pop
in
std
push
and
cmpsl
xchg
pop
fs
enter
mov
loopne
xchg
incb
sub
les
ja
loopne
xor
inc
sbb
js
xchg
cmp
in
jle
xchg
add
add
add
shrb
xor
pop
cwtl
lahf
jle
xchg
int
int3
mov
mov
scas
scas
int
scas
fwait
cmpsl
push
repnz
cmp
or
dec
pop
inc
mov
mov
adc
sbb
sbb
sahf
cld
jecxz
pop
test
test
and
call
sub
mull
fildll
xor
fs
sbb
sbb
enter
jbe
inc
bound
xchg
mov
push
repnz
cli
inc
push
mov
insb
test
enter
mov
dec
inc
sub
jle
sub
mov
jecxz
ret
xchg
aas
sub
imul
jl
fisttpl
mov
lods
mov
cmpsl
clc
dec
push
and
cmp
fmulp
xor
push
outsb
pop
lods
mov
test
jmp
inc
js,pt
xor
jae
cmc
adc
insl
out
adc
push
push
lods
push
aas
jnp
jns
pop
jns
icebp
add
les
xor
xchg
sub
cmp
add
push
lods
xchg
dec
leave
fstps
aam
aad
pushf
insb
popaw
test
jo
cwtl
insl
es
jg
adc
shrl
roll
push
dec
push
lods
fisubrs
inc
xchg
out
das
mov
inc
adcl
pop
jg
mov
cmpsl
xchg
hlt
ss
jno
lods
sbb
add
dec
hlt
je
inc
bnd
jecxz
fistl
movsl
arpl
out
adc
out
in
sbb
cmpsb
and
jns
cs
lret
daa
call
orl
pop
mov
or
fnstsw
sar
mov
cmpb
dec
and
mov
sbb
shll
ret
stos
push
arpl
pop
lahf
ret
mov
std
pusha
add
push
test
dec
das
mov
dec
jp
pop
inc
jne
jno
popf
adc
mov
mov
sti
lret
fsubs
jno
xchg
imulb
pop
or
movsl
mov
mov
dec
dec
not
adc
sbb
pop
xchg
push
int3
cmp
ja
adc
mov
fs
and
test
xchg
iret
sar
mov
jb
movsl
call
fs
shrb
fnstenv
in
iret
dec
clc
stc
popa
push
jmp
sub
push
inc
rcrl
push
gs
cld
mov
pop
or
mov
cmp
jo
pop
scas
fisttps
leave
dec
jo
mov
aam
ret
mov
fadds
jmp
pop
aam
add
dec
inc
mov
out
dec
xlat
push
or
or
xor
sub
mov
sbb
je
dec
push
shll
sbb
xchg
repz
fstp
push
inc
fcomip
out
ficoms
pusha
sbb
pop
mov
out
xchg
stos
loopne
or
mov
outsl
inc
shll
rcrb
and
out
adc
andb
sbb
fistpl
adc
lods
xchg
xor
mov
call
xchg
cld
ds
inc
pushf
xchg
pop
push
andl
push
aas
iret
jno
xchg
jge
jae
or
sarb
cld
cmpsb
imul
in
sub
enter
aam
push
push
add
pop
leave
leave
push
mov
addr16
pop
mov
pop
push
mov
lock
push
mov
xlat
ss
pusha
dec
lods
inc
les
dec
mov
sbb
sub
or
cltd
loopne
aam
data16
test
push
mov
jne
inc
test
xchg
xlat
dec
orb
add
mov
aas
inc
mov
push
loop
pop
stc
mov
imul
mov
push
jecxz
jns
xorl
jmp
mov
pop
lcall
std
int3
push
sbb
js
add
jbe
jnp
or
loopne
xchg
insl
pop
pop
gs
lahf
hlt
inc
lret
pushf
jecxz
dec
mov
in
mov
xor
pop
cmp
fdivl
addl
mov
push
pop
jb
shrb
popf
clc
jbe
sbb
cmpb
clc
pop
repz
sar
mov
cmp
jmp
sbb
add
pop
rorl
sbb
pushf
les
stc
outsw
xchg
dec
out
push
and
mov
sbb
inc
mov
out
and
jg
ror
jbe
jmp
popa
cs
aas
lods
mov
inc
xchg
pusha
push
push
lret
or
push
push
sub
addr16
sbb
adc
mov
imulb
test
repz
jns
addr16
dec
mov
fdivl
mov
test
cmp
jns
movsb
inc
dec
or
mov
dec
lret
sub
push
sub
push
pop
test
es
stos
aas
in
sbb
add
scas
mov
sahf
sarl
cli
pop
add
mov
negb
int
xchg
mov
js
mov
rcl
mov
mov
lods
ss
pop
xor
pop
cli
cs
xchg
xor
add
sahf
sti
movsl
mov
pop
outsl
xchg
jns
das
aas
jle
lret
xchg
fldcw
roll
insb
loop
mov
and
pop
ljmp
sbb
sub
addl
inc
mov
xor
jecxz
sbb
inc
mov
aam
pop
scas
cmc
mov
fiaddl
data16
into
repnz
push
pop
idivb
lds
stos
pop
dec
iret
test
xor
nop
dec
sbbb
push
pop
cltd
or
fs
and
mov
sub
sbb
xor
stc
bound
jb
test
mov
cmc
add
xor
or
xor
mov
popf
pushf
cmpl
mov
es
out
push
pop
pop
data16
sarb
test
sarb
push
and
dec
mov
scas
cmpsb
dec
int3
js
test
or
add
jge
mov
adc
jmp
rcll
push
outsb
sbb
mov
ja
fsts
iret
rcr
pop
add
loop,pt
xchg
aas
outsl
mov
dec
loop
ret
sub
jb
xchg
std
add
jnp
sbb
fwait
xor
cmpsl
mov
idivl
inc
scas
mov
sub
mov
sub
call
sbb
lea
cmp
iret
subl
xchg
sbb
repnz
repz
jbe
scas
dec
lcall
dec
shll
xchg
out
ljmp
dec
int
pop
or
movsl
pop
in
frstor
in
sti
ret
sbb
mov
flds
jnp
xchg
testl
sarb
lods
inc
stos
loopne
cmp
test
dec
enter
push
dec
andb
pusha
mov
pop
dec
std
mov
cmp
xor
pop
mov
loop
xchg
pusha
xchg
cmp
lret
call
or
aam
jae
je
popa
dec
jmp
popl
dec
or
xor
and
add
dec
ds
fidivl
testl
shll
jg
das
mov
lret
arpl
or
cld
dec
lret
data16
mov
int
adc
movsb
xor
pushf
fistpl
or
loopne
lock
sbb
mov
mov
sbb
ret
xchg
or
mull
int
rorb
test
shl
mov
mov
mov
test
ss
aam
idiv
xchg
jg
out
fwait
clc
push
jp
push
push
stos
mov
pop
mov
sbb
notb
arpl
sub
aam
xchg
test
xchg
pop
inc
mov
outsl
push
faddl
cmc
shll
aam
bnd
sahf
popa
cmp
mov
pop
xchg
push
jno
adc
jl
push
sbb
insb
mov
pop
or
jle
loope
jne
cmp
faddl
arpl
mov
xchg
mov
xchg
imul
or
in
mov
mov
ljmp
cld
aas
push
xchg
fnstenv
jns
cmp
jne
enter
jle
movsb
js
inc
dec
push
out
cmp
and
pushl
out
cmp
and
fcmovnbe
xchg
cmp
rcll
sbb
bnd
mov
or
ljmp
cmp
jp
out
xchg
xchg
push
ds
rcrb
ss
add
add
in
jl
orb
or
xor
pushf
addr16
test
xchg
add
push
cmp
addb
pushf
in
repz
xchg
sbb
outsb
push
lock
fs
jae
test
add
fcomps
sahf
xchg
lds
fidivl
ficomps
mov
mov
fisttpll
mov
lahf
enter
fidivrl
in
push
nop
and
mov
je
fisttpll
and
shlb
xchg
movsb
fld
insb
loop
xorb
push
pop
sbb
pop
aad
xchg
cmp
cli
mov
lret
push
and
outsl
dec
gs
or
test
add
cmp
cs
out
vunpckhps
inc
inc
inc
movsb
mov
inc
jns
movsb
push
sbb
sahf
xor
aad
mov
xor
andb
dec
cli
cmc
pop
dec
in
pop
fnstcw
cmp
addb
ret
pop
aad
cs
faddl
call
inc
lds
adc
repz
and
adc
orb
fdivr
fisubl
pop
mov
and
mov
adc
adc
fnstenv
push
out
mov
insl
mov
xlat
enter
imul
mov
iret
pop
stc
jp
push
push
jns
mov
lock
fisubrl
lahf
add
mov
nop
mov
xlat
jmp
arpl
adc
leave
pop
cmc
sub
cli
fidivrs
outsb
mov
jo
cmp
dec
addr16
push
in
jle
xchg
mov
sbb
test
jbe
rcrb
idivl
out
leave
pop
cmp
xor
lock
dec
push
push
mov
push
ret
scas
sarb
inc
aas
xchg
add
rcll
loop
sbb
sti
push
push
mov
add
shlb
aam
ret
cltd
xor
jns
movsl
pushf
lea
mov
sub
or
push
mov
in
pop
mov
cmp
inc
faddl
xorl
fsubrp
xchg
sub
in
pop
add
dec
sarb
xor
dec
push
mov
cmpsl
or
cmp
cmpsb
adc
dec
rep
jge
das
and
inc
movsl
sbb
or
aam
mov
add
sbb
cmp
mov
xor
mov
std
cmpsl
mov
xorb
aas
lods
and
pushf
or
mov
adc
sbb
clc
addr16
cs
inc
sub
popf
sub
aam
dec
mov
mov
test
stos
xchg
lds
mov
mulb
sub
dec
cmp
rcrl
jge
mov
mov
push
cmp
adc
out
push
faddp
iret
and
fsub
iret
and
lock
xchg
xor
mov
fildl
push
loop
sbb
jg
jns
sub
add
outsb
es
xor
lret
add
hlt
mov
imul
call
lods
sbb
addb
rol
sahf
jb
sti
loope
jp
mov
insb
cld
mov
bound
outsb
jl
push
mov
les
mov
sbb
adc
fwait
lods
and
iret
popf
repnz
inc
mull
testl
jnp
gs
add
gs
pop
dec
jne
mov
cmp
adc
sahf
cltd
lret
out
cli
pop
std
mov
fdivp
jg
cmp
mov
jg
jmp
clc
lret
mov
mov
aad
mov
ficoms
sahf
or
arpl
mov
fdiv
xor
mov
cmp
cmpsl
aaa
push
adc
xor
lds
mov
out
ret
and
mov
and
add
jge
lret
dec
push
dec
fisubl
ror
sbb
jbe
pop
lea
or
xchg
inc
sbb
jo
push
cmp
mov
and
rol
pop
ljmp
add
outsl
mov
sub
cmp
movsb
adc
pop
sti
sub
pop
push
test
fsubrl
cli
inc
and
xor
mov
pusha
aaa
jmp
jb
imul
lea
gs
mov
jns
sub
mov
sbb
jo
pop
mov
pop
stos
imul
in
sub
nop
dec
lock
test
arpl
in
ja
ret
ficomps
in
adc
not
dec
jecxz
out
cmpsl
loope
sbb
stc
daa
rcl
popf
dec
dec
mov
clc
dec
fwait
jmp
push
pop
adc
out
stc
dec
test
sub
jno
adc
inc
cmp
hlt
insl
stos
and
mov
test
scas
xor
pop
call
ljmp
dec
fwait
sub
es
sub
pop
lret
test
cmpsb
fwait
and
cmp
neg
xchg
lahf
jb
dec
cmp
mov
outsb
pusha
repz
pop
scas
sub
imul
cmpsl
mov
dec
iret
sub
pop
test
mov
clc
fs
imul
inc
enter
lea
mov
aas
add
xlat
mov
insb
fchs
add
aas
mov
mov
xchg
jge
xchg
and
pop
cmc
and
sahf
mov
mov
xchg
mov
pop
popf
aam
les
vlddqu
inc
in
jge
test
adc
jae
aam
daa
jnp
or
ficoms
cmpsl
fwait
sub
sub
sbb
rcr
pop
loop
and
leave
aas
test
dec
adc
out
xor
icebp
pop
mov
xchg
je
loope
in
or
dec
stc
test
test
mov
mov
test
jns
or
jne
in
sbb
dec
into
dec
ds
popf
jbe
clc
xchg
stos
jns
pop
jnp
repnz
loopne
adcb
dec
test
movsl
imul
cmp
pop
push
adc
loop
lods
cs
sub
jns
push
cmc
js
filds
movsb
out
dec
std
sub
std
add
imull
fsubs
jl
rcr
ljmp
iret
mov
pop
sub
mov
xchg
stos
push
xchg
xor
mov
cmpsb
push
in
loop
push
imul
adc
mov
xor
xor
pusha
out
xor
add
fldt
xor
fistps
jle
repz
inc
lret
inc
mov
stos
inc
iret
inc
pushw
ficompl
xor
test
or
jns
adc
sub
mov
and
gs
loope
sub
jge
stc
movsl
fwait
call
push
xor
negb
jl
adc
mov
xchg
fldl2t
and
and
mov
lods
dec
aas
stos
jb
adcl
sbb
lahf
push
push
jno
dec
dec
sub
xchg
bound
sub
xor
adc
xchg
pop
mov
dec
fwait
mov
test
mov
fwait
pop
aaa
jmp
mov
adc
into
aam
jle
mov
cli
cmp
dec
jb
cltd
or
adcb
add
repz
and
ja
mov
sbb
movl
out
xorl
mov
sysexit
stc
shlb
sahf
cmp
popa
scas
pop
dec
lock
mov
bnd
test
sbb
sub
xchg
sub
outsl
cld
push
mov
cmp
mov
aam
repnz
dec
stc
mov
dec
test
outsl
push
sbbb
ret
dec
and
mov
sub
dec
sub
and
pop
in
xchg
xchg
jecxz
test
das
cmpsl
test
add
fld
jmp
cmp
sub
sbb
bound
ljmp
add
or
mov
dec
sti
je
sub
mov
lea
sub
jo
dec
cmc
mov
adc
sub
fidivrl
repz
add
sub
jo
dec
jecxz
mov
call
pop
dec
push
call
sbb
mov
movl
imul
jg
lret
mov
pop
mov
or
adc
into
cmpsb
dec
js
mov
cmp
lds
out
fistps
mov
mov
pop
xor
loop
pop
lret
xchg
pop
mov
cmpsb
jg
shll
or
or
mov
fidivrl
pushf
mov
loop
std
cmp
es
mov
out
sub
inc
and
mov
sub
shl
xchg
out
in
jne
push
leave
cwtl
test
pop
push
test
jbe
fwait
in
mov
fwait
push
enter
jo
out
fdivl
mov
test
mov
enter
cmc
cltd
pop
ret
pop
inc
lods
andb
push
cmpsl
cmp
int
ss
fisubrl
hlt
stos
negl
inc
lods
inc
in
push
xchg
xor
lock
or
cmp
xchg
push
cmc
sub
xlat
push
inc
popa
push
cmp
jo
into
mov
adc
psubq
fildll
inc
pusha
dec
mov
add
pop
add
mov
js
and
pop
sub
inc
call
pop
rorl
mov
aas
mov
cltd
and
hlt
in
out
xchg
push
add
int
fs
mov
cltd
and
fcmove
sub
cmp
and
inc
pop
fwait
pop
and
mov
popa
sub
xchg
jl
push
xor
arpl
adc
sbbb
aam
int
mov
push
ss
stos
cli
enter
and
dec
pop
stos
add
or
push
add
cmp
enter
or
mov
push
inc
pusha
ja
divl
sbb
or
push
aas
out
dec
pop
xlat
and
notl
sub
fmull
or
xchg
jno
jp
push
xchg
outsl
xor
rolb
mov
sbb
repnz
mov
mov
and
subl
decl
es
ds
addr16
pop
cwtl
mov
fdivrs
cmp
je
adc
pop
rorb
bnd
inc
push
movsl
scas
not
lcall
lods
shrb
jl
xor
mov
sbb
jae
lock
test
gs
int
cmp
movsb
cwtl
add
outsb
pop
push
pop
pop
or
push
lret
mov
xor
loopne
fwait
mov
and
dec
pop
adc
add
imul
fcmovnbe
mov
and
add
add
pushf
add
dec
repz
rcll
fcomps
insb
les
sarl
addb
lahf
mov
fs
adc
dec
shlb
inc
popa
mov
xchg
mov
test
pop
into
cld
mov
push
cs
ror
mov
jmp
outsb
sti
dec
lret
mov
std
jge
cmp
jbe
je
jge
loop
adc
mov
push
mov
add
xchg
out
lods
xchg
out
dec
cmp
iret
push
adc
push
adc
jbe
inc
pop
fildll
lret
xchg
sub
out
lods
dec
popa
out
fnstenv
and
jmp
cli
cmp
mov
out
pop
loope
or
jbe
xchg
sub
xchg
or
mov
xchg
mov
gs
ds
jl
mov
xchg
push
xchg
cwtl
pop
pop
mov
dec
cld
dec
pop
call
lods
mov
pop
fwait
jnp
jmp
cmpsl
mov
mov
lahf
ret
std
sub
ljmp
into
jae
into
fnstsw
pop
test
gs
aaa
sub
jns
mov
outsl
jns
in
call
jmp
inc
sub
mov
push
pop
aas
mov
pop
repnz
lahf
xor
push
and
fidivrl
cmp
cmp
ljmp
xor
xchg
xor
xchg
clc
sub
sbb
nop
imul
add
xor
adc
mov
push
cltd
fbld
mov
mov
mov
fisubs
sar
xor
lock
or
int
out
aas
mov
push
jb
stos
adcl
xchg
xor
and
adc
pop
orl
mov
xchg
test
rolb
or
fsubl
js
jmp
push
sbb
jbe
lods
mov
fbstp
xor
fxch
and
gs
in
sub
test
sub
pusha
jle
or
test
rcrb
push
xchg
pop
push
inc
mov
ret
push
cmc
jns
imull
sub
jnp
push
mov
cmp
adc
sub
pop
mov
push
repz
pop
nop
cmpsb
add
loope
pop
xchg
push
or
cmp
pop
lods
imul
rorl
pop
jo
sahf
mov
movd
das
leave
add
mov
fsubs
mov
int
cltd
add
iret
pop
out
jne
mov
into
das
pop
loope
mov
sahf
dec
iret
xchg
sbb
dec
sahf
dec
clc
clc
sub
clc
dec
jg
mov
pop
cmc
mov
push
fwait
push
cmpps
push
mov
jae
adc
dec
cmpsb
aam
mov
mov
fidivrs
ret
hlt
sub
mov
mov
popf
xor
popa
fwait
push
arpl
or
mov
out
push
sub
jno,pn
and
call
daa
ljmp
mov
sub
and
cmc
mov
and
stos
ss
sub
lret
push
popa
jne
ljmp
aas
sub
lods
adc
jmp
andb
jno
sub
pop
sbb
ja
adc
movsl
popf
mov
jge
jnp
ljmp
xor
push
jp
sbb
dec
lods
jl
jo
aam
out
jno
mov
cli
sti
mov
xchg
out
int3
aaa
pop
into
sarb
sbb
jle
movsl
popf
ds
jecxz
sbb
mov
xor
imul
loope
xchg
es
les
lea
andb
push
jnp
jle
addr16
mov
xor
ljmp
jno
push
inc
mov
hlt
mov
push
arpl
and
popf
cmp
js
mov
lcall
fldt
and
into
mov
pop
lcall
fistl
mov
dec
xor
lahf
xchg
sbb
sub
out
dec
adc
jge
out
push
movsb
jns
shlb
fistpl
or
push
cmp
adc
fcompl
push
xor
cmp
cld
lock
ljmp
push
cld
or
decl
ret
lds
aas
loopne
sub
jecxz
pop
inc
pop
pop
push
push
push
movsb
dec
pop
out
xchg
pop
rorl
dec
sub
mov
imul
pop
fcomps
in
repnz
cmp
xor
test
add
jle
ret
sbb
xlat
sti
add
or
xchg
loope
jg
arpl
mov
cli
mov
lods
addr16
leave
xchg
jecxz
xchg
xor
popf
add
das
adc
xchg
in
mov
std
dec
popf
mov
jnp
rol
mov
pop
mov
push
gs
cmp
push
pusha
mov
sub
mov
int3
add
scas
std
mov
xor
sub
jo
les
out
or
test
dec
add
and
pop
mov
add
sub
push
xchg
test
dec
sahf
jp
fdivrs
push
jne
push
push
mov
mov
int3
and
sub
daa
in
in
lahf
int3
cmp
cld
dec
lock
pop
sub
jl
jg
and
rorb
lahf
adc
jno
clc
mov
scas
lahf
ds
xor
push
adc
and
cmpsl
mov
lea
pop
cwtl
int
rcl
cmp
fimuls
ds
xor
pop
pop
movsl
push
xor
les
push
test
pop
sub
sbb
push
and
pop
imul
imul
imull
mov
cwtl
xchg
lods
in
scas
lret
mov
add
sbb
mov
or
out
lret
adc
pop
adc
addr16
leave
je
ret
jg
shrb
pop
cmp
cmp
xchg
mov
aas
or
adc
lods
shr
sub
mov
adc
out
scas
negb
movsl
adc
div
subb
and
inc
mov
pop
inc
sti
mov
inc
and
dec
mov
sbb
sub
imul
test
aad
dec
adc
jno
fnstcw
adc
dec
cmpsb
xor
test
adc
pop
movsl
inc
das
push
iret
lahf
mov
dec
dec
dec
mov
jl
insl
push
aaa
jnp
aaa
cmp
insb
xor
push
js
push
nop
movsl
jmp
mov
jmp
pop
imul
loope
pop
call
ja
push
xchg
bound
pusha
sub
pop
mov
dec
cltd
inc
xchg
xchg
mov
inc
je
ds
push
sbb
mov
xchg
movsb
lcall
mov
les
int3
cmp
pop
jecxz
clc
aad
push
je
cwtl
jns
mov
fsqrt
inc
int3
es
pop
jae
test
lods
scas
or
in
lahf
into
xchg
mov
es
es
ljmp
je
loope
fstl
inc
fsts
ficoms
add
inc
shll
les
mov
popf
mov
sarl
and
ds
mov
aaa
inc
push
mov
mov
test
shrb
xchg
lea
and
xor
or
test
shll
popl
jbe
mov
push
imul
and
push
aas
sarb
mov
nop
inc
mov
test
and
ja
cmc
adc
into
adc
mov
insb
scas
stos
out
cmp
imul
sub
pop
mov
and
mov
das
lods
imul
jno
mov
mov
sub
xor
jmp
lods
sbb
adc
cmp
mov
les
mov
lea
add
jo
pop
cmp
jno
je
dec
lahf
sti
push
mov
test
xchg
ret
ljmp
push
adc
dec
xchg
loop
dec
ret
fsubl
xchg
cli
fadds
iret
in
jp
jle
testb
cmp
jo
clc
inc
xchg
js
jns
xor
adc
mov
jns
jecxz
xor
clc
lret
and
hlt
cs
cmpb
fwait
ss
ret
or
cmp
ljmp
and
int
xlat
shl
adc
or
repnz
mov
adc
or
inc
mov
pop
sbb
xchg
jge
imulb
fistpl
mov
int
bound
orl
inc
data16
enter
cmp
repz
or
js
push
dec
cs
xchg
cmp
scas
pop
xor
jle
hlt
inc
jge
movsb
cmp
out
andl
xchg
lret
aad
mov
jecxz
pop
movsl
mov
shrl
adc
and
sub
sub
inc
cld
mov
std
aad
adc
nop
insb
mov
test
movsb
mov
adc
cmp
add
xor
cmpsb
movsl
push
stos
xchg
xor
fld
and
insl
lea
rcl
adc
push
pop
and
mov
or
gs
in
loope
sub
in
cmp
xchg
xchg
push
pop
pop
sarl
or
and
and
sub
push
int
add
int
stos
cwtl
out
inc
addr16
fildl
mov
dec
inc
test
mov
test
jns
bound
xor
repz
pop
shr
fwait
cli
xchg
out
jmp
mov
je
ja
out
mov
testb
stc
sbb
adc
push
push
push
pushf
es
test
jo
inc
insl
jecxz
aaa
scas
fdivs
lret
xlat
ffree
sbb
pop
add
sub
stos
popl
stos
repnz
lods
into
sbb
mov
adc
lcall
and
inc
lret
mov
jp
fcmovnu
push
call
fucom
fdivrl
pop
push
test
jno
dec
mov
cwtl
rcll
scas
sbb
mov
jge
fisubrl
mov
lcall
cmp
sub
jecxz
out
pop
in
mov
inc
pop
cmp
dec
jnp
mov
sbb
movsb
mov
insl
push
stos
pop
testl
stc
fbld
mov
dec
inc
or
bound
dec
mov
bound
shlb
andb
jno
jo,pt
fsin
or
inc
pushf
enter
js,pt
out
int3
add
inc
pop
push
unpckhps
fbld
out
ja
pushf
jae
pushf
and
push
xchg
test
mov
stos
pop
aam
ds
dec
jge
popf
fsts
jnp
pushf
inc
mov
xor
jmp
arpl
clc
cld
jnp
mov
in
add
dec
es
mov
pushf
adc
in
sti
dec
xchg
xor
adc
scas
or
sub
addb
stos
stos
mov
test
lds
nop
push
or
rcr
inc
inc
xor
jg
mov
loop
aaa
sub
loopne
xor
clc
add
int
leave
aas
rcll
inc
cmp
je
push
push
mov
shlb
push
fadds
cli
cltd
popa
cmp
xor
adc
pop
repz
dec
ja
mov
mov
xor
dec
cmc
push
aad
push
cmp
inc
insl
dec
lods
andb
js
add
mov
jl
lahf
pop
pop
jno
sbb
cmp
sbb
push
insb
jp
and
dec
lds
pusha
sbb
inc
xchg
cld
mov
ss
mov
push
lea
jmp
dec
and
or
dec
stos
sbb
cmp
xchg
in
jns
lea
xchg
leave
testl
mov
fstp
test
lahf
fidivs
scas
scas
xchg
sub
sub
ja
lea
js
or
mov
mov
or
jle
mov
loope
sbbl
dec
fdiv
loop
nop
sub
push
pop
aam
movsb
lods
dec
cld
mov
lret
in
adc
ret
jno
sbb
std
xchg
push
shrb
sarl
push
icebp
mov
aam
mov
dec
or
sub
add
ljmp
push
or
nop
dec
sarb
cwtl
pushf
dec
dec
inc
jge
push
jns
inc
inc
out
sub
xor
mov
sub
call
jmp
xchg
mov
cli
cmc
lods
mov
or
sbb
pop
popf
push
aam
mov
repnz
fnstsw
jl
jo
xchg
jmp
enter
stos
aad
add
add
loop
mov
cld
adc
push
dec
jae
mov
push
into
roll
lahf
popa
lahf
sar
repnz
les
mov
js
insl
int
stc
test
and
mov
jo
pop
hlt
imul
jnp
mov
arpl
rorl
data16
fwait
pop
test
xchg
sbb
mov
pushf
mov
sub
xor
cmp
scas
sbb
outsb
xlat
jnp
sub
jbe
and
fs
sahf
stos
mov
push
fsubrl
dec
mov
sbb
inc
in
adc
roll
adc
jbe
push
add
pop
push
fimull
test
xchg
mov
mov
int3
loope
shll
sbb
mov
pop
xor
sbb
shrb
or
push
sti
push
fbld
jp
test
mul
test
cld
push
lea
pushf
clc
mov
add
jnp
repz
jnp
add
mov
aaa
or
xchg
add
xchg
or
pop
or
aas
sub
sub
mov
arpl
fdiv
rolb
push
aaa
aaa
ja
mov
cmpsl
or
stos
xor
and
jnp
outsl
fnsetpm(287
leave
cld
inc
iret
adc
pop
popf
sbbl
cmova
mov
scas
xchg
mov
jb
xchg
mov
push
movsl
out
sbb
stc
add
sbbl
adc
out
or
out
sub
sbb
les
xor
push
test
fisttps
adc
pushf
inc
and
cs
lods
ljmp
call
popf
xor
mov
loopne
or
jmp
scas
sbb
lods
dec
call
sub
daa
fiaddl
sahf
mov
cmovns
or
xchg
mov
iret
ds
cmp
dec
and
fwait
cmpsl
out
xor
xchg
rcrb
rclb
or
loop
mov
pusha
xor
sub
cmp
ljmp
and
test
mov
xor
xchg
add
dec
fld
mov
cltd
push
mov
mov
iret
pop
ljmp
inc
imul
sbb
fdivrl
lock
add
out
xor
jb
repz
lods
and
mov
out
clc
pop
ficomps
stos
mov
fisubrl
mov
movsb
imul
fisubl
mov
mov
mov
push
mov
scas
jg
popf
or
cld
stos
in
mov
arpl
loopne
fdivrl
inc
nop
push
out
adc
lea
pop
cwtl
cmp
mov
xchg
pop
mov
outsl
enter
xchg
cmp
popa
xlat
call
cli
movsl
mov
cmpsl
cmp
cmp
xchg
loop
sub
ja
lahf
mov
in
mov
rolb
mov
cmpsb
or
inc
inc
sub
sbb
movl
sbb
add
mov
xchg
jecxz
lret
or
in
clc
and
sbb
cmpsl
inc
clc
out
mov
cmp
loope
hlt
dec
sub
gs
pop
pop
pop
cmpsl
ss
in
jmp
movsb
fiaddl
test
ljmp
out
mov
aad
pop
xchg
jmp
stos
mov
insb
repz
push
cmpsl
pop
loop
mov
out
jb
movsl
outsb
mov
push
mov
insl
call
icebp
int
jle
lods
cmp
mov
add
punpckhwd
mov
sub
arpl
pushf
test
lods
enter
jns
scas
inc
add
push
sbbb
aad
adc
in
push
sbb
popl
pop
stos
or
adcl
dec
xchg
fisubl
xchg
js
mov
adc
pop
mov
pop
pop
gs
and
or
or
mov
out
add
fiaddl
xor
xchg
pop
cmp
sbb
outsl
out
mov
aam
js,pt
lods
inc
add
sbb
jmp
inc
xor
adc
fsubs
jp
bound
pop
leave
xor
int
cmpsb
xchg
mov
jge
insl
cmpb
jg
xchg
dec
and
jmp
test
imul
cmp
xchg
loope
cmpsb
insb
adc
clc
std
fldcw
push
imul
js
jbe
js
dec
mov
fs
sub
push
xlat
xor
pop
sbb
mov
repz
jnp
push
insb
adc
add
ds
add
and
cmp
push
xchg
int
mov
ret
sbb
xlat
xor
enter
cmp
and
sub
mov
gs
ficoms
aad
movsb
imul
test
cmp
dec
cmp
std
inc
jnp
mov
lea
das
mov
fsubrl
hlt
jecxz
call
cmp
jle
fwait
cmp
dec
mov
fisubrl
mov
aas
icebp
mov
sbb
das
int3
jno
dec
lock
mov
fnstenv
fiadds
pop
xor
pop
scas
sub
dec
cmp
xor
push
nop
jne
jbe
popa
push
dec
adc
push
mov
icebp
sbb
xchg
mov
cs
stos
lods
and
xchg
lods
aam
scas
mov
fcmovb
sub
jns
xlat
cmp
xchg
stc
mov
jp
movsl
sarl
pop
cmpsb
sti
jmp
jo
xchg
cmp
ret
inc
subb
mov
fists
xchg
sbb
dec
test
sti
fsubs
aas
dec
daa
mov
add
out
mov
mov
in
push
jae
aad
or
mov
sbb
imul
xor
dec
test
xchg
xchg
fimuls
into
sarb
lock
iret
or
jno
mov
lcall
dec
and
cmp
sub
cld
data16
jnp
lahf
adc
mov
sbb
push
lods
sub
movsb
aas
jg
dec
mov
dec
scas
test
rcll
ret
xchg
ror
test
cld
mov
dec
mov
or
xchg
push
dec
pop
dec
stos
pop
sahf
fld1
jmp
inc
mov
xchg
push
inc
mov
adc
das
into
add
xlat
fnstsw
pop
xchg
or
adc
jnp
jae
xor
mov
aam
mov
fmull
and
aad
and
cld
shrl
mov
jle
pop
in
movsb
cmp
sbb
jns
aaa
fbstp
in
or
mov
outsb
cli
cs
dec
mov
mov
or
mov
sbb
mov
mov
imul
mov
stc
mov
pushf
ret
rolb
jl
je
push
sub
sti
outsl
or
fs
and
outsb
fmull
mov
sub
lcall
cmpsb
insl
inc
mov
mov
inc
add
cld
and
aam
push
xchg
lret
rclb
lret
mov
int
push
call
add
inc
mov
out
nop
sbb
inc
push
movl
cmpsb
aas
push
mov
insb
xchg
out
sti
aad
push
sbb
pop
and
sbb
sub
sbb
je
iret
adc
cmpb
ja
cli
push
cmpsl
int
push
mov
adc
cmp
cmp
fld
push
nop
mov
mov
mov
sbb
inc
lret
jmp
or
std
and
insl
adc
sub
ja
cmp
ret
xchg
cmp
mov
or
pop
sub
sbb
lret
xchg
js
je
lret
int3
dec
cmp
push
es
sbb
push
push
jecxz
test
mov
adc
insb
sbb
stos
leave
leave
out
repnz
add
aad
lods
cmp
mov
sub
subl
sub
xor
repz
mov
cmpsb
inc
insl
stos
cmpsl
sbb
sbb
divb
sub
fldl
xchg
pop
and
dec
push
sbb
stos
push
sar
ja
inc
mov
stos
lcall
pop
cli
xchg
rclb
sbb
out
mov
xchg
loope
mov
pusha
enter
pop
lret
mov
mov
cmp
insb
push
sub
scas
daa
movsl
aam
push
cs
adc
jnp
ja
mov
sub
loopne
xchg
mov
test
mov
jle
rcl
pop
mov
sar
push
sub
test
adc
cmpsb
push
lret
cmp
mov
pop
in
push
roll
mov
adc
mov
sahf
dec
jge
mov
pop
fmuls
lods
mov
int
daa
shr
or
mov
and
jecxz
mov
cmpsl
call
sub
inc
pop
or
jns
mulb
icebp
jno
leave
cmp
mov
push
jp
sbb
sub
cmp
roll
das
popa
pop
daa
jo
jmp
pop
popf
ljmp
jbe
adc
iret
xlat
or
das
out
loopne
push
shlb
xor
call
add
lds
cld
ror
lea
in
jmp
push
and
push
imul
adc
in
loopne
or
andl
or
push
cs
popf
jno
xlat
scas
imul
roll
test
xchg
cmp
push
cmp
rcrl
inc
lcall
decl
sub
sub
dec
dec
mov
scas
cwtl
in
inc
push
pop
pop
mov
ret
pop
jno
int
pop
mov
scas
add
pop
push
pop
sbb
fsts
xchg
add
mov
dec
stc
push
mov
lds
insl
dec
cmpsl
cli
out
xorl
cwtl
shlb
stc
pushf
inc
lods
orl
insb
int3
push
jno
ljmp
lcall
pop
daa
flds
mov
call
lret
idiv
addb
sub
mov
inc
test
inc
push
push
inc
jg
pop
push
negb
std
fdivrs
sbb
cmc
mov
mov
xor
enter
xchg
dec
mov
inc
cmp
aam
mov
movsb
lods
inc
lods
inc
cli
pop
mov
xchg
in
cmp
addl
repnz
gs
in
mov
adc
push
test
imull
gs
push
mov
imul
outsb
mov
inc
mov
and
cmpsb
cmp
lock
jmp
jg
mov
adc
push
stos
mov
loop
in
and
dec
insl
scas
cmp
push
movsl
and
les
mov
lea
jbe
insb
pop
and
in
stc
add
xchg
leave
std
inc
xor
inc
xor
ss
jge
fidivs
or
mov
pop
push
lods
pop
push
add
or
fiadds
sub
cltd
mov
push
xor
ljmp
xchg
fdivrl
je
jge
pop
mov
lds
sub
es
sbb
mov
fstps
mov
or
xor
mov
pop
jl
imul
adc
xlat
les
xchg
adc
xchg
ret
mov
push
aaa
sub
ja
push
mov
scas
cltd
nop
fdivrs
sub
in
jp
add
leave
adc
adc
cmp
mov
mov
insb
cmp
jl
fldl2e
shlb
sub
xor
sahf
scas
mov
mov
xor
cmp
ret
mov
cmp
mov
cmp
shlb
pushl
jmp
push
push
dec
ljmp
xor
out
in
dec
pusha
je
xor
ja
aam
scas
fwait
std
add
decb
lock
ds
or
or
test
movsl
lret
mov
mov
xlat
mov
divl
xor
push
adc
insl
in
push
push
mov
rcrl
lods
cld
push
outsl
xchg
fistpll
cltd
xor
stos
leave
lret
movsl
jge
jle
cmp
enter
mov
popa
into
or
cs
nop
lock
adc
xorl
mov
loopne
sbb
clc
into
add
arpl
sub
adc
adc
out
adcl
xchg
ret
push
test
imul
inc
add
mov
fucom
and
out
addr16
aad
aad
popa
adc
fwait
and
dec
xlat
push
stos
xchg
or
pop
mov
adc
decb
add
inc
jle
cwtl
and
out
sub
push
aam
mov
xorb
in
repnz
inc
sbb
repnz
icebp
sbb
hlt
ss
xchg
popl
push
shll
popa
xor
jge
call
sub
in
mov
dec
pop
fcoms
out
jae
imul
fldl2t
mov
out
aaa
imul
mov
test
lea
stos
add
sub
add
sub
pusha
lds
adc
loope
enter
scas
mov
xlat
bound
sahf
or
jecxz
add
cmpsl
in
imul
jbe
pop
pop
negl
mov
pop
ret
pop
stos
sbb
loop
mov
mov
fnstcw
into
nop
push
lahf
jg
bound
adc
and
xor
test
sub
or
jns
fimuls
test
xchg
jbe
mov
push
or
jb
jmp
xor
dec
lods
es
fildll
pop
test
lods
aad
mov
jge
dec
bound
les
out
addb
imul
add
sbb
ja
outsl
xchg
and
or
adc
pusha
push
in
movsb
inc
and
dec
jmp
fwait
xchg
mov
pop
ret
shr
outsb
cmp
inc
sub
stos
jns
insl
ret
movsb
pop
ss
ss
mov
sbb
inc
std
fistps
adc
cmp
pop
pop
xor
dec
jnp
fdivs
icebp
dec
sahf
orl
sub
insl
addr16
push
xchg
adc
cmp
xchg
scas
bswap
add
movb
popa
adc
xchg
ret
call
push
hlt
mov
divl
sub
xlat
es
push
repz
pop
push
sub
or
push
xchg
pop
pop
or
push
xor
cmp
outsb
sbb
mov
fstl
arpl
es
insl
cmpsl
inc
mov
cmp
xor
scas
dec
lea
rolb
cs
xchg
push
sti
inc
into
cld
xor
clc
cwtl
cmp
push
jmp
ss
or
push
dec
int
pop
xor
test
dec
xor
cmp
jmp
and
push
dec
pop
push
jl
imul
xor
pop
dec
push
cli
into
xlat
xchg
mov
mov
faddp
test
rorb
fs
inc
adc
repz
hlt
jbe
push
in
insl
aam
mov
decl
bound
daa
fistpll
mov
adc
ror
jmp
jl
stc
sub
jnp
jb
xor
adc
mov
lods
sbb
mov
into
adc
je
aad
mov
aam
out
popf
mov
mov
cltd
xchg
leave
sub
add
ljmp
mov
pop
stc
in
lock
nop
adc
in
xchg
hlt
leave
mov
in
lods
sub
cmpsl
pop
dec
shlb
movl
mov
hlt
push
loopne
xor
cmp
sbb
aas
mov
xchg
push
jbe
loope
ss
mov
aas
jb
cmp
jbe
or
cli
jns,pt
xchg
push
je
push
cmpsb
jl
adcb
pop
mov
mov
int3
pop
movsb
mov
pop
hlt
sub
dec
jns
mov
sbb
loopne
adc
es
aam
push
ljmp
add
orb
mov
popa
or
or
xchg
lea
sti
nop
push
and
xchg
lods
sbb
mov
pop
int
ljmp
lock
lahf
popf
cld
neg
pop
aam
loope
ja
hlt
jmp
sub
mov
shlb
dec
pop
mov
aad
dec
xor
push
mov
loope
push
lods
movsb
sbb
xchg
push
in
scas
adc
aas
gs
and
or
push
stos
jnp
ds
add
push
fisubrl
cmp
fcmovne
cltd
js
imul
movl
inc
xor
pop
cltd
cmp
xor
pop
dec
sbb
popa
mov
dec
jl
mov
mov
jge
sbb
mov
fstps
pop
mov
pop
pop
mov
in
add
inc
pop
fwait
cli
sub
push
in
cs
outsl
mov
mov
pop
cmpsb
push
add
sub
fsub
sub
sub
push
xchg
pop
jo
add
bound
and
pop
push
or
in
stos
jnp
adc
lods
xchg
lret
mov
jecxz
sbb
xchg
fs
aad
mov
inc
test
cmpl
in
out
xchg
and
ja
xchg
cmp
add
cli
dec
es
xchg
idivb
ret
or
inc
fwait
push
leave
mul
ret
sub
add
out
dec
jmp
rcl
fcoms
mov
ljmp
or
cs
lds
ljmp
pop
repz
push
xchg
data16
mov
push
dec
or
iret
mov
in
cmp
into
and
push
repz
mov
mov
scas
ret
ss
mov
repnz
mov
scas
xlat
xchg
xor
test
push
pop
imul
jne
and
lea
mov
int
jnp
push
sub
jecxz
out
out
jno
popa
sti
mov
xor
out
mov
sub
xchg
lods
lcall
pop
mov
int3
mov
mov
mov
mov
jne
push
gs
fidivl
not
jb
std
cmp
movsb
mov
inc
sbb
out
jnp
push
scas
add
pop
push
xor
or
or
ss
pop
mov
repnz
mov
lret
iret
dec
test
mov
loopne
jbe
loope
ljmp
divb
jbe
js
add
xlat
movsb
push
pop
mov
mov
loop
stc
adc
bound
leave
sub
mov
mov
pop
out
repz
pop
push
mov
inc
pop
rclb
adc
test
jg
fs
jae
or
pop
dec
cmp
lock
cmp
cltd
mov
sub
xchg
cmp
jns
inc
mov
mov
or
pop
ret
xor
iret
insl
pusha
xor
mov
push
dec
mov
mov
cli
push
repnz
out
xor
sti
icebp
cmpsb
leave
mov
jmp
mov
out
insb
xlat
xor
aas
and
data16
movsb
dec
scas
mov
mov
popa
xor
mov
pushf
cmp
adc
insb
aad
inc
hlt
sub
out
sbb
adc
or
inc
or
shll
cmpsb
movsb
stos
out
cmp
dec
out
adc
mov
jbe
rclb
out
sub
mov
fsts
mov
fcomps
aad
outsl
sub
bts
orb
lods
in
dec
cmpsb
mov
aaa
jo
imul
or
and
add
cwtl
dec
jnp
adc
aas
pusha
jmp
push
or
sub
mov
mov
je
sub
aad
sbbb
xchg
dec
add
dec
ja
arpl
dec
sub
adc
push
adc
bound
imulb
ljmp
ret
adc
xlat
movsl
imul
test
push
popf
xor
cltd
rolb
sbbl
xchg
dec
cs
inc
test
xor
rolb
lods
inc
loopne
cld
cmp
test
ja
jbe
sahf
inc
lea
jp
pop
add
inc
stos
adc
loop
jle
out
rcrl
and
std
test
lods
jg
mov
test
cmpsl
pusha
push
fwait
movsb
mov
mov
adc
fistpll
cmp
aaa
std
sub
test
inc
adc
add
push
bswap
outsb
call
mov
in
sti
scas
xchg
xor
xor
addr16
popf
shl
imulb
xchg
lret
orl
lahf
pop
enter
bound
in
cmp
cltd
add
mov
loope
push
push
aas
cwtl
jg
movsb
dec
into
mov
aaa
ss
jns
jnp
iret
jg
dec
pop
jmp
outsl
pop
xor
jmp
or
leave
dec
scas
jne
push
mov
add
in
adc
dec
fbld
scas
stos
mov
pop
add
xor
inc
or
mov
mov
xor
nop
stc
mov
orl
gs
ret
mov
aaa
jne
fwait
lret
inc
out
ja
push
fnsave
out
mov
jmp
out
bnd
pop
or
lea
push
aas
inc
les
sbb
outsb
out
notb
sub
fistpl
in
jbe
cmp
daa
or
aaa
mov
ret
in
push
ret
bound
and
pop
sub
int3
imul
push
in
movsb
adc
bound
cmpsl
das
mov
cli
pop
xchg
loopne
pop
cmp
jo
mov
mov
or
or
inc
insb
test
fidivl
pusha
insb
inc
gs
lods
pop
jmp
mov
add
pop
adc
sbb
hlt
pop
push
fwait
push
dec
sarb
add
jmp
mov
pop
ljmp
jae
adc
aad
adc
aad
sti
mov
sbb
push
out
iret
jne
add
adc
sub
sub
out
jecxz
pop
movsb
lods
xchg
jmp
insb
mov
das
jno
mov
movl
dec
loopne
icebp
mov
push
call
lock
pop
pop
cmp
push
ret
out
fdivs
fistpl
lea
pop
stos
push
push
sbb
lahf
loopne
lret
lods
sbb
repz
in
xchg
dec
inc
and
or
js
cltd
xor
add
mov
hlt
loopne
xor
mov
das
enter
decl
pop
rcl
fs
pusha
cs
sub
cmp
xor
inc
jbe
jmp
xchg
mov
testl
aaa
clc
roll
xchg
insb
inc
aaa
sub
outsb
mov
lret
jmp
xchg
out
mov
ds
pop
sub
cmp
test
push
push
and
popf
jb
add
add
pop
push
inc
out
xchg
jae
or
pop
jmp
test
orb
xor
cmc
inc
adc
fmulp
dec
lret
rcll
push
insb
cwtl
inc
and
rcl
cmc
and
test
inc
popf
xor
xchg
and
add
out
in
je
pop
jbe
icebp
hlt
mov
sub
mov
mov
xchg
adc
mov
addb
cwtl
ret
sub
test
dec
jno
pop
mov
std
cmp
mov
pop
fbstp
notl
push
cld
dec
stc
push
aad
sbb
pop
pop
int
movsb
repnz
cltd
icebp
lcall
pusha
push
out
lahf
pop
xchg
lds
dec
mov
call
dec
cmp
addl
in
sbb
jnp
mov
adc
ss
cmc
xlat
sbbb
add
xor
cmp
sar
cmp
xchg
xor
inc
pop
mov
mov
or
lods
mov
sbb
lret
ja
dec
lods
inc
clc
sbb
add
inc
and
bound
mov
pop
pop
cmc
jnp,pn
jp
sub
xchg
xor
add
loop
insb
cwtl
jnp
mov
jge
sub
repz
adc
jnp
push
jae
jp
es
xor
push
cmc
in
jmp
xor
inc
mov
add
popf
out
inc
pop
push
nop
out
mov
fwait
mov
lods
inc
insl
dec
mov
cmp
push
shll
pushf
in
add
cmpsl
mov
pop
push
or
not
imul
push
mov
xor
xor
call
rorl
xchg
dec
repz
cmp
loop
int
test
loope
pop
in
cld
mov
sbb
add
pop
cmc
sbb
adc
mov
mov
testb
add
xor
jge
adc
push
cmc
and
mov
popf
push
push
iret
inc
scas
add
popa
in
push
push
inc
dec
sub
pop
mov
jo
into
into
mov
loopne
out
adc
int
lahf
scas
mov
push
rorb
daa
inc
inc
pop
pop
scas
adc
fisubl
add
xchg
add
or
call
add
jl
fsts
cwtl
dec
or
jg
in
add
xor
sahf
mov
xor
push
adc
mov
ja
inc
cmp
aaa
popa
xor
adc
lods
pop
xchg
pusha
mov
ficoms
ss
xor
arpl
js
movb
add
rcl
fistpll
out
sti
icebp
out
cmp
ret
fisttps
and
push
jl
je
or
dec
cmp
sbb
xchg
lods
psubb
test
fcomps
addr16
aad
push
or
mov
test
mov
and
icebp
ret
sbb
adc
xchg
cmpsl
mov
sbb
xchg
pop
mov
fmuls
push
mov
cmpsl
insb
fsubs
or
data16
or
ljmp
test
or
jno
or
ret
pop
mov
cmpsb
popf
test
clc
dec
jns
imul
pop
push
and
xor
cmpsl
mov
test
mov
enter
outsb
insb
loopne
shl
mov
mov
out
inc
xchg
insb
mov
jle
pop
push
push
cmp
pop
mov
mov
cli
sahf
sahf
popw
mov
xchg
push
mov
insb
adc
mov
sahf
adc
xchg
jnp
repz
or
cmpsb
int3
vmptrst
mov
mov
hlt
sbb
inc
push
std
cmp
js
loope
outsl
imul
movsl
data16
xor
outsb
add
xchg
insl
or
sbb
dec
sarl
xlat
mov
lahf
sub
inc
bound
mov
inc
jb
or
adc
iret
ljmp
popf
sbb
loopne
push
and
pop
jns
je
pop
les
enter
xchg
adc
mov
adc
lea
shrl
cmp
cmovb
jg
mov
test
and
mov
inc
shrl
sub
and
jns
cli
dec
adc
push
adc
jbe
jno
pop
xchg
xchg
cs
and
out
out
mov
outsl
xchg
jg
mov
or
frstor
shr
test
mov
pop
push
test
bound
add
xor
mov
outsl
loop
xchg
add
aas
cmp
pusha
lret
mov
cmpb
ds
je
and
icebp
mov
pop
push
stc
dec
mov
xor
adc
push
xor
in
push
in
jno
dec
add
sbb
or
dec
mov
mov
or
xchg
fs
jns
cmp
jmp
jmp
insl
push
jne
jecxz
push
jmp
stos
fmuls
push
dec
or
mov
dec
daa
xor
test
cmp
fnstenv
push
rep
jge
scas
jg
movl
ror
or
dec
dec
aas
pop
popf
stos
jo
inc
lods
xor
in
fs
inc
xlat
push
sbb
pop
and
test
xchg
jle
adc
scas
addl
pop
dec
mov
ret
mov
js
push
inc
push
or
jns
fs
loopne
mov
mulb
inc
mulps
add
jge
cmp
xlat
or
and
dec
mov
or
push
notb
adc
adc
ret
xchg
or
cmp
and
das
dec
out
and
jns
adc
fsub
jecxz
mov
cli
ret
inc
rcrl
movsl
sub
fbld
xchg
mov
xchg
test
mov
out
out
and
popf
or
xchg
or
subl
ret
sub
test
sbbb
mov
push
push
add
leave
insb
gs
push
pop
out
std
scas
jg
adc
out
jl
xchg
mov
mov
fimull
ja
mov
sbb
push
stos
inc
mul
mov
jae
push
and
and
fildl
pusha
pop
cmp
cmp
lea
push
pushf
shlb
push
fcomps
jb
and
dec
decb
addr16
sbb
add
stos
pop
mov
nop
pushf
xor
adc
mov
clc
leave
and
inc
aaa
lock
pop
dec
rcrl
and
ret
ret
out
pop
mov
clc
pop
push
jns
call
mov
popf
fmul
cltd
add
jl
in
xor
movsb
jp
push
or
sbb
movsb
test
and
loop
sub
add
into
movsl
scas
cltd
and
mov
es
xchg
jne
or
pop
mov
sbb
jg
add
cwtl
push
jp
push
xchg
or
fldcw
xchg
sahf
xor
jbe
xor
adc
dec
out
div
scas
or
addr16
dec
and
add
fwait
es
xchg
push
fiaddl
nop
mov
mov
mov
jno
sbb
bound
pushl
int
ret
adc
ljmp
xor
jmp
cmp
sub
iret
pushf
andl
fstl
subb
dec
cmp
mov
mov
push
imul
addb
fidivs
push
repnz
movsb
loope
sbb
add
movsl
xchg
dec
or
dec
mov
adc
jge
pop
lods
int3
dec
popa
cmp
pop
jg
ss
or
inc
sbb
or
pop
dec
test
push
loop
jno
imul
cmpsl
push
mov
xchg
xor
xchg
mov
or
test
ja
xor
mov
div
push
dec
mov
dec
push
jns
mov
ret
cmp
mov
mov
popaw
xchg
cmp
int
inc
not
int
and
xchg
jmp
lods
outsb
cmp
push
sbb
in
bound
jns
ja
sub
iret
sub
or
hlt
pop
xchg
push
movsl
xor
lods
repz
cli
push
insl
cmpl
push
mov
pop
or
arpl
sub
or
lods
sub
ret
outsl
sahf
lahf
mov
scas
pop
xchg
lods
xchg
cltd
js
inc
mov
sub
test
aaa
popf
and
sti
sbbb
ss
scas
mov
jne
jbe
cmpsb
pop
hlt
xchg
xchg
dec
mov
rol
mov
fistpl
or
sbb
dec
in
movsb
sub
jl
jne
hlt
cli
repnz
shlb
lods
loop
mov
sub
sbb
outsl
out
sbb
jb
outsl
cmp
mov
sub
sub
inc
test
inc
pop
call
pop
fnstsw
aad
mov
jb
arpl
add
xor
sub
adc
hlt
outsb
fisubrs
cmc
dec
pop
nop
out
mov
adc
and
cli
scas
and
dec
sbb
test
push
call
jne
adc
xchg
cwtl
int3
addr16
movsb
leave
xchg
jb
adc
xor
sarb
cmp
test
loope
inc
movsl
sti
add
lds
xchg
adc
sbb
sahf
inc
test
push
mov
stc
fisubrl
rorl
pushf
push
dec
mov
test
inc
mov
stos
xchg
adc
add
call
cltd
jmp
out
lea
out
add
fcomip
jle
sub
adcb
mov
jne
mov
bound
pop
push
movsl
test
loope
sub
shl
push
push
shll
sub
lods
fisubrl
xchg
and
mov
movsb
outsb
xorl
shrl
xchg
inc
cld
jnp
aaa
ret
adc
test
ret
sub
mov
xchg
xchg
or
and
mov
mov
leave
flds
fwait
mov
filds
push
add
push
add
dec
mov
add
lock
ds
mov
hlt
outsb
imul
int3
or
mov
shrl
roll
mov
adc
adc
add
out
cmpsb
into
xlat
inc
and
cmpsl
stos
fsub
push
cmc
mov
inc
inc
or
into
mov
movsl
cmp
xlat
adc
imul
orl
pop
lea
popl
xchg
jecxz
lahf
xchg
xchg
sub
nop
xlat
lret
lds
ljmp
mov
add
adc
dec
mov
cmp
mov
push
fwait
cmp
sub
aam
pop
add
xchg
outsb
cmp
cli
movsb
push
mov
xchg
stos
dec
add
adc
inc
dec
push
in
popf
pop
cmpsb
and
arpl
test
sbb
fidivs
pop
imul
imul
std
lret
mov
mov
lds
imulb
fwait
adc
mov
call
xchg
js
jle
sbb
lds
test
outsl
cmp
pop
xchg
jns
orl
push
movsl
rcrb
loopne
outsl
loop
lret
mov
adc
xor
inc
dec
and
movsl
dec
add
cmp
sbb
andb
push
push
fimuls
pop
mov
cmp
add
adc
cmp
adc
inc
pop
sbb
xor
fidivrl
mov
add
jp
in
jmp
xor
push
dec
hlt
adc
xor
cld
mov
cmc
and
imul
sub
sub
cmp
pop
pop
push
jmp
fistps
pop
jl
lret
in
adc
sbb
jbe
jae
pop
mov
aaa
imul
jns
xchg
or
in
nop
and
sub
and
xchg
cmp
push
ret
xchg
mov
mov
add
xchg
xchg
push
push
jmp
je
rep
mov
pop
out
or
adc
bnd
jo
jg
inc
mov
inc
and
bound
cmpb
cmp
scas
sahf
fistpl
jmp
cmpsl
and
idivb
mov
arpl
leave
xchg
rcr
lock
jb
pop
jl
lods
clc
cmc
xlat
mov
pop
stos
scas
xchg
cld
jmp
push
stos
fisubl
cli
mov
loope
sub
jge
push
fsubrp
lret
pushf
pop
stc
push
out
hlt
dec
push
outsl
fwait
pusha
xor
lcall
in
lret
pop
push
sub
pop
xchg
aad
cmp
popf
mov
aas
scas
push
mov
popa
fnstsw
lret
and
mov
mov
nop
fcoml
sub
jbe
push
xchg
lahf
std
in
jns
mov
xor
mov
andb
ja
cli
mov
xchg
mov
dec
and
loopne
lods
jno
loop
imul
shrb
addr16
bound
mov
xor
push
xchg
ret
andb
test
popf
lret
push
or
test
inc
inc
mov
mov
rclb
adc
outsl
push
cs
sub
inc
clc
shll
shld
xchg
shrl
dec
push
mov
xchg
stos
test
add
add
mov
sbb
loopne
lcall
adc
mov
fmuls
mov
xchg
mov
push
pop
jb
repz
cmpsb
repz
jge
or
jns
mov
outsl
insl
mov
xchg
ja
xrelease
addl
test
sub
mov
xor
xor
cmp
mov
inc
xchg
ret
lds
pop
xchg
cmpsl
insb
ja
inc
scas
push
fldcw
pop
adc
loope
or
aad
lock
rclb
fsubl
push
sub
test
xor
fstpl
mov
popf
out
jge
inc
xor
add
out
popf
scas
lods
push
mov
xchg
or
fnstenv
mov
inc
divb
ds
or
inc
push
jb
test
mov
mov
sbb
mov
lds
lea
or
cmp
xchg
mov
call
in
cmc
jmp
es
xchg
js
aam
std
or
lods
jmp
sub
sbb
subb
and
pop
push
inc
dec
sti
mov
jle
inc
mov
push
adc
sub
cltd
add
inc
movsb
pusha
xor
negl
push
sbb
loop
mulb
in
xchg
scas
pop
ljmp
addr16
scas
sub
arpl
pop
jp
lret
fwait
add
les
popa
lea
xchg
sbbb
adc
jns
aam
in
cmp
xchg
shl
jae
or
bnd
insl
insl
jnp
lea
xchg
outsb
leave
adc
push
gs
mov
imul
mov
shlb
int3
pop
sahf
repz
jge
in
mov
imul
shl
dec
rorl
inc
cmpl
shl
and
cmp
lds
sbb
fisttpl
cli
sub
cli
lcall
xor
jb
mov
rorb
lret
mov
mov
gs
out
stos
out
jl
shr
daa
dec
iret
inc
cmp
xor
jmp
mov
cmp
ficoms
and
cmpsl
pop
lret
pop
or
xchg
pop
mov
jle
xchg
or
adcl
fcomps
pop
fistl
mov
adc
jmp
scas
jge
call
jne
xchg
xchg
mov
insb
add
mov
cmp
lods
imul
and
sbb
dec
xchg
hlt
adc
and
and
jno
dec
push
cs
negb
enter
in
add
test
nop
lds
icebp
mov
or
decl
lds
xor
mov
loope
push
inc
or
les
xchg
and
cmp
iret
in
sub
pop
repz
lds
aas
ja
rclb
jg
and
dec
rcll
xchg
cld
xlat
xchg
into
xor
jmp
jns
jecxz
push
jb
popa
ud2
pusha
pushf
or
test
jecxz
sbb
adc
dec
mov
dec
sub
test
dec
in
jp
daa
aam
gs
cmp
mov
dec
imul
in
adc
ja
dec
sbb
sbb
push
loop
notb
scas
loope
or
push
iret
shrb
or
cmpsl
xor
dec
lret
jl
mov
inc
sbbb
mov
orb
repz
mov
lcall
xchg
add
test
rorb
ljmpw
insb
push
jae
int
pop
test
mov
push
stos
fsubrl
fimuls
mov
and
xchg
dec
inc
fisubrl
scas
repz
pop
in
scas
push
or
fwait
andl
sub
scas
inc
sbb
roll
mov
test
mov
bound
sbb
sahf
cmc
pop
testl
cmp
aas
dec
movd
mov
pop
rol
enter
lret
ucomiss
scas
daa
aad
mov
or
movsl
gs
mov
lret
push
icebp
data16
adcb
mov
mov
hlt
cs
xchg
add
mov
xor
call
test
fs
std
gs
cli
mov
mov
leave
sub
push
lcall
sub
popa
pop
fcmovne
cli
rcrl
aas
loopne
icebp
xchg
mov
popf
call
mov
lea
or
xor
jne
cli
call
ret
push
and
gs
or
adc
js
filds
fs
fwait
test
arpl
pop
mov
cmpb
fmulp
cli
and
jecxz
test
iret
movsb
xor
pop
pop
or
sysret
pop
lea
push
add
and
jmp
pop
add
sub
and
sub
repnz
je
mov
pop
dec
add
sbb
fldenv
out
lret
mov
sub
xor
or
cli
outsl
inc
mov
orb
inc
call
and
push
cmp
sbb
shlb
sbb
sbb
sbb
cmp
push
repnz
pop
rcrb
daa
dec
xchg
movsl
subl
jmp
je
jecxz
jle
lods
push
sbb
inc
push
leave
icebp
mov
push
pop
cmp
nop
nop
ja
mov
inc
les
sbb
fldcw
sbb
pushf
or
mov
mov
push
mov
adcl
dec
or
push
rol
mov
mov
clc
icebp
mov
or
and
add
mov
inc
pop
fisubl
jge
leave
out
gs
pop
sub
mov
push
and
fildl
aam
mov
adc
push
xchg
jno
sbb
jle
fildll
adc
aad
pop
xchg
mov
add
pusha
xor
je
mov
jmp
or
das
adc
inc
fwait
mov
cmpb
mov
out
vminps
xor
jle
mov
mov
cli
inc
pop
push
cli
or
adc
xchg
ja
fstl
cmp
scas
aaa
jmp
inc
lahf
out
repnz
jge
push
nop
popf
popf
js
negb
scas
fisubrl
lds
or
xor
or
in
mov
dec
dec
mov
clc
iret
mov
aam
sbbl
je
ja
pop
mov
jp
sbb
sbb
sbb
pop
jnp
mov
mov
jnp
aaa
jno
lock
mov
mov
int3
addb
fs
test
sub
dec
fs
dec
xchg
pop
xor
xchg
adc
adc
push
or
cmp
stc
or
jns
cmp
fwait
adc
lret
pop
fisubrs
sti
jbe
cmp
and
and
xchg
stos
mov
xchg
into
adc
sbb
cmp
cmp
sub
cmc
jb
mov
int
inc
adc
test
push
push
repz
ss
inc
adc
fbld
pop
dec
xchg
pmaddwd
xchg
xorb
mov
loopne
pushf
das
test
inc
mov
adc
dec
inc
mov
insb
scas
xor
push
inc
push
daa
bound
mov
les
cltd
scas
lea
mov
sbb
fwait
xor
cltd
xchg
pop
sbb
flds
mov
add
rcrb
movsl
inc
push
stc
orl
inc
in
add
xchg
lcall
dec
fdivp
mov
inc
inc
imul
scas
test
adc
xor
or
sub
push
lods
xor
je
imul
jle
adc
xor
xor
cmp
or
iret
roll
push
pop
in
lods
and
ret
repz
and
sbb
add
mov
aaa
es
dec
cmpb
dec
js
testl
jg
inc
xchg
adc
shlb
fdivrl
pop
repz
adc
mov
adc
cltd
icebp
add
std
dec
cs
lock
mov
popa
xchg
cmp
pusha
xor
shll
in
dec
aas
in
push
call
jne
mov
push
dec
jg
negl
dec
cmp
imul
call
push
mov
loop
gs
dec
cwtl
mov
jp
xor
dec
mov
fidivrs
popa
pushf
sbb
sahf
sti
pusha
out
inc
rcr
fdivrp
mov
jno
jnp
nop
cltd
mov
mov
adc
adc
imulb
dec
mov
inc
dec
outsb
sub
inc
testl
jl
or
push
dec
lret
lret
push
jle
fwait
jge
mov
clc
hlt
decl
mov
jae
mov
into
add
fnstcw
repz
mov
cmp
fists
inc
xor
add
pop
out
scas
dec
sar
mov
ja
adc
mov
orl
rcl
mov
jmp
mov
popa
ret
flds
inc
sub
and
pushf
out
cmp
and
jmp
out
adc
sub
mov
sbb
in
loopne
mov
or
and
dec
mov
sbb
cmp
or
hlt
push
clc
addr16
xchg
test
fidivrl
popa
jmp
std
cmp
test
adc
inc
adc
pop
loop
dec
add
ret
cmc
int
adc
push
movsb
xor
xor
sub
jne
daa
cmpsl
xchg
or
dec
jle
ja
dec
pop
mov
addr16
in
cs
movsb
sub
popa
push
cmp
out
mov
push
rolb
or
cmpxchg
inc
and
lock
xchg
pop
lret
sub
aas
aaa
ljmp
out
or
mov
sub
adc
inc
dec
xchg
mov
cmpsl
repz
sbb
inc
lret
pop
cmp
sbb
bound
mov
aam
xor
inc
inc
bound
xor
aam
cmp
outsl
into
imul
cmp
push
mov
test
bound
ljmp
jecxz
outsb
jo
pop
and
or
push
stos
pop
sti
mov
fisttpll
cmpsb
xor
jle
out
test
in
cmc
repz
out
daa
xor
jno
imul
popf
and
enter
je
filds
add
cmp
xlat
dec
jg
cltd
rorb
fistl
loope
sahf
lret
in
aad
imull
pop
lahf
or
aas
mov
imul
or
daa
or
mov
cmp
sub
in
shll
jp
mov
jge
dec
push
sub
and
jg
mov
mov
lods
add
mov
push
sahf
cld
mov
mov
divl
cmp
push
inc
repz
mov
test
in
jecxz
or
adc
xchg
push
lret
mov
ret
insb
or
test
mov
test
pop
add
in
cmp
and
dec
mov
xor
xor
lea
sbb
call
cmpb
xchg
cltd
push
dec
add
and
out
inc
pop
xchg
or
icebp
dec
ret
jb
push
fmul
xorl
pop
or
mov
xchg
sub
repz
fnstenv
jae
addr16
jmp
add
sbb
mov
sub
dec
in
and
aaa
xor
xchg
sahf
loop
xchg
fidivl
xchg
or
fsubrs
sbb
xlat
enter
dec
and
ja
lea
pop
ret
xchg
sbb
jle
ret
lcall
push
fsubl
and
cs
rorl
gs
outsl
arpl
mov
insb
ficompl
pop
lea
ja
ja
mov
sarb
rol
push
int3
sub
pop
sbb
imul
popa
pop
ss
adc
cmp
mov
lret
xor
jecxz
mov
cmp
xchg
andl
sbbw
ficoms
push
fnstenv
mov
cwtl
and
lret
jb
imul
arpl
cltd
stc
mov
push
ret
addr16
je
sbb
dec
stos
leave
test
lcall
jg
in
push
test
dec
xor
push
mov
inc
fistpl
jnp
push
pop
mov
insl
xor
ss
gs
fs
mov
xchg
popa
cmp
jg
test
stos
scas
lds
loopne
insb
in
addr16
sahf
popf
mov
or
in
lcall
ljmp
jnp
adc
aad
and
in
mov
fsubr
fdivr
xlat
mov
mov
push
jecxz
inc
rorb
arpl
jne
lret
lock
mov
scas
test
cmp
test
sub
and
bound
xor
lret
repnz
leave
or
popa
jle
int
into
sub
pop
scas
pushf
xchg
hlt
xor
in
sbb
out
and
shll
clc
popf
push
sti
aad
push
sbb
je
cltd
sarl
scas
sbb
mov
lock
mov
in
and
push
aad
repz
and
adc
jecxz
sbb
cmp
mov
sbb
cmp
push
repnz
xor
jns
inc
je
mov
enter
push
cmp
push
in
in
add
pop
mov
and
pop
jnp
push
orl
jno
shlb
lods
mov
ja
aad
jnp
leave
fisubs
cmp
cmp
into
gs
pop
adc
inc
das
pop
inc
mov
loop
adc
adc
mov
icebp
dec
pop
and
mov
xor
inc
out
ja
add
mov
popa
adc
sbb
pop
sbb
and
and
test
jecxz
imul
xchg
int3
nop
sub
imul
test
lret
sarb
mov
jae
or
ds
and
dec
lds
int
inc
mov
adcl
xchg
sub
ljmp
in
cwtl
and
xchg
pop
mov
call
shll
mov
adc
pop
insb
int
ja
or
sbb
ja
test
or
rcr
jae
aam
push
iret
arpl
lods
adc
dec
jecxz
inc
adc
test
mov
mov
inc
or
setge
js
movaps
ds
cmp
in
and
test
cmp
mov
jno
clc
leave
adc
pop
js
push
lea
fs
xchg
xchg
pop
imul
adcb
and
jbe
pop
adc
orb
push
dec
std
les
in
push
jmp
pop
call
pop
adc
adc
stos
mov
ljmp
in
push
mov
mov
cwtl
push
in
cmp
sbb
push
cmp
inc
push
mov
xor
je
sub
dec
dec
aad
inc
pop
sub
push
and
jns
cmp
add
lods
rolb
mov
ffree
lods
push
movsl
jnp
out
lods
add
movl
adc
and
aas
and
or
shrb
jmp
add
icebp
cmc
sub
repz
cltd
and
mov
sti
mov
pop
imul
and
insb
loop
and
mov
fdivrl
int
xor
add
scas
aad
push
clc
mov
jecxz
adc
sti
xor
ds
loope
mov
je
ret
insl
fstps
pop
fs
pop
outsb
andl
std
inc
arpl
mov
outsl
inc
ds
insl
addr16
fbld
fs
in
mov
popf
add
mov
cmp
lcall
jle
lret
push
lret
rcll
jge
mov
xchg
shufps
dec
pop
mov
inc
ljmp
ret
shl
pop
push
push
cmpsb
cwtl
lock
mov
inc
xchg
cmp
or
pusha
in
jp
pop
in
rcrb
stos
insl
push
dec
shlb
aaa
ds
pop
push
mov
es
ror
jo
cld
out
jae
ret
dec
loope
jmp
notl
cmp
push
or
jecxz
int
adcl
mov
adc
ljmp
jge
xor
lods
jbe
mov
sub
ud2
shll
mov
pop
loop
push
int3
int3
aam
mov
in
and
pop
pusha
pop
jne
xchg
shr
jbe
addr16
xchg
pop
cmc
test
mov
lds
fs
insb
jle
mov
mov
cmp
ja
push
int3
nop
fdivl
pushf
adc
jmp
sub
lods
or
add
and
cwtl
fcompl
mov
push
mov
jg
je
dec
out
sub
pop
pop
lock
sub
cwtl
pop
xor
adc
test
rcr
pop
fs
sub
fwait
stos
ljmp
push
shlb
mov
ret
popf
push
cld
scas
xor
aad
pop
andl
mov
cmp
inc
jno
push
popf
dec
ret
lods
sbb
test
ljmp
mov
xor
stc
cmp
push
outsb
aad
sbbb
in
push
or
jb
inc
pusha
mov
push
jo
xlat
notb
loope
rorb
mov
pop
cwtl
or
mov
ret
es
jno
ret
push
insb
movsb
das
adc
orl
push
dec
xchg
sub
xor
jg
lods
aaa
js
push
inc
data16
mov
mov
mov
mov
ljmpw
in
scas
xor
cs
cmp
add
xchg
subb
das
scas
popa
xor
pop
push
mov
das
testl
mov
je
fdivrl
cmp
insb
mov
sub
jmp
jns
cmpsb
dec
dec
es
and
cli
mov
cli
sarl
mov
iret
xor
or
add
adc
sbb
push
xor
fwait
push
push
add
sub
repz
cmp
adc
mov
js
mov
in
lcall
xchg
adc
cmpsl
scas
adc
das
sbb
push
into
cli
shlb
sub
dec
int3
mov
loop
pop
jmp
cld
push
out
ja
repz
add
repz
jns
cmp
jns
xchg
mov
xchg
pushf
mov
inc
or
mov
dec
xadd
hlt
out
push
xor
std
jne
pop
pop
lea
mov
es
arpl
addr16
xchg
into
pushf
mov
fwait
movsb
add
gs
adc
dec
fwait
adc
mov
scas
push
arpl
cmp
mov
add
jnp
jl
incl
and
pop
into
inc
push
pop
pusha
pop
push
fwait
xchg
lock
inc
loopne
sub
dec
gs
adc
sub
inc
mov
mov
inc
or
fiadds
fisttpl
stos
adc
xorb
push
loope
or
cmp
sahf
adc
das
dec
fucom
test
stc
neg
hlt
imul
add
mov
cmp
push
mov
dec
or
sbb
test
add
adc
cmc
mov
mov
jecxz
xor
sbb
add
mov
xor
and
xor
or
xor
cmp
add
out
jbe
nop
cmp
and
mov
rclb
xchg
sarb
push
gs
ds
jl
xchg
jg
pop
cmpb
test
mov
rcrb
dec
fwait
loope
inc
push
add
xor
movsl
push
test
out
mov
jp
mov
adc
pushf
je
hlt
sub
mov
sahf
pop
xchg
jnp
mov
push
ret
scas
dec
sub
icebp
bound
mov
ja
je
outsb
jae
push
stos
insb
hlt
mov
ja
addr16
sub
leave
adc
inc
add
int
shll
dec
aam
dec
pop
arpl
ja
push
fisubs
add
mov
test
rorb
cmpsl
js
jne
das
pusha
add
loope
fadds
xchg
push
fstpl
ljmp
mov
mov
push
cld
loopne
inc
mov
mov
lcall
pop
add
dec
pop
dec
lcall
fisubrs
adc
aad
xchg
cli
jns
in
lret
imul
mov
fisubrs
add
mov
imul
cwtl
and
and
imul
sub
dec
jecxz
cli
arpl
mov
mov
lcall
inc
addr16
cmpsl
sub
flds
icebp
adc
ljmp
lahf
push
sbb
aas
jns
sbb
push
test
add
push
inc
xor
aas
addr16
pushf
movsl
in
js
imul
pushf
pop
inc
insb
outsl
mov
jbe
adc
jbe
fists
test
push
sbb
sub
fldt
xorb
add
lods
and
std
sub
movsb
add
outsb
in
xor
push
adc
adc
and
les
sub
sbb
loope,pt
cld
ljmp
test
pushf
lods
loop
push
daa
lds
jge
nop
lds
adcl
push
sarb
popf
fdivs
les
xor
sub
out
cli
fisttpll
js
out
jno
sbb
push
add
aad
dec
fucomi
jbe
test
gs
sahf
push
jne
outsb
sbb
xor
push
insb
xchg
int3
push
stos
inc
push
daa
int3
pop
mov
lcall
push
cmc
push
in
movntq
lds
pop
add
ret
pop
scas
or
arpl
mov
mov
lcall
sti
mov
dec
fisubs
lret
fwait
add
mov
and
popf
and
nop
in
movsl
mov
nopl
fisubs
mov
add
cmp
pop
sub
jbe
or
subb
rcrl
stos
cmp
js
mov
sbb
pusha
and
cwtl
repnz
daa
mov
lock
movsl
pop
push
outsb
ret
out
xor
jl
push
iret
and
sti
cld
jo
xchg
enter
jl
jle
call
cmp
lock
dec
into
mov
fcomip
xchg
roll
loop
insl
xor
ja
jg
mov
mov
mov
xchg
les
out
pcmpgtw
push
dec
test
jg
push
mov
mov
mov
call
in
sub
cli
xor
push
vunpckhps
out
cmpsb
and
cld
aaa
cwtl
lret
adc
and
xor
pop
imul
add
pop
jae
loopne
sub
add
xor
test
jl
mov
jl
xchg
mov
pop
inc
lds
test
mov
fistpll
insl
sahf
lahf
or
das
fs
push
jmp
dec
leave
add
lock
dec
outsb
aam
int3
in
cmp
imul
push
push
daa
negl
sahf
mov
vaddps
fwait
std
insl
and
mov
mov
cltd
imul
in
or
popa
lods
jmp
loop
mov
push
add
push
and
dec
les
in
mov
daa
call
je
das
mov
rol
push
lahf
packssdw
mov
rcrl
mov
cmp
jge
scas
xchg
push
nop
fwait
inc
mov
push
pop
cmp
das
xchg
jge
mov
and
int3
mov
inc
fsts
sbb
mov
repnz
bound
lds
cmp
imul
pop
mov
or
cmp
lret
scas
add
jmp
cli
call
mov
jno
js
pop
stos
dec
sub
int
test
cmpsl
mov
test
mov
subl
int3
pop
pop
add
jbe
jg
loope
sti
lea
jae
adc
test
lock
xor
fnstenv
inc
jae
fdivs
ja
out
cmp
stc
cmp
lock
scas
mov
arpl
lret
push
clc
cs
filds
inc
ja
or
rcll
mov
nop
sbb
repz
adc
test
cmp
aad
adc
loopne
in
lds
mov
andb
xor
or
or
mov
movsb
clc
lahf
js
push
insb
mov
ret
test
fsubrs
dec
xchg
fldl
shl
or
and
cwtl
nop
mov
pop
sub
lahf
cltd
or
or
adc
sub
clc
and
jecxz
arpl
pop
and
ja
out
insb
shll
lret
cmp
stos
mov
pop
fsubs
out
mov
mov
push
cmp
mov
mov
repnz
sub
jns
gs
mov
sahf
or
push
xor
scas
mov
ret
pop
and
imul
cld
rcl
idiv
ja
test
test
iret
call
ja
cmc
or
sub
test
fdiv
mov
ds
addr16
popf
inc
shlb
sti
and
out
pop
inc
adc
jge
popf
xchg
shrb
insl
mov
sub
pop
inc
and
add
mov
mov
xor
int
movsl
insl
lock
nop
pop
add
fsubrl
into
dec
pop
inc
hlt
xor
pop
fdivrs
fcoml
les
adc
iret
es
lea
mov
ret
dec
lret
pop
and
jno
push
jl
into
loop
int3
les
inc
xor
sub
cltd
pop
mov
fcoms
test
idivb
imul
mov
inc
loope
jg
jmp
mov
jb
stos
aas
jmp
icebp
lret
shll
pop
aas
and
hlt
push
imul
sub
loop
test
loopne
outsb
mov
in
je
pop
loope
rcrl
out
mov
add
clc
and
std
mov
pop
cld
imul
insb
outsl
or
pop
inc
pop
or
mov
mov
jmp
je
jge
mov
add
push
sub
sbb
jecxz
and
cmp
xor
cmp
lahf
stos
sub
xor
icebp
jecxz
mov
lahf
icebp
out
jo
sub
sub
je
add
and
push
fs
shrl
out
lods
rcl
das
jecxz
adc
lret
push
push
stos
jle
cmp
fbstp
mov
test
sbbb
add
mulb
out
add
fcmovne
push
testb
push
ljmp
pop
dec
in
xchg
adc
jno
lea
inc
loop
in
mov
jmp
dec
push
test
movsb
lds
int3
clc
or
push
fcmovnbe
ret
pop
pushf
rolb
mov
cmp
and
cwtl
lahf
ds
mov
mov
repnz
jns
pop
jp
push
xchg
jle
scas
xchg
lcall
outsb
lcall
lahf
sub
scas
push
cmp
outsb
lds
or
mov
jg
cltd
imul
dec
push
cmpsb
movsb
dec
push
mov
sub
aam
or
mov
adc
out
mov
inc
push
pop
mov
into
and
xorl
add
call
or
sub
arpl
add
mov
out
push
push
add
cmp
jmp
popf
jno
push
add
inc
and
fcmovnb
loop
xor
cmp
lea
jge
mov
mov
nop
rcll
rorb
insb
jge
enter
xchg
out
add
hlt
push
pop
push
cli
sub
test
push
push
inc
inc
fstpt
repz
jno
cltd
jmp
aam
jg
xor
pop
shrb
push
mov
xor
cli
add
sahf
push
xlat
and
jo
mov
fdivrs
data16
mov
mov
shll
mov
xchg
movsb
add
in
scas
sbb
pushf
mov
jge
push
fwait
cmc
ds
mov
jae
ljmp
push
xor
stos
iret
cmp
outsl
stos
xor
int
push
add
insl
or
sbb
push
push
jnp
add
sarl
cwtl
hlt
xlat
aas
lock
jmp
out
cmc
test
mov
cmpb
and
ret
jle
fcompl
push
fld
cli
or
or
and
int3
call
xchg
jge
xchg
es
mov
dec
mov
lods
or
dec
mov
xchg
xchg
inc
shlb
add
pop
cmp
mov
sarb
xor
pop
aaa
sbb
out
jnp
lahf
add
jbe
movl
push
aaa
sbb
and
lods
cmp
push
lahf
inc
ljmp
repz
popa
mov
cli
hlt
call
in
ja
xor
mov
rclb
ja
or
insb
fwait
pop
mov
ret
mov
xor
jle
dec
bound
out
lret
and
fsts
icebp
cmp
and
fsub
inc
int
push
test
sbb
loope
inc
movsb
ljmp
add
sbb
xor
mov
add
imul
int
sbb
fcmovnbe
mov
push
les
aaa
test
adc
xchg
mov
inc
stos
xchg
pop
popa
mov
or
mov
cmpl
mov
fiaddl
sub
add
jb
iret
jmp
mov
fistpl
jl
lods
jp
inc
cmc
int3
pop
out
mov
insl
mov
xchg
pop
iret
adc
testb
pop
in
push
in
pop
hlt
ss
add
andl
inc
sub
lds
xchg
mov
aam
das
mov
mov
jbe
xchg
insl
xchg
int3
insl
les
stos
sub
loop
aaa
mov
mov
popf
push
lcall
add
out
push
mov
jp
enter
leave
and
jmp
pushf
dec
xor
pop
inc
insl
stos
loopne
inc
pop
jae
ljmp
xchg
insl
insb
inc
sub
push
mov
xchg
ja
jae
je
dec
das
pop
jb
pop
inc
mov
lret
idivl
jecxz
sub
push
fcmove
leave
lds
jl
ds
popf
cmp
sbb
pop
pop
bswap
test
sbb
mov
leave
xchg
adc
out
inc
inc
inc
ds
mov
inc
pmaddwd
mov
xor
sarb
pop
cwtl
and
cwtl
je
cli
sbb
xor
mov
scas
in
pop
inc
rcll
mov
mov
mov
and
xor
or
ljmp
popa
cmp
cmp
sub
push
xchg
mov
mov
jae
lea
or
out
inc
cmp
test
xchg
jle
leave
aas
data16
xor
push
ds
cmpsb
xchg
push
jge
daa
cmpsl
and
xchg
fs
ja
xchg
dec
lret
inc
sbb
sub
add
jb
lcall
clc
xor
in
andb
test
rcll
loope
test
movsl
int
in
leave
repz
ficoml
xchg
cmpl
rcll
mov
rclb
in
sbb
inc
dec
out
out
fucomi
int3
lahf
jns
inc
fldl
je
jne
inc
sbb
sub
push
cmp
orb
jb
adc
push
sbb
int3
pop
mov
or
in
jp
inc
scas
xor
mov
sub
imul
adc
lds
dec
rolb
jno
xchg
jae
iret
or
xor
push
dec
inc
pop
bound
pop
dec
lahf
inc
xor
and
je
stc
mov
adc
cld
sub
rorl
jnp
dec
lock
movsb
mov
fistpll
in
and
cmp
es
mov
inc
xchg
cmp
jge
popf
clc
and
rsqrtps
mov
call
les
shrl
push
mov
mov
pop
mov
lock
mov
push
jo
sbb
or
fwait
mov
jns
ret
add
scas
lock
out
push
adcb
mov
shrl
push
shlb
or
js
aad
movsl
mov
aad
jbe
dec
lods
loopne
pop
mov
add
lock
and
bound
cmp
or
and
lret
pop
adc
adc
gs
sbb
and
test
imul
dec
sahf
aad
sub
xchg
xlat
sbb
xor
jecxz
lea
movsb
out
mov
jb
and
xchg
movsb
or
or
cltd
xor
inc
and
push
xchg
xor
idivl
xchg
mov
popf
sbb
pusha
add
add
xchg
in
xor
adc
xchg
test
ja
dec
add
push
std
xor
mov
mov
jo
insb
clc
ds
idivb
xor
cmp
in
mov
inc
lock
fstpt
mov
add
ljmp
mov
add
jbe
test
in
rorl
and
push
inc
xchg
scas
iret
ljmp
jb
mov
mov
enter
xor
mov
cld
ss
fucomp
push
out
pushf
add
jo
ficoml
fwait
or
in
dec
inc
xchg
or
lock
mov
repnz
insb
or
sbb
adc
sahf
sbb
jmp
dec
pop
lahf
jmp
nop
cmp
sarb
mov
popf
outsb
mov
gs
aad
inc
jg
mov
aaa
in
imul
addr16
iret
test
mov
cmpsb
shl
fidivs
pop
push
dec
fmull
dec
iret
jl
sbb
jg
arpl
xor
dec
mov
scas
lret
dec
inc
dec
pop
fdiv
fiadds
pop
and
mov
lods
imul
int
jbe
mov
jle
xchg
mov
pushf
or
push
imul
imul
pop
cmp
mov
cmp
sub
or
div
pop
push
inc
pop
es
mov
mov
mov
adc
mov
mov
push
sti
cltd
and
mov
mov
xor
sbb
loop
rclb
js
sbb
mov
or
loop
cmc
sti
pushf
icebp
mov
xor
sub
push
fdiv
pop
adc
pop
sti
adc
add
pop
lock
and
and
lret
int3
ljmp
cmp
daa
or
sbb
sbb
inc
repz
cmp
push
cmp
push
or
sahf
mov
outsl
addb
nop
mov
leave
mov
cmpsl
dec
arpl
cwtl
adc
sbb
and
test
xchg
sub
and
cmp
xor
aad
test
ds
pop
cli
mov
mov
bound
sbb
lahf
dec
shrl
gs
das
pop
icebp
cltd
or
aam
dec
stos
add
cmp
push
lea
cmp
and
testl
xchg
xchg
jg
xor
sub
jmp
cli
mov
fcoms
loopne
inc
jecxz
mov
cmpsb
pop
out
xor
das
or
pop
mov
in
add
push
setle
test
mov
adc
sarl
mov
sbbb
dec
mov
insl
jmp
and
ja
aad
cmp
cmpl
jp
cmpsl
cmp
and
out
shlb
or
fisttps
in
mov
stos
xchg
jp
pop
xchg
mov
mov
pushf
xor
or
xchg
sub
dec
jno
add
sbb
xor
lock
mov
aam
jge
in
mov
jo
xchg
add
arpl
mov
or
mov
mov
out
cmp
stc
and
scas
inc
les
imul
nop
push
jb
cmpsb
stc
push
andb
test
xchg
cli
xor
mov
sbb
mov
mov
mov
sub
ficoml
inc
sub
insl
aaa
push
shrb
lods
push
mov
mov
xor
push
or
push
loope,pn
sub
filds
popf
mov
lods
xchg
test
cmpl
fistpl
pushf
pop
sahf
jnp
rclb
pop
add
lcall
xchg
mov
cmp
sub
xchg
fistl
insl
addr16
aad
push
dec
das
mov
mov
add
test
and
stos
ret
in
adc
jl
adc
mov
inc
xchg
insl
ss
xchg
cltd
pop
cmp
jmp
or
lcall
mov
lcall
mov
or
cmp
cmpsl
test
inc
ja
jnp
loopne
and
pop
cmp
enter
pop
mov
xor
in
and
outsl
lods
shrb
add
es
xor
icebp
xlat
addr16
iret
xchg
pop
ja
out
or
cmp
pop
mov
movsl
movsb
insb
mov
and
cli
sbb
mov
in
clc
xchg
xchg
insl
mov
into
and
pop
cli
fwait
push
mov
jecxz
gs
mov
jne
jb
enter
sbb
clc
fcmovb
ss
aas
sub
and
loop
andl
loope
jl
outsl
inc
adc
aam
aam
pop
std
outsl
movsl
inc
sbb
jl
insl
and
lret
fldl
mov
xchg
loopne
je
div
and
idivb
jmp
cld
aaa
lcall
out
jg
mov
push
pop
jl
jl
out
and
outsl
in
test
negl
or
add
shlb
arpl
jae
stos
outsb
cmp
inc
push
pop
imul
daa
dec
pop
scas
jecxz
outsl
popa
test
movl
xor
popl
loopne
and
imul
bound
mov
push
std
loop
aad
xchg
xor
pop
mov
cmp
clc
jb
jmp
and
loope
popa
pop
push
adc
rolb
aam
jns
push
js
mov
leave
xchg
mov
inc
outsl
lahf
lds
hlt
cmp
leave
pusha
adc
out
or
movsb
pop
fisttps
mov
outsb
xchg
jg
fsubrs
mov
enter
adc
lods
fisubl
inc
mov
mov
incl
ret
ss
push
cvtps2pi
pop
pop
jno
mov
cmpsb
cwtl
xor
jbe
sbb
imul
sub
pop
jle
adc
add
data16
xor
lret
sbb
and
movsb
and
lods
call
stc
mov
push
neg
cli
push
lret
repz
add
out
addr16
cs
mov
add
push
pop
scas
fsts
in
mov
cli
jp
xchg
movsb
add
scas
fisubrl
int
mov
dec
ljmp
out
xchg
mov
jb
stc
mov
xchg
call
fldcw
mov
ror
ss
movsl
dec
xor
mov
je
inc
iret
les
fdivs
and
jo
inc
mov
rcll
push
movsl
das
xchg
push
fadd
and
repnz
int3
pop
in
add
mov
fwait
xor
jae
dec
xorb
or
mov
cmp
fcompl
xor
jb
scas
push
lods
fwait
or
inc
mov
sbb
int3
and
test
jne
movsb
js
movsl
aas
out
cli
sarb
shlb
int3
xchg
push
inc
outsl
js
jbe
mov
arpl
sbb
cmpb
cmp
jg
cmp
pop
mov
mov
mov
or
ja
inc
adc
inc
lods
pop
adc
pop
out
push
sbb
movsb
addr16
stc
mov
in
add
cld
cld
add
les
sbb
adc
fs
add
xor
mov
sbb
rolb
rcl
push
popa
aaa
inc
mov
adc
add
jmp
sarl
fidivs
push
inc
mov
sbb
xor
js
out
ds
leave
and
aas
pop
pop
add
loopne
pop
loope
shrl
xor
or
dec
in
mov
test
cmp
mov
sbbb
out
cwtl
inc
mov
cmp
imul
jmp
imul
mov
sbb
loopne
jmp
aas
je
fwait
scas
cmp
dec
dec
sub
enter
fs
jp
mov
lret
xor
cmp
mov
call
in
mov
mov
pmaxsw
popf
dec
inc
cmpsb
cmp
test
mov
sbb
xchg
fcompp
mov
xchg
xchg
ds
out
mov
or
pushf
mov
dec
out
pop
mov
cs
test
into
inc
mov
aaa
and
add
mov
or
pop
int3
lea
add
cmp
gs
sbb
aaa
aam
popf
rcl
call
mov
cmpsl
clc
or
lret
fmul
jmp
lods
mov
ficoml
jae
xlat
push
push
cmp
adc
aam
dec
push
pop
cs
sub
inc
push
cmpsl
inc
fiaddl
cmp
enter
addr16
mov
mov
addb
sahf
sub
add
mov
in
aas
sub
and
fbld
push
int3
xlat
mov
shll
fisubl
jge
test
mov
bound
and
pop
and
xchg
mov
adc
loope
push
push
movsl
fmull
shl
es
in
mov
mov
cld
movsl
xor
int3
hlt
mov
xor
mov
inc
idiv
in
inc
outsb
cld
push
sbb
push
mov
sub
iret
cld
xor
imul
xchg
mov
loopne
stos
movsl
pop
push
and
mov
push
je
dec
jbe
or
movl
push
cmp
adc
andl
in
or
mov
lret
fmulp
int3
pop
mov
mov
xchg
outsb
push
std
sbb
sub
mov
xor
push
cmpsl
jns
arpl
push
cmp
cld
ror
mov
call
stc
dec
dec
fnsave
adc
call
mov
std
rcr
cli
ss
mov
fwait
movsl
and
ss
hlt
xchg
inc
sbb
daa
or
out
movsl
dec
shrb
push
xor
call
int
mov
cmc
add
mov
jle
sti
popf
xchg
sbb
add
push
andl
pop
add
cmp
jp
push
cmpsl
pop
rorl
js
dec
fsubs
xor
lods
mov
sbb
addl
imul
cmp
mov
out
push
icebp
cmp
scas
jbe
andb
dec
pop
lcall
push
xchg
sahf
ret
cmp
add
test
testb
loopne
movsl
in
fmul
dec
sbbb
cld
lock
out
pop
xchg
push
out
xchg
inc
jl
sbb
addb
out
aaa
pop
jbe
ds
cld
out
adc
push
mov
cld
push
jge
jle
addb
lods
pop
xchg
add
lret
add
push
jmp
movsb
inc
pop
jg
or
jge
adc
add
fnstsw
inc
cs
pusha
in
inc
xchg
or
jl
xchg
lock
loopne
clts
mov
jb
dec
outsb
push
ja
pop
or
ja
aam
pop
mov
cmc
movsb
mov
jg
punpckhbw
shlb
data16
jno
iret
jmp
add
jg
call
cmpsl
daa
jae
loop
adc
add
and
xor
add
or
lods
pushf
ds
rcrb
into
mov
mov
dec
gs
push
xor
scas
or
cmpl
inc
sbb
cmpxchg
jae
sub
pop
out
ficomps
push
andl
jo
adc
fildl
mov
lret
loopne
mov
aad
inc
test
or
push
mov
pop
mov
das
mov
int3
or
and
mov
lcall
mov
inc
ret
adc
cli
xchg
push
fildl
inc
and
in
push
fcompl
jo
out
or
push
sub
xor
xchg
fwait
enter
inc
ds
data16
dec
mov
or
lds
and
iret
loopne
ss
pop
pop
jg
xor
sarb
ljmp
jno
lds
stos
pop
mov
sub
mov
loop
sarl
push
mov
arpl
pop
or
sbb
scas
arpl
mov
inc
xor
fsubrl
stos
sub
sub
push
sarl
push
adc
cs
cltd
push
mov
adc
cmp
shl
sbb
mov
cmp
jl
inc
xchg
popf
xor
push
cmp
fwait
cmpsl
push
call
popf
lds
inc
loop
addr16
sbb
add
jb
xorb
out
mov
lcall
and
lods
shrb
vpunpckldq
xlat
in
stos
addr16
pop
sub
cmp
dec
sub
or
loopne
xchg
push
mov
sar
lods
pop
shl
daa
dec
and
aam
cmpsb
gs
add
dec
shll
sahf
daa
loop
push
jecxz
inc
pop
insb
call
jge
lcall
mov
roll
jae
lods
jnp
inc
jo
xlat
mov
dec
adc
dec
fistl
je
xchg
inc
add
ficomps
stos
add
cmp
test
rorb
xchg
sbb
add
cli
arpl
mov
pop
sbb
inc
sbb
insl
push
mov
cwtl
mov
push
xchg
jmp
sbb
inc
movsl
sub
xor
cmpsb
hlt
add
sub
das
fnsave
xor
mov
fcmovnb
int3
jge
lock
mov
out
dec
ds
add
mov
xchg
dec
fsubr
addl
cmp
fisttpl
dec
insl
xchg
fisttpll
fs
xor
ret
out
imulb
push
sub
nop
push
rcll
pop
mov
orl
pop
nop
es
cmp
movb
jmp
push
in
int3
ss
push
cltd
push
test
mov
push
mov
sbb
xchg
leave
pop
jg
lret
sarb
push
jnp
in
mov
jmp
stos
cmpsl
xlat
push
mov
in
and
push
mov
rcl
out
cmp
shl
aas
mov
push
das
mov
not
xor
lds
xchg
jnp
insb
aas
leave
aaa
lea
aam
daa
lret
push
bound
test
ljmp
push
adcl
cmpsb
push
loop
or
in
or
push
push
and
xchg
jmp
xor
lods
mov
pop
mov
mov
scas
in
cltd
cmp
push
pop
add
ljmp
loop
in
jg
notb
mov
mov
push
mov
jnp
pop
sbb
dec
mov
test
xchg
ja
clc
xchg
bound
in
inc
xchg
cld
aam
xchg
pop
adc
push
insl
mov
push
fcmovb
addr16
lahf
jne
jecxz
mov
pop
lahf
jno
popf
push
stos
in
xchg
mov
sub
in
jne
xor
addr16
dec
repnz
dec
aad
clc
dec
std
or
xor
xor
jmp
rcr
lods
xchg
xchg
cmpb
or
jp
dec
add
adc
xchg
mov
filds
or
mov
jmp
fdivs
add
arpl
out
pusha
sbbb
xor
mov
adc
lahf
add
push
dec
addr16
and
stos
adc
xchg
cmp
sub
mov
dec
adc
adc
leave
arpl
sub
leave
add
fwait
add
jmp
test
sub
rcrl
dec
xchg
adc
pop
xor
or
cwtl
inc
das
lret
arpl
repz
cli
aad
jg
pop
bound
push
mov
ret
mov
push
inc
push
lahf
into
out
dec
fs
push
stc
mov
jbe
and
repnz
ret
arpl
jmp
xor
lcall
dec
stos
mov
aam
xor
push
mov
mov
ret
popa
cs
shrl
stos
ljmp
mov
jbe
ret
inc
js
sub
add
test
mov
add
cmp
rcrl
js
cmp
dec
inc
sbb
ljmp
cmp
icebp
fcomps
add
or
xchg
insb
popf
int3
repnz
ljmp
movsl
add
outsl
mov
xorb
jb
gs
sbb
scas
scas
xor
in
test
repz
add
mov
pushf
inc
jo
and
addr16
inc
xlat
loopne
cmp
mov
lahf
enter
mov
mov
orb
mov
aaa
test
arpl
out
pop
sbb
fs
nop
or
push
push
int3
pop
cmp
sub
xor
jo
leave
inc
jle
or
inc
in
push
inc
mov
add
test
mov
int
jns
dec
sbb
xchg
xor
gs
cltd
mov
jae
pop
test
movsb
nop
mov
pop
push
jg
lock
outsb
jmp
push
test
stos
bound
lcall
scas
sub
push
mov
cmpsl
mov
rol
ja
in
inc
jl
pop
xor
mul
inc
pushf
sahf
pop
lock
enter
push
mov
cltd
add
shl
daa
aas
push
pop
es
pop
je
daa
subb
push
negb
fcmovu
call
xchg
add
addr16
scas
div
decb
mov
push
push
jae
pop
nop
ficompl
mulb
shl
push
push
ljmp
adc
movsb
or
xor
shll
test
pushf
push
lock
jle
dec
mov
push
fadds
sub
stos
rorl
push
mul
pop
pop
mov
jmp
cld
push
insb
loope
xchg
push
jp
pop
test
sahf
mov
ret
push
test
ret
sbb
subb
sbb
les
push
xlat
jecxz
pop
or
xor
mov
addl
xchg
ret
mov
cmp
xchg
xor
sub
sbb
or
push
inc
xchg
jnp
in
int3
mov
or
xor
js
fnsave
and
arpl
mov
xchg
sti
lret
mov
mov
adc
or
dec
xchg
loope
test
outsb
rclb
rcr
cltd
lahf
test
rolb
mov
mov
mov
in
aas
cwtl
jo
pop
mov
or
jbe
frstor
sahf
add
sbb
sbb
ffree
inc
sbb
or
lcall
cmc
fsts
jmp
pop
lock
and
test
filds
decb
shrl
orl
xchg
adc
xchg
xlat
lea
jle
mov
push
aaa
push
mov
scas
ret
push
push
loope
stos
lock
lea
pop
jne
loop
fcmovb
mov
js
push
sub
aas
ret
jle
mov
fwait
pop
cld
stos
mov
mov
jge
xor
insb
in
xchg
add
jg
iret
in
and
and
sbb
je
mov
je
icebp
movsb
es
mov
xchg
sub
dec
xorl
subb
aaa
inc
fdivs
sbb
movl
int3
fs
jmp
inc
adc
icebp
xor
jge
fimuls
mov
push
outsb
push
test
push
inc
push
xor
jp
mov
cwtl
lea
add
ret
aas
mov
testl
sub
cld
out
mov
stos
mov
int
lods
pop
push
mov
sub
mov
fisttps
xorb
lods
out
push
js
not
jp
sub
sbb
scas
sub
ljmp
aaa
push
and
iret
lods
xor
lahf
or
in
xchg
pop
test
push
clc
popa
cmp
cld
push
jecxz
push
xchg
fcoml
push
pop
xchg
clc
rolb
aam
pop
lcall
mov
xlat
lret
xchg
leave
jne
pop
cmpb
jg
mov
stc
mov
insb
fildl
and
adc
fnsave
mov
fdivrs
xchg
decb
sti
cwtl
scas
or
jns
adc
pop
in
pop
int
idivb
mov
loop
cmp
xchg
loopne
cmpsb
stc
adc
xchg
xchg
dec
mov
jl
jmp
imul
lock
cmp
and
jno
movsl
cmc
mov
rcrb
loopne
mov
inc
adc
mov
mov
pop
add
stc
outsl
fbld
dec
call
pop
xor
mov
dec
ficoml
xor
lock
int
add
into
arpl
sub
fscale
dec
cmp
mov
jae
pop
loope
test
sbb
push
push
in
push
sbb
sbb
ret
addr16
lret
cwtl
movsl
pop
shl
cmpsl
push
dec
add
repz
and
adc
clc
sub
in
ljmp
test
sub
and
cltd
dec
aam
or
jo
cld
adcl
fmuls
inc
cmp
or
divl
mov
add
and
mov
scas
mov
jne
movsl
inc
mov
and
mov
mov
xor
add
mov
mov
jl
xchg
adc
sbb
and
xor
sbb
dec
dec
lcall
adcb
mov
jnp
mov
mov
and
sahf
mov
mov
popa
cmp
push
cmp
push
int
hlt
sar
clc
incb
or
psubq
lret
lock
dec
jecxz
mov
adcb
or
inc
icebp
adc
fstpt
loope
adc
outsb
adc
add
inc
cmp
sbb
pop
dec
scas
lahf
and
inc
ficomps
in
in
inc
inc
xor
dec
stos
or
nop
loopne
cmpsb
arpl
pop
cwtl
pop
aas
or
test
mov
xchg
xchg
fs
pop
inc
jbe
lods
rol
add
push
bound
sub
jmp
aas
je
repz
fisubrl
jl
push
sub
ljmp
jecxz
push
mov
or
cmp
sub
fstpl
xchg
xor
lds
dec
sahf
adc
mov
xchg
xchg
mov
dec
dec
sbb
iret
cmpsb
fisubrs
sti
sti
pusha
pop
fcoms
clc
stos
iret
daa
mov
push
cmc
scas
mov
xchg
and
dec
add
xchg
xchg
dec
xchg
test
scas
inc
out
push
jl
mov
or
in
pop
add
bound
cmp
jl
sbb
enter
fwait
outsb
cwtl
mov
sub
xor
cmpsl
mov
jae
xchg
or
jne
sub
xor
dec
add
je
mov
fidivs
out
hlt
into
add
adc
divb
sbb
push
imul
mov
pop
ror
scas
push
mov
adc
popf
lcall
fiadds
lret
xor
dec
test
imul
js
sahf
xlat
jcxz
pop
pop
jl
adc
jbe
pop
mov
xor
adc
cmpsl
pushf
repz
sbb
cvtps2pd
fidivl
sbb
iret
insb
sub
dec
icebp
cmc
lds
movsl
fldl2e
and
cld
push
cmp
cmpsb
les
imul
xchg
cmp
fisubs
nop
or
push
mov
push
sub
inc
imul
add
sub
cwtl
dec
dec
mov
add
add
and
and
out
int
lcall
lcall
fiaddl
mov
ret
mov
dec
jne
inc
scas
fs
bound
sbb
out
cli
jle
test
xor
xor
aaa
enter
sub
rclb
roll
dec
fbld
mov
mov
add
xchg
cli
testl
adc
xor
add
push
pop
mov
push
mov
ds
daa
sarb
fnstenv
jmp
mov
orl
sub
cld
xor
es
cwtl
in
nop
xor
mov
dec
cs
push
les
lahf
les
cwtl
lahf
inc
mov
jge
mov
cmp
jl
dec
lcall
sub
pusha
popf
bswap
cmp
jns
dec
add
sub
loope
cmp
gs
sub
cmp
lret
into
fmuls
popf
push
sbb
mov
cld
mov
xchg
sub
sub
cmp
aaa
loopne
xchg
cmp
adc
jmp
add
in
inc
jle
int
lods
fldt
push
pop
test
sbb
in
aad
rcll
xchg
adc
inc
popa
lret
mov
and
pop
mov
es
xchg
out
aaa
and
out
jp
repnz
fstp
aas
mov
sub
fidivrs
pop
shrl
int
pop
test
push
cmpsl
movsb
lock
lods
scas
aam
xor
push
mov
cmp
sub
xchg
jecxz
push
mov
or
adc
loope
jp
mov
ret
aam
nop
mov
pop
dec
jg
movsl
sub
negl
into
hlt
mov
adc
lods
loopne
icebp
add
push
imulb
int3
push
sahf
mov
sub
jo
xchg
stos
icebp
pop
test
cmp
pop
or
mov
mov
shrd
pop
in
popa
popf
pop
xor
mov
fldt
mov
mov
dec
rorl
fwait
mov
sub
or
pop
andl
insb
inc
and
push
pop
push
lcall
ja
lods
dec
jg
sub
scas
loope
test
xchg
cs
movb
popa
insb
jp
jns
inc
rorl
cli
in
sbb
and
mov
cmpsl
cwtl
jno
or
jle
xchg
adc
mov
add
add
pop
sub
jle
movsb
pop
cltd
aam
pop
xor
out
rcll
mov
ds
fcoml
add
xchg
cmpsb
xchg
int
xchg
out
sbbb
testl
adc
or
add
in
je
push
std
leave
push
aam
or
ret
jnp
jno
lods
xchg
leave
cmp
nop
lods
jb
bound
sub
psubusb
pop
iret
fildll
mov
insb
std
mov
rolb
dec
push
add
pop
scas
out
popa
dec
push
xchg
inc
out
ret
fucomi
stc
mov
push
call
add
aad
pop
ljmp
jmp
out
dec
or
jp
sbb
inc
gs
jns
cmc
cmp
or
js
mov
aam
sbb
aaa
or
adc
lret
scas
out
mov
fincstp
scas
ja
lea
pop
int
test
and
sahf
push
push
and
int
jo
jge
repnz
push
push
add
fstpt
mov
int
imul
adc
out
xchg
in
rcl
xor
fidivrs
add
inc
or
stos
je
push
inc
jge
sar
mov
or
out
insl
pushf
mov
pop
test
mov
sub
js
ds
int
data16
cwtl
and
scas
xor
mov
pop
xlat
lds
call
xor
iret
loop
inc
inc
jl
sti
add
sub
outsl
or
xor
ffree
cs
rcll
jo
in
jnp
sahf
fwait
lahf
cwtl
loope
sub
mov
ret
cli
orl
leave
movsb
and
in
adc
push
sbb
jmp
mov
pop
pop
cmpsb
outsl
mov
jno
dec
fldcw
xchg
mov
aas
lock
xchg
in
repnz
or
sub
jmp
pop
enter
jne
es
or
mov
lret
pop
iret
add
jae
jno
dec
ds
sub
push
xchg
jge
fucomip
inc
xchg
and
test
iret
mov
addl
xor
notl
fiadds
pop
push
adcb
or
mov
leave
mov
jle
pushf
push
lods
add
jge
and
ret
mov
cmp
jl
test
daa
sbb
cmp
push
and
scas
xor
mov
int
push
outsb
jg
xchg
cwtl
out
je
nop
pop
movsl
and
aad
jne
loopne
sbb
inc
push
pop
mov
xchg
adc
lret
and
jo
dec
stos
mov
enter
stc
xchg
popf
xor
inc
mov
bound
sub
mov
push
rcll
mov
dec
push
loope
adc
aaa
fcmovu
loope
dec
jmp
or
scas
js
xor
popf
out
jne
sbb
and
inc
sbb
arpl
jp
xor
stos
push
dec
movsl
lret
push
add
test
fdivrl
fisttpll
dec
jbe
add
or
cs
pop
pop
xor
lcall
pop
push
push
lcall
lret
push
xor
mov
popf
jle
or
push
jo
out
fcompl
mov
mov
mov
ror
and
loopne
loop
mov
xchg
out
inc
pop
and
push
pop
push
stos
jo
xchg
jns
push
ja
lahf
je
pop
add
cmc
add
cmp
dec
inc
adc
out
icebp
xchg
sub
push
scas
lock
loopne
sti
push
fistps
lds
fdivrs
pop
shll
fmull
sbb
pop
jae
sti
sub
jg
inc
leave
movsb
call
push
cmp
sbb
test
test
inc
outsl
or
mov
cs
jnp
test
flds
arpl
js
rorl
jg
shufps
pop
js
adc
push
inc
jae
xor
mov
jbe
inc
das
movsb
push
movsl
sub
jae
jp
ds
inc
inc
dec
inc
xchg
stos
ljmp
cmp
sbb
data16
adc
mov
in
inc
add
leave
jge
adc
or
enter
adc
adc
test
cli
int
push
in
out
inc
push
mov
mov
ss
mov
ret
and
sbb
jns
inc
adc
mov
test
jns
int3
das
sub
dec
add
mov
movsb
dec
mov
fldt
xchg
mov
add
dec
fbstp
cli
sub
sbb
mov
sti
adcb
xchg
fnsave
ja
xor
dec
dec
mov
xchg
mov
cs
mov
cli
dec
xor
xor
ret
aaa
ret
pop
xor
mov
sbb
nop
push
fsubl
ss
aam
jb
dec
mov
stos
cmc
or
jbe
in
mov
adc
scas
aam
inc
dec
addr16
push
int
mov
stc
aad
push
jle
outsl
inc
repz
sub
bound
cld
sti
sub
mov
jae
sub
addr16
imull
imul
movsb
lea
repz
incl
int
and
pushf
mov
data16
push
mov
mov
clc
je
pop
push
hlt
out
sbb
lods
sarl
out
mov
addl
or
test
jb
xchg
sbb
pop
fidivl
mov
inc
xor
sbb
dec
add
mov
jmp
adc
mov
xchg
cltd
stc
mov
xchg
popl
sub
adc
movsb
xchg
mov
icebp
clc
inc
and
xor
data16
es
push
movsl
mov
xchg
nop
adc
dec
sbb
mov
pushf
mov
hlt
loopne
sub
imul
xchg
push
sbb
dec
andl
mov
pop
cmp
mov
jmp
nop
jmp
ja
xor
sub
rorb
pop
in
add
test
ss
jp
and
loop
std
pusha
out
ret
dec
stos
mov
cltd
adc
test
decb
sub
cmp
or
icebp
mov
dec
aam
sub
aam
test
sub
scas
jmp
mov
ret
push
fldcw
fs
in
pop
and
pop
adc
mov
inc
fcomip
mov
xchg
mov
mov
jmp
pop
andl
test
nop
xchg
xlat
mov
es
add
std
insb
cmp
mov
add
cmp
push
xor
mov
aaa
ss
mov
inc
and
xchg
dec
icebp
inc
pop
mov
lcall
jecxz
jecxz
dec
mov
pushf
ds
movsl
adc
repnz
mov
lods
xchg
jge
stc
clc
ret
repz
inc
cwtl
out
sahf
test
es
popl
aaa
dec
shl
xor
xchg
sub
push
clc
mov
out
cld
movb
aam
sarl
mov
mov
out
cmp
sub
push
pusha
or
arpl
xchg
mov
sbb
adc
xor
out
jl
dec
inc
mov
js
cmp
test
xchg
mov
movl
xchg
insb
push
dec
xchg
cmp
mov
inc
lods
or
push
cmc
mulb
mov
pop
add
ss
jb
adc
add
mov
ljmp
jnp
imul
pushf
sub
mov
jbe
je
dec
mov
sub
cli
sbb
xchg
fimuls
or
mov
push
or
insb
leave
and
daa
ret
sbb
push
mov
mov
mov
sbb
sbb
int
out
repnz
xor
mov
add
push
idivl
test
pushf
add
ret
sub
imul
or
mov
arpl
adc
or
sub
mov
add
lret
push
mov
or
sbb
out
mov
cltd
adc
insb
data16
ds
stc
arpl
mov
xchg
and
sbb
mov
pop
sahf
ds
sbbl
push
outsl
cmc
fnop
jo
jle
insb
xor
sbb
out
cltd
adc
aam
shlb
dec
jecxz
dec
fnstsw
ja
ss
add
daa
lods
fiadds
aad
addr16
fiaddl
adcl
sbb
mov
xor
add
jp
es
dec
addl
pop
or
fwait
jp
cmp
mov
push
and
jae
movsb
pop
inc
js
popf
mov
movsl
insb
jmp
or
and
mov
sti
mov
lret
cmp
sbb
inc
add
push
negl
mov
inc
pop
add
shll
fcomps
mov
ds
lahf
cmpb
adc
fidivl
mov
cltd
or
xchg
sub
jno
sti
mov
mov
rolb
pop
lret
in
fs
jb
xor
sbb
loop
cs
aad
js
outsb
sbb
ret
js
notl
repz
fcoms
xchg
ja
mov
dec
shlb
je
or
mov
sti
stc
int3
add
mov
adc
xchg
jne
imul
imul
ljmp
outsl
jmp
xlat
fistpl
popa
test
sbb
outsl
mov
js
addr16
das
lret
jp
stos
dec
cmp
lods
add
mov
in
mov
sub
std
ret
call
out
das
fcmovnbe
pop
je
cmpsb
popf
mov
push
into
fwait
adc
pop
dec
push
push
aas
xchg
or
mov
ljmp
mov
testl
cwtl
lock
mov
leave
pop
stos
scas
das
or
add
mov
mov
xorl
aas
inc
push
dec
inc
push
mov
cmp
add
pop
ja
fsts
fcompl
xchg
ja
outsl
test
aam
mov
adc
pop
test
push
cmpsb
out
add
adc
mov
sbb
add
xchg
sub
lods
mov
cli
fsts
cmp
xchg
seta
lret
stc
aaa
add
inc
in
int3
mov
iret
mov
cli
fcomps
pop
push
mov
out
adc
add
mov
fimull
cmp
gs
rolb
dec
cmp
in
mov
mov
jg
in
sti
shl
das
clc
sub
shlb
push
mov
dec
dec
imulb
adc
mov
hlt
inc
add
lea
in
leave
mov
sbb
add
loop
dec
sbb
fwait
je
push
mov
je
movsl
add
arpl
push
dec
cmp
xor
loopne
fld
jl
fisubrs
jecxz
test
pop
inc
aam
adc
jge
push
repz
mov
loop
movsl
outsb
xor
lahf
ffree
popa
jmp
int
nop
cli
add
pop
icebp
outsb
pop
mov
outsb
scas
ret
loope
movsb
pop
mov
roll
push
and
ljmp
xor
hlt
mov
fldcw
pop
pushf
lcall
pop
decl
out
jge
pop
dec
inc
dec
enter
repnz
jns
pop
fistps
xor
rclb
sar
jne
lcall
or
cmp
int
push
jmp
mov
hlt
sbb
jno
push
clc
pop
and
aas
dec
push
outsb
cmc
cmp
sub
lods
int
jl
rorl
out
inc
insb
push
out
arpl
mov
pop
push
ljmp
jge
xlat
mov
ret
pop
mov
xchg
shr
jo
and
aaa
loop
shll
arpl
or
mov
xchg
sub
dec
ret
sub
mov
sbb
mov
ret
movl
pop
lahf
fistl
cmp
and
leave
add
xorl
mov
or
pusha
lcall
mov
push
and
and
mov
xchg
dec
xchg
cmp
add
inc
jae
outsl
mov
stos
push
mov
popl
xlat
cmp
pop
imulb
mull
dec
popa
orb
add
call
int
mov
sub
dec
les
stos
mov
test
dec
sbb
and
test
cmpb
fadd
push
neg
mov
add
sbb
push
fildll
xor
aam
in
xor
dec
imul
fistl
inc
out
aam
test
dec
cmp
add
arpl
mov
xchg
push
xor
xor
rcr
sbb
bound
pop
je
add
fsts
fcmove
je
mov
incl
jle
shrl
sbb
push
in
mov
mov
push
adc
outsb
nop
push
push
bnd
push
add
xchg
xlat
inc
adc
mov
or
jl
add
rolb
rolb
sahf
lods
lods
pop
xor
mov
push
sub
add
mov
cmp
loop
fsubrp
mov
ret
or
shl
push
push
mov
sbb
sub
mov
shl
push
inc
mov
xor
push
xchg
mov
or
xor
inc
lods
xor
adc
inc
nop
loopne
sti
cmp
or
loopw
dec
xchg
mov
jge
mulb
jo
xor
pop
jns
insl
jge
jp
rcll
push
pop
or
jg
sbb
mov
jp
mov
mov
sbb
subb
mov
and
cmpsb
fisubrl
call
add
sub
loope
adc
or
push
notl
nop
cmp
addb
rcrb
mov
mov
cmp
xchg
rolb
movsl
aad
push
test
mov
lcall
cmpsb
jle
std
sahf
or
push
std
xchg
sarb
movsl
xlat
dec
ja
in
ret
jb
aad
dec
jne
stos
add
aam
push
add
sub
jg
dec
push
xor
cwtl
int
pusha
add
add
pop
inc
lahf
mov
pushf
add
scas
orb
inc
cmp
xchg
jp
jecxz
cmp
inc
push
aad
xchg
push
jle
stos
inc
pop
sbb
out
cs
scas
cmp
inc
xor
xchg
insb
out
add
jo
bound
repnz
mov
xchg
add
inc
pop
insb
jo
movsb
dec
rorb
adc
add
mov
jge
dec
add
cmpb
inc
fnstcw
in
bound
dec
push
sti
xchg
mov
push
push
xchg
daa
out
sbb
mov
out
xchg
cld
or
movsb
lds
dec
add
mov
cmp
jb
repnz
fwait
adcb
leave
or
clc
jmp
adc
iret
dec
pop
xor
xor
stos
jg
pop
or
adc
dec
sti
and
sahf
js
and
cmpsb
adc
sub
mov
mov
push
push
scas
jae
dec
setbe
aam
lock
clc
push
lcall
mov
sbb
jno
push
sahf
pop
pop
das
imul
lcall
out
mov
xchg
insl
lret
and
pusha
adc
int
outsl
stos
jae
fidivrs
aad
and
daa
mov
into
fpatan
mov
pop
jns
and
fisttps
mov
mov
nop
imul
push
dec
pop
mov
cmpsb
daa
xchg
sub
bound
dec
sub
pop
out
sbb
out
xchg
sahf
out
mov
addr16
and
sub
fcoml
cli
pop
adcb
dec
pushf
dec
es
rcrl
mov
inc
xchg
ficoms
xchg
js
aam
mov
nop
adc
call
push
addb
fcoml
ljmp
dec
push
out
cmp
mov
aas
std
arpl
dec
cmp
cli
cmp
test
movsb
hlt
filds
cs
in
repnz
or
fisubs
test
mov
jns
push
cmpsb
dec
lods
lahf
out
jecxz
mov
std
js
pushf
jge
and
inc
adc
fwait
mov
pushf
inc
in
push
xor
add
cmp
jp
mov
scas
dec
out
jnp
outsl
pop
or
fwait
xor
test
and
xchg
int3
shlb
or
js
aad
addr16
jg
xchg
ja
xchg
add
das
dec
outsl
add
je
fs
frstor
lods
pop
cmc
mov
cmpb
inc
fucompp
in
xchg
out
test
clc
cmpsb
insb
mov
je
sub
sub
inc
xlat
aam
sarl
jmp
or
xor
gs
pop
fsts
sti
mov
cmp
add
pop
movsl
in
xchg
inc
push
rolb
or
pushf
xor
push
xchg
dec
adc
ret
out
cli
aaa
add
lret
in
nop
orb
xor
push
jb
adc
insb
shll
push
add
popf
or
jb
outsl
das
xchg
les
daa
push
mull
jmp
adc
or
mov
push
les
inc
lcall
arpl
add
and
jg
push
and
add
loop
jno
lret
rep
hlt
stos
jbe
into
adc
push
popa
aam
mov
testb
arpl
pop
sbbb
cmp
not
bound
cmpl
fnsave
dec
pop
jb
vunpcklpd
jecxz
xchg
outsb
sub
jne
outsb
fwait
pop
jge
gs
imul
sahf
push
lods
mov
iret
test
xlat
xchg
fdivp
pop
data16
ret
call
or
sbb
in
jno
push
dec
push
imul
mov
adc
cmpl
mov
hlt
outsb
daa
cmp
sub
sbb
xor
add
and
add
or
pushf
xchg
rol
rolb
jbe
sub
mov
insl
mov
add
pop
xlat
sub
rcll
cmp
outsl
and
mov
movsb
sbb
fwait
mov
sarl
lret
scas
nop
into
inc
xchg
ds
fldenv
nop
sbb
lret
shrb
nop
pop
loop
pop
ja
pop
pop
fisubrs
xchg
std
mov
in
lods
sbb
or
hlt
pop
sub
mov
in
mov
pop
fnstenv
push
inc
cltd
mov
imull
lret
in
jg
fld1
add
push
or
sub
sub
js
mov
push
fdivrl
mov
xchg
fadds
or
sub
nop
mov
mulb
xchg
jge
icebp
dec
aas
lahf
stc
in
jmp
and
xor
mov
orb
orl
in
mov
enter
int3
insl
iret
movsb
cwtl
jl
enter
adc
inc
and
push
les
popa
lods
addr16
lock
and
xchg
test
xlat
push
movsb
xchg
outsl
pop
shl
add
aas
pop
inc
add
dec
mov
arpl
cmp
psubw
lods
mov
and
sbb
into
scas
pop
inc
adc
fcmovne
roll
clc
xor
imul
inc
jl
xchg
cmpsb
dec
lods
cmpsl
add
sbb
loopne
or
and
mov
cmp
jl
test
push
dec
sub
inc
xchg
jp
cmp
or
add
jge
add
jecxz
hlt
in
mov
aas
mov
fs
or
sub
lods
dec
mov
xchg
cmp
out
jbe
mov
add
cmpsl
fidivrs
cmp
mov
xchg
cmpsl
fdivrs
fnclex
hlt
hlt
rcr
xchg
in
sti
jo
cmp
xchg
xchg
lcall
and
fstpt
mov
aas
sub
out
repnz
scas
xchg
jge
or
stc
test
in
or
xchg
in
out
aaa
cmp
pushf
fnstcw
lds
push
push
xor
pop
push
adc
pushf
ljmp
bnd
mov
std
addr16
shr
and
xlat
and
pop
mov
outsb
out
or
fisubs
inc
rorl
in
xchg
adc
clc
ret
pop
inc
cmpsl
ret
xchg
xchg
sahf
sbb
rcll
ds
dec
xor
insl
jmp
lcall
gs
push
xchg
rcll
mov
fildl
and
dec
and
bound
xlat
jg
push
push
pop
jp
pop
dec
xchg
mov
mov
mov
push
xor
fsts
cld
jle
dec
adc
shlb
dec
fcomp
movsl
ljmp
mov
jae
mov
cmpb
outsl
inc
lcall
leave
and
dec
jg
jne
push
repz
rcrb
jno
jns
push
stos
xorl
incb
sahf
inc
inc
dec
or
dec
mov
pop
adc
push
xadd
stos
xchg
ja
jne
sub
xlat
gs
loopne
dec
fmul
ror
mov
inc
push
sub
call
lods
hlt
mov
pop
stc
jb
and
xchg
adc
jae
xor
out
idiv
and
ljmp
lock
sub
xor
int3
mov
mov
aad
fcomip
inc
xchg
subb
mov
stos
sbb
ds
outsl
pop
movsb
mov
ja
cmpsl
je
add
sub
add
sub
fwait
add
sub
insb
xor
mov
dec
insb
lds
rolb
mov
push
cmpsl
jge
jp
rolb
mov
fcomps
inc
adc
cmpsl
and
xlat
adc
lcall
push
jp
push
jbe
push
rcll
stc
sbb
test
add
arpl
add
testl
fcmove
mulb
sub
dec
repz
loopne
fistl
stos
cmp
jmp
gs
neg
mov
pop
inc
and
out
lea
xor
push
cwtl
sub
and
adc
in
xor
dec
mov
sbb
hlt
scas
cmpb
jno
fwait
lret
xlat
andl
push
leave
enter
add
insl
dec
movsl
rol
dec
cmp
pop
add
mov
aad
mov
jne
push
into
cmc
xchg
mov
fucomp
imul
nop
xchg
inc
xchg
jmp
jne
sub
fdivrs
jmp
pop
fdivrs
jnp
test
imul
decb
inc
mov
cmpsl
sti
jnp
jno
ret
arpl
inc
aad
pop
ss
cmpsb
xor
push
mov
scas
scas
rcr
es
push
lds
jmp
ljmp
mov
xchg
dec
pop
adc
aam
cs
and
mov
cmpsl
stos
add
repz
sbb
jge
rcrl
andl
inc
push
lcall
mov
xchg
xor
frstor
jns
hlt
mov
fstpl
cld
inc
lds
dec
or
fisubl
or
jne
fistpl
mov
add
out
jno
mul
mov
jns
adc
or
dec
jge
movb
dec
repz
fdivp
cs
clc
mov
out
cli
subb
push
and
lahf
shlb
js
cs
cmp
cmp
dec
aas
cmp
scas
xor
imul
popa
xchg
xchg
xchg
in
enter
pop
lock
cltd
aas
xor
mov
xchg
lret
pop
mov
popa
arpl
mov
outsb
mov
out
xchg
jge
mov
sbb
fwait
mov
xchg
movsl
xchg
jb,pt
adc
xchg
fistps
sahf
lods
out
dec
insb
fcmovu
and
mov
sar
sub
add
adc
cmp
outsl
cmp
hlt
shrb
jb
nop
adcb
push
sub
aas
jl
xchg
repnz
push
scas
jmp
sarb
xchg
inc
or
lcall
sub
xchg
push
xchg
arpl
or
and
fucomi
enter
test
shll
ret
sub
fs
mov
cld
in
mov
adc
ror
sbb
imul
push
es
in
xchg
fsqrt
dec
jno
mov
addr16
inc
in
jecxz
mov
fucomip
loop
sub
adcb
outsb
push
or
fimuls
dec
hlt
pop
daa
gs
xor
lds
stos
xchg
jle
dec
mov
jg
mov
js
aaa
lds
xor
pop
outsb
pop
lea
ret
fidivs
mov
or
pop
adc
sbbl
or
add
push
adc
cmp
insb
mulb
push
mov
or
xlat
enter
jge
sub
add
outsl
xchg
or
xchg
add
outsb
sub
xlat
dec
pop
xchg
fcomps
xor
mov
fldl2e
inc
mov
outsb
iret
mov
xchg
mov
mov
mov
in
arpl
sub
out
inc
dec
dec
jp
xchg
mov
mov
call
mov
add
mov
adc
adc
les
shrl
cs
xor
xor
mov
in
push
sub
and
xchg
out
bound
cs
cwtl
js
enter
loopne
clc
push
notb
sahf
xor
adc
fcmovnb
push
or
jmp
je
jl
xchg
dec
inc
in
and
je
or
movsb
inc
ljmp
cmp
cmp
test
dec
cmp
sub
cs
add
pop
xchg
xor
xor
inc
dec
enter
cmpsb
pop
jl
xchg
or
pop
push
std
dec
jge
psadbw
jg
pop
popa
fisubl
test
popa
ret
shrl
mov
lock
and
push
lea
hlt
test
loope
sub
movsl
inc
sbb
cs
scas
mov
outsl
pop
fistpl
in
or
stc
dec
jae
push
jo
insb
jmp
dec
cmc
idiv
push
dec
adc
popa
mov
pop
mov
fiaddl
fs
fcompl
mov
push
jl
dec
jno
mov
pop
add
cwtl
inc
lds
push
std
popf
xlat
push
mov
inc
mov
fs
sti
in
inc
mov
loope
mov
inc
into
jmp
xor
xchg
scas
jmp
push
pusha
jnp
add
aaa
movsb
lea
add
out
call
push
stos
scas
iret
sbb
xor
into
or
sbbb
into
inc
fildl
arpl
jnp
push
rdpmc
inc
adc
xchg
xor
enter
mov
nop
mov
and
fnsave
xlat
je
or
inc
cltd
loope
out
mov
ret
mov
cs
pop
adc
pop
add
xor
aaa
mov
cmp
insb
push
sub
scas
fidivrl
mov
notl
jb
rolb
push
cltd
sbbb
jno
xchg
jnp
push
subb
mov
in
inc
aas
lahf
in
mov
sbb
roll
or
ja
mov
movsb
cmp
cmp
int
adc
mov
pop
mov
mov
mov
and
pop
jle
xchg
jo
fstl
push
xchg
fistpll
ljmp
cli
sub
loopne
pop
dec
fwait
jbe
jno
mov
lahf
inc
imul
mov
pop
jmp
fprem1
lcall
gs
imul
lods
jb
idivb
xchg
push
cmp
mov
push
ljmp
mov
mov
push
sbb
das
mov
pop
aad
jnp
xor
sbb
daa
jmp
js
sbb
jmp
dec
popf
pushf
clc
int3
jecxz
mov
fisttps
or
dec
cli
or
movsb
pushfw
cmpsl
jecxz
sub
imul
add
sub
push
hlt
mov
dec
lock
push
cmp
xchg
into
dec
cli
cld
pop
cmp
mov
and
sbb
aam
test
xchg
add
cld
adc
cmp
pop
mov
cmpsb
nop
mov
pop
mov
inc
and
jmp
stc
aaa
lahf
dec
cli
mov
xchg
and
sub
les
clc
and
lcall
add
movsb
aas
out
xchg
js
dec
std
xor
and
sbbb
mov
std
jo
pusha
and
fcmovnbe
jno
lahf
dec
loope
int
xchg
sbb
loope
mov
mov
scas
sbb
pop
mov
ret
and
sbb
int
jmp
adc
mov
pop
fimuls
test
adc
shll
dec
cld
cli
jnp
sbb
adc
aad
pop
jb
jo
mov
lds
mov
aaa
or
jo
inc
cmp
xchg
aam
hlt
aaa
and
xor
mov
sub
adc
sbb
jge
pop
scas
nop
push
das
jle
pop
or
pop
mov
nop
hlt
xchg
lahf
pop
sahf
sti
sub
jbe
fwait
dec
mov
fwait
sbb
icebp
and
add
fisttps
adc
lods
imul
inc
cmc
mov
fistps
std
mov
insb
mov
cwtl
inc
adc
inc
mov
adc
lock
cmpl
mov
test
jle
jg
adc
cmpsb
lea
stos
into
out
push
push
inc
ret
xchg
ja
rcl
cld
dec
push
dec
jp
cli
imul
xor
cmp
or
andb
fcomps
add
dec
inc
scas
push
push
out
add
pop
xchg
loop
in
scas
imul
leave
aam
cmpsl
fldl
out
filds
push
adc
fwait
notl
mov
and
scas
jns
or
pop
and
cmp
push
into
jne,pn
enter
mov
stc
call
aam
dec
mov
jnp
pop
dec
stos
and
xorb
inc
cs
or
ljmp
and
seta
cli
cmp
or
movsl
insb
enter
arpl
sub
shrb
xchg
orb
test
push
jmp
mov
mov
rorl
fwait
cltd
cli
imul
popl
imul
xchg
cli
xor
jne
mov
je
mov
pop
push
lret
mov
lods
in
mov
sbb
mov
jno
pushl
cmp
push
sub
aas
test
or
mov
nop
bound
mov
scas
jb
cmpl
rol
sbb
push
or
enter
je
mov
jnp
mov
arpl
sbb
inc
outsl
int3
pop
xor
xlat
popa
mov
lods
or
sbb
movsl
mov
jne
imul
in
mov
lds
dec
nop
bound
adc
sbb
loope
mov
add
mov
addl
mov
lock
jo
jb
mul
std
out
add
add
mov
mov
sub
loop
sub
ficoml
push
aam
mov
scas
leave
inc
push
mov
mov
fisubl
push
outsl
std
popf
sub
popa
enter
cmpsl
out
inc
fs
call
adc
jno
pusha
loopne
cmp
dec
xor
ficomps
adc
or
and
add
push
push
in
or
pushf
cld
jne
dec
or
pop
cs
notb
js
shlb
xchg
pop
leave
xor
adc
xor
loope
adc
lret
sub
or
mov
clc
mov
outsl
xor
pop
cvtpi2ps
jno
dec
mov
std
fstpl
jns
sbb
movsl
xor
push
js
jmp
stos
cmp
and
and
mov
adc
xchg
push
jmp
pushf
xor
fs
sub
sub
sbbl
mov
scas
xchg
sbb
jecxz
xor
pop
in
mov
popa
insl
mov
xchg
bnd
loope
cmc
push
sti
pushf
push
idiv
cwtl
xchg
sbb
bound
popaw
repz
mov
push
mov
dec
pop
out
out
rorl
cmp
jno
call
mov
cltd
cmp
iret
mov
pop
lods
dec
jmp
leave
in
push
popa
mov
xlat
loopne
not
or
bound
push
pop
clc
jle
xchg
cmp
push
pushf
addr16
cmp
add
push
pop
pop
add
dec
inc
pop
cmpb
ja
jmp
movsl
sbb
inc
jne
jae
stc
test
icebp
mov
dec
or
shll
enter
jo
mov
pushf
jo
rcr
bound
adc
movsb
sbbb
loop
movsb
mov
jae
push
pop
and
out
cmp
or
sarb
xchg
gs
mov
inc
mov
sub
je
and
add
lcall
test
mov
sub
sub
leave
vcvtpd2psy
cld
mov
sti
mov
adc
shll
mov
adc
mov
bound
aas
addb
popa
clc
mov
sbb
aaa
mov
rclb
aad
leave
sub
pop
daa
stos
cmp
in
mov
lods
xchg
inc
negb
mov
inc
loope
std
fdivrl
xlat
lea
mov
sub
adc
xchg
rolb
cmp
in
jo
adc
loop
push
movsl
loope
test
and
add
sbb
popa
xor
call
ljmp
and
xor
idivb
cmp
popa
sub
das
xor
push
mov
xchg
cmpb
adc
fwait
jle
jnp
mov
add
insl
hlt
cli
int
adc
repz
loopne
stos
test
fsubl
jmp
jns
daa
mov
pop
lahf
lcall
enter
mov
and
sbbl
lods
insl
dec
xor
jo
sar
cld
sbb
xor
lret
in
adc
mov
fisubs
aaa
mov
push
dec
lds
icebp
dec
xchg
jo
xchg
call
aaa
das
aaa
push
rcll
imul
std
lods
ss
jg
push
mov
add
adc
xchg
das
dec
popf
fsqrt
fsubrs
xchg
sbb
xor
xchg
out
test
pop
pop
popa
add
enter
sub
pop
inc
cmpsl
lcall
jno
pop
mov
mov
pop
push
lods
and
popf
mov
iret
mov
sbb
clc
xchg
push
aad
adc
jge
mov
lea
movsb
scas
sbb
out
popa
add
sbb
test
adc
jecxz
data16
mov
add
imul
outsb
out
push
adc
sbb
mov
cmp
lea
lds
into
in
pop
jo
gs
mov
movsb
ds
out
inc
sub
jo
xchg
in
inc
add
mov
cmp
mov
jle
inc
dec
addr16
push
mov
pop
jp
les
es
push
mov
mul
dec
scas
mov
adc
leave
jp
cwtl
jecxz
sub
ret
jle
push
ret
mov
push
mov
lahf
ret
popf
clc
pop
ret
icebp
lcall
dec
sub
gs
inc
movsl
xor
es
mov
fcoms
fs
aad
gs
push
call
andb
shrl
cltd
rcrb
jmp
into
sbb
test
es
mov
xchg
dec
and
aaa
push
sub
ss
pop
inc
mov
jo
jnp
xchg
mov
push
xchg
mov
lods
mulb
in
mov
inc
fs
scas
outsl
dec
out
loop
test
call
jle
mov
rcr
int
fucomi
mov
shlb
dec
cmpsl
jg
add
mov
lret
push
repnz
add
cmc
or
and
sahf
sub
xchg
adc
xchg
mov
stos
mov
ret
jecxz
out
cld
int3
ljmp
or
fldenv
sub
je
pushf
mov
jb
adc
or
lds
cmp
jmp
sbb
jae,pn
popa
leave
add
scas
xchg
mov
xchg
cmp
lret
adc
mov
or
push
fs
pop
add
xor
scas
mov
add
push
fs
and
test
dec
bound
pop
aaa
mov
xchg
ja
xchg
je
outsl
cmpsl
push
inc
mov
xchg
mov
cltd
and
test
lahf
inc
rcl
nop
cmp
cmp
jmp
xor
ljmp
pushl
jo
xchg
push
and
pop
xchg
out
ds
int3
or
mov
fmulp
dec
int
outsb
fisubs
movsb
out
mov
push
mov
roll
bound
mov
cmpsb
std
sbb
inc
and
push
clc
adc
push
mov
xor
cltd
sti
popa
mov
stos
and
or
out
rcll
jg
adc
aaa
repnz
in
inc
sub
jmp
jbe
fistpll
push
lods
dec
dec
mov
and
dec
mov
mov
jb
fstl
xor
xlat
test
sub
and
xchg
xor
sbb
mov
dec
xor
addl
int
out
or
push
into
pop
movsl
xchg
int3
mov
js
mov
mov
popa
mov
repz
jo
xlat
cmp
int
xchg
popf
shll
enter
outsl
and
icebp
mov
sbb
push
mov
mov
xor
in
mov
cwtl
jne
cld
dec
push
enter
adc
cmp
push
and
jnp
mov
adc
xchg
aas
adcb
jp
test
jnp
scas
imul
into
jae
mov
movsl
lods
push
mov
mov
scas
mov
out
mov
cmc
mov
arpl
movsb
das
in
sub
mov
push
jmp
fmulp
fnstenv
test
or
subl
sti
and
iret
sbb
clc
xor
fwait
inc
inc
ljmp
pop
sub
leave
in
ja
cltd
sbb
cwtl
jle
xor
mul
mov
push
out
xchg
dec
add
popf
xchg
jmp
adc
movsl
push
cmpsl
stc
adc
in
mov
sub
sub
ja
sahf
jle
cmp
pusha
xlat
add
dec
cmc
jbe
push
jge
adc
xchg
xchg
mov
adc
enter
movsl
cmp
movsb
mov
jnp
out
cmc
lret
lods
bound
aad
ret
mov
pop
mov
jne
andb
mov
pop
or
ds
into
rolb
shlb
bound
mov
fiaddl
cli
mov
je,pt
add
sbb
pop
mov
adc
test
movsl
nop
insl
xchg
fsubs
loope
add
in
and
xor
jo
es
fwait
pop
fsubl
je
stos
pop
int
mov
inc
test
add
ror
movsl
cmpsb
cmpsl
sub
fdivr
fists
mov
pushf
sub
insb
lods
lods
sub
sbb
sub
mov
ljmp
jle
push
loopne
cwtl
repz
fisttpl
lret
mov
cld
adc
fldt
add
lcall
mov
filds
int3
adc
mov
pusha
arpl
aaa
sub
addb
jge
pusha
ret
js
mov
in
in
fimull
imul
push
sti
es
and
fists
jnp
dec
lods
std
inc
fists
mov
inc
push
pop
xor
int3
xor
xlat
testb
sbb
sub
cmp
mov
pop
cmc
sbb
int3
aaa
cmp
pop
fidivrl
pop
jg
mov
xchg
negl
mov
inc
shlb
add
test
scas
jmp
xchg
jl
jns
or
jecxz
jb
mov
adc
in
dec
cmp
dec
jp
daa
pushf
xchg
sbb
stos
jp
out
daa
es
scas
mov
cmpsl
icebp
loopne
cmp
sub
int3
movb
and
or
adc
lret
cmp
inc
insb
in
sahf
movsl
push
inc
cli
into
aas
xor
push
and
repnz
aaa
scas
es
loopne
jo
inc
shlb
rcrl
sub
daa
mov
lcall
xor
enter
sub
xor
dec
and
das
cmp
sbb
lret
dec
adc
mov
testb
outsl
pop
stc
or
mov
xchg
mov
mov
xor
xor
add
iret
in
push
imul
push
in
das
dec
loope
pop
dec
daa
jno
mov
mov
and
jmp
jo
dec
adc
adc
lret
jle
js
aam
or
test
or
insb
xor
cld
push
push
movsl
repz
cmpsb
sbb
sahf
fucomip
jnp
xor
arpl
sub
ljmp
hlt
iret
pop
in
cmp
mov
std
xchg
mov
add
and
ljmp
xlat
jns
ja
sub
dec
dec
insb
or
xor
fildll
repz
push
inc
dec
mov
cmp
stc
sub
call
test
cmp
insl
jbe
mov
lret
push
add
push
xchg
ret
jno
addl
in
dec
adc
fadds
shll
jae
sbb
loopne
inc
add
adc
push
xlat
pop
xchg
add
loope
jne
and
push
cmp
inc
loopne
jbe
xchg
leave
les
sub
sbb
add
insl
or
jl
sbb
xchg
iret
add
lods
inc
cmp
imul
loope
sbb
jbe
insb
pop
xor
ljmp
fcoms
cmp
daa
scas
push
je
or
je
sarb
mov
adc
dec
insl
jle
cltd
shll
sub
movsl
stos
mov
pop
ljmp
xchg
xor
dec
dec
pop
nop
sbb
aas
lret
dec
inc
arpl
and
add
and
int
loop
ljmp
addr16
shrb
outsb
loope,pt
subl
in
adc
mov
roll
lret
push
test
popf
and
repnz
sub
mull
xor
pop
ja
add
test
mov
xchg
xchg
mov
or
xor
mov
jg
push
cmpsb
xchg
mov
mov
hlt
mov
pop
int3
xchg
sub
inc
xchg
xchg
iret
leave
mov
repnz
cmpsl
push
iret
test
adc
arpl
nop
rcll
mov
adc
ret
lcall
icebp
dec
sahf
mov
inc
mov
xor
mov
pop
and
mov
jo
lret
xchg
xchg
pop
pmaddwd
jecxz
cmpsl
ret
fistl
notl
fdivrl
mov
rcr
cli
push
pop
mov
cmpsb
jae
push
mov
lock
add
cmpsb
repnz
jae
aad
inc
and
mov
mov
jle
mov
rorb
jae
inc
in
mov
pop
mov
out
les
std
mov
movl
mov
xchg
dec
testb
faddp
cld
nop
movsl
sbb
movsl
lret
mov
mov
jp
add
jbe
repz
pop
dec
xchg
jae
or
inc
pop
push
mov
cmp
dec
push
or
div
xorb
out
mov
mov
cwtl
or
dec
cld
mov
lock
xchg
insl
je
imulb
mov
sahf
sbb
pop
js
pushf
icebp
scas
jg
mov
xor
test
scas
fdiv
lret
insl
js
jl
ja
dec
pop
mov
bound
inc
inc
jp
mov
adc
adc
out
push
out
fistl
lret
shll
sbb
and
imul
pop
sarl
rol
hlt
jns
insl
inc
cmpsl
pop
cmp
push
es
cmp
mov
and
ja
leave
jmp
cmp
ret
sub
jecxz
jle
jne
jmp
jnp
fdivr
push
mov
jmp
fnstcw
sarl
pop
inc
and
push
test
inc
pop
ljmp
jb
insl
out
cld
lds
or
mov
fmull
lds
sbb
aaa
test
inc
xor
sbb
push
dec
pop
cld
xlat
jo
inc
pusha
sar
mov
pushf
jg
mov
mov
add
cld
push
inc
dec
jbe
shrl
sarb
xchg
inc
mov
pop
xor
mov
jo
test
xchg
jle
pop
fisubl
ds
add
in
fmull
lds
pop
rcr
jle
daa
mov
jl
out
imul
lahf
or
fucomi
cld
mov
and
push
cmp
mov
mov
and
or
stos
dec
pop
cs
insb
push
add
push
cld
cmp
xchg
ljmp
fdivl
movb
insl
jl
inc
push
xchg
ror
and
popa
out
imul
ljmp
sbb
xor
sub
ss
push
jno
xchg
or
mov
ljmp
xchg
inc
jo
jnp
int3
push
outsb
das
dec
mov
sbbb
cld
test
iret
int
clc
test
in
mov
mov
lds
push
jb
and
sbb
pop
xor
dec
mov
scas
adc
mov
mov
insb
loope
lods
fs
inc
sub
insb
push
mov
pusha
sbb
decl
or
mov
cwtl
imul
mov
add
inc
fildll
push
fs
repz
pop
sbb
push
aaa
or
lcall
shl
in
aas
imul
inc
lcall
call
add
adc
and
mov
ljmp
aad
and
iret
pmulhw
cmp
sub
sbb
jle
pop
stos
dec
mov
pop
sub
lods
inc
pop
jnp
push
sub
movsb
lock
mov
jns
aas
xchg
aaa
dec
sbb
aas
pop
or
and
pop
mov
dec
lea
xchg
fs
xchg
enter
out
mov
mov
xchg
lcall
shl
mov
xchg
fistpl
mov
pop
cwtl
sub
sbb
sahf
dec
mov
jg
push
xor
adc
mov
mov
jp
loopne
mov
xchg
outsb
jne
daa
xchg
pop
xchg
addr16
es
inc
ja
push
sub
fimull
xchg
repnz
es
or
cmc
xchg
mov
mov
aam
out
adc
shl
shrl
lret
lock
je
fnstsw
lahf
mov
outsl
jns
push
fidivrs
pop
iret
test
mov
out
dec
sbb
push
orl
adc
xchg
hlt
jne
jne
sub
mov
or
push
pop
ljmp
ja
enter
inc
pop
lahf
cmp
push
mov
cwtl
jb
xor
cli
lcall
out
mov
lods
mov
dec
xor
jl
push
adc
pusha
xor
out
ret
pop
dec
and
or
add
jp
pop
inc
mov
xchg
or
mov
mov
push
inc
inc
jge
fcmovnb
xlat
adcb
jle
xchg
jp
jns
pop
add
lock
inc
xchg
or
inc
js
cltd
add
xor
pop
cmp
dec
scas
add
cmc
shr
and
aad
cwtl
and
xchg
ja
dec
xchg
pop
lahf
enter
inc
fbstp
push
pop
cs
lods
aas
cmp
push
pop
cmp
xchg
mov
rcrl
out
enter
scas
sahf
jle
xchg
jecxz
aad
fdivl
fwait
repnz
pop
lods
push
jg
cmc
in
jne
pop
cmpsb
sub
sahf
subb
es
mov
pusha
jb
xor
out
loope
cmp
xchg
mov
cwtl
testl
dec
add
and
or
mov
add
pusha
sbbl
scas
shl
mov
pop
xor
sbb
mov
es
push
mov
clc
add
data16
dec
lock
jnp
jnp
repz
mov
daa
cld
cmpsl
dec
lock
ret
jecxz
pop
les
fisttpll
sub
bound
pop
sti
cli
pop
bound
xchg
mov
mov
jmp
jg
adc
jb
int
int3
mov
pop
mov
or
inc
inc
scas
in
dec
addl
enter
ret
daa
dec
fdiv
sub
lods
mov
test
xor
popa
mov
sbb
imul
xchg
mov
pop
out
mov
sbb
mov
inc
dec
ret
js
or
mov
xor
xchg
divb
adc
sbbb
out
push
orb
and
sbb
xor
xor
add
fwait
mov
xchg
and
mov
adc
add
mov
les
push
pop
das
cmp
ret
and
shlb
sub
fwait
xor
aas
push
int
or
xor
mov
xor
leave
jno
stc
test
cmp
xchg
mov
push
iret
xor
daa
jae
mov
xor
stos
adc
fadd
sahf
jnp
mov
xchg
insl
pop
aaa
cltd
in
in
xchg
sbb
notb
xchg
jae
mov
mov
int3
lret
and
xor
in
sub
scas
pavgw
test
into
stc
repz
mov
adc
lock
mov
lods
int3
lods
cmp
js
aas
jne
jmp
std
cld
mov
sbb
mov
ret
dec
dec
movl
ret
cmp
rol
sbb
push
sub
ds
or
and
xchg
lods
push
xor
cli
mov
jbe
add
movsl
xchg
sti
adc
andl
sub
add
mov
nop
adc
addr16
push
call
je
or
mov
ds
ljmp
mov
or
xor
clc
test
mov
xor
mov
addl
adc
pop
nop
xor
aaa
mov
push
jnp
aam
or
push
inc
sub
jecxz
or
ds
sbb
jb
in
es
pop
imul
out
xchg
mov
dec
adc
fdivrp
pusha
mov
mov
mov
xor
cmc
test
cwtl
mov
mov
scas
sbb
lea
shrl
pushf
loop
and
ja
sbb
sub
sahf
sub
push
cwtl
adc
mov
xor
jo
ds
lds
mov
mov
enter
push
push
cmp
xorl
mov
fadd
fld
imul
mov
hlt
mov
mov
mov
push
stc
jg
jo
cmc
enter
popf
xchg
adc
je
pop
insb
test
jo
mov
fistl
push
jmp
ljmp
negb
out
aam
out
or
jle
rcrb
push
imul
push
or
jo
repnz
gs
ljmp
mov
dec
jmp
js
jecxz
ret
or
fcoml
pop
push
cld
sbb
push
int3
bound
mov
pop
adc
sub
loopne
cmovl
stos
lahf
xor
stc
insl
daa
cltd
shl
das
repz
mov
inc
fs
movsb
or
sti
mov
cmp
fwait
test
adc
jns
inc
out
lock
dec
add
jno
out
mov
sbb
aad
decb
jg
loope
out
push
lahf
es
xchg
xchg
adc
mov
insl
std
pop
fdivl
outsb
add
test
pop
push
xchg
mov
popa
arpl
jns
or
insb
dec
in
pop
lds
pop
popl
cmp
xchg
pop
outsb
call
test
jo
icebp
cmp
fcmove
sbb
imul
mov
sub
out
dec
cmp
bound
ja
dec
into
mov
cltd
aaa
push
insl
pop
or
jg
mov
mov
loopne
add
scas
bound
subl
xchg
fistpll
sub
inc
ret
cltd
push
xchg
test
xchg
stos
pushf
push
or
jl
int3
orb
inc
add
in
sub
inc
insb
lcall
and
inc
fdiv
call
pop
inc
cmpsl
push
mov
outsl
xchg
sub
mov
roll
jbe
or
sbbb
dec
loopne
mov
jbe
shl
les
icebp
mov
je
jge
jl
movsb
popf
xor
push
ss
ficoms
fldlg2
shlb
cwtl
cwtl
push
in
xor
push
mov
sbb
ficomps
daa
sti
loopne
mov
fcmovb
push
mov
jmp
mov
clc
sbb
mov
popf
dec
sti
xchg
mov
and
jge
lods
cmc
push
ret
push
aas
pop
pop
sar
shlb
popa
aad
push
ss
cs
cmp
pop
dec
cmp
sbb
xor
cmc
jbe
cmp
out
cmpsb
das
jo
icebp
jns
pop
inc
pop
jnp
and
cmc
shlb
add
js
hlt
sub
jb
loop
jl
les
nop
stos
ret
lock
mov
mov
lcall
aas
cwtl
lods
hlt
pop
jge
jne
xlat
or
xchg
les
mov
scas
ret
lock
mov
adc
xchg
pop
jnp
jg
dec
jp
fwait
sbb
push
xchg
mov
dec
push
enter
leave
arpl
inc
sub
inc
lcall
fwait
pop
out
or
sti
sbb
notb
iret
xor
or
push
loope
enter
test
or
push
xchg
mov
xchg
dec
jns
mov
inc
ror
push
push
cmp
mov
ss
jbe
dec
loope
pop
push
mov
inc
xor
pop
jmp
lds
mov
adc
sub
int3
cmp
lods
jo
xchg
shl
mov
aad
xor
cli
sbb
xor
push
or
in
fmull
int3
sub
dec
or
ffreep
mov
jmp
scas
enter
stos
pusha
dec
adc
data16
pop
dec
lahf
shll
enter
sub
xchg
aad
mov
sahf
jge
aaa
add
loopne
mov
add
mov
jns
pop
cli
fisubl
push
imul
pop
das
out
push
arpl
lcall
adc
dec
xor
cmc
movsl
lcall
mov
jnp
mov
mov
scas
cs
stos
xor
popl
jb
fcmovb
inc
adc
lea
adc
bts
xchg
pop
inc
dec
inc
popa
ret
scas
sbb
mov
mov
sub
inc
ljmp
sub
cmp
adc
scas
sbb
xchg
pop
jnp
shl
sbb
aam
repz
pop
out
push
add
adc
ds
sbb
aam
orb
or
mov
int3
push
in
adc
xchg
lret
jne
add
rorb
jp
movsl
add
and
xchg
ret
hlt
movsl
mov
frstor
push
push
push
cmp
das
jmp
int3
fisttps
fdivrl
and
sub
lret
hlt
fisubl
pop
xor
test
in
jmp
dec
mov
aad
jp
xchg
or
addb
popa
push
xor
and
popf
hlt
test
mov
int3
jle
xchg
ret
shrd
mov
push
mov
imul
adc
idivl
lock
jne
lret
xchg
sbb
jle
mov
add
cmpsb
adc
mov
push
je
leave
xor
mov
out
dec
ret
add
enter
mulb
pop
dec
jle
dec
jb
inc
cmp
xchg
cld
pop
push
sbb
push
pop
and
adc
das
jge
imul
cltd
fsubr
cmp
aam
pop
sahf
fistl
repz
popf
lds
xor
xchg
add
or
movsb
test
aam
mov
pop
sub
in
adc
dec
push
leave
xchg
fadds
hlt
sbb
sahf
sub
jno
xchg
movsb
sbbb
fidivrs
mov
out
jne
stos
nop
xor
push
hlt
and
jb
and
cmp
push
in
pop
xchg
push
push
mov
scas
push
loope
je
fistpl
push
xchg
push
add
fdivs
dec
sbb
and
aam
mov
mov
push
mov
pop
out
mov
and
stos
inc
movsb
pop
lea
int
xor
sub
xchg
je
cmp
in
leave
test
cld
ljmp
mov
std
jae
lahf
adc
add
or
je
adc
rorl
mov
leave
ss
adc
dec
daa
xchg
stos
jl
mov
sbbb
inc
mov
xchg
dec
dec
mov
mov
push
xchg
fldl
pop
sub
popl
jae
push
outsb
dec
inc
adc
mov
das
jp
in
out
ja
cmp
adc
inc
movsl
sub
popa
add
cmp
addb
out
cmp
dec
cmove
or
and
cmpsb
pop
int3
mov
mov
mov
adc
mov
jns
push
sub
hlt
push
xchg
adc
aas
and
sub
lods
sbb
cwtl
insl
sti
xor
adc
stos
sbb
push
ret
jne
lods
or
fisubl
clc
fs
shlb
les
lea
pop
mov
mov
mov
shll
mov
ja
cmovne
aad
xchg
fsubr
rorl
int
pop
add
adc
dec
insl
dec
cmpsb
or
or
fsubl
sub
adc
xchg
mov
stc
inc
out
push
ret
cmp
cmpsb
inc
aam
repz
insb
pop
and
stos
out
mov
xor
out
cli
inc
and
shlb
fwait
popa
data16
enter
cmp
std
lock
jg
loope
push
fistpl
adc
add
dec
jecxz
cmc
test
jne
pop
mov
stc
jnp
mov
push
push
add
push
insb
jle
mov
loop
daa
shll
cld
pop
jbe
imul
add
insl
sbb
pusha
mov
mov
cmpsb
mov
pusha
lds
in
mov
cwtl
xlat
or
int
aam
in
ss
inc
cmp
mov
fsts
mov
adc
push
ljmp
aam
addr16
imulb
sbb
lcall
dec
inc
sub
jo
mov
or
xchg
stos
stos
pushf
bound
add
popa
xor
mov
mov
adc
add
shll
cs
jg
scas
in
jle
and
xor
mov
jbe
mov
ds
push
xlat
sbb
inc
sub
adc
add
movsl
dec
pop
mov
cmp
jns
daa
xchg
dec
sbb
sub
into
adc
mov
movsl
push
dec
fsts
sahf
jp
adc
rcr
repz
add
push
sub
ja
jecxz
dec
inc
inc
mov
push
jmp
mov
addl
out
xchg
xor
int3
cmp
sub
dec
mov
and
sbb
xchg
jmp
mov
mov
stos
add
add
imul
or
push
cmp
scas
adc
jno
inc
dec
add
jecxz
popa
xchg
data16
sbbb
ds
jno
in
add
mov
cmp
shrd
dec
lea
push
sub
loope
xchg
in
fidivrl
pop
cmp
sahf
xchg
add
int
imul
ljmp
lds
aaa
out
in
stos
inc
xor
subb
pushf
popl
fcoml
dec
lods
mov
out
push
sbb
ss
cmp
push
lcall
int
lods
adc
dec
mov
aad
cltd
flds
insb
int3
rcl
std
stc
ja
clc
push
push
jl
out
add
bnd
sub
mov
test
outsl
dec
mov
rclb
ret
into
pusha
mov
fnsave
cmpsl
cs
xchg
mov
jno
inc
xchg
clc
sti
mov
call
addl
jecxz
xor
es
outsl
sbb
lods
inc
add
sbb
adc
sbb
sahf
mov
hlt
incb
das
out
out
add
mov
jl
shrb
out
subl
xchg
xlat
stos
lods
lea
push
add
cs
sub
fisubl
lahf
and
xchg
sub
or
pushl
scas
sahf
push
jp
xchg
imul
inc
imul
jmp
test
sbb
cmc
test
jbe
aas
gs
test
jae
add
cli
imul
fdivrp
jo
mov
jns
xchg
leave
xchg
sub
dec
jo
int
sbb
inc
xchg
cld
jo
inc
shll
out
stos
fstpl
adc
in
pop
xor
mulb
loop
test
jb
js
stc
fisubs
adc
hlt
mov
xor
aaa
pop
cmc
sti
incb
sub
repnz
shrb
mov
sub
incl
pushf
in
outsl
dec
cmc
sbb
inc
loopne
fcoms
mov
mov
lds
outsb
es
jno
inc
xlat
inc
shrb
jo
cltd
clc
sub
mov
inc
mov
xchg
adc
out
sbb
sub
sub
ror
stos
lds
dec
sbb
inc
push
scas
roll
dec
cmc
push
xlat
outsb
mov
pop
cmp
inc
test
mov
pop
pop
js
mov
cli
and
dec
mov
cmp
into
push
jmp
jl
adc
in
insl
sub
push
mov
jecxz
or
push
call
pop
jns
fiaddl
out
mov
sub
scas
fstl
nop
jp
and
subb
jnp
cmp
rcrb
inc
test
insl
nop
lds
int
mov
imul
push
cmc
mov
cwtl
addb
data16
xchg
scas
out
mov
xchg
jae
sbb
ret
out
lcall
clc
andl
push
xor
sbb
add
and
rcrl
fdivr
gs
pop
movsl
cmp
add
ret
or
mov
and
ds
sub
mov
inc
jbe
mov
out
inc
rcrl
and
test
mov
popa
out
dec
fadds
fcompl
scas
xor
mov
inc
xor
mov
fdivrl
std
cmpsb
jmp
sub
push
test
stos
and
lret
push
push
jb
ret
shlb
in
dec
andl
push
cmp
mov
leave
cwtl
jge
nop
jbe
lret
mov
popf
dec
add
mov
rorb
cmpsl
fists
dec
loopne
stc
push
loop
push
out
lock
pushf
aam
mov
loopne
mov
mov
fdivrs
jecxz
out
cmp
scas
repnz
mov
aam
lret
xor
stos
jp
and
and
xchg
stc
cs
or
testl
int
insl
adc
fimull
xchg
out
xchg
dec
sub
xchg
bound
scas
orl
dec
lret
inc
fs
adc
sub
mov
test
mov
out
scas
lahf
jae
into
sbb
cmp
inc
cs
push
jne
adc
test
cwtl
push
inc
adc
mov
in
cltd
test
lea
cs
mov
xlat
out
and
dec
rorb
lods
xor
inc
sub
jge,pn
inc
lret
mov
adc
ds
daa
cmc
cmp
cmp
dec
sbb
lahf
clc
into
jae
sbb
inc
push
jmp
pusha
dec
jae
outsb
mov
adcl
dec
pop
mov
repnz
xchg
sbb
add
sbb
pop
xchg
aam
arpl
loopne
aaa
add
xlat
push
pusha
xor
mov
mov
test
pop
dec
stc
and
loop
lods
add
imul
je
mov
and
nop
add
cmp
mov
add
imul
mov
lcall
js
or
shrl
add
and
ja
lcall
stc
pop
out
lret
xchg
das
aad
test
lods
int3
push
xchg
out
cltd
out
cmp
jne
rcrb
mov
jle
mov
mov
push
popa
push
push
jp
adc
movsl
lods
xor
sbbl
pop
stc
add
xor
inc
jns
xlat
sub
clc
mov
sbb
or
add
pop
rcl
push
arpl
jno
add
repz
mov
mov
push
mov
pop
out
sbbb
pop
sarl
in
xor
dec
sbb
pusha
int3
inc
push
and
pop
add
mov
cmp
cmp
popf
xchg
pop
mov
test
xchg
inc
cmp
adc
out
lock
testb
xchg
add
fildl
lods
dec
jne
xlat
mov
adc
dec
or
je
repz
mov
inc
es
out
cltd
or
pop
mov
add
jo
add
xor
pop
lcall
push
add
xchg
mov
in
inc
sets
pop
outsl
imul
ljmp
aad
mov
push
sbb
jns
fsub
test
fcomip
cli
sub
lods
inc
cmp
pop
push
jmp
pop
cwtl
out
out
mov
stos
push
add
jbe
cltd
sti
xchg
je
int3
xor
int
mov
lods
push
sbb
sti
cwtl
fwait
xchg
xchg
loope
cmp
iret
je
fadd
add
sub
push
outsb
inc
adc
movsb
mov
jb
inc
jne
imul
rol
stos
lret
push
xor
enter
and
pop
cmp
in
pop
loop
out
push
mov
hlt
cmc
int
or
test
mov
lahf
sub
jns
mov
or
fidivl
lahf
jno
sbb
push
pop
jnp
fldt
roll
mov
repnz
mov
hlt
push
fsubrl
sbb
mov
dec
ret
jne
pop
sub
mov
movsb
adc
xchg
jecxz
sub
aas
cmp
outsl
stc
hlt
mov
mov
inc
rolb
adc
mov
mov
sbb
mov
fsubp
adc
dec
cld
cmpsb
fisttpl
int
pop
jg
push
or
mov
test
fadds
inc
gs
cld
shll
push
mov
shll
lods
adc
sbb
xlat
mov
ljmp
add
addb
pop
aaa
pop
mov
xchg
jo
testl
push
xchg
test
movsb
aaa
std
add
es
std
sbb
push
clc
adc
pop
cmp
or
stc
test
std
loopne
clc
lock
push
sar
dec
xlat
cmp
lret
fstpl
fistpll
mov
daa
in
mov
lahf
sbb
into
add
inc
jbe
xchg
in
cmp
inc
jne
xchg
sub
adc
stos
cs
sbb
xchg
pop
cmp
xchg
shl
outsb
stos
outsb
mov
mov
add
jbe
cld
adc
fstl
fldcw
in
adc
insl
xchg
fstpl
movsl
pop
push
lret
jb
fdivrs
adc
lahf
lock
rolb
jne
mov
cwtl
sarl
or
xor
cmp
push
and
aas
xchg
xor
pop
lret
pop
inc
add
sub
push
sbb
add
pop
mov
loopne
push
mulb
insl
jl
push
cs
add
stos
divl
push
cmp
mov
out
adc
loopne
jnp
shrl
sti
shl
mov
push
stc
add
lcall
xchg
jb
rorl
xor
mov
pop
sbb
imul
call
push
sahf
cmp
mov
xor
xchg
adc
dec
inc
ret
cs
xor
adcb
mov
jno
xchg
cwtl
cmpsb
js
pop
mov
outsb
stos
ficompl
adc
jg
add
leave
in
xchg
pop
inc
and
fcomps
aam
loope
fsts
jns
rcrb
push
and
add
aad
scas
cs
pusha
jl
aaa
in
xor
fstpt
ja
stos
mov
adcb
cld
mov
in
into
leave
mov
fwait
mov
ret
stos
pop
pop
mov
pop
test
mov
sbbb
nop
mov
inc
rorb
sub
jae
or
pop
orb
lret
data16
mov
sbb
ja
pop
dec
cmp
inc
je
ljmp
push
push
ret
push
xor
lds
push
lret
and
stos
and
repz
mov
mov
cmpsb
sbb
fwait
or
mov
add
fwait
mov
nop
inc
dec
mov
mov
jl
xchg
fs
mov
jae
faddl
and
popf
and
or
push
add
str
fdivrl
mov
mov
mov
jne
pop
icebp
movsl
daa
pop
mov
mov
inc
outsb
jmp
in
mov
arpl
cs
insl
lds
fcmovnb
aas
pop
aaa
pushf
xchg
repz
cmp
testb
leave
xchg
enter
idivb
sub
xor
push
dec
xor
test
inc
adc
ss
jl
push
adc
pop
dec
mov
pop
fsub
and
inc
test
push
xor
in
pop
in
pop
sbb
adc
repz
shlb
jnp
lret
imul
xchg
loope
test
adc
jb
jbe
adc
pcmpgtw
push
sbb
movsb
cmc
push
gs
mov
cmpsb
sbb
dec
pop
ljmp
addl
insl
xor
cli
imul
dec
in
bswap
mov
push
jg
cmpsl
jle
adc
data16
rol
mov
mov
mov
lds
pop
bound
aad
mov
popf
fs
notb
fiaddl
iret
xchg
lret
ret
cli
outsb
push
jno
or
lret
das
inc
fisubrl
enter
ret
cmp
dec
repnz
call
sbb
les
push
pushf
out
int3
je
scas
dec
xor
inc
mov
insb
call
pop
cmp
pop
dec
xchg
les
jae
mov
jl
xor
pusha
lret
push
xor
push
dec
roll
adc
mov
jno
mov
jecxz
ds
ss
add
mov
fs
and
push
jmp
ret
pop
push
cmpsb
xchg
stos
sub
jb
add
or
ja
frstor
inc
push
inc
imul
mov
and
leave
fnsave
in
mov
js
movsb
test
nop
int3
mov
mov
arpl
rorb
hlt
sti
and
outsl
sbb
repz
cwtl
pop
out
loopne
aas
push
jae
fsubr
push
push
or
jo
loopne
jae
push
leave
and
dec
hlt
inc
xchg
mov
cmp
xor
mov
add
insb
sbb
jl
sub
movsb
mov
insl
pusha
and
clc
incl
add
scas
dec
in
bnd
mov
sarl
ss
inc
pop
jp
adc
sub
push
dec
xchg
rcll
xor
sub
scas
int
repz
scas
xchg
lret
shlb
xor
fstpl
dec
sbb
dec
pop
dec
jb
adc
jnp
and
and
leave
or
xor
sbb
sbb
sahf
rcr
inc
mov
dec
out
add
inc
inc
jne
xchg
xor
push
mov
sub
mov
pusha
gs
pop
rcll
shll
int
add
cmp
xor
out
cld
mov
lcall
mov
in
arpl
shrb
adcb
cmp
sbb
and
imul
aas
mov
lea
inc
sub
sub
repz
jae
faddl
sbb
sti
lea
adc
je
orb
insl
inc
stc
mov
sub
out
cmp
mov
mov
pop
mov
pop
pop
stos
int
xchg
jmp
dec
mov
fisubs
mov
gs
xor
or
mov
test
lcall
cld
ficompl
cmpsl
pushf
mov
daa
push
mov
dec
imul
adc
ljmp
leave
fwait
shlb
dec
jmp
push
test
andl
das
push
xchg
cmp
dec
movsl
dec
std
jle
inc
aaa
sbb
cmp
xchg
dec
fs
pop
xchg
jle
sub
pop
ss
scas
sbb
data16
xchg
loopne
and
cmp
ds
mov
push
and
lods
xchg
mov
ffree
add
mov
sbb
mov
add
lahf
lahf
sti
repz
xor
fucomip
inc
sub
cld
cld
ss
into
shll
dec
sbb
insb
jae
push
dec
aaa
test
mov
add
stos
mov
add
dec
mov
repz
adc
cwtl
rorb
movsb
pop
lds
insb
scas
push
insb
in
loope
imul
or
fildll
dec
inc
push
ljmp
lea
dec
sarb
mov
inc
iret
mov
xchg
xchg
and
andb
pop
lods
in
cmp
pcmpeqw
roll
ret
sbb
cwtl
mov
mov
or
mov
mov
rorl
loopne
push
addr16
add
mov
inc
jbe
cmp
outsl
inc
inc
add
jmp
call
jbe
jg
mov
push
mov
int
mov
arpl
dec
ss
and
xchg
aad
cmp
pop
fisttpl
out
or
repz
xorb
les
jge
daa
sbb
xor
fisubl
xchg
dec
stc
cltd
popf
xchg
outsb
shlb
popf
or
ja
dec
mov
stc
stos
or
inc
ret
dec
pop
xchg
fmuls
aam
and
cmp
pusha
push
insl
mov
test
or
push
call
sbb
leave
mov
fxch
and
xor
fmuls
loop
add
mov
lret
pushf
sub
loop
jecxz,pt
dec
scas
dec
xchg
and
lea
and
std
in
dec
mov
xchg
dec
mov
ds
mov
sub
shrb
lret
lea
mov
sub
js
jl
lret
leave
adc
push
add
adc
xchg
push
mov
sub
inc
adc
stos
sbb
xor
outsl
cwtl
cli
and
jbe
insb
imul
sarb
xor
lods
jbe
kandnb
fadd
sub
dec
ficompl
xor
sbb
and
lds
stos
lcall
xor
lods
gs
add
dec
add
notb
add
xor
sub
pop
fwait
inc
inc
adc
add
jp
pop
mov
push
pushf
xor
cmp
inc
mov
insb
jg
xlat
les
push
mov
cmc
dec
and
cs
dec
sets
scas
xchg
loop
sbb
iret
test
and
fcomps
mov
push
gs
ljmp
loopne
push
lret
cli
cmp
push
fwait
cmp
xchg
in
or
shll
testb
aas
push
stos
into
jns
mov
es
adc
out
shl
das
inc
repnz
xlat
pushf
xlat
adc
push
lret
loopne
fdivrl
outsl
pushf
aas
jne
mov
xchg
sbb
or
movsb
sub
ret
nop
push
cli
cli
stos
gs
inc
cmpsb
mov
lret
fmuls
mov
pop
push
pop
popf
xchg
cwtl
pop
lods
rcrb
xor
inc
pop
std
mov
ja
fnstcw
adc
sti
or
mov
push
xor
loope
les
pop
cmpsl
inc
sbb
pop
stos
jl
pop
push
mov
and
call
lods
pop
subb
cmp
out
mov
shlb
adc
setns
inc
xor
cltd
stos
dec
or
insl
and
out
arpl
enter
fistpll
sub
inc
or
dec
jns
iret
ret
imul
mov
mov
adc
cltd
test
cmpsb
mov
mov
dec
mov
dec
mov
scas
adc
pop
xchg
cmpsl
rolb
pop
add
push
outsl
inc
pop
aad
lds
dec
repnz
inc
out
jno
loopne
push
scas
push
xchg
jl
mov
push
jno
mov
or
icebp
mov
push
push
sub
imul
loop
inc
push
and
or
cmpsl
xorb
mov
jno
push
in
call
cmp
iret
add
xchg
sbb
clc
in
sbb
loopne
fwait
or
lods
lret
cmp
jbe
scas
jecxz
negb
jne
mov
sbb
mov
mov
sub
loope
or
mov
jl
jecxz
lahf
je
scas
mov
rolb
in
push
insl
pop
inc
outsb
xor
in
mov
lods
push
and
pop
lahf
mov
movaps
loope
in
sbb
sbb
lret
mov
sub
lret
fwait
inc
ret
aad
daa
lea
ret
cs
adc
mov
repnz
cmp
stc
test
or
pop
xchg
icebp
fdivrp
cmp
insl
ds
cwtl
es
dec
jb
mov
es
daa
mov
jle
mov
jle
pushf
fiadds
and
sar
pminsw
ret
and
cld
mov
in
jg
push
pop
je
fadd
mov
arpl
add
insl
sbb
xchg
mov
sub
sbb
sarb
xor
fdivl
ret
stc
fcompl
inc
dec
out
cmpsl
sbb
push
cmp
mov
call
jmp
xchg
imul
les
adc
cmp
jno
xor
cmp
ljmp
cld
jns
out
insb
ss
sbb
cmp
mov
sbb
repnz
sbb
cld
sub
imul
add
or
lea
cmp
cmp
or
pop
rorl
repnz
xchg
in
sbb
adc
shl
stos
dec
push
push
les
xor
cmc
or
jecxz
rcr
in
push
inc
imul
add
insl
jge
sahf
shlb
out
mov
leave
xor
inc
jecxz
into
sbb
and
sar
rclb
insb
mov
nop
add
inc
loopne
stos
dec
aad
push
outsb
push
lods
cwtl
enter
pusha
mov
mov
sub
addr16
dec
sahf
int
pop
test
jg
pop
ja,pt
sahf
clc
in
loop
cmp
push
aaa
mov
inc
pop
call
jnp
stos
xor
add
icebp
and
cltd
push
outsl
sbb
gs
movsb
cmp
out
fstps
sbb
sbb
fsubs
xor
push
sahf
arpl
mov
cmp
xchg
mov
lahf
xchg
hlt
into
lcall
add
js
dec
in
xor
xor
mov
pop
sub
xor
dec
xor
test
cmp
addr16
andb
xchg
jno
aaa
cmc
dec
cmpsl
push
sbb
leave
imulb
sbb
adc
pop
pop
mov
out
imul
jp
fists
or
or
mov
out
cld
sub
aad
cs
pop
movsb
nop
gs
loope
jbe
sub
cmp
adc
push
mov
test
push
leave
and
les
sbb
loope
sbb
movsb
push
inc
mov
aas
out
inc
sbb
andl
packuswb
xor
in
movsl
out
jmp
mov
movsb
mov
cmp
jp
insb
push
insb
pushf
test
jge
sbb
add
pop
pusha
xchg
cmc
pop
out
lods
add
or
out
inc
inc
jne
sahf
out
test
and
push
hlt
mov
inc
arpl
lcall
call
ljmp
xor
pavgw
out
fcomps
sub
es
ret
mov
jp
or
testl
repz
jle
or
mov
lahf
aaa
push
mov
in
sbb
ss
fadd
sbb
jle
cmp
cmp
mov
mov
in
fisubrl
outsl
std
imul
mov
xchg
pop
sub
sbb
jge
sub
cmpsb
loopne
int3
xor
ljmp
scas
push
jbe
push
jmp
sub
and
lds
scas
or
jmp
cmc
imul
pop
icebp
lods
sbb
sub
lahf
xchg
mov
sahf
mov
roll
cmp
mov
inc
pusha
scas
mov
nop
cmp
cmc
lahf
aas
cmp
inc
fcomps
inc
push
pop
xchg
lahf
std
cmp
fcoml
out
call
cli
add
popf
jo
sti
xchg
sbb
popa
pop
mov
pop
mov
fstpt
in
outsl
pop
mov
lret
xchg
or
xlat
add
dec
loopne,pt
adc
iret
jg
mov
fistps
cmp
push
leave
into
leave
addr16
or
xor
dec
push
clc
mov
mov
mov
dec
sbb
jg
shl
mov
iret
dec
jl
mov
lock
movsl
loop
mov
jnp
in
sub
int3
and
std
jg
xor
subb
shrb
fld
enter
cmpsb
adc
cli
arpl
mov
jno
xchg
mov
mov
mov
push
xor
scas
sub
cmc
arpl
daa
fnstcw
test
sbb
mov
xchg
add
jge
aam
and
push
lock
aaa
insl
dec
dec
mov
gs
sub
adc
jmp
js
je
in
add
mov
clc
fmuls
xor
adc
daa
inc
popf
push
sbb
and
loopne
cltd
lods
addb
orb
enter
lcall
das
xor
aaa
test
pop
xlat
lock
leave
lods
or
push
jbe
xor
sbb
dec
imul
adc
mov
jp
or
mov
lds
jno
and
sub
repz
xlat
enter
movsb
mov
inc
shlb
adc
or
xor
add
mov
sbb
lock
int
mov
inc
mov
sbb
xchg
sub
add
dec
shll
call
outsb
ret
shrb
arpl
fnstsw
dec
xorl
adc
loopne
jl
fldt
push
mov
mov
les
mov
bound
or
cmp
arpl
lret
loop
and
sub
mov
loope
jb
dec
mov
popa
mov
pop
add
in
mov
call
mov
xchg
dec
cmc
std
repnz
push
jmp
adc
movsl
lahf
out
aas
lds
add
jl
inc
orb
cmc
movsb
cmp
dec
dec
cmp
mov
and
shlb
cmp
into
aas
cmpsl
aam
add
call
std
mov
cwtl
sti
lock
xchg
ja
test
aad
inc
int
fisttpll
jle
dec
inc
sbb
dec
cmp
in
fnstsw
stc
stc
and
ja
dec
outsl
lahf
lea
push
es
xor
loop
cmp
xchg
pushf
nop
xchg
sub
or
mov
mov
jns
ljmp
aam
xchg
outsb
inc
pop
push
rcrl
jne
shlb
sbb
sbb
out
js
shl
mov
aad
cmc
and
jmp
loopne
shlb
cmpsl
aad
mull
pop
cmp
inc
push
cwtl
add
faddl
es
es
shrb
imul
ds
aam
or
lds
popa
pop
and
insb
int
mov
dec
jmp
repnz
add
sahf
cmpsl
mov
fsubr
xlat
push
rolb
xchg
sti
push
ret
mov
xor
push
out
add
int3
sub
fbstp
cli
cwtl
out
leave
mov
inc
push
insl
push
aas
mov
pop
iret
arpl
xor
mov
and
jb
andps
dec
or
lahf
lods
jno
fdivrl
int
pop
test
xlat
test
shl
mov
lret
jno
loopne
loope
push
xchg
adc
addl
push
test
inc
gs
and
jg
inc
adc
push
icebp
sub
adc
dec
aas
cmp
xor
int3
mov
jle
pop
mov
xor
and
mov
pusha
in
test
or
insb
cmp
sub
push
ret
imul
cltd
aas
icebp
dec
mov
mov
dec
cmp
xchg
shll
mov
cs
popa
cwtl
pushl
in
fisttpll
in
insl
scas
xchg
outsb
fucom
aad
pop
shl
enter
call
mov
lcall
xor
arpl
dec
xchg
xor
mov
pushf
dec
data16
push
push
cmp
or
mov
adc
cs
cmc
sti
inc
je
dec
xchg
or
movsw
pop
stos
pop
jecxz
push
cmp
repnz
jbe
dec
neg
test
jb
inc
add
mov
xchg
inc
cmp
cmp
inc
xor
cli
lcall
pop
lea
jne
dec
xchg
ja
jns
in
lea
cmc
xchg
test
punpckhbw
insl
mov
xor
data16
rorl
jl
sub
sub
jo
imul
pop
aad
es
push
lcall
cld
cltd
sbb
add
out
into
das
scas
cmpsb
xlat
push
push
xlat
loopne
ror
cmp
inc
dec
push
jl
and
adc
dec
int3
lret
popa
test
les
imul
xor
or
adc
or
cmp
fbstp
cmp
and
fwait
scas
lods
dec
out
adc
mov
shl
std
cmp
test
movsl
fwait
pop
dec
rcll
mov
xchg
aaa
ss
stos
add
mov
dec
cmc
mov
lahf
jl
push
imul
sahf
js
fidivl
push
in
jbe
ficompl
pop
inc
inc
out
and
data16
mov
adc
scas
push
mov
mov
push
mov
xlat
fs
jmp
mov
lret
enter
mov
sti
punpckhdq
mov
out
out
nop
scas
cmpsl
inc
push
hlt
daa
in
jl
mov
or
popa
xchg
jl
adc
into
loope
xor
mov
pushf
push
xchg
push
movsl
inc
inc
xchg
xor
call
into
xchg
out
adc
imul
icebp
cmp
daa
btcl
out
aas
inc
not
ss
bnd
dec
add
pop
add
mov
lods
add
outsb
cmp
lahf
repz
scas
and
int3
enter
shlb
jns
pop
mov
and
mov
dec
jno
stos
jbe
inc
loope
lahf
mull
jnp
adc
inc
gs
subb
and
mov
push
xor
testb
scas
stos
out
and
test
dec
inc
cmpsb
arpl
xor
push
andb
lds
sub
outsb
insl
and
test
fstpt
movsb
fnstenv
or
out
dec
cmp
fs
imul
lret
pop
mov
loope
es
inc
xchg
jae
adc
orb
adc
dec
ljmp
jp
push
loopne
mov
repnz
repz
pop
out
push
pop
mov
call
addr16
repz
jl
xlat
sbb
fsubr
lahf
sbb
jg
jb
aad
es
sbbl
sti
mov
mov
inc
in
xor
pop
out
mov
add
lret
pop
mov
gs
pop
in
imulb
repnz
pop
sbb
push
xchg
and
jmp
lret
xchg
rorb
and
in
les
es
jnp
hlt
xchg
jecxz
adc
xchg
movsb
roll
mov
xchg
addr16
inc
in
mov
int
aam
ss
sub
inc
fdivs
lret
sbb
mov
fwait
xor
movsb
ret
cmp
mov
push
inc
jle
test
mov
add
jmpw
leave
xchg
xor
xor
cwtl
pushf
dec
add
adc
fdivs
repnz
pop
insl
in
ud0
and
sub
jmp
aaa
dec
sub
lret
sub
ss
jnp
xchg
dec
imul
push
push
add
mov
iret
movsb
xor
sub
mov
mov
cltd
dec
xlat
rorb
jbe
scas
js
sub
not
lea
xchg
sbb
mov
repz
int3
adc
push
and
sub
stc
movsb
sarb
mov
scas
in
and
test
icebp
cmc
aaa
lcall
shrb
out
in
push
int3
pop
aas
add
add
cwtl
daa
and
in
and
into
mov
inc
sub
outsb
lret
in
pop
adc
test
lods
sub
subl
into
pop
and
or
cmpsl
roll
repnz
dec
cmp
in
adc
cmp
cwtl
mov
shll
mov
or
mov
mov
gs
mov
in
int3
mov
pop
addr16
jae
add
inc
mov
add
rorl
pop
inc
hlt
repnz
add
popa
jl
xchg
subl
sub
loope
je
shll
sub
push
add
add
pop
jp
rclb
lods
test
push
lods
imull
sbb
and
xor
sti
push
mov
adc
cltd
cmp
push
xchg
in
xchg
icebp
fwait
gs
rcrl
and
popa
loope
add
test
sbb
loope
dec
mov
shll
movsb
addr16
lods
stc
std
sub
sbb
mov
sbb
test
sub
mov
or
dec
repnz
mov
fimuls
jno
mov
icebp
adc
rcl
xchg
mov
stc
inc
push
aam
jle
lret
add
in
addl
test
icebp
sti
pop
mov
xor
add
fmull
xchg
sbbb
das
pop
xor
cmp
cmpsl
xchg
ret
lret
jo
jnp
mov
jb
cwtl
outsl
pop
aad
mov
fadd
in
movsl
in
fcmovnu
iret
xor
fisttpll
mov
daa
mov
jns
sub
and
js
pop
out
loopne
insl
rcrl
addr16
xchg
call
arpl
addb
les
mov
mov
aam
imul
fdivrs
jb
in
jp
and
cmpsl
pop
mov
mov
mov
mov
add
daa
mov
lods
pop
xchg
test
or
mov
xor
xorl
push
dec
dec
cmp
push
je
imul
pop
out
popl
push
nop
outsl
or
cwtl
repz
cmp
rcll
jecxz
lods
repz
test
outsb
push
jne
xchg
jge
and
mov
sbb
and
mov
xchg
sub
insb
into
fs
aaa
leave
stos
cld
pop
outsl
std
pop
push
mov
sub
enter
lahf
in
dec
pop
imul
inc
fldcw
loope
mov
test
test
or
mov
pop
mov
jne
loope
inc
xchg
into
lods
fyl2x
jns
fstpl
sbb
adc
cmp
iret
call
pop
sbb
setns
add
lahf
test
in
mov
mov
xchg
jne
sub
inc
adc
fisubrl
push
lock
push
stc
inc
push
mov
jns
or
xchg
cld
push
jp
dec
mov
in
xchg
ljmp
push
adc
push
adc
lahf
mov
mov
lods
into
stc
in
push
jp
sub
xor
sub
inc
in
cmp
fbstp
cmpsb
inc
add
stc
jo
outsb
push
cmpb
xchg
insb
pop
divb
jle
cmpsl
inc
stos
xchg
xchg
dec
in
and
inc
stos
mov
addr16
aaa
leave
xchg
push
mov
imul
mov
cmp
das
popf
fwait
jnp
xchg
outsl
adc
hlt
jo
adc
and
test
pop
inc
ret
addr16
mov
push
pop
andb
fdivr
fsubrs
dec
push
test
dec
mov
xchg
sub
adcb
push
push
push
or
fs
into
into
pusha
jnp
add
lea
movsl
jns
pop
mov
sbb
into
insb
mov
mov
cmp
sub
mov
lods
inc
daa
jnp
adc
fwait
data16
pusha
mov
das
pop
or
cmovo
sahf
arpl
cmp
mov
mov
imul
cld
dec
pop
addr16
addr16
cmp
mov
jle
jnp
xor
maskmovq
cld
nop
push
xor
xchg
fsin
jmp
imul
sbb
mov
xchg
add
cmpsb
mov
dec
in
xchg
push
loope
pop
fwait
gs
pop
push
and
mov
insl
loop
stos
pop
stos
jae
xchg
or
dec
leave
fistl
repnz
aam
rolb
pushf
cwtl
mov
stos
shrb
outsl
mov
xlat
cltd
arpl
loop
out
jne
test
in
inc
add
nop
or
and
mov
jbe
ret
test
add
or
scas
divb
adc
les
int
push
adc
cmp
mov
out
lods
enter
cmp
das
in
inc
jnp
faddl
dec
nop
mov
ret
test
and
jb
add
dec
lods
xchg
ljmp
add
and
fstp
out
jne,pt
jo
xchg
jne
mov
aam
push
les
or
daa
mov
mov
rorl
imul
lods
jp
enter
xchg
movsl
push
push
roll
and
sahf
imul
mov
movsb
popa
or
adc
xchg
xchg
int
pop
or
inc
or
adc
pushf
push
push
sbb
adcl
mov
test
mov
aas
adcb
xor
pop
dec
js
fildll
cld
dec
xchg
push
add
mov
insl
ffreep
mov
mov
scas
sub
pop
cmp
xchg
dec
shll
fs
sbb
cwtl
pop
std
arpl
add
sbb
mov
cmpsb
mov
iret
fs
pushf
inc
and
lock
imul
js
pop
cmp
gs
movsl
cmp
mov
arpl
js
adc
repz
fwait
nop
mov
rcrb
loope
sbb
movsl
mull
xchg
push
add
mov
cmp
mov
jge
pop
in
dec
cmp
cmp
xorb
mov
pop
sub
mov
jns
jmp
sahf
hlt
outsl
mov
add
pop
fiadds
pop
ret
pop
insl
push
sbb
inc
aaa
or
mov
cmpsb
inc
es
push
jecxz
lahf
xor
pushf
sbb
adc
addr16
adc
out
pop
add
xlat
sub
mov
xchg
pop
inc
daa
mov
in
sbb
or
sbb
or
fdivr
lods
imul
das
xchg
lods
sbb
push
xlat
ret
sub
or
imul
out
in
fnstsw
xor
inc
dec
cld
add
add
std
in
addr16
sbb
inc
push
fisttps
je
pop
hlt
pop
repz
shr
add
xchg
nop
shlb
mov
loope
lods
data16
lods
jo
push
lods
or
call
std
mov
nop
insl
adc
fidivs
push
sub
cs
push
idivl
mull
or
ret
imul
aam
sbb
lea
movsl
pop
mov
inc
and
sbbb
sub
outsl
fmuls
or
or
outsl
mov
aam
jnp
pusha
cmp
dec
xchg
scas
out
adc
cli
jne
mov
inc
jbe
adc
mov
mov
pop
ret
gs
rorb
sub
mov
iret
sbb
mov
cmpsl
inc
sbb
scas
imul
adc
fdivrl
add
mov
xchg
bound
outsb
call
in
insl
pop
cmpsb
inc
inc
shll
testl
aaa
sub
inc
lock
pop
and
add
cmp
test
xchg
cwtl
sub
call
loope
ds
push
push
sub
stc
test
lahf
push
jne
repz
dec
ja
inc
outsb
mov
mov
loope
inc
xchg
enter
mov
sub
negb
jmp
sbb
aam
fwait
lea
lock
pop
rolb
loopne
lea
adcl
das
fstpt
push
push
dec
hlt
test
subl
mov
cli
jne
push
cmp
loope
push
out
mov
jmp
sarb
ds
mov
ret
or
clc
outsb
mov
dec
push
dec
dec
mulb
sub
pop
clc
and
inc
cmp
stos
sbb
push
in
push
mov
jno
scas
sbb
pop
ret
cmc
ficoms
push
std
sub
mov
lret
in
jns
xchg
push
movsb
or
sbb
clc
and
or
adc
jg
lcall
inc
mov
sbb
lds
inc
movsbl
ret
push
pushf
lock
cltd
push
cmp
xchg
lret
stos
loop
stc
pop
lea
adcb
dec
mov
jmp
cmpb
aas
out
jno
jnp
mov
pop
mov
adc
lods
js
ja
shlb
iret
pop
xchg
roll
push
in
popf
xchg
divl
lds
and
inc
mov
adc
sbb
adc
in
shl
sbb
inc
ficoml
das
adc
mov
bound
ss
add
cmp
pand
mov
pop
mov
sub
notl
pop
pop
mov
jle
fcmove
fisttps
cmp
data16
ret
mov
add
mov
sub
repz
scas
or
push
sub
imul
cmpsb
aam
mov
lock
jmp
std
push
inc
ret
daa
bound
xor
fst
jle
push
dec
subb
lret
mov
iret
add
cs
mov
mov
lahf
shlb
or
aam
int
mov
cmp
in
jb
dec
int
sbb
push
in
push
push
adc
nop
mov
xchg
clc
lds
fstpl
mov
mov
sub
push
push
sub
and
ljmp
jbe
leave
or
sub
bound
sbb
pop
push
outsl
xchg
mov
into
jmp
jle
ret
mov
sbb
inc
pop
sti
les
aad
js
dec
or
jp
xchg
cwtl
cmp
lret
mov
cmp
xchg
popf
stos
scas
dec
mov
repnz
and
push
sbb
test
jge
shlb
rorb
pop
inc
loopne
mov
push
inc
fwait
dec
pop
sbb
and
push
cld
mov
cs
xchg
in
das
and
out
and
pusha
lods
and
fcmovb
inc
jmp
pop
repnz
stos
pusha
das
aad
out
fcompl
xchg
adc
xor
jle
sub
or
jno
ret
inc
mov
mov
xchg
pop
fwait
shr
ret
es
mov
push
xchg
adc
jecxz
test
and
lret
cmp
rorl
nopl
push
and
je
cmp
pushf
sub
adc
and
mov
jo
shl
dec
adc
and
and
test
push
pushl
mov
fisttpl
xor
imul
push
mov
negb
or
pop
rcr
pop
aas
les
pop
push
jg
imul
cmc
jp
pop
sbb
sub
adc
je
icebp
xor
aam
xor
pop
sub
in
cmc
dec
sbb
and
insl
push
or
push
femms
movsl
sbb
cmp
pop
adc
push
shrb
jg
addl
jge
pop
xlat
push
stc
or
ret
out
or
mov
xor
cmpl
pop
cld
xchg
push
xlat
jmp
outsb
aam
lock
sbb
mov
and
dec
scas
fcomip
mov
dec
popa
decl
mov
shrb
sbb
in
add
notl
jmp
push
lds
mov
popa
xor
jne
ret
sub
out
jne
test
sub
push
sarl
cmp
cmp
dec
inc
mov
xor
inc
loope
jg
shl
or
sub
lds
cltd
push
xchg
adc
call
cmp
in
jns
adc
in
fldenv
cwtl
shrd
ss
sub
xor
xchg
std
out
outsb
push
jns
lods
nop
pushf
adc
out
insb
sbb
xor
aas
jnp
cmp
adc
xor
adc
inc
scas
lods
jl
outsl
cmpsl
rcll
in
outsb
adcl
jecxz
inc
inc
sbb
jo
ja
sub
scas
jp
scas
aaa
lods
mov
xchg
rcrl
jp
mov
lock
cmp
xlat
adcb
xchg
fistpl
pop
addl
adc
cld
mov
gs
pop
mov
xchg
mov
push
addr16
test
and
divb
or
daa
pop
sbb
insl
adc
loop
pop
adc
cmp
stos
sbb
sub
mull
insb
cli
mov
add
fwait
lcall
jns
arpl
fldenv
loope
stc
lds
pop
mov
rcrb
fst
mov
lret
sub
ss
cld
inc
push
pop
pushf
mov
ljmp
xchg
adc
loop
stos
add
repnz
push
mov
cmp
xchg
jle
push
cwtl
mov
out
lds
sub
dec
sbb
lahf
vpavgw
aad
test
push
mov
jle
mov
xchg
es
mov
xchg
ret
into
xchg
fistpll
mov
repz
or
out
inc
xor
pop
ja
es
adc
pop
pop
stos
dec
mov
inc
popa
xor
fistl
xchg
jnp
sbb
int3
jns
mov
dec
adc
sub
xchg
lret
xchg
sub
mov
fwait
addr16
lods
mov
push
faddl
xchg
pop
jo
sti
fsubl
mov
ss
mov
sbb
fildl
mov
jle
stc
dec
or
test
jl
mov
iret
jecxz
testl
cmp
outsb
dec
mov
xchg
xlat
push
sbb
int3
hlt
in
pop
sbb
push
loopne
push
pop
hlt
add
pop
shlb
ljmp
lea
lods
add
in
xchg
aas
jge
pop
push
out
mov
pushf
mov
xchg
aam
cmp
xchg
insl
gs
dec
stos
jp
pop
iret
push
xchg
stc
push
jnp
adc
sti
adc
inc
arpl
mov
dec
xchg
adc
xlat
sti
notl
pop
and
mov
lea
test
bound
lods
xchg
or
mov
outsb
dec
and
jb
pushl
outsl
cmp
bound
inc
mov
sahf
and
xor
mov
push
fimuls
push
jecxz
mov
xor
sub
mov
jge
pop
xor
das
fildl
push
int
cwtl
add
sbb
ljmp
push
call
mov
test
ja
std
cwtl
pop
lods
movsb
stos
xor
cmp
push
repnz
add
lcall
sahf
das
pushf
add
xchg
or
inc
mov
lahf
movsb
js
roll
insb
push
stos
mov
cli
aad
stos
jge
cmpsl
imulb
pushf
out
mov
test
sbb
std
hlt
cmp
or
lods
jecxz
imul
inc
fmull
lret
add
andl
cmp
hlt
push
pop
and
sub
js
pop
add
cld
pop
pop
daa
movsl
ljmp
mov
add
clc
test
out
mov
test
ljmp
mov
jb
cltd
inc
jnp
popa
lret
pop
jecxz
fadds
ret
sbb
fisubl
dec
or
insl
push
imul
lods
xchg
jb
sarl
push
xchg
or
fwait
push
dec
idivb
cmp
add
xchg
imul
cmp
outsl
xchg
popl
nop
iret
jnp
fwait
or
jp
sbb
adc
lea
js
jmp
mov
insb
cmp
es
jmp
xchg
push
add
or
rorl
negb
xchg
cs
push
xor
mov
cmpsb
js
fmull
ret
aam
fninit
cmp
clc
aam
xchg
insl
xor
xor
xchg
push
adc
repz
add
das
pop
dec
sbb
test
jns
sub
push
xchg
aam
lret
push
movsl
push
mov
nop
ja
push
icebp
ds
outsb
inc
pusha
cmc
addr16
mov
enter
sbbl
stos
cmp
dec
out
inc
insl
jecxz
pop
ljmp
fdivrl
mov
in
mov
lret
mov
jle
fstl
inc
icebp
mov
rol
pop
stc
repnz
test
adc
aaa
int3
jmp
xchg
jp
das
addl
cmpl
jno
lock
or
inc
test
pop
push
jecxz
shrl
loopne
xchg
dec
dec
jae
mov
mov
in
leave
jmp
xor
push
mov
push
imul
lret
push
and
lea
xchg
cmp
xor
data16
in
xchg
sub
mov
jbe
push
pusha
adc
xchg
jp
xchg
jnp
mov
insb
mov
stc
mov
jp
add
fadds
clc
sub
xchg
fidivl
adc
dec
pop
xchg
dec
rolb
lods
adc
mov
pop
cmp
jne
inc
fcomi
pop
arpl
fidivrl
mov
adc
mov
scas
shl
push
sbb
mov
pop
out
cld
mov
adc
clc
jle
lea
es
inc
ror
pop
daa
out
test
sbb
jg
push
lret
adc
add
movsl
mov
data16
push
push
mov
and
fs
mov
xchg
push
push
pop
jb
frstor
andl
cmpsb
push
adc
pop
mov
cmp
test
arpl
shll
push
pop
mov
cwtl
out
mov
mov
lahf
pop
mov
dec
out
xchg
pop
or
dec
mov
dec
mov
gs
mov
xlat
stc
mov
fisubl
adc
test
xchg
mov
xchg
sbb
cmc
fistpll
jmp
push
fcompp
inc
cmpsl
xchg
movsb
lds
fisttpl
test
fsubrs
pop
mov
sbb
imul
jns
or
jnp
repnz
jp
xchg
and
ja
les
pushf
shlb
and
cmp
hlt
pushf
inc
outsl
mov
lock
pop
pop
push
mov
ret
push
adc
stos
cmpsb
inc
in
cltd
mov
nop
out
pop
mov
mov
mov
jno
in
nop
push
mov
test
xor
mov
sbb
dec
bound
sub
mov
add
mov
andl
mov
out
leave
std
push
fmulp
mov
mov
jp
lock
clc
lret
mov
lret
sub
pop
add
sub
sbb
fidivrl
jbe
pop
notb
outsb
adc
fstpl
lcall
mov
xchg
and
pop
mov
cmpsl
push
stos
into
shll
and
adc
add
rclb
dec
xchg
test
jo
js
call
xor
and
xorl
jmp
bound
pop
pop
push
mov
and
stos
cld
and
inc
jmp
push
mov
or
jp
loop
or
call
call
scas
cwtl
add
and
movsl
push
frstor
in
and
push
add
pop
pop
test
xchg
xor
mov
add
xchg
pop
aam
pop
or
add
sahf
outsb
xchg
fwait
iret
leave
mov
jg
sbb
add
cmp
inc
rcrb
out
in
jns
mov
push
in
cld
lods
adc
cmp
pop
pop
stos
pushf
stos
add
push
sub
cwtl
mov
xchg
aad
packssdw
ljmp
push
into
insl
rcrb
sbb
push
mov
loope
push
repz
sarb
pushf
mov
inc
push
dec
dec
xchg
dec
xchg
push
int
jge
in
pushf
push
addr16
aaa
mov
fs
add
cmp
outsb
sti
pop
pop
inc
testb
and
or
mov
jno
clc
scas
div
push
push
ljmp
jmp
frstor
ficoml
daa
fdiv
stc
mov
negl
es
jg
ret
outsl
xor
cmpsb
mov
sarb
sti
lds
mov
fmuls
mov
inc
mov
inc
pop
mov
fbstp
icebp
push
adc
fiadds
xor
mov
mov
push
pusha
jl
pop
dec
cltd
inc
outsl
aas
xor
sub
mov
jecxz
mov
mov
sub
cmp
repz
xor
in
rorl
mov
insb
fistps
mov
push
mov
iret
sbb
sub
xchg
lods
mov
lock
adc
gs
dec
es
mov
fwait
jp
addr16
pop
into
push
xor
icebp
out
aas
push
and
xchg
cmc
ljmp
std
stos
mov
and
aaa
subb
cmp
dec
inc
sbb
sarb
movsb
pop
xchg
xor
insl
ds
lret
loopne
stos
les
pop
scas
in
popa
xor
cli
fidivs
out
cmp
add
iret
jns
jae
call
pusha
aaa
adc
mov
push
push
insl
cmp
and
push
enter
jmp
fimuls
test
adc
push
arpl
xchg
xor
leave
fwait
add
mov
mov
push
xchg
sbb
adc
sti
es
cmp
sbb
push
lret
xchg
xchg
sub
jmp
nop
pop
loope
jne
mov
lahf
adcb
mov
cmpb
sbb
insl
std
or
mov
push
enter
sti
xchg
lods
iret
pop
test
in
fwait
mov
sbb
or
inc
or
lcall
pop
xor
push
mov
mov
add
mov
cmp
adc
mov
dec
insl
sbb
and
scas
outsl
aam
mov
push
pop
push
push
xchg
fildll
mov
mov
sub
mov
cwtl
stos
ss
jmp
jge
sbb
jnp
lea
rol
lcall
sub
pop
pushf
jnp
or
cli
push
insb
mov
pusha
outsl
insb
je
and
mov
sbb
jg
sbb
mov
ljmp
insl
scas
jne
xchg
scas
and
imul
pop
rclb
clc
dec
nop
shrb
xor
daa
loop
add
xor
and
adc
jae
or
pop
lahf
sub
andb
stos
jg
daa
outsl
sub
mov
cs
mov
push
jg
sub
xor
and
push
fnstsw
insb
data16
sub
fisttps
sbb
and
pop
ds
push
iret
pop
cs
aaa
rcrl
and
push
mov
add
test
inc
dec
fldt
mov
icebp
out
test
mov
aad
sub
cmp
out
sub
out
dec
mov
pop
dec
sub
adc
test
lret
movb
je
inc
push
mov
push
or
ja
sub
test
jl
adcb
test
fdivrl
nop
cli
push
lods
js
pushl
cmc
fistl
cltd
add
nop
sbb
out
add
fnstsw
subl
lds
lcall
jno
ret
enter
ljmp
jecxz
leave
dec
lods
ljmp
mov
jbe
je
out
popa
testl
aad
and
xor
fsubr
adc
push
mov
repz
mov
and
jo
daa
push
add
pop
xchg
push
and
add
jo
push
mov
lea
push
insb
sbb
cmp
push
leave
inc
pop
es
movsl
or
cmp
sbb
movsl
dec
mov
sub
sti
ljmp
jbe
jmp
fldt
mov
xchg
jg
mov
pop
outsb
xacquire
stc
jnp
inc
test
pusha
ja
in
les
xor
arpl
ja
xchg
scas
or
dec
inc
loope
xor
pop
movsb
scas
movl
sbb
pop
cs
add
ljmp
pop
mov
push
xor
dec
xchg
and
cmc
in
add
pop
rorb
cli
lods
in
nop
dec
mov
adc
addr16
xchg
jns
jo
mov
insb
insl
ret
inc
pop
in
dec
clc
fadds
aaa
adc
cmp
and
sbb
shll
adc
push
jp
sbb
mov
mov
addl
ucomiss
mov
into
stc
hlt
mov
or
mov
outsb
push
cmpsl
loopne
mov
sub
mov
pop
outsb
mov
shl
rcl
out
mov
lds
pop
inc
shlb
test
sub
in
push
and
test
dec
xor
leave
pushf
mov
xchg
in
lcall
adc
mov
andb
test
xchg
sbbl
lahf
insl
inc
loopne
decl
mov
cmp
sbb
pop
xor
pop
dec
int3
xor
jbe
pop
and
jecxz
pop
add
dec
mov
adc
in
push
and
int3
pop
mov
or
add
add
mov
scas
cmpsl
push
bound
inc
out
jns
stos
add
stc
sbb
inc
fcompl
in
jp
sub
cmp
and
cwtl
clc
jecxz
mov
or
sbbl
test
and
iret
push
fmul
rcl
inc
or
mov
mov
jl
inc
or
cmpsb
addl
mov
and
sti
add
push
dec
jnp
pop
in
pop
sub
dec
jo
xorl
push
and
xor
test
adc
cmpsl
and
xlat
test
cmp
mov
dec
sub
mov
addr16
pop
sub
jecxz
movsb
sbb
rorb
push
fldcw
mov
dec
mov
out
jp
xlat
lcall
push
rol
adc
arpl
add
fisubl
jmp
and
insb
cmp
inc
mov
xor
mov
lds
push
lock
stos
cltd
sub
outsl
sub
stos
int
cmpsl
iret
mov
xchg
sub
dec
fcomp
jns
fs
cmp
push
or
test
dec
xchg
pop
cld
jne
pop
pop
adc
and
and
repz
pop
mov
mov
cmc
inc
pusha
mov
xor
adc
jge
xchg
xor
dec
mov
xorb
ret
add
mov
lock
add
outsl
adc
jno
fwait
adc
adc
mov
out
pop
pop
bound
sbb
adc
mov
std
adc
pop
mov
fistpl
cmpb
mov
sub
xchg
mov
movsl
pop
pusha
xor
fbld
sbb
inc
inc
cmpsl
in
sbb
je
outsb
and
sbb
dec
inc
push
xor
sbb
sbb
test
int
inc
or
pop
int
clc
sub
inc
mov
xchg
inc
add
inc
dec
ret
jle
push
bound
cmc
divb
stos
lds
rorb
loope
mov
and
in
xorl
call
sbb
sahf
movb
pop
add
mov
icebp
jp
pop
dec
jne
push
or
jg
cmpsl
cmp
push
or
dec
sbb
ret
cwtl
subl
into
cmp
inc
stos
jge
cs
adc
mov
test
xor
into
push
mov
out
fwait
sub
or
inc
xor
imull
jns
mov
and
jne
lret
fcmovnb
or
cs
js
lahf
mov
outsb
push
adc
popa
mov
jns
out
test
loopne
lds
popa
movb
pop
xchg
iret
jbe
movb
xor
mov
jmp
add
mov
push
repz
push
inc
fs
incb
inc
out
push
jnp
adc
xor
adc
cmp
push
push
jp
mov
add
sub
test
lods
jp
mov
out
inc
into
pop
sbb
add
syscall
mov
and
pcmpgtd
add
push
add
test
mov
sub
fsubl
addr16
dec
sbb
push
pop
test
ss
mov
pop
and
sub
sbb
stos
into
aas
enter
inc
xchg
or
mov
add
xchg
roll
mov
cmp
lods
cmp
inc
and
rclb
add
inc
loop
shrl
in
jne
aam
mov
adc
in
icebp
leave
test
xchg
insl
jmp
orb
enter
leave
imul
adc
cmp
or
out
aam
inc
xor
outsb
inc
jns
pushf
test
pop
fdivrl
je
sbb
dec
loopne
adc
je
dec
into
shlb
jecxz
sub
pop
or
push
push
fistl
pushf
es
adc
js
cmp
inc
aad
std
xchg
icebp
mov
imul
or
imul
inc
sub
pop
sbb
xor
addb
imul
push
fnstenv
add
dec
dec
pop
xchg
pushf
cmpsb
adc
xchg
scas
dec
xchg
sub
add
lcall
jne
clc
movsb
lods
xchg
cld
pop
iret
lock
and
out
or
inc
shrl
sub
lock
test
roll
push
mov
cmp
std
jge
outsb
add
rcrb
xchg
inc
stc
pop
sti
ffree
scas
ljmp
mov
dec
jecxz
or
inc
insb
cld
xchg
out
lret
mov
mov
das
push
pop
outsl
push
xor
movsb
enter
cmp
lret
lock
ds
pop
push
mov
push
test
adc
push
add
mov
inc
jno
gs
sbb
fdivrl
cs
inc
mov
movsl
cmpsb
xchg
loopne
int
iret
clc
xor
fsin
xchg
lods
push
adc
les
dec
frstor
inc
cmp
jo
xlat
in
or
lds
fs
inc
xchg
jp
insl
scas
insl
dec
jl
stos
mov
or
xor
pop
cmp
pop
movl
popl
or
popf
jmp
mov
imul
pop
mov
jmp
jle
sbb
lahf
mov
mov
and
mov
mov
cwtl
arpl
addr16
jle
test
fisttps
je
push
pop
pop
dec
xchg
arpl
fnstsw
decb
add
xchg
cmp
arpl
mov
mov
lahf
mov
fwait
jle
mov
cmp
or
fsts
and
push
int3
or
fwait
andb
in
pop
icebp
fstp
push
cmp
sbb
push
or
and
inc
mov
fcomps
push
call
inc
mov
pop
mov
push
ror
jl
incb
jo
dec
inc
dec
cmp
xchg
sbb
insl
mov
sbb
lods
stos
cwtl
fimuls
repz
std
push
push
xlat
out
push
lahf
xor
xor
out
test
xor
cmp
pop
pop
int
cmpb
cmpsl
nop
xchg
fnstcw
sbbl
jns
cmp
adc
dec
fcoms
mov
jmp
push
xchg
js
sub
push
cwtl
or
push
pop
outsl
inc
dec
inc
shll
loopne
pop
xor
dec
jbe
jmp
jg
js
shlb
pop
jp
or
jp
leave
sub
in
mov
jp
sub
stos
add
sbb
mov
cmc
ret
sbb
lfs
inc
jmp
inc
xchg
xor
inc
aas
aam
pop
pop
mov
xor
cli
jmp
inc
pop
add
pop
inc
dec
rorb
aam
imul
test
aad
loopne
mov
cmp
div
and
inc
lds
mov
mov
jl
push
cmp
or
add
pop
idivb
loop
jo
jge
fildl
xor
inc
push
popaw
inc
and
and
repz
and
mov
std
inc
cs
loop
xchg
dec
in
movsl
sbb
test
bound
mov
or
dec
push
sarb
shl
push
or
stc
sarb
leave
cmpl
jmp
dec
divb
pop
imul
push
add
add
nop
cmpsl
mov
mov
mov
loop
cltd
adc
mov
adc
push
xchg
imulb
sbb
test
mov
aad
fistps
push
scas
out
jnp
pushf
std
jle
mov
leave
andl
jl
push
mov
sub
call
test
int
mov
jno
jno
fistps
fs
inc
push
fsubs
mov
push
fs
repz
dec
mov
push
and
pop
adc
out
mov
push
sub
in
fnsave
jne
cmpsl
iret
and
iret
mov
cmp
adc
inc
add
stc
aaa
inc
add
or
sbb
shrb
pop
mov
jmp
mov
pop
push
sahf
mov
in
stos
push
test
pop
pop
xchg
jecxz
popf
stc
loope
bound
fsubs
jb
sub
pop
and
xchg
leave
adc
mov
cmp
daa
mov
mov
jmp
mov
fsts
mov
in
out
cmp
js
jg
stos
fsts
pop
aaa
clc
xlat
into
add
pmuludq
ret
hlt
scas
xlat
jl
mov
jne
or
push
dec
cmp
pop
cld
fstpl
add
test
push
mov
movsl
or
arpl
ljmp
xor
mov
aas
dec
scas
pop
add
iret
ljmp
test
outsb
mov
mov
cmovnp
xchg
xor
push
ja
sub
lods
fidivrs
test
lods
jne
sarb
popf
adc
dec
cmp
mov
add
jns
aam
lea
mov
sbb
mov
add
cmp
xor
clc
mov
xchg
std
sub
and
adc
divb
ss
adc
jg
pop
fisubrs
dec
sbb
add
ret
std
xchg
repnz
push
adc
sbbb
rcl
push
mov
negl
push
or
xchg
sbb
jno
out
lret
inc
fsubrs
xor
movsb
push
fistps
lcall
xor
mov
push
imul
sub
cwtl
sbb
mov
mov
lcall
mov
stos
or
fistl
imul
push
push
sub
sbb
movsb
sub
imul
gs
mov
ret
inc
jle
add
push
pop
imul
popa
inc
ror
clc
adc
pop
dec
xchg
dec
cmp
push
dec
xchg
scas
cmc
cli
stc
mov
in
push
out
or
data16
mov
mov
xchg
hlt
sub
cmp
ljmp
sbb
sbb
and
setge
lds
stos
lock
jmp
cmp
les
add
mov
xor
and
cld
push
sbb
pop
ss
hlt
outsl
inc
cmp
fisubs
pop
inc
mov
addr16
lods
sub
data16
inc
popa
cwtl
or
enter
int
jecxz
xchg
push
cmpsb
sahf
bound
mov
mov
lcall
enter
mov
enter
push
fs
pop
mov
mov
in
cmp
repnz
sub
xor
std
xchg
repz
cmp
sti
es
pop
pushf
pop
cmp
rcrl
addr16
xchg
fwait
mov
notl
push
icebp
int
sbb
sub
jne
cli
shlb
loopne
or
leave
in
mov
dec
mov
repnz
aam
push
jmp
and
jae
lcall
mov
shrl
adc
add
lods
xor
cli
fnstcw
js
in
addb
inc
ds
mov
insb
ret
mov
cmpsb
adc
testb
jmp
call
lods
loopne
rorb
call
fistps
sti
cltd
add
xchg
arpl
jp
pop
sahf
xor
cmp
cli
xor
mov
sbb
xchg
add
out
or
orl
push
call
scas
shl
mov
jnp
ljmp
aaa
xchg
and
xor
push
repz
loope
sbb
or
lods
fs
xchg
xchg
cli
sub
mov
cld
sbb
dec
sub
sub
mov
out
clc
icebp
and
xor
lods
in
es
lcall
push
aas
or
mov
push
nop
adc
add
xlat
inc
outsl
stos
dec
jae
std
cld
and
gs
cmp
xchg
icebp
test
adc
xchg
fcmove
ljmp
fs
loope
gs
sub
ret
sub
xor
mov
mov
arpl
inc
pop
stos
inc
fcmovnu
push
ret
xchg
jle
mov
mov
cs
xchg
fcomi
mov
push
mov
shrl
push
inc
and
jno
psubusw
push
dec
vmovapd
mov
mov
sbb
adc
or
push
jmp
xchg
outsl
lret
ret
push
pushf
cltd
out
mov
jae
in
sub
loop
not
ljmp
dec
adc
jge
xchg
adc
movsb
add
imul
add
and
loop
push
mov
mov
jl
mov
and
jecxz
add
mov
mov
into
popf
mov
arpl
inc
mov
inc
gs
call
adcb
test
push
andb
sub
or
fsts
dec
mov
jne
xchg
xor
ljmp
push
jbe
pop
adc
mov
xchg
aaa
or
jl
push
in
jnp
sub
test
pop
hlt
jae
inc
cmp
mov
lahf
test
or
not
out
pusha
insb
outsb
nop
jecxz
add
sub
xchg
in
in
icebp
cmp
inc
jmp
loope
xchg
sub
xchg
xor
mov
jns
add
das
and
sbb
ret
aad
movsl
popf
test
scas
lea
jbe
shrb
xor
dec
cmp
and
data16
incl
ss
add
test
push
xorl
xchg
imul
out
jmp
dec
mov
jae
mov
add
pop
fsubrs
popa
xchg
push
cld
pop
dec
inc
mov
xor
stc
rep
data16
dec
jmp
jne
dec
out
mov
jmp
test
sub
pop
inc
sbb
add
mov
aaa
add
sbb
push
xchg
cmp
out
mov
inc
sbb
int3
dec
mov
xor
or
xor
mov
in
mov
cmpsb
sub
inc
xchg
and
pop
loop
xor
popf
not
das
sbb
hlt
sahf
xor
daa
jmp
cld
loope
and
inc
mov
test
jmp
mov
arpl
fsubl
push
lock
iret
pop
and
ret
mov
jecxz
mov
pop
fcompl
or
pop
fsubp
xchg
xchg
dec
cmp
insl
ljmp
inc
and
mov
js
imul
or
mov
pop
jnp
in
xchg
push
push
mov
inc
mov
mov
into
xchg
push
cwtl
cltd
lahf
cmpsb
push
and
inc
dec
and
adc
cmc
gs
das
inc
cli
cwtl
fs
push
fs
push
hlt
jno
js
mov
in
test
inc
popa
movsb
out
mov
repz
adc
loope
leave
dec
addr16
pop
and
aas
test
add
je
aam
pop
sub
dec
mov
pop
dec
cmp
shrl
sbb
not
cmpsb
ss
punpckhdq
not
sbb
lret
dec
jbe
insl
cmp
clc
push
in
pop
xor
lret
sbb
or
push
or
mov
nop
insl
push
sub
shr
inc
mov
mov
scas
movsl
es
cs
inc
mov
mov
jp
or
mov
test
sbb
jnp
pop
jo
in
dec
mov
shr
xchg
pop
push
pop
add
shr
dec
mov
cmc
rclb
test
loopne
mov
mov
cli
ja
jp
push
aam
sub
pop
in
jecxz,pn
gs
or
cmp
jno
dec
jmp
add
jmp
shrb
jbe
sti
pop
push
xchg
jp
sahf
fs
push
scas
xchg
xchg
into
mov
lock
mov
jns
call
stc
mov
jmp
cmpsb
bound
pop
or
repz
test
ret
xchg
lock
pop
pop
mov
stc
hlt
sarb
jae
inc
pop
pop
nop
fwait
sbb
cltd
sbb
and
daa
cmp
sti
add
es
mov
cmp
pop
or
fstpl
push
jae
mov
dec
movsl
xchg
cmp
cmp
arpl
inc
sbb
fisttpl
lret
daa
cmp
pop
mov
test
inc
pusha
fistl
sahf
mov
cmp
fidivrs
pop
mov
sub
xor
fmuls
xchg
jne
mov
and
jmp
jb
std
out
lret
int3
pop
js
jmp
pop
xchg
test
pushf
mov
mov
lcall
aam
xor
adc
mov
cmpb
xchg
rorb
enter
mov
pop
outsb
pop
lock
sub
ja
sbb
mov
push
sti
and
add
jle
mov
jb
push
and
dec
enter
mov
push
rorl
dec
and
dec
mov
mov
inc
loopne
or
xchg
pop
cmp
mov
pop
cs
stos
adc
push
cld
cltd
mov
mov
pop
xor
je
pushf
inc
and
xor
pop
xor
das
repz
cmp
stos
pop
orl
dec
mov
mov
test
es
mov
ret
or
mov
push
push
sub
insl
test
cmp
adc
mov
das
mov
aas
push
hlt
sarb
sahf
dec
add
movsl
mov
mov
es
pop
je
cmp
mov
sbb
movsb
es
dec
sub
jb
mov
sahf
inc
adc
out
add
pop
leave
in
aam
lods
cmpsb
bound
popf
sbb
rorb
icebp
or
cmp
out
sub
cltd
add
ss
int3
mov
jle
int3
lret
jecxz
sti
jb
sbb
daa
add
push
pop
jbe
imul
daa
or
mov
xor
dec
imull
xor
adc
mov
arpl
jbe
jecxz
dec
mov
pop
sbb
mov
movsb
pop
pop
ss
mov
sub
movsb
mov
in
xor
inc
rorl
dec
jg
lock
xchg
stc
je
mov
movsl
in
daa
pop
mov
out
gs
test
inc
jmp
inc
sub
pop
jb
sub
imul
fcompl
jae
fidivl
pop
repnz
and
lahf
mov
test
test
int3
cmpsl
ret
cmc
mov
sub
mov
push
lcall
mov
push
rcrl
cs
jge
gs
pop
ja
inc
mov
fstp
push
das
add
rolb
cmc
and
or
popf
jge
ljmp
cmp
call
outsl
dec
out
lods
out
adc
shlb
mov
mov
and
out
popa
sub
lea
rcrb
or
mov
jmp
stc
jns
test
test
and
lods
fcmovnbe
xlat
adc
sub
clc
loope
in
popa
roll
pop
stc
std
int
jmp
sbb
push
jg
adc
or
mov
mov
clc
int
call
mov
push
add
aad
dec
mov
adc
mov
cmp
in
out
mov
sbb
sbb
rcrl
sub
or
mov
cmpb
cli
xlat
and
test
push
mov
out
movsb
cmp
inc
xlat
in
addl
xchg
mov
int
jmp
adc
dec
jae
ljmp
dec
ljmp
mov
mov
inc
mov
cmovl
sbb
or
push
mov
into
ss
repnz
mov
or
stc
fbld
shrl
adc
lods
stos
nop
outsl
int
roll
xchg
push
int3
aad
mov
xchg
dec
inc
enter
inc
mov
fmul
or
push
adc
inc
sbb
add
ret
dec
shll
jecxz
loop
sub
xor
movb
lahf
xor
movl
lods
imul
insb
pop
aam
dec
movsb
cmp
mov
out
aas
std
mov
jge
hlt
inc
xchg
cmp
pop
movsb
add
ds
cmp
gs
lock
xchg
or
and
int3
ljmp
cwtl
addr16
pop
xchg
lret
add
sub
sarl
lea
lret
jno
xchg
cmc
inc
repnz
out
mov
sbb
or
xor
fwait
lock
adc
int3
insl
test
clc
imul
jae
rcrb
dec
inc
adc
sbb
dec
push
dec
xor
movsl
test
aaa
das
jnp
ss
popf
mov
aaa
clc
fwait
inc
outsl
mov
xor
lret
sbb
fcomps
stos
mov
add
adc
inc
push
lret
add
push
xchg
xorl
lods
jne
ja
mov
jno
jb
lcall
mov
cmp
mov
clc
in
or
mov
cld
lahf
inc
test
cmp
mov
dec
jnp
mov
cltd
movsb
xchg
lock
outsl
adc
xor
scas
push
jnp
dec
outsb
lock
mov
cmpsb
cmpsl
pop
jmp
loop
add
jmp
js
mov
es
jmp
fcmovnbe
and
aaa
leave
sub
push
push
les
inc
loope
outsl
xor
in
jge
es
ret
outsl
or
pop
pop
or
mov
sub
aam
pop
cmp
push
movsl
fisttpll
cmpsb
imul
xchg
xchg
xchg
lahf
push
xlat
ret
outsl
sti
vpmadcswd
mov
shrl
insb
lods
mov
mov
push
lds
jno
mov
mov
mov
push
mov
add
and
popa
mov
fidivrl
stos
jne
shll
lcall
mov
pop
ljmp
sbb
movsb
inc
mov
jmp
xchg
pop
je
mov
pop
rclb
mov
sbb
in
fimull
jge
cmp
test
xchg
or
add
inc
loop
std
mov
pop
test
loop
or
loopne
push
pop
inc
test
mov
sbb
push
shrb
sti
xlat
in
mov
cli
and
in
nop
xor
jmp
adc
adc
jl
ret
mov
jbe
mov
je
jo
pop
or
pop
sti
aas
pop
sti
insb
and
dec
push
test
add
and
mov
jle
fisubs
adc
mov
mov
mov
dec
jl
lock
mov
mov
ja
imul
cmp
fcmovbe
lret
mov
inc
in
loope
ds
addr16
mov
inc
push
inc
stos
out
adc
test
jmp
pushf
xchg
sbb
adcb
sub
imul
je
push
ds
jns
lcall
add
test
cmpsl
lahf
out
cmpsb
outsl
dec
add
mov
fsts
cmp
and
inc
push
ds
lods
mov
fs
je
and
xchg
in
xchg
pop
scas
cli
xor
cmpsl
addr16
std
cmp
icebp
jp
mov
hlt
sbb
in
iret
dec
adc
lea
rcrl
dec
push
mov
das
shll
and
daa
push
outsl
int3
sbb
lods
mov
dec
lods
mov
jle
rorb
in
cmp
push
inc
cmc
pusha
and
sub
cltd
adcb
add
xlat
mov
pop
js
pop
test
adc
add
sub
pusha
insb
lret
dec
enter
repz
or
ja
sbb
gs
xchg
jne
dec
jecxz
pushf
ret
sbb
insb
loopne
fsubrl
in
jae
lods
cs
jbe
xor
cmp
mov
or
je
in
push
aad
adc
es
pop
add
lret
loopne
xor
mov
js
dec
inc
repz
pop
imul
mov
inc
cmp
sub
repz
out
xlat
pop
fisttpll
push
pusha
lods
int3
xlat
or
adc
jne
pop
push
data16
push
sub
out
cmpsb
imul
xor
xchg
and
xor
push
in
xor
jmp
loope
fistpl
sub
pop
dec
cmp
scas
jp
imul
aaa
loope
js
dec
fisttpll
xchg
mov
fwait
in
pop
pop
das
stos
out
jecxz
fbstp
push
rol
bound
sub
jo
shlb
mov
push
inc
dec
clc
imul
mov
jbe
inc
outsb
add
in
mov
mov
idivb
push
jnp
loopne
push
push
out
xlat
hlt
adc
loope
cmp
mov
xchg
xor
repnz
xchg
stc
call
std
inc
rcr
mov
pushf
or
push
sub
push
or
shrl
aaa
std
jmp
xchg
cmpsl
pop
xchg
and
mov
lods
xchg
xor
lret
bound
out
sahf
mov
mov
lods
pop
cltd
scas
dec
movsl
adc
cmpsl
xor
hlt
or
sahf
mov
stos
repz
ljmp
out
adc
pop
test
and
insb
shlb
mov
cmp
push
ja
adc
and
lods
pop
outsw
test
mov
pop
aam
rcrb
out
inc
into
in
out
push
xchg
mov
mov
push
clc
test
jmp
addr16
pop
stc
mov
lods
fmuls
mov
bswap
fisubrl
pushf
mov
mov
inc
sbb
scas
or
push
or
jp
push
shrl
popa
fisubrs
cmp
sbb
inc
push
cld
pop
iret
cmp
jge
xchg
mov
inc
cmpl
movsb
xlat
pop
sub
sbb
loope
fisubl
das
push
push
add
cli
shll
xchg
movsl
fcomi
sbb
sub
cmc
insb
push
pop
dec
jmp
adc
mov
xchg
push
mov
arpl
mov
pop
pop
hlt
leave
lret
add
lahf
or
sbb
sbb
call
mov
aad
es
fs
jl
push
mov
stos
pop
outsb
call
rolb
xchg
outsl
cmp
loop
push
jb
jbe
out
dec
lcall
push
test
cmp
or
mov
or
mov
pop
test
xor
xor
loop
enter
sahf
into
or
cmp
pop
mov
mov
and
call
std
xor
ss
push
daa
icebp
ja
xor
std
add
inc
cld
or
scas
jb
cmp
insl
or
mov
fwait
shl
dec
movsl
adc
hlt
repz
cwtl
daa
pop
push
sbb
loopne
ljmp
insl
mov
call
inc
call
pusha
mov
add
mov
gs
dec
test
mov
jne
fisttpll
jbe
out
or
lods
movsb
xchg
mov
aam
adc
sar
pop
mov
stos
loope
out
mov
mov
pop
inc
and
sub
stos
mov
sub
leave
mov
adc
test
js
add
jecxz
xchg
inc
cwtl
insl
rcrb
cmp
jae
lret
out
fcomi
aam
fcompl
mov
adc
popl
cli
cmc
lcall
push
cwtl
sbb
pusha
xchg
ficomps
mov
in
fbld
push
and
jnp
xor
lock
aad
cmpsb
data16
sbb
outsl
sub
mov
dec
imul
inc
fcoml
and
pop
sub
sub
sbb
push
mov
cmp
aam
push
mov
repz
jbe
test
push
sbb
pop
xchg
pusha
test
sarb
lea
pop
fiadds
jmp
and
cwtl
mov
dec
inc
shrl
cmp
mov
push
mov
ljmp
lods
pop
je
cmp
and
push
sbb
cmpsb
fwait
mov
js
jb
cmp
adc
add
inc
and
in
adc
inc
cmp
in
lock
fisubs
sbb
push
jae
jo
push
fisttpll
mov
mov
sub
lret
mov
jge
lahf
loopne
das
add
leave
or
sbb
ret
sbb
pop
jg
pop
jecxz
daa
lret
repz
jmp
pop
test
push
mov
sub
mov
pusha
je
or
inc
lods
or
in
adc
ret
js
xchg
inc
nop
aad
lods
cmpsl
push
mov
dec
out
movsb
std
aad
dec
in
jno
into
adc
mov
xor
push
xor
dec
xchg
mov
mov
ljmp
fisttps
mov
mov
jecxz
or
jge
mov
xchg
push
xchg
shlb
fsubrl
or
jmp
enter
ficomps
inc
cwtl
cmp
pop
mov
sbb
mov
loopne
jg
mov
cmp
call
push
imul
aad
xchg
jb
jae
dec
sub
mov
pop
shl
pop
jne
mov
adc
sub
jo
pop
pop
push
fidivl
pop
frstor
adc
testb
outsl
push
add
or
fdivl
jl
inc
mov
cmpsb
mov
inc
inc
dec
jge
aad
sbb
sti
or
fimull
and
es
pop
cmp
test
cmpsb
dec
jno
fcoms
sub
out
sub
outsb
xchg
cmpsb
cmp
lcall
sti
dec
imul
pop
mov
xor
mov
adc
pop
hlt
add
and
xor
lods
xchg
add
cmpb
adc
or
xchg
aas
inc
jns
sub
fsubrp
mov
xor
outsb
icebp
push
or
fbstp
sahf
mov
shr
cmp
jno
lretw
add
popf
jo
pushf
arpl
adc
push
xchg
fdivs
rorl
rol
push
dec
jmp
or
cmp
xchg
out
adc
rcrb
cmp
inc
out
mov
push
fsubrs
popf
pop
pop
mov
ljmp
inc
jns
mov
adc
das
pop
and
sub
icebp
cs
lahf
adc
jge
lds
inc
pop
inc
clc
imul
inc
and
xchg
xchg
xchg
inc
mov
dec
sbb
jae
add
cmc
adc
imul
xchg
movsb
ja
ret
pop
lea
dec
jmp
std
adc
and
test
adc
xchg
sbb
repz
push
jge
in
dec
aad
push
lahf
das
cld
jl
ljmp
mov
mov
push
inc
push
dec
mov
dec
adc
mov
sti
mov
pushf
pusha
mov
push
mov
xlat
insb
push
cs
les
xchg
stc
sbb
mov
sbb
mov
mov
push
xor
mov
lods
cmpsl
iret
test
or
lret
push
jg
out
xchg
mov
dec
xchg
cmp
push
cltd
flds
inc
xor
daa
loop
cmpsb
jo
or
iret
jmp
push
mov
gs
mov
jl
int3
xchg
shrl
add
xor
pop
gs
ret
mov
jmp
adc
cmpl
mov
leave
addr16
stc
push
sub
loopne
js
mov
aad
testl
sbb
jp
sbb
pop
cltd
push
pop
imul
inc
push
dec
add
shlb
mov
lock
mov
rcrb
inc
shlb
mov
mov
rcl
jp
sbb
out
mov
aam
test
rcll
sbb
addr16
cli
lret
mov
and
lcall
sahf
dec
mov
loop
out
into
cmp
push
mov
xlat
or
nop
sub
inc
shll
mov
dec
ret
out
mov
imul
fnsave
sbb
cltd
mov
outsb
das
addr16
push
dec
sub
into
and
add
push
ja
mov
cmc
stos
add
mov
cld
movsb
xchg
push
mov
adc
popf
push
insl
idivl
sub
insl
push
mov
in
xchg
push
adc
pop
adc
out
int
pop
mov
mov
loope
push
jg
push
adc
adc
loope
jns
addr16
ds
jge
jg
and
mov
fs
sbb
lret
fdivp
dec
pextrw
cwtl
sub
jne
leave
lahf
dec
push
push
vmwrite
mov
or
push
add
xlat
fimuls
push
xchg
hlt
das
xor
xchg
arpl
dec
hlt
pop
sar
loop
adc
adc
stos
mov
xchg
jno
cmp
xor
push
mov
lds
xorb
fwait
xchg
add
mov
mov
jl
in
scas
aad
enter
mov
sbb
sbbb
add
fnstenv
sahf
sub
shll
mov
cmc
push
sub
cmp
cmp
xchg
mov
rcr
or
mov
sub
fldcw
jl
lods
clc
pop
pushf
mov
je
bound
cmp
pop
insb
mov
mov
mov
or
das
fcompl
and
sub
lea
ljmp
cmpsb
and
dec
push
push
mov
mov
fwait
cmc
outsl
into
test
and
and
sbb
or
dec
out
stos
subb
fadds
push
out
imul
lahf
push
xor
mov
push
dec
pop
add
les
pop
stos
out
imul
inc
sbb
das
xchg
pop
subb
inc
rcrb
or
outsb
ficompl
push
sbb
add
mov
into
scas
cmp
xor
or
hlt
mov
arpl
iret
sbb
push
leave
push
pop
jg
fnstenv
mov
loope
sbb
dec
ss
rcl
repnz
sbb
or
loopne
jnp
rolb
mov
mov
lea
mov
xchg
sub
pop
ds
or
aad
xor
mov
push
movsl
jl
xchg
ret
inc
test
push
mov
adc
addl
pushl
xor
xchg
ja
add
ljmp
inc
add
pop
bound
dec
cs
test
push
das
inc
es
push
jns
pop
jg
cmp
jmp
popf
das
xchg
lds
cmp
cmp
dec
aaa
mov
dec
int3
xchg
inc
mov
mov
into
ja
inc
mov
pop
push
cmp
xchg
mov
rcrl
scas
inc
cmpsl
inc
pop
jg
push
pop
mov
mov
sub
fs
pop
arpl
and
loopne
ljmp
out
pusha
filds
and
inc
std
dec
int3
jmp
loopne
xchg
testl
gs
loope
inc
xlat
push
enter
aam
out
cwtl
sub
jnp
mov
jae
inc
mov
jmp
loopne
mov
add
addr16
mov
push
xchg
xchg
clc
inc
sub
clc
inc
pop
pop
mov
adcb
add
or
and
mov
dec
test
push
jb
dec
rcl
jl
movsl
lret
aas
aas
sub
mov
xorl
std
arpl
xlat
mov
mov
loope
mov
repnz
mov
dec
daa
repnz
addb
xor
pop
movsl
jge
stos
sbb
test
mov
xchg
das
pop
push
into
ror
jmp
dec
dec
sbbl
out
sbb
inc
mov
icebp
mov
gs
jo
out
xor
xchg
xor
lds
jp
sti
dec
ret
pop
add
mov
lods
shlb
fbstp
leave
stos
test
mov
inc
mov
outsl
lcall
mov
into
jmp
movsb
fcmovu
push
adc
dec
add
mov
mov
cmc
fnsave
repnz
dec
mov
inc
fstps
sub
les
inc
dec
lods
lds
mov
xlat
push
cmp
subl
cmp
sbb
push
sub
add
ja
cmp
mov
adc
sbb
mov
lods
into
push
adc
xchg
call
nop
jo
push
mov
mov
cmp
xchg
mov
out
cmp
adc
in
sbb
bound
inc
rclw
and
lds
adc
cmp
stos
sub
repz
jmp
mov
lcall
repz
jo
mov
cmp
in
xor
enter
push
xor
pop
fmul
pop
dec
push
mov
xchg
sub
and
mov
mov
pop
aam
xor
shll
xchg
pusha
fstp
bound
movsl
push
xchg
mov
cmpsl
in
jbe
xor
inc
add
xor
rclb
jl
stc
add
xchg
sbb
and
mull
sub
push
xor
xor
stos
mov
fnstcw
dec
inc
andl
out
mov
cmp
test
fwait
in
scas
hlt
sbb
in
jg
mov
movsb
loopne
in
testl
iret
xchg
mov
mov
cmp
inc
pop
mov
adc
jae
add
adcb
mov
add
mov
or
lcall
mov
xchg
xchg
pop
cmpsl
xchg
jnp
mov
sbb
push
mov
cltd
cmp
call
rolb
popa
mov
mov
push
mov
les
shlb
in
fistpll
or
test
cmp
loop
jg
push
aaa
in
mov
push
pop
ljmp
outsb
mov
xchg
lods
cmp
mov
fidivl
lds
push
outsl
data16
mov
and
xor
outsb
xchg
jbe
adc
outsb
dec
and
push
pop
xchg
jp
out
popf
pop
jns
in
mov
cmpb
jmp
icebp
mov
ret
call
ljmp
mov
cmc
cmc
sti
fsubrl
lahf
mov
sarb
jmp
out
incb
lcall
inc
mov
movsl
lahf
in
jno
jno
fld
and
adc
je
sbb
int
lret
shl
cwtl
pop
je
push
cmp
xor
iret
mov
imul
mov
jnp
sbb
popa
pop
pminub
iret
test
jecxz
jmp
mov
mov
jo
call
sbb
sahf
cmp
arpl
push
adc
fiadds
cld
xchg
test
and
out
pop
push
insl
mov
loop
out
ret
enter
push
sub
push
sbb
inc
and
mov
pop
fmull
mov
movsl
push
sub
push
loopne
jbe
cmp
test
mov
push
cmp
mov
or
pop
add
push
pop
dec
test
cld
out
in
inc
pushf
xor
adcl
adcl
pop
pop
addr16
cld
pop
jno
addl
and
add
loope
dec
adc
push
sbb
adc
jmp
mov
pop
xchg
aas
inc
jle
out
leave
movsb
push
dec
mov
dec
int
pop
call
push
mov
rclb
stos
pop
int3
mov
xor
or
in
mov
mov
leave
pop
stc
push
xlat
fsubrs
mull
pusha
sbb
sub
lods
dec
pop
out
rcrl
repnz
sub
lea
imul
jno
iret
and
or
and
pop
dec
cmp
ret
loope
mov
movsl
test
mov
bound
pusha
out
stc
push
push
xor
bound
popl
dec
or
imull
xor
nop
push
aas
inc
mov
test
std
lea
test
or
lods
jnp
cld
pushf
adc
out
das
adc
cmp
jns
push
jp
push
insb
xor
repz
popa
stos
in
rclb
mov
jmp
popf
xor
cmc
cmp
adcl
lea
pop
mov
push
pop
or
mov
sbb
insl
rorl
movsl
lock
xchg
bound
mov
cmp
stos
xchg
jmp
loope
jb
dec
mov
les
dec
jg
or
pop
lret
mov
icebp
loope
xchg
iret
jp
pop
negl
test
push
repnz
fs
mov
mov
mov
call
insl
and
negl
inc
in
addr16
daa
add
xchg
xchg
cmp
cmovp
sarb
into
ret
ret
hlt
lds
incl
push
inc
mov
lret
xchg
xor
sahf
sbb
ret
add
jns
bound
fisubrl
sub
incl
cwtl
mov
test
mov
mov
pop
mov
aam
lahf
fimull
xchg
jmp
fidivl
inc
ss
insl
mov
inc
pop
mov
mov
dec
shld
inc
jp
and
orl
int
fbstp
sub
test
and
jle
stc
shll
lods
xchg
enter
out
and
lret
cmp
shlb
imul
and
iret
outsb
in
xor
sbbl
sbb
or
shrl
push
movb
jno
shr
jmp
mov
aas
sub
xor
xchg
push
lods
sub
sbb
into
ss
dec
dec
push
lahf
dec
out
cmp
jns
popf
outsl
push
stos
call
jns
push
negb
mov
mov
je
sub
dec
sub
mov
arpl
out
pop
insb
lcall
int
pop
add
cmp
stc
cmp
test
mov
mov
push
xchg
pop
or
aad
dec
inc
movsb
adc
divl
cmp
jg
pop
mov
and
mov
mov
pop
cmpb
push
sub
imul
sbb
pop
rcll
ret
pop
xor
jl
xchg
mov
outsb
outsl
fdivrl
jnp
mov
pop
cmp
add
dec
pop
jne
xchg
inc
cmp
roll
mov
jl
push
scas
lcall
cli
jnp
push
jo
jno
and
add
movsl
imul
outsl
in
aam
dec
rcrb
sti
enter
stc
cli
adc
adc
popa
push
rclb
pop
add
xor
cmp
xchg
push
lock
dec
sub
div
add
pop
negl
inc
mov
xlat
xchg
lods
cmpsl
inc
mov
jb
daa
into
add
push
sbb
adc
pop
dec
push
lock
inc
pop
sub
xchg
push
lods
pop
cltd
popa
cmp
inc
add
pop
sbbl
cltd
xchg
cmp
cmpsb
movsb
mov
dec
mov
cltd
frstor
inc
mov
aas
dec
and
out
lcall
mov
sbb
xor
fs
pop
push
push
mov
inc
dec
push
xor
je
dec
adc
pop
ficoms
push
mov
push
repnz
mov
fidivl
push
movsb
add
out
push
jge
adcb
leave
cmpsb
cmp
shl
dec
sub
enter
enter
std
ret
decl
dec
aaa
test
cmp
faddl
subl
and
loope
mov
push
and
shufps
insb
in
iret
xorl
lea
aam
sti
bound
adc
std
les
cmp
mov
inc
inc
jbe
xor
test
pop
loope
sub
mov
maskmovq
xchg
adc
push
mov
arpl
xor
xchg
add
xchg
rcrl
cmp
imul
adcl
inc
sar
popf
das
mov
mov
jmp
pop
ljmp
xor
inc
testl
loop
push
clc
orb
pop
sub
jns
test
and
lahf
push
jl
cltd
test
and
inc
sub
popl
out
rorb
fnstsw
push
pop
inc
pop
dec
inc
out
pop
shl
sar
jl
xorl
push
out
sti
mov
mov
andb
mov
pop
loope
gs
lock
test
fistl
iret
in
repz
or
dec
cmpsb
scas
out
rorb
xchg
mov
lret
mull
adc
mov
mov
and
push
add
mov
mov
out
jnp
push
sub
mov
cmpsl
je
jo
arpl
dec
inc
clc
pusha
inc
pop
out
test
icebp
push
push
fistps
cltd
or
xor
push
enter
ficompl
dec
out
out
pop
mov
shlb
orb
fcompl
and
flds
int
into
inc
and
shlb
pop
in
fucomip
xchg
cld
in
outsb
xor
fisubrl
inc
bound
mov
xchg
mov
sbbb
mov
daa
outsb
inc
popf
sub
out
shlb
and
jo
push
lock
inc
xchg
sbbb
and
xchg
lahf
outsb
jp
adc
aad
jne
push
pop
mov
jns
sub
pop
or
push
inc
enter
pop
pushf
bound
cmp
mov
mov
test
das
pop
inc
call
sbb
add
inc
sub
sbb
cmp
mov
pop
push
mov
push
push
mov
lcall
clc
shll
and
xchg
jge
mov
outsl
mov
or
or
fisttpll
cmp
cwtl
rep
jb
sbb
ss
sbb
push
push
loope
movsb
lret
xor
movsb
jge
movsl
add
pop
xchg
fisubrs
dec
bound
sub
jmp
loope
stc
and
inc
icebp
and
and
nop
stos
bnd
in
test
out
xchg
mov
xor
jb
mov
ja
xchg
outsb
push
mov
cli
add
out
lods
jae
out
jnp
test
xor
inc
xchg
stc
sti
jno
cli
mov
cli
sarl
addr16
push
cmp
frstor
repnz
cmp
jmp
mov
imul
xor
ret
mov
push
mov
insl
add
adc
dec
xchg
add
or
jns
outsl
leave
rclb
add
aaa
add
pushl
xlat
xchg
scas
shlb
in
orb
movsl
rcrb
stos
push
dec
shrb
negl
fidivs
add
adc
cmpsl
out
sti
cmp
mulb
xlat
mov
xor
add
sub
push
imull
pop
out
sar
test
mov
dec
cmpsb
adcl
es
outsb
repz
arpl
xlat
fwait
xchg
pop
cmp
int3
pop
mov
in
fs
xchg
int3
dec
test
ja
cmc
xor
mov
out
dec
in
mov
mov
call
add
cmpsl
xor
cmp
mov
jno
cmpb
cmp
and
adc
sbb
push
rolb
mov
and
fnsave
push
insb
fdivrl
je
fwait
xchg
fdivrs
lea
mov
adc
pop
dec
mov
mov
pop
ds
jne
mov
sbb
mov
pop
jp
mov
mov
mov
lcall
addb
out
sti
cmc
cmp
inc
jbe
xor
push
cmp
roll
xor
and
pop
enter
cmp
mov
pusha
inc
in
mov
xor
rol
mov
or
push
mov
clc
pop
outsl
out
jno
add
in
mov
sahf
loopne
je
jg
movsl
cwtl
or
mov
mov
lahf
dec
mov
inc
mov
adc
pop
cmp
and
sub
nop
dec
adc
icebp
in
cmpsl
inc
push
pop
hlt
push
inc
mov
cmp
and
inc
add
loope
lret
sahf
cmpsl
xor
xor
sub
jns
xor
adc
sub
ljmp
cmp
push
dec
xchg
dec
mov
mov
mov
dec
out
dec
mov
out
in
iret
fdivrs
mov
mov
jne
push
sub
push
gs
pop
pop
icebp
cli
and
sub
nop
mov
std
xchg
mov
std
cwtl
jle
cmpb
add
popa
hlt
push
sbb
pop
adc
pop
int
cmpsb
sub
mov
mov
icebp
imul
jmp
mov
sahf
das
push
js
xchg
pop
notl
ret
pop
inc
push
in
outsl
cmpsl
jecxz
sub
cwtl
cmp
test
or
jno
nop
cmp
mov
cmpsl
cmp
loopne
pop
mov
mov
cmpl
sub
xor
lret
xlat
mov
sub
xchg
push
mov
stos
xchg
je
ja
cmc
xorb
mov
mov
mov
mov
rcl
fstpt
xchg
sub
mov
fstpl
xor
out
and
lods
pop
xor
repz
add
cmc
cwtl
mov
inc
push
add
test
push
aad
fs
imul
push
jmp
mov
jae
sbb
push
jns
sub
pop
xor
shlb
test
scas
mov
pop
scas
and
clc
or
push
push
jecxz
mov
xchg
xchg
mov
dec
and
pop
jae
push
cmp
aas
dec
mov
test
ret
push
fstpt
mov
aad
mov
in
jp
daa
mov
adc
mov
mov
xchg
mov
or
fs
mov
fisttpll
sub
pop
sahf
inc
sub
cli
xor
pop
dec
ds
push
inc
sbb
cmpsl
cs
rcl
or
fwait
and
mov
fs
nop
stc
jge
iret
negb
mov
add
sbb
cmp
dec
jo
xlat
sti
mov
loop
notb
pop
cli
cs
and
gs
xor
add
pop
push
add
roll
and
xchg
cmpsb
jmp
scas
cmp
repz
push
add
int3
pop
dec
adc
cmp
mov
sub
inc
xorl
jbe
rcrb
call
inc
js
mov
xor
and
sbb
or
in
mov
push
clc
cmp
in
popa
insl
push
in
cmp
add
movsl
adc
mov
or
jno
sbb
dec
test
xchg
fdivr
pop
and
ror
sub
ljmpw
scas
sahf
sub
pop
push
stos
repnz
ret
imul
xchg
inc
dec
xor
leave
push
mov
icebp
fiadds
cli
stos
sbb
cmp
or
sbb
xlat
mov
pop
lock
out
sahf
rorb
aam
mov
xor
sub
mov
add
mov
in
psubq
mov
pop
js
dec
lods
data16
push
pop
jno
pop
dec
lock
popf
pushaw
insl
int
push
xchg
add
scas
jp
imul
mov
add
pop
outsb
fistl
and
sarl
inc
stos
and
scas
ficomps
adcl
sbb
inc
sbbl
mov
movsl
call
mov
mov
inc
inc
mov
jne
xchg
insl
ds
mov
push
or
dec
xchg
pop
notl
lahf
imul
inc
nop
pop
ljmp
movsl
fisubrs
jg
jp
xchg
jmp
mov
mov
into
xor
add
xchg
sbb
mov
inc
jne
cmp
pushf
or
pop
lcall
outsb
icebp
or
hlt
cmp
mov
lret
nop
cltd
sbb
ljmp
sub
xlat
stos
mov
xchg
cmp
loopne
call
mov
in
sub
test
cld
imul
jnp
push
xchg
adc
cs
aaa
mov
or
pop
inc
cmpb
mov
push
add
mov
mov
out
test
mov
fst
mov
cmc
test
or
cld
test
mov
in
ja
cwtl
sub
loop
sbb
adc
nop
mov
adc
xor
adc
dec
jg
frstor
xor
cmc
test
cld
xchg
inc
inc
adc
sbb
movsb
mov
fiadds
int
xor
sbb
mov
xchg
aad
mov
fwait
rorl
es
out
jns
sbb
sahf
in
fisubrl
pop
in
imul
mov
addr16
mov
inc
mov
in
add
ds
loope
mov
adc
sub
mov
cmpsl
dec
pop
mov
dec
xor
scas
add
lods
das
movsb
sub
pop
fiadds
inc
fidivrl
mov
movsb
lods
jle
mov
call
push
dec
xor
mov
fs
filds
addr16
mov
jns
pop
out
push
adc
cmc
pop
jnp
or
out
ljmp
sbb
cli
inc
inc
dec
mov
xor
pop
mov
ss
push
pop
les
ret
les
push
out
fwait
addr16
lret
cwtl
inc
cmp
shrb
sub
fs
rclb
lea
or
jmp
xchg
xchg
hlt
sub
mov
cmp
push
add
hlt
sbb
fs
ret
ret
bound
push
loopne
out
mov
cltd
ljmp
cmp
imul
popf
and
push
cmp
mov
cmp
mov
push
sub
fists
cwtl
sbb
stos
sub
and
xor
or
sub
mov
adc
daa
je
push
fcmovnu
sub
shll
sub
or
jns
add
insl
loopne
ret
je
int
jmp
jns
add
nop
lock
mov
sarb
mov
mov
xor
sub
pop
xor
push
aas
mov
sub
orl
icebp
push
mov
jo
xchg
test
mov
xchg
jbe
inc
rcll
xchg
mov
jns
lahf
in
jmp
dec
sbb
cli
mov
daa
inc
jno
lret
push
inc
or
int
negb
repz
cmp
int3
mov
test
xchg
stos
clc
idivb
xchg
outsl
insl
mov
xlat
mov
xchg
inc
lahf
scas
and
push
stos
insb
testb
mov
mov
test
aam
adc
mul
mov
aaa
pushf
out
jecxz
ret
adc
addr16
int
call
sahf
cmpsb
jecxz
std
sub
adc
pop
test
not
movsl
popf
sbb
gs
push
mov
mov
daa
push
inc
bound
sub
ljmp
movsb
jne
cmp
push
jge
stc
pop
fwait
roll
ja
push
aam
iret
jmp
adc
shrb
insl
fidivrs
pop
lret
pop
ds
out
arpl
cmpsl
out
fistps
stos
mov
fwait
pop
adc
pop
sub
adc
ljmp
xchg
adc
in
jns
add
xor
les
sbb
push
xor
loope
movsl
xchg
mov
popa
mov
mov
mov
fsub
cld
cmpl
fnstcw
push
data16
dec
add
les
aad
test
cmp
out
mov
sbb
mov
daa
stc
inc
mov
push
cmp
scas
push
loopne
lret
sub
ret
or
outsl
cmp
shrb
add
xchg
mov
fs
scas
cmpsb
dec
jne
fstps
je
scas
cmp
jnp
nop
fildl
fsubl
je
in
mov
dec
jmp
ficoms
lods
repnz
adc
and
mov
in
xchg
out
inc
xor
call
push
rolb
iret
jp
ljmp
and
push
loopne
push
adc
insb
lods
fidivrs
das
pushf
pop
or
std
aad
add
test
or
out
adc
test
mov
add
fcompl
in
push
push
jb
aad
icebp
push
orl
mov
xorl
insl
push
xor
popf
lods
js
pop
pushl
lret
bound
shrl
mov
inc
mov
sahf
mov
mov
push
ret
jb
push
cltd
xchg
sbb
sti
push
sbb
inc
addl
test
adc
add
shrl
jge
push
dec
lret
cmpsb
loopne
roll
jo
lds
pop
call
pushf
lahf
xchg
jp
sub
out
idivb
pop
ret
outsl
cmc
and
in
push
lea
jmp
out
inc
enter
das
orl
nop
stos
imul
adc
dec
sbb
cmc
adc
push
cmpsl
in
cld
bound
pop
ret
and
daa
aas
nop
jle
inc
repz
mov
xor
mov
push
mulb
pop
jnp
mov
sub
cmc
mov
push
leave
stc
fimuls
pop
sub
inc
jo
pop
mov
mov
xor
das
ret
dec
repnz
cmp
cmpsb
sub
push
das
cmp
movsb
in
jge
push
mov
mov
fisttpl
repnz
rclb
bound
jae
cmpsl
and
and
lcall
fisubrl
sahf
add
push
insl
ror
sbb
jbe
sbb
add
dec
mov
addr16
mov
test
xchg
sub
mov
mov
sub
add
movsl
push
or
call
repz
lods
cmp
inc
mov
les
shlb
adc
push
adc
ret
mov
cli
in
jg
xor
dec
sub
out
push
and
push
test
sbb
aas
fucomp
movsb
cmp
and
mov
xor
or
adc
mov
mov
push
cli
push
roll
adc
stos
xchg
xor
cmp
mul
push
push
ds
insl
rorb
mov
xchg
xor
add
stos
cs
outsl
cmpsl
loop
shl
adcb
cmp
xorl
sub
jp
xor
in
mov
mov
xor
add
dec
in
lahf
push
sub
push
adc
ljmp
xchg
inc
pop
rcrl
gs
xor
ret
mov
sbb
out
mov
sbb
in
jecxz
cwtl
adc
or
inc
and
popa
xchg
adcb
inc
aam
jp
outsb
into
adc
sar
sti
lods
fadds
xlat
sbb
insl
pop
stos
or
fstpt
sbb
cld
das
scas
arpl
in
in
jmp
and
push
into
add
mov
cmp
mov
jb
xor
mov
mov
popl
fs
push
jne
and
rolb
push
popa
or
push
mov
pop
mov
aad
scas
pop
mov
push
mov
dec
mov
lcall
orl
loopne
repz
xchg
cwtl
andl
xchg
scas
loopne
scas
jl
mov
fstps
data16
loop
fwait
lcall
lods
add
aad
lds
push
push
pop
xchg
js
iret
cmc
lcall
repz
loopne
xor
mov
mov
ret
sub
ja
adc
xchg
jbe
out
outsb
faddl
inc
ss
push
int3
test
psrlq
repz
jmp
mov
jne
xchg
push
mov
push
and
aas
nop
push
pop
repz
adc
sar
sbb
insb
daa
dec
cmc
dec
mov
lods
xchg
jnp
mov
push
jns
ljmp
jb
inc
mov
fisttpl
test
dec
lods
mov
sub
cmp
lcall
mov
jne
xchg
lds
push
ja
and
cld
enter
aad
lods
pop
inc
clc
or
aas
jp
jae
push
dec
pop
or
imul
fcomip
inc
aam
into
aaa
pop
mov
xlat
mov
dec
cmpsb
mov
add
cmpsb
fsubrl
push
cmpsl
je
rcll
or
fldcw
out
cmpsb
sub
mov
test
out
js
outsl
pop
cmp
rorl
push
push
xchg
lcall
push
adc
and
push
mov
xchg
mov
loop
cmpsb
lods
adc
or
sbb
addr16
sti
inc
test
outsl
jecxz
cmp
pop
jmp
cmpsl
andb
stos
arpl
xchg
mov
gs
call
rol
loopne
shrl
dec
call
or
xor
or
dec
repnz
fstps
lret
pop
out
cmp
sahf
push
into
inc
mov
aad
mov
add
mov
mov
dec
mov
cltd
mov
mov
pop
pop
sarb
cmp
sbb
xchg
sbb
adc
pop
or
data16
int
adc
mov
sub
add
gs
adc
dec
icebp
xchg
test
ficoms
in
das
je
cmp
ljmp
add
push
or
pushf
pop
cld
stc
mov
pop
int
xor
inc
xchg
jmp
cli
pusha
mov
or
loop
xor
arpl
or
pop
mov
cld
or
lea
mov
xchg
fsub
es
cmpsl
dec
or
scas
es
je
mull
mov
sbb
fldcw
mov
push
xor
mov
cmp
movsl
dec
mov
stc
sub
inc
enter
outsl
pop
fistpl
adc
aaa
cmpsb
test
arpl
push
arpl
jp
lret
xchg
jns
test
xchg
mov
arpl
in
mov
rclb
lahf
je
loop
pop
lock
mov
popa
lea
loop
pop
outsl
fs
jno
fmull
jb
sub
cwtl
sbb
into
pop
sarb
mov
cmpsb
loop
mov
sub
sarb
lea
movsl
outsb
or
nop
mov
pop
jnp
add
cltd
je
sbbl
jb
cltd
fisttps
dec
dec
pop
daa
lahf
fnstcw
stc
sahf
cs
lock
pushl
pop
sbb
pop
cmc
and
xchg
dec
sub
mov
or
rcl
orl
dec
push
std
cltd
nop
int
sbb
xor
aad
jns
jmp
std
sbbb
scas
adc
lcall
popa
movsb
jl
jns
jne
mov
xlat
fs
cmpsb
cltd
jmp
or
insb
and
mov
push
cltd
jmp
rorb
or
dec
test
pop
subl
in
leave
movsb
addr16
arpl
push
xor
and
ljmp
mov
mov
mov
adc
out
sahf
push
inc
jp
jecxz
sub
adc
ret
push
scas
jns
int3
movsl
clc
pop
xchg
sub
lcall
dec
mov
lahf
inc
or
cmc
data16
stos
fistpl
scas
inc
or
sub
jno
mov
jns
lahf
out
pop
cmp
mov
addr16
arpl
stos
in
ds
adc
cmpsl
fisubl
fcmovnb
xchg
imul
xchg
push
adc
mov
cmp
fisubl
mov
ficoml
mulb
cmpsb
xchg
dec
jne
fbstp
inc
xor
dec
mov
and
mov
imul
dec
adc
inc
mov
or
nop
adc
movsb
or
fs
shl
mov
icebp
push
adc
xor
push
xlat
pop
ljmp
rolb
aaa
cwtl
xlat
imul
out
add
mov
xor
fstps
pushw
aaa
pop
repnz
lret
jg
ss
inc
lods
subb
fwait
push
jno
jge
or
and
adc
xor
decl
cmp
xchg
sub
dec
push
lods
sub
mov
cmpsl
jmp
pop
ficoml
cmpsl
sbb
xchg
jg
and
mov
jbe
xor
jge
cmp
inc
sub
fstpl
cs
in
lods
xchg
dec
ljmp
ret
push
lahf
mov
loope
ljmp
lock
cs
pop
xor
loope
pop
cmp
shl
out
mov
xlat
jp
lcall
jmp
and
out
std
add
dec
test
pop
je
sub
push
jno
clc
jg
cwtl
cs
push
jns
xor
ret
adc
or
lea
push
pop
dec
das
lea
mov
jmp
in
jo
jecxz
int3
jmp
cmp
jne
mov
sbb
xor
neg
stos
lods
mov
jp
jo
xchg
out
in
test
lods
icebp
fcoms
mov
je
loopne
pusha
xchg
xchg
inc
xor
mov
push
jge
test
jge
lcall
push
mov
jno
push
lds
dec
movsl
mov
cltd
add
movsb
or
mov
and
push
sbb
or
mov
jo
mov
and
mov
cmp
iret
adc
pop
ret
sbb
movsb
adc
lahf
negl
fldenv
xchg
aaa
ja
jg
xor
xchg
pop
jno
test
sub
pop
xchg
daa
dec
inc
cmc
xchg
enter
add
jecxz
in
mov
jle
sub
call
and
call
xor
aam
rcrb
inc
adc
cmc
dec
test
mov
pop
pop
push
sub
mov
jle
and
repnz
das
and
xorb
arpl
mov
test
push
and
jo
decb
pop
mov
pop
scas
dec
sbb
fists
adcb
sub
fsub
ror
das
stos
dec
mov
mov
test
jb
cmp
add
int3
sub
or
jp
icebp
daa
loopne
mov
enter
and
sub
or
outsb
cmpsb
jae
orl
jecxz
ja
enter
inc
push
pop
push
jg
insb
mov
mov
mov
pop
ja
sbb
arpl
cs
rorb
push
mov
int
pop
int
jo
and
in
push
sbb
in
shlb
daa
cmpsb
pop
or
test
adc
push
jnp
sti
adc
lret
sub
in
frstor
dec
jbe
popa
lea
inc
pop
ljmp
pop
fldt
or
js
xor
jns
hlt
nop
fnstsw
aad
pop
push
jg
xchg
int
mov
sub
popf
xchg
loope
jg
fidivrl
sbb
push
sarb
in
aad
mov
mov
enter
xchg
xchg
xchg
into
jb
push
sbb
add
in
test
and
push
and
inc
jp
jmp
jge
pushf
mov
sbb
xchg
push
or
imul
icebp
add
and
inc
imul
gs
inc
lods
jge
and
pop
add
lock
push
or
inc
mov
xor
gs
lret
loope
psrlq
push
add
add
nop
gs
mov
lea
test
test
inc
ss
mov
int
insl
in
adc
sub
call
push
dec
add
xchg
mov
fisubrs
sbb
mov
pop
mov
pushf
cmp
mov
fs
in
scas
inc
sub
mov
adc
push
stos
inc
jmp
xor
int
push
adc
pop
cmp
sub
xchg
popf
daa
leave
adc
shll
cmp
js
cmp
inc
push
es
inc
push
stos
arpl
movsb
sar
mov
cli
mov
inc
in
mov
xchg
adc
push
cli
hlt
rorb
push
dec
add
push
fiadds
fimuls
lret
xor
mov
jne
sti
jmp
push
data16
lock
xor
movb
fwait
sub
jp
xchg
les
dec
sbb
loope
std
dec
stc
xor
fstps
lret
mov
pop
mov
icebp
test
dec
test
sub
dec
stos
insl
cli
add
push
ret
sbb
pusha
pop
mov
stc
xchg
fbstp
pop
test
and
xchg
out
fiadds
pop
insl
test
pop
out
sahf
lahf
sti
jp
xor
mov
inc
in
movsb
mov
dec
jg
jmp
or
addb
into
lret
lods
gs
or
in
jnp
inc
jae
sub
out
mov
and
rcl
mov
ret
or
pushf
push
xor
aam
stos
pusha
and
js
adc
or
fst
out
dec
and
or
andl
push
aad
lahf
add
orb
dec
movb
push
jns
lea
mov
sub
fidivs
adc
addr16
push
jno
xchg
idiv
sub
bound
adc
sub
push
jecxz,pt
repnz
popa
std
sub
insb
jno
jl
push
xchg
ja
add
out
subb
into
push
iret
pop
test
or
aad
push
cs
lods
mov
out
adc
int3
movsb
rol
cmp
cmpsl
clc
sar
js
or
and
fdivrl
mov
xchg
mov
mov
repnz
cs
inc
fldl
pop
mov
dec
scas
xchg
push
jbe
lock
shl
mov
push
sub
sbb
movsb
testl
jb
in
orb
push
ljmp
aam
pop
in
xchg
sarb
lock
popf
jno
enter
into
insl
xchg
cmp
out
imul
dec
xor
jle
cmp
addr16
adc
fs
jae
stc
jne
adc
movsb
xor
mov
pusha
scas
sbb
jge
loope
sub
inc
inc
push
sbb
xchg
jmp
and
sbb
sub
cld
jae
push
sbb
movsb
jg
dec
rcrl
xlat
inc
sti
daa
xchg
loop
cltd
adc
or
packssdw
xor
jnp
insb
mov
ss
lahf
lret
push
lret
test
add
pop
inc
cmp
mov
cwtl
xchg
out
push
pop
hlt
mov
jne
aad
pop
sbb
cmc
mov
sysexit
int3
adc
loop
int3
mov
popa
jbe
mov
cmp
popa
sub
aam
and
test
call
xor
cmp
and
popf
xchg
mov
in
mov
push
xorb
addr16
movsb
ficoml
arpl
fldt
xor
gs
xchg
mov
push
in
lea
test
movsb
xor
test
mov
xchg
or
fidivs
xchg
ss
dec
push
es
xchg
in
pop
insb
fwait
es
mov
movsb
and
movsl
push
cmp
adc
pusha
insb
mov
adc
pop
ficompl
mov
xor
hlt
pop
jns
cmp
cmp
mov
mov
xlat
push
xor
adc
cmp
stos
push
mov
adc
test
cli
add
adc
xchg
dec
mov
mov
nop
out
cmpsb
pop
add
or
sbb
cmp
mov
mov
bound
outsb
popf
dec
lods
xchg
mov
sbb
inc
jl
mov
sbb
sbb
popf
mov
mov
or
incb
rorl
popf
add
int
outsb
xchg
pop
inc
pushf
sbb
test
pop
pop
insl
mov
repz
inc
imul
pop
mov
or
lods
xchg
dec
fwait
call
xlat
sahf
xchg
lea
jmp
cmpsb
aam
comiss
stos
sahf
rcrl
je
jb
mov
mov
jns
js
push
imul
pop
sbb
fmulp
cli
sarb
xchg
push
push
cmpsl
and
les
insb
xor
cmp
dec
mov
icebp
jb
xor
sbb
mov
and
xchg
jp
dec
cli
repz
adc
jecxz
pop
cmpsl
iret
adc
aas
pusha
out
nop
test
out
push
add
pop
shrl
mov
fdivrp
ljmp
mov
ffreep
jmp
or
inc
cwtl
rcrb
inc
and
gs
cmp
cmp
xor
sbb
inc
in
loope
cmp
mulb
dec
inc
es
xlat
arpl
jno
in
arpl
push
loopne
jo
and
repnz
imul
mov
jp
xchg
dec
fsqrt
mov
ds
sub
aas
pushf
les
pop
les
pop
das
xor
mov
test
movsl
bound
ds
imul
and
test
dec
mov
jl
xor
ss
les
sbb
cmp
xor
push
shll
push
loop
jle
mov
ret
movl
push
ss
and
faddl
dec
iret
push
cwtl
jle
push
push
nop
loop
add
cltd
lcall
mov
fldenv
jmp
jb
mov
mov
pop
mov
jae
enter
or
inc
in
gs
inc
cwtl
add
pop
bound
jae
pusha
notl
lds
bound
dec
add
jb
push
push
cltd
dec
xchg
and
pop
xchg
ficoms
lcall
pop
push
mov
andl
xchg
out
leave
std
shlb
lcall
xlat
inc
ds
xchg
mov
push
pushl
sub
dec
mov
imul
xchg
test
jg
shr
test
or
arpl
test
ret
inc
in
clc
outsb
test
mov
test
cld
out
in
lods
out
cli
xor
rol
lret
rolb
xor
lret
adc
imul
stc
add
call
push
push
clc
mov
aad
lock
xchg
loope
enter
ljmp
jb
sub
add
inc
jno
gs
mov
mov
cmp
nop
push
mov
ja
adc
fcmovnbe
clc
mov
xchg
and
inc
xchg
add
adc
aaa
gs
dec
je
sub
xchg
inc
mov
mov
xor
scas
pop
test
inc
xor
das
lcall
xchg
das
jle
cmc
pop
mov
lss
jp
addb
or
int
cmp
pusha
in
mov
and
adc
int
jo
xchg
call
or
cmova
cwtl
pushf
sbb
in
rorl
cmpsb
mov
add
pop
and
pop
cmp
mov
fsubl
pop
lock
filds
adc
and
in
arpl
andb
in
jge
js
sarl
xchg
sub
jl
sbb
jecxz
jb
in
test
push
iret
or
loop
sahf
and
sbb
mov
lods
sbb
fistpll
cmp
pushf
adc
mov
xchg
enter
aaa
cmp
sbb
movsl
mov
lcall
mov
jmp
mov
xlat
fsubl
add
fwait
in
mov
adc
testl
sub
test
inc
xor
sub
lock
insl
out
add
xchg
pop
or
adc
push
test
bound
mov
jne
mov
in
mov
mov
ljmp
or
ret
xchg
sti
hlt
sub
cmp
mov
in
test
jp
mov
sbb
xor
inc
mov
mov
jecxz
cmc
popa
pop
xorl
movsb
sub
mov
pushf
out
push
aam
jmp
das
sub
xor
add
rorb
fwait
cmpl
cmp
imul
xchg
xchg
pop
cmp
sbb
scas
in
int
mov
dec
sarb
pusha
fs
enter
mov
sbb
test
inc
mov
in
mov
jl
cs
xor
add
adc
jmp
mov
loop
bound
test
xlat
lahf
add
jge
cmp
xchg
jne
jbe
sub
sub
adc
push
test
inc
pop
iret
stos
xchg
daa
add
lcall
test
mov
cld
mov
xor
sti
loope
cmp
jl
popa
icebp
scas
mov
mov
mov
test
and
icebp
lret
dec
sbb
cmp
jp
in
ret
jmp
aad
std
cmova
sbb
inc
xchg
cs
data16
dec
sub
sarl
mov
inc
push
in
sbb
lea
aaa
fldl
and
shlb
loope
mov
sti
pop
push
ret
mov
adc
jbe
and
pop
mov
pop
inc
xchg
jnp
xchg
xor
cmpsb
and
les
jae
pushf
adc
fdivs
adc
lea
cli
mov
mov
scas
mov
js
xchg
repz
jmp
mov
cmp
add
jne
push
sub
outsl
mov
shll
inc
mov
lock
clc
popf
fcmovne
dec
repnz
cmpsb
js
jnp
jns
push
sbb
test
pop
push
mov
cmp
dec
jecxz
das
fcomip
or
mov
shl
inc
cwtl
lret
adc
push
hlt
idivl
dec
insb
stos
sub
mov
mulb
fmuls
inc
nop
cmp
jg
mov
mov
sub
pop
js
lcall
std
pushl
pop
push
dec
pop
scas
mov
inc
mov
mov
jp
and
jle
add
out
xchg
adc
dec
pop
lahf
add
adc
mov
mov
mov
xor
add
clc
scas
or
aaa
mov
add
decl
mov
aad
pop
push
into
add
xchg
scas
or
jb
repnz
and
cs
das
repz
fs
mov
dec
mov
xchg
push
jg
jb
jne
sub
adcl
mov
leave
cmp
cmp
pop
sub
mov
mov
les
fdivl
pop
jl
mov
xchg
aaa
hlt
inc
xlat
lods
add
xchg
loopne
or
sub
pop
outsl
ja
lret
and
dec
and
filds
jg
daa
jnp
lea
negl
ljmp
xchg
rcll
pop
and
add
sarb
push
insl
sbb
movsb
adc
pop
xchg
pop
jp
mov
pop
fsubrs
push
ficoml
in
lcall
outsb
rorb
and
pushf
mov
arpl
bound
stos
pop
icebp
cmp
sbb
xor
cmc
lret
dec
pop
push
push
pop
inc
pop
js
lock
cmpsb
ljmp
jbe
pop
jae
jl
adc
in
xchg
out
adc
push
fnstcw
jmp
iret
rol
push
es
lret
mov
cmp
int
enter
adc
mov
cmp
mov
cmpsb
jne
rorb
xor
loopne
cmp
push
pusha
jnp
rorl
pop
jno
sbb
lret
loopne
into
stc
jb
addr16
test
add
aad
out
cmp
jecxz
mov
ffree
hlt
add
popf
mov
je
sbbb
dec
aam
outsb
into
imul
or
hlt
insb
sbb
jp
xorb
ds
mov
push
je
xchg
arpl
mov
lret
stos
or
pop
or
sub
push
fidivrs
clc
xchg
cwtl
fadds
sahf
xchg
test
xchg
push
mov
cmp
jbe
mov
cmp
stos
sub
bound
ja
sti
and
inc
sub
jle
jne
gs
cmc
jo
xchg
pop
inc
aaa
icebp
push
test
sbb
iret
mov
iret
mov
jge
and
ds
fildl
mov
sub
pop
out
cmpb
mov
jb
jne
or
mov
jbe
cmc
mov
cwtl
dec
jecxz
add
subl
push
stc
cmpsl
sbb
xchg
cmp
scas
sub
xchg
xchg
push
repnz
dec
inc
xor
xor
cmc
dec
out
mov
mov
or
int
push
cmp
pop
js
imul
fimuls
xlat
cmp
mov
call
scas
and
sbb
jne
aas
lahf
nop
mov
mov
cmp
push
call
mov
nop
sbb
pop
nop
mov
pop
std
sub
jne
xor
addr16
sub
sbb
shl
inc
out
std
insb
add
add
cltd
fmuls
jnp
pop
insb
mov
es
gs
mov
push
jb
add
xor
sub
stc
adc
test
xchg
out
cs
xor
inc
arpl
cmp
arpl
lret
test
sub
xor
ret
movsb
test
mov
sbb
nop
mov
mov
sub
and
pop
pop
push
or
je
cmp
jbe
cmp
popf
sbb
jns
push
fsub
fldl
lds
adc
cltd
mov
sbb
mov
xor
xor
dec
ja
mov
addr16
jecxz
mov
jmp
cs
bound
or
pop
ss
ljmp
or
mov
dec
push
pop
loop
js
jmp
or
jne
push
jns
jle
sbb
outsl
test
jmp
adc
aam
imul
enter
cltd
rep
lock
loope
stc
push
lock
popl
cmp
pop
imul
sbb
ret
iret
nop
in
push
sbb
nop
mov
je
movsl
mov
and
mov
and
jns
stos
xchg
jle
inc
mov
xorl
and
fwait
rclb
rcrl
ds
inc
add
sub
mov
addb
jb
mov
addr16
inc
xchg
pop
cmp
mov
insb
add
pusha
jl
adc
in
leave
lret
jne
out
fs
fsubrp
in
jmp
jecxz
add
add
or
lret
aad
mov
mov
cmpb
popa
andb
loopne
mov
pop
sub
icebp
daa
add
cmp
mov
or
bound
shl
inc
stc
mov
lock
xchg
mov
inc
and
data16
out
pop
lock
pop
inc
xchg
mov
sahf
daa
aad
push
arpl
mov
jo
jne
outsb
lds
out
roll
inc
xchg
and
inc
nop
stos
xchg
cwtl
dec
call
dec
mov
lcall
jl
mov
lods
and
inc
repnz
mov
cmp
insb
andb
or
cmpsl
cwtl
scas
and
pop
jl
xchg
pop
jl
lds
pop
xchg
jne
imul
and
dec
sbb
fidivrl
ret
in
mov
dec
pop
shrb
xlat
mov
xchg
dec
jne
shrl
je
int
cld
cltd
mov
shll
fcmovnu
sbb
lds
pop
int
test
loope
cmp
lods
dec
and
and
pop
ficompl
pop
dec
mov
loopne
mov
cmpsl
scas
cmp
ja
lds
cwtl
xchg
test
ss
mov
cwtl
xchg
ret
dec
pop
or
xor
lods
inc
push
xor
mov
and
mov
js
jge,pn
sbb
in
add
mov
mov
cmp
mov
xlat
sub
push
lcall
xor
loope
push
mov
lret
lods
mov
mov
js
je
add
mov
inc
enter
fmull
loopne
mov
push
nop
or
lcall
bound
call
sub
aaa
cwtl
inc
fcoml
dec
icebp
inc
add
cwtl
sahf
push
cwtl
outsb
cmc
mov
xor
jns
enter
mulb
adc
scas
or
push
daa
aas
lcall
sbb
lods
test
outsb
sti
aad
lcall
dec
xlat
xchg
daa
cmp
mov
or
shrl
jnp
xadd
dec
sub
jge
xorl
stos
inc
push
and
nop
loopne
jno
insl
enter
push
test
mov
inc
lret
sub
cmp
pop
cmpsl
add
cmp
cmp
dec
and
js
push
pushf
fs
and
mov
pop
sub
pushf
adc
ffreep
add
push
push
inc
inc
dec
xchg
mov
fistpl
incb
mov
sub
into
clc
cmc
test
pop
add
pop
dec
fimull
sbb
outsl
aad
mov
inc
add
inc
mov
push
xor
cmp
clc
pop
popf
inc
jg
jno
stos
push
dec
sbb
imul
dec
insl
adc
mov
out
jbe
mov
cmpsb
arpl
sbb
insb
into
xchg
xor
aaa
gs
jnp
add
fwait
and
outsb
repz
rcll
and
add
in
lock
enter
ss
mov
fcmovbe
stc
sub
inc
add
int
out
dec
fistl
xor
insl
xchg
xchg
idivl
push
adc
add
cmp
mov
cmc
cs
jbe
mov
xchg
mov
push
xor
inc
daa
inc
mov
aam
mov
rcll
pushf
jno
mov
cmp
and
test
adc
outsl
jb
pop
call
push
pop
sti
jne
xor
dec
xorb
adc
outsl
sbb
pushf
push
jge
icebp
push
fcmovbe
fsts
xchg
sbb
cli
ret
xlat
rcl
shlb
add
ror
xchg
in
sub
jbe
pop
inc
roll
loope
xor
dec
add
int3
dec
loope
adc
in
pop
push
popa
mov
and
arpl
fstpt
int
mov
mov
push
mov
and
aas
in
das
je
adc
sub
mov
push
imul
fbstp
mov
push
cmpsl
fnstenv
icebp
mov
dec
incb
outsb
lcall
mov
adc
or
inc
jns
mov
or
shrb
push
enter
mov
addr16
mov
stos
jle
mov
add
aam
lock
or
add
sti
fwait
stos
pop
mov
stos
dec
adc
in
mov
mov
gs
jno
sub
test
ret
dec
push
test
dec
jns
mov
test
das
fcomps
aam
inc
pop
xor
sarb
outsb
push
das
imul
lds
inc
dec
fsubl
add
repnz
pop
enter
adc
jge
in
lret
sub
or
loop
std
and
je
les
jecxz
mov
pop
mov
fists
mov
mov
adc
iret
movsl
into
jo
mov
in
outsb
addl
ret
ja
lds
mov
fisubs
dec
mov
lcall
aaa
fstpt
pop
out
adc
std
push
jmp
inc
sbb
iret
jo
pop
jp
pop
pusha
push
pop
cmpsb
repz
cmp
adc
add
push
rclb
test
stc
fistpll
test
dec
or
jnp
ret
test
test
jmp
push
lret
jae
xchg
mov
cmp
fnsave
shlb
loopne
sarb
xor
pop
mov
push
mov
push
jle
sub
sbb
ss
gs
push
xlat
fistl
data16
push
pop
mov
mov
das
sbb
fidivs
mov
mov
add
aad
mov
dec
rorl
stos
daa
push
leave
int
fsubs
mov
sub
add
fwait
push
fdivr
std
es
cmp
fimull
test
sbb
push
popa
push
dec
popf
jno
inc
jae
adc
jecxz
cld
add
mov
cmc
movsl
stos
xor
or
jns
hlt
lods
cmc
dec
inc
sarl
call
aam
jbe
mov
jnp
ljmp
xchg
andl
pop
xchg
mov
or
sbb
bound
lea
test
add
loope
out
mov
loopne
hlt
sbb
inc
arpl
cmp
adc
shr
and
pop
jecxz
pusha
out
jo
mov
mov
inc
sbb
pusha
out
test
add
push
arpl
movsb
dec
dec
jl
scas
aas
push
cmc
fwait
in
in
notb
and
inc
add
dec
push
mov
pop
xchg
cmp
ret
aas
sub
fnsave
sub
in
sbb
lcall
jbe
rolb
or
pusha
xchg
loope
dec
roll
leave
xchg
or
xchg
mov
xchg
mov
lods
rorl
clc
pop
add
push
jbe
imul
mov
roll
cs
push
in
pop
mov
xlat
jl
outsb
popf
push
out
push
sub
adc
out
rorb
dec
pop
push
negb
int
xchg
add
fs
repnz
sti
sbb
je
mov
call
sub
fisttpll
xchg
test
xchg
adc
sbb
aaa
mov
iret
push
icebp
cmp
inc
repnz
and
mov
cld
decb
jo
pop
push
dec
aaa
mov
jb
lret
cli
jmp
sbb
subl
or
mov
jbe
add
fnstsw
ret
pop
mov
daa
outsb
xlat
and
fwait
imull
sub
sarb
add
mov
jge
mov
or
lods
rol
mov
out
rol
sbbl
mov
mov
stos
sub
cmp
cmc
and
mov
lcall
mov
or
jmp
insb
sbb
xor
mov
mov
cmc
insb
jbe
aaa
ret
sti
inc
mov
pushf
jmp
ret
shlb
push
push
add
outsb
mov
jecxz
sbb
add
sub
push
in
jmp
jnp
leave
mov
sub
jne
pop
xlat
xchg
sub
mov
jg
pop
jmp
dec
adc
ljmp
xchg
jecxz
xlat
sahf
fistl
sub
jno
call
or
movsl
rcll
jge
ds
mov
sbb
rorb
lret
or
jecxz
mov
xchg
pop
sbb
in
push
fdivrp
mov
push
pop
jl
into
and
shlb
icebp
inc
pop
ss
jb
xor
xlat
mov
mov
arpl
sarl
int
cmp
mov
mov
dec
ficoml
stos
movsl
dec
sub
pop
jl
or
mov
cmpsb
adc
jge
nop
dec
mov
jo
xchg
xchg
push
ja
adc
cmpsl
lcall
fistpl
rcrb
pusha
outsl
mov
mov
adc
sbb
lods
push
repz
or
jno
xchg
cwtl
sbb
rcrb
subb
and
mov
fistpl
cmp
in
fcoms
out
ja
sub
arpl
lock
push
or
ret
pop
into
xorl
pop
mov
faddl
inc
cmpsb
or
lods
add
add
mov
leave
loopne
lods
xlat
das
jg
cmp
mov
xlat
test
adc
jmp
add
cwtl
and
jmp
sbb
pop
xrstors
out
mov
cmc
fsubrs
rcl
mov
dec
test
mov
mov
cmp
jo
dec
adc
inc
mov
mov
xor
mov
out
mov
or
loopne
dec
and
mov
mov
mov
mov
mov
sbb
dec
and
push
subb
cld
or
mov
sbbl
or
jno
inc
push
sub
in
sub
lock
pop
lret
push
sub
movsb
mov
std
je
mov
jl
jl
mov
mov
push
mov
push
mov
pop
mov
mov
add
mov
mov
and
add
stc
sub
nop
push
pop
sbb
repnz
outsb
push
dec
sbb
mov
lea
jo
into
shl
xor
shr
cmp
push
sub
xor
jns
sub
and
js
mov
push
fs
std
popa
or
into
cli
xorb
jmp
out
negb
sbb
inc
xor
aaa
push
loope
popw
adc
mov
inc
push
insl
pop
int
je
sbb
xchg
pop
inc
mov
cmp
out
sbb
clc
mov
fisubrl
ret
movsb
cs
repz
pop
inc
imul
pop
ljmp
sub
psubusb
mov
ret
mov
bound
or
dec
mov
push
mov
mov
mov
mov
sti
mov
mov
roll
cli
push
cmp
mov
les
shrl
mov
dec
imul
fistl
sbb
fs
sti
or
sbb
mov
or
mov
jmp
or
mov
out
fnsave
pop
repz
adc
pop
in
addr16
dec
fs
lahf
inc
dec
imul
or
xchg
pop
stos
xchg
mov
sbb
and
mov
mov
jae
pop
iret
stc
push
add
mov
or
pop
push
and
dec
enter
les
mov
andl
je
inc
jg
adc
push
cmpsb
cmp
cmp
xchg
out
test
xor
test
push
cmp
ljmp
inc
dec
jo
mov
inc
push
and
push
cmpsb
mov
cltd
sti
mov
mov
lock
insl
push
mov
enter
inc
enter
fwait
sub
je
adc
sub
mov
sbb
das
xchg
out
into
jge
mov
outsb
pop
lcall
shlb
cld
out
fcomps
lods
add
lahf
jne
mov
cmp
fnsave
fdivl
repnz
loop
fdivs
mov
enter
cmpl
dec
ja
testl
pop
lods
jecxz
out
pop
mov
mov
fidivl
add
repz
inc
adc
dec
test
aas
fs
ljmp
mov
mov
or
mov
call
pop
loop
cmp
fisubrs
push
or
nop
add
pop
and
outsl
lods
or
xor
movsl
jecxz
out
pop
mov
xchg
fisttps
loope
dec
push
xor
outsb
outsb
mov
outsl
cmpsl
nop
ja
hlt
inc
push
cwtl
cmp
and
mov
sbb
rcrb
test
shll
pop
and
jl
mov
add
jne
cltd
push
loop
insl
pop
pop
dec
push
push
clc
sbb
rcll
mov
adc
fwait
xor
dec
ret
sub
popf
ja
cmc
outsl
outsl
out
push
sub
movl
add
mov
es
enter
and
mov
insl
in
add
sarb
adc
fs
bound
jae
sub
stos
cmpb
cwtl
inc
sbb
mov
mov
scas
jle
popf
dec
dec
sub
stos
mov
enter
mov
addr16
add
mov
dec
dec
int3
pop
cwtl
jb
pop
jmp
lods
rcll
arpl
cltd
or
call
add
dec
test
dec
add
mov
stos
xchg
mov
idivb
sub
pop
scas
add
rorl
adc
mov
or
lods
push
insl
ror
xor
stc
xchg
loope
mov
repnz
mov
mov
xlat
in
jg
rcrb
add
sub
add
popf
cmp
sti
lods
cmp
sub
push
test
push
adc
fcmovb
aad
cmpsl
loop
js
sbb
jbe
dec
test
call
inc
aas
fistpll
cmp
or
lds
out
or
adc
mov
out
xchg
or
cli
loope
inc
sbb
sub
test
divb
push
movsl
cwtl
pusha
stc
lock
sbb
pop
adc
or
push
mov
ja
sbb
cmp
bound
fcmovnbe
ret
mov
pop
int
mov
dec
adc
cmpl
jo
xor
std
xchg
mov
sbb
inc
in
push
or
rcrb
shrl
sub
rorl
mov
add
mov
ret
mov
fs
sbb
mov
pop
addl
jne
das
je
jecxz
loopne
cwtl
jl
cmovg
xor
ret
jae
ret
mov
mov
fadds
insb
das
mov
cmpsb
push
mov
aaa
dec
lods
or
mov
sbbb
add
dec
mov
and
sbb
sub
into
cmp
call
test
in
or
xor
cli
imull
fisubrl
cltd
mov
mov
and
mov
test
dec
or
add
sbbl
mov
pop
pop
loopne
xchg
repz
inc
cltd
dec
sbb
cmpsl
loope
rcll
mov
aam
gs
cmp
in
cmpsb
or
xor
out
ljmp
movl
lcall
mov
dec
adcl
mov
mov
add
test
ss
lods
jno
hlt
sub
stc
scas
ret
jno
inc
dec
mov
pushf
fsubrs
sbb
dec
cld
xchg
adc
repz
lahf
xchg
stc
scas
cwtl
cld
cmp
xlat
fiaddl
mov
scas
mul
popa
gs
push
out
icebp
ret
cli
jnp
inc
scas
or
jnp
enter
push
js
jg
imul
in
jb
rclb
add
int
mov
ljmp
mov
inc
lods
inc
insl
aam
pushf
enter
popf
jl
hlt
jecxz
xchg
sbb
add
cli
pop
or
test
mov
scas
pop
lret
jmp
or
jo
stc
sub
cltd
fs
add
jp
negb
dec
mov
push
lret
ja
aad
fists
pushf
dec
cmp
jns
pop
cmp
in
imul
lds
add
mov
and
inc
dec
mov
xor
nop
out
rcr
or
push
jge
push
sub
or
pop
or
mov
or
repnz
or
iret
pop
mov
sbb
xchg
mov
jbe
jo
popa
jbe
ret
leave
xchg
test
or
push
loopne
in
mov
xchg
faddp
sbbl
insb
sub
jmp
call
cmp
lods
add
faddl
ficoml
pop
jbe
loope
dec
imul
pusha
test
cmp
out
hlt
ret
popf
das
cltd
test
pop
insb
dec
xor
xchg
dec
rorb
mov
jg
jp
fs
sti
push
add
movsl
vpacksswb
fwait
xor
jo
ds
aas
in
cli
xor
ret
or
dec
xlat
outsl
lcall
ret
dec
icebp
rolb
faddl
pop
sbbl
push
cs
push
je
mov
sub
or
jae
fstl
xor
push
hlt
sub
sbb
cmpsl
stc
daa
dec
inc
les
cs
mov
popa
pop
gs
int
insb
push
mov
sub
mov
imull
je
lods
push
stc
andl
jp
jecxz
nop
jnp
jle
sbb
lods
aas
dec
push
gs
adc
loop
push
fcompl
xlat
pop
andl
mov
into
testb
addr16
inc
add
pusha
cmpsl
int
or
xor
push
and
addr16
les
test
inc
lods
js
mov
mov
in
jb
xchg
push
cmp
sub
cmc
scas
popf
xchg
movsb
lea
xchg
push
rcrb
addb
xlat
loopne
or
and
inc
xchg
sub
mov
dec
sti
jnp
adc
int
mov
and
das
xchg
ret
ret
popf
leave
or
pop
adc
add
xor
pusha
filds
aas
ffree
gs
or
xor
pop
xchg
sti
push
fsub
xchg
add
popf
xor
xchg
in
pop
mov
mov
push
daa
pop
sbb
sbb
jb
adc
pop
cmpsb
out
out
fsubrs
daa
adc
xchg
mov
mov
mov
sti
adc
push
sahf
imul
mov
xchg
loopnew
outsl
imul
inc
pop
jno
jae,pn
sti
jnp
in
adc
cmpsb
imul
out
adc
js
cli
or
push
jecxz
repnz
addr16
push
out
xor
and
inc
push
rcrl
inc
ret
pusha
mov
jno
push
dec
test
das
xchg
mov
stos
fnstsw
adc
and
js
or
mov
add
popa
mov
mov
lods
test
add
jns,pn
add
roll
cmp
mov
mov
stos
jns
jbe
pop
int3
xor
and
stc
dec
cli
push
adc
sti
jns
sub
fcoms
xchg
test
fwait
clc
pop
xchg
jg
dec
lret
and
push
mov
inc
aas
lds
out
out
mov
and
cmpsb
push
imul
cmp
jb
popf
inc
lock
jae
cmp
movsb
sbbb
aas
jno
call
shlb
add
mov
pop
rcll
loope
jg
imul
inc
pop
mov
mov
pushf
ret
cmp
dec
js
sbb
flds
dec
pop
mov
mov
fbstp
jmp
mov
in
mov
xor
adc
enter
sti
ja
sub
scas
dec
repz
mov
ljmp
xor
cmp
sbb
pushf
push
fadds
fidivs
cli
jns
test
or
xchg
shlb
and
hlt
inc
adc
out
jmp
mov
sub
dec
popf
aad
dec
gs
mov
imul
inc
push
fnstenv
iret
lea
xchg
ss
jb
mov
cld
mov
in
sub
cmpsb
or
cmp
xor
sbb
cwtl
lret
push
stos
mov
insl
test
lods
sub
xor
or
imulb
push
sub
mov
sti
sub
pushl
outsb
lret
pop
and
movq
lea
push
cli
mov
mov
add
cwtl
push
lret
je
and
fbstp
push
mov
aaa
pop
jecxz
dec
pop
sub
mov
mov
jno
out
xor
les
ja
or
pop
lret
cs
stos
mov
popl
jp
jg
dec
sub
adc
andl
sbb
test
jp
shlb
mov
paddusb
fists
int3
lahf
js
notb
and
jns
pop
ljmp
sub
aam
cmp
aaa
dec
xor
es
sbb
dec
loope
push
out
sub
push
dec
cmp
loope
gs
pop
outsl
pop
rorl
push
push
out
mov
push
cld
push
or
push
mov
xchg
pushl
js
or
popa
scas
xor
add
mov
imull
sub
mov
xchg
xchg
jne
jmp
gs
jecxz
dec
jns
xor
xlat
adc
jne
dec
push
fdivs
sti
xchg
and
nop
sahf
subb
push
mov
jge
push
icebp
inc
loopne
fwait
rcrb
push
xor
movsb
fbld
dec
into
lds
ja
pushf
lret
pop
cli
mov
adc
inc
shl
cltd
ret
scas
les
mov
loope
rol
ljmp
jbe
pop
bound
jmp
test
bound
mov
sub
adc
or
loopne
pop
adc
pop
imul
into
xor
insb
adc
call
aas
pusha
or
mov
inc
jnp
ds
pop
and
dec
imul
das
aaa
popa
loope
out
sbb
test
mov
mov
push
icebp
sbb
dec
xor
sbb
aas
or
adc
mov
xchg
pop
cmp
sbb
push
lock
jmp
sub
jle
scas
and
dec
xor
push
cwtl
mov
in
push
rclb
mov
mov
imul
xor
and
lods
mov
loopne
mov
fmul
sub
int
cmp
into
imull
cwtl
fwait
adc
in
push
adcl
insb
add
lds
in
daa
ljmp
cmc
shr
es
jge
sub
inc
loopne
loope
rcll
pop
xlat
stos
nop
outsl
rcr
fidivrl
stos
mov
sbb
lea
addr16
cwtl
insl
repnz
add
jnp
mov
daa
addr16
cmpsb
movsb
pushf
fxam
lods
dec
add
lock
and
mov
and
popa
or
dec
jns
or
sbb
mov
roll
xchg
pushf
ljmp
xlat
xor
repz
mov
sbb
ss
test
mov
jecxz
sub
jecxz
lret
xchg
pushf
push
outsl
lock
xchg
jno
cmp
adc
fisubrs
jbe
in
inc
push
dec
dec
push
ret
xchg
mov
xor
xor
pop
sbbb
jbe
fmull
pop
ror
insb
and
push
xchg
xchg
in
adc
aad
insl
gs
call
fdivl
scas
pop
mov
jl
and
mov
bound
and
clc
pusha
into
andb
fbld
sbb
or
hlt
je
inc
mov
add
std
push
sbb
imul
jbe
adc
cmpsl
fcoms
movsb
cmp
insl
mov
xlat
push
add
inc
jns
xchg
xor
and
fnstenv
outsl
sbb
lds
sahf
iret
aas
push
lret
push
int
sbbb
call
dec
cmp
fidivs
push
xor
dec
hlt
lods
cmp
lea
popf
test
std
in
or
aas
sub
imul
clc
push
push
jo
js
xor
pop
fcmovb
sahf
dec
cmp
rorb
pop
cmp
cli
outsb
test
sub
push
cs
push
xchg
mov
insb
dec
aad
push
dec
shl
lods
cmp
push
in
cmc
or
iret
aam
mov
orb
sub
cmc
dec
pusha
clc
push
xchg
push
addr16
xchg
lds
mov
clc
andb
add
lcall
enter
pushf
js
ret
dec
mov
mov
lea
jmp
pop
scas
adc
aaa
scas
movsb
pop
mov
out
addr16
out
mov
and
int3
fldcw
js
loope
push
shrl
cmp
dec
pop
and
aaa
inc
mov
ljmp
addl
stos
mov
or
add
repz
or
dec
aam
ret
in
inc
sbb
insb
repnz
lods
mov
inc
ja
repnz
pop
push
pop
or
inc
jecxz
jo
push
mov
shlb
inc
dec
ficompl
out
ljmp
test
dec
mov
ljmp
loope
cwtl
test
mov
fnstcw
jns
test
lds
sub
push
cmp
fildll
gs
scas
jg
into
push
stos
xchg
pop
jo
rclb
lcall
adc
adc
adc
in
ds
sbb
cld
cmp
pop
pop
push
pop
cmp
xchg
add
cmc
add
xchg
sbb
ja
test
push
xor
sub
inc
les
enter
scas
push
jp
sbb
sbb
jae
testb
mov
xchg
mov
test
pusha
xchg
xor
or
fs
stos
jecxz
sub
lcall
lods
add
arpl
mov
cli
pop
mov
push
imul
sbb
orl
push
mov
sub
daa
addr16
mov
sbb
ja
mov
lds
gs
add
repz
jne
xchg
add
in
add
xlat
cmp
xorb
xchg
cmp
xchg
sti
leave
les
sbb
sbb
inc
addr16
cmpsl
jno
pusha
add
repnz
adcb
push
xchg
mov
mov
in
cmpsl
inc
mov
mov
ret
fs
push
or
xchg
js
jae
int
cmp
das
push
jg
ficompl
frstor
jg
sbb
jecxz
or
rcrb
testl
in
sbb
sub
jne
daa
lds
mov
adc
arpl
leave
jne
xor
xchg
and
pop
lret
ficompl
gs
arpl
cmpsb
movsb
or
jb
inc
sub
xchg
pop
lret
imul
aam
imul
add
pop
les
sbb
sub
jns
imul
push
cmp
sti
div
dec
add
push
mov
pop
pcmpeqd
push
mov
dec
add
push
dec
fistpll
stos
inc
jp
add
lea
gs
pusha
cld
cs
out
mov
cltd
fdivrl
or
push
push
rcrl
jae
inc
dec
xchg
scas
and
mov
sub
pop
stc
mov
mov
ds
xchg
add
stos
jle
scas
xchg
adc
pushf
add
js
ja
mov
jmp
jp
leave
loop
aad
lea
jmp
xor
cmp
sub
push
pop
push
cli
cli
sub
push
xor
jne
xchg
adc
loopne
mov
das
pop
xor
mov
fistps
dec
mov
or
xor
inc
inc
xchg
div
rolb
movsb
outsb
xchg
cmc
frstor
lcall
sbb
jmp
mov
adc
or
stos
outsl
jl
sub
jp
mov
mov
jge
aaa
xchg
mov
aas
loopne
popa
lcall
dec
push
jle
ret
into
push
into
cmp
addr16
jae
loope
int3
rcl
data16
fildl
fdivl
push
lods
xor
sub
push
inc
or
out
dec
xchg
adc
xchg
sahf
xlat
cmp
js
sub
mov
aas
jmp
push
outsb
std
gs
mov
enter
icebp
or
xchg
xor
hlt
cld
sbb
sbb
mov
fs
daa
and
shll
mov
cmc
jl,pt
gs
sub
cmp
adc
rcrb
js
pop
sbb
sub
xchg
mulb
in
add
dec
xchg
push
adc
xor
or
out
jb
jbe
cs
in
push
sbb
or
decl
test
mov
test
xor
lods
ret
fstpt
lds
dec
movsl
sub
dec
mov
cmp
in
cmp
outsb
inc
outsb
cmp
jecxz
nop
jecxz
mov
stos
inc
add
cmp
pop
loop
or
test
xor
mov
dec
repz
dec
mov
enter
fidivrl
clc
adc
add
mov
xchg
in
inc
jns
sbb
inc
cmp
out
xor
mov
sbb
dec
imul
jge
mov
enter
mov
sub
jp
dec
pushl
inc
cmp
fidivs
xor
callw
ljmp
xchg
lcall
cmp
mov
ds
lcall
add
shrb
push
xchg
mov
movsl
pop
data16
ret
addl
jmp
or
out
cld
sub
push
out
xor
rcrb
add
arpl
jecxz
push
inc
jecxz
loope
sbb
mov
outsl
out
gs
das
jmp
xchg
pop
das
jns
movl
ja
loop
ret
mov
mov
pusha
pop
xor
or
jp
jmp
add
sub
rcrb
push
push
inc
cmpsb
cmpsb
aas
call
dec
inc
jmp
loope
push
std
arpl
into
xor
fisubl
or
or
test
int3
mov
xor
je
mov
mov
mov
fistl
add
pop
cli
mov
popf
sbb
lods
xchg
insl
pop
inc
jo
mov
xchg
ss
lea
imul
xchg
stos
jbe
mov
xlat
test
iret
je
cmpsb
push
pop
lret
push
or
mov
lds
add
test
mov
mov
in
push
jb
ds
sbb
enter
bound
into
lahf
xlat
shrl
bnd
jnp
add
sub
pop
mov
jno
push
cmp
xchg
mov
hlt
shr
test
pop
push
or
cmp
in
sub
pop
add
std
push
fcoml
adc
insl
xor
xor
add
jge
test
pop
cs
mov
sub
dec
movsl
incl
xchg
subl
shrl
pop
and
clc
or
xchg
dec
xchg
mov
gs
add
in
pushf
lcall
xchg
mov
jno
fmul
xchg
fstpt
mov
push
add
ss
js
add
fsubr
fs
cwtl
adc
cmpsl
jo
xchg
pop
xchg
loope
insl
les
imul
enter
outsb
push
pop
mov
mov
cmp
les
into
sbb
loope
int
xor
inc
jl
push
cmpsb
sbb
pop
daa
lahf
andl
das
sub
push
lcall
cmp
dec
adc
or
inc
pop
cli
roll
les
aas
cmpb
and
mov
adc
mov
and
jge
mov
xchg
cmc
aaa
ja
imul
jg
jae
aas
subl
imul
movb
push
sub
mov
out
and
add
push
jmp
mov
mov
aam
push
arpl
enter
and
ljmp
add
out
ss
cli
dec
mov
dec
push
jns
jmp
das
sbb
or
outsb
sub
out
bound
test
scas
loop
cmp
cmp
jbe
addl
push
aas
mov
add
add
cs
mov
xchg
or
cli
adc
je
inc
sub
aam
mov
pop
mov
jmp
test
testl
sahf
push
lret
jbe
pop
scas
cltd
sub
mov
cld
ret
push
les
pop
mov
lahf
mov
pop
mov
out
fdivrs
das
inc
xchg
xlat
pop
int
push
and
add
cmp
inc
xchg
out
push
sbb
jge
cltd
jnp
push
popa
std
xor
and
clc
adc
test
pop
enter
adc
ret
cmp
fcmovnbe
loop
inc
gs
mov
gs
in
lret
fsubr
mov
fdivrs
cmp
mov
sub
scas
push
fldcw
push
lea
jp
mov
mov
fxch
sarb
movsl
jnp
movd
push
std
repz
xor
or
aas
iret
push
mov
inc
pop
lods
sti
enter
inc
xchg
mov
es
test
rcl
dec
mov
dec
fstpt
gs
decl
and
mov
in
rorl
leave
xor
add
das
mull
pop
xor
xor
pop
mov
je
inc
mov
lods
call
mov
lret
dec
mov
test
sub
cwtl
arpl
daa
mov
aad
dec
std
pop
nop
andb
sbb
or
jbe
mov
mov
cld
pop
xor
push
roll
inc
leave
and
or
sti
pushf
pop
inc
dec
xchg
mov
cmpsl
sub
mov
popa
stc
addr16
and
jns
lcall
adc
mov
addr16
daa
mov
icebp
inc
mov
xor
cld
rolb
xlat
sub
les
ljmp
out
imul
dec
in
add
dec
add
stos
data16
shlb
sbb
jnp
clc
test
or
hlt
xchg
ja
mov
pop
jl
out
jbe
mov
aad
stc
inc
je
stos
jmp
adc
or
sahf
les
lods
mov
dec
imul
adc
or
inc
mov
jmp
mov
frstor
popa
cmp
jle
xchg
mov
pop
jp
pop
nop
adc
fists
repz
mov
outsl
mov
push
mov
add
mov
outsb
movsb
decl
cs
int
pop
xor
pop
repz
inc
int
lahf
out
loop
lods
lock
jb
test
lret
jno
jge
jbe
lcall
mov
jg
scas
fwait
stos
inc
in
jp
jae
push
sti
mov
xchg
xchg
mov
scas
ss
daa
lcall
in
jle
fstpl
lret
dec
mov
cmp
bound
xchg
sbb
jle
add
inc
add
push
ret
dec
jp
dec
cltd
pop
aaa
outsl
xchg
repnz
pop
and
js
mov
imul
addr16
lods
sbb
cmp
fdivrp
movsl
je
or
stos
js
and
mov
cmp
pop
pop
inc
dec
inc
xchg
jns
addb
jbe
stos
mov
adc
dec
mov
jle
pop
loop
sbb
cmp
push
xchg
dec
jge
fucomi
pop
sbb
sub
ja
pusha
xor
call
ljmp
test
pop
jbe
xor
js
xlat
inc
mov
dec
sbb
lcall
push
inc
adc
pop
mov
mov
inc
icebp
jae
or
jne
jg
sahf
jne
xor
pop
test
arpl
cmpsb
xchg
mov
rcl
fs
insb
xchg
mov
loope
popf
ljmp
je
mov
cmpsb
sub
mov
js
popf
push
lea
fcmovnb
aad
inc
push
add
fincstp
clc
adc
lahf
out
das
sub
lea
bound
xchg
test
shlb
enter
data16
lret
insl
inc
cmp
mov
dec
gs
cmp
icebp
dec
pop
lahf
cltd
imul
fsubs
sti
rcrl
inc
movsl
mov
mov
push
jge
dec
mov
cmp
imul
jns
xchg
inc
stos
repz
notb
adc
int
xchg
xchg
jns
cld
repz
add
aas
mov
add
jp
lahf
mov
jb
fwait
in
mov
jle
push
mov
addl
xchg
rolb
out
dec
mov
and
pop
out
imul
cmp
sub
adc
mov
xchg
or
cld
lods
ret
push
ljmp
nop
adc
xlat
add
mov
jg
sub
jmp
adc
cmp
or
inc
sbb
fcomi
sbbl
mov
xor
mov
mov
xorb
mov
loop
out
cmp
mov
mov
mov
in
shrl
xor
lret
push
cwtl
imul
leave
adc
xchg
arpl
jbe
or
mov
jecxz
icebp
icebp
movsb
mov
lods
mull
cmp
test
mov
and
int3
mov
jbe
repnz
jae
or
pop
test
into
in
and
cltd
xorb
xorb
sbb
pop
mov
mov
inc
sub
outsb
and
sbb
std
push
in
pop
sbb
push
outsb
and
call
sub
mov
les
xchg
mov
aad
aad
subl
fwait
mov
pop
mov
pop
rcll
push
jle
pop
rol
xlat
lret
sub
test
cmp
pop
mov
in
add
jg
icebp
push
dec
cld
push
std
adc
add
int
insb
sub
pusha
sub
out
jl
pop
mov
jp
pop
jno
rcrb
sbb
stos
repz
fmuls
nop
rolb
dec
sbb
ret
push
jno
dec
imull
ficompl
cmpb
out
inc
pop
test
insl
pop
push
xchg
ret
insb
push
mov
mov
jmp
loop
jle
lret
and
insb
xor
cmp
push
decl
mov
fsub
decb
and
imul
or
sub
fisubs
xor
cli
lock
mov
ja
or
jp
xchg
jae
push
push
out
arpl
jmp
sub
xchg
jle
push
mov
fisttpll
testl
jno
sbb
sbb
rorb
test
xchg
imul
add
push
jmp
lds
xchg
mov
fs
and
out
push
fldenv
jecxz
jecxz
out
imul
and
lahf
into
pop
mov
xor
mov
pushf
push
mov
jmp
cmp
xor
push
inc
push
ss
arpl
pushf
cs
mov
push
shrl
imul
insl
loop
jb
jge
mov
or
xor
shrb
sbb
imul
lahf
sub
adcb
lea
cmpsb
sub
decl
fildll
lock
cmp
in
mov
or
arpl
mov
arpl
daa
sub
xchg
pop
inc
enter
mov
stc
dec
fbstp
mov
inc
lds
inc
adc
sub
mov
mov
data16
mov
pop
and
push
out
mov
aaa
mov
mov
push
ret
add
mov
sub
int
xchg
dec
jne
sub
cwtl
mov
ss
inc
xor
mov
pop
and
cmp
cmc
ret
pusha
cwtl
pmaxsw
enter
arpl
loope
cld
insb
cmp
addr16
fcmovbe
inc
outsl
jbe
dec
adc
mov
jmp
pop
ficomps
push
jl
pop
in
and
aas
mov
adc
nop
push
push
xchg
test
out
test
add
mov
imul
call
jg
cmp
shrl
repnz
xchg
in
mov
adc
pushl
mov
iret
clc
bound
mov
jnp
loop
ret
sbb
xchg
push
daa
push
icebp
into
push
mov
mov
cli
popa
fsub
insb
in
jl
mov
dec
xchg
data16
xchg
mov
or
sbb
addr16
sbb
outsb
xchg
popa
mov
pop
pushf
aam
cmp
insb
sub
stos
imulb
mov
dec
repz
push
xor
sub
mov
mov
cmpsl
repnz
adc
sbb
and
les
dec
inc
cmp
lahf
add
adc
sbb
call
sub
and
pop
sub
jne
dec
fsubr
adc
mov
mov
add
int3
inc
mov
mov
add
cmp
ret
sub
mov
and
cmpsb
aad
pop
and
popa
leave
scas
xchg
mov
push
lahf
and
mov
or
mov
xor
into
out
xor
push
out
fs
push
push
cmp
movsb
arpl
stos
xor
jge
repz
lock
jnp
cmpsl
repz
fistps
jbe
inc
xor
das
pop
mov
fisttps
mov
gs
and
aad
pop
punpckldq
jg
sbb
mov
sub
xchg
sbb
jmp
cwtl
sbb
xchg
arpl
sbb
cmc
lcall
test
push
mov
das
test
xchg
jns
test
mov
hlt
cmp
enter
jae
pop
mov
test
pop
xchg
sub
push
or
pop
and
xchg
pop
push
fisubs
ss
inc
mov
ljmp
iret
popa
cmp
lds
push
jns
lret
pop
stos
orl
mov
jmp
mov
lock
mov
adc
adc
les
or
stos
adc
dec
mov
outsl
das
adc
jb
cmpsb
pushf
dec
mov
push
push
push
pop
inc
fs
inc
rcll
cmp
push
sarl
sbb
adcb
cli
pop
adc
subl
pop
sub
mov
jecxz
ljmp
fcoml
lds
into
in
lahf
dec
jle
testb
sub
lods
mov
mov
mov
daa
decb
js
inc
std
int
js
pop
xchg
adc
cmpsb
sbb
cld
fadd
out
aam
test
pushf
add
mov
dec
shrl
aas
ds
sbb
push
jae
mov
ficomps
out
push
in
imul
dec
dec
jnp
cmp
push
lea
lahf
popa
lods
sbb
mov
push
in
shrl
and
fistl
lret
jle
repz
scas
pop
push
xchg
ds
adc
movsb
jle
sbb
mov
jl
in
mov
cmp
fwait
pop
mov
cltd
mov
jae
mov
or
add
push
rclb
jb
sub
sub
push
in
xchg
sti
icebp
add
mov
enter
adc
addr16
mov
mov
mov
mov
sbb
stc
cmp
nop
rcl
adc
pop
inc
stos
mov
pop
stos
in
pop
cs
ficomps
push
lret
rolb
test
mov
xor
cmp
or
data16
sub
xchg
or
push
outsl
jmp
fcoms
popa
sbb
pop
aam
pop
lods
xor
add
add
pop
leave
sub
or
jp
in
jbe
pop
dec
dec
push
inc
jg
js
iret
sub
inc
mov
add
insl
mov
inc
pop
add
sti
out
movsb
aaa
xor
in
push
fsubs
mov
outsb
int
dec
or
xchg
jbe
std
or
fcmovnb
stos
push
into
mov
outsb
in
sub
adc
roll
xor
insl
mov
jae
or
mov
test
lret
aas
scas
pop
adcl
jle
pusha
sbb
pop
cmp
add
rcl
int3
xchg
mov
bnd
pmullw
fwait
loope
std
cwtl
sbb
lahf
dec
sub
lret
inc
iret
lds
inc
jne
je
sbb
js
or
test
bound
sub
movsb
repnz
inc
mov
jns
dec
mov
inc
in
loope
xchg
sub
sbb
jl
bound
pop
orl
les
setno
imul
fidivrl
arpl
lahf
push
out
fs
mov
pop
aam
sub
mov
sbb
xor
fcoms
mov
push
adc
in
inc
xor
jo
jae
lods
iret
add
es
dec
repz
mov
adc
jae
std
ror
addb
leave
xchg
push
mov
hlt
outsb
mov
cltd
xchg
sbb
ret
out
push
mov
mov
outsb
dec
shr
ficomps
xchg
mov
in
ljmp
or
sbb
cmpsb
jge
rorl
adc
jne
dec
push
add
ret
xor
out
filds
jae
mov
arpl
fcoms
lret
into
or
fstpl
out
fildl
inc
dec
sub
jae
cmp
cmpsl
jae
jnp
inc
js
xchg
pop
jo
or
sub
pop
pushf
pop
mov
adc
or
sbb
aam
insb
cli
dec
mov
jb
jno
mov
adc
xchg
pop
sbbb
out
loop
push
jns
adc
inc
scas
test
roll
rorb
or
orl
or
inc
jb
loop
stos
pop
divb
sub
mov
and
xchg
pop
das
cs
data16
icebp
inc
or
inc
mov
lock
xchg
and
fidivrs
stc
jae
mov
mov
xchg
imul
gs
das
mov
sbb
cltd
cmp
pop
fprem1
imul
fs
fcmove
pushf
arpl
xchg
add
pop
imul
loope
jp
sbb
push
push
pusha
mov
push
sbb
xchg
mov
mov
lret
gs
sbb
lods
aad
addr16
push
lods
lea
mov
dec
jb
pusha
jae
jge
mov
sbb
mov
js
push
repnz
mov
popf
aad
clc
cmpsb
sbbl
cmp
push
jge
xor
xchg
xor
pop
push
aad
mov
addl
xor
xchg
dec
mov
mov
idivl
hlt
ret
cli
call
and
sub
ret
push
loop
jns
popa
nop
test
mov
in
in
push
or
pushf
cltd
lahf
shll
dec
jne
mov
shrb
ret
push
ret
dec
mov
rcl
xchg
fwait
jecxz
and
or
stc
inc
dec
aas
mov
ret
xchg
push
cltd
sti
in
call
push
or
movsb
dec
mov
pushf
popf
addr16
hlt
lret
xchg
or
dec
ja
mov
push
popa
rcl
lahf
pop
movb
adc
mov
loopne
test
test
mov
jl
or
cli
add
sbbl
enter
sbb
and
icebp
jp
inc
pop
dec
negl
shll
lds
pop
jno
xor
fs
lods
pushf
cmp
inc
xchg
mov
inc
nop
or
dec
sub
orl
pusha
cmpsb
pop
outsb
or
psrld
test
cmpsl
inc
pop
addr16
fmul
aas
movsb
inc
push
mov
rcr
inc
cltd
dec
outsb
inc
pop
xchg
cmc
insl
testl
repnz
lret
lock
jb
cmp
adc
inc
jo
xchg
negb
out
mov
dec
fsub
int3
add
shll
mov
mov
rcll
xor
cli
sbb
fdivrl
and
mov
dec
push
push
xorl
or
nop
mov
lods
lods
fwait
adc
mov
call
dec
mov
arpl
pusha
jecxz
or
mov
inc
or
pop
mov
bound
pop
adc
add
loope
and
sbb
fistps
arpl
mov
inc
popf
mov
inc
sahf
push
mov
insl
pop
inc
aad
mov
imul
pop
push
pop
rcrl
ret
add
jmp
or
into
add
or
shll
cmp
cli
sub
adc
in
cmp
push
fptan
in
dec
icebp
mov
lret
jmp
hlt
jg
sub
test
cs
movsl
scas
xchg
insl
mov
mov
mov
sbb
mov
sbb
arpl
clc
addr16
pusha
add
dec
and
fs
sbb
fcmovnb
jb
rorb
jge
aam
xor
sti
arpl
pop
fucomi
mov
cmp
in
sti
xchg
fwait
sbb
imul
adc
outsl
push
mov
and
cld
mov
jg
fcompl
loopne
add
push
jp
add
inc
out
xchg
daa
ds
enter
into
push
jae
adc
stos
mov
or
mov
jg
fsubp
fcoml
xor
call
cmp
add
cmpb
push
repz
add
cmpsb
mov
subl
mov
cld
es
lock
jle
sub
stos
dec
sbbb
jae
inc
cmp
movsl
lods
push
add
std
in
adc
rclb
pop
outsl
fistl
push
inc
pop
sbb
sbb
in
cwtl
loopne
into
xor
mov
ljmp
xchg
notl
mov
sbb
mov
add
insl
cwtl
faddl
inc
dec
cmp
das
rclb
add
jb
cmpsb
pusha
jmp
xor
jne,pn
insl
ljmp
sbb
push
pop
lock
pop
jle
call
or
push
popa
xor
sub
cli
cmp
mov
loop
pop
adcb
mov
iret
test
in
dec
pushf
mov
mov
lret
test
mov
jmp
test
jmp
adc
xor
mov
sub
xor
pop
dec
inc
push
push
pop
add
add
adc
sbb
sub
cmp
cmpsb
fwait
cmp
ljmp
aam
jo
sbb
mov
xchg
ja
popf
xor
push
dec
cli
clc
mov
ret
xor
push
mov
mov
aaa
push
jmp
pop
nop
ja
push
iret
cmpsl
mov
jmp
movsb
add
incl
sub
add
fst
push
dec
ret
pop
mov
aas
movsl
and
mov
insb
sub
xchg
cmp
cli
and
pop
icebp
and
dec
inc
mov
leave
lret
mov
jp
jb
jle
ficoms
cmc
mov
enter
inc
sub
imul
xorl
jns
jp
cld
inc
adc
std
xchg
sti
jno
lahf
lcall
dec
and
movsb
shlb
pusha
loopne
add
xor
cmc
insb
ficoms
cltd
mov
inc
sbb
mov
inc
mov
mov
stos
cmp
xlat
inc
jo
hlt
fcoms
sahf
pop
cli
mov
pop
lret
lods
test
jae
mov
mov
pushf
push
imul
inc
je
fsts
pop
cmp
pop
in
lods
pop
aad
les
pop
mov
scas
test
bound
add
in
out
lret
lods
pop
test
loop
sarb
mov
jp
push
movsl
in
jns
sarl
add
lahf
bound
mov
fstpt
ffree
inc
mov
out
movsl
mov
lcall
dec
sbb
dec
cmp
rcrb
cmpsw
mov
aaa
jno
les
push
cs
lods
xor
inc
rorl
jae
into
sbb
popf
xchg
arpl
xlat
push
ljmp
xorb
rclb
xchg
push
push
in
test
les
jecxz
cmpb
addb
rolb
xchg
test
xor
idivb
rorb
sti
sbb
jg
pop
adc
leave
mov
sbb
pop
enter
test
rorb
enter
mov
pop
adc
int3
inc
test
int3
in
jl
jge
loope
sbb
addr16
cmp
push
xor
popa
sti
lret
cltd
xchg
das
add
adc
dec
cmp
jb
bound
cmp
idivl
xor
add
test
jp
xchg
mov
stos
jbe
mov
push
push
jno
add
inc
rorl
mov
mov
jae
push
rolb
pop
xchg
mov
xchg
ret
xchg
jne
sub
lds
out
popl
scas
xchg
jge
insl
sbb
stc
add
stos
and
cmp
fdivs
dec
mov
adc
mov
data16
mov
lds
scas
outsb
subb
jno
jbe
movsl
cmpl
loope
ficompl
scas
jge
std
dec
push
into
cltd
fnstcw
lea
or
push
push
lret
inc
test
ja
jns
ds
push
sub
jge
pinsrw
dec
mov
sub
add
sub
add
insl
sti
push
lret
js
sbb
push
cs
dec
movsb
in
dec
inc
and
cmp
mov
mov
pusha
mov
mov
dec
insb
inc
push
xchg
dec
scas
cli
ds
sbb
ret
in
movsb
repz
es
cmc
mov
xchg
pop
aad
push
stos
ljmp
pop
add
sub
push
xor
or
sbb
cmp
lret
xchg
pop
mov
cli
mov
push
push
pop
ret
jecxz
sahf
scas
pusha
xor
xchg
bound
fs
sarb
push
dec
icebp
xchg
cmp
cmp
dec
jae
arpl
sbb
lds
sub
sub
call
rcrl
ja
jae
mov
cwtl
enter
jge
or
andps
lahf
insb
mov
mov
aam
lea
mov
push
cmpsl
push
push
bswap
inc
jo
sub
dec
inc
scas
std
sbb
call
lahf
xchg
push
andl
ror
out
sbb
cli
mov
sbb
insl
ljmp
lods
in
arpl
dec
cmc
push
ret
orb
or
cld
mov
sub
jecxz
or
jecxz
addl
inc
xorps
cli
sbbb
push
popf
insb
add
push
repnz
pop
sbb
push
push
addr16
pop
or
jnp
inc
pop
shlb
jne
pop
cmp
rorl
push
jmp
inc
movl
dec
cmp
leave
add
arpl
rolb
xchg
jnp
jns
push
xchg
xor
mov
or
add
mov
push
push
repz
push
test
and
add
and
push
sbb
in
mov
jb
jae
dec
stos
lods
push
test
cmpsl
cltd
mov
addb
mov
xor
mov
data16
lods
fisubrl
jae
dec
cwtl
shlb
cmpsl
enter
inc
pop
js
int
enter
mov
inc
orb
xchg
imul
mov
ret
fsts
jl
aad
movsl
push
mov
popa
inc
dec
and
push
lret
ficompl
xchg
xchg
push
cmpsl
mov
xor
sub
adcl
sarl
adc
push
out
push
fldl
les
test
data16
dec
imul
xchg
jp
mov
mov
cmpsl
and
mov
outsl
cmp
inc
adc
bound
mov
pop
push
aaa
or
add
stc
stc
mov
leave
ja
or
mov
mov
jle
dec
push
mov
mov
lods
xor
cmp
add
mov
iret
xlat
mov
ficompl
xchg
repz
sarl
mov
negb
push
fcmovu
cwtl
push
or
pushf
cwtl
sbb
sahf
repnz
mov
jne
pop
cmpsl
dec
roll
cmp
stc
or
in
fldl
sub
lds
fs
dec
jo
pop
inc
push
mov
test
insb
fiaddl
es
negl
sub
dec
mov
mov
xchg
pusha
sbb
and
