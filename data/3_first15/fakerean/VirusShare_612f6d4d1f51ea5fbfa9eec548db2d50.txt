sbb
add
adc
out
add
flds
fwait
mov
pop
leave
xchg
xchg
sub
cmpsl
popf
jp
sarl
sub
pushf
dec
rcrb
int
pop
push
push
mov
add
mov
xor
andl
add
mov
sub
lods
inc
jg
adc
loopne
into
ja
stc
in
xchg
jmp
data16
adc
popf
push
lock
mov
popf
popf
incl
out
and
fucom
inc
xchg
push
movsb
add
stos
pushf
aam
cs
outsb
mov
popfw
mov
jmp
push
and
mov
sar
jl
movsl
orl
and
insb
push
fisubrs
test
cli
dec
sub
ss
mov
and
popa
mov
std
mov
icebp
repz
and
test
test
sub
stos
add
mov
mov
add
in
andl
xor
int3
hlt
inc
xchg
fmul
ret
repnz
xor
push
sbb
ljmp
std
int
adc
leave
add
jne
cmp
scas
dec
addb
pusha
es
or
in
stos
gs
enter
sub
jl
sub
jbe
test
adc
mov
fbld
movsb
rolb
jecxz
pop
dec
mov
in
push
call
in
not
mov
imulb
pop
pop
les
outsb
enter
imul
lods
mov
rcrb
pop
js
pop
jl
pop
popa
mov
sbb
pop
jle
adc
ja
dec
cwtl
es
shrb
add
xchg
hlt
cld
inc
fucomip
jo
and
push
lods
std
ret
lcall
orb
fwait
dec
repz
int
hlt
fisttps
dec
add
lds
testl
test
bound
push
lods
push
popf
or
sti
dec
mov
fstp
pusha
mov
scas
inc
inc
mov
mov
stos
sub
flds
andb
jns
ds
pop
fwait
movsb
icebp
adc
in
clc
aad
mov
push
insl
das
out
inc
pop
xor
movsb
pop
xchg
inc
ljmp
test
xchg
mov
mov
shrd
loopne
mov
mov
mov
xchg
and
pop
cld
push
dec
push
fnstcw
das
push
lods
fadd
cmp
add
fwait
popa
adc
fildl
cwtl
mov
push
lret
sub
aaa
push
stc
inc
sbb
xchg
fwait
cmpl
and
lret
mov
je
mov
int
or
push
sbb
seta
cmpsl
fmuls
push
sub
fwait
mov
push
and
pop
push
stos
faddl
daa
dec
mov
jl
sub
aas
add
test
test
rorb
sahf
push
push
mov
mov
in
fs
fists
xor
adc
sub
sub
or
jb
mov
aaa
sub
add
xor
test
push
cmpsb
cs
sbb
imul
inc
inc
movsl
push
inc
jno
mov
push
mov
orl
add
gs
xchg
xchg
stc
xor
rcrb
aad
inc
mov
insl
jge
movsb
stos
inc
adc
inc
and
cmp
gs
adc
call
sahf
dec
cmp
mov
dec
mov
pop
enter
adc
add
xchg
mov
cmpsb
fdivs
aaa
xchg
or
pop
cs
mov
lcall
test
rorl
xchg
pop
jmp
xchg
aaa
es
adc
repnz
sbb
cmp
bound
adc
divb
cwtl
and
shll
roll
fcmovnb
popf
sbb
jns
mov
lods
cmpsl
ljmp
inc
xor
ret
in
adc
mov
mov
rorl
rcr
int
loop
cmp
fdivrs
xchg
imulb
add
xlat
std
in
mov
mov
cmp
rorb
inc
lock
sub
repz
and
mov
repnz
repz
dec
mov
jle
mov
iret
and
mov
pop
popa
popa
shrl
xchg
and
adc
insl
mov
stos
mov
std
dec
xor
movsb
cwtl
pop
hlt
cmp
sub
jg
mov
mov
pushf
add
mov
hlt
test
gs
mov
push
xor
xchg
cmp
dec
dec
insb
cmpsb
into
xchg
lods
fildll
lods
jl
add
sub
sbb
pop
mov
mov
bound
sbb
xchg
xor
sub
and
pop
lret
sub
sbb
ljmp
imul
cmpsb
mov
cmp
dec
mov
stc
add
sbb
cmpsl
inc
xor
jp
outsb
in
xchg
cs
push
push
in
stc
test
pop
cmp
xchg
hlt
mov
sub
cmp
xor
fidivrl
adc
jmp
mov
jmp
in
leave
les
mov
adc
sub
hlt
mov
adcb
push
bound
xchg
js
fistpl
pop
int3
or
iret
leave
fildll
loope
adc
daa
hlt
sbb
clc
mov
add
push
sbb
loope
iret
xchg
subl
mov
loop
pop
loop
inc
ret
add
inc
fs
xchg
cmp
mov
inc
xlat
ror
es
adc
lret
adc
roll
cli
divl
dec
push
rorl
mov
jge
sbb
xchg
lods
xor
outsb
das
sub
int
push
enter
arpl
cltd
adc
push
mov
xor
push
mov
lahf
inc
ret
cld
or
cmp
dec
adc
add
cwtl
sub
ret
popf
cmp
lea
mov
inc
sti
pusha
xchg
hlt
movb
dec
ja
fiaddl
xchg
mov
dec
jge
or
inc
imul
inc
and
repnz
mov
dec
jg
lret
sub
jecxz
mov
scas
add
loop
pop
lahf
dec
jbe
pop
rcrl
add
clc
ljmp
jle
or
or
lret
iret
xchg
imul
adc
mov
inc
inc
ret
out
mov
jge
fs
subb
adc
add
lahf
rcrl
out
inc
cmp
and
lds
jo
ds
popf
sbb
popf
add
jne
xor
mov
push
mov
mov
jns
pop
mov
imulb
fsub
not
call
stos
mov
dec
sti
pop
and
in
mov
repz
add
ret
mov
scas
mov
ret
inc
sahf
in
add
shll
cld
inc
jmp
fsubrl
test
cmpsb
jbe
or
in
call
push
sbb
jae
jge
dec
loope
outsb
int
or
sti
mov
inc
adc
dec
jl
dec
inc
dec
inc
mov
inc
and
and
lret
mov
jp
loop
pop
test
out
jg
sbb
imul
repz
jecxz
aaa
mov
std
inc
xlat
pop
dec
inc
popa
mov
call
xor
scas
xchg
pop
adc
mov
inc
insb
push
xchg
jbe
xor
add
dec
test
rcrb
aaa
add
stc
push
lea
mov
aas
inc
push
cs
sub
enter
test
int
jnp
pop
xor
aad
cmc
pop
rclb
pop
jae
sbb
mov
movsb
pop
outsb
stos
push
enter
mov
fistl
pop
lock
cld
pusha
cld
jo
ja
mov
fistl
pop
int3
mov
lods
add
ljmp
lods
cli
cmp
icebp
into
sbb
jae
hlt
popf
sub
xlat
xor
cmp
adc
or
pop
mov
mov
mov
cltd
dec
fwait
mov
or
fisubrs
in
lahf
pop
jo
pop
das
es
dec
daa
in
mov
mov
adc
pop
clc
in
jae
fldcw
inc
push
ja
add
xchg
or
jmp
sbb
adc
pop
adc
cmp
pop
je
stos
lods
pop
dec
xlat
pop
ss
outsb
cmc
sub
add
lods
jl
sbb
add
cmp
sbb
inc
rorl
rcrb
cmp
sub
jbe
pop
sub
insb
lcall
addb
das
and
dec
and
std
or
pop
xor
je
sub
mov
ret
gs
mov
mov
xchg
popa
fsubrl
es
mov
mov
sub
mov
cmp
jnp
xchg
adc
add
lahf
jg
int
lods
fidivrs
mov
scas
pop
mov
push
nop
push
ja
inc
aam
mov
bswap
mov
adc
scas
xchg
out
ret
dec
shrb
imul
jmp
add
in
mov
sti
xor
inc
mov
jae
out
cmc
subb
jg
push
es
rcr
cmp
and
daa
test
enter
mov
les
mov
imul
int
push
jge
sbb
test
pushf
lcall
testb
push
setg
fildl
xor
inc
mov
xchg
inc
jae
inc
jo
pop
divl
negl
jnp
mov
stos
imul
arpl
hlt
xor
ss
jg
jns
shl
call
fldenv
mov
in
fcoml
xor
int3
mov
out
jbe
fiadds
dec
insl
les
dec
xchg
hlt
lock
pop
or
imul
out
jns
movsb
mov
and
shrl
jl
test
adc
jle
push
push
int
loopne
xchg
pop
rcrl
enter
xor
sbb
mov
daa
lods
les
shll
loopne
into
mov
addr16
outsb
mov
cltd
adc
push
mov
pop
data16
leave
sbbl
stos
xchg
sub
aaa
dec
addb
pusha
cltd
inc
sbb
lods
or
insl
in
into
or
mov
mov
out
pop
movsb
cmc
es
das
repnz
rorl
gs
aam
pop
test
dec
inc
push
adc
jp,pn
out
cmp
rcrb
cmp
lahf
ss
adc
dec
ss
push
push
out
cmpb
jo
movsb
addl
daa
and
test
aam
mov
xchg
mov
out
lods
cld
out
mov
inc
std
inc
mov
lods
sub
mov
int
enter
idivb
sub
aad
ja
dec
into
pop
jecxz
push
loope
aad
int
mov
into
xchg
xchg
xor
pusha
insl
mov
test
push
mov
jae
dec
jo
adcl
push
bound
sti
pushf
mov
addr16
mov
sbb
push
jl
stos
inc
or
cmpsb
adc
jge
sbb
and
jg
out
jg
pushf
test
pusha
xor
sbb
adc
cmp
push
mov
popl
pop
rcrb
or
dec
adc
call
mov
dec
sahf
dec
std
and
movsl
xor
xchg
push
addr16
in
add
lret
in
leave
out
out
cmp
mov
jbe
into
dec
ficoml
mov
cmp
clc
dec
mov
pop
fs
fiadds
sub
icebp
cmp
jmp
insb
repz
inc
aad
adc
jae
fistpl
fs
cwtl
jbe
pop
mov
outsl
popaw
std
leave
jge
or
inc
imul
sbb
jbe
dec
jmp
gs
inc
and
shll
cmp
popf
test
scas
mov
pop
mov
scas
jo
test
movsb
sbb
cmpsb
rcrb
out
pushl
and
sub
mov
rcrb
inc
cwtl
daa
pushf
sbb
loop
add
mov
mov
xchg
lret
gs
out
dec
add
repnz
test
pop
loop
out
inc
call
inc
jnp
leave
test
xchg
push
push
pushf
xchg
fwait
jp
ficoms
pop
pop
sub
cmpsl
imul
dec
adc
inc
push
rolb
arpl
mov
sub
shlb
cmp
roll
adc
mov
lds
enter
pop
add
dec
lcall
out
dec
jb
cmp
inc
pop
dec
lahf
fucomip
imul
adc
cmpsb
fsts
out
lret
jmp
jbe
pop
lods
icebp
xchg
mov
or
je
into
js
adc
xor
fmull
push
call
sti
push
dec
xchg
shll
jecxz
pop
cwtl
adc
fldenv
pop
stos
sub
sbb
hlt
mov
fcoms
mov
bound
enter
fwait
out
sbb
cmp
sbb
cmovns
inc
mov
scas
add
inc
rcrl
add
push
rclb
repz
mov
or
punpcklbw
sahf
sahf
ja
mov
sub
sub
sti
fwait
or
ds
test
push
adc
repz
les
stc
lahf
inc
cmp
dec
jmp
insl
xor
sub
xor
xor
mov
insl
in
xlat
cmp
cs
mov
push
sub
jbe
daa
pop
xchg
dec
jl
inc
mov
test
sbb
jno
jbe
sar
shll
les
jo
mov
ret
jle
push
cmp
push
push
dec
ljmp
shr
dec
mov
sub
test
testl
or
cmp
call
stos
push
out
sbb
cmp
hlt
dec
inc
push
ja
das
mov
inc
sbb
aam
and
jno
mov
pop
mov
pop
jg
out
test
xchg
pop
xchg
xchg
pop
mov
dec
dec
cli
outsb
jl
jge
in
mov
sbb
fwait
pop
mov
mov
loope
stc
mov
push
pusha
jg
ret
sbb
adc
sbb
mov
into
test
fwait
nop
mov
cmpsb
fistpll
pop
sub
xor
cli
cmp
mov
jb
cld
divl
push
xlat
sbb
jmp
xor
adc
fwait
stc
test
call
push
push
cld
sub
sub
or
push
mov
cmp
pushf
mov
sbb
in
fnstcw
lahf
add
orl
outsl
pushf
ljmp
aam
inc
lret
mov
je
repnz
pop
mov
dec
xchg
mov
rorl
adc
xor
ds
jecxz
inc
aaa
int3
xchg
shl
outsb
xchg
cmp
out
hlt
mov
js
lahf
sti
xor
or
shrb
in
mov
mov
jne
mov
jae
into
fwait
cmpsb
gs
pushf
cmp
jg
jb
jg
les
out
xor
in
es
mov
dec
add
movsl
in
imul
lret
mov
xor
mov
mov
stos
jno
cwtl
cmp
cmp
and
push
js
int3
cltd
repz
sub
mov
loopne
jmp
jo
xor
jge
or
push
imul
xchg
lea
aad
dec
in
jl
enter
and
lahf
dec
negl
sub
hlt
lods
push
cltd
adc
mov
adc
scas
test
out
jo
ds
stc
jp,pt
lods
mov
pop
mov
or
xchg
push
ja
fistpll
out
fcmovbe
cmp
add
sbb
or
inc
inc
mov
fmuls
sbb
push
outsl
stos
imul
mov
mov
std
int
or
les
dec
add
push
dec
into
mov
loope
push
sahf
mov
testb
insl
mov
loope
dec
popa
sub
jecxz
pop
cwtl
shr
inc
mov
outsb
sbb
lcallw
pop
cltd
cmc
arpl
mov
shl
stos
cmpsb
out
test
mov
outsl
mov
mov
lret
test
inc
lds
mov
cmpsb
mov
xchg
stos
inc
loop
jne
sub
scas
add
pop
mov
pop
sub
hlt
xchg
ss
jmp
ret
pop
orb
aad
fidivs
lock
jo
dec
dec
dec
fisubl
imul
adcl
pop
outsb
pop
fcmovnb
fs
push
or
push
cwtl
shrl
fildl
mov
cmp
aad
sub
xchg
cmp
lods
pop
push
and
mov
leave
js
std
inc
push
jno
insb
aam
jno
scas
cmpl
in
addr16
jne
jo
rcl
inc
xchg
imulb
pop
inc
pop
inc
insb
test
xchg
sub
push
fildll
hlt
inc
push
dec
insl
or
sbb
push
clc
je
push
adc
data16
mov
iret
dec
pop
sbb
dec
mov
sbb
roll
jnp
ret
or
sub
fsubl
in
and
fwait
aas
sarb
or
cmpsl
mov
pop
stos
call
jg
loope
dec
rolb
lds
les
sbb
xor
jge
sbb
adcl
add
arpl
or
dec
mov
fidivs
pop
rorb
test
jmp
mov
fisubs
frstor
mov
inc
push
jno
cmp
fst
rcrl
inc
int
jl
or
mov
mov
in
mov
mov
pop
pop
jmp
add
or
inc
mov
push
cmp
xchg
push
push
cs
aas
dec
push
pop
dec
jb
dec
bound
jle
inc
arpl
lods
or
mov
sbb
test
jecxz
push
cmpsb
jle
in
lock
in
cmpb
and
insl
push
jns
push
orl
aam
test
aaa
lock
mov
data16
mov
mov
add
push
sti
sbb
sbbb
push
cmp
and
lret
daa
xor
cmpsl
sbb
push
imul
addl
call
cmp
pop
sbb
sbb
hlt
jns
xlat
ret
imul
jns
push
dec
imul
sub
jge
mov
jp
stos
jnp
mov
jecxz
xor
sub
and
jge
cmc
std
xchg
cmp
xchg
mov
mov
add
jne
mov
movsl
ljmp
adcl
jle
xchg
adc
or
in
lcall
mov
in
mov
int
dec
jle
push
push
xor
xchg
sub
repnz
in
movsl
lods
inc
push
insl
mov
push
cltd
mov
ja
mov
andb
into
lahf
dec
mov
insl
jg
les
jle
shl
sub
mov
dec
inc
sub
movsb
lret
dec
stos
mov
adc
insb
push
fiadds
pusha
stos
into
mov
daa
sub
cmp
dec
push
mov
mov
aad
loopne
jo
cwtl
jnp
push
icebp
xchg
cli
jnp
lock
xor
xor
iret
xor
push
je
pop
add
xchg
aaa
ficomps
fdivl
outsb
insb
lods
mov
inc
mov
mov
dec
scas
shlb
adc
test
rolb
in
lahf
ss
stos
mov
sbb
scas
inc
shrb
xchg
or
loopne
mov
fbld
daa
pop
lods
mov
fistps
test
sub
scas
lods
jne
xchg
into
pop
xor
popa
inc
add
aam
push
hlt
aaa
push
push
fwait
mov
xchg
ret
mull
pop
sbb
adc
xor
mov
add
or
call
cwtl
stos
mov
push
ljmp
cwtl
loope
nop/reserved
fimuls
or
cmp
push
jl
fstl
push
push
xchg
xor
icebp
dec
lret
cld
and
cmp
fisttps
cwtl
mov
cmpsb
out
cmp
pop
pop
outsl
lret
nop
push
ja
sbb
sbb
mov
and
or
sub
mov
xchg
xor
and
add
inc
dec
pop
mov
imul
pop
cs
xchg
sbb
dec
fildll
sti
mov
add
xchg
rorb
sti
jae
lea
test
xchg
int
or
es
push
test
pop
xchg
es
pop
and
iret
sbb
jnp
bound
mov
imul
cmp
inc
out
cwtl
shr
dec
ds
xchg
push
outsl
push
add
sub
sbb
and
lock
jnp
jg
aas
cmc
push
scas
dec
inc
push
push
mov
xchg
test
inc
ds
filds
call
out
hlt
repz
je
sahf
repz
mov
pop
pop
inc
lea
or
push
subb
fisubs
test
mov
test
adc
bound
test
dec
dec
int
ret
jns
pop
mov
icebp
sarb
inc
out
out
jb
xor
les
pop
cld
addr16
push
cli
addb
adc
loopne
sbb
cltd
pop
test
je
cmpsb
adc
push
mov
xlat
mov
push
dec
test
jmp
je
adc
idivb
test
add
push
sub
scas
sahf
jp
fistpll
mov
pop
or
fcoml
loop
ret
or
xchg
mov
stc
testl
fidivrl
jb
pop
mov
fs
testl
out
in
aas
dec
push
dec
outsl
mov
sti
adc
insb
sbb
and
add
mov
inc
jge
out
xor
jae
inc
lret
sub
ret
and
das
movb
push
and
jns
sub
scas
add
sub
and
mov
jns
pop
xchg
js
and
pop
jo
cmp
mov
sbb
add
xchg
push
fdivrp
shl
xchg
fcoms
push
imul
test
xlat
in
pop
std
gs
fs
call
xchg
mov
or
rorb
xor
rcl
mov
fsubrs
lret
cld
mov
or
cmpsb
test
leave
repz
bound
xchg
gs
push
imul
jp
hlt
ret
dec
leave
nop
mov
mov
sbb
sbb
fbld
sbb
in
call
add
stos
jb
shll
dec
repnz
jle
jmp
pop
pop
scas
outsb
xchg
test
push
pop
outsl
rorb
inc
add
ljmp
dec
scas
xchg
add
sub
mov
test
arpl
sbbl
push
sti
repnz
adc
lret
int
cvtps2pd
xchg
mov
sbb
ret
jne
sbb
xchg
clc
leave
adc
or
mov
lods
test
mov
jb
sbb
daa
sti
outsb
pop
pop
lcall
inc
addl
into
es
push
xlat
ss
pop
cmp
jno
adc
adc
pop
adc
cwtl
push
adc
dec
in
sub
pop
test
je
and
test
outsl
test
nop
mov
jbe
or
cmp
pusha
mov
fs
fcompl
pop
xchg
lret
mov
dec
cmp
push
insl
adc
or
sbb
mov
mov
insb
je
test
xchg
add
clc
xchg
addr16
aaa
in
in
mov
mov
jmp
xor
or
das
or
xchg
push
cmp
pop
lret
mov
xchg
add
sub
cmp
int
dec
mov
insb
mov
jbe
cmc
cmp
std
jmp
jmp
push
jne
ss
or
jmp
ja
jae
mov
jae
sub
inc
fs
stc
fisubs
aad
or
cmc
or
ret
jo
lcall
sub
lods
xchg
int
nop
pop
icebp
cld
mov
sar
in
imul
test
mov
int
mov
sarl
in
outsl
add
es
test
jns
je
fxtract
mov
xchg
xor
or
es
aam
out
xchg
push
mov
and
xlat
rcr
pop
hlt
cmp
pushf
in
jne
adc
mov
outsb
cmpsb
repz
cwtl
jmp
mov
sbb
out
sbb
test
inc
movsl
repz
cmp
popa
fs
pop
daa
jmp
out
pop
adcl
lock
jnp
mov
adc
int3
jmp
mov
jg
jmp
jae
lahf
and
add
jge
lds
movsl
mov
cmp
incb
sub
aad
xchg
pop
cld
sbb
enter
push
ljmp
loop
xor
lods
test
popa
out
mov
sarl
test
push
xchg
movsb
arpl
ja
test
jo
outsl
sub
mov
cltd
or
test
sbb
fisubl
and
mov
pop
sub
mov
lret
outsl
lods
inc
cmpsl
mov
ret
mov
nop
xchg
loope
push
mov
pop
jg
pop
ss
xor
pop
jb
and
or
sub
loop
inc
decb
push
and
dec
pop
push
dec
mov
insb
pop
xor
inc
xchg
test
nop
sub
imul
mull
lods
test
adc
call
jnp
cmc
adc
mov
std
pop
pop
add
fwait
lcall
and
or
jno
bound
add
ficompl
aaa
test
lcall
inc
mov
in
xor
rolb
dec
fwait
in
pop
push
daa
push
cmp
int
jo
pop
clc
pop
dec
jbe
xchg
loopne
movsb
das
out
clc
inc
pop
imul
inc
fdivs
add
mov
clc
stos
sbbw
aad
jle
sbb
jmp
push
fcmovbe
add
inc
xor
sbb
mov
fcmovnbe
int
into
adc
xchg
imul
fistpl
mov
cld
ss
rorb
cmc
lds
out
jg
add
jp
jl
mov
sub
sarb
push
movsl
pushf
mov
call
jb
xor
fisubs
adc
in
mov
lret
test
insl
jbe
add
dec
mov
dec
jnp
jns
mov
mov
adc
inc
pushf
mov
test
inc
ret
icebp
inc
sahf
aas
adc
or
lods
inc
jno
repnz
cli
ret
addb
cmp
cmp
and
out
ds
jecxz
movl
cwtl
sti
pop
mov
push
in
stos
repnz
pop
mov
xchg
aaa
scas
xor
or
fstpt
fdiv
filds
push
sbb
push
pop
into
sti
adc
cli
ljmp
or
and
daa
int
sub
inc
or
push
mov
stc
sub
jns
mov
pusha
inc
mov
jbe
ss
mov
jo
ja
int3
xchg
jle
sub
icebp
aad
lds
ret
repnz
rorb
pushf
dec
andb
call
cld
and
and
popf
icebp
aaa
je
sub
sub
xchg
lcall
test
mov
insb
test
pop
scas
lock
test
adc
xlat
ret
xchg
pushf
mov
push
mov
sbb
fdiv
cmp
jne
xor
loope
into
fimuls
mov
and
insb
mov
cmp
cmpsb
mov
testl
jle
lods
dec
das
ljmp
xor
mov
or
sbb
jecxz
adc
push
pusha
sbb
cmp
lcall
mov
or
dec
sub
push
das
cmp
lcall
cwtl
add
push
mov
in
ljmp
lock
outsb
gs
cmc
stos
nopl
jae
cmp
popa
std
jne
out
mov
daa
out
icebp
mov
mov
inc
and
ja
div
cmp
or
lds
jns
mov
loop
inc
leave
and
xchg
sbb
pusha
shl
aaa
lret
push
mov
push
cmp
repz
and
mov
movsl
xor
push
ss
stos
cmp
lods
rcrb
ss
ss
loope
sti
mov
lock
loopne
xor
jo
repnz
fs
les
mov
jp
jbe
in
fisttps
sub
ror
fcomps
cmp
sbb
jl
inc
inc
in
xor
cmpsl
add
mov
xorb
push
push
movsl
dec
mov
inc
jp
in
mov
mov
jae
inc
call
out
mov
aas
and
in
mov
aam
mov
mov
xchg
jmp
dec
cmp
clc
lock
sbb
call
lret
cmp
xchg
xchg
outsl
das
test
lretw
jns
clc
and
xchg
mov
jbe
lods
sbb
addl
xor
cltd
cli
jle
cmpsb
mov
popa
iret
xor
imul
dec
addr16
int3
mov
daa
jne
out
andb
adc
test
in
hlt
push
or
lret
jae
movsl
and
add
aad
in
xchg
popa
out
inc
into
add
hlt
pop
in
jge
jnp
js
arpl
aam
fdivl
jo
fstl
fcmovu
or
stc
jecxz
imul
enter
cmc
jns
in
leave
mov
xchg
clc
mov
mul
and
test
enter
stc
mov
clc
shl
movsl
pop
scas
xor
arpl
ror
out
loopne
rclb
or
pop
push
push
jle
pop
adc
daa
adcb
dec
arpl
xor
push
xchg
push
sub
jb
fwait
add
dec
add
adc
sbb
sti
cli
pop
cmp
int
pop
cmp
sarl
push
fists
in
adc
sarl
pop
jle
mov
lcall
repnz
mov
mov
movsb
movsb
add
pusha
mov
and
mov
mov
repnz
mov
pushf
lds
cwtl
scas
data16
mov
mov
or
mov
cmp
mov
pop
jp
mov
and
or
cli
xor
addl
and
xchg
out
jne
jo
dec
and
int
sub
and
test
xor
adc
cmpsb
mov
inc
xorb
cmc
sbb
inc
add
cmpsl
inc
jge
scas
gs
rcll
hlt
aas
pop
jae
out
in
push
pop
mov
in
test
adc
fisttpl
pop
push
lods
mov
dec
sbb
loopne
push
pop
push
sbb
testl
or
sbb
imul
mov
xchg
sarb
nop
xor
sbb
jbe
sar
xchg
enter
lock
ja
cmp
sbb
xchg
mov
call
mov
cmpsl
popa
icebp
adc
scas
inc
mov
repnz
outsb
aas
cmp
dec
cltd
mov
dec
dec
add
scas
insl
push
std
lret
cmp
hlt
call
mov
jns
sbb
lahf
mov
rorb
xchg
mov
jmp
popa
shl
cs
add
sub
lock
je
jp
outsl
pusha
jnp
callw
mov
mov
or
lods
mov
inc
dec
popf
jne
std
or
mov
out
icebp
outsb
test
xor
fbstp
mov
sbb
xchg
lds
cmpsb
xor
or
cld
js
movsb
in
sbb
jo
fsubs
sar
daa
insb
jns
outsl
loope
and
out
jbe
xchg
sbb
fcmovb
jl
scas
stos
arpl
push
in
lock
inc
add
jp
jg
jns
add
pushf
xlat
pop
aam
or
adc
push
cmc
cmpsl
or
loope
pop
popa
repnz
xchg
pop
nop
or
pushf
scas
push
aas
mov
pop
in
xor
sbb
xchg
xor
and
out
fs
inc
cmc
xchg
sbb
and
cld
cltd
xchg
aaa
sbb
mov
mov
push
jmp
or
push
adc
mov
mov
pop
dec
imul
out
cmp
cmpsl
dec
fstpt
mov
push
or
ficomps
xchg
fcomps
or
sbb
pop
test
lcall
dec
push
xchg
out
mov
hlt
xchg
jo
add
daa
cmp
mov
notl
test
dec
add
sbb
dec
adcb
sub
jbe
mov
aas
stos
into
mov
loope
push
js
int
push
xchg
lea
imul
mov
push
sarb
cmp
pushf
lahf
add
lock
fdivrl
adc
xchg
mov
pop
and
ret
mov
push
pop
push
div
nop
rolb
mov
xor
inc
push
add
and
jb
stos
push
mov
lods
cli
cmc
mov
dec
sbb
push
or
cld
xorb
lods
ljmp
xchg
pop
and
xlat
mov
js
aam
fadds
js
fcmove
in
pop
int3
in
pop
fnstcw
imul
ljmp
lock
pop
sarb
in
sti
xchg
lahf
jg
xchg
pop
stc
xchg
inc
stos
jne
call
fcoms
dec
or
xchg
mov
xchg
dec
push
mov
mov
out
pop
adcb
mov
test
push
rcrl
sbb
pop
enter
lret
pop
aas
pand
jge
sub
js
lea
lahf
jb
jb
add
sbb
xlat
mov
ficomps
pop
mov
dec
xor
out
xchg
push
mov
out
aas
sbb
push
clc
mov
arpl
hlt
and
push
stos
adcl
and
add
inc
cmpsb
pusha
pop
dec
mov
push
cmp
test
xchg
pop
and
in
je
or
jg
lock
hlt
fstps
push
pop
pop
mov
cmp
xchg
jp
test
sti
notb
add
lock
shll
aaa
mov
fwait
dec
mov
mov
sbb
add
or
lret
mov
sbb
das
add
mov
sti
stos
adc
aam
mov
cld
xor
sub
mov
icebp
mov
fwait
push
push
dec
ja
sub
loopne
xor
cli
out
cmp
adc
push
loopne
loope
in
cwtl
rclb
adc
enter
jae
adc
icebp
je
movsl
push
cmp
adc
dec
mov
jge
mov
sbb
cmp
call
out
imul
sti
jle
xorl
mov
into
inc
jns
push
xlat
jg
xchg
inc
movsb
cmpsb
jae
repnz
sub
std
pop
test
fdivs
lcall
imul
lahf
or
add
std
out
imul
shrb
cwtl
mov
mov
push
test
aam
push
sbb
push
xor
imul
fidivrl
or
sub
push
outsb
lods
out
das
push
add
pop
andb
popa
push
or
aad
sub
inc
shrl
dec
inc
xor
arpl
dec
pushf
daa
dec
fisttpll
test
mov
sbb
adc
fisttpl
scas
jmp
ds
mov
stos
jno
rolb
bound
cmp
jmp
es
test
cmp
aam
jnp
mov
or
cmp
mov
sbb
das
jecxz
mov
je
xor
je
bound
cmp
fdivr
cmp
test
or
jl
mov
or
add
out
lret
rolb
xchg
mov
je
out
imulb
int
das
rcl
rolb
test
aas
jae
xorb
or
push
push
aad
icebp
test
sub
pop
inc
push
dec
mov
pop
mov
jle
and
ret
dec
ret
sub
push
adc
jae
mov
fs
cmc
mov
orl
ljmp
pop
cs
in
pop
jl
testl
insb
pop
mov
je
add
pop
lcall
rclb
jno
dec
push
push
push
jb
fucomp
daa
inc
mov
cmp
int
in
aas
sub
cmp
cwtl
pop
out
mov
test
sbb
xor
inc
jne
mov
sbb
arpl
and
sti
or
jecxz
pop
jne
test
ret
jp
inc
and
out
sbb
pop
shlb
jo
lret
jne
mov
clc
add
xor
mov
cmp
mov
addl
jecxz
mov
into
jne
xchg
xchg
out
insl
cmc
jle
mov
shl
bound
push
adc
mov
cli
mov
aam
into
xchg
cmp
dec
shrb
xchg
dec
sub
lret
xchg
xchg
or
sub
outsb
dec
sbb
cs
std
jns
test
mov
lahf
test
sub
out
add
xchg
xchg
sub
pop
pushf
push
lret
push
sub
in
dec
add
movsl
mov
dec
cmp
lahf
mov
pop
mov
mov
pop
in
mov
out
jmp
pop
mov
outsb
jno
repz
pop
bound
cltd
cmpl
or
push
decb
cltd
mov
fnstsw
push
movsb
movsb
push
hlt
sbb
jp
or
or
and
fdivs
mov
push
sbb
dec
movsb
shr
insb
jg
dec
test
call
mov
pop
jns
gs
push
pusha
push
lahf
outsb
xor
out
cmp
popf
ret
inc
pop
mov
mov
in
pop
pop
xchg
int3
push
and
dec
ja
icebp
pop
push
popf
sbb
repnz
out
push
lea
and
sahf
cmpsb
gs
dec
mull
adc
or
pushf
rol
subb
out
test
jecxz
dec
dec
mov
int3
sub
xchg
jge
insl
pop
outsl
mov
dec
push
add
mull
mov
std
jl,pn
xchg
inc
ss
clc
fwait
xchg
dec
inc
into
or
ljmp
jp
push
testl
inc
popa
out
rcl
push
pushf
adc
es
jb
in
or
mov
pop
pop
pop
out
out
test
fstpt
push
mov
sahf
and
or
xchg
decl
jg
lods
sbb
stc
sbb
mov
push
mov
bound
sar
adc
xor
dec
mov
dec
cmp
or
enter
int3
shlb
movsb
pop
mov
sahf
jns
and
jg
pop
adc
sbb
mov
movsl
cwtl
or
lret
fcomp
mov
push
xchg
dec
mov
bnd
cmpsb
jne
xchg
xchg
lcall
add
mov
outsb
shrl
cmp
pushl
shlb
mov
xchg
pop
mov
sbb
mov
pop
cmp
fistpl
test
jge
lcall
push
outsb
sbb
sub
les
push
out
push
call
pop
sub
sub
std
push
icebp
inc
cmp
adc
and
cltd
pop
bswap
push
pushf
sti
loop
pop
jbe
xor
and
push
out
inc
jg
push
push
dec
stos
test
popf
inc
out
scas
dec
cmp
pushf
lds
mov
shrb
sarb
insl
cmp
mov
loope
push
aad
push
pop
js
into
repnz
sbb
loopne
in
insl
mov
mov
inc
gs
sub
in
loop
inc
lods
push
stos
sub
popa
pop
mov
lret
jmp
pop
push
imul
popf
sub
xchg
push
ret
popa
or
push
xchg
xor
inc
adc
add
jb
lods
xor
lea
xor
pop
imul
fidivrs
mov
mov
pop
ret
shll
out
aad
inc
push
push
fcoms
xor
in
in
xchg
popa
fdivl
push
mov
out
mov
add
inc
xor
shrl
xor
stos
xchg
cmc
ja
or
dec
loopne
add
xor
xchg
mov
ret
sbb
pushf
int
ja
rorb
mov
insb
mov
mov
adc
cmp
cmp
in
push
inc
or
ret
or
push
lret
out
sahf
pop
and
dec
icebp
inc
mov
ljmp
sbb
ficoms
stos
ret
or
nop
push
jmp
sub
mov
xchg
fnsave
loop
add
fldenv
cmp
mov
leave
ss
jnp
pop
out
push
sub
adc
daa
imul
mov
ja
lea
stc
scas
pusha
lods
adc
aam
cmp
repz
jg
and
aad
cmp
and
frndint
ds
adc
inc
mov
xor
xchg
and
mov
hlt
movsl
lods
dec
jp
pop
ret
sub
cld
pop
subl
jb
cmc
jne
xor
mov
shrb
pop
sahf
mov
and
cmp
or
mov
sbb
pop
dec
push
and
mov
dec
ja
das
in
mov
ror
fwait
stos
insb
push
xchg
jbe
cmp
ja
repz
push
mov
and
mov
andb
hlt
dec
stos
xor
push
push
jb
clc
push
sub
push
add
pop
mov
jecxz
or
hlt
sahf
jge
aam
lahf
mov
stc
mov
adcl
insb
adc
jge
mov
arpl
jbe
or
bound
loopne
pop
cltd
outsb
in
rcr
sub
dec
xor
fxch
out
mov
mov
lds
cmc
xor
add
cmpsl
xlat
adc
push
jno
enter
aaa
in
xor
mov
sti
dec
and
ret
jle
dec
push
dec
add
or
xchg
push
mov
push
lahf
pop
shll
adc
aaa
repz
and
xchg
and
jo
push
inc
adc
mov
jb
int3
push
dec
sbb
cmp
jno
es
icebp
mov
in
js
adc
lods
jo
xchg
xorb
jo
ss
push
sbb
shlb
sahf
or
xor
xchg
push
xchg
mov
cmpl
jp
jle
ret
clc
repz
nop
pusha
and
mov
push
les
imul
or
inc
fs
loope
jnp
insl
or
nop
mov
test
jmp
cmp
fsub
fstpt
add
push
orb
sbbb
and
leave
loopne
negb
xchg
push
push
add
sub
pop
dec
fisubrs
clc
popa
lock
ds
sahf
sbb
jno
push
push
jnp
xor
pushf
jle
and
jnp
cmp
pop
pop
scas
pushf
cmp
mov
scas
cwtl
stc
jbe
xchg
mov
mov
mov
insl
pushf
sub
add
gs
and
jne
sbb
mov
jmp
pop
jl
xchg
mov
cmp
sarl
jmp
xchg
lret
xorl
jbe
sar
mov
sbb
mov
int3
xor
into
insl
add
out
xor
pusha
cltd
test
fcmovu
dec
sbb
das
add
imul
test
mov
mov
les
push
jbe
mov
ja
mov
add
push
and
es
mov
leave
jo
lods
dec
jge
push
in
lret
adc
in
cmp
lock
push
cmp
mov
out
cmp
fwait
mov
sbb
out
jbe
add
aas
loopne
mov
adc
test
insl
xchg
jo
sahf
pop
pushf
bnd
fistpll
jmp
jle
loope
cmpsl
pop
dec
inc
push
xchg
dec
add
test
inc
in
xchg
jae
jecxz
pop
fsubs
jle
xor
sti
or
cs
sti
imulb
lock
rcrb
mov
lcall
adc
add
popf
icebp
sbb
dec
aas
fwait
cs
or
scas
or
add
inc
xchg
pop
iret
inc
mov
cmpsb
jg
or
ret
testl
lock
imul
push
mov
in
sub
adc
loop
ret
fistps
xchg
add
pop
dec
fnstcw
ss
push
popf
fwait
dec
loopne
fbstp
adc
sub
lods
lea
pop
aaa
or
cmpsb
dec
add
adc
mov
and
mov
or
fwait
mov
pop
mov
jne
push
and
movsb
cld
les
cmp
push
rclb
or
ret
dec
mov
dec
mov
push
jne
or
test
push
loopne
inc
ljmp
dec
mov
pop
mov
out
mov
in
pop
mov
and
stc
mov
mov
cli
sub
cmpb
add
test
pop
cmpl
pushf
xchg
dec
fs
test
pop
sbb
jne
sub
hlt
data16
sbb
fldl
add
xchg
jne
mov
cmp
mov
test
mov
mov
fsubs
mov
pop
popf
mov
aad
mov
pop
pop
scas
sub
push
adc
mov
xchg
mov
push
loopne
mov
push
lods
movsl
cmpsl
ret
mov
push
inc
inc
jge
add
loop
dec
repz
jne
test
jmp
jne
into
mov
xor
push
jnp
cld
fisubs
adc
fstpt
mov
cmp
mov
out
pusha
pop
mov
cld
push
enter
loop
pop
shrb
push
push
xchg
and
and
adc
les
stc
pop
push
sti
stos
jge
xor
fs
insl
ret
mov
xchg
arpl
das
pusha
lods
inc
adc
and
scas
and
cld
mov
pop
dec
cmp
mov
fs
inc
arpl
inc
pushl
lock
fidivrs
push
aas
push
jg
inc
xor
clc
fwait
sbb
in
push
mov
jge
inc
ficomps
or
xchg
imul
dec
ffree
xlat
jecxz
inc
sarl
fwait
movsb
push
push
sahf
adc
and
xchg
cwtl
je
cmp
arpl
dec
repz
aaa
dec
sahf
int3
mov
jo
sub
inc
push
adc
mov
enter
sub
out
mov
idivb
sti
ds
and
xor
cmp
pop
inc
sbb
xor
xor
stc
cltd
push
mov
cmc
push
fxch
and
jno
loop
pop
cmp
imul
xor
shl
hlt
dec
adc
mov
pop
fisttpl
inc
ficomps
out
sbb
ss
push
imul
mov
ss
sahf
shrl
pop
lret
jp
mov
sub
xor
sbb
mov
rclb
xchg
scas
mov
movsb
xchg
out
cmp
mov
jo
arpl
add
mov
movsb
rcl
push
adc
jbe
mov
or
fcmovnu
xchg
pop
pusha
xchg
mov
lds
pop
dec
repz
les
stos
adc
cmc
push
call
jo
xchg
test
push
push
rclb
jns
pop
add
push
mov
xchg
or
mov
sub
repnz
xchg
std
fldenv
shlb
pop
add
repnz
lods
pushf
shll
mov
ljmp
lret
and
jmp
lock
std
mov
mov
repz
lret
mov
sub
test
jmp
insl
test
jns
push
aad
pop
xorb
ret
lock
test
cmpl
adc
push
jle
lods
push
test
int3
movsl
sbb
mov
cmpsl
mov
imul
cltd
jecxz
push
cld
in
pop
cmp
or
pop
pusha
mov
popa
push
movsb
dec
pop
mov
mov
xor
mov
mov
fsubl
adc
xor
pop
pop
or
cmp
clc
movsl
inc
in
adc
or
mov
ja
add
cmp
xchg
out
jb
into
sahf
out
out
addr16
dec
stc
cmp
in
and
xchg
and
cs
pusha
insl
mov
push
lcall
adc
mov
insb
clc
add
or
xchg
icebp
mov
cmp
dec
popa
or
add
jnp
stos
xchg
out
push
push
stc
adc
out
subb
stos
nop
pop
or
fldenv
mov
mov
mov
or
in
pop
dec
mov
in
inc
popa
xchg
pop
addr16
pop
int
adc
xor
adc
test
insb
pop
fcomps
dec
sti
fidivrl
mul
std
lods
adc
and
fcom
jne
repz
shlb
sarl
pushf
sub
push
push
jb
or
out
std
mov
pop
stos
std
xchg
mov
inc
sbb
xor
jno
std
aaa
testb
push
cwtl
lret
inc
push
shrl
imul
push
mov
js
aam
xor
xchg
and
das
icebp
flds
lods
mov
xor
ja
and
adc
cmp
adc
xchg
adc
dec
dec
fs
std
pop
xchg
popf
clc
jg
loopne
nop
adc
out
and
bound
adc
in
jmp
setnp
leave
loopne
call
imul
xchg
fs
mov
ret
push
pusha
mov
lcall
mov
mov
cltd
inc
inc
or
aaa
cmp
mov
scas
xchg
or
sti
adc
push
push
add
push
iret
addr16
out
mov
bound
xchg
fistl
dec
aas
inc
insl
sub
icebp
lea
in
hlt
pop
jecxz
std
mov
jne
inc
ds
add
jl
lock
insl
or
aas
inc
mov
repnz
imul
mov
addr16
jno
xor
mov
scas
mov
std
lahf
mov
mov
adc
insl
jmp
inc
rolb
or
mov
mov
push
test
js
sbb
in
inc
mov
cmp
mov
push
cmp
inc
cmp
int3
mov
out
sbb
inc
and
repnz
xchg
xlat
andl
add
call
sbb
pop
xor
mov
int3
js
xchg
mov
stos
ljmpw
mov
sub
cmp
test
xor
jle
cmpsl
sti
test
inc
int
mov
outsl
inc
iret
movsl
add
jb
sbb
adc
add
andb
push
out
pop
jmp
mov
adc
mov
addr16
push
int3
loop
pushf
jae
mov
or
adc
out
std
cmp
in
int3
cli
dec
into
cmp
jle
pop
adc
or
xchg
mov
icebp
fisubl
mov
aas
cltd
adc
cmc
jne
pop
fadd
fcomps
outsl
aad
jle
mov
adc
dec
bound
lods
mov
push
jp
pop
je
lds
mov
pop
jmp
int
pop
mov
aam
in
leave
in
adc
repnz
mov
add
jg
loopne
add
roll
scas
mov
scas
or
pop
nop
bound
fidivs
lcall
ds
xor
shl
and
imul
mov
sbb
test
xchg
test
push
je
xlat
adc
mov
dec
dec
cld
notb
mov
pop
test
inc
cmp
loop
lock
inc
iret
jge
jg
out
data16
jnp
or
aad
jp
jmp
mov
adc
cmp
jecxz
lds
push
adc
dec
rcll
fbld
inc
mov
mov
sti
sbb
dec
inc
je
mov
cmp
fs
movb
fistpll
ret
adc
jno
scas
lds
insb
mov
cmp
or
loopne
out
jg
xchg
push
popf
sub
xor
cmp
ljmp
inc
scas
push
imull
shll
and
jmp
mov
mov
in
adc
pmaddwd
nop
je
and
loope
hlt
mov
xchg
inc
divl
mov
cmpsl
insb
into
pop
jne
add
mov
lods
mov
mov
icebp
jle
lcall
mov
inc
leave
cmp
je
dec
adc
les
add
sti
sub
xor
lahf
or
lods
test
cmp
mov
lock
add
dec
cmpsb
subb
adc
out
inc
cmc
enter
cmpb
mov
push
pop
cltd
negl
or
lret
mov
dec
aaa
pop
test
mov
adc
dec
xchg
mov
push
dec
enter
sub
pop
cwtl
roll
cmp
jl
es
push
xchg
ss
xlat
jp
sub
xor
pop
inc
mov
add
in
jmp
push
and
push
push
mov
cmpl
repz
enter
lahf
dec
out
test
popa
and
loope
sbb
ret
xchg
test
push
pushf
push
and
movsl
dec
stc
aam
int
push
lods
mov
sti
jg
jmp
aad
hlt
cmp
int
xor
mov
sub
jo
cmp
std
enter
sbb
test
nop
add
int3
mov
mov
in
dec
into
dec
int3
aam
add
inc
ss
sub
sti
xor
mov
je
mov
cmp
push
adc
pop
inc
dec
cmp
clc
mov
and
std
movhps
popf
dec
in
push
mov
and
dec
arpl
ss
jge
orl
sbb
cmp
imull
xor
xor
mov
int
xor
mov
push
xlat
insl
stc
jecxz
mov
sbb
lret
inc
lret
lds
add
sbb
es
mov
addl
ret
sbb
jg
push
xor
int
mov
xchg
repz
mov
mov
rol
sub
scas
or
inc
pusha
pop
pop
xor
lods
bound
jge
imul
cltd
out
pop
std
inc
jmp
int
cwtl
sbb
sub
inc
fldpi
lahf
popa
dec
mov
push
stc
mov
push
lret
xchg
nop
pop
pop
and
cs
sub
sbb
mov
cmp
outsb
xchg
es
cmp
cli
push
call
insl
xchg
test
cmp
mov
or
iret
push
cmpsb
rcll
mov
mov
ss
inc
fcomp
popf
dec
cmp
jle
pushl
or
mov
pop
cmp
sub
push
adc
pusha
adc
xchg
int3
mov
cmp
push
lret
jb
addl
and
mov
xchg
cmc
lcall
arpl
iret
stos
in
jmp
lret
in
and
push
pushf
dec
pop
addr16
arpl
push
das
or
add
or
jl
sahf
xor
adc
mov
insl
add
xchg
fisubrs
xchg
test
fwait
pop
ljmp
outsl
repnz
imul
in
jbe
mov
mov
mov
pop
adc
repnz
insb
dec
dec
and
psubusw
divb
jo
flds
daa
xchg
inc
cmp
xchg
fadds
jb
sub
in
aam
lock
lret
fsubrl
sti
dec
push
lods
xchg
cli
adc
pop
mov
data16
cmpsl
out
xchg
out
jl
sub
cmp
repnz
mov
pushf
pop
mov
notb
mov
mov
cmp
lds
jne
loopne
rcll
xchg
mov
xchg
in
pop
repz
test
and
cmc
lods
add
jbe
sbb
mov
jle
mov
xchg
adc
icebp
ss
add
adc
iret
jle
lcall
sbb
mov
push
jge
mov
sbb
mov
jmp
push
repz
mov
imulb
and
movsl
movsb
mov
push
insl
sub
inc
and
cmovbe
stos
jle
cmc
imull
add
loope
jns
or
shl
sub
cltd
xchg
jmp
int
jmp
push
dec
ror
cmpsb
sub
dec
mov
insb
dec
dec
pushf
fidivs
jno
call
out
pop
push
mov
or
mov
pop
iret
cmp
inc
out
dec
pop
add
lea
and
push
jmp
fdivs
scas
adc
dec
xchg
mov
cmp
mov
cmc
xor
ret
imul
imul
pusha
push
je
rorl
push
jl
repnz
jle
and
cltd
pop
lret
in
pushf
push
loope
lahf
lods
mov
jmp
jnp
jns
lods
cmp
repz
imul
or
fwait
movsl
jne
mov
adc
subl
jg
out
repnz
rorb
dec
push
dec
leave
and
jno
adc
adc
lods
test
jnp
mov
adc
lds
dec
mov
pop
mov
fsubs
int3
push
pushf
mov
mov
sbb
daa
push
imul
sahf
jbe
shlb
adc
jmp
lret
loopne
add
aas
daa
dec
nop
mov
insl
shlb
outsb
sub
mov
mov
mov
xchg
and
xchg
sbb
dec
aaa
xchg
sti
and
les
daa
dec
mov
out
pop
add
xchg
ucomiss
shrb
sub
xlat
gs
cmp
test
dec
cli
mov
and
or
sub
xchg
fs
fwait
aad
cltd
out
xlat
mov
cmc
push
cs
mov
sarb
sub
pop
jb,pn
in
xor
loope
pusha
inc
mov
xchg
dec
jo
mov
xchg
outsl
xchg
daa
nop
lods
icebp
jecxz
or
sub
jg
xchg
xchg
add
pop
xor
mov
push
int
aad
mov
add
testb
popa
cmp
ljmp
int3
and
inc
pop
cmpsl
lret
pop
in
imul
add
ljmp
sbb
std
push
and
adc
test
mov
dec
pop
sbb
mov
cmp
adc
push
outsb
popa
sub
adc
ret
lea
pop
add
pop
sahf
lods
test
cmp
hlt
sub
rclb
jo
testl
cmp
into
dec
pop
pop
xchg
fbld
pop
lods
add
and
dec
mov
jl
xchg
pop
sahf
int3
inc
stos
xchg
push
pop
inc
out
pop
das
pop
out
xchg
or
add
sbb
sub
lcall
adc
aas
jnp
lds
cmp
and
les
ret
adc
mov
ret
push
insl
mov
cmc
test
jno
ljmp
lods
adc
addl
pop
push
insb
and
xchg
outsb
pop
jns
xchg
in
pop
xor
dec
mov
pop
xchg
xchg
ja
jbe
sub
add
lods
cld
jnp
ljmp
fs
out
leave
jo
fcoms
cmp
mov
faddp
jbe
popa
ret
lret
cli
sub
mov
pop
fneni(8087
fwait
xchg
xchg
inc
inc
push
insl
cld
das
clc
enter
jge
popf
mov
call
pop
and
inc
ficoms
xor
ret
aaa
leave
mov
adcb
cld
add
xchg
cmpsl
fstps
scas
scas
das
sub
ret
mov
push
xchg
out
out
das
dec
cmp
push
inc
popa
aam
and
mov
cmpsb
daa
dec
add
mov
int3
mov
popf
xchg
jg
adc
push
cld
jle
mov
mov
inc
sub
sbb
popa
jmp
xor
adc
xlat
aad
mov
out
add
out
std
mov
cmp
cltd
pop
dec
leave
jno
ret
or
bound
jb
jo
cmp
cmpsl
push
jg
and
imul
lock
mov
mov
divb
pop
or
pop
push
and
mov
mov
mov
out
pop
shl
add
mov
aam
dec
rol
xor
cltd
xchg
inc
adc
nop
pop
fistl
fnstcw
jne
repnz
shlb
inc
mov
shr
test
popf
xchg
pop
icebp
subl
or
dec
loop
out
sub
and
mov
lds
shlb
in
pop
and
cmpsl
xchg
push
dec
mov
idivl
push
push
test
add
adc
add
jecxz
movsl
push
pop
scas
xor
xor
mov
gs
push
push
ja
mov
mov
adc
popa
pop
jmp
ret
dec
xor
cmpsb
mov
and
adc
mov
pop
mov
xchg
leave
and
inc
je
dec
and
cld
mov
xchg
imul
cmp
add
xor
mov
and
mov
cli
stos
aaa
dec
jbe
sub
mov
aas
mov
pop
aad
fstl
or
and
and
notb
add
adc
ljmp
xchg
and
fildl
dec
inc
movsl
lcall
aas
and
out
lahf
dec
loopw
addr16
mov
adc
jecxz
sub
rcr
popl
sbb
jecxz
add
pop
jecxz
mov
or
ret
xlat
fs
pop
xchg
push
les
push
loope
in
pop
leave
fs
push
sarl
pop
ljmp
and
out
stos
cltd
mov
mov
dec
sbb
pop
stos
adc
cmp
js
sti
adc
clc
or
stc
pushf
mov
sarb
nop
inc
xor
gs
sbb
and
rcrb
mov
sahf
icebp
les
jge
sbb
xchg
mov
out
loop
movsl
mov
nop
sbb
ds
pop
je
arpl
sub
pop
repnz
lahf
repnz
xor
ljmp
cmpsb
xchg
test
jp
cmovs
mov
xchg
adc
sbb
icebp
push
dec
sahf
push
sub
inc
nop
push
test
mov
out
cmp
stc
add
and
loop
jg
ljmp
or
shrb
outsb
jnp
hlt
inc
mov
mov
mov
push
mov
inc
push
xchg
cmp
or
rolb
sti
nop
sbb
pop
sub
sbb
mov
fstpt
push
imul
sahf
ret
mov
aaa
jae
mov
add
or
mov
shll
jle
mov
int
std
and
in
mov
add
sub
stc
int3
add
loopne
jnp
sahf
or
pop
arpl
imul
sbbl
pop
addb
xor
mov
and
and
mov
les
mov
rcr
int3
leave
subb
fisubl
mov
inc
into
into
in
mov
cli
cmp
cmpl
xlat
lret
ret
push
loopne
shrl
xor
iret
aad
mov
clc
push
into
ficoms
jb
push
mov
push
mov
test
sub
out
outsb
flds
std
leave
push
pop
ss
out
inc
testl
adcb
sub
fstpt
pop
or
cmpsb
adc
jns
sub
sub
loope
movsl
or
jmp
jb
fstps
pop
pop
popf
xor
cld
inc
and
addr16
push
ja
inc
psubusb
xchg
xchg
mov
in
sub
xlat
popa
lret
mov
and
cmp
stos
push
jmp
loopne
ja
push
repz
iret
fdivl
or
rcl
add
pop
push
jo
cmc
and
cli
mov
cmpsl
cmp
out
pop
add
push
iret
lds
inc
nop
loope
dec
xor
add
cmp
pop
cld
lods
lea
stos
push
inc
pusha
jmp
std
test
outsl
xchg
decb
dec
roll
dec
adc
dec
jmp
push
mov
cmp
popa
mov
mov
mov
cmp
push
mov
cmp
mov
aad
fldt
lock
jnp
sub
mull
push
push
or
and
leave
sbb
lret
out
filds
jb
xchg
jb
push
xchg
push
fs
add
sarl
pop
repnz
jbe,pn
jb
sbb
push
sub
repz
fcmovnbe
and
push
inc
out
bound
add
outsb
lahf
hlt
mov
mov
jle
sahf
xor
ret
push
fimuls
test
je
xor
repnz
push
enter
lea
repnz
test
pop
std
or
dec
or
lds
cld
test
add
adc
xchg
push
xor
scas
jmp
hlt
fnstsw
test
loope
add
ud2
jb
fwait
adc
in
inc
mov
cli
dec
outsl
or
ss
roll
inc
or
popa
loope
xor
jmp
mov
add
insb
or
out
push
lock
adc
sahf
lahf
xabort
dec
mov
jbe
mov
add
add
in
dec
xchg
fsubrl
sbb
lea
mull
xchg
mul
insl
jl
sub
xchg
shr
clc
rolb
xchg
imul
addr16
lds
adc
int3
loopne
mov
and
pop
lods
mov
inc
lret
mov
aaa
push
xor
pop
inc
leave
push
dec
out
or
pop
push
dec
sahf
sar
adc
aas
jmp
jmp
ljmp
push
and
sbb
add
push
push
mov
je
sub
insb
push
xor
mov
dec
cmp
int3
inc
cmpsl
add
dec
loop
dec
pop
jge
or
push
loopne
pop
pop
shrl
dec
cmp
jb
das
and
mov
jp
dec
fwait
adc
dec
imul
jmp
inc
mov
mov
jecxz
add
es
mov
loope
mov
enter
jo
mov
decb
cltd
or
push
int
rcrb
rcll
jno
orb
mov
mov
xchg
push
sti
fildl
xchg
fidivrs
sub
cmp
fdivrs
neg
fsubrl
mov
lock
sbb
jg
mov
cld
loopne
sub
clc
mov
xor
hlt
std
pop
push
pop
push
sub
sarb
xchg
popa
dec
ffree
std
scas
dec
pop
bound
out
mov
pop
in
std
push
nop
sub
mov
mov
out
xchg
out
mov
or
fdiv
cmp
lods
orl
mov
cmp
stc
or
out
psubusb
dec
mov
bnd
sub
sbb
mov
nop
sbb
xor
inc
les
pop
cltd
inc
popa
jl
add
and
adc
lahf
or
inc
dec
mov
adc
out
xchg
sti
repz
movsl
jb
mov
adc
cli
cli
or
and
sbb
outsb
inc
sbb
xchg
leave
stos
cmp
jmp
mov
sub
subb
or
bound
fs
pop
cmp
xor
in
add
mov
sbb
movsl
hlt
jl
rorb
push
mov
jp
jno
test
rclb
js
and
loop
inc
jnp
push
cmp
add
pushf
out
cmc
ds
mov
aaa
push
and
jnp
rorl
cli
or
imul
lret
adc
sub
adc
mov
pop
adc
fst
loope
sahf
cmp
ljmp
shl
pop
pop
dec
adc
iret
bnd
out
mov
add
insl
bndldx
jp
add
fwait
xlat
push
leave
hlt
or
xchg
mov
cli
outsb
lret
flds
int3
cmpsb
lock
cmp
mov
test
out
xchg
sarb
cwtl
icebp
rcrb
add
and
jb
sbb
dec
rcrb
sub
mov
out
push
mov
maxps
mov
sbb
jo
push
jo
jbe
mov
pop
xor
leave
add
pop
ds
add
jl
in
fwait
jns
fdivl
pop
jmp
cmpl
or
repnz
adc
or
jecxz
imul
xor
xor
add
jle
mov
mov
lds
pop
repnz
imul
lret
dec
movsl
fdivrs
enter
cs
xor
pop
std
fcoml
ljmp
and
mov
nop
hlt
xchg
mov
or
pop
push
es
mov
insl
xor
testl
mov
adc
incl
xchg
jp
clc
mov
lret
out
add
xor
data16
jo
addb
pop
int
stc
xlat
lods
adc
push
add
hlt
dec
lcall
pop
ds
imul
jmp
inc
and
or
dec
aam
pop
push
jae
ret
jns
push
xor
cmp
in
scas
popf
jmp
je
xchg
inc
movsb
sbb
call
mov
fcoms
jle
sub
pop
mov
mov
les
out
jne
push
xchg
data16
cmp
mov
aas
arpl
std
or
mov
add
sub
ja
jle
sub
loope
jnp
shl
lods
pop
add
rcrl
and
push
mov
inc
mov
add
movl
ret
inc
outsl
pusha
outsb
mov
xlat
pop
and
icebp
ficompl
in
jbe
jg
mov
rcrb
xor
shlb
mov
fdivs
jb
test
lods
or
in
add
fwait
sbb
mov
pushf
into
cmpsb
out
popf
and
jge
mov
mov
mov
lods
xchg
mov
and
in
xchg
mov
lcall
dec
xchg
popf
loopne
adc
out
jp
int3
fnstenv
ja
xchg
xchg
jae
or
popf
jb
cmpsb
lea
xchg
dec
pop
out
mull
insb
int
out
xor
xchg
pop
pop
repnz
lahf
aam
test
and
pop
dec
jmp
inc
or
dec
cmp
movsl
cmp
or
lret
clc
daa
dec
pop
aas
jg
jp
adcl
cli
xor
shlb
mov
in
nop
fsub
xchg
adc
jmp
rorl
and
jnp
add
call
call
dec
dec
fstpt
inc
gs
xchg
xor
sub
fcomps
xchg
pop
pop
push
scas
and
inc
addr16
sbb
sub
mov
xor
add
mov
pop
xor
jmp
add
xor
std
pmuludq
rol
lods
hlt
dec
iret
mov
fildll
mov
mov
aam
and
lea
xor
dec
mov
push
mov
in
scas
push
je
negb
ds
mov
adc
mov
mov
sub
out
cmp
stos
jp
xchg
mov
add
jmp
jae
std
fisubl
aas
daa
insb
dec
repnz
daa
in
cmc
test
mov
clc
pop
or
outsb
aam
mov
ret
shll
inc
fisubrl
inc
dec
enter
dec
test
ss
inc
leave
mov
sbb
mov
movlps
inc
or
mov
xor
cli
dec
int3
add
xor
pop
sbb
push
daa
loopne
js
test
std
cwtl
or
add
adc
or
jp
std
insb
mul
xchg
jnp
xlat
sbbb
sbb
and
es
mov
xchg
jge
inc
enter
pop
push
stos
lret
push
pop
ret
dec
scas
pop
fstp
mov
inc
mov
icebp
fcmovbe
jle
and
mov
ss
in
shl
movsb
pop
jbe
fs
and
div
jno
add
loope
subb
dec
jae
sub
lods
add
pop
add
add
cmp
jecxz
shrb
inc
ja
pushf
push
dec
mov
test
inc
inc
jno
scas
inc
jl
loopne
hlt
sub
ror
pop
xor
rol
stos
sbb
mov
jg
imul
pushf
cmpsb
enter
mov
in
test
js
pop
mov
or
xchg
adc
dec
fidivrl
push
aad
das
lea
dec
cwtl
lds
aaa
sahf
lods
inc
push
test
dec
lea
sbb
pop
inc
idiv
push
xor
dec
in
aad
dec
jno
fldl
arpl
outsl
push
hlt
xor
fwait
mov
aam
in
arpl
je
subl
outsb
pop
icebp
jecxz
test
mov
addl
scas
test
es
and
and
pop
jl
aad
xlat
cmp
dec
lds
mov
jmp
insb
mov
cmp
sub
and
jmp
pop
cmpsl
ja
mov
push
cmpsl
dec
add
sbb
dec
imul
or
sbb
adc
loope
sbb
clc
aam
mov
add
sub
addr16
mov
ss
nop
ljmp
es
mov
push
stos
test
or
add
addr16
in
daa
push
mov
sub
xchg
push
nop
mov
sub
sub
and
xlat
daa
xor
mov
add
jbe
int
push
imul
out
xchg
add
push
push
stos
lock
xchg
xchg
dec
stos
pop
mov
push
jns
aad
mov
repz
inc
jle
in
enter
inc
fsts
xchg
fiadds
add
sub
mov
mov
mov
inc
xchg
adc
jecxz
popf
inc
dec
test
das
cmc
fsubl
xchg
in
mov
call
pop
addb
loopne
outsl
inc
inc
cmp
popf
fstpt
push
xchg
jl
sub
imul
push
gs
repz
jle
fwait
testb
jl
mov
and
lfs
fwait
jo
add
xchg
inc
pop
cmp
hlt
hlt
mov
negb
or
lcall
pop
into
jl
or
ret
push
mov
jge
adc
sub
les
test
mov
mov
leave
sbb
cmp
cli
lret
aam
jmp
jle
mov
push
mov
jmp
insl
mov
dec
xor
loopne
nop
aaa
and
or
cwtl
jno
hlt
mov
fsubs
xchg
pop
xchg
inc
or
inc
jne
lock
pop
fistpll
mov
clc
sub
adc
outsb
xchg
cmp
fsubp
cmp
cli
pushf
int3
push
movsl
xchg
outsl
movsb
and
fdivrl
pop
rclb
cmp
scas
push
jne
mov
stc
pusha
mov
shlb
and
into
lcall
push
iret
jp
clc
adc
add
outsl
in
push
dec
je
sbb
movsb
pop
pop
lods
insb
pop
cmp
sbb
jecxz
enter
mov
fldcw
movsl
lret
sti
jae
and
mov
shlb
cmpsb
xchg
inc
js
jge
mov
inc
sbb
push
sbb
fidivrl
inc
pushf
lahf
addb
or
popf
mov
cmp
leave
mov
repz
out
js
mov
loope
cltd
xchg
add
rcr
mov
lea
repz
xor
xchg
mov
jo
push
inc
inc
stc
adc
mov
or
dec
inc
cmpsb
movsb
inc
jmp
pop
inc
mov
xchg
rol
add
add
imul
pop
lock
xor
xchg
fabs
add
mov
daa
xor
xchg
inc
push
pop
adc
imul
adc
or
xchg
outsb
jl
cmc
cmp
inc
jle
outsl
shlb
add
sbb
lods
clc
lret
ret
cmp
shll
or
and
jbe
test
pushl
push
adc
xchg
or
addr16
adc
imul
cmc
movsl
dec
mov
mov
cmp
jns
lock
xchg
sbb
rcrb
into
xlat
scas
cmp
addr16
jae
leave
rcl
mov
or
push
aam
jp
notl
add
iret
fcmove
push
pop
push
iret
mov
cmp
loope
das
xchg
ds
jecxz
or
sbb
xchg
leave
cmp
adc
and
sar
pusha
xchg
sub
lods
mov
cmc
push
mov
out
dec
in
insb
setnp
add
push
fcompl
xchg
in
adc
adc
aaa
pop
inc
repnz
push
jns
test
pop
xor
mov
fisubrl
lahf
or
ljmp
dec
filds
aad
xor
jno
int
lret
scas
shlb
inc
dec
and
adc
sahf
sbb
jl
cltd
mov
mov
mov
repz
andb
andb
mov
cmp
and
shrb
mov
xor
andl
outsb
mov
cmp
lods
stos
sti
rcrl
repnz
fwait
rcrl
ja
scas
cmp
xchg
pop
sub
imul
cld
repz
inc
sti
lahf
stos
and
mov
in
push
jbe
lahf
adc
xor
inc
sub
xor
mov
mov
cmc
mov
pusha
add
pusha
push
push
push
ss
cwtl
stos
inc
push
mov
aad
das
xorb
arpl
lahf
and
lods
rolb
stos
insb
or
xchg
out
fnstenv
jg
std
mov
and
mov
cld
movsb
popf
insl
lods
jb
insb
lds
and
setge
or
ja
rclb
ljmp
mov
je
fcom
lds
jns
xchg
aam
cmp
push
aam
dec
sub
sub
outsl
addr16
jmp
mov
adcl
pop
mov
sub
adc
jmp
idivb
and
push
repz
test
inc
inc
sbb
fisubl
jb
subb
dec
push
adcl
mov
into
or
stos
or
in
cmp
mov
rcr
pushl
stos
mov
les
insl
xchg
mov
ljmp
clc
popa
cmp
lcall
adc
pop
scas
fmul
ss
insl
dec
insl
pushf
adc
cmpsb
pop
xchg
sti
push
movsb
movsb
sbb
fidivrl
xor
gs
cmp
test
push
cmpsb
ja
xor
call
lock
leave
movsl
ja
scas
mov
pushf
jle
iret
cld
int3
into
dec
fists
rcl
xor
adc
in
xor
enter
xchg
sub
push
mov
mov
or
pop
and
dec
lret
aam
mov
cmpsb
push
dec
iret
loop
mov
and
cli
inc
or
mov
sub
test
repnz
push
cs
sbb
cs
dec
pop
jno
pop
outsb
movups
jns
or
sub
ret
dec
jo
fstps
add
lock
ror
imulb
in
mov
mov
idivl
pop
cmpsb
aas
mov
sahf
test
icebp
sub
jg
xchg
lds
xchg
lea
push
push
mov
in
and
sbb
jmp
mov
mov
and
jo
mov
cmp
sub
arpl
sbb
in
fimull
fcoml
mov
inc
and
fldl
add
dec
enter
lcall
ds
loopne
cs
lret
xchg
jnp
or
loope
push
inc
push
dec
pop
fscale
mov
movsl
cltd
and
call
ljmp
jns
and
sbb
lods
mov
pop
push
into
je
sahf
jno
mov
iret
push
popf
imul
les
mov
or
push
and
aad
rcr
jmp
pop
add
dec
cld
cld
pop
sahf
sbb
bound
and
add
fldcw
cltd
ret
lds
cmpsl
hlt
mov
mov
pop
xor
shll
fbld
lds
pop
mov
mov
iret
adc
mov
addr16
pop
insb
sub
enter
scas
lahf
dec
xchg
sub
in
cmp
mov
loopne
gs
movsl
jge
xchg
pushf
in
xchg
sahf
mov
jns
aad
rolb
lods
out
jge
arpl
and
cmc
gs
sub
in
xor
jne
notb
bound
cli
add
je
sbb
call
and
lods
jo
insl
arpl
lock
loopne
hlt
lret
js
imul
mov
mov
rcl
ja
sbb
cmp
stc
outsl
lds
outsl
loope
sbb
jmp
mov
mov
neg
push
jge
pop
imul
xchg
cwtl
loopne
data16
push
push
dec
aad
or
outsl
and
jl
in
js
arpl
lcall
outsb
and
pop
repz
add
test
and
sub
sub
sti
xor
not
inc
sahf
ljmp
jge
mov
jns
lahf
outsl
xchg
sbb
and
xor
jmp
pushf
jno
les
fsubp
mov
dec
lea
jg
mov
int3
es
fcomps
dec
push
xor
inc
jns
or
call
sub
popa
aas
push
xchg
xchg
loopne
push
jg
cmp
push
cmc
iret
pop
clc
mov
test
cltd
out
orl
push
pop
ds
inc
cmp
xor
fdivrp
das
mov
sbbb
sbb
out
popa
dec
sub
pushf
jg
mov
ds
sbb
int3
dec
rclb
lret
push
test
push
jle
fs
add
cmp
push
xlat
mov
fs
mov
and
aam
std
jle
push
fs
sbb
aaa
adc
lods
jnp
mov
jno
int3
mov
sub
add
push
aas
ja
and
pop
in
movsl
add
adc
sbb
xchg
push
lock
testb
lahf
xchg
push
and
mov
xor
addl
dec
test
cmp
xor
pop
shll
sbb
sbb
fistpll
shlb
add
xor
lods
lods
xchg
jmp
lcall
outsb
sbbl
push
cld
sahf
cld
fidivs
arpl
je
test
sbb
add
das
push
or
xor
lods
or
or
xchg
sbb
mov
insl
aaa
jle
in
add
mov
xorb
xlat
lods
test
addr16
jle
call
xor
adc
push
add
mov
dec
push
int
loop
mov
adc
fwait
cli
inc
xor
pop
pop
jbe
test
lds
daa
push
jbe
xchg
out
pop
mov
popf
sub
das
add
je
inc
inc
mov
jbe
push
mov
es
push
notl
adc
mov
scas
js
jne
aad
leave
inc
sub
jg
pop
jnp
fcmovb
cmp
es
xor
sub
inc
rorl
fisubl
sbb
enter
loop
jl
adc
mov
jno
adc
shlb
repz
jle
mov
sbb
dec
frstor
pop
in
push
jno
dec
jo
add
jp
les
sub
jbe
push
dec
add
inc
pop
cmc
ja
ja
icebp
bound
lea
es
lea
mov
cmp
adc
xlat
loope
xlat
mov
fmuls
jb
loop
int
inc
repnz
dec
aaa
inc
mov
mull
inc
add
loope
pop
fdivr
inc
int3
fildl
inc
xchg
pop
repnz
fadds
mov
push
add
xor
cmpsl
xchg
add
pushfw
and
jle
xor
dec
push
fdivl
and
fiaddl
jb
push
mov
and
push
xchg
pop
enter
sub
sub
nop
inc
fsubrs
stos
fmull
mov
or
or
dec
ja
into
sbb
icebp
lods
dec
xchg
jmp
pop
insl
jb
je
outsb
xchg
ret
push
add
add
push
dec
mov
sti
push
dec
jle
xchg
divb
jbe
mov
call
inc
lods
mov
pop
push
mov
push
prefetchnta
add
jmp
adc
add
fwait
pop
jmp
pop
inc
out
nop
addr16
add
shlb
lret
jae
mov
cmc
nop
dec
addr16
out
lret
dec
shl
push
cmp
and
inc
mov
stos
and
push
fcmovne
xor
shl
inc
mov
push
sub
sbb
sub
addr16
insl
fadd
stos
gs
mov
jnp
add
out
push
rcr
or
xor
jae
mov
mov
xchg
cmp
mov
int
xchg
push
inc
xchg
divb
jns
inc
mov
rep
dec
dec
lods
das
test
notl
push
out
dec
neg
mov
pop
es
in
inc
adc
add
pop
dec
out
mov
mov
popf
fstpt
imul
sbb
add
or
xor
mov
push
pop
pop
or
jne
xchg
sub
out
xchg
cmpsl
mov
pop
xchg
add
xlat
mov
xchg
add
push
test
or
fucomi
dec
fisttps
mov
mov
add
push
push
pop
cmc
push
repz
or
dec
mov
push
dec
testl
mov
les
loope
pushf
lret
scas
pop
inc
and
repnz
inc
add
fwait
or
jmp
pop
and
pop
rcrb
call
inc
je
movl
cld
lret
pop
loopne
int
jne
mov
mov
push
and
jno
xchg
enter
ret
ror
adc
xchg
jmp
adcb
mov
pop
fsubl
add
ret
in
cltd
and
sub
bnd
jae
sbb
sbb
dec
inc
cld
lock
xor
add
inc
in
in
add
insl
add
arpl
repz
sbb
inc
mov
scas
pop
cmpsl
imul
icebp
cmp
addb
bound
lret
mov
adc
shl
mov
daa
idivb
cli
push
in
mov
cwtl
inc
cld
sahf
pop
subb
mov
cmp
cmpsb
push
xchg
ss
jb
or
loopne
imul
addl
xchg
ret
mov
cmpsb
mov
imul
out
sub
es
fmulp
xor
outsb
mov
dec
adc
fisubrs
imul
dec
insb
cli
imul
shll
sbb
mov
sub
outsl
enter
push
or
and
push
mov
xor
mov
cmp
jnp
out
dec
jbe
adc
sub
xor
and
ja
insb
or
jecxz
in
inc
mov
push
inc
mul
inc
lods
add
mov
cs
fs
mov
adc
stc
lock
out
arpl
lds
mov
or
add
ret
movsb
cli
xor
ss
loop
mov
test
fadds
sbb
testb
jmp
push
pushl
jae
dec
call
aam
lods
test
mov
lea
push
adc
mov
cwtl
mov
fsubs
popa
mov
in
pop
hlt
mov
into
stc
outsb
push
xchg
inc
pop
push
jbe
or
fmulp
rolb
es
jmp
lahf
xlat
stos
mov
xchg
pop
xlat
pushf
pushl
imul
dec
lods
cmpsl
sub
xor
sbb
lahf
inc
rorb
xor
xchg
push
out
xor
es
xchg
pop
inc
gs
and
pop
push
adcl
cmpsl
dec
outsb
mov
xchg
pop
mov
dec
sbb
sub
sbb
adc
sbb
sbb
dec
imul
nop
dec
sub
fwait
xor
js
inc
ljmp
lret
data16
jns
hlt
aas
and
sahf
and
cmpsl
aaa
pop
stc
js
dec
xor
test
mov
fstpl
loopne
and
jb
push
fisubl
cmp
stos
sub
dec
inc
sbb
nop
stc
iret
dec
push
sbb
sub
jae
popf
inc
push
es
pop
mov
repz
icebp
enter
movb
xchg
inc
jecxz
fwait
into
cli
sahf
xchg
mov
jle
ja
pop
imul
aad
rep
push
mov
fnsave
cmpsb
sbb
cmp
cmpsb
mov
and
movsl
push
mov
and
xor
cltd
fwait
inc
loop
sbb
dec
aas
xor
jle
call
int
adc
cli
fisubl
insb
pop
js
imul
or
outsb
mov
sbbl
sahf
aad
xchg
dec
push
icebp
lods
out
sbbl
sub
addb
inc
mov
sbb
sahf
shl
int3
test
call
insl
ss
test
loope
xor
outsl
push
push
test
out
test
pop
into
sub
rcll
add
push
push
and
sbb
mov
daa
je
ret
pop
loope
orb
imul
imul
push
inc
add
ja
dec
pop
sub
pop
push
sbb
mov
xchg
sub
clc
mov
jb
outsl
mov
xor
mov
stos
out
cmp
jns
xor
std
jns
ficompl
push
push
gs
int3
xor
repnz
dec
xor
sub
fimuls
push
js
jmp
xor
cmpb
sbb
pop
scas
mov
jp
les
xor
push
loope
lcall
js
mov
out
xor
jp
mov
xchg
mov
stos
lret
or
cmp
fwait
test
sub
pop
rol
pop
pop
ret
pop
pop
in
stos
sbb
mov
sahf
mov
shrl
adc
scas
jp
mov
sub
cmpsl
stos
pushf
push
mov
add
imul
mov
pop
add
cmp
inc
mov
in
xor
loop
loope
mov
loopne
call
lea
lahf
outsb
out
ret
call
fiadds
sub
iret
aad
and
lods
out
hlt
dec
test
or
push
cmp
and
in
andl
fs
xchg
lcall
sbb
fiadds
cmpsl
repz
fs
testb
imul
aas
mov
aad
xchg
loopne
hlt
fmuls
xchg
les
ds
dec
pop
cmp
mov
inc
cmp
xor
adc
mov
lock
cwtl
adc
push
mov
pop
scas
mov
cli
std
ret
sbb
movsl
aas
pop
loop
adc
lea
loopne
je
fnstenv
fwait
or
mov
push
adc
sub
adc
lcall
aam
pop
cmpsb
scas
shll
adc
scas
mov
mov
dec
decl
lock
fmuls
mov
cmpl
adc
push
lret
push
test
inc
jbe
mov
jno
jnp
lret
sbb
or
pop
push
adc
mov
adc
inc
xorl
cmc
inc
push
pop
xor
aad
cmc
and
push
jae
pop
xor
call
cmpsb
jns
dec
push
jae
mov
loope
and
sub
or
out
arpl
lods
jne
jo
adc
xor
in
mov
leave
and
loopne
push
out
imul
sub
fiadds
pusha
fcomp
out
fisubs
push
lods
xor
mov
push
mov
xchg
dec
arpl
in
cmp
pop
notl
loope
mov
leave
mov
std
inc
fisubl
aam
lcall
gs
add
lret
lock
roll
push
mov
fwait
add
test
or
hlt
addr16
sarl
scas
xor
xchg
fistl
sbb
jecxz
adc
cmp
adc
aam
iret
out
jae
xchg
cmp
sbb
fmul
push
leave
adc
adc
add
rep
sbb
mov
cmp
lds
mov
xchg
sub
in
cmc
divl
mov
hlt
andl
and
inc
fldenv
arpl
pop
mov
mov
push
sbb
out
and
jae
xchg
dec
in
pop
arpl
add
fs
popa
subb
push
add
mov
jg
fwait
icebp
xchg
test
pusha
and
testb
dec
or
adc
jecxz
je
or
cs
sbb
mov
repz
xchg
popa
and
mov
jno
lea
dec
mov
mov
scas
scas
inc
out
sbb
cltd
call
ja
jg
push
jmp
sbb
mov
fwait
pop
adc
pop
movsl
dec
xor
es
movsl
inc
mov
jmp
push
enter
adc
dec
mov
clc
inc
or
dec
or
mov
xor
ds
scas
neg
sbb
sbb
and
imul
sarl
lcall
lcall
jge
fstpl
sbb
jbe
jae
stc
addr16
dec
in
andl
jae
cwtl
outsb
fadd
cltd
or
dec
push
push
push
xor
xor
lret
push
stc
add
scas
lods
push
jns
add
ret
fisttpll
sbb
adc
xorl
jno
push
jo
or
cmp
ds
jne
mov
xchg
mov
adc
or
test
xor
les
or
mov
push
add
add
jecxz
jl
jb
stc
imul
jmp
cs
xlat
inc
add
jl
repz
pop
push
push
les
divl
or
sub
inc
jge
stc
mov
xor
int3
in
add
mov
cmp
iret
xchg
repz
cmpsl
sub
mov
outsl
add
ss
or
out
push
rorb
push
jne
frstpm(287
pusha
pusha
inc
leave
scas
push
cmp
jns
and
lret
mov
rcll
imul
sub
in
popa
sbb
push
out
inc
hlt
icebp
cwtl
adc
pop
mov
lret
xchg
das
xor
sub
sbb
in
sub
push
idivb
cltd
and
popl
mov
ficoms
sbb
push
adc
lahf
inc
hlt
push
cmc
push
lea
popa
cli
lcall
xchg
sbb
sub
cwtl
mov
rorb
ret
jns
cmp
leave
sbb
and
cmc
lock
out
idivl
shlb
int3
pop
stos
aad
hlt
shlb
xchg
in
jmp
push
mov
pop
inc
outsb
mov
push
popa
lods
mov
xor
push
nop
pop
repnz
aaa
jecxz
aad
fsubrp
movb
xchg
pop
mov
push
andb
dec
lret
and
rorb
sbb
cmp
dec
sbb
mov
es
daa
movsb
dec
data16
mov
sub
adcb
jl
push
mov
inc
pop
push
xor
aam
pop
inc
loopne
or
mov
mov
sahf
jb
inc
jge
aam
ret
into
add
mov
inc
int3
sbb
or
call
adc
jne
repnz
inc
scas
and
aaa
pop
fiadds
xchg
xchg
inc
xchg
cmpsl
pop
xor
or
cmpsb
lock
lret
test
jns
fstpl
jns
lods
sti
lcall
cwtl
sbb
ljmp
mov
fmuls
or
push
inc
or
out
int
pushf
inc
adc
dec
sbb
inc
add
loop
aam
add
inc
repnz
xchg
cmp
lret
mov
push
lret
mov
addr16
lret
xchg
pop
in
sub
call
mov
inc
xor
lods
test
adc
or
aaa
mov
lahf
pop
pusha
pop
data16
push
scas
inc
adc
nop
lahf
cs
or
aam
xchg
or
adc
vunpcklps
pop
pop
sbb
sbb
fwait
mov
hlt
or
sbb
mov
cld
xchg
push
lcall
es
js
pop
push
pop
dec
inc
inc
pusha
int3
dec
fbld
pop
sbb
fistps
mov
fdivl
dec
insl
adc
adc
scas
xchg
xor
movsl
mov
push
and
lods
xor
push
mov
nop
xchg
pop
xor
pop
xchg
bound
sub
mov
rorb
and
test
movsl
dec
aaa
inc
pushf
roll
popa
cwtl
pop
pushl
xchg
sub
adc
loope
insl
push
sub
mov
inc
loop
aad
adc
mov
push
int
mov
rcr
addr16
or
cs
lahf
lahf
mov
jbe
ljmp
xor
iret
xorb
add
xchg
mov
arpl
inc
mov
cs
jbe,pn
xchg
inc
add
xor
cmp
fadd
sub
sti
push
cmpsb
pop
push
or
out
xchg
jnp
in
out
xchg
cmp
cmp
shrl
test
aas
xchg
stos
jg
shlb
test
and
scas
clc
xor
dec
stos
test
std
xchg
mov
rolb
lahf
jl
jl
xorb
lahf
xor
out
sarb
pop
andl
les
aam
mov
out
shrb
push
into
rol
jae
jo
mov
movsl
or
dec
pop
pop
test
sub
fdivp
and
fcmovnb
inc
icebp
push
in
and
xchg
pop
sbb
in
bound
mov
cmp
les
inc
pop
mov
add
out
hlt
sub
inc
jns
in
mov
adc
pop
mov
mov
or
dec
jo
inc
out
adc
jle
dec
clc
mov
sbb
jp
ficompl
out
xchg
mov
sbb
test
rclb
sbb
push
int3
and
sub
pop
xchg
scas
addr16
test
mov
push
les
mov
mov
add
push
in
orb
dec
push
inc
aad
nop
stos
jle
leave
push
insb
pop
test
inc
add
je
arpl
mov
popf
popf
xchg
ret
aaa
cmpsl
outsl
dec
add
lock
les
in
push
stc
cmp
mov
xchg
adc
pushl
les
xor
stc
shlb
inc
add
sti
popf
and
or
lea
adc
aaa
pop
enter
rol
add
mov
mov
ljmp
int
cmpsl
push
mov
xchg
pusha
int3
adc
lds
jge
outsl
rorb
push
hlt
movaps
cmp
mov
ret
add
repz
lock
fmuls
jne
imul
jo
scas
lods
mov
ds
pop
cmpsb
cmp
jo
iret
insl
sub
jbe
push
add
sub
xor
xchg
addl
xchg
jae
and
cmpsb
mov
iret
cmc
push
mov
pop
push
gs
rorl
notb
inc
clc
imul
jle
shrl
fcomps
loopne
pop
cmp
mov
adc
lds
mov
xor
pop
or
iret
sub
cmp
cld
mov
stc
mov
jg
mov
inc
scas
ja
in
cmp
out
xchg
jl
test
sub
dec
orb
inc
loopne
inc
xchg
cwtl
ret
jnp
insl
pop
sub
rorl
xchg
adc
lea
xchg
enter
mov
jne
cli
jecxz
std
mov
mov
arpl
inc
mov
cld
hlt
mov
lock
or
xor
xlat
push
insl
sub
pusha
out
or
sub
cmc
mov
xchg
adc
push
cmp
arpl
sub
jb
mov
mov
mov
mov
in
or
xchg
and
outsb
and
movsl
ror
lret
cltd
out
sarl
outsl
loopne
cmc
adc
inc
jmp
jecxz
outsb
xor
mov
dec
xor
loopne
mov
adc
lods
mov
pop
inc
js
push
inc
nop
jae
mov
das
sub
jo
testl
cmp
mov
sahf
dec
sbb
cmpb
das
mov
in
fs
aas
fsubrs
xchg
shll
out
xor
add
pop
dec
or
sbb
adc
xor
js
dec
orb
mov
inc
fidivrl
xor
out
pop
sub
sbb
sbb
mov
ss
cld
mov
and
add
jge
stos
inc
cli
jbe
push
mov
pusha
iret
push
leave
ljmp
xchg
decb
pop
hlt
lahf
outsl
dec
mov
imul
cmp
inc
std
and
push
cs
xor
sti
jne
daa
test
inc
push
xchg
xchg
jnp
sarl
jns
pop
leave
sahf
mov
cmpsl
test
adc
stos
sbb
shlb
xchg
mov
in
adc
lea
fsub
or
dec
aam
shrl
filds
int3
sahf
jle
xor
fcmovnu
jno
jp
xorb
mov
pop
jns
push
cli
shl
sti
xchg
mov
mov
mov
sti
mov
lea
cmpsb
and
pop
pop
out
dec
imul
inc
lods
sub
mov
test
push
or
lret
test
rclb
mov
push
movsl
push
pop
arpl
add
or
inc
shll
clc
dec
in
add
out
mov
pop
cmp
lods
jbe
adc
stos
ds
mov
mov
push
or
into
jmp
mov
jbe
es
inc
je
mov
dec
push
outsl
inc
cs
jnp
sahf
mov
stos
in
pop
push
sbb
dec
lret
repnz
fdivp
mov
jl
adc
push
repz
repz
loop,pn
jae
rcll
mov
lods
jmp
ss
adc
test
mov
test
mov
dec
xchg
xor
nop
aaa
jl
add
fnsave
aaa
xchg
fildl
das
je
call
sbb
fidivrl
cmp
xchg
notl
jg
dec
repz
stos
lds
jp
lods
cmp
adc
and
jb
push
test
pop
mov
sbb
cltd
inc
je
jmp
jge
dec
xchg
and
xor
int3
insl
adc
idivl
movsb
jmp
mov
jne
push
mov
jns
push
fsts
iret
ret
jb
pusha
jns
outsl
add
lea
pop
cmp
cmpsl
lret
jecxz
or
cmpsb
cmpsl
insb
mov
or
test
push
cmp
adc
and
jne
xchg
jns
int3
lahf
aas
jnp
jg
cmpsb
or
and
aam
xor
sub
sbb
inc
ret
js
cmp
std
ret
jecxz
jg
dec
test
mov
xchg
fimull
xor
iret
insb
xor
mov
outsb
cltd
ljmp
nop
mov
orl
mov
pop
stos
inc
mov
ret
ja
mull
movsb
xor
movsl
mov
pop
loope
cltd
out
xchg
cmp
pop
sahf
sbb
inc
mov
xchg
inc
and
lea
pop
loopne
add
insl
ds
adc
push
jns
in
push
dec
out
out
pop
xchg
in
and
in
push
jmp
fwait
test
add
stos
andb
popa
add
add
push
mov
sbb
mov
les
xchg
test
in
fs
incl
cmp
cmpsl
add
inc
xchg
adc
mov
jg
xchg
push
cld
adc
fists
or
outsb
xchg
or
repnz
loop
repnz
mov
ja
push
xor
das
pop
or
pop
neg
hlt
dec
sarl
xor
cld
mov
adc
cmp
gs
xchg
movsb
popf
sub
subb
xor
std
add
stos
das
xor
xchg
mov
mov
or
xchg
std
ljmp
pop
test
int3
out
cmp
clc
pushf
data16
pop
rol
incl
not
adc
xor
addr16
or
loop
ss
pop
sahf
cmp
dec
push
lds
push
aad
inc
jecxz
and
enter
xchg
cmp
sbb
sbb
sbb
stos
mov
and
xlat
jle
jecxz
xchg
data16
cmp
jle
mov
outsb
mov
test
jns
xor
scas
add
rorl
mov
cmc
pop
shlb
call
push
pop
shlb
movl
xor
js
xlat
dec
and
sbb
inc
in
cmp
popf
push
jbe
mov
cltd
jecxz
cmp
jb
int3
imul
jecxz
cmp
fstl
mov
stos
pop
imul
mov
mov
daa
adcl
cmpsl
cmp
mov
dec
pop
jg
xchg
xchg
pop
jp
push
int3
mov
test
pop
and
lea
adc
sub
faddl
pop
push
and
push
fcoml
addl
push
and
adc
jo
shll
xor
push
test
rcrl
pusha
dec
inc
dec
in
ljmp
jb
aas
and
jb
inc
jp
out
test
fnstenv
cmp
mov
test
or
jmp
xchg
lods
mov
sub
addl
mov
hlt
pop
dec
cmpsl
std
push
mov
xchg
push
rcrl
in
dec
mov
mov
lds
fmuls
lods
inc
popf
jns
fsubrs
std
int3
rcl
lahf
push
sbb
sbb
cltd
push
pop
shll
and
cld
andb
cld
mov
jmp
jecxz
fwait
mov
leave
leave
int
adc
pop
sbb
fcomps
and
call
sbb
aas
pop
mov
dec
pop
les
stc
pop
cwtl
movsb
cli
push
inc
cmpsl
pop
dec
xchg
mov
mov
dec
xchg
fildll
shrb
pop
sbb
aas
and
test
sub
or
mov
icebp
cltd
pop
aas
repnz
in
xchg
fcmovnb
sub
cwtl
lods
mov
cmpsb
mov
add
xor
jp
imul
mov
bound
push
push
or
inc
pop
mov
mov
cltd
adc
sub
jg
add
ds
mov
jno
or
xorb
adc
lods
call
mov
add
inc
push
cmc
data16
sub
lods
rclb
rolb
jb
inc
push
ret
push
mov
mov
clc
test
mov
fidivl
sbb
out
je
lcall
in
mov
lret
sub
jb
scas
jo
rorb
sbb
mov
pushf
jp
xor
inc
mov
repz
inc
cmpb
insb
daa
fwait
and
divb
adc
adc
sub
push
xchg
arpl
inc
lds
sub
stos
mov
int3
and
adc
adc
or
push
dec
dec
dec
leave
or
rclb
jecxz
pop
fisubl
dec
test
stos
pushf
sub
inc
test
adc
adcl
xchg
stc
jb
sbb
mov
cmp
andb
add
jb
into
adc
sar
mov
pop
arpl
cli
jmp
jle
daa
xchg
pop
icebp
pop
mov
mov
sbb
mov
cmp
jp
xchg
inc
cmp
mov
andnps
std
mov
in
sbb
pop
pop
int3
fisubl
mov
adc
add
pusha
sti
dec
add
stc
push
jmp
sub
aam
add
jbe
xchg
and
lcall
fstpl
mov
pop
lret
pop
inc
in
fwait
cmpsl
dec
rcll
es
xchg
xchg
xor
add
add
sub
loopne
hlt
orl
cmc
mov
lods
jle
add
fs
jecxz
cmp
orb
in
ret
cmc
in
xchg
out
test
es
jecxz
das
adc
mov
jno
mov
push
in
mov
fwait
jp
outsb
push
add
into
and
push
fnstcw
cmp
enter
dec
add
in
dec
cmpsl
repz
out
mov
in
jns
sbb
int
xbegin
mov
les
push
aam
mov
test
inc
aas
adc
fcomip
xor
loopne
push
loop
decb
inc
adc
lds
jae
aas
lcall
push
add
sub
std
loop
mov
inc
jns
add
lock
and
daa
or
mov
pusha
sub
in
insb
push
enter
dec
mov
pop
lret
sub
enter
imul
movsb
decl
ret
push
ss
rol
movsl
test
int3
fidivrl
loop
inc
or
cmp
mov
fisubl
test
mov
jecxz
push
mov
ret
aad
pop
cltd
add
clc
sbb
orb
loop
push
xor
cmp
in
bswap
push
jmp
leave
xchg
js
andb
sti
daa
das
and
sub
mov
rclb
leave
jnp
jne
adc
add
loop
or
out
mov
mov
dec
adc
mov
rcll
and
andl
push
add
jb
and
jno
dec
cs
fdivr
nop
out
loop
testl
xor
lcall
push
mov
popf
xchg
fcompl
ds
xchg
cmp
adc
fldenv
cmp
popa
stos
mov
jne
fmuls
mov
loop
arpl
sbb
out
inc
mov
adcb
jmp
mov
in
icebp
insl
cmc
push
call
test
test
popa
pushf
pop
push
in
jmp
add
inc
pop
lret
ds
pop
xor
rcll
pop
fisttpl
sti
out
mov
fmulp
in
push
push
lods
or
ficompl
fdivl
popa
sbb
loope
dec
xchg
out
ds
lods
lret
hlt
jmp
mov
push
ja
push
pop
mov
cld
ds
fstl
in
mov
sub
mov
inc
or
negb
xlat
sbb
ja
sbb
scas
orb
push
leave
test
dec
or
subl
call
inc
movsl
jp
inc
in
push
mov
subl
int
imul
pop
mov
stos
jmp
mov
cltd
jns
loope
cmp
movsb
fbstp
cmp
mov
or
leave
fsubs
mov
ss
push
push
stc
xchg
push
cmp
movsl
aas
fmulp
inc
and
adc
aam
call
and
dec
add
fmuls
arpl
xor
xor
gs
adc
sub
out
adc
popa
inc
fsubrs
cmc
lret
test
aad
cmp
rclb
fildll
adc
push
or
dec
pop
dec
cmp
insl
pop
mov
int3
sti
xchg
xor
sbb
and
test
aam
mov
aam
mov
mov
adc
inc
cld
or
adc
jmp
adc
sub
and
outsb
cmc
pop
pop
inc
ret
loope
mov
mov
in
ja
xchg
push
pop
push
fldenv
imul
sti
dec
insb
aas
xchg
xor
sub
sbb
fs
sub
xchg
mov
lds
stc
in
movsl
sahf
mov
std
stos
pop
jl
stos
je
push
mov
push
sbb
les
and
and
add
je
xor
cmp
and
mov
jae
call
shlb
ljmp
mov
push
mov
dec
faddp
ss
jmp
fsubrp
cwtl
mov
cmpl
xor
and
sbb
into
pop
mulb
testb
jmp
sar
nop
fdivl
jnp
shll
adc
or
fsubr
push
movsl
fstpl
xchg
es
test
dec
sbb
cmp
adc
cltd
xor
mov
rcpps
pushf
sbb
or
xabort
adc
hlt
imul
xlat
push
inc
pushf
push
mov
pop
out
rcll
or
lods
push
push
inc
into
pop
scas
test
jmp
mov
int3
push
mov
out
or
scas
xor
adc
pmulhw
orl
stos
sbb
test
push
sub
pop
je
jo
xor
cli
xchg
inc
lods
jp
aam
scas
test
into
mov
xchg
outsb
outsb
jl
mov
and
pop
or
mov
mov
mov
push
dec
outsb
mov
sbbl
cmp
dec
inc
imul
insl
shl
into
inc
aad
ja
push
in
out
mov
loop
lock
ss
addr16
jge
popa
hlt
cmpsl
adc
push
repz
insl
jne
shr
lock
popa
js
dec
sbb
test
cmp
lods
and
call
and
push
fstps
fcompp
add
lret
sbb
stos
and
cmp
jmp
add
and
lret
in
cmp
pusha
cmp
pop
lock
pop
sub
dec
pop
xchg
fwait
inc
pop
out
pop
push
shll
fs
mov
les
dec
lds
sub
stc
mov
add
adc
mov
xchg
mov
dec
clc
rorb
sar
dec
js
aam
test
inc
and
aaa
loopne
int
push
out
clc
ja
inc
jno
outsb
stos
in
push
loopne
add
dec
clc
movsl
add
arpl
mov
pop
js
mov
ds
clc
fdivl
sub
push
or
jns
mov
jbe
divl
mov
dec
adc
lds
push
in
mul
jecxz
cwtl
jbe
sub
sub
sub
mov
test
mov
ja
scas
jge
daa
jmp
cmp
out
outsl
addr16
arpl
mov
cmp
mul
sub
push
lods
inc
lea
testl
lahf
or
ja
inc
cltd
jge
push
clc
xchg
test
mov
cmc
mov
movsb
aam
push
sbbb
and
cmpsl
push
stos
out
sarl
leave
cmp
cmc
out
mov
xor
jg
and
hlt
pop
mov
and
fs
xchg
clc
cmp
imul
sbb
push
add
mov
mov
nop
call
sbb
scas
sub
gs
push
mov
shl
adc
movsl
jmp
pop
nop
ficoml
aam
pushf
mov
outsl
fsts
aas
inc
out
sub
dec
or
aam
ror
jl
bound
movsl
cld
pop
fsubp
mov
mov
mov
jecxz
addl
das
pop
mov
sub
dec
fucomip
aad
mov
loop
movl
imul
jns
xchg
movsl
jb
popf
scas
jg
lret
mov
dec
jmp
sub
push
leave
es
xchg
add
movsb
iret
in
insw
decl
popf
mov
push
movsb
icebp
xchg
xor
mov
loop
mov
jno
and
push
push
mov
pop
mov
mov
jae
dec
sub
cmpsl
xor
dec
out
sub
sahf
stc
adc
jge
loope
ficomps
in
cmp
lcall
je
mov
data16
jno
jno
fnstsw
push
and
dec
jnp
aad
cmp
pop
inc
mov
adc
ret
or
jae
or
pop
fnstcw
xchg
xchg
jbe
push
pop
dec
dec
ret
addb
cld
out
mov
pop
imul
std
ficompl
and
jb
sbb
xchg
pushf
inc
test
jo
lahf
mov
cmc
lahf
jae
ljmp
adc
imul
int3
shll
orl
call
mov
lret
fcomps
fsubrl
mov
cmpsl
mov
or
xchg
test
xlat
jl
subl
aas
ds
cmp
stos
jb
xchg
in
xchg
andb
xor
add
test
cs
cld
fidivs
push
lret
pusha
and
push
inc
ret
fidivs
sub
jno
mov
or
xlat
mov
shr
and
cmp
ljmp
inc
push
in
test
pop
iret
jnp
jmp
ljmp
add
sub
fcoms
push
das
je
dec
pushf
aas
fsubrs
mov
inc
les
push
adc
stos
mov
dec
mov
sub
test
daa
mov
adc
jmp
fiadds
das
sti
mov
cltd
sub
loope
xchg
add
dec
xor
movsb
mov
and
test
cmpsb
mov
insb
inc
mov
push
loope
pop
insb
aaa
xchg
inc
mov
pop
jg
and
test
push
add
dec
pop
add
fucomip
xor
xchg
and
pop
sub
addl
sub
daa
push
imul
ljmp
jb
lods
mov
test
ret
lcall
cmp
cmpsl
loop,pn
sub
dec
iret
sbb
frstor
and
je
or
mov
push
out
mov
std
das
sbb
daa
cld
cmpl
addb
nop
mov
sbb
sbb
shrl
push
lret
rclb
mov
pop
xor
scas
adc
fisubrl
data16
mov
loopne
out
ds
adc
mov
aad
stc
mov
aas
out
dec
and
ljmp
int3
or
and
mov
call
daa
or
ss
dec
pop
ljmp
roll
fistps
lds
bound
test
inc
mov
int3
jp
stos
mov
daa
sti
adc
mov
shlb
mov
js
push
daa
hlt
add
pop
and
dec
out
pop
mov
cmp
mov
in
xor
cmp
cmp
jmp
ja
leave
fwait
out
inc
jb
lods
call
fildll
jns
and
fsubl
je
push
cmp
enterw
fldenv
push
lret
adc
pop
mov
es
cld
inc
out
xor
int
mov
jno
mov
cmpsl
mov
add
mov
mov
dec
or
pop
ret
outsb
mov
jge
sar
je
lcall
pop
sti
push
push
stos
cltd
cwtl
ljmp
inc
sbb
negb
pop
leave
repz
lods
shlb
and
mov
or
dec
loop
jle
sti
xor
adc
sub
push
les
data16
xor
gs
out
and
inc
adc
sub
push
imulb
sub
and
push
push
cmp
out
lea
lods
pop
repnz
in
rcrl
xchg
push
add
add
sub
shl
divb
adc
xor
xor
cld
inc
outsb
mov
js
jae
mov
imull
mov
test
lods
cld
xchg
outsb
push
add
imul
shrd
and
pop
sbb
or
mov
and
dec
test
stos
nop
xor
sahf
lock
int
or
flds
mov
mov
pop
daa
fimuls
mov
or
xor
test
pop
sub
out
and
jmp
rcrb
inc
add
push
gs
xor
adc
sar
xor
adc
cmp
pop
inc
push
push
cmp
insl
inc
pop
and
testb
je
into
lods
and
xor
push
add
cmp
out
mov
je
cmp
dec
sti
mov
sarl
dec
or
xor
push
mov
nop
popf
jb
sub
out
icebp
movsb
mov
fnstenv
adcb
jmp
cmp
dec
xchg
mov
sti
ret
mov
lcall
das
dec
sbb
addr16
jbe
pop
xchg
cmp
lods
pusha
pop
les
frstor
sub
cwtl
bound
nop
add
adc
lcall
add
sbb
cltd
push
mov
cmp
cmp
xchg
inc
inc
movsl
jne
mov
mov
fcoms
jbe
popf
jns
andb
and
jbe
jbe
sbb
test
pop
xchg
inc
mov
mov
jnp
add
mov
xor
pop
mov
adc
call
pushf
xlat
pusha
xor
push
adc
cmpsb
and
pop
mov
aaa
cmp
push
sbb
js
mov
clc
mov
stos
sub
push
inc
les
mov
sub
ljmp
int
adc
gs
xor
mov
xchg
lahf
jp
jge
ds
push
mov
sbb
pushf
or
jecxz
pop
push
push
push
pop
mov
out
data16
xlat
add
dec
lods
inc
rcr
js
adc
mov
and
hlt
fdivl
imul
test
mov
mov
stos
jb
cmp
sbb
movsb
pop
jecxz
push
test
mov
jno
out
into
or
mov
fwait
cmp
hlt
shll
inc
mov
imul
push
rcrb
insb
fistl
cltd
lds
fistpl
mov
push
sbbl
insb
ret
xor
insl
xsave
mov
subb
add
pop
inc
dec
jns
sub
xchg
repnz
inc
dec
mov
movsb
in
push
mov
mov
dec
add
test
out
pushf
sbb
lods
bound
push
pushf
add
add
xchg
mov
push
ss
or
xchg
enter
jne
insl
jbe
jno
sub
es
cmpsb
fsts
pop
loopne
dec
in
cli
testl
loopne
loope
cmpsb
jne
pop
mov
cmp
sbb
orb
lret
inc
mov
in
inc
sub
adc
loope
loope
cltd
andpd
js
and
repnz
lret
in
or
push
push
mov
cli
outsb
fisttps
cli
outsl
aaa
sbb
jmp
aaa
ljmp
leave
sub
sbb
mov
scas
pop
sahf
idiv
cwtl
lods
and
call
xchg
xchg
test
fwait
les
xchg
lods
mov
sarl
fidivl
jg
add
aam
cmc
mov
and
adc
mov
cltd
inc
xchg
loop
sbb
sbb
mov
ret
and
jne
pushf
mov
and
enter
lock
or
push
pushf
loopne
shrb
insl
pop
push
aad
std
lods
aam
sub
mov
sbb
pop
mov
mov
jge
aaa
lods
lea
ljmp
gs
adc
out
mov
xchg
leave
xor
leave
cmp
test
jae
imul
fsts
repnz
imul
jp
xchg
mov
pop
jmp
lahf
lret
dec
cmpsb
push
in
sbb
cmc
jp
mov
jle
sbb
mov
or
push
das
adc
pop
sbb
xchg
jecxz
jecxz
jo
add
xchg
sub
mov
shrl
push
mov
or
xor
jmp
cmc
aad
xchg
jae
mov
shrl
andl
clc
int
xchg
xlat
test
sub
jnp
lahf
jge
fldl
sarl
ja
dec
push
test
jnp
gs
test
scas
xor
dec
shl
std
lods
jmp
lea
push
xchg
pop
and
popl
pop
jle
cmp
mov
and
push
dec
bound
dec
sub
mov
push
stos
mov
mov
add
insb
mov
icebp
sti
dec
insl
sbbl
fcoml
scas
iret
jg
xchg
mov
mov
test
mov
mov
decl
fsubrs
in
lret
dec
shll
lock
push
xlat
fpatan
push
sub
in
mov
dec
daa
lea
jb
or
fwait
mov
loope
lret
ret
pop
cmpb
outsl
loopne
in
divb
xchg
rorb
stos
and
push
mov
mov
push
jle
pop
sbb
bnd
and
xor
pop
sub
inc
mov
adc
jo
push
shl
fs
xchg
pop
sbb
push
xchg
cld
test
shl
adc
lds
lahf
add
addr16
decl
jp
mov
sarb
adc
test
outsl
cmc
test
ds
jmp
icebp
ret
cmp
pop
out
push
sarb
cmp
cmpsl
shll
push
shl
xchg
filds
push
in
les
mov
add
int3
pushf
out
imul
push
or
test
adc
leave
mov
test
cmpsl
add
add
push
mov
js
xor
inc
in
shr
xchg
xchg
push
iret
mov
roll
subl
cmp
mov
sarl
test
jns
das
mov
push
dec
inc
sbb
nop
sti
sarb
sub
imul
daa
push
mov
mov
ljmp
mov
fcmovnb
fsub
lret
inc
insl
adc
xchg
fucomip
pop
fidivl
cmp
jo
fimull
pop
int3
stc
jnp
push
mov
outsb
xchg
outsb
adc
dec
mov
daa
adc
in
jbe
adc
data16
nop
pusha
rcll
insb
lds
or
push
clc
or
cmp
stos
xlat
lods
push
and
xor
jle
pop
xorl
push
xor
jp
lahf
mov
insb
std
lcall
sbb
loopne
out
out
xor
mov
and
sti
test
fisttpl
lock
jmp
and
into
pop
cwtl
test
shlb
mov
arpl
and
daa
cwtl
push
inc
out
cmp
push
std
mov
mov
das
dec
test
cmpsl
add
shlb
lea
dec
push
movsl
iret
sub
fwait
lods
nop
mov
lret
adc
aam
insl
dec
jecxz,pt
daa
adc
ds
jmp
jge
and
pop
shl
xchg
fwait
and
popa
adc
sti
xchg
bound
and
pop
jmp
out
mov
cmp
mov
repnz
jbe
push
push
dec
inc
xor
mov
dec
adc
xchg
pop
xchg
and
xchg
loop
mov
add
sub
fists
xor
cmc
inc
daa
movl
dec
sub
fiaddl
xchg
mov
mov
or
movsl
call
loopne
sub
pop
or
xchg
mov
jecxz
shll
mov
xchg
xchg
stos
mov
and
mov
mov
lods
xchg
mov
imul
mov
in
inc
into
cltd
xor
test
adc
cli
inc
xchg
xlat
mov
scas
fcomp
xor
cmp
mov
lcall
int3
sbb
add
daa
mov
outsb
enter
cmpsl
mov
pop
lcall
cltd
pop
out
sbb
push
data16
adc
jae
mov
dec
mov
xlat
movsb
push
inc
ret
insl
or
js
mov
jge
leave
dec
xor
sarl
hlt
inc
jnp
or
shll
xor
out
mov
lock
xchg
cld
dec
addb
sub
aas
mov
push
rcrb
pop
sti
pushf
mov
pop
jno
mov
iret
cmc
mov
mov
lret
add
or
push
clc
sbbl
dec
jmp
sbbb
lahf
pop
add
cmp
pop
mov
test
dec
movsb
std
fcmovb
test
jp
and
cld
call
stc
push
inc
bnd
outsl
imul
add
pop
cltd
test
mov
test
add
sahf
pop
or
and
mov
mov
mov
lods
jmp
hlt
lret
addr16
mov
sub
push
clc
xor
adc
lret
sub
sub
lahf
jecxz
lahf
loope
cmpsb
sub
in
outsb
idivl
adc
repnz
or
jo,pn
sti
ror
fistps
ja
daa
cli
popf
jae
adc
sub
jecxz
sub
jmp
jno
inc
fisubs
shlb
inc
outsb
pop
xchg
xchg
adc
stc
jb
jge
xorl
jmp
sbb
cmpl
dec
lcall
cli
ffreep
push
mov
fidivrl
push
pushf
lret
jmp
dec
jno
and
mov
test
pop
push
and
lea
incb
int
or
rcr
pop
xchg
sub
hlt
mov
push
or
mov
popf
insb
pushf
dec
enter
xchg
jmp
inc
mov
mov
lea
sti
dec
stos
or
lahf
test
sub
xchg
daa
imul
mulb
xchg
jp
jg
add
movsl
xchg
test
add
in
sub
add
or
mov
fs
add
xchg
dec
pop
jns
js
adc
shlb
mov
cli
add
movsl
ja
cmpsl
dec
hlt
sub
repnz
iret
aaa
pop
gs
push
cmc
fdivp
int
scas
lods
into
adc
lods
mov
add
out
sbb
adc
icebp
mov
lret
push
sub
adc
push
mov
dec
inc
imul
cmp
lahf
mov
pop
mov
aad
cld
adc
and
in
test
clc
xor
and
sub
inc
sbb
testl
aaa
push
mov
or
leave
clc
push
xchg
pop
sbb
mov
in
xchg
cmp
icebp
cli
ror
sub
js
mov
mov
dec
push
push
fists
popa
and
mov
sti
iret
or
out
and
loop
loop
sub
and
gs
pop
xchg
ss
xchg
pop
pop
inc
in
inc
fwait
adc
sub
into
pop
cmp
jae
inc
xchg
fdivl
sub
hlt
idiv
mov
cmp
pop
mov
mov
imul
cmp
adc
lcall
push
or
mov
ja
test
add
mov
push
ds
cwtl
pushf
fstpt
out
pop
mov
jmp
ret
sbb
mov
and
insb
jmp
orb
bound
dec
inc
nop
jb
sarl
jp
cld
xchg
xor
pop
cmp
ljmp
sub
xchg
xchg
cmpsb
movsb
pop
repnz
push
jae
dec
fsubp
out
lea
sbb
mov
jmp
mov
fdivp
push
scas
and
loop
fisttpll
daa
lret
stos
or
add
jg
je
adc
sbb
fiadds
mov
lahf
cmpsb
sub
or
popf
adc
cmpsb
imul
jno
aam
sub
xor
push
cmp
push
call
sahf
xchg
inc
mov
dec
sbb
je
adc
sbb
dec
enter
enter
lock
mov
std
flds
movswl
xor
aad
into
or
add
push
jle
mov
mov
inc
test
sbb
into
inc
or
sbb
sub
sub
xchg
dec
lahf
dec
enter
shlb
loop
pop
aam
inc
stos
pusha
outsl
aas
enter
sahf
sbb
out
gs
jae
xchg
mov
btr
idivl
or
jno
pop
push
stc
push
outsl
cwtl
inc
stos
js
mov
xor
aam
xchg
push
fistl
mov
inc
push
push
sbb
out
push
hlt
mov
fidivs
xor
cmpsl
jmp
cmp
xchg
insb
or
into
lahf
out
out
in
loope
bound
sub
call
sbbb
cs
push
pop
ljmp
xor
lods
ss
mov
or
test
dec
or
mov
lcall
mov
cwtl
sub
lret
xchg
mov
jecxz
aaa
nop
and
jbe,pt
int3
test
jmp
sub
fs
mov
sahf
xchg
enter
stos
loop
dec
mov
mov
lea
add
inc
or
popf
pop
add
push
lds
jbe
push
cmp
mov
popf
out
insb
jns
mov
in
mov
mov
testb
push
daa
inc
inc
mov
and
shrb
movsl
cmc
push
std
stos
aaa
sbb
cld
pop
jo
and
cmp
mov
daa
xchg
jge
pop
xchg
mov
loop
ja
adc
mov
xchg
jno
lock
pop
outsl
push
pop
stc
mov
xchg
add
jmp
push
sahf
imul
mov
mov
ja
sbb
mov
dec
jl
aam
test
repz
inc
mov
pushf
push
insb
ljmp
sub
mov
mov
cmpsl
fidivrs
lods
test
jp
cmp
and
imul
xor
inc
lods
sti
rcrb
cmp
adc
mov
xchg
std
repz
mov
cmpsb
pop
arpl
dec
add
adc
call
xchg
es
sub
mov
aam
lods
jp
lcall
repz
mov
sbb
lahf
out
mov
test
arpl
push
testl
imull
loop
push
pop
arpl
push
in
sbb
ljmp
dec
cmp
sub
data16
pop
jmp
daa
lahf
mov
xchg
pop
es
push
aam
push
xchg
mov
xor
scas
jns
pop
inc
rcr
jmp
call
or
data16
notb
mov
out
js
iret
mov
je
insl
push
xchg
fildll
xchg
repz
pusha
or
notl
adc
pop
lcall
jbe
out
addr16
xorl
in
cld
ret
fldcw
xor
fcoml
repnz
jae
leave
xor
leave
sub
mov
test
pop
and
rcll
fs
add
xchg
popf
mov
sbb
xor
gs
into
std
xchg
and
and
xor
das
sbb
xchg
rorb
movlps
pop
jl
add
lods
or
test
int3
pop
mov
mov
push
fnstcw
sbb
mov
bswap
add
adc
cmc
flds
sub
or
out
dec
fwait
adc
cmpsl
das
xor
jmp
inc
and
outsl
aam
push
cld
loope
aaa
sbb
inc
pop
fwait
lret
dec
test
xchg
loopne
insl
dec
or
cmp
data16
in
or
xor
loopne
mov
sbb
or
movsb
popf
xor
inc
jbe
push
and
rcrb
test
adc
into
cmp
dec
mov
je
setb
mov
lds
sub
out
lock
fcmovne
pop
test
adc
mov
push
stc
xchg
dec
scas
push
mov
mov
sub
push
push
fisubs
xor
cmp
or
push
outsl
pusha
sub
adc
push
nop
mov
push
std
movsb
add
in
stos
mov
xor
cld
in
ljmp
lret
ja
xchg
popa
std
pop
cmp
data16
sub
cmpsb
xchg
xor
call
dec
mov
mov
pop
push
push
flds
movsb
mov
cmp
xchg
ja
jl
addr16
call
mov
stos
jp
lret
or
bound
cmpsb
or
mov
mov
mov
psrlq
dec
push
es
lret
sbb
fisttps
sbbb
fbld
mov
cli
repnz
inc
xchg
add
cmp
ds
cmp
pop
adc
addr16
or
mov
out
xor
pop
sub
mov
add
push
pop
xchg
insl
loop
mov
inc
xchg
push
adc
imul
mov
sub
and
stos
xor
mov
aad
mov
xchg
mov
xorb
int
popw
insl
xchg
movsl
outsb
mov
fcompl
push
movsb
mov
fidivrl
inc
pop
pop
cmp
push
iret
andl
adc
mov
imul
inc
dec
xchg
push
and
jo
test
mov
cs
in
add
fst
push
loop
mov
fsubp
ljmp
mov
test
clc
fldt
push
out
dec
jg
xchg
cmp
dec
popa
stos
stos
jge
mov
hlt
pop
dec
push
xchg
fs
pop
cmp
push
adc
int
sbb
cwtl
jne
xchg
pop
int3
dec
cmc
push
mov
js
push
pop
dec
dec
mov
aad
sbb
mov
out
flds
loope
xor
outsb
insb
iret
leave
insb
dec
lahf
test
and
push
or
jg
xor
popf
test
inc
xchg
das
stc
cmp
popf
scas
push
in
pop
sti
adc
repz
mov
loope
dec
mov
and
mov
stos
pop
push
cmp
jno
sub
ficoml
inc
adc
flds
mov
cmp
mov
ret
sti
fnstsw
xchg
push
inc
xor
or
push
call
pop
push
bound
inc
por
adc
repz
cmpsl
xchg
mov
jbe
ret
jae
cmp
insl
sbb
sar
pop
iret
adc
das
stos
pop
sti
lds
pop
jae
mov
outsb
mov
in
jmp
dec
int
push
add
neg
inc
out
add
cltd
and
dec
outsb
ljmp
dec
pop
stos
test
aam
mov
xor
out
int3
movsb
mov
popf
popa
jnp
fldcw
sarb
sbb
in
sarl
popf
cmp
add
ds
je
and
lret
pusha
cltd
xor
in
insb
lock
sbb
movsb
adc
pop
cmp
negl
push
adc
add
push
xor
orb
or
mov
mov
xchg
in
pop
mov
and
call
loopne
arpl
jl
rclb
clc
push
ret
jns
jbe
leave
jmp
cld
shr
adc
clc
lods
xchg
push
push
insl
push
mov
dec
daa
test
insl
inc
push
fimuls
jne
lock
xchg
push
mov
roll
or
filds
jb
dec
or
shl
pusha
mov
ret
cmc
jns
mov
shrl
mov
mov
or
rcll
jno
and
dec
mov
fwait
mov
xchg
cmp
xchg
aam
call
cmpsb
sahf
shl
cmc
call
sub
jno
inc
mov
xchg
sbb
aam
imul
bswap
sbb
sbb
stos
inc
sub
cltd
add
lock
ret
in
sub
xchg
daa
push
loopne
mov
push
test
add
adc
lahf
es
push
mov
insl
mov
adc
push
push
test
idivl
out
xlat
jne
jp
jmp
xchg
sbb
mov
fwait
pop
lcall
shll
pop
xor
ss
inc
mov
mov
popa
stc
mov
and
sbb
nop
mov
adc
mov
jns
pop
cmp
out
cmpl
and
dec
and
testl
xchg
aaa
cwtl
pop
xor
and
out
leave
and
call
xchg
pusha
mov
daa
jno
sub
nop
jecxz
dec
out
xor
mov
in
pop
pop
push
pop
fcoms
jns
adc
popa
daa
ds
cmp
sub
stc
aaa
xchg
xlat
cmpsb
jle
pop
and
rcrl
pushf
pop
mov
pop
xchg
imul
sub
mov
or
jne
lahf
decb
mov
call
push
push
xchg
insb
inc
adc
xor
rcl
xor
mov
fistl
out
sub
mov
sbb
dec
ret
push
lea
mov
jge
and
out
lcall
les
icebp
daa
cmp
lret
cmp
loopne
mov
push
call
shlb
adc
and
and
push
mov
shlb
shlb
mov
mov
xor
sub
jg
xchg
jne
xchg
mov
out
stos
push
sub
or
inc
sub
pop
repnz
jno
fcoml
shlb
pusha
add
adc
xor
int
movsl
mov
pop
add
cmp
sbb
add
pop
dec
pop
mov
divl
scas
in
mov
addr16
gs
jl
adc
lret
lods
ljmp
cltd
pop
and
loop
jmp
jne
cmp
xchg
outsb
std
xchg
xchg
jp
lock
xor
cmp
dec
std
mov
jae
into
mov
fcomp
jp
cwtl
cltd
je
jecxz,pn
mov
push
sarb
insl
mov
shl
je
jecxz
popf
xor
out
or
xchg
sbb
cli
xbegin
std
or
inc
xchg
xor
inc
fwait
jne
xor
fimuls
xchg
push
enter
push
dec
push
mov
pop
fdivl
repz
roll
lock
dec
loop
cli
in
inc
fs
dec
aam
and
pusha
inc
xchg
push
jo
aad
sbb
xchg
imul
add
and
js
shrl
jne
and
roll
int
cmc
into
adc
stos
xor
xchg
inc
mov
add
pop
inc
sbbl
pop
sti
in
pop
arpl
fldcw
repz
or
loopne
das
sbb
gs
mov
mov
or
mov
lock
shl
push
adc
scas
jns
pushf
add
nop
pop
call
sub
test
xchg
pop
rorb
cmp
stos
and
mov
inc
test
dec
adc
cmpsb
mov
or
mov
aas
pushf
push
jl
or
jnp
popa
or
fs
mov
xor
test
cmpsl
movsl
out
dec
adc
ja
pop
mov
mov
dec
orb
and
inc
lock
movsl
push
imul
in
test
leave
movsb
imul
ret
lods
mov
mov
mov
add
push
enter
jbe
mov
sub
pop
jno
lods
lcall
jge
jle
addr16
fisttpll
cmpl
mov
mov
aad
frstor
test
adc
xor
gs
cmc
outsl
lods
stos
shr
int
fldcw
jl
xchg
ficoms
sub
xor
das
outsl
inc
push
cwtl
negl
cwtl
call
jb
or
mov
movsb
cld
daa
push
inc
pop
mov
aam
fnstcw
push
xchg
lret
fwait
and
xor
pusha
in
jo
stos
stc
repz
dec
mov
sbb
inc
xchg
and
shll
daa
jne
mov
xchg
push
int3
xchg
sub
loopne
jo
imul
sub
sub
push
nop
add
sub
inc
pop
cld
cmc
sub
loopne
mov
mov
lods
in
lret
in
shl
les
clc
iret
addr16
std
xor
hlt
mov
dec
popf
mov
inc
add
jnp
and
ds
hlt
inc
add
sbb
xchg
lahf
fcoml
dec
push
jae
mov
add
add
xchg
nop
jbe
cmp
ret
in
ja
mov
ret
xor
out
cmp
repz
sub
pop
or
into
mov
int
mov
mov
shlb
mov
mov
adc
inc
out
icebp
clc
nop
lret
data16
cmp
cld
sub
shll
lock
es
sti
or
add
adc
cmp
mov
nop
mov
cmp
out
ret
mov
push
fsubrl
imul
mov
mov
inc
fisttpll
testl
ret
cld
xchg
sub
dec
leave
in
sbb
dec
sub
jl
ljmp
mov
test
cs
mov
test
dec
pop
pop
push
pop
xchg
mov
and
push
stc
loope
repnz
or
mov
ficoms
lret
xchg
add
jbe
fstpt
movsl
loop
in
dec
in
lcall
dec
nop
pop
dec
mov
push
lds
ret
test
dec
sti
sub
imul
imul
mov
mov
mov
fsubp
jno
loope
mov
fdivr
clc
inc
ljmp
mov
test
push
rdpmc
jb
or
jb
or
mov
add
mov
add
fistpll
imul
push
mov
notb
push
mov
data16
push
inc
fbld
mov
iret
or
dec
in
or
repnz
and
xor
fimuls
call
ds
xorb
mov
fsubl
stos
aam
push
out
xchg
je
push
mov
ds
pop
xor
je
pusha
shll
loopne
movsb
test
dec
xor
sub
xor
test
xor
gs
xchg
int3
adc
xor
shll
ret
pop
jge
sub
sub
mov
jmp
mov
inc
aas
or
ror
jbe
mov
clc
in
or
inc
xchg
push
jae
or
fcomps
stos
add
ss
adc
sub
daa
pop
imul
jo
jbe
les
cmp
add
cmc
adc
das
popa
adc
xor
and
jle
roll
mov
adc
xor
mov
dec
lods
mov
pop
inc
sarl
cmp
jge
jo
ds
and
and
leave
mov
mov
xor
xchg
pushf
pusha
add
xchg
push
mov
imul
imul
imul
and
or
js
and
cmpsb
dec
mov
test
xchg
pop
orl
rolb
jp
sbb
mov
test
jl
sbb
mov
mov
adc
xchg
mov
dec
in
mov
xor
inc
push
dec
hlt
jmp
jns
xor
xor
xchg
lea
pinsrw
add
jle
pusha
add
xor
and
push
pop
jl
add
xchg
fdivrs
push
jge
imul
jl
into
push
fisubl
stos
cmc
xor
fldlg2
das
imul
aas
pop
hlt
and
je
and
dec
test
ret
das
cltd
aaa
mov
mov
mov
cld
loope
jl
or
icebp
aaa
popf
adc
jecxz
dec
andb
lds
cli
stos
pushf
jns
and
test
sub
push
push
mov
movsb
out
mov
std
sub
xorl
subb
mov
adc
or
mov
fisttpl
mov
outsb
sahf
in
cmpsl
mov
inc
ja
jecxz
jno
push
bnd
lock
pop
sarb
cli
pop
jno
popf
jo
sbb
cmpsl
adc
fsubrl
mov
pop
dec
mov
out
pop
fucomi
orl
test
xchg
sub
mov
inc
adc
test
or
pop
xor
int3
jecxz
jle
inc
jp
adc
mov
jo
jb
cmp
xor
outsl
cmp
idivl
insb
ss
xlat
pop
into
fsubrs
sub
popf
mov
pop
clc
xchg
popa
je
movsl
addl
adc
out
imul
pop
cltd
cld
sarb
jmp
cmp
cmp
cmp
loope
cltd
leave
jae
test
xor
mov
shll
xor
imul
pop
inc
nop
jmp
leave
outsl
iret
test
stos
outsb
adc
outsb
adc
loope
es
add
push
sbb
inc
jge
xor
sbb
rcl
mov
mov
sub
pop
mov
fdivrl
dec
mov
mov
jb
mov
hlt
cmpsl
push
int
ljmp
in
outsb
jg
imull
bound
rcr
repz
cmpl
icebp
lods
hlt
dec
movsl
push
push
sar
push
cs
xor
arpl
test
es
pop
mov
gs
lds
jae
inc
fs
pop
mov
aaa
lds
out
test
xlat
je
aad
adc
mov
mov
aad
sbb
sub
xlat
xchg
xlat
sub
inc
out
pop
dec
jmp
sub
popf
fldenv
sbb
ss
mov
lods
cmpsw
inc
int
inc
iret
loope
mov
adc
add
cli
sub
out
jmp
ljmp
std
jp
dec
inc
lock
sbb
mov
int3
outsl
mov
cmpsl
inc
daa
imul
sahf
xchg
inc
fstpt
sbb
and
cmp
sbb
dec
mov
rol
outsl
andb
jl
in
mov
js
test
js
ret
cld
mov
pop
xchg
xchg
hlt
sub
dec
push
mov
mov
xor
fidivl
cwtl
jl
and
pop
mov
enter
mov
rcrb
test
rolb
mov
inc
mov
in
daa
add
ljmp
inc
pushf
lahf
into
mov
clc
std
out
roll
scas
push
rorb
mov
push
add
lock
ja
dec
mov
out
jle
scas
pop
stos
mov
fprem1
push
sbb
or
ret
jns
jb
imul
mov
ret
jg
pop
jecxz
adc
jbe
xor
aaa
inc
dec
js
mov
pop
xchg
nop
pop
aam
sub
pusha
mov
pop
jae
in
bound
mov
sti
jmp
adc
dec
pop
lds
adc
push
or
sbb
inc
sahf
push
adc
and
int3
mov
hlt
dec
cwtl
jmp
loop
pop
fisubrs
mov
int3
or
faddl
js
cld
shl
push
xchg
js
mov
inc
aaa
sbb
rcr
popf
xor
adc
outsl
enter
les
in
jl
push
fwait
xchg
sbb
mov
and
cmc
int3
sbb
dec
inc
std
sahf
test
lods
mov
stc
cli
mov
mov
pop
lock
add
fsub
je
xorb
sub
cltd
push
jp
test
clc
ds
or
mov
stos
sub
test
pop
mov
push
xor
es
inc
lods
cmpb
mov
inc
loopne
mov
xor
jp
jb
adc
mov
test
inc
or
stos
push
imul
mov
pushf
dec
mov
mov
sbb
jo
cmc
push
and
xor
lcall
add
mov
fnstsw
cmp
inc
fmuls
cmp
pop
add
push
rcrl
pop
in
andl
push
outsb
mov
xchg
sub
mov
xchg
adc
mov
test
pop
cmp
mov
into
pop
mov
sbb
push
jmp
stos
icebp
es
inc
xchg
repnz
fildl
rorl
add
insl
dec
test
xor
test
inc
jmp
test
int3
cli
mov
mov
imul
inc
ret
xor
sbb
push
sub
stc
xchg
push
adc
popf
push
inc
mov
lds
scas
or
hlt
stos
enter
push
lret
cli
insb
add
mov
xchg
dec
mov
out
push
lock
out
insl
push
and
xchg
dec
ja
test
mov
xor
movsb
test
out
xlat
cld
adcl
jnp
lods
lock
sbbl
mov
mov
enter
inc
icebp
ljmp
pop
out
bound
push
push
or
mov
mov
stc
mov
sahf
lret
jmp
mov
cwtl
jnp
push
xchg
into
dec
call
adc
arpl
jb
sbb
mov
and
mov
dec
call
pushw
push
movsb
ret
mov
fdivs
into
and
lds
jle
lret
insl
insl
xchg
jb
sarl
insl
xchg
sub
adc
pop
inc
or
sbb
test
stc
cs
push
fstp
pop
stos
pop
popa
jo
xor
ljmp
jmp
cmp
ljmp
xlat
sbb
push
fdivs
test
mov
mov
push
sub
je
loopne
dec
je
iret
outsl
sub
lret
pop
push
mov
xchg
mov
xor
sbb
inc
fbld
lock
hlt
lret
int3
repnz
push
adc
scas
inc
loope
mov
aam
mov
and
mov
mov
enter
xor
or
data16
mov
leave
shll
fstl
scas
es
and
lock
cmc
jl
inc
fwait
xchg
push
add
pop
mov
popf
or
int3
mov
mov
sub
inc
scas
mov
inc
loopne
test
in
dec
stos
lock
pop
pop
test
sbbb
inc
sub
pop
leave
in
dec
dec
lods
in
add
mov
jecxz
iret
mov
inc
mov
lcall
push
mov
sub
mov
pop
jne
mov
cs
push
ss
pop
jg
subb
arpl
and
adc
pop
xchg
fisubs
movsl
mov
mov
mov
fwait
mov
push
pop
dec
inc
xor
jecxz
mov
push
call
pop
dec
divl
jg
add
mov
dec
add
aam
inc
sbb
sahf
frstor
out
push
jne
repnz
rcl
push
xchg
repnz
push
jge
data16
aaa
rclb
dec
sub
push
lahf
ret
fadds
dec
sbb
mov
add
push
test
or
push
ret
jg
mov
ljmp
pop
cmp
daa
lret
xor
dec
mov
xor
addr16
pop
cmpsb
add
and
push
and
fsubrl
mov
mov
aam
and
push
pop
rorl
sub
add
adc
sbb
xchg
cmp
jge
pop
fisubs
jo
arpl
push
and
adcl
test
ja
mov
inc
pop
bound
mov
aaa
lock
jl
sub
pusha
call
mov
into
in
sbb
dec
and
nop
lahf
add
jnp
xor
jnp
add
out
cmp
and
incb
ljmp
aas
cs
sarb
push
lret
sbb
inc
dec
fsubs
xchg
popf
popf
cli
or
aas
ljmp
insl
cmpb
and
int3
int3
loop
mov
lds
jns
int
xchg
lods
lcall
xor
mov
sub
es
in
aam
inc
cmp
popa
jge
das
imul
add
test
mov
sbb
mov
jge
cmp
cmovg
loop
dec
aas
decb
mov
xchg
lods
fbld
or
insl
hlt
sar
fists
notb
cmp
sti
cld
enter
jb
pop
jmp
xchg
push
mov
xchg
xchg
int
cmp
sub
jmp
adc
sub
ljmp
and
dec
ret
push
mov
mov
repz
push
arpl
popl
rcrb
lahf
test
ret
rolb
scas
xor
xor
sub
adc
lods
jmp
ja
or
mov
pushaw
mov
call
imul
je
dec
lcall
dec
and
mov
mov
xchg
insl
daa
stos
in
out
fsubl
cld
sbb
loope
lods
add
cmpl
xor
out
mov
bnd
cmp
das
pop
xchg
ja
pop
and
pop
dec
sbb
notb
inc
and
pop
cmp
incl
data16
jb
arpl
ficompl
cs
adc
cmp
out
xchg
movsb
inc
or
test
sbb
mov
pushf
flds
sahf
int3
ret
sahf
and
jnp
mov
js
cmp
arpl
mov
dec
pop
pop
pop
xor
sub
es
rep
shl
cs
rorl
arpl
pop
xor
push
mov
test
in
lahf
sti
inc
mov
adc
sub
ljmp
dec
loop
push
lret
lcall
cmp
shl
je
cmp
adc
dec
jo
jmp
xchg
mov
add
adc
xlat
xchg
lods
adc
stos
mov
push
in
ja
shll
inc
xchg
clc
xchg
adc
in
cmp
scas
bnd
ljmp
add
and
add
out
push
cmpsb
pop
and
movsl
pop
cmp
mov
xor
adc
mov
xorl
orl
pop
enter
jge
mov
sbb
or
mov
fildl
push
jb
mov
das
mov
in
rol
fmul
jo
in
addr16
das
scas
inc
pop
add
js
jg
jle
arpl
mov
xor
or
cmp
js
xor
ret
sarb
mov
jbe
pop
fmull
inc
loopne
jl
notb
lods
sti
addr16
ret
mov
ss
enter
xchg
pop
push
loope
sti
test
mov
pusha
in
aaa
shr
negl
sbb
in
mov
aad
or
pusha
rcrl
into
sbb
pop
mov
ljmp
mov
adc
std
pop
or
push
or
sub
hlt
out
jns
push
jo
shrb
mov
pop
mov
int3
push
pop
jnp
nop
repnz
std
je
stos
enter
fisubrs
jb
mov
sbb
mov
jne
fwait
das
mov
sub
xor
xor
pop
ss
ret
int
aaa
pop
pop
add
pushf
sub
jnp
jl
inc
or
lahf
loope
mov
icebp
cmp
mov
jle
add
ret
push
arpl
add
lret
add
jl
out
lret
jbe
jecxz
test
xchg
movsl
push
ret
ja
icebp
rcrb
pop
mov
std
rorb
xor
mov
cltd
call
mov
add
mov
fldt
inc
lret
add
iret
mov
xchg
in
dec
ret
add
adc
inc
lds
pushf
cmp
test
mov
add
dec
and
push
sbb
sti
mov
lahf
xor
sub
jno
repnz
and
mov
lock
jl
sahf
fmuls
jno
mov
mov
pop
repz
mov
jne
arpl
test
les
rorl
xchg
xchg
fstps
es
mov
cltd
cltd
fs
xlat
adc
push
shlb
scas
and
cmp
popa
xchg
loopne
sbb
xor
sub
dec
stc
sahf
pop
adc
fst
clc
mov
and
mov
mov
lahf
inc
ss
es
fnstsw
sub
lds
adcb
sbb
jg
ficomps
in
inc
xchg
outsb
cmc
sub
add
xlat
sbb
xchg
outsl
stc
loopne
arpl
stos
popa
rorb
push
out
xor
mov
fwait
hlt
push
repz
xchg
mov
mov
cmp
stos
adc
sub
xchg
leave
sub
jecxz
xchg
stc
scas
cli
sbb
sbb
imul
and
cs
and
xlat
jmp
cltd
push
aad
outsl
daa
push
xor
push
aas
jo
arpl
es
pusha
mov
fmuls
ret
push
sub
sub
adc
imul
test
and
cmpsb
or
clc
jmp
dec
aas
das
orl
jmp
adc
rorl
sbb
xor
adcb
insb
cltd
dec
dec
jecxz
pop
push
outsl
sarb
out
inc
bound
jmp
dec
or
xlat
pusha
xor
orl
jp
xchg
les
fs
in
pop
std
bnd
jecxz
and
int
mov
out
push
jecxz
insl
mov
mul
add
xchg
dec
out
lcall
lods
es
jo
test
add
dec
xchg
ret
push
into
xchg
push
and
icebp
inc
lods
mov
test
in
inc
mov
cmpsb
and
popa
pop
cs
pop
negl
clc
dec
aas
mov
pop
xlat
aaa
add
shr
imul
ja
je
int
add
push
fimuls
sbb
cmp
fdivrl
ja
leave
iret
je
xchg
dec
sbb
mov
adc
adc
pop
jle
aaa
ds
in
inc
adc
into
mov
dec
stos
daa
fstps
mov
ss
orb
daa
cmp
scas
outsb
adc
shll
sub
sbb
iret
add
push
ret
inc
and
inc
popa
jge
pusha
into
xchg
in
gs
in
jg,pn
leave
or
lahf
mov
in
lock
in
fsubs
mov
ret
xor
inc
fldt
push
or
es
push
xor
sub
inc
jg
shlb
sub
ja
or
mov
cwtl
sub
rcrl
pop
mov
xchg
je
jbe
sbb
loop
push
sbb
jmp
xor
shl
sti
jbe
imul
in
fs
mov
mov
cmp
movsb
repnz
popa
add
cmpsb
pop
rorl
jae
ja
xor
cli
sub
jbe
pop
sti
xor
test
cmp
scas
cmpsb
mov
adc
adc
ds
movsl
pop
movd
scas
pop
sub
fs
push
push
xor
or
and
int3
or
push
xor
xchg
jecxz
jae
mov
test
jno
xor
mov
jno
sarb
mov
out
push
dec
in
cmp
mov
std
ljmp
push
mov
out
adc
sub
orb
mov
lea
lds
shrb
push
jns
xor
inc
mov
jge
xor
mov
fnstsw
jmp
inc
and
in
jge
popa
cmpsl
jae
jp
cld
add
and
fs
int
pushf
jp
int
dec
pop
mov
dec
xchg
out
sbb
dec
mulb
cld
inc
ficompl
lods
pop
xchg
pop
dec
xorb
sbb
into
insb
inc
mov
shr
xor
fidivrs
call
ret
dec
mull
dec
fxch
push
pop
out
jb
orb
push
aad
out
pop
repnz
xor
push
xor
decb
das
push
jno
cmp
sbb
add
rolb
lret
sti
popa
or
xor
cmp
insb
mov
xchg
cld
insl
and
push
adc
lods
loope,pt
dec
inc
xchg
xchg
mov
xchg
pop
cld
and
pushf
and
cmp
je
mov
jns
scas
clc
mov
jne
push
sub
fdivr
add
or
out
push
mov
sarl
nop
dec
sbb
not
in
pop
xchg
adc
mov
push
sub
nop
in
xchg
pop
shlb
sbb
mov
lea
lock
lea
arpl
adc
jge
lods
jb
popw
int3
test
sti
fcoml
dec
jg
enter
lcall
pop
jmp
add
sbb
adc
stos
clc
cltd
sbb
push
cmp
add
sub
int
dec
pop
or
call
scas
pop
jb
xchg
dec
push
xor
inc
lret
insl
bswap
js
push
daa
bound
push
mov
fisttpl
ret
loopne
and
enter
and
mov
sahf
cs
dec
add
push
xchg
movsb
pop
imul
xchg
mov
cmpsb
cmp
cmp
cmp
mov
nop
enter
mov
mov
fmull
cmp
push
dec
jns
add
lds
and
sub
aam
out
clc
loopew
ja
lret
cld
cmp
punpckhbw
pop
aam
daa
inc
inc
xor
jecxz
jnp
clc
cltd
inc
adcl
outsb
pop
push
test
xchg
cmp
jnp
sbb
jp
ja
xor
or
into
add
xchg
xor
out
mov
or
or
dec
mov
jnp
push
fcomps
mov
xlat
lret
test
pop
shl
jg
mov
sbb
cwtl
jb,pn
adc
aaa
cmpsl
jg
in
sbb
xor
scas
movsb
lret
shrb
inc
mov
dec
ljmp
aas
xor
xchg
fsts
jmp
pusha
mov
cmc
int
loope
lret
call
sbb
movsl
sbb
pusha
mov
push
fs
repz
sti
ljmp
pop
inc
xor
lret
fcmovb
dec
sub
mov
mov
pop
js
mov
in
in
enter
outsl
jmp
stos
es
sub
inc
mov
xor
loope
imul
ss
popf
push
cmp
jmp
inc
mov
jl
in
outsl
fadd
cmp
pop
dec
pop
mov
sbb
idiv
test
insb
rcrb
in
imul
and
fidivrl
mov
xchg
lret
push
xchg
push
adc
pop
iret
pop
test
mov
rorl
je
leave
bnd
cmc
mov
stc
xchg
sbb
push
jno
arpl
sub
mov
iretw
xor
in
mov
lea
jo
jg
xlat
push
mov
cltd
in
cmpsl
inc
stc
arpl
xchg
mov
jecxz
pop
inc
or
int
in
xchg
sahf
jge
sbbb
out
jge
adc
int3
push
bound
nop
pop
lods
pushf
xchg
in
ljmp
mov
aad
arpl
icebp
out
pusha
lods
or
popa
lock
sbb
jne
insb
out
mov
adcl
push
inc
xchg
stos
and
push
jmp
imul
outsb
mov
xchg
movsl
insl
outsb
sbb
scas
push
mov
mov
bound
in
xor
mov
or
xor
insl
or
cwtl
fstps
out
ficoml
inc
xchg
repz
daa
ljmp
in
and
mov
stos
adc
jge
push
sub
pop
imul
rcr
stos
sbb
rcl
out
lods
stos
cmp
sub
testl
or
push
in
divl
push
xchg
test
sub
dec
in
out
rorb
dec
pop
xor
add
cltd
mov
pop
filds
data16
pushf
neg
aas
scas
cmp
xchg
ljmp
mov
das
subb
add
mov
dec
dec
pop
jle
clc
xor
aaa
ja
mov
sbb
dec
test
mov
pushf
cmp
inc
add
lea
push
dec
std
mov
std
or
addr16
sub
out
inc
mov
push
cmp
and
xchg
jo
push
loop
add
add
inc
cmp
out
xor
aas
xchg
xchg
add
sbb
pop
aas
sar
fldl
push
mov
sbbl
adc
sub
enter
stc
call
adc
loope
imul
push
cmpb
xor
iret
jge
cmp
orl
lock
push
sbb
jne
sbb
mov
je
jae
dec
lds
in
pop
movsl
mov
mov
xlat
orb
pop
push
jg
in
or
sub
test
outsb
inc
fdivr
or
popa
mov
xchg
sahf
movsb
shr
mov
dec
decb
push
outsb
add
cmpxchg
xchg
lcall
stc
movsb
sbbb
rolb
jg
arpl
adcl
inc
outsl
pop
popa
adc
pop
es
jo
adc
inc
ret
add
adc
mov
or
jmp
jecxz
mov
mov
lahf
pop
pop
and
mov
repz
stos
fs
mov
stos
xchg
cmp
mov
lock
lret
dec
pop
xchg
fbstp
mov
test
rep
add
enter
sub
outsb
xchg
or
mov
notl
ret
cmp
mov
cmp
or
sbb
lret
mov
pop
out
stos
xchg
dec
mov
jge
cmc
lods
jns
mov
and
xchg
cmp
cmpsb
mov
push
xor
dec
inc
mov
outsb
call
jl
sbb
add
pop
sub
popa
fsubrs
aad
das
and
fcmovu
and
ds
jg
cwtl
dec
or
mov
jmp
sub
repnz
gs
push
jle
xchg
jb
mov
into
sub
arpl
js
aad
jo
xlat
popf
and
dec
ljmp
es
imul
push
cli
subl
sar
inc
stos
ds
ret
js
mov
andb
or
inc
mov
test
inc
cmp
stc
fcomi
insl
lods
lock
jne
loope
xlat
cmp
add
xchg
dec
arpl
mov
pop
movsl
out
aad
insl
test
jb
jl
int3
cmp
bound
lods
sub
out
js
add
int
leave
pop
nop
or
cmp
or
mov
pop
adc
mov
mov
jl
sub
cmp
and
mov
daa
cmp
ret
clc
inc
jmp
notb
add
in
into
mov
add
adc
movsb
cwtl
mov
jle
popf
fidivl
imul
iret
pop
roll
or
cmpb
cwtl
iret
xor
shlb
imul
or
scas
xor
jecxz
loop
sub
cltd
std
cmp
dec
lahf
fwait
xor
xchg
sub
pusha
in
pop
mov
jge
pop
imul
rol
mov
scas
add
push
rcl
into
mov
push
push
mov
shll
in
cmp
jecxz
js
sub
inc
xchg
mov
dec
outsl
mov
mov
addr16
fnstcw
sahf
mov
xor
and
sbb
data16
sub
and
or
cmp
dec
in
push
dec
jg
cmpsl
movsl
dec
iret
in
sbb
jecxz
sub
jne
loopne
mov
shlb
dec
lea
test
lock
dec
mov
shlb
sbb
dec
jne
insb
xor
mov
or
mov
or
cs
push
daa
mov
xchg
lds
es
ljmp
dec
cs
mov
dec
xor
cmp
cli
cli
mov
jge
out
jno
jmp
rclb
cmpl
repz
mov
lcall
ds
shr
mov
xchg
lds
mov
jge
mov
and
jo
xor
arpl
jns
push
scas
mov
pop
dec
xor
mov
mov
cli
je
mov
cmp
mov
in
xchg
lcall
jnp
lcall
aas
mov
out
fdivrl
mov
add
push
jne
dec
or
adc
adc
push
dec
adc
dec
loopne
fildl
mov
notl
dec
iret
cmp
sbb
fsubs
dec
in
push
xor
jb
int3
adc
mov
push
test
lret
cmc
stos
ret
pop
or
fadd
rcrb
push
in
shl
cld
daa
xchg
cmp
pop
adc
jnp
mov
pusha
test
xor
push
mov
adc
push
sub
inc
jge
push
inc
push
es
jbe
arpl
out
xchg
sahf
addr16
daa
adc
insl
add
ffreep
packuswb
xor
push
or
inc
sub
aad
scas
int3
push
clc
lret
inc
dec
pushf
addl
out
sub
mov
mov
sahf
inc
lock
pop
or
mov
push
fiaddl
enter
jle
inc
and
iret
lcall
out
nop
mov
mov
inc
or
shl
dec
jl
sarl
lods
inc
pop
mov
aam
aad
or
addr16
xchg
mov
mul
cmp
or
inc
inc
pop
mov
rorb
cmc
pusha
dec
pushf
mov
mov
pop
out
push
es
cmp
mov
pop
cmp
sahf
adc
fistpll
mov
mov
dec
in
push
aaa
lock
inc
pop
jge
rolb
dec
jp
mov
jg
je
mov
cwtl
jmp
jl
popf
jns
jbe
cmc
cld
mov
sarb
pop
lock
mov
nop
or
cli
sti
jecxz
popl
pusha
scas
jbe
nop
sub
outsl
inc
repnz
scas
dec
cmp
out
mov
pusha
rcrb
push
xor
stos
push
dec
filds
and
push
out
push
insl
mov
adc
dec
into
mov
notb
cmp
js
fdivrs
mov
fistpl
add
mov
xchg
icebp
fadds
adc
inc
ja
xlat
stos
clc
cmp
push
movsl
rcr
sub
loopne
fcoml
pop
push
adc
lock
sub
xlat
or
outsb
fwait
xchg
rcrb
mov
out
lods
mov
xchg
fdivs
mov
das
inc
imul
push
push
in
inc
js
and
aaa
in
xor
sub
sahf
inc
cli
add
fstl
cld
and
lret
add
pop
jle
adc
mov
shlb
fsub
jb
clc
mov
cltd
ss
adc
ss
mov
bound
mov
js
xchg
loop
cld
xchg
pop
pusha
mov
test
mov
dec
out
mov
inc
dec
jae
in
mov
aas
insb
mov
inc
and
pop
repnz
cs
ja
cltd
inc
sbbl
cmp
mov
ret
cli
cs
xchg
mov
test
mov
ret
fsubl
sbb
sbb
cmpsl
or
inc
fistpl
imul
jg
and
lods
lcall
es
out
inc
pop
arpl
jbe
inc
jns
lods
fnstsw
push
lcall
in
subl
dec
movsl
out
popa
mov
fsubs
jno
je
pop
push
jnp
and
cwtl
stc
out
ja
loope
shll
mov
sbb
mov
push
mov
popf
bound
push
mov
pop
out
inc
popa
arpl
fucomp
dec
mov
fcmovne
pushf
sbb
or
push
jno
or
jp
add
cmp
push
add
sti
mov
mov
mov
or
sub
cld
sub
in
int3
iret
add
sbb
push
dec
sbb
jne
and
aad
fs
mov
or
movsb
fwait
jge
out
mov
mull
xchg
lret
xchg
cmp
addr16
sub
mov
fs
stos
mov
stos
add
xchg
lods
scas
outsl
jne
inc
leave
inc
out
xor
sahf
pusha
push
push
push
or
push
inc
jb
aam
mov
lcall
stos
test
inc
push
pop
push
loop
arpl
ljmp
xor
inc
push
addr16
xor
mov
pusha
xchg
jbe
aad
dec
mov
dec
inc
fcmovnb
push
pop
and
adc
inc
fdivs
cs
ja
pushf
in
jnp
int3
dec
pop
lods
push
sub
add
into
cmpsl
jne
dec
enter
sub
dec
jge
mov
cmpsl
add
fistpl
and
fdivrl
sti
lods
fisubl
out
es
inc
dec
rcll
add
loop
adc
sub
push
and
mov
fidivrl
jge
dec
out
and
jle
xchg
add
jae
and
inc
mov
pop
shrl
cs
movsb
pop
inc
xchg
sar
and
call
cmpsl
in
cld
daa
int3
xor
loop
mov
out
xor
cmp
jle
dec
insl
jmp
pop
stc
push
dec
dec
scas
das
mov
jns
popf
jbe,pt
ljmp
push
push
fiadds
movsb
cmp
andb
sub
push
std
lds
andl
iret
adc
sub
rcrb
aaa
xor
into
out
nop
mov
xchg
ret
stc
mov
mov
xsaves
jae
out
es
and
push
jns
cmp
adcb
sahf
push
rclb
inc
pop
xchg
dec
pop
adc
fs
xchg
inc
das
dec
inc
xchg
sti
imul
mov
inc
add
sbb
or
or
fistps
inc
or
fcoms
push
fsubl
gs
lahf
into
ds
into
fldcw
bound
adc
in
fdivrl
insl
fs
mov
mov
cmp
dec
push
cmp
shrb
jno
add
mov
stos
pop
mov
xor
jbe,pn
jl
xlat
mov
xchg
repnz
insl
test
daa
shll
ret
cmc
mov
insb
fbld
or
push
jecxz
repz
push
adc
nop
aas
scas
dec
and
cltd
sub
cwtl
add
and
push
adc
pop
fnstcw
sub
iret
fisttpll
rol
popa
out
lods
sbb
pop
mov
sub
pop
out
inc
bound
test
and
mov
xchg
cmp
test
lds
xchg
cmp
pop
jle
and
scas
fs
push
and
in
pop
mov
mov
or
add
push
adc
push
dec
aaa
sub
outsb
cmp
and
dec
mov
frstor
add
test
lods
fwait
pop
loopne
mov
mov
mov
mov
and
xor
add
jecxz
enter
dec
out
mov
cmc
ss
jge
call
int
jae
pusha
adc
roll
stc
or
xor
cli
lret
push
test
inc
jbe
mov
pop
pop
je
sahf
sub
sbb
sub
mov
arpl
mov
push
mov
add
aam
into
or
pop
fscale
mov
fucomp
add
and
pop
cmp
fisubrs
or
enter
data16
int
push
mov
std
cmp
mov
daa
sub
mov
add
js
adc
enter
imulb
add
rcrl
mov
xchg
stos
add
push
add
and
mov
push
cmp
stos
int3
cmp
xchg
inc
repz
sbb
xchg
or
xchg
mulb
stos
jo
and
enter
insb
insl
dec
sub
je
jle
shll
test
hlt
xchg
pop
cmp
mov
popa
outsb
bound
mov
jo
fs
lcall
jmp
inc
dec
mov
mov
pushl
mov
or
jo
dec
jo
jno
pop
int3
sub
out
nop
mov
aad
aas
dec
call
cmp
lods
dec
insl
dec
sub
mov
repz
push
sbb
xchg
push
addr16
jb
je
add
xchg
rorl
xchg
mov
pushf
imul
mov
adc
aaa
loope
mov
pusha
rcl
mov
fisubrl
popf
pop
jo
loopne
xor
stc
ficoms
loop
out
pop
ja
push
movsb
incb
sarl
push
out
mov
fcmovnbe
dec
cmp
jne
dec
ret
jp
sbb
negb
jecxz
lds
bound
leave
add
sti
std
mov
push
mov
xor
das
adc
xor
sub
pop
cmp
xchg
dec
inc
mov
es
fildll
adc
aas
int
popa
pushf
fnsave
into
mov
shrb
rcr
popa
int3
push
xlat
xchg
xchg
or
sarl
cmp
in
jne
pop
mov
lods
adc
int
mov
mov
xcrypt-cbc
cmpsl
sar
add
imul
daa
or
push
push
shll
notb
aam
add
loop
xchg
dec
and
jns
sub
jo
aas
data16
or
loope
fisttps
int
pop
mov
add
mov
fiaddl
xor
bnd
lcall
mulb
jo
lret
sahf
inc
js
mov
sub
imul
stos
stos
ss
lods
imul
sub
iret
mov
ret
shrb
and
sub
and
sub
pop
in
jae
push
and
or
shrl
cmpb
xor
or
and
push
push
inc
push
fildl
jecxz
pop
lahf
add
sub
lret
test
or
dec
mov
dec
lock
adc
sub
insb
mov
mov
shl
out
jl
std
pop
xchg
aaa
sti
push
pop
inc
in
out
loop
popa
cwtl
adc
dec
je
mov
jbe
les
xlat
scas
push
bound
call
cs
es
lods
lds
cmp
pop
jmp
loope
into
push
push
outsb
movsb
push
cmp
pop
in
mov
mov
mov
lcall
testl
sub
xor
mov
jbe
or
stc
shrl
lret
mov
mov
pop
into
sti
cmpsb
mov
mov
hlt
or
test
or
mov
mov
adc
lock
movsb
test
or
std
fidivrl
mov
mov
mov
push
cmpsb
and
mov
or
dec
test
dec
dec
dec
xor
mov
pop
aaa
sbb
pop
cwtl
lods
xchg
push
mov
bound
jno
test
out
orb
cmp
sbb
mov
add
adc
xor
cs
sub
xchg
pusha
mov
inc
xor
pop
aas
mov
je
pop
icebp
cmpsl
int3
cmp
inc
jb
call
cmpsb
mov
dec
loope
jp
je
dec
aam
push
addr16
adcl
xchg
jge
test
xlat
or
pop
and
mul
int3
adc
mov
movsb
xlat
jne
add
out
cli
jnp
rol
push
mov
mov
ds
adcl
push
xorl
andb
loop
std
cmp
xchg
clc
push
orb
pop
out
into
in
cwtl
mov
lahf
and
pusha
push
sbb
iret
and
insb
sub
mov
and
sbb
jns
mov
push
dec
idivb
xor
dec
outsb
sub
andb
jnp
push
mov
jg
scas
mov
insl
nop
adc
call
xchg
add
clc
fstpt
pop
mov
sbb
cmpsl
mov
pop
movsl
sub
sub
fadd
or
insb
dec
dec
lods
ficomps
das
jno
xor
out
outsb
sub
sub
fwait
pop
push
cmp
or
je
pop
sbb
fs
xlat
inc
add
adc
push
inc
stc
pop
add
push
cmp
cmp
sub
fmul
or
xchg
repz
lret
xchg
movsb
int
push
push
lock
cs
lea
lcall
sbb
add
push
mov
mov
cmpsl
jecxz
inc
dec
je
insl
insl
pop
sub
aam
imul
ljmp
loopne
pushf
ja
rcr
xorl
je
test
xchg
mov
xchg
jmp
mov
daa
jne
pop
push
xor
mov
test
iret
pop
shlb
xchg
jge
mov
in
negb
iret
xor
fnstenv
imul
and
mov
rcll
sub
xor
ss
dec
mov
bswap
push
scas
pop
das
mov
pop
stos
fnstenv
and
push
repz
pop
sub
xor
decl
movsl
cmpsl
xor
pop
into
imul
sbb
mov
push
mov
jnp
or
aad
movsl
adc
sub
dec
aas
ljmp
mov
mov
or
test
testl
jns
test
cmp
cmp
arpl
dec
adc
shll
pop
mov
add
fidivrl
loop
scas
daa
and
cmp
mov
adc
mov
push
xchg
bound
mov
add
xchg
add
sbb
mov
in
dec
push
ljmp
xor
pop
jp
push
sub
psubusb
test
xor
mov
jnp
dec
popa
mov
dec
imul
es
jo
cli
cmpsb
sbbb
in
or
xor
ret
sar
dec
imul
into
jecxz
or
test
ss
fstps
lcall
cmpsb
cmp
imul
jnp
cli
out
fdivrl
jl
dec
das
push
cs
xchg
repz
add
fmull
or
inc
mov
xor
mov
sub
dec
popf
andb
xchg
fcomps
jno
scas
imulb
das
xchg
adc
cmp
mov
out
rcll
add
inc
fnstsw
ret
stos
out
hlt
arpl
fsubs
hlt
sti
and
mov
out
mov
mov
and
inc
pop
mov
adc
mov
mov
mov
inc
pop
push
sbb
inc
and
adc
lock
or
hlt
jno
dec
jge
scas
sub
push
loop
or
mov
mov
mov
aas
push
mov
xchg
std
dec
push
mov
mov
out
push
adc
or
lcall
cmp
push
hlt
popa
xor
mov
cmp
mov
in
adc
sahf
sub
or
xorb
cmp
ret
mov
pop
ficoml
cmc
mov
icebp
pop
imul
loope
add
imul
fwait
cmp
mov
pop
hlt
push
mov
xchg
jg
push
fldcw
mov
rorl
ficoml
aad
ss
lods
fisubs
scas
jmp
xchg
loop
fmuls
and
outsl
dec
mov
mov
xor
adc
stc
insb
mov
outsb
wbinvd
xchg
stos
mov
shl
pop
pusha
mov
sub
popf
call
pop
pop
cmp
lods
imul
pop
faddl
cmp
adc
push
fld
dec
and
or
mov
or
cmpsb
popf
pop
cmp
popf
leave
inc
mulb
pop
movsb
adc
sub
push
pop
loopne
xlat
aad
pop
mov
mov
ror
es
pop
add
xchg
lahf
repnz
ds
or
adc
add
mov
ljmp
ret
mov
mov
in
jecxz
sub
repnz
xchg
pop
push
or
rorl
mov
ljmp
ss
push
and
cs
arpl
stc
flds
mov
adc
movsb
loop
xchg
fidivrl
mov
push
call
jno
mov
mov
loope
push
push
notb
call
fs
push
push
or
sub
jg
fwait
arpl
lds
jb
outsb
and
xsavec
inc
gs
push
xor
add
mov
add
dec
push
pop
ret
rcl
jbe
loope
push
inc
mov
xor
cmp
mov
aas
cmp
popf
xchg
cmp
mov
ret
sub
pushf
push
add
xor
rcrb
clc
xor
and
mov
lds
jle
movb
mov
inc
imul
je
mov
mov
and
lcall
mov
inc
dec
addr16
lods
fcmovu
pop
sysexit
jae
filds
add
or
mov
fstpl
hlt
stc
sub
inc
cltd
xchg
loop
stc
push
rcr
lock
push
push
adc
or
cwtl
cmpsb
sub
mov
repz
lsl
jns
stc
mov
mov
out
inc
cmp
sahf
jnp
fstpl
nop
adc
push
rorb
sbb
and
movd
out
mov
cmpb
cmpsl
and
cmp
ds
add
mov
les
add
loop
cmpl
inc
mov
loop
cmp
test
clc
into
cmpsl
sub
fildl
inc
push
in
sbb
sbb
cmc
popa
mov
mov
andl
xchg
rorl
push
lret
inc
xchg
mov
lahf
and
push
andl
shrd
adcl
mov
sbb
mov
popa
push
in
mov
pop
hlt
sbb
lcall
jecxz
dec
jae
daa
xchg
lcall
sbb
push
lods
push
xchg
sbb
sbb
mov
rcl
mov
cwtl
in
fists
clc
or
pop
cmp
pop
jmp
lcall
sbb
outsb
mov
and
test
js
mov
sahf
sub
push
leave
iret
pop
shll
test
mov
xlat
pop
xchg
mov
aad
push
js
xor
pop
lret
in
adc
push
push
dec
nop
push
sub
fists
pop
dec
mov
mov
clc
xor
test
dec
shl
in
xchg
outsb
int3
movb
bnd
rcrb
or
das
jp
call
lea
add
test
cld
movsl
call
xlat
scas
sbb
push
test
mov
xor
test
xchg
js
add
pop
inc
push
dec
jne
sbb
test
xor
cmp
fst
rcll
jns
push
lcall
outsl
dec
stos
adc
mov
call
xlat
lods
and
add
rol
inc
in
data16
mov
adc
in
in
lret
movsb
inc
stos
ficoms
out
pop
outsl
js
lods
mov
mov
adc
mov
sub
pusha
scas
sbb
and
push
mov
push
out
push
scas
popf
addr16
repnz
mov
add
adcb
clc
lcall
insl
sbb
mov
es
or
xchg
dec
cs
enter
in
das
sbb
sti
add
sti
cld
sub
jns
sub
cs
jo
subb
jge
mov
and
movsb
into
mov
sarb
mov
adc
push
jge
mov
jge
or
push
insb
lods
xor
nop
ret
and
cmp
sbb
adc
xchg
test
dec
ss
xchg
je
les
xor
call
jl
mov
sbb
aam
mov
lea
adc
sbb
out
xor
jo
stc
fs
xor
fsub
repnz
ffree
mov
pop
pop
pop
cmp
js
lcall
xchg
mov
mov
lahf
or
adc
add
int
imul
out
lds
adc
rcr
sahf
adcb
loopne
in
inc
insb
ret
fucom
leave
sub
mov
jne
jo
and
mov
jo
ss
add
imul
rcll
add
fstpt
mov
in
enter
cmp
sub
sub
pop
inc
sbb
pop
push
or
cmp
test
xchg
out
jp
push
xchg
test
xchg
testb
push
in
sub
mov
sti
repz
std
outsl
mov
ds
xchg
pop
aam
aaa
adc
adc
jp
dec
icebp
jne
push
jp
lret
fstpl
mov
pop
ds
lea
mov
addr16
sbb
arpl
clc
jecxz
inc
mov
icebp
push
or
inc
xchg
mov
pop
and
sub
push
jo
popf
add
and
cmp
insb
mov
es
xchg
add
push
scas
jmp
std
cmp
ret
mov
pop
mov
pop
cwtl
aaa
lds
or
imul
push
adcb
lcall
imul
imul
clc
mov
and
lcall
loopne
std
pop
mov
sub
sub
repnz
insl
jae
push
jecxz
inc
leave
and
sti
into
xchg
jbe
sbb
add
cmpl
lret
enter
in
pop
push
jmp
mov
pop
test
jmp
adc
imull
sbb
inc
out
test
jns
fisubrs
add
jne
mov
imul
int
movsb
fldlg2
ret
orl
sub
outsl
mov
push
mov
or
cltd
fdivrp
sbb
cmp
push
shl
fistpll
imull
inc
adc
repnz
test
inc
call
loope
push
mov
xchg
mov
xchg
fcmovb
lds
add
adc
mov
pop
push
cld
cmpsb
aas
hlt
pop
repz
push
inc
or
cmp
icebp
or
in
in
xor
mov
leave
jg
xor
lret
in
aaa
mov
pop
ds
jmp
fisttps
dec
jmp
jg
add
cwtl
hlt
or
jmp
inc
adc
jp
fadd
mov
fistps
hlt
push
repz
sub
movsl
ret
test
xchg
xor
mov
adc
mov
xchg
stos
adc
jne
fnsave
cs
jge
mov
fildll
das
loope
negl
sbb
pop
inc
jmp
repnz
mov
test
sub
push
jecxz
loop
leave
add
into
push
cltd
cs
outsb
stc
sbb
push
cs
out
push
adc
ljmp
pop
cmp
xor
sub
push
push
fildll
out
xor
dec
pop
mov
rcr
cmpsl
push
out
lahf
pushl
push
sbb
jnp
popa
jp
pop
cmp
imul
cmc
mov
aaa
pop
shrl
push
std
xor
push
insb
cli
sahf
cmp
cli
xlat
cld
inc
jno
xchg
push
es
scas
mov
and
pop
jbe
cmp
push
fwait
in
les
data16
dec
ja
cmpsb
jnp
mov
aas
xchg
lds
add
test
and
jnp
icebp
xchg
int3
lret
inc
mov
aaa
cmp
pop
pop
fwait
xchg
out
dec
fistps
outsl
cltd
mov
adc
jns
test
jne
aas
rol
rcrb
in
sub
std
fsubr
ja
add
gs
lea
dec
in
push
xchg
and
pop
mov
fs
sbb
dec
mov
inc
cmp
xchg
xor
aam
or
jb
pop
roll
das
and
jae
or
cmp
popf
sahf
pop
xlat
lret
cld
pop
or
int
repnz
jne
fisttpll
mov
and
stc
cld
jno
je
je
sub
sub
mov
test
inc
sbb
jmp
and
cmpsl
aad
das
iret
jp
inc
mov
push
pop
bound
ret
adc
jnp
testl
xchg
imul
cmp
xchg
sbb
mov
daa
fnsave
pop
mov
je
enter
or
fisttpl
and
ja
ja
sub
popa
in
cmp
ljmp
sub
mov
inc
inc
xchg
jecxz
insl
jg
jne
repz
dec
mov
sub
call
ds
ds
popa
aaa
in
ret
js
fstpt
mov
movsb
and
sbb
sub
bound
sub
fidivs
or
sub
cmpsl
popf
add
repnz
fldt
cmp
movb
push
xchg
mov
mov
sbb
push
out
dec
add
mov
xchg
push
push
adc
xchg
jbe
loop
imull
push
out
jno
sub
fiadds
and
imul
mov
pop
ljmp
shll
mov
movsl
mov
xchg
sub
add
inc
mov
mov
jnp
bound
cmp
cli
adc
dec
push
cmpb
jno
pop
or
ljmp
add
jne
sub
cmp
mov
sub
hlt
cwtl
or
adc
sti
dec
dec
lds
sarl
rcr
sbb
fsubr
mov
mov
imul
rclb
and
roll
sbb
es
mov
or
sub
js
xchg
sub
into
test
adc
or
dec
je
mov
cld
stc
inc
jmp
xor
lahf
jp
call
imul
jecxz
orb
dec
lock
mov
xchg
xchg
jae
fnclex
lea
pop
daa
push
mov
add
pop
pop
in
cmp
iret
mov
stos
xchg
dec
movsb
data16
out
ds
into
shrl
inc
lods
cmp
pop
pop
out
jecxz
mov
push
push
add
ret
mov
lds
in
push
xlat
pop
jne
pop
insb
lds
mov
in
xor
rcrl
push
dec
xrelease
inc
sti
lahf
in
xchg
inc
mov
fwait
mov
dec
jg
dec
mov
push
das
lock
dec
mov
xchg
sbb
xor
or
xchg
push
cwtl
addr16
sbb
shlb
inc
stos
lea
xlat
in
stos
mov
mov
cmpsb
xlat
mov
inc
aam
dec
inc
pop
sbb
mov
cmp
push
fwait
arpl
cmp
jle
mov
xor
icebp
push
mov
in
bnd
sti
or
scas
mov
push
pop
add
jae,pt
loopne
test
dec
pop
jl
and
fbld
xchg
push
fistpll
cmpsb
bound
adc
insl
test
filds
jne
mov
xor
test
sub
dec
mov
jnp
pop
cmpsb
rcrb
dec
lds
notl
cmp
lea
and
xchg
fisubrs
xchg
ret
mov
pop
fsubp
insb
rorl
inc
dec
movsb
movsl
shll
adc
inc
add
mov
cmp
popf
jns
imul
shl
ret
inc
inc
outsb
mov
lods
dec
testl
movsb
jne
lock
and
je
push
daa
imul
mov
les
inc
cmpsb
add
sti
or
clc
push
cmp
xor
pop
mov
dec
add
movsb
idivb
addr16
sbb
inc
xorb
movsb
mov
inc
mov
mov
lahf
rolb
sub
dec
cmp
push
pop
xchg
fsubl
shlb
into
popf
adc
out
adc
addb
je
push
idivl
and
loop
sub
dec
cmp
inc
cmc
sbb
push
enter
dec
andb
adc
xor
dec
shlb
loop
mov
sbb
xor
pusha
shrb
jnp
mov
jp
ret
cmp
sub
add
jl
into
gs
pop
cld
sahf
and
dec
jl
negl
dec
cmp
roll
xor
cld
push
xor
stc
cli
out
mov
add
scas
int
lds
cmp
or
dec
pop
mov
cmp
xchg
jmp
insl
lahf
inc
xor
jge
mov
dec
mov
xchg
ror
aas
test
cwtl
and
pop
inc
gs
sbbl
jns
int
push
fsubl
out
push
out
cs
repz
jns
pop
cltd
fnsave
movsb
lahf
cli
faddl
fcoml
mov
fnstsw
bound
imul
ret
push
mov
jl
int
mov
inc
xor
and
repz
lret
in
push
gs
push
adc
push
adc
xor
jle
lahf
mov
fwait
call
xor
lods
push
gs
add
inc
fistpl
cmpl
pop
adc
mov
add
mov
loopnew
push
inc
dec
adc
hlt
cmp
mov
push
pop
sbb
lods
or
push
xor
mov
mov
sbb
shrb
xor
test
mov
jl
mov
out
mov
dec
lods
js
fs
push
out
or
sub
arpl
sub
xor
inc
cmp
imul
orb
mov
lcall
jae
sub
inc
sub
push
ret
std
pop
lret
xchg
je
jg
test
jmp
leave
mov
lcall
pushf
pusha
mov
cwtl
inc
inc
jmp
push
ljmp
xorb
punpckhwd
cmp
loopne
test
mov
and
xor
mov
push
das
cmpsb
jno
icebp
hlt
leave
mov
or
es
push
jp
xlat
into
lock
rcrb
sub
push
pusha
pusha
mov
in
jns
shrl
fsubrl
std
add
cmp
int3
clc
popa
cmpsb
adc
ret
pusha
fdivrp
sarl
adc
mov
mov
jp
movb
movsl
icebp
mov
push
xchg
push
icebp
jne
cmc
xchg
mov
xor
imul
mov
adc
adc
push
es
pop
add
lret
xlat
mulb
and
fidivrs
in
jp
adc
xchg
push
aad
test
nop
out
xchg
jg
mov
fs
or
nop
inc
xchg
xorps
movsb
scas
and
push
mov
push
bound
rcrb
xchg
add
loop
fstpl
inc
movsl
repnz
es
jno
pop
mov
push
notl
mov
jmp
dec
rcrw
dec
add
outsb
arpl
out
insb
or
mov
stos
pop
add
xchg
test
mov
bound
cs
fiadds
ss
and
js
mov
js
fnstsw
push
pushf
rol
stos
inc
int3
test
int
mov
into
movsb
fcomi
clc
and
popf
repz
push
sub
out
add
jecxz
cmp
pushf
mov
cmp
sub
sti
pop
cmpsb
mov
cmpsl
add
in
stos
std
jg
mov
mov
notb
in
insb
ret
xchg
pop
aas
lcall
cs
add
in
sub
or
pop
or
into
sub
test
loopne
ffreep
int
bnd
or
push
aad
push
push
out
or
fsubrl
lds
mov
push
rol
mov
into
movsl
jl
dec
jne
pop
cli
sbb
pop
jl
push
pop
inc
sub
popa
in
insb
arpl
dec
sub
jg
jbe
sbb
aad
mov
xor
mov
cmp
lea
pop
jecxz
lahf
jno
push
cwtl
pop
aam
mov
enter
cmp
adc
mov
mov
xlat
aaa
outsb
fcomps
sbb
xchg
repnz
adc
call
xor
mov
aas
in
cmp
leave
and
mov
xchg
lods
jmp
pop
xchg
jg
adc
popa
jmp
inc
or
out
inc
mov
cmpsb
int3
nop
inc
hlt
push
cmpsl
push
jb
inc
jae
add
jg
mov
pop
pop
xchg
int
jne
loope
imul
in
fcomip
inc
mov
addr16
insl
pop
or
mov
or
in
cmpsb
int
fisubrs
cmpsb
aaa
xchg
lods
jl
inc
dec
dec
pop
scas
lahf
pop
icebp
push
stos
sub
xchg
xor
sub
jns
dec
popf
push
aaa
add
insl
cmp
sahf
ret
xor
mov
xor
jns
fldcw
and
mov
pop
mov
adc
sub
or
fcmovnu
mov
stos
inc
sbb
mov
hlt
push
jae
pop
pop
and
stos
inc
cmpsb
outsb
push
push
shl
mov
lahf
mov
sub
xlat
push
xor
pushf
sub
repnz
sbbl
loop
in
std
jno
fstp
mov
call
cmp
xchg
aas
mov
mov
sti
icebp
cmpsl
aad
jo
sbb
cmpsb
fs
xchg
cld
cltd
lcall
and
aad
lcall
cmp
aad
jne
cli
jmp
pop
js
or
xadd
add
mov
xchg
jns
or
mov
or
std
outsl
adc
xor
jbe
rcl
adc
push
loopne
ffree
adc
mov
out
scas
inc
push
xchg
cmc
jp,pn
data16
cld
sbb
xchg
fstl
jae
mov
aas
fldcw
mov
sbb
ljmp
mov
xchg
cmp
adc
out
jbe
cmp
fnstcw
mov
test
jnp
stos
mov
dec
or
sbb
stos
mov
movsb
jl
mov
sub
in
fs
imul
xchg
in
adc
inc
andl
xor
adc
add
or
sub
scas
adc
inc
gs
or
push
or
jmp
popl
shlb
jle
mov
inc
lcall
jno
or
add
jmp
push
enter
in
lods
subl
xchg
cmp
mov
cmp
lods
loope
or
cmpsb
or
nop
ljmp
jg
notb
imul
rorl
add
mov
pop
pushf
sbb
mov
fwait
enter
subb
fstl
movsl
sarl
jae
dec
cwtl
pop
cltd
inc
add
clc
imul
inc
sub
sub
xchg
mov
lods
dec
lea
ljmp
imulb
mov
mov
rorb
inc
popa
ror
int
out
idivl
xor
xchg
stc
insl
pop
adc
shlb
test
or
dec
and
loopne
mov
rcrl
sbb
inc
jbe
xchg
and
scas
outsl
mov
movsb
cmpsb
iret
leave
mov
push
dec
sbb
mov
into
pop
pavgb
cmp
aaa
xchg
cli
adc
shll
into
push
jge
out
repnz
push
or
jmp
sub
ljmp
jne
fdivr
lcall
stos
xor
imul
je
nop
adc
shrb
aas
das
mov
lcall
jae
xchg
jns
out
lods
loope
daa
sub
dec
into
stc
adc
add
cmp
aas
mov
mov
mov
je
or
cmp
int3
pop
cmpsb
lcall
jbe
adc
iret
push
aad
scas
jge
cmc
out
inc
xlat
inc
sbb
stos
sahf
bound
insl
cwtl
imul
inc
sbb
mov
daa
cmp
xor
pop
out
lret
push
stos
sbb
arpl
dec
mov
iret
jns
cmpsl
jae
jne
outsl
cmc
out
jns
stc
or
arpl
mov
test
jmp
cmp
in
and
cmp
imul
and
testl
cmp
outsl
mov
sub
mov
add
fstps
mov
xchg
dec
cmpl
in
fs
inc
push
jl
xor
jno
neg
xor
and
vunpckhps
pop
lods
cli
xchg
fstpt
add
testl
sar
gs
insl
push
lret
adc
mov
aaa
fs
sub
push
cmpsb
std
insb
xchg
cmp
popf
int3
icebp
or
and
push
sbb
mov
data16
and
jbe
lods
out
and
movsb
or
xor
ret
popa
mov
add
jne
icebp
hlt
or
mov
cwtl
stos
push
cltd
fidivl
sub
outsl
icebp
add
jp
pop
cld
add
mov
sub
push
jo
int3
cmp
cwtl
pop
sbb
xchg
ss
xchg
push
shll
mov
insb
sahf
sub
push
add
out
mov
out
addr16
add
push
js
icebp
aam
mov
dec
or
xorl
push
mov
inc
scas
stos
jnp
out
jne
outsb
insl
mov
mov
lcall
loopne
hlt
daa
fcompl
mov
xchg
mov
mov
adc
cmp
jmp
stos
jp
cwtl
subl
dec
subb
xchg
xor
rcll
cmp
adc
test
add
lods
mov
frstor
scas
jge
jecxz
inc
into
push
dec
sbb
into
cmp
jecxz
xchg
lea
or
inc
inc
jl
fcmovbe
or
or
mov
sub
pusha
jl
stos
mov
push
mov
mov
mov
rcrb
mov
addl
sbb
cltd
inc
xor
or
jecxz
add
int
mov
sti
sub
ret
enter
clc
cmpl
push
push
jno
imul
xchg
sti
xor
pop
pop
xlat
xor
movl
pop
fwait
inc
cmc
pop
lods
pop
push
pushf
outsl
xchg
jo
cmp
lret
sbb
lock
adc
dec
adc
adc
jmp
xchg
in
scas
lds
aaa
adc
cmp
inc
into
push
iret
icebp
shrb
out
test
aas
popf
call
xchg
out
or
xor
das
jp
imul
pop
push
jmp
dec
mov
repz
data16
xlat
sbb
cmp
test
das
call
insb
ss
dec
xor
add
dec
outsl
daa
and
adc
and
jge
mov
mov
xchg
sub
decl
insl
mov
je
push
mov
into
mov
xchg
std
nop
pop
push
xchg
dec
and
lret
lcall
ds
clc
stc
test
inc
ljmp
jg
aaa
aad
addl
mov
inc
jae
or
test
popf
ljmp
mov
cmp
ret
add
cmp
push
sub
pop
dec
adc
call
jp
mov
gs
and
add
andb
rclb
lds
aam
mov
push
fldpi
fs
int
mov
fs
test
js
stos
sub
ss
mov
out
ljmp
dec
out
mov
daa
stos
lea
inc
lahf
dec
scas
mov
add
push
lock
lahf
jbe
or
adc
adc
mov
leave
cmp
sub
dec
sarl
push
pushf
mov
jo
jmp
bound
xchg
or
test
leave
es
sarl
outsl
mov
lcall
lods
loopne
push
les
mov
add
mov
mov
nop
cmp
mov
in
sti
in
hlt
or
push
and
sti
sbb
inc
adc
push
jb
pop
mov
stos
adc
fildll
sub
shll
cmp
mov
jae
jl
stos
stos
dec
dec
inc
popa
cli
pop
lods
jl
jns
mov
in
cmp
adc
gs
mov
jmp
jg
daa
push
push
repnz
adc
cmp
es
insb
mov
popf
mov
xchg
lock
js
call
and
fwait
mov
pushf
sub
int3
iret
lret
push
sbb
divb
fcoms
popa
xchg
pop
mov
sbb
push
xchg
jb
fs
or
sub
div
and
and
negl
out
icebp
das
out
xchg
sti
dec
push
lock
insb
or
imul
imul
in
aaa
sarb
js
aad
lahf
call
dec
sbb
int3
insl
je
ret
add
or
fidivrs
sbb
data16
pop
mov
dec
mov
or
sub
pushf
fcomps
enter
lods
ss
out
dec
repz
mov
inc
xorl
ds
in
xchg
gs
imul
jne
mov
fcomi
adc
push
insb
jp
adc
lret
cmp
pop
or
pop
sub
inc
rol
jl
and
movsb
xorl
inc
xlat
push
fwait
lret
dec
push
mov
jge
cltd
andl
sahf
imul
mov
sub
out
mov
cmp
xchg
xchg
dec
mov
out
pop
shll
dec
imul
inc
test
ret
or
pop
mov
sarb
add
xor
mov
rorb
ret
push
cmp
xchg
insb
fbstp
imul
and
rolb
pop
fidivl
adc
les
ror
pop
jge
push
push
sub
fwait
add
stos
mov
xchg
ss
in
mov
test
test
pusha
orl
sbb
js
test
popf
jne
mov
jb
scas
adc
sub
push
mov
sbb
add
jne
loopne
push
cmp
jne
aam
mov
test
push
cmp
in
jle
imul
in
pop
fidivl
orb
dec
inc
mov
mov
fldenv
in
test
pop
stos
mov
add
subl
mov
pop
mov
inc
aas
sqrtps
push
jl
data16
out
shlb
cmpsl
cli
gs
bound
mov
mov
mov
aad
pop
js
in
and
mov
scas
lds
add
lock
lcall
cwtl
in
dec
xor
sub
pushf
subl
jne
or
das
out
or
ret
repnz
in
or
sub
sbb
sub
add
xchg
inc
add
pop
mov
fsubr
sub
or
sub
ja
mov
fs
repz
out
push
jge
xlat
push
jle
mov
jg
in
xor
push
call
pop
stos
xor
and
push
pop
sti
xchg
fistl
rcrb
insb
mov
andl
pop
add
ja
add
out
mov
std
dec
int
inc
adc
es
add
out
mov
inc
or
jb
jl
pop
adc
sub
adc
cmpsb
repz
cmpsl
mov
adc
stc
pop
in
cmp
xchg
jno
xor
xchg
cld
and
adc
mov
dec
push
das
enter
bound
mov
aas
dec
popf
lret
rcrl
pop
mov
stos
push
and
sbb
out
jl
mov
insb
push
cmp
movsb
adc
es
push
xchg
test
jle
std
imul
sub
in
orb
jne
push
lods
jae
sti
insl
fisttpl
push
data16
pop
pop
int
scas
and
cmpsb
mov
xor
mov
cld
mov
cmpsb
jp,pt
cmp
jno
fsubr
cmp
outsb
sbb
cmc
aad
lcall
xchg
mov
push
je
ss
pop
pusha
icebp
jge
mov
and
add
mov
jg
das
lahf
mov
sub
movsb
stos
mov
adc
mov
add
mov
mov
subl
and
cmpsl
mov
cli
xor
inc
dec
pop
pop
adcb
pop
sti
adc
jmp
fsubrs
cmp
xchg
pop
sti
and
inc
pop
int
jle
add
push
mov
xor
scas
leave
lret
insl
int3
mov
mov
inc
stos
insl
and
aad
cmc
xchg
push
dec
sbb
cmpsl
stos
sbb
add
xchg
ret
testb
in
lods
nop
test
dec
ds
mov
sbb
shrl
xor
lock
jp
pop
and
push
scas
into
pop
les
push
int
xor
icebp
add
test
ljmp
imul
adc
inc
inc
int
divl
ja
cmpl
jne
ret
xchg
in
pop
add
inc
adc
or
inc
jb
jbe
sarb
lock
lods
inc
xlat
in
stc
xor
rolb
and
sub
and
ss
or
ret
lcall
in
xlat
xor
les
cld
sbb
sahf
lcall
push
cli
dec
jge
xor
pop
imul
push
data16
fisubrs
sbb
shll
das
stos
sub
fmulp
jecxz
ret
out
mov
icebp
fwait
xor
and
pusha
inc
fadd
sahf
or
mov
pop
add
jae
jg
aad
aas
and
pop
outsb
andb
stos
jbe
mov
es
xor
xor
mov
in
enter
lcall
pop
mov
lret
mov
subb
in
or
push
pusha
loope
imul
into
addr16
das
mov
dec
out
mov
sub
jno
cli
sub
or
xchg
out
test
sub
mov
popl
rcll
imul
xorl
xor
and
mov
mov
enter
add
jae
dec
mov
lahf
cmp
pop
daa
mov
cwtl
adc
inc
mov
cmp
sbb
insl
inc
mov
lea
inc
lock
loope
scas
pop
lods
jge
push
testl
das
xchg
je
addr16
xchg
test
das
mov
sub
dec
dec
lretw
jb
jae
push
inc
mov
or
scas
adc
inc
out
jae
cmc
lods
popa
cmp
fwait
push
jge
xor
xchg
lret
loopne
in
xor
lret
int
mov
dec
test
leave
aam
sbbl
add
adc
mov
std
pop
loope
into
jecxz
push
shl
fxch
std
in
push
inc
add
negb
lret
push
inc
sbb
cmp
fdivs
test
pop
and
cltd
arpl
int3
lock
arpl
popf
fnstsw
addr16
xchg
stos
and
nop
mov
cmp
add
sbb
add
test
push
mov
add
hlt
add
in
imul
or
sub
ret
sbb
test
test
clc
bound
scas
xor
adc
out
shll
enter
imul
lahf
ret
sub
sub
lahf
pop
xchg
sbb
cmp
cmp
pop
jnp
enter
inc
cmp
insb
cmpsl
hlt
push
and
filds
xchg
jge
test
dec
inc
jne
sub
iret
or
int
pop
lret
sub
sub
xchg
orl
loopne
sbb
jp
int
popf
jmp
dec
mov
inc
es
lods
in
fs
loope
push
movnti
divl
pop
xchg
in
iret
enter
in
addb
cmovne
dec
dec
xor
adc
cmp
dec
cmp
shll
pop
mov
or
test
fldl
scas
mov
enter
imul
or
aad
push
lcall
push
jmp
mov
mov
roll
mov
cmp
stc
clc
push
aad
imul
es
fsts
fistpll
cmpsl
fsubrs
cltd
mov
in
frstor
jg
pop
in
hlt
add
mov
mov
loop
sbb
add
or
repnz
mov
jnp
enter
stos
fcoml
mov
addb
cmp
sub
nop
xchg
rolb
fs
add
pop
push
sub
push
adc
jg
ds
and
add
xchg
mov
jecxz
call
push
add
out
mov
adc
xor
jno
arpl
loopne
pop
add
or
jp
adc
jl
pop
xchg
pop
xchg
in
jmp
rcll
pop
or
lock
push
mov
shrb
inc
xor
addl
pop
sub
jnp
gs
movsl
outsl
nop
imul
les
adc
arpl
pop
and
pop
nop
fwait
inc
repz
rol
sub
jmp
mov
out
sbb
mov
insl
push
mov
adc
int
imul
push
shlb
pop
les
sbb
stos
pop
lods
fisttps
daa
lcall
ljmp
fcompl
mov
sbbl
cmp
jmp
loopne
cmp
mov
rol
int3
insb
jmp
mov
inc
stc
in
and
cmpsb
xor
inc
sub
lcall
ret
or
orb
xchg
inc
lea
and
sbbb
mov
in
xchg
mov
adc
andb
int
push
xchg
and
fstpl
rcl
adc
sub
or
lock
xchg
mov
ss
imul
push
shlb
ss
loopne
loop
shlb
mov
xchg
into
dec
cmp
inc
dec
je
adc
lea
jp
iret
int3
dec
int3
cmpsb
push
inc
add
jae
cmp
cs
imul
xchg
cmp
push
jle
add
lret
test
lret
push
imul
notl
pusha
mov
add
lahf
sbb
ljmp
xchg
mov
xchg
inc
pop
mov
mov
pushf
addr16
es
movsl
test
sbb
in
jle
icebp
imul
addr16
iret
sub
inc
in
adc
shrl
fistpl
and
sub
sbb
shl
push
push
in
imul
mov
out
stos
mov
shrl
cmpsl
and
fcoml
xor
mov
sub
xchg
lds
jg
add
nop
sub
push
push
push
xorl
mov
inc
inc
dec
rcll
outsb
push
lea
shl
fs
call
out
xchg
xchg
xchg
repz
arpl
std
lret
sbb
add
xor
adc
or
popa
ds
sar
aas
sti
and
ret
outsl
jmp
or
xchg
andl
insb
push
clc
jns
push
or
add
fstl
mov
out
add
int
mov
mov
dec
mov
xor
or
addr16
mov
sbb
in
jecxz
mov
adc
sub
stc
and
xor
mov
push
and
shl
xchg
pop
jp
js
mov
cmp
mov
movsl
jle
cltd
popf
cwtl
sbbl
divb
mov
add
das
fstl
mov
xchg
adc
push
mov
xchg
adc
aas
add
xor
mov
jae
jle
adc
inc
out
dec
add
jmp
sahf
jnp
adc
mov
leave
jns
mov
je
mov
mov
and
pop
imul
or
iret
ds
mov
jne
cmpb
lret
xchg
js
mov
add
adc
push
jecxz
icebp
fcmovnb
jno
arpl
push
stc
xlat
mov
mov
cmp
dec
jge
cs
pusha
ja
push
xchg
xor
fs
sti
adc
mov
cmpsl
add
mov
imull
ljmp
fwait
dec
push
in
in
xlat
dec
sbb
es
sbb
sbb
mov
xchg
mov
cmp
dec
in
adc
xor
popf
in
dec
mov
loope
xlat
getsec
ss
test
scas
gs
mov
ljmp
and
fisubl
aam
insl
jae
stos
cmpsb
xor
add
arpl
lea
xchg
mov
xlat
scas
xor
push
jmp
jb
adc
filds
in
test
shll
test
dec
insl
jge
mov
xchg
dec
pop
cmp
icebp
cs
push
cmp
mov
and
sbb
xor
push
and
push
out
jl
sbb
mov
loop
dec
in
lcall
adc
sbb
scas
sbb
aam
ds
sbbb
jb
push
icebp
cwtl
jg
cs
sub
pusha
jge
lahf
cli
dec
cwtl
and
inc
mov
add
pop
add
jp
mov
cmp
inc
dec
outsb
add
or
addl
mov
sarl
hlt
dec
cmp
outsl
sbb
ret
pop
xor
pop
mov
push
insb
cmpsb
loope
sbb
sub
lea
insl
add
push
and
sbb
inc
add
out
lret
push
sbb
pop
or
pop
mov
out
xor
jmp
pop
je
scas
inc
outsb
leave
xchg
push
or
sub
stos
std
jb
and
lea
push
pop
add
pop
fs
inc
sub
cwtl
xchg
in
mov
mov
dec
pop
nop
add
jmp
add
mov
popa
jb
sbb
stc
jge,pn
push
push
push
mov
repz
xchg
cltd
inc
push
notb
jp
dec
test
iret
xchg
pop
xor
mov
sti
repz
sub
loope
cmp
mov
cmp
push
pop
pop
mov
insb
cli
adc
mov
sbb
stc
addr16
outsl
pop
jne
data16
imul
aam
sub
pop
cmp
adc
and
mov
mov
js
jnp
mov
addb
push
jnp
cld
sti
mov
mov
push
pop
cltd
les
mov
mov
and
mov
test
or
cmp
dec
fidivl
xor
xchg
fwait
in
roll
cmp
scas
push
jl
inc
adc
jbe
and
std
outsl
cld
push
mov
addr16
inc
xor
cmp
mov
cmp
push
ljmp
fwait
push
xchg
popf
lahf
jbe
jge
push
jne
mov
enter
imul
pop
lret
in
imul
jp
dec
jae
jb
shll
push
jp
jp
sub
ret
int
dec
cld
jne
dec
in
int
sahf
mov
mov
cli
aad
cmp
inc
shrb
push
hlt
imul
jecxz
lods
sub
cltd
pop
pop
ror
xor
out
xchg
adcl
mov
lcall
sbb
jbe
xchg
xor
cs
and
xor
in
xchg
data16
int3
lock
xchg
int
pop
jmp
dec
nop
mov
clc
aad
add
in
mov
loope
pop
pop
inc
push
out
pop
pop
stos
lret
xor
js
pop
notb
cmp
sbb
fsubrs
iret
hlt
xor
sub
or
loop
xor
xchg
jo
add
imul
mov
iret
pusha
jnp
rclb
xchg
scas
nop
adc
dec
mov
or
jne
jae,pt
sub
cmp
adc
imul
push
xchg
cmpsb
loop
ja
add
js
lea
inc
aam
fldt
es
icebp
cmp
fwait
outsb
mov
jp
xlat
xor
jae
and
insb
xchg
clc
outsl
sub
jns
in
fwait
cltd
shrl
cmc
imul
ss
jge
xor
stos
sti
icebp
js
push
or
xchg
pop
ffree
aas
mov
adc
callw
push
cmpsl
and
push
lods
pop
int
jae
in
jg
mov
cmp
xchg
add
decb
xor
or
xor
js
sti
enter
idiv
adc
cmp
pop
push
push
add
xor
inc
jne
pop
test
mov
inc
xchg
daa
fwait
adc
lds
push
out
push
stos
movsl
xor
mulb
sti
sub
pop
push
notb
lret
in
es
rclb
lahf
mov
mov
rcrb
jo
ja
iret
fisttps
mov
scas
cmc
or
dec
xor
jno
push
mov
mov
test
aad
jnp
fldt
inc
mov
fiaddl
adc
fldenv
neg
idivb
in
cmp
mov
cld
enter
cli
pop
or
or
pop
je
movsl
pop
movsl
mov
add
pop
aaa
test
push
sbb
leave
push
mov
xchg
stos
xchg
stc
jmp
les
xor
das
loopne
faddl
jmp
js
mov
add
jnp
je
dec
lea
gs
data16
loopne
out
pop
cwtl
idiv
jno
push
cmc
gs
cli
test
dec
mov
movsl
or
cmp
jmp
jle
dec
adc
sub
out
mov
push
mov
adc
test
imul
mov
mov
ret
xchg
pushf
fcomi
mul
add
push
fistpl
fdivrp
adc
adc
js
jne
mov
dec
test
push
leave
aam
xchg
push
and
in
mov
and
outsl
xchg
stos
out
lock
fwait
cs
and
lret
pop
mov
loope
cld
pop
or
mov
mov
mov
xor
fdivrs
out
in
push
push
lds
fsubrs
aam
fcomp
adc
js
mov
stc
sub
ja
sbb
add
insb
fwait
jp
cwtl
sbb
dec
sar
ret
xchg
outsl
shrb
test
xor
adc
adc
insb
jle
shrb
dec
in
popa
pushf
or
dec
fiadds
int3
loop,pn
ret
add
pop
test
cmp
mov
imul
push
daa
mov
clc
mov
jne
cmp
inc
xor
sahf
jns
mov
insb
test
cld
aas
add
cmp
jl
mov
aad
dec
fwait
gs
and
mov
mov
inc
cmp
sbb
scas
mov
sti
addr16
jnp
mov
insb
fs
xchg
imulb
pusha
subl
mov
mov
arpl
mov
push
mov
out
loopne
cli
jae
lret
sub
call
out
or
pop
jo
push
out
and
cmpsb
rolb
jle
fs
and
cmp
in
faddl
int
insb
js
shl
sahf
push
mov
rcll
xchg
lds
out
pop
mov
faddp
movl
in
scas
pop
jmp
dec
das
adc
xchg
orb
cmp
aas
movl
jnp
mov
xchg
ljmp
call
mov
in
out
add
sub
lock
shll
insl
jne
in
imul
push
mov
popf
shrl
jae
pop
and
or
dec
mov
bound
aas
stos
filds
cmc
movsb
pop
adc
test
pusha
cwtl
shlb
out
inc
lock
std
fsubs
shrb
loope
and
ret
mov
and
or
jp
jmp
push
mov
add
rcrl
or
push
mov
arpl
out
adc
jg
test
dec
sbb
lods
push
std
js
push
lods
add
inc
leave
push
int
xchg
out
ljmp
jg
push
xor
aaa
cs
add
adc
push
add
add
shr
fucomi
mov
mov
incl
fisubs
or
or
inc
loop
lret
inc
outsb
lds
js
aam
push
rcl
aam
dec
xor
orb
sahf
mov
inc
jl
xor
dec
and
std
xor
mov
jg
icebp
leave
int
cmp
and
jp
xchg
popa
nop
outsb
popf
hlt
pushf
mov
mov
sbb
push
xchg
daa
jnp
inc
arpl
xchg
ficompl
ficomps
insl
out
and
push
push
rclb
fstps
inc
scas
push
push
daa
iret
ret
jp
jo
leave
inc
push
jge
dec
pop
adc
pop
mov
xor
dec
jnp
jae
add
into
outsb
dec
negb
gs
sbb
ss
jecxz
outsb
lret
aam
xor
adc
xor
std
mov
jg
xchg
cwtl
xchg
mov
pop
jp
out
scas
dec
inc
mov
sahf
insl
lods
aas
pop
repz
cmp
push
repz
xor
scas
sub
xchg
mov
jbe
jo
mov
data16
fadds
fisttpll
pop
or
and
dec
pop
popa
sbb
subl
push
repnz
sbbl
mov
dec
push
scas
repz
and
mov
or
in
mov
fisubrl
add
inc
fs
repz
je
fmulp
lock
cmp
ss
jl
fs
ds
aas
xchg
icebp
sub
iret
sbb
mov
pop
sbb
mov
addr16
mov
enter
and
adc
push
js
call
cmc
inc
mov
data16
ja
daa
repnz
int
xor
in
adc
cmp
dec
mov
xor
test
push
out
add
movsb
sub
rcll
xchg
sarl
je
outsb
daa
push
imul
sarb
or
mov
lret
jbe
jbe
dec
mov
pushf
les
jg
xchg
scas
stos
adc
loope
ljmp
shll
mov
xor
imul
addr16
cld
jecxz
ja
ljmp
cmp
lret
sbb
scas
mov
lods
or
in
ficompl
into
loope
repz
and
add
frstor
or
nop
inc
pop
add
mov
xchg
jmp
adc
stos
push
sub
mov
mov
sahf
lock
in
movsl
ja
mov
ret
dec
sbb
rorb
sbb
and
fimuls
jl
in
push
cmp
sub
dec
add
cld
mov
and
lds
and
scas
flds
leave
xor
add
push
mov
sub
lods
and
stos
xor
stos
xor
lret
ror
outsb
inc
adc
jns
ja
cmp
dec
xchg
dec
mov
popa
and
or
xchg
outsl
loopne
nop
pop
imulb
sbb
shl
pop
push
cmp
shr
push
andb
pop
dec
dec
xor
rorl
fdivrs
jmp
jmp
insl
adc
mov
dec
out
or
sub
push
sarb
hlt
add
pop
dec
or
stos
es
std
cmp
pop
or
push
iret
ja
sub
pop
inc
frstor
jmp
or
add
loop
adc
sbb
pop
sarb
or
lock
adc
rolb
mov
push
mov
js
mulb
or
insb
out
and
cmpsl
leave
decb
xor
xchg
add
sub
xchg
stc
xor
or
jae
insl
or
xchg
dec
ret
push
and
mov
out
mov
add
ret
jnp
sub
xchg
out
add
aas
cmc
aam
jno
fsubrs
outsl
ret
clc
xchg
xor
xor
pop
cld
std
push
ret
pop
dec
sub
mov
stos
add
aam
sbb
rorb
incb
dec
xor
inc
sbb
adc
jbe
inc
xchg
ja
xor
xchg
int3
xor
jl
outsl
pop
xchg
scas
inc
push
out
inc
adc
aad
lock
sub
pop
adc
xchg
in
loopne
jbe
pop
loopne
sub
jmp
mov
in
mov
sbb
dec
xchg
mov
sbb
xor
jl
adc
mov
mov
test
and
xchg
int3
adc
mov
dec
push
sub
xor
and
test
scas
inc
pop
mov
fstpl
push
pop
xchg
add
sbbl
push
and
pop
das
jb
ret
xchg
andb
mov
inc
sub
fadds
or
sub
movsl
ja
add
inc
push
or
pop
ds
cmp
cmc
popf
add
js
mov
pop
iret
and
add
in
incb
adc
xchg
mov
out
out
pop
sub
cmp
jmp
das
inc
rorb
fcompl
orb
out
push
out
xor
mov
dec
or
mov
gs
or
ss
cmp
mov
rcr
and
stc
or
jb
je
lcall
mov
add
add
dec
rorb
or
mov
add
adc
jnp
mov
mov
jp
ja
add
dec
sub
outsb
jg
xor
iret
fcompl
js
repnz
mov
pop
fdivr
insl
out
lret
shrl
stos
mov
cmp
inc
adc
push
sub
pop
push
loopne
pop
lods
jecxz
jb
sub
adc
mov
adc
clc
std
in
sub
out
xchg
sbb
jmp
daa
xlat
in
jmp
arpl
adc
lret
sti
jnp
xor
push
sub
pusha
mov
out
ds
daa
mov
ss
icebp
loopne
pop
fs
cmp
in
test
enter
jl
lahf
and
adc
jmp
jmp
lea
sbb
pop
lcall
mov
mov
and
fists
inc
jge
mov
lret
fcoms
and
adc
mov
cld
dec
mov
int3
out
jb
pop
rcll
or
popf
lret
jnp
add
mov
stos
push
outsb
add
adc
movsb
cmp
jno
fimuls
repz
push
movaps
mov
mov
scas
pop
aad
push
mov
ficoms
dec
and
cmpb
mov
xchg
mov
lods
xor
les
jl
rolb
ds
push
mov
or
cmp
mov
push
mov
push
dec
rcll
aas
lds
jo
les
pop
sarb
dec
sahf
in
sbb
cmp
scas
imul
add
aaa
xchg
or
lds
inc
pop
jl
movsb
jmp
xchg
out
jl
xchg
bound
cmp
jbe
popa
xor
jns
jl
call
sub
nop
aad
jg
das
in
fcompl
shl
mov
mov
fs
xor
leave
daa
data16
dec
adc
pop
bound
and
fisubl
dec
sbb
in
add
adc
andb
int3
cmp
mov
ds
and
ss
cmc
lea
dec
mov
jnp
jnp
push
push
inc
add
stos
fldt
fdivs
std
mov
fists
loope
repz
pusha
iret
outsb
pop
cmp
ror
push
fmuls
std
adc
push
inc
mov
std
fimull
test
or
popa
cli
pop
push
xchg
insb
lods
sbb
clc
gs
mov
dec
sbb
data16
dec
test
insl
dec
movb
in
xor
sbb
and
sub
das
xchg
mov
jmp
sbb
jg
or
nop
xor
insl
pop
push
test
lea
or
dec
fisubrl
cmc
push
nop
loopne
test
xor
shrl
xchg
push
test
loope
sti
mov
add
stos
pop
mov
mov
ds
sub
push
out
push
fdiv
movsl
lea
std
mov
mov
push
jecxz
outsl
mov
test
sub
repnz
and
testl
div
push
jmp
cmp
in
adc
call
js
xchg
in
mov
lods
arpl
mov
dec
push
stc
or
add
loopne
adc
mov
cmpsb
pop
fsubrs
and
data16
sahf
xor
imul
sbb
mov
add
out
sbb
imul
orb
std
or
insl
loopne
out
jg
cli
lret
cmp
dec
jne
loope
sbb
decl
mov
mov
subb
xor
test
stos
sbb
shll
jg
cmp
mov
inc
filds
xchg
dec
out
jp
push
push
push
inc
add
cwtl
inc
mov
inc
test
lock
ja
mov
lret
inc
std
das
push
mov
xchg
shrl
aad
inc
xchg
fcoms
test
sub
dec
mov
aam
dec
pusha
dec
out
xor
sbb
push
test
pop
mov
cmp
push
divb
pop
dec
lds
dec
jne
push
cmpsb
ljmp
and
iret
shll
xor
iret
aas
fadds
iret
rcrl
add
ret
mov
fwait
add
mov
aaa
adc
leave
pop
idivb
loopne
lock
pop
mov
sbb
out
test
in
lds
and
lock
sbbb
xor
mov
pop
or
inc
cmc
icebp
sub
arpl
mov
push
add
cld
dec
out
jecxz
fbld
dec
xor
cmpsb
adc
cmp
das
rcll
jbe
mov
es
enter
sbb
insl
and
or
mov
xchg
adc
clc
mov
push
add
inc
pop
pop
mov
test
cmp
pop
scas
cmp
loopne
cltd
repnz
push
testb
adc
push
movsb
inc
push
repz
into
lea
shl
or
fsubrl
xor
xchg
xlat
or
rclb
add
lahf
xorl
mov
stc
loopne
sbb
xor
pop
dec
xor
addr16
jno
sahf
je
lods
out
dec
rep
mov
xchg
fcompl
out
rolb
and
and
xchg
jb
cld
or
mov
jns
arpl
mov
cmpsl
test
mov
lods
sbb
pop
in
inc
adc
stos
xchg
into
mov
lea
xor
xorb
adc
shlb
mov
xchg
ficompl
adc
mov
popa
xchg
es
adc
imul
and
xchg
and
and
push
int3
cmp
arpl
dec
ja
jge
fistpl
int3
mov
leave
iret
clc
xor
ret
and
bound
js
fwait
in
inc
dec
or
les
adc
mov
loopne
hlt
jecxz
cwtl
adc
pop
fincstp
jbe
sub
rcrb
cli
sbb
mov
out
fidivs
sahf
scas
dec
ds
test
pop
add
mov
cwtl
scas
test
mov
sbb
jge
pop
iret
mov
lods
jbe
mov
dec
ljmp
sti
nopl
push
mov
rcrl
sub
pop
scas
xchg
mov
arpl
cmp
push
sub
adc
dec
push
cs
dec
pop
into
mov
cwtl
data16
xor
fmull
insb
mov
call
mov
dec
jmp
test
push
repz
mov
push
cmp
mov
dec
dec
add
xchg
mov
sahf
addb
fwait
cmpb
inc
inc
icebp
in
jmp
test
add
ret
inc
ds
ret
mov
inc
divl
adc
int
ja
mov
dec
adc
jae
sub
xorb
jb
out
mov
sti
and
sub
ds
lds
addr16
test
mov
enter
or
or
add
fbld
movsl
int3
pop
and
into
inc
push
xchg
rclb
mov
into
xor
in
rcrl
out
push
cmpsl
stos
shlb
push
int
push
repz
insl
lret
xchg
xchg
fnstcw
cmp
ds
ss
push
sbb
fwait
cmp
fdivrl
xchg
pop
pop
jb
mov
jb
cld
cwtl
sbb
xchg
xlat
sbb
sbb
add
cwtl
rcrl
sbbb
ss
add
pop
cmp
push
fstl
or
imul
sub
hlt
ja
shr
inc
negl
addr16
xchg
add
movsl
inc
int
mov
test
fidivrl
fcmovu
mov
rcrb
add
mov
mov
jbe
or
adc
mov
push
cmp
js
gs
xorb
xchg
cwtl
and
mov
faddl
xor
ljmp
push
xchg
cli
movsl
sub
mov
sbb
imul
enter
rorb
push
ljmp
mov
xchg
mov
fnsave
or
xchg
mov
bound
stos
sub
repnz
movsb
cld
icebp
jno
sub
out
and
imul
jbe
xchg
stos
nopl
jmp
or
and
mov
cltd
jb
adc
pop
push
iret
push
jo
or
js
pop
ss
lods
add
clc
mov
xor
loop
imul
mov
jnp
fidivl
mov
mov
popa
mov
es
add
es
dec
mov
inc
cmp
push
inc
pop
and
adc
test
aaa
push
mov
ret
jg
mov
xor
ss
addr16
fcom
sub
push
mov
push
jmp
mov
push
cmp
mov
sub
std
add
jecxz
lds
lea
adc
into
push
leave
popf
and
data16
cli
frstor
and
mov
dec
mov
inc
xchg
adc
fmull
out
das
test
jo
and
push
ret
jl
imul
mov
push
shrl
push
add
xchg
jo
mov
mov
jb
clc
mov
sub
repz
push
rcrb
mov
push
in
or
jnp
fbld
xchg
sbb
push
faddl
not
lods
dec
pop
xor
cmp
ds
mov
mov
rorb
jge
push
adc
nop
jmp
mov
pop
fdivrs
dec
push
leave
add
xchg
ja
icebp
mov
inc
mov
mov
mov
cmp
jnp
cmp
ja
in
fiaddl
or
fisttpll
jl
xchg
inc
imul
mov
cmp
pop
outsl
and
sub
decb
jge
xor
mov
inc
jno
mov
std
or
lea
inc
sub
loopne
sbb
jge
push
push
mov
fcoms
and
and
mov
test
pushf
fwait
fwait
cmp
call
pop
cmp
enter
ds
sub
out
jns
pop
and
or
sahf
pop
xor
mov
test
or
jp,pt
mov
mov
sarl
sbbb
imul
sub
les
sub
cmp
movsb
testl
js
adc
aaa
ljmp
mov
test
std
in
aam
dec
pop
mov
push
xchg
push
mov
and
mov
pop
rcrl
fbstp
in
bound
push
sbb
stos
mov
lods
ficomps
mov
lock
fldenv
shlb
aam
aam
xor
mov
push
les
test
and
cmovle
inc
push
xor
test
je
sub
push
pop
push
xchg
xor
scas
dec
insb
or
scas
push
rdmsr
ja
sbb
push
stos
test
xlat
lcall
xorl
xchg
das
cltd
imul
push
xor
fs
loop
dec
ret
int
std
adc
mov
fnstsw
cs
shr
or
pop
jecxz
addr16
mov
data16
or
cmp
decb
iret
outsb
enter
cwtl
hlt
shl
cld
popf
xlat
repz
cmpsb
xor
inc
mov
push
shl
jae
outsl
pop
rorl
jbe
dec
sub
inc
inc
popf
adc
mov
pop
dec
mov
adc
test
inc
shlb
mov
sub
test
xlat
dec
push
xor
jmp
jbe
push
in
mov
rclb
sahf
pop
test
loope
movsl
in
scas
cmpb
nop
int
cs
je
dec
mov
cmc
es
sub
testb
sub
push
dec
push
ja
inc
in
test
popf
shlb
clc
aad
lods
js
dec
fs
decb
iret
xchg
ja
ficomps
jns
lock
je
inc
cwtl
ds
xlat
push
pop
scas
out
movsl
lock
and
mov
pop
pushf
inc
or
das
lea
pop
out
ljmp
add
int
fwait
ror
push
push
ret
pushf
cmp
mov
jo
mov
jmp
sbb
cvtps2pi
sti
daa
popf
xlat
jle
dec
mov
into
or
jl
add
sar
shrb
mov
mov
mov
pop
push
xchg
fadds
in
aaa
nop
unpcklps
pop
jo
sbb
cmp
mov
and
fisubrl
pop
xlat
je
sbb
push
sarl
push
mov
js
cwtl
sbb
mov
fwait
mov
xchg
and
or
loop
fs
lea
adc
decb
push
push
lret
mov
jns
sub
add
sbb
adc
xchg
jbe
negl
inc
rolb
loope
and
lret
push
iret
inc
mov
fsub
cmp
gs
ds
int
jae
imul
inc
in
movsl
sbb
dec
jmp
das
inc
or
cli
xor
or
test
xor
ror
movsb
add
cltd
add
setbe
lcall
sar
out
mov
mov
cmp
aam
mov
lods
cmp
fistps
shr
iret
mov
mov
or
cmp
sub
stos
sbb
mov
aad
inc
pop
and
in
mov
dec
jb
lret
inc
addl
push
mov
pop
insl
decb
orl
mov
les
inc
fnsave
sub
and
add
out
and
in
outsb
mov
stos
lock
cmpsl
ftst
adc
das
sub
outsb
mov
mov
std
mov
inc
sub
std
fildl
and
lock
jb
movsb
adc
cmp
cmpsl
xor
ljmp
pusha
jo
scas
ja
fisttpl
add
cmc
insl
and
push
std
jno
mov
rcrb
cmp
fistpll
enter
sahf
lods
ret
test
add
mov
insl
fsubrs
stos
popf
das
mov
out
jmp
or
in
mov
incb
cltd
nop
rcrb
cmc
xor
and
repz
aad
push
mov
ja
or
push
xorl
mov
fdivr
sub
or
in
mov
push
les
xor
fsub
or
daa
add
push
orb
push
mov
sbb
imul
stos
jl
jae
aaa
stos
call
add
outsb
scas
inc
popa
jno
call
push
sbb
and
stos
mov
mov
lea
cmp
test
jmp
inc
shl
js
adc
adc
js
nop
in
cmp
lods
pushf
in
push
adc
cld
test
sbb
sbb
roll
lcall
mov
cli
dec
sbb
mov
adc
or
inc
mov
xchg
mov
in
std
jbe
fcomps
ret
lods
xchg
mov
or
cmpsb
les
xor
sub
add
int
out
mov
call
mov
ljmp
mov
movsb
fwait
add
fs
cli
lret
cmp
mov
inc
ret
adc
cmp
xchg
push
pop
pop
mov
aam
inc
and
test
add
push
sub
movsl
test
icebp
nop
push
dec
cmp
loopne
lods
mov
and
dec
push
das
scas
xchg
js
mov
hlt
mov
jmp
xor
mov
pop
xlat
ja
lret
xchg
adc
loopne
jle
insl
add
xchg
lea
inc
repz
mov
push
cwtl
repz
dec
test
aam
movsb
insb
sub
mov
xlat
or
in
loopne
mov
jae
push
mov
adc
cmc
pusha
rcrl
sub
test
xchg
sbb
cmc
push
shl
push
call
test
xor
mov
jmp
dec
sbb
cs
mov
cs
add
cmp
push
loope
adc
sub
mov
cmp
or
stos
jae
insl
ss
out
call
xorb
cltd
aas
jmp
push
js
repnz
leave
xchg
mov
outsl
icebp
lret
sub
dec
xor
pop
cmpsl
insb
mov
mov
icebp
mov
jle
mov
xchg
jns
sarb
or
inc
notl
hlt
das
xchg
pop
lock
loopne
mov
daa
xor
enter
outsl
popf
fistpl
mov
outsl
insl
add
leave
clc
or
lahf
mov
shlb
test
push
jns
aam
sbb
int
test
xor
int
aaa
adc
loope
xchg
loopne
int
cli
ror
inc
cld
imul
lret
mov
mov
aas
jmp
aaa
imul
lea
jno
cmp
addl
and
icebp
shrl
inc
test
bound
out
pop
sbb
mov
sub
cli
xchg
insb
setb
cmpsb
mov
mov
pop
std
xchg
pop
out
jmp
repnz
adc
xor
sub
and
imul
or
dec
mov
dec
xor
mov
fadds
add
xchg
out
add
lea
dec
jmp
mov
lahf
int
mov
iret
sahf
popl
stos
cltd
lret
cs
out
cmpsb
mov
cmp
addb
in
outsb
js
pop
mov
ret
push
movsl
fs
int3
xchg
pop
adc
dec
xor
out
decb
int3
mov
packssdw
movsb
aad
adc
jl
rcll
test
pop
test
pop
lock
mov
inc
lea
dec
push
pop
test
pusha
test
shrb
mov
psllq
sub
inc
lock
out
mov
xor
sub
mov
adc
shlb
xchg
stc
mov
xor
jbe
xchg
into
cmpsl
adcl
insl
cmp
ljmp
divl
or
cmp
push
les
mov
pop
rcll
mov
call
and
rcrl
jl
push
mov
or
adc
pop
cwtl
push
push
fs
aad
sub
xchg
dec
push
mov
sub
lcall
push
pop
inc
sbb
dec
adc
push
xchg
push
jns
mov
dec
sub
and
push
mov
cltd
and
pop
negb
sbb
in
outsb
aaa
sbb
out
adc
inc
pop
xor
cmpsl
gs
scas
loop
les
or
insl
addr16
in
mov
push
rol
cmp
jne
mov
insb
cmp
scas
jge
rclb
add
and
lods
loop
push
cltd
int3
add
adc
dec
push
push
call
leave
movsb
out
and
or
or
stos
add
sahf
addr16
lock
inc
shlb
call
int3
sti
jae
or
adc
jp
add
push
or
imul
movsl
fists
arpl
xchg
xor
lcall
mov
sbb
sarb
mov
add
jl
sbb
out
push
cmp
in
mov
xlat
jnp
sbbl
mov
sub
roll
inc
mov
js
call
popa
pop
xor
cmp
adc
arpl
pop
push
xchg
scas
jae
push
push
and
mov
jmp
jb
inc
cs
cld
fldenv
push
jl
sub
jno
pusha
push
or
mov
sub
cli
xor
add
xor
xor
enter
xor
je
and
mov
loope
mov
rorl
and
xchg
repnz
fsubs
jne
fsub
repnz
lods
pop
mov
cwtl
cmpsl
sub
push
inc
adc
in
mov
addr16
popf
mov
int3
hlt
sti
icebp
loopne
out
push
pusha
clc
dec
or
jg
sub
adc
rep
fwait
pop
ret
and
and
out
in
js
sti
inc
and
enter
fcompl
pop
inc
ret
scas
lcall
nop
sti
ljmp
mov
lret
adc
outsb
pop
icebp
adc
orb
add
pop
ficoml
stc
xor
aaa
sub
arpl
push
xchg
rorb
mov
sub
idiv
xor
jmp
ret
test
jne
test
push
push
bound
mov
mov
fadd
enter
clc
inc
lds
mov
pushf
inc
jp
xor
lret
sbb
adc
stc
mov
mov
stos
imull
insb
movsl
dec
xor
push
push
jae
mov
andb
mov
hlt
xchg
inc
mov
clc
out
push
sub
dec
push
mov
lods
sub
mov
sub
inc
pop
ja
clc
cmp
stos
adcb
jbe
mov
decb
inc
jmp
clc
cld
popa
sbb
les
and
sbb
cmp
sbb
add
sub
add
and
pusha
outsb
jnp
inc
mov
stos
outsl
jp
sbb
mov
sbb
inc
adc
sahf
in
cld
leavew
push
mov
aam
hlt
cmp
lods
das
int
call
mov
jp
fisubs
push
jns
adc
cmp
pop
pop
and
cmp
int3
jns
cld
aas
or
xor
ret
in
test
or
clc
pop
stos
test
in
je
mov
je
add
loopne
out
sub
xor
sub
inc
lods
cmp
sbb
xchg
push
jle
rcr
mov
push
cmp
pop
sbb
adc
pop
xor
mul
rol
push
inc
pop
int
xor
mov
lahf
out
sbb
push
pop
bound
pop
dec
mov
sbb
in
sub
mov
arpl
int3
sti
popf
jl
xchg
add
hlt
mov
dec
push
adc
cmp
add
fcmovu
icebp
fcmovnb
or
fisubl
xor
aaa
jbe
movsl
sti
jae
test
xchg
xchg
js
pop
and
and
push
stos
pushf
cltd
sbb
jb
stc
lcall
incl
xchg
jno
aam
int3
in
sub
adc
cmp
scas
mov
mov
push
daa
dec
push
jp
jb
sbb
cmp
and
subb
repz
push
dec
xchg
sub
mov
fbld
test
sahf
loopne
xchg
subl
sub
add
out
mov
push
xchg
push
sbb
icebp
mov
push
xchg
jl
fistps
push
or
aad
and
jno
add
test
jmp
or
sub
mov
mov
xlat
ja
aam
pop
jecxz
ret
int
push
dec
cmpsb
add
adc
xchg
flds
push
push
mov
dec
and
xchg
and
xor
lcall
xor
push
jno
adc
scas
test
jl
lret
xor
mov
mov
and
test
pop
nop
xor
test
stos
aas
jp
test
ds
cmp
xchg
icebp
imul
xor
insl
shl
and
rcl
jo
sub
sbb
adc
adc
and
fstl
loopne
int3
sub
enter
out
shlb
fwait
rorb
pop
jb
push
fwait
imul
pushf
ret
stos
sub
add
xor
aam
mov
lret
pop
xorl
popa
xchg
shr
xchg
aad
leave
int
fwait
repz
adc
arpl
bound
sbb
sbb
ds
jg
adc
push
mov
pop
decl
mov
sbb
add
push
ljmp
mov
pop
lret
lret
jecxz
lods
test
pop
jp
mov
movsb
in
addl
pop
jno
sub
jp
mov
mov
sub
rol
or
daa
xchg
mov
or
push
cmp
repz
daa
loop
std
and
xchg
mov
fs
jle
arpl
mov
pop
or
std
push
adc
outsl
push
nopl
gs
in
jo
nop
mov
adc
jb
mov
mov
scas
sub
icebp
ja
frstor
inc
mov
cwtl
testl
call
cmp
and
xchg
sub
loopne
mov
rcll
loopne
inc
pop
rcrl
dec
push
mov
mov
sbb
jo
mov
dec
imul
jne
mov
mov
and
pop
pop
imul
js
sub
mov
icebp
jp
movsb
xchg
sbb
fs
aam
mov
push
sub
jnp
push
fwait
cmpsl
add
js
inc
xor
sbb
je,pn
test
or
mov
out
out
jmp
out
xchg
cli
sarl
aad
cs
push
jno
jl
les
xchg
push
rcrl
xchg
outsl
pop
je
push
xor
xor
scas
pop
shlb
ficoml
pop
pushf
les
rcll
sbb
cwtl
jmp
aad
mov
mov
pop
decb
sub
insl
shlb
pusha
das
pop
lea
sbb
ficoml
in
lock
mov
xchg
ret
aaa
loope
popf
mov
test
or
xchg
mov
dec
leave
imul
sub
rcll
mov
sbb
xchg
cmpb
call
pop
rolb
stos
insb
lock
mov
pusha
or
cld
addl
push
shll
jne
add
js
out
sbb
push
test
in
push
dec
pop
setg
fistpl
int
or
hlt
sarl
inc
mov
out
rolb
lret
dec
fs
jp
jg
jg
les
mov
cmp
add
cmp
fwait
jp
fidivrs
mov
sub
adcb
pop
cmpsb
lods
imul
pop
or
cld
and
in
dec
push
dec
cs
or
xlat
mov
mov
js
test
inc
lods
xchg
or
in
daa
popl
adc
cld
das
jnp
jmp
sti
aad
dec
hlt
dec
mov
xlat
xchg
mov
cmp
mov
in
mov
mov
xor
movd
mov
mov
and
cmp
or
in
outsl
hlt
sub
xor
pop
aam
sub
adc
pop
rolb
fwait
mov
pushf
xchg
push
xor
push
and
add
int3
sti
mov
roll
jmp
imul
push
rclb
addb
stos
xchg
cmpsb
ljmp
push
mov
out
add
mov
inc
pop
adc
in
jl
fildl
xorb
das
imul
fisttpll
push
adcb
out
push
and
pusha
scas
dec
xchg
cmp
sbb
mov
and
out
mov
push
push
and
inc
cmp
pop
out
rcrl
mov
pusha
push
xchg
aam
push
stos
xchg
mov
mov
fs
mov
ffreep
xor
dec
int
mov
inc
addr16
stos
mov
int3
les
insb
mov
mov
pop
inc
out
sbb
mov
int3
cmp
in
mov
jo
adc
pop
jle
jle
insb
cli
dec
arpl
leave
out
out
and
mov
dec
aam
adc
pop
aaa
adc
pop
loop
or
scas
sbb
lods
pusha
dec
lods
fiaddl
jns
adc
out
cld
add
inc
ljmp
cli
or
pop
jnp
and
or
rorb
stc
xchg
cmp
mov
push
mov
call
das
insb
pushf
repz
xchg
or
add
push
mov
mov
xor
mov
and
push
pop
call
cmpsl
jnp
push
les
mov
mov
sbb
cmp
mov
xor
shl
stos
pop
shlb
push
movsl
fiadds
lret
out
xor
test
movsl
fs
loope
push
or
mov
int
mov
xchg
les
dec
mov
insl
call
push
sub
xchg
fistl
shlb
les
loop
cmp
pop
xor
rcl
int3
stos
cs
idivl
jnp
mov
inc
mov
lahf
or
inc
cwtl
or
lahf
mov
and
mov
mov
dec
test
xor
cmp
or
push
loopne
adc
dec
inc
repnz
sub
push
imul
and
lds
cmp
andb
lcall
and
cmp
mov
inc
shlb
leave
nop
mov
push
dec
loope
cmp
test
rorb
xor
das
push
fucomi
add
sbb
pop
pusha
or
push
enter
leave
cmp
in
mov
jb
mov
in
xor
out
pop
mov
xor
ss
mov
xchg
lcall
mov
das
jp
call
cld
imul
mov
ljmp
jae
dec
sbb
addr16
mov
lcall
pop
imul
fwait
jne
pop
out
add
cmp
test
inc
cltd
in
mov
mov
ret
jl
fwait
hlt
lret
pop
gs
dec
xor
sbb
daa
dec
dec
je
sub
mov
sbb
sti
int3
pop
mov
subl
push
aad
aam
cmp
aas
in
pop
dec
subb
and
cld
test
mov
inc
xlat
dec
sub
ret
stos
cld
dec
xor
dec
div
add
or
fldenv
mov
lret
cmp
pop
cmp
mov
mov
xlat
push
shrd
pop
cmp
and
add
and
es
jae
adcb
bound
cmp
pop
cmc
inc
and
fstl
xor
add
mov
mov
adc
xchg
jns
loopne
outsl
or
mov
es
inc
out
fstpl
sub
aas
test
fmulp
and
lret
repnz
stos
jmp
dec
stos
clc
imull
loopne
add
or
jl
sti
jns
mov
iret
pop
xlat
sub
mov
dec
or
leave
mov
push
ret
mov
fidivs
xchg
jo
xor
jg
xchg
aaa
xchg
mov
movsl
dec
std
or
imul
icebp
sti
mov
pop
test
sti
xor
cmc
addr16
lret
lahf
xchg
push
fsubr
push
pop
xchg
std
inc
popa
lcall
mov
cmpsl
aaa
or
mov
fwait
in
test
loope
ficomps
pushf
mov
sbb
mov
cmp
sub
jge
add
mov
cmp
dec
adc
cmpsb
loope
sbb
roll
push
ret
aam
lahf
mov
repnz
sub
sub
adc
mov
jns
sahf
fcmovu
or
add
lds
mov
lods
jmp
pop
adc
setg
mov
add
mov
jns
loop
jns
int
push
andl
pop
mov
lcall
push
xor
and
push
pop
sbb
lret
sbb
out
mov
subl
fwait
mov
mov
aad
pushf
xchg
xchg
adc
and
roll
xchg
test
dec
mov
lret
jl
mov
mov
add
adc
fs
mov
xor
lock
jns
xchg
popa
push
ret
and
mov
add
mov
pop
push
or
jg
cmpsb
pop
push
xor
pop
xchg
faddl
xchg
jmp
and
cmp
xor
sub
lock
mov
mov
out
xlat
cmp
movb
xor
cld
inc
les
sbb
cmp
pop
mov
cmp
addr16
sub
gs
sub
xor
adc
push
dec
fnsave
test
fisubs
test
loop
scas
push
xchg
ret
sbb
das
rcr
cmp
rcll
scas
inc
loope
or
cmp
bound
inc
or
and
jno
addb
push
mov
dec
mov
sbb
and
outsl
stc
or
push
cmp
test
je
xchg
and
xor
mov
mov
jle
inc
jo,pn
int
in
int
jno
int3
cmp
in
and
pop
orb
dec
aad
pop
xor
imul
xchg
mov
jg
imul
push
mov
mov
mov
pop
aam
hlt
sbb
fistpl
outsb
divl
out
and
outsb
lods
push
insl
push
lret
std
xlat
xor
pop
imul
mull
fmuls
adc
fadds
in
nop
movsb
iret
das
cmp
xchg
lods
mov
mov
or
pminsw
pop
in
in
sbb
imul
sub
jnp
mov
out
into
sbb
or
addr16
jmp
fsubp
aaa
fisubrs
cmc
mov
imul
sbb
sub
loope
fldt
push
aas
ja
or
sub
pushf
aam
mov
pop
das
mov
lock
aaa
dec
imul
iret
lcall
cwtl
sahf
popa
inc
xor
inc
cltd
inc
pop
lock
outsb
iret
sbb
lcall
xorb
mov
or
inc
shlb
cwtl
add
mov
mov
and
mov
dec
mov
mov
ljmp
inc
loop
sbb
cld
dec
lret
lods
mov
mov
gs
push
mov
add
mov
pushl
adc
pop
test
fcompl
xchg
out
stos
jge
xchg
lods
and
test
daa
xchg
pop
mov
es
mov
sbb
adc
mov
lods
adc
push
jns
inc
push
jg
sbb
stos
sub
cmp
sub
std
jle
out
adc
jno
jo
jns
dec
out
push
xor
pop
loop
mov
imulb
jne
in
sub
pop
shrd
ds
xchg
ficomps
xor
into
jp
loop
in
ljmp
call
loope
in
popf
cmc
adc
scas
inc
stc
ja
pop
test
mov
mov
inc
out
sbb
scas
adc
fisttpll
xor
hlt
out
outsb
jbe
roll
mov
add
adcl
mov
insl
movsl
fidivrl
int3
cld
imul
sub
dec
dec
out
out
mov
popa
mov
sbb
cs
lods
pop
dec
sbb
jbe
pop
add
ss
sbb
repz
loopne
sbb
lret
mov
cmp
ljmp
nop
fs
notb
cmp
mov
call
add
cltd
mov
sbb
or
adc
or
and
lea
cmp
or
xor
sbb
shlb
iret
sar
jecxz
mov
lret
sbbl
xlat
aad
jb
bnd
and
js
sahf
lcall
fsubrs
call
cmp
shlb
add
outsl
mov
int3
xor
sub
pop
stc
mov
inc
repz
add
test
ficompl
mov
push
leave
xchg
mov
cld
xchg
in
clc
sbb
mov
sub
ja
lret
fs
ficoml
testb
ret
push
ljmp
mov
cmp
outsl
scas
insl
outsl
mov
xor
push
loope
lret
sahf
mov
add
and
iret
xchg
inc
mov
jg
jno
xor
std
dec
aaa
mov
rclb
jo
div
jl,pn
rcr
cmpsl
sub
inc
or
pop
sahf
loopne
mov
into
push
cmp
insl
mov
cltd
lcall
pop
shlb
or
jmp
jnp
icebp
pop
push
ret
mov
adc
daa
mov
pop
sbb
add
ror
mov
sahf
imul
inc
fisubrl
mov
pop
mov
testb
imul
repnz
adc
cmc
popf
fisttpll
mov
fidivs
cs
shll
and
adc
mov
cmp
inc
movsl
std
movsl
sub
jg
lret
aaa
into
inc
adc
ja
gs
mov
pop
inc
pop
mov
ret
mov
sbb
lods
cmp
or
pop
std
arpl
std
divb
jg
test
movsl
sub
dec
xchg
mov
andb
lsl
xchg
data16
jl
push
shlb
push
jo
mov
into
call
xlat
outsl
push
das
lock
loop
sbb
push
outsb
sbb
lds
push
popa
pop
adc
or
leave
ret
mov
cmp
mov
std
push
fisubrl
mov
or
mov
test
ret
sub
mull
mov
jno
ja
xchg
das
cmp
adc
scas
fwait
pop
push
pop
outsb
pop
call
roll
add
int3
cmc
ds
in
and
sbb
out
jp
fildll
sub
adc
push
xor
jge
jo
stos
push
iret
inc
xchg
jp
loope
sbb
inc
loope
rolb
lods
sti
movsl
dec
out
lret
fiadds
lret
mov
push
icebp
and
fldl
inc
sub
dec
inc
pusha
xor
mov
out
faddl
push
xchg
dec
repnz
sbb
cltd
rorb
mov
or
fistpl
je
and
xchg
iret
cld
andl
es
pop
push
push
push
sbb
jo
mov
fsubr
inc
movaps
out
push
ds
or
push
cmp
dec
dec
or
pushf
jb
sub
cmp
lods
mov
les
mov
jb
dec
mov
int3
pop
lret
fwait
and
pop
xchg
outsb
ja
inc
fwait
fs
fwait
xor
add
mov
test
leave
and
ja
cmp
inc
pushf
ja
xor
push
lahf
fnstsw
repz
test
xchg
mov
xchg
jns
ret
pop
aam
or
xchg
mov
das
push
sbb
pushf
movl
mov
ftst
push
fistps
outsl
je
scas
sub
icebp
orb
cmp
jno
push
popa
call
mov
dec
imul
or
sbb
push
sbb
rol
sub
push
push
xor
adc
clc
mov
fidivl
in
mov
js
cmp
sbbl
gs
in
and
add
stc
or
mov
and
and
scas
and
push
inc
pop
sbb
cs
xchg
cmp
jmp
jge
or
sbb
sti
rol
add
adc
sub
push
cmp
mov
lods
outsb
xchg
pop
jno
lods
xchg
add
idiv
mov
jo
rcr
sbb
mov
jbe
daa
mov
movsl
shr
mov
nop
mov
and
xor
scas
add
aaa
inc
into
cmp
push
mov
xchg
in
add
in
insb
daa
adc
xchg
lods
mov
gs
inc
lds
jle
es
sbb
mov
sbb
jne
push
dec
sub
xchg
cli
add
and
inc
and
lcall
lods
int
xor
xchg
cwtl
mov
add
mov
andl
xchg
xor
inc
movsl
neg
mov
push
mov
jno
dec
adc
or
pop
in
cmp
mov
insl
adc
jae
jbe
xchg
loop
add
xor
xchg
sub
clc
jno
or
cwtl
sub
sub
cmp
pop
push
jae
xor
mov
daa
xchg
inc
nop
sbb
outsl
add
push
ja
lahf
push
fdivrl
or
jecxz
loope
ja
or
dec
je
cltd
leave
adc
push
lds
xor
xor
pop
fnsave
or
leave
mov
xor
inc
int3
lahf
add
int3
adc
fildl
rclb
cmp
aam
sub
leave
dec
dec
push
stos
xor
sti
sub
jns
mov
cmp
or
jle
jns
lahf
cld
sbb
add
call
leave
stos
dec
ffree
das
daa
xchg
inc
cmpsl
mov
pop
cmp
shl
testb
sub
push
nop
test
and
jge
inc
xchg
cmpsl
add
xor
data16
repnz
loope,pn
push
fwait
mov
mov
fdivl
cmp
imul
lods
mov
cwtl
in
sbb
movl
adcb
pop
fs
movsb
test
xchg
int3
in
hlt
mov
shr
push
mov
and
sahf
mov
mov
mov
int
jbe
sub
adc
jge
adc
mov
add
inc
sbb
mov
jg
xchg
shrd
sbb
shll
jne
daa
bound
adc
repnz
in
lcall
mov
push
sbb
sbb
in
pop
pusha
mov
mov
inc
xchg
xchg
adc
sbbl
enter
cmpsb
mov
addb
std
push
push
cmp
sub
fiadds
fdiv
dec
push
or
sub
mov
cmc
sub
adc
mov
pop
or
dec
nop
mov
fistpl
fninit
lods
push
fwait
nop
shlb
out
popa
or
fs
decb
xchg
loop
push
ss
adc
outsb
xchg
lea
je
xchg
mov
mov
sbb
aad
divl
ds
mov
loopne
sahf
jb
roll
cs
mov
aaa
pop
jno
dec
jo
sub
inc
icebp
cmp
int3
add
lahf
mov
sbb
dec
sub
test
int3
ljmp
push
nop
sbb
mov
push
mov
xor
jno
pop
cmpl
insl
aaa
sbb
dec
jg
out
mov
jb
cmc
mov
cli
fdivr
add
dec
dec
push
in
and
sbb
adc
test
mov
xchg
dec
pop
rolb
mov
lret
lret
arpl
stc
xchg
xlat
lock
je
xchg
cmp
repnz
adc
mov
into
inc
pushw
aad
add
pop
fists
adc
lret
pop
add
and
loope
dec
pop
movsl
xchg
adc
mov
mov
sub
pop
repnz
std
sbb
shr
ja
fisubl
push
mov
fld
jne
cmp
jne
or
cmc
inc
stos
dec
xchg
cmpsb
js
aas
push
rcrl
sub
adc
out
jl
sub
bswap
mov
lods
in
sub
xor
fnsave
outsb
scas
repnz
outsl
inc
nop
cli
mov
and
mov
loop
popf
stos
jbe
cmc
icebp
dec
in
mov
inc
mov
inc
add
nop
sahf
sbb
ja
ret
dec
push
lds
or
xor
xchg
sbb
in
lock
push
sub
dec
sub
movsb
cmp
sti
addr16
aad
icebp
jno
cld
fwait
or
inc
pop
es
cmp
stc
lretw
arpl
test
leave
fadds
xchg
push
cmp
xor
jne
movsl
dec
xor
mov
mov
aad
xor
adc
imul
adc
fcoml
nopl
or
push
fidivrs
mov
or
scas
xchg
into
ret
sub
iret
rcll
mov
hlt
ds
popf
cmpsl
hlt
xchg
mov
popf
je
or
push
cmp
cld
sub
lods
lret
jns
addl
push
inc
push
hlt
cmp
pop
cld
shrl
pop
cmp
imul
orb
mov
outsb
daa
inc
or
insb
push
sbbb
imul
incb
repz
aam
lods
mov
mov
gs
shrb
mov
test
lahf
jle
adc
hlt
cmp
dec
push
pop
and
aam
or
loop
fwait
sbb
jle
scas
mov
add
and
xchg
sbb
add
or
mov
std
push
test
test
fsubr
fidivrs
and
sub
mov
sub
jmp
xchg
cwtl
fidivs
pop
ret
fisttpl
or
sub
fdivrl
call
or
int3
lods
icebp
pushf
inc
adc
lods
loop
jle
jno
xor
mov
adc
popa
sbb
mov
sbb
unpckhps
icebp
xor
mov
fpatan
jl
xchg
lret
mov
inc
and
pop
jmp
adc
das
mov
out
lods
xor
sbb
rorb
cmp
int3
fdivrl
jo
dec
fs
mov
or
stos
push
ljmp
mov
and
jl
xor
inc
orb
or
loopne
sub
pop
cmp
sub
shrb
sbb
loop
jno
daa
arpl
add
sar
pusha
adcl
fmuls
dec
arpl
pop
jbe
inc
jo
inc
push
inc
xchg
sub
push
ffreep
loope
sbb
fstpt
jecxz
repz
lock
or
loope
shlb
test
out
lds
es
mov
into
mov
filds
push
loop
jmp
sti
fs
bound
xor
add
mov
nop
das
cmc
dec
fidivrs
sbb
adc
add
mov
int
mov
icebp
fistpll
xor
ljmp
add
sub
jmp
xorl
sub
cmp
cmp
jae
or
pushf
mov
sbb
fisubrl
inc
add
into
adc
mov
mov
out
insl
test
leave
push
jae
add
lds
push
mov
cli
test
mov
mov
push
jg
sbb
test
xchg
push
test
dec
jl
pop
mov
sub
push
add
mov
jne
xor
sub
sbb
xor
jle
leave
pop
xchg
ljmp
jle
repnz
in
cmpsb
xor
std
jo
addl
pop
notl
add
sbb
adcl
into
mov
hlt
test
dec
call
test
pop
or
mov
dec
cli
in
jne
xor
xchg
cmp
sub
fsub
mov
sub
dec
ss
xor
mov
inc
and
divl
xchg
add
int3
inc
movsl
mov
adc
adcb
push
ljmp
in
popf
rorb
lret
or
push
repnz
int3
cmp
outsl
adc
hlt
int
inc
outsl
jae
sub
inc
cwtl
cli
push
pushf
pop
mov
cmpsl
shlb
xor
add
mov
xchg
inc
lahf
fnsave
nop
lea
or
and
sub
inc
xor
jo
sti
xor
addr16
pop
push
mov
mov
out
fstpl
lret
pushf
jge
and
leave
imul
or
out
stc
xor
leave
ljmp
aaa
or
add
or
cmp
roll
mov
icebp
test
xor
cmp
lret
sub
push
sbb
pop
pushf
jg
push
mov
adc
out
mov
in
sbb
into
je
and
adc
and
jbe
stos
cmc
out
push
aaa
sub
test
pop
mov
jb
stos
lahf
add
stc
incb
in
sub
sbb
clc
cmpsl
sub
and
cmp
sub
sti
jle
cmp
dec
lods
ret
cmp
ss
fcomps
cmp
add
iret
lret
xlat
xchg
mov
sub
cmpsb
cld
nop
rorb
ret
int3
hlt
shrl
mov
negl
movsl
mov
dec
push
in
dec
sbb
sub
cmp
push
loop
and
sbb
sub
fucom
xchg
fcomip
or
sub
and
pop
mov
push
xchg
scas
mov
or
sbb
cmp
jno
cmp
xor
adc
jecxz
and
hlt
aam
dec
aaa
sub
adcl
std
test
pop
inc
jns
add
jnp
xchg
cmp
mov
dec
dec
mov
movsb
mov
xchg
and
mov
mov
ja
ds
mov
outsl
mov
pushf
mov
inc
mov
pop
mov
fmulp
inc
scas
mov
lahf
xor
lret
pop
lret
pop
push
mov
hlt
cmp
mov
cmpsb
lahf
add
ret
xchg
fcompl
and
negl
or
push
daa
clc
push
ss
add
mov
jb
or
scas
jae
in
out
mov
popa
jo
jne
subl
adc
add
adc
and
call
rcll
mov
push
clc
push
dec
mov
inc
or
adc
mov
shrl
movsb
jno
and
cmp
in
loop
cmc
mov
jl
mov
loope
sbb
pop
mov
addb
cltd
js
jecxz
fnstsw
add
or
call
xor
out
mov
push
pop
cmp
xor
jmp
in
push
adc
lcall
mov
psubq
cmp
adc
lds
neg
jbe
mov
dec
ss
dec
jno
orl
icebp
test
pushl
jno
nop
gs
outsb
dec
mov
es
inc
mov
dec
enter
inc
movsl
adc
in
fwait
imul
mov
mov
push
sbb
add
push
inc
cmp
xlat
and
aam
cmp
jb
imul
dec
xlat
js
and
std
adc
inc
xchg
movb
push
sub
add
out
sbb
cmc
add
shlb
std
xchg
int3
push
fsts
xchg
jo
mov
pop
aam
push
xor
aaa
sub
xchg
loope
fsubs
outsb
adc
pop
jl
inc
push
sbb
into
pop
adc
mov
sahf
rclb
fcoms
xor
push
rcr
xor
loop
mov
and
lods
adc
jmp
xor
popf
sbb
xchg
test
mov
or
das
movsb
icebp
mov
roll
gs
out
cld
or
or
mov
push
shrl
pusha
xor
mov
jae
les
nop
push
subb
ljmp
cmc
shrl
test
div
in
adc
xchg
xor
or
and
jae
decb
pushl
xchg
sub
adc
in
pop
sbb
movsl
jno
mov
rcll
mov
add
inc
pop
jnp
dec
out
mov
dec
and
aam
inc
ret
and
push
or
pop
xchg
add
mov
lahf
testl
xchg
sbb
fsts
jge
int
push
adc
leave
bound
je
add
ljmp
test
movl
enter
xlat
xchg
test
leave
or
fbstp
mov
hlt
clc
gs
les
psubq
insl
xchg
fs
jo
or
sahf
rcl
fnsave
jno
ss
lcall
push
loope
ror
push
dec
or
rcrl
pop
add
imul
dec
dec
out
adc
adc
pop
adc
mov
addb
in
subb
fistpll
test
jg
mov
gs
bswap
mov
lods
outsb
mov
xchg
jle
cmp
xlat
dec
ds
push
push
ljmp
xchg
sbb
jg
push
pop
je
mov
sbb
mov
or
mov
clc
loope
mov
pop
pop
mov
and
stc
or
addr16
lock
aad
in
jle
add
rolb
lret
stc
and
imul
inc
iret
testl
pop
ret
test
cli
shlb
mov
sbb
pusha
rcll
scas
mov
outsl
cmp
xchg
das
iret
cmc
jmp
jecxz
es
ret
je
gs
repnz
stos
push
and
aas
mov
cld
and
mov
add
int3
sti
stc
orl
cmp
mov
xchg
and
cmp
or
push
xchg
adc
sbb
fbld
pop
xchg
xor
push
dec
je
xor
mov
mov
lea
lahf
cmp
insl
cld
leave
icebp
scas
and
stos
cli
and
subl
add
mov
sbb
stc
mov
dec
dec
sub
push
push
or
test
iret
aas
pop
fistpll
cli
push
xor
dec
inc
repnz
xchg
es
jnp
cld
cmp
mov
jle
inc
pop
jmp
pop
and
fsubl
call
or
shlb
jno
subl
push
std
stos
ret
cmp
mov
cmpsl
adc
mov
shlb
cmpsb
mov
rolb
push
jmp
xchg
fistpl
repz
into
lcall
orl
pop
fwait
or
mov
pop
add
adc
stos
inc
sti
pop
aam
dec
sti
out
inc
loop
xchg
pop
incl
lea
popf
ds
sub
xor
sbb
push
ja
xchg
lahf
jo
or
pop
pop
je
mov
imul
out
fimuls
in
mov
fldcw
inc
lock
push
cmc
and
das
xor
sbb
icebp
sub
mov
daa
mov
cwtl
mov
sbb
sub
arpl
aas
out
sub
das
lds
repz
dec
mov
out
repz
ss
inc
lods
int
jne
out
adc
mov
scas
repnz
mov
stos
fucomi
sub
ficoml
pop
inc
or
pushf
cmp
ss
sub
lahf
mov
and
xchg
fldl
dec
ss
xchg
popa
push
mov
xchg
xchg
fcomip
lea
mov
lahf
sti
pop
mov
or
push
xor
lds
arpl
lods
mov
test
ljmp
jns
scas
mov
imul
adc
cmp
sub
inc
pop
test
ja
fwait
adc
lods
lcall
adc
mov
xor
inc
arpl
cli
sub
or
or
and
sarl
lahf
jecxz
mov
add
fbstp
mov
cmp
xor
jo
fidivrl
sbb
sbb
adc
push
fisttpl
mov
inc
sub
out
push
adc
xor
rclb
out
dec
dec
mov
push
out
and
inc
dec
pop
ljmp
pop
mov
mov
mov
push
popa
out
sbb
out
sub
mov
lea
fchs
mov
clc
pop
xchg
call
jno
sar
test
push
xor
dec
cmp
mov
and
add
push
loop
add
push
inc
xchg
sahf
cmp
dec
jp
or
mov
or
dec
mov
jo
pop
pop
or
pop
push
in
pusha
out
push
cmp
icebp
adc
mov
ret
xor
cmp
mov
outsl
cmpl
or
inc
cmp
mov
mov
leave
and
xchg
dec
cli
push
ds
fsubs
pop
mov
add
and
aaa
inc
pop
ret
and
push
pop
stos
hlt
sub
mov
push
push
xor
movsb
cld
cltd
and
dec
xor
int
arpl
push
nop
out
and
push
jne
jmp
cltd
insb
jnp
lods
lods
push
movsb
mov
iret
cld
bound
push
push
lds
popf
sbb
xchg
jl
and
push
add
inc
mull
dec
lock
ljmp
iret
mov
stc
mov
mov
pop
notl
das
ret
mov
sbb
push
js
dec
fistpll
inc
ja
sbb
sti
test
and
xor
and
insl
call
mov
rcl
lcall
cmpsl
and
jmp
idiv
or
in
mov
fstpl
out
les
xchg
push
in
mov
arpl
sub
add
sub
pop
dec
gs
xchg
mov
sbb
xchg
sub
jmp
aam
push
stc
gs
push
pop
dec
stos
movsb
fyl2xp1
fstl
ja
subl
scas
mov
mov
aad
inc
push
ds
xor
and
cltd
les
movsl
int
dec
cmp
mov
xor
and
out
mov
sub
sub
jmp
test
stos
xchg
or
ljmp
insl
ror
and
xorl
in
sub
fildl
and
xchg
pop
shlb
ficoml
in
sub
aam
mov
inc
push
jb
xchg
push
jne
int3
pop
fidivrs
jne
xchg
or
or
orl
sti
lret
inc
cs
ds
cltd
addr16
gs
push
and
sbb
movsl
jg
cltd
push
pop
in
inc
pop
jo
pushf
ret
xchg
sbb
xchg
pop
les
and
or
out
mull
test
pop
add
nop
cltd
fwait
jmp
sbb
cmp
leave
leave
add
int3
lods
jge
int3
test
adc
xor
xchg
or
popf
fsubr
xchg
popa
clc
stc
mov
fs
shlb
or
push
or
jnp
xchg
sbb
sub
mov
and
jmp
jbe
imul
jp
add
sbb
gs
push
push
xor
mov
mov
jbe
mov
lahf
cli
ds
sbb
inc
mov
xlat
mov
cltd
popf
dec
sbb
jne
ds
dec
mov
insl
pop
dec
scas
xchg
cmpsl
push
mov
sarb
cltd
aam
and
adc
outsl
pushf
mov
mov
iret
xor
mov
fistpl
sbb
cli
jne
and
xor
stos
lock
add
pop
addl
lea
sub
out
subl
xchg
pop
cmp
scas
mov
cmpsb
cmp
inc
je
lds
stc
lret
stc
inc
leave
nop
mov
xchg
xchg
xchg
dec
cmp
outsl
inc
loope
cli
add
stos
cmp
push
cmp
aad
rcrb
mov
cmpb
pop
leave
cmp
cmpl
mov
fldt
xor
aam
out
popf
fs
add
jae
push
inc
cmp
cmp
push
add
andl
xchg
push
dec
fsubrl
shlb
das
jl
sub
jb
fsubs
dec
cmc
sub
popa
out
std
xor
fdivrl
ficomps
outsl
das
dec
lret
lret
mov
rcll
test
cs
leave
mov
jnp
mov
fcompl
pop
insb
adc
jbe
xchg
popf
adc
jmp
lcall
and
scas
iret
pop
pushf
adc
cmp
bsr
jae
mov
cs
jle
inc
or
rorl
call
xchg
jb
mov
in
insl
repz
push
cmp
das
scas
ljmp
dec
andb
pop
idiv
hlt
lds
call
adc
mov
leave
shlb
les
rcrb
mov
xchg
cld
xchg
cmpb
xchg
xor
outsb
pop
add
ja
adc
push
ret
and
bound
sbb
stc
in
mov
pop
fistpll
lea
fcomi
jmp
fisubl
es
mov
push
jne
jmp
mov
and
pop
addr16
dec
aad
clc
outsb
adc
lock
mov
iret
aas
icebp
sub
jno
hlt
sub
shll
aaa
jb
cld
outsl
das
adc
adc
cmp
nop
loope
mov
push
scas
ret
aaa
jle
lahf
sub
ss
stc
arpl
sti
adc
lds
stos
test
add
pop
push
jl
or
cmp
inc
popa
repz
cmp
mov
arpl
jbe
push
into
popf
and
jne
fs
call
push
push
jns
sbb
jl
add
inc
mov
xchg
or
cld
ljmp
and
outsb
data16
fldenv
repz
not
mov
inc
into
lea
fldt
stos
mov
insb
push
jae
push
cmpsb
xchg
mov
sub
mov
cli
mov
cmpsb
out
cmp
in
cmpsb
sti
std
scas
mov
rcl
ja
sub
rcrl
pop
mov
sub
mov
in
jo
popa
cmp
rorl
or
pop
sti
sbb
dec
push
dec
test
mov
jns
sbb
mov
movsb
adc
dec
mov
gs
shlb
mov
sub
fidivl
ja
bound
fbstp
sub
mov
jge
in
leave
ret
test
aas
and
ret
mov
sub
xlat
out
adc
idivb
and
cwtl
push
mov
mov
mov
sbb
iret
dec
xorb
inc
mov
repnz
cmp
xor
push
mov
hlt
pushf
dec
in
ficoml
repnz
mov
in
mov
ss
inc
pop
data16
shrb
adc
lods
aad
dec
inc
jl
dec
sbb
xchg
add
xchg
mov
ffreep
stc
sub
test
inc
or
add
inc
push
jb
xor
in
or
sbb
cmp
pop
add
push
mov
add
push
mov
fs
scas
popf
clc
xchg
xchg
leave
fsubrl
movsb
subb
mov
xor
into
xchg
add
or
das
pop
rolb
sub
cwtl
in
sti
sbb
inc
sti
jmp
push
jnp
push
add
lret
jae
jmp
ljmp
scas
cmc
outsl
pop
jbe
ret
ds
xchg
scas
pop
push
mov
aas
incl
mov
mov
push
icebp
lock
out
imul
adcb
cmp
push
es
imul
mov
bound
adc
sarb
mov
pop
mov
pop
sub
push
mov
xchg
mul
jns
push
test
scas
inc
hlt
jnp
add
sub
jo
push
out
movsl
sub
push
adc
adc
sbb
add
in
cli
xchg
cmpsl
scas
sub
or
sub
je
fwait
mov
ficoms
sarl
dec
cwtl
ss
push
cli
and
adc
ss
inc
dec
push
xchg
sbb
arpl
sub
movsl
and
or
push
mov
lock
movsb
dec
sbb
gs
neg
add
arpl
ljmp
mov
je
inc
loopne
xor
xchg
add
or
mov
fdiv
loopne
inc
dec
iret
jle
pop
push
ret
add
pop
xchg
or
xor
cmpsb
sahf
xchg
and
push
xchg
and
scas
sahf
scas
int
fdivl
pop
lds
arpl
testb
push
mov
push
mov
mov
or
inc
mov
dec
dec
js
adc
scas
test
in
sbb
xchg
nop
shrl
pop
int3
loopne
test
pusha
hlt
push
ret
and
pop
je
or
ret
mov
jb
add
scas
mov
cmp
test
xor
adcb
in
fdivrl
not
jle
loop
and
roll
pop
mov
jns
in
dec
mov
adc
inc
mov
loop
adc
or
sbb
test
bound
fsubs
clc
inc
sbb
scas
push
movsb
mov
mov
jge
out
ret
push
pop
addr16
push
xchg
bound
push
fcmovbe
pop
jle
xor
pop
mov
dec
iret
ret
sbb
out
inc
add
pop
fstpl
ficompl
sbb
xor
sti
push
jns
bound
lock
dec
jle
insl
popa
jae
cmpsl
mov
fadd
and
sub
sbb
jecxz
lods
lea
dec
aas
shlb
xchg
sbb
or
inc
icebp
and
test
imul
fisubs
xchg
xor
sub
fimuls
mov
pop
mov
sub
xor
lea
pop
nop
std
data16
jle
lahf
fucompp
sub
xor
sbb
cmp
sbb
fwait
adc
loope
xorl
test
lahf
divb
xchg
in
mov
cmp
cltd
insl
es
push
lcall
ret
mov
push
divb
mov
int3
mov
mov
das
sub
fsubs
or
loop
jmp
jge
stc
fbld
aas
xor
jb
xor
cmp
das
xor
cmpl
rcll
cmp
cmp
jnp
cli
icebp
or
ds
icebp
mov
sbb
push
cwtl
mov
rclb
stc
popa
push
dec
pop
jbe
aam
inc
mov
push
pop
pop
sbb
push
lods
inc
push
out
stos
and
or
bswap
fimull
aaa
or
cmpsl
push
enter
ret
dec
insl
cmc
lret
sbb
dec
fmull
loopne
clc
int
pusha
add
lahf
inc
orl
mov
lea
push
sbb
addr16
and
ret
jge
imul
in
aas
popa
ret
imul
inc
inc
ret
pop
shrl
jg
loop
add
je
sub
dec
dec
dec
xchg
sub
int3
adc
das
xchg
push
push
adc
faddp
aam
dec
adc
or
lret
xchg
scas
mov
shl
leave
xor
dec
sarl
js
inc
in
outsb
fstpt
or
xor
mov
scas
mov
mov
mov
mov
nop
sub
pushf
or
orl
pop
mov
sti
mov
mov
lcall
and
xchg
sar
dec
mov
and
insb
and
pop
test
adc
mov
dec
aas
pop
in
shrl
dec
push
adc
dec
lea
jle
sub
cmp
lods
xchg
sbb
iret
add
stos
and
or
scas
out
in
scas
mov
cmp
mov
sbb
pop
es
push
in
sbb
add
jns
xor
fwait
dec
sbb
test
jbe
or
sub
mov
sub
lds
adc
shll
lods
xor
data16
cmp
inc
push
imul
cld
mov
test
mov
push
jnp
sub
add
push
nop
xor
xchg
xor
inc
lret
xor
jne
dec
xor
test
aam
xchg
xor
mov
xchg
mov
test
je
sub
lret
jo
jnp
insb
or
or
cmp
mov
fimuls
sbb
inc
hlt
bound
js
mov
jle
aad
cmp
sub
lds
mov
adc
sti
jg
dec
dec
pushf
movsl
add
bound
fimuls
mov
aad
daa
cmp
maxps
push
gs
sbb
sbbb
movsl
pop
lods
and
data16
in
or
and
test
mov
push
xor
iret
cmp
insl
clc
jmp
adc
sbbl
movsb
xchg
sub
mov
mov
mov
insl
cmp
ret
jno
inc
test
rcrl
scas
push
aad
cli
jl
das
dec
aaa
repz
out
and
shl
dec
ret
lea
or
mov
dec
mov
jl
loope
jne
lret
in
sub
pop
and
or
push
fsts
or
pop
inc
pop
sti
cmpsb
pop
inc
mov
push
pop
loope
dec
sub
sub
jno
repz
push
loop
mov
xchg
fiaddl
cmc
cmpsl
mov
scas
adc
call
int
or
push
push
aad
test
push
inc
popa
mov
mov
cmpsl
andl
lock
stc
inc
sub
fildll
jg
lods
test
mov
jmp
scas
xor
jno
fbstp
stc
imul
add
out
insb
dec
arpl
or
test
in
test
jg
fidivl
cmp
ja
cmp
hlt
je
pop
mov
xchg
repnz
push
jnp
xor
out
mov
cmp
mov
cli
lds
jne
xor
cwtl
jbe
test
jae
pop
push
fsubrs
push
dec
stc
aaa
mulb
orb
cmp
mov
adc
ja
pushf
cmp
fnsave
mov
movsl
mov
xchg
xchg
rcrl
call
aam
push
ja
pop
mov
fwait
and
arpl
js
sbb
or
push
push
mov
or
jg
aaa
and
pop
xchg
cmp
test
xchg
mov
adc
ss
int
sbb
loopne
add
xor
xchg
or
cmpsb
leave
mov
pop
mov
jp
add
sbb
lahf
leave
jb
mov
sbb
xor
pop
jecxz
mov
xor
push
iret
lds
mov
mov
mov
pop
add
cmpsb
cmp
stc
loopne
xor
cmpsl
push
repz
jecxz
mov
int3
fwait
scas
cmpsl
adc
inc
loop
popf
push
scas
mov
pop
lret
and
sbb
fsubs
test
out
mov
pop
mov
adc
cmp
mov
shll
in
inc
scas
jb
jmp
mov
aaa
mov
ret
push
cli
adc
push
outsl
inc
pop
in
mov
pop
loop
lods
push
xchg
data16
mov
cmc
sbb
dec
sbb
cltd
push
and
jge
add
sbb
jns
jae
repnz
ljmp
adc
jns
nop
cmp
mov
jmp
push
xchg
mov
stos
dec
or
insb
xchg
push
outsl
mov
out
cs
xorl
adc
lock
mov
and
std
sub
or
ret
inc
mov
adc
or
jb
sub
mov
mov
push
sub
std
in
fists
xor
xchg
ds
incb
lret
dec
dec
and
out
and
pop
and
clc
lcall
inc
ret
cltd
sarb
subl
xchg
jae
fs
ret
dec
neg
sbb
loop
cmp
ja
jle
je
xchg
or
fbld
pop
xchg
cmp
add
test
cmp
lea
xchg
mov
cmc
stc
stos
into
mov
movsb
dec
mov
pop
popf
jne
dec
repnz
mov
mov
xlat
movsl
in
decb
push
dec
out
mov
xchg
cmp
lods
pop
add
pop
nop
xor
fsubrs
jge
ljmp
pop
add
cmp
inc
add
jbe
ret
pop
dec
mov
movmskps
out
xor
rcr
add
or
or
iret
out
fprem
aas
sbb
fmuls
mov
cmp
jecxz
push
sbb
mov
int3
mov
lret
xor
cld
inc
push
adc
dec
dec
jae
mov
in
imul
leave
in
push
pop
push
pop
stos
inc
test
inc
popa
pusha
movsl
stc
rorb
fst
daa
sub
lock
adc
and
dec
add
push
neg
jecxz
mov
ds
or
xor
test
stc
xorl
out
add
cltd
pop
xor
push
cmp
mov
push
adc
out
xchg
addr16
out
push
loope
cmp
cld
xchg
dec
pop
lret
lahf
push
add
add
adc
mov
iret
jb
jge
scas
push
test
test
inc
pushf
je
xor
xor
sbb
mov
add
fcmovbe
cmp
inc
jecxz
mov
pop
jae
jmp
xorb
fmuls
jge
cld
push
pop
loop
jne
jmp
mov
imulb
mov
in
jno
sub
dec
ljmp
lret
cmp
xchg
or
pop
lods
sub
push
dec
enter
pop
push
jg
nop
lahf
cltd
dec
aad
repz
pop
adc
lock
mov
out
push
inc
lcall
ret
jmp
dec
imul
xor
mov
lahf
mov
daa
jmp
stos
rclb
repz
jmp
add
in
push
gs
stos
lds
jecxz
scas
enter
sbb
lea
add
fsubs
cmp
enter
xchg
cmp
lcall
icebp
out
bound
rcrl
dec
or
or
push
xchg
imul
in
jno
pop
mov
out
shrb
mov
decl
out
pusha
xor
inc
in
jmp
insb
cmp
sub
and
sub
int
sbb
retw
mov
pop
int
int
cld
imul
jo
xchg
pushf
lcall
out
jnp
faddp
cmp
lahf
mov
add
aam
cmpsb
cli
push
test
mov
test
outsb
cmp
in
sbb
cmc
dec
adc
mov
pushw
pop
lret
mov
and
daa
shr
jns
mov
ds
das
cmpsb
sbb
std
sarb
inc
mov
pop
test
cs
daa
fldt
adc
and
mov
aaa
inc
jno
int3
mov
rorb
pop
into
xor
sub
shrl
loop
fxch
addr16
jno
jbe
sub
mov
fidivl
jo
push
dec
repnz
mov
clc
mov
sarl
rcrl
jp
cmpsb
dec
push
les
inc
jmp
jp
sub
les
push
pop
mov
inc
mov
xchg
ss
cmc
xor
push
push
test
sbb
inc
ja
je
xchg
stos
rorb
mov
lock
je
xchg
je
mov
flds
mov
xchg
adc
cmpsb
sbb
loopne
dec
iret
sub
xchg
pop
and
dec
addr16
stos
mov
es
in
xor
mov
cmp
xchg
jb
inc
lret
das
push
clc
sbb
push
addr16
sbb
repnz
cs
push
sub
cmc
add
jp
jl
lods
fildll
fsubr
addr16
cs
pop
decb
mov
xchg
jle
jb
stc
dec
cmp
xlat
cmp
aaa
adc
addl
dec
cli
mov
or
jg
jp
imul
mov
scas
jne
daa
inc
pop
movsb
and
sbbl
jb
mov
inc
dec
stos
and
push
dec
stc
dec
fcomps
sbb
mov
inc
lahf
add
inc
or
pop
and
sub
in
dec
mov
test
pushf
pusha
lds
fwait
pop
cli
gs
scas
addr16
sub
std
and
popf
or
fistpll
cmpb
jb
imul
jnp
movsb
out
sub
xchg
cltd
push
cs
fsub
ret
cmpsb
add
out
xchg
cmp
cmpb
mov
fdivl
xorb
cmp
mov
mov
dec
lock
xchg
in
mov
cli
mov
sbb
cmpb
lods
int3
and
mov
and
es
ret
jl
pop
cmpsl
xor
dec
mov
fldcw
hlt
lods
sarb
and
std
andps
xor
push
dec
imul
jp
lret
rep
loope
stos
js
jne
enter
mov
mov
popf
int
aam
mov
ret
test
fistps
hlt
cmp
cmp
lock
es
into
andb
out
lock
fs
popa
xchg
sub
ljmp
scas
pop
jmp
int
push
ret
and
jo
sahf
sbb
mov
inc
roll
cmp
bound
dec
push
faddl
movsb
orl
insl
call
repz
dec
clc
cmc
arpl
cltd
and
bound
push
outsl
cmp
ljmp
popa
xor
and
push
sub
jmp
xor
lds
divb
out
add
mov
imul
outsl
or
scas
pop
in
stc
or
adc
mov
imul
sbb
std
and
pop
enter
sbb
daa
das
bound
imull
xchg
gs
adc
inc
mov
stc
add
enter
mov
xor
mov
pop
mov
enter
imul
xor
clc
inc
xchg
mov
inc
popa
mov
test
in
mov
sub
rcl
adc
shll
fstl
mov
inc
adc
jmp
inc
xchg
adc
cld
pop
push
test
out
push
in
pop
pop
insl
lret
out
popf
addl
mov
out
jl
repz
dec
movq
jo
mov
mov
jne
cmpsl
add
sti
shlb
lret
cmp
push
pop
sub
cmp
push
roll
lock
in
sahf
aaa
in
adc
fs
mov
mov
insb
andb
xor
ret
jle
jb
or
outsb
or
decb
scas
sub
jbe
lret
adc
xchg
cmc
andl
or
out
or
xor
mov
into
or
popa
mov
pop
cmp
sub
fisttps
ds
js
movsb
sub
or
popa
scas
mov
xor
jge
mov
int3
adc
dec
sbbl
dec
pop
sub
mov
xlat
jmp
and
xor
enter
xor
iret
push
mov
and
enter
mov
sub
ret
push
sub
movsb
xor
sub
xor
and
pop
push
ja
ja
mov
mov
sbb
push
cs
dec
cmp
dec
hlt
and
ds
dec
jl
push
imul
std
xchg
push
call
int
fwait
pop
inc
shlb
stc
test
dec
enterw
fstps
or
shr
int
pop
lods
sbb
adc
adc
xchg
int
into
in
mov
xchg
sbb
sbbl
pop
inc
fsub
addr16
lds
xchg
jecxz
into
test
scas
popf
pop
popa
push
xor
xor
fxtract
int
dec
gs
pop
xchg
xor
push
divl
shll
jbe
dec
and
call
aad
cmp
mov
pop
xor
or
andl
scas
pop
fisttpll
icebp
sbbl
lahf
mulb
ljmp
push
adc
jbe
cmpl
cli
aad
mov
add
inc
stos
xor
sbb
gs
inc
pop
loope
hlt
or
push
int
push
jnp
nop
inc
xor
ds
mov
ljmp
shll
xchg
cmp
push
fwait
cld
sahf
mov
leave
outsb
stos
jmp
mov
xor
jge
cmc
rclb
pop
cmp
sbb
addr16
and
int3
test
fucom
mov
arpl
in
mov
lcall
fdivs
xchg
mov
pop
sub
pop
cltd
xchg
cmp
je
dec
xor
cs
sub
jae
pop
mov
cmpsb
add
out
dec
cmpsb
daa
out
lock
push
int
xchg
inc
jns
lret
lea
cmp
addr16
call
fsubl
mov
xchg
sbb
cmpsl
pop
xchg
cwtl
rorb
out
rcrb
in
adcb
addr16
and
add
lods
jns
dec
ret
inc
mov
push
out
das
pop
and
inc
mov
push
test
jbe
pop
les
fiaddl
ljmp
lds
mov
fcoml
into
mov
pushf
scas
sub
dec
fists
mov
stos
push
mov
aaa
imul
jmp
int3
cmpsl
pop
adc
jno
or
jmp
push
jb
push
aam
clc
pop
sbb
insb
popf
scas
or
fcomps
fstl
dec
sub
push
mov
call
js
stos
sub
fldt
test
dec
xchg
add
sarl
jmp
and
addb
jecxz
sbb
adc
pop
xchg
adc
int
push
les
cld
lea
rol
aam
mov
inc
xchg
data16
into
mov
inc
sub
mov
insl
add
jecxz
out
popf
mov
cmp
loope
cwtl
cld
sbb
ljmp
cmp
pushf
fadds
dec
sbb
int
pop
out
cmp
ds
imul
stos
pinsrw
and
mov
shr
xchg
call
ret
mov
inc
js
mov
dec
xor
cli
push
push
sti
repnz
sub
loopne
test
mov
xor
push
xor
nop
outsb
movsb
sbb
push
cmpsb
test
dec
ds
fiaddl
inc
xchg
mov
int3
int3
ljmp
sahf
ds
cltd
mov
loope
clc
fs
cmp
inc
stc
stos
pop
dec
les
sub
cmp
or
fildl
cwtl
leave
orl
ret
pushl
stos
add
or
mov
sub
aam
pop
cmp
adc
gs
cmpsb
js
lods
sub
mov
mov
sahf
scas
push
lahf
push
xchg
mov
sbb
movsl
push
leave
ss
insb
jnp
sub
ljmp
jb
dec
gs
mov
ret
dec
push
add
lret
dec
add
loopne
dec
push
mov
add
adc
xlat
out
push
push
loopne
cmp
fwait
add
mov
lods
ss
adc
je
or
popf
push
xchg
imulb
xlat
test
or
mov
push
inc
outsb
pop
ja
sbb
dec
jle
xor
ss
jle
addr16
lret
aad
mov
sbb
or
push
pop
das
sti
roll
lods
jae
test
sbb
jb
lahf
ss
fcomps
ret
inc
inc
clc
in
stc
scas
cwtl
cltd
cmp
outsl
pop
jmp
pop
cmp
sbb
push
xchg
popf
subl
aaa
lods
jge
xor
ret
shll
mov
js
pop
xor
jg
lcall
sti
push
cmpsb
lret
out
cmpb
push
adc
stc
add
jmp
ret
mov
cmp
loopne
xchg
add
icebp
and
inc
pop
dec
xor
rorb
adc
imul
or
inc
outsb
clc
mov
mov
xchg
push
fwait
insb
xchg
push
pop
push
adc
mov
adc
rclb
mov
repz
xchg
loop
mov
dec
and
int
and
fidivs
imul
xor
sbb
or
inc
mov
outsl
cmp
xchg
daa
pop
iret
pop
mov
repnz
or
push
dec
lahf
stos
jl
pushf
xchg
dec
scas
xchg
xchg
dec
mov
push
xchg
jo
ljmp
sbb
icebp
jno
mov
pusha
imul
daa
adc
pop
jb
dec
stc
dec
pop
cmp
push
mov
sahf
inc
jp
pop
push
jno
and
mov
shll
daa
xchg
or
daa
jno
add
mov
les
repz
and
fcoms
mov
add
es
xor
xor
pop
xor
lcall
pushf
movsl
dec
or
test
add
fldlg2
sub
push
scas
dec
stos
aad
inc
lea
loopne
test
mov
sub
xchg
ss
or
pop
imul
sub
cmp
push
and
add
mov
clc
subb
inc
mov
or
stos
or
das
fidivs
mulps
sbb
mov
push
out
scas
pop
xchg
xchg
mov
xchg
xchg
arpl
add
std
in
sbb
jo
jp
sbb
repz
insb
ret
and
rcr
sbb
pop
in
push
push
jecxz
inc
adc
fldenv
fs
jge
xchg
xchg
xor
data16
ret
mov
ss
leave
sub
mov
jns
and
adc
jmp
movsb
shr
les
ret
push
cwtl
in
jno
mov
xchg
push
mov
sbb
cli
and
push
int
lds
sahf
push
jle
flds
imul
push
or
clc
mov
push
hlt
fildl
lret
cmp
outsb
ja
movsl
jle
add
inc
imul
ja
push
outsb
enter
jmp
or
and
mov
xor
ja
fwait
movsb
in
xchg
neg
mov
mov
shlb
imul
mov
sbb
jnp
or
mov
sbb
imul
pop
outsb
rolb
rol
xchg
les
lret
xor
shr
pusha
sbb
mov
mov
test
jg
add
int3
mov
iret
addr16
aas
fstpl
rdmsr
xor
xchg
adc
dec
lods
fsubs
and
push
das
mov
jg
sub
repz
sub
orl
xchg
xchg
test
jns
and
aam
lret
add
mov
inc
aad
insl
adc
pop
mov
inc
test
xchg
aam
jns
js
push
or
adc
mov
sub
pop
adc
inc
bound
pop
data16
in
sub
je
or
leave
pop
mov
mov
sub
lds
mov
inc
pop
movsb
cli
pop
cmpsb
int3
les
cmp
mov
push
cmp
mov
fcompl
xlat
dec
nop
jo
mov
loopne
mov
and
nop
rolb
cltd
rcll
xchg
xor
mov
mov
aam
bound
inc
pop
js
cmp
xchg
mov
nop
test
or
and
mov
sbb
inc
and
or
sbb
int
pusha
fwait
rclb
out
pop
add
aam
mov
lahf
shl
rcl
inc
data16
mov
push
clc
jle
pop
xchg
hlt
and
push
lret
addl
lock
popf
inc
data16
mov
mov
xchg
mov
pop
fadds
push
push
xchg
cli
pop
mov
inc
xchg
ss
rcrl
cltd
dec
or
jmp
fcomps
mov
cltd
adc
sbb
jg
in
sub
or
es
or
lret
popl
push
push
sub
adc
mov
test
cmpsb
rolb
fs
lock
out
outsl
sub
filds
dec
add
bnd
mov
xchg
andl
shl
dec
les
aam
mov
lret
rorb
aaa
mov
testb
sbb
pop
ret
ss
jne
fcoms
nop
nop
cmovno
or
adc
and
jl
cmp
add
std
ror
test
mov
add
cmp
cmpl
popf
xchg
repnz
adcb
pop
lcall
adc
push
pop
cmpsb
or
aas
cmp
cmpsb
lret
jecxz
shrb
out
and
addb
pop
cmpsb
and
leave
cltd
or
mov
jns
push
cmpsb
test
insl
push
mov
fldl
adc
sub
cli
call
add
int
xchg
dec
fldcw
or
jl
enter
pop
scas
cmp
lods
mov
lret
mov
adc
jle
push
inc
push
jno
add
js
std
and
jg
in
jbe
arpl
and
incb
jb
iret
mov
inc
aaa
add
repz
inc
xadd
sbb
mov
add
sbb
pop
inc
jp
mov
xor
es
clc
jmp
cmp
push
mov
out
inc
push
pop
mov
aaa
xchg
cld
cwtl
sarl
data16
nop
jmp
and
lea
sub
ror
mov
fistl
pusha
mov
pushf
mov
mov
mov
adc
push
xchg
aas
or
cmc
push
das
cld
lcall
mov
fiadds
mov
cltd
sub
jb
mov
add
movsl
lret
into
into
loopne
sub
je
mov
fisubrl
mov
inc
les
stos
outsl
add
push
es
inc
daa
rolb
imul
cmp
pusha
mov
and
inc
mov
movsl
jge
loop
mov
push
xor
and
data16
shll
adc
mov
and
scas
push
mov
xor
into
fidivrl
mov
imul
mull
fs
sbb
xchg
iret
cmpsl
fcompl
fldt
lea
popf
das
stc
sbb
leave
fsubs
das
push
jbe
flds
mov
ja
fisttpl
sbb
popa
and
fstpl
adc
inc
dec
enter
out
adc
sbb
inc
sbb
ja
xchg
cmp
mov
mov
and
sbb
or
dec
adc
bound
fistpll
cmp
cmpsl
xchg
jne
push
pop
iret
jae
add
push
adc
mov
xor
pusha
loop
insb
nop
sub
ds
sbb
mov
add
fists
xor
aaa
int
lods
fsubrs
loopne
int3
lcall
out
fwait
jbe
loop
push
push
mov
sbb
lods
sbb
mov
mov
cmp
rolb
pop
daa
les
xchg
cmp
lret
push
xor
adc
and
fistpll
fsubrl
mov
dec
jle
frstor
xor
out
cwtl
mov
dec
add
mov
xor
rorl
sarb
hlt
jmp
movsl
push
or
pop
inc
jbe
or
cmp
loope
subb
loop
inc
cld
xor
push
dec
cmpsb
sub
ficoms
xchg
lcall
ja
jecxz
xchg
xlat
dec
scas
or
pop
xchg
mov
pop
pop
adc
cld
pop
pop
stos
movhlps
std
scas
mov
hlt
pop
popa
dec
insl
pop
push
imul
test
sbb
jae
dec
xor
mov
leave
movsb
clc
ja
shlb
dec
aas
cli
ljmp
xchg
fnstenv
push
mov
and
repz
fcmovu
cs
jecxz
push
add
enter
xor
push
cmpsl
sbb
cli
push
sbb
mov
jle
je
hlt
lea
push
cmp
aam
test
push
imul
xor
out
scas
sub
or
fidivl
insb
shrb
imul
push
push
scas
enter
hlt
bound
mov
insl
adc
xlat
mov
pop
ret
sub
xlat
pop
ljmp
push
sti
loope
ss
cmc
in
push
push
push
out
fldt
gs
xor
adc
fdivr
sbb
ret
lcall
sub
jl
imul
cmp
jno
sub
repz
int3
dec
sub
js
jns
and
int
mov
jle
mov
mov
test
or
mov
and
dec
repz
xchg
ljmp
and
in
dec
fs
test
in
push
nop
jne
outsb
sbb
popf
xchg
mov
arpl
add
and
sbb
sbb
mov
test
cmp
rcr
pop
lea
lock
mov
fists
sub
movsb
or
push
add
jg
pop
movsb
dec
adc
and
repz
and
xor
nop
mov
sarb
andl
fadd
xchg
pop
lods
jnp
xchg
push
dec
test
ss
push
outsb
add
and
cld
cmp
scas
pop
jae
negb
leave
insb
ret
int3
sahf
push
hlt
in
inc
rcrb
inc
je
xorl
xchg
test
in
rclb
ret
pop
inc
mov
icebp
xor
or
jge
xor
sub
cltd
or
adc
mov
xchg
ret
sbb
fmuls
xor
sbb
daa
push
dec
add
or
cmpb
sti
mov
jnp
push
pop
inc
cmc
cmc
mov
cmp
cs
outsb
rcrl
in
scas
negb
xor
fwait
pusha
add
rclb
fincstp
push
dec
sti
pop
jne
scas
pop
sbb
test
mov
jo
gs
mov
lret
fistps
aam
sbb
add
adc
inc
sbb
pop
int
stc
lea
push
rcr
pop
or
push
ffree
sbb
jp
mov
mov
inc
or
sbb
sahf
mov
ljmp
mov
mov
shll
scas
cmp
adcb
outsb
ret
or
in
shlb
std
lods
cwtl
int3
and
test
stc
aas
sub
fldcw
data16
movsb
rorl
mov
or
add
repnz
in
and
cmovbe
sub
hlt
iret
mov
push
sarb
adc
movl
es
lock
out
popf
inc
jno
or
push
loope
push
mov
rclb
xchg
cld
das
test
jae
std
xor
jmp
mul
and
aaa
mov
imul
lock
inc
mov
sub
xchg
imul
clc
and
push
sub
jp
orb
or
dec
adc
and
stos
add
xor
sbb
aam
in
nop
mov
inc
pop
test
pop
aas
sahf
in
imul
pop
dec
jne
mov
nop
xor
cltd
sbb
movsl
dec
jnp
push
testl
loope
sbb
mov
jmp
inc
or
push
sarl
mov
mov
es
jbe
test
jb
dec
xor
jno
push
dec
add
pusha
and
xor
rcr
repnz
in
mov
scas
movsl
pop
xchg
out
lahf
push
pop
or
jbe
push
push
stos
sub
or
sbb
insb
cmpb
mov
mov
xor
mov
pop
nop
es
dec
inc
fistpll
jge
inc
cmp
rcrb
and
les
fiadds
and
sub
pop
outsl
pop
movsl
imul
fdivl
in
test
sub
dec
mov
mov
rclb
rcrl
push
ret
imul
sbb
gs
mov
sti
mov
pop
xor
dec
out
inc
call
push
rol
push
add
inc
into
dec
popa
fistps
movl
sub
dec
jae
xlat
mov
mov
movq
cli
dec
lcall
add
dec
jecxz
outsl
sbb
testl
test
jl
pop
mov
arpl
mov
jmp
inc
push
jno
mov
call
and
xor
xchg
stc
nop
jl
jae,pt
sub
mov
pop
or
xchg
iret
adc
fbld
mov
ret
dec
jl
ret
ljmp
dec
jp
fbstp
int
rorb
gs
lea
mov
adc
aam
fistpl
sbb
out
xchg
xchg
test
shlb
outsb
push
int
cpuid
or
je
movsl
xchg
stos
mov
push
std
les
pushf
dec
lsl
mov
loopne
add
mov
ret
cli
mov
dec
adc
popf
cltd
cmp
mov
rcll
mov
pop
repz
mov
inc
cmp
and
mov
pop
pop
cmp
daa
lret
mov
out
lock
xor
out
push
das
jmp
xor
mov
mov
aad
inc
mov
cmp
cmp
stos
ret
xor
sub
sub
pop
scas
hlt
shrb
mov
orb
or
cmp
push
sbb
pop
dec
mov
xor
stc
inc
mov
cmp
pushf
adc
add
xlat
mov
cmp
insl
dec
jmp
test
ret
inc
test
push
scas
adc
in
test
pop
and
in
xchg
insl
repz
dec
dec
sbb
jnp
loop
loope
fs
and
imul
adc
push
mov
stos
lea
cli
popf
rcrb
mov
loop
dec
std
xor
mov
fdiv
bound
lahf
dec
dec
inc
xchg
cmp
push
xor
push
std
int
mov
lahf
sbb
insb
add
jne
jg
cs
loope
test
or
xor
pusha
sub
outsl
and
sub
out
dec
scas
das
and
mov
out
mov
sarb
mov
pop
loopne
pop
cmp
xor
and
push
push
das
add
int3
push
roll
js
jmp
mov
repnz
pop
mov
in
popf
sahf
scas
sub
sub
ja
xor
std
pop
xchg
imul
mull
test
add
scas
cmp
mov
fwait
stos
jge
sub
mov
sub
outsb
xchg
mov
movsl
lods
lret
mov
push
mov
pop
push
sub
pusha
sti
xor
iret
movsb
fucomip
test
cmpsb
andb
cs
xorl
jne
cmp
sbb
push
insl
insb
xchg
cld
or
mov
aad
push
sarb
jo
ror
mov
inc
inc
scas
scas
jle
enter
aad
cmpsb
fmull
inc
sar
mov
daa
sbb
and
pushf
mov
mov
outsl
shlb
push
std
test
imul
sarb
and
inc
mov
sti
adc
jo
sahf
mov
into
mov
push
fsubrs
push
in
lcall
sub
je
push
mov
gs
push
rcll
xchg
into
hlt
mov
in
dec
mov
mov
adc
or
jp
ljmp
jg
cwtl
mov
shrb
sub
negb
imul
sarl
mov
or
in
insb
repnz
fistpll
push
xlat
loopne
stos
jp
test
fisttpll
movsb
ret
cmp
xchg
lods
sbb
cmpsl
sub
loop
repnz
fs
jno
mov
mov
cmp
leave
js
cmp
movsb
lods
xchg
push
xor
xor
cmp
mov
or
and
xchg
or
xlat
ret
pop
mov
mov
push
push
std
lods
cltd
lahf
fcoml
sub
xchg
adc
outsb
cmp
outsb
inc
andb
adc
fxch
jbe
scas
jmp
shl
inc
sbb
sbb
adc
fucomp
sub
sti
das
jmp
out
add
pop
mov
pop
imul
sbb
or
push
sarl
and
jae
jp
addb
sub
mov
jnp
push
mov
fcomi
sub
pop
jnp
ffreep
es
push
add
pop
lods
js
ss
push
insl
and
lock
pop
xchg
or
mov
pop
push
push
push
push
test
adc
hlt
xlat
sub
sub
mov
jb,pn
shll
int3
test
dec
jl
xor
mov
insb
ret
mov
popf
call
sbb
dec
mov
xchg
popa
cs
sbb
lea
or
clc
adc
and
dec
ja
sub
stos
or
jno
fmulp
inc
dec
inc
in
stos
pop
in
inc
sti
or
cmpsl
pop
dec
sbb
mov
scas
push
ljmp
inc
xchg
ds
xor
and
add
or
int3
xchg
ja
lret
test
cmp
loop
mov
je
mov
ret
and
jbe
in
sub
lds
jbe
add
mov
fisubs
cmpsb
insb
pushf
bswap
mov
mov
aas
sbb
dec
xor
loop
fcompl
pushf
mov
out
clc
sbb
repz
and
adc
mov
pushf
cmp
mov
testl
mov
dec
mov
lret
lock
cmp
stos
jns
push
jp
sub
fadds
aaa
pop
inc
arpl
rcll
dec
mov
mov
push
adc
mov
add
scas
jnp
out
xchg
ss
movsb
shll
loope
int3
pop
imul
pop
ficompl
xorb
xchg
cwtl
xchg
mov
mov
xor
stos
lods
in
test
sahf
test
adc
xor
pop
rclb
inc
fiadds
push
sbb
data16
insb
jp
xchg
std
pop
mov
cmp
enter
pop
outsl
mov
hlt
mov
mov
add
mull
or
mov
xor
stos
jecxz
inc
sbb
xor
ja
jbe
and
mov
aas
icebp
jne
jp
and
aad
pop
dec
in
push
inc
cmpsb
jecxz
iret
aam
add
mov
cmp
lock
mov
dec
shll
sub
mov
mov
and
not
and
xchg
mov
pop
scas
adc
jns
mov
mov
rcll
dec
mov
movsl
jl
jmp
fists
jns
mov
daa
loop
xchg
sub
push
cmc
aam
dec
insl
inc
push
cmp
mov
popf
insb
dec
add
mov
leave
aaa
rcr
es
aaa
rolb
imul
add
jns
mov
insb
pop
int
fld1
xchg
jg
push
int3
mov
mov
fmuls
scas
cmc
fcoms
jg
push
pop
sub
jne
dec
inc
xchg
arpl
daa
lret
pop
and
xchg
pop
inc
lret
cmp
daa
sub
inc
insl
or
fs
push
notb
cwtl
movsl
idivb
pop
test
jbe,pt
jno
inc
ljmp
push
lret
mov
daa
outsl
push
and
push
scas
lods
mov
filds
mov
out
lret
mov
ja
insl
pop
dec
test
js
dec
inc
stc
repnz
imul
cmp
aaa
pop
fadds
lods
mov
jb
vpmaddwd
aad
fs
dec
mov
inc
sbb
mov
adc
out
fs
enter
ss
cmp
popf
jns
cwtl
push
xchg
push
dec
fcomps
out
add
jns
mov
mov
jbe
mov
popa
or
mov
aad
loopne
pop
xor
les
or
inc
xchg
repz
int
test
nop
mov
lock
movsl
cmpsb
push
sbb
pop
push
jae
dec
ljmp
sub
push
mov
in
pop
pusha
iret
fists
into
jmp
adc
add
pop
cmc
dec
pop
adc
sete
mov
cmp
paddusw
pop
subb
pop
daa
outsl
jg
and
push
or
adc
mov
adc
in
push
test
mov
mov
aaa
lods
jae
cmp
and
outsl
push
and
or
jmp
and
in
and
cmpsl
out
mov
pusha
mov
inc
dec
lahf
int
mov
repnz
cli
dec
mov
lods
test
mov
push
push
dec
dec
cmp
daa
pop
push
xor
mov
sub
add
push
xchg
jne
insb
daa
movsb
jecxz
mov
pop
cli
cmc
loope
stos
pusha
mov
test
pop
pop
jb
movsb
pop
cwtl
cmp
push
out
arpl
or
dec
adc
movsb
fs
pop
mov
rorb
mov
imul
fisubl
data16
jmp
xor
out
ljmp
jmp
mov
jno
fmuls
insl
sbb
lcall
test
aas
dec
stc
cmp
iret
push
push
sub
test
mov
lock
mov
fstpt
mov
sbb
mov
lds
jnp
stc
ja
inc
sub
addb
inc
mov
ret
dec
jg
add
cwtl
push
testb
les
or
adc
push
sbb
mov
dec
mov
rclb
mov
arpl
daa
mov
xchg
sbb
scas
loope
mov
sbb
fildl
pop
push
or
inc
pushf
pop
push
mov
testl
insl
decl
mov
dec
pop
push
push
mov
mov
push
or
shlb
shll
int3
sti
xor
lds
and
loop
or
pop
popf
sub
adc
clc
pop
xor
fimuls
push
clc
dec
orb
dec
sarl
imul
push
inc
inc
insl
test
sub
int
lds
dec
or
stc
out
pop
lret
inc
push
xchg
lcall
xor
scas
int
imul
sub
inc
ds
or
add
cwtl
mov
lret
into
push
hlt
test
xchg
jnp
adc
pop
inc
cmp
add
push
jge
jecxz
add
xchg
enter
int3
bound
mov
rcll
cmp
loopne
sbbl
lds
cmp
xchg
lods
ret
xlat
inc
adc
xchg
dec
aam
mov
ret
arpl
jge
inc
cltd
rcrl
xchg
dec
jle
push
mov
lahf
ret
push
lods
jno
xchg
push
bnd
movsb
lods
inc
adc
and
roll
inc
jae
fidivrs
jbe
cmp
fidivrs
adc
cltd
xor
mov
inc
arpl
loopne
and
repnz
daa
mov
inc
loopne
mov
imul
add
loopne
aaa
pop
dec
jno
fdivrp
dec
arpl
xlat
sbb
inc
sub
pop
xchg
mov
je
adc
jp
cmp
adc
dec
xor
fdiv
loope
into
in
das
fwait
jnp
dec
aas
in
or
xor
mov
sti
dec
and
inc
cmp
add
xor
inc
dec
xor
dec
inc
xlat
add
loopne
jecxz
mov
loope
hlt
les
dec
in
add
in
xchg
or
gs
xor
call
in
or
sahf
mov
jbe
xchg
push
inc
add
sbb
mov
nop
aas
nop
mov
pop
adc
jp
rcll
mov
cmpsl
inc
mov
sbb
jg
push
imul
push
xor
into
imul
loope
repz
out
cmp
pop
ret
mov
lods
or
divl
mov
stos
or
fsub
xchg
xchg
push
rcl
push
das
mov
out
stos
ja
rcrb
sbb
in
movsb
or
movsb
jg
and
push
lock
dec
lods
popa
je
mov
jae
adc
test
xlat
adc
jmp
cmp
mov
xchg
mov
fstpt
iret
xchg
or
dec
mov
and
shr
adc
lcall
mov
push
jb
sbb
sbb
pushf
mov
jo
leave
movsb
push
dec
lds
or
mov
xlat
jge
leave
aad
jns
mov
fistl
xor
pop
scas
popf
ja
in
push
fwait
pop
cmpsl
fstpt
xchg
cmp
orl
cli
lret
pop
push
mov
cmp
aad
xchg
aad
mov
adc
je
add
je
inc
push
std
mov
xchg
mov
sub
xchg
imul
sarl
test
fwait
xchg
in
shll
shr
sub
xchg
mov
or
and
fldt
cmp
inc
pop
and
clc
pop
idiv
repnz
adc
popf
xchg
or
jbe
cmpsl
xor
xlat
mov
push
xchg
dec
aaa
xchg
cmp
sbb
cmp
int
pushl
cmp
dec
stc
sub
push
push
or
stos
jno
imul
xchg
repz
mov
or
jo
cmp
jnp
xorb
ss
and
rcrl
adc
and
sbb
das
mov
jge,pt
sbb
push
add
xchg
ja
mov
inc
mov
mulb
push
jne
aad
mov
cmpsb
inc
inc
movsl
mov
jp
aaa
jae
jecxz,pn
sub
daa
xor
mov
out
and
stos
pop
cltd
adc
xchg
jo
subb
dec
shr
cltd
imul
adc
jns
je
push
movsb
inc
jge
fistl
inc
or
xor
fisubrs
xor
mov
dec
pop
push
xchg
adc
stos
nop
jecxz
fs
dec
mov
lock
mov
cmpl
dec
cmp
lock
cli
adc
dec
into
cld
dec
stos
shlb
mov
sarl
scas
ss
popa
loop
cmp
jmp
popa
out
and
les
mov
divb
jbe
mov
pop
push
jecxz
subb
sbb
in
sub
adc
mov
xor
out
sbb
push
add
push
xor
mov
rcr
add
movl
xor
repnz
shrl
mov
xchg
push
test
or
inc
into
jnp
mov
ja
mov
clc
push
pop
push
divb
out
test
ret
add
adc
jnp
sub
lcall
add
shlb
dec
adc
outsb
mov
dec
sub
repz
and
xor
lock
cmpsl
inc
push
sti
sub
pop
mov
xchg
dec
cmc
ja
add
xor
fs
and
in
mov
in
popf
mov
mov
in
cmp
stos
pusha
lea
call
sbb
jg
push
push
cmpsb
adcl
sahf
mov
push
icebp
cmp
push
inc
sbb
cltd
sbb
push
fistl
or
adc
xor
lods
adc
call
lock
es
clc
pop
gs
mov
push
es
imul
and
adc
and
clc
or
or
xchg
cmp
or
push
and
das
cmp
mov
pop
mov
std
pop
push
mov
filds
popa
sbb
int3
or
pusha
fiaddl
daa
daa
and
push
fdivrl
dec
repnz
jle
cli
mov
push
faddp
or
inc
decb
mov
fmuls
outsb
pop
jle
mov
ljmp
out
insl
pop
movsb
fisttpl
into
mov
sbb
push
jl
in
faddl
sub
sub
loope
xor
leave
loope
dec
lods
mov
inc
mov
cmc
in
es
lock
cmpsb
je
mov
ret
insl
jo
mov
pop
sbb
ss
jnp
jb
js
or
test
test
sub
les
mov
dec
pslld
outsl
xchg
or
iret
repnz
and
and
rorb
loop
ja
and
cmp
enter
popa
mov
cmp
nop
inc
inc
jnp
sbb
add
lock
fcoms
pop
pop
xchg
pop
call
jl
cmpsl
cmp
mov
sbb
dec
dec
lret
mov
in
cli
mov
fwait
dec
test
jae
mov
or
xor
ja
inc
jmp
inc
mov
fnstsw
out
mov
cmpsb
xchg
adc
mov
insl
mov
jecxz
addr16
add
push
sbb
daa
and
pop
icebp
ret
fucomi
mov
push
or
fidivs
jl
mov
or
mov
mov
mov
rcrl
adc
outsl
dec
call
jge
cli
sub
pusha
loop
pop
cmp
jecxz
outsb
sub
jecxz
inc
andb
popf
lret
mov
mov
sbbl
push
inc
pop
test
push
fnstenv
popa
jle
sub
imul
hlt
xchg
mov
lcall
gs
and
adc
fcoml
gs
cs
mov
das
es
mov
fucomi
arpl
and
addb
xlat
int3
hlt
xor
outsl
add
mov
mov
mov
xor
out
or
lret
hlt
mov
mov
test
lods
cmc
lea
inc
lcall
inc
fidivrs
mov
lret
lds
mov
scas
loopne
mov
jnp
or
test
jmp
pop
ret
cmpsl
adc
in
pop
icebp
lock
or
pushf
push
mov
pop
pushf
sarl
leave
insl
mov
dec
dec
or
outsl
pop
jle
sbb
inc
ja
pop
scas
je
pop
mov
jmp
imull
add
fmuls
push
outsb
mov
mov
mov
sarb
aaa
mov
mov
jbe
jl
sub
out
xchg
inc
add
js
mov
roll
inc
arpl
ret
mov
sub
mov
mov
jl,pn
mov
xchg
int3
pop
dec
sti
cld
xchg
test
push
cmp
xor
rep
jne
scas
or
dec
loope
fiadds
mov
xchg
xor
test
ljmp
jb
adc
mov
daa
imulb
sbb
es
adc
jle
insl
notb
sbb
sub
dec
or
pop
enter
mov
or
jnp
push
nop
enter
iret
cld
pop
mov
nop
push
cmp
xchg
sbb
cmp
hlt
dec
mov
inc
inc
push
in
jb
mov
mov
dec
sub
add
cmp
jno
mov
mov
xor
pop
mov
ss
jp
arpl
loope
lods
mov
pushf
mov
push
sbb
outsb
inc
xchg
lcall
jne
fsubrl
cmp
cwtl
cmpsb
test
roll
xchg
sbb
add
adc
add
cwtl
lahf
dec
sarl
sbb
lcall
aas
and
mov
jae
mov
popf
push
notl
imul
mov
loopne
call
xorb
sub
jbe
in
mov
jge
or
dec
dec
jb
nop
jp
loop
lods
popa
daa
push
pop
adc
repnz
int3
pop
xor
mov
gs
sbb
or
je
ljmp
loope
aam
outsb
dec
cmp
lods
jnp
inc
xchg
add
nop
aad
mov
clc
dec
push
adc
rolb
and
insb
iret
pop
jns
cmp
mov
inc
movsb
mov
pop
jns
fnsave
xchg
dec
mov
dec
rcll
enter
in
enter
xchg
and
imul
jbe
xchg
jge
das
xlat
mov
fwait
or
ljmp
xchg
pusha
int3
push
jle
shrl
add
mov
sbb
out
stos
loope
stos
js
je
add
push
and
es
jle
aad
push
xchg
fstps
mov
and
mov
mov
call
shlb
xchg
movsl
testl
push
cmc
mov
dec
push
pop
add
mov
or
xchg
lods
adc
sub
pop
inc
mov
xor
push
iret
popf
mov
test
rep
sbb
mov
test
cwtl
cmp
inc
loope
dec
ret
out
mov
pop
pushf
lods
fxam
xor
sti
loopne
shlb
js
jle
and
xchg
push
xchg
jbe
js
out
shll
cmp
xchg
pop
je
std
xor
fimull
and
addr16
pop
push
mov
push
or
mov
sbbb
pop
js
jne
pop
sub
adc
test
imul
fsubrl
mov
mov
test
dec
pushaw
add
aaa
cmpsl
or
jbe
and
jne
dec
aaa
push
jmp
cmp
test
xor
test
inc
sahf
shll
mov
dec
psubd
cmp
pusha
push
xor
popf
or
fildll
xor
jno
mov
xor
inc
aam
push
shll
clc
mov
push
dec
cmp
jb
ljmp
mov
ja
divl
xorl
scas
or
and
lds
testb
xorb
sub
das
adc
cmp
test
pop
jo
cs
pcmpgtd
fcompl
pusha
test
mov
negl
mov
ljmp
cmpsl
push
pop
adcb
sub
mov
out
test
mov
gs
cltd
add
lcall
dec
testl
or
pusha
xor
rolb
gs
rolb
je
nop
xchg
movsb
aaa
push
test
jnp
or
cmp
mov
inc
sbb
mov
arpl
or
fs
pop
sbb
arpl
enter
jge
xor
in
arpl
nop
mov
mov
xchg
sti
fldl
sub
inc
ret
cli
jo
pop
shlb
push
dec
cltd
inc
hlt
scas
sahf
repnz
ror
pusha
pusha
es
cmp
repz
mov
shll
pop
and
xchg
stc
sub
mov
mov
imul
inc
aas
cltd
dec
push
mov
cmp
lods
add
lret
fs
and
lock
adc
ss
inc
rcl
shlb
and
xor
dec
xchg
movsl
out
mov
cmpl
pop
push
shlb
cld
adc
sub
dec
gs
fsts
mov
push
roll
outsb
push
mov
jns
push
loopne
test
inc
dec
add
adc
pop
or
mov
xor
jmp
adc
js
lods
into
xor
out
xor
ficompl
aaa
fdivp
in
loope
ficoms
push
divl
ret
inc
cmc
inc
popa
test
mov
push
pop
in
xor
test
shrl
cmp
jmp
repnz
loop
mov
dec
inc
rol
repnz
jl
push
sahf
fwait
lock
sahf
enter
dec
dec
clc
insb
daa
push
dec
mov
and
std
xor
or
xor
mov
arpl
xor
mov
int3
int3
cltd
pop
xchg
xchg
out
stos
cmp
or
mov
sub
adc
jmp
xchg
pop
jb
mulb
push
loopne
mov
stc
sbb
xor
mov
andl
xchg
mov
mov
mov
lods
cmp
rcl
add
movsb
cmp
lret
inc
mov
and
lods
fidivrs
aad
and
xor
out
jp
sbbb
sub
push
mov
outsl
cmp
adc
and
lods
dec
xchg
sbb
jp
push
or
lcall
int3
scas
sub
out
xchg
in
or
cmc
sub
inc
jl
adc
push
sahf
outsb
loopne
push
jge
cmc
test
xchg
pop
iret
mov
das
mov
addl
lret
das
pop
pop
inc
dec
fwait
jecxz
mov
pop
shrl
imul
fadd
fucomp
insb
dec
rorl
pushf
mov
fidivrs
adc
loope
cmc
popa
sbb
lahf
adc
and
test
nop
xor
cmpb
and
test
cmp
and
mov
sub
and
mov
xchg
cmp
cmp
pop
out
cmp
stc
bound
punpckhdq
mov
jp
adc
sbb
jns
jo
add
push
movl
or
movsl
out
and
popf
in
in
xchg
adc
test
or
and
mov
inc
jae
inc
jbe
imul
pop
add
mov
les
push
xlat
call
push
push
pop
lret
push
mull
xchg
jbe
jecxz
out
push
xchg
add
fcomi
jb
fisttps
jb
push
std
push
fsubs
add
movsl
in
jb
ljmp
popa
mov
pop
adc
cmp
dec
pop
cmp
test
aaa
mov
lea
inc
mov
sbb
clc
push
clc
daa
sub
mov
leave
xchg
add
or
dec
lds
ss
rcl
adc
jae
push
adc
mov
sar
ja
dec
mov
pop
jo
mov
loopne
add
xor
leave
ss
add
repnz
test
inc
inc
je
fbld
cmpsl
loop
inc
mov
frstor
dec
xor
and
xchg
ficompl
or
icebp
push
push
push
repz
xor
cmp
stc
sti
clc
data16
rcl
in
fldenv
push
and
xorb
test
and
orb
loopne
test
push
jle
in
dec
out
mov
lahf
into
mov
sub
mov
clc
adc
test
in
xchg
insl
sbb
cmpsl
push
clc
cwtl
enter
sbb
scas
test
inc
cmp
mov
fnstenv
lret
imul
jo
repnz
push
adc
jo
cmp
add
shl
cmpsl
mov
xchg
pop
mov
bound
sbb
jnp
in
push
adc
fcoml
xor
je
outsl
lcall
ret
add
dec
add
mov
repnz
and
sbb
or
jge
adc
and
divl
mov
call
adc
xchg
fs
inc
add
or
lret
out
and
xor
jae
xchg
xchg
loopne
and
test
adc
lock
cmp
mov
jae
or
mov
and
lea
scas
cwtl
and
rcrl
and
cmpsl
dec
cmp
adc
ja
xor
and
lods
jp
mov
push
fbld
pop
xor
lret
mov
test
lods
dec
push
xor
insb
out
imul
leave
imul
jp
arpl
mov
mov
xchg
jae
push
lret
xchg
incl
data16
xchg
cmp
fidivs
int3
pusha
mov
inc
jg
pusha
in
mov
mov
cmp
fadds
and
jno
clc
ret
out
enter
mov
add
xchg
lods
scas
xor
fnstcw
lods
call
dec
add
sahf
dec
xlat
dec
shlb
xor
ja
popf
sub
dec
mov
iret
mov
push
xchg
mov
rorl
inc
mov
dec
mov
out
hlt
mov
dec
dec
sbb
sub
shlb
jg
and
mov
arpl
jmp
dec
call
push
mov
sub
dec
pop
shl
inc
addl
fs
dec
pop
dec
pop
rorl
stos
into
jno
push
push
pop
inc
into
les
cmc
dec
add
push
mov
and
mov
and
int3
outsl
adc
imulb
jbe
sub
sbb
lods
leave
lods
lcall
and
out
add
rol
cwtl
xchg
jl
cmpsl
fwait
push
fs
mov
or
mov
inc
adc
sarb
sub
mov
dec
jecxz
clc
loop
mov
push
sarl
out
hlt
dec
icebp
add
loopne
movsl
xor
cmp
and
pop
push
sbb
fcmovu
repnz
and
ds
xchg
inc
mov
mov
and
int3
mov
dec
push
and
push
or
test
push
insb
imul
pop
mov
sqrtps
sbb
push
iret
jb
dec
adcb
cmpsb
ss
lods
gs
testb
xchg
js
idiv
lahf
dec
pop
sub
lods
pop
cs
mov
sub
into
inc
icebp
push
or
inc
add
or
mov
das
mov
imul
jnp
or
add
sub
cld
leave
aaa
fcompl
mov
adc
or
outsb
nop
cld
mov
mov
aad
push
fcmovne
xchg
cmpsl
xor
insb
out
mov
movsb
mov
nop
mov
xor
std
push
pop
sbbl
fisttpl
loop
xchg
mov
mov
mov
inc
jnp
sub
stos
xor
movsl
roll
xor
fsubl
mov
loope
adc
xlat
div
daa
inc
xor
jge
imul
lret
cmp
dec
minps
lds
mov
insb
out
inc
mov
dec
push
mov
cwtl
int
jae
jl
cmp
in
test
fwait
out
jns
inc
mov
and
mov
xor
insl
sbb
notl
movsl
rol
sbb
les
cmp
insl
push
xchg
hlt
pop
jb
stc
pop
lds
aaa
inc
popa
push
inc
bnd
and
fadds
fistpll
push
cld
xor
jb
push
sbb
xchg
cld
push
lahf
xchg
adc
xchg
jnp
pop
cmp
dec
iret
push
int
adc
and
mov
mov
aam
sub
test
cltd
inc
xor
sub
insb
cmpsl
xlat
jle
adc
jb
xchg
adc
stos
jle
cli
rclb
push
fld
cmp
sbb
pop
ret
loop
pusha
jl
mov
jb
int
daa
imull
adc
in
mov
testl
mov
jo
cli
fbld
in
sti
add
sbb
jne
jae
mov
into
pop
pop
add
or
jnp
cmpsb
aas
xor
ret
cmpsl
mov
hlt
mov
stc
pop
or
das
outsl
loop
xchg
add
in
mov
shll
lea
dec
gs
push
push
or
imul
arpl
jmp
lds
dec
dec
lds
push
mov
pop
xor
or
scas
push
push
outsl
jno
adc
sub
mov
xchg
mov
fidivl
sbb
push
cltd
sbb
pop
xor
sbb
clc
push
jne
lods
sub
mov
je
mov
xchg
das
cmpb
hlt
mov
gs
test
mov
xchg
testb
outsb
out
inc
das
js
pop
fisttps
xor
add
jo
cmc
stc
int
jmp
dec
into
cld
insb
mov
fwait
mov
xorl
pop
fwait
aas
xchg
mov
arpl
std
xchg
int3
inc
aad
or
and
mov
dec
repz
inc
dec
mov
decl
pushf
xchg
imul
jno
and
aad
lahf
and
mov
cmpsb
sbb
sub
and
in
shlb
jnp
lcall
xchg
aad
push
fcomps
mov
adc
mov
inc
mov
cmp
adc
adc
insl
and
ds
stc
in
mov
mov
scas
repz
sti
cmp
call
sub
jae
imul
imul
aas
jbe
sub
mov
fwait
mov
xchg
lods
rclb
pop
cmc
leave
pop
inc
mov
xchg
jmp
adc
or
cwtl
sarb
insb
jmp
sub
sbb
out
stos
imul
loop
dec
adc
fimull
cmp
out
loopne
jl
movb
in
int3
sub
cmp
sbb
outsl
jmp
idivb
xchg
sub
cmc
pop
pop
xchg
arpl
mov
faddl
sub
mov
mov
push
pop
or
jno
jno
mov
mov
lret
sub
and
adc
cmpsb
xchg
mov
inc
cmp
imul
lret
mov
jno
xorl
jne
sbb
inc
sti
outsb
push
adc
nop
les
imul
lds
std
cmp
sbb
orb
mov
pusha
mov
pusha
out
insb
cmp
ds
pop
stos
or
xlat
cltd
decl
dec
scas
inc
cmp
and
aam
sub
fiadds
xchg
shl
xchg
add
sub
dec
stos
sahf
lds
jae
or
xchg
je
ds
mov
lcall
push
lcall
loop
lret
lods
sub
mov
into
fstpl
xor
and
in
pop
inc
add
cmp
add
mov
pushf
into
lods
call
cs
inc
or
xchg
sbbl
pop
movl
dec
sub
and
movsl
jno
imul
out
cmp
and
mov
cmp
insl
dec
jle
out
push
inc
sub
cwtl
sti
ret
pop
add
cmpsb
and
loopne
lock
xor
and
xor
addb
shlb
add
cld
pop
add
lds
push
jnp
in
in
add
adc
lods
std
aad
mov
pop
xchg
dec
fisubs
pop
push
xor
xor
sub
jle
pop
cmpsb
jge
jecxz
addb
inc
jmp
in
mov
aaa
sahf
cmpsl
ds
das
clc
mov
pop
cmp
inc
fwait
xchg
mov
scas
leave
cs
xorl
inc
imulb
cmp
adc
es
icebp
outsb
sbb
shlb
push
xchg
js
xchg
inc
inc
in
jp
std
inc
or
aam
adc
or
ljmp
push
jge
sti
pop
aas
jecxz
xchg
mov
xchg
push
inc
sbb
cmp
mov
pop
andb
imul
incb
jo
sbb
pop
and
pushf
bound
lods
ret
add
iret
jg
push
sub
idivl
sub
sbb
mov
jno
in
mov
mov
int3
ficoms
stos
cmp
inc
adc
enter
jb
insl
test
shll
dec
insb
jne
dec
xor
sahf
xchg
xor
mov
jl
popf
mov
mov
cs
mov
outsl
in
dec
into
adc
dec
fsubs
cwtl
cmp
cmc
xchg
daa
sbb
dec
mov
loop
xor
sahf
cs
imul
inc
inc
mov
jne
cmpsb
adc
lret
mov
fsubrs
pop
fcmovb
in
es
push
fsubrs
xchg
stc
cltd
adc
mov
arpl
clc
pushf
ret
lea
cltd
mov
dec
sahf
xchg
xor
sbb
push
test
stc
clc
filds
mov
in
in
mov
bound
xor
cmc
stos
outsl
jbe
sahf
in
fists
xchg
xchg
jg
xchg
xorl
inc
test
mov
stc
lahf
xor
push
inc
int3
js
sti
scas
loop
dec
in
addr16
xor
mov
lcall
add
mov
repz
aad
jae
push
mov
push
xor
sub
pop
inc
dec
outsl
xchg
scas
movsl
call
xor
cltd
dec
push
add
push
lahf
leave
inc
in
shrl
or
jmp
jg
loope
inc
lds
imul
mov
add
and
fimull
xor
std
js
test
inc
addb
mov
mov
push
adc
adc
add
cli
ss
pop
inc
or
or
test
cmp
xchg
push
sub
fildll
push
inc
dec
sub
jns
mov
cli
mov
pop
aad
xchg
dec
and
out
aaa
cltd
enter
mov
fists
mov
imul
mov
add
out
movsl
add
jno
mov
mov
push
sahf
ss
leave
mov
adc
mov
or
clc
fsts
loop,pn
jbe
jmp
mov
mov
test
popa
pop
je
cmp
pusha
adc
dec
mov
les
insb
rcrl
xor
jae
lock
fs
rorb
test
gs
lahf
mov
test
rcll
leave
fstpl
pushf
shll
loopne
je
lods
mov
and
lods
imul
inc
dec
jl
arpl
add
jae
adc
pop
popa
sbb
stos
add
dec
lock
xchg
sbb
pusha
fs
les
push
stc
jb
inc
sub
or
fcomps
jg
pop
je
inc
xorb
jg
ret
adcb
jle
mov
and
mov
xchg
sub
mov
inc
inc
cld
sti
pop
int3
outsb
in
mov
ret
lods
js
decl
rol
lds
push
sarb
xor
xchg
and
or
mov
push
mov
repz
jne
and
in
imul
mov
movsb
cli
mov
xchg
adc
std
xor
les
and
loope
loope
push
lock
jecxz
mul
das
inc
addr16
xor
add
mov
jnp
test
cmpsb
xor
aaa
movsl
mov
sti
iret
pop
aaa
ljmp
push
pop
xor
cmpsb
dec
cmp
in
lahf
aam
ss
pop
or
jmp
xor
sbb
push
push
repnz
xchg
mov
jns
mov
mov
push
inc
or
push
pop
mov
lahf
xor
add
mov
outsb
ljmp
arpl
dec
test
arpl
leave
popf
jle
iret
adc
test
mov
out
je,pt
rcll
shrb
push
inc
sub
dec
add
clc
push
scas
ljmp
jge
daa
out
push
scas
cmp
fcoml
mov
xchg
scas
lods
sub
adc
inc
xchg
shrb
mov
mov
mov
scas
cwtl
adc
loop,pt
addb
mov
out
mov
std
insb
popa
and
rcrl
pop
mov
jne
aam
push
xchg
push
mov
cwtl
lods
sub
mov
mov
lahf
push
cmpsb
shrb
stos
jg
xchg
cld
ds
or
cmpsb
push
popf
cmp
adc
lock
out
mov
outsb
ficoms
test
out
loopne
mov
xchg
cmpsb
into
xchg
adc
adc
loop
out
loope
xor
inc
das
test
dec
sub
mov
push
inc
jae
dec
dec
test
push
vpavgw
pushf
jo
insb
gs
and
mov
test
iret
outsl
mov
sub
outsl
out
dec
jmp
mov
in
jecxz
enter
scas
stos
fwait
adc
ja
cmp
mov
sbb
inc
xchg
pop
or
sbb
jns
lret
dec
dec
mov
mov
cmp
aas
push
popa
test
sub
mov
push
bnd
and
push
mov
adc
cmpsb
lret
xchg
cmp
test
sbb
mov
dec
outsl
cli
sbb
sbb
subl
adc
sub
cli
loope
push
lods
test
xor
or
int3
pop
inc
js
and
std
mov
cltd
into
mov
nop
jge
int3
test
test
push
fsubr
mov
cli
mov
jle
pop
push
pop
ja
jge
pop
xorl
icebp
lret
mov
pop
mov
push
ja
add
cmp
xchg
inc
imul
aad
xor
out
sub
push
jns
mov
push
or
or
adc
int
pop
fbld
jmp
dec
popf
or
mov
enter
xlat
fdivrs
test
addl
inc
adc
mov
cmp
and
mov
sbb
add
push
fcompl
add
xor
sub
mov
mov
ficomps
jge
dec
inc
or
and
and
hlt
insb
clc
out
jns
lea
xchg
pcmpgtb
pop
xchg
ja
test
notb
shr
xor
stc
shll
lret
fadd
icebp
sub
ljmp
xor
rorl
jo
cli
imul
adc
jne
out
into
rolb
fiaddl
cs
inc
nop
push
in
ret
pusha
ret
inc
cmc
sbbb
add
pop
jno
shr
std
cmp
mov
shlb
scas
repz
adc
lds
push
in
lea
test
add
shrl
xor
je
inc
rorl
mov
inc
sbbb
pop
add
lret
outsb
xor
outsl
sub
ja
jnp
pop
or
xchg
data16
mov
pop
out
dec
cmp
cmp
push
aad
addl
pop
add
dec
sbbb
mov
jge
cmp
mov
sub
fldt
in
js
jno
xor
and
fcmovnu
sbb
movl
and
data16
ss
ja
es
xor
divl
insb
fcmovb
add
add
xor
mov
das
push
pop
stc
lret
imul
arpl
movq
cmc
std
and
iret
dec
add
add
test
aam
mov
push
cmpsl
popa
jle
push
popf
cmp
out
cmp
pop
jbe
inc
fucomip
les
stc
mov
ror
lcall
cmp
add
xchg
nop
sbb
mov
jle
aaa
outsb
mov
mov
ds
adc
cmp
adc
addr16
xchg
sbb
xchg
gs
ret
or
cmp
mov
mov
loopne
imul
sbb
xchg
cmpsb
and
cwtl
cmp
dec
mov
cld
mov
mov
ss
enter
mov
call
and
jle
xlat
in
fmulp
ficoms
adc
iret
sti
jl
nop
aaa
pop
push
fwait
dec
push
dec
es
in
pop
cmp
pop
ljmp
inc
test
jns
fistl
and
test
pop
mov
pop
addr16
ret
pop
je
imul
dec
fcomps
push
pop
fs
outsb
xor
adc
mov
push
mov
inc
and
add
lret
test
jnp
leave
lds
pmulhuw
fisttpll
fidivrl
push
mov
outsb
cmp
sub
cmp
dec
fisubrl
sbb
or
xchg
cs
imul
addl
icebp
ja
je
push
jge
mov
xchg
out
aad
jp
in
mov
add
loop
add
lods
mov
scas
dec
sbb
mov
cmp
pop
jno
iret
jo
lret
cmp
pushf
roll
push
movsb
es
lret
test
or
insb
xchg
push
push
cld
or
mov
jns
sbb
sub
adc
jp
into
and
outsb
fidivrl
push
fisttpll
push
adc
dec
push
arpl
pop
movhps
jmp
ljmp
inc
leave
sub
call
insb
sti
andl
pusha
cli
jecxz
addr16
or
shll
push
scas
cmp
cmpsb
aaa
mov
inc
cli
and
shll
arpl
jnp
push
xor
dec
jle
fbstp
inc
push
jae
push
loope
jb
cmp
sub
sbb
xchg
add
stos
dec
addr16
mov
fisubrs
popa
dec
aaa
stos
testl
pusha
pop
jmp
icebp
or
mov
inc
sahf
das
aas
hlt
mov
fldenv
test
and
pop
xchg
pop
loope
mov
adc
fcompl
jl
lcall
jecxz
pop
mov
jmp
movsl
shll
jl
jp
mov
sub
icebp
xchg
cmpsl
sbb
add
repnz
mov
in
cmpsl
and
mov
ret
cmp
mov
inc
test
add
cld
xchg
xor
std
in
pop
xor
and
js
cmpsl
stc
fidivs
inc
shl
gs
out
lods
stc
cwtl
aad
add
imul
sar
pop
mov
in
adcb
ljmp
addl
pop
cmp
ja
pop
mov
xchg
orl
and
cwtl
int
leave
dec
stos
lret
mov
sti
push
mov
arpl
inc
xchg
or
dec
pop
pop
mov
push
loope
fcomip
or
or
int
mov
bound
std
and
movsb
xchg
rcll
fstps
pop
insl
lea
bound
bswap
mov
sbb
mov
xlat
pop
es
and
mov
mov
ja
mov
les
inc
lcall
mov
mov
fimuls
mov
es
pop
lods
outsl
cmp
adc
testb
aaa
jns
lods
push
and
dec
sbb
push
int
add
jns
lret
add
adc
test
loop
mov
or
insl
inc
or
cs
inc
pop
xor
aad
adc
adc
pop
fsubs
in
in
push
mov
fstl
jae
mov
xlat
loopne
dec
scas
jae
cwtl
or
jne
inc
pop
mov
mov
jle
cwtl
mov
xlat
test
mov
js
dec
pop
push
inc
cmp
or
mov
sub
lock
dec
cmc
pop
add
mov
inc
in
add
jp
lret
negb
aaa
xchg
popa
inc
icebp
mov
push
dec
push
shll
mov
pop
adc
xor
pop
and
add
jo
andb
data16
insl
orb
stc
jle
sbb
movsb
call
jne
cs
adc
mov
push
pop
xchg
jns
repz
sub
or
mov
inc
data16
mov
inc
iret
push
daa
sbb
cld
fdiv
mov
ret
xor
sub
orb
and
outsl
out
xchg
stos
sbb
add
jmp
scas
mov
movsl
fnsave
lcall
pop
pop
jno
shll
push
daa
xor
loop
movsl
jbe
rcrl
push
mov
stos
jmp
pop
shl
outsb
cmp
pop
push
mov
inc
sbb
sub
jb
sbb
jle
xor
in
and
shlb
lods
mov
and
out
mov
xchg
fptan
adc
jb
pop
scas
ret
shl
loop
int3
adc
mov
jl
icebp
xor
sub
movsb
ret
lods
shrb
and
imul
pop
cli
mov
insl
cmp
out
xchg
adc
loop
addr16
jne
xchg
push
xchg
test
mov
mov
dec
push
pusha
cmp
fs
and
fisubs
push
fisttps
mov
int3
pop
mov
hlt
dec
inc
or
mov
cmpsb
mov
push
mov
pop
or
jl
jg
and
mov
and
subl
push
into
xchg
push
lods
push
mov
jecxz
scas
pop
sub
xchg
roll
cmp
std
jle
inc
dec
push
mov
xchg
xchg
rcl
jp
mov
add
push
inc
push
sbb
mov
insb
test
enter
idiv
scas
pusha
int3
jae
mov
ljmp
and
mov
jecxz
push
pop
mov
in
xchg
adc
fnclex
sub
mov
push
mov
test
fimuls
movsb
out
ja
les
jno
lret
rcr
xor
pop
mov
fwait
add
jno
xchg
mov
add
inc
xor
sub
mov
mov
clc
loope
or
stos
ret
xor
xchg
nop
pop
push
jmp
cmc
cs
xchg
add
fcoml
xor
xchg
and
mov
lods
imul
sbb
dec
push
push
mov
xchg
sbb
mov
lret
xchg
sbb
xor
test
imul
jmp
xchg
adc
out
push
add
or
jbe
aas
mov
xchg
xor
pushf
int
jl
cwtl
stos
inc
inc
popf
adcl
in
sub
adc
cmp
sbb
inc
adc
movsl
push
test
jmp
imul
pop
negb
jb
lahf
xchg
rorl
bound
ja
adc
or
loopne
mov
and
push
out
jno
lea
push
out
jbe
aam
aam
fldt
popf
adc
sbb
fiadds
jne
call
loop
xchg
mov
jbe
cmp
add
cmp
pushf
in
js
add
jl
ja
fs
insb
pop
stos
cmp
dec
fadd
insl
xor
mov
add
ja
test
cld
movsl
sbb
icebp
mov
and
xor
inc
xlat
add
add
fdivrs
fisttps
cs
in
push
or
lods
out
pop
mov
xlat
sub
inc
and
pop
ret
add
push
iret
leave
mov
xor
jge
sub
aad
int3
mov
inc
rdpmc
xor
or
xchg
sub
mov
fisttpl
rorl
sbb
jnp
sub
rolb
adc
repz
out
inc
xor
js
or
inc
push
popa
push
rcll
inc
add
mov
ja
aam
mov
stos
decb
shr
rcll
ret
rclb
cld
sbb
out
call
jne
mov
xor
popa
and
outsl
add
rclb
pusha
out
pop
jnp
lock
push
ret
xorl
aaa
pop
and
sbb
movsb
mov
aaa
bnd
rcll
dec
in
out
insb
pop
push
cld
dec
sahf
in
imul
push
cwtl
pop
and
adc
addr16
mov
aam
stos
jmp
cmp
dec
cmp
aad
or
mov
add
lret
and
xchg
push
xor
gs
in
bound
cmp
pop
aam
xor
push
sti
in
lea
subb
and
sbb
aaa
jns
mov
rorb
repz
rolb
rorb
test
jle
or
pop
push
xchg
adc
push
xchg
and
jo
jmp
je
and
jp
add
das
mov
repnz
rclb
stc
add
mov
or
and
jle
cmpsl
push
imul
mov
out
int
imul
jecxz
xchg
or
dec
sub
mov
or
sub
mov
into
insb
pushl
pop
sbb
int3
or
mov
sbb
xor
sub
pop
xchg
aas
popf
dec
pop
stos
ss
int3
add
cmp
arpl
repnz
stos
xor
and
mov
fs
jns
cmp
jl
push
or
xchg
mov
or
xor
mov
iret
ljmp
stos
mov
shr
in
lods
add
sub
jo
test
mov
hlt
jo
mov
push
pop
lret
sbb
push
inc
cmp
cmp
out
dec
je
pop
inc
dec
inc
in
lea
rolb
fst
xchg
xchg
sti
repz
xchg
and
dec
int
rcrl
xor
mov
mov
iret
mov
loope
lods
movsl
bound
jg
fidivl
add
mov
pop
or
sahf
lahf
clc
pop
jecxz
outsb
stc
imul
cmc
mov
add
xor
pop
sbb
dec
push
sbb
sub
sarb
xlat
loope
mov
mov
adc
leave
fstps
xor
orb
call
pusha
inc
add
cmp
fldl
mov
mov
sahf
mov
dec
aaa
bsf
cmp
dec
pop
jae
mov
xchg
aaa
push
repnz
scas
or
mov
cmp
jp
data16
fwait
adc
shl
mov
xor
das
push
and
movnti
cmp
aas
mov
ret
push
shlb
testl
sbb
pop
shrb
mov
mul
repnz
pop
and
xor
mov
sub
push
sbb
ljmp
sbb
mov
test
add
cmp
fisttpl
mov
enter
js
aaa
xor
fs
cltd
sbb
lcall
jbe
cs
aam
pop
push
sbb
jge
xchg
std
mov
pop
mov
inc
and
negl
and
hlt
inc
jmp
xchg
mov
jnp
xchg
xchg
pop
mov
push
mov
cli
lds
pop
iret
xchg
adc
and
adc
inc
mov
mov
out
inc
fdivl
add
in
test
add
or
mul
mov
fists
adc
sbb
inc
or
jge
inc
add
dec
mov
fwait
dec
in
div
pop
xchg
fcmovbe
sub
cmp
lret
out
mov
cmc
inc
mov
scas
xor
test
jnp,pt
xchg
nop
loope
mov
fidivrs
mov
popa
arpl
jmp
cmp
sbb
fcompl
or
push
push
leave
dec
mov
mov
jl
xlat
mov
ret
inc
iret
jo
sbb
xor
fs
call
jns
mov
loopne
ret
iret
roll
aas
adc
fcompl
fmull
cwtl
sti
xchg
xor
arpl
outsl
adc
mov
mov
push
sbb
notb
ficompl
ret
xchg
add
in
and
cmp
test
pop
cmpl
mov
lcall
push
cmp
lock
loope
inc
outsl
std
outsb
sbb
cld
mov
out
lret
fwait
negb
fnstsw
xchg
mov
out
xchg
jl
mov
xchg
jl
mov
jns
adc
jle
pop
fbld
shrb
push
stc
sub
shl
aas
sbb
and
adcl
mov
mov
adc
arpl
xchg
sbb
or
mov
hlt
mov
popf
cltd
movsl
inc
sub
stos
cli
xlat
mov
hlt
xchg
popa
shlb
or
push
cld
xchg
lock
or
aad
mov
cmpsl
inc
sbb
lret
mov
xchg
das
adc
xchg
shlb
push
xor
imul
roll
and
addr16
mov
daa
vmovntps
sbb
xor
jbe
cmp
movsb
push
or
stos
insb
rorb
lods
push
insl
aam
imul
rorb
mov
mov
push
and
in
xchg
jnp
xor
xor
stc
ficoms
mov
inc
and
daa
test
inc
fcomps
or
xchg
ret
pop
push
cmp
test
cmp
hlt
hlt
lret
mov
inc
ljmp
roll
xchg
jle
and
adc
movsb
pop
inc
pop
push
or
pop
test
dec
jns
in
push
fsts
push
pop
mov
gs
pushf
sbb
dec
clc
sub
push
cmc
mov
jge
xchg
xor
lcall
adc
inc
sbb
dec
fisttpll
sbb
jg
push
mov
fs
pop
adc
popf
icebp
cmpsl
dec
inc
aaa
xchg
fwait
cmp
mov
into
int3
stos
test
xchg
mov
sbb
jmp
dec
outsl
mov
outsb
jg
sbbl
insl
aas
out
out
leave
jnp
cmpsl
add
mov
mov
inc
arpl
cmp
leave
pop
fwait
int
pop
pushf
jnp
shll
cwtl
insl
stos
xchg
jns
pop
mov
int
push
int
add
cmp
js
cmp
jge
mov
lcall
mov
sbb
pop
imul
xchg
dec
stos
and
xor
mov
cmp
adc
mov
sti
adc
push
lods
or
jmp
mov
adcb
or
pushf
punpckhbw
dec
dec
sub
daa
shll
push
mov
inc
pop
call
in
add
adc
jp
push
mov
sub
in
pop
xor
negb
jno
jmp
dec
lret
sbb
jecxz
and
jg
push
or
int3
xor
test
xor
icebp
pushf
inc
lret
add
push
dec
in
adc
sbb
xchg
stc
cmp
aam
mov
xchg
arpl
out
jmp
movsb
adc
adc
insb
push
jns
sbb
pushf
neg
int3
in
mov
test
mov
add
push
dec
bnd
cmpsb
push
or
jns
aad
push
inc
cmc
push
pop
mov
mov
push
push
enter
fs
fcomps
jge
loopne
nop
inc
and
pop
mov
inc
jge
mov
mov
xchg
fldl
es
ret
pusha
out
shrl
test
or
push
fs
shll
imul
mov
sti
imulb
xor
mov
pop
dec
pop
mov
mov
jno
fidivs
and
repnz
mov
lods
adc
and
sub
mov
adc
movsb
rcrb
push
sbb
dec
fwait
pusha
or
lret
xchg
int3
xchg
mov
mov
dec
mov
jg
add
cmpsl
into
jmp
loope
and
add
sbb
push
push
and
lods
add
mov
xchg
fisubs
push
stos
das
xchg
int3
jl
jno
pop
inc
mov
xchg
je
mov
and
xchg
pop
leave
sbb
dec
xor
or
addr16
jb
loopne
mov
inc
test
mov
scas
adc
cmp
sbb
jg
xlat
cmc
mov
mov
jns
xlat
mov
cltd
lock
push
sbb
aam
mov
dec
adc
inc
jne
and
sbbb
fnstenv
lcall
ficoml
push
mov
jbe
pop
fcmovu
iret
cltd
cmp
decb
gs
sti
out
test
jo
bound
dec
push
and
mov
dec
add
push
ss
in
dec
mov
ret
mov
jp
lret
mov
pop
lods
jo
andb
hlt
cltd
mov
std
cmp
mov
ss
adc
in
ret
mov
cmp
stos
and
fcomp
push
and
test
unpcklps
pushf
popf
mov
push
outsl
cmp
enter
scas
cli
cli
subb
sub
cmc
test
pop
arpl
sbb
xlat
dec
inc
daa
aam
pop
repnz
in
mov
aaa
mov
je
lret
loop
testl
lods
push
add
jb
es
mov
jle
adc
daa
rorl
mov
jmp
push
inc
sbb
mov
pusha
inc
sbb
add
xrelease
dec
jne
adc
mov
sbb
mov
icebp
mov
xchg
jmp
lret
in
xrelease
repnz
cmpsb
subl
mov
xchg
cmpsb
and
imul
aam
dec
insl
jle
inc
mov
dec
jne
ret
jp
adc
or
aad
pop
out
push
mov
ret
cmp
adc
insb
lahf
adc
jb
lret
xor
lcall
fcoms
call
pop
push
sbb
test
xchg
pop
cs
gs
imul
bnd
inc
mov
outsl
loopne
lock
jg
mov
sbb
stc
jae
fcoms
sub
push
out
sti
mov
popf
or
mov
scas
cltd
icebp
cli
pop
add
scas
jns
cmc
mov
cli
mov
js
sahf
inc
lods
and
jo
cwtl
aas
mov
adc
jbe
xchg
popa
or
fwait
leave
push
out
arpl
nop
in
inc
mov
jae
inc
inc
jno
test
sbb
add
xchg
xchg
das
out
sub
out
dec
mov
inc
xor
loop
imul
pop
mov
loop
daa
mov
popa
fcmovbe
fnstsw
ljmp
push
out
ss
cmp
aad
and
push
negl
add
pop
fwait
push
and
xchg
sbb
push
pop
in
call
or
xor
inc
mov
lret
jge
data16
push
out
out
push
jnp
out
mov
mov
pop
cmp
mov
addl
roll
cmc
cmp
repz
divb
sti
je
jbe
pop
icebp
sahf
or
data16
leave
mov
jmp
fldcw
nop
sahf
mov
inc
rcr
xchg
or
mov
pop
xor
mov
cmpl
outsl
push
clc
xchg
cmp
or
cld
ss
mov
sub
jns
cmpsb
ret
adc
adc
push
scas
push
sub
out
sar
nop
adc
fistpl
pop
pop
mov
mov
icebp
lret
cli
cmp
adc
mov
pop
mov
shl
adc
push
or
iret
adc
out
sub
jl
push
ja
or
int
rcrl
push
inc
icebp
movsb
sahf
repz
clc
decl
push
in
push
outsb
loopw
setb
sub
jecxz
mov
lret
icebp
fwait
push
push
movsb
pop
fucomp
jp
pop
leave
data16
out
sbbl
mull
insb
sbb
xchg
mov
lret
stc
outsb
shlb
mov
dec
insl
out
lea
sbb
jge
jne
sbb
stos
xor
shrb
jle
mov
test
pop
dec
and
pop
mov
fdecstp
xchg
cmp
pop
in
cmp
xor
pop
inc
stos
fldcw
mov
or
cwtl
pop
movsb
icebp
xor
cmp
sbb
inc
dec
mov
xchg
pop
movsl
cwtl
add
xchg
dec
or
xchg
int
sbb
push
out
mov
or
sub
sub
inc
js
insb
inc
or
fdiv
sahf
mov
fmuls
stos
fdivs
iret
js
mov
mov
daa
push
or
mov
shll
in
ret
mov
xor
sahf
xchg
mov
sbb
cmpsb
or
pop
movsb
in
push
test
clc
jg
sbb
ds
or
sbb
call
movl
jno
aas
fiadds
xchg
xchg
mov
sbb
inc
shlb
enter
add
jbe
cmpsl
jmpw
xchg
stos
andl
mov
ret
lea
and
jmp
subps
sub
pop
js
inc
xchg
cmpsl
scas
inc
or
roll
lea
ss
xor
jo
jbe
aas
adc
mov
call
pop
ljmp
cmp
icebp
frstor
fsubl
sbb
les
out
out
push
sbb
dec
xchg
adc
mov
push
mov
divb
adc
push
dec
aas
add
cltd
ficoml
jle,pn
fnstcw
cmc
adc
pop
cmp
repz
jbe
inc
cmpsb
jae
jae
dec
aad
aas
mov
jg
mov
adc
sbb
cmp
leave
nop
ja
add
in
pop
rorb
lock
jge
xor
mov
push
out
shrb
mov
arpl
in
dec
mov
punpcklbw
or
sub
sbb
ficomps
negb
jle
stc
in
ficoml
inc
nop
or
mov
mov
into
xchg
sub
jae
push
sub
nop
or
test
cmp
loop
cltd
in
sub
mov
movsl
xor
mov
jae
addb
rcrl
pop
adc
ss
int3
roll
cmp
xor
lahf
jg
jp
fldcw
cmp
jmp
or
add
lods
xor
popf
sub
and
je
lret
or
mov
adc
pusha
out
xor
xor
xor
addb
ljmp
in
js
rcrb
add
adcl
push
jp
mov
dec
fsubp
cs
pop
outsb
push
movsl
mov
loope
mov
pop
push
jns
in
push
mov
or
cli
or
or
add
push
stos
je
mov
inc
stc
cwtl
sub
xor
push
repz
daa
add
hlt
rcrb
mov
shll
mov
data16
inc
lcall
aas
leave
or
push
loop
xchg
ret
or
mov
jne
mov
pextrw
pop
adc
loope
push
xchg
inc
cltd
mov
clc
popaw
xchg
ja
cmp
push
sbb
aad
pop
mov
repz
mov
jg
jmp
lahf
repnz
es
sbb
dec
mov
in
xlat
cmpsl
fildll
xlat
stos
mov
adc
dec
fs
ss
push
xlat
jmp
jle
or
push
loope
iret
call
gs
pop
add
sub
sub
cmpsl
ficompl
gs
les
xor
xchg
fdivrl
xchg
inc
pop
cmp
hlt
loopne
cmp
push
jle
xor
pcmpgtw
bound
inc
gs
sti
insb
repnz
pop
cmpsl
dec
jle
mov
pop
mov
sahf
std
add
adc
test
push
pop
lea
mov
jnp
es
push
divb
or
test
aas
jge
mov
repnz
rclb
insl
inc
lret
insb
add
idivl
repnz
mov
popf
notl
out
pop
or
sbb
es
mov
adc
adc
fists
sub
nop
fs
pop
cmpsl
xor
mov
lea
bound
jbe
mov
bound
movsl
push
sahf
xchg
jb
out
icebp
mov
sti
inc
aaa
xchg
mov
inc
mov
testl
rcr
mov
scas
push
inc
push
dec
frstor
dec
sbb
loopne
ficompl
xchg
outsl
mov
out
adc
jae
pop
jl
scas
lock
adc
outsb
mov
sti
sub
jmp
dec
xchg
hlt
aad
mov
inc
mov
mov
addb
cld
into
jmp
in
dec
jns
add
xor
sbb
inc
mov
inc
pusha
jl
xchg
dec
jle
out
in
fs
mov
dec
xor
mov
push
push
jecxz
pop
mov
lcall
popf
scas
arpl
incb
jbe
xchg
add
test
inc
push
and
jno
xlat
mov
add
dec
data16
das
mov
jge
jae
jae
pusha
shll
add
or
ficompl
or
xchg
mov
pop
jle
cwtl
pop
test
cmp
loop
iret
add
or
ret
dec
jp
push
into
add
in
and
rcl
cmpl
outsl
out
pop
jae
xchg
xchg
mov
push
mov
loopne
cmp
ljmp
mov
repnz
jb
sti
int
sbbl
lret
and
mov
enter
and
xor
mov
xor
adc
lock
sub
jne,pt
push
lods
rorb
movsb
mov
cmp
ljmp
aam
fbstp
subl
cld
sbb
lcall
aaa
xor
push
sub
sub
lds
ret
clc
stc
mov
lock
pop
jge
sbb
jge
leave
insl
fsubrs
repz
test
mov
mov
lea
fistps
add
fwait
xor
lahf
inc
outsb
popa
dec
cmpl
jb
dec
mov
cwtl
loopne
pushl
mov
dec
xlat
lret
mov
or
and
add
pop
stc
inc
mov
sbb
or
xchg
mov
inc
loope
sbb
incb
mov
fisttpll
pop
ret
aaa
outsb
popf
adc
icebp
jl
dec
loope
xchg
push
cmpb
xor
add
dec
scas
repz
push
icebp
scas
mov
or
or
popl
int
orl
jmp
jmp
ret
out
daa
pop
jp
adc
out
fs
mov
jge
cwtl
in
jl
mov
or
cmpsb
cmc
dec
aam
cmp
lea
jmp
out
dec
add
test
repnz
fcoms
fildll
in
jle
push
imul
dec
scas
leave
or
mov
add
cld
mov
mov
aad
xchg
mov
and
mov
cmc
and
dec
dec
cld
jecxz
lods
pop
pop
pop
add
divl
dec
sbb
mov
repnz
mov
aas
test
adc
pop
fwait
or
lds
lods
out
dec
testl
pop
lahf
mov
call
sub
ret
xor
jg
test
call
inc
outsb
push
mov
mov
icebp
mov
int3
sub
movsb
mov
dec
and
cmp
cmp
cs
pusha
adc
imul
mov
cmpsl
mov
push
pushf
sahf
test
nop
into
pop
fs
fwait
pop
das
mov
jmp
adc
mov
cmp
add
dec
arpl
xor
jmp
into
jb
add
lcall
imul
mov
addb
lahf
pop
test
mov
pop
scas
xchg
mov
scas
inc
xrelease
std
cmp
pusha
xor
adc
add
outsl
dec
fnstcw
pop
pop
in
ret
push
fwait
mov
imul
or
mov
pop
sbb
cwtl
scas
popf
add
repz
movsl
cmp
cld
ret
jae
cli
jbe
xchg
jnp
out
sbb
mov
mov
popf
lret
jo
cli
gs
sbb
das
mov
lret
push
adc
inc
mov
jns
sub
mov
and
into
inc
ret
dec
data16
jle
dec
popf
cmp
xchg
cltd
or
insl
mov
xchg
rcll
dec
adc
fsubrl
xor
enter
mov
add
mov
out
dec
rcl
pop
jg
lea
iret
data16
in
ss
js
ret
fldenv
dec
cwtl
pop
or
ret
cmp
push
and
in
xor
dec
xchg
mov
in
jmp
mov
mov
jae
sub
mov
outsl
bound
jo
adc
push
lea
addr16
ja
push
xor
test
xor
inc
adc
pusha
adc
ss
in
ljmp
pop
arpl
mov
pop
test
gs
mov
in
dec
sub
out
mov
cmpsb
outsl
mov
or
sahf
loopne
mov
mov
lret
in
adc
xorb
jbe
lea
xchg
shlb
insb
cs
scas
cmpsl
jl
loopne
mov
or
and
xchg
mov
mov
sbb
xchg
pop
adc
mov
jg
adc
pop
in
jno
inc
mov
and
cwtl
in
cltd
push
stos
dec
push
adc
sub
scas
in
nop
push
shlb
insb
aad
popa
lahf
cmp
cmpsb
ljmp
mov
jb
out
lret
psubb
sub
and
rcll
in
push
xor
xchg
inc
and
rclb
cmp
mov
in
mov
xchg
out
push
fdiv
cltd
cld
xor
fs
push
loopne
push
mov
cmp
fstl
icebp
jbe
adc
dec
sub
push
daa
xchg
cmp
ljmp
xlat
addr16
pop
inc
and
outsb
leave
fadds
mov
outsb
pop
inc
js
and
cld
int
mov
or
mov
or
data16
jge
jo
nop
xor
push
das
mov
and
add
jb
mov
mov
pop
gs
sbb
and
popa
jne
add
push
call
movsb
mov
add
stos
ja
mov
jmp
or
es
rclb
adcl
mov
adcl
jo
fsts
fsubrs
incb
xchg
xchg
scas
aas
xchg
lcall
stos
mov
adc
mov
dec
lods
jle
repnz
sub
lds
leave
xchg
inc
add
mov
cmp
add
enter
repnz
and
sti
scas
cwtl
push
push
scas
fnstsw
js
mov
aam
sbb
dec
jne
stos
mov
stos
lods
cmp
pushf
jbe
sbb
pop
push
or
and
daa
mov
add
rorb
and
mov
andl
daa
loop
xor
test
mov
mov
pop
sahf
mov
sbb
les
inc
mov
dec
mov
aam
sbb
sti
enter
icebp
jge
mov
mov
addr16
incl
icebp
ljmp
mov
mov
inc
sbb
push
imul
pop
sbb
rol
xor
xchg
fisttpl
dec
ret
inc
push
int
js
pop
aam
scas
test
jmp
inc
xor
je
sahf
lock
rorb
mov
pushf
push
or
scas
call
xor
rcrb
cmp
pop
idiv
mov
jbe
fdivl
sub
fstps
mov
leave
xchg
sbb
jo
scas
cs
sub
add
shll
icebp
jo
loopne
scas
xchg
jmp
or
push
sub
ret
es
push
pop
mov
push
aam
sbb
stos
mov
bound
pushf
das
fsubrl
in
sbb
cmp
mov
push
xor
test
scas
ljmp
dec
ja
inc
add
int3
out
lock
cmc
mov
cld
mov
inc
pop
stc
imul
loopne
mov
loop
cs
repz
aaa
mov
jns
mov
inc
ja
pop
mov
mov
pop
hlt
mov
mov
xchg
mov
sti
iret
aaa
xchg
setne
push
jae
pop
or
out
jg
sub
fs
sub
dec
or
adc
mov
mov
subl
mov
nop
gs
sbb
loop
pop
add
dec
push
inc
or
in
or
aas
js
inc
rcrl
inc
rol
std
ret
outsl
add
mov
mov
push
inc
adc
add
repnz
ret
mov
rcrl
sarl
imul
mov
into
ret
xlat
push
mov
test
xchg
ljmp
adc
enter
inc
in
paddusw
ret
fadd
test
push
sbb
sub
lods
fimull
in
cwtl
or
ffree
dec
dec
pop
push
repnz
rcll
cmp
cmpl
cmp
imul
sbb
stos
ficomps
jge
movsl
cltd
or
xorl
out
fistpll
andb
cwtl
dec
test
xchg
pop
das
xchg
add
adc
fisubs
clc
cmp
jle
aaa
daa
jnp
sbb
or
test
sub
bound
rol
push
sub
mov
sbb
imul
xor
mov
cltd
scas
cmp
cmp
je
cmp
push
dec
movsl
mov
iret
into
les
jge
cwtl
or
mov
rolb
mov
aad
rolb
mov
stc
pop
inc
ja
mov
xor
mov
aaa
test
call
dec
pop
outsb
cmp
inc
inc
xor
pop
pop
push
jnp
and
ss
pop
xor
xor
inc
shr
push
inc
adc
fwait
dec
mov
jns
push
sbb
into
repz
sbb
xor
dec
aaa
clc
arpl
mov
sbb
jg
mov
add
or
inc
test
pop
test
hlt
inc
xor
stos
repz
pop
fcmovbe
pop
sub
jo
out
out
test
psubd
cmp
pop
push
lret
jns
push
ret
outsb
pop
dec
std
leave
xor
inc
es
mov
xchg
aas
sbb
mov
aaa
xor
inc
xor
loope
clc
into
or
ret
cmp
lret
fcomps
pop
cmp
ja
arpl
dec
jg
mov
es
aad
les
loopne
or
and
rcll
push
or
shll
xchg
push
lea
insb
inc
mov
es
jbe
out
cs
icebp
adc
fs
cs
dec
les
inc
gs
push
jle
sbb
add
sub
sbb
mov
adc
sub
push
xchg
std
mov
das
cmp
mov
jp
fisttpl
dec
rorl
push
imul
xor
scas
ret
mov
xchg
push
push
ljmp
sub
ja
inc
dec
inc
adcb
test
orb
push
lea
daa
add
push
jns
cmp
or
hlt
push
xchg
xchg
int
push
pop
mov
inc
jmp
movsl
xchg
fistpll
dec
out
mov
xchg
call
daa
cmp
mov
bound
lock
push
loopne
out
push
inc
ret
mov
inc
pop
leave
sbbl
mov
mov
mov
jg
sarl
enter
shr
loope
xchg
sbb
cld
dec
mov
jbe
sbb
jl
js
imul
or
lret
rcll
ret
sbb
lock
mov
or
out
imul
xor
xor
mov
jne
movsb
out
das
fists
and
adc
bound
movsl
xor
test
loop
mov
inc
sub
xor
cmc
cmp
mov
lods
push
dec
mov
mov
xchg
add
push
test
pop
pop
jmp
adc
jo
jno
xchg
movsb
imul
in
add
test
and
cmp
test
cmpsl
repz
cmp
sbb
pop
int
popf
adc
pusha
mov
andb
int
xor
out
sub
shll
insl
push
sub
sar
mov
in
lcall
push
push
cmp
out
sbb
fidivrl
mov
sub
jb
repz
sahf
fsubl
lahf
fldt
sbb
push
popl
cmp
ja
sub
push
xchg
add
out
inc
inc
inc
add
xchg
popa
xchg
stos
fcoms
outsl
popf
ljmp
movsb
repz
aad
jl
out
cmp
xchg
mov
data16
push
sar
pop
pop
sub
xchg
sub
movsl
and
repz
pop
sbb
pop
fisttpll
test
test
lret
sahf
movsl
lea
jb
xlat
and
cld
pop
pop
mov
inc
int
pop
rorl
imul
add
sbb
fbstp
sbb
in
mov
ret
and
xor
push
fwait
jnp
fs
lret
aas
push
fldl
mov
lea
jbe
stos
push
stos
lahf
mov
mov
cmp
cwtl
add
cld
loop
pop
mov
roll
cmp
pop
imul
aas
out
cmp
pusha
pop
push
mov
dec
and
daa
sbb
addr16
push
cmp
loop
fidivrs
iret
shl
es
test
push
xor
pop
push
gs
repnz
mov
pop
jle
fdivl
mov
cmp
xchg
mov
dec
mov
xchg
test
push
adcl
in
add
cmpsb
cmp
decb
loope
mov
outsb
pop
daa
loopne
cmp
jl
jno
mov
mov
push
mov
xlat
mov
jb
inc
outsb
or
and
filds
or
mov
xor
or
scas
add
xor
wrmsr
inc
lahf
adc
push
testb
inc
daa
fdivs
pop
inc
rol
fwait
inc
cld
add
push
mov
cltd
cmpsb
ss
pop
out
testl
das
cmpsb
rcr
popf
mov
mov
cwtl
xchg
ret
dec
loope
or
data16
stc
cld
mov
adc
ficoms
and
cmpsl
hlt
inc
or
lret
jmp
adc
jno
sub
xor
loopne
or
xchg
outsb
mov
dec
or
cmc
pop
test
push
mov
jo
cmp
mov
out
adc
and
insl
sub
cltd
and
or
fldl2e
xchg
fsubrl
lcall
lret
adc
imulb
data16
xchg
scas
in
xor
pop
cmpl
mov
mov
es
dec
and
jns
push
popa
int3
pop
aas
sbbb
pushf
repz
or
mov
in
call
rclb
mov
movsb
or
lahf
loop
adc
xchg
leave
mov
in
mov
cltd
clc
jecxz
sub
add
sbb
ljmp
je
sbb
insl
dec
inc
xor
jmp
xchg
sub
loop
pushf
xor
inc
dec
jg
cwtl
adcb
mov
jae
mov
loope
rolb
sub
popf
inc
fisttpll
insb
or
pop
xchg
rcll
add
xor
jl
shl
dec
popf
pusha
sti
add
xchg
out
int3
xor
mov
xchg
cmp
pop
movsl
cmp
jnp
mov
adc
dec
and
incl
mov
cmp
inc
push
pop
xor
call
orb
insl
inc
sarl
ret
adc
xor
into
icebp
outsb
nop
test
adc
lods
stos
cmpsb
popa
lods
push
ja
xor
mov
scas
in
and
xchg
sarb
jle
movsl
adc
fs
outsb
fs
mov
push
fsub
or
hlt
mov
cmp
pop
push
push
push
mov
fistpl
or
sbb
outsl
mov
out
xlat
and
in
cmp
mov
push
mov
imul
inc
das
mov
fwait
cmp
fisttpll
insb
lret
into
sub
cltd
shrl
mov
cmc
pop
pop
sub
push
and
fwait
pop
mov
repz
and
into
or
jno
inc
xor
gs
icebp
and
mov
out
lods
xchg
push
rclb
in
ffree
test
mov
or
dec
lea
js
mov
inc
stc
xchg
lahf
push
lahf
mov
ljmp
fistpll
out
ret
iret
and
xchg
mov
sbb
je
sbb
enter
adcb
movsl
add
cmpsl
mov
or
popa
push
xchg
rorl
hlt
push
pop
sbbl
rolb
in
cmp
sub
in
sbb
sahf
pushf
fidivl
scas
add
dec
sbb
pop
movsb
sbb
loopne
dec
fcomps
fs
pop
add
imul
cli
sub
push
das
jle
out
lret
adc
xchg
cs
push
into
sbb
xor
and
cmp
pop
jl
xor
add
enter
and
mov
jg
loopne
out
push
lret
jl
pop
sbb
adc
cli
stc
jp
jbe
movl
mov
adc
add
fimuls
stos
sbb
call
orl
aam
add
fsubrl
mov
jne
pop
fisubl
pop
in
orb
dec
add
fwait
movlps
cmp
or
sbb
fstl
adc
dec
cmp
cmpsl
push
inc
aas
arpl
mov
scas
sub
mov
outsl
ss
pusha
or
std
push
lods
pushf
test
sahf
push
aaa
imul
in
sub
fisttps
fiadds
pop
pusha
js
jp
push
mov
clc
ja
loopne
or
sti
xchg
pop
push
sbb
mov
mov
mov
popf
pop
or
outsb
inc
fwait
ds
xor
int
dec
inc
pop
call
add
jo
pop
int3
xchg
pop
cltd
inc
mov
or
nop
mov
cli
sub
cwtl
sahf
lods
add
xchg
jecxz
jnp
out
pusha
xchg
hlt
clc
sahf
xchg
xor
adc
out
mov
sti
lods
mov
out
push
mov
adc
jl
and
mov
fdivrs
add
in
mov
imul
cmpsb
mov
int
mull
or
cmpsb
jns
aas
cmp
add
fwait
inc
sub
icebp
xor
lahf
mov
ds
out
sbb
mov
jns
adc
add
out
out
sub
fcmovnb
enter
addr16
push
mov
pop
xor
imul
inc
int3
sar
orb
testl
flds
fstp
jno
push
daa
push
mov
shll
movsb
rcr
xlat
pop
pop
mov
and
ss
or
ja
mov
mov
fmul
rorl
mov
mov
fldl
add
lret
pop
test
fcomp
mov
inc
jl
shlb
jne
hlt
in
mov
push
sub
lds
or
jp
jbe
xchg
test
inc
mov
and
xchg
and
push
pop
mov
mov
in
js
push
push
imul
lcall
sub
inc
xorb
icebp
hlt
and
cmc
pop
xchg
add
cld
xor
pushf
xchg
xchg
or
cmc
lsl
or
adc
insl
mov
insb
iret
and
mov
push
push
jo
xchg
test
and
add
xchg
mov
mov
dec
ss
sbb
jmp
and
das
push
call
sbbl
jmp
push
xor
jecxz
outsb
mov
iret
or
jg
and
int
sub
mov
or
and
jg
pop
adc
insb
mov
xchg
fbld
push
jge
mov
sbb
push
sahf
into
dec
ret
push
cmpsl
icebp
lret
out
scas
hlt
out
in
cld
mov
dec
sub
add
mov
dec
jns
jno
mov
fildll
pop
and
lods
push
push
cs
xchg
iret
dec
jnp
rolb
scas
cltd
imulb
push
dec
test
adc
cmp
xchg
stos
push
lret
fistl
out
scas
jbe
and
ss
cmpl
in
jge
cmp
cmp
std
in
aam
inc
and
pop
mov
sti
pop
jne
mov
lods
mov
into
out
xchg
loope
stc
scas
pop
sbbb
cld
pop
jl
out
sar
pop
pop
cmp
fs
dec
ss
and
or
xchg
inc
sub
es
int
int3
dec
fnstsw
sbb
sub
xorl
hlt
cmp
fnsave
cltd
jbe
cmp
xor
inc
sbb
add
divl
cmp
xchg
xor
das
popa
xchg
fs
aam
sub
ret
mov
daa
shrl
inc
add
jl
xor
add
jns,pt
or
jmp
sub
fwait
jge
jmp
test
ret
xchg
mov
pushf
push
cmp
cmpsb
test
rdtsc
outsb
push
insb
mov
movzwl
and
lahf
inc
adc
in
add
sbb
mov
sbb
inc
clc
pop
or
adc
pop
pop
stos
repnz
divl
cmp
mov
mov
or
fcomip
test
lcall
mov
mov
or
pop
push
mov
insl
std
jno
sbb
pop
xchg
or
in
sub
jns
in
mov
add
das
fidivrs
fwait
inc
xchg
lahf
sbb
call
cmpsb
lret
mov
test
mov
mov
lahf
mov
jbe
xchg
icebp
jmp
inc
sbb
xchg
xchg
jl
jle
enter
adc
mov
mov
mov
mov
dec
data16
dec
lret
out
ss
mov
imul
cwtl
sbb
cs
add
sahf
or
xchg
cld
push
ja
lret
pop
sbb
push
repnz
int3
sti
mov
fnstenv
lret
test
popf
dec
push
cwtl
movsb
cmp
movsb
mov
jp
loopne
sub
cmp
pop
leave
sub
addr16
fwait
cs
mov
mov
stc
xchg
inc
ficompl
xor
mov
jo
jne
mov
push
xor
fs
mov
jnp
sbb
jmp
out
popf
xchg
data16
mov
or
jns
fcomps
fsubr
mov
and
sahf
cmp
div
add
push
xchg
es
dec
cli
sarb
jle
imull
xchg
loop
sbb
jmp
mov
pop
xor
push
repnz
xor
cmp
movsb
push
je
sub
test
call
es
add
dec
rcll
add
cmpb
pop
cmpsb
les
mov
inc
jg
xor
cmpsb
inc
aas
popf
daa
mov
mov
push
xor
lods
lret
jo
push
mov
xor
ljmp
jp
bound
jl
pop
mov
pop
jnp
in
xchg
push
mov
push
jmp
cmp
cmp
scas
sti
push
xor
jns
and
rclb
orb
mov
xor
sti
testl
bound
dec
test
jne
pop
test
mov
repnz
sbb
push
cmc
cld
add
xchg
sub
inc
push
pop
xchg
in
pushf
and
pop
repz
xor
xchg
insb
in
test
dec
ds
add
mov
push
cmp
sbb
loopne
movsl
mov
jae
enter
inc
push
xchg
xor
hlt
das
jecxz
cmp
xor
mov
sbb
leave
fbstp
jo
ficoms
adc
jmp
pop
test
int
xlat
insb
les
into
push
pop
sbb
mov
stc
aam
movsb
out
mov
or
and
jne
adc
mov
daa
dec
clc
out
lret
mull
movsb
and
push
addr16
xor
mov
cmpsb
sbb
movb
addr16
xor
push
int
adc
clc
in
scas
inc
cmp
call
xor
cmp
inc
jge
int3
xchg
xor
in
sbb
sub
out
inc
outsb
es
pop
int
add
data16
dec
sbb
mov
movsb
jnp
or
mov
pop
jns
rcll
xlat
mov
jae
pop
jno
and
mov
aad
enter
cmpsl
bnd
mov
lahf
pop
aaa
or
rorb
lret
je
or
test
mov
cld
jbe
xchg
mov
xchg
jns
mov
push
xchg
or
dec
dec
or
imul
sqrtps
and
das
aad
js
insl
or
out
fs
cmp
out
mov
js
scas
ret
fsubrl
sub
cmpsb
in
lods
sbb
cld
inc
orb
es
notb
stos
mov
outsl
popf
xchg
inc
mov
and
sub
push
shll
mov
fsubl
pop
or
lock
cmpsb
int
and
adc
sbb
adc
aas
enter
sbb
push
test
das
sbb
xor
lret
xorl
jae
xor
pop
mov
xor
push
cmc
xchg
data16
fdivrp
test
pop
pop
lcall
sbb
in
arpl
repz
cwtl
cmc
cwtl
aas
jbe
xchg
inc
jns
cmp
cli
fimull
push
and
push
and
push
aad
push
xchg
xor
das
jns
pop
cmp
ss
mov
jge,pt
cmp
pop
push
popf
sbb
lods
xor
adc
addr16
aas
jo
mov
shll
fdivs
mov
int3
mov
inc
stc
cmpsb
inc
lods
add
ficoml
pop
lds
jns
push
sbbl
xchg
or
sti
sqrtps
out
adc
mov
mov
and
bound
fs
pop
push
pop
jge
or
or
arpl
fs
push
les
in
repz
dec
push
sub
iret
out
push
out
dec
inc
dec
cltd
push
test
fildl
dec
push
and
mov
and
and
mov
lret
add
leave
pop
add
mov
inc
movsl
cs
pop
cmp
das
test
subb
int3
or
jno
pushf
cmp
xchg
out
xorb
and
mov
push
in
into
idivb
mov
fimull
xchg
sub
jmp
xor
cmpsb
lods
js
xchg
and
push
imul
mov
or
pop
add
xchg
mov
sbb
add
mov
mov
jns
and
mov
add
iret
mov
mov
pop
int
cmp
addr16
pop
pop
add
xor
fidivl
fistps
hlt
xor
shlb
mov
fists
cwtl
filds
add
nop
ret
scas
aas
int3
in
out
jne
push
sarl
cli
test
pop
mov
xor
mov
insb
mov
mov
shrl
movsb
shrb
repz
pusha
adc
xor
in
out
das
jae
or
jnp
and
xor
jge
ljmp
sti
into
inc
xchg
push
cmp
cmp
pop
hlt
and
lock
in
pop
cmp
mov
into
pusha
push
cmpsl
adc
pop
add
neg
and
lods
insb
test
mov
adcb
push
jo
mov
add
stc
xchg
icebp
add
not
mov
hlt
fs
mov
scas
out
out
bound
or
idivl
fwait
mov
test
xchg
mov
xchg
sbb
int3
lret
xchg
adc
stos
outsl
into
push
ffree
push
aas
icebp
mov
mov
jb
gs
iret
jp
cmp
nop
sahf
mov
push
rorb
jbe
adc
pop
sbb
lods
cmpsb
mov
aad
inc
push
and
adc
jnp
das
nop
repz
fsubs
push
test
roll
add
sub
leave
shlb
fldl
jmp
js
inc
mov
sbb
ret
adc
lret
cmc
das
dec
pop
addr16
cmc
scas
add
push
jle
sbb
push
jecxz
enter
mov
xor
dec
notl
add
popa
cltd
fisttps
loopne
mov
jg
sub
xchg
hlt
cmpsl
or
jl
jp
cli
push
push
xchg
mov
lret
push
jp
and
sbb
xor
mov
pop
mov
mov
std
mov
fisubrs
pop
out
or
lret
inc
mov
pop
dec
xor
mov
jno
in
xlat
mov
xchg
mov
xchg
jl
xchg
jns
fistpl
inc
movsl
cmp
sbb
mov
adc
jbe
xlat
xor
insl
sub
jge
dec
sbb
data16
aad
lret
xchg
sbb
into
dec
fstp
fs
mov
js
xchg
lds
dec
sub
leave
std
sarl
in
loop
or
sub
mov
xlat
sub
in
int
addl
aam
mov
cmpl
add
iret
jne
les
and
das
mov
sti
js
adc
lcall
pop
mov
sbb
daa
jae
xlat
faddl
daa
mov
movsl
fldcw
cmp
xchg
pop
jne
mov
xor
mov
pop
jle
outsb
and
pusha
shll
les
sarl
mov
mov
subb
sarb
mov
nop
push
adc
lods
or
cld
mov
cwtl
push
jo
arpl
adc
rcrl
hlt
dec
mov
mov
dec
cmpsl
jne
js
dec
test
icebp
jns
stc
std
xchg
in
xor
loopne
pop
test
leave
pop
out
in
outsl
sti
push
fbstp
ds
jmp
ljmp
add
lahf
es
push
in
fucom
xlat
add
gs
shll
and
mov
mov
stos
xchg
mov
aas
fsubrp
sub
in
push
and
rcrb
jge
inc
pop
shlb
jl
inc
sbb
insb
lock
cli
inc
push
lea
shrl
cmp
and
or
cmpsb
dec
xchg
out
sbb
shll
in
jecxz
sbb
cmp
stos
ret
out
icebp
stc
jae
bound
pop
cmpsl
or
fiadds
push
inc
sbb
mov
fildl
adc
cli
and
jb
jp
clc
subb
push
mov
inc
and
sbb
mov
pop
sub
shll
dec
popf
sahf
sbb
mov
mov
rcll
sbb
pop
mov
aaa
xlat
mov
jle
in
clc
ljmp
mov
cmp
cld
stc
inc
pop
xlat
cltd
sub
cmp
or
arpl
dec
in
xchg
sbb
ss
sbb
repnz
sahf
inc
nop
movsb
mov
push
jecxz
push
adc
dec
and
push
std
push
pop
out
sub
cmp
mov
rcr
mov
xor
dec
fstl
sub
jg
add
das
jbe
adc
loop
lock
and
stos
mov
lahf
pop
fsts
mov
int
xorb
les
pop
fucomi
jbe
adc
aad
cmpsl
and
push
lcall
sbb
in
pop
ss
dec
push
stos
inc
out
xorb
or
mov
ret
and
loop
jne
xchg
sbb
jbe
mov
fcompl
fidivl
adc
sbb
lret
dec
cmp
xchg
xchg
add
jmp
mov
mov
leave
jae
sti
jle
xchg
int3
cli
dec
sti
sub
fcomps
and
insb
dec
ss
mov
sub
enter
dec
sub
movsl
fcoms
xlat
cld
fcmovnbe
cli
push
addr16
push
adc
jbe
sahf
mov
add
mull
add
iret
inc
orl
daa
rcrl
inc
adc
std
push
xlat
daa
testb
sbbl
cli
ret
popf
sbb
je
cwtl
out
xchg
imul
jp
lahf
pop
fisubs
xchg
xor
lock
into
sub
dec
pop
xlat
push
andb
and
and
lahf
mov
push
push
mov
rclb
adc
inc
cli
insb
push
je
pop
ljmp
idiv
xchg
mov
mov
aad
and
cmc
sti
dec
insb
and
pop
xor
loop
jg
or
in
es
add
rcll
lds
cs
lods
jmp
pop
inc
insl
ja
jl
or
adc
mov
pop
imul
xchg
and
sub
adc
lods
out
push
rcrb
xrelease
xchg
pop
push
xlat
filds
div
jno
mov
and
push
push
lret
mov
add
xor
dec
flds
sbb
movsb
ret
mov
xor
jne
jmp
cs
jno
clc
int
pop
jp
mov
and
lods
test
test
jmp
push
cmp
inc
orb
add
inc
sbb
lods
inc
lods
pop
cmp
pop
mov
movsl
jg
loop
mov
jp
sbb
sbb
icebp
arpl
jecxz
adc
dec
xor
xorl
cwtl
jmp
cwtl
add
daa
sbb
jge
insb
xchg
sub
add
xchg
sub
sbb
loop
dec
push
and
cli
ds
scas
jl
movsl
dec
pop
push
pop
pop
std
data16
xchg
adc
fadds
pop
adc
fcompl
xchg
dec
jb
mov
std
cli
xchg
inc
lret
sti
cmp
pusha
jmp
daa
cmpsl
addl
mov
mov
sub
adc
inc
addr16
out
imul
rcr
xchg
inc
lret
adc
sbb
dec
push
lahf
negb
rcr
adc
mov
mov
movq
add
outsb
inc
loope
xchg
cli
mov
ret
push
js
cltd
cmp
xlat
pushf
sbb
mov
mov
in
mov
xlat
sbb
xorl
adc
mov
aam
js
sbb
pop
cmp
pop
bound
stos
xor
lcall
add
icebp
imul
push
pop
movsb
dec
sbb
mov
fistl
mov
rcl
cmpsl
aas
xchg
jg
in
outsb
or
movsb
cmp
les
repnz
push
test
mov
lods
cltd
cs
jle
aam
xchg
mov
mov
pop
leave
sub
cmp
add
mov
mov
ret
push
bound
dec
add
pop
add
inc
ss
mov
mov
out
jo
repz
or
and
jl
push
mov
adc
lods
add
adc
movsl
xchg
xor
fisubrl
or
test
stc
scas
or
cld
push
cmp
scas
popa
and
popa
inc
aam
mov
add
cmp
aad
js
ret
call
nop
jnp
in
jg
cwtl
mov
pop
jecxz
ret
aam
or
xor
and
in
ficompl
lds
mov
rolb
push
test
es
dec
mov
inc
add
mov
and
push
mov
sub
mov
xorl
das
pop
and
jns
out
dec
mov
fcomps
xor
rclb
pusha
xor
in
movsb
mov
inc
pop
inc
dec
jl
int3
bswap
loopne
jno
cmp
xchg
scas
xor
aad
pop
pop
test
pop
mov
out
dec
cli
mov
js
pusha
or
jnp
lret
xor
out
out
jns
clc
jns
ljmp
adc
sbbl
xor
loop
mov
shlb
lret
jmp
adc
xchg
mov
lret
or
ret
out
arpl
push
cmpsl
cwtl
adc
and
and
jecxz
push
mov
push
jno
fisubl
ret
in
repnz
jb
sbb
outsl
sbb
jl
or
lods
xor
adc
and
sahf
fcoms
scas
mov
push
mov
inc
cmc
outsb
je
mov
jmp
popa
rcrl
push
jae
and
test
into
adc
gs
mov
data16
push
sbb
iret
xor
outsb
mov
add
and
and
jge
lcall
je
cmc
test
xchg
xchg
dec
popf
xchg
enter
jmp
push
sub
scas
movsb
push
outsb
pop
pop
jmp
nop
push
outsl
xor
inc
adc
inc
adc
pop
and
nop
pop
add
mov
inc
call
pushl
ret
int
or
cwtl
push
or
lahf
adc
scas
and
bound
jle
cmp
nop
sbb
jl
ret
fisttpl
ss
push
push
nop
xor
fwait
jmp
ret
test
mov
adc
imul
jb
cmp
xor
jmp
adc
fstpt
mov
inc
mov
jecxz
imul
pop
imull
inc
mov
xorl
fs
rep
fidivrl
xchg
mov
sub
in
pop
xorl
xlat
mov
mull
mov
sub
outsl
mov
outsb
lock
imul
ljmp
test
and
dec
xchg
imul
mov
jge
int3
mov
cs
or
xor
jne
mov
sub
push
sbb
mov
add
mov
push
mov
mov
or
or
and
lret
jo
scas
xlat
adc
testl
inc
ror
icebp
ds
mov
mov
mov
jmp
in
scas
jl
insl
sbb
sub
orb
cmpb
sbb
ret
xor
in
gs
mov
sub
hlt
out
cmpsb
dec
fwait
ret
dec
jmp
mov
insb
test
jle
adc
jg
idiv
fstpt
stos
mov
and
lcall
cwtl
shlb
bt
or
fistpl
out
xchg
add
test
arpl
clc
xor
push
adc
mov
cli
xchg
sub
xchg
fisubs
in
add
xchg
push
mov
mov
shlb
icebp
or
pusha
bswap
mov
fstpl
in
sbb
xchg
int
fistl
dec
or
loopne
fxch
in
ds
leave
rep
scas
jne
fldt
pop
sbb
stos
dec
cltd
mov
dec
xor
push
std
and
or
fcomi
insb
inc
clc
push
adc
loop
dec
test
inc
sahf
dec
in
push
fs
mov
sub
cltd
into
mov
scas
push
test
xlat
jl
and
mov
es
mov
mov
pop
add
loope
cs
cmp
cmp
sahf
push
bound
inc
ret
xchg
xor
mov
push
adc
jecxz
push
push
xorl
jge
insb
mov
dec
inc
mov
push
mov
jmp
jne
jg
mov
mov
sub
lcall
sahf
dec
testl
fidivs
pop
pop
clc
inc
mov
xor
out
or
jg
outsb
popf
bound
mov
mov
sbbb
jbe
push
add
repnz
bound
xor
mov
mov
fildll
repz
or
jmp
pop
mov
outsl
and
div
es
int3
jb
notl
jecxz
mov
xchg
sub
mov
xchg
push
cmp
jb
test
xor
cmpsl
add
pop
pop
xchg
or
adc
or
xor
andl
mov
xchg
mov
push
dec
stos
xchg
cmp
in
mov
jmp
or
mov
popa
lds
out
mov
mov
adc
movsb
pop
loopne
lock
mov
and
or
dec
mov
mov
leave
fcmovb
and
ficomps
mov
scas
sbb
push
jno
sub
cwtl
lret
add
pushf
inc
lods
mov
lcall
enter
je
stos
fs
daa
cwtl
movsl
arpl
mov
xlat
inc
mov
push
pop
fidivl
jg
lret
cmpsl
je
dec
arpl
sub
sub
hlt
popa
pop
test
frstor
sahf
cmp
loop
out
lea
addl
and
loop
cmp
cli
pop
xchg
int
mov
fmuls
dec
scas
mov
inc
xor
shll
pop
adc
jno
push
pop
dec
xchg
add
pop
jmp
les
adc
aaa
adc
cli
loopne
or
iret
shr
xor
nop
pop
scas
xor
pop
lret
push
jbe
jecxz
and
inc
shll
add
inc
xchg
lret
enter
dec
pop
push
add
inc
repnz
xchg
rcll
scas
push
cwtl
in
xchg
mov
insl
addb
lock
mov
jns
and
lret
cmp
incb
adc
xor
fwait
add
pop
orl
aaa
dec
pop
sub
jnp
add
daa
push
scas
in
lea
push
imul
ret
mov
or
fs
es
ja
and
mov
xorl
hlt
cld
jg
xchg
or
movsl
cmp
loopne
mov
dec
adc
shlb
icebp
lods
inc
subb
test
inc
pop
pop
loop
outsl
arpl
adc
lea
adc
nop
sbb
in
dec
lds
pop
sub
add
push
pop
std
jb
push
mov
ljmp
push
jecxz
subl
lds
popf
or
in
push
call
lock
inc
mov
cmp
mov
sub
xor
jns
cmp
inc
pop
mov
in
or
xchg
mov
or
push
push
push
sbb
mov
sub
lock
jg
sub
cli
sub
and
popa
adc
fcmovu
mov
lret
xor
xchg
sbb
push
scas
rclb
in
out
hlt
dec
lahf
dec
ret
out
lods
xlat
cmp
stos
shll
out
cmp
pop
xchg
repnz
mov
pop
and
jb
adc
mov
pop
and
fcmovbe
in
add
stos
mov
sub
pop
mov
addr16
aas
mov
xorb
scas
mov
mov
fwait
cs
fbld
roll
stos
sbb
jno
and
mov
imul
dec
fstp
dec
addr16
push
leave
das
pop
aaa
or
in
test
or
pop
insb
into
outsb
std
das
scas
xor
sbb
jo
fisubs
dec
aam
sub
sets
leave
cld
add
fld
mov
cld
ret
cs
lret
imul
scas
je
pop
adc
push
insb
cmpsw
mov
leave
aas
cmp
cmp
jno
icebp
push
mov
jle
or
xlat
mov
repz
je
add
out
add
fs
andb
push
clc
push
fmulp
mov
mov
push
in
fdivs
push
xchg
cltd
jbe
dec
cs
xor
pop
cmpsl
jbe
push
sbb
dec
pop
xchg
insb
insl
cmp
mov
xchg
inc
cmp
and
scas
mov
test
xor
hlt
adcl
sub
inc
enter
in
out
jns
lods
mov
jg
push
sub
rorb
movsl
mov
inc
xchg
loop
insb
jnp
movsb
icebp
daa
faddp
xchg
hlt
hlt
or
out
clc
inc
ret
call
sub
cltd
icebp
lret
jo
jmp
cmp
fiaddl
adc
and
mov
add
inc
mov
pusha
pushf
aad
xchg
push
inc
push
jnp
jae
xor
or
aad
sti
xchg
fmull
addl
jecxz
mov
mov
test
sbb
cltd
test
push
and
rcll
mov
push
pop
push
pop
lds
gs
fmuls
jle
scas
cs
add
dec
jne
jno
pop
das
aaa
mov
dec
aad
or
cli
pop
push
push
pop
push
loop
dec
mov
push
or
in
int3
jecxz
fdivrl
pop
jg
jbe
pop
imul
psrld
pop
mov
pop
call
js
lods
ret
out
addr16
mov
cmpsb
subl
xor
push
or
jl
jg
push
fildll
mov
xorl
fwait
ljmp
cli
add
popf
push
ret
mov
jmp
pop
push
cli
push
or
mov
mov
arpl
inc
pop
fstpt
xor
push
xor
jno
cltd
repnz
cmpsb
test
or
inc
add
mov
icebp
mov
xor
push
ret
sbbb
hlt
in
rclb
popa
fmuls
out
xchg
in
xor
mov
xor
loopne
outsl
and
push
jg
cmp
pop
adc
adc
arpl
pushf
sub
add
pop
scas
arpl
lcall
mov
inc
out
imull
pop
sbb
pop
mov
mov
lahf
orl
gs
repnz
fsubrl
sub
das
xchg
jae
jecxz
lahf
imul
fwait
sub
pop
xor
mov
xchg
adc
shl
mov
addr16
ss
adc
inc
jnp
sub
xchg
jnp
sbb
xchg
add
xchg
inc
pop
jo
or
lret
dec
and
shll
ljmp
or
lock
scas
mov
movsl
mov
sub
sbb
add
push
push
xchg
decl
xchg
jmp
mov
sub
rorb
jbe
loop
out
sahf
lods
leave
stos
test
mov
xchg
cmp
in
pop
xor
xor
mov
outsb
orb
xchg
fistpll
mov
pop
inc
xlat
popa
push
mov
imul
shrb
fwait
or
cmpsl
add
loop
inc
out
fmuls
cwtl
and
out
aas
lahf
add
cmp
add
sub
inc
testb
mov
test
jns
xchg
fsubrs
cmp
cld
mov
dec
sub
xchg
aas
sahf
sbb
or
mov
cmp
push
and
test
data16
popf
addr16
add
maxps
pop
mov
popl
adc
cmp
or
out
add
and
pusha
sbb
mov
mov
sub
pushf
xor
xchg
and
pop
dec
imul
mov
mov
loope
and
fisubl
sbb
mov
push
mov
add
jge
add
movsl
shlb
pop
sti
cmp
inc
xchg
imul
push
push
stos
lret
adc
pop
scas
les
sbb
xlat
push
xchg
les
divb
adc
int3
pushf
push
fwait
xor
jmp
mov
lret
icebp
xchg
out
test
out
aaa
pop
or
bound
push
inc
push
roll
sbb
mov
pop
xlat
mov
movsl
ljmp
aad
mov
add
cld
mov
push
ret
aad
iret
mov
fldcw
mov
xchg
mov
xchg
sbb
popa
and
dec
sarl
rorl
shll
push
sbb
lock
das
int
or
out
add
pop
fdivs
fcomps
add
adc
mulb
icebp
add
mov
ds
cmc
jae
pushf
sbb
adc
bound
mov
xchg
andl
pop
mov
out
in
mov
xor
jb
sbb
mov
sub
aaa
loope
jbe
and
clc
adc
arpl
or
aad
mov
sbb
movd
push
shl
pop
inc
mov
inc
sub
or
pop
sbb
cmp
pop
loop
inc
xor
mov
clc
mov
outsw
and
mov
out
int3
sti
nop
mov
mov
jge
ja
fwait
cmp
sbb
jl
hlt
jp
pop
js
mov
mov
add
sbbb
xor
loop
ficomps
pop
insl
mov
jecxz
leave
xchg
outsl
jb
lods
cmpb
inc
enter
popa
pushf
adc
les
dec
repnz
jno
mov
insl
dec
xchg
es
inc
or
cmp
sub
orb
mov
or
hlt
xchg
sub
leave
xchg
jg
fs
mov
jo
jl
int3
shrb
loopne
push
mov
adc
loope
cmc
inc
xor
leave
aad
add
aad
xor
pushf
js
xor
xor
jo
fists
inc
or
aad
inc
sarl
das
add
std
pop
sbb
pop
dec
loop
fadds
sti
sahf
mov
sahf
mov
arpl
push
lret
adc
xor
adc
lret
sub
jo
sbb
mov
push
nop
add
or
in
sub
stos
into
out
lds
lret
xchg
imul
xor
adc
fldt
mov
lock
pop
sub
in
xchg
jp
push
shlb
fstpl
aam
enter
mov
or
add
test
std
mov
mov
test
movsb
dec
je
test
fwait
outsb
jno
dec
pop
pop
outsb
pop
cmp
loope
jnp
xlat
daa
movl
das
clc
and
or
addr16
movsb
ja
inc
imul
dec
out
arpl
sbb
mov
orl
shl
dec
adcl
xlat
xchg
popf
mov
jo
mov
push
lahf
push
pop
shll
dec
ret
pop
cmpsl
js
sbbl
xlat
cmc
into
sbb
jge
in
xchg
ljmp
pop
mov
add
jp
mov
popa
adc
dec
mov
insb
jno
mov
add
insl
out
dec
pop
mov
jmp
cld
outsl
in
dec
push
arpl
ja
mov
aad
or
loope
stos
and
jno
xchg
int3
movsl
xchg
mov
rolb
negl
xchg
std
sbb
cmc
inc
xor
cmc
or
dec
inc
test
and
vxorps
push
dec
shll
shlb
test
pop
sbb
push
data16
decb
cli
stos
shlb
mov
push
xchg
sbb
xor
jge
jns
or
es
jae
jne
jecxz
sahf
sti
push
stos
sbb
cs
incl
and
or
adc
in
sbb
repz
inc
enter
or
jno
push
in
push
in
mov
cmp
stos
jno
stc
inc
ret
sub
mov
and
or
loope
jmp
ret
xchg
ja
int3
fidivrs
dec
lods
adc
outsb
inc
push
in
pop
mov
cmpsb
aad
iret
xor
std
jp
pop
idivl
dec
jle
aaa
jne
pushf
push
dec
jecxz
sbb
int
xlat
lock
cmpsl
and
mov
testb
cmp
ss
xchg
and
test
inc
scas
sbb
cmp
mov
xchg
mov
adc
mov
push
mov
fistpl
out
mov
mov
sub
and
popf
add
push
cld
inc
mov
mov
icebp
imul
xlat
inc
stc
sub
cmp
push
sub
jp
outsb
xchg
rcr
mov
es
sub
mov
mov
es
ds
int
sbbb
call
push
sbb
and
xchg
rcl
jmp
lret
mov
js
outsb
int
mov
add
shr
dec
xchg
sub
pushf
test
in
cmp
mov
in
cs
js
sub
push
dec
xchg
sarl
jae
add
pop
pswapd
pop
pop
sarl
rcll
fs
in
cs
outsb
jmp
cmpl
addl
mov
add
pop
das
pop
add
iret
xor
xchg
xchg
sbb
dec
ret
repnz
or
xchg
leave
adc
xor
je
pop
jne
push
pop
push
add
dec
das
adc
cmc
fnstsw
stos
push
pop
pop
pop
stc
stc
mov
cmp
pop
jg
add
dec
and
add
out
sbb
shl
loopne
mov
test
lock
js
xchg
mov
pshufw
cld
cs
gs
push
dec
sbb
movsb
shll
pop
mov
push
loop
push
fiadds
shl
pop
mov
sbb
xorl
pop
xchg
xchg
loopne
std
xor
push
mov
push
in
pop
xor
fstpt
dec
xchg
gs
jae
push
sub
sar
enter
jno
sbb
fsubrp
test
mov
aas
es
sti
adc
or
sbb
push
mov
roll
cs
les
push
int
mov
or
pushf
cmp
aam
pop
out
addr16
std
mov
scas
inc
mov
ja
pop
lret
lea
push
daa
test
jnp
sub
adc
inc
arpl
lcall
lods
repz
mov
mov
test
loope
ss
in
clc
push
mov
mov
push
pop
lods
arpl
mov
xchg
adc
xor
or
push
rcr
lea
shlb
xor
push
cmpsl
jb
movsl
rolb
addr16
add
or
mov
inc
mov
jp
addr16
xlat
push
repz
mov
daa
cmp
jae
movsl
cmovle
push
das
pop
cwtl
or
shll
add
stc
or
cmp
cmpsb
daa
fwait
arpl
inc
bound
ror
das
inc
les
push
inc
mov
fistps
adc
rcrb
mov
mov
pop
loopne
aas
pop
dec
addr16
push
jg
mov
sbb
push
loopne
fmul
push
inc
outsb
pop
xchg
mov
xor
adc
cmc
popa
loope
add
jae
or
mov
or
frstor
xorb
sbbl
fmull
pop
stc
inc
daa
subb
jbe
daa
xorb
mov
pushf
pop
or
jp
cs
lock
enter
push
jb,pn
adc
mov
xlat
fstpl
fcmovnbe
out
jo
lret
xchg
push
jp
dec
mov
cmp
sti
out
jne
out
ret
or
push
lods
or
jmp
xchg
adc
loopne
insb
sub
arpl
push
and
fdivrl
and
test
inc
mov
lret
push
lods
pop
pop
jmp
sbb
aad
and
push
mov
insl
xchg
enter
dec
repz
fcomi
movl
mov
les
xorl
stc
mov
std
sbb
ja
daa
mov
xor
jbe
fdivs
and
pusha
sbb
pop
leave
add
push
pop
pop
pop
push
fcmovnbe
dec
push
jbe
mov
mov
mov
or
outsl
inc
es
cli
cmp
fildl
fildll
or
aas
add
int3
pop
subl
popl
mov
out
jecxz
movsb
pop
cmpsb
outsb
and
icebp
in
inc
dec
add
lods
fdivrl
addl
pushf
test
xor
sub
mov
in
jae
cmp
lods
icebp
sbb
ror
sbb
hlt
divps
xchg
push
xchg
fcomp
xchg
xchg
xor
sbb
je
inc
sbb
xchg
subb
mov
jno
and
cmc
jmp
divl
sahf
mov
adc
add
mov
fisubs
mov
add
xchg
adc
and
insl
repnz
shlw
cs
push
ja
arpl
shrl
aaa
mov
fildl
stc
mov
aas
lcall
out
push
mov
mov
pop
push
mov
scas
fsubrp
icebp
in
or
pop
lds
stos
dec
mov
icebp
imul
jmp
ret
in
adc
jecxz
das
pop
mov
xor
inc
insb
dec
lea
add
cltd
sbb
mov
inc
push
stc
inc
test
add
pop
dec
inc
jmp
jbe
fsubs
push
test
pop
fs
fwait
jmp
or
mov
ficoms
add
cmc
or
jnp
mov
mov
inc
pop
push
push
scas
in
jo
sub
test
lods
insb
fs
cltd
cmp
or
xchg
rcll
and
jne
fisttps
sub
aad
pushf
bnd
add
push
cmp
add
icebp
adc
mov
sbb
jnp
mov
outsl
test
push
sbb
jne
in
mov
or
clc
ss
out
mov
mov
outsl
pop
xor
adc
jmp
xchg
pop
push
add
shlb
aas
in
push
leave
cwtl
cmc
mov
push
ljmp
aaa
cli
jg
xor
mov
or
sahf
lret
imul
rclb
mov
cmp
aaa
or
into
loop
les
ja
push
sbb
scas
movsl
push
adc
pop
xor
dec
popf
sbb
pop
repz
ret
push
push
aaa
notl
inc
xor
mov
or
add
sbb
and
dec
inc
cld
jle
xchg
cltd
ret
stos
or
loopne
push
mov
outsb
pop
jmp
popf
push
negb
repz
push
adc
imul
outsl
mov
mov
xlat
pop
adc
adc
call
cmp
not
mov
popa
add
xchg
and
mov
xchg
or
pop
jecxz
pop
adc
jbe
xor
cmpsb
or
push
cld
add
rclb
pushf
repz
es
das
mov
xor
adc
cs
lahf
or
testl
mov
test
fistl
jg
xchg
gs
push
push
cmp
xor
jbe
stc
jno
divb
and
pop
push
shlb
xchg
and
mov
sbb
sbb
fsubrs
adc
cmpsb
add
pop
xor
mov
movb
scas
sti
dec
sbb
cltd
popf
loop
je
cmp
sahf
int3
fnclex
mov
loope
loop
fsubl
sarb
sbb
push
push
data16
cmpsb
push
in
pusha
mov
call
dec
xchg
fcmovnu
movsb
sbb
lahf
jmp
insl
xchg
stos
pop
cmp
jbe
rcr
push
repnz
jb
cs
wbinvd
test
xor
lds
cmp
lea
mov
lcall
sti
outsb
int
test
pop
mov
into
xchg
xor
rolb
inc
jge
mov
pop
sub
pop
adc
lods
lods
pop
stc
mov
pop
inc
push
popa
jmp
adcl
lods
xor
and
iret
lahf
push
outsb
jb
leave
ror
lret
shrb
sub
and
ss
dec
add
lahf
sub
dec
arpl
movsb
mov
or
addr16
int
sub
sbb
push
add
loope
push
add
jge
mov
pop
pop
mov
xchg
mull
lcall
xchg
shr
jmp
push
test
out
stos
cld
iret
subb
xor
mov
in
mov
loope
push
ds
test
or
pop
inc
cmc
and
clc
mov
test
cs
cmpsl
fisubrs
and
mov
xlat
add
mov
jns
xor
jg
sub
pop
rorl
cwtl
cli
or
and
mov
cmp
pusha
jle
push
dec
fisubrl
xor
loope
sahf
ds
stos
enter
fwait
daa
sbb
or
adc
or
icebp
fnstenv
test
in
ffreep
int
jg
add
je
int
pop
jae
aad
das
scas
cmp
ret
gs
mov
xor
lock
lods
enter
dec
fisubl
fisubrl
stos
cmp
cltd
mov
inc
out
out
cmpsb
pop
sbb
addb
fwait
xor
gs
ja
sbb
jl
sub
adc
ljmp
mov
into
sub
scas
cld
scas
push
inc
push
je
mov
in
repnz
push
dec
mov
repnz
xor
push
rolb
push
xor
sbb
mov
add
mov
es
or
aad
mov
inc
jge
pusha
adc
sub
and
push
shll
cmpsb
xor
push
push
fimull
jecxz
or
inc
arpl
add
leave
pop
jno
dec
and
fs
repnz
out
push
popa
push
xor
ficompl
pusha
repnz
fldln2
arpl
rcrb
mov
sub
in
or
pop
mov
out
xchg
stos
or
add
arpl
lods
cli
xchg
cmp
jne
push
fcomi
adc
loopne
test
andl
sbb
sbb
xchg
sahf
lods
fwait
lods
lahf
and
aas
scas
in
mov
dec
dec
ror
std
mov
lods
popa
movb
jae
mov
loop
push
imul
sbb
pop
inc
pop
out
fwait
ret
mov
enter
xchg
mov
rcrl
or
subb
dec
or
xchg
pushf
adc
or
movsl
inc
xchg
lds
jbe
push
inc
stos
mov
sub
mov
or
cwtl
pop
mov
pop
xchg
mov
xchg
dec
pushf
arpl
or
icebp
and
or
dec
mov
mov
loope
push
dec
cmpsl
jmp
mov
scas
aaa
xchg
dec
movq
pushf
jg
dec
push
xlat
lret
mov
push
setle
faddp
and
fwait
or
inc
pop
mov
mov
cmp
sbb
fwait
jge
lret
cmp
cmpl
imul
mov
or
add
inc
fucomi
push
jns
inc
cltd
add
or
mov
out
xor
lock
sub
pop
push
sub
pop
add
clc
popf
mov
cmc
stos
cli
aad
xchg
shlb
pop
dec
popl
aaa
mov
out
or
fisubrs
mov
aam
imul
inc
mov
fs
adc
fst
add
dec
jg
fwait
adc
and
pop
sub
out
out
movsb
pop
and
popa
xor
and
inc
inc
shll
inc
popa
sbb
sub
mov
and
in
andl
roll
das
push
sub
jecxz
out
es
sbb
xchg
dec
scas
outsl
jo
loope
cli
subl
jp
insb
mov
cs
in
and
mov
xchg
sbb
pop
dec
daa
das
cmc
xchg
cld
test
push
pop
dec
xor
and
mov
cwtl
sbb
int
xlat
lcall
push
or
fcomps
je
mov
or
sub
adc
jb
adc
int3
mov
jmp
test
in
cmpsb
jle
je,pt
sub
pop
inc
pop
fidivl
nop
lahf
fwait
add
insb
dec
andl
xchg
mov
inc
add
push
cmp
out
js
jae
sub
lods
lcall
stos
sub
imul
aad
and
pop
jg
pop
mov
mov
clc
ljmp
mov
xchg
mov
cmc
dec
pop
fwait
mov
in
pop
jg
mov
xchg
or
add
inc
lods
sbb
cli
jmp
inc
or
bound
adc
out
lcall
lahf
push
or
imul
imul
mov
xchg
or
aam
bound
mov
out
push
adc
jnp
jae
xor
mov
or
loop
xor
sbb
addr16
adc
pop
mov
xor
sbb
shlb
push
pusha
ljmp
ret
xor
pop
cmpsl
aaa
pop
popf
fisttpll
and
clc
mov
mul
cmp
adc
int3
xor
cmp
nop
pop
rorb
lds
insb
or
sub
lcall
int3
or
mov
cwtl
mov
enter
pop
ret
cmpb
mov
jb
mov
clc
xor
jo
mov
mov
std
nop
jbe
adc
xchg
mov
fsubs
jbe
fcompl
push
mov
lds
xor
clc
cld
inc
popa
ret
pop
notl
pop
std
mov
jl
dec
push
ror
mov
xlat
fiadds
rcll
pop
js
lahf
inc
fsubrs
jb
jo
pusha
mov
loop
into
pop
pop
xchg
sbb
mov
lods
cmpsl
scas
mov
push
push
loop
ret
mov
jb
inc
lcall
or
dec
add
pop
int
adc
xor
cmp
mov
pop
leave
or
pop
pop
add
sub
pop
test
into
loopne
jb
ficoml
bound
into
dec
mov
addl
popf
ret
pop
push
xor
adc
sub
mull
jle
jns
xchg
les
enter
or
std
fwait
xchg
test
pusha
jmp
inc
inc
out
add
out
addr16
je
dec
pop
std
sub
inc
adc
arpl
hlt
xchg
insb
or
jnp
add
rorl
sub
sbb
add
iret
divl
negl
pop
pusha
inc
add
mov
jmp
jle
test
test
mov
cmpsb
xchg
mov
pop
cmp
movsb
inc
mov
bound
cmp
fs
mov
mov
fsubl
fs
lea
jle
and
jns
adc
testl
sbb
gs
ss
push
add
adc
or
in
in
lods
and
mov
mov
mov
lea
test
push
les
les
mov
mov
mov
movsb
sub
add
jge
adc
ss
ret
push
add
icebp
jb
mov
fsts
cs
mov
mov
imul
je
insl
mov
shrb
cmp
mov
inc
push
rolb
add
cli
das
in
mov
gs
inc
mov
gs
inc
inc
cmp
and
pop
ret
xchg
push
mov
push
lahf
aam
arpl
popa
or
aad
push
pop
mov
xchg
stos
nop
fildl
add
pusha
jl
loopne
push
jbe
icebp
or
rclb
pop
mov
dec
mov
sub
mov
sbbb
jp
or
repz
call
test
sub
push
cli
mov
cld
es
adc
jle
sub
push
xorb
push
insl
int
enter
and
aas
in
in
lret
shlb
fcmovbe
addr16
mov
les
mov
popa
scas
inc
xchg
cwtl
push
fnstsw
pop
loopne
imul
push
ja
xchg
lds
cmp
add
and
pop
push
nop
fisttpl
jecxz
clc
lea
cltd
pop
test
add
adc
pop
pop
jb
or
insl
adc
mov
loopne
out
scas
mov
test
in
xor
les
mov
mov
insl
xor
scas
and
lods
jge,pt
fcoml
iret
popf
xchg
scas
icebp
adc
jl
aad
cmp
sahf
sub
mov
mov
sbb
push
scas
sbb
int3
mov
sub
fdivrl
xor
aad
mov
cmp
pushf
jl
aad
dec
iret
arpl
in
adc
loop
out
mov
sub
sbb
nop
mov
test
shrl
stos
inc
cmp
pop
lret
jne
cmp
xorl
inc
rcrl
fisttpll
cmp
cmp
sbb
fwait
add
add
je
repnz
gs
loopne
andl
push
xorb
mov
sub
push
ss
daa
sti
mov
lock
sub
sbb
shll
inc
push
push
es
push
push
loopne
xchg
mov
mov
and
outsl
outsl
sbb
mov
testl
ficompl
jp
or
pop
inc
jno
test
dec
fstpl
sti
mov
xchg
lds
cmp
in
pushf
pop
sbb
bound
inc
mov
aaa
inc
sub
pop
fidivs
int3
mov
xor
push
arpl
sbb
cmp
shrb
inc
icebp
in
fists
sbb
and
dec
xor
sub
mov
lock
stos
push
lahf
repnz
arpl
ss
imul
dec
ficomps
mov
lea
pop
lcall
push
stc
ds
movsl
mov
scas
cmp
push
push
imul
imul
pop
aas
lret
sbb
fdivl
movsb
cmp
add
dec
outsl
xchg
jo
inc
xor
sbb
sub
movbe
or
icebp
add
jecxz
mov
mov
ds
enter
inc
xor
xor
stos
jl
arpl
jp
sar
push
xchg
lods
aad
mov
int
outsb
and
stc
vmwrite
jmp
insl
sub
jno
sub
cmpb
in
cmp
xor
ret
addb
inc
fisubrs
xchg
icebp
es
imul
call
out
xor
push
push
out
pop
pop
fstpl
scas
sub
inc
push
ret
out
dec
pop
xchg
cwtl
scas
sbb
lea
xor
push
mov
inc
xor
mov
int
mov
shlb
ja
repnz
fstpt
push
adc
addr16
add
xor
das
pop
mov
leave
loopne
pop
inc
sarb
sbb
mov
addr16
adc
jb
ret
mov
fimuls
into
cmc
xchg
jno
test
pusha
ret
dec
ds
push
mov
xlat
xchg
push
add
cs
bound
xor
or
adc
js
lcall
mov
cmpsl
inc
stos
fldt
push
pop
pop
sub
test
jne
pop
push
mov
aaa
test
push
jg
repz
jecxz
jp
int
lcall
ljmp
mov
mov
xchg
mov
lea
jo
in
test
or
push
fwait
cmpb
ret
ds
sbb
cmp
xchg
or
xchg
sub
fcmovb
rcll
add
jno
nop
stos
dec
stos
ljmp
jle
mov
sbb
cmp
in
stos
cmp
out
rol
repz
mov
fwait
sub
movsl
out
jne
mov
cli
and
xchg
push
test
mov
imul
or
repz
xchg
or
xchg
lret
cs
lock
out
and
cmp
out
mov
shll
adc
fbstp
mov
jmp
ret
jle
cmc
daa
cltd
push
in
xor
jmp
sbbb
xor
in
and
mov
cmp
loopne
xor
jge,pn
ficomps
mov
jbe
repz
and
negl
aad
or
jo
push
inc
xor
jb
mov
jl
sub
sbb
or
jecxz
xchg
sarl
sahf
shll
mov
sbb
xor
lods
jbe
into
je
xor
fwait
xor
outsb
adc
mov
aam
arpl
mov
ret
mov
cmpsb
and
pop
dec
add
pop
xorb
sbb
mov
push
scas
xchg
push
jle
stos
add
jae
fsubr
inc
hlt
sub
test
mov
lret
shll
inc
loopne
scas
nop
mov
mov
xchg
push
xor
test
cli
rcll
filds
push
sub
pop
movsb
add
cmp
pop
repnz
cmp
hlt
iret
out
les
xchg
lock
mov
mov
or
out
jo
lret
jg
mov
mov
add
mov
cs
jmp
std
sbb
adc
je
in
xchg
jl
dec
int3
mov
stos
jb
loop
mov
lea
jp
cmp
mov
out
notb
addr16
mov
adc
mov
xchg
dec
mov
cmc
mov
cmp
out
popl
cmp
hlt
loope
mov
pop
out
lods
push
xlat
lret
movsb
test
stos
insb
dec
cwtl
mov
incl
fnsave
sub
or
push
inc
fldl
addr16
std
add
aaa
and
in
sub
sbb
stos
mov
dec
insl
push
push
jb
in
pop
ret
daa
jecxz
mov
cmp
inc
loopne
jmp
add
stos
scas
cmp
int
in
addb
clc
mov
jae
sbb
dec
jnp
inc
lret
add
and
mov
sbb
push
add
inc
lret
addr16
fcompl
popf
sti
cmpsb
dec
xor
or
std
or
movsb
inc
hlt
leave
xchg
lods
mov
xchg
cmp
stc
jnp
pop
lcall
mov
iret
js
loope
fwait
movsb
dec
out
lret
je
cmc
add
aaa
fisubs
je
sti
xchg
mov
jno
test
mov
lock
cmpsl
xchg
addb
cmp
mov
cli
insb
mov
orb
sbb
sub
lea
inc
mov
cmp
fldl
sbb
dec
fdivrs
cmc
mov
cmp
pop
adc
mov
repz
cmp
lock
and
pop
dec
out
or
add
ficompl
cmp
pop
and
sub
mov
dec
daa
jl
clc
adc
test
inc
dec
inc
jb
scas
pop
clc
popa
cmp
sub
ss
cmp
push
leave
xorb
mov
lret
dec
dec
scas
mov
xor
stos
add
sub
sbb
inc
enter
jge
test
xor
sub
stos
adc
lret
sbb
mulb
add
mov
adc
inc
repnz
outsl
ret
mov
mov
jge
add
sbb
jbe
pop
sub
icebp
scas
into
jle
mov
dec
cmp
mov
mov
fwait
ds
cmp
fimull
and
mov
pop
gs
add
fisttpl
lret
fwait
add
mov
sub
sub
repnz
mov
out
mov
sub
gs
pop
pop
jae
lods
adc
adc
xchg
push
fsubs
icebp
cltd
leave
int3
insl
jp
ja
aas
andl
repnz
push
ffreep
cmp
pop
xchg
ss
inc
fsin
out
subl
popl
xchg
push
push
fwait
sarb
mov
arpl
es
jne
nop
test
xchg
int
stos
test
xor
cmp
cltd
std
test
cmp
cli
mov
das
sar
ja
cmp
jns
jno
xor
cmp
xor
fwait
mov
leave
add
call
gs
stos
inc
jns
push
mov
movsl
push
dec
test
push
inc
pop
cmpsb
outsl
lods
cmp
and
scas
jae
fwait
inc
cmp
cwtl
scas
pop
stc
shrb
xchg
jns
mov
dec
sub
xor
mov
cltd
and
ds
xchg
fisttpl
mov
sti
jno
cmp
sbb
repz
xor
cmp
imul
hlt
push
or
aas
fwait
mov
jno
push
sbb
or
fcmovnb
or
xchg
shrb
outsb
adc
rcrl
fnstsw
clc
rorb
sbb
xor
mov
dec
xor
push
or
stc
fbstp
bound
xchg
out
movsb
mov
shld
sahf
cwtl
loope
and
sub
mov
mov
rcll
adc
movsb
mov
dec
xchg
mov
mov
jecxz
jae
std
out
xchg
xchg
add
cltd
pop
leave
das
stos
jl
mov
sbb
sahf
outsl
jns
ret
xlat
test
movsl
orl
xor
jae
cs
sub
test
pop
inc
pop
push
mov
push
pop
push
push
out
mov
je
arpl
inc
idivb
or
xchg
xor
xor
jns
out
lcall
in
jl
or
mov
and
cmp
cmpsl
mov
mov
stos
and
rcll
mov
je
nop
add
aad
clc
cltd
movsb
adc
push
cmp
in
add
popf
sbb
mov
or
out
mov
jp
jae
cltd
fwait
nop
cmpsl
or
adc
jne
nop
sub
mov
pop
adc
iret
or
in
xchg
dec
jl
in
movsl
cmp
adc
dec
aad
xchg
jae
adc
in
test
movsb
shl
iret
pop
nop
iret
repz
pop
jbe
cmp
shrb
fidivrs
push
push
sbb
push
testb
clc
adc
pop
dec
mov
jmp
jmp
xchg
dec
rolb
in
jmp
xlat
xor
mov
or
lahf
in
leave
inc
stos
into
xchg
frstor
or
push
inc
push
in
xlat
pusha
dec
pusha
add
scas
pop
add
lock
es
out
jp
mov
dec
aam
sahf
and
jno
mov
fstpt
iret
mov
pop
daa
mov
inc
mov
inc
das
mov
in
inc
faddl
cltd
inc
pop
and
xor
ret
fldcw
fisttps
daa
mov
sub
inc
jae
addr16
loop
scas
jne
xchg
adc
inc
or
adc
sbb
inc
fiaddl
pop
dec
mov
mov
xor
out
stc
test
inc
mov
in
test
adc
stos
inc
aad
mov
scas
mov
in
je
and
or
lds
xchg
rclb
icebp
sbb
lods
sub
and
or
idivb
sub
mov
cwtl
mov
push
dec
lahf
ror
lds
ret
mov
cld
and
and
xor
cld
pop
jae
cmp
cli
jp
mov
cs
repnz
je
rcll
xchg
lds
rcll
loope
sbb
cmp
cmp
push
push
icebp
inc
adc
hlt
mov
bnd
push
daa
sarb
fwait
sbb
loopne
movsb
dec
lods
je
mov
test
rolb
mov
gs
pop
adc
or
sti
incl
cmp
hlt
lea
push
or
and
dec
jae
sub
in
or
subl
push
rep
aas
mov
sbb
out
out
mov
int3
shrb
dec
int
mov
rcrl
outsl
mov
pop
xor
add
push
je
fidivrs
xchg
hlt
stc
fbstp
and
jmp
add
cmpb
or
pop
imul
cs
dec
movsb
pop
pop
dec
lea
scas
into
popa
sbb
adc
test
pop
movsl
sub
and
mov
aad
cs
scas
pop
pop
dec
enter
call
je
and
in
jmp
lock
lods
xor
adc
test
in
fsubl
lea
nop
rcl
adcb
xor
int
ss
mov
cmp
ds
outsl
inc
andl
in
pop
fxch
icebp
push
outsb
add
movsb
inc
sub
int
es
xchg
mov
not
sbb
and
into
jbe
lods
repnz
pop
jmp
mov
ds
adc
jno
bound
popa
pop
inc
gs
lods
mov
ja
iret
dec
in
in
xor
xchg
in
inc
mov
aam
xor
inc
cmpsl
in
rcl
adc
add
xchg
jge
mov
in
mov
jno
cmpsl
xor
mov
test
mov
jmp
fwait
adc
pop
mov
cli
sub
jg
mov
push
xor
iret
fsubs
mov
sarb
sahf
inc
pop
pop
push
notb
loope
xchg
pop
pop
fbld
fbld
mov
sub
rcrb
fwait
xor
lahf
pop
int3
and
insl
gs
xchg
pushf
shrl
daa
jp
pushf
xchg
cld
jp
stc
jge
dec
loope
fnstenv
pop
jne
push
and
ret
jecxz
jo
out
lret
lahf
idiv
ret
jl
in
pop
call
xor
insb
sbb
out
aad
jl
cwtl
or
sub
mov
cltd
sub
rcl
and
test
adc
or
mov
imul
lock
add
and
sbb
mov
cld
mov
cmp
mov
cmpsb
aaa
cwtl
push
fstpl
push
or
inc
insb
add
pop
fisttpl
popf
and
push
in
xchg
mov
and
movsb
pop
lds
xchg
loop
adc
in
jl
std
pop
jmp
inc
shrl
pop
xor
in
mov
das
sbbl
iret
push
loope
xchg
adc
sub
adc
jns
aas
inc
mov
cmpsb
dec
adc
fstps
and
cmp
dec
sbb
add
add
movsb
jl
xor
sub
sbbl
les
movsl
scas
in
xchg
shr
push
in
and
adc
inc
add
xor
sbb
outsl
fwait
dec
add
or
orl
insl
xlat
ret
jg
mov
outsl
mov
mov
outsl
sbb
xchg
sub
outsb
in
mov
pop
js
or
push
mov
sub
pop
pop
lods
xchg
ds
movsl
mov
std
cltd
inc
pop
adc
add
aas
ret
pop
push
xor
or
test
std
inc
cmp
sbb
js
lahf
xchg
push
iret
mov
scas
xchg
pop
mov
sub
inc
in
je
das
mov
add
fldt
lds
not
xchg
mov
push
shrl
iret
inc
stos
mov
xor
jbe
or
cmp
lock
sub
mov
stos
das
mov
cmp
and
mov
adc
rolb
enter
dec
mov
icebp
push
jae
pop
mov
jbe
cmp
jmp
mov
test
xchg
push
dec
jo
mov
push
mov
xchg
data16
xor
scas
dec
mov
fwait
mov
pusha
cli
jo
addl
or
sub
dec
xlat
rcl
jmp
or
or
jp
lds
pop
mov
loopne
mov
out
cmc
cld
das
negl
mov
push
push
xor
cli
ss
jne
fs
dec
or
cli
adc
mov
pop
imul
or
jne
jne
dec
cmp
xor
xor
jnp
and
pop
nop
lea
push
sub
fidivl
and
pop
cmpb
lcall
mov
ret
jnp
pop
mov
loop
pop
pushw
repnz
pop
adc
lret
jle
fs
scas
addb
sub
je
mov
int3
sub
dec
sarl
lds
outsb
add
pop
add
cmp
mov
inc
int3
add
into
mov
icebp
arpl
adc
or
sub
xor
cmp
push
dec
leave
mov
cmpsl
sub
shlb
maxps
aad
lods
sbb
add
cmp
int3
mov
cwtl
es
inc
adc
add
faddl
ja
cmpsl
jo
mov
and
dec
aaa
jae
out
mov
mov
inc
subb
popa
lcall
daa
mov
jnp
testl
test
mov
std
aam
fdivrl
enter
mov
push
lea
pop
insb
cmpsl
aam
xchg
mov
adc
aas
cs
and
cs
adc
ja
mov
notb
lds
xlat
mov
fimuls
push
data16
jecxz
mov
adc
sbb
xor
repz
in
lods
xor
xlat
xchg
and
lods
and
in
cld
movsl
fcoms
mov
sbb
dec
cld
sahf
push
mov
jo
das
inc
xchg
mov
les
and
mov
sub
dec
sub
icebp
inc
subl
lods
dec
test
and
push
enter
movsl
inc
icebp
inc
pop
xor
je
fmulp
push
push
cmc
dec
aaa
repnz
nop
int
test
stos
int3
out
arpl
push
imul
push
pushf
iret
test
enter
push
mov
gs
stos
ret
adc
mov
xchg
test
mov
pop
push
clc
imul
test
mov
jnp
cmp
fisubs
repz
push
cmp
in
incl
mov
dec
test
loope
call
test
add
in
pop
daa
arpl
mov
sahf
xchg
or
fidivrl
add
lods
mov
insl
icebp
mov
sarb
adc
jle
int3
mov
imulb
fadd
mov
pusha
mov
add
push
mov
hlt
push
adc
and
insl
or
or
test
xchg
and
bound
adc
mov
dec
movbe
fimuls
xlat
fbstp
lret
arpl
out
mov
cld
pop
and
jnp
jae
mov
ficomps
in
fdiv
sub
sub
scas
cmpsl
xor
or
or
loopne
int
incb
and
pop
xor
cmp
in
inc
mov
jae
pop
jg
test
out
and
dec
shrb
mov
and
pop
cltd
or
leave
repz
xchg
mov
mov
out
xor
jnp
mov
mov
adc
leave
mov
jmp
dec
sbb
adc
xchg
inc
lahf
mov
mov
aad
mov
int
repnz
inc
stc
aas
fcompl
cmp
jne
mov
icebp
les
pop
sahf
ret
ds
mov
hlt
xlat
xor
insl
test
sub
or
pop
xchg
cmp
pop
jle
movl
fimull
sbb
xor
and
xor
ret
xchg
add
mov
test
lods
je
sbb
jg
mov
xchg
mov
cwtl
icebp
ret
cmpb
mov
mov
mov
mov
ficoml
repnz
mov
add
jns
push
lds
leave
pop
notl
loop
lods
jbe
or
xor
movl
sbb
pop
int
dec
or
xchg
add
dec
ret
add
jge
rcr
or
jge
inc
mov
lcall
xlat
lods
xorl
iret
in
shl
mov
testl
inc
std
pop
xor
push
or
xor
dec
push
pop
les
xor
push
xorl
adc
sub
pop
shlb
mov
cmpsl
sbb
movsb
xor
mov
jno
push
xchg
sti
or
lret
cmp
pushl
into
inc
out
lds
das
hlt
adc
and
dec
jo
fisubrs
mov
or
xchg
lock
add
lcall
insl
inc
fs
mov
or
in
xor
cmp
mov
or
sub
popf
inc
popa
adc
rcrl
imul
sub
loopne
pop
push
sbb
xchg
int
cltd
pop
addr16
scas
andb
sbb
dec
sarl
mov
xchg
out
mov
adc
cmp
mov
jecxz
jne
or
inc
xchg
mov
std
push
cli
setae
aas
sbb
or
scas
cld
ss
sbb
cmp
xor
ret
sbb
cmpsl
mov
mov
addb
push
push
inc
push
movsb
stos
ficompl
dec
add
sbb
sarl
and
xchg
andl
icebp
cmc
stos
in
cld
test
mov
faddl
hlt
clc
inc
inc
jns
or
divl
lret
xchg
sbb
out
inc
sbb
out
jp
test
cmpsb
ficomps
sub
cmc
insl
ljmp
push
inc
jbe
push
cmpsb
mov
loopne
insb
aam
mov
dec
pop
aad
dec
inc
cmpb
sub
cmp
sub
push
and
pop
mov
pop
lods
repz
inc
pop
jo
add
rcll
dec
add
pop
dec
pop
ss
in
lret
ret
loop
pusha
add
push
dec
pop
pop
ret
or
push
add
cmp
rcr
mov
negb
or
das
inc
push
dec
movsl
mov
ja
xor
or
ret
scas
cmp
adc
inc
repnz
insl
lcall
push
mov
leave
xchg
jle
mov
sbb
mov
sbb
inc
clc
pop
pop
lahf
push
fidivs
dec
cltd
imul
push
add
fbld
push
push
push
mov
icebp
cmc
movsb
adc
out
push
inc
jo
pushw
add
xorb
lahf
adc
inc
mov
adc
repnz
and
and
and
add
daa
add
add
add
popa
jns
daa
push
mov
test
or
shlb
stc
jno
pop
sbbl
cmp
cwtl
mov
push
mov
pop
mov
fidivl
cmc
sub
scas
inc
push
mov
sub
cs
lret
ficompl
arpl
adc
sti
push
inc
loopne
mov
or
fxch
push
xor
fsubl
aam
sub
inc
adc
mov
test
sbb
jg
pop
lret
cli
cmp
and
in
or
into
pop
lods
jmp
xchg
mov
movsb
imul
mov
pop
pop
pop
pop
loope
dec
idivb
jbe
into
and
sub
push
std
dec
lahf
or
and
or
std
shll
push
jmp
cmp
sbb
repz
add
shlb
adc
repz
inc
sti
cltd
add
adc
sbb
loop
push
push
or
xchg
in
lods
test
add
sub
sub
sub
repnz
lods
outsb
cmpsb
mov
pop
sub
mov
jae
in
jbe
or
popa
cmpl
loopne
loopne
push
addr16
addr16
out
testl
and
or
int
mov
push
das
jp
adc
jp
xchg
push
jl
dec
adc
xor
jg
cld
mov
repz
mov
ds
jle
out
and
mov
pop
ljmp
sbb
jp
rcrb
out
loope
push
or
pop
fisubrs
ret
mov
inc
lea
fildl
push
mov
mov
xchg
loope
jns
icebp
xchg
push
movsb
jno
loop
inc
fs
incb
mov
cmc
andl
jmp
dec
or
and
pop
xlat
mov
in
cli
lcall
push
xchg
call
fwait
add
cld
lcall
in
imul
aad
or
xchg
ret
mov
sub
sbb
fistpl
push
cmp
pushf
rcrb
mov
cmp
stos
pop
lock
in
jg
ret
xor
dec
sub
jb
outsb
add
jnp
addr16
les
cltd
mov
insb
or
lods
call
and
or
popf
jne
lahf
jmp
sub
adc
cmp
adc
cmc
dec
stc
in
push
or
addr16
xchg
aaa
inc
repnz
nop
inc
sarb
push
out
lahf
out
pop
xchg
xor
push
xor
push
mov
mov
in
sub
or
lcall
push
stc
pop
fidivl
pusha
xor
sbb
and
mov
gs
fnstcw
xor
stos
mov
mov
rol
cmp
dec
xor
push
xchg
push
loop
sti
mov
or
mov
mov
adcb
mov
lret
ss
jnp
jno
outsl
dec
add
push
ds
push
cmc
pop
pushf
fwait
call
mov
xchg
aam
push
push
pop
jle
in
fwait
stos
push
jbe,pn
dec
pusha
sarl
iret
clc
lret
mov
jne
orb
cli
and
scas
mov
push
push
stos
mov
subb
out
dec
or
rcl
dec
cmpsb
jg
push
leave
xor
negb
into
jl
insl
out
add
dec
test
or
pop
bound
mov
mov
push
sbb
xor
stos
gs
mov
decb
les
sub
ss
enter
and
lahf
sub
pop
jg
pop
ljmp
or
sbb
pop
enter
mov
daa
adc
sub
xor
pop
jg
sub
cltd
jmp
pop
push
roll
sub
cmp
clc
ljmp
jmp
xchg
in
into
pop
shrb
pop
loope
shrb
mov
adc
repnz
out
pop
cmpsb
lods
pop
cld
xchg
fiadds
pop
mov
add
inc
pop
dec
cltd
adc
sub
mov
sub
or
and
mov
xlat
add
popf
outsl
in
ss
cmpsl
iret
push
shlb
movsb
mov
inc
mov
loopne
lret
enter
and
test
lods
add
xor
out
enter
jb
popl
xor
jmp
cli
xor
out
and
xor
mov
fwait
pop
jb
mov
inc
in
push
push
in
lret
insb
les
cmp
and
fmul
xor
lcall
lods
mov
xlat
adc
adc
fs
lea
lgs
mov
add
pop
add
iret
mov
fdivrs
shll
mov
mov
mov
out
dec
push
dec
dec
and
into
les
sbb
out
xlat
cmp
cmc
jmp
das
pushf
rcll
mov
hlt
jae
call
jns
cmp
sub
or
aad
repz
sbb
popl
cmp
dec
xchg
and
daa
mov
jno
rolb
jno
sub
pop
sbb
scas
call
mov
lahf
xchg
stc
cmp
dec
test
rorl
lret
mov
test
adc
inc
scas
add
add
mov
or
mov
test
lcall
sbb
ss
push
mov
inc
in
or
adc
adc
push
cwtl
roll
push
push
dec
scas
jnp
mov
jmp
push
roll
pop
aad
sub
xor
cmpsb
jno
inc
and
pop
jmp
scas
fwait
clc
inc
popa
lods
and
pusha
sbb
pop
cmp
jb
or
pop
push
sbbb
mov
push
fisubs
mov
add
push
push
andb
cmpsb
mov
js
jne
add
gs
cmp
fnsave
sub
xor
jecxz
jp
stos
aaa
fisttpl
cmpsb
xchg
shrb
sub
inc
aad
pop
cmp
pop
lcall
jmp
cs
xchg
add
and
xlat
repz
or
cltd
adc
push
pop
mov
repz
fs
in
push
aaa
sub
inc
sbb
inc
add
aam
dec
cltd
inc
dec
ljmp
into
pop
cmp
xchg
jb
int
jle
outsb
outsl
mov
push
jg
les
sarb
into
pop
cld
sub
or
add
sti
mov
dec
cli
test
imul
je
jp
roll
aam
gs
fdivs
sbb
clc
xchg
out
push
adc
in
sbb
cmp
mov
mov
ss
push
cld
subb
dec
mov
loope
stc
test
pop
dec
movsb
jae
xchg
and
sbb
push
imul
lahf
mov
test
mov
cld
imul
outsb
xlat
cmp
jbe
sub
xchg
rol
dec
std
pop
mov
fmuls
jge
sub
stos
mov
ljmp
adc
or
or
mov
and
xlat
jno
or
or
push
cmp
inc
fimull
mov
mov
rolb
mov
test
daa
jg
and
rcrl
or
cmp
fmul
cwtl
pop
fstpl
mov
jns
pop
rcr
pusha
repnz
rolb
lret
rcl
test
dec
push
or
pusha
pushf
popf
mov
decb
inc
arpl
out
push
jp
and
or
ja
mov
xorl
sub
xor
sub
cmp
mov
adc
push
aas
aas
adc
aad
mov
mov
dec
jno
add
insb
dec
xchg
push
pop
cmc
or
out
out
sub
fs
sub
mov
daa
sub
movsb
loope
out
out
lock
xor
sub
jge
and
stos
mov
out
xor
push
push
xor
movsl
fsub
jl
repz
lahf
enter
xchg
pop
sti
sub
mov
and
cmp
mov
xor
hlt
pop
adc
mov
mov
sub
xchg
test
sub
inc
sub
mov
sbb
ds
or
sub
mov
xor
fwait
or
in
mov
mov
aaa
inc
and
xor
stc
and
or
inc
sbb
jno
in
mov
ret
mov
mov
aad
mov
mov
cmp
loop
mov
nop
pop
push
jbe
sarb
cwtl
fidivrl
ret
sub
cltd
xorl
in
fwait
cmpsb
xchg
sbb
shr
jge
out
adcb
xchg
mov
not
pop
cmp
fsubrs
add
xor
cmpsb
imul
mov
scas
dec
xchg
hlt
and
and
mov
jne
inc
pop
daa
mov
dec
xchg
push
and
xchg
mov
jae
jns
xorl
pextrw
outsb
adc
and
xor
aam
bound
testl
idiv
div
lret
pop
scas
add
in
stos
and
cmp
add
ljmp
pop
rolb
xor
pop
push
jg
sub
pop
pop
cmp
jp
popa
icebp
pop
jns
les
outsl
mov
outsb
sub
push
adc
add
xlat
call
mov
sub
ss
movsb
mov
sbb
out
xchg
lea
mov
insl
sarb
imul
lods
jnp
lods
xchg
or
inc
cmp
mov
push
jo
dec
shl
cmpsl
loop
or
xlat
imul
subb
cmp
add
aaa
cmp
jnp
jp
insb
iret
pop
mov
aad
adc
pop
pushl
jg
inc
xor
shrl
push
hlt
jns
xchg
inc
jle
subl
xchg
ja
inc
insl
push
jnp
fs
xor
adc
bound
enter
inc
aaa
cmp
mov
mov
add
add
in
in
jb
pop
mov
mov
in
sbb
sbb
dec
shl
fsubrs
dec
lret
std
xchg
dec
test
sub
rolb
lods
cmpsl
jne
in
hlt
add
push
mov
lahf
shl
jne
lods
enter
shl
fadds
test
dec
lea
pop
icebp
fwait
test
dec
push
iret
mov
sub
jae
mov
test
aaa
push
mov
shlb
scas
icebp
lret
inc
cs
inc
mov
pop
gs
sub
dec
mov
inc
shll
xor
push
or
lret
shrb
shrb
or
sbb
cmp
stos
mov
or
outsl
xor
insb
out
movsl
mov
xchg
sub
or
pop
fdivr
aas
fistl
jecxz
jno
sbb
pop
cmp
add
out
sbb
or
das
icebp
pushf
sub
mov
push
xor
and
or
stos
push
in
adc
insl
dec
jb
pop
mul
divb
adc
into
popa
out
pop
in
mov
ja
push
ljmp
fbld
pop
or
out
jge
out
xlat
dec
aam
pop
jnp
jge
lods
mov
ret
or
mov
les
inc
dec
adc
push
or
jge
loope
lret
mov
mov
dec
sub
sti
xchg
out
jecxz
mov
mov
cs
nop
out
add
xchg
dec
adc
adc
mov
pop
inc
outsl
fnstenv
inc
add
dec
stos
in
lcall
sub
inc
test
dec
inc
sub
xor
jecxz
sub
mov
insb
outsb
or
pop
mov
cmp
push
imul
jecxz
inc
mov
mov
popf
sti
repnz
popf
aad
sahf
ret
mov
jle
add
mov
test
sub
jmp
stos
cmp
or
push
aad
mov
cld
or
pop
ja
cmpl
add
subl
and
lds
movsb
jne
push
je
lahf
sysret
mov
or
and
movsb
sahf
inc
cmp
pop
ret
jmp
jae
and
fdivrs
xor
adc
mov
xchg
lock
pop
std
jbe
xor
dec
jbe
fcom
aad
pop
ret
leave
xchg
data16
sub
test
jp
in
inc
lret
std
icebp
mov
push
pop
sub
stos
into
pusha
pop
sbb
nop
mov
dec
cs
cwtl
dec
mov
inc
mov
out
paddsb
sub
or
mov
inc
in
cmpsb
mov
imul
rorb
xchg
mov
jg
inc
push
sahf
test
pop
xor
cmp
jno
rcr
mov
negb
shl
xchg
popl
and
out
fistpll
pop
pop
clc
movsl
jle
outsb
adc
and
push
dec
pop
fidivs
xor
add
pop
inc
mov
cmc
hlt
dec
mov
fiaddl
sub
jnp
lods
jne
test
aaa
lret
jae
xchg
xchg
ljmp
xor
aam
sbbb
test
push
bnd
cmp
mov
into
cltd
pop
dec
xchg
adc
aam
cs
mov
cltd
mov
daa
outsl
nop
mov
call
inc
mov
push
das
mov
sub
cwtl
mov
cmp
xchg
mov
mov
push
and
cwtl
or
std
cmpsb
out
movsl
filds
fs
cmc
hlt
mov
push
js
dec
mov
cltd
mov
idiv
mov
push
test
xchg
cli
test
and
outsl
sbb
pop
fs
mov
hlt
sub
dec
mov
imul
jbe
cmp
push
imul
add
cmp
inc
idivl
mov
inc
adc
inc
cmp
sub
xchg
jae
mov
add
mov
and
push
push
jp
cld
fnstsw
out
adc
fsubl
jne
aaa
fiadds
imul
mov
pop
repz
push
cli
outsb
dec
pushl
scas
cmpsl
mov
push
sub
js
mull
loope
or
les
lds
xchg
lods
fisttpl
dec
jbe
pushf
dec
mov
sub
ss
jne
mov
xor
mov
mov
or
push
sub
addl
jno
mov
dec
inc
lret
dec
inc
sub
xlat
push
jp
enter
mov
dec
ret
xor
cmp
lret
jb
xor
sub
femms
les
imul
daa
dec
lret
adc
sbb
dec
les
push
das
pop
aaa
psubd
mov
push
fldcw
pop
outsb
or
ss
mov
mov
cmp
pop
mov
in
mov
xchg
outsb
dec
hlt
out
and
cld
lods
inc
sub
iret
fs
xchg
in
or
cmp
jbe
xchg
push
gs
mov
and
pushf
and
inc
sub
dec
fistpll
lahf
xchg
clc
xor
push
data16
pop
rorl
mov
inc
imul
add
stc
mov
push
fsubs
push
cmpsb
arpl
stos
jae
push
pop
xor
mov
in
push
out
repz
fsubrs
push
mov
mov
push
pop
call
cs
mov
mov
lret
iret
dec
in
jge
adc
test
pop
into
in
into
dec
lret
jmp
mov
les
xlat
lcall
fldl
out
cmp
pop
out
jae
dec
pop
mov
imul
xchg
loop
inc
add
mov
mov
js
xor
xlat
in
inc
into
dec
mov
mov
and
rcrl
insl
pushl
inc
inc
pop
sbbl
jp
cmp
insl
shrl
popa
and
fdivs
adc
icebp
adc
mov
decl
add
ds
sbb
aad
sbb
cmpsb
xor
push
je
mov
add
pop
and
divl
out
sbb
lods
gs
mov
push
dec
ja
fcoml
dec
fstpl
pop
scas
loope
mov
pusha
cli
mov
adc
sub
push
cs
mov
jnp
xor
nop
movsl
sub
imul
shll
cmc
in
push
icebp
out
pop
dec
push
inc
leave
push
or
loope
jno
inc
mov
fiaddl
mov
hlt
and
ret
mov
stos
icebp
ds
ljmp
xchg
shll
inc
ss
or
mov
or
cmp
mov
test
pop
cmpsb
inc
jns
fcomps
jp
rclb
movsl
mov
out
jb
repz
jnp
nop
lret
jg
imul
pop
mov
in
pop
xchg
lret
inc
pop
outsb
in
int3
mov
or
aas
insb
mov
mov
clc
testl
mov
movsb
adc
xchg
in
repz
mov
pop
mov
mov
jnp
mov
popf
and
insb
sbb
cli
sbb
push
test
sub
arpl
hlt
outsl
loopne
add
fstpt
mov
fwait
lret
mov
mov
sub
in
mov
sbb
jae
cmp
jmp
or
lods
sahf
xchg
sbb
adcl
jo
call
rcrb
cwtl
inc
loopne
xor
mov
stos
jecxz
aad
call
ret
push
cwtl
insb
outsl
jl
in
pusha
xchg
sbb
dec
pusha
inc
jp
xchg
sub
cwtl
jae
cmp
mov
ja
mov
cmp
and
push
or
lret
cmc
adc
shlb
sbb
push
outsl
inc
divb
and
ret
lods
push
loope
xor
or
jae
or
jae
jbe
dec
stos
sbb
lods
je
sbb
mov
ja
adc
std
xchg
mov
insl
stos
adc
rorl
xchg
imul
iret
push
lcall
add
jnp
in
pop
push
inc
ret
cmp
pop
and
int3
pop
adc
cmp
inc
outsl
ficompl
ljmp
mov
and
leave
lock
jecxz
adc
push
adc
dec
adc
rcrb
jne
sti
loopne
sbb
fdivrl
leave
push
loop
leave
jecxz
xchg
imul
cmp
pop
ret
mov
mov
pushf
std
pop
lock
rorl
aaa
loope
test
or
pop
sub
shll
pusha
add
or
das
out
xor
push
out
mov
mov
stos
pushf
ss
ds
jle
mov
adc
mov
mov
sbb
arpl
sub
pushf
sub
inc
in
add
clc
mov
lahf
add
lods
xor
mov
push
fsts
daa
add
mov
test
mov
neg
enter
sahf
lock
push
cmp
mull
in
flds
stos
aam
and
nop
out
sub
cmpl
mov
int
sti
fwait
cltd
lret
push
fldl
pusha
adc
push
jecxz
les
dec
test
add
faddl
cmpsl
lcall
xchg
jmp
fcmovb
add
icebp
jo
cmp
inc
call
inc
sbb
stos
aam
dec
adc
shrb
movl
inc
xor
add
and
ret
lcall
js
clc
push
int
dec
pushf
inc
sahf
mov
pop
das
and
xor
push
imul
mov
fildl
mov
sub
jg
test
adc
pop
jae
jg
sbbl
insb
sti
inc
leave
flds
jbe
inc
mov
mov
xor
fidivrs
dec
and
jne
inc
sar
add
into
inc
push
mov
hlt
andl
cs
nop
sar
imul
test
out
cmp
jmp
and
mov
dec
and
pop
lret
cmpsl
jae
movl
lahf
adc
jb
or
les
int
mov
scas
rorl
rcrl
sti
jns
imul
mov
inc
or
xor
dec
pop
sub
push
sub
popa
mov
jp
imul
cmp
and
add
or
adc
push
cs
out
jns
jmp
cli
xor
stos
sbb
mov
and
cmp
add
push
out
jns
or
xlat
sbb
in
arpl
push
add
xchg
ja
psraw
or
dec
bound
sub
or
xor
sahf
add
nop
jo
outsl
inc
loope
pop
cwtl
jmp
stc
jp
jae
xor
cmp
dec
mov
gs
push
or
mov
or
mov
pop
push
pop
fiadds
test
in
lods
ficoml
stos
ret
pop
les
loopne
push
and
iret
popf
ss
ja
dec
movl
push
int3
add
jge
mov
stos
ljmp
stos
enterw
mov
in
rorl
and
cli
sub
mov
pop
mov
iret
pop
xchg
in
rorl
shlb
orb
jne
jno
aad
inc
dec
aam
jecxz
xchg
add
movb
pop
pop
decb
ljmp
mov
repz
into
cmp
mov
repnz
mov
insb
xchg
pop
xchg
push
into
test
sarl
mov
inc
pushf
cmp
mov
repnz
xchg
or
dec
dec
iret
or
enter
push
aaa
idivl
pcmpeqd
lea
out
pusha
xchg
push
push
outsb
jne
fnstcw
pushf
cmp
xor
sub
and
adc
shrb
mov
test
daa
xchg
mov
dec
sub
cmp
scas
fldcw
dec
test
or
imul
inc
sti
out
sarl
cmpb
stos
lea
ljmp
sub
mov
push
sub
mov
jae
test
xchg
test
add
movsb
les
mov
lea
test
jmp
jle
xlat
xchg
mov
jl
xor
in
lahf
push
push
xchg
enter
leave
testb
push
mov
push
in
inc
test
gs
or
mov
imul
inc
mov
jg
cmp
xor
xchg
cmpsl
mov
fimuls
xchg
int
mov
out
leave
mov
cmp
sub
dec
repnz
xor
fsubl
dec
ljmp
test
shrl
inc
and
adc
mov
fistl
mov
inc
shl
addb
rcr
fisttpl
push
sar
adc
icebp
std
out
push
dec
pop
add
push
mov
jge
mov
pop
xchg
pop
mov
mov
or
cmp
pop
lcall
ret
xchg
loope
mov
test
add
jb
jmp
dec
push
mov
jg
repz
jo
hlt
cwtl
add
add
das
sbb
mov
ds
mov
sub
cld
pop
in
pushf
jmp
mov
cmpl
cmpsb
icebp
pop
shrb
shll
into
adc
and
add
cli
and
leave
add
cmpsl
or
or
cmp
sub
pop
mov
mov
mov
out
cmp
in
cmp
ss
aam
rolb
xchg
mov
popf
mov
cmp
aas
icebp
das
addr16
dec
lret
mov
repz
scas
mov
in
pop
cmp
je
cmp
mov
ja
cli
and
push
pop
mov
cltd
xchg
xchg
nopl
jne
push
adc
fisttpl
and
push
je
jle
je
fisubrl
sbb
mov
ror
lahf
push
mov
mov
lods
pop
sub
sbb
dec
jns
aaa
xor
push
rorb
sub
sbb
xchg
pop
push
mov
pusha
xor
stos
test
sbb
mov
daa
jl
out
cmp
js
sahf
ret
es
dec
xor
pusha
mov
adc
cmc
pop
add
xchg
pop
dec
lret
and
xor
test
stc
mov
push
call
dec
shrl
dec
fldcw
inc
movsb
xor
sub
jge
dec
xchg
call
lcall
add
jp
jp
cmpl
leave
sbb
or
push
dec
mov
enter
nop
jp
adc
call
xchg
jmp
jo
stos
dec
out
and
sbb
mov
xchg
add
xor
and
mov
movsl
add
sbb
imul
mov
inc
call
dec
and
out
test
xor
movsb
push
cmpsb
scas
mov
stos
xor
push
dec
mov
xchg
out
fidivs
pop
xlat
outsb
divl
xor
jmp
add
or
mov
xchg
shlb
xchg
out
lcall
push
sub
addr16
ja
xor
push
xor
push
add
push
push
xor
sbb
and
pop
popf
mov
popa
leave
or
pushf
mov
inc
dec
xor
imul
iret
shll
adc
mov
dec
cmp
mov
ljmp
out
outsb
sahf
sub
rep
pop
xor
sub
cs
sahf
in
pop
mov
cmp
cmpsl
or
and
dec
jge
pusha
stc
lods
gs
sbb
scas
sub
jbe
sbb
lds
scas
lods
movsl
push
inc
into
insl
mov
cmc
jae
repnz
or
scas
push
or
pushf
add
sub
fwait
dec
testb
push
mov
pop
inc
lret
std
adc
pusha
xchg
adc
or
mov
leave
cltd
js
fwait
in
add
mov
pop
sub
push
shl
mov
jo
mov
movsl
pop
clc
imul
je
pop
lock
adc
fisubrs
imul
or
xchg
jle
xlat
cmc
js
push
inc
mov
test
mov
or
cmp
loopne
jmp
inc
xor
xchg
adc
in
jle
aad
xchg
addr16
addr16
cmp
mov
lcall
psubb
into
std
arpl
jae
fwait
adc
jle
js
xchg
dec
or
mov
dec
ljmp
pop
aaa
hlt
shr
jl
neg
mov
sbb
cli
xchg
pushl
xchg
adc
mov
arpl
out
mov
jp
gs
and
out
mov
pusha
or
sbb
xlat
adc
push
push
mov
xor
mov
les
ret
cmp
jge
mov
lahf
leave
movsl
pushl
loop
mov
add
js
dec
cwtl
mov
jle
test
adc
mov
xor
hlt
dec
mov
incb
in
mov
jmp
add
jmp
aaa
pop
rorb
cwtl
nop
je
lods
cld
rcrb
jg
cmp
std
xor
inc
add
mov
fisubrs
pop
inc
pop
inc
inc
xor
jo
repnz
adc
fmull
js
cmp
pushf
jnp
shrb
inc
in
fs
pop
pop
jbe
outsl
xor
popa
adc
scas
imul
jb
int
mov
icebp
outsb
cmp
xorb
or
mov
jae
push
repz
fstl
sarl
sbb
mulb
insb
pop
imul
or
mov
ret
jecxz
jl
inc
jno
aam
xor
lea
sub
adc
mov
mov
addb
mov
insb
mov
loop
cmpsb
jns
inc
aad
nop
xchg
cmp
das
adc
ja
sub
or
fisttpll
inc
push
or
pop
cli
ja
and
jbe
lds
add
add
cmpsl
dec
cmp
inc
sbb
loopne
xchg
gs
cmpsb
notb
popf
push
jno
push
sahf
es
outsl
push
repnz
push
inc
adc
mov
dec
cld
inc
sahf
lahf
int
negl
and
and
out
xor
inc
into
and
and
gs
lods
jae
cmc
test
sarl
adc
dec
pop
out
fnstsw
lahf
jmp
dec
mov
push
mov
dec
sbbb
stos
loopne
pop
rolb
test
xchg
test
push
rolb
aad
cmp
add
and
outsb
mov
xor
pop
fildll
clc
not
or
inc
aaa
shr
aam
sbb
addl
pop
dec
outsl
testb
repz
pusha
shrl
lret
and
aaa
pop
cmp
in
lock
xor
leave
mov
cmp
jle,pt
push
outsb
cmp
add
jp
leave
aad
outsb
fwait
in
mov
mov
inc
xchg
dec
mov
adc
xchg
inc
push
mov
in
add
in
push
pop
sbbl
cmp
mov
rorl
enter
inc
pop
dec
ret
mov
rcrl
insl
jle
popf
les
sbb
sub
add
xor
scas
xor
push
mov
std
pop
imul
fwait
jns
movsb
push
pop
xchg
js
frstor
arpl
addr16
lds
ds
out
adc
xlat
leave
cmp
pop
dec
leave
addr16
mov
pop
mov
daa
gs
mov
and
mov
mov
outsl
lret
enter
dec
mov
iret
cltd
repz
aas
das
ret
lods
scas
or
mov
int3
sub
rep
push
cwtl
and
in
test
loop
movb
xchg
test
shlb
mov
lahf
xchg
jbe
cmp
jb
pop
out
cmp
or
or
jnp
mov
or
cmp
or
fwait
in
mov
xor
call
jbe
pop
jno
negb
daa
leave
and
jno
jmp
mov
push
push
clc
dec
sti
add
mov
jb
jmp
test
push
cwtl
iret
test
int3
fwait
mov
jle
dec
cmp
int3
or
ds
popf
mov
rcr
add
daa
lret
push
jo
adc
aaa
sbb
xor
pusha
insb
into
addr16
incl
dec
or
addb
push
shrl
ds
dec
add
mov
mov
add
movsb
gs
mov
jb
pop
jp
mov
dec
aas
in
add
push
jecxz
jno
stc
mov
xchg
test
xchg
push
xchg
sbb
mov
xchg
mov
leave
repz
lahf
stos
and
fld
mov
push
push
mov
push
jae
enter
das
or
xor
push
leave
xchg
sbb
movl
mov
cmc
arpl
js
push
fldt
cmpb
imul
mov
lret
leave
xchg
sub
repnz
sbb
sub
in
xchg
aam
cmp
popf
sahf
out
fsubl
sbb
enter
ret
sub
dec
mov
enter
shlb
or
xchg
rcr
imulb
mov
adc
mov
sbb
mov
jns
cmp
push
mov
jno
test
xchg
add
mov
fistps
mov
cmp
scas
vmread
aad
mov
jmp
adc
repz
pop
mov
shrl
xor
out
push
and
lcall
cmp
les
inc
andl
xchg
mov
jns
notb
mov
scas
sbb
in
cmpsb
dec
push
icebp
stos
or
lret
push
mov
dec
stos
jbe
jmp
or
into
lahf
je
lret
out
sbb
jl
jns
mov
out
out
push
mov
jns
sti
push
clc
icebp
xchg
pop
or
cmp
ss
jmp
fdivp
jbe
dec
dec
mov
rcrb
push
xchg
push
mov
or
pop
pop
mov
cmp
les
testb
and
push
insl
sbb
pop
mov
mov
je
fwait
mov
pop
not
xchg
dec
pop
mov
lock
push
rclb
pop
sbb
or
xor
xor
dec
jbe
mov
sbb
push
movsb
mov
xchg
jnp
sti
rcl
int3
mov
adc
in
leave
push
fiadds
das
push
in
sbb
sbb
sub
cmpsb
mov
push
or
incb
xor
ret
lods
pop
das
insb
xor
lods
popf
jno
out
mov
push
jmp
rol
test
push
outsb
mov
pop
aad
mov
out
pusha
fcmovne
jb
or
mov
lods
loopne
ret
xchg
pop
inc
jg
xchg
rcrb
jns
cmp
mov
dec
adc
test
jl
adc
shr
mov
mov
mov
xchg
xor
jns
sbb
cmp
cld
mov
sbb
mov
aad
movsl
ficompl
enter
jns
int3
out
mov
xchg
cltd
leavew
icebp
and
add
or
popf
popf
fmull
cmpsb
fbstp
inc
ss
int
insb
lret
inc
test
adc
inc
jecxz
loop
mov
fwait
test
or
pop
shl
jo
and
add
mov
lds
movsb
jle
mov
push
push
frstor
mov
mov
cmp
arpl
cmpsb
aam
push
mov
orb
sub
lds
or
frstor
daa
sti
mov
cmpb
sbb
not
dec
push
daa
push
addr16
sub
xor
jecxz
stc
ret
or
jnp
pushf
outsl
jo
iret
dec
ja
es
push
int
rcll
xchg
cmpsb
loopne
mov
shrl
xchg
movsb
lret
lret
xor
mov
cmpsl
leave
out
lahf
negb
adc
cmp
ret
ret
dec
xor
mov
ljmp
fstpt
fcomps
rcl
and
in
lcall
cmc
jp
xchg
andb
outsb
call
xchg
mov
repz
and
leave
mov
inc
xchg
std
aas
lods
shlb
popa
mov
pusha
pop
sub
jns
add
cld
sbbl
inc
inc
xor
out
xchg
mov
ret
into
mov
dec
rcrb
xchg
mov
test
jo
int
mov
cwtl
xchg
ss
push
mov
fcoml
adc
outsb
mov
call
add
stos
or
inc
js
inc
loop
jg
push
imul
enter
adc
adcb
pop
pop
addl
mov
daa
mov
les
nop
rorb
cli
pop
sahf
mov
iret
or
jb
fdivs
push
test
sahf
imul
lock
push
jp
shll
imul
mov
loop
mov
rcrb
iret
pop
jecxz
rcrl
icebp
add
aas
fdivl
xchg
xchg
sbb
dec
test
xor
pop
insb
sbb
loop
mov
add
test
mov
aas
inc
push
adc
gs
mov
mov
shrb
stc
xchg
les
pop
sarb
jbe
int
in
mov
inc
cmp
testb
xchg
jbe
out
cld
mov
lea
and
dec
nop
clc
adc
sbb
scas
mov
ds
outsl
outsl
inc
mov
sbb
mov
push
hlt
mov
in
cld
cwtl
mov
lods
pop
outsb
mov
fdiv
pop
and
push
jmp
test
xchg
sub
je
icebp
inc
lds
push
dec
pop
xchg
pop
xchg
sbb
jo
push
ror
movsl
mov
inc
jg,pt
addl
xchg
adc
and
call
xchg
out
push
and
daa
lock
xchg
stc
js
adc
lea
or
mov
movsl
mov
pop
ror
adc
mov
push
or
test
test
call
scas
lods
pushf
or
mov
mov
mov
xchg
rcrb
fbld
fs
arpl
lcall
or
add
das
and
dec
xor
rorl
cmpsl
inc
push
lds
lahf
and
xchg
int3
xor
pop
push
andb
pop
lock
and
push
lds
subl
pop
es
jno
xchg
jl
faddl
rorl
or
xorl
mov
addr16
xor
hlt
fildll
inc
lods
ljmp
iret
test
jle
adcb
cld
sti
or
push
stos
mov
test
lret
lods
mov
adc
adc
xor
adcl
pop
or
sub
insl
cmp
xlat
rorb
inc
fwait
xchg
xor
push
ss
sahf
cli
and
dec
pushf
sbb
push
or
fldcw
bound
arpl
iret
shl
fisubl
push
call
mov
das
out
mov
in
jle
cld
nop
push
cli
add
pusha
out
dec
xchg
cmp
dec
ret
xlat
aam
mov
sbb
jge
sub
pop
enter
and
sti
mov
cld
sub
lds
lret
xchg
popa
mov
xor
add
jae
jmp
mov
incb
or
adcb
arpl
pop
mov
nop
push
scas
cmp
and
dec
xor
jge
mov
dec
xacquire
pop
or
cmp
decb
adc
or
push
lret
sub
xor
out
in
cmp
ja
push
fcmove
dec
js
push
mov
mov
sbb
jo
cmp
inc
hlt
das
pusha
inc
call
mov
mov
mov
popa
cmp
loopne
rcrb
mov
add
sbb
lea
lahf
sbb
mov
mov
push
dec
push
xchg
icebp
mov
mull
xor
mov
addr16
lds
xchg
push
stc
lods
jae
in
sub
mov
jmp
dec
outsl
mov
sbb
mov
xor
pop
mov
cmp
lods
cmp
fs
jns
mov
push
lods
push
inc
mov
fbld
cwtl
notl
mov
je
std
aad
jbe
repnz
jno
mov
out
xchg
mov
mov
iret
jecxz
into
or
cmp
adc
adc
push
mov
test
jp
es
dec
lods
hlt
rolb
dec
stc
pop
std
jle
pop
add
push
and
sbb
jno
dec
push
sub
or
pop
imul
xor
jl
in
adc
test
xchg
out
xchg
cmp
test
jo
loopne
fcoml
fistps
mov
gs
mov
dec
cmpsl
sbb
xlat
lahf
dec
add
in
aaa
add
imul
repz
inc
push
dec
cmp
fs
or
dec
test
sbb
arpl
xlat
loope
pop
add
ss
and
push
cmc
shl
pusha
fisttps
imul
dec
out
mov
push
jl
lea
cmc
daa
and
mov
jno
dec
cld
jbe
push
push
sbb
xchg
mov
call
jno
notb
xchg
outsl
enter
sbb
insl
cmp
add
ficoml
fsubs
jle
push
jmp
sbb
adc
and
andl
dec
sbb
xchg
shll
push
fwait
dec
push
pop
inc
mov
push
sub
mov
xchg
dec
xchg
std
fbld
and
and
icebp
mov
std
pusha
pop
in
leave
push
jle
aas
cmc
add
gs
sbb
mov
mov
dec
push
mov
out
in
mov
mov
in
pop
test
push
xchg
inc
xor
xchg
mov
xor
cmp
jmp
mov
dec
or
inc
out
dec
shl
fbstp
ljmp
movl
xor
ret
popf
rcr
cmp
and
xor
fldt
add
negl
dec
iret
lea
int3
push
addb
mov
adc
cmp
sbb
inc
sub
mov
cmp
test
loopne
dec
or
cmp
pop
js
lds
xchg
shll
adc
push
mov
fs
repz
popf
mov
pop
mov
and
lahf
xchg
fnstsw
dec
imul
test
add
lods
mov
sbbl
ljmp
ja
movsb
in
pop
mov
cmc
mov
jl
inc
push
jl
mov
and
dec
pop
adc
loopne
pop
xor
cmpsb
jo
insb
mov
cwtl
mov
lret
fdivr
and
stos
sub
insl
mov
or
mov
leave
jae
hlt
leave
push
outsb
loope
imul
ret
jge
pop
mov
dec
es
cmp
shl
lret
pop
pop
and
es
dec
lcall
inc
lahf
pusha
push
in
fistps
out
jne
mov
mov
bound
cmc
cmp
shrl
int
inc
push
call
pop
inc
xchg
sarb
iret
lcall
pusha
pop
inc
sub
insb
lahf
or
jo
pusha
mov
in
jg
mov
jle
test
andb
xchg
mov
ret
loop
xor
loopne
fstps
inc
mov
popa
xchg
repz
fisttps
data16
aaa
sub
mov
push
add
and
or
adc
shrd
dec
pop
cmp
mov
push
ss
xchg
push
les
jmp
cltd
les
fimull
jns
scas
add
jns
aaa
aam
adc
xlat
inc
dec
adc
mov
shll
dec
push
js
pop
in
or
mov
lods
sahf
pop
jge
lret
rorb
add
loope
shr
add
pop
jg
iret
in
inc
cmc
popa
mov
test
pop
adc
adc
enter
and
aad
dec
mov
dec
jmp
mov
sbb
mov
dec
aam
sub
push
iret
pushf
mov
sbb
dec
mov
push
jnp
push
cs
rol
mov
jae
mov
inc
movsl
rorl
scas
sbb
mov
cmp
lcall
lcall
pop
or
dec
mov
in
std
sub
jns
dec
pusha
sarb
xor
fmuls
sub
pushf
xchg
in
sbb
or
mov
adc
jmp
adc
addr16
xor
insl
movsl
xchg
cmp
pushf
sbb
std
fs
fs
xchg
dec
stc
inc
mov
add
push
cs
or
mov
and
jecxz
les
inc
dec
popa
mov
ss
fnstcw
cs
dec
in
shlb
roll
jmp
xor
rorb
add
jmp
jg
lahf
cmc
cmp
cmp
out
sahf
mov
dec
or
fimull
sub
sub
nop
fidivrs
fs
dec
outsb
cli
fucomi
push
push
pop
xor
xchg
inc
mov
ret
stos
mov
fs
xor
lods
push
cmp
ret
adc
jmp
xchg
roll
lock
test
repnz
xchg
das
mov
int3
shlb
popf
push
lcall
into
or
pop
fidivl
inc
sbb
inc
repnz
jge
imul
add
push
mov
outsb
add
aad
fnstenv
mov
lods
outsb
and
shll
xchg
ds
fcoms
sub
dec
xor
into
pop
xlat
mov
add
fdivp
iret
fs
test
push
push
sti
in
and
out
into
inc
icebp
or
push
or
mov
dec
dec
roll
sub
and
test
fsubr
mov
movsb
mov
and
pop
xor
push
shrb
sub
in
mov
in
in
sahf
adc
xor
push
pop
movsl
loopne
in
lahf
popa
out
push
jl
adc
lret
and
in
movsl
adc
push
int3
inc
cs
dec
mov
jnp
dec
mov
and
dec
stos
imul
adc
lahf
xor
dec
mov
cmp
xchg
jb
jnp
inc
add
mov
out
push
inc
into
hlt
incl
rcrb
inc
mov
outsb
mov
mov
lea
push
sbb
arpl
pop
mov
pop
jmp
jbe
cld
int
xor
mov
dec
adcl
stos
or
aas
push
sbb
repnz
loop
mov
mov
xor
jns
adc
lods
mov
adc
dec
push
mov
pop
pusha
nop
dec
sbb
aam
fsubrs
aas
mov
lds
jbe
xor
movsb
icebp
enter
dec
imul
sub
scas
sbb
aad
jno
cltd
dec
pusha
pop
lcall
mov
es
add
decb
inc
dec
and
movsb
imul
ficomps
jns
nop
sub
or
fsts
shlb
adc
jns
insl
mov
mov
mov
xchg
jne
adc
iret
pop
inc
pop
dec
mov
test
lock
push
xchg
mov
enter
jmp
test
dec
ret
and
movsl
cmp
jae
scas
sbb
add
pop
mov
ret
shrl
xor
add
fidivl
gs
fdivr
pop
mov
fxch
xor
mov
sub
push
inc
mov
js
movb
roll
in
notb
sbb
leave
xchg
outsl
aam
cmp
push
sti
push
mov
loop
roll
xor
sbb
les
into
rcrb
xchg
enter
shrl
mov
push
andb
fcmovnu
loope
ret
enter
daa
dec
loope
push
imul
and
inc
mov
adc
mov
adc
add
jae
adc
out
mov
stos
in
push
xor
jne
mov
mov
js
mov
mov
test
push
push
add
sahf
jge
and
sub
sub
fwait
or
cmc
xchg
sti
mov
jmp
into
enter
adc
or
fs
rorb
add
pop
mov
lods
mov
sbb
es
inc
rclb
sbb
pop
dec
sahf
bound
mov
add
pusha
faddl
nop
fidivrs
xor
test
mov
je
int
jle
add
lret
ljmp
add
sub
fists
ljmp
fisttpl
xchg
mov
call
jns
mov
add
lcall
ljmp
cmpsl
dec
cmc
ja
orb
test
stos
pop
faddp
fnsave
insl
xor
dec
outsl
adc
fwait
mov
daa
lods
push
push
loopne
inc
mov
cmpsl
mov
jmp
adc
mov
imul
inc
int3
pop
cltd
adc
in
mov
repz
das
lret
xchg
mov
in
sub
dec
lds
lds
imul
movsb
cmp
xor
hlt
pop
push
mov
ret
out
mov
dec
mov
out
xor
fdivs
xor
inc
jno
aaa
lock
daa
rcrl
fdivrl
pusha
push
pusha
aad
cmp
xchg
icebp
or
call
je
mov
xchg
int3
mov
aad
inc
hlt
sub
loope
aad
sbb
orb
sbb
insb
mov
dec
pop
mov
ljmp
jns
lret
lret
mov
ret
xor
jbe
jnp
ja
mov
jbe
cwtl
xchg
lods
out
push
test
aaa
push
mov
sub
fisttpll
jne
shll
outsb
out
add
sbb
movsb
fnstcw
xor
lods
and
mov
loop
enter
lea
adc
mov
pop
mov
adc
adc
dec
and
rcl
std
sbb
loope
jmp
xchg
fwait
test
sbb
in
vfmsub231ss
add
imul
push
pop
push
xor
cs
pop
stos
xchg
rorb
xlat
clc
or
enter
into
int
mov
inc
lret
sub
fidivl
xchg
or
sub
sub
mov
mov
sahf
pop
gs
jnp
fsubl
pop
pop
or
call
adc
ret
icebp
lods
std
and
cmpsb
mov
movsl
lret
pop
pop
cmp
aas
jns
xor
icebp
jb
mov
aaa
mov
pusha
out
faddl
xchg
sub
mov
data16
test
xchg
sub
mov
daa
sahf
mov
jg
inc
aaa
xlat
pop
sub
lahf
shlb
je
dec
push
xchg
inc
sub
out
pop
mov
popf
sub
test
mov
ret
and
addb
or
push
xchg
outsb
stos
pop
jmp
repz
or
pop
scas
loopne
in
xchg
mov
mov
in
aas
outsb
hlt
inc
aas
int3
mov
push
pop
push
fidivl
xlat
pop
inc
in
mov
add
nop
adc
int3
add
mov
mov
outsl
mov
sub
loop
test
pop
mov
enter
mov
sahf
xchg
cmp
push
jnp
dec
enter
aas
and
sbb
or
xor
ja
nop
mov
and
sub
dec
hlt
bound
xchg
pop
or
xchg
icebp
cwtl
push
jmp
xchg
mov
lds
cmp
out
and
clc
insl
std
sub
stos
adc
pop
outsb
cmp
fucomip
and
pop
rcrb
and
fstps
or
cmp
jp
mov
jl
xchg
cmc
xor
add
mov
jp
or
mov
xchg
loop
jb
mulb
dec
jp
cmp
shr
in
in
mov
iret
mov
test
mov
aas
repz
setbe
stc
std
inc
xlat
push
pop
cmp
jae
bnd
pop
mov
jns
push
lahf
jbe
mov
or
pop
adcl
movsb
rcrl
subl
pushf
sbb
push
push
mov
cld
ucomiss
bound
jl
mov
neg
lret
mov
pop
mov
xchg
loop
push
fcmovu
mov
mov
stos
jo
fstpl
and
enter
cmp
adc
jnp
jp
sub
jp
lock
jno
dec
inc
jbe
jbe
adc
sti
xchg
fwait
sub
jl
jl
jo
mov
lds
mov
mov
loopne
sub
push
clc
popa
mov
stc
loope
and
pop
cmp
xchg
pop
repz
pop
std
jns
aaa
cmp
repnz
gs
movsl
jnp
jno
xchg
inc
das
sbb
and
movsl
add
lea
aas
or
or
xchg
test
mov
ret
pop
in
inc
in
adc
sarl
sbb
xchg
jne
divl
rcrl
pop
inc
cmp
dec
bswap
mov
stos
xchg
fcomps
cmp
addr16
mov
xor
adc
xor
out
inc
push
xchg
sub
loop
or
jecxz
jns
xchg
shll
jmp
xchg
xchg
inc
mov
mov
addl
fcmovne
mov
je
aam
hlt
fcoms
add
xlat
cmp
mov
sti
or
loopne
arpl
lret
push
push
inc
and
push
shl
sbb
les
and
daa
push
fstl
stos
xor
outsl
mov
mov
pop
insb
cmp
sbb
sbb
pop
clc
pop
sub
js
sub
imul
pop
sub
mov
scas
aas
out
lahf
arpl
dec
test
movsb
add
push
insb
jmp
test
jecxz
insb
hlt
data16
inc
fisubs
mov
stos
jecxz
inc
cmp
jnp
mov
pushf
push
repz
push
sub
repz
xchg
or
movsl
mov
xchg
lahf
push
jo
cmpb
fstpt
mov
sbb
pop
push
js
jge
jno
sbb
adc
adc
pusha
xchg
jns
mov
into
cli
mov
cmp
ror
mov
mov
lret
add
mov
sbb
cld
fdivrs
xchg
cmp
repz
jno
pop
and
add
repnz
mov
je
xor
sub
inc
out
xchg
mov
xchg
call
lock
stc
inc
dec
mov
jne
lock
jle
insb
push
movsl
push
sbb
mov
loope
jle
inc
in
add
adc
xor
mov
imul
enter
pop
push
jecxz
movl
inc
mov
int
push
inc
cmp
shll
mov
ja
adc
sbb
mov
in
jl
pop
mov
test
inc
aad
dec
cmp
mov
sbb
imul
inc
movsl
jle
cmpsl
xor
or
mov
xchg
mov
and
push
add
in
mov
mov
cmp
popf
rorb
outsb
pushf
cmpsl
jl
sub
lcall
sbb
insl
xchg
mov
sti
popa
xchg
out
adc
xor
arpl
jo
adc
pop
je
int3
jle
jae
xlat
int3
sub
scas
add
dec
jg
and
loope
test
outsb
fisttpl
xchg
mov
scas
dec
pusha
popf
ret
jmp
mov
ljmp
fldpi
les
pop
and
add
cs
sbb
test
sbbb
in
mov
mov
or
out
dec
inc
jl
mov
and
sbb
sub
leave
stos
lret
add
dec
sbb
mov
pop
mov
push
mov
mov
mov
arpl
sbb
add
out
jmp
sbb
jnp
mov
cmp
or
repz
sbbb
jne
fstps
fildll
push
jae
cmp
cltd
inc
stos
add
in
cmpsb
or
mov
xor
mov
imul
imul
cmpb
pop
and
pop
jecxz
andl
jno
and
fs
dec
scas
inc
test
imul
lock
rcrb
xor
lods
sarb
dec
pop
push
sahf
or
xchg
ud1
enter
mov
push
cmp
inc
mov
scas
rorl
and
cmpsl
pop
push
loop
sub
fdiv
mov
dec
adc
cld
mov
dec
dec
mov
sbb
mov
cmpsl
push
jnp
xlat
add
cmc
and
sub
dec
les
repnz
gs
sub
xchg
outsb
mov
pop
push
rclb
enter
inc
mov
arpl
and
mov
int
mov
push
lahf
andb
flds
popf
xchg
shl
and
out
xlat
xchg
je,pn
mov
cmp
dec
cmp
repz
adc
lds
add
and
pop
mov
inc
loope
xor
mov
mov
or
dec
xor
cmp
stos
push
mov
loopne
fwait
push
mov
nop
arpl
lock
dec
jmp
pop
pop
ror
mov
add
cmpsb
mov
lret
aas
movb
bnd
mov
in
pop
test
jbe
sbbb
lods
pop
xlat
stc
ret
cmpb
xor
mov
mov
sub
sbb
add
aaa
jns
les
sub
mov
iret
inc
mov
dec
xor
pop
or
addr16
addr16
pop
mov
xchg
sbb
es
aam
call
imul
rorb
fnsave
jno
out
adc
and
cmc
ljmp
pop
lret
xchg
adc
imul
mov
out
loopne
imul
push
into
cs
arpl
je
mov
xor
sbb
outsb
fucomi
ss
sbb
xor
pop
in
mov
aaa
sub
mov
ret
dec
dec
rcrb
addr16
pop
and
mov
or
jnp
popf
dec
test
xchg
lods
into
idivb
adcl
std
and
or
in
call
nop
add
xchg
out
mov
insb
inc
int
inc
dec
insl
sarl
push
aaa
mov
loope
pop
ljmp
js
int
adc
aas
fsubl
add
inc
mov
or
sub
mov
mov
mov
hlt
fsubrs
enter
inc
addr16
mov
inc
scas
push
lock
dec
hlt
lret
xchg
ss
sbb
neg
inc
cmc
or
jno
xchg
ret
mov
push
pop
hlt
es
or
pop
push
fs
lock
and
dec
inc
lods
adc
pop
mov
add
aaa
pusha
xchg
cmp
imul
test
xor
jp
xchg
mov
and
pop
enter
mov
lods
mov
pop
out
push
js
test
push
ret
in
pop
dec
in
cmc
pushf
lods
xchg
dec
lock
sbb
and
xorl
out
and
mov
out
sub
cmp
sbb
or
mov
jae
std
ss
outsb
inc
sbb
jne
xorl
sbb
pop
hlt
cld
shll
repz
jp
xor
sbb
jno
dec
sub
mov
loop
out
imul
bound
sbb
bound
jg
jns
jno
lods
dec
ss
ror
inc
cmp
xor
mov
jb
mov
rorb
aad
xor
shlb
sbb
push
add
add
sub
xlat
jmp
jne
arpl
mov
and
pop
in
sbb
loopne
int3
data16
andb
lea
mov
push
clc
lods
adc
adc
pop
mov
cli
rclb
cmp
gs
aad
stos
stos
jp
mov
aaa
div
mov
and
fxch
sbb
dec
and
push
cs
pop
add
out
dec
or
stc
sub
sbb
lret
mov
pop
add
xor
cmp
mov
jnp
pop
stos
dec
stos
mov
push
lret
sub
push
in
fidivrl
inc
xorl
cmpsb
mov
imul
lods
mov
ds
cmp
sub
push
aaa
push
nop
push
mov
jne
pusha
xchg
xchg
jge
arpl
pop
adc
or
jecxz
fimuls
int
inc
jo
outsl
adc
iret
imull
jae
lcall
xchg
mov
stos
add
out
xor
fchs
cmpsl
icebp
and
dec
mov
cmpsl
cmp
xchg
jg
dec
mov
aad
shrl
das
inc
fsubr
rcll
xchg
popa
fsub
sub
add
data16
cld
icebp
fldenvs
mov
outsl
xchg
ss
addr16
cmp
mov
or
adc
lock
jp
pusha
scas
sbb
mov
scas
sub
test
adc
mov
flds
in
in
lret
repz
pop
jns
ljmp
or
xorb
mov
jo
js
rolb
mov
jo
outsb
test
xorl
dec
test
insl
out
std
movsb
test
adc
push
mov
push
inc
pop
add
xor
mov
xor
pop
test
and
adc
xchg
js
cltd
or
and
and
or
cmc
or
mov
aas
sbb
bound
jnp
cmp
loope
roll
jge
dec
out
outsb
sbb
imul
add
or
pop
inc
mov
arpl
imul
mov
add
mov
stos
shl
cwtl
jecxz
push
inc
cld
enter
push
mov
mov
pop
xchg
flds
pop
sub
mov
stos
dec
push
aaa
xor
mov
mov
loope
hlt
inc
adc
cmp
sbb
clc
in
imul
fstpt
mov
jge
insb
sbbl
inc
xchg
mov
dec
outsl
jne
dec
rcrl
cltd
fists
mov
jnp
cld
cmp
add
insb
out
decb
fcoms
fimull
dec
pop
push
nop
ja
fs
es
into
mov
jae
xlat
xchg
push
mov
xchg
xchg
mov
pop
mov
sti
mov
daa
cltd
xchg
xor
idivb
cld
sub
sbb
push
jo
fstpl
lahf
stc
popf
leave
pop
inc
es
cmp
pop
mov
add
popa
xor
xchg
xor
test
outsb
mov
jb
mov
mov
arpl
dec
mov
pop
fs
and
ret
and
shr
fistpl
test
pop
sub
jns
mov
cmpsl
loop
sub
push
jecxz
push
int3
adc
mov
test
test
mov
push
aad
jmp
mov
mov
dec
xorb
mov
mul
das
mov
cmovne
repz
adc
cld
mov
fsincos
neg
xor
xor
mov
cmp
outsl
xchg
xchg
lret
adc
stos
ljmp
insl
jbe
sbb
mov
leave
dec
sbb
mov
dec
adc
mov
jnp
fdivr
push
xor
sub
andl
push
xchg
vpmulhw
outsb
out
repnz
sub
testb
push
out
xor
dec
mov
cli
jecxz
add
enter
and
dec
sbbb
mov
daa
push
inc
push
nop
pop
xchg
sti
call
sub
iret
nop
cmp
jne
adc
pushf
push
loope
rcll
inc
add
mov
stos
and
push
pushf
mov
lret
ret
mov
xor
ja
popa
lods
lock
xchg
data16
xlat
cmc
sarb
push
dec
xchg
lock
xor
dec
aam
mov
call
movsb
flds
das
in
mov
test
xchg
cmp
sbbl
xor
or
repz
and
inc
aam
jb
jp
lds
jp
jo
xchg
js
pop
shr
push
mov
dec
clc
sti
pop
popf
into
addr16
idivl
lret
into
adc
mov
pop
fidivs
sub
fstl
push
jmp
push
adc
std
enter
inc
fs
stos
mov
popf
adc
pop
jbe
fbstp
and
jp
push
sbb
das
je
outsb
pop
inc
inc
push
add
imul
scas
inc
sub
btr
jnp
mov
fdivl
jmp
sbb
mov
insl
ljmp
push
dec
xchg
inc
ret
push
das
in
int3
dec
in
push
mov
add
cmp
xchg
imul
mov
lar
sbb
mov
or
fnstsw
jo
bound
into
fstl
cmp
jbe
imul
adc
mov
pop
rorb
je
xchg
dec
push
testl
push
pop
jecxz
add
movsl
icebp
or
xor
push
inc
cmp
je
sbb
jp
shl
stc
cmp
or
sbb
lret
push
rclb
repz
adc
arpl
sahf
stc
jecxz
push
les
adc
insb
mov
fs
sbb
xor
lahf
and
loop
dec
mov
push
stos
add
in
cmp
xor
jg
dec
sub
test
fadd
add
adc
jge
outsb
data16
mov
int
out
rol
insb
add
jg
dec
pause
movsb
lahf
dec
into
fsts
mov
cwtl
dec
push
jb
leave
mov
push
push
adc
aam
push
lods
js
fadds
sbb
mov
cmpsb
dec
cmc
repz
cwtl
pop
pushf
inc
lods
fwait
loopne
and
clc
sbb
add
adc
dec
in
leave
sbb
and
mov
rcll
mov
sbb
dec
js
sub
repz
sahf
dec
mov
sbb
pop
pusha
dec
lods
jo
xchg
popa
outsb
xor
popf
inc
or
add
xorb
jbe
fdivrp
adc
adc
cltd
popa
jle
les
int3
push
sti
stos
and
sbb
pusha
mov
loop
lock
add
les
fistl
jecxz
out
js
shlb
dec
pop
add
sahf
loop
scas
dec
pop
int3
call
jno
cli
push
outsl
push
inc
bound
ljmp
imul
adc
mov
pop
out
divl
inc
pop
inc
and
jb
jge
dec
push
inc
ja
ror
sqrtps
xchg
test
nop
fnop
pop
pop
cmpsb
mov
xor
pushf
shll
std
in
data16
inc
enter
enter
ffreep
pop
lcall
das
cwtl
sarl
lea
mov
aam
mov
test
shr
dec
adc
lret
stc
xor
out
push
jae
xor
xchg
int3
inc
or
in
add
xchg
mov
std
cmp
mov
xchg
out
decl
aas
xor
popa
int3
pop
flds
out
pushl
je
fisttps
pop
push
and
jnp
mov
nop
pop
loope
in
adc
cmp
dec
clc
pop
jno
sub
in
mov
mov
add
je
loope
push
adc
jl
cli
jno
xorl
xchg
cmpsl
jp
pop
push
mulb
scas
pop
addl
fnstsw
xor
lock
shll
outsl
gs
push
insb
and
mov
or
or
movsb
push
lret
push
cmp
push
jae
mov
and
push
pop
or
xlat
or
sbb
mov
iret
inc
orl
decb
add
flds
dec
scas
jae
jl
iret
add
out
xlat
sarl
loop
cs
pop
stos
lret
incl
cmpsl
xchg
sub
shrb
cmp
lahf
shl
stos
stos
adc
cmp
add
scas
cli
fcmovb
mov
fstpt
in
imul
enter
mov
scas
ret
idivl
pop
aam
cmp
mov
xor
xor
sbb
dec
dec
fwait
into
sbb
and
adc
xlat
test
arpl
mov
mov
sub
out
xor
sub
mov
jbe
mov
mov
arpl
mov
movsb
jbe
sbb
sub
push
sahf
fists
push
sti
mov
out
inc
rorb
jmp
fidivrl
ret
sub
and
push
sub
dec
repz
dec
xlat
scas
xor
cli
stos
jl
mov
fcoml
mov
and
cld
stos
test
jecxz
xor
jno
xor
xchg
dec
js
pop
cmpsl
push
aad
xor
xchg
lahf
pop
xor
or
mov
xor
cmc
int
pop
mov
bound
sub
sbb
sub
lcall
lods
test
popa
sbb
mov
inc
mov
inc
sbb
xlat
xchg
add
leave
addr16
push
push
pop
add
mov
in
cmc
sti
pop
fdivrs
inc
jge
data16
add
jmp
pop
dec
push
sub
sbb
sub
pop
out
lea
lea
and
xchg
jmp
inc
inc
dec
in
or
sub
es
insb
ss
data16
sub
loopne
sbb
movsb
xor
dec
dec
jo
and
lret
push
fdivl
sub
xor
xor
cmpsb
cwtl
mov
add
movsb
push
xchg
sbb
inc
mov
add
lds
push
inc
or
or
pusha
and
cwtl
push
fmuls
adc
dec
cwtl
sub
out
mov
xor
sub
int3
mov
or
stos
push
push
jne
aad
cmp
mov
pop
je
sbb
lock
lret
xchg
mov
xchg
cmp
movsb
adc
call
or
mov
pop
xchg
dec
loopne
add
jne
push
mov
pop
imulb
repnz
sbb
cmp
repnz
adc
pop
xchg
cli
pop
or
into
jns
xchg
mov
add
outsb
sbb
mov
in
enter
mov
xchg
movsl
xchg
outsl
repnz
add
std
loopne
cli
push
js
repnz
sahf
push
in
push
in
rorl
push
xor
test
xor
lcall
idiv
mov
pusha
sbbl
orl
mov
stos
in
jb
popa
jae
inc
stc
cmp
xor
test
cmpsl
xor
imulb
fnstenv
icebp
mov
sub
cmpsb
fadds
push
jp
popl
xchg
repnz
stos
sbb
aam
push
das
and
sahf
ds
or
int
pop
stos
mov
pop
aas
aad
call
pusha
adc
std
bound
in
pop
clc
pop
jmp
add
data16
arpl
out
sbb
inc
sub
hlt
cmc
ljmp
fcomp
roll
fnsave
sub
mov
out
push
ret
cli
ja
sub
jp
mov
int
test
insb
mov
xchg
adc
ficomps
cmp
ds
jae
or
mov
mov
sbb
push
xor
jecxz
xchg
xor
push
adc
mov
jno
mov
call
mov
rorl
inc
inc
cltd
dec
pop
jg
jmp
sub
outsb
xor
and
adc
rcrb
out
inc
adc
push
xor
repz
and
decl
popa
mov
add
loop
xorb
std
adc
push
cmp
mov
xor
clc
std
sub
cmp
outsl
rcl
inc
jg
sub
cmpsb
int
push
push
cmp
je
mov
and
movsl
out
cli
xor
mov
sub
cmp
sbb
sbb
mov
fcmovnbe
and
adc
rcr
adc
sub
test
pop
das
sahf
inc
pop
aad
outsl
mov
mov
pop
imul
add
xor
or
test
mov
push
aaa
inc
mov
dec
jmp
xchg
rclb
fistps
in
and
shlb
lock
mov
xchg
into
add
sbb
pop
push
loopne
or
and
jns
popa
sbb
icebp
lock
and
mov
cs
mov
pop
cmpsl
jle
pusha
out
inc
push
lods
inc
xlat
xchg
cmp
push
inc
notb
arpl
stos
inc
shll
test
jmp
loop
push
les
and
mov
es
pop
pop
or
jae
sbb
inc
test
mov
int3
enter
icebp
or
dec
flds
inc
adc
stos
or
lret
dec
sahf
dec
push
jbe
mov
mov
push
repnz
cmp
stc
cltd
jecxz
lods
sub
lahf
scas
clc
cs
insb
adc
ljmp
sbb
repnz
clc
mov
cmpsb
ja
mov
fldt
loop
repz
mov
cmp
xor
cmp
loopne
in
punpckhdq
push
cmpsl
subb
xchg
popa
sahf
call
outsb
or
jns
and
addr16
fst
into
div
mull
pop
inc
leave
and
pop
mov
fsts
cmpsl
xor
loopne
xor
ret
or
xor
repnz
data16
aas
ljmp
dec
mov
inc
and
lods
cmp
inc
lcall
test
ljmp
xchg
test
out
push
or
stos
fldcw
xlat
adc
jno
cld
lret
stos
add
sbb
mov
dec
js
insb
pop
adc
dec
fldcw
add
add
insl
ss
jle
andb
lds
popf
arpl
faddl
jle
jno
or
orl
test
sub
mov
sbb
dec
sbb
xor
mov
fistpll
lcall
or
js
mov
insb
int3
scas
or
fldcw
push
or
jns
jl
out
push
sahf
mov
inc
stc
enter
je
pop
mov
in
hlt
lret
mov
sbb
out
pop
je
sub
and
sbb
cmpsb
fwait
add
xchg
andb
pushf
push
shlb
js
arpl
rcll
ret
cmpsl
stos
stc
sub
push
xchg
cltd
test
jle
push
loop
inc
mov
pop
nop
subb
fimuls
pusha
insl
mov
dec
pop
inc
xchg
inc
sarl
xor
pop
mov
dec
dec
xor
cmp
push
pop
js
fs
push
js
jp
add
sbb
testl
test
lahf
outsl
adc
mov
mov
fwait
pusha
xchg
pop
out
aad
outsl
stos
and
int
cmp
fnstenv
pop
pop
xchg
shr
push
mov
in
cmp
outsb
pushf
xchg
lret
leave
lea
push
sub
inc
cwtl
movsb
xor
push
shrl
or
imul
pop
xchg
aas
xor
inc
xchg
mov
test
hlt
mov
pop
pop
ljmp
push
cmp
jne
leave
flds
or
outsb
xchg
popf
cmp
cli
ss
mov
shr
push
andb
xor
cmp
or
cwtl
dec
and
jne
jge
imul
lea
pop
repz
lods
call
adc
and
nop
cmpsl
inc
jmp
outsb
adc
add
orl
xor
imul
xor
roll
pop
jo
jg
pusha
dec
push
xor
imul
test
adc
ja
jg
pop
pop
mov
pop
mov
inc
jp
hlt
add
arpl
cmp
pop
push
sbb
lahf
push
test
or
pop
mov
adc
vsqrtps
loope
pop
push
mov
and
frstor
sub
nop
lret
dec
adc
fs
lret
test
fisttpll
mov
call
mov
push
mov
out
lds
jge
dec
jmp
iret
mov
inc
icebp
test
mov
int3
in
test
iret
jb
sbb
mov
adc
mov
out
xchg
mov
adc
xor
ja
inc
mov
pop
sub
push
inc
movsl
xchg
clc
and
xchg
sub
dec
xor
hlt
ret
jae
jne
inc
lahf
push
cwtl
pop
lahf
out
cmp
jo
xchg
or
mov
xchg
cmc
sub
mov
cmpb
adc
enter
clc
and
inc
dec
mov
sbb
xchg
xorb
repnz
gs
rcl
xorb
sarb
test
or
jo
pop
mov
outsb
je
mov
pop
add
das
push
push
mov
test
pop
mov
push
add
inc
movsb
sahf
and
cli
fwait
or
test
popa
out
jecxz
pop
imul
add
enter
fsubrp
jne
pop
jno
sbb
mov
loopne
std
push
lret
mov
jns
add
adc
fpatan
mov
push
sbb
fists
cltd
in
lret
lcall
xchg
sbb
flds
arpl
popl
out
mov
push
cmp
dec
or
pushf
mov
nop
mov
jns
or
loop
lds
sbb
jns
and
sub
into
mov
jmp
les
cltd
and
xchg
shlb
fdivrp
in
in
movsb
cmp
mov
in
jb
cltd
mov
inc
adc
push
dec
stos
push
xchg
add
adc
scas
hlt
nop
shlb
fadds
lods
pushf
xchg
jecxz
mov
pop
lret
stos
repz
aam
pop
xchg
mov
outsl
mov
arpl
cmp
push
dec
bound
mov
or
mov
or
xlat
or
dec
movsl
fs
lcall
sub
sub
lds
cmp
fwait
jg
and
sub
mov
shll
jb
push
dec
cmp
xorl
cmpsb
aas
inc
pop
mov
or
mov
mov
insb
cwtl
subb
cmp
stos
imul
push
pop
add
dec
add
icebp
adc
lcall
add
fsubs
mov
sub
in
xchg
stos
and
imul
xlat
and
xchg
mov
or
dec
inc
mov
add
mov
dec
fnsave
jno
pop
inc
jg
cmp
sbb
pop
gs
daa
pushf
mov
stos
dec
cmpb
add
mov
sbb
push
or
jmp
xchg
fisubrs
fisubrs
mov
mov
push
loope
adc
push
jae
inc
push
push
cmp
cmpsl
mov
in
in
out
arpl
mov
push
out
adc
icebp
cld
fsubrp
out
cmpsb
loopne
faddl
jae
adc
cwtl
repnz
sbb
data16
call
lahf
movsb
cmp
xor
dec
push
push
or
insb
inc
jns
jp
sti
and
fstps
inc
lds
dec
xchg
pop
pushf
js
jno
pop
movsb
push
jbe
mov
outsb
sub
sub
push
add
in
jle
xor
hlt
sub
xor
jae
sahf
outsl
mov
mov
mov
sbb
stc
stc
cs
mov
shrl
dec
xlat
fisttpl
mov
ds
cld
xor
add
pushf
repnz
out
cmp
dec
sti
aad
lock
stos
jmp
jmp
mov
out
out
in
mov
cmpsl
mov
jg
cmp
aaa
adc
xchg
mov
push
sub
icebp
ljmp
popa
xlat
mov
mov
addr16
push
lock
pop
in
popf
ljmp
repnz
dec
or
and
jbe
aas
or
mov
push
mull
leave
push
add
mov
lret
push
movsb
push
jp
sahf
add
fistpll
jb
stos
fldln2
addr16
daa
and
push
out
add
lds
arpl
dec
dec
rcl
fidivl
lahf
jmp
xor
sbb
nop
push
push
iret
out
or
mov
add
mov
jbe
mov
cmpsb
lods
cmp
xchg
and
push
fcoms
push
or
lock
clc
aad
xor
xor
cmp
mov
mov
mov
bound
mov
push
fadd
sbb
xchg
movsl
xor
pop
fcompl
mov
adcl
add
popa
lods
js
xchg
dec
cmpsb
sbb
adc
dec
dec
rcr
andb
pop
dec
cltd
inc
add
inc
icebp
or
xchg
les
imul
mov
jo
adc
pop
cmp
sbb
repz
inc
add
out
add
sahf
jp
ljmp
pop
in
scas
fnsave
jg
sbb
cmp
cs
fwait
or
adc
cmp
insb
pop
inc
adc
cmc
out
lea
pop
in
sarb
push
adc
in
jo
cld
or
fstps
fidivs
sbbl
sarl
mov
enter
popa
sbb
jns
jg
inc
jmp
loope
ja
mov
outsl
and
jo
sub
mov
out
push
xchg
stos
lock
loope
scas
dec
xchg
and
sbb
jg
scas
fwait
jbe
rcl
jae
ja
aam
adc
cmp
les
inc
call
inc
mov
adc
add
sarb
fwait
add
push
push
push
cmp
cmp
dec
ret
push
test
sub
test
pop
out
mov
push
lods
fs
and
cmp
xchg
movsl
adc
incb
mov
inc
inc
mov
loop
mov
inc
lcall
mov
loopne
ljmp
push
mov
jl
xchg
mov
mov
cmpb
iret
and
movsb
or
dec
test
push
xchg
clc
dec
test
push
cmpsb
mov
adc
dec
and
int
sarb
dec
frstor
or
dec
jne
sbb
xor
out
data16
stos
cli
test
pop
pop
and
sahf
divb
and
cmp
adc
jb
cmp
aam
mov
enter
aam
icebp
jle
push
notb
adc
loop
mov
inc
lods
sahf
sub
stos
out
aaa
xchg
mov
dec
push
mov
in
pushf
rorb
pushf
sahf
inc
push
loopne
jbe
mov
adc
cmp
nop
fstpt
lret
lds
add
pop
test
mov
jg
das
xor
xchg
inc
dec
sbb
pop
or
xchg
adc
mov
fwait
lock
jae
dec
lret
jecxz
in
add
add
mov
and
pop
and
insl
outsl
data16
mov
mov
inc
lret
cmpsl
sub
insl
pop
lods
jne
int
mov
sub
add
out
int
fbld
roll
jge
das
dec
loopne
stc
jmp
cmp
push
mov
xchg
fistpll
popf
and
mov
mov
sub
fisttps
les
std
push
xchg
mov
repnz
int
out
insl
aas
mov
or
fs
mov
clc
in
loop
jl
aaa
call
xchg
pop
fdivrl
xchg
mov
cld
sbb
mov
inc
dec
cld
mov
scas
imul
cmp
mulb
sbb
addr16
dec
xchg
jmp
test
mov
adc
and
mov
or
andl
push
push
in
or
mov
fistps
inc
and
or
ja
sub
lods
inc
xchg
in
adc
shl
cmp
dec
outsb
std
push
mov
pop
std
adc
mov
xchg
shlb
cwtl
ja
jecxz
rclb
loop
js
cmpsl
cmp
sbb
inc
push
jno
imul
sar
ds
add
fucomi
xor
jmp
icebp
fimuls
xor
out
ja
iret
pop
mov
imul
nop
icebp
adc
or
outsl
xchg
jmp
shlb
and
xor
cmpl
aam
lods
dec
adcb
xor
out
std
add
int3
sub
int3
repnz
jo
adc
pop
popa
in
pop
leave
dec
pop
ds
or
inc
icebp
inc
and
int3
jge
push
sti
cmpsb
test
pushf
inc
loopne
dec
ljmp
or
mov
subl
dec
fwait
sbbb
gs
pop
in
fisubrl
cmp
adc
cmpb
jae
sti
sbb
xchg
hlt
push
in
dec
lahf
les
xchg
loopne
jge
push
aam
jp
loop
xchg
inc
gs
jmp
sub
rorl
mov
jp,pn
mov
or
or
mov
insb
push
pop
je
in
or
add
out
dec
inc
dec
pop
cmpl
pop
cmp
ret
mov
xchg
mov
and
push
fcompl
loop
clc
out
pop
rcll
fidivrs
jge
sub
lock
imul
and
loopne
mov
add
adcl
inc
out
jge
imul
mov
dec
shl
xor
mov
das
sub
lret
ss
lods
adc
sarl
adc
repnz
inc
fbld
pop
xor
cmp
ret
fisttpl
imul
inc
movsl
pop
mov
fldpi
addr16
mov
xor
das
insl
movsb
dec
scas
ss
xchg
jns
cmp
or
orl
es
mov
hlt
mov
loopne
mov
stos
cmpsb
movsb
ret
sub
cmpsl
pop
stos
test
mov
adc
loopne
jge
fldcw
outsl
push
fstps
cmpsb
out
cwtl
into
shll
jne
inc
pop
cli
daa
cld
mov
mov
mov
roll
test
out
pop
iret
in
mov
cmpsb
cmp
mov
rcrb
lahf
repz
dec
push
fisubl
jge
std
daa
fsubs
popf
or
inc
bound
push
lea
push
push
insb
adc
mov
pop
icebp
xchg
add
jno
inc
sbb
push
repnz
movsb
mov
adc
jns
rcrb
fwait
or
into
jg
xlat
inc
andb
jo
push
int3
mov
dec
addl
fistl
jg
mov
sahf
cmp
mov
push
enter
mov
movsl
push
shll
int3
add
jg
lret
std
mov
sub
leave
mov
dec
outsl
and
rcrb
mov
sbbb
jle
pop
subl
add
xlat
incl
movsb
xchg
fldt
je
mov
scas
aaa
mov
leave
scas
test
push
xor
pop
out
dec
sub
dec
cs
jns
pop
sbb
xor
cmp
sub
pop
pop
cmp
hlt
sub
dec
insl
dec
and
loopne
popf
add
nop
lahf
aad
fwait
and
dec
clc
add
ds
or
lahf
shr
xchg
sti
out
cmovbe
imul
stos
out
stc
mov
das
lods
and
daa
lods
pop
aaa
subl
sub
adc
and
push
test
add
and
jecxz
sti
out
js
addr16
in
add
test
xchg
or
and
shll
cmpsb
sub
dec
pop
int
mov
aad
je
cmp
imul
cmc
je
lahf
cmp
sbb
adc
lret
nop
inc
sti
and
or
div
or
xlat
je
fndisi(8087
fbstp
sbb
shrl
sub
xchg
dec
outsb
xlat
jb
inc
inc
cmp
aad
mov
inc
dec
cmpsb
imul
mov
lret
or
add
aad
arpl
sbb
dec
sbb
push
outsb
mov
icebp
inc
cmp
pop
in
fists
xchg
inc
and
cmp
mov
stc
dec
dec
mov
out
pop
xchg
lock
fwait
mov
lock
xor
fxch
push
xchg
mov
add
lods
call
insl
dec
xor
fnstenv
ret
inc
dec
mov
inc
scas
lcall
mov
mull
xchg
outsl
sarl
mov
add
xor
iret
mov
mov
fimull
xor
push
cltd
insb
mov
xchg
xorl
shl
repz
test
pop
popf
inc
outsb
jmp
scas
jle
xchg
repz
sub
sbb
sbb
sbb
out
addr16
lea
mov
jb
pop
push
lods
dec
add
notb
lods
cmp
sub
std
push
ret
out
push
pushf
cmp
jo
test
add
lcall
lea
sbb
dec
adc
or
repz
dec
ret
dec
sbb
hlt
repz
sbb
test
in
dec
mov
ret
nop
lds
sub
adcl
std
and
or
in
jmp
divl
inc
cltd
push
mov
cmpsl
outsl
ret
mov
xchg
iret
mov
pop
enter
sub
jnp
icebp
lds
std
rol
or
sbb
rcrb
add
arpl
test
add
xor
fstl
in
sub
push
mov
ja
sub
repz
and
mov
push
lea
mov
xchg
adc
mov
mov
icebp
out
inc
es
in
test
xor
sbb
mov
cvtpi2ps
pop
aaa
push
popa
cmp
adc
clc
mov
rcll
or
test
loopne
push
movl
mov
rorb
push
sahf
inc
inc
inc
stos
shrb
pop
inc
mov
out
jg
inc
aaa
rcr
mov
mov
and
and
and
add
pop
pop
sbb
pop
push
pop
fmull
dec
jbe
movsl
test
fcmovb
call
cwtl
inc
mov
xor
mov
mov
push
pop
xchg
lcall
or
int3
add
popa
das
scas
cmp
xchg
jno
test
popf
popa
sbb
add
mov
in
sbb
mov
cmpsb
fisttps
in
jnp
ret
sub
jnp
jl
ds
mov
das
stc
or
inc
push
push
pushf
pop
imul
lcall
popa
jp
xchg
sub
fmul
xorb
hlt
push
sahf
mov
xlat
xor
test
lret
repnz
test
dec
push
lea
scas
mov
les
mov
lret
sub
jne
stos
cmp
or
test
cmpsb
adc
xchg
inc
iret
mov
and
ja
push
adc
jp
cmp
sub
shlb
fcomi
mov
in
fmull
inc
push
cltd
mov
incb
push
ja
por
ds
jecxz
mov
imulb
sti
push
jns
ret
jns
and
mov
xor
push
scas
aaa
sbb
mov
cmc
lcall
orl
rcrl
add
addb
adcb
pop
ljmp
lods
in
int
dec
test
or
pusha
sbb
push
ds
pushf
jns
jne
push
cs
mov
sbb
mov
and
lret
dec
jmp
xor
js
lds
mov
mov
mov
imul
outsb
mov
xor
leave
shlb
test
jle
adc
mov
dec
lcall
adc
xchg
adc
sbb
mov
mov
cmp
fmuls
unpckhps
jecxz
loope
lea
outsl
jge
pushf
xchg
mov
sbb
push
out
lret
push
mov
das
sbb
out
dec
cmc
mov
dec
dec
mov
and
and
shr
cwtl
or
gs
adc
call
fidivs
mov
add
pop
std
mov
xor
aaa
cmp
shlb
jns
gs
aaa
add
add
mov
das
imul
dec
cmp
jge
sub
fldt
in
jo
mov
gs
sub
test
mov
out
mov
sub
pop
mov
pop
inc
jl
cmpsb
or
sub
push
xchg
fnstsw
lods
adcl
aam
jae
jno
shll
fadd
in
inc
nop
je
stos
cmpsw
es
loop
jns
inc
xor
dec
cltd
adc
cmp
jne
gs
or
sbb
push
lods
xchg
lret
add
fwait
jmp
xchg
pushf
loop
sbb
sub
ret
in
shll
xor
inc
clc
mov
mov
dec
hlt
popf
pop
add
mov
push
ds
add
jb
cld
pop
int3
inc
add
out
mov
push
cmp
fcmovnu
or
xor
add
loope
aas
mov
mov
pop
mov
pop
jnp
mov
mov
xchg
cmp
mov
lea
pop
push
inc
cmpsb
jg
adc
sbb
and
out
ljmp
inc
jp
cmp
das
jge
add
xchg
mov
mov
sbb
pushf
push
inc
out
jno
inc
movsl
pop
mov
xorl
mov
call
push
mov
push
adc
bnd
add
jl
xchg
sub
push
mov
mov
xchg
fcmovnb
lahf
mov
lock
js
insl
cmp
add
sub
pop
xor
pop
outsb
jbe
jmp
xchg
and
lock
dec
lahf
cs
and
mov
sub
pop
xor
pop
loopne
sbb
dec
jp
insb
popa
xchg
mov
xor
pop
jmp
and
rorl
fistpl
push
movsl
xchg
aaa
mov
jae
add
push
femms
mov
pop
mov
mov
enter
lods
lods
xor
imul
dec
and
mov
cs
bound
xor
addl
rcrb
dec
and
xlat
xchg
inc
fsub
mov
adc
ja
xor
cmp
lahf
imulb
cpuid
push
shlb
lahf
out
aad
test
scas
adc
sub
fimull
jne
inc
xchg
mov
jmp
push
call
and
pop
fcoml
and
sbb
add
mov
repz
dec
sub
mov
je
js
or
dec
mov
sub
addr16
mov
cmc
mov
add
out
cmovo
cmpsl
shll
mov
dec
loop
inc
pop
hlt
adc
push
iret
dec
mov
pushf
or
sahf
das
xor
insb
inc
or
jns
lahf
rcll
imul
xchg
jbe
daa
sub
sahf
cmpsb
jg
xor
out
lods
lock
ret
scas
inc
push
xor
jne
xor
in
push
jge
push
insb
xlat
jecxz
push
dec
cmp
mov
mov
call
fldl
fstpl
xchg
scas
adc
push
negl
shr
pop
mov
xor
xor
cmp
in
es
inc
adcl
aad
movsb
in
daa
out
out
jge
negb
rclb
aas
lods
xchg
or
mov
adc
movsl
loop
jbe
xchg
pop
stos
mov
js
jbe
sbb
dec
mull
aas
or
adc
sbb
cli
or
es
mov
push
mov
arpl
dec
sbb
rolb
or
lea
adc
ss
icebp
mov
pop
mov
dec
cmc
lcall
bound
xor
sub
xor
push
pop
or
jnp
mov
add
cs
popf
movsl
push
fmull
adc
sbb
inc
mov
test
pop
pushf
mov
and
js
cmp
pop
xor
jg
arpl
cmp
ficoml
mov
addb
add
icebp
das
or
mov
inc
push
sbb
rorb
les
pop
adcl
pop
mov
negl
push
insb
ret
stos
cmc
mov
or
add
addr16
and
popa
js
xchg
mov
adc
pusha
add
aaa
lods
mov
lock
sub
cmpsb
sbb
cmpb
xchg
adc
andb
cli
push
int
movsl
negb
add
add
cmp
mov
icebp
cltd
jno
jbe
push
cmp
ljmp
fwait
xor
loop
jne
mov
scas
mov
pop
enter
push
lods
pop
pop
and
sbb
lcall
xor
fistpl
addb
push
cmc
adc
or
jmp
and
pop
push
sub
mov
je
jl
movsb
sbb
ljmp
pop
xchg
sbbb
mov
ljmp
xchg
mov
pop
inc
fimuls
negl
adc
test
aad
mov
loop
shrl
jl
push
dec
mov
jb
push
dec
cmp
les
sub
xchg
sub
enter
icebp
inc
testl
in
push
mov
jo
pop
in
cmpsb
sub
xor
repnz
pop
int3
out
push
fcmovb
jecxz
push
inc
mov
fadds
pop
mov
push
loopne
lcall
cld
pop
mov
cwtl
lcall
push
or
in
outsl
dec
xor
xor
ja
insl
call
icebp
sti
in
mov
lcall
dec
gs
mov
mov
imul
cmp
mov
xchg
rclb
mov
shll
scas
inc
pop
insb
add
inc
cs
sbb
sbb
sarb
and
fistl
std
das
cmpsb
leave
dec
les
cmp
dec
add
shll
adc
stc
jno
jns,pn
test
and
js
movsb
das
pop
lahf
mov
mov
or
out
pushf
push
ss
push
cmpl
and
jne
mov
jecxz
lcall
mov
or
mov
rcll
fimuls
mov
add
push
cmp
test
imul
fcmovne
jbe
mov
and
cs
addr16
les
cmp
mov
rcll
out
dec
mov
fmull
lahf
stos
dec
adc
ja
xor
lahf
xchg
xor
push
insl
stos
mov
dec
and
xchg
adc
jnp
fmulp
sbb
out
adc
push
lods
mov
cmp
popf
mov
sbb
clc
loop
ret
inc
xor
cmpsb
sbb
xchg
xlat
movsb
andl
in
adc
in
fnstcw
adc
or
sbb
xchg
jne
adc
push
enter
push
xchg
cmpsl
jle
jecxz
aaa
jmp
je
hlt
fstpt
and
add
out
adc
popf
xor
mov
adc
sbb
push
jns
adc
push
leave
push
fisttpll
xor
pop
add
lret
mov
scas
fs
jle
in
xor
lret
fs
add
repnz
lods
pop
mov
adc
sbb
cltd
add
lods
and
add
test
movsl
push
in
sbb
daa
push
xchg
mov
movsl
in
lock
push
sti
rol
xor
push
xchg
pop
cltd
push
push
rorb
cmp
aaa
pusha
jp
xor
stc
icebp
addr16
nop
or
shld
pop
mov
loopne
jno
call
stos
aaa
pop
insl
inc
jp
loop
jmp
sahf
je
sbb
loop
and
in
mov
or
sbb
mov
mov
nop
mov
clc
fildl
aam
and
adc
rcrb
add
jg
pop
push
scas
jp
dec
shll
clc
dec
add
jge
xchg
aaa
jecxz
testl
inc
sbb
hlt
ds
mov
or
enter
inc
push
int3
je
pop
loope
fisubl
adc
mov
sbb
rcrl
in
and
into
out
push
sar
fisttpll
add
imul
mov
pop
jmp
mull
pushl
sarl
cmpsb
xor
cmp
cld
and
adc
lods
rorb
xchg
sub
out
repnz
add
call
mov
nop
ljmp
decb
jne
sbb
sarb
int3
lret
sbb
inc
push
lret
das
dec
push
stos
mov
subl
push
inc
loop
cmp
lahf
popf
add
lds
ljmp
rcrl
mov
les
push
inc
out
lods
xchg
mov
test
sbb
in
push
imul
imull
inc
mov
stos
dec
movsl
and
pop
js
icebp
sub
mov
repz
add
jbe
add
shlb
adc
ja
lock
das
icebp
dec
fdiv
jmp
dec
push
es
push
insl
add
out
movsl
rclb
in
mov
lret
icebp
xor
stos
inc
cld
insb
lock
xor
out
pop
xchg
ret
or
fildl
and
jmp
aad
or
cmp
mov
adc
test
mov
lea
loope
add
nop
mov
rcl
lret
negl
iret
xor
inc
or
adc
xor
inc
fisttpll
sbb
test
add
mov
lods
aam
leave
jns,pt
or
xor
arpl
mov
xorl
gs
pop
popf
cmp
xor
dec
mov
cli
popf
jecxz,pn
and
xchg
mov
xor
out
adc
or
inc
lods
repz
jnp
and
lds
push
ss
sub
sub
clc
es
mov
test
incl
mov
xchg
adc
in
push
cmp
sahf
jp
ss
cltd
ror
xor
int
add
ret
xchg
adcl
je
sub
jns
push
test
lods
pop
es
sahf
or
push
ljmp
or
imulb
and
out
dec
push
addb
jg
mov
inc
loop
dec
test
lea
xor
test
ljmp
lock
nop
or
xor
flds
jbe
icebp
les
inc
leave
test
aam
or
test
mov
out
push
imul
decl
lcall
mov
rcl
stos
pop
cwtl
repnz
or
xorb
aam
int3
ret
or
jle
pop
sub
lods
xor
mov
xor
in
inc
pop
sub
ds
sbb
mov
fistl
fstps
push
cwtl
dec
cmpsl
pop
outsl
adc
push
aam
inc
sbb
jns
pushf
insb
fimuls
push
adc
scas
pusha
test
jmp
and
add
dec
lcall
pop
mov
leave
cmp
aaa
cmp
addb
fstl
push
xorps
cmp
scas
xchg
dec
mov
movsb
gs
sub
pop
fcoml
jo
push
lret
dec
mov
push
inc
cld
rcr
dec
inc
dec
mov
stos
jne
dec
xchg
dec
sub
add
push
inc
inc
xor
dec
pop
dec
mov
je
ud0
and
out
andb
sub
aam
hlt
ret
js
xor
aam
adc
push
or
push
push
xchg
push
fdivr
mov
sti
int
adc
clc
pop
dec
pop
push
mov
and
pop
mov
mov
inc
and
hlt
aam
lret
pop
cld
cmpsb
jecxz
sub
bound
lahf
lock
imul
dec
inc
pop
xchg
xchg
pop
xchg
mov
inc
nop
pop
pop
pop
dec
pushf
rorb
addb
lods
cmc
rorb
push
xchg
or
xchg
push
inc
mov
cli
or
jb
and
frstor
mov
cmp
mov
or
pop
xor
sub
jbe
jo
cwtl
js
ret
jecxz
addr16
sti
out
jge
cli
das
int3
adc
dec
mov
pushf
imul
iret
lock
pop
outsl
pop
fbstp
lret
outsb
sbb
aad
mov
stos
scas
and
sbbb
push
repz
jb
add
fs
nop
jo
xor
or
and
insb
leave
and
pop
sbb
cmp
or
jb
std
adc
popa
dec
sbb
stos
push
sub
insb
sbb
sub
leave
pop
outsb
mov
lods
add
push
adc
mov
insl
pop
and
pushf
mov
adc
xor
jo
les
jns
bound
filds
pop
dec
xchg
cmc
push
dec
das
cld
push
lea
push
das
adc
int3
shlb
movsb
out
xchg
or
xchg
xchg
jp
addr16
sar
mov
or
sbb
sarb
push
adc
clc
push
dec
sahf
lahf
inc
in
frstor
inc
mov
push
leave
dec
lds
mov
push
data16
add
das
popa
or
xor
mov
dec
xchg
add
pusha
jne,pt
shrl
pop
lock
mov
data16
dec
sahf
jo
in
push
fmull
and
mov
sub
pushf
mov
int
push
xorb
inc
ss
out
pop
lods
shr
xchg
mov
mov
insl
sbb
pop
mov
sbb
rolb
mov
dec
mov
cmpsl
test
sub
aam
cmpsl
dec
insl
insb
pop
pop
test
add
jbe
jmp
push
loop
jp
add
clc
cmpsl
mov
pushf
or
pop
sbb
sub
sarb
sbb
xchg
test
arpl
lret
pop
vmovsd
dec
addl
push
mov
out
outsb
mov
popf
jo
cmp
addps
lods
and
repz
mov
cmpb
sub
adc
frstor
adc
lods
add
jne
ret
jnp
daa
add
push
jno
xchg
push
adc
repz
leave
orb
loop
negb
mov
scas
rorl
jno
push
sub
adc
mov
push
insl
xchg
or
and
mov
mov
and
dec
test
out
sub
je
repnz
shll
add
and
les
test
pop
cmp
stos
mov
daa
mov
daa
sub
test
aad
enter
pop
imul
jp
cmp
test
outsb
fistps
add
inc
popa
test
push
xor
std
fistps
mov
pushf
call
mov
testl
nop
cmpsb
xchg
pop
fsubrl
mov
mov
dec
xor
inc
mov
sub
repz
sbb
sbb
jl
enter
sub
or
pmaxsw
mov
hlt
mov
sub
nop
movsb
adc
nop
sub
cmp
and
lret
ljmp
add
stos
in
xor
jbe
popf
icebp
sbb
imul
xor
loop
lahf
jmp
mov
aad
lret
dec
in
je
jmp
or
in
mov
sub
sbb
out
in
test
xchg
add
roll
daa
out
cmp
and
mov
dec
mov
lods
xchg
fists
fstpt
das
mov
incl
xchg
and
in
dec
dec
add
jmp
xor
shlb
loop
imul
mov
call
adc
mov
cmc
push
mov
dec
mov
mov
pop
shl
out
jbe
leave
sbbl
sub
sbbb
shll
repz
pop
aam
add
aam
iret
jo
out
loop
je
nop
call
jnp
adc
adc
gs
stos
mov
add
insl
dec
add
int3
xchg
cltd
add
cmp
pusha
sbb
lret
popa
xchg
push
xchg
pop
fstps
add
fisttpl
pop
repz
jmp
daa
lock
popf
jmp
or
fsubrs
pop
push
pop
xor
jmp
loop
push
mov
push
inc
test
out
rorl
pushf
enter
mov
push
push
fnstcw
and
adc
cs
cmp
lods
dec
jae
lods
jge
mov
mov
jbe
outsl
pushf
scas
ret
imul
es
add
jecxz
lahf
or
aam
ret
dec
fistps
add
push
call
push
stc
pop
div
icebp
and
notl
inc
sbb
dec
jbe
aad
pop
cli
jo
push
mov
jmp
iret
aaa
mov
cmpsb
loop
or
movsl
popa
call
notb
cmp
loope
addr16
cli
ret
mov
sarl
in
int
addb
and
stos
mov
fcmovbe
ja
or
insb
add
mov
or
mov
clc
add
sub
pop
addr16
jg
movsl
dec
mov
mov
cmp
push
cmp
movsb
cli
adc
adc
imulb
pop
xchg
scas
aad
data16
adc
mov
scas
or
lret
cwtl
cs
jae
lcall
jno
mov
sub
out
mov
pusha
fcompl
inc
dec
cmp
movb
mov
cmp
addr16
sub
aam
ss
dec
repz
dec
xchg
in
jl
int
shr
pop
int3
in
mov
roll
push
or
inc
adc
addl
daa
mov
or
and
pop
xchg
out
lods
ss
push
stos
xor
dec
rol
push
test
dec
nop
enter
xchg
hlt
test
in
lds
mov
out
dec
adc
test
or
pop
cmc
shll
test
pop
or
mov
repz
das
and
inc
or
hlt
lret
xor
xchg
test
add
xchg
fisttpll
jg
sub
stos
or
hlt
popa
loop
outsl
add
push
xor
inc
push
push
mov
mov
popa
dec
mov
ss
sti
xchg
xchg
std
fcoms
jnp
xor
mov
xor
pop
push
xchg
jae
jb
int
and
xchg
xor
xchg
out
sub
scas
jae
mov
inc
push
clc
clc
or
das
cltd
jo
daa
mov
mov
popa
stc
mov
es
rcrl
cmc
adc
imul
cmp
xchg
scas
pop
fmuls
cmpl
test
fistpll
cmp
add
sub
std
and
dec
in
int
sub
inc
mov
or
jp
xor
or
push
std
int3
sbb
mov
ja
mov
push
aaa
pop
enter
aaa
lods
cmc
mov
pop
push
leave
mov
orb
push
sahf
and
push
enter
inc
stc
mov
jno
pop
lahf
and
jae
js
push
lea
lahf
mov
jnp
dec
jo
push
lcall
inc
and
ss
dec
fwait
mov
in
loopne
push
push
sbb
add
cmp
ret
stc
pop
adc
test
cld
cmp
adc
xor
mov
lret
mov
test
iret
xchg
push
jmp
pop
push
cld
jl
xchg
xchg
xchg
push
mov
inc
fdiv
jns
pop
xor
shl
push
fnsave
push
inc
shr
and
cmpsb
xchg
sub
jp
clc
and
fdivs
std
and
lds
push
sub
pusha
icebp
out
mov
mov
das
push
add
repnz
xchg
aam
and
sbb
mov
imul
sub
data16
test
mov
sbb
mov
fstenv
cmp
xchg
mov
adc
fwait
js
jge
js
lret
sub
ret
lods
inc
lret
aad
adcl
or
jmp
or
shrb
push
or
pop
mov
xor
xor
rolb
aad
les
loop
push
adc
faddp
leave
jp
ret
incb
mov
mov
xor
push
push
add
dec
cld
fnsave
lret
addl
sbb
jo
jecxz
and
mov
push
test
sub
les
out
les
es
inc
jbe
arpl
repnz
imul
dec
cld
pop
andb
pusha
stos
pop
push
loopne
xlat
mov
jns
in
dec
adc
dec
push
clc
sub
ljmp
or
loop
pop
into
sbb
out
add
dec
mov
cs
pop
stos
bound
jne
lock
sub
lahf
inc
lods
es
in
xor
xchg
int
mov
cwtl
inc
mov
hlt
jae
lock
push
dec
sti
mov
scas
xchg
mov
iret
push
ljmp
jmp
scas
sub
mov
sbb
data16
fstp
cmp
loope
dec
mov
add
daa
cltd
rcrb
adc
mov
jg
pop
aam
push
frstor
icebp
xchg
hlt
addb
hlt
jg
dec
push
mov
inc
xchg
or
pop
lds
add
mov
push
xorb
push
out
cli
fimuls
orl
bound
mov
jne
in
test
insb
outsb
dec
leave
ret
sti
xchg
sarb
fidivl
test
or
push
imul
xor
and
lahf
jecxz
repnz
inc
dec
in
sbb
jecxz
mov
inc
push
scas
adc
add
dec
insb
push
sbb
xchg
inc
dec
sbb
fidivl
gs
inc
pop
movsl
sar
mov
fmulp
pusha
or
pop
andb
cmpsl
or
ficomps
push
cmpsb
insb
decw
cli
outsl
xchg
nop
xchg
fidivrs
nop
test
shrb
mov
jo
loop
jnp
push
lret
or
cmc
mov
adc
sbbl
or
adc
stc
adc
clc
movb
add
test
movsb
movsl
iret
mov
mov
leave
xchg
add
je
jmp
and
insl
or
and
insl
xor
popf
movsl
cmp
push
or
add
mov
cmp
jbe
push
and
pop
adc
dec
lods
imul
outsl
int
bound
inc
dec
inc
push
mov
pop
test
loopne
adc
or
gs
pusha
test
adc
daa
test
dec
scas
and
xor
sub
jnp
push
out
or
push
iret
sub
mov
jecxz
or
insl
cmpsl
je
lahf
sbb
jbe
ficompl
inc
imul
cmp
aaa
outsb
int3
inc
mov
aas
or
bound
lds
mov
mov
cmp
sbbl
mov
loopne
sub
mov
mov
or
into
gs
push
imul
cmp
mov
sub
sub
aaa
jns
sbb
pop
add
shl
bound
cli
stos
mov
les
popf
push
sub
nop
cmp
ficompl
jmp
xor
in
lret
jns
add
daa
xlat
cmc
gs
cmp
test
pop
mov
inc
sub
ret
out
lcall
push
sbb
adc
testl
adc
inc
stos
or
lret
cltd
adc
in
in
int
and
in
jns
dec
add
push
fwait
mulb
aas
aas
sbb
fwait
test
cmpsl
or
mov
scas
sbb
aaa
push
lock
mov
xlat
sub
xor
dec
mov
fisubrl
xchg
push
mov
mov
xor
xor
dec
cltd
hlt
push
mov
add
je
push
jge
inc
or
push
push
jnp
xor
jne
sub
repnz
dec
ror
add
hlt
dec
cld
or
push
pop
scas
dec
jmp
mov
mov
mov
push
lods
xchg
mov
dec
lods
mov
lds
rcl
jns
jns
lods
add
int3
dec
int3
out
and
out
loop
xchg
je
adc
bnd
dec
lret
pop
imul
div
sub
pushf
push
test
mov
add
jecxz
je
inc
jle
xchg
bnd
adc
inc
mov
sub
ja
push
jae
fnstenv
popf
and
xor
inc
jmp
push
adc
icebp
sub
shlb
jmp
pusha
pushf
insl
gs
mov
icebp
or
xchg
adc
add
cmpsl
loope
decl
sbb
cmp
ret
fisubrs
push
pop
test
ret
dec
aas
sub
jns
testb
sub
cmp
pop
adc
test
nop
inc
mov
or
mov
or
adc
imul
sbb
lock
mov
sbb
or
in
pop
pop
or
jg
pop
out
jle
mov
fcom
add
int3
ret
lret
aaa
sbb
pop
push
pop
sub
sub
imul
pop
repnz
ficoms
mov
adc
popf
inc
mov
mov
sbb
stos
and
call
dec
fstp
dec
js
add
jg
lods
mov
adc
mov
jge
sub
test
jns
lds
ret
rcll
cmpsl
jl
mov
or
push
sub
mov
pop
adc
test
ja
adc
dec
mov
movsb
add
xor
xor
jl
les
dec
mov
rorl
mov
loopne
jns
sbb
aad
in
loop
push
mov
adc
mov
adc
iret
test
lahf
test
dec
fs
movsl
dec
and
push
test
ja
xchg
dec
xchg
push
popf
cld
scas
or
mov
jmp
jecxz
mov
pusha
sbbl
adc
in
sbb
jp
std
mov
xchg
dec
xchg
ja
xchg
test
gs
fmulp
out
sub
push
int3
cli
jmp
xchg
lods
pop
mov
dec
xchg
and
rcrb
in
jns
fisubrl
in
mov
sahf
mov
insl
sar
js
pushf
lcall
dec
mov
int
sub
jnp
push
jbe
push
mov
loope
push
aaa
sbb
cld
xor
pop
xchg
mov
push
inc
jmp
mov
hlt
inc
aaa
imul
jmp
icebp
fistpll
cmp
cmpl
mov
and
outsl
insl
pop
loopne
in
test
xchg
push
lds
shll
dec
sub
stos
test
out
inc
jmp
inc
ds
push
cld
and
pop
and
jb
or
fdivrs
xor
repnz
pop
sub
cwtl
fbstp
in
fiadds
shlb
mov
mov
push
jns
mov
insb
mov
add
add
mov
mov
lods
cmpsl
xchg
jg
push
inc
pushf
adc
xchg
xor
sbb
ret
dec
sbbb
dec
push
movsl
pushf
int
rcll
or
fwait
xchg
cs
or
add
ret
xchg
movsl
pop
push
xchg
cmp
lock
and
stos
cmp
inc
cmpsb
dec
or
dec
and
add
scas
xor
cltd
xchg
mov
lds
pop
ret
cmp
ret
stos
inc
scas
inc
arpl
fld
in
inc
mov
adc
and
bound
push
jo
ret
push
enter
gs
cmp
and
lret
push
rorl
push
pusha
xor
sbb
pop
mov
outsb
dec
push
xor
cmp
mov
add
or
sbb
es
xchg
inc
add
mov
pop
fs
xchg
shl
frstor
clc
cmp
cmpsl
stc
stc
out
in
stc
pusha
mov
add
fsub
arpl
pop
jno
sbb
icebp
mov
add
movsb
testl
nop
ds
push
add
outsb
pop
xchg
scas
dec
or
xlat
leave
add
std
xchg
lahf
jl
pop
iret
les
push
mov
iret
and
inc
scas
cmc
dec
loope
push
iret
or
inc
cmp
pushf
pop
cwtl
pop
sysret
mov
cli
mov
add
aas
jecxz
adc
fistl
test
bound
cmp
mov
test
icebp
shrb
les
push
pusha
xchg
sub
repnz
loopne
xchg
lcall
and
inc
sbbl
nop
mov
out
adc
icebp
xchg
das
test
into
pop
mov
in
push
push
pop
ja
mov
push
fisubrl
xor
sbbb
mov
cmpsb
dec
mov
stos
cmp
aas
sub
inc
dec
imul
cld
sub
push
xor
inc
rcrb
fimull
in
js
leave
testl
mov
inc
fistpl
repnz
rorl
sbb
or
sub
ja
clc
into
or
jmp
cmp
cmpsb
es
lret
pop
sub
mov
or
adc
mov
popa
icebp
xor
test
mov
mov
insb
js
push
stos
sbb
lahf
test
push
sahf
jmp
sbb
push
cmc
mov
xchg
inc
xchg
push
or
out
jbe
inc
fistpll
iret
int3
sbb
lods
fmull
cltd
bound
sub
mov
xor
sbb
scas
into
push
pop
pop
jmp
daa
and
mov
mull
xor
ret
pusha
jbe
js
mov
cmp
sbb
lcall
lcall
mov
gs
insl
jnp
fwait
sahf
ret
das
imul
mov
fsts
sub
call
mov
gs
xor
sarb
adcl
or
mov
sbb
xchg
jge
rorb
xchg
jmp
test
sub
stos
shll
ljmp
mov
in
in
cwtl
sbb
loop
fisubrl
push
jo
es
sbb
daa
test
inc
popa
negl
add
or
mov
ss
dec
ror
and
outsl
cmpsl
arpl
scas
sbb
test
sub
out
adc
cltd
sbb
aad
mov
push
fcmovnu
sbb
es
mov
xchg
jge
dec
lahf
ljmp
cmpsl
dec
mov
sub
jo
mov
loope
aaa
ret
dec
jp
jne
mov
pop
jno
sub
xchg
fimull
cmpsl
mov
insb
imul
pop
mov
test
cmp
or
call
repnz
xchg
lcall
mov
pop
or
js
cmpsl
imul
xlat
cmp
mov
out
push
mov
ss
pop
and
ljmp
cmp
xor
or
divl
pusha
fistpl
sbb
ss
or
cmc
shlb
enter
inc
cli
jmp
mov
inc
std
jnp
xor
lea
les
xchg
xor
outsb
into
rcl
shll
imul
mov
add
and
jl
sarl
stos
icebp
push
clc
sbb
daa
mov
ficomps
adc
pop
jge
icebp
adc
add
jns
enter
sub
rorl
stc
andb
or
xorl
rcl
mov
rep
mov
int3
fstpl
imul
inc
mov
jb
jbe
push
xchg
add
jl
mov
fst
add
sub
sahf
fcmovbe
cs
jne
stos
mov
cmp
sti
push
fwait
mov
out
pop
sub
and
cltd
xchg
bound
pop
test
inc
push
jmp
sbb
icebp
sub
mov
and
and
dec
mov
mov
pushf
jbe
jne
xlat
add
jle
jno
push
mov
ficompl
fcoms
nop
push
repz
in
add
xor
cmp
mov
loopne
push
adc
sbb
lret
mov
mov
mov
pushl
dec
arpl
xor
pushf
add
mov
inc
jne
push
pop
cli
es
mulb
sbb
cmp
js
pop
stc
lods
clc
inc
mov
cmp
nop
stos
data16
cmpsb
fisubl
fistpl
sub
out
push
js
mov
pop
mov
and
cmp
sub
push
xchg
mov
xchg
std
cmpl
mov
into
adc
rorl
push
test
and
inc
aas
repnz
jecxz
fdivrs
lret
insb
int
xor
in
stos
add
insb
pop
jl
jnp
dec
loopne
mov
push
bound
ficoml
addr16
mov
sti
mov
jmp
and
sbb
jno
ljmp
adc
jl
lods
dec
lods
adc
test
fdivs
or
scas
sar
ret
out
leave
pop
imul
ljmp
mov
nop
add
out
inc
xchg
shll
cmpsl
dec
fbstp
call
jmp
cli
mov
repz
lret
insl
sub
push
jg
inc
fsts
loopne
fldenv
pop
push
xor
and
pop
outsl
in
fdivrs
lahf
out
or
mov
data16
or
loop
gs
mov
pop
inc
mov
jae
scas
aad
pop
mov
outsl
in
mov
pop
jno
jle
jge
cld
pop
mov
xchg
enter
jmp
fcompl
sbb
mov
roll
add
xor
arpl
xchg
pop
jg
dec
sub
or
or
sub
out
sub
in
inc
aam
add
mov
ret
mov
or
inc
cmpsb
and
push
sub
ljmp
push
fldenv
mov
mov
sahf
pop
into
xchg
fs
dec
movsl
insl
int3
imul
or
xor
lret
push
mov
pop
aam
xchg
jne
sti
mov
aad
ss
sbb
movsb
dec
cwtl
test
inc
cmp
cltd
sbb
divl
add
adc
xchg
test
test
loope
fisubrs
dec
pop
addl
in
cmc
xchg
push
push
jg
cmpsl
sub
pop
xor
push
pop
aaa
rol
mov
fildll
pop
sbb
mov
and
xchg
and
lock
sti
pop
nop
xor
call
or
insb
enter
iret
jne
in
sbb
pop
arpl
or
dec
and
enter
aam
pop
cmc
iret
dec
xlat
movsl
lcall
mov
inc
adcb
fidivl
test
movd
test
cmp
hlt
jecxz
sarl
and
cmc
adc
cmp
fldenv
js
rcr
or
adc
xchg
xchg
ss
jbe
sub
jnp
push
and
or
ficoml
inc
js
std
jo
push
xor
inc
push
dec
stos
insl
sti
sahf
aam
call
inc
inc
pop
and
lret
mov
and
mov
mov
out
fnstsw
sbb
and
sbb
jbe
iret
hlt
sbb
add
lods
repz
shl
movsl
scas
test
nop
scas
inc
pusha
pop
xchg
cmpsb
das
mov
mov
pop
mov
mov
test
cwtl
scas
gs
jno
nop
sbb
sub
mov
sub
sub
sbb
push
mov
stos
fmulp
sti
ret
cltd
out
jge
daa
std
pop
mov
mov
es
out
cld
daa
cmp
lret
cmp
aad
aaa
push
sbb
imull
cmpsb
add
mov
aad
pop
jnp
xchg
xlat
and
leave
int
jp
in
push
out
icebp
movl
adc
lcall
pop
adc
xor
mov
and
loop
dec
mov
in
imul
jns
icebp
ss
aad
mov
mov
sbb
les
xor
adc
rolb
mov
insl
add
fcmovb
mov
mov
dec
and
jnp
push
rorl
movsl
jmp
daa
insb
mov
lahf
mov
adc
icebp
ds
push
xchg
cwtl
adc
dec
dec
int3
ficompl
in
mov
ss
pop
dec
sub
pop
push
dec
lret
out
xchg
jle
add
paddw
cmp
lods
lods
adc
movsl
pop
cmp
add
imul
jge
and
pop
in
cmp
int
sub
ss
xorb
add
gs
aas
into
xor
inc
and
sbb
adc
movsl
jns
pop
pop
add
bound
push
mov
popf
xchg
mov
addr16
rolb
push
test
cmp
stc
fildll
jno
sarb
pusha
cmp
pop
push
dec
mov
mov
inc
dec
mov
mov
into
ljmp
or
push
xor
jo
jle
ds
jmp
dec
add
aad
test
pop
aam
cmp
mov
pop
mov
and
and
push
jge
incl
push
cmp
aas
lret
test
push
mov
inc
in
xor
pop
adc
cli
cmp
cmpsb
pop
cld
adc
sbbl
xorl
movsl
push
call
ret
rcll
shl
mov
addr16
dec
mov
push
add
test
mul
adc
mov
insb
pop
sbb
dec
jno
xchg
fucomip
dec
loope,pn
out
fistl
sbbb
add
sub
push
mov
insb
in
cmpsl
and
push
in
insb
fst
jge
cmp
cmc
in
in
dec
jmp
icebp
scas
imul
pushf
xchg
ss
ja
mov
push
pop
loope
or
dec
cmc
dec
jecxz
in
add
test
pop
movsb
pusha
popf
push
mov
fs
cld
pop
or
xchg
dec
sub
je
xchg
xlat
dec
mov
loop
inc
cmc
iret
or
ror
mov
mov
imull
fwait
movsb
cmpsl
and
adc
das
push
lods
negl
adc
fbld
xchg
or
scas
int3
cmpsl
es
pop
bound
jne
cs
fwait
jno
fdivs
das
sti
xchg
mov
cmp
in
scas
imul
movsl
fsubs
sub
and
sub
clc
lods
sti
dec
and
sahf
lret
or
jo
in
fisubrl
movsl
mov
add
push
inc
adc
xor
arpl
cmp
adc
adc
sti
sub
ficomps
cmp
mov
ret
cmp
mov
add
ljmp
and
cmpsl
cmpsb
lods
call
mov
xlat
jge
adc
mov
mov
inc
push
cmp
or
mov
xchg
mov
dec
test
dec
cld
mov
ljmp
sub
xor
stos
jle
xchg
subb
dec
cld
sbb
imul
inc
movsl
inc
dec
cwtl
data16
sbb
dec
fmulp
fsubs
outsl
xor
mov
inc
push
clc
test
cmp
testb
jnp
ret
sub
in
sti
push
cltd
testb
call
adc
js
mulb
dec
xchg
and
and
gs
enter
xchg
mov
mov
push
not
jecxz
push
pushf
ficoms
mov
xlat
pop
sub
mov
xor
icebp
popf
cmpsb
out
shll
mov
mov
sub
sub
jecxz
mov
adc
xchg
xchg
sub
cmc
ret
fisubs
decb
adc
dec
aad
or
mov
bound
cltd
or
sbb
adc
in
push
sbb
ja
mov
and
pop
jb
gs
dec
xlat
inc
sbb
das
dec
or
dec
sbb
pop
mov
shll
sbb
leave
stos
mov
dec
iret
or
leave
sbb
sti
shll
fidivl
scas
enter
andb
scas
jl
mov
je
push
hlt
mov
hlt
lret
dec
lds
and
mov
cld
xchg
dec
idivb
xchg
adc
push
xchg
test
imul
sti
loop
xor
mov
cmp
cmc
movsl
lods
jl
insb
js
push
sbb
mov
sti
movsl
testb
iret
jne
mov
and
enter
pop
jb
push
sub
imul
xor
clc
or
inc
stos
xchg
xlat
lods
ja
push
aaa
add
es
outsl
add
lods
dec
or
popa
or
or
pop
loopne
inc
mov
and
mov
into
push
pop
iret
leave
push
cli
pop
jge
mov
stc
aad
push
subl
movsb
addr16
push
mov
movl
test
pop
shl
test
in
lods
test
xchg
sub
test
icebp
icebp
rcrl
test
lret
dec
push
shl
mov
xlat
sbb
imul
cmp
shl
or
dec
xchg
mov
mov
dec
jbe
mov
mov
decl
xor
inc
fstpl
xor
xor
sahf
fisubl
sbb
mov
addr16
mov
push
inc
xchg
inc
sti
aam
jae
sarb
push
enter
fidivs
out
lods
dec
push
mov
mov
lods
pop
sub
dec
xchg
in
sbb
sti
push
scas
xchg
cs
jb
daa
sbb
rclb
mov
push
loopne
arpl
out
std
fnstcw
xor
jns
sbb
loop
cs
mov
dec
lds
mov
push
pop
mov
sbb
push
mov
cltd
mov
or
iret
in
lcall
cmp
je
or
jle
sub
es
sahf
aam
adc
and
and
push
loopne
xchg
pop
push
or
push
mov
jno
sbb
push
pop
bound
fidivs
ret
insb
icebp
fsub
jp
ss
popa
subb
mov
jp
cmp
xor
jns
cmp
in
sbb
out
ljmp
into
stos
lret
jbe
scas
or
mov
mov
pop
pop
xor
int3
add
mov
fwait
cmp
jne
jecxz
inc
fisubs
xchg
mov
mov
loope
mov
jp
xchg
into
xlat
jb
inc
popa
and
push
mov
scas
jnp
pop
hlt
inc
xor
iret
jge
fwait
aaa
pop
lock
xchg
xor
jmp
inc
or
mov
lcall
les
std
outsl
mov
sbb
xchg
sarl
outsl
dec
add
push
inc
and
in
scas
and
mov
out
adc
xchg
dec
xchg
imul
out
in
jo
push
shl
dec
sti
shl
push
repz
cmc
rcr
inc
jo
fsubrl
pusha
fsts
or
mov
lret
or
repnz
test
nop
mov
les
fs
loope
mov
mov
out
fwait
out
or
xor
orb
frstor
rcll
outsl
inc
mov
bound
or
lock
adc
mov
xor
xchg
rcl
mov
xor
xor
addr16
movsl
pop
rcrl
and
sbb
inc
sahf
out
sbb
mov
xor
stos
in
pop
fists
and
mov
dec
lahf
and
xor
and
dec
fistl
movl
pop
shl
xchg
pop
jae
test
or
aas
jnp
sbb
dec
mov
adc
popa
push
xchg
adc
lahf
mov
pop
lret
push
outsb
stc
fsubs
lods
push
das
sar
cmp
iret
and
imul
adc
in
out
pop
fdivrs
sbbl
adc
movsl
fs
stc
repnz
lret
cltd
enter
mov
cwtl
nop
xor
push
pushf
adc
faddl
jne
jns
xchg
movsb
push
fwait
imul
out
add
push
mov
rcr
bound
mov
pop
pop
cmp
insb
scas
movsl
scas
mov
or
cltd
fidivrl
pop
mov
cli
jns
sub
int
xchg
lret
lret
add
or
stc
dec
aad
faddp
push
jno
cmp
mov
push
mov
idivb
daa
sub
fidivl
jns
pusha
imul
push
adc
xlat
int
lods
cld
pop
sbb
pop
pop
gs
xor
aas
aas
adc
dec
pushl
ret
das
pop
push
int3
jge
adc
out
aaa
and
imul
sahf
add
loope
mov
push
rorl
sub
mov
out
pop
jle
mov
outsl
popa
mov
cmp
add
rolb
jg
imul
aas
dec
xchg
push
int
sub
lret
fwait
mov
jae
adc
dec
and
lahf
xlat
push
enter
inc
mov
call
cmp
fs
arpl
mov
es
std
and
bound
mov
jmp
lret
mov
lahf
roll
shlb
lock
or
scas
ja
out
jge
in
dec
sub
bound
jecxz
ret
cmp
xchg
xor
stos
push
mov
jno
push
mov
lret
std
imul
mov
inc
cmpsl
insb
mov
pop
ja
push
adcb
ja
or
adc
int3
loopne
xchg
fwait
push
jae
mov
repz
sarl
dec
ljmp
fbstp
add
sub
popa
lods
repz
dec
xor
into
clc
push
dec
ret
sti
or
pop
jg
outsl
adc
sbb
sub
mov
test
cli
imul
push
xchg
lock
xchg
clc
xor
sub
and
ret
loop
mov
push
daa
les
mov
fistpll
test
pop
fwait
jo
sahf
xor
lahf
loopne
je
sti
dec
xchg
gs
cmpsb
mov
push
mov
adc
dec
and
or
mov
push
inc
xchg
testb
mov
sbb
mov
or
loopne
inc
cld
xadd
mov
jnp
sbb
xchg
cmp
push
mov
mov
pop
jns
xorl
insb
sub
mov
xor
sbb
int3
fsubrs
and
enter
imul
test
sub
and
inc
imul
cmp
jo
mov
push
sub
ret
int
stos
rcr
xchg
jle
sub
xor
fists
in
push
sbb
cs
sahf
xchg
inc
ds
pop
mov
pop
or
roll
in
aam
shrl
add
inc
sub
aam
xchg
jnp
mov
cld
mov
es
mov
fcom
sahf
inc
mov
imul
ljmp
arpl
or
and
mov
outsb
je
cli
popa
push
scas
addb
and
cmpsl
int3
push
sub
mov
mov
sub
mov
mov
fcompl
jae
sbb
xchg
imul
movsl
sbb
aas
mov
cli
bnd
or
add
xchg
push
mov
mov
xchg
add
das
xchg
inc
cmc
data16
outsb
lock
mov
test
nop
lcall
push
popf
mov
add
shrl
aam
outsl
in
fwait
push
adc
push
xchg
inc
inc
pop
xor
dec
fimull
sbb
addr16
lods
pop
outsl
std
into
adc
mov
xchg
mov
jecxz
js
mov
mov
mov
out
cmp
je
ror
jl
xchg
call
pop
adc
rcll
sub
push
mov
lret
add
test
pop
sbb
sahf
pop
adc
sbb
and
mov
jecxz
outsl
shl
stos
es
mov
xchg
femms
das
push
adc
sub
shlb
cmpsl
mov
lcall
rorb
cmp
mov
xchg
cmp
push
adc
sbb
xlat
loop
push
push
in
pop
jb
lea
cwtl
sahf
or
in
in
inc
push
les
jns
cltd
aaa
sti
in
jmp
mov
mov
and
inc
imul
movl
push
jmp
mov
mov
gs
sub
stc
inc
movsb
push
aam
and
mov
sbb
lods
aaa
inc
fisubl
adc
jp
je
je
xorb
jnp
xchg
fisttps
dec
rep
jmp
cs
jl
inc
add
pop
push
icebp
or
sub
xchg
cmp
pop
xor
mov
push
xlat
xor
push
jo
rcrb
push
ljmp
dec
push
lret
pusha
mov
fs
ja
xchg
fcomps
cmp
nop
cmpsl
jno
stos
rcll
or
jae
inc
imul
in
ljmp
test
xor
js
and
imul
jl
lods
xchg
push
inc
pushf
in
pop
dec
xor
adc
pusha
mov
aas
fldt
pop
js
mov
ss
inc
cwtl
in
in
aad
and
sahf
sbbb
mov
cmp
adc
je
std
loope
pop
sub
push
inc
jecxz
test
and
dec
rcrb
cmp
getsec
cmp
xchg
testb
fcompl
enter
and
lret
push
sbb
and
inc
xor
ds
jge
decb
in
andb
jns
nop
cmovg
data16
fldt
inc
rcll
mov
or
dec
je
mov
adc
add
pop
mov
daa
sahf
scas
lret
les
jb
lds
fwait
lods
xchg
loopne
loop
sbb
push
dec
xor
inc
shlb
dec
jmp
dec
lahf
pop
sbb
push
sub
mov
movsb
jge
adc
mov
out
xor
xor
sbb
cltd
jbe
mov
or
adc
fwait
adc
loopne
in
std
insb
cmc
aad
fldl
not
inc
scas
scas
sahf
cmp
dec
sub
push
adc
xchg
jecxz
cmp
ss
call
loope
sbb
adc
cmp
inc
cmp
pop
mov
push
idivl
xchg
add
shl
dec
or
repz
dec
add
mov
aam
js
mov
sub
inc
pusha
xchg
lcall
daa
push
push
lret
and
pop
ret
and
icebp
faddl
pusha
xor
mov
pop
pop
gs
mov
inc
ficoms
loop
and
mov
fmuls
dec
pop
sub
inc
call
fcomip
das
lcall
insl
mov
sbb
xchg
and
out
mov
xor
call
test
cwtl
mov
adc
jmp
aas
inc
xchg
pop
ret
pushl
xor
or
adc
push
fnstcw
ret
pop
leave
or
mov
mov
xchg
and
or
sub
jno
pop
jg
rolb
fwait
mov
scas
repz
or
fstl
das
addr16
xchg
aad
or
outsl
sub
sub
xor
orl
shl
jo
dec
std
sarb
es
insb
jmp
mov
sbb
mov
mov
call
jecxz
mull
ret
mov
mov
fcomp
idiv
in
arpl
jmp
fstpl
xor
outsb
clc
sahf
jmp
mov
popa
pop
in
sbb
adc
jp
xor
xlat
lret
data16
das
mov
nop
mov
dec
mov
cltd
lock
scas
inc
sub
pop
lds
sub
push
sbb
inc
dec
push
and
aam
mov
lret
add
or
bound
adc
mov
jp
or
testb
out
arpl
mov
pop
cmp
fdivl
adc
je
nop
scas
fdivs
imull
jge
fcmovbe
xor
scas
fimuls
xorb
lahf
jl
jns
and
and
dec
test
cmpb
insb
mov
mov
stos
mov
out
jns
sbb
jns
in
fwait
jnp
lods
cmp
jne
cmp
cld
xchg
inc
test
scas
aad
imul
push
or
cltd
adc
or
cmpsb
inc
je
pop
mov
sub
lods
rcl
fdivs
leave
jecxz
cmp
int
lahf
xor
pusha
call
xchg
sub
sub
push
mov
adc
dec
inc
arpl
sarl
mov
cmc
mov
es
lea
loopne
lea
jbe
out
dec
out
push
ret
fiadds
jle
ds
cmp
call
aad
cmc
fstpl
pop
test
js
xchg
add
sahf
xchg
aam
cmp
pop
iret
mov
push
test
jno
jne
jp
into
inc
pop
xchg
in
aaa
mov
dec
mov
imul
sub
and
fisttps
cltd
movsb
jecxz
jbe
dec
xor
pop
cmp
loop
or
adc
test
movsl
test
cmp
push
pop
xor
add
or
sub
fwait
xlat
mul
push
popf
rcrl
stos
int3
or
and
jecxz
shrl
test
dec
test
mov
fcmovnb
imul
inc
mov
push
xchg
xor
movntq
cli
xchg
out
inc
dec
inc
pusha
mov
jnp
cwtl
mov
jp
mov
jle
sbb
and
sub
or
js
sbb
scas
shlb
cmp
cltd
cld
iret
or
jns
pop
pop
jmp
es
sub
or
add
es
shll
cltd
sbb
rcrl
inc
sub
out
js
inc
xor
mov
mov
testb
pushf
inc
adc
inc
incl
inc
fwait
mov
sahf
jae
jno
cmp
mov
pop
std
mov
lret
movsb
int
xchg
pop
dec
inc
sti
popa
leave
jg
xchg
xchg
inc
sbb
mov
pushf
add
out
xchg
mov
push
sbb
shll
fsubrl
xor
mov
inc
or
lods
rol
pop
test
mov
mov
lock
out
adc
ljmp
lods
ja
fisubrs
stc
loop
repnz
dec
mull
dec
leave
xor
mov
nop
dec
add
mov
jbe
push
push
pslld
lret
in
test
pop
inc
mov
popf
test
xorb
sub
cmp
ret
mov
ficompl
adcb
in
mov
sub
fcoms
stos
stos
nop
mov
adc
mov
shlb
inc
mov
pop
mov
sti
mov
leave
outsb
mov
adc
xchg
cmc
jle
loop
pop
pop
daa
not
fidivs
test
les
jo
push
fsubr
and
push
insb
iret
jne
dec
cmp
cmpsl
into
inc
ds
movsl
push
jnp
fbstp
stos
sar
popa
mov
test
loopne
xchg
push
pop
mov
scas
scas
out
int
and
lret
rcrl
adc
mov
xchg
mov
das
push
sub
xchg
movsb
xor
movsb
into
clc
cmp
loope
stc
lret
push
xchg
ss
iret
fwait
add
loop
cli
sbb
mov
inc
inc
xchg
push
out
mov
rep
mov
fimuls
mov
loopne
mov
lahf
dec
lret
dec
mov
fisttpl
and
pop
std
ss
ret
in
inc
jge
sub
ficoml
bound
cwtl
stc
dec
xor
ret
pop
mov
or
mov
pop
pusha
pop
lds
mov
aaa
add
rcll
xor
int
dec
inc
leave
call
mov
sbb
cld
scas
jo
xabort
stos
shr
ss
pusha
outsb
pushf
cmp
dec
pop
pop
in
fidivs
out
pop
ds
mov
insl
sahf
or
inc
inc
xchg
rcrb
mov
cli
xor
mov
sti
sbb
lods
iret
icebp
shlb
jmp
mov
lcall
enter
or
call
jno
add
lcall
imul
jle
cmc
pextrw
xor
pushf
andl
push
pusha
in
xchg
pop
sahf
push
scas
or
loopne
stos
jl
les
mov
nop
jo
mov
pop
les
rcrl
and
lock
add
mov
fildll
sbb
adc
dec
aas
lods
adc
int
mov
push
inc
stos
daa
in
mov
mov
adc
ret
mov
sub
mov
ja
ret
pop
mov
in
movsl
or
add
mov
inc
mov
pop
ss
shrl
aaa
or
lds
inc
cmpsb
jle
gs
mov
lds
shrl
test
jno
push
inc
push
mov
outsb
lods
pop
out
sarl
xor
mov
xadd
les
clc
rcrb
dec
dec
inc
dec
faddp
push
jg
push
jne
clc
ds
xchg
xchg
loopne
pop
jl
scas
fstpt
stos
sbb
aas
add
loopne
or
loop
addl
scas
pop
in
fcomps
jae
call
sub
xchg
or
pop
lret
push
pop
push
pop
or
dec
orl
les
mov
sub
adc
pop
icebp
mov
add
mov
cwtl
push
jg
xchg
outsb
push
and
mov
mov
lds
xor
or
sub
mov
std
mov
sbb
insb
push
xchg
lods
outsl
fiadds
pop
mov
cs
gs
lahf
mov
inc
pop
xchg
test
dec
imul
ror
xor
dec
push
nop
inc
jno
cmp
outsl
xchg
call
push
stc
and
into
test
aad
rol
mov
sub
into
hlt
daa
das
xchg
cmp
das
add
imul
inc
lds
pop
loope
or
mov
cld
js
pusha
shrb
mov
outsl
sbb
rclb
or
cmp
nop
inc
in
arpl
in
icebp
mov
xchg
add
cmpsl
mov
add
jle
xor
stos
imulb
ficomps
aas
fists
nop
jns
mov
ror
push
cmp
lods
adc
insb
xor
dec
shrl
out
adc
fildl
pop
orb
in
mov
fld
les
cmpb
fdivrs
in
addb
pop
and
ficompl
iret
outsl
jne
cmp
fldl
out
lret
mov
mov
pop
or
rcl
std
and
ficoml
stc
adc
in
ret
das
and
lock
jae
fsubl
jg
jae
lock
jp
and
xchg
lods
pop
or
xacquire
xchg
pop
add
mov
xor
and
std
pop
insb
cmpxchg
stos
add
mov
sbb
sub
add
cwtl
nop
hlt
xchg
jns
jo
test
adc
jl
shlb
and
scas
xchg
subl
adc
out
push
movsl
cmc
sub
loopne
mov
repz
mov
pushf
addr16
fcoms
sub
pop
mov
add
or
push
pop
cmp
cs
sub
cmc
mov
or
mov
aad
and
and
pop
rol
shrl
out
mov
or
dec
enter
mov
fiadds
arpl
test
jbe
insb
loop
push
lea
xchg
bound
xchg
imul
mov
sub
mov
rcll
pop
repz
out
jmp
shll
jecxz
jb
aam
xchg
int
cmpsb
lret
xlat
popa
mov
dec
stc
inc
out
cmp
subl
rorl
inc
popf
jecxz
add
jmp
dec
sti
jo
rclb
imul
mov
add
dec
loopne
loop
sub
sarl
jae
lahf
mov
lds
icebp
pusha
outsl
or
and
dec
dec
mov
popa
stos
mov
iret
xchg
and
mov
ja
cs
adcl
push
and
inc
sarb
insb
data16
or
push
push
cmp
sub
jg
adc
dec
leave
orl
push
enter
jmp
pop
fnstcw
test
addr16
sub
jns
cmp
or
mov
cld
xchg
cmp
icebp
push
movsb
xchg
sbb
ja
fwait
pusha
aas
icebp
aaa
sbb
int
push
push
in
cltd
adcl
push
sbb
lret
sub
xlat
pop
in
scas
pushf
inc
stos
call
stos
fs
jbe
jg
repz
push
ret
imul
sahf
jae
movsb
inc
sbb
xchg
int3
xchg
mov
sub
fidivs
imul
dec
rcr
xor
fst
sbb
dec
push
hlt
fldt
xor
xchg
movsb
loop
mov
cs
push
lcall
or
loopne
mov
imul
lods
shr
mov
pop
pop
ja
out
lahf
xchg
mov
fcmovnbe
stos
mov
test
xchg
lds
xlat
mov
repz
dec
add
mov
cli
fcmovnu
or
mov
mov
idivb
pop
xor
movsb
lock
pop
loope
pushl
jl
cmp
lods
inc
xor
lea
mov
cmp
js
popa
add
cwtl
arpl
test
mov
dec
fistl
jns
ss
je
outsb
fdivrp
cmp
psubq
pop
cmc
jecxz
xchg
or
fisubrs
insb
pop
jle
xchg
rcrl
ror
pop
rcrl
or
fcompl
pop
sbb
or
sbb
jo
mov
mov
popf
scas
sbb
dec
insb
pop
mov
sub
cmpsl
aas
jle
xchg
jl
shll
jecxz
leave
lods
pop
cmp
aas
fwait
or
xlat
sahf
iret
loop
push
lds
sti
jp
or
and
jge
fscale
aam
mov
test
mov
push
xlat
or
adc
or
jns
and
jne
xorl
jle
insl
js
in
pop
xor
pop
test
int
jecxz
scas
fnstcw
jmp
mov
adc
bts
cmp
cmc
jb
cmpsl
aaa
adcl
data16
mov
xor
adc
push
mov
andb
hlt
mov
andb
cmc
push
push
sub
les
add
loop
pop
push
cmp
fmul
mov
push
sub
push
ss
subl
cmp
orb
add
adc
jo
cmpl
icebp
rorb
cs
fucom
inc
pusha
and
inc
shrb
adc
mov
jl
pop
je
movsl
xchg
cltd
jns
int3
mov
mov
addb
repz
jbe
push
ljmp
push
sbb
adc
pop
add
mov
outsl
mov
icebp
add
ret
js
push
idivb
mov
add
mov
test
jecxz
cmp
pop
and
push
cli
push
in
adcb
mov
push
lock
test
jne
rep
or
arpl
popa
pusha
push
push
loope
movsb
sbb
fstpl
lods
jge
andb
insb
cmc
enter
mov
cmp
fsub
pushf
orl
repz
cmpsl
jns
les
xchg
cmp
xchg
inc
jno
call
inc
mov
sbb
int
jg
mov
jl
jmp
out
sbb
jbe
lea
mov
mov
std
push
cltd
and
dec
lcall
jge
scas
repnz
scas
push
test
cld
mov
arpl
out
mov
pusha
cmp
out
mov
xlat
mov
addl
xchg
cmpb
sub
xchg
and
mov
mov
mov
lahf
scas
lods
gs
ret
scas
dec
fwait
in
inc
pop
push
xchg
lcall
mov
mov
xchg
pop
faddp
out
ficomps
xchg
mull
nop
enter
xchg
inc
bound
mov
sub
xor
mov
sbb
es
inc
xchg
sub
add
push
gs
mov
popa
roll
pop
fs
add
cwtl
inc
outsl
mov
jmp
push
ja
inc
xor
mov
sbb
push
or
mov
daa
cs
xor
dec
les
stos
addr16
iret
aaa
push
hlt
testb
std
jp
add
ljmp
cmp
negl
repnz
int
shrb
fcoml
pop
insl
and
popf
xchg
call
bound
sub
xor
mov
mov
dec
stos
sub
test
test
test
leave
dec
sub
out
xchg
xchg
leave
xchg
mov
dec
inc
ljmp
mov
shlb
and
aaa
std
inc
in
lahf
sbb
inc
inc
dec
movsb
sub
add
push
xchg
adc
inc
add
arpl
pop
and
shlb
jnp
adc
jno
in
popf
inc
sub
stos
decb
mov
mov
pop
cmpsl
push
sahf
xor
inc
out
mov
lret
mov
lds
test
sub
jbe
inc
push
mov
sbb
or
mov
testb
and
mov
pop
cltd
std
int
pop
mov
rorl
cmp
cmp
pop
sarb
sbb
sahf
flds
dec
inc
imul
adc
mov
xchg
push
and
jo
loop
sbb
cld
call
fldenv
incb
jne
add
leave
pop
mov
or
loop
ja
add
cmpsl
mov
std
int
dec
call
cld
lret
push
mov
stos
aas
mov
push
and
sbb
imul
lods
sbb
push
sti
popf
mov
daa
adc
push
dec
add
jns
jge
mov
scas
scas
ljmp
and
ss
pop
lock
adc
sarl
add
and
ret
aad
sbb
push
adc
fs
outsl
mov
sahf
test
add
jp
mov
popf
out
mov
test
ret
insl
jno
mov
movsb
xchg
inc
sub
jae
push
rclb
and
repz
xchg
fxch
mov
cmp
sarb
icebp
dec
add
fs
aad
out
frndint
xor
scas
dec
in
jo
addr16
mov
mov
xchg
mov
int
ljmp
sub
aaa
xor
push
inc
jmp
adc
loop
adc
and
scas
insb
pop
mov
dec
push
xor
inc
inc
or
loopne
push
mov
iret
in
add
test
dec
lods
mov
push
jmp
add
pop
pop
add
loopne
mov
dec
pop
push
push
mov
in
dec
dec
inc
xchg
add
fisttpl
arpl
loope
iret
pop
stos
sbb
sbb
xchg
arpl
xor
dec
pop
xchg
mov
imul
cmpsb
and
xor
inc
jl
and
push
std
pop
hlt
movsb
dec
in
mov
mov
pushf
cmp
push
and
fisubs
push
rclb
xchg
inc
lret
test
and
das
sub
sub
js
dec
pop
dec
sub
in
jno
mov
dec
lock
pop
cmpsb
sti
mov
lock
lods
cs
push
cmp
mov
sti
fwait
dec
mul
icebp
dec
ret
push
lods
xchg
push
ljmp
push
lcall
mov
jne
fstps
mov
sub
repnz
sub
push
mov
jmp
or
lods
mov
pop
xor
push
js
gs
scas
cwtl
pop
mov
subl
cli
mov
cmp
or
sbb
push
ljmp
mov
test
aam
lock
cmc
lret
imul
push
xor
and
xor
xchg
lea
into
xchg
ds
dec
pop
adc
hlt
cmpsl
testl
loop
mul
sti
or
out
sub
jmp
mov
push
mov
xor
insb
mov
xchg
mov
push
cli
xor
shl
cmc
sub
pop
aam
mov
sbbl
leave
test
cmp
sub
nop
sahf
adc
add
jnp
cs
loope
cmp
in
outsb
cmpsb
add
pop
pushl
xchg
cmc
sub
sbbl
stos
repnz
imul
test
stos
sar
les
mov
cmp
inc
dec
loope
fsubrp
xlat
pop
mov
fstps
push
pop
mov
jge
nop
and
xor
in
push
adc
fwait
mov
mov
ljmp
or
and
loop
fsubp
pushf
pop
sub
cmp
lods
orl
mov
mul
scas
sbb
pop
shlb
add
lahf
stc
stos
pusha
testb
mov
mov
cmc
cmpsl
xlat
fwait
xchg
ss
out
adc
cltd
pushf
mov
sbb
mov
inc
fwait
add
cmpsl
cs
cmp
inc
adc
fimull
jmp
inc
je
into
repnz
xchg
jo
enter
enter
pop
pop
fwait
lods
in
push
xchg
push
jb
sti
fisubl
out
add
pop
negb
mov
mov
test
mov
xor
and
inc
dec
dec
sarb
and
xor
pusha
enter
cld
mov
scas
mov
mul
xchg
mov
popa
pop
fs
aam
push
lret
loope
jns
mov
push
imulb
mov
sbb
jnp
mov
cmp
ja
stos
xor
jmp
push
sti
cmpsb
adc
clc
lahf
nop
add
xchg
mov
movsl
mov
dec
pop
outsl
xchg
mov
jnp
inc
sbb
outsb
in
mov
mov
pop
pusha
mov
mov
cmp
adc
pop
lea
lahf
xor
jbe
cmpsb
roll
ficompl
mov
or
aam
mov
pop
out
adc
dec
sub
add
fwait
sbb
negb
pop
push
add
push
fistpl
mov
lahf
repnz
test
xchg
insl
pop
jmp
repz
lahf
movsb
sarl
mov
pop
leave
xchg
enter
sub
jmp
lock
clc
into
and
xchg
ds
mov
inc
jg
xor
fsub
shl
pushf
dec
ja
roll
imul
popf
cltd
rorl
add
imul
adc
les
pop
test
xchg
in
es
jmp
sbb
popf
push
ds
or
adc
jbe
into
mov
and
cmpsl
xchg
and
pop
popl
jo
pusha
jecxz
add
stos
inc
test
es
mov
mov
xchg
inc
sbb
call
sub
shl
insl
hlt
add
mov
sbb
ss
push
popf
int3
jb
test
xchg
cs
in
xor
xlat
push
dec
das
lods
sbb
es
icebp
fldl
fmuls
and
jbe
idivb
hlt
pop
shll
cmp
inc
movsl
loope
jle
jnp
repnz
jns
adc
enter
cltd
test
aaa
add
popf
fistps
cmp
pop
nop
sub
xor
repnz
jns
mov
leave
pop
xchg
add
push
cmpb
addr16
repz
loop
push
push
mov
ret
add
xor
mov
das
sbb
adc
in
pop
ret
es
fwait
pop
movsl
lcall
mov
test
in
mov
dec
and
in
les
pop
roll
mov
movsb
movsl
fwait
dec
divl
xor
es
mov
xlat
push
in
icebp
ljmp
pusha
jp
imul
mov
inc
sti
dec
xchg
mov
popf
mov
sbb
mov
jp
mov
mov
ret
adc
dec
lds
call
mov
dec
hlt
mov
bnd
mov
lahf
dec
or
out
sub
out
jnp
jge
sub
outsb
ljmp
and
int3
mov
lahf
adc
aad
mov
mov
jb
imul
mov
addr16
into
push
outsb
xchg
lea
push
or
stos
addr16
shrl
in
mov
movsb
gs
add
scas
dec
mov
jmp
lds
sub
test
sub
pop
aaa
lods
sbb
jg
xchg
call
jg
std
mov
jne
mov
dec
pop
outsl
out
dec
dec
mov
aas
and
in
lret
jns
cmpsb
shlb
punpckldq
jge
push
dec
int
sbb
rorb
push
mov
xchg
subl
scas
jg
mov
mov
scas
insl
push
lret
mov
rorb
cmp
mov
stos
stc
lret
mov
cli
popa
in
pusha
cmpsb
sbb
push
or
sub
test
sti
inc
shlb
mov
pop
jns
mov
or
and
ljmp
jnp
cmp
lods
mov
mov
andb
dec
inc
mov
lods
aad
push
js,pn
mov
imul
sti
add
js
inc
xor
sub
dec
mov
xchg
and
mov
mov
fbld
out
imul
aam
adc
xchg
fildl
mov
jmp
mov
loope
mov
faddl
mov
test
sub
aaa
cmp
ljmp
mov
mov
and
pushf
ror
xor
lock
sarb
jnp
xor
inc
pop
pop
sub
test
pop
mov
sbb
cmp
jl
call
push
jmp
arpl
mov
cmpsl
push
rorl
in
mov
popf
xor
jno
jno
int3
shll
stos
ljmp
lss
sbb
enter
in
mov
add
or
xchg
jl
sub
mov
out
inc
out
loope
stos
mov
sbb
mov
insl
insb
test
pop
and
or
xchg
push
sahf
repnz
aas
mov
in
jge
jne
fs
mov
nop
sbbb
out
shlb
sub
jb
mov
hlt
ret
sub
xchg
leave
adc
popf
call
xchg
repz
aad
xor
loop
es
stos
iret
rol
jne
mov
sub
in
xor
icebp
pushf
push
lret
and
xor
outsb
lods
xor
pop
cld
mov
scas
lods
pop
mov
jmp
cmp
lcall
cmp
lcall
dec
cmp
sub
cmpsb
xchg
adcl
push
movsb
mov
pusha
and
outsb
call
jnp
stos
mov
stos
pop
int3
mov
loopne
xlat
in
rcrl
and
and
shl
inc
cmp
and
lahf
dec
mov
cli
inc
adc
add
push
ds
test
fsincos
pushl
dec
or
out
ljmp
xor
lea
push
fs
push
sbb
push
nop
int3
loop
mov
or
jle
sbb
mov
dec
in
pop
pop
inc
xlat
in
cmp
out
push
and
add
push
lret
lods
popa
push
nop
pusha
out
or
pop
aaa
ret
fistps
push
daa
xor
ds
pop
out
xor
js
lods
jo
mov
std
clc
mov
and
push
and
sub
insb
xor
push
xor
push
subb
cld
mov
sub
jbe
in
pop
mov
mov
xchg
outsb
mov
scas
cmp
mov
int
fisubrs
mov
xchg
push
sub
pop
push
push
stos
stos
sbb
inc
jle,pt
adc
out
call
cwtl
rcrl
mov
jle
in
out
sub
cmpsl
aad
push
lcall
out
and
mov
and
pop
aaa
shll
jp
xchg
mov
and
out
add
pop
and
mov
mov
push
cmpsl
mov
xor
idiv
out
movsb
cmp
or
mov
arpl
in
dec
add
sarb
mov
mov
inc
lea
movsl
xor
mov
jl
cmp
or
mov
imul
ljmp
fmuls
outsl
mov
jns
ss
into
add
leavew
fs
fldcw
cmp
dec
sbb
xchg
shll
sub
popf
push
cmpl
lcall
mov
orps
stos
xor
dec
jo
sbb
push
and
xchg
int3
negb
pop
addr16
subl
fwait
pop
in
xchg
cmp
clc
iret
mov
addr16
cmp
pop
gs
cmp
push
bound
icebp
jo
ror
cmc
std
adc
dec
dec
rorb
pop
push
rorl
fsubrs
dec
movsl
ja
xchg
add
repz
idivl
lcall
mov
adc
push
cltd
div
ret
fstpl
clc
add
out
cmpsl
push
jg
inc
cmp
mov
inc
pop
les
repz
mov
lods
rclb
lods
int3
psrad
sti
fildll
xor
inc
mov
dec
sbb
mov
mov
int3
push
mov
enter
push
lock
roll
pop
imul
divb
mov
cmp
inc
es
out
xchg
pop
call
and
pusha
pop
dec
mov
cld
push
ficomps
xorb
sahf
stos
or
imul
ret
loope
xchg
in
das
push
je
movsb
scas
push
or
cmpsb
outsb
dec
adc
divl
out
stos
loop
or
shlb
popa
call
int3
inc
stc
movsb
xor
sbb
test
shr
or
and
mov
lahf
sbb
sub
mov
add
stos
popa
movsl
mov
or
sbbb
jge
jecxz
mov
or
and
mov
inc
aad
add
ds
mov
je
xchg
push
jmp
pop
adc
stos
aad
outsb
fdivrl
imul
sub
sbb
sbb
aas
int3
rcl
mov
lcall
push
cmp
repnz
scas
nop
or
adc
sub
movsl
xchg
into
pop
push
test
fwait
adc
or
popa
loopne
bound
std
sbb
fdivrs
cmp
call
test
int
test
fdivs
jae
jbe
andl
dec
imul
fildll
or
aad
scas
mov
mov
xchg
or
sub
dec
clc
jl
jae
out
xor
jae
jae
sti
popa
push
mov
arpl
in
or
xchg
adc
push
dec
mov
push
sbb
mov
mov
stos
loope
jbe
mov
fwait
insl
ret
outsb
mov
add
int
and
jg
sbb
ja
adcb
mov
dec
xor
dec
lods
sub
mov
out
int3
push
mov
pop
ja
xor
das
pop
addr16
lret
fwait
mov
xorl
and
xor
adc
cmp
inc
jmp
cwtl
inc
out
cmp
mov
jbe,pn
mov
arpl
fisttpl
sbb
mov
loop
lret
jae
add
add
imull
loop
and
xor
sbb
sbb
and
cmp
cld
mov
xchg
and
cmc
test
xor
ds
xchg
xor
repz
pop
mov
jnp
jle
addr16
sbb
sub
aad
adc
ljmp
data16
xor
jnp
dec
push
rorb
mov
mov
fwait
xchg
dec
int
outsb
clc
and
icebp
adc
decl
rol
fadd
and
inc
inc
popa
pop
iret
mov
std
aaa
adc
mov
adc
mov
out
js
mov
jo
test
pcmpgtb
divb
pop
cmpsb
test
nop
mov
dec
dec
cmp
repz
adc
pop
mov
jmp
pop
bound
dec
adc
fsubl
jmp
push
ljmp
int
mov
push
addb
jae
jle
xchg
in
push
popaw
testl
add
xchg
push
and
mov
sbb
outsl
jne
fwait
in
jb
and
or
popf
adc
rclb
xor
push
push
enter
test
cltd
out
dec
repnz
push
aas
test
insl
add
jg
movsl
mov
cmp
adc
sbb
pop
mov
sub
xchg
lea
outsb
sbb
adc
jbe
popa
fs
xchg
jg
lea
jns
ret
shll
cmpsl
orb
iret
or
fldln2
out
sub
es
sarb
leave
mov
cmp
cmp
cltd
sti
and
dec
shr
sbb
xchg
inc
pop
xor
push
sbb
icebp
dec
push
stos
mov
xlat
pop
ds
mov
add
mov
jne
in
das
jne
data16
movsl
cmc
test
mov
js
sbb
sbb
andl
pop
nop
push
pop
stc
iret
sbb
mov
xlat
add
aaa
sbb
lret
mov
fs
push
xchg
and
stos
ljmp
or
push
out
jne
jnp
adc
lcall
js
ja
pop
repz
cltd
adc
dec
mov
leave
cmc
int
lahf
add
rorb
sahf
cmp
and
xor
ja
shll
fwait
mov
cmc
repz
jecxz
push
adc
or
mov
cmp
ret
cmp
in
add
mov
push
mov
cmp
lds
xchg
and
outsb
push
aaa
lods
push
iret
jns
sub
inc
pusha
xor
mulb
pop
push
sub
jno
sbb
adc
adc
mov
cmpsb
push
cmc
xor
dec
scas
imul
jecxz
rcrb
add
sbb
sbb
loop
jnp
sbb
xor
out
mov
jecxz
jle
mov
mov
popf
adcl
pop
xchg
popf
test
sbb
lods
loope
dec
mov
addb
add
iret
cmp
mov
push
push
xchg
sub
mov
adc
leave
xchg
push
pop
xlat
pushl
ret
inc
sub
lock
dec
pop
cmc
pop
push
xor
mov
fwait
push
movsb
cld
into
push
lods
jmp
addb
sbb
cmp
popa
mov
fs
mov
loop
push
das
insl
and
cmp
shrl
pop
shrl
jp
add
inc
pop
jg
inc
loopne
inc
cs
pop
mov
in
adc
fdivrs
mov
insl
xchg
jl
cmp
ret
lds
icebp
rolb
or
pushf
mov
cltd
jne
mov
inc
or
mov
push
jl
aad
mov
ljmp
enter
and
aaa
ds
or
std
pop
ljmp
sbb
jo
and
jp
adc
addr16
outsb
sbb
lcall
sub
cmpsl
icebp
imul
inc
fiadds
pop
xor
xor
sub
loope
jb
and
pop
add
or
aas
push
insb
pop
and
adc
mov
mov
bnd
mov
loopne
add
ss
jg
add
fcomi
aas
xchg
or
mov
mov
lahf
and
cmp
mov
dec
mov
orl
mov
movl
pop
in
add
mov
push
or
add
sbb
and
adc
adc
xor
pop
push
test
shlb
ja
lea
add
sub
test
cmp
mov
jne
call
rolb
xorl
es
dec
add
dec
xlat
icebp
pop
cmp
cpuid
adc
xchg
dec
inc
push
mov
jle
fcoml
insl
mov
mov
dec
das
jae
out
std
inc
stc
lret
out
pop
jg
scas
cli
pusha
icebp
pop
pop
sbb
xchg
lods
movsl
cwtl
hlt
inc
push
imul
jecxz
stos
or
out
test
out
dec
or
iret
mov
xor
dec
xor
loop
push
lods
and
in
mov
decb
jb
aam
into
xorb
and
cmc
js
push
bound
cmpsb
cmp
mov
and
dec
test
mov
inc
mov
fisubrs
mov
xchg
mov
add
sahf
pop
dec
mov
imul
jecxz
lock
mov
pop
sbb
call
out
stc
in
dec
idivb
fsubrl
nop
jg
div
insl
insb
fwait
cmpb
loop
ss
repz
pop
push
insb
aas
sbb
push
adc
aas
dec
inc
cmpsb
dec
mov
push
dec
and
repnz
rcrl
sub
push
xor
inc
mov
repz
fisubl
inc
scas
jle
mov
das
or
jnp
adc
xor
rorb
fdivrl
shrb
jle
idivb
cmp
xor
or
xor
nop
pop
push
int
mov
cmpsb
sbb
cmp
inc
sbb
dec
test
add
daa
push
cltd
out
out
or
inc
and
push
out
or
xchg
js
dec
std
dec
mov
pop
dec
inc
mov
bound
shll
roll
pop
xchg
lea
inc
pop
inc
push
rcrl
or
stc
shrl
out
ret
sar
push
cld
pop
pop
sarb
hlt
mov
fldt
jp
insl
push
mov
pop
sub
clc
sub
sub
or
fimull
out
push
and
out
cmp
cld
mov
in
fiadds
xchg
in
dec
cmp
div
or
inc
pop
fimull
sub
lds
mov
shl
iret
sbb
add
mov
jl
jns
stos
push
lret
mov
jae
pop
lds
push
and
pop
xor
fildll
scas
xor
es
popf
xor
out
xchg
or
js
sub
jo
sbb
sar
lds
jbe
mov
dec
push
insb
lahf
sbb
imul
push
sti
loop
inc
nop
test
add
xchg
inc
int
jns
mov
sbb
dec
fs
lods
dec
add
scas
scas
hlt
sub
mov
ret
ret
aad
push
es
mov
in
lods
dec
cmc
xor
fisubl
mov
je
inc
stos
jge
and
mov
pusha
cmp
pushf
lahf
pop
dec
jnp
xor
inc
inc
push
jns
in
adc
movsl
or
mov
sbb
jl
inc
data16
or
jmp
stos
push
sub
loop
cmp
fists
int3
jmp
outsl
mov
out
jp
push
fdivr
rclb
mov
cmp
jb
icebp
pop
fcomps
push
frstpm(287
iret
xlat
movsb
adc
jo
loope
sbb
xor
push
mov
ret
int3
xchg
hlt
mov
sbb
mov
and
icebp
inc
mov
out
into
sub
stos
mov
dec
lret
je
fmul
jns
dec
dec
ficoms
jbe
loope
or
xor
lods
rorb
in
test
sbb
fwait
push
jp,pn
xchg
sbb
mov
imul
ja
lret
jno
iret
popa
mov
add
or
js
inc
fcoms
push
xchg
sbb
mov
lea
xchg
mov
jns
test
pop
or
pop
into
pop
popa
cwtl
lea
enter
adc
fcompl
push
pop
arpl
mov
xor
shlb
dec
sbb
fs
imul
inc
jmp
dec
roll
fcompl
pop
push
stc
lret
mov
or
push
sub
mov
pop
repnz
jbe
mov
test
pushf
les
pop
shl
fldl
inc
xchg
insl
movsl
out
shrb
inc
push
js
mov
mov
push
je
pop
aam
pop
stos
fcoms
xlat
sbb
sub
daa
or
dec
aas
cmp
fadds
push
push
mov
inc
fcmovnb
out
mov
outsb
addr16
in
mov
jge
cmp
jb
int3
jge
lea
insl
in
or
lds
neg
test
push
sbb
mov
sub
pop
pop
mov
or
inc
push
mov
xor
outsb
pop
lds
mov
inc
xor
daa
xchg
xchg
das
mov
fcmove
mov
adc
adc
std
imul
inc
xor
xchg
in
popa
and
jg
push
pop
loope
mov
sub
loope
pop
adc
xchg
sub
lods
gs
divl
jo
sbb
or
insl
lea
jecxz
cmpsb
push
adc
cwtl
dec
dec
or
xlat
ffreep
mov
xchg
aas
push
sub
jo
ss
inc
mov
stos
popa
std
inc
sbb
fcom
lods
adc
popf
or
adc
and
stos
push
xchg
mov
sub
adc
jecxz
push
in
rep
lock
cmp
sbb
mov
leave
insl
sbb
sbb
aas
enter
into
dec
cmp
test
jno
add
inc
xchg
jb
aas
mov
mov
imul
sbb
call
pop
das
inc
xor
movsl
dec
arpl
ds
push
and
stos
cmp
cmp
les
cmp
mov
es
inc
mov
nop
sbb
xchg
pop
add
sbb
mov
pop
gs
dec
inc
inc
xchg
and
mov
data16
das
xchg
xor
push
jmp
add
mov
or
es
fwait
pop
sub
lcall
add
lods
cmpsb
jecxz
jns
cli
push
imul
lcall
dec
push
les
or
pop
fisttps
sbb
sub
fucomi
out
add
push
inc
out
bound
jg
movsl
scas
adc
xchg
clc
adc
into
in
mov
dec
xorb
in
push
sbbl
xor
mov
movsb
ret
cmpsb
lcall
inc
int
in
nop
jp
mov
xorl
push
rcr
std
mov
inc
lods
jg
xlat
sbb
lahf
sub
push
mov
stos
dec
xor
xor
mov
inc
ds
pop
inc
add
mov
dec
lcall
loop
flds
mov
jnp
cmpsl
adc
xor
sbb
inc
dec
pop
gs
mov
loop
imull
dec
es
pop
inc
push
push
adc
sbb
movsl
dec
dec
out
cli
scas
lret
jecxz
ja
hlt
adc
adc
shrb
loope
xor
cmp
sub
dec
add
push
in
shrb
and
push
imul
push
stc
scas
jp
mov
inc
xchg
mov
rorb
sahf
cmp
mov
xlat
not
dec
inc
popf
cmc
or
repnz
lret
aaa
out
jbe
je
adc
cmp
aas
push
das
inc
dec
jp
test
mov
mov
mov
imul
rorb
fldenv
push
imul
in
popf
mov
push
jnp
call
adc
das
scas
jmp
jns
test
lock
outsl
movsl
jae
or
xchg
dec
lods
lods
lock
push
addr16
xchg
xor
xor
rcl
stos
xor
ja
sti
es
and
mov
gs
jl
jp
ljmp
rolb
add
xchg
lcall
shrb
les
or
push
int3
shrb
xchg
pusha
mov
jg
jno
into
lods
push
cmpsl
mov
aad
aas
std
in
loope
xlat
pop
pop
dec
out
icebp
mov
je
cmp
in
lahf
push
pushf
add
xchg
enter
mov
adc
pop
cmp
enter
push
es
out
and
in
xchg
lds
dec
lea
out
and
in
mov
bound
sti
or
adc
iret
xlat
mov
je
xor
sub
and
mov
out
mov
lods
cmp
pop
idivb
int
fdivrs
in
fidivrs
cmp
add
call
or
pop
push
repnz
lret
jae
pop
cmp
add
fbstp
pop
add
nop
mov
outsb
mov
aam
stos
jo
mov
es
cli
xchg
push
add
call
dec
or
icebp
dec
xchg
sub
inc
xor
sahf
mov
cld
dec
xlat
xor
popa
sbb
push
sbb
inc
push
cmp
push
loop
mov
mov
mov
pop
and
push
das
into
and
or
xchg
mov
adc
cwtl
bound
jge
sub
in
jg
jmp
negb
mov
dec
mov
mov
adc
mov
loope
fimuls
loop
inc
test
fidivl
sub
fiaddl
testb
add
fisttps
dec
test
pop
cld
inc
stos
into
add
in
cld
repz
mov
mov
mov
pop
fs
mov
push
js
test
cmp
jo
repz
pop
movsb
push
pop
js
test
insb
insl
out
pop
lods
sbb
sub
xchg
jmp
fdivs
and
cmp
and
pusha
aad
add
inc
mov
fimuls
push
cmpsb
add
mov
mov
ret
mov
pusha
shr
and
cmc
sarl
sbb
xor
inc
pop
addr16
mov
iret
pop
pop
into
dec
add
inc
add
mov
in
sub
add
push
dec
std
enter
rcrb
sbb
mov
imul
dec
mov
ret
popa
fcmovu
fs
enter
das
mov
pop
cmpsb
pop
push
mov
fs
enter
adc
repnz
dec
sbb
xorl
aas
in
int
jecxz
out
push
movsl
and
sbb
jmp
sbb
mov
mov
mov
je
mov
jb
mov
xor
xchg
inc
jo
pop
movsb
fidivrs
loop
ret
cmp
inc
daa
popa
jne
mov
cmp
and
aam
movsb
sbb
xchg
cwtl
call
mov
mov
jp
jno
lods
ss
xor
cltd
add
js
jmp
mov
or
cmp
pop
sbb
std
jg
sti
stos
pop
out
xchg
inc
and
add
push
out
mov
insl
popa
insl
repnz
jno
xchg
mov
fbstp
xor
andb
and
mov
insb
pop
shll
fs
adc
adc
mull
insl
push
adc
das
jae
pop
mov
xor
leave
mov
mov
nop
pushf
ds
xchg
xchg
pop
sub
das
fnstenv
jne
mov
mov
pop
clc
mov
pop
adc
sbb
pop
pop
test
cli
int3
and
cmp
daa
mov
push
mov
jl
mov
shll
sti
call
fdiv
push
inc
out
xor
lret
fildll
jns
testb
int
or
loopne
pop
pop
ret
call
and
dec
sbb
xlat
adc
xor
mov
jns
pushf
jge
fstps
mov
jno
ror
xchg
add
iret
cmp
sti
fsubrs
push
or
adc
mov
and
or
mov
mov
pop
gs
nop
int3
adc
push
adc
test
jno
pop
jp
cmp
pop
inc
and
mov
scas
imul
mov
sbb
or
xchg
mov
loopne
xor
mov
out
je
jno
fsts
pop
scas
pop
cltd
xchg
or
cmp
aam
xchg
shlb
and
rep
out
dec
out
int
int
imul
daa
cmp
bnd
inc
jno
pop
dec
loopne
out
mov
movsb
inc
aam
jmp
call
scas
scas
push
js
jl
dec
mov
cli
arpl
jae
mov
adc
pop
ret
mov
loopne
rorb
xor
addr16
scas
pop
mov
into
lods
inc
jge
mov
jnp
repnz
jbe
or
std
inc
imul
jmp
clc
adcb
aas
imul
lea
xchg
fcmovbe
es
sbb
dec
mov
cmp
test
das
outsb
mov
and
repnz
jmp
xor
adc
into
out
add
push
gs
push
dec
jg
lahf
test
jo
adc
test
dec
jmp
in
pop
movsb
fdiv
test
and
xor
loope,pn
pop
jecxz
sub
sbb
cmp
sub
cld
stc
fists
mov
test
inc
in
add
jae
dec
cmp
cmp
inc
rcll
add
mov
push
push
shlb
pop
mov
mov
xchg
xchg
mov
inc
mov
jp
cmp
loope
fisttpll
push
and
sbb
jb
fmuls
test
mov
lahf
imul
xchg
mulb
int3
mov
shld
xchg
iret
movsl
gs
xchg
xor
ret
cmp
jmp
sub
inc
fstl
dec
and
pop
xchg
adc
jno
xchg
lret
fists
sub
and
mov
subl
mov
out
xrelease
jne
pop
inc
mov
nop
fdivrl
addr16
std
and
cvtps2pd
mov
rep
dec
dec
mov
rcrb
out
jb
jecxz
aas
and
in
aad
lret
in
jne
xchg
stos
cli
fcomps
jl
or
or
jle
arpl
cmpl
xor
lods
mov
and
inc
mov
mov
sub
adc
xlat
into
push
or
sbb
dec
pop
jbe
mov
cmp
sub
pop
mov
adc
idivl
xchg
add
sbb
scas
icebp
lahf
in
filds
pop
jecxz
jo
call
mov
iret
sub
jnp
or
lahf
lcall
insb
out
inc
fwait
xchg
dec
mov
or
aaa
cli
pop
fwait
int3
ret
mov
mov
sahf
dec
cli
sub
pop
jge
adc
xchg
loop
std
push
out
fdivrl
int3
sub
mov
adc
out
repnz
sbb
push
sbb
in
xor
int3
movsl
mov
popa
int
adc
out
mov
mov
rcrb
subb
addl
cs
scas
fiaddl
clc
mov
adc
outsl
lret
cwtl
popf
popa
dec
mov
fs
mov
and
lds
mov
pop
dec
std
mov
and
test
xchg
rclb
cmp
mov
inc
int
imul
mov
cmpsb
xchg
push
adcl
add
xor
jle
pop
idivl
loopne
ret
mov
and
add
sbb
sub
in
xchg
sub
fsts
xlat
dec
sub
test
outsb
xchg
lods
out
mov
pop
outsb
xchg
mov
mov
js
sub
push
xchg
decl
adc
fcom
or
mov
scas
insb
inc
in
cmp
pop
xor
fidivl
and
lahf
lahf
lret
shlb
jno
leave
or
mov
outsb
xor
pop
add
jmp
xchg
or
jns
xorb
stos
out
outsb
xor
jl
pop
xchg
int3
mov
addr16
xchg
xchg
es
xchg
aaa
pop
dec
ljmp
jne
sbb
loope
bound
js
std
pushf
jo
xchg
sub
decb
mov
bound
xchg
xchg
mov
loope
fiaddl
mov
outsl
clc
push
xor
sub
mov
mov
cmp
and
scas
mov
adc
xlat
dec
je
and
in
pop
stos
adc
cmp
mov
insb
pop
inc
push
aaa
insl
and
out
xchg
daa
inc
inc
das
xor
shll
mov
lahf
scas
lods
jbe
ret
mov
mov
ret
cmp
bound
clc
pop
mov
xchg
sbb
mov
jae
mov
into
adcb
add
push
loope
mov
daa
jle
xchg
inc
pop
inc
push
inc
movsl
inc
cli
add
pop
sarl
jbe
popa
out
cli
mov
cltd
adc
rcll
sti
test
bound
loop
cmpsl
cmp
bnd
ffreep
and
imul
outsb
xchg
into
mov
icebp
mov
sbb
mov
pop
xor
cmp
loop
cli
mov
sub
jo
mov
dec
pop
sub
inc
and
lea
dec
sub
ret
aad
out
scas
jnp
push
mov
sarb
in
sbb
adc
hlt
xor
out
mov
jo
add
xor
push
mov
lds
pop
mov
pop
lock
ja
xchg
ljmp
mov
inc
andl
pop
push
xchg
sbb
jae
inc
mov
xchg
es
in
sub
jp
icebp
mov
xchg
fwait
sub
push
lock
mov
inc
jne
jmp
adc
sbb
push
sbb
push
lahf
adc
neg
mov
or
push
ss
sub
pop
ljmp
pushf
cs
andb
in
js
add
jl
filds
adc
xor
and
lds
add
and
sbbl
or
nop
dec
fnstsw
pop
lret
xor
cmp
gs
push
sbb
roll
xchg
data16
aam
push
push
movsl
add
imul
push
lea
test
outsl
mov
lcall
sbb
sub
fcmovbe
push
mov
pop
sarb
je
push
dec
clc
into
sub
mov
or
lcall
xor
loope
insb
pop
rcll
movsb
push
push
sarb
jnp
in
xor
jns
xchg
pop
or
adc
fcmovbe
inc
or
out
or
outsl
sub
outsb
add
jmp
mov
inc
fcompl
fistpll
sbb
xchg
loope
mov
cmc
pop
push
inc
push
shrb
sub
cld
add
lret
add
rolb
pop
std
leave
adc
mov
mov
in
cltd
jne
and
mov
inc
pop
mov
jbe
movsl
outsb
pushw
mov
fidivs
popf
mov
push
fcmovbe
loopne
lods
mov
inc
arpl
xchg
push
mov
xchg
sbb
push
stos
inc
pop
mov
push
inc
test
sub
xchg
ret
mov
xchg
xor
icebp
movlps
jg
popf
js
cld
cld
fisubs
jnp
scas
jmp
mov
fptan
js
pop
jecxz
pop
mov
xlat
stc
push
adc
push
inc
insl
xchg
and
imul
call
fwait
cmp
mov
dec
pop
imul
mov
or
and
enter
mov
popf
sbb
loopne
popa
inc
jp
call
fsubrs
add
icebp
lcall
rcl
rorl
incb
inc
enter
xchg
lea
mov
mov
cmp
mov
push
jl
pause
notb
shrb
pop
lcall
jle
daa
xor
in
or
hlt
pop
pop
adc
inc
repz
xchg
lahf
scas
rcl
dec
add
fildl
call
inc
or
pop
test
mov
jae
dec
out
cmp
inc
push
or
incb
inc
mov
popl
icebp
adc
ret
imull
cmova
shl
xchg
faddp
aas
ds
icebp
popf
jae
mull
pop
cmpsl
sbb
setle
push
scas
mov
push
pop
pop
icebp
mov
pop
pop
jg
clc
lret
mov
xchg
aad
sbb
cmp
pop
test
xor
fisubs
aad
ja
test
push
xchg
push
dec
popa
nop
jmp
cmpl
cltd
jns
mov
cmc
repz
cmp
mov
xchg
add
cli
mov
fisubl
pushf
test
call
lods
test
adc
enter
fdiv
mov
add
add
imul
push
inc
and
rcr
mov
cmp
or
rolb
dec
sub
std
cs
enter
inc
dec
sbb
mov
xor
lds
rcrl
leave
dec
xchg
jns
stos
test
aam
jle
inc
movsb
fistpl
ja
add
lahf
jae
call
outsl
lock
jp
daa
js
add
cmc
in
sub
test
loope
or
add
cmpb
test
dec
add
ret
jb
cli
mov
push
xor
push
push
adc
inc
sub
cltd
cs
cmovae
inc
popa
xchg
negl
xchg
stc
out
lea
dec
pop
dec
sbb
jb
inc
mov
clc
push
pop
push
sbb
aad
push
sarl
cmpsl
pop
in
and
xor
sub
roll
and
movsb
test
mov
shr
fsubrs
inc
jle
adc
xor
push
jno
xchg
xor
jae
mov
adc
outsl
jecxz
pop
push
adc
fistl
jle
cmp
sbb
adc
mov
aaa
cltd
sbb
sbb
mov
mov
lcall
test
adc
jbe
xchg
sbb
loop
pop
adc
lcall
movsl
push
inc
xchg
mov
in
add
outsl
sbb
lahf
movsb
fs
sub
xchg
xchg
lods
cmp
and
cli
je
fs
nop
fs
bound
pop
and
mov
add
mov
roll
dec
xor
sub
inc
rclb
ja
push
out
lret
xor
pop
rcll
and
jne
sbb
fidivrs
mov
nop
mov
push
xchg
in
dec
xchg
cltd
pop
inc
ja
popf
loope
lea
cmp
jbe
pop
data16
pushf
insb
sub
stos
cli
scas
xlat
sbb
mov
inc
sbb
or
mov
das
mov
fdivrs
push
jno
fidivrl
xchg
mov
sbb
je
jnp
sub
sbb
xor
hlt
and
aaa
jae,pt
jp
pop
outsb
mov
mov
and
mov
xor
cltd
cld
sbb
cmc
inc
imul
xor
xchg
outsb
jb
cli
and
or
fs
inc
lret
xchg
leave
ds
aam
imul
jp
xchg
ss
or
int3
ljmp
xor
repz
xchg
pop
push
es
loop
div
ja
pop
mov
popa
and
adc
pusha
test
movsb
lods
pop
es
or
fidivrl
ret
or
cmc
jns
pop
ret
sbb
mov
inc
test
add
cmp
pop
adc
cmp
inc
call
pop
popf
xchg
loope
jno
imul
cmc
shll
sti
xchg
mov
es
jns
in
mov
iret
rclb
fildl
pop
cmc
xor
sbb
rclb
outsb
int3
mov
mov
cld
fistpl
sub
push
mov
sub
aaa
sub
fidivs
dec
es
sarl
arpl
xor
loopne
into
push
out
push
jl
or
pop
xchg
sub
std
pop
call
std
lds
pop
clc
pusha
xchg
testl
je
cwtl
inc
andb
stc
ss
xor
pop
mov
lock
test
insl
add
add
mov
stos
enter
jnp
insb
rcll
adc
cmpsl
jg
mov
and
and
push
pusha
pusha
mov
lea
adc
or
dec
sub
lahf
scas
dec
push
inc
fcoms
sub
cli
xchg
dec
mov
mov
mov
mov
inc
push
mov
pop
enter
sbb
fsub
js
movsl
jne
sub
stos
mov
div
and
sahf
out
cld
scas
call
adc
movsb
jns
add
dec
ljmp
insb
mov
setno
ret
sbb
pop
sbb
mov
repz
mov
push
jbe
pop
shlb
and
pop
jp
adc
pop
push
scas
bnd
mov
int3
lret
xchg
mov
xchg
push
nop
pop
cmp
cli
insb
testl
out
cmp
rcl
jl
adcl
shll
xlat
mov
es
push
or
mov
shrl
les
cmp
cmc
repnz
icebp
dec
mov
xchg
jo
stc
fwait
mov
or
cmp
jne
dec
push
push
jbe
cltd
fcomp
out
adc
aam
and
and
adc
add
dec
xchg
cli
fwait
and
outsl
and
and
mov
push
out
push
lods
inc
inc
sub
add
push
int3
adc
cmpsb
mov
pop
sbb
lods
loop
sub
les
jo
and
dec
insl
je
pusha
push
dec
pop
test
les
test
loopne
mov
mov
adc
xor
jmp
add
rcrl
jg
je
add
push
cld
pop
ret
pop
sbb
mov
fcmovbe
jg
cli
push
mov
inc
stos
scas
jl
pushf
int3
stc
mov
adc
int3
daa
fisubs
test
hlt
popa
scas
mov
sub
jns
lret
arpl
pusha
cmp
lods
adc
enter
jge
inc
mov
jae
lods
push
stos
jl
sbbl
jecxz
cmp
lcall
xlat
mov
xchg
dec
jle
pushf
je
jge
cmc
xor
push
inc
sarl
sti
push
mov
dec
out
lods
call
mov
mov
sub
es
sub
scas
mov
mov
adc
les
lods
xchg
in
cwtl
mov
cmp
dec
std
cld
add
xchg
fistps
fisubs
pop
inc
xlat
loopne
jno
adc
ret
cmp
jns
xor
add
notl
arpl
in
int3
insl
loopne
push
inc
pop
movsl
out
mov
stc
pop
jb
rcrl
fwait
dec
inc
lcall
push
insl
es
xchg
ss
dec
repnz
and
add
fnstenv
adc
xor
jns
repnz
rclb
shrb
les
cltd
addr16
sbb
ja
mov
dec
es
mov
daa
pop
jle
cs
or
jnp
xor
sbb
adc
ja
bound
mov
mov
xchg
mov
lods
ret
lahf
stos
mov
xchg
jecxz
jns
fisttpll
in
push
xor
jo
adc
cld
add
gs
out
dec
sbb
push
jl
clc
cld
lea
loopne
lea
in
dec
push
sahf
cmp
sbb
cmpsb
jecxz
scas
lahf
cmp
out
movsb
test
and
gs
pop
fidivs
push
jg
mov
cltd
xchg
pushf
add
shlb
mov
sbb
cmp
cmpsl
and
adc
push
dec
mull
jge
push
push
inc
setle
sahf
frstor
stos
repnz
inc
mov
inc
adc
in
hlt
fisubs
loope
fs
mov
nop
push
jmp
jb
aaa
jg
imul
ss
xor
nop
cmp
and
xchg
dec
hlt
adc
in
mov
xchg
lcall
insb
mov
mov
cmp
jg
mov
xor
rolb
sub
cmp
cmpsb
fadds
cmp
and
sub
mov
loop
in
rcrl
cmp
insl
adc
dec
rclb
sub
add
xchg
jns
lahf
mov
ja
enter
je
repz
dec
pop
gs
pop
setp
dec
sub
inc
inc
icebp
es
mov
mov
int3
push
mov
mov
js
hlt
pop
test
add
rol
rcr
leave
push
sbb
sbb
mov
addr16
and
insl
cld
test
orl
ret
jge
pop
negl
mov
loop
out
arpl
add
push
pop
pop
xchg
push
icebp
ret
adc
push
sar
int3
ja
adcl
sub
into
fs
push
cmpsl
pop
and
ljmp
push
lahf
or
int3
fldenv
and
xchg
addr16
add
push
in
je
jg
pop
mov
pop
negl
insl
mov
mov
ret
ja
xlat
sbb
and
outsl
aas
inc
cmp
insb
add
xlat
shlb
mov
les
xchg
enter
or
sub
inc
pop
mov
repnz
scas
dec
xor
cmp
xchg
and
int
xchg
xor
mov
xlat
scas
xchg
ret
xorl
pop
lret
mov
insb
js
loopne
or
dec
inc
xor
shlb
xchg
push
dec
mov
daa
ss
jo
mov
mov
sbb
push
sub
fistps
mov
jl
out
ret
stos
adc
aad
insl
fwait
dec
mov
dec
rclb
mov
cmpsb
insl
jmp
test
sarb
xorb
jmp
out
pop
mov
or
push
dec
jge
das
mov
cmp
add
std
push
addr16
pop
cmp
sbb
inc
insb
add
sbb
aas
out
xchg
movsb
mov
fcomps
lock
fdivrl
xlat
and
aas
cmp
lret
dec
aaa
cmpsl
jae
cld
push
sub
and
cmpsb
lret
adcl
lods
cld
adc
mov
pop
mov
das
inc
jecxz
data16
xor
fnstsw
rol
outsl
in
mov
dec
push
xchg
out
outsl
fsub
push
sbb
add
fwait
mov
jmp
push
sbb
out
std
and
stc
lret
movsl
xchg
cmp
sub
mov
ror
loopne
clc
push
push
ret
mov
std
pop
cmp
sub
mov
mov
jp
nop
gs
or
cmpb
testb
push
or
push
out
add
pop
aaa
and
pop
sub
loop
repz
add
mov
rcrl
fistl
dec
in
inc
iret
xchg
mov
mov
xchg
jmp
mov
add
fstps
rclb
bound
xchg
jmp
pop
imul
push
nop
out
inc
popf
fxch
loopne
or
adc
mov
push
hlt
sbb
pop
out
movsl
mov
fadd
xchg
mov
or
cmp
je
daa
ss
pop
add
stos
aaa
jbe
mov
loop
clc
jno
stos
cmpsb
pop
inc
lahf
nop
loope
test
pop
leave
cli
dec
mov
das
pop
push
das
mov
pushf
inc
fnstsw
push
data16
ja
mov
sub
sar
fs
mov
mov
enter
or
out
inc
cmpsb
and
jge
leave
es
sub
mov
jl
subl
test
push
push
jno
repz
xchg
mov
or
sub
mov
inc
push
sub
mov
movsl
jo
lret
mov
out
enter
xor
sbb
sbb
add
push
into
in
pushf
mov
mov
insl
popf
out
or
gs
les
xchg
shll
pop
and
adc
mov
int3
mov
scas
outsb
add
movsl
in
and
ret
xchg
xor
ja
inc
out
scas
jecxz
cwtl
xor
xchg
mov
xor
int
sub
enter
popa
loop
mov
mov
mov
sub
push
pushf
xor
into
mov
insl
inc
loope
and
fidivrl
and
lods
out
sub
inc
jbe
loopne
or
cld
mul
adc
jge
xchg
inc
lock
cmp
mov
jmp
gs
jnp
push
pusha
cli
call
mov
push
mov
fnsetpm(287
in
je
pop
movsb
push
iret
gs
test
or
and
sbb
cmp
or
ret
mov
mov
add
mov
cmpsl
ja
test
icebp
cli
xchg
dec
xor
cmp
or
inc
or
aas
out
ret
addr16
cmp
in
xlat
push
int3
fidivs
outsl
movsl
cltd
test
mov
sti
jae
mov
pop
jae
into
pusha
aam
test
cld
dec
sarl
shll
out
fnsave
adc
mov
pop
cmp
test
and
push
nop
insl
popf
inc
aam
or
cmc
movsl
fildll
xlat
cli
cltd
sub
dec
jecxz
lret
jp
data16
icebp
lds
jecxz
lahf
mov
mov
mov
sbb
inc
movsl
add
lea
repnz
and
sbb
push
aam
clc
jl
lret
lret
test
add
dec
or
je
xor
ds
mov
cmp
mov
subb
xchg
loop
push
daa
scas
scas
xlat
jmp
sahf
jb
subl
dec
js
sbb
or
test
stos
lds
scas
bound
frstor
mov
comiss
gs
and
jl
dec
lcall
mov
and
outsl
leave
andl
loopne
mov
lods
xor
cmp
in
pushf
bound
and
cmp
sar
into
cmp
rorb
rcrb
and
push
fs
pop
sub
int
loop
fnstcw
pusha
cmc
xchg
xor
add
and
push
pop
popa
jnp
or
daa
lcall
push
loop
test
jle
test
inc
mov
push
clc
adc
jae
sbb
add
mov
push
or
jp
arpl
jle
pop
int3
inc
mov
or
xchg
dec
sbb
jb
fsubrs
je
lret
add
nop
pushf
test
les
cltd
mov
jbe,pn
jge
lahf
dec
push
and
dec
sbb
add
test
xor
pop
mov
and
inc
mov
out
sahf
je
fs
add
shll
jne
stc
imul
lods
fnstsw
cli
jge
pop
inc
mov
jecxz
std
and
pushf
je
pop
or
add
mov
jecxz
or
sub
sub
jp
pop
xchg
cli
pop
add
inc
and
pop
jp
shrl
cld
mov
jp
cmp
push
mov
mov
mov
or
xchg
enter
movsl
out
sub
inc
jle
sar
mov
mov
mov
movsb
aaa
je
mov
mov
lea
call
sbb
push
cmp
mulb
mov
inc
push
jb
mov
icebp
jb
mov
mov
mov
dec
mov
in
fnsave
fsts
or
mov
jns
mov
je
pop
scas
bound
das
scas
add
or
adc
or
ljmp
or
add
mov
mov
ret
jecxz
aad
add
into
xchg
fstps
push
jne
mov
jb
movsb
hlt
loopne
insb
sbb
adc
sti
pop
pop
mov
jl
pop
dec
ss
push
push
dec
push
dec
and
or
andl
out
xchg
std
out
xchg
fimuls
dec
loopne
cld
popa
ds
or
xchg
orb
loop
adc
ljmp
das
xchg
insb
add
imul
xchg
cs
mov
jg
shrb
push
inc
sbb
jle
incl
lret
test
out
jge,pn
pmaxub
sub
mov
or
cmp
in
jp
nop
arpl
loopne
mov
mov
lods
mov
lods
in
fnstcw
mulb
mov
out
cmc
xchg
add
xchg
loope
in
data16
mov
dec
sti
sbb
std
test
scas
outsb
lahf
sbb
xchg
aad
in
sub
and
test
stos
dec
xchg
das
jmp
jns
lds
cmp
testb
bound
sub
push
add
pop
cmpsl
cltd
leave
add
sub
sbb
cli
xchg
and
cmp
aam
inc
in
fsubrs
mov
xlat
xor
and
in
xor
dec
push
adcl
fimull
or
psubusw
js
pusha
mov
mov
cmp
loopne
jmp
and
frstor
xchg
loopne
rorl
inc
mov
into
addr16
adc
fcmovu
loopne
xchg
sbb
movsb
mov
mov
pop
enter
idivb
mov
dec
inc
add
jne
pop
mov
jecxz
or
and
lcall
push
insb
or
sub
cld
adc
in
out
stos
sbb
push
mov
sbb
or
push
jns
cmpsl
in
mov
add
lds
cmp
or
je
mov
ja
push
push
and
imul
sub
rcrb
test
sub
sti
jae
cmp
and
orl
aas
push
vpsubsb
shll
mov
mov
or
mov
xor
jp
mov
push
dec
push
xor
sub
js
decl
cli
fs
sbb
sti
mov
imul
fwait
and
in
punpcklbw
mov
jmp
inc
ljmp
fisubs
pop
pop
mov
dec
in
stc
popf
adcl
imull
dec
push
loopne
push
nop
sub
insl
insb
jnp
dec
shrb
aad
pop
xor
and
ds
sub
jl
sbb
inc
out
inc
xchg
mov
push
shll
xor
xchg
aas
push
cmp
mov
mov
pop
xor
xor
fwait
cmp
cs
dec
pop
je
fs
cld
popa
out
pop
insb
or
test
ds
cmp
out
mov
outsl
fs
fsubrp
mov
mov
push
push
fmulp
mov
xor
jge
adc
sar
dec
jmp
jg
jbe
dec
jo
pop
ret
mov
test
or
movsbl
insb
inc
mov
fsts
pop
ret
jb
and
fsubrp
lahf
xor
add
popa
xchg
pop
out
push
ficompl
mov
cwtl
test
les
mov
and
mov
ficoms
fnsave
jno
leave
fs
lods
pushl
mov
xor
sar
pop
cmp
add
adc
das
lcall
push
fmull
sbb
lea
insl
mov
call
shll
test
xchg
stos
jb
inc
lods
mov
daa
testb
inc
mov
stos
div
sbb
push
inc
cmpsl
sub
fisttpl
ja
and
xchg
dec
loopne
xchg
mov
cmp
out
xor
sbbl
mov
push
mov
lea
dec
adc
fiaddl
sub
xlat
xchg
push
cmp
cmp
xchg
mov
shrl
jp
cltd
pop
cmp
push
pop
arpl
dec
and
fwait
mov
test
scas
fs
outsb
mov
enter
inc
add
sbb
pop
push
gs
push
into
jecxz
pop
dec
mov
orb
dec
mov
push
mov
adc
test
push
pop
jmp
pop
dec
aad
cs
out
xchg
cmp
mov
xchg
mov
out
outsb
pop
adc
cmc
lds
sbb
adc
or
movsl
subb
lahf
ljmp
fdivrl
fildl
mov
jl
pop
jns
rol
and
arpl
popa
or
fs
add
lahf
mov
add
dec
adc
sub
lea
dec
arpl
adc
jecxz
repz
bound
adc
jl
std
lea
sub
addr16
aad
sahf
pop
lods
dec
sbb
pop
pop
idivb
sarl
adc
add
pop
js
imul
out
push
lea
pop
outsl
xchg
cmpsb
jo
inc
cmp
sub
jmp
dec
call
cld
sub
clc
push
in
repnz
pop
nop
arpl
mov
fcoms
fistpl
or
aaa
scas
insb
jns
out
xchg
lods
jne
xorl
pop
inc
and
fmul
xchg
mov
insb
ret
push
loope
mov
push
mov
dec
lods
aad
sub
mov
movsl
sbb
enter
push
jns
mov
rcrb
clc
test
pop
inc
aaa
adc
pop
push
fstpl
das
sub
fwait
add
test
and
mov
dec
pop
notb
mov
ret
das
and
xor
mov
xor
cmp
mov
adc
cld
imul
data16
push
pop
sbb
ljmp
sbb
out
push
xchg
sti
lods
jb
sub
enter
xchg
pop
dec
fstps
cmp
jp
hlt
out
push
outsl
push
jge
enter
insl
mov
jp
lea
or
popa
cmp
mov
test
scas
in
idivb
cld
lea
iret
std
mov
pop
outsl
frstor
ficoms
in
add
cli
inc
lock
push
push
xorl
jge
in
jnp
sbb
mov
mov
cli
push
add
cmp
pusha
mov
imul
cmpsl
popl
pop
daa
inc
dec
xchg
xchg
bound
inc
les
sub
pop
or
int3
orps
fs
mov
jns
cmp
je
das
sub
mov
sti
bound
and
pop
push
jb
sub
sbb
inc
loopne
mov
xchg
dec
add
fdivs
in
inc
cmp
rclb
mov
cmp
xor
daa
sub
xor
mov
les
mov
mov
test
jnp
inc
jg
xchg
inc
xchg
out
imulb
xchg
add
addl
fistps
mov
mov
in
adc
ds
loopne
inc
dec
add
cmpsb
or
dec
jge
ficoml
je
sub
cmp
inc
add
decb
and
mov
dec
int3
mov
inc
outsl
arpl
mov
ja
mov
fimull
jmp
and
fincstp
lods
fdivrl
mov
les
xchg
pop
cli
test
dec
mov
cmpsl
div
aas
aaa
fadd
jns
jnp
sub
outsl
xor
cli
sub
repnz
shrb
ds
popf
data16
fdivs
or
pop
into
or
out
jge
je
or
sbbl
stos
shll
nop
fmulp
jge
dec
ja
xor
push
xchg
push
sti
outsl
ja
divl
sub
imul
test
jp
mov
das
lahf
fwait
imul
call
je
cmp
push
and
clc
sub
pop
mov
push
dec
push
adc
mov
repz
out
mov
mov
imul
mov
sbb
or
cmpxchg8b
leave
and
cmp
out
dec
adc
mov
adc
sahf
out
cld
pop
push
pop
jne
in
loop
pop
pop
jb
mov
pop
xor
lret
inc
arpl
loop
jp
stos
dec
popa
cmpsb
andb
pop
xor
in
es
icebp
rolb
lods
dec
mov
in
clc
test
test
adc
xchg
imul
ja
gs
mov
out
in
cmp
xchg
into
movsl
push
add
js
stos
cmp
stos
jp
sbb
mov
in
bound
cltd
xchg
xchg
add
pop
cmp
cmpsl
pop
mov
jo
fcoms
bound
ret
mov
mov
xchg
pop
popa
jns,pt
sbb
push
dec
orb
pop
jmp
stos
mov
and
gs
adc
cmpsb
icebp
in
sbb
pop
pop
lcall
add
adcl
pop
cmpsb
das
or
push
enter
mov
subl
push
sub
repnz
imul
lret
sub
xchg
mov
repz
jnp
and
loopne
insl
rcrl
sub
mov
mov
out
push
lret
nop
ss
out
out
mov
sub
cwtl
mov
dec
xchg
pop
stos
push
push
cmpsl
sbb
fstl
cld
push
cwtl
popf
stos
pop
dec
pushf
fisubs
ja
call
into
pop
xchg
cmp
mov
sub
fldenv
orb
xor
xchg
push
xchg
jecxz
fidivrs
jl
icebp
in
mov
jl
lods
testl
inc
aas
aas
es
roll
int
xchg
and
jge
test
add
fidivrl
lock
push
dec
cmc
sub
inc
loope
mov
cmp
or
iret
jae
mov
fisttps
sub
sbb
mov
pop
adc
sub
jle
stos
gs
add
in
xor
cmp
rclb
inc
fsub
cmpsl
cmp
jno
aad
adc
movsl
mov
lea
outsb
lock
cmpsl
scas
sub
push
mov
pop
push
or
cltd
dec
sbb
data16
adc
mov
xchg
test
aad
mov
cmp
xchg
inc
jne
in
in
shl
mov
sub
push
dec
lea
les
ret
lods
mov
mov
xchg
add
adc
jae
xor
out
pop
jae
push
aam
movsb
push
das
movsb
add
xor
pop
pop
test
sbbb
mov
js
arpl
dec
stos
int
into
in
in
sub
and
push
call
add
dec
repnz
xchg
pop
push
fwait
xorb
arpl
jae
subl
xor
movl
mov
test
loope
ret
push
or
push
cmp
sub
js
movsb
mov
sbb
lahf
outsl
and
ret
mov
sti
push
bound
xchg
add
fsubl
insl
cmc
mov
add
lea
xchg
pop
lds
pop
push
test
cltd
cli
or
in
mov
lea
push
popf
sub
xor
mov
dec
and
sbb
popf
push
pop
add
pop
push
cmp
pop
lcall
jl
scas
sbb
adc
int3
aas
pop
push
daa
test
loopne
fwait
add
cmpsl
xor
lret
les
sub
cmp
std
dec
mov
pop
repnz
dec
adc
xor
ret
je
outsl
mov
dec
stc
push
rol
movsl
or
fstl
insb
mov
and
xchg
mov
int
aam
cwtl
xor
cmc
out
pusha
mov
fs
push
fnstcw
imul
xor
out
pop
in
jns
into
jns
insb
adc
sub
ljmp
aam
repnz
testl
mov
push
sbb
push
pop
jae
cld
scas
pop
adc
xchg
adc
sub
xchg
add
jnp
repz
jl
push
orl
jae
pop
fchs
es
or
fcmovu
mov
decb
lods
and
push
incl
arpl
dec
das
nop
xlat
nop
sbb
in
iret
xlat
or
inc
shrl
rcrb
fucomi
out
mov
or
pop
imul
imul
mov
xchg
push
jns
insl
inc
mov
repz
arpl
out
mov
adc
pop
cmpsb
sbb
pop
fstl
or
or
decb
insl
jle
push
cmpl
enter
mov
sbb
add
loopne
cmp
incl
insb
or
movsl
fidivl
ljmp
inc
sbb
hlt
stc
mov
cld
push
rclb
jg
xor
inc
push
xchg
mov
sar
dec
sahf
jg
xchg
jecxz
xchg
xchg
sub
xchg
cmpsb
cmpb
jb
icebp
pop
in
int3
in
pop
in
mov
outsb
push
imul
add
ds
ffreep
xchg
adc
in
inc
mov
inc
adc
add
sbb
scas
xlat
xorb
inc
mov
cmp
lods
dec
mov
mov
popa
out
ss
push
imul
xchg
arpl
lret
jle
xlat
mov
xchg
scas
push
fisubrl
loopne
movsb
mov
adc
sbb
dec
and
fdivl
dec
cmp
aas
gs
sahf
out
lea
cli
imul
rorl
or
pop
dec
adc
or
ret
ja
pop
jne
or
cmp
movsl
sbb
pop
fwait
add
cmp
mov
aam
ret
out
mov
and
cmc
mov
and
add
mov
int3
je
sbb
inc
icebp
adc
lods
add
push
push
mov
inc
mov
inc
out
mov
pushf
into
mov
or
and
cltd
lods
leave
mov
fistpll
insb
inc
test
mov
cltd
push
or
mov
mov
shll
push
loopne
stc
jbe
cmp
out
int3
popa
add
cmpsb
xchg
sbb
iret
lock
and
lret
adc
in
notl
je
xchg
test
pop
xor
sbb
pop
adcl
pop
jbe
out
or
daa
push
jnp
jb
mov
cli
ds
xchg
int
negl
inc
push
faddl
mov
lods
and
orb
lock
rcr
and
dec
adc
mov
outsl
cmp
add
enter
mull
and
mov
xlat
mov
test
mov
add
sbb
xchg
and
sbb
jnp
inc
std
repnz
mulb
inc
pop
icebp
xchg
sti
sub
mov
dec
cmc
pop
in
pop
je
cmp
in
sbb
or
rclb
insb
rolb
sbb
div
jb
cmpsb
addl
xchg
stos
push
imul
and
cltd
xor
push
repz
outsl
xchg
cltd
js
add
scas
inc
and
pop
insb
push
xor
adc
int
push
push
mov
ret
ss
add
xchg
shl
test
mov
push
and
inc
std
pusha
sub
repnz
add
fstpt
jbe
mov
xchg
sub
scas
outsb
es
insb
dec
jne
or
pushf
lods
inc
pop
bnd
pop
les
cmpsl
lods
sbb
mov
sbb
push
push
lret
inc
push
repnz
loop
add
cmovnp
mov
mov
or
adc
cs
loop
push
clc
cmp
adc
shll
das
popa
or
fmulp
je
ja
imul
dec
sub
in
out
mov
jno
mov
dec
jg
sbb
jnp
les
filds
addl
sub
mov
in
rolb
lret
lea
push
mov
jge
cmp
sbb
push
push
push
add
inc
inc
addr16
aaa
push
xchg
lds
daa
mov
ljmp
shrb
cmp
xchg
test
mov
dec
int3
insb
or
cmc
mov
and
aam
iret
icebp
and
mov
mov
loop
scas
pop
imul
xor
xor
mov
inc
loopne
fcos
fsubl
mov
pop
jns
lcall
mov
aas
fsubr
push
add
pop
fdivrs
sub
pop
cmp
xchg
clc
daa
push
rcrl
add
jb
ret
loope
xchg
das
hlt
jne
inc
test
vprotw
push
cmpsl
push
mov
and
sbb
dec
leave
or
sub
and
test
mov
outsb
mov
mov
push
loope
mulss
out
mov
enter
mov
in
rcr
sarb
add
mov
mov
push
cmp
lock
cmp
stc
and
fisubrs
cld
pusha
lds
inc
popa
cld
dec
mov
or
dec
jne
test
jb
mov
push
aad
test
aam
mov
pop
fdiv
shr
in
inc
lds
testl
or
fwait
mov
push
cmp
aad
push
or
xchg
push
mov
aas
inc
pop
fimull
inc
pushf
jecxz
pushf
add
mov
cmpb
sbb
add
cmp
shll
mov
das
mov
dec
stos
loope
notl
xchg
inc
add
mov
and
int3
inc
mov
add
ret
pushf
mov
cwtl
int3
mov
fistps
not
ror
repnz
fnstenv
in
pop
xlat
cld
aaa
jg
repz
std
das
addr16
lcall
push
arpl
inc
mov
in
xor
shll
in
mov
cmp
push
xchg
xchg
outsl
orl
adc
stc
adc
call
jmp
pop
rolb
es
push
mov
pop
hlt
fs
stos
mov
aaa
push
xorl
dec
out
lods
mov
xor
mov
inc
cli
pop
jmp
inc
call
aad
setne
imul
adc
mov
sub
shrd
pop
inc
dec
add
cld
hlt
add
inc
mov
pop
leave
jmp
cmp
sub
cmp
push
in
test
enter
sar
pop
repnz
es
lds
je
in
jae
pop
mov
cmpsl
rcl
sbb
adc
in
jge
cmc
inc
mov
arpl
push
call
decb
sub
or
cmp
dec
aad
sbb
scas
push
xchg
mov
or
fmuls
test
sub
mov
mov
dec
loop
cwtl
lret
xor
movsl
inc
stos
outsb
inc
push
lahf
adc
dec
fsubr
rclb
ss
jge
jg
popf
push
out
lret
ret
loop
jne
inc
mov
or
test
or
cwtl
mov
daa
xchg
pop
push
sub
js
fcomp
sti
or
decl
shll
addr16
roll
fdivs
push
std
or
and
test
rolb
stc
pushf
shlb
ret
decl
out
fmuls
cld
test
inc
dec
dec
mov
jbe
fldt
push
data16
add
inc
xlat
sub
addl
imul
cltd
int
mov
pop
jp
scas
xchg
je
ds
aam
adc
adc
mov
subb
inc
and
dec
xor
fcoml
jmp
or
scas
rorl
add
xchg
out
mov
cmp
xchg
inc
hlt
lahf
push
cmp
mov
rcrl
dec
icebp
cmp
jg
ret
xor
fwait
adc
mov
sbb
sbb
sarl
push
fs
cmp
push
fwait
test
ss
push
sub
push
pop
push
pop
jo
pop
movsb
repnz
mov
sub
in
jg
fisttps
std
sub
pop
mov
adc
int3
sbb
or
ret
mov
xlat
add
dec
inc
lret
orl
std
inc
mov
or
and
jle
inc
in
stos
pop
and
pop
out
inc
daa
or
imul
jb
mov
push
pop
pop
or
inc
stos
mov
stos
jb
mov
or
xchg
sbb
outsb
push
dec
dec
xchg
dec
dec
outsl
scas
inc
addr16
rorl
xor
mov
aaa
mov
jg
add
lods
or
push
adc
lcall
sub
je
mov
stos
xor
cs
mov
or
mov
pop
sbb
sbb
inc
test
sub
sahf
ljmp
inc
movl
mov
pop
dec
add
pop
cmp
stos
add
jns
std
cltd
in
xchg
into
dec
js
pop
sti
repz
push
repz
scas
lret
test
mov
mulb
mov
mov
cmc
stc
adc
nop
pop
sbb
sbbl
add
xor
cmpl
std
sub
xchg
mov
jbe
in
cmpsl
rcrl
push
call
cmp
shrl
xor
mov
cltd
jo
call
popf
mov
dec
dec
and
mov
insb
sbbl
jnp
mul
in
mov
adc
push
xor
ljmp
ret
pop
xor
dec
movups
inc
mov
jbe
xor
sub
sub
clc
pushf
repz
and
push
hlt
inc
iret
fwait
aas
addr16
mov
dec
cmpsl
push
stc
jecxz
or
bound
stos
mov
arpl
pusha
push
ficomps
inc
push
mov
imul
test
jle
dec
sub
cmp
pop
out
leave
pop
xor
inc
ljmp
and
push
xchg
in
sub
or
ret
enter
mov
addr16
xlat
mov
adc
inc
js
inc
sbb
push
xacquire
xchg
cmc
rol
jne
mov
pop
into
scas
daa
test
jb
pop
in
test
mov
lods
adc
pop
popf
cmpsl
dec
loopne
and
scas
sub
fsubrs
outsb
push
shrb
adc
stc
inc
testl
dec
adc
pushf
popa
and
and
adc
lret
mov
loop
ljmp
lods
jne
mov
or
sbb
dec
lcall
mov
mov
xchg
xchg
in
and
sbb
inc
and
ja
sub
mov
dec
sbb
cmp
sbb
dec
fiaddl
insb
popf
mov
aad
ret
add
mov
cmp
add
nop
dec
cmp
mov
out
sub
addr16
test
xor
adc
lods
add
roll
sbb
jle
lods
mov
loope
mov
xchg
daa
dec
jecxz
cmp
jmp
rclb
mov
xchg
in
lret
icebp
inc
into
cmp
fstl
cs
shr
and
push
int
fstpl
sbb
addr16
lss
imul
cmc
or
dec
mov
cs
in
or
mov
out
push
enter
outsl
std
mov
mov
and
push
test
mov
or
sbb
mov
mov
xor
sub
test
out
lods
inc
pushf
push
or
sbb
sahf
iret
test
mov
adc
pop
mov
mov
movsl
add
out
push
iret
rcrl
out
into
and
xorl
sbb
dec
mov
fwait
mov
sbbl
mov
sub
push
xlat
mov
cmp
movsb
mov
mov
sahf
repnz
ljmp
sbb
mov
mov
mov
ret
add
stos
in
adc
test
xor
push
js
push
enter
jecxz
repz
loope
cmpsl
cmpsl
fimull
stos
push
call
fldcw
mov
cmp
xor
push
mull
sti
jno,pt
mov
or
pushf
ljmp
sub
mov
loopne
sbb
cmp
jle
mov
push
mov
lods
mov
sarl
mov
cmpsb
cmp
ret
div
mov
outsb
imul
jo
dec
sahf
mov
or
xor
fidivs
cld
jmp
sub
pushf
fisubrs
sbb
popa
call
sub
ja
and
movsb
pushf
mov
mov
stos
mov
repnz
mov
out
jp
pop
icebp
lds
xlat
sub
mov
mov
outsb
imul
push
xor
cmc
aas
mov
mov
lea
fistl
or
ss
shlb
clc
add
push
or
add
shr
jbe
mov
fimuls
and
push
push
lahf
jb
filds
outsb
pop
iret
xchg
fs
xor
cmp
jle
repz
xor
jge
hlt
mov
ret
out
lret
or
and
out
loope
imul
fdivp
push
ret
fcomi
sti
pop
pop
mov
push
aad
inc
mov
or
push
xchg
aaa
and
test
cmp
dec
fcomp
subl
ret
cmp
mov
push
dec
ja
xchg
out
arpl
xchg
mov
pop
add
shl
cli
insb
sarl
repz
clc
inc
shll
mov
gs
cmpl
ds
adc
jae
xor
or
int
pushf
mov
lret
cltd
gs
fs
cld
xchg
les
mov
in
xor
into
stos
pop
jbe
daa
adc
inc
cmpsl
mov
cmp
cli
das
lods
adc
mov
stos
lock
mov
push
push
pop
imul
in
mov
xor
mov
ficoms
mov
mov
mov
jp
in
inc
test
lahf
ljmp
and
push
in
call
and
pushf
out
aas
push
xchg
les
aas
add
cli
and
push
xchg
fstpt
add
inc
xchg
xorb
test
jp
stos
sbb
adc
std
adc
clc
imul
pusha
or
imul
aam
loope
in
mov
fistpl
bound
xchg
lcall
push
mov
lret
mov
stos
outsb
adc
sbb
jl
adc
repz
pusha
pop
std
repnz
mov
pop
jb
test
clc
push
cmpsl
cmc
xchg
xor
pop
pop
sbb
cld
je
mov
cmp
pop
leave
and
pop
adc
test
lea
mov
dec
fsubl
push
adc
cltd
and
inc
outsl
cmp
jb
lods
inc
add
cmp
pop
fidivrl
fistpll
dec
loope
cmp
arpl
cmpsl
or
cmp
popl
sahf
cld
xchg
and
addr16
int
stos
push
jnp
mov
jmp
push
push
mov
xchg
dec
ret
xor
push
lret
and
sbb
sub
pop
mov
xchg
and
push
add
lcall
fistpll
sbb
mov
xchg
adcb
in
xchg
rorb
mov
out
daa
jns
fldl
ds
dec
sarb
daa
sarb
fsubrs
adc
gs
inc
xchg
mov
cli
push
fistpll
rol
cmc
popa
mov
clc
imul
pop
cmpsl
push
sbb
aas
fiaddl
out
cmpsb
mov
scas
xor
mov
loop
ljmp
fs
testl
xchg
dec
imul
and
sbb
ret
inc
inc
fs
imul
in
cmp
js
xchg
movsl
cltd
cs
ss
xor
pop
sub
lods
sub
dec
lea
data16
push
jae
or
dec
mov
popa
test
das
pop
ss
push
cmp
dec
dec
int3
into
cltd
jns
inc
add
daa
xor
fimull
nop
jle
repz
and
mov
stos
jbe
xor
pop
ss
dec
mov
hlt
mov
and
pop
insb
push
je
cmp
jb
jge
aam
sbb
and
mov
add
inc
xchg
xor
inc
popf
lcall
inc
jb
cmpsb
jmp
mov
enterw
inc
add
out
subl
push
mov
push
repz
mov
lods
jnp
mov
pop
popf
sub
cwtl
mov
jns
mov
gs
pop
rcrl
mov
aad
mov
stos
mov
hlt
outsb
loope
stos
pop
lret
adc
mov
xchg
xchg
jmp
mov
in
mov
jmp
lock
xchg
mov
mov
movw
or
jmp
idiv
shll
pop
or
nop
cmpsb
lret
cld
sbb
ret
mov
xor
scas
aam
lahf
dec
inc
add
add
sub
sub
mov
pop
stc
outsb
mov
cld
mov
xchg
in
clc
lahf
lahf
fisubl
mov
cmp
push
adc
xor
aad
xchg
xor
dec
pushl
mov
adc
std
jmp
push
sbbb
pop
cmc
pop
xchg
fwait
pusha
jb
jmp
inc
notb
add
push
loope
mov
pushf
arpl
push
xchg
adc
and
sarb
div
mov
imul
into
inc
adc
pop
xchg
sbb
ds
fmull
xor
sbb
sbb
js
fldenv
ds
mov
pop
mov
jb
test
cmp
arpl
nop
nop
push
pop
inc
aad
lds
mov
adc
mov
fimuls
cld
lret
incb
adc
xchg
arpl
mov
adc
in
fdivrl
pop
xor
lock
out
jg
jge
mov
mov
ljmp
push
push
scas
les
xchg
fmul
into
pop
pop
or
adc
pop
push
jb
rorl
arpl
clc
lea
pop
test
fwait
insl
fildll
dec
mov
jne
dec
shrl
imul
inc
mov
xor
ljmp
out
stos
bound
mov
loope
xchg
sub
fwait
adcl
cmpsb
and
ficompl
ds
imul
and
shrb
out
inc
out
mov
jae
push
filds
fwait
shrb
shll
mov
xor
lcall
aaa
sub
lret
xchg
sub
xlat
xorb
jle
pop
rol
add
jbe
vpsraw
jae
mov
shrb
flds
rol
inc
mov
cli
test
push
mov
adc
inc
repnz
sbb
lods
sbb
imul
hlt
testb
xor
bound
rorb
jle
negb
xchg
jp
or
pop
data16
push
addr16
lds
inc
nop
stos
pop
cmpsb
mov
fdivl
mov
es
icebp
int
out
inc
lcall
pop
rorl
mov
dec
xorb
cmpsb
xorl
ja
test
mov
ret
fidivrs
mov
ss
inc
sbb
push
call
stos
pop
inc
mov
pop
out
enter
inc
mov
push
sub
jnp
ljmp
in
in
jno
mov
and
mov
imulb
sbb
ja
fdivrl
out
loop
cli
ljmp
inc
out
icebp
lods
icebp
pop
scas
jae
ds
add
xchg
cltd
in
pop
dec
xchg
mov
adc
std
jecxz
cmp
sbbl
xchg
push
arpl
movsl
push
aad
push
mov
push
sub
or
adc
jno
fs
and
shll
pop
or
cld
je
dec
cmc
in
add
mov
and
scas
sub
mov
xlat
divl
xchg
adc
jb
jnp
popf
push
xchg
out
jecxz
and
mov
ss
test
movsl
mov
test
push
mov
call
mov
data16
pop
sbb
daa
and
lock
sub
cmpsb
push
xchg
icebp
and
or
insb
or
pop
fldenv
adc
dec
inc
shlb
sti
add
jl
data16
and
pop
arpl
into
mov
mov
iret
jl
adc
mov
jnp
and
cwtl
dec
lock
pop
pop
test
adc
mov
pop
pop
inc
and
repz
adc
mov
repz
dec
mov
cmpsb
jbe
xor
pop
mov
sahf
mov
sub
dec
mov
andb
push
hlt
xchg
rcll
nop
movsl
loope
xor
mov
xor
loopne
pop
es
push
sub
adc
popa
xchg
add
xchg
jge
aas
xor
pop
add
mov
dec
lea
hlt
in
push
xor
fmul
sarl
sysenter
jbe
xchg
add
daa
out
ljmp
pushf
dec
jbe
loop
sub
and
repnz
inc
pop
jl
sub
add
jge
call
mov
mov
sub
push
in
cmp
mov
mov
stos
sbb
add
fildll
in
adc
leave
loope
and
mov
mov
mov
xchg
repz
cmp
mov
or
add
mov
mov
inc
mov
sbb
cli
stos
xor
lea
inc
mov
call
add
popa
out
or
pushw
adc
push
loop
cmc
addl
nop
or
adc
pop
mov
jns
cmc
push
or
orb
rep
lods
push
pop
push
mov
leave
outsl
pop
mov
add
fwait
push
stos
aaa
push
les
lahf
xchg
mov
or
ja
leave
mov
pop
out
les
adc
ret
jl
mov
jecxz
dec
sbb
mov
xor
fs
aam
and
aas
test
je
test
mov
stos
dec
push
into
lods
add
push
xchg
int3
xchg
inc
jns
push
add
push
std
imul
insl
adc
add
xchg
mov
inc
push
adc
sti
fnstenv
filds
sub
fwait
addb
sbb
das
xchg
mov
jnp
test
cld
inc
fstps
add
push
popf
jge
push
push
fcoms
mov
jns
bswap
int3
shrb
cwtl
pop
fistpl
aam
xchg
sub
ret
fmuls
and
ja
loopne
sub
aas
xor
movsl
adc
xchg
or
loopne
sub
inc
cwtl
xlat
sti
inc
or
mov
nop
sbb
movsl
scas
test
movsl
inc
jo
cli
push
pop
bound
cmp
pop
xor
dec
sbb
pop
mov
arpl
mov
xchg
out
iret
inc
or
lds
imul
iret
mov
cmp
mov
cli
push
rcrl
and
mov
jmp
ljmp
lcall
push
sub
lock
add
sar
std
inc
sbb
push
inc
incl
mov
mov
mov
inc
mov
xor
and
pop
mov
mov
outsl
movsl
inc
inc
xchg
in
mov
jge
cmpsl
ficomps
push
faddl
cmp
shl
push
dec
cmp
xchg
pusha
fsts
and
push
rcrb
roll
repnz
mov
jl
iret
icebp
adc
aad
jmp
sub
dec
push
push
mov
mov
push
dec
cmpsb
xchg
add
add
and
ret
cmpsl
jnp
adc
aam
mov
or
mov
test
jmp
inc
stos
xor
outsl
mov
loopne
and
xor
in
lods
mov
lock
fsubl
sbb
into
push
cmp
mov
lahf
cmp
dec
xor
test
sub
inc
jecxz
pop
lret
xor
out
fstps
lds
mov
pop
xchg
ds
xlat
repnz
pop
inc
mov
js
cmpsb
test
jle
imul
mull
stos
xchg
test
out
jns
mov
cltd
bound
clc
adc
mov
pop
xchg
pop
jecxz
rorb
imul
and
test
imul
icebp
and
mov
js
adc
or
mov
jb
out
mov
xor
jmp
sub
fcoms
adc
inc
mov
es
jbe
push
icebp
adc
scas
push
pop
lret
popa
pop
cmpsl
sbb
cmp
xor
jecxz
cmp
or
je
xor
push
cmpl
pop
pop
jle
mov
mov
xchg
out
addb
lahf
sub
cmp
fmul
xor
mov
and
shrb
or
sub
push
sti
out
jmp
push
xor
dec
jp
mov
out
ljmp
rcll
mov
dec
sub
in
imul
lcall
insl
push
adc
pop
into
xchg
icebp
es
mov
sub
jnp
cltd
pop
popa
mov
push
cmpsl
aaa
mov
loopne
sbb
mov
xor
out
icebp
or
dec
mov
push
out
pop
push
push
jbe
adc
xchg
cltd
inc
pop
pop
bound
out
cwtl
xlat
mov
sbb
fsubrl
fimuls
out
cmp
int3
popa
lods
test
call
mov
in
inc
and
xor
aad
fisttpl
sbb
iret
cmp
pop
push
stos
sahf
push
jp
dec
insb
cmc
pop
xchg
cmpsl
add
cmp
and
push
push
aam
shlb
adc
sbb
xchg
daa
fxch
popa
xchg
stos
stos
mov
cmpsl
out
push
and
lods
test
xor
push
lahf
push
lds
inc
xlat
outsl
add
pusha
stos
ds
loop
lock
sub
mov
add
movsl
mov
dec
xchg
inc
out
cmp
push
xor
in
mov
lds
testl
mov
jno
sbb
push
dec
inc
xchg
pop
inc
leave
sar
pop
test
lcall
ret
push
mov
mov
test
stos
pushf
loopne
cmc
jno
adc
sti
push
xor
stos
xor
scas
out
push
aad
jbe
adc
fs
push
mov
lahf
aaa
pop
push
cmp
rorl
ret
sar
pop
or
mov
push
xchg
sbb
out
popf
int
lea
out
pushf
pop
jb
or
mov
sahf
cmp
les
adc
xor
cli
loopne
xor
hlt
or
mov
sub
lcall
sbb
jmp
jno
jmp
aas
punpckhwd
cmpb
ficomps
stc
lock
lret
sbb
add
loopne
push
aas
pop
pop
cmp
ja
cmp
stos
mov
shr
xchg
ljmp
xchg
into
and
pop
cmp
push
sbb
mov
rorb
mov
sti
into
pushf
mov
out
outsb
and
mov
lahf
fwait
icebp
mov
adcb
loop
add
js
and
mov
add
cwtl
push
mov
and
add
ss
inc
hlt
add
inc
stc
mov
int
aas
cmpsl
outsb
aad
sbbl
fbstp
orl
pusha
fadds
stos
mov
push
push
and
int3
and
icebp
lock
testb
pop
les
pop
stos
and
or
add
jae
or
or
mov
enter
adc
pop
arpl
inc
xor
leave
and
popl
fldcw
or
sbb
mov
mov
mov
dec
cmp
ret
int
inc
adc
push
dec
mov
xchg
ja
leave
lods
sub
vmwrite
fisubl
xchg
push
cld
pop
xchg
jle
add
adcl
xor
inc
sub
es
scas
xchg
dec
mov
sbb
xchg
push
in
mov
xchg
adc
adc
sub
lret
cs
cli
test
inc
arpl
jmp
insb
sub
mov
bound
lcall
mov
push
scas
dec
inc
sahf
rcl
jg
push
fildll
scas
xchg
jl
ljmp
xor
cmp
repz
and
insb
scas
cmp
fs
push
mov
cld
imul
cs
mov
dec
cmpps
stos
mov
aaa
push
sbb
adc
jecxz
mov
xchg
sbb
push
jno
lret
mov
xchg
mov
mov
or
pop
add
jno
xchg
mov
scas
jg
cltd
mull
pop
add
leave
adcl
xchg
mov
lds
shlb
cwtl
movl
inc
aad
divb
push
insb
not
rcl
jb
addb
push
jge
inc
xchg
das
mov
iret
xchg
cmp
push
call
cmp
scas
outsb
pop
and
inc
inc
leave
sbbl
pop
dec
fwait
aaa
int
jb
mov
push
sbb
jge
sbb
add
sub
stc
add
sub
pushf
jns
popa
xor
aas
adc
bound
sti
jbe
jl
icebp
ss
rolb
aam
ror
jae
ds
out
jmp
or
xchg
mov
sub
jnp
scas
adc
stos
mov
push
mov
scas
fisubrl
cmpsl
and
dec
clc
cmpsl
pop
in
mov
loopne
int3
mov
cld
mov
sub
movsl
cmpb
lcall
ss
in
mov
cwtl
jle
mov
negb
push
daa
daa
shufps
pop
lret
sbb
ja
out
cwtl
ss
sbb
cmp
int3
daa
or
sub
aad
push
pop
sub
and
xor
mov
mov
add
jecxz
sub
lods
push
inc
mov
add
aas
into
inc
andb
push
shrb
jle
jge
lret
adc
lock
ret
inc
cltd
jp
sub
sbb
dec
repz
pop
ror
xor
cs
adc
inc
int
sbb
rorb
mov
jns
xchg
ss
xchg
call
adc
add
insb
inc
dec
sti
mov
out
push
adc
sarl
stc
mov
mov
sub
cltd
pop
cmpsl
inc
push
add
pusha
arpl
add
add
push
aam
xor
or
mov
stos
xor
mov
xchg
mov
enter
test
jns
or
in
aad
sub
xchg
sti
mov
leave
or
inc
add
lret
push
jbe
adc
mov
and
cltd
rcrb
or
into
hlt
pop
add
mov
adc
xor
sub
pusha
sti
and
lret
lock
lea
pop
adc
lcall
mov
les
adc
xchg
cld
sub
push
jo
push
clc
imul
loope
pop
fwait
icebp
push
enter
push
xchg
cmpsb
dec
int3
cmpxchg
cmp
insl
and
add
lock
inc
out
fsubrs
lds
dec
and
popa
mov
inc
scas
mov
dec
and
testb
jne
and
add
daa
inc
mov
in
roll
ror
fisubs
sahf
xchg
je
mov
sbb
jo
cld
decl
pushl
cld
mov
add
add
negl
mov
add
incl
inc
in
cmp
jecxz
push
into
imul
adc
stos
adc
sub
mov
cmp
jl
add
lock
cs
icebp
addb
fidivs
xor
push
xor
fwait
jbe
cltd
adc
test
stos
push
in
pop
stos
mulb
cmp
scas
call
xor
mov
cmp
inc
test
ret
lea
fbstp
scas
outsl
push
jne,pt
aaa
sbb
cmpsb
inc
fimull
jecxz
cmp
ss
add
out
shl
sbb
lahf
jecxz
lds
adc
sub
mov
push
mov
fucomip
aas
cmc
scas
mov
ret
dec
mov
or
repnz
dec
repz
insl
mov
or
leave
into
nop
mov
cmpsb
mov
or
lods
test
jp
movsl
sbbl
sbb
out
gs
mov
shll
cmpsb
push
adc
pop
push
mov
or
lret
jne
pusha
adc
sub
add
push
and
jg
leave
add
scas
mov
sbb
add
pop
push
mov
and
pusha
add
push
shll
idivb
inc
inc
add
insl
sti
push
push
sub
arpl
stos
repz
cmp
adc
ret
inc
in
push
pop
lret
and
push
sbb
dec
les
adc
jnp
cmc
sub
sbb
inc
jno
jo
dec
out
clc
popa
cmp
and
sub
sbbl
push
inc
icebp
das
inc
adc
stos
js
jg
or
aam
push
sbb
push
popf
fmuls
cmp
mov
ss
adc
mov
jae
or
adc
xchg
fwait
into
cmp
fnstsw
call
push
jl
cwtl
in
dec
pop
sub
inc
dec
sbb
mov
sub
mov
subb
sbb
andb
mov
ret
test
sub
imul
or
cltd
mov
push
push
cmc
mov
arpl
jmp
fsubs
dec
pop
mov
adc
jle
js
sub
lret
add
roll
and
jns
cmp
jmp
imul
mov
stc
fsts
xor
aaa
les
cmc
cmp
cmpsl
icebp
xchg
push
adcl
nop
cwtl
adc
sbb
jp
es
cmpsb
sub
pop
jle
stos
push
inc
cmp
dec
aaa
outsl
lods
mov
adc
gs
in
and
insl
mov
lret
pushf
mov
loopne
scas
es
fcoms
stos
xor
or
inc
mov
scas
loope
sub
dec
xchg
ret
or
mov
loop
lcall
lret
cmp
out
jg
pop
aam
mov
sti
dec
rcr
jmp
pop
add
fs
cmp
in
fsubl
ficoml
cmc
popa
inc
mov
inc
lds
sub
push
cmpsb
cmpsl
jge
mov
pop
mov
mov
sbb
xchg
jae
mov
pusha
movsl
sub
mov
push
and
or
cmpsl
jecxz
ficoms
xor
jo
rdpmc
les
aaa
push
or
pusha
insl
cmp
arpl
js
mov
repnz
stos
or
lret
pop
inc
mov
out
push
js
call
sub
and
loop
pushf
jle
daa
adcl
add
pop
movsb
cmp
adc
adc
jnp,pt
mov
jp
enter
icebp
pop
movsl
icebp
outsb
pushf
outsl
rep
outsb
clc
and
mov
das
mov
push
fisubl
sub
sub
xor
call
push
nop
insl
test
lret
loopne
sbb
aas
fldt
pop
adc
adc
lcall
test
push
mov
jg
jge
orb
mov
add
cmp
stos
jb
add
addr16
hlt
leave
push
mov
sub
jle
shlb
push
outsl
cmp
rcrb
mov
in
test
xor
xchg
out
mov
mov
fdivl
js
fstps
pop
aam
sub
pop
fwait
or
and
mov
imul
inc
aaa
sub
ficompl
rolb
into
pop
jae
dec
add
push
and
pop
dec
aad
or
jns
lcall
icebp
aad
mov
pushf
stos
loope
mov
adc
nop
fwait
jbe
clc
aam
sub
sbb
xor
ss
add
pop
push
pop
adc
je
in
or
xchg
sbb
push
pushf
lods
test
sbb
mov
imul
ret
jb
push
mov
dec
dec
dec
sbb
pop
jne
inc
cmpb
mov
inc
loopne
scas
enter
xchg
inc
cmc
sbb
lahf
ljmp
rorb
xor
rolb
and
dec
mul
scas
test
sbb
xor
push
daa
sti
cmp
and
in
pop
ret
mov
cltd
idivb
jo
inc
fstps
add
lods
dec
or
jb
cwtl
jae
bound
sbb
addb
push
sti
or
mov
xchg
mov
sub
fucomi
jmp
or
mov
inc
push
inc
fsub
and
cmpsb
push
addr16
mov
sub
dec
ljmp
leave
mov
pop
mov
mov
sbb
sbb
imul
dec
js,pt
fisttpl
push
movl
push
cmp
lret
fidivl
test
mov
adc
or
or
jle
or
jmp
inc
in
or
mov
pop
fdivrl
aam
or
frstor
movsb
jmp
mov
mov
addr16
push
cltd
int
sbb
and
lea
mov
dec
pop
and
out
fdivr
sti
xor
dec
ss
es
jnp
test
imul
or
rorl
lods
xor
xor
shll
mov
adcb
loopne
push
call
lods
sub
jne
out
inc
xchg
jmp
jno
ror
lds
hlt
jge
fcomip
fisubrl
add
loopne
es
aad
jnp
pusha
loop
les
shrl
test
jbe
mov
fcomps
push
jae
add
scas
mov
mov
insb
fdivrs
push
add
andl
data16
arpl
xor
mov
xchg
dec
sub
push
jp
daa
pushf
xchg
adc
inc
jns
lock
dec
xchg
jle
push
mov
and
mov
test
imul
in
rcrl
and
xor
and
xchg
lods
scas
xchg
lret
bound
ror
dec
lcall
sar
ja
scas
jo
repz
mov
mov
in
dec
into
cmp
stc
sti
testl
add
aas
inc
ds
dec
or
sub
fistpll
adc
pop
dec
lock
aad
out
cltd
gs
shr
aam
std
into
mov
sahf
rolb
xchg
mov
or
dec
jmp
fsubs
fsubs
sub
imul
and
pusha
std
mov
adc
xor
sbb
dec
fidivrs
rcrl
sub
jns
jo
stos
jmp
stc
adc
cmpsl
mov
push
ret
adc
mov
fsubl
pop
lret
sub
enter
cmpsb
loopne
cmp
xchg
jne
in
popa
sub
mov
mov
and
icebp
push
cmpsb
leave
mov
lds
and
leave
les
push
adc
jb
fdecstp
adc
pop
out
ja
jle
and
pop
rorl
arpl
push
or
pop
lret
call
test
sub
stc
fimuls
ret
in
scas
scas
mov
cld
xchg
sqrtps
inc
nop
dec
sub
pop
adc
test
and
jmp
pop
jnp
sbb
mul
rcll
jae
repz
clc
popa
clc
mov
push
jmp
push
pop
jne
cmp
clc
add
int3
jbe,pt
out
in
mov
adc
push
cmp
movb
ss
xchg
xchg
ja
cmp
rorl
mov
add
ljmp
xor
inc
jmp
add
xchg
cltd
aas
je
jnp
mov
jmp
subl
cmp
push
sbb
and
dec
pop
push
sbb
dec
stos
pop
jno
sub
cwtl
mov
clc
xchg
shll
sti
add
xchg
pop
call
adc
in
gs
jno
fsubl
fisubl
mov
popf
inc
xor
or
xor
scas
mov
scas
mov
insl
add
sarb
xchg
jb
lea
into
cltd
jae
aam
mov
loope
fimull
std
enter
jno
mov
outsl
jne
xor
xor
xorl
push
inc
aad
les
cld
ds
dec
xchg
push
imul
out
or
mov
add
mov
dec
mov
push
push
cmp
sbb
jg
int
jmp
fwait
pop
dec
ret
xchg
push
jge
mov
cmpsb
pop
aam
or
or
in
mov
or
idivl
dec
das
sub
pop
adc
cmp
loop
inc
inc
and
ret
je
jbe
pop
pop
jno
scas
cwtl
nop
lods
add
inc
cmp
pop
inc
sub
test
push
cmp
cli
cmp
push
mov
jp
dec
pop
gs
shrb
sub
insb
inc
and
loope
pop
pop
mov
sbb
xchg
mov
adc
jecxz
xchg
popf
xchg
imul
inc
stos
adc
fs
adc
mov
dec
hlt
js
xchg
ds
sub
xchg
call
jmp
clc
adc
je
xchg
fldt
lret
xchg
ficompl
adc
push
cmp
ss
jl
js
jp
jp
sbb
sub
test
dec
mov
jnp
sub
sub
rolb
xor
push
cmp
fsubr
add
mov
in
jns
dec
inc
xchg
andl
mov
lcall
add
popa
js
mov
push
fldcw
jle
sub
adc
stc
inc
scas
add
inc
dec
cltd
lods
hlt
add
call
xchg
sbb
jmp
lea
arpl
adc
xchg
repnz
mov
cmp
mov
xchg
cld
repnz
xor
inc
mov
arpl
pushf
pop
inc
pavgb
cmp
mov
dec
mov
outsb
sbb
bound
lods
adc
mov
sbbl
cmpsl
pushf
insb
add
in
jmp
lds
pop
sbb
xchg
enter
mov
shrl
push
adcl
cltd
push
mov
stos
mov
or
mull
push
pop
lea
sub
mov
cmp
les
mov
popa
test
pop
xchg
inc
dec
and
movsl
mov
mov
imul
jno
loopne
pusha
mov
dec
pop
aas
or
imulb
out
add
cmp
jecxz
sub
rcrl
rcll
iret
or
inc
faddl
ljmp
mov
in
push
sub
sub
cmp
inc
sahf
sub
shrl
fistpl
mov
nop
inc
jl
std
adc
jle
jnp
xchg
cmp
mov
xor
jns
sbb
and
hlt
adc
loopne
inc
in
outsb
sub
cwtl
or
push
add
fcmovne
mov
imul
mov
rorb
sub
div
mov
aaa
lods
xor
out
scas
ja
popa
jo
sbb
enter
mov
cltd
cmp
push
mov
js
loop
adc
adcb
mov
scas
lods
push
jbe
sub
jg
add
fisttpl
mov
jns
lahf
jno
not
mov
addr16
cwtl
in
or
mov
out
push
imul
loope
fsubrl
stos
stc
lcall
and
dec
dec
sbb
jp
popf
andb
cmpsb
jle
cmp
fldcw
pop
or
cmp
pop
xor
aas
dec
xlat
jge
and
and
sbb
push
jecxz
sbb
test
shrl
add
aas
outsb
push
fistpll
lods
xor
jno
add
cmp
jnp
js
inc
jo
hlt
mov
push
fstpl
add
in
mov
jne
cmp
lock
xchg
sbbb
in
add
outsl
jmp
bound
into
push
sub
test
push
inc
lahf
pop
scas
popf
xor
sbb
out
pushf
mov
dec
mov
jne
clc
mov
mov
mov
rcll
push
int3
sahf
je
adc
inc
pop
in
mov
lods
jp
xor
test
outsb
and
inc
dec
pop
and
fstpt
popf
mov
and
or
repnz
bnd
fcmove
mov
adc
pop
mov
insl
cmp
ret
inc
stos
jp
cmp
or
fwait
cmpsb
add
or
adc
sub
xor
ds
int3
or
inc
sbb
add
repnz
test
mov
mov
push
mov
jmp
or
cmp
cmp
andb
in
mov
loopne
in
into
push
mov
mov
push
adc
leave
jno
mov
pop
arpl
jbe
sub
cmc
in
push
add
popaw
addr16
scas
sbbb
mov
pusha
dec
sub
lds
mov
sbb
fxam
adc
jle
sbb
ja
cmpsl
mov
xchg
int
insl
shrb
xchg
jp
cmpb
fwait
sarl
paddusw
jge
nop
sbb
aam
and
inc
out
outsb
push
sub
mov
pop
mov
pop
sbb
push
cmp
add
movsb
cmc
loop
das
mov
add
in
jle
sub
insb
or
aam
mov
icebp
or
outsb
cltd
sbb
fmull
iret
dec
inc
rorb
roll
ljmp
hlt
xchg
sub
stc
xchg
jbe
xorl
mov
inc
mov
nop
mov
pop
adc
sbb
sbbl
icebp
adc
popf
aam
adc
lcall
xor
lock
push
bound
into
dec
mov
pushf
je
inc
jns
xor
add
and
clc
lea
mov
aam
les
int3
fstp
pop
xor
dec
loope
clc
fistpll
dec
pop
ds
inc
test
loop
inc
jno
mov
xchg
jno
je
jecxz
push
add
xor
push
push
xor
shlb
jecxz
mov
notb
dec
arpl
scas
enter
xor
inc
sub
cmc
dec
sub
imul
ja
fisubrl
fnsave
mov
int3
dec
adc
arpl
jle
sub
pop
int3
mov
or
pop
add
inc
dec
pop
pop
xorl
adc
cltd
mov
cmp
pop
cltd
popa
add
imul
mov
cwtl
aas
xor
rclb
xor
out
pusha
movsb
popf
add
daa
pushf
lret
mov
sbb
loop
test
in
jno
repz
inc
inc
out
jp
shlb
cmp
inc
cmp
test
icebp
mov
push
daa
xchg
mov
and
outsb
push
loopne
shrb
jmp
ja
rolb
jae
int
fs
insb
add
fsubp
push
rcrl
dec
test
fwait
inc
mov
int
shufps
jle
test
cs
shl
divb
adc
popa
lds
divl
stc
adcb
sbb
mov
sbb
shll
dec
cmp
sbb
mov
in
mov
adc
mov
movsb
dec
das
repz
mov
outsl
jno
push
mov
lahf
test
adc
sub
paddsw
aad
mov
jle
dec
jo
adc
jae,pt
repz
xlat
lahf
cmpsb
adc
jns
pop
aad
in
xchg
addb
push
xor
out
cmp
dec
xchg
icebp
shl
jmp
retw
jns
and
push
js
and
add
push
popf
insl
add
int
xchg
lret
jp
jecxz
mov
sbb
inc
push
inc
hlt
pop
dec
sbb
outsb
add
into
jmp
lret
mov
push
test
jbe
cmp
push
pop
jp
arpl
je
xchg
mov
loop
lea
into
decl
scas
in
pop
xchg
pop
fistpl
dec
push
sbb
cmpb
cmpsb
idivl
jp
xor
leave
fisttps
pop
mov
mov
je
and
sbbl
dec
sahf
sub
pop
fildl
adc
test
insb
xor
fwait
movsb
gs
inc
aam
jb
or
and
mov
imul
popa
test
and
cmp
enter
mov
int3
push
insl
pop
mov
hlt
divb
loopne
stos
into
bound
test
aaa
add
outsl
lahf
dec
andb
ficompl
add
add
xor
mov
js
cmp
jg
xchg
push
cmpsl
sti
mov
out
mov
ja
xor
cmp
bound
mov
ret
adc
je
orb
adc
fwait
add
mov
or
ffree
inc
sbb
in
mov
repnz
loope
dec
xchg
or
dec
and
mov
mov
fldenv
inc
into
gs
test
xchg
cld
orb
roll
dec
cmp
lcall
add
rcr
sub
xchg
sub
dec
filds
mov
mov
das
aaa
lret
sub
pop
das
test
fsubl
jbe
xor
mov
ret
jb
sti
fisubs
dec
xlat
arpl
inc
push
test
loopne
add
jle
inc
xchg
mov
push
je
jp
imul
addr16
stos
jns
pop
insb
xor
pop
adc
clc
mov
loopne
jne
mov
mov
sub
adc
iret
aam
cmovb
lods
divb
out
test
xchg
fiadds
xchg
hlt
jb
stos
sub
pop
std
notb
loope
inc
mov
ja
pop
incb
cwtl
push
cmp
xor
scas
mov
in
jl
and
or
cmp
dec
popa
ficompl
arpl
fnsave
cmp
push
mov
das
repz
out
negl
jo
stos
rorl
inc
sti
adc
pusha
ds
xchg
xor
test
xor
mov
sub
mov
pop
push
inc
ja
mov
dec
imul
adc
hlt
loopne
push
mov
mov
sbb
xor
fs
jbe
fnsave
clc
sub
loope
mov
lea
movsl
fstpl
test
pop
cmpsl
imul
cmp
adc
icebp
lds
sbbb
pushf
pop
call
clc
out
sbb
fisubrs
jg
push
loop
jl
inc
adc
mov
sahf
sar
and
popa
sti
pop
ret
sbbl
dec
lods
out
mov
fdivs
or
sub
or
xor
in
lea
sahf
out
pop
ja
xchg
cwtl
cmpsl
sbb
cld
sbb
mov
mov
loope
es
decl
xchg
dec
shlb
test
lods
jl
cmp
lret
sub
sti
and
pop
mov
sub
jne
pop
iret
hlt
cmpsb
adc
and
sarl
push
mov
mov
push
add
pop
mov
pop
lods
or
adcb
dec
enter
sub
sti
sbb
icebp
pop
stos
icebp
movsl
stos
test
stos
dec
fnstcw
jg
lcall
add
or
fdivs
mov
mov
ret
stc
mov
lea
cli
aad
mulb
dec
inc
arpl
pop
dec
add
pushf
rcll
sub
sub
sub
popf
shlb
scas
popa
push
mov
cmp
pop
mov
sbbb
repz
xchg
pop
lret
fcmovnb
scas
stos
shlb
arpl
jno
mov
xchg
insb
mov
fucom
lret
sahf
cli
popf
push
hlt
addb
mov
rcl
fdivrs
adc
in
ficoml
push
notb
daa
rcr
push
test
cs
cwtl
outsl
lret
inc
and
pop
mov
enter
inc
or
adc
dec
sub
mov
jmp
popf
sub
loop
mov
andb
push
jg
fisubrs
inc
or
fisttps
sub
xor
adc
cmc
xor
add
sbb
adc
xchg
xor
sbb
mov
sahf
loop
add
jle
cltd
cs
jge
leave
and
sbb
dec
add
repz
push
xor
addb
es
add
dec
xchg
fs
adc
jg
fstl
mov
push
jbe
mov
es
pop
sub
mov
inc
dec
data16
pop
mov
mov
dec
cmpsb
or
inc
mov
shlb
aad
mov
dec
mov
cmpsl
je
jecxz
daa
xchg
not
and
pop
adc
fs
jns
test
pop
inc
rolb
and
movsb
out
fildll
mov
lahf
mov
xchg
mov
dec
dec
push
inc
bound
addr16
or
iret
mov
inc
mov
lods
sbb
aad
test
xchg
xor
pusha
les
cmp
dec
pop
data16
adc
loop
sub
mov
or
xor
xchg
shrl
fidivrl
cmpb
xor
sbb
insb
mov
pop
mov
js
pushf
adc
adc
jae
insb
pushf
in
and
sarl
pop
jl
mov
adc
outsl
or
fcmovnb
cmpsb
jbe
lahf
mov
loop
lock
fstpl
aam
or
jp
mov
dec
mov
ds
xchg
lret
test
push
iret
es
shufps
fidivrs
jnp
sbb
mov
outsb
rol
cmp
jge
or
inc
imul
icebp
adc
mov
mov
mov
push
out
push
pop
int3
shll
jmp
pop
mov
test
shl
outsl
loop
or
insb
or
cmp
repnz
and
repnz
mov
test
out
aad
and
adc
cmpsb
fstps
mov
or
cmp
sahf
cwtl
and
int
mov
dec
adc
hlt
cs
adc
ljmp
pop
imul
imul
mov
ljmp
lock
mov
jnp
xor
scas
int3
fs
fidivs
pop
xchg
pushf
sub
push
and
leave
jnp
icebp
add
jg
test
mov
add
gs
fiaddl
xchg
hlt
fnstcw
out
jg
dec
mov
rcr
push
std
add
mov
mov
sahf
mov
inc
mov
jecxz
mov
outsb
ss
outsb
dec
loop
pop
jae
push
mov
push
inc
dec
loope
push
mov
in
sbb
lock
ss
push
std
and
scas
test
in
aas
out
xchg
adc
outsl
insl
xchg
dec
inc
int3
push
iret
cwtl
cmp
adc
and
xchg
jnp
sub
ja
dec
sbb
jne
nop
sbb
jb
leave
and
sbb
cli
sub
and
outsl
insb
fstps
add
xor
cmc
dec
adc
adc
daa
les
int
fwait
dec
pop
das
push
push
dec
push
mov
fisubl
lea
rolb
fstps
lds
push
cld
sbb
mov
push
sub
movsl
add
xchg
sbb
pop
lock
or
xchg
ljmp
pushf
inc
imul
adc
js
lcall
sbb
inc
adc
test
call
inc
insb
lods
lret
cmp
or
fidivrs
xlat
aam
mov
fstpl
nop
sub
xchg
mov
ljmp
pop
jnp
jl
mov
mov
xchg
rclb
test
add
lahf
push
scas
test
sbb
mov
push
dec
jge
xor
in
addb
out
movsb
xchg
cmp
pop
mov
incb
adc
jnp
mov
movsb
jo
out
mov
enter
xchg
lds
int3
loope
jbe
test
jnp
cmp
mov
add
lds
and
mov
lcall
sbb
xor
jge
push
movsb
inc
in
lea
test
movzbl
shll
aad
and
fwait
lea
aaa
cmpsb
inc
sbb
dec
fwait
les
or
sub
repnz
repz
xchg
ss
inc
or
inc
or
std
adc
xorb
dec
ljmp
mov
je
bound
jmp
mov
aas
fs
insl
fnstsw
mov
xchg
ss
repnz
and
mov
popa
xchg
xchg
aaa
roll
fwait
add
xchg
arpl
sub
out
stos
fsubl
test
sbb
aas
nop
cmpsb
mov
mov
fstpl
das
lret
xorb
mov
jg
lret
or
fidivrs
lock
pop
aas
fs
jge
lock
cltd
cs
stc
mov
xorb
out
andb
daa
lret
pop
fnstsw
push
cmp
ror
xchg
cmp
mov
cmc
out
inc
mov
sub
or
ss
push
repnz
out
xor
add
pop
or
js
cmc
mov
push
pop
fildl
les
sbb
loop
cmpsb
stos
out
test
inc
lcall
pop
mov
mov
cmc
xchg
sbbb
in
cmc
lret
fistl
add
roll
nop
mov
add
cmp
inc
lcall
pop
das
adc
mov
pop
movsb
rorl
xchg
xlat
pop
leave
jle
inc
adc
mov
popa
repz
mov
and
sbb
sbb
mov
test
and
dec
aam
push
sbb
mov
pop
and
out
rcr
ja
mov
inc
cmp
mov
xchg
jg
or
outsb
push
add
cltd
add
cmp
imul
sub
cmp
stos
fists
and
fstp
pop
mov
cld
and
or
pop
movsb
testl
mov
push
mov
mov
shl
stos
mov
add
pop
xchg
pop
shrl
mov
jno
jecxz
lahf
jo
dec
push
data16
adc
or
sub
mov
pop
mov
xorl
cmp
mov
jp
test
dec
mov
sub
cmp
aaa
lahf
push
xchg
jnp
add
pop
push
xchg
pop
leave
gs
loop
clc
fsub
bound
je
pop
pop
lock
jg
xor
pushf
pop
mov
xor
stc
test
or
fcoml
jl
cmp
test
sbb
mov
mov
pop
into
orl
dec
sub
pop
push
pop
push
inc
pop
sbb
cs
bound
out
sub
sub
insl
xchg
sahf
jbe
inc
int3
pop
fwait
rclb
fmulp
inc
outsb
and
cltd
cmp
mov
push
sub
dec
dec
lock
imul
cmp
fidivs
shlb
gs
and
mov
les
pop
ja
fs
outsb
and
cmp
insl
jo
cmpsb
cmpsb
xor
lahf
and
inc
add
dec
lea
fmull
or
jge
jae
push
pop
call
into
loope
lcall
inc
sub
pop
shl
gs
loopne
mov
push
lds
xchg
sbb
add
inc
je
push
sbb
mov
adc
push
mov
rolb
lcall
jbe
movsb
out
insl
and
add
sub
insb
pop
inc
loop
add
pop
jecxz
pusha
fwait
adc
js
cwtl
pop
cmp
cmp
or
mov
test
test
hlt
mov
sti
movsb
pop
movsb
xor
dec
mov
test
jp
repz
push
jmp
push
inc
and
and
lods
add
stc
cwtl
scas
loope
je
test
ret
gs
fs
dec
sbb
jne
mov
jbe
and
sbb
cmp
sar
adc
mov
dec
mov
inc
jmp
inc
pusha
pop
dec
xchg
imul
shlb
fisttpll
jle
adc
sub
fwait
push
adc
add
jnp
imul
push
fwait
stc
sbb
addr16
mov
movsl
fstps
inc
aam
add
xor
xorb
ror
repnz
sbb
mov
cmpsb
xorb
loope
or
mov
mov
dec
cmpsb
sbb
cmp
jg
jnp
hlt
fstpl
lods
das
and
pop
dec
pop
lds
idiv
call
adc
test
dec
sub
inc
mov
mov
jmp
mov
out
sub
inc
inc
jmp
sarl
data16
dec
sahf
mov
pushf
inc
ljmp
jno
lahf
lcall
push
test
stc
jbe
jno
pusha
sbb
shrl
cmpsb
pusha
loop
adc
cmp
or
adc
dec
mov
ja
sahf
cmp
sar
lahf
dec
pop
dec
jle,pn
push
or
int3
adc
shl
inc
fdiv
aam
inc
popf
lret
stos
sbb
cs
jmp
and
lahf
dec
xchg
adc
addl
push
push
aam
in
dec
inc
mov
mov
hlt
xor
jae
in
aaa
ret
mov
stc
test
xchg
push
or
fnstsw
xchg
lret
outsl
push
xor
mul
mov
mov
jne
rclb
add
push
aas
pop
mov
adc
cmp
or
hlt
int
jo
out
inc
jnp
jp
mov
xor
fldt
js
pop
leave
fistps
popa
or
inc
aad
or
das
repnz
dec
lock
dec
xor
addr16
pop
push
scas
push
jnp
add
aam
xor
push
enter
aam
test
int3
push
into
aam
mov
mov
sub
inc
leave
jmp
rclb
push
aad
adc
add
sub
roll
in
push
clc
add
add
movsb
sar
pop
cs
mov
mov
iret
shlb
mov
shrl
jnp
push
rolb
fcompl
outsb
shrb
nop
sbb
out
mov
dec
ljmp
lcall
inc
pop
adc
cmpsb
insb
in
rep
dec
pushf
ja
cmp
test
push
arpl
in
mov
mov
std
in
xor
sub
mov
cmp
push
cmp
xchg
pop
or
repnz
xor
dec
add
sub
hlt
sar
leave
pop
call
inc
cmp
cld
mov
pop
or
cmp
adc
sbb
shl
xchg
ret
lret
jmp
into
and
in
dec
adc
dec
cmc
test
ficoml
mov
dec
int3
aas
dec
dec
push
ljmp
roll
cmp
sub
xor
gs
xchg
nop
aas
lahf
stos
cmp
jno
imul
mov
cs
mov
cmp
out
stc
add
cs
adc
iret
mov
sbb
fs
rolb
adc
xor
stos
gs
or
fimull
xchg
divl
push
dec
in
repz
adc
cli
push
dec
mov
dec
je
pushf
xor
push
jle
jne
dec
adc
jo
movsb
dec
push
movswl
into
nop
pusha
idiv
xor
pop
jmp
fucomi
dec
ret
add
jno
fdivs
or
xchg
ror
jle
ret
xchg
xor
pop
jmp
dec
jp
and
mov
cmpsb
push
mov
mov
adc
cs
jmp
in
push
scas
lea
or
add
mov
jge
mov
pop
sub
cmc
loope
incb
mov
sub
rorb
mov
addr16
ret
adc
add
sbbb
sub
mov
lds
cmp
scas
xchg
in
mov
jo
dec
ds
js
sbb
xchg
lret
jne
pop
cmp
mov
xor
pop
xor
ret
nop
pop
jle
jp
test
lret
pop
lds
add
and
push
lock
mov
imul
js
into
cmc
sub
lock
loop
cmp
push
cmpsb
jbe
or
arpl
hlt
cmp
dec
xor
sub
arpl
addr16
sbb
sbb
xchg
call
rcrl
ret
xor
adc
and
fstps
pusha
ret
sbb
mov
dec
sbb
xchg
bound
inc
lods
inc
sbb
push
mov
xor
loopne
mov
mov
mov
clc
or
xchg
testl
cmc
iret
or
mov
clc
bound
mov
loope
jmp
push
adcb
sahf
mov
test
stos
movsl
popa
arpl
stc
fcmovnbe
xchg
sbb
xor
iret
pop
jl
inc
scas
add
adc
push
notl
pop
push
movsb
into
jnp
loope
adc
mov
scas
mov
jo
loope
lds
insb
jmp
lret
sbb
sub
out
and
rclb
inc
mov
daa
enter
xor
jbe
lret
and
aad
pop
jb
in
inc
enter
and
push
and
je
jo
cli
jl
scas
loopne
repnz
repz
sbb
or
mov
push
and
and
mov
inc
sbb
testb
cmpsb
stos
mov
into
pop
mov
or
mov
mov
hlt
mov
add
push
inc
push
or
outsb
dec
sub
repz
or
es
mov
das
sub
or
cld
into
aas
aad
les
subl
cmp
inc
mov
or
cs
stos
cs
dec
icebp
aaa
cli
iret
lea
jle
push
shl
andl
mov
mov
xlat
hlt
and
lock
pop
pop
jne
arpl
outsl
test
sarl
jp
pop
cmc
sub
add
ror
fisubrl
movsb
out
aas
outsl
incb
jnp
aam
jb
jo
fsubr
or
ja
outsb
add
addb
ret
push
andl
sti
std
mov
sbb
addr16
js
in
and
dec
cmp
xor
xor
adc
pop
addr16
pushf
jl
add
inc
and
mov
sti
xor
mov
mull
or
aaa
adc
lcall
das
mov
xor
lret
ljmp
stos
fdivrl
lret
sbbb
sub
scas
dec
inc
push
cmp
xchg
or
cmpsl
out
inc
cmp
cli
or
pop
je
pop
inc
jne
pop
push
mov
out
add
gs
outsb
push
sub
push
jl
mov
lret
data16
or
cmp
inc
nop
adc
lret
jae
jns
imul
lods
jo
cmpsb
pop
sti
mov
dec
jnp
in
mov
xchg
sub
sbb
mov
imul
ss
cli
xchg
pusha
add
push
inc
int3
cmovo
adc
xor
enter
in
lds
pop
dec
mov
mov
shrb
sarb
ffreep
sahf
mov
mov
insb
push
outsb
jnp
sbb
dec
jp
sub
xchg
cmp
fists
dec
pushf
xchg
pop
jae
popf
push
push
dec
dec
stos
sbb
fmull
iret
ret
pop
push
arpl
adc
dec
lret
and
mull
cmp
add
xor
push
daa
push
sbb
int
mov
pop
cmp
adc
jmp
fstl
lds
jl
je
ljmp
push
sbb
ljmp
pop
addb
xchg
cmp
mov
fs
cmp
fwait
mov
mov
call
jecxz
aam
mov
mov
cmp
cmp
into
jo
mov
jae
inc
xorb
outsb
ror
mov
jl
or
imul
pop
mov
shr
pop
jg
dec
xor
jno
jno
push
add
mov
cmpsl
push
push
aad
les
iret
imul
das
push
shr
ret
das
shrl
out
mov
out
repz
dec
inc
lea
or
add
sbb
fs
mov
mov
dec
out
xor
mov
xor
test
push
insl
ret
or
call
xor
jmp
scas
sbb
movsb
xchg
mov
sbb
daa
lret
sbb
cmp
cmp
arpl
push
mov
mov
mov
lods
xor
push
push
out
js
lds
push
inc
add
add
or
inc
sub
adc
add
sahf
leave
mov
xor
sub
add
decb
inc
scas
popf
mov
stos
in
cmpsl
test
or
push
pop
jae
dec
push
pusha
mov
arpl
loopne
stos
js
dec
sbb
shr
les
mov
cmp
push
int
fnstenv
cmc
test
xchg
add
pop
push
shlb
cmp
jg
mov
rcl
pop
or
loope
arpl
push
imul
cmpsb
cmp
outsb
andl
lds
fdivrs
test
push
pop
pop
xor
push
cmp
pop
lds
insb
jmp
fwait
out
in
and
push
jnp
pop
sti
insb
sub
icebp
rcrb
lret
mov
int
sbb
pop
jae
dec
imul
stc
xor
lret
push
sahf
jb
mov
jbe
push
dec
and
orb
push
cmp
adc
jbe
outsb
addr16
jnp
push
outsl
or
fmul
imul
jb
dec
jle
into
or
cs
adc
sub
cmp
sub
inc
in
jl
test
out
mov
push
inc
mov
mov
mov
lcall
in
les
test
in
cli
inc
mov
push
pop
pop
movsb
aam
inc
loope
xchg
popa
inc
andl
lds
scas
fldl
xor
mov
aas
fwait
jno
jno
ffree
lea
test
inc
adc
inc
lahf
sbb
sub
imul
xchg
jp
pusha
sti
pop
lds
jp
mov
mov
cmpsb
mov
dec
cltd
xchg
pop
xchg
bound
js
mov
mov
testl
inc
stc
sahf
xchg
sbb
cmpsl
and
ficompl
push
adc
daa
dec
push
or
je
mov
xchg
push
inc
sub
fcomp
jnp
pop
dec
lds
jae
test
int
in
jns
inc
dec
xlat
lcall
icebp
pop
adc
outsl
out
push
or
andl
pop
mov
ljmp
leave
mov
cmp
xchg
out
in
loopne
rorb
maskmovq
imull
xor
push
xor
insl
push
and
inc
sahf
jg
lret
xchg
hlt
jns
ds
push
scas
in
adc
jnp
cmp
sbbb
hlt
je
repz
xchg
push
xchg
mov
popf
or
fildll
or
test
sub
mov
jae
mov
das
push
add
and
in
repz
adc
jae
andb
mov
xor
sbb
jnp
push
lcall
das
jno
mov
inc
out
mov
jmp
push
mov
dec
xchg
out
lret
mov
das
ss
pop
inc
rep
pop
or
inc
test
lea
mov
sahf
mov
loop
dec
xor
rol
mov
cmp
dec
jmp
jp
faddl
mov
ds
out
cmc
loopne
js
cmp
jmp
iret
cmp
adc
imul
mov
aam
sbb
jae
aad
dec
adc
nop
mov
dec
cmc
cmpsb
orb
add
test
pop
jbe
sub
jp
ds
jne
dec
mov
stos
mov
pop
imul
push
xor
inc
jl
add
frstor
sbb
fcoms
mov
mov
sub
out
sbb
or
mov
insl
xor
jmp
in
push
sbb
adc
cmpsl
clc
mov
adc
movl
and
shlb
fldcw
push
loop
int
dec
ja
pop
lock
test
cmp
push
sub
xchg
sahf
push
sub
rorl
popa
pop
xchg
jns
push
push
add
ret
scas
in
pop
jmpw
lret
in
stc
outsl
push
xchg
movsb
sbb
loope
cmp
loop
mov
and
lock
dec
aaa
arpl
ret
popa
cs
dec
jne
pop
imul
loope
push
or
push
into
sbb
cld
mov
popf
fidivrl
mov
repz
sbb
pop
lods
out
or
out
loope
out
push
add
mov
ds
pop
inc
mov
pop
sub
lahf
test
inc
xlat
inc
xchg
mov
test
in
in
sub
inc
pop
sbb
or
rcrl
je
pop
sbb
sub
jno
loope
rorl
pop
ficoml
and
fwait
icebp
int3
fstpl
outsb
mov
and
mov
insb
addr16
movsb
xor
jno
jno
cli
xchg
fxam
xchg
jno
jle
cmc
aaa
adc
push
cmc
and
gs
aas
fistpl
sbb
mov
lods
mov
ja
mov
cli
dec
test
mov
popa
sbb
jno
pop
add
pop
mov
xchg
mov
add
addr16
adc
mov
imul
push
xchg
std
inc
mov
inc
int
jg
mov
adc
insl
in
in
inc
xor
dec
dec
add
aas
adc
fdivl
lahf
jg
dec
lock
hlt
daa
dec
jl
out
push
inc
daa
xchg
jnp
inc
psrlw
lcall
xchg
xchg
inc
jno
hlt
and
cltd
std
insb
hlt
cltd
dec
sti
lods
imul
jcxz
and
pop
call
fwait
xchg
pop
sub
jno
popf
dec
or
pop
testb
mov
rcrb
xorb
int3
in
jl
leave
nop
xchg
inc
jb
xchg
shrl
xor
sub
mov
shrb
jo
leave
sub
xor
cmp
push
arpl
shrl
mov
fbstp
mov
mov
mov
cli
and
push
out
iret
inc
and
mov
sub
ds
call
mov
clc
int
sub
das
inc
add
push
mov
mov
loopne
push
mov
dec
cmpb
xor
sbb
cmp
sbbb
in
push
cmp
pop
adc
inc
popf
call
add
push
adcl
push
pushf
fists
in
push
mov
imul
push
insl
xchg
xlat
xor
lds
scas
sbb
xchg
mov
lods
sbb
es
xchg
movsl
enter
jb
push
pop
popf
or
push
clc
insl
insl
adcl
in
xor
sub
fisttpll
and
dec
mov
jne
mov
mov
and
aam
dec
mov
inc
push
fucomi
xor
aam
sbb
movsb
notl
adc
pop
jno
jne
nop
nop
xchg
movsl
inc
je
push
sub
fisubs
sbb
into
ror
ret
inc
sub
xchg
push
and
loopne
lret
test
xchg
jge
adc
inc
add
sub
cld
jmp
cmp
sub
mov
int3
xor
or
cmpsb
push
and
insl
and
or
xlat
jge
inc
mov
jmp
push
sub
lcall
mov
jne
icebp
aad
icebp
sub
imul
fcomip
push
xor
jne
dec
inc
mov
xchg
int
sbb
and
mov
or
xor
ljmp
test
mov
popf
lods
imul
lds
dec
out
jle
xor
scas
mov
cmpsb
out
hlt
fisubrl
shll
scas
sub
push
shrl
aas
cmp
cmp
ret
in
les
cmovne
pop
sbb
ret
mov
lret
dec
adc
cli
cmp
movsl
add
adc
cmp
test
mov
int3
cmp
cli
mov
imul
imul
in
repz
mov
fstpl
add
movsl
loopne
push
cmp
daa
in
hlt
insb
outsl
jge
into
cld
nop
mov
mov
les
mov
inc
mov
xlat
popa
sub
mov
jp
gs
js
jnp
cmc
jp
inc
xchg
ret
mov
adc
mov
and
cmp
jb
jge
fdivl
mov
fistl
push
and
mov
pop
push
adc
pop
or
add
xchg
popf
mov
xor
pop
dec
das
popf
fidivrl
xchg
lahf
rcl
pop
xor
jle
pop
rcr
add
add
push
sbb
int3
dec
sti
jne
push
sbb
lds
clc
jb
mov
push
push
loop
jae
mov
lock
test
cmp
cmpsl
aam
dec
and
push
lret
rcrb
push
orb
cwtl
dec
mov
jae
mov
push
neg
fiadds
mov
jl
loopne
lea
shlb
jl
int
imul
push
cmp
mov
popf
mov
lods
nop
and
cmp
pop
stos
and
dec
push
decl
sub
rorb
daa
fwait
add
out
mov
ret
mov
es
mov
clc
dec
push
mov
xchg
mov
cli
adc
cmpsl
out
dec
ret
xchg
lock
pop
ljmp
cs
scas
jge
sbb
xor
sub
jne
test
pop
std
out
sub
sbb
in
shl
scas
cltd
or
stos
push
ja
out
add
fildl
scas
fidivs
mov
jle
sbb
mov
add
ret
aad
popa
push
das
push
or
xchg
enter
out
je
in
push
test
decb
jne
mov
les
in
ds
cli
sub
fwait
rcr
pusha
fiadds
ror
jle
loop
mov
loop
ds
in
push
int
or
cmp
aas
loop
inc
rclb
cmp
repz
loopne
lea
pop
stc
xor
fiaddl
jmp
pop
sbb
int
xchg
jg
ret
lret
and
and
jp
loop
call
sub
into
shrl
dec
aam
cmpsl
data16
or
xchg
jle
icebp
ret
push
dec
add
imul
mov
test
xchg
cmp
pop
cmc
cmp
incl
mov
cmp
outsl
mov
fisttps
xchg
pop
stc
push
jle
rcrl
pop
data16
pop
cmp
xchg
push
push
or
inc
push
lcall
pop
cmpsb
popf
jp
sub
xchg
inc
mov
int3
add
mov
mov
test
mov
mov
cmp
sbb
cmp
out
int
sahf
fldcw
inc
jbe
cwtl
or
cmp
cmpsl
in
push
repz
and
jecxz
insl
jl
outsl
into
mov
decb
inc
out
push
and
dec
or
add
and
lret
ds
xor
es
mov
pushf
mov
sub
sub
pop
into
call
pop
dec
pusha
mov
divl
popa
sub
inc
jnp
pop
push
mov
jb
add
fidivl
sub
int3
inc
and
sbb
fwait
js
fsubrs
ret
jl
mov
and
or
mov
lock
or
test
adc
dec
insb
push
jbe
out
hlt
andb
add
adc
cltd
std
cmp
mov
xlat
pop
mulb
orl
pushf
call
out
and
xchg
mov
mov
popa
xor
int3
push
orl
pushf
fldt
insl
je
push
mov
cmp
add
sbb
push
rcr
jae
jno
pusha
testb
push
or
jo
into
xchg
xchg
or
inc
jmp
imul
leave
push
push
cmc
or
pop
es
inc
popa
mov
addr16
xlat
shll
pop
cmp
mov
gs
pop
pop
sbbl
int
jecxz
lods
ret
sbb
dec
sbb
pushf
cmpsl
shlb
push
leave
scas
rol
pop
test
fstpt
or
inc
mov
jle
rclb
jo
int
and
arpl
cmpsl
push
mov
adc
xchg
mov
and
inc
scas
dec
push
leave
jle
push
mov
add
inc
daa
fiaddl
mov
inc
fidivrs
adc
sub
inc
add
je
push
pusha
jne
inc
or
shll
mov
in
xor
pop
into
jb
jae
in
add
or
loopne
adc
jecxz
shlb
fprem1
mov
mov
orl
and
mov
push
add
or
test
push
mov
and
adc
mov
jae
test
cwtl
fnstsw
out
cmp
cwtl
out
and
mov
xchg
adc
repz
mov
jg
test
pop
rolb
fldenv
ret
pop
bound
cmc
inc
cmpsb
hlt
jl
jne
out
repz
in
jecxz
ja
jo
sub
pop
gs
push
jp
adc
aad
xchg
or
mov
ss
xor
push
out
cmp
pop
bound
mov
adc
push
pop
push
ret
xor
sbb
or
imul
pop
push
out
jle
jmp
xchg
sarb
xchg
inc
out
sbb
addr16
sub
enter
jns
ds
push
add
loopne
xor
and
pusha
orl
test
les
pop
lret
lea
and
mov
notl
xor
insl
and
push
push
fiaddl
in
ds
faddl
test
and
fildll
pop
sub
pop
mov
mov
inc
add
je
mov
jo
sub
push
xor
add
int
jg
sbb
mov
mov
push
cld
dec
fnstsw
fldt
imul
bound
inc
js
jp
int
in
mov
in
cmc
xchg
incb
imul
out
xchg
add
jns
jb
repz
scas
mov
ss
fistps
pop
xlat
pop
cs
js
add
dec
rcrb
shlb
xor
outsb
decb
and
gs
mov
push
dec
shll
out
inc
into
cmp
lret
jae
fimull
test
and
stos
mov
xor
dec
or
imul
push
xorb
mov
push
mov
insl
add
jp
int
jne
orl
insb
sbb
mov
add
js
ja
dec
jmp
xor
add
je
out
outsb
popf
xor
mov
inc
sti
lret
stc
adc
testl
mov
cltd
mov
add
stos
loope
mov
pop
cmpb
cmc
stos
or
and
mov
test
dec
cmpb
mov
cwtl
test
rcrb
iret
cmpsb
cs
jp
es
out
scas
push
mov
jb
mov
xbegin
add
mov
jns
push
cmpsl
je
mov
and
push
insb
sbb
dec
sbb
adc
or
dec
out
jne
mov
inc
jno
fsubrp
icebp
inc
jns
push
pusha
sub
aaa
cwtl
xchg
cmp
xor
jmp
es
lret
and
or
add
fsubl
add
pop
xchg
jecxz
cmp
lds
jl
scas
mov
cli
js
je
insl
push
dec
les
pop
test
fcoms
ldmxcsr
sbb
mov
cmpb
cltd
mov
inc
ret
faddl
dec
inc
outsl
mov
movsl
jnp
dec
pushf
pop
xchg
mov
pop
fidivrs
call
inc
js
imul
mov
dec
imul
mov
mov
cmp
mov
test
sbb
adc
xlat
mov
cmp
dec
dec
mov
sub
dec
sbb
lds
daa
cltd
and
sub
test
xchg
add
jb
jne
in
dec
and
aad
mov
push
or
sub
dec
shlb
mull
stos
add
push
adc
dec
js
icebp
es
loope
pop
popl
sbb
arpl
mov
stc
add
movsb
pop
scas
sbb
mov
mov
movsb
sub
fmul
dec
aas
js
sub
loop
cs
js
dec
or
inc
sti
lods
xor
and
ret
cmp
adc
inc
fwait
idivl
jns
cmpsb
lcall
mov
fwait
jecxz
or
outsb
sbb
xor
pop
adc
xor
insb
adc
jg
cmpsl
cmpb
cmpsl
popf
out
cmp
mov
in
xor
lods
in
out
cli
in
sbb
inc
and
lods
decl
lods
xchg
jp
aas
mov
push
lock
pinsrw
lock
ret
subb
mov
movsl
rep
nop
jno
call
mov
sub
pop
loope
inc
mov
mov
or
in
pop
jmp
pushf
cwtl
xchg
out
jle
shl
lret
stos
mov
es
les
push
jmp
in
inc
jb
pop
xchg
fnstcw
xor
outsb
sub
pop
ljmp
mov
add
jle
cwtl
outsb
pop
imul
ss
cmp
xchg
movsl
fisttpl
jge
sbb
cmp
jmp
mov
mov
loope
dec
pop
lds
repnz
arpl
mov
stos
mov
adc
jecxz
mov
in
lcall
shrl
test
pop
jecxz
pusha
test
addr16
loop
xor
adc
push
iret
repz
std
popf
sub
daa
loop
cmpsb
test
arpl
gs
sub
aas
lret
ret
xchg
add
out
popa
lret
cltd
xor
sbb
or
movsb
inc
xchg
push
jnp
mov
xchg
mov
pop
push
pop
fnstcw
cmp
or
mov
pop
shrl
roll
cld
cmp
fildl
cmc
fs
std
xchg
push
ss
inc
or
scas
cmp
stc
add
enter
jg
lret
pop
insb
mov
cmp
mov
test
jbe
ss
scas
xchg
clc
xchg
cmp
mov
iret
notl
mov
jge
mov
ds
xor
pop
es
mov
mov
dec
movsl
adc
xchg
push
xchg
xor
cmp
int
div
add
cmp
filds
jp
rclb
xor
sbb
adc
cmc
pusha
push
pushf
imul
adc
push
fisubs
into
test
loope
loop
jb
mov
cmp
sti
pop
popa
popl
jmp
jle
add
push
enter
addr16
inc
lock
scas
in
xchg
insb
xlat
push
mov
pop
add
imul
cmpsl
and
dec
movsl
cwtl
insl
jae
loope
jge
or
imul
lods
out
out
cmp
jl
rclb
aas
std
dec
sbb
mov
sti
mov
je
xlat
sbb
sbb
cli
rorb
xor
cltd
js
repnz
arpl
icebp
xlat
fildll
into
movsb
xchg
mov
loopne
dec
cwtl
ret
lock
sub
fisubrl
in
mov
ss
push
repz
addb
bound
sub
sub
mov
mov
fdivl
mov
cmp
fdivrs
push
gs
in
ja
push
lahf
push
movsl
sbb
mov
das
fcompl
mov
iret
jns
enter
or
sbb
and
jl
out
jns
in
cld
mov
outsl
jno
or
test
cltd
sub
cmp
xchg
int3
xchg
repz
or
mov
cmp
xchg
sub
scas
pop
insl
sbb
push
xchg
int3
fldenv
adc
mov
mov
pop
add
pop
jbe
jmp
xor
ret
pop
movl
dec
jle
scas
and
aas
rcrb
fs
dec
loop
pushf
lahf
jg
or
xchg
cmp
pop
cmp
add
push
dec
xor
sahf
or
xchg
jbe,pt
les
lahf
roll
adc
shl
pushaw
jle
pop
scas
lds
xchg
and
ljmp
stos
mov
test
pop
jmp
push
mov
mov
lahf
adc
dec
shll
ffree
adc
fcomi
mov
and
das
and
dec
and
movsb
mov
stos
pop
lds
jno
sub
fisttpl
xor
hlt
pop
cwtl
adc
lds
inc
jne
pop
rclb
push
mov
inc
dec
push
repz
and
ret
and
ds
test
mov
aaa
cmp
popa
cwtl
repz
shll
ss
pop
xor
loope
cmpsl
scas
push
xor
insl
scas
jp
loope
lods
push
push
push
insl
mov
idivl
add
dec
push
outsb
jmp
sbb
pop
dec
imul
js
xchg
repz
pushf
mov
and
xchg
cmp
ret
pop
addb
movsl
cmc
mov
or
lods
cltd
dec
andl
les
rep
and
mov
pop
mov
call
and
pop
add
test
daa
cwtl
xchg
lock
push
das
push
test
adc
sarl
mov
bnd
rclb
jo
lahf
jg
sti
sbb
es
movsb
jg
mov
shlb
cmp
sti
or
push
sub
push
jp
clc
mov
xor
mov
mov
mov
pop
daa
xchg
in
mov
sub
out
mov
mov
mov
sbb
xchg
lock
pop
jge
jnp
scas
and
pop
mov
add
aad
sbb
or
std
jns
std
cmpxchg8b
add
into
jp
test
ss
xor
mov
jne
sbb
dec
lret
lods
xchg
shrb
sub
cmp
in
mov
cmp
inc
mov
adc
pusha
cmc
aad
pop
pop
jmp
cld
or
sub
mov
loopnew
and
inc
outsb
out
aas
cld
jne
inc
or
xlat
ret
cmp
xchg
pop
inc
inc
xchg
mov
mov
loopne
js
pop
and
out
nop
cmp
loopne
popa
pop
push
pop
and
std
inc
clc
add
mov
pushf
xchg
mov
inc
cmp
and
pushf
fnstcw
jbe
adcb
inc
testb
stos
jbe
fwait
mov
push
push
mov
xchg
or
pop
es
into
mov
popa
inc
dec
push
mov
push
aas
inc
sahf
out
xor
or
cmp
mov
hlt
roll
adcl
or
adc
xchg
mov
xchg
in
mov
jae
jl
enter
mov
out
inc
xlat
in
lea
mov
ss
cmp
inc
xchg
pop
divb
bound
push
clc
mov
push
pop
jae
xor
sbb
lahf
in
push
push
adc
je
dec
enter
mov
les
in
jg
adc
mov
repnz
fwait
xor
fwait
lcall
in
pop
cmc
outsb
jl
icebp
sti
mov
faddl
js
cs
cmp
addr16
add
jge
xor
mov
fstps
popf
add
mov
cmp
bound
sbb
leave
sbb
mov
shlb
mov
and
rclb
fistps
xchg
mov
daa
sbb
sbb
mov
pushf
inc
addr16
sbb
sbbb
movsb
push
fidivrl
pop
hlt
cmp
aaa
jge
das
push
fs
adc
loopne
fdivrp
push
lock
in
xor
stos
sub
popa
push
std
pushf
pop
pop
add
add
popa
lods
and
dec
mov
movsl
pop
pop
xchg
gs
jo
rcrb
jecxz
and
repnz
jp
in
xor
in
mov
mov
mov
jne,pn
fnstcw
mov
das
inc
push
mov
adc
pop
push
lret
jmp
xchg
push
fadds
xlat
xchg
repz
test
push
lahf
addr16
call
mov
dec
push
insl
push
adc
mov
ss
push
nop
sub
popf
xor
sbb
mov
pop
inc
mov
mov
mov
jmp
leave
icebp
sahf
into
out
fmull
pop
push
dec
hlt
xchg
xor
inc
fildll
dec
mov
dec
sbb
dec
in
and
aaa
ret
repz
rcll
pop
inc
movsb
mull
shll
insb
pop
mov
adc
call
cld
daa
jbe
out
loop
cs
xlat
ret
and
imul
outsb
jl
jb
push
loope
lahf
add
addr16
xor
dec
sub
loopne
stos
int3
mov
inc
add
xlat
ret
in
test
xlat
ss
mov
cwtl
mov
bound
fmulp
out
xchg
mov
sub
add
adcl
push
out
push
in
mov
push
shl
mov
cmpsb
jnp
inc
push
push
addb
daa
or
in
ja
jl
bound
lcall
lret
dec
lcall
lds
stos
ror
mov
fdiv
adc
je
cs
les
std
and
xchg
adc
int3
addr16
or
mov
gs
sti
adc
shlb
inc
ja
vsqrtsd
sbb
or
ds
cmp
imul
inc
mov
mov
negb
test
call
push
fisttpl
es
loop
stc
fadd
lods
mov
sbb
and
add
stos
mov
jbe
dec
xor
enter
subb
inc
mov
adc
loope
insb
cwtl
sbb
das
jb
leave
add
sbb
xor
dec
shll
inc
push
mov
dec
cmpsb
mov
xchg
push
das
jecxz
notb
cmpsb
xor
cmp
cmp
pop
push
push
enter
cmp
jo
shr
arpl
inc
push
mov
hlt
or
lahf
sub
test
xchg
shl
cmpsb
cld
hlt
xchg
fs
or
ljmp
and
insb
mov
jo
push
adc
sbb
xchg
bound
mov
and
xchg
push
jb
in
mov
add
mov
add
xchg
adc
out
movsb
push
or
pop
and
pop
inc
cmp
ret
lds
in
adc
xchg
sub
test
jnp
xlat
sbb
mov
jmp
xchg
pop
popa
in
movsb
sub
jno
mov
add
or
cmp
mov
lods
jmp
or
in
das
mov
pop
shll
scas
pop
add
enter
sub
insb
popa
jge
adc
scas
mov
les
sub
xorb
out
popf
adc
arpl
jno
ret
xchg
clc
lods
fcoms
in
movsl
cmc
pop
xor
dec
mov
cmp
sub
jo
mov
jbe
cmpsl
mov
adc
add
jo
call
add
xchg
movsl
jb
stos
fs
shlb
dec
les
xor
sti
inc
sub
icebp
in
les
inc
sbb
cmp
ja
lea
sub
mov
addb
clc
jne
and
adc
lahf
dec
sbb
cmp
ds
dec
outsb
dec
subl
std
jns
lret
pop
xchg
popf
push
loopne
test
shrb
mov
loopne
sub
mov
pop
jbe
out
push
push
addr16
sbb
pop
xchg
cmp
adc
movaps
mov
int3
adc
jmp
rolb
xchg
movsb
lret
mov
push
mov
loopne
ficompl
lods
scas
out
jp
in
pop
cli
in
js
lds
jns
xchg
outsl
ffree
push
rcl
pushf
xor
scas
inc
inc
adc
test
insl
cltd
jno
dec
scas
ja
xchg
jp
mov
mov
jp
negb
xor
push
divl
decb
mov
sbb
out
mov
dec
jns
mov
pop
mov
pop
lcall
pop
lahf
rcrl
push
add
or
xchg
into
jbe
pop
mov
xchg
push
lods
loope
pop
popf
mov
ss
or
mov
cmp
mov
jle
pushf
out
mov
sub
add
and
adc
jle
into
adc
out
xor
jbe
adc
xor
fildll
or
sbb
into
in
add
repz
gs
sbb
cld
test
or
xlat
sub
cmp
inc
or
xlat
and
add
cmp
push
sti
cmc
out
and
movsl
sub
dec
insb
mov
pop
xchg
sub
mov
jno
pop
sub
jp
push
jmp
out
ret
test
add
pusha
in
test
les
ljmp
fdivs
jno
adc
into
out
sahf
bound
sti
add
int3
push
inc
stos
in
mov
insb
adc
inc
fldcw
jae
mov
mov
or
mov
add
pop
cmp
push
mov
fisttpll
stos
das
push
adc
inc
adc
jmp
cld
lret
jo
mov
pop
and
pop
fcmovu
rolb
in
iret
inc
jecxz
push
and
push
sbb
jmp
mov
gs
dec
sbb
jae
inc
jo
mov
hlt
lret
xor
jmp
mov
mov
lahf
lret
xor
pop
clc
fwait
fwait
push
test
enter
aad
add
call
jno
cmp
mov
jo
pop
sahf
push
lahf
pop
mov
lea
nop
jb
lret
push
or
mov
push
jl
je
ja
das
mov
shlb
cmpsb
rcrb
lea
shlb
sbb
pop
sub
mov
js
sub
push
xchg
xor
mov
fidivl
cmc
cmpsb
lods
repz
inc
lods
insb
ljmp
pop
dec
ss
xlat
xor
adc
iret
sub
ficompl
pop
jmp
push
or
stc
sbb
pop
rorb
addr16
mov
enter
nop
sub
xchg
xor
ss
test
aaa
ja
enter
lock
inc
fiaddl
mov
inc
pop
mov
cmp
or
cld
dec
int
fimuls
arpl
ja
sub
ljmp
cmpsl
pop
push
jl
cmpps
insl
sahf
jo
push
enter
mov
jo
dec
adc
rclb
out
aas
xchg
add
dec
adcl
negl
jecxz
imul
ffreep
push
sbb
wbinvd
mov
push
adc
ljmp
xchg
fnstenv
cmp
sahf
xor
subl
loopne
rolb
mov
loop
adc
mov
jge
sbb
inc
xchg
jns
mov
or
push
mov
add
pop
mov
mov
add
rcl
or
mov
imul
mov
je
inc
inc
jmp
aam
mov
stos
ds
daa
jae
add
movsb
pop
arpl
xchg
inc
mov
cmp
adc
stc
and
mov
or
adc
push
shrl
ljmp
inc
es
stc
sbb
push
or
xchg
test
pop
mov
sbb
out
jnp
enter
and
mov
inc
pop
dec
push
cmc
xor
xorb
ret
mov
es
test
jle
dec
or
jmp
sub
add
sti
jle
hlt
pop
movsb
ss
xchg
jle
sbb
aaa
stc
mov
add
aad
inc
aad
stc
ficompl
inc
mov
sub
cltd
sbbl
stos
sbb
imul
push
push
into
sub
jns
xor
adcb
mov
jmp
add
and
out
andl
dec
mov
lret
insb
aad
jno
and
cmpsb
dec
fucomi
jbe
or
jg
mov
cld
push
bound
das
mov
arpl
iret
pop
adc
lahf
mov
sbb
outsb
fsts
lods
shrl
loope
add
movb
sbb
or
fwait
popf
push
out
push
idivl
xorb
xchg
xchg
xchg
pop
pop
push
ds
mov
pop
lods
pmullw
int
xlat
fsts
ljmp
add
pop
or
fwait
xor
xchg
jae
push
rclb
out
inc
push
adc
test
mov
mov
jp
in
aaa
push
fistl
sbb
adc
sbb
fs
nop
maskmovq
idivl
mov
ja
mov
inc
out
cmp
ss
sbb
inc
push
and
cld
test
movsl
cmc
jmp
icebp
rcl
ljmp
mov
pop
insl
adc
mov
mov
cmp
call
lock
and
ret
add
mov
dec
cmp
stos
and
cmp
cltd
cltd
sbb
sbb
adc
cmpsl
push
bound
sub
aad
xchg
inc
mov
test
cwtl
mov
mov
sub
mov
pop
mov
pushf
icebp
and
fucom
cld
clc
or
cwtl
lea
cmc
ja
cmp
lret
in
out
cmp
test
or
pop
jmp
sub
pop
push
sar
and
push
and
std
cmp
mov
sub
and
xor
shll
loop
fs
int
dec
adc
xchg
imul
mov
xchg
addr16
mov
dec
push
push
into
lea
jle
fwait
std
cli
add
pop
aad
pop
sbb
inc
add
fistpl
test
ret
push
adc
and
popf
and
insl
jecxz
imulb
daa
fs
cmc
dec
fs
dec
enter
fiaddl
aad
or
lcall
cmp
cwtl
fisttps
xchg
add
adc
repnz
or
and
add
dec
adc
mov
outsb
or
mov
std
pop
rclb
popa
sub
inc
or
popf
mov
mov
xor
ss
test
rol
mov
inc
xchg
pop
mov
add
push
xchg
insl
push
sbb
fldcw
mov
push
aas
mov
mov
gs
adc
sbbl
lcall
jb
sub
pusha
mov
push
mov
loope
inc
mov
jbe
mov
adc
test
iret
and
fs
mov
imul
js
xchg
mov
mov
lcall
and
outsb
push
sbb
push
mov
cmpsb
push
xor
or
push
in
jl
loopne
mov
xor
pop
pop
daa
scas
inc
test
dec
xchg
mov
fxch
cmp
rcl
lcall
daa
add
pop
fmuls
fsubs
or
fcoms
push
and
jae
push
add
call
sbb
ficompl
pop
lods
adc
ficoml
mov
orb
add
adc
arpl
es
mov
data16
in
mov
nop
fisubrs
fwait
mov
cs
loop
sub
mov
push
fidivl
fwait
ja
outsl
hlt
mov
mov
mov
repz
out
mov
mov
mov
sub
pop
ss
mov
cli
aad
lahf
or
iret
aaa
nop
dec
mov
lahf
div
xchg
cmp
data16
mov
dec
lahf
cltd
cltd
xchg
enter
int
mov
xchg
shl
mov
sbbl
jecxz
sbb
pusha
dec
xchg
int
xchg
xlat
xchg
jmp
out
mov
mov
lcall
ljmp
sbb
and
cmp
dec
cwtl
aaa
xchg
scas
jp
bound
mov
sub
add
sbb
pop
fs
xchg
in
out
and
ds
bnd
xchg
sbb
pop
rcll
cmp
gs
pop
popf
nop
mov
dec
mov
cmp
xchg
mov
fldenv
pop
cvtps2pi
jno
popf
sbb
dec
imul
insl
push
es
insl
cs
jns
imul
push
pop
aas
fsts
jbe
clc
add
lods
inc
mov
cmpsb
out
repz
pop
sub
int
rcll
inc
in
cli
enter
or
ret
jmp
jae
out
dec
xor
cld
mov
dec
or
pop
push
push
jb
sub
inc
push
stc
or
sbb
cmp
push
mov
cwtl
stc
or
xlat
inc
sar
pop
arpl
and
mov
ret
ljmp
mov
fnstsw
jno
xchg
jne
xchg
fistl
push
pop
and
sbb
cltd
sbb
fimull
jp
test
or
test
pop
pop
lods
stos
popf
or
idiv
jo
sbb
cmp
add
insl
int3
das
or
loopne
sbb
icebp
push
push
mov
adc
cld
jge
and
or
or
cmp
inc
mov
xchg
sbb
sub
icebp
pop
sbb
add
xchg
pop
push
xor
les
dec
lcall
jns
inc
mov
or
loope
rclb
add
dec
scas
rclb
xchg
loopne
inc
dec
xchg
push
cmp
jl
inc
lea
mov
mov
or
ret
add
stos
gs
insl
inc
pushf
mov
lcall
push
and
inc
cmpsl
inc
jecxz
stos
rol
pusha
push
cmpsb
jnp
and
les
xor
add
and
xlat
mov
xchg
push
aad
inc
popa
lds
daa
or
scas
test
cmpsb
iret
adc
adc
js
in
sub
fcmovb
ret
and
sar
cmpsb
sub
mov
int
mulb
adc
mov
negb
cmp
or
dec
ret
mov
sub
divb
mov
nop
sti
pop
sbb
inc
add
pop
lea
push
mov
jmp
and
int3
rorb
push
cmc
gs
cmp
push
popa
movsl
nop/reserved
aad
rclb
mov
dec
ds
inc
scas
shl
imul
mov
cmp
loopne
cmp
push
xor
sbb
sbb
addb
cmp
push
mov
inc
xor
xchg
mov
lcall
fwait
cmpsl
lds
ss
in
pop
dec
ret
ret
out
cmp
ret
sub
jg
test
inc
dec
stos
test
jl
cltd
aam
jecxz
pushf
cmp
mov
jge
jle
add
mov
push
stc
or
dec
insb
in
adc
ljmp
int
mov
pop
pop
shll
pop
push
xor
clc
insb
push
fidivs
lock
lahf
mov
ljmp
fadd
in
ret
cmp
popf
in
jmp
add
push
fisubl
insb
mov
jecxz
repz
or
loopne
inc
fisubs
out
roll
out
stos
dec
xchg
xor
imulb
sub
jno
ljmp
dec
and
orl
mov
fwait
mov
cmc
cltd
decb
mov
xchg
cmpsl
push
mov
popf
les
or
addr16
js
xor
pop
ret
or
scas
jle
sbb
aam
shl
mov
push
inc
sub
incb
int
je,pn
stos
int3
hlt
mov
fisubs
movsb
int3
add
aad
push
scas
dec
inc
loope
rcl
arpl
idivb
out
cmpsl
icebp
sub
cli
sub
enter
sub
pop
movsl
scas
hlt
movsb
ss
repnz
and
jecxz
xchg
push
mov
jecxz
in
scas
stos
cmp
testb
shl
lret
out
hlt
xchg
inc
sbb
adc
pop
ds
sahf
lcall
roll
lret
lock
pop
sub
lods
sub
jmp
and
dec
mov
dec
lods
jge
adc
mov
adc
pop
nop
rcr
repnz
jge
std
xchg
imul
xor
aad
ljmp
cld
bound
std
mov
cmp
or
lock
mov
add
ret
xor
in
xor
or
xor
pusha
movb
cli
dec
fistpll
add
jl
xchg
inc
rcrb
mov
iret
xor
pop
ss
add
pop
push
inc
shrl
adc
jo
aam
pop
sbb
imul
sub
inc
test
sub
mulb
cmpl
mov
mov
xor
push
movsb
out
lods
pop
or
mov
inc
sahf
inc
int
cmp
pushf
add
mov
in
lods
pop
ds
cltd
jl
out
add
fsubs
cmp
loopne
dec
xor
rcr
pop
or
repz
and
jg
cmp
sahf
js
add
lret
loope
adc
xor
leave
cwtl
sbb
push
dec
shlb
cs
dec
mov
insl
test
push
or
sub
in
ljmp
mov
leave
push
lock
insb
pop
inc
xchg
xchg
mov
pop
ljmp
xchg
push
mov
sahf
add
jns
mov
bound
sar
stc
notb
pop
or
arpl
js
mov
jge
xor
adc
clc
sub
or
inc
lock
movsl
outsb
repnz
pop
or
cmp
lds
ljmp
jne
rcrl
iret
roll
movb
fmuls
xor
fldl
mov
xchg
push
jp
cltd
inc
mov
push
loop
loopne
movsl
lock
jns
repz
pop
test
fistpll
pop
mov
dec
sbb
aam
xlat
pop
xchg
cmpsb
add
push
fs
sub
out
aaa
pop
push
or
sub
shlb
mov
push
subb
xchg
in
bound
lret
aaa
sbb
sbb
pop
pop
jns
les
dec
imul
arpl
dec
sbb
pushf
fwait
push
sarb
jl
test
inc
loop
outsb
xor
and
in
sbb
or
repz
insl
xchg
xor
insl
call
jo
int3
ret
mov
movsb
adc
ljmp
push
push
push
xlat
es
movsb
cmp
jbe
xchg
ret
add
xor
or
shll
xlat
push
push
ret
mov
out
sbb
sbb
mov
xor
cld
dec
sarl
jg
or
mov
pop
movsl
jp
pop
adc
push
mov
stos
loopne
mov
sub
xor
outsb
repnz
mov
or
push
vmovdqu
cmp
stc
sbb
out
ds
dec
ret
inc
cmp
add
mov
aas
and
jp
jp
jo
clc
clc
or
rcr
inc
sahf
in
jl
out
or
and
mov
lret
int3
div
mov
jae
xchg
icebp
push
out
filds
outsl
sub
inc
stc
testb
add
lret
insb
push
pop
jbe
in
or
shl
iret
pop
fs
or
mov
mov
test
xchg
fmull
push
inc
push
or
in
pop
adc
and
xor
jge
pop
or
xchg
jl
pushf
inc
mov
ds
mov
adc
jle
int
adc
push
cld
mov
fwait
push
imul
lret
repnz
andb
push
roll
imulb
es
lret
arpl
inc
xor
repz
push
mov
test
lock
add
sbb
gs
cmpsl
and
adc
jbe
dec
ss
je
loop
nop
lds
lret
lahf
jmp
push
sar
imul
pushl
jnp
aad
out
xor
or
cmp
bound
cmp
xchg
pop
push
pop
in
xor
mov
add
pop
jo
roll
cld
data16
adc
sahf
repz
push
es
push
in
cmp
neg
and
sti
jle
mov
int
lcall
and
lahf
cmp
je
in
lahf
fwait
mov
add
ret
lods
mov
sbb
jns
rol
repz
loope
sbb
test
sahf
jae
mov
je
sbb
xchg
cmc
xor
pop
mov
imul
adc
dec
dec
testb
stos
mov
sbb
mov
cmpsb
mov
adc
add
pop
or
insb
mov
push
test
addr16
insb
mov
dec
mov
sub
clc
lock
cli
ss
push
loop
fs
xor
mov
xor
xchg
test
or
xchg
push
hlt
jg
and
out
cmp
jnp
aad
jnp
fidivs
adc
xchg
add
pop
daa
arpl
jp
jmp
push
fidivrs
stos
mov
xchg
mov
fdivrs
divb
mov
jmp
xor
js
jg,pn
arpl
xchg
js
dec
scas
jbe
cmp
loopne
nop
cmpsl
fsubl
cmpl
aaa
pop
and
shr
mov
nop
fcmovne
rorl
push
add
andl
push
flds
sub
inc
and
push
dec
pop
shrb
out
popa
lods
adc
mov
adc
pusha
mov
arpl
iret
jne
mov
pushf
lods
sbb
js
stos
push
xchg
xchg
in
add
xchg
add
js
fsubr
lcall
cmpsb
je
int
dec
popf
adc
in
xchg
jle
xchg
adc
subl
inc
adc
imul
or
nopw
ret
or
and
lods
pop
jmp
cwtl
lock
jnp
mov
jmp
and
lods
jne
pop
lret
rcll
repz
dec
xchg
pop
xlat
push
adc
add
lock
xor
push
ja
notl
les
idivl
in
xchg
adc
loope
ret
push
sbb
test
je
push
cmc
fsubs
inc
dec
dec
cmp
aad
mov
into
sub
repnz
jge
mov
xchg
sub
cwtl
dec
and
xchg
pop
data16
adc
iret
mov
push
ret
mov
sbb
lea
mov
ja
arpl
and
cmp
hlt
lods
add
repz
lcall
loopne
lds
adcl
je
mov
outsb
push
mov
xor
and
mov
push
xlat
dec
in
pop
cmc
ja
dec
mov
es
pop
insb
call
jecxz
out
inc
jl
in
adc
mov
lret
test
xor
cmp
fsubl
add
adc
popf
jno
add
ds
push
jle
ds
cmc
loope
and
sub
rcrb
cs
mov
ss
or
xchg
mov
out
js
sbb
jo
add
dec
fsubrp
mov
es
in
aam
sbb
pop
cltd
xchg
inc
pop
mov
shll
xchg
addr16
push
adc
je
xlat
and
fs
push
dec
arpl
bound
rcrb
jle
cmp
xor
mov
sub
les
pop
sub
cmp
imul
fstp
mov
sub
shrb
mov
pop
pushf
sub
mov
adc
hlt
pusha
and
movsb
jne
xchg
imull
int
nop
addr16
lea
push
sub
mov
jb
jnp
in
mov
das
cmp
cli
lds
cmpsl
sbb
mov
jecxz
push
jae
or
add
lea
popf
insl
jne
jmp
repz
mov
dec
std
jle
sar
adc
fadds
das
scas
aad
ret
ret
cmpsl
or
mov
in
inc
cmpsl
pop
lods
std
out
jb
dec
xor
push
in
add
fsubr
adc
mov
ret
jge
add
mov
loopne
lods
int
push
loop
xor
out
stos
xchg
push
negb
cwtl
aas
call
lods
mov
js
pop
xchg
jno
inc
xchg
insl
fildl
fcoms
stc
lock
cli
out
outsb
imul
movsl
or
faddl
test
ret
adc
jge
test
jae
pop
mov
nop
pop
xor
repz
iret
incl
insl
adc
arpl
aas
mov
icebp
xchg
or
xor
mulb
mov
jecxz
adc
xchg
adc
sbb
sti
ret
lods
imul
inc
cmpsb
mov
fs
xor
mov
cmpsb
repz
xchg
arpl
mov
push
jae
mov
and
cmp
xchg
lret
lret
lock
lcall
in
movsb
adc
or
cld
in
sbb
cmp
push
push
xor
gs
daa
xorb
jb
mov
in
jmp
gs
call
pop
jge
dec
push
insl
hlt
dec
xor
pop
mov
sub
xchg
sbbl
pusha
or
pushf
cmp
ss
out
aaa
loopne
jg
cmp
jge
pop
lahf
inc
in
sbb
ljmp
pop
ret
rcrl
jno
icebp
test
js
and
add
xchg
je
stc
push
xchg
xchg
hlt
mov
out
inc
jb
lea
or
pop
mov
jge
fs
movl
xor
out
lahf
mov
jae
or
jmp
fisubrs
insl
inc
xor
outsl
pushf
movsl
outsl
sub
rorl
inc
out
cmp
test
mov
aad
push
or
testl
movsb
mov
dec
mov
cmp
xchg
mov
add
jnp
lret
gs
sbb
mov
dec
aam
in
xchg
cmpsl
insl
mov
rcll
sub
fmul
leave
jle
es
pop
cli
pop
sub
inc
and
sahf
cli
push
ret
jmp
pop
cmp
pushf
xor
mov
in
stc
or
sti
pushl
mov
mov
mov
push
lret
pop
adc
inc
imul
pop
lret
mov
adc
rep
mov
pop
fbstp
pop
sub
inc
cmpb
test
icebp
pop
shr
cmpsl
add
lcall
inc
mov
test
leave
inc
mov
mov
clc
loope
addr16
or
icebp
add
clc
dec
loop
test
mov
js
subb
lahf
cmp
xor
fisubs
push
mov
sbb
orl
xor
jae
data16
mov
ja
stc
cmc
ret
mov
aad
sub
jmp
sub
or
jo
icebp
push
pop
jne
push
add
ds
inc
sub
push
fsubl
cmpsl
push
dec
inc
pop
popf
nop
daa
xchg
mov
pop
hlt
loop
test
loope
mov
sbb
cli
mov
hlt
cwtl
jb
loope
pop
xchg
cltd
sbb
bound
enter
scas
mov
mov
add
aam
adc
aaa
jmp
insl
clc
mov
mov
aas
mov
lds
xchg
aaa
testl
cmc
fwait
jg
nop
fistl
xchg
enter
mov
js
fldcw
add
or
jp
insl
lock
mov
or
fisttps
push
push
push
mov
xorl
push
lret
or
repnz
lcall
adc
mov
cmp
fldl
jne
add
adc
orb
loopne
or
sbb
mov
pop
out
sbb
divb
arpl
sbb
mov
aam
out
mov
and
adc
xchg
adc
jmp
cmp
and
ret
dec
js
jmp
xchg
push
movsb
shr
jne
mov
lcall
xor
ljmp
mov
lds
mov
push
pop
push
and
ss
xchg
mov
jecxz
fstps
or
xchg
leave
mov
adc
pop
jecxz
or
jg
jno
fadds
mov
nop
sbb
mov
out
out
fsts
jbe
jg
stos
or
dec
fs
push
mov
inc
or
push
sub
shlb
xchg
jnp
repz
outsb
rcrl
push
fldl
nop
fucomp
insl
fwait
and
in
aad
call
cmp
sbb
nop
shrb
mov
inc
repz
and
mulb
dec
test
cmpb
lds
jno
adc
stc
insl
inc
cs
insl
push
or
lahf
jae
push
scas
mov
into
and
dec
pusha
bound
mov
jae
ret
mov
jb
mov
cmpsb
test
mov
cmp
das
xchg
fs
adc
pop
push
and
or
xor
mov
mov
cmp
jp
mov
test
cmpsl
repz
fwait
addb
dec
push
push
or
mov
aas
andb
ret
xor
xor
dec
push
addb
leave
in
and
popa
jg
mov
mov
mov
inc
sbb
or
std
loope
movsl
idivl
fdivrl
push
pop
mov
mov
and
outsl
int3
dec
int3
inc
push
mov
in
stos
loope
inc
lret
mov
in
dec
mov
fwait
in
mov
pushf
lcall
lret
loope
sbb
das
cmpsl
dec
mov
jb
sub
gs
jmp
loopne
test
inc
pop
inc
adc
pusha
movsl
dec
insb
add
repnz
jecxz
mov
repnz
sti
clc
sub
in
sbb
insb
sub
hlt
adc
inc
or
jg
push
dec
push
shl
aaa
test
jl
jge
jno
pop
mov
pop
and
sbbb
xchg
push
mov
sarl
test
jmp
add
adcb
dec
sti
sbb
cmpl
cltd
mov
or
mov
mov
in
dec
mov
mov
mov
cltd
mov
add
sbb
mov
out
push
inc
and
fs
movsb
sub
or
fcmove
push
out
testl
mov
out
loope
push
mov
adc
mov
cmp
orb
mov
push
or
xor
add
pushf
mov
mov
mov
pop
push
les
push
mov
pop
je
dec
sbb
rorl
cmpsb
inc
cld
xchg
out
jno
mov
sar
pop
insb
and
push
push
loope
add
pop
into
stos
out
ds
dec
es
xor
rolb
jo
dec
push
cmpsb
cwtl
inc
jg,pt
xor
dec
push
adc
xchg
push
xchg
xchg
xchg
jge
rcr
idiv
imul
lods
movsb
inc
pop
loopne
pushf
ds
sbb
cmp
xchg
sub
daa
pop
jno
cmp
cmp
into
enter
repnz
xor
stc
movsl
mov
ja
xor
dec
cltd
cmp
jl
lcall
sbb
xorl
aaa
add
flds
push
daa
or
cmpsl
cli
xchg
inc
mov
clc
cmpsl
and
popl
mov
sti
push
jp
lds
push
push
stc
mov
stc
icebp
mov
add
adc
out
es
and
push
pmulhuw
lcall
or
lods
roll
call
sahf
hlt
ljmp
sbb
push
stc
mov
adc
mov
leave
or
addr16
xor
add
xchg
fld1
pop
mov
test
push
lss
sub
xor
mov
enter
icebp
jae
mov
jp
sbb
clc
fstps
dec
xchg
std
jmp
adc
clc
leave
mov
clc
xor
outsb
sbb
aaa
push
sub
stos
pop
jne
repnz
into
sbb
mov
xor
xchg
add
sub
and
pop
in
dec
add
out
xlat
mov
xchg
sub
mov
mov
push
sbb
pop
fwait
mov
pop
or
xor
pusha
or
int3
mulb
dec
pop
mov
xorb
mov
ret
mov
mov
movsb
cmp
lds
jge
cltd
pop
cmp
xchg
jb
and
scas
add
jae
or
clc
stos
ja
andl
mov
xlat
push
xor
cmpsl
dec
push
sub
xor
repnz
and
clc
xchg
and
push
in
xor
xchg
lds
dec
mov
ljmp
jo
xchg
in
add
ds
incb
xchg
xlat
mov
ret
das
aas
dec
xchg
push
xchg
test
in
pushf
adc
adc
sbb
test
nop
das
mov
add
scas
xchg
pop
pop
inc
cmp
adc
imul
jle
je
push
and
pushf
and
cmp
ret
mov
mov
test
push
push
imul
insl
jmp
sbb
push
dec
pop
xchg
das
stc
jae
mov
fldenv
pushf
iret
pusha
cld
filds
xor
pop
pop
enter
les
out
mov
out
outsb
scas
insl
dec
sbb
in
sbb
pop
cmc
lods
cmp
testl
ror
mov
cmp
data16
push
xchg
ss
sub
stos
or
sub
aam
inc
js
xlat
lods
sbb
lods
dec
and
loop
fadd
add
dec
push
sub
repz
xchg
mov
mov
shlb
sbb
repnz
xlat
out
fs
jne
pop
out
call
sahf
cmp
adc
cmp
mov
ret
mov
cld
cmp
jecxz
inc
push
sbb
mov
pop
dec
xlat
mov
push
sti
and
in
sub
push
enter
cmpsb
mul
test
xor
sbb
inc
stos
shll
out
cs
cmp
pusha
push
lods
rcrb
xchg
adc
jmp
mov
mov
mov
aam
popa
iret
dec
lret
inc
inc
dec
in
repz
push
add
inc
lahf
loopne
je
xor
pop
repz
js
out
pop
incl
push
pop
shll
jecxz
inc
loope
push
or
sub
mov
push
pop
sbb
or
xor
into
lds
idivb
test
sub
pop
mov
and
lds
inc
pop
movlps
imul
push
sub
ja
push
jp
outsl
iret
mov
dec
jno
movzwl
or
jo
aad
dec
push
jl
pop
lret
into
and
add
jp
mov
xchg
test
out
push
or
xchg
add
mov
or
stos
jbe
lcall
shr
test
enter
scas
pop
adcl
jbe
mov
insb
mov
and
xor
adc
ficoms
jge
fldt
mov
jbe
sahf
mov
rcrb
and
dec
push
stos
adc
xchg
hlt
negb
and
sti
fmuls
adc
and
push
mov
cmp
cmp
scas
scas
sbb
cmpsb
sbb
lcall
and
ss
fdivs
cs
jnp
sahf
bound
or
pop
into
dec
jle
adc
or
inc
outsl
ja
aas
or
dec
sbb
adc
dec
and
push
jp
pop
popf
push
push
dec
push
xchg
ljmp
mov
jbe
xor
jae
fiadds
mov
orl
mov
loop
popa
test
lods
pop
xchg
jg
repz
mov
xor
scas
cmp
je
fstpt
cmpsb
test
cmp
lcall
clc
pop
xchg
inc
repz
shll
pusha
mov
js
jns
jle,pn
gs
aad
jno
sub
sub
xchg
push
pop
outsb
sbb
cmp
notl
push
jecxz
enter
movsl
inc
xchg
mov
fwait
cmp
shr
ja
inc
std
mov
push
dec
inc
or
pop
push
adc
ret
adc
push
cltd
adcb
shl
mov
addr16
xor
mov
cmp
dec
aad
cld
jo
mov
mov
jae
cmp
into
imul
leave
inc
dec
outsl
and
cs
fimuls
in
aam
xchg
or
sub
inc
aaa
movsb
add
clc
lods
cmp
aaa
out
aas
jl
inc
inc
call
xchg
leave
int3
sarl
mov
imul
mov
pop
jmp
adc
pop
mov
inc
shll
pop
push
push
lret
push
sbb
mov
loop
adc
push
lds
cld
jg,pt
push
leave
iret
mov
cwtl
push
lcall
mov
sbb
inc
bound
fidivrs
mov
and
repnz
into
filds
in
arpl
cmp
jb
bnd
sbb
mov
dec
pop
xor
jl
aaa
dec
sub
in
jl
lock
and
cwtl
xor
mov
or
hlt
loop
add
xor
stos
clc
or
int
adc
add
aaa
test
mov
jnp
pushf
loop
pop
popa
xchg
add
mov
in
mov
push
out
sub
cmp
test
push
jbe
mov
cmp
cmp
inc
stc
out
scas
enter
test
dec
mov
div
aas
mov
out
push
xor
ret
pop
rcrl
call
sub
ja
push
and
out
pop
cmc
bound
or
iret
inc
ret
push
outsl
es
movsl
push
bound
mov
sbb
cmpsl
sbb
outsl
or
stos
lea
sbbl
push
mov
scas
xchg
rol
pop
fdivrl
scas
inc
rcr
enter
filds
sbbl
and
adc
and
pop
xchg
jbe
hlt
repz
stos
pop
inc
inc
out
ret
sahf
sbb
lods
insb
hlt
sub
fcmovnb
mov
and
xor
sub
or
sub
call
into
popa
nop
dec
or
cmp
jl
mov
adc
xchg
call
mov
dec
rorb
ja
rcrl
inc
dec
or
or
cld
ds
lods
test
jo
push
jae
pop
push
mov
xchg
jo
into
orb
jge
loope
xchg
pop
ret
push
ss
cmp
shlb
pop
push
cld
cwtl
hlt
dec
movb
fs
mov
int3
push
in
hlt
mov
lcall
orl
ljmp
cmp
es
scas
jecxz
lcall
stos
outsl
sbb
aam
or
lea
jbe
in
mov
lods
shl
mov
sub
xchg
mov
aad
jl
push
sub
outsb
fdivs
arpl
insb
push
lds
psrld
lahf
data16
jbe
and
outsl
dec
add
mov
dec
jne
mov
lret
outsb
setne
aad
jb
add
mov
jns
sbb
sbb
sbbl
aam
mov
aaa
push
lret
pop
aaa
aas
pop
scas
mov
fs
stos
add
and
jo
out
jbe
sbb
addr16
and
pop
enter
sbb
mov
sub
inc
into
gs
adc
shll
pop
sbb
fdivl
or
call
xor
and
ss
sbbb
fucomi
jle
sub
lahf
test
and
pop
mov
jo
leave
pop
jmp
pop
sub
enter
popf
mov
pusha
cmp
mov
sub
ret
outsl
adc
pop
or
mov
in
adc
cld
lret
sub
aad
mov
rcrl
inc
stc
repnz
dec
pop
insb
push
insb
mov
js
ljmp
shll
loope
iret
sub
icebp
or
mov
les
xor
mov
xchg
test
std
adc
push
imul
cmpsl
adc
xchg
ljmp
cld
gs
nop
pop
repnz
fistps
jmp
xor
xor
dec
and
jo
cli
cmp
gs
pop
mov
leave
aas
jle
dec
push
ljmp
in
mov
in
ds
add
lock
out
bound
push
sarl
dec
test
inc
incb
jbe
pop
into
mov
mov
inc
dec
bnd
mov
mov
lock
lods
ja
xor
repz
mov
xchg
fstps
lea
cmpsb
pop
add
mov
testb
mov
xchg
cmp
jne
lahf
fwait
mov
mov
popa
dec
shrl
lods
rcrl
sbb
pop
xor
sahf
sbb
push
movsl
mov
fdiv
pop
orb
xchg
pop
jb
xchg
push
adc
jecxz
movsl
add
aam
jnp
dec
mov
push
mov
cli
add
repz
sbb
xor
inc
ret
repz
adc
mov
push
push
xor
lods
xchg
lahf
and
jl
arpl
out
xor
fidivrs
cmp
pop
sub
loopne
cld
aaa
les
mov
lret
mov
rcrl
rcr
cltd
cmp
rclb
fcmovb
xor
mov
mov
push
mov
aas
mov
rorl
dec
xchg
enter
cmp
mov
mov
and
sahf
mov
mov
lret
or
ficoml
rorb
xor
xor
roll
call
mov
jmp
scas
aaa
leave
sub
jo
mov
push
mov
outsb
popf
adc
cmc
movsb
sub
xchg
ljmp
dec
mov
xor
inc
call
fcoms
add
pop
das
test
daa
xchg
stc
add
push
and
fcomi
aaa
xchg
jae
mov
sbb
outsb
push
aam
loop
adc
pop
int
test
cmp
aam
cmp
add
shll
gs
and
inc
icebp
loop
out
sub
xlat
int3
leave
pushf
in
ds
stos
jnp
pop
dec
movsb
mov
adc
cmpsl
pop
iret
xchg
mov
in
fisubrl
cwtl
xlat
mov
gs
jns
inc
push
mov
inc
mov
jnp
add
adc
or
xchg
in
leave
loopne
push
imul
jo
jb
fcompl
add
jnp
fmull
mov
jo
out
cld
dec
adc
sbb
imul
jg
dec
sub
call
cld
add
fwait
mov
adc
xchg
andl
mov
inc
jg
or
push
jle
shrl
mov
jnp
xchg
add
jbe
sbb
shl
test
pop
in
inc
jb
movsb
push
ljmp
mov
inc
adcl
xchg
pop
std
or
add
xor
push
lods
loope
jp
test
sub
sbb
out
lcall
xchg
and
mov
int
fwait
ja
push
sbb
leave
mov
test
cmpsb
sbb
mov
cmp
aad
mov
cmc
dec
xchg
jmp
nop
lcall
daa
lods
imul
adc
shrb
inc
fbld
adc
mov
cmp
movsl
mov
sub
out
mov
xor
popa
inc
test
mov
xor
sub
je
sbb
mov
pop
in
or
loope
xor
movq
jle
sub
cmp
in
fucompp
aas
sub
inc
adc
xor
ret
jb
les
push
mov
sub
inc
or
repz
out
jle
mov
out
pop
sub
cmp
cwtl
int
add
out
loopne
insl
cltd
fiaddl
push
pop
xchg
jnp
decl
insb
xor
sti
std
call
rcrl
sub
cmp
movsb
mov
pop
subl
or
gs
stos
iret
push
sbb
jecxz
add
inc
jecxz
sbb
lds
sbb
xchg
jp
mov
out
dec
inc
pop
mov
std
addb
les
lea
xchg
jae
xor
dec
mov
sbb
bound
in
bound
cmp
jo
inc
ror
dec
mov
hlt
lea
into
xor
mov
xchg
jo
inc
mov
rcrl
pop
aaa
subl
stos
sahf
inc
sub
inc
pop
inc
ret
xchg
movsl
push
rcll
push
rorb
mov
sub
mov
pop
sar
divb
jecxz
jbe
push
jae
lods
fiaddl
lock
sub
call
fcomp
xchg
push
and
jmp
dec
notl
push
out
jp
mov
inc
xor
outsl
sbb
pusha
je
nop
fcomip
ret
in
cmpsb
sub
adcl
in
or
jge
or
sub
push
repz
shlb
in
and
popa
testl
repz
mov
cltd
sti
enter
cmp
frstor
fadds
pop
sub
shr
clc
push
dec
push
ret
and
shl
icebp
sbb
adc
jecxz
mov
push
mov
in
int3
and
push
push
jmp
popl
enter
jno
data16
daa
in
xlat
imul
dec
in
scas
inc
mov
push
inc
pop
inc
add
pop
hlt
test
imull
test
mov
in
imul
jo
and
ret
cmp
es
movsb
mov
dec
lcall
adc
cwtl
aam
aas
dec
aam
imul
rcrb
ds
orb
pop
xor
test
jo
mov
pop
rol
xchg
pop
fcomps
leave
jae
and
mov
sbb
pop
and
or
xor
sbb
mov
add
imul
lods
bound
arpl
rolb
repz
jp
loope
lahf
pushf
cmp
jmp
adc
pop
insl
xor
cs
push
pushf
add
push
in
shl
test
repz
test
call
fsts
imul
xor
data16
aam
adc
enter
rcrb
hlt
adc
test
andl
adc
mull
xchg
das
ret
adc
and
pop
mov
popa
hlt
xlat
and
test
xlat
out
ret
imul
dec
mov
je
pcmpgtb
add
jmp
outsl
cli
inc
sub
aas
pop
inc
aam
cmp
lcall
and
cld
ret
or
mov
repz
pop
test
cs
dec
sbb
std
loopne
xor
in
push
aaa
sbb
xchg
adc
test
cmpsl
adc
test
test
nop
mov
scas
pop
iret
in
jbe
mov
sti
ljmp
sti
adc
cltd
test
dec
and
and
stc
insb
lret
push
fs
pop
sub
int3
sub
dec
add
jo
jb
jno
jp
xchg
xor
hlt
outsl
xor
fcompl
inc
mov
dec
xchg
adc
sub
xor
xchg
sbbb
push
fldt
adcl
push
push
jns
adc
cmpl
add
aaa
sub
dec
cmp
sahf
mov
mov
scas
int3
sbb
jge
mov
mov
arpl
pop
dec
sbb
pop
xor
sub
pop
sbb
aas
sahf
mov
dec
adc
inc
xchg
fdivl
dec
imul
push
xchg
sub
inc
cld
popw
adc
repz
cmp
out
sbb
xchg
imul
hlt
cmp
xor
sbb
fwait
aad
xchg
mov
adc
dec
jae
stos
movsl
pop
movb
ljmp
sti
call
jl
sbb
dec
repnz
sub
push
je
mov
imul
cli
push
mov
sub
dec
daa
sub
arpl
push
mov
lds
fwait
sahf
dec
add
add
enter
imul
rorl
mov
or
pop
mov
gs
bound
pcmpeqb
push
scas
imul
xchg
mov
xor
cmp
idivb
adc
push
stos
nop
test
xchg
orl
in
aad
dec
sbb
sub
ja
pushf
pusha
push
dec
sub
and
and
push
dec
push
js
enter
cmp
push
in
aas
mov
popf
imul
ret
sti
or
push
jae
xchg
stos
mov
out
mov
adc
das
sbb
mov
stos
mov
push
push
add
xchg
popf
cwtl
and
inc
mov
int
pop
push
add
fnstenv
push
or
lahf
leave
mov
and
out
sarl
lret
int3
popf
insb
or
cmpsl
ljmp
dec
xchg
imull
xchg
xchg
cmpsb
es
cmp
daa
cmp
push
add
dec
inc
or
push
push
clc
cmp
pop
mov
push
push
mov
das
sub
xor
push
lock
add
out
lret
xchg
jns
pop
mov
sbb
stos
adc
add
call
pop
cmp
cmpsb
mov
int
or
imul
dec
in
cld
dec
or
aad
arpl
mov
xchg
in
stos
fbld
xor
push
jmp
xchg
std
into
sub
cmp
xor
xchg
xor
pop
outsl
inc
and
cmc
leave
mov
mov
push
aas
xchg
sbb
add
nop
xchg
shll
aam
mov
rcll
dec
pop
push
in
leave
mov
sbbl
es
inc
push
mov
jns
cli
inc
inc
pop
shrb
sub
sub
mov
sbb
xor
ja
mov
pop
dec
ficoms
or
test
mov
stc
sbb
cli
xlat
test
inc
sbb
out
ljmp
pusha
mov
pop
lds
aaa
fildll
add
leave
popa
xchg
mov
dec
scas
cmp
xor
in
les
mov
enter
cld
clc
leavew
stc
add
enter
lock
lods
and
sub
xchg
jmp
inc
mov
xchg
cld
in
pusha
rolb
frstor
add
ret
test
into
add
pop
dec
fldl
cs
mov
ljmp
clc
jp
push
loop
lea
mov
or
sbb
popf
cmp
imul
out
cmpsl
xchg
cmp
xchg
jne
push
aad
lcall
in
xchg
and
mov
mov
add
lahf
ss
sbb
testb
lea
or
outsl
jae
push
inc
mov
mov
or
loop
sbb
sbb
movsb
stc
mov
insl
jl
fs
sub
cmp
pushf
mov
add
or
lret
cmpsb
loope
lock
out
stc
js
dec
cs
sbb
pop
pop
int
clc
lret
ja
imul
push
xchg
subl
in
fwait
lock
xchg
dec
push
insb
cmc
jns
fdivs
cld
xchg
test
int3
daa
roll
out
in
and
push
fstpt
jno
add
inc
or
or
mov
jecxz
fs
mov
jecxz
cwtl
mov
mov
pop
daa
xlat
aaa
mov
inc
stos
into
adcl
cmp
sub
or
stos
addb
adc
loope
dec
adcl
call
stc
or
daa
mov
dec
mov
adc
lods
stos
add
cli
out
add
into
lods
popa
add
ss
mov
cwtl
repz
jne
jmp
xchg
and
daa
hlt
cmp
ds
in
shll
mov
pusha
insl
test
lods
sbb
push
in
or
rcrl
sub
dec
cli
push
fmuls
mov
lea
xchg
push
enter
leave
repnz
push
mov
push
lea
es
dec
lods
sahf
call
aad
mov
scas
stos
fldl
or
dec
mov
ds
mov
out
or
jo
shrb
testl
mov
sbb
fwait
xor
mov
hlt
or
dec
aaa
pusha
xor
lret
outsb
pop
imul
xchg
ret
push
icebp
sbb
add
out
fsubrl
pop
aas
test
mov
or
and
aaa
push
xor
lret
notb
jge
sbb
and
add
fstl
push
pop
fwait
jne
loopne
setne
ret
movsl
inc
lods
movsl
mov
repz
push
inc
pop
clc
stos
sbb
mov
mov
or
mov
fimull
sti
pop
or
push
in
cmp
push
pop
out
adc
cmp
leave
sahf
call
clc
lcall
push
wbinvd
inc
inc
mov
lret
sub
sbb
push
inc
mov
cmpsb
fsubrs
sbb
out
ja
inc
lds
popa
pop
xchg
cmp
sbbb
lods
push
xchg
repz
push
inc
mov
jl
popf
or
fildll
mov
or
shlb
fsubl
les
push
idivl
addr16
fcoml
or
inc
cmc
ja
fisttps
mov
subb
or
mov
fstpl
add
clc
adc
xchg
ds
xor
adc
xchg
sbb
prefetcht2
cmp
mov
pop
inc
jo
mov
xchg
sbb
push
xchg
jge
pusha
mov
cmpsb
je
cltd
ss
dec
push
cmp
movsl
ror
stc
ss
loop
data16
mov
ljmp
jae
jne
jbe
jge
jns
mov
cmp
ds
sbb
inc
fld
fisubs
movhps
out
sub
mov
jns
ss
in
pop
jo
test
push
or
inc
adc
test
js
loope
scas
xor
mov
es
loop
sarl
jo
jg
pop
in
cmp
shll
and
scas
ds
pop
push
leave
push
data16
xchg
loop
pop
inc
mull
repz
jb
xor
mov
imul
icebp
test
xchg
lods
cmp
imulb
mov
mov
adc
mov
adc
ljmp
mov
hlt
lods
mov
xchg
xor
or
xchg
pusha
loope
aad
mov
popa
dec
lahf
or
cmpsl
pop
movsb
push
xchg
inc
jmp
ret
cmpsb
inc
icebp
jg
inc
or
xchg
test
icebp
cli
mov
pop
xorb
out
sti
je
inc
iret
mov
pop
xor
inc
dec
jnp
es
nop
xchg
jmp
pop
push
ljmp
jbe
xchg
mov
sub
insb
jae
call
xor
jo
and
aas
aad
dec
bound
add
mov
add
cltd
sub
sbb
push
scas
nop
mov
cli
mov
rcl
and
stos
inc
mov
sbb
xchg
mov
xchg
into
stc
adc
int3
cmp
sahf
jbe
lods
cmc
cmpsb
inc
mov
out
add
xchg
mov
sub
adc
call
mov
sbbl
mov
cmpsb
mov
repz
pop
pop
push
push
loopne
xor
and
mov
sti
cld
pop
test
daa
mov
movsl
add
pop
stos
in
enter
sub
mov
push
cs
push
and
inc
push
sbb
sbb
mov
pop
test
test
stos
push
fnstsw
jae
pop
mov
xlat
shlb
iret
mov
push
pop
pushf
xor
lods
out
and
in
lahf
aas
shlb
mov
fimull
mov
push
fwait
cwtl
gs
mov
pop
add
in
push
daa
and
sub
pop
adc
mov
sbb
inc
in
cmp
sub
dec
cltd
lcall
add
lods
cmp
cmp
jp
outsb
mov
cltd
pop
cs
jl
pop
bnd
push
addr16
jb
inc
mov
or
iret
xchg
cmpsl
xor
in
int
inc
sub
xor
nop
sbb
mov
aam
xlat
aaa
pop
in
pop
es
rclb
xor
notl
pop
xchg
clc
add
pop
shl
add
push
mov
add
cmpsl
inc
and
outsb
adc
hlt
add
fucomi
xchg
mov
insb
adc
imul
xchg
jp
jle
aad
xlat
into
mov
push
sub
insl
mov
mov
lret
fisubl
push
cmc
in
xor
mov
or
dec
cmpsb
add
fsubrp
mov
adc
jg
add
adc
movsb
push
lods
cwtl
jne
inc
in
jp
sub
dec
ds
jb
orb
sbb
ds
shrl
cmp
and
int3
push
pop
and
push
jl
cmp
cwtl
add
sbb
cmpsb
push
fisubrl
inc
nop
inc
mov
sbb
roll
jae
xor
sub
dec
sub
fdivl
es
mov
cmp
add
jmp
or
or
dec
cwtl
ret
out
sbb
lods
push
insb
dec
je
popa
sbb
ja
or
dec
imul
fidivrl
subl
inc
sub
cmp
fisttpll
pop
cmp
or
cmp
adc
fidivrs
adc
sub
pop
jnp
jns
cwtl
jns
lret
ss
stos
pop
pop
mov
ja
orl
inc
jbe
xchg
mov
adc
pop
fptan
lret
inc
add
jg
adc
neg
add
add
cmp
cmp
jne
or
xchg
shrb
and
fldl
xchg
in
les
mov
add
jp
repz
out
jecxz
pop
jnp
xchg
rol
fs
sub
mov
lods
bound
popf
xchg
mov
lock
les
mov
shlb
mov
sub
inc
xchg
out
iret
jge
push
js
inc
mov
lods
mov
cmp
es
jns
pop
das
mov
inc
stc
imul
pop
jge
push
insb
outsl
fsubrs
cmp
fs
jp
leave
rorb
adc
fidivrs
jne
jmp
mov
mov
xchg
out
mov
pop
adc
imul
cmpsb
and
loope
loope
pop
xor
fisubl
test
cld
jl
xlat
out
filds
jecxz
mov
lods
sbb
xchg
jge
mov
mov
push
dec
inc
add
iret
jae
int
dec
xchg
or
mov
dec
ja
es
arpl
rcrl
jp
mov
xor
mov
bound
adc
stos
repz
mov
fistl
lret
fdivr
pop
adc
sbb
sub
jecxz
jle
jl
cs
in
adc
cmp
loopne
xorb
inc
mov
dec
pop
ds
mov
les
jbe
stc
dec
fcomp
inc
leave
and
sub
idivl
movsb
pop
lods
in
aam
hlt
cmp
push
in
push
jmp
iret
dec
sti
inc
adc
stos
cmp
in
jne
pop
ljmp
in
jbe
mov
jle
or
repnz
inc
int3
aam
pop
push
jp
and
push
jmp
dec
xor
push
and
hlt
or
dec
fsubl
mov
push
or
cmp
shll
dec
mov
jmp
mov
fdivl
js
add
xchg
pop
jmp
in
scas
out
sahf
subb
and
mov
mov
scas
popa
pop
add
mov
jb
sub
lods
mov
fildll
cli
test
mov
push
inc
mov
and
repnz
xchg
dec
xchg
nop
xlat
call
leave
les
orb
mov
out
mov
jge
imul
test
clc
pop
mov
ret
sbb
jle
clc
jb
cmpl
push
loopne
cmp
mov
fwait
push
popf
dec
das
pop
or
cmp
mov
ficompl
or
cmp
mov
xchg
testb
dec
xchg
ret
xlat
mov
int3
xlat
ljmp
fnsave
jbe
test
out
pop
xchg
and
xlat
cld
sbb
call
ficoms
mov
enter
xor
movsl
mov
mov
pop
push
jne
fcompl
insb
cmp
xchg
outsl
sub
mov
pop
stc
mov
arpl
mov
xchg
lock
or
in
je
insb
mov
pop
maxps
mov
cwtl
pop
and
mov
repnz
cmc
mov
or
jne
nop
sub
sub
mov
push
sbb
sbb
xchg
and
pop
xorb
ds
fstpt
sahf
lahf
xor
ja
fsubrl
adc
inc
mov
xchg
lock
ror
rol
mov
xchg
scas
jno
jne
cwtl
scas
sbb
aam
add
pop
dec
daa
sub
or
sahf
subb
pushf
xchg
xor
mov
dec
push
je
xchg
jae
xchg
aas
and
lret
xchg
add
sbb
inc
and
notb
rol
sbb
cmpsb
test
aam
sti
idivl
and
xchg
xchg
and
pop
fildl
add
sti
and
test
or
outsb
loope
adc
push
jle
clc
dec
mov
fwait
mov
test
lret
fldl
loopne
add
dec
les
pop
add
enter
mov
dec
mov
xchg
loope
pop
imul
push
repnz
pop
ja
fimuls
push
loop
jp
jb
mov
dec
pop
arpl
mul
shrb
cmp
cmpsb
adc
sbb
leave
scas
in
xchg
js
jb
inc
jb
sub
mov
jae
push
add
or
out
cmp
rcll
xchg
mov
or
fnstcw
add
movsl
sbb
inc
repnz
mov
shl
mov
xchg
add
fs
fstpl
lock
faddl
and
dec
mov
adc
test
insb
clc
std
stos
push
cmpsl
int
add
shr
jp
js
ret
aas
xor
and
mov
outsl
test
shrl
jle
lds
ja
lock
shlb
sbb
mov
xchg
ljmp
outsl
jmp
inc
cmp
xor
fstl
xchg
pop
cmpsb
pusha
test
out
adc
iret
nop
insb
jb
aaa
inc
cmp
jns
int3
add
jp
cmp
dec
push
loope
movsb
sti
lds
roll
cmc
xchg
inc
lret
fisubs
in
push
iret
aas
out
loopne
dec
add
cmpsl
adc
pop
outsl
inc
inc
js
adc
in
andl
mov
dec
movsb
xchg
mov
iret
lods
dec
and
int
dec
imul
mov
mov
out
std
aad
shr
sahf
inc
scas
cmovae
lret
mov
lret
jne
mov
dec
sbbb
cmp
fcoms
xchg
sub
mov
iret
imul
pop
mov
add
arpl
dec
dec
and
jnp
and
add
jmp
dec
sub
sub
pop
mov
rcrl
es
stc
std
add
xlat
add
fidivl
nop
add
shr
popa
fnstcw
sbb
xlat
mov
jb
cs
push
pop
pop
pushf
in
rolb
xchg
test
pop
lds
or
jnp
xchg
neg
xchg
push
mov
jle
mov
inc
jne
pop
pop
mov
cmp
sub
cs
cmp
jmp
subl
addl
or
mov
pop
jp
inc
inc
rorl
orl
or
xor
enter
mov
lret
int
repz
or
or
jmp
pop
cmp
movsl
nop
in
aam
fs
push
jge
jle
pushf
adc
and
jnp
add
jge
fisubl
mov
dec
es
insb
push
shrb
in
std
pop
fdivl
mov
mov
dec
rolb
and
pusha
add
dec
rorb
cwtl
movsb
outsl
or
mov
out
mov
sub
sub
dec
and
testb
in
cltd
sbb
push
icebp
scas
pop
stos
push
in
cmp
lahf
inc
inc
fcoml
adc
pop
imul
mov
add
xchg
aaa
jmp
repz
lds
mov
out
add
xor
aaa
sbb
test
sub
add
dec
jmp
sub
push
lea
ficomps
mov
loopne
mov
lahf
nop
daa
ficoms
cmpb
mov
inc
cmpsl
sbb
inc
fdivrp
sub
into
add
xor
jo
cmpsl
fs
fidivrs
icebp
hlt
shll
in
pushf
push
insl
add
lods
mov
jp
hlt
pop
mov
outsl
jmp
aas
mov
into
jae
out
movsb
jg
bound
aad
xor
cmp
mov
dec
fisubl
inc
test
push
push
inc
or
inc
dec
mov
or
and
xor
frstor
mov
adc
xchg
mov
repnz
xor
cs
ret
jle
add
sub
rorb
pmaxsw
arpl
fucomip
popa
lahf
mov
or
fwait
movsl
mov
add
sub
mov
mov
push
imull
test
push
rolb
sub
loope
push
mov
sti
fld
imul
push
xchg
sbb
jge
in
jno
repnz
pop
es
stc
pop
mov
sbb
cmp
dec
int
dec
inc
jl
mov
sbb
xchg
movsl
loopne
dec
sbb
cli
rclb
fidivs
jne
sbb
add
bound
adc
xchg
outsl
insl
xchg
call
jno
jge
cmpsb
or
lock
mov
les
adc
inc
test
aam
ret
xor
jne
push
sbb
outsb
imul
adc
push
mov
jb
cwtl
pop
out
sti
pop
fstpt
or
jne
adc
test
movsb
loope
jmp
lcall
test
cmp
adc
mov
sbb
inc
stos
or
cmp
and
or
lahf
inc
fs
pop
mov
sub
ds
jecxz
xchg
repnz
add
in
fbstp
mov
rolb
stc
inc
div
add
sarb
push
sbb
pop
popf
cmp
in
lcall
sub
ret
icebp
mov
mov
mov
into
mov
cli
add
out
add
xor
lret
mov
mov
outsb
out
or
pop
rorb
jp
xchg
xchg
lret
mov
jl
sbb
sbb
sahf
pusha
test
imul
and
arpl
call
and
aaa
gs
sbb
cmp
out
sub
adc
test
jnp
lret
inc
stos
lcall
inc
inc
repz
sti
cmc
adc
dec
or
and
mov
imul
shlb
icebp
repz
mov
mov
fcmovbe
aaa
movsb
ss
dec
jl
and
mov
xchg
xlat
add
fsubrl
jo
ja
xor
jl
jg
ret
jne
in
sbb
popf
and
aad
xchg
jp
lret
adc
fwait
nop
sub
sbbl
clc
add
enter
out
aas
dec
sub
ljmp
jmp
and
hlt
fdiv
repz
mov
in
movsl
add
fs
mov
inc
mov
pop
das
adc
repnz
stc
repnz
aam
jno
jb
in
pop
push
shl
add
pusha
push
test
loop
mov
cwtl
call
push
leave
nop
in
push
mov
add
out
xchg
lods
scas
int3
mov
lahf
pushf
mov
out
lods
outsl
xchg
pushf
movsb
shll
add
pop
out
idiv
sbb
repz
jns
jae
es
aad
lods
pusha
stos
mov
sub
pop
mov
xchg
xor
ds
orl
xchg
add
in
sahf
and
pop
add
fstpt
neg
and
fdivs
mov
out
daa
imull
jnp
sub
mov
data16
stos
mov
xor
mov
popa
mov
stc
in
fcoml
int3
inc
jo
fcmovne
fidivrs
cld
fbld
cltd
mov
lock
pop
imul
repz
mov
cmp
push
ljmp
sbb
sbb
cmc
jle
sti
sbb
jbe
stos
lcall
int3
mov
scas
pop
jge
pushf
xor
push
push
cmpsb
push
in
mov
pusha
sti
aaa
xor
pop
in
pop
in
popf
mov
push
jp
mov
test
push
data16
and
popa
inc
mov
push
add
sarb
loope
cli
cmp
mov
dec
test
sbb
jecxz
fcoms
lret
iret
or
mov
sbb
fwait
leave
jmp
cli
popa
pushf
sbb
push
in
outsb
pop
push
sbb
sub
cli
push
fdivrp
lea
pop
dec
loop
pop
adc
sub
test
loope
jbe
mov
rorb
fcmovbe
ret
inc
jp
xchg
std
fs
and
out
push
shll
insb
lahf
dec
jp
ss
mov
fimuls
clc
leave
cs
rorb
and
inc
adc
popf
cmpsl
ds
lods
push
jecxz
inc
pop
stc
push
cltd
popl
jmp
xchg
pop
fdivrs
xlat
iret
cmc
adc
xchg
jecxz
and
xor
ficoml
mov
rcr
mov
pusha
jge
mov
fstps
xor
stc
in
xor
push
hlt
rorb
jp
scas
push
adcl
sub
push
ljmp
and
int3
or
cmpsl
faddp
hlt
adc
mov
shlb
jl
push
pop
mov
add
das
and
pusha
movsb
add
or
repnz
int3
xor
icebp
sbb
sbb
and
jmp
andl
es
loope
out
scas
push
push
inc
adc
stos
adc
sbbb
mov
add
cmpsb
int3
xchg
testl
int3
lea
das
pop
xchg
xchg
popl
jl
adc
inc
inc
lds
xchg
bound
mov
iret
int3
fbstp
push
pop
and
lahf
add
imul
pop
gs
aad
cmp
faddp
dec
sbbl
jne
sub
or
aaa
cmpxchg
lds
cmc
or
jecxz
cmc
dec
out
mov
or
cli
daa
adc
mov
addr16
int3
xlat
adc
mov
lahf
fdivrp
cmp
cmp
and
and
jo
insb
iret
enter
xchg
cltd
roll
shrb
cli
sbb
jg
jo
lods
fdivl
mov
xchg
jbe
xor
mov
iret
sti
popf
mov
loope
hlt
jo
cld
cmp
jg
lret
xor
sbb
push
imul
ds
std
insl
dec
and
test
push
imul
xchg
xchg
das
aam
loope
rclb
pop
add
cld
jmp
fldt
sbbb
or
in
cld
fwait
push
fidivrl
inc
pop
cmpsl
push
in
mov
imul
lods
mov
or
push
xor
fs
in
rorl
ljmp
dec
lahf
pop
lcall
out
adc
insb
jge
les
jge
nop
scas
emms
loop
or
mov
and
dec
cmp
pusha
loope
lock
and
xchg
ljmp
push
and
pop
push
movsb
mov
jb
jo
ljmp
dec
xchg
jno
jns
sbb
add
pop
and
imul
call
mov
cmpsb
scas
mov
jp
mov
push
xor
pop
push
cmpsl
mov
cmp
lahf
adc
mov
xchg
or
lds
pushf
mov
push
inc
js
sbb
jmp
push
cmpsl
cmpsb
imul
aaa
cmp
and
cmc
dec
or
rcrl
or
jmp
loope
clc
or
and
sbb
push
add
incl
xchg
push
stc
rorl
push
dec
fs
inc
test
int3
and
sbb
jl
push
hlt
int
mov
jge
mov
pop
icebp
mov
rcl
and
jns
pop
jns
sub
and
rolb
mov
or
pop
sub
sub
outsl
sahf
adc
cs
pop
and
imul
push
dec
dec
jnp
add
or
or
std
popl
mov
popf
jg
adc
fwait
sbb
and
dec
out
adc
inc
in
and
jecxz
mov
ja
pop
add
fs
adc
push
lods
insl
hlt
imul
into
inc
mov
push
jnp
mov
aad
mov
adc
mov
out
xlat
gs
fnstsw
mov
movsl
movsb
pushf
sti
add
xor
insl
adc
adc
cmc
sub
and
adc
dec
mov
leave
sbb
inc
out
dec
jl
cmp
ds
int3
out
sub
push
iret
push
fiaddl
loope
add
or
inc
mov
pop
xchg
mov
mov
xorl
arpl
data16
call
pop
hlt
xor
int
daa
rorl
stos
sbb
mov
jl
inc
dec
dec
js
jb
inc
insb
in
xchg
daa
sbb
test
aaa
jecxz
and
mov
es
mov
cmp
mov
jge
cli
das
in
or
dec
lods
mov
aad
cld
and
or
pushf
jb
pusha
cmp
sbb
xor
ficompl
xor
mov
aas
xchg
add
les
or
gs
pop
xchg
outsb
and
xor
mov
jg
sbbb
dec
pop
or
icebp
aaa
mov
cmpsb
xor
dec
dec
shr
mov
ja
dec
mov
jl
mov
push
cld
mov
pop
mov
dec
cmp
bnd
push
sbb
cmp
push
cmp
pop
pop
push
xor
cmpsl
dec
js
dec
mov
inc
rcr
iret
mov
insl
aas
outsb
lds
mulb
adcb
sarl
test
push
sub
aas
shr
push
cs
mov
add
and
pop
out
xorb
sbb
frstor
int
sarb
sub
push
ret
xchg
cmp
cmc
jns
sub
insl
jns
pop
dec
ss
neg
ret
ficoml
mov
xchg
cmpsb
push
out
and
in
xchg
inc
xchg
and
popa
fcmovnb
sbb
loop
cld
pop
adc
pop
pop
mov
xchg
mov
mov
test
out
push
pusha
pop
lahf
loope
mov
std
movsl
mov
sahf
adc
push
test
cmp
fisttps
xor
mov
lea
cmp
xorl
push
hlt
adc
mov
mov
shrb
lret
push
push
imul
mov
sbb
push
les
jp
xchg
cmp
popa
mov
add
jbe
icebp
adc
mov
xchg
and
fstl
xor
leave
sbb
cmc
shlb
xor
xchg
pop
mov
or
jnp
xor
clc
adc
shl
inc
int
iret
cmp
jb
jecxz
jl
push
add
aas
scas
movsb
aam
sti
fs
xor
pop
hlt
pushf
push
or
jb
test
xor
push
add
mov
das
mov
cmp
fsts
push
test
xor
addr16
movsb
add
adc
imul
cwtl
cmpsb
push
sbb
xor
sub
adc
dec
sub
mov
sbb
mov
push
lods
cmp
cmp
fidivs
jg
cli
xchg
arpl
sti
outsb
lcall
sub
cmc
dec
iret
xchg
idiv
lock
sbb
rorb
repz
aam
jle
mov
pop
in
lret
lahf
mov
push
daa
xchg
and
sub
cmp
cmp
pop
push
push
out
fcoms
loop
lods
xor
sub
xchg
dec
jno
mov
mov
testb
jno
movsb
insb
pop
inc
push
imull
mov
fcmovnu
pushf
mov
test
popa
mov
lret
sahf
mov
jecxz
in
ljmp
dec
xchg
push
sbb
cmc
iret
mov
stos
sbb
iret
subb
or
incb
insb
lret
adc
repnz
push
and
imul
xchg
call
dec
rcll
jae
mov
xchg
dec
xor
and
adc
es
repnz
mov
and
push
cs
rorb
sub
and
dec
mov
and
loope
xchg
std
test
mov
xor
adc
add
sbb
jmp
hlt
xchg
inc
rcl
test
add
ret
push
enter
repz
stc
inc
push
js
int3
mov
or
arpl
das
cmp
mov
adc
int3
sub
mov
pop
imul
cwtl
push
mov
push
cmpsl
imul
mov
cltd
arpl
pop
jae
inc
add
mov
in
mov
add
std
shlb
sqrtps
das
jecxz
ret
mov
jne
ljmp
or
imul
stos
mov
sti
cmc
mov
lods
lret
invd
jnp
dec
cmpsb
mov
sbb
mov
mov
inc
mov
fidivl
pop
pop
cltd
ljmp
xchg
mov
jne
fs
push
cmp
jp
push
repz
mov
test
mov
in
movb
int3
xchg
call
das
fidivrs
shl
and
ja
test
ljmp
sub
fimuls
add
mov
popf
xchg
pop
sub
xchg
fnsave
cmp
pop
cmp
and
in
std
shlb
push
push
mov
icebp
xchg
decl
sbb
jne
cld
outsw
jbe
lock
lcall
jne
cmp
xchg
push
inc
dec
sbb
sbb
rolb
test
aaa
mov
add
inc
or
or
popa
inc
xor
fldcw
or
mov
xlat
xor
xor
dec
mov
hlt
xchg
dec
sbb
push
gs
into
ds
enter
mov
push
lret
jne
pop
lcall
pop
dec
sbb
stc
mov
por
ss
fstl
push
insl
push
mov
pop
fists
sbb
pushf
stos
imul
sub
sahf
sub
sbb
inc
push
ret
mov
jno
pop
pop
lret
jmp
cmpsl
jl
adc
div
ja
sbb
call
es
cmp
jb
jne
js
cmp
std
fiadds
xor
mov
js
sub
fs
popf
push
add
sbb
or
pop
jae
mov
or
test
push
sub
scas
iret
cmp
fwait
cmp
call
ret
push
out
dec
ja
in
sti
push
xchg
push
push
enter
fs
or
cmp
notb
loopne
adc
in
cli
sahf
pavgb
nop
mov
jae
xchg
test
lret
pop
mov
loop
repnz
mov
mov
inc
jmp
test
xchg
mov
xchg
sub
mov
mov
pop
inc
adcb
pop
add
test
jns
test
inc
inc
add
hlt
fsubrs
adc
pop
mov
cmp
shrb
sti
lret
mov
cwtl
movsl
sti
cmp
mov
jo
lcall
sbb
push
or
dec
adc
mov
scas
int
jle
mov
icebp
sub
dec
xchg
mov
and
outsb
sub
jmp
mov
gs
pushw
outsl
loope
inc
dec
iret
adc
fsubs
cmpsl
dec
mov
repz
cmp
xchg
testb
mov
sub
xchg
addr16
pop
fimull
adc
xor
lahf
push
aaa
push
stc
pop
push
xorb
out
ds
leave
jl
ret
mov
cmp
ret
fimull
mov
out
iret
mov
sbb
jnp
push
adc
into
sub
icebp
clc
in
and
xchg
add
adc
push
incb
popa
sub
add
push
push
xor
movsb
imulb
nop
push
testb
ret
xor
rcll
adc
jg
sti
xor
xlat
iret
cmp
std
dec
js
jne
push
xchg
and
mov
stos
cmp
shr
pop
or
sub
pop
xchg
data16
xchg
jmp
sbb
and
jnp
pop
inc
ss
mov
xor
fisttpl
xchg
fstpl
and
mov
das
or
xlat
pop
in
dec
je
rorl
hlt
scas
mov
stos
adc
lea
push
and
inc
lret
push
adcb
jnp
js
ja
leave
not
add
dec
add
aaa
cs
frstor
popf
mov
mov
and
dec
pop
add
mov
data16
mov
push
dec
jnp
faddp
sub
es
pop
xchg
clc
scas
arpl
into
shlb
cmp
fstl
inc
jle
or
roll
add
or
rorb
mov
ja
dec
int
inc
mov
test
lock
das
lret
shlb
cli
xor
dec
and
add
push
inc
pusha
insl
out
out
push
jnp
notb
sub
push
imul
out
push
sbb
jns
cli
fsubs
fucomip
mov
lea
shrl
mov
add
jnp
test
pop
and
incb
or
popa
xchg
xlat
mov
testl
scas
jmp
lds
gs
mov
mov
xor
mov
hlt
jnp
loopne
movsb
daa
jb
ret
jmp
shlb
lock
adc
adc
push
inc
sbb
or
mov
cmp
dec
pop
lret
dec
clc
dec
dec
ret
cli
jb
pusha
pop
mov
ljmp
insl
popa
xchg
mov
int3
and
mov
mov
dec
out
xchg
cmp
leave
repz
inc
cwtl
pop
adc
js
lret
psrlq
mov
add
std
mov
jl
icebp
lret
lret
mov
mov
dec
cmc
mov
xchg
frstor
std
push
lods
loopne
nop
dec
fadd
xor
dec
xchg
xor
les
add
add
push
test
mov
or
jl
repz
push
nop
mov
out
xchg
xchg
in
aaa
stos
jnp
pop
sub
jnp
inc
mov
cmp
cmp
xor
lret
adc
in
es
adc
in
leave
or
out
mov
outsb
and
int
mov
xchg
aad
sub
sub
adc
mov
mov
xor
lods
and
mov
add
xchg
push
fcmovnu
mov
adc
mov
mov
adc
mov
mov
pop
pop
insl
leave
and
mov
arpl
mov
loop
sub
scas
mov
fwait
ret
adc
xchg
push
sub
ja
xor
push
pusha
lahf
sub
push
imul
jg
imul
pushf
push
sub
sbb
push
imul
clc
test
fldenv
and
adc
out
or
in
mov
mov
outsl
dec
cmp
xchg
cmp
aas
push
mov
ret
adc
bound
in
push
mov
sbb
fistpl
sub
mov
in
int
adc
roll
pop
push
bound
xchg
loope
movsl
lods
mov
jns
aas
sti
lods
fidivrs
adc
add
test
xor
insl
stc
mov
cmp
out
imul
les
cmc
fwait
sbb
push
clc
fisttpl
paddsb
push
iret
aas
aad
out
lods
jnp
nop
test
enter
mov
xor
test
sub
xchg
xchg
rorl
pusha
setl
into
imul
adc
sbb
or
jno
mov
push
push
pop
clc
test
and
fdivs
rolb
stc
loope
cmp
icebp
xor
xor
sub
aad
lock
nop
push
xchg
push
cmpb
mov
in
xor
fidivrl
pushl
xchg
push
mov
push
outsl
or
stos
std
in
mov
aas
dec
cwtl
call
shll
out
inc
ret
and
mov
mov
xchg
nop
and
sarl
outsb
bswap
mov
and
scas
jge
pop
mov
mov
push
dec
sti
inc
int
jne
sahf
cmp
call
and
insb
mov
sub
and
cmp
sub
and
addb
jne
dec
push
mov
xchg
hlt
mov
sub
mov
pop
cmp
shrb
xchg
sub
xchg
push
adc
add
test
dec
aad
in
push
movsl
push
mov
cwtl
pop
pop
dec
in
cs
add
enter
or
mov
cmp
outsl
dec
sbb
xchg
push
pop
aaa
pop
lcall
xchg
ret
outsb
sub
les
cmc
cmp
loope
jle
dec
aad
and
test
popa
inc
mov
repnz
gs
out
test
rorl
ja
lret
mov
cmp
mov
aad
cwtl
mov
sub
inc
sbb
mov
leave
inc
insl
or
std
mulb
inc
or
aas
gs
insb
inc
outsl
mov
xor
in
add
mov
jmp
mov
jb
das
xor
xlat
repnz
cmp
lods
fidivl
negb
xchg
int3
sbb
sub
stos
jl
sub
cltd
adc
mov
push
push
mov
imul
ffree
add
inc
dec
fnsave
in
and
clc
adc
movsl
pop
xor
loop
push
sub
es
out
dec
neg
or
or
pop
xchg
cmp
repnz
cltd
ss
add
icebp
jmp
sahf
loop
jo
fucomip
pop
sysenter
cltd
dec
jp
sub
jle
shl
in
cld
sub
outsb
and
das
mov
in
imul
addr16
movsl
lahf
jns
push
nop
fldenv
stos
stos
out
mov
incb
shlb
lcall
fcomps
push
sahf
adc
repnz
test
xor
dec
sbb
sbb
out
pop
gs
movsl
cmp
notl
xor
lret
mov
je
hlt
and
and
loop
cld
adc
clc
inc
xor
add
push
ret
sbb
in
aam
pop
push
rorl
filds
popf
push
outsb
lahf
cltd
mov
int3
movsl
push
sarl
mov
aaa
ret
outsb
roll
outsb
and
sbb
and
jle
add
push
jmp
sbbl
fnstenv
xchg
pop
stos
gs
in
xchg
xor
stc
and
ret
xor
out
aaa
shlb
in
insb
pop
out
mov
movsb
or
add
push
movsb
call
cmp
mov
mov
int3
xor
or
sub
jae
inc
mov
mov
adc
cmpsl
mov
push
pop
jl
inc
mov
adc
pop
inc
dec
out
clc
mov
cmp
lea
jecxz
sub
aaa
imul
mov
insl
mov
lcall
jmp
js
or
insl
lds
xchg
and
cmp
ja
lds
dec
into
lock
outsb
outsb
cwtl
jno
dec
pop
xlat
mov
xchg
lea
out
xchg
rolb
xchg
sahf
int3
push
popf
je
outsl
fsubrl
addr16
fwait
cmp
loopne
arpl
out
add
fcmove
sbb
nop
out
aam
and
push
shll
pop
lds
add
sub
push
pop
fs
in
shl
xor
xor
xor
jo
inc
lods
xor
or
push
pop
inc
dec
ja
lods
clc
insl
mov
jge
cmp
inc
out
cmp
sub
mov
cmc
psrad
testl
cmp
imul
shrb
jmp
xchg
bound
fldt
ja
xor
mov
mov
lods
pop
call
test
jne
stos
and
addr16
arpl
dec
lret
cmp
mov
leave
push
sbb
test
mov
jmp
push
jl
pop
xchg
jl
fists
das
sub
cmp
sahf
push
pushf
movsl
jae
ljmp
push
push
cwtl
xor
icebp
into
out
test
das
loopne
clc
jge
push
pop
or
dec
adc
lret
in
testl
xor
sub
clc
pop
int
movsb
fs
cmc
jae
mov
jns
repnz
shrl
lock
ja
jbe
pop
dec
and
push
inc
fs
imul
mov
sub
shll
sub
sub
pushf
sahf
loopne
dec
ret
jle
sub
loope,pt
jmp
cli
enter
mov
ficoms
cwtl
adc
arpl
popa
xchg
pop
xchg
lods
arpl
loopne
dec
pop
negb
sahf
jae
sub
mov
inc
mov
sub
mov
jl
iret
addr16
in
xchg
shll
or
mov
in
mov
jge
test
push
outsl
lds
stos
pop
scas
push
cwtl
pop
aaa
lods
loope
or
insb
es
rol
js
mov
out
dec
xchg
movsl
loopne
aas
test
stc
mov
insb
xacquire
ret
in
imul
dec
subl
cld
mov
lods
lods
dec
push
clc
pop
pushf
push
shrl
lahf
loope
sbb
jge
lds
adcb
fistpll
push
insl
push
ret
call
pop
push
sti
out
and
imul
sarb
bound
add
inc
xchg
pop
jb
scas
rcrl
push
dec
add
hlt
sbb
pop
mov
adc
filds
fdivrs
add
mov
out
mov
adc
and
rcrb
add
cs
push
ret
fsin
loopne
cld
lea
fisubs
add
sub
push
int3
add
popa
nop
mov
lods
clc
imul
pop
dec
dec
icebp
movsw
sbb
adc
adc
aaa
or
scas
imul
mov
lds
xchg
push
cmp
mov
jno
jl
leave
xchg
sub
ds
mov
mov
pop
sub
mov
ja
and
out
lock
xor
iret
push
mov
add
pop
push
stos
sbb
ss
dec
jae
and
lahf
aas
lods
ret
pop
cld
xorl
sub
sbb
stc
xchg
mov
mov
push
mov
leave
lret
cld
jnp
out
cli
loopne
cmp
dec
jmp
loopne
pop
ljmp
fldl
jae
lock
add
in
lahf
xor
fmuls
repz
dec
in
mov
jae
lods
add
inc
lea
mov
push
cltd
addl
insl
cmc
cmp
jno
and
mov
in
andl
clc
fnstsw
insw
mov
es
pop
cltd
fimuls
je
inc
dec
nop
notb
wrmsr
mov
dec
jbe
hlt
insl
xor
js
enter
inc
mov
test
or
sbb
and
cmp
xchg
arpl
xchg
test
pop
and
xchg
iret
and
mov
mov
mov
sti
call
test
lods
or
in
mov
cmp
mov
jns
je
das
movsl
imul
sub
pop
fldt
jb
cmp
jae
cmp
cmp
xchg
lcall
dec
faddp
aad
cmpsl
mov
mov
jl
out
test
sub
xchg
xchg
dec
insl
in
jne
dec
jns
out
aad
pop
jle
pop
sar
jmp
les
notb
sti
test
dec
imul
hlt
fs
and
mov
adc
lods
dec
pop
aas
data16
in
jb
mov
sbb
mov
jnp
insl
xor
leave
jno
jl
pop
push
xchg
js
cmp
fwait
mov
sub
loop
jnp
in
mov
aas
and
cs
fsin
das
ja
adc
repz
das
pop
cmp
or
cs
lcall
lods
outsb
sub
es
or
ficoml
xor
add
inc
into
fbld
mov
push
js
sbb
cwtl
cmp
decl
test
pushf
stos
push
ja
mov
sbb
adc
xor
pop
push
pop
pop
xor
call
jmp
lretw
dec
pop
mov
xor
cmc
dec
sbb
and
adc
lret
cmpsl
pop
xor
sub
mov
or
jno
xor
jge
push
and
cld
fisttpll
sub
inc
sub
das
sub
out
jge
and
stos
std
lea
push
mov
inc
lret
scas
call
dec
mov
in
mov
adc
cli
fildl
and
aas
sbb
adc
test
add
imul
cmp
mov
add
or
xchg
adc
lcall
mov
test
push
shrb
mov
cmp
jp
inc
push
push
test
or
xchg
sti
imul
sub
jmp
push
mov
push
mov
mov
sbb
xor
xchg
mov
add
mov
dec
int3
mov
ja
int3
add
push
mov
mov
pop
and
pop
sarl
mov
into
insb
mov
mov
xor
movsb
adc
jne
adc
mov
leave
mulb
jne
mov
out
jle
cltd
fwait
and
popa
movsb
sbb
pop
aaa
push
movsl
and
or
add
pusha
clc
int
mov
loopne
out
jp
xchg
xor
lahf
mov
fs
adc
in
add
sbb
cmp
adc
int3
decb
and
setns
dec
test
in
mov
xchg
mov
or
add
je
cmp
mov
add
shrl
out
das
fstl
hlt
mov
popl
fdivrs
pushf
sahf
push
inc
imul
and
imul
imul
out
popl
cmp
jb
xchg
movb
cld
mov
aas
add
mov
jmp
inc
fwait
or
jg
shl
push
mov
sub
mov
mov
fprem1
cld
xchg
xchg
repnz
xor
dec
lods
leave
and
add
fisttps
stc
rorb
sub
and
push
in
sub
repz
fnstenv
sub
add
fwait
ja
dec
std
lcall
jl
push
jp
fimull
dec
xchg
lcall
loop
mov
mov
xchg
lds
jmp
lods
popf
cmpsb
into
mov
cmp
lods
fisttps
inc
xchg
cli
jnp
pop
in
call
or
mov
xchg
sbb
pop
or
js
fwait
test
adc
xchg
jecxz
xor
lock
pop
mov
inc
mov
int3
bound
addr16
xchg
dec
inc
nop
fstps
pop
shlb
out
push
jb
ret
cmp
pop
mov
pop
rcr
sbb
stos
mov
cmp
add
mov
testl
outsb
cmp
cmp
jbe
jns
jg
cmp
jecxz
out
mov
loopne
mov
cwtl
xor
ret
mov
pop
inc
stos
dec
dec
push
loopne
outsb
xchg
xchg
push
jl
adcb
subb
or
sbb
push
gs
xchg
mov
inc
mov
ja
push
popf
inc
inc
repz
mov
mov
xlat
outsl
jnp
out
and
pusha
dec
adc
push
add
sbb
cmp
aaa
dec
add
loope
test
cmp
and
mov
and
mov
fcomp
cmp
lods
addr16
lods
sub
ds
fwait
xchg
outsb
push
mov
push
mov
sbb
adc
dec
xor
lret
push
xchg
xchg
popa
push
push
fs
lds
aam
cli
lock
cmp
cmp
lea
punpckhwd
sbb
dec
aas
xor
add
jno
mov
mov
pop
and
mov
pop
add
mov
xchg
rcrb
and
xchg
push
and
xchg
jle
and
jge
lahf
das
mov
add
je
sbb
sub
stc
sub
cli
pop
xor
cmp
push
pop
xchg
stos
and
inc
shll
fst
ret
push
stos
dec
aas
dec
loope
add
push
lods
sub
dec
inc
xor
loop
or
movl
shlb
push
imulb
stc
push
mov
out
in
dec
pop
aas
in
jge
push
push
jno
dec
mov
push
stos
and
jbe
ret
xchg
inc
add
mov
cmc
test
jg
xlat
jno
jbe
jno
sub
mov
push
shld
and
dec
ja
sbb
decb
les
xlat
jmp
lret
in
ret
add
add
adc
mov
xchg
stc
mov
lcall
xchg
adc
std
outsb
nop
pop
add
jns
test
sub
and
xor
push
mov
int
mov
loop
test
dec
adcl
test
xorl
aas
scas
fwait
mov
xchg
mov
nop
test
cmp
cmc
pop
fwait
pusha
idivl
imul
scas
add
in
cmpsl
test
test
sub
pusha
sub
imul
mov
jg
adc
mov
inc
inc
xchg
add
lea
fwait
aaa
stc
dec
push
data16
je
dec
pop
pop
jbe
in
cli
test
ficompl
inc
cli
adc
test
sti
outsb
mov
pop
pop
add
out
adc
xor
adc
imul
xor
das
ljmp
add
add
cmp
jae
stc
gs
les
sbb
imul
pop
sbb
fidivs
movsb
dec
stc
loopne
sarl
imul
cmp
clc
jl
adc
and
fsubp
pop
push
fimuls
push
inc
and
fstps
jae
sbb
sub
fstl
subl
mov
inc
mov
fwait
jne
lea
pop
xchg
and
sbb
imul
inc
scas
psrlw
and
and
rorb
sub
jg
mov
loope
xor
xchg
out
enter
leave
sbb
mov
enter
out
pop
xchg
scas
cmc
out
shl
cmp
cmp
add
pusha
sbb
adc
repz
pop
push
jg
sbb
and
push
std
popa
lahf
pop
fst
in
pop
ret
add
lock
mov
push
inc
or
nop
xorl
loope
dec
or
or
lahf
jb
jae
dec
dec
stc
mov
std
sub
and
jge
xor
adc
pop
cmp
mov
push
dec
sub
jl
xchg
popf
pushf
jne
in
pop
cmpsl
bound
jo
aaa
jo
flds
mov
lods
sub
mov
inc
aam
movsb
dec
loopne
rcr
daa
sarl
xchg
stos
rclb
inc
sub
ja
aas
idivb
cmpsb
sbb
pop
cmc
outsl
sahf
mov
testb
lods
fdivr
mov
dec
fisubrl
out
and
lret
lahf
push
sub
mov
and
shl
push
pop
in
jp
out
ja
jbe
inc
xchg
inc
movsl
push
push
cs
movl
jg
xchg
dec
sub
xor
das
sub
test
fsubrs
enter
jb
inc
mov
outsb
cmpb
mov
loopne
xchg
mov
loopne
dec
xchg
inc
dec
shl
cmp
xor
cld
hlt
mov
mov
mov
out
pop
test
or
cs
adc
shr
inc
mov
hlt
xlat
and
xor
in
mov
cld
jbe
arpl
cmpb
adc
out
pop
dec
scas
call
cmpb
or
pop
sub
jg
out
mov
xchg
pop
pop
and
repz
pop
jmp
sbbb
xchg
push
mov
popa
stos
imul
or
inc
xchg
add
outsb
mov
or
and
pop
mov
inc
cmc
jne
sbb
cmp
or
cld
pop
imul
shrb
lods
or
insl
ret
stc
sbb
or
rol
ret
ds
xchg
mov
push
mov
jl
daa
int3
imul
std
fldl
sbb
xorb
mov
mov
scas
leave
mov
movsb
push
jne
out
mov
cs
jbe
pushl
loopne
leave
mov
insl
out
jns
popf
je
lahf
enter
and
lret
pop
lods
out
sub
pushf
xchg
dec
dec
sbb
pop
pop
imul
prefetch
and
sahf
lods
lret
jp
stos
fs
push
popf
fisttpll
or
js
sub
dec
push
xchg
inc
aaa
cmc
ja
insl
lcall
sbb
cld
dec
pop
hlt
cld
lcall
push
cs
pushf
sub
dec
fistps
or
arpl
xor
mov
lahf
cmp
jae
sub
push
into
std
aaa
loop
mov
shrb
popf
lea
aaa
sub
loop
mov
dec
mov
jo
xchg
jno
sub
outsb
cmp
mov
fwait
or
pop
adc
push
xor
lret
mov
dec
mov
xchg
pop
jne
sub
push
dec
stos
dec
jne
add
mov
sarb
mov
xor
jae
xchg
or
xor
lret
mov
mov
mov
push
jb
test
int3
jbe
cmpsb
cmp
or
cmc
pop
es
std
inc
dec
inc
orl
enter
mov
cltd
cmpsl
add
xchg
inc
inc
shrd
loope
out
and
in
clc
xchg
ret
sbb
lea
cli
or
mov
popa
rcl
sarl
sar
js
out
in
cmp
dec
aad
cmp
pop
in
out
sbb
cmp
in
sbb
stos
leave
or
fidivl
cli
pop
push
lcall
and
iret
scas
xchg
lret
fiaddl
out
rclb
mov
pop
das
xchg
stc
js
adc
or
pushf
or
adc
pop
icebp
push
stos
lods
lret
jge
add
cmpsl
adc
push
xor
xor
cltd
or
push
xchg
mov
arpl
adc
daa
cmp
jne
lahf
pop
push
sbb
in
call
sti
jnp
loopne
cmp
mov
js
sub
sbb
movsl
rcrl
outsl
aaa
jge
out
xchg
fidivrl
sub
mov
mov
mov
cltd
sbb
pop
lods
pop
inc
push
or
dec
mov
loopne
sbb
add
stc
fnstenv
push
dec
ret
jb
lods
jecxz
or
mov
out
into
adc
pop
xor
scas
mov
sub
jp
int
bound
adcl
test
sub
cmp
scas
adc
mov
and
addr16
pop
mov
fstpl
adc
gs
test
scas
jno
inc
ret
jbe
inc
lahf
push
pop
pop
sub
enter
xor
mov
sahf
xchg
jno
mov
mov
mov
xchg
xor
dec
push
fisttps
inc
or
adc
iret
ficoms
out
sahf
and
stos
ret
jno
mov
sub
loopne
arpl
imul
jp
out
gs
fmull
xchg
je
shlb
sar
stos
cmp
inc
sbbl
aad
mov
aad
fistps
int
cmpsl
addr16
inc
in
ss
push
lcall
pop
push
adc
insl
jae
mov
loope
les
andb
test
pop
sarb
inc
mov
mov
pop
or
ret
and
cs
and
mov
bound
mov
sahf
mov
sahf
sbb
add
and
mov
leave
mov
ljmp
inc
dec
ds
hlt
cmc
sbb
push
aaa
lods
movsb
jno
xor
dec
pop
loopne
js
jge
push
pop
pushf
xchg
nopl
sub
push
push
or
pop
mov
mov
push
add
dec
cmc
rclb
fdivrl
sbb
jnp
mov
sbb
iret
jge
push
and
insl
sub
lea
aaa
fwait
sbb
imul
xchg
ret
pop
jb
xor
addb
in
mov
add
sbb
enter
pusha
mov
repnz
rcr
enter
outsl
popf
mov
sub
jns
mov
sti
addr16
pop
adc
addb
call
sahf
mov
cmp
inc
push
iret
sub
dec
call
mov
fs
js
cmc
and
cltd
mov
imul
ficoml
mov
gs
inc
dec
xor
pop
in
icebp
movsb
out
loopne
cli
aad
loope
mov
mov
imul
mov
add
fstps
fwait
and
out
pop
cmpb
xchg
pop
jge
out
lods
je
inc
out
test
add
jg
inc
push
and
fimuls
adc
inc
adc
decb
push
dec
mov
xor
out
sbb
repnz
js
sub
aas
jno
xor
sub
je
cmp
bound
lcall
dec
out
cmp
lcall
jb
pushf
test
test
push
into
xchg
inc
daa
push
lock
js
xchg
pop
mov
filds
gs
push
cwtl
dec
cmp
xor
and
xor
mov
lahf
push
shll
pushl
fisubrl
cmpsl
dec
test
xor
cmpsb
mov
inc
cwtl
add
xor
loopne
std
test
jne
lret
js
out
mov
mov
mov
jecxz
iret
mov
jne
cmp
das
sub
iret
inc
lods
sbb
mov
movsl
push
fistpll
sub
daa
adc
cmp
iret
data16
mov
ljmp
pushf
ds
dec
mov
movsb
testl
jmp
test
and
xchg
loop
jp
push
sarb
jmp
cmpsl
loop
testb
insl
into
pushf
or
pop
jmp
jp
cmp
dec
outsb
pop
stc
dec
sub
daa
dec
inc
lret
aaa
sbb
jle
inc
lds
sub
fiadds
es
repz
dec
insl
sub
xchg
addr16
jbe
bsr
lcall
and
arpl
jns
lods
jb
js
push
mov
inc
dec
in
dec
rcrb
mov
cmpsb
movsl
inc
sub
xchg
mov
imul
hlt
pushf
fisttpll
ss
lcall
jnp
jp
movsb
cltd
sub
test
sahf
sarl
out
mov
xor
mov
push
nop
call
push
jmp
arpl
addb
test
scas
xor
loopne
xor
fsub
mov
xchg
test
sub
xchg
add
and
ret
mov
fisttpl
dec
cmp
out
fcomps
test
insb
pushf
ror
and
addb
cwtl
test
leave
push
lock
mov
xor
adc
inc
insb
dec
test
rolb
mov
stos
data16
cs
cmp
push
loope
adc
movsb
or
mov
hlt
daa
pop
ds
mov
inc
popf
or
fisttps
inc
fs
or
dec
xlat
push
sub
mov
jmp
xchg
jmp
loopne
into
adc
pop
je
lock
push
ss
das
std
xor
jg
iret
adc
jecxz
adc
mov
inc
jbe
dec
pop
mov
lahf
hlt
in
mov
push
cmp
imul
repnz
xchg
lret
jle
repnz
in
out
scas
or
aaa
cltd
jo
or
xchg
out
dec
jecxz
sub
lods
jne
data16
mov
adc
sub
inc
lcall
stos
push
dec
call
and
inc
data16
movsl
or
pop
cmp
dec
sub
push
dec
sub
adc
inc
sbb
mov
out
mov
jo
sbb
mov
arpl
adc
fisttpl
sahf
out
cs
iret
sbb
pop
add
pop
fisubs
mov
shrb
xor
scas
inc
enter
xor
ja
mov
lods
xor
sbb
test
and
mov
add
lcall
addr16
mov
mov
mov
xchg
xlat
inc
scas
xchg
bound
out
mov
mov
adc
jp
add
jbe
inc
inc
push
push
and
and
sti
loopne
movl
jecxz
shll
test
cmpb
jle
sub
mov
mov
xlat
mov
or
sbb
sbb
mov
pop
test
jmp
sahf
and
stc
in
mov
push
stos
out
push
hlt
cmp
sbb
fisubs
dec
outsb
jne
addb
cwtl
repnz
nop
push
mov
mov
jp
cmp
cmp
popa
bound
test
jnp
lret
lock
mov
jle
push
addr16
insl
mov
or
loopne
mov
ret
pushf
pusha
adc
xchg
leave
mov
cld
mov
push
jbe
mov
jae
or
cmp
push
push
jle
push
and
pop
xor
xchg
pop
aas
insl
jle
inc
aam
arpl
jb
ret
ja
xchg
in
cmp
fistps
adc
sahf
jmp
sub
push
cmpsl
testb
xor
addb
out
push
notl
std
imul
push
sbb
fldl2t
mov
rep
repz
adc
fstps
jle
movsl
sub
rorb
divb
outsb
je
ss
mov
pop
dec
jecxz
pop
push
loop
in
mov
sub
jge
scas
adc
iret
das
push
hlt
jbe
bound
in
sub
xchg
sub
sbb
dec
in
dec
pop
fst
shrb
int
add
mov
adc
cs
fdivs
mov
insl
push
add
add
in
int
dec
shll
rolb
cmp
push
jle
or
jmp
in
and
push
scas
mov
xor
sub
mov
adc
sbb
xorb
add
pop
sub
add
fistpl
pushf
fnsave
add
jns
lock
out
cmp
push
dec
xchg
push
and
pop
inc
adc
pusha
jge
ja
imul
and
jg
push
push
rcrb
sbb
xchg
push
mov
pop
lock
xor
inc
cmp
movsl
dec
cs
inc
mov
or
push
faddl
cmc
xor
push
cmpsb
xchg
pushf
mov
cmp
movsl
fs
or
inc
sahf
mov
outsl
or
mov
mov
cmpsl
xor
mov
int
jo
repnz
mov
xor
pop
pop
add
mov
gs
lds
mov
fsubrs
incl
mov
pop
call
stos
addb
jle
movl
stc
pop
cmp
es
lds
adc
mov
xor
mov
clc
push
aad
adc
leave
cmp
repz
aaa
cmp
adc
adc
add
push
mov
jmp
push
cmp
aam
hlt
jbe
fsubrs
aas
cmc
fs
add
push
rcrb
hlt
subb
push
fildll
ret
dec
nop
xlat
aas
add
sub
push
add
jo
call
or
sbb
es
or
arpl
mov
in
lods
push
push
jmp
rol
and
pop
dec
popl
pop
data16
out
or
and
in
lds
mov
add
test
jge
sbb
testl
sbb
rcrb
adc
push
jge
cmp
sub
das
cmpsb
push
rclb
add
repz
jo
mov
popa
outsb
xchg
mov
sub
fadds
mov
adc
mov
enter
inc
pusha
cmpsl
cmp
ret
out
sbbb
push
je
mov
call
lock
inc
repz
into
adc
dec
in
pop
fucom
fldl
xchg
add
jno
cmp
dec
sub
mov
inc
push
dec
popl
dec
pusha
xchg
movsb
dec
scas
lods
mov
daa
mov
lret
adc
out
addr16
lret
mov
shl
ds
imul
and
push
mov
stos
aam
cmp
adc
inc
shlb
cwtl
out
cmp
cltd
or
ss
jmp
mov
stc
aas
dec
inc
and
cmp
decb
push
movsb
adc
enter
mov
inc
test
arpl
mov
sub
mov
leave
mov
icebp
popf
bound
and
mov
aam
push
mov
lea
aaa
cmp
push
shrb
call
or
test
push
cmp
in
or
mov
sbb
clc
xchg
mov
negb
je
push
fbstp
and
pop
or
mov
jp
inc
insl
inc
pop
add
adc
mov
daa
lock
popf
inc
cwtl
mov
inc
lahf
xchg
inc
or
aam
and
fadd
loopne
iret
dec
push
shll
sbb
pop
xlat
rorl
push
lea
aad
decl
or
cmp
in
mov
subb
jne
mov
rcr
cltd
mov
inc
arpl
push
cmp
dec
shr
sbb
test
add
dec
cmpsb
cmp
mov
xor
sub
and
mov
and
and
xchg
and
inc
iret
pop
movsl
xchg
mov
mov
rolb
mov
cmpsl
test
cmp
ret
test
pusha
inc
mov
jmp
jbe
sbb
insl
dec
idivb
test
aaa
and
lcall
popa
cmp
cmp
adc
stos
aam
mov
stos
cli
jns
shll
jp
xor
mov
or
add
xlat
adc
dec
div
mov
test
add
xor
subl
add
ss
jbe
sbb
les
ljmp
stos
push
push
dec
cmovns
cmp
iret
rol
imul
lods
imulb
stos
lret
call
add
sub
cmp
dec
sub
adc
jmp
xchg
sub
xchg
or
xchg
or
movsb
push
cmp
xor
aad
ljmp
mov
mov
popf
enter
mov
xor
aam
addr16
sub
add
lahf
cmp
idivl
push
shll
ror
inc
lahf
mov
mov
lock
lret
ds
jmp
sub
inc
adcl
ret
cmp
test
lret
ljmp
test
aas
add
enter
dec
xor
pop
adc
fidivrs
stos
fcmovnbe
maskmovq
pop
xorb
xchg
mov
mov
sarl
shl
test
fninit
js
fstpt
dec
outsb
xchg
mov
xchg
jl
push
pusha
repz
jg
jne
push
iret
or
and
and
sub
or
mov
icebp
xchg
sahf
mov
push
movsb
cs
in
inc
sbb
fprem1
dec
imul
xchg
mov
or
pop
push
sub
iret
jae
test
push
and
sbb
pushf
push
dec
jle
pop
lea
xchg
int3
shl
mov
adc
jle
dec
xor
ror
sub
inc
pop
in
cmp
ljmp
cmp
pop
adc
int
popa
push
xchg
out
xor
icebp
cwtl
test
xchg
iret
rcll
daa
or
jmp
stc
push
pop
lods
popf
mov
cmpsb
mov
repz
mov
out
nop
pop
fsin
adc
push
adc
fcomp
and
pop
imul
xchg
jmp
cwtl
scas
xchg
pusha
mov
arpl
cmpsl
sbb
ss
and
sbb
xor
iret
inc
inc
scas
sub
cmp
leave
shlb
mov
fwait
shl
out
jp
scas
add
out
mov
int3
xor
xchg
pop
cwtl
jp
sub
xchg
ja
jo
loop
repnz
mov
call
nop
push
rclb
es
xchg
xchg
fucomip
xchg
mov
jle
inc
out
ret
push
rorl
mov
add
rcll
and
int
andl
jp,pt
jb
call
leave
push
fcompl
push
mov
dec
dec
scas
and
call
xor
and
sbb
leave
cmp
enter
sub
cmp
sbb
dec
int3
outsl
dec
xor
jbe
je
push
mul
das
insl
test
pop
subl
mov
andb
mov
and
jo
sub
mov
mov
mov
andl
movsl
dec
ret
inc
aam
loopne
xchg
mov
iret
push
push
scas
and
movsl
sub
xchg
mov
dec
dec
cltd
in
add
shrb
mov
mov
test
dec
xchg
clc
scas
jmp
pop
loopne
cwtl
pop
jmp
mov
jb
cmp
add
xchg
push
jnp
addr16
loopne
sbb
mov
jg
jno
clc
xchg
adc
mov
sahf
mov
sub
and
gs
addr16
jmp
addl
jne
jecxz
scas
mov
jecxz
jno
and
xchg
or
jl
dec
add
sub
pop
xor
mov
test
loopne
or
mov
shrl
inc
insw
cld
fmuls
xchg
pushf
lods
cs
jl
stc
aad
dec
xor
adc
sbb
pop
add
ss
rorb
aaa
xor
pop
hlt
pop
test
xchg
jg
cwtl
jl
addr16
das
insl
jg
dec
test
mov
incl
outsl
hlt
xchg
test
aas
and
xchg
cs
dec
hlt
or
cltd
pop
jge
incl
cs
adc
pop
dec
dec
loope
data16
mov
js
add
cmc
out
dec
lcall
sbb
inc
pop
sub
in
cs
aaa
and
popf
fwait
dec
fwait
pop
sub
es
dec
lods
adcb
inc
xchg
jne
iret
add
push
les
inc
test
lret
xchg
xchg
jmp
add
sub
add
aad
icebp
fstp
xchg
push
push
jp
or
das
movl
mov
inc
inc
lret
pop
jecxz
lahf
fists
clc
xchg
inc
sbb
jno
lds
fisttpl
int3
lods
sub
mov
and
sbb
enter
test
and
clc
jno
mov
repz
mov
pop
xchg
cli
shlb
stos
cmp
mov
out
idiv
and
xchg
arpl
push
pop
or
insb
push
mov
shrb
aad
xchg
fstp
enter
fcmovnu
cltd
xor
push
sahf
jle
stc
xor
filds
in
add
test
jmp
pushf
cld
jae
ret
dec
aaa
jmp
aas
addr16
mov
mov
ss
pop
bound
mov
pop
ss
jo
hlt
rcrl
lahf
lret
xlat
lcall
xchg
push
sti
nop
shr
fbstp
fcoms
dec
push
lret
add
push
cmp
and
push
mov
push
add
std
xor
cmpsb
in
pop
nop
mov
push
out
shr
gs
insl
int3
xchg
adc
and
arpl
mov
call
mov
jge
ja
out
dec
lret
into
stos
inc
loopne
gs
mov
lret
nop
rcl
lret
mov
rorb
outsl
pushf
xchg
sub
push
loopne
push
js
push
mov
paddw
insl
das
xor
repz
subb
addr16
jne
sub
dec
nop
adc
gs
popa
jo
or
js
out
adc
xchg
cmp
xchg
gs
ret
movsl
sbbl
adc
testl
push
sub
cmpsl
ret
idivb
leave
adc
pop
scas
psubw
inc
outsl
mov
in
test
stos
push
test
cltd
push
rcll
adc
mov
pop
loop
jmp
or
into
push
mov
jp
inc
xlat
mov
cmpsl
cmp
into
in
lods
mov
rcrl
incb
mov
jbe
sub
loopne
lret
sti
cmc
es
in
push
pop
loope
lods
mov
mov
pushf
das
mov
dec
insl
daa
cmc
mov
sub
sub
inc
adc
inc
jg
pop
or
daa
dec
xor
cmpsl
and
inc
and
inc
add
jl
jmp
repz
ja
jp
mov
or
enter
pop
cmp
std
mov
xchg
mov
or
inc
jecxz
mov
inc
lret
fmuls
mov
lods
mov
nop
xchg
pop
sub
rolb
js
dec
test
je
mov
cld
lahf
repnz
jmp
lcall
fmulp
out
sbb
ss
xor
sbb
pop
add
push
fisubrs
mov
movsb
mov
pop
xor
pop
push
xor
ret
addl
cld
iret
mov
sarb
sub
mov
fldt
pop
rclb
stos
js
enter
mov
lcall
out
mov
cmpl
ret
scas
push
or
push
test
pop
out
pop
div
mov
dec
jmp
or
fdivs
mov
push
or
pop
clc
mov
ret
rcrl
into
in
pop
fcoms
dec
mov
mov
add
push
imul
test
inc
dec
rorl
int
rorl
or
mov
inc
add
push
daa
push
std
ja
ret
js
sub
lret
repnz
lahf
inc
xchg
push
outsb
shlb
nop
inc
repz
outsl
mov
jnp
or
pop
add
lcall
xchg
into
jmp
sbb
outsl
inc
movsb
or
inc
sbb
lcall
add
cmc
push
pop
sti
fsubrl
hlt
fucomp
push
add
jbe
scas
pop
es
mov
mov
popf
cmp
xchg
or
clc
and
mov
out
insl
fildl
shlb
fidivrl
push
clc
xor
es
xor
stos
out
into
mov
sub
fcmovnu
pop
adc
dec
ljmp
dec
and
dec
and
push
out
ds
push
loopne
les
stos
sub
les
lret
sbb
or
and
jg
int3
mov
mov
lret
in
in
std
lds
sti
inc
in
fwait
or
cmp
test
xor
pushf
repnz
lock
fmul
rol
outsl
push
aam
aas
data16
out
repnz
cmp
in
rorl
test
dec
inc
in
aad
clc
shll
sub
out
and
mov
mov
jno
mov
mov
inc
int
push
mov
lcall
dec
out
cmpsl
xor
sub
jb
lock
test
push
add
mov
jecxz
lods
pop
mov
adc
xlat
clc
pop
cmpsl
in
std
insl
jle
jno
test
adc
pop
pop
xchg
or
xor
jecxz
fbstp
pop
push
int
loopne
test
and
mov
or
dec
push
scas
idiv
das
fs
ja
jns
fwait
psrlw
sub
pop
cmp
ljmp
nop
aas
adc
push
push
loope
out
imul
daa
outsb
jns
and
inc
sbb
xchg
repnz
insl
mov
dec
push
jl
cli
imul
rorl
xor
hlt
push
cmp
push
jecxz
aad
les
call
popa
mov
scas
xor
lcall
dec
or
stc
cmp
sub
and
fnstsw
pop
nop
xor
popf
stos
or
mov
adc
push
add
mov
loop
imul
cmc
adc
rclb
insb
les
adc
push
test
pop
dec
pusha
daa
aas
xorb
je
adc
lahf
fcmovnb
test
call
sbbl
sbb
sub
fistpl
sub
push
xchg
enter
cmp
lcall
mov
orb
rcrl
and
std
rcrb
sub
sbb
inc
jae
add
movsl
and
cld
mov
or
pop
mov
neg
xor
lahf
inc
push
push
outsb
popf
sub
in
inc
test
and
in
and
xor
jbe
or
popf
xor
ficoms
sbb
movsl
xchg
test
mov
std
lea
cmp
test
jmp
ss
gs
in
sarb
leave
mov
jns
out
mov
mov
xor
xchg
push
xor
push
mov
nop
loop
xor
and
arpl
adc
add
push
pop
popf
enter
pusha
add
add
in
inc
in
shlb
xchg
xlat
subb
imul
pop
xor
mov
test
lods
jne
lahf
or
pop
ror
sahf
cmpsl
lock
sbb
bound
jg
cmc
cmp
lret
xor
pushf
pop
scas
scas
test
repz
or
pop
lds
mov
aas
mov
add
push
out
aas
mov
adc
xor
arpl
icebp
xchg
sub
cmp
test
jb
cli
leave
xlat
bound
fadd
mov
dec
adc
dec
stos
jns
adc
inc
imul
pop
cli
scas
xchg
ret
iret
mov
loop
out
sti
test
in
and
sbb
or
int3
sbb
mov
lret
sbb
subb
push
mov
insl
out
xor
rcrl
pop
in
pop
dec
cs
mov
in
subl
and
fs
cmc
dec
mov
adc
push
mov
adc
pop
scas
push
aaa
jmp
inc
in
sub
into
loopne
jmp
mov
test
test
inc
mov
arpl
int
jp
inc
and
test
clc
stos
add
rcrb
in
repz
adc
insb
add
out
ret
cwtl
pop
cmp
fs
xchg
pop
andb
les
les
inc
jge
popa
shlb
mov
cld
add
sub
adc
mov
cmp
test
push
add
mov
pop
add
or
ds
test
mov
or
aam
add
loopne
mov
push
pop
lds
ja
pop
int3
mov
es
xchg
fcmovnu
or
pushf
cmpsb
pop
cmc
xchg
xor
repnz
push
test
insl
sbb
add
std
pop
cmc
out
and
adc
inc
xchg
mov
sub
add
in
cmp
or
and
imul
icebp
and
test
fists
jmp
push
fcomps
adc
adc
sbb
mov
jmp
pop
pop
push
fistl
inc
jl
jbe
out
inc
pop
ss
cli
rclb
icebp
sbb
mov
cmp
push
rorb
insb
mov
daa
les
dec
and
xchg
scas
or
movsb
adc
inc
sub
xlat
cld
mov
aam
adc
sbb
cmp
jl
cmc
sbb
and
push
idivb
das
xchg
fldt
jb
push
jg
pop
fimull
sub
test
aad
xchg
les
test
xor
insb
int3
dec
aas
repnz
sbb
add
xor
mov
push
out
adc
inc
cltd
ficoml
xor
test
jmp
aam
xor
in
jge
dec
xorb
cmp
cmpsl
mov
mov
adc
cwtl
pop
or
rol
imul
test
lds
push
cmpb
cmp
or
mov
stos
push
mov
stos
repnz
pop
int3
cmpsb
add
pop
xchg
leave
mov
mov
xchg
inc
cmc
lock
push
push
gs
jmp
inc
jge
fwait
pop
nop
or
daa
jmp
cmp
sbb
mov
mov
enter
jecxz
insl
sub
or
sub
sub
mov
es
lcall
das
fwait
xchg
int
int3
xchg
xchg
xor
movups
icebp
test
push
push
dec
fnstenv
mov
push
push
adc
add
inc
sub
inc
fstps
inc
or
movsb
repnz
and
subl
jo
sub
addr16
push
mov
push
test
lahf
mov
out
out
or
dec
xchg
sbb
add
pop
movl
stc
and
mov
sti
mov
stos
fsubl
ja
xchg
mov
lods
scas
pop
push
push
lods
xlat
pusha
clc
outsl
push
xchg
mov
mov
jl
aad
fnstcw
jge
aas
out
and
out
xchg
out
jmp
nop
shl
aaa
cmp
add
inc
mov
daa
clc
inc
loope
mov
push
pushf
int
mov
xchg
testl
sub
in
xchg
dec
imul
shll
out
movsb
dec
jbe
pop
stos
fadd
mov
mov
mov
cs
in
addr16
inc
xor
lods
sti
and
pop
lret
cltd
cmp
sub
add
xor
push
jae
popf
insb
dec
push
pop
ds
fwait
movl
pop
xchg
out
nop
fbld
pushf
or
dec
add
imul
jmp
mov
xchg
ss
inc
jmp
or
add
or
int
xchg
movsb
pop
iret
scas
loop
mov
jb
pop
jecxz
adc
out
shl
insb
in
or
lcall
xor
sbb
in
pop
xchg
addr16
leave
clc
mov
test
negl
jnp
sti
in
inc
mov
nop
js
int
inc
cmp
push
bound
repnz
push
cwtl
or
je
xadd
jns
sub
dec
mull
adc
push
shlb
test
outsb
dec
push
push
pop
shll
jg
cwtl
int3
xor
and
pop
enter
or
or
addb
imul
push
jg
mov
int3
enter
cltd
xor
sti
je
loop
xlat
mov
sbb
pop
aad
add
jae
fmuls
or
pop
je
or
adc
xchg
dec
out
inc
cld
push
add
mov
subb
jo
and
loopne
push
rcrl
aaa
popf
sbb
pop
aas
addr16
jmp
pusha
imull
neg
pushf
jno
xchg
dec
cli
inc
in
pop
adc
lock
pop
jp
je
pop
push
shl
bnd
mov
sti
push
inc
inc
inc
out
subl
lock
jge
inc
push
xchg
and
pop
js
jae
std
mov
ja
xor
popf
cmp
fxch
jnp
loop
mov
mov
loopne
and
mov
hlt
dec
popa
mov
sbb
loopne
push
out
in
jnp,pn
es
arpl
push
lods
rorl
jae
dec
mov
and
xchg
push
mov
dec
mov
dec
outsb
mov
pop
sbb
out
dec
outsl
jno
outsb
negb
pop
and
mov
sub
shr
pop
aas
mov
add
push
pop
dec
mov
dec
mov
sub
push
xchg
cmp
pushf
repnz
mov
dec
js
jmp
cmc
sbb
pop
fistps
cmp
inc
and
add
mov
adc
cli
clc
inc
xchg
add
mov
jmp
or
ljmp
ss
mov
jmp
cs
shl
cli
pop
mov
aad
mov
enter
lret
inc
clc
cmpsb
in
dec
mov
insl
in
cmp
mov
popf
sahf
add
cmc
out
negb
or
aaa
int3
in
cs
rcrb
aam
and
in
fldcw
or
sub
or
aam
lds
mov
lods
inc
jns
sub
cmpsb
cmp
mov
les
mov
xor
cmp
test
aam
cmp
jmp
push
xlat
lods
inc
notl
mov
push
sbbl
adcl
or
push
je
push
rcrb
cmpsl
add
cmp
hlt
pop
out
pusha
push
sti
ficoml
sub
les
ret
xchg
sub
int3
pop
ret
test
loope
xchg
lcall
dec
cs
jae
xchg
jg
push
mov
mov
and
loope
mov
xor
lcall
and
jecxz
xchg
loope
mov
adc
enter
gs
sub
cmp
flds
dec
mov
push
lods
jp
negb
jl
push
mov
lahf
push
repnz
adc
sub
out
dec
mov
imul
dec
dec
sub
in
and
xor
adc
push
and
jbe
fs
lds
outsb
sbb
enter
shlb
in
stos
pushf
sub
int
sub
xchg
data16
in
or
add
pop
lods
push
imul
push
in
popa
add
in
aam
not
xchg
les
pop
fcomps
in
mov
cmpl
dec
sti
or
icebp
push
sbb
scas
and
jle
sub
negb
je
fstp
sbb
sarl
mov
jp
xorb
pop
or
in
or
pop
mov
loope
sahf
inc
push
sti
orl
and
jae
jmp
mov
lds
loop
adc
xchg
sub
scas
push
inc
dec
lcall
inc
ljmp
or
nop
dec
dec
push
mov
mov
data16
adc
in
mov
outsl
jbe
fnsave
cwtl
jecxz
mov
cld
cmpsb
mov
int3
test
and
or
ret
test
int
add
adc
push
push
enter
in
xchg
sbb
add
orb
jae
shr
dec
cmp
pop
cld
int3
out
outsl
and
dec
sub
mov
orb
adcb
cmp
inc
push
jl
mov
sti
xchg
sub
xor
in
xchg
adc
aam
and
aam
adc
mov
loop
lds
sti
adc
dec
add
xor
jg
ja
pop
sbb
int3
dec
sub
add
xchg
daa
push
fs
stos
test
pop
ja
outsl
jl
jne
jns
clc
in
lods
in
lret
pop
adc
jmp
loopne
pusha
jg
cmp
mov
push
sbb
es
les
aad
and
jnp
and
push
pushf
imul
jne
add
ret
aaa
fwait
cmp
xchg
nop
push
or
jge
cmp
xor
lcall
dec
into
andb
mov
cli
sub
adc
fldenv
jg
out
jp
sub
mov
call
pusha
sub
xor
fs
fists
adc
cmp
push
orb
or
adc
mov
jae
jne
jno
repnz
dec
dec
int
fisubs
inc
adc
mov
sbb
in
sbb
lea
fldl
sbb
cmp
sbb
dec
lods
or
adc
shrl
std
sahf
adc
add
arpl
sub
outsb
stc
fs
xlat
loopne
mov
adcb
pop
outsl
or
jp
sar
jl
cld
dec
push
or
sarl
test
lcall
aas
push
cmp
sub
in
sub
pop
cmp
xchg
pop
mov
push
or
mov
subb
dec
add
cltd
xchg
cwtl
mov
test
addr16
js
arpl
clc
lods
stc
fiaddl
mov
and
or
test
jne
jnp
jge
fs
cltd
pop
cwtl
sahf
imul
ret
inc
outsl
xor
popf
pop
pop
inc
jp
mov
push
in
lds
cmp
mov
les
and
push
ret
test
and
jns
jmp
in
imul
or
and
js
xchg
iret
xorb
pop
aam
sbb
mov
je
xchg
push
xor
mov
push
bound
bound
lahf
inc
lcall
les
push
ficoml
push
or
mov
pusha
stos
cs
xchg
or
pop
and
hlt
dec
popa
mov
pop
or
ret
std
ficoms
mov
fdivl
jge
mov
xchg
and
imul
sub
mov
xchg
mov
jo
mov
popa
cwtl
add
adc
stos
mov
aas
dec
sbb
aas
imul
and
test
jmp
sub
mov
pop
xchg
leave
scas
and
data16
inc
fidivrs
dec
jo
add
lock
aas
loope
add
mov
or
pop
jno
insb
loop
inc
test
lret
pop
shlb
negb
decb
jmp
cwtl
popa
test
dec
int3
cld
or
lret
addr16
lcall
jbe
cmc
pushf
and
shrl
sbb
cmpsb
int
pop
and
loopne
ja
fimuls
adc
add
arpl
xor
out
push
xor
sbb
arpl
push
or
ja
daa
inc
jecxz
ret
and
cmc
dec
sbb
pop
nop
js
in
loopne
icebp
outsb
ret
jns
inc
push
or
sahf
cmp
dec
and
cmc
imul
repz
negb
fbstp
lods
mov
in
sub
icebp
mov
lock
adc
loopne
int
jb
ret
movsl
in
push
push
mov
je
int3
popa
lret
push
add
insl
gs
mov
sub
daa
lds
out
sahf
jae
mov
add
gs
add
pop
andl
je
in
mov
rorb
imul
rcrb
call
pop
enter
cmp
in
dec
rorl
scas
fmull
jecxz
orl
sahf
adc
sahf
out
fxch
and
and
or
int
jns
mov
insb
pop
push
hlt
clc
mov
or
push
lock
sbb
inc
inc
out
xor
ret
mov
outsb
movsb
jbe
xchg
mov
cli
pop
xchg
int3
add
mov
lock
jp
mov
mov
or
outsb
lret
dec
adc
aad
loopne
sbb
pop
adc
jae
aad
cli
outsl
pop
lea
sub
xchg
pop
adc
mov
mov
or
push
test
out
add
out
rol
scas
cwtl
cmp
fnstenv
xchg
pop
pop
fbld
ljmp
mov
add
inc
mov
sbb
xchg
add
inc
loopne
rcll
xor
mov
int
push
scas
push
jb
cmp
cmp
ficoms
inc
jbe
or
pop
or
imul
sti
and
jno
loop
and
mov
pop
mov
jbe
jp
pop
mov
popa
lds
cld
adc
push
icebp
dec
call
jae
jnp
mov
mov
loop
pop
mov
inc
aas
imul
xchg
stc
popa
lcall
scas
subb
and
or
lock
push
test
mov
stos
xchg
add
out
mov
fadds
and
ds
adc
pop
test
shlb
lret
xor
push
cld
ja
and
sbb
cmp
cmpsl
push
lahf
pop
out
pushf
inc
data16
nop
push
dec
andb
mov
add
jae
xchg
jo
cmp
popa
pusha
daa
aas
jp
xchg
pop
daa
dec
mov
fistpl
iret
push
outsb
inc
push
fmull
psllq
gs
jge
pop
testb
xor
outsl
out
lea
pushl
addl
mov
cmp
lcall
shr
push
ficoml
cmpsl
loop
ljmp
push
insb
fwait
es
push
aam
rorb
mov
scas
ss
movsb
mov
call
push
push
gs
fcoms
cmp
sub
add
das
aam
int3
cmpb
in
cmp
xlat
sub
lcall
lahf
sub
pusha
sbb
data16
add
and
pushf
cmpsl
cmpsl
lret
and
sbb
inc
or
jecxz
je
push
bound
daa
lret
add
fldl
fcmovu
ljmp
adc
jle
das
pop
loop
and
sub
frstor
rcrb
add
mov
add
scas
lahf
add
xchg
lea
inc
inc
or
inc
and
cli
xor
cmp
repnz
mov
or
and
and
repz
mov
cli
xchg
gs
mov
mov
xchg
mov
pop
outsl
xchg
add
inc
xor
scas
mov
sub
and
mov
test
leave
lock
je
insl
xchg
in
dec
xchg
into
jmp
dec
mov
xchg
enter
jno
iret
pop
cmpsl
mov
in
dec
sbb
lods
sbb
pop
pop
in
test
pop
lods
mov
sbb
sub
sbbl
stos
jbe
lahf
test
scas
cwtl
iret
or
inc
lret
inc
ljmp
mov
ljmp
addl
add
mov
in
pop
jecxz
cmp
sarl
adcb
xchg
jp
sub
ljmp
cmp
nop
mov
in
ficoml
mov
repz
pop
sti
xor
mov
fldcw
dec
inc
adc
mov
jle
sbb
mov
stc
out
or
call
aas
mov
cmp
stos
ffreep
daa
xor
adc
jbe
mov
leave
push
mov
negl
aaa
pop
pop
and
cmp
adc
add
into
inc
pop
int3
mov
sbb
adc
inc
mov
imul
fldcw
hlt
dec
gs
adc
cmc
add
dec
jmp
adc
movsb
aas
mov
pop
into
mov
stc
inc
test
jnp
imul
add
xlat
xorb
add
pop
scas
stc
jmp
mov
or
xor
mov
imul
dec
sub
xchg
ljmp
push
xchg
dec
cltd
and
mov
sub
jmp
adc
pop
icebp
imul
cwtl
dec
xchg
shlb
jle
fidivrs
dec
mov
jb
inc
adc
movsl
cmp
pop
sub
cmp
fcompl
pop
sub
ds
lods
inc
sarb
sub
pop
fistps
ja
adc
lods
or
adc
adc
sub
sub
push
rcrb
lret
jmp
and
sti
rcrb
lret
gs
mov
fwait
xorl
xchg
movsl
lret
and
or
xor
inc
add
sbb
adc
js
cmp
push
pop
push
ret
cld
test
es
push
mov
xor
clc
outsb
and
mov
cmp
add
addr16
pop
jle
ss
out
xor
pop
ss
aaa
mov
jnp
push
addl
hlt
jae
ss
mov
adc
or
stos
lods
push
insb
xor
cmpsl
clc
test
xor
inc
add
sub
fisttpll
stc
xor
mov
icebp
es
add
mov
sub
outsb
stos
push
xor
mov
cmc
xchg
int3
and
push
jl
mov
jo
push
mov
lds
push
repz
adcl
pushf
cmpsl
lahf
pop
xlat
push
sarb
mov
ficoml
fwait
push
xor
mov
mov
into
in
xorb
adc
mov
mov
add
mov
xchg
repnz
jb
repnz
aad
fistpll
out
and
adc
or
push
push
adc
ss
cmp
lahf
jne
hlt
lea
or
rcr
ficomps
stos
daa
mov
pusha
int
lret
add
cmpsl
loopne
add
stos
adc
push
push
lret
cli
ds
scas
cmp
or
or
negb
adc
fwait
sbb
jb
pushf
shrb
lea
cwtl
xchg
ret
jle
adc
mov
mov
pop
es
mov
das
xchg
negl
jno
push
repz
sbbl
mov
jno
sahf
and
mov
shlb
stc
rorl
repz
fcoms
int
hlt
push
inc
mov
mov
lock
icebp
cmp
stos
push
stos
or
popf
clc
pop
cwtl
daa
jle
popa
cmpsb
cmp
mov
mov
and
ljmp
pushf
push
fdivs
jnp
pusha
int
inc
addr16
mov
lcall
mov
pop
push
mov
aaa
xchg
data16
fwait
cmp
mov
xor
push
mov
insb
mov
iret
testl
arpl
inc
stc
in
mov
dec
stc
int
fadds
mov
jle
inc
xchg
stos
cmpsb
or
adc
jnp
cmp
cs
decb
outsb
pop
and
test
fs
mov
and
push
lods
test
pop
adc
or
push
mov
ret
in
cmc
aam
xchg
leave
sbb
cmpsb
cmp
dec
out
and
mov
sub
jg
sahf
loope
pop
xor
dec
insb
mov
cmp
and
fildll
movsl
lcall
xor
lods
lcall
cli
lock
rolb
mov
and
fcomi
adcl
test
jo
jnp
lds
jbe
jb
aas
les
ss
bound
fiadds
cmc
mov
mov
dec
xor
dec
xchg
je
jae
adc
iret
daa
xlat
push
or
push
lret
lahf
clc
dec
or
cmp
push
sbb
inc
fcoms
std
jns
pop
mov
push
or
rcrl
cmp
aaa
push
sbb
add
push
xorb
cld
jmp
sub
aaa
in
das
xchg
pop
outsb
sbb
jo
rcrb
in
call
fnstenv
push
js
sbb
dec
sti
out
mov
xchg
shrl
push
sbb
pop
loop
popl
push
mov
inc
cmp
inc
push
mov
data16
in
sub
lods
xor
jb
push
jno
insl
scas
mov
push
subb
into
out
jno
in
mov
jecxz
ss
jbe
xchg
cltd
jle
shll
inc
dec
mov
sub
add
or
dec
clc
and
mov
xchg
inc
push
outsl
ss
rcrl
movsb
pop
dec
testl
cmp
fdivp
push
xor
iret
movsl
mov
and
xchg
outsb
movsb
xor
xchg
int
pop
dec
stc
mov
mov
insl
add
add
and
pop
sub
xor
divb
repz
inc
xchg
xor
cmp
jae
sahf
jb
test
iret
fisubs
movsl
or
xor
call
or
fs
push
xchg
inc
pop
cli
push
sub
jo
scas
dec
sbb
shrb
xchg
dec
inc
pop
mov
adc
pusha
sbb
arpl
cmp
dec
call
add
jno
mov
mov
mov
pop
inc
negb
or
lret
xor
pop
mov
insb
jo
pop
shl
loop
push
fstps
insb
dec
cmp
shrb
test
xchg
sbb
inc
int3
mov
cmc
scas
dec
fcmovne
js
cmpsl
push
sbb
jge
sbb
and
and
add
cs
orb
or
xor
pusha
shlb
xor
xchg
cmp
xchg
insb
movsb
mov
push
stc
movntps
mov
mov
loop
adc
or
pop
xor
stos
jnp
cli
inc
pop
and
cltd
dec
aaa
fists
test
in
or
push
jle
mov
aaa
aas
and
jmp
cmp
or
ficomps
xchg
and
ja
cmp
sahf
enter
lods
push
and
adc
lcall
pop
sbbb
mov
popf
insl
xchg
pop
addr16
ret
pop
rcrb
jg
xchg
cwtl
ss
cmp
arpl
adc
sub
and
stc
mov
cmp
ror
pop
test
dec
test
add
imul
mov
add
or
inc
mov
or
fildl
xchg
insb
sbb
sahf
add
test
push
inc
push
sub
push
cmpb
or
push
shrl
rcrb
jb
fs
clc
inc
push
pushf
pop
jns
aaa
push
pop
xchg
imul
clc
xorl
cli
rorl
mov
jecxz
icebp
dec
xor
xor
mov
push
cmc
sbb
mov
movsb
sbb
pop
dec
pop
adc
pop
and
mov
inc
aam
xchg
inc
inc
int3
sub
cmpb
mov
in
jae
movsb
or
pand
pop
ds
movsb
sub
stos
test
mov
push
xchg
fdiv
jno
or
mov
int
fadds
fcoms
andl
rcrb
cltd
add
or
inc
adc
jge
cwtl
adc
test
nop
movsl
adc
jbe
lods
cltd
jg
mov
and
bsr
dec
ss
nop
xchg
movb
shlb
out
and
stos
sbb
sbbb
cmp
and
xchg
sahf
insb
sahf
sub
adc
popa
sub
sbb
pusha
das
mov
aad
add
popl
jbe
cli
mov
aad
pop
sahf
dec
mov
inc
cmp
mov
mov
sbb
subb
cmp
cwtl
pop
std
cwtl
cwtl
mov
push
rcrl
pop
sub
push
xchg
adc
pop
pop
pop
rcrb
xor
mov
inc
icebp
jl
mov
push
imul
jg
fstpt
pushf
xor
mov
nop
jl
mov
pop
xchg
pop
xorb
xor
mov
leave
cwtl
xor
sti
xchg
inc
jo
jp
hlt
std
or
lcall
lea
bound
xor
arpl
cmp
xchg
ja,pn
sub
and
std
fs
dec
pop
or
fwait
nop
sub
lds
js
ds
je
xor
xor
mov
int3
jnp
inc
cmc
xor
add
inc
dec
sbb
and
loopne
pop
popl
xor
in
pop
cmpsb
mov
lds
arpl
int
dec
jmp
sti
fadds
add
fistl
add
pop
jnp
cltd
dec
inc
cmp
lcall
and
mov
int3
adc
enter
jnp
dec
xor
stc
jae
cs
cmc
mov
mov
jmp
mov
imul
mov
jl
pop
ret
lods
push
movsb
shrb
xchg
mov
mov
push
jge
bound
xchg
or
negb
adc
jecxz
cmp
or
enter
adc
shlb
inc
outsb
pop
loope
or
movsb
in
cwtl
movsb
imul
or
add
shll
mov
mov
pop
mov
sbb
ja
aam
adc
call
pop
add
testb
loopne
rorb
or
jo
inc
push
ljmp
ret
divb
cmc
xor
xor
out
pop
stos
cmp
sub
adc
push
hlt
inc
mov
xchg
add
lret
das
lcall
and
add
lret
jp
in
lahf
gs
jnp
lret
shrb
xor
or
pop
sub
and
cld
pop
cmp
jb
pop
cmc
jbe
xor
xchg
pusha
mov
and
lcall
add
sahf
jb
jp
lcall
popf
scas
add
mov
scas
addl
pop
inc
lds
mov
ret
scas
into
aad
fldt
or
and
add
imul
pop
loop
dec
arpl
dec
inc
dec
or
test
add
mov
into
aaa
dec
mov
mov
push
popa
into
insl
data16
push
sbb
and
fmuls
mov
cli
add
mov
add
mov
cld
and
push
pop
insb
loopne
and
cmp
cmp
test
call
rcrl
test
dec
dec
in
pushf
lea
push
movsl
sbb
xchg
int3
daa
movsl
imul
ret
add
es
xchg
jo
into
lret
jne
fistl
xchg
test
adc
cmp
inc
loopne
adc
aad
pop
je
sub
pop
leave
aad
add
pop
sbb
subl
sbb
arpl
dec
shrb
je
xchg
addl
xchg
andl
push
xchg
sahf
inc
out
frstors
mov
popa
sbb
les
jo
test
into
addl
popf
or
cmp
gs
cmp
xor
sti
lds
sub
mov
xor
mov
sar
sti
pop
sbb
mov
or
xchg
pause
cmp
call
ret
push
rol
les
lcall
nop
pop
mov
inc
mov
fsts
ds
push
mov
sahf
sub
fprem1
fldcw
cmpsl
pop
fnsave
js
out
movsb
and
pop
out
push
cmp
in
mov
daa
and
xchg
jo
jl
out
rclb
mov
std
add
pop
mov
sti
in
dec
sub
orb
scas
pop
xor
add
xchg
push
pop
ret
dec
or
clc
jl
fisttpll
dec
cmc
popa
call
in
aas
int
push
jecxz
es
cs
add
ss
lods
out
sub
adcb
adc
gs
add
sub
mov
mov
mov
adc
sub
add
xchg
daa
repz
sar
leave
pusha
xor
and
cs
fwait
jg
or
sbb
cmp
fwait
push
xchg
dec
xchg
sahf
pop
shlb
lret
and
pop
call
enter
test
out
stc
or
das
or
adc
pop
cmpsb
lock
xchg
ds
jge
std
hlt
rcl
lock
clc
mov
arpl
fsubs
lods
pop
add
or
in
adc
mov
dec
into
mov
push
jo
imul
mov
cmp
ss
fidivrs
inc
jg
shl
ffreep
cwtl
mov
jb
add
push
or
adc
add
sbb
jecxz
xchg
dec
or
repz
test
cwtl
daa
jne
mov
fs
rcll
out
xchg
sub
push
mov
sbb
ds
ja
ret
dec
rcll
jge
mov
mov
jle
cmc
jg
push
mov
gs
push
push
ds
xchg
lods
push
cmp
xchg
aad
add
xchg
mov
shll
icebp
dec
adc
imul
sub
pop
xchg
ds
xchg
jle
inc
push
mov
xchg
les
mov
jmp
lret
idivb
jmp
push
mov
rol
pop
mov
adc
bnd
or
rcrb
add
fdivr
sbb
outsb
ljmp
mov
xchg
dec
xorl
dec
push
jo
ret
icebp
jle
andb
cwtl
jecxz
push
pop
pusha
popf
push
into
jbe
jge
repnz
pop
add
sub
gs
push
mov
cmc
jae
pop
mov
sub
in
test
int3
jmp
test
xor
fistps
arpl
roll
scas
addr16
ret
inc
pop
shl
add
cmp
mov
and
xchg
mov
xchg
xchg
imul
or
mov
or
inc
icebp
push
dec
and
movsb
cltd
xor
sbb
or
add
aaa
aas
jl
test
inc
inc
or
xchg
stc
xlat
xchg
and
js
dec
mov
ds
fildl
in
ljmp
test
mov
xor
jl
lock
loope
inc
mov
add
add
pop
fmuls
into
scas
jne
xor
lds
int3
mov
sbb
sub
mov
cli
int
adc
int3
pop
xchg
inc
fsubl
jns
rclb
ret
lock
bound
jnp
or
inc
dec
lcall
sbb
add
sub
inc
andb
push
mov
data16
js
in
jge
sbb
jnp
in
mov
scas
hlt
fisubs
xlat
mov
cmp
test
inc
arpl
or
lret
pop
fmuls
xor
ds
daa
dec
inc
push
or
inc
cmp
aad
sbb
test
inc
ss
push
je
ror
adc
and
dec
iret
es
ljmp
mov
jge
sbb
jb
sub
ds
int
sahf
xor
xchg
sbb
insb
imul
jnp
jno
sbb
sub
subl
dec
out
mov
je
add
mov
lahf
dec
scas
out
sbb
daa
cli
cmpsb
cltd
out
fidivs
push
fwait
sbb
sub
sbb
or
stc
ljmp
movsl
jno
jge
test
mov
pop
sbb
jp
and
sub
imul
mov
or
out
jmp
cmp
dec
mov
loope
ret
imul
sub
and
mov
lock
test
push
ret
mov
xorb
or
sub
dec
adc
mov
jb
sub
aam
dec
lahf
push
inc
test
inc
pop
push
mov
mov
mov
or
cmc
mov
es
dec
in
push
push
dec
mov
pop
aas
or
mov
sbb
xchg
data16
jno
inc
je
inc
mov
push
andl
push
push
mov
cmp
dec
sti
pop
data16
mov
in
mov
mov
fisttps
add
js
sbb
push
pop
sub
xchg
xorl
adc
lods
lahf
xor
and
and
dec
ja
jmp
das
lahf
inc
enter
rclb
xchg
inc
cmpsb
xchg
imul
into
hlt
mov
push
jnp
aas
push
and
iret
dec
out
nop
mov
icebp
jge
mov
aad
or
push
insb
pushf
iret
jns
nop
pop
test
adc
dec
sbb
dec
xchg
jmp
dec
setl
pusha
cld
or
aam
pusha
jmp
pop
dec
and
sub
call
sar
inc
mov
jnp
loopne
mov
cld
dec
cs
je
mov
and
out
inc
mov
lahf
fdiv
and
std
and
ss
in
xor
inc
mov
pushf
out
mov
mov
jne
fsubr
test
xor
or
pop
and
jp
fists
dec
xchg
add
out
mov
sbbb
cs
adc
lret
xchg
add
pop
fnstcw
sub
xor
mov
rolb
out
mov
push
ja
dec
mulb
sub
and
pop
push
inc
jg
xchg
rcll
inc
dec
mov
aas
lahf
int
dec
out
jmp
dec
enter
flds
iret
ja
or
push
iret
push
lods
mov
test
call
mov
mov
int3
and
jmp
imul
push
dec
inc
iret
add
shll
add
mov
inc
loopne
cld
xchg
divl
xorl
fcoms
cmpsl
dec
or
unpcklps
push
lods
fcmove
aad
dec
orl
mov
hlt
insl
and
push
push
repnz
mov
addr16
sarb
jnp
ds
cltd
gs
jne
vpcmpgtw
popa
lock
push
xor
test
xor
xchg
in
sbb
sbb
enter
pop
cmpl
out
inc
push
cltd
and
rcr
sbb
pop
push
mov
mov
mov
xchg
xor
aad
sarb
or
cmp
movsl
xchg
xchg
or
dec
jmp
scas
insb
mov
jg
in
inc
cwtl
add
ror
bound
or
xchg
dec
pop
inc
mov
leave
or
push
xor
lods
popa
inc
ret
adc
cltd
xchg
cld
mov
or
mov
push
mov
sbb
add
aaa
push
roll
add
mov
sub
push
mov
out
aad
mov
testb
divb
dec
add
mov
cmp
mov
arpl
pop
call
inc
add
sub
cmp
out
inc
mov
loopne
bound
push
and
in
cmp
mov
xchg
xor
xchg
out
dec
jb
and
stc
xchg
jmp
gs
jns
aam
mov
stos
and
jg
enter
outsb
or
int
fwait
cmp
sub
mov
adc
cmpsl
es
ljmp
pusha
das
push
cmpsl
dec
ret
ja
cld
and
inc
negb
imul
movsb
divb
lahf
xchg
call
fs
fs
fwait
mov
cmp
cmp
lret
mov
mov
dec
and
out
jns
mov
xor
ror
cli
adc
dec
push
pop
adc
insl
and
fstpt
mov
fnstcw
test
lcall
popa
sub
xor
and
jae
clc
mov
add
sub
adc
imul
dec
push
and
mov
or
mov
cs
sbb
inc
out
xchg
mov
cs
xor
popf
popl
or
or
mov
ret
fildll
ret
jge
adc
and
cmp
aaa
cmp
add
pop
insb
ss
push
stc
or
test
mov
pop
inc
lock
sub
jbe
aaa
or
lock
cmp
jmp
mov
fisubs
mul
inc
or
lods
mov
push
mov
cmpsb
rcr
cmp
adc
push
mov
push
mov
test
pop
fisttpl
xchg
fbld
movsl
insb
iret
xor
rorl
or
dec
sub
je
iret
xlat
int
loop
sub
jbe
cmp
mov
inc
insl
push
rorl
negb
mov
inc
adc
and
das
cmp
xlat
cld
pop
sub
fstpl
cmpsl
mov
les
xor
inc
mov
lods
das
pushf
stc
es
push
mov
dec
lods
bound
loop
shrl
shrb
sti
dec
xchg
mov
shr
iret
test
or
inc
gs
jl
add
in
sbb
pop
outsb
pusha
addl
and
inc
sti
fld
adc
negl
add
jmp
push
jnp
xchg
enter
icebp
sub
jo
pop
nop
lret
call
mov
bnd
jb
cmpsl
add
jnp
in
bound
adc
fcomip
inc
lods
movsb
fsubl
push
and
ret
scas
cwtl
fisubl
in
add
lods
mov
jp
mov
test
in
addl
sub
divl
scas
sub
out
inc
lahf
add
cmpsl
imul
cmpsl
mov
ret
mov
jg
jne
jns
push
cltd
jg
jo
pop
add
adc
jmp
pop
into
sbb
xor
das
mov
mov
cmp
mov
pusha
hlt
rol
ffree
or
rclb
xbegin
push
ja
and
sbb
jp
mov
push
cld
insb
lahf
xchg
iret
push
xor
sbb
daa
and
popf
cmpsl
les
jge
cs
popf
adc
lods
mov
movsl
insl
test
pop
popa
mov
cld
sub
cmpsb
pop
movsb
mov
sub
mov
sub
sub
in
bound
imul
add
icebp
xor
push
pop
sbb
inc
add
cmp
idiv
jmp
ret
or
int
ficomps
cmp
sbb
imul
repz
xor
add
in
mov
or
inc
xchg
sahf
mov
pop
adc
xchg
mov
daa
push
jne
imul
pop
aaa
loope
imul
fldt
rcll
push
incb
ljmp
cmp
xchg
loop
pop
mov
push
jno
mov
je
les
out
add
repnz
or
xchg
nop
scas
adc
sahf
mov
loopne
sbb
cmovle
cmp
or
sub
fcoml
jmp
stos
pop
fldt
jg
xchg
out
addr16
jne
int3
mov
stc
push
inc
shll
xchg
shrl
cmc
push
inc
mov
mov
xor
inc
xchg
dec
jns
push
cwtl
push
lret
in
xchg
insl
mov
inc
bound
cmp
add
lock
xchg
pusha
jle
enter
jbe
jae
cmpb
jae
xor
mov
jp
aad
subb
mov
test
inc
xor
hlt
bound
and
inc
push
movsb
jle
test
or
mov
fidivrs
fdivp
add
loop
mov
pop
dec
repz
mov
mov
sbbb
sub
call
push
fwait
imul
aam
fsubp
mov
loop
dec
gs
punpckldq
sub
xchg
cmpsl
cmp
pushf
in
add
sub
add
outsb
sar
cli
cmc
mov
push
loope
mov
mov
mov
add
clc
dec
jns
add
sbb
push
pop
dec
mov
mov
movsb
ds
addr16
jno
sbb
mov
mov
mov
mov
bound
mov
mov
popf
cmpsl
int3
addl
fsubrs
cmpsb
in
repnz
sub
adcl
mov
or
mov
sbb
cli
shl
mov
inc
mov
adc
or
fwait
mov
lea
pop
pop
inc
insl
es
jne
das
pop
icebp
int3
imul
ret
imul
out
push
pop
xor
push
push
sub
push
push
cmpsb
scas
sbb
in
xchg
xchg
and
sbb
jmp
movsb
lahf
sub
jb
addb
leave
loopne
mov
popa
ds
jno
clc
xchg
mov
and
aas
cltd
and
adc
hlt
into
xchg
inc
xchg
test
aam
lret
mov
inc
aas
push
loope
adc
add
bound
sbb
jge
out
stc
dec
mov
call
mov
out
out
push
sahf
mov
fs
jp
mov
and
pop
adc
xchg
popl
adc
aam
wbinvd
mov
movsb
cwtl
push
test
cmp
mov
add
dec
xchg
cld
pushl
jns
mov
mov
jle
lret
cmp
aaa
mov
xor
fs
xor
cmpsb
icebp
xchg
rcrl
cwtl
adc
add
xchg
cltd
fsubl
out
nop
into
aam
pop
mov
cmp
sbb
fsubs
and
mov
xchg
rclb
fldcw
data16
xor
out
out
xchg
push
mov
cli
pop
movsl
lret
jno
hlt
mov
push
sub
xor
pop
out
mov
and
shll
in
loop
das
ror
or
dec
rcrl
into
cmc
sbbl
rclb
mov
dec
pop
jo
test
and
out
fdivr
mov
mov
xchg
cmp
test
cmc
mov
add
sub
fdivr
jbe
pop
xor
scas
push
jecxz
push
rcrl
ljmp
mov
jle
lods
pop
sbb
out
lods
pop
insb
shl
outsl
call
inc
sub
sub
xchg
inc
daa
cmp
jg
xor
mov
inc
adc
shrl
adc
push
into
mov
and
cmp
add
mov
enter
or
nop
xchg
into
pop
sbbl
push
adc
xorl
dec
cli
sbb
aaa
cli
int3
mov
jbe
cmp
ss
lods
inc
mov
pop
cmpsb
push
jmp
inc
lods
cmp
cmp
mov
inc
insl
pop
mov
lods
data16
xor
jae
sahf
out
icebp
pusha
lods
arpl
pushf
and
pushf
and
pop
aad
adc
jmp
mov
fwait
add
mov
xlat
adc
jge
shl
scas
pop
and
repz
inc
ja
or
adc
sbb
add
pusha
sub
xlat
stos
xor
xor
sbb
push
jecxz
fcomip
aaa
xorl
xchg
testb
mov
pop
fdivs
inc
stc
movsl
cwtl
fnstenv
push
or
mov
mov
leave
pop
jns
jns
mov
out
imul
mov
dec
fwait
mov
inc
daa
dec
icebp
lea
addb
pop
lcall
stos
dec
and
or
jecxz
rcl
cmp
das
add
mov
insl
divb
lcall
inc
and
mov
into
mov
lock
pop
add
add
ds
push
dec
xor
movsl
nop
pop
mov
sahf
fsubr
mov
pop
aam
jnp
cld
dec
mov
and
inc
sbbb
pushf
test
std
mov
sbb
add
mov
shrl
xchg
aas
jne,pn
fistpl
or
or
pop
jo
adc
mov
out
loop
push
or
inc
xchg
outsl
sti
push
xchg
pop
mov
pop
call
fcmovnb
cltd
loope
in
adc
push
add
aaa
push
fcoms
xchg
pop
andb
xchg
jp
sub
jecxz
das
shl
imul
out
outsl
mov
shlb
cs
subb
loopne,pt
xchg
fnsave
mov
jo
push
add
das
mov
stos
jg
std
fisttpll
mov
xchg
mov
cmpsb
pop
je
mov
stos
mov
cmp
out
loopne
mov
mov
jp
jp
add
jg
pusha
adc
push
xor
imul
dec
out
aas
sub
in
sub
inc
js
xchg
adc
mov
mov
arpl
nop
cmc
xor
ljmp
inc
aas
push
cmp
adc
call
push
xor
outsl
addr16
mov
cmp
sub
cmc
fisttpll
insl
cltd
or
and
test
cmp
fcompl
xor
pop
push
mov
cmp
shll
mov
xchg
pop
inc
rolb
adc
or
aad
imul
add
jnp
rcrb
xchg
inc
dec
mov
mov
xchg
ja
out
xor
ret
cli
mov
jle
mov
repz
das
shl
mov
push
aas
pop
sub
cmpsb
daa
pop
jp
pop
pop
or
popa
xchg
sub
pop
fs
inc
icebp
insb
hlt
sub
adc
inc
or
sub
push
pop
aas
arpl
aam
push
jle
nop
pop
xchg
int3
add
mov
inc
xchg
mov
pop
mov
cmc
mov
inc
cmpsl
lods
mov
jnp
imul
idivb
jno
popa
cmp
mov
and
mov
jge
push
cld
jecxz
xchg
dec
ja
sbb
loop
mov
enter
nop
mov
fwait
mov
lods
jge
inc
fnstenv
mov
fistpll
stos
mov
xor
jns
repz
xor
push
sbb
cmpsb
dec
enter
leave
in
sub
fmull
jo
mov
push
fsubs
and
out
jne
sbb
push
out
cmp
scas
sbb
jp
xor
daa
sarb
movsl
out
movsl
sub
mov
and
fldenv
mov
ljmp
dec
add
or
imul
lahf
inc
hlt
xchg
mov
fidivl
sbb
fbstp
shrl
add
popl
pushf
ret
bound
xchg
aaa
push
xor
mov
jmp
movups
ret
xor
imul
and
arpl
inc
pop
shrl
or
cltd
or
rcl
daa
or
xor
cmp
aas
adc
popa
cmp
mov
psubusb
into
pop
push
pop
push
into
jbe
into
or
mov
test
jns
and
loope
jne
sarl
test
mov
xchg
ja
gs
or
xchg
jp
push
and
aam
cmp
adcl
test
shll
scas
xor
mov
or
jle
clc
orl
ja
lea
inc
adc
mov
sbb
mov
pop
mov
std
sbb
cli
call
sahf
sbb
jnp
cld
inc
mov
jo
jno
mov
hlt
stc
and
das
mov
fs
xchg
imul
mov
xchg
xchg
sub
push
je
push
xor
rcrl
insb
dec
adc
cmp
adc
aas
fdivs
mov
and
aas
sub
out
fwait
cli
outsb
pushf
std
fs
cmp
loop
push
push
adc
std
lcall
push
xchg
pop
cli
data16
or
cmp
sbb
add
nop
add
lock
and
push
mov
mov
or
bound
rcr
xchg
scas
add
jne
lock
int3
ret
lds
scas
jle
mov
pop
cmp
outsb
mov
std
sbb
mov
sbb
movaps
adc
jae
xor
xchg
daa
arpl
dec
pop
push
push
and
push
ljmp
enter
xchg
adc
test
mov
imul
push
pop
xor
cmpsl
push
jb
ja
das
cmp
jb
or
in
sbb
mov
mov
loop
and
adc
dec
adc
or
push
ss
push
and
mov
hlt
mov
jnp
lods
nop
add
xchg
das
mov
jnp
sbb
fucom
shll
iret
sbb
movsb
mov
push
sti
mulb
cmp
mov
imul
push
popf
jecxz
cld
push
or
sub
pop
jmp
xchg
push
cmpsb
paddusw
xchg
add
hlt
icebp
or
imul
push
ret
imull
daa
cmp
mov
push
pop
or
pop
enter
fst
icebp
jb
test
outsl
pop
push
mov
inc
in
pop
and
cmp
jae
push
add
rclb
mov
sub
rclb
nop
fstl
sbb
test
leave
daa
andl
in
pop
imul
cmpsb
fs
inc
test
popf
fwait
jg
dec
out
pop
fnstsw
movl
dec
add
jns
jle
fstpl
inc
popf
jne
lods
test
out
outsb
mov
xchg
pop
sub
push
jmp
push
push
add
mov
cmpsl
jle
scas
sub
leave
outsb
inc
pushl
rorl
sub
orb
dec
repnz
push
pop
mov
mov
fildl
insb
hlt
loope
jmp
push
imul
mov
sbb
sub
movsl
hlt
ljmp
push
scas
and
data16
xchg
or
sub
add
mov
aad
in
es
fstpl
movsb
dec
jae
lds
fdivs
repz
and
dec
movsl
pop
lods
rcll
test
jmp
xor
mov
fistpl
mov
adc
lds
inc
or
test
dec
mov
loope
jmp
and
out
jno
subl
andl
xor
repnz
pop
hlt
inc
jno
add
outsb
les
icebp
aad
stc
stos
rcr
mulb
enter
xchg
roll
out
fsubp
cli
mov
mov
or
dec
jg
dec
xor
sahf
pop
iret
push
fdivrs
sub
pushf
push
add
cli
mov
pusha
mov
es
les
sbb
cmp
and
inc
cs
loope
mov
jge
xchg
fst
sbbb
out
std
push
inc
or
imul
iret
or
push
sbb
xchg
cld
mov
imul
fiadds
jecxz
sub
or
fstpt
mov
int
insl
cmpsb
jnp
outsl
inc
dec
lds
jl
aas
jne
imul
stos
or
inc
xchg
std
or
mov
out
ret
cmpsb
dec
sub
and
stos
ljmp
vmread
or
fs
adc
sti
pusha
repnz
mov
jbe
pushf
dec
loopne
cmpsl
add
pop
add
push
or
add
xor
mov
inc
adc
cmp
into
xchg
or
pusha
sub
out
mov
insl
in
out
out
fsubrl
pop
sub
adc
stc
or
adc
inc
cmp
mov
mov
cltd
les
jmp
out
dec
or
int3
mov
or
sub
mov
push
mov
and
and
adcl
xlat
stos
or
mov
pop
dec
push
addr16
cmpsb
add
imul
fsubrs
push
push
xorb
lock
in
and
fbstp
push
inc
mov
jg
pop
insb
data16
lock
data16
imul
jb
fimuls
push
out
cmp
aam
hlt
loopne
mov
push
jb
sub
cmpsl
and
mov
xor
js
mov
push
jns
and
rorl
jbe
test
jge
enter
mov
sti
inc
pop
popa
inc
jge
xchg
or
ret
xlat
pusha
test
push
test
mov
and
sub
in
jg
push
aaa
out
fistpl
in
fs
dec
insl
pop
or
jl
inc
pop
shrb
xchg
movsl
cmpl
lcall
pop
adcl
and
pop
jp
mov
jl
dec
add
or
inc
test
mov
mov
js
gs
mov
movsb
sub
cmp
sub
fcoml
outsb
loopne
xchg
xor
push
jns
push
xchg
lret
mov
mov
push
andb
dec
dec
movsb
aam
mov
jno
ds
daa
cmp
jns
orb
pushl
cmp
pushf
add
adc
sahf
test
cmp
inc
add
rcrl
dec
and
and
movsb
push
mov
pop
add
aad
push
cmp
dec
fisttpll
pop
or
mov
xor
adc
andl
pop
outsb
dec
scas
mov
jbe
adc
call
push
or
pop
mov
stc
xor
xchg
pop
xor
inc
pop
inc
fadd
pop
test
adc
movsl
test
fimull
aad
clc
cmp
aaa
pop
mov
push
lcall
dec
scas
movsl
stos
push
jns
fisubs
mov
mov
mov
add
mov
adc
sbb
xchg
test
xor
rclb
mov
popf
in
orl
jne
out
lret
pop
shlb
pop
adc
pop
leave
lret
mov
mov
cwtl
cmp
test
inc
call
mov
inc
inc
clc
cli
sub
dec
in
scas
pop
push
jo
sub
push
les
repz
mov
orb
mov
adc
push
fcoms
xchg
je
mov
lods
addb
dec
out
cld
fbld
push
repnz
pop
pop
dec
mov
jmp
inc
loop
jecxz
jmp
sahf
and
imull
cltd
dec
push
lahf
xchg
inc
cs
xchg
pushw
jl
into
add
cltd
or
repz
sti
arpl
fistps
insb
dec
int
lods
xor
jo
cld
add
lret
pop
jg
jmp
loop
mov
sbb
adc
mov
data16
sub
lcall
clc
leave
xor
mov
xchg
daa
adc
dec
dec
push
fs
stos
or
movsl
or
pop
cmp
add
pop
ret
xor
push
call
cs
dec
add
mov
je
push
push
xchg
pop
shrb
in
jmp
fadd
pop
shrl
jns
ds
jo
mov
in
mov
lret
cli
ret
pop
cmp
jns
jecxz
jge
stc
lret
dec
pop
imul
push
ds
inc
and
inc
lahf
dec
inc
mov
mov
xor
adc
loopne
inc
cmp
mov
sar
xor
aaa
or
fwait
cmpsl
imul
mov
sbbl
xlat
xor
lock
sbb
and
nopl
fnsave
test
shll
xchg
sbb
mov
loop
pop
lahf
mov
rcll
sbb
pop
scas
push
fistpl
push
int
inc
push
icebp
in
push
loope
jns
clc
arpl
add
mov
fs
sbb
aas
cmc
dec
lods
sbb
repnz
jne
inc
sbb
pop
mov
cmc
loop
pop
movsb
xchg
enter
je
xchg
loope
xorb
and
jae
sbb
ljmp
push
clc
sbb
jae
mov
sub
addl
lret
inc
push
nop
loopne
divb
ret
cmc
lahf
mov
xchg
scas
cltd
pop
pushf
cmc
push
xchg
jmp
nop
jge
nop
mov
stos
lret
fldenv
stos
mov
mov
mov
xchg
js
fistl
ja
add
sbb
jmp
push
mov
out
sub
lcall
fcompl
js
jg
pop
insb
hlt
aad
xchg
mov
xor
jle
cli
ljmp
cmp
scas
xchg
lds
push
pop
and
lock
stos
mov
lock
hlt
xchg
push
inc
mov
scas
ja
cmovle
sub
in
addr16
mov
sub
shlb
out
pop
imul
mov
xlat
dec
add
dec
lcall
hlt
les
xor
jne
nop
mov
add
cmp
push
fisubrl
push
lret
xlat
jo
xchg
jbe
fsts
popa
cmp
jne
adc
shlb
mov
mov
jo
sbb
mov
stos
cld
or
jnp
push
popl
cltd
and
xchg
sbb
pop
mov
pop
pusha
stos
cmp
sbb
cmp
sete
sbb
in
mov
mov
or
ds
vshufps
and
jo
fsubl
negl
adc
inc
sahf
xor
sbb
and
mov
ret
loop
leave
test
pop
inc
xor
addb
mov
xor
cwtl
imul
test
in
ficomps
or
jbe
push
mov
out
mov
ret
push
push
jo
jmp
add
push
inc
or
xor
mov
jg
lret
imul
mov
or
adc
jmp
or
sbb
lods
fsubl
pop
push
add
das
cmp
popl
inc
aad
sarb
call
mov
popa
idivl
xor
into
sar
mov
or
and
lcall
in
fdivrs
mov
stc
ret
or
inc
sbb
adc
icebp
sub
dec
push
in
orb
shrb
xchg
pop
sbb
xchg
xor
xchg
adc
or
mov
sub
push
sar
inc
pop
add
out
pop
or
xor
xchg
aad
mov
out
outsb
xor
xor
xor
in
inc
pop
aam
ljmp
xchg
insl
pop
je
cwtl
ds
std
inc
out
mov
int
loopne
jne
inc
inc
sbb
notl
filds
sub
dec
in
push
cmp
pop
pusha
add
leave
or
adc
cmp
sbb
mov
ret
ss
popa
sub
mov
shlb
clc
ss
push
pop
and
and
fbld
cmc
push
outsl
xor
add
pop
outsb
add
mov
mov
cmpl
xor
inc
movsb
pop
jbe
int3
jbe
jnp
addr16
flds
cmp
repnz
sub
lcall
stc
pop
and
notl
imul
fisubrs
xor
add
pop
mov
adc
mov
out
nop
add
subl
jl
in
fcmovne
divl
mov
xchg
shrl
lods
xchg
daa
mov
inc
loop
mov
jmp
leave
inc
int
inc
xchg
ja
mov
loop
and
sbb
icebp
aad
add
push
push
sub
xchg
pop
cmp
mov
outsl
fs
mov
jmp
or
mov
jp
ds
push
and
fisubs
mov
clc
stos
jnp
cmp
mov
dec
rcl
dec
push
cmp
xchg
jns
das
outsl
aam
xchg
cmp
cmp
and
popf
cld
sub
cmp
repnz
jecxz
fldt
xchg
loope
shl
push
rol
mov
or
push
jecxz
jae
aam
mov
xor
sarl
mov
xchg
fsubs
jnp
scas
cwtl
and
stos
sub
cltd
inc
xchg
sahf
sti
into
scas
pop
cmc
inc
fstps
xor
xor
fistps
ljmp
mov
mov
mov
lcall
adc
mov
mov
movsl
imul
push
jle
add
mov
xlat
jno
xchg
cmc
repnz
flds
cs
int3
imul
xchg
movsl
mov
adc
out
dec
pop
sbb
pop
pop
clc
pushf
mov
out
andl
lahf
jbe
loop
push
add
call
xlat
sub
test
lods
lcall
sbb
adc
push
mov
mov
cmp
dec
js
lds
pusha
cli
inc
sub
mov
scas
cld
stc
jbe
out
push
ss
fiadds
mov
fmuls
pop
fimull
cmp
inc
or
out
cmc
into
pop
iret
sahf
sbb
sub
xor
sub
mov
jne
xor
hlt
clc
sbb
lret
dec
pop
fst
cmp
mov
mov
and
scas
adc
inc
jl
mov
pusha
stos
add
incl
int3
dec
lahf
insl
int3
outsb
jae
jnp
outsl
mov
inc
lahf
sub
and
outsl
loopne
out
cltd
insb
iret
aam
ret
notb
mov
xor
mov
cmp
mov
fists
ret
enter
icebp
fucom
or
test
mov
scas
jo
js
mov
push
rcll
pop
cld
xor
in
jle
dec
arpl
sbb
call
xchg
lret
fwait
out
xor
mov
pop
cli
sub
fs
add
jae
mov
jmp
rclb
clc
out
lret
jl
and
ret
out
and
add
lds
dec
in
sbb
push
notl
mov
mov
xor
pop
cld
out
push
hlt
aam
push
cmp
adc
aad
test
xor
lcall
aas
aad
mov
jle
lods
mov
sbbb
les
popa
clc
mov
cs
jns
loop
ret
enter
push
push
das
cmpsb
sub
mov
xchg
mov
sahf
jno
lea
je
ret
out
pushf
sarb
outsb
dec
jns
xor
lret
mov
test
test
out
les
test
add
std
push
push
mov
inc
lods
mov
mov
test
mov
mov
mov
and
adc
or
mov
jns
inc
fmuls
lock
leave
shrl
dec
test
fcompl
rol
mov
or
dec
xor
inc
sbb
outsl
xor
loope
jo
mov
add
mov
lsl
inc
jle
pop
jo
xchg
stc
jbe
push
les
lcall
xchg
fwait
adc
inc
inc
cmp
xchg
mov
shll
icebp
movsb
cli
inc
sub
mov
sbb
push
push
mov
adc
lea
lods
jg
jl
arpl
cmpsl
push
adc
lods
pop
arpl
mov
and
int3
push
negb
lret
int
scas
cld
divl
mov
mov
ss
insb
and
mov
dec
mov
jg
aaa
repz
mov
insl
clc
icebp
xor
xchg
add
dec
in
pushf
mov
ret
or
dec
push
ljmp
aad
int
mov
push
lods
mov
daa
pop
and
js
mov
cmpb
or
cmp
push
adc
push
xchg
pop
push
pop
out
pushf
enter
xchg
xchg
dec
push
adc
pusha
jg
iret
ss
clc
fsub
mov
dec
mov
pop
or
jns
or
in
jb
mov
or
sub
cs
push
bound
xor
sbb
push
pop
in
jg
out
sub
dec
mov
mov
out
ss
xchg
xchg
inc
dec
push
int3
sub
mov
mov
sub
sub
in
out
cmpsb
std
outsb
xchg
jmp
push
push
insb
loope
fcmovnu
jne
and
or
xor
sahf
pop
lret
das
movl
pop
mov
pop
mov
mov
loop
in
adc
stos
pop
daa
std
pop
xor
cmpsl
jmp
sbb
adc
jne
add
cmpsb
cmp
test
push
ret
jns
mov
push
out
arpl
popa
adc
movsb
xor
shrb
iret
mov
dec
jbe
mov
cmp
add
bound
orb
fwait
xor
xchg
sbb
push
fistpl
xorl
je
mov
daa
subl
fsub
pop
aam
sbb
les
mov
fwait
push
adc
push
add
jae
scas
aad
push
neg
inc
mov
dec
sbb
mov
xor
sbb
add
ja
test
mov
mov
leave
rol
testl
mov
and
and
faddl
das
mov
push
adc
bound
pusha
jp
les
cmp
mov
adc
pop
inc
sub
or
loope
add
xchg
imul
sbbl
test
ret
mov
dec
mov
clc
popf
loop
cmpsl
cmpsb
xor
add
add
ja
inc
cmc
and
or
leave
dec
addb
inc
fidivrl
cltd
and
mov
int3
lods
jo
adc
and
jg
cmp
inc
mov
loope
test
sarl
sbb
push
sti
cltd
xor
test
push
push
cmp
std
scas
adc
iret
repnz
sbb
push
faddl
fs
push
fcomps
daa
mov
mov
pushfw
sbb
push
imul
mov
pop
mov
push
jo
mov
push
jne
add
mov
pop
popa
push
or
movsb
add
pop
xchg
inc
outsb
mov
xlat
cltd
cltd
push
imul
jp
stc
lret
aad
mov
cmpsb
mull
sbb
cmp
push
jns
mov
lea
mov
mov
ds
pop
mov
psrlq
data16
jge
adc
mov
inc
inc
pushf
jnp
ret
adc
pop
jo
cli
push
sub
jmp
pop
mov
sub
xchg
insl
cli
nop
cmp
xchg
mov
aad
xor
fildl
or
cmc
xchg
lods
jno
mov
push
loop
scas
enter
jns
add
dec
mov
test
nop
xor
dec
mov
fnstsw
movsl
cld
add
ljmp
imul
clc
in
jb
cmc
rol
lret
pop
cwtl
push
fidivrs
loopne
loope
clc
sahf
jbe
popa
fistps
sbb
xchg
mov
inc
fld
in
fisubs
xchg
xlat
aas
push
cmp
fwait
sbb
xor
cmc
dec
and
cltd
daa
fldl
or
jo
aas
adc
pop
ret
bswap
mov
icebp
mov
jns
fcoml
ljmp
push
and
or
push
daa
jno
mov
daa
scas
mov
ljmp
ficomps
fwait
hlt
add
adc
imul
cmc
xor
inc
or
je,pt
jo
fcomps
jmp
mov
in
add
pop
add
lods
sub
mov
push
push
dec
call
mov
loopne
xor
push
xlat
inc
sti
ret
dec
jno
mov
insb
jae
cmp
sarl
xchg
or
push
pop
cmp
mov
mov
mov
je
mov
inc
push
data16
or
lods
lock
push
jae
jne
fwait
inc
out
sbb
cmp
sub
hlt
push
xlat
das
adc
cmp
cmp
push
stc
cli
jmp
movsl
cmpb
lods
add
xchg
or
jo
repnz
insl
shlb
cmp
xor
iret
xchg
pusha
inc
or
loope
xor
push
adc
xchg
repnz
out
into
cmp
xchg
push
jmp
fdivrl
stos
xor
xor
mov
add
movl
scas
xchg
dec
enter
pop
lret
or
lods
cmp
and
and
sub
jns
xchg
loop
je
lods
push
dec
or
add
clc
push
adc
cmp
push
loope
cmpb
dec
cmpsl
xor
lret
mov
jp
scas
sbb
ficoms
outsl
or
imul
mov
cwtl
lods
ja
in
ficoml
and
push
pop
lea
sbb
mov
push
pop
jmp
jnp
stos
sbb
roll
xor
mov
dec
stc
cmp
xor
lea
xor
pop
imul
sub
cmc
lds
sub
and
ds
pop
pop
pop
std
inc
jno
mov
fisubrs
pop
leave
jge
je
push
fisubrs
scas
fisttps
pop
push
lods
add
mov
int3
idiv
dec
in
push
lret
jns
dec
daa
es
dec
fwait
maskmovq
idivl
push
jae
jbe,pt
and
add
pop
fdivs
mov
push
xchg
aam
test
push
mov
cmpsl
cmp
fmul
mov
cmp
sub
ljmp
add
lcall
cmpsb
je
pop
int
or
ret
cmp
jno
jb
push
fnstenv
dec
lret
mov
fsubrl
xor
push
mov
mov
xlat
pop
out
adc
sar
stos
cmp
xor
or
into
xchg
add
xor
lods
imul
shlb
int3
jbe
push
sbb
shrb
mov
ja
loopne
mov
popf
lcall
dec
scas
adc
jecxz
aam
mov
xchg
mov
aaa
popf
mov
xor
mov
push
sub
mov
sbb
push
push
add
ret
jecxz
ja
test
xlat
jbe
daa
adc
and
adc
fs
sbb
pop
dec
jle
and
adc
fdivrs
and
aad
adc
out
lret
mov
shll
test
mov
inc
loop
fistpll
iret
addl
dec
iret
insb
fisubl
xlat
loope
mov
negl
ljmp
std
test
dec
or
jl
clc
cmp
sti
lret
dec
movsb
pop
cld
adc
mov
pop
xor
jnp
stos
loop
jmp
test
test
inc
jo
jle
cli
xor
jbe
aad
mov
push
lea
lahf
aam
push
out
jbe
pop
mov
int
mov
xchg
dec
data16
icebp
inc
inc
fmull
xor
in
adc
adc
sbb
jle
lea
adc
stos
imul
lods
push
imul
ja
inc
push
movsl
sbb
rcrb
mov
lea
ret
pop
dec
cvtps2pd
jne
cmpsl
faddp
bound
xor
mov
pop
mov
inc
mov
or
test
cwtl
mov
outsl
lcall
in
cld
mov
pop
ja
mov
mov
testl
enter
mov
out
xchg
es
or
pop
push
ficoml
cs
xchg
sub
sahf
ljmp
ficompl
jno
jns
imul
xor
sub
jl
mov
lock
scas
lahf
outsl
sti
pop
repnz
or
mov
fwait
jo
pop
inc
sbbb
out
lcall
ljmp
sbb
cli
jl
testl
imul
jp
sub
movnti
imul
pop
movsl
fimuls
test
scas
arpl
mov
xor
out
dec
rolb
push
inc
clc
mov
pusha
sub
inc
sarl
mov
pop
mov
mov
sbb
lods
sbb
andb
fstpt
inc
sbb
packssdw
int3
sbbb
mov
ret
xchg
adc
cli
push
sbb
or
int
dec
xchg
jecxz
sahf
cltd
mov
gs
lcall
iret
outsl
data16
sub
mov
xchg
lret
sbb
and
into
cmpsl
addr16
cli
lods
pop
dec
pop
jp
jnp
mov
add
mov
rclb
mov
test
fwait
pop
push
add
xchg
jne
adc
in
xorb
mov
in
xchg
enter
inc
lcall
and
and
jne
movsl
lock
shrb
push
ja
cmp
sarl
mov
and
in
sub
sub
movl
out
jecxz
cmpsl
imul
inc
es
cmpsb
ficoms
add
xchg
dec
adc
push
xor
and
cmc
out
fsubs
jo
push
pop
cmp
jo
pop
loope
jb
icebp
adc
sub
pop
jne
scas
loop
push
add
sahf
push
inc
mov
and
mov
cmp
idivb
cld
repnz
cmp
push
xor
lea
mov
aam
inc
mov
cmp
gs
lock
jmp
push
mov
shrl
shr
sbb
pop
xchg
cltd
lret
mov
ficomps
sti
adc
icebp
mov
loopne
jno
js
cmc
les
jne
push
pop
push
pop
movsl
mov
mov
inc
je
daa
and
or
gs
loop
stc
mov
pop
lods
es
xchg
out
pushf
ss
cmp
jo
fnstcw
xlat
sub
dec
dec
push
and
cld
int
sahf
adc
shl
popf
sbbl
xchg
jns
jns
arpl
std
test
jle
jge
mov
inc
cmp
xor
arpl
and
insb
call
sub
fsubr
ror
test
jae
mov
cmp
out
add
xchg
ret
push
icebp
jmp
aas
insb
mov
lea
stos
jl
xor
inc
aas
mov
aam
mov
xor
popa
bound
imul
out
inc
jb
test
pop
pop
or
cld
std
shlb
fmulp
dec
sbbl
push
or
xor
xor
leave
jnp
cmp
jns
add
mov
loope
inc
mov
out
sub
mov
nop
dec
cmp
clc
xor
and
add
int3
stc
jno
das
js
outsb
ret
jae
and
add
das
sub
in
mov
test
lock
adc
leave
xor
add
in
jmp
and
adc
mov
jnp
imul
rorl
sqrtps
push
add
rcll
adc
loope
je
nop
sbb
jl
outsl
mov
arpl
xlat
iret
imul
enter
rcll
mov
jne
jmp
xchg
pop
shl
mov
push
jge
mov
lcall
icebp
dec
mov
mov
rorl
mov
mov
mov
std
jl
addr16
loopne
sbb
xchg
testl
add
sub
mov
fcmovu
scas
fsubs
pop
js
mov
sub
add
and
ljmp
push
dec
rol
mov
adc
mov
dec
ja
aad
jg
arpl
or
fistl
js
mov
add
mov
stc
mov
xchg
pushf
pop
xchg
jbe
inc
xchg
fwait
and
mov
pop
stc
xlat
mov
call
or
rclb
dec
jae
xchg
lahf
push
inc
ljmp
dec
add
mov
adc
sbb
pop
cmp
pusha
subl
sahf
and
test
sub
scas
leave
test
in
and
sbb
or
test
pop
pop
sub
mov
add
punpckhdq
test
leave
inc
sbb
add
notl
jp
cs
mov
test
ss
jbe
scas
add
jmp
and
stc
lods
hlt
sub
mov
pushf
repnz
pop
xchg
push
and
push
jae
in
xchg
popa
cltd
xchg
arpl
jb
fdivrs
addl
cmp
inc
mov
jp
or
push
cmp
inc
or
outsb
shlb
pop
fisttpl
jmp
test
jmp
sbb
movsb
ljmp
iret
add
fistl
mov
or
shl
mov
shl
ss
aad
xor
lahf
out
or
addr16
mov
mov
fsubs
js
pop
imulb
push
pop
iret
cmp
fstl
scas
xor
enter
push
clc
pusha
out
or
mov
loopne
mov
push
das
out
andb
pop
es
mov
xchg
or
jns
inc
dec
push
cmpsl
mov
insb
rcrl
lcall
lea
jns
mov
stc
jmp
out
adc
pop
ds
out
shlb
enter
cltd
add
pop
mov
adcl
jb
add
ja
aam
dec
in
xchg
mov
je
jle
or
cwtl
ss
repz
scas
andl
lea
jmp
inc
or
jbe
imul
mov
mov
aaa
push
push
out
pusha
in
mov
mov
sub
dec
xor
or
jns
ror
xchg
ds
cmp
ret
aam
sbb
sub
mov
pusha
jge
mov
jecxz
adc
push
lret
out
jne
mov
enter
inc
movsb
add
mov
fisttpll
jp
out
sbb
adc
sbb
sbb
dec
cltd
int3
dec
imul
mov
imulb
outsb
lods
fisubs
pop
xor
repnz
xchg
stos
adc
incl
into
push
daa
lret
int
imul
outsl
lods
test
fincstp
jns
pop
add
aas
loope
dec
lods
out
pop
pop
pop
filds
pop
out
xchg
add
pop
add
icebp
jmp
sub
rcll
roll
rcll
clc
gs
rolb
in
cmp
das
pop
aas
fcomp
insl
pop
xorl
mov
jne
movsb
loopne
jo
lret
cmp
fsubl
pop
add
lock
insl
incb
mov
insl
movsl
mov
mov
faddl
or
dec
leave
test
xlat
loopne
push
sub
int
cmp
cmp
sub
dec
push
jne
sarb
int3
mov
mov
mov
mov
movsb
dec
jno
inc
negl
push
xor
inc
mov
inc
fsubs
mov
imul
scas
loope
test
fnstcw
adc
pusha
xchg
add
bound
imul
mov
cmpl
xchg
dec
add
cmp
push
in
mov
xchg
mov
sbb
addl
stc
fneni(8087
mov
bound
loop
je
dec
sbb
lcall
add
pop
mov
fwait
rorl
in
int
dec
fildll
or
clc
sub
mov
xchg
pop
ret
daa
cltd
mov
pop
mov
js
outsb
mov
add
adc
pop
push
lods
xor
int3
inc
cmpsl
icebp
mov
inc
xchg
mov
arpl
mov
gs
mov
and
out
dec
cmc
aaa
mov
scas
lods
jl
add
mov
and
xor
cwtl
mov
push
cmpb
xchg
mov
mov
sbb
sub
add
inc
js
insl
mov
sub
testl
xchg
mov
movsb
insl
jl
or
xchg
cltd
jle
or
sub
rcrl
xchg
insl
lods
pop
inc
mull
ret
out
cmp
hlt
cld
xchg
ret
int3
loopne
ret
or
or
test
lret
push
ds
into
mov
pop
inc
jae
stos
push
fwait
addr16
cmp
mov
jecxz
loopne
mov
fisubrs
push
or
xor
mov
movsb
insl
pop
fisubrl
shll
inc
stos
insb
hlt
lock
mov
test
cmpsl
ja
sbb
daa
jl
jmp
repz
add
inc
pop
sahf
in
mov
push
or
into
cmp
push
icebp
bound
push
push
jbe
gs
add
mov
ss
xchg
adc
mov
cmpsl
int3
xorl
mov
or
and
xlat
mov
xlat
rcr
mov
es
pusha
inc
push
out
cmp
lods
cld
dec
out
jecxz
stos
push
or
inc
inc
ret
in
cli
lods
js
sbb
hlt
xor
push
es
xchg
inc
dec
nop
into
daa
and
clc
mov
sub
aad
cmp
xchg
add
cmpl
jns
inc
lahf
out
mov
xor
mov
mull
cmpsb
sub
into
inc
lret
adc
xchg
jg
mov
dec
inc
dec
rclb
or
sbb
mov
addl
repz
addr16
call
jb
lock
aam
mov
int
xchg
xchg
sar
out
xor
push
sti
test
mov
stc
fs
loope
mov
push
cwtl
mov
sbb
lds
lock
data16
insb
and
sbb
mov
push
fidivrs
push
sub
pop
sahf
add
xchg
pop
mov
cmpsl
into
mov
dec
cld
cmp
leave
and
les
pop
int
inc
mov
sub
sub
and
sub
mov
mov
xchg
gs
imul
loop
dec
sti
xchg
das
nop
clc
aaa
mov
nop
cli
lods
jne
pop
xor
je
mov
in
les
xchg
xlat
jno
in
adc
ret
loop
mov
xchg
into
pop
xchg
and
or
mov
add
pop
cwtl
pushf
jns
sub
push
mov
lds
cmp
popf
fdivs
jnp
fmuls
fisubrs
xchg
jmp
sub
std
outsb
int3
cld
cmpsb
test
fmuls
out
xchg
test
xor
pop
xchg
xchg
and
sub
aad
popa
ja
data16
aas
in
dec
stos
inc
xor
xchg
and
insb
out
test
ds
mov
lea
xchg
loop,pt
sub
mov
inc
mov
xchg
mov
sbbb
leave
xchg
std
mov
test
pop
push
jmp
lock
jno
in
loope
out
jnp
and
push
out
cmc
or
aam
ljmp
jge
sbb
mov
add
xchg
adc
fistl
jmp
jg
or
sbb
addr16
lcall
movsb
and
test
icebp
cmp
fisubl
orb
arpl
inc
cmpl
mov
pop
pop
mov
or
repz
mov
dec
dec
jno
notl
jp
push
xchg
xchg
xchg
sbb
outsb
cwtl
dec
or
cltd
mov
hlt
mov
movsl
inc
out
fildl
and
pushf
adc
mov
jmp
push
push
out
xchg
lahf
jnp
shlb
lcall
out
pop
jle
xor
test
push
test
mov
jmp
xchg
add
test
dec
loope
mov
xchg
nop
shlb
sarl
jmp
cli
mov
inc
inc
pushf
fsubrl
adc
ret
xchg
dec
adc
pop
cmc
jmp
pop
dec
mov
pop
mov
adcb
bound
les
mov
aas
sub
stos
in
inc
test
mov
cmp
pop
hlt
jecxz
pop
negl
and
xor
push
sub
outsl
mov
pop
jns
jmp
xor
into
nop
int3
and
out
popf
push
shlb
rorl
into
stos
sub
pop
outsl
clc
decb
les
jno
sbb
jge
loope
daa
test
inc
mov
sbb
pop
push
xchg
mov
sbb
cmpsl
cmp
aam
outsl
dec
push
dec
dec
mov
add
sar
cmpsl
adc
into
aam
arpl
push
out
xchg
movsl
psubb
mov
cltd
dec
data16
lods
push
js
cmc
pop
out
inc
das
sub
pop
lods
scas
add
scas
inc
sbb
mov
cs
shl
jnp
aas
in
jecxz
cmp
test
mov
mov
xchg
dec
ficompl
and
cmpsb
incl
cmpsl
dec
cwtl
mov
stos
mov
mov
mov
in
xchg
push
arpl
aam
rorl
cld
in
pop
enter
and
mov
leave
fucomip
imull
fstl
push
repnz
inc
pop
cmp
sti
and
repnz
and
test
jg
ficoms
pop
or
xchg
pop
fwait
mov
xor
inc
inc
jns
test
xlat
mov
xchg
jge
ficomps
nop
call
loopne
or
fnstenv
xor
jbe
ljmp
fisubl
sbb
mull
push
mov
and
jl
pop
mov
dec
jnp
push
cmp
push
out
sbb
nop
or
gs
out
in
inc
inc
test
push
outsb
xchg
in
jbe
push
lods
sbb
leave
inc
aam
fimull
xchg
dec
push
pop
xor
popa
nop
jb
cmp
lods
jg
ret
je
popa
jle
cmp
mov
movsl
cs
mov
popa
push
push
scas
push
jl
cmp
xchg
adc
popa
dec
sub
adcl
jl
mov
xchg
iret
sub
or
inc
cmpsl
mov
push
jmp
adc
scas
mov
in
shll
fsubl
or
inc
adc
fildl
in
mov
xor
mov
push
xchg
fs
fistl
cmp
shr
cltd
add
add
je
fstl
sub
rcrl
test
loopne
outsl
add
mov
xchg
lea
test
pop
fsubrl
mov
add
lock
sbb
adc
aas
adc
cmpsb
fisttps
imul
add
stos
ja
int
xlat
popf
dec
mov
sbb
cmp
out
mov
nop
cmpsb
ss
or
out
jmp
test
dec
sub
stc
inc
cmp
dec
sbb
repnz
lret
xchg
filds
cmp
pop
mov
stos
jg
mov
lock
ljmp
mov
pusha
repnz
cmpsl
loope
inc
lock
push
out
jno
mov
addr16
fistps
xchg
leave
mov
into
pop
push
xor
sub
xchg
mov
jle
lret
add
mov
jno
in
sbb
rdpmc
push
or
or
cmp
jne
daa
mov
and
js
xchg
sbb
adc
scas
sahf
jmp
jb
xor
pushf
sbb
xchg
cmp
sub
push
call
jb
add
mov
ljmp
aam
dec
cs
xor
sub
jl
and
dec
movsl
data16
and
jnp
pop
sub
mov
or
test
icebp
sub
je
pop
cmpsb
divb
filds
fiaddl
mov
mov
rorb
add
pop
cmp
ret
shlb
cmp
fcomi
jl
aad
test
mov
pop
xchg
add
movsl
in
push
in
add
out
not
mov
add
popa
lods
mov
int
pop
inc
push
mov
sub
mov
ja
stos
mov
or
push
sub
fiaddl
jmp
sarl
xchg
mov
push
xchg
sub
pop
mov
sub
jb
dec
rcll
pop
roll
in
rcr
cmc
fs
movsl
in
dec
mov
and
lcall
xchg
sub
loop
shrl
mov
pop
into
sub
push
xchg
jmp
ja
pop
xor
push
push
rclb
gs
add
cmp
call
dec
pop
inc
mov
sub
xchg
xchg
pop
xchg
or
push
insl
jle
mul
ds
loopne
or
xor
int3
rclb
pop
hlt
jno
push
hlt
push
out
sbb
push
dec
cmp
push
mov
loope
sub
pop
mov
repz
adc
mov
add
add
in
jae
rorb
addr16
mov
adc
dec
loopne
xchg
and
dec
movsb
rcrb
data16
cmp
pop
mov
pop
test
or
call
adc
orb
clc
mov
vpxor
pop
or
cmp
out
jne
mov
dec
jg
jmp
xor
aaa
and
mov
cmp
mov
push
popl
scas
pushf
adc
sbb
sti
push
and
cmp
loopnew
jle
mov
push
jp
scas
lcall
jo
lcall
jg
stos
lahf
pushf
lret
add
cmp
pop
shrb
pusha
cmp
dec
cmpsl
mov
jns
or
cli
cmpl
cld
out
stos
fidivrl
and
xlat
xchg
xor
aam
jbe
popf
jns
cmpsb
imul
jb
pop
ja
neg
mov
in
push
adc
cltd
loop
jecxz
stc
jne
adc
les
mov
ljmp
dec
mov
in
pop
jl
test
stc
rcrb
outsb
inc
clc
add
cmp
pop
xchg
sahf
loope,pt
jp
adc
mov
pushf
lds
mov
jns
sahf
inc
js
imul
sbbb
fsubs
bound
add
stc
popf
test
aas
arpl
aam
add
add
dec
pushf
cs
adc
test
lahf
push
test
mov
enter
jg
jecxz
inc
mov
in
mov
lcall
push
loope
std
mov
mov
xor
lea
sub
and
das
dec
xor
xchg
fiaddl
sti
ja
cltd
aas
push
ret
sbb
pop
cmp
mov
mov
xchg
movsl
pop
push
pop
mov
mov
ljmp
ficompl
out
mov
inc
cmpsb
mov
outsl
mov
jge
dec
mov
add
popa
mov
outsb
and
cmp
pop
rcl
repnz
out
cmp
mov
lret
push
adc
ja
aam
push
fldenv
add
sub
negl
jl
adcb
adc
dec
and
inc
mov
fdivrs
jno
and
call
rcll
inc
jl
mov
loopne
movsb
mov
add
aaa
faddp
add
sahf
mov
push
test
sarl
cmpsl
cmpsl
movsl
adc
neg
pop
cli
mov
add
jnp
mov
das
jecxz
lret
fsubrl
pushl
cmp
inc
lahf
jb
fs
scas
imul
std
mov
jnp
add
aaa
roll
push
jl
popf
fcoml
jl
pop
mov
xor
hlt
pop
or
inc
in
pop
loopne
scas
xor
push
test
cwtd
push
pop
clc
lcall
xor
jno
gs
push
cli
mov
sub
lcall
lods
pop
in
testl
fldt
mov
inc
stos
mov
ds
push
or
mov
lahf
cmp
leave
lods
cmp
stc
adc
aad
into
inc
adcb
adc
xorl
xchg
movsb
jecxz
xchg
and
int3
popf
je
divl
repnz
mov
xchg
or
mov
pop
xchg
out
loop
jp
jmp
xchg
jo
loop
addr16
xchg
mov
mov
mov
sub
imul
popa
xchg
arpl
dec
lods
call
mov
outsb
cs
lcall
xlat
rcr
push
adc
pop
push
mov
aaa
iret
out
mov
pop
and
scas
fidivl
mov
stc
wrmsr
dec
je
aas
stos
push
pop
jbe
xchg
outsl
outsb
fucomp
repz
lret
dec
addl
stos
cmp
sbb
loopne
sub
stos
sbb
mov
cmp
loop
ficompl
xchg
push
aaa
inc
mov
scas
push
notb
repnz
stos
mov
fsubs
es
xchg
mov
inc
inc
and
mov
sbb
out
push
dec
dec
push
pop
mov
stc
dec
xchg
lret
jae
out
mov
cmc
jl
outsb
and
cmp
jbe
xchg
jg
mov
rcl
adc
dec
mov
dec
movsb
movlps
push
imul
outsl
xchg
mov
loope
test
jnp
js
cmp
std
fidivrl
sbbb
mov
jg
scas
scas
movsb
movsb
jns
mov
or
arpl
gs
lds
xchg
js
mov
adc
add
lock
daa
repnz
jne
mov
jo
shll
mov
cmp
adc
xchg
sbb
sti
push
or
stos
and
jmp
pop
test
addb
sbb
lret
mov
and
fcmovb
mov
adc
jns
sub
out
jae
or
mov
aaa
rcl
mov
ror
in
aad
cmp
inc
pop
lret
push
repz
int3
pop
dec
and
pop
insl
sub
jp
mov
imul
test
movsb
ljmp
sub
or
mov
jle
mov
shrl
cmp
es
insl
push
and
shrb
mov
jle
and
jo
inc
dec
sub
ja
mov
xchg
insb
adc
incl
js
push
inc
mov
out
mov
fnsave
rcrl
aaa
cmp
and
push
mov
repnz
xor
shlb
insl
add
not
out
cmpsl
mov
ffreep
jns
daa
inc
fiaddl
push
in
xor
jp
pop
sub
sub
pusha
push
out
pop
xchg
mov
pop
imul
jo
shrb
in
sarl
sbb
sbb
jl
xlat
fstpl
test
mov
pop
aam
test
pop
xchg
or
aas
xchg
ss
andl
fcomip
lods
and
add
notl
mov
push
push
mov
dec
jp
inc
outsl
movsb
ret
lret
add
push
jne
data16
or
add
pop
sbb
mov
pop
in
pop
sub
push
inc
movsb
cld
test
sub
or
mov
aad
mov
pop
js
push
repz
push
ljmp
fdivr
add
repnz
push
hlt
test
sub
in
sbb
pop
mov
notl
add
stc
cmp
test
in
inc
cmp
repnz
mov
fdivrs
sub
adc
inc
push
cs
sbb
rcrb
outsl
mov
push
notb
testb
push
insl
pusha
test
xchg
push
aaa
jne
xchg
iret
enter
push
sbb
das
pop
into
popa
std
cld
cli
cwtl
mov
xchg
mulb
in
add
sub
cmp
jae
mov
mov
xor
and
adc
js
sbb
cmpsl
movsl
into
sahf
nop
mov
mov
xchg
lods
push
dec
incl
test
sub
pop
inc
out
data16
and
gs
lahf
push
mov
subl
pop
ffreep
jmp
sub
aas
add
fwait
inc
jno
aam
ret
lock
mov
add
fnstcw
js
pop
push
add
repnz
es
cmp
mov
es
mov
mov
pop
hlt
test
scas
jecxz
les
and
push
stos
das
sti
xchg
insl
sub
dec
lahf
sbb
movsb
push
out
rol
inc
jg
xchg
push
sbb
outsl
and
xor
in
in
std
mov
insb
enter
ja
xchg
sub
stc
push
inc
xchg
js
push
lods
repz
sub
test
shrl
rolb
jle
xor
push
jns
js
imulb
shl
js
inc
adc
cmp
mov
xchg
inc
or
imull
dec
hlt
testb
mov
mov
mov
xor
fiadds
adc
les
gs
jmp
mov
leave
imul
adc
push
dec
out
cltd
and
mov
int
stos
dec
jo
fdivrl
cmpsl
jb
in
scas
mov
xchg
xchg
sbb
test
into
add
cmp
jbe
jnp
inc
rcr
add
adc
outsl
mov
push
pop
cmp
or
mov
int
into
les
dec
addr16
sbb
cld
mov
and
sbb
and
add
or
idiv
xchg
or
mov
int
push
mov
jno
ljmp
hlt
sub
inc
xor
add
scas
and
mov
add
mull
mov
lcall
test
pop
jae
adc
fdiv
inc
aam
dec
xorl
xorb
pushf
lcall
adc
out
mov
leave
cmpsb
in
pop
lods
out
leave
jbe
mov
dec
gs
adc
int3
out
addr16
adc
jle
lock
sub
hlt
mov
es
jb
mov
sbb
lods
mov
std
dec
ret
ja
mov
ss
dec
mov
push
sbb
scas
mov
pop
cmpsb
jo
mov
sbbl
mov
fdivs
cmpsl
pop
sbb
mov
jae
push
data16
lret
or
ja
xchg
clc
jbe
shrb
mov
iret
dec
lahf
xchg
fwait
adc
mov
or
pop
iret
add
lock
xchg
sbb
jns
scas
jb
xor
ret
fwait
pop
jne
aam
inc
out
mov
lret
je
lcall
sti
int3
sub
testl
leave
cmp
ret
leave
mov
icebp
in
jg
lahf
fimuls
add
add
out
pop
fldt
xchg
add
inc
mov
xchg
xchg
pop
lcall
lcall
jo
jmp
notb
dec
lret
mov
push
pop
push
shrb
and
cmc
out
incb
arpl
sub
jl
xor
lea
adc
cmp
out
fisubs
inc
inc
ja
push
ffree
jmp
push
dec
push
rol
push
xchg
daa
jl
xor
and
lahf
jg
mov
inc
in
jo
add
adc
popa
data16
pop
inc
push
aaa
inc
loope
push
pop
inc
scas
inc
leave
aas
scas
cmp
xlat
not
fldln2
decl
push
adc
sahf
in
sub
push
pop
xor
mov
pop
pop
cmp
sbb
xchg
mov
push
loope
jl
inc
mov
dec
adc
mov
cmp
scas
in
fs
fdivs
nop
jbe
imul
push
clc
mov
dec
jbe
pushf
das
dec
cmp
xor
inc
outsl
cmp
jge
mov
jmp
cltd
sahf
xor
sub
push
dec
mov
into
test
adc
jg
cmc
and
aam
push
jne
sub
insb
cltd
pop
and
add
mov
cmp
mov
pop
icebp
out
jmp
test
test
inc
rcr
inc
mov
outsb
mov
pop
mov
je
jecxz
insb
jns
xchg
mov
xchg
in
jno
cmp
add
mov
out
push
sbb
adc
dec
inc
rorl
scas
and
add
xchg
mov
js
mov
xchg
aas
shll
fisttpl
outsl
loope
mov
daa
fwait
pop
and
sahf
ret
push
sbb
mov
sub
sub
xchg
sub
xor
adc
jns
aaa
mov
or
ret
shr
lret
sub
fistpl
das
aas
cmp
cmp
les
cmpsb
inc
lea
xchg
dec
push
pop
je
push
lcall
cwtl
mov
add
pop
inc
xor
adc
pop
push
adcb
sub
xor
mov
test
jecxz
jns
gs
mov
loopne
fsubrp
fstps
cwtl
fisttpl
dec
jmp
shl
cmc
ljmp
sbb
sti
lret
fnstenv
xchg
icebp
lods
sub
sub
incb
lods
cmp
movsb
testl
insl
lods
xor
daa
out
jae
aaa
pusha
sti
mov
xchg
popa
aaa
out
das
frstor
sub
sub
pop
cmp
stos
mov
pop
add
lea
int3
mov
je
pop
aam
bnd
fcoms
mov
pop
sub
cmp
insb
inc
push
subl
mov
fstpl
jmp
nop
out
add
xchg
and
das
cmp
sbb
xor
dec
sti
aam
out
jno
test
aas
jne
imul
clc
pushf
jne
cmp
xchg
mov
inc
mov
enter
mov
repz
pop
mov
inc
ret
fsubl
sub
add
mov
call
dec
icebp
cmpsb
jae
adc
mov
fistpll
and
les
adc
mov
subl
push
add
sti
lcall
lods
fwait
shl
mov
mov
jl
jge
and
out
xchg
or
cltd
addr16
aaa
jbe
mov
mov
loopne
sub
int
fsubr
mov
test
jle
sbb
je
add
mov
mov
push
xor
lods
mov
pop
sub
push
sbb
dec
movsl
stos
or
cwtl
and
sahf
cmp
pop
test
mov
mov
push
popa
xchg
mov
fdiv
mov
push
xlat
ljmp
jge
cmp
adc
pop
xchg
cmc
or
notb
mov
cltd
add
cmp
repnz
lods
sahf
xchg
add
data16
inc
andb
push
mov
mov
pop
cld
jno
out
sahf
xchg
ss
dec
stos
cmp
add
xchg
adc
pop
inc
cltd
call
pop
mov
arpl
push
in
add
repnz
shrl
mov
dec
ret
aas
jmp
clc
call
adc
mov
xlat
xorb
adc
sbb
stos
lahf
mov
mov
jbe
push
insl
notl
jb
fwait
dec
roll
ja
iret
or
subb
fistps
pop
dec
mov
movsb
rorb
stos
out
icebp
jno
sub
movsb
mov
mov
inc
out
cmc
mov
sub
test
clc
ljmp
fucomi
in
pop
hlt
jno
cmp
je
out
sbb
and
or
shlb
mov
xchg
add
test
sub
push
stc
cltd
pop
xchg
push
xchg
add
cmp
mov
push
mov
shrb
js
sub
mov
fimull
push
pop
popa
loopne
sub
dec
xor
test
scas
xchg
mov
push
sbb
jnp
lds
dec
nop
mov
movsl
loop
rorl
push
ret
in
rcll
xchg
inc
mov
adc
gs
push
insl
mov
cmp
xlat
dec
and
mov
test
fs
mov
adc
rorl
inc
inc
out
mov
cmpsl
sbb
mov
push
lock
mov
fldenv
pop
and
out
or
movsl
movsl
mov
pop
lcall
pop
stc
arpl
es
xor
leave
sahf
fstl
repnz
jp
cmpsb
hlt
sbb
out
lret
fiaddl
mov
dec
movsl
push
in
push
jmp
loope
loope
and
inc
sub
push
xor
out
mov
mov
inc
data16
scas
mov
push
nop
push
mov
mov
outsb
jp
sbb
inc
gs
sahf
repz
rcrb
test
mov
fcmovu
sti
push
in
cmpb
int3
fsubrs
push
sub
mov
xchg
cmpsl
and
popf
fistps
mov
je
xlat
fsts
enter
jo
xchg
aad
mov
pusha
je
jecxz
sbbl
das
and
js
add
das
add
and
mov
nop
jnp
xchg
mov
repz
add
dec
xor
mov
stos
repz
fcoml
addr16
pop
dec
push
loop
jo
leave
pop
and
iret
inc
jae
sarb
inc
xchg
cmpsb
adc
in
mov
test
dec
out
insl
sub
mov
xchg
lret
icebp
aad
mov
ds
and
add
pop
shr
stos
pop
pop
mov
push
bound
ds
icebp
ret
fucomp
mov
mov
in
cmpsb
pop
cmpsl
out
mov
push
xor
testl
repnz
ret
lcall
jmp
mov
cltd
xchg
cmp
mov
pop
nop
push
imul
and
inc
mov
xchg
jbe
out
lahf
aam
mov
add
cs
in
into
add
adc
insb
cmp
jbe
adc
mov
sbb
fisttpl
mov
mov
push
sbb
jmp
dec
test
ljmp
sbb
jnp
fdivrl
mov
add
cmovo
sub
aas
jno
push
mov
aaa
push
daa
or
cwtl
pop
dec
lods
jno,pn
jno
mov
inc
ja
sbb
mov
inc
fistl
iret
pop
rcrb
xchg
mov
aam
mov
jno
ss
outsl
cmc
jge
inc
incb
ficoms
packssdw
jns
enter
mov
cmp
push
test
mov
ss
mov
cli
cli
fnsave
inc
dec
jbe
xor
adc
test
adc
in
and
add
sub
jbe
sti
and
adc
push
sahf
push
arpl
les
and
sbb
mov
add
dec
lods
and
into
sbb
pop
mov
adc
add
jecxz
imul
insb
daa
cmc
dec
mov
cmpsl
arpl
stos
inc
pop
adc
cmp
mov
jns
mov
mov
inc
pushf
gs
lock
rcr
hlt
std
cwtl
iret
jne
pop
inc
dec
inc
xrelease
push
cmc
pushf
daa
nop
sbb
inc
mov
subb
test
and
cmp
int
push
stos
aad
ljmp
out
or
repnz
nop
out
rclb
and
mov
in
movb
movsb
mov
push
xor
je
push
out
cmpsb
jmp
in
sbbl
pusha
and
mov
gs
xor
mov
xor
repz
mov
int
les
imul
or
in
dec
dec
nop
and
pushf
jnp
xlat
cs
push
mov
sahf
mov
popa
mov
call
in
and
xchg
sbb
pop
jg
inc
jg
repz
cltd
mov
ficoml
push
mov
out
mov
jo
xlat
lahf
add
inc
test
les
cmp
xchg
lahf
outsl
or
fisttpll
repnz
sbb
and
inc
inc
cmp
mov
lods
add
xchg
adc
cld
imul
xor
hlt
sub
ror
lahf
cmpsb
movsl
vpminub
loop
arpl
xchg
mov
push
mov
mov
mov
icebp
and
or
jne
mov
mul
std
mov
les
xor
or
cld
xchg
pop
mov
test
mov
jo
movsb
sti
loope
addr16
adc
sbb
mov
lods
pmulhw
push
and
dec
mov
mov
inc
push
cmpsl
rorb
cltd
jb
insl
ret
cltd
inc
hlt
pop
xchg
loope
adc
int3
imul
cltd
dec
stos
push
leave
jnp
sbb
hlt
or
or
push
push
ret
leave
stc
call
insb
je
xor
adc
and
clc
cmp
shlb
nop
xchg
mov
imul
mov
loope
je
mov
inc
dec
mov
pop
pop
std
in
movsb
push
fistps
inc
shlb
iret
aas
inc
pop
les
cmpsb
into
inc
xor
in
fidivrs
test
loop
cmpsl
adc
jns,pt
andb
mov
mov
dec
mov
lds
sbb
gs
ud1
fcom
pop
sub
and
out
cs
pop
out
pop
mov
ljmp
cmpsl
cmp
xor
imulb
push
in
xchg
fs
icebp
push
cmpsb
imul
xchg
inc
pop
mov
and
das
ds
jecxz
dec
jb
adc
dec
cmp
clc
mov
cmpsl
mov
mov
mov
shrl
imul
mov
xchg
add
xchg
push
idivl
dec
in
fildl
jl
push
cmp
mov
add
sub
stos
shrb
leave
xchg
adc
add
dec
add
pop
jl
pusha
pop
ljmp
dec
decb
hlt
rcrl
outsl
popa
dec
or
xchg
cmpsb
add
push
dec
es
xchg
or
es
das
dec
push
sub
scas
xor
dec
mov
mov
xchg
fsub
scas
fists
clc
mov
push
mov
mov
sub
inc
and
sbb
sub
ficoms
icebp
enter
std
sub
mov
mov
imul
push
pop
and
jns
xchg
xchg
repnz
push
and
sub
inc
and
push
sbb
or
cmp
mov
mov
hlt
inc
bound
xor
addl
scas
insl
push
fdivs
inc
sub
add
push
xchg
lock
fnstcw
push
data16
inc
inc
lea
or
out
inc
dec
jp
insb
shrl
sbb
cmp
pusha
das
pop
dec
loop
pop
lods
push
lret
mov
sbbl
stc
jno
lods
xchg
adc
inc
clc
jne
out
sti
cmpsb
sbb
ljmp
repz
xchg
mov
mov
cmp
mov
xchg
fwait
mov
pop
or
repz
push
nop
cld
repz
mov
mov
hlt
lds
nop
std
xchg
and
idivl
outsl
dec
xor
leave
andb
call
lahf
jns
inc
shrl
push
mov
add
push
and
int
push
push
push
add
pushf
sbb
shrb
xchg
add
std
outsl
adc
jge
xor
call
or
cwtl
pop
sbb
jae
xchg
int
daa
out
mov
and
shl
outsl
fnsave
out
dec
and
and
cmp
repnz
push
jl
shll
or
push
out
fcmovb
inc
movsl
out
iret
mov
jg
xlat
xor
jnp
add
xor
loope
sub
jl
aam
jl
mov
stos
add
mov
push
sbbb
and
loop
leave
enter
mov
lods
xor
push
cmpsb
jbe
dec
dec
rcr
pop
or
cmc
lret
inc
fnsetpm(287
mov
test
and
pop
gs
leave
pop
lds
push
ds
xchg
push
add
push
cltd
stc
ds
in
pop
push
sbb
ds
mov
lock
ficompl
ret
pusha
pop
mov
mov
push
mov
and
out
int
daa
inc
and
adc
jg
pushf
outsl
lcall
adc
push
and
mov
push
xchg
mov
sar
fwait
adc
push
push
jns
pop
mov
daa
pop
aaa
mov
stc
test
mov
mov
das
loope
xchg
into
pushf
ds
cmp
mov
int
jne
movsb
sbb
push
fisttpl
pop
rcrl
loopne
xor
dec
shlb
popf
lds
inc
sahf
je
jo
popa
add
in
mov
mov
sahf
mulb
test
iret
push
xchg
rorb
sub
pop
movsb
stos
cmp
xchg
cmp
xchg
or
or
xchg
pop
das
push
xor
imul
daa
xchg
inc
mov
mov
xor
iret
inc
jge
scas
pop
adc
cltd
xor
adc
sub
imul
inc
cmc
ds
stos
xchg
daa
lock
dec
mov
out
in
repz
stos
dec
lahf
pop
test
xchg
lahf
xchg
mov
push
pop
rorb
fstl
xor
cmp
mov
push
mov
je
test
push
repz
adc
pop
lds
xchg
sub
and
push
mov
push
and
or
shll
dec
hlt
es
hlt
and
incb
rcrl
xchg
adc
jmp
adc
mov
push
and
add
fistps
dec
in
mov
mov
or
pop
repnz
xchg
jns
jg
mov
insl
pusha
cld
cwtl
int3
dec
popa
add
or
loop
push
sbb
and
push
pop
xor
cmp
adc
test
cmp
mov
fwait
push
rcrb
aas
xor
pop
imul
aam
es
in
pop
xchg
repnz
inc
fisubs
fisubrl
cmpsl
adc
cmp
pop
movsl
dec
imul
push
adc
pop
in
jmp
cmp
std
sub
test
lahf
pop
pop
lahf
fdivs
jecxz
shrl
inc
fwait
call
in
movsb
scas
cs
adc
xlat
fwait
jge
loope
clc
mov
repz
push
or
pop
movsl
jp
and
mov
adc
sub
jecxz
cmpsl
or
cld
pop
out
jl
mov
dec
and
push
inc
and
testl
jae
fmull
mov
pop
outsl
push
mov
inc
push
lret
sbb
scas
sarl
js
pop
add
stos
leave
out
pop
push
or
shll
push
int3
mov
fwait
fs
in
and
mov
loop
jbe
jne
imulb
aam
mov
xor
sarb
mov
scas
int3
mov
cmpsb
jnp
mov
inc
sub
fs
mov
adc
dec
sbb
mov
loope
xlat
xchg
iret
test
lods
sbb
xor
mov
mov
jmp
mov
or
adc
sub
lret
les
sbb
lods
pusha
aam
add
add
divl
jne
aad
imul
fisttpl
in
stc
unpckhps
dec
ret
add
jno
ss
adc
sub
sub
add
movsb
dec
sbb
dec
sbb
sub
dec
cmp
or
push
inc
sbb
fisubl
dec
scas
and
int3
inc
rolb
aam
xchg
adc
and
jnp
loopne
mov
sarl
mov
push
add
add
push
js
jle
inc
pop
push
pushf
jl
fdivr
lods
decl
into
int3
mov
test
in
mov
pushf
call
mov
cmp
cmpsb
or
bound
int
jg
enter
add
fldt
addl
ret
add
scas
push
or
or
push
test
sbb
mov
pop
es
and
ja
xchg
mov
aas
mov
test
jl
faddp
lock
cli
xchg
clc
mov
push
jge
stos
addb
pop
pushw
mov
enter
imul
stos
xchg
inc
mov
aad
dec
jl
mov
loopne
loope
lods
dec
cmpsl
ror
popl
stos
adc
data16
inc
and
icebp
jbe
ret
mov
add
mov
mov
pop
mov
adc
out
test
dec
add
lods
outsb
inc
xor
cmpsb
sub
fsub
in
adc
push
ljmp
push
push
fadd
scas
shl
movsl
jecxz
push
cmp
js
mov
shr
test
ss
test
and
add
mov
sti
pop
imul
fiadds
loopne
inc
fwait
mov
cwtl
testb
popf
js
lods
ja
pop
or
inc
and
adc
mov
mov
sbb
pop
inc
add
cmpxchg
ja
push
fisttpll
lret
insb
mov
ljmp
les
fs
orl
mov
sbbl
jns
and
adc
shll
add
test
arpl
push
and
popf
or
jmp
and
dec
xchg
imulb
xchg
mov
je
cltd
sub
mov
push
daa
daa
lods
xchg
imulb
outsb
lahf
mov
addr16
mov
lret
ds
frstor
inc
xor
mov
nop
mov
sub
push
sbb
test
mov
pop
xchg
lea
pop
in
sti
fcoms
sbb
xchg
nop
out
jbe
adc
in
pop
mov
push
sub
mov
mov
incl
pusha
push
movsb
mov
and
jg
outsl
xchg
outsl
inc
mov
fcmovne
mov
fsubrs
pop
dec
int3
fwait
push
jns
in
scas
sub
imul
pop
sarb
shlb
add
and
add
test
in
push
and
movsb
inc
fimuls
decl
push
mov
inc
imul
mov
clc
cld
cmp
cmpsl
aad
add
sub
add
jbe
mov
sbb
imul
mov
mov
fsubrp
pop
push
icebp
icebp
fprem
addr16
fcompl
dec
cld
fadd
fbld
push
mov
xor
inc
xchg
andl
xchg
jnp
dec
pop
dec
fwait
push
imul
out
dec
sub
cmp
daa
aas
pop
pop
in
dec
sti
test
sbb
fst
test
inc
lcall
shl
hlt
out
inc
notl
pushf
cmpsb
int3
rcrb
adc
mov
push
icebp
and
or
test
pop
pushf
sbb
jns
mov
adc
lcall
mov
clc
and
out
mov
cli
and
xor
sub
mov
mov
add
repz
and
testb
scas
add
dec
adc
cld
inc
les
adc
fisubl
lahf
or
arpl
and
pop
mov
add
push
stc
pop
pop
sbb
out
jns
cli
sub
mov
mov
lods
cmp
movsb
push
lahf
insb
sub
inc
daa
mov
cld
ja
jmp
lock
mov
imul
shr
dec
cmpsb
jg
je
jmp
arpl
add
call
int3
push
divb
cmp
jmp
shll
cmp
mov
add
aam
xor
push
xorl
xlat
adc
out
jl
mov
jno
aaa
jae
cwtl
loop
addr16
jns
mov
mov
sbb
lock
jno
mov
sti
fildll
pop
add
negb
xorl
jbe
push
inc
jmp
dec
imul
lret
sub
fcmovne
imul
adc
push
xor
xor
inc
loope
call
xor
movsb
cli
xchg
push
mov
inc
fidivrs
in
hlt
pusha
push
ret
mov
subb
inc
gs
xor
inc
cmp
push
sahf
das
jl
push
adc
xor
push
insl
jnp
xor
pop
test
mov
adc
call
mov
and
lahf
sub
cmc
out
orb
andl
scas
add
movups
add
out
dec
ret
add
xlat
push
mov
mov
nop
push
sbb
pop
mov
je
inc
xor
sar
in
dec
aaa
add
pop
bound
ficompl
fisubrl
mov
or
sarl
les
push
shll
sub
sarb
mov
jae
insl
pop
mov
lods
cmc
fcompl
addr16
xchg
xchg
jge
inc
fsubl
clc
inc
movsb
cld
es
adc
adc
push
je
enter
jp
lahf
rcrl
inc
sbb
das
test
xchg
out
addb
push
push
loopne
mov
jp
repz
mov
addb
rorb
inc
cli
mov
adc
xor
mov
and
popf
fbstp
push
ret
jg
mov
test
dec
hlt
cmc
ja
stc
pusha
sub
dec
pop
mov
pop
adc
jnp
cld
mov
andb
lea
sbb
call
mov
pusha
rolb
cs
sar
add
mov
or
in
pop
mov
jmp
xchg
xchg
mov
sti
std
sar
push
int3
icebp
icebp
aaa
cmpsb
es
and
fmull
sub
xchg
jbe
je
cmc
adc
ja
add
push
ret
dec
cwtl
pop
jmp
adc
into
dec
add
xlat
push
inc
movsb
jmp
lods
sbb
jl
push
rorl
inc
jle
mov
xchg
mov
jnp
cltd
pop
aas
cli
jbe
pushf
cmp
xchg
xor
xor
pop
dec
xor
test
jae
addr16
pop
pop
xchg
test
xchg
test
cwtl
sub
cwtl
loopne
stos
mov
push
hlt
inc
xchg
mov
jl
fwait
mov
push
and
das
xor
and
lret
aam
dec
mov
in
add
inc
xorb
das
dec
pushf
lret
pop
jbe
dec
sub
jns
jge
outsb
das
fs
mov
xchg
cmp
pushf
fldenv
jne
cmp
push
in
xor
stos
repnz
add
mov
das
xor
filds
movsl
lret
and
outsb
ret
mov
adc
add
adcl
stos
in
jl
test
ja
jb
pop
ja
scas
pop
or
scas
pop
gs
rcl
add
in
dec
decb
or
jl
gs
xchg
clc
dec
ret
add
push
icebp
or
sbbl
pop
imul
mov
cli
cmp
push
or
pop
jecxz
sarb
adc
push
shlb
sbb
mov
push
jmp
mov
push
fadd
je
insb
lds
inc
mov
jnp,pt
inc
roll
xchg
mov
push
adc
adc
cwtl
push
cmpsb
mov
sub
xor
adc
das
push
inc
adc
mov
ja
sub
in
daa
sbb
insb
cmpsl
bound
adc
aam
fbstp
dec
pusha
pushf
cli
scas
xor
and
or
lahf
hlt
sbb
jns
imul
mov
out
pop
clc
xor
pop
dec
retw
ret
cmc
cld
ljmp
insl
pusha
sbb
mov
stos
in
dec
shl
and
mov
dec
dec
push
xor
xor
es
mov
push
bound
sub
push
dec
cmp
pop
test
hlt
xchg
mov
xchg
subb
orb
push
add
dec
es
fisubs
push
les
inc
sahf
jne
pop
push
xor
push
aaa
adc
pop
xchg
mov
std
mov
aam
pusha
xchg
mov
inc
jle
push
pop
mov
pop
enter
add
push
or
addr16
jge
cmp
imul
push
add
sbb
jl
ficoms
test
xor
fcompl
mov
fsubrl
enter
fsubr
dec
or
ret
out
sbb
stc
shlb
dec
pop
jp
cld
test
sub
pop
lock
repz
adc
push
xchg
or
push
repnz
mov
stc
mov
jmp
addr16
jnp
ss
lret
mov
vprotb
or
out
shl
insl
sub
mov
das
push
fsubr
insb
adc
mov
push
scas
dec
in
jecxz
mov
inc
gs
jp
lods
test
add
es
pop
cli
xchg
add
orl
jge
cmp
mov
or
in
or
pop
leave
call
push
cmpsl
test
rolb
bound
xchg
pop
sub
mov
or
jecxz
pop
in
shrb
scas
xchg
mov
inc
xor
push
mov
ret
xor
jg
and
or
insb
mov
shlb
outsl
rorl
add
jne
xchg
push
mov
sub
push
cmp
rcrb
mov
jo
cmpl
subl
xor
aam
mov
in
sahf
dec
push
sahf
jle
add
mov
outsb
addr16
stos
fucomp
jp
jno,pn
pop
cmp
push
and
nop
sahf
pop
adc
mov
mov
adc
add
and
mov
cmpb
adc
jge
lock
push
jbe
dec
mov
jo
pop
jl
enter
insb
pop
iret
pop
outsl
std
push
pop
add
in
jge
aad
repnz
test
mov
js
mov
sub
pop
orb
adc
shl
xchg
mov
cwtl
test
pop
fcompl
or
movsb
repz
sbb
stc
lds
mov
and
fwait
xchg
xor
mov
ljmp
cmp
leave
cmp
jmp
add
add
sub
push
mov
cmc
movsl
sub
add
adc
and
mov
xor
pop
sar
stc
inc
sbb
pusha
sub
mov
outsl
add
pop
adc
cmpsb
lods
mov
xchg
jno
or
jne
push
cmp
cmp
arpl
dec
mov
sbb
adc
fisttpll
pop
lds
sub
cmc
dec
add
gs
cmp
inc
hlt
int
out
hlt
popa
lcall
pushf
jo
mov
sbb
aam
mov
mov
sbb
cmp
jg
mov
sahf
jae
data16
cmp
jne
xchg
mov
add
and
fs
mov
sbb
xchg
sbbl
sbbb
add
cmpsb
jl
xor
jge
or
jns
insb
and
out
popf
xor
sub
rclb
pop
movsl
movsl
icebp
andb
ljmp
pop
fdivrl
inc
xchg
ds
fimull
shrl
pop
xchg
out
pushf
std
enter
test
mov
arpl
mov
test
das
pushf
add
mov
sahf
inc
sub
mov
lret
push
pop
pop
mov
mov
je
push
jbe
fldl
pushf
call
shlb
cmpl
pop
lock
movsl
ret
es
jno
test
fcom
cs
cmp
fidivrs
inc
and
sub
fdivp
dec
lods
mov
jbe
fldcw
fnstcw
stos
out
lret
dec
and
lods
sbb
mov
aas
out
mov
or
mov
jno
cmp
and
cmc
orl
lcall
test
inc
xor
push
in
xchg
pop
icebp
js
icebp
je
dec
jecxz
cmpsb
jge
fmul
es
push
adc
xchg
push
fwait
sarl
leave
add
pusha
jb
xor
inc
xor
dec
out
cld
inc
scas
insb
popa
gs
shlb
sub
addl
jo
add
shll
insb
mov
movsb
ja
jl
mov
xchg
iret
lret
loop
scas
add
mov
cwtl
and
dec
ds
in
push
inc
loope
leave
clc
fists
xchg
pushf
ret
lock
dec
xchg
jg
mov
pop
divb
int3
mov
int
stos
fidivl
ss
mov
cmp
mov
nop
inc
inc
test
adc
xor
jmp
mov
popa
add
jb
sub
pop
arpl
lahf
mov
jae
adc
add
mov
push
cli
cs
mov
xchg
sbb
imul
dec
in
xchg
jecxz
mov
aaa
notl
jmp
mov
xchg
inc
cmpsl
push
xor
add
mov
addr16
add
sbb
inc
jp
push
sbb
jl
inc
pop
fidivl
ja,pt
test
inc
mov
and
out
cmc
cli
pop
scas
jmp
ds
call
jb
cmp
mov
fs
data16
mov
cmp
or
scas
pop
js
and
cmpsl
sbb
add
jmp
pop
roll
add
cmp
adc
mov
mov
lds
add
int
pop
sub
cmp
cmp
clc
enter
lds
jns
outsb
pop
mov
in
cmpsb
adc
adc
fwait
rol
rcll
outsb
es
es
jecxz
adc
les
xor
loopne
arpl
adc
or
mov
movsl
mov
sbb
lret
cmpb
insl
andl
imul
cs
ljmp
loop
cmp
pop
jbe
jns
jl
push
pop
lds
shll
mov
push
fs
in
push
cmp
add
pop
outsl
addr16
test
add
add
popl
or
leave
daa
mov
lods
or
fnsave
fbstp
pusha
enter
test
push
mov
jo
fadds
mov
mov
inc
dec
add
jge
sbb
mov
mov
insl
lcall
cld
stos
and
mov
test
mov
jae
sub
push
push
jp
mov
push
mov
push
out
les
xor
popf
jae
pop
imul
xchg
add
or
xchg
sub
cmpsl
push
cmp
lods
aaa
jecxz
dec
add
jg
xor
popa
mov
mov
mov
xchg
testl
popa
pop
jmp
adc
xchg
add
mov
sub
mov
nop
sbb
push
clc
adcb
das
mov
mov
jge,pt
lea
stos
loop
fdivrl
out
pop
inc
sbb
fistl
test
test
enter
adc
clc
out
mov
sbb
add
imul
cmp
add
cmp
insb
mov
inc
adc
mov
mov
adc
sub
pushl
lcall
sbb
fsub
rcll
imul
addr16
ja
ret
mov
clc
fmull
fiaddl
btr
mov
and
std
rorl
pop
or
or
rcrb
adc
je
loopne
pop
mov
decl
sbb
mov
push
add
test
and
cmp
pop
lods
or
cli
and
push
lahf
xchg
dec
and
loope
mov
into
test
loop
xchg
mov
mov
js
inc
insb
push
adc
inc
pusha
imul
pop
in
lret
inc
push
out
shrl
adc
repnz
pop
loopne
push
rol
lret
mov
xor
sbb
dec
jp
in
mov
out
popf
cmp
mov
popa
out
xor
xor
or
push
and
into
push
cmpb
popf
mov
cli
movsl
mov
pop
scas
negb
xor
jmp
int
adc
test
fcom
xchg
dec
jb
into
xchg
xchg
mov
mov
pop
rorl
sbb
push
movsl
adc
movsl
and
fbld
jns
inc
push
xor
push
int3
mov
cmpsl
es
bnd
shrl
lea
xchg
xor
dec
push
and
or
cs
push
dec
loope
push
fucomip
sub
dec
shrl
mov
sar
insb
insb
sbb
mov
insb
outsb
inc
jl
ja
cmp
inc
mov
loopne
xor
icebp
jp
adc
jae
outsl
cmpsl
ror
dec
pop
cmp
lcall
or
pop
fisubs
sbb
fucom
and
cwtl
pushl
lcall
sti
add
jl
pop
pop
mov
inc
jmp
and
stos
push
sbb
fwait
add
adc
jl
test
divl
add
or
loope
pop
mov
arpl
shlb
pop
xchg
in
lock
add
adc
mov
das
not
pop
push
popf
stc
dec
mov
popa
xchg
sub
push
lods
inc
pop
or
sub
loop
movb
sub
fimuls
jmp
inc
repz
dec
cmc
xchg
sub
dec
or
or
and
or
cmpsl
inc
fistpll
fnstenv
add
stos
sti
ljmp
add
xorl
mov
cli
in
xchg
push
push
sahf
push
call
jl
bnd
push
aaa
stos
xchg
jne
mov
int
sbb
fimull
mov
pop
add
push
stc
add
xor
aad
stos
movsl
mov
insl
or
out
arpl
or
mov
iret
sbb
xchg
cmp
ret
fdivl
popf
add
mov
or
mov
cld
xor
mov
push
movsb
adc
imul
add
ficoml
ja
adc
dec
or
notl
push
icebp
aas
cmp
sbb
js
leave
pop
inc
out
push
jl
dec
aas
adcl
movsb
loope
out
xchg
loop
and
sub
adc
jle
loope
mov
mov
adc
add
mov
mov
cmp
loope
shl
xor
shr
idivl
lods
pop
adc
in
mov
mov
fnstenv
adc
and
push
sub
popl
outsl
scas
mov
sub
adc
mov
test
out
sbb
aas
xchg
jge
ljmp
inc
and
lret
subb
adc
inc
jbe
mulb
jns
xchg
cld
jle
and
dec
sbb
in
icebp
divl
popf
jle
int3
cltd
mov
add
or
inc
xchg
cmpl
test
and
cmp
sbb
and
ss
push
js
hlt
sub
add
add
xchg
xchg
data16
mov
cmpb
cmp
cmp
cwtl
outsl
into
cmp
or
pop
mov
je
rcrb
or
push
fisttps
mov
dec
pop
popf
lods
inc
cmp
icebp
icebp
mov
sub
lret
jmp
clc
xchg
mov
insl
out
inc
pop
fs
dec
jecxz
dec
inc
lods
lret
roll
fs
and
movsl
into
sub
push
dec
push
push
fistpl
mov
in
push
adc
test
jp
aad
popf
inc
imul
adcb
add
dec
pushf
out
stc
adc
adcl
aas
push
fnstcw
or
stos
outsl
jmp
lods
adc
dec
pop
repnz
pop
es
or
lods
les
xorb
sub
jns
stos
inc
ret
out
adc
outsb
mov
jnp
enter
pusha
mov
pop
mov
sbb
push
sarl
xchg
aaa
mov
push
clc
pop
add
sub
arpl
ja
pop
xchg
imulb
loopne
flds
fcompl
pop
test
aam
inc
inc
inc
fcoml
mov
out
jmp
sub
mov
jb
xlat
lahf
clc
lods
addr16
add
test
cmp
and
pop
cmpsl
psrld
rorl
jae
jmp
imul
das
lock
xor
outsb
rclb
fstl
pop
rorl
lods
fwait
dec
iret
mov
sbb
mov
shlb
fcompl
lods
in
or
push
jmp
call
enter
adc
push
scas
jecxz
cli
sub
imul
push
dec
movsb
stc
add
mov
xor
dec
lcall
or
push
test
xchg
push
pop
inc
pusha
in
aas
xor
leave
jg
int3
cltd
rcl
mov
aas
xchg
and
test
lret
mov
cmpsb
mov
data16
test
sub
mov
neg
mov
xchg
aaa
dec
xor
sbb
sub
fnstsw
xlat
dec
pop
xor
leave
stos
adc
aam
and
mov
mov
dec
pop
sub
sti
cmp
outsb
xor
leave
pop
inc
pop
repz
movsb
and
test
jecxz
iret
cs
rcrb
shl
xor
mov
adc
xor
push
not
push
jne
inc
mov
mov
int
mov
or
cmpsb
insb
pop
and
xchg
push
cmp
or
jecxz
fildl
pop
aas
cmpb
push
xor
stos
out
daa
out
mov
mov
sarb
int3
fstps
mov
xchg
xchg
push
xor
fwait
dec
cmp
fdivrl
iret
xchg
xchg
popf
pop
jne
jne
xor
out
rcrb
inc
xor
mov
cli
cmpsb
inc
xor
test
add
aad
lock
mov
fdivrl
add
adc
arpl
pop
push
stc
sub
aaa
cld
int
xor
mov
sub
push
idivb
inc
rcll
outsl
inc
mov
insb
dec
add
shrl
sub
ss
xchg
rorl
jge
out
jo
dec
push
push
or
hlt
mov
sub
xor
cmp
iret
sbb
outsl
sub
jae
mov
jb
pop
jne
xchg
movsl
ret
add
or
adcl
jne
int
pop
cwtl
and
sbb
pop
std
sbb
mov
mov
push
sbb
jno
cmp
cs
mov
pusha
adc
mov
pop
in
cli
leave
mov
sbb
cmpsl
pop
pop
repz
gs
mov
push
jg
mov
hlt
ret
and
es
push
pop
inc
sbb
test
or
mov
pop
add
ljmp
and
loopne
imul
fsubl
xor
ja
stos
lods
pop
orb
pop
ja
add
std
movsb
add
lock
jnp
push
mov
mov
cmp
pop
aad
dec
xlat
jae
pushf
fiaddl
lcall
repz
sub
pop
pop
ss
adc
jecxz
xchg
testl
clc
pshufw
jne
adc
test
jge
add
and
bound
ror
inc
lret
in
mov
sub
icebp
dec
imul
nop
test
adc
xchg
xchg
push
std
rolb
bound
sub
pop
jae
daa
sub
jno
push
and
in
xlat
sbb
popa
fadds
pusha
mov
out
mov
andl
test
and
lods
in
sub
sub
and
imul
testl
out
dec
xor
xchg
cltd
sbb
enter
push
insb
sahf
mov
rdpmc
fistl
add
outsl
fwait
sub
mov
sbb
ds
shlb
inc
sbb
leave
add
push
xor
lcall
cwtl
imul
aad
sbb
push
js
mov
push
jge
ja
stos
out
sahf
jl
or
test
lahf
rclb
adc
mov
or
adc
loop
mov
or
inc
mov
or
pop
stos
xchg
xchg
add
icebp
lret
add
pop
lea
lods
mov
aas
icebp
stc
jo
cmp
sbb
xchg
ljmp
lock
cmc
stc
aam
cmp
jnp
in
in
add
rcll
lret
mov
test
jl
xor
mov
push
ja
xchg
cmp
pop
add
popa
cmp
mov
xor
push
push
lret
mov
push
int
fs
mov
ret
jno
mov
cwtl
out
inc
mov
pop
lea
jae
adc
or
and
dec
add
es
jnp
mov
lods
jmp
pop
cld
jg
pop
xchg
popa
aas
jb
jl
or
loope
mov
mov
push
test
rorl
adc
or
sti
out
outsl
fidivl
addl
ss
push
jnp
xchg
loopne
hlt
push
dec
lcall
jo
test
dec
pop
int3
and
pop
bound
pop
fnsave
lds
cmc
add
call
push
push
es
repnz
and
xlat
movl
push
mov
scas
rolb
mov
xor
movsl
xor
adc
in
in
xor
sub
ss
leave
or
test
rcrb
push
push
or
mov
xor
or
out
stos
push
rcrl
fisubrs
pop
mov
mov
cmp
mov
stc
jbe
imul
pop
mov
or
movsb
sbb
test
xchg
out
dec
and
jo
mov
imul
das
mov
add
pop
loope
push
jnp
ss
sbb
cmp
xchg
and
cmp
jbe
daa
pushf
cmpsb
inc
shl
inc
push
out
cwtl
scas
inc
add
dec
add
ljmp
push
aaa
lahf
push
mov
pop
stc
mov
or
lcall
mov
lret
bound
xor
inc
and
mov
fwait
movsb
popa
dec
xchg
ret
adc
test
or
jbe
xchg
cmp
icebp
cmp
ret
out
xor
movsl
lcall
lock
mov
jno
cmp
es
shrb
les
ja
push
mov
out
int
xchg
inc
adc
out
rolb
je
jo
ret
inc
pop
push
sbb
and
ljmp
and
inc
jmp
loopne
fsubs
push
ss
cmp
cmp
dec
scas
mov
in
mov
cmc
cmp
add
ljmp
or
sti
jno
in
fdivl
dec
ja
and
cmp
xchg
mov
hlt
lds
xchg
test
lret
add
dec
dec
sbb
loope
pop
push
mov
cltd
or
fcomps
or
leave
lea
js
dec
push
sbb
icebp
loop
fwait
xchg
mov
lods
jecxz
adcl
stc
and
addr16
xlat
rcrl
insb
scas
xchg
add
mov
xchg
xchg
daa
lcall
fidivrs
icebp
sub
out
xchg
adc
inc
loope
jo
call
loop
cmp
sub
cs
stos
lcall
fimuls
test
inc
aam
push
nop
dec
jle
inc
inc
mov
mov
mov
lcall
jnp
cmpsl
shlb
inc
out
dec
add
fwait
mov
shlb
roll
lret
mov
loope
ljmp
jnp
inc
xor
jecxz
mov
pop
pop
pushf
xchg
jp
adc
mov
adc
add
imul
test
out
in
outsb
rol
and
lret
jle
pop
loopne
loop
daa
out
aaa
out
adc
sbb
mov
jb
push
arpl
xor
xchg
pop
xchg
fcompl
into
lea
stos
fnstcw
fs
cmp
dec
pop
xchg
enter
mov
sbb
cmp
pushf
mov
fcmovne
mov
dec
xchg
aas
mov
fildll
iret
je
imull
add
pop
jb
sbb
imul
jo
dec
or
ret
shll
sbb
mov
test
xchg
andb
shlb
mov
loop
pop
and
test
or
xchg
mov
xorl
push
mov
jb
mov
jnp
add
int
sbb
aam
nop
jne
cmp
rcrl
sub
into
cltd
cld
mov
pop
rclb
ljmp
mov
jno
pop
sub
mov
imull
lahf
inc
push
sub
inc
xor
shll
add
jnp
ljmp
fwait
loop
pop
adc
jb
sub
sahf
dec
inc
or
movsb
jecxz
sbb
ljmpw
cmp
icebp
sbb
sti
mov
ret
lds
xchg
pop
lahf
jo
mov
mov
aas
mov
sub
jo
fdivl
mov
pusha
jne
xchg
jno
loope
sub
pop
daa
xchg
pop
jae
dec
call
mul
mov
stos
and
in
clc
xor
cmc
ret
jo
mov
in
psubd
add
mov
mov
or
dec
jns
adc
loope
das
push
mov
sub
and
inc
mov
movsl
cmp
push
jbe
sbb
pop
xchg
cmpsb
cmc
fwait
and
inc
test
mov
sub
and
jmp
mov
xchg
daa
and
inc
push
loop
rclb
js
xchg
lcall
mov
sub
and
jb
push
movsb
inc
push
rolb
mov
inc
dec
pop
pop
inc
mov
bound
sahf
sub
dec
xchg
mov
sbb
and
and
xor
in
and
fs
lock
out
cmp
mov
pop
lahf
in
add
mov
xchg
gs
pop
xchg
jecxz
cmc
add
push
mov
pop
jle
dec
roll
leave
or
sub
out
cmp
lret
ds
pop
sbb
aad
jbe
cmpsb
sbb
js
pop
push
iret
adc
and
das
sbb
shlb
cmp
arpl
mov
mov
xchg
pop
ret
call
mov
inc
cmpl
int
fisubs
dec
inc
or
mov
add
stos
scas
pop
nop
sub
jp
out
aas
pop
je
les
mov
gs
xchg
sub
loop
jne
cmp
lock
pop
movsb
sbb
insb
int3
js
xor
test
test
dec
es
pop
jne
cmp
pop
out
sbbb
std
in
popa
imul
inc
push
mov
stos
pop
sbb
enter
mov
jp
adc
je
xor
test
or
jno
xor
fyl2x
push
test
cs
sbb
inc
cmpsb
xchg
fldcw
jmp
mov
xchg
xor
mov
fldt
stos
into
loop
xor
mov
js
int
push
jmp
sbb
outsb
int3
jg
fldl
lock
fwait
dec
mov
dec
mov
lods
sub
popf
loope
insl
push
and
std
cmp
sbb
insb
lahf
pop
enter
add
sub
pop
fcomip
push
mov
cmp
push
sub
scas
lret
push
scas
push
xor
inc
sbb
ss
sbb
inc
cmp
lods
dec
push
cltd
das
adc
pushf
orl
sub
xchg
sbb
mov
orl
mov
xchg
dec
pop
xor
mov
shlb
inc
dec
imulb
mov
sahf
dec
or
dec
and
jp
and
mov
jae
push
iret
xchg
mov
mov
fwait
add
outsb
xlat
and
jo
mov
xor
mov
sbb
mov
adc
mov
pop
push
lahf
push
stc
dec
push
fadds
lret
jge
or
iret
shr
pop
ja
cmp
out
rol
mov
add
jb
xchg
rorb
aad
cmp
xor
mov
pop
adc
mov
inc
sub
jge
jno
add
scas
adc
out
bound
sbb
push
fidivrs
les
push
jnp
pusha
add
stos
adc
push
mov
icebp
push
pop
aam
and
daa
and
lret
shrb
sbb
aas
mov
or
gs
movsl
fnstenv
or
push
push
pop
mov
and
cmp
stc
lcall
out
mov
cmp
jnp
mov
mov
dec
sbb
sbb
xor
xor
lods
mov
mov
dec
iret
jb
clc
mov
add
mov
lods
cmp
mov
and
or
lret
inc
jb
inc
mov
jns
or
add
xchg
in
ljmpw
jo
or
push
in
out
mov
in
xor
jecxz
aad
cmp
adc
adc
push
test
mov
sub
push
inc
enter
xchg
popa
stos
imul
popf
ja
ja
pop
cmp
lods
jb
push
out
push
push
lret
mov
mov
xlat
ss
xchg
in
and
into
cli
mov
aaa
xchg
mov
xchg
jp
dec
dec
out
xor
sub
inc
sub
dec
cmp
push
xchg
ds
rcrl
xchg
sub
aam
pushf
adc
in
shll
inc
shrb
mov
mov
pop
lahf
add
and
jp
sbb
jl
and
insb
lahf
sbb
cld
pop
outsb
loopne
xor
dec
jp
pop
pop
mov
enter
sub
cmp
fcomi
mov
leave
cmp
inc
fnsave
mov
movsb
dec
xchg
inc
adc
rclb
aaa
mov
ljmp
sbb
pop
xor
mov
adc
sub
xchg
jmp
push
xor
addr16
mov
dec
out
add
out
add
push
ret
insl
jecxz
push
mov
cmp
aaa
and
pop
xchg
cltd
mov
sub
in
xchg
add
mov
cmp
fs
in
leave
cmc
cvtps2pi
or
fiaddl
mov
inc
add
push
stos
push
nop
pop
xchg
jmp
imul
inc
loopne
dec
inc
mov
bound
ds
sbbb
out
shrb
mov
mov
inc
ja
cli
pop
cltd
sarb
push
sbb
mov
jecxz
or
popa
pop
mov
nop
xor
add
mov
js
hlt
xor
or
repz
mov
xlat
insb
mov
dec
repz
fwait
pop
inc
into
cmpsb
jl
fmull
jnp
hlt
push
mov
ljmp
outsl
insb
lods
xchg
loope
mov
loope
adc
out
lock
dec
adc
mov
bound
xchg
mov
test
fsubr
test
loopne
hlt
xor
es
les
adc
in
xchg
cmp
dec
movsl
xor
out
add
xchg
lret
inc
or
add
aam
or
mov
sti
pop
mov
ss
stos
negb
mov
jns
mov
mov
pop
inc
push
mov
cwtl
mov
gs
shlb
sti
in
int3
sbb
lods
shl
xor
xor
adc
ds
mov
cmp
cmc
sbb
sbb
mov
jb
lahf
jp
pop
fcoml
xchg
add
call
out
cmpsl
test
movsl
or
jmp
push
adc
push
mov
bound
int
mov
xchg
stc
mov
hlt
jle
jp
jns
in
push
adc
push
sbb
pop
dec
cmp
aaa
dec
faddp
jbe
out
add
push
add
out
or
mov
lds
jp
mov
les
pop
fs
roll
fistpll
cmp
cld
cmp
or
push
aaa
movsl
movq
cwtl
scas
pop
pop
insb
aad
aam
push
divl
std
repnz
sbb
pop
lods
scas
sub
lcall
icebp
xor
mov
xor
sub
fldcw
inc
icebp
rcrl
dec
mov
and
adcb
cmp
inc
test
loop
scas
into
push
xlat
stos
int3
inc
idivl
punpckhwd
into
cli
lock
sub
jg
and
sarl
jle
fs
mov
inc
xchg
xchg
xchg
cmp
xchg
adc
pop
popf
sbb
mov
addr16
add
addl
mov
sahf
mov
testb
outsl
aad
cmpsl
loopne
push
xor
and
lahf
adc
jp
cmp
outsb
xor
and
cmpsl
and
adc
jle
xchg
sbb
pop
sub
xchg
repz
lcall
addr16
and
in
dec
gs
out
jle
sub
push
xlat
enter
ret
jo
push
mov
hlt
push
xchg
push
xor
xchg
or
sbb
clc
adc
pop
sbb
lods
push
test
xchg
negl
inc
popa
push
insb
loope
sbbl
int3
lahf
mov
or
outsl
and
pusha
lret
inc
or
jbe
insl
adc
xor
sub
sub
xor
sub
mov
arpl
hlt
adc
aad
jno
sbb
ljmp
sub
pop
flds
jnp
shlb
xchg
movsl
out
mov
adc
mov
into
or
and
loop
nop
mov
or
mov
pop
ja
dec
push
cli
pop
xlat
adc
and
jmp
mov
ret
sbb
jl
dec
jb
jp
cld
data16
stos
cmp
inc
sahf
mov
into
or
dec
lds
push
push
call
mov
xor
pop
pop
icebp
pop
xor
aam
add
into
xchg
pop
sub
pop
xor
movsl
adc
movsb
push
popa
push
lods
dec
sub
mov
aam
lods
dec
xchg
jnp
stos
leave
or
dec
lret
xor
jbe
add
add
outsl
mov
mov
cmpsb
dec
dec
imul
shll
arpl
mov
mov
cmp
out
or
clc
mov
lret
jecxz
xor
add
xadd
stos
adc
das
add
loopne
out
xor
and
rcr
loop
adc
cmp
fwait
xor
pop
pop
or
fcoms
adc
xlat
push
add
inc
jmp
or
cld
cmp
sti
ror
andb
std
push
jmp
pop
push
cli
xor
dec
ss
inc
je
lret
in
adc
into
jns
in
mov
push
cmp
sub
sahf
fimuls
push
sahf
repnz
test
jae
stos
jg
shl
sbb
repnz
pop
mov
fisubl
mov
popa
fbld
dec
testb
mov
pusha
dec
cmp
mov
mov
xor
add
ret
in
lods
lock
arpl
imul
ret
and
addl
xor
into
jl
cmpsb
ffreep
sbb
cmp
inc
repnz
frstor
movsb
mov
push
jb
test
fs
push
mov
insl
mov
pop
es
push
cmp
push
daa
push
popa
inc
bound
and
jge
aad
jmp
inc
gs
xchg
lea
shlb
push
and
ret
mov
or
pop
clc
mov
jecxz
lcall
decb
add
fmuls
pop
gs
jnp
out
addr16
mov
fnstenv
inc
mov
js
xor
inc
sar
prefetch
or
sahf
divb
mov
dec
xchg
push
lds
fs
in
sbb
push
dec
jp,pn
movsb
sub
pop
fs
add
jl
insl
mov
xor
inc
aas
xor
xchg
and
mov
mov
addr16
push
sbb
std
inc
sti
inc
mov
icebp
pop
in
imul
outsb
fisubl
add
jo
mov
sbb
clc
and
test
dec
and
mov
cli
xchg
jne
mov
inc
pop
rcrl
movsl
cmp
cmp
add
sbb
jp
adc
repnz
out
add
jge
aad
sub
pushf
sarl
jae
dec
mov
xor
pop
test
add
mov
sbbl
xchg
add
dec
ds
mov
adc
mov
mov
mov
sub
push
sarb
into
scas
sbb
cs
jb
push
adc
pop
jmp
mov
push
loop
test
xorl
push
pusha
push
out
fistpll
mov
into
and
mov
fwait
adc
xchg
incl
dec
fnsave
scas
cmpsb
lahf
mov
sti
sub
fildl
call
jne
js
sub
repz
add
adc
repnz
fldt
inc
mov
inc
lret
loopne
mov
lret
loop
loope
lods
stc
jae
in
popf
xor
pop
je
imul
jnp
sti
mov
fs
pop
mov
stc
jo
mov
test
add
hlt
popa
bound
sub
insl
mov
lea
fsubs
stc
sub
addr16
adc
scas
xchg
movsb
pusha
lahf
sti
pop
xchg
and
add
fdivs
int3
ss
pusha
xlat
sub
loop
mov
jl
popf
dec
clc
pop
aad
and
lret
mov
bound
loopne
in
push
enter
into
movsb
xchg
idivl
add
int3
leave
cmp
xchg
mov
testl
jno
xor
inc
leave
pop
in
xchg
fsubl
out
and
xor
call
or
sub
mov
int3
in
or
mov
pushf
push
das
je
sub
pop
ss
cmpsb
stos
jbe
sarl
jae
idivl
mov
scas
mov
arpl
mov
mov
insl
jle
in
adc
sbb
ficomps
inc
insl
jmp
push
mov
lods
inc
dec
pop
icebp
daa
adc
pandn
aam
in
lods
jmp
inc
mov
sub
andl
arpl
dec
sub
add
mov
stos
jle
sub
lock
mov
mov
push
xchg
in
test
xchg
pop
aam
orl
out
les
loopne
mov
push
and
icebp
cli
in
sti
cmc
dec
inc
loopne
out
or
pop
insl
jle
push
mov
mov
loopne
dec
inc
or
mov
and
aad
mov
rolb
xchg
inc
int3
mov
cs
inc
lea
pop
push
dec
sub
push
fdivr
rcr
mov
rcrl
mov
add
sbb
leave
push
sub
popf
mov
sbbl
dec
mov
mov
jecxz,pt
xchg
ja
ffree
adc
data16
mov
pop
inc
popf
in
dec
sub
push
nop
pop
stc
pop
xor
jnp
push
scas
push
adc
lret
push
in
ds
nop
jo
cltd
out
test
bound
loope
xchg
mov
push
nop
lret
sbb
cwtl
or
lret
or
inc
mov
push
push
xchg
gs
pop
lods
inc
repnz
push
sub
leave
ret
flds
ret
xchg
add
sub
cli
jmp
adc
rorl
test
xchg
mov
xor
sbb
push
movsb
inc
mov
push
ss
sub
or
xor
push
mov
or
and
or
mov
adc
pop
sbb
icebp
test
popl
add
add
aaa
rolb
mov
mov
inc
dec
sub
andb
mov
ja
loope
inc
push
xchg
add
ds
dec
inc
sub
xor
pusha
xor
insl
jnp
push
pop
ret
mov
inc
mov
mov
pop
jb
loope
lods
push
leave
sub
adc
inc
data16
gs
andl
add
inc
lock
xchg
repz
mov
addr16
cmp
lahf
xchg
cli
adc
dec
adcb
lahf
pop
xor
xor
insb
pushf
and
iret
jg
fwait
lret
call
xor
jge
les
stc
dec
out
jl
data16
jge
mov
test
daa
repnz
mov
mov
testb
mov
push
in
mov
dec
lret
scas
push
test
ret
mov
test
pop
push
dec
or
outsb
mov
or
mov
out
sbb
mov
mov
add
cld
push
repnz
cld
push
jbe
or
aas
pop
pop
cmp
test
dec
add
js
insb
jecxz
mov
and
or
add
cmc
pop
filds
jmp
xor
iret
push
or
cs
mov
rcll
jl
mov
sub
xchg
lea
cwtl
cmp
add
mov
sahf
cld
adc
mov
cld
movsl
jae
push
sahf
mov
mov
loopne
mov
rolb
data16
lods
xor
push
fsubr
cmp
xchg
out
sub
xor
fs
js
mov
jp
xchg
and
dec
or
push
xchg
cld
sbb
cmc
sbb
pop
roll
pop
pop
scas
test
mov
enter
xchg
mov
std
fs
sbb
xor
out
enter
adc
andb
xor
shrd
push
mov
std
sub
call
fldt
inc
pop
and
jns
and
xor
rorb
xchg
shrl
pop
shll
xor
cwtl
mov
enter
test
jbe
pop
push
jle
addr16
inc
jb
add
add
popa
ret
fistps
dec
cmp
rcr
mov
xor
imul
stc
out
and
test
sub
int3
fimuls
out
pop
int3
lods
aas
cltd
ljmp
mov
inc
mov
scas
mov
out
test
fisttpll
cmpsb
inc
out
mov
sbb
xchg
cmp
scas
pop
push
aaa
mov
aam
mov
cli
fiaddl
mov
rorb
push
cld
add
mov
fcmovb
dec
pop
int3
ret
and
pushf
pop
mov
mov
sub
xchg
and
xchg
sub
dec
lods
rcrl
dec
gs
mov
jnp
or
movsl
mov
jge
adc
xchg
jmp
cmp
and
push
shl
cmpsb
and
inc
setb
jo
xchg
outsb
dec
mov
fs
ljmp
jo
push
mulb
cwtl
cmp
add
loopne
out
or
fiadds
fistps
xchg
scas
fimull
dec
call
dec
test
clc
xchg
and
jnp
sub
popf
pusha
cwtl
adc
xchg
sub
mov
add
popa
dec
std
sbb
lahf
subl
mov
jns
or
mov
aad
xchg
ds
pop
jne
repnz
sbb
lcall
outsb
test
fidivrs
xchg
inc
mov
jns
mov
cmpsl
cmp
in
lds
mov
inc
jl
pop
push
outsl
sub
dec
pop
fwait
sbb
test
ja
stc
add
mov
insb
mov
bound
fs
xlat
notl
or
popa
sbb
inc
add
xchg
mov
pop
std
lock
into
sbb
push
jmp
pop
int
or
push
jecxz
int
daa
dec
adc
clc
pop
sub
jae
mov
add
pop
fidivl
add
jns
scas
lods
adc
rorb
leave
mov
pop
clc
std
mov
add
xchg
sbb
testl
or
ficoml
mov
loop
dec
loop
push
data16
sbb
lahf
sbb
xchg
fsubrl
int3
pop
arpl
jp
fcompl
incb
fwait
mov
pop
aas
js
pop
pusha
call
pop
das
mov
mov
or
cltd
popf
jp
jecxz
ljmp
das
lods
fsubrs
mov
in
mov
pop
int3
jno
nop
adc
pop
out
test
sbb
adc
repz
pop
inc
call
adc
dec
or
xchg
out
in
out
mov
sbb
pop
fdivrl
xlat
mov
sbb
addr16
lods
sbbb
scas
cld
inc
push
adc
fyl2x
mov
lcall
hlt
sub
dec
rorl
movb
ljmp
out
xchg
fwait
add
jmp
movsl
push
xchg
cs
daa
clc
mov
or
inc
sub
xor
shll
dec
pop
es
and
inc
mov
xor
repnz
cli
and
in
pop
push
fs
pop
sub
push
js
and
mov
fsubp
outsb
mov
jno
and
shlw
inc
lods
dec
out
gs
int
mov
cmp
add
adc
rclb
stos
jno
push
out
and
jecxz
cltd
or
negb
sbb
fsubrs
sub
out
cmpsb
push
fsubrl
outsl
aad
out
pop
or
fistpl
xor
fmul
mov
ljmp
cmp
adc
mov
mov
pop
lahf
popf
mov
in
sub
aad
dec
or
push
push
mov
cmp
xor
jl
dec
or
pushaw
fldt
lock
mov
mov
push
das
ds
adc
ljmp
dec
mov
pop
mov
push
add
mov
test
stos
add
pop
xchg
out
leave
pop
and
fsub
arpl
je
xchg
dec
fs
add
xchg
sbb
xchg
dec
xor
add
jne
mov
or
ljmp
or
push
add
dec
add
scas
push
in
ja
or
icebp
pusha
inc
movsl
dec
cmpsb
xchg
xorl
lods
cmpsl
ljmp
ds
mov
add
js
orb
cld
mov
aad
sets
iret
cli
sub
nop
pop
push
add
dec
xor
fstps
and
add
std
mov
lods
cmpsl
pop
pop
fidivrl
insl
aam
shll
xor
adc
jns
leave
movsb
addb
inc
xchg
outsl
adc
inc
testb
mov
daa
imul
insl
test
jnp
sbb
cmpsl
mov
or
mov
neg
sub
cmc
mov
xor
sbb
repnz
adc
fdivl
clc
mov
add
or
stos
mov
sub
push
add
mov
and
mov
adc
in
adc
aad
xchg
iret
jg
lcall
rolb
stos
in
mov
or
sbb
insl
push
jb
addr16
sbb
lds
in
mov
xor
adcl
mov
mov
dec
push
out
lcall
fcmovbe
test
push
lds
xchg
loope
out
xchg
pop
fadd
jo
adc
cmp
cmp
pop
fsubl
jp
jmp
loopne
out
je
xor
cmp
and
sbb
mov
jmp
sbb
jns
pop
sbb
out
xchg
daa
loope
mov
lahf
cmp
cmp
imul
and
aad
mov
mov
inc
aam
xchg
adcl
fcmovnb
sbb
outsb
negb
out
mov
repz
js
or
out
mov
jmp
mov
into
stc
imull
mov
loop
mov
sub
pop
xchg
js
jbe
mov
fnsave
shll
xor
ret
xor
aad
push
and
add
sbb
repnz
ret
push
dec
jg
mov
scas
test
dec
and
mov
sbb
dec
sahf
sysret
imul
adc
and
test
jg
inc
stc
push
jno
xor
xor
popf
in
addr16
mov
repnz
jns
xchg
test
or
and
mov
mov
daa
xchg
mov
fwait
fwait
jno
jmp
push
loopne
ss
xchg
sbb
lds
stos
dec
push
loopne
daa
inc
jb
fsubl
inc
jo
loop
push
inc
popa
push
rcrl
add
test
inc
stos
jo
mov
cmp
pushf
cli
lock
sub
jge
mov
fucomp
and
adcl
in
sbb
xchg
xchg
lds
jns
imul
insb
sbb
mov
lret
push
sbb
mov
add
mov
and
sub
jb
dec
push
jl
jno
mov
or
outsb
pop
jp
cltd
insl
xor
mov
leave
call
inc
shlb
mov
leave
and
out
adc
dec
cmp
pop
cmpsb
mov
stc
inc
fwait
mov
divb
or
mov
les
imul
pop
daa
and
sbb
lods
repz
ret
xchg
cwtl
push
loop
out
sbb
push
sbb
fldlg2
inc
dec
test
daa
orl
mov
fwait
ljmp
jne
adc
push
xor
pop
enter
loope
out
pop
icebp
aad
aam
mov
adc
movsl
dec
mov
ret
into
jbe
mov
fcmovu
pop
in
outsb
dec
sub
dec
inc
ret
fs
mov
xor
mov
lret
popa
leave
fbld
lods
sub
sbb
sahf
xchg
xor
mov
les
sub
xor
inc
test
loopne
not
cmp
aad
dec
dec
outsb
popa
test
aas
mov
repnz
sbb
push
xlat
mov
loopne
and
mov
xchg
mov
xorl
cmp
lea
adc
in
ss
xchg
mov
xor
xchg
xchg
rclb
out
fcmove
jle
iret
movsb
jp
adc
or
add
mov
pop
nop
popf
or
shlb
in
add
nop
inc
aad
and
pop
adc
leave
fnstcw
jne
dec
pushf
in
adc
jo
es
test
repnz
inc
and
pop
stc
in
adc
xchg
out
std
in
jp
or
pop
int
push
push
and
lock
pop
push
repz
fsubr
xor
sti
adc
mov
int
wrmsr
mov
pop
adc
ss
dec
xor
mov
leave
mov
or
lcall
push
test
dec
sbb
mov
jg
pushf
sti
dec
fwait
test
jmp
and
add
loopne
cmp
adc
inc
inc
push
cmp
iret
add
adc
sti
inc
int3
stc
or
xor
xor
daa
hlt
mov
movsb
or
sub
push
mov
orb
mov
jo
es
gs
or
push
lods
ret
fsubrs
jecxz
sahf
stc
sub
jle
scas
fwait
lret
gs
jo
mov
in
int
arpl
movb
clc
cmp
xchg
lret
xchg
pop
sub
cmp
in
adc
mov
pop
mov
xchg
xchg
jbe
loopne
and
push
nop
xchg
jp
int3
out
xor
sarl
cmp
xchg
adc
xchg
cmc
in
popf
push
mov
out
mov
push
mov
jmp
notl
fsubp
mov
ja
dec
push
xchg
jecxz
mul
movsb
gs
out
hlt
sub
in
pop
cltd
icebp
inc
ret
sbb
std
xor
aas
mov
pop
adc
mov
and
pushf
insb
leave
dec
cmp
sbb
fs
cltd
adc
mov
les
push
pop
int3
dec
clc
mov
jno
cmc
dec
in
xchg
cmp
lds
cwtl
adc
mov
sub
mov
lcall
add
test
push
nop
lods
test
mov
pop
xchg
loope
jp
pushf
std
sbb
mov
sbb
adc
or
xchg
pop
xchg
jne
divl
sub
popa
in
jbe
inc
mov
inc
jb
pop
cmc
testb
dec
ffreep
andl
arpl
loop
xchg
adc
dec
daa
xchg
scas
cli
mov
adcb
mov
push
cmpsb
aaa
lea
adc
jmp
fbld
pop
push
cmp
mov
and
and
repnz
pop
pop
popf
sti
mov
fiaddl
add
and
loop
pop
cmpsb
add
xchg
cmpsl
xor
or
iret
rorl
pop
loope
mov
les
sbb
mov
nop
mov
lret
ja
xor
mov
lds
adc
xchg
mov
xchg
pop
sbb
cmp
or
repz
dec
mov
fsubs
arpl
dec
cmp
dec
cwtl
mov
or
test
sbb
xchg
int3
popa
pop
imul
fidivrs
cmpsb
mov
pop
leave
lods
lods
and
pop
lods
add
and
mov
mov
jno
call
rcl
out
call
add
loope
pop
dec
inc
cmpb
and
int3
push
xor
sbbb
pop
ja
cmpsb
mov
scas
in
dec
in
push
sub
fdivrs
je
ljmp
sub
fimuls
out
inc
cmp
addr16
mov
pop
cld
adc
out
popf
pusha
xor
and
mov
aaa
add
or
push
sub
lret
add
xor
adc
add
adc
jns
jle
popf
imul
jmp
mov
loope
ds
sbbb
imul
or
sub
es
jg
lret
push
pushf
add
xchg
aas
mov
or
jle
int
sahf
or
or
cmp
js
pop
inc
in
mov
imul
cmpsl
jo
mov
mov
call
pusha
pop
into
arpl
jnp
pop
lcall
jmp
ds
push
pop
popf
jmp
scas
jb
jp
pop
hlt
add
fadds
or
mov
in
pusha
in
mov
clc
int3
add
arpl
inc
dec
sub
lods
rcrl
jb
sub
push
adc
jmp
hlt
sahf
adc
sahf
aam
push
lods
jno
cmpsb
jno
fidivs
dec
mov
loope
iret
lahf
nop
xchg
and
push
idivb
push
cli
or
sbb
mov
cmp
mov
xor
lret
enter
out
xor
out
leave
mov
jb
cmp
xchg
and
aad
push
mov
sahf
pop
mov
inc
and
cli
mov
imul
sbb
add
cmc
lods
jbe
pop
nop
inc
xchg
stc
inc
or
mov
xchg
sub
data16
cmp
ljmp
xchg
icebp
fisttps
push
add
mov
xor
lcall
add
dec
sub
cmpsb
xor
pop
int
jne
jmp
shl
mov
insb
outsl
dec
cmp
push
sub
cld
mov
lods
ljmp
mov
dec
pusha
pusha
xchg
jge
mov
mov
mov
inc
and
aas
int
xor
jl
mov
dec
mov
ror
shll
bound
les
ret
and
aaa
dec
xchg
mov
mov
add
les
inc
lret
aas
cwtl
sbb
xchg
lret
roll
dec
mov
lds
movq
lcall
or
icebp
ljmp
inc
icebp
sbb
xor
sti
insb
mov
cltd
lock
jbe
pop
sbb
cmp
mov
push
fldcw
xchg
or
mov
mov
fists
popa
sbb
xor
stos
jle
loop
dec
pop
lret
sbb
inc
add
mov
insl
cs
pop
xor
cmp
xchg
data16
mov
out
sbb
and
aam
or
ret
in
pop
imul
iret
mov
lea
lret
mov
test
inc
ret
and
cmp
popa
in
outsb
mov
or
in
insl
repz
icebp
mov
cmpsl
cmp
jnp
cltd
stc
push
push
test
aad
loopne
push
or
sbb
ja
gs
mov
jne
jmp
add
sbb
dec
fisubrs
lods
xlat
in
lcall
leave
xor
adc
add
or
pop
movsl
aas
imul
and
ret
push
test
ficoml
mov
shrl
fsubr
pusha
xchg
repz
in
cmp
lret
adc
pop
mov
pop
lods
mov
cli
push
jne
mov
xchg
cmc
and
popa
mov
scas
cltd
pop
call
outsb
sub
sbb
adc
aam
subb
push
cmc
ljmp
test
dec
adc
sub
cltd
jo
imul
pop
sbb
dec
inc
mov
inc
inc
test
enter
mov
lds
xchg
out
js
push
nop
lcall
fisttpl
rcll
and
jbe
add
mov
sbb
jle
loop
mov
pop
das
cmpsl
inc
push
cmp
fsubs
bound
jno
pusha
insl
mov
movsl
adcl
mov
adc
ret
adc
dec
push
jnp
ds
jl
push
les
movsb
jge
pop
test
movsl
orl
jmp
push
add
into
cmc
addr16
xchg
or
scas
stos
cmc
push
sbb
int3
cmpsb
mov
fmul
cmp
dec
push
xchg
lods
push
movsb
sub
pusha
pop
mov
rolb
cmpl
sub
shll
movsl
sbb
add
pop
mov
cmpsb
inc
inc
mov
pop
fdivl
fcoml
int
adc
stos
out
shll
jp
paddd
insl
sub
test
inc
mov
lret
cmp
jo
lea
push
outsb
mov
mov
pop
dec
das
adc
mov
lods
jns
jl
push
scas
fnstsw
sub
mov
or
enter
aaa
int3
mov
dec
in
xor
scas
imul
dec
pushf
cli
insl
inc
andb
aam
pop
xor
in
es
cmc
fcomip
mov
dec
in
pop
xlat
sbb
and
stc
out
or
mov
xchg
stc
cltd
sbb
xor
dec
cmp
mov
inc
inc
push
jp
loope
dec
mov
jmp
fwait
gs
pushf
mov
mov
push
inc
rcrb
xor
mov
adc
stos
imul
push
adc
aas
jge
xchg
std
jg
xchg
mov
dec
dec
or
ljmp
sbb
into
aas
iret
mov
shl
dec
sub
jbe
jle,pn
rcll
mov
xor
lea
das
sub
inc
xor
notl
loopne
pop
fcoml
orb
in
mov
mov
aad
pusha
push
dec
adc
cld
pop
sbb
pop
testl
push
sub
aam
stos
pop
sbb
ds
jne
imul
sbb
test
ficoms
jl
clc
mov
out
pop
mov
cmpsl
mov
rcl
popa
mov
sbb
push
bound
add
xor
dec
jnp
dec
xor
lcall
sbb
sbb
sub
sbbb
xor
out
into
and
testl
insb
pop
scas
mov
or
imul
popl
xor
xor
xchg
fnstenv
je
jle
subl
jl
cmp
jb
in
push
cmp
add
dec
mov
movsb
insb
xchg
leave
cmpb
stc
sar
andb
jecxz
mov
push
ds
js
xor
mov
and
pop
imul
xchg
ljmp
testl
test
mov
mov
cltd
sub
inc
pop
dec
inc
or
and
paddd
pop
jae
or
pop
push
test
filds
call
push
adc
pop
mov
cmpb
icebp
push
movsb
cld
sub
xchg
sub
popa
fcmovnu
add
fistps
arpl
ret
push
dec
and
add
shll
jns
loop
mov
xchg
pop
mov
mulb
scas
andl
and
cmp
rclb
cmp
lcall
test
mov
and
mov
test
scas
fsubr
sub
mov
rcl
int
jnp
sbb
stos
mov
je
push
adc
sub
push
pusha
fwait
gs
pop
and
stos
mov
dec
jp
xor
cltd
push
cmp
pop
push
inc
push
mull
xchg
or
outsb
mov
inc
out
sarb
push
jno
jl
or
andb
sub
icebp
mov
pop
adc
loope
inc
sub
lods
xchg
call
xchg
fisttpll
mov
mov
jo
stos
add
mov
mov
jne
decb
test
add
and
nop
inc
stos
sbb
inc
call
ds
pushf
jo
mov
lea
jp
xor
mov
jge
fildll
cmc
imull
adc
push
leave
sbb
sahf
rcl
cmp
jns
popf
pop
pop
mov
mov
icebp
cmp
shrd
leave
pusha
mov
mov
rclb
cli
call
into
and
inc
jp
jp
xchg
insl
jle
aam
nop
ret
push
jg
insl
mov
lock
jl
popf
subps
or
ret
push
cmpsl
inc
pusha
test
push
inc
mov
int3
or
mov
in
mov
mov
and
add
push
movsb
push
aad
add
sbb
and
xchg
xchg
adc
mov
jb
mov
inc
inc
int
sbb
push
jp
mov
xchg
scas
sub
lock
jge
push
push
cmp
inc
mov
in
outsl
repz
outsb
dec
cmpb
cmpsb
dec
xchg
sub
seta
xchg
int3
mov
adc
cvttps2pi
mov
bound
sub
stos
or
in
mov
inc
scas
pop
stos
popw
icebp
mov
mov
cmc
std
popa
and
ror
addr16
add
mov
push
sub
push
shll
cmp
lods
inc
loop
inc
outsl
fs
mov
xchg
filds
add
and
rolb
arpl
or
sub
shlb
or
test
jae
leave
or
push
cli
scas
push
mov
pop
ss
bound
in
roll
in
jge
cmpb
daa
cmpsl
add
push
imul
stos
xchg
sahf
or
ja
adc
or
lods
popa
jl
dec
shrl
in
sub
or
xchg
in
push
xchg
in
fisubrs
or
lahf
cli
lds
mov
xor
pop
pop
jno
scas
arpl
cld
add
sbb
lods
test
sbb
pop
nop
jbe
sbb
repz
hlt
fmull
push
popf
xor
adc
fidivrl
adc
lcall
inc
jp
xchg
mov
movsb
push
xor
xor
mov
xlat
sub
roll
inc
xchg
xchg
jp
or
xor
shlb
jge
xchg
fs
inc
mov
daa
push
pushf
add
cld
adc
jbe
cmpsb
hlt
lahf
dec
cli
add
xchg
dec
sub
adc
sub
clc
into
imul
lock
roll
push
push
mov
jb
jne
and
sub
add
aad
sub
push
jmp
add
xlat
fcmove
repnz
fnsave
add
test
push
sub
and
enter
jno
xlat
sub
mov
mov
mov
fidivrl
ljmp
mull
xlat
sub
or
pop
clc
pop
and
jg
xchg
lods
xchg
mov
lret
and
jno
loop
pop
mov
leave
mov
cmp
arpl
mov
daa
and
inc
leave
repnz
xor
lahf
xchg
mov
sbb
fcoms
into
inc
xchg
pop
dec
cltd
sbb
jno
push
enter
push
pop
dec
test
mov
test
push
in
sbb
mov
ret
and
dec
or
or
sub
lret
mov
push
mov
leave
clc
movsl
lret
fs
mov
test
pusha
cmp
push
and
mov
and
ret
out
pop
sar
andl
lret
iret
cmp
add
mov
mov
mov
cld
xor
mov
sahf
lea
sarl
jmp
lds
and
idiv
fcom
das
jns
cmp
rorl
xor
int
sbb
arpl
lret
ret
inc
mov
inc
or
fwait
adc
xchg
or
cmp
scas
xor
aaa
xor
xor
lods
push
add
scas
mov
cltd
push
mov
sub
mov
insl
push
mov
push
add
fnstsw
xor
sub
imul
push
lea
jno
in
pusha
push
mov
pusha
fwait
cld
aad
nop
scas
ljmp
nop
push
cmp
inc
and
mov
inc
or
xor
repz
jae
mov
sbb
inc
xchg
push
mov
mulb
out
mov
pop
adc
aad
faddl
xor
jge
es
dec
cmpl
lcall
mov
nop
out
push
xchg
js
mov
jecxz
add
pop
gs
in
subl
out
nop
dec
inc
push
xchg
add
sub
push
insl
out
lds
jae
pop
in
mov
jecxz
in
fsubs
lods
enter
dec
cmp
jae
rolb
arpl
mov
aaa
movsl
fcmovnu
ret
imul
movsb
mov
jle
or
test
push
inc
outsb
stc
jns
test
adc
or
sbbb
mov
sub
inc
test
in
lret
jae
add
adc
es
aaa
jecxz
out
fsub
pusha
jmp
push
sub
in
mov
push
into
repnz
das
xchg
or
sbb
adc
mov
ja
pushf
sub
pusha
std
dec
out
loop
push
push
and
popf
add
dec
xchg
jo
loop
sbb
mov
jmp
les
movsb
clc
and
xor
push
mov
mov
lea
sbb
cmp
fisttpll
dec
andl
enter
subl
and
inc
ds
int3
arpl
hlt
mov
dec
pop
imul
cmp
sti
mov
mov
push
das
mov
sti
adc
jae
cs
fistpll
jle
mov
jecxz,pt
testb
hlt
cmp
into
movaps
gs
jne
cmpsb
pop
push
xchg
fnstenv
add
mov
loope
push
push
sbb
mov
mov
mov
xchg
clc
and
pop
xchg
xchg
in
cmp
dec
inc
pop
mov
lret
outsb
or
mov
or
cmp
mov
dec
cltd
pushf
push
popa
sbb
imul
pushf
mov
call
test
jle
ficomps
stc
scas
ljmp
dec
in
fyl2xp1
test
fmulp
add
push
fcmovnu
leave
ret
sahf
mov
xor
xchg
dec
sub
jb
jno
sahf
xor
shlb
stos
sub
in
mov
push
mov
lret
pop
rorl
rcrl
ljmp
enter
in
push
sub
loop
pop
unpckhps
out
es
clc
inc
pop
mov
and
cmp
data16
insl
rolb
xor
enter
lcall
cmp
mov
xchg
sbbl
mov
push
jne
xchg
pop
xchg
ret
xchg
or
outsl
rclb
xorl
adc
pop
sbb
jge
or
gs
dec
dec
mov
bound
mov
pop
inc
xor
pop
dec
popa
repz
orl
das
jp
or
add
sbb
dec
in
xor
cmp
pop
sbb
xchg
xor
into
or
dec
in
dec
xchg
pop
shll
out
pop
mov
adc
out
dec
jmp
add
push
xchg
fs
cs
not
in
mov
sbb
sbb
rcrl
dec
sbb
outsb
imul
adc
fidivs
add
aad
cmp
cld
jg
push
add
xlat
pop
jg
adc
xor
add
cmp
sub
cli
xchg
and
mov
ljmp
aad
mov
pop
and
addr16
inc
outsb
mov
sub
in
push
add
scas
fldcw
lods
cmpsb
mov
push
shlb
popf
add
mov
fdecstp
gs
adc
xchg
testb
std
xor
sbb
lds
aas
push
xchg
in
ror
bound
int3
or
push
stos
outsb
dec
dec
lahf
int
mov
shll
mov
into
add
lea
test
and
dec
push
fistpl
lea
push
js
sub
out
xchg
add
mov
enter
push
test
lcall
in
dec
and
popl
scas
push
xor
lcall
ss
scas
add
inc
or
aam
adc
jb
test
mov
addr16
cli
dec
and
ret
inc
lds
inc
in
sub
jbe
pop
loope
xlat
loope
popa
icebp
daa
dec
pop
aam
ljmp
fbstp
jmp
sub
lods
test
pop
aam
mov
loop
data16
mov
aam
test
outsl
scas
in
test
sbb
cltd
mov
cwtl
aam
ror
or
add
jecxz
sub
pop
test
sub
loopne
testb
mov
pop
jae
adc
sti
mov
and
cmp
mov
andb
fimull
cmp
loopne
and
popa
lret
es
mov
adc
cmp
jne
cmp
jecxz
ja
inc
or
adc
inc
hlt
fwait
loope
xchg
sub
add
push
adc
mov
xor
outsb
mov
loope
or
and
outsl
jnp
fsub
dec
stc
paddsw
sbb
or
cwtl
pushf
mov
arpl
mov
es
aas
mov
inc
sub
push
fidivrl
xchg
mov
mov
mov
push
xor
in
xor
mov
mov
jp
iret
in
in
int
lods
jae
adc
mov
pop
out
push
outsb
test
pop
popf
or
cld
lods
fadds
sub
shrl
shl
sbb
push
cld
popf
dec
cs
lcall
xchg
addl
mov
xor
jne
sub
int
or
dec
or
mov
popf
pop
movsb
notl
or
mov
pop
mov
xchg
cmp
inc
mov
ss
hlt
pop
cmpsl
fcmovbe
lcall
cmp
shlb
fwait
sub
sub
jle
cld
dec
dec
jl
into
pop
aam
ds
stos
outsb
inc
or
inc
pop
xchg
sahf
push
or
repnz
sahf
or
in
lea
push
imul
sub
imul
in
shl
sarl
xchg
push
sahf
add
out
push
jno
xchg
or
mov
pop
sti
mov
adc
pop
scas
inc
pop
out
sahf
pop
xor
lcall
mov
dec
insb
add
inc
clc
outsl
jecxz
shlw
or
into
adc
scas
out
dec
fwait
or
pop
dec
sbb
shlb
pop
sub
andnps
imul
add
scas
jbe
xor
xor
enter
push
sbb
shl
dec
jmp
cmp
xchg
les
cmc
add
je
pop
aas
xchg
cmpsb
test
mov
stos
ficompl
outsb
repz
dec
rcll
or
mov
dec
xor
sbb
cmc
jl
fistpl
dec
dec
cmp
sub
stos
and
or
mov
into
lret
cmpsb
xor
out
xchg
cltd
adc
or
data16
repz
and
xchg
lahf
das
aad
mov
add
lods
jno
adc
cmp
idivb
iret
mov
xor
mov
mov
pop
pusha
sbb
ds
mov
or
xchg
lds
mov
mov
cwtl
lds
daa
mov
dec
inc
sub
ja
pop
jmp
jl
and
daa
pop
xchg
out
repnz
xor
xlat
fimull
or
pop
xor
mov
mov
xor
aad
sub
xor
cmc
fcomip
mov
lock
inc
push
pshufw
ret
push
jp
mov
in
pop
push
xchg
cli
into
fs
fcomip
enter
cld
aas
into
mov
and
cmp
mov
pop
leave
adc
in
test
inc
rcll
call
mov
ljmp
ret
dec
movsl
andl
mov
xor
sub
pop
lods
lcall
cmp
push
dec
popa
lods
ljmp
pop
subl
ds
movsl
out
or
test
lcall
mov
jae
repnz
test
mov
daa
cmp
jle
dec
push
pop
fcomps
or
pop
sub
dec
sub
aad
pusha
ret
inc
jge
test
int
jno
fbstp
pushf
sbb
out
lret
jnp
stos
mov
clc
sub
cmp
pop
loop
cmc
lea
xor
test
dec
xor
mov
les
ljmp
inc
test
mov
or
mov
sbb
hlt
clc
or
repnz
jge
loope
mov
cwtl
dec
lds
push
push
in
outsb
mov
test
ljmp
sbb
xlat
inc
adc
push
orb
pusha
in
sti
pusha
push
sbb
sbb
cmp
xchg
adc
mov
stos
and
mov
stos
in
adc
mov
xchg
push
int3
and
sub
cmpsb
cmpsb
xchg
fwait
ret
or
mov
xchg
shrb
test
fnstcw
pop
mov
into
test
sahf
icebp
and
aas
adc
test
xchg
cltd
std
or
loop
add
lock
mov
les
cwtl
adc
mov
pop
jb
mov
cmp
std
or
nop
or
loopne
xor
sbb
mov
and
les
xchg
decl
pop
rcll
dec
das
push
xchg
dec
lods
xchg
in
lret
imul
sub
mov
push
cmpsb
lret
push
arpl
out
inc
add
sbb
mov
mov
push
rcl
sbb
xor
les
ljmp
adcb
dec
add
cmp
enter
adc
inc
imul
jb
pop
xchg
dec
mov
sbb
mov
or
fwait
cmp
lods
ret
or
jg
inc
mov
ret
adc
pushl
into
mov
lcall
clc
pop
bound
dec
pop
fildll
sarl
sbb
hlt
cli
das
pop
das
push
jecxz
pop
xchg
fs
jmp
cmpsb
cmpsb
mov
data16
andb
sub
mov
mov
inc
jle
into
xchg
jecxz
int3
or
out
or
mov
inc
loopne
test
dec
push
or
adc
push
fwait
loopne
dec
scas
mov
inc
jne
fsubl
mov
ds
inc
cli
insl
push
jl
inc
divl
lcall
les
ret
inc
int3
fwait
xor
xchg
mov
fcomip
lea
iret
push
ret
mov
jno
fcmovnb
repz
orl
xchg
xchg
cld
adc
adc
mov
out
xor
xor
jns
jecxz
out
filds
fld
ret
loop
lcall
scas
mov
std
push
scas
push
mov
sarl
lcall
imul
or
pop
insb
pop
or
sbb
dec
pop
test
mov
test
sbb
pop
push
ret
pop
mov
movsb
imulb
jns
outsl
jl
hlt
pop
neg
sbb
add
pop
push
addr16
daa
sbb
aad
adc
xchg
dec
and
movsl
fs
lret
add
jmp
stc
or
or
cmpsl
movsb
mov
mov
dec
lea
add
aaa
mov
leave
and
lods
xchg
les
out
push
stc
aaa
sub
lret
fwait
aas
push
push
adc
stos
push
inc
xor
lock
leave
xchg
insl
push
aaa
jno
faddl
outsb
scas
sbbl
dec
xchg
nop
lea
jle
hlt
jmp
js
fimuls
add
xor
lcall
jno
xor
scas
ja
je
push
mov
repz
cltd
push
nop
sub
mov
cmp
push
cs
pop
mov
pop
push
call
xchg
inc
mov
imul
btcl
outsl
or
xchg
inc
fnstenv
push
mov
stos
test
ret
cs
mov
in
cli
hlt
push
cmp
sub
scas
in
mov
ficoms
shl
dec
cltd
xchg
sub
popf
lret
sub
mov
sub
pop
into
in
xchg
loope
xor
and
push
or
int
jb
xchg
push
gs
fstpt
fcmovb
fsts
push
add
xor
sarl
iret
iret
xchg
scas
sbb
arpl
popa
push
sbbb
push
push
test
adc
xchg
rolb
imulb
ret
ffreep
push
mov
pop
xchg
push
aad
insl
push
mov
and
scas
sub
xchg
inc
cmp
jle
push
xchg
loopne
ss
add
and
pop
cmp
loop
mov
sbb
dec
call
test
xchg
xor
xor
or
out
pop
daa
ja
lds
push
push
leave
out
cmc
cwtl
sbb
es
jo
mov
or
iret
or
ret
ljmp
dec
in
push
sti
daa
ficompl
ss
push
mov
jne
ljmp
fmulp
jbe
cmpsb
scas
dec
orl
jae
rcll
or
cmp
rclb
je
pop
imul
sarb
mov
mov
ss
and
add
push
out
lahf
mov
sbb
xchg
cmpsl
rorl
xchg
rcrl
fisubrs
mov
xchg
mov
mov
cmp
imul
icebp
dec
lods
in
mov
jecxz
cmp
cwtl
insb
lods
mov
sub
dec
stos
loopne
add
ds
sub
add
pop
fldt
out
xor
xchg
mov
mov
inc
mov
divb
xchg
mov
stos
jae
aad
cmp
rorl
repnz
sbbl
adc
out
popf
popa
fstpt
inc
mov
and
in
loopne
inc
test
sbb
imul
shrb
pushf
stos
xchg
repz
imul
and
xchg
je
fdivs
add
into
nop
shlb
repz
adc
ds
dec
out
jecxz
test
lret
enter
rcrb
pop
cmp
push
ret
fnstenv
ret
test
or
bound
push
jmp
and
jg
fnstcw
fadd
enter
ret
pop
push
xchg
and
fbstp
scas
hlt
inc
push
mov
mov
jp
mov
sub
mov
or
push
mov
stc
xchg
rol
mov
adcb
jl
lret
iret
lahf
fwait
xchg
sahf
mov
mov
fcomp
adc
add
movsl
xchg
test
fiaddl
lcall
popa
jno
xor
dec
mov
pop
rorl
test
adc
and
mov
int
jbe
push
mov
push
hlt
enter
or
push
jg
sub
aad
mov
test
lds
pop
and
add
mov
cmp
inc
hlt
push
sub
mov
push
out
sahf
push
push
jne
ljmp
mov
loopne
ljmp
or
cmpsb
dec
sbb
add
sub
fbld
jae
mov
gs
inc
mov
stos
lcall
dec
mov
cltd
fwait
push
xchg
lea
push
sbb
pushf
sbb
ret
push
add
mov
jmp
or
idiv
or
sti
dec
mov
shll
adc
pop
and
popf
push
aaa
push
or
jae
dec
xchg
inc
fldl
cld
lret
nop
loopne
xchg
inc
jae
xor
or
pop
fsubrl
js
lcall
mov
out
loopne
je
jle
xchg
shr
inc
aad
push
mov
mov
mov
jne
pop
stos
in
pop
gs
ss
push
dec
iret
sub
sbb
jns
xorb
cltd
pop
push
je
cmpsl
jmp
jl
mov
stc
xchg
dec
and
xor
sub
sbb
jo
mov
adc
shll
inc
push
popa
aad
repnz
imul
int3
sub
mov
repz
and
fs
pop
lret
cld
pop
fisubrl
ljmp
adc
push
cmp
sbb
scas
sti
sbb
lds
and
xchg
jnp
push
xchg
mov
cmp
mov
jmp
js
adc
je
mov
ret
dec
xchg
iret
mov
in
in
push
sahf
xlat
push
movsb
adcl
xor
scas
cmpl
jne
aad
add
pusha
leave
adc
std
in
pop
lahf
pop
scas
jnp
mov
dec
xchg
subb
mov
cmp
push
ja
cmpsb
xor
push
stc
fstl
mov
inc
sub
mov
rclb
test
or
fistpll
mov
inc
jecxz
int3
dec
pop
sahf
mov
add
sarb
push
in
lds
adc
inc
sbbl
in
nop
and
jecxz
ds
cmpsl
int
xchg
jbe
push
mov
sub
scas
pop
cld
aaa
jbe
fidivrl
lahf
jecxz
stos
ret
cmc
jae
cmp
arpl
rcr
sbb
lahf
stos
jb
pop
mov
sbb
mov
les
or
clc
xchg
push
cmp
sbb
dec
sti
ljmp
mov
xchg
add
cmp
jl
mov
sbb
jecxz
sbb
xchg
popa
or
cmp
xchg
mov
shlb
mov
cmc
cmpsb
mov
dec
push
popf
loopne
cld
pop
pop
sbb
rclb
imul
pop
pop
lods
or
pop
mov
imulb
popf
mov
or
cmp
xor
and
pop
mov
bound
cmp
fimuls
push
daa
scas
xchg
lret
ret
xchg
out
and
lock
mov
dec
stos
ret
sahf
ret
mov
and
sub
das
push
sbb
push
sar
lds
pop
pop
xchg
imul
cs
movsl
xchg
std
and
repz
and
popf
scas
cwtl
mov
xchg
add
or
loop
addr16
dec
sub
xchg
ret
xlat
jns
mov
dec
pusha
sbb
popa
or
or
aad
jmp
repz
shrl
rcr
in
add
jnp
push
call
xchg
imul
push
adc
jnp
ret
test
lret
sbb
pushf
fmull
mov
insb
cmp
out
mov
pop
lret
and
popf
mov
pop
lret
std
xchg
div
mov
xchg
cmp
outsl
sbb
bound
mov
dec
inc
adc
jno
cmp
mov
ljmp
pusha
sti
stos
imul
adc
lcall
mov
loopne
lret
ret
dec
or
sbb
into
es
test
std
fildll
insl
lock
out
pop
std
lds
mov
cltd
insl
comisd
mov
addr16
insb
mov
jo
test
ja
scas
xor
fidivs
xor
mov
cwtl
lret
in
ret
pop
fwait
adc
sahf
xchg
push
xchg
jmp
fisubs
mov
push
mov
xchg
xor
stos
testb
je
iret
cmp
fistps
sub
xchg
mov
xchg
insb
je
add
mov
dec
mov
jb
test
out
or
xchg
addl
popa
mul
sbb
xor
loop
addb
add
cmpb
sti
ja
ficompl
push
movsb
repz
mov
push
adc
stc
xor
mov
dec
push
ljmp
xor
imul
out
mov
imul
fdivrs
out
int
push
jge
ret
add
mov
xchg
jp
imul
cmpsb
repz
adcb
loopne
push
bound
std
in
lods
mov
call
xchg
sub
push
dec
fiaddl
fsubrl
xchg
stos
xor
adc
sbb
push
sahf
iret
mov
mov
sub
fildll
rcrb
xor
sub
rorl
loop
outsl
jg
stos
xor
pushf
mov
outsl
mov
addr16
clc
ljmp
xorl
out
xchg
aaa
std
mov
test
and
mov
rcrl
inc
xor
pop
add
gs
add
fistpl
fs
pop
add
iret
mov
dec
add
subb
idivb
mov
pushf
push
lahf
inc
dec
pop
xor
mov
cmp
addr16
mov
mov
je
jecxz
cmp
scas
pop
loopne
xor
inc
sbb
in
movsb
iret
sbb
and
daa
push
cld
lret
pop
popf
pop
dec
sar
imul
cltd
lods
pop
cmp
xchg
xor
mov
pusha
fildl
adc
inc
pop
add
dec
sbb
adc
adc
test
mov
repz
push
in
std
out
mov
andl
es
xor
mov
push
test
sbb
add
lods
pushf
data16
and
push
lods
xchg
ja
xchg
stos
add
jns
xchg
fwait
sbb
shrl
movsb
shrb
ss
xchg
fs
cmp
divb
sub
popa
xchg
pop
mov
rolb
iret
aam
mov
jne
in
clc
clc
dec
mov
pop
loopne
dec
jb
inc
jp
mov
or
jns
loope
cmp
outsb
out
mov
xchg
pop
arpl
push
in
inc
hlt
xchg
or
aas
into
push
mov
fdivrs
jns
std
outsb
mov
cmc
dec
scas
pop
cwtl
xor
into
and
idivb
add
in
jb
sbb
jge
roll
scas
vmread
and
push
pop
or
lock
jae
mov
fdivl
dec
push
and
push
ss
mov
sti
lcall
fbld
push
lcall
xor
popa
xchg
fwait
sub
std
dec
cmpsl
clc
dec
and
sub
xorb
mov
dec
out
popf
cmp
jecxz
jle
push
dec
inc
mov
repnz
cmpsl
inc
sbb
dec
cmp
mov
cld
add
insb
cmp
xlat
mov
dec
or
ds
icebp
jg
xor
aad
jle
or
and
mov
mov
cmp
jecxz
in
cld
enter
int
ret
fucomip
mov
repz
xlat
into
outsl
fwait
cmpsb
mov
cmp
dec
pop
mov
sub
fcoms
sub
add
xor
das
xchg
loopne
fists
clts
pop
lds
test
iret
sbb
mov
stos
cwtl
ds
fcoms
jbe
sub
fidivl
inc
sbb
shr
orb
jmp
cmpl
push
enter
iret
stc
jno
pop
pop
xchg
mull
insb
push
lret
push
inc
mov
sub
jae
fs
popf
mov
stos
imul
lret
fsubs
clc
fcomps
ja
cld
xor
add
out
in
js
ljmp
gs
mov
fs
rol
shlb
je
in
pop
les
dec
in
rorb
enter
sti
push
push
xor
cmp
xor
sbb
xor
inc
dec
inc
jns
mov
fsubrl
das
sbb
and
pop
mov
fsubrs
cmpsb
adc
test
cwtl
xor
or
pop
dec
sti
push
jecxz
mov
and
add
push
rolb
xor
cmp
inc
pop
or
inc
dec
sub
xchg
cmp
enter
cwtl
xlat
sub
in
insb
pop
or
js
dec
inc
enter
mov
and
or
faddl
mov
add
inc
adc
push
inc
fistpll
push
inc
adc
dec
xchg
fsub
pop
ja
push
sbb
xchg
jge
mov
loopne
cmp
inc
jne
out
xor
into
sbb
lret
out
movsl
cmp
jb
loopne
lahf
arpl
add
jbe
dec
add
movb
sub
sahf
push
pop
xor
scas
roll
xor
insb
stos
push
rolb
sub
cli
test
adc
pusha
mov
cmp
push
cmp
adc
jge
or
lods
mov
or
rcrl
insl
shlb
repz
mov
or
loopne
or
lea
loop
xlat
cmp
sub
imul
in
int
adc
and
cli
lret
insl
mov
push
aam
xchg
jmp
xor
andl
arpl
cmp
imul
or
aam
cmc
xlat
pop
xor
jne
sub
xchg
and
stc
push
cmp
sbb
sub
aas
mov
xor
mov
mov
rclb
or
inc
and
and
mov
push
jne
lods
xchg
add
addr16
push
je
or
push
mov
inc
cmp
adc
je
movb
mov
roll
push
icebp
cmpsb
negl
mov
nop
ja
leave
jne
shll
sarl
push
hlt
les
ja
push
pop
imul
das
cld
cs
repz
push
lea
pop
jne
jo
nop
adc
adc
into
ret
cmp
push
pop
dec
pop
imul
adc
mov
cmp
out
mov
popf
inc
push
movsl
lods
outsl
rcll
mov
into
adc
int
imul
lahf
xchg
movsl
mov
inc
cmp
hlt
fcmovnbe
pop
xor
imul
fcomps
stos
in
mov
push
jmp
dec
stos
jle
dec
dec
out
xchg
stc
mov
fdivs
jp
shufps
inc
sub
mov
xchg
ficomps
push
mov
fs
fxch
das
into
sbb
imul
push
popf
movsb
inc
call
xchg
inc
inc
mov
mov
arpl
aam
xchg
outsb
push
mov
sbbl
mov
lock
xchg
in
in
dec
int
xor
xor
pushf
dec
popa
outsl
stc
xor
in
mov
add
stos
fsubrl
push
push
sub
xchg
adc
repz
push
mov
mov
sbb
in
loopne
pop
mov
imul
test
lahf
mov
sbb
adc
sub
adc
sbbb
stos
scas
repnz
cmp
jno,pn
les
push
jne
movsw
sbb
mov
cmpsl
mov
into
rcrb
outsb
push
dec
fdivs
dec
sbb
out
arpl
lret
js
mov
pop
stos
hlt
cmp
sub
lods
iret
ja
dec
mov
mov
inc
mov
nop
add
stos
into
and
nop
cwtl
mov
push
popf
outsb
daa
jl
pop
jns
imul
in
rcrb
lahf
adc
loope
adcl
xor
and
fistpll
adc
and
sbbl
adc
jnp
loopne
aam
bndstx
xchg
jb
sub
xor
mov
repz
add
sbb
sub
leave
fcoml
inc
cld
add
mov
dec
jb
push
scas
imul
mov
or
fistl
push
rcl
daa
adc
shlb
mov
in
mov
fwait
push
mov
fcoms
mov
mov
roll
sub
push
adc
shll
inc
out
pop
cmpl
movsl
xlat
fsts
shrl
jle
insl
jle
insl
xchg
mov
sub
jle
and
inc
dec
mov
into
push
jmp
fucomip
arpl
jle
out
das
in
or
jmp
inc
pusha
gs
jae
add
pop
sub
xor
stc
cmc
loop
xchg
mov
ljmpw
mov
mov
enter
cmp
ljmp
clc
adc
lock
dec
std
shlb
ficomps
sti
mov
movsl
jg
jae
scas
mov
jb
mov
mov
in
in
pop
inc
sub
inc
jo
push
imul
mov
test
jp
push
in
dec
rol
cld
ds
ljmp
mov
add
xorl
adc
gs
nop
push
or
xor
mov
and
fisubs
pop
mov
add
insl
in
fisttps
lds
stos
lret
mov
lock
adc
xchg
rorl
pop
fsubrp
call
out
popa
cmp
cs
icebp
daa
inc
loopne
fisubrl
xlat
into
insb
or
fstpl
mov
push
push
mov
std
jl
sbb
mov
dec
mov
sbb
gs
icebp
mov
das
pop
push
mov
jo
aaa
sbb
out
and
ret
dec
call
ljmp
loop
pop
in
out
imul
jl
aas
or
push
sbb
xchg
dec
fs
gs
xchg
lods
add
sti
cmp
aad
scas
add
imul
hlt
jmp
add
push
out
fcmovnbe
pop
loopne
out
aaa
xor
mov
and
sar
mov
push
inc
ja
cmp
dec
mull
or
jns
mov
movsb
insb
lret
std
ds
in
std
fwait
adc
xchg
mov
sbb
sbb
cmc
sbb
or
mov
arpl
leave
daa
jbe
cld
dec
push
pop
inc
lods
ret
inc
inc
int3
loopne
mov
mov
je
inc
mov
out
cld
mov
cmc
push
jge
loop
call
fs
mov
jbe
jp
inc
and
lods
mov
out
es
jnp
sbb
mov
adc
adc
cli
mov
sahf
sbb
mov
sbb
popf
sbb
cmp
and
add
outsl
xchg
jge
pop
icebp
out
lahf
sbb
lds
pop
bound
mov
or
cli
les
bnd
sbb
jmp
addl
pop
addr16
test
outsl
cmp
push
movsb
push
or
push
fdiv
cmp
cltd
sarl
push
xchg
cmp
ds
mov
cltd
aas
jbe
xchg
ds
sbb
test
pop
jle
xor
and
fidivs
sub
mov
lock
pop
ret
popf
jle
jp
test
popf
je
fstpl
nop
mov
icebp
xchg
push
shll
fstps
aad
sbb
popf
fdivs
xlat
jmp
mov
xchg
nop
lret
mov
mov
testl
dec
loop
sub
push
xorb
out
in
mov
add
jmp
cmp
pop
lcall
jg
cmp
mov
xor
cmp
sub
jle
scas
jmp
jp
aad
int3
dec
lahf
jne
cwtl
cmc
sbb
xor
sbb
cmp
in
sub
adc
cmp
dec
cmp
stos
push
ret
cmpb
repz
ljmp
xor
lock
mov
adc
sbb
jl
push
mov
mov
add
in
and
mov
stos
cmp
xor
xor
outsl
mov
rorb
sbb
inc
add
les
out
lret
jae
psubusb
mov
iret
stc
adc
pop
test
xor
cmpsl
xchg
rcrb
mov
jne
mov
sub
adc
fwait
mov
fcomps
xchg
hlt
push
cmp
bswap
lahf
mov
into
push
leave
jo
jb
or
xlat
sub
imull
add
inc
loopne
rorl
adcl
fsubrl
sarl
pusha
xchg
rcr
adc
clc
movsl
add
js
fnstenv
mov
sub
sub
push
mov
add
and
stos
push
push
lret
push
mov
push
jle
cmpsl
add
mov
jg
in
into
test
jo
push
cmovle
and
mov
or
and
adc
movsb
out
scas
jecxz
cld
hlt
xchg
and
sub
pop
ret
out
loope
dec
push
jnp
aas
cmp
jbe
sbb
mov
cmp
clc
or
aam
jecxz
and
ss
or
roll
test
popf
mov
insl
or
push
or
inc
pop
mov
add
cmc
or
cmc
mov
dec
mov
xchg
sbb
subb
sbb
lahf
das
push
mov
inc
insl
xor
mov
sub
fwait
sbbb
inc
clc
sbb
mov
push
insb
pop
cmp
ljmp
adc
jns
mov
cmc
dec
leave
mov
test
repnz
pop
push
lea
sbb
xor
xchg
nop
icebp
dec
push
clc
test
adc
inc
and
mov
mov
or
jg
push
iret
rcr
push
cwtl
or
mov
pop
sbb
clc
into
push
aas
aas
cwtl
ja
stos
sahf
scas
testb
mov
rolb
cltd
push
fsts
shrb
pop
adc
ss
call
xor
inc
mov
std
in
leave
push
in
lods
inc
sbb
cmp
negl
inc
addb
out
pushf
test
push
inc
push
popf
int3
into
push
into
jnp
jnp
ss
mov
cmc
xor
out
and
push
repnz
ljmp
or
inc
cmp
sbb
cmp
divb
sti
leave
insb
pushf
xchg
adc
push
jb
cmp
fwait
mov
in
jl
popa
cmc
and
call
scas
add
inc
cs
xor
lods
adc
loop
shl
and
add
cmp
insb
sahf
scas
xor
out
loop
aas
sub
adc
jmp
insb
lock
xor
inc
lods
cltd
repnz
out
adc
dec
or
inc
fisubs
inc
add
fiadds
roll
dec
mov
packuswb
insb
xor
rcrl
addb
adcb
xchg
sbb
jle
dec
aaa
lock
fnsave
inc
pop
orb
mov
or
dec
add
mov
mov
aas
xor
mov
cs
mov
cmp
sbb
add
rcl
jmp
out
pusha
jge
fsts
pop
not
cmpsl
enter
rclb
push
in
inc
ret
pop
mov
sbb
and
sbb
sahf
adcl
mov
dec
jmp
mov
aas
and
jb
out
mov
sahf
mov
push
mov
sub
mov
ret
int
test
mov
test
sarl
jg
sbb
ja
cmpsl
stos
fildll
xor
sub
in
xchg
hlt
pop
mov
popf
cmpsb
fdivrl
rcr
mov
lret
in
cmc
test
fsubrp
sbb
popa
pop
xor
mov
cmp
mov
popf
ret
sbb
cmp
jmp
push
rcrl
fwait
push
jl
repnz
fdivl
dec
pop
mov
cld
aam
insb
ret
bnd
or
and
jo
shll
jae
jns
push
add
js
adc
loopne
and
push
mov
mov
lods
lock
outsl
in
push
ret
arpl
movsb
ljmp
mov
je
inc
rorl
loopne
mov
and
and
pop
aad
movb
add
or
movsb
adc
xchg
je
push
or
add
insb
imul
and
push
cmp
shrl
jbe
mov
add
mov
push
dec
lret
mov
jecxz
mov
mov
push
int
xchg
mov
idiv
das
jno
dec
push
mov
arpl
fwait
adc
xchg
std
testl
loopne
cwtl
adc
insl
push
popa
rol
mov
adc
mov
pop
jnp
out
test
stos
xchg
shlb
imul
adc
into
iret
jge
sbb
mov
mov
xchg
sbb
icebp
dec
psubw
sub
jae
pop
mov
mov
add
rorb
popa
into
aas
ret
scas
faddl
and
rcrb
orl
mov
sahf
jle
sahf
xchg
loop
iret
and
and
dec
imul
out
subb
xchg
mov
sub
cli
sub
pop
cmp
je
dec
mov
jo
cmp
hlt
rorb
jmp
push
mov
push
test
out
cmp
inc
push
add
and
stos
js
push
and
ret
jmp
ror
sahf
add
popf
xchg
dec
out
xchg
sub
lds
mov
jecxz
jecxz
lret
dec
adc
xchg
mov
jae
mov
mov
cmc
add
pop
dec
iret
or
mov
mov
pop
jmp
mov
xorb
rorl
add
shrl
lcall
les
sarl
shlb
cld
imul
mov
in
lahf
push
fwait
jecxz
inc
mov
lret
mov
add
push
fcompl
and
sti
jmp
adc
sbb
je
push
fwait
aam
xchg
ret
mov
push
shl
inc
mov
jle
mov
loop
fcom
dec
scas
lock
ret
fisubs
cmp
mov
adc
cmp
ffreep
pop
push
push
hlt
arpl
push
mov
jbe
or
into
mov
push
in
outsl
push
lea
into
jns
imul
adc
pop
scas
adc
jecxz
movsb
sub
movsb
add
jl
mov
lahf
call
adc
sub
fisubrs
xor
xor
xchg
test
daa
cwtl
shrb
xchg
inc
xorps
sti
lock
adc
int
data16
add
mov
popf
sahf
shrl
cmc
inc
in
dec
movsb
push
cld
or
add
cmp
and
pop
mov
stos
rcrl
dec
in
xchg
in
gs
cli
sahf
ljmp
rcl
call
jne
pop
fsubrs
sti
idivb
data16
addb
mov
test
cltd
adc
or
in
imul
movb
daa
push
sub
jae
sarl
adc
mov
jecxz
mov
push
arpl
pop
or
xchg
xlat
pop
sar
mov
mov
das
xor
rolb
fdivs
jno
mov
test
pop
and
sub
icebp
cmpsb
pop
and
cmp
pop
rcrl
popf
push
clc
and
cmp
sub
jnp
mov
add
into
pusha
adc
xchg
cmp
mov
shrl
sar
adc
lahf
mov
inc
in
or
enter
mov
sbb
fcmovnb
nop
fildll
sub
mov
sbb
mov
adc
lods
pop
or
xchg
cmpsb
fisttps
xor
xor
rcll
dec
in
lcall
lods
shlb
mov
lds
shl
xor
xchg
shlb
cmp
sub
ds
lahf
test
ljmp
repz
push
int3
test
cltd
insb
sti
sti
in
sahf
sbb
add
mov
push
jo
stc
repz
jge
sub
dec
mov
sbb
xchg
std
test
cltd
ds
dec
loop
std
adc
or
into
adc
lret
jecxz
or
popf
pop
jg
push
mov
loopne
sub
jg
std
movsb
fnstcw
test
out
push
xchg
int
arpl
cltd
int3
leave
sbb
mov
cmc
cmp
add
ja
jne
xchg
fs
push
jne
clc
mov
lea
cwtl
aas
pop
les
stos
lods
nop
dec
fildll
outsb
push
testb
cmp
movsl
push
mov
cmp
jge
jl
icebp
test
mov
std
popa
leave
dec
adc
xlat
lcall
out
mov
repz
ficoml
popa
lahf
dec
xchg
dec
movsb
or
stos
rcr
inc
sbb
cmp
arpl
jne
orb
mov
movsb
es
test
test
repnz
pop
or
and
or
mov
mov
bound
jg,pn
bswap
pop
sarl
cmp
bnd
cli
popa
outsb
rcrb
int
dec
pop
mov
xchg
pop
dec
fcom
jecxz
outsl
add
out
fcmovb
dec
sbb
cmp
cmp
cmpsb
sbbl
inc
int3
stos
fists
mov
mov
add
cmp
mov
into
enter
rcr
lcall
dec
pushf
xchg
cwtl
inc
fistl
into
nop
lods
adc
das
push
jl
int3
dec
mov
ret
roll
inc
sarl
scas
imul
repz
out
sbb
mov
adc
faddl
mov
insl
jnp
push
cmp
pop
xchg
pop
mov
rclb
stc
xchg
mov
jns
loop
inc
mov
pushl
sub
lcall
jle
jne
dec
pop
clc
aas
daa
jnp
cmpl
xchg
and
and
jl
orb
cmc
pop
xchg
or
sbb
pop
xor
ret
dec
rcr
jo
cltd
fwait
cltd
jns
xor
imul
ret
ljmp
lret
clc
add
xchg
jae
data16
xchg
pop
scas
mov
inc
dec
xor
dec
jl
dec
cmp
ljmp
adc
add
sbb
pop
out
fiaddl
adc
and
dec
pop
dec
push
dec
cmpsb
xor
mov
sub
dec
mov
and
mov
push
pop
pushf
fiaddl
mov
or
cli
repz
fiaddl
sub
pop
sub
and
mov
nop
lcall
lret
test
jnp
popf
mov
push
addr16
and
xchg
push
aad
test
push
adc
bound
repz
outsl
jle
shlb
loope
ret
stos
leave
add
and
in
shll
es
xor
stos
pop
push
jne
and
dec
das
cmp
stc
cmp
mov
xchg
mov
inc
mov
sti
xchg
jl
clc
daa
adc
xchg
pop
cmpsb
or
jge
leave
call
hlt
mov
add
vmovntdq
xor
cmp
push
iret
pop
in
shll
adc
fildl
dec
adc
into
dec
xchg
mov
sbb
cmp
icebp
cmp
cmp
scas
lahf
mov
or
outsb
inc
push
mov
je
in
xchg
iret
es
pop
pop
mov
stc
dec
ffreep
or
sub
lods
movsl
popa
out
sbb
xchg
xchg
stos
lds
test
push
icebp
or
pop
in
jl
fstpt
and
lods
pop
xchg
and
inc
aaa
jecxz
gs
adc
out
xor
cli
out
push
sub
adc
ss
xor
neg
subb
mov
js
xchg
sbbl
jb
sub
xorl
add
jle
arpl
pop
pop
push
jo
or
stos
jp
movsb
clc
mov
mov
jge
das
xchg
xor
mov
push
test
mov
mov
sbb
bnd
popa
pop
push
dec
mov
sub
pop
jnp
in
les
or
dec
out
out
or
cmpsl
aam
push
sarl
sub
and
test
mov
pop
add
mov
cld
add
mov
rcrb
int
xor
popa
push
mov
mov
aad
lock
mov
icebp
mov
fcomp
sub
je
sub
cld
cmp
xor
or
into
lea
mov
push
movsl
ficoml
jecxz
add
jno
or
xchg
mov
pop
mov
push
in
lods
call
or
inc
xlat
fisttpl
xchg
and
loop
jecxz
jp
sahf
add
pop
push
add
aam
imul
adc
iret
scas
push
or
pop
push
mov
jb
loopne
mov
push
inc
xor
sub
and
mov
mov
add
jb
cld
loopne
and
push
dec
out
insl
arpl
pop
inc
in
les
dec
aad
adc
adcl
test
and
imul
into
inc
push
push
loopne
data16
push
pop
inc
ljmp
sub
xor
std
mov
int
sahf
sub
pusha
mov
lock
mul
test
sarb
dec
cmc
sti
xor
inc
sbb
mov
fnstenv
outsl
add
mov
fldl
and
inc
mov
or
push
push
repnz
popa
push
push
inc
nop
sbb
cmp
jmp
and
movsb
xchg
mov
sub
fsubs
jae
xchg
cli
xchg
dec
or
ja
xchg
dec
jbe
nop
cmp
or
std
test
add
lds
cld
stos
jecxz
xchg
dec
mov
xor
dec
xor
add
mov
cmp
inc
imul
std
mov
inc
adc
and
ds
loope
lea
jg
pop
pop
lret
inc
or
insl
out
fld1
dec
stos
lahf
daa
xchg
les
adc
cld
sarb
or
cmpsl
leave
jl
cmc
xchg
addl
mov
fisttpll
imul
cmp
adc
sti
sub
jmp
xlat
mov
dec
je
test
mov
orb
xor
vandnps
ret
out
loope
mov
inc
push
add
int3
jo
mov
ficomps
push
out
push
xchg
test
and
xor
bound
lods
test
sahf
sub
xchg
mov
ja
bound
or
fmuls
push
adc
add
jecxz
ret
inc
dec
xchg
sbb
mov
sbb
shlb
jno
lods
stc
cmp
gs
ret
outsl
jbe
test
js
push
dec
mov
loopne
or
jbe
mov
jle
dec
scas
and
mov
out
sbb
and
or
ds
xor
inc
xchg
incl
xchg
out
dec
sbbb
enter
bound
dec
pop
out
in
xor
test
repnz
sbb
movsb
int
adc
lods
hlt
lea
jmp
aad
push
ja
sarb
xchg
ljmp
sti
jmp
insl
xchg
sbb
mov
xchg
popa
add
mov
push
ja
or
scas
arpl
adc
and
add
pop
sbb
sbb
imul
ret
aad
sub
jle
push
in
dec
mov
jo
pop
scas
sbbl
loope
fcmovnu
loope
insb
nop
in
aam
push
inc
mov
lcall
sub
adc
add
inc
pop
ds
mov
sarl
and
cs
jnp
sbb
mov
sbb
adc
push
adc
pop
cltd
or
icebp
cmpsl
movsb
shr
fwait
lcall
into
mov
ljmp
hlt
sbb
jno
ljmp
push
mov
andl
xchg
cli
inc
imul
mov
mov
and
push
pushf
int3
loop
shr
fcomp
fdivl
imul
sbb
repz
dec
pop
jno
mov
mov
jmp
sub
inc
push
inc
push
divl
outsb
add
jae
addr16
dec
mov
fmul
leave
mov
leave
jno
jae
add
daa
fs
jecxz
iret
mov
jl
test
add
icebp
rcll
dec
ja
pop
xor
xchg
adc
les
nop
fdivrl
push
movsl
sbb
and
mov
test
int3
stos
push
or
stos
in
push
cmc
pop
jle
in
lahf
or
mov
cmp
jmp
aam
xor
xchg
mov
sbb
pop
aaa
fwait
arpl
fdivl
ficoml
dec
add
adc
cwtl
pop
mov
fisubrl
pop
mov
lcall
pop
mov
push
push
sub
jmp
fcmovnb
icebp
xchg
push
jns
fiaddl
and
ja
mov
inc
addb
mov
sub
bound
pop
popa
or
cld
in
pop
dec
cmp
sub
and
shlb
in
jmp
pop
mov
and
mov
loopne
xchg
push
pop
in
xchg
loopne
mov
clc
insl
cmc
push
dec
dec
cld
scas
ds
mov
fdivrl
scas
shlb
and
mov
lods
push
adc
cmc
sub
aam
lock
or
ja
in
int3
into
scas
es
xlat
orl
sbb
adc
mov
imul
add
xor
inc
fdivrs
add
bound
pop
jbe
cmpsl
mov
repnz
mov
pop
jae
inc
xor
scas
inc
jae
lock
bound
jne
or
adc
fisubrl
and
shrl
testl
mov
mov
and
rcrb
in
mov
add
push
sbb
das
cmp
jmp
jb
shrl
inc
jmp
push
repz
xchg
and
stos
fwait
pop
jecxz
fnstenv
push
test
jne
fwait
movsl
rclb
mov
leave
jbe
xchg
mov
lret
iret
cmc
jecxz
sub
flds
jmp
icebp
xlat
inc
dec
movsl
aam
scas
cli
lock
cltd
int3
mov
cmpsb
sbb
cmc
jl
decl
xchg
xchg
lds
sbb
dec
cmpsl
in
arpl
lods
jg
fcompl
and
add
push
dec
jle
call
rcl
push
jg
sub
lahf
loop
cld
aaa
mov
int3
lea
data16
test
outsl
daa
mov
sub
push
loop
outsl
jbe
pusha
out
mov
xchg
sub
test
and
dec
mov
loopne
cmp
imul
xor
mov
stos
dec
push
mov
inc
adc
or
push
loop
loop
jne
mov
jae
ret
xchg
mov
imul
cmp
bnd
or
out
pop
xor
call
mov
pop
cltd
dec
mov
daa
ret
jnp
out
push
test
inc
jbe
or
xchg
addb
adc
fsubrl
repz
and
push
pop
xchg
pop
adc
jne
incl
and
fnstcw
sbb
pop
sub
dec
lock
cmp
test
and
xor
jle
repz
pop
push
outsb
jle
aad
mov
push
dec
testl
xchg
mov
sbb
jae
mov
sbb
mov
jb
sub
hlt
sub
jle
and
inc
sbbl
imul
add
outsl
cs
mov
test
cwtl
rcll
bnd
sbb
xchg
ds
inc
inc
ja
popf
jecxz
cltd
sti
fisttps
test
xchg
in
mov
idivb
repz
std
mov
xor
movsl
jne
cs
out
ficompl
insl
test
ret
repnz
outsb
mov
notl
jno
mov
xchg
int3
jns
xor
lret
iret
leave
hlt
cmp
jle
pop
ret
fimull
add
popa
lret
test
mov
rcr
xlat
cmp
inc
mov
popf
int3
xor
cmp
pop
push
mov
gs
sbb
jl
call
push
inc
xchg
cmp
fsubs
cmpsl
mov
and
and
jl
in
nop
rcll
rcll
cmp
xchg
das
je
push
dec
mov
adc
imul
jae
fld1
gs
rcr
adc
dec
mov
xchg
test
jl
add
aaa
in
test
sub
cmpb
inc
mov
into
dec
inc
jp
sub
inc
in
enter
test
or
mov
cwtl
movsb
icebp
ljmp
xor
inc
dec
scas
arpl
cwtl
jecxz
jnp
add
insb
out
inc
aam
loope
inc
in
in
pop
mov
in
mov
ljmp
lods
xor
clc
ja
sarl
or
cmp
xchg
xor
jecxz
mov
imulb
fidivs
ret
pusha
mov
xor
mov
push
adc
cmpb
mov
in
loop
mov
mov
sbb
dec
mov
adc
xor
mov
nop
adc
sbb
in
inc
add
imul
cs
pop
lock
ss
scas
mov
aas
pop
movsl
mov
cmp
jns
jo
jge
jle
jno
je
mov
inc
out
mov
xor
inc
xchg
mov
ds
dec
fldl
lods
cmp
fwait
jns
jo
sbb
push
out
outsl
add
lock
pop
ljmp
loop
aaa
jno
fnsave
jo
lods
pop
sbb
jae
sbb
inc
inc
fstps
shrl
notl
out
pop
lods
pop
test
lret
inc
xchg
add
in
cli
aas
subl
pop
lock
rcrb
pop
xchg
fwait
out
cmp
inc
mov
test
push
mov
loop
orl
adc
mov
fldenv
es
iret
outsl
ficompl
scas
push
lock
sub
sub
cs
int3
push
xchg
mov
in
fistpl
stc
lret
jns
sbb
int3
fisubs
inc
cmp
popf
xchg
mov
xchg
imul
jnp
mov
add
movmskps
and
scas
mov
loopne
aam
stos
ficoml
xor
sub
add
add
mov
mov
mov
int3
cmc
or
lcall
jb
out
jbe
sbb
out
and
mov
pop
outsl
jo
imul
push
adc
into
push
fwait
pop
mov
sbb
mov
loopne
dec
out
and
cli
leave
xchg
clc
pop
int3
mov
into
push
dec
lds
jle
loope
push
ficompl
idivl
sub
into
mov
jle
adc
popf
mov
sub
jbe
sarl
mov
inc
leave
sub
out
sarb
into
xor
jne
xchg
fwait
stos
sahf
ljmp
adc
jo
mov
or
pop
les
test
or
sub
pop
adc
sbb
jne
mov
push
fcmovbe
aaa
insl
mov
push
int3
ja
cli
sub
imull
push
shll
jns
iret
push
imul
stos
cmp
jne
mov
xor
je
shlb
push
faddl
sub
shll
shrl
and
flds
sbb
inc
cli
movsb
pop
out
sbb
mov
jg
mov
repnz
xchg
sbb
outsb
or
cmpsb
mov
mov
icebp
cli
lret
lret
adc
fdiv
clc
repnz
inc
movsl
or
repnz
movsl
mov
setbe
cmp
cwtl
push
mov
pop
je
arpl
enter
lods
dec
cmp
stos
dec
scas
in
add
cwtl
lock
data16
push
mov
aam
imul
xchg
dec
inc
pop
movsl
test
out
mov
mul
add
inc
leave
xchg
addb
fisttpl
fwait
or
inc
add
mov
cmp
icebp
pop
fcmovne
sbb
int3
and
adc
test
ret
lds
mov
les
xchg
ja
sub
imul
xor
clc
pop
mov
jle
nop
rorb
jecxz
je
inc
into
sub
outsl
cmpsl
cmpsl
lock
movsb
mov
and
add
jge
lods
xchg
cmpl
scas
test
loopne
or
call
or
sbb
flds
subb
call
pop
push
or
or
fdivp
rcll
and
sub
and
add
jb
fs
pop
es
or
fnstcw
ljmp
xchg
popf
in
mov
pop
ljmp
jae
sbb
mov
test
lods
out
jo
loopne
add
xor
cmpb
mov
pop
xor
mov
push
test
jo
lahf
push
cmovnp
out
int3
or
rclb
fstps
xorb
insb
cld
pop
add
aam
shrl
lods
add
addr16
loope
inc
sbb
ds
fisttpl
test
outsl
and
xchg
les
repz
and
call
das
orb
pushf
js
jecxz
icebp
insl
mov
dec
and
dec
push
inc
push
scas
xor
leave
lcall
sub
inc
or
ret
fiaddl
push
jg
addr16
xlat
shll
pop
outsl
jl
rolb
scas
pop
shll
adc
or
jns
sti
cmc
cmp
sub
popl
xor
jbe
cli
nop
push
scas
push
adc
sbb
mov
sbb
inc
xor
out
adc
xchg
int
divl
xchg
and
mov
cmp
mov
inc
and
xchg
sahf
bound
and
jb
mov
or
out
cmc
add
mov
test
inc
xchg
shrb
dec
mov
adc
adc
jle,pt
mov
xlat
or
mov
jmp
fistpl
pushf
push
sub
rorl
mov
fcomi
adc
inc
sbbl
xorl
faddl
in
pop
gs
int
scas
out
fbstp
mov
inc
ljmp
rcrb
jbe
cmp
cmp
jo
lea
mov
inc
faddl
sbb
lret
movsl
imull
jl
dec
pop
test
add
dec
push
or
jl
nop
outsb
lea
enter
xor
in
lahf
rolb
fs
daa
mov
jbe
pusha
sbb
jp
or
sub
jl
xchg
or
call
xchg
push
push
in
cmp
loopne
jp
xchg
cmp
cmp
in
xchg
pop
icebp
or
xorb
loop
test
stos
adc
jge
xchg
jns
and
fwait
bswap
pusha
pushf
ror
pop
xchg
or
enter
adc
cmpl
out
repz
dec
gs
mov
dec
je
int
add
sbbl
push
adc
mov
xor
nop
test
push
rcrb
mov
mov
xor
mov
test
insl
dec
test
mov
mov
lret
ljmp
sahf
dec
bound
inc
lods
add
push
cmp
idivl
cmc
jle
mov
testb
out
ret
sub
mov
mov
sub
mov
mov
cmc
cmp
bound
enter
push
pop
sbb
cmp
lss
xor
cmp
mov
sbb
and
sbb
stos
cld
mov
enter
inc
xchg
inc
prefetchnta
push
mov
aas
mov
jge
movsb
and
jl
ds
mov
mov
sub
arpl
adc
dec
pop
imul
shlb
shlb
stc
pop
imulb
lods
std
and
rcl
mov
jns
jb
and
loop,pn
flds
scas
adcb
ret
sahf
cmp
lods
mov
cmp
orb
push
in
in
cmp
hlt
mov
pop
leave
pop
mov
pop
dec
mov
dec
inc
adc
daa
xchg
mov
cs
dec
cld
sbb
mov
jp
ds
push
std
sbb
sub
push
sub
cld
icebp
mov
ret
cwtl
or
jne
outsl
dec
mov
xor
add
mov
mov
cli
push
das
divl
mov
sbb
outsb
fmulp
cltd
xchg
test
dec
stos
sti
lahf
mov
push
mov
pop
cmp
dec
push
dec
fisttpll
add
stos
sub
movsl
cltd
rol
or
stos
shrl
shr
iret
loope
cmp
inc
inc
arpl
pop
xchg
pop
clc
push
mov
shlb
fwait
xchg
lock
or
push
inc
loope
stos
dec
incb
sahf
push
sbb
push
insb
sbb
inc
cwtl
or
jecxz
mov
jl
mov
loopne,pt
sahf
fdivrp
aaa
xor
fstl
and
out
add
sub
xor
and
rcll
mov
test
ret
popa
cli
pusha
js
mov
mov
dec
imul
cmp
mov
out
push
adc
stos
sbb
mov
ret
jecxz
lock
negl
adc
imul
cmp
cmp
dec
lock
cmp
sub
lahf
pop
test
fmull
and
add
stc
lods
fistps
pop
dec
dec
addr16
and
mov
nop
add
inc
mov
mov
imul
arpl
test
rclb
dec
jb
and
and
dec
fsts
mov
mov
pop
pushf
fs
inc
cli
or
sbb
daa
ljmp
ficompl
or
mov
pop
cli
mov
sub
cmp
dec
jo
pop
add
icebp
jecxz
lods
sbb
sti
and
push
std
mov
xchg
cmc
dec
js
jge
push
pop
mov
cmp
sub
lock
jl
xchg
push
cmp
stos
test
ffreep
movsb
cmp
sbb
in
xchg
push
and
fwait
std
popa
insb
push
mov
cmc
xchg
xchg
sub
xchg
push
mov
shlb
jns
or
rorl
or
jno
lock
pop
dec
sahf
mov
mov
out
mov
push
jns
or
bound
push
add
test
push
orl
iret
popf
mov
xor
mov
add
fimuls
repnz
adc
cmove
dec
jl
dec
roll
in
jmp
cmpsb
xchg
cmp
std
gs
ficoml
gs
add
inc
mov
xchg
sbb
mov
xor
nop
fnsetpm(287
fidivrs
sbb
add
sub
ss
into
int3
sbb
or
inc
std
xchg
push
sub
inc
push
mov
roll
sti
scas
push
sti
sbb
cs
dec
fld
insb
cmp
insl
pop
jo
adc
adc
mov
in
leave
les
mov
rcl
mov
fwait
add
lds
mov
push
adc
fs
cmpsl
push
jae
in
add
ja
std
js
xchg
sbb
push
lret
adc
loope
roll
mov
popa
add
inc
push
sti
fwait
test
xlat
sbb
iret
and
repnz
xor
mov
repz
cs
mov
lods
lds
pop
gs
adcl
push
test
scas
cmp
xor
cmc
arpl
addr16
lret
cmp
fstps
stc
jl
cmp
and
xor
cmpsb
pop
mov
addr16
call
mov
fidivrs
loop
enter
or
fwait
sbb
fs
sbb
dec
je
xchg
push
jne
jge
mov
sbb
cmp
pop
adc
out
roll
fnsave
mov
idivb
cmpsb
mov
pop
add
dec
mov
mov
or
sbb
mov
jecxz
ret
add
int3
lcall
int3
xor
aaa
fld1
adc
jge
outsl
orl
adc
decl
cltd
ret
fcmovbe
and
gs
xchg
lahf
dec
mov
sbb
xor
mov
mov
rclb
test
and
roll
cwtl
outsl
cmp
insb
or
add
daa
pop
ret
push
cmp
jnp
ret
and
addr16
mov
imul
in
jle
mov
test
cs
outsl
movsl
ret
int
sbb
js
inc
mov
add
fadds
xor
sbb
mov
mov
fdivl
out
mov
rcrb
cmp
pusha
mov
mov
cld
adc
and
add
lods
adc
das
jnp
mov
cmp
dec
popf
in
sbb
aam
push
pop
pop
cmpsb
push
push
adc
pop
push
push
jmp
jp
lods
add
sti
inc
add
push
fisttpll
xchg
sbb
adc
sbb
lods
sub
adc
and
pop
xor
lea
inc
push
adc
orl
add
xor
bound
jo
pop
mov
mov
xor
push
cltd
and
negb
jl
das
addr16
cld
in
shr
lret
and
fs
les
dec
mov
stos
dec
push
test
call
in
jp
pop
and
sub
in
mov
repnz
dec
loopne
das
ror
lds
or
ror
mov
and
daa
inc
rclb
fimull
fwait
fs
pop
cwtl
dec
mov
std
jno
sub
cld
xchg
mov
imul
mov
in
sarb
rol
jo
sub
push
shrl
dec
push
adc
int3
fcmove
adc
push
adc
pop
and
pop
cmp
jnp
dec
inc
pop
jo
dec
push
xor
inc
mov
data16
mov
mov
cmp
popa
mov
cmc
pushf
lcall
clc
and
cmp
ds
iret
lret
pop
inc
xor
out
outsl
jp
movsb
je
xor
dec
and
lret
push
cs
sub
nop
testb
inc
xor
clc
cmp
add
fidivl
lock
pop
push
fisubl
cld
repnz
cmpsb
dec
ret
incb
inc
xchg
xchg
xchg
dec
std
sub
push
dec
jmp
cmc
xchg
sbb
je
push
pop
xor
mov
ret
dec
mov
jmp
push
pop
xlat
push
bound
inc
sbb
movsl
and
orb
xorb
xor
jl
inc
inc
xchg
sbb
xchg
mov
push
mov
sbb
xlat
xor
je
push
insl
pop
sbb
dec
fucom
mov
dec
sbb
lret
sbb
leave
test
mov
mov
data16
aam
fnstcw
call
div
sbb
xor
cmpl
push
mov
bound
adc
mov
xor
inc
add
stos
fdivs
daa
out
push
cmp
pushf
fnstenv
leave
push
movsb
mov
call
fiadds
mov
push
push
pop
adc
xor
mov
xlat
es
add
pop
and
movsl
bound
les
cmpsb
fimull
cmpsb
repnz
fwait
movsb
xchg
jo
xchg
fs
sbb
pop
inc
outsl
and
xor
jecxz
test
outsb
gs
incb
outsl
push
scas
pop
lret
insb
nop
jmp
add
pop
pop
push
dec
fldenv
pop
fcomps
mov
insl
xlat
sbb
mov
popa
cmp
pop
rcrb
out
mov
je
pop
mov
iret
les
fucomp
rolb
popf
push
jg
loope
pusha
jne
add
cmp
arpl
mov
cmp
jne
imul
arpl
and
cmc
mov
cmp
sub
xchg
sub
lods
push
xor
std
lahf
and
sbb
xor
mov
push
lds
pop
sbb
rcll
lret
mov
and
mov
cmpsb
sub
inc
outsl
jecxz
or
in
pop
cld
add
imul
pop
mov
call
out
adcb
cmpsl
xor
shlb
call
mov
sbb
jg
sub
data16
sbbb
hlt
in
psadbw
and
loopne
outsb
clc
scas
mov
int
push
and
into
movsb
xchg
imull
push
clc
sbbl
imul
lcall
xchg
jp
lods
sub
pop
jge
stc
movl
or
sbb
data16
sub
dec
mov
xchg
out
mov
arpl
and
mov
xchg
inc
jl
mov
and
push
scas
or
movsb
sub
push
hlt
jno
inc
insl
mov
mov
mov
dec
dec
push
xlat
sar
dec
xchg
xor
lcall
lds
inc
push
call
lods
sub
rcpps
ret
scas
jnp
pushf
loop
pop
pop
lods
sbb
mov
sti
stos
inc
pushf
sbb
cmp
dec
jo
push
stc
sbb
iret
ficomps
cmp
lock
cltd
js
xchg
rcl
dec
add
lret
sbb
adc
mov
xchg
adcl
mov
mov
imul
shr
scas
xchg
mov
daa
cmp
out
dec
push
scas
adcl
int3
jb
dec
inc
sub
sub
cmp
daa
sbb
and
sbb
int
int3
mov
jbe
inc
lret
shll
jo
jns
mov
dec
cmpsb
push
dec
out
sbb
mov
mov
fimull
cmc
rolw
jbe
xor
adc
add
mov
cmp
push
dec
pusha
cltd
loopne
loopne
and
and
mov
repnz
gs
dec
dec
nop/reserved
enter
add
push
inc
or
stos
push
push
cmpsb
pusha
push
dec
popa
lea
daa
daa
dec
insb
xchg
add
gs
in
xchg
test
pushf
leave
jl
test
and
mov
in
pop
push
cmp
lahf
sbb
and
out
inc
stos
cltd
sbb
mov
popa
inc
jle
push
sub
inc
in
popa
fdivrl
repnz
lahf
xchg
jg
cld
cli
dec
adc
adc
or
cmp
imul
cli
rcrl
es
jnp
insl
push
or
sub
jbe
lds
je
into
cmp
add
sub
mov
push
and
add
push
cmpsb
add
adc
fidivs
pop
sti
xor
mov
add
cmpsl
stos
imul
xor
and
and
pop
push
sub
inc
dec
xchg
aad
pusha
jne
shl
repz
jp
push
shlb
add
pop
sbb
sbb
adcl
jo
movsl
es
add
jp
inc
sub
pusha
mov
ret
das
xchg
cs
cld
jnp
fwait
mov
rolb
movsb
jl
and
lods
inc
lods
push
mov
cmp
into
mov
adc
hlt
jno
outsb
push
lds
mov
inc
mov
popa
aas
adc
adc
cmp
stc
mov
leave
enter
in
cld
fstl
pop
xchg
enter
push
rolb
mov
aad
mov
repnz
xor
or
lea
xchg
mov
mov
add
or
test
xchg
and
cmp
mov
shll
daa
cs
leave
test
frstor
mov
sti
add
xchg
jbe
cmovg
rcr
xchg
sarb
xchg
sbb
and
es
cmp
mov
leave
jns
add
movsb
mov
push
jecxz
lcall
mov
inc
xchg
shlb
mov
push
jl
cmp
icebp
jbe
mov
sbb
std
mov
repz
test
clc
push
ja
push
or
stos
mov
push
push
adc
inc
push
jae
mov
out
mov
sbb
out
lds
pop
mov
inc
mov
shr
ljmp
je
sub
les
leave
rcrb
mov
aad
sbbb
stos
movsb
inc
and
push
push
ljmp
sub
mov
sahf
cwtl
cmp
fwait
push
pop
fmuls
sub
and
mov
loope
outsb
push
repz
xor
lret
sahf
xor
test
outsl
and
xchg
cs
inc
loop
lahf
adc
hlt
xchg
leave
mov
into
push
cmp
and
popl
prefetcht1
inc
jbe
xor
sbb
lret
lret
cmp
lcall
mov
in
in
push
or
nop
clc
inc
rolb
push
inc
cld
mov
pop
pop
dec
pop
pop
je
cmpsb
mov
loopne
push
cmpb
pop
sahf
push
cwtl
push
pop
xchg
mov
loopne
ljmp
mov
mov
push
inc
rcrl
push
xor
mov
out
test
cmp
push
add
cmp
popf
in
lock
mov
test
in
sub
push
ret
ja
add
add
push
dec
dec
adc
lods
jl
aad
mov
popf
mov
cmp
mov
push
sub
mov
mov
sahf
orb
dec
rclb
mov
shr
gs
out
sub
int
setne
add
shrb
pushf
insl
or
pushf
lock
inc
filds
cwtl
sub
xor
adc
ret
pop
jbe
insl
ss
xchg
bound
adc
adc
mov
shll
sbb
shrl
mov
out
xor
xor
cmc
push
jno
adc
cli
sbb
inc
test
movsl
pop
divb
inc
dec
xor
pop
stos
outsl
inc
outsl
cwtl
cmp
mov
mov
xchg
subl
mov
sti
scas
mov
test
roll
les
sub
neg
aad
into
add
mov
scas
jge
pop
call
shll
lock
lds
ror
mov
leave
lds
push
js
addr16
inc
stos
jo
loopne
fucomip
inc
add
xor
jae
jmp
nopw
leave
dec
jne
imul
inc
fucomi
lcall
add
mov
push
or
scas
cmpsb
out
dec
sbb
ffreep
sahf
pop
or
jbe
inc
and
sub
push
inc
lret
lods
clc
mov
cli
in
mov
xor
fbstp
js
inc
or
in
pop
sbb
repnz
mov
xor
push
jne
inc
call
jge
push
dec
jge
ret
cmpsl
sbb
cmpsb
mov
mov
push
leave
loop
shrl
cmp
add
loop
aas
cmp
mov
push
int
repnz
lcall
lods
nop
or
cmc
jne
inc
add
fmuls
mov
in
xor
shll
stos
adc
or
dec
sub
lret
or
in
sbb
rcrl
fidivl
adcb
in
lea
addr16
addr16
int3
xchg
xor
in
jo
ljmp
inc
dec
sbb
xor
sbb
mov
mov
xchg
repz
push
mov
ret
adc
insb
addl
sub
out
bound
decl
xor
sahf
sahf
xchg
cmp
or
xchg
pop
jae
pop
hlt
cmp
fistl
push
mov
mov
les
movsl
mov
pop
xor
jo
fbld
fsubl
fstps
js
fwait
sahf
mov
or
std
cwtl
cmp
mov
cmp
in
and
in
cmpsl
sbb
sub
popa
test
mov
movq
mov
pop
imul
mov
rorb
rcrl
xor
shrl
adc
out
adc
jge
les
clc
xchg
je
add
mov
in
sahf
test
iret
mov
stos
call
add
cld
mov
dec
mov
data16
imulb
rorl
ret
mov
sub
pop
mov
cli
movsb
jno
loopne
out
sub
push
sbb
loopne
and
leave
scas
push
jae
sub
std
mov
push
adc
push
sbb
xchg
and
sbb
jno
dec
mov
out
pop
loop
jle
inc
insb
movsl
push
shll
xor
or
add
stos
push
xor
mov
sub
pop
das
pop
mov
jno
sub
icebp
sub
dec
out
sbb
mov
xchg
sbb
sarb
xor
int3
and
stos
lock
push
or
push
jge
sbb
adc
es
mul
pop
data16
mov
push
xor
and
movsl
jae
ja
out
cmpsb
jp
push
adc
shlb
inc
enter
mov
stos
cld
push
mov
jg
insl
jo
mov
push
inc
inc
test
lret
push
dec
insb
mov
inc
test
inc
dec
jge
movsb
push
mov
jbe
mov
jns
loope
jo
fsubrl
aad
mov
int3
cwtl
dec
fists
fmuls
push
cltd
stos
inc
dec
push
fwait
and
xor
add
addr16
fsubs
lock
sti
jg
dec
push
mov
mov
add
mov
ss
push
xor
sub
add
rolb
ja
mov
xor
add
fwait
inc
int3
addr16
lock
mov
sbb
mov
lods
lods
out
repnz
dec
cltd
xlat
hlt
mov
or
cs
nop
in
js
push
xchg
xchg
jmp
outsl
add
and
es
inc
out
das
sbb
pop
aad
ja
dec
sar
dec
xor
xlat
push
mov
dec
bound
jmp
loop
sbb
shlb
test
pop
ja
insl
jle
xor
scas
dec
mov
dec
pop
data16
mov
fsubs
sub
cmp
mov
sub
xlat
and
imul
add
shl
and
andl
std
lahf
aaa
jge
mov
lock
daa
rcrb
rcll
cmp
jmp
sbb
aad
jl
xor
pop
add
out
mov
clc
pop
and
mov
popf
pop
cmp
outsb
out
cmc
jmp
or
fldcw
lods
sahf
push
data16
xchg
out
mov
out
fadds
mov
nop
cli
sbb
sbb
pop
clc
sub
dec
pop
mov
push
fistpll
xchg
mov
lods
mov
or
xor
mov
cmp
das
scas
jmp
jle
js
jnp
jne
adc
jg
shll
xlat
clc
adc
shlb
xor
xor
xor
popa
loopne
cld
sarb
push
enter
cmpsl
inc
cmpsl
jbe
sbb
mov
add
ja
push
loope
cmp
enter
out
sbb
insl
cli
xor
mov
jns
ffree
mov
pusha
es
enter
aad
sbb
mov
mov
lret
add
mov
in
jecxz
shll
inc
das
and
cmp
repnz
push
shlb
shrb
inc
mov
mov
repnz
pop
inc
and
fsubrl
loop
or
ret
xor
ja
add
add
dec
sub
jl
cmp
cmp
push
aas
loop
and
ficompl
into
fxch
inc
pop
dec
push
mov
push
repnz
les
adc
movsb
inc
sub
inc
mov
pop
sar
paddsb
test
clc
in
jnp
inc
imul
movsl
ja
inc
jle
mov
or
dec
add
mov
ret
sbb
fldl
leave
jmp
pop
and
mov
cmp
and
pop
pop
lock
iret
shr
push
inc
xchg
push
mov
mov
add
shll
sub
into
mov
sbb
mov
rorb
fistps
insb
mov
cmp
push
or
sub
das
dec
insb
inc
lock
jnp
fs
fcoml
insb
mov
mov
push
xchg
popf
jne
jbe
mov
fsubrl
or
imul
imul
xchg
into
mov
lret
sbb
ds
ljmp
subb
lods
clc
sub
and
cs
mov
dec
repnz
jp
cmp
icebp
mov
mov
mov
js
jge
jns
or
test
out
lcall
adc
sahf
int3
shll
pop
repz
movsb
cmpsb
xchg
cmc
adc
pushf
and
loop
int
bound
fs
stos
pop
in
dec
xchg
les
lea
push
int
and
or
lahf
jmp
mov
dec
inc
popa
idivl
jp
test
xor
lods
ljmp
pop
cmp
sbbb
pop
pop
sub
popf
jmp
pop
mov
mov
xchg
jo
mov
idivb
cmpsl
jo
mov
pusha
inc
mov
mov
out
outsl
add
jnp
pop
pushf
mov
sbb
inc
inc
xor
pop
loop
popf
push
xchg
dec
xchg
fildll
mov
cvtdq2ps
mov
int3
cld
fwait
mov
xor
mov
jae
push
sub
or
mov
dec
or
outsb
loopne
cmpb
bnd
rorl
repnz
imul
sbb
adc
mov
push
sbb
sarl
cmpsb
imul
negb
add
popf
dec
push
xchg
in
mov
fists
xchg
push
mov
or
jno
fucomip
fstl
into
ljmp
dec
cmpb
sub
in
test
mov
xlat
popa
pop
sub
int3
cmp
inc
push
or
lret
mov
add
das
mov
mov
push
out
mov
cmp
fwait
cmp
push
sub
mov
add
add
and
das
sarl
fstpt
push
and
in
sti
shll
or
rcrl
mov
scas
sar
push
jbe
ja
call
mov
aam
push
push
mov
lcall
adcl
pusha
je
aad
mov
xchg
dec
add
jp
cld
and
jle
stc
ss
cmp
xor
punpcklbw
jae
jnp
decb
mov
imul
idivb
or
or
lret
cmp
mov
ljmp
repnz
mov
jp
fnsave
aad
mov
inc
mov
cmpsb
leave
shrb
jmp
dec
mov
xor
and
insl
inc
and
je
fdivs
test
nop
cs
aam
hlt
mov
xchg
test
lret
pop
jns
and
dec
je
js
testb
pop
push
or
arpl
jns
outsl
mov
js
inc
mov
inc
pop
dec
clc
gs
aas
test
daa
dec
roll
pop
push
dec
stos
xchg
and
or
xchg
int3
in
notl
push
pop
inc
jecxz
cmp
push
jmp
les
pop
ds
xchg
push
dec
cs
ja
push
fistpll
ss
imul
adc
mov
js
gs
push
into
cs
xchg
js
dec
out
and
mov
pop
cmc
cltd
mov
mov
mov
in
jo
push
enter
mov
ror
cmp
les
cs
pop
inc
cmp
pop
jge
aas
pop
int
icebp
cmp
js
mov
pusha
loop
jne
xchg
fwait
lods
int
push
insl
fwait
subl
addr16
or
pop
packuswb
add
sti
les
pop
dec
test
movsb
inc
or
ret
adc
dec
test
jno
int
ret
adc
cmp
xor
add
js
inc
orb
dec
adc
dec
inc
xor
aas
loopne
jg
gs
bound
add
sbb
les
sbb
or
fmuls
mov
xchg
cmp
fwait
in
mov
push
and
add
sub
pop
push
nop
mov
mov
mov
mov
mov
das
dec
inc
jbe
push
test
pop
out
xchg
cmpsb
data16
mov
fldenv
imul
cltd
dec
mov
mov
aad
addr16
repz
jp
hlt
jne
mov
push
pop
add
or
adc
test
in
cli
shr
dec
xor
add
mov
daa
fnstsw
push
rorl
std
add
add
push
les
mov
push
xchg
or
sarb
jae
in
test
mov
sbb
sub
mov
loope
jo
ret
lods
mov
pop
in
aas
test
pop
mov
inc
ljmp
jl
mov
push
xchg
add
in
push
outsl
enter
sub
imul
mov
hlt
fdivrs
sub
push
fcoml
aaa
aad
int3
fcoms
dec
lcall
push
cld
push
inc
das
ss
sub
nop
aad
out
punpckldq
clc
in
mov
divb
std
sbb
aas
pop
mov
stc
dec
pop
mov
ljmp
jp
sahf
cltd
ljmp
loopne
cwtl
fadd
lock
or
dec
aam
loop
leave
jnp
cmpsb
xchg
imul
cld
inc
outsl
cli
jne
mov
test
jae
push
mov
shlb
sbb
adc
iret
add
dec
xchg
sub
mov
jmp
ffree
call
mov
outsl
lret
mov
cmp
adcb
xchg
xchg
push
pop
test
lods
mov
inc
js
aam
fsub
add
or
add
mov
add
scas
aas
lock
xor
mov
sub
andb
jg
mov
inc
subb
mov
outsb
jns
je
cs
ret
dec
mov
fidivs
and
sahf
mov
jle
dec
mov
int3
cltd
insl
in
pop
mov
cli
mov
rcrl
xor
cmp
cmp
cmp
mov
das
pop
xor
adc
sub
xor
test
sbb
push
inc
adc
sub
icebp
icebp
dec
xor
and
fdivrp
fwait
cld
pop
jle
push
adc
ljmp
xlat
pop
inc
push
inc
insl
mov
inc
fiaddl
dec
cmpsl
inc
inc
mov
mov
mov
jno
xlat
or
mov
push
je
into
int3
add
mov
adc
outsb
call
push
pop
mov
test
scas
cmp
and
push
stc
pop
jge
sahf
dec
cmc
iret
shrb
outsl
sub
hlt
mov
hlt
and
daa
roll
int
outsl
push
or
out
shll
call
jns
push
test
lds
add
pushw
in
or
std
js
mov
rcrb
push
cli
loopne
mov
fdiv
jmp
popa
movsb
enter
fcomip
pop
rcll
cld
xchg
cmp
clc
xchg
int3
cld
push
inc
insl
sarl
mov
cmp
inc
je
cld
lea
mov
mov
mov
push
mov
jne
fdivrl
dec
in
mov
lods
insl
sub
cmp
lds
mov
insl
popa
mov
mov
shlb
dec
sbb
jmp
mov
mov
and
xchg
mov
ja
cmpsl
add
shlb
pop
lods
call
inc
adc
sbb
ret
scas
cmp
sbb
dec
mov
push
xor
sub
pop
cld
inc
dec
aaa
stc
mov
push
stc
cmp
sahf
inc
adc
lods
in
dec
lcall
mov
adc
aaa
pop
and
je
xor
ret
in
stc
int
xchg
daa
aad
push
cmp
pop
pusha
gs
xor
mov
pushf
out
test
jp
inc
subl
scas
aam
inc
ja
and
pop
xchg
sti
addr16
dec
mov
scas
dec
arpl
fisubl
push
test
sub
inc
mov
mov
scas
movsl
sub
lret
mov
mov
in
clc
jae
cmp
repnz
xchg
std
pop
or
jnp
imul
scas
push
jns
fwait
daa
pop
std
pop
pop
pop
jnp
pusha
xor
nop
repz
jecxz
les
and
rorb
addr16
dec
pushf
mov
jno
pop
sti
sub
cmp
mov
in
jmp
lods
pop
in
lock
add
bound
xchg
or
push
test
gs
pop
loope
jle
mov
mov
fnstenv
arpl
sub
push
out
jno
pop
push
xchg
sbb
mov
aad
shlb
push
dec
pop
cmp
jp
pop
push
or
jl
push
jo
sub
bnd
push
fisubs
cmp
mov
mov
adc
test
ret
gs
fsub
setnp
lret
mov
ret
lea
ja
mov
lock
add
pop
cmc
andl
leave
cmc
icebp
stc
jo
mov
mov
sbb
sub
and
sahf
push
sub
and
mov
pop
pop
push
inc
pop
add
loope
ficomps
test
push
pop
in
cld
stc
or
outsb
jo
jb
sub
push
xor
sbbb
jns
icebp
test
or
adc
and
pushf
add
lods
lock
adc
pushf
shrb
mov
xchg
dec
sbb
inc
add
leave
dec
enter
and
mov
jb
push
jmp
std
and
jp
sub
shrb
mov
sub
adc
mov
ljmp
pop
sub
shll
test
adcl
and
cmp
jmp
les
pop
adc
jg
fcmovnu
inc
sbb
mov
fstl
aas
xor
xchg
icebp
cmp
mov
jecxz
movl
test
sbb
insl
icebp
pop
ret
mov
and
cmpsb
inc
in
mov
fsqrt
lret
cli
aas
pop
inc
mov
rcrb
in
leave
stos
xor
mov
out
push
push
sub
jbe
mov
addr16
rcl
pop
xor
inc
aad
mov
repz
mov
mov
popa
or
push
jb
dec
gs
inc
xchg
sbb
or
clc
es
ja
in
and
test
out
ret
jns
fcompl
or
or
mov
dec
sbb
dec
rclb
xor
lret
gs
or
mov
sbb
sub
call
xchg
sbb
cld
push
xchg
or
bound
push
jo
sub
sbb
mov
xor
cld
pop
ret
xchg
sub
insb
dec
xchg
xchg
cs
adc
call
mov
mov
test
pop
dec
push
js
fnsave
inc
hlt
adc
cmc
pop
les
pop
fwait
clc
jbe
jne
lods
push
jecxz
xchg
int3
mov
call
lock
sbb
out
adc
ljmp
ljmp
pop
addr16
pop
mov
xor
mov
test
repnz
jns
jl
pop
lcall
jae
repz
pop
add
hlt
mov
lea
scas
or
fld
adc
mov
jno
dec
lock
ret
xchg
pop
jb
mov
call
xlat
pop
add
jo
cmp
outsl
pop
jmp
loopne
sbb
xchg
and
dec
push
mov
inc
pop
xor
mov
ds
add
inc
pop
or
test
daa
dec
dec
shrl
mov
xor
adc
xor
test
mov
aad
rcrl
mov
jbe
xor
xchg
mov
adcb
pop
in
xor
ret
ja
sbbb
js
daa
imul
clc
cmpsb
lcall
ja
aas
dec
xor
movsb
fisttps
rorb
dec
push
sti
pop
dec
movsl
lret
sbb
stos
adc
repz
cmpsb
xchg
ficoml
push
mov
xchg
sbb
sbb
inc
sbb
pop
pop
hlt
jecxz
add
jp
cmp
push
cmp
and
movsl
sub
int3
insl
mov
jg
movsl
stc
jmp
xor
ds
xchg
push
pop
fcmovbe
push
push
push
mov
add
sti
cmpsl
adc
clc
stos
mov
fistpl
mov
cld
into
gs
in
xchg
push
inc
adc
shr
mov
xor
pop
mov
popf
cltd
mov
mov
pop
adc
mov
mov
call
nop
idivb
jnp
cmp
decb
hlt
push
cmp
repz
inc
sbb
out
mov
jb
sub
push
bound
insl
pop
push
or
xlat
xchg
push
out
addr16
rorb
sbb
enter
repnz
push
and
jle
jnp
xchg
rdpmc
insb
push
add
negl
popa
inc
dec
mov
mov
cmc
jb
loope
repz
and
and
stc
sti
push
lods
add
cli
nop
and
andl
insl
lahf
and
mov
clc
cmpsb
repnz
pop
cmp
dec
hlt
and
inc
cmp
xchg
in
cmp
sarl
mov
ja
lods
fsubl
lahf
jnp
add
mov
sbb
xor
push
jns
test
push
mov
out
scas
in
or
dec
shll
andb
add
and
les
hlt
in
adc
out
xor
cmp
mov
lret
inc
sub
sti
adc
mov
sbb
mov
mov
and
cmp
ss
cmp
xor
pop
cmp
cmp
insb
add
jne
lahf
nop
sub
fdivl
push
cmp
shll
lds
notb
popa
lret
xchg
data16
stc
ljmp
sarl
push
or
fldt
push
insl
mov
and
cmpsl
xchg
scas
aaa
xor
sbb
and
out
pop
xchg
gs
cmpsb
sbb
pop
lret
fmuls
mov
or
fbstp
shrb
dec
push
loop
scas
add
sbb
xchg
enter
mov
std
ja
lcall
jnp,pt
leave
out
push
xchg
data16
shrl
das
sbb
shll
pop
in
int3
es
jp
mov
xchg
pop
and
or
xchg
cmp
es
es
movsl
push
outsb
outsb
out
movsl
mov
jl
mov
mov
bound
and
test
add
cmp
xor
stos
lahf
mov
int
aad
sbb
rorl
xorb
jecxz
dec
test
clc
bound
push
jno
add
sarl
push
add
jbe
aaa
cwtl
cmp
mov
mov
xor
cmpsl
testb
les
jl
negl
or
gs
into
mov
imul
enter
js
icebp
aas
repz
mov
jb
push
add
stc
dec
push
jo
xchg
xor
dec
ror
in
add
ret
dec
add
lock
cmc
sbb
jp
ja
negl
lds
sub
lock
pusha
pop
sbb
pushf
ret
lcall
add
sbbb
out
fiaddl
xchg
jne
sub
mov
adc
sbb
xchg
mov
lea
js
or
jno
popa
jns
or
push
mov
dec
xchg
add
mov
mov
jb
imul
loop
pop
outsb
int3
adc
out
or
scas
repnz
popf
es
lea
andb
add
xor
fs
cld
rol
sti
test
dec
push
push
dec
jo
push
cmp
push
mov
jmp
inc
out
inc
je
jno
in
pop
inc
inc
add
mov
movsl
pop
sbb
call
xor
popf
sbb
out
cld
scas
jns
nop
sub
sbb
lds
mov
lods
fsubs
sbb
mov
das
aaa
lcall
cmpsb
and
js
lret
std
mov
fadd
sarl
nop
sarb
sti
fs
jns
push
push
test
je
lcall
lret
xchg
cmp
imull
fbstp
cmp
iret
ret
out
shr
or
inc
int
pop
push
call
dec
push
mov
test
cmp
sbb
in
mov
mov
ja
icebp
add
dec
out
xchg
fisubs
inc
call
push
loopne
mov
sub
insl
jmp
imul
ss
adc
lret
repnz
inc
jle
out
fwait
daa
or
mov
shlb
or
jb
xchg
jp
roll
dec
into
lods
mov
repnz
sbb
les
mov
in
jb
mov
jp
loopne
xchg
adc
addr16
xchg
mov
stos
shl
cmp
insl
shlb
popa
or
fwait
out
adc
xchg
imul
test
fadd
mov
enter
mov
lret
xchg
inc
sbb
xchg
xchg
sub
decb
loopne
inc
aad
int
mov
repz
jne
ret
add
cmp
idiv
out
or
lods
bound
pop
jp
lret
jbe
xchg
jae
stos
jp
mov
xor
xor
jecxz
push
stos
ja
mov
outsl
pop
cld
ret
int3
xchg
hlt
sbb
ss
push
insb
sarb
sbb
insb
sub
mov
enter
xchg
sbb
out
xchg
inc
sbb
repz
imul
push
in
xchg
mov
lods
cs
testl
sbb
rclb
add
orb
dec
idivl
push
scas
aaa
aam
ljmp
cwtd
push
scas
es
xchg
les
testb
sbb
int3
jg
mov
test
call
jle
add
and
cvtpi2ps
stos
out
jle
adc
sti
pushf
adc
aas
enter
arpl
push
repz
fwait
loope
stc
dec
xchg
add
insb
iret
cwtl
or
mov
mov
xorb
adc
mov
lods
aad
mov
neg
lea
jge
insb
test
mov
int3
inc
loope
outsl
mov
lahf
aaa
imulb
outsl
mov
adc
addr16
clc
fidivl
clc
dec
push
leave
jb
ds
sub
adc
repnz
ficompl
fdivrs
ficompl
inc
dec
pop
sub
out
pop
pop
testb
cmp
mov
outsb
add
nop
adc
jne
aaa
mov
nop
dec
sub
das
add
mov
mov
fbstp
pop
pusha
xchg
xor
pop
ret
imul
fnstenv
mov
inc
clc
mov
cmpsl
pop
or
mov
test
push
xor
or
sbb
lods
shlb
cmpsb
xchg
mov
cmp
cmpsb
fisttpll
ss
scas
in
dec
dec
in
test
xchg
add
into
jge
sarb
mov
cmpsl
add
mov
repnz
rclb
push
sbb
pop
lea
loop
or
jae
int
imul
dec
mov
stos
loop
mov
pop
movsl
les
sbb
or
rcrb
sahf
into
std
movl
fdiv
js
inc
xor
xchg
ret
jb
cltd
pop
popf
js
fnstcw
xchg
mov
cltd
sbb
sarb
in
loop
cmc
loop
cmp
and
xchg
and
fists
mov
or
ss
push
aam
xlat
push
sub
or
add
jp
test
and
jl
loopne
imul
inc
inc
and
push
test
scas
cmc
push
mov
pop
shl
xor
leave
jno
pop
int3
cmpsb
push
sbb
push
inc
dec
push
rolb
or
xor
scas
mov
cmp
inc
fistps
cs
inc
pop
adc
enter
fiadds
rcrl
insb
lret
cmpsl
mov
mov
push
xor
lods
push
cltd
lcall
dec
jbe
insb
imul
and
xchg
ret
test
lock
int
inc
loope
jp
sbb
lcall
fidivrs
call
mov
aad
sub
dec
ja
popaw
iret
orl
in
cmp
orb
adc
hlt
ja
mov
sbb
cli
arpl
pusha
xchg
mov
outsl
xchg
mull
cmc
and
xlat
rcrb
jo
test
adc
add
add
jg
out
sbbb
outsl
sbb
or
lcall
js
xor
pop
aaa
hlt
cli
fmull
pop
pushf
push
add
adc
ljmp
fisttps
xlat
jns
orl
mov
sbb
jle
leave
xchg
int
add
xchg
xchg
popa
fldt
mov
mov
cmp
les
jg
std
xchg
scas
adcl
scas
mov
cld
pop
hlt
push
jns
pop
push
inc
std
clc
add
clc
lahf
push
js
ret
and
push
cs
push
dec
cmc
les
mov
mov
pop
lahf
mov
aaa
sbb
outsb
pop
repz
rclb
in
or
jle
mov
sub
movsl
or
imul
mov
aaa
mov
mov
xor
gs
insl
sub
aas
decl
out
bound
cmpsb
push
mov
repnz
gs
out
movsl
insb
rcrb
pop
adc
and
je
sub
xchg
out
mov
xchg
int
cltd
sbb
ljmp
orl
and
mov
and
adc
inc
inc
inc
out
add
xor
cmovns
insl
sbb
sbb
bound
ja
lret
cmp
fbld
pop
lods
pop
and
and
dec
cmp
xor
subb
insl
push
mov
test
sub
mov
int
mov
jp
sbb
cmp
push
in
pop
xor
pop
int3
cmp
ffreep
daa
adc
add
sar
or
mov
addr16
sbb
xchg
add
movsb
add
adc
mov
loopne
arpl
scas
inc
into
mov
pop
mov
cmpsb
gs
fmul
adc
int3
push
or
test
xchg
jne
imul
and
notl
aas
mov
pushf
out
int3
push
arpl
mov
ficoms
cmpl
jp
ret
fisttpl
fadds
es
loopne
mov
enter
add
fisubs
je
dec
cld
psubusb
mov
pop
ss
xchg
dec
testb
and
lahf
pop
popf
and
addr16
or
imul
mov
push
mov
ja
imul
add
mov
sti
faddp
ss
out
lret
cmp
enter
inc
iret
ret
or
popa
cmpsl
ja
xor
and
add
punpcklbw
push
test
jo
iret
popa
arpl
jl
leave
cmpsl
addr16
repz
int
and
adcb
imul
out
mov
call
adcb
cmp
cmpsl
push
fisubs
scas
fcom
push
sub
sti
cli
push
cld
mov
sbb
mov
rcl
or
int3
movsb
add
or
mov
shll
pop
mov
mov
into
push
pop
and
cmp
sbb
mov
or
xchg
jmp
test
inc
dec
inc
mov
mov
psllw
sub
test
sub
push
out
xor
or
aaa
adc
fcomp
mov
sub
ret
sub
clc
lock
fcmovnu
dec
jo
lcall
xchg
daa
adc
push
fimull
pop
adc
aam
xor
fcomip
rcll
xchg
inc
imulb
add
enter
scas
xlat
das
lods
data16
clc
imul
mov
sub
pop
push
out
loopne
sbb
ljmp
inc
repnz
gs
hlt
cmp
or
popa
mov
and
lea
maxps
dec
loop
or
pop
lds
imul
jo
fwait
xchg
mov
pop
out
dec
popf
adc
pop
popf
fisubs
sbb
dec
and
xorb
inc
les
mov
xor
add
or
test
or
sbb
outsl
cmp
and
addb
dec
cwtl
push
stos
fbstp
aam
and
pusha
je
jno
imul
je
push
ret
mov
leave
stc
jns
lahf
xor
cmp
adc
movsl
test
lea
sbb
mov
icebp
push
fcoml
call
sbb
xor
cmp
push
stos
pop
stos
and
cs
inc
add
mov
enter
cmp
xlat
push
add
test
insb
mov
xchg
inc
jns
jnp
aaa
push
cmp
xchg
loopne
repz
bound
aam
ds
add
xchg
lret
jae
mulb
mov
leave
mov
jg
sbb
dec
shr
cwtl
ret
into
in
out
in
das
sar
and
sbb
popa
xchg
xchg
hlt
cmpsb
orl
pop
mov
sbb
shll
add
mov
xchg
gs
lods
sub
dec
fcmovnbe
xchg
mov
ret
in
jl
jmp
popa
mov
jge
mov
out
mov
mov
stc
adc
mov
pop
push
mov
inc
movsl
or
and
das
xchg
dec
repnz
push
stc
cmp
out
xor
mov
sub
ror
imul
adc
fmull
lods
cmp
aaa
sbb
test
cmpsl
lods
jecxz
mov
imull
outsb
inc
or
into
pop
xchg
lret
cmp
lods
mov
clc
sbb
push
xchg
movb
subb
ret
pop
xor
in
rcll
cmp
mov
mov
dec
das
test
and
mov
add
xor
mov
popf
jmp
lock
movsl
mov
aas
inc
jecxz
dec
xchg
sub
cmp
dec
hlt
xchg
xor
cltd
mov
jmp
aad
cmp
push
mov
inc
add
int
mov
cmp
roll
sarl
xor
and
cs
test
roll
or
cs
lcall
adc
sub
jge
outsl
loopne
push
sub
jne
loope
pop
std
jmp
cmp
add
cli
sub
inc
cmpl
test
jb
xor
inc
imul
push
das
jle
loop
fs
out
sub
rcrl
mov
ja
push
popf
or
jno
jmp
add
or
rorl
xchg
mov
dec
jbe
scas
push
test
es
jle
loop
mov
test
push
testl
adc
fwait
mov
ljmp
jns
idiv
rclb
mov
in
mov
in
cmp
add
inc
cmc
cs
add
mov
bound
adc
or
pusha
dec
imul
rorl
nop
add
mov
cmc
das
ss
mov
cli
imull
stos
rolb
inc
out
mov
std
xor
in
dec
jecxz
les
adcb
ljmp
xlat
add
popa
add
sub
jno
jnp
movsb
mov
or
iret
xor
push
outsl
call
in
xor
dec
mov
lret
and
rcrl
enter
lods
xor
in
dec
test
subb
xor
cmpsb
loope
pop
hlt
ds
loope
dec
ljmp
cmpb
movsb
les
pop
fstps
mov
fldt
xchg
les
popa
push
or
adc
dec
andl
sub
popa
sub
icebp
xchg
dec
sti
lcall
cltd
jle
cwtl
adc
ror
push
mov
dec
notb
ret
pop
inc
mov
loop
rep
mov
adc
xchg
arpl
movsl
shlb
aad
pcmpeqd
arpl
adc
test
mov
ret
ds
xchg
cmc
xchg
jae
sbb
lods
adc
fwait
dec
or
mov
add
xchg
pop
loop
fdivrl
in
jbe
sbb
add
or
in
aam
loope
mov
mull
out
ret
pop
dec
sahf
mov
cmc
mov
icebp
and
sbb
dec
mov
popf
mov
fcmovnbe
jo
int
out
push
test
xor
add
mov
sbb
lods
jb
dec
out
cwtl
adc
cmpsb
pop
fstps
loop
dec
adc
xor
mov
bound
push
sub
test
outsb
ret
cmp
xchg
xor
sbb
int
fdivrl
pop
add
aam
mov
lahf
mov
fstpt
aam
inc
lock
clc
or
ja
or
syscall
adc
fidivl
out
xor
lahf
stc
shrl
dec
test
lock
mov
or
mov
adc
jns
add
repz
jno
mov
adc
fidivrl
mov
and
popf
std
daa
out
xchg
push
inc
shll
popa
jae
arpl
jne
je
pop
dec
pop
xor
test
scas
and
divl
sub
out
pop
jo
lret
and
test
out
loop
and
or
rorb
fsubl
lahf
mov
mov
push
and
adc
ret
pop
mov
mov
clc
push
pop
stos
xchg
xor
inc
orl
out
xor
aaa
jbe
mulb
inc
scas
in
test
sbb
mov
push
mov
mov
or
mov
frstor
sbb
lods
xor
adc
adc
sub
mov
push
jns
cmp
fcom
jb
mov
sub
aaa
cli
fcmovnbe
cltd
out
pop
cmpb
outsb
xor
dec
lret
jbe
imul
imul
push
andb
std
dec
divps
jne
mov
pop
inc
ret
out
jmp
mov
scas
and
xchg
pop
sbb
lea
subb
out
aas
mov
mov
and
not
out
adc
and
mov
mov
aam
jle
dec
sbb
movsb
and
inc
jnp
std
cmpsb
xchg
push
cs
les
mov
faddl
je
mov
enter
iret
movsl
in
mov
inc
cmp
push
and
xor
push
jecxz
popf
cmp
ficomps
mov
add
mov
stos
les
adc
push
mov
arpl
addl
test
xchg
jno
sbb
and
adc
das
mov
mov
out
in
xor
push
cli
pop
mov
dec
out
lds
pop
mov
xor
mov
push
or
jecxz
cmp
jne
int3
sub
stos
scas
imul
push
push
rorb
add
or
fldcw
jbe
js
fdivr
and
push
lods
lret
fmull
jge
fstl
je
aad
sti
jbe
sub
lods
das
mov
push
fnstcw
push
lahf
nop
jbe
test
jp
out
pop
les
jl
cli
jp
lock
jp
cmp
pushf
stc
hlt
mov
addb
pop
test
xor
mov
cli
int3
and
cmp
rorb
push
cmpsl
mov
bound
lods
leave
xor
mov
sbb
push
push
aas
sbbl
sbb
dec
push
mov
jb
sub
repnz
xor
push
hlt
cmp
out
jp
add
mov
push
jp
adc
jnp
jbe,pt
in
in
xor
push
fsubs
inc
adc
test
mov
mov
inc
xchg
pop
xchg
or
shl
cmpsl
mov
push
and
mov
and
les
cmp
inc
stos
jae
loopne
mov
jle
cli
je
dec
loop
sbb
cmp
negb
xlat
int3
inc
xchg
je
cltd
shll
inc
fs
inc
pop
mov
ds
jp
mov
mov
and
xor
gs
lret
push
jb
stos
mov
lock
adc
shl
sti
lret
leave
nop
sub
xchg
jmp
push
push
mov
jae
pusha
into
js
out
divl
cmc
mov
mov
popa
push
out
sarb
dec
xor
and
mov
ja
sbb
inc
loope
xor
add
jge
fstpl
pop
xchg
cmp
push
jmp
xchg
out
inc
outsb
push
cwtl
cwtl
aaa
mov
stos
stc
sbb
cli
icebp
inc
xor
jl,pn
mov
icebp
pop
popf
arpl
cmp
dec
and
test
loope
xor
pop
lds
mov
fnsave
cmp
movsl
movsl
jo
gs
pop
jecxz
data16
jb
mov
push
or
pop
pusha
jle
sti
loope
mov
pop
mov
insb
sbb
jno
dec
std
sbb
mov
pop
fnstcw
xor
jae
pusha
xor
out
jo
mov
jg
and
bound
dec
dec
add
sub
es
jl
dec
pushf
mov
xor
fists
lret
sub
mov
add
jo
sub
push
xorb
cmp
shlb
sahf
ret
mov
ret
bound
cmp
xlat
jne
icebp
es
nop
fistpl
pop
inc
repnz
pop
je
xchg
daa
je
adc
or
add
mov
in
insl
mov
mov
loopne
xchg
les
xchg
clc
add
mov
incb
lds
cmc
test
shl
test
xor
out
inc
cmp
push
adc
pop
push
aas
push
mov
xor
sbb
inc
mov
rcl
cmp
jbe
xchg
pop
sbb
scas
ret
adc
or
xchg
xchg
cmp
lds
inc
jmp
mov
inc
fnsave
jb
adc
xchg
mov
rol
dec
jno
sub
inc
xor
xchg
xor
jnp
sahf
imul
xlat
jno
jle
movsb
mov
dec
dec
inc
and
out
movsb
out
aas
ret
iret
sbbl
rorb
mov
mov
ja
lock
pop
cmp
stos
sbb
dec
jnp
mov
stos
sbb
push
mov
adc
stos
out
mov
dec
daa
dec
lods
dec
repz
pusha
jl
dec
xchg
sbb
jmp
je
adc
cmp
push
lret
xor
sahf
in
jne
popa
das
mov
lahf
push
jno
arpl
rcrl
imul
sbb
repnz
es
call
jecxz
ds
cwtl
pop
sahf
cmpsb
dec
aam
pop
pop
and
jo
jl
mov
stos
psubd
cmpsl
pop
outsl
or
sbb
xchg
pop
addr16
mov
xor
cmp
and
cmpsb
mov
in
inc
pop
das
inc
gs
std
popa
gs
jp
or
add
jl
xchg
jge
inc
jno
jno
js
loopne
pop
xor
pop
sub
imul
xchg
andb
mov
in
movsl
cld
add
mov
xchg
push
pop
push
jl
mov
faddl
pop
pop
fst
dec
mov
mov
outsb
xor
aam
push
sahf
dec
dec
andb
outsb
mov
mov
jecxz
pusha
or
loope
pop
or
pop
out
push
or
add
mov
mov
iret
xchg
test
sub
dec
xchg
add
cmp
insw
mov
jecxz
clc
add
sbb
iret
sbb
dec
ror
push
cld
movsb
stos
jl
repnz
mov
orb
jno
mov
push
int3
cmpsl
fcmovnu
xorl
sbb
push
cmpsb
mov
sahf
scas
aam
cmpb
pushf
aas
mov
or
es
je
sub
mov
loope,pt
decl
cmpsb
notb
mov
cwtl
in
mov
jbe
sub
sbb
fwait
dec
loop
pop
push
xor
jnp
inc
jecxz
aad
inc
jne
pusha
test
lret
mov
or
lret
gs
adc
mov
fcoml
mov
and
mov
xlat
push
lret
stos
imul
pop
fldcw
nop
adc
stos
cmppd
test
stc
cmp
subb
loop
repz
pop
push
cmc
or
fld
loopne
adc
inc
outsb
sub
sahf
mov
fs
xor
dec
dec
or
fsubs
jb
or
aaa
and
pop
lret
pop
xchg
cmp
adc
adc
cwtl
cmp
xchg
add
outsl
iret
gs
add
jno
push
out
inc
insb
sbb
xchg
lods
inc
sbbb
adc
ret
dec
adc
mov
cwtl
fistps
and
hlt
imul
fwait
nop
test
stc
jae
stos
jne
or
cmp
mulb
aad
ljmp
stc
pusha
push
lahf
es
out
cli
xor
subl
adc
addl
inc
ljmp
call
popf
sahf
pop
jne
imul
add
rcll
ds
mov
enter
inc
add
hlt
fidivrl
adc
sti
out
ror
in
sbb
enter
adc
sbb
lea
xchg
es
in
pop
push
cmp
xor
xor
or
loop
or
sbb
mov
enter
test
ds
inc
add
dec
daa
and
dec
clc
mov
xlat
ret
pop
push
imul
cmc
push
pop
inc
dec
sub
lods
out
cmpsl
dec
daa
jns
fxch
cmp
mov
pusha
mov
jb
xchg
jecxz
lea
adc
repnz
mov
es
mov
lcall
repz
jne
mov
sbb
jae
mov
mov
pop
dec
loopne
mov
mov
adc
stos
push
and
int
push
in
jmp
mov
insb
fidivrs
cltd
add
or
cltd
int
mov
inc
test
popa
add
pop
cmc
icebp
push
ljmp
inc
rcrb
icebp
cli
in
lcall
push
mov
dec
pop
popa
mov
and
mov
pop
jmp
pop
sub
pusha
std
push
shlb
shr
push
cs
iret
jge
fstpl
daa
and
cltd
mov
movsl
fiaddl
lea
hlt
sarb
fwait
mov
push
mov
lock
dec
push
into
or
jno
sbb
jle
jne
xor
push
xchg
shll
pop
sbb
sbb
sbb
int3
and
addps
std
pushf
fcmovb
repz
filds
push
mov
aas
outsb
rcrl
fdivr
fcomip
out
int
call
into
aad
rorl
gs
jmp
rcl
and
imul
orl
rclb
push
mov
mov
mov
dec
sub
or
fstps
push
das
or
insb
shlb
repz
jno
mov
push
and
inc
cmp
sbb
inc
cmp
cmp
xor
insb
stos
push
and
xor
mov
cwtl
inc
out
rcll
lret
rolb
rcrb
pop
xchg
ret
mov
xchg
popa
adc
inc
cmp
mov
andb
xor
push
xchg
sub
testl
jae
mov
cmp
xor
ret
je
lods
test
hlt
iret
popf
dec
push
dec
mov
lahf
and
mov
and
dec
aaa
sbb
push
movsl
loopne
pop
cli
test
mov
cmp
into
insb
pop
int
imul
push
mov
pop
jg
fdiv
jge
or
pop
push
mov
fcoms
push
in
jbe
call
push
and
sub
sub
or
inc
shl
mov
xlat
clc
aad
arpl
or
and
inc
mov
or
in
imul
push
aad
inc
adc
xor
fst
test
sub
stos
sub
lahf
or
adc
addr16
xorl
sbb
add
add
push
mov
and
mov
dec
imul
mov
cli
xchg
shll
jg
add
push
or
cmp
xchg
push
inc
lcall
jmp
scas
jne
jle
and
out
mov
adc
cs
adc
xchg
inc
das
pop
int3
cli
and
lods
mov
push
pop
xor
sub
ja
fnsave
inc
mov
cli
inc
push
dec
cwtl
cwtl
xchg
aas
pop
test
mov
xchg
inc
test
pop
roll
cmp
decl
les
ja
and
push
cmp
fsubl
sbbl
xor
sbb
jecxz
out
dec
and
cmp
out
insl
imul
mov
sarl
stos
testl
xor
pop
sub
lods
add
test
lret
jmp
and
aas
mov
and
jno
clc
pop
lock
cmp
or
mov
insl
in
inc
popl
xor
xor
mov
in
xchg
xlat
mov
mov
push
fsubrs
jne
or
or
pop
push
jae
enter
pop
xor
fcomip
rolb
xchg
lea
xlat
add
mov
push
in
leave
dec
mov
cmpsl
mov
jle
scas
jno
inc
mov
ljmp
pushf
into
xchg
sub
in
lret
imul
jge
rcrb
pop
in
insl
movsl
cmc
xchg
cmp
loop
jns
ror
add
stc
rclb
dec
inc
test
ja
mov
fwait
pushf
sbb
bound
inc
popf
pop
xor
pop
add
sti
pop
mov
jnp
push
cltd
adc
aam
adc
mov
lds
stos
clc
das
inc
mov
xchg
sbb
jl
andl
int
insb
loopne
push
xchg
test
enter
push
imul
repz
rorb
pushf
xchg
adc
mov
mov
subb
mov
in
xor
movsl
mov
pop
cmc
rorb
and
xchg
push
sub
or
pop
sbb
or
pushf
jge
aas
inc
cmpsl
xchg
mov
or
or
jecxz
mov
in
dec
shlb
push
pop
dec
aam
mov
repnz
inc
leave
push
andl
adcb
push
imul
in
jo
xchg
in
mov
mov
int
repnz
scas
or
fildl
jae
mov
je
mov
int
mov
and
stos
and
inc
mov
imul
lahf
out
sub
outsl
fs
daa
add
popf
fnstenv
or
das
dec
nop
or
ja
aam
and
inc
pop
sub
sub
sbb
mov
fdivs
sbb
cmp
lea
jns
inc
jl
inc
cs
mov
cmp
je
orb
ljmp
pushf
shll
les
stos
xor
mov
cmp
jns
cwtl
add
push
jb
data16
loope
call
jp
jp
outsb
xor
pop
fcoml
sarb
jns
rcl
shrb
imul
cmpsl
bound
sub
push
sbb
aam
jle
pop
call
pusha
cmp
sub
and
dec
stos
dec
jb
xchg
jecxz
stos
nop
sbb
popa
mov
xchg
sbb
push
cmp
push
mov
mov
dec
inc
pop
mov
dec
jns
lods
ficompl
iret
fstpt
sub
hlt
pop
jmp
add
out
fsubrl
xlat
fcomip
or
cli
adc
shrb
lret
outsl
fists
mov
dec
cmp
jae
and
add
add
mov
pop
addr16
sub
dec
iret
mov
shll
stc
dec
cwtl
insl
xchg
shrb
out
or
adc
ret
test
js
push
dec
pop
mov
add
ds
dec
cmp
mov
push
mov
pop
sub
xor
pusha
mov
sbb
cmpl
xchg
imul
add
inc
and
pop
push
ret
nop
adc
mov
jg
push
and
ret
stos
out
pop
mov
inc
loope
sbb
fisubrs
push
cmc
enter
call
sbb
fdivs
pop
shl
or
xor
pop
push
pop
jmp
in
mov
jb
cltd
pop
nop
jbe
frstor
jbe
outsb
push
int
jne
push
insl
jmp
xchg
inc
inc
fnstsw
xchg
scas
mov
ljmp
lret
xor
sub
adc
dec
sti
pop
push
inc
je
jae
mov
fptan
rorb
test
adc
jg
out
add
push
xor
std
jg
fs
add
insl
ficomps
dec
xor
lahf
in
mov
or
mov
call
fs
or
rclb
mov
xchg
push
push
pop
testb
or
and
repz
into
pop
cli
movsb
cltd
subb
sub
in
fadd
add
jnp
jbe
jp
dec
sbb
lods
loopne
jns
sub
jae
fildl
push
adc
fidivrl
insl
subl
aam
add
jl
jo
inc
mov
xchg
jmp
and
adc
xor
mov
xor
inc
test
iret
lds
cmpsl
mov
jge
sbb
dec
jno
test
out
inc
push
andb
add
dec
mov
xlat
add
jmp
dec
movsb
xchg
ficompl
scas
je
lea
xor
sub
sub
xor
clc
popf
or
sub
into
aas
std
ror
jge
dec
gs
lret
gs
icebp
xchg
mov
mov
rorl
cmp
or
adc
cmpb
push
adc
loop
dec
jle
and
setns
js
fmull
and
mov
test
xor
dec
jbe
out
xchg
jnp
pop
in
mov
mov
sbb
int
in
ja
data16
mov
das
icebp
stos
mov
cmp
mov
int
call
or
dec
jmp
mov
in
jbe
and
mov
movb
lret
test
jl
lea
mov
mov
sub
arpl
orb
xor
mov
loope
test
loope
xchg
sbb
std
or
mov
xor
push
dec
sbb
xlat
mov
add
and
fbstp
insb
rorl
pop
xor
in
decl
mov
iret
cmc
mov
push
cmp
test
inc
inc
jnp
lcall
out
mov
ffreep
jno
sub
dec
lahf
sub
xlat
int
jbe
mov
jmp
pop
lahf
shr
mov
cmp
ja
int3
mov
pusha
mov
mov
cmp
inc
cmp
jno
cltd
xchg
jl
xchg
xor
mov
cmc
sbb
push
js
stc
mov
in
int3
adc
test
fwait
add
hlt
sub
fdivs
leave
movsb
cmpsb
xchg
cmp
mov
dec
repnz
cs
js
pushf
stc
push
mov
push
pusha
fwait
sbb
repz
mov
test
jmp
mov
or
sub
ds
inc
jg
xor
cs
xchg
cmc
cld
fs
sbb
add
mov
leave
mov
fdivrp
clc
adc
shrb
mov
lahf
inc
xchg
orl
inc
ds
dec
xor
jne
jae
mov
cli
fisubl
bound
add
mov
jae
or
je
jl
dec
jge
out
jnp
dec
not
add
movsl
inc
pop
shlb
pop
push
lock
sahf
xor
pop
bound
jae
sbb
test
fdivp
or
sub
jle
mov
dec
push
outsl
mov
cli
in
int
pop
push
add
pop
dec
dec
mov
int3
ljmp
imul
dec
jne
sub
pop
inc
mov
adc
ss
aaa
fsubrs
xchg
jnp
jecxz
cmc
ret
push
xchg
lret
push
scas
mov
fucomp
stos
push
sub
inc
ss
sbb
cmp
add
out
in
mov
cld
push
push
imul
mov
jb
std
pop
rol
das
je
and
adc
rcrl
lock
data16
hlt
dec
arpl
cmp
popf
mov
ds
filds
dec
mov
cmp
pusha
test
ljmp
jge
aaa
jb
popf
rcr
dec
and
outsl
rorb
orl
jno
daa
movsl
int
or
jmp
xor
cmpsl
lahf
jae
js
jmp
or
jo
cli
fisttpl
and
xor
and
add
loope,pt
mov
push
mov
cmp
pop
adc
decl
cmp
stos
jbe
xchg
mov
inc
sub
cmp
dec
adc
jg
cmp
or
pushf
jno
xlat
roll
mov
xor
lret
jo
mov
cmp
and
je,pn
sub
dec
mov
sbb
cld
imul
jns
sbb
push
lock
lcall
jmp
xchg
std
inc
fsubs
add
sti
mov
sub
mov
pop
into
push
inc
mov
lods
cli
lea
jnp
mov
xchg
daa
arpl
inc
jmp
push
sarl
fidivrl
out
loopne
mov
dec
mov
dec
mov
dec
sbb
loopne
nop
inc
dec
movsl
imul
and
xchg
jno
lahf
cmp
adc
adc
insl
xor
or
enter
daa
imul
mov
jp,pt
and
xor
sbb
rolb
push
sub
push
repnz
movsw
das
pop
jb
dec
popa
in
mov
icebp
push
movsl
pusha
loopne
xor
mov
icebp
jbe
jo
cmp
or
hlt
out
jb
sub
cld
sub
call
ret
mov
and
iret
xchg
sub
sub
sbb
xor
cs
fisttpl
divl
inc
or
add
or
mov
dec
pop
test
clc
xor
test
mov
es
iret
sbb
or
dec
enter
sysret
pusha
mov
mov
jl
and
cmp
in
cli
add
std
mov
sub
push
in
adc
or
cs
and
pop
cld
insb
jl
mov
popa
sbb
into
lret
mov
shlw
decl
pop
dec
daa
aaa
jno
aas
sarl
adc
test
xchg
jl
push
push
jl
scas
push
jge
xchg
nop
call
into
push
sahf
hlt
inc
imulb
inc
and
push
je
scas
and
dec
or
pop
add
pop
xchg
sub
xor
xchg
jns
add
cmp
test
adc
jmp
push
cmpsb
std
in
jb
jno
xchg
jmp
inc
sub
in
rcl
inc
inc
cltd
sub
mov
jnp
sub
mov
push
cmpsl
pop
xor
les
cmpsl
jp
std
daa
shl
pop
add
inc
cmp
or
pop
jecxz
repz
stos
pop
pop
clc
hlt
in
push
aad
ss
cs
adc
into
loope
xor
cli
xlat
cli
push
cltd
mov
sbb
aam
adc
adc
rorb
dec
repz
les
stos
lea
js
mov
movb
or
cld
dec
mov
dec
daa
push
lcall
sub
dec
sarl
mov
mov
test
sbb
enter
mov
mov
leave
sub
mov
xchg
jno
arpl
int
sbb
lods
mov
in
add
push
xchg
mov
pusha
mov
fmull
in
sbb
jnp
inc
aad
mov
add
movsl
adc
add
out
iret
pop
lods
xchg
inc
int
aam
call
cmpl
or
inc
scas
in
cmp
loope
jmp
stos
dec
dec
xchg
nop
sub
fcomp
sbb
dec
fldl
andl
xchg
popa
or
inc
aas
mov
stc
mov
mov
ret
movsl
pop
inc
add
pusha
lret
test
enter
xchg
sub
cmp
popa
fsts
jo
fnstsw
int3
fists
xchg
cli
mov
cmc
ljmp
add
and
sub
xor
mov
scas
in
push
jo
lret
lret
jg
inc
mov
xor
cmpsl
jns
lcall
cmp
xchg
cld
jle
xlat
imul
add
xlat
loop
cwtl
sbb
jmp
mov
mov
add
cltd
sbb
jp
mov
fnstcw
ljmp
jl
fnsave
fcompl
push
add
pop
push
xlat
shl
fcmovbe
hlt
or
jns
adc
test
xor
imul
cmp
cmp
ljmp
mov
dec
push
dec
in
fwait
jb
outsl
dec
xor
clc
jle
in
push
sbb
sbb
ja
idivb
adc
bound
icebp
inc
rclb
pop
rcl
mov
stc
scas
mov
out
out
mov
int
lret
jecxz
lret
mov
ljmp
in
sti
out
sbb
xchg
sub
es
test
in
sbb
xor
pushf
xchg
or
aam
or
push
mov
xor
dec
jle
lds
incl
addr16
cmpsb
pop
or
movsb
cmp
xor
push
jbe
lock
xlat
xchg
dec
pop
popa
jae
nop
and
cmp
adc
cmpsb
xchg
pop
sbb
pop
add
sahf
fcoml
jle
inc
jbe
popa
push
int
push
push
popf
fldenv
jecxz
data16
scas
sbb
sti
jecxz
pushf
les
xlat
mov
add
pop
and
jnp
clc
es
push
jno
adc
lods
mov
pop
dec
and
shlb
pop
mov
cmc
imul
mov
shlb
lret
dec
decl
jo
mov
dec
add
or
mov
dec
jo
loope
jne
repnz
fisubrl
jecxz
xor
clc
outsb
pushf
pop
and
xchg
sbb
lods
mov
sub
xor
jmp
out
mov
or
xor
jns
test
add
rclb
test
mov
into
out
shlb
mov
cs
sub
jnp
mov
int3
dec
out
pop
pop
in
add
adc
aad
cmc
int3
add
sbb
and
lea
pop
adc
push
xor
movsl
imul
sahf
out
pop
lds
movsl
les
js
out
sbbl
scas
frstor
inc
xchg
dec
arpl
inc
es
jl
cld
in
jge
int3
aaa
inc
idivb
fs
dec
scas
stos
or
cwtl
xor
inc
push
iret
imul
aam
and
adc
stos
fs
outsl
push
repnz
jae
repz
cmp
sub
inc
push
or
adc
and
outsl
outsb
in
lea
cmp
mov
shll
pusha
dec
fidivrl
int3
imul
mov
popa
xchg
xor
mov
cld
sub
popf
loop
test
js
dec
and
rolb
or
lcall
pop
mov
xchg
or
mov
int3
out
subl
pop
adc
into
test
mov
test
adc
stc
jl
stos
sub
ffreep
mov
adc
mov
data16
xor
ficompl
jnp
arpl
xchg
in
inc
ljmp
lcall
imul
mov
es
push
leave
cmp
dec
pushf
adc
shrb
jl
ficomps
xchg
mov
mov
sbb
jns
lods
leave
mov
notb
lret
ja
inc
xchg
ds
xchg
mov
sbb
xchg
or
jae
adc
push
xchg
dec
pop
and
in
add
decl
scas
mov
push
push
sub
imul
or
add
rcll
into
les
mov
mov
sub
mov
jb
fisttpl
adc
int
mov
sub
push
mov
sbb
aas
hlt
push
push
sbb
scas
add
jb
mov
loope
into
hlt
ds
icebp
hlt
cmp
loope
cwtl
sbb
shlb
scas
push
xchg
call
loopne
cld
and
cs
das
sahf
clc
idivb
imul
ds
pop
icebp
cmp
mov
subb
jl
adc
and
adc
mov
mov
push
mov
popa
mov
out
ja
adc
dec
cwtl
jno
ds
pop
dec
negl
xor
inc
roll
in
jge
jno
xor
enter
dec
les
ja
lret
add
fcomps
sbb
call
int3
pop
xchg
ss
lods
insb
or
cmp
out
xor
add
mov
outsl
cmpb
movups
inc
push
movsl
pushf
xor
fcoms
fldcw
push
leave
mov
xor
mov
or
add
fdivrl
fistpll
xchg
xchg
fdivrl
in
xor
xor
nop
outsl
cmp
xchg
ret
mov
loope
mov
je
insl
loop
adcl
out
mov
in
mov
add
js
loop
cmpsb
sub
sub
xor
sub
add
dec
lcall
popl
mov
lods
push
sub
xor
dec
and
add
jb
daa
int
cli
pop
mov
fisttpl
xchg
push
push
sub
int3
sub
push
or
in
ret
loop
test
mov
js
sbb
or
std
inc
push
out
pop
cmp
cmp
es
test
add
arpl
sarl
jp
cmp
popf
pop
jg
inc
aad
xor
pop
fs
mov
dec
push
sub
aad
mov
xchg
call
repnz
inc
adc
xchg
lahf
add
mov
fdivl
mov
andb
lcall
inc
loop
mov
pop
test
push
leave
insb
pushf
scas
iret
xchg
xchg
orb
lods
xchg
add
jmp
clc
into
sbb
xlat
sti
lods
sbb
call
into
ficompl
pop
xchg
test
xor
outsb
cwtl
xor
inc
roll
jo
jb
mov
inc
jnp
xchg
ja
arpl
movsl
mov
adc
push
lret
mov
rcr
push
in
jl
inc
push
test
cmp
push
test
roll
xchg
cmp
and
stos
shrl
xchg
fldcw
sarl
jecxz
cs
jle
xor
mov
xchg
loopne
mov
mov
stos
xchg
sbb
fnstcw
mov
add
and
in
mov
call
dec
xchg
push
adc
or
xchg
jecxz
sub
sub
das
mov
aas
add
sbb
insb
shlb
movsb
ja
in
dec
fnsave
jg
sarl
sti
adc
negb
inc
out
push
repz
repnz
xchg
hlt
jg
ljmp
popa
pop
add
jge
loopne
in
outsb
push
dec
and
insl
or
xor
jecxz
shlb
fldl
loopne
and
mov
ret
out
mov
adc
out
sub
repnz
mov
adc
inc
repz
cmp
inc
dec
shll
fs
pop
stos
pushf
sbb
or
push
fwait
push
add
jp
inc
sub
sub
xchg
mov
add
rorl
jmp
add
and
popf
loop
cs
pop
fiaddl
sahf
xchg
rorb
xor
xor
fcomps
out
jecxz
pop
pushf
andl
popa
fsubrs
sub
dec
test
jle
xor
test
lret
jns
sti
mov
cmp
fsubrs
push
gs
cld
stc
cmpsl
sub
xor
das
in
jmp
jp
pop
aaa
dec
sub
mov
movsb
aam
out
dec
pop
sub
sbb
enter
das
sarb
mov
or
scas
test
das
jmp
add
lods
std
xchg
in
test
cmp
lret
ffreep
popf
sahf
inc
pusha
inc
pop
cmp
jl
scas
in
lods
pop
mov
bound
imulb
psubsb
fimuls
dec
mov
xchg
or
sub
jae
clc
insl
out
push
je
je
inc
fsubrs
jo
fs
push
or
mov
frstor
and
arpl
mov
das
or
mov
test
mov
outsb
notl
lret
add
xchg
cwtl
mov
mov
fstps
mov
rorl
xchg
push
inc
adc
das
xchg
lret
sbb
bound
sbb
stos
inc
cmpsl
test
dec
je
cmp
leave
into
js
lcall
pop
sbb
pop
adc
xchg
push
add
and
std
xor
mov
imul
insl
jns
enter
or
dec
cmp
sbb
xor
test
mov
xchg
aas
jne
hlt
jno
fnsave
xor
sub
sete
sbb
xchg
inc
test
and
mov
repz
cmpsl
aas
outsb
xor
inc
pop
sub
mov
cmp
loope
pushf
and
xchg
inc
test
lret
cld
imul
adc
and
xor
push
rcr
pop
xchg
out
dec
sub
icebp
jne
push
cmpsl
cmp
or
sub
test
lock
add
sub
lahf
mov
cmpsl
and
mov
test
repz
dec
adc
dec
push
repz
movsb
fldcw
js
js
iret
es
arpl
mov
daa
std
enter
add
test
stos
or
jmp
cmp
xor
mov
sbb
jbe
push
add
repnz
mov
popa
inc
cs
mov
mov
pop
jne
add
into
int3
in
xchg
popa
mov
outsl
jns
mov
pop
loop
test
nop
nop
inc
cmp
cmp
and
movsl
adc
es
ds
arpl
pop
std
pop
fiadds
and
movl
test
add
jo
jne
std
xchg
xlat
push
outsb
outsl
ficoms
cmp
outsb
aam
cli
pop
cmp
sub
pop
xor
push
mov
push
mov
aaa
pop
loope
add
ret
push
jmp
mov
mov
xor
daa
xlat
sti
sub
test
cs
fiaddl
xchg
rcrb
pop
stos
add
loopne
stos
cmpsb
js
lret
jbe
outsl
test
dec
ss
gs
add
jne
pop
dec
push
cmp
sub
int3
scas
test
pop
aam
adc
outsb
loopne
in
adc
adc
in
clc
pushf
mov
faddp
dec
mov
push
jecxz
cmpsb
mov
cmpb
dec
subl
in
add
and
add
cmpsl
fnstenv
lock
mov
mov
cs
outsl
xor
adc
scas
push
jno
sbb
lea
lahf
mov
sbb
add
push
insb
stos
inc
notb
adc
stos
cmpsl
addb
add
dec
sub
mov
push
mov
jle
repnz
pop
repnz
pushf
pop
out
out
ds
dec
ljmp
iret
lret
popf
xchg
insl
push
ljmp
pop
push
xor
fdivrs
scas
repnz
push
push
sub
jo
test
push
ret
in
cmpsb
cld
les
mov
add
hlt
out
rcrb
loop
cltd
mov
stos
cld
fwait
addr16
mov
les
call
sbb
xchg
adc
nop
xor
dec
scas
addr16
cli
cmp
mov
into
notl
sbb
mov
je
mov
movq
pop
daa
mov
inc
fnstcw
add
std
adc
jne
sub
sbb
int
test
stc
dec
lahf
add
xchg
arpl
mov
lods
sbb
sub
mov
idivl
jns
incl
test
adc
add
sbb
aaa
mov
fwait
push
sub
or
adc
into
das
lods
sbb
movsb
imul
push
les
xchg
dec
ss
lds
lods
sub
jle
call
data16
cltd
or
hlt
mov
inc
stos
repnz
jg
mov
dec
jne
jo
and
int3
jns
cltd
jbe
es
ret
add
sbb
clc
nop
fbstp
stos
imulb
les
push
daa
add
jmp
push
les
or
xor
mov
repnz
shll
movsl
sti
push
loope
enter
push
mov
mov
std
daa
jmp
mov
mov
pop
arpl
in
sub
iret
cmp
xchg
and
adc
pop
sub
lcall
ja
cmpsl
and
fildll
pop
adc
mov
jmp
jl
loopne
mov
xchg
ficoms
pushf
test
add
incb
iret
mov
push
fildll
pop
mov
sub
xor
add
lahf
xchg
int3
mov
adc
adc
cli
sbb
xchg
xchg
inc
shlb
jne
cmpb
test
push
shll
or
cmp
clc
subl
jle
push
inc
loopne
mov
xor
adc
mov
jns
pop
inc
sbb
fnstcw
fdivl
dec
ficomps
jg
js
cmp
cmp
jo
inc
add
das
in
addb
mov
push
xchg
imul
sbb
push
sbb
test
sbb
jmp
ja
bound
mov
sub
rcrb
mov
mov
mov
mov
imul
data16
icebp
xchg
es
jmp
mov
imul
mov
mov
push
arpl
cmp
dec
filds
pop
push
pop
push
cwtl
cmpsb
int
push
iret
test
into
pop
mov
lret
stc
adc
mov
loop
rorl
mov
mov
negb
movsl
test
push
out
negl
xor
repnz
popf
sbb
aad
xchg
sub
scas
xchg
sbb
in
aam
pop
pop
or
mov
or
pop
mov
js
aaa
dec
test
xor
out
cmpl
sbb
cmpsl
stos
push
insl
pop
lock
aaa
cmp
popf
jnp
fmuls
jno
arpl
rcl
push
jne
inc
arpl
adc
dec
cmp
sbb
bsr
imul
push
push
xor
pop
decl
add
jno
scas
jne
mov
xlat
sbb
pop
mov
loopne
jecxz
ret
daa
jmp
sbb
imul
xor
lds
cli
sub
dec
int
stc
repz
ficoms
and
sahf
ret
orb
push
jecxz
jg
cmp
hlt
adc
loop
test
das
xor
mov
xor
lcall
subb
hlt
inc
sbb
test
popf
mov
in
push
cwtl
fisubl
or
loope
mov
mov
inc
jle
pop
mov
jl
pusha
mov
mov
lods
pop
mov
and
ljmp
add
inc
xor
cltd
pushf
leave
pop
xor
pop
test
out
xor
mov
lods
jo
fldt
loope
pop
lods
fldenv
aam
call
xchg
fbstp
sub
filds
add
pop
ja
daa
pop
shlb
aad
jp
push
add
cli
scas
movsb
in
scas
xchg
inc
lock
and
jle
mov
push
stos
push
xchg
push
cmpsb
bound
mov
jp
dec
xor
jmp
sbb
pop
arpl
dec
fwait
jle
adc
push
test
cmp
adc
push
sbb
aad
and
gs
sub
xlat
pop
inc
outsl
xor
lret
jle
stc
mov
jge
into
loopne
inc
ds
arpl
in
fidivrl
and
test
test
push
push
data16
imul
fcoms
or
jmp
outsl
jne
push
fdivrs
les
pop
sbb
jp
stc
insl
js
incb
iret
enter
hlt
mov
mov
inc
pop
cmp
loop
out
or
xchg
in
lods
xor
in
das
cmp
idiv
adc
pop
mov
test
pop
push
mov
xchg
pop
psadbw
jbe
fucomip
push
pop
cmp
sub
push
dec
leave
pushf
cmp
xor
and
adc
cmp
cmp
fsubr
shl
mov
inc
pop
dec
inc
sbb
pop
and
aaa
lahf
bnd
fwait
ret
hlt
movl
iret
add
sarl
mov
or
pusha
inc
and
inc
mov
add
ret
push
pop
inc
pop
sbb
stos
cmpsb
rep
add
xchg
data16
and
add
push
arpl
sub
and
inc
jmp
jbe
push
jl
xor
xor
aaa
out
push
jbe
xor
out
mov
inc
sbb
jnp
sbb
mov
lahf
inc
pushf
add
pop
jo
or
xor
arpl
dec
fnstsw
pop
pop
adc
ja
inc
fs
ss
pop
jge
xlat
ret
sub
dec
movsb
mov
xchg
mov
pop
push
xchg
inc
add
fwait
scas
dec
or
jae
sbb
lock
stc
insl
hlt
inc
xchg
cmp
or
cs
outsb
neg
cmp
lret
mov
push
sbb
dec
stos
aas
jns
mov
cli
rcl
ret
mov
scas
add
pusha
insb
das
out
pop
cmp
movsb
es
cwtl
imul
stos
adc
roll
jbe
mov
repz
cld
stos
fmul
jl
jge
fsubrs
cli
or
lcall
pushf
lahf
pop
jl
sub
push
or
mov
mov
dec
or
mov
jecxz
xchg
pusha
xor
cmp
xchg
hlt
fcomi
mov
flds
cmp
inc
out
add
fsubrp
mov
ret
lods
mov
sti
lret
pop
imul
dec
add
push
inc
sahf
jl
inc
jbe
cltd
mov
jle
inc
mov
lcall
xchg
repz
cmp
loopne
sub
ljmp
mov
xor
int3
add
pavgw
sub
ret
out
sbb
xor
and
mov
rorl
mov
lahf
mov
add
or
inc
shll
nop
nop
push
sbb
test
pushf
pusha
jl
adc
pop
jno
jb
stc
pop
std
push
into
icebp
mull
jmp
jne
stc
dec
loopne
inc
sub
inc
das
pop
xchg
pop
iret
or
fmuls
lods
add
in
jg
sub
repnz
aaa
ror
xchg
and
push
push
repnz
out
sti
insl
decl
cmpsb
xor
es
fcmovne
push
fmul
mov
in
testl
js
popa
hlt
adc
std
andb
in
jmp
arpl
rclb
xor
lds
leave
mov
inc
gs
pop
lods
aam
mov
mov
xor
aas
inc
call
es
xchg
adc
dec
fstpt
cwtl
dec
sahf
adc
jns
in
mov
jle
cwtl
inc
sub
sbb
fmul
push
add
repnz
xor
add
lock
out
mov
movsl
jecxz
or
adc
in
repz
dec
in
adc
ret
or
fldl
clc
dec
sub
lea
mov
or
xchg
pop
mov
pushf
mov
mov
ja
xchg
movsb
mull
xchg
mov
mov
push
daa
fs
test
dec
dec
push
xchg
orl
cmpb
cmp
cltd
mov
scas
or
jns
movsl
jae
mov
sbb
leave
xor
stc
cli
sub
nop
sub
scas
push
jl
cmpsb
inc
push
fwait
imul
or
or
jmp
pop
jg
out
insl
inc
in
leave
shll
nop
cmp
jl
push
lods
or
std
mov
xchg
add
mov
decl
lret
cwtl
fdivrs
xchg
icebp
sbb
dec
lock
sar
mov
mov
mov
mov
cmp
outsb
xchg
out
xor
mov
fcmove
cmpsb
sub
dec
mov
lahf
subb
jne
or
cmp
mov
addr16
sti
mov
aad
and
xchg
mov
std
lods
cmp
movsb
xor
mov
mov
icebp
jne
bound
pop
jg
push
pop
xchg
xor
xor
in
sub
clc
das
sete
sbb
mov
clc
push
dec
es
in
cmp
fstpl
inc
push
push
sbb
jecxz
push
mov
xor
adc
sub
cmp
xchg
out
cmp
aas
xchg
mov
not
inc
sub
mov
roll
popf
lods
cwtl
sarl
push
lods
int
cmp
pushf
jb
mov
and
jb
lea
sub
pop
outsb
popf
cmpsb
and
mov
loop
lods
call
pop
pop
addb
jle
jl
into
ljmp
sahf
sub
cmpsb
jmp
or
out
cltd
cmp
pop
imul
xchg
mov
sbb
cmp
sbb
les
mov
sbb
sti
xchg
cmc
jns
mov
mov
inc
jo
mov
aam
xlat
adc
rorb
leave
mov
mov
cmpsl
mov
outsb
jecxz
adc
add
in
cwtl
xchg
test
lock
call
mov
pop
out
dec
sbb
adc
cmc
fstps
add
inc
push
xor
mov
pop
add
xor
je
or
test
mov
hlt
lret
jecxz
push
xchg
add
mov
imul
inc
cmp
dec
sbb
xchg
fistpll
cld
xor
popa
mov
inc
cwtl
insl
ds
sub
stos
or
call
pop
push
pop
test
out
daa
dec
out
pop
pop
mov
int3
cmp
sub
push
in
jg
jo
push
jbe
int
mov
jle
shl
out
pop
inc
test
inc
add
out
add
bound
in
rolb
and
cs
sar
jmp
ror
fs
ret
or
sahf
lret
mov
iret
xor
lods
mov
dec
jbe
in
in
loopne
inc
stos
or
inc
in
or
xor
dec
scas
int3
outsl
mov
mov
dec
add
aaa
lods
ljmp
in
xor
lds
fstl
movsb
adc
loop
das
sub
adc
adc
fdivrp
jb
shrb
xor
daa
jmp
sub
inc
cmpsl
fs
test
sub
ror
loop
jbe
imul
aam
mov
push
push
loope
inc
lods
sub
bnd
xor
shr
ljmp
mov
ror
sbb
pusha
fstps
pop
fs
das
jae
rol
inc
lret
aaa
ja
ja
sbbl
loope
pop
aas
jns
in
pop
mov
movsb
outsb
movl
cltd
lock
or
ret
push
ljmp
stos
arpl
xchg
add
test
fnstenv
inc
ljmp
push
pop
cmp
in
ret
jl
jns
out
cmc
gs
mov
ds
stc
icebp
loopne
cmp
loopne
xor
push
add
popa
mov
or
xcrypt-cbc
cmpsl
xlat
xchg
inc
jne
xchg
cli
mov
leave
mov
inc
insb
mov
mov
xor
pop
mov
cltd
mov
nop
dec
aas
cmp
dec
mov
jge
cmpsl
ljmp
add
jg
dec
mov
push
jl
mov
push
insl
les
pop
idiv
test
xor
dec
ljmp
repz
xlat
inc
scas
xchg
and
sti
dec
push
mov
xor
js
adc
mov
jb
sbb
leave
pop
loopne
xor
adc
push
add
ja
subb
leave
add
inc
sub
pop
jne
imul
mov
sahf
push
pop
mov
jmp
outsl
xor
lods
loopne
lods
outsl
and
cli
or
fists
mov
mov
xor
mov
mov
dec
test
xchg
adc
out
xchg
dec
lock
jb
mov
inc
mov
xchg
jo
mov
out
dec
xchg
lret
cs
mov
out
lods
pop
inc
dec
imul
sub
jge
dec
mov
inc
cmp
mov
insb
push
sbb
inc
add
lock
movsb
mov
cmp
add
test
fcoml
das
xor
sub
cmp
cmp
mov
cld
sarb
push
clc
xor
sub
arpl
jns
out
jae
jmp
fnsave
jmp
fstp
icebp
push
rorb
cmpsl
je
dec
sbb
mov
cmp
or
push
rcll
repz
mov
mov
cmp
ret
adc
mov
jo
xor
push
adc
call
dec
xor
xchg
jmp
xchg
and
sbb
mov
repz
or
sahf
imul
push
sarb
orl
inc
mov
cmpsb
nop
inc
lea
push
aaa
stos
cmpsb
int3
jecxz
sub
lock
insl
inc
cli
clc
call
mov
pop
cs
or
mov
add
lcall
arpl
outsl
push
mov
std
sub
inc
pop
test
mov
push
lahf
xchg
or
dec
lret
pop
xchg
clc
pushf
movsl
mov
fstl
js
lods
repz
fmull
xchg
mov
mov
xor
test
test
shlb
inc
jae
xchg
in
cwtl
mov
sbb
sti
lret
mov
and
xrelease
add
test
mov
mov
ret
dec
loop
dec
ret
popf
in
mov
test
sub
pop
ret
mov
rcrb
fiaddl
ret
mov
leave
xor
adc
outsb
mov
dec
add
inc
aad
xor
and
xchg
mov
or
cmp
pusha
mov
dec
ret
enter
add
roll
push
jp
sbb
gs
and
cmc
lahf
pop
or
add
mov
xchg
and
inc
or
mov
ljmp
jno
out
hlt
pop
stos
pop
fstps
pop
cmpsb
push
and
fwait
or
sti
les
or
bnd
jo
or
sbb
dec
inc
jbe
inc
inc
fistpll
imul
cmp
pop
sub
mov
iret
outsl
pop
push
mov
insl
ljmp
imul
jns
jge
adc
mov
mov
xorl
xchg
push
cmp
jnp
xchg
mov
mov
mov
pop
in
in
ret
pusha
mov
insb
dec
out
push
lds
adc
mov
pop
hlt
rorb
in
xlat
xchg
add
std
ficoml
pop
sub
paddsw
jbe
call
addr16
jo
add
out
call
jnp
inc
cmp
ja
dec
inc
mov
sbb
push
ss
lea
mov
fcompl
test
imul
gs
sub
cmpl
call
test
je
leave
inc
mov
push
sbb
loop
push
movsb
dec
loopne
movsw
stos
xchg
rolb
popf
xchg
stos
add
sub
push
shll
push
fnsave
in
movsl
jmp
lret
inc
add
test
dec
stos
clc
in
dec
pop
jge
sub
ss
xor
in
push
and
xor
pop
aaa
in
sub
mov
sahf
sti
loope
add
and
and
jae
push
aas
xchg
cmc
in
rolb
arpl
lds
outsl
cld
cltd
lahf
mov
ret
aad
dec
dec
ficoms
jbe
iret
mov
outsb
enter
mov
out
xchg
or
divb
jne
lds
leave
xchg
jmp
mov
aaa
fnstenv
mov
inc
pusha
out
out
ds
or
pop
in
xor
xchg
out
mov
dec
xchg
test
iret
and
jmp
mov
scas
lods
repnz
xchg
inc
cmc
fcomip
xlat
aad
notl
out
or
mov
mov
imul
mov
jp
push
cmpsb
bnd
sub
push
xchg
ret
xchg
int3
add
in
sahf
ja
cwtl
dec
subl
mov
xchg
les
ss
lcall
data16
dec
inc
out
out
jbe
xchg
enter
je
fmull
or
and
ja
fldl
sub
push
xor
pop
inc
xor
xor
in
sbb
inc
loop
or
pushf
ficompl
repz
cwtl
push
xchg
jcxz
add
push
jns
bound
cmc
pushf
mov
xlat
lcall
pop
mov
and
and
cmp
inc
int3
push
stos
cmpsl
push
push
shlb
sub
test
pop
js
or
pop
push
ljmp
xor
mov
cld
loop
ret
cmp
aaa
rorb
mov
mov
scas
jns
mov
adc
jbe
inc
mov
cld
fimuls
dec
inc
negl
xchg
sub
ja
jl
rol
or
fisttps
popa
inc
pop
xchg
jl
pop
aas
popf
lcall
adc
xor
mov
sbb
out
out
and
ljmp
push
imul
out
adc
jnp
lcall
xchg
pushf
mov
mov
lea
lock
mov
mov
dec
out
sub
cltd
ficomps
fistps
or
gs
test
lret
js
mov
push
inc
rdmsr
adc
dec
popf
cmp
mov
mov
pop
mov
jo
mov
popa
pop
mov
cmpsb
clc
arpl
inc
jae
imul
push
sub
jg
sbb
data16
xchg
add
es
int
cmp
jl
sahf
nop
mov
pop
pop
or
and
arpl
xchg
int3
adc
in
out
jae
mov
das
sbb
icebp
xchg
mov
data16
cmc
cs
dec
lock
or
mov
cmpb
inc
mov
xchg
push
popf
fucomp
sub
lcall
bound
inc
popa
and
lahf
xchg
je
mov
lds
push
xchg
jns
pop
and
mov
add
daa
arpl
jbe
lahf
jge
mov
dec
or
jns
iret
pop
xor
cmp
negl
add
xchg
xchg
push
rclb
movsl
rorb
int3
and
cmp
cmp
dec
out
dec
sahf
push
psadbw
fs
arpl
and
mov
dec
mulb
push
and
shl
sbb
jmp
add
mov
out
inc
cmp
rorb
cmc
push
iret
mov
jp
dec
popf
imul
xchg
adc
adc
adc
mov
dec
lret
cs
jne
rcr
cmp
ret
fnstenv
xlat
fmuls
mov
xor
cmp
push
popl
mov
push
inc
mov
cmpsl
and
aam
mov
fisubl
rol
sbb
mov
in
lahf
repnz
mov
lret
sarb
dec
mov
xchg
cli
pop
cmp
std
fiaddl
subl
xchg
cmp
add
imul
imul
jge
mov
adc
pop
jno
xor
fwait
jns
adc
add
add
xor
inc
sbb
ret
loopne
shrb
in
dec
and
cmpsb
pop
out
dec
mov
or
xchg
fsub
inc
mov
xor
ljmp
incl
adc
inc
xchg
das
mov
fldpi
inc
fwait
insb
jae
cmp
mov
sub
xor
mov
imul
add
dec
and
mov
sbb
iret
lock
sbb
mov
cs
subl
fmull
and
pop
lea
xor
sub
or
out
or
in
push
or
ret
push
aaa
xor
push
mov
fisubl
adc
dec
mov
aad
fcomps
lock
addb
lock
inc
cs
scas
movsb
xor
add
add
idiv
ret
cmpsb
aad
xchg
sbb
jno
into
gs
push
out
mov
fdivp
aad
push
jb
fsubrs
lea
push
cs
test
xchg
or
mov
inc
mov
mov
cmpsb
mov
pop
ret
sub
push
mov
data16
xchg
mov
jge
push
add
lds
cmp
addr16
insl
mov
inc
clc
ss
and
adc
xchg
lret
shrb
mov
mov
push
mov
imul
inc
subb
mov
lahf
mov
jge
pop
inc
test
or
movsb
jge
dec
loop
xchg
pop
inc
je
pop
out
cld
push
pushf
mov
out
push
lret
jno
mov
rcrb
adc
push
and
pop
ja
sub
cmp
pop
xor
cli
pop
fwait
xor
pop
push
ja
pop
aad
dec
pop
stos
sub
aam
mov
aam
ret
inc
hlt
and
inc
sbb
xor
ss
stos
aas
js
add
push
adcb
or
xchg
mov
push
sahf
dec
xor
enter
scas
in
popa
insl
push
adc
sbb
mov
push
int
xor
dec
xor
mov
cld
out
and
fstpt
pop
loope
sub
aas
clc
lods
lea
xor
mov
sub
push
and
std
push
out
out
inc
add
nop
xchg
shr
sub
repnz
sbb
hlt
xor
mov
xchg
jmp
ror
or
nop
pop
out
xor
xchg
cmpb
push
cld
in
andl
ret
imul
add
loopne
push
xor
into
sub
adc
or
outsl
push
xchg
lahf
arpl
int
inc
gs
and
xchg
icebp
and
lods
mov
mov
je
movaps
aam
sub
scas
cmp
insb
xor
mov
popf
out
shll
jge
jno
inc
xchg
daa
xchg
sbb
fs
lods
mov
adc
stc
and
or
mov
or
push
push
es
add
sahf
pop
dec
sub
ljmp
movsl
push
xchg
or
push
das
loope
inc
cmc
aad
in
jb
pop
push
out
rorl
pop
adc
in
sub
or
or
jmp
sbb
jo
jo
inc
test
or
inc
jg
sub
xor
cmc
jno
in
leave
popf
push
jg
jl
dec
jo
xor
inc
xor
pop
leave
inc
test
lea
loopne
adc
inc
in
std
mov
push
lock
pop
xchg
nop
test
nop
pop
add
insb
jp
je
enter
xchg
imul
divb
pop
and
pushf
dec
lods
xchg
enter
out
mov
into
jns
or
in
dec
subb
aaa
lods
xor
dec
fwait
adc
xor
cmp
xchg
subb
out
lea
shr
lods
call
jecxz
and
stos
push
aas
jg
pop
mov
mov
mov
test
or
xor
cmp
jg
xchg
push
adc
xchg
xchg
adc
jmp
in
ss
and
xchg
inc
push
inc
cmp
push
jmp
lret
xchg
ljmp
sub
dec
push
pop
fistpl
xchg
clc
xchg
and
xor
pushf
sub
fwait
mov
pop
scas
imul
mov
cmp
fs
inc
sbb
mov
imul
dec
outsl
dec
mov
xchg
mov
xor
pop
je
ds
iret
insb
mov
loop
outsb
sub
lret
ret
leave
sub
mov
jl
add
cmp
fisttps
in
test
stos
cmp
pop
in
adc
mov
test
cmc
hlt
cvtps2pi
addr16
aaa
aaa
adcl
test
sar
xchg
cmc
lahf
inc
adc
fstps
cmp
popf
cmp
mov
mov
sbb
adc
or
adc
or
xchg
sbbl
inc
cmp
inc
out
adc
inc
xchg
mov
pop
push
mov
int3
out
adc
out
mov
in
inc
shl
out
xor
mov
push
sbbl
addl
ss
push
fwait
inc
repnz
pop
test
leave
add
xchg
data16
fld
in
pop
out
adc
or
or
add
fwait
and
xchg
dec
gs
cmp
jp
mov
pop
push
test
jge
mov
or
mov
lahf
jno
jl
ds
adc
or
in
fsub
fsub
push
insb
jmp
outsb
insb
outsb
push
inc
pop
popf
xchg
push
loope
jge
fwait
daa
scas
xchg
cld
orb
pop
aad
push
stos
imul
or
jmp
leave
jne
repz
loopne
mov
test
les
xchg
loop
mov
loope
inc
aam
jne
jne
scas
fcompp
movl
scas
sbb
cmp
dec
mov
div
sub
dec
shrl
adc
loopne
jg
lcall
xchg
and
imul
mov
jnp
pusha
mov
push
mov
nop
inc
loop
lods
les
jmp
jnp
jle
out
xchg
or
lcall
xchg
jnp
sub
lock
mov
ljmp
fists
cmp
push
aaa
int
sbb
insl
int3
cmp
jmp
cmp
shl
mov
lea
arpl
jle
imul
test
pop
nop
cwtl
jne
idivl
insb
loopne
xchg
cli
fnsave
popa
sub
jg
lretw
in
and
sbbb
bound
ss
xchg
int
lret
test
pop
xchg
pop
jb
or
adc
sbb
lret
dec
and
leave
leave
mov
jbe
jle
xor
test
es
and
fs
mov
jmp
or
imul
mov
pop
xchg
mov
xchg
mov
cmpsl
mov
xor
enter
imul
push
rcl
cwtl
mov
hlt
adc
mov
xchg
leave
shlb
and
jnp
pusha
adc
das
loopne
nop
inc
push
mov
aam
jns
imul
aam
jmp
bound
and
sub
aaa
sbb
shrb
in
xor
pop
cmp
mov
pop
add
push
sti
jmp
and
mov
std
bound
cli
imul
fs
add
iret
inc
and
pushf
xchg
push
jne
fnstcw
test
xorl
dec
arpl
inc
mov
adc
jg
mov
mov
mov
push
pop
or
cmp
aaa
imul
adc
ffreep
shll
mov
in
dec
mov
mov
dec
cmc
bound
mov
cmpsl
jbe
lahf
mov
ja
pusha
cmpsl
push
mov
dec
mov
mov
mov
adc
dec
inc
cmp
ret
dec
mov
sbb
negb
sub
sub
out
jle
sahf
dec
push
push
call
rclb
mov
mov
and
add
call
out
xchg
inc
pushf
add
cltd
scas
iret
ja
mov
int
pop
xor
dec
pop
jne
inc
adc
fwait
xchg
in
shrb
pop
fisubl
mov
movsb
testb
repz
sti
sbb
lcall
pop
cs
mov
mov
jle
xor
lcall
aas
xor
in
sub
pop
sbb
ss
mov
mov
mov
cld
mov
orl
addr16
pop
rcll
and
fsts
sub
lods
mov
inc
das
test
push
adc
add
call
rcl
jle
enter
int
xchg
int3
loop
sub
je
rcr
push
stos
adc
mov
dec
sub
add
mov
fsubs
dec
sub
mull
mov
aad
push
nop
dec
or
pop
repz
or
jmp
stos
xchg
xchg
jb
cmp
cli
leave
jo
aaa
fbld
mov
lret
sbb
sti
sbb
and
inc
mov
imul
icebp
push
lahf
jecxz
scas
int
and
inc
pop
popa
push
aam
lret
loope
cmp
dec
jge
int3
movsb
xchg
std
fwait
bound
test
mov
mov
xor
jmp
fsubs
add
xor
aam
pop
in
jns
fcomps
add
or
dec
mov
out
inc
cs
inc
lods
cmpsl
sahf
xchg
xchg
jb
pop
aaa
sbb
pop
jbe
push
inc
pop
sbb
pop
out
out
negl
int3
mov
cwtl
xchg
mov
inc
lret
repnz
and
shll
shr
or
xor
ficoms
repnz
lret
jns
and
dec
outsl
aam
sbb
lods
movsl
xor
adc
adc
mov
xchg
cwtl
hlt
add
jb
dec
push
jns
subb
dec
je
lahf
pop
cs
jle
and
sub
out
xor
arpl
jmp
xchg
push
and
dec
sub
ja
subb
insb
imul
mov
add
rcrb
mov
xor
cmp
shl
stos
popa
fildl
jne
adc
pop
xchg
mov
pop
xchg
and
dec
test
sub
imul
cmp
adc
das
push
xlat
int
enter
cld
int3
add
imul
adc
je
mov
jo
shrb
push
dec
inc
sbb
cmp
pushf
sbb
jp
pop
fistl
add
mov
push
adc
mov
lods
jae
shll
popf
adc
push
in
pminub
pop
aas
in
lahf
xor
xchg
xchg
stos
scas
cmp
jnp
pop
mov
in
into
ds
push
xorb
add
dec
add
mov
in
orb
mov
dec
sub
adcb
es
sbb
adc
adc
fildll
fiadds
imull
mov
fists
fiadds
imul
xor
das
movsb
pop
xchg
mov
sub
stc
xchg
enter
dec
sbb
xchg
mov
cli
jg
mov
test
dec
sbb
popf
pusha
jo
loopne
xor
mov
ror
and
cmpsl
fwait
jnp
insl
push
mov
jg
in
test
xchg
push
inc
leave
addr16
sub
pop
xchg
add
hlt
and
xchg
dec
mov
mov
mov
and
mov
ret
adc
out
lea
fcmovnu
rclb
and
lret
inc
jmp
jns
enter
jo
loopne
in
stos
jae
jmp
cli
cmpb
sbb
mov
out
shlb
rcl
cmp
icebp
bound
pusha
dec
imul
leave
in
daa
jne
dec
shrl
cs
icebp
sbb
push
idivb
mov
stos
in
ss
mov
add
push
sbb
pop
int
pop
push
idivl
sbb
push
adc
xchg
xchg
mov
mov
cld
push
aad
je
xor
dec
cmp
imul
and
out
popa
jae
in
movsb
mov
stc
mov
ret
sahf
inc
and
lea
mov
add
int
cld
dec
pop
mov
inc
setbe
adc
lahf
adc
in
shl
inc
or
aam
bound
sbb
in
fnstcw
out
push
insb
mov
sti
cmc
push
movups
pop
imul
push
pushf
fs
int3
inc
lock
inc
adc
and
mov
imul
push
mov
aam
ljmp
dec
out
dec
mov
xor
xor
insl
xchg
xchg
sbb
xchg
inc
mov
pushf
arpl
inc
push
dec
mov
mov
je
adc
adc
push
jb
adc
je
lods
push
xor
outsl
push
jno
push
mov
cmp
or
adc
dec
enter
push
insb
outsl
test
repz
sub
jl
insb
fldl
mov
xlat
jmp
lea
stc
lcall
sbbl
inc
cmpsb
stc
push
add
sahf
push
add
addb
cli
repz
xor
lock
mov
out
test
xor
orb
movsl
fs
inc
movlps
inc
jecxz
or
aaa
sub
and
add
out
pop
outsl
int3
cmc
xchg
movsb
aam
sub
loope
mov
int3
adc
sahf
je
adc
test
mov
mov
xlat
mov
adc
xlat
stos
sbbb
dec
jmp
xchg
xchg
adc
mov
pushf
pop
inc
shll
mov
int
jmp
push
aad
rcrb
sbb
xchg
xlat
jo
xor
cli
jbe
popa
mov
push
jae
xchg
xchg
pop
pop
xchg
inc
pop
ud0
std
fwait
stos
and
or
push
and
popf
repnz
add
shl
mov
into
in
and
jecxz
test
shrl
pop
jns,pn
pop
cmpsb
int3
mov
jae
aam
jmp
ret
pop
mov
push
and
mov
jmp
lods
xlat
les
push
lds
fmull
mov
xchg
xchg
adcl
jae
cmpsl
cltd
xchg
leave
mov
push
push
push
shlb
std
push
cmp
lcall
lcall
xor
sub
dec
pop
xchg
arpl
add
filds
push
fwait
xor
mov
cmpsl
pop
mov
adc
scas
sahf
dec
repz
dec
sub
add
add
test
ljmp
pop
mov
sub
or
call
aam
mov
mov
orb
adc
nop
adc
loopne
push
insl
cmpsl
rcr
jbe
cmpsl
pop
mov
aad
push
jb
ja
adc
not
jecxz
filds
rcll
mov
leave
pop
mov
in
xor
push
imul
mov
loopne
out
jg
fs
cmp
test
mov
mov
lock
push
mov
mov
lock
jnp
lea
stos
mov
rcrb
dec
sbb
outsl
adc
mov
dec
mov
clc
push
sahf
cltd
sbb
xor
mov
cmpsb
mov
outsl
aaa
call
push
fwait
jnp
stos
dec
scas
mov
les
add
xlat
stos
lret
sbb
push
ftst
sub
jle
fiadds
jl
push
leave
inc
bound
sti
jmp
jnp
adc
jo
push
mov
fadds
push
or
call
out
inc
mov
mov
dec
jno
es
fildl
pop
out
ljmp
cltd
xchg
cmpb
xchg
out
xchg
daa
ret
popa
mov
out
sarb
ljmp
mov
xchg
dec
inc
popa
test
mov
and
ss
or
cmpsb
outsb
test
js
repz
push
outsl
out
jecxz
xor
mov
call
aad
xor
repz
mov
int3
in
inc
pop
dec
mov
push
sbb
test
add
cmp
loop
mov
and
sbb
push
das
dec
sub
enter
adc
add
inc
inc
dec
jne
fstp
sbb
cmpsb
jo
arpl
push
push
mulb
sub
jnp
pop
hlt
jnp
jae
shll
mov
arpl
cmp
outsl
mov
scas
mov
mov
jno
xchg
and
push
in
mov
iret
xor
cs
mov
in
insb
in
mov
aaa
mov
in
jl
jl
dec
xchg
jo
add
call
movsl
mov
mov
test
mov
fildll
pop
bound
add
jecxz
lds
add
aas
jmp
sbb
sub
add
jb
cmp
xor
int3
aaa
mov
dec
lods
mov
mov
mov
fs
and
outsb
pop
mov
jb
sub
orb
scas
fimuls
gs
inc
and
outsb
insb
xchg
jg
sti
jp
push
jg,pn
sbb
popa
test
jae
xor
ss
enter
add
les
mov
imul
pop
xor
mov
cltd
adc
mov
rcrl
movb
cmp
xchg
cmp
push
iret
aaa
orl
push
inc
mov
add
ret
cmp
xchg
in
mov
mov
iret
dec
fisubl
ret
mov
shll
dec
inc
add
jle
xchg
imul
out
jae
add
notl
js
mov
cmp
sbb
sub
sarb
or
mov
cwtl
fisttps
cmpsl
sbb
rcll
leave
pushf
imul
aad
iret
adc
sbb
cmc
imul
cli
xchg
lods
or
push
popf
mov
out
cmp
test
lahf
insl
lds
add
or
js
incl
add
clc
insl
mov
loopne
xchg
and
cmp
fucomp
xorb
mov
mov
sbb
adc
data16
sub
idivl
cmp
gs
sti
loop
xchg
pop
stos
jo
cmp
and
subb
mov
fwait
ret
add
fsubrl
sbb
bnd
ficompl
jmp
iret
or
sbb
scas
push
das
xorl
push
and
push
cmp
pop
test
pop
lods
aam
jb
push
sbb
int
pop
cmp
setnp
jnp
loopne
push
mov
xchg
xchg
mov
fstpl
repz
bound
mov
lcall
add
cmpsl
dec
pop
movsl
ror
fwait
mov
or
xchg
lods
shr
or
jbe
lahf
mov
inc
sbb
adc
jecxz
cmp
mov
icebp
add
lret
mov
pop
jbe
aad
adc
das
popa
mov
lock
popf
sub
cmp
inc
mov
add
mov
lret
in
ret
mov
inc
cltd
sub
push
sub
fldenv
or
pushf
in
sbb
ret
std
lret
insb
icebp
leave
pushf
add
push
scas
mov
lret
sbb
and
int
jne
jae
jge
out
repz
sbb
cs
ds
and
dec
sub
cmc
jp
outsb
mov
and
mov
jbe
ss
in
mov
fdivrl
loop
daa
xor
rcrl
cmp
dec
sub
xor
inc
mov
sub
cld
fisubrl
cli
inc
and
movsb
push
xor
jle
arpl
pop
cmp
jnp
or
jp
aad
inc
inc
out
iret
xor
lods
jnp
cmpsl
pop
mov
loope
mov
sti
addr16
out
aam
sbb
lcall
mov
mov
idiv
iret
ljmp
mov
xchg
cld
popf
xchg
icebp
xor
pusha
adc
hlt
fldt
mov
cmpsl
mov
cmpl
xchg
lret
pop
sub
sub
cmp
inc
xchg
mov
outsl
addr16
cltd
popa
mov
mov
dec
cmp
das
jo
add
push
leave
rorl
xchg
xor
in
xor
ret
mov
push
cmp
ret
pmulhuw
xor
into
pusha
ret
call
movsl
sbb
pop
xchg
sub
dec
jecxz
sbb
pop
cmp
and
push
iret
sbb
sti
lods
jno
loope
dec
adc
movsb
mov
xor
lahf
xchg
ss
push
pop
test
dec
jle
imul
jns
popa
lahf
xchg
test
jecxz
test
adc
jne
add
jl
mov
xor
add
cmp
add
out
jg
mov
inc
jecxz
bnd
push
mov
push
outsb
push
sub
jg
cs
push
sub
adc
add
imul
inc
mov
xor
ja
fidivrl
dec
dec
dec
push
push
in
sets
gs
leave
out
mov
inc
jge
mov
int
fidivl
or
insl
out
mov
sbb
jle
dec
mov
cmp
fs
mov
add
outsb
fadds
mov
and
inc
bound
inc
call
fs
mov
dec
data16
call
pop
jo
in
inc
divb
sbb
je
pop
mov
icebp
cmp
fnstenv
adc
pop
xor
and
xchg
rorb
cmpb
xor
mov
sbb
es
in
repz
das
dec
xchg
ja
push
dec
and
mov
pusha
shrl
mov
inc
movsl
cld
fwait
or
nop
pop
mov
sub
cwtl
push
jecxz
xor
sarb
inc
fadds
jo
addb
imull
xchg
pusha
mov
pop
cmpsl
cmp
aad
push
idiv
int
aad
fwait
jns
mov
and
mov
cli
or
inc
ret
ficompl
lahf
mov
xchg
jecxz
js
xor
add
sub
cmp
cmpsl
xor
scas
push
je
pop
mov
or
bound
movsl
mov
loope
xor
movl
sbbl
sub
mov
mov
and
mov
out
and
push
stos
inc
jmp
lods
push
jbe
mov
xchg
inc
and
and
fstps
imul
pusha
scas
shlb
hlt
or
lahf
mov
mov
cwtl
add
leave
pop
lea
sahf
leave
cltd
ljmp
inc
push
loopne
cmp
insl
fcmove
shl
adc
and
mov
pop
shlb
outsb
das
fwait
loopne
fdivrl
inc
stos
test
and
daa
jg
inc
imul
sahf
inc
cmp
push
daa
loopne
fimuls
push
mov
data16
dec
xor
test
scas
cmp
mov
jle
movsb
jl
stos
in
sub
or
sbb
lods
fwait
cmp
add
pop
loop
in
ret
push
std
in
popa
mov
push
fbld
outsl
fstps
jno
adc
dec
int
fstpl
xor
xchg
lret
gs
cmp
jg
fisttpll
add
mov
inc
push
push
dec
lret
sub
xchg
mov
add
sub
addl
xchg
add
jbe
ljmp
sbb
loope
xor
cmpsb
cmp
mov
mov
push
inc
or
sub
mov
lds
add
aas
sub
mov
aas
je
jmp
mov
cmp
aad
jo
subl
or
insb
jnp
pop
push
ret
call
pop
lcall
lock
mov
cltd
xor
and
jnp
cwtl
lahf
push
rcrl
pop
mov
push
inc
sub
mov
dec
dec
outsb
jae
out
pop
test
xorb
lahf
or
fdivrs
cwtl
sbb
and
sub
cltd
dec
aaa
mov
push
mov
mov
mov
pop
add
push
pop
jle
setbe
sub
adc
cli
cwtl
add
movsb
xchg
shll
arpl
loope
daa
and
arpl
jbe
push
int
add
xlat
std
cmp
icebp
shll
pushfw
popf
mov
add
xchg
mov
insl
sub
in
ja
and
jmp
in
push
xchg
lret
sub
cmp
std
mov
push
loopne
aam
sub
or
sbbb
xchg
pop
enter
push
and
sti
ss
out
pop
xor
scas
fildl
and
js
cwtl
icebp
sub
cmp
subl
jbe
clc
sbb
xor
mov
and
lods
call
push
mov
xchg
pop
loope
adc
pusha
xor
mov
dec
jl
pushf
cmp
xchg
push
aad
jns
aas
mov
dec
cmp
lcall
adc
push
dec
sti
ret
aas
mov
insb
mov
stos
mov
push
daa
iret
mov
jecxz
scas
jp
es
mov
mov
das
lods
mov
lret
sub
pop
mov
mov
in
outsl
in
repnz
or
stos
int3
cmp
call
pop
sub
mov
inc
mov
loop
xlat
sub
jne
mov
adc
jns
xchg
add
xor
shrb
push
cmp
test
dec
and
inc
cmp
fcoms
xchg
test
stos
lret
and
or
fidivs
push
dec
gs
les
jp
orl
adc
and
inc
pop
mov
add
mov
ds
in
popa
mov
test
jbe
xlat
aam
mov
out
pop
cmpsb
cmpsl
mov
xor
scas
push
scas
nop
sti
cmp
jo
imul
lret
cmp
adc
loopne
push
cmp
xchg
mov
test
cld
sub
jb
es
mov
sbb
data16
popa
pusha
dec
mov
cs
in
mov
cmp
hlt
aas
mov
cmp
mov
sbb
pop
fsubrs
or
pop
loope
xchg
out
mov
or
sbb
data16
fisubl
mov
call
jno
xor
popf
sub
arpl
push
cmpsb
sbb
and
jl
insl
mov
aaa
jle
insl
jb
ljmp
ficomps
lods
movsl
sbb
or
mov
jae
lahf
arpl
aas
mov
mov
jg
dec
jae
jno
and
jmp
push
inc
idiv
addr16
mov
mov
ret
cmpsb
dec
dec
inc
jno
cmp
cltd
push
mov
inc
test
sub
arpl
jo
mov
and
mov
push
les
ss
add
stc
push
movsb
pop
jb
xor
sub
pop
insl
mov
stos
mov
das
pushf
mov
lret
sbbl
mov
dec
or
test
or
repnz
ret
mov
mov
insl
movsl
int
fmull
push
gs
mov
inc
scas
lret
sub
sub
std
cmp
call
test
and
js
push
or
js
ds
mov
or
repnz
xchg
lret
pushf
addr16
dec
cli
mov
and
inc
or
adc
lret
fsubl
test
xchg
jne
pop
sbb
xor
fldl2t
sbbl
pop
cld
hlt
mov
icebp
mov
inc
cmp
dec
push
clc
sub
push
cmp
hlt
jnp
push
add
mov
filds
jae
loopne
add
clc
xor
sti
enter
inc
add
xorb
inc
xor
fwait
sbb
jns
outsl
push
rcrl
jns
test
aad
or
sbb
jbe
or
enter
daa
imul
mov
xor
mov
dec
sub
and
dec
dec
jg
mov
add
arpl
jb
and
push
add
out
mov
xor
stc
scas
std
pop
mov
jns
pop
gs
pop
xchg
insl
mov
xor
out
out
adc
push
out
pop
push
fdivrs
incb
in
fcoml
add
or
fwait
push
pushf
mov
sbb
dec
sti
add
fstp
stos
and
repz
mov
fcmovu
shr
lcall
sbbl
ret
xor
xchg
xchg
xchg
mov
in
push
xchg
daa
out
and
enter
sub
fnstsw
in
push
lcall
mov
pop
inc
pop
lcall
dec
dec
jecxz
cmp
push
mov
push
sub
mov
lret
dec
clc
in
cli
outsb
orb
outsb
cld
xor
ja
insb
std
dec
sbb
xor
and
mov
lahf
pop
in
push
cmp
mov
sarl
repz
cli
out
fimuls
and
dec
imul
pop
stos
cli
push
aaa
xor
xchg
pop
dec
mov
xchg
mov
decl
out
ds
hlt
mov
adc
xchg
loope
add
fstl
mov
stos
xor
sub
add
ds
loope
push
bswap
or
je
push
pop
jae
add
rorb
ret
push
testl
push
dec
pop
mov
mov
mov
cmc
inc
dec
cs
int
mov
movsb
int3
insl
sub
int
sub
jne
insl
mov
loop
mov
jecxz
sarl
lea
adc
ret
add
mov
test
or
push
or
rol
stos
addb
inc
sub
fidivs
and
popa
imul
arpl
mov
push
or
or
cmpb
lods
popa
or
mulb
push
xor
adc
inc
jp
std
aad
inc
cmp
dec
xor
fcmovnbe
scas
mov
add
int
test
std
lods
lcall
inc
cmp
adc
xchg
pop
jbe
lret
cmpb
mov
in
cmp
sub
and
xor
in
cmpsl
mov
pop
adc
ret
xchg
loope
sbbl
mov
stos
in
mov
adc
mov
aas
movsl
mov
insb
mov
mov
out
mov
jmp
push
lea
stos
jmp
lods
shrl
mov
popa
pop
test
add
or
scas
cmp
out
scas
sbb
leave
les
out
es
stc
push
std
mov
fnop
pop
inc
arpl
mov
or
repnz
inc
ret
mov
xchg
and
addr16
sbb
ljmp
push
sub
mov
ret
xorb
sub
test
pop
iret
xor
cmpsb
aas
aad
sub
dec
pop
pop
in
inc
leave
and
jnp
push
loop
dec
js
add
pop
leave
push
arpl
pushf
pop
jp
popf
pop
outsb
lods
fildl
ficomps
push
pop
es
arpl
mov
cli
mov
lahf
insl
sub
ja
arpl
ds
adc
adc
cli
xchg
push
mov
pop
push
pop
pop
shll
ret
out
adc
pop
shrb
push
push
cli
xchg
dec
adc
mov
dec
jmp
je
jbe
or
jmp
xchg
jmp
push
mov
shrb
push
repnz
notl
clc
xchg
mov
cmp
das
and
adc
test
test
stos
mov
mov
bnd
ficoms
aas
stc
or
add
out
lret
outsl
inc
xor
push
lds
adc
je
and
fisubrl
add
mov
gs
add
addr16
push
jmp
xor
mov
inc
mov
sub
ret
xchg
fildl
in
xchg
data16
ss
inc
cmpl
movsb
inc
les
scas
push
jns
lret
aad
dec
stc
pop
scas
inc
push
xor
int3
dec
mov
xchg
fsubs
sarb
push
call
adc
dec
mov
out
into
fdivrl
hlt
dec
leave
push
lret
insb
or
xor
in
xchg
das
mov
dec
add
jg
lcall
sbb
rcll
outsl
push
sbb
pusha
scas
jg
lock
xor
add
scas
mov
xor
xchg
leave
mul
jne
neg
xchg
negb
pop
test
es
loope
jns
vmwrite
adc
daa
inc
jo
ficoms
add
ja
jns
fwait
adc
mov
pushf
cwtl
data16
mov
aas
pop
push
daa
icebp
es
mov
jmp
jmp
in
mov
fmuls
jge
sbb
rol
or
and
sbb
xor
fldt
push
xor
mov
sub
mov
rcr
lret
sub
add
je
xchg
push
and
adc
push
repz
into
cld
popa
loop
push
xchg
and
leave
cmpsb
pop
imul
xchg
jb
xor
fdivl
cmc
scas
ds
mov
xor
mov
xchg
push
test
xor
xorl
cmc
out
leave
jg
xor
lods
jmp
in
loop
cmpb
jae
xor
jg
cmp
push
mov
imulb
push
daa
shl
cmp
in
jp
lret
add
adcl
jg
push
sub
adc
pushf
repnz
pop
in
cmp
cmc
mov
repnz
mov
jmp
cmp
mov
dec
les
lock
insb
stc
lret
fcmovnb
cltd
daa
mov
sbb
lods
lcall
insl
cmp
sub
lahf
xchg
push
xchg
fs
xchg
cmp
add
adc
iret
push
fmull
and
add
mov
dec
xor
fldl
xor
xor
lahf
out
mov
jo
test
pop
aas
stos
pop
aam
fucom
adcl
bnd
xor
jmp
mov
rol
adcb
loope
inc
mov
les
stos
loop
movsl
xchg
and
or
add
jb
shll
inc
sbb
scas
cs
aad
inc
je
lcall
xchg
test
ffree
dec
and
push
loopne
pop
pop
add
mov
mov
test
mov
in
mov
jge
out
pushf
pop
mov
mov
cs
loopne
mov
sub
xchg
jae
sahf
mov
xchg
jbe
xor
imul
enter
mov
stos
sub
and
cmp
xor
adcl
ljmp
test
pop
xchg
mov
pop
popf
insl
pop
dec
and
xchg
lods
jl
dec
in
or
mov
je
mov
sbb
dec
shlb
nop
nop
in
add
out
add
mov
call
jnp
aad
xchg
lods
out
stos
sub
cmp
xchg
jo
loope
xor
mov
shll
and
nop
push
clc
sbb
sti
mov
cmc
test
jmp
sahf
rcrb
andl
mov
sub
xor
add
and
push
cli
sbb
xchg
in
sbb
imulb
lret
xor
jne
test
cmp
mov
dec
mov
xchg
jnp
push
sahf
adcb
ret
add
fimuls
inc
cld
inc
mov
roll
jge
stos
sub
out
cmpl
add
and
mov
in
cltd
shlb
enter
jnp
shl
push
mov
enter
push
push
mov
xlat
shll
imul
test
push
shrl
and
xchg
inc
fdivrp
sbb
addr16
add
pop
mov
lret
push
subb
daa
andb
hlt
xlat
pop
cmpl
iret
outsb
enter
js
pop
lret
xchg
sbb
pop
sbb
cwtl
dec
cltd
ds
jmp
xor
xlat
into
and
popf
mov
push
mov
loop
fimuls
xor
inc
std
mov
adc
into
vfmadd213ps
cmpsl
dec
dec
loop
stos
push
ljmp
iret
pop
sbb
and
sub
mov
out
adcb
rolb
call
push
xchg
test
push
popa
aas
cld
shlb
lods
repnz
sbb
add
mov
movsb
in
outsl
add
lock
mov
pop
push
mov
mov
dec
pop
int
or
sbb
add
iret
jmp
rclb
cmpsl
adc
pop
cmpsb
inc
stc
roll
ret
inc
dec
sub
outsl
imul
mov
cmc
mov
add
sub
int3
or
mov
subl
popa
mov
cmp
or
aad
or
sarb
inc
and
add
int
and
and
mov
aam
stos
xorb
enter
stos
int3
jle
clc
xchg
loope
adc
xchg
fs
mov
pop
mov
and
dec
add
insl
mov
xchg
cmc
jp
mov
mov
dec
insl
icebp
cwtl
fstp
int
sahf
pusha
pop
xchg
repnz
popf
into
adc
or
lret
jge
push
imul
je
jge
inc
xor
lds
dec
sub
cmp
push
cmp
imul
fs
ret
mov
xchg
daa
in
mov
dec
push
mov
test
push
or
ret
cmp
dec
imul
adc
fyl2xp1
ficomps
into
lods
mov
stos
xor
and
inc
mov
mov
pop
mov
scas
xchg
std
ljmp
xchg
jnp
pop
and
pop
push
jno
and
mov
xchg
add
in
pop
sub
bound
push
jge
sub
adc
arpl
mov
xor
enter
mov
insl
aam
xchg
or
jne
push
add
mov
adcl
les
lods
ficoms
or
inc
cmp
mov
add
jns
lret
les
mov
das
jno
gs
mov
subl
cmp
jns
jg
or
add
ja
dec
call
das
push
mov
jmp
push
loop
lcall
hlt
mov
jo
lods
pop
pushf
pop
or
lods
fbstp
outsb
pusha
push
pop
push
xor
and
jp
jae,pt
jno
int
aas
sub
xchg
jge
imul
lock
cltd
inc
sbb
rcll
cltd
leave
add
or
stos
xchg
xchg
jecxz
sbb
insl
daa
sbb
int3
sarb
js
aaa
cli
fisttpll
test
lahf
jne
imul
xchg
and
adc
dec
dec
xor
and
sarl
inc
mov
out
int3
push
movsl
outsb
mov
ficompl
arpl
xchg
popa
lock
repnz
cmp
or
out
mov
pop
sub
and
inc
jbe
and
leave
dec
jecxz
push
js
js
out
in
sbb
cmp
mov
adc
in
sarl
aam
pop
and
orl
sti
push
or
orb
jl
subl
mov
jmp
jb
and
inc
shlb
adc
rol
popa
call
mov
stc
mov
push
pop
dec
push
aas
xlat
fwait
or
loop
sbb
stc
outsb
adc
cmp
dec
loop
add
cmp
jecxz
ficomps
ds
aas
inc
add
xor
xlat
ret
popa
pop
pop
mov
sbbl
rolb
mov
inc
mov
inc
cmp
sub
inc
push
aad
aas
xchg
xor
and
aad
movsl
movsl
add
mov
xchg
out
mov
ljmp
sbb
aam
fadds
pop
dec
divb
lea
mov
pop
js
scas
lret
sub
shrl
lods
in
jecxz
pop
mov
mov
idivb
aaa
jb
ja
test
adc
push
xchg
test
std
jae
popa
imul
add
ss
xchg
outsb
repnz
jae
and
mov
cs
fiaddl
andb
gs
sub
loop
xor
jle
arpl
jo
fistpl
xchg
mov
sub
jp
cs
mov
mov
leave
ret
jl
dec
fadd
cmp
fisubs
pop
add
mov
popf
adc
or
jge
pop
ss
jge
call
jno
mov
arpl
pop
push
dec
ja
push
in
lahf
cs
pop
and
lahf
ret
or
or
cmc
dec
sub
repnz
es
ret
xor
jae
mov
pop
xchg
jno
fadd
sub
cmp
sti
xorb
fisttpll
dec
mov
cmpb
aaa
pop
xor
pushf
push
jo
pop
icebp
xor
xchg
push
ljmp
mov
aad
dec
inc
and
cld
inc
stos
fcomp
aam
subb
repnz
and
mov
out
mov
mov
bound
push
mov
test
popa
sbb
sbb
aas
jne
or
xchg
outsb
inc
incl
jecxz
lret
cs
mov
xchg
cmp
pushf
andb
jecxz
lcall
cs
pop
adc
cmp
sub
cli
test
sahf
leave
sbb
mov
adcl
mov
and
hlt
pop
cmp
pop
dec
jle
add
sbb
push
xorb
nop
push
xor
mov
into
test
aad
xor
or
clc
out
inc
dec
mov
scas
aaa
cltd
push
shrl
or
or
mov
mov
or
sahf
sbb
test
fcmovne
cld
rep
push
and
mov
cmpsl
sub
sub
inc
fs
shlb
xor
pushf
push
dec
daa
nop
pop
mov
mov
xlat
mov
fsubrs
sahf
mov
mov
loop
mov
aaa
sub
imul
sbb
add
nop
xor
xor
nop
xchg
aas
push
sub
rorb
jbe
imul
test
inc
popf
add
and
mov
cmp
mov
jmp
dec
leave
mov
ror
lcall
in
jge
imul
xor
roll
dec
pop
add
movsl
mov
push
and
mov
xchg
or
js
jno
and
mov
mov
mov
sbb
pop
andl
xchg
stc
jmp
dec
sbbb
xor
mov
cmc
fdivl
gs
scas
fisttps
shl
leave
xchg
xor
rcl
insb
xchg
enter
fwait
xchg
pop
adc
fistpll
data16
outsl
push
scas
out
imul
movsl
push
jnp
incb
inc
xchg
jle
jb
mov
push
dec
mov
dec
rcr
or
test
cmp
loop
push
inc
test
rolb
push
sbb
cmp
xor
mov
lea
loope
loop
in
xor
xchg
nop
cltd
in
xor
xchg
mov
pop
mulb
jmp
pop
dec
popf
cmp
jb
fwait
test
stos
addr16
dec
mov
cli
in
ror
divl
repnz
jle
shrl
leave
fstpl
idiv
out
movsl
fadds
inc
jecxz
jmp
ja
jo
sub
xor
mov
mov
inc
imull
rcr
out
dec
ljmp
out
push
loopne
shlb
daa
inc
xor
arpl
icebp
jne
aas
inc
frstor
jns
push
pop
mov
stos
mov
lret
out
out
dec
or
xchg
arpl
cpuid
mov
or
sub
pop
xchg
push
xor
jae
push
xlat
pop
mov
xchg
xlat
shrl
mov
insl
or
cmp
movsl
cmpsl
fcmovnu
daa
je
pop
aaa
mov
shll
dec
js
sbb
mov
dec
lea
pop
sub
adc
sub
add
insl
lods
hlt
jp
movsl
dec
clc
cmp
mov
int3
pop
in
int3
out
jae
std
hlt
stos
jb
sbb
loop
sahf
pop
mov
and
inc
lcall
seto
fdivp
xchg
mov
pushf
data16
pop
cmp
inc
enter
subl
mov
push
std
int
pop
cmpsl
xlat
dec
cmp
xchg
xor
call
sub
movsb
pushf
fsubs
je
cmp
mov
sahf
shlb
push
cwtl
sub
imul
xor
xchg
pop
or
sbb
in
cmpsb
ljmp
xor
jno
dec
mov
pushf
iret
mov
and
push
mov
je
mov
ret
lcall
adc
mov
push
add
lahf
aaa
cld
mov
push
or
adc
or
outsl
sti
inc
mov
cmp
mov
cmp
movsl
mov
jo
in
inc
lcall
xchg
mov
push
jmp
push
popa
les
mov
add
je
sub
push
cs
or
adc
in
xlat
sarb
movsl
shll
dec
dec
dec
faddl
jae
ljmp
mov
lret
or
neg
nop
les
adc
mov
cmp
lods
and
fiaddl
in
push
inc
jl
cwtl
int
pop
mov
stos
or
mov
push
mov
out
pop
fwait
movsl
outsb
repnz
lahf
add
mov
outsb
jo
mov
rcr
aas
jmp
pop
dec
pusha
cmp
std
mov
cmp
ss
jno
or
mov
lock
movsb
in
fistl
pop
loopne
scas
jo
mov
jl
and
mov
repnz
add
ficoml
flds
std
out
dec
mov
mov
sub
xlat
data16
xchg
pop
ja
push
inc
or
lock
xchg
sbb
jp
movsl
mov
popf
repnz
outsb
mov
lcall
aad
cs
es
or
sbb
ss
fcoms
lret
mov
rolb
add
push
dec
jo
clc
lret
adc
jno
mov
cmp
push
pop
dec
das
es
scas
jmp
and
add
inc
pop
shlb
xchg
pop
push
adc
aas
cwtl
sub
gs
out
sub
or
dec
sbb
cmpsb
jl
jae
push
mov
outsl
xchg
inc
fsub
lret
fnstsw
cmp
lds
enter
fbstp
mov
lcall
repnz
push
cmovae
test
inc
rcll
aaa
xor
test
push
sub
jle
sti
and
sub
fildll
cmpsb
adc
push
or
lock
mov
push
xchg
inc
mov
dec
adc
jb
mov
push
enter
or
mov
xor
and
es
ljmp
xor
inc
adc
out
xor
mov
fimuls
nop
and
fwait
nop
cmpsl
fsubrs
sbb
mov
pusha
add
mov
imul
xchg
pop
enter
push
fadd
shrb
xor
adc
mov
fadds
push
pusha
js
push
add
push
jl
push
popf
or
or
xchg
je
rol
pop
mov
out
push
out
and
adc
ret
mov
aas
scas
loope
scas
imul
sbb
scas
icebp
push
nop
mov
push
add
std
out
sub
xor
pop
mul
mov
repz
std
jnp
nop
mov
ret
bound
cmpsl
pop
mov
lret
imull
xlat
fdivrl
xchg
repnz
adc
stos
add
adc
mov
pop
xchg
insb
push
bound
push
dec
imul
and
push
dec
dec
mov
pushf
loop,pt
sbb
dec
xor
test
rcl
and
adc
pop
out
lods
into
imul
sub
mov
pop
shll
adc
aaa
movsl
mov
stc
xchg
xor
cmp
ror
negb
into
mov
lcall
lahf
icebp
or
and
xor
push
mov
and
cmpsb
pop
cmpsb
mov
dec
xchg
test
sub
mov
lret
das
cmp
mov
mov
sbb
aad
push
aaa
andb
mov
aad
insl
aaa
jne
inc
icebp
xchg
cs
sbb
aam
adc
bnd
test
jecxz
xlat
jne
jbe
les
clc
and
dec
sbb
or
mov
mov
les
ljmp
mov
jge
test
pusha
push
ret
sti
or
mov
in
aas
jp
pop
pop
cltd
imul
fbstp
xchg
popa
mov
mov
xchg
xchg
leave
inc
xchg
jno
xchg
push
test
add
sahf
push
in
int
inc
or
push
mov
sub
dec
scas
mov
clc
mov
sub
and
xchg
lock
xchg
pop
xchg
jae
sbb
scas
clc
bound
int
cmp
and
dec
movsb
jmp
mov
movsl
sbb
mov
sub
mov
xlat
mov
mov
jo
cmp
shlb
mov
cmc
inc
stos
out
or
adcl
jbe
sub
out
mov
pop
jmp
push
inc
pop
push
sub
dec
add
mov
adc
test
fbstp
mov
xchg
adc
mov
es
outsb
fistps
mov
or
imul
sub
out
dec
jb
mov
stos
dec
ja
cmpl
in
xchg
stos
cli
jg
cwtl
sbb
dec
xor
inc
adc
outsl
ds
sbb
inc
outsb
mov
mov
xchg
pop
sarb
cmpsb
jnp
decb
dec
and
rcr
push
filds
lock
stos
outsl
adc
jmpw
xchg
std
xor
add
faddl
cmpsl
mov
add
into
jmp
cwtl
jb
xchg
cmc
mov
loopne
mov
lahf
into
imul
xchg
cmp
xchg
mov
mov
repz
lods
mov
mov
or
sub
stc
jmp
jno
pop
jmp
scas
lret
stos
add
ja
inc
jno
ficompl
adc
pop
outsb
lahf
nop
js
dec
cmpsb
mov
cmc
mov
fidivrl
loopne
lock
loopne
aas
imul
je
loopne
sbb
scas
sub
and
xor
movsb
sbb
pop
sahf
jo
push
jns
pushf
and
or
data16
xlat
mov
out
dec
sub
lods
adc
cmp
mov
dec
push
cltd
sbb
ja
std
stos
and
xchg
das
sahf
xchg
jg
pop
ja
pop
mov
aam
cmp
sub
js
or
negl
xor
inc
cld
icebp
mov
aad
mov
fnsave
and
int
sbb
loope
mov
mov
sbb
add
add
int
test
test
fisubrl
xor
mov
cmpsl
data16
loope
jns
xchg
push
std
pop
popa
loop,pn
fsts
in
xchg
jo
jb
or
dec
roll
dec
inc
or
setb
jo
dec
add
xchg
pusha
daa
adc
aad
lret
int
orl
xorl
inc
inc
xor
roll
cmp
mov
cmpb
ljmp
add
sub
fidivrl
cmp
sbb
out
pushf
aaa
cld
push
xorl
sbb
arpl
lea
adcb
icebp
in
testl
fistl
inc
xchg
mov
add
sahf
mov
dec
mov
mov
pop
pop
movsb
popf
out
mov
add
loop
xor
push
sbb
data16
inc
movsl
or
sbb
repnz
out
fcmovu
and
sub
dec
loope
inc
mov
jge
fwait
pop
call
mov
push
adc
notl
dec
mov
dec
adc
sub
rorb
gs
fsubrl
mov
mov
and
adc
push
add
sti
lds
cmp
clc
ja
adc
push
mov
cmp
jecxz
xchg
int3
icebp
mov
push
jno
pop
mov
sbb
mov
adc
xor
push
sub
arpl
out
dec
jns
aas
add
mov
jns
or
fldt
push
les
mov
pop
mov
stc
add
dec
xor
loop
inc
xchg
mov
sub
loop
sub
fnstsw
arpl
inc
dec
xchg
inc
incl
clc
jmp
sbb
rorb
dec
popa
cli
jae
and
addb
iret
lahf
mov
sub
jge
mov
cwtl
std
mov
shrb
idivb
mov
cli
xlat
sbb
loope
sub
mov
lret
xor
mov
mov
and
or
mov
lret
test
les
push
push
jmp
pop
cmpsl
xorl
jbe
fwait
jle
dec
insb
pop
jg
pop
shll
repnz
xor
mov
pop
lock
mov
cs
ds
mov
test
into
lret
xor
lret
lahf
test
jp
xor
jae
mov
test
push
incb
aaa
mov
mov
push
mov
push
xchg
icebp
out
cmc
dec
test
fbld
jecxz
daa
sub
mov
addr16
pop
cltd
pop
sbb
mov
lret
dec
jno
dec
daa
jno
fiaddl
aaa
sub
ss
mov
mov
imul
iret
sbb
stos
sarl
or
jecxz
and
lcall
and
gs
inc
sub
xlat
stos
adc
out
test
inc
je
mov
lret
xlat
lods
push
push
cmp
repz
pop
rolb
jge
mov
mov
xorb
int
lods
mov
mov
rorb
mov
es
stos
mov
jns
repnz
fsubrl
adc
pop
in
movsb
push
inc
push
mov
dec
add
xchg
push
sbb
xor
in
sbb
push
sub
xor
or
jae
add
sti
dec
enter
ss
or
mov
cmpsl
fs
mov
repnz
in
and
or
int
mov
jg
xchg
cwtl
or
sub
aam
iret
faddl
or
aaa
xchg
add
push
or
jmp
sub
adc
cmpsl
pop
mov
leave
mov
sub
sbb
loope
jno
fcompl
pop
andb
lea
or
clc
enter
inc
mov
int
repnz
inc
xchg
xchg
mov
popa
clc
mov
sub
and
pop
cmp
cmp
pop
js
movsl
pop
and
push
push
xor
popf
pop
xchg
orl
sub
sbb
ucomiss
mov
fdiv
cmpsb
sbb
jne
gs
jo
ss
test
inc
stos
addb
inc
jno
push
mov
sub
sbb
stos
mov
dec
insb
repnz
pop
mov
outsl
insb
xchg
add
push
shlb
pop
cmp
mov
out
jg
loopne
adc
inc
sub
pop
test
pop
lock
std
sbb
bound
mov
div
sub
cli
inc
call
bnd
mov
ficomps
test
adc
mov
shll
mov
cmp
mov
mov
cmpsb
aam
ret
dec
loopne
in
repnz
fiaddl
cmc
and
pop
test
cmp
mov
scas
jl
cmpsl
jno
dec
add
xor
bound
or
stc
and
shlb
stos
add
mov
mov
xor
fwait
pop
rolb
mov
xchg
push
fldt
and
dec
xchg
mov
shll
xchg
pushf
aad
jb
aad
mov
movsl
fisubrs
sbb
stc
sbb
mov
insl
xchg
jns
jge
aaa
add
push
scas
fistpl
popf
xchg
push
pop
sub
adc
ss
rcrb
mov
fwait
xchg
into
out
mov
mov
out
popf
mov
dec
jns
push
cmp
mov
push
insb
or
sub
ret
sbb
cmp
pop
clc
inc
xor
xchg
push
cmc
mov
mov
ja
pop
in
xor
cmpsl
addb
enter
in
shlb
out
pop
arpl
push
ret
xchg
outsl
aas
jb
addl
xchg
test
pop
mov
dec
push
orb
je
xor
push
lcall
pop
jo
add
out
stos
movsl
ret
mov
jl
rorl
mov
insb
or
cwtl
das
scas
pop
out
xchg
mov
xor
mov
shlb
pop
repz
out
call
ds
lret
cwtl
int
in
dec
cmp
cs
imul
push
cmp
popf
sbb
clc
mov
insb
mov
sbb
or
in
sahf
imul
iret
popf
into
adc
add
cmp
imul
aad
cmc
cld
fnstsw
frstpm(287
jle
sahf
fsts
js
shrl
xchg
or
or
fcmovnu
dec
inc
outsl
and
subb
in
jns
fdivrl
iret
ljmp
aad
scas
in
loopne
mov
cmpsl
imul
fs
sbb
fsubp
jmp
jle
xlat
mov
jl
mov
mov
out
sbb
mov
movsb
aad
insb
or
inc
dec
pop
addb
ret
adc
push
adcl
icebp
in
or
mov
lret
inc
cmp
sahf
sub
add
sub
popf
sti
jb
push
dec
push
outsb
out
mov
xor
add
fildll
std
dec
jo
les
mov
cmp
popf
aaa
dec
aam
jne
push
add
loop
xchg
sbb
inc
inc
aas
mov
popa
sbb
test
mov
scas
fcoms
pop
mov
or
fwait
mov
mov
loope
sub
pop
mov
dec
pop
and
iret
repz
stc
or
xor
fcmovnbe
sahf
cs
outsb
mov
stos
dec
in
data16
push
mov
push
and
push
xchg
sub
jle
imul
fdivrs
and
push
sub
pushf
lods
sub
popf
inc
mov
test
iret
fiadds
sub
in
lds
lret
sub
mov
push
aas
loopne
xchg
sbb
jb
gs
push
adcl
mov
fidivs
cmp
jl
imul
adcl
mov
decb
sub
aas
pop
out
sbb
sbb
xchg
negb
add
cwtl
inc
inc
inc
cmpsl
int3
sbbb
es
lahf
out
push
clc
mov
dec
mov
mov
xchg
jge
or
mov
or
out
or
sub
movsl
mov
js
sub
xchg
sbb
mov
into
testb
enter
sub
test
sub
cmpsl
mov
movsl
inc
mov
cmp
push
adc
push
add
dec
cli
or
lock
and
xchg
pop
rolb
or
dec
bound
addr16
dec
xchg
xor
sti
inc
dec
pop
mov
das
imul
inc
addr16
sbb
push
inc
stos
pop
jle
scas
gs
fnsave
sbb
pop
xor
push
out
data16
push
sub
or
cmp
fs
dec
fwait
icebp
lds
sub
out
push
sub
test
popa
aad
pop
call
popf
popa
aaa
mov
adc
ja
jmp
or
and
in
pop
cli
inc
in
bound
out
pop
pop
push
add
test
sub
jns
test
adc
test
rolb
in
fidivl
nop
scas
mov
idivb
jne
orl
push
push
leave
lret
loop
xchg
dec
pop
cmpsb
cmp
dec
hlt
xor
mov
sbb
je
int
cmp
imul
dec
xor
aaa
or
out
mov
pop
push
inc
jb
cli
and
xor
call
sub
inc
test
mov
adc
inc
jns
mov
lods
add
loopne
xor
pushf
test
push
lcall
sti
add
stos
bound
les
push
sub
aaa
lods
jns
nop
test
subl
sti
pop
std
sbb
arpl
push
xor
inc
loope
push
out
xor
lea
pop
jg
xor
dec
rclb
sbb
xchg
xor
cmp
mov
jmp
jo
push
std
scas
test
cltd
aas
sub
mov
cmpb
xlat
adc
ror
or
push
pop
movsb
repz
inc
push
cmp
add
sub
repz
fdivrp
xchg
dec
mov
jl
mov
loopne
sbb
test
xor
sti
pop
lds
mov
pop
mov
adc
repz
loope
std
push
jp
gs
scas
and
xor
adc
ljmp
out
push
and
and
into
in
or
ror
cli
pop
insl
pop
imul
sub
fs
rclb
in
outsl
jbe
inc
iret
adcl
cmp
in
sub
test
pushf
add
or
or
jb
pop
pop
pop
cmp
xlat
movsb
fstps
dec
jg
xchg
fs
mov
add
sub
lret
stos
out
xchg
pop
jns
orb
cmp
jbe
mov
arpl
fcomip
or
daa
and
xlat
popa
mov
addr16
mov
lods
mov
adc
cmc
fsubrl
subl
fcmovne
fwait
cmp
jns
mov
dec
mov
xchg
inc
iret
dec
sbb
mov
mov
pop
mov
or
ud2
outsb
inc
xchg
loopne
ljmp
and
jno
adc
outsb
mov
lret
sbb
jb
jl
cmpsb
push
mov
es
rclb
mov
cld
aaa
or
fdiv
cmp
aaa
arpl
push
aas
cli
xchg
xchg
imul
imul
das
mov
and
pop
or
cmp
dec
loopne
push
cmp
mov
xchg
fidivs
dec
inc
je
dec
adc
xchg
out
xor
cmp
add
sub
pop
cmpsl
fisubs
fs
movsl
push
popf
jns
dec
imul
cmovne
fdivrs
andl
movsl
in
xchg
push
mov
test
pop
loope
mov
mov
mov
in
pop
jo
or
fmul
pushf
andl
sbb
call
shrd
or
adc
mov
mov
fcomps
ss
mov
ret
test
into
dec
and
test
mov
shll
into
clc
cmp
fcmovu
insb
push
out
sub
adcb
js
fisttpll
and
xchg
mov
push
mov
outsb
jecxz
add
add
test
idiv
xchg
scas
cmp
popa
xor
pushf
add
and
inc
jl
movb
pop
sar
push
cmc
mov
xchg
aas
xchg
xchg
or
outsb
je
sti
push
fdivp
rep
push
push
movl
or
jne
add
lds
fldl
test
fwait
sbb
mov
enter
shl
cs
loop
bound
mov
cli
enter
je
xchg
outsl
sbb
xlat
hlt
adc
mov
clc
mov
adc
addr16
dec
dec
mov
jbe
fstps
adc
cmp
mov
cmpsb
aam
pop
ja
xchg
fcmovnbe
mov
sbb
pop
xor
jle
push
push
out
cmp
xor
rolb
pop
or
pop
mov
pop
repnz
jnp
int
rcrb
aas
add
push
adc
scas
out
enter
fildll
push
daa
adc
movb
pop
or
inc
add
fcoml
or
loope
add
push
repnz
stos
jne
inc
jmp
pop
testl
fnstenv
loope
or
stos
cmc
jns
inc
fwait
mov
mov
pop
inc
es
lret
icebp
fldl
fcom
mov
jo
mov
adc
inc
subb
dec
mov
sbbb
enter
xor
rcl
ret
mov
sbb
std
pushf
and
or
cld
sbbl
xor
pop
or
enter
xor
adc
pop
mov
mov
lock
out
adc
sub
cmpsl
mov
sub
imul
xor
xlat
pusha
xor
js
and
push
mov
mov
jmp
xchg
push
mov
xor
push
fs
jl
adc
jae
cs
or
gs
mov
and
sti
mov
jns
dec
insb
lret
cltd
and
out
or
jbe
inc
and
std
xor
jne
data16
testl
cmpsl
or
test
sub
mov
add
or
js
mov
inc
sub
popf
xchg
outsb
cld
ret
pop
or
xor
push
xor
test
js
outsb
pusha
xor
jge
aad
bound
cmp
mov
popf
fbstp
dec
or
outsl
mov
lcall
sbb
sti
xchg
push
loope
cltd
ss
movsb
and
ret
into
imull
js
xor
or
xor
push
inc
adc
push
mov
push
mov
stos
add
cmc
repz
xchg
mov
cmpsb
pop
test
xor
outsl
lret
jb
push
jmp
frstor
sub
xchg
sti
cli
ss
jo
outsl
fcoml
push
sub
jmp
add
xchg
out
jge
push
inc
add
addr16
pusha
mov
mov
cmp
pop
sarl
movsl
jns
inc
sub
mov
jecxz
pop
mov
cmp
mov
adc
cmp
stc
mov
adc
cmp
cmp
out
pop
repz
jmpw
scas
xchg
push
scas
jle
int3
in
sub
sub
scas
jne
cli
cmp
add
fsubrs
or
mov
ret
fistps
xchg
dec
inc
repnz
push
leave
js
jecxz
sbb
scas
shll
or
ret
arpl
fcompl
jmp
in
lret
add
inc
ja
jns
out
cld
cmc
and
add
sbb
mov
push
jmp
sbb
pop
jl
xor
outsb
ss
or
pusha
sbb
xor
shll
xchg
mov
xchg
fwait
mov
inc
out
jmp
mov
ss
stos
rorl
pop
lret
adc
in
xchg
cmp
or
mov
test
sti
dec
test
sbb
dec
das
push
jae
mov
enter
dec
pop
adc
or
jb
sbb
cwtl
ror
insl
mov
mov
sbb
fwait
loope
cltd
cmpsb
fmull
xchg
pop
cmpsb
mov
leave
xchg
jle
jl
dec
fisttpl
cmp
cwtl
ret
std
daa
jns
rorb
cli
in
lret
pop
out
fldl2e
cli
and
aaa
lea
cmpsl
fs
cs
shll
xchg
push
sbb
push
mov
mov
pop
push
imul
ljmp
repnz
and
rcll
mov
mov
fwait
dec
push
mov
jmp
out
jo
shlb
repnz
pushf
clc
inc
outsb
es
enter
pop
xlat
push
shlb
mov
and
xchg
dec
shl
inc
mov
mull
test
jbe
cld
inc
add
and
dec
jae
sbb
imul
mov
insl
and
fmuls
and
xchg
add
insb
icebp
cwtl
add
cld
mov
jns
push
mov
mov
add
push
fidivs
pop
das
push
popf
shlb
and
adc
pop
fcoml
adc
fbstp
mov
icebp
out
ficoml
xchg
jecxz
jb
out
and
inc
mov
lods
mov
pop
and
cmpsb
daa
adc
push
cs
fxch
xchg
add
and
sub
iret
pusha
ss
xchg
cwtl
cs
daa
imul
loopne
mov
and
mov
and
mov
sarb
je
dec
and
jg
cmp
in
jmp
sub
in
stc
dec
imul
or
arpl
mov
loop
push
cwtl
xchg
popa
push
push
cmc
mov
sbb
mov
push
daa
and
cwtl
scas
ficompl
loopne
popl
sub
dec
lea
mov
ret
push
xchg
divl
into
shlb
scas
xchg
adc
insb
loope
adc
push
lcall
gs
icebp
push
pushf
mov
scas
mov
ja
stc
iret
fiaddl
mov
inc
jl
test
jg
jmp
add
popa
fmul
or
sub
pop
sub
movsb
cmp
out
cltd
fldenv
jp
in
lahf
dec
inc
add
xor
push
xchg
sub
xorb
xchg
xchg
ficompl
push
js
insb
dec
sbbb
es
pop
xor
mov
lret
shl
add
xchg
cmp
je
loopne
cltd
lret
in
in
pop
call
jno
mull
ss
add
shrl
loope
ds
sbb
sub
xor
add
mov
aas
sub
cli
dec
jnp
inc
add
xchg
mov
or
fsts
sbb
push
test
xchg
frstor
out
inc
popl
inc
std
lods
xor
cmp
mov
insl
adc
imul
movsl
dec
add
and
pushf
movsb
aam
popa
cmp
int3
adc
inc
cmc
fdivrs
sbb
clc
jb
add
mov
push
push
sub
or
sub
sbb
enter
out
ja
xchg
int3
sbb
or
push
adc
popf
dec
lods
dec
jecxz
ds
mov
call
insl
xorb
pop
aas
ja
add
int
add
in
movsb
loop
and
inc
leave
adc
dec
gs
mov
adc
mov
sub
dec
xchg
jne
xchg
pop
dec
dec
sub
lcall
add
mov
sub
cmp
adc
fildl
iret
mov
out
sbb
jl
jge
jecxz
push
bound
mov
add
or
cmovnp
jmp
sub
ss
loope
loope
xchg
xchg
pop
fdivr
mov
pop
jo
xchg
imul
adc
push
sti
inc
jge
mov
ljmp
mov
adc
fnstenv
lock
data16
push
outsl
lahf
and
mov
dec
jge
inc
or
or
push
clc
fbstp
aaa
nop
iret
pop
rol
std
in
mov
push
push
sbb
pop
outsb
push
mov
jg
fisttpll
adc
xchg
or
jecxz
subb
adc
mov
push
pop
pusha
cli
or
mulb
dec
jmp
cmc
or
fidivrl
add
lds
add
pop
js
mov
jne
add
leave
add
adcl
mov
testb
call
xor
cmpsb
mov
mov
cmp
and
decb
inc
mov
mov
lcall
push
jns
addl
or
daa
xor
out
xor
mov
sub
icebp
or
mov
lret
aas
fistpl
inc
inc
sbb
mov
and
lds
adcb
mov
gs
xchg
push
mull
push
xchg
push
in
and
lods
xor
dec
inc
sbb
mov
les
push
dec
aad
dec
lcall
and
sub
mov
mov
mov
mov
mov
fidivs
das
mov
sub
ret
or
pop
pop
lret
loope
add
cmp
dec
in
and
and
or
cmc
sub
sahf
loopne
test
inc
jle
sub
push
adc
pop
dec
nop
cli
lea
lea
movsb
fwait
adc
das
cld
xor
je
fs
xor
pop
push
xor
fwait
inc
jnp
push
insl
jmp
add
ds
xchg
dec
lcall
sub
into
ljmp
mov
pop
fiaddl
pop
shr
fstps
push
push
ficoms
cmp
sub
pop
pushl
lahf
idivl
adc
sbb
mov
js
mov
scas
push
loop
cmpsl
out
sbb
inc
adc
xor
ds
add
dec
inc
and
data16
dec
lret
inc
lea
xor
pop
fwait
ss
call
sub
inc
in
adc
loop
add
test
jl
rclb
ret
dec
jmp
rorb
mov
repz
mov
xor
in
movsb
shlb
add
mov
cmp
lahf
lahf
jle
mov
loop
add
xchg
mov
push
push
xorl
movsb
cltd
fwait
push
call
or
mov
cmp
push
cld
cmp
push
inc
mov
xchg
dec
pop
mov
fs
andl
xor
pop
sub
add
hlt
jb
ror
jae
fmuls
int
mov
sti
push
adc
push
adc
cmpsb
ficomps
add
sub
stos
mov
lds
out
fwait
adc
xor
insl
xor
faddl
cmp
mov
sbb
push
loope
jp
xchg
popf
cli
ljmp
ret
ficoml
mov
mov
inc
sarl
int
dec
inc
iret
and
cmp
daa
push
mov
mov
or
push
loope
in
fcompl
inc
cld
out
mov
lods
addb
fcmove
xchg
popa
jne
pop
jg
jo
xor
jae
jecxz
lea
sbb
test
adc
je
xor
pop
cld
js
pop
adc
sub
inc
fs
and
repz
mov
aad
loopne
mov
mov
jmp
push
lret
roll
jo
jb
scas
out
frstor
dec
adc
lds
sub
xchg
mov
push
cmc
rcll
fsub
and
test
ss
hlt
lahf
cmp
inc
cmc
sarb
mov
nop
sahf
in
not
divl
and
or
ljmp
xchg
push
pusha
aad
negl
mov
adc
push
insl
sub
icebp
xchg
imul
ljmp
scas
mov
dec
mov
inc
adc
pusha
or
pop
aas
dec
fisubrl
daa
aaa
lret
out
xchg
ficompl
mov
inc
clc
mov
mov
add
movsb
mov
add
lea
push
aad
mov
aas
cwtl
add
fmuls
push
add
hlt
leave
imul
pop
mov
or
or
mov
inc
jnp
adc
arpl
push
aaa
adc
pusha
fstps
daa
fdiv
mov
cwtl
push
cmpsl
cmp
les
or
cmp
or
popa
push
loop
int3
pop
outsl
adc
leave
cmp
mov
mov
ss
cmpsb
pop
test
sbb
int3
mov
dec
icebp
cltd
sar
mov
adc
je
mov
mov
aam
adc
cmpsl
pop
stos
test
xchg
push
add
mov
lahf
push
out
mov
fadd
inc
addb
gs
stos
lods
sub
push
and
inc
cmp
pop
add
in
adc
cmp
adc
mov
arpl
cmp
or
rorl
xchg
dec
adc
mov
fisttps
push
aaa
stc
sub
xchg
dec
xchg
arpl
hlt
push
mov
sub
inc
mov
out
mov
pop
mov
jmp
inc
push
add
lea
pop
fmull
pop
data16
xchg
ret
out
xor
mov
mov
or
xor
mov
jnp
cmp
pop
cmp
movsb
fwait
std
addr16
cmp
push
icebp
pop
xchg
sub
jle
test
cwtl
out
and
rcrb
sahf
xor
jne
iret
inc
push
ja
movsl
or
push
and
out
pop
ficompl
mov
push
notl
jno
and
dec
movb
add
and
cld
scas
negb
sbb
lret
push
lcall
cmpsl
nop
sbb
push
insb
js
leave
pop
int3
push
sub
push
dec
and
push
mov
lock
ret
aad
push
xor
das
adc
test
loop
mull
sub
aas
in
sbb
std
je
adc
aam
lea
sbb
push
mov
add
push
push
sarl
cmpsl
imul
ljmp
enter
shl
out
cmp
push
imul
or
popa
aas
inc
dec
xor
mov
lods
dec
popa
push
jmp
jl
add
sbb
inc
jp
arpl
out
inc
out
sarl
ret
outsb
sbb
out
rep
dec
pop
mov
push
jge
jecxz
filds
sahf
in
jg
mov
das
mov
in
cmp
sahf
enter
ss
loopne
xchg
dec
mov
int3
mov
int
in
cli
data16
fs
pop
gs
insb
outsb
arpl
or
movsb
or
sbbl
ljmpw
popf
dec
les
push
in
add
inc
fisubl
loopne
push
mov
mov
out
les
mov
sbb
xor
aas
cmp
cltd
movsb
clc
mov
pop
je
icebp
jae
jno
xor
mov
jecxz
bound
adc
mov
sbb
in
mov
pusha
mov
jo
adc
imull
pop
out
lret
fcomps
mov
jg
and
loopne
rolb
cmpsb
push
push
sub
cmovb
out
jle
int
adc
sahf
mov
loope
mov
inc
sub
movsl
pop
les
mov
popf
ds
stos
xor
jb
dec
scas
scas
and
add
mov
or
and
ja
xchg
mov
cmp
ljmp
insl
ret
sbb
adc
into
sub
leave
sti
mov
subl
push
fsubs
sub
test
sarl
leave
aas
inc
add
lahf
mov
xlat
pop
adc
imul
mov
int3
pop
iret
lahf
push
fwait
add
bound
js
addr16
and
xor
imull
push
test
dec
push
pop
loopne
push
lods
mov
add
fdivl
adc
adc
xchg
popa
sbb
add
fcmovnu
jmp
jl
push
mov
or
xlat
mov
push
movsb
xchg
dec
int3
mov
xor
fidivrs
mov
shl
pop
stos
div
dec
or
mov
sti
or
arpl
shlb
add
cwtl
sbb
mov
jbe
dec
adc
adc
das
cmc
mov
mov
pushf
and
jp
jno
outsl
lahf
shrl
movsb
nop
mov
xchg
out
call
ja
inc
cs
pop
dec
pusha
push
sbb
or
pop
hlt
dec
cwtl
popf
mov
in
sub
mov
in
mov
dec
pop
out
inc
sahf
sbb
fs
xor
sbb
mov
mov
cmp
lahf
dec
imul
cmpsl
xor
and
xchg
insb
arpl
push
into
sub
jb
xchg
aas
out
and
gs
dec
mov
dec
lods
add
push
ds
ss
push
mov
mov
jae
adc
cs
jge
negl
das
loop
mov
ret
dec
sub
sub
into
dec
pop
das
adc
lods
addr16
sti
enter
addr16
out
mov
mov
push
aaa
push
xchg
xchg
cmp
mov
mov
aad
dec
adc
cwtl
dec
inc
into
sub
out
xchg
das
movsl
adc
mov
pop
pushf
lcall
outsb
daa
repnz
lock
sub
jg
ss
mov
and
in
pop
adc
fdivrs
and
pop
dec
xchg
add
out
shl
inc
cmp
mov
lahf
jb
bnd
in
jb
fisttps
pop
js
xor
dec
xchg
shl
dec
cmp
in
pop
hlt
imul
repnz
lods
push
fwait
iret
lods
mov
push
sbb
xchg
mov
aad
xorl
adc
hlt
scas
fiaddl
in
add
pop
cmpsl
bound
loop
daa
adcl
lock
and
notl
mov
ds
orb
mov
lahf
push
sbb
mov
dec
das
xchg
and
xchg
and
mov
ds
ret
or
stos
dec
jae
inc
mov
mov
jmp
pop
gs
xor
pop
loop
dec
and
lret
adc
mov
lock
movsb
jb
clc
adc
dec
pop
jmp
test
pop
push
rolb
das
jns
add
ljmp
inc
enter
push
push
inc
lods
repz
jmp
in
ss
add
inc
cmc
sub
or
js
push
dec
mov
xor
icebp
ljmp
aaa
mov
cmp
add
sub
repnz
or
test
pop
pop
mov
fisubrs
adc
or
inc
incb
in
filds
fcoms
add
adc
sub
sub
clc
mov
push
fdivr
pop
out
push
dec
dec
mov
addl
inc
jae
lcall
fnstsw
adc
dec
pop
sub
lods
push
jb
popf
inc
addr16
pop
and
and
sub
test
ficoms
push
push
jno
sub
loop
xchg
xchg
jns
cwtl
jno
lods
push
push
add
mov
in
mov
aam
mov
push
jno
aam
js
cmpsl
sti
mov
idivb
rolb
ja
mov
daa
adc
push
repnz
mov
mov
lods
lcall
lcall
test
or
or
sti
push
mov
fimull
jne
sub
mov
xchg
cmp
lret
ja
jp
adcl
hlt
bound
cmp
pop
inc
or
cmpsb
push
out
jne
movsl
ja
icebp
xor
jmp
push
clc
add
cmp
cmp
lret
test
jne
xor
filds
in
std
cwtl
sarb
pop
inc
jnp
lcall
pop
in
push
movsl
push
push
push
dec
cmp
mov
repnz
adc
mov
dec
cld
mov
mov
sub
fsubs
mov
push
imul
dec
jmp
push
pop
mov
jg
rcll
sub
jo
lret
push
dec
ret
cld
mov
adc
clc
xor
movsl
sub
hlt
fwait
sub
mov
pushf
jbe
sti
mov
loop
das
jle
scas
xchg
pusha
xchg
int3
xlat
sahf
mov
mov
pop
mov
and
xchg
enter
xchg
test
pop
sub
jg
addr16
pop
hlt
sub
jno
mov
sbb
dec
loope
dec
in
shll
arpl
or
adc
inc
xchg
inc
xor
out
inc
cmp
outsl
in
scas
adc
or
hlt
cmp
adc
rolb
xadd
shl
loopne
add
stos
frstor
int3
negl
adc
xor
cs
addr16
std
inc
lock
pop
xlat
cmpsb
cmp
push
adc
push
loop
or
mov
dec
mov
inc
xor
mov
adc
je
imul
cmc
negl
xor
imul
js
sahf
mov
pop
sub
lcall
sub
cs
fmul
xor
sbb
aam
out
je
stos
pushf
inc
into
nop
notl
xor
dec
cmp
jle
jae
or
cmpsl
lock
int
mov
push
add
popa
jg
sub
loop
mov
jne
add
imul
sahf
ja
mov
mov
mov
mov
push
sbb
inc
push
sub
mov
mov
push
fdivrs
xchg
iret
ds
jne
jbe
fildll
movsb
and
ss
lods
int
xchg
or
ror
mov
pop
dec
xchg
jg
push
dec
rorb
mov
loopne
push
mov
cmpsb
notb
mov
pextrw
scas
jl
sti
fisubs
xchg
or
or
aaa
gs
es
ss
mov
dec
mov
jne
adc
xchg
sub
dec
testb
mov
shrb
cli
sub
std
addb
dec
adc
mov
lods
and
sbb
jne
out
and
leave
out
sti
ds
std
mov
sbb
adc
das
xchg
insb
xchg
push
cmc
lcall
enter
adc
sub
dec
popf
push
push
push
adc
popf
insl
loopne
lods
dec
sahf
insl
lret
ret
push
out
push
incb
and
into
mov
rorb
inc
testl
cmp
roll
add
jl
adc
xchg
cmp
xor
cld
and
or
iret
or
sub
xchg
aam
outsl
lret
clc
popf
push
push
xchg
aas
out
push
std
or
ja
push
dec
daa
mov
popf
pop
test
icebp
int3
xchg
pop
int
xchg
ljmp
lret
push
in
and
dec
lret
fadd
mov
cmp
jge
mov
lods
adc
repnz
bound
mov
rcl
and
in
fs
push
jmp
lods
cmpsb
jge
pop
lds
leave
or
push
pop
shlb
pop
stos
jo
add
mov
pop
test
faddp
int3
add
pop
dec
mov
xchg
mov
mov
out
add
mov
push
mov
pop
or
xchg
dec
fcomps
xchg
and
das
nop
cmp
sbb
inc
outsl
pop
repz
dec
and
pop
andl
mov
int3
sub
xchg
in
adc
hlt
sub
hlt
ja
sahf
mov
popf
mov
lahf
dec
add
jnp
imul
ret
insb
ss
adc
lahf
dec
in
test
loop
std
mov
and
iret
scas
rclb
mov
dec
adc
test
adc
jmp
jle
ljmp
hlt
or
enter
aas
iret
sub
movsl
loop
mov
adc
push
jb
pop
xor
jnp
mov
push
mov
jmp
fs
jnp
jns
in
in
inc
shlb
dec
jp
jge
stc
dec
sbb
or
call
cmp
movsl
jl
vpsubsb
fsubs
push
dec
add
add
fwait
pop
stos
leave
les
fwait
xchg
movsb
cs
cmp
cltd
push
lret
stc
fnstsw
pop
ret
dec
negb
inc
movsb
les
sbb
push
push
and
sbb
pop
sahf
jne
loop
or
adc
pop
bound
push
into
sbb
pop
mov
loopne
pop
divb
xor
cmc
xchg
jns
mov
mov
out
dec
shlb
movsl
push
xor
sarl
rcll
mov
cs
sub
adc
nop
fstp
sbb
mov
loopne
into
mov
rol
mov
outsl
daa
fnstenv
adc
mov
popfw
cmc
imul
pop
sub
sbb
test
mov
or
stos
leave
fimuls
mov
add
jae
lahf
mov
je
mov
popf
jl
xchg
dec
dec
adc
mov
push
imul
dec
pop
jb
or
ds
insb
push
movsl
bnd
mov
mov
cmp
fiadds
push
enter
fiadds
ds
push
or
in
insb
fs
movsl
xor
lods
inc
pop
pop
lret
in
out
jbe
and
mov
enter
sti
push
rcrb
or
mov
rcll
inc
sub
lcall
out
cltd
fnstenv
fcomps
aad
int
or
inc
cmc
mov
adc
fildll
push
cmp
push
or
fxch
std
sbbb
xchg
lods
adc
ret
stc
in
inc
dec
add
pushf
jl
or
push
mov
adc
imul
push
lcall
add
insl
lahf
mov
or
test
test
mov
repnz
shrl
lret
out
add
js,pt
xchg
or
insl
cld
insl
mov
sbb
or
call
mov
cltd
aad
scas
fistpll
pop
lds
aam
mov
hlt
jmp
aad
pop
jge
lret
add
mov
push
mov
push
mov
add
mov
int
test
dec
mov
test
mov
fisttpl
pop
aam
xchg
add
popf
in
popa
jp
bound
ja
popa
out
jp
jbe
mov
out
fldl
dec
pop
popa
notl
mov
push
sti
sbb
jb
lahf
jg
outsl
mov
add
jl
rol
ja
insl
or
fwait
popa
fnstcw
pop
add
cmc
cli
or
dec
out
js
fisttpl
jp
pop
shlb
fistl
fildll
loop
and
jg
stc
pop
and
lds
jle
xchg
jnp
add
sti
shl
xorb
dec
push
add
jb
adcb
lods
cmp
mov
mov
loope
ss
inc
mov
ljmp
xor
ret
int3
sub
push
cmp
ljmp
mov
jg
rorl
lret
sbb
cld
out
out
iret
gs
scas
mov
sbb
leave
add
insb
mov
scas
or
mov
hlt
imul
xchg
imul
push
sbb
inc
fbstp
clc
xor
mov
mov
push
pop
sub
mov
mov
int
mov
dec
rclb
adc
xchg
inc
jmp
dec
or
xor
push
fnsave
mov
repz
mov
xchg
je
pop
sub
movsl
push
aaa
and
inc
jno
nop
mov
and
add
or
mov
lcall
mov
dec
xchg
mov
fsubrl
repz
roll
inc
gs
and
jmp
jge
add
sbb
cli
jbe
dec
mov
cmc
jno
iret
jecxz
js
into
mov
mov
ljmp
or
mov
mov
shl
push
frstor
sub
insl
out
fwait
jg
in
xchg
and
outsb
add
push
mov
push
mov
cmp
cwtl
test
or
pop
fnstenv
int
fldcw
xchg
cli
insl
sbb
xchg
iret
test
add
cmp
popa
sar
mov
lea
mov
mov
mov
inc
insb
testb
lds
insb
add
xor
mov
negl
mov
shlb
out
ds
push
bound
xor
mov
pop
das
push
xchg
mov
mov
in
dec
dec
jge
jns
loopne
mov
xchg
push
dec
loop
mov
xor
adc
cwtl
cltd
push
adc
mov
addr16
sti
cli
fs
mov
jns
lcall
sub
and
jge
mov
call
out
pop
aam
bsr
mov
imul
jg
or
mov
popf
or
sub
rorl
gs
es
push
call
outsb
stos
pop
andl
mov
sahf
mov
xor
int3
jne
arpl
sbb
jge
or
pop
push
push
in
push
add
and
aam
xchg
lcall
push
aam
cmp
pop
out
inc
mov
shlb
inc
mull
jnp
addr16
sbb
mov
cmpsb
adc
in
imul
test
sbb
inc
mov
cli
jle
dec
call
xor
xchg
loop
int
outsb
jge
push
sub
out
sbb
cmpsl
xor
cld
sub
iret
insb
and
out
inc
loope
lret
les
sub
das
daa
sub
mov
ret
das
cmp
adc
adc
sbb
and
andl
sbb
dec
add
push
mov
cli
or
push
arpl
mov
add
dec
mov
adc
and
xor
xchg
add
add
test
fwait
js
pop
mov
pop
pop
int3
mov
int
sti
dec
fwait
sub
nop
xchg
push
jns
push
dec
daa
mov
rcl
mov
pop
or
data16
mov
repz
xor
aad
push
dec
stos
adc
pop
mov
sbb
addb
add
icebp
and
mov
xchg
mov
negl
pusha
mov
pusha
cmp
sub
out
pop
xchg
sarl
hlt
dec
pop
sub
imul
cmc
pop
dec
lods
aaa
test
xor
cli
inc
outsl
jo
dec
pop
je
idivl
aad
pop
jns
jmp
fsub
push
xchg
lahf
dec
xor
pop
xchg
unpcklps
add
sub
les
std
xlat
inc
out
sub
mov
aas
negl
inc
aas
fdivl
and
jb
dec
into
out
and
in
je
stos
out
insb
out
stos
lods
pushl
roll
orl
cmp
into
xor
leave
js
or
loop
dec
mov
cmp
jns
outsb
mov
loope
mov
cmpsl
jae
das
xor
scas
mov
ss
xor
add
inc
loop
movsb
sub
imul
and
mov
nop
js
stc
pop
cli
xchg
lahf
cmp
cmpb
push
push
fsts
jmp
cmp
or
xor
dec
mov
jno
jnp
xchg
mov
dec
lock
push
cmp
test
test
push
dec
push
or
movsb
fidivl
add
adc
and
push
pusha
pop
mov
imul
xor
in
sub
out
inc
psubb
mov
sti
orl
cmp
ss
lea
mov
cltd
mov
fstl
outsl
pop
dec
dec
out
jnp
je
lahf
push
push
jo
pop
stos
pop
lcall
mov
movsl
lahf
out
cmp
test
rcl
push
lahf
and
push
add
stos
jo
out
mov
fldl
repnz
sub
mov
push
movsb
or
jnp
ds
je
in
orl
into
shlb
dec
imul
mov
cmpsl
testl
mov
adcl
xorb
and
sbb
xor
jge
cmc
rcrl
pop
pop
ds
inc
dec
and
pop
hlt
repnz
mov
das
push
inc
popa
add
out
xor
decl
dec
or
fcmovne
and
popa
cmpb
mov
lods
rol
xor
jmp
test
adc
loope
addr16
xchg
cmp
jae
dec
lds
in
leave
dec
push
inc
and
jge
jnp
add
cld
mov
outsl
xchg
lds
sub
pop
push
xor
popf
dec
xchg
sbb
pop
mov
adc
jge
lds
dec
clc
sbb
mov
sbb
shrb
mov
add
push
fsubr
xor
in
fs
das
shlb
rclb
cmc
adc
sarl
ljmp
imulb
and
mov
adcl
repz
xor
mov
inc
movsl
aas
xchg
rcl
cmpsl
icebp
inc
xchg
adc
addr16
mov
popf
fisttpll
fs
xchg
test
add
cmpsb
jg
iret
adc
jp
inc
mov
fsub
rep
scas
data16
adc
insl
jae
xchg
push
aad
adc
leave
sub
or
into
pop
outsl
and
xor
in
add
xchg
jb,pt
lcall
lock
addr16
mov
bound
hlt
out
int3
mov
out
test
stos
pop
push
in
pop
sbb
out
and
xchg
inc
ret
jo
lods
sbb
fwait
mov
mov
push
push
jg
xchg
in
mov
jmp
jo
mov
out
cmp
rcrb
hlt
idivb
push
pop
mov
ret
cltd
or
dec
jb
std
imulb
das
add
subl
pusha
or
xor
add
insl
adc
inc
nop
out
xsha1
cmpsb
or
shrl
mov
mov
cmc
push
loope
jge
xor
fcoml
inc
cwtl
fmulp
in
pushf
pop
mov
dec
add
insb
jnp
js
nopl
ds
sub
dec
jecxz
xor
in
mov
inc
fldcw
lahf
fistpl
loope
mov
iret
push
lock
jae
cli
fcom
fisubs
sub
popf
mov
adc
mov
add
stos
xchg
hlt
sbb
daa
mov
mov
push
inc
fisttpll
push
clflush
or
mov
sub
fs
jl
in
aam
push
jle
test
cmc
add
pop
decl
xchg
ljmp
push
outsb
dec
das
aaa
fidivs
ljmp
cmp
je
jp
inc
ret
sbb
pop
and
cs
ss
rorb
daa
inc
jne
bound
sbb
push
fldenv
mov
pop
adc
adc
leave
cmpsb
inc
sub
and
repnz
add
sbb
pop
xlat
push
pushf
shrb
js
hlt
out
jb
cltd
mov
push
xchg
sub
lahf
imul
jnp
add
mov
sub
insb
sbb
les
fwait
jge
mov
push
gs
mov
or
loop
test
rol
push
or
rcll
je
mov
and
divl
mov
push
jne
imulb
dec
maxps
jae
mov
insb
pop
movups
movsl
pushf
stos
push
es
fwait
inc
pop
scas
mov
mov
and
test
insb
xchg
mov
mov
push
dec
and
dec
adc
out
insl
lahf
jbe
adc
data16
int3
xchg
sbb
fisubs
push
roll
mov
pop
pop
fstl
pop
push
push
push
popa
rcl
jns
aam
sub
sub
mov
or
pop
leave
inc
xchg
sub
inc
xchg
jge
fidivs
les
inc
lods
mov
dec
mov
add
cmp
xor
in
mov
test
test
mull
lcall
push
jmp
ss
and
fs
test
mov
out
lock
jmp
cmp
cmovb
mov
popa
mov
inc
call
mov
bnd
les
cmpsl
sbb
mov
cld
arpl
cmp
sub
out
test
sub
adc
mov
inc
push
xchg
dec
sub
in
lret
movsb
sub
adc
das
cltd
imul
inc
test
jmp
sub
aam
loope
xor
adc
push
aad
and
cmp
jbe
push
sub
ficoml
mov
adc
fsubr
or
cmpsb
add
fmull
movb
int
sub
testl
aad
dec
push
fsubrl
js
sub
add
ret
jne
mov
pop
pop
pushf
fsubrl
dec
es
ret
subl
loop
cs
loop
cmc
or
adc
lahf
pop
test
adc
jl
xor
cmp
andl
xchg
push
xchg
push
in
xor
lock
in
popf
popf
daa
jp
inc
fsubrs
loopne
loope
mov
pop
adc
lods
mov
scas
aas
insb
xor
and
mov
inc
pop
or
loopne
mov
cltd
mov
scas
cmpsl
pop
aas
mov
mov
mov
mov
pop
mov
jg
push
es
xor
notl
lods
fdivp
cld
jle
and
mov
xchg
xor
std
mov
jle
xchg
pop
in
test
outsb
or
inc
pop
in
cwtl
cmpl
jl
in
dec
lea
inc
in
cmp
into
in
pop
add
xor
call
mov
data16
cmp
cmp
fs
mov
jbe
rol
xchg
pop
stos
add
cmpsb
cmpsb
addr16
sbb
adc
sub
push
mov
pop
pop
xor
cmc
jns
movsb
call
add
scas
roll
sbb
stos
push
sbb
jecxz
jg
xchg
bound
xor
movsl
repz
jnp
push
int
ja
shlb
and
mov
push
and
leave
mov
jecxz
nop
mov
sbb
repz
cmpsb
push
push
call
fnstsw
push
call
dec
jne
dec
and
movsl
cmp
add
pop
add
push
fsubl
mov
add
lret
jno
scas
les
mov
sbbl
outsl
pop
xor
and
sub
mov
inc
push
add
hlt
arpl
outsb
mov
push
stos
mov
push
dec
pop
popf
mov
loop
stos
jns
jo
xchg
inc
sti
es
arpl
and
loope
add
imul
inc
movsb
das
std
sbb
push
testb
jno
sub
jl
stos
pop
pop
mov
fnstcw
lret
adc
push
insb
lahf
xor
test
dec
rcl
arpl
mov
or
adc
sbb
dec
mov
and
incb
sti
mov
xor
pop
shlb
xor
cmp
fs
jle
sub
std
lds
fstl
call
jge
add
jp
in
addb
lahf
mov
pusha
scas
stos
das
lret
stos
mull
scas
pop
lds
addr16
out
cmp
push
std
cmpsl
rcrb
pop
push
cli
icebp
or
test
imul
iret
imul
jp
pop
xor
push
mov
mov
mov
adc
mov
lahf
push
rcll
pusha
and
mov
xor
dec
xchg
mulb
jb
xchg
scas
mov
cmp
notl
fs
xor
cmc
push
sbb
pop
sbb
push
mov
or
dec
loopne
fadd
and
mov
dec
repz
or
add
lds
dec
jle
aam
mov
pop
call
arpl
add
test
sbb
jns
pop
jmp
and
inc
mov
out
pusha
cmp
outsb
mov
popa
add
sbb
ljmp
dec
xchg
stos
mov
lahf
stos
dec
inc
icebp
leave
inc
mov
movsl
insl
ds
adc
shrl
call
clc
pop
popf
popa
inc
loopne
movsl
sti
jns
dec
xchg
decl
repz
push
add
pop
shl
adc
sub
dec
sbb
fbstp
das
mov
andb
xchg
insb
mov
push
xor
cmp
cmc
cmp
out
mov
push
jp
push
pop
les
jp
data16
pop
sarl
dec
push
fstpl
lock
xor
and
lods
je
mov
pop
mov
lcall
push
cli
stos
sbb
jmp
das
incl
notl
mov
aas
shlb
je
movsl
je
out
sub
addr16
inc
arpl
jge
sti
sbb
test
adc
cld
dec
dec
sahf
add
dec
leave
pop
jo
flds
jns
cmpsl
insb
cwtl
jns
shlb
hlt
jno
lahf
sub
in
fwait
dec
in
loop
aam
and
mov
loop
pop
mov
mov
push
out
sbb
push
leave
and
gs
mov
push
pop
popa
inc
loope
or
sbb
push
cmp
cmp
xchg
cmp
dec
xor
pop
pusha
pop
or
dec
inc
dec
jg
or
or
xorl
aaa
and
mov
mov
cwtl
hlt
add
test
stos
cmp
movsb
xor
push
fisttpl
shrb
out
inc
sbb
and
mov
shll
jae
adc
sbb
pop
sub
pop
test
cmp
cltd
inc
std
cld
pop
movsl
and
fs
sub
jo
jns
pop
xchg
out
xchg
cmc
jmp
cli
test
ret
scas
adc
cmpl
ss
jl
inc
jmp
cmp
out
push
stc
pop
adc
cmp
jge
push
push
es
add
xor
fadds
and
out
pop
lds
push
mov
pop
nop
cmp
test
and
nop
rcll
mov
arpl
repnz
pop
cmpsl
ror
fwait
les
dec
inc
repz
jecxz
jl
cmpsl
jp
xor
sub
mov
rorl
add
inc
daa
sahf
sub
sahf
sub
femms
pop
inc
movsb
jnp
cmpsl
fildl
std
jae
dec
mov
jae
data16
insl
ss
mov
fsubl
push
cmpsb
mov
mov
loope
jnp
out
je
mov
leave
xor
jg
and
lods
inc
mov
adc
jmp
dec
out
mov
push
adc
sahf
mov
cmp
mov
cmp
mov
hlt
lods
pop
push
jo
mov
stos
in
mov
cmp
adc
xchg
fadd
inc
mov
add
and
into
push
mov
arpl
mov
ds
xchg
cltd
ljmp
push
pop
es
jp
and
sbb
cltd
fstl
mov
rclb
pop
xchg
dec
push
push
pop
push
scas
mov
and
cmpsb
outsb
inc
ljmp
xor
pop
lret
jl
cwtl
adc
mov
mov
in
mov
es
and
dec
or
jae
adc
jae
pop
aas
jnp
push
cld
cmpsb
int3
inc
push
out
push
and
sub
sarl
popf
aam
pop
scas
and
and
mov
mov
out
dec
imul
dec
imul
dec
lds
lock
push
dec
adc
xor
push
add
jmp
movsl
cmc
in
lahf
sub
add
jge
mov
bound
test
or
ret
mov
mov
sbb
push
or
dec
inc
test
inc
jg
orb
xor
add
rcll
sbb
dec
in
out
roll
testb
xor
xchg
jno
mov
adc
inc
ficoml
scas
loopne
cmpsl
xchg
arpl
gs
lods
mov
cmc
out
sub
push
test
imul
jp
shlb
roll
out
lret
hlt
cmp
cmpsb
repnz
mov
mov
in
sub
mov
adc
pop
xchg
xchg
loop
push
sti
push
push
lock
cmpl
cmp
inc
xor
fstps
popa
mov
outsl
in
pop
stc
mov
sub
xchg
lods
push
leave
roll
int
daa
hlt
repz
xchg
popf
pop
mov
push
leave
ss
inc
jge
adc
mov
popl
xorl
xor
clc
mov
aaa
cmpl
pop
stos
lods
outsl
sbb
dec
add
dec
mov
hlt
adc
jg
hlt
mov
scas
call
lods
sbb
jge
pop
pusha
jno
insb
inc
pop
sub
mov
push
cmp
jnp
xchg
cmpsb
or
xchg
jecxz
mov
xchg
mov
and
lods
outsl
pop
sbb
sub
lods
dec
pop
xorb
push
pop
mov
adc
pop
int3
cmp
mov
leave
and
sbb
xchg
jb
fsubr
ljmp
cmp
ficoms
fs
fidivl
push
mov
call
pop
jp
repnz
push
frstor
inc
lock
into
dec
mov
mov
testb
add
out
jnp
hlt
sahf
cmp
mov
lret
fptan
cmp
scas
ja
pop
dec
push
mov
daa
je
pop
aas
jmp
xchg
js
push
sub
xor
sub
pop
mov
sub
jmp
loope
insl
push
out
pop
inc
xchg
iret
ss
push
imul
push
inc
aam
ds
dec
push
xchg
data16
subb
cmp
orl
clc
xchg
lds
enter
pop
pop
xor
mov
sahf
push
jne
fisubs
mov
pusha
call
std
dec
and
push
cmp
ret
in
mov
push
dec
jecxz
repz
xor
jns
test
fildll
push
and
stos
mov
std
sbb
in
sub
push
jnp
xor
sbb
sub
pop
jmp
push
xchg
clc
lods
mov
mov
jmp
bound
dec
push
xor
pop
movsb
push
add
fwait
xchg
mov
into
inc
in
icebp
sub
pop
jno
cmpsb
inc
movsb
inc
jnp
cmp
xchg
and
jp
inc
cmp
xchg
sub
int
mov
mov
arpl
adcb
jns
das
mov
loope
sub
inc
out
shl
addr16
cmp
dec
imul
arpl
mov
movsb
scas
ljmp
mov
scas
mov
xor
add
incl
pushf
mov
inc
inc
mov
test
es
xorl
or
test
es
mov
stos
cmp
pop
adc
sub
adc
sub
rcll
adc
and
mov
call
fimull
add
fwait
shrb
cmp
ljmp
outsl
rorl
sub
mov
xor
mov
insl
jae
adc
in
or
imul
and
ljmp
inc
mov
mov
xchg
or
jae
out
mov
int
cld
adc
jns
jmp
in
aas
mov
int3
pop
adc
adc
cwtl
xchg
gs
jo
jno
add
movsb
mov
cs
pusha
push
sbb
out
shrb
stc
arpl
test
or
mov
add
mov
mov
test
jmp
cmp
sbb
mov
push
mov
adc
sub
fistl
dec
and
es
lahf
sbb
add
mov
or
and
push
rorl
mov
lahf
int3
jp
mov
ds
fwait
in
add
mov
leave
push
dec
mov
cmp
mov
ss
test
loopne
arpl
sbb
int3
rclb
jne
addb
or
mov
sti
jne
mov
sti
xchg
aam
fadds
or
xor
ret
xchg
outsb
das
sbb
sbb
scas
xor
mov
stc
mov
push
imul
sub
dec
cmpsl
mov
push
xchg
add
sbb
add
test
lods
roll
pusha
fsts
jb
or
stos
add
nop
das
sbb
inc
jecxz
pop
inc
lods
xor
push
aam
cwtl
pop
and
jp
adc
inc
cmp
cld
cmp
ljmp
mov
hlt
out
addl
xchg
mov
aaa
fs
cmp
mov
push
xor
test
insb
cltd
or
mov
loopne
pop
or
cmpsb
out
and
mov
shl
dec
std
jae
test
repnz
mov
addb
mov
sbbb
jne
sub
pop
cmp
popf
movsb
sub
add
hlt
inc
and
call
es
das
and
adc
cmpsl
cmp
aad
or
sarb
mov
in
out
lahf
sbb
lret
es
out
lods
test
or
jne
lods
cltd
pop
push
mov
adc
roll
adc
add
push
cwtl
dec
sbb
mov
das
pop
push
mov
into
mov
incb
pushl
mov
pushf
iret
lret
jg
push
pop
fsub
mov
jns
adc
dec
rclb
jmp
ret
jmp
xor
aam
pop
xor
push
pop
das
pop
jmp
mov
and
std
jb
jbe
cltd
aam
inc
loope
dec
mov
mov
out
or
cli
outsl
fsubrp
push
or
jp
xchg
push
orb
xor
loop
ret
fnstsw
shll
inc
jbe
cmp
cmpsb
pop
hlt
call
adc
mov
daa
mov
test
cmp
xchg
add
add
push
mov
insl
ret
loop
stos
cmp
and
xchg
clc
testb
and
xchg
push
pop
pop
aas
xchg
fildl
mov
inc
dec
dec
icebp
imul
popf
xlat
inc
jns
jae
int
out
jge
jmp
cmp
dec
out
dec
daa
xchg
mov
lea
sub
lea
sti
cmpsb
push
ss
ja
mov
test
jne
or
js
aas
ja
loopne
mov
mov
push
mov
in
int
add
or
mov
movsb
cwtl
in
pop
push
sbb
xchg
mov
mov
dec
cmp
mov
xor
or
cld
adc
loop
imul
pop
mov
jmp
sub
leave
push
fcompl
jbe
insb
mov
test
add
xchg
movsl
out
push
sbb
sbb
fdivrs
sbb
cmp
pop
les
je
push
int
lods
idivb
xor
stos
add
out
push
rclb
mov
divb
ret
jnp
or
in
sbb
enter
in
add
pop
popa
test
add
icebp
and
push
add
xor
cmp
fimuls
inc
push
push
cmp
dec
jle
in
dec
or
fildll
sub
pop
repz
inc
or
rol
push
cs
pushf
mov
lods
and
ret
xchg
rcl
inc
add
scas
test
cs
in
push
aas
pop
sbb
sbb
aam
pop
pop
adc
jo
iret
stc
mov
push
mov
pushf
or
or
add
movsb
pop
and
push
add
dec
test
out
movsb
les
pop
adc
sahf
pop
and
loop
adc
add
push
andl
dec
mov
push
je
sarl
movsb
dec
jo
fdivp
repnz
and
add
fisttpll
inc
jg,pn
dec
or
or
or
jmp
xchg
or
ljmp
pushf
pop
push
sub
addr16
add
or
mov
cwtl
pop
xlat
xlat
add
and
add
test
mov
lock
adc
movsl
imul
pop
push
shlb
std
lds
lret
jo
cmpsl
mov
imul
fucomp
add
test
xchg
lds
mov
ja
cmp
ret
mov
jl
push
mov
xchg
pop
pushf
add
mov
inc
insb
addr16
cli
fisubl
scas
jns
jne
dec
into
xor
mov
repz
sbb
repnz
mov
and
and
das
repz
addr16
enter
xor
push
xchg
mov
mov
ss
repz
mov
mov
outsb
dec
in
pop
cmp
pop
pushf
pop
or
ds
test
push
insl
xor
ljmp
mov
aaa
pop
lods
enter
pop
add
jmp
push
fstpt
sbb
sub
negl
and
shl
push
popa
xlat
and
std
pop
mov
aam
sub
jp
das
pushf
xchg
jp
cmp
xor
in
push
ljmp
push
xchg
push
and
ret
mov
dec
sbb
subb
lds
cli
je
pop
mov
adc
es
sub
out
imul
sub
outsb
inc
imul
xchg
dec
push
adc
mov
scas
sbb
out
xor
mov
xchg
insl
sub
jecxz
push
cli
and
mov
xchg
insl
scas
inc
sub
dec
iret
cwtl
roll
mov
cmp
aaa
arpl
pop
xchg
mov
mov
cmp
xor
sbb
stos
test
loopne
ror
pop
mov
mov
gs
inc
xchg
mov
pop
push
fiadds
lock
push
adc
sahf
fildll
pop
enter
sahf
inc
mov
xchg
clc
push
imul
dec
cmp
outsl
mov
sub
xchg
cmp
pop
xorl
lds
push
dec
and
mov
xlat
jecxz
pop
mov
or
test
scas
jbe
mov
mov
add
insb
adc
mov
and
and
adc
xchg
mov
fmul
dec
lret
int3
rorb
xchg
jae
cmpl
pop
movsl
push
aam
int
xchg
jae
push
vpminsw
sbb
rorb
add
rcpps
stc
mov
das
lea
xchg
vpunpcklbw
pop
push
rclb
push
outsb
dec
xchg
cmp
sub
shrb
lret
inc
add
fwait
lock
push
imul
xor
push
mov
pop
fsubl
pop
jns
xchg
fbld
mov
insl
daa
mov
or
push
adc
clc
mov
fsubrs
mov
scas
or
int
dec
shll
lods
out
cmpsl
inc
jo
je
lcall
loopne
pop
frstor
jbe
or
insb
cmp
insb
adc
jb
in
jb
fnstcw
push
xor
push
mov
xchg
pop
cmp
xchg
leave
ret
adc
lock
pop
push
sub
add
add
xor
flds
int3
dec
xchg
mov
aas
push
mov
xor
je
xchg
cmp
dec
add
clc
and
push
mov
inc
mov
mov
cmp
or
jmp
mov
shll
xchg
push
inc
aas
out
mov
mov
ret
sbb
or
inc
and
in
fstl
sub
xchg
xor
jp
push
stos
xchg
arpl
dec
ljmp
adc
dec
xor
mov
data16
fs
cmp
hlt
aad
mov
xor
cmovnp
fwait
andl
mov
add
inc
aaa
in
cmpsb
cmp
ret
seta
cmp
jb
fdivs
shl
dec
imul
xor
jp
push
mov
jge
sub
jg
push
aaa
add
mov
ss
insb
stos
jge
fiaddl
sarl
add
push
sbb
pop
xor
mov
sub
add
add
aam
or
push
idiv
sbb
jbe
icebp
push
xor
mov
lea
loopne
mov
mov
insb
push
scas
cltd
adc
pushf
ret
adc
inc
lret
add
xchg
pop
lcall
lret
iret
es
and
in
jno
fneni(8087
cmpsb
and
pop
test
pushf
pop
mov
mov
pop
xor
jg
into
insl
fs
andb
ret
pop
scas
and
ficoms
loopne
sbb
ret
rcr
cmc
lret
scas
xor
mov
mov
and
int
dec
repnz
mov
inc
sbb
mov
ds
xor
add
nop
in
fildl
pop
push
xor
fsubrl
jmp
jb
cmp
pusha
imul
jecxz
ljmp
xlat
int
mov
stos
cmovp
jnp
sbb
test
jne
icebp
cld
push
fidivs
cmp
pop
clc
repz
lahf
mov
mov
and
push
mov
gs
cld
xchg
push
push
add
adc
mov
xchg
adcb
xchg
xor
or
cmc
cmp
push
cltd
cmp
jb
or
mov
mov
sbb
js
jae
sbb
adc
xor
aam
lahf
add
push
in
jmp
insl
inc
enter
cs
aas
fwait
imul
add
ret
sarb
jo
mov
jno
sbb
pushf
into
scas
aam
repnz
mov
int3
xor
shrb
mov
xor
ret
push
dec
insb
stos
and
xchg
jo
outsb
iret
mov
mov
insl
daa
dec
test
push
pop
push
pop
test
xor
fcoml
jle
in
fisttps
cmp
stos
das
jecxz
test
test
xchg
rorb
pop
sub
pop
dec
xor
inc
fnstcw
jmp
push
sub
adc
and
push
arpl
loope
daa
bound
mov
sti
mov
shrb
js
mov
mov
jbe
inc
lret
scas
out
flds
mov
cmp
push
sub
inc
pop
idivb
loopne
pusha
divb
xchg
in
mov
out
lret
mov
int3
xchg
inc
dec
gs
cmpsl
sub
mov
out
lods
negb
inc
jl
or
sahf
das
aas
cmp
les
das
xchg
out
icebp
movsb
ja
cmp
js
test
test
xchg
add
in
xchg
adc
dec
mov
mov
pop
bound
lods
fsubr
int3
addr16
push
popa
fldcw
jnp
fcoms
shll
fldl
cmpsb
inc
jae
hlt
fwait
mov
jbe
inc
pusha
cmp
pop
outsb
jnp
add
and
insb
push
mov
imul
movsb
and
sub
mov
mov
popf
jne
mov
jns
pop
jbe
push
lods
xor
xor
mov
xor
inc
loop
out
jle
out
das
aaa
push
imul
jae
ret
inc
repnz
fisubrl
xchg
push
ja
sbb
jge
jp
out
jge,pt
ror
aaa
cmp
cld
stos
push
pop
mov
jbe
jp
mov
rolb
pop
mov
aaa
gs
cmpsl
jle
rcrl
jge
in
hlt
push
or
mov
xchg
fwait
cmpsl
sbb
in
mov
mov
adc
testl
mov
sub
ret
mov
jns
mov
jo
popa
mov
push
push
pop
fwait
hlt
gs
cmpsl
cmp
add
cmp
das
push
xor
nop
fildl
mov
fdivrl
jno
aam
push
xor
bnd
jne
cmpsb
clc
and
jns
std
add
and
adc
jns
lahf
stc
mov
lret
lret
imull
fldt
in
xchg
fildll
or
movsb
mov
xchg
jne
cmp
mov
or
lret
dec
stc
repnz
adc
or
push
mov
push
in
jno
xlat
inc
loop
pop
inc
lods
or
mov
stc
pop
or
adc
cmp
add
popa
bound
mov
clc
mov
es
xor
jae
jnp
and
cmp
push
popf
clc
dec
push
sub
push
pop
stos
loop
sbb
xlat
adcb
xor
fisubrs
push
mov
mov
cmc
xchg
addr16
adc
mov
addr16
mov
sahf
xchg
dec
mov
inc
lcall
mov
push
icebp
mov
int
jbe
inc
mov
or
fisubrs
jp
movsb
push
pop
jno
mov
into
es
icebp
mov
stos
in
mov
xchg
mov
jp
out
jg
jge
inc
scas
lret
gs
xchg
sbb
inc
inc
shlb
mul
jae
pop
sbb
and
mov
inc
sub
stc
xchg
mov
aad
out
pop
ljmp
fisttpll
sbb
xchg
or
or
aam
ffree
push
or
xchg
sbb
sti
pop
sar
arpl
andb
je
mov
push
mov
sbb
pop
es
icebp
push
clc
and
pop
sbb
negb
loope
push
repz
xor
sbb
and
inc
rolb
negb
rcl
leave
pop
add
cmp
sbb
stos
inc
movsb
cmp
or
scas
addr16
mov
out
mov
test
mov
repz
in
push
cmp
mov
das
jl
lret
frstor
mov
xchg
jns
xor
or
xor
arpl
sub
lret
stc
cs
imul
cmpsb
mov
je
mov
pop
rol
int
notl
mov
iret
xchg
lods
enter
inc
cmp
dec
out
push
sbb
fldenv
cmp
shlb
xchg
mov
cmp
dec
pop
ja
inc
fdivp
push
mov
fucomip
repz
sbb
jne
jle
push
cmp
movsb
mov
adc
add
add
push
cmp
mov
inc
lock
mov
movsl
push
sub
into
dec
mov
or
lahf
aam
push
imul
xor
lcall
inc
stc
jmp
mov
dec
sbb
and
mov
cmp
mov
mov
xchg
jg
movsl
call
xor
push
or
xchg
lea
stos
inc
pop
or
push
insl
xlat
dec
out
push
sti
rclb
pop
sub
xchg
es
jb
cmp
lcall
mov
leave
or
repnz
mov
fmul
gs
or
and
insb
jecxz
sbb
cmpsb
std
push
and
fmull
std
xchg
and
js
sub
mov
call
shlb
inc
lods
stos
popa
xchg
pop
lea
fs
popf
mov
fwait
xor
pop
mov
test
cs
add
xor
sbb
jo
dec
stc
int3
mov
mov
lcall
add
leave
mov
sbb
sbb
jl
pop
rsm
bound
ljmp
lea
mov
mov
cmp
push
adc
xor
ror
mov
sbb
cmpsl
jmp
jge
mov
inc
fsubl
or
jb
outsl
icebp
mov
and
and
xchg
xor
in
inc
add
xchg
shll
xor
jae
add
std
inc
out
lret
das
mov
stos
stos
mov
add
mov
xchg
inc
fcmovnb
or
int3
test
xchg
mov
sbbl
adc
stos
ljmp
xchg
or
dec
xlat
xchg
sbb
or
test
add
arpl
mov
cmp
jb
imul
cld
movsl
and
and
imul
xchg
cld
jecxz
dec
mov
cmc
or
push
xor
add
mov
fildll
leave
jno
dec
sub
push
incb
xchg
mov
cli
mov
sub
dec
cmp
aad
lret
in
jbe
mov
lret
adc
xlat
mov
scas
add
mov
mov
imul
mov
mov
or
insl
fistpl
pushf
cmp
aam
imulb
insb
inc
out
push
xchg
jb
dec
jno
jl
jg
mov
repnz
jg
mov
out
mov
ffreep
inc
pushf
mov
cwtl
xchg
mov
xchg
iret
ret
icebp
data16
push
pop
gs
mov
int3
mov
int
out
cmpsl
lcall
repz
pop
aaa
test
jne
inc
xor
inc
cmp
iret
js
inc
add
mov
xchg
and
pop
lahf
test
sahf
xorb
sub
lcall
dec
movsl
scas
push
sub
clc
adc
mov
pop
fldenv
mov
add
pop
fwait
push
aas
pop
inc
xchg
mov
xor
cmp
push
push
jg
sbb
aam
out
or
aam
out
push
mov
or
mov
daa
daa
bound
adc
dec
addb
dec
or
rep
rorw
out
push
outsb
mov
mov
dec
pop
int3
xchg
gs
mov
or
jb
add
outsb
idiv
test
fisttpl
fimull
add
jbe
jmp
cwtl
inc
fistps
mov
jge,pt
or
sbb
rcrl
adc
imul
cmp
cmp
jbe
fstpl
or
jne
mov
sbb
nop
movsl
rclb
jns
or
hlt
inc
sub
ds
cwtl
fmull
scas
add
xor
and
aas
in
jne
mov
pop
push
mov
push
lcall
mov
push
mov
xlat
iret
xlat
jmp
lds
aas
inc
stos
pop
push
inc
xlat
add
ss
dec
sub
jp
or
inc
mov
addr16
adc
dec
sbb
dec
push
jo
adc
loopne
mov
sub
sub
add
add
dec
std
pop
fcmove
movsb
test
in
xor
mov
and
jne
xor
jle
into
leave
stos
arpl
hlt
xchg
sbb
fisttpl
iret
outsl
fisubl
fimull
or
mov
inc
and
jne
pop
mov
fldenv
dec
sahf
in
in
shlb
adcb
cmp
repz
add
push
mov
sti
mov
stos
sbb
jge
rclb
in
cltd
imul
pop
push
inc
test
xchg
aad
in
nop
inc
mov
mov
loopne
and
vpaddq
push
pushf
mov
lret
adc
into
and
xchg
and
andb
ja
xor
out
bound
cld
scas
test
outsl
sub
shlb
imul
sbb
xor
fscale
ss
mov
inc
test
pop
das
xchg
sub
xlat
pop
sbb
lret
ljmp
jecxz
mov
pop
std
vpcmpeqb
roll
loop
pushf
jmp
sarb
push
test
push
add
mov
popa
xlat
sub
jge
fadds
jns
mov
cwtl
movsb
mov
movsb
mov
xor
inc
jg
or
test
xor
cwtl
leave
pop
push
pop
xor
rcrl
inc
lds
fcmovnu
xchg
outsl
test
pop
xchg
test
nop
inc
jns
push
jecxz
mov
loopne
test
and
lods
aam
cmc
lahf
inc
mov
or
ljmp
inc
insb
mov
mov
insb
pop
insl
lcall
out
rolb
sub
daa
push
js
aam
inc
cmpsl
push
int
stc
mov
and
ret
and
jp
xchg
adc
out
sub
jbe
jnp
js
and
xchg
add
outsl
xor
jno
lock
call
int3
cmp
jne
pop
in
aam
push
mov
leave
xchg
rorb
jbe
outsl
mov
rcll
and
fcomps
cltd
lods
jle
xor
mov
stos
add
xchg
mov
lcall
jbe
popf
push
mov
mov
xlat
loope
push
sahf
xchg
sbb
fimuls
outsl
adc
ror
fstpl
rorl
cwtl
xor
add
ljmp
mov
loop
aas
push
push
aas
out
leave
inc
cmp
popa
pop
sub
sti
inc
mov
pop
fld
ss
test
xchg
jne
aam
or
pop
mov
repnz
mov
or
ljmp
xchg
gs
jmp
dec
jns
pusha
cmp
or
incb
xor
push
jle
lret
mov
cli
sbb
push
fwait
or
cmp
mov
dec
xchg
je
push
test
lcall
jp
xchg
fadds
dec
cld
jnp
adc
adc
repnz
add
mov
pop
aam
roll
add
jg
popa
fistpll
xchg
notb
mov
or
push
sbb
cmp
push
notb
adc
out
loope
and
lahf
js
add
mov
push
adc
in
sbb
sti
and
jl
fwait
inc
push
mov
repz
mov
xor
or
out
push
cmp
insl
pop
aam
mov
push
test
adc
orb
shlb
roll
sub
pop
sti
js
xchg
loopne
js
cwtl
aaa
jmp
mov
outsl
mov
push
fcompl
test
push
test
push
mov
lret
jmp
loope
jmp
dec
leave
aad
shrb
dec
fcoml
mov
sub
pushf
sarl
add
ret
imul
or
repnz
sbb
das
stc
cltd
mov
cmp
dec
add
fcomp
aad
add
and
out
inc
cli
sbb
push
xchg
cmpsl
push
push
mov
xor
push
cmpsb
xchg
loope
stos
dec
lret
dec
gs
call
lods
ljmp
jno
fwait
jno
les
addb
mov
mov
inc
rcll
repz
cs
and
dec
not
lea
pop
xchg
push
jo
rclb
callw
mov
decb
pop
shlb
cmp
pop
mov
jbe
add
jb
jp
and
into
lret
dec
adc
cbtw
sub
jp
jb
fs
icebp
in
fmulp
xor
and
inc
inc
push
or
lret
inc
and
shlb
or
or
or
into
outsl
sbb
and
sbb
inc
inc
jno
nop
cltd
push
add
inc
jb
xchg
pop
scas
sub
fs
xchg
nop
sub
stos
mov
andl
cmp
decb
pop
loop
mov
xchg
test
or
xchg
cmp
pop
mov
mov
sbb
push
jl
inc
cmp
cmp
adc
push
add
dec
insl
sub
std
jb
enter
xchg
sarb
ficompl
pop
std
stos
xchg
stc
push
sbb
sbb
ja
ficompl
mov
cltd
sub
cmp
push
dec
push
cs
in
cltd
into
xchg
ds
jl
into
fistl
les
mov
fisubrl
sbb
or
pop
std
and
mov
mov
jmp
pop
mov
adc
lds
cmp
mov
sbb
mov
inc
dec
fmul
nop
mov
cmp
stc
jno
or
dec
xor
int3
jmp
insb
clc
test
mov
cmpsl
cmc
and
in
je
cmp
icebp
mov
out
and
sub
hlt
sbb
pop
pop
test
push
aam
push
inc
jo
das
jno
pusha
test
lret
fsubs
in
adcb
movsl
popf
addr16
call
sbb
orb
cmp
inc
in
cmp
stos
xor
testb
addr16
lods
xor
jmp
int
shrl
incb
or
jp
pop
or
or
into
cmp
cltd
mov
xor
mov
int3
add
xchg
mov
rcl
insb
repnz
mov
gs
out
mov
inc
adc
cwtl
cmpb
jecxz
sub
test
inc
jno
in
xchg
pop
jmp
jecxz
inc
pop
push
inc
test
adc
pop
pop
xor
add
mov
enter
aaa
jns
movsl
add
pop
addl
xchg
pop
clc
sahf
nop
jg
ret
lds
push
jle
bound
pop
jnp
in
mov
neg
insb
dec
push
insl
xchg
into
ret
ds
xorb
rorl
rolb
mov
nop
cmp
test
in
push
xchg
mov
mov
scas
or
sbb
jmp
fdivrs
push
enter
pop
sub
mov
js
mov
iret
pop
jns
daa
add
jnp
xchg
sti
in
hlt
sub
jno
js
mov
lock
xchg
lds
lcall
mov
cs
adc
mov
rcrl
add
sbbl
mov
aaa
xchg
sbb
push
and
mov
sub
adc
in
lea
scas
jle
ds
out
popa
mov
popa
ss
clc
stos
in
cmp
sbb
fsubrl
mov
insl
or
push
out
inc
sub
mov
adc
popa
call
adc
daa
outsb
andl
dec
scas
in
mov
mov
cltd
jmp
push
testl
cmc
cwtl
aaa
insl
xchg
xor
or
cmp
sbb
push
adcl
insb
xchg
mov
xchg
sbb
leave
loope
dec
sub
jp
xor
mov
std
sub
popf
addb
das
divl
adc
rorl
rcr
lds
mov
push
mov
sbb
xchg
mov
mov
push
dec
clc
inc
ret
cmp
mov
jno
sbb
mov
loopne
sarl
push
inc
pushf
es
mov
push
daa
pop
mul
dec
inc
adc
repnz
leave
lcall
stc
ds
daa
jne
inc
push
hlt
jl
cmc
ljmp
jecxz
das
nop
xchg
xorb
int
jae
cmp
sub
scas
dec
jns
sbb
cmpsl
sub
repnz
adc
push
cwtl
dec
aaa
mov
mov
sub
daa
imulb
pop
pushf
dec
mov
or
adc
rorl
or
data16
add
mov
outsb
mov
loop
les
sahf
pushf
pop
xorl
cmpsl
pop
loope
xor
mov
or
inc
loopne
jmp
xchg
add
ja
sub
cmp
insb
int3
push
mov
vcmpsd
cmp
sbbl
je
ficoms
sarl
xor
or
lret
and
dec
xchg
mov
cmpsl
xchg
sbb
int3
enter
mov
jle
std
push
push
arpl
rorl
ret
cmp
or
sbbl
fstl
enter
adcl
cmc
ds
jp
mov
xchg
jle
or
addl
mov
mov
test
pop
rcl
adc
daa
add
test
mov
pusha
js
ret
dec
in
arpl
push
and
fxtract
lcall
mov
pop
loope
andb
cmp
push
push
in
cld
call
das
dec
icebp
push
test
xchg
inc
jbe
test
dec
call
jno
or
rcrl
jns
data16
hlt
daa
cmpsl
bnd
push
xchg
add
repz
push
mov
jno
or
shll
xor
ret
je
cwtl
inc
mov
mov
and
mov
inc
mov
inc
shll
cld
nop
jb
and
mov
xchg
dec
fdivl
flds
out
ret
mov
fisttpl
lret
inc
cmp
in
jae
xchg
addr16
inc
add
pop
cmp
push
sub
je
push
add
stos
mov
mov
mov
mov
add
or
push
rcl
sub
hlt
cmp
sti
mov
add
or
ds
add
sub
sub
xchg
mov
cmpsl
or
in
push
add
mov
sahf
xor
repz
in
dec
mov
cmp
dec
in
stos
rcrb
lock
enter
or
push
jp
dec
jl
pop
pop
int3
pop
loope
pop
push
outsb
jle
sub
xor
ds
mov
orb
rolb
pop
sub
mov
or
cmc
std
imul
test
jecxz,pt
jl
dec
and
mov
cmp
insb
shrb
pop
sbb
mov
mov
cmp
push
push
add
inc
dec
cmp
dec
sbb
push
sarb
int3
outsl
insb
xor
pop
cltd
add
xchg
dec
cmp
es
dec
inc
xlat
jns
aas
out
add
xor
mov
cwtl
aam
js
ja
rcll
out
cmp
std
pop
xchg
xchg
jnp
gs
jmp
ret
and
arpl
inc
push
adc
pop
xchg
mov
or
dec
inc
sbb
out
ss
arpl
adc
fwait
jp
imul
cmp
dec
sar
xor
insl
mov
fwait
pop
xor
es
aam
dec
int3
jg
fnstcw
inc
pushf
pop
dec
mov
fstpl
and
sub
adc
push
insl
sbb
adc
call
dec
ja
dec
cli
push
in
inc
adc
dec
mov
out
inc
or
push
fcomps
int3
repnz
pop
out
push
and
enter
adc
jecxz
inc
fsubs
push
jns
mov
lds
shlb
sahf
push
cmc
movb
jno
mov
es
or
pop
nop
dec
mov
imul
sub
mov
out
xor
xchg
jae
push
adc
mov
sbb
test
rclb
ljmp
add
xchg
xchg
pop
lods
imul
mov
imul
mov
shlb
sbb
dec
pusha
dec
movsb
lds
mov
icebp
inc
push
clc
dec
sub
sbb
sar
dec
in
xor
mov
aaa
pop
cmpsl
lcall
daa
and
outsl
jnp
test
pop
xor
cld
push
xor
inc
ret
cmp
xor
or
rcrl
inc
xchg
bt
fldt
mov
addr16
inc
icebp
pop
mov
pop
pop
inc
inc
cmpb
push
addr16
cmc
in
daa
enter
ss
insb
lret
imul
and
pop
movsl
add
mov
mov
sti
imul
push
roll
imul
fsubrs
jge
lea
mov
mov
pop
das
sub
mov
lock
imul
or
push
mov
cmp
aaa
sub
aaa
mov
add
jmp
lret
cmp
pop
inc
adc
ret
es
xchg
mov
in
test
outsb
dec
rcr
mov
cmp
hlt
ljmp
inc
ja
push
neg
insl
std
dec
jae
mov
inc
pop
fcompl
cld
jl
mov
push
mov
xor
lret
pop
fldt
das
in
mov
add
pop
mov
inc
mov
decb
sub
xchg
cwtl
pop
or
test
lock
adc
mov
push
or
jle
test
aam
testb
andb
xlat
insb
test
and
dec
in
mov
movsl
orl
cmp
sar
and
aaa
jbe
xchg
dec
cmp
inc
loop
sub
inc
lahf
in
outsl
and
mov
test
mov
mov
sub
or
mov
test
clc
dec
mov
test
xchg
vrcpps
mov
lcall
mov
into
push
repnz
add
pop
mov
pop
inc
scas
sub
xchg
icebp
ret
repnz
loope
fwait
std
push
aam
repz
lds
insb
inc
aas
xor
pusha
int
jmp
mov
sbb
xchg
dec
inc
pop
shll
xor
or
push
pop
out
jno
cmpsb
adc
mov
cs
popf
popa
inc
mov
rcll
cltd
adc
xchg
leave
push
xor
loop
test
sbb
or
dec
mov
cmpsl
insl
or
cmc
outsb
mov
sbb
aaa
in
std
scas
ljmp
test
xchg
cmpsl
push
mov
cmovp
jo
push
fwait
inc
or
mov
les
hlt
and
cmp
xchg
sbb
add
push
call
mov
pushf
in
je
scas
ds
lea
out
std
jmp
jge
xchg
movsb
add
mov
les
imul
in
jbe
imul
jnp
sbb
push
arpl
idiv
test
jo
mov
cmp
xchg
lret
inc
and
mov
pop
lock
add
jne
or
loopne
paddq
push
pop
cmp
or
push
jno
mov
dec
int
addb
mov
mov
mov
jae
or
jo
sub
dec
mov
mov
mov
mov
push
cmp
lcall
xlat
pop
dec
test
fimull
xchg
sub
sbb
iret
or
xor
jp
lcall
mov
xchg
addr16
pop
xor
out
adc
iret
in
lods
xchg
adc
xchg
jg
test
lds
push
js
push
inc
clc
ret
int3
dec
add
or
jmp
jnp
hlt
mov
notb
lea
cli
mov
es
fdivr
adc
mul
iret
aas
xor
dec
push
mov
sub
and
lds
xchg
adc
addr16
jnp
fldl
cmp
stc
iret
pop
inc
test
fs
call
shll
inc
ret
push
sbb
cmp
mov
cmc
xor
lods
cmp
pop
dec
lahf
xor
stos
pushf
mov
pop
test
test
stos
pop
sbb
xchg
cmp
mov
mov
stos
je
pop
inc
stc
pop
jae
arpl
addr16
incb
stos
lods
cmp
jle
movl
mov
and
popa
pushf
loop
jne
test
sti
fidivrl
out
push
cli
ror
jmp
divl
lea
test
xchg
push
xchg
push
js
aam
lea
inc
and
loopne
dec
sub
fwait
loop
add
aas
stc
dec
cmp
mov
add
sub
jne
cmp
push
mov
jmp
ss
movsl
xchg
cmp
out
xchg
es
and
cmc
out
movsb
pop
add
sub
add
sub
sub
lea
xchg
rcll
sub
mov
les
pop
mov
out
enter
push
xor
push
mov
mov
mov
inc
hlt
shlb
arpl
int3
xor
inc
adc
mov
jge
es
mov
negl
mov
pushf
fnstenv
pusha
xchg
xchg
orl
cld
ja
in
nop
or
mov
ljmp
loopne
mov
push
mov
cmp
dec
leave
adc
push
fsubrp
jbe
fidivl
int
xchg
cld
lds
mov
out
in
das
or
mov
jg
or
data16
pop
dec
test
leave
es
mov
add
daa
add
xlat
inc
stc
aad
mov
sti
mov
and
data16
sbb
test
cmp
xor
add
dec
repnz
cld
dec
xor
pop
orb
aam
lret
xor
test
mov
cmp
fstps
jge
xchg
clc
fnstcw
lock
out
scas
xor
xchg
and
repnz
sub
mov
xchg
movsb
and
ret
or
dec
cli
xor
loopne
lock
mov
mov
pop
lock
js
pop
add
and
mov
and
cmc
mov
dec
std
push
jge
sub
xchg
stos
add
dec
cwtl
and
out
movb
enter
dec
mov
xor
pop
dec
int3
pop
aam
jl
test
push
lods
icebp
mov
jae
cmp
rclb
ljmp
inc
test
mov
data16
add
in
jge
repz
cltd
push
cmp
loop
jg
adc
pop
xchg
xor
ljmp
testb
fstpl
cwtl
shl
imul
push
jmp
mov
or
cwtl
out
and
dec
jmp
pop
repz
dec
sbbb
nop
outsl
cmpsb
mov
dec
and
in
je
int
sub
or
xchg
sarb
scas
dec
hlt
jle
pop
jmp
imul
mov
hlt
fcmovnb
mov
shll
call
fs
add
out
xchg
adc
ret
shlb
movsb
jb
mull
inc
sbb
inc
and
repnz
mov
cmp
jp
jecxz
cld
pop
into
lods
fiaddl
ficompl
pop
in
lret
std
es
fdecstp
icebp
out
xor
lods
lods
and
in
inc
shlb
fwait
mov
mov
push
jge
addl
jbe
out
mov
xchg
leave
repz
cmp
and
add
nop
fdivrl
xchg
out
into
cltd
std
jnp
xadd
fnstsw
call
mov
and
xor
imul
mov
rcr
inc
push
loop
xor
xor
sbb
aam
pop
call
mov
rcrl
loope
in
mov
mov
in
jae
pop
mov
sahf
pop
lret
lahf
push
mov
jbe
popa
int3
pop
xchg
dec
inc
dec
add
xchg
sub
ljmp
sbb
fmull
mov
daa
fimuls
or
arpl
sbb
cmp
pop
lock
aas
into
fstl
xor
jo
xor
jae
push
push
jo
pop
popa
xchg
test
in
lods
dec
dec
push
or
lahf
dec
mov
pop
mov
roll
outsl
stc
sar
inc
add
jle
ficomps
or
mov
into
add
sub
dec
sub
dec
jne
fcoml
sarb
dec
push
jns
hlt
ret
and
sub
popl
push
dec
jns
jns
dec
lret
and
fidivrl
mov
rolb
lret
addl
xchg
pop
mov
scas
mov
mov
xchg
out
out
adc
sub
aaa
daa
repz
sbb
mov
in
js
jae
pop
mov
fisttps
mov
rorl
es
xlat
adc
jle
xlat
popf
xor
idiv
lods
sbb
sbb
subl
ljmp
flds
fdivrl
and
sti
or
xlat
out
adc
popl
test
mov
xchg
imul
xor
mov
add
movl
arpl
xchg
rcl
sub
aaa
cmc
in
pusha
cmp
arpl
dec
clc
shr
out
jbe
pop
jb
imul
in
in
cmp
rcrl
dec
dec
dec
push
loop
dec
in
mov
jle
clc
stos
adc
xchg
mov
in
shr
xor
test
add
xchg
and
rolb
adc
fwait
sbb
cmc
stc
pop
lock
jl
std
outsb
lcall
xchg
fsubrs
add
or
es
test
push
sub
jb
out
cmp
pop
xchg
or
jle
mov
imul
in
jge
add
mov
inc
adc
loopne
pop
aaa
sub
xor
adc
fldt
xchg
jae
ret
int
movsb
jl
push
lock
in
pushf
test
movsl
and
lock
fnsave
shlb
cs
jno
rcll
cmpsb
xchg
arpl
mov
inc
lcall
dec
dec
je
cwtl
or
sbb
cmp
repz
pop
cmpsl
imul
xchg
loop
bound
test
hlt
ja
pop
test
push
lock
sub
mov
mov
push
push
cs
sub
xchg
jno
sti
fisubs
or
imul
mov
divb
and
lods
inc
fisubrl
in
sbb
test
pop
xchg
in
ret
popa
jo
lds
pop
shrb
lcall
jns
cmpb
xchg
mov
xor
and
ja
icebp
outsl
movsb
cmp
mov
mov
dec
dec
and
movsb
sbb
lds
adc
push
sub
pop
nop
xchg
aaa
imul
jg
cmpsl
loopne
fidivs
jp
int
loop
js
cmpsl
push
adc
sbb
movsb
mov
pop
ret
sbb
in
cmp
sbb
and
ja
lock
sbb
cwtl
xchg
xlat
cmpsb
testb
xchg
ret
xor
pop
stc
scas
xor
fsubrl
mov
in
xchg
out
ja
dec
daa
push
insb
push
imull
dec
or
jno
jle
cli
xchg
inc
sub
stos
fs
mov
in
sub
mov
lret
std
das
mov
int
xchg
call
mov
es
push
cmp
ds
pop
sbb
cmc
fstps
icebp
aam
in
adc
cwtl
jns
mov
lea
inc
mov
adc
pushf
jle
xor
loopne
mov
setg
lock
push
pop
pop
mov
inc
sbb
test
push
add
loop
aaa
inc
js
adc
in
incb
cmp
push
or
add
out
adc
jp
pop
mov
fstl
mov
lock
add
inc
movsb
stc
ret
addl
mov
out
rclb
xlat
test
dec
mov
mov
or
pushf
enter
mov
aaa
data16
scas
mov
or
cs
mov
cmp
shll
ja
mov
cld
pop
push
jb
jge
popf
jecxz
sbb
mov
and
add
sub
fcoms
jp
sub
out
sbb
mov
lahf
sahf
ss
rcrb
push
jle
xchg
sbbl
push
ds
ret
fldl
out
or
push
add
xchg
insb
pop
fs
and
jecxz
call
arpl
mov
cmpsl
xor
mov
int
in
cmpsl
jge
in
enter
xchg
adc
cs
xor
pushf
aas
aas
pop
js
mov
pop
inc
hlt
andb
jo
aam
mov
mov
push
inc
dec
inc
sarl
addr16
sub
push
insb
mov
sub
in
mov
sbb
add
pop
adc
dec
jl
jnp
jmp
lods
aaa
mov
xchg
repnz
rol
dec
dec
jbe
dec
shrl
mov
jne
or
aas
add
ljmp
xlat
hlt
dec
sbb
push
and
cmpb
lock
cwtl
mov
jne
inc
xor
in
mov
rcpps
mov
mov
adc
adc
xchg
aaa
xorl
mov
xlat
and
stos
rcl
cmp
enter
out
andb
push
lods
in
enter
stos
dec
cld
fstpl
fsubrl
loope
mov
jo
arpl
pop
inc
mov
pop
ljmp
loopne
movl
or
cli
xchg
mov
ficomps
xchg
adc
dec
in
les
mov
jb
push
xlat
pusha
sahf
dec
shlb
xor
fadds
pop
xlat
inc
out
and
clc
out
je
pop
test
outsb
sub
movsb
mov
dec
xor
testb
jb
inc
sahf
int
ret
add
dec
dec
mov
dec
cmp
jb
pushl
fincstp
xor
mov
jp
aad
call
negl
adc
mov
inc
fdivr
xor
mov
lahf
jecxz
stc
fcompl
xor
test
std
mov
or
inc
push
call
xchg
xchg
jp
dec
ja
push
fdivrs
jge
outsl
xor
imul
push
xchg
mov
push
push
and
je
ret
lea
dec
mov
jno
sbb
outsl
sub
rcrb
xor
insl
pop
inc
inc
xchg
popa
push
outsb
sbb
outsb
mov
inc
mov
mov
in
insb
test
mov
pop
sub
xor
movsb
push
dec
loope
scas
adc
push
mulb
xor
adc
cli
mov
mov
xchg
faddl
ret
jnp
mov
push
out
fwait
stos
push
sbb
imul
mov
insb
cwtl
rcll
inc
sub
frstor
xchg
mov
or
add
cmp
aaa
idivl
aaa
cmp
inc
lahf
insb
into
call
xor
dec
in
data16
je
mov
lods
cmp
jl
xchg
outsl
daa
test
sbb
dec
lret
pop
fdivrs
loop
negl
adc
mov
xchg
mov
sub
call
lret
fcomi
mov
mov
cmp
imul
arpl
push
xchg
arpl
push
lahf
jno
dec
aaa
mov
jge
shrb
pushf
fs
insl
lds
push
inc
mov
adc
nop
jg
xor
lods
sbb
test
push
pop
cli
inc
scas
xchg
adcb
mov
sete
xlat
test
inc
cmp
pop
cmp
cli
and
ljmp
addr16
cwtl
jne
mov
mov
jnp
adc
add
mov
mov
mov
loope
mov
xchg
shl
mov
pop
xchg
jge
cmpsb
jmp
dec
iret
mov
sbb
jns
int3
das
mov
mov
jle
mov
cmp
fistps
mov
jl
insl
sbb
and
test
loopne
fs
fbstp
test
adc
iret
notb
mov
dec
sub
mov
xchg
mov
lea
sub
push
dec
hlt
mov
insl
dec
xchg
cli
xlat
cs
dec
dec
push
rorb
jae
xchg
adc
fidivl
jno
mov
pop
adc
fisubrl
push
in
xor
push
ror
and
addr16
fstpl
cwtl
push
in
hlt
jb
jno
in
xchg
lods
push
cmpsb
js
aam
pop
jb
mov
mov
cs
bound
cmp
jae
cmpl
add
inc
dec
push
pop
in
and
sbb
std
mov
mov
fwait
loopne
scas
adc
xchg
pop
call
cmpsb
pop
xchg
jo
mov
pop
insl
pushf
aas
jg
push
adc
int3
gs
inc
jge
lahf
out
sarl
xchg
inc
jbe
scas
inc
sub
test
loope
and
int3
das
mov
adc
adc
sub
cmp
sbb
pop
mov
scas
rcr
or
cmp
mov
adc
fdiv
fbld
mov
mov
ds
sub
and
dec
pushf
push
loopne
and
and
icebp
cli
cmpsl
or
mov
mov
jb
daa
mov
lods
stos
xor
sub
push
cmc
pop
mov
inc
je
lea
mov
adc
mov
cmp
out
inc
cmp
lods
inc
shrb
jb
xchg
ljmp
mov
movsl
fnstsw
cmovno
int3
fsubs
jle
js
nop
cmp
loopne
jo
enter
jecxz
fwait
test
lret
rorl
les
out
test
mov
xchg
repz
stos
jmp
mov
jb
mov
pop
push
push
je
movsl
inc
das
sub
ror
sbb
sbb
into
out
rolb
movsl
mov
insb
scas
cmpsb
jo
jl
mov
mov
cmp
test
bound
mov
xorb
adc
cmp
into
cmp
jbe
fidivl
jle
loop
sub
mov
mov
mov
mov
xchg
ror
pop
psrld
pop
mov
mov
punpckldq
push
cltd
lcall
push
pop
mov
push
push
pop
jge
ds
or
inc
sub
jmp
fisttpl
insb
xchg
or
jl
scas
mov
dec
push
push
loope
push
clc
fstpl
adc
or
lcall
or
outsb
fdivl
push
out
pop
out
mov
push
sub
test
dec
mov
and
gs
adc
adcb
stc
inc
sub
sbb
mov
and
out
imul
sub
int
cmp
mov
pop
dec
fisubl
adc
clc
dec
jmp
push
xchg
roll
push
inc
and
lods
jmp
fcmovb
movsl
out
mov
js
fmulp
xor
xchg
popf
scas
pop
ja
es
inc
mov
jae
inc
inc
add
or
loopne
jbe
arpl
or
pop
adc
fidivs
push
aaa
ljmp
je
adc
in
cltd
lock
out
mov
jno
cmp
into
mov
mov
push
outsl
mov
add
pop
push
imul
xor
ljmp
das
add
leave
pop
push
dec
cmp
jl
jae
fnstsw
push
pop
stc
in
and
cmp
xlat
dec
inc
hlt
pop
lods
insb
cmp
cmc
jbe
push
lods
in
stos
mov
xchg
outsb
out
adc
jne
imul
repnz
sahf
out
sub
dec
push
and
adc
loop
dec
popf
int
nop
loop
faddl
or
adc
cmpsb
bound
xorl
jle
xchg
fistpll
leave
aaa
cmp
jae
sbb
lds
mov
xchg
lret
call
sbb
jns
xor
push
mov
push
loope
cld
mov
mov
imul
imul
leave
adc
fsubp
cld
scas
pop
data16
cwtl
ljmp
cmp
cmp
cld
xor
pop
hlt
add
cmp
fsubs
xlat
es
repnz
outsl
sahf
test
outsl
cmp
adc
mov
pop
aam
mov
stos
mov
xchg
stos
pop
call
xchg
test
push
pusha
pop
xchg
pop
sarb
push
out
aaa
xor
test
cmp
pop
push
push
insl
test
outsb
rolb
out
adc
fs
imul
mov
add
cmp
lahf
jg
mov
iret
or
sbb
mov
cmp
out
push
and
jecxz
aaa
xchg
int
inc
subl
iret
jno
jb
mov
xchg
and
js
out
push
sub
push
fiadds
addb
sahf
cmp
cs
mov
lret
xchg
and
add
div
loopne
pop
add
test
inc
add
and
xchg
inc
scas
or
test
sub
cmp
enter
and
pop
mov
mov
cmp
sub
fsts
stc
leave
jbe
ljmp
vmread
dec
push
jp
das
or
aad
aas
aad
out
scas
leave
cmp
jmp
iret
jbe
lcall
sub
inc
mov
out
xor
or
into
mov
aas
pop
fisttps
movsl
xchg
nop
stc
popa
inc
push
sub
and
addr16
aaa
int3
pop
push
cmp
repz
add
cltd
mov
cmp
lea
fnstenv
xchg
mov
and
add
push
xchg
dec
sbb
enter
jecxz
les
mov
xchg
pusha
hlt
xor
xor
sbb
ss
and
push
mov
xchg
call
mov
into
mov
fdivr
jmpw
ja
ret
fstpt
fwait
aaa
cmovg
dec
aaa
inc
push
js
inc
mov
test
inc
pop
test
xor
push
mov
push
pop
mov
sbb
lahf
mov
inc
push
in
dec
adc
loope
test
mov
into
mov
pop
add
and
dec
adc
mov
or
leave
jp
fidivrl
add
jp
test
jo
add
pop
clc
dec
and
shl
adc
outsl
mov
test
sub
mov
leave
insl
andl
mov
mov
dec
fisttpl
push
xlat
xchg
jnp
or
les
aaa
xor
sbb
adc
xchg
das
mov
les
aaa
mov
mov
lret
inc
push
sub
lcall
sbb
cmp
sbb
xchg
pop
inc
cmp
repz
js
sbb
and
dec
pop
sti
xlat
mov
sbb
pop
inc
push
cmp
pop
ret
inc
loop
es
cmpsb
jbe
stos
xchg
cmp
stos
sub
xor
leave
enter
sub
xchg
sahf
loope
scas
sub
cmp
add
mov
xor
addb
mov
sti
fstl
cmp
ret
xchg
lds
shll
sub
mov
push
xchg
iret
or
sahf
pop
or
sahf
sbb
dec
pop
jnp
fsubs
pop
scas
pop
mov
cmp
mov
add
popa
shlb
outsb
sbb
mov
dec
nop
data16
call
lcall
cmpl
filds
ss
push
lret
sti
cmp
xchg
insl
pop
cmpsb
cli
imul
jnp
lods
imul
scas
leave
jb
cmp
adc
repz
jl
loop
mov
mov
xchg
add
imul
mov
notl
jp
scas
adc
mov
and
lods
jo
inc
and
or
movsl
sarb
xchg
ret
jg
xchg
add
out
add
cmpsl
mov
fnstsw
clc
sahf
out
xor
xor
cmpsl
sbbl
and
sub
out
inc
fisubs
jne
push
fwait
and
adc
fsubrl
and
push
int
mov
mov
lret
xor
stos
ljmp
push
add
aaa
fstpl
pop
mov
inc
in
lods
aad
adc
es
into
cmp
fcompl
pop
sub
jle,pt
loopne
sahf
dec
xor
xchg
sub
mov
mov
fnsave
push
test
stc
pop
lods
jns
mov
sahf
xor
and
xchg
into
lods
xchg
mov
clc
push
sbb
lret
test
iret
scas
jmp
xchg
cmpsb
popa
add
mov
inc
int
xor
cli
jbe
dec
pushf
ss
rolb
pushf
fcmovnu
mov
pop
testb
addr16
jmp
ficomps
and
jg
imulb
cmpsb
mov
jp
insb
iret
insb
repnz
daa
xor
jns
adc
aaa
sub
call
cltd
adc
mov
data16
xchg
inc
mov
sbb
add
insb
xor
sub
aaa
adc
inc
inc
jbe
pop
mov
call
xchg
xor
insb
or
pop
clts
std
lock
add
dec
rcr
push
ror
inc
dec
scas
mov
in
arpl
xchg
shll
lahf
adc
dec
nop
int
pop
jge
adc
sbbl
mov
push
add
jo
xchg
dec
xor
mov
mov
pop
jge
mov
lcall
push
xchg
in
jl
stc
jae
hlt
jo
mov
lea
lahf
xchg
pop
fisubrs
jae
xor
cmpsb
adc
sahf
hlt
push
jbe
jnp
sub
xchg
jno
repnz
loop
mov
ret
push
push
rcll
dec
mov
aaa
addb
fwait
push
leave
test
inc
jecxz
dec
jle
orw
cmc
ds
inc
push
mov
xlat
inc
stos
pop
pop
dec
js
sbb
shrl
movsb
add
mov
xor
sbb
cmc
xchg
into
adc
and
mov
jae
mov
aaa
lcall
js
mov
or
popa
cltd
push
cmp
popf
or
scas
mov
jae
lods
rcrb
mov
push
aam
movsl
sub
xor
loop
pop
les
ja
stos
and
mov
mov
into
xor
movsl
shll
xor
addr16
jae
sub
mov
aas
dec
inc
inc
inc
xor
and
xchg
fsubs
pop
jge
dec
loope
aas
jmp
daa
push
mov
shrl
bound
clc
ss
dec
mov
lahf
dec
ss
mov
add
in
js
loope
cltd
adc
icebp
sbb
pop
inc
xchg
xchg
cmp
testb
xor
sub
rorb
and
iret
sub
ss
es
push
pop
fldt
push
adc
leave
push
arpl
dec
xchg
sub
sub
jno
flds
pusha
dec
in
push
mov
shl
dec
cmp
pusha
push
neg
ss
push
dec
into
popa
mov
adc
in
xchg
hlt
cmpsl
pop
push
aas
clc
movsb
aad
sbb
and
pop
xchg
xor
mov
or
stc
insb
pushf
aaa
gs
leave
sbb
daa
and
lcall
cmp
xchg
enter
cld
sbb
dec
sub
sub
sub
lret
and
xchg
cs
jae
fwait
xchg
bound
mov
ret
push
mov
gs
dec
push
in
es
or
inc
sti
sbb
int
call
sbb
xor
adcl
std
adc
dec
lock
dec
fucomp
xchg
iret
and
lds
in
mov
lods
repnz
pop
iret
testb
or
lds
imul
lock
mov
negb
cmpsl
cmp
rolb
xor
or
cltd
xor
insb
jge
jl
jo
mov
push
outsl
bound
fsubl
mov
sub
lods
sub
adcl
popf
adc
fstps
cmc
sbb
push
int3
and
sbb
dec
pop
and
rcll
popf
push
sub
adc
mov
sbb
test
jb
sti
add
test
xor
adc
jno
xchg
dec
dec
xor
test
push
dec
imul
sbb
int
es
daa
loop
stos
repnz
push
pop
cs
fsubr
data16
add
fdiv
ficoms
mov
loopne
xchg
aas
fcmovu
ja
leave
aaa
cmpsb
dec
xlat
xchg
loope
mov
movq
hlt
inc
imul
jg
enter
push
mov
inc
adc
push
lds
cmc
fbld
jbe
jp
mov
cmpsb
sti
mov
sbb
mov
xchg
inc
out
jecxz
sub
in
das
sub
jae
or
jg
lea
ljmp
jmp
xor
add
jl
out
test
mov
jnp
stc
in
lods
in
push
fisubs
in
pop
inc
push
dec
pop
cmp
outsl
xchg
in
mov
int
inc
inc
fldl
mov
data16
loop
jg
and
loopne
pop
adc
sahf
std
add
xor
fwait
mov
push
in
inc
pop
xchg
push
andb
xchg
or
fistps
xchg
jmp
lret
imulb
fcomip
add
dec
jp
in
pop
gs
pop
inc
cs
fdiv
xchg
adc
lret
jg
out
mov
ss
cwtl
dec
inc
or
lret
dec
sub
inc
lods
je
fisubs
int3
aas
fucom
push
in
fldt
xchg
cwtl
fwait
cmp
in
sub
std
pop
lret
insb
into
mov
xchg
sarb
cmpsb
or
sub
jno
dec
add
or
mov
testb
insl
pop
xchg
xchg
sbb
gs
aam
inc
leave
xor
xchg
imull
shll
flds
fistps
pop
pop
add
xor
xor
lods
loopne
in
shrb
fidivrs
ret
xchg
xor
cmp
xchg
adc
repz
arpl
ret
push
mov
scas
jg
shlb
mov
push
stc
or
or
push
push
lock
and
mov
mov
add
and
jg
divb
sub
fcmovne
cmpsl
repnz
sub
jle
ja
xchg
jno
mov
lds
xlat
sub
dec
jl
arpl
or
out
jg
push
and
stos
loope
xchg
inc
insb
rcr
or
inc
sbb
fs
js
or
xor
out
pop
gs
xor
fsubrs
jb
xlat
add
mov
jle
pop
sti
testl
jne
icebp
gs
xor
xchg
or
ja
add
push
and
rolb
pushf
xchg
cs
or
mov
daa
add
mov
xor
aaa
lret
lret
adc
pop
mov
pop
cmp
ret
xchg
xor
fwait
push
pop
xchg
inc
xchg
repnz
xchg
xor
adc
mov
jb
mov
outsb
mov
lret
inc
stos
or
imul
out
jle
sbb
mov
jae
das
cmp
scas
dec
xor
pushf
xchg
add
jns
jo
pop
mov
add
pop
test
mov
std
fcoms
out
call
push
loop
fnstcw
repnz
fcmovnbe
and
lds
jp
cmp
hlt
inc
stos
mov
addps
inc
into
jno
add
mov
mov
das
or
cmp
pop
dec
std
mov
cmc
jecxz
inc
pop
iret
or
adc
addr16
pop
fwait
add
out
pop
xchg
jge
cmp
mov
jg
enter
jae
push
inc
jp
xor
call
or
add
and
push
pusha
in
ret
or
or
adcl
ljmp
push
cmp
ror
sbb
push
nop
and
scas
test
lea
push
int
dec
movsl
cmpsb
push
or
push
jle
adc
or
and
es
test
mov
pop
das
ret
inc
xchg
divb
push
cmpl
icebp
mov
jge
inc
pop
add
push
popa
scas
arpl
inc
cmp
lds
mov
mov
fmuls
xchg
lcall
xor
mov
pop
mov
pushf
das
repz
pushf
cld
outsl
jp
adc
mov
daa
pop
inc
add
pop
sbb
inc
mov
push
jl
es
push
inc
dec
sbb
sbb
jmp
rcrl
call
lret
xor
mov
notl
out
inc
pop
sti
mov
add
pop
leave
rcr
leave
mov
jo
or
pop
cltd
push
scas
push
inc
mov
ja
xchg
pop
into
cld
mov
sub
xor
and
mov
or
push
repz
add
in
push
sub
push
lahf
sub
mov
fwait
sbb
inc
sub
cmpb
cs
insb
mov
xor
xor
inc
faddp
xor
jo
pop
repnz
xlat
mov
mov
outsl
movsb
pusha
aad
sti
push
mov
outsb
mov
push
cmp
sbb
pop
mov
jecxz
mov
leave
sub
mov
fucomp
xchg
icebp
pop
ss
inc
les
dec
iret
pop
mov
cmpsl
roll
clc
cld
movsb
sub
mov
push
mov
outsl
cmp
shl
arpl
fnstsw
scas
jb
jo
lahf
push
lock
aam
addr16
fldcw
fwait
pop
das
data16
adc
push
into
scas
int
xor
add
in
add
jmp
cmc
and
imul
js
iret
pop
and
pop
jns
inc
cltd
lds
mov
das
stc
repnz
inc
cwtl
andl
add
or
pop
push
enter
imul
imul
out
add
push
test
ret
pop
sbb
mov
cld
mov
fdivrl
inc
pop
adc
popl
push
je
inc
into
scas
push
adc
pop
push
ds
sub
shrl
gs
jb
pop
jg
popa
lds
ret
dec
add
lock
xor
popf
fnstenv
jle
fiaddl
xchg
gs
pop
dec
sbb
enter
enter
rorb
pop
or
jbe
mov
sbb
xchg
xchg
mov
ja
popa
cmp
sub
jo
pop
rorb
cwtl
insb
jg
cmpsb
xchg
cmp
lcall
stos
mov
add
inc
cmp
push
iret
scas
aaa
and
ret
out
jo
out
jp
mov
into
jo
aam
pop
mov
cltd
fldt
add
sub
andl
push
mov
inc
cs
sub
push
cwtl
and
xor
sbb
push
fdivl
mov
gs
mov
movups
js
mov
jbe
jmp
cmp
sub
xchg
fs
jo
cmpsb
mov
into
daa
and
and
xor
sub
ret
int
dec
dec
mov
adc
imul
stos
jae
mov
xchg
loop
xor
dec
in
mov
stc
xor
or
xchg
pop
sub
xor
andb
addb
xor
inc
mov
rclb
inc
push
out
jno
aam
mov
add
aad
mov
jae
push
jmp
insl
pop
pslld
cld
adc
lods
push
je
mov
mov
push
int
or
sbb
cmp
roll
jns
pop
test
pop
enter
dec
jae
inc
mov
inc
sub
and
int
xchg
pop
je
xchg
add
push
mov
xchg
jne
and
inc
jp
pushf
push
inc
sub
pop
jmp
inc
insl
sarl
repz
push
jmp
shlb
xchg
mov
xor
sti
pop
mov
jae
mov
mov
sahf
sub
mov
jmp
xchg
addr16
mov
mov
sbb
push
pushf
pop
dec
and
dec
push
push
ds
rcr
stos
movsb
stos
sbb
pop
push
pop
inc
dec
or
xchg
xchg
and
jne
mov
pop
fwait
dec
movsb
mov
lods
jmp
push
int
cmp
shlb
jecxz
push
push
lcall
hlt
shr
aad
fld1
subb
and
loope
loope
test
dec
call
jbe
ja
pop
push
pop
and
rol
pop
rolb
icebp
fistpl
fdivs
dec
pop
mov
adc
and
mov
fildl
sbb
lock
or
xchg
mov
pop
xchg
outsb
jbe
dec
and
clc
push
call
mov
xchg
hlt
test
pop
ljmp
add
dec
cmpsb
iretw
push
push
dec
insl
dec
filds
inc
ss
inc
mov
fdivrs
fwait
icebp
xchg
fwait
pop
es
pushf
sbb
insb
fsub
outsl
in
scas
insl
cmpsl
movl
stc
cmp
sub
push
adc
or
dec
cmp
stos
or
in
or
fcompl
xchg
addr16
andl
add
notb
arpl
and
mov
repnz
enter
pop
cli
hlt
cmpl
test
and
mov
inc
mov
lahf
jmp
xchg
sub
cmp
rorl
je
xor
sub
xor
aaa
ret
push
and
movsl
cmp
and
testl
cmpsl
aas
sbb
mov
push
jecxz
sbb
mov
mov
scas
dec
sub
imul
adc
xchg
outsl
movsl
bound
mov
lods
pop
or
mov
pop
cmp
xchg
mov
adc
pop
fmull
mov
mov
mov
cmp
jno
addr16
aam
jns
jns
mov
mov
mov
push
enter
popf
in
push
add
push
scas
lcall
or
ds
aas
push
std
scas
movsl
and
aad
ret
pop
daa
call
cltd
push
inc
mov
cmp
adc
sub
push
pop
cltd
lds
popa
dec
mov
insb
iret
stos
js
pushl
xlat
out
add
sub
out
call
xchg
scas
data16
loope
lret
and
dec
das
sbb
movsl
cltd
cmpsb
xor
or
jp
adc
test
jmp
aad
mov
mov
idiv
pop
adc
push
adc
out
scas
mov
push
rcr
add
scas
lcall
mov
sbb
ljmp
jmp
outsb
sbb
cli
adc
dec
daa
xchg
out
mov
pop
clc
inc
fwait
sub
imul
pushf
fisttpll
mov
mov
sbb
ret
mov
jb
cmp
xor
adc
ret
adc
cmp
cwtl
and
pop
lahf
lret
leave
jmp
popl
stos
cmpb
mov
pop
in
mov
sbb
jmp
pop
jge
movsl
nop
je
fcmovb
or
add
dec
jmp
jmp
jnp
cltd
rol
popf
leave
pop
push
and
pop
xor
mov
inc
stos
sub
adc
rcr
sub
jecxz
mov
add
mov
mov
sub
push
add
mov
jns
cmpl
dec
jo
mov
sub
mov
sahf
pop
movsl
leave
inc
dec
pusha
adc
and
into
pop
scas
sub
outsl
fistpl
push
jbe
jmp
out
mov
pop
and
inc
imulb
mov
lods
inc
stos
sub
fiadds
xchg
inc
sub
mov
mov
push
je
push
mov
ret
push
scas
dec
jg
test
adc
fwait
xor
loopne
pop
pop
outsl
clc
or
push
arpl
cs
xchg
loope
mov
test
dec
sbb
cs
sbb
in
and
stc
fstl
mov
sarl
mov
cmp
cmc
aam
notl
call
sbb
test
inc
push
iret
and
pop
mov
cmc
gs
mov
sub
ficompl
adcb
aad
icebp
lods
jg
dec
fidivs
push
rorb
mov
imul
push
adc
push
pop
sub
mov
das
mov
sti
test
cmpsl
leave
push
or
es
inc
or
dec
adc
sar
ret
jae
adc
and
pop
xchg
dec
pop
mov
das
mov
insl
ror
and
addb
or
xor
ja
push
push
int
or
pop
stos
jl
mov
add
lret
jle
cmp
pushf
pop
enter
mov
mov
mov
fsubrl
pop
inc
and
shlb
xor
jge
inc
mov
test
xchg
lret
xor
and
pop
ret
inc
push
lds
int3
iret
les
pop
cmp
loop
shl
dec
sub
or
xlat
and
pop
fstpl
gs
push
inc
mov
mov
xchg
hlt
in
sub
xchg
mov
xchg
outsl
les
cmpb
push
into
xchg
dec
mov
xchg
rcrl
js
hlt
popa
imul
cmpsl
fists
aam
aas
addr16
push
mov
movsb
and
jge
pop
frstor
fcomps
sarl
stc
dec
mov
aas
lods
iret
or
movsb
pop
or
sbb
lods
xchg
xor
aam
xor
add
inc
outsb
push
hlt
jecxz
rcl
push
pop
inc
dec
je
icebp
mov
xchg
idivb
stc
pop
roll
inc
adc
movl
int
or
fistl
insl
fisubrs
lret
jp
inc
out
mov
insl
lods
xchg
push
xor
std
lret
into
jns
out
dec
ds
pushf
into
sbb
loope
in
xor
add
in
or
pop
mov
je
fisubl
aas
cwtl
adc
xor
and
arpl
push
jmp
out
shrl
xchg
shr
pop
pop
loopne
inc
cld
inc
cmpsl
daa
ficoms
mov
cmpsb
int
daa
inc
or
inc
andl
push
je
aaa
pusha
add
data16
pop
bound
add
dec
repnz
jge
jnp
shll
xlat
sub
inc
imul
dec
sbb
pop
dec
mov
pop
pushf
int3
dec
stos
in
xchg
imul
lret
pop
rorb
and
push
jmp
xchg
fadds
sub
mov
ret
cmp
mov
xchg
and
addb
mov
add
cmpsl
shrl
ret
mov
scas
or
and
fimull
outsl
cli
repnz
adc
adc
lea
cmp
fistl
rcll
add
adcb
out
shl
into
jg
xchg
xchg
nop
movsb
cmp
sub
in
mov
loope
out
movsl
xor
add
mov
adc
mov
loopne
inc
mov
nop
fisubl
lret
out
jecxz
and
test
sahf
mov
lds
loopne
scas
test
push
or
sarl
push
decl
push
xchg
sbbl
xchg
sarb
and
dec
aaa
pop
ret
ficoml
outsb
lods
aam
pop
leave
mov
cmp
arpl
add
sub
xor
insb
sub
in
sbb
ffreep
lret
push
pop
or
mov
mov
xlat
lds
adc
fwait
into
out
in
int3
mov
lret
loopne
pop
adc
std
pop
mov
out
and
shlb
int
insb
xchg
repz
hlt
sub
push
cmp
and
fistpl
js
and
mov
loope
sbb
sub
in
clc
repnz
popa
je
cmpsl
mov
insb
aaa
mov
test
push
loopne
pop
push
sub
call
cld
jp
addr16
mov
cltd
mov
cmp
mov
jno
push
outsl
int
mov
arpl
leave
icebp
lea
bound
aad
lcall
xchg
scas
icebp
orb
jmp
test
fildll
adc
cmp
aad
repnz
mov
subb
stos
add
push
stc
clc
arpl
jecxz
movsb
enter
or
ficompl
push
cmpsl
enter
adc
mov
test
jge
scas
cltd
sarl
hlt
mov
or
and
push
sub
pop
dec
pop
fbstp
fnstenv
cmp
sarl
xchg
outsl
xor
xchg
stos
sahf
jmp
loop
pop
outsl
pop
and
subb
or
pop
inc
mov
fnsave
jbe
gs
stos
dec
xchg
push
push
push
test
insl
jbe
popf
leave
call
push
enter
xchg
pop
int3
clc
mov
mov
mov
xchg
cltd
das
out
fs
scas
repnz
or
lahf
mov
jae
push
push
mov
loop
insb
lods
in
add
xor
jo
into
insl
xchg
ds
aad
mov
xor
loopne
dec
pusha
insb
inc
lcall
xchg
jne
mov
outsl
lock
imul
push
scas
or
into
jnp
outsl
xchg
mov
outsl
in
dec
insl
mov
xchg
loope
jle
sbb
rorl
mov
pop
jp
les
mov
add
push
dec
sbb
ror
pop
mov
inc
es
sbb
mov
lret
repz
adc
sub
sub
push
mov
or
adc
fldenv
pop
shrl
movsb
daa
frstor
cmpsl
mov
xor
cmp
xchg
adc
lock
iret
js
fadds
xchg
or
cmp
cli
mov
dec
fisttps
mov
inc
mov
ret
mov
push
inc
fldcw
add
adc
add
cwtl
loopne
lahf
jns
adc
add
pop
std
lods
jno
icebp
jge
dec
jne
dec
idiv
loopne
pop
xchg
aaa
and
jecxz
pop
mov
push
jl
pop
sti
cs
or
mov
xor
push
int3
sti
outsb
cmp
sbb
cwtl
out
push
jns
movsb
xchg
fsubl
loop
dec
ja
clc
call
call
negl
enter
in
xchg
mov
insl
inc
mov
fsubr
lods
jmp
add
pop
pop
adc
jo
cs
jnp
mov
mov
and
sbb
and
cmc
into
cmpsb
outsb
imul
and
jmp
adc
shll
movl
add
or
sub
outsl
sarb
out
insb
iret
aam
clc
sbb
outsb
mov
jg
mov
loopne
mov
in
pop
sub
add
in
mov
lea
jge
aad
pusha
adc
lods
sbb
loope
pop
repnz
sbb
jnp
fsub
fstps
loopne
sbb
repz
jae
mov
mov
jl
mov
shr
cmc
mov
dec
push
xchg
clc
add
or
dec
mov
xor
cmc
pop
sub
nop
leave
outsl
or
scas
pop
sbb
add
and
movsl
pop
mov
in
shll
lcall
loopne
push
dec
mov
add
sbb
pop
mov
cmp
fcompl
shlb
out
mov
movsl
nop
dec
xchg
popa
mov
les
xor
das
sub
or
out
jle
repz
pop
add
faddp
add
mov
fistps
sti
shrl
xchg
mov
gs
xor
mov
jae
test
lahf
mov
loop
pop
mov
hlt
frstor
fnsave
jae
or
jbe
add
aas
and
xor
mov
arpl
xchg
notb
jg
jae
push
jo
shlb
icebp
into
sbb
cmp
notb
add
or
push
rcll
sub
stos
cmp
xchg
imul
mov
push
lret
in
ret
rcr
arpl
pop
int
inc
push
pushf
push
mov
pop
or
sarl
xlat
mov
cmp
int3
cmp
jge
mov
scas
movsl
movsl
rcrb
mov
jle
out
inc
jno
sbb
dec
or
inc
sti
xor
mov
mov
addl
in
jno
lcall
pop
adc
jbe
push
loopne
orl
mov
or
xorl
xchg
das
hlt
push
jle
addl
push
fstpl
push
mov
pop
push
fldt
sbb
adc
les
and
lds
faddl
cwtl
fildl
mov
rcrl
sub
mov
mov
mov
arpl
sbbl
fldcw
add
sbb
fstl
clc
pop
aaa
cmpl
adcb
cltd
fdivrl
jns
sbb
sub
ljmp
fdivrl
push
push
negb
sarl
xlat
xor
mov
mov
mov
xorl
adc
xor
mov
sub
pop
fimuls
cs
mov
inc
inc
icebp
xlat
mov
push
mov
push
add
fisubrs
lds
fidivl
addr16
cmp
jmp
enter
jne,pn
cmpsb
aas
mov
xchg
icebp
mov
adc
inc
flds
in
push
insb
mov
mov
jle
mov
outsl
divl
es
pop
and
xchg
inc
ja
ficoml
insb
or
popf
push
jle
sbb
imul
mov
int3
pop
inc
aam
jle
inc
jns
cs
call
shl
leave
imul
xchg
arpl
pop
sub
rcrl
ja
cmp
sahf
enter
cmpsl
clc
jnp
xlat
jge
shrl
cmpsl
xchg
xor
cli
ds
push
jne
mov
xchg
pop
in
enter
xor
cmp
lds
cmc
inc
xor
sub
clc
mov
faddl
mov
dec
mov
addb
sub
push
add
pop
pop
inc
dec
jo
stos
adc
pushf
les
push
sub
lret
xchg
stos
sti
in
dec
inc
sub
mov
stos
cld
fidivrs
arpl
xchg
call
shll
mov
xchg
xchg
add
test
and
addr16
adc
mov
scas
xlat
jne
xchg
scas
mov
andb
dec
and
xor
icebp
rorb
push
cmp
les
imull
insb
cmp
adc
jmp
lret
imul
xor
pop
mov
mov
add
in
inc
add
or
jmp
ljmp
cmpsl
sub
xchg
push
cmp
ljmp
inc
popa
fldenv
out
faddl
cmp
mov
push
aaa
data16
mov
in
dec
fwait
add
pop
ds
sub
hlt
cmp
cld
loopne
imul
daa
sub
clc
or
in
lea
enter
shlb
lret
pop
mov
and
ret
push
not
xchg
loopne
fs
insl
push
shll
mov
loope
cmp
jae
lcall
cmp
mov
arpl
call
cmc
mov
scas
mov
pop
aas
inc
inc
les
mov
pop
xchg
pop
sub
mov
sarl
es
push
cmp
repz
aaa
jnp
outsl
sbb
addr16
pop
jns
loop
mov
sub
xchg
mov
divl
mov
adc
data16
xchg
mov
enter
repnz
add
push
std
lock
ds
aaa
movsl
xchg
popa
or
divl
push
inc
sarb
cltd
xor
ret
mov
das
js
repz
rcll
push
imul
xchg
scas
xchg
adc
jg
bound
fwait
in
mov
pop
push
sti
jmp
lods
or
push
ja
dec
fiaddl
daa
and
cli
sbb
inc
jle
dec
mov
gs
dec
dec
jae
fs
repnz
cs
scas
loopne
push
iret
mov
sub
popa
sub
shl
jge
int
sbbl
xchg
orb
pop
outsb
inc
pop
jno
sub
test
sbb
mov
insb
movb
xchg
test
insl
insb
dec
lret
dec
or
daa
in
jle
xchg
cs
fbstp
cmp
les
mov
outsb
fwait
jns
push
jge
jp
sbb
cmpsb
out
mov
and
mov
mov
in
push
xchg
aad
sbb
jnp
adc
push
cmc
outsb
les
jg
adc
cmc
dec
pop
cmp
fstl
sbbb
mov
pop
aam
sub
pop
fidivs
out
int
pop
popf
sbb
in
sbb
repnz
movsl
and
xchg
into
pop
daa
cmp
dec
pushf
fbstp
mov
ss
bound
mov
or
cmc
icebp
or
push
or
sub
or
xor
sbb
das
push
inc
cmp
out
out
or
ja
testb
add
dec
pop
lret
je
cwtl
das
xchg
adc
mov
repz
adc
das
test
xor
and
je
fisubrl
adc
cli
loopne
mov
push
dec
sbb
les
mov
push
and
sti
mov
cmp
adc
movsl
cli
pushl
or
cmpsb
sub
mov
xchg
mov
sub
mov
mov
and
in
mov
pop
mov
adc
out
stos
add
pop
popf
jle
andl
sub
mov
out
jge
cmpsb
or
mul
outsl
pop
stc
pop
mov
popf
adc
cld
mov
lcall
test
popa
mul
xor
into
push
xchg
add
push
push
iret
cmpsb
xor
outsb
loope
inc
mov
nop
in
aaa
lds
mov
aaa
sub
dec
and
dec
mull
sub
mov
adc
pop
lret
dec
sahf
fdivr
jmp
pop
mov
and
ds
jge
ret
jle
mov
lods
stc
in
rcrl
ret
and
daa
mov
mov
out
sub
mov
push
fisubs
subl
incl
ja
in
stc
jne
xor
aam
mov
jmp
arpl
and
inc
subl
popf
jo
mov
daa
cmpsl
xchg
jg
pop
xchg
mov
js
pop
adc
inc
push
rcl
imulb
int3
xchg
mov
iret
cld
push
mov
inc
mov
pop
popa
and
cmc
ss
push
fists
ja
jp
lods
dec
sub
popf
inc
rcrb
inc
or
cld
xchg
mov
cmp
hlt
shlb
sbb
cmpsb
cmp
xor
or
shll
cmpsb
leave
mov
xor
sarb
sub
mov
xchg
sub
ret
fidivl
enter
mov
pop
shr
dec
sarb
fisubs
lds
insb
in
sub
addr16
aas
jne
mov
dec
xchg
repz
jno
ss
leave
inc
mov
shlb
jne
adc
je
add
mov
daa
mov
pop
inc
mov
dec
push
push
and
mov
aas
mov
test
xchg
dec
and
fisubs
add
gs
dec
jae
dec
xchg
jecxz
dec
rcll
inc
mov
imul
ss
jns
pushl
iret
repz
dec
jae
mov
xor
sahf
pop
aam
xchg
cmpb
fcompl
sahf
sbb
sbb
push
fidivs
mov
lods
ffreep
mov
push
mov
pop
ljmp
inc
sub
dec
out
sbb
insl
test
add
fmul
mov
loope
dec
stos
fwait
jb
xacquire
movq
testl
int3
ret
sahf
lea
xchg
add
mov
cli
lahf
iret
mov
pop
stos
arpl
roll
inc
dec
lcall
sbb
scas
cmp
movsb
cmp
and
out
mov
sub
test
jp
imul
rep
or
imul
adc
aam
jecxz
jbe
xchg
cmpsl
lods
dec
fwait
xchg
cmc
aas
iret
test
loop
insl
dec
or
test
gs
rcl
roll
xchg
sub
sub
xchg
push
movb
pushf
adc
into
sbb
daa
cwtl
xchg
sbb
pop
popa
jae
xchg
scas
cmpsl
jae
or
push
dec
sbb
lret
outsl
jns
mov
fisubl
cs
jo
rcl
mov
fwait
add
sub
cmc
shrb
into
xor
in
push
lret
call
adc
out
aam
jl
xchg
mov
xchg
js
lds
xchg
pop
xor
popa
mov
or
lock
popf
push
adc
jmp
add
or
push
inc
mov
add
mov
mov
push
in
pop
jb
inc
sti
xchg
dec
gs
sti
mov
dec
cltd
xor
stc
cmpsl
add
aaa
idivb
sti
sti
call
pusha
and
xor
mov
push
push
dec
push
cmp
sub
repz
clc
les
mov
jecxz
adc
xchg
cld
or
cmpsl
add
mov
loop
push
sub
jne
imul
mov
stc
cmp
outsb
rol
aad
dec
mov
test
pop
push
mov
sub
andb
xor
and
mov
daa
mov
je
out
jo
fbstp
notb
loop
cmp
stc
data16
clc
les
mov
cmp
out
mov
jbe
sub
mov
sbb
mov
adc
push
xchg
psubsb
repnz
imul
movsl
xchg
mov
dec
fsub
mov
aaa
lret
xor
roll
lods
and
pop
sbb
repnz
xchg
xchg
mov
push
stc
add
xchg
jp
jno
xchg
inc
push
push
sbb
insl
test
mov
cmc
or
iret
push
pop
arpl
ret
fildll
ljmp
jp
sub
adc
and
push
cmp
cwtl
dec
push
sti
fyl2xp1
cmpsl
jp
dec
push
push
ficomps
sbb
addl
xchg
repz
scas
fnsave
dec
jle
outsl
cmp
jecxz
cmpsb
or
rclb
or
mov
mov
rcl
xchg
cli
cmp
add
pop
jne
cli
in
adcb
ret
in
rorb
imull
cs
bound
mov
das
push
fwait
jnp
push
cmp
or
out
aas
pop
fildl
pusha
addr16
nop
lock
mov
mov
div
push
imul
mov
sbbl
sti
sbb
add
in
les
insl
adc
insl
pop
enter
lods
pusha
push
mov
add
xchg
adc
jg
popf
cmp
ret
push
inc
rclb
insl
mov
pop
mov
push
pop
fistps
pop
dec
sbb
popf
cmp
movsl
jb
dec
push
enter
xor
nop
mov
mov
adc
fldenv
icebp
fwait
pop
jne
ja
std
cmp
ficoml
dec
out
mov
add
je
pop
pushf
add
sub
cwtl
fcoml
and
jmp
add
stc
movd
aam
out
push
out
cmc
idivl
xchg
dec
movsb
clc
ds
lret
push
inc
pop
imul
xor
cmp
stos
movsl
in
jne
and
sti
mov
nop
stos
or
test
jno
xorb
lods
pop
xor
mov
dec
add
add
jge
and
sub
lock
jns
adc
popa
pop
pop
cmpsb
push
je
inc
mov
mov
sbb
lcall
pop
mov
aam
nop
movsl
or
insl
xchg
push
or
mov
and
aad
xor
stc
bswap
push
add
mov
stos
test
or
push
pop
xchg
mov
std
lods
adc
pop
out
xor
rcll
jns
mov
cmp
fidivl
inc
or
pop
stos
mov
cmpl
rorb
xchg
int3
scas
cmp
clc
out
push
adc
inc
cmpl
adc
jecxz
dec
xchg
idivb
add
inc
daa
mov
data16
pop
ljmp
adc
arpl
aas
stc
in
fldcw
mov
mov
sub
out
xor
flds
aad
into
sub
pushf
inc
pop
stc
es
ror
repz
xchg
in
js
jnp
arpl
nop
inc
leave
sub
roll
sbb
imul
sbb
pop
test
movsb
imul
push
insl
mov
outsb
stos
aam
outsb
sahf
ret
outsb
sti
push
fmull
rorb
xor
add
aad
test
inc
pop
dec
mov
lods
jne,pn
xchg
stc
insb
mov
adc
enter
xchg
fidivl
pop
das
shrl
xchg
mov
arpl
shrb
xchg
dec
fistl
cltd
add
cmpsb
mov
push
jo
sbb
pop
arpl
andb
and
xor
or
sub
xor
sub
mov
in
mov
lds
dec
bound
push
sbb
out
popa
pop
xchg
mov
sahf
mov
inc
inc
dec
std
jge
sub
inc
cltd
mov
push
bound
into
mov
arpl
xlat
mov
xchg
loopne
loop
pop
daa
mov
push
add
das
arpl
jbe
dec
dec
dec
jne
andl
push
jmp
inc
inc
mov
sbb
xchg
shrb
mov
push
movsl
std
push
xorb
pop
fs
mov
xchg
push
in
pop
mov
add
sbb
mov
push
stc
jae
sbb
mov
les
pop
or
or
and
into
adcl
push
lea
cmp
push
cld
pushf
testl
in
jae
xchg
pop
mov
push
jo
inc
rcrl
or
mov
out
cmp
fwait
mov
out
fistpll
or
scas
cmp
mov
dec
inc
les
stos
dec
bound
inc
cltd
pop
cmp
adc
loopne
leave
jle
das
ss
mov
jae
repz
dec
lret
inc
hlt
jmp
test
sbb
clc
mov
jae
jns
mov
mov
lret
imul
fwait
lret
adc
imul
insl
dec
or
and
lods
and
ret
sahf
faddl
leave
mov
popf
jnp
jg
push
mov
in
cmpsl
inc
into
lds
fnstsw
mov
sub
lods
in
inc
cmc
cmp
adc
cmp
or
cwtl
in
into
addr16
mov
pushl
push
sbb
movsb
cmp
jne
pop
xlat
std
add
popf
dec
fiaddl
nop
shlb
lea
push
mov
in
and
lds
mov
mov
aad
push
inc
stos
bound
jne
lock
ja
gs
add
push
sub
push
pop
xchg
and
xchg
test
push
lea
daa
arpl
inc
nop
shll
cwtl
ljmp
mov
shlb
icebp
mov
inc
outsl
rcrb
sbb
pop
out
lret
mov
cmp
stos
xchg
cmc
and
pop
mov
in
fs
test
cld
les
rep
lods
inc
int
in
sub
jmp
mov
call
mov
jae
cwtl
ja
aad
jmp
mov
std
loop
movl
push
inc
fiaddl
jge
fnstsw
out
push
aas
sbb
mov
mov
imul
int3
pop
ficomps
dec
pushf
mov
jo
adc
gs
stos
inc
cmp
shrl
ret
sahf
and
sub
jnp
add
and
js
adc
aas
test
lret
incl
popf
mov
mov
decb
and
pusha
lahf
stos
inc
rcrl
insb
jg
inc
shlb
ljmp
xchg
std
cmp
loop
cmc
ja
sub
lods
lahf
jbe
pop
mov
dec
ret
stos
shlb
sahf
test
jp
mov
pushl
push
cld
push
cmpsb
mov
cmpsb
fdiv
dec
inc
pop
xchg
pop
aam
cwtl
jb
js
dec
stos
pop
jge
fnstsw
mov
mov
fnstcw
jp
insl
jb
cld
xor
inc
mov
fsubrs
js
insb
sub
out
xchg
bswap
outsl
cmp
jl
dec
int
out
xchg
mov
rolb
push
pop
dec
shl
cmp
mov
xchg
clc
cmp
push
fstps
lahf
into
fldenv
lahf
dec
cli
mov
lds
dec
ljmp
cltd
lock
pop
add
and
xchg
enter
and
test
inc
mov
iret
in
xchg
push
or
je
cld
sub
inc
mov
ds
mov
dec
je
jo
insl
sub
mov
cltd
repz
jnp
popf
into
xor
fcoml
mov
mov
xorb
adc
iret
dec
insb
nop
add
cltd
aad
push
mov
mov
roll
lahf
mov
outsb
mov
std
leave
hlt
or
and
jl
jecxz
xor
push
into
and
lds
inc
cmp
lea
xchg
cmp
and
pop
lods
cmp
push
or
or
jp
repz
cli
je
lods
sbb
push
or
cmp
bound
icebp
aad
cli
and
daa
jae
dec
notl
mov
sbb
repnz
imul
jno
sub
loopne
mov
push
mov
fstl
add
jecxz
rolb
adc
aaa
xchg
testb
mov
fs
mov
jl
fs
pushf
push
cltd
loop
imul
cwtl
addr16
sub
mov
in
pop
lds
xor
lods
jmp
sub
and
out
and
push
inc
cmpsb
jp
sbb
test
dec
inc
jmp
xorb
jne
jge
inc
xchg
and
ss
mov
and
insb
mov
xchg
insl
aam
fldcw
shr
lret
push
pop
mov
js
imul
mov
xchg
or
call
test
push
movsl
test
adc
test
push
lret
je
mov
sbb
mov
sub
fnstcw
push
popa
adc
add
xchg
pop
lahf
nop
int
xchg
push
daa
outsb
inc
jae
push
lcall
fistps
push
outsb
pop
enter
mov
pop
ret
mov
out
dec
cmpsl
jecxz
dec
stos
pop
and
adc
ss
ror
lahf
stc
cmp
out
fmulp
insb
insl
mov
ret
xchg
and
mov
clc
bound
jae
mov
mov
loope
jp
and
ret
mov
jle
outsl
lret
insl
and
int3
addr16
mov
cld
sbb
add
xor
decl
call
mov
and
daa
pushf
pop
pop
jb
insb
fstps
cmp
daa
cmp
je
dec
lcall
add
ficompl
addr16
cld
push
out
cwtl
lcall
repnz
cmc
call
add
loopne
lahf
imul
xorl
rol
dec
xor
std
fcmovnb
jp
mov
xchg
je
iret
pop
lods
arpl
imul
jp
or
stos
ss
inc
lock
mov
and
push
adc
sbb
fsub
inc
adc
dec
scas
out
ljmp
mov
xlat
xlat
xchg
rcl
enter
jecxz
pop
lods
jno
out
mov
mov
addr16
pushf
in
mov
jle
sbb
pop
pop
mov
mov
gs
sahf
jae
and
in
sub
std
and
xchg
mov
out
lods
lret
mov
pop
jns
gs
jp
dec
mov
pop
outsl
fldcw
les
shl
jmp
addr16
cmp
aam
aaa
pop
popa
inc
or
fwait
cld
cmp
or
xchg
mov
shlb
sbb
scas
jne
rolb
das
in
sub
mov
xor
in
repz
out
adc
adc
ret
pop
rcrl
int3
and
js
sub
std
sub
in
fdiv
mov
pop
fcoms
cwtl
mov
insl
add
rcr
pop
inc
dec
jbe
xchg
and
inc
jmp
rorl
sbbl
jle
fcoms
call
xor
adcl
xchg
adc
bound
cmp
test
xchg
ret
adc
addr16
or
pop
inc
cmp
jae
sahf
subb
xor
xchg
inc
or
aam
mov
pop
cwtl
xor
jle
and
cmp
aad
loopne
mov
xor
cmp
fistps
or
test
add
sarb
aam
cli
sar
cld
inc
mov
cmp
fiadds
mov
arpl
cmc
fwait
pop
or
inc
stos
aad
pop
aam
push
pop
add
mov
xchg
mov
test
or
xchg
cmp
cmc
pop
inc
mov
ret
adc
test
ret
xor
testb
int3
fstp
sbb
jecxz
add
shll
lret
lret
cmc
fcmovnb
or
pop
pop
ljmp
push
mov
lret
int
push
lcall
sbb
add
inc
jmp
repnz
cmp
adc
jecxz
lods
pop
xorb
or
imul
pop
outsl
mov
jns
cli
sub
push
adc
cs
and
fidivrs
and
push
data16
cmc
inc
aaa
push
xchg
test
adc
rcl
je
je
mov
or
test
dec
mov
sub
lcall
or
sbb
mov
jmp
dec
mov
fistpll
or
mov
adc
lds
xchg
lods
inc
cmp
inc
mov
fidivl
movb
imul
sti
std
lock
scas
out
stc
xchg
lcall
inc
jmp
pop
adc
cmp
pop
pop
sub
loope
adc
fadd
popa
dec
sar
xor
scas
es
or
fwait
adc
pusha
xor
jnp
repnz
add
stos
sahf
aaa
jne
inc
inc
cli
cmpsb
cmp
mov
jnp
ret
insl
ret
dec
xor
sbb
cld
out
lcall
xchg
testl
std
addr16
movsl
jmp
dec
arpl
adc
leave
lods
jb
push
movsl
or
iret
mov
ljmp
outsl
mov
inc
mov
ret
stc
jae
sub
mov
xor
mov
loop
sbb
call
test
xor
or
scas
scas
testl
cmp
in
repnz
sub
add
shll
ficoml
shll
dec
subb
lret
or
rolb
jb
addr16
mov
adc
aas
movsl
dec
adc
or
into
jae
rcl
inc
inc
adc
mov
add
sbb
mov
xchg
stos
out
push
test
popa
je
pop
lcall
sbb
ret
test
xor
adc
jecxz
out
loopnew
xchg
imul
pushf
dec
pop
fwait
sub
movl
sahf
ljmp
xchg
ret
jbe
test
jae
fisubrs
ficoms
push
mov
xor
xlat
cmp
lods
call
mov
push
push
fiadds
lahf
sti
ss
stos
jne
mov
orb
test
out
out
js
mov
add
and
cmp
divb
pushf
pop
push
xor
rol
iret
out
lea
in
test
sbb
testb
std
imul
jb
inc
add
repz
icebp
xor
andb
stos
and
pop
in
dec
pop
xor
adc
stc
cltd
jnp
inc
push
in
lret
jle
mov
mov
jg
mov
rcl
dec
fdivrl
mov
pop
call
jb
mov
loopne
lds
or
popa
gs
movsb
cmp
or
fildll
sbb
push
insb
xchg
pop
sub
jmp
jb
mov
imul
aad
cmpsl
or
adc
push
ja
clc
jle
pop
adc
mov
cmc
int3
pop
arpl
pop
or
push
cmp
xchg
mov
pop
push
pop
sahf
mov
pusha
and
add
mov
loope
mov
sbb
fistl
push
cmpsl
jbe
or
pop
sbb
mov
rcl
pop
addl
mov
test
dec
hlt
stos
fmuls
out
adc
or
push
lock
rorb
cwtl
push
xchg
daa
imul
jge
faddl
mov
mov
mov
xor
dec
sbb
pushf
lods
lcall
mov
lods
sub
xor
mov
cmp
mov
das
mov
mov
sbb
cmp
mov
cmpsl
pop
out
pop
lock
and
add
iret
xor
dec
lock
pop
xor
inc
adc
fmuls
xchg
into
pop
mov
jmp
inc
xorl
fwait
test
xchg
xchg
mov
das
out
pop
outsl
loop
push
jae
add
add
cld
jno
ds
mov
mov
pop
out
insl
dec
sbb
lods
fistl
addr16
lret
push
pop
loop
jg
push
lods
pop
sub
gs
fbld
mov
ljmp
daa
testb
jle
icebp
push
mulb
cmp
inc
mov
sbb
inc
and
inc
add
jl
add
and
and
aaa
hlt
sub
jnp
stos
rorb
flds
into
jecxz
mov
shrl
imul
adc
or
stc
cltd
or
dec
into
in
iret
cmp
adc
dec
sub
xorl
jecxz
movsl
xchg
addr16
xchg
cmc
mov
aaa
lcall
jle
scas
jle
adc
aas
stos
xchg
cmp
push
ss
mov
xor
test
xor
lock
add
gs
jl
mov
jle
sarl
pusha
out
loop
enter
div
dec
or
idivl
sub
mov
or
ja
xchg
cwtl
mov
movsb
and
cmpsl
sub
jb
lods
insl
or
loope
ja
and
arpl
cmp
frndint
xor
outsb
fs
stos
sub
fimull
je
jmp
dec
sub
and
add
addr16
ret
sub
add
pop
cli
sbb
and
sub
and
cli
add
orb
in
mov
and
gs
fdivl
sbb
jg
cmpsl
cmovl
push
in
push
mov
pop
aad
dec
jnp
mov
xorl
and
pop
push
inc
test
bound
mov
mov
and
mov
aaa
and
stc
stos
sahf
mov
pop
lahf
popa
jns
cmp
gs
inc
mov
jle
imul
test
mov
xor
sbb
rcrw
cmc
imul
pop
out
cmp
inc
out
lcall
addr16
push
inc
notb
int3
loope
fdivrs
aam
adc
out
fnstcw
fidivl
test
mov
test
mov
mov
cmp
call
test
xor
cmpsb
add
mov
pop
icebp
jae
xchg
mov
int
mov
aad
lods
fdivrs
xchg
inc
pop
mov
in
pop
hlt
push
pusha
test
xor
rclb
xchg
jmp
mov
dec
cmp
sti
test
xchg
insl
pop
jle
cmp
out
mov
int3
mov
ljmp
xor
repnz
adc
add
icebp
xchg
sub
push
nop
and
push
and
sbb
inc
push
nop
lcall
pusha
and
mov
sahf
aad
addr16
ljmp
sub
ja
add
xorb
fdivl
push
fidivrl
jbe
lods
movsl
mov
stos
shrb
adc
xchg
dec
stc
dec
sub
cwtl
dec
pop
xor
ret
mov
mov
inc
adc
xlat
push
push
mov
ljmp
ljmp
cltd
scas
test
flds
xor
pop
jmp
mov
xchg
inc
or
or
jle
mov
fwait
cmp
xchg
cmp
push
test
or
jns
lods
xchg
imul
jnp
adc
xchg
add
xchg
scas
dec
ljmp
dec
lea
daa
ss
xchg
test
add
loopne
ret
or
xor
lods
dec
out
add
cmpl
and
lea
add
shll
mov
scas
cld
xchg
or
push
sbb
pop
ficomps
enter
mov
scas
fstpl
xorb
and
sub
call
lods
fwait
pop
mov
nop
int
outsl
or
inc
mov
out
rol
pop
mov
mov
and
jle
popa
shll
xchg
xor
xor
adc
jo
sbb
cmpsb
sbb
fnstenv
daa
in
mov
xchg
stos
sarb
fwait
or
cmp
pop
es
and
scas
jg
jbe
mov
and
test
adc
jecxz
inc
jmp
test
ret
roll
adc
xor
mov
pop
movsb
mov
or
dec
pop
xchg
jg
out
psubb
movl
cmp
pop
sti
mov
loopne
roll
pop
aas
jae
xchg
fidivrs
test
push
xchg
aaa
hlt
repz
shl
jge
mov
push
and
fildll
or
gs
inc
mov
insl
mov
add
sub
leave
fcomps
dec
jbe
cmp
mov
cmpsb
mov
lret
and
adc
sbb
in
mov
shlb
imul
mov
or
mov
inc
shlb
in
pop
popa
scas
stc
xlat
scas
mov
scas
and
fldl
sbb
and
inc
cs
mov
xchg
jl
es
loopne
push
jp
cwtl
xchg
xchg
dec
push
dec
cmpsl
xor
jmp
stc
js
sub
push
xor
cmpsb
ficoml
leave
dec
sarl
mov
add
xor
jbe
adc
xchg
add
mov
je
lret
cmp
test
push
aas
ss
push
dec
pop
daa
mov
or
push
or
ds
stc
ja
or
xchg
push
jg
dec
popf
test
pop
xchg
lahf
mov
imul
int3
jmp
xchg
lock
jge
xlat
pusha
imul
xchg
xor
dec
pop
or
fsubl
aad
sbbl
nop
subb
sahf
pop
das
or
int
clc
push
push
xchg
inc
add
ret
mov
lock
xchg
jecxz
and
in
aam
aaa
sub
mov
mov
sbb
daa
mov
dec
jae
pusha
es
add
cmp
cltd
in
mov
push
ja
imul
pop
pop
add
bndldx
outsl
inc
xlat
jae
loopne
xchg
sbb
cmp
push
in
ds
xchg
or
xchg
fidivrs
imul
outsl
addb
mov
repnz
dec
andl
fwait
and
jnp
out
jbe
mov
ret
add
rol
loop
pop
and
outsb
jle
push
jnp
rcrb
loopne
loop
jbe
mov
mov
cmp
xor
or
pop
popf
call
div
and
sbb
subb
test
arpl
test
hlt
mov
negl
pushf
or
popf
cmp
jbe
leave
lock
jge
cmp
dec
ss
cmpsb
xor
pop
adc
stos
fisubl
and
sbb
aaa
pop
ret
popf
in
push
and
pop
mov
cmp
pop
movb
push
fstps
jge
jle
cs
mov
incb
add
mov
in
out
jmp
mov
mov
into
leave
scas
xor
stos
rclb
in
das
rcll
lock
jg
pop
cmpsl
popa
cmpsb
dec
insb
enter
sub
jno
or
test
in
aas
fbld
sti
decl
aad
and
mov
dec
jg
lcall
sub
mov
mov
cwtl
scas
mov
dec
addr16
icebp
stc
repnz
push
dec
mov
jne
jbe
aaa
jmp
mov
dec
jns
test
lahf
test
fstps
add
inc
addl
sub
leave
xchg
mov
outsb
xor
fldl
das
scas
jnp
cmc
jb
nop
notb
inc
or
xchg
jp
in
jne
cmp
loope
add
inc
xchg
out
fdivrl
mov
lods
inc
aad
push
insl
ds
xchg
jne
insb
jge
gs
inc
lret
hlt
out
sub
pusha
hlt
movsl
popf
fstpl
out
inc
add
div
loopne
mov
aam
movb
jmp
xor
sbbb
movsl
loopne
ret
fbld
gs
xlat
sub
stos
dec
aad
je
add
add
clc
int3
adc
mov
outsb
pop
daa
or
sti
cmp
pop
jbe
and
fs
pop
cld
dec
push
scas
xchg
sub
mov
xor
call
mov
xchg
rorb
lock
repnz
cmpl
je
mov
outsb
std
gs
add
fsubrl
scas
lret
adc
pop
pop
mov
movsl
xchg
stc
rol
int
das
lcall
sbb
out
mov
clc
push
pop
mov
mov
nop
xor
adc
sbb
mov
imul
mov
ret
and
push
push
xor
xor
jmp
cmp
mulb
cld
lret
add
test
imul
cld
push
in
jnp
add
in
icebp
push
mov
mov
xor
cmpsb
test
xchg
adc
jne
inc
inc
ljmp
xor
mov
dec
jl
mov
pop
push
shrb
lcall
mov
mov
icebp
dec
lret
stos
mov
lock
rorl
adc
or
cmp
push
lods
jl
icebp
push
lret
cmp
xor
lcall
mov
xor
frstor
std
imul
adc
cltd
jns
cs
push
lahf
or
inc
in
pop
test
outsb
repz
mov
cmp
cmp
pop
lods
fwait
icebp
mov
daa
int3
loop
adc
clc
in
in
mov
dec
addl
sbb
lds
lock
aam
inc
les
cli
in
jb
fwait
lea
dec
pop
inc
xchg
bound
dec
sub
mov
rolb
xchg
push
lods
jg
mov
shlb
xor
dec
rcll
aad
mov
loope
cmp
pop
jb
nop
ret
loope
sub
stos
inc
mov
scas
sbb
filds
dec
jmp
rclb
je
loopne
dec
or
mov
test
lcall
popa
add
or
xchg
insl
and
sbb
jp
lret
sti
jecxz
ds
push
lea
fisubl
aas
xchg
js
mov
jnp
or
test
mov
dec
shlb
jo
push
push
outsb
sbb
sbb
lret
xchg
ds
sub
cmp
xor
loop
popa
nop
fstps
pop
dec
push
push
xor
fidivs
js
dec
in
pusha
push
fst
ja
push
inc
mov
repnz
ds
mov
sbbl
xchg
sbb
sbb
test
adc
mov
sarl
pop
sbb
inc
shrl
daa
pop
sub
add
sub
aas
lds
sti
rcrl
ret
mov
xor
out
mov
inc
inc
insl
cwtl
or
or
pushf
ja
loop
xchg
mov
mov
popf
xchg
or
lret
and
xchg
push
pop
mov
fbstp
sbb
mov
push
fcompl
mov
lock
lret
fiaddl
cmp
push
dec
fs
aaa
sbb
fcoms
shll
adc
cltd
fsts
mov
aam
adcb
mov
inc
lahf
int3
and
push
jne
dec
shrb
stos
mov
sbb
leave
cmp
sbb
add
mov
pop
dec
dec
scas
outsl
repnz
cmc
jae
adc
aaa
orl
mov
pop
mov
dec
lds
insb
scas
mov
std
loope
jg
loop
jae
enter
cs
inc
sbb
jbe
not
xchg
lret
ret
mov
fcoms
cwtl
and
ja
lcall
sbb
and
or
or
or
test
mov
mov
lds
enter
xor
push
inc
inc
lahf
daa
ja
nop
imulb
xor
mov
ret
jnp
pop
rorb
dec
dec
pop
mov
adc
mov
pushf
fwait
mov
fldenv
push
inc
xor
jo
add
pushl
dec
cmp
pop
mov
lret
jne
outsb
mov
sub
testb
xor
adc
sti
cmpsb
inc
stos
mov
mov
out
mov
sbb
push
out
ret
jmp
into
aaa
sub
loope
sub
aam
jno
cmp
aaa
out
loop
lahf
or
sub
cmp
hlt
inc
sbb
xchg
inc
test
jle
out
push
shrb
aad
mov
insb
call
dec
mov
sbb
movsl
ljmp
pop
sbb
mov
leave
out
ds
sbb
inc
shrl
and
dec
je
mov
shr
add
insb
std
hlt
insb
adc
jle
push
insb
xor
sbb
mov
xchg
ja
ss
movsb
ljmp
inc
mov
xchg
xchg
adc
lcall
xchg
enter
test
cli
dec
mov
push
scas
sbb
cld
ss
stc
and
inc
or
xchg
push
leave
lds
sub
push
int
mov
sbb
scas
ja
out
mov
lock
and
insl
push
jnp
jo
or
push
mov
fcmovnbe
std
in
imul
jne
pop
repz
insb
cmpsl
mov
mov
dec
jne
shrb
testb
dec
lret
adc
inc
divb
fisttpl
in
cmpsl
mov
fbld
push
sbb
mov
and
call
xor
je
push
push
jl
clc
sub
fcompp
dec
into
mov
sbb
cmp
push
or
pop
popf
jo
je
xchg
pop
scas
out
dec
rclb
xchg
sti
mov
mov
xor
enter
mov
xorl
xor
adc
in
adc
movsl
dec
std
mov
add
cmc
pop
insl
mov
add
sub
lds
push
lcall
and
mov
jns
pop
je
testb
rcrb
and
aas
sahf
xchg
js
push
or
ljmp
sti
das
addl
jge
mov
pop
in
cmp
inc
or
pop
lock
fldt
mov
sub
dec
mov
mulb
daa
test
jne
dec
addb
xchg
xchg
fists
in
not
dec
je
out
fldcw
imul
mov
rcll
dec
je
les
nop
das
xchg
xor
stos
andl
jno
cmp
adc
adc
movsl
cmpsb
mov
jmp
ljmp
mov
fs
jmp
and
push
jg
loopne
or
sub
cmp
mov
jnp
or
out
cmpb
mov
jmp
dec
mov
mov
and
push
ds
aas
aas
mov
ljmp
cmp
xchg
loope
out
jl
les
and
shll
out
sub
inc
subl
fiadds
cld
jns
cli
repz
enter
outsl
ror
sub
sarl
aad
or
jbe
mov
stos
call
sub
inc
mov
xlat
fisttps
mov
ja
lcall
leave
dec
es
pusha
sysret
add
adc
cmp
rcrl
mov
mov
jecxz
leave
mov
gs
add
sub
inc
fst
cmpsb
push
sbb
sarb
ss
inc
das
mov
jb
pop
mov
aam
sbb
or
mov
jnp
and
pop
and
cmpsb
testb
add
xor
xor
lret
scas
cmp
pop
jmp
test
cmp
mov
jecxz
mov
and
mov
std
lret
pop
js
adc
pop
push
cmp
aad
cli
push
sahf
or
int
hlt
inc
popa
push
aas
mov
dec
mov
jge
nop
outsl
adc
lods
outsb
mov
stos
stc
push
movsb
popa
in
outsl
pop
cmc
loope
pop
in
adc
jmp
aas
aaa
jns
push
insl
cmp
xor
add
sub
cmp
pop
jne
push
lods
inc
mov
sbb
ficoms
lds
ja
xchg
in
cmpsl
shlb
mov
add
pop
mov
jecxz
jb
repz
shl
fdivrl
into
mov
clc
push
jg
inc
or
pop
jnp
fs
sbb
test
or
mov
push
dec
shrb
dec
push
or
pop
cmp
clc
sbb
mov
call
mov
add
imul
cmp
and
add
hlt
fsubr
jmp
mov
in
mov
shrb
add
pusha
sbb
xchg
daa
lahf
pop
loop
fldpi
test
fwait
out
std
cs
sar
xchg
jecxz
mov
insl
jo
bound
cli
dec
inc
popa
sub
stc
inc
roll
mov
ret
fildll
out
inc
cltd
push
sub
inc
fabs
xor
xchg
clc
loop
mov
std
xor
test
imul
int3
jp
cmp
sbb
daa
popf
xor
sub
jbe
pop
xchg
fbld
mov
pop
rolb
inc
dec
enter
lahf
xor
daa
push
cltd
les
jo
mov
movsl
mov
cmp
aaa
pusha
addl
clc
fnstcw
ficompl
dec
aam
data16
cmp
mov
pop
push
das
popa
cli
jecxz
mov
and
sbb
jo
push
xchg
cs
sbb
out
mov
hlt
mov
push
jmp
pop
leave
imul
mov
xchg
adc
mov
cmpb
lock
mov
mov
push
cmp
adc
cs
adc
cmpsb
push
adc
jmp
adc
cmp
stos
idiv
lds
cmc
jns
pop
addr16
dec
mov
and
sbb
push
cmp
scas
mov
lea
int
imul
sbb
je
push
fld
or
push
sbb
xor
and
push
sti
lcall
jl
rcrb
cwtl
in
test
out
hlt
jmp
stc
mov
sbb
in
push
push
xchg
or
mov
push
jno
mov
xor
fwait
imul
xor
and
dec
call
pinsrw
adc
imul
mov
mov
pushf
aaa
fstpt
push
gs
sbb
into
sbb
in
clc
and
push
fisubs
push
mov
push
xor
lret
mov
scas
stc
xchg
add
int3
jmp
outsb
sbb
shrb
incl
cmp
add
or
jg
or
fs
xor
popa
adc
pushf
cwtl
inc
lods
int3
loop
test
pop
lods
into
mov
pop
scas
cmpsl
push
mov
rcl
icebp
sahf
add
jge
or
jno
cmp
insb
rclb
lock
int
sbb
loop
pop
dec
std
mov
test
mov
jae
xchg
in
mov
sbb
popf
mov
cmpsb
adc
mov
sub
repnz
std
cmp
push
icebp
iret
add
notl
xrelease
add
jecxz
xor
loope
in
cmpsb
std
insl
sub
add
sub
scas
and
and
loopne
or
lea
lcall
add
hlt
jmp
inc
inc
sub
sbb
sub
insb
push
xchg
lcall
dec
hlt
jg
push
add
or
and
push
je
mull
popf
mov
lret
push
stos
sub
mov
jle
jns
enterw
cs
pause
adc
jae
xor
push
push
pop
pop
xor
or
inc
into
pop
jge
idivb
dec
sbb
and
push
pop
push
pop
int3
aaa
dec
jne
or
scas
out
lahf
cltd
mov
xchg
jmp
nop
fnstsw
aaa
pop
loope
add
sbb
cmc
test
mov
mov
or
in
cs
repnz
cmp
and
mov
loopne
xor
xchg
aad
loopne
cmc
add
xor
popa
adcb
call
enter
mov
dec
dec
add
adcl
or
inc
ret
pop
rcll
andl
dec
cli
sub
ret
loopne
lock
jecxz
push
cmpsb
mov
mov
jge
push
and
pop
int
mov
imul
dec
sbb
or
negl
std
outsb
dec
test
dec
mov
aad
test
adc
loop
sub
lcall
pop
jnp
and
insb
pop
mov
inc
sub
imull
fs
js
jecxz
sbb
or
lock
pushf
mov
movsb
aad
movsl
mov
divb
adc
mov
sub
dec
xor
xor
test
inc
pop
out
sbbl
push
mov
mov
jp
lds
leave
add
out
mov
dec
lock
cld
aad
pusha
pop
mov
xchg
inc
scas
aam
test
mov
jmp
sbb
push
mov
sarl
dec
int3
or
inc
movsb
aad
stos
mov
and
fs
cmp
sahf
xchg
pop
cmp
icebp
out
loop
fxch
inc
aas
sahf
xchg
mov
xor
mov
jg
mov
mov
inc
or
addb
jg
cmp
add
dec
dec
insb
sbb
add
out
pop
mov
push
sbb
incl
xor
addl
stos
and
mov
rolb
faddl
pop
dec
andb
pop
add
mov
cmp
pop
mov
int
nop
clc
adc
loope
sub
pop
dec
mov
sub
dec
jne
adc
flds
les
fcom
movsl
jnp
icebp
cmp
lret
loopne
pop
fists
add
sti
ds
pop
test
pop
repnz
mov
pop
pop
outsl
mov
faddl
dec
insl
and
aas
rorl
and
fs
push
add
mov
xchg
or
rcl
idivb
sarb
cmp
pop
pop
vunpcklps
xchg
xor
fistl
orb
loop
insb
push
fistps
icebp
or
ret
mov
push
xchg
decl
das
lock
fldenv
decb
cmp
mov
pop
sahf
dec
sub
mov
mov
cmp
push
sub
jae
lret
adc
frstor
or
xchg
add
jae
and
inc
data16
movsb
movsb
mov
lcall
insb
out
in
loope
leave
rorl
imul
jmp
lods
sbb
scas
inc
push
and
lods
mov
je
shll
dec
sub
orl
xor
pushf
dec
mov
iret
stos
or
adc
jg
aaa
sub
push
pop
inc
xchg
push
cmpsl
adc
test
add
xchg
int
insl
loopne
xchg
cwtl
jae
sahf
mov
mov
mov
jno
cmp
ljmp
fwait
sub
sar
pushf
jge
cs
jbe
out
sarb
test
sub
loop
cli
fistps
adc
addl
adcl
popa
push
xchg
dec
lret
push
pushf
mov
repz
jmp
insb
mov
fwait
in
jmp
push
nop
orb
orb
jne
add
inc
mov
dec
mov
aaa
adc
mov
lock
pop
stc
xchg
stos
int3
mov
jns
jne
loopne
rcll
xor
inc
into
mov
mov
inc
fsubrs
mov
sub
int
pop
icebp
aas
inc
iret
mov
cli
inc
dec
mov
xchg
pop
xchg
scas
test
shlb
mov
and
xor
fucomi
iret
jecxz
cwtl
imul
mov
add
sti
push
push
jb
jo
mov
add
repnz
push
mov
jp
mov
sti
cmp
mov
adc
dec
outsl
add
pop
stc
dec
stos
mov
mov
int
lret
cmp
jle
add
dec
xor
cmp
sbb
stc
cmp
out
std
adc
sarb
std
sbb
inc
dec
push
inc
sbb
jno
and
sbbl
push
cmp
pop
sahf
xchg
jne
cli
xchg
xor
popa
jnp
and
cmp
out
repnz
add
push
xchg
int3
insb
sub
adc
test
scas
imul
sti
mov
or
push
and
insb
push
push
lods
lret
in
xchg
pop
mov
mov
or
sub
decb
jge
mov
pop
mov
lods
or
sbb
loopne
dec
loop
inc
imul
inc
lret
mov
das
xor
xor
or
adc
into
lret
in
lret
xchg
scas
pop
repnz
shll
lret
pop
mov
cmp
inc
scas
fwait
fs
js
test
mov
fsubrl
test
mov
dec
mov
lock
xor
pushf
pushf
jne
pop
nop
sub
imul
in
ret
inc
loope
fadds
std
aaa
pop
jne
xchg
push
aad
out
inc
push
xor
push
mov
xchg
out
push
rolb
jns
sbb
sub
xlat
sub
jge
insb
push
fisubs
sbb
and
mov
fs
jbe
icebp
imul
fwait
ljmp
xor
addl
mov
xor
pusha
adc
cld
jne
lret
fistl
mov
push
inc
rcll
loope
jnp
std
xor
pop
push
dec
lcall
in
mov
fwait
and
push
xchg
or
ss
xchg
inc
sub
lret
pusha
adc
js
dec
mov
or
fld
dec
mov
imul
adc
pusha
and
popf
cltd
xor
fdivr
loope
push
ret
push
push
loopne
and
adc
add
fidivl
jp
pusha
xchg
pop
stos
sahf
mov
rcrl
xor
jo
fisubrl
jo
sbb
mov
test
jae
insb
in
mov
adc
jle
adc
push
jmp
pop
lcall
jbe
inc
add
jns
lods
add
popf
test
pushf
dec
and
inc
push
jl
push
cmp
sbb
lret
lds
mov
cmpb
sbb
bound
mov
cli
inc
jnp
push
inc
fs
push
xchg
call
cmp
inc
mov
cli
repnz
pusha
lret
mov
sub
les
push
push
fsubrs
je
xlat
filds
repz
fldl
sub
pop
or
flds
push
icebp
and
rcrb
mov
xchg
out
sub
arpl
scas
nop
scas
xor
inc
adc
cs
xor
das
loop
pop
mov
cli
adcl
ret
fbstp
lea
cwtl
mov
flds
dec
inc
mov
imul
lahf
testb
leave
add
daa
sub
aad
arpl
sub
and
mov
adc
xchg
adcb
stos
ffree
push
mov
movsl
sub
addb
stos
xchg
mov
cwtl
dec
and
adc
cmp
adc
cmc
out
les
cmp
jbe
xor
hlt
loop
enter
aad
push
imul
arpl
fcoms
repnz
pop
shl
push
jg
pop
aaa
inc
pop
cli
mov
fidivrs
sbb
push
jbe
repnz
inc
sub
mov
ja
stc
jnp
fwait
sub
int
pop
xlat
aas
xchg
xchg
jl
ds
sub
cmc
jae
jecxz
fwait
add
dec
push
cmp
cld
lret
subb
ret
cmp
sti
mov
cmp
aaa
sarl
mov
push
pushf
xchg
pop
add
setnp
and
jge
push
data16
repnz
cmpsb
xchg
mov
fisttpll
mov
vcvtsi2sdl
mov
mov
lock
stos
leave
jns
dec
sbb
jle
stc
sub
rcrl
fldenv
pop
stos
adc
adc
fcomps
xor
and
ret
xor
mov
insl
dec
cmp
xchg
jae
xchg
push
inc
divps
les
or
ljmp
and
cli
stos
jmp
fidivl
shrb
jnp
cwtl
loopne
adc
mov
dec
or
pop
sbb
pushf
sahf
jno
push
inc
lahf
and
xchg
fimuls
test
mov
aam
daa
rorl
or
mov
inc
rcll
aad
inc
mov
stc
je
shlb
imul
retw
cmp
inc
or
call
add
and
pop
xlat
mov
xor
inc
inc
cmp
add
cld
popl
jb
mov
decl
inc
lods
pushl
mov
repnz
sub
or
pop
mov
pop
sub
loope
push
dec
jbe
mov
data16
xchg
push
pop
stos
pop
pop
cmp
mov
xchg
gs
push
jnp
sbb
lret
dec
xor
test
inc
and
stos
inc
jge
das
les
testl
shr
or
daa
sbbb
or
adc
mov
int
pushf
inc
loope
pop
cs
jb
xchg
in
fisubrl
mov
mov
icebp
mov
ficoml
into
fidivl
fimull
or
mov
movsl
or
mov
mov
pop
outsb
pop
sbb
addr16
les
decb
out
imul
jg
lods
pusha
push
push
in
sub
jno
mov
loopne
and
pop
xchg
jmp
mov
inc
rorb
sub
xor
nop
dec
jae
jbe
and
xchg
daa
lahf
adc
int3
fsubs
add
loopne
or
pop
repz
lahf
add
jl
leave
or
cmp
adc
sar
and
fcoml
pusha
add
je
sarl
inc
addr16
test
sbb
jle
jle
xor
in
cmpsl
cli
mov
lret
iret
out
jmp
cltd
lods
inc
mov
or
sub
jp
out
in
insl
mov
roll
xor
int
cmp
sub
aad
icebp
aaa
mov
dec
inc
loop
aaa
or
xchg
and
outsb
sbb
mov
mov
jp
xchg
addr16
push
inc
mov
iret
lcall
jne
sub
clc
pop
outsl
or
repnz
adc
cld
out
scas
dec
sub
mov
test
fcoml
pop
dec
movsb
in
mov
inc
xchg
pop
rcrb
ss
cmp
movsb
or
inc
pushl
pop
sahf
add
fsubrs
pop
xor
cld
inc
in
xor
xchg
cmp
mov
sbb
frstor
shlb
pop
add
push
je
sti
pop
enter
sarl
fistps
xchg
or
cmp
mov
stos
pop
adc
lds
lea
inc
cwtl
adcl
pushf
ja
leave
test
test
popf
addb
push
enter
fcmovnu
inc
fstps
xchg
add
mov
add
cwtl
into
or
pop
mov
push
decb
cmp
les
fnstsw
mov
mov
subl
clc
or
inc
ret
ss
xchg
scas
xchg
dec
icebp
imul
sub
mov
mov
enter
dec
ss
or
movb
iret
jl
add
sbb
sbb
xor
nop
jle
inc
xchg
sti
xor
xor
mov
or
js
data16
jmp
inc
inc
mov
sub
push
popf
mov
xchg
sbb
cmp
sahf
mov
or
mov
mov
jno
cmp
pop
cli
add
lock
fimull
fdivs
mov
xchg
sbb
daa
push
sbb
mov
add
pusha
push
and
stos
es
mov
jns
repnz
xor
or
in
scas
in
iret
inc
mov
mov
mov
jns
repz
aam
pop
mov
jns
popa
xchg
sub
pop
inc
adc
adc
mov
inc
es
mov
insl
aas
rorb
loopne
inc
fistpl
jg
mov
outsb
and
mov
cmpsl
sbb
subl
icebp
out
pop
cltd
inc
movsl
shll
mov
int3
enter
add
fsubrl
push
scas
mov
call
sbb
or
loope
mov
cltd
ds
repnz
lcall
push
push
insb
xchg
or
ret
ret
add
int3
shl
mov
jmp
cmp
ja
jbe
mov
loope
std
xor
inc
cmp
mov
pusha
lcallw
into
xchg
mul
adc
lods
inc
push
add
cmpsl
jae
mov
stos
inc
lahf
adc
outsb
mov
outsb
sub
jbe
mov
and
stc
scas
pusha
ss
jae
rcrb
cmp
shlb
js
inc
pop
xchg
pop
pop
or
pop
pop
push
imul
cmp
lret
orb
xchg
jne
and
mov
sahf
scas
jnp
ret
addr16
in
sub
sahf
incb
into
mov
fdivl
stos
test
add
xor
adc
fld1
in
push
add
and
mov
xor
jo
movsb
repz
jne
dec
jle
dec
cwtl
cs
xchg
cmpl
imul
cltd
pop
xor
or
inc
or
mov
lahf
sti
int3
pop
imul
mov
dec
pusha
adc
daa
inc
int
jmp
lods
lea
cmp
mov
and
sbb
test
shlb
es
xor
mov
dec
int3
inc
push
sti
out
jns
xchg
jb
jl
sbb
xchg
jmp
add
mov
xchg
add
adc
out
xchg
out
mov
insb
sub
mov
andb
jmp
in
cmp
insb
cmp
movsb
jae
movsl
negb
dec
mov
insl
push
and
bound
xor
mov
fcoml
or
and
cmp
imul
pop
sbb
ja
mov
clc
pop
adc
aad
mov
xor
and
shrl
or
dec
pop
cli
xchg
bound
clc
loope
add
out
add
add
add
inc
push
pop
fisubrl
shrl
dec
jbe
int3
dec
cmp
dec
cld
movlps
insb
mov
inc
outsb
stos
inc
inc
pop
movsb
outsl
dec
mov
sub
jge
lcall
adc
cmpsl
movsb
add
outsl
mov
and
movsb
mov
mov
sbb
leave
lods
cmpsl
and
add
cltd
ret
push
out
leave
dec
in
pop
jecxz
mov
jle
fstl
push
push
loopne
cmc
push
pop
adc
jo
cmp
push
or
les
pop
pop
lods
push
xor
test
add
imul
pop
xchg
xor
and
push
jo
pop
sub
xor
mov
pop
enter
mov
mov
dec
test
inc
jae
movsb
ljmp
mov
mov
mov
pop
xchg
lods
xchg
xchg
adc
mov
imull
fisttpll
jae
cltd
push
mov
xor
pop
dec
push
xchg
lds
sub
jle
mov
les
loop
ljmp
pop
sub
xor
cli
mov
mull
scas
mov
and
std
in
jo
insl
sub
call
sbb
push
pop
ss
lahf
inc
adc
cld
hlt
sub
push
jp
xorl
js
inc
insl
or
aaa
mov
int
pop
mov
or
clc
insb
dec
mov
and
sbb
inc
and
sbb
xor
dec
sub
mov
xchg
inc
and
mov
iret
lretw
add
add
and
int3
stos
mov
xchg
das
push
push
xchg
sbbb
lea
fs
inc
shll
les
aam
inc
mov
push
adc
mov
in
sub
mov
cmp
arpl
xor
or
pop
dec
jne
pop
popa
aam
xchg
jno
pop
sarl
adc
mov
sbb
pop
fwait
movsl
push
jg
inc
xor
add
arpl
cmp
pop
bound
in
push
or
or
pop
inc
imul
cwtl
dec
push
outsb
cld
call
jecxz
and
cli
insl
out
mov
push
mov
jge
jmp
cmp
ss
iret
insl
popf
psubq
mov
negl
test
xor
outsb
out
inc
mov
out
inc
setle
inc
push
xchg
or
ds
shrb
push
aas
in
push
jbe
dec
mov
scas
sub
push
js
rolb
mov
fs
mov
add
and
cmp
lods
add
idivb
sbb
pop
fcomp
sahf
movsl
pushf
cmp
loop
sub
push
push
push
mov
jg
adc
sub
mov
mov
and
mov
push
or
mov
std
jle
cmp
mov
mov
imulb
cli
adcl
cmp
jp
dec
js
insl
mov
xchg
xchg
mov
jbe
lret
jecxz
std
int3
imul
xchg
push
or
push
pop
sti
in
cs
xchg
pop
or
test
pop
adc
inc
cmpsl
pop
push
lock
sub
pushf
cmp
xchg
xor
xor
mov
ficoms
sbb
adc
je
jg
push
dec
call
or
das
xor
movsl
sbb
int3
or
jno
rolb
cmp
repz
push
lret
add
and
repnz
das
mov
in
sub
lret
popa
scas
shlb
push
scas
mov
adc
mov
lret
lods
out
mov
jne
jnp
int3
mov
mov
mov
jmp
pop
inc
arpl
or
leave
sbb
js
idivb
enter
add
dec
stc
xor
or
imul
pop
mov
ljmp
popf
jo
addb
adc
cmp
push
mov
and
lods
mov
push
imul
into
imul
das
mov
add
stc
mov
and
push
jp
xor
jb
leave
pop
add
enter
jle
mov
in
fisubrl
jmp
xor
fcompl
mov
sahf
adc
mov
aad
pop
fwait
cmpsl
out
mov
and
cmp
add
les
add
mov
cld
fcompl
or
cld
push
jmp
inc
or
mov
push
push
loope
dec
testb
dec
loope
loopne
loope
xchg
js
sub
ffreep
lods
test
call
xchg
push
jmp
mov
stc
adc
mov
push
push
imul
fcompl
fs
xchg
mov
cmp
inc
loopne
nop
cmp
sub
push
mov
xchg
int3
push
xor
xor
or
fistl
fnstcw
scas
incb
sub
dec
scas
sbb
jae
fldcw
jne
arpl
mov
sub
or
xchg
cmpsb
mov
gs
iret
push
xchg
mov
faddl
add
mov
imul
into
xchg
xor
outsb
movsb
adc
test
repnz
sub
fsts
mov
mov
cli
xor
ret
int3
xchg
lods
mov
dec
adc
sahf
jle
clc
mov
inc
xorl
push
sti
fidivs
sub
mov
adc
leave
jae
ret
icebp
sti
imul
fs
loope
sbb
ja
lock
lea
cmp
cmpsb
inc
add
jae
push
cmp
cwtl
pop
leave
jle
movsl
mov
adc
mov
loopne
mov
jecxz
add
fwait
movsl
pop
push
mov
pop
xor
hlt
pop
leave
imul
xor
mov
dec
pop
fistpl
pop
pop
add
dec
repnz
inc
pop
call
mov
nop
div
cltd
sti
int
int
xchg
aam
dec
sub
cmp
pop
cmp
add
insl
stc
leave
jmp
outsl
repnz
fisttpll
push
sub
arpl
out
stc
xchg
mov
mov
das
mov
das
push
or
jl
cmp
imul
loopne
enter
out
push
mov
jae
xchg
loop
sub
in
orb
add
mov
jo
in
add
outsl
mov
mov
pop
fcoml
neg
inc
add
xor
mov
mov
sbb
daa
std
imul
push
and
leave
jbe
pop
cmpsl
xor
dec
fwait
fs
xor
sub
movsl
mov
xor
sarb
es
add
call
andl
push
add
or
cmpsb
mov
in
mov
repnz
aad
sbb
push
xor
push
xchg
add
in
mov
daa
xor
dec
jg
daa
mulb
es
dec
rcrb
daa
decb
mov
cmp
dec
sub
pop
xchg
add
sub
mov
jmp
mov
jbe
inc
notl
clc
cltd
sahf
cltd
dec
movsb
inc
inc
dec
stc
sub
or
repz
mov
add
fists
dec
cs
xchg
or
pop
sub
sbb
add
adc
inc
dec
dec
jecxz
aaa
pushf
push
gs
fs
cmp
cmpsb
shl
push
jmp
lcall
lahf
sarl
insb
int
aam
push
gs
adc
in
adc
lds
test
xchg
or
xor
and
lret
and
add
fcoms
outsb
insl
test
push
mov
cmp
add
jg
lcall
mov
insb
call
sbb
mov
popf
xor
repnz
mov
in
mov
in
inc
or
clc
outsl
jl,pt
sbb
adc
ret
out
xor
mov
sbb
cmp
mov
outsb
aaa
add
adc
mov
xor
adc
mov
popa
lds
dec
mov
xchg
and
daa
mov
cmp
js
xchg
sti
inc
negb
dec
mov
mull
and
inc
cld
push
adc
inc
lods
pop
inc
mov
add
or
pop
sbb
inc
test
mov
lods
sarl
les
jle
xlat
ss
xor
pop
stc
lahf
je
cmp
fldenv
test
xchg
or
inc
fdivp
cmc
rolb
out
sub
outsb
scas
sahf
iret
test
fildl
rcrb
shlb
cs
movsl
mov
mov
shll
inc
std
insl
jae
xor
pop
push
lock
ljmp
fimull
and
jne
sar
add
flds
jno
mov
enter
sti
fptan
outsb
out
les
push
push
inc
jne
sbb
jg
add
sub
push
iret
aad
inc
sbb
jmp
xchg
incb
push
gs
mov
or
sbb
ret
push
inc
xchg
fnstcw
xchg
out
fsubrl
popf
fmuls
fiadds
or
or
in
jle
jle
arpl
shrl
loop
cmpsl
pop
cli
jne
xorl
mov
or
das
mov
pop
in
xorb
xor
dec
movsb
rolb
jns
sub
mov
jnp
push
int3
repz
cli
dec
and
pop
test
cmp
pop
pop
mov
shr
pop
xchg
movsl
pop
dec
movsl
out
pop
cli
dec
mov
cmc
mov
add
sar
inc
inc
mov
dec
sbb
test
cmp
loopne
imul
xor
cmp
jb
xchg
xchg
ljmp
sub
or
push
pop
lods
pop
test
cmp
stos
jmp
fldt
jecxz
outsb
test
add
lret
and
cmp
aaa
mov
hlt
call
hlt
dec
or
mov
inc
jns
push
fcoms
adc
mov
and
mov
icebp
icebp
mov
push
fldt
xor
and
and
bound
sbb
pop
cmp
mov
push
repz
es
rcrl
xchg
mov
dec
loope
jo
ret
jecxz
in
jne
cmpsl
jnp
loope
out
test
leave
jp
or
in
sbb
std
test
mov
subl
mov
imul
cwtl
cmpsl
stos
std
enter
and
and
pop
xchg
push
dec
sub
mov
aaa
or
mov
jp
sub
loopne
out
sub
mov
or
xchg
pop
jmp
inc
ds
push
fimuls
jecxz
fisubrs
lret
mov
or
jb
je
aas
jno
test
js
sbbl
cmpsl
cmpsb
sbb
inc
cltd
mov
sbb
mov
xchg
lods
jl
js
and
sahf
popf
lds
dec
jbe,pt
pop
inc
movsl
pusha
stos
out
ja
push
add
xchg
jmp
stc
jmp
enter
aaa
jnp
psrlw
aaa
mov
ja
out
lods
xchg
int3
jle
or
mov
push
out
loope
fldcw
ret
sbb
cmc
lock
or
aad
and
test
push
cld
loope
cmp
push
or
rcrb
sub
push
adc
out
movb
bnd
aam
mov
jle
ss
cmc
fdivs
or
push
jle
and
jg
push
imul
dec
inc
xchg
imul
xlat
jle
ficomps
xchg
test
ljmp
cmpsb
or
divb
icebp
gs
adc
sub
add
adcl
in
sub
dec
mov
jb
and
and
jmp
jns
lock
push
dec
cmpsl
dec
fiadds
out
popl
in
pop
push
or
loope
cmp
mov
dec
shlb
mov
lods
repz
push
lcall
fcoms
popf
lods
aad
push
dec
inc
xor
xor
in
fwait
test
fldenv
or
cwtl
data16
sub
je
fcmove
pop
and
jmp
sbb
in
lds
mov
arpl
stos
sub
add
jne
jecxz
pop
sub
std
inc
push
call
sbbb
jnp
adc
mov
cs
add
and
andb
cmp
mov
movsb
lods
pop
mov
daa
std
sub
and
dec
mov
mov
insl
loope
inc
xor
or
divl
and
lret
pop
adc
jecxz
sbb
pop
push
mov
les
movsl
mov
fidivs
and
sbb
dec
sbb
pop
insb
xchg
cmp
dec
jmp
xchg
jae
scas
ss
mov
mov
cwtl
mov
cmp
mov
outsl
sbb
lea
adc
pop
mov
dec
push
push
and
test
jnp
or
sub
push
lahf
out
fmul
incl
into
int3
ljmp
test
test
int
clc
pop
xchg
xchg
dec
or
inc
and
pop
std
pop
lret
or
adc
mov
pop
push
lcall
mov
lret
lret
jne
lods
fs
das
xchg
hlt
or
lret
scas
int3
inc
mov
mov
xchg
pop
ret
mov
xor
cld
xchg
js
inc
lds
ja
jmp
pop
stc
clc
aas
mov
inc
and
jmp
cmpsb
add
into
shrl
push
dec
pop
inc
add
add
or
mov
aam
dec
lcall
mov
cmp
in
sub
mov
mov
jne
xor
adc
mov
aaa
push
je
and
cld
cmp
sub
sub
fstps
outsb
addr16
jge
outsb
dec
mov
out
xchg
stc
std
push
ret
insb
inc
repnz
sub
icebp
pop
sti
jl
fdivrl
mov
mov
jne
lds
lahf
adc
addr16
xor
pop
fsubrs
lcall
jmp
fwait
movsl
jae
xor
mov
in
lds
add
xchg
ret
jb
pop
fldl
mov
jbe
jno
jbe
fs
imul
sti
and
jno
and
push
or
jo
adc
jnp
insl
nop
in
ss
cwtl
push
mov
les
imul
push
jo
adc
dec
xorl
fistpll
pop
out
sahf
or
pop
pop
mov
pop
cmp
js
cmpsb
ja
das
cmp
lods
cmp
stc
std
mov
out
xlat
mov
push
mov
cmp
dec
popa
in
lock
out
clc
fld
mov
mov
xchg
xor
push
push
pop
out
stos
cs
aaa
int3
push
lahf
out
xchg
imul
cmp
jne
push
pop
pop
dec
cltd
push
and
je
and
pushf
mov
cmp
and
inc
add
mov
cmp
repz
pusha
aas
das
or
fdivl
push
pop
dec
sub
pop
fcomip
inc
inc
out
jne
sub
lret
adc
or
xchg
sub
push
xor
int3
iret
stc
dec
jp
jg
test
ret
sbb
hlt
ds
cld
push
movsl
push
rclb
data16
imul
test
mov
pop
cs
and
mov
stc
lods
fs
bound
mov
lods
aad
mov
jp
xor
add
sbb
daa
fwait
mov
adc
cld
push
push
or
push
cs
clc
xchg
jo
add
or
xchg
lods
fdivrs
mov
mov
out
fdivrs
xchg
fwait
sbb
fs
repnz
mov
or
xchg
push
cmpl
push
cmp
fdivrs
dec
mov
inc
subb
mov
aam
inc
aam
ds
aam
mov
xchg
fdivs
ret
lock
nop
push
dec
push
push
lcall
push
push
xor
fsubr
cmpsl
lds
pop
stos
push
mov
inc
mulb
pop
pusha
jp
mov
pushf
inc
xchg
jb
mov
fistpll
jl
imul
push
scas
pop
aaa
lret
pop
test
orb
imul
aas
push
mov
int
mov
xlat
xchg
inc
clc
adc
pop
fsub
push
cmp
fmuls
pusha
das
into
shrl
pop
dec
add
aaa
shlb
push
int
loop
lcall
outsl
add
cmpsb
push
or
rcl
jl
xchg
addr16
fdivrl
imulb
mov
pop
lcall
int
sbb
pop
adc
push
in
and
cmp
push
jl
push
stos
xor
dec
cmp
push
jns
cvtpi2ps
cmp
sub
adc
les
dec
stos
add
lock
sub
mov
mov
push
adc
pop
stc
pop
addr16
sub
push
mov
aad
stos
jmp
sti
cld
sbb
cld
subb
or
add
insl
mov
push
loop
repnz
je
push
mov
fidivrl
loope
hlt
inc
lret
mov
loopne
adcl
pusha
in
push
xchg
mov
fnsave
inc
int3
or
adc
out
jle
mov
aaa
cmpl
push
outsl
pop
out
shrb
div
stc
jnp
pop
pop
inc
ja
stos
xor
dec
xchg
loop
mov
add
cmpsl
scas
lock
aas
out
cmp
nop
cmp
sub
push
jo
xchg
xchg
sbb
mov
sbbl
mov
push
mov
mov
sbb
add
movsl
lret
scas
popf
and
add
adc
push
jno
ljmp
stc
das
mov
mov
rcrl
dec
add
mov
cmc
enter
xchg
jmp
push
xchg
jo
addr16
add
sbb
dec
xchg
scas
push
add
ret
stos
mov
in
mov
pop
out
or
cmc
sub
xchg
inc
inc
or
adc
stos
gs
or
mov
dec
xchg
outsb
pop
repz
push
pop
pop
lret
adc
adc
in
push
dec
loopne
adcb
jp
ja
nop
lcall
mov
movsb
sbb
int
jp
inc
add
push
jge
mov
sub
js
xchg
test
enter
dec
loop
xchg
push
ret
pusha
shlb
cltd
shlb
out
adc
xor
fbld
inc
fbld
ss
sbb
shrl
sub
clc
inc
xor
sbb
jecxz
jns
sti
hlt
fwait
pop
pop
xchg
pusha
jp
jle
insb
pop
into
in
mov
popf
pop
adcl
push
cmp
in
int3
aam
sahf
adc
xchg
fdivs
dec
imul
pop
mov
or
dec
call
xchg
aaa
pop
nop
jl
cmp
pusha
push
and
ret
xchg
cmp
or
mov
mov
cli
sbb
in
andb
rclb
jp
cmpsb
push
bound
add
pop
sub
inc
cmp
daa
pop
xor
out
leave
jmp
test
nop
jnp
mov
pusha
adc
pop
bound
add
lds
xor
je
fstpl
pop
stos
ds
dec
add
pusha
stc
fdivl
stc
ret
sub
in
add
popl
movsl
adc
sarl
jo
ljmp
and
push
into
gs
dec
jo
imul
dec
lea
loop
mov
ss
sub
mov
testb
xchg
cmpsl
mov
cwtl
cwtl
outsl
out
sbb
mov
into
xor
push
into
data16
imul
addb
lods
adc
pusha
xor
and
sub
jle
push
add
pop
mov
sbb
mov
push
sbb
mov
sub
pop
dec
push
lds
arpl
xchg
cmpsl
cld
push
dec
aas
in
cmp
dec
out
ds
jne
cmp
sbb
aaa
scas
mov
aas
fdivrl
and
jge
sbb
mov
sub
bound
jbe
in
inc
jge
outsl
jl
lds
pushf
cmp
push
iret
push
std
fyl2xp1
cmpsb
push
or
sbb
in
sbb
xchg
lock
ds
lods
idivl
mov
push
outsb
out
pushf
test
inc
pop
pop
mov
add
int3
inc
inc
ffreep
jecxz
xor
movsb
push
push
sub
aad
push
jb
shl
dec
leave
mov
sbb
push
inc
es
add
jns
in
or
pushw
add
mov
call
dec
push
mov
cmp
xchg
adc
jge
xor
into
cld
shl
out
js
inc
xor
data16
mov
lds
dec
pop
add
dec
mov
ret
sbb
fsts
cmp
inc
mov
dec
repz
mov
pop
dec
stos
iret
and
pop
mov
dec
push
cmpsb
stos
hlt
xchg
push
dec
adc
jnp
daa
jbe
loopne
cmpsl
add
mov
xchg
scas
mov
mov
rorl
cmc
push
dec
stos
pop
sahf
loope
fwait
xchg
popf
jb
scas
mov
jg
sub
sub
das
cmpsl
or
jp
add
mov
mov
sbb
push
outsl
push
mov
bound
xchg
fnstsw
testb
or
lcall
inc
mov
add
sub
sti
enter
xchg
add
mov
mulb
or
mov
mov
lds
fists
mov
cld
aam
leave
push
lret
pop
pop
cmp
decb
cli
scas
dec
jnp
sbb
in
mov
not
test
mov
shrl
out
dec
ds
xchg
loope
xchg
xchg
jl
adc
out
int
and
push
pop
sub
add
mov
and
rolb
sbb
fs
adc
inc
out
xlat
nop
pop
push
pop
clc
add
dec
frstor
xor
jl
pop
mov
clc
notb
movsl
daa
cli
repnz
jl
sub
lret
mov
fdivs
stos
fwait
out
ss
push
dec
jae
mov
mov
push
add
sub
pop
fadds
pop
cmpsl
sub
outsl
in
cmpl
int3
mov
add
dec
insb
pushf
adc
inc
outsb
mov
xchg
adc
je
push
cli
fistpl
das
pop
enter
jb
test
int
rolb
pop
aam
push
mov
test
les
xor
jle
or
or
adc
dec
data16
ja
pop
outsb
out
jne
mov
add
dec
or
sub
pop
enter
test
fildl
sub
rcl
ss
sub
adc
xor
or
sarl
and
jns
jnp
arpl
mul
adc
imul
icebp
and
inc
add
sub
add
add
nop
push
cmpsb
xchg
sub
outsl
fs
ss
pusha
mov
xchg
jbe
repz
inc
stos
repnz
xchg
inc
iret
inc
cmp
cmp
xor
pop
sahf
dec
push
into
adc
sub
rcrb
pop
xor
shll
pop
pop
add
jae
sbbb
and
lds
sbb
lret
in
cmp
and
iret
push
rol
ljmp
fadd
sub
sbb
push
ljmp
das
mov
inc
ds
mov
jae
xchg
test
scas
adc
aam
out
pop
dec
int
sti
ljmp
dec
cmpsb
and
test
les
addr16
punpcklbw
push
dec
insb
push
xchg
fldcw
std
aas
pop
incl
xchg
jmp
std
xor
rorl
jl
aad
aam
iret
or
xor
imul
xor
ljmp
aad
test
idivb
or
sub
jb
cmpsl
sub
leave
jmp
insl
push
jmp
in
push
xor
ret
jmp
jb
xchg
xor
incb
in
data16
sbb
aaa
cmp
sti
enter
pop
sub
stos
pop
inc
lock
scas
xchg
adc
mov
popa
pop
stos
enter
ljmp
xchg
outsl
scas
ds
leave
scas
les
sub
stos
add
leave
push
das
dec
andb
dec
mov
pushw
les
hlt
xchg
cltd
sub
test
imul
addr16
xchg
add
cs
icebp
mov
inc
add
inc
xor
inc
inc
fidivs
mov
adc
cmp
push
fidivrs
jge
data16
notl
or
pop
and
or
xchg
icebp
xchg
cmpsl
or
int3
fwait
shrb
mov
jno
in
in
flds
and
xchg
pop
pop
mov
sbb
jnp
ljmp
rorl
data16
and
jge
sbb
adcb
and
cmp
push
je
daa
pop
repnz
cmp
pop
mov
sbb
in
test
std
sti
mov
push
sti
incl
aad
xchg
mov
test
and
sub
mov
repz
dec
nop
cmc
mov
clc
jmp
add
xlat
fstpl
outsb
cwtl
repz
jns
mov
and
ja
dec
cmc
lea
adc
jmp
je
lock
dec
xor
sub
inc
push
mov
aam
fucom
shlb
pushf
push
sub
lahf
mov
mov
mov
sti
shll
fmull
test
jg
sbb
testb
lds
xchg
mov
jge
getsec
out
add
jae
iret
push
aad
push
insl
cmp
movsl
mov
fdivrp
jne
sbb
call
push
bound
jp
mov
out
dec
out
fucomi
add
or
aad
cmp
jae
dec
mov
ljmp
lock
add
pop
in
hlt
sbb
clc
jno
sub
hlt
dec
sub
loopne
test
dec
lret
cmp
stos
test
ret
aas
pop
jge
movsl
je
sbb
lret
leave
add
jae
dec
jb
movsl
inc
aad
and
andb
mov
jecxz
jp
xchg
add
pop
jo
cwtl
out
and
mov
in
stc
popa
testl
push
mov
or
push
insb
mov
ret
or
sub
movsb
mov
movhlps
pop
ds
test
int3
mov
jno
stc
jb
and
pop
push
lock
dec
loopne
pushl
xchg
outsb
imul
fimull
jns
mov
cmp
inc
ss
mov
in
adc
xchg
xor
xchg
inc
mov
and
mov
shl
adc
int
push
cld
js
pop
cs
test
pop
jle
lahf
or
jmp
push
xchg
xchg
pusha
pop
int3
and
adc
push
iret
xchg
mov
xchg
xchg
bound
scas
popf
sub
cmp
or
dec
xchg
pop
push
test
jge
repnz
aas
inc
adc
dec
pop
mov
fcoms
bound
sbb
push
pushf
fadds
negb
xchg
stos
daa
pop
cmc
adc
in
mov
leave
int3
andl
cltd
mov
mov
mov
dec
push
pusha
and
and
bsr
jmp
cs
insl
lcall
pop
mov
add
mov
rorb
cmpsb
in
xor
add
ret
mov
rcrl
popa
dec
dec
push
jae
jnp
popf
push
mov
jns
les
jmp
jle
rcr
dec
insb
popf
sub
mov
jnp
fisubs
xchg
andl
mov
inc
and
inc
push
mov
xor
cmp
das
dec
xchg
or
sbb
fistps
dec
xchg
pop
ret
iret
xchg
out
cs
mov
aad
sbb
cmp
cmpsb
mov
ficoms
in
mov
call
xchg
icebp
divb
lret
adc
inc
mov
add
subb
xchg
add
insb
mov
idivl
or
fucomp
mov
into
out
gs
and
push
mov
les
push
lahf
ljmp
pop
adc
pop
pop
into
pushf
xlat
int
orb
stos
test
push
cmc
push
and
jnp
jne
mov
cmp
cmp
adc
pop
xor
xor
jl
xor
out
imulb
addr16
or
in
sbb
stc
dec
mov
fwait
rclb
inc
flds
mov
cwtl
push
mov
or
cmp
xorl
xchg
sub
movsl
test
cmc
ret
dec
pop
test
mov
xchg
popl
shrl
mov
loopne
pop
xchg
adc
mov
adcb
daa
xor
xlat
sub
sbb
pop
fmul
incb
test
mov
imul
jnp
cmp
and
push
add
mov
push
arpl
outsb
push
pop
lods
lret
out
jae
adc
mov
out
pop
mov
imul
adc
xchg
jns
pop
flds
and
enter
int
jb
fsubr
jge
add
scas
hlt
push
jne
nop
inc
lds
scas
jnp
repnz
andb
add
sub
fwait
lcall
sub
cmp
call
into
dec
mov
out
stos
push
rcr
inc
aam
imul
jae
bound
je
cmp
lret
inc
mov
push
xor
push
jae
push
jb
lea
sbb
mov
add
mov
push
push
jp
ret
das
movsl
cmp
sti
xor
out
xor
rorl
movsb
cli
xchg
jle
mov
icebp
mov
sub
push
ljmp
addr16
ja
pop
xacquire
out
inc
or
js
jae
mov
cmp
xchg
mov
test
str
mov
nop
cmp
popa
das
add
xor
pop
ror
and
rorl
jmp
fbstp
ss
test
pop
sahf
sub
mov
sub
scas
mov
adc
push
outsb
ror
xor
mov
fnsave
repnz
xchg
popf
sar
cmp
or
xchg
mov
ja
test
aaa
outsb
cmpsb
scas
pop
fdivs
rolb
scas
and
dec
arpl
repnz
push
inc
jg
sbb
mov
bound
jp
scas
xchg
sahf
push
pop
mov
push
hlt
xchg
pop
icebp
mov
clc
push
dec
pop
push
push
pop
sub
ret
lock
xchg
arpl
and
test
pop
or
gs
and
dec
jae
sub
add
and
dec
arpl
ja
decl
xchg
mov
jp
arpl
into
jl
cs
shrl
pop
ljmp
rolb
mov
or
fwait
mov
call
cmp
mov
mov
pop
jo
mov
ja
fstl
xor
cmp
aad
lods
jle
outsb
inc
imul
sub
mov
rcll
fwait
push
ret
push
jne
call
dec
push
cs
xlat
lods
clc
xor
shr
mov
out
leave
int3
mov
ss
xchg
sub
push
std
hlt
xor
or
adc
jb
ljmp
gs
stc
lcall
cmpsb
sbb
cmp
aad
cmp
lock
sbb
outsb
fwait
dec
aam
out
subb
fcmovbe
out
jnp
inc
jmp
sub
imul
sub
jne
lods
push
lds
mov
adc
sti
mov
sbb
dec
or
push
inc
mov
into
mov
inc
loopne
cmp
push
repnz
ret
jge
xchg
sub
pop
xchg
inc
cld
into
mov
fistpl
and
insb
imul
nop
xor
xchg
adc
enter
add
imul
es
cli
cld
adc
adcb
jnp
in
mov
lret
and
aas
xchg
lcall
cli
fisubs
xchg
mov
out
jnp
leave
push
dec
pushf
pop
adc
out
insl
add
in
rclb
pusha
inc
cmp
inc
dec
adcb
pcmpeqd
pop
push
cmpl
ss
mov
scas
inc
inc
in
inc
jmp
push
es
stos
xor
push
es
adc
inc
xor
lcall
and
pushf
sub
xor
ja
ja
mov
lret
xor
adc
bswap
or
pusha
fs
pushf
ret
xchg
add
dec
fsubrl
pop
sbb
xchg
fistps
popa
mov
mov
out
or
shll
pop
mov
out
jb
inc
push
mov
push
or
cmp
and
adc
test
sti
lahf
js
jb
bound
cli
loopne
inc
xor
mov
inc
in
repz
mov
xor
repz
dec
push
xchg
xchg
shrl
call
iret
and
in
dec
je
pop
repz
dec
mov
jae
pop
sub
xchg
adc
xchg
inc
cmc
arpl
xchg
outsb
inc
push
test
sbbl
or
test
add
add
pop
lods
insb
and
js
and
lret
pop
fdivrs
xchg
call
mov
insb
out
jecxz,pn
jae
je
ljmp
dec
lock
lret
jno
xchg
test
bound
sti
xchg
push
mov
jmp
loopne
jae
adc
pextrw
mov
into
jne
cmc
xchg
jbe
add
test
jmp
dec
adc
es
pop
sub
jmp
js
mov
repz
mov
andb
cmpsl
movsl
das
andb
ja
push
cli
xchg
sbb
loope
shlb
jecxz
scas
push
dec
in
push
cmp
incb
lret
inc
sub
mov
orb
movsb
sbb
jle
jle
and
es
fildll
hlt
jb
mov
xor
fstl
jbe
sbb
arpl
fwait
sub
loopne
fsubrs
adc
sub
mov
outsb
arpl
dec
in
xor
push
sbb
enter
test
ds
add
clc
adc
lret
stc
adc
pop
jg
mov
xchg
add
rol
sti
sub
lods
jmp
dec
jp
andb
in
ljmp
push
imul
enter
ret
inc
xor
adc
add
ss
sbb
cmp
push
xor
cltd
xchg
pushl
jbe
inc
daa
bound
dec
iret
or
mov
push
in
jecxz
xchg
mov
mov
jns
test
in
sbb
dec
cmp
lods
pop
cmc
xor
cwtl
aaa
mov
orl
sti
cmpsl
pop
sub
and
repz
addb
xchg
add
mov
mov
mov
sbb
dec
xchg
jle
xchg
pushf
leave
ss
xchg
inc
lea
or
mov
sahf
lods
push
jo
and
int3
push
xchg
loope
aad
sub
outsb
cmp
addr16
fadds
fucom
pushf
outsb
jmp
cmp
mov
outsl
sub
xchg
jg
test
mov
aam
sti
xor
xor
or
xchg
mov
ret
push
outsb
outsl
enter
dec
les
sarb
mov
mov
lret
dec
pop
xor
pop
shr
xchg
out
mov
push
pop
inc
sub
mov
shrb
sub
and
mov
lock
sub
std
sbb
test
lcall
dec
rcrl
inc
mov
mov
test
jae
xchg
ds
push
rcrb
sbb
xchg
push
pop
repz
dec
dec
adc
jno
pop
sub
ljmp
lret
xchg
sbbb
jmp
sub
aas
fwait
mov
fyl2x
or
xchg
sti
or
test
pop
mov
stos
pop
cs
je
loopne
icebp
mov
loop
adc
mov
dec
je
jg
jl
push
hlt
insb
pop
adc
fidivs
ja
push
or
fdivs
mov
cmp
push
sbb
das
call
scas
je
or
shrl
fucom
mov
mov
or
test
push
lods
cmp
aam
sub
push
dec
out
cmp
mov
adc
sahf
test
jne
jp
and
sub
ljmp
outsl
data16
sub
loope
mov
add
mov
call
mov
pop
into
dec
xor
cmpb
mov
xor
add
inc
or
movsl
negb
inc
fwait
sub
mov
leave
fdiv
push
jp
lods
dec
jb
clc
mov
cmpsl
rolb
daa
jmp
movsl
pop
jb
shll
into
lret
out
test
jnp
fistpll
lret
inc
mov
lds
and
ja
sbb
jl
sbb
lods
inc
leave
cli
mov
mov
pop
cmc
fiadds
aas
pop
stos
or
lcall
push
lret
je
adc
jae
mov
out
sarl
sbb
push
aas
xor
pop
sbb
movsb
or
dec
mov
xchg
dec
imul
popa
cmp
ja
dec
xor
loopne
push
cmp
out
inc
sbbb
or
sub
and
xchg
mov
imul
jecxz
mov
stos
sub
movsb
data16
insl
inc
add
mov
pop
and
push
call
xchg
out
push
es
fistl
xchg
das
adc
sub
fucom
mov
fildll
ja
in
mov
xor
jecxz
add
andl
jp
mov
gs
popa
fiaddl
adc
push
adc
push
mov
sbb
inc
imul
push
adc
dec
xchg
cmp
into
mov
gs
xor
dec
out
lods
sub
in
lds
fbld
pop
loopne
add
out
inc
mov
cmp
cltd
inc
sub
cmpsl
mov
ja
cld
dec
cli
adc
movsb
lret
insl
sub
ud0
mov
jb
mov
dec
cmp
push
in
insl
repnz
sbb
cmp
jne
or
sub
imul
cmc
movsl
cs
out
mov
pop
lahf
and
xchg
lret
mov
lret
xchg
bnd
aad
pop
mov
loope
movb
jnp
out
out
add
js
insl
jg
ja
mov
jnp
mov
push
cmp
fistl
dec
jne
mov
fnstenv
pop
fs
jg
add
xchg
sbb
pusha
or
aas
lods
add
lods
sbb
popa
sub
dec
or
pop
xchg
les
aad
rcrb
rcr
aas
loope
dec
mov
mov
sarl
aaa
jl
xor
and
cmp
and
pop
pop
daa
incb
aas
push
leave
cmp
popf
dec
subl
stos
fyl2xp1
mov
cmp
mov
scas
stc
sub
nop
mov
fs
xlat
jno
push
xor
push
int3
xchg
in
push
fabs
test
or
cmp
fwait
xlat
scas
outsb
faddl
lea
xor
add
ss
insl
leave
cmp
adc
ljmp
clc
lahf
fldl
mov
movsl
xchg
jo
addr16
outsb
pop
cwtl
add
sub
sbbl
xor
mov
or
int
imul
pop
dec
nop
loope
and
or
adc
shll
inc
sub
mov
and
mov
loope
push
cld
das
xor
sub
lret
xchg
out
jae
iret
mov
xchg
sub
icebp
inc
insb
outsb
jge
push
sbb
jle
in
and
push
sub
shlb
cltd
popa
push
or
js
fs
cmpsl
push
adc
adc
jmp
insl
cmc
jne
fmull
push
and
xor
clc
aam
mov
fucomp
jb
xor
inc
les
push
insb
mov
cmpsl
xor
push
lret
add
fcompl
jge
lret
pop
inc
bound
mov
xorl
xor
popa
sbb
in
shlb
mov
mov
repz
mov
sar
sub
jb
sub
rcll
or
lahf
jl
push
sub
dec
cmp
pop
sbb
lahf
pop
add
stos
and
mov
and
std
ja
lock
and
sub
jb
popf
fwait
push
std
pop
test
cltd
adcl
dec
cmp
or
fisubrl
jp
sub
inc
sbb
jb
sub
enter
and
xor
jp
pushf
test
add
jae
jmp
add
inc
adc
mov
push
cmp
jne
out
jno
mov
adc
leave
out
in
lcall
fcoms
lods
or
jns
in
pop
lods
pop
insb
stos
cmc
lret
incl
xor
inc
faddl
test
cmpsb
push
push
nop
sbb
imul
lret
in
loop
pop
push
addb
pop
sub
sahf
pop
das
fs
xchg
loop
aad
dec
mov
fs
pushf
sub
cld
andb
lea
adc
mov
int3
arpl
or
popl
mov
inc
lret
pop
test
shl
sub
sbb
stos
stos
xchg
mov
adcl
sub
das
jns
pop
inc
stos
es
mov
push
movsb
out
jne
xorb
insb
dec
loope
out
scas
jne
jns
inc
pop
pusha
cli
out
fldenv
into
mov
mov
inc
xchg
xor
std
fnstenv
test
dec
mov
incb
lret
push
mov
add
vandnps
push
jb
sub
in
test
jecxz
xchg
scas
add
pop
popa
leave
pop
add
es
rcrb
or
inc
das
and
jmp
fwait
mov
xor
pusha
xchg
ds
jmp
dec
pop
cmpl
sub
idivl
or
cmp
jle
int
push
dec
mov
jbe
add
stc
test
frstor
es
js
mov
push
jns
js
add
scas
sub
outsl
scas
inc
inc
push
aaa
dec
aam
dec
xchg
fimuls
lret
cmc
push
test
insl
and
enter
sbb
arpl
mov
jns
popf
mov
scas
pushf
sub
mov
pop
pop
and
and
js
sti
movsl
and
cmp
or
cmp
jl
mov
cmp
lock
ss
arpl
add
in
lds
aad
sub
syscall
cs
or
lods
aad
mov
pusha
or
xchg
sbb
call
push
push
mov
in
mov
in
push
add
mov
pushl
imul
xor
xchg
pop
pop
inc
fidivrs
jl
aas
insl
sbb
xor
insl
sub
add
xor
rcrb
xor
inc
xor
cmp
mov
xchg
fiadds
push
xchg
push
insb
add
dec
int3
push
and
scas
cmp
jmp
subl
inc
mov
xchg
sbb
sbb
jecxz
outsb
or
or
lea
inc
or
inc
mov
mov
and
loop
sub
or
mov
jl
bound
mov
push
jo
repnz
cmp
xor
out
out
mov
div
dec
xor
dec
in
sbb
jmp
pop
push
mov
mov
cmp
inc
mov
stos
mov
mov
mov
leave
adc
outsb
out
xchg
and
js
sbb
pop
popa
lret
test
data16
mov
arpl
hlt
and
pop
shll
ss
lods
lret
repz
inc
mov
mov
dec
push
stos
sti
paddusb
insl
lock
mov
sahf
out
sahf
mov
push
pushf
jnp
adc
data16
adc
mov
insl
sub
jno
xchg
aas
in
hlt
add
push
jmp
jl
dec
jae
mov
mov
pop
mov
dec
adc
imul
mov
push
xchg
negb
adc
lret
mov
ret
mov
lea
movsl
inc
fistpll
roll
push
dec
cmp
adc
and
outsl
jns
or
sub
push
out
inc
mov
dec
dec
add
movb
movsb
mov
xchg
adc
je
add
add
xlat
mov
out
sbb
dec
pop
mov
push
add
cld
inc
xchg
out
mov
fiaddl
cltd
pop
and
out
outsb
in
jae
mov
sbb
ret
ss
pop
add
jecxz
shrb
ljmp
jle
sarb
mov
jp
or
in
adc
dec
jnp
out
or
mov
mov
bound
lock
mul
xorl
mov
pop
pop
xchg
inc
push
mov
inc
popf
pushf
das
xor
stos
adc
or
gs
sahf
lahf
test
add
das
jno
fmul
and
fcomip
xlat
repnz
stos
push
pop
cmp
adc
cmc
cltd
push
jecxz
aas
test
shr
test
mov
or
ret
ja
mov
mov
in
xchg
ret
ret
gs
lret
ja
lret
lock
and
popa
mov
nop
cmp
adc
mov
fnstenv
cltd
clc
lret
mov
das
add
push
lods
gs
scas
push
xchg
jne
fcomp
jle
pop
xor
mov
xor
popa
adcb
push
sbb
push
ljmp
pop
out
push
ret
push
icebp
dec
adc
mov
jo
std
stos
mov
lret
and
sbb
jns
xchg
push
inc
add
inc
pop
clc
mov
mov
mov
xor
or
add
sbb
or
inc
xor
stc
sub
or
int
mov
pop
sbb
and
sub
std
mov
sub
cwtl
add
out
aam
shr
cmc
call
jge
ss
int3
std
cmc
mov
mov
fsubr
push
in
pop
mov
test
mov
stos
xchg
mov
pop
mov
dec
out
xchg
jbe
pop
cmp
xor
mov
push
xchg
mov
mov
iret
int
shl
movsb
lods
pop
loop
cmpsb
inc
pop
add
mov
ss
cs
mov
imul
into
out
dec
movb
data16
cmc
test
sbb
hlt
xchg
push
cwtl
jmp
or
mov
ret
jg
inc
inc
fs
mov
jae,pt
hlt
xchg
inc
pop
add
pop
hlt
enter
sub
out
test
imul
mov
test
loope
pop
mov
cmpsb
lret
popf
sbb
push
inc
ret
nop
inc
test
arpl
xchg
sub
lahf
pop
sbb
or
sti
mov
in
mov
xlat
ret
lods
dec
lcall
aaa
push
sarl
adc
rcrb
jns
jecxz
cs
popf
gs
aad
mov
into
mov
je
cmpsl
sar
adc
xchg
scas
hlt
push
jns
fisttpl
jno
and
sbb
js
sbb
push
push
aaa
xchg
into
xchg
push
ret
sub
leave
mov
loope
xchg
loopne
cmpsl
sub
cmpsl
divl
test
sbb
or
clc
mov
movsl
call
incb
xor
int
pop
sbb
insb
and
push
add
lahf
mov
jg
in
push
pop
ficomps
inc
xor
in
scas
not
popa
lret
mov
pop
lret
call
mov
ds
adc
mov
adc
ds
push
fsubr
mov
in
jg
pusha
not
dec
sar
popf
fisubs
add
mov
mov
adc
and
jae
nop
fimull
addr16
adc
add
repnz
fwait
cld
cli
loop
in
push
jns
mov
mov
xchg
data16
adc
in
mov
nop
pop
outsb
inc
mov
data16
xor
in
pop
mov
out
and
lret
and
arpl
scas
add
hlt
pop
rcrb
push
pop
rep
sar
sub
fs
nop
sub
pop
xor
mov
ljmp
push
mov
leave
les
insl
ds
data16
xchg
jmp
sub
push
jge
or
mov
xchg
orl
jecxz
pop
mov
cmp
add
push
mov
or
std
mov
push
arpl
xor
loop
push
jle
mov
dec
test
jmp
lods
jmp
les
push
int3
lea
push
movsl
stc
jne
dec
sbb
fs
ss
mov
in
or
sar
mov
mov
push
xchg
jmp
jo
cli
andl
lret
mov
std
lret
test
jge
pusha
mov
ss
loopne
mov
jle
ljmp
into
gs
lods
adc
ja
jbe
mov
add
loope
sub
jb
iret
sbb
mov
adc
pop
fstpl
daa
fbstp
sbb
stos
push
mov
insl
in
test
push
and
rcrb
out
out
repnz
and
cld
inc
ljmp
paddb
ficomps
mov
lock
dec
push
or
inc
push
mov
or
or
sbb
test
mov
xor
insl
mov
cli
push
lods
xor
xchg
enter
or
rorb
test
jns
test
call
lds
lds
leave
pop
adc
fiaddl
sub
pop
pop
mov
lock
adc
icebp
dec
lcall
mov
cwtl
rolb
jnp
inc
or
xchg
fistpll
fldl
mov
lds
popf
ds
imul
stos
pop
cmc
es
jmp
into
incl
mov
xchg
cwtl
stos
imul
and
xor
dec
cmp
cmc
movsl
mov
mov
dec
sub
mov
push
test
and
aad
aad
xor
imul
jecxz
call
and
xchg
mov
xchg
push
fs
inc
jno
sbb
fimull
xchg
daa
rcll
sbb
cltd
and
and
add
notl
mov
insl
dec
add
iret
pop
sbb
jno
and
pop
fidivrs
mov
pusha
scas
dec
rorb
lock
leave
ficoms
das
leave
sti
xor
call
roll
out
inc
ret
aaa
repz
aad
adc
dec
jb
imul
in
jmp
sub
inc
pop
sti
sbb
mov
test
inc
lcall
cmp
jecxz
cmp
mov
je
popf
or
jnp
fwait
sbb
jno
fnstcw
xchg
iret
xor
sbb
dec
xor
mov
lea
push
cwtl
xchg
mov
xchg
push
imul
and
fbstp
mov
mov
out
lods
subl
sbb
push
sbb
fidivrl
nop
xor
pop
mov
xchg
roll
movsb
pushf
xor
daa
xchg
loope
adc
cmp
movsl
orb
dec
push
jo
outsl
jmp
movsl
or
sub
sti
xlat
les
addr16
mov
sbb
divl
in
cli
addr16
mov
aad
inc
jns
iret
test
jns
pop
mov
hlt
push
imul
jecxz
das
mov
cwtl
aam
pop
xchg
push
ds
push
addr16
fdivrl
cmp
pop
mov
push
cs
xlat
fmull
sahf
in
mov
mov
or
out
and
daa
push
mov
pop
fisttpl
imul
dec
sbb
add
mov
in
mov
xor
loopne
lahf
addr16
xchg
jb
xchg
push
jecxz
negl
mov
int
inc
mov
xor
call
fsubl
in
mov
and
mov
mov
dec
in
es
jl
sahf
ret
stos
in
xchg
mov
xchg
xor
call
lahf
xchg
xchg
and
cs
ljmp
push
mov
and
out
adc
mov
scas
or
lods
and
push
lcall
adc
int
cwtl
cli
push
cmc
pop
sbb
test
arpl
sub
and
cli
dec
jnp
push
cmpb
cld
pop
aad
iret
pop
adc
cmpsl
add
ror
dec
push
pop
dec
xor
cmp
out
xor
xor
push
push
mov
pop
insl
in
in
jle
cwtl
cmpsb
stc
insb
xchg
add
rcl
cli
pop
jmp
pop
in
sbb
cs
lret
shrb
inc
push
mov
mov
xchg
cld
in
out
mov
cmp
jb
cmpsl
insb
jnp
loop
xchg
bound
cmp
sahf
jle
jl
mov
aad
or
les
pop
or
popa
repnz
cltd
ss
or
mov
push
pop
dec
add
sub
jo
add
xchg
adc
enter
add
test
addr16
cmc
scas
push
imul
push
or
mov
imul
jbe
scas
xchg
pop
xchg
shrl
adc
inc
sub
or
mov
test
hlt
mov
or
inc
iret
sbb
xor
ret
fxch
lods
lahf
pop
xor
fwait
popf
jo
leave
and
or
mov
div
aaa
lcall
daa
jle
sub
fists
push
mov
mov
add
popf
popf
or
rorb
movzbl
jecxz
aam
push
mov
pop
push
mov
out
pop
popf
test
loop
inc
dec
fwait
outsb
and
or
push
mov
push
sahf
lods
push
test
adc
xor
sahf
xor
loope
jno
adc
push
push
jle
inc
sub
dec
pop
in
xchg
hlt
cmp
loopne
cli
add
xor
jecxz
dec
scas
push
cmp
jnp
xchg
fdivrp
xlat
roll
lcall
pop
xor
ds
dec
xor
and
mov
popa
idivl
mov
leave
mov
lock
jo
cmp
cmp
sub
gs
outsl
jl
sub
test
mov
test
inc
pusha
inc
fcomps
lcall
test
lods
push
dec
cmp
cmpsl
sbb
lret
out
aad
adc
aaa
out
inc
and
les
mov
push
and
ljmp
cltd
mov
cmpsl
sbb
xchg
jns
add
adc
cmp
aaa
push
imul
std
rcl
aad
jno
enter
dec
lods
adc
mov
scas
inc
jnp
lods
cmpsb
cmc
inc
iret
pushf
lahf
filds
and
aam
sub
xor
call
in
push
ds
jle
ja
cld
xchg
xor
inc
push
add
xor
loop
clc
pop
scas
fistl
adc
lds
stos
xchg
lcall
loope
outsb
es
dec
lods
inc
add
outsl
push
mov
es
int3
jl
cmp
xor
mov
bound
test
adcl
lods
cmp
into
lods
bound
sub
enter
mov
xchg
bnd
mov
push
ljmp
into
fnstenv
iret
pusha
and
lds
jmp
outsl
daa
in
je
xor
arpl
ljmp
into
cwtl
ret
xor
pop
mov
int
cmp
aaa
xor
add
jle
cwtl
add
inc
addr16
lret
lods
es
jo
mov
les
cs
inc
test
stos
popa
rcr
sbb
cmpb
push
pop
pop
jne
and
aad
pop
loopne,pn
cmp
test
imul
sbb
jae
dec
inc
add
or
cmp
jnp
push
inc
cltd
icebp
push
inc
pop
ljmp
insl
int3
scas
lods
cmp
jecxz
pop
push
or
js
sti
mov
push
cmpsb
inc
add
push
or
adc
sbb
ljmp
loopne
adc
adc
mov
mov
sub
and
inc
cmp
loope
test
or
les
and
stos
mov
xor
imull
mov
jl
mov
stos
add
dec
ret
aad
jo
mov
or
pop
imul
int3
jecxz
test
aaa
inc
popf
aad
mov
sbb
inc
and
mov
fcoms
shlb
lcall
cs
lods
xchg
xchg
lock
mov
inc
inc
push
fwait
jle
outsl
sbb
enter
sub
sti
and
lret
iret
add
sbb
or
les
icebp
int3
into
jge
xchg
fcmovnb
ljmp
sbb
push
mov
mov
fcmovb
pop
adcl
bound
inc
fcomp
add
lock
and
js
push
xor
int
call
add
push
dec
sbb
fwait
add
xchg
rep
adc
lea
mov
cmp
or
pop
loope
pop
call
cmp
notb
int3
jmp
popa
mov
cmp
out
ret
push
add
in
pop
imul
sub
add
fdivrp
dec
xchg
outsl
shll
loopne
aas
adc
adc
faddp
mov
fiadds
xorl
test
in
push
sub
adc
cmpsl
test
lock
xor
xchg
xchg
sbb
cmp
pop
sub
enter
xor
out
jnp
sbb
sbb
rcrb
mov
push
jecxz
lds
sbb
push
or
mov
cmp
mov
pop
add
sub
idivl
or
imul
ss
in
pop
mov
mov
dec
arpl
mov
mov
inc
mov
push
jo
repz
pop
mov
lahf
sbb
insl
fildll
mov
les
cmp
daa
imul
bound
std
nop
mov
jns
inc
cmpsb
or
add
adc
cwtl
xor
sub
adc
jp
xlat
xchg
jmp
rolb
sbb
lahf
push
cmp
sti
bound
ret
mov
jnp
daa
xor
dec
fdivs
dec
push
jne
jne
add
mov
ja
xchg
inc
jnp
fbstp
cmpsl
and
jle
into
cwtl
rcr
xchg
mov
jne
outsb
pop
or
cli
cwtl
inc
xor
pop
inc
popf
inc
fistps
mov
mov
mov
test
call
insl
jge
dec
sub
not
leave
dec
lea
fdivs
jae
xchg
fists
lret
mov
ja
mov
arpl
inc
push
xor
js
jae
es
lea
mov
and
xchg
aam
push
xchg
adc
bound
add
push
mov
push
test
or
cmp
stos
jbe
mov
sti
xor
bnd
jnp
outsl
dec
ret
mov
cmp
clc
dec
mov
mov
sarb
mov
sbb
xlat
lods
mov
fwait
fwait
pop
sahf
mov
das
lock
jno
cmp
data16
jg
nopl
dec
stos
outsl
xor
mov
pop
mov
jmp
and
sub
cld
into
scas
adc
or
push
mov
out
jle
xchg
jno
inc
out
jecxz
sub
ret
push
sbb
dec
mov
push
montmul
cmpsb
inc
insl
add
mov
inc
shlb
cmp
int3
pushf
add
mov
jg
xor
divl
fiadds
jp
xor
daa
popa
mov
ljmp
lret
sbb
cmpsb
lcall
inc
jo
adc
dec
cs
clc
adc
in
into
push
inc
fsubr
cli
lds
daa
out
inc
lods
in
arpl
xor
shlb
lods
stc
xlat
bound
lods
sub
jbe
lret
xchg
adc
inc
push
test
stc
mov
mov
outsl
pop
mov
mov
pop
push
out
add
scas
int
rorb
add
mov
scas
sub
mov
nop
mov
jmp
mov
mov
mov
cwtl
popf
dec
arpl
push
inc
push
les
in
pop
adc
pop
add
mov
sub
sahf
ss
lcall
andl
xchg
fsubrs
jbe
inc
mov
push
frndint
in
insl
cmp
sahf
pusha
js
inc
mov
and
dec
dec
ds
ja
or
jb
repz
call
pushf
push
inc
mov
js
dec
mov
mov
sbb
fcmovu
push
stos
cmpb
jg
iret
popa
cmovo
add
mov
xor
mov
stc
jnp
sahf
sbb
std
movsb
lcall
xchg
mov
cmp
add
sti
xchg
data16
pop
push
imul
or
dec
shufps
mov
ret
xor
add
sbb
jno
inc
cwtl
insb
ror
lods
movsb
mov
pop
adc
inc
sbb
mov
ret
fcoms
xor
inc
inc
inc
or
stos
push
inc
add
jp
cmp
add
into
sbb
mov
lret
rcrb
shr
jnp
push
or
inc
in
inc
fucom
imul
mov
lcall
xor
adc
pop
pop
bound
adc
std
mov
test
fldl
adcl
push
xor
xchg
mov
popa
sahf
push
fwait
xor
fdivl
pop
push
pop
fbstp
cmp
aam
lods
push
data16
cli
jns
jl
mov
jge
cmp
lret
iret
cld
or
xor
jecxz
mov
inc
mov
int
adc
cld
mov
in
or
out
imul
pop
andl
out
and
lods
mov
jle
mov
in
xchg
mov
pop
mov
xchg
les
call
rolb
das
inc
enter
xor
sub
or
jp
pop
imul
sub
vmwrite
dec
or
shll
sbb
xchg
shll
mulb
fimull
pushf
or
in
xchg
or
add
dec
dec
adc
mov
push
test
and
jmp
ljmp
mov
fcompl
fsubl
sbb
jmp
sub
mov
or
xlat
sarl
pop
xchg
fmuls
jbe
hlt
fldenv
jbe
mov
inc
inc
xchg
xchg
xlat
cs
ljmp
add
icebp
filds
in
inc
push
push
or
rcrl
sbb
mov
cmc
andl
out
mov
jo
push
mov
sahf
sub
inc
adc
adc
inc
push
xchg
movsb
dec
xchg
subps
and
pop
jge
dec
xor
mov
push
cwtl
stos
in
cmp
inc
repnz
mov
cwtl
mov
lea
mov
mov
andl
inc
std
sbb
cli
fbld
pop
mov
out
add
pop
push
push
push
cmc
loopne
lret
push
push
sarb
inc
pop
out
out
mov
loop
mov
fnstsw
mov
icebp
int3
ja
mov
inc
mov
cmp
mov
or
sub
cmp
sub
arpl
stos
pop
add
sub
mov
or
testb
test
cmpsb
cmp
jge
cltd
xor
pop
repz
daa
outsb
jle
out
cli
and
fsubl
fstl
sbb
dec
aaa
ret
jecxz
fmul
cmp
icebp
mov
push
inc
push
pop
enter
mov
mov
ss
aaa
movsb
aaa
ficompl
loop
pop
loop
add
mov
aad
ficoms
xor
ret
icebp
jo
xor
js
loopne
pushf
rol
or
mov
mov
mov
pop
cmp
xor
xchg
lahf
pop
dec
test
sbb
je
xchg
mov
push
mov
aaa
pop
lods
addl
xchg
push
or
mov
jl
push
inc
leave
es
jge
repz
loop
dec
add
mov
out
mov
fs
mov
mov
fnsave
dec
add
insb
sbb
ds
jge
lahf
and
cwtl
xor
ret
popa
test
fisubrl
in
sub
push
std
mov
mov
xor
fstl
inc
ret
lahf
adc
cmc
dec
xchg
test
xchg
or
sbb
pop
dec
fisubl
js
add
push
jmp
mov
cwtl
push
lock
imul
mov
ret
pop
xor
pop
and
lcall
and
loopne
cmp
jmp
inc
cmp
hlt
fnstenv
out
jnp
xchg
sbb
xor
push
jge
dec
hlt
leave
jle
pusha
out
jmp
jle
dec
push
xor
popa
inc
fcmovu
cmp
addr16
enter
mov
insl
pushf
addr16
push
jae
rcl
or
add
or
xchg
dec
test
out
inc
sti
movsb
rcrb
mov
orl
adc
cltd
xchg
lcall
mov
and
inc
add
mov
in
mov
mov
xchg
sub
or
adc
addr16
imul
sbb
pop
movsb
popa
repnz
mov
jns
xchg
jae
dec
jnp
jmp
mov
mov
mov
mov
xor
pop
pop
loopne
sub
xor
jle
rcrl
mov
ja
xor
es
mov
repz
pop
and
add
adc
incl
xlat
leave
push
xchg
in
mov
add
add
adc
push
icebp
xchg
sub
leave
popf
jb
or
cmp
lea
mov
outsl
nop
lea
inc
xchg
cmp
mov
out
cwtl
in
ja
fwait
pop
outsb
add
mov
mov
lds
je,pn
mov
mov
fidivrl
sbb
fsubrp
xchg
es
out
jae
mov
mov
shll
mov
cltd
jecxz
sbb
jle
iret
in
mov
cmc
ficoms
jo
sbb
ja
add
jne
into
mov
add
out
mov
loop
gs
xor
ja
cmp
dec
out
push
mov
lods
mov
adc
adc
fwait
sti
jnp
sbbb
js
ds
xchg
mov
pushf
lcall
out
enter
addl
mov
decl
and
insl
xor
adc
and
pop
nop
mov
push
xchg
js
or
and
insb
fucomip
inc
cli
stos
adc
push
xchg
or
pushf
or
dec
mov
jle
insb
bound
xchg
adc
jns
or
fmull
dec
add
xor
inc
xor
fldenv
cmpsb
bnd
mov
aaa
mov
adcb
out
cltd
and
mov
push
js
out
call
or
mov
cmp
js
dec
shlb
mov
les
or
or
repz
fs
jle
cltd
repz
repnz
push
shll
rorw
xor
ficompl
xchg
xor
bswap
jg
mov
inc
or
xor
enter
push
and
sbb
jmp
push
push
and
xchg
push
xchg
dec
dec
sbbl
in
les
scas
rcr
dec
fidivrs
xchg
int
xor
xchg
call
outsl
int
pop
cmp
into
add
dec
sbb
cld
in
inc
sarl
cmpsl
pop
scas
js
cmp
push
lods
fistpl
movsl
or
arpl
faddl
scas
lahf
sub
xchg
sub
xchg
das
bound
add
js
js
lahf
or
cltd
std
or
hlt
jle
inc
jl
jp
mov
mov
aas
pop
inc
dec
pushf
mov
pop
test
fildl
jbe
test
jne
jge
jo
test
cmpsl
xor
test
mov
add
stc
mov
push
int
mov
dec
in
leave
add
loopne
das
inc
js
shr
ftst
or
sarl
push
lret
lods
into
push
pop
sub
test
sub
jle
jae
pop
fnsave
movsb
addl
cmpsl
ljmp
add
insb
and
and
fstl
int3
sub
cmp
stc
cli
int
iret
sub
sub
ss
jne
push
sub
sbb
movsl
ja
pop
hlt
sub
mov
push
cmp
or
or
mov
push
repnz
out
popf
and
push
cmpsl
je
daa
adc
cmp
inc
jmp
incb
pusha
stos
and
jmp
add
cmc
sbb
add
mov
fcomps
stos
in
jb
or
aad
mov
cmpsb
loop
enter
lea
mov
in
jo
xchg
fdivrs
push
or
sti
popf
mov
and
cld
adc
mov
daa
clc
cmc
lds
repnz
push
jno
jns
sub
xchg
mov
add
push
out
sbb
icebp
lahf
ficomps
leave
adc
mov
push
jp
jnp
inc
sarl
jb
bound
dec
bound
jne
dec
repz
or
ret
push
jle
adc
adc
jb
add
push
mov
cmp
pushf
std
push
loope
mov
sti
push
sbb
mov
dec
test
mulb
mov
push
stc
xor
lea
or
clc
lret
pop
adc
mov
outsb
xchg
jl
inc
dec
jl
pop
mov
mov
loope
out
cmp
xlat
jnp
idivl
push
xor
xor
pop
mov
and
filds
cmp
jb
mov
mov
in
xlat
lret
dec
xor
aaa
add
stc
mov
pusha
lds
pushf
cmp
es
xchg
loop
cmp
inc
pop
arpl
dec
cmp
aaa
imull
repnz
mov
sbbl
mov
aam
mov
mov
rcl
iret
pushf
sbb
sar
popa
xor
ds
stos
jne
pusha
ljmp
add
into
mov
mov
push
add
ljmp
adc
enter
and
lcall
inc
fdivrp
add
rep
nop
imul
dec
rclb
jne
push
hlt
lahf
subl
scas
cltd
out
bound
dec
or
arpl
and
or
into
or
add
dec
leave
xchg
mov
xchg
dec
lods
mov
ds
xor
or
addb
call
jge
stos
mov
push
mov
jge
les
mov
pop
popa
add
sti
cmpsl
mov
mov
ficoml
stos
xor
fistl
mov
xchg
mov
xchg
movsb
and
je
cmpsb
insl
daa
xchg
push
pop
mov
add
cmpsb
push
int
push
js
mov
loop
lock
xchg
adc
cmp
or
pusha
mov
jp
mov
mov
das
sub
out
fldcw
repnz
jne
stc
lahf
xor
or
ret
std
in
mull
mov
push
push
dec
repnz
sub
out
insb
or
outsb
xchg
iret
push
push
fnstcw
out
fmull
pop
mov
add
jb
jns
stos
and
xchg
jl
shlb
push
pop
cmpsb
sti
lods
leave
push
fstl
inc
sbb
inc
sbb
out
jp
pop
bswap
ljmp
mov
pusha
inc
sub
mov
lods
pop
rcrl
mov
loope
sbb
pushfw
notb
sub
add
fs
jne
movsbl
mov
rcr
pop
jbe
pop
stc
cld
aad
aas
insl
cmp
in
adc
ja
icebp
les
enter
in
adc
orb
mov
sub
test
scas
sbb
mov
cmc
in
adc
push
xchg
popa
call
movsl
mov
and
and
in
mov
stos
sbb
rorl
push
stos
scas
push
or
xchg
mov
sub
xchg
mov
xor
aad
or
mov
rorb
rcrl
rcrb
lods
mov
mov
mov
and
fnstsw
pop
ja
push
ds
andb
lods
into
xchg
fldt
adc
inc
in
mov
je
aam
sbb
inc
cmc
test
dec
adc
jmp
cmpsb
sub
fldl
pop
xor
hlt
cwtl
popf
add
push
icebp
icebp
mov
call
jmp
call
adc
int3
xor
xor
adc
clc
and
and
fcmovbe
fwait
inc
fsubs
jle
lds
ljmp
xchg
xor
mov
out
outsb
js
push
outsb
and
push
push
jecxz
push
call
dec
out
cs
lret
sbb
xchg
out
cltd
xor
leave
ret
cltd
iret
xchg
shl
leave
pop
aam
mov
inc
push
loop
imul
sysret
sbb
dec
or
push
xchg
aas
fsubrp
ret
push
push
push
jbe
mov
add
test
das
mov
pop
mov
pop
shrb
jb
xor
and
or
outsb
dec
jo
mov
sbb
rcr
cmp
test
push
ja
rorb
test
decl
ljmp
jno
xchg
dec
mov
or
stc
lds
cmp
sbb
pop
andl
cmc
xchg
inc
loope
aaa
pop
pop
rorl
int3
and
mov
cs
cli
sbb
aam
pop
in
adc
dec
push
lcall
mov
push
popf
fmulp
sub
push
adc
inc
lds
xor
dec
in
stc
out
jge
cwtl
sbb
sahf
pusha
sbb
sbb
xchg
imul
inc
xchg
int3
cltd
pop
in
pop
mov
lcall
and
int
mov
push
insl
push
insl
mov
push
xchg
pop
scas
push
or
cmc
and
test
sti
adc
xchg
xchg
aas
nopl
fwait
mul
into
inc
inc
es
into
dec
stos
push
addl
jb
mov
popa
xchg
inc
in
in
ret
push
fstpl
and
out
push
jmp
xchg
stos
adc
addb
std
sub
inc
adc
push
xlat
cli
xchg
mov
sbb
cld
cmp
cmp
inc
inc
xor
pop
in
pop
cmc
xchg
in
ja
lds
jns
outsb
js
mov
adc
imul
mov
adc
aas
ds
ljmp
jo
fs
mov
js
loopne
jg
fcmovne
aas
flds
es
call
stc
enter
jo
repnz
push
inc
jmp
pop
pop
xchg
roll
mov
movsl
movsl
int3
inc
addr16
scas
and
mov
aam
push
jmp
stos
xchg
mov
in
fcompl
xor
dec
in
cmpsl
jmp
inc
outsb
mov
std
leave
bound
xor
test
es
imul
xchg
sub
or
add
dec
cmp
jbe
div
je
lea
fcoms
popf
sub
sbb
or
js
popl
in
in
and
rorb
dec
arpl
add
cli
inc
out
mov
xchg
xor
cmpsl
inc
xchg
jno
js
mov
push
les
imul
fistps
lock
jl
in
or
cmc
fsub
inc
pop
fidivrs
jl
data16
jle
das
ret
dec
cwtl
add
or
nop
adc
cmp
scas
adc
mov
ds
in
and
cmp
cltd
adc
scas
jmp
stc
xor
call
loope
je
jne
out
and
flds
pop
mov
xchg
or
stos
mov
insl
push
call
mov
jo
fcomps
push
scas
jo
lock
dec
push
test
popf
jne
movsb
fsubrs
mov
fdivrl
inc
jecxz
popa
int
pop
outsl
lock
notb
cmpsl
inc
popf
data16
scas
fwait
stos
push
mov
clc
loopne
scas
fcompl
shl
sbbb
lcall
lcall
cmp
and
ds
sbb
cmp
cwtl
or
push
sub
mov
xchg
cmpsb
dec
in
mov
mov
xor
outsb
mov
xchg
push
dec
addr16
mov
shlb
sbbb
imul
loop
jns
mov
mov
mov
xor
add
int3
jae
daa
daa
in
push
inc
std
add
lcall
xor
sub
lret
inc
or
cmc
fidivrl
mov
out
adc
push
jecxz
stc
lcallw
pop
fimuls
fdivs
rorb
out
dec
push
mov
or
jp
fcoml
add
xor
out
adc
jo
pop
cmp
inc
xor
mov
sti
pusha
pop
movsl
cwtl
jecxz
stos
xchg
mov
hlt
jnp
testb
and
mov
imul
popf
cmpsb
pop
lods
or
mov
lods
cmc
jge
push
leave
and
outsl
test
jecxz
and
xchg
scas
jg
dec
and
pop
loopne
cli
daa
pop
inc
xchg
jo
mov
mov
push
xorl
jnp
js
push
in
imul
addr16
sub
das
xor
cmp
xchg
incb
cld
adcl
sub
jns
subb
in
push
dec
iret
mov
movsl
push
sahf
mov
xor
cmp
dec
jl
mov
inc
cmc
jns
int3
dec
lods
out
es
sbb
mov
lcall
aam
cmp
shrb
pusha
fwait
les
or
dec
daa
mov
out
inc
orb
and
inc
lret
mov
lea
adc
mov
mov
leave
je
jle
ja
scas
enter
mov
inc
test
xchg
mov
pop
xor
enter
rcr
jne
and
int3
lods
mov
pop
mov
sbb
inc
mov
add
or
mov
sbb
and
rcrb
daa
mov
imul
jmp
addps
xor
ss
in
jae
stos
inc
ss
xlat
rcrb
mulb
mov
ffree
mov
mov
dec
jne
cmp
mov
dec
push
sbb
sub
xchg
fucomi
fldcw
daa
sub
loope
mov
fists
fidivs
movsl
xchg
sub
pop
aam
pop
push
daa
adc
cmpsl
xor
movsl
test
or
pop
sub
jl
fcmovnu
dec
ficomps
dec
mov
or
iret
adc
dec
insb
lahf
fstps
mov
pop
lret
ss
scas
adc
in
sub
pop
inc
mull
sbb
rol
cmp
out
pushf
shlb
adc
repz
ja
movsb
icebp
mov
add
add
adc
xchg
jp
cmp
push
and
jns
cld
in
mov
xor
rorl
inc
int3
mov
xor
test
cmp
notb
fsqrt
xchg
test
push
adc
jmp
cmp
fnstsw
pop
imul
jnp
push
push
sub
aad
push
loopne
mov
dec
ficompl
mov
addr16
test
and
mov
cltd
sub
ss
pop
cmp
lret
xchg
cmp
jl
enter
xchg
push
imul
jp
cltd
mov
jge
jb
push
push
sbb
mov
mov
inc
dec
inc
jp
cmc
pop
adc
mov
in
sarl
cmpsb
xchg
pop
lock
adc
in
push
nop
fdivs
adc
or
pop
jecxz
or
mov
mov
and
mov
loope
inc
mov
sahf
pop
loop
scas
xor
out
xor
sbb
push
adc
movsl
rcrb
rcrl
or
pop
xchg
and
lea
stos
xchg
out
lds
mov
push
movsl
aas
jmp
ja
push
aas
pop
dec
push
loop
stos
pop
push
push
adc
inc
movsb
xchg
imul
and
push
fwait
int3
xor
xchg
inc
adc
dec
inc
add
xor
sbb
jnp
lea
jecxz
repz
adcl
imul
xor
nop
mov
aaa
rcl
adc
les
fsubr
adc
and
pop
bound
lea
shlb
mov
sarl
je
rol
es
mov
cmpsb
sub
int3
sub
scas
adc
shll
push
or
stos
bnd
in
and
mov
iret
iret
in
cmpb
mov
shlb
stos
out
out
cs
inc
js
jns
je
push
scas
mov
jo
aad
inc
dec
stos
cmp
ret
andb
xor
stos
fwait
pop
leave
jno
push
dec
ret
sub
fiaddl
adc
test
inc
push
and
imul
add
push
cwtl
pop
xchg
addr16
pop
fstl
jg
fstl
push
cmpsb
add
cwtl
call
mov
and
loopne
inc
xlat
xor
dec
or
pop
adc
sub
repnz
pop
addl
fisubrl
or
adc
pop
and
and
sbb
inc
out
adc
add
add
in
push
adcb
mov
ret
in
or
mov
mov
xor
negl
mov
ja
lret
sbb
xchg
adc
cli
fisttpl
subb
xor
mov
outsl
shlb
fcmovu
leave
ds
xchg
inc
mov
cmp
jno
arpl
fsts
cmpsl
jne
mov
mov
std
ret
and
mov
call
pop
iret
xor
dec
mov
cwtl
cli
mov
adc
jg
add
mov
adc
cmpsb
sarb
push
and
jb
test
adc
cmpsb
roll
cmp
adc
dec
in
ficoml
mov
push
jl,pn
adc
pop
adc
aaa
loopne
andl
outsb
shl
xor
icebp
scas
sbb
es
mov
pop
cmp
repnz
je
aaa
aas
loopne
lcall
loope
int
jge
shlb
lret
fwait
in
cld
inc
fadds
js
add
loopne
out
test
sbb
mov
sub
dec
inc
insl
mov
and
movsl
scas
mov
mov
loop
rcrl
inc
push
mov
jo
rol
hlt
test
flds
incl
lret
int
xchg
aam
shlb
inc
adcl
incb
popf
lods
and
xor
lret
std
jo
cmpsb
repz
add
movsl
inc
pop
imul
inc
pop
out
cmpsl
dec
loop
int3
rorl
sbb
ret
pop
inc
mov
sbb
xlat
xor
sub
outsl
notb
push
lock
cmp
pop
xchg
popf
lods
test
negl
xor
mov
or
sbb
cmp
mov
mov
cld
sbb
fidivrs
pop
dec
stc
sahf
add
in
mov
mov
cli
push
mov
rcl
fdivrs
sbb
popa
dec
jp
cli
inc
out
mov
dec
xchg
sbb
add
arpl
loope
ret
in
xchg
mov
jne
dec
das
mov
stc
dec
adc
lcall
pop
loopne
xchg
fisubrl
jne
enter
cmp
mov
mov
xor
out
or
adc
or
push
xor
ret
xchg
xor
call
cmc
ret
xlat
cmc
add
stos
fldcw
jp
pop
xorl
popa
sti
xor
add
cli
jl
xor
jbe
add
ljmp
dec
push
rorl
mov
cmp
inc
ret
iret
ss
jae
ds
clc
repnz
shrb
fmull
jmp
xor
sub
fisttpl
cmp
lahf
mov
addr16
stos
jne
cmp
dec
pop
fisubl
mov
ds
push
dec
test
sbb
insb
inc
sub
mov
outsb
out
jecxz
dec
mov
mov
mov
jl
and
in
in
cmp
subb
cs
daa
jne
pop
lods
enter
cli
test
rcrl
es
jmp
leave
aaa
nop
sbb
add
cwtl
rcrb
fsub
lods
jns
jo
test
movsl
jp
ja
fidivrs
pop
in
ret
sbbb
add
pop
test
xchg
jno
mov
jl
jnp
out
add
cld
xchg
pop
add
stos
xchg
out
push
mov
les
out
mov
into
jb
push
loope
mov
aaa
int3
dec
fprem1
dec
push
out
sti
or
int
mov
xchg
push
xor
or
dec
pop
lock
insb
addr16
in
clc
test
and
dec
out
mov
inc
and
pushf
jb
scas
fwait
push
gs
mulb
push
jle
out
inc
jge
popa
pop
mov
pop
add
sbb
leave
dec
xchg
push
sub
ja
mov
mov
jle,pn
sbb
xor
subb
pushf
mov
hlt
mov
cmc
cmpsb
adc
aad
cld
iret
rep
xor
and
dec
mov
rcl
hlt
dec
std
jge
xchg
in
xor
and
cmp
lock
outsb
int3
ds
cmp
cmp
out
cmp
mov
dec
xchg
push
aad
testl
dec
push
fcmovnb
aad
cmp
mov
inc
bswap
and
repnz
jl
sbb
aam
or
dec
lret
inc
mov
cmc
jg
pop
jb
cld
test
rcrb
movsl
sub
add
out
sbb
push
clc
cmp
jne
int3
dec
adc
pop
dec
pop
cmpsl
imul
cmc
out
ja
ficoms
imul
ret
dec
mov
sbb
sahf
add
xchg
jo
xor
rolb
hlt
jmp
pop
fmuls
call
fwait
pop
adc
push
and
sub
mov
adc
out
shlb
cmpb
inc
mov
imul
test
mov
lods
hlt
imul
or
xlat
aaa
rorl
pop
pushf
cltd
cmp
lock
and
out
out
mov
cli
sbb
jbe
into
out
pop
inc
mov
loop
jns
cmc
xor
pushf
iret
leave
xchg
ja
sbb
or
mov
cmp
push
mov
bound
ret
sahf
cltd
test
mov
pop
push
stos
xor
notb
enter
fsts
xchg
orl
out
in
loop
ret
test
cld
fisubl
mov
stos
bound
in
das
scas
out
sbb
pop
xchg
adc
cmp
imull
testb
arpl
xchg
lcall
add
call
lods
mov
mov
bound
mov
dec
test
inc
or
lods
and
cltd
popa
gs
sbb
inc
in
imul
in
xchg
in
ja
stos
cmp
ljmp
xchg
add
inc
aad
test
mov
fdivs
arpl
jno
repnz
subl
pop
xchg
jae
push
ret
inc
xor
mov
push
hlt
xor
addps
dec
pop
sbb
aam
adc
call
push
clc
cmp
push
roll
and
insl
lret
cmc
fs
sub
adc
mov
push
rolb
jecxz
cli
les
popf
fldenv
pop
pop
sbb
shrb
outsl
outsl
loop
add
faddp
sbb
mov
jecxz
cld
ffreep
sbb
mov
sbb
xchg
mov
push
stos
cmc
jae
aas
xchg
inc
or
adc
jg
push
jmp
repnz
outsb
mov
sahf
dec
mov
in
sbb
push
sbb
dec
inc
push
pop
xchg
ja
mov
stos
inc
mov
push
repnz
inc
xor
movb
jnp
pusha
int3
rcl
or
jae
pop
outsl
aas
push
andb
in
int
ret
and
stos
pusha
push
popf
adcl
int
pop
adc
jg
imul
cld
add
jle
dec
cld
add
mov
inc
iret
xchg
push
push
mov
pusha
cmp
adc
in
popa
in
xchg
loope
sub
jb
daa
repnz
call
cli
or
mov
int3
inc
ss
inc
movsl
arpl
push
sbb
int3
lret
sub
pop
loopne
shl
loop
mov
and
pop
jne
push
sbb
lret
inc
outsl
and
addb
adc
gs
and
sbb
call
shl
xchg
mov
jl
cltd
lock
fwait
xchg
leave
xchg
scas
out
jno
dec
jne
iret
ret
lret
push
sub
jo
fisttpll
xchg
mov
lods
inc
xchg
lret
lret
int
add
mov
stc
fildll
push
mov
mov
cwtl
mov
xchg
out
xchg
ret
inc
mov
cmpsb
out
ljmp
add
inc
mov
dec
repz
push
test
imul
jmp
mov
popa
or
std
sub
rolb
xor
sub
push
enter
mov
dec
xchg
scas
or
stos
aad
xchg
mov
adc
icebp
or
lret
xor
mov
mov
mov
jp
xchg
dec
stc
xchg
fs
jbe
int
and
xor
jb
sbb
xor
sub
mov
cld
popa
fsubl
push
mov
xor
mov
cli
out
xchg
clc
aaa
dec
dec
push
lret
lret
test
std
test
sub
daa
or
push
cmp
jnp
and
icebp
rcl
test
inc
inc
pushf
out
mov
inc
movsb
sahf
push
sti
pop
test
jne
iret
lods
adc
ret
or
repnz
push
jle
aad
sbb
movsb
jno
lods
out
sbb
fdivp
push
cltd
jg
pop
and
mov
cld
lods
and
xor
push
pop
mov
xchg
lods
mov
pusha
loopne
int3
push
adc
data16
pop
mov
mov
mov
adc
inc
push
test
adcb
mov
lock
push
xchg
les
mov
addr16
xor
mov
dec
xor
lods
bound
and
pop
adc
jns
incb
sub
ja
out
pushf
jmp
into
jg
fdivs
lret
push
xchg
pop
movsb
xor
push
mov
pop
jbe
ja
mov
pop
push
xchg
mov
shrd
add
imul
push
cmp
std
rclb
shr
in
jno
sub
add
ret
mov
gs
ret
sbb
dec
rcll
movsb
push
andl
arpl
sbb
inc
enter
add
lds
sub
jle
mov
popf
pop
inc
push
sbb
scas
nop
dec
cld
push
mov
je
insb
stos
inc
bound
pop
ss
xchg
gs
sarb
add
ja
cwtl
xchg
xchg
pop
movsl
movsl
out
push
mov
or
inc
movsl
movsl
jns
inc
pop
sub
out
ss
rclb
sub
lea
jo
mov
or
lock
add
pop
sbb
fadds
cmp
jmp
stc
inc
test
outsl
mov
insb
mov
sarl
int
arpl
add
popf
xchg
adc
jge
fwait
xor
push
cmpsb
xchg
adc
mov
frstor
push
sbb
cwtl
push
std
dec
lea
sub
dec
mov
pop
mov
sahf
pop
arpl
stos
sub
filds
dec
pushl
jo
xchg
inc
data16
xor
imul
xchg
scas
or
sbb
xchg
inc
in
jbe
in
jl
andb
cs
in
mov
mov
inc
jbe
fmul
pop
xor
pop
inc
pusha
loop
ss
inc
add
sahf
orb
cmpb
jle
imul
dec
jne
sbb
lds
in
push
jmp
call
repnz
xchg
xchg
in
scas
adc
imul
in
ljmp
stc
bound
insb
or
pop
xchg
pop
xor
sub
cmp
repnz
aas
mov
icebp
test
jg
scas
cmpsl
xchg
incl
dec
ds
add
fdivrl
dec
xor
loopne
outsl
sti
subb
or
mov
cmpsl
pop
lea
nop
rclb
mov
fchs
cmpsb
mov
dec
jo
or
xchg
gs
xchg
adc
pop
inc
or
mov
lea
orb
call
mov
leave
mov
lds
inc
icebp
ss
test
lock
outsb
sbb
sub
adc
inc
into
add
test
in
cmp
leave
data16
pop
out
cmpsl
fcmovne
mov
add
rcll
xor
test
popa
dec
loopne
dec
frstor
movsl
icebp
xor
xor
outsb
aad
mov
jle
test
mov
daa
or
pop
dec
in
xor
xlat
xor
shll
out
gs
das
mov
mov
das
imul
out
lds
test
xor
int
jno
jb
xchg
or
les
mov
xchg
mov
call
leave
mov
fisubrl
int
or
ret
push
mov
cltd
cmpsl
xor
fistl
fwait
dec
xor
jge
cmp
ret
jae
pop
scas
xlat
mov
inc
data16
shl
xchg
inc
cmpsb
in
jae
jo
ret
cwtl
mov
lcall
in
jmp
sbb
daa
psraw
les
or
xor
insl
outsl
push
jb
mov
mov
adc
sub
sub
sub
push
dec
aad
inc
or
mov
dec
and
loopne
mov
sub
push
lods
lds
cltd
addb
push
mov
loop
push
imul
mov
sub
push
ficoms
push
into
push
mov
bound
test
outsb
fwait
xor
add
fs
or
mov
aas
test
je
ret
int
andb
leave
xchg
and
mov
fdivs
push
add
loop
mov
bound
arpl
cs
ljmp
and
or
xchg
sub
cvtpi2ps
mov
daa
mov
push
call
jbe
cs
stos
scas
push
lcall
pop
xchg
xchg
add
gs
push
fnstenv
inc
dec
jg
inc
inc
cmp
sub
push
push
ficomps
ja
incb
sbb
push
mov
xchg
inc
rcr
jno
push
fisubs
and
xchg
xorl
test
sub
mov
sbb
or
fcoml
aas
cmp
shlb
cmc
mov
adc
and
xchg
push
push
inc
arpl
push
sub
pusha
fisubs
mov
xchg
and
jno
cmovnp
cmc
jge
and
outsl
pushf
sbb
xorl
insb
cmp
and
mov
cmpsl
inc
xor
push
xchg
mov
leave
ret
push
lcall
inc
xchg
or
fistl
int
lds
out
js
aad
call
xchg
call
fwait
mov
mov
lahf
jne
add
mov
pushf
or
lret
jo
xor
jp
mov
aam
push
cltd
xchg
pop
jns
inc
or
mov
pop
xchg
sbb
cltd
mov
es
or
push
mov
cld
fdivl
cmpsl
mov
inc
push
or
xchg
aad
xlat
pop
and
hlt
cltd
gs
les
test
mov
mov
pop
push
adc
je
nop
jg
rclb
shll
addr16
test
jecxz
push
repz
outsl
jl
pop
adc
mov
jge
fisttps
add
mov
popa
dec
repz
sbb
sbb
fldl
jge
jg
lcall
xchg
sarl
xchg
or
fdivr
xor
out
adc
mull
sbb
mov
addr16
sub
insl
addr16
fsub
les
cmp
dec
pop
pop
adc
test
xor
out
hlt
mov
lock
inc
xchg
add
or
stc
cmp
ljmp
push
imul
sbb
adc
jns
adc
mov
aad
push
les
ja
push
cmp
and
addr16
inc
push
sbb
jmp
enter
xchg
cli
lods
and
mov
add
xchg
clc
push
test
nop
sbb
enter
xlat
sarb
ficompl
je
inc
out
adc
dec
imul
mov
test
fildll
mov
pop
jl
pop
add
je
ret
cmpsb
and
lcall
int
mov
ds
mov
ljmp
xor
lret
dec
addr16
xchg
imul
divl
insl
sub
iret
lea
hlt
xchg
push
rolb
mov
ret
sbb
cmp
cld
rcr
outsl
sub
mov
xchg
out
fstps
add
cli
les
pop
repz
lods
xchg
xor
aas
sbb
add
int
lret
in
insl
dec
inc
jge
fstpl
dec
mov
push
pop
cwtl
push
xor
inc
and
adc
bound
sbb
sti
addl
xchg
stc
test
mov
jno
adc
xchg
repz
or
orl
adc
shrl
dec
insb
test
ja
and
push
ds
add
or
test
push
jno
push
rcrl
push
jle
into
xor
push
cmp
and
push
movsl
jo
iret
test
out
bound
xor
repnz
or
in
lods
push
fdivrs
shr
pop
ret
mov
cmp
imul
inc
das
mov
add
sahf
sbb
lahf
pop
or
jmp
jp
mov
pop
jno
js
or
bound
iret
or
mov
imull
add
aam
mov
dec
add
cmp
mov
push
lock
fisubl
mov
out
xor
xchg
cld
adc
adc
test
das
cmc
cs
pusha
sub
enter
shll
xchg
or
or
mov
movsb
sbb
pop
push
xchg
aas
adcl
test
mov
mov
loop
fadd
mov
and
fidivrl
mov
mov
dec
pop
or
sub
test
and
into
mov
or
out
mov
mov
push
je
addb
sub
push
sub
dec
ljmp
dec
popa
sbb
or
in
push
pop
jo
arpl
jp
xchg
inc
stos
add
daa
jnp
cld
fcmovb
int
push
test
ds
and
fmulp
scas
imul
daa
add
in
or
jle
sbb
sbb
scas
fcmovu
lds
inc
pop
pop
lcall
data16
icebp
xor
jno
fisubl
sub
in
jbe
adc
xchg
ljmp
sub
xor
jmp
inc
ficoms
add
stos
xchg
xchg
mov
mov
push
push
sub
iret
xchg
mov
pop
xor
sbb
xchg
pop
xchg
insl
sti
leave
pop
jno
shrb
in
adc
push
orl
jp
shlb
xor
jnp
mov
mov
loop
mov
or
test
mov
in
mov
mov
jns
lret
sub
jnp
mov
cmpsb
jno
push
mov
flds
lods
inc
push
xor
je
rsm
and
sahf
orl
add
aad
xchg
mov
pop
and
xor
add
mov
xor
mov
push
les
loope
fnstcw
not
enter
xlat
loop
sub
notb
add
jne
cmp
dec
out
fimuls
int
dec
mov
adc
pop
mov
in
sub
idivl
sub
fisttpll
jg
out
mov
imul
jle
gs
push
sar
and
out
int3
shlb
nop
pop
xor
xlat
call
pop
jl
sahf
ficompl
push
fisubs
bnd
inc
inc
pop
pop
xchg
add
cmp
inc
les
into
jns
ljmp
movsb
ret
outsb
cmp
imul
das
sti
push
or
mov
rol
mov
sbb
pop
mov
mov
hlt
lcall
sbb
jne
mov
mov
adc
push
gs
ficompl
xchg
adc
ficompl
shl
in
sbb
mov
xor
pop
gs
push
pusha
adc
sub
bound
pusha
inc
outsl
dec
or
xor
movsb
rcr
popa
mov
and
pusha
xchg
and
xchg
pusha
out
jnp
push
faddl
aam
adc
mov
pop
xchg
sbb
outsb
and
scas
xor
je
mov
push
repz
adc
arpl
pusha
fs
idivb
xor
aam
or
stc
lahf
es
dec
adcb
inc
fdivl
es
adc
orl
pop
test
mulb
xchg
movsb
lea
fmuls
jnp
jle
loope,pn
cmp
xchg
adc
int
fidivrl
and
adc
mov
and
lret
xor
xor
jnp
mov
and
divl
and
jne
xchg
cmp
subb
xchg
nop
ja
out
and
shlb
imul
sbb
in
xchg
les
repnz
inc
gs
mov
cmp
mov
xchg
sbb
cmpsl
out
mov
adc
mov
lods
testb
loop
dec
hlt
xchg
out
test
push
inc
mov
jp
movsb
xchg
aam
les
mov
cltd
aas
sbb
test
cmc
lods
push
loope
inc
pusha
arpl
jge
das
addr16
fistps
add
ljmp
repz
cmp
rcrl
and
mov
aas
jmp
jnp
dec
cmp
xchg
outsb
out
fistl
aad
pop
je
inc
repz
jg
subl
pushf
out
dec
cmpsb
roll
jle
iret
xor
jge
push
cli
idivb
xchg
and
adc
inc
lods
daa
mov
lret
lods
mov
adc
push
mov
stc
test
aaa
pop
xchg
xor
xor
push
cmp
loop
cmp
popa
push
xchg
inc
jecxz
cmp
pop
sub
scas
inc
sahf
sub
test
outsb
cmc
push
out
inc
jo
and
fisubs
pop
leave
jle
jbe
fsubr
fcoml
push
ljmp
clc
mov
pop
enter
xchg
clc
fnsave
sub
sbb
xchg
xchg
mov
test
lret
jno
js
insb
mov
outsl
adc
add
sbb
cmp
lret
cmpsb
adc
jecxz
sub
in
cli
mov
cmpsl
pop
fcoml
or
xlat
sbb
mov
stos
or
lret
push
jmp
dec
imul
xor
imul
test
push
pop
sub
out
and
add
push
push
jns
stos
lcall
sub
push
pop
popa
push
or
or
pop
ficompl
lahf
inc
mov
cmp
out
jbe
mov
sub
inc
xor
repz
inc
sub
in
mov
aad
aaa
fcomp
mov
jle
xor
jo
cmp
sarl
mov
aam
sbb
leave
test
and
shll
add
ds
dec
lcall
jae
lea
cmp
loop
mov
mov
es
test
and
std
xor
sub
idivl
shll
mov
cmc
mov
or
out
mov
std
cmp
jmp
cmp
jne
out
fildl
das
jb
shr
aam
push
sub
jbe
push
mov
xor
aad
es
mov
mov
sbb
test
sarb
pop
jns
xor
cmc
inc
xor
xor
std
sub
mov
aam
sti
fld
sub
pop
pop
andb
push
jae
inc
lock
je
mov
daa
gs
in
pop
stos
sub
out
adc
jmp
mov
pushf
icebp
out
and
mov
mov
arpl
lods
loope
xor
loopne
sbb
add
adc
cld
scas
push
das
mov
xchg
in
push
js
in
mov
jo
sbb
pop
call
lahf
shlb
ret
out
jg
mov
xchg
mov
push
cmpsl
mov
adc
add
ret
push
or
pop
lods
pop
sub
movsl
dec
cs
inc
jl
push
xchg
nop
mov
ficompl
loop
add
xchg
movsl
mov
lret
sbb
popf
test
fisubrs
cs
nop
enter
fmul
and
pop
pusha
or
cmpsb
add
dec
pop
in
cli
daa
adc
jne
xchg
sbb
out
cs
pop
jnp
push
mov
xchg
icebp
out
sub
fucomp
add
mov
rclb
fldl
sbb
sbb
mov
xor
mov
inc
out
xchg
scas
or
lcall
test
push
dec
push
lock
push
cmpsb
repz
mov
jae
imul
push
gs
mov
loope
add
and
mov
push
andl
jl
in
lret
int
push
out
enter
xor
push
ljmp
loop
lods
in
fisubs
and
movb
xor
icebp
cmpsb
adc
inc
or
rcr
test
jg
lds
dec
mov
je
into
les
lret
mov
dec
jl
js
test
cwtl
sub
xchg
enter
das
cmpsl
sti
inc
fwait
mov
fwait
and
push
and
jp
inc
xchg
in
scas
out
mov
movsb
mov
in
out
in
repz
daa
push
push
mov
mov
jge
iret
enter
jge
fldcw
add
mov
sub
push
inc
cmp
mov
fstps
fdivl
pop
mov
push
fldcw
pop
sarb
xchg
cltd
icebp
fldenv
adc
mov
inc
jae
sub
cmp
sbb
fcompl
fs
mov
mov
fsubl
jp
sarb
movsb
jns
jecxz
cmp
inc
mov
mov
dec
xchg
jle
int3
ds
imul
xchg
mov
pop
pop
xchg
lds
push
sub
mov
xchg
xchg
lahf
inc
pop
ljmp
out
shrb
sbb
inc
cmpsl
jp
add
jecxz
shlb
cmpsl
mov
mov
clc
jmp
pop
clc
sbb
inc
xchg
push
fldl
repz
inc
gs
xor
mull
mov
negb
jne
repnz
jp
jmp
push
cmp
sub
cmpsb
xor
jne
adc
into
push
in
movsl
add
loopne
push
and
adc
adc
dec
mov
mov
sbb
xchg
add
shlb
out
adc
iret
es
fidivrs
jo
pop
push
fwait
jne
inc
push
lret
popa
je
cld
xor
mov
sti
push
jecxz
sub
rclb
shrb
mov
ficoml
dec
push
fwait
mov
pop
inc
adc
jne
xchg
xlat
dec
roll
in
push
aad
shll
enter
pop
or
rorl
es
xchg
push
aas
pop
movsb
xor
rorl
rolb
fsts
loopne
hlt
ss
out
sbb
pop
lret
push
cmp
jl
in
mov
mov
aad
xor
lods
mov
push
test
push
in
outsb
popa
xchg
dec
xor
ds
mov
xlat
jbe
popf
in
lods
add
data16
sbb
inc
fldcw
mov
in
jno
mull
pop
sub
sbb
ss
or
or
syscall
push
add
add
mov
mov
mov
jle
cmp
dec
les
stos
add
xchg
lret
out
sbbl
fsts
adc
out
mov
test
in
ret
xor
cmpsb
dec
popf
jmp
cmpsb
ljmp
inc
cmpsl
xlat
push
inc
inc
mov
xchg
jl
fnsave
jg
in
mov
lfs
cwtl
add
pop
push
das
mov
fstps
pop
int3
sub
adc
mov
push
inc
dec
xlat
mov
cltd
or
out
sbb
push
jle
inc
sub
sub
cmp
sub
and
in
cmp
xor
into
movsl
xor
enter
sub
mov
and
bt
es
lcall
inc
call
sti
cmp
xchg
or
movsl
push
aaa
popa
push
andl
mov
add
jg
test
jae
sub
sbb
or
int
pop
insl
in
imul
aam
dec
and
lods
ja
mov
pop
cmp
mov
mov
ret
out
sbb
cmp
shrl
sbbl
rcl
cmpsl
cwtl
call
pushf
popa
mov
lahf
adc
jl
sar
dec
mov
xor
fmull
lcall
in
push
sbb
or
xchg
xchg
lods
jp
shl
pop
mov
mov
xchg
pop
push
icebp
dec
leave
pop
push
aad
or
cmp
xchg
xor
insl
lock
lahf
shlb
xor
push
and
add
testl
sub
xlat
jo
xor
xchg
add
int
int
xrelease
sbb
or
mov
outsl
and
lcall
addr16
cs
insb
xchg
in
out
jne
rcr
sbb
xchg
jne
mov
mov
push
jp
pop
dec
scas
das
js
jns
mov
leave
lret
inc
xor
sub
cmp
notb
xchg
pushf
add
mov
dec
pushf
sahf
incl
test
or
imul
je
jp
mov
ljmp
ss
and
int3
push
mov
xchg
sub
inc
dec
loopne
outsl
int3
sbb
pushf
aas
and
test
dec
inc
jl
test
jecxz
cmp
lea
shrb
repnz
jl
enter
leave
inc
sarl
test
fdivs
jmp
mov
push
lock
loopne
shll
mov
pop
test
repz
pop
aam
cli
push
andb
pop
std
call
xor
cltd
xchg
iret
mov
mov
jo
in
pop
pusha
push
pop
dec
lea
out
in
aaa
push
lret
sub
pop
sbb
jb
testl
inc
push
push
loope
mov
fst
fsubr
cmp
adc
rol
fstpl
fdivs
push
fwait
pop
mov
mov
push
mov
inc
and
xor
add
gs
sahf
test
dec
jle
push
in
cmc
sub
imul
out
mov
xor
lock
mov
aam
sub
push
xchg
nop
in
movsl
pop
and
outsb
in
and
mov
mov
xchg
add
xchg
dec
jmp
pop
popf
cmp
pop
addr16
or
and
test
fcomip
mov
dec
xchg
pop
jne
clc
xor
and
and
sub
mov
jnp
push
push
jecxz
jo
cmpl
push
sub
mov
push
daa
stos
rorl
stos
fs
cmpsl
loope
shll
in
add
jge
pushf
push
or
int3
push
push
or
rcrl
pop
adc
or
inc
push
fisubl
sbb
shlb
frstpm(287
mov
and
call
test
sub
fs
mov
scas
scas
mov
mov
scas
xchg
jle
or
jmp
fstl
jns
mov
xor
sbbl
pusha
divb
rcll
pop
sub
dec
movsb
cmpsb
cwtl
cmp
xor
cmp
loopne
pop
sarb
dec
push
jp
dec
js
inc
add
das
jmp
aam
ret
test
pop
mov
ss
ljmp
out
and
test
loope
shrl
mov
rorb
mov
lcall
mov
xchg
addr16
arpl
cmp
ds
push
sub
push
out
or
rorl
adc
push
sub
adc
aaa
push
xchg
movsl
lret
pop
sub
mov
xor
fstps
sbb
mov
cli
add
fcmovbe
add
jb
shlb
pop
jno
mov
mov
mov
int
dec
push
sahf
adc
rcr
pop
in
inc
adc
popf
int3
stos
adc
xchg
jg
mov
test
xor
outsl
test
aad
mov
add
aam
idivl
aaa
rolb
outsl
xchg
sub
repnz
xor
fadd
imul
pcmpeqw
jns
std
cld
test
cli
cmp
jp
std
data16
add
push
sbb
sub
fldl
mov
add
popa
xor
cltd
jecxz
sub
adc
cltd
jmp
je
lcall
les
add
mov
jecxz
sbb
ret
inc
test
push
xor
test
test
adc
cmpsl
movsl
sahf
dec
cwtl
filds
scas
mov
or
inc
add
fwait
movsl
repnz
lds
adc
testb
adc
fimuls
and
movsl
push
dec
jbe
push
xchg
mov
sti
sbb
nop
push
jp
bound
leave
or
or
fdivrl
loope
stos
push
sbb
popa
mov
mov
adc
fnstenv
out
mov
xchg
lahf
pop
in
int3
mov
mov
push
pusha
xchg
aas
aaa
fstl
stos
sbb
cmp
test
fcoml
ja
packssdw
mov
in
mov
xchg
dec
fnstcw
or
mov
xor
out
xor
cld
std
fwait
xchg
and
dec
lahf
cltd
lcall
push
adc
clc
cwtl
outsb
pop
hlt
push
cmp
jnp
test
mov
addb
jne
stc
push
cli
call
int
lret
mov
and
or
cmp
loop
xchg
mov
stos
jmp
nop
or
push
cwtl
cmp
xchg
stos
repz
pop
negl
or
in
xchg
sub
mov
outsl
inc
pop
pop
cs
dec
push
loop
push
test
scas
pop
rcrb
notl
pop
shll
pop
jbe
es
mov
push
jae
mov
loope
cmp
cli
inc
shl
outsl
mov
or
sbb
and
adc
icebp
pop
aaa
sti
nop
sarl
inc
inc
test
or
dec
pop
movsl
lods
cmpsl
sub
push
imul
sarl
mov
inc
dec
lcall
cmpsl
jbe
xchg
mov
les
ja
cmp
data16
pop
loope
mov
mov
scas
pop
cmp
push
sub
push
push
das
mov
pusha
jg
mov
lcall
inc
addr16
aam
divb
push
imul
mov
fiaddl
lock
data16
pop
cwtl
fldcw
pop
and
enter
cmp
enter
stos
iret
test
loope
data16
rcl
xchg
jp
mov
dec
xlat
push
or
scas
pop
dec
sub
pop
mov
cmpsl
adc
das
repz
jae
push
push
pusha
sub
xor
sbb
inc
fistpll
jno
mov
pop
pop
xor
push
outsl
repnz
mov
mov
scas
loope
andl
sub
jb
test
jle
sbb
arpl
int3
cltd
ja
mov
int
pop
data16
mov
sbb
testb
insb
mov
movsb
pop
insl
hlt
mov
add
fisttpll
jg
dec
pop
and
lods
enter
xor
push
adc
push
mov
int
adc
imul
int3
mov
mov
cmpb
push
mov
xchg
push
pop
xchg
mov
in
jmp
push
mov
imul
xor
aas
xchg
rorb
xorl
imul
outsl
jg
loope
shlb
jecxz
sub
cltd
jbe
mov
add
inc
xchg
dec
pop
or
or
jp
and
fucomp
call
insb
in
arpl
fpatan
dec
xor
sbb
add
outsl
test
mov
cli
ror
andb
cmp
in
push
and
add
lds
pop
add
fadd
sbb
daa
adc
fmuls
rcll
jo
mov
mov
inc
arpl
add
leave
sahf
pop
jl
or
lods
jmp
rcl
jl
lcall
dec
dec
adc
jne
jle
or
jecxz
jne
mov
dec
cmp
xor
jge
outsl
call
and
xchg
icebp
mov
andl
add
mov
out
lret
leave
pop
cwtl
fcmovu
mov
add
sbb
adc
pop
xlat
or
popf
sub
fcompl
mov
in
loop
loopne
jecxz
push
repz
xchg
in
inc
test
jae
xorl
ret
ss
push
push
jnp
ja
and
stc
mov
aas
addr16
ss
mov
sahf
imul
in
call
push
fdivr
jns
push
repnz
push
push
push
es
cld
mov
rcrl
pushf
sub
outsl
mov
in
mov
std
pop
sub
jno
je
or
sub
fcmovnu
loope
or
and
push
std
fnstenv
sahf
pushf
movsb
mov
xor
fcoml
and
xchg
in
xchg
fildl
inc
mov
test
and
lahf
jecxz
push
call
jge
leave
out
cmp
int3
sbb
scas
sbb
icebp
negl
add
jle
daa
jg
jecxz
in
sbb
ret
fxch
mov
imul
or
or
jo,pn
dec
scas
stos
sub
aaa
pop
xchg
adc
fs
jle
pushf
fisubrl
sub
push
loop
inc
mov
jb
lods
mov
jne
cli
fbld
or
or
pop
loope
sbb
lret
xor
push
mov
mov
sub
mov
fs
pop
sbb
adc
and
fstpt
pop
pop
fmull
nop
iret
cs
movzbl
add
nop
cmp
add
mov
xor
out
or
in
lret
fimuls
in
jbe
or
fcomps
push
add
sarl
outsb
xchg
push
outsb
stos
jne
repnz
push
mov
mov
add
ud0
sbb
or
jbe
test
mov
pop
movsb
stc
sub
divb
mov
inc
bound
cmp
es
xor
mov
cwtl
sbb
es
inc
xchg
stc
push
call
test
cmp
cmp
cmp
and
inc
lahf
adc
pop
fidivs
int3
push
lret
add
repnz
cmc
sub
or
cs
mov
add
loop
and
stc
loope
jmp
jp
dec
mov
and
xor
mov
sahf
popf
pop
push
imul
ss
jg
mov
mov
cmp
in
loop
sbbl
mov
loopne
mov
xchg
xor
jmp
mov
mov
popf
adc
xor
testl
cltd
cs
inc
and
adc
xchg
sbb
lea
adc
cmp
cltd
addl
add
leave
shll
adc
imul
adc
test
stos
sbb
movsl
jl
sarl
dec
lock
cli
fisttps
sub
test
adc
aaa
insb
test
xchg
movsb
dec
jg
hlt
pop
inc
in
dec
and
cs
ret
push
or
xchg
jb
nop
fstps
jl
shlb
mov
lock
and
lcall
out
popaw
sub
stc
es
sub
dec
cmpl
mov
hlt
mov
inc
cmp
aaa
data16
push
xchg
mov
adc
dec
cld
ss
in
les
scas
xor
lret
hlt
imul
mov
iret
mov
aad
imul
xor
out
in
xchg
fistpl
test
pop
mov
xchg
jg
pop
adc
cli
pop
mov
add
es
popf
enter
ret
pop
aas
sahf
ficomps
inc
loop
inc
cmp
aaa
pushf
inc
sbb
dec
xchg
mov
cmpsb
add
xchg
xor
sub
sbb
push
jp
test
iret
adc
sbb
lock
sub
adc
sub
jmp
add
pop
or
aas
jbe
jne
xchg
pop
loop
ficomps
and
in
jns
push
push
sbb
mov
inc
mov
out
or
inc
nop
fdivr
sub
xchg
aam
mov
push
mov
lret
push
call
jge
in
adcb
test
lahf
jb
sbb
in
adcb
xor
mov
xchg
rcrl
sub
lret
cmp
dec
cmc
stc
push
pop
mov
xor
mov
adc
test
cli
fidivrs
lea
insb
push
or
sub
jae
adc
sbb
inc
jno
sbb
push
mov
cmp
jnp
push
jnp
imul
mov
sub
cmp
fstpl
xor
pop
jge
push
cmc
push
fldenv
cli
push
nop
jp
xchg
add
push
in
jno
add
fdiv
icebp
ficoml
push
mov
and
daa
bound
aad
mov
dec
cli
dec
aad
and
cmp
xchg
les
movsb
add
cld
mov
les
andb
pushf
mov
ret
cmc
mov
loopne
jnp
push
cmp
cmp
sub
ret
ds
cld
mov
mov
sub
test
mov
adc
in
mov
aam
cmpsl
adc
fwait
cltd
enter
mov
repnz
lods
outsb
cltd
cli
adc
insl
push
mov
cs
add
pop
testb
imul
xchg
jbe
lea
jns
add
xor
xchg
jmp
cwtl
stos
std
out
out
ja
fnsave
xchg
cltd
test
add
loop
cmp
xchg
push
fsubp
shrl
xor
das
imul
lods
arpl
push
mov
xchg
sti
push
sti
loop
cmpsb
ljmp
xor
out
clc
cld
xchg
sub
jbe
aam
jecxz
mov
ss
xchg
lds
lahf
mov
add
add
jns
loopne
mov
sub
pop
int3
cmp
mov
daa
push
sarl
inc
daa
leave
and
pop
sbb
jne
cli
mov
in
inc
ficoms
ljmp
nop
lcall
les
cmp
arpl
pop
enter
in
inc
mov
aam
jnp
mov
fstl
mov
cmp
adc
sti
push
jbe
pushf
sub
push
lcall
popf
cmpl
dec
loope
lods
sub
fsubrs
rep
pushf
xchg
inc
stc
mov
dec
std
inc
add
sahf
push
mov
std
jg
shlb
sarb
or
push
pminub
push
pop
xlat
dec
fcomps
jno
or
movsl
push
jb
fisubrl
ffree
in
inc
cmp
mov
lods
mov
pop
push
test
push
out
inc
cmp
ljmp
lods
fldenv
ja,pn
mov
or
test
xor
xchg
add
sahf
cmpsl
mov
adc
jecxz
ret
pop
sbb
jg
sub
cmp
mov
add
mov
scas
out
fimull
lods
lcall
jnp
je
inc
insl
movsb
adc
pop
cmp
or
es
js
ja
test
dec
in
push
test
shrl
adc
ret
ss
adc
sub
mov
iret
in
sub
mov
test
jmp
jecxz
mov
mov
jp
or
fdivr
rorb
pusha
push
pop
or
loope
jmp
push
dec
dec
mov
gs
out
icebp
add
and
jecxz
movsb
pop
mov
aad
cmpsb
push
dec
mov
push
mov
repz
jb
xchg
fwait
insb
push
pusha
jle
and
push
lret
xchg
pop
insb
or
add
mov
enter
or
pushf
jo
out
rclb
push
xor
jbe
inc
xchg
lret
inc
xchg
dec
cmp
ret
adc
mov
orb
fwait
add
std
push
inc
or
pop
int3
xor
in
mov
rcrb
ljmp
cmc
pop
sti
pop
mov
jg
lds
mov
push
pop
std
pop
das
mov
dec
mov
fildl
pop
jnp
fwait
movsb
jle
sbb
sbb
inc
outsb
sbb
stc
bound
push
pop
dec
pop
mov
jne
pop
jnp
inc
sbb
loop,pt
pop
addr16
and
cmp
and
pop
pop
inc
fmull
inc
xorb
and
sbb
inc
xor
subb
into
lock
addr16
xor
and
mov
in
and
xchg
jg
pop
push
outsl
out
mov
aas
jae
adc
dec
lahf
mov
sub
in
inc
imul
aaa
lea
icebp
mov
notl
pop
add
in
hlt
adc
adc
jmp
jp
cmpsb
aad
inc
pop
in
jns
dec
pop
lock
jns
or
xchg
cli
lds
cmp
aad
xchg
mov
jge
aas
sbb
enter
in
xchg
loope
pop
ret
push
mov
pushf
cld
ljmp
and
mov
and
cmp
stos
or
test
cs
xor
andl
mov
popa
pop
jnp
stc
push
fmul
cmc
test
mov
stc
ror
sbb
daa
xor
sbb
or
call
sub
cmp
dec
pop
pop
loope
mov
lea
add
or
xor
int
adc
or
scas
jo
insb
test
and
sbb
cltd
aad
daa
inc
cmp
ljmp
les
fldenv
jne
adc
add
outsl
dec
fxch
enter
inc
rorb
cli
mov
mov
mov
arpl
stc
mov
xor
xchg
dec
sbb
mov
test
dec
cmp
and
pop
scas
insb
sbbl
or
adc
jnp
xor
rcr
push
fstp
xchg
pop
dec
push
jae
sti
cmp
push
movhps
cmp
push
pop
mov
shrl
rcll
je
cmp
pop
out
inc
mov
xor
jmp
clc
adc
adc
pop
aam
jge
pop
ss
sub
sbb
sarb
inc
cmpsb
jae
jl
or
loope
cmc
sub
xor
lret
push
addl
add
rcrl
xor
mov
inc
mov
mov
sub
mov
sbb
inc
cmp
mov
insb
mov
daa
in
ret
icebp
rcll
adc
adc
pop
mov
or
inc
mov
push
pop
inc
inc
jl
mov
jp
pop
xorl
sbb
jg
pop
movb
xorl
inc
lods
rsqrtps
cmp
pop
ja
fwait
cli
stos
cmp
fwait
addr16
inc
add
xchg
sbb
mov
int3
adc
in
dec
dec
add
pop
repz
adc
inc
and
ret
hlt
push
dec
scas
xchg
test
mov
cmp
movsl
rcrb
cwtl
or
insl
pop
test
lcall
das
pusha
mov
ljmp
xchg
nop
aaa
jns
sub
outsb
sti
sub
outsb
jle
pop
bound
mov
into
xchg
or
or
sub
add
pop
stos
stos
insb
lds
jae
mov
pop
daa
mov
xor
and
mov
push
jmp
sahf
rclb
flds
lods
gs
insl
in
xchg
jae
jno
inc
stos
fld
iret
mov
pop
ficompl
shlb
cltd
mov
dec
xlat
jge
rolb
test
and
shlb
gs
inc
adc
scas
adc
stos
adc
fidivs
loope
mov
xorb
insb
lahf
jne
xorl
mov
js
popf
or
add
jmp
cmp
xchg
jns
mov
pop
push
mov
jns
psllq
jge
aas
gs
mov
repz
xor
dec
das
add
xchg
incb
add
ds
push
adc
sub
outsl
je
js
mov
lret
repz
xchg
jmp
push
popa
xor
jmp
mov
out
or
inc
stos
xor
pop
rorb
pop
xchg
adc
imull
aad
dec
mov
mov
sub
enter
and
mov
xchg
insl
out
test
jmp
inc
mov
dec
rclb
mov
dec
fucomi
xor
mov
fsubrp
pop
xchg
insb
push
arpl
cs
xor
int3
pop
or
mov
call
pop
int3
mov
jg
xchg
fidivrs
inc
aas
int
iret
sbb
movsb
mov
les
std
mov
cmp
add
dec
push
sti
mov
movsb
cmp
mov
out
lret
test
mov
mov
ret
mov
jo
mov
xor
mov
ud2
mov
xchg
mov
icebp
pop
js
mov
les
in
pop
cmpsb
mov
ss
outsl
xor
dec
cld
push
jg
mov
out
mov
gs
xchg
pop
repz
mov
mov
loopne
cwtl
notb
dec
test
outsl
or
mov
jmp
shrb
fcmovnbe
sub
inc
ror
mov
cmp
loope
gs
push
xor
cmp
pop
mov
insb
lods
call
jge
mov
mov
xorb
inc
sub
and
xchg
add
jg
lcall
lea
fldt
leave
push
mov
test
scas
out
push
pop
add
lock
cmp
or
sbb
clc
je
push
pop
mov
adc
pop
addr16
aad
cmp
arpl
test
jo
sbb
loop
mov
in
loope
dec
jmp
into
lock
push
insl
jb
inc
sbb
mov
or
nop
dec
les
sbbl
sti
inc
stos
mov
sub
xchg
dec
jns
adc
outsl
jb
imul
test
jecxz
testl
lock
scas
cld
add
pop
mov
xchg
jle
int
btc
enter
mov
imul
shlb
outsb
xlat
hlt
iret
pop
outsl
fisubl
pop
out
adc
lcall
addr16
mov
popf
ret
xor
jb
arpl
test
lcall
pusha
lret
data16
jns
jl
push
dec
inc
xor
mov
pop
sub
jmp
gs
jmp
js
scas
mov
mov
jnp
sub
xchg
xchg
aas
cmp
mov
sysexit
mov
mov
test
cs
xchg
pop
pop
out
mov
ret
scas
push
std
xor
sbb
stos
fimuls
sbb
dec
pop
add
pop
mov
pop
push
mov
mov
insl
mov
jns
adc
push
fmull
sbb
stos
sub
jle
sub
loop
mull
cmp
sbb
push
mov
dec
nop
mov
sbb
sub
push
aaa
inc
cli
cmp
xor
fnop
mov
inc
jecxz
movlps
in
xor
pop
xor
out
dec
mov
stos
outsl
lahf
xchg
mov
sub
add
insl
test
cmp
dec
lcall
push
xchg
bound
repz
add
xor
mov
inc
cmpsl
outsl
cmp
mov
hlt
mov
xor
fnstenv
mov
bound
pop
addr16
sub
out
add
and
pop
push
cmp
and
fwait
scas
dec
gs
lds
cmpb
daa
lahf
jp
shr
cwtl
xchg
jle
adc
ss
leave
jge
fldt
sub
loope
pusha
sub
inc
out
add
leave
push
das
pop
jbe
pop
popf
in
cwtl
cmp
lods
notb
loop
add
insb
sbb
inc
xor
imul
out
out
add
dec
fs
out
sub
lods
pop
mov
sub
int3
imul
jp
or
push
inc
xchg
lods
je
adc
ljmp
ds
addr16
scas
push
mov
jb
js
rclb
daa
pop
gs
adc
aaa
insb
ja
enter
daa
and
jnp
inc
cmp
test
inc
test
push
out
shll
xor
xchg
les
pop
add
mov
adcl
lret
dec
mov
mov
mov
inc
adc
push
addr16
jge
mov
mulb
loop
pop
mov
adc
xor
sbb
popa
and
int3
dec
mov
mov
lret
pop
jmp
push
repz
push
bound
jo
or
loop
and
and
and
dec
repnz
sub
fildll
mov
sbb
push
jl
push
rorl
jge
sbb
cmpsb
inc
jno
fstpt
cmp
movsl
je
fucomip
shlb
dec
loop
or
data16
push
scas
aas
es
je
sub
rclb
mov
int
pushf
mov
popf
dec
cmp
imul
data16
xchg
cmpsl
int
dec
call
ret
sbb
sbb
xchg
imul
sub
pop
xor
dec
arpl
stos
sti
sub
dec
pop
adc
pop
loope
jbe
dec
lock
mov
fldcw
push
xchg
mov
jle
pop
xor
mov
callw
in
ja
push
cmp
out
sarl
add
cmpsl
out
lea
xor
loopne
mov
pushf
adc
aaa
lock
push
inc
mov
aam
movsb
xchg
dec
cmpsl
fwait
pop
xor
outsb
loop
dec
cmp
or
cmpsb
mov
pop
pop
das
mov
popa
xchg
loopne
xchg
andb
data16
inc
fcmovnu
inc
push
or
jecxz
add
mov
mov
lret
xor
push
mul
popf
jmp
jae
mov
push
push
xchg
cmc
jmp
mov
or
je
cmpl
and
and
loope
subb
xchg
sub
xor
jecxz
sahf
jns
fidivrs
jno
das
pop
jae
sbb
daa
adc
mov
pop
push
jle
or
hlt
shlb
adc
popl
inc
sarl
lods
ss
testb
pusha
inc
js
es
adc
enter
pushl
in
push
mov
push
popf
fcomi
cmpsb
sahf
sahf
mov
btc
mov
mov
imul
ljmp
pop
andb
test
test
dec
jb
cmp
push
repz
jno
mov
dec
sbb
push
outsb
addr16
cmpsl
pop
pop
into
adc
add
jge
xchg
loop
lock
lods
mov
imul
push
mov
pop
dec
push
add
add
cmp
jae
or
lret
pop
inc
mov
fisttpll
inc
add
dec
icebp
jo
arpl
cmp
mov
les
outsl
jmp
lea
nop
mov
inc
or
aam
sahf
adc
es
scas
sarl
cmpsb
out
test
jl
cmp
fisubrs
outsb
cwtl
repz
int3
pop
stos
mov
mov
jbe
jecxz
loop
loopne
fsubrp
int3
arpl
testb
hlt
test
or
mov
jg
push
imul
ds
xchg
jmp
es
mov
xor
outsb
jg
mul
inc
inc
mov
shll
jo
add
sti
fs
mov
popf
xor
pop
stos
enter
inc
icebp
cmc
stc
and
shll
add
ja
sub
adc
ss
and
cmpsb
adc
inc
push
std
mov
adc
push
and
adc
lds
pop
push
fwait
jbe
addb
ds
jg
shll
mov
mov
popf
out
xchg
or
fistpl
rclb
mov
pop
ds
inc
add
inc
insb
rorl
inc
ljmp
fstpt
dec
xlat
xor
mov
jl
mov
lods
push
pop
cmp
ss
das
in
adc
aad
ret
and
movsl
add
test
sub
pushf
ret
fsubrl
imul
cli
pop
ds
cmp
in
call
inc
js
pop
loopne
xor
imul
test
and
pop
jbe
xor
gs
pusha
push
stos
lock
mov
add
inc
xor
pop
rcrl
mov
neg
dec
std
sbb
imul
lods
fsubs
pop
push
dec
jb
mov
xchg
lahf
out
pop
xchg
sti
movsl
jns
inc
not
ret
lret
in
push
add
inc
loope
ljmp
sbb
andl
xacquire
inc
jge
decb
xchg
aam
in
xchg
daa
les
pop
test
hlt
xlat
and
rcll
dec
cmpsl
add
inc
out
test
fidivs
xlat
icebp
jne
sbb
fwait
push
clc
xlat
lret
mov
rcll
jmp
xchg
jbe
es
sub
inc
mov
jge
scas
mov
das
mov
mov
dec
mov
imul
cmp
adc
and
pop
shrl
mov
repz
pop
or
in
icebp
fiadds
pop
js
cmpsl
test
sbb
sub
pop
scas
cmp
in
int3
lods
mov
test
cs
cmp
pop
mov
jns
lods
fxch
inc
sbb
cmpsb
ss
pop
dec
jns
ficoms
insl
sub
or
adc
or
push
jmp
adc
mov
add
xchg
out
dec
shlb
mov
inc
jnp
xchg
mov
mov
sti
imul
test
add
and
inc
idivl
push
jnp
movsb
mov
lret
pop
pop
inc
sbb
or
sbb
sbb
and
inc
cmp
call
pop
adc
push
and
pop
andb
popf
pop
jmp
inc
ds
jmp
mov
cmp
daa
push
or
movsl
cmp
cs
or
jae
add
push
sbb
jp
xchg
jle
int
push
add
pop
cmp
inc
insl
es
icebp
insb
mov
dec
xchg
mov
push
imul
rcrb
ljmp
testb
dec
fidivrl
imul
cwtl
pop
and
push
fucomip
decb
fldenv
sbb
xchg
in
imul
gs
sub
sub
push
xchg
fmull
dec
jbe
popf
shl
lahf
insb
cmpsl
push
inc
mov
aaa
xchg
rep
lcall
inc
mov
enter
aam
scas
lds
and
bound
lret
xchg
les
imul
cltd
push
sub
stos
or
mov
mov
mov
and
xchg
sbb
xlat
push
mov
stc
mov
mov
out
dec
lcall
dec
push
inc
sub
xchg
fldcw
push
lcall
xchg
dec
lea
inc
or
test
orb
stos
test
add
stc
jne
mov
or
or
ljmp
mov
std
loopne
xor
sbb
xlat
mov
repz
es
xchg
xor
and
mov
jbe
jle
insl
mov
int
xchg
mov
cs
hlt
pop
jne
popf
xor
call
or
stc
in
add
add
jp
mov
mov
pop
pop
add
push
sbb
add
js
repnz
mov
in
popa
and
push
sbb
orl
jl
sub
shlb
and
push
stos
push
divb
push
jmp
pop
and
test
andl
fstpl
jmp
cmp
adc
nop
fs
add
or
push
sbb
sub
jmp
fldt
andb
ja
pop
mov
stc
addr16
cmp
lret
insl
mov
and
notl
add
adcb
int3
adc
ds
adc
unpcklps
scas
fsubl
insb
dec
and
xor
xchg
clc
fyl2x
test
out
fdivrl
orl
rol
and
ds
negb
add
je
xor
lcall
ret
mov
aam
mov
jb
adc
js
cmc
add
adc
ret
mov
inc
repnz
fwait
cmpsl
imul
xor
push
int
icebp
fwait
pop
adc
ret
mov
js
imul
adc
cld
std
mov
cld
inc
out
xchg
xchg
and
cmp
add
ret
push
fdivrs
add
lock
out
xor
push
repz
fs
mov
in
mov
cmp
xchg
stos
mov
out
xchg
dec
mov
pop
pushf
xor
cmp
andb
dec
nop
addr16
rcrl
in
test
js
inc
addl
lods
jl
stc
xchg
cld
popf
aaa
cmp
push
lods
rcrb
jae
adc
outsl
xchg
sub
movsl
js
xlat
lcall
add
dec
jo
popf
out
jb
fstp
mov
repnz
pop
flds
sti
pop
nop
and
add
daa
paddb
cs
icebp
loope
and
out
mov
xchg
loopne
out
std
cmp
popf
cmp
rcll
out
out
mov
ja
pushl
movsb
mov
adc
fstpl
sarl
rcll
xor
mov
dec
inc
rorl
aaa
fucompp
out
jge
add
stos
dec
and
imul
or
roll
mov
dec
shll
jge
pop
or
in
not
cld
sbb
in
cwtl
add
sarb
pop
rorl
sub
nop
jg
scas
out
shrb
mov
ror
leave
jo
jnp
in
xchg
pop
add
add
push
cmp
mov
popa
or
clc
sbb
lock
dec
enter
rcr
pop
popa
shlb
loopne
sahf
out
mov
stos
cmc
aaa
aad
push
or
popf
pop
fmull
sub
ret
cmpsl
repz
mov
not
cwtl
mov
adc
imul
push
mov
roll
xor
fsubp
push
movsl
gs
out
fcom
pop
lea
insb
roll
sbb
cli
movl
repz
or
cld
int3
xor
gs
dec
out
out
fsubrs
loope
pop
mov
push
sub
jb
inc
sub
movsl
fs
inc
jo
pop
popa
sbb
dec
push
mov
imul
push
sbb
clc
add
add
je
push
call
mov
rcr
cld
pop
mov
mov
jno
jnp
add
lods
xchg
inc
xor
rorb
gs
mov
roll
scas
cld
mov
add
std
sub
cmpb
jns
call
and
xor
xchg
push
cmp
ja
leave
jle
jno
xor
aad
xor
mov
or
int3
lret
xor
ja
fidivl
addr16
jb
inc
mov
divl
mov
loope
cmp
xchg
push
pop
mov
imul
inc
gs
dec
push
out
sub
pop
add
stc
jg
rol
push
xor
iret
or
sbb
sbb
insb
add
lock
imul
and
mov
sbb
aam
imul
cmp
push
jae
arpl
mov
mov
push
loop
sbb
mov
cmp
ret
mov
arpl
test
xor
dec
mov
add
pop
push
lahf
or
push
sbb
jmp
cmp
gs
lret
jp
xchg
mov
jmp
fxch
rcl
sbb
and
jl
lods
jns
cltd
imul
inc
fisubs
int3
sub
ja
stc
mov
mov
cmp
fmulp
loopne
mov
lods
fwait
cld
popa
dec
repz
sub
or
or
into
pop
into
leave
cmpsl
push
mov
cmp
xlat
push
adc
stc
sbb
mov
add
call
imul
push
mov
inc
lods
lcall
shrb
and
mov
aas
decb
lret
mov
cmp
xchg
ja
fwait
daa
dec
mov
gs
xchg
les
pop
inc
dec
dec
outsb
insb
push
xchg
push
out
scas
idivb
fisubrs
ja
lcall
scas
and
ficoms
ret
dec
call
add
int3
mov
in
add
push
imul
mov
scas
adc
subb
stos
rcrb
xchg
shr
pop
or
xor
daa
mov
mov
sbb
cs
push
dec
pop
hlt
inc
cmpsb
loopne
loope
cmpsb
push
daa
add
test
test
addb
fnstenv
or
stos
ja
test
mov
fcompl
orb
loop
cmp
cs
xor
dec
imul
imul
cmp
bound
outsl
in
sbb
jo
rcrb
mov
lods
mov
ss
adcb
popl
mov
gs
adc
popa
jmp
mov
pushf
iret
popl
or
sbb
sbb
jg
es
xchg
cmp
frstor
sbb
cmp
stc
test
aas
sti
loopne
fiadds
jecxz
jns
hlt
xor
push
leave
mov
aaa
inc
hlt
xchg
bound
mov
es
jne
cmc
rcrb
xlat
lret
jno,pn
cli
push
mov
jbe
mov
fdiv
xor
adc
pop
xor
fdiv
shlb
jnp
mov
adc
shlb
xchg
jecxz
cmp
scas
jmp
cs
mov
pop
xchg
push
js
mov
jns
imul
sbbl
in
incl
cmc
rcll
inc
mov
imull
push
jbe
push
mov
lea
sbbb
or
or
adc
pop
adc
repz
stc
sahf
mov
sub
pop
inc
push
dec
out
add
pop
push
cmp
cld
fwait
cmc
cmc
jp
out
xor
outsb
sbb
xor
movsb
xor
jnp
jecxz
inc
or
add
inc
cltd
cmp
mov
dec
push
and
lds
je
jl
fidivs
sub
in
lea
dec
icebp
xor
cmpsb
shlb
test
repnz
xchg
out
das
into
cwtl
sahf
xchg
xchg
icebp
adc
jbe
lods
enter
dec
and
mov
gs
icebp
into
dec
fmull
pop
rorb
push
and
cli
dec
inc
loop
ror
sbb
mov
mov
jl
ret
loopne
pushf
add
andl
out
jno
insb
push
aam
xchg
pop
shlb
push
stos
sub
aaa
pop
jp
int
jle
dec
loopne
mov
xor
mov
mov
stos
push
push
inc
test
adc
xchg
dec
mov
xchg
cli
push
xchg
xchg
pop
mov
in
sbb
xor
fmuls
inc
pop
out
and
xor
loope
inc
les
cltd
cli
sahf
xchg
int3
xchg
xchg
fstpl
and
insl
cltd
or
cmp
mov
mov
popf
pop
bnd
data16
and
jns
and
add
pop
sbb
adc
pop
cmp
cwtl
lods
dec
hlt
inc
push
btc
outsl
push
loope
imul
in
xor
cmpsl
das
iret
jl
fstpt
pop
adc
or
popa
cwtl
mov
sahf
add
insb
test
pop
daa
stos
push
pop
inc
or
mov
pop
cli
imul
ret
repnz
dec
adc
push
and
push
adc
or
cltd
ficoms
jb
push
xchg
jge
fcoml
and
cltd
test
cmp
call
sub
stc
cld
and
jmp
data16
jno
lock
inc
or
and
push
dec
xchg
add
and
test
clc
leave
push
pop
les
fadds
call
pop
movsb
insb
mov
fs
add
jl
stos
ficomps
dec
add
in
cli
sbb
cmp
popa
out
mov
popf
jbe
mov
pushf
sbb
adc
hlt
shrb
fldcw
mov
cs
pop
and
hlt
pop
sub
pop
mov
or
loop
sbb
aad
cmp
pop
or
stos
mov
test
push
sti
xorl
jle
push
cmp
push
dec
jle
loop
lods
inc
jae
mov
push
stc
movsl
adc
push
push
popf
subb
ja
subl
fldt
fsubs
rclb
dec
je
loopne
out
int3
mov
xor
adc
iret
lret
ja
jge
mov
ljmp
fldl
push
jl
test
push
lds
cmp
inc
imul
ss
in
rol
sub
push
mov
dec
sub
pop
in
mov
lods
bound
movsb
mov
mov
sub
push
test
movlps
pop
cmp
jle
inc
add
push
dec
sbb
pop
xchg
daa
push
xlat
mov
jns
pop
xchg
jae
daa
dec
adc
imul
xchg
mov
sub
daa
push
jne
xchg
inc
sub
jno
jne
lock
ss
sahf
xchg
and
dec
test
cmpsl
xorb
sub
mov
ds
or
lsl
shrl
cwtl
xorl
in
lcall
xor
ja
dec
fistl
cmpsl
mov
mov
push
sarb
stos
cmc
jne
sbb
pop
aad
mov
jg
negl
out
mov
inc
mov
mov
mov
gs
cwtl
sarl
jae
inc
pop
je
add
xor
pop
in
fwait
and
or
mov
stc
inc
cmpb
mov
dec
imul
jb
or
lahf
iret
out
sbb
mov
in
sub
outsl
out
cmp
mov
bound
in
xchg
mov
jbe
test
outsb
in
push
imul
in
cmp
in
ds
dec
in
out
arpl
mov
mov
sbb
in
aaa
repz
xchg
cmpl
cmp
jecxz
roll
mov
and
or
mov
jmp
adc
insl
pop
jo
mov
pusha
decb
mov
and
lret
jecxz
lcall
insb
mov
fwait
ljmp
or
jns
add
cmp
jp
inc
push
dec
inc
sbb
daa
mov
loopne
ja
cs
jno
sti
pop
cmp
loopne
lods
das
adc
inc
push
cmpb
dec
dec
adc
inc
arpl
mov
imul
hlt
mov
repz
xor
clc
cmpsb
loopne
or
fwait
xchg
jns
popa
cmpsb
jp
jg
mov
test
out
cmp
loop
lret
add
enter
inc
jecxz
jne
and
outsb
push
fimull
or
mov
test
clc
pop
test
and
dec
xlat
or
mov
dec
in
int
sbb
stos
fcmovnbe
stos
or
mov
add
adc
add
xor
fsubrp
add
std
push
add
push
subl
daa
lock
mov
dec
adc
dec
or
fsubs
sub
sub
enter
cmpsl
inc
add
xchg
stos
in
adc
xorl
dec
sub
mov
jmp
cmovge
out
test
jle
jnp
and
push
jnp
mov
lret
push
lods
call
and
add
shl
js
sbb
fimull
xchg
xchg
cld
and
xchg
call
sub
and
fucomip
inc
movb
nop
jo
mov
pop
js
jmp
push
mov
push
pop
jmp
dec
and
add
dec
jg
push
inc
fnsave
lret
jp
dec
mov
aaa
mov
push
sahf
shlb
sub
cmp
divb
popw
int3
in
cld
test
add
iret
lret
jp
bound
jae
dec
fsubrs
iret
out
pop
je
andl
sub
nop
pop
test
xlat
mov
xor
fucom
mov
insl
mov
decb
xor
xor
stos
jl
inc
jb
jb
mov
fnstcw
ret
jno
xor
fwait
sub
push
lret
xor
pop
pop
push
push
or
lahf
sub
add
sub
mov
adc
xchg
cmp
inc
arpl
mov
dec
fidivrl
mov
add
pop
cmpsb
sub
outsb
jno
int
insb
mov
sub
aas
adcb
sbb
inc
test
popa
lcall
cmpsl
fnclex
shr
inc
jb
testl
aaa
inc
cmp
lret
in
cltd
or
hlt
inc
lret
cmp
jne
adc
cld
in
or
cmp
xchg
xchg
or
xchg
stos
lods
iret
jg
push
xchg
mov
jne
or
mov
mov
mov
ljmp
imul
cmp
testb
xor
lret
adc
in
imul
aas
adc
test
mov
xor
in
add
mov
or
in
cmp
xor
aaa
and
adc
inc
scas
clc
xchg
jg
push
inc
add
fmulp
cmp
mov
jecxz
and
idivb
les
mov
jns
into
mov
cld
aas
in
frstor
xor
in
xchg
jecxz
push
call
or
lahf
fdivl
xchg
bswap
xchg
popa
sbb
int3
xchg
imul
clc
in
mov
add
add
mov
testl
push
mov
fld
cmp
mov
inc
pop
mov
pushf
loope
iret
cld
ds
mov
or
sub
inc
mov
outsl
outsl
push
das
xlat
hlt
lret
xchg
dec
pop
mov
mov
ss
pushf
sub
pop
jle
push
push
iret
mov
ja
into
scas
inc
fld
sbb
notl
sbb
adcl
xchg
lds
pop
pop
mov
mov
add
movsb
test
pop
mov
lock
pop
rorb
sub
cmpsl
aaa
dec
cmpsb
cmpsl
mov
dec
setno
cmp
pop
in
es
in
add
sub
lea
xor
add
xor
bound
sub
push
push
icebp
inc
add
adc
test
cld
push
push
add
ror
push
fs
jg
jmp
pusha
inc
pop
push
shrl
fcoms
rcrb
rol
xlat
loop
inc
dec
cmp
bound
daa
and
mov
outsb
popf
test
pop
sub
inc
jae
xchg
sub
ret
aas
cltd
call
mov
lods
adc
test
xor
xchg
nop
scas
cltd
jle
rcll
ret
inc
scas
test
shlb
mov
and
ljmp
mov
outsb
popa
in
sbb
mov
daa
mov
inc
fisubrl
pop
cmpsl
sarb
jne
call
mov
mov
call
shrl
ds
xchg
nop
decb
jns
mov
mov
sub
mov
sbb
mov
xchg
mov
jge
dec
ret
jp
or
outsl
jae
push
lret
sbb
popa
jae
add
and
xchg
jb
repz
cmpsl
pusha
fidivl
mov
loop
add
outsl
pushw
inc
lock
imulb
stos
inc
mov
jb
mov
jno
inc
add
lods
pop
arpl
pop
outsb
pop
repz
mov
es
rcrl
or
jle
and
push
and
jmp
pop
dec
testl
mov
push
mov
or
jo
cmp
jae
jo
scas
mov
dec
mov
pop
cmp
iret
addr16
push
jno
dec
pop
dec
xchg
sub
arpl
xor
les
divb
inc
xchg
sbb
sbb
scas
lods
pop
jg
pop
mov
jecxz
lea
in
mov
out
enter
popf
jo
and
pop
mov
sub
lock
sbb
hlt
lret
ret
idivb
mov
add
clc
dec
sti
jne
inc
jns
ret
loop
cld
cld
hlt
mov
jnp
cmpsl
std
xchg
aad
int
iret
lret
ret
mov
lret
jecxz
clc
jno
cmpsb
and
adcb
nop
pop
lods
hlt
mov
add
xchg
aaa
mov
stc
mov
fwait
in
xchg
jle
test
pop
daa
push
mov
sbb
inc
inc
fptan
mov
push
lods
xor
sahf
xchg
je
and
aam
mov
scas
mov
xor
cmp
mov
pop
cmp
mov
push
and
sti
and
imul
pop
sbb
jp
pop
bound
push
and
push
shl
std
cmpsb
mov
push
sub
add
mov
mov
movl
out
inc
pop
lret
adc
fcoml
pop
jnp
mov
or
add
and
pop
ficomps
cmp
stos
add
or
mov
cmc
or
push
cmpsb
in
sarb
cs
or
mov
in
pop
aam
pop
mov
jnp
cltd
mov
mov
pop
pop
push
ret
cmp
push
mov
ss
fistps
test
cmpsl
repnz
shlb
bts
js
and
pop
add
gs
mov
ficompl
mov
punpckhbw
mov
jl
hlt
ja
xchg
notb
or
dec
in
aaa
xor
jl
push
mov
out
pop
leave
jmp
dec
inc
in
mov
fsts
mov
out
lea
fucom
lret
je
out
push
dec
sub
arpl
mov
stos
cmc
xchg
xor
outsb
shlb
xchg
mov
sub
and
push
in
push
in
in
jle
aam
adcb
push
fistpll
loopne
xchg
cmc
adc
mov
subb
pop
pop
addb
or
insl
adc
xor
inc
jp
insl
cmp
sub
inc
mov
daa
dec
cs
push
sbb
repz
adc
mov
out
fiaddl
pushf
in
psubsb
and
inc
cmp
adcb
hlt
lcall
dec
add
imul
xor
mov
sbb
movsl
leave
or
push
push
sbb
mov
leave
call
repz
inc
mov
jae
pop
js
cli
mov
ret
dec
lret
dec
sbb
mov
push
adc
clc
xor
pop
daa
loope
xchg
cmp
cmpsl
in
xor
adc
cwtl
or
mov
mov
fcoms
xchg
inc
mov
in
cld
fnstsw
push
pop
cmp
xchg
mov
mov
sub
dec
jns
sub
adc
cmp
inc
je
hlt
scas
inc
push
mov
push
cs
add
mov
hlt
sub
jg
pop
sbb
rol
mov
mov
jge
sbb
push
aad
es
cld
sbb
jl
jle
adc
lds
or
addr16
pop
cld
popa
test
pushf
sub
jecxz
inc
pop
mov
roll
mov
push
jl
cmpsl
mov
and
sub
test
movsl
bound
mov
pusha
and
aam
pop
adc
mov
popf
sub
dec
mov
sbb
push
pop
nop
dec
push
fcom
mov
sbb
sahf
sbb
xchg
loope
xchg
add
xchg
inc
gs
addr16
dec
fwait
call
pop
xchg
jp
bound
popa
ss
mov
int
shll
push
pop
orl
in
mov
sti
or
push
imul
movsb
je
iret
stos
sahf
fwait
sahf
sub
dec
jecxz
es
loope
jle
rolb
adc
bound
pop
les
loop
test
sti
pop
cmp
dec
cmp
cmc
xchg
push
push
fwait
pop
dec
cltd
hlt
shrb
bound
pop
jp
adc
js
xchg
stc
bound
scas
add
dec
divl
bound
jle
xor
fisubl
jge
pop
pop
test
push
fwait
or
enter
shlb
popa
push
cmp
cmpsb
push
dec
push
cwtl
mov
jg
xchg
xchg
mov
insl
ret
sub
testl
xchg
cmp
fxch
cmp
sahf
loopne
or
push
std
push
es
jns
scas
sti
xor
push
cmpsl
and
jnp
ss
mov
sub
leave
repz
rcrb
pop
or
mov
out
insb
add
enter
mov
dec
ss
lcall
push
sbb
lahf
jb
and
or
insb
imul
cli
outsl
inc
mov
inc
xor
fisubl
imul
inc
in
jae
inc
add
fsubp
xchg
xchg
cmpsl
jecxz
call
sarb
leave
cs
or
iret
mov
repnz
xlat
lret
pop
fsubrs
out
and
pushf
jmp
inc
mov
rorl
jns
insl
addr16
aas
mov
int
jl
outsl
mov
cmpb
add
lods
add
jmp
mov
enter
sub
mov
insl
cld
xchg
jg
out
dec
scas
das
mov
decb
mov
repnz
sbb
lods
insl
cmc
fs
jge
in
scas
add
pop
and
dec
mov
adc
dec
push
leave
ljmp
xor
ja
cmp
push
mov
dec
inc
cmp
jne
cmp
fdivl
sbb
jp
ffreep
scas
in
jecxz
mov
mov
add
aad
cmp
mov
mov
push
dec
shl
popa
push
roll
cmp
xor
add
mov
stos
lret
mov
aas
cltd
movsl
cltd
xorb
fldt
rcrl
inc
dec
xchg
aaa
je
push
xchg
leave
test
ret
outsb
ret
mov
fisttpll
jecxz
lods
cmp
pop
notb
pop
adc
pushf
loop
cmp
movsb
and
dec
loopne
jg
add
push
cmp
pop
mov
push
scas
nop
out
mov
imul
xchg
xor
cli
sbb
mov
movsb
mov
dec
or
ja
dec
mov
or
xchg
push
cli
xor
mov
and
or
push
arpl
cmpsl
pop
call
adc
mov
cmp
popf
mov
or
outsl
xor
shr
ret
mov
xchg
sub
push
adc
cmpsl
xor
rclb
movl
dec
sub
scas
fistpll
mov
xor
outsl
and
or
push
icebp
sbb
dec
xor
shll
lock
xchg
pusha
jecxz
pop
cltd
lret
mov
sbb
stos
pusha
lds
mov
std
pop
daa
int
sbb
xchg
pop
xlat
push
loopne
test
xchg
pop
sbb
adc
test
jl
pop
shll
or
jns
pop
mov
mov
pusha
mov
lcall
pusha
inc
jle
mov
in
mov
adcb
data16
in
push
push
and
addl
ljmp
jg
sbb
ja
rcrb
stos
fisubrl
outsl
lret
cmpl
cmpl
dec
pop
mov
and
adc
call
mov
andb
jecxz
inc
daa
mov
push
push
insl
js
sub
bound
mov
push
mov
cltd
mov
mov
pop
inc
cli
or
pop
jmp
nop
cmp
das
sub
push
cmp
adcl
int
dec
xor
cwtl
int
and
popf
jl
inc
cs
dec
insl
test
push
cmpsb
std
pop
cmp
sbb
imul
jbe
movsl
sbb
jo
ljmp
fdivl
pop
sbb
sub
mov
xchg
and
push
cs
int3
addr16
mov
test
xchg
xchg
nop
jno
loope
imul
sub
fnstenv
std
nop
aam
dec
adc
fildl
loopne
and
in
push
lahf
loopne
xchg
sbb
mov
xor
inc
inc
or
mov
ret
dec
test
mov
pushl
movsb
call
jno
pusha
insl
push
cltd
mov
imul
js
sbb
xor
xor
cltd
mov
xor
jo
cmp
js
cmp
or
aas
push
rcrl
pop
pop
mov
add
ret
mov
ss
mov
nop
dec
in
daa
jg
outsb
fsubr
inc
pop
push
cmc
inc
fisttpl
cli
test
sub
mov
add
push
sbb
adc
adc
inc
xor
sbb
push
test
inc
mov
cmp
jae
scas
int
jl
push
mov
mov
movsl
movl
scas
mov
pop
dec
jmp
ret
mov
in
das
call
and
addr16
fwait
sahf
add
lret
sarl
push
jo
xor
fimull
mov
and
icebp
ja
xor
inc
xor
inc
sbb
call
sub
cli
jg
in
lret
mov
insb
sbb
inc
cmp
stos
cwtl
dec
fs
sti
and
jnp
push
sbb
rcr
lock
jb
sarl
frstor
sti
insl
cld
popa
subl
sub
aas
ja
or
sbb
pushf
sbb
dec
mov
sub
lds
inc
pop
arpl
test
fdiv
adc
jl
adc
xor
pop
shrb
in
xchg
xor
mov
sub
push
enter
inc
mov
repnz
test
xor
jl
test
sbb
leave
jbe
clc
out
cmpsl
test
sbb
out
mov
mov
push
lcall
and
sub
pop
ret
inc
popf
out
sbb
aaa
sti
jno
mov
vmovapd
jmp
clc
sub
cld
es
pop
push
mov
xchg
pop
pushf
mov
pop
xlat
std
mov
pop
mov
mov
mov
push
test
mov
pop
push
scas
into
arpl
add
addr16
add
mov
mov
cmp
ret
stos
decl
clc
cmp
sub
mov
lds
mulb
scas
movsb
pop
xlat
fisttpl
mov
push
pop
loope
mov
sbb
mov
mov
pop
inc
pop
dec
or
int3
xchg
arpl
dec
inc
jae
cld
cmpsb
dec
aad
lea
and
sti
pushf
jo
jg
mov
jae
andb
lahf
add
push
adc
sbb
jb
mov
xorl
xor
jns
out
push
mov
xor
js
cmpsl
mov
push
and
xchg
int3
clc
mov
dec
sbb
ja
int
enter
mov
adc
mov
in
adc
xor
mov
out
push
in
mov
sarl
push
mov
xchg
cmp
mov
and
xor
add
in
or
sub
sbb
ss
scas
jmp
and
rclb
je
push
xlat
dec
mov
pop
in
lods
jae
mov
xchg
or
xchg
xchg
push
push
mov
inc
enter
jne
jg
xor
cmp
sahf
mov
sbb
jmp
xor
fdivs
cmp
rol
cmpsl
stc
stos
and
jnp
into
adc
add
or
xor
bound
fistpl
cmpsl
or
movsb
scas
pop
jno
call
xor
rolb
mov
mov
popa
in
jo
mov
inc
push
repnz
aas
mov
and
sbb
xchg
adc
mov
fwait
outsb
iret
sub
mov
sub
inc
out
pop
roll
out
mov
mov
cltd
mov
push
cmp
arpl
sub
cmp
fbld
sub
arpl
dec
xchg
sahf
fsubl
cld
jmp
das
mov
xchg
xchg
inc
push
fwait
sbb
nop
mov
shl
into
adc
inc
mov
rorb
aaa
cmp
inc
rcrb
mov
xor
push
je
xor
jecxz
in
les
mov
addb
or
cmp
push
sub
int3
pop
jl
scas
shll
stos
xor
add
mov
sub
shrl
subb
dec
cmpsl
rclb
inc
clc
out
mov
pop
stos
mov
out
inc
sahf
mov
jp
mov
call
push
mov
xor
sbb
jno
fstl
aad
jg
mov
jecxz
or
out
fsubr
orb
xchg
jg
faddl
pop
aam
sahf
mov
addr16
ds
repz
lret
inc
and
into
pop
popa
pop
sahf
mov
in
popa
enter
sbb
mov
jle
sub
clc
jbe
pop
mov
or
loopne
hlt
inc
fsubs
jg
jnp
scas
out
xor
cmp
loope
and
mov
and
push
pop
mov
stc
pop
mov
call
rorl
xchg
test
push
pusha
subb
cld
ja
xor
pop
icebp
js
and
sub
repnz
and
sbb
mov
leave
adc
hlt
jle
mov
cmp
push
in
out
lea
xor
mov
js
inc
sub
stos
xchg
mov
int
jecxz
cmp
mov
adcb
xor
out
dec
sbb
dec
imul
shrb
aad
test
dec
and
sub
sarl
push
sub
dec
popa
lcall
in
xchg
push
lods
jnp
cmp
loope
nop
fldenv
sahf
gs
lods
arpl
and
sbbl
xor
or
data16
mov
adc
mov
mov
call
xchg
pop
xor
scas
ret
mov
fidivrl
inc
lods
push
das
inc
jmp
leave
inc
push
jge
shll
mov
add
fs
fisttpll
addb
fs
mov
push
decb
pop
nop
push
add
mov
cmp
fstps
mov
fstpl
jo
fcmovnb
mov
inc
aas
jae
or
js
int3
cmp
popa
ja
pop
std
xlat
fwait
xor
es
inc
sahf
shl
xor
pop
mov
pop
cld
les
popf
and
xor
cmp
sti
lcall
push
xor
stc
imul
jne
mov
pop
je
xor
in
adcb
pop
loopne
out
cmpsl
xchg
mov
addb
cwtl
test
xor
sub
aad
ficoms
ret
push
add
mov
ljmp
push
popa
and
pop
aam
faddl
out
push
fmull
insb
adcl
pop
and
mov
pop
dec
movsl
push
jle
mov
xor
dec
fwait
push
mov
push
mov
xor
loop
pop
jb
adc
dec
and
jmp
incl
movsb
inc
inc
dec
fwait
sub
dec
lahf
xchg
xchg
mov
pop
rorl
inc
jmp
mov
adc
push
int3
fidivl
imul
push
mov
mov
and
xor
mov
fiadds
pop
test
and
sarl
push
repnz
fldcw
push
arpl
push
cmpsb
mov
dec
aad
mov
stc
xor
xor
scas
xchg
loopne
bound
push
lea
and
dec
incb
jge
dec
cmp
mov
sbb
les
jns
jp
aad
mov
or
xlat
jl
outsl
jnp
imul
iret
test
es
add
cmc
mov
shll
pop
mov
sub
inc
jge
xorl
and
pop
ljmp
stos
cmp
lea
ss
jl
enter
fildl
addl
insb
and
inc
subl
loopne
push
xchg
add
mov
ret
pushf
xlat
test
push
jp
adcl
jae
pop
enter
xor
and
in
pop
fcomps
lods
gs
stc
lret
adc
addr16
pop
out
insb
movsb
aas
jg
add
jb
je
push
dec
adc
inc
cltd
adc
arpl
sub
outsl
xor
imul
icebp
cmp
xlat
fbstp
sbb
fisubs
cld
inc
inc
jns
and
xchg
stos
popa
sub
leave
cmp
sbb
add
and
dec
cltd
std
lods
jnp
lret
leave
loop
inc
ret
push
lcall
mov
mov
jmp
sbb
roll
stc
out
cmp
dec
jns
movsl
int
and
movsl
pop
rep
cli
lea
cmpsb
push
push
out
cs
insl
pop
add
push
daa
xor
adc
inc
imulb
js
fdiv
mov
call
outsb
dec
call
test
dec
inc
fsubl
or
inc
inc
repz
inc
or
mov
outsl
or
mov
lea
test
and
cwtl
sahf
std
add
ss
out
xchg
mov
std
cld
mov
pmaddwd
ljmp
add
xchg
ds
xchg
test
adc
loopne
inc
pop
sbb
inc
dec
mov
cwtl
mov
out
fincstp
sbb
sub
inc
mov
jp
in
sub
adc
imul
xchg
gs
jne
imul
jne
cmp
and
in
fisttpl
inc
jnp
aas
push
dec
pop
sub
fmull
pop
mov
fimuls
movsb
icebp
inc
mov
inc
mov
sbb
gs
mov
pop
cvtps2pd
push
sub
adc
ds
dec
call
mov
dec
hlt
movsl
hlt
fxch
ja
je
dec
pop
nop
xor
fstpt
fiaddl
and
xor
lea
test
lret
scas
mov
or
inc
xchg
jne
lcall
push
lret
loop
pop
add
loopne
push
inc
stc
bnd
sub
jmp
lcall
sbb
push
inc
cmp
push
or
cmc
mov
mov
enter
mov
sahf
loop
inc
mov
jne
pop
or
cmpsl
xor
scas
iret
pop
fmull
ss
lock
pop
sub
xorl
imul
mov
jbe
sub
inc
mov
mov
or
in
add
jg
bound
inc
push
sbb
test
jb
ret
add
xor
jnp
xlat
inc
push
shrl
xor
loop
not
push
test
add
lock
pop
push
jecxz
stos
inc
lret
in
outsb
sbb
sub
rol
sbb
cmp
push
out
adc
push
fwait
xchg
inc
jle
push
inc
shr
aam
xchg
lcall
mov
xor
jmp
sub
fwait
dec
adc
mov
icebp
xchg
lret
ljmp
fsubl
adc
push
jg
rorl
inc
divl
lcall
add
mov
in
lea
adc
cmp
dec
lret
push
or
arpl
pop
jecxz
adc
je
mov
out
add
in
pop
ds
cmp
xor
leave
pop
xchg
xchg
stc
sbb
dec
aas
cmp
mov
shrl
clc
mov
mov
inc
mov
incl
and
adc
pop
mov
stos
int
jnp
jle
std
mov
cmc
mov
and
aam
gs
mov
sahf
out
cwtl
lea
jns
lock
ss
jmp
aam
cmp
setae
jl
scas
and
xchg
lret
das
xor
ja
lahf
mov
pop
out
iret
lret
call
adc
test
fwait
mov
pushf
lahf
cwtl
daa
cmpsl
mov
in
aas
push
or
lcall
repz
mov
adc
popa
repnz
push
movsb
sbb
mov
xchg
pop
repz
lret
cmc
lea
or
mov
das
mov
lea
fstps
movq
inc
jns
adc
jl
mov
dec
adc
insl
fwait
dec
pop
daa
dec
jb
push
jl
xor
jmp
push
mov
aas
sub
ja
mov
cld
inc
xchg
rorl
inc
mov
mov
inc
sbb
aam
fidivl
mov
sti
push
and
jno
sbb
push
rclb
add
push
add
jbe
sub
ficompl
pushf
jno
shll
outsl
lea
inc
out
mov
notl
or
shl
xor
adc
sub
add
jns
adc
imul
jl
push
xchg
or
das
popf
loop
mov
bound
mov
mov
mov
scas
mov
lock
add
dec
hlt
test
fsubrs
mov
mov
cmp
xor
in
pop
pop
imul
negb
jmp
sbb
fdivl
mov
adc
aad
fs
push
mov
xor
aam
mov
lock
lret
jge
push
cmpsl
jecxz
xchg
sbb
jl
xor
cmp
mov
hlt
dec
loope
ret
lods
ficompl
dec
mov
inc
rclb
mov
bound
inc
sub
daa
lahf
arpl
loope
push
or
sub
rcr
int
add
cmp
pop
les
popa
stc
adc
xchg
notl
xchg
or
mov
pop
test
or
adc
xor
loope
aad
inc
shl
ja
jns
jb
push
push
adc
cmpsb
or
push
inc
ds
test
ret
fists
xchg
jmp
mov
jg
jmp
rcrb
inc
pusha
mov
shlb
cmpsl
mov
leave
sub
dec
loopne
aad
notb
mov
aad
das
push
out
sub
fwait
jmp
jbe
xchg
jecxz
test
in
dec
popf
adc
scas
js
sar
movsb
insl
lods
push
xor
lcall
push
aad
out
movsl
fidivs
out
gs
adc
mov
lds
pusha
arpl
mov
rcll
or
mov
mov
leave
stc
stos
and
adc
add
inc
fwait
push
out
jo
fwait
cmp
sbbb
scas
mov
in
xchg
jecxz
repz
pop
jecxz
sbb
dec
stc
mov
in
stos
jmp
cmp
cltd
push
xorl
out
push
aad
fidivrl
gs
enter
lcall
lds
cmp
fstpt
sub
jb
sbb
mov
pop
movsl
or
jmp
aaa
vmulsd
nop
fcoms
dec
dec
add
xchg
hlt
push
push
in
jmp
sbb
mov
ljmp
cmp
subl
outsb
or
inc
or
or
test
lock
outsb
mov
jp
lods
jge
call
test
xchg
mov
pop
shr
and
adc
mov
decl
call
or
rolb
pop
movsl
out
jecxz
lret
xchg
imul
and
jno
lds
imull
icebp
adc
nop
jbe
dec
xchg
mov
mov
push
dec
or
xchg
cwtl
or
and
insb
imul
push
fldt
inc
daa
je
xor
dec
mov
stc
mov
push
gs
jo
test
or
in
mov
push
inc
pop
push
shrb
sbb
frstor
movsl
mov
fldt
dec
cs
mov
cli
push
int3
outsb
xchg
fdivl
test
cmpsl
loop
lds
inc
mov
mov
je
adc
sbb
push
lock
lahf
ljmp
mov
mov
mov
mov
and
outsl
aaa
scas
aam
jle
jno
mov
pop
inc
or
shrl
stos
add
jbe
mov
daa
dec
sbb
pop
jb
push
mov
js
mov
and
cmp
sarb
outsb
jecxz
es
cwtl
nop
sti
pop
xchg
dec
jbe
cmp
ja
in
sti
inc
test
fcompl
mov
fimuls
cmc
sub
mov
mov
stos
sub
popa
push
cmp
call
adc
mov
jmp
lret
pop
xchg
cmpsl
push
ss
and
and
pop
push
aad
jle
rorb
sub
or
adc
push
push
loope
rorl
ret
xor
mov
repnz
push
sti
sarl
jle
cwtl
roll
test
pop
shrl
jno
jbe
aam
repnz
pop
xchg
in
ljmp
adc
jbe
les
bound
lods
pop
testl
inc
sbb
xchg
mov
mov
xor
push
lock
jp
shrb
hlt
and
adc
mov
xor
rcll
xor
out
aam
clc
mov
jecxz
aas
leave
scas
nop
dec
cmp
stc
repnz
stos
ss
test
sbb
insb
push
xor
loope
jg
or
lret
cmp
and
xchg
pop
sbb
aaa
cmpsl
pop
sbbl
sub
addl
mov
cs
lret
xor
ds
mov
pslld
jmp
orl
clc
movsb
data16
ja
jg
mov
lahf
dec
mov
pop
aam
jne
rclb
sub
mov
cmpsl
push
xchg
adc
sub
inc
cltd
mov
and
sub
mov
nop
les
pusha
leave
pop
inc
cmp
out
mov
push
push
mov
pop
imul
jbe
out
ret
or
lret
aad
xor
mov
xor
inc
lock
cmpsl
aaa
test
xchg
xchg
add
fildll
jmp
adc
testb
repnz
shll
cmp
mov
pop
inc
mov
out
mov
repnz
daa
fisttpll
sub
or
jne
push
lock
icebp
push
fmull
jecxz
mov
xchg
and
lods
imul
push
push
test
sub
ja
xchg
icebp
sbb
int
test
iret
js
mov
cmp
and
lock
bound
in
xlat
ja
mov
cltd
ljmp
cs
or
cltd
or
jns
mov
leave
fsubrs
stos
push
push
cmc
xchg
aam
jae
jl
aad
sub
test
dec
xor
dec
or
ss
loop
mov
stc
xchg
out
sahf
test
rolb
adc
hlt
ja
sub
lock
mov
dec
pop
jno
or
xor
and
inc
lods
cltd
mov
les
divl
imul
mov
adc
aaa
clc
xchg
or
je
adc
shrb
lods
mov
aas
addr16
iret
xor
out
mov
and
insb
and
ret
jge
xor
jo
sub
push
inc
fucomi
arpl
mov
push
sahf
fs
mov
in
xor
mov
push
pop
mov
lods
inc
add
jle
es
push
in
hlt
cmpsl
jnp
lcall
cmp
fadd
dec
psadbw
fsubs
enter
pop
imul
adc
xchg
in
repnz
in
inc
in
dec
or
jecxz
lods
daa
in
into
aad
sbb
xchg
jecxz
inc
adc
and
xchg
sti
sub
mov
xchg
movsl
jp
push
stos
inc
roll
mov
inc
vpcmpistrm
push
pop
push
cmp
xchg
lcall
mov
adc
xchg
sbb
cmp
or
ljmp
das
lock
lea
shlb
cli
bound
fsubl
cmp
mov
dec
sub
xchg
jmp
mov
xchg
popf
mov
in
cmp
inc
mov
pop
mov
aas
push
push
push
mov
cmp
sub
jg
dec
repz
out
addb
xchg
jmp
bswap
add
shrb
xchg
adc
into
out
ds
rcll
add
ss
adc
push
lret
mov
mov
push
mov
js
rorb
inc
mov
push
mov
loop
es
clc
sub
or
xor
aas
cmp
in
dec
into
adc
or
out
pop
repnz
ljmp
and
iret
aaa
das
fstps
fldcw
xlat
adc
cmp
and
mov
add
aaa
pop
mov
inc
bound
movsb
xchg
test
idivb
pusha
outsb
shrl
out
mov
jns
add
mov
mov
xor
mov
test
popa
adc
leavew
pop
mov
daa
push
sti
mov
movsl
push
inc
mov
cmp
stos
cmpsl
pop
imul
cld
ds
xchg
mov
std
mov
leave
aas
lcall
dec
sub
loop
into
jne
shl
jg
fnstenv
pop
sub
pop
out
ja
and
scas
xchg
test
scas
dec
int
sub
cmp
shlb
cmpsb
inc
sbb
scas
les
pop
add
aaa
cmpsl
mov
and
inc
popa
dec
ljmp
mov
lods
sti
xor
cld
jne
or
ss
fsubl
fisttps
stos
pop
or
cmpsl
sub
js
adc
in
mov
and
cs
jbe
inc
sar
xchg
ss
mov
dec
sub
test
dec
pop
and
mov
sbb
pop
in
sub
dec
cld
jae
cmp
shlb
cs
stos
aad
out
ss
and
stos
push
lds
sub
popa
mov
cs
cwtl
add
cli
mov
xchg
movsl
jbe
mov
cmpb
jb
inc
je
decb
push
in
std
mov
cmpsl
adc
pop
iret
xchg
push
mov
mov
sub
xor
inc
xchg
fildl
cmpsb
pop
out
sbb
jnp
push
push
call
mov
inc
inc
sbb
pop
test
rcrl
or
xor
and
push
outsb
add
cmpsb
repz
and
or
xor
push
cmp
fildll
dec
lds
cmp
and
stc
inc
sub
lods
push
pop
dec
outsl
orl
out
mov
pop
in
dec
mov
mov
push
push
sub
dec
test
sub
jae
inc
pop
cmp
in
gs
or
cmpsb
lea
add
lods
pushf
jl
insl
inc
sbb
cmp
vaesenc
xchg
data16
or
sub
mov
jb
fwait
arpl
jb
mov
neg
das
lods
mov
rcll
fcmovnbe
dec
ror
jp
mov
clc
mov
and
push
test
sti
lcall
aaa
and
sbb
pop
jne
ror
je
xor
jmp
adc
sub
pop
insl
int
aaa
add
gs
pusha
xlat
add
scas
pushf
stc
testb
hlt
mov
and
test
je
mov
out
jne
inc
jo
lods
rcrl
lds
push
and
lock
int3
scas
add
add
cmpsb
pop
cli
and
jg
and
add
leave
popa
push
stc
rolb
stc
mov
cmp
adc
inc
test
arpl
daa
ret
cmpsb
daa
adc
xchg
inc
and
test
stc
jne
mov
jge
jbe
pop
push
mov
mov
pop
cmp
xor
sbbl
call
xchg
dec
mov
inc
notb
pusha
loope
push
pop
jae
fmulp
lods
or
popf
sub
jnp
roll
pop
lret
icebp
jne
fsubrl
mov
adc
imul
mov
cli
sbb
mov
test
mov
je
gs
inc
inc
stos
orl
ficoms
lods
push
mov
repz
jb
in
in
mov
roll
pop
dec
mov
popa
add
nop
jp
aaa
push
mov
fstpt
xchg
into
add
inc
mov
clc
inc
dec
xor
xchg
pop
cli
inc
in
pop
mov
xor
fidivrl
mov
in
pop
and
popf
inc
das
xchg
cli
cmp
maskmovq
imull
or
cmp
lds
xchg
in
outsl
xchg
sub
in
insl
in
fistps
push
and
out
pushf
inc
cmp
lock
cmc
xlat
pop
inc
out
jmp
nop
pushf
divb
repnz
add
sarb
fimull
dec
femms
mov
jmp
mov
or
andl
mov
add
dec
xchg
cwtl
mov
mov
and
jg
sub
ja
lock
fstl
mov
data16
rclb
mov
fnsave
leave
sbb
fsubrs
mov
mov
sub
stos
xor
mov
loopne
cmp
jmp
inc
sub
movsb
popa
pop
pop
xchg
add
inc
pop
xor
cmp
xor
cwtl
loope
cmp
fldcw
push
jbe,pt
jns
push
xor
jmp
add
aas
sbb
pop
scas
lret
mov
mov
fwait
dec
jb
cltd
testl
dec
mov
push
pop
cmp
test
popf
xchg
addr16
popf
cmp
negb
xchg
inc
sbb
test
mov
out
pop
jl
imul
mov
dec
cmc
scas
call
fsts
mov
dec
push
cli
add
cmp
lock
mov
jnp
push
push
fidivrs
clc
jg
dec
mov
push
mov
xor
cmpb
imul
test
jb
jo
fwait
xchg
repz
cmpsl
and
cli
rcl
mov
mov
ficomps
dec
aas
dec
lret
cmp
in
stos
hlt
jle
push
inc
arpl
pop
dec
mov
out
sarl
jae
imul
and
mov
sbb
subb
pop
inc
scas
das
int3
jmp
mov
cmp
jp
jae
xor
xchg
or
jl
imul
pusha
push
fs
sbb
inc
scas
add
jp,pt
imul
int
int
xchg
mov
lods
js
notb
mov
xchg
test
mov
sbb
cmc
imul
lret
sti
aas
cmpsl
ja
fcmovnb
dec
lods
insb
and
mov
gs
dec
imul
addl
adcl
fsubl
dec
dec
mov
inc
aaa
es
out
pop
lret
loope
in
data16
push
lods
out
add
dec
int3
xchg
jae
mov
mov
or
ljmp
lock
fcomip
or
add
stos
mov
int3
jl
fdivrl
pusha
cmp
aas
or
imul
mov
jmp
repnz
jge
test
adc
or
pop
test
mov
push
mov
in
test
faddl
ret
push
adc
mov
lcall
jg
adc
mov
and
add
pop
test
push
jp
pop
sub
lret
xlat
pop
shll
jp
mov
mov
insb
aas
pop
add
jg
sbb
jmp
or
mov
cmp
xchg
lret
filds
mov
enter
cld
rorb
mov
xor
clc
cmp
push
pop
arpl
mov
fisubl
mov
cmp
dec
adc
push
or
xchg
pusha
pop
rolb
mov
mov
pop
lret
xor
ljmp
xor
xchg
lods
outsb
and
cmp
pop
cld
fidivl
mov
adc
pusha
dec
pop
jae,pt
test
out
in
gs
mov
fimull
jl
sbb
adc
test
jmp
ss
stos
xchg
dec
gs
mov
pop
adc
jae
sbb
sub
xchg
mov
jns
dec
mov
scas
dec
or
sbb
jne
mov
cmpsb
inc
cmp
lea
mov
cmp
popa
mov
push
lret
movsl
dec
mov
xchg
cwtl
je
adc
loopne
in
push
pusha
push
mov
fdivrp
shll
repnz
test
and
fdecstp
add
call
cld
dec
shll
daa
xchg
loop
aaa
jnp
addr16
inc
lret
fwait
insl
outsb
movb
adc
ret
data16
mov
pop
lods
mov
xchg
aam
pop
mov
cld
and
push
cli
mov
xchg
push
mov
repz
out
mov
or
cli
and
and
jge
clc
enter
movsl
sar
aad
jg
push
cmp
adc
or
inc
sbb
and
lahf
jbe
outsb
jo
dec
xor
rcrb
lods
add
and
cmp
fistpll
fstpl
cmp
xchg
pop
add
pusha
sbb
imul
incl
mov
add
fstpl
pushl
cmp
fucomi
in
jle
ret
and
inc
dec
in
in
sub
lret
cmc
jl
cmp
ret
int
push
jecxz
ret
dec
repnz
inc
or
or
xchg
mov
or
or
clc
xor
inc
sub
mov
sbb
sbb
stos
or
and
or
cmp
push
sbb
aam
pop
ret
add
fisubrl
sub
mov
sub
lcall
adc
sub
test
and
pushf
pop
int
stc
loop
or
adc
and
jecxz
loope
sub
mov
jmp
lds
test
popf
les
mov
jge
jae
loope
cmp
lcall
jmp
in
imul
lock
pop
or
inc
outsl
inc
cmp
and
icebp
mov
ret
dec
dec
rcl
mov
out
and
pushf
push
push
aam
mov
xchg
mov
push
jp
push
xor
pop
sbb
test
repz
pop
mov
arpl
inc
mov
addr16
xchg
push
sub
adc
cli
add
std
aaa
add
push
mov
pop
les
dec
test
shrb
jb
and
ficomps
and
int3
stc
addr16
ja
pop
xchg
aam
movsl
add
cmpb
in
xchg
push
arpl
push
arpl
sti
mov
fisubs
cmp
mov
ret
rclb
xchg
inc
xchg
adc
into
and
add
push
fnsave
insl
push
pop
fbld
shlb
insl
shll
jle
in
jbe
cld
push
aad
xchg
pusha
ljmp
bound
jne
adc
mov
insw
xchg
sbb
cmp
repz
mov
jmp
iret
adc
mov
pushf
xor
pop
mov
sub
push
arpl
movsb
and
addr16
adc
scas
jbe
test
outsl
sbb
and
repz
xchg
fcmovne
push
ja
hlt
stc
test
mov
mov
push
push
ljmp
cmp
mov
adc
les
stc
and
and
add
scas
ja
vshufps
cmp
sti
movsb
pop
jl
xchg
jb
dec
sbb
aas
in
sub
lcall
punpckhwd
mov
arpl
clc
orl
fdivrs
dec
jno
daa
lock
iret
jle
xchg
dec
aas
fsubrl
add
push
push
sbb
sub
jb
pushf
pusha
lea
mov
cwtl
xor
in
stos
leave
loope
rorl
jb
stc
out
lods
icebp
lahf
mov
sti
mov
xchg
les
nop
les
aad
dec
negb
les
in
sub
std
leave
inc
jmp
iret
sub
in
stos
or
in
incb
in
scas
ret
xchg
push
xchg
test
rclb
hlt
jae
inc
hlt
lahf
shr
gs
ds
add
dec
imul
cmp
pop
xchg
mov
insb
test
and
out
ficomps
int
xchg
jg
addr16
xchg
popf
les
mov
mov
in
rcrb
push
pop
cmpsl
imul
push
int
ss
sub
mov
in
inc
cld
dec
pop
sbb
into
leave
js
in
scas
dec
sbb
stos
sbb
mov
aad
xchg
int
repz
sti
push
ds
push
mov
fsubrl
mov
mov
xlat
imul
sbb
cmp
cmp
popw
xchg
arpl
cli
ret
xor
das
fs
scas
addb
add
lret
iret
adc
mov
and
dec
dec
jbe
mov
ret
mov
cmp
and
aas
adc
xorl
dec
into
addl
jno
into
cmp
mov
outsl
shlb
pop
jbe
insb
std
sbb
mov
add
call
ja
mull
dec
repz
inc
mov
cwtl
lahf
add
fimull
ficoms
pop
push
stos
pop
movsb
aam
inc
or
movsb
jge
subl
sahf
push
and
shlb
inc
movsl
xchg
psubd
sub
and
lods
fwait
jp
int3
and
es
orl
sbb
adc
in
or
iret
sub
nop
in
sub
daa
sbb
frstor
les
cmpsl
pop
filds
cmp
mov
shll
out
mov
cmp
popa
mov
mov
repnz
pop
push
test
cmp
mov
mov
dec
in
xchg
jae,pt
and
aaa
lcall
jmp
sti
out
jo
stos
inc
jle
add
push
pop
sub
js
mov
cld
pop
icebp
jne
mov
xchg
pop
bound
inc
xor
jae
mov
roll
cmp
negl
lods
push
or
push
inc
push
mov
mov
pop
mov
sarl
add
dec
shll
mov
adc
add
or
lea
dec
add
mov
sub
cli
sbb
movsb
cld
dec
pop
out
inc
nop
pop
cwtl
sarb
movsl
xchg
push
push
dec
lods
and
lods
mov
das
cmp
je
int3
daa
adc
aas
clc
sahf
jae
rclb
arpl
pop
inc
lods
popa
imul
inc
sbb
jge
lods
je
xlat
aas
in
cltd
imul
push
mov
sbb
rol
adc
mov
andl
inc
mov
stos
and
je
daa
mov
jp
cmp
jns
and
insb
shrb
out
jns
push
loopne
gs
stos
or
dec
push
cli
push
fsub
inc
faddl
cld
pop
adc
je
add
ja
sbb
pop
out
mov
in
dec
inc
lock
cmpsl
dec
pop
push
jg
xor
cmp
push
stos
dec
std
xlat
into
and
jecxz
stos
cmp
mov
lret
into
sub
push
mov
or
mov
mov
mov
pop
mov
mov
icebp
pop
sbb
aam
ja
popl
loop
movsb
out
mov
gs
int3
or
sbb
movsb
in
mov
cmp
insb
das
imul
adc
or
push
stos
les
mov
rcrl
or
xchg
mov
dec
inc
cmpl
out
cmp
incl
lods
jmp
cmp
xor
mov
push
adc
scas
push
jmp
addr16
mov
fldcw
mov
syscall
jl
dec
jge
clc
stc
lret
mov
popl
pop
test
popf
sub
cmc
clc
out
push
imul
mov
push
int
push
dec
cmp
aad
nop
inc
push
sti
loopne
shll
cwtl
sub
cs
mov
hlt
stos
sti
cmpl
ret
pop
sbb
out
aas
imul
cmp
jno
lea
adc
xor
es
jno
bound
mov
cmpsb
repnz
sub
cli
xchg
test
push
sub
push
pop
xchg
call
sti
push
ret
xor
stos
sti
pop
sti
shll
dec
mov
sti
enter
xor
daa
outsb
pop
adc
les
ja
or
test
mov
cmc
push
or
call
mov
nopl
or
cli
jmp
mov
fildll
jb
fs
cmp
ja
pop
sahf
jae
mov
cwtl
cmpsl
mov
sub
xchg
ds
in
mov
repz
or
dec
adc
push
rcr
mov
pop
xchg
stos
sahf
lds
cmp
cmpl
xchg
mov
lds
pop
or
iret
xchg
inc
jb
in
shlb
mov
push
or
fists
mov
mov
sbb
les
in
push
fadds
ds
xor
out
hlt
inc
pushf
fwait
std
adc
lahf
ret
and
out
jg
stos
xor
pop
pop
xchg
push
call
daa
xor
daa
xchg
mov
cmc
xor
inc
in
jne
mov
bound
jecxz
loope
mov
and
adc
mov
mov
pop
fbstp
mov
repz
jnp
lret
lahf
jl
and
lods
rorl
out
gs
xchg
xchg
clc
cmp
pushf
xor
add
or
popa
rclb
add
xor
sub
pop
adc
out
inc
xor
jmp
jecxz
in
imul
popf
mov
sbb
stos
ret
lret
pop
cmpsl
loop
sub
lods
push
sub
cmp
xchg
inc
push
sbb
push
out
movsl
add
jecxz
mov
sbbb
gs
in
adc
test
scas
test
inc
xor
andl
inc
bound
cmc
mov
loop
lock
leave
pop
mov
cli
xor
dec
dec
daa
lret
adc
cld
push
out
mov
outsb
or
jno
or
xor
cld
in
mov
xchg
adc
imul
xchg
sti
sahf
pop
xchg
jp
dec
adcb
mov
lret
imul
or
push
push
in
push
jp
jl
inc
scas
mov
jge
dec
clc
cmc
adc
shrl
mov
mov
movsb
adc
jb
jb
adc
pusha
dec
fistpll
test
xor
mov
bound
sahf
rclb
fstl
or
push
push
int3
sbbl
fcmovb
jg
mov
fwait
stc
shll
arpl
jb
and
cmp
adc
je
add
pop
repnz
lcall
in
jl
test
dec
push
xor
and
fwait
movsl
push
xchg
xchg
mov
jo
loope
sbb
cmp
out
int3
cmpsb
cmc
mov
add
jle
test
in
shrb
dec
mov
rcll
add
xor
push
lea
push
aad
imul
insb
addl
repnz
arpl
dec
shr
imul
jo
cwtl
xlat
fnstsw
fildll
test
push
test
mov
pop
mov
mov
sbb
adc
repnz
xchg
sbb
push
jae
shlb
jl
in
aad
mov
fdivl
xor
out
push
lock
ficoml
rolb
bound
mov
add
rorb
fsubl
inc
and
jne
js
add
pop
and
int
jbe
push
push
stos
loope
jne
fnsave
cmp
in
int
mov
sarb
sbb
mov
cli
jb
lods
sti
jg
scas
inc
fnstsw
push
xchg
test
sub
or
cli
adc
popf
iret
xchg
xor
in
push
ds
dec
test
xchg
fcmovnu
jo
ret
addb
adc
fsubl
cmp
fwait
and
cltd
xchg
mov
jl
mov
push
test
pop
jg
js
in
mov
f2xm1
sub
insb
jo
mov
inc
xchg
mov
push
xlat
mov
les
insl
add
arpl
mov
and
int3
adc
andb
fiaddl
inc
test
sahf
dec
push
adc
mov
cmp
or
nop
and
xchg
fisttps
sbb
xchg
xchg
insl
adc
or
cmp
into
xchg
inc
xchg
sub
push
sbb
push
xorl
fisttpl
push
add
or
and
lret
std
sahf
scas
in
lret
jmp
fsub
roll
insb
xchg
fisubl
adc
or
cmp
xor
andl
imul
or
mov
es
sbb
addb
sub
ja
daa
sbb
into
and
rcll
fadds
push
xchg
dec
mov
dec
mov
call
mov
fcom
or
jmp
mov
pop
test
xchg
mov
push
dec
negb
mulps
lock
test
and
out
push
ss
bound
mov
cmp
out
out
cmp
sub
cli
dec
jge
mov
mov
shrl
jne,pt
inc
add
pop
adcl
xor
and
bound
mov
ret
data16
xchg
out
stc
cmp
dec
lods
fdivr
nop
lods
cmp
mov
movsb
mov
xchg
pop
test
pop
add
flds
fs
add
dec
ds
lahf
or
or
faddl
xor
enter
cld
repz
in
xor
lea
fcoms
or
inc
cmpl
adc
mov
daa
and
pop
jae
in
pop
jae
cmp
xchg
xchg
imul
mov
and
inc
jno
les
fsubs
fildl
push
dec
mov
mov
xor
mov
sub
movb
in
int
js
push
mov
push
fildl
aam
adc
add
je
outsl
ror
or
cmpsl
lea
in
scas
sahf
xchg
or
movsb
daa
aam
push
add
fmuls
pop
sub
inc
loopne
outsb
pmaxsw
cmpl
inc
bound
movsb
mov
cmp
mov
shll
jmp
sti
jp
push
mov
movsl
sbb
sub
test
jle
int
sub
push
xor
xchg
iret
fucomp
movsl
adc
xlat
pop
mov
sub
add
ret
jnp
repz
dec
inc
sbb
dec
pop
sub
mov
nop
push
in
mov
ror
jne
push
addr16
fsubr
pusha
push
cld
int3
inc
shll
pop
je
sbb
inc
mov
or
orb
cmp
jg
inc
jbe
mov
daa
iret
mov
lcall
adc
test
xchg
xchg
je
and
and
pop
lret
fnsave
out
adc
test
rcrl
orb
jb
mov
pop
idivl
lock
sahf
mov
pop
call
ja
test
xchg
lret
je
sub
jg
mov
popa
lea
cwtl
loope
dec
push
adc
jmp
sbb
pop
xor
cltd
dec
daa
mov
adc
popa
lahf
jmp
mov
adc
and
sahf
push
roll
push
pushf
push
dec
push
out
aad
pop
jg
adc
incl
jp
and
jae
mov
cmpsl
mov
stc
std
cmpsl
iret
lock
mov
lock
jne
cmp
xchg
push
leave
lret
xchg
cmpsl
mov
sbbb
pop
test
lcall
xchg
cld
pop
xchg
cmpb
shrl
rolb
dec
out
addr16
mov
movsb
add
and
or
fdivrs
lret
stc
adc
push
cmp
dec
add
test
dec
pop
cld
in
adc
fcmovb
aas
mov
lods
call
xor
push
lahf
les
mov
call
xchg
jns
mov
test
inc
dec
test
cwtl
gs
stos
or
mov
inc
fisubrs
adc
sub
inc
inc
aad
ret
inc
or
ret
cltd
fdivrs
lret
sbb
mov
cmp
jns
shlb
inc
mov
or
adc
insl
outsl
sub
pop
test
adc
adc
pusha
xor
rcll
xchg
cmpsl
and
repz
enter
jbe
cmp
jns
sti
mov
testl
cmp
scas
xchg
inc
enter
out
fbstp
pop
jle
or
icebp
inc
pop
sbb
sarl
ss
insl
iret
sbb
ret
loop
test
aaa
inc
push
popa
mov
and
insl
mov
ror
add
ljmp
jns
mov
jmp
fisttpll
jp
xorb
mov
jb
dec
pop
jmp
xchg
fsubs
jns
rol
jmp
arpl
mov
mov
aas
fcompl
mov
sub
int
push
cli
mov
mov
data16
hlt
cmp
pop
pop
mov
jp
cmpl
scas
sub
dec
xchg
movsb
mov
or
lods
adc
push
pop
jno
popf
fisubs
gs
mov
jp
loopne
adc
jo
pusha
xor
mov
xlat
cli
inc
cmp
jne
inc
mov
jp
movsb
int
aaa
fsubr
push
jae
addr16
and
dec
jg
std
sbb
ror
lahf
push
add
adc
adc
mov
int
test
jne
add
iret
xchg
int3
lret
cmp
pusha
mov
test
in
out
jge
nop
xor
push
xchg
xchg
xor
inc
cmp
sahf
jecxz
push
or
inc
lods
into
add
sub
pop
cmc
jp
xchg
cmc
arpl
or
sbb
and
in
dec
or
xor
repnz
dec
cld
test
xorl
ret
add
xor
shrb
adc
out
lcall
fildl
lret
jecxz
popf
add
dec
ljmp
push
cmp
or
fistps
dec
fwait
pop
shr
sub
xor
loope
dec
lahf
xchg
sbb
adc
cmp
push
and
je
sub
stos
dec
dec
int
movsl
rcl
fcmovnu
iret
xchg
dec
mov
sar
mov
rorb
out
adc
test
in
push
fwait
pop
or
xchg
xchg
xor
fwait
mov
lcall
lods
inc
dec
into
lock
pop
cmp
ret
xor
addr16
cmp
and
xorl
or
add
hlt
cli
sub
loopne
adc
cmp
call
rcl
jae
jo
orl
sub
push
mov
pushf
pop
cmp
test
icebp
popf
pop
jno
inc
out
or
cwtd
insl
push
dec
ret
mov
or
push
leave
ficoml
mov
cltd
sbb
mov
int
inc
dec
daa
mov
pop
orb
or
test
jp
fnstsw
daa
xor
push
add
mov
mov
or
shl
xchg
orb
cmp
cmc
imul
outsb
pop
stos
jbe
lods
xor
lea
push
bnd
xchg
mov
outsb
int
data16
icebp
mov
jle
std
in
mov
rolb
jno
mov
jns
les
pop
testb
or
daa
inc
sbb
add
lret
add
shlb
or
dec
inc
xor
enter
xor
out
ss
lods
fldz
cmp
adc
mov
loopne
inc
inc
enter
dec
mov
and
sarl
fldenv
xchg
cmp
pop
adc
movsl
cs
mov
xchg
mov
push
xor
fstps
add
scas
scas
sarl
mov
mov
cmpb
aam
je
xor
dec
imul
mov
fdivr
push
jecxz
dec
mov
insb
xor
cltd
dec
jno
mov
cs
inc
rcr
into
rcll
enter
int3
inc
xchg
in
sub
dec
dec
outsl
arpl
testb
push
hlt
sahf
ljmp
jns
stc
mov
dec
sbb
pop
mov
push
xchg
cmp
inc
xorl
push
sbb
nop
xchg
sbb
and
mov
jge,pt
rcrl
pop
lods
add
sbb
les
in
jp
cmp
add
aas
sbbl
xchg
fmull
jae
mov
mov
enter
sbb
and
cwtl
inc
aad
pop
jb
aaa
negb
leave
xor
add
sar
mov
jmp
or
cmpsl
fdiv
pop
jbe
not
hlt
out
xchg
iret
dec
aaa
imul
pop
lods
lea
lock
fidivrl
ds
mov
mov
pop
sbb
jmp
je
pop
sbb
inc
movsb
hlt
outsb
xor
fwait
push
arpl
js
test
repz
fwait
repnz
out
xchg
fldenv
mov
sahf
xchg
cmp
push
xchg
das
rcpps
inc
add
xor
je
idivb
push
cltd
xorb
mov
sub
jg
inc
cld
lret
stc
add
xchg
push
dec
mov
lcall
mov
lahf
inc
mov
dec
mov
cmp
fcoms
adc
sub
bnd
inc
jg
sbb
fdivrs
shll
fs
xchg
call
mov
stos
dec
std
xchg
in
xchg
fwait
push
jno
or
pop
mov
sbb
xchg
repnz
jmp
jns
rcll
or
mov
in
jae
mov
push
jb
add
push
mov
cmp
mov
mov
aam
outsl
sbb
sbb
or
mov
jp
push
jg
sbb
pop
in
mov
repnz
pop
push
sub
mov
repz
loop
aad
dec
sub
lcall
xchg
pop
inc
in
push
dec
mov
stos
jno
out
and
mov
pushl
adc
lretw
dec
cmc
cmp
pop
xchg
fs
icebp
push
out
pop
xlat
xchg
dec
je
aas
cli
repnz
xlat
jmp
cmc
imulb
push
aas
jo
out
popa
or
or
xor
test
les
push
sbb
inc
dec
pushf
adc
popf
in
lock
pop
lret
lret
daa
or
inc
cli
lret
es
mov
jp
mov
movsb
xchg
popf
pop
fistpll
inc
int3
push
mov
pop
sbb
into
je
in
scas
xchg
notb
push
sub
and
jnp
test
jns
fnstsw
jle
sti
icebp
push
imul
enter
orb
pop
andb
popf
fsubl
push
fsubrl
fcomp
loopne
xor
jo
xlat
lcall
aaa
jg
movsl
pop
push
push
lret
pop
out
test
mov
xor
mov
insb
cmp
sbb
test
movsl
push
xor
test
nop
adc
jb
push
inc
lea
int3
test
leave
dec
mov
mov
lahf
and
in
mov
or
add
in
iret
cld
inc
imulb
mov
ljmp
test
int3
in
daa
and
shl
fiaddl
sub
cmp
lret
enter
fildll
push
xlat
inc
packuswb
cmpsl
sahf
cwtl
xor
stc
add
pop
cmp
iret
lahf
push
xor
xchg
das
adc
and
in
push
sbbb
jno
lret
inc
jle
cli
pavgb
mov
inc
adc
xchg
js
cli
out
mov
xchg
sahf
je
mov
subb
sub
repz
push
xchg
nop
aam
lcall
sbb
addr16
xor
xchg
addb
mov
push
cmc
in
ret
aaa
mov
mov
stos
xchg
and
sub
mov
sub
pop
xor
xchg
stos
sbb
dec
xor
in
lahf
pushf
jg
push
pop
or
addl
sub
mov
jg
lods
out
add
andl
and
out
adc
cwtl
dec
push
gs
mov
sub
and
addb
in
adc
ds
sbb
lret
fimuls
decb
imul
sbbb
push
adc
mov
inc
xor
push
push
push
bnd
jns
mov
dec
pop
insl
bound
neg
add
int
sbb
adc
iret
std
out
daa
sbb
push
adc
pop
xor
adc
pop
movsb
aam
inc
push
push
jmp
fstps
mov
mov
in
rorl
fcmovb
fcmovb
imul
sbb
test
pop
dec
cmp
sbb
pop
or
in
mov
xchg
inc
fiadds
mov
shl
enter
lret
std
cld
fisubrl
xlat
and
mov
sbb
mov
das
lret
ret
cld
mov
or
into
cmp
xor
mov
sbb
fisttpll
dec
repnz
push
cmp
adc
fists
push
push
adc
repz
mov
je
inc
and
movsb
jle
cwtl
sbbl
jae
loopne
push
inc
icebp
push
pop
mov
mov
dec
ja
addr16
mov
das
fiadds
sbb
xor
out
int
xchg
cmp
icebp
jecxz
je
pop
add
hlt
pop
or
test
fistpl
icebp
sub
pusha
sbb
aas
and
push
xorl
sub
cmp
and
inc
sbb
test
bound
jl
jne
push
addr16
stos
ret
and
sahf
pusha
mov
movsb
arpl
mov
test
mov
movsb
push
in
jnp
and
sti
dec
and
pop
or
gs
mov
outsb
out
sbb
shlb
cld
std
fstpt
shr
or
jle
sub
stos
pushf
mov
mov
mov
dec
sarl
insl
push
inc
jb
lahf
and
push
insl
or
cltd
ljmp
adc
mov
lret
mull
mov
stos
scas
rorb
xchg
test
arpl
lret
scas
xor
pop
inc
mov
push
inc
std
lods
mov
ds
push
mov
cwtl
movsl
add
loop
xchg
mov
push
addr16
mov
mov
lea
jge
popl
js
fwait
mov
js
test
scas
clc
inc
ss
gs
dec
cmpb
add
mov
or
frstor
jno
mov
inc
ss
pop
pop
clc
das
jle
movsl
sbbb
mov
mov
pop
xchg
ret
jle
mov
stc
and
in
mov
jo
scas
or
pusha
int3
popa
arpl
inc
repz
pop
sbb
jne
fnsave
mov
xor
mov
push
cmpsb
int3
lret
xchg
gs
dec
mov
cmpsl
xor
js
xor
xchg
inc
lret
adc
shlb
push
jns
ret
leave
jne
cmp
into
leave
adc
mov
aad
repnz
fmull
cmpsl
lahf
insb
mov
insl
bnd
push
mov
fsubr
cmp
out
ja
insb
cmp
xchg
ds
mov
fildll
pop
in
scas
xchg
xchg
lock
add
inc
jns
sub
scas
lock
sub
xor
or
test
xchg
out
psubb
jb
mov
adc
cld
mov
inc
jmp
and
xor
push
jb
repnz
or
lods
lret
xor
rcl
aas
std
aad
in
in
jno
mov
cltd
pop
sbb
fistps
fstpt
xchg
push
mov
and
cwtl
add
mov
push
add
lcall
and
add
and
fldl
or
les
std
stc
inc
insb
subl
or
xor
sub
orb
les
or
or
cs
fsubs
xchg
fdivrl
cmpb
xchg
xchg
or
mov
jno
xchg
and
jns
ja
out
aam
lods
cmp
das
mov
dec
jp
dec
idivl
jecxz
inc
push
jmp
data16
dec
mov
xor
cld
pop
dec
mov
xchg
adc
sub
cmp
stos
mov
xchg
loop
or
scas
mov
out
faddl
out
jne
sti
sbb
or
ds
outsl
mov
mov
mov
xor
mov
sbb
cmp
rol
shlb
lods
subl
xchg
imul
pop
or
mov
inc
xchg
fsts
das
mov
and
pop
popa
lcall
lods
cmpsl
iret
into
shrb
jnp
bnd
xchg
cs
cmp
mov
sarl
push
loopne
je
pop
insb
jmp
in
out
insb
mov
push
cwtl
xor
in
test
sbb
xor
aas
pop
mov
sbb
cmp
cmc
pop
les
mov
fdivr
pop
mov
jmp
movsb
insl
mov
mov
sub
in
fildl
mov
shl
mov
es
stos
mov
shlb
mov
mov
sub
repz
mov
je
stos
insl
lods
push
hlt
lock
aas
call
scas
jo
jecxz
dec
sbbl
xor
push
push
jae
imull
lret
and
jle
push
repnz
or
fldcw
mov
lods
dec
es
enter
test
scas
lock
push
jnp
lahf
filds
int
xor
xor
fwait
test
les
sbb
aas
mov
mov
sub
dec
out
into
cmp
mov
adc
sub
hlt
faddl
jne,pn
lret
cli
outsl
push
loop
pop
ss
add
repnz
lods
in
or
pop
mov
dec
sbb
inc
mov
sub
dec
loope
scas
cmp
test
lock
data16
adc
pusha
xor
popf
pop
or
addr16
sbb
sbb
lahf
jecxz
insl
call
push
into
push
int3
mov
iret
mov
xor
cmp
fisttpll
mov
enter
mov
push
inc
push
dec
sub
pop
inc
loopne
aas
cltd
rol
aaa
pop
rcrb
cmp
adc
fdivr
pop
mov
je
movsl
push
cmp
outsl
aaa
loope
fsubrl
xor
add
xchg
ds
out
mov
pop
stos
or
xor
fimuls
sahf
sarl
lea
les
and
jae
sub
jb
cli
cmp
pop
aam
fucomp
fs
add
xor
cmp
adcl
lahf
xchg
and
jecxz
adc
rolb
mov
cmpsb
xor
mov
stc
xchg
xlat
jb
sub
push
out
cmp
adc
in
push
jmp
and
adc
jb
inc
mov
inc
cld
lahf
mov
add
jne
cs
and
push
add
lahf
ljmp
pop
rol
mov
jo
ljmp
adc
xor
fnsave
xor
divb
imul
add
xor
rorl
outsl
gs
push
cmp
es
fmuls
fadds
push
inc
clc
mov
jno
xchg
pusha
les
pop
cmc
add
jmp
insl
decb
pop
mov
mov
push
mov
xor
or
ss
test
jmp
shrb
fnstsw
call
inc
scas
mov
pop
vpaddusb
roll
fstps
out
dec
flds
hlt
add
fldt
pop
jmp
jae
or
rcr
jne
xchg
mov
jo
xchg
adc
cwtl
mov
imul
or
js
push
xchg
bound
mov
cmp
push
jecxz
inc
mov
mov
loopne
nop
mov
cmp
inc
push
bound
addr16
lahf
fildll
aad
loop,pn
and
out
cmp
inc
js
leave
pushf
jg
pop
mov
jle
add
cmp
aad
pushf
mov
mov
push
pop
fmul
add
add
xor
mov
adc
int3
mov
push
stos
jp
add
xor
orb
dec
fstps
ret
subl
cmp
mov
xchg
jbe
ljmp
xor
int
pop
xor
inc
dec
cmpl
mov
pop
cs
push
mov
and
add
test
bound
jle
xchg
adc
sub
insb
sub
push
sub
jne
jg
lods
and
mov
pop
jns
mov
inc
cmp
enter
bound
shl
lret
lods
inc
sub
outsb
nop
insl
lock
inc
mov
ret
loop
sti
insb
mov
inc
mov
xorl
inc
aas
movsb
push
push
popa
stc
cwtl
in
pop
adc
sbb
or
sarl
dec
popa
mov
xor
adc
xor
cmpb
fcmovbe
movsb
es
jb
and
jl
jl
cld
stos
dec
sub
dec
out
sbb
push
cs
imul
xchg
mov
cmc
mov
roll
xchg
notl
or
cltd
pop
cs
push
adc
cmpl
mov
xchg
int
enter
mov
xor
dec
push
or
or
nop
addr16
and
cmp
mov
xchg
arpl
lea
xchg
into
or
fistpll
gs
mov
scas
mov
mov
jb
clc
dec
mov
insl
xchg
ss
imul
pusha
not
pop
pop
stc
pop
pop
add
mov
mov
movsb
lds
addl
insl
dec
lock
xor
fbld
addr16
dec
mov
add
mov
inc
les
jne
cmp
lea
cmc
outsl
stos
jb
mov
js
push
mov
shlb
int
pop
ret
add
xchg
lahf
mov
adc
movsl
jne
dec
push
sbb
sbb
sbb
xchg
stos
pop
cltd
cmpsb
sarb
dec
sbb
xorb
xchg
sbb
jo
push
jle
sti
lret
jg
sub
push
dec
outsb
pop
lds
scas
xchg
and
into
inc
addr16
scas
in
mov
and
push
pop
out
stos
fs
add
add
xchg
dec
bound
inc
pop
rorb
mov
cmpsl
jp
and
pushf
fiadds
pop
hlt
mov
xor
push
jne
ds
mov
xor
sub
addr16
cmp
mov
insb
dec
push
dec
pop
cmpsb
jg
mov
dec
push
das
scas
jno
int
and
dec
mov
sbb
pop
adc
sahf
aad
stos
ljmp
xchg
lcall
add
jno
xchg
test
jo
call
cmp
sub
dec
rcll
inc
add
sahf
leave
xchg
repz
jge
popa
ja
xchg
jbe
xchg
add
scas
add
ficompl
insl
adc
aaa
mov
jmp
pop
xor
outsl
testb
das
or
pop
testb
incl
lods
shlb
inc
fidivrs
cld
xor
jb
lods
rcll
loop
lret
jg
out
mov
push
int
inc
es
ret
outsb
inc
sbb
ror
mov
iret
sbb
add
mov
mov
xchg
lods
jg
inc
cmp
mov
xchg
mul
xchg
xchg
inc
lods
add
mov
cwtl
and
add
jle
jno
fstl
or
xor
adc
dec
ja
out
fwait
xchg
push
stos
xor
insl
icebp
dec
add
or
arpl
jl
lcall
rorl
pop
mov
sarb
clc
lods
je
mov
mov
leavew
mov
cwtl
jae
daa
int3
int
aaa
add
test
int3
xchg
fisubs
and
lret
dec
mov
jp
jecxz
insb
fists
les
xcrypt-ofb
cmpsl
out
add
xchg
mov
inc
jge
push
les
cmp
xor
lcall
mov
xchg
call
xchg
repnz
aad
es
add
push
inc
sub
std
std
out
sbb
popf
ret
insb
cmpsb
sub
sbb
adc
test
xchg
lock
mov
jno
pop
cltd
xchg
inc
clc
push
sarb
push
mov
add
xor
pop
mov
cli
dec
mov
jnp
je
mov
push
inc
push
cmp
mov
mov
pop
lods
jg
jp
cmpsl
outsb
sbb
inc
stc
lods
inc
add
not
sub
scas
stos
imul
inc
fld
repz
daa
clc
cli
cmpl
jnp
mov
and
cmp
bound
cmp
loop
mov
sbb
pop
imul
xlat
mov
fidivs
imulb
stc
add
rcr
mov
arpl
ret
loop
jle
push
addr16
outsb
arpl
aas
in
xor
daa
out
fistl
fnstsw
shll
dec
sbb
inc
fnstsw
mov
loop
mov
mov
fcoms
push
push
repnz
or
jno
sub
out
or
sub
pop
pop
sbb
test
mov
sbb
enter
dec
push
fisubrl
add
and
or
sub
lcall
xor
inc
out
mov
mov
ljmp
popl
mov
aas
inc
push
mov
imul
push
jnp
xor
jne
adc
or
jge
dec
mov
and
push
int
sbb
pop
jne
mov
out
push
and
jb
add
add
stos
and
mov
ret
inc
fmuls
push
lcall
adc
mov
adc
ja
ret
xor
jmp
adc
aaa
cmp
adc
rcrl
lcall
in
and
in
cs
das
lcall
out
jns
mov
addl
cltd
xor
pushf
lcall
insb
add
jno
or
test
adc
push
add
cmp
mov
neg
mov
sub
repz
lahf
or
or
push
jge
mov
pop
jae
xor
push
or
in
aad
sub
fnsave
scas
mov
mov
stc
hlt
insb
pop
es
inc
pop
cwtl
out
cwtl
or
sbb
sahf
insb
test
pop
jnp
push
cmp
cmp
inc
jle
into
div
or
add
roll
cld
xchg
mov
push
sbb
and
push
mov
mov
int
push
imul
fucomip
and
xor
push
mov
ss
mov
adc
test
xchg
jl
mov
fadds
inc
aas
imul
fwait
xchg
xchg
repnz
mov
pop
jae
loop
xchg
int3
add
pop
mov
ret
shlb
mov
outsl
mov
nop
mov
jno
test
inc
call
xchg
sbb
pop
mov
ret
push
mov
xor
jecxz
inc
jp
sub
call
call
scas
mov
push
sub
cwtl
popf
mov
sbb
inc
add
in
mov
pushf
inc
mov
mov
rorb
add
xchg
xchg
jmp
out
add
mov
xor
fcompl
roll
fldenv
or
mov
jle
out
xchg
sbb
cmp
cli
sahf
dec
ds
pop
jbe
cmp
push
push
jl
cmp
fcomps
bound
cmp
mov
adc
mov
lock
cld
jmp
xor
mov
std
inc
mov
bound
js
jge
ret
adc
cmp
add
into
mov
ja
insl
mov
cmp
out
add
mov
xchg
aaa
pop
jl
shl
pop
xchg
sbb
xor
shlb
fwait
out
out
sbb
xor
cmp
fmuls
stos
cltd
loope
jg
mov
xorl
inc
xlat
dec
movsb
xor
xchg
sub
sub
scas
push
test
push
test
dec
adc
popf
fistpll
inc
lret
adc
adc
jno
sbb
orb
pushf
mov
pop
scas
mov
test
fmull
dec
and
xchg
jmp
rolb
jecxz
stos
mov
mov
xor
xor
jbe
arpl
xchg
xor
fwait
mov
dec
nop
sbb
cltd
movsb
jbe
mov
pop
xorb
test
and
pop
xor
xchg
dec
lds
jge
add
adc
nop
sub
xchg
addr16
div
es
push
mov
sti
jl
inc
jns
call
mov
into
mov
xchg
jle
les
ret
fsubr
push
imul
and
jmp
outsl
pop
ret
rorb
dec
not
mov
add
and
scas
add
mov
shrl
mov
popf
mov
cmpsb
sarb
lahf
sbb
mov
test
insl
pop
scas
test
sbb
jnp
mov
push
add
mov
jno
mov
and
outsl
push
mov
sti
out
int
scas
pop
xor
pop
or
sub
cmp
shlb
push
sub
jb
cmp
xchg
jo
inc
pop
outsb
push
mov
ja
mov
sbb
push
lcall
ljmp
sbb
jmp
divl
jp
loope
aaa
cwtl
mov
jmp
mov
or
mov
inc
jp
ret
dec
push
xchg
leave
mov
mov
mov
mov
cwtl
fs
lods
and
je
stos
int
xor
xchg
fwait
mov
movsb
xchg
adc
bound
and
xchg
sub
test
ljmp
push
xchg
mov
xchg
inc
pop
jnp
test
xchg
testb
push
sbb
fs
stos
inc
sub
or
in
test
and
lret
test
pop
cmp
jmp
jecxz
sub
and
call
sbb
mov
mov
mov
lods
add
fcmovbe
sbb
adc
data16
pop
mov
aaa
arpl
sub
lret
ljmp
or
out
adc
js
add
sub
mov
xchg
aam
xchg
test
jg
imul
sub
ss
mov
aad
in
std
imul
xor
push
xchg
cmc
jno
mov
imul
xor
push
dec
mov
inc
adc
scas
decl
insl
pop
addr16
mov
fmul
xlat
pop
sub
mov
test
pusha
mov
xchg
out
cwtl
arpl
lock
rol
jp
cltd
nop
and
stc
rcl
mov
dec
jecxz
and
mov
xor
fistl
das
pop
dec
pusha
xchg
add
bound
pop
pop
sbb
dec
sbb
aam
test
scas
ljmp
push
pop
into
xchg
push
sbb
mov
aaa
enter
frndint
mov
sahf
jg
mov
adc
and
dec
add
sub
cmc
movsl
xlat
stos
ds
inc
mov
pop
jns
jo
cmovno
std
pop
popf
divl
hlt
hlt
pop
add
mov
dec
xlat
aas
pop
and
shl
adc
cwtl
push
push
sub
jge
mov
es
repz
loop
sbb
dec
sub
push
hlt
push
or
inc
out
nop
stos
sub
cmc
pop
andl
bound
xor
add
push
add
mov
cli
out
xchg
pop
inc
sub
in
scas
aad
xchg
aaa
adc
jo
sbb
inc
adc
ljmp
add
clc
icebp
lret
test
xchg
cmp
fistpll
cs
fs
cmpsb
push
jns
push
scas
adc
lret
mov
loope
pop
repz
cmc
pop
xchg
xor
or
jno
sbb
das
insb
stos
in
in
push
sbb
stc
pop
jmp
or
inc
pop
push
dec
adc
nop
add
sahf
rorb
cmp
sbb
push
dec
loopne
xorb
xor
test
mov
outsb
cmpsl
mov
loop
cmpb
push
cmpsl
xor
rclw
xchg
jle
mov
dec
in
icebp
movsb
jo
daa
adc
sti
jl
lods
pop
jge
stos
lds
insb
jae
adc
repnz
push
test
out
aad
lods
pop
xor
sub
cmp
sub
in
cmpsl
lods
push
or
xorb
enter
jo
jmp
cmc
test
insb
imul
test
out
hlt
and
loope
mov
out
adc
push
lret
inc
mov
or
push
inc
push
mov
sbbl
mov
mov
fsubrl
je
lcall
dec
std
xlat
pushf
inc
cli
dec
data16
sub
sti
pushf
rcl
mov
add
inc
mov
sbb
pop
leave
sub
cmpl
mov
mov
xor
test
lods
fxch
or
or
jecxz
sub
lods
lcall
dec
and
mov
arpl
stos
roll
mov
or
sub
fistps
iret
pop
out
cmp
or
fsubrl
rcrb
mov
or
mov
xchg
icebp
pop
dec
lock
and
mov
ss
out
fpatan
daa
and
sbb
lret
js
icebp
jle
jmp
les
mov
imul
les
dec
mov
into
pop
cwtl
and
test
fs
and
inc
lcall
mov
pop
push
jl
vmovq
sub
mov
jne
pop
pop
arpl
movsb
hlt
pop
sbb
inc
ficomps
cmp
add
jo
and
sarb
push
xchg
outsb
xlat
arpl
pop
ror
and
lret
lahf
addr16
stos
arpl
movsb
pop
movsb
sarb
mov
out
lcall
dec
add
mov
stc
lahf
inc
cmp
xchg
xchg
addl
ficoms
xchg
xchg
in
rcr
xorb
scas
push
in
lret
shrb
popf
int
adc
sahf
sti
lcall
loop
lcall
test
mov
fnstenv
mov
fstpl
std
push
cmp
and
fcoms
out
rorl
ficomps
cwtl
aaa
negl
daa
cmpsl
fstps
pop
mov
in
adc
dec
pop
or
push
pop
mov
das
je
in
adc
mov
mov
cld
cmp
dec
jae
std
cmp
sbb
scas
pusha
or
inc
or
mov
push
inc
stc
test
jl
and
xchg
sub
adc
jno
xor
push
ret
sbb
outsl
mov
aaa
jnp
pop
mov
icebp
jno
jmp
das
sbb
xchg
pop
jno
jl
mov
add
add
and
xchg
dec
sbb
fdiv
es
iret
mov
xorb
sub
jae
lcall
dec
xchg
rcrl
add
aas
mov
add
cs
jo
es
fcoml
jge
inc
into
cmp
cmpsb
xor
mov
dec
popf
mov
fwait
dec
outsl
ret
into
mull
mov
ljmp
movsl
add
fstps
cli
nop
loopne
mov
fcoml
mov
je
iret
ret
hlt
pop
xchg
jnp
inc
xchg
call
jg
push
or
in
mov
cld
mov
out
cli
hlt
inc
lahf
mov
xchg
adc
ljmp
mov
fbstp
stos
add
sahf
pop
imul
cmp
ds
mov
pusha
ljmp
ret
push
test
idivl
data16
mov
scas
bound
jno
gs
aaa
push
sbb
mov
rcrb
into
mov
pop
bound
push
xor
aad
inc
push
jae
add
inc
fwait
aam
shl
test
leave
mov
push
sub
mov
xlat
cs
or
pop
hlt
pop
xorb
pop
or
jmp
pop
add
mov
add
dec
cmpsl
push
std
into
in
inc
cmp
ret
ja
repnz
jns
mov
push
push
das
xorb
loop
dec
pop
jno
mov
mov
add
daa
es
jge
add
cmp
xchg
and
push
stos
push
cmc
inc
xchg
das
lds
dec
lods
xchg
and
push
or
xchg
mov
stc
jge
leave
add
cmpl
sahf
pushf
arpl
xchg
or
dec
xlat
bound
dec
pop
push
xlat
stc
lock
xchg
test
pop
ss
adc
test
test
cli
jne
adc
xchg
mov
jle
cmp
sbb
aad
loopne
cmp
movsb
ja
xchg
mov
jmp
lds
movsb
jmp
movsl
insl
pop
sbb
xor
dec
rorb
xor
iret
es
icebp
sahf
filds
aas
in
gs
std
orb
mov
jle
push
add
lcall
push
sbb
lahf
mov
outsb
jg
sarb
xchg
icebp
lds
mov
fdivl
cmp
outsb
adc
mov
sbb
fidivrs
inc
mov
mov
jle
inc
sbb
mov
sbb
fwait
pop
addl
cmp
shr
daa
and
mov
or
lock
xchg
mov
or
pop
and
pop
sub
shlb
and
push
arpl
fdivl
cmpsb
jae
loopne
inc
mov
rclb
mov
and
aas
adc
or
fucomp
cmp
add
addr16
mov
push
jae
cmpsb
jae
inc
pop
movsb
sbb
ljmp
mov
inc
cmpsb
push
ret
lret
test
stc
jecxz
pushf
dec
outsl
jp
and
lea
imul
add
mov
sbb
es
mov
sub
call
sbb
sub
movsl
jb
das
fyl2x
shll
sarb
sbb
lods
dec
adc
pop
jge
aaa
out
pushf
jne
cli
lcall
das
hlt
je
cmp
dec
jno
dec
cmc
jb
sub
xchg
push
dec
rclb
dec
mov
mov
mov
test
int
sub
std
xchg
mov
cwtl
jecxz
in
les
std
jmp
sahf
scas
loope
mov
and
mov
cmpsl
mov
mov
or
fchs
aad
mov
xchg
andb
push
mov
in
data16
or
pop
jmp
jg
lret
imul
or
lea
aas
aaa
std
mov
pusha
aad
lods
jmp
xchg
adc
mov
test
icebp
sbb
mov
dec
fimull
cli
add
mov
mov
das
iret
inc
mov
insb
aaa
stos
ret
mov
mov
mov
xchg
xchg
mov
and
dec
pop
lcall
push
loopne
or
mov
or
das
xchg
xor
cli
cmpsb
add
outsl
inc
lods
push
fldt
inc
and
mov
jl
jo
cld
neg
mov
push
push
test
repz
icebp
pop
out
mov
sbb
dec
loope
cli
push
repz
xchg
push
xchg
imul
cmp
sbb
jle
int3
cmpl
data16
push
pushf
pushl
test
add
lods
gs
rclb
flds
mov
cmp
insb
loopne
sahf
fstpt
sub
jl
adc
lock
adc
sbb
cs
mov
cltd
cwtl
adc
jnp
cmp
inc
frndint
inc
lcall
fxch
inc
push
test
movsb
mul
jbe
pop
int3
sub
flds
fnsave
jle
das
mov
frstor
or
pop
sub
test
or
cmp
out
xchg
pop
xchg
test
xor
mov
shrb
and
shr
add
shr
frstor
sub
pop
repz
flds
pushf
in
popf
add
mov
incb
popa
into
xorb
fdivrl
repz
pop
nop
ja
popf
sub
call
dec
aaa
adc
xchg
ss
and
mov
and
mov
test
daa
clc
sub
jmp
pop
cmpsl
add
clc
adc
js
or
xor
mov
mov
xor
in
loopne
dec
fisttps
sub
adc
movsb
xor
int3
jge
add
sub
jnp
add
push
je
je
cmc
pop
xor
or
les
ja
int3
es
push
enter
sbb
iret
mov
xor
loope
lret
or
jae
jg
sub
outsb
lods
mov
pop
adc
and
fwait
test
shll
adc
scas
in
inc
adc
inc
cwtl
negl
or
sti
jne
xchg
xlat
cwtl
xor
shr
in
subl
add
xor
cmp
xchg
subl
jae
pop
push
sbb
jae
mov
sub
ss
stos
stos
pop
add
aam
out
xchg
in
mov
loopne
and
iret
stc
xor
adc
jb
xchg
cwtl
mov
sub
and
enter
pop
inc
pop
mov
cmc
jg
sub
mov
pop
mov
lock
xchg
mov
lds
push
jg
dec
into
add
mov
or
or
mov
or
sahf
movsl
popf
mov
bound
dec
xchg
fwait
lds
test
jle
push
push
push
add
push
iret
dec
mov
mov
rcrb
dec
jle
xor
dec
or
mov
cmc
cmp
sbb
sbb
scas
aam
xor
adc
mov
mov
shl
mov
nop
or
pop
xchg
daa
cmp
iret
std
mov
bnd
sub
push
sbb
pop
popa
pop
fmull
popa
fcoml
xchg
fstpt
test
fimull
test
xchg
push
mov
push
fists
or
pop
pop
cli
cmp
inc
lahf
xor
fdivs
sbb
xchg
jb
add
aaa
testb
and
mov
jg
sbb
fidivl
lcall
inc
inc
mov
imul
or
mov
sub
daa
jno
xchg
into
adc
loopne
loopne
mov
or
push
out
shrl
and
sti
cmp
sbb
adc
adc
mov
repz
ss
mov
movsb
jl
testl
or
fisttpll
xor
jmp
data16
pop
cli
or
mov
xor
arpl
xchg
and
nop
fnstenv
rcll
loopne
xchg
xchg
dec
push
and
popf
sbb
mov
enter
mov
jge
adc
in
aaa
mov
aam
xor
xchg
rorl
in
fs
xchg
daa
fprem1
push
mov
sbb
jne
mov
sub
xlat
fxch
lret
loopne
lcall
mov
push
xchg
sbb
sub
scas
int
dec
add
jg
inc
rcll
faddl
push
cltd
fmull
and
cmc
dec
mov
jl
xor
cli
pop
or
pop
xor
sub
cs
out
std
xchg
dec
lods
cwtl
sbb
ds
shll
jbe
sub
inc
out
jecxz
fnsave
and
cmp
sarl
out
xchg
das
mov
popf
ja
pushf
arpl
jnp
pop
pop
xchg
xchg
xchg
jne
rorb
daa
mov
or
cwtl
lea
imul
sub
sbb
sahf
push
inc
fsubrs
or
gs
orb
mov
popa
xchg
pusha
je
or
adc
mov
test
push
sub
daa
lret
jne
rcr
icebp
fiaddl
stos
push
mov
mov
nop
subl
push
hlt
add
dec
push
shll
push
lcall
fwait
shrl
pop
orb
stc
lcall
ljmp
into
mov
in
arpl
bound
decb
mov
movsb
cmp
push
pop
or
insl
xor
dec
xchg
sub
lock
dec
inc
into
mov
clc
lcall
push
jge
outsb
gs
shl
cmp
jmp
pmulhuw
adc
xor
xchg
shlb
js
or
int
fnsave
xchg
lahf
sbb
repnz
jo
cmp
inc
or
inc
xchg
ret
dec
fnstenv
subl
pusha
rcrb
in
add
inc
testl
mov
mov
mov
sahf
sub
add
cmp
pop
imul
fldl
imul
lds
push
sbb
jle
ret
fidivs
push
leave
cwtl
mov
sbb
imul
dec
lret
jecxz
popa
jb
popf
cli
push
xlat
fstp
nop
or
repnz
jp
xchg
inc
push
mov
addr16
leave
mov
push
rcl
push
lds
adc
gs
fisttpll
push
xchg
mov
jbe
or
dec
addl
fsubrs
or
jle
mov
aaa
and
mov
lock
leave
scas
adc
pusha
sub
bound
add
pop
insb
shrb
iret
dec
mov
cwtl
mov
and
jno
cmp
in
pop
xchg
notrack
sub
mov
push
hlt
inc
mov
push
cs
adc
scas
lds
dec
insl
add
inc
lcall
mov
or
add
xchg
or
icebp
imul
shlb
or
cli
cmpsl
sarb
jmp
negb
jecxz
rcl
add
adc
popf
in
mov
scas
stc
pop
cltd
outsl
mov
fcmovb
xlat
sub
sbb
push
push
sahf
in
adc
stc
insl
call
inc
pop
inc
iret
test
scas
fs
ud0
repnz
test
loope
lret
mov
lret
xor
movsb
test
pop
mov
aas
mov
mov
pop
fsub
push
call
js
jmp
loopne
aaa
lods
aas
hlt
push
jae
pop
sahf
jbe
mov
push
mov
shll
js
lahf
mov
popa
orl
mov
or
iret
cmp
test
mov
test
arpl
jne
lcall
int
je
and
mov
mov
cmp
rorb
xchg
sub
push
gs
adc
and
movsl
ss
imul
repz
aad
in
clc
popa
popf
lret
icebp
das
repz
dec
mov
jns,pt
push
mov
jp
xchg
lds
sub
push
in
push
sbb
popa
test
je
rcr
mov
loop
adc
hlt
sar
dec
adc
mov
pop
sbb
pop
pop
push
stc
sti
adc
xor
lea
mov
dec
add
push
jns
les
out
dec
pop
mov
imull
popa
int3
push
ret
negb
fisttpll
stc
out
dec
adc
outsl
add
push
fcompl
imul
scas
push
mov
cs
notb
adc
fxch
fistl
mov
push
rol
jb
mov
push
fs
sbb
cwtl
adc
push
cmp
mov
jp
sarl
fisubs
dec
rcrb
adc
sub
xor
loope
or
je
jge
fcmovne
or
xor
shl
outsl
adc
mov
insb
jne
test
add
xchg
push
adc
int3
bound
sub
int3
or
dec
and
mov
loopne
and
add
gs
bound
or
push
fisttps
mov
and
fdivrl
xor
int3
fidivs
into
movsb
sbb
fsubl
cmp
mov
pop
jno
push
push
test
push
lods
mov
jb
pop
and
xorb
xor
dec
lods
imul
jnp
jle
fnsave
cltd
xor
mov
xchg
sub
xor
lds
jno
jle
mov
pop
icebp
mov
adc
push
lcall
imul
jecxz
rcr
ss
mov
push
in
bndstx
jl
pop
and
pop
sbb
mov
mov
push
hlt
push
nop
jo
fs
das
xor
enter
pcmpgtb
popa
mov
loop
adc
das
jnp
enter
loop
mul
pop
push
mov
push
in
or
cmpsl
xchg
cld
mov
push
mov
dec
lahf
jmp
sub
cmp
pushf
or
pop
mov
movsl
cwtl
mov
in
push
and
outsb
pop
lcall
cmp
xor
mov
add
sti
mov
lea
clc
and
push
lret
cmp
setge
mov
aad
out
adc
mov
or
mov
mov
faddl
dec
cmpsb
int3
and
lods
xchg
mov
imul
or
je
scas
jge
ficomps
clc
bnd
or
in
adc
int3
mov
push
fisttpll
or
dec
cli
push
mov
rcrb
sarl
rclb
inc
cmp
mov
sbb
in
stos
cli
shll
loope
es
outsl
dec
fwait
ret
bound
aam
sub
aad
cmp
pop
hlt
lret
and
scas
xor
lds
xor
mov
lcall
ljmp
pop
adc
pop
mov
in
popa
mov
cmp
cmp
pop
outsl
fists
inc
into
or
lret
xchg
sub
mov
aas
loopne
jo
imul
dec
add
adc
sbb
aam
cli
js
out
xor
sub
mov
mov
pop
cltd
dec
mov
mov
repz
sub
je
push
mov
pop
add
fwait
stos
dec
sub
cmp
push
pop
into
jns
out
lret
push
leave
dec
movsl
bound
jmp
fidivrs
xor
lock
lcall
inc
pop
in
sub
jnp
jmp
decb
adc
and
mov
fcomip
jne
cmpsb
jge
mov
mov
test
fldt
inc
out
cli
dec
mov
pop
mov
subb
xchg
mov
imul
pop
insl
inc
xchg
push
into
cmp
sub
push
and
adc
push
pop
xor
or
pop
cmpsb
icebp
jno
dec
shll
aaa
dec
int3
mov
packssdw
out
add
mov
lret
lahf
sub
fistpl
mov
ds
xor
daa
inc
pop
lods
jno
cmp
std
js
mov
lods
jnp
cli
ljmp
inc
flds
es
shll
sar
test
inc
cmp
aad
adc
inc
movsl
repnz
data16
stos
jle
clc
mov
dec
and
pop
push
xchg
jno
nop
xchg
xlat
icebp
fcom
xchg
leave
xchg
pusha
adc
movsb
xor
sub
loopne
xchg
inc
push
iret
xor
pop
sub
pop
stc
cmp
mulb
adc
dec
pushf
xor
cmp
cld
xor
push
jge
xor
and
xchg
sbb
cmp
repnz
int
dec
cmc
arpl
mov
cmpsb
add
adc
das
bound
adc
xchg
lods
sbb
aam
xchg
fiaddl
ret
call
fs
and
out
cld
dec
arpl
xor
in
dec
frstpm(287
repz
test
xor
xor
rolb
outsl
adc
bound
scas
xchg
inc
mov
mov
sbb
jge
xlat
xchg
or
xor
or
cmp
bound
cmp
dec
lods
jno
out
stos
cmpsb
outsl
cwtl
pop
pop
fsubl
out
inc
inc
cs
cmp
jne
mov
xchg
loop
pop
mov
push
and
leave
xor
xchg
xlat
sahf
stos
fnstenv
inc
mov
mov
or
imul
test
insl
fcomps
sbb
fstpt
repnz
cwtl
in
cmp
leave
jo
lods
mov
jle
pop
inc
push
sub
sbb
shll
cli
hlt
fnsave
clc
idiv
inc
sahf
pop
pop
mov
push
sbbb
jp
mov
add
repz
icebp
imul
out
mov
push
cmp
cmpsb
fdivrs
hlt
inc
mov
cmpsl
or
sub
jo
cli
sub
testb
jl
pop
insl
in
adc
pop
mov
sbb
xchg
in
jmp
sarb
fstpl
out
push
mov
icebp
push
test
adc
div
test
jns
outsb
mov
adc
pop
adc
daa
sub
inc
fisubrs
add
mov
hlt
lcall
daa
test
add
jnp
stos
dec
jl
aas
fimuls
testb
fmull
inc
insb
mov
pushf
cld
cld
push
mov
rolb
movsb
mov
or
push
and
xor
ds
cmpl
sbb
adc
sbb
and
cli
out
inc
shlb
addb
ds
jns
shll
mov
cmc
fwait
xor
dec
or
ja
mov
or
mov
mov
ds
and
popa
and
cmpsb
and
pop
lods
xchg
cltd
jno
cmp
add
push
lret
ljmp
repnz
sbb
xchg
jecxz
in
test
push
loop
or
fmull
arpl
cmp
stos
push
stc
inc
dec
push
in
or
lock
stos
dec
sub
stos
scas
outsb
pushf
int3
loop
sar
fidivrl
and
out
outsb
insb
pop
pextrw
jne
es
aas
outsl
xchg
push
push
inc
imul
cmp
pop
push
add
out
out
dec
rcrl
andl
fcompl
sbb
popa
xor
push
ds
xchg
mov
or
sbb
or
jne
jae
arpl
test
fmul
adc
inc
add
xchg
adc
pop
out
xor
rcrl
xchg
idiv
aam
subb
push
imul
adc
fldenv
sbb
dec
and
push
add
cmp
add
faddp
out
xorl
fs
mov
shrl
mov
inc
shrb
cmp
das
cmc
iret
xchg
and
xor
std
dec
pop
mov
ret
cltd
add
mov
xor
cmpb
ret
push
bound
ffree
daa
inc
lds
outsl
clc
cmp
push
mov
lds
stos
cmp
jge
sbb
mov
adc
xchg
movsb
out
push
add
bswap
lods
cmpsl
add
adc
xchg
lods
mov
arpl
iret
mov
fdivrl
mov
sub
pop
imul
lahf
sub
addr16
or
or
jnp
xor
bound
mov
mov
leave
dec
xchg
push
cmc
jns
mov
fcos
arpl
call
add
push
mov
lock
fmuls
or
inc
lea
cmpsl
mov
bound
mov
or
pop
push
jge
mov
inc
fbstp
xchg
imul
pop
hlt
test
cmpsb
add
sbb
hlt
cmpb
fucomi
sub
andb
cmpsl
xchg
popa
cmp
rclb
lahf
outsl
adc
mov
add
jg
stos
popf
mov
or
rcll
faddp
leave
sbb
stos
cs
movsb
push
lods
shr
jne
add
mov
sbb
int
jae
popa
call
and
sbb
add
mov
outsb
outsb
or
notb
mov
stos
pop
mov
and
into
rcl
pop
popa
ss
sarl
sbb
sbb
fwait
js
lods
or
adc
stc
std
negb
cmp
loop
dec
jp
cmp
or
jnp
jge
and
and
aad
fisubl
sahf
inc
sub
or
mov
cmp
int
pop
sub
xchg
enter
push
call
jle
pop
mov
in
and
xlat
or
es
dec
dec
add
repnz
inc
and
pop
fsubl
push
sub
dec
fwait
dec
sahf
jmp
sub
pop
or
cmpsb
pop
test
pop
inc
add
jmp
dec
jb
and
insl
or
push
jae
pop
pop
ds
lods
hlt
fld
in
mov
jge
lods
xchg
in
cmp
orb
adc
push
mov
pop
int
popa
jp
inc
jp
lret
outsl
int3
mov
xchg
inc
sbb
roll
sub
mov
call
mov
push
divb
outsb
or
mov
ret
add
mov
fdivrp
sub
test
orb
add
pop
sbb
jne
fmulp
and
pop
ss
in
push
je
push
cmpsl
pop
out
mov
mov
mov
sbb
into
adc
imul
inc
xchg
out
repz
mov
inc
fwait
push
loope
shll
aam
bound
test
cld
pop
sub
rcrb
cmpsb
in
push
lret
xchg
cmpsl
mov
cmp
sub
addb
cmp
aam
in
adc
sbbb
test
jl
mov
stos
mov
mov
and
and
xchg
jns
bound
stc
arpl
bnd
push
pop
pop
dec
jo
in
mov
cmp
stos
sbb
aam
shrl
xchg
loope
sbb
call
imul
push
in
gs
xor
sbb
hlt
mov
into
sbb
or
xchg
packuswb
push
imull
mov
inc
jne
push
cmp
push
cmp
rol
test
arpl
push
xchg
bound
das
imul
movsl
test
and
sbb
aas
xor
aam
int
add
push
sbb
call
mov
aaa
push
xor
push
inc
dec
mov
shrb
pop
and
inc
sub
adc
and
rol
xchg
mov
movl
fwait
aas
lret
aam
lahf
scas
sub
jecxz
xor
jg
mov
popf
in
push
out
push
jnp
pop
into
push
dec
repz
loop
scas
adc
int
adc
dec
js
inc
je
iret
xchg
aam
push
dec
xor
xchg
rorl
mov
and
in
and
pop
out
and
push
mov
cmpb
out
sub
jae
das
dec
aad
pop
imul
push
lret
push
loopne
dec
xor
mov
jns
lret
js
call
push
push
jecxz
push
fisubrs
movsb
or
insb
addl
aam
ret
clc
pop
out
xor
fucomi
mov
leave
mov
push
jp
insl
sub
nop
and
jle
out
sbb
inc
cmpb
mov
pop
out
jg
ret
sub
stos
mov
push
dec
adc
popf
inc
lods
rcrb
push
test
pop
mov
pusha
fwait
lret
faddl
sahf
shl
aam
scas
xor
in
cmp
mov
insl
push
mov
adc
sub
pop
inc
jg
lret
push
call
movlhps
mov
rcl
mov
xchg
lea
out
mov
dec
in
sub
enter
push
inc
mov
pop
scas
inc
and
lods
jmp
jne
jae
stos
adc
clc
mov
orb
push
xlat
daa
subb
sbb
mov
outsl
xchg
cmovb
cmpsl
dec
pop
mov
and
inc
aad
or
mov
mov
imul
movsl
addr16
data16
sub
dec
jmp
imul
xor
cmp
mov
roll
repz
xchg
jnp
add
mov
scas
enter
data16
mov
leave
mov
scas
or
push
jno
sub
jmp
rorb
pop
or
fistpll
test
xchg
cmp
fsubrp
dec
push
sub
pop
shl
and
jo
gs
cmp
xor
divb
testb
mov
xchg
repnz
pop
dec
add
mov
mov
push
mov
mov
ds
add
and
jmp
lcall
rol
aas
inc
mov
dec
leave
and
jp
cmpsb
mov
aas
sahf
lret
loop
xor
iret
xchg
mov
adc
jl
cmpsl
mov
mov
ja
or
jp
pop
data16
ja
imul
test
and
inc
shll
push
inc
push
icebp
and
adc
add
out
rcrl
int
in
ja
out
in
mov
call
sbb
push
loop
in
ja
xchg
jns
into
adc
imul
repz
nop
mov
and
sub
push
cmp
cli
lret
pop
ret
in
hlt
and
int3
popf
add
mov
fs
xchg
and
push
push
cmp
es
push
mov
and
data16
mov
inc
xchg
inc
cld
sub
mov
aas
cmpsl
stos
sbb
cmp
ret
push
dec
in
mov
push
jge
dec
int
pop
jmp
inc
insb
mov
lods
lock
pop
sahf
call
fs
pop
fisubs
pop
dec
mov
jge
mov
mov
idivb
stos
jle
daa
ja
and
and
pop
mov
mov
jle
xor
push
popf
lods
stos
dec
xor
cmp
test
push
loop
inc
js
cmp
xor
push
lods
sub
and
mov
aad
das
or
loop
push
cmp
and
arpl
rcrb
jg
ljmp
imul
pop
outsb
cmpsb
adc
mov
loop
cs
jno
cmp
xor
mov
sarl
push
ja
mov
mov
mov
lods
push
es
test
push
aam
jecxz
pop
enter
pushf
dec
call
inc
mov
scas
cmc
cwtl
ret
aaa
repz
daa
lods
call
push
mov
sbb
add
fisubrl
xor
lods
adc
subl
imul
and
push
clc
pop
mov
push
sbb
xchg
mov
mov
mov
imul
push
inc
gs
lcall
mov
ret
inc
pop
or
dec
push
scas
cltd
mov
lds
lcall
push
out
inc
jecxz
or
push
int
and
pusha
daa
fnstenv
add
pusha
add
mov
ja
adc
xor
push
test
inc
pop
lods
cmp
jns
sahf
jo
outsb
mov
dec
xchg
shrb
push
push
add
gs
push
push
lcall
sbb
lahf
scas
ffree
rorl
jno
aam
dec
and
mov
sbb
rorb
mov
loopne
cmp
jbe
loop
scas
mov
jno
mov
sub
loopne
mov
int3
and
sub
dec
cmp
cmp
out
sahf
and
add
mov
add
jns
cmpl
xor
negb
sub
in
sahf
pop
dec
fdivr
pop
adc
orb
xchg
nop
xchg
cmp
fcomi
scas
in
mov
adc
inc
jne
out
mov
and
pop
cmp
fcmovb
push
inc
aas
pop
out
fisubl
int
leave
pop
pushf
xor
movsl
jmp
lods
pop
xchg
sub
ja
push
cmp
inc
gs
push
or
test
jmp
mov
push
test
ret
pop
ret
das
xor
jnp
mov
jno
xor
loopne
nop
push
push
fsub
xor
fisttpl
rorl
and
mov
xchg
xor
cmp
inc
pop
imulb
mov
jmp
jno
mov
and
mov
jno
xlat
and
jns
inc
mov
mov
fcomip
test
cli
gs
sub
loop
push
cmp
push
notl
fwait
ret
mov
insl
adc
insl
xor
sub
insb
inc
push
negl
std
in
std
ljmp
mov
push
iret
pop
adc
nop
jle
xchg
push
cltd
lret
mov
repz
popf
or
pop
or
sbb
stos
push
das
pop
insl
fisubrl
and
cmp
mov
mov
push
bnd
pop
adc
stos
jno
mov
in
xlat
pop
addr16
add
xchg
and
jne
sbb
subl
push
sub
sub
cmp
or
dec
ja
dec
test
sub
lock
xchg
dec
lahf
or
mov
mov
cmpsb
xchg
push
loop
out
xchg
xchg
mov
xchg
nop
out
push
xchg
jne
imul
add
stos
mov
jmp
loopne
jecxz
in
or
cmp
outsb
jge
ficoms
idivl
sub
pop
push
shr
ror
sbb
push
xchg
mov
insb
cmp
sarl
imul
mov
xchg
adc
xor
or
and
stos
mov
and
jae
jns
pop
out
movsl
xor
adc
lahf
push
lahf
ret
mov
xlat
xchg
jmp
scas
mov
in
mov
pop
std
xchg
fsts
dec
fldl
sub
or
clc
cltd
cmp
jp
jb
stc
repnz
inc
jo
and
add
xor
sub
sub
jbe
xchg
mov
mov
sbb
sub
jns
es
add
lock
in
xor
in
add
and
pop
or
add
flds
cmc
dec
dec
lock
adc
sahf
pop
jecxz
imul
gs
xor
xchg
jnp
idivb
xchg
mov
jge
xor
mov
int
popf
int
enter
decl
adc
add
frstor
movsl
and
cmp
lock
push
aas
bound
lahf
arpl
mov
rolb
push
test
jmp
cmp
rcl
xor
stos
fnstenv
idiv
insl
xchg
cs
lea
push
xlat
and
fdivrp
sub
mov
lods
movsl
push
push
inc
sti
inc
mov
popf
sub
data16
push
sbb
stc
into
fsubr
outsl
and
clc
adc
subb
lret
clc
and
loopne
adc
pop
fisubrs
mov
push
push
shrl
andl
xor
addr16
push
lods
jl
imul
aam
sbb
mov
arpl
sti
jb
xchg
std
sbb
adc
and
dec
dec
push
adc
lcall
add
or
mov
pop
test
fwait
ds
xor
aas
nop
jbe
mov
js
imul
nop
add
movsl
cmpsb
scas
pop
adcl
ss
jae
mov
mov
movsb
add
imul
jecxz
xor
or
mov
adc
bnd
jmp
sub
hlt
adc
fnstcw
in
popf
lret
loope
imul
in
jle
arpl
aam
dec
cmp
ds
jg
mov
mov
push
xor
ja
xchg
xchg
inc
addl
push
mov
enter
pop
mov
push
dec
in
dec
mov
sub
mov
xor
cmp
xor
shll
jp
mov
xchg
dec
mov
mov
in
outsl
add
jmp
add
arpl
xchg
inc
sub
imul
shll
or
or
fbld
or
sub
mov
ljmp
lea
push
out
jmp
inc
adc
add
pushf
dec
shlb
jae
dec
insb
stc
fsts
sbb
lods
lock
ss
mov
aas
hlt
mov
out
sub
cmp
stos
ljmp
xchg
orb
or
jl
stos
pusha
sarl
mov
jbe
and
out
jnp
dec
mov
or
cs
mull
jmp
fdivs
repnz
push
pop
inc
xchg
dec
push
lcall
mov
xchg
add
pushf
xlat
outsb
push
insl
dec
mov
cmp
jbe
lock
sbb
jp
insb
xchg
mov
xor
jne
outsb
xchg
adc
enter
mov
movsl
mov
data16
xor
repz
push
js
aad
cltd
pop
popf
jo
repz
add
test
xchg
inc
insb
mov
and
das
mov
movsb
ss
addr16
sbbl
push
test
or
negl
hlt
jge
test
popa
sbb
pop
inc
jb
scas
xrelease
cmp
test
pop
call
xorl
dec
jns
mov
and
int
enter
enter
out
mov
and
jle
in
insl
sbb
jns
or
mov
clc
mov
add
daa
orl
push
sub
jns
mov
jns
and
adc
mov
sub
shrb
cs
xchg
negl
rorl
sub
mov
dec
push
inc
xor
cli
jo
add
popa
add
call
dec
inc
cmp
jmp
mov
pop
scas
mov
repz
cltd
add
pop
cmp
cmp
mov
test
xchg
ds
xchg
xchg
adc
pop
in
outsb
imul
dec
xlat
call
mov
jbe
and
add
gs
mov
js
fstl
mov
mov
adc
mov
mov
lcall
mov
cld
push
dec
mov
mov
fmuls
addr16
adc
dec
in
cli
mov
jno
insl
fistpll
pop
mov
xor
pop
or
fimuls
in
arpl
and
push
cmp
jmp
lea
mov
mov
cmp
js
iret
scas
push
hlt
jns
mov
je
test
int
mov
imul
into
or
mov
imul
add
add
sbb
add
inc
pushf
jl
pop
mov
mov
xchg
mov
xchg
mov
int
sbb
int3
pop
jle
adc
cmpsb
cmp
mov
xchg
mov
mov
insb
mov
xor
inc
cmp
adc
xchg
push
pop
int3
fwait
negb
call
iret
and
push
push
lock
into
arpl
loopew
lds
push
xchg
cli
and
jb
jnp
mov
in
cmp
push
inc
xlat
rclb
push
in
sub
or
shlb
or
daa
sbb
out
lds
int
add
ja
cmp
mov
mov
int
jecxz
mov
adc
dec
push
push
xchg
or
jnp
pop
popl
fcoms
add
pop
xchg
pop
push
mov
pop
pop
into
pop
adc
inc
cwtl
ja
fstps
fimuls
imul
sbb
lahf
insb
sub
xor
cmp
shll
jo
movsl
dec
lods
das
es
xorl
out
inc
cmp
iret
stos
xchg
inc
push
lods
mov
add
inc
mov
adc
aam
mov
mov
mull
lcall
stc
sub
pop
jg
lret
inc
outsb
sub
mov
mov
test
frstor
dec
js
adc
or
insl
je
idivb
daa
and
popa
pop
xchg
pop
sub
mov
cmc
gs
imul
xchg
ds
loop
divl
mov
xor
hlt
and
mov
stos
and
add
sbb
mov
dec
xchg
cmpsl
lcall
jg
lods
sbb
or
xchg
test
test
lds
pop
cld
stos
pop
ja
ljmp
pop
and
cmp
aas
cmpsb
mov
lahf
add
xchg
and
push
jecxz
movsl
out
out
insb
xchg
mov
mov
dec
out
xchg
xchg
push
lods
rcl
dec
sub
mov
sbb
sub
dec
pop
xchg
push
fwait
decl
add
jmp
or
xor
out
jg
push
push
and
sarb
push
xorb
popa
mov
dec
pop
stc
test
jns
mov
mov
xor
cmpl
aam
mov
jp
das
mov
mov
dec
jae
sbb
jns
cmc
int
push
mov
movb
test
cmp
cmp
push
fadds
ds
jb
cwtl
dec
popf
mov
jmp
lret
add
int3
stc
and
pushf
std
jns,pt
inc
or
jge
xchg
jp
lret
mov
jle
or
jmp
pop
cmpl
sub
adc
imul
add
fdivl
scas
mov
or
jg
repnz
cmpsl
hlt
and
lock
fwait
sti
cmp
in
outsl
negb
aas
mov
lret
xchg
shrb
stc
das
or
add
dec
shll
mov
pusha
sbb
xchg
bound
pop
mov
pop
push
mov
pop
mov
ljmp
jns
inc
xchg
adc
aam
or
in
int
and
pop
jo
clc
cmpl
mov
cmp
add
outsb
fwait
hlt
cmp
mov
movsl
outsb
lods
dec
rclb
cmp
pop
sub
xchg
xlat
dec
in
sbb
push
int
out
push
or
fcomp
aaa
cmp
pop
faddl
mov
jb
cltd
decb
jb
lahf
and
lahf
xor
scas
icebp
xchg
call
rorb
xor
je
push
xor
leave
lods
imul
jg
ljmpw
pop
sbb
insl
cmp
push
jmp
or
xorb
mov
out
mov
stos
pushf
aam
push
nop
int3
inc
mov
push
fcmove
cli
adc
mov
inc
cltd
lcall
scas
adc
ret
lahf
das
xchg
sub
push
adc
lcall
sahf
lock
mov
repnz
inc
testl
pop
lods
pop
push
cmpsl
cmp
lock
add
inc
jmp
dec
imul
mov
jle
mov
sub
lods
rol
je
push
ret
add
arpl
pop
out
xchg
aas
add
aam
cmp
test
push
int
lcall
add
lret
cmp
sbbl
mulb
mov
cmp
mov
flds
mov
xor
or
push
xchg
mov
cli
xchg
jbe
sub
xor
stc
xchg
in
iret
pop
xor
and
pop
stos
popl
ja
idivb
xchg
jle
xor
cmp
das
add
movsb
xchg
dec
jo
stos
loop
mov
lds
cmp
xorl
pop
mov
or
push
lret
xchg
sub
stos
mov
xor
faddl
and
and
mov
mov
in
cmpb
sub
lods
xor
cmpsb
mov
out
pop
mov
dec
xchg
repnz
dec
push
xor
xchg
sub
sbb
lock
in
pusha
add
ss
pop
das
movl
fsubrs
ljmp
rorb
and
fdivrs
add
pop
mov
fwait
sbb
sahf
movsb
inc
test
leave
in
mov
mov
test
add
xor
movsl
movsl
nop
xchg
fnsave
les
xchg
in
mov
ljmp
aad
in
pop
test
mov
outsl
mov
dec
sahf
aas
push
cmp
dec
cmpsb
cmpsb
pop
push
pop
add
mov
mov
cmp
cmpsl
movsb
cmc
in
hlt
mov
hlt
ret
jbe
fsubrs
fcoml
gs
pop
test
mov
mov
sub
scas
fadd
outsb
loop
in
stc
xchg
into
xor
mov
ret
add
arpl
pop
sub
cwtl
inc
stc
cmp
ret
pusha
outsl
lds
push
sbb
inc
mov
or
jae
or
xchg
out
popa
mov
push
and
int
in
inc
push
pop
pop
jbe
in
sub
xchg
stos
push
xor
mov
fmuls
test
dec
mov
push
pop
sub
pushf
push
or
mov
faddl
dec
inc
test
js
mov
fwait
pop
sbb
orb
daa
mov
in
xor
mov
std
add
cmp
mov
aad
fsubr
cmp
lret
ret
dec
movsl
inc
xor
dec
or
inc
cmp
sub
jl
dec
iret
adc
aad
or
aas
jno
sub
add
jbe
pop
insb
inc
loopne
test
push
inc
fimuls
in
sbb
jae
je
mov
jmp
mov
push
inc
sub
inc
pop
imul
mov
push
aad
pop
push
jo
and
pop
mov
dec
addl
out
jle
jg
ss
movsb
pushf
cmpsb
mov
jl
imul
imul
xchg
push
jmp
xchg
jle
insb
or
cmp
insl
shrl
xchg
sahf
and
sbb
pushf
mov
sub
rorb
mov
sar
daa
cmp
xorb
mov
adc
pop
mov
mov
sub
dec
fbstp
cmp
idiv
fists
jae
mov
push
arpl
xchg
sahf
push
cmp
push
xor
jecxz
stc
addl
popf
fidivrs
lahf
ffree
xchg
jmp
cmc
test
movsb
jnp
add
cmp
and
push
sub
fistps
lea
ficompl
mov
rclb
in
mov
or
adc
lods
orb
sbb
test
in
jmp
mov
mov
push
test
addr16
in
adc
pop
insb
or
mov
mov
and
testl
ret
sahf
or
mov
push
push
or
push
or
mov
pushf
sbb
mov
add
jbe
arpl
insl
data16
and
cmp
sti
out
scas
push
int3
pop
cli
fs
into
leave
jbe
fidivs
inc
fcmove
jl
sti
lret
stc
dec
aam
jns
stc
xchg
lret
xlat
or
inc
out
xchg
inc
jg
jg
aam
repnz
xlat
and
nop
sub
sbb
xchg
inc
fwait
mov
sub
in
repz
ret
pushf
movsb
imul
mov
scas
rorl
ror
cwtl
pop
imul
rorl
shlb
pop
jae
and
jo
pop
aas
dec
push
jo
adc
fmull
xlat
icebp
rcrb
sbb
mov
insb
push
call
xchg
stc
adc
lea
mov
int3
sti
inc
cmp
sub
cmp
lret
xchg
jg
jmp
xlat
pop
lds
icebp
push
mov
push
push
cmc
shll
inc
rcl
lods
xor
dec
imul
push
fisubl
je
xchg
imul
xor
subb
shl
push
addr16
outsb
dec
jo
roll
cs
xor
jp
es
mov
sbb
and
packssdw
adc
cmp
and
dec
mov
cmpsl
jns
ret
jbe
mov
inc
rolb
adc
adc
cmp
out
cltd
pop
sti
cwtl
insb
xor
xchg
mov
add
xor
addr16
and
cs
mov
iret
les
push
cltd
clc
fisubs
lret
cmp
add
adc
je
add
xor
lret
fs
shlb
rclb
stc
mov
push
dec
outsl
test
or
pop
push
es
icebp
into
push
and
pop
ret
mov
adc
cmpsb
add
sub
mov
jnp
sbb
adc
or
lods
jne
insl
pop
add
inc
lods
sub
sub
add
lahf
xchg
push
inc
adc
push
iret
xor
mov
sbb
jnp
dec
mov
jecxz
and
in
pop
lcall
test
imul
mov
adc
scas
nop
pop
inc
mov
mov
les
jl
sbb
push
in
icebp
cmp
mov
mov
push
icebp
imul
pop
mov
sti
push
xchg
sbb
scas
test
andb
cmp
pop
imul
sub
xchg
adc
lret
fisttpll
and
add
scas
lea
loop
push
clc
mov
out
and
adc
sbb
adc
mov
or
enter
in
enter
mov
mov
andb
add
mov
int
repz
fdivrl
mov
aaa
ds
inc
mov
inc
sbb
push
add
xor
dec
test
mov
lahf
pop
andl
int
jle
inc
cld
ret
lock
fcomps
or
mov
mov
addr16
and
adc
xor
push
jg
adc
in
jnp
and
movsb
rorl
and
outsb
movsb
sub
sbb
adc
fsts
mov
jbe
gs
mov
sbb
or
sahf
adc
ds
add
lret
push
lods
iret
xor
xlat
and
inc
xchg
js
dec
sbb
in
inc
in
test
loopne
add
out
push
dec
shl
jmp
bnd
sbb
jns
pop
test
movl
adc
ja
shrl
popa
mov
sub
sahf
mov
xchg
in
mov
cmpsl
stos
xor
je
sahf
mov
push
shrb
lock
mov
in
imul
je
mov
mov
fs
orb
inc
fs
xchg
dec
loope
popa
enter
fildll
es
outsl
lret
dec
sbb
test
rcr
negb
scas
or
in
mov
sarb
jbe
xchg
or
out
sbb
shll
xor
sub
pusha
or
xchg
push
cld
loopne
idivl
lock
sbb
pop
shrl
int3
jns
cld
fidivrs
mov
ret
fwait
das
movsb
imul
lds
scas
inc
jnp
sub
sbb
dec
js
mov
adc
cmp
mov
push
fdivrl
scas
into
push
sbb
in
cwtl
das
clc
lea
bound
lcall
adcb
pop
or
inc
cmp
inc
sbb
mov
add
out
pop
mov
enter
push
lock
mov
inc
lods
jp
loope
mov
sarl
clc
push
shlb
dec
add
mov
mov
cld
cltd
adc
pop
dec
or
lahf
jno
push
ljmp
repnz
push
dec
jle,pt
adc
xchg
pusha
pop
fildll
mov
mov
outsl
jno
and
int
xor
aaa
xchg
out
cltd
pushf
add
nop
jmp
arpl
xor
push
ret
xlat
or
inc
in
adc
in
sbb
cmpsb
or
imul
lods
arpl
sub
ret
dec
rorb
out
add
jb
inc
and
movsl
dec
idivb
mov
das
mov
inc
sbb
imul
mov
in
sub
cmp
das
fnstenv
mov
nop
push
insl
cmp
pop
mov
push
xchg
and
pop
ljmp
cwtl
loop
push
movsl
ja
imul
ret
xchg
jno
int
lea
sub
std
cmp
rcrl
ret
sarl
ficoms
scas
out
xor
lock
cmc
mov
push
stc
lods
push
sbb
mov
or
leave
movsl
sub
mov
and
lahf
test
sti
aam
ds
add
ss
sub
cwtl
dec
repz
add
sub
enter
adc
sbb
inc
hlt
mov
jge
lock
cli
jmp
mov
pop
ficompl
mov
sub
les
push
and
hlt
std
outsb
mov
loope
pop
sub
mov
add
lods
les
mov
xchg
loopne
mov
scas
xor
adc
stc
rcl
push
ret
pop
push
call
jle
mov
shr
mov
xchg
sbb
pop
sub
mov
jp
dec
sub
iret
mov
dec
pop
andl
in
dec
fiadds
mov
push
pop
and
pop
sahf
aas
cmp
pop
add
stos
dec
loope
jnp
xor
repz
adc
jle
outsb
ss
shll
xor
and
mov
fcompl
xchg
dec
jmp
cmp
sbb
xor
fldt
jl
nop
pop
xor
pop
and
sbb
add
das
sti
adc
imulb
ds
cmpsl
adc
jo
mov
in
sub
xor
inc
fistl
add
mov
int3
popf
ss
rep
pop
mov
mov
mov
mov
ljmp
cs
and
jbe
cmp
add
into
popf
sar
mov
xor
cmpsb
push
and
push
imul
ficompl
sbb
xor
adc
dec
adcb
enter
fs
imul
pop
sub
push
xchg
fs
add
push
and
cvtps2pi
das
repnz
or
push
dec
mov
orl
sahf
pop
test
add
out
pop
lret
jno
divb
mov
mov
inc
jo
or
enter
mov
adc
shlb
incb
or
dec
repnz
movsl
aam
cmp
push
enter
pushf
or
xor
cltd
js
sub
ja
push
xor
fsubrs
sub
out
lock
xchg
insb
xchg
inc
mov
fimuls
bound
xor
jecxz
js
pop
stos
jns
enter
data16
jl
cmc
aas
push
fs
or
cli
mov
fisubrs
push
popa
je
xor
xchg
test
push
imul
dec
iret
popa
mov
ja
int3
movsb
pusha
inc
push
mov
pushf
stc
fbstp
sbb
pop
xchg
and
inc
mov
into
in
sub
cld
pop
pop
sub
aam
pop
dec
sbb
stos
frstor
jg
or
fcomp
arpl
mov
shlb
cmp
adc
add
jb
ss
in
push
push
add
adc
lods
shl
fmuls
adc
stos
cmp
arpl
mov
pop
cmp
mov
sub
sahf
jmp
inc
pop
lcall
mov
add
and
mov
out
cli
push
dec
pop
pop
push
mov
jns
sub
inc
out
sub
jbe
icebp
leave
aad
xor
pusha
push
je
into
or
xor
and
in
and
xor
ret
cltd
pop
pop
jmp
cmpsb
mov
xchg
mov
int3
insl
xchg
cli
dec
testl
dec
orps
arpl
cwtl
imul
pop
popf
popf
insl
adc
push
pop
rclb
sbb
jge
xchg
ret
adc
cli
loope
mov
icebp
inc
cmp
cmpsb
mov
inc
push
cli
and
xchg
cmp
cmovae
rorb
mov
pusha
adc
mov
push
cmpl
popa
repz
movsb
xchg
mov
popf
idivb
or
rolb
mov
movsl
cmp
daa
pop
roll
sbb
iret
xchg
sbb
adc
jp
jne
fcoml
jle
inc
adc
ss
into
jno
dec
jnp
scas
pop
pop
dec
xchg
push
add
cltd
in
push
stos
jnp
xorl
cmc
dec
adc
jae
arpl
or
in
jge
sbb
inc
popf
inc
cmp
lea
clc
add
mov
cmp
pop
stos
gs
insb
adcl
jno
xchg
bsr
fldcw
cwtl
sub
loopne
orb
adc
and
js
aam
mov
inc
adc
add
scas
pop
or
inc
ljmp
mov
push
inc
fisttpll
stos
cmp
add
pop
popf
jl
jp
cwtl
in
sbb
cmp
push
daa
xor
jno
fs
fdivrl
cltd
mov
bound
xchg
lret
lock
push
mov
mov
mov
stos
sbbb
cmpsl
ja
push
cmp
mov
sbb
jne
outsl
aam
xor
mov
test
xchg
imul
stos
cld
sub
adc
push
gs
cltd
loopne
data16
sahf
repz
scas
stos
fwait
dec
adc
call
movsb
je
sbb
push
jp
mov
test
cltd
into
into
and
addb
mov
stc
popf
je,pt
nop
push
xchg
popf
lahf
xor
mov
jno
jp
mov
cli
and
or
and
test
imulb
mov
mov
adc
test
add
movsl
xchg
clc
mov
cs
jnp
std
cmp
ficoms
scas
jno
and
fucomi
mov
xor
inc
xchg
jbe
outsl
or
orl
jnp
jnp
sbb
xchg
mov
bound
mov
jle
repnz
lcall
sbb
adcb
mov
sbb
xlat
cwtl
cmp
adc
movsl
cmpsl
mov
call
stc
pop
cmpsb
fnsave
mov
push
push
popa
dec
sbb
leave
mov
fisubl
sbb
push
xor
adc
sbb
push
push
mov
mov
in
mov
pop
adc
inc
popa
stos
sub
xlat
xor
sbb
cltd
xchg
fcmovnu
xor
inc
sbb
inc
repz
and
jno
mov
mov
sbb
fstps
push
test
push
pop
movb
pop
out
dec
dec
and
fsubp
jb
lret
xor
mov
imul
test
and
pop
inc
dec
cmp
bswap
inc
cmpsb
mov
push
mov
pop
fnsave
jmp
sbb
inc
fildl
adc
mov
mov
sub
wrmsr
inc
pop
jecxz
arpl
in
or
sbb
outsl
hlt
adc
add
inc
in
jbe
cmp
mov
mov
sahf
push
xchg
cmp
ja
sbbb
mov
gs
adc
adc
mov
jbe
add
push
cmp
cmp
daa
fisubl
pusha
lea
push
push
je
inc
dec
jecxz
outsl
pop
ds
les
pop
pop
and
sahf
loope
dec
sbb
loop
popa
cmp
andl
inc
data16
inc
pop
xchg
pushf
xchg
inc
or
in
push
stc
push
xchg
and
adc
push
les
imul
iret
js
adc
sbb
in
inc
sbbl
mov
push
fucomi
push
lret
mov
xor
out
pop
dec
mov
xchg
or
test
ja
pop
pusha
mov
or
sub
ljmp
sbb
ja
xor
rolb
imul
movsb
stc
sbb
xor
mov
add
and
jecxz
or
pop
and
pop
xchg
mov
sbb
ds
mov
cli
fs
pop
testb
movl
jle
je
cwtl
xchg
rorb
test
jnp
mov
iret
in
test
pop
sti
or
jmp
test
pop
mov
std
sub
mulb
dec
mov
faddl
ficoms
inc
mov
mov
mov
es
mov
rcll
rorl
aaa
mov
ss
mov
push
jle
adc
xchg
adc
outsl
cmpsl
sti
add
dec
daa
arpl
inc
push
fwait
pushf
inc
jb
or
sbb
xchg
inc
sahf
cmp
sub
aas
push
imul
outsl
stc
dec
es
inc
cwtl
push
inc
sub
push
es
addr16
mov
data16
sub
imul
inc
cmp
js
or
in
js
les
icebp
cli
pusha
es
sbb
enter
cmp
fisubl
dec
dec
jg
push
pop
adc
js
je
mov
inc
xchg
popa
dec
add
repz
cmp
fcoml
add
and
jge
dec
je
leave
std
cmp
or
sub
xchg
inc
xlat
jmp
mov
push
stos
mov
jge
ret
fnsave
or
imul
xor
aad
cmc
mov
cmp
adc
xor
ds
jl
pop
imul
jns
test
sbb
xchg
sbb
mov
movsl
and
mov
push
jge
and
inc
lahf
daa
popf
out
lahf
and
xor
xchg
cmp
jns
fbstp
or
in
sbb
loope
into
sar
cli
imul
shrl
adc
or
xor
out
push
dec
iret
scas
movsl
ljmp
js
adc
mov
call
mov
lods
out
sub
insb
pop
lret
adc
movsb
pop
ja
lcall
aaa
xchg
pop
scas
gs
jbe
pusha
in
jg
adc
imul
cmp
xor
test
cs
pop
mov
je
int3
iret
mov
popf
es
push
push
data16
pop
loope
xchg
gs
mov
in
fidivrl
outsl
pop
push
adc
fs
xchg
mov
jmp
loop
xor
mov
add
mov
loope
jle
sbbb
shrb
ja
inc
orl
mov
outsb
pusha
in
sub
scas
int3
mov
push
cmp
mov
aam
and
movsb
fsubrs
cmp
cmp
add
outsl
sbb
clc
mov
push
std
stos
xchg
aad
lret
inc
lods
pop
mov
cmp
inc
inc
aam
sahf
outsl
jmp
lods
jae
push
scas
mov
sti
fwait
enter
jne
cmp
xor
in
mov
lahf
in
imul
int
pusha
test
gs
cmp
sbb
mov
repz
pushf
xchg
mov
sub
inc
lcall
lahf
shlb
jnp
sbb
fnstcw
mov
dec
sub
test
jno
xchg
pusha
add
aam
sbb
xor
in
lahf
sahf
clc
jle
negb
xor
sbb
fs
push
xlat
lcall
adc
xchg
clc
add
mov
sub
adc
bound
mov
mov
inc
lds
xchg
mov
ljmp
jge
or
mov
cmp
cvtpi2ps
push
xlat
dec
and
movsl
addr16
sub
sbb
enter
negl
test
loopne
sub
ljmp
inc
push
and
ss
fldl
mov
mov
lea
dec
lret
sbb
lods
shll
imul
insb
adc
push
aad
ss
and
aad
xor
sub
icebp
in
or
sub
rcr
xchg
imul
adc
lret
dec
mov
dec
push
or
cld
pop
in
xor
jl
mov
sbb
push
and
inc
jle
add
shlb
jne
inc
ljmp
outsb
aam
sbb
dec
mov
xor
xor
cmpl
in
inc
mov
stos
dec
ret
push
testb
inc
mov
mov
test
arpl
push
jb
add
jo
fisttps
mov
mov
fildll
lds
fcompl
push
dec
je
lods
mov
cmovne
lock
movsb
lods
push
fstl
push
dec
arpl
mov
jnp
pop
iret
loope
and
push
xchg
jp
jbe
and
cmp
pushf
fmulp
lea
dec
dec
loope
icebp
sbb
out
stos
mov
aas
aaa
push
jnp
ljmp
iret
inc
movsl
push
push
xlat
in
adc
xchg
sbb
jne
xchg
subb
push
outsb
aad
mov
inc
pop
and
sahf
out
bound
mov
xor
mov
adc
and
adcb
sbb
push
dec
sbb
pop
push
inc
gs
cltd
or
mov
arpl
lret
outsl
inc
lret
in
pop
mov
je
xlat
imul
mov
jb
push
leave
adc
popw
mov
push
cmc
lahf
push
subb
adc
jle
loop
mov
xchg
les
mov
mov
test
sbb
mov
mov
push
in
aam
ja
icebp
in
es
aas
lock
lods
pop
push
jg
or
imul
into
ds
into
pushf
push
aas
ds
sub
leave
fsts
mov
push
or
clc
sahf
add
pop
pop
es
dec
jne
add
sahf
mov
or
dec
mov
loop
cmp
cmpsb
push
pushf
inc
test
std
mov
xchg
mov
cmp
push
cmp
cmpsb
lret
pop
les
cli
daa
add
icebp
and
xor
jle
mov
xor
mov
pop
jae
or
push
je
test
into
push
xor
out
imul
cmp
push
mov
xchg
lahf
cmp
rcrb
into
mov
xchg
or
ds
add
mov
dec
mov
dec
xor
or
aas
ja
xchg
mov
sub
cmp
mov
mov
cmp
aaa
mov
stos
mov
inc
outsl
mov
dec
xchg
cli
test
loopne
in
xlat
sbb
pop
jmp
out
mov
aad
dec
lods
xchg
or
cmc
mov
sbb
pop
scas
xchg
inc
rolb
pop
inc
mov
inc
lds
or
jmp
aas
add
inc
dec
test
dec
es
or
inc
xchg
addl
xchg
out
jmp
ja
lods
aad
daa
or
sub
pusha
addb
cmp
push
jno
icebp
sbb
bndldx
scas
sti
mov
sub
sub
dec
push
lods
int
cli
nop
cmpb
ljmp
mov
lds
adc
cmp
cmpsl
aas
cmp
pop
js
jb
mov
je
aaa
jns
jmp
xchg
enter
out
xchg
scas
loopne
mov
jno
cmc
add
push
rcll
add
fistpl
mov
icebp
mov
or
sub
inc
xor
lcall
xor
pop
loop
add
gs
sbbl
jl
or
mov
test
dec
jp
ljmp
cmp
lret
and
adc
loope
cmp
shrb
fisubrs
ret
cmp
iret
hlt
or
inc
mov
lea
pushf
mov
and
pop
dec
mov
sub
enter
jo
fucomp
stc
sbb
popa
andb
nop
shl
jp
xor
pop
add
shlb
sbb
cmp
and
ljmp
add
lods
sub
mov
push
adc
and
js
push
sub
mov
lea
push
sbb
data16
je
pop
test
ret
rol
aad
xchg
popf
mov
push
cmp
xchg
mov
dec
fs
or
inc
mov
inc
sub
jnp
jp
ja
int
pop
sbb
jne
pop
fs
movsb
notl
rcrl
xorl
jmp
adc
cld
test
push
or
mov
mov
leave
test
int
daa
fstl
inc
aad
data16
shrb
sbb
xchg
xor
aaa
xor
jno
call
xor
sub
data16
aaa
pushf
xor
repz
add
jl
outsb
repz
push
jbe
test
push
loop
shll
xchg
push
test
scas
pushf
jp
cmp
inc
mov
jmp
xor
repz
pop
and
insb
sahf
aaa
sbb
mov
xchg
xor
bound
mov
jecxz
in
insb
dec
loopne
loopne
sbb
out
ja
mov
insl
bnd
push
movsb
inc
push
add
mov
cld
xchg
insl
testl
mov
jmp
insl
jmp
add
xchg
xor
rcl
pusha
pop
testl
push
jl
mov
sbb
xchg
cmp
pop
pop
fisubs
lcall
cmp
mov
cltd
stos
inc
jo
and
aaa
push
xchg
add
cmp
cld
lahf
add
scas
fcoml
in
xchg
repz
pop
stc
add
lret
lret
pop
pushl
mov
int3
fwait
jg
nop
int
fists
push
sub
add
mov
gs
adc
xchg
sub
fsubrl
push
pop
loopne
lods
mov
aas
mov
repnz
testl
xor
arpl
scas
jl
movsl
fnsave
ds
sarl
shrb
mov
add
jg
pop
leave
pusha
and
mov
sahf
push
das
add
mov
sub
pop
dec
js
addr16
fcomp
aam
das
loopne
xchg
ss
mov
pop
sbb
and
into
mov
jl
faddl
push
icebp
lock
push
les
in
push
daa
mov
push
daa
jae
loop
daa
aam
leave
dec
insb
sbb
ja
arpl
bound
push
inc
jg
ss
mov
cmp
sub
icebp
popf
jle
xchg
xor
mov
lea
insb
push
add
xchg
push
and
arpl
pop
pop
inc
int
fcoml
push
push
std
adc
cmpsl
pop
nop
lahf
push
loop
mov
adc
push
pop
filds
lea
stos
jo
roll
fwait
or
inc
gs
addr16
adc
mov
out
or
stos
divb
sti
mov
mov
dec
aas
mov
mov
sub
cwtl
out
sahf
in
cmc
loopne
loopne
in
ret
mov
cmp
outsb
dec
mov
mov
ret
in
adc
sahf
and
sub
pop
add
ja
pop
lret
data16
icebp
ret
add
push
add
je
xlat
into
pop
rorl
inc
mov
pop
movsl
in
push
iret
jne
dec
std
lcall
jae
xor
mov
icebp
xor
setg
push
push
js
mov
in
pop
add
push
push
mov
fwait
cmpsl
pop
das
adc
movsl
sub
sarl
idivb
cmp
mov
leave
jbe
jo
sub
into
test
je
ror
mov
test
int
es
mov
arpl
inc
subb
mov
lods
xor
sbb
mov
mov
adc
mov
pop
insb
mov
aam
scas
push
xor
sbb
push
int3
sub
pushf
mov
aas
cmp
fldl
out
mov
or
fdivrl
imul
aad
pop
pushf
dec
add
mov
or
xlat
in
outsb
sbb
jb
add
mov
push
jnp
lret
mov
repnz
sbb
in
stos
xchg
lcall
aaa
sbb
stc
inc
xchg
xchg
call
lcall
fs
xor
pop
inc
sub
testl
xchg
sbb
sub
sbb
mov
pop
or
mov
sahf
adc
lds
adc
jae
push
add
addr16
and
add
std
in
cs
and
and
int3
sub
sahf
jae
and
mov
movsb
inc
cmp
push
xchg
cmpsb
dec
aas
cli
mov
gs
push
pop
xchg
out
out
mov
stc
xchg
lods
mov
jno
bound
jg
xor
mov
mov
xchg
inc
aam
dec
pop
and
movsb
int3
cmc
xchg
push
jb
jo
cmp
das
stos
xor
dec
stos
and
adc
dec
mov
push
sub
add
sub
stos
sbb
cmp
cmc
dec
xchg
mov
sbb
aas
orl
push
imul
xchg
pop
xor
in
dec
xchg
aas
pop
push
jnp
test
dec
imul
cmpsl
jbe
fisttpl
pop
push
lret
and
out
add
fs
popf
stc
cmp
add
mov
pusha
mov
dec
xchg
sbb
push
jge
lcall
jne
push
test
push
xchg
mov
lock
addb
sub
std
adc
push
push
outsb
and
mov
xchg
or
xchg
mov
xor
cmp
daa
add
mov
movsl
or
jmp
test
enter
push
fnstenv
popf
mov
rorl
xchg
mov
lret
cmpsl
and
sub
mov
mov
sbb
jp
pop
insb
sahf
andb
ds
push
ret
outsl
cmpl
or
scas
mov
xor
push
pop
jmp
mov
bound
and
sti
cmp
jle
pop
sbb
sbb
movsb
mov
xor
pop
inc
in
daa
cmp
stos
cmpsl
push
shrl
outsb
and
testl
sub
push
cmp
xor
mov
push
hlt
in
lcall
mov
out
push
mov
inc
adc
dec
addr16
xchg
inc
mov
scas
fwait
shrl
dec
jae
mov
test
inc
dec
loopne
mov
xor
andb
pop
sub
push
add
loopne
out
xchg
xor
cmc
mov
repz
cmpsb
push
out
sub
push
xchg
push
adc
adc
dec
imul
jns
cmp
cmovne
ljmp
sbbb
sub
adc
popf
lea
push
cmpl
adc
daa
mov
movb
rcrb
std
cmp
mov
push
loop
je
clc
add
int3
test
push
mov
mov
lock
scas
mov
pop
test
jne
pop
scas
mov
mov
jmp
popf
sub
sub
test
mulb
icebp
shr
adc
jl
jne
out
xchg
stos
test
test
push
je
mov
cmpsb
js
push
mov
repnz
aam
add
mov
mov
scas
lretw
sub
das
or
popa
push
xor
push
xchg
ds
jb
ds
cld
and
mov
pop
push
inc
adc
cmp
ljmp
int3
jle
jge
jb
push
cmpsl
cmpsb
dec
inc
mov
sbb
mov
add
xlat
xlat
lcall
lock
les
gs
pop
mov
gs
sub
ljmp
sbb
mov
fsubrl
js
push
sbb
mov
iret
jnp
jbe
or
xchg
hlt
xchg
cmp
arpl
lret
std
or
mov
sar
sub
dec
fistpl
jp
movsl
cmpsb
push
xor
addb
mov
sahf
aam
fwait
mov
push
test
push
jle
jecxz
push
test
xlat
aas
sub
cmp
mov
dec
popa
mov
xchg
mov
in
jne
xor
mov
cmp
add
enter
xchg
push
inc
mov
das
loope
dec
inc
mov
popf
jns
pop
cmp
into
test
pop
push
imul
pop
or
dec
xchg
subb
out
fs
mov
bound
cwtl
dec
and
in
jb
mov
cmp
repz
imul
jae
pop
lcall
add
jle
jg
or
xlat
sbb
stc
cltd
or
fsubp
jo
fcompl
idivl
and
sub
push
xor
mov
jmp
outsb
mov
mov
stos
push
daa
dec
mov
stos
dec
jle
and
or
pop
insl
idiv
cltd
arpl
dec
icebp
sbb
and
out
sub
mov
dec
mov
aad
add
std
iret
in
xor
sar
add
aas
lods
scas
in
add
dec
movsl
mov
outsl
call
pop
movsl
aad
cmp
cmp
cmpsb
lahf
out
bound
stos
jne
push
in
adcl
lods
popa
push
and
arpl
pop
mov
sub
orb
into
lcall
and
push
pop
fistps
adc
shll
and
adc
iret
sub
je
or
and
inc
cmp
cli
adc
pop
cltd
aaa
mov
push
jns
or
jl
pop
mov
lret
sahf
push
dec
jne
addr16
cs
xor
inc
repz
outsb
jecxz
push
jns
int
add
leave
or
icebp
push
or
mov
adc
out
daa
shrl
xor
jge
cmc
push
lcall
cmp
jne
fucom
push
aam
push
jg
or
jno
mov
xchg
bound
js
add
push
sarl
lock
shlb
into
lock
pop
in
scas
call
loopne
xchg
lods
push
test
xor
mov
cvtdq2ps
test
push
faddl
adc
cmp
aad
mov
xor
xchg
mov
push
mov
test
lret
add
sub
iret
jle
sbbb
adcb
lods
enter
rcll
pop
cmp
or
enter
mov
sti
popa
fstp
incb
mov
sbb
adc
mov
and
inc
lods
push
daa
push
aam
cld
cld
or
cmpsb
hlt
sub
xchg
nop
shll
dec
or
addr16
addl
sbb
add
and
movsl
push
fcmovb
scas
pop
or
add
cwtl
jno
xor
pop
aaa
outsb
or
push
mov
jne
add
inc
ja
or
sub
sub
cs
movsl
push
and
push
or
lods
test
push
addr16
pmaxub
popa
push
cmp
add
inc
loopne
ss
test
xchg
leave
mov
pop
mov
adc
mov
cmp
decl
pop
aad
stc
mov
sub
dec
data16
lods
pop
sbb
lcall
in
hlt
pop
aas
jmp
jle
xchg
insl
imul
inc
add
pop
push
sbb
dec
add
test
icebp
jg
sub
cmp
dec
dec
in
jge
scas
aam
jp
sub
push
add
pop
stos
nop
mov
sub
xchg
insl
das
mov
adc
xorb
xor
cmp
inc
outsl
mov
sbb
jg
imul
lods
data16
das
push
scas
in
cmc
cwtl
inc
mov
stc
add
aaa
insl
pop
cmc
push
adc
jl
fdivl
cmp
pop
push
scas
out
cmp
lret
jge
fcmovb
popa
add
dec
rcrl
pop
bound
mov
les
sbb
sub
mov
pop
push
mov
push
lds
pop
mov
or
out
loop
and
xchg
dec
test
push
fcmovu
xchg
fldt
addr16
dec
cltd
aam
or
or
sarb
and
in
sbb
dec
jno
push
xchg
xchg
jae
adc
adc
mov
and
ret
mov
pusha
or
pop
jnp
pop
xchg
push
push
pop
add
cwtl
inc
sbb
scas
inc
idivl
call
and
int
dec
push
jnp
ret
inc
ljmp
mov
adc
xor
es
xchg
xlat
mov
dec
decb
cmp
test
push
stos
xchg
mov
ss
jmp
pop
mov
sbb
fidivrs
cmp
add
dec
lahf
jo
ret
adc
cs
pop
gs
dec
mov
int3
mov
ja
jg
dec
mov
clc
mov
fisubs
lods
pop
mov
aam
and
sub
jno
clc
mov
loop
scas
shl
pop
testl
iret
dec
mov
inc
loop
inc
pushf
inc
loopne
xchg
mov
jne
test
xor
mov
outsl
xor
repnz
push
lock
and
xor
xlat
push
sub
bound
fdivs
lcall
out
rcr
popa
fisttpl
push
sbb
inc
jae
mov
cmpsb
xchg
adc
testb
addl
dec
xchg
lock
jp
lods
and
sub
xchg
popa
lods
aas
jno
and
dec
sub
mov
aad
and
sarb
sbb
iret
push
fldl
inc
sub
test
lahf
scas
je
dec
fnstsw
inc
cmp
push
jbe
aam
repnz
xchg
adc
push
mov
mov
push
imul
mov
mov
jnp
sbb
ret
imulb
sbb
insb
ljmp
xchg
push
pushf
adcb
cwtl
test
mov
shlb
pop
mulb
xchg
jo
pop
mov
push
jle
sets
or
sti
popf
popa
lret
repnz
outsl
loopne
jb
out
mov
add
or
or
xchg
fistpll
mov
lret
inc
xchg
lods
iret
test
test
pop
or
mov
or
pop
dec
scas
jecxz
lods
outsb
mov
xorl
add
mov
sahf
dec
mov
cltd
mov
mov
and
sbb
xor
mov
aad
fs
test
xchg
add
enter
test
shrl
pop
xchg
imul
fwait
aaa
xor
and
xor
mov
lret
ret
repnz
add
out
sub
lahf
cmpsl
push
std
aaa
and
fnstenv
mov
or
sub
aam
dec
cmp
fimull
pop
push
cli
mov
pop
outsl
and
je
pushf
sbb
mov
insl
sbb
in
icebp
ficomps
sub
rclb
mov
mov
push
cmp
adc
je
mov
test
inc
stos
xor
aam
jno
ja
push
sbb
push
inc
jmp
sbb
sub
aaa
and
cmpsl
aam
mov
and
or
cwtl
push
movsb
xchg
adc
cs
dec
cld
test
push
cmp
push
mov
das
loopne
mov
sbb
cli
pop
pusha
cmp
pop
ficoml
xor
fidivl
mov
aam
jge
or
dec
jns
push
ja
xchg
fnstcw
pop
or
mov
and
and
and
out
cmp
fiaddl
pop
inc
push
inc
push
mov
pop
xor
mov
addr16
xor
adcb
mov
xchg
fsubl
push
jg
aad
rcrl
imul
clc
jbe
pop
inc
loopne
xchg
add
leave
in
loopne
call
inc
int3
jnp
call
jl
pop
add
or
mov
mov
mov
test
sbbl
fnstenv
mov
mov
stc
push
adc
cmpsb
mov
stc
addl
and
xchg
data16
lods
repz
fcmovb
cmp
push
into
outsl
mov
cltd
jle
test
int
xor
jmp
mov
jno
and
add
push
mov
adc
mov
popf
aam
mov
pop
jae
addr16
fcomip
mov
outsl
fmull
pop
lret
je
insl
lods
stos
stos
rolb
pop
orl
jbe
jae
mov
dec
jae
sub
dec
jecxz
ffreep
lds
sub
leave
mov
mov
inc
and
js
mov
xchg
adc
gs
int3
lcall
call
aad
addr16
es
sbb
jle
cmp
lea
push
or
push
pop
cmp
in
pushf
or
dec
or
jbe
add
pusha
cmc
gs
push
fwait
xchg
xor
inc
sarb
pop
call
jle
aam
inc
xchg
inc
mov
in
in
insb
in
lret
insb
mov
mov
pop
fbstp
add
ljmp
push
pushf
jno
jecxz
pop
in
push
scas
and
aaa
jo
cltd
xlat
push
jle
inc
in
addb
js
push
test
jl
scas
or
insl
int3
xor
aam
sbb
adc
or
mov
jbe
jle
bound
xlat
mov
mov
mov
or
sahf
loop
loop
and
sbb
inc
or
mov
or
les
jbe
ss
fdivrs
ret
aad
cmp
stc
xor
add
xor
imul
fbstp
xlat
adc
pop
pop
adc
std
sbb
icebp
loope
test
subl
dec
mov
cmp
fsub
lock
mov
xchg
add
leave
mov
cltd
movb
ljmp
fdivrs
xchg
sub
mov
fldcw
fildll
movsl
cmp
dec
int
addl
aam
or
add
sub
stc
jmp
scas
popa
rcpps
loop
adc
inc
jo
mov
lcall
xor
push
addr16
adc
mov
jecxz
inc
pop
mov
sti
fldcw
bound
xchg
ret
lods
jle
mov
enter
dec
cmpsl
or
outsb
mov
pop
fmuls
int
mov
jg
fdiv
jne
adc
mov
dec
inc
xchg
or
insb
pop
or
push
repnz
loop
in
add
push
clc
pop
das
fucomp
xchg
loope
out
arpl
pop
dec
sub
lods
dec
mov
dec
inc
enter
loope
stos
and
mov
std
lods
iret
xchg
js
sahf
jmp
lds
xor
push
and
aaa
clc
cmp
sbb
outsl
repz
push
sbbb
push
cmc
js
fwait
ss
and
outsb
lret
cld
mov
mov
xor
addr16
mov
inc
and
lahf
jmp
ret
test
mov
stos
or
fwait
icebp
dec
scas
and
cld
lods
lds
push
push
mov
pop
sub
xchg
inc
pop
sbb
xchg
mov
std
arpl
jle
aas
fmuls
loope
cmp
and
adc
cmp
gs
cli
cmp
imull
dec
dec
mov
test
es
hlt
add
cmp
pop
mov
inc
mov
int3
sub
arpl
fdiv
push
repnz
adc
jle
and
rolb
in
negl
jo
mov
lahf
mov
sbbl
std
pop
pop
aaa
imulb
ret
in
sbb
inc
shl
sub
cld
dec
cmp
mov
int3
aam
sahf
jg
fmuls
pop
adc
fistpll
dec
mov
in
pop
cwtl
aam
cmp
mov
sbb
fnstcw
sbb
jecxz
and
mov
adc
pop
enter
pop
popf
jp
cmp
mov
push
sbb
xchg
in
ss
mov
nop
xchg
lcall
jle
jbe
jmp
enter
and
hlt
or
nop
cld
movsb
jno
mov
xchg
out
mov
push
push
and
xor
cmp
mov
mov
loopne
mov
pop
mov
fstps
mov
cmp
xor
in
cs
dec
mov
add
jl
nop
addr16
cwtl
cmp
mov
imul
loopne
scas
rorl
mov
xor
xor
shll
mov
dec
add
inc
xchg
inc
jns
mov
bound
ja
or
dec
and
pop
daa
xor
jle
push
shll
adc
pop
stos
add
xchg
jbe
testl
decl
insb
int
pop
push
pop
sub
xor
add
repz
mov
movb
cld
sbb
call
inc
test
jae
pop
lock
xchg
cmp
subb
push
inc
addr16
in
and
gs
jmp
lock
inc
mov
subl
lahf
out
push
dec
cs
inc
repnz
jnp
or
in
jne
pop
clc
and
or
xor
popa
and
inc
push
lahf
js
cmp
pop
sbb
mov
loop
and
orb
cmp
inc
popa
push
negl
sub
cmp
inc
sar
scas
mov
pusha
jmp
pop
jno
in
push
xchg
push
ds
les
sarl
mov
leave
jmp
push
mov
cmpsl
adc
lahf
push
add
scas
popa
popf
and
enter
pop
dec
inc
xor
cld
lahf
pop
xor
inc
pmaddwd
jecxz
in
mov
add
pop
pop
jl
xchg
scas
jo
decl
pop
cmp
xor
xor
mov
aas
enter
mov
inc
adc
sub
sub
xchg
add
loope
sbb
inc
inc
jl
inc
pop
in
cwtl
adc
jmp
adc
xchg
je
rolb
lods
leave
add
insb
ljmp
jle
out
ds
outsl
sub
out
xchg
mov
add
mov
add
adc
mov
repnz
sub
aas
sbb
div
test
fnsave
in
outsb
sbb
in
xor
mov
cmp
cmp
ds
test
mov
dec
cmp
xor
shrb
lret
jne
push
jmp
loopne
cltd
ss
and
loope
popf
andb
jno
sbb
inc
xchg
pop
and
hlt
xchg
and
fnsave
jle
movsl
mov
mov
dec
sbb
push
aam
xchg
sub
enter
lds
pusha
dec
ss
mov
mov
xchg
cmpsb
subl
outsb
pop
mov
aad
pop
sahf
iret
inc
mov
fwait
inc
push
ss
insb
mov
mov
dec
inc
movsl
fdiv
xor
jg
outsl
test
fisubl
mov
sub
imul
leave
js
int
mov
andb
sbb
adc
xor
loope
cltd
ficoms
and
addr16
sub
xor
adc
movsb
aas
je
shr
cmp
in
xor
push
daa
sbb
movb
and
or
lds
xchg
cwtl
pop
lret
push
mov
cli
push
nop
pop
inc
xor
cmp
push
push
ljmp
rcrb
push
out
pop
in
loope
mov
lret
out
ret
dec
loope
cmp
out
mov
mov
adc
shl
jne
jne
inc
xchg
mov
icebp
fldenv
xor
and
rorl
mov
popf
cld
add
popf
outsb
shl
hlt
pushf
test
aas
mov
inc
or
jnp
jecxz
sub
mov
mov
or
dec
iret
add
mov
jecxz
jnp
divl
jo
inc
push
ret
xlat
loope
push
lret
jcxz
fidivs
inc
pop
leave
inc
add
sbb
mov
add
push
xor
xlat
add
cwtl
mov
pop
pop
or
cmp
adcl
and
lcall
sbb
pop
shll
adc
xlat
imul
inc
mov
mov
loope
or
inc
in
jmp
push
xorb
jecxz
lret
stc
fsubr
mov
cmp
xchg
jns
sbb
leave
cmpsb
mov
xchg
pop
push
inc
inc
and
aad
sbb
les
movsl
mov
xchg
xchg
cmp
repz
call
push
dec
push
xchg
mov
ds
mov
inc
stc
push
cli
mov
lret
fmul
iret
add
rorb
or
cmpl
pop
mov
outsb
scas
sbb
ja
pop
aaa
ja
rclb
cmp
mov
pushf
mov
add
sbb
mov
mov
mov
inc
cwtl
aaa
cmp
stos
loop
push
cltd
les
pop
mov
sbb
jl
pop
inc
repnz
cltd
fwait
outsb
insl
dec
fcoml
cmp
inc
sub
mov
test
popa
repz
std
nop
nop
orb
inc
dec
or
shlb
lds
pop
pop
lods
jnp
cmp
inc
sub
cmp
or
mov
push
int
adc
lods
add
leave
stos
popf
scas
or
xor
sbb
aas
pop
das
aas
std
aam
leave
sub
jmp
cs
pusha
jns
jb
cld
fdivrl
arpl
sub
push
jecxz
testb
and
or
les
lret
les
xchg
dec
sub
loop
xor
pop
outsl
iret
push
movsb
mov
jo
dec
sbb
mov
inc
mov
pop
dec
cmp
js
daa
sbb
adc
outsb
add
jbe
out
cli
sbb
shr
fwait
adcb
cmpsb
dec
lret
fwait
pop
in
frstor
fsubrs
fsubrs
add
cmpsb
xchg
jbe
fldl
adc
icebp
mov
pop
dec
mov
xor
imul
pusha
repz
jno
test
adc
jmp
std
lods
xchg
push
repnz
pop
data16
mov
inc
sbb
scas
test
xlat
aas
iret
push
fimuls
lods
nop
cmpsb
dec
push
ret
ret
repnz
mov
out
lret
fnstsw
jmp
and
hlt
and
cmc
loope
pop
jecxz
les
int
add
gs
mov
loopne
jmp
ss
cmp
mov
mov
pushl
push
in
jbe
inc
lret
add
lock
ret
dec
and
xchg
mov
jns
xorb
xor
jno
jmp
mov
jns
jmp
and
dec
mov
pop
bound
pop
push
xchg
adc
xor
inc
xchg
outsb
cmp
mov
int
out
jno
xchg
push
lock
in
or
test
fsubr
inc
pop
dec
xchg
into
or
mov
dec
push
jle
cmpsl
in
push
jle
sub
insl
pop
loop
push
xor
ds
mov
mov
outsl
shrl
sub
jp
cmpb
loope
and
sbb
jecxz
sbb
add
aad
movsl
clc
mov
adc
scas
cwtl
out
out
mov
hlt
cmp
pushf
jl
les
dec
movsl
dec
pushf
sbb
lret
fs
xchg
push
lahf
adc
cmpb
jmp
rcrb
mov
adc
add
adc
enter
pushf
cltd
lahf
cmpl
sub
mov
outsb
jmp
lods
sahf
lock
xchg
jl
mov
hlt
push
aam
jl
mov
pop
arpl
adc
or
sub
test
jno
dec
test
add
push
loop
popa
or
imul
test
pop
mov
roll
dec
int
sbb
sahf
stc
gs
mov
arpl
sub
push
jl
sbb
cmp
in
fwait
push
fs
lds
xchg
pop
bound
popf
lret
imul
cmp
add
inc
cltd
add
clc
mov
push
xor
jecxz
fiaddl
sahf
movsl
imul
xchg
sub
xchg
outsb
stos
inc
or
mov
jmp
movsb
test
aaa
mov
loope
imul
xchg
xor
push
call
repnz
test
or
js
push
sbb
cmpsl
mov
mov
icebp
repnz
aad
stc
ficoms
pop
roll
pop
shll
fs
sbb
mov
pop
jl
roll
mov
in
pop
jp
daa
mov
sbb
sbb
aad
cmp
stos
loopne
xchg
sub
dec
ret
in
jnp
rclb
adc
lahf
or
xchg
or
into
testb
push
dec
add
aaa
adc
aaa
std
out
cmp
inc
testb
cld
loope
lcall
xchg
or
aas
imulb
jle
loope
and
sqrtps
xchg
cmp
pushf
sub
ljmp
xlat
cmp
outsl
dec
ret
testl
xlat
decb
push
jle
mov
or
lods
mov
push
cmpl
jno
add
xor
cld
mov
mov
push
push
push
fsubs
lds
in
sub
daa
mov
lret
inc
dec
adc
xor
cs
pushf
jle
xor
mov
movsl
repnz
int
shrl
adcl
stos
notb
mov
gs
push
shrl
repnz
inc
jmp
xchg
mov
icebp
mov
rorl
add
sti
fdivr
fistpl
mov
es
jae
lock
push
push
iret
and
mov
rorb
cwtl
and
xor
shrb
dec
clc
movsl
ds
mov
xlat
xor
arpl
lahf
imul
sti
mov
jns
mov
pop
jo
stos
xchg
nop
jb
lock
xchg
xorps
push
sub
ret
test
sbb
push
icebp
adc
test
sbb
imul
inc
or
mov
in
inc
and
mov
dec
imul
shll
leave
imul
outsb
mov
push
repnz
mov
pop
int3
jle
jnp
pop
pusha
shrb
sbb
sub
test
sti
mov
outsb
icebp
cwtl
aas
repnz
ljmp
cmc
and
sbb
push
sbb
inc
jb
jmp
test
push
pop
or
dec
fmull
inc
sub
pop
jns
and
negb
xchg
adc
xlat
shrl
xchg
scas
fdivrs
gs
jmp
pushf
and
xchg
jl
mov
push
cld
jb
imul
rorb
leave
adc
jecxz
stc
mov
inc
sbb
adc
rorl
inc
push
in
adc
or
mov
jno
in
sbb
movsl
out
std
pusha
jmp
enter
xchg
inc
or
subl
fistps
mov
sub
fisubs
stc
iret
mov
mov
je
inc
lret
cmp
lock
repz
cld
pop
lret
adc
xchg
fldl
pop
rolb
xchg
jbe
ror
sub
imul
je
jbe
jle
lods
dec
and
mov
jp
jae
inc
xchg
and
jbe
js
sbb
fnstenv
fisubl
xor
jo
cwtl
jmp
ljmp
push
sbb
rcrb
sbb
mov
ret
pop
inc
and
loope
adc
jmp
mov
ljmp
add
cwtl
pusha
out
push
repz
adc
enter
push
mov
dec
jg
outsl
sub
xchg
mov
adc
inc
bound
popf
adc
dec
jbe
ret
mov
in
adc
mov
cltd
std
jb
imul
es
xchg
fwait
lods
js
xchg
loopne
pop
ljmp
pop
addr16
dec
repz
inc
fldenv
lret
xchg
adc
and
pop
repz
es
aas
idivb
xor
sbb
stos
push
or
and
mov
mov
mov
mov
out
cmpsl
rcrb
testl
mov
stos
ficomps
jmp
js
int3
dec
fstpl
adc
and
mov
jle
sub
sbb
mov
fmuls
or
call
inc
xor
push
fnstcw
movsb
fstps
lret
sub
sub
push
les
stos
insb
stos
aaa
add
in
sarb
rorl
xchg
jo
insl
shrl
sub
push
xchg
cmp
cmpb
imul
sbb
frstor
mov
push
cmp
adc
pop
and
inc
fdiv
or
lahf
sahf
sub
jmp
mov
push
inc
test
clc
adc
sbb
sti
mov
jne
pop
inc
outsl
mov
xchg
xor
xchg
or
jne
dec
pop
and
test
fstp
sti
ja
sbb
dec
jmp
mov
cmp
cmp
push
and
aas
xchg
sbb
mov
aad
rcr
popf
pop
test
imul
imul
or
imul
aad
test
test
and
mov
rorb
jns
mov
mov
push
je
lock
jo
aas
sbb
cs
into
int3
ret
pop
pop
in
jp
mov
outsl
mov
sbb
insb
loope
mov
pop
cli
inc
mov
sub
mov
mov
lock
dec
push
dec
out
pop
insb
sub
ljmp
loopne
in
mov
sarl
add
loopne
fcomip
xchg
push
pop
or
jnp
sub
cwtl
test
xchg
dec
cwtl
xor
mov
cltd
andl
fwait
inc
pop
in
sub
and
test
imulb
lock
fxch
aas
and
incb
add
repnz
and
push
cmp
mov
sub
sbb
cltd
xchg
cmpsb
mov
sbb
stc
mov
inc
sti
mov
sub
insb
add
xor
std
xchg
lret
adc
mov
pop
fldcw
es
mul
out
and
movsb
push
jecxz
dec
clc
pop
mov
mov
pushf
out
lods
sbb
adc
je
xor
inc
je
push
aam
xchg
adcl
pop
gs
negb
xchg
lret
in
push
or
test
aam
jle
jl
or
cmp
je
adc
jle
int
sbb
pop
dec
inc
aam
scas
es
notl
mov
mov
jecxz
pop
bound
inc
or
ja
imul
add
add
scas
loop
pop
ds
xchg
fmull
ficoml
sub
pop
pusha
sbbl
and
jmp
jecxz
and
les
insl
outsl
inc
sbb
repnz
jle
sub
lods
mov
and
insb
mov
fimull
arpl
iret
dec
mov
cmp
mov
ja
andb
cmp
stos
lods
shlb
mov
xchg
inc
int3
cs
ret
adc
jnp
jg
imul
inc
sbb
pop
nop
adc
add
loop
and
dec
pop
xchg
ljmp
jbe
jnp
jno
push
push
or
adc
xor
leave
xor
imul
mov
push
aam
push
out
mov
sub
lods
mov
pop
arpl
fldl
pusha
xor
xchg
enter
sub
pop
sbb
movsb
fnstcw
pop
test
push
mov
xchg
loop
adc
aam
notl
adcb
push
inc
sbb
inc
lock
xchg
xor
mov
insl
fwait
mov
test
cmpsw
mov
mov
mov
xchg
push
mov
dec
mov
mov
ret
mov
mov
test
stc
mov
inc
jno
adc
nop
dec
cmpsl
mov
insb
sub
xor
sbb
mov
pusha
cmp
xor
jle
test
or
mov
and
cmp
iret
add
shl
dec
aaa
andl
push
test
inc
loopne
lret
mov
movl
xchg
mov
xchg
xchg
and
cmpl
jns
repz
jg
clc
sub
mov
loopne
mov
mov
lods
scas
mov
xor
inc
ds
mov
sbb
sbb
jle
fwait
ljmp
les
jge
nop
xor
sahf
movb
cmp
sub
push
test
cs
jmp
cltd
hlt
enter
std
ja
or
ror
shll
xor
xor
stc
push
jp
pop
mov
out
std
xchg
cmp
bound
addr16
xor
pop
mov
add
repz
stc
hlt
stos
dec
mov
mov
xchg
outsb
adc
and
mov
mov
in
jg
pop
enter
xchg
jne
clc
js
je
sbb
aas
fidivs
popf
add
stos
jae
repz
or
mov
lods
repz
jl
mov
fst
inc
push
stos
cmp
hlt
and
iret
push
xchg
mov
mov
add
xchg
and
add
int3
lock
bound
inc
faddl
pop
test
hlt
inc
cld
pop
inc
and
dec
mov
repz
push
lea
sub
sub
dec
in
pusha
in
pushf
sub
or
adc
sarb
and
sub
mov
pop
dec
xor
adc
mov
rcl
push
and
stc
jo
pop
adc
pop
fnstenv
push
xor
pop
pushf
sbb
add
mov
dec
mov
mov
mov
ljmp
cwtl
std
addl
in
rcrb
dec
pop
in
aad
lock
pop
inc
add
and
sub
mov
mov
leave
pop
shlb
lods
out
test
and
adcl
mov
daa
imul
sahf
out
dec
test
pushf
sub
xchg
mov
push
rolb
repz
and
cltd
enter
mov
xchg
gs
daa
xchg
fbstp
jmp
into
dec
scas
fnstenv
dec
jp
sub
scas
sbb
test
loope
xchg
cmpsl
mov
int3
mov
scas
or
jecxz
push
jmp
test
movsb
pop
pop
mov
ljmp
movsl
adc
fs
and
xchg
and
push
and
pop
insb
aad
sbb
outsl
pop
xor
add
pop
add
mov
repnz
xor
cmp
scas
and
push
int3
lock
ss
arpl
or
mov
cltd
add
or
jb
adc
test
xchg
insb
sbb
jno
xchg
pop
fistl
cmp
das
inc
stos
push
mov
mov
mov
imul
test
jle
jg
dec
jge
ffree
sahf
jo
daa
mov
ss
add
sbb
xchg
push
inc
cwtl
iret
xchg
rclb
push
pop
shr
cli
int3
mov
add
cwtl
mov
cmp
shll
subb
push
push
repz
fnstenv
cmp
sbbb
xchg
mov
add
test
jl
vcvtdq2pd
xchg
push
mov
mov
outsl
in
lcall
dec
sub
in
aad
loop
cmc
push
bound
aaa
sub
je
aad
and
push
jle
push
pop
outsb
bnd
push
stc
iret
xchg
dec
and
or
mov
pop
into
add
sub
fidivl
imul
dec
orl
inc
add
mov
or
addl
cld
pushf
cmpl
and
notl
movsb
hlt
xchg
fsts
pop
rcll
stos
shlb
sub
push
mov
jno
pushf
sub
mov
iret
mov
aaa
sbb
mov
jns
iret
sbb
or
roll
enter
pop
add
int
cli
mov
jge
cmp
jnp
add
popa
test
ss
mov
test
adc
dec
je
mov
adc
fists
mov
ffree
out
add
imul
int3
xchg
cmc
pop
push
xchg
clc
mov
add
scas
sub
shll
popa
sub
xor
jno
push
cld
imul
loope
cmc
das
nop
inc
jbe
jbe
xchg
xchg
inc
mov
or
call
adc
mov
mov
sub
mov
test
int
jo
mov
lcall
int
xchg
fdivl
or
lea
dec
rorl
sbbb
in
mov
test
mov
mov
pop
ret
jp
add
hlt
and
insl
jb
push
imul
mov
add
push
add
mov
dec
jle
aam
addr16
sti
mov
andl
clc
add
fidivl
mulb
sti
sub
bnd
in
insl
test
and
xacquire
push
cmp
dec
cmp
movsb
mov
sbb
inc
and
int
mov
sbb
test
push
outsb
mov
and
les
and
mov
fcom
sub
rol
cmp
cmp
xchg
cmp
sbb
pop
in
sarb
mov
cmp
jl
jle
incb
jns
rcrb
mov
pop
xchg
popf
fisubrl
xor
inc
icebp
pop
xor
sahf
sub
pop
mov
push
mov
dec
jmp
cwtl
pop
xchg
jp
sbb
imul
fdivs
sub
sub
add
mov
popf
out
add
mov
gs
fbld
push
add
xchg
push
push
inc
fdivp
inc
iret
jg
data16
jmp
push
ss
in
hlt
push
pop
lea
inc
std
pandn
mov
lock
call
jne
scas
and
stos
push
cmp
dec
xor
jnp
jo
sti
add
dec
js
jno
bound
pop
outsl
lock
sbb
jge
sbb
lmsw
xor
inc
inc
dec
fisubrs
dec
pushf
jno
xchg
mov
and
out
and
pop
fiadds
xchg
mov
mov
push
sub
outsb
popa
mov
dec
aam
test
inc
sbb
xor
shrb
cwtl
jnp
cmp
adc
or
ss
cmp
fcmovne
fildll
mov
ret
lock
cmpsb
dec
or
cli
cld
enter
pop
lods
inc
cli
pop
add
iret
out
inc
mov
scas
ficoml
cmpsb
mull
rcrb
dec
xlat
jp
mov
pop
pop
mov
mov
inc
dec
dec
or
xchg
xchg
mov
sbb
pop
stc
dec
mov
outsl
into
mov
or
stos
lcall
xor
dec
loope
xchg
add
dec
mull
test
cs
mov
add
cwtl
out
cmp
lds
sub
enter
inc
xor
daa
jo
daa
pop
add
xchg
adc
mov
in
jle
or
xchg
ret
std
movsl
out
gs
imul
sub
mov
mov
ljmp
pop
adc
xchg
add
pop
pop
clc
pushf
stos
xlat
mov
jnp
mov
les
and
std
std
push
loopne
add
xor
pop
movsl
jb
jns
enter
das
push
adc
sahf
inc
push
sbb
lahf
hlt
push
and
clc
push
repz
mov
ret
std
mov
aam
enter
jnp
sbb
cmp
out
mov
mov
mov
aad
enter
rcrb
je
ret
enter
jmp
sub
sahf
or
or
hlt
mov
push
mov
es
mov
push
mov
stos
movsb
jb
dec
movsb
in
cmp
das
sbb
sahf
or
rol
adc
loopne
and
dec
xchg
mov
xchg
rorl
push
and
inc
fisubrs
movsb
lret
jl
push
adc
jle
or
es
cmp
cmp
pushf
sbb
fsts
aas
loope
outsl
add
xor
je
out
add
into
push
in
dec
call
rcr
stos
shl
fistpl
xor
ror
sbb
cwtl
vmaxss
outsl
push
fldcw
xchg
xchg
icebp
dec
lcall
mov
jg
jmp
mov
test
push
dec
mov
inc
fwait
cmp
adc
xchg
dec
fs
mov
cli
cmpl
pushf
sub
pop
icebp
add
dec
sbb
fsub
cli
sub
jge
push
ret
dec
cld
stos
les
repz
jl
int3
dec
outsl
pop
xor
jae
adc
ds
sbb
rorl
inc
cmc
adc
hlt
lea
gs
mov
rcrl
pop
fsubs
and
pusha
mov
xchg
sbb
imul
mov
test
sub
add
mov
mov
push
lahf
pop
neg
sarl
fs
sarb
pop
xchg
fisttpll
adc
imul
aam
sahf
rcl
inc
xchg
cmpsl
or
out
dec
ss
scas
lds
fwait
imul
imul
in
xchg
pop
std
and
mov
loop
sahf
inc
test
in
outsl
mov
push
rcrl
jl
frndint
popf
out
xor
mov
sub
fsubl
into
out
imulb
push
movsl
filds
test
cmp
cmpsl
or
xchg
inc
adc
mov
pop
pop
xchg
push
cmp
jnp
daa
clc
fcoml
stos
fiadds
inc
popf
push
fisubs
out
sbb
jecxz
lods
ss
add
ljmp
jle
mov
jbe
shll
xchg
mov
xor
inc
imul
push
hlt
setg
and
or
mov
cmpsb
xor
sbb
xchg
lock
sarl
mov
icebp
xchg
push
adc
insb
sub
mov
lock
lock
je
shrb
jle
sbb
mov
mov
loope
adc
inc
mov
sbb
adcb
cld
sbb
inc
push
loop
push
push
loope
mov
mov
aam
pop
sub
daa
or
xor
push
and
jecxz
enter
mov
std
xor
insl
rol
lret
xchg
jl
dec
aam
repnz
mov
decb
nop
xor
js
mov
jp
shrl
mov
subb
pop
cwtl
bound
push
jmp
sbb
adc
add
dec
aad
inc
xchg
push
and
add
mov
adc
adc
movsl
mov
xchg
mov
sbb
xchg
adc
adcl
pop
sub
outsb
insb
mov
add
lret
pop
loope
out
sahf
xchg
jnp
jns
dec
or
push
mov
and
into
mov
xchg
dec
mov
dec
pop
adc
sti
nop
or
insb
ljmp
sub
jnp
shlb
xchg
add
cmp
insb
cmpsb
out
dec
ss
fsubrp
sbbl
std
loop
xlat
mov
jno
add
mov
adc
jnp
push
jnp
arpl
sub
into
andb
jnp
sbb
dec
sub
and
aas
sbb
stos
xor
les
mov
scas
iret
stos
cli
popa
rcl
arpl
cs
pop
or
insl
ds
enter
das
cld
adc
mov
jbe
data16
dec
sub
sub
arpl
ret
pop
adc
add
test
les
dec
mov
lret
jle
push
push
pop
inc
jmp
movsl
inc
and
outsl
mov
lds
mov
in
inc
loope
dec
fs
arpl
xchg
cmpb
cli
subl
ljmpw
mov
push
test
inc
sbb
xchg
sub
add
lods
dec
hlt
xchg
inc
dec
and
push
inc
or
mov
shll
in
lds
xor
and
jnp
cmp
push
fwait
sbbb
out
test
call
ja
dec
cmp
pop
fs
inc
mov
clc
cltd
jp
mov
int3
pop
jmp
stos
test
dec
jecxz
dec
roll
xor
iret
push
hlt
and
arpl
outsb
loop
leave
shlb
in
lods
adc
cmovp
xchg
jecxz
cmc
jl
aaa
fbstp
mov
andl
lock
sti
in
mov
xchg
xlat
mov
jecxz
mov
add
pop
into
jle
adc
xchg
in
aaa
xchg
mov
add
push
mov
daa
xor
out
out
jmp
cmp
int3
push
fs
cwtl
cmp
inc
int3
out
aaa
stc
fwait
pop
push
nop
pop
pushf
jg
xor
sbb
aad
sbb
adc
in
call
sbb
daa
cmp
stc
mov
movsl
out
in
imul
or
lcall
int
int3
push
dec
and
push
lea
call
loope
aad
adc
push
push
push
sbb
push
fistps
test
clc
jg
iret
leave
test
mov
in
sub
cmc
xorb
jb
ljmp
ss
inc
in
xchg
insb
dec
repnz
bndldx
lea
cmp
pop
dec
mov
push
pop
mov
imul
jmp
xor
sbb
dec
testb
push
dec
mov
dec
and
or
fxch
adc
dec
jecxz
pop
and
pop
shlb
jns
mov
mov
dec
mov
jns
imul
adc
icebp
in
mov
add
adc
jbe
out
sahf
fsubrs
lcall
aaa
mov
in
sbb
mov
repz
fildl
ret
enter
ss
or
je
lds
stos
pop
mov
mov
clc
add
cmp
and
js
gs
cmpsb
mov
decl
push
negl
movsl
test
pop
or
addl
out
lahf
fdivrs
jae
adc
je,pn
out
mov
xor
or
mov
jb
dec
repnz
into
mov
inc
mov
dec
rcrb
push
push
mov
daa
in
lods
shrd
nop
sub
mov
testb
shlb
out
sub
aaa
ds
adc
ss
pop
aas
aad
add
xchg
add
xor
xchg
sub
pushl
enter
mov
test
mov
adc
xor
cmp
inc
imul
mov
add
dec
enter
outsl
mov
push
fdivrl
mov
mov
cmp
jmp
push
stos
mov
int
rcr
pop
mov
bound
hlt
jo
ja
mov
imul
loope
jne
andl
ret
cmp
cmp
cmp
adc
lods
mov
icebp
adc
adc
xchg
mov
out
mov
aad
shlb
fadd
arpl
sbb
jg
insb
mov
mov
jo,pt
jns
mov
mov
fiaddl
xchg
call
cmpsl
xor
fs
inc
ret
jecxz
inc
pop
pop
aam
repz
imul
rcr
cmpsb
add
add
jo
cmpsl
loopne
push
fcompl
dec
cmp
pushf
clc
mov
lea
dec
lret
cmpb
xchg
mov
mov
das
je
xor
stos
les
mov
sbb
jg
shlb
int
add
pop
or
mov
iret
sub
pop
push
dec
add
cmp
icebp
mov
out
dec
inc
call
daa
dec
mov
int3
repnz
pop
jnp
or
cmp
inc
push
xor
mov
pop
mov
fists
xchg
push
arpl
scas
xchg
out
adcl
fmull
and
dec
mov
xchg
dec
fmuls
mov
adc
sti
push
mov
popa
adc
jge
cmp
js
int
je
daa
lcall
push
sarl
jb
pop
add
das
xchg
xchg
fs
cmp
shr
inc
iret
imul
sub
mov
rorb
sbb
sub
dec
cmp
fwait
out
cmpsl
and
jl
cmpb
mov
sbb
jns
cwtl
push
cltd
movsb
jle
xchg
insl
push
gs
push
int
add
inc
repnz
inc
je
push
inc
aad
icebp
insb
in
fimull
test
cs
test
sbb
cmc
push
cmp
xor
popa
dec
ljmp
and
jae
cmpsl
inc
cmp
fdivs
sbb
pop
xchg
xchg
mov
or
pop
sti
mov
icebp
jns
hlt
imul
inc
fbld
pop
fstps
rclb
movsl
lods
cld
pop
mov
sub
xor
scas
push
xchg
dec
dec
mov
dec
jnp
pop
test
test
cltd
mov
jnp
and
jg
in
andb
mov
orl
jb
dec
jl
cmpl
xor
shrl
mov
mov
fimuls
xchg
xchg
pop
sbb
into
push
movsb
or
test
mov
sbb
mov
jp
cld
inc
out
scas
pop
xor
mov
sti
sbb
push
push
shr
into
lea
pop
icebp
shlb
lea
clc
jnp
push
fidivl
and
adc
jmp
fwait
sbbb
ret
xchg
arpl
mov
xor
les
in
mov
and
adc
lahf
lea
mov
sub
pop
popa
mov
std
add
xchg
ret
scas
cmp
cmpsl
mul
test
mov
data16
pop
fs
enter
fidivrs
lods
adc
popl
pop
fwait
insl
mov
and
cmpsb
push
xor
mov
in
pop
pop
pop
dec
cmp
jns
fdivrs
repnz
dec
fldcw
adc
fs
fisubrs
in
test
into
xor
popa
es
pop
jnp
ret
fnstcw
dec
shlb
xor
or
cmp
cmp
jo
adc
loop
mov
in
xchg
sub
inc
mov
jg
into
xchg
rcrb
loopne
stos
cmp
dec
jb
pop
sbb
and
ret
sahf
dec
loop
jp
inc
sbb
and
mov
dec
mov
ljmp
mov
xchg
jle
pop
fildl
sub
fdivp
les
and
or
cmp
negb
clc
jmp
test
dec
add
push
fwait
test
jge
repnz
clc
adc
xchg
sbb
mov
fmuls
pusha
pop
mov
imul
inc
add
sbb
imul
ss
clc
pop
mov
ds
fnstsw
mov
out
push
insl
scas
fnstsw
jb
rcll
xlat
dec
pop
nop
jl
lcall
push
xchg
mov
or
sub
fildl
cmc
inc
jg
mov
or
mov
movsb
cmp
push
popa
pop
push
inc
mov
leave
push
adcb
pop
mov
push
add
enter
in
add
scas
mov
or
jnp
or
js
test
jmp
lods
xchg
outsb
sub
repz
cmp
adc
cmpsl
sti
xchg
aaa
mov
cwtl
mov
xor
data16
mov
inc
jle
aaa
mov
jno
cmp
stos
pop
test
push
cmpsb
inc
jnp
inc
sub
call
lods
int3
jmp
push
ds
pop
mov
mov
mov
test
pop
inc
mov
xor
dec
cmp
cld
inc
pop
ljmp
or
fisubs
xchg
inc
push
roll
mov
es
movsb
mov
fadd
out
add
scas
cmp
inc
xor
insb
cmp
xchg
jp
insl
add
jns
and
bound
sub
ss
inc
sar
adc
fwait
xchg
xchg
sarl
scas
fs
je
imul
cmpsb
test
sub
xor
add
inc
add
adc
pop
ljmp
ljmp
ja
sbb
les
sub
fcoms
dec
into
rorb
push
mov
inc
sbb
std
add
cmpsl
mov
in
jne
enter
lret
cmpsl
jge
sahf
cmpsb
hlt
in
mov
and
add
cmp
nop
pop
test
jnp
cwtl
jl
xchg
add
push
add
lods
lcall
in
movb
cltd
fimuls
jbe
nop
loopne
mov
ficomps
dec
movsb
scas
sub
stos
jbe
mov
xchg
jmp
add
pop
xchg
xchg
jmp
cmc
and
xchg
loope
iret
push
ss
jbe
loopne
xor
scas
std
repnz
sub
js
shll
cmp
and
out
jns
dec
sbb
inc
int3
aas
jbe
mov
push
rcll
fwait
cmp
adc
mov
les
scas
nop
pop
in
mov
jl
jae
cld
jnp
xchg
mov
repz
sub
inc
mov
inc
xchg
sub
test
sbb
in
add
jl
cwtl
arpl
test
mov
push
jne
sub
clc
or
pop
mov
and
pop
loope
xchg
mov
jne
sbb
jg
sbb
fcom
pop
jb
sbb
and
stc
xchg
sub
or
add
shl
aas
idivb
jmp
je
inc
xchg
mov
icebp
fdivl
aaa
aad
test
daa
ficoml
movsl
fnstcw
subl
fisttps
sbb
push
fstpt
push
out
mov
movsl
and
cmpsb
lahf
xchg
js
ret
out
add
sub
leave
and
sub
std
es
push
sti
cwtl
push
mov
jnp
push
xchg
jle
adcb
ret
stc
outsb
fsts
mov
mov
sbb
aam
mov
test
sbb
xchg
fmull
mov
xor
mov
fidivrs
or
push
arpl
cmp
mov
jl
and
dec
cmp
lahf
popf
fstl
mov
jecxz
enter
ficoml
xchg
std
je
sbb
xchg
add
sub
push
add
popf
pop
xor
dec
in
cmp
stc
jb
shrl
sbb
or
cmp
pop
ljmp
scas
lock
orb
iret
pop
js
pop
loope
adcl
sbb
ja
xor
push
bound
cwtl
loop
cs
jmp
jo
lret
pop
xchg
sbb
ret
int
cmp
push
push
movsb
push
push
inc
hlt
scas
pop
repz
xchg
andb
divb
mov
in
mov
popa
scas
mov
outsb
aas
pop
fcmovb
lock
adc
lock
sbb
call
in
cli
out
cmovle
loope
outsl
push
sbb
cmpsb
push
fnstcw
mov
js
decl
ss
sahf
scas
ret
mov
adc
faddl
punpckhbw
mov
cmc
mov
loopne
ret
mov
in
fs
inc
or
sub
push
stos
dec
repz
jae
sub
js
sub
xor
daa
test
mov
icebp
sti
add
sti
iret
sub
pop
pop
lods
cmp
out
andl
jg
or
or
xchg
push
int
in
in
es
cmp
inc
sub
shll
push
sahf
jmp
xchg
lock
adc
les
inc
and
push
pop
sbb
mov
insl
stos
int3
dec
test
sti
jno
or
add
jno
push
fidivs
hlt
or
sub
push
jbe
nop
mov
push
jle
in
in
scas
aam
iret
jle
jno
push
stos
mov
push
leave
cmp
cld
mov
lahf
mov
dec
jecxz
adc
mov
out
insb
mov
leave
adc
ljmp
adc
lods
xchg
push
pop
insl
out
sarl
dec
and
stc
iret
inc
mov
data16
add
and
sub
jge
xchg
dec
cli
push
dec
and
jo
inc
scas
aad
jg
rsqrtps
test
cmp
dec
adc
fwait
and
adc
je
xchg
shlb
repnz
stc
fnstenv
mov
and
push
bound
add
and
clc
mov
lcall
ss
cld
cmp
jo
daa
ja
cmp
outsb
stos
xchg
sub
mov
fmul
add
dec
add
or
in
outsl
out
jno
xlat
pop
mov
cwtl
scas
pop
push
jb
adc
sti
mov
adc
mov
adc
push
les
jp
mov
xor
je
push
sub
mov
in
fs
pop
add
and
les
mov
dec
dec
adc
cld
je
jnp
cmp
mov
mov
pop
dec
orb
jnp
xlat
dec
loop
out
cmp
data16
ds
xchg
pop
aad
outsl
pop
lret
into
testl
push
imul
out
clc
shll
push
fnsetpm(287
or
outsb
repnz
je
popa
shll
push
cmp
out
push
sbb
mov
insl
test
repnz
pop
sbb
and
xor
mov
push
mov
out
popa
dec
fistpl
std
out
faddl
pop
dec
shl
in
xchg
lds
sbb
sbb
xor
pop
loopne
add
adc
mov
inc
mov
xchg
enter
push
pop
sarb
repnz
cmpsl
bound
fidivrl
scas
adc
push
pushf
pop
cld
addr16
xchg
adc
dec
mov
or
aad
mov
and
jg
subl
out
scas
dec
cltd
pop
and
lcall
sarb
inc
loop
sbb
cmpsb
sub
jle
inc
or
cmp
jle
adc
fwait
pop
adc
push
aas
add
push
pop
mov
xlat
movsl
mov
in
pop
sti
mov
jge
push
ret
loopne
xchg
sbb
mov
mov
pushf
jne
jmp
enter
fs
or
jns
dec
push
inc
mov
jle
ja
pop
mov
je
mov
jae
jg
shl
fs
pusha
push
sbb
mov
sub
push
inc
and
add
sbb
test
xchg
adc
jl
in
sbbb
pop
lock
dec
mov
mov
xor
pusha
or
lods
cmp
sub
shlb
adc
adc
lahf
adc
xor
push
aad
inc
ss
hlt
ja
mov
gs
int3
lahf
adc
enter
adc
adc
and
insb
xor
imul
adc
cli
jne
jb
sbb
mov
xchg
loop
dec
dec
mov
jnp
mov
loop
mov
xor
stc
nop
loop
jmp
sub
imul
loopne
daa
in
add
fstpl
dec
add
xchg
fadds
inc
jae
stc
mov
or
push
jo
add
push
in
mov
push
xor
popf
gs
ffreep
inc
pop
mov
dec
mov
sbbb
fmul
imulb
push
mov
test
test
mov
sbb
jae
xor
and
mov
adc
jl
cmp
and
mov
push
ret
rorl
ja
lret
fisubs
mov
jne
arpl
jle
sti
fldenv
stos
adc
add
cmp
fdivl
mov
arpl
cmp
push
lahf
movsb
xchg
insl
subl
std
sbb
clc
out
push
lock
mov
dec
mov
test
mov
pop
rcl
aas
push
stos
mov
push
jl
or
aad
jecxz
push
add
add
dec
fistl
test
mov
mov
cmpsb
mov
movsb
xor
ret
aam
loopne
repz
mov
xchg
stos
stos
push
cmp
push
sbb
dec
sub
insb
mov
jno
arpl
and
mov
xlat
push
xchg
adc
mov
lret
popf
fcoml
loop
sbb
fistl
cld
mov
mov
pop
pop
push
in
in
loope
sub
mov
sbb
jp
inc
xor
inc
das
and
xor
jmp
push
push
test
out
int
int3
jg
mov
stos
mov
mov
or
mov
xor
mov
push
ret
xor
js
jbe
mov
xchg
sbbb
out
in
stc
push
sar
push
pop
mov
lahf
data16
lods
xchg
dec
mov
stc
cmc
xor
sub
pop
in
aam
ljmp
or
xchg
sbb
stc
mov
ret
and
push
mov
pop
sub
lods
xor
js
test
jecxz
in
and
inc
mov
inc
cmp
add
je
cmp
pop
xchg
add
fistpll
aaa
xchg
idivb
fldenv
xor
ret
mov
push
daa
je,pn
mov
and
repnz
dec
imul
mov
add
repz
lret
fstpt
fwait
stc
push
pop
into
jecxz
loop
clc
mov
cmc
xchg
adc
jg
dec
mov
inc
push
ret
ficomps
dec
divb
dec
mov
hlt
dec
mov
sahf
dec
jae
inc
into
add
adc
ds
jl
mov
sub
rol
pop
push
sub
inc
test
test
call
cmp
mov
test
cli
add
int3
cmp
jl
and
sub
sbb
cmp
mov
clc
cs
dec
inc
sub
or
and
or
stc
bound
outsb
mov
mov
cmp
add
sar
sbb
clc
fcomps
mov
mov
jb
or
rolb
jmp
add
xor
into
jae
and
mov
loope
out
int3
mov
sub
cmpsl
and
pop
pop
xor
mov
lahf
push
sub
mov
rcl
jle
aad
mov
popf
lods
mov
fs
push
pusha
add
jl
out
pop
cld
push
sub
pop
pop
ret
and
std
mov
pop
xchg
int
test
jnp
sbb
aaa
xchg
int3
fcompl
mov
and
orb
sub
mov
hlt
out
idivl
and
sub
cmp
scas
call
xor
mov
popf
jl
sbb
adcb
sti
iret
sbb
loop
inc
test
ret
add
dec
push
neg
xchg
push
sbb
dec
push
cs
jns
test
sub
lock
cwtl
out
or
dec
outsb
xchg
ja
add
imul
pop
mov
mov
rcr
ret
jbe
shrl
mov
pop
jg
fmull
test
dec
mov
pop
xor
int
lea
push
add
in
icebp
and
fldl
push
fldl
pop
test
out
mov
mov
push
addb
stc
inc
lea
jecxz
jns
lock
push
add
jmp
lods
push
pop
fistpl
mov
aad
push
lret
or
daa
inc
aam
mov
dec
sub
dec
jge
insb
cmpsl
cld
sti
push
mov
pop
cwtl
push
dec
push
or
sti
mov
aas
xchg
out
rorb
sahf
dec
imul
xchg
rcll
xlat
mov
push
jae
lret
add
ljmp
popa
pop
idivb
or
jo
movsl
pop
stc
fwait
leave
lahf
push
daa
dec
mov
popf
dec
sbb
outsb
iret
subb
leave
out
or
jbe
imul
daa
dec
pop
stos
sub
mov
loope
lret
lods
sub
flds
jnp
sahf
push
inc
sbb
push
xchg
and
jl
jge
subl
jo
push
sbb
add
push
cmpsb
test
push
les
sbb
push
inc
shlb
dec
sub
divb
mov
xchg
xchg
cmp
adc
sub
addb
cmp
cmp
je
bound
lods
popa
fdivl
je
movsl
mov
fwait
xchg
pop
and
into
xchg
or
push
push
addr16
and
pop
in
aas
xor
fiadds
pop
push
sbb
int
in
gs
mov
jne
or
ja
lock
out
pop
ret
jmp
mov
mov
pop
mov
addr16
sbb
mov
js
adc
push
sbb
jmp
in
and
adc
gs
xchg
push
pushf
mov
mov
call
mov
enter
add
fwait
loop
or
add
pop
jp
imul
roll
add
shll
movsb
addr16
cld
lods
movsb
mov
pop
fdivr
and
outsl
xor
into
inc
xlat
ds
or
in
sar
repz
adc
mov
push
int3
mov
add
subl
je
push
repz
inc
sub
dec
or
cmp
push
mov
dec
mov
std
das
subb
and
cltd
stos
mov
in
pop
pop
dec
mov
add
pop
push
jnp
mov
inc
pop
sti
xor
movsl
and
xor
sub
mov
test
xchg
mov
cmp
and
xchg
push
fnstsw
lock
mov
ret
inc
ss
mov
xchg
xchg
gs
jge
push
ret
jecxz
testl
jp
int
loope
imul
mov
scas
dec
shll
cmpsl
repz
inc
xorb
inc
push
ficompl
cmp
jns
insl
lock
popf
sbb
pop
movsl
push
mov
jmp
ret
cmpsb
mov
fldl
pop
enter
lock
mov
mov
dec
outsl
negb
shlb
clc
pminub
aam
jnp
jle
xchg
fs
outsl
imul
pop
int
ja
out
add
cltd
or
pop
cmp
jl
adc
int
sub
xchg
fdivrs
add
inc
ds
add
stos
icebp
call
stos
sbb
in
sbb
loopne
subb
lods
addr16
pushf
cmp
es
fbstp
rorb
je
or
cmpsl
sbb
mov
iret
fistpll
xchg
push
insb
inc
cwtl
nop
scas
lret
pop
xchg
sbb
pop
mov
fdivrs
xchg
cmp
mov
inc
pop
inc
pop
cmp
popf
insb
shlb
paddd
xor
pushf
scas
inc
jno
push
lods
mov
das
mov
adc
das
push
jnp
test
xchg
int
shrl
pushf
push
lcall
insb
icebp
mov
ja
pop
sub
scas
adc
out
into
dec
sub
out
fisttpll
outsb
stos
or
xor
aas
lcall
out
les
cli
cmp
bound
add
sbb
in
aad
icebp
cmpl
dec
stos
push
dec
push
mov
pop
jmp
mov
and
mov
xor
mov
push
push
sarb
inc
loop
sbb
push
stc
fistps
pop
jne
pop
push
mov
mov
fisubs
pop
dec
jno
or
loopne
jmp
test
popf
xchg
and
dec
sarb
cwtl
push
adc
aad
repnz
lods
push
pop
mov
jns
cmp
jmp
pop
mov
mov
or
inc
lea
push
bound
mov
mov
push
dec
jae
xchg
xchg
dec
fcomps
fcomps
test
cs
fadds
jecxz
dec
int
jmp
sub
cltd
fiadds
xchg
aaa
repz
add
je
xchg
int3
xchg
bound
push
mov
dec
std
sahf
inc
jle
jno
lock
cmp
sub
popf
in
pop
and
xor
out
pop
sbb
sub
jne
pop
and
jecxz
movsl
ret
outsl
fists
fisttpll
enter
inc
jp
cmp
frstor
cmp
scas
mov
push
cmp
sti
inc
mov
jmp
je
gs
add
filds
mov
rcll
jo
lock
cld
xchg
push
loopne
inc
dec
xor
push
aam
mov
adc
lock
enter
push
insl
xchg
mov
lahf
and
jns
xchg
jmp
out
dec
ja
sbb
fnstsw
sub
rorl
xchg
cmp
into
mov
mov
dec
inc
cmp
jmp
leave
cli
jg
push
add
hlt
xchg
ds
ds
aad
ss
dec
sbb
fs
mov
jmp
ds
pop
jne
and
pop
cmp
lods
cld
xchg
pop
mov
cmp
xlat
fisttpl
test
add
insl
aad
sbb
sub
stos
dec
adc
push
fwait
jmp
sub
xchg
or
shrl
pushf
leave
cmpsl
rolb
sub
mov
pop
sbb
cmc
lea
test
and
or
nop
push
add
inc
pop
cs
cmp
fisubs
clc
adc
cmp
roll
mov
add
mov
xchg
xchg
and
adc
sbb
lret
xor
sbb
push
lds
sbb
les
adc
lahf
xchg
lods
mov
popa
imul
aad
insl
sbb
cmp
or
add
andl
inc
popa
scas
cmp
sbb
pop
fnstcw
sub
xor
ja
and
icebp
or
mov
arpl
imull
in
dec
or
shlb
mov
mov
loopne
inc
xorl
vunpcklpd
or
mov
mov
jbe
gs
mov
mov
shll
push
scas
lods
and
cmpl
aas
jp
test
mov
mov
fistpl
imul
xchg
inc
aad
sub
mov
in
xchg
bound
jne,pn
adc
aas
das
inc
leave
cmp
pmaxub
nop
stos
dec
or
inc
mov
sbb
notl
and
sbb
call
add
xchg
loopne
adc
inc
pop
popa
and
pushf
xchg
jns
inc
notb
push
daa
push
mov
fcomps
xor
outsb
inc
pop
dec
mov
jnp
daa
repz
loope
lock
lret
filds
cmpsl
jmp
push
not
sti
xchg
faddl
nop
es
push
sti
mov
out
sub
sbb
fcomps
cmp
lahf
test
jmp
stos
fneni(8087
add
sub
in
fadd
addr16
xor
cmp
iret
push
mov
sbb
mov
push
mov
mov
and
dec
mov
lret
dec
mov
xchg
test
jae
int3
movsl
xchg
mov
and
data16
lcall
lds
ret
jg
call
cmp
sbb
mov
adc
xor
iret
pop
pop
jnp
push
test
push
sbb
lcall
subb
xchg
mov
fwait
test
xchg
jecxz
jl
ja
and
xor
sbb
mov
hlt
mov
pop
sarb
add
fstl
mov
pop
ficomps
cmpsb
mov
push
jb
or
in
dec
jo
lret
pop
and
sub
data16
and
dec
or
sar
add
cmpb
cmpl
push
jbe,pt
fsubrs
repz
call
mov
adc
orl
sub
outsb
fsubrs
cmp
daa
cmc
jecxz
subb
jge
mov
jnp
mov
mov
xor
fsts
push
add
int
aad
xchg
icebp
push
jl
imul
mov
pop
sub
jae
fcoms
sbb
and
mov
cmp
sub
imul
sub
lret
inc
test
pusha
push
stos
push
xchg
cli
stc
cmpsb
adc
movsl
mov
jmp
jbe
ljmp
mov
int3
dec
jbe
xchg
mov
divl
stos
mov
dec
in
test
aas
out
xor
add
push
clc
insb
xor
or
jp
ljmp
cmc
out
mov
outsl
dec
imul
jg
outsl
shl
push
add
mov
popa
ds
mov
mov
sub
lods
sbb
ja
mov
pop
mov
inc
repz
xor
or
mov
loope
cmc
pusha
int3
add
test
xor
cmp
int
add
sbb
arpl
subb
jbe
push
es
call
pop
push
lea
subb
xlat
push
cmp
xor
fdivrs
repz
cmp
mov
or
mov
sbb
cmp
mov
xor
rcl
das
and
dec
pop
sbb
in
sub
dec
mov
xor
out
sbb
scas
cmp
push
jb
lcall
outsl
insl
daa
lds
and
insb
mov
rol
dec
xchg
ret
mov
sub
xor
je
cmp
inc
fs
into
fnstsw
xor
hlt
pop
cmp
inc
fiadds
push
push
or
mov
inc
inc
pop
cmp
out
js
mov
sbb
push
bound
inc
inc
bound
push
aaa
ret
mov
scas
sbb
outsl
aam
jle
push
mov
stos
mov
cltd
fcoms
mov
dec
jno
xchg
inc
imul
fildll
and
sub
inc
or
gs
mov
push
add
sahf
mov
mov
mov
cmc
aaa
adc
mov
aam
gs
aaa
cltd
jne
sbb
lcall
movsl
stos
movsl
test
test
jg
inc
pop
mov
dec
jg
jmp
scas
push
sbb
xor
hlt
es
xchg
add
aam
adc
cmp
adc
push
mov
mov
stos
push
and
addr16
hlt
push
mov
sub
sub
std
outsb
cmpsl
cmc
test
daa
lret
inc
push
es
cltd
js
mov
adc
stc
adc
pop
sarb
jo
cltd
dec
xor
dec
loope
in
es
xor
mov
mov
out
lret
addl
xor
dec
outsl
xchg
cmp
out
test
mov
xor
xor
lahf
aas
push
loopne
sbb
push
je
add
sbb
rcll
add
aas
stos
inc
mov
push
or
lds
add
pop
addb
mov
sbb
mov
arpl
cwtl
mov
outsl
cs
imul
dec
pop
cmp
xchg
mov
imul
sub
es
and
pop
inc
insl
pop
lea
xchg
pop
mov
hlt
das
push
out
pop
xchg
push
ds
mul
cmpsl
jecxz
inc
xchg
pop
cwtl
in
jle
pusha
xor
cmp
dec
call
and
sarl
push
lea
push
inc
arpl
add
aam
cwtl
fcmovb
sbb
mov
movzbl
dec
ss
ljmp
cmp
std
je
andb
int3
xor
sbb
les
fsubrl
mov
cmp
inc
jmp
or
mov
aas
and
scas
cmpsb
mov
hlt
inc
mov
add
push
je
fcomps
dec
fwait
jp
pop
inc
pop
adc
or
jne
cmp
adc
pop
addr16
xchg
push
cmp
pop
ret
cld
shll
dec
nop
mov
pop
xor
sbb
test
dec
popa
mov
out
mov
mov
jg
mov
xor
and
cmp
aad
pop
iret
xor
mov
pop
les
ret
in
lret
dec
dec
jb
jnp
nop
rorl
aam
pop
jno
loopne
outsb
outsb
iret
dec
adc
push
fdivrs
adc
movsl
aad
xor
inc
cmpsl
sarb
sub
cmc
test
jmp
cmp
xchg
stos
sbb
mov
addr16
push
or
jmp
dec
mov
les
fcom
daa
stos
or
push
cmpsl
mov
mov
je
inc
jno
add
loop
pop
jl
cmp
mov
sbb
xor
test
sub
enter
imul
add
sbb
sbb
fwait
cmpsb
dec
sahf
pop
iret
adc
cmc
mov
xchg
out
and
xor
dec
leave
push
leave
lret
cli
jae
sbb
jae
sbb
cmp
mov
sub
push
or
cli
sbb
mov
pop
dec
xor
push
jo
or
dec
dec
pop
jecxz
ret
xor
jle
arpl
jns
jge
dec
or
movsl
out
sub
ss
cmp
sbb
test
pushf
sub
mov
and
adc
pop
dec
sti
test
adc
xchg
ja
mov
movb
insl
mov
push
pop
fadd
add
and
out
fdivrl
stos
cmpsl
daa
lcall
xlat
pop
push
shlb
bound
jecxz
jae
aad
les
add
xchg
or
cmp
pop
sub
xorb
adc
ljmp
lods
sub
pop
sbb
pushf
and
or
sbb
sbbb
insl
mov
outsb
mov
mov
and
out
fdivs
push
inc
shrl
and
movl
out
mov
push
push
cmpsb
fsts
pop
addb
xor
popf
dec
cmp
out
pop
sub
jle
cltd
xor
mov
dec
adc
mov
sub
lock
leave
mov
xor
and
fwait
sbb
and
imull
lcall
jl
sub
loope
shll
loopne
sub
mov
ljmp
mov
inc
lds
cli
inc
xor
ljmp
mov
dec
loopne
fisubl
mov
mov
adc
lea
int
fnsave
sbb
cs
add
pop
inc
fcmovbe
loopne
in
xchg
sbb
push
mov
mov
loopne
inc
cmp
ja
imul
cmc
movsl
or
xor
pop
mov
jmp
inc
sti
insl
int3
rorl
jnp
xor
push
xor
or
inc
adc
rolb
or
sub
xchg
scas
jge
out
fimuls
xchg
inc
loopne
sub
jb
inc
sbb
fbstp
mov
rcrb
mov
push
sahf
mov
sbb
jg
adc
out
push
shlb
pop
xor
shlb
pusha
sub
lcall
cmpsb
adc
aam
cmpb
xor
lahf
sbb
dec
mov
cltd
and
test
sub
clc
sbb
outsl
sbb
repz
or
inc
loopne
cmp
out
push
xor
cmc
mov
leave
loopne
add
mov
mov
adc
aas
adc
and
xchg
std
cmpsb
mov
pop
xchg
sub
lock
daa
aad
and
cmc
adc
hlt
inc
bound
xor
vmaxss
mov
movsb
sub
xchg
or
fld
inc
icebp
pop
cmp
int
adc
jecxz
inc
add
add
xchg
arpl
add
cmp
nop
or
aaa
push
out
aaa
mov
cmp
dec
mov
mov
lods
mov
and
mov
aas
rclb
jnp
call
je,pn
mov
ja
adc
gs
out
je
popf
outsb
popa
pop
jae
cmp
out
lret
sbb
lods
mov
sub
imul
inc
push
and
pusha
aas
or
aaa
divb
movsb
sarb
push
or
inc
lret
pop
pop
popa
pushf
adc
popa
pusha
sub
movsl
mull
stc
test
mov
rorb
cmp
xchg
ret
mov
push
data16
xor
hlt
and
xchg
ljmp
push
mov
loopne
add
cmp
cli
xor
data16
dec
mov
push
cmp
sti
ret
sub
movsb
jb
pop
ret
cmp
aam
jns
je
mov
notl
testl
mov
push
lahf
mov
dec
in
outsl
js
cmpsl
shlb
outsb
fs
jbe
or
out
ret
andb
repz
and
jo
pop
into
movsl
out
sbb
mov
sub
xchg
adc
lea
call
sub
aaa
ficompl
jno
push
sub
repz
das
hlt
xchg
out
add
ret
adc
repnz
mov
pop
xor
push
movsl
out
cmp
ds
stc
mov
push
fmuls
xchg
pop
jecxz
cmp
mov
xor
fnstenv
mov
test
scas
fimull
rorb
sbb
push
cmp
mov
dec
movsl
or
push
xlat
xchg
test
lods
add
push
inc
fwait
pop
or
insl
jns
jp
lds
sub
sub
sbb
xlat
outsb
and
loope
xchg
mov
sub
imul
xchg
das
mov
mov
frstor
call
out
pop
sub
cmp
sub
mov
xor
xchg
jecxz
xor
mov
lea
mov
lret
xchg
mov
jl
mov
adc
cmp
push
mov
mov
gs
jae
lock
adc
nop
test
jo
outsl
scas
or
out
adc
iret
pop
addl
fs
icebp
dec
js
cmpsl
or
mov
add
sbb
cs
jp
pop
ret
rcl
push
in
mov
mov
inc
int
xchg
pusha
loope
add
jge
fidivrs
pusha
sahf
xchg
imul
sub
scas
mov
dec
test
push
clc
sbb
jmp
pusha
ret
xchg
fmuls
xor
jge
hlt
dec
inc
xchg
sub
cmp
rcll
mov
loopne
jnp
mov
movsb
or
shll
cmp
ljmp
mov
pop
sub
pop
sbb
xchg
clc
inc
cwtl
fdivr
mov
divb
or
ds
jg
lahf
in
push
jp
xchg
jnp
scas
push
and
push
cmpsb
mov
loopne
lcall
jmp
rclb
jle
lds
jno
jno
loopne
xchg
je
dec
inc
iret
xor
mov
mov
pushf
jbe
lahf
jg
add
movsl
insl
imul
or
dec
cltd
jne
inc
sub
aam
mov
mov
inc
lods
mov
ljmp
dec
into
lods
es
mov
repz
test
mov
pop
cltd
xchg
cmpsb
enter
cmpxchg
les
jmp
cltd
test
je
dec
xchg
popf
fstps
stos
pop
pop
stos
or
mov
sbb
pop
add
repz
jmp
mov
cmc
inc
movb
mov
add
out
jno
lds
mov
add
insl
cmp
psrlq
shr
jbe
xor
mov
cs
pop
scas
ss
data16
xlat
fcomps
xor
xor
hlt
xchg
pop
out
jne
das
and
jns
mov
imul
xchg
in
lret
or
pushf
dec
sub
xchg
mov
sbb
test
jns
notl
sub
mov
and
cmp
adc
clc
push
sub
adc
jmp
push
cmp
ficoml
movsb
dec
lea
popa
aas
and
aad
shlb
dec
jbe
sub
mov
mov
cmp
andl
jne
lock
in
shrb
outsl
repz
cwtl
bound
adc
or
or
pop
mov
cwtl
outsl
add
stc
lcall
mov
push
pop
test
adc
dec
mov
jae
add
mov
daa
lods
push
pop
bound
inc
mov
in
in
jne
adc
testl
addr16
stos
popa
mov
pop
in
stos
test
xor
lea
ss
ss
mov
loop
mov
cli
hlt
push
clc
fnstenv
mov
clc
pushf
cltd
sub
inc
nop
popa
out
outsb
stos
xor
call
loope
sub
nop
addr16
cld
pop
decb
iret
jae
jp
push
aad
stc
pop
add
sbb
mov
cmp
or
mov
sbb
icebp
jne
sub
jnp
outsl
cs
mov
pushl
in
fnsave
leave
into
cmp
in
push
int
push
aaa
test
cmpsl
movsb
and
pushf
aam
lea
cmp
xchg
sub
sbb
les
xchg
pop
mov
fiadds
enter
call
mov
pop
and
arpl
int
mov
or
mov
jno
xchg
push
fnstcw
in
dec
cltd
cmp
pop
ljmp
xchg
jmp
xchg
clc
gs
xchg
cs
xchg
add
and
push
sub
xchg
aam
lods
jbe
mov
or
cwtl
push
fsubl
push
jge
push
das
frstor
jae
ljmp
int3
mov
scas
mov
dec
movb
xchg
push
shrb
cmpsl
jp
clc
push
push
sbb
pop
pop
out
cmp
ret
jmp
sti
lahf
je
lods
iret
test
andb
cmp
jl
pop
or
inc
fwait
dec
lods
cmp
mov
mov
enter
pop
jg
in
push
stc
pop
jmp
dec
lret
mov
push
mov
rclb
outsb
cmpsl
pop
adc
or
add
xchg
testb
in
pop
mov
pusha
sbb
adc
pop
adc
std
cmp
mov
add
lods
or
in
jb
add
fists
mov
xor
sbb
sbb
dec
mov
test
pop
pop
rol
call
out
lret
push
stos
push
inc
mov
inc
cbtw
jp
scas
mov
xchg
pop
aas
pop
mov
imul
push
icebp
sub
pop
aaa
push
stos
jg
fiadds
pop
jnp
ja
in
mov
jo
das
inc
xor
or
gs
leave
sub
push
les
loop
or
mov
mov
scas
mov
xchg
sahf
nop
cmp
int3
pop
xchg
fidivrl
mov
add
call
mov
push
sti
test
je
push
je
jl
xchg
fsts
jl
cmp
jo
frstor
sti
fldcw
mov
xor
cmp
jae
pop
addr16
sahf
push
sub
popf
jns
mov
insb
inc
imull
outsl
and
cmpsb
outsl
dec
inc
sbb
add
pop
mov
cmp
ficoms
xchg
push
sub
xchg
or
pop
add
lahf
pop
mov
stos
rcl
lea
adc
fisttpl
std
out
lcall
mov
insl
std
popa
inc
test
jl
fsts
push
sahf
mov
inc
loopne
lcall
pop
mov
repnz
xor
outsl
js
frndint
add
sbb
stc
xchg
inc
sbb
je
adc
jns
jl
sbb
xor
push
movb
and
pop
js
sarb
cmovp
xlat
push
jo
lock
leave
mov
mov
and
xchg
cld
inc
push
dec
aad
mov
imul
stc
inc
mov
jmp
jmp
pushl
test
mov
pop
sub
fidivrl
lcall
mulb
xchg
mov
in
icebp
stc
sbb
lods
xor
lods
pop
and
jns
cs
int3
hlt
inc
sub
dec
mov
repz
pop
adc
pop
incb
inc
cmp
hlt
mov
daa
mov
int
insl
dec
shl
xor
jb
pop
inc
pavgw
mov
xchg
sub
add
ficomps
popa
bound
push
push
mov
push
xchg
jbe
mov
clc
mov
xlat
bound
pop
nop
or
lret
cmp
sub
sbb
pop
and
mov
andl
iret
mov
aad
or
mov
lret
and
mov
jno
daa
clc
lret
jae
inc
addb
ja
test
jge
push
cltd
rcrl
and
jmp
xor
jae
jbe
lods
test
aas
hlt
ss
dec
cld
inc
test
push
jne,pt
mov
mov
dec
jo
popf
int3
pop
out
mov
or
mov
mov
data16
aas
and
add
push
push
cmp
jae
dec
pop
ffree
xchg
pop
push
popf
xlat
aaa
outsb
loopne
mov
popa
cmp
insl
data16
push
mov
and
lahf
bound
sbb
pop
adc
ret
inc
lret
add
repnz
pushf
and
xchg
aad
or
xchg
lods
call
jne
mov
inc
pop
sti
sub
cmpsb
lock
inc
xchg
fcomi
xlat
mov
sbbl
add
and
iret
data16
inc
jne
test
mov
cli
adc
mov
jns
mov
loop
das
pushf
je
cmpsb
mov
mov
dec
mov
test
mov
jno
insb
ss
lahf
inc
shrl
dec
cmpl
add
push
jle
outsl
lret
imul
xlat
mov
xlat
inc
mov
rcrl
sbb
dec
adc
subb
in
fisttpl
aas
mov
sbb
dec
fldt
daa
xor
int
aam
sbb
test
sti
jnp
fcoms
call
mov
mov
stc
jp
adc
lahf
fwait
addr16
mov
outsl
jle
push
lods
jecxz
xchg
inc
aad
push
hlt
xchg
nop
jb
mov
mov
xor
insb
or
pop
inc
inc
xchg
aaa
hlt
add
in
daa
pop
mov
daa
inc
lods
pop
inc
mov
mov
into
adc
xor
sub
pusha
cmp
cmovl
sub
and
dec
or
test
lret
lret
xor
push
cltd
imul
lea
test
ja
adc
jecxz
in
xchg
js
stos
mov
outsl
xchg
push
push
jne
adc
les
lcall
scas
mov
lret
stos
or
jnp
mov
psubusw
mov
iret
mov
add
movsl
adc
jle
test
ss
push
or
fldl
sbb
mov
xor
cmp
test
les
sub
jecxz
mov
sbb
aam
data16
xadd
in
xor
test
inc
repnz
sub
inc
arpl
cli
cmp
jnp
aam
cmpsb
fs
jmp
aam
mov
adc
lock
aas
fists
aam
jns
fbld
fsubrs
outsl
mov
loope
push
leave
imul
push
pushl
push
xor
cmp
iret
jg
std
inc
cmp
mov
mov
rcll
and
fdivs
int
xchg
pop
fwait
inc
xorl
jne
in
inc
sbb
pushf
popf
jl
mov
scas
shr
jo,pt
mov
cmpl
and
stos
push
or
dec
addr16
call
aad
insl
and
popa
mov
stos
bound
push
sub
jne
out
sti
stos
sahf
in
rcrl
pushf
mov
sahf
insl
imul
es
fldt
sti
xchg
mov
add
lret
rcr
dec
mov
leave
add
pmaxsw
jno
mov
insl
cltd
lock
stc
cmp
outsb
rep
add
pop
divl
mov
dec
mov
fildl
insb
lods
jecxz
pop
cmpsb
sbb
jecxz
lret
call
sub
pop
lods
test
das
mov
pop
pop
outsl
cmp
movsb
testb
jmp
fs
fcompl
inc
add
loopne
add
test
cmp
hlt
sti
out
add
jg
out
pop
pop
rcr
dec
stos
cli
jle
adc
xor
inc
dec
lcall
scas
fdivrl
insl
repnz
inc
xchg
or
int3
rol
jmp
or
hlt
dec
xor
cmp
mov
xchg
imul
fcmovbe
jnp
arpl
or
sbb
pop
cmc
inc
add
mov
lds
xchg
adc
ret
inc
pop
pushf
jb
mov
and
fnstenv
adc
lods
and
nop
xchg
je
cmpsb
jne
adc
les
jns
jmp
xor
push
cmpsl
jmp
xchg
int
or
in
jmp
jmp
rcrl
add
jno
sub
shlb
adc
lcall
mov
dec
insl
sub
pop
je
cmp
aam
sbb
xchg
por
out
mov
fsubl
and
cmc
xor
jb
ljmp
jae
gs
cmp
pop
mov
adc
and
pop
push
fisubs
lea
imul
mov
in
js
rolb
lret
jo
ds
push
fisubrl
in
repnz
aas
lock
mov
into
loopne
lret
insl
mov
cmp
outsl
loopne
sub
cli
call
ds
jecxz
xchg
lods
sub
stos
roll
and
push
fnstsw
cltd
mov
jnp
add
rcll
movsb
jne
dec
sub
jecxz
rclb
subl
push
add
xchg
add
popa
and
lret
mov
cmp
cmp
repnz
inc
cwtl
imul
mov
push
sub
pop
push
pusha
jmp
bnd
in
pop
arpl
mov
icebp
icebp
jbe
cmp
shll
int3
in
scas
pop
inc
and
outsl
adc
push
mov
mov
mov
ret
movsb
push
in
inc
addr16
sub
mov
test
push
inc
cli
aad
mov
cld
inc
lods
or
mov
jne
mov
cmp
das
ja
fcom
or
cmp
cwtl
loope
push
jmp
jnp
addb
pop
sti
cmp
xor
call
xor
mov
leave
push
in
insb
add
push
addr16
jg
leave
mov
mov
adc
lcall
cld
xchg
push
sub
push
out
popa
pop
sub
stos
mov
jmp
mov
arpl
push
test
repz
inc
mov
jp
dec
mov
mov
sahf
cmp
ja
les
shrb
push
out
push
sti
dec
inc
jb
andb
cmp
ficomps
add
test
mov
fnstcw
mov
and
scas
mov
push
lret
or
mov
push
dec
add
mov
shll
out
lock
rolb
xor
in
sti
inc
cmp
xchg
pop
cmpsl
cmpsb
test
xor
cltd
stos
cmp
adc
fisubl
clc
ficoml
dec
sub
iret
ror
add
dec
cmp
incb
xchg
mov
cmp
stc
dec
pop
sbb
call
gs
dec
pop
out
xchg
test
sub
jb
adc
adc
push
cmp
xchg
pop
aad
out
out
mov
push
push
jle
fwait
sar
mov
lock
adc
leave
into
subl
sbb
cwtl
cmp
push
imul
xor
int
sbb
jns
sub
arpl
fdiv
adc
int
and
sbb
mov
into
mov
xor
jae
ret
cmp
jnp
icebp
call
add
enterw
fwait
leave
icebp
adc
jne
test
dec
cmp
lds
adc
adc
adc
ret
jge
incl
shrb
sub
push
sub
popf
pop
mov
push
push
pop
inc
das
fisubrs
cmc
das
hlt
scas
int
push
hlt
sbb
xchg
xor
xor
and
xchg
mov
xor
out
add
jle
xor
mov
fsubs
pop
imul
xor
stos
imul
lcall
pop
cmpsb
push
stos
clc
push
pop
scas
push
scas
mov
clc
and
xchg
pop
jae
mov
ja
lds
aaa
fistpl
sbb
pop
jnp
mov
or
cmp
scas
in
ss
loop
and
jl
js
jmp
push
cmp
ror
sbb
inc
cmpsb
rolb
addr16
insl
inc
bound
lcall
push
lret
inc
je
adc
add
mov
or
mov
imul
ror
repnz
fmulp
or
aam
adc
sbb
pop
pop
push
leave
into
mov
int
adc
sub
push
iret
cld
scas
iret
add
mov
sarb
dec
in
std
and
mov
and
ss
jb
or
ret
aad
pop
test
out
cmc
scas
imul
sbb
or
cmp
mov
jl
in
sti
rcll
mov
sbb
mov
dec
or
imul
mov
xchg
mov
xchg
pop
popf
mov
hlt
out
ret
addr16
dec
push
fs
sbb
das
cld
lods
push
add
sub
and
ss
fdivl
pop
movsl
pop
xor
les
std
xchg
repnz
xchg
in
lods
mov
inc
mov
pushf
daa
xchg
cwtl
nop
sbb
aad
arpl
mov
lods
mov
arpl
and
mov
cld
in
cmp
inc
push
stos
xor
sbb
scas
lret
repz
jg
ds
stos
mov
lret
inc
xchg
lcall
repnz
adc
sarl
fldcw
out
in
jp
jno
dec
shll
push
xchg
or
and
outsl
push
cmpsl
jle
inc
scas
sub
ret
jmp
faddp
out
jp
mov
sub
adc
adc
push
sub
adc
sub
inc
push
pop
cmp
test
lock
outsl
btr
sbb
pop
stc
es
hlt
addr16
jno
rcrb
sbbl
rorb
pop
bound
fidivs
pushf
jp
rcrl
mov
jno
subb
insl
inc
insl
cmp
es
add
test
xorb
mov
gs
push
jmp
lret
enter
addl
xchg
ja
cld
je
leave
dec
andb
jo
aaa
push
jp,pt
jne
scas
push
out
out
nop
mov
inc
test
dec
and
in
ljmp
pusha
ljmp
pop
addr16
cs
jg
jae
lods
popl
outsb
cld
cmpl
cmp
fisubs
adc
xchg
push
pop
cld
pop
sub
subb
mov
addr16
testb
xor
lret
xchg
out
inc
pop
mov
mov
shll
lock
xor
push
or
pop
jmp
lea
cmp
adc
xchg
stos
insl
ret
fsts
inc
cmc
or
out
into
mov
jge
push
sbb
loopne
cwtl
lret
and
adcb
ljmp
int3
mov
pop
cmp
jp
rcl
push
cs
fisttpll
mov
popa
ja
loop
xchg
and
mov
jno
adc
fisttpl
fistl
pop
mov
cwtl
in
inc
pop
mov
mov
out
shr
fistps
jne
out
dec
shlb
pop
nop
mov
xor
mov
push
and
mov
ja
sbb
xor
add
call
cmp
fbld
xor
jae
jns
lahf
add
add
sub
outsb
xchg
es
ss
aad
xor
mov
lock
data16
loope
in
scas
dec
pop
cmp
out
xchg
jl
shlb
mov
inc
fildll
inc
shlb
pushf
inc
movsl
push
stc
jp
mov
xchg
or
adc
jno
sbb
lods
lods
fs
das
test
dec
divl
pop
mov
andl
push
cmpsb
mov
dec
xchg
popf
enter
shlb
jbe
pushf
xchg
xchg
dec
and
push
lds
mov
mov
cwtl
push
sbb
dec
cmp
out
or
or
cltd
loopne
cmp
or
shrb
sbb
push
fisubrl
or
fcmove
inc
add
loopne
out
pop
and
cmp
sub
xor
daa
mov
das
stos
cmp
mov
push
cmp
xchg
and
addr16
or
or
in
dec
fsts
and
flds
mov
add
inc
loop
enter
xor
sbb
dec
sbbl
jle
addr16
daa
aas
icebp
pop
jnp
fimuls
jle
repnz
mov
fstps
loope
loop
xor
sahf
dec
mov
popf
xor
out
cld
jno
jnp
push
out
cmp
xor
inc
pop
sbb
int
adcb
cmp
or
xlat
sub
xchg
in
adc
shl
arpl
je
test
adc
sub
shrb
cmp
lret
cmpsl
shll
push
sbb
and
adc
push
sub
mov
pop
pop
pop
fxam
jle,pn
inc
cmp
pushf
sti
fimuls
mov
shrb
xlat
jno
fnstenv
xor
jg
mov
movsl
int3
mov
in
in
lahf
je
inc
xor
sub
das
mov
cld
cli
std
dec
loop
mov
or
mov
mov
or
add
xor
dec
mov
pop
adc
and
roll
mov
int
push
add
mov
and
test
rclb
add
sbb
repnz
sub
xor
hlt
mov
xor
es
insb
sbb
inc
std
or
jg
lock
int3
lods
in
jg
xor
push
lock
insb
mov
icebp
shlb
push
push
rcll
xor
aad
xor
notl
mov
ljmp
and
cmp
std
insl
push
pop
fsubrs
fucom
movsb
adc
jne
jecxz
and
mov
test
imul
ret
mov
dec
dec
decl
jmp
dec
mov
loop
cltd
jo
sub
mov
mov
pusha
xchg
leave
mov
jge
lods
jle
push
mov
adc
in
test
imul
subps
int3
xor
adc
insb
test
iret
sti
dec
jb
js
mov
jae
loop
sti
add
js
arpl
adc
ss
add
sub
sub
repnz
mov
sub
jg
sti
xchg
cmp
fcomi
push
outsb
pop
cmp
sysret
rcll
pop
and
and
xor
mov
cmpsl
fiadds
dec
mov
dec
push
adc
mov
jbe
push
bound
stc
pop
mov
xor
je
dec
popf
mov
rcl
stc
pop
push
xor
or
stos
test
pop
call
shr
in
imul
daa
xchg
cwtl
push
popa
xor
cld
and
pusha
aas
jecxz
mov
call
rcrb
fsub
lods
mov
adcb
push
inc
lret
movsl
jo
jge
imul
sbb
fcomi
or
test
push
loop
and
and
inc
mov
aaa
in
xor
ret
xor
sub
xor
fsubrl
mov
add
push
loopne
cmp
std
sbb
hlt
add
mov
clc
xchg
push
and
push
push
clc
sbb
xor
lahf
sbb
adc
outsl
lods
mov
test
sti
mov
movsb
loop
out
orl
xor
mov
fcompl
dec
jnp
xchg
mov
inc
out
xor
mov
mov
loope
adc
dec
aam
std
inc
lods
cmp
push
push
outsb
xchg
sub
in
testb
test
add
enter
ja
mov
stos
push
xchg
xchg
xchg
es
loopne
sub
dec
in
sbb
push
pusha
push
repz
push
or
mov
jns
cwtl
xchg
scas
push
sar
fnstenv
pop
aaa
loopne
xchg
mov
in
shrl
xor
add
ds
test
inc
popa
mov
push
mov
xchg
je
out
pop
jns
xchg
ja
cmpsl
aas
push
adc
jl
push
leave
inc
xchg
dec
add
in
pop
push
rcl
decb
jp
dec
adcb
pusha
adc
adc
fcompl
das
push
pusha
mov
jno
mov
push
or
test
xor
inc
adc
push
adc
mov
call
testb
dec
adc
inc
jl
or
xchg
or
xor
sbb
and
lcall
lret
jne
mov
jbe
call
jl
jo
pop
xchg
scas
xchg
push
jl
mov
lcall
mov
dec
push
stos
ret
fmul
push
mov
int3
jb
rclb
subb
lods
pop
fsubrl
ret
cmp
pop
jbe
inc
mov
sub
mov
dec
or
orl
cld
aam
aad
lret
test
les
inc
fwait
mov
jecxz
mov
push
scas
cmp
scas
dec
xlat
dec
in
or
clc
or
cld
xchg
sarl
mov
push
xchg
jle
in
pop
pop
cmp
pop
leave
jle
pop
sti
or
mov
ret
xor
std
aas
jecxz
shlb
mov
loop
lret
outsb
jb
jg
in
push
movsb
ret
pop
popa
or
mov
xlat
cmp
or
xchg
addr16
adc
mov
lahf
sarl
push
mov
mov
aad
fwait
mov
repz
test
pop
jmp
jo
fistpll
rclb
mov
and
mov
test
sti
daa
cmp
xchg
repnz
stos
mov
mov
xor
pop
repnz
aad
pop
sahf
pop
jmp
xchg
push
into
sahf
and
popa
shll
insl
imul
sbbl
mulb
aaa
movntps
insl
rorb
rorb
mov
insb
xor
pushf
sbb
stos
or
ffree
repz
sbb
mov
roll
scas
fwait
mov
imul
jle
hlt
mov
sub
mov
daa
jle
ja
xchg
and
shlb
xchg
out
repnz
std
sub
or
fbld
daa
shrb
scas
nop
or
mov
dec
or
fstpt
inc
inc
test
xchg
insl
les
cmp
pop
push
ret
push
inc
mov
mov
sahf
dec
in
adc
jo
leave
push
mov
and
popf
leave
loop
add
adc
xchg
push
push
cmp
mov
adc
mov
pop
xor
xchg
adc
in
mov
in
sbb
pusha
ret
aam
out
jb
inc
inc
js
jae
dec
add
aaa
call
mov
xor
sub
rcrb
das
mov
cmp
cmp
pop
shrb
pop
sub
sti
cli
inc
and
clc
out
and
cmc
xchg
jb
out
out
fsqrt
xchg
push
dec
sbb
push
mov
or
leave
ljmp
shrl
shlb
fmul
push
fadds
std
jo
mov
leave
cmp
popf
pop
inc
push
shr
push
out
pushf
push
stos
mov
cmpsl
mov
mov
out
mov
addl
xchg
into
jecxz
pop
or
test
mov
xchg
js
xchg
bound
and
push
aam
inc
dec
mov
mov
cmpsb
xchg
aam
out
test
pushf
pop
movsb
sti
out
lock
jle
popf
xor
push
mov
ljmp
or
jmp
adc
call
add
jge
stos
loopne
cli
push
int3
cmpsb
adc
sub
and
or
addb
stos
pop
loope
mov
inc
data16
inc
out
push
into
call
xchg
add
sub
iret
jg
movsb
adc
lods
std
jo
fildl
mov
loope
das
js
xchg
stos
in
js
in
push
aam
lret
mov
sub
mov
das
int3
faddl
add
dec
push
jae
lods
mov
jp
push
add
sbb
mov
rcll
adc
enter
mov
dec
xchg
popl
xchg
fldt
push
inc
in
jecxz
adc
jno
add
mov
adc
cmp
jb
jle
fisubrs
sbb
pop
jo
fldenv
xchg
fsubrl
pop
das
cli
lods
cmp
xor
mov
pushf
and
stos
adc
inc
jne
inc
call
mov
mov
adc
data16
push
sbb
adc
dec
sub
sub
dec
cmp
movsl
cwtl
pop
les
push
pop
pop
andb
adc
fwait
xchg
sub
mov
imul
cmpsl
mov
data16
scas
mov
out
rcl
push
sbb
int3
cli
add
push
in
or
arpl
jbe
lods
leave
mov
and
aas
push
xorb
lret
fnstsw
add
js
cmp
pop
xchg
push
add
pop
repz
inc
xchg
mov
fneni(8087
lods
mov
push
xor
lcall
or
mov
jp
inc
mov
mov
das
mov
pop
and
fstpt
pop
jae
inc
push
cltd
insl
and
bound
cli
pop
sub
inc
in
lea
inc
stos
ret
jp
pop
adc
repz
and
pop
jo
xor
mov
adcl
xor
cmp
pop
fimull
mov
shlb
mov
and
loope
mov
xor
jp
jbe
daa
iret
push
outsb
out
test
pop
jns
aam
insl
and
fwait
test
xchg
hlt
paddd
cld
mov
xor
sbbb
sbb
sti
cmpsb
xchg
mov
leave
fdivl
sub
das
mov
in
cld
push
out
ret
sub
cltd
jp
adc
inc
push
or
sbb
fisttpl
xchg
sbb
and
std
out
mov
pop
insb
cmp
push
lahf
xchg
movsl
or
add
ss
aas
xchg
xchg
mov
imul
cmp
fistpll
jb
sub
xchg
aaa
pop
aam
jae
xchg
add
shlb
xor
sar
jo
dec
adc
mov
orl
inc
xor
rorb
data16
dec
cmp
pusha
aas
nop
mov
lahf
jecxz
aaa
data16
or
sbb
mov
dec
sbb
and
mov
xchg
push
data16
adc
xor
xchg
popf
incl
aad
add
jo
adc
lods
aam
add
data16
scas
jge
test
js
mov
sbb
int
dec
shlb
and
xlat
cs
iret
decl
sbb
imul
inc
xchg
clc
scas
aam
sub
jmp
scas
push
push
das
inc
shlb
jge
xchg
jl
ret
cli
or
sbb
lret
repz
pop
scas
inc
cmp
stos
cmp
jnp
mov
jae
js
rorb
jne
ljmp
pop
rol
inc
fstl
xor
addr16
xchg
xchg
iret
mov
sub
pop
or
xchg
jmp
add
lcall
cmp
repz
xor
sbb
filds
repnz
mov
sub
push
and
dec
xor
filds
add
jmp
sub
pop
adc
scas
in
inc
in
sbb
out
push
add
sahf
sub
xlat
dec
or
push
fsubrl
bound
inc
out
notl
lret
inc
lret
daa
lcall
loope
lds
inc
mov
clc
stos
push
cmp
pushf
xchg
mov
or
in
add
fimuls
push
imul
push
inc
and
aas
cli
cmpsl
cmp
pop
mov
loopne
sarb
in
pop
ss
popf
push
inc
sbb
pop
loop
outsb
inc
or
fwait
xchg
and
test
sub
xchg
and
imul
cld
out
push
aam
fsts
ljmp
cmp
pop
std
bound
mov
xchg
push
jae
mov
pop
add
es
push
aam
xchg
jl
fstpt
in
es
and
xor
mov
xchg
icebp
rcrl
fwait
fs
mov
jno
push
jb
pop
xor
vmovntpd
adc
fists
or
pop
pusha
clc
stc
dec
pop
ret
sahf
cmp
outsb
xchg
add
js
arpl
mov
shl
icebp
mov
xchg
add
push
pop
or
sbb
sub
pop
aas
rolb
in
fcmovnb
or
dec
fs
sbb
mov
dec
xor
push
imul
dec
xchg
xchg
neg
xchg
xchg
push
push
nop
in
mov
shlb
jb
cmpl
stos
push
cltd
out
sub
incb
cmp
clc
into
addr16
js
pop
cmp
clc
sbb
bound
jle
fwait
ja
loopne
fisubrs
dec
mov
push
cld
cmp
and
fsts
jmp
lea
push
adc
repnz
xlat
das
ss
aam
daa
xchg
xchg
sub
pop
fiaddl
dec
pop
cli
xchg
out
mov
mov
mov
xor
aad
pushf
cmpsb
sbbl
push
inc
movsl
mov
fmulp
dec
jp
rcrl
sbb
fucomp
je
adc
adc
fxch
test
mov
dec
ret
jmp
lret
gs
mov
dec
mov
sub
dec
push
rorl
dec
adc
out
nop
push
enter
push
sbb
lret
cmp
lock
stos
xor
sbb
sub
dec
fsubrs
xchg
aad
lret
cld
inc
int3
jae
ljmp
scas
and
fstl
popf
jl
add
mov
ss
loope
loop
fcoms
adc
sbb
inc
or
sub
mov
mov
out
and
fcomip
xor
xchg
mov
jo
out
or
lock
cmpsl
dec
leave
enter
mov
xor
data16
int3
sbb
test
popf
adc
addr16
test
mov
mov
movsl
pop
add
jno
jnp,pn
pushf
gs
ficoml
pop
jbe
add
cmc
addl
mov
add
sahf
imul
push
add
jecxz
mov
out
ja
sub
inc
out
sub
rdtsc
jl
out
sarb
xor
xchg
dec
or
or
pop
lods
movsb
cmp
sbb
and
inc
loope
inc
cmp
jmp
fwait
push
aad
dec
clc
fcoml
jl
stos
mov
xor
paddusw
or
call
loope
shlb
popa
push
loop
and
imul
push
in
xor
mov
sub
popa
xchg
xchg
dec
and
lea
out
push
out
pop
fucom
enter
ja
jne
xchg
pop
pop
push
iret
mov
fs
lcall
and
pop
adc
xorl
in
or
das
dec
jbe
push
dec
dec
push
in
js
pop
pushaw
dec
dec
aas
xchg
add
les
xor
pop
arpl
mov
mov
scas
repnz
movsb
xchg
mov
pop
xor
push
iret
nop
sub
int3
adc
les
test
cmc
inc
jl
movsb
sub
in
lods
mov
inc
lds
and
mov
xchg
mov
ljmp
dec
arpl
xchg
mov
or
pop
shl
xor
insb
mov
cmp
add
sbb
ljmp
mov
leave
cmp
cmp
push
je
dec
xor
push
shll
cmp
fs
aad
bound
push
pop
in
sub
push
imul
in
cld
or
scas
and
cmpsb
lock
gs
or
push
mull
mov
mov
sbb
cmp
pop
cltd
pop
cmp
add
jp
cltd
scas
push
popf
ficompl
xor
pop
dec
jg
mov
cli
dec
inc
push
in
sti
add
popa
or
mov
ror
adc
fbstp
dec
lods
enter
and
setg
test
or
mov
call
adc
jl
mov
mov
cmp
fwait
inc
loope
and
ret
dec
mov
scas
xchg
xchg
xchg
cltd
repz
mov
or
insb
aad
pushfw
xor
pop
pop
pop
xchg
imul
or
mov
cmp
inc
mov
jmp
gs
outsl
cltd
test
lret
add
push
std
adc
or
fs
out
inc
lods
mov
jmp
mov
cmp
gs
mov
popa
jbe
ljmp
inc
cmpsb
test
xchg
bound
bound
push
mov
rcl
movsb
inc
dec
and
cmp
stos
test
sarb
arpl
ja
add
outsl
xchg
fmulp
mov
adc
scas
pushf
lret
xchg
ror
mov
mov
call
fwait
push
cmp
xchg
addr16
inc
stc
mov
adc
pop
repz
into
or
push
or
stos
shl
mov
or
pop
aas
inc
mov
ds
in
xchg
mov
es
fisubl
jmp
xor
movsb
or
push
adc
addr16
mov
movsb
inc
orl
dec
std
xor
mov
mov
mov
sti
cmp
pop
xchg
cmp
jle
pop
sbb
ret
mov
xor
jno
dec
xor
lret
or
mov
mov
pushf
dec
lcall
fsubrs
add
cli
pop
insb
push
inc
or
jo
out
mov
mov
iret
hlt
outsl
xor
push
sub
test
loop
pop
mov
pop
test
xchg
ret
test
fsub
mov
sub
into
mov
jg
les
popa
int
or
inc
test
mov
adcb
call
xor
ret
shlb
in
rcrb
clc
xor
dec
mov
jbe
mov
adc
dec
dec
lea
xchg
stc
cmp
rcr
jp
adc
mov
mov
fcoml
lds
jmp
cmpsl
push
push
out
or
mov
ss
pop
outsb
pusha
mov
les
loope
jmp
test
jg
adc
ret
sub
scas
cmp
mov
fadd
dec
push
ret
cmp
in
xor
icebp
pop
repz
mov
mov
push
xor
or
fmull
inc
les
mov
sub
in
adc
add
cmp
sbb
ja
cmp
jae
insb
loope
xor
ja
popa
cwtl
int3
lods
das
outsl
pusha
pusha
push
icebp
xor
or
out
clc
ficoms
cmp
repnz
mov
loope
leave
cli
xchg
insb
aad
and
fs
dec
pop
dec
out
mov
notl
test
lcall
popf
xchg
fisttpll
jge
push
cmc
scas
out
cld
out
ret
scas
dec
adc
xorb
or
lret
rol
cmp
sub
lret
sub
mov
sub
mov
lret
xor
xor
mov
outsl
neg
jmp
push
xchg
loope
std
push
test
lahf
cmc
daa
add
inc
add
add
add
add
mov
test
dec
movsl
mov
dec
ret
or
mov
add
mov
sbb
fisttps
lds
arpl
push
bnd
jb
sub
inc
insl
sbb
mov
mov
push
cltd
sub
es
cltd
xchg
jle
test
cmp
hlt
add
and
pop
push
mov
xorb
in
cltd
inc
lret
stos
mov
outsl
negl
mov
inc
push
xor
fwait
pop
xor
or
frstor
subl
jmp
mov
and
jmp
adc
sbb
adc
dec
repz
and
repnz
daa
sbb
fistpll
lret
or
dec
decl
inc
or
inc
std
fcmovne
jno
cwtl
dec
loope
push
push
mov
mov
fstp
mov
jge
lret
scas
sub
jnp
sub
add
inc
movsb
insl
push
add
scas
jp
cmp
out
cmpl
cmpsb
into
inc
xlat
xchg
add
pusha
sbb
pusha
push
nop
jnp
out
cltd
mov
or
lcall
pop
mov
jno
push
push
shrd
add
fwait
lods
ljmp
lret
push
stos
insb
pop
andb
stc
loope
pop
or
mov
or
aam
push
mov
mov
insb
mov
mov
xchg
in
mov
dec
cwtl
or
or
dec
or
adc
test
mov
insb
mov
xor
movsb
imul
outsl
sti
ds
dec
mov
ja
out
adc
inc
mov
addr16
mov
xor
fcomps
out
ja
xchg
fs
pop
mov
rcl
pop
cmp
xchg
movsl
lods
repnz
daa
pushl
aam
es
adc
mov
and
popf
mov
mov
pop
aad
jmp
jg,pt
test
push
jb
or
sbb
imul
add
pop
test
push
into
lods
adc
and
mov
pop
pop
jnp
cmp
scas
ds
fmull
je
mov
fcompl
adc
push
push
jp
cld
pop
sbb
cmpsb
decb
xchg
loop
icebp
pop
push
arpl
pop
add
lods
cwtl
inc
aaa
mov
daa
test
test
cld
test
iret
lahf
xchg
pop
pop
and
inc
loopne
lret
mov
xor
les
icebp
test
dec
call
sarb
push
pop
aad
sbb
icebp
mov
sbb
mov
adc
jae
das
jmp
test
addr16
mov
xchg
dec
in
jl
std
mov
out
test
push
mov
fwait
xchg
xor
out
test
into
dec
dec
push
adc
cmc
ljmp
add
scas
jns
cmp
sbb
pop
sub
sub
mov
gs
sti
xor
scas
push
xor
mov
dec
cltd
pop
jbe
ret
push
fst
out
flds
fs
sub
sbb
in
add
es
add
lret
sbb
sbb
je
mov
xor
add
add
mov
fmulp
dec
inc
std
xlat
xor
sahf
mov
shll
std
hlt
and
dec
clc
fmuls
popf
sbb
xlat
incl
adc
mov
and
ret
arpl
scas
scas
add
xchg
pop
test
sbb
push
or
inc
test
add
into
and
scas
inc
jle
pop
imul
test
dec
arpl
cmpsb
cmc
adc
es
iret
push
sbb
test
sub
ss
add
mov
aaa
shl
sbb
xor
mov
xchg
aad
push
xchg
out
inc
or
xchg
or
js
inc
push
cmp
or
sbb
mov
ds
out
xor
adcb
popf
jno
mov
fmull
sub
stos
cmp
sbb
cmp
cmc
xor
xchg
dec
dec
xchg
pop
cld
data16
dec
add
mov
adc
add
mov
negb
adc
or
pop
xchg
test
sbb
adc
int
and
add
sti
mov
sub
movsb
inc
aas
pop
out
push
push
movsb
push
inc
lock
xchg
xor
mov
ja
lahf
andl
lret
push
add
add
jb
sbb
arpl
fstl
loope
push
mov
mov
out
sbb
or
mov
xor
mov
cmpsl
push
push
dec
jnp
movsb
jns
sub
sbb
movsl
dec
loope
cli
cwtl
ja
fstp
scas
mov
out
filds
test
add
out
cli
andl
pop
dec
add
clc
xor
mov
mov
popa
hlt
pop
daa
ret
pop
sbb
mov
scas
mov
sub
aad
sbb
sbb
dec
inc
or
mov
imulb
xor
sbb
sbb
push
adc
into
mov
call
lahf
out
das
cmp
pop
pop
mov
pop
cwtl
fdivp
jno
inc
push
in
lret
ds
ss
mov
xchg
adc
fxch
imul
in
sub
xchg
es
int
mov
cmp
js
sbb
bnd
cs
mov
pop
pusha
ret
popa
movsl
int
idivl
sbb
adc
dec
push
scas
loope
mov
sub
inc
inc
mov
mov
xor
cmp
pop
fdecstp
adcb
lock
call
sub
mov
jno
dec
pop
mov
cmpsl
mov
push
cmp
mov
pushf
daa
sbb
outsl
fsubrl
outsl
faddl
mov
aam
mov
in
lods
jb
std
dec
lcall
ja
adc
cmpsl
gs
ja
test
sub
lds
enter
sbb
adc
sub
push
out
movsl
bound
or
mov
adc
jecxz
cmp
push
jb
xchg
lret
int
and
add
in
mov
enter
fwait
lods
mov
inc
mov
jb
sbb
mov
insl
fs
pop
jne
and
mov
int3
mov
inc
cmc
jg
dec
movsl
fwait
push
test
xchg
imul
cmp
repz
gs
stc
in
inc
jns
icebp
xor
mov
inc
sbb
push
mov
jp
add
insb
scas
jb
jg
cltd
imul
enter
sbb
inc
mov
mov
lahf
shlb
dec
pop
sub
xchg
mov
fadds
mov
cmp
mov
mov
jns
popa
dec
aaa
or
test
sub
lcall
in
mov
lods
push
je
je
movsl
leave
cmp
mov
in
add
add
push
fimull
sub
rolb
push
sbb
ja
xor
mov
jp
mov
ss
insb
ret
in
pop
outsl
push
fwait
dec
xor
imul
xor
leave
push
in
jp
dec
loopne
aam
push
insb
in
jg
aaa
xlat
adc
loope
cmc
lahf
pop
decb
lret
pushf
inc
aas
paddq
mov
movsb
int3
pushf
xor
pop
stos
fisubrs
push
add
fidivs
inc
mov
call
das
cwtl
call
xchg
stos
sub
jle
lret
xchg
sub
popa
jae
and
ljmp
pop
fisubl
insb
adc
js
lods
shrb
or
lcall
popf
jae
js
int3
and
bound
stos
hlt
test
repnz
scas
in
xor
out
out
pushf
mov
sbb
call
loop
orl
ficoms
stc
fldlg2
jns
xor
dec
push
sbb
out
rcl
int
dec
sub
mov
data16
sbb
adc
add
xor
sbb
lret
push
das
or
pop
cwtl
arpl
lods
loope
or
inc
jo
push
loopne
push
shll
dec
cmc
sub
dec
stos
and
jb
sbb
mov
aad
ret
imul
sbb
sub
stos
andb
jmp
cli
sub
xchg
mov
push
imul
sub
push
icebp
cwtl
out
shll
fsubrl
inc
in
dec
ljmp
xor
mov
shlb
fs
insb
pushf
push
push
shll
and
addr16
fbstp
in
fwait
sahf
jnp
outsb
imul
cs
jo
js
mov
out
sbb
add
or
jbe
xchg
push
leave
sbb
movsl
xlat
or
jae
pop
lret
sub
xchg
jb
or
add
add
enter
jne
adc
pop
adc
fistps
xchg
pop
cmp
jo
bound
mov
push
inc
cwtl
sbb
int
jo
ljmp
adc
iret
lods
jns
dec
mull
sbb
ja
out
pop
lea
adcb
lret
sbb
sbb
push
jp
int3
ss
sbb
jns
push
dec
push
or
cwtl
jnp
sub
pop
sub
lods
cmpsl
icebp
push
jne
js
jns
pop
pop
lods
jnp
or
xor
cmp
push
sub
test
add
xor
and
mov
cmp
adc
lds
cmpsl
cmp
pop
dec
sbb
adc
lcall
mov
ljmp
sub
xchg
daa
mov
addr16
fneni(8087
in
test
arpl
roll
inc
aas
xchg
sub
ja
lcall
adc
out
fcmovb
out
or
std
pop
ret
sbb
std
cld
rcll
xchg
xlat
push
mov
movsl
adc
stos
test
mov
mov
and
xor
mov
add
imul
dec
lcall
mov
lret
jle
sbbb
aad
outsl
mov
push
xor
push
sbb
aas
ret
in
jb
or
dec
mov
sti
cmp
mov
iret
aam
and
mov
repz
mov
ret
jae
ficoml
inc
hlt
cmp
cli
lea
test
pushf
sarb
sub
addb
dec
or
cmp
mov
adc
aad
push
adc
adc
dec
jp
xor
out
jge
sub
inc
aad
popa
push
das
shlb
jecxz
pop
pop
test
dec
add
add
pop
mov
jb
lret
insl
jbe
icebp
add
inc
popa
mov
cmpsl
fdivs
sbb
pushf
gs
mov
or
xchg
jecxz
ret
mov
sbb
and
movsl
inc
xorl
mov
popf
nop
jnp
aaa
mov
nop
mov
or
out
fistl
je
loop
leave
pushf
aad
sbb
sbb
dec
xor
hlt
pop
cmp
cs
or
and
in
sahf
inc
in
or
and
add
sti
aad
cli
outsl
dec
dec
jg
sbb
pop
imul
pop
push
sbb
add
add
dec
repnz
mov
jle
xchg
repnz
mov
lods
add
or
outsl
dec
mov
mov
loop
gs
xchg
xchg
fwait
into
aaa
inc
stos
lahf
cli
sahf
dec
inc
in
in
or
sbb
fldl
mov
rolb
dec
push
bound
ljmp
daa
ss
js
icebp
out
scas
sbb
loop
xchg
les
ret
cmpsl
out
cmp
and
test
mov
sbb
jle
test
push
and
rolb
inc
jmp
add
adcl
lods
push
or
pop
and
in
fstps
jg
and
lock
mov
lahf
inc
lret
int
xchg
frstor
dec
push
push
push
bound
sti
inc
jge
dec
jno
stos
in
popa
iret
mov
lret
cmp
out
pop
push
push
or
cltd
stos
and
int
pushf
loopne
cld
xorl
xor
pop
adc
repz
xchg
sub
inc
inc
mov
insl
dec
fcom
xlat
push
mov
fucomp
jns
push
push
sub
std
xchg
std
sbb
xchg
push
or
addr16
shl
fs
out
shll
push
adc
jp
push
fdivs
pop
mov
cwtl
out
pop
push
test
adc
into
inc
mov
cwtl
lret
push
push
jae
cltd
dec
loope
je
imul
sub
xor
iret
in
mov
mov
inc
jns,pt
lea
in
test
or
jb
push
cli
ds
jno
jge
popa
push
jbe
xor
dec
lds
mov
lret
sub
lods
adc
dec
cmp
leave
imul
ljmp
cmp
jp
hlt
pushf
notl
sub
lret
aaa
std
fs
hlt
xor
pop
stos
add
pop
dec
cmp
or
outsb
aad
lret
dec
inc
jne
sbb
pusha
inc
dec
xchg
cwtl
stc
or
xchg
out
mov
xlat
mov
pop
and
ljmp
out
adc
push
pushf
test
cld
jnp
inc
cltd
imul
xorb
adc
ja
notl
pop
cmc
or
out
dec
pop
and
add
sub
xchg
sbbl
testb
int3
and
dec
out
es
movl
adc
xor
xor
inc
mul
pop
mov
mov
jmp
mov
xchg
xchg
icebp
mov
mov
push
ss
jno
sub
aam
mov
addr16
cltd
fwait
mov
mov
cmp
mov
in
or
lods
mov
cmc
loopne
addb
daa
in
dec
lahf
sti
xchg
add
shufps
and
test
xchg
dec
cwtl
lds
stos
xlat
pop
sbb
js
ror
fstpt
lods
in
movsb
add
test
leave
pop
jno
dec
pop
out
outsl
lcall
sbb
mov
xchg
repnz
repz
scas
pusha
sub
mov
outsb
mov
aam
pop
jmp
insb
inc
pop
pusha
fwait
notb
ja
jmp
loopne
xchg
and
clc
hlt
inc
dec
es
incb
or
mov
jle
into
dec
mov
fs
fisubl
mov
or
arpl
cmpsb
and
fwait
and
sub
jp
jp
mov
aas
sub
jg
jmp
add
clc
inc
lods
cltd
ret
sti
jne
add
xlat
fmull
xor
bound
cwtl
ror
into
movsb
sub
outsb
mov
sahf
dec
and
lods
leave
jo
sub
aam
sbb
or
mov
mov
in
inc
adc
pushf
das
jae
or
ret
pop
out
cmp
cmp
jno
or
inc
out
aaa
add
push
clc
scas
xchg
dec
fldcw
in
clc
inc
rorl
sbb
dec
lcall
in
mov
jecxz
dec
jbe
fdivr
mov
or
loopne,pt
mov
cmp
pop
adc
fs
imul
cmpsl
data16
ja
xchg
mov
mov
icebp
dec
or
hlt
in
fwait
dec
popa
pop
jg
inc
mov
pop
xor
pop
add
insl
nop
adc
sub
sub
pop
inc
test
out
sti
xchg
jmp
iret
ljmp
stos
daa
adc
sub
andb
ret
lea
xchg
xlat
or
aas
pushf
jbe
adc
inc
or
adc
xor
adc
insb
test
pop
stos
loope
repz
sub
sbb
stos
adc
enter
mov
push
mov
xchg
pushf
ss
pop
add
xor
icebp
add
popa
in
mov
adc
cmc
push
nop
dec
stc
cwtl
in
movd
mov
fdivrs
or
push
xchg
das
or
subl
fists
enter
or
sub
outsl
out
in
out
jle
xor
xor
cld
lock
andl
mov
mov
dec
and
sub
adc
and
cmpl
inc
inc
dec
mov
out
lahf
push
out
popa
push
mov
add
sbb
add
repnz
mov
sbb
dec
scas
imul
insb
adc
cltd
insb
dec
leave
xor
adc
mov
sbb
outsb
push
repz
add
xchg
lret
lret
sbb
jb
add
mov
aam
adcb
cmp
xchg
imul
cmp
jmp
sub
pop
arpl
sub
leave
aad
xor
into
pop
pop
jns
push
pop
push
add
fimull
xchg
xchg
out
push
iret
dec
nop
es
cmc
add
cmp
sbb
cwtl
add
push
sbb
add
loop
jae
adc
cmp
mov
nop
sarl
jbe
and
push
mov
sbb
imul
cwtl
sbb
xchg
mov
and
shll
bound
fdiv
xchg
decb
jl
mov
lret
jb
mov
in
rcll
adc
movsb
sbb
psubusb
xor
pop
or
or
call
shll
fdivl
mov
ret
out
xchg
cwtl
jp
mov
mov
movsl
in
or
popa
orl
repz
or
cwtl
mov
pop
ror
sbbb
pop
aaa
or
pop
mov
sbb
mov
nop
cmp
or
call
movsb
movsb
adc
cwtl
jb
add
rolb
outsl
sbb
sbb
and
or
pop
repnz
sub
in
xchg
jbe
sbb
sub
daa
xor
ss
mov
push
ja
lock
loop
pop
add
jne
jno
loopne
inc
mov
mov
loop
and
je
jb
sbb
dec
cmp
push
sahf
repz
mov
jl
enter
xlat
inc
cli
aad
sub
pop
lcall
pop
shll
pop
movsb
sub
mov
imul
mov
mov
add
data16
mov
mov
popa
add
movsl
rorb
mov
stc
sub
decl
fmuls
rorl
xchg
lcall
push
pop
aas
andl
pushf
mov
jne
movsl
push
negb
loope
fsub
xchg
arpl
lret
fisttpl
add
pop
or
jae
xor
jo
or
mov
or
mov
insl
xchg
and
das
jecxz
imul
icebp
mov
test
inc
pop
pop
jbe
lock
push
movsl
jb
sti
xor
mov
xchg
hlt
shll
pusha
es
xor
or
push
dec
fsts
push
push
fidivl
xlat
mov
xor
es
cs
jns
loopne
pushl
push
push
dec
push
lods
push
das
out
mov
push
pop
adc
mov
imulb
stos
xchg
pop
ss
jle
sbb
arpl
jb
pop
xor
js
ja
loopne
sub
out
test
jmp
sub
push
daa
fadd
scas
int
mov
test
and
mov
outsb
mov
or
call
sbb
int
push
mov
push
push
stos
clc
addr16
std
push
xchg
jno
sarb
mov
jle
pusha
mov
fldt
lods
fiaddl
mov
pop
mov
push
aad
subl
xchg
lret
adc
sbb
mov
xchg
or
sbb
les
fistpl
xchg
les
push
xchg
je
sbb
push
cmp
dec
dec
pop
cmc
and
shll
and
and
and
loopne
sub
fistpl
push
mov
outsb
std
push
rcrl
stos
mov
out
cmp
ficoml
popa
and
cs
inc
push
sbb
inc
movsb
ds
shr
inc
or
mov
mov
xchg
cmp
inc
pop
pop
aam
aad
ds
sbb
leave
lea
stos
xchg
divl
adc
data16
xchg
rcr
fsub
iret
sbb
pusha
cltd
lock
adc
mov
call
ss
xor
mov
movsb
ss
lahf
in
lds
cltd
cmp
gs
mov
pop
cld
push
pop
in
adc
mov
subb
mov
orb
dec
mov
mov
in
or
iret
and
xchg
aas
mov
xchg
pop
jne
sub
lods
mov
hlt
pop
ljmp
addr16
lods
dec
mov
push
pop
push
dec
or
jle
pop
pop
xor
pop
movsl
aaa
fcoml
div
xor
sbb
pop
aad
lcall
shll
mov
or
and
aam
jle
inc
sub
xlat
add
pop
fs
pop
inc
mov
pop
cli
stos
pop
test
lds
inc
xchg
jno
mov
cs
icebp
push
and
pop
rcrl
and
call
and
mov
xchg
nop
imul
sti
mov
ljmp
add
mov
adc
sbb
stos
daa
fwait
mov
sbb
dec
ret
cmp
fisubrs
iret
outsb
lds
sarl
push
jne
jg
sti
in
xchg
dec
fwait
adc
fs
mov
fidivl
in
in
mov
sub
shlb
push
fsub
jae
push
jl
popw
pop
fstpt
sbb
jo
ret
pop
sub
mov
bound
rorb
adc
sbb
xchg
lods
sbb
xchg
stos
add
and
fwait
repnz
adc
lahf
rol
das
daa
mov
or
imul
xchg
mov
sbb
dec
jnp
and
repnz
test
cli
addr16
pxor
cli
testb
xchg
test
daa
cmp
add
repnz
mov
lds
jecxz
aam
into
dec
jne
mov
sbb
test
mov
sub
test
push
shl
lods
dec
es
ret
jnp
or
xchg
cld
or
add
push
xor
iret
mov
je
push
jp
push
add
pop
add
lahf
sbb
ljmp
mov
inc
stos
sub
rcr
dec
outsl
stos
imull
push
fidivrs
loope
xchg
lret
scas
and
fistpl
mov
aaa
ss
sbb
adc
rolb
adc
fnstcw
mov
mov
ljmp
add
loopne
push
mov
test
mov
jbe
idivb
lods
scas
push
mov
je
dec
clc
sarb
jle
addb
xchg
dec
call
add
mov
xchg
push
push
rol
inc
jno
iret
jo
rolb
add
pushf
and
xchg
mov
jmp
mov
push
fwait
inc
pop
xor
or
dec
add
xchg
sti
push
pop
in
pusha
mov
dec
cmp
jle
lea
xchg
mov
inc
push
fs
mov
mov
inc
push
in
inc
outsb
aam
xor
mov
push
out
das
out
mov
pop
arpl
dec
mov
push
in
mov
add
jl
je
lds
int3
test
sarb
mov
xchg
cmp
insb
cmp
mul
ret
pop
pop
adc
push
in
add
fdivl
int3
loopew
repz
pop
ret
xchg
addb
lea
cmc
lea
stos
ja
fstps
mov
mov
pop
adc
push
in
cltd
loopne
pusha
dec
pushf
pusha
inc
xor
or
mov
mov
fwait
leave
mov
jo
jge
push
test
pop
lret
jnp
clc
stos
idivl
addr16
test
add
cmc
loop
pop
mov
scas
or
cmp
bound
inc
popf
pop
repz
iret
nop
and
fimuls
xchg
push
and
inc
mov
je
das
call
sub
jl
xchg
pop
imul
dec
mov
es
loopne
add
mov
dec
sub
mov
pop
push
lret
fmull
nop
loopne
adc
mov
jbe
arpl
mov
dec
add
frstor
push
scas
xchg
lds
inc
lcall
popa
arpl
jns
aaa
inc
popa
cmp
jb
cwtl
into
mov
movsb
outsb
loope
cld
jae
xor
fists
pusha
xchg
test
push
mov
jg
stc
rcrb
into
adc
ret
mov
inc
jl
push
mov
enter
mov
xor
adc
insl
mov
mov
mov
jns
add
and
adc
xchg
xlat
ljmp
cmp
in
mov
addb
cmp
insl
fists
xor
mov
jmp
mov
sub
cmp
and
jecxz
fwait
xchg
sub
or
shlb
stc
sub
ljmp
cmp
mov
xlat
loope
cmp
inc
aad
xchg
push
adc
xchg
nop
js
dec
clc
idiv
loop
mov
push
fbld
cmp
or
decl
and
imul
movsb
and
push
lret
sbb
cli
xor
jbe
aaa
xor
lock
clc
dec
add
js
push
pandn
popf
popa
data16
sti
sbb
sbb
xlat
arpl
popa
test
or
lods
lcall
fucom
jae
mov
aad
or
inc
sbbb
fnstenv
ljmp
ret
mov
movsb
inc
sbb
jp
and
mov
adc
sbbb
xchg
gs
pop
xlat
sub
mov
push
scas
das
xchg
loopne
dec
jb
add
xor
dec
dec
je
pusha
xlat
or
mov
movsl
insl
rclb
rcrl
adc
xchg
push
icebp
out
mov
dec
inc
call
imul
je
and
sub
std
les
and
out
pusha
sbb
mov
mov
jmp
sub
dec
or
push
inc
and
adc
sub
pop
lock
sarb
out
pop
cmpsb
jl
in
sub
lock
add
xchg
fldenv
add
push
out
fdiv
cwtl
pop
loopne
xchg
popf
lahf
mov
ss
scas
scas
fs
cmp
in
pushf
jnp
and
out
pop
push
fwait
xchg
adc
xor
andl
jge
seto
or
fdivrs
ss
sbbb
shl
int
add
adc
jbe
pushf
mov
dec
sub
hlt
mov
enter
push
nop
jle
mov
ljmp
fildll
mov
or
sbb
mov
push
mov
push
pop
mov
repz
pop
jmp
xchg
cmp
mov
shll
or
movsl
inc
mov
or
add
add
mov
arpl
shr
xor
sub
out
shl
js
cs
inc
bound
sub
mov
pop
stos
sti
add
mov
push
std
sbb
movups
fabs
or
repz
cwtl
inc
ret
adc
xor
add
imul
cmpsb
xor
inc
mov
pusha
and
dec
lahf
lock
test
and
adc
cmp
inc
loop
adc
adc
or
arpl
stc
orb
jp
xchg
lods
cmpsl
clc
cmp
mov
cmp
aad
jp
mov
mov
xor
cmp
jg
inc
addl
xor
push
mov
cltd
dec
pop
mov
mov
jge
scas
sahf
pop
sub
mov
in
les
mov
adc
shlb
int3
pushf
loop
inc
push
jmp
int
inc
pop
ret
sub
inc
insl
push
sarl
out
lods
adc
lods
fistl
cltd
inc
dec
jecxz
sahf
add
lea
div
cmpsb
sbb
push
xor
call
push
aas
pop
das
xorl
mov
popa
out
stc
aad
dec
pop
daa
stos
addb
pop
pop
dec
rol
imul
dec
sbb
mov
sarb
mov
cmp
pushl
and
cli
and
insl
xor
ret
sub
test
push
push
xor
pop
pusha
cmc
jmp
inc
sti
xchg
pop
stos
ss
movsl
pop
xchg
and
push
dec
outsl
out
mov
cmp
push
jp
js
shll
mov
addr16
push
add
add
xchg
insb
push
push
dec
push
jb
pop
mov
adc
xchg
mov
inc
xor
mov
push
lds
dec
jbe
fs
mov
sbb
dec
dec
roll
mov
jbe
inc
lahf
test
test
sbb
jne
aas
mov
xor
rcr
add
fidivs
iret
addr16
pop
movsb
xchg
test
dec
rclb
pop
sbb
and
fnstenv
clc
xchg
mov
insl
ret
push
out
ficomps
pop
shlb
and
arpl
jmp
lods
dec
out
pushl
stc
push
adc
adc
icebp
loopne
insb
sub
std
push
insb
jbe
nop
xchg
in
push
pop
and
push
xchg
clc
movsl
push
shl
adc
and
movsb
mov
rcrl
adc
je
sbb
sbb
jmp
cltd
push
or
pop
push
push
ljmp
out
or
repz
and
xor
xchg
movsb
mov
inc
sub
cmp
dec
jp
adc
rclb
adc
add
das
pop
xchg
mov
repz
cmp
iret
push
hlt
sub
sub
jbe
aam
pop
sbb
ds
pop
arpl
aaa
sbb
push
xor
inc
sub
add
sarb
xchg
cmc
adc
inc
jmp
cmpsb
into
mov
out
jnp
push
push
push
loope
mov
movsl
dec
push
sub
pop
out
bound
adcb
push
fwait
push
mov
inc
jo
pop
mov
outsl
andb
loope
int
pushaw
out
and
cmpsb
lds
cmc
adc
mov
gs
in
mov
mov
mov
movsb
scas
stc
scas
fdivr
inc
sub
loopne
movsb
inc
imul
jg
mov
sahf
mov
mov
clc
push
dec
jg
insl
jmp
hlt
xor
inc
add
push
pushf
or
jge
inc
sbb
aad
push
sbb
clc
in
mov
pop
insl
shll
addr16
repnz
jnp
add
pushf
or
pop
sbb
xchg
cmp
cld
cmp
add
pop
scas
fdivrp
jne
imul
ds
push
in
push
pusha
xchg
xor
lret
jp
push
dec
xchg
aas
daa
add
in
loopne
xorb
pop
ret
inc
or
js
mov
movsl
int3
gs
push
inc
mov
in
cmp
nop
push
push
int3
jne,pt
ret
subb
pushf
lret
movsl
leave
xor
testl
push
adc
roll
data16
aaa
lea
subl
mov
cwtl
in
pushf
sub
xchg
mov
pop
adc
xchg
lahf
jbe
mov
sti
mov
mov
lods
pop
inc
aas
mov
pop
fs
mov
bound
sbb
dec
push
movl
add
les
lods
sub
sbb
testl
xor
es
imul
inc
jmp
aaa
cmpsl
mov
inc
int3
jmp
ljmp
pusha
add
ljmp
lret
lock
aas
test
lods
pop
movb
or
inc
test
lods
and
or
repnz
or
and
mov
lret
and
mov
inc
xor
lret
xchg
dec
sub
jbe
jbe
push
lock
pop
pop
mov
dec
push
int
clc
adc
hlt
addr16
loopne
scas
fwait
imul
sub
cmp
mov
xchg
mov
popf
and
ret
ja
jecxz
xchg
call
insb
lods
push
scas
cmpsb
mov
adc
ffreep
rolb
arpl
or
testb
sti
or
and
das
loope
ds
sub
inc
mov
push
bound
dec
test
fxch
push
adc
inc
mov
sub
repz
push
les
aas
out
in
xchg
pushf
js
dec
jb
or
xor
inc
bound
int
dec
out
lcall
lea
inc
test
and
sbb
test
addb
mov
pop
cmp
push
sahf
cmc
pusha
mov
jle
mov
pusha
sub
enter
cmp
inc
ror
xor
in
stos
jg
cmp
push
lahf
sarb
add
repnz
pop
cmp
mov
clc
and
bound
out
pushf
test
inc
pushf
push
dec
out
jecxz
ret
fcomp
aaa
mov
mov
dec
dec
and
xor
or
push
mov
in
shrb
or
add
cmc
outsl
daa
es
lcall
push
std
add
inc
fldenv
fisubl
cwtl
sub
mov
sub
dec
xor
dec
adc
add
pop
cmp
repnz
push
or
out
sahf
jae
movsl
jg
sub
xor
mov
rolb
mov
inc
add
fistl
daa
add
mov
fsubs
stos
or
outsb
adc
setno
in
push
cmp
xchg
adc
sti
jp
sbb
and
movsl
mov
lock
iret
adc
xchg
fadds
loopne
insl
mov
popa
lea
test
cmpsl
xchg
orl
addr16
or
pop
rcrb
add
dec
inc
call
mov
imul
adc
inc
stc
ret
es
icebp
push
pop
dec
jo
push
adc
and
dec
mov
jp
mov
jg
push
jno
cmp
outsb
sub
mov
scas
sti
das
adc
ds
sbb
jecxz
mov
xchg
inc
push
cs
mov
push
rcll
je
mov
jns
xor
adc
mov
lcall
test
xchg
subb
ss
dec
jmpw
out
cmp
loope
mov
pop
scas
adc
mov
cs
push
shll
jb
cltd
jbe
addl
js
std
addr16
inc
or
loopne
test
pushf
out
sbb
cltd
es
push
repz
std
xor
mov
adc
fisttpl
fld
inc
cmpsb
jbe
dec
add
sbb
je
dec
lret
outsl
pop
inc
or
sbb
fistl
cld
add
xchg
and
popf
enter
repnz
test
mov
inc
xchg
arpl
push
push
stos
xchg
fidivrs
jmp
int
imul
bound
mov
or
cs
loop
and
pop
or
icebp
adc
fistps
ret
daa
push
and
jno
push
popf
add
xchg
rolb
outsb
test
cmp
mov
jno
in
push
dec
mov
or
add
insb
jb
push
and
xchg
and
data16
aas
lret
push
adc
xchg
cmpsl
adc
cli
xor
add
cmp
push
popf
js
ja
mov
jne
decl
lret
jmp
xchg
mov
add
std
push
js
shlb
outsl
mov
imul
sub
mov
movsl
or
xchg
mov
aaa
shrl
mov
and
and
pushf
sbb
lret
sub
mov
dec
mov
jb
rorb
orb
jae
je
fisttps
decl
xchg
inc
mov
adc
xor
loopne
xor
sbb
xchg
and
cmp
or
stc
cmp
out
outsl
mov
inc
dec
mov
mov
xor
ja
subb
adc
ja
add
loope
push
ret
aad
or
jge
hlt
jae
fildl
aad
xchg
stos
adc
jb
cltd
jle
mov
pop
dec
cmp
push
int
dec
test
sub
push
add
cmp
pop
and
cmpsb
mov
lea
int3
out
pushf
inc
mov
outsl
jl
dec
psrld
or
cmpsb
sub
test
pop
in
scas
loopne
cwtl
sahf
xchg
popa
movsl
pop
inc
stc
test
push
insl
and
xchg
js
mov
fwait
mov
ljmp
add
pop
in
cltd
adc
mov
cld
call
mov
outsl
data16
sbb
mov
out
insl
movsl
sub
xchg
or
mov
and
add
and
xchg
sub
jnp
adc
lea
or
gs
cmp
sti
cmp
mov
dec
lods
jecxz
out
dec
mov
pushf
or
sub
out
mov
xor
int
xchg
js
xlat
fcoml
xchg
fistl
sti
push
fs
ljmp
or
pop
subl
push
sub
lock
mov
ja
lret
popa
es
gs
sbb
and
xchg
cmc
ror
mov
cld
lcall
mov
lods
cmp
sub
ss
arpl
inc
jnp
pop
outsb
loop
lea
pop
mov
and
call
repnz
dec
sbb
fdivrl
loope
mov
mov
push
lods
cmp
out
cli
push
out
ror
push
js
and
int
nop
bound
jle
divb
xor
pusha
and
cmp
xor
ss
dec
clc
rclb
xor
rcrl
std
cld
jp
add
mul
mov
push
mov
sti
shrl
lods
or
mov
movsb
mov
mov
cmp
and
gs
sbb
imul
movsl
jecxz
std
or
mov
add
pop
movsl
inc
cmp
jne
mov
cmpsb
mov
jmp
data16
add
fdivrs
jmp
xchg
pop
and
push
mov
dec
push
add
mov
lcall
in
xor
cmp
sbb
mov
add
dec
out
lods
aam
adc
jae
inc
adc
popf
dec
jb
je
shrl
insb
aad
loope
aad
add
xor
sub
and
and
out
jge
inc
and
int
hlt
pushf
shll
sbb
movsb
mov
sub
and
ljmp
cmpsl
adc
xor
or
mov
outsb
mov
enter
fs
movsl
pop
xchg
or
bound
push
cmpsl
loope
sbb
xlat
popa
xchg
adc
pop
test
adc
enter
test
int3
shr
cmpl
pop
jl
incb
pusha
or
mov
push
out
jno
mov
jmp
iret
lock
loopne
add
lods
lods
shll
inc
cmp
loope
pop
gs
shlb
push
fnstcw
jp
sbb
jne
add
adc
test
outsb
push
inc
cmpsb
call
cmp
add
mov
fwait
ljmp
sub
cs
int
jbe
cmp
push
in
pop
stc
push
shlb
xor
sub
sub
adc
lock
les
xchg
sbb
jge
jbe
pop
dec
inc
xlat
sti
imul
jl
pop
inc
jnp
inc
insl
push
cmp
mov
arpl
fwait
ja
inc
mov
push
pop
cmp
jecxz
add
mov
data16
push
cmp
data16
lods
jo
push
pop
jl
cmp
mov
shlb
pop
imull
inc
out
stos
and
repz
int3
push
outsb
mov
xor
out
jno
push
lret
pop
test
iret
cltd
sub
clc
imul
scas
adc
popa
scas
ja
cwtl
push
popf
jb
jle
das
psllq
les
out
xchg
push
stc
and
adc
test
in
pop
mov
push
push
mov
inc
daa
pop
ss
dec
lea
out
iret
movsb
push
adc
inc
push
or
mov
in
inc
sarb
sti
into
fwait
test
cmc
push
mov
movups
sub
dec
rcrl
fadds
xchg
gs
in
jne
movb
mov
es
mov
lds
mov
inc
das
insl
shl
mov
mov
pop
sahf
rcr
and
jne
in
mov
roll
add
mov
push
adc
cmp
xor
mov
inc
and
inc
movzbl
int
inc
mov
hlt
addr16
subl
int3
jp
mov
xor
push
fcmovb
scas
sti
xchg
int
dec
in
pop
push
mov
je
fs
aam
adc
mov
ret
fcomip
insl
lcall
mov
nop
inc
adc
xchg
ja
jl
ljmp
lds
les
jmp
jl
loop
xor
jecxz
push
decb
cmpsb
cltd
jle
clc
cmpsl
pop
jmp
dec
test
mov
sub
and
sub
jne
add
scas
pop
cmp
push
out
gs
cwtl
mov
push
add
sub
lea
sbb
sbb
xchg
call
mov
pushf
and
insl
push
push
mov
mov
dec
adc
push
ret
mov
dec
out
frstor
xchg
je
les
mov
xor
leave
mov
jp
cltd
and
add
cltd
push
ss
cmp
xor
iret
push
dec
dec
pop
addr16
dec
aad
mov
xchg
stos
scas
div
ret
xchg
inc
out
mov
mov
outsl
in
pop
sub
mov
add
addr16
fisttps
pop
out
in
arpl
cs
jecxz
or
cwtl
out
in
je
adc
jne
inc
push
mov
sub
inc
mov
test
int
sbb
movsb
or
xchg
rol
xchg
pop
int
push
cmp
das
dec
xor
pusha
push
add
sahf
sbb
xor
fcomps
inc
test
test
lock
mov
push
shrb
andl
outsl
inc
push
push
out
out
cmpsb
mov
xchg
das
cli
loop
cmpsb
je
xchg
xor
fcomps
subb
sub
frstor
push
and
int3
add
js
mov
imul
lret
pop
and
mov
lea
gs
jle
pop
rcll
aas
jbe
out
data16
jbe
or
out
dec
test
cwtl
push
loopne
sbb
aaa
mov
clc
fldl
cs
rcrl
cmp
rclb
pop
into
mov
xchg
je
push
leave
in
cmp
nop
jmp
iret
stos
add
push
xchg
mov
cli
cld
xor
jo
and
ljmp
mov
sub
mov
and
fadds
popa
xor
mov
push
mov
inc
fbstp
xchg
pop
lahf
lret
int
mov
pop
sti
xchg
and
stos
inc
jo
cmc
orb
stos
dec
aaa
ss
lret
stc
xor
pop
bound
ret
pop
adc
out
mov
fldcw
dec
das
scas
cld
push
mov
lods
and
mov
repz
jno
out
push
cltd
lea
fwait
bound
pop
outsl
cmp
jg
jno
int3
iret
ljmp
test
rorl
mov
je
imul
cld
loop
dec
cmp
sbb
aaa
pop
int3
push
addr16
shll
mov
push
repz
test
cmp
inc
xchg
sbb
movsl
lods
pop
mov
jl
jg
shlb
hlt
dec
imul
outsl
push
jbe
setne
inc
cmp
aas
rorb
loope
inc
je
int3
test
fistpl
pop
loope
cmp
in
fcoms
mov
lret
shlb
test
test
xor
push
into
mov
sub
mov
cltd
xor
addr16
popf
pusha
cli
inc
negl
int
jo
jb
and
call
int
mov
sub
mov
test
pop
sahf
cmp
push
addb
loope
cld
movsb
stc
push
dec
jae
xor
std
jnp
inc
jg
mov
data16
enter
dec
insl
mov
fsubr
ja
add
je
sub
in
iret
pusha
pop
loope
mov
pusha
sbb
shrl
push
int3
std
sti
or
add
lea
adc
popa
xor
ret
js
insl
push
in
cltd
in
repnz
imul
sub
in
mov
mov
cmpsb
or
in
fisubrl
cmc
or
pop
orl
fstl
xchg
cwtl
call
jl
inc
movsb
in
in
nop
int
adc
leave
inc
push
outsb
cmpsl
mov
sbb
sbb
xchg
outsb
mov
test
movsb
sahf
loopne
les
fbld
loopne
outsl
jae
jne
repz
adc
lahf
test
jo
lret
dec
adc
shlb
orl
pushf
xchg
add
movsl
call
out
mov
leave
sub
out
or
nopl
sbb
sub
xchg
jno
push
and
hlt
inc
mov
mov
stos
andb
adcl
sar
insl
imul
jmp
or
or
mov
push
dec
test
jp
scas
mov
sub
cmpb
lds
rcrl
jle
mov
dec
notb
dec
xchg
jbe
mov
adc
popa
fmull
inc
inc
push
jns
mov
test
or
jle
sub
pop
mov
mov
jo
xchg
jg
xchg
pop
outsl
daa
push
cmp
jp
fidivrs
jbe
int
cmp
mov
in
or
cmp
push
inc
cs
test
mov
in
jle
leave
clc
outsb
jmp
sub
adc
cmp
dec
pop
xor
aaa
and
int
push
fstpt
lods
jle
in
pop
sub
push
stc
popf
cmc
jg
stc
sarb
push
stos
std
fsubs
mov
push
rcrl
negl
negb
fiadds
nop
push
dec
test
mov
mov
sub
sbb
lret
outsl
subl
xor
push
insl
repnz
movsb
lock
adc
jg
fsubrl
aad
cs
pop
ds
jmp
fsubs
push
or
jl
push
mov
pushf
ss
ljmp
mov
cmpsl
sbbl
mov
cmpsb
rcrl
rcrl
nop
and
mov
xchg
pop
pop
popa
stos
rcl
fisttpll
iret
insb
popf
push
or
and
or
inc
jg
mov
sub
imul
xlat
rcr
icebp
fists
mov
mov
sbb
mov
and
cmp
mov
adc
movsl
jbe
pop
mov
fiaddl
cmp
stc
jl
mov
test
mov
cmp
es
pop
fsubl
or
mov
sahf
xorl
ret
cltd
pop
cmp
add
pusha
add
push
shl
out
mov
jno
lahf
mov
sbb
nop
in
inc
in
mov
or
scas
and
adc
loopne
pop
int3
xchg
into
jb
lcall
cmp
popa
inc
mov
dec
dec
add
cld
push
in
adc
mov
pushf
xchg
arpl
ljmp
addr16
push
cmp
dec
pop
ljmp
rcrb
daa
lret
mov
adc
mov
stos
repz
and
or
imul
dec
ret
dec
push
mov
sub
mov
cmp
push
repnz
jnp
sub
les
rcll
dec
dec
lock
pop
icebp
sahf
inc
xchg
test
xor
mov
cmc
mov
test
popf
and
sbb
pop
adc
sub
adc
fucom
jmp
mov
hlt
add
dec
in
jo
mov
stc
dec
add
les
mov
mov
mov
cli
cmp
pop
xor
test
mov
cltd
mov
xor
xor
test
push
movsl
or
sub
xor
mov
dec
pusha
mov
pop
dec
movsl
subb
pop
mov
int3
sti
mov
rcll
cs
mov
push
sub
insl
repnz
daa
sbb
and
lods
jecxz
pop
popf
push
outsb
sbb
mov
shl
std
lea
push
xor
dec
shl
fistl
ret
aad
xchg
push
xlat
and
cmp
imul
and
mov
cmpsl
lret
sub
sbb
das
xchg
xchg
or
add
dec
mov
fstp
jmp
push
xchg
fadd
push
out
mov
cmp
les
or
push
into
aam
cmp
inc
pop
leave
mov
test
imul
add
pop
pop
sub
add
aam
mov
inc
push
gs
inc
or
or
or
adc
jg
adc
int3
in
mov
dec
out
icebp
add
mov
aaa
fistps
sahf
gs
lds
imul
pop
inc
ja
mov
clc
xchg
pop
int3
scas
or
push
inc
sub
out
lock
and
adc
sbb
mov
sub
sub
in
jnp
aam
dec
pop
jb
outsl
sub
jp
inc
push
mov
push
push
fildll
popf
imul
mov
movsb
lods
jae
and
in
into
rcrl
add
and
ret
call
bound
in
lods
pop
jmp
cmp
jle
fldt
fcomip
outsl
int3
jg
push
daa
scas
dec
std
fidivs
pop
mov
test
pop
hlt
or
arpl
daa
out
xchg
pusha
dec
dec
mov
popf
pop
rcrl
xchg
add
xor
jle
test
movsl
push
scas
ljmp
mov
jp
inc
lcall
sub
aas
int3
je
xchg
jmp
cmpsl
pop
xor
or
mov
push
push
test
inc
and
dec
fldenv
inc
dec
and
and
ret
loopne
nop
jl
mov
test
loopne
jo
addb
pop
mov
icebp
movsb
dec
lret
mov
inc
ljmp
push
lcall
stos
xor
cmpl
and
push
mov
stos
inc
fidivrl
leave
sbb
jmp
pop
cli
adc
mov
inc
mov
push
push
ljmp
dec
imul
xor
cmp
les
xchg
in
loopne
and
cli
add
xlat
fildll
and
sbb
jbe
les
into
add
out
cmpsl
ja
mov
push
dec
lea
mov
sarb
shl
jo
enter
mov
loope
jno
mov
cmp
rolb
inc
addb
xchg
rcrl
add
inc
push
dec
jbe
stos
adc
and
je
aad
jp
sahf
push
and
xlat
sbb
bound
and
imul
sbb
imul
mov
rorl
cmp
ret
adc
jg
sub
into
pop
fdivrs
iret
push
push
repz
mov
jmp
bound
in
dec
dec
imul
loope
js
sarl
stos
adc
mov
cmp
inc
data16
and
stos
adc
push
lret
outsl
mov
adcl
cmp
jo
aad
pop
inc
pop
mov
decb
mov
sub
xchg
inc
cmp
and
fstpt
loopne
lock
into
lret
aam
hlt
push
icebp
rolb
das
gs
and
push
outsb
lods
ret
scas
jle
sbb
cmp
jo
insl
mov
in
inc
lcall
je
popl
out
stos
jge
jg
or
cltd
gs
mov
in
insl
dec
and
and
inc
ret
xor
repnz
jns
pop
outsl
mov
jo
leave
lea
cmp
jge
mov
mov
lock
out
xchg
mov
call
test
cmp
mov
test
mov
add
add
sub
push
inc
fiaddl
data16
aaa
sub
cmp
jne
jg
cs
fldl
lcall
pushw
sbb
cmp
mov
xchg
mov
scas
in
scas
out
jmp
lea
jl
xor
repz
pop
push
ja
pop
dec
fdivs
rolb
pop
daa
dec
and
mov
sub
mov
jo
adc
lcall
pop
mov
adc
lret
stos
vmovupd
and
jecxz
mov
adc
inc
mov
dec
cmpsb
push
sub
mov
or
push
lret
pop
push
clc
mov
in
jo
lcall
std
push
in
mov
fnstenv
sbb
ja
cs
or
push
cmpsl
lock
mov
or
outsb
dec
in
mov
sub
sti
sub
stos
push
jae
lahf
inc
int
add
lcall
cmpsl
repz
mov
mov
pushf
lods
push
aaa
loop
cli
and
cmp
add
dec
scas
jnp
xchg
fcoms
pop
jecxz
sub
cld
loop
push
adc
loope
negl
push
out
int3
lods
cwtl
mov
mov
aaa
cmc
mov
hlt
dec
pop
xorb
je
sahf
push
das
in
mov
sub
pushf
mov
fisubs
inc
hlt
shll
aaa
push
jns
cmp
cmp
jp
inc
push
dec
filds
push
in
sarl
adc
sub
sbb
aaa
push
out
xchg
adc
outsl
pop
lret
xor
dec
adc
movsl
dec
fs
mov
insl
sarb
aam
pop
mov
sbb
jl
lcall
push
xchg
push
roll
sub
inc
or
subb
jno
fiadds
or
subb
and
pop
sarl
ss
cld
mov
gs
fldt
and
xor
push
or
inc
mov
mov
arpl
xlat
cmp
fcomps
nop
xchg
lret
in
lea
dec
scas
push
push
and
std
aaa
inc
push
es
mov
mov
ja
xchg
push
subb
mov
fadd
mov
mov
test
ds
daa
pop
or
jno
in
sub
xchg
jl
adc
loope
lds
mov
adc
mulb
mov
ficomps
insl
icebp
aad
jns
ja
inc
cltd
pop
jae
ss
imul
jle
pop
mov
repz
xor
lock
jecxz
in
cmp
adc
out
aas
push
test
jo
xor
aad
out
push
outsl
sub
push
loopne
ret
and
mov
ljmp
jmp
xchg
mov
xor
pop
mov
ret
insb
sub
shrl
hlt
xchg
ja
js
fistpll
das
mov
push
xchg
and
push
insb
cmp
sbb
cmpsl
lahf
dec
add
mov
stc
shll
cs
fdivl
add
mov
and
jo
add
cmc
cmpsb
aas
shll
pop
imull
xchg
xchg
inc
fldcw
jge
mov
xchg
cwtl
or
std
xchg
out
out
imulb
roll
xor
xchg
dec
mov
mov
push
sub
cwtl
inc
ficompl
out
pop
jnp
inc
fistpll
sub
fisttpll
fstpl
test
push
lahf
and
lods
enter
sahf
push
into
cltd
pop
or
sbb
mov
pop
and
pusha
arpl
cmp
fnstenv
inc
mov
or
shl
and
popl
xchg
int
xorl
inc
pop
sbb
orb
mov
inc
lock
adc
jmp
jns
aaa
push
jmp
sbb
fs
lods
mov
sbb
in
pop
sbb
xchg
sbb
cmp
sahf
insb
addr16
mov
lcall
adc
loopne
aam
sbb
out
mov
push
outsl
pushf
rorb
xchg
cmpsb
xor
xchg
jns
sbb
and
mov
cmp
or
mov
jle
cltd
pop
jmp
inc
loop
fisttps
fsts
sbb
dec
jb
sbb
lcall
enter
push
fcoms
cmpsb
out
jp
sub
and
and
aaa
push
outsl
iret
inc
or
fucomi
into
add
jne
cmc
pop
movsl
icebp
fists
sbb
out
mov
inc
idivb
cmc
ficoml
dec
insl
outsb
mov
dec
and
xchg
dec
test
adcb
and
mov
cmp
dec
sbb
jge
sbb
shl
adcl
addr16
clc
mov
inc
lahf
jnp
and
cmpsl
sub
ljmp
repz
mov
lock
xor
mov
add
xchg
pop
cwtl
popa
jp
out
jae
inc
pushf
sub
adc
fldt
test
pop
popf
ljmp
and
mov
out
pushf
xor
mov
push
into
adc
sub
cmp
mov
sub
add
xor
mov
mov
mov
and
xorb
mov
push
data16
pop
dec
jmp
mov
mov
mov
adc
fwait
mov
insl
out
mov
sbb
int
pop
jge
push
arpl
sahf
jno
cs
scas
add
bound
adcb
cmp
int
fs
outsl
pop
pop
sub
jns
test
cmp
mov
sbb
jno
popa
push
outsb
xor
sbb
mov
jae
es
std
jb
dec
mov
out
int
jns
stc
jns
pop
inc
mov
aaa
mov
arpl
cli
push
es
add
xor
mov
lods
popa
in
ret
adc
adcb
sub
pop
cwtl
aam
xor
pop
nop
aam
es
out
xor
js
push
or
ljmp
movsl
test
loope
xchg
xor
fwait
mov
jns
ret
aad
fimuls
and
inc
into
push
adc
int
adc
arpl
jmp
loop
mov
into
inc
xchg
cmp
out
movl
insb
mov
test
fisubs
ja
adcl
inc
sub
outsl
shll
jle
push
aad
in
int3
test
scas
push
push
into
push
rep
leave
aaa
into
out
ss
mov
orl
lcall
fwait
sahf
test
jecxz
and
rcl
and
and
cmp
into
ds
mov
xorl
das
psubb
or
mov
sub
mov
arpl
stos
enter
and
xchg
ret
sti
pusha
pop
pop
xor
jp
cmp
test
fisttpl
mov
popf
push
jp
arpl
in
xchg
push
xor
stc
jecxz
xchg
cmc
in
mov
mov
mov
fs
mov
and
sahf
rol
or
fiadds
cmpsl
push
push
and
adc
stc
and
push
cmpsl
aam
data16
mov
pop
mov
fucom
mov
jae
stos
loopne
cltd
mov
push
mov
pop
pop
adc
fdivrl
cmp
ret
mov
pop
xchg
pushf
inc
jae
scas
dec
jnp
sbb
and
cmpsl
xchg
cld
xor
fs
xchg
and
add
nop
clc
repnz
movsb
lcall
pop
scas
ss
jge
aad
jge
cmc
dec
popa
cwtl
or
jno
or
and
call
lret
mov
sub
xor
movsb
or
push
clc
test
movsl
mov
nop
adc
sub
pop
inc
out
test
cmpsl
pop
loope
je
add
pop
sub
push
ficompl
lods
xchg
mov
add
mov
mov
mov
adc
fidivl
dec
sub
adc
cltd
add
pop
stos
or
flds
xor
lahf
mov
pop
sbb
bound
or
orb
andb
sar
shll
pop
mov
pop
sbb
out
insl
adcl
frstor
fwait
mov
pop
and
pop
out
sahf
dec
add
xchg
pop
cltd
ljmp
mov
mov
imul
outsb
push
xor
into
push
rclb
xchg
adc
ss
scas
cmp
sbb
cmpsb
stos
daa
in
xor
daa
cmc
aad
and
dec
mov
out
jo
mov
outsl
mov
ret
mov
loope
test
push
pop
xchg
int
inc
pop
add
ror
enter
test
jmp
loope
xlat
inc
lods
fisttpl
std
fistpl
cmp
sarb
rcrb
add
mov
add
mov
sbb
mov
inc
mov
addr16
mov
mov
sbb
repnz
adc
xchg
mov
rdmsr
jl
lods
jb
lret
into
lods
xor
js
xchg
jmp
ffreep
xor
and
jge
inc
pop
xchg
jns
lods
sti
cmp
jp
or
test
test
dec
int3
pop
in
ds
es
jle
popa
pop
in
sarb
mov
and
adc
jmp
cs
add
fisttpll
inc
gs
jne
ljmp
stos
movsb
popf
mov
xor
mov
jecxz
pusha
js
sti
in
inc
inc
dec
std
mov
jne
or
movsl
dec
test
pop
mov
icebp
negl
scas
je
lea
std
jae
testl
inc
jb
not
movsb
adcb
test
lds
movsb
adcl
pop
rorb
lret
out
dec
xchg
xchg
je
sti
mov
push
inc
inc
insb
inc
mov
lahf
in
sub
pop
lcall
sbb
das
cli
xor
fimull
mov
mov
cmp
fsubrl
and
mov
dec
xor
push
andb
push
inc
mov
in
lahf
xchg
sub
aaa
fwait
ficomps
and
cmp
fiaddl
xor
or
push
fdivrs
cmp
pop
xchg
rcrl
das
jne
push
pop
mov
insl
cli
fs
mov
fwait
inc
or
hlt
mov
xchg
sbb
mov
rclb
dec
jmp
outsb
daa
pop
xlat
inc
or
or
cmpl
pop
xchg
add
movsl
ja
mov
ds
das
iret
dec
fmull
pop
cmc
shl
adc
adc
les
mov
repz
ficoms
xchg
sub
fisttpl
pop
inc
mov
js
or
leave
repz
adc
inc
pop
pop
push
jp
adc
jl
loop
jl
lret
ljmp
insb
ljmp
pop
test
repnz
pminsw
add
enter
lret
js
push
insb
pusha
jno
leave
mov
loope
divl
fstl
sti
jns
mov
jns
jmp
pusha
stos
dec
ror
xchg
cwtl
fcmovnb
cmp
add
cld
adc
in
adc
xchg
imul
les
inc
not
gs
loope
pop
ret
add
ret
cwtl
xor
loope
xor
ljmp
dec
leave
cmc
cmp
repz
in
flds
xor
jns
lea
mulb
jb
xorl
xlat
mov
ja
xchg
fmulp
sub
xchg
inc
adc
dec
jg
ret
daa
xchg
data16
inc
js
xor
inc
dec
lock
inc
js
aas
std
sub
mov
sub
popf
mov
push
adc
dec
adc
fsubs
xchg
mov
rcll
push
fsin
pop
test
repz
loopne
scas
das
mov
xor
mov
fld1
cltd
adc
mov
cld
xorb
popa
jne
lahf
insb
xchg
push
xor
mov
pop
in
jge
lahf
and
add
out
in
push
inc
loope
pop
pop
mov
cmp
lcall
shll
mov
inc
mov
icebp
mov
dec
jbe
inc
mov
dec
jp
popa
pop
sbb
inc
iret
xor
dec
jo
dec
daa
xor
sbb
aad
push
and
mov
xor
pop
add
mull
adc
sub
mov
int
or
mov
dec
pop
pop
mov
fmull
scas
mov
fsubrs
adc
gs
jmp
mov
iret
or
jmpw
fisubrs
outsb
call
aad
rclb
cmc
sub
aam
push
mov
xchg
add
pusha
xor
mov
sbb
or
pop
push
sbb
cld
mov
movl
in
inc
in
push
xor
repnz
mov
test
xchg
sti
mov
inc
add
jle
mov
add
mov
loope
jmp
mov
loop
js
or
mov
out
pop
out
mov
aam
inc
lods
test
fs
push
push
and
cmpsb
sti
pop
out
lret
hlt
icebp
sbb
or
mov
lea
out
aaa
fstps
outsb
aad
hlt
sti
pop
icebp
std
sub
int
mov
mov
jnp
loop
or
mov
mov
out
push
cmp
aam
xchg
pop
sahf
inc
xor
arpl
movb
push
inc
jb
lcall
xlat
mov
push
cli
sub
lods
push
adc
dec
aas
jl
xlat
loop
iret
xchg
sub
push
add
push
insb
pop
xor
imul
mov
cmpsb
int3
shrl
test
mov
loope
adcb
adc
insl
mov
cmpsb
insb
jp
hlt
pusha
mov
pop
and
push
push
insb
fsubs
xchg
lods
data16
and
stc
ljmp
roll
ja
jmp
imul
sar
dec
xchg
pop
xchg
scas
leave
xor
iret
cmp
aas
mov
lods
aas
jle
or
jae
sbb
sbb
icebp
aam
mov
push
in
and
scas
ficoms
xchg
dec
xchg
push
mov
mov
xlat
and
xchg
lahf
ret
mov
hlt
pop
in
pop
dec
push
and
cmp
push
movsl
adc
pop
dec
out
push
lods
push
in
push
stos
loop
xchg
mov
xchg
sub
mov
jp
cmp
push
xchg
mov
loopne
fidivrs
je
les
mov
jo
ljmp
int
mov
cltd
and
test
add
dec
mov
in
jecxz
in
xchg
adc
shll
cmp
xor
xchg
leave
pop
out
and
add
lahf
outsl
mov
cmp
lds
ret
dec
ret
aam
adc
leave
cld
jne
jb
mov
aad
dec
and
pop
pushf
aad
stos
xchg
mov
ja
xor
push
mov
jg
fdivr
add
stc
inc
inc
or
je
fst
and
dec
ficompl
pusha
xchg
les
mov
add
xchg
inc
iret
andb
jno
xor
and
adc
jge
jl
xor
mov
dec
in
push
andl
fs
das
push
cmpb
push
out
cwtl
leave
dec
cld
pop
pop
add
mov
loop
mov
addr16
mov
adc
pop
mov
in
push
aas
jae
push
dec
movb
outsl
test
in
mov
or
mov
cs
out
inc
add
daa
mov
mov
repnz
mov
fwait
gs
cs
xor
inc
les
loopne
ljmp
push
lret
push
sti
fidivrl
out
sbb
sbb
push
jecxz
mov
lock
les
fs
cld
xor
es
sti
xor
outsb
and
std
fiadds
add
hlt
ror
and
orl
out
fidivl
pop
lock
push
add
shl
xchg
mov
divb
mov
sarb
std
pushf
rol
loope
sbb
mov
pop
mov
cmp
fdivr
cli
push
adc
lds
in
loope
jg
daa
xlat
inc
xor
out
ret
sub
leave
gs
add
dec
insl
xor
push
rolb
dec
and
rep
enter
fnstenv
lcall
pop
add
pop
and
jae
lods
cld
fadds
jle
adc
lods
xchg
cmp
cmp
xchg
mov
repz
mov
sbb
push
jo
dec
dec
fimuls
xchg
pop
out
adc
fbstp
in
sub
subl
cmpsb
cld
inc
test
xchg
xchg
sti
inc
aaa
outsb
xorb
adc
aad
movsl
call
inc
sarl
fnstenv
test
loopne
mov
inc
push
scas
subl
imul
cmp
or
jbe
fwait
lcall
lods
add
adc
push
push
pop
sub
cmc
push
js
ss
mov
sbb
and
xchg
ret
bound
shr
mov
inc
jns
fiaddl
icebp
popf
cmpsb
dec
and
push
dec
or
dec
ja
stc
test
mov
int3
mov
dec
xor
xchg
out
push
mov
fwait
int
enter
mov
mov
fcmovnu
push
dec
ja
sbb
push
fcmovne
jecxz
cmp
add
aam
or
rol
adc
std
nop
jae
pop
cltd
mov
shr
aam
leave
dec
jle
push
test
add
push
mov
xor
lcall
push
cmc
fadds
pop
inc
stos
stc
sub
bound
jae
jns
and
inc
rcll
xchg
jmp
addr16
push
add
icebp
sub
inc
fdivrs
jno
inc
imul
mov
jno
repnz
mov
inc
sub
push
roll
push
outsb
inc
jno
sysenter
add
testl
in
scas
or
jmp
sbb
nop
sub
pop
hlt
sbb
mov
jp
pop
mov
lea
jae
femms
sbb
push
cs
popa
mov
icebp
sub
mov
lock
fstpl
pop
out
cmc
ja
xor
mov
cmc
hlt
inc
mov
lods
xlat
ss
cmc
cmp
pop
xchg
xor
sbb
scas
mov
sbb
sbb
adc
cmp
stc
mov
rolb
in
inc
mov
xchg
xor
jne
outsl
ret
cmc
and
sub
fstpt
popa
popa
rorl
mov
imul
sbb
cwtl
loopne
jmp
fwait
sbb
cmp
xchg
sbb
mov
test
xor
mov
test
sbb
add
sbb
divl
push
cld
jmp
sahf
mov
mov
adc
mov
xor
into
push
cmp
sahf
stos
jo
add
hlt
fstpl
sarl
lret
push
pop
aam
fidivrs
shlb
test
flds
sti
adc
adc
cmp
cld
mov
or
out
outsb
into
xchg
leave
jo
xchg
xor
fsubp
cmp
mov
in
sub
out
ljmp
jmp
das
sub
mov
jno
sar
lret
cmp
out
cmp
stos
push
dec
jo
pop
aad
sub
and
or
stos
sub
loopne
ja
pop
lock
push
and
adc
xor
test
cli
xlat
push
imul
clc
bound
movsb
rolb
imul
sbb
shlb
jno
insb
sti
ja
or
imul
sub
sti
int
sbb
sub
sbb
inc
popa
mov
aad
cwtl
and
in
xor
das
mov
adc
mov
mov
inc
dec
enter
jne
ljmp
xchg
dec
mov
loop
leave
int
dec
popf
push
aas
or
mov
adc
inc
add
popf
jp
push
or
in
loop
pop
ds
pushf
and
jae
test
mov
lcall
imul
inc
cmpb
pop
dec
xor
mov
jae
and
jae
adc
jo
dec
pusha
fdivrl
ja
int3
lock
hlt
stos
lret
rcrl
mov
addr16
xlat
subl
lea
mov
xchg
mov
not
popa
mov
test
loope
mov
movsb
and
add
and
mov
pop
mov
pop
jnp
push
lret
or
mov
mov
mov
and
imul
bound
mov
lock
xor
addr16
test
mov
jne
inc
and
jp
or
int3
test
and
fildl
pusha
mov
push
inc
mov
bound
insl
jnp
nop
jo
add
push
jle
sub
push
inc
scas
or
fwait
xor
inc
es
in
vmovsd
out
sub
mov
push
adc
mov
or
add
dec
pop
imul
pushf
imul
lock
les
mov
adc
int3
or
pop
adc
mov
pop
popa
je
inc
mov
ljmp
ds
push
mov
jae
mov
es
inc
stos
cmpsb
fisttps
sub
xchg
mov
or
data16
les
sbb
xor
or
inc
xchg
and
mov
push
lret
xor
imul
movsl
mov
lods
pop
jmp
pop
push
mov
ds
in
sti
mov
mov
xor
fs
cmp
out
fcmove
stos
xor
stc
mov
nop
sahf
mov
xor
in
add
std
sub
cmp
mov
inc
mov
loop
shrl
xchg
mov
pop
dec
jle
xor
inc
nop
popa
cmp
rcll
or
repz
jno
sub
std
repz
cmp
dec
imul
mov
pop
testb
jbe
push
dec
inc
push
and
and
dec
cmp
xchg
fsts
mov
dec
mov
in
xor
scas
dec
sbb
test
fistl
mov
push
lea
pop
ror
inc
out
jl
ljmp
mov
arpl
mov
lods
xor
mov
in
push
or
jno
outsb
jp
push
test
sti
hlt
push
sub
test
cmp
test
sbbl
mov
or
outsl
mov
idivl
or
or
xchg
mov
inc
lret
adc
movsl
cmp
adc
fwait
dec
cmpsl
fs
and
pop
pop
mov
loop
xlat
pop
scas
inc
mov
mov
jge
dec
mov
mov
and
sub
outsl
inc
xchg
fists
inc
adc
mov
add
enter
into
dec
pop
dec
iret
dec
sbb
sbb
adc
clc
sub
mov
sub
mov
jmp
add
xchg
add
cmpsl
add
adc
push
pop
js
push
mov
loope
daa
orb
or
sbb
mov
push
pop
fistpll
mov
xchg
add
jne
lret
addr16
in
pushf
movsl
pop
sub
stos
adc
int3
dec
inc
mov
pop
dec
push
xor
mov
jae
hlt
je
adc
in
mov
std
mov
shlb
push
inc
inc
xor
jne
mov
xchg
adc
cmp
cmp
and
leave
xchg
xchg
rolb
xchg
mov
cmpl
dec
clc
cmp
sbb
insb
pusha
insl
jb
pop
aam
and
jno
mov
and
popf
sqrtps
pop
cli
dec
push
cmp
lods
loope
ret
push
mov
jae
lahf
push
xlat
insb
cltd
stos
test
or
jbe
ficomps
jae
cld
mov
cmc
jae
jno
daa
bound
fistpll
flds
aad
ret
lahf
or
or
push
loope
clc
pop
fmull
add
mov
pop
sbb
inc
push
pop
add
or
pop
sbb
dec
imul
xchg
js
inc
mov
stc
out
movsl
std
pop
cmpsb
mov
out
mov
xor
inc
lahf
call
icebp
fcoml
pop
cmc
jae
or
das
fidivl
mov
xchg
xchg
mov
scas
data16
mov
sub
das
pop
pop
xor
jno
jbe
ret
mov
lahf
lods
inc
xlat
testb
lret
pop
aam
stos
addb
dec
xchg
movsb
outsb
and
push
into
pop
adc
insl
cmp
cltd
cmp
inc
sbb
imul
fisubrs
imul
inc
mov
mov
and
dec
pop
ss
or
call
sbb
push
or
dec
cltd
add
or
pop
push
imul
test
push
sub
push
fwait
mov
adc
adc
in
test
movl
push
iret
lea
fmull
mov
mov
sub
cmp
inc
out
aaa
push
pusha
xchg
cs
testb
push
adc
cli
les
push
fcoms
pop
push
and
sbbb
aas
into
push
jge
adc
dec
jae
adc
push
into
test
or
fbstp
lods
pop
out
add
shlb
out
outsl
sub
xchg
std
inc
pop
mov
push
xor
stos
cmpb
and
xlat
sbb
lret
sbb
mov
test
lods
mov
faddl
pop
inc
jecxz
out
clc
gs
in
sub
adc
test
add
les
mov
fucom
dec
shrl
aas
jb
or
rcrb
sbb
xor
mov
cld
jl
adc
clc
push
arpl
mov
movsl
das
orb
or
int
push
sub
sub
and
test
popf
add
push
imulb
and
pop
sbb
fucomi
jecxz
mov
mov
mov
stc
ja
popa
scas
adc
push
add
push
push
pop
mov
jmp
mov
sub
jns
les
hlt
ror
jge
sub
pushf
pop
scas
out
jg
push
mov
cmpsl
scas
nop
jo
outsb
push
xchg
mov
and
mov
jbe
shll
insb
cwtl
in
stos
mov
or
aas
das
ljmp
push
dec
aam
jae
lds
xchg
call
xor
clc
pusha
dec
xchg
and
fdivp
cmp
lock
jl
mov
lcall
add
inc
mov
test
pop
rcll
imulb
add
pop
cmp
pop
daa
adc
insl
add
rorl
pop
sbb
loopne
fst
addb
ret
repz
pop
mov
sbb
cmpsl
je
jne
dec
cmp
out
stos
push
insl
jno
push
aaa
xchg
pop
jae
cltd
in
mov
inc
outsl
mov
xor
fcoms
add
xchg
jo
test
dec
je
outsb
aam
or
clc
or
pop
aaa
mov
fidivl
mov
repz
insl
test
mov
sbb
inc
adc
je
out
xchg
add
mov
insb
in
rcll
mov
inc
icebp
das
rolb
xchg
adc
scas
sub
add
push
js
les
pop
arpl
jbe
mov
sbb
out
jo
jns
and
sbb
inc
add
lds
stos
xchg
cs
out
mov
shl
xchg
ds
jns
dec
aas
cmc
fnsave
lret
jp
mov
jge
lea
aaa
nop
xchg
add
sahf
movsb
imul
mov
sbb
dec
rol
inc
out
xchg
bound
sbb
loopne
xlat
push
and
sarl
pop
andl
addr16
cli
in
cld
mov
enter
cmp
xor
data16
pop
loopne
sbb
push
outsl
push
les
sub
sub
xor
pop
arpl
fmulp
pop
add
sbb
shl
or
mov
test
add
sti
mov
add
sbb
pushf
out
sarl
cmp
xor
out
add
notl
dec
xor
lcall
mov
adc
or
fsubl
push
or
mov
adcl
push
enter
into
outsl
push
stos
sti
cltd
pop
rcrb
lahf
pop
aad
sub
ja
ret
mov
in
mov
mov
clc
sub
mov
adc
cmpsb
adcb
and
fisubrl
movsl
jo
imul
scas
adc
inc
fldl
xchg
iret
and
xor
dec
push
mov
and
jmp
adc
cmp
fcmovb
xor
push
leave
inc
mov
adc
inc
outsb
shr
and
sbb
jbe
repz
mov
mull
inc
loope
pop
push
xor
push
adc
push
add
ficomps
rorl
mov
jne
data16
jmp
out
je
dec
cs
int
enter
mov
mov
out
push
cmc
xchg
pop
pop
inc
jmp
incl
inc
or
fadds
ss
fprem1
gs
pop
lods
sbb
jbe
into
je
jg
jnp
mov
add
repz
aad
and
daa
into
or
jg
dec
insb
fdivp
push
pop
xchg
pop
fisttpl
repz
daa
push
adc
insb
sub
sarb
bound
dec
sbb
jbe
clc
jge
jl
adc
lret
lahf
adc
icebp
cmp
clc
lds
push
insl
sbb
mov
inc
test
xor
aaa
pop
cmp
repnz
adc
cmp
jae
cltd
insb
jp
js
les
adc
ss
add
cmp
xchg
stc
out
mov
xchg
mull
xor
insl
or
adc
loopne
mov
aad
xchg
mov
jge
jecxz
cmpsb
fstps
sbb
repz
xor
pop
repnz
cmp
jecxz
xor
mov
mov
sbb
sti
stos
cmpsl
out
mov
ds
fs
mov
pop
sub
adc
neg
lea
mov
sbb
xor
mov
jb
sbb
int
loop
mov
sahf
xor
push
xor
sbb
data16
add
cmpsb
fs
xchg
popa
call
mov
pop
sbb
jge
xor
jge
jecxz
push
xchg
imul
lock
add
jp
or
xchg
mov
push
rolb
xor
notb
cmpsl
vpmacssdd
cmp
adc
pop
mov
call
lds
jnp
leave
ret
sbb
add
pop
fldl
jge
jno
mov
or
pusha
jle
lahf
lods
xlat
jmp
jbe
push
dec
sub
dec
dec
rorl
idivl
jno
out
jg
cs
cltd
ja
lock
jb
inc
push
sbb
ret
lea
call
lock
sti
adc
inc
mov
sti
jl
push
stos
mov
int3
sbb
add
imul
jp
arpl
pop
movsl
sbb
mov
xchg
cmp
cmc
fwait
mov
pop
dec
sub
nop
push
push
cs
mov
inc
lcall
fwait
call
mov
and
shrl
mov
jbe
sbb
rcrl
inc
mov
ljmp
icebp
or
push
push
das
pop
stos
mov
movsb
scas
jnp
xchg
push
push
dec
icebp
push
jmp
jecxz
mov
xchg
shll
out
sbb
mov
pop
push
es
adc
adcb
and
ficoml
aad
xor
mov
mov
leave
in
out
mov
call
cmp
jbe
push
stos
daa
sahf
out
xlat
mov
pop
cmp
jne
scas
push
decb
mov
fldl
jns
aad
call
push
ret
adc
dec
les
jns
ljmp
stos
inc
inc
mov
cmp
das
clc
popf
sub
pushf
test
lods
cmc
and
mov
cmp
arpl
into
lds
xchg
push
les
adc
inc
mov
leave
cltd
fbstp
ja
pop
mov
pop
mov
cld
icebp
in
add
mov
jbe
mov
shll
pop
in
sarl
dec
jle
inc
dec
xor
lock
cmpsb
cmp
dec
pop
andb
ret
mov
dec
sub
clc
es
fucomp
push
int
xchg
fmull
enter
add
sbb
imul
or
arpl
sbb
sbb
xchg
pop
loopne
ss
push
dec
icebp
xchg
arpl
ret
inc
insl
nop
dec
and
pop
fwait
cmp
mov
in
fnstsw
stos
lds
add
sbb
andl
pop
in
stos
outsb
mov
xchg
adc
in
in
lock
mov
imul
inc
or
movsl
adc
jae
test
mov
test
pop
pop
or
pop
es
ss
fs
icebp
mov
push
cmp
adc
mov
pop
arpl
fs
fstpt
arpl
lahf
xor
xchg
test
int3
add
mov
mov
xor
iret
xchg
mov
lods
pushf
xchg
inc
movsl
cmp
jbe
in
shll
jno
inc
js
mov
mov
push
jecxz
sub
lahf
rol
and
mov
lahf
sahf
cli
aaa
mov
lahf
push
dec
mov
movsb
rcll
std
mov
addl
dec
stc
pop
add
cld
mov
lea
jle
imul
mov
jmp
bound
mov
sar
call
cmp
xor
es
call
cmpsl
mov
lock
xchg
xchg
das
jmp
add
push
addr16
sub
cmp
and
in
adcl
int
jg
hlt
sbb
push
add
movsb
xlat
pusha
lcall
imul
stc
fnstcw
ret
mov
in
xchg
mov
pop
in
pop
test
icebp
xchg
repnz
fisubl
dec
sub
pushf
or
xchg
xchg
pop
shll
xor
xor
pop
push
clc
notl
enter
mov
cmp
sub
mov
leave
xchg
mov
and
scas
push
mov
inc
pop
fs
out
pushf
mov
and
dec
divl
jecxz
dec
xor
jmp
frstpm(287
xor
popa
sysexit
dec
mov
xchg
and
add
filds
pop
ds
mov
outsb
cmp
call
sbb
pusha
out
bound
jne
bound
out
pop
pop
jb,pt
inc
popa
add
inc
sub
xor
pop
addr16
push
mov
push
ss
lret
add
mov
xchg
js
and
mov
hlt
insb
inc
in
lcall
mov
dec
ret
jmp
sub
adc
cs
mov
pushw
lcall
pop
add
jbe
xor
stc
adc
imul
adc
fidivs
add
sub
fsub
test
lahf
orb
xchg
and
jne
mov
movsl
and
mov
movsb
sbb
or
sub
mov
sub
sbb
xor
cmp
cmp
xor
pop
adc
dec
pushf
jo
mov
aad
dec
inc
pop
clc
das
imul
subb
aam
mov
cmp
or
lahf
add
push
lock
add
inc
jbe
test
sti
push
mov
adc
sub
cmp
add
xchg
mov
push
pop
mov
fcoms
clc
or
jecxz
mov
push
mov
fucomip
std
push
daa
jmp
sbb
lods
cmp
inc
dec
dec
inc
shll
test
sub
xlat
pop
pop
cmp
rclb
nop
sarb
icebp
stc
mov
cmpsl
jb
mov
pop
inc
sub
cli
jecxz
fnsave
subb
cmc
add
jp
mov
add
imul
mov
fisttps
cs
or
cmp
testl
push
popf
or
push
outsb
add
push
adc
push
or
js
gs
sbb
in
mov
mov
sbb
dec
cmpsb
jp
jno
adc
pop
mov
sub
pop
jp
inc
xchg
sbb
mov
inc
mov
xor
jge
adc
adc
das
stc
lcall
or
shll
push
push
fcomip
adc
daa
stos
out
push
in
cmp
sbb
dec
mull
pop
sub
add
fistpll
pushw
xchg
adc
sub
mov
pop
add
lods
aam
mov
sub
lret
sbb
dec
lcall
mov
loope
js
lds
mov
lods
aam
mov
outsb
adc
xor
out
push
sbb
sbb
sub
ja
sbb
jmp
into
insb
cmp
pop
lret
test
cld
arpl
mov
mov
ds
xor
jg
adc
sub
inc
ja
fnsave
ret
lahf
test
es
fsubs
out
jno
dec
stos
mov
lock
pop
enter
jb
dec
cmp
push
fwait
pusha
movsl
pop
push
cwtl
adc
sub
mov
and
pop
jae
xchg
mov
call
sbb
push
stos
ret
sub
pushf
inc
sbb
and
ljmp
sbb
std
sub
pop
fadd
cli
divb
inc
mov
sbb
pop
cltd
lds
push
iret
lcall
jae
stos
inc
int
mov
fwait
and
mov
fmull
into
and
sahf
jecxz
mov
add
dec
roll
mov
and
cmp
mov
mov
xor
leave
xor
jbe
frstor
movsl
aam
cmp
or
mov
jb
adc
dec
sub
xor
lock
jge
push
mov
pop
add
mov
jge
rcrb
lret
icebp
lds
fmuls
sbb
ffreep
aas
imul
xor
test
in
or
add
pop
jb
lahf
fimull
pop
testb
mov
imul
aas
xchg
and
mov
adc
fwait
out
into
sub
push
mov
int3
orb
jle
ret
cmp
pop
fnstcw
out
rcr
in
add
xchg
sbb
dec
cli
sbb
pop
scas
in
cmc
cmp
imull
test
insl
inc
and
push
std
adc
push
cmp
in
mov
loopne
adc
pop
push
sahf
push
mov
loope
push
add
and
ss
es
mov
hlt
stc
xchg
sbb
lea
mov
icebp
or
add
ret
stos
out
jae
sbb
pop
lock
mov
aas
mov
sub
pop
out
cmpsb
ja
cmpsb
mov
cmc
pop
add
or
adc
testb
movsb
dec
jle
call
dec
das
das
sbb
cmp
imul
int3
jl
jb
push
push
cmp
adc
imul
pop
imul
idivb
lea
dec
adc
dec
xchg
xchg
pop
sbb
sbb
mov
roll
nop/reserved
mov
pop
mov
repnz
in
mov
into
push
in
cmp
or
loope
mov
dec
push
mov
or
mov
repz
inc
jo
push
push
fwait
push
lea
loopne
adc
or
shr
dec
jmp
test
cmp
xor
ss
xor
push
sarb
scas
aaa
and
mov
gs
in
cld
mov
sub
sub
orl
push
or
jge
push
lahf
cmp
cmp
jbe
gs
or
outsb
or
dec
insl
das
push
push
jno
xchg
inc
inc
push
sub
sub
push
pop
jns
daa
add
stos
in
insb
stc
test
nop
sahf
icebp
xor
inc
push
and
xor
pusha
out
lods
cmp
subl
mov
xchg
jnp
push
push
pop
loopne
loop
adc
icebp
mov
imulb
inc
test
jae
dec
cmp
jbe
int3
dec
push
hlt
sub
clc
push
sbb
inc
xchg
xorl
fbstp
dec
pop
push
sbb
mov
std
movsl
cmp
ja
push
lods
or
inc
iret
fcmovb
loop
ljmp
lahf
pop
pop
mov
and
aas
xlat
mov
jbe
ficompl
jge
dec
push
ds
leave
mov
xchg
xor
daa
mov
jmp
push
adc
mov
add
vmwrite
cmp
ret
sti
xor
push
mov
leave
pop
mov
dec
int
xchg
pushf
jl
jge
xchg
test
cwtl
mov
jb
nop
sub
pop
inc
bound
inc
mov
cmpsb
and
dec
lods
enter
aad
shrb
pop
xchg
cltd
daa
aaa
push
mov
push
ret
testb
push
movl
out
ds
xchg
fsts
adc
or
insb
scas
mov
xchg
shrl
jbe
stc
imul
dec
movsl
clc
pop
mov
repnz
orb
out
push
fwait
add
pop
sarl
push
jb
nop
out
inc
je
push
add
movsl
jnp
enter
aam
js
cwtl
mov
ja
xorl
nop
sub
gs
xor
shll
cli
imul
inc
popa
pushl
and
adc
jbe
xor
xchg
lods
jbe
addl
xchg
or
xor
cmpsl
xor
mov
adc
inc
dec
and
notb
sbb
imul
inc
jbe
loope
insl
jmp
push
outsb
fs
sub
int
mov
and
xchg
lret
clc
rcrb
dec
jns
jmp
sbb
pusha
inc
sarl
out
mov
add
aad
sbb
fidivrs
mov
int
jae
and
mov
jmp
test
sub
push
leave
push
push
pop
leave
pop
or
jmp
lea
mov
sbb
sbb
push
ss
stc
xor
xor
xor
dec
iret
push
sub
xor
xor
xchg
mov
or
test
and
js
adc
push
scas
push
and
and
add
push
push
dec
hlt
add
xor
dec
mov
xor
cmpb
push
push
sub
add
aas
push
loope
das
sbb
add
outsb
mov
cltd
popf
adc
imul
pop
push
mov
add
mov
loopne
mov
test
push
loop
mov
in
xchg
stos
dec
jns
lea
inc
cmpl
dec
pushf
push
adc
push
xor
pop
iret
je
sbb
in
jnp
lds
lea
aam
enter
jb
jl
in
add
and
pop
mov
leave
jae
adc
scas
adc
out
mov
ds
ds
daa
pop
and
movsb
mov
pop
insb
mov
das
pop
scas
idivl
popa
push
outsb
mov
sub
insl
jp
xchg
push
push
das
xorb
push
dec
mov
mov
cmpsb
mov
sbb
cmp
sub
push
ds
and
fidivrs
sbb
xchg
shll
movsl
inc
mov
es
fistps
loop
xchg
jmp
dec
flds
scas
mov
mov
or
mov
out
dec
adc
push
insb
pop
lds
movsl
mov
sbb
jo
insb
mov
pop
js
in
add
dec
lahf
lret
mov
xchg
pushf
imul
sbbl
popf
jb
mov
pop
xchg
test
cmp
scas
jo
and
xchg
push
and
inc
adc
aaa
pop
xchg
rcll
pop
xchg
push
push
gs
int3
ret
mov
loop
pop
call
add
test
cwtl
inc
ret
mov
std
or
jg
outsl
push
xchg
std
addr16
scas
mov
pop
pop
pop
xchg
mov
inc
sub
ja
sub
movsl
and
push
inc
arpl
mov
pop
or
scas
push
fwait
mov
es
nop
mul
sbb
xor
or
inc
je
add
int
dec
pop
int
pop
add
sahf
rorb
data16
gs
lret
mov
mov
sti
outsl
dec
stc
push
cmp
dec
jp
inc
lds
out
arpl
idivl
stc
das
popf
mov
fisttpl
xor
repz
jle
pusha
jl
push
dec
lret
inc
fxch
stc
add
or
sahf
pop
or
push
fcoms
pop
subb
fwait
shll
xchg
push
dec
lock
sub
xlat
ret
push
arpl
cmp
xor
inc
imul
pop
in
lds
lds
clc
ret
or
mov
xchg
push
add
insl
fimuls
mov
cmp
and
fs
mov
mov
jnp
inc
fwait
test
rol
popf
push
mov
xchg
fists
aas
adc
loopne
mov
je
push
cld
sbb
fsubrl
out
cmc
or
aad
orb
mov
icebp
push
and
add
fstl
cmp
lods
cld
cmc
loopne
pop
mov
xchg
imul
or
pop
mov
push
iret
ret
dec
jge
cmpsb
xchg
push
dec
and
push
mov
pop
cmc
stc
std
jmp
mov
inc
aad
ds
fld
push
stos
sub
sarb
lret
rolb
push
rorb
cli
imul
mov
mov
flds
or
ficomps
test
xchg
pop
add
mov
je
push
inc
into
aad
aaa
xor
mov
stos
sbb
lods
in
push
bswap
scas
mov
or
adc
mov
lds
xchg
stos
xlat
fldenv
in
push
push
repnz
dec
sbb
popf
es
inc
scas
push
mov
fists
add
pop
sub
mov
xor
insl
mov
loop
jo
jl
rcrl
int3
out
ret
mov
das
add
or
icebp
push
cmp
lods
and
and
mov
cmpsl
sbb
lret
push
pop
std
movsl
mov
inc
and
movl
shrb
pop
jmp
mov
les
imul
pop
out
push
jbe
pop
stos
pusha
pop
popf
add
mov
or
lret
loopne
cwtl
sbb
push
outsb
jmp
fnsave
es
ret
push
dec
pusha
insl
push
or
pop
adc
clc
sbb
push
ss
js
je
push
xchg
mov
cmp
scas
pop
xor
jae
inc
inc
mov
push
xchg
lods
inc
xor
movsl
shrl
mov
add
ret
jnp,pt
jge
aaa
dec
sbb
jbe
push
jns
int
iret
push
jbe
cwtl
js
mov
push
cmp
hlt
int3
inc
popa
lods
jnp
mov
cmpsb
mov
jge
push
and
mov
xor
dec
js
or
inc
fcmovbe
jge
pop
scas
mov
and
hlt
shll
stos
popf
xor
adc
pop
xlat
xchg
inc
test
out
dec
sbb
and
pop
jg
enter
stos
and
pop
xor
cmp
cld
sbb
pop
mov
pop
push
mov
call
sbb
clc
xchg
sti
out
fildl
movsb
stc
hlt
addr16
je
lods
cmpsl
rcrl
mov
inc
call
shll
push
cmp
dec
jb
outsb
xchg
sub
xor
mov
lcall
jno
adc
sahf
stc
psrad
sbb
dec
rorb
sar
cmc
dec
sub
mov
xchg
pop
add
leave
ljmp
ja
pop
push
jo
jb
insb
xchg
mull
xchg
dec
cld
inc
lret
loopne
mov
cmpsb
pop
or
call
das
or
inc
sbb
mov
add
faddl
xchg
sbb
jle
test
enter
pop
fcmovnu
inc
out
sub
mulb
rcrb
stos
loopne
adc
hlt
fdivrl
inc
push
inc
jnp
pop
mov
das
lods
xor
mov
stc
test
mov
cmp
jno
mov
push
ja
mov
jns
in
push
add
subl
jo
push
mov
clc
push
inc
push
dec
jl
enter
sub
jnp
adc
jl
popf
sbb
mov
dec
ret
pop
mov
fcomps
adc
jne
arpl
fs
ja
xchg
fwait
xchg
in
ret
sti
mov
sub
dec
icebp
fidivrl
xlat
inc
inc
lds
mov
xor
fmull
out
popf
decl
jp
and
push
loope
and
movsl
lods
xlat
bound
nop
lahf
imul
and
rcrb
rcrl
sub
mov
sti
xchg
and
mov
cltd
leave
pop
js
bound
insb
pop
add
jge
push
inc
add
fistps
insl
lds
scas
into
pop
fimull
jg
pop
or
mov
xchg
pop
mov
dec
mov
xchg
pop
xchg
adc
call
adc
pop
sahf
xchg
mov
jmp
jecxz
insb
xchg
into
mov
cs
inc
pop
xchg
jge
or
jbe
xor
das
lods
adc
and
icebp
pop
repnz
or
lods
sbb
stos
movhps
xchg
rclb
adc
adc
mov
imul
icebp
hlt
or
in
inc
add
insl
sub
inc
pop
pop
shl
lds
or
sub
pusha
xchg
dec
pop
jecxz
iret
pop
jns
sbbb
insb
jbe
pop
cmpsb
jno
fldenv
enter
scas
repnz
jns
jecxz
pop
adc
out
in
sbb
nop
mov
sub
jmp
xchg
lods
cli
xchg
mov
mov
out
mov
add
adcl
in
pop
adc
push
pop
xchg
packuswb
cwtl
jl
out
andb
std
fmul
adc
rol
shr
jge
cmc
popf
pop
push
sub
mov
pop
add
jmp
xchg
adc
mov
nop
push
add
mov
jbe
push
mov
lds
lock
cmp
push
inc
les
iret
pop
jns
push
hlt
push
push
hlt
sbb
mov
outsb
push
mov
in
loopne
sbb
cmp
lahf
outsb
push
and
sarb
stos
test
cmp
out
lahf
pop
pop
ret
xchg
jle
or
sbb
ficomps
mov
add
mov
fidivs
cld
dec
ja
jnp
shl
or
jle
cmp
aad
fmuls
mov
pop
push
imul
ja
pop
scas
lods
lea
icebp
popl
dec
inc
call
in
jmp
xchg
jl
xchg
je
dec
pop
cmp
pop
aad
int3
lret
outsl
pop
ret
and
push
pop
rorl
in
loopne
addr16
add
orps
mov
push
sub
xor
fwait
jmp
lcall
dec
or
js
mov
call
sahf
jnp
rcll
pop
fmulp
mov
aam
xchg
cmpsl
pop
inc
lret
xchg
cmp
pop
jnp
xchg
push
ret
jg
mov
inc
and
xchg
or
outsb
inc
and
loop
les
loope
and
push
lret
stos
out
xor
out
out
cmp
mov
shr
sbb
lea
arpl
xor
jge
push
add
js
rcll
and
das
add
dec
lock
popa
push
sar
or
dec
dec
pop
push
adc
xlat
ljmp
enter
fmul
sbb
mov
add
and
je
dec
adc
sub
add
dec
pusha
xor
inc
lret
xchg
add
push
es
push
adc
hlt
lret
jae
push
std
or
mov
dec
aad
pop
ja
add
movsb
in
mov
push
lock
popf
adc
lds
adc
aad
sub
cli
imulb
cwtl
repnz
push
jae
test
xor
pop
daa
xchg
push
in
test
insb
mov
dec
iret
mov
xchg
sub
insl
fadd
es
dec
push
mov
or
cmp
fwait
adc
push
push
out
call
stos
xchg
movsl
mov
mov
lcall
scas
jno
dec
sahf
jl
mov
fnstcw
jg
xchg
add
addr16
inc
fs
popa
cwtl
clc
cmp
jg
fwait
push
adc
mov
sbb
push
sbb
movsl
pop
jmp
lret
aaa
add
adc
mov
dec
adc
lea
sti
lret
mov
or
fstl
std
mov
dec
fistps
dec
jo
in
dec
pop
sbb
hlt
push
test
rclb
pushf
mov
insb
dec
mov
test
jbe
adc
lods
mov
add
pushf
mov
inc
xchg
fnsave
mov
pop
push
mov
sub
loope
aad
inc
push
dec
nop
dec
xchg
shll
adc
mov
jl
xor
mov
insb
cmp
jmp
nop
dec
dec
inc
rol
mov
cli
cmp
xor
push
cli
nop
lds
mulb
jnp
cmp
fcmovnbe
lods
push
mov
push
ret
nop
inc
into
test
mov
inc
jp
and
fstpl
push
or
sarb
mov
rcrb
push
in
sbb
subb
pop
pop
out
cmp
fdivrp
cmpb
stos
fists
fdivrs
js
mov
xor
sbb
xchg
sbb
and
popa
xchg
jp
in
imul
jae
out
pop
add
push
inc
cmp
pusha
add
mov
adcb
int
bound
inc
clc
xchg
int3
std
lds
or
xor
or
jb
filds
push
daa
les
or
lds
dec
repnz
movsb
aas
andl
icebp
adc
jl
lret
xchg
mov
pop
jmp
lret
out
nop
arpl
ljmp
mov
out
sbb
or
loop
testb
sub
into
fildll
ja
pop
mov
mov
in
popa
in
inc
sub
jg
fdiv
inc
gs
imul
repz
ret
jmp
ss
cmp
jno
rcll
sahf
daa
scas
fstpt
mov
dec
jge
push
mov
mov
test
or
aas
pusha
sahf
mov
mov
cmpb
dec
movsl
fiadds
inc
into
stos
jo
xchg
out
jle
in
xchg
pop
test
lods
aaa
jno
xchg
subb
jne
daa
jl
add
cmpsl
test
mov
jle
aaa
inc
dec
lcall
and
test
int
inc
inc
jg
xchg
in
inc
mov
cltd
cli
add
lcall
push
ss
pop
shlb
movsb
push
movl
cmp
inc
sarb
bound
mov
jne
lock
les
push
sarb
pop
and
mov
xchg
and
pop
ret
or
cs
push
ja
jno
das
ds
leave
dec
lcall
cwtl
les
js
jo
push
add
adc
add
nop
aas
cmp
outsb
sub
or
inc
cwtl
ds
mov
mov
xchg
sahf
or
popl
pusha
mov
sub
cmp
mov
mov
mov
sarl
hlt
pop
arpl
repz
cmpsb
cmc
xchg
xchg
xor
jbe
out
gs
xchg
popa
bound
mov
rclb
sahf
dec
int3
add
test
jns
jae
dec
rorb
shr
pop
icebp
jge
shrl
lret
xchg
lcall
mov
in
ficompl
mov
in
sub
inc
mov
and
push
push
xor
movsb
push
lea
adc
and
in
imul
outsl
stos
ds
xor
add
push
fcoml
or
mov
mov
xchg
inc
pushf
adc
xchg
add
sbb
push
sbb
mov
fs
lods
lock
dec
sbb
js
lea
jo
add
dec
mov
filds
shlb
jae
xlat
fiadds
xor
inc
or
sbb
cli
or
mov
sub
aad
lods
jl
movsb
popa
inc
lret
pop
fimuls
lods
inc
adc
pop
cmpxchg8b
mov
or
sub
cmp
mov
jg
lock
in
in
add
mov
scas
fcompl
mov
nop
mov
xor
lret
sub
mov
xlat
cs
ret
or
insb
inc
mov
mov
and
andl
insb
adc
xchg
xor
adc
jge
imul
stos
xorl
cmp
xor
mov
imul
mov
jg
mov
cmpsb
leave
cmp
andl
mov
dec
pop
aaa
sub
jle
xor
or
push
add
mov
lret
sub
push
cmp
rcrl
sarb
mov
int
arpl
mov
inc
sbbb
pop
mov
xchg
lock
out
mov
mov
pop
mov
pop
cmovnp
push
pop
ljmp
fbld
fadd
pop
enter
add
test
pop
dec
std
aad
arpl
ret
push
inc
sub
rcrb
les
movsl
push
das
daa
daa
aad
cmp
mov
push
add
inc
lahf
adc
in
or
les
push
pop
cmp
aam
xorb
int3
loope
fwait
add
inc
stos
xor
aad
movzbl
jno
mov
sahf
mov
xchg
pop
jle
add
push
adc
mov
push
jmp
sarl
icebp
icebp
in
add
mov
xchg
jp
popa
movsl
sti
nop
hlt
xor
and
fidivs
or
inc
jp
push
xor
insb
ds
lea
xchg
sbb
sbb
daa
adcb
inc
cmp
clc
test
movsb
jo
add
sbbb
daa
and
adc
mov
cmc
lods
les
adc
xchg
xchg
inc
add
insb
push
xchg
out
push
jbe
or
xlat
xchg
mov
xchg
sbb
sbb
xor
loopne
loop
sbb
jno
les
push
adc
push
inc
dec
call
jns
inc
adc
push
xchg
outsb
or
adcl
xchg
pop
push
sbb
das
pushf
cmc
in
adc
jmp
movsb
xor
xor
cmp
mov
inc
mov
xchg
aad
xor
roll
arpl
leave
sti
stc
lods
hlt
out
test
data16
jp
sbb
loopne
and
adc
ret
test
mov
cs
js
push
int
daa
and
in
aaa
cwtl
jle
mov
flds
push
pop
mov
dec
out
mov
inc
roll
sti
add
ja
int3
sub
sub
dec
sub
xchg
mov
popf
mov
insl
or
push
xchg
or
mov
mov
pop
adcb
dec
jge
xchg
pop
bound
mov
lcall
add
pop
push
add
push
in
hlt
or
je
sahf
stos
dec
mov
insb
or
shll
add
xchg
sbb
jecxz
neg
test
add
sub
leave
sub
dec
fists
pop
std
xor
push
es
push
cmp
pushf
jmp
ret
js
shll
leave
insl
push
sub
fbld
pop
push
and
xor
andl
mov
iret
and
pop
int
push
push
or
xor
mov
add
or
cmp
cltd
jmp
aam
in
mov
xor
sub
inc
out
call
mov
gs
mov
cwtl
mov
in
arpl
js
mov
and
fs
and
in
leave
pop
mov
adc
sbb
loopne
mov
pusha
imul
and
and
cltd
cmpsl
outsb
mov
inc
ss
mov
xor
dec
and
xchg
xchg
xchg
lods
mov
mov
pushf
mov
adc
inc
jle
xchg
mov
pop
or
jg
in
mov
loopne
lock
cltd
inc
movsl
dec
bound
leave
sbb
jne
add
test
jge
sub
sahf
or
pop
stos
mov
jnp
or
mov
test
inc
push
push
imul
mov
add
push
inc
lods
cmp
rcrb
xor
insl
jnp
inc
push
fstpl
add
jae
dec
std
movsl
fwait
subb
outsl
cs
mov
ret
push
adc
mov
mov
dec
pop
adc
inc
rorl
dec
push
lcall
insb
jb
cwtl
rcrb
mov
sbb
xchg
mov
outsb
xchg
sti
movntps
sbb
test
cmp
pop
ja
jno
mov
adc
jno
test
scas
and
jge
jl
lret
and
mov
pop
stos
mov
int
jae
loop
imul
mov
cli
adc
test
xchg
push
pop
aam
and
sbbl
out
xchg
imul
repz
mov
rcrl
movb
push
or
mov
mov
fwait
mov
adc
ficomps
jp
pop
push
pop
rcl
ja
or
mov
sub
or
jle
push
and
dec
sti
daa
and
sbbl
nop
sub
dec
jns
arpl
or
jae
pushf
das
stc
and
push
outsb
fisubrs
cwtl
pusha
mov
addr16
push
mov
js
ss
popf
fistps
inc
js
lret
mov
data16
pop
jecxz
gs
mov
hlt
sbbb
fidivl
xchg
ss
and
faddl
dec
addr16
add
xor
cmpsb
cmp
pop
mov
lods
dec
mov
loopne
jg
repnz
mov
or
lock
lea
mov
xor
push
adc
dec
movsb
stc
fs
jb
mov
loop
jmp
inc
insl
xchg
or
daa
and
or
inc
pop
stos
incb
mov
sbb
jne
sbb
std
adc
ja
arpl
dec
in
adc
xor
mov
sub
pop
movsb
jmp
fcomps
fnstcw
adc
add
fisttpl
iret
push
data16
xchg
or
outsb
js
pop
ljmp
test
leave
in
mov
and
ss
pop
int
pop
and
ret
dec
lods
inc
and
mov
xchg
sbbb
push
xchg
inc
add
int3
loope
inc
in
mov
repnz
inc
mov
iret
shlb
and
cmpsl
jecxz
pop
jecxz
fcoml
movsl
inc
sub
insl
xchg
adc
mov
mov
loop
jno
cmp
fnstsw
fadd
or
arpl
sub
inc
lcall
lcall
adc
movb
imul
mov
ds
test
inc
jo
sub
leave
push
pop
add
mov
mov
adc
stos
push
ljmp
pop
jp
mov
mov
sahf
mov
sbb
mov
test
fildl
pop
outsl
adc
movb
into
xchg
out
pop
inc
xor
aam
ror
dec
sbb
inc
mov
jmp
add
std
xchg
pop
popa
scas
out
xor
cli
mov
pop
call
pop
ret
jb
mov
mov
sub
pushf
add
mov
dec
pop
notb
arpl
aad
lods
xchg
bound
jns
xor
mov
lahf
mov
and
mov
loopne
inc
jp
mov
push
xor
pop
jns
bound
jb
mov
jb
jo
mov
mov
fbld
jne
push
jle
int3
int3
fcoms
inc
std
shrl
or
xor
gs
shrl
pop
push
aaa
fcmovnb
xchg
adc
loope
iret
push
xlat
rcr
adc
mov
dec
cmpsb
testl
sbb
adc
pop
sbb
xor
andb
mov
push
inc
pop
scas
outsb
call
or
jle
add
rcrl
cmp
sbb
test
and
jae
jge
mov
mov
adc
fmuls
sbbl
mov
mov
adc
mull
cltd
cmovo
push
pop
xchg
jg
stos
nop
or
or
sub
pusha
jle
cmp
hlt
mov
or
dec
push
jno
push
mov
ds
pushf
dec
jb
dec
out
insl
shrb
test
push
dec
xor
stc
or
lods
int
push
lock
xor
sub
popf
aad
adc
insb
sarb
fildll
jg
dec
ja
jmp
or
insb
lea
sub
inc
xchg
pop
push
sbb
push
xor
lds
jecxz
stos
pusha
jl
fucomp
aaa
adc
dec
mov
loop
out
jbe
cwtl
rclb
in
adc
in
pop
js
clc
mov
xchg
adcl
mov
xor
add
cmp
xor
aaa
mov
or
dec
insb
dec
test
and
mov
xchg
sub
pop
aas
jns
push
je
xor
sub
xchg
adc
mov
leave
mov
clc
ljmp
cltd
out
jne
into
add
lods
mov
push
sub
jb
loope
in
js
outsb
iret
lret
lods
mov
or
ret
sbb
push
ret
cld
ffree
push
push
cld
fistl
mulb
fistpl
std
shll
and
iret
sbb
lret
inc
sub
insl
out
mov
xchg
insb
sbb
sub
pop
ja
data16
je
adc
fsubl
outsb
cmc
or
xchg
jmp
outsl
jbe
lahf
push
xor
js
xchg
lahf
mov
or
movups
mov
je
xor
fmuls
loopne
jg
xchg
fstl
in
sub
imul
jne
test
pop
adc
pop
xchg
lcall
addr16
push
dec
insl
ljmp
jmp
pushf
push
addl
adc
cwtl
add
add
lods
test
jno
add
push
in
scas
loope
jnp
adc
xchg
jne
rcl
sub
dec
adc
test
test
cs
sbb
push
movsb
jb
fnsave
andl
push
xlat
jae
xor
test
rorl
or
sub
rcr
push
mov
mov
mov
std
xchg
rcrb
mov
fdivrl
push
mov
jmp
jmp
ficomps
inc
clc
xor
popf
in
rcr
cmpsb
call
leave
loopne
dec
xchg
sarl
inc
adc
push
inc
pop
mov
fnstsw
adc
mov
mov
add
xorb
or
sbb
adc
push
and
daa
cwtl
insl
dec
pop
aad
push
push
push
cmp
lds
daa
push
fidivl
dec
pop
adc
shl
pop
es
mov
pop
mov
popf
outsl
mov
test
fdivl
pop
cwtd
pushf
mov
adc
lea
ljmp
addl
sub
lock
mov
cmp
cwtl
enter
ds
outsb
loopne
rcr
or
or
js
add
je
add
mov
rcr
pop
jne
in
push
push
es
das
jne
xchg
inc
mov
aaa
push
push
pop
inc
dec
mov
leave
outsl
fwait
lds
adc
scas
ja
sarb
adc
daa
sbb
aad
and
dec
inc
sub
test
aam
mov
sub
nop
pop
sub
pop
push
inc
repnz
loopne
addl
adc
mov
sbb
addl
adc
ds
mov
push
lds
and
or
sub
mov
jb
xor
fistl
adc
push
pop
push
xchg
lahf
mov
xchg
mov
jg
or
divb
add
daa
inc
cmp
mov
fs
mov
pop
or
mov
sbb
mov
mov
inc
ffreep
and
push
adc
jmp
lods
dec
xchg
in
or
test
lods
jns
mov
or
pusha
repz
cltd
jae
sbb
sbb
push
push
dec
mov
sub
mov
cmpsl
push
xor
imul
xor
sti
outsl
jle
shrb
insb
cld
sub
pop
cmp
mov
add
cwtl
xor
fadds
or
and
push
push
call
shrd
dec
sbb
je
mul
mov
xor
sbb
cmpsl
ja
test
adc
xor
test
fs
sub
int3
mov
mov
fisttps
jp
das
rol
or
xor
popa
adc
into
push
test
faddl
inc
push
add
xor
jnp
sub
dec
xor
sub
push
or
push
mov
insl
out
fnsave
push
jle
mov
pop
mov
repz
lret
sub
sub
out
xor
mov
xchg
pop
sbb
in
mov
and
hlt
push
xorl
cmp
ret
pop
lock
push
loope
aas
pop
dec
pop
rolb
dec
xchg
adc
sarl
decb
pop
mov
daa
lret
xor
loope
bound
xchg
shlb
xchg
outsb
push
add
enter
insb
pop
or
push
pop
inc
xchg
mov
mov
rcrl
inc
sub
les
stos
rol
mov
loop
xor
jnp
orl
dec
aad
mov
lock
jne
pop
jnp
and
clc
cld
aas
pop
xchg
nop
push
ja
mov
push
mov
repnz
jl
loopne
mov
pop
divps
cmp
adc
pusha
or
js
fwait
jbe
adc
cmpsb
scas
aam
inc
add
andl
pop
xlat
sahf
pop
jne
sbbl
lock
adc
hlt
inc
add
sub
xchg
cmp
mov
out
into
xchg
pop
mov
mov
mov
sbb
fbstp
dec
jns
int
aaa
pop
sbb
fisubrl
ljmp
pop
andl
cmp
hlt
popf
xchg
jp
jnp
fwait
out
testl
ficomps
sbb
sbb
inc
mov
inc
sub
ficoms
insb
jg
lcall
bound
xchg
add
insb
xchg
rcrl
into
push
or
in
inc
cmpsb
pusha
mov
inc
xchg
mov
pushl
fisttpll
cmpsb
pop
test
sub
pusha
fsubrs
mov
outsl
xchg
mov
in
inc
lcall
rcrl
adc
dec
pop
mov
subl
fdiv
int
jae
xchg
cmp
add
add
mov
nop
lock
movsb
lret
jno
dec
out
pop
inc
jle
inc
leave
inc
movsl
add
add
in
rcr
movsb
std
sub
xchg
mov
aas
add
sub
inc
sbb
jb
add
repz
mov
xchg
fisttpl
lea
ss
jge
test
push
out
fmul
js
lret
push
jge
cwtl
repz
out
in
and
and
mov
imul
aas
jle
std
sub
loope
popa
cs
scas
push
cmp
data16
inc
xchg
fs
in
int
or
and
sbb
sbb
leave
adc
xor
cmpsl
xor
cmc
adc
mov
and
lods
sbb
mov
push
out
repz
stos
jmp
lds
pop
adcl
inc
adc
imul
inc
xor
jno
in
repnz
dec
cmp
pushf
and
and
xlat
fisubs
xlat
pop
and
ret
out
es
mov
add
jg
rol
fcoml
inc
and
test
push
fadd
mov
dec
xor
sarb
mov
pusha
or
push
stc
leave
subl
ret
xlat
dec
cmp
mov
xor
xor
cmp
xchg
mov
stos
xchg
ss
shlb
xor
mov
mov
cmp
or
and
out
aaa
or
mov
mov
lods
sbb
in
pusha
cltd
pusha
cmp
into
nop
and
in
cmp
mov
mov
jmp
inc
cmp
pop
dec
add
movb
cmpsl
scas
mov
push
repz
jbe
pop
xor
jbe
lahf
fisttpl
jbe
pop
inc
lahf
add
xchg
jne
js
jns
gs
mov
xchg
xor
pushf
xor
in
mov
xorb
scas
ja
mov
xchg
out
shl
pop
cwtl
xchg
mov
adc
mov
push
cmc
sbbb
sub
xor
movsb
xlat
les
mov
out
cmpl
sbb
push
dec
inc
mov
js
int
pop
mov
sbb
gs
mov
mov
fsubr
sbb
pop
and
fsubrl
xlat
das
pushf
pop
pop
adc
es
cmp
pushf
mov
loopne
data16
mov
sti
pushf
ljmp
fstpl
icebp
aad
sbb
pop
xchg
daa
mov
mov
orl
pop
or
adc
decb
mov
fsubrs
mov
roll
nop
inc
or
shll
mul
xor
cltd
rorl
scas
mov
dec
adc
aam
cmp
adc
ret
mov
subb
ss
sarl
xchg
shrl
popf
mov
jg
clc
pop
and
dec
into
inc
mov
cmp
dec
mov
pop
inc
sbb
aad
ja
cs
les
xchg
mov
lret
shl
jg
adc
and
loop,pn
pop
or
ljmp
or
call
jl
dec
pop
jl
xchg
pushf
repz
pop
add
movsl
fldenv
xchg
cwtl
or
jne
lock
insb
mov
rorl
fldcw
dec
mov
inc
aaa
adc
pusha
push
jnp
cltd
outsl
mov
fimull
dec
jg
cltd
inc
in
or
or
js
orb
xor
lea
pop
jb
pusha
jmp
jg
or
push
popa
xor
rcll
push
xor
jae
xor
push
cwtl
mov
fcompl
jbe
fwait
mov
pop
cld
jne
aas
data16
mov
or
xor
test
cmovnp
mov
add
popf
aad
mov
pop
xchg
mov
xchg
push
cmp
and
popf
stc
add
jae
pop
jle
test
dec
mov
sbb
cmpxchg
inc
cmp
sbbb
or
in
negb
pop
imulb
les
jl
mov
in
lods
cmp
vmaxsd
nop
lods
adc
inc
jb
outsl
out
xchg
cmpsb
jns
insb
jns
ljmp
xor
xchg
pusha
das
adc
rcrb
pop
sub
and
sarl
test
jmp
push
xchg
jmp
enter
add
data16
pop
cmpsl
cwtl
mov
dec
fnsave
lahf
push
mov
cli
xchg
jecxz
mov
cltd
or
xor
push
aad
xchg
inc
jo
fwait
daa
test
xor
cmp
iret
mov
mov
inc
jl
andb
repnz
scas
mov
int
pop
jb
and
roll
dec
push
xor
xchg
cli
dec
repz
jge
jne
cmpsl
pop
rol
add
in
mov
mov
dec
push
mov
adc
out
mov
loop
or
out
jae
cld
adc
inc
or
cli
sbb
sahf
inc
inc
jecxz
and
push
dec
mov
push
cmc
inc
cmp
mov
push
push
xor
in
and
inc
dec
in
mov
mov
out
lods
and
cmp
gs
jbe
icebp
inc
ret
outsl
xlat
cmp
push
push
sbb
psllq
lahf
lods
jmp
mov
repz
out
sbb
sarl
and
mov
or
inc
test
nop
jno
mov
mov
in
lods
sar
xor
mov
sqrtps
dec
lret
aad
es
dec
gs
out
inc
lahf
xlat
bound
sub
jl
clc
mov
push
push
add
push
cwtl
cmpsl
inc
stc
rcl
scas
in
pop
dec
insl
fldenv
xor
lock
lret
add
mov
lods
mov
out
push
cmp
jp
add
sub
push
push
test
sub
shll
mov
pushf
mov
scas
or
pop
add
ljmp
aaa
fistpl
test
sbb
mov
lret
dec
sub
rcrl
aaa
out
out
dec
mov
pop
mov
sahf
scas
adc
and
mov
mov
lock
std
adc
aas
ret
lret
lret
dec
popa
les
sbb
and
in
mov
mov
mov
mov
mov
mov
push
icebp
out
dec
adc
lahf
adc
or
sub
mov
jbe
mov
dec
or
xor
pop
sub
vcomisd
pop
xchg
rorl
push
shrb
inc
xor
imul
in
jp
push
fimull
aaa
mov
xor
std
fldl
push
outsb
xchg
xchg
cmpsl
das
jecxz
mov
test
dec
outsl
mov
sbb
lea
repz
xchg
iret
out
xchg
push
xchg
dec
out
stos
push
xchg
jmp
dec
ss
jns
fbld
cmp
push
jo
imul
aaa
sub
cmpsl
jle
sub
mov
aad
pop
fmulp
dec
lret
popa
stc
mov
je
pushf
mov
jno
cmpsl
push
testb
inc
test
js
or
out
ja
jge
or
fldcw
or
stos
hlt
xchg
out
pop
stc
jmp
rol
jl
sbb
dec
mov
push
cmpsb
out
pop
es
cld
outsl
mov
push
aam
jp
xchg
push
ror
stos
or
dec
mov
rorl
loop
addr16
push
xchg
inc
cmp
fisubrs
adc
movl
stos
int3
clc
scas
jne
adc
mov
mov
push
or
repz
adc
imul
ret
jl
mov
test
pop
jnp
lret
call
sbb
mov
loope
cwtl
mov
shrb
and
scas
call
es
pop
lock
pop
xchg
xchg
inc
insl
sub
aam
cmpb
cli
pop
ja
inc
mov
xchg
jmp
adc
push
lret
and
fsubrs
aad
inc
clc
int3
int3
push
popf
shr
sub
cmpsl
cmp
xchg
addl
add
cs
aad
js
ja
adc
aaa
mov
pop
sbbl
in
mov
sbbl
stc
sub
mov
push
push
add
outsl
mov
inc
push
push
jle
in
jae
int3
stos
enter
cmp
mov
lock
pop
push
fisttpll
push
pop
iret
xor
mov
lods
les
xchg
stos
sbb
lret
jb
cmpl
aad
mov
int3
jmp
jne
jne
pop
shr
test
cmp
cmpsl
sub
or
lea
add
aad
ljmp
xchg
push
sub
out
leave
xchg
mov
mov
xor
mov
pop
stos
push
add
lret
int
out
adc
dec
in
rorl
sbb
sub
dec
jecxz
enter
mov
mov
sbb
inc
pushf
sbb
es
outsl
repz
icebp
jnp
pusha
fsts
push
sbb
push
xor
int3
ss
aas
das
int3
ret
ret
fcomip
into
repnz
loope
cmpl
insl
test
sarb
inc
ja
es
push
in
dec
mov
fildl
mov
es
fisttpll
jmp
push
int3
mov
and
aam
sub
pop
stos
or
test
sahf
scas
xchg
sub
pop
sbb
cs
mov
ds
dec
mov
arpl
cmpsb
inc
mov
lcall
mov
cs
and
cld
cmp
fadd
pop
push
pop
mov
pop
pop
dec
fnstcw
sbb
adc
inc
shr
jp
push
sub
cmp
subb
add
cwtl
and
jo
das
or
filds
sbb
add
jp
dec
push
insl
mov
scas
pop
push
sahf
ss
lret
or
testb
push
push
fildll
pop
aaa
jl
test
adc
lods
pushf
add
mov
lret
sbb
mov
es
iret
fbstp
call
ret
out
jle
outsb
fst
push
sbb
outsl
lock
ss
jb
xchg
cltd
jns
pop
dec
push
or
imul
jecxz
addr16
lea
dec
lods
test
fstpl
outsb
jo
push
in
lods
add
inc
and
loop
in
jge
cmp
xor
dec
ja
mov
fnstcw
fstl
fldcw
shl
mov
dec
push
push
cmp
jns
pop
lret
dec
pop
mov
stc
xchg
inc
in
pop
sbb
loop
lods
je
fwait
jae
mov
repnz
jl
mov
xchg
call
mov
dec
pcmpgtw
adc
pop
ljmp
pushl
xor
lcall
jne
inc
mov
shlb
cmp
imul
and
cmp
push
addb
push
icebp
mov
jl
add
addr16
sub
add
jmp
fs
lds
push
das
mov
icebp
mov
fsts
bound
nop
sbb
push
cmp
pop
cld
adc
push
push
je
outsl
mov
cmp
jp
fsubl
adc
mov
xchg
movsl
ret
jmp
mov
std
pop
shll
xor
or
cmp
push
inc
dec
mov
test
or
mov
mov
mov
sub
xor
jp
jae
mov
xchg
scas
mov
or
jo
or
dec
or
push
fcompl
or
xor
rorl
fwait
mov
outsl
add
out
mov
xor
fistps
adc
sub
pop
iret
outsb
es
inc
repnz
mov
push
add
pop
mov
es
cmpb
outsb
xchg
ret
std
ss
cmc
push
lock
dec
adc
jb
cmp
nop
mov
lcall
sub
bound
cltd
enter
or
fwait
sbb
dec
loope
jbe
imul
dec
pop
lret
lcall
cli
lods
sbb
push
sbb
insb
pop
iret
dec
jge
xor
or
pop
jb
adc
mov
pop
js
mov
mov
loop
scas
test
stc
rcrb
mov
xor
out
sbb
dec
pop
pcmpgtw
repnz
mov
lods
add
aad
ss
lret
loopne
xchg
fstl
lock
in
jg
cld
idiv
jge
loopne
aad
pusha
mov
mov
test
xchg
sub
or
in
pop
outsl
and
scas
nop
add
jge
rcll
xor
test
mov
ljmp
push
sbb
testl
xchg
fsts
mov
push
popf
push
xchg
stc
jns
insb
mov
sbb
mov
jp
stos
clc
inc
fstpl
xchg
shll
jge
mov
scas
fildl
test
aaa
insb
or
mov
pop
movsl
std
les
cli
push
fiaddl
stos
popl
sbb
out
lcall
sbbb
dec
sahf
mov
xlat
rorl
sbb
adc
jmp
pop
push
adc
sbb
push
sub
and
and
sbb
xchg
add
mov
xchg
loop
sub
mov
into
xchg
clc
jns
lret
mov
inc
push
xchg
es
xchg
xchg
inc
fst
bound
xor
mov
cmpsb
sbb
leave
add
jp
or
pop
into
fidivs
int
jge
pop
insl
sub
fsubs
arpl
and
sbb
adc
fnsave
add
mov
sti
adc
daa
or
aas
adc
rcll
and
sub
dec
sub
xor
ret
mov
shrb
je
clc
in
pusha
cmp
mov
xchg
imul
mov
xchg
sbb
fcoms
or
push
jbe
ljmp
fmull
sti
test
bound
divl
stc
add
pop
push
cli
or
sbb
in
jl
or
adc
mov
or
leave
loopne
aam
daa
mov
adc
xchg
sbb
push
aam
fs
insb
mov
sbbl
xchg
sub
sub
mov
sub
pop
adc
dec
jb
loope
shll
push
cmp
hlt
addr16
fcom
popa
mov
es
lahf
mov
outsb
ja
inc
and
mov
bound
lock
mov
mov
push
mov
sti
push
push
ss
xor
outsb
es
repnz
dec
pop
loope
mov
hlt
sarl
in
fs
loop
das
sub
sbb
adc
push
jmp
arpl
adc
jp
sbb
icebp
mov
jnp
adc
and
push
sub
lahf
mov
xchg
lock
jmp
fnstcw
lahf
jb
add
aam
cmc
cmp
pop
daa
add
xlat
lods
inc
xchg
ljmp
iret
mov
lods
pop
stos
sub
push
aaa
sub
pop
rorb
pop
ss
sbb
dec
sbb
jecxz
lock
inc
outsb
xchg
sbb
xchg
push
out
sub
icebp
gs
clc
mov
mov
jo
sarb
mov
sbb
out
inc
mov
adc
jecxz
jnp
leave
enter
adc
inc
push
jmp
int
mov
call
pop
sub
mov
jge
popa
or
test
mov
mov
nop
mov
push
adc
xchg
mov
pop
ficoml
imul
std
inc
mov
push
jae
xor
mov
pop
or
jnp
mov
shrb
inc
enter
out
es
es
test
mov
mov
pop
xchg
jg
lret
imull
dec
mov
addr16
mov
pop
fsubl
pop
jne
mov
mov
popf
cmp
add
arpl
inc
inc
loop
mov
andl
xchg
in
jmp
cmpsl
pop
jle
or
lahf
add
add
jno
enter
fld
inc
sbb
lcall
dec
dec
mov
jnp
fistpll
and
sbb
jp
ljmp
dec
sub
xchg
sub
das
shll
lods
lods
jns
mov
jl
mov
dec
xchg
pop
ficoml
xchg
hlt
mov
ss
ret
shl
jmp
adc
cmp
mov
fisttps
cwtl
movsl
data16
shll
cmp
in
or
icebp
cs
xchg
pop
inc
dec
jecxz
sbb
gs
mov
dec
fcmovne
push
mov
lahf
xchg
sub
ficompl
mov
inc
pop
test
push
push
mov
xor
mov
aaa
aad
add
cmp
jne
dec
mov
jne
and
dec
addl
mov
dec
mov
stc
mov
prefetch
or
hlt
icebp
ljmp
inc
mov
fwait
packsswb
lcall
mov
or
mov
jno
fcomps
loopne
jb
das
add
pop
dec
dec
cmp
pop
stc
sbb
cld
xor
lods
fdivr
pop
push
ss
push
add
fstp
lahf
pop
pop
lret
inc
rorb
mov
cmp
fcomps
sub
mov
jp
and
and
mov
xchg
fstpt
cmp
pop
pop
mov
lods
imul
xchg
sbb
into
xor
add
hlt
les
js
ss
xchg
stos
push
push
pop
pop
repz
push
minps
sub
fs
push
in
cmpsl
ret
or
add
push
jecxz
aad
inc
out
jno,pt
lret
fcmove
xor
in
push
mov
xchg
shlb
pop
call
mov
lods
cs
sub
dec
imul
xchg
shlb
pop
enter
fisubl
push
scas
cmc
rorb
sbb
fcomps
push
mov
je
sub
pushf
fadds
adc
sbb
push
popf
pop
lock
fcompl
xor
fidivl
pop
push
xchg
jecxz
sbb
into
mov
or
out
ds
ret
dec
jmp
ja
repnz
pop
xchg
or
push
es
push
repnz
daa
loopne
es
jg
sti
add
add
setle
add
call
xor
enter
xchg
mov
xchg
out
fadds
cmpsl
adc
fmulp
negl
lods
shlb
or
sbb
dec
lods
sbb
inc
xor
inc
fcmovne
mov
in
push
pop
das
push
insb
jecxz
pop
push
fidivrl
pop
push
xlat
stc
fcoml
loop
xchg
test
cmpsl
cmc
or
adc
xchg
add
dec
clc
imul
test
xor
test
pop
jl
xor
dec
mov
push
cmc
shrl
add
imul
fstpt
lods
push
pop
sub
jae
mov
nop
cwtl
sub
fisubl
push
mov
mov
push
lcall
icebp
mov
ficompl
cmp
jns
xor
inc
mov
dec
xlat
fwait
aaa
aad
and
andb
jbe
sbb
inc
es
sbb
repz
adc
sahf
push
into
pusha
and
stc
mov
test
test
add
loopne
or
fs
jp
sub
cltd
jbe
pop
jp
lock
mov
sbb
ss
sbb
gs
aam
in
shll
imul
js
cmpb
inc
fcmove
add
sub
cmp
js
dec
push
stc
call
inc
xchg
repz
cmp
pop
mov
aad
int3
sbb
pop
lock
leave
xchg
mov
push
rcrb
aas
pop
sub
or
mov
scas
les
gs
in
jp
call
js
adc
push
fwait
lock
inc
jle
test
mov
add
jns
cltd
add
sbb
xchg
jle
in
test
repz
imul
cli
push
out
mov
enter
cmpsl
scas
cmc
loope
es
fcompl
mov
out
cmp
orl
in
mov
repnz
mov
lds
inc
pop
stos
aad
cmc
icebp
out
lods
pop
aam
inc
cmp
subb
decb
or
add
shrb
data16
sahf
pop
std
push
push
dec
int3
jl
sti
adc
push
mov
fwait
dec
and
inc
xor
mov
or
mov
ficompl
push
aas
sub
mov
pop
je
cwtl
mov
test
repnz
test
cmpsl
sub
fildl
outsb
out
addr16
jg
mov
pop
xor
daa
and
out
push
cld
movsb
cmp
xor
pop
sbb
lahf
or
cmp
pop
stos
mov
jbe
daa
xor
ljmp
movsb
mov
push
and
sbb
aaa
pop
mov
movl
push
out
cld
out
jp
daa
les
push
in
sbb
daa
push
mov
jne
bound
leave
pop
or
out
fisttpll
xchg
ficomps
insb
cmp
iret
enter
inc
push
in
jnp
push
xor
scas
push
push
test
adc
outsb
xchg
mov
aas
xchg
mov
adc
gs
imul
mov
repz
imul
xchg
lret
sbb
cs
ffreep
pop
lahf
add
add
adc
pop
test
lret
push
push
mov
push
sbb
popf
mov
adc
aaa
inc
or
jns
xor
pop
or
insl
aam
xchg
aad
mov
push
or
rorl
and
ja
mov
mov
ljmp
pushf
out
in
xor
push
fisubrs
push
lret
enter
sub
push
leave
inc
out
in
ja
cltd
xor
jmp
push
pusha
add
pavgw
jne
sahf
and
pop
mov
imul
or
sbbb
fs
sahf
mov
mov
inc
jmp
outsl
sti
push
push
out
sahf
inc
lods
sub
mov
push
pop
jb
mov
push
leave
fmulp
or
cmpsb
lret
popf
repz
sub
xor
dec
dec
insl
in
mov
stos
clc
sahf
cmp
adc
das
mov
arpl
sbb
mov
sub
inc
push
sahf
push
push
out
push
sub
dec
test
inc
jne
xchg
push
cmp
push
lods
stos
nop
add
lret
dec
cmp
xor
out
cmp
jnp
movsl
loope
imul
movsb
lret
mov
test
mov
movsb
cltd
out
aaa
ffreep
pusha
nopl
ljmp
cmp
push
and
jmp
pop
stos
les
inc
and
mov
in
push
xchg
or
mov
jno
js
int3
loop
push
or
lods
dec
dec
lods
sub
inc
sub
movsb
mov
push
pushf
dec
jae
jnp
nop
sarl
mov
xchg
shrb
inc
dec
pop
les
mov
fsubrp
cmp
jge
andb
inc
push
ret
and
loope
into
pop
xlat
pop
cmp
lret
gs
and
fs
inc
addr16
dec
movsbl
cmc
leave
repnz
sti
pop
jno
adc
testb
rol
inc
dec
movsl
xchg
fsubrs
mov
std
movsb
rcl
add
push
or
xor
push
xchg
es
pop
test
call
mov
imul
scas
dec
pusha
test
mov
push
fidivrs
pop
dec
leave
push
sub
popa
add
aas
shr
out
jns
add
cmp
ljmp
jmp
aaa
sbb
or
stos
out
inc
gs
push
cmp
or
lret
lods
cmp
xchg
cmpsb
ss
fnstsw
sbb
clc
mov
inc
lcall
dec
fs
or
stos
lcall
out
dec
push
loop
imul
loope
xor
and
roll
cmp
gs
dec
xchg
fstpt
jle
lcall
testb
jge
dec
push
xchg
add
mov
sub
pop
adc
pop
fidivl
stos
jns
jg
mov
xor
pop
lret
mov
lea
mov
push
test
or
xchg
jmp
sbb
das
xchg
and
in
add
clc
in
push
fadds
popa
mov
pop
js
xchg
call
dec
fldcw
sti
jo
sub
gs
push
sub
sbb
pop
xor
xchg
bound
sbb
mov
iret
rorb
out
jge
xor
pop
sbb
mov
add
out
mov
add
jl
popa
jle
shl
lea
dec
pop
data16
sti
dec
fadds
add
mov
lds
inc
out
xor
pop
xor
pushf
pushf
fimuls
mov
out
out
addr16
inc
pushf
daa
pop
hlt
sbb
push
sbb
lds
test
out
dec
jle
jne
ja
sub
jecxz
sarb
pop
mov
push
pop
imulb
ds
jnp
mov
adc
clc
ljmp
jp
out
mov
shrl
out
jo,pn
push
test
call
cmpsl
mov
xor
or
enter
xor
sbb
imull
push
idivl
inc
push
repz
xchg
inc
rcrl
sub
sub
call
arpl
xor
mov
shll
test
xlat
popa
clc
aam
insl
push
mov
in
nop
inc
in
je
stc
int
and
ja
lods
adc
mov
shrl
dec
mov
sub
shlb
int3
insl
ja
sub
cwtl
dec
push
shlb
sub
lock
add
push
out
in
dec
test
inc
popa
out
in
mov
sbb
fimuls
push
outsl
scas
add
xchg
rclb
push
mov
or
ss
out
dec
enter
dec
push
adcl
pop
push
cmp
pop
xlat
or
pop
mov
test
fbstp
arpl
mov
jnp
jg
aad
jge
dec
mov
jl
mov
ret
jmp
sbb
lret
inc
push
loop
xchg
add
jg
or
lods
scas
lret
add
iret
jns
and
jne
lock
or
and
xchg
aaa
jb
jbe
mov
mov
add
loopne
adc
push
mov
hlt
jo
shrb
cmp
in
loope
dec
push
sub
fs
xchg
scas
jmp
lret
push
orb
int3
mov
xor
jne
sub
dec
stos
jno
and
scas
mov
xchg
mov
adc
test
inc
xor
xor
lret
inc
add
xor
xchg
fmul
lock
dec
add
mov
mov
fdiv
ret
xor
pop
fiaddl
jecxz
into
fwait
into
mov
loopne
dec
call
mov
sbb
xchg
inc
sbb
scas
mov
and
fistpl
lds
adc
mov
mov
clc
add
sub
outsl
ret
shl
and
pop
sub
not
cs
subl
jp
outsb
lods
or
jge
sub
mov
dec
push
cmp
gs
flds
add
loop
mov
int
stos
sub
fwait
call
test
or
fildll
jmp
cmp
dec
test
enter
add
subb
xchg
mov
add
jmp
pop
repnz
mov
dec
xchg
mov
repnz
inc
stc
jmp
pop
mov
fs
and
out
adc
jno
push
push
in
xor
fbld
jns
sahf
mov
sub
inc
dec
xorl
push
movsl
jmp
data16
mov
mov
fdiv
enter
in
xchg
lret
sbb
push
lret
sub
inc
cmp
push
repz
push
or
mov
jb
mov
js
je
aad
aas
enter
lods
mov
dec
insl
cltd
int
push
inc
mov
int
cmpsb
mov
clc
push
pop
mov
sbb
sbb
dec
fcomps
dec
or
or
inc
addr16
shrb
dec
pop
xchg
push
cli
sub
repnz
test
loope
dec
inc
sbb
cmp
xor
iret
test
adc
ds
ret
cltd
push
push
push
jne
ret
orl
mov
pop
dec
sbb
scas
mov
inc
xchg
leave
push
xchg
sbb
test
imul
mov
add
jno
adc
mov
and
dec
fisttps
xchg
cmp
sub
jmp
ljmp
fidivl
repnz
lea
pop
pop
xor
mov
add
xlat
cltd
xchg
inc
sub
inc
cmp
jmp
mov
lods
and
lods
mov
or
mov
popa
out
scas
xchg
sahf
xor
repz
subb
push
mov
push
fildl
mov
iret
mov
push
fcomps
dec
sub
adc
xchg
mov
xor
jo
or
mov
aam
ret
cmp
sahf
xchg
add
sbb
push
lret
in
push
cwtl
test
sbb
mov
ds
ss
mov
shlb
loop
push
ljmp
xchg
in
sbb
xchg
testb
push
add
mov
sub
sbb
dec
bound
cmp
add
inc
sbb
mov
lret
jg
int3
jmp
push
andb
fs
and
mov
jbe
cmp
inc
dec
xchg
or
scas
add
movsb
cli
adc
mov
je
inc
arpl
pop
jmp
repnz
mov
mov
cmp
inc
sub
pop
stos
clc
sub
xor
neg
add
dec
leave
leave
es
shll
pop
popf
sbb
call
inc
xor
test
lds
popf
ror
and
jecxz
stc
in
push
dec
add
dec
hlt
mov
in
pop
jl
pop
mov
pop
jbe
mov
nop
jp,pt
enter
stos
aad
jo,pn
or
cwtl
pop
or
jne
add
cmpsl
lds
test
loopne
sbb
outsb
inc
pop
pop
test
insl
in
call
rcrl
sahf
jo
aas
mov
ret
je
das
mov
lods
dec
clc
mov
orl
subb
scas
fwait
pop
imul
xchg
adc
adc
mov
jo
and
mov
or
mov
mov
and
jle
stc
lea
lret
ret
sub
sbb
divl
int3
ficoms
jnp
jnp
cmpsl
rorl
adc
mov
jle
adc
aam
enter
dec
or
xchg
jnp
nop
aas
stos
lahf
js
push
mov
clc
fmul
nop
fwait
stos
cs
mov
mov
sbbl
sahf
loope
add
jb
jns
out
inc
push
cmp
ds
dec
shl
dec
imul
or
fsubr
out
jne
xor
iret
jo
xchg
dec
jbe
aas
jne
scas
push
mov
adc
mov
sbb
jae
cs
popa
mov
std
sbb
pop
or
jge
xchg
jcxz
sub
out
xlat
fimuls
das
in
popa
or
scas
mov
pushf
popf
push
jmp
fnstcw
pop
pushf
xor
loopne
push
adc
ds
inc
scas
xlat
rcr
push
adc
pop
test
xchg
stos
popf
push
mov
inc
icebp
dec
push
and
push
repnz
cmp
lahf
cld
fs
in
addr16
into
inc
hlt
insl
mov
mov
sbb
stos
nop
mov
inc
setnp
jle
ucomiss
outsl
mov
insb
adc
movsb
jno
pop
sbb
out
sbb
loope
outsb
sbb
add
mov
ret
add
push
sub
clc
adc
push
mov
sub
add
mov
sub
sbb
je
test
pop
inc
daa
mov
in
mov
fwait
inc
sti
push
leave
testb
stos
or
popf
int
push
stc
mov
inc
mov
push
mov
nop
mov
test
test
out
pop
sbb
ja
ret
jb
mov
mov
mov
dec
xlat
cmp
clc
push
jg
pop
jne
mov
mov
das
inc
mov
inc
loop
insl
sbb
jg
xor
fdivrl
in
lahf
iret
cwtl
cld
add
mov
aaa
jecxz
aam
mov
mov
stos
jo
mov
inc
iret
inc
test
dec
cvtps2pd
pushf
gs
lss
fstl
add
adc
pop
bswap
dec
mov
sti
cmc
jge
jae
popa
mov
xchg
xchg
pop
fldenv
aas
mov
mov
outsl
xorb
inc
out
pop
fwait
pop
xchg
jmp
andl
sbb
jecxz
or
and
js
inc
push
int
jae
adc
mov
pop
jmp
rclb
mov
xor
mov
xor
pop
mov
cmp
mov
push
pusha
fistps
int3
test
cmp
out
es
dec
mov
ret
fmul
mov
lods
and
js
xchg
popf
fidivs
les
sub
test
js
mull
cmp
clc
mov
push
add
push
xor
sub
aam
xchg
pushf
and
inc
je
dec
sti
sbb
dec
lcall
mov
pop
lret
xor
mov
add
scas
fidivrl
cmp
cmp
and
movb
stos
cli
scas
lret
inc
fcmovne
sahf
jbe
jl
xor
scas
mov
mov
pop
mov
imul
fldcw
xor
mov
xor
jns
pop
cmc
or
mov
sub
out
sub
testb
push
push
sbbl
in
push
lock
mov
xchg
pop
loop
pop
or
das
sbb
pop
mov
insb
cld
ret
push
ss
sbbb
je
jmp
lret
sbb
adc
sbb
cmp
xchg
int
std
lahf
jl
lcall
xchg
mov
mov
xchg
fsubrl
sub
sbbb
push
push
insl
sub
mov
cmp
vmread
mov
adc
ret
js
ljmp
rdpmc
mov
fs
test
xchg
aas
adc
in
dec
mov
mov
mov
iret
movntps
adc
xor
out
repnz
mov
mov
lret
add
adc
sbb
out
jl
ds
cmp
mulb
sarb
xchg
rcrb
push
mov
lods
or
repnz
insb
mov
mov
dec
loopne
dec
mov
fimull
jmp
jge
pusha
mov
and
test
xor
loop
mov
push
popf
gs
rcl
mov
sbb
sub
call
pop
jge
daa
mov
and
in
movsl
adc
push
sbb
lcall
fwait
les
inc
sti
add
hlt
pop
nop
ret
pop
pop
stos
mov
enter
push
or
popf
push
mov
outsl
aam
bound
pop
or
ret
jecxz
xor
dec
xchg
icebp
sbb
mov
adc
js
pop
daa
test
push
mov
xor
sub
lret
push
jns
das
fxch
loope
lret
in
xchg
sbb
repz
pop
mov
lea
pushf
and
les
adc
add
jo
std
sahf
fistpll
iret
and
or
out
sub
cs
std
rcl
pop
pop
pop
sahf
mov
push
cmp
ffree
insl
mov
data16
fwait
push
lds
pop
push
pop
lods
pushf
push
xor
push
in
rorl
cltd
sarb
pop
xchg
call
and
xor
into
mov
in
push
mov
push
sbb
sbb
movups
mov
jbe
mov
sub
aam
test
fnsave
inc
jecxz
push
sbb
sbb
or
shrl
pushf
mov
mov
ret
enter
aas
pop
std
xorb
pop
and
jmp
testb
add
pop
inc
jnp
stc
adc
pop
ja
pop
jb
sbb
pusha
mov
cld
sub
dec
test
mov
lds
aas
sbb
outsl
fimull
cmp
out
cld
cs
les
test
daa
sbb
and
jae
leave
mov
xchg
out
mov
mov
mov
dec
push
push
lret
sti
mov
ficomps
stos
or
pop
or
add
loope
test
lock
rcrl
add
aas
or
in
inc
addr16
add
push
xor
aaa
shll
add
cmp
in
aaa
dec
sbb
jecxz
cmp
fcom
push
repnz
and
push
loope
inc
sbb
sbb
or
test
ss
scas
jl
aad
xchg
xchg
rol
mov
cmp
xorl
sbb
adc
out
cli
iretw
xchg
pushl
addr16
xchg
outsb
cmpsb
and
stos
pushf
fdivr
add
adc
stos
sbbb
mov
lahf
sub
jbe
push
push
decl
test
dec
aad
fisubs
fs
fdivp
imul
xor
dec
and
ret
cli
mov
loopne
loopne
aaa
sbb
jne
fdivs
cmp
ficoml
lock
je
push
add
jp
xchg
jg
ljmp
sbb
mov
inc
dec
mov
scas
icebp
sub
cs
xor
loope
inc
negl
dec
mov
insb
dec
and
test
stos
dec
mov
mov
xchg
sub
leave
dec
xchg
mov
insl
and
sbb
jno
mov
cmp
jecxz
dec
fwait
orb
cmpsl
mov
pop
sbb
jae
outsl
xchg
xor
fisubs
insb
cpuid
adc
add
adc
out
cwtl
cmc
leave
pop
hlt
jg
in
not
fsts
mov
inc
xor
pop
pcmpgtw
repz
push
inc
mov
push
sub
and
ret
je
mov
push
cmpsl
addr16
push
dec
imul
sub
jne
clc
or
hlt
or
aad
mov
out
pop
cmc
in
mov
inc
gs
dec
mov
jmp
xor
inc
adc
jl
adc
ret
ror
cmpsb
mov
cmp
sbb
adc
cmp
int
cltd
into
lea
sbb
leave
bound
enter
int3
notl
xchg
sbbb
ret
pushf
push
adc
in
movsl
inc
sbb
ss
ja
pop
mov
lods
cmp
cmp
out
outsb
mov
mov
pop
stc
and
jecxz
mov
push
iret
hlt
pop
repnz
call
nop
cld
mov
outsb
cltd
add
push
lea
rcr
ret
or
inc
arpl
pop
shrb
es
mov
lea
std
jl
add
lahf
fstpt
lcall
mov
bound
lds
mov
rorb
cmp
lods
mov
add
aas
mov
outsb
push
sub
mov
std
scas
inc
pop
lret
or
out
int
push
les
add
shll
lds
push
inc
aas
fstps
push
or
pop
repnz
dec
sub
outsl
imul
imul
pusha
sub
jge
pop
mov
mov
inc
int3
pusha
push
mov
clc
leave
push
cmp
xchg
mov
or
mov
out
clc
out
flds
push
repnz
push
inc
lods
jge
ja
out
xor
mov
pop
rcll
sbb
pop
add
iret
ret
inc
jge
scas
pop
and
cmc
dec
mov
mov
stc
xchg
scas
and
sub
cmp
dec
mov
es
sbb
test
cld
adc
movsb
icebp
les
jl
inc
xchg
fucomp
inc
jnp
or
cmp
call
sbb
arpl
lods
loop
push
push
sub
cld
mov
pop
dec
adc
rol
inc
mov
shll
push
sub
pop
pop
mov
jnp
in
loopne
sti
lea
push
sbb
test
jo
mov
fsubr
fldl
sbb
push
movsb
dec
jb
and
mov
and
xchg
add
inc
ja
mov
sbb
sub
in
ss
mov
sbb
push
adc
pop
movsl
fdivrp
dec
jg
sub
out
mov
mov
inc
or
xchg
push
fistpll
lods
cmp
orl
jo
loopne
pop
pop
jl
or
imul
sub
enter
add
insl
lret
fmul
mov
mov
sbb
xchg
mov
cmp
pop
mov
push
cmp
fdivs
jae
out
outsl
int
jle
cmp
pop
mov
movsb
cmp
int
sbb
out
das
jmp
mov
daa
mov
inc
js
pop
test
jbe
pop
fcmovnu
jg
mov
lock
bound
lock
adc
rcrl
cwtl
divl
lahf
push
xchg
mov
jno
sub
std
movsl
inc
dec
iret
sbb
push
add
das
cmpsl
jae
or
mov
pop
inc
sbb
mov
shlb
inc
jo
add
lcall
into
jae
outsb
or
inc
fildl
cli
and
add
push
shl
or
push
xchg
xor
mov
sub
lahf
imul
pop
mov
int3
sub
in
daa
push
les
jno
cli
sarb
cmpsb
jae
adcl
mov
rolb
pushf
jmp
pushf
leave
rcll
jg
les
out
lret
jge
or
inc
add
mov
fildll
xchg
pop
fsubrs
cmp
sub
add
lret
mov
inc
data16
pop
imul
mov
pop
es
sti
ljmp
out
cld
pop
xor
popa
inc
pop
sbb
pop
pop
mov
jmp
or
jg
sbb
je
pop
mov
or
jne
mov
enter
jne
ret
stos
xchg
lock
nop
mov
cwtl
sbb
in
dec
lea
jo
inc
push
jbe,pn
cmp
andl
rcl
inc
cmp
xor
test
sub
fsts
dec
vlddqu
jge
push
jo
pop
push
inc
scas
lcall
addr16
stos
lds
push
scas
es
sysexit
inc
enter
lods
and
jg
enter
fmull
or
jl
cmp
loop
fnstsw
outsl
scas
aam
ss
mov
jno
mov
push
es
outsb
outsb
sbb
js
sub
lock
mov
and
std
out
sub
dec
inc
or
inc
jbe
jp
mov
mov
std
daa
push
ja
sub
jmp
jbe
dec
lods
push
push
inc
push
dec
gs
fistpl
or
xchg
loop
xchg
lret
lret
jnp
jnp
pop
inc
xchg
addr16
addr16
jne
sub
scas
movsl
pop
shll
jmp
and
xchg
add
mov
mov
incb
std
pop
push
insb
add
test
ss
and
mull
cmp
aaa
pop
repnz
mov
stos
and
lea
lods
lods
popa
loopne
xor
int
inc
int3
mov
stos
lds
shlb
in
xchg
call
inc
lock
add
jg
and
sub
cmp
popa
mov
iret
scas
sub
mov
cwtl
cmpsl
sbb
repnz
sub
test
iretw
inc
adc
out
push
xor
jo
loope
inc
in
xor
inc
in
sub
cld
or
in
mov
inc
adc
mov
data16
push
dec
loope
lcall
nop
or
lea
dec
cmpl
pop
and
lahf
mov
fistpll
cmp
clc
idivl
xor
or
xchg
cmp
xchg
or
inc
dec
jno
popf
sub
mov
push
hlt
xor
adc
push
icebp
xor
insl
push
add
mov
gs
push
out
xchg
cmp
adc
movsb
or
pop
mov
sbb
ret
xchg
mov
xchg
dec
ret
insb
lods
dec
push
xor
cmc
or
das
cmp
aad
lock
sub
adc
cwtl
xchg
sti
adc
cld
movsl
stos
mov
pop
dec
rorb
test
jmp
mov
cmpsb
aaa
jne
push
shrb
fnstenv
sbb
popf
and
dec
mov
out
test
xchg
push
fs
push
or
push
xor
xchg
push
mov
daa
mov
mov
jnp
ret
std
fnsave
fdivr
into
or
jg
adc
ret
sub
gs
jmp
outsb
shrb
cld
xor
repz
rcrb
xor
or
aas
imul
adc
and
mov
movsb
sub
imull
repnz
in
loope
js
push
sbb
fstl
inc
loopne
xchg
rclb
out
ja
out
and
mov
mov
test
mov
cmpsl
movsl
orl
mov
arpl
popa
lods
push
pop
xchg
pop
scas
in
xchg
imull
sahf
in
rcll
lea
cmp
or
sbb
insl
js
add
ret
pop
sbb
jp
in
nop
fldcw
imul
adc
mov
or
inc
inc
xor
outsl
nop
aaa
out
outsb
orl
dec
jb
fwait
stos
inc
stos
and
lods
push
call
into
adc
nop
cli
fcmovnb
jp
insl
and
add
es
mov
mov
sub
repnz
xchg
jo
jns
out
jo
inc
outsl
fsts
mov
fwait
imul
dec
pop
cli
mov
xchg
gs
stos
insl
loope
adc
fwait
clc
orb
mov
sbb
lds
sbb
cltd
xor
xlat
stc
mov
dec
popf
xor
dec
xchg
loope
fcoml
pusha
mov
or
xor
arpl
jns
and
test
mov
out
and
pop
sub
adc
arpl
scas
in
jne
jbe
loopne
mov
fwait
dec
lods
leave
lock
jecxz
add
mov
daa
xchg
pop
mul
add
xchg
notl
rolb
bound
loope
shrb
mov
mov
jle
repnz
not
or
lds
push
add
push
dec
pop
out
insb
mov
xchg
into
mov
icebp
add
std
sub
fisttpl
incb
jnp
aas
lock
jp
or
repnz
adc
inc
push
scas
cli
inc
and
out
aam
lret
pop
sahf
pop
lock
sti
xchg
outsl
mov
out
dec
push
stos
call
daa
or
sbb
cmp
lahf
scas
mov
inc
leave
push
sbb
cmp
jno
mov
xchg
cmp
repnz
jnp,pt
lods
hlt
sub
sbb
mov
dec
sarl
xor
sti
cltd
bound
and
mov
sub
cmpsb
or
inc
jp
pop
lret
inc
jne
icebp
pushf
push
jae
and
xchg
rcrb
das
inc
inc
fwait
fwait
sahf
cmp
jmp
and
stc
cltd
jp
outsb
adc
xor
sub
jno
mov
mov
leave
and
int3
cmpsb
loopne
scas
mov
pop
outsb
cs
out
jne
insl
lods
mov
mov
mov
add
push
imul
lret
test
xor
into
pusha
js
jne
mov
dec
sbbb
push
outsl
sbb
dec
ret
in
push
cmp
jp
cs
popf
xlat
loopne
push
xchg
xchg
into
add
or
mov
xorb
dec
or
mov
idivb
inc
adc
mov
cld
mov
and
mov
gs
mov
ja
cltd
dec
sub
test
sbb
pop
sbb
add
ljmp
daa
cli
add
xchg
inc
lahf
cmp
cli
pop
mov
push
insb
pop
jmp
stc
xor
fidivs
scas
adc
xchg
mov
out
cltd
push
sahf
inc
out
pop
inc
jno
add
outsb
xor
dec
fs
sbb
in
inc
roll
clc
jae
pop
test
mov
xchg
push
ss
add
adc
movsb
mov
popf
imul
fstpt
add
std
mov
cmp
scas
sub
and
mov
mov
cmc
out
stc
xor
clc
pop
iret
pop
fisttps
cld
lds
std
mov
fisubrl
fsts
test
inc
das
cmp
scas
andl
fwait
mov
out
aad
bnd
push
inc
adc
mov
popf
push
xor
pop
pop
xchg
pop
xorb
scas
cmpsl
rorb
dec
fdivr
pop
mov
push
add
lock
std
push
mov
bound
shll
push
cmp
ljmp
sub
or
aaa
jecxz
sbb
inc
jno
inc
hlt
push
imul
popa
push
inc
rorl
xchg
cmp
xchg
mov
mov
rorb
imul
call
sub
fsubl
std
pop
test
shufps
stc
and
js
mov
imul
cmc
add
inc
roll
lods
hlt
shl
out
xchg
xchg
sub
mov
loope
fidivrl
push
mov
loope
inc
les
cmpsl
icebp
mov
inc
mov
dec
add
fsubrs
inc
fstpl
js
push
mov
jns
mov
and
iret
lahf
inc
call
xchg
rcl
xchg
call
inc
int3
mov
std
lea
outsb
test
pop
inc
test
xor
push
xor
rcrb
sub
xor
insl
ficoml
fcompl
push
xchg
pusha
push
es
scas
sub
enter
adc
in
mov
cmc
push
adc
add
pop
or
or
shl
jl
test
push
lods
js
aad
adc
fldenv
into
mov
cmp
mov
in
pop
jp
sbb
mov
push
sub
dec
jle
jge
xlat
mov
ficompl
mov
pop
mov
rclb
inc
push
inc
xor
push
divb
jge
xchg
fwait
mov
xor
mov
mov
adc
jl
or
cs
fmulp
aam
mov
inc
shl
cmp
mov
cld
sub
insl
jp
cld
mov
aaa
aas
cmp
in
inc
add
sub
sbb
xchg
or
cmpl
hlt
add
jae
sbb
lcall
lock
imul
push
lcall
mulb
push
cmpsb
inc
push
dec
or
incb
push
dec
repnz
adc
push
rclb
pop
cltd
push
inc
push
inc
pop
inc
inc
xor
sub
out
jp
iret
and
outsb
adc
dec
cs
out
outsb
cs
sar
rorb
cmp
cmp
negb
movsl
mov
adc
push
nopl
cmp
push
adc
mov
push
or
dec
push
into
jg
imul
mov
iret
xchg
hlt
add
js
xor
mov
daa
mov
lea
push
jnp
fs
adcl
mov
sbb
xchg
mov
out
pop
push
xchg
pushf
jns
hlt
jae
xor
cmpxchg
pushf
movsl
aas
shll
sti
movsl
fmull
test
fadd
pop
ja
movsb
dec
jo
add
mov
test
test
and
mov
mov
mov
xor
cmpsl
arpl
scas
or
fsubp
jb
fcompl
dec
cli
aad
adc
sub
inc
mov
aaa
clc
test
lahf
or
in
fists
movsl
neg
mov
inc
mov
xor
push
push
jo
in
pop
add
adc
out
jg
inc
int3
imul
imul
lock
mov
sbb
nop
or
xchg
popa
lods
push
out
push
pop
add
scas
fistpl
loopne
push
pop
fbld
popa
or
leave
dec
std
adc
aad
dec
push
cwtl
rcrb
or
or
add
mov
mov
addr16
dec
ror
subl
cmp
ret
jecxz
fcmove
jmp
dec
sbb
xor
lods
add
mov
repnz
xor
lcall
pop
xchg
jae
add
xor
test
je
std
adc
mov
repnz
pop
jb
hlt
sbb
imul
gs
dec
pop
mov
cmp
imul
pop
mov
scas
cltd
imul
mov
dec
push
jnp
sbb
popa
and
cld
mov
push
dec
xchg
dec
insl
icebp
jecxz
and
notb
fs
lcallw
jo
paddusb
test
and
mov
cld
and
lea
inc
dec
setne
mov
pop
lcall
inc
js
cmp
movsl
pop
xchg
xor
pushl
pop
pop
push
or
shr
dec
repnz
mov
sahf
sub
enter
adc
cmpsb
mov
pop
shrb
jnp
cmpsl
cmp
jb
xchg
das
mov
xchg
jno
xchg
repnz
xlat
dec
int
arpl
pushf
sub
mov
pusha
mov
jnp
fadds
add
jge
in
inc
out
xchg
cmp
cmc
fsubrs
jbe
sub
aas
push
mov
sub
je
mov
mov
and
in
out
loop
fdivr
js
pusha
mov
xor
sti
in
mov
out
mov
or
inc
dec
push
cmp
inc
rolb
push
dec
push
insb
mov
mov
and
aad
rcrl
cld
fsubrs
aas
dec
daa
add
lods
push
pop
mov
and
xchg
lcall
push
pusha
rcr
push
outsl
fstpt
les
mov
call
ret
cld
test
orl
jmp
pop
adc
cmp
sbb
push
or
ljmp
sti
lcall
mov
pop
stc
in
stos
shrb
sub
fnstsw
hlt
roll
mov
test
xor
add
mov
cmp
ds
outsl
inc
cmc
ja
pop
and
inc
xchg
or
mov
push
pop
jmp
add
sbb
sti
clc
shl
scas
jp
repz
dec
and
dec
aad
cmc
lods
ds
adc
int
imul
xor
fldenv
test
popa
push
es
shlb
je
push
in
pusha
push
mov
jecxz
call
jbe
push
push
lock
gs
sti
push
push
mov
fstl
clc
push
inc
sbb
mov
sub
add
shlb
add
xor
and
out
lcall
imul
add
cmp
and
or
mov
repz
cmp
sub
jo
pusha
dec
sbb
lcall
shr
fidivs
out
and
mov
daa
inc
mov
inc
shrb
sbb
out
int
xor
xor
hlt
adc
ret
bnd
ljmp
arpl
call
es
pop
enter
leave
mov
adc
aam
in
mov
gs
in
xchg
fcom
popa
cld
test
pop
test
cwtl
loop
dec
loop
iret
xor
pop
test
and
xchg
repnz
clc
daa
mov
shlb
mov
lods
sub
outsl
mov
push
pop
sub
pop
dec
adc
mov
aaa
push
jae
mov
cmp
inc
dec
push
es
mov
and
add
rorl
jne
jno
icebp
sub
loop
mov
int3
fimuls
add
mov
movsl
mov
lock
mov
imulb
add
cli
fbstp
pop
int
and
data16
lret
xor
mov
addl
sbb
and
les
es
add
scas
dec
pop
inc
stos
lahf
jbe
jle
xchg
cmp
mov
xchg
jecxz
and
test
mov
xchg
xchg
sbbb
orb
mov
fbld
ficoml
loopne
out
mov
adc
sub
and
inc
push
dec
push
sub
cli
out
jg
cmpsl
push
ret
int3
mov
mov
dec
xchg
push
jecxz
ljmp
mov
sub
loopne
mov
xor
hlt
cltd
jae
int3
sbb
sti
rcll
sbb
mov
sti
nop
xor
inc
repnz
xor
pop
pusha
clc
pop
and
fwait
in
cmp
test
sahf
filds
arpl
shrb
inc
scas
popa
xchg
adc
mov
and
ja
enter
cmpsb
fimuls
aam
ljmp
jle
into
or
sbbb
sti
jl
mov
xchg
jno
dec
ds
imul
outsl
inc
test
imul
imul
aam
shll
add
or
fistpll
xchg
xchg
sar
sub
out
push
adc
sti
dec
add
mov
enter
test
outsl
lods
lea
dec
pop
data16
ds
jmp
mov
sbb
and
push
cmp
push
out
jmp
iret
lock
and
sar
mov
out
pop
das
mov
mov
test
xlat
push
push
icebp
lcall
xor
pop
sub
orl
insb
jb
push
jbe
jl
jne
cmp
cs
das
push
cs
inc
call
test
push
aaa
lret
inc
aaa
or
jno
xor
push
push
push
mov
adc
lahf
insl
fiaddl
sti
pop
push
arpl
outsb
xlat
mov
push
lea
push
sahf
pop
mov
adc
fisttpl
push
ss
mov
fyl2x
inc
cmc
add
dec
sub
jecxz
mov
out
out
outsl
xchg
int
jge
aaa
sub
xchg
dec
fcmovnu
jmp
sbb
push
cmp
cli
push
push
mov
int
aad
lret
andl
add
cmp
clc
cwtl
cmp
in
fisubrs
sbb
test
shll
mov
or
rcl
lods
cmp
std
add
xor
ds
mov
rclb
jmp
mov
sub
fdivp
dec
stos
and
jo
aas
daa
dec
dec
push
cmpsb
add
pop
mov
xchg
or
shl
mov
adc
pop
mov
inc
mov
jne
lods
stos
aaa
jae
pop
addb
mov
mov
imul
rorl
out
adc
mov
jg
mov
subb
adc
xchg
and
mov
and
andb
lcall
fdivs
jl
mov
faddl
pop
jae
cmp
jl
shlb
nop
pop
test
pop
xor
xchg
xchg
lahf
xchg
mov
test
mov
dec
ds
loopne
and
aaa
out
adc
jl
ja
dec
xchg
mov
hlt
jg
shrl
push
or
fwait
dec
mov
jmp
mov
sub
push
rcr
xor
push
push
or
and
inc
std
cmpsb
mov
sar
jecxz
jmp
jge
hlt
aaa
jle
jo
mov
dec
xor
mov
insb
fldl
jecxz
incl
jp
cmp
cltd
sahf
jge
cli
jmp
js
fbld
push
jb
out
sahf
or
sti
adc
push
pop
outsb
jae
mov
pop
aas
dec
pop
sub
iret
js
ficompl
sbb
cld
in
in
js
lods
pop
mov
adc
loop
sub
cmp
lods
and
adc
lret
push
out
out
push
jb
fistl
push
xchg
insb
pop
and
sub
nop
or
adc
mov
out
rcr
and
out
mov
jp,pn
das
rorl
je
subb
mov
sarl
xor
mov
dec
mov
lcall
in
mov
aad
jns
ret
push
out
mov
xlat
mov
mov
ja
jg
jg
test
inc
call
fldcw
iret
or
jns
ja
mov
sbb
cmpsb
lea
cmpb
push
pop
ja
jg
int3
popf
outsb
and
fldcw
cld
push
or
imul
out
add
les
jg,pt
and
insb
clc
xor
sbb
mov
testb
jns
fnstsw
mov
into
inc
sti
mov
push
pop
mov
jb
stos
les
fbld
dec
mov
andl
out
mov
repnz
adc
push
mov
repz
pop
and
cmp
scas
push
mov
inc
xchg
push
dec
and
dec
in
iret
xchg
cli
testb
or
and
fnstcw
fnstenv
inc
mov
mov
das
adc
jl
push
sub
arpl
lret
or
shll
add
sub
jl
sbb
xchg
mov
mov
push
nop
mov
pop
sub
testb
jo
jge
movsb
and
cltd
push
xor
dec
push
jbe
cmp
ror
add
les
add
mov
xor
jl
jge
and
or
cmc
ss
cmp
ss
pop
rcr
sub
sbb
jo
jnp
lods
int3
xor
adc
or
mov
pop
arpl
inc
xchg
aaa
mov
shl
rolb
ret
mov
jns
dec
sbb
rol
mov
jge
dec
add
sbb
or
inc
lock
test
fmul
mov
xchg
cmp
pop
and
adc
rolb
and
pop
add
dec
and
inc
fst
jecxz
or
sbb
leave
pusha
sahf
js
add
cld
test
jne
adc
xor
mov
and
shlb
jl
addb
test
xchg
lret
xor
js
sub
les
xchg
mov
dec
call
inc
xchg
aaa
daa
jp
ja
aam
sbbb
subb
sub
cmp
mov
mov
imul
cmpsl
pop
pop
mov
jb
enter
sub
pop
fidivrl
mov
rclb
popa
sbbl
adc
adc
scas
sub
sti
cs
xor
push
mov
xchg
adc
xor
sub
rcrb
pop
cli
lret
mov
push
mov
cmp
and
and
cwtl
cld
sbb
jae
sub
aas
and
pop
jae
movsb
mov
aad
mov
dec
mov
clc
mov
aaa
movsl
xchg
sti
out
inc
lret
mov
sbb
mov
jb
mov
out
jo,pt
dec
popf
inc
cmp
push
dec
mov
push
fsubrs
dec
int
push
xorb
icebp
xchg
in
fcompl
rclb
mov
scas
mull
mov
shrb
jmp
sbb
xorl
arpl
pop
leave
jmp
stos
push
lea
jp
aaa
out
dec
and
add
movsl
adc
stos
sbbb
push
mov
jg
nop
dec
cmpsl
add
sbb
mov
xchg
insb
lret
jb
or
mov
sub
jp
aam
or
mov
test
xchg
sub
ja
push
push
mov
xchg
xchg
pop
sbb
sbb
inc
imul
shrb
aam
mov
ret
add
mov
andb
sbb
fsubrp
iret
mov
push
test
sub
adc
and
add
les
add
popa
jecxz
lods
mov
cltd
ret
inc
and
add
ret
sub
xchg
cmp
pop
loopne
movsl
xor
push
jg
push
shll
nop
divb
jmp
inc
add
out
sub
push
add
mov
dec
mov
insb
dec
sbb
pushl
test
cld
adc
and
mov
push
jae
pop
jbe
sub
loopne
adc
lea
pushf
movsl
and
xor
or
or
popf
push
fstps
iret
cwtl
inc
add
repnz
movsb
fwait
xchg
mov
jmp
hlt
cmp
cld
sbbl
inc
loopne
sub
in
mov
cmp
or
or
int3
jne
popa
push
dec
sbb
mov
rcll
es
leave
pop
xchg
mov
rdtsc
hlt
pusha
scas
inc
mov
jno
xor
xchg
filds
sub
lods
shrl
push
adc
pusha
adc
lods
loopne
stos
xor
xor
mov
jno
sarl
pop
mov
iret
mov
in
in
inc
cli
jnp
popf
cwtl
das
movsl
xor
and
mov
pavgw
fimull
cmp
bound
lret
pusha
mov
xchg
dec
lret
pop
cmp
adc
out
mov
cmpsl
cmp
adcl
lods
dec
and
ss
repnz
mov
orb
loopne
js
sub
les
test
or
mov
and
arpl
and
iret
dec
xchg
dec
lea
ret
jnp
or
mov
mov
fisubrl
sub
adc
xchg
ret
add
loope
bound
add
mov
mov
pop
sub
sub
insb
jo
rorb
fdivs
fwait
repnz
inc
add
jns
push
sbb
icebp
scas
push
in
mov
push
jbe
lea
jl
cltd
pop
aam
sbb
xchg
in
std
sti
jno
push
mov
push
push
jmp
movsb
divb
cmpsb
cld
int
imul
out
stc
mov
shlb
sub
xor
daa
mov
jg
jecxz
ja
or
scas
ret
cwtl
mov
ljmp
mov
fisttpl
add
push
out
mov
adc
out
adc
xor
enter
pusha
jmp
adc
dec
xchg
mov
mov
insl
clc
test
pop
inc
es
adc
push
inc
push
sahf
sahf
pusha
dec
xor
pop
aas
mov
stos
imul
ljmp
pop
adc
xor
cs
ret
add
loop
pusha
mov
repnz
dec
shll
test
data16
fsubrs
cmpsb
jp
test
mov
xor
addr16
pop
loop
in
mov
iret
and
xchg
inc
sahf
jbe
aad
test
imul
dec
mov
mov
repz
dec
inc
shlb
lods
jp
add
adc
arpl
call
repnz
push
test
pop
xor
imul
fdivrs
loop
mulb
mov
mov
xor
fcmovne
ja,pn
cld
cli
or
cs
jg
pop
andb
pop
out
adc
jno
sar
push
fisttpll
adc
test
int3
dec
dec
mov
jno
adcl
add
add
or
dec
cmc
int3
and
cmp
mov
ljmp
mov
cmp
xor
popa
mov
xchg
adc
adc
int3
xor
jb
or
lahf
aas
pop
pushf
scas
jns
insl
and
xor
pop
pop
adc
aas
xchg
sbb
xor
push
int3
jecxz
cwtl
sub
dec
ret
sarb
repz
test
push
mov
mov
bound
sbbl
sub
xchg
lcall
inc
scas
jp
insb
bound
fsubs
or
sbb
mov
outsb
adc
sti
mov
mov
mov
ret
xchg
xor
movsb
sub
inc
push
sbb
imul
sbb
inc
mov
or
xchg
xlat
add
push
jo
pop
js
and
push
sub
and
aam
sub
arpl
inc
clc
jae
rcrb
sbb
call
out
pop
sub
lods
cltd
sbb
enter
push
filds
pop
add
mov
xchg
sub
mov
mov
jns
out
shll
sahf
xchg
pusha
imul
sbb
pop
repz
addr16
xchg
pop
push
cmp
pop
fsubl
and
xorb
bound
fs
sbb
out
cld
cmp
and
mov
xchg
adc
lock
bound
sub
push
nop
aam
jno
mov
cmp
cmp
out
pop
mov
mov
out
test
xor
movsl
jae
inc
loope
cwtl
jp
aaa
imul
lret
jecxz
xchg
dec
addr16
fs
add
mov
push
loop
push
jnp
lea
mov
and
pop
cmpsl
cwtd
push
sbb
ret
fsubr
pop
sub
sub
adc
xchg
add
xor
scas
xchg
ret
fists
pop
pop
dec
lahf
cmp
sti
insl
lods
mov
add
inc
inc
test
inc
mov
xchg
test
sub
clc
lcall
subl
xor
call
jle
dec
outsl
movsb
aad
inc
cmp
divb
imul
test
mov
inc
mov
and
xchg
fldt
jg
popf
push
jnp
push
lock
addr16
popf
xchg
jmp
gs
mov
or
dec
xor
xchg
shrb
jl
adc
dec
test
sahf
and
clc
cmpsl
mov
pop
add
xchg
xor
xchg
mov
ja
loopne
inc
jg
mov
daa
pop
test
inc
lret
out
or
orl
test
inc
lcall
cwtl
sbb
add
enter
or
jle
ljmp
xorl
in
je
cmp
hlt
push
push
jno
adc
lret
push
fwait
adc
pop
jo
add
mov
jo
xchg
mov
or
and
add
dec
lret
inc
and
mov
aam
cwtl
repz
sub
rorb
mov
lods
push
and
sub
jge
xchg
inc
fsubr
push
push
lret
push
mov
mov
mul
test
je
add
push
jo
pop
out
xchg
jmp
cmp
mov
je
jae
dec
mov
sub
or
and
cmpsb
dec
sub
push
mov
nop
int3
jae
dec
pop
push
add
scas
cmp
loope
inc
push
pop
xor
js
fimuls
lea
fisttpll
jg
stos
mov
lret
ja
ss
dec
lahf
arpl
xchg
sbb
test
iret
int
fmuls
lret
ja,pn
adc
stos
aaa
cmpsl
clc
add
aas
xchg
jae
loop
jp
testb
rorb
sbb
shll
cmpsb
lods
and
or
bnd
in
inc
adc
mov
xlat
sbb
in
pop
lret
idivb
es
jnp
shrl
int
push
jge
mov
in
das
mov
or
je
clc
adc
in
mov
lds
pop
mov
mov
imul
sub
iret
cmp
cld
movsl
clc
mov
sub
daa
pushf
cli
mov
push
popf
or
dec
push
push
mov
nop
outsb
fildll
jl
push
mov
and
sbb
xchg
inc
dec
iret
les
cmp
fsubrs
rcl
and
arpl
mov
sbb
push
leave
incl
movd
test
sub
push
dec
imul
cld
mov
cli
pop
sub
ret
dec
adc
mov
mov
jmp
and
add
mov
mov
nop
adc
std
shll
mov
xchg
or
lret
nop
push
push
ljmp
or
in
add
test
push
leave
into
dec
aam
jne
jge
adc
out
pop
sub
mov
inc
or
sbb
pop
dec
mov
jb
mov
inc
jge
push
fucomi
lret
iret
movsl
int3
es
push
ds
ss
xor
and
call
push
push
divb
inc
mov
mov
sub
push
cmp
imul
xor
jecxz
or
gs
inc
mov
xor
add
jns
insb
loope
xor
mov
push
sti
xor
or
jno
mov
ds
and
sbb
inc
scas
dec
mov
test
ja
xchg
movsl
loope
call
test
fisttpll
push
pop
in
stos
cwtl
loop
sub
fucom
pop
clc
pop
pop
adc
out
test
mov
or
mov
jno
lods
mov
mov
adc
scas
push
push
mov
or
xchg
ret
add
js
cli
bnd
inc
xlat
and
fs
and
add
hlt
ror
imul
jge
in
xchg
call
dec
adc
lods
mov
add
clc
arpl
xor
ret
ret
lahf
enter
inc
dec
test
je
xchg
mov
cmp
add
pop
xchg
xor
hlt
sti
popa
ret
or
fnstcw
je
pop
test
out
jne
outsl
pop
cmp
aam
dec
sbb
lahf
lret
mov
daa
cmp
imulb
and
cwtl
dec
lds
mov
test
sbb
cmp
out
mov
xchg
xor
cmpsb
cmc
pop
repz
jae
push
orb
mov
mov
in
out
fisubrs
pop
popf
fnstenv
cmc
dec
jb
ljmp
sbb
cmp
mov
ljmp
popa
ret
bound
in
int3
xchg
sbb
divb
into
dec
adc
movsb
js
pop
psubb
sub
cmpsl
leave
adc
iret
dec
cwtl
pop
movsb
sbbl
xor
xor
or
xchg
out
add
sbb
inc
sahf
jle
lcall
cld
sahf
mov
mov
addr16
mov
xchg
mov
test
xor
mov
mov
and
mov
lcall
pushf
popf
int3
popa
js
out
push
add
ljmp
rcl
dec
xchg
mov
rcll
mov
sbb
outsl
subl
jae
mov
leave
sbb
lahf
jne
add
jp
rorl
stc
in
icebp
dec
test
jmp
ret
loope
jae
inc
negl
cmpsl
sti
rclb
data16
jb
push
aam
mov
into
mov
popf
mov
repnz
int
pop
loope
leave
imul
movsb
rolb
in
jae
rorl
ret
nop
or
stc
cwtl
mov
and
in
insb
cmpsb
movsb
adc
sub
dec
mov
cmp
inc
lds
push
jge
add
dec
xchg
sbb
int3
dec
xchg
xor
pushf
popf
out
mov
xchg
pop
sbb
imul
push
icebp
adc
gs
or
daa
mov
mov
stos
push
out
lret
cld
xor
outsb
in
or
and
push
dec
xchg
adc
jecxz
mov
push
add
pop
aad
nop
filds
jne
aas
mov
sbb
fstpl
adc
mov
fs
clc
mov
cld
inc
insb
sbb
aas
jb
pop
mov
insl
inc
lret
sarl
popf
jle
outsb
cmc
dec
mov
jne
pushf
mov
loope
cli
or
jae
push
mov
lds
shll
push
jge
syscall
cmp
aad
pop
ds
inc
jbe
and
imul
jecxz
cmp
loope
cmp
lret
mov
sbb
mov
test
mov
cmp
push
sbb
idiv
pusha
dec
jle
mov
xchg
daa
pusha
ss
cmc
mov
add
cli
sub
cmp
loopne
in
sarl
mov
sbb
cmpsl
add
mov
xchg
pop
inc
push
sbb
bound
sub
daa
adc
adc
scas
int
push
push
pop
and
pop
outsb
add
push
daa
adc
subl
add
fwait
ss
inc
les
mov
and
cli
xchg
pusha
inc
jns
mov
jmp
push
cmp
jbe
or
and
loopne
mov
out
std
cltd
fs
jp
push
cmc
mov
loop
jbe
mov
or
xor
out
sub
shlb
scas
jge
fs
lcall
mov
mov
call
mov
bound
je
jbe
popf
mov
or
das
out
notl
inc
loopne
inc
xor
inc
sub
hlt
xchg
cmp
outsb
xlat
push
femms
push
push
add
test
jae
or
jg
punpckhwd
out
into
add
xlat
jl
push
cmp
scas
and
cmpsl
ret
push
adc
imul
pop
or
xchg
cld
push
cli
cmp
aaa
test
push
popf
mov
sar
pop
test
add
add
mov
in
leave
and
mov
sbb
fs
pop
push
fwait
out
dec
incb
cmp
imul
cmp
adc
stos
aaa
and
mov
push
and
mov
pop
shrl
cmp
popa
movsl
enterw
mov
xchg
cmpsb
aaa
gs
sub
and
js
xchg
movsb
push
or
arpl
cmp
rcr
jl
push
push
push
pop
inc
adc
sbbb
fs
out
push
push
loop
ss
xchg
fwait
sub
lock
and
inc
xor
jp
repnz
addl
sbb
lods
loop
push
into
stos
dec
mov
xchg
jns
cltd
jbe
mov
scas
ror
cld
ret
xor
sub
jge
movsl
xchg
bound
outsl
mull
jge
jecxz
xor
xchg
aaa
xorl
fcoml
test
pop
xor
ds
mov
mov
xchg
rcrw
mov
mov
and
fsubrp
sbb
aas
push
or
push
loopne
lcall
adc
jle
pop
in
daa
add
ljmp
or
in
xchg
sbb
in
xchg
mov
push
pop
and
fs
fs
xchg
sbb
add
shll
mov
inc
data16
rorl
or
mov
pop
cmp
shl
xchg
jae
cwtl
and
lea
addr16
insl
sbb
adc
arpl
shll
push
int
mov
arpl
or
sub
pop
sub
mov
mov
add
push
fistpll
xchg
or
les
mov
or
loopne
test
pop
popf
pop
lods
jo
daa
cld
lcall
xor
pop
imul
stc
int
int3
out
cmc
cmp
pop
aaa
outsb
xchg
sbb
inc
mov
ds
dec
xor
pop
repnz
add
lret
xor
jo
test
test
into
shll
push
add
cmp
and
fsts
insl
xchg
push
sbb
mov
jl
fcompl
dec
sbb
hlt
or
fildll
js
mov
rcl
and
iret
movsb
mov
es
and
xchg
lcall
jns
add
inc
pop
insl
pusha
dec
sub
fmulp
add
cmc
je
sub
iret
cmp
mov
push
pop
in
push
stos
cmp
out
cmp
cmp
fwait
dec
sbb
pop
fldl
push
push
outsl
xchg
leave
inc
cltd
stc
fsubrs
xor
xchg
xor
lahf
repz
dec
mov
jl
jnp
add
into
xlat
gs
scas
pop
sbb
clc
icebp
pop
or
pushf
jp
icebp
bound
mov
fsubl
sbb
add
sbb
push
cmp
xchg
pop
mov
lea
sahf
out
aad
enter
rol
add
dec
ljmp
or
outsb
fdivp
fcomps
push
insl
lret
sub
or
inc
fadd
dec
xorb
movsl
ss
ljmp
into
or
int3
js
mov
adc
clc
xchg
out
aam
cmp
push
pop
xchg
pop
xor
xchg
mov
push
sahf
mov
and
gs
jb
clc
xor
rolb
insb
andb
jmp
scas
imul
shll
hlt
loope
inc
ficomps
lods
push
push
push
mov
testl
cltd
jae
cltd
pop
aam
fbstp
faddl
jecxz
les
lret
mov
aaa
jmp
xor
push
cmpsl
dec
pop
xorps
hlt
sub
repz
xchg
fcompl
jne
sub
fldcw
or
cld
pop
fidivl
daa
shlb
add
xchg
outsb
mov
lock
fldenv
test
test
lods
shll
mov
es
test
or
adcb
out
jge
or
xor
push
sub
mov
mov
xchg
imul
mov
faddp
sbb
insl
push
fstpt
leave
fmull
ret
movsb
and
mov
loopne
movsb
adc
loope
xchg
cmp
pop
xor
stos
pop
sahf
adc
lret
lods
shrl
mov
mov
jmp
stos
je
cld
sbb
out
mov
mov
in
dec
jo
inc
sub
inc
es
xor
lods
jle
bound
inc
cmp
cld
sub
movsl
es
cltd
lret
add
dec
std
jno
ljmp
sbb
loop
scas
mov
push
sub
rcrl
fisubl
add
pop
movsl
insl
xchg
jmp
inc
mov
cs
sti
addr16
mov
ret
rcll
lcall
mov
mov
mov
movsb
dec
mov
sub
mov
cltd
push
jge
call
jp
adc
leave
push
pop
scas
insl
ljmp
sbbl
mov
outsb
cmp
pop
ljmp
or
cmp
push
das
push
and
cltd
and
lock
mov
pop
pop
cltd
arpl
fwait
inc
mov
fwait
lahf
sbb
daa
sub
add
dec
out
pop
dec
pushf
cltd
cmp
cmp
test
fnstenv
fstpl
mov
nop
es
dec
inc
adc
pop
mov
adc
in
das
dec
cli
testl
lret
xchg
ret
sub
les
mov
in
repnz
scas
cltd
jl
pop
cmp
push
imul
xor
sub
mov
incl
fimull
and
jne
jecxz
cmc
adc
mov
imul
push
mov
jnp
outsb
push
push
cmp
jmp
cmp
cltd
mov
xchg
sub
sar
out
int3
cmp
shl
insl
aaa
push
inc
adc
mov
jmp
and
rcrb
dec
adc
mov
dec
gs
mov
inc
push
int3
mov
das
std
mov
fldenv
loopne
imul
sar
xor
cltd
sub
fnstcw
js
lret
mov
xchg
daa
enter
pop
cmpsl
in
inc
mov
cmp
or
aaa
test
dec
bound
in
cs
cmc
arpl
jno
stos
sub
or
into
icebp
arpl
jp
and
jnp
pop
pop
sbb
std
xchg
sbb
add
divl
mov
jae
adc
xchg
dec
jg
popf
call
push
clc
out
xchg
shrb
cs
push
lcall
aam
inc
out
cmp
dec
adc
cmc
xor
mov
xor
lea
test
dec
add
aas
popf
jmp
inc
and
mov
mov
sub
sbb
pop
bound
add
stos
push
pushf
jns
xor
cltd
dec
adc
fldl
and
dec
stc
mov
jl
dec
push
add
mov
cmp
pop
cmpsl
jmp
sbb
jno
std
test
pop
mov
js
shr
dec
jbe
test
iret
push
inc
push
push
mov
repz
xchg
xor
out
adc
testb
sub
daa
je
pushf
popa
pop
sub
mov
adc
lahf
fistpl
inc
adcl
cld
pop
jle
or
pop
dec
das
mov
out
adc
jb
movsb
dec
xorl
lea
mov
xchg
es
pop
rorb
cs
sbb
sbb
jns
out
sub
xor
dec
jge
fists
dec
push
filds
sub
loopne
xchg
fsub
rcl
push
mov
imul
cmpsb
test
cmc
xor
cltd
pop
and
xor
xchg
imul
mov
fucom
push
dec
xchg
addl
mov
nop
rcrb
test
outsl
mov
mov
xchg
cld
je
aad
or
test
hlt
outsl
dec
push
jnp
lds
std
bound
fidivrl
dec
lret
aaa
inc
mov
rol
jmp
sbbl
add
scas
popa
mov
xchg
mov
push
lret
jl
aam
jb
psrad
out
xchg
dec
jno
mov
cli
cmp
std
jno
xor
or
inc
adc
fucomp
xchg
lods
inc
mov
imul
aad
push
fs
in
adc
adc
cwtl
dec
sub
enter
pop
jo
and
xchg
push
test
and
ficoms
fwait
xor
or
lahf
or
push
lods
dec
les
imul
lds
std
inc
adc
out
and
ja
jo
cld
xlat
scas
outsl
pop
nop
orb
test
mov
ss
xchg
push
mov
xor
mov
mov
orl
test
loop
mov
push
movsb
pop
es
and
cli
in
leave
mov
scas
jecxz
push
or
repnz
out
mov
cld
jb
sub
mov
push
sbb
jp
or
fs
jns
mov
or
rorl
jge
insb
fiadds
mov
andl
pop
pop
loopne
aam
adc
xchg
cmp
dec
jle
in
sub
adc
inc
mov
jae
mov
xchg
xchg
lahf
stc
aam
and
xor
in
arpl
je
xlat
mov
pop
add
out
and
test
inc
cmc
mov
iret
cmp
adc
leave
scas
icebp
mov
cmp
fcmovnu
adc
adc
sbb
mov
mov
dec
mov
fisttpll
push
pop
call
sti
sub
mov
aas
mov
mov
dec
mov
or
cmc
cmp
decl
mov
push
push
arpl
push
adc
adc
inc
cli
iret
cmpsl
pop
rorl
scas
cs
add
mov
or
sbb
pop
pop
xchg
out
popa
mov
add
lds
xchg
mov
mov
lea
mov
pop
add
insl
movnti
vsubps
and
decl
shrb
iret
ljmp
xchg
push
je
sbb
add
adc
lcall
es
les
loope
sub
insb
push
jbe
popf
dec
mov
cmp
into
inc
push
jmp
inc
sub
cmpsl
icebp
jle
and
xchg
pop
cmp
push
jae
nop
bound
push
sub
mov
rorb
jbe
idivb
icebp
mov
jns
jb
inc
lds
js
sbb
mulb
dec
add
jno
dec
sub
xor
mov
cld
mov
popa
mov
mov
pop
push
dec
and
test
stos
xlat
stos
cld
fdivrs
push
add
subb
insb
or
and
sar
mov
xlat
into
add
cmpsb
jns
pop
pop
mov
adc
inc
fwait
mov
mov
mov
jecxz
fnstcw
outsb
fmulp
out
jle
fwait
mov
std
stos
enter
sub
rcrl
or
dec
jl
add
jo
and
repz
mov
add
subl
out
push
add
scas
stc
xor
addr16
repnz
add
addb
push
test
pop
cli
aad
dec
push
xor
mov
call
sbb
xchg
lret
inc
xchg
in
shlb
mov
lock
inc
data16
leave
stc
fidivrl
inc
mov
je
imul
push
xchg
les
jge
insb
jb
scas
sbb
xchg
sahf
gs
test
jae
nop
adc
inc
lret
or
leave
std
jnp
jne
lret
inc
or
test
push
mov
xchg
dec
jb
xchg
mov
lret
cwtl
sbb
hlt
dec
das
push
scas
fisubrl
xor
mov
jno
xor
jae
jbe
pop
mov
cmp
sub
lock
loopne
iret
pop
aam
cwtl
cli
es
xchg
fidivs
in
push
ret
cmp
int
mov
lock
cmpsl
cwtl
sub
dec
cltd
pusha
dec
sar
jecxz
js
or
jne
loop
jo
bound
mov
gs
dec
rcll
jmp
loopne
jne
jae
enter
dec
pusha
test
mov
testl
push
or
pop
xor
add
mov
cmp
and
xor
rcr
xchg
jno
xchg
bound
shlb
dec
inc
xor
cmpsl
sbb
sub
sarb
sti
inc
mov
inc
mov
mov
aam
das
roll
pop
es
push
adc
push
mov
int
fwait
je
mov
adc
imul
and
cmp
aas
or
into
xor
mov
dec
pop
mov
test
fists
xchg
aad
push
out
ds
pop
je
gs
fsubs
loope
test
nop
pop
js
pop
pop
pop
sub
orl
mov
dec
jne
mov
mov
ljmp
je
push
pop
push
paddb
addr16
loopne
xor
sahf
pop
das
pop
adc
icebp
xor
mov
ret
out
fisubs
xor
call
cmp
repnz
pop
inc
or
out
mov
sub
ljmp
fisttpll
push
inc
push
mov
scas
in
mov
or
lret
insb
push
mov
inc
pop
loopne
push
popa
out
push
ljmp
dec
es
pop
add
push
sbbb
lds
repz
mov
ret
shrb
and
in
mov
sub
push
adc
or
xor
in
adcl
clc
lcall
mov
xor
push
mov
pop
aad
jle
fsubrl
push
test
pop
lcall
ret
mov
inc
mov
icebp
test
adc
xor
cmpsl
jge
es
mov
cli
adc
adc
push
je
jmp
cmp
xchg
jl
adc
mov
cmp
out
adc
cmp
in
or
inc
jmp
xor
and
push
push
es
ret
lods
cmc
xor
pusha
stos
idiv
mov
lea
and
mov
pop
inc
dec
push
out
xchg
cmp
int
test
xchg
adc
imul
out
xlat
into
aad
sbb
rcll
aas
ss
cmc
xchg
xor
adc
inc
sub
je
pop
negl
sbb
add
je
out
pop
mov
xor
punpckhdq
cmp
and
sbb
bound
mov
scas
jbe
shlb
pop
cli
les
in
add
mov
imul
jb
push
sub
sub
clc
sti
popa
push
popa
das
mov
xor
adc
sub
adc
push
cltd
fwait
dec
pop
sbb
or
add
scas
daa
loop
xchg
enter
imul
fldt
inc
add
mov
adc
lock
sbb
ret
add
jmp
sbb
shll
cwtl
adc
sub
push
push
lods
adc
adc
repz
add
dec
loop
int
fstl
pushf
and
lods
mov
add
ja
mov
leave
sub
jo
lods
xchg
ficompl
fnstenv
push
ss
add
sahf
xor
sub
jae
incl
cltd
cltd
mov
scas
cmc
movsb
pop
rcrl
mov
mov
mov
dec
pop
ja
test
fsubs
test
cwtl
movl
inc
pop
xchg
hlt
or
fcoms
adc
inc
hlt
arpl
icebp
mov
mov
pop
pop
cmp
lock
cltd
fadds
aad
pop
dec
xchg
hlt
shll
sub
test
dec
cld
push
aam
out
cmp
and
in
imul
cmp
adc
add
jo
adc
dec
xchg
mov
cmp
inc
aaa
cmp
inc
out
and
inc
sbb
adc
mov
sbb
std
mov
inc
les
adc
mov
push
sub
mov
add
dec
outsl
add
jle
leave
mov
adc
cmovg
pop
lods
mov
xor
sub
pop
scas
ss
iret
mov
sbb
jne
pushf
shlb
adc
or
or
inc
ret
sbb
adc
icebp
adc
cmc
jp
movsl
xchg
out
push
or
ds
cmp
dec
js
imul
cmovbe
cmp
sbb
cmp
mov
outsb
loope
cwtl
fistl
lcall
scas
mov
mov
sbb
in
call
orb
leave
sub
sub
fdiv
call
insb
test
out
aaa
pusha
test
or
out
mov
orl
mov
scas
into
jp
popf
or
gs
ds
iret
sub
inc
loope
dec
imul
inc
dec
push
mov
mov
xchg
popf
and
jno
fimull
sbb
mov
sti
loop
dec
ljmp
and
mov
insl
pop
jp
mov
jle
mov
xor
mov
jno
sbb
cwtl
and
jnp
test
shlb
mov
cmc
lock
nop
loop
cld
cmp
lock
loope
jae
pop
out
mov
xor
cwtl
dec
addr16
jge
pop
or
lods
add
je
aad
push
xchg
in
rcll
sti
mov
repnz
mov
ja
xchg
ss
inc
push
push
pushl
xchg
nop
jle
outsb
rclb
pop
outsb
test
and
test
and
sahf
push
xor
into
sub
loopne
pop
mov
mov
les
das
imul
subl
out
sbb
push
iret
add
test
mov
popf
sub
nop
test
adc
push
je
out
out
jns
jl
jmp
sbb
inc
out
or
pop
in
addr16
call
cli
in
push
and
test
jb
mov
or
jns
mov
jbe
add
jmp
insb
and
repz
sub
gs
inc
cmp
cmp
adc
push
cs
notb
lds
jmp
lcall
cli
inc
mov
imul
mov
cmp
xor
cmp
adc
mov
add
ss
ljmp
mov
and
or
shll
shlb
fsub
mov
cli
push
inc
or
xchg
mov
into
pusha
sub
outsb
or
jecxz
adc
clc
dec
cmp
aam
popf
movsb
pop
dec
fdivr
fisubl
mov
xchg
push
stos
adc
popf
push
xchg
pop
pop
jb
sbb
jno
nop
jnp
or
jns
movsl
xlat
fimull
xlat
idivl
outsl
in
inc
stos
aaa
sbb
ret
xchg
mov
sbb
aas
call
sub
fistps
cmpl
icebp
enter
ds
scas
shlb
and
int
push
rclb
cwtl
add
popf
imul
icebp
xor
xor
jb
mov
xor
mov
in
cmp
pop
fimull
lea
das
negb
lret
adc
in
pop
or
or
cld
scas
icebp
sbb
or
insb
dec
insl
lea
and
mov
fdivrl
inc
mov
mov
pop
inc
push
xor
cltd
stc
cwtl
ret
inc
lcall
sub
inc
push
mov
ss
repz
out
insb
fisubrl
xchg
push
jmp
cmp
dec
cs
jmp
ret
scas
sub
push
es
inc
lods
sbbb
pop
add
addr16
or
cmp
aad
mov
mov
dec
mov
sub
pop
sub
mov
add
das
pop
iret
test
adc
or
mov
dec
in
outsl
in
xor
call
cmpsl
or
rorb
call
sahf
mov
cmp
shl
movsb
fwait
pop
mov
lret
ja
xchg
jle
push
fs
xchg
mov
adc
push
insl
xor
dec
sbb
jnp
sub
orps
mov
mov
sbb
xor
add
mov
inc
pop
rcll
push
out
jge
fwait
add
sbb
mov
repz
mov
rorb
ja
sub
fstl
xchg
js
inc
mov
nop
cwtl
mov
lcall
fstpl
pop
and
and
je
jmp
sub
punpckldq
es
int3
fs
cltd
adc
jmp
leave
xlat
mov
repz
notb
and
mov
fistps
push
ficoml
int3
xlat
out
push
cmp
jmp
shl
sub
cmp
and
aaa
movsl
sub
frstor
addr16
xchg
daa
and
lret
xor
sub
pop
dec
mov
dec
xchg
or
add
mov
xchg
lcall
cld
xchg
addr16
outsl
and
into
cmp
pop
outsl
pop
mov
outsb
cmp
outsb
cmpsb
push
add
clc
jae
repnz
cmp
mov
xor
sub
iret
mov
mov
call
lret
or
dec
ret
xchg
mov
popl
test
lret
fildll
lret
es
jge
xor
cmp
gs
mov
clc
jge
jnp
mov
mov
pusha
sbb
inc
sub
div
or
repnz
fdivl
popa
push
imul
push
jge
std
mov
push
push
popf
pop
xorb
add
xor
sarl
xchg
lods
or
data16
dec
jae
mov
addb
xlat
mov
push
add
ret
lret
inc
and
ss
xor
push
out
mov
mov
pop
daa
loope
mov
jg
daa
stc
popf
lea
iret
adc
in
popf
shll
adc
mov
in
pop
xchg
rcll
or
mov
push
idivb
mov
fmull
mov
and
test
push
cli
add
fisubs
mov
sub
dec
pop
jnp
sub
stc
fcoml
mov
movsl
pop
or
in
push
xor
leave
ja
adc
mov
pop
dec
mov
mov
xor
xor
inc
orl
sahf
sub
ja
xor
mov
jae
xor
dec
mov
sti
notl
pop
add
sbb
cwtl
imul
jecxz
cli
push
cwtl
or
loop
test
inc
inc
aam
cld
shlb
aam
imulb
jno
out
movsb
out
fs
xor
scas
inc
dec
loop
imul
sbb
adc
imul
nop
out
push
fnstenv
sbb
or
add
sub
mov
inc
sub
shlb
mov
sub
and
mov
cmc
inc
mov
add
aaa
xor
cltd
push
mov
cmpsl
fdivrl
push
fbstp
xchg
out
mov
scas
loopne
and
imul
push
cmpsl
xor
adc
add
pop
shl
inc
fwait
icebp
mov
mov
es
pop
cmp
lods
data16
outsb
jae
notb
xlat
ficomps
in
cltd
outsl
out
add
lcall
sbb
and
mov
jmp
lock
flds
aam
mov
lods
mov
pusha
push
inc
xchg
mov
stos
xor
out
cld
cmpsb
adc
insb
cmp
push
jno
pop
push
mov
mov
xchg
lds
push
stos
sub
jg
call
int3
sub
fnstenv
xlat
add
xchg
and
xchg
loopne
push
aam
mov
xor
jmp
jmp
arpl
divl
lret
stos
mov
pusha
cmpl
xchg
data16
int3
xchg
in
add
jle
jl
push
pop
daa
cmp
dec
jno
xor
aad
sbb
fs
dec
in
dec
sub
push
stos
ret
dec
sub
stos
stos
pop
int3
ficomps
bound
es
sbb
arpl
sbb
sbb
mov
xchg
addr16
mov
test
sbb
int
mov
mov
pop
xchg
divb
xchg
das
push
dec
inc
dec
sub
dec
inc
test
add
mov
mov
sub
cmp
cmp
sub
mov
push
adc
pop
out
loop
fidivrl
sbb
push
mov
scas
sub
call
push
jge
test
dec
adc
addb
lock
inc
loopne
add
jmp
mov
mov
sbbl
mov
inc
inc
add
mov
stos
sub
stos
xchg
les
lret
sbb
inc
adc
mov
sbb
push
and
cmp
movsb
dec
mov
pop
movsl
mov
test
loop
mov
push
imul
aam
and
stc
fwait
sti
rcrl
push
rol
fs
adc
js
mov
sarb
cwtl
rcrb
dec
add
movsl
ss
pop
lcall
push
aad
icebp
push
pushf
adc
lods
andl
aad
cmpsl
rclb
xchg
nop
lahf
sbb
imull
scas
mov
xor
nop
sbb
mov
mov
and
jno
ja
mov
arpl
lods
lcall
shlb
lcall
stc
into
mov
xor
inc
or
sub
fnstsw
lea
sar
negl
mov
mov
gs
out
imul
pusha
xlat
push
cmp
idiv
push
fisubs
and
pop
mov
cld
pop
dec
xor
test
cmp
rorl
mov
push
pop
dec
pop
xor
ror
scas
imul
icebp
fsubrl
mov
cmpsb
pop
xchg
mov
fdivs
mov
ret
iret
cld
cmp
mov
hlt
mov
fidivl
dec
sbb
rcrb
incb
push
loope
sbb
icebp
jb
xor
inc
fisubrs
mov
mov
mov
cmp
sub
popf
dec
add
xor
mov
std
fistpl
jmp
mov
add
push
mov
mov
movl
insl
or
mov
sbb
sar
cmp
shll
addr16
ret
stos
add
pop
sahf
out
jge
pop
adc
fistps
add
xor
mov
data16
and
xor
ss
imul
xor
push
nop
jg
int3
sbb
xchg
gs
in
xchg
push
or
pop
jp
movsl
lods
lahf
dec
out
xor
cmpsb
pop
xchg
inc
xor
int3
jp
xor
cmp
sub
or
dec
sbbb
sub
outsb
rclb
dec
dec
ret
loope
movsl
lret
movsl
add
movsb
stc
ret
sub
out
inc
mov
push
loop
stos
stos
xlat
in
xor
pop
pop
dec
mov
std
stc
jno
push
lret
mov
rcll
sub
xchg
mov
add
mov
jae
inc
rorb
pop
add
jno
ds
shrl
adc
rcll
cmp
dec
stc
in
cmp
pop
inc
data16
sub
push
pushf
sub
sbb
inc
std
inc
jno
out
inc
sub
clc
gs
in
inc
lods
adc
dec
movsl
ss
or
inc
jno
js
or
sbb
cmp
fwait
jg
inc
test
lea
add
inc
in
pop
stos
xchg
pop
scas
addr16
mov
roll
xchg
out
mov
stos
push
xchg
sbb
jno
loopne
jo,pt
sbb
adc
mov
cld
or
enter
xor
inc
cmpsb
and
jne
scas
shll
in
add
lret
sub
cmp
push
fbstp
repnz
xchg
scas
dec
adc
mov
pushf
adc
insl
sub
push
ficoml
or
fimuls
sti
scas
mov
fstps
xchg
aas
jp
push
pop
or
mov
add
adc
add
inc
xor
insl
jl
lcall
add
xlat
pop
or
fsubrs
mov
shlb
cmpsb
and
sar
lods
xchg
popa
shlb
dec
push
stos
notl
icebp
sahf
xor
xchg
lods
mov
mov
sbb
cmpsb
gs
pop
xchg
sbb
sbb
push
jae
sub
sub
sarb
jns
or
mov
mov
sbb
xor
or
sub
cmpsl
iret
cmpsl
cmp
cmp
or
mov
push
sbbl
sti
popa
rcrb
mov
mov
insl
dec
daa
cmp
repz
sub
jp
lret
dec
cmp
or
inc
shld
mov
jmp
fwait
and
ret
mov
sbb
lods
or
xchg
push
inc
xchg
hlt
mov
daa
xchg
mov
sub
pop
jb
inc
loop
xchg
je
mov
xchg
sbb
das
jo
dec
in
leave
dec
test
adc
icebp
add
gs
mov
addr16
cld
mov
or
orb
cli
in
jecxz
ja
mov
or
shrb
ret
sbb
mov
mov
push
cmc
mov
cmp
jl
add
out
or
ret
mov
fcmove
push
aad
jns
in
sub
orl
cmc
out
lea
stos
add
mov
fstpt
mov
lods
mov
cmp
scas
xor
jmp
loope
mov
push
or
in
cmp
sub
inc
cmpsb
stos
dec
cmp
aas
hlt
aad
test
addl
movsb
pop
insb
int3
imul
je
fstl
adc
dec
dec
into
and
cmp
pop
mov
sbb
lcall
jae
and
shll
test
jnp
subb
dec
out
mov
pop
mov
jg
movsl
or
aad
cmp
and
and
lcall
scas
decl
pop
pop
lret
lods
fisttpll
cs
mov
movb
pop
mov
jnp
icebp
adc
jne
pop
inc
xorb
dec
and
hlt
push
xlat
out
int3
xchg
das
xchg
lds
insb
mov
ret
inc
repnz
loop
cltd
jge
dec
ds
cmp
xchg
sbb
mov
pop
jg,pn
mov
das
test
je
push
push
cld
shrb
push
push
xchg
shl
arpl
cmp
fmuls
movsb
push
mov
rcrb
sbb
imull
or
je
jnp
xchg
fsubrs
stos
pop
pop
jae
mov
pop
nop
inc
fistps
dec
and
jg
xchg
xor
lcall
ja
ja
inc
push
dec
inc
ret
shr
sub
mov
ficompl
adc
shrl
sub
xchg
mov
test
fdivs
push
cmpsb
cmpsb
iret
mov
sahf
addr16
and
imul
mov
xlat
ja
fwait
orw
mov
pusha
xchg
test
jno
adc
hlt
les
lcall
lea
test
xor
sub
mov
push
loop
and
cwtl
mov
xlat
repnz
push
push
mov
mov
xor
dec
inc
pop
data16
inc
movsb
ret
mov
pop
mov
adc
cwtl
add
xchg
sti
jp
aad
in
aad
repnz
sbb
jp
fs
imul
testb
sbb
mov
mov
sub
push
push
rclb
jo
mov
jbe
arpl
dec
in
fabs
mov
jmp
cmp
mov
mov
testl
xor
sti
jns
cmpsl
in
insl
dec
sbb
lds
jns
cmpl
push
inc
in
or
mov
shl
xchg
xchg
xlat
pop
pushf
or
rorb
and
std
jo
jnp
sub
pushf
mov
stos
sti
les
int
pop
iret
sarb
insl
icebp
jmp
int3
jg
sub
mov
jne
aas
daa
fstpl
pop
jae
aaa
loopne
popa
add
imul
lret
jae
inc
xchg
pop
jmp
dec
rol
mov
inc
lods
xlat
mov
push
xor
cmp
aad
into
cltd
mov
mov
mov
jnp
mov
pusha
pop
xor
call
je
aam
test
push
push
cltd
jo
mov
rolb
mov
in
jmp
pop
cmp
add
cmp
sbb
cmp
aaa
mov
clc
and
push
jbe
jbe
cld
and
xlat
sahf
xchg
test
iret
es
enter
xor
jb
gs
mov
cltd
icebp
sub
mov
pop
movsb
push
hlt
int3
pop
and
ss
ret
int3
adc
mov
stc
xchg
inc
or
js
mull
das
movsl
add
insb
push
data16
or
and
hlt
addr16
fiaddl
adc
dec
sbb
jmp
lret
jle
lret
xchg
adc
and
call
adc
xor
loope
outsb
cltd
cmp
mov
xchg
cmp
push
dec
lds
aad
out
cmp
aam
test
jge
mov
scas
xor
pop
loop
rclb
xor
in
xchg
pop
jmp
repnz
dec
jle
fs
cmp
test
repnz
fidivs
sbb
aam
sub
outsb
mov
mov
jno
inc
xor
cmpsb
jmp
push
add
inc
arpl
jb
fstpt
cli
xor
ja
jns
lock
mov
mov
jle
cmp
xor
sub
inc
dec
mov
lahf
sub
movsl
sub
push
repz
push
push
nop
in
das
or
bound
xchg
test
push
out
stos
loop
shlb
sbb
aaa
push
out
enter
das
mov
pop
xchg
test
imul
testl
pop
inc
jb
daa
cmpsl
int
add
sbb
or
fildl
mov
in
add
or
xchg
mov
lods
cwtl
lock
imul
xor
pop
scas
jne
xor
test
sbb
pop
cmp
push
in
dec
mov
push
sbb
mov
cmp
xor
add
arpl
ds
in
in
test
out
dec
sub
aad
inc
sub
imul
enter
icebp
sbb
cmp
push
xor
dec
stc
data16
jo
mov
mov
adc
dec
mov
sbb
push
loop
sbb
mov
sub
sarl
mov
cmp
or
push
cmp
push
mov
mov
mov
mov
cmp
mov
sarl
mov
pushf
mov
outsl
out
push
out
jl
adc
mov
sbb
and
shrb
mov
or
lret
add
pop
mov
hlt
lods
push
lds
lret
pop
stc
mov
pop
mov
std
sub
mov
sbb
jg
jns
mov
or
sbbb
je
fucomp
mov
xchg
hlt
stos
cmp
mov
enter
cwtl
lea
ss
or
dec
mov
add
sub
shll
leave
push
enter
push
iret
adc
adc
mov
cmp
fimuls
pusha
addb
and
sub
js
aad
mov
ret
movsl
mov
fdivp
loopne
out
xchg
loop
cmc
inc
xor
cmpsl
adcl
adc
ds
lcall
pop
test
hlt
dec
lods
fidivl
pop
mov
jne
xor
shll
inc
negb
cmpl
mov
or
pop
mov
sub
cmp
push
xor
adc
loop
in
or
jo
repnz
pop
dec
clc
jno
xor
movsl
imul
mov
fstpt
ss
lds
adc
gs
mov
out
xor
sti
sbb
ja
pop
sarl
movsl
xor
jp
popl
sub
mov
xchg
call
dec
iret
mov
out
fistl
js
mov
and
mov
add
movsb
lds
lcall
icebp
push
and
mov
fadd
jne
inc
mov
data16
inc
cld
xchg
mov
aaa
popf
adc
mov
mov
pop
loope
inc
push
mov
cwtl
dec
push
ja
mov
ret
imul
dec
imul
or
or
fwait
insl
popa
out
jnp
xchg
mov
add
jae
mov
test
test
add
movsl
adc
mov
and
xchg
fisubrl
pop
lret
jo
fstpl
ret
cmc
push
sub
xchg
mov
test
sub
icebp
inc
rcr
popf
push
mov
jp
xor
loope
and
add
call
jbe
mov
dec
xchg
xor
pop
jo
repnz
add
mov
test
push
adc
xchg
jne
xchg
testl
negb
pop
add
inc
mov
jl
test
sbb
insb
push
or
mov
sbb
clc
mov
ret
rclb
fst
fisubs
stos
scas
xchg
mov
jno
fadds
adc
sti
popa
and
cs
jno
mov
movsl
sti
flds
pop
xchg
sahf
xor
pop
mov
cmp
push
imul
cmc
xacquire
inc
ljmp
or
orl
gs
outsl
pop
add
jno
ljmp
xchg
pop
nop
pop
les
inc
insb
sbb
jg
push
xor
xchg
pop
shrb
in
dec
in
cmpsb
bound
xchg
cmc
in
xor
xor
in
mov
fnstsw
push
mov
das
mov
popf
inc
mov
or
jbe
dec
out
mov
in
add
xchg
arpl
lea
jo
pop
sbb
testl
add
aaa
or
out
test
les
mov
sub
les
leave
push
in
push
sbbb
jp
daa
fsubrs
xor
andl
repnz
pushf
sti
mov
inc
or
insb
gs
sbb
lods
sub
shll
or
sbb
xor
push
clc
outsl
xchg
aaa
cli
int
cmp
int
cli
fwait
sbb
add
or
iret
cld
xchg
dec
mov
int3
pusha
jecxz
add
fidivrl
out
sbb
mov
pop
sti
xchg
hlt
out
lds
icebp
in
fs
shll
leave
sub
cli
daa
ret
xor
or
cli
cmp
xor
das
xchg
lret
and
or
rcrl
inc
jns
cmpsl
jae
nop
lcall
ss
mov
xor
movsl
iret
add
pop
inc
ret
mov
ficomps
insl
out
call
enter
fists
js
sbb
pop
push
icebp
imul
pop
arpl
pop
in
aas
dec
in
sub
push
jae
lods
in
cmp
and
inc
mov
clc
cmp
stos
xchg
mov
notb
fcomp
jge
jle
movsb
fs
les
inc
lea
xchg
adc
mov
inc
arpl
jb
pop
cmp
or
mov
mov
ffreep
movsb
dec
test
int3
insb
cmp
adc
xor
push
fs
call
pop
mov
std
insb
adcl
shrb
mov
nop
xor
sub
cmp
jg
and
mov
mov
push
xchg
lahf
xor
mov
and
xchg
pushf
test
inc
stos
cld
add
cs
push
cmpsb
dec
mov
addr16
fwait
cs
shrb
mov
in
xchg
xchg
repz
xchg
or
fisttpll
inc
insl
mov
xchg
rcrb
ja
fldl
jnp
outsl
mov
not
or
inc
leave
push
hlt
or
test
mov
das
jecxz
or
and
xor
mov
scas
jle
push
pusha
int3
mov
mov
repz
xchg
ss
xor
xor
xor
inc
in
or
cltd
xchg
subb
pop
ss
jg
loope
fmuls
cmpsl
sub
jmp
sbb
lea
mov
mov
in
fstpl
daa
or
sub
dec
mov
das
mov
xor
mov
xlat
iret
inc
xlat
repz
stc
decb
std
mov
cltd
outsb
xor
outsl
adc
and
subl
ljmp
into
mov
sub
push
sub
sub
mov
push
sbb
dec
das
mov
lret
mov
sub
stos
lods
add
into
sbb
mov
push
cs
lea
lret
jg
lahf
out
iret
inc
sbbb
push
sbb
mov
movsl
repnz
or
push
jae
cmpsb
rolb
pop
pusha
mov
push
in
clc
fwait
ret
cli
mov
sbb
mov
call
leave
psubq
test
adcb
pop
mov
insb
xor
out
adc
mov
aaa
data16
sub
pushf
mov
pop
dec
sbbb
xor
cmp
adc
push
inc
cmc
andb
test
pushf
mov
popa
sub
sub
jl
loop
daa
int3
andb
in
jle
cmp
loopne
inc
mov
xchg
ror
sub
shll
jne
out
mov
cmp
mov
int
mov
mov
int
mov
and
fbstp
in
es
test
insl
mov
cmpsl
enter
mov
cmpsl
push
or
fstpt
and
adc
jge
mov
push
inc
inc
jmp
mov
mov
sbb
adc
fisttps
loope
and
adc
ljmp
roll
lea
jp
in
inc
popa
aaa
aas
mov
movsb
pop
jns
scas
push
mov
jno
xchg
push
mov
lock
xchg
and
lcall
push
jp
adc
cli
sub
sysenter
pop
xor
push
adc
pop
mov
frstor
xchg
fbld
mov
rolb
nop
movl
cwtl
or
jnp
push
mov
pop
test
pop
loope
dec
xchg
cmp
cmpsb
push
sahf
adc
cmc
repnz
les
out
adc
lock
xor
andl
js
pushf
xor
jle
xchg
or
mov
dec
pop
aaa
loopne
fdivr
das
sub
push
out
dec
mov
shl
pop
sti
mov
call
sti
inc
xlat
scas
mov
pop
andb
jg
pop
sbb
push
bound
xchg
lret
test
mov
push
and
xchg
mov
inc
sbb
repz
fidivrs
call
pop
sbb
dec
insl
ljmp
rcll
scas
cmp
inc
idiv
mulb
jbe
adc
fdivl
dec
mov
adc
push
inc
mov
lods
or
dec
mov
jae
je
outsb
aad
addr16
cld
in
xor
ljmp
int
push
sar
xchg
mov
pop
fstpl
repz
cmpl
sub
jo
ret
iret
push
ja
xor
loop
or
jle
push
mov
leave
cmp
std
sarl
xchg
lock
pop
or
pushf
adc
fisubrl
dec
mov
adc
shrl
fwait
and
mov
or
and
lcall
jle
sub
out
add
lods
in
xor
js
jo
mov
scas
scas
jp
or
or
arpl
in
cmp
scas
inc
loop
daa
mov
or
fcmovnu
aad
sub
sahf
inc
fists
mov
sti
mov
dec
bound
mov
in
or
sbb
and
jg
push
stc
jl
fadds
rep
adc
add
mov
push
pop
scas
daa
loop
repnz
rorl
add
shll
jne
sbb
add
pushf
jnp
int
out
cmc
mov
les
sbb
xchg
mov
sbb
mov
inc
mov
jbe
mov
shlb
loope
dec
loop
movsb
je
or
jp
xor
out
repz
sub
aad
icebp
inc
jge
push
je
lea
fdivs
es
out
jl
dec
or
mov
sub
adc
sbb
daa
jo
popa
je
lahf
cmp
sti
pop
sbb
test
or
xchg
jg
jmp
xor
insb
mov
and
ja
or
cmp
test
cmp
lret
push
ss
mov
jecxz
adc
xchg
test
aaa
in
add
scas
icebp
pop
mov
leave
push
mov
xor
dec
lods
sbb
jnp
ficompl
xor
mov
and
xor
xchg
cli
data16
arpl
cs
mov
adc
xchg
pop
xor
pop
dec
pop
cmpl
insl
adc
push
jbe
adc
cld
xor
lock
sbb
ret
push
arpl
push
pushf
adc
stos
xchg
addr16
sbb
sti
or
jmp
out
fs
bound
dec
mov
push
icebp
outsl
fstl
xlat
es
es
xorl
jno
cmc
hlt
jmp
mov
adc
mov
fmulp
sbb
out
faddl
dec
adc
cmpsb
xchg
jne
gs
pop
adc
aad
ja
push
mov
repnz
mov
fwait
aam
data16
clc
and
sti
adc
mov
pop
test
idivb
pop
pop
and
ss
sub
iret
adc
xor
jmp
and
lcall
mov
icebp
mov
call
add
inc
jbe
push
or
xor
das
movsl
scas
cmc
lds
dec
gs
add
fs
hlt
xor
mov
push
mov
mov
sbb
fdivs
cmp
sbb
pushf
and
mov
ret
into
add
pop
adc
imul
gs
adc
jae
push
push
and
es
push
push
xor
hlt
push
mov
ss
sbb
mov
sub
cld
addr16
adc
aam
jle
shll
xor
jge
std
inc
mov
insb
lcall
sub
jl
sti
ficompl
add
jmp
decb
mov
outsb
push
push
ficompl
leave
xchg
ret
cmpsb
mov
jecxz
xor
mov
arpl
outsl
imul
int
cmp
std
addr16
insb
jecxz
mov
int
lock
scas
mov
mov
lret
jno
mov
lret
push
shrl
mov
mov
pop
dec
scas
xor
pop
add
aam
hlt
dec
test
cmc
xor
mov
stos
outsl
enter
inc
js
fwait
ucomiss
mov
nop
lea
hlt
xor
dec
je
adc
lret
fisttpl
std
insl
pop
int
xlat
movsl
push
sbb
cmpsb
addl
mov
insl
push
inc
mov
aam
cli
jp
and
pusha
outsl
repz
mov
js
mov
sub
inc
int
into
movsb
dec
inc
push
jecxz
dec
fnstcw
aaa
sti
and
fs
iret
pushf
sub
xchg
fstpt
sub
ret
xor
jb
adc
lds
cmc
xchg
lods
and
mov
mov
pop
aaa
subb
dec
ja
enter
gs
pop
aaa
cmc
mov
mov
push
cmp
mov
add
jle
inc
mov
scas
jl
aaa
or
inc
packssdw
icebp
jne
aad
repz
xchg
in
bound
clc
lcall
jb
pusha
int3
sbb
cmpl
inc
fisubrs
pop
adc
cmc
sbb
jl
inc
dec
mov
mov
cmpsb
dec
sub
mov
jne
in
mov
inc
pop
jne
enter
or
loope
repz
test
je
int3
pop
or
fmuls
scas
inc
push
nop
mov
jmp
push
push
mov
je
sub
mov
xchg
xchg
mov
inc
dec
pop
sarb
xchg
sahf
insl
jg
loop
sbb
cmp
leave
lahf
mov
cmp
push
jae
dec
cmp
jle
sarl
push
mov
cwtl
out
inc
add
stos
shrl
xchg
xlat
fsubrp
xor
js
add
icebp
aas
incb
jge
push
js
xor
popf
nop
dec
stos
or
rorl
and
das
nop
andb
adc
lret
scas
lcall
int
aad
gs
icebp
cli
mov
push
cs
scas
fbld
mov
xchg
push
cmpsb
inc
sbb
jo
out
shlb
push
movsl
and
xchg
xor
das
mov
pop
xchg
xor
mov
popf
mov
sbb
nop
jns
fcmovnu
call
pop
int
pop
sbb
pop
pop
aam
cmp
aaa
xorl
xor
push
or
xor
adc
fildll
fucompp
mov
out
add
lock
pop
movsl
and
xlat
pop
xchg
fsubrl
sub
dec
mov
stos
out
push
cmp
pop
fdivrs
mov
out
cmpsb
test
xchg
jns
cld
fisttpl
sbb
rclb
popf
xchg
push
and
into
addl
pop
push
adc
xor
and
movsl
pop
and
cmovbe
daa
scas
std
mov
cmp
mov
mov
scas
insb
lret
js
je
adc
xchg
push
and
jnp
add
xchg
push
cmpsl
test
xlat
jbe
in
push
add
cmpsl
lods
cmpsb
sub
sbb
push
sub
mov
cmp
jnp
pop
jne
pop
cwtl
dec
sbb
mov
sti
in
dec
push
fmul
popf
sbb
dec
ds
mov
xchg
xlat
into
icebp
cmpl
aaa
das
fsub
das
int
out
dec
fnstcw
cmpsl
and
add
das
mov
dec
lea
cmp
mov
jl
inc
add
dec
or
fnstenv
and
pop
sub
mov
or
sub
push
sub
dec
int
dec
mov
xlat
push
sbb
in
fcmovnu
aaa
leave
pop
add
loope
adc
shll
mov
aas
mov
push
mov
insl
fistpll
push
sarb
xchg
fwait
scas
add
movsl
das
aad
mov
xor
pusha
xchg
sub
popf
arpl
push
in
pop
cmp
fucomip
cltd
pop
jmp
cmpb
sbb
cld
push
gs
and
pop
shrl
pop
cmp
pop
mov
in
imul
sbb
popf
sbb
popf
lret
dec
ficoml
les
and
xchg
adc
sub
flds
jbe
xor
pop
movsb
jb
adc
mov
and
mov
mov
std
sbb
xchg
push
insl
lahf
pop
dec
sahf
xchg
imul
int3
mov
outsl
je
incl
lret
out
mov
jge
pop
sub
outsl
pop
cmp
xor
jb
das
push
mov
lods
or
cs
stos
dec
inc
gs
lret
sub
mov
jge
mov
jp
jp
mov
js
push
sbb
dec
add
repz
mov
imul
mov
and
lcall
fmull
rcrb
adc
and
mov
cld
aas
outsl
mov
cwtl
nop
scas
aaa
icebp
push
nop
nop
add
stos
aaa
lcall
sbb
mov
cmp
fwait
inc
inc
jno
cmp
or
sub
dec
gs
call
fists
fs
push
push
add
lret
inc
leave
daa
dec
lret
cmp
xchg
jl
jb
in
in
adc
cmp
lods
xchg
ret
and
cmp
in
fwait
adc
sti
icebp
inc
xchg
xchg
jmp
ret
pushf
into
cmc
inc
sbb
xchg
ret
cwtl
mov
push
aaa
mov
mov
rorb
cmp
mov
imul
mov
xchg
push
sbb
vcvtsd2si
mov
fstl
lods
pop
lret
rcrl
fsubs
imul
and
scas
sbb
mov
lock
mov
mov
popa
dec
xor
aam
cld
jg
imul
adc
insl
xor
outsl
mov
push
xor
push
movsb
or
loopne
gs
mov
jo
and
mov
in
mov
icebp
leave
sarl
xor
xchg
adc
fisttpll
mov
cmc
jl
mov
loopne
cmp
pop
mov
jb
mov
pop
ret
inc
sub
cmp
rclb
fcompl
pusha
mov
cli
scas
xor
xchg
notb
popf
repz
mov
adc
dec
jne
dec
sti
cltd
adc
xchg
dec
mov
cmp
and
xchg
lods
dec
scas
pop
jg
mov
sbb
testl
pop
mov
push
and
stos
arpl
xor
xchg
test
add
test
pop
and
hlt
cmp
aaa
sub
cmc
nop
fs
cwtl
jnp
int3
out
mov
jg
cmp
fcom
mov
scas
imul
cwtl
dec
cmc
dec
insb
cmovae
iret
aas
pop
pop
xor
inc
jmp
jo
in
es
mov
and
stos
sarl
out
aas
cmp
out
cmp
bswap
xor
mov
push
xor
les
cwtl
xchg
pop
faddl
cmp
lds
cwtl
pushf
jno
and
shlb
lock
dec
pop
frstor
xor
jle
mov
cmpsl
popa
int3
mov
xchg
fwait
and
sbb
sub
scas
lea
hlt
inc
inc
dec
sub
out
sbb
mov
ss
gs
mov
mov
xchg
fstl
in
cmpsb
popa
repz
outsl
sti
sub
mov
jp
jp
scas
pop
aaa
int
test
fldcw
mov
jmp
insl
push
push
leave
andl
movsb
add
aad
inc
mov
pop
cmp
sub
and
mov
insl
mov
xor
std
pop
mov
jl
outsl
jecxz
stc
or
je
mov
shl
adcb
fsubrl
mov
test
cmp
sbb
jecxz
push
js
insl
lds
into
mov
pushf
pop
xor
jns
jle
mov
fadds
cmp
jle
xchg
and
rorb
cs
adc
or
xlat
dec
xchg
int3
pop
cltd
loope
test
jo
add
push
bound
cwtl
sub
push
push
adc
and
lahf
das
stos
pop
mov
fs
pop
adcb
decb
or
lahf
int
test
cmp
adc
push
cltd
xchg
test
decl
in
push
orb
mov
or
push
scas
sub
xchg
xor
nop
test
mov
add
push
push
ds
out
shll
add
imul
pop
and
or
aas
ja
pusha
or
xchg
lahf
dec
lods
jne
and
and
inc
mov
dec
arpl
and
stos
sub
fstpl
pushf
push
ret
dec
or
xor
inc
pop
jmp
push
sub
xor
jmp
ljmp
pusha
xor
lcall
lret
jle
out
inc
push
test
add
xor
adcb
pop
fwait
scas
ret
pop
lea
add
clc
repz
in
inc
js
inc
jecxz
incl
cmp
je
mov
outsl
sarl
push
xchg
pop
mov
iret
scas
mov
or
xchg
cmpsl
jnp
daa
pop
sub
sub
pop
enter
xchg
inc
pop
inc
jb
test
outsl
mov
fisubrl
jns
das
push
add
pop
jne
rorb
cmpb
cmpb
or
in
push
mov
or
push
xor
stc
andb
add
adc
adc
inc
cld
mov
andb
adc
pop
xlat
cmp
test
negb
dec
add
xor
xchg
adc
mov
jne
mov
sub
in
icebp
cmc
out
dec
loope
add
ljmp
mov
sub
xchg
gs
pop
cmc
lock
sbbb
cwtl
xor
xchg
enter
dec
or
xchg
mov
mov
aaa
jmp
sbb
xchg
les
push
rolb
xlat
enter
and
add
sub
rcrl
ret
jnp
decb
xchg
and
mulb
jne
loope
lret
sbb
in
shl
mov
push
lahf
inc
jno
mov
jns
and
mov
arpl
adc
in
ffreep
xor
mov
mov
push
leave
adc
orl
je
imul
imul
xchg
scas
xlat
mov
push
mov
pop
lret
addr16
mov
lret
mov
les
jle
lds
fists
mov
je
neg
cmp
or
sub
test
lret
push
loope
mov
add
les
cmp
inc
push
pop
jae
fnstcw
sahf
mov
mov
mov
push
lret
mov
aaa
pop
jno
aam
jae
aas
jne
addl
push
cmp
xchg
push
adc
push
fs
xchg
or
outsl
ret
sub
sub
fsubl
mov
daa
fidivl
sub
out
aad
in
data16
out
push
je
dec
mov
xchg
ljmp
adc
sub
push
scas
lret
cld
mov
mov
xor
jl
dec
mov
insl
sahf
sub
mov
sbb
fldcw
push
les
mov
fwait
sbb
mov
push
jecxz
inc
pusha
cmp
dec
and
cltd
push
push
adc
pushw
shl
sub
andb
or
addb
cld
sbb
lret
ljmp
cltd
push
je
cmp
xchg
pop
fwait
adc
jno
lahf
repz
aam
jns
into
add
mov
scas
add
add
fldt
pop
mov
push
xchg
and
push
mov
mov
icebp
sbb
sbbl
sarb
push
ret
jl
dec
mov
mov
insl
cltd
dec
xor
mov
mov
pop
gs
insl
or
mov
pop
push
es
enter
hlt
xor
repz
into
aam
sbb
dec
jmp
rcrb
pop
shrd
rcll
cmpsl
jmp
xchg
inc
inc
push
mov
insl
aam
mov
ret
sbb
cmpl
jnp
pushf
loope
pop
repnz
call
sbb
cmp
jecxz
jnp
imul
or
pop
int3
pushf
cmpsl
popf
inc
pop
mov
mov
mov
sbb
pop
and
ret
xorl
sub
inc
enter
pusha
mov
int
sbb
mov
or
cmp
arpl
mov
xchg
cwtl
sarl
xor
lret
insl
sub
push
jno
into
stos
cmp
xchg
sub
rorb
repz
or
sbb
fdivrl
in
xor
adc
hlt
and
xchg
das
ret
ds
pop
mov
xor
jl
push
cltd
dec
adc
pop
fidivl
call
or
jp
addr16
jb
inc
jns
xchg
fstps
insl
add
add
mov
out
adc
push
mov
rcl
lock
ds
add
sti
int3
fimuls
inc
nop
lret
sbb
mov
adc
dec
jmp
mov
fdivr
into
push
mov
dec
push
xorb
xor
inc
cli
push
fwait
into
fucom
cmc
idivw
scas
in
test
or
std
daa
cmpl
aas
cs
mov
lret
dec
jg
sets
movsb
sbb
in
pop
aad
sahf
ret
shrl
or
ficoml
jb
mov
in
dec
jge
mov
loop
push
arpl
pop
pusha
rcrb
test
fists
hlt
data16
adc
int
pop
and
mov
jbe
fstl
push
shrb
adc
sahf
sub
xlat
and
in
scas
sti
xor
sbb
pop
movsb
sbb
dec
fists
dec
shl
or
sub
mov
mov
insb
mov
jmp
mov
pop
out
shlb
sarl
adc
out
movsl
dec
roll
loope
imul
xor
jae
or
jae
inc
outsl
push
cmp
ss
jmp
ret
cld
inc
xor
int
ret
cmp
jo
and
mov
and
push
mov
out
hlt
lods
add
pop
cwtl
pop
popa
jl
sub
push
sbb
sti
in
sbb
cmp
mov
popa
fs
sbb
mov
shrb
icebp
gs
lods
in
inc
clc
inc
cmp
mov
sub
pusha
add
sbb
push
inc
inc
jo
test
mov
or
popa
push
mov
std
and
pusha
popa
sub
push
js
pop
js
xlat
leave
pop
ret
mov
xor
aam
xlat
mov
jo
pop
jp
adc
pop
mov
push
loope
std
lret
ret
adc
cwtl
xlat
into
xor
push
jbe
lcall
in
lock
adc
mov
js
lcall
mov
pop
add
ja
mov
cmp
repz
mov
jle
push
pop
mov
xchg
outsb
imul
and
enter
shlb
or
lds
mov
or
add
mov
jg
jg
mov
out
push
stos
shll
cmc
adc
pop
or
outsb
sbb
inc
hlt
jne
leave
repz
jg
push
adc
cltd
int3
push
popw
shrl
xor
mov
js
pusha
xchg
mov
mov
dec
lret
lcall
mov
shlb
ljmp
je
loope
adc
outsl
sub
cltd
xchg
push
add
cmpsl
mov
js
and
push
mov
popf
mov
pusha
in
push
daa
pop
orb
enter
xchg
int3
shl
std
push
bound
int
xor
dec
adc
xchg
ljmp
outsb
js
pop
ja
pushf
jl
stos
test
jle
icebp
fwait
push
cwtl
xor
inc
xchg
dec
js
std
notb
xor
sbbl
xchg
cmp
mov
push
je
stc
and
adc
cmp
popf
dec
and
fisubrs
jle
pusha
test
jo
pop
test
mov
mov
aaa
sub
dec
mov
fsubrl
xlat
push
fimuls
shr
adc
xor
shrl
ret
or
rcr
inc
cmpsl
pop
push
std
inc
repz
sub
xorb
movsb
pushf
scas
fsubs
fwait
dec
mov
xor
out
insb
sbb
hlt
cmp
push
xor
adcl
jg
ljmp
call
xor
push
rcr
push
jmp
aad
gs
push
xor
sahf
cmpl
cwtl
cmp
push
sbb
push
lds
inc
movsl
stos
xor
lods
push
stos
lds
sbb
dec
insb
dec
shr
aas
and
clc
movsb
pop
push
aam
rcrb
stos
rol
jnp
jmp
daa
jmp
adc
push
jo
out
mov
xor
les
fisubrs
bound
or
int
enter
pusha
add
mov
push
testb
stos
fidivl
in
sub
fsubl
xchg
pop
repz
adc
xchg
or
in
subl
shlb
ja
int
cmp
adc
add
inc
cltd
jmp
in
stos
pop
add
pop
fldl
cmp
test
mov
out
out
es
pop
pop
cmp
adc
mov
mov
add
mov
push
mov
inc
ror
daa
in
mov
mov
ljmp
cwtl
imull
mov
push
addr16
jnp
loope
popa
fldenv
and
mov
inc
test
sbb
sahf
out
rorb
cltd
dec
out
mov
mov
push
mov
jnp
adc
enter
pop
xchg
lods
data16
divl
push
sub
sbb
dec
sub
pop
jnp
stos
xchg
icebp
sub
xlat
out
inc
ret
out
jle
push
jbe
cld
jg
clc
cli
fisttpl
push
lret
push
dec
xchg
mov
lea
cli
xchg
addl
lods
ja
push
inc
notb
fldenv
hlt
mov
inc
div
sub
cld
insb
jb
mov
push
xchg
push
call
push
das
bound
jl
sbb
mov
push
push
adc
loope
push
mov
scas
push
and
jl
jbe
mov
lcall
mov
div
xor
xchg
xchg
mov
icebp
push
insl
inc
lahf
mov
xor
pop
pop
sarb
xchg
pushf
mov
out
xchg
inc
push
stos
lods
sub
dec
in
mov
stos
in
sahf
push
adc
jno
add
icebp
mov
imul
and
sub
ret
insl
sub
arpl
lcall
inc
xor
fs
lret
rolb
pushf
enter
pop
mov
xchg
icebp
and
push
add
mov
ret
and
xor
call
jnp
in
nop
xor
rcll
push
in
sarb
jle
lock
inc
lods
cs
mov
sub
loop
imul
mov
ret
fnstenv
arpl
jge
es
in
sub
sbb
adc
jo
lea
lock
push
adc
xor
inc
cld
and
mulb
xchg
push
in
outsb
arpl
push
outsl
push
scas
mov
pop
lret
imul
or
sbb
enter
out
or
rolb
popa
xchg
inc
push
ret
inc
or
movsl
dec
pop
shlb
aad
sub
fucomp
test
fcomp
popf
push
cld
lret
sbb
mov
xchg
xchg
in
mov
scas
ret
inc
sahf
dec
adc
stos
xor
mov
xchg
and
push
rorl
shlb
sbb
or
pop
or
stos
inc
inc
jecxz
cmpsl
xchg
rcll
andl
pop
mov
xchg
inc
jb
push
lahf
xchg
push
adc
outsl
inc
sub
add
add
jg
sbb
adc
mov
pop
mov
imul
xchg
aad
xor
scas
jae
pop
add
hlt
outsb
jnp
sub
xor
push
fdivrl
mov
xchg
dec
lods
mov
or
cwtl
mov
push
popa
jl
dec
mov
xchg
jmp
or
jp
jge
lret
fwait
jo
clc
mov
cmp
addr16
popa
outsb
nop
fsubrs
or
lea
or
push
pusha
dec
push
out
sbb
hlt
gs
pop
mov
mov
cmc
mov
xchg
call
xlat
lods
or
movsb
jae
adc
or
mov
out
xchg
int
xchg
xor
add
jns
loopne
pop
aam
sub
adc
sub
xor
add
or
sbb
cld
xchg
lds
inc
or
test
inc
and
push
mov
jmp
sub
and
pusha
pop
jno
xchg
fstl
dec
inc
cli
pop
pop
mov
fldcw
cmc
sub
dec
fs
add
int3
mov
jecxz
push
mov
int3
jmp
jo
hlt
loop
ret
aam
add
fisttpll
cmpsb
dec
loopne
leave
cwtl
daa
rolb
xchg
sti
shrb
xor
loopne
int3
pop
mov
mov
out
mov
andb
inc
popf
scas
pop
clc
add
outsl
and
pop
pop
sub
mov
ret
mov
or
shl
movsb
jl
dec
pop
in
mov
dec
js
mov
inc
mov
cmpb
sarl
mov
fildll
nop
je
adc
push
test
mov
dec
mov
rcrb
cmc
pop
xlat
push
imul
mov
pop
add
scas
mov
xchg
mov
push
pop
jmp
push
jne
cmp
xor
lcall
aaa
lret
cmp
mov
movsl
inc
test
sub
pop
jmp
mov
inc
addr16
cli
daa
adc
xchg
or
mov
cmp
cltd
aaa
adc
into
les
and
push
mov
mov
pusha
ss
add
jle
out
stc
faddp
and
pop
pop
pop
mov
pop
mov
sub
push
ret
in
sbb
sti
fadd
aas
push
dec
push
mov
js
fwait
sti
mov
push
dec
fstl
sbb
notb
mov
das
cmp
dec
cli
xor
jne
cwtl
jp
pop
cmpsl
cmp
out
add
jecxz
movl
enter
mov
test
sub
sbb
lods
lret
and
cmpsb
mov
cwtl
insl
mov
clc
nop
in
insl
xor
movsl
aas
xchg
call
mov
xchg
push
ljmp
lret
bound
mov
cmpl
sbb
ds
jmp
pop
mov
test
push
xor
test
or
pop
jb
outsl
mov
movsl
mov
mov
dec
add
push
add
imul
mov
test
fs
or
in
divb
mov
jmp
dec
insb
pop
aas
or
cmp
or
insb
or
cmp
mov
fstp
in
addl
sbb
ljmp
out
xor
or
sub
inc
lret
or
sti
scas
icebp
cltd
iret
flds
xchg
mov
and
addl
push
xor
lret
movsl
pop
loop
sub
pop
scas
and
push
nop
loope
movsl
mov
mov
shr
clc
bound
push
lcall
sub
push
dec
or
ficompl
pop
data16
pop
inc
mov
data16
add
lahf
clc
rclb
sub
push
xor
shll
add
mov
ja
loopne
fiadds
enter
shl
out
ret
ds
fmull
mov
pop
xlat
adc
or
mov
push
dec
push
and
lret
and
jo
and
mov
daa
outsl
rcl
inc
stc
insb
mov
outsb
adc
out
sub
pop
adc
sbb
sahf
cmp
fnstcw
enter
cld
lea
sub
and
mov
mov
pop
dec
ljmp
xor
xor
shl
push
out
jp
add
cld
shl
je
xchg
push
in
ret
or
icebp
rol
loopne
mov
push
in
imul
mov
iret
and
sbb
xor
frstor
fadds
push
movsl
push
adc
xlat
pop
mov
pop
mov
xchg
or
push
fs
adc
test
movsb
push
notb
mov
cmp
jge
push
in
cmp
sbb
out
ret
ja
loopne
mov
sbb
andl
mov
pop
imul
ret
dec
gs
sub
push
adc
dec
xor
data16
jbe
push
xchg
in
push
pop
add
xchg
nop
dec
push
enter
pop
jne
arpl
leave
pop
insb
aaa
pop
loope
js
pop
add
cmp
push
push
mov
imul
mov
push
sub
lock
xchg
stc
jge
addr16
mov
push
test
insb
mov
addr16
test
adc
sahf
lahf
jnp
enter
rcll
out
push
xchg
sbb
mov
and
dec
adc
lcall
icebp
jno,pn
ljmp
mov
push
xchg
pop
scas
adc
push
repz
clc
adc
xchg
aad
test
lods
jbe
mov
sub
fisubl
push
cmp
mov
fcomps
fmul
cmpb
jne
icebp
ds
aas
pop
add
test
push
sbbb
mov
mov
divl
inc
xchg
sub
add
mov
mov
in
dec
and
mov
sub
push
add
aas
and
push
push
decl
mov
mov
arpl
test
bnd
das
jle
in
push
cmpsl
dec
mov
dec
cmpsb
lahf
xchg
push
lret
ret
dec
dec
or
cmpsb
out
aam
cmpsb
repnz
inc
cli
and
sub
std
pushf
pop
xchg
sarl
jbe
pop
int3
in
sub
pop
push
dec
pusha
aas
add
mov
int
int
outsl
out
inc
sbb
mov
cwtd
pop
sbb
les
fldt
push
inc
icebp
and
nop
cwtl
dec
fldcw
insb
xchg
push
scas
dec
cwtl
inc
add
add
and
mov
xchg
js
test
lahf
xor
add
in
cmp
test
mov
movsb
xchg
mov
dec
movsb
popf
inc
xchg
xor
shrl
lods
scas
dec
mov
add
mov
add
and
and
and
push
xor
mov
shr
mov
int
lea
dec
mov
fwait
lcall
jmp
lods
xchg
fadds
xchg
idivb
cltd
inc
jecxz
cmp
jmp
bswap
jmp
jg
sub
sbb
jle
sbb
ds
fcoml
jae
roll
cmpsb
sar
mov
loopne
and
les
push
in
mov
imul
push
add
pop
and
mov
testl
xchg
int
int3
bound
push
pop
je
and
cmp
dec
and
in
adc
push
fisttpl
or
frstor
push
fldl
sbb
adc
call
jb
mov
testb
sub
pop
sbb
pop
loop
sub
jno
inc
add
mov
fbstp
adc
xchg
hlt
mov
inc
inc
cmp
pop
xor
sub
cltd
xlat
push
jp
rorb
or
mov
pop
xabort
cmpsl
int
jmp
inc
jmp
or
jge
cmp
roll
adcb
sahf
or
testb
xor
stc
aam
inc
shrl
into
or
stc
push
xchg
adc
sub
add
movsl
dec
sub
fldcw
push
je
cmp
mov
sub
push
xlat
dec
adc
jb
pop
sbb
outsb
aas
out
or
outsl
adc
shl
cmp
test
stc
or
stos
sbb
jp
inc
std
mov
push
sub
bound
stos
push
notb
and
fdivrp
cmpsl
daa
popf
xor
dec
mov
mov
mov
mov
cmp
cmpl
arpl
push
lcall
jb
mov
in
mov
rol
popl
jle
xchg
dec
push
push
in
jne
ljmp
popf
int3
jle
mov
and
xchg
inc
sti
notl
shrl
dec
sbb
cld
cmp
sbb
lret
mov
xchg
push
push
lods
lods
mov
and
out
mov
sbb
mov
fs
jle
inc
mov
rolb
sti
shr
pushf
jns
cmp
jp
add
outsb
jmp
sub
dec
jl
sub
ret
mov
test
mov
cmpsl
sahf
addr16
inc
sub
js
jmp
pop
sbb
jo
and
push
cltd
fnstenv
or
adc
je
adc
mov
jnp
push
and
push
mov
sub
inc
inc
into
pop
mov
mov
aad
push
sbb
xchg
in
inc
push
push
inc
adc
addr16
inc
inc
mov
aaa
and
aas
push
lods
pop
jge
mov
inc
sub
inc
pushf
rcr
ja
sti
jnp
stc
dec
fistps
push
jl
push
xchg
sbb
mov
mov
dec
jcxz
dec
adc
movsl
pop
mov
xchg
jecxz
shrl
lock
cmc
xor
cs
jg
cmp
hlt
mov
enter
lods
sbb
in
stos
xchg
aas
ss
movsl
fnsave
xor
data16
sbb
pop
call
int3
in
pmullw
push
or
jb
cmpsb
gs
add
test
dec
les
clc
aaa
out
inc
jbe
dec
cwtl
bound
cs
xor
roll
scas
sbb
incb
pusha
mov
rol
dec
push
lea
xchg
push
cli
xchg
mov
leave
subb
sub
xor
inc
cltd
shll
ljmp
inc
mov
loope
push
mov
cmp
bound
das
test
sbb
or
add
js
les
inc
daa
je
daa
int
jne
pop
idivl
jns
dec
cwtl
pop
xchg
add
cwtl
mov
push
or
orb
scas
out
sub
push
inc
and
es
test
data16
sar
push
push
std
push
adc
jmp
pop
adc
jmp
push
sbb
lods
cmp
dec
mov
mov
int3
fisubl
push
mov
nop
add
sbb
mov
sti
jne
jg
movsb
push
fldt
mov
clc
mov
or
jns
add
les
repz
mov
nop
lcall
or
cmp
ds
push
sarb
mov
iret
xor
jno
daa
cmp
ficoml
push
lods
sbb
add
mov
pop
cmp
xorl
sub
mov
xor
daa
push
xor
stos
ret
scas
cld
jns
dec
lcall
ds
enter
jbe
rcr
sub
adc
push
sbb
mov
hlt
out
out
xchg
xchg
mov
out
mov
jns
rorl
ja
popa
push
mov
xor
push
popf
cli
adc
jae
jmp
outsl
gs
push
sti
sbb
xchg
cmp
sbb
xlat
out
jge
xchg
adc
sub
ss
pusha
bound
pusha
mov
sub
mov
in
mov
and
mov
cmp
imul
sub
push
sub
add
ret
fadd
cmp
sti
aam
mov
push
pop
fdivl
int
rclb
push
shlb
lea
in
aas
xchg
adc
mov
ja
jne
or
dec
pop
pusha
cmp
sub
sbb
mulb
imul
clc
push
dec
mov
pop
mov
lret
and
xchg
jno
add
adc
and
js
and
push
in
xchg
pop
add
ror
add
cli
nop
pop
stc
das
xchg
adc
lods
sub
movsb
adc
pop
repz
push
insl
decl
push
ljmp
imul
dec
inc
cmpsl
fwait
or
mov
hlt
sti
add
xor
inc
int3
fnstenv
ljmp
xor
aam
and
mov
dec
and
sahf
in
add
xchg
cmp
bnd
add
dec
out
movsb
addr16
push
bound
jb
inc
jb
cmp
inc
scas
cmp
sbb
arpl
or
mov
and
adc
pop
aaa
lcall
jo
push
andps
pushf
cs
call
rcr
jge
fisubs
pop
rclb
pop
addr16
inc
lock
xor
sbb
sbb
sbb
and
mov
adc
jmp
xor
pop
call
sbb
js
mov
mulb
jmp
or
stos
out
add
fdivs
push
mov
jl
mov
leave
ljmp
insb
pop
sbb
cltd
imul
mov
fisubrl
push
cmp
fisubrs
enter
inc
and
std
enter
shlb
mov
jle
ret
call
mov
lock
in
je
push
pop
into
into
xor
lcall
dec
pop
pop
mov
xchg
stos
add
dec
cmpsb
or
sub
stc
cmp
sbb
je
push
inc
pop
jne
mov
mov
data16
sub
lock
sbb
iret
pop
sahf
dec
in
cmc
sar
push
mov
or
or
push
xchg
fsubr
adc
jmp
jp
ds
jns
push
mov
inc
lret
test
idiv
lds
inc
mov
cltd
dec
mul
sub
adc
xor
inc
dec
adc
cwtl
push
das
loope
mov
add
push
adc
bound
inc
mov
cld
les
xchg
mov
add
jg
push
out
fcmovbe
addr16
insb
jmp
sbb
aam
call
or
pop
and
lret
dec
xor
ja
sbb
mov
or
cmpsl
xchg
sbb
mov
inc
pop
rorl
pop
cmpsl
jbe
add
jb
subb
ret
inc
es
ja
adc
movsl
mov
rorl
fs
pop
cli
sub
fincstp
cld
inc
and
nop
sbb
mov
scas
adc
jecxz
pop
sbb
mov
movsl
jmp
lds
stc
xlat
ret
outsb
cmp
xor
cmc
cmp
popa
mov
xlat
cmpsl
fwait
mov
mov
push
ljmp
xor
in
sub
push
mov
dec
cltd
push
and
xchg
mov
sbb
jb
xor
inc
inc
stc
loop
cmpl
popf
push
or
sub
jb
mov
es
ret
push
xchg
repz
cmpsb
push
je
adc
sti
dec
push
sbb
mov
fst
jno
scas
hlt
loopne
roll
or
sahf
out
movsl
pop
aaa
test
mov
sub
add
jle
data16
mov
fnstcw
jmp
mov
cld
xor
ret
fcmove
orb
data16
mov
push
aad
push
shll
call
xor
fadds
cmp
pop
imul
cmpsb
or
xchg
shrb
xchg
push
out
data16
mov
ror
int
je
sub
pop
jl
mov
cmpsl
mov
sub
imul
or
mov
adc
inc
dec
ret
and
gs
outsl
mov
ds
jb
bound
ss
mov
loopne
push
mov
mov
hlt
fdivr
jge
dec
fisubrl
into
jne
imul
cmp
jecxz
clc
or
in
je
jnp
lret
inc
push
adc
les
ffree
test
sahf
mov
rol
adc
loope
cltd
daa
mov
pop
dec
out
pop
lcall
xchg
or
aad
jo
inc
scas
ja
cmp
pop
jp
dec
pop
pop
out
ror
dec
add
mov
pop
xchg
pop
push
jmp
and
pop
hlt
lea
inc
pop
add
iret
xor
add
in
jb
imul
fcompl
or
aaa
inc
stos
movsl
inc
lods
mov
xlat
mov
dec
cld
out
or
ja
jnp
push
subb
insl
inc
gs
stos
add
sub
mov
cmc
into
iret
aaa
inc
lods
stos
outsl
mov
jb
adc
sahf
xor
dec
out
cld
jno
lret
inc
int3
xor
jae
fucom
inc
jge
pop
subb
and
jo
jle
pop
push
inc
inc
int3
fidivrs
adc
insb
ret
ffree
scas
mov
lods
loop
mov
xorb
div
mov
pop
push
xchg
mov
and
inc
xlat
mov
divb
cmpsb
in
stos
call
adc
cwtl
std
jg
lcall
cmc
jecxz
scas
or
mov
into
out
mov
enter
sar
and
push
sbb
push
hlt
or
ficoml
push
pop
push
adc
or
adc
push
jl
std
jmp
test
insb
mov
enter
out
ljmp
hlt
decl
mov
into
ret
pop
xchg
popf
andb
or
jne
cmp
bnd
ret
xchg
xchg
ret
pop
dec
rorb
mov
lret
pop
cmp
inc
insb
jae
adc
imul
psubw
nop
pop
sub
enter
out
jnp
out
movsl
or
and
or
nop
add
aas
inc
mov
addb
ja
shrb
fstps
repz
jp
out
shr
insb
int3
loopne
out
adcl
outsl
daa
stos
jns
andb
push
xor
xchg
je
and
dec
je
add
insl
pop
addr16
fst
inc
enter
loope
stos
jmp
push
mov
js
or
mov
nop
cld
jo
lret
test
sarl
pop
cltd
push
xor
std
dec
int
call
pop
dec
sub
jae
mov
cmp
ret
push
jge
push
enter
arpl
dec
mov
cmpb
adc
mov
mov
les
push
test
inc
aas
std
push
sbb
mov
cmp
fcmovnb
xlat
inc
jae
pop
dec
in
adc
xchg
add
mov
pusha
jae
and
fimull
movsb
popf
daa
into
push
jecxz
sahf
dec
ja
call
lahf
lret
stos
or
xchg
dec
jl
adc
mov
push
clc
aam
orl
rcrb
cmp
add
sub
add
mov
jp
insb
jg
mov
stos
jle
test
in
jo
sub
loopne
sub
in
into
lret
and
es
cmpsb
and
nop
fadd
mov
packssdw
push
adc
adc
gs
js
inc
movsb
sbb
insl
push
cwtl
pop
je
rclb
mov
fbld
sub
inc
outsb
testl
adc
inc
sti
mov
adc
sbb
in
mov
cld
bound
lcall
jle
adc
outsl
sahf
in
xchg
xlat
sub
sub
dec
pop
mov
push
adc
lahf
xor
ret
and
cli
stos
and
sbb
aaa
js
mov
cmp
lock
das
pop
dec
call
shr
lea
xchg
inc
sbb
cwtl
inc
lods
and
and
adc
dec
sub
adc
aad
fcmovnb
xorl
aas
aad
sbb
jnp
sbb
jecxz
addr16
loope
add
inc
pop
fidivs
movsl
sbb
fnstenv
loop
outsb
jns
add
and
mov
in
fnstcw
ret
in
mov
xchg
test
dec
lods
jae
jno
subb
ljmp
das
xor
mov
sub
rep
push
mov
adc
imul
iret
clc
repnz
jns
int3
psubw
xchg
and
mov
mov
pop
es
stc
mov
daa
nop
lock
das
out
xchg
mov
push
cmp
test
inc
mov
stos
cmp
mov
pop
ss
adc
insb
mov
adc
push
dec
jbe
sbb
subl
push
test
sub
add
pop
mov
pop
mov
sub
mov
xchg
rorb
push
dec
js
dec
mov
mov
enter
mov
mov
out
inc
inc
sub
mov
es
scas
push
or
mov
xchg
fsub
je
popa
mov
cmp
and
dec
push
lea
mov
sub
cmp
dec
add
es
adc
adc
movsb
mov
andb
sbb
outsb
mov
mov
mul
push
add
jmp
push
and
movsl
add
sub
xchg
mov
xor
sub
push
jbe
push
repnz
pop
dec
data16
pop
dec
addr16
addl
push
aas
mov
leave
sti
sub
cmp
lds
cmp
push
push
dec
sub
cmp
out
mov
sbb
mov
xor
call
pop
stos
mov
int3
out
xor
in
mov
andb
add
in
call
xchg
pop
adc
cli
inc
mov
aam
push
adc
dec
out
les
call
lods
lea
mov
divb
mov
dec
xchg
and
lea
lahf
ss
mov
mov
cmp
push
out
push
mov
push
add
scas
sbb
add
xchg
sbb
cli
les
sub
lret
sbb
or
mov
push
ret
mov
sbbb
push
enter
or
leave
aaa
cmp
mov
sbb
jae
aad
in
inc
insl
call
sub
xlat
cmp
pop
and
push
jbe
xchg
aaa
dec
or
and
pusha
cwtl
dec
in
aas
pop
jl
mov
mov
cmpsb
dec
mov
enter
cmpsl
mov
or
dec
lcall
popf
imul
bound
pushf
movsb
cld
lock
aad
clc
cmp
icebp
sub
push
loop
pushf
cld
into
cmpb
and
iret
test
fsubrl
jns
cmpl
jb
cmova
cmp
jg
cmp
fcomps
outsb
or
call
lahf
mov
mov
dec
jae
lahf
xchg
fmuls
fldt
movsl
inc
push
sbb
add
pusha
sub
xor
jns
inc
outsb
addr16
cmp
cmp
in
add
mov
pop
into
adc
ja
sbb
sbb
push
aad
dec
push
and
push
cld
insb
cmp
sbb
call
bound
lret
nop
jecxz
pop
sti
shl
leave
dec
push
bound
fs
xlat
lods
jl
xor
test
ljmp
cmp
cmp
push
and
cmp
mov
push
xor
lret
shll
sbb
mov
loope
iret
or
dec
and
jns
sub
or
adc
test
push
stos
mov
and
jae
sub
inc
insb
hlt
xor
orl
gs
daa
and
lahf
add
adc
jne
xor
jecxz
mov
in
pusha
inc
out
test
inc
and
and
insl
inc
idiv
mov
call
adc
lcall
inc
js
xchg
imul
inc
sub
pop
scas
mov
sbb
in
lcall
pop
fmul
cli
mov
fistl
push
mov
push
or
inc
xchg
or
push
and
insb
inc
mov
ret
dec
cli
mov
inc
sub
mov
jne
pop
xor
addr16
pop
mov
aaa
mov
jae
iret
jecxz
inc
jae
push
cld
mov
pushf
inc
out
ss
fwait
xchg
inc
lds
dec
or
cmp
mov
xor
add
fisubl
in
adc
mov
and
mov
das
jmp
add
fdivr
add
jg
dec
outsb
mov
and
mov
xor
mov
push
inc
in
jns
ficoml
cltd
inc
sbb
mov
popf
outsl
ljmp
pop
sub
clc
out
fcmovnb
adc
pop
ror
lods
push
jo
inc
jg
scas
mov
ret
pop
push
dec
dec
mov
test
push
stos
into
push
jne
or
cmp
aad
fwait
test
pop
pop
pushf
mov
pop
movsb
sbb
testl
push
out
incb
sbb
out
dec
jle
cmp
lret
and
cmp
shrb
scas
xchg
enter
cmpsl
push
iret
and
mov
fidivs
nop
sub
mov
mov
push
es
xchg
or
sbb
add
rcr
and
push
out
push
mov
xor
lods
imul
fcmove
push
movsl
popf
sub
pop
aaa
sarb
adc
and
ficomps
in
pop
scas
sbb
daa
mov
mov
nop
enter
jecxz
out
jb
inc
jle
icebp
icebp
scas
jbe
inc
pop
lea
cli
inc
push
pop
adc
aad
loope
jnp
lret
mov
mov
cli
xchg
jecxz
adc
add
adc
add
pop
cmp
std
hlt
add
pop
les
sbb
daa
rcr
roll
xchg
loope
cmp
aas
stos
lcall
cmc
xchg
pop
out
sub
mov
in
out
insl
cmp
add
cmp
ss
sti
sub
test
mov
stos
jne
sub
mov
mov
sbb
sub
push
or
mov
pop
arpl
sarl
scas
xor
stos
loope
dec
js
cmpsb
mov
mov
iret
cmc
outsl
cs
pop
lods
mov
xor
cmp
inc
sbb
mov
xor
fpatan
fs
inc
xor
mov
pushf
push
xchg
mov
mov
jg
aaa
sti
fdivr
jbe
xchg
rorl
in
sub
pop
or
pop
js
sti
mov
xchg
or
jo
decb
sti
cmp
mov
lcall
jns
add
imul
mov
ljmp
pop
movsl
jbe
cs
das
dec
lock
data16
dec
ficoml
fdivrp
jp
daa
bound
int3
fmull
out
scas
std
xchg
pushw
in
pushf
pop
in
mov
loope
sub
fisubrl
es
mov
jo
es
sub
jecxz
pop
xchg
ljmp
lods
sbbl
lret
out
or
lahf
mov
mov
hlt
pop
insb
mov
dec
mov
inc
mov
rorl
sbb
sbb
loopne
mov
data16
mov
pop
pop
sbb
inc
adc
hlt
mov
xchg
lcall
outsl
scas
stc
and
test
xor
jecxz
jo
lock
jmp
addl
addr16
jne
sbb
cmp
sub
xor
cmp
pop
jns
lods
dec
sub
jecxz
cld
xlat
xor
sub
popf
call
xchg
scas
sub
inc
andb
pop
sub
rcrb
outsb
mov
sbbb
mov
aaa
das
xor
sbb
add
mov
popa
shlb
in
imul
pop
cmp
js
mov
sbb
test
jne
into
cmp
or
mov
popa
es
mov
pop
mov
sbb
pop
clc
fcomip
mov
pusha
in
push
push
dec
pop
sbb
test
nop
inc
mov
ret
sub
sub
or
imul
xchg
dec
pusha
mov
lods
dec
stc
push
fbstp
inc
lcall
pop
addr16
subl
neg
push
movsb
daa
mov
xchg
xor
inc
push
popa
arpl
jmp
rorl
inc
mov
sbb
imul
ret
push
dec
jne
in
rolb
sub
pop
subl
stos
into
push
mov
adc
mov
shlb
cmpsb
xor
xchg
push
js
bound
leave
sarb
pop
fnstcw
adc
mov
aad
adcb
xchg
cmp
fisubrs
jnp
sbb
add
jae
adc
pushf
lods
fcomps
xor
in
push
lds
inc
ja
push
inc
lret
rcrl
add
enter
shl
rorb
stos
cwtl
inc
into
inc
mov
out
push
sbb
jle
out
mov
add
push
loope
addr16
mov
dec
jae
mov
aaa
inc
or
sbb
icebp
and
lahf
or
push
dec
or
leave
cwtl
js
add
in
xor
scas
sbb
movsb
inc
popf
mov
jb
dec
imul
mov
pop
push
jae
inc
stos
sahf
dec
inc
inc
out
gs
iret
repz
icebp
inc
mov
dec
push
les
jo
stc
jno
jbe
cwtl
out
sub
testl
rcll
lahf
mov
aam
lock
lret
lea
divl
call
xchg
sbb
mov
aas
adc
add
jmp
insb
cmp
stc
push
mov
imul
aas
add
rorl
pop
flds
push
jne
addr16
mov
push
mov
or
pop
and
and
dec
mov
cmpsb
mov
jbe
sbb
lods
hlt
xchg
enter
idiv
sub
mov
xor
add
in
pop
mulb
mov
adc
aad
inc
pop
aas
xor
outsb
mov
imul
je
mov
xlat
mov
mov
test
fidivs
jmp
add
and
movb
mov
dec
out
int3
jmp
aas
xlat
int
cmp
lods
sub
outsl
push
xor
in
push
inc
mov
or
shl
cs
or
mov
mov
cmp
mov
lea
xor
shl
into
push
out
jmp
loope
int3
ret
outsb
jne
mov
mov
pop
cld
mov
xchg
and
push
xor
fimuls
das
sti
pusha
push
pop
int3
jb
es
sub
or
je
xchg
lods
and
hlt
mov
test
sarl
push
jbe
rcrb
mov
or
push
dec
rol
inc
add
mov
stc
or
inc
mov
repz
iret
sub
dec
dec
addl
jne
sbb
xchg
fildl
add
hlt
ret
rol
sub
fldenv
pop
adc
or
cmp
pop
add
cmp
mov
push
xchg
dec
pushl
xchg
shl
dec
xchg
aas
mov
jle
push
add
xchg
mov
inc
cld
std
mov
vpslldq
and
in
and
arpl
inc
sub
stc
fstpt
inc
in
jmp
in
pop
testb
imul
out
test
loope
popa
repz
xchg
pop
mov
cmp
mov
xor
call
mov
out
sbb
add
adc
cli
lret
jle
mov
gs
dec
ds
cmp
lret
lods
fnstsw
sarl
jp
test
sub
dec
lcall
push
add
mov
dec
jne
mov
dec
jecxz
mov
mov
loop
stos
add
fs
rolb
stos
sub
jmp
jmp
or
mov
adc
movhps
pop
insb
mov
stos
mov
mov
adc
cmpl
push
repnz
inc
adc
xchg
cmpsb
cs
inc
ret
xchg
shll
bound
pop
pop
clc
rolb
sahf
adc
and
pop
ljmp
lods
push
fisttpl
mov
roll
pop
movsb
aam
test
dec
dec
and
mov
out
jp
loop
mov
mov
adc
mov
scas
fsubrl
mov
out
pop
pop
data16
sbb
bound
repnz
mov
stos
fiaddl
jecxz
shrl
pop
cmpsb
ljmp
cwtl
xor
pop
sbb
adc
mov
cwtl
fcomi
aas
int
sub
dec
fucom
cmc
lods
pop
jnp
dec
sub
sub
adc
leave
mov
cmpl
mov
ds
cltd
cs
and
push
inc
cwtl
imul
test
adc
hlt
pop
mov
imulb
pop
or
sub
invlpg
jp
mov
jmp
popa
std
movsb
add
sbb
fmull
pusha
es
sbb
sbb
jns
sbb
cwtl
xchg
gs
into
mov
mov
or
and
pop
mov
jo
push
push
jb
aaa
fucom
and
fucomp
pop
add
lret
pop
sub
mov
and
inc
and
mov
or
popf
outsl
sub
into
inc
mov
scas
stos
lret
pushf
jns
imul
mov
movsl
fiadds
js,pt
sub
out
xlat
sbb
movsl
add
data16
fisubrl
inc
rcll
inc
push
mul
andb
xchg
or
das
lods
sub
test
int3
mov
jnp
imul
xlat
scas
lret
fldl
lahf
sti
insb
xlat
ficomps
add
jno
mov
divl
pop
xchg
fmul
pop
outsb
stos
out
or
push
sub
pop
cwtl
mov
mov
sub
ret
int
fsubrs
and
std
cmp
imul
lea
cmpsb
movsl
jp
lock
cltd
shr
fwait
jecxz
add
mov
mov
jbe
or
int3
xchg
adc
ss
js
mov
push
xchg
inc
imul
and
ret
pop
jns
mov
add
jg
call
add
sub
sbb
imul
push
jns
mov
dec
xorb
aad
lock
popf
jle
jo
pop
and
add
mov
and
sub
outsl
dec
orb
icebp
cmpsb
lea
dec
pop
dec
jmp
into
adc
xor
inc
mov
mov
xorb
mov
clc
sub
jns
insl
push
lret
test
cmc
je
addr16
mov
arpl
bnd
fistps
popf
enter
fisubrl
push
les
add
adc
lret
and
mov
cmp
ret
ljmp
inc
mov
rcrb
std
addr16
cs
ss
pop
or
gs
mov
mov
ficoml
pop
or
pop
mov
push
cltd
add
cmp
test
mov
loope
pop
and
lret
jb
stos
hlt
stos
jle
sub
lahf
adc
mov
test
fs
jg
sbb
fnstenv
pop
or
jno
xor
mov
test
outsl
dec
popa
lock
push
inc
int3
insb
loopne
push
popa
gs
fidivl
mov
lahf
popf
int
mov
add
adc
pop
fwait
add
inc
push
cmc
popf
mov
test
and
sub
nop
test
lcall
dec
repz
jl
xchg
jnp
sub
loopne
or
cmp
pop
pop
mov
rcrb
sub
lahf
jmp
add
or
jp
andl
mov
xlat
jo
inc
leave
dec
push
lahf
mov
add
jnp
scas
pop
sub
jbe
pop
adc
inc
movsl
into
mov
mov
imul
fistpll
imul
gs
xchg
dec
mov
into
lds
or
enter
mov
out
and
mov
iret
std
ss
sbb
scas
das
xchg
inc
sub
mov
jg
push
push
fists
dec
push
cmpsl
in
pop
fmuls
sub
ret
jecxz
aam
cmpsb
shrl
pop
in
cmp
pop
xlat
add
add
nop
inc
sub
rorl
and
das
dec
xor
mov
inc
and
push
xchg
and
out
popf
outsl
and
xor
sub
aam
xor
inc
lea
bound
xchg
mov
and
rcrl
fmul
pusha
mov
loopne
inc
stos
stos
inc
jg
add
dec
std
jg
popa
popf
or
mov
fcoml
mov
jno
lods
addl
inc
add
xor
test
mov
shlb
hlt
repnz
adc
loope
sbb
push
mov
xchg
popa
mov
inc
xor
sub
stos
lret
fisttpll
inc
cmpsl
je
sbb
push
mov
shlb
and
lret
lds
mov
jo
lret
push
adc
add
jnp
in
add
popf
mov
mov
jecxz
arpl
je
inc
in
pop
fists
add
and
xchg
imul
test
ja
sub
inc
leave
aaa
pop
jg
sbbb
sbb
and
ret
dec
sbb
inc
pop
out
push
dec
mov
jne
push
inc
mov
pop
jb
xor
out
mov
xchg
pop
jp
push
mov
push
pop
push
xchg
xchg
or
test
testl
decb
je
mov
and
popa
negb
sub
add
loopne
fisttpll
pop
and
pop
adc
out
mov
cmp
lea
outsb
sbb
jecxz
cmp
push
jno
cld
xorb
mov
aaa
mov
sub
or
jbe
mov
shrl
xchg
xor
lock
sub
add
lds
inc
pop
xor
cmc
out
pop
and
mov
push
mov
pop
scas
cmpb
mov
int
and
lods
fldenv
enter
lds
xor
clc
aam
mov
fsubr
xchg
xlat
xchg
sarb
fstpt
sub
loop
je
cs
in
dec
imul
leave
mov
mov
push
test
push
incb
and
icebp
and
cwtl
js
pop
push
add
faddl
scas
push
std
aaa
aad
inc
aas
dec
mov
push
jno
iret
sbb
rcll
xor
popf
xlat
test
xor
loop
cmpb
loopne
flds
out
push
lahf
add
imul
out
xor
push
in
push
popf
call
jb
pop
jmp
jae
sahf
loope
sbbl
xchg
ja
in
sbb
in
xor
sbb
movsl
push
dec
inc
or
pop
xchg
outsl
movsb
push
stos
dec
in
insl
and
lods
js
inc
cmpsl
aaa
test
mov
sti
fildll
mov
cmp
rclb
inc
ss
cmp
add
mov
repz
pop
mov
xor
int3
mov
adc
or
or
add
push
fisubrl
pop
mov
fwait
push
es
call
test
and
sbb
scas
mov
fwait
inc
pop
jmp
pop
insb
lods
imul
out
sarb
dec
icebp
je
in
adc
dec
and
pextrw
cs
scas
imul
aam
add
test
inc
clc
jge
xor
sahf
daa
popf
jmp
inc
mov
notl
movsb
push
scas
xchg
add
movsb
jp
js
enter
cld
jge
xor
mov
bound
xchg
mov
fwait
test
mov
xor
pop
call
test
jle
stos
inc
loop
lock
cmp
outsl
sub
lods
sub
jne
test
jb
xor
popa
popf
cmp
test
test
iret
das
repz
jno
clc
xor
add
add
insl
sbb
sbb
movsb
adc
mov
push
inc
or
test
dec
cmp
in
pusha
pushf
mov
mov
call
sarb
lods
lods
loope
cltd
loope
fnstcw
add
xchg
test
mov
mov
dec
push
jo
andl
fwait
sbbl
mov
mov
and
jg
sbb
dec
sahf
xchg
hlt
js
mov
jg
xchg
jmp
dec
in
mov
or
cs
repnz
andb
inc
aad
pop
xchg
data16
or
or
pusha
sbb
add
pop
cltd
insb
fwait
jo
repz
clc
lock
sub
bnd
nop
push
dec
addr16
or
push
sbb
dec
mov
push
sub
sub
std
aad
sarl
mov
and
scas
and
or
or
ja
in
in
jo
imul
test
push
test
cltd
mov
cs
mov
pop
lret
mov
out
pop
inc
arpl
pop
and
xchg
outsl
lret
pop
sbb
loope
xor
imul
scas
ljmp
dec
daa
pushf
mov
lock
and
arpl
push
fwait
mov
pop
adc
fidivs
test
cltd
push
dec
mov
cmp
cld
xor
xchg
fcomps
mov
jge
xor
xchg
dec
shrl
lea
jo
mov
push
es
sub
lea
pop
ds
les
adc
and
xchg
ds
jp
mov
clc
ret
fsubs
pop
push
mov
xchg
sbb
jmp
dec
inc
ret
flds
push
mov
out
pop
cmpsl
cmp
push
pushf
idivl
sub
subb
push
mov
ds
adc
andl
mov
ret
sub
outsb
imul
dec
push
or
xor
push
mov
fistps
mov
adc
cli
cmp
inc
jno
ljmp
mov
cwtl
sbb
in
dec
push
cmp
out
adc
pop
aad
xchg
lods
mov
inc
roll
dec
out
iret
insb
dec
adc
inc
dec
pop
mov
leave
jge
daa
push
pop
data16
push
pop
push
dec
mov
jg
push
imul
dec
jp
fbld
scas
xor
movsb
add
addr16
clc
into
outsb
outsl
sub
aad
jp
mov
hlt
shrb
push
test
shll
test
jmp
push
xor
mov
pop
push
int3
mov
xor
jne
mov
cmp
aam
popa
enter
mov
lcall
inc
xor
mov
stc
pop
lea
lods
leave
shll
outsb
cs
add
stos
lret
xorl
mov
je
dec
mov
pop
and
loopne
push
sahf
mov
pop
push
pop
in
cld
xor
jp
test
rclb
shll
into
jno
xlat
je
test
mov
sub
popf
mov
cmp
mov
mov
add
dec
mov
jae
mov
lret
pop
and
pop
pop
adc
addr16
mov
into
lods
icebp
popf
js
xchg
scas
cmp
xchg
pop
dec
xlat
repnz
mov
pop
inc
pop
add
sub
jbe
xlat
fcoml
cmpsl
mov
jnp
enter
push
inc
push
add
jecxz
stc
insb
xchg
aaa
mov
gs
mov
push
orl
xor
outsl
jl
in
daa
sub
mov
inc
into
rcrl
mov
push
enter
cmp
pop
push
sub
push
call
repz
adc
cltd
sahf
pusha
pop
subb
inc
fidivrs
aaa
out
or
rclb
rorl
pop
movsl
or
push
dec
xchg
outsl
in
ret
xor
inc
pop
inc
ss
lahf
out
mov
fists
cld
push
push
popa
insb
dec
jmp
push
aam
jo
nop
sahf
pop
pop
cmp
mov
cmc
imul
sub
shll
pushf
adc
orb
ret
cmp
mov
mov
and
push
ret
sub
sub
mov
pop
stc
push
jbe
add
mov
clc
jmp
push
mov
inc
cli
test
and
push
or
mov
repnz
adc
cmp
out
les
jp
adc
adc
jno
mov
or
int3
inc
punpckhbw
inc
mov
sbbl
xchg
cmp
cmpsb
pop
mov
mov
xchg
les
jmp
dec
add
push
sbbl
lret
and
mov
mov
inc
sbb
lcall
sub
fwait
jnp
inc
xchg
sbb
aad
mov
adc
mov
lock
les
rolb
and
repz
mov
xchg
pop
inc
das
xchg
lahf
dec
xor
fnstsw
or
ucomiss
jns
push
jno
jnp
dec
outsb
stc
insb
in
and
adc
lds
pop
gs
mov
cmpsl
pop
cmpsb
mul
or
sbb
nop
imul
or
into
dec
mov
xor
mov
sub
sub
adc
ret
push
sbb
push
in
movsl
and
mov
in
mov
test
sub
push
or
pushf
mov
pop
pop
sti
adc
jo
lea
inc
loope
arpl
arpl
cld
push
sbb
or
aad
shlb
popf
push
leave
or
mov
mov
sbb
add
or
shlb
add
push
std
mov
dec
in
aaa
das
stos
sub
mov
shlb
leave
ss
pop
sbb
xorl
fisubrl
in
mov
leave
ffree
or
jl
ds
pop
push
daa
push
addr16
mov
repnz
and
incb
lcall
jl
jae
push
dec
sub
cld
das
pop
or
jmp
call
and
fmull
outsl
or
stc
lods
and
xchg
loope
jb
mov
addr16
xchg
call
dec
iret
loopne
lcall
cmp
mov
sub
inc
rcr
stos
dec
xor
inc
fmull
cmpsb
xchg
push
shr
xchg
jle
scas
dec
sub
mov
sbb
scas
xchg
sub
jo
pop
mov
addr16
or
test
xor
ret
jbe
sub
mov
ds
nop
and
cmp
xchg
mov
popf
jl
enter
popa
sub
lcall
popf
jmp
jo
sbb
adc
inc
into
jae
iret
jns
sahf
fmull
xorl
jl
dec
xor
jae
mov
push
dec
adc
icebp
push
jbe
or
pusha
mov
jne
mov
ja
enter
xor
cmpsl
mov
imul
out
leave
dec
or
hlt
pushf
and
aam
cmp
out
jo
adc
lds
repz
sub
sbb
jns
mov
mov
and
lret
test
pop
push
sub
popf
push
adc
imul
sbb
ret
sbb
out
and
push
je
lock
jnp
outsl
inc
ds
push
push
test
fistps
dec
leave
cmp
test
aaa
stc
mov
push
sub
es
dec
mov
das
lret
jb
mov
inc
dec
or
loop
mov
sub
adc
inc
test
push
rcll
jg
aas
enter
pop
sbb
add
mov
xor
mov
outsl
pop
add
mov
pop
out
es
cmpl
mov
push
repz
outsl
out
leave
imul
test
pop
jae
or
andl
push
dec
lea
dec
cmp
fwait
inc
push
call
pop
dec
xchg
add
test
test
push
test
jp
mov
and
pop
pop
sbb
movsb
push
jnp
sahf
mov
or
add
push
aam
push
add
xchg
les
pop
fstpt
and
xor
mov
push
pop
out
push
loop
jecxz
jle
jnp
in
xchg
imul
es
adc
imul
jb
aas
lret
pusha
mov
loop
adc
xchg
jnp
insl
notb
fistps
mov
nop
popa
pop
loopne
cmpsb
lea
lret
sti
xor
jae
pushf
fmulp
fdivr
pop
mov
cltd
rorb
incb
sarb
rcll
jne
std
mov
in
movsl
add
mov
dec
lock
dec
cmp
jnp
in
and
jbe
xor
les
xchg
pop
loopne
xchg
fxch
clc
pop
push
icebp
add
sub
push
cmpsl
push
mov
push
paddd
push
outsl
jp
or
mov
mov
xchg
push
mov
lods
sti
dec
rcll
xor
test
aam
cmp
mov
into
rcrb
xor
es
xchg
and
or
cmp
mov
cli
shlb
adc
iret
les
movsb
or
cmp
mov
test
mov
cmp
mov
push
shrl
test
xor
dec
jg
cmp
or
push
xchg
inc
test
imul
jecxz
enter
xchg
test
xor
rcl
test
test
repz
add
sbb
js
loope
xchg
pop
fnstsw
mov
jg
pop
mov
adc
shl
push
inc
pop
pop
lret
sub
mov
pop
jo
ja
inc
ljmp
mov
ja
incl
jmp
inc
scas
lods
sub
or
das
lock
cmpsl
gs
notb
out
stos
or
es
test
dec
xchg
sbb
movsl
in
mov
dec
repz
xchg
push
and
xchg
push
mov
adc
daa
movsl
mov
and
xchg
cmpsb
pop
inc
push
mov
or
xchg
lcall
push
lcall
adc
daa
test
mov
jle
pop
sub
mov
loopne
addr16
mov
adc
xchg
xor
adc
inc
or
adc
dec
cs
out
and
or
ret
into
nop
call
push
mov
jne
pop
inc
movsl
popa
sbb
test
jecxz
pop
rcl
mov
sbb
rcll
add
js
loop
jge
roll
sbb
in
gs
cmpsl
push
in
jmp
pop
xchg
in
faddl
add
rorb
jle
inc
inc
pop
and
adc
jl
inc
movb
cmc
rorb
in
adc
mov
cmp
pop
loop
ret
cmp
push
add
aad
xor
out
adc
and
pop
pusha
cmp
mov
lret
jo
sub
inc
fsts
inc
rcrl
fistps
ror
xchg
inc
lahf
fstpl
or
mov
sbb
sub
mov
outsl
cli
stos
cld
inc
jmp
and
fisubrs
push
pop
add
fldl
rorl
inc
repz
test
mov
inc
incl
sub
out
cwtl
sub
cmp
scas
dec
or
push
loopne
jge
adc
or
jo
mov
jecxz
mov
add
stos
data16
xor
dec
daa
xchg
jae
lods
ss
ficoms
divl
mov
jmp
inc
in
sub
clc
roll
xchg
pop
mov
inc
aaa
notl
cmc
jle
mov
add
fwait
push
or
sub
sbb
jmp
insl
sub
ss
stos
sbb
mov
test
xor
add
pop
daa
sar
sbb
cmp
ret
and
or
dec
lret
lea
adc
shlb
lcall
push
add
dec
jns
test
inc
fs
shlb
inc
pop
push
arpl
mov
and
arpl
mov
int
es
imul
dec
mov
push
std
jmp
in
sti
inc
lods
adc
xchg
das
popa
aam
dec
add
xlat
xchg
mov
jbe
mov
jle
je
loop
adc
das
mov
xchg
aam
dec
ss
mov
fidivrs
jnp
stos
mov
sbb
movsb
push
daa
and
jns
pop
push
fadds
mov
pop
scas
jmp
sbb
hlt
and
or
xorl
cmp
aas
nop
inc
adc
mov
lcall
mov
insb
add
icebp
insl
aas
sbb
mov
rol
pop
add
repnz
jnp
in
mov
iret
sarb
out
cld
cmp
jp
test
cmp
imul
inc
lret
cld
and
int3
rcrl
lods
jae
jge
scas
adc
cmp
adc
inc
cli
jp
and
aas
jl
addl
mov
mov
shrl
jno
ret
dec
and
inc
adc
insl
ret
mov
dec
scas
arpl
scas
fsts
mov
xchg
int
xor
cwtl
popf
inc
dec
insb
lahf
or
icebp
ret
scas
int3
cmp
push
sub
sub
shr
adc
jb
dec
or
jge
mov
addr16
mov
aaa
ret
add
inc
dec
push
mov
inc
pop
pop
jb
mov
cmp
loopne
lret
jp
xchg
int3
lret
push
jo
mull
imul
sub
in
insb
mov
les
jp
test
clc
push
movsl
push
adc
and
sarb
aam
mov
std
cmp
int
loope
loop
mov
lcall
xchg
sbb
call
mov
shlb
fsubs
outsl
mov
lock
sub
xor
nop
cmp
mov
and
arpl
cmc
lcall
decb
jne
xchg
push
jle
je
out
push
test
dec
frstor
popa
xchg
dec
xor
jmp
dec
cmp
sarb
jecxz
inc
jno
jno
loop
inc
call
add
mov
cwtl
scas
jle
out
in
mov
ds
mov
pop
cmpsl
iret
or
adc
mov
adc
mov
push
mov
andb
sbbb
push
icebp
cmp
mov
adcb
mov
xchg
jae
es
mov
sub
inc
cltd
sub
mov
pusha
test
out
les
dec
jno
mov
inc
sbb
std
cmpsb
dec
shll
out
bound
jo
aaa
hlt
sbb
nop
repnz
out
arpl
lods
cmc
pop
fcmovnb
mov
dec
popf
sub
or
mov
xor
and
sbb
mov
push
pop
pushf
inc
pusha
loopne
cs
enter
jae
xorl
mov
sub
pop
mov
gs
adc
or
into
inc
sahf
daa
dec
push
pop
adc
stc
jecxz
or
lds
rcrb
in
cmc
xchg
mov
sub
icebp
les
push
rclb
lock
cmp
stos
outsb
inc
inc
add
sbb
mov
sub
mov
inc
push
mov
push
movsb
test
sbb
les
sbb
stos
in
jmp
mov
dec
popf
in
sti
xchg
fbstp
lret
xor
jnp
pop
ljmp
ja
xchg
jbe
mov
fwait
scas
pop
negb
aas
pushf
jmp
shrb
push
push
sub
cmp
pop
mov
xor
sub
inc
loop
push
sbb
sbb
mov
scas
adc
push
clc
sbb
xor
outsl
test
frstor
jno
mov
cmp
sbb
rorl
fwait
push
das
push
popa
neg
gs
in
cwtl
test
shrb
fiadds
push
aaa
inc
ret
push
mov
inc
sti
movsb
test
test
xor
jl
out
out
addb
add
xor
jbe
ds
dec
into
test
xchg
out
mov
insb
insl
ret
mov
xor
cmp
clc
push
repnz
jmp
outsb
sahf
fisubrs
sub
insb
leave
jl
push
gs
push
orl
jb
xchg
das
lea
cltd
jne
loopne
lcall
lods
adc
fstl
inc
lret
lea
jb
inc
cmpsl
cld
xor
sbb
push
add
mov
pop
xlat
rolb
xchg
or
andl
ljmp
mov
or
and
jne
shll
xchg
inc
xor
adc
test
fists
dec
fistl
xchg
dec
push
jnp
in
imul
pop
jle
aas
fistpl
cmp
dec
movsl
jne
gs
int
cmp
hlt
or
lret
cmp
fidivs
xchg
fadds
dec
adc
movl
jmp
pop
jmp
jmp
inc
mov
mov
xchg
lea
cld
int
cmp
sub
or
xchg
ds
inc
jae
lahf
cmp
lahf
test
and
shrl
pop
nop
mov
dec
loopne
jns
adc
out
jl
xor
inc
std
jp
pop
add
ja
bound
jecxz
je
in
xor
sbb
shrl
lcall
test
popa
iret
add
bound
sbb
xlat
sar
subl
sbb
and
clc
push
xor
or
push
inc
sbb
aam
cmpsb
movl
scas
ret
fwait
imul
mov
ficoms
jb
xor
add
mov
push
push
movsb
int
and
fistpl
xchg
xor
lds
scas
cwtl
clc
fwait
xchg
xchg
sarl
lock
ljmp
jl
lret
mov
out
ljmp
dec
push
ds
or
mov
sbb
in
inc
shlb
pop
incl
jmp
test
in
aad
jbe
inc
mov
mov
mov
jmp
sbb
xor
push
clc
and
roll
lds
jnp
xor
or
testb
cli
mov
cmp
shlb
dec
lods
ss
es
xchg
hlt
inc
mov
es
jnp
and
sbb
lea
in
ds
jo,pn
out
pop
xor
cld
fbstp
inc
or
cmc
cmc
dec
pusha
mov
and
fsubr
pushf
cld
add
icebp
outsl
pop
jmp
push
sbb
jmp
jecxz
std
cmp
or
mull
mov
mov
notl
sub
inc
add
shl
xchg
xchg
mov
mov
nop
mov
stos
inc
add
push
push
and
jnp
inc
mov
cmp
stos
push
rolb
cmpsl
ret
inc
icebp
lret
fists
arpl
into
stos
xor
adc
imul
int3
adc
mov
and
sub
fadds
push
sbb
shlb
jmp
in
lds
das
std
cld
ret
insl
in
ja
iret
shl
inc
or
scas
stos
mov
dec
mov
jnp
decl
and
inc
loop
mov
cmp
andb
mov
mov
push
push
lahf
subb
cmp
mov
push
sub
pushf
xor
fwait
mov
pop
sub
lret
test
xor
adc
push
adc
enter
inc
pop
int3
pop
inc
repz
mov
aam
int
dec
push
fbld
inc
cmp
lods
mov
mov
in
cld
or
nop
pop
inc
imul
repnz
icebp
outsb
xor
je
arpl
imul
pop
jbe
jbe
outsb
sahf
xor
mov
inc
sub
mov
inc
mov
jno
cmpsb
xchg
enter
ljmp
adc
stos
shrl
dec
ret
bound
popf
pop
cltd
pop
push
lcall
js
xchg
add
xchg
pop
movsl
arpl
repnz
mov
jns
dec
cmp
mov
stc
dec
in
pop
sbb
sub
mov
jecxz
sub
insl
repnz
dec
out
inc
xchg
xor
jo
outsb
and
loope
push
cs
negb
xchg
outsl
out
dec
dec
jne
pop
mov
cmpsl
sahf
cltd
jl
stos
mov
int
sbb
push
cltd
adc
sbb
push
push
ret
aaa
sub
cmp
sub
movsl
push
push
and
xchg
or
pop
bnd
hlt
pop
icebp
iret
dec
pop
or
or
leave
cmp
scas
xchg
lcall
data16
ljmp
fs
aad
sbb
fbld
xor
pop
add
dec
into
fwait
sahf
jl
out
mov
out
scas
xor
push
sbb
sub
xor
sbb
dec
add
sub
mov
and
dec
into
add
fwait
out
sbb
aas
ret
adc
ret
and
pusha
aam
sbb
or
cmp
in
push
push
xchg
mov
mov
push
xchg
xor
out
fnstsw
dec
xor
jl
xchg
push
pushf
pop
cwtl
push
adc
pop
or
mov
test
cltd
dec
dec
push
push
bound
xchg
jo
mov
loop
jmp
push
outsl
xor
jne
cmp
push
adc
shlb
scas
ss
ss
jmp
arpl
mov
mov
push
add
lret
pop
outsl
inc
negl
xor
sub
xchg
mov
fists
imul
jae
mov
xchg
lcall
loopne
nopl
adc
in
and
xchg
jb
call
cltd
imulb
cwtl
movsl
and
and
jecxz
pop
mov
lods
aam
or
or
push
js
xchg
and
out
dec
jmp
ffreep
pushf
cmpsl
lock
mov
cmp
mov
add
jne
loop
jbe
imul
dec
lds
dec
jno
imul
push
test
rol
xor
xor
pop
mov
shl
cmc
icebp
mov
sub
mov
int3
insl
dec
push
les
mov
test
lret
lret
clc
sarl
mov
call
movups
leave
das
in
mov
imulb
and
push
enter
cmp
fists
or
out
inc
cmp
mov
shr
pop
push
dec
push
sbb
pop
pop
sub
sub
mov
fadds
add
mov
repz
dec
or
push
fiaddl
and
fdivrp
and
fwait
push
imul
push
mov
or
push
push
and
in
xchg
push
std
xchg
mov
fwait
jge
pusha
icebp
cltd
add
rorl
mov
xor
ja
or
imul
popa
in
lods
pop
add
dec
cwtl
inc
repz
pop
arpl
inc
xlat
cmp
fadds
sbb
pushf
inc
pop
imul
adc
add
xchg
pushf
clc
mov
inc
mov
jns
fiaddl
std
sbb
daa
inc
cmc
hlt
fisttpl
imul
lahf
add
insl
cmp
xchg
insl
pop
push
shll
and
fisubs
movsl
mov
popf
loop
jmp
xchg
aaa
push
sbb
clc
sub
hlt
std
push
cltd
push
mov
ja
pop
out
pop
mov
pop
call
call
mov
pop
push
mov
xlat
xchg
enter
mov
lcall
push
mov
imul
test
or
rorb
mov
and
ja
sbb
inc
cld
arpl
aam
and
push
xor
leave
jl
inc
bound
bound
cli
cmp
cmc
push
add
and
not
inc
and
cmpsl
xchg
pop
mov
inc
dec
cmpsl
and
add
mov
cmpsl
int
dec
out
stc
pop
dec
add
and
jbe
iret
sbb
jae
inc
fdivs
mov
mov
push
ja
cmp
rcrb
mov
pusha
lds
pop
arpl
arpl
rorl
sbb
rep
pop
mov
ljmp
pushf
and
jns
scas
xorl
jle
push
ret
xor
adc
and
jl
fisubs
push
fcmovbe
mov
add
cld
stc
mov
adc
push
and
xchg
outsb
or
sbb
inc
icebp
test
out
dec
test
jle
aas
dec
fsubr
xchg
not
xor
pop
cli
cld
xchg
mov
mov
or
std
outsb
push
add
adc
jno
push
js
lea
int
cmc
leave
mov
icebp
dec
mov
pop
fwait
mov
xor
adc
cmpb
mov
jp
sbb
mov
cmpsb
mov
and
xor
imul
loope
pusha
in
fwait
dec
xchg
dec
or
add
xchg
add
jnp
or
jg
in
pop
cmp
pop
or
jle
push
jp
mov
daa
call
add
sbb
jge
sub
sub
cld
xchg
mov
repnz
insb
insb
push
and
mov
mov
cltd
mov
inc
outsb
mov
adc
mov
aam
sub
lret
sub
fildll
jecxz
fisttpll
clc
mov
test
pop
push
jecxz
popf
cmc
push
cmp
push
movsl
push
push
inc
aaa
dec
mov
iret
sbb
jb
ret
ficoml
out
pop
add
ret
mov
ret
rolb
mov
xchg
push
inc
mov
mov
in
cmp
into
adc
xor
add
mov
adc
daa
outsl
je
jmp
jbe
enter
sahf
mov
sbb
pop
cli
cmp
mov
notl
in
bnd
ret
mov
push
xchg
mov
adc
out
xchg
daa
into
fisubrs
scas
cmp
and
cmpsl
jne
lods
scas
hlt
add
imul
ret
add
xor
dec
push
mov
or
rcr
ret
arpl
rclb
lret
loop
and
iret
adc
mov
stos
mov
jmp
lea
sub
in
inc
sub
or
mov
push
or
cmpsl
outsb
divb
sbb
add
pop
jp
pop
orb
in
negb
in
fsubrp
mov
call
pop
dec
scas
addb
ljmp
sbb
sbb
lods
jbe
sti
push
lcall
rclb
out
push
cli
pusha
sbb
jae
shlb
push
fcompl
ror
repz
adcl
stc
jbe
and
ret
push
add
push
int
hlt
cmp
sub
cmp
mov
jb
mov
clc
mov
mov
and
jne
lea
dec
xchg
movsl
cs
out
cli
inc
lods
shrb
sbb
fmuls
mov
je
mov
stc
mov
inc
sahf
lods
and
clc
lock
add
imul
sub
dec
stos
sbb
jp
mov
mov
push
xlat
or
push
mov
popa
mov
in
mov
imul
and
mov
nop
jmp
dec
outsb
mov
ljmp
dec
mov
cmp
xor
test
dec
cli
push
sbb
mov
jo
loopw
insl
and
cmp
mov
insl
cmpsb
sbb
das
and
dec
xchg
sbb
add
pop
xchg
outsl
stos
push
into
imul
push
popf
imul
ror
js
test
addb
push
jle
das
popa
push
xlat
out
aad
xchg
jno
cmpsl
pop
outsl
nop
xchg
mov
enter
xor
rclb
scas
fisttpl
test
mov
cmpsb
stc
pop
ficomps
add
cld
les
or
cmp
ja
jmp
aam
cmc
test
cmp
sub
dec
daa
xchg
out
stos
ja
ljmp
xchg
push
data16
or
aam
jnp
mov
pusha
scas
movsb
in
mov
xchg
fmull
mov
scas
lods
sarb
mov
inc
xchg
push
xor
cmp
jp
jl
push
in
in
fsubrl
test
push
shll
loopne
inc
cmpsb
or
outsb
and
hlt
mov
add
test
movsl
xchg
and
jle
add
fwait
lcall
mov
dec
xchg
sbb
sub
adc
inc
inc
adc
dec
jg
jg
scas
xchg
xor
dec
insb
xor
daa
dec
rorb
mov
stos
mov
mov
cld
lret
xchg
adc
add
out
ljmp
dec
cmpsb
and
add
icebp
jne
in
test
sbb
xchg
into
adc
lock
adcl
mull
jmp
test
andl
mov
pop
mov
push
sti
fnstenv
ret
jg
push
bound
cld
cs
cwtl
pop
sbb
mov
inc
out
jae
dec
xchg
call
add
call
mov
pushf
xor
and
jno
sub
push
addl
imulb
fmul
enter
xchg
cmp
jbe
cld
mov
jmp
push
lea
lods
aad
mov
and
movsl
inc
sbb
lret
repz
hlt
imul
ja
ljmp
push
mov
iret
push
xor
xor
lock
movsb
adc
pop
dec
pop
sub
cs
xor
xchg
stos
lahf
xchg
adc
fwait
push
stc
mov
mov
add
sub
ret
add
jnp
pusha
xchg
test
call
daa
xchg
and
mov
addb
and
daa
popf
xchg
xchg
and
sbb
mov
dec
or
add
dec
xchg
or
sub
imul
cmc
repnz
and
and
pop
mov
jge
jmp
aad
cmc
cmpsl
inc
mov
in
push
mov
rcrl
shrl
inc
push
pop
adc
cli
cmp
test
mov
cmp
adc
push
filds
jl
push
ret
cs
jecxz
cmp
jae
push
xchg
lret
xorb
inc
inc
xor
or
mov
pop
inc
call
cld
or
xchg
les
inc
inc
jns
jg
add
cltd
insb
stos
cmpsb
add
shr
fdivrl
rcr
pushf
lock
shlb
cmpsl
cli
sbb
push
enter
jns
jo
add
sbb
jo
imul
popa
add
adc
dec
or
shlb
mov
fstps
out
in
aas
pop
dec
mov
nop
hlt
or
inc
dec
sbb
xchg
sbb
rep
jge
test
cmp
lods
adc
bnd
aas
into
sub
sub
push
mov
out
cmp
movsb
mov
ficoms
iret
sbb
pop
ficoms
ds
dec
dec
movsb
cmp
dec
and
out
inc
mov
xor
or
rcrb
arpl
mov
xchg
outsl
int
mov
dec
fmulp
mov
test
jne
fwait
lret
or
jae
cmp
lds
fcomp
dec
stos
jp
adc
adc
lcall
aas
xor
inc
mov
ds
pop
xchg
lret
aaa
add
subb
cmp
xchg
ja
mov
loop
add
and
test
mov
xor
xchg
dec
out
xor
je
popa
pop
out
add
jecxz
mov
mov
jno
mov
fscale
ljmp
xchg
xchg
add
leave
rcrb
leave
push
xor
lret
push
push
fpatan
leave
jp
cmp
ret
sbb
or
imul
sub
rcl
sub
lea
push
clc
scas
xchg
jl
test
mov
sub
loopne
dec
jne
popf
cmp
jl
sbb
jb
stos
ds
mov
repz
jae
sti
push
jb
and
test
rcl
outsl
out
mov
pusha
loop
sub
push
addr16
cmc
and
mov
addr16
or
jg
in
push
dec
stos
fisttps
push
mov
bound
dec
out
push
dec
jno
divb
adc
and
je
xor
cmp
add
aam
add
cmp
pop
bound
in
out
clc
dec
jle
insb
pop
cwtl
pop
mov
cmp
insb
mov
dec
mov
or
mov
stc
cmp
in
jl
das
or
mov
xchg
and
lods
jg
pop
mov
push
mov
sbb
add
lock
movsl
sti
xchg
ret
scas
pop
int
test
test
cmp
mov
pop
dec
sub
cmp
push
leave
xlat
imul
xchg
adc
repz
ret
cmpsb
push
mov
test
imul
jmp
das
cmp
pop
xor
jecxz
xchg
rolb
add
dec
sub
xchg
lret
inc
jbe
xor
inc
das
pop
lock
mov
repz
into
data16
cltd
imul
into
cmpsb
inc
out
or
gs
movsb
popa
and
imul
inc
sbb
sbb
ljmp
daa
int3
dec
icebp
arpl
inc
jnp
stos
push
cld
or
stos
arpl
xor
xor
pop
inc
mov
inc
js
mov
ja
dec
mov
addr16
sub
and
dec
mov
mov
add
pop
adc
inc
lret
or
lahf
xor
in
push
pop
int3
dec
popf
mov
sub
mov
jae
stc
mov
jp
mov
mov
push
or
jmp
lret
outsb
jno
sub
in
push
in
aad
lahf
divb
lcall
push
mov
out
dec
subb
je
mov
cmp
xchg
iret
xchg
sbb
call
dec
mov
mov
insb
out
mov
in
aam
add
inc
and
push
adc
add
pop
ss
sub
and
push
outsb
dec
out
jg
loope
mov
lahf
int
ja
push
adc
arpl
ret
arpl
sub
rclb
aas
std
fs
pushf
and
xor
jge
mov
mov
pavgb
subb
add
rorl
jge
push
jmp
adc
pop
cmp
adc
fs
in
jae
jo
loop
pop
ffreep
fcoml
adc
mov
or
or
jecxz
andl
push
inc
sti
pop
cltd
mov
push
pushf
popf
jne
or
lret
stc
mov
les
lods
cs
push
mov
mov
and
adc
movsb
push
sub
or
ret
popf
loopne
cltd
pop
dec
ret
jno
fstpt
or
or
ffreep
loop
cltd
or
xchg
xchg
lret
and
or
adc
pop
inc
xlat
xchg
outsl
nop
imul
sti
pop
rol
push
clc
mov
lahf
pop
mov
xchg
inc
les
leave
cmp
bound
sahf
pop
imul
jne
mull
adc
jnp
or
mov
testl
in
inc
dec
pop
xor
pop
cmp
add
add
dec
dec
fdivrs
cmp
mov
and
fnsave
cmp
jg
push
loope
adc
cli
andl
popf
divl
cmp
std
ret
jge
xchg
mov
sub
xor
pop
mov
pop
jns
stos
push
and
sub
out
and
aaa
out
mov
adc
and
out
add
jnp
popf
dec
fsubrs
push
or
mov
pop
test
inc
inc
leave
lods
adc
jb
or
xchg
repnz
orl
xlat
lock
push
insb
add
xor
dec
ljmp
outsb
aam
mov
stos
fisttps
orb
movsl
jns
scas
into
das
push
pusha
mov
ret
mov
mov
adc
xchg
push
imul
xor
outsl
js
int3
mov
mov
cmc
and
pop
mov
out
and
aam
data16
mov
dec
movsb
pop
mov
int
jl
and
sub
insl
lock
xorb
insl
stc
cmp
int3
neg
sbb
stos
dec
jmp
pop
jecxz
pop
outsb
mov
das
xor
in
jbe
insb
aas
sub
movsb
iret
ror
rcl
mov
mov
sub
jp
cmc
fiaddl
movsb
hlt
adc
je
jg
mov
adc
pop
rclb
imul
insl
jp
ljmp
bound
scas
testb
int3
dec
or
js
addr16
loop
pop
stos
aad
int3
push
lret
insl
subl
jecxz
divb
scas
or
xchg
cmp
fucom
mov
mov
add
and
mov
xchg
jo
lods
int
and
mov
mov
idivb
ret
pushf
pop
mov
fucomip
pop
movsb
cmp
fs
fsts
movsb
scas
sbb
rcr
jo
cmpl
mov
cmpsl
push
mov
mov
imul
andl
in
aam
cmc
out
push
mov
dec
pop
dec
bound
push
push
fcoml
aad
jg
xchg
pop
aam
dec
fisubrs
mov
negl
xchg
lcall
sub
dec
lret
push
fwait
enter
aad
movsb
insb
subb
fdivs
mov
sbb
sahf
mov
dec
test
out
nop
jno
int
mov
int3
popa
jo
adc
inc
adc
iret
jo
out
xor
insl
js
push
mov
stos
aad
leave
add
inc
test
or
add
mov
pusha
jp
test
mov
mov
mov
pop
fcoms
push
dec
mov
int3
dec
xor
jae
negb
lahf
push
mov
cmp
insl
push
xchg
cmc
lahf
cmpsb
jbe
cmpsb
arpl
mov
bound
mov
cmp
inc
leave
outsb
in
dec
adc
shrb
stos
ds
nop
pop
aam
jecxz
xor
out
outsl
imul
outsl
movsb
pusha
add
xor
out
mov
mov
stos
scas
sub
jg
cmp
lret
mov
jb
testb
sub
test
mov
mov
aam
xchg
in
jecxz
mov
or
xchg
adc
add
divl
pop
xchg
cmp
mov
push
mov
xchg
lret
das
and
pop
xchg
pushf
ret
ror
loope
in
jg
xchg
repz
or
jbe
addr16
mov
adcb
mov
or
cmp
jmp
pop
or
mov
or
std
mov
xor
hlt
xchg
aaa
xbegin
or
sbb
lods
fidivrs
mov
cmp
dec
xor
sub
loope
ss
dec
aad
inc
loope
push
mov
jecxz
lcall
and
inc
push
dec
call
mov
idivb
popf
test
imul
into
xlat
inc
dec
adc
loope
and
push
out
jp
jno
sub
mov
push
stos
jb
pop
dec
pusha
add
lods
pop
or
cwtl
lcall
in
rcrl
mov
lcall
in
test
out
add
iret
sbb
in
rcll
cwtl
xchg
imul
sahf
loope
sahf
scas
jnp
sar
sub
jmp
push
add
cld
pop
xor
and
adc
mov
sti
cld
cmpsl
inc
hlt
push
cmpsl
iret
xor
imul
pop
in
out
xchg
in
dec
lds
xchg
mov
or
add
xor
dec
mov
aad
insb
enter
lahf
cmp
push
pop
mov
ljmp
jp
push
or
loopne
fwait
mov
imul
mov
jp
xchg
into
inc
les
ret
xchg
clc
push
dec
pop
xor
movsl
dec
cmpsl
daa
sbb
int3
or
mov
mov
orl
jle
mov
in
xor
inc
aad
push
pop
das
xchg
in
fwait
in
insb
jae
jo
add
add
and
rcll
sti
ja
mov
dec
lcall
insb
mov
sbb
mov
sub
sbb
mov
movsl
and
sub
mov
dec
and
inc
jbe
les
test
push
jno
sub
sub
or
mov
xor
addl
mov
dec
je,pt
sub
sub
adc
push
mov
fistpll
in
or
in
jae
jns
fs
or
test
out
inc
lds
adc
lods
fs
adc
dec
in
das
lods
cmp
jo
aad
mov
icebp
push
mov
sahf
rcr
ficompl
outsb
cmp
pushl
sub
cld
sub
pushf
mov
cltd
int
sbb
mov
or
xlat
mov
pusha
add
sbb
nop
jl
repz
ljmp
enter
in
mov
cltd
jmp
dec
fildl
xchg
ss
or
shrb
shrb
push
xchg
jge
add
rcll
or
stos
cwtl
ds
pushf
dec
dec
int
cmp
jo
xchg
cmpsl
aas
sbb
jbe
fidivrl
jmp
notb
or
mov
je
dec
mov
or
ljmp
sbb
and
fistpll
test
jne
nop
shll
pmullw
pop
shll
jbe
mov
mov
mov
fistl
push
adc
gs
adc
xor
or
cli
or
pop
loope
sarl
push
aaa
cmp
pop
or
lds
in
dec
mov
ja
inc
movsb
mov
cmp
pop
jp
decb
dec
or
out
jge
dec
or
jge
pop
and
add
adc
mov
push
pushf
lods
cmp
sbb
cmp
cmp
and
adc
nop
sarl
mov
add
mov
jno
adc
mov
movsb
lods
sub
insb
sbb
aad
cs
mov
mov
lret
cmpsl
dec
dec
sub
lret
mov
mov
inc
mov
test
pop
fs
mov
sub
fs
jl
call
push
movsb
inc
subl
and
mov
mov
in
gs
add
mov
insb
sub
sarb
fadds
loopne
sub
sbb
inc
xor
push
stc
and
xor
call
iret
lods
inc
mov
jae
aaa
in
mov
cmpsb
push
mov
and
mov
sub
int3
negl
mov
push
or
inc
pop
rcrb
xchg
ret
adc
jg
imul
into
in
and
sti
mov
cmp
xchg
or
lret
pop
arpl
dec
xchg
shlb
insb
movsl
fistpl
in
pop
xchg
addr16
or
dec
adc
aaa
lods
dec
jnp
xor
lret
mov
and
aad
movsb
cmp
push
jge
push
fdivl
aam
mov
std
addr16
in
pop
scas
addr16
jge
jo
scas
jbe
test
push
repnz
add
inc
add
loopne
push
pop
out
sbb
adc
scas
in
jmp
sub
into
xchg
arpl
sti
jmpw
inc
mov
mov
mov
sub
test
lods
subb
or
fisubrl
in
pop
pop
aaa
insl
mov
push
push
jge
cwtl
js
mov
adc
jnp
mov
sbb
inc
and
popf
call
mov
pop
adc
ret
ret
xor
jp
xor
sar
pushf
mov
add
daa
jno
mov
mov
ds
xlat
adcl
sbb
jno
ret
mov
mov
xorl
call
ror
mov
sarb
push
sbb
ljmp
fiadds
pop
daa
and
pop
iret
out
or
dec
ret
xor
pop
out
rorb
in
cwtl
add
mov
xacquire
fisubrs
sbb
in
mov
mov
out
movsl
dec
adc
lret
movb
bound
mov
cmp
jmp
imul
add
movsb
jo
testl
push
sbb
popa
mov
mov
mov
jnp
repz
inc
mov
inc
or
push
not
js
jl
shrb
iret
add
aaa
out
push
lock
insl
dec
and
sbb
outsl
xor
xor
xchg
or
push
shlb
stos
std
mov
int3
div
fyl2xp1
movsl
dec
sbb
mov
xor
push
test
cmp
fistpl
sbb
push
inc
mov
xchg
or
xor
add
pop
repz
dec
jns
sti
push
adc
adc
imulb
mov
xchg
jno
mov
out
mov
inc
xor
rcrl
jmp
js
dec
push
or
pop
cld
fistpl
xchg
adc
fcoms
cmpsl
adc
loop
and
mov
lods
cmp
in
push
add
push
mov
leave
jne
shll
push
mov
imul
adc
inc
sahf
dec
pop
pop
mov
arpl
xchg
xor
dec
dec
sbb
push
xchg
fisubl
sub
push
es
scas
lahf
movsl
push
mov
ret
lods
dec
stos
inc
inc
bound
jne
fs
mov
movsb
mov
rclb
lods
pop
cmp
sbb
or
int
inc
bound
add
out
mov
aad
fs
add
and
in
or
adc
das
in
inc
or
sbb
add
push
cmc
aaa
out
cli
jae
xchg
inc
add
idiv
int
popa
xlat
gs
lds
jmp
in
mov
push
add
xchg
outsb
loop
fadd
jmp
scas
xchg
mov
stc
inc
dec
sti
imul
iret
call
gs
leave
adc
push
xchg
xor
test
mov
push
jecxz
inc
xchg
cmp
mov
jb
rcrl
fidivrs
mov
fnstenv
cmp
out
bts
stc
jmp
fwait
stos
arpl
mov
out
and
cmc
ljmp
mov
inc
push
outsb
loope
inc
test
ds
mov
pushf
fs
fstps
repnz
or
notl
mov
clc
inc
loope
and
push
sub
xchg
jne
pushf
mov
cmp
arpl
push
out
loop
fcomps
mov
add
or
loopne
scas
mov
popa
or
mov
stos
into
push
bound
xor
fidivrs
fistl
push
out
int
test
call
sti
lea
push
call
psubq
call
test
xor
cmpsb
test
cli
add
pop
mov
lods
fwait
aas
arpl
add
pop
adc
ret
mov
xor
gs
xchg
cmp
adc
aam
jge
mov
mov
inc
loop
fidivrs
jbe
adc
cmpsl
push
add
xchg
push
ss
mov
sub
ljmp
inc
js
ds
push
or
push
sbb
dec
das
out
add
sbb
iret
push
mov
sbb
andb
pop
scas
push
popf
data16
loop
ja
ss
adc
sbb
push
inc
les
mov
jl
rorb
mov
mov
bound
lcall
aad
popf
gs
icebp
outsb
shl
jmp
out
mov
cmovae
mov
inc
cli
mov
scas
push
out
outsl
push
push
sarb
test
or
scas
push
ror
inc
cmp
sarl
xchg
mov
mov
ficoms
xchg
jae
dec
nop
jb
mul
lock
js
inc
xor
cmp
aaa
in
push
dec
and
out
call
inc
or
sub
stc
pushf
outsl
pop
mov
daa
jg
cmp
pop
rorl
jmp
in
dec
mov
ror
xor
cwtl
movsl
subb
xor
inc
xor
xor
mov
fisubs
or
jle
outsb
into
adc
in
xor
xchg
mov
ss
mov
mov
inc
xchg
or
lret
xor
stos
lret
sub
push
add
add
adc
jmp
movsb
xor
fwait
jg
or
xlat
int
cltd
icebp
mov
and
sti
dec
scas
xor
push
jl
and
lahf
mov
jbe
ficoms
fs
stos
mov
ds
imul
jo
data16
enter
icebp
push
jg
pushw
xchg
cmp
jl
sbb
xor
push
rorb
mov
loope
or
cmp
dec
pushl
sub
xlat
movsl
cmpsl
push
fs
mov
dec
ljmp
stos
push
mov
push
mov
sub
fcom
loopne
in
pop
out
mov
sub
jecxz
inc
push
sahf
hlt
adc
mov
inc
xor
sbb
fldt
or
jmp
sub
sbb
outsl
mov
xchg
jg
vpsllq
push
int
shlb
add
movsl
int3
mov
fwait
pop
ds
lea
lret
imul
and
cmp
mov
pop
dec
stc
je
in
mov
sub
stc
jmp
and
loopne
in
cmp
in
xchg
jo
adc
jb
pop
inc
ret
adc
pop
push
push
lea
sbbb
mov
mov
cld
jno
stos
xor
mov
pushf
gs
out
dec
insb
pop
fsubrs
roll
cmp
jmp
je
add
dec
push
roll
mov
ret
mov
scas
mov
inc
fldl
jecxz
lock
fs
cmpsb
aaa
shrl
mov
or
pop
divb
pop
xchg
addr16
jmp
dec
cmc
out
imul
cltd
leave
or
ret
inc
in
cwtl
lret
mulb
xchg
popa
push
testl
mov
mov
jns
sub
xor
pop
jno
mov
cmp
pop
shrl
add
push
xchg
pop
pop
popf
sti
out
mov
dec
popa
stc
sbb
imulb
jp
mov
sbb
and
push
loop
and
jl
sub
test
jg
rcll
call
ret
scas
pop
jnp
dec
mov
out
cmp
cltd
pusha
xor
stos
mov
int3
cltd
cmp
mov
sub
mov
repnz
push
jmp
mov
clc
xor
out
push
dec
stc
gs
loopne
mov
out
adc
sub
insl
ret
sbb
mov
xor
xchg
outsl
adc
pop
xchg
dec
pop
add
jae
neg
jnp
call
lock
jp
mov
jnp
insb
mov
mov
lcall
cmpsl
add
jb
cmpsb
sub
dec
insl
cmp
and
cmpl
pop
rorb
xor
in
xchg
sbb
repnz
jmp
pop
repz
call
and
cmp
fwait
xchg
mov
pop
and
xlat
in
mov
es
pop
fdivrs
aad
dec
test
je
sbb
into
add
or
enter
lods
mov
test
jns
adc
or
mov
and
addr16
dec
lahf
mov
dec
mov
test
add
sbb
loopne
das
mov
fisubl
mov
dec
out
sub
pop
hlt
imul
jno
pop
sbbl
rorb
cmp
lods
or
adc
mov
gs
mov
test
cmp
lret
dec
outsb
popa
jp
das
aad
sbb
fidivl
sbb
and
push
sarl
or
pop
cmpsl
mov
lret
ja
shll
mov
mov
in
inc
aaa
pop
aas
imulb
ds
cmpb
mov
out
mov
popa
jge
jne
inc
jne
jmp
and
cmp
xor
xor
loope
lahf
enter
mov
push
enter
movl
jge
push
inc
iret
add
mov
sub
add
add
cmpsl
addr16
xor
jmp
add
push
sub
das
or
cmp
dec
add
ret
stc
cwtl
xchg
cmp
stos
inc
imul
add
mov
or
movsb
pop
mov
mov
xor
or
pop
outsb
repnz
std
sbb
pop
jp
movsl
jns
fnsave
jle
mov
out
xchg
xor
das
xor
jbe
insb
sti
gs
rclb
inc
arpl
push
jne
adc
neg
in
rep
lahf
mov
mov
pop
adc
add
xchg
jmp
dec
add
pushf
iret
incb
arpl
dec
insb
repnz
mov
cmp
adc
add
nop
sbb
stos
mov
dec
loope
insl
imul
mov
pusha
mov
pop
aam
repz
inc
mov
mov
inc
add
sarb
fsubs
lods
lahf
ret
push
unpckhps
testb
in
push
sti
int
push
xchg
cld
sub
fs
mov
scas
adc
nop
add
sub
ret
aam
jno
mov
cwtl
les
xor
js
rcrb
mov
xor
leave
sarb
jge
pop
push
dec
mov
adc
sti
pushf
stos
sahf
inc
mov
aam
aaa
dec
out
enter
lret
hlt
fldt
mov
ja
subb
pop
iret
adc
aas
in
insl
cmp
and
lods
repz
push
dec
push
icebp
inc
stos
pop
xchg
das
or
pop
dec
cmpsl
sub
mov
xor
pusha
scas
lret
jge
mov
fwait
sbb
dec
daa
push
push
mov
enter
ja
fbld
xchg
lret
ret
xor
sbb
pop
pop
imul
lret
shrb
push
aas
and
aam
push
aam
mov
repnz
mov
fcoml
push
mov
jmp
mov
mov
mov
incb
cltd
movsb
fs
jmp
out
lods
ljmp
hlt
das
mov
push
daa
add
inc
out
dec
cmpsb
hlt
mov
ss
adc
jae
sti
sub
sub
pop
xchg
pop
stos
or
and
std
dec
outsb
sbb
cmp
arpl
mov
jnp
js
dec
sub
adc
movsb
inc
ljmp
sbb
lahf
pop
sarl
movsl
ret
dec
ja
mov
pusha
pop
je
out
inc
test
mov
xlat
sub
and
inc
mov
addb
fcom
dec
sahf
js
mov
jmp
insb
push
pop
inc
ffreep
xchg
push
cltd
push
cmp
ret
mov
xchg
out
adc
lret
jno
mov
add
lea
cmc
leave
adc
adc
pop
xchg
adc
rol
int3
jnp
aam
push
inc
or
push
fldcw
arpl
lods
jmp
cmpb
sahf
hlt
loope
daa
sbb
dec
mov
lret
into
and
icebp
mov
aam
pop
out
inc
outsb
lret
neg
in
lds
mov
stos
and
fsubl
push
push
dec
jmp
mov
sub
xor
mov
xchg
push
jmp
test
cmp
out
adc
cmp
call
iret
sbb
test
loope
mov
jae
fldt
xchg
inc
cmp
or
jmp
sbb
rcrl
jo
sub
clc
mov
xchg
xor
aaa
cwtl
or
fstpl
aam
push
aaa
lock
mov
push
push
out
ss
pop
dec
filds
repz
int
cmp
ljmp
cmp
jge
mov
pusha
cltd
mov
jno
movsb
and
mov
and
cmp
arpl
inc
cmp
jno
test
cmp
scas
mov
adc
xchg
shrl
pusha
pop
inc
mov
in
aaa
mov
addr16
movsb
adc
repnz
push
jae
dec
xor
js
lea
popa
test
push
xor
subb
pop
ficompl
or
ds
int3
pusha
cmp
and
add
popf
xchg
mov
jns
ret
sbb
mov
pop
das
cmp
js
cmp
xchg
lcall
inc
jno
inc
icebp
out
sahf
movsl
roll
jo
outsl
leave
sub
test
lods
sub
sbb
movsb
movsb
jp
mov
ret
jge
outsl
int3
enter
push
cld
cli
xchg
repz
jae
dec
repz
mov
mov
rorb
dec
sti
cld
lret
add
loope
mov
adc
sbb
outsb
call
lods
pop
cwtl
push
icebp
aam
mov
dec
insl
dec
sub
sbb
jmp
add
cmp
pop
ret
fs
out
clc
mov
mov
add
dec
jo
sbbl
aam
clc
mov
cltd
or
cmpsb
and
aad
stos
xchg
notl
stc
cmpsb
stos
or
mov
mov
sub
cmp
sub
sarl
ja
jns
mov
pusha
movsl
pop
in
sahf
dec
icebp
ss
cmp
sti
rcrl
test
aaa
push
test
xor
push
and
xor
xor
jae
daa
sahf
nop
cmp
push
repnz
ds
mov
int
lret
xchg
mov
dec
mov
jge
xchg
int
pop
mov
or
mulb
xor
push
fcompl
adcb
fldenv
xchg
push
fcomps
push
mov
mov
mov
daa
push
xorb
jb
pop
mov
in
xchg
iret
ss
pushf
dec
mov
jge
xchg
mov
sbb
sti
out
ss
xor
jecxz
inc
je
inc
jmp
adcb
sub
add
push
inc
cmpsb
les
into
ds
add
data16
xchg
popa
stos
dec
mov
cs
mov
imul
add
cmp
xchg
nop
cmp
aad
pop
fwait
sub
sbb
add
loope
js
outsb
sub
in
lods
add
xlat
adc
mov
push
mov
jo
pushf
sub
in
cltd
ficoml
bound
in
fnstcw
xlat
ds
jnp
push
in
in
ljmp
imul
jno
shr
cmp
inc
dec
pusha
inc
stc
xchg
lods
inc
mov
jmp
ss
mov
adc
fs
mov
in
cwtl
popf
sbb
xchg
bound
or
add
mov
mov
lods
pop
lret
xchg
sub
cmp
lcall
cld
loop
stos
pop
mov
push
lret
jl
pop
lret
adc
fwait
imul
movsb
shll
repz
dec
push
testb
fld
icebp
imul
mov
push
aas
and
jb
fsubrs
lods
push
push
jle
xor
xchg
xor
jne
aas
mov
mov
shlb
mov
cmp
imul
test
push
mov
mov
mov
mov
pop
push
pusha
or
jp
loop
mov
int3
movsb
mov
push
fildl
sub
in
cmp
or
lds
loope
cmp
push
mov
bound
shrl
addb
popa
inc
loopne
cld
pop
dec
ljmp
icebp
jb
cwtl
sahf
ljmp
inc
xchg
pop
int
addr16
lret
xchg
int3
dec
fneni(8087
jecxz
push
xchg
sbb
shl
or
fcmovbe
sbb
fs
in
int3
pop
xor
xor
push
jp
and
mov
scas
push
push
sbb
mov
pop
test
jle
cmc
dec
mov
outsl
dec
lods
and
stos
lret
popl
xor
and
test
xchg
sbb
sub
xchg
inc
xchg
sub
mov
cmp
sbb
mov
je
int3
mov
lret
shlb
test
popf
lret
stc
mov
mov
das
out
pop
pop
cmp
into
imul
in
fsubrl
call
adc
sti
es
jmp
jns
addr16
and
dec
mov
mov
pop
ss
lea
test
mov
outsl
push
sbb
std
push
mov
pop
das
rclb
cld
and
adc
push
xchg
push
pop
shlb
pushf
jge
sbb
int3
sbb
ret
pop
pop
popa
xchg
mov
sub
movsb
sbb
pop
mov
int
inc
dec
xorl
repz
and
aad
lcall
xchg
xorb
mov
xor
jnp
jno
ljmp
hlt
pop
mov
xor
popf
subl
xchg
daa
adc
call
xchg
je
cltd
fsts
xor
das
aad
add
rorl
xor
shll
sti
jecxz
and
xchg
push
sbb
movsb
xchg
push
nop
add
sar
and
jge
scas
push
sub
dec
dec
ss
movsl
jg
les
cli
loop
push
xchg
sbb
movsb
jmp
sub
inc
loopne
adc
push
or
push
mov
cltd
inc
cmc
div
leave
outsb
rcrb
repz
outsl
push
adc
xchg
enter
sbb
sub
mov
mov
or
xchg
insl
rcll
mov
jae
push
xor
mov
or
cwtl
popf
cmpsl
pop
stos
mov
insb
outsb
dec
push
mov
add
add
cltd
stos
leave
mov
icebp
imul
loop
push
fidivs
out
add
xor
or
test
pop
sbb
push
int3
sub
test
pop
sub
out
push
xchg
sarb
add
sub
xchg
lcall
imul
mov
xchg
dec
inc
std
ja
popf
fdiv
jecxz
arpl
xor
shl
adc
cmp
ret
mov
add
or
lock
adc
xor
fdiv
cmp
jl
cltd
xchg
pop
xor
test
sub
lock
shl
negb
aam
add
sbbl
push
into
inc
xor
xlat
sub
outsl
movsb
inc
xor
sub
dec
aaa
mov
push
mov
iret
xor
shl
sub
inc
pop
xor
mov
les
xor
pop
pop
jl
in
imull
lret
mov
xchg
sub
fildl
sarl
lods
jge
out
sahf
shrl
sub
mov
rorb
sub
add
mov
fprem1
int3
jb
fwait
mov
jl
mov
lret
dec
lahf
pop
mov
mov
sub
ja
fnstenvs
sub
stos
sbb
pop
sbb
cs
cmp
jecxz
std
cmp
es
bound
fldenv
aas
lds
or
lahf
sub
nop
xor
inc
test
push
ds
mov
dec
incb
dec
mov
sbb
cmpsl
xor
popf
mov
xchg
fisubrs
data16
and
adc
cmp
push
push
mov
cmp
or
sub
stos
jg
je
notb
jge
push
lock
pusha
ja
inc
and
jmp
xchg
push
lcall
xchg
mov
stos
imul
ds
or
in
cmp
pop
and
fnstcw
xlat
push
pop
repz
inc
xchg
sub
mov
es
and
repz
in
aam
mov
and
popf
insb
add
pusha
add
imul
adc
scas
lahf
sbb
out
pop
inc
and
test
adc
jb
aam
ret
dec
jle
cmp
icebp
jmp
test
inc
repnz
inc
cs
pushf
dec
outsl
cmp
pop
mov
cwtl
adc
lret
dec
push
aam
adc
scas
dec
mov
sbb
xor
adcb
sub
pop
dec
js
mov
movsl
mull
pop
pop
test
cmpsb
sub
iret
inc
sbb
clc
cmp
push
jns
jle
movsl
cmc
dec
dec
or
test
cmp
cmp
mov
addr16
fists
call
test
pop
sub
enter
jg
adc
or
pop
cld
es
pop
nop
sub
and
out
or
sbb
int
mov
testb
add
inc
mov
sub
clc
in
push
pushl
out
inc
jp
mov
sub
fildl
nop
nop
jo
push
adc
sahf
push
xor
sbb
jne
lds
in
or
aaa
xor
das
popa
pop
jp
and
adc
jno
lds
xor
pop
pop
lds
mov
pusha
dec
cmp
shrd
pusha
daa
sbb
cmp
fdivl
xor
push
and
mov
cli
xchg
push
loopne
pushf
stos
cmp
mov
mov
adc
pop
mov
inc
cld
mov
push
mov
addb
pop
inc
adc
stc
out
fisubrl
aas
and
insl
imul
in
aaa
out
subb
sub
out
call
gs
movsl
add
sub
pusha
in
and
push
adc
or
movsb
jbe
ret
cli
fnstsw
mov
cmpsb
push
jge
sub
inc
add
ljmp
jle
fcoml
dec
mov
xchg
adc
adc
and
sub
cs
lret
shl
ja
data16
aas
enter
pop
scas
and
loopne
xor
out
mov
adc
or
ret
jg
out
dec
bound
sarb
jp
in
loope
push
jl
add
pop
pop
pop
jecxz
add
pop
jns
pop
ss
lea
fimuls
into
enter
pop
mov
mov
lock
mov
hlt
scas
outsb
pop
xor
inc
mov
fdivr
leave
inc
fmuls
dec
pop
sub
aad
cmpsl
outsl
mov
aas
shl
sub
flds
and
sbb
scas
bound
in
xchg
out
mov
jnp
icebp
xchg
sbb
mov
sbb
cwtl
into
push
int
fistpll
inc
or
out
sbb
outsb
sbb
jp
pop
mov
xchg
test
inc
xor
inc
pushf
mov
sbb
dec
dec
xchg
push
push
je
or
dec
add
mov
stc
in
aaa
fsubrl
dec
hlt
or
push
dec
and
pusha
pop
int3
fisubrl
ljmp
scas
out
dec
cmp
lret
js
jle
in
xchg
push
cmp
xchg
test
shrb
insl
xor
adc
xchg
push
loop
or
mov
pusha
push
inc
cli
pop
out
mov
mov
in
cmp
dec
and
pushf
push
je
mov
je
pusha
jecxz
mov
and
and
divb
mov
mov
xchg
cmp
jno
incl
es
push
xor
sbb
push
loopne
jecxz
aam
sub
sub
push
mov
sub
jns
fsubr
inc
outsb
mov
loope
inc
adc
xchg
in
in
in
mov
add
push
pop
loope
cmp
inc
pop
or
push
or
shll
ds
lret
in
or
cmp
push
cmc
xor
add
mov
test
lret
inc
and
mov
push
ljmp
cli
incb
inc
dec
data16
fsubs
test
pop
ja
es
fildl
movl
lahf
mov
ds
int
sbb
movsb
mov
mov
add
sti
xor
shrb
inc
sbb
adc
xchg
repnz
cli
sub
jbe
test
pushf
pop
fdivl
jo
xchg
sbb
inc
fisubrs
cwtl
push
ja
adc
jae
inc
add
inc
loopne
sbb
test
out
stc
push
xchg
movsl
ret
sub
jbe
out
fildl
push
mov
cld
jecxz
std
cmp
xor
cs
xchg
mov
add
ffreep
inc
jp
mov
xchg
iret
je
push
adc
and
leave
invlpg
cmp
pop
jg
popf
sub
jp
in
fwait
in
imul
mov
xlat
dec
aas
push
loopne
jne
rorb
fwait
xchg
jne
divps
xor
jnp
xchg
jmp
xchg
lock
pop
iret
push
pop
ror
inc
dec
or
mov
lock
xor
aam
lret
cmc
outsl
test
ja
les
ret
inc
mov
cmp
push
cli
xor
sub
mov
cmp
out
fwait
mov
fucomp
addb
std
mov
add
pop
mov
adc
jmp
jae
push
or
add
jne
cld
push
jnp
ss
xchg
insl
aas
xor
pop
fildll
cwtl
mov
leave
lret
inc
fstl
push
rcrb
push
imul
pop
jns
ret
jae
push
jle
cmc
je
jno
pop
and
fldt
fistpl
pop
scas
inc
outsb
cld
ss
cmp
inc
test
cli
jns
sbb
or
out
cmp
divl
adc
loopne
daa
mov
push
adc
or
int3
repnz
or
pop
jge
cmc
adc
jnp
push
aaa
cli
adc
cmp
cmp
mulb
ljmp
pop
lret
pop
fidivrl
xor
sarl
icebp
inc
sti
fsts
pop
add
xor
stc
or
call
jne
aas
jecxz
dec
ja
mov
imul
dec
shll
test
mov
pusha
dec
daa
pop
rclb
hlt
aas
push
add
js
inc
push
add
iret
mov
mov
pop
cwtl
adc
lea
ja,pt
mov
je
jbe
cmp
sub
mov
mov
icebp
js
bound
and
iret
xchg
push
movsb
mov
shl
or
jns,pt
push
sbb
push
pop
adc
and
pop
fadd
mov
stos
dec
ds
push
and
sbb
mov
ret
sub
cmp
daa
dec
test
adcl
gs
pop
push
out
dec
pop
mov
mov
add
inc
icebp
jmp
sti
add
mov
mov
mov
mov
fistpl
cli
lock
adcb
in
cmpsl
xorb
push
loope
push
ret
out
or
fwait
dec
shll
sti
enter
lds
rorb
and
mov
cmp
ja
pop
call
cmp
rcl
jp
xchg
inc
or
pop
test
xor
sbb
push
sarl
rolb
std
repz
test
lret
mov
lods
dec
sub
andb
and
fildll
adc
jnp
clc
mov
pop
mov
sbb
mov
mov
lahf
push
insb
cwtl
sub
lock
mov
fisttpll
int
xor
insb
mov
cmpsl
add
pop
int
orl
mov
push
sarl
push
mov
dec
pop
adc
in
cmpsb
push
iret
test
test
sbb
mov
and
and
adc
jno
sbb
jl
xor
pushf
push
inc
out
and
add
add
mov
lahf
xchg
fisubs
in
ds
inc
das
inc
and
mov
and
mov
jns
cs
gs
outsb
mov
cld
sbb
out
ret
vpsubsb
adc
xchg
subl
jle
gs
imul
leave
cmc
mov
call
das
push
dec
cltd
mov
sarl
pop
pop
loopne
xlat
stos
or
pop
xor
pusha
xor
push
mov
stc
pop
sahf
std
outsb
xor
enter
mov
xor
jbe
sbb
cmp
mov
add
addb
shr
cmp
mov
imul
jle
xchg
movsb
xchg
mov
loope
hlt
add
out
lret
fiaddl
adc
mov
pop
mov
pop
mov
out
and
mov
das
add
insb
jbe
fnstsw
inc
push
loopne
lahf
push
mov
pusha
lahf
mov
cld
push
cmc
mov
movsb
adc
dec
xor
repz
cmpsb
gs
les
add
jbe
or
jns
nop
leave
loopne
mov
push
pop
inc
mov
aad
adc
lock
test
stos
jbe
les
out
popl
fildl
sub
inc
jne
xchg
nop
ss
mov
imul
bound
dec
fcmovne
fstpt
push
add
xor
xor
mov
sti
mov
les
imul
and
int
adc
mov
jmp
repz
ret
les
mov
xchg
xchg
sbbl
fnsave
xor
ss
ss
fsts
dec
je
xchg
add
sbb
cli
insl
cmc
lahf
leave
dec
mov
pop
mov
push
mov
push
sbb
mov
mov
loop
lock
divb
imul
mov
out
jecxz
pop
jmp
xor
mov
mov
cmp
jl
jge
cmpsb
push
lods
pop
adc
shl
adc
iret
ljmp
push
stc
mov
fwait
xchg
ror
call
iret
mov
popa
test
push
jae
inc
mov
inc
rcrb
mov
test
nop
aam
fisttps
lret
imul
xchg
fdivrs
mov
jne
stos
mov
jo
mov
mov
mov
adc
mov
xchg
ss
aas
shrl
mov
out
add
xor
inc
sarb
and
cmpsb
cmp
imul
adc
loope
add
jae
inc
or
cmc
test
shll
dec
int3
decl
sahf
sub
adc
push
fwait
xor
fwait
fs
into
stc
add
mov
pop
push
bound
cmp
xchg
jl
push
jp
movsb
push
das
divb
jmp
stos
jp
push
adc
mov
cli
fnstsw
jge
add
dec
icebp
cli
lcall
sbb
push
or
add
rcr
adc
loope
pop
xor
ljmp
popa
test
sbb
int3
clc
xor
ret
ljmp
bnd
popa
xchg
cmp
xor
xchg
push
jo
movsl
cli
mov
pushf
and
push
sbb
mov
loop
stc
in
or
inc
mov
jo
xlat
cmc
mov
xor
pop
popf
jp
repz
jbe
add
or
push
in
adc
in
mov
les
ret
rcrl
cmc
mov
sub
pop
bound
pop
adc
lods
sbbl
lods
call
cmp
and
sbb
es
sbb
adc
pop
mov
lret
shll
lahf
inc
inc
shrb
dec
inc
lea
in
push
addr16
out
mov
test
cmp
mov
pusha
sbb
jle
jmp
enter
pop
cli
call
shll
pop
push
xchg
dec
push
fidivl
pushf
mov
es
fidivs
cmc
and
ret
aam
inc
jno
jne
paddusw
pop
pop
jecxz
popf
mov
fs
lret
mov
add
es
push
adc
and
sub
sti
inc
in
xchg
fnstenv
sub
idivl
lcall
and
call
sub
xor
mov
sbb
cmpsl
popf
mov
sti
sbb
mov
adc
jno
clc
lock
repnz
mov
dec
pop
outsb
jo
pop
ret
jno
mov
pusha
inc
xchg
fcompl
int
lods
rcl
add
arpl
lea
cmp
jb
dec
fsts
fistpl
or
jmp
ds
mov
pop
in
es
inc
shr
cmp
mov
loopne
pop
and
pop
dec
inc
lcall
shrb
pop
and
pop
and
cmp
lcall
cmpsb
pop
push
jecxz
cmc
inc
stos
popl
xor
jne
loope
jp
std
inc
enter
sbb
arpl
lret
daa
jne
popf
fisttpll
pushf
xchg
mov
pop
sbb
and
js
xchg
mov
enter
pop
jno
andl
mov
in
lods
pushf
xchg
add
rorl
mov
pop
test
xchg
popa
mov
das
push
and
repnz
and
inc
je
pop
int
addr16
add
femms
sbbl
clc
loop
mov
mov
adc
pusha
sahf
lret
mov
xchg
lods
mov
sbb
loope
scas
inc
mov
pop
test
jmp
mov
push
push
jbe
repz
pop
fcoms
add
shrl
or
mov
roll
bound
mov
cmpsb
xchg
mov
gs
insl
cmp
lret
pop
jno
mov
out
sbb
sub
inc
push
inc
pop
inc
fiadds
dec
repz
inc
or
push
vaesenclast
sbb
inc
fwait
out
or
inc
cmp
test
push
push
or
sub
lret
out
dec
pop
movsl
jl
mov
subb
xor
in
jge
push
jne
jl
xchg
pop
arpl
jge
lock
inc
cmp
gs
daa
lds
mov
pop
les
pop
or
push
push
jnp
add
xchg
or
ret
xchg
aam
out
push
loope
movsl
or
push
mov
mov
mov
jne
mov
dec
scas
xor
popf
mov
test
or
and
dec
jp
mov
dec
cmp
sub
xor
xlat
insl
ds
add
je
into
sub
push
xor
fisttpll
adc
cmp
cmc
mov
inc
pop
sbb
mov
or
mov
fs
int
adcb
jecxz
pop
mov
insl
and
sub
aad
xchg
push
pop
mov
mov
push
lret
push
and
mov
inc
insb
setg
push
es
enter
out
outsl
andb
xchg
mov
jae
mov
sub
mov
or
or
sub
jbe
int
or
ja
cld
xchg
mov
std
mov
dec
lock
test
hlt
xlat
nop
in
ret
jge
in
jne
pop
adcl
ret
fwait
outsl
push
mov
ja
inc
aam
jae
in
pop
loope
cs
push
add
lret
aaa
loope
push
pop
icebp
mov
testl
les
mov
xchg
xor
pop
aad
mov
push
lods
mov
mov
hlt
into
or
jle
sub
and
jmp
xchg
adc
imul
or
test
xor
loope
std
dec
xchg
ljmp
push
xchg
repnz
sub
cmpsb
ja
push
xchg
push
outsb
push
pop
sub
insl
push
stos
stos
sub
jp
xor
into
lods
push
push
inc
stos
xchg
xor
jae
jne
mov
sbb
or
sar
and
jp
jmp
xchg
inc
sbb
dec
iret
xchg
popa
and
shlb
out
mov
mov
lcall
push
xchg
popa
fidivs
mov
movsl
iret
mov
adc
or
dec
pop
and
dec
push
fwait
pushf
xchg
xchg
dec
jbe
sbb
lea
mov
jp
hlt
out
dec
mov
adc
push
in
ljmp
sbbb
push
push
pop
aas
or
js
stos
add
cwtl
lds
fidivrl
sub
fisubl
ljmp
mov
pop
scas
pop
ret
inc
pop
or
rol
xchg
xlat
cld
loop
cmp
in
inc
push
sub
sbb
sahf
rcll
lcall
mov
cmpsl
call
xchg
pushf
out
test
adc
adc
sub
pop
pop
movsb
xor
test
sub
icebp
shr
addr16
inc
mov
enter
push
fisubrl
cmp
movsb
decb
fisubrs
adc
repz
ss
jns
inc
mov
or
jo
lret
mov
xor
int
stos
out
push
fwait
imul
cmc
lret
xor
loop
pop
inc
out
int
inc
out
lret
aam
addb
dec
es
pop
lods
loope
or
mov
int
push
cmpsb
stc
int3
sbb
cld
sbb
sub
stc
nop
jns
jo
jmp
inc
aam
or
adc
adc
in
out
lret
out
dec
in
bound
xchg
loope
or
ja
jbe
js
and
cmp
mov
mov
cmp
add
push
jl
pop
pop
mov
cli
pop
sbb
sbb
cli
mov
mov
add
std
pop
dec
sbb
mov
cmp
rcrb
xchg
jmp
clc
mov
add
sbb
aaa
hlt
inc
loope
mov
ds
mov
mov
mov
dec
jae
jns
and
xchg
and
push
rcr
nop
push
test
push
cwtl
xor
aam
inc
repnz
xchg
xlat
push
sub
out
in
add
cwtl
push
scas
mov
ret
inc
fidivrl
jo
pusha
lock
or
xchg
add
sub
add
adc
out
xlat
pop
jecxz
js
aas
ds
shll
xchg
imul
sarl
out
into
push
repnz
mov
mov
aad
add
lret
push
cmpsb
sub
mov
sbb
mov
gs
xchg
rclb
xchg
bnd
dec
sbb
outsl
xchg
aas
pop
in
in
leave
and
jne
dec
fwait
leave
out
stos
lcall
fisttpll
shll
xor
andb
out
xchg
sub
loope
test
pop
xchg
call
sub
sarb
sar
lds
aas
jne
pop
test
cmp
sar
mov
mov
lcall
scas
pop
rcrb
test
mov
test
mov
or
or
cmpsb
inc
lock
mov
xor
leave
lret
push
xchg
lcall
sub
xchg
push
stc
dec
push
cmp
dec
jo
pusha
jp
scas
and
and
jno
inc
jo
pop
inc
dec
js
stos
mov
testl
enter
in
or
and
lods
pop
inc
test
ljmp
xor
js
pusha
lahf
hlt
lcall
adc
mov
call
mov
repnz
incl
mov
scas
and
aas
sti
out
shrb
pop
scas
or
or
fisubrl
sarl
dec
aam
out
or
fs
cltd
cmpsb
mov
rorb
xchg
fcmovb
in
andl
adc
out
xchg
push
lods
and
cmp
lcall
daa
push
cli
ljmp
sub
dec
sarb
pop
cmp
sbbb
mov
rcrb
addr16
scas
mov
dec
mov
mov
ds
cmp
sbb
leave
sbb
sub
lods
mov
fmul
xor
movsb
ret
orb
pop
les
sbb
out
stc
pop
nop
inc
cld
jecxz
clc
mov
pop
imul
repnz
cmp
jno
mov
ja
adcl
mov
or
stos
lahf
or
ja
jle
push
cmp
jge
ret
mov
sub
add
push
jl
int3
inc
std
stos
call
sub
lahf
pop
ret
das
pop
and
xchg
fisttpll
cli
pop
jbe
subb
or
add
cmc
mov
loop
daa
fmulp
not
sub
rclb
pop
xor
pop
jo
rorl
loop
and
in
jae
addr16
mov
in
aas
pop
fadd
or
loope
ss
mov
pop
dec
cmp
mov
or
cs
movsl
sub
mov
pop
lods
mov
push
out
push
sbb
into
insl
je
cwtl
dec
adc
xlat
jp
fxch
mov
mov
and
lahf
sbb
repz
dec
push
fistpll
sbb
jg
aam
push
out
fcmovu
daa
pop
std
xor
and
mov
insl
pop
or
and
inc
cmp
daa
sbb
divl
sub
inc
jns
jo
daa
sbb
push
ljmp
xor
pop
ja
sub
jmp
fs
cmpsb
or
push
outsl
mov
das
xorl
shrb
into
pop
sbb
cmpsl
icebp
mov
sub
dec
fstpl
popf
jnp
jne
add
clc
gs
jno
insl
dec
sbb
std
rolb
mov
mov
in
inc
push
xchg
int3
xlat
adc
and
jle
cmpl
pop
sarl
lock
or
add
or
push
mov
ja
movb
lret
mov
ljmp
jg
xor
mov
sub
adc
sbb
add
dec
test
pop
insl
push
push
fadds
push
out
les
into
imul
xchg
inc
mov
xor
into
mov
mov
ret
pushf
xor
nop
icebp
sti
dec
inc
fcmovnb
xchg
jl
dec
and
sbb
and
ds
aaa
dec
roll
or
cli
xchg
fimull
insb
int
mov
mov
cmp
add
out
ret
jbe
mov
outsl
mov
mov
lahf
add
jns
pop
lds
test
mov
int
icebp
dec
inc
js
les
sub
jg
fisubs
xor
lcall
in
movsb
pushf
push
cmpl
mov
into
pop
ret
or
jecxz
pop
popa
jle
cmp
xchg
ds
jge
popa
xchg
adc
or
fisubrl
clc
inc
dec
repz
sbb
sbb
cli
lcall
cmpsl
nop
outsl
xor
sbb
push
mov
out
push
mov
mov
mov
mov
push
movsb
sbb
pushf
out
pop
sahf
test
leave
jge
test
repz
cmc
sar
sbb
xchg
in
mov
iret
cwtl
adc
jecxz
jne
stos
sti
pop
aad
mov
and
xchg
inc
mov
mov
test
and
int3
test
mov
daa
test
mov
sbb
ret
jnp
push
stos
aad
sub
popf
add
cmp
mov
in
rcl
xchg
ficoml
fcmovbe
xor
mov
inc
mov
fnstenv
and
int3
pop
rorb
lea
test
jns
pusha
sub
mov
sbb
cmpsb
aad
sub
sbb
cwtl
dec
jge
jp
push
mov
jl
jns
loope
out
sbb
lea
xchg
fsub
mov
jae
sbb
cmp
fmuls
pop
jnp
sbb
dec
inc
mov
shll
lds
adc
or
pop
cmpsb
mov
movsb
cltd
data16
xor
das
cld
dec
sbb
imul
jb
add
adc
mov
icebp
push
clc
xchg
ret
sbb
jg
sub
scas
mov
pop
aaa
cmp
mov
mov
push
mov
bnd
mov
jbe
add
dec
mov
in
incl
cwtl
mov
ja
sbb
jns
push
add
psubd
pmaddwd
mov
jo
xchg
nop
dec
xchg
test
pop
cltd
imul
fimuls
add
push
in
dec
mov
popa
dec
rclb
mov
out
mov
test
adc
add
shll
fwait
out
and
mov
xor
lds
mov
pop
orl
sbb
pop
adc
push
pushf
push
add
movsl
add
dec
popf
ret
dec
fs
cmc
outsb
dec
inc
test
mov
xchg
mov
das
lret
sahf
jge
scas
cmp
adc
mov
mov
shl
xchg
sbb
gs
and
xor
mov
pop
jae
cli
add
adc
jg
pop
imul
cmpsb
adc
sub
in
hlt
dec
dec
shlb
sub
aad
shlb
insb
xchg
xchg
cmp
sbb
movsb
sub
sbb
and
fbstp
test
ss
aas
fwait
popa
sbb
mov
mov
outsb
cmp
daa
xchg
mov
sbb
xchg
cs
shl
nop
ffree
fsts
repz
xchg
sub
dec
mov
or
or
lret
jb
mov
mov
or
dec
mov
stc
rcl
inc
imul
pop
push
sti
add
and
loopne
movsl
cmp
loop
call
mov
imul
xor
outsb
mov
mov
dec
or
xor
sbb
or
inc
and
lcall
push
pop
sbb
dec
repnz
xor
lret
nop
sarb
push
test
pusha
inc
insl
cmp
loope
mov
into
ret
sahf
mov
test
and
loop
sbb
inc
sbb
and
dec
jmp
jge
and
mov
or
insl
shll
jg
mov
mov
lea
pop
das
mov
test
xor
pop
int
pop
fwait
call
mov
fs
xchg
pop
xchg
sub
orl
negb
jg
xor
lcall
loope
mov
das
push
data16
mov
jne
enter
aad
mov
inc
jbe
out
outsb
sub
jo
negb
adc
in
adc
add
mov
push
mul
push
ja
mov
lahf
and
sub
mov
test
mull
pop
stos
inc
rorb
enter
psraw
fwait
mov
repnz
ja
mov
stos
rcrl
shrl
mov
cmp
pop
shl
data16
pop
out
insb
mov
pop
mov
stos
jecxz
push
inc
cmp
add
into
push
adc
xor
sarl
adc
inc
aas
push
adc
jecxz
mov
mov
push
stc
ja
inc
test
aam
mov
data16
jnp
ss
test
mov
lcall
outsb
add
mov
imul
jmp
and
addr16
inc
add
in
mov
adc
sub
mov
inc
hlt
hlt
sbb
scas
jb
jne
stos
mov
xchg
dec
imul
inc
es
dec
movsl
push
movsl
sbb
xor
sub
into
lods
cmp
cmp
lds
pop
clc
or
fnstsw
fimuls
andl
xchg
adc
lret
bound
inc
in
and
push
xchg
inc
cltd
xor
movsl
call
aaa
sbb
sub
xchg
jb
je
jbe
or
in
push
sbb
ret
sti
mov
movsl
orb
mov
add
or
mov
inc
push
adc
mov
or
sub
jne
sub
dec
nop
pusha
stos
inc
inc
rorl
imul
inc
dec
cmpl
lret
in
lea
sbb
xchg
icebp
cmp
sbb
xlat
addr16
fsub
cmpsl
outsb
add
incl
mov
add
leave
in
jecxz
and
in
inc
add
dec
sub
jae
outsl
mov
rcl
mov
loopne
pop
and
pop
je
mov
xlat
xor
dec
jmp
mov
ror
xchg
call
data16
jg
cmp
mull
and
addr16
lock
lret
push
lret
mov
sub
movsb
inc
pop
cmp
xchg
outsb
fbstp
jns
sub
jbe
mov
sbb
pop
pop
int3
mov
push
pop
pop
fxtract
das
movsb
mov
das
pop
lods
xchg
mov
sub
jne
sub
int
cs
aam
scas
mov
adc
mov
pop
add
lcall
ljmp
pop
adc
aaa
cs
rcrl
call
and
xchg
sub
jbe
popa
xlat
or
testb
sbb
mov
jns
sub
test
movsb
out
outsb
ds
inc
pusha
xlat
xchg
inc
or
jb
out
popf
lods
add
mov
leave
lahf
mov
adc
roll
cmpsl
popa
fcompl
into
jb
jle
sub
cmp
movsl
mov
adc
lds
movsb
sahf
dec
adc
insb
xchg
xor
outsl
dec
xchg
mov
outsb
dec
test
lea
outsb
sub
jmp
sub
sub
sbb
cld
jb
mov
lods
jg
sub
aas
loop
jg
xchg
pop
adc
lea
xchg
sbb
jbe
xchg
pushf
jnp
jnp
lds
sub
inc
inc
div
fmuls
adc
cmp
adc
pusha
push
scas
push
loope
xchg
test
push
punpckhwd
cs
jno
dec
inc
negb
andl
test
jno
inc
xchg
xchg
mov
lods
add
adc
outsl
andb
loop
sahf
pushl
jnp
stos
in
jl
int
mov
aaa
mov
enter
pop
push
jnp
adc
inc
jmp
ret
gs
cltd
cmp
in
lahf
fwait
aad
sbb
imul
xor
and
sub
jg
jmp
fimuls
cmpsl
mov
push
shlb
jb
cmp
dec
mov
in
jge
jno
sbb
es
setp
rclb
dec
push
push
ret
dec
sbb
or
add
mov
nop
jecxz
out
scas
popf
mov
sti
pusha
test
jo
dec
xchg
pop
jg
lock
add
or
push
roll
jmp
jl
fwait
fstpl
sbb
mov
hlt
les
xchg
andl
push
rol
jbe
sti
and
xchg
shll
cwtl
pop
push
dec
jmp
pop
mov
cli
mov
lds
jl
mov
mov
andl
add
mov
inc
cld
into
out
lods
andb
scas
dec
pop
das
xchg
push
dec
testl
fucomi
cmp
push
enter
mov
adc
loop
xchg
xchg
jae
xor
push
mov
ret
imul
jne
icebp
mov
push
stos
jmpw
push
add
mov
push
push
lods
mov
dec
addl
push
dec
and
xchg
and
cmp
mov
inc
add
cmp
pop
ret
test
das
push
push
or
lret
add
sbb
int3
mov
fists
popl
fwait
pushf
dec
jp
inc
mov
bound
cmp
push
sbb
jmp
loope
repz
xchg
and
repz
dec
xor
test
pushf
sbb
fldenv
or
jge
xorb
or
mov
inc
aaa
ret
fisubrs
daa
jno
push
inc
push
scas
mov
and
mov
pop
incb
xchg
pand
mull
test
mov
jmp
in
jle
lds
outsl
xor
jmp
pop
xchg
inc
xchg
pop
xchg
xor
mov
mov
pop
in
sub
jp
or
fsubrp
push
popf
mov
sbb
sbb
insb
idivb
jmp
and
test
xor
pop
loope
call
jae
cmp
and
dec
sbb
gs
adc
push
iret
loopw
es
pusha
orl
lret
loopne
sub
add
in
add
add
mov
leave
fwait
sbb
pop
loopne
sub
nop
xchg
sbb
fyl2x
int
dec
add
roll
push
jge
dec
mov
sar
icebp
and
mov
hlt
aad
jae
shl
cmpb
dec
inc
mov
cmp
push
out
sahf
pop
inc
mov
sbb
ja
mov
popa
cmp
and
hlt
and
pop
ss
pop
xchg
pushf
cmp
mov
dec
adc
lret
dec
pop
xchg
cmp
repnz
mov
sub
push
adc
fidivrs
sub
add
lds
xchg
cs
mov
sarb
sbb
in
or
mov
sub
int
pop
loopne
roll
int3
es
out
sbb
xor
push
test
mov
aaa
cmc
repnz
adc
adc
sub
mov
fxch
jne
and
loope
mov
fdivrp
leave
xor
lret
test
addb
jnp
mov
mov
jnp
jg
popa
fwait
lret
fnstenv
shlb
faddp
jle
stc
cmpsb
shll
xchg
push
xchg
dec
add
xlat
sbb
ds
icebp
jae
dec
repz
repnz
jo
add
bnd
cmp
xchg
sub
jo
mov
ficoms
out
bound
shl
mov
pop
cld
dec
xchg
mov
xchg
mov
rorb
jb
outsb
movsl
cmpsl
mov
jbe
cmp
or
pop
push
repz
enter
xchg
cmc
and
mov
ja
xchg
ds
dec
addr16
add
xchg
jnp
xor
jbe
fwait
rol
adc
xor
add
jbe
mov
addr16
pop
neg
fcomps
xor
sub
cli
jmp
jbe
add
in
xor
popf
lock
mov
andb
enter
adc
push
jb
xchg
repz
shlb
pop
ss
mov
dec
lods
movsl
pop
push
daa
push
or
imul
shll
dec
add
sub
mov
roll
cmc
dec
enter
fwait
push
sub
inc
cli
jno
mov
sbb
xor
and
jne
mov
mov
ss
repnz
sti
stos
jo
int3
jns
or
negb
subl
sbb
push
dec
leave
or
shrb
test
sbb
cmp
lods
ret
andl
movsb
pusha
lea
inc
dec
mov
in
and
imul
mov
mov
outsl
xchg
lods
add
adcl
aas
mov
or
add
in
js
xchg
mov
mov
pop
lcall
idivl
pop
jae
jb
in
dec
add
fwait
daa
mov
push
push
push
sub
hlt
notb
push
sub
andl
pop
mov
mulb
mov
test
imul
push
dec
daa
jnp
pop
js
insb
jecxz
jge
and
push
pop
mov
js
xor
cmp
cmp
sbb
aam
dec
pop
outsl
insb
ret
sahf
cmp
mov
fisttpl
mov
out
jb
adc
push
test
pushf
out
test
loope
sarl
gs
sub
repnz
inc
lcall
repnz
adc
push
xor
cmp
es
shrb
cmp
adc
insl
cmp
push
push
fldenv
jecxz
fucomi
outsb
add
imul
ja
inc
inc
sbb
add
mov
in
sub
subl
cwtl
call
je
or
sti
mov
std
dec
roll
sbb
scas
loopne
aaa
in
test
mov
fdivs
xchg
inc
insl
dec
or
leave
xchg
rol
mov
test
push
das
mov
adc
loopne
xchg
dec
fmuls
cmp
cmpl
cmp
fdivs
sahf
adc
inc
xchg
sub
ss
popa
mov
or
add
in
push
in
rcl
ret
jae
sbb
scas
adc
add
psubusw
or
fwait
pop
leave
jnp
xorl
pop
rorb
mov
mov
xor
rorb
outsb
or
iret
cmc
mov
sub
icebp
and
jnp
xor
dec
pop
sub
pop
sbb
outsl
add
inc
jecxz
xor
jne
xor
jl
sub
mov
cltd
cs
push
xchg
add
sub
sbb
sbb
xor
lahf
aas
add
push
cltd
inc
sahf
data16
gs
mov
xorl
jno
xchg
sbb
mov
and
iret
imul
cmp
and
push
psllw
lret
imull
xchg
imul
inc
push
mov
mov
fcoms
dec
adc
cwtl
outsb
leave
addl
aad
aaa
icebp
popf
mov
or
push
decb
cwtl
jbe
xor
dec
sub
add
fadds
xchg
dec
fs
push
hlt
fiadds
in
sbb
out
stc
jne
mov
and
lds
ss
pop
inc
cs
ljmp
jmp
lret
xor
push
ja
sbb
xlat
popf
jle
cwtl
int3
and
clc
cwtl
xchg
xor
inc
icebp
mov
movsb
sbb
xchg
push
or
ss
mov
pop
sub
adc
ds
pop
icebp
je
mov
adc
lahf
je
lds
xorl
jno
sar
das
fdivr
ret
ljmp
test
xor
jnp
lret
es
push
aam
gs
mov
dec
dec
push
rorb
dec
cs
adc
jle
adc
and
dec
int3
ljmp
jl
xor
imul
inc
push
repnz
fs
faddp
cmp
fildl
jg
push
repnz
outsl
mov
leave
imul
aad
jbe
mov
ret
addr16
inc
test
ret
fbld
cmpl
ds
xor
mov
push
or
shlb
mov
or
and
nop
xor
and
jne
jle
push
inc
xchg
sbb
cmp
or
rolb
xchg
iret
xor
movsb
fidivs
and
call
sub
sub
fcoms
nop
es
jmp
ret
pusha
bound
imul
lds
push
sbbb
pop
bound
fndisi(8087
pop
mov
mov
mov
sbb
jae
hlt
push
mov
enter
call
push
fwait
add
push
cmc
outsl
adcb
js
push
and
xchg
push
aas
jp
push
dec
jne
mov
loope
cs
pop
icebp
jae
inc
ds
mov
aas
bound
push
lcall
das
xorb
sbb
or
inc
cmp
xchg
pop
pop
stos
ss
sbb
xor
jg
jae
cli
pop
cmp
xor
test
mov
add
mov
mov
xor
sub
adc
out
mov
mov
cltd
xchg
push
insb
bound
adc
dec
or
pop
xchg
mov
lock
mov
mov
lods
mov
fldt
add
cli
inc
jecxz
mov
mov
and
ja
mov
sbb
scas
inc
inc
sub
jecxz
gs
and
cwtl
out
inc
cmp
inc
fnstcw
outsl
push
lea
inc
mov
dec
xchg
out
test
stos
popa
xor
jg
mov
in
push
int
sbbl
popa
mov
mov
push
popa
jge
test
lds
sbb
jns
in
cmp
jge
clc
or
cmp
insb
sbb
test
add
jnp
mov
stos
push
jo
pop
sbb
adc
xor
scas
mov
add
jo
xor
dec
adc
iret
xchg
inc
call
aas
mov
mov
cld
mov
inc
sub
mov
adc
inc
cmpsl
fldenv
mov
push
bound
bound
cltd
push
add
dec
push
and
fstl
lds
stc
pop
out
repz
mov
lcall
lds
xchg
pusha
dec
ret
push
or
fsubrl
lahf
inc
ja
dec
cmp
jo
out
adc
add
jle
aam
jg
fcmovnbe
mov
mov
push
add
dec
inc
cltd
lea
jle
jmp
jb
scas
cmp
mov
add
rorl
xor
lds
push
shr
aam
sbb
nop
shll
lahf
mov
mov
jg
cmovno
orb
aas
jnp
mov
pushf
mov
test
dec
dec
shl
push
loope
xor
adc
mov
jecxz
imul
pushl
mov
cli
gs
inc
mov
or
xor
pop
scas
jno
shrl
js
lods
cltd
and
ficompl
add
repnz
repnz
xchg
les
sub
mov
sarb
jp
add
or
jbe
cmp
jmp
stc
push
inc
pushf
enter
mov
pop
jne
jmp
cltd
cld
adcl
jmp
stos
testb
mov
call
ds
add
xchg
aaa
pop
dec
fldl2e
inc
xor
lods
scas
jmp
and
jge
icebp
mov
cltd
lods
mov
leave
rorl
xor
xchg
cmp
sbb
movsb
dec
push
mov
int3
push
lods
xlat
je
mov
jge
imul
dec
lret
or
cmpb
xchg
ret
rorb
jl
sbb
xchg
ja
dec
je
mov
lea
mov
scas
arpl
pop
int
lods
and
cli
pop
test
out
pop
or
mov
into
add
xchg
sbb
jmp
in
mov
aam
mov
inc
mov
movsl
cmp
mov
repz
mov
jb
inc
pop
nop
jb
and
in
fsts
inc
nop
sbb
add
xchg
ja
out
lcall
dec
daa
orb
stos
sub
jbe
sub
insb
adc
mov
push
xchg
mov
shr
xchg
ss
inc
aaa
mov
mov
out
jae
xor
out
into
adc
mov
popa
fs
cmp
xor
mov
pop
adc
push
arpl
test
mov
mov
stc
in
ret
out
cmp
and
das
test
mov
pop
jmp
sbb
pop
mov
repz
jg
cwtl
cld
in
es
in
out
insl
inc
ja
loope
sub
push
in
aam
lret
add
and
adc
dec
dec
sbb
jb
push
sub
inc
sbb
and
popf
jl
in
adc
xchg
jg
cmpsl
ja
mov
mov
inc
in
and
insb
jnp
jg
je
std
mov
or
fsubs
std
adc
dec
pop
ss
mov
dec
dec
int3
pusha
lods
and
jle
hlt
sbb
lock
aas
xchg
mov
cmp
add
pop
movsb
scas
fdivl
jmp
xchg
fimull
sub
popf
jne
dec
inc
movsl
out
xlat
push
ret
push
mov
xlat
pusha
jge
bound
mov
jl
in
scas
aam
out
iret
test
mov
das
frndint
sbb
shll
xchg
enter
jmp
inc
mov
in
inc
movsb
xor
and
xor
xor
int3
mov
aam
mov
add
ficomps
xlat
movsl
shrl
mov
loop
pop
adc
cltd
lea
add
inc
jae
loope
jmp
and
test
call
inc
daa
sahf
sbb
adc
xor
jecxz
mov
bound
mov
inc
sti
outsb
fisttpll
sbb
loop
adc
fsts
lahf
in
sti
dec
sahf
fistl
inc
mov
int3
je
sbb
std
add
loopne
xchg
icebp
sbbb
pop
pop
pop
shlb
pop
loop
inc
dec
inc
push
orl
adc
mov
push
rcr
insl
aad
xchg
adc
dec
jmp
lds
cld
mov
xchg
stos
pop
jmp
int
sbb
data16
leave
inc
dec
push
aad
fcoml
mov
dec
jecxz
in
popf
dec
and
inc
dec
and
push
sarl
daa
pop
push
jl
mov
aam
cmp
mov
sbb
in
and
fidivl
mov
insl
or
lock
mov
cmp
cmpl
aas
inc
aaa
sub
mov
lock
xor
arpl
ss
into
jge
fnstcw
xor
rcrl
jp
adc
stc
ja
fistpll
jp
mov
fsubrl
arpl
push
or
push
shlb
in
ja
mov
ret
pop
jmp
shl
xorb
pusha
jmp
sub
lret
jl
fsubrs
add
inc
addl
xor
inc
stc
add
adc
ja
in
inc
fsub
data16
std
add
imull
fstl
xchg
fcmovnb
aas
movsb
sahf
scas
mov
mov
jp
adc
cmpsl
clc
stos
push
cmc
or
movsb
lea
sub
adc
sahf
lods
mov
pop
insb
rorl
fstps
pop
push
jecxz
adc
arpl
gs
inc
push
das
mov
imul
and
xchg
cmpsb
cmp
jb
mov
ds
data16
cmp
jmp
push
in
and
in
pop
sub
aad
and
jl
in
mov
cmpsl
ret
push
icebp
mov
out
dec
sub
std
dec
inc
mov
fisubs
pop
aad
sbb
outsb
mov
inc
xchg
sub
mov
pop
push
and
imul
lret
mov
fldenv
inc
scas
cmp
and
insb
sbb
or
in
jle
mov
loope
pop
sarb
sub
or
and
cli
divb
cmp
mov
or
mov
popf
jle
xlat
inc
test
pop
and
xchg
add
cmp
mov
push
mov
pushw
aas
addr16
in
cmp
arpl
jge
out
jp
pop
nop
mov
push
call
push
pop
lea
push
mov
arpl
pop
shlb
aaa
jp
testl
jno
std
mov
or
imul
lret
inc
popf
loope
stc
xor
loopne
ja
es
mov
sarl
rcr
lds
dec
sbb
pop
and
mov
sbb
stc
adc
inc
cs
testb
push
jge
dec
jge
mov
mov
shll
jbe
imul
mov
xchg
inc
or
out
push
insb
adc
jmp
dec
popa
jo
rcl
insb
les
jle
rolb
push
xlat
int
mov
pop
popf
cmp
xor
inc
rorb
push
adc
jle
imul
imul
mov
and
pop
in
fsubrl
incl
xchg
jg
das
jne
call
hlt
ss
mov
loop
mov
mov
ja
lds
and
sub
js
add
lods
in
test
pop
clc
je
cmp
jno
sub
daa
pop
inc
imul
ret
movsb
xor
mov
or
inc
cmp
xor
cltd
pop
pusha
mov
cwtl
mov
dec
lods
popa
sahf
sti
xor
into
rorl
mov
adc
push
sbb
rcrb
adc
rcl
outsb
push
xchg
jmp
aam
into
pop
test
push
dec
mov
or
mov
sub
es
outsl
nop
ss
mov
lahf
inc
xchg
push
ljmp
mov
arpl
lahf
mov
std
push
fcom
sbb
xor
movsb
mov
test
push
sub
push
pop
sub
or
ficomps
aas
push
inc
dec
xchg
pop
push
call
movsl
dec
pop
pop
push
and
cmpl
jno
xor
into
jb
into
or
jg
mov
inc
add
lret
lock
or
repnz
cwtl
xlat
jge
test
loop
mov
sub
ds
mov
fs
mov
xchg
push
jp
addr16
fxch
divb
lods
and
and
jecxz
gs
rolb
cld
adc
dec
pop
cmp
outsb
pop
or
sbb
add
inc
pop
and
out
data16
and
or
fdiv
shrl
fisubrl
sub
push
pop
or
cmp
jmp
sub
or
shl
mov
cmp
negl
mov
jl
and
and
and
pop
das
movsl
jmp
stos
sbb
insb
push
rcll
mov
mov
daa
cmp
cmpsl
mov
push
cld
movsb
mov
aam
out
xchg
rorb
roll
enter
pop
rclb
outsb
pop
lret
fsubrl
inc
jmp
movsl
sbb
push
xlat
jbe
and
sbb
jo
push
fsts
xor
adc
pusha
or
push
push
push
pop
call
sub
sub
xrelease
jno
adc
add
adc
push
xchg
and
inc
cmpl
cs
rorb
je
push
mov
aaa
je
jnp
push
leave
aaa
scas
mov
iret
aam
and
pop
out
inc
jl
aas
cmp
popf
mov
and
out
ret
scas
dec
pop
rolb
shlb
rorl
inc
rorb
sahf
dec
mov
mov
pop
xchg
data16
dec
loope
icebp
jl
inc
inc
movsb
ljmp
inc
cs
xchg
mov
dec
xchg
test
mov
fisubs
inc
out
add
daa
fucomip
xchg
or
xor
iret
adc
lea
stos
aad
xchg
fidivrs
hlt
xlat
push
lds
jo
shll
xchg
pop
iret
or
scas
repnz
sub
push
lods
enter
subl
inc
jp
ljmp
sbb
and
test
lods
inc
or
adc
or
and
idivb
in
pop
popf
jl
mov
in
mov
xchg
out
outsb
stos
xchg
fdiv
ret
jno
or
aam
lds
std
xor
aaa
sbb
clc
jbe
ja
data16
cmp
jo
notl
icebp
pop
mov
dec
mov
out
popa
push
inc
cmp
pop
mov
insb
test
cmpsl
mov
lcall
repnz
ror
push
jno
lea
les
repnz
mov
adcl
and
xor
mov
into
cmp
mov
lods
jb
shr
xchg
jns
loop
dec
push
push
dec
cmc
jg
jae
daa
pop
lds
mov
cwtl
popa
loopne
push
xlat
mov
push
aad
cmp
mov
rolb
je
jecxz
lock
nop
rcrl
test
rorl
cmpsb
inc
mov
rcrb
cs
lods
cmp
arpl
pop
mov
adc
rorb
les
dec
mov
insl
jmp
scas
jge
mov
jne
fidivs
movntps
shl
sti
stos
enter
punpckhdq
sub
mov
cmp
insb
adc
leave
stc
sarb
xorb
push
cmp
mov
mov
mov
adc
test
es
fstl
test
ljmp
mov
inc
push
and
dec
mov
lea
mov
lds
sub
xchg
inc
fdivl
inc
hlt
movl
in
iret
clc
mov
sbb
jb
lret
dec
mov
cmp
aaa
testl
mov
lea
int3
repz
adc
xchg
cmpsb
flds
pusha
mov
loopne
aam
add
nop
ds
xchg
imul
lret
sbb
xor
das
cmp
stc
out
in
int3
jle
std
add
test
jg
or
rorl
jmp
adc
mov
jge
jg
pop
push
and
cs
pusha
xchg
scas
call
or
testl
jle
int
push
jo
cmp
je
inc
scas
divb
int
sub
mov
flds
cmp
fcomp
loopne
and
or
bound
inc
out
add
icebp
inc
test
jno
adc
add
jne
inc
pushw
adc
push
ds
fcomps
sbbb
xchg
cmp
mov
and
mov
cld
or
lock
stos
cmp
int
inc
add
or
lea
xchg
sub
adc
in
adc
loopne
mov
or
inc
jecxz
add
ret
or
and
mov
int
in
test
outsl
notb
mov
adc
mov
mov
lret
in
sahf
cli
jns
sub
adcb
inc
mov
cmp
lds
lcall
xchg
add
out
xor
ror
jne
push
lea
sti
mov
inc
or
add
dec
sbb
cwtl
addl
fnstcw
and
inc
fnstenv
mov
adc
xchg
call
dec
loop
das
add
hlt
hlt
add
ljmp
fisttps
cmpl
push
iret
mov
div
iret
popf
stc
lds
jmp
pmullw
xlat
inc
incb
in
mov
add
dec
test
popf
mov
arpl
adc
movb
inc
stos
cmp
pop
and
shlb
xorl
ret
outsb
aad
xor
mov
or
outsl
dec
pop
adc
fistpll
outsb
inc
enter
mov
int3
dec
ss
mov
mov
lds
cli
lahf
out
pop
xor
rclb
loope
add
mov
xchg
iret
adc
mov
lret
imul
inc
pop
imul
inc
shll
mov
inc
aam
pusha
movsb
jb
or
outsb
jae
ljmp
jo
jo
popf
fwait
jnp
dec
push
ds
push
lcall
loope
testl
sub
adc
aam
jl
lcall
lret
shll
jl
cli
add
lods
sub
cmp
pop
or
dec
ss
jnp
inc
mov
push
notb
xor
into
inc
out
ret
xor
or
gs
cli
inc
jne
xlat
xchg
mov
cmp
clc
clc
movsb
sbb
ds
ror
cmpsl
pop
repnz
popa
mov
mov
cmp
movsl
les
mov
adc
ror
lcall
pop
pusha
movsl
call
xorb
sbb
inc
in
mov
das
mov
jmp
shlb
cld
sbb
push
fistpll
adc
xor
inc
lock
xchg
test
pushf
add
shll
xchg
cmp
cmpb
xor
or
adc
lea
lret
mov
push
shl
in
dec
insb
jbe
mov
pcmpeqb
dec
xchg
sbb
cmpb
test
pop
pop
je
sub
xlat
test
mov
cmc
mov
mov
jbe
aam
lock
sub
jnp
outsb
dec
cmpsb
ret
addr16
call
outsl
sarl
jecxz
fsubrs
stos
and
lahf
xchg
js
jp
sub
insb
fisubl
lods
jecxz
mov
and
loopne
adc
stos
fstps
rclb
shr
xor
es
sbb
push
mov
xchg
push
gs
popa
mov
insl
stos
scas
pop
push
mov
aam
loopne
out
inc
add
sbb
sbbb
sbb
or
xorb
push
or
in
scas
repnz
mov
and
jmp
into
jne
fwait
je
sub
out
sahf
inc
or
or
dec
jo
xor
inc
ss
std
fstl
sbb
pushf
pop
inc
icebp
cmp
ljmp
add
xorl
lock
fistpl
jp
nop
xchg
shlb
mov
push
and
jno
dec
mov
dec
adc
ja
es
xchg
icebp
mov
jno
fcmove
dec
xor
out
out
sub
movsl
cmc
and
adc
pop
mov
dec
cmp
mov
bound
and
in
clc
jno
fsts
jmp
jp
loop
fdivs
xorb
js
push
mov
out
mov
mov
pop
pop
test
test
mov
insl
std
mov
insb
sahf
aam
adc
adc
outsl
or
mov
adc
sbb
fwait
test
sub
mov
pop
mov
fbld
mov
push
sti
int3
xchg
inc
outsb
jp
out
repz
jp
test
xchg
andl
lds
add
push
sub
aad
imul
dec
push
or
decl
jbe
les
loop
mov
in
arpl
cmp
dec
mov
cltd
ret
mov
test
sahf
fstpl
ret
jg
jg
or
jo
jmp
xchg
pop
loopne
adc
js
mov
sbb
jo
scas
cmp
cwtl
and
or
inc
pop
or
add
mov
adc
push
push
add
test
popf
or
icebp
push
push
icebp
ds
clc
mov
jo
ljmp
xchg
pusha
jae
call
imul
dec
or
pop
dec
add
clc
out
mov
cmp
vpmacsww
jo
xor
out
daa
in
lock
lea
test
aam
arpl
gs
shll
icebp
test
clc
pusha
xor
out
cmp
test
sbbl
faddl
ret
in
filds
stc
push
mov
ja
lds
nop
cmp
loop
and
pusha
cmc
cwtl
nop
outsl
out
mov
mov
insb
pop
sbb
xchg
mov
and
aaa
fildll
cwtl
lods
sarb
fimuls
je
or
inc
cli
out
lods
push
cmp
nop
int
test
arpl
pop
aas
cli
cmp
pushf
push
sbb
cmpsl
insl
cld
outsl
das
xchg
add
movsl
jecxz
or
push
ret
clc
out
hlt
loopne
xor
add
xor
or
ret
aad
nop
dec
andb
fcompl
mov
cli
dec
out
aaa
mov
cwtl
cmc
jne
enter
adc
jg
jg
pop
pop
or
mov
xchg
sbb
nop
movsb
stc
out
pop
and
dec
shrb
add
push
lea
sub
out
adc
fcom
sub
jbe
pop
iret
leave
xor
add
sbb
clc
decl
pop
divl
or
test
or
jg
and
out
jge
dec
lret
sub
arpl
daa
or
jge
mov
pop
ret
xor
stc
dec
negl
xor
lahf
popa
inc
scas
sbb
inc
adc
mov
cltd
ja
test
loop
add
cmp
shr
dec
incl
lahf
mov
in
shrb
mov
inc
xchg
repnz
jne
mov
fistl
mov
lcall
push
inc
or
mov
pop
rolb
movsl
mov
lods
enter
pop
pop
fs
xchg
jno
cmp
inc
xchg
mov
mov
pop
loop
push
rcrb
jne
cmc
push
idiv
push
mov
lods
movsb
jg
popa
ljmp
xchg
dec
and
inc
enter
mov
add
xchg
hlt
and
push
repz
xchg
aam
out
adc
cmp
loopne
lea
jecxz
sbb
push
popf
mov
push
cmp
out
aad
das
xchg
push
push
loopne
push
inc
pop
loop
call
push
rol
add
push
shl
xor
lcall
push
addl
repnz
inc
xchg
cwtl
out
lock
fs
xor
js
sti
pop
bound
xchg
les
push
pop
cmp
push
and
les
adc
mov
add
jp
pushf
pusha
jnp
dec
ror
or
sub
adc
cmp
shll
lahf
dec
dec
jge
mov
push
jmp
push
xchg
aam
repz
sbb
lock
imull
dec
das
cmc
sahf
mov
cmp
cmp
xor
pop
or
insl
int
xor
cltd
sub
pop
arpl
test
xor
adc
pop
mov
imul
lahf
test
pop
movsl
dec
sbb
mov
jle
adcb
xor
mov
pop
sti
cltd
aam
xor
sbb
int
int3
aad
mov
stos
fwait
lods
cmp
leave
je
lds
loope
insl
daa
pop
xor
rorl
jle
not
push
xchg
sub
aad
sub
mov
sbb
xor
sahf
mov
pop
mov
pop
lods
push
jno
or
ljmp
add
mov
ja
and
ds
iret
jg
xchg
pushf
adc
mov
add
negl
int
cmp
incl
enter
mov
aas
test
add
mov
and
cmpsb
sub
mov
sub
int3
mov
inc
mov
cmpsl
inc
jp
lret
jne,pt
jle
pop
xor
mov
imul
pop
loope
jp
loop
mov
lcall
push
scas
xor
adc
add
in
xlat
stos
nop
scas
inc
jne
sbb
dec
gs
jge,pt
add
test
xchg
sbb
int3
mov
mov
out
cli
push
js
arpl
inc
inc
jo
sbb
cmp
push
popa
lock
push
xor
mov
xlat
in
repz
stc
test
out
popa
cmp
repz
dec
lods
lock
sbb
pushl
inc
pop
ret
loop
fs
push
int3
in
addr16
pop
mov
mov
jg
insl
inc
fisubl
jns
movsl
and
mov
push
or
mov
repnz
pop
scas
or
sub
mov
aaa
mov
xor
xchg
and
cmp
push
sti
cwtl
sbb
lahf
sti
sub
mov
xor
mov
or
push
fcompl
pop
adc
sbb
mov
and
jecxz
in
xchg
mov
sbb
enter
insl
xchg
cmp
lahf
cmova
mov
jno
mov
mov
sets
and
pop
loop
test
popf
pusha
dec
cmp
cmpb
or
sarl
mov
les
xchg
je
inc
cmp
lret
mov
popf
xlat
mov
test
es
leave
rol
inc
loope
inc
pushf
cmpsb
repz
popa
xchg
sub
xchg
pop
add
or
and
loope
cmc
pushf
movsl
adc
cwtl
adc
mov
insb
sbb
mov
inc
inc
push
hlt
adc
push
sub
add
cmp
iret
pop
adc
inc
out
data16
mov
inc
push
loopne
sub
sbb
sub
push
lret
bnd
xchg
mov
jmp
add
mov
sub
imul
cs
popa
lret
into
fistpl
stos
sbb
sub
scas
cmc
sub
popa
jl
mov
rolb
pop
rcl
inc
jg
cmpb
std
xor
sub
sbb
xchg
fbstp
adc
iret
xor
int
sub
lods
or
add
pop
push
adc
dec
add
adc
out
sub
dec
call
fcoml
mov
hlt
fs
mov
cs
and
leave
fyl2xp1
push
pushf
push
mov
orl
pop
jne
mov
aam
scas
js
ret
sahf
jmp
sti
push
aas
sbb
pop
mov
dec
mov
dec
xchg
mov
int3
xchg
or
repz
sar
push
mov
addr16
pushf
imul
or
lret
mov
cwtl
mov
popa
jecxz
push
test
mov
popa
dec
sbb
call
cmp
pop
sahf
jns
push
push
movsb
push
incb
or
xor
pop
iret
xchg
fnstsw
xchg
and
test
add
inc
in
jae
inc
cmc
pop
out
or
test
cld
or
loope
scas
test
adc
out
and
adc
mov
inc
rcrb
inc
lret
adc
fnstsw
hlt
or
cmp
clc
cltd
jo
cltd
lret
lods
mov
inc
repnz
cmp
jmp
push
mov
pop
mov
andb
ds
inc
sarb
push
fnstcw
push
mov
dec
leave
mov
sbbl
idiv
nop
lcall
loop
clc
loopne
in
pop
and
mov
sti
pop
xchg
mov
dec
cli
popa
jae
leave
mulb
and
pop
shrl
aas
scas
sahf
fisttpll
in
loope
or
movsb
mov
shrb
inc
or
fcomp
jb
js
jbe
out
test
push
push
xor
lods
mov
and
out
mov
arpl
mov
sbb
div
pop
enter
cli
push
mov
aam
cmpsb
pop
push
outsb
xor
mov
mov
xlat
faddl
fimull
and
lock
aad
iret
jns
xor
bound
shlb
scas
aam
in
and
sti
pop
loop
add
or
int3
add
roll
mov
xchg
dec
addl
ret
sub
mov
pusha
adc
dec
stc
xor
aad
stos
int
cmp
mov
and
in
sub
outsb
lret
mov
daa
rol
mov
xor
mov
jl
cmp
es
cmp
shl
mov
into
movsl
js
loop
pop
out
cltd
dec
aas
pushl
cmp
mov
rcrb
mov
ss
sub
adc
push
xor
inc
add
xchg
mov
roll
leave
scas
jp
outsl
jp
stos
jle
addr16
adc
mov
or
addl
ljmp
jp
int
bound
pop
popa
lods
imul
orb
mov
mov
rcl
int
pop
jne
outsb
mov
mov
lret
inc
mov
lea
popa
repz
fs
test
aad
and
dec
sbb
and
movsb
cmp
jl
enter
pop
xorl
js
fdivrs
jecxz
mov
dec
sarb
or
jg
sub
pop
jne
fbstp
leave
xor
jo
mov
insb
jmp
pop
sahf
pop
push
dec
and
sbb
pop
sub
xor
xor
add
outsb
jge
push
rclb
scas
add
test
adc
push
push
push
mov
orl
scas
mov
movsb
adc
out
imul
fdivrl
gs
mov
ret
sub
push
mov
fcmovbe
mov
stos
shl
shl
adc
imul
fwait
pop
stc
or
push
stos
xlat
popf
fldl
enter
leave
dec
mov
xor
loopne
inc
jp
stos
or
jl
pop
mov
push
repz
mov
aas
and
jne
fs
cltd
xchg
mov
lcall
dec
mov
xor
fdivrl
aas
fisttpll
aas
pusha
pop
push
das
fwait
push
les
out
repz
iret
rcrb
sbb
adc
mov
daa
pop
xchg
ss
push
shr
or
adc
pop
and
mov
mov
imul
fidivl
cmp
scas
das
test
mov
cmp
mov
push
add
in
or
scas
cli
arpl
shrb
dec
mov
test
iret
or
repz
xchg
movsb
popf
dec
lea
out
out
cltd
push
mov
les
enter
int3
scas
dec
inc
js
popa
leave
in
mov
push
or
inc
nop
add
and
jl
ljmp
mov
dec
mov
in
dec
je
out
xor
mov
cld
mov
inc
lcall
out
xchg
jbe
cltd
xchg
mov
out
adc
add
aad
sub
insl
int3
loopne
push
mov
push
lds
arpl
sub
inc
jne
add
clc
cmpsb
in
xchg
push
mov
mov
pop
fstl
sbb
jae
int3
loop
imul
mov
das
cwtl
sub
mov
notl
cld
icebp
lds
loopne
jno
call
ret
mov
js
jp
call
loope
ret
mov
sbb
xchg
pop
cmp
cltd
decb
loopne
cmc
and
push
jle
mov
in
mov
ja
jns
inc
rol
adc
mov
rcll
push
push
lods
fsts
insl
out
repnz
arpl
jno
loopne
pop
dec
push
iret
sub
and
sarl
fldl
add
addps
jno
push
icebp
cmp
pop
mov
push
push
add
add
pop
mov
dec
clc
orl
sbb
push
ljmp
rcrl
fdivl
pusha
lock
push
jg
push
xor
mov
jo
roll
mov
out
pop
dec
daa
lret
in
scas
sbb
mov
repnz
movsb
jne
inc
and
pop
sub
mov
pop
cmp
ljmp
in
pop
or
mov
fcomp
sti
test
ds
out
scas
mov
fmull
xchg
mov
ds
jmp
cmpsl
push
mov
lds
push
adc
fmull
imul
lret
cmp
sbb
fstpl
out
aad
ret
out
adc
shlb
ret
inc
adc
adc
ljmp
shll
aam
jae
fsubl
gs
adc
xor
push
call
clc
and
jg
mov
adc
push
pop
jnp
out
jecxz
outsl
xchg
insl
fadd
pop
add
add
test
fldl
loope
sbb
mov
xor
pminsw
xchg
aaa
mov
mov
xor
push
cmpsl
adc
sub
mov
mov
test
rcrl
add
push
xor
fcmovbe
insb
xor
scas
lods
pop
std
mov
ja
or
adc
js
mov
or
xchg
sti
ljmp
insb
push
mov
push
sbb
sub
xchg
int
fistpll
push
pop
xchg
dec
ja
mov
das
xchg
movsl
pop
dec
pop
dec
cwtl
sbb
aad
pop
out
xchg
rcrl
cmp
cli
iret
dec
std
jne
cmp
xor
adc
loope
out
mov
lock
cmp
cmp
mov
std
pop
aaa
dec
adc
add
mov
inc
xor
repnz
ljmp
push
ret
push
mov
sub
outsb
push
loope
sarb
sub
mov
and
xchg
inc
fs
fstl
test
add
dec
daa
add
int
rol
mov
arpl
adc
inc
inc
push
loopne
mov
dec
in
outsb
pop
pop
xchg
lret
sarb
popa
out
addb
adc
movsl
divb
mov
mov
pop
sarb
lcall
icebp
mov
sub
push
loop
sbb
adc
dec
repz
mov
jle
jmp
dec
jb
cmp
cli
lahf
ljmp
push
jns
mov
mov
shl
scas
pop
add
adc
or
mov
or
inc
test
jo
adc
xor
push
das
cmp
mov
sbb
jno
stos
stos
outsl
sbb
cmc
aas
adc
push
mov
mov
xor
fimull
pop
stos
data16
inc
jp
add
mov
stc
mov
mov
popf
nop
or
arpl
jg
add
data16
cmc
jnp
gs
xchg
out
pushf
adc
mov
xor
into
shrb
popl
jl
push
repz
das
fsubs
jae
rcrl
int3
daa
jge
jnp
fldenv
dec
sub
push
or
fnstenv
add
inc
aad
mov
and
bound
mov
js
mov
dec
gs
push
inc
orl
clc
inc
out
jecxz
jge
mov
out
movsb
sbb
xor
and
lods
mov
adc
shlb
jge
adcb
repz
xchg
dec
mov
das
cmc
pop
lahf
adc
es
jnp
add
fldenv
mov
jmp
imul
add
repnz
mov
mov
dec
cld
xchg
std
movsl
cmp
dec
xlat
pop
scas
mov
push
push
or
lods
jo
aam
enter
mov
dec
stos
push
add
int3
add
sub
jl
lds
dec
sub
or
mov
jns
pop
mov
mov
data16
add
rcll
fdivr
add
jnp
jp
jae
adc
mov
mov
div
jne
xchg
stos
pushf
fimull
test
stos
pop
movsl
cld
or
test
mov
mov
sbb
mov
xchg
mov
bound
dec
nop
rcrb
inc
out
lret
mov
out
pop
sbb
sub
arpl
push
mov
push
pop
inc
inc
mov
lods
faddl
icebp
cmp
adc
cmpsb
in
dec
sbb
call
adc
aaa
cwtl
ret
push
pop
push
adc
adc
and
add
and
jno
xchg
jno
sbb
mov
inc
call
jmp
aam
dec
addr16
pop
jae
add
or
jl
aaa
fsubl
insb
aaa
pop
mov
imul
icebp
xchg
pop
cld
pop
dec
ss
imul
adc
rcll
mov
hlt
in
mov
xchg
xchg
lds
repz
in
mov
and
aaa
cmp
popa
push
imull
add
pusha
cs
jg
adc
sbb
fisubrs
sbb
push
jge
jecxz
mov
adc
inc
loope
mov
out
dec
daa
dec
jae
push
ss
mov
mov
mov
mov
repnz
jecxz
xlat
notl
push
iret
and
test
pushf
jns
addr16
sub
popf
imul
sub
insb
out
lds
push
in
bound
clc
mov
rcrl
or
in
mov
outsl
cmpsl
ror
cld
cltd
pop
enter
movsl
push
iret
clc
not
dec
cmc
pop
xchg
and
mov
data16
loopne
int
lcall
dec
mov
or
popf
mov
and
mov
sub
pusha
repnz
cmp
cs
dec
sub
ja
and
xor
xchg
in
xchg
xor
inc
push
cltd
push
xor
mov
xor
enter
mov
pop
pop
mov
lcall
mov
sub
mov
xchg
push
iret
stc
arpl
ror
mov
aas
mov
jne
sub
imul
pmuludq
test
mov
ja
mov
shrd
stos
mov
mov
pop
push
je
fwait
test
insl
repnz
imul
pop
push
sbb
sti
inc
cmpsl
jns
lods
inc
pop
mov
dec
jo
test
xchg
sub
fst
sub
cmpsb
lods
and
pop
mov
imul
dec
jnp
adc
shl
jmp
out
push
push
pop
jnp
fistps
idiv
je,pn
xor
clc
cmpsl
repnz
ret
push
pop
cmpsb
and
cwtl
or
mov
mov
std
add
mov
movsb
adc
in
xchg
mov
leave
or
test
cmpsb
pop
inc
push
mov
jle
mov
in
dec
insb
mov
jne
dec
clc
push
xlat
inc
sub
out
std
outsb
cmp
dec
stc
lock
stc
ja
mov
sbb
or
sbb
arpl
data16
jmp
repz
dec
je
push
jecxz
pusha
mov
add
sub
insl
out
mov
in
xlat
mov
icebp
and
and
add
sub
out
jecxz
jecxz
pop
mov
jbe
fldcw
enter
inc
int3
loopne
lods
shrb
fwait
jge
xor
aad
ret
in
xor
jecxz
inc
ret
shll
imul
push
mov
jge
sarb
jae
clc
mov
icebp
mov
xor
sbb
xlat
and
test
inc
fadds
or
sahf
icebp
mov
cmp
icebp
adc
or
xor
pop
es
dec
jmp
inc
and
push
stc
pushf
lcall
push
repz
pop
cmp
outsb
data16
mov
testl
fcoml
or
pop
jb
stos
xchg
sbb
imul
cmpl
push
outsb
mov
aad
dec
enter
adc
jnp
test
daa
mov
imul
push
or
bound
sbbb
dec
dec
cmp
ja
fcoml
adc
jo
cmp
jmp
das
xchg
sub
jl
repz
mov
int
pop
add
mov
popa
dec
pop
add
jp
repz
test
jp
jb
cmpsl
and
outsb
add
xor
xor
mov
outsb
cmp
test
hlt
cmpsb
pushf
loope
pop
sbb
int
stos
test
dec
sbb
je
inc
adc
sarl
cmp
push
sub
adc
cmpsl
sub
dec
cwtl
imul
xchg
ja
clc
mov
adc
in
dec
add
jl
mov
xchg
mov
mov
xchg
mov
mov
dec
mov
in
rclb
loopne
cmp
adc
dec
leave
jecxz
add
jns
lea
mov
das
int3
push
scas
push
sub
or
call
mov
mov
push
ljmp
std
cmp
mov
seta
cmp
lahf
cs
inc
jmp
cmpsb
jbe
adc
sbb
popf
repnz
nop
mov
jge
add
pop
icebp
mov
test
push
mov
movb
mov
std
add
vmread
pop
dec
popa
gs
jo
dec
nop
xchg
aas
incb
outsb
adc
sbb
and
pop
or
cs
jg
pop
sti
daa
mov
ret
sbb
sub
fucomip
mov
xchg
mov
xchg
pop
mov
push
xchg
push
or
setns
outsl
jo
stos
pushf
add
xchg
scas
mov
test
mov
iret
push
mov
cmp
fisubrl
pop
mov
mov
loopne
test
pop
mov
jg
repnz
pop
lods
leave
xchg
xchg
sub
enter
cmp
jmp
ret
les
sub
shlb
push
mov
mov
xchg
inc
inc
push
roll
mov
cmpsb
jbe
push
mov
ss
imul
dec
outsb
outsb
jne
clc
mov
and
and
mov
adc
dec
lahf
icebp
mov
lahf
lret
dec
or
jmp
int
jno
fsts
popf
test
xlat
out
sub
insb
leave
sub
dec
sahf
or
stc
cmpsb
pop
xchg
add
into
loop
aad
mov
out
pusha
add
enter
push
cmp
outsb
mov
adc
stos
sbb
outsb
aam
pop
gs
adc
fs
jns
outsb
jae
and
mov
push
jge
ljmp
test
roll
adcb
mov
mov
jbe
inc
and
pop
jbe
pop
mov
outsl
mov
call
fldl2e
or
fcmovb
ret
ret
loopne
sbb
stos
fcompl
int3
jno
imul
cmpsb
jbe
cmpsl
cmp
push
cltd
lcall
std
push
ljmp
and
cmp
jg
xrelease
rol
cmp
add
pop
outsl
lcall
lret
aam
addr16
ret
jmp
sub
dec
mov
scas
pop
std
insl
cmp
dec
pop
mov
les
jge
jae
lods
stos
test
imul
dec
push
xchg
jb
scas
daa
cmpsb
inc
mov
addr16
sbb
xor
lods
xor
fdivs
enter
inc
sbb
jbe
dec
mov
int3
stos
into
sub
adc
sbb
mov
movsb
xlat
and
mov
jle
out
sbb
loope
or
cmpsb
mov
cmp
into
int3
sbb
fidivrs
ds
and
cmpsb
cmp
mov
js
and
sub
dec
xchg
mov
jmp
sbb
mov
lods
push
xchg
aas
dec
dec
cmp
divl
jns
adc
dec
lret
mov
mov
jae
xor
mov
das
xchg
stos
rcl
add
lods
test
pop
and
inc
sbb
hlt
je
inc
negl
andl
notb
call
inc
repnz
stos
clc
pop
lock
mov
adc
mov
shl
mov
inc
pusha
mov
lds
jp
cmp
ret
addr16
mov
push
int
arpl
jae
jae
lods
sarb
xchg
psrld
mov
aas
mov
xchg
int3
fcoms
sti
mov
mov
push
jb
sbb
bound
jnp
jns
in
xchg
and
jge
inc
xchg
jl
lret
inc
pop
inc
jmp
adc
cltd
push
adc
sub
test
pop
lahf
sti
ret
push
scas
xchg
and
add
and
sub
adc
fdivrl
pop
xor
pop
mov
lahf
mov
xchg
lahf
movsb
jmp
cmpsb
out
sbb
or
arpl
test
push
shll
pop
mov
dec
iret
rorb
ja
int3
push
out
addr16
int
mov
pop
cmp
mov
inc
xchg
aam
add
andb
sbb
loopne
dec
cmp
fcomps
inc
mov
and
push
iret
adc
mov
xchg
xchg
or
adc
sar
adc
jne
test
aaa
pop
mov
and
orl
jl
adc
outsb
ds
adc
mov
push
imul
clc
fstpl
mov
push
mov
xor
aaa
shlb
sub
ds
sbb
push
outsb
jae
xchg
rcll
cltd
sub
aaa
nop
sub
inc
clc
sar
inc
xchg
dec
sti
scas
pusha
repnz
das
pop
test
loop
push
rolb
xor
jp
aaa
fdivl
sbb
movsb
lea
xor
in
movsl
sbb
aad
frstor
mov
mull
or
push
or
cmp
cmp
in
mov
xchg
shll
sub
insl
or
mov
ljmp
rorl
pop
mov
loope
pop
bound
ss
cmp
bound
push
lahf
icebp
loop
push
or
cmp
push
fldl
sbb
push
stos
ficoms
dec
xchg
or
mov
mov
and
stos
mov
mov
mov
call
insl
xor
fsts
or
push
dec
adc
and
out
inc
fs
in
test
push
aaa
pop
pop
cmpsl
cmp
jae
sbb
sub
scas
insb
mov
outsl
cmp
sarl
pop
stc
fldl
je
aas
outsb
ret
fucomip
aas
outsl
or
pop
repnz
lret
cmpb
or
es
shll
mull
fcomps
aad
sahf
int3
call
xor
add
pop
lcall
rclb
mov
jle
and
sbbb
or
es
cmp
or
xchg
dec
iret
adc
add
sti
cltd
cmpsb
ret
jne
jle
and
add
pop
xlat
cmp
movsb
mov
cmpsb
cmp
sbb
mov
jae
cwtl
pop
lret
adc
popf
lcall
or
push
adc
adc
daa
and
sbb
or
and
mov
xchg
int
mov
cmpsb
dec
in
sub
pop
scas
xor
or
out
add
push
mov
aaa
dec
xchg
adc
and
shrl
mov
or
xchg
int3
ljmp
xor
sbb
xchg
pushf
movsl
jge
shrl
sub
and
shll
js
call
stos
or
incb
out
enter
inc
jae
xchg
dec
cmp
jno
notb
maskmovq
cmc
outsb
sub
fs
test
lret
jle
hlt
dec
or
clc
lcall
lret
xor
rcll
fdivrp
mov
lock
push
cmpl
mov
sbb
mov
mov
sub
mov
sbb
scas
jmp
jle
push
xor
add
mov
push
lcall
clc
mov
mov
inc
cmpsb
push
das
icebp
xor
jle
mov
lcall
out
push
lds
imul
je
and
sbb
mov
xchg
cmp
push
jb
dec
mov
sahf
jg
lock
iret
jmp
pop
adc
sbb
sub
outsl
xchg
mov
and
pop
fistpll
pusha
jae
neg
jge
mov
xchg
pop
aam
cltd
mov
or
int3
rcrb
pop
push
inc
andl
mov
mov
push
jge
sub
sbb
subb
add
lds
and
ja
mov
fimuls
shr
scas
mov
lcall
inc
divb
ret
sub
adc
ljmp
sbb
lock
stos
adc
dec
xor
clc
dec
mull
pop
daa
sbbb
cmc
or
jb
mov
nop
fwait
and
sub
dec
cmp
xor
into
xchg
adc
sub
test
enter
xorb
gs
or
xchg
xor
push
jae
mov
push
sub
mov
sub
incb
aas
xchg
or
jge
push
ds
fnstsw
inc
xchg
loope
push
add
cs
mov
jae
lret
fisubrs
ret
or
flds
sub
or
cltd
dec
ja
repnz
add
cli
inc
inc
in
pop
arpl
cmp
jne
inc
sbb
idiv
mov
cwtl
mov
dec
xor
mov
jnp
leave
inc
shll
pop
xor
out
jns
mov
mov
repnz
cmpb
push
sbb
jbe
mov
mov
lds
stos
pop
add
sub
dec
sub
in
sbb
fiaddl
cmc
inc
cmp
pop
mov
xor
mov
out
into
dec
lds
fldl
out
subb
inc
jne
mov
pop
mov
cmp
je
shrl
cmp
enter
mov
cmpsb
cmpb
into
fidivrs
test
lock
shrb
mov
pop
cltd
clc
rorb
jbe
lea
popw
ret
shlb
leave
das
stos
insb
mov
cmp
mov
xchg
push
mov
dec
jge
inc
bound
jg
xchg
pushl
outsl
rcll
xor
dec
movsb
test
lds
add
in
sbb
mov
mov
paddb
inc
ret
sarl
outsb
inc
loope
cmpsl
aas
adc
push
arpl
sbb
aas
push
fcoms
lods
dec
lea
mul
lock
pop
dec
mov
jmp
mov
xchg
outsl
adc
or
ja
scas
jno
adc
notl
jl
dec
fwait
cmp
or
push
add
push
popf
into
or
daa
mov
mov
xor
xor
cs
push
loopne
sti
cmp
cmp
inc
out
and
jae
sub
scas
les
push
insl
adc
pop
lahf
ret
dec
inc
add
imul
aaa
sub
and
mov
or
adc
lods
mov
mov
sbb
or
xor
es
cli
into
int
xor
movsl
rclb
dec
mov
xor
je
daa
add
cmp
sub
add
popa
cmpsl
shlb
shlb
in
push
and
mov
aad
sar
xchg
lret
mov
mov
sbb
mov
mov
test
inc
ljmp
or
xor
xor
rol
in
or
add
inc
scas
push
data16
call
scas
lods
xchg
jmp
rcl
ficoml
jno
frstor
je
dec
adc
xchg
pop
lcall
das
inc
cltd
or
loopne
inc
aaa
xchg
popf
cld
and
mov
sti
push
cmp
mov
push
cmp
mov
and
test
jae
adc
dec
dec
mov
xchg
adc
ficompl
push
std
adc
jae
mov
adc
shl
or
sahf
addl
stos
test
repnz
inc
lahf
fcomps
testb
dec
pop
std
push
dec
andl
add
lds
inc
testl
arpl
inc
hlt
pop
push
xchg
je
dec
push
loopne
adc
in
popa
lock
mov
mov
xor
xor
repz
mov
jnp
add
subl
add
scas
cs
iret
cltd
aad
es
pop
dec
lods
das
xor
dec
nop
sbb
xor
call
mov
cld
std
cmp
push
out
or
lea
pop
lods
adc
adc
cltd
aam
inc
enter
outsl
fwait
dec
adc
mov
cmp
or
jo
gs
ss
cmp
hlt
adc
adc
loopne
rolb
or
pop
pop
stos
clc
lods
fstpt
repz
insb
mov
xchg
mov
adc
cmp
pushf
jbe
cmp
sbb
stos
inc
mov
jo
loopne
lods
mov
cs
sbb
lods
clc
daa
add
ret
dec
mov
pop
xchg
cli
ret
in
sarl
gs
insl
stc
adc
sbb
gs
ljmp
inc
xor
xchg
stc
aam
cmp
es
ffreep
fs
xchg
sub
mov
xlat
mov
jns,pt
data16
pop
mov
jecxz
test
xor
je
xchg
mov
xchg
cli
sbb
divb
pop
mov
mov
dec
ds
jecxz
pusha
pop
js
cmp
cmp
repnz
xchg
clc
inc
mov
xchg
mov
mov
dec
xorb
and
rolb
stos
adc
arpl
jns
adc
pop
dec
pop
loopne
into
pop
lret
sahf
sbb
adc
rcll
in
pop
enter
sbb
cmp
sbb
push
inc
sub
cltd
int3
and
xchg
mov
mov
loope
push
insl
jo
push
mov
mov
xchg
pop
aam
or
dec
pop
sub
or
scas
mov
add
fwait
jle
leave
sbb
xor
lods
sahf
aad
loopne
stos
push
pop
shlb
mov
cmp
xchg
loopne
pop
ds
inc
lods
inc
stc
outsb
dec
lods
ficoms
pushf
pop
les
mov
ret
ret
pop
clc
cmp
ret
lcall
sbb
adc
sbb
inc
inc
insb
jne
inc
mov
test
dec
dec
adc
and
enter
stos
push
xchg
pusha
test
push
inc
aad
popf
mov
mov
pop
add
lret
sbb
outsl
and
cmp
test
xorl
dec
push
adc
push
stos
mov
enter
cmp
mov
sbb
dec
imul
mov
cwtl
testl
lock
lret
lock
pop
sub
or
fucompp
push
stc
loop
xor
pusha
adc
pop
sbb
push
sub
scas
lahf
jmp
sbb
push
enter
es
out
dec
je
iret
stos
in
add
xor
jno
lea
xchg
jnp
out
add
stos
in
inc
cmpsl
cmp
dec
sar
movsb
sarb
push
mov
pop
or
or
sbb
mov
stc
test
insl
int
or
int
mov
bound
mov
lods
xchg
lret
clc
daa
jbe
repnz
or
push
cmp
shll
hlt
or
sbb
nop
lret
test
adc
push
or
ja
sahf
inc
dec
add
repz
cmc
cld
pop
jbe
daa
dec
cmp
xchg
sarl
jmp
stc
fstp
add
mov
int3
andl
cld
jp
mov
insb
pushf
pop
push
jnp
dec
ljmp
mov
sub
add
inc
lods
jg
push
test
cld
xchg
sbb
dec
sub
dec
inc
inc
mov
aad
xchg
popa
cli
int
pushf
mov
stos
add
jno
insb
adc
xor
mov
dec
addb
dec
fisubrs
ss
jge
push
sbb
pop
sahf
idiv
ljmp
into
xchg
es
mov
pusha
jecxz
rorl
in
mov
sub
out
into
stc
hlt
frstor
xchg
or
and
push
inc
pushf
jbe
cmp
cltd
jl
mov
cmpsb
cltd
mov
sbb
or
fadds
divb
add
lds
nop
in
xchg
pop
xchg
xor
cmp
inc
inc
in
pop
jg
mov
mov
enter
and
sahf
push
lea
sbb
inc
jnp
inc
std
xchg
push
push
pusha
test
add
data16
sbb
stos
cli
in
scas
fimull
sahf
sub
dec
push
mov
sub
push
mov
and
push
push
call
mov
push
pop
bound
ja
push
xchg
dec
scas
fdivl
push
jg
stc
sahf
inc
jno
pop
xchg
lret
call
mov
adc
aad
push
xor
outsb
xrelease
mov
cmc
mov
add
mov
fsubrs
and
lock
xchg
or
lods
movsb
das
in
inc
or
adc
fstl
leave
fisttpl
push
inc
mov
cs
or
in
sub
jg
push
jge
mull
xor
mov
add
out
imull
mov
imul
inc
out
mov
into
sub
orl
test
mov
out
mov
enter
std
sbb
pop
xorb
flds
leave
xchg
dec
cmp
jp
ss
std
in
insb
test
sahf
ss
mov
mov
lock
jl
add
in
xchg
int
fstps
push
mov
inc
stos
push
aaa
dec
mov
push
popf
push
bound
pop
jns
dec
adc
xlat
lds
repnz
xchg
jp
mov
or
scas
nop
lcall
pop
xor
jae
sub
xor
inc
and
out
mov
stos
inc
jge
xchg
aad
notb
cmpb
adc
cmp
cmp
movsb
jg
or
fwait
push
outsl
test
stos
das
sbb
call
inc
adc
rorb
sub
cmp
pop
add
bound
das
xor
mov
lds
and
roll
jecxz
loope
mov
pop
add
out
inc
cmp
push
and
in
cmp
bound
lods
or
insb
into
sbb
dec
mov
ja
imul
lock
les
scas
shll
fildl
cmp
mov
movsl
jno
sbb
inc
and
das
cmp
adc
adc
dec
sub
into
outsb
push
addr16
and
mov
inc
jne
andl
push
ret
jae
and
bound
das
cmp
test
gs
and
into
xor
jae
jno
scas
push
mov
sbb
adc
aaa
call
sub
pop
mov
push
push
fisubl
in
jne
in
sbb
stos
mov
jno
fidivrl
popf
dec
mov
out
push
fdivl
andb
mov
js
or
sbb
lret
adc
push
cmp
cmp
adc
lcall
mov
push
dec
and
lds
jecxz
in
cwtl
sbb
xor
xchg
lds
mov
and
push
cmpb
test
imul
inc
loop
test
orb
sbb
repnz
mov
adc
mov
and
cmpsl
fisttpl
loopne
pop
into
dec
js
sahf
sub
ja
sub
sbb
pusha
jl
mov
add
jb
out
popa
daa
push
mov
rcrb
imul
cmc
or
pop
adc
cmpsb
jmp
icebp
push
xor
push
jmp
mov
inc
cmp
das
imul
test
ficoms
jl
movb
outsb
push
pop
cmpsl
andb
out
pop
lcall
aam
lahf
out
stc
lcall
out
out
orl
add
mov
daa
inc
sbb
jmp
fnstsw
jnp
mov
push
or
nop
jecxz
pop
xor
neg
cwtl
ljmp
cltd
ss
insb
sub
movsb
subl
push
fsub
jl
loope
dec
xchg
cmp
movsl
jecxz
mov
cs
mov
jb
and
cli
xor
mov
or
icebp
dec
int
push
mov
ret
insb
sbb
xor
lcall
inc
push
dec
fwait
nop
lret
out
pop
imul
push
sbb
jle
and
mov
pop
imul
dec
addl
xor
mov
inc
push
nop
adc
mov
inc
sbbb
sahf
insl
cmp
lahf
int
pop
cmpsl
in
pop
test
rcrb
xor
dec
data16
pop
sbb
data16
scas
jne
ja
test
mov
out
fcompl
xor
fcmovnu
mov
leave
xor
xchg
cmp
ss
mov
pop
ds
push
jo
unpcklps
int
xchg
std
dec
in
rcr
or
ss
ja
es
daa
sbb
or
std
lock
outsb
jne
dec
dec
pop
les
xchg
filds
inc
lea
or
fdiv
test
ret
fdivr
ss
das
pop
test
decb
xchg
test
sbb
mov
gs
pop
lahf
jge
clc
push
mov
outsl
add
aas
pop
popa
js
test
pop
mov
mov
mov
dec
inc
mov
scas
lcall
in
dec
push
mov
fildl
sub
int3
xor
dec
stos
jmp
jecxz
and
or
outsl
push
sbb
pushf
adc
pop
outsb
pushf
int3
sbb
jl
gs
and
pop
sahf
and
lahf
aad
dec
shlb
rcr
movsb
pop
loopne
in
roll
scas
sub
sbb
insl
push
jb
adc
xor
xor
xor
outsb
xor
dec
outsl
repnz
mov
out
mov
jle
fstps
mov
push
dec
cmpsl
add
das
xchg
adc
movsl
lods
cli
jge
push
dec
inc
jbe
mov
xor
dec
mov
adc
mov
sbb
iret
ret
shlb
push
ds
imul
xchg
dec
push
xor
fistpll
inc
cmp
and
je
dec
sub
or
in
adc
push
xchg
cmpsl
rolb
aam
xchg
mov
jnp
and
insb
sbb
mov
or
and
push
sub
loope
lods
jmp
push
push
and
xchg
pop
dec
jb
add
mov
sbb
push
aas
and
test
fcmovnb
lret
ljmp
adc
fmull
popf
jbe
subb
xchg
nop
mov
sub
cmp
push
sbbb
roll
push
xchg
lret
xor
cmpsb
out
sub
lahf
push
sub
mov
cmc
popf
mov
xor
sbb
inc
fildl
daa
push
cltd
and
jmp
jns
aaa
rorl
fdivrl
std
jmp
jae
jae
mov
inc
sbb
mov
imul
cltd
mov
shl
int3
sbbb
stc
pushf
and
outsl
jmp
inc
int
cmp
enter
mov
push
dec
sub
scas
mov
xlat
adc
xor
or
pop
add
ret
std
lods
xor
dec
enter
data16
ss
and
cwtl
iret
push
add
mov
xchg
add
stos
and
cs
test
pop
movsb
std
ficompl
push
popf
cmpsl
imul
shrb
mov
mov
push
mov
fisttpl
dec
cmp
fiaddl
pop
sbb
in
enter
push
cli
out
jge
push
sti
sarb
pop
and
ds
lcall
push
dec
pop
mov
mov
loop
pusha
stc
mov
dec
jl
fisubrl
or
dec
inc
bound
dec
stos
dec
xchg
xor
call
rclb
ror
aam
pop
sbb
and
out
aam
push
ja
fstpl
lahf
shlb
xchg
sub
lahf
in
into
imul
cs
loop
sub
jle
pusha
and
jg
sbb
push
sbb
orb
insb
push
or
dec
mov
lret
in
fwait
jnp
mov
sbb
shlb
cmpsl
jmp
sti
add
stos
shlb
outsb
and
sbb
push
mov
cmp
aaa
out
cmpsl
jge
je
inc
sbb
stos
fidivrs
mov
pop
jl
xchg
adc
xor
movsl
lock
scas
rcl
repnz
enter
incb
fwait
mov
adc
icebp
das
add
dec
jge
popf
vmovsd
xor
fisttps
test
add
insb
out
jne
lret
xchg
adc
popf
imulb
jecxz
call
mov
ror
mov
stos
mov
addr16
jae
fcmovnu
or
pop
xchg
mov
jae
and
sbb
add
mov
or
add
xor
aas
mov
or
pop
std
data16
push
mov
or
pop
test
add
sbb
fists
hlt
push
andb
pushf
es
xchg
xor
sub
jae
push
inc
in
fnsave
add
cmp
jns
jle,pn
xor
cld
mov
pop
pop
rcrl
aaa
in
pop
push
and
stos
in
mov
push
iret
mov
or
sub
add
nop
imul
cmp
push
int3
bound
jae
adc
and
cmc
outsb
pop
pushf
jge
ret
test
lahf
test
aam
mov
sub
test
ja
pop
das
push
insb
outsl
fists
push
sbb
mov
pop
imul
test
adc
pop
push
jecxz
icebp
popf
daa
sub
sbb
data16
ds
dec
push
xchg
mov
fs
adc
into
mov
and
jge
add
jg
ss
pop
leave
push
ret
mov
sti
dec
fidivs
dec
shrl
adc
das
in
add
cmpsl
mov
into
popf
jbe
inc
jle
std
dec
shlb
fadd
push
stos
mov
sub
test
pop
in
mov
xlat
jecxz
or
andb
mov
sbb
xchg
xchg
sub
adc
fsubp
jnp
mov
aaa
jle
cmp
iret
or
clc
movsl
sub
and
xor
lret
and
movsl
negl
gs
pop
push
add
sbb
std
sub
add
mov
in
push
test
jae
fxam
lret
adc
push
sar
fistpl
pushf
dec
mov
add
mov
icebp
and
lock
out
repz
fwait
mov
jb
xchg
adc
adc
test
mov
or
aas
ret
mov
fs
test
lcall
or
add
out
inc
mov
push
scas
shlb
repz
mov
push
jo
sahf
xchg
stos
sub
mov
mov
inc
sti
pusha
jb
push
leave
xchg
in
in
xor
fdivs
jns
nop
cmp
cmp
hlt
mov
push
jnp
lret
mov
mov
movsl
std
dec
inc
outsl
push
pop
jmp
sbb
inc
add
arpl
adc
or
xchg
xchg
jo
jle
push
jecxz
mov
nop
jecxz
inc
divb
xchg
or
dec
pop
mov
mov
or
hlt
lret
adc
xchg
pop
in
popf
sub
mov
hlt
scas
sbb
dec
shll
cmc
sbb
cmp
gs
fwait
mov
or
pop
xor
push
mov
sub
mov
ret
loop
jae
dec
mull
clc
cmp
in
arpl
jno
fistpl
mov
mov
mov
pushf
js
or
mov
in
mov
mov
push
std
mov
jo
and
movsl
insb
leave
insb
jno
faddl
test
xor
and
test
or
loopne
repnz
bound
daa
xlat
aad
cld
pop
dec
sbb
push
repnz
andl
ja
push
in
stc
pop
adc
jbe
xchg
icebp
cmpl
jp
insl
push
or
lods
xor
jo
xor
ret
adc
xchg
outsl
ds
out
push
jbe
fnsave
out
fcmovbe
jne
iret
in
inc
add
push
push
dec
dec
sub
inc
shl
cmp
or
invd
test
pop
or
xchg
cwtl
lret
outsl
lahf
icebp
aad
insb
cmpsl
ret
ret
jo
fsubs
push
lret
pop
sti
sbb
testb
mov
fists
out
and
cmpb
add
cli
add
pop
cmp
sub
xchg
iret
dec
jbe
rclb
jo
inc
cwtl
mov
sub
ja
push
call
test
sbb
push
nop
shl
in
test
call
mov
ja
test
or
imul
xchg
imul
mov
adc
cli
dec
int
mov
pop
test
xor
mov
push
push
into
bsf
enter
and
cli
cltd
in
xor
push
xor
and
jnp
adc
xchg
arpl
pusha
mov
into
sub
lahf
test
sbb
or
aas
pop
stc
lods
fprem
xor
mov
lahf
push
dec
out
sub
test
inc
sbb
sbb
xor
mov
push
xchg
in
mov
add
mov
dec
popa
and
add
popa
or
add
fldt
add
or
fisttpll
loop
sti
mov
cli
shl
push
rcrb
inc
adc
push
flds
sbb
rcl
cld
jecxz
js
sub
jmp
inc
popa
pop
lods
in
insl
fxtract
sbb
xor
in
in
push
adc
inc
mov
and
mov
xchg
adcl
fsts
pop
lock
adc
fmul
add
scas
std
jle
jbe,pt
lods
xchg
rcl
mov
out
aam
pop
cs
mov
stos
or
nop
cwtl
add
pushf
xchg
int3
lret
pusha
inc
jp
les
ret
sarl
pop
push
mov
xchg
std
idiv
mov
insl
or
out
icebp
push
cmp
dec
xchg
fmulp
repz
push
xchg
jl
movsb
popf
cmp
fstl
aad
sti
adc
dec
icebp
or
hlt
adc
scas
shll
clc
dec
and
and
add
jg
cmc
mov
sbb
adc
rcll
sub
fsubl
popa
lahf
xchg
out
ds
insl
jl
sbb
xchg
mov
insb
sub
shlb
lcall
lds
mov
icebp
roll
fs
sub
rcll
call
xor
and
int
jb
out
shll
incl
dec
repz
sub
xor
fsubr
imul
or
in
scas
add
jecxz
ret
mov
stos
sarb
pop
addr16
mov
ficoms
jecxz
rolb
fldt
bound
decl
data16
xchg
pop
or
ss
shll
push
fwait
pop
clc
pop
mov
sbb
jecxz
push
mov
out
or
sbb
aad
shrb
dec
cmpsb
shll
test
and
sbb
adc
adc
data16
sbb
mov
mov
lock
mov
pop
mov
shr
int
push
adc
out
mov
stos
repnz
std
gs
cmp
data16
push
lret
xchg
out
stc
cwtl
sahf
add
cmpsb
int
add
or
xchg
mov
pop
sub
repnz
ljmp
test
add
mov
push
and
jne
pop
push
lret
xchg
lods
outsl
out
mov
jl
ret
push
add
lods
push
pusha
xor
clc
imul
xlat
mov
lods
or
cmpsb
cmp
or
aas
into
loope
pop
jl
sti
cltd
adc
xchg
gs
stos
pop
rolb
inc
mov
loope
cwtl
cmpsb
jo
mov
movsb
in
loop
push
or
lods
mov
mov
sub
es
pop
fisttpl
mov
loop
push
cmp
jnp
sbb
and
push
dec
xor
add
scas
mov
xchg
push
xchg
xchg
cmp
adc
rcrb
adc
push
std
adc
fistps
xchg
in
pop
iret
outsl
add
jge
jl
or
xor
pushf
ret
jb
xchg
test
xchg
cltd
and
mov
lods
or
popl
fisubrl
mov
mov
jle
data16
xchg
es
lcall
outsl
fnstsw
les
adc
out
dec
dec
mov
iret
enter
data16
mov
pop
pop
insl
push
mov
or
jge
cmp
test
jo
sbb
push
xlat
inc
push
push
adc
mov
into
or
outsl
std
repnz
push
test
pop
aaa
mov
arpl
mov
sub
in
mov
test
dec
roll
iret
int3
std
stos
pop
and
aaa
cltd
inc
loope
fmuls
call
stos
lock
cmp
and
cs
lahf
mov
fidivrs
push
xchg
pushf
aas
cltd
mov
and
les
xor
cmc
std
int
cmpsl
cmp
adc
adc
ret
repnz
dec
mov
cmp
push
xchg
mov
push
sbb
ds
cmp
mov
into
addb
push
mov
mov
xchg
repnz
lock
push
stos
and
sbb
push
add
pushf
pop
inc
xor
iret
mov
sarl
fwait
push
xlat
pop
and
aam
push
push
push
adc
xchg
cmp
jecxz
jp
sarb
aas
mov
xor
les
push
adcl
pop
dec
jae
mov
sub
push
imul
pop
inc
enter
jnp
push
cmp
cmp
subb
fsubrs
in
sub
outsb
sti
enter
mov
out
mov
dec
pop
cmpsl
jmp
mov
xchg
andb
out
jmp
pop
addb
and
adc
ja
push
jg
adc
sub
or
xor
lods
aaa
mov
addl
mov
movsb
adc
dec
sub
push
pop
inc
mov
adc
fwait
jmp
jns
es
cmp
enter
mov
and
and
dec
xor
pushf
xchg
into
rcr
mov
out
inc
xorl
insl
or
call
mov
xor
sbb
cmpsl
iret
setne
mov
stc
je
call
pop
pop
popa
jnp
push
cwtl
fnstsw
daa
adc
mov
dec
inc
pop
imull
pop
daa
push
insb
ret
les
or
cld
pop
out
or
dec
xor
pop
jmp
xchg
cmp
out
xchg
add
pop
sarl
test
mov
and
push
call
insb
dec
daa
mov
dec
pop
mov
das
jnp
cltd
daa
mov
xor
stos
and
fnstsw
int3
mov
adc
aaa
sub
cmpsb
mov
addr16
lds
jne
std
std
mov
frstor
mov
loope
sbb
out
or
lock
push
mov
ss
jbe
insb
inc
inc
into
xlat
and
xchg
mov
loope
imul
xor
mov
push
lods
insb
xchg
jnp
sub
mov
xchg
das
shr
aaa
and
sub
aas
push
scas
shrb
lock
out
adc
ljmp
outsl
sub
mov
push
out
sub
jmp
mov
jbe
mov
leave
repnz
adc
mov
push
subl
cmp
xlat
mov
pop
pusha
push
and
test
xchg
xchg
sub
inc
inc
xchg
lahf
push
sbb
inc
add
aas
mov
jge
mov
or
movsl
rorb
fsubrs
xchg
imul
imul
inc
aad
test
mov
sbb
push
mov
popf
jmp
adc
push
jmp
jg
inc
add
or
ret
cmp
leave
mov
jbe
xor
in
adc
lods
ljmp
das
mov
dec
or
cwtl
add
mov
cs
cmp
jl
lret
nop
sbb
pop
fmulp
push
jge
mov
scas
negb
icebp
fdivl
test
clc
mov
add
mov
mov
sbb
xchg
fcompl
lea
adc
sbb
pop
out
decb
mov
out
in
adc
pop
int3
je
push
hlt
ret
jg
inc
data16
push
push
pcmpeqb
sub
aad
pusha
sub
jne
insb
pusha
push
je
pop
push
dec
mov
icebp
out
jp
stc
fisttpl
adc
rorl
push
jmp
xchg
in
das
xor
or
pop
ficompl
sbb
iret
pop
cmp
std
sti
jle
scas
lret
sbb
js
xor
sbb
mov
mov
imul
push
ja
jno
lcall
cmpsb
orl
fidivs
cmpsl
out
inc
xor
ja,pn
stc
icebp
in
imul
sub
and
jnp
leave
mov
mov
and
lret
dec
les
xlat
icebp
jb
pop
insl
gs
adc
pop
cmp
xchg
cmpsb
xor
imul
and
outsb
sub
call
add
pop
repz
jmp
mov
push
fmul
xchg
xchg
fsubrp
testb
ret
lds
test
adc
test
sub
fwait
rcrl
fwait
mov
mov
sub
add
adc
lods
shl
cmpsl
out
jne
rclb
dec
adc
enter
inc
sbb
lret
rcll
into
ljmp
jge
push
push
xchg
xor
mov
sbb
push
sahf
inc
jae
lahf
cmpsl
push
fwait
mov
cmp
and
aam
add
fs
loope
jno
pop
jne
in
mov
sub
int
add
mov
push
jle
and
push
andb
mov
scas
out
cmp
add
mov
adc
stc
int3
inc
mov
fcoms
test
insb
lds
dec
aaa
dec
nop
jecxz
sbb
sbb
adc
sbb
dec
mov
pop
mov
inc
jne
mov
pop
jp
adc
inc
xchg
push
or
mov
sbb
sub
cld
int3
jnp
jp
inc
aaa
out
arpl
ja
filds
lret
xchg
dec
popf
push
out
add
push
and
inc
xor
jne
cli
mov
sub
xor
movsl
mov
pop
outsb
or
adc
imul
pop
inc
scas
popl
mov
mov
or
push
mov
bound
lret
arpl
inc
movsb
mov
repnz
lea
jmp
das
pop
mov
jae
sbb
sbb
insl
loope
push
and
mov
add
cmp
jg
enter
pushf
repnz
push
pop
dec
aaa
arpl
jg
pmulhw
in
imul
fwait
ds
jp
pop
test
into
subb
sbb
mov
pop
and
push
adc
cmpsb
jl
int3
pop
dec
jbe
in
cmpsl
ds
inc
sbb
mov
jno
mov
xchg
aaa
shll
hlt
bound
or
push
sub
loopne
loopne
jno
hlt
mov
add
popf
movsl
cwtl
dec
sti
insb
out
mov
mov
pushl
inc
das
pop
mov
jbe
out
in
pop
cltd
push
mov
jno
fcomp
fdecstp
loopne
pop
es
aam
outsb
test
movsl
inc
push
jae
mov
pop
jecxz
xchg
pop
stos
lods
sti
int3
mov
out
je
or
pusha
in
add
push
mov
cmp
ret
cmp
mov
xor
push
jge
jae
and
addr16
add
in
xchg
push
inc
sbb
jmp
shrb
fisttpl
scas
pop
cmpsb
xor
sbb
and
rol
shlb
dec
enter
repz
fbstp
outsb
xor
pusha
shlb
or
xor
inc
mov
fs
mov
jg
lea
loop
scas
cmc
les
adc
pop
lret
cmp
fstps
mov
pushf
cld
adc
cmc
fs
cmpb
dec
jno
cmp
rep
das
xchg
imul
out
daa
add
sub
xchg
cld
lods
xchg
push
mov
pop
ffree
imul
and
push
pop
xchg
inc
mov
loope
hlt
sbb
and
adc
push
cmp
sti
dec
cmpsb
stc
out
and
dec
mov
lret
fildl
ret
sbb
repz
jb
mov
ljmp
xor
sub
daa
cmp
fimuls
sbb
fcompl
lret
push
xor
test
or
cmp
icebp
mov
jp
pop
dec
xchg
mov
insb
mov
dec
or
pop
inc
std
fsubrl
sbb
xor
fbstp
xor
filds
mov
out
cmp
push
inc
mov
lea
or
scas
pop
xorb
sbb
pop
psadbw
adc
sbb
dec
dec
sub
sbb
mov
loope
push
das
jno
adc
ljmp
push
push
adc
cwtl
lds
int3
ret
out
jmp
into
adc
push
aaa
cld
pop
aaa
xor
pop
lock
add
sub
mov
sbb
push
mov
test
add
pop
jns
fwait
xor
daa
inc
dec
or
jae
dec
mov
test
jns
inc
aam
aas
mov
fldenv
ljmp
xor
mov
cmp
fs
mov
test
mov
pop
cmp
mov
jbe
add
sbb
cld
js
mov
mov
push
ja
nop
add
shll
push
movsb
aaa
add
jmp
lcall
jge
and
lcall
ja
test
and
daa
push
out
rcr
mov
lret
jge
mov
adc
pop
mov
push
jl
sahf
mov
cs
or
hlt
shll
ljmp
push
add
mov
adc
cli
jae
and
in
aas
fnsave
outsb
outsb
out
lcall
push
pop
cwtl
lods
cmp
out
lahf
add
adc
cmp
jmp
dec
insb
mov
fldl
aas
and
arpl
movsb
push
inc
aad
jo
call
inc
jecxz
pop
mov
aaa
call
mov
insb
push
jnp
test
push
fsubrl
mov
xor
and
xchg
jne
add
jo
jg
les
das
pop
and
sbb
popf
add
outsb
adc
fs
mov
and
fwait
popf
addl
repz
pop
fdiv
jp
push
sbb
push
daa
xchg
mov
pop
insl
xchg
xor
imul
inc
push
decb
sbb
pop
cwtl
repnz
jecxz
adcb
int3
loope
fdivs
add
inc
lods
outsl
frstor
mov
add
lea
pusha
inc
pop
xor
dec
fisubrs
notb
xchg
push
lea
cmp
mov
jbe
sahf
inc
pop
adcb
in
js
cwtl
mov
jbe
insb
xchg
cmp
call
and
xlat
or
pop
cmpsl
mov
mov
stc
lea
sub
push
push
testl
push
sub
inc
neg
mov
int3
inc
xchg
scas
scas
jecxz
ss
nop
add
dec
sub
mov
aam
out
adc
push
roll
in
aas
int
fsubrs
ds
in
or
adc
cmp
test
sbb
jl
jo
outsl
mov
test
and
adc
cwtl
xor
fistps
scas
out
nop
jl
push
dec
xchg
jns
dec
fists
inc
cltd
cmp
hlt
ja
lcall
push
andb
inc
mov
cmpl
ljmp
push
xchg
mov
sbb
in
stos
gs
push
mov
dec
xchg
push
scas
fisttps
les
mov
pop
dec
repz
push
adc
rcrb
outsl
pop
ja
mov
call
out
adc
les
rcl
xor
mov
push
mov
clc
or
and
lds
xor
xchg
cwtl
xchg
cwtl
loopne
inc
out
aas
into
lea
lret
or
rolb
hlt
sub
fisttpl
jmp
add
scas
decl
lds
dec
test
sub
stos
xchg
cmpsl
jg
mov
cmp
std
or
rclb
movsl
adc
lea
jne
adc
movl
jp
loop
lds
imul
mov
mov
orl
sub
push
scas
xchg
cmp
clc
out
or
mov
mov
push
outsl
cmp
sub
leave
fisttps
sbb
stos
rcr
pop
jmp
mov
cmp
sub
xchg
inc
or
fnsave
adc
mov
push
fdivrp
xchg
jl
mov
aaa
dec
lds
shrl
sbb
test
out
push
pop
dec
xchg
adcb
jmp
xor
fs
insl
pop
imul
gs
add
pop
and
pop
mov
test
filds
pop
mov
cwtl
cmp
out
jb
loop
inc
pop
hlt
or
xor
pop
cmp
sahf
insb
and
dec
test
jnp
pop
repnz
push
int3
lahf
add
mov
fchs
data16
mov
pop
add
out
adc
mov
adc
bound
push
cmpsl
xlat
mov
sub
cmpsb
inc
ja
sbb
mov
mov
cld
dec
ficompl
ljmp
xor
mov
adc
insl
out
out
aad
insb
mov
jmp
adc
cmp
sahf
add
scas
lcall
cmp
nop
adc
inc
sbb
jmp
sub
mov
ret
gs
jg
xchg
jl
mov
cmp
mov
loop
dec
mov
aam
sbb
pop
insl
stc
jnp
sub
cld
pop
mov
pop
rcrb
sbb
jecxz
ljmp
push
jo
and
mov
push
shlb
mov
jae
test
xchg
ljmp
mov
cmpsl
testb
loopne
fwait
decl
mov
aam
aaa
pop
fbld
dec
dec
cmp
nop
test
int3
pop
fincstp
cmp
mov
es
and
jg
subl
adc
cmpsl
pushf
rcl
insl
mov
out
sbb
push
outsl
cmp
fidivl
or
cmpsb
adc
pop
push
es
cmp
pop
push
inc
lret
aas
push
cmp
pop
jmp
jl
add
xor
mov
lcall
ret
std
pop
pop
dec
in
das
xorl
push
xor
lcall
pop
jp
mov
pop
das
bound
or
jle
loopne
call
pop
cmc
out
adc
bound
out
sahf
ds
sti
pop
insl
stos
xor
sub
add
and
adc
mov
fistl
jbe
loopne
imul
mov
mov
aad
mov
or
push
mov
mov
std
mov
adc
out
mov
pop
jbe
jp
test
add
adc
ljmp
adc
dec
push
and
cmp
sahf
xchg
cmp
inc
stc
xchg
addr16
pop
push
or
and
out
bound
push
inc
dec
ljmp
cwtl
aam
lret
xlat
mov
cmp
mov
popf
loope
int3
hlt
fyl2xp1
sub
into
shrb
test
pushf
pushf
pop
mov
ret
outsb
repz
scas
xchg
jle
xor
outsl
movhps
sbb
xchg
addr16
insb
mov
xchg
arpl
xchg
adc
lahf
cmp
rcrl
les
push
cmp
test
inc
leave
rol
adc
push
pop
add
out
js
icebp
or
ljmp
jne
jbe
pop
cmp
insb
mov
mov
mov
push
adc
inc
fs
mov
pop
xchg
addb
adcb
adc
xor
out
das
pop
sub
mov
lock
mov
and
or
out
cmc
movsb
inc
cmp
mov
insb
xchg
pop
js
jecxz
xchg
dec
cs
js
pop
data16
sub
sahf
push
ss
mov
push
mov
popa
loop,pt
jecxz
sub
push
ljmp
out
sti
cmp
xchg
ja
xchg
pop
jge
fcoml
push
dec
in
pop
mov
cmp
movsb
sub
dec
int
adc
mov
inc
mov
push
hlt
addb
mov
xchg
jp
push
fimuls
hlt
sub
pop
push
mov
arpl
shll
push
mov
jnp
jns
or
pop
lcall
mov
testl
sub
movsb
icebp
sahf
jbe
xchg
push
fimuls
push
xchg
lret
icebp
notb
xor
test
subb
aam
mov
lock
pop
ljmp
and
fdivs
pop
push
stos
mov
aas
sbb
orl
adc
je
adc
jmp
sbb
daa
stc
sub
ss
cmp
out
mov
in
aas
and
enter
mov
mov
lret
add
sbb
fdivl
push
add
dec
jl
hlt
pop
sub
sub
push
movb
pop
repz
mov
and
cli
sub
lret
lahf
xorl
and
and
sub
cmp
sbb
inc
aam
xchg
ret
mov
mov
je
add
rcll
das
jo
ficompl
inc
sub
inc
fsubs
jb
xchg
lret
out
cld
push
outsb
lahf
outsb
jmp
push
fs
cwtl
pusha
int3
xchg
xchg
fs
mov
and
shrb
lock
mov
pop
addr16
pop
dec
hlt
add
mov
adc
ret
daa
mov
fcmovu
adc
ret
mov
lret
out
cmp
pop
xchg
mov
cwtl
adc
ljmp
fcoms
mov
mov
mov
or
inc
out
mov
mov
arpl
push
insb
fs
rorb
scas
mov
mov
sub
add
push
lret
fcomip
or
push
and
shlb
dec
cmpsb
insl
or
fsubrp
mov
repz
test
test
push
popl
mov
lds
dec
lahf
in
sub
mov
push
cmp
ljmp
negl
enter
stos
in
clc
jno
jmp
inc
mov
push
test
sbb
mov
cld
cmp
dec
pop
xchg
push
movl
add
out
dec
lods
rcr
jno
mov
adc
loope
xchg
imul
sbb
shrb
pop
jg
gs
je
and
in
es
cld
mov
loop
xchg
dec
imul
mov
add
adc
pop
stc
pop
and
push
mov
pop
cmp
xor
add
dec
xchg
call
cmp
out
ret
push
das
loop
xor
movsb
pop
mov
jno
in
mov
push
scas
fimull
pop
outsb
call
insl
mov
mov
fcompl
popa
stos
cltd
adc
dec
jmp
clc
mov
cmp
jno
fbld
emms
inc
iret
pop
enter
fs
dec
cwtl
iret
mov
pop
xchg
pop
mov
test
mov
arpl
stc
in
subb
lea
outsl
sub
into
loop
shrl
push
jecxz
ret
std
leave
les
clc
ja
std
leave
and
nop
mov
fdivrl
stos
inc
push
jl
mov
insb
lret
stos
pushf
outsl
dec
adc
push
test
ficoms
dec
enter
pop
test
leave
or
scas
addb
sub
push
stos
push
filds
out
cwtl
outsb
mov
fistpl
dec
adc
scas
incl
loopne
jae
pop
fcmovbe
lods
add
xor
mov
shll
pop
hlt
push
inc
add
xlat
sub
and
add
or
xchg
or
mov
mov
sbb
shl
leave
sub
ret
or
inc
subb
mov
cwtl
or
and
push
cs
pushf
dec
lds
jnp
sbb
es
int
inc
fimull
rorl
cli
jb
cmp
shrl
xor
cwtl
test
jno
out
push
add
fs
outsl
popf
out
ret
lods
out
mov
outsb
outsl
xchg
push
mov
jns
cltd
cwtl
sti
adc
sbb
fcoms
inc
clc
in
push
jo
imul
mov
movsb
mov
je
and
cmp
xchg
outsl
lahf
jmp
jge
int
out
cwtl
imul
cmp
pop
sub
jo
mov
ja
shl
std
fmull
add
ljmp
and
dec
and
lea
clc
jl
dec
pop
cwtl
leave
shll
out
mov
add
push
in
imul
dec
push
stos
pop
inc
fstps
xor
pop
sti
bound
adc
xor
push
shrb
test
ret
jns
cmp
xchg
push
xor
hlt
mov
cmc
addr16
stos
sahf
push
repnz
lods
les
loopne
std
test
clc
or
popf
movsl
jno
jb
repnz
fldcw
or
xchg
scas
aad
fs
divb
mov
out
mov
test
pop
lods
insb
mov
data16
pop
nop
mov
andl
icebp
xchg
or
faddl
sahf
cmp
rcl
cmpsb
sub
cmpsl
mov
aaa
movl
mov
or
mov
xchg
mov
or
lret
fwait
mov
int
test
imul
adcb
jne
add
cmp
in
mov
xchg
push
fdivp
imul
aam
inc
add
mov
popa
push
jle
iret
imul
pusha
cwtl
mov
inc
push
xor
sbb
sarb
mov
xchg
aas
adc
nop
mov
adc
and
xchg
push
and
push
push
mov
js
or
leave
lock
jp
fmuls
sbb
addl
push
add
or
add
add
sub
fldcw
imul
lret
bound
notl
add
adc
cmp
pop
xor
fisubs
and
sbb
push
in
pushf
fsubs
movsl
jle
jge
mov
mull
sub
xor
jl
jl
bound
xor
out
jns
pop
adc
push
fs
aaa
and
and
retw
ljmp
pop
inc
inc
icebp
sbb
outsb
mov
mov
aas
aam
das
lods
sbb
lods
outsb
xchg
sbb
jbe
sti
fstpt
clc
lcall
test
dec
outsb
push
dec
inc
out
pop
and
lods
test
repz
xor
push
and
and
pop
jno
ljmp
push
insb
sti
mov
xchg
jmp
pop
out
xchg
sub
scas
mov
dec
and
ds
mov
xor
cltd
mov
xor
insl
bound
test
adc
or
and
sbb
gs
lods
mov
push
imul
std
and
xor
aas
in
scas
in
inc
cmp
pusha
loopne
xchg
sahf
and
add
cwtl
sub
ds
fstl
xchg
mov
sub
mov
mov
xor
enter
mov
add
inc
add
inc
stos
cmc
aas
outsb
lahf
mov
addr16
add
cmp
cld
mov
mov
dec
cmp
jns
into
movsb
sbb
bound
pop
fs
jnp
push
iret
icebp
jl
mov
dec
sub
ss
aaa
jecxz
add
cmp
frstor
lods
aas
and
or
or
das
xorl
jae
popf
std
xor
jg
loop
sub
cli
or
inc
add
jne
sbb
inc
pop
lock
lods
inc
or
scas
es
imul
mov
xchg
js
sbb
dec
adc
loop
pop
xlat
jle
or
sub
cs
or
xchg
and
loopne
repz
loopne
dec
mov
repnz
pop
ja
cs
xor
mov
add
jbe
cmc
mov
fdivrl
dec
fwait
aad
test
repz
jl
rorl
lods
mov
pop
inc
sbb
dec
fldenv
push
jle
sbb
orb
and
adc
repz
imul
ret
out
adcb
and
lret
pop
inc
pop
andl
add
loopne
dec
pusha
pop
cmc
cmp
mov
fyl2xp1
sahf
aas
loope
push
mov
cmp
mov
push
fwait
aad
mov
push
xor
cmp
jg
xchg
and
adc
inc
xchg
aaa
jp
jae
mov
imul
enter
rcrl
leave
imul
cmovl
loop
or
adc
das
inc
dec
lret
imul
push
mov
xor
jbe
sub
daa
sub
pop
xorb
mov
xchg
sbb
repz
jg
into
aad
ljmp
insb
sub
mov
shlb
sbb
mov
xor
mov
in
jae
daa
out
movsl
mov
xorl
lret
pushf
cmp
inc
jnp
ss
adc
jnp
icebp
fdiv
add
and
es
mov
fs
imul
sbb
mov
aas
mov
mov
nop
mov
call
ja
sub
adc
lret
jbe
jecxz
stos
stc
scas
out
leave
in
mov
int3
fs
mov
xchg
adc
out
xor
loope
movsb
add
loope
cmp
sti
mov
fistl
leave
int
ret
jmp
pop
jp
lods
nop
cmp
cmpsl
push
inc
test
cmp
pop
xor
xor
pop
dec
mov
cmc
add
repnz
xorl
xchg
dec
and
into
xchg
cmp
into
mov
fsubrl
in
out
jnp
push
enter
shll
pushf
jo
stos
push
mov
cmp
push
mov
ficomps
enter
out
push
call
ficoml
je
mov
and
mov
aaa
cmp
pusha
or
in
push
fcmove
movsl
jmp
fwait
ret
pop
rcl
jl
push
pop
test
aam
add
scas
adc
cmp
lret
and
jae
inc
aaa
inc
mov
inc
out
lods
mov
add
fisttps
sbb
leave
aam
lods
stos
mov
mov
jp
pop
mov
repz
add
outsl
pop
adc
push
inc
mov
ret
push
dec
inc
aas
mov
sbb
cmc
aaa
add
xor
fiadds
mov
iret
xchg
lret
xor
int
cltd
scas
in
or
jl
lret
mov
test
lea
xor
rcll
mov
cmp
inc
mov
and
fs
jae
sub
faddl
inc
pop
enter
out
lea
mov
lahf
jae
test
mov
les
shl
loope
loop
xchg
or
jbe
ret
xchg
frstor
push
lret
addr16
ss
cmp
imul
test
fucomp
cmpsl
cltd
negl
jno
xchg
jl
loop
ljmp
mov
sub
push
filds
dec
sahf
xor
je
ret
popf
imul
cmp
sub
cmp
fs
mulb
or
je
enter
or
cwtl
test
cmp
jp
outsl
std
inc
add
add
subb
mov
hlt
fs
xchg
lcall
push
enter
mov
sbb
mov
maskmovq
divl
int3
fbstp
inc
out
repnz
imul
xlat
mov
pushf
jge
in
inc
shrl
out
movsb
cltd
mov
push
adc
xchg
loope
pushf
cmp
fisttpl
add
loope
sbb
or
sbb
pop
xor
sbb
mov
push
adc
movsb
jmp
sti
mov
jmp
jmp
addr16
iret
rorb
nop
in
push
bound
cmpb
push
ja
fs
test
jae
inc
movb
je
push
cmp
or
jno
cmp
jle
mov
xor
push
mov
push
test
xchg
insl
jb
sti
mov
rclb
xor
and
or
imul
fadds
test
add
fists
xlat
loop
movsl
fcmovnu
dec
mov
cmpsl
sahf
andl
sbb
jno
in
fsubr
push
xchg
es
sub
inc
add
aas
adc
xchg
lods
mov
aaa
jle
dec
push
push
sti
cmc
or
icebp
jns
xor
mov
cs
test
ror
fdivl
inc
jmp
xchg
pop
ljmp
pop
lret
xor
mov
adc
cmc
popa
cld
push
sub
push
cmc
int
mov
inc
rcll
push
imul
ret
lock
ss
jg
lcall
int
push
xchg
inc
inc
xor
je
cwtl
push
into
gs
test
xchg
and
push
dec
aaa
inc
xlat
lds
bound
mov
mov
pop
stos
fstpt
outsl
lds
shl
sbb
les
imul
adc
push
adc
aam
xor
in
mov
int
mov
in
pusha
aam
or
iret
test
or
cmpsl
std
pusha
jge
mov
notl
psubq
sarb
add
lcall
mov
and
sbb
rcll
fcoml
push
cmpsb
lret
mov
lock
jge
cmp
push
test
add
aam
sub
test
int3
call
mov
xor
icebp
mov
sbb
adc
mov
stc
push
jo
jo
lds
out
iret
in
es
into
mov
leave
insb
in
dec
sub
std
int
lahf
sub
xchg
cmc
cmp
pop
mov
clc
xchg
andl
out
pop
push
push
imulb
mov
fsubrl
jae
or
cmpsb
inc
loopne
cmp
fcmovb
aas
mov
fldl
sub
dec
cmc
mov
shl
and
push
into
mov
les
jae
or
mov
inc
jae
stos
or
or
or
cmp
jl
dec
sbb
mov
or
push
mov
jns
rorl
cmpsl
adc
mov
sub
cld
and
das
inc
xchg
sub
jnp
mov
icebp
lock
test
dec
mov
repz
or
sahf
std
scas
mov
pop
ss
repnz
fs
sbb
cmpsb
mov
ja
lock
faddl
push
xadd
shl
les
jae
fmul
xor
lret
les
shr
pop
cwtl
xchg
repz
pop
mov
lret
cmp
sti
adc
sbb
dec
adc
in
mov
mov
and
out
inc
sbb
jb
and
leave
jge
add
add
adc
test
in
fsub
cwtl
out
cmp
and
jp
scas
js
sub
dec
jae
push
dec
lret
push
jp
xor
pop
add
sbb
shll
fidivrl
movsl
jne
sbb
fdivrl
cmp
addr16
cmc
pop
ret
lods
sbb
repnz
clc
xchg
xor
cmp
loope
cli
sahf
lods
fildll
inc
jb
push
mov
pop
stc
call
aad
xchg
or
adc
pop
lret
cmpsl
gs
in
xchg
scas
movsb
mov
push
mov
xchg
cltd
push
lock
sbb
test
iret
pop
cwtl
mov
xchg
jp
movsb
cwtl
xchg
fsts
les
imul
pop
arpl
push
lods
mov
fsts
jecxz
packuswb
jae
shrl
jg
aad
sti
lret
xchg
add
and
inc
repz
sub
lahf
mov
cmp
and
cld
fbstp
sbb
and
mov
divb
scas
pop
lods
xchg
je
mov
jno
add
ret
ret
jl
aas
mov
or
and
push
mov
dec
test
clc
pushf
stos
pop
cli
and
iret
jnp
dec
loop
dec
cmp
dec
inc
ficomps
cmpsl
cli
enter
jnp
js
or
jno
lcall
mov
imul
adc
jmp
test
sbb
cmp
lret
xor
pop
xchg
decl
fidivl
outsb
mov
cmp
scas
mov
ss
daa
jmp
push
push
xlat
clc
cmpb
xchg
mov
fisubs
outsb
lods
inc
lahf
mov
movb
lret
scas
sbb
ret
pop
aad
push
sti
pusha
and
sbb
mov
das
mov
or
push
or
in
fdivrl
ja
popf
movsb
lcall
or
mov
fwait
lds
movsl
pop
pop
pop
ja
hlt
sub
cmp
lods
jmp
jns
dec
push
movsl
pop
fildll
xor
lds
pop
jb
push
out
sbb
or
je
xor
scas
add
or
test
cltd
imul
xchg
inc
movsb
js
push
pushf
jmp
push
es
rdtsc
mov
xchg
out
mov
jo
es
mov
xor
or
lcall
inc
cld
scas
test
jbe
popa
xor
push
cmp
jne
and
mov
push
pop
pop
fimuls
or
aas
loope
dec
cmpl
sbb
loop
mov
out
xor
xor
idiv
push
sub
mov
jne
fs
sahf
cmpsl
pop
push
test
dec
or
mov
add
scas
mov
inc
xor
sahf
ffreep
filds
inc
addr16
dec
ds
les
repnz
xor
xchg
mov
sarl
or
js
sub
andl
out
sub
subl
rolb
roll
ficoml
int
jnp
aad
imul
inc
and
test
cli
divl
mov
and
imul
xchg
sbb
inc
loopne
cmp
and
sbb
negb
push
ficoms
shr
enter
or
push
lock
out
cmp
lock
inc
xchg
mov
sbb
es
mov
xor
in
push
rorb
inc
je
xchg
loopne
xorb
iret
jnp
inc
cld
cld
test
and
ret
mov
xchg
inc
rcr
pop
movb
dec
mov
and
sub
orb
out
cwtl
mov
inc
shrb
cli
popa
test
mov
xchg
nop
sahf
pop
or
xchg
mov
lock
adc
inc
jno
push
aas
aam
enter
jae
pop
lods
xor
add
stos
test
pop
pop
int3
xchg
hlt
and
mov
loopne
shl
mov
incb
mov
div
dec
rcrb
adc
mov
repnz
ror
add
int
sub
mov
mov
pop
std
xlat
scas
les
scas
aam
xchg
mov
pop
sti
push
ja
adc
lret
movsl
popa
xchg
ja
insl
into
or
add
sbb
push
sbb
mov
adc
add
rcl
pop
fbstp
jae
push
filds
mov
imul
mov
inc
dec
and
push
xchg
imul
mov
xor
test
sbb
clc
push
out
mov
ficoml
and
jno
pop
gs
ds
cmp
adc
sbb
test
xor
pop
bound
andb
js
adc
int3
cmp
stos
mov
clc
cmp
add
dec
fs
push
ret
xor
sub
call
cmp
and
jge
mov
lods
sub
xchg
mov
push
clc
int
das
and
inc
lret
fimuls
shlb
rcr
test
pop
sub
mov
mov
or
mov
lods
movsb
mov
aas
fstp
aaa
pop
shrb
aaa
insb
mov
or
std
xor
adc
inc
push
mov
imul
fcmovne
xor
mov
jnp
aad
in
mov
repnz
sub
mov
mov
pop
shl
dec
data16
mov
mov
cmp
mov
pop
sub
sbb
jmp
pop
jb
hlt
xor
fcmovnbe
iret
xor
cmp
or
out
push
rorb
fwait
pushf
sub
fs
push
mov
mov
jp
pop
xor
test
pushf
test
inc
mov
sbb
int3
push
mov
out
mov
jnp
mov
xchg
pop
mov
push
movsl
and
jo
add
adc
mov
dec
pop
roll
sbb
inc
mov
and
push
ret
stc
shll
cmpsl
ss
movsb
mov
int
pop
push
movsb
adc
outsb
mov
and
pop
add
repz
xor
imul
sub
out
or
ret
xor
les
push
mov
sub
cmp
mov
xchg
in
mov
sub
subb
into
call
sub
jle
push
xor
pusha
mov
test
inc
cmp
ret
xchg
inc
sub
xor
scas
sbb
insb
pop
repz
add
gs
mov
mov
adcb
out
in
iret
dec
xlat
jg
fsubr
or
das
test
lahf
xor
or
data16
stos
into
mov
mov
xchg
xchg
adc
in
mov
jb
dec
cltd
mov
stos
pop
negl
decl
ret
push
aam
jmp
notb
mov
xchg
shlb
cld
outsl
or
insl
mov
add
out
pop
ret
adc
xor
pop
lea
insb
or
popf
sbb
cwtl
xlat
adc
cmp
jns
orb
adc
adc
add
sub
out
jmp
xor
popa
push
jns
dec
xor
data16
fisubrl
xchg
xchg
lcall
xchg
push
sub
pop
or
js
mov
test
inc
cmp
out
mov
arpl
arpl
push
cmpsl
stos
mov
and
push
adc
jb
jbe
xor
push
lret
arpl
aaa
stos
cmp
lods
add
sub
es
lret
sbb
mov
jo
adc
fildl
fprem
in
repnz
inc
dec
pop
dec
add
sbb
lahf
mov
jle
pop
mov
add
ret
sbb
gs
mov
cmp
add
movsl
xchg
scas
add
adc
sub
sub
or
sub
test
dec
jge
push
xchg
fdivr
stos
fidivl
xlat
shr
cmpl
movlps
in
mov
imul
mull
push
xchg
lahf
iret
add
mov
pop
lcall
jno
sti
bswap
dec
xchg
xor
xchg
orl
sub
test
rorl
inc
cmove
adc
into
hlt
xchg
adc
mov
notl
ret
movsb
int
in
fistpll
dec
inc
mov
mov
std
jns
mov
xchg
or
out
push
test
fiaddl
scas
aad
ret
inc
mov
movsb
jle
insb
lods
dec
dec
sub
pop
iret
notb
dec
scas
cwtl
enter
pop
dec
xor
push
loope
mov
pop
adc
push
arpl
sbb
jne
mov
clc
enter
pop
push
push
dec
ljmp
adc
sahf
aas
mov
loop
js
adc
lcall
lcall
lods
push
jmp
mov
pop
outsl
jmp
pop
add
sub
push
inc
lock
mov
adc
cmp
stos
into
divl
mov
and
lods
jmp
mov
mov
ficoml
adc
pop
in
sub
and
mov
xor
je
rcl
test
shll
push
xorl
dec
pop
cli
xchg
xchg
cli
sbb
jbe
test
cmc
std
mov
or
mov
cld
dec
lods
sub
out
dec
lock
jnp
in
add
loope
rorb
outsl
mov
cmp
testb
adcl
fadd
out
ud1
aam
incl
inc
push
cmp
adcl
data16
and
pop
xchg
daa
cmp
add
sbb
aas
fsubrl
and
aaa
jo
and
imul
xchg
stos
pop
mov
stc
loop
nop
inc
hlt
test
jmp
pop
sub
test
clc
aaa
jno
inc
pop
clc
fmull
sbb
pop
fwait
aam
push
sbb
push
xchg
push
aas
xor
mov
push
mov
inc
mov
testl
add
inc
sub
mov
movsl
mov
inc
mov
call
or
call
jl
pop
or
arpl
cmc
mov
ficoml
les
neg
sub
ficompl
inc
push
int3
xlat
sub
inc
mov
jge
lock
jbe
dec
aam
jno
test
cmp
cmpsl
es
jge
out
gs
ss
inc
jg
dec
xor
fimuls
hlt
mov
mov
icebp
cmpl
mov
xchg
fidivrl
das
mov
or
stos
mov
push
loop
aaa
jmp
push
cs
sbb
mov
push
push
cmp
pop
imul
sarl
lods
adcb
push
and
and
enter
je
shll
iret
insb
sub
sbbl
lahf
int3
in
cmc
addr16
cmpb
loope
xor
sbb
int
mov
sbb
int3
adc
loop
xchg
mov
mov
cmp
rclb
mov
popf
pop
xchg
inc
out
sub
pop
jecxz
in
aas
lods
sub
andb
imul
ss
out
sbb
icebp
jae
inc
jbe
fwait
mov
jbe
rsm
lret
mov
jb
dec
push
lret
gs
sub
sbb
es
sarb
mov
hlt
in
jne
jmp
cwtl
addr16
insl
das
cmp
cli
mov
cwtl
pop
add
mov
mov
xchg
jl
scas
dec
movsb
into
loop
adcb
sti
mov
mov
pushf
pop
hlt
scas
xchg
cmp
mov
lea
lret
scas
add
shll
pop
push
out
fidivs
dec
dec
addr16
ljmp
fistpl
aad
jb
out
adc
adc
add
push
adc
or
push
inc
fnstcw
sahf
loopne
jp
xchg
xlat
and
data16
aaa
mulb
pop
xchg
jbe
lret
mov
jne
nop
mulb
cmp
push
ret
je
mov
loope
in
and
scas
pop
shrl
or
mov
ds
mov
in
cmc
xor
out
popa
dec
lea
mov
icebp
dec
adc
jns
arpl
jl
add
je
or
sahf
lret
shlb
push
dec
test
mov
std
add
rcll
clc
mov
into
or
hlt
adc
pop
addr16
dec
pushf
mov
sbb
arpl
repz
adc
jbe
aad
outsb
jmp
lods
jg
cmpsb
test
popa
outsl
in
sar
pop
es
into
push
mov
mov
daa
outsb
dec
sub
dec
pop
mov
or
aaa
clc
add
push
and
mov
pop
loope
ret
lret
cli
scas
push
fistps
sti
mov
push
add
jbe
test
push
inc
int
call
mov
dec
dec
ret
fisttpll
sbb
sbb
add
or
fadds
cltd
jmp
mov
iret
add
popa
or
lods
nop
les
stos
add
clc
scas
jge
les
jg
push
pop
pop
and
mov
daa
repnz
enter
cs
dec
lds
xchg
cld
sub
mov
add
xchg
js
repz
push
xchg
popa
xor
dec
jne
xchg
jmp
adc
dec
sbb
sbb
xor
rolb
jecxz
mov
mov
pop
push
fwait
pop
js
or
xchg
or
cmc
mov
cwtl
ja
mov
cwtl
xchg
sub
mov
mov
push
jmp
lret
add
aas
cmpsl
xchg
push
loopne
and
adc
loop
xchg
cmp
sub
mov
nop
ret
push
xor
or
int
repz
xlat
movsl
daa
iret
fdivr
cmp
mov
xor
setne
and
mov
pushf
nop
scas
hlt
out
inc
fiaddl
push
adc
movsb
inc
add
jns
mov
stos
xchg
mov
ret
mov
arpl
and
andl
outsb
cli
jecxz
int
pop
sbb
faddl
int3
sub
sbb
mov
cmp
add
xorl
pusha
lock
xchg
add
orb
mov
loope
mov
jnp
int3
fstpl
xlat
stos
repnz
scas
or
xchg
xchg
sti
add
imul
testb
sbb
clc
adcb
lret
lahf
lret
add
jmp
cs
adc
mov
adc
sbb
movsb
js
jne
pop
cmp
popf
pop
lods
fs
fucom
push
fwait
cmp
jecxz
into
daa
cmp
cmpsb
inc
dec
mov
pop
add
jns
pop
mov
out
jno
inc
aaa
das
std
js
out
loope
push
push
mov
push
push
sbb
lret
dec
sbb
fcmovbe
gs
cmp
imul
arpl
or
xchg
or
hlt
xor
stc
adc
mov
std
roll
fiaddl
fnstcw
jbe
das
pop
popf
aam
cmpb
inc
mov
dec
mov
lcall
push
stos
mov
cmpsb
push
xchg
pop
xchg
mov
aam
sub
push
push
jmp
rorl
jg
jnp
lock
mov
aas
call
stc
sbb
cmp
sbb
aam
roll
int3
xor
cmp
add
pushf
mov
int
jo
das
call
jecxz
sbb
lea
dec
sbb
inc
sbb
ss
jge
jno
sub
lea
pusha
mov
add
cmp
xor
and
cmp
mov
repnz
mov
shlb
das
fidivrs
ja
gs
dec
cmpsl
xor
xor
lods
inc
loope
xchg
pop
rorl
int3
mov
push
andl
es
cwtl
fldcw
sub
pop
and
setb
fs
scas
jmp
sbb
xchg
scas
cmc
testl
inc
pop
out
call
sarl
dec
add
adc
sar
push
je
in
sub
cmp
mov
cmp
and
frstor
lea
and
inc
orl
pop
es
stc
pusha
cmp
insb
dec
mov
fisubrs
jae
add
movsl
in
inc
lea
push
in
add
pop
mov
ss
in
xor
popa
add
and
inc
pop
pop
cmp
daa
rcrl
negb
les
pop
clc
stos
shl
aam
out
clc
sbb
daa
push
stos
ds
loop
push
jne
bound
pop
aas
xchg
mov
mov
shr
sub
sbb
aad
cmp
sbb
rcl
hlt
xchg
jbe
mov
jnp
jl
gs
or
and
jo
xchg
mov
mov
push
sbb
mov
ja
adc
or
in
frstor
pop
add
xchg
pop
push
xchg
ljmp
xor
int
aad
sbb
les
stc
add
jb
outsl
jb
lret
sbb
dec
jecxz
xchg
sub
xchg
das
scas
mov
lret
fildl
std
in
js
lahf
clc
xchg
ja
loop
clc
xchg
inc
movsb
cli
insl
xor
mov
jne
and
js
popa
mov
or
or
leave
mov
push
popf
dec
inc
dec
adcb
or
in
cmc
das
neg
inc
int3
shlb
outsl
pop
xchg
nop
mov
bound
lcall
xor
shll
mov
aas
pop
and
mov
ret
dec
outsl
idivb
ljmp
or
pop
sbb
addr16
jge
jnp
or
out
mov
dec
cli
jle
orl
sub
es
mov
mov
dec
dec
aas
ror
movsb
sbb
shrb
jno
dec
out
adc
std
mov
xor
cs
cmp
mov
fsubrl
je
loop
sbb
sbb
inc
pop
leave
push
inc
out
in
aam
adc
je
and
stc
sbb
fcompl
pop
jno
je
scas
inc
and
xor
dec
mov
sbb
fdivl
dec
in
jnp
pop
xchg
lea
inc
mov
sbb
mov
inc
xchg
cld
fldenv
jg
mov
scas
lods
ja
fstps
xor
pusha
xchg
call
orl
inc
mov
mov
repz
repnz
or
push
jo
add
in
mov
shlb
fisttpll
mov
cwtl
mov
in
ret
fs
push
bound
cmp
into
xchg
orb
ljmp
sub
fsubp
pop
adc
xchg
movsl
lock
iret
jge
inc
mov
add
aad
enter
sub
jge
fisttps
sbb
adc
fdivp
inc
sub
pop
les
or
xor
jbe
daa
sbb
int
cwtl
imul
or
xorl
add
insl
test
push
lods
mov
outsl
jbe
mov
or
xor
xchg
sbb
push
lods
leave
cmp
cwtl
sarb
repz
jne
nop
dec
xchg
dec
mov
mov
xlat
mov
mov
test
aam
xchg
add
hlt
dec
int3
jmp
xchg
hlt
xchg
xchg
andb
sbb
cmp
lret
pop
in
pop
mov
adc
xor
dec
outsl
ljmp
fdivrl
mov
add
adc
pushl
xchg
mov
push
into
mov
and
ret
xchg
sbb
xchg
mov
add
sti
fwait
mov
and
push
into
mov
popa
jmp
repnz
cmpsb
and
into
xor
cs
inc
cs
pop
xchg
pop
cltd
inc
sub
inc
cmp
loop
dec
fmull
repnz
gs
sub
mov
xchg
insl
sbb
dec
mov
adc
pop
stos
sbb
cmp
cmc
sub
xor
jecxz
mov
mov
inc
mov
mov
jbe
loopne
push
inc
xor
add
frstor
fcompl
lea
dec
scas
inc
mov
pop
fisubrl
les
pop
jl
mov
mov
pop
sahf
aaa
cwtl
mov
xchg
and
xchg
fs
add
adc
dec
in
push
mov
ljmp
pop
mov
sbb
add
xlat
insl
jno
fidivrl
repnz
dec
pushf
ret
imul
mov
cmp
push
xor
pop
or
pop
xchg
fisubrs
inc
jbe
xchg
push
pop
out
cltd
adc
sbb
stc
pushf
pop
add
push
or
loope
nop
xchg
fadd
xchg
lods
das
pop
xor
pop
jl
popa
aad
dec
xor
mov
xor
mov
mov
dec
push
or
push
push
push
xchg
cwtl
in
mov
xor
xchg
mov
inc
in
repz
jl
push
jo
mov
std
inc
cmpsl
or
jmp
mov
mov
fcoml
popf
leave
cmc
lods
cmp
inc
cmp
xlat
test
bound
jno
outsb
push
inc
xlat
push
aad
xchg
add
insl
xor
add
sbb
xchg
scas
push
das
bound
jns
push
xchg
jbe
xchg
std
sub
dec
gs
ret
out
sbb
sub
jno
sbb
js
mov
pop
lods
fisttpl
outsl
sub
mov
sbb
sahf
mov
adc
add
pop
sbb
outsb
mov
arpl
sub
push
cmp
cmpsl
push
pusha
in
adc
std
std
or
lea
push
movsl
fisubl
jge
movsb
dec
xchg
popa
repnz
repz
cli
push
jp
call
paddsw
pop
xor
cs
cli
mov
les
mov
imul
cld
xor
mov
scas
jge
cs
jmp
inc
sub
lock
bound
stc
xchg
test
hlt
xchg
out
or
test
out
pop
inc
adc
icebp
xchg
mov
add
jns
cli
mov
and
pop
rol
pop
in
arpl
and
cmp
imul
ljmp
lcall
and
mov
lea
and
cmpsb
stos
cwtl
cli
ds
add
shl
sub
fsubs
loop
or
jl
xchg
inc
aaa
mov
inc
sub
mov
xor
dec
clc
push
pop
imulb
jp
pop
mov
iret
jns
cmp
aad
sub
aam
rorb
daa
call
mov
xor
in
in
mov
das
adc
mov
push
mov
mov
sbb
cmp
mov
jmp
sbb
jns
cmp
movsl
ss
mov
pop
out
mov
and
or
add
shrl
sarb
mov
inc
sti
push
lahf
push
iret
jle
and
psubusw
inc
mov
and
ds
out
test
or
or
mov
xchg
push
out
cmpsl
clc
jae
push
out
ret
sti
aas
insl
in
adc
ds
mov
fsubr
push
sti
std
out
push
lahf
inc
rolb
dec
loop
mov
test
jnp
push
test
insb
mov
lods
or
pushf
mov
lret
cltd
push
add
push
pop
jo
sbb
cltd
mov
add
xor
test
jns
lahf
push
and
int
adc
dec
aad
add
icebp
inc
icebp
inc
das
test
jmp
jb
adc
pop
xchg
xor
add
lcall
ja
mov
adc
mov
jle
movsb
xor
inc
movsl
in
jbe
sti
inc
cmp
lods
cmp
xor
in
rcl
add
pop
fwait
andl
popf
lea
adc
icebp
add
lcall
inc
aam
inc
mov
das
leave
fwait
or
aas
iret
xor
call
or
pop
push
clc
in
and
pop
leave
bound
aad
lods
push
push
dec
stc
pusha
jp
mov
sub
fildll
iret
cli
and
fistl
push
fstps
pushf
sti
andb
arpl
scas
xchg
dec
push
scas
pushf
push
out
dec
xor
and
jnp
adc
stos
fdivrs
sbb
push
fwait
dec
pop
jne
cwtl
in
mov
push
xchg
add
repnz
repnz
das
mov
push
lahf
push
sub
adc
inc
loopne
in
mov
add
or
push
push
fxch
mov
push
jp
fisttpll
sub
std
daa
pop
pop
jns
outsb
adc
test
jae
hlt
sbb
repz
and
xor
aad
inc
xchg
insb
mov
pop
add
mov
inc
sub
pusha
in
push
sbb
lods
jno
mov
pushl
add
mulb
repnz
out
push
sbb
lea
jle
test
loop
fistpll
dec
jp
mov
pusha
xor
js
inc
cmp
flds
cli
repnz
andl
imul
out
repz
and
and
lods
aam
jo
daa
pop
mov
mov
aad
orb
mov
ljmp
repnz
add
daa
addr16
loope
insb
inc
aas
subl
dec
add
mov
mov
xchg
mov
push
pop
mov
es
test
lods
call
push
adcb
sbb
popa
mov
jg
and
jae
shl
sbb
movsl
cmp
jmp
mov
mov
xchg
aad
xor
and
cmc
ficomps
mov
inc
mov
jg
insb
pop
lds
adc
cwtl
pop
ljmp
enter
cmp
jecxz
push
xchg
mov
adc
pop
xor
addr16
popa
outsl
loope
lods
mov
pushf
add
jmp
xchg
out
xchg
mov
cltd
xchg
push
mov
ret
or
fcomps
and
jp
or
repz
mov
fs
xchg
arpl
aaa
push
and
lret
scas
lods
test
cmp
jmp
inc
insb
popf
push
jae
lcall
xchg
pop
xor
jno
push
popf
lods
repnz
adc
lahf
lret
or
loopne
xchg
cmc
mov
fsubr
into
loopne
cmpsl
cmp
cmpsl
aad
sahf
sbb
outsl
lret
out
dec
in
jl
push
fstpt
jmp
test
in
outsb
cmp
mov
adc
push
sahf
gs
inc
and
lcall
int
adc
rorl
xchg
pop
idiv
and
sti
fcompl
mov
sub
movsl
sbb
enter
dec
cmp
pop
or
jecxz
mov
cmp
lcall
je
cld
push
pop
ds
movsb
pushf
pushl
call
rcr
adc
nop
mov
rcrb
rolb
pop
sbb
test
dec
mov
push
sbb
dec
aam
sbb
aaa
sbbl
inc
iret
fisttpll
cmp
divl
and
jb
out
mov
mov
pop
jp
or
mov
mov
dec
les
sbb
lods
sahf
add
shll
mov
sub
insl
loope
pusha
pop
xlat
pushf
adc
sub
loop
imul
dec
shll
mov
ja
adc
adc
int
xor
sbb
in
xchg
adc
inc
mov
and
add
sbb
mov
inc
sbb
fsub
sbb
push
or
xchg
jge
mov
fstpt
push
pop
add
inc
jle
addl
in
xchg
pushf
lcall
mov
pusha
or
fadds
inc
pslld
or
out
out
inc
jl
xchg
jg,pt
sub
andb
dec
push
out
outsl
add
sbb
test
jne
mov
scas
je
sbb
in
int
cwtl
push
gs
mov
push
outsl
adc
adc
xchg
popa
inc
push
xor
xor
push
and
in
test
fbstp
std
icebp
and
andl
int3
jle
out
mov
dec
push
pusha
inc
push
fnsave
push
cmp
pop
jb
adc
ror
dec
pop
sbb
out
enter
sbb
jae
es
sbb
cwtl
divb
jge
mov
rcr
movsb
mov
mov
push
xor
inc
sbb
mov
or
clc
pop
imul
sub
pushf
cmp
aad
cmp
mov
sub
enter
xor
lock
ds
push
stos
cli
arpl
add
and
popa
sbb
cmp
ljmp
mov
pop
inc
jmp
lods
jb
xor
or
push
sti
std
sti
dec
mov
fildll
mov
xor
fstpt
adc
sbb
repnz
ss
fsubrs
mov
fcompl
stc
inc
push
push
pop
or
jne
shrb
aas
sahf
ss
dec
jge
cmp
aad
cmp
adcb
sbb
sub
add
mov
daa
js
mov
push
loopne
xchg
jmp
je
pop
arpl
arpl
xchg
dec
jmp
scas
fsubr
mov
sbb
arpl
mov
mov
push
fucom
and
frstor
mov
cmp
test
jle
pop
and
xchg
cmpl
jo
pop
xor
adc
daa
mov
mov
dec
xor
dec
fcomps
cmp
sub
mov
cmp
mov
mov
push
mov
loope
pop
xor
adc
jbe
sahf
dec
xchg
cmp
jecxz
pop
bound
out
loop,pn
repz
fs
jo
xchg
into
pushf
divb
jno
test
pop
fisubs
lret
lock
sub
sbb
mov
test
dec
mov
inc
cltd
imul
mov
mov
das
pop
inc
and
add
push
bound
mov
push
mov
inc
popa
lahf
or
inc
jp
mov
push
repz
add
inc
cmpsl
cmpsb
ret
inc
pop
rclb
mov
ss
clc
xor
repz
push
push
int3
getsec
loope
shlb
mov
pop
xor
orl
sahf
imul
das
mov
push
mov
push
insb
mov
icebp
fwait
adc
mov
xchg
ret
stc
icebp
mov
adc
dec
scas
es
xchg
xchg
and
cmpsb
add
jno
sbb
outsl
test
pop
ffreep
dec
lods
jbe
mov
rolb
add
push
mov
or
sub
cmp
xor
je
shll
push
push
sbb
sub
xor
mov
xor
mov
lock
dec
xchg
cmp
adc
push
cltd
repnz
cmpsb
imul
andl
mov
pop
subl
stos
out
mov
lret
sub
aam
stos
cmpsb
jnp
or
in
xchg
mov
in
inc
das
inc
jle
sarb
push
sbb
or
mov
lods
cmp
lock
out
cltd
add
cmc
icebp
in
mov
add
lret
adc
addl
cmpsb
in
fbld
aad
iret
jae
sarb
cs
dec
mov
push
push
imul
pop
daa
and
das
push
cltd
mov
and
jne
pop
jns
scas
fsubs
jle
jbe
mov
dec
dec
cmpsl
jne
int3
rcl
adc
enter
pop
fwait
push
je
push
sub
mov
dec
std
test
dec
mov
dec
add
inc
mov
fildll
pop
cwtl
dec
std
int3
icebp
push
xor
mov
jbe
add
jns
les
outsl
push
dec
lret
test
mov
loopne
mov
dec
sub
and
or
mov
add
mov
out
add
pop
push
dec
fcomps
jo
xor
aas
ja
pop
mov
loope
rorl
sub
in
xor
cmp
sbb
rcrb
xchg
inc
jecxz
jo
ss
and
fadds
push
mov
sub
ds
xlat
adc
sub
mov
or
push
test
lods
mov
or
les
cwtl
inc
mov
fiadds
imul
imul
cmp
int3
addr16
and
call
shrl
dec
add
jle
fsubl
inc
fdivrl
ds
adc
mov
cmp
dec
fwait
sbb
sbb
cld
mov
xor
aad
xchg
inc
sarl
push
test
xchg
pop
jle
push
repnz
mov
iret
add
stc
cmpl
lock
test
sbb
ja
inc
inc
push
sub
push
jne
sbb
inc
fsubrs
movsl
add
add
pop
and
jo
sub
repnz
push
ja
sbb
scas
push
mov
fisttpll
and
popf
mov
jo
sti
sbb
pop
sub
test
lds
rorb
rol
test
call
sub
enter
jns
call
sbbb
inc
mov
cmpsl
sbb
add
incb
mov
xchg
aam
test
pop
shlb
test
mov
cmp
aas
and
sti
mov
clc
out
xchg
in
jl
scas
jmp
dec
sub
xor
jno
lods
inc
xor
outsl
sub
test
repz
add
adc
xchg
loop
imul
mov
push
xor
sbb
sarl
push
xchg
aaa
jmp
mov
daa
push
pop
jg
add
sub
and
xchg
and
repz
bound
nop
mov
sub
seto
mov
cs
xchg
and
iret
sub
push
sbb
push
cmpsl
lods
sbb
xorl
push
mov
and
lret
insb
xor
mov
out
outsb
adc
ss
daa
imul
xchg
out
and
cmovs
xor
int
pop
push
idiv
push
pop
das
je
cmp
xor
movsb
mov
sbb
xchg
or
adc
in
mov
dec
leave
ret
adc
inc
or
roll
add
jb
xor
push
rclb
movsl
or
fcmovne
repz
ret
ljmp
ss
lock
or
adc
xchg
enter
repz
sbb
sbb
pop
lods
and
dec
or
inc
add
mov
aas
aad
ret
xchg
cmp
popa
out
out
jmp
mov
dec
sub
or
inc
imul
je
frstor
jge
sbb
mov
and
test
push
rcr
mov
cmp
je
sar
adc
jecxz
ficompl
pop
adcl
or
mov
cwtl
cltd
scas
mov
mov
fsubs
cmpsb
mov
and
add
xchg
aas
xor
mov
sbb
mov
ds
jo
or
mov
mov
aam
insb
jo
sbb
mov
int
pop
dec
mov
mov
pop
jbe
xor
das
mov
sbb
xchg
jle
xlat
ja
cmp
sub
inc
call
lahf
sub
adc
dec
outsb
rcrb
sbb
test
arpl
jle
into
xor
jnp
mov
pop
popa
shrb
sbb
jno
inc
cmpsl
xchg
sbb
adc
adc
pop
pop
inc
inc
mov
popf
popf
dec
or
stc
push
pusha
push
insb
les
add
lds
jg
xchg
cmpsb
mov
push
insb
mov
cmp
lea
insl
mov
ljmp
loop
test
pop
sub
xchg
cltd
fbld
sub
test
cltd
mov
xchg
mov
divl
xchg
mov
test
pop
testb
roll
cmpsb
or
sbb
and
xor
shll
adc
jp
fsubrs
cwtl
mov
adc
cmc
and
aad
in
xchg
push
jge
mov
addb
jne
or
in
pop
inc
and
mov
dec
add
in
and
cmp
pop
inc
pop
inc
push
jno
pusha
sarb
cmp
or
pusha
mov
jno
push
arpl
cld
dec
test
push
out
jecxz
roll
mov
insb
inc
insl
gs
dec
aas
movsl
loope
mov
stos
xor
or
daa
sbb
xlat
mov
push
aas
fcoml
je
xchg
sub
movsl
gs
dec
bound
sbb
xchg
jns
push
repnz
xchg
lock
fisttpll
lea
pop
and
and
inc
or
js,pn
sbb
xchg
js
xor
fnsave
lahf
mov
fists
addr16
mov
imul
popf
and
popf
pop
iret
cmc
wbinvd
cmp
rcrl
ret
setl
daa
in
mulb
loopne
and
push
out
test
sbb
jb
cmpsl
cwtl
xchg
test
cmp
sbb
sub
fdivrs
or
repnz
in
iret
loope
mov
mov
call
leave
dec
stos
mov
test
pop
jle
add
ud1
ret
ss
movsl
xor
and
je
push
sahf
jmp
pop
mov
or
jp
adc
mov
rcr
mov
mov
cmp
ja
mov
cltd
adc
jg
es
sbb
clc
mov
outsl
jbe
push
fsubl
mov
shlb
in
imul
pusha
cmpsb
orl
mov
insb
cmpsb
sub
xor
int
ret
push
daa
fwait
jp
push
inc
pop
roll
or
fidivrs
cmpsl
lods
test
jecxz
clc
and
fs
pop
cli
stos
dec
mov
gs
push
negl
pop
int
add
call
sub
inc
pop
icebp
es
and
scas
in
dec
push
or
adc
enter
adc
and
and
cmp
cs
sti
pusha
sbb
ret
es
aaa
or
mov
push
and
test
jae
sub
lods
add
aaa
sbb
sbb
repz
int3
jns
pop
jmp
or
hlt
mov
cmpsb
adc
jecxz
ds
in
lret
enter
fisubrs
ds
sub
xor
scas
jmp
js
dec
pop
fistl
xchg
pop
pop
mov
mov
ror
push
fwait
fiadds
xchg
sub
sbb
adc
mov
sub
setne
fsub
rclb
mov
jle
xlat
lock
test
dec
or
sahf
lret
cmp
in
ds
mov
push
jno
push
adc
data16
in
call
or
mov
sub
adc
jno
cmp
pop
push
or
adc
popf
scas
xchg
sbb
lock
ss
add
test
clc
or
cld
push
fmul
xor
popa
or
or
sub
or
mov
xchg
cmpsl
stc
and
xor
arpl
ja
or
mov
pop
jnp
adc
pusha
adc
cmpsb
mov
ss
or
iret
xorb
or
inc
mov
cmp
mov
jo
mov
pop
ljmp
jbe
pushl
aaa
push
into
inc
mov
or
pop
cmp
cmp
mov
sbb
aam
mov
mov
cld
inc
popa
adc
pop
mov
test
inc
jge
xor
mov
push
or
mov
mov
dec
cmp
push
and
adc
dec
cmpsl
xor
aaa
xchg
xor
or
insl
mov
rol
les
mov
cwtl
fdivl
mov
pusha
xchg
push
sbb
lock
icebp
xor
and
cld
push
pusha
sbbl
scas
xchg
test
cli
mov
jecxz
jne
mov
sbb
cld
mov
sub
xor
fisttpll
mov
lods
das
fwait
dec
andb
ficomps
fs
xor
mov
pop
cmp
test
mov
inc
pop
add
inc
mov
jmp
lret
and
adc
fdivl
lcall
mov
shlb
push
sbb
in
xchg
out
xchg
jecxz
dec
sbb
cltd
insb
add
test
sub
push
mov
and
les
mov
xchg
pop
pop
sti
adc
dec
jne
icebp
sahf
and
add
leave
lcall
push
xor
dec
lods
mov
mov
push
adc
cmp
aam
out
loopne
sahf
fcmovu
xor
fs
xchg
lds
add
sub
mov
pushf
jbe
pop
fs
int3
cmp
and
outsb
ja
lret
and
pop
in
inc
imul
into
push
push
jmp
out
insl
nop
pop
arpl
cmp
enter
cmpsb
popf
xor
icebp
sti
fs
and
lds
mov
inc
xchg
mov
lock
fisttps
sub
mulb
lds
jg
mov
in
mov
push
and
dec
adc
sti
mov
lea
lds
stos
jnp
ljmp
add
dec
sbbb
pop
outsb
clc
je
pop
std
shl
fistl
fwait
pop
mov
out
ljmp
fists
test
scas
xchg
sbb
jns
mov
push
xor
mov
add
mov
lcall
aaa
in
in
sar
and
aas
mov
and
adc
pop
shrb
popf
mov
pop
adc
faddp
mov
add
aaa
jo
aaa
ss
mov
pop
arpl
int
fistl
insb
pusha
scas
mov
cltd
sub
adc
sbb
push
mov
bound
mov
push
fsubs
pusha
cmpsl
lds
fsubrs
xlat
out
dec
or
in
add
pop
and
inc
scas
popa
out
cltd
pop
xor
in
add
pop
jae
adc
cmpb
scas
mov
xor
movb
jns
in
pop
sbb
repnz
nop
xor
cmpsb
mov
into
mov
imull
xchg
aaa
and
aas
shl
dec
pop
js
mov
shlb
setae
mull
adc
sbb
test
mov
mov
sbb
in
xchg
pushf
imul
lret
push
lcall
repnz
push
sbb
rcrl
test
stos
jbe
push
mov
imul
sahf
stos
cmp
cmp
pop
aaa
imull
movsb
cli
xchg
imulb
cli
jnp
imul
bound
or
pusha
cmpsb
ret
xchg
cltd
inc
stos
aad
xchg
shlb
adc
cs
mov
rcrl
cmp
jle
nop
nop
call
cli
and
mov
adc
xchg
cwtl
hlt
mov
fimull
dec
pop
loope
cmp
inc
out
jmp
jne
jo
in
xlat
xor
scas
xchg
push
xchg
sti
inc
mov
mov
out
cmp
push
jp
cltd
hlt
fs
jne
mov
push
adc
xchg
lret
pusha
insb
jp
pop
pusha
and
imul
nop
fbstp
aas
aam
push
adc
add
sbbb
test
sbb
scas
popl
pop
bound
filds
aad
dec
xlat
mov
mov
hlt
and
mov
adc
in
hlt
negb
andl
pushf
cld
popa
sub
xor
inc
or
push
shrb
jmp
xchg
cs
xchg
adc
sarb
out
mov
pop
repz
push
add
jecxz
jno
push
inc
sahf
test
shrb
xchg
jecxz
mov
push
pop
push
jle
in
and
fmul
add
mov
xchg
rclb
clc
xchg
mov
not
cmpsl
and
add
dec
aad
fisubrl
lock
pop
imul
cmp
aaa
nop
lret
add
adc
xor
imul
lock
mov
jg
lds
fs
test
inc
inc
lods
pop
mov
jne
fcmovnbe
cmp
dec
js
mov
aad
jp
and
sahf
adc
je
cmp
loopne
cmpl
aaa
and
or
dec
xchg
shlb
outsl
mov
sub
mov
ret
cli
mov
imul
in
enter
loop
or
sub
or
shll
jmp
xchg
dec
adc
sub
jp
xlat
jg
inc
clc
and
sahf
xchg
fadds
sub
inc
mov
inc
inc
push
fcmovnbe
mov
ja
xchg
dec
push
mov
mov
dec
adc
xchg
arpl
push
xor
lods
or
and
andl
rorb
nop
outsl
push
scas
fimuls
iret
aas
negl
mov
mov
loop
push
movsl
sbb
cmovs
aaa
int
cmpsb
cmpsl
clc
cmpb
std
inc
inc
mov
sar
cltd
sub
sbb
js
add
inc
into
sub
xor
loopw
sbbl
mov
mov
mov
inc
std
dec
data16
mov
pop
cmp
lods
jne
test
lock
pop
ret
adc
orb
outsb
xlat
stc
int3
mov
mov
pop
fsubl
repnz
cmp
jp
pslld
jae
lret
add
xchg
jne
lock
xchg
adc
cmp
and
xchg
jbe
or
lret
bound
sar
and
call
hlt
mov
push
imul
push
jg
jle
lods
loop
loope
jl
scas
sub
jne
pop
mov
add
orl
cmp
cmp
ljmp
fsubr
dec
add
pop
push
push
pop
push
js
stos
mov
pop
mov
test
dec
fdivs
xor
pop
dec
push
addr16
test
fisubl
psllq
and
lock
xchg
ret
cmp
and
fwait
jp
rcrl
mov
roll
movsb
mov
repz
cmp
push
push
push
sub
xchg
aaa
xacquire
cmp
enter
inc
or
cli
pop
fstpt
jle
imul
fcoml
xchg
mov
in
std
mov
insb
sbb
adc
in
stos
lret
pusha
dec
xor
xor
inc
aad
push
out
mov
cmpsl
pusha
cmc
rcll
pop
cmp
push
in
pushf
pop
dec
inc
andl
ss
mov
dec
idiv
jbe
xor
loope
push
pop
cmp
bound
push
ljmp
push
push
and
addr16
cmp
icebp
out
fadds
rclb
mov
push
inc
inc
add
es
dec
cld
es
arpl
cmp
ljmp
sbb
sub
sub
icebp
aaa
flds
enter
rclb
pop
outsb
orb
je
mov
ret
sub
fwait
testl
rolb
lret
xchg
es
and
mov
fwait
stos
lods
fldl
mov
push
mov
bound
mov
cli
mov
cmp
or
adc
push
mov
adc
in
cmp
xchg
jae
inc
sub
int3
xchg
xor
in
mov
cmpsl
into
or
inc
sbb
sarl
clc
lret
es
daa
cmpl
sbb
lds
mov
loop
inc
rcrl
mov
call
pop
cmp
sub
lods
movsb
mov
fidivs
and
gs
test
or
mov
mov
test
int
aad
mov
cmp
xchg
les
push
pop
faddl
xor
loop
fwait
pop
int3
scas
add
call
fnstsw
in
jno
insl
cmovl
hlt
test
mov
addr16
jle
stc
cmp
sub
inc
xor
push
xor
xchg
push
je
mov
pushl
lea
jecxz
lods
xorb
and
or
xchg
jns
aas
in
sbb
xorl
jp
mov
mov
fcompl
js
repz
std
adc
loop
roll
das
fcmovu
jp
lds
sub
mov
push
dec
leave
mov
roll
push
das
je
pusha
into
sub
cs
sbb
js
or
push
lods
ss
adc
pop
xchg
push
imul
push
loope
cld
ret
adc
ret
mov
push
sbbl
call
jno
xchg
repz
ret
inc
and
sub
cli
mov
lea
shrb
pop
jne
sbb
call
leave
add
clc
pop
mov
das
inc
sbb
xlat
fwait
mov
sti
roll
sahf
dec
mov
cmpsb
lahf
gs
xchg
ss
pop
sbb
mov
or
mov
pop
fwait
push
push
inc
inc
fisubrl
push
je
jne
push
cmpl
jg
test
or
adc
push
mov
or
test
icebp
mov
and
cmpsl
xchg
add
pop
movsb
aad
mov
or
mov
or
xor
xchg
dec
lret
xchg
mov
test
jbe
int3
dec
test
je
adc
stos
outsl
sub
daa
fdivl
xchg
outsb
jp
cmp
push
roll
dec
xor
mov
hlt
xor
mov
cmp
xchg
daa
fwait
cwtl
mov
cmpb
iret
add
xor
cmp
rclb
adc
mov
test
add
ret
testl
jmp
lds
and
pop
and
jns
inc
adc
loope
sub
insb
out
mov
rcrl
ficoms
bound
mov
jnp
int
mov
in
out
and
and
pop
or
aad
jmp
fs
mov
and
xor
sarb
movsl
mov
sbb
shrb
jns
adc
pop
jns
lahf
push
outsb
pusha
jmp
add
hlt
and
cmp
scas
cmc
sub
inc
jge
or
mov
jl
cmp
sub
inc
adc
add
popa
mov
in
pop
inc
mov
sti
fisttpl
mov
add
sub
mov
or
inc
push
push
lods
pop
in
inc
lock
push
pop
sahf
test
pop
in
sub
int
sbbb
lret
dec
je
jo
push
les
and
dec
sub
and
xchg
in
sbb
test
in
scas
fwait
add
jg
sbb
mov
pop
mov
adc
cmp
mov
sub
xchg
pop
je
rcll
mov
mov
out
xchg
or
dec
pop
adc
xchg
pop
or
mov
xlat
aas
push
mov
adc
je
jg
fcom
pop
jp
xchg
and
adc
jmp
adc
jge
lret
mov
ds
loope
clc
and
jo
mov
loop
jb
jmp
lock
mov
lods
loop
jl
stos
mov
bound
fwait
xchg
js
jns
cmp
sbb
test
les
push
pop
roll
cmp
lret
rcll
pop
cmp
or
mov
jae
pop
ljmp
repnz
xor
data16
lds
fs
popa
rol
push
mov
scas
push
jmp
mov
jne
mov
iret
adc
divb
in
dec
subl
enter
inc
inc
out
bound
jnp
sub
xor
jg
test
nop
sub
pop
rorb
fcoml
mov
lods
test
sbb
loopne
in
ret
add
cmp
enter
inc
sbb
clc
jecxz
insb
cmp
jg,pt
adc
push
outsb
jae
mov
rcrl
fsubl
in
and
fs
int3
push
fstpl
xchg
xchg
sti
jge
mov
jnp
mov
xor
inc
pop
dec
push
stos
xchg
xchg
push
or
mov
or
addr16
push
fwait
cmp
push
lret
mov
sub
cld
out
cld
add
lret
mov
icebp
test
or
jno
out
std
mov
fsubr
stc
lea
sub
cmp
fnsave
lcall
mov
inc
aas
push
ror
addr16
test
sti
sti
push
dec
test
imul
inc
aas
or
add
imul
enter
jns
sti
cmc
sbb
int3
movsl
push
dec
das
popa
outsl
inc
xchg
test
push
mov
lret
std
popf
stos
cld
sbb
aam
cmp
add
push
rcl
mov
fsubl
stos
hlt
mov
cltd
popl
loope
cmp
in
les
enter
xor
les
mov
fnsave
dec
sub
jns
mov
dec
rolb
push
std
test
pop
or
xchg
js
jae
dec
push
das
lcall
xchg
les
rclb
pop
loop
push
dec
sub
call
hlt
inc
sub
sbb
ja
fisttps
leave
aas
push
in
daa
jno
fadd
lret
xchg
inc
push
lcall
out
and
push
jae
inc
iret
repz
and
sbb
mov
push
cs
jno
addr16
and
loope
cmp
adc
stc
jns
int3
or
push
rorb
cmp
loopne
and
lcall
imul
dec
popa
lods
mov
mov
ja
xor
or
loope
sub
mov
pop
mov
mov
push
mov
int3
sbb
jmp
aad
jno
bound
loop
add
daa
pushf
fs
shll
outsb
pusha
loope
and
sarb
ss
fcmove
adc
and
push
xchg
mov
orl
pop
stos
repnz
xchg
sub
jp
fstp
sub
dec
stos
in
je
vpackssdw
cmp
outsl
mov
sbb
add
hlt
pandn
inc
push
jge
pop
in
call
xor
xorl
movb
lahf
jns
dec
inc
iret
mov
xor
pop
imul
daa
movsb
mov
hlt
jg
testb
sbb
push
or
mov
mov
push
imul
cmpsl
push
jecxz
jb
cmc
ds
sub
cltd
adc
sub
lds
enter
pop
xchg
test
addr16
and
cmp
sahf
orl
pop
pop
xlat
mov
and
push
push
pop
in
adc
iret
bound
mov
ja
cld
dec
gs
cmc
sti
out
jae
cmpsb
cwtl
or
xchg
jo
pop
and
cmp
xor
call
jno
jl
test
pop
cmp
and
or
cmpsb
jo
into
mov
or
adc
pusha
add
jnp
sbb
push
popf
adc
or
insb
add
scas
mov
mov
lret
pop
cwtl
mov
nop
sbb
add
cs
cwtl
inc
repz
xor
stos
xchg
or
int3
xor
and
insb
mov
mov
adc
push
pop
xchg
mov
push
lret
pop
jle
orl
mov
jb
scas
leave
mov
mov
rol
arpl
sub
sbb
fwait
cmp
pop
xchg
jae
sbb
add
jl
jmp
xlat
push
mov
sub
into
rol
adc
jle
rcrb
dec
cmp
cmp
addb
pop
dec
jno
jecxz
mov
or
arpl
clc
fcmovu
les
jge
mov
inc
js
incb
sub
insb
sbb
add
ljmp
mov
popf
rclb
jb
pop
stos
jge
aad
sti
stc
pop
push
inc
mov
xchg
sbb
or
jbe
mov
xor
push
dec
or
pusha
shrl
sub
in
mov
inc
mov
fistps
jg
mov
mov
xchg
pop
je
loop
fisubrl
xor
push
pop
sub
arpl
pop
or
int3
pop
xorb
push
mov
int3
jle
fcoms
push
sti
mov
in
push
not
sbb
lea
or
dec
pushf
add
jmp
pop
inc
push
in
add
scas
in
pop
adc
mov
pop
jnp
jmp
stos
sbb
xchg
jno
fs
fdivr
and
bound
lock
lret
or
mov
ret
dec
add
pop
and
arpl
or
test
jecxz
or
out
addr16
fisttps
and
dec
pop
push
cmp
push
jl
loopne
sbb
hlt
inc
jno
cmp
out
sbb
jnp
sbb
jp
mov
cmpsl
imul
and
jmp
pop
sub
shl
adc
mov
das
jbe
int3
mov
push
sbb
popa
mov
outsl
sub
or
popa
subb
repz
inc
mov
cmp
add
mov
adc
sti
sub
or
mov
vmovss
in
out
into
or
mov
jb
pop
xor
lret
lock
outsl
cmp
cmpsl
pop
fiaddl
xor
add
xchg
les
sti
clc
fdivrp
inc
ja
push
jae
ljmp
cmp
rcll
ret
adc
test
idivl
lret
sbb
pop
push
scas
inc
jle
lds
shll
data16
movsl
repz
movsl
lcall
rorl
and
out
dec
jae
into
fdivr
insl
cmpsb
push
xor
jno
mov
movsb
mov
push
add
adc
fiadds
out
cld
xlat
pop
pop
vmwrite
sbb
mov
jbe
pop
movsb
xlat
fsubl
or
gs
fstpt
sbb
stos
outsl
xchg
mov
xor
mov
sbb
int3
loop
mov
fwait
push
js
add
stos
and
pop
sbb
pop
add
inc
in
hlt
cmp
sub
leave
push
scas
add
fs
icebp
sarb
in
push
cltd
cmp
pop
xor
cmp
push
jle
sbb
push
sub
call
fildl
orb
xchg
jnp
jno
adc
sarl
dec
repz
mov
outsl
xchg
and
ds
outsl
sbb
push
sub
js
push
mov
inc
in
lcall
mov
out
mov
bound
pushf
aam
mov
sub
sub
ds
out
pop
aaa
ficoms
dec
pusha
or
mov
leave
cmpsb
push
push
iret
mov
and
and
hlt
or
inc
mov
jo
mov
jae
stos
or
inc
jno
jmp
push
loop
mov
fnstsw
or
in
cmc
repnz
mov
sarl
shlb
jnp
rcl
pusha
jae
aaa
pushf
mov
pushf
xor
ret
mov
push
lods
or
ror
leave
push
push
adc
in
enter
push
add
dec
mov
ds
dec
pop
icebp
ret
in
addr16
leave
arpl
pop
loopne
mov
lds
ss
jg
iret
call
mov
inc
cmp
movsl
mov
shll
add
sahf
jmp
dec
sub
shl
mov
sbb
sub
jl
or
js
arpl
xchg
repnz
loope
loop
jbe
or
gs
ret
jl
sbb
jnp
push
dec
ja
dec
xchg
ficomps
pop
xchg
ljmp
int3
pop
sbb
call
jae
push
or
jmp
xchg
daa
insl
mov
mov
push
mov
push
or
loopne
sbb
add
sbb
mov
jmp
test
push
imul
addl
jge
xor
or
dec
push
cmpsb
dec
stos
fsubl
add
cmp
xchg
mov
cmp
push
pop
test
jmp
jns
sbb
sbb
or
out
hlt
lret
or
jg
or
jnp
pop
lods
mov
push
adc
add
rep
xchg
sahf
js
sub
cltd
dec
jmp
push
stos
ror
and
pop
cmc
scas
stos
fcomip
inc
shll
and
and
cmp
jle
xor
hlt
jns
test
fnstcw
stos
das
lcall
enter
dec
out
mov
icebp
cmp
sub
pop
cmp
adc
dec
jnp
hlt
push
rol
and
lcall
push
mov
sbb
jbe
daa
pop
or
mov
mov
pop
sub
pop
mov
shlb
mov
cmp
popf
dec
sub
sbbl
aam
and
jne
shl
add
aad
ja
sbb
dec
and
stos
cmc
xor
pop
push
push
shlb
xor
in
xchg
loopne
adc
outsl
bound
adc
addr16
and
cmp
cld
gs
mov
mov
in
nop
mov
loope
push
inc
sub
mov
roll
aad
lahf
push
jmp
movsb
xor
jnp
outsb
pushf
mov
sub
fsts
lret
jg
xchg
add
or
mov
cmpsl
mov
dec
or
push
add
mov
xor
pop
or
bound
cmp
cmp
sbb
xchg
dec
cmp
xor
and
mov
fisubl
pop
ja
mov
pop
mov
push
mov
xchg
pop
int
jl
or
xor
push
cmp
lds
mov
cltd
leave
rcrb
mov
push
incl
in
cmp
cmp
cmp
leave
xor
inc
xchg
clc
jge
push
cmp
jecxz
mov
popf
int3
ja
pusha
mov
xchg
and
pop
loop
aam
sub
ja
adc
mov
pop
cmpsl
xor
filds
dec
jmp
xchg
dec
leave
adc
adc
fstps
dec
test
inc
stc
and
mov
xlat
stc
sbb
inc
sbb
mov
sbb
insb
jae
dec
jmp
stos
cwtl
sub
push
js
xor
ret
mov
imul
daa
mov
dec
add
aaa
push
mov
daa
nop
adc
aam
sub
arpl
pop
fldcw
xchg
mov
inc
mov
mov
cmp
shlb
mov
pop
das
cmp
mov
nop
dec
dec
clc
jg
cmp
pushf
mov
loope
add
xor
scas
enter
cmpl
sub
arpl
jecxz
stc
je
rorl
push
push
xchg
fdiv
lock
adc
adc
addl
mov
call
mov
xor
sahf
mov
or
xor
cld
popa
shr
xchg
fdivs
jmp
push
mov
or
orb
push
mov
jmp
leave
lcall
cmpsb
sub
push
mov
push
xchg
ljmp
cli
loop
sbb
push
xchg
push
gs
in
fisubl
fidivs
sbb
ret
jmp
fcoml
jnp
rcrl
jae
xor
negb
movsb
fidivrs
sub
ljmp
mov
mov
mov
inc
ret
movsb
mov
adc
xchg
mov
roll
in
mov
test
cmp
scas
jecxz
fistps
push
xor
mov
test
cmp
push
push
adc
pop
subl
out
pop
jnp
repnz
in
add
repz
ret
lods
pop
sub
js
sbb
in
int3
add
cmpl
fcoml
test
cltd
sbb
sbb
in
mov
push
pop
add
sahf
sub
xor
lock
sbb
push
clc
in
sub
inc
xchg
orl
mov
mov
cmp
hlt
pop
push
scas
mov
cmpsb
push
lret
push
stc
ror
or
xchg
or
cmc
sbb
add
insb
pop
cmp
cmp
mov
or
ds
jae
imul
jns
xor
sub
fidivs
lds
jb
pop
imul
dec
or
lahf
dec
mov
jne
cld
xchg
sub
xchg
mov
enter
push
jno
frstor
mov
pop
pop
xchg
jns
test
popf
fcmovne
push
xchg
lods
rolb
sub
pop
dec
adc
adc
mov
les
lds
dec
movsb
clc
scas
scas
repnz
pop
repz
add
ja
xchg
scas
pop
adc
in
sbbl
adc
hlt
nop
lea
cltd
mov
cmp
sti
repz
mov
sbb
inc
mov
int
aam
pusha
push
jecxz
sub
sbb
xor
mov
cmp
push
stc
insb
xchg
enter
ss
call
sub
mov
addr16
cmp
enter
mov
into
pop
adcl
xchg
xor
aad
stc
sub
ret
imul
dec
adc
mov
mov
out
imul
gs
sbb
pop
xchg
adc
loop
jl
push
or
les
xor
mov
xchg
jo
loop
in
adcb
mov
orl
adc
imul
adc
mov
aas
sarb
or
pusha
or
arpl
sti
adc
imul
leave
ret
sub
cmp
lahf
pushf
arpl
dec
xchg
mov
pop
into
and
rol
shl
adc
push
sahf
int
lods
leave
cmp
mov
inc
cld
pushf
scas
sbb
and
cmp
imul
les
xor
lea
mov
ljmp
in
ret
mov
rcr
jl
sbb
filds
mov
cmp
pusha
inc
pop
or
and
sbb
lock
out
imul
fs
lods
ret
dec
mov
repz
and
fstpl
pop
xorb
xchg
sbb
dec
js
rorl
loope
mulb
mov
jl
jne
mov
mov
xchg
adc
pusha
jo
in
xor
or
pop
mov
cmp
inc
mov
sub
mov
mov
insb
xor
dec
dec
xchg
aad
push
scas
add
adc
mov
xchg
insl
xor
cmpsl
mov
scas
int3
xchg
sbb
push
xchg
sub
repnz
push
cmp
sub
inc
sbb
jle
and
xor
stos
and
repnz
roll
jl
addr16
mov
xchg
mov
in
addr16
aaa
pop
jne
xor
pop
stos
push
cmpsb
incl
loopne
adc
daa
loopne
lret
movsb
dec
push
repnz
aad
rcll
mov
iret
lock
xchg
mov
arpl
cmc
jo
lods
mov
addl
lret
lock
les
lds
xchg
nop
les
les
mov
push
fs
pop
stc
push
add
push
xor
cmp
divb
sbb
aas
mov
sbbl
sub
push
sbb
mov
testl
mov
xchg
rcr
jp
xor
pop
cmpsb
inc
iret
adc
or
push
into
adc
xchg
hlt
mov
inc
jecxz
sbb
cmp
push
in
ret
xor
inc
and
mov
loope
adcb
jge
dec
in
jnp
xor
xchg
push
pop
mov
xor
or
xor
mov
fs
pop
dec
dec
std
inc
jge
pop
ss
adc
cmpsl
mov
cmp
les
mov
dec
jle
mov
sub
or
push
sub
sbb
ja
jb
cmc
std
mov
xchg
fwait
int
add
les
sahf
test
adc
rclb
inc
sub
or
sub
adc
and
sub
push
insb
fcmovne
movsb
mov
mov
repz
xor
xchg
dec
add
aad
loopne
dec
int3
test
daa
dec
add
sub
sarl
pop
inc
pusha
lock
data16
mov
mov
hlt
jbe
dec
lods
dec
lret
out
cmp
lods
pop
mov
push
dec
mov
jmp
shll
mov
movsl
cld
xchg
setns
subb
cmp
fsqrt
push
xor
push
xchg
pop
sbb
lret
push
sub
int
push
movsl
cmp
adc
ja
push
dec
or
icebp
cmp
mov
pop
xchg
mov
je
sbb
arpl
in
out
stos
inc
xchg
xchg
sub
jnp
test
mov
hlt
add
loopne
xlat
orb
sub
and
mov
sar
pop
lock
nop
cmp
fiadds
out
sbb
push
mov
dec
xor
xchg
mov
cmp
scas
pop
push
jno
ret
xor
test
cmp
jecxz,pt
bound
push
int
imul
push
and
repz
ljmp
mov
ss
xchg
insl
fcomps
push
mov
jp
les
xchg
test
scas
test
cmp
push
add
sub
insl
fs
pop
das
push
mov
pop
nop
test
add
adc
out
mov
inc
mov
ljmp
icebp
and
dec
pop
ss
inc
and
cwtl
or
mov
jne
mov
mov
sub
jle
loope
test
jbe
xchg
rorl
sub
mov
add
cmpb
movl
std
sbb
and
out
ja
div
in
scas
pushf
loop
and
pop
lahf
sbb
cmp
inc
and
inc
or
mov
popf
lods
mulb
mov
repz
jecxz
add
sahf
popf
pop
ret
add
out
mov
cld
js
pop
rcrw
add
sbb
sahf
sub
iret
shrl
mov
lods
aam
push
dec
inc
test
lock
inc
mov
lea
clc
sbb
and
fisttpll
xor
lcall
xchg
xchg
mov
int3
cmp
test
fs
adc
test
mov
inc
mov
in
insl
pop
imul
clc
cmpsb
jge
test
mov
xor
out
xchg
jmp
outsl
roll
push
ss
mov
mov
mov
dec
aad
test
jg
xchg
pop
jo
xchg
divl
pop
mov
sbb
cmpsl
sbb
std
xlat
mov
loope
std
imul
push
enter
ror
fs
loope
lahf
jecxz
addr16
push
dec
jp
in
lret
pop
pop
lcall
shlb
xor
add
movsl
das
repnz
das
or
xor
into
mov
inc
fcmovu
xor
adc
push
icebp
ret
sub
jl
or
call
jge
push
cwtl
xchg
xor
push
jno
lret
xor
sbbb
add
test
idivl
loopne
loop
mov
mov
mov
jae
mov
insb
xchg
pop
adc
aas
shrl
jmp
rol
pop
pop
inc
xor
pop
out
fnstsw
mov
stos
in
mov
data16
xchg
movsl
mov
cmp
fldcw
push
sbb
xchg
push
iret
ja
cmp
imul
or
push
push
inc
movsb
mov
add
pop
fiaddl
ds
enter
into
inc
in
pusha
stos
cmp
mov
lods
insb
scas
insb
cmp
sub
js
ret
add
xor
dec
les
inc
jno
mov
or
ja
gs
lea
mov
aas
outsl
das
les
dec
ret
mov
aaa
fists
add
mov
es
push
lahf
imul
jle
stc
popf
cmp
inc
data16
cmpsl
testl
or
sbb
xchg
mov
pop
cld
aam
xchg
jge
dec
je
sub
repnz
aam
pop
cltd
movsb
xchg
pop
mov
pop
xchg
sbb
lds
leave
xor
sti
mov
aad
and
addr16
add
jae
call
adc
or
std
movsl
shrb
imul
pop
inc
adc
popa
faddl
aas
jb
enter
lea
pop
ficoms
into
push
jmp
lea
sub
push
out
xlat
sub
xor
mov
sbb
mov
jbe
insb
das
lds
jae
fstps
pop
push
nop
cmp
addb
add
cld
pop
cli
fwait
loopne
lods
push
cmc
push
shrl
sti
popa
adc
sbb
loop
roll
jle
push
lret
ficompl
and
lret
sub
xor
cs
stc
lret
sub
mov
xchg
sub
inc
xchg
ficoml
js
cmovbe
mov
dec
jmp
mov
push
xlat
out
sub
js
mov
cmp
iret
xchg
inc
out
mov
lret
xchg
mov
fmull
ret
pop
aaa
mov
cmp
mov
cmpsl
jge
push
fstps
nop
inc
or
adc
sub
sub
sbbl
adc
sbb
or
pop
xor
sahf
xchg
or
fstpt
cmpsl
inc
add
arpl
lods
das
out
call
rorl
stos
cltd
xchg
aas
add
mov
adc
add
and
mov
and
add
aas
push
add
add
ljmp
pop
jno
and
insl
int
and
sbb
repnz
in
push
or
push
enter
jmp
nop
pop
ss
add
sub
cli
aam
adc
or
test
loope
xchg
or
sbb
cmp
jge
xor
lds
out
jp
popf
in
in
shrb
popf
mov
les
out
jne
loop
dec
repnz
pop
mov
sbb
imull
stc
pushw
ror
mov
jl
or
out
sub
outsb
mov
sar
mov
sahf
mov
aad
push
dec
movb
daa
stc
pop
xor
push
out
dec
or
icebp
jb
in
ret
loope
dec
cmp
test
repnz
es
sub
and
dec
loopne
out
pop
sbb
xchg
mov
mov
mov
adc
sub
icebp
mov
push
mov
cmp
hlt
mov
pop
add
ficoms
outsb
in
jle
add
clc
bound
cltd
mov
xchg
and
xchg
aad
daa
push
gs
add
rorl
inc
pusha
ja
int
or
mov
enter
idivl
xlat
mov
pop
fldt
mov
ret
lds
push
xor
lret
adc
pop
mov
loop
fistps
xor
mov
leave
cmpsb
mov
in
movsl
sarl
mov
dec
repnz
pushl
ret
add
aas
in
movsb
lods
or
or
mov
out
lock
mov
cs
xchg
pop
mov
pop
add
aam
mov
scas
inc
sahf
mov
ffree
and
repz
lret
sbb
in
push
and
lds
movsl
push
sti
in
test
jo
cli
dec
addb
mov
xorl
and
popf
icebp
add
mov
outsl
fidivrs
aaa
cmp
xchg
xor
dec
push
xchg
arpl
decl
fistl
pop
fdivrs
pop
mov
ss
icebp
and
fnstenv
adc
mov
div
mov
enter
fcompl
fwait
mov
inc
aad
in
popa
push
das
and
mov
sub
and
push
xor
cmp
pop
lds
aas
pop
loope
jp
hlt
fists
outsl
cmp
and
jp
dec
jns
int3
lcall
ja
shr
imull
xor
pop
xor
jle
in
daa
dec
wbinvd
xor
cmp
fldcw
imul
inc
lahf
in
inc
mov
mov
test
cld
pushl
pushf
clc
mov
shrb
or
lea
mov
icebp
cld
imul
xor
out
mov
idivl
push
push
xor
aaa
or
int3
test
jb
pop
mov
popa
sbb
lods
add
out
jle
mov
push
and
incl
fsubrl
lods
test
in
cltd
std
xchg
mov
cmc
and
scas
out
and
add
les
es
mov
cs
popf
push
and
xlat
push
loopne
in
and
and
sbb
rol
leave
movb
jns
mov
pop
inc
data16
popa
lods
pop
xchg
xchg
sbb
cmpsb
inc
in
push
cli
mov
pushl
test
mov
cmp
mov
repz
sub
inc
push
faddl
shll
shrl
adc
xchg
mov
sbb
xchg
pop
sub
ljmp
inc
mov
and
popa
push
push
cmpxchg
push
outsl
or
in
mov
mov
icebp
and
loopne
hlt
dec
cmpsl
stos
fwait
test
inc
aaa
push
out
add
cmc
test
pop
mov
not
sub
cli
add
push
xor
pop
pop
pop
cmp
mov
ljmp
shll
push
xchg
xor
scas
dec
add
sub
jle
lods
jae
pop
xor
movsl
fsubr
jnp
add
fwait
push
cmp
jp
adc
push
mov
push
xchg
je
sti
lea
push
into
push
test
loope
sub
inc
scas
jno
fwait
xor
and
pop
mov
inc
adc
add
push
lcall
and
mov
jle
pop
xor
ja
scas
cli
sbb
adc
push
ret
mov
add
and
imul
xchg
push
cwtl
adc
cld
arpl
add
or
push
icebp
fs
sti
ljmp
and
push
adc
ret
or
popa
aaa
roll
test
ret
lods
mov
push
mov
mov
mulb
pushf
jb
add
adc
add
out
add
fstpt
pop
imul
arpl
add
mov
xchg
mov
jle
sbb
insb
and
je
xchg
pop
mov
setbe
mov
pop
orl
and
sbb
pop
push
flds
sub
cs
mov
and
cs
ljmp
pop
mov
and
mov
aam
fcomps
adc
dec
jne
ja
lock
fadd
mov
stos
jno
inc
xorb
fimull
hlt
inc
adc
bnd
jns
pop
inc
pop
and
mov
mov
push
push
or
xor
cld
js
cltd
jg
mov
das
outsl
test
inc
or
mov
lds
enter
fisttps
dec
cmp
ja
pop
pushf
add
and
add
sbb
dec
add
mov
add
les
insl
ss
cld
sbb
aas
push
fidivl
mov
subl
cmp
mov
mov
adc
imul
sbb
xchg
pushf
in
dec
jns
lea
pop
fs
fwait
jbe
cmc
and
addr16
in
pop
push
pop
sbb
or
mov
pop
test
cwtl
hlt
jp
xchg
ficompl
jmp
jne
ja
sbb
xchg
mov
mov
or
sub
add
dec
lahf
adc
dec
push
stc
or
inc
pop
jnp
adc
xchg
movsl
imul
imulb
push
adc
subl
or
mov
aas
sbb
pop
lods
push
mov
push
mov
test
xchg
ss
pushf
cmp
jne
bound
sub
or
and
xchg
push
lret
cmc
call
in
cltd
and
push
lea
cli
push
xchg
nop
out
lods
or
fdivrs
scas
subl
cld
jmp
jo
aam
or
mov
pop
scas
pop
push
fisubs
or
das
roll
out
xchg
fcompl
mov
mov
and
sub
ja
sbb
fwait
mov
fisubrs
xor
filds
sti
in
jb
pop
movsb
pop
pop
sahf
inc
cli
imul
or
mov
ss
movsb
inc
ret
mov
hlt
jae
xchg
repz
outsl
or
xor
push
nop
test
inc
push
add
and
xchg
adc
or
dec
mov
mov
sbb
popa
mov
mov
sub
fisubl
adc
test
icebp
fucompp
mov
out
mov
mov
rcl
sbb
mov
mov
bnd
pushf
aaa
cmpsb
push
iret
mov
push
inc
sub
jo
jbe
xchg
aam
xchg
popf
pop
movd
lds
mov
xchg
adc
inc
jl
mov
and
mov
cmpsb
lret
rcr
and
shlb
test
popf
dec
lret
cmc
jp
pusha
lret
xchg
shlb
hlt
int3
or
pop
sub
push
dec
pop
jne
dec
shl
sbb
xor
adc
sbb
cmp
jp
sti
xchg
dec
mov
outsl
pop
push
loopne
repnz
dec
xlat
in
mov
nop
fnstsw
mov
jmp
mov
js
pop
push
aaa
push
lahf
rclb
add
sbb
mov
testb
push
xchg
sbb
xchg
lods
inc
pusha
lahf
es
pop
cli
mov
jo
popf
add
mov
aad
ret
lds
sbb
in
aaa
nop
lods
or
test
rcrb
out
fs
sbb
adc
add
cmp
ds
xchg
hlt
scas
mov
mov
inc
add
dec
shll
cmp
pop
dec
aas
cmc
or
cmp
push
mov
lods
int
sub
ss
push
mov
dec
fyl2x
aam
mov
addl
jno
pop
int
outsl
push
push
adc
cmp
movsb
lods
cmp
cmpsl
cltd
pop
xor
xchg
inc
pop
dec
pusha
outsl
sahf
rorb
mov
adc
dec
aas
xchg
ret
orl
mov
mov
jno
adc
or
xlat
cmp
fwait
subl
mov
jb
insl
sbb
mov
push
rcrl
jge
adc
push
xor
lea
mov
adc
mov
ja
hlt
mov
pop
jns
cmp
cmc
push
mov
dec
mov
pop
dec
mov
imul
dec
ret
not
xor
movsl
aam
bound
pop
add
xchg
cmp
adc
aas
in
out
push
imul
loope
jecxz
ds
jnp
xor
or
add
loopne
sub
scas
inc
sbb
icebp
test
outsb
sbb
and
jns
sub
cmp
movsb
cmp
rcll
stos
inc
imul
hlt
xor
dec
xchg
shrl
push
pop
push
addl
or
mov
inc
and
frstor
outsb
pop
fbld
out
push
sub
jg
mov
dec
mov
push
movsl
jae
mov
jae
xchg
or
aaa
fdivrs
popa
rcll
das
inc
push
push
mov
inc
shl
jp
xchg
aam
ret
dec
inc
push
push
or
mov
mov
jmp
sub
cwtl
inc
shlb
pmuludq
mov
adc
and
push
inc
xchg
sahf
and
push
cmp
out
sbb
fildl
mov
aam
mov
dec
mov
mov
lahf
cmp
addr16
cmpsl
mov
jl
sub
lret
sahf
into
testl
or
adc
sbb
rclb
subb
call
jbe
loope
jg
dec
mov
out
aaa
adc
hlt
pop
test
movsl
adc
and
ror
pop
jp
int
cmpb
pusha
sub
inc
loop
cmp
sub
test
sub
adc
loope
dec
je
enter
dec
or
cmp
and
cltd
xchg
pop
nop
adc
sub
cs
fisttps
add
push
dec
inc
call
dec
ret
std
xor
lods
and
jo
cld
sti
inc
mov
push
mov
jns
and
mov
jecxz
xor
inc
dec
adc
dec
stos
pusha
fiaddl
ret
les
inc
movsl
orb
cmpsb
jmp
leave
js
jge
add
inc
mov
int
sub
push
dec
push
clc
mov
lahf
mov
mov
push
mov
pop
xor
dec
lds
imul
or
arpl
jl
insl
push
pop
addr16
inc
int
jp
ret
pop
es
or
lods
cmpsl
xor
pop
cs
icebp
hlt
dec
xchg
loope
or
das
xor
repz
sub
mov
divl
inc
sti
or
xor
push
jbe
inc
jmp
jp
and
orl
lcall
das
sarb
movsl
arpl
dec
inc
mov
aad
loop
dec
lcall
xor
das
ret
pop
lods
imul
and
jg
fidivl
mov
adc
inc
sub
outsl
jno
in
xlat
fistps
adc
mov
inc
jmp
mov
enter
cli
adc
mov
jl
pop
cmp
xchg
pop
jne
mov
int3
sarb
cmp
shr
sbb
outsl
cmp
inc
xchg
sbb
fsts
jnp
sub
movd
pop
call
in
sahf
nop
mov
push
into
pop
add
xchg
bound
movsl
aas
int
mov
pop
cmp
test
push
out
je
push
xchg
das
addr16
push
rcr
pop
out
lock
adc
out
sub
in
add
jo
add
jecxz
pop
sbb
adc
push
sub
and
inc
lret
or
jle
mov
nop
fsubrl
orb
xor
repz
xchg
out
cli
cli
ljmp
adc
ss
xor
out
inc
adc
adc
sbb
add
mov
lret
out
sbb
inc
mov
movsl
movsb
cmp
outsl
dec
adc
jle
mov
jp
mov
cmp
imul
push
jns
add
movsb
fxtract
xlat
sub
push
sbb
push
pop
or
bound
jns
lods
cmp
pop
and
mov
and
mov
xchg
push
xchg
stos
stc
jae
out
pop
ljmp
iret
lahf
int
mov
mov
cmpsl
mov
out
jl
or
adc
dec
xchg
inc
mov
push
out
push
xchg
dec
es
ds
outsb
popa
mov
cmpl
outsb
mov
push
inc
cmp
inc
sub
pop
xor
into
sub
or
sbb
sarl
scas
adc
repnz
lods
es
lea
mov
xor
shlb
mov
das
sbb
cmp
cmc
shll
std
repz
xchg
pushf
aad
mov
fiaddl
jbe
dec
adc
push
pop
dec
andb
loop
lahf
add
inc
mov
lds
hlt
pushf
addr16
dec
xor
pop
push
fidivrs
lods
xor
cmp
outsb
xor
lret
lock
mov
sub
sbb
sub
fs
push
or
and
push
xor
mov
icebp
iret
jns
and
in
scas
push
jg
or
lea
je
pop
mov
cmc
aas
sub
out
int3
push
lcall
dec
push
mov
or
mov
pop
out
inc
lahf
je
adc
test
xor
fisubs
fisttpl
sub
mov
push
mov
test
int
test
ds
ret
push
jge
je
insl
daa
jmp
lods
sbb
pusha
inc
mov
rcll
nop
fs
shrl
sbb
xchg
in
icebp
cmc
out
pop
lock
insl
push
andl
aam
sub
stos
repz
sub
imul
inc
mov
dec
repnz
pusha
cmpb
mov
dec
scas
dec
or
ficoml
mov
pop
dec
lret
test
sbb
sbb
push
inc
mov
cltd
jae
jbe
and
out
sub
xchg
and
mov
fs
jns
sahf
mov
lret
clc
xchg
clc
push
xor
testl
pushf
mov
arpl
imul
or
push
push
xor
popa
inc
add
sbb
sub
push
cs
xchg
lcall
add
aas
shrb
rcll
ret
push
jl
sbb
pop
pop
and
lds
xor
dec
xchg
mov
jbe
movsb
scas
xchg
push
mov
test
shll
sub
fs
cmp
pop
shlb
mov
loope
pop
cmp
adc
pop
shrb
jo
jns
movsb
dec
mov
je
sub
test
inc
adc
adc
in
jle
and
lds
or
clc
push
inc
inc
cld
sbb
xor
fidivrs
and
xchg
aaa
scas
call
and
stc
orb
testl
cmp
lea
out
inc
cmp
pop
in
jb
adcl
enter
dec
cmpsl
jb
push
jl
sub
sub
imul
stos
scas
in
sbb
lea
xlat
add
sbb
jmp
out
inc
jge
in
xor
fistpl
adc
pop
dec
out
out
dec
xchg
cmp
mov
inc
pop
cmp
imulb
sub
or
jg
stc
cmpsb
rcl
or
mov
xchg
insl
insl
daa
lahf
mov
hlt
test
dec
pop
bound
mov
add
out
cli
push
aad
mov
inc
xor
jmp
cmp
pop
ret
dec
cli
push
xchg
sub
mov
sub
add
loop
lock
fwait
js
or
xchg
mov
mov
mov
test
push
xchg
xchg
cmp
xchg
in
inc
push
mov
loope
inc
out
stos
fistl
test
jmp
pop
ret
clc
add
push
fwait
push
clc
aam
xor
mov
dec
xor
xchg
mov
jns
mov
jle
jb
lahf
lcall
add
sub
adc
xchg
xchg
pop
inc
add
lcall
lret
outsb
jbe
mov
xor
mov
pop
std
cmp
ds
push
das
popa
xchg
add
and
xchg
pop
sbb
nop
pop
sbb
pushl
and
xor
lea
js
adc
jo,pt
insl
xchg
dec
sbb
les
dec
dec
jmp
sbb
ja
cmpb
test
xor
push
inc
push
mov
fldenv
push
clc
fbstp
daa
xor
jecxz
lods
std
shrb
inc
in
sahf
jo
subb
or
or
andps
aad
push
fwait
pop
jmp
sbb
into
adc
mov
stos
jle
inc
cwtl
movsl
cmp
out
and
ret
adc
pop
stc
adc
jmp
mov
add
dec
stos
fisttpl
jnp
or
das
sbb
ror
jne
add
mov
dec
int3
jns
adc
lret
in
push
in
mov
adc
fcoms
inc
lock
pop
xchg
jno
in
cmp
mov
dec
xor
call
mov
mov
xor
call
and
cmp
fwait
jnp
out
popa
and
cld
cs
aad
scas
loope
jl
push
xchg
iret
cwtl
add
jle
enter
es
insb
dec
lret
std
sti
adc
cmp
ljmp
jle
sarl
fiaddl
jno
jg
aaa
cmpsb
mov
shll
in
inc
pop
sub
mov
stos
sbb
xor
ficomps
xor
popf
fdivrl
pop
xor
inc
xchg
rcl
mov
jp
or
mov
push
xor
sbb
pop
add
sub
cmp
adc
fstpt
test
roll
out
jmp
fsubrs
dec
pop
add
or
sarl
mov
cli
in
or
lods
push
push
into
jge
ror
sub
scas
fidivl
dec
arpl
ror
scas
add
lock
lahf
add
add
repz
mov
sbb
pop
pop
fldt
js
orl
push
or
insb
clc
addr16
add
popf
repnz
and
pop
aas
inc
pop
lds
bound
call
cmp
or
fwait
stos
xorps
les
inc
jecxz
popf
addl
cwtl
sbbl
xor
das
je
sarl
lds
or
jp
push
sbb
pop
nop
adc
lods
add
test
mov
sbbl
loop
add
out
sbb
mov
dec
popf
xchg
lret
xchg
jnp
loopne
repnz
xchg
sbb
aad
fidivrl
jmp
lds
das
das
fldl
sub
mov
add
cmp
fstps
pop
pop
add
dec
mov
cltd
int3
xor
xchg
hlt
xchg
xchg
mov
dec
call
test
add
inc
dec
cmp
or
int3
inc
dec
mov
jmp
mov
movsl
xchg
out
aas
in
cld
and
movsb
iret
out
fs
jl
and
inc
dec
imul
clc
pop
push
or
dec
dec
lret
stos
adc
fisubrl
loop
not
popf
pop
pop
hlt
mov
movsb
mov
jno
insb
ja
dec
iret
fs
sahf
aaa
test
xor
cwtl
inc
add
repnz
sbb
ror
out
push
rcl
jmp
mov
enter
fbstp
pop
mov
bound
jp
fistl
xchg
inc
push
leave
mov
push
imulb
xor
enter
stos
mov
jno
movsb
out
es
push
push
inc
adc
hlt
test
mov
int3
or
dec
cmc
scas
jge
sbb
fs
push
fdivrl
jecxz
push
jle
jnp
inc
dec
push
mov
mov
or
push
pop
sub
mov
and
xor
pop
sti
and
push
insb
add
mov
cmpsb
lods
rcrl
clc
dec
pop
iret
mov
mov
frstor
stos
lods
mov
push
cs
push
push
lcall
cmp
shlb
pop
out
jmp
int
sbb
pop
mov
cmp
rorl
push
iret
mov
inc
mov
cmc
loop
xchg
cwtl
mov
push
imul
dec
push
cmp
jecxz
cmp
add
push
dec
subl
cltd
mov
into
repz
xor
adc
sbb
movsb
arpl
dec
cmp
inc
test
or
push
lahf
cmp
inc
mov
aaa
push
aad
cmpsl
movsl
push
shrl
mov
and
push
call
xchg
mov
arpl
push
jbe
jmp
jno
loope
pushf
xor
outsl
loopne
fnsave
mov
rolb
stc
xchg
jmp
repz
enter
lahf
jbe
das
orl
dec
mov
lret
fisttpl
test
xchg
in
jns
push
mov
divb
sbb
pop
dec
call
jbe
push
out
xchg
enter
pop
cmp
mov
mov
out
mov
mov
mov
sbb
subb
cmpsb
cwtl
ficomps
cmp
pop
cmp
inc
leave
not
inc
fistl
mov
roll
aam
mov
pop
std
out
cld
or
xchg
in
fisubrs
xor
aad
jnp
lret
lods
or
aaa
xchg
dec
jecxz
adc
movsl
push
inc
pusha
mov
subl
psrld
insb
test
into
mov
cmp
jmp
sarl
inc
mov
mov
loope
test
add
mov
daa
add
stc
enter
sub
nop
dec
popa
cwtl
fldl
movsb
lret
xchg
sbb
sub
fidivrl
dec
mov
jnp
popa
add
fsubrp
mov
adcb
ja
xor
push
xchg
jae
sar
fcompl
int
test
xor
cmpsl
sub
add
pusha
lret
jecxz
pop
cltd
rcrb
and
and
mov
mov
in
xchg
fisttpll
arpl
iret
xchg
stos
inc
mov
mov
adc
jae
sahf
fdivrs
shrl
mov
mov
xchg
sub
xchg
cmc
ds
popf
mov
imull
mov
pushf
push
je
shll
xchg
mov
xchg
lret
jne
stos
pop
mov
lcall
push
loop
js
xchg
int3
sbb
je
dec
lahf
mov
pop
outsb
sub
das
lods
pusha
add
addl
inc
mov
aaa
lods
or
repnz
clc
sahf
jp
xchg
jbe
mov
mov
inc
daa
xchg
popa
insb
aad
mov
add
fidivrl
lods
push
inc
pop
pop
out
insl
add
roll
inc
or
or
outsl
and
inc
pop
add
mov
das
repz
adc
call
mov
push
ds
jno
std
ja
fdivrl
sbb
mov
fidivrl
lret
mov
and
aad
ds
pop
jmp
add
repz
popf
or
push
cld
sub
fcmovnb
push
cmp
dec
jp
mov
icebp
xor
fldenv
push
addr16
movsl
fs
add
outsl
mov
into
jl
leave
mov
test
fisttps
fwait
dec
cmp
rcrb
divb
jmp
mov
jne
lods
iret
pop
dec
js
add
andl
prefetcht1
push
sti
lods
int3
and
sub
pop
andl
xchg
aam
daa
inc
sub
mulb
subl
cmc
pop
lock
icebp
pushf
addb
cmp
pop
daa
test
push
sub
or
les
mov
cli
push
cmp
sarl
sbb
out
lret
loop
add
add
and
sbb
cs
aam
outsl
jno
insb
das
xor
stc
push
adc
js
and
xchg
inc
int3
mov
push
add
cli
aad
jp
jae
mov
dec
loope
ret
int
mov
out
mov
add
call
xor
or
sarl
mov
cwtl
mov
pop
mov
mov
andb
inc
stos
sub
popa
adcl
fwait
pop
xchg
cwtl
push
sub
stos
dec
subb
or
iret
or
adc
cmpsb
sbb
mov
inc
jae
push
pop
pop
add
mov
outsb
xchg
rclb
push
lret
roll
test
push
mov
decb
outsb
xchg
xchg
xchg
das
ss
out
les
adc
add
cli
push
cli
dec
add
idivl
in
mov
or
dec
sub
inc
sbb
mov
flds
leave
xor
shrl
shll
iret
mov
xor
add
jp
xchg
icebp
mov
clc
push
leave
out
xor
in
cmp
out
mov
or
test
mov
mov
lock
dec
push
add
pop
xor
shl
or
popa
sub
pop
lock
ret
insl
fsubrs
outsb
add
lret
push
mov
jecxz
arpl
inc
test
stos
popl
cmpsb
popl
loop
data16
cld
xor
dec
ljmp
loop
xor
mov
ljmp
sbb
in
popf
xchg
imul
loop
sub
jge
mov
push
jns
stc
daa
lcall
cltd
or
sub
or
loop
lahf
test
ja
add
ret
adc
push
or
daa
mov
test
sbb
xchg
rcrb
xchg
push
cmp
popa
mov
xchg
loop
push
push
dec
sub
outsl
push
xchg
add
mov
mov
push
fldln2
xchg
addr16
mov
sbbb
inc
push
fwait
mov
mov
das
dec
push
addr16
movsb
cli
sbb
out
dec
ret
jmp
clc
sub
in
pop
xchg
sar
popa
dec
sub
and
mov
subl
sbb
mov
pop
or
mov
lret
mov
mov
xchg
jmp
pop
lret
loopne
sahf
outsl
or
add
negb
mov
loop
push
data16
pushf
shrb
xchg
bnd
pushf
es
mov
popf
mov
std
xor
push
sub
icebp
shlb
push
mov
fldcw
out
or
inc
jle
inc
xor
mull
ds
xchg
xchg
sbb
sub
xchg
repnz
stc
pop
or
sbb
mov
lret
xchg
mov
dec
sub
rcrl
cltd
pop
jbe
jg
popa
sbb
ss
cltd
mov
push
and
fiadds
and
add
fistl
aaa
leave
lahf
mov
push
fldcw
je
fnstenv
adc
sbb
popa
mov
adc
pop
cmp
inc
jae
scas
and
mov
out
out
rep
dec
sub
loop
or
cmc
movsl
mov
adc
lods
or
mov
popa
or
xlat
mov
nop
das
jo
cmc
lahf
or
mov
mov
scas
push
pop
xchg
mov
aam
mov
lods
je
je
ljmp
mov
gs
in
bound
sbb
pop
inc
dec
pop
mov
sub
and
test
add
mov
lea
arpl
mov
inc
xchg
adc
scas
push
in
lahf
push
xchg
inc
pop
mov
sbbl
and
pop
cwtl
fstpl
add
sbb
into
sti
les
mov
pop
inc
pop
fmuls
sub
cmp
inc
mov
aas
dec
ds
mov
inc
mov
add
fwait
cltd
clc
lods
int
or
orl
sbb
fisubrl
cmc
pop
pop
cmpsb
pop
push
das
jb
jl
daa
jo
adc
inc
mov
mov
xchg
popa
xor
mov
pop
cmpsl
pop
int
shr
inc
mov
pop
jp
fldcw
mov
cmp
cmp
pop
jno
push
out
cmpl
hlt
cmpb
add
xchg
in
push
lcall
jnp
cmc
rorl
jo
mulb
pop
in
cmp
repz
lret
adc
sbb
call
lds
out
in
inc
cmpl
sbb
pop
orb
nop
lock
idiv
and
push
inc
jle
or
sub
les
inc
mov
xor
xchg
xchg
xor
imul
rolb
popf
ja
xor
repnz
aam
jmp
push
sbb
jmp
and
fldl
scas
or
mov
jb
pop
loop
add
xchg
test
roll
je
xchg
fs
cmc
mov
and
adc
adc
jg
mov
scas
or
lea
push
xchg
pusha
or
scas
stc
add
sub
lahf
push
push
cltd
int
sbb
mov
push
mov
movsb
dec
or
bound
push
shlb
push
sub
xchg
push
fwait
xchg
iret
inc
or
inc
in
daa
gs
mov
rol
cmp
sbb
in
loope
fwait
sarl
test
inc
push
es
and
jne
in
pop
push
scas
sbb
lods
jg
sbb
adc
fidivrs
pop
jnp
scas
je
cmpsl
sub
sub
xchg
lret
imulb
ret
xor
jmp
mov
fcompl
jecxz
dec
fsin
ret
aam
das
es
es
and
inc
int3
data16
add
mov
mov
ret
lods
mov
divl
shrl
mov
dec
cs
xchg
out
push
cli
lret
mov
movzbl
out
fistpl
push
test
pop
adc
jp
push
cmp
jnp
jl
inc
and
inc
and
push
iret
mov
jle
mov
in
mov
cmp
mov
cmpsl
andl
es
pop
das
push
pop
into
sbb
bound
jl
clc
call
inc
inc
or
xchg
adc
fstpt
mov
cmp
xlat
jecxz
ret
dec
or
out
in
inc
inc
jae
ja
pop
inc
in
leave
push
pop
ret
out
sbb
jb
mov
clc
pop
or
xor
out
out
rcr
dec
int3
cmp
cld
mov
imul
jge
jo
xor
pop
cwtl
jg
xor
repnz
jb
cli
mov
rolb
scas
and
pusha
pop
outsl
cmpsb
inc
rcll
pop
xlat
xor
sbb
popa
movsb
mov
sbb
pop
sbb
adc
and
insl
push
scas
or
mov
jecxz
pop
xchg
dec
sbb
sub
add
clc
dec
or
pop
mov
aaa
mov
and
jo
add
xchg
mov
jno
push
popa
xchg
mov
pop
jmp
sub
into
push
lcallw
lret
and
inc
sbb
in
mov
xchg
jle
aam
sti
rcrb
popa
movsl
xchg
dec
mov
roll
dec
inc
xor
jo
dec
das
mov
sub
cmc
cmpsl
cld
xor
mov
lods
sbb
test
mov
outsb
mov
adc
add
xchg
xor
scas
mov
inc
push
or
jno
inc
lds
xlat
inc
rcrb
mov
gs
dec
sub
lahf
cmc
inc
mov
pop
popaw
adc
repz
scas
outsb
imul
push
stos
dec
movsl
pop
cld
jo
or
xchg
pop
paddq
inc
nop
inc
cltd
bound
iret
pusha
mov
sub
in
jns
data16
fnstsw
mov
jae
int
insl
cld
test
add
aad
jne
nop/reserved
in
enter
inc
lock
scas
mov
inc
repnz
testl
nop
xchg
sub
mov
lcall
mov
pop
mov
arpl
push
bnd
jnp
icebp
aaa
rol
negb
xchg
cltd
imul
shll
fistl
add
dec
pusha
cmp
push
outsb
sub
out
mov
or
sbb
leave
xor
ds
cmp
sub
movsl
cmpsb
mov
and
int3
xchg
imulb
inc
orl
nop
ss
cltd
cmp
push
adc
dec
add
shll
inc
xchg
push
leave
cltd
push
push
jnp
inc
mov
mov
xor
dec
xor
adc
in
jle
movsb
rorl
call
mov
arpl
pop
lahf
aas
xchg
lods
push
mov
mov
inc
inc
sub
mov
call
jb
pop
inc
mov
xchg
loope
pop
xchg
out
cltd
push
xchg
push
push
mov
xor
cmp
pop
movsl
pop
cmp
repz
xchg
cmp
push
not
pop
jmp
test
jecxz
cmp
push
fimuls
jmp
pop
shrd
rcrl
cltd
fwait
mov
lcall
cltd
inc
les
mov
ljmp
insl
xorb
inc
sbb
fidivs
aas
out
jecxz
push
shr
cld
fwait
stos
add
stc
xchg
xor
mov
push
jnp
repz
push
test
lods
push
xor
push
mov
sbb
push
outsb
sub
js
adc
sub
adc
dec
xchg
inc
lods
jns
cmp
add
sbb
sahf
into
cmp
jge
adc
lcall
sub
lods
push
addr16
arpl
stc
inc
xchg
test
mov
test
inc
sahf
adc
out
repnz
mov
daa
inc
mov
loopne
scas
mov
xchg
jp
in
std
aaa
sub
mov
push
push
xor
arpl
inc
dec
popa
aaa
add
dec
and
dec
popf
or
rclb
std
xchg
and
sbb
ss
xor
xor
jmp
in
adc
sbb
ret
xchg
jns
aaa
test
sbb
push
fcmove
lcall
subl
jmp
adc
bound
mov
insb
cmp
cmp
outsb
std
push
jns
aad
jge
fisubl
not
and
pop
popf
jmp
xchg
jp
cld
mov
arpl
jae
repz
add
xchg
cmp
xchg
xchg
or
mov
and
sarb
fldl
xchg
dec
repnz
insb
test
xor
dec
xor
xchg
mov
inc
pop
inc
fwait
jno
add
inc
call
scas
mov
mov
mov
mov
mov
push
adc
iret
jns
push
sub
and
bound
call
jne
dec
movsl
ffreep
out
test
or
mov
push
in
xor
push
mov
cs
pushf
test
and
adc
lcall
adc
xchg
pop
mov
and
jge
stos
sbb
repnz
xchg
data16
adc
dec
xor
xchg
in
repz
mov
dec
sbb
sbb
insb
je
lret
mov
stos
cmpsb
adc
inc
jns
jecxz
icebp
jnp
pop
add
jge
pop
pop
dec
in
lcall
into
rcrl
mov
orb
inc
mov
lods
adc
sub
lods
sbb
fldenv
mov
cmp
outsb
xchg
arpl
inc
jecxz
xchg
movsb
andb
jmp
add
out
ds
mov
out
lods
inc
out
pop
xchg
rcrl
and
xchg
movsb
cmpsl
jb
inc
xchg
mov
das
mov
add
sbb
les
js
ret
bound
cmp
arpl
adc
in
cmp
hlt
test
mov
loope
outsl
int3
cmpsl
data16
mov
dec
sbb
xor
mov
pop
push
add
loope
push
push
xchg
icebp
pop
call
push
mov
or
dec
push
jecxz
and
mov
sahf
cmp
aaa
jle
sub
sahf
enter
jno
test
pop
rcll
into
push
add
inc
jbe
mov
iret
mov
sub
add
mov
lods
mov
test
pop
push
xor
sub
inc
aad
std
pop
push
jbe
lcall
test
outsl
jl
pop
xchg
das
out
mov
ljmp
xor
sub
jmp
jp
pop
and
jecxz
mov
mov
std
cmc
leave
xor
adc
out
mov
ss
or
mov
addr16
xchg
ret
lcall
cmp
jae
insl
jp
loopne
add
cmp
rcl
imul
mov
es
pop
sub
jmp
cmp
inc
cmp
lea
fs
lods
sub
mov
push
pop
and
or
mov
jbe
cs
cwtl
insl
add
mov
aam
jl
xchg
pop
test
jo
rol
cmp
cmp
push
lea
lahf
mov
jmp
ficoml
mov
movsb
iret
daa
adc
int
jns
sub
hlt
sbb
cmp
lret
out
or
mov
fwait
repnz
movsl
cmp
mov
adc
sub
inc
js
enter
mov
insl
pop
add
jmp
sub
dec
add
lods
loope
scas
jl
jg
sbb
in
jo
imul
fldcw
push
sbb
inc
pop
sub
xor
in
sbb
fdivp
xchg
mov
lea
add
shrl
lahf
shl
mov
cmp
xor
sub
lcall
add
shl
inc
push
loope
mov
mov
repnz
or
ss
cmp
push
arpl
std
test
scas
aaa
inc
lea
xchg
mov
mov
inc
pop
mov
push
sub
mulb
js
pop
mov
adc
call
leave
setg
add
jle
pusha
sahf
pop
movsl
inc
jno
fmuls
mov
push
adc
push
daa
repnz
jl
adc
mov
pop
cmpsl
jp
scas
cmp
icebp
lea
inc
push
movsl
mov
xor
outsl
mov
mov
xor
lret
and
add
push
sbb
nop
ficoml
xor
lret
int
pop
fucom
mov
push
icebp
pop
loope
mov
pop
push
in
or
mov
adc
add
xor
inc
sbb
into
lea
xchg
adcb
cmp
test
outsl
repz
xchg
arpl
mov
dec
std
fildll
or
cmp
lods
push
pop
lock
mov
xchg
frstor
xor
lods
mov
sub
xor
fnstcw
xor
adc
push
mov
add
out
sbb
mov
xchg
adc
sub
call
sahf
stos
icebp
or
add
sub
xor
or
jmp
cmp
inc
mov
pusha
xor
jmp
inc
push
mov
and
out
fwait
mov
cmp
cld
stc
rorb
push
lahf
in
push
pusha
dec
rclb
dec
inc
jl
mov
fwait
aad
mov
lods
sub
cmp
mov
pop
mov
data16
cmp
ffreep
insl
adc
nopl
das
lahf
push
pop
leave
ljmp
fcomps
sub
mull
stos
xor
mov
jp
fsubs
adc
or
push
ja
sub
fdivl
xchg
sbb
insl
lea
pop
ss
gs
jno
cmp
jp
nop
push
lret
add
rorb
dec
xchg
in
cld
pusha
scas
xchg
nop
shr
sarb
test
insb
ficoml
mov
ffreep
icebp
iret
repnz
ja
jmp
and
xor
add
cmp
loope
dec
pushf
setns
pop
sti
dec
loope
and
fnclex
push
mov
aaa
stos
jge
in
mov
jo
mov
dec
mov
repnz
insb
add
add
lcall
mov
int
test
daa
out
fisttps
in
mov
mov
mov
jp
fnsave
dec
dec
dec
xor
or
jmp
adc
ss
pop
inc
int
mov
jae
out
mov
in
add
cmp
mov
cmp
fcomps
and
loop
xor
ds
sbbl
pop
mov
lea
dec
dec
sbb
cmp
int3
insl
mov
mov
fmulp
imul
sub
jne
or
jge
sub
das
push
in
xor
ss
push
push
cmp
in
nop
mov
std
ret
jno
sbb
push
cmp
lods
inc
js
fs
push
leave
jno
or
fwait
adc
sti
ds
gs
mov
mov
fidivs
adc
sbb
push
xchg
bound
push
sub
cmp
mov
aad
call
movsl
jmp
lds
xchg
jo
xlat
data16
sub
xchg
lret
jge
lret
hlt
lret
sub
jmp
lds
cmp
sub
mov
jb
add
mov
inc
mov
movsl
repz
jnp
xor
rcl
jno
xchg
fmuls
mov
and
or
leave
je
pop
mov
sub
cmp
dec
scas
out
jg
cmp
insl
decl
add
enter
int
add
sbb
faddp
mov
scas
ja
fistl
ffreep
xchg
xor
cld
pop
pop
pop
inc
and
pop
dec
fs
data16
popf
xlat
dec
out
cmp
outsb
jnp
cmp
xchg
fcompl
add
clc
sub
fstpt
jecxz
addl
test
push
xchg
dec
inc
mov
int
mov
sbb
or
inc
and
inc
fwait
enter
int3
pop
sbb
nop
das
popa
or
xorl
jnp
jp
dec
ret
cltd
mov
push
and
outsl
push
or
leave
clc
aaa
cmpsl
mov
and
roll
adc
mov
andb
mov
int
xchg
sub
push
or
in
nop
movsl
hlt
imul
xor
in
cmpsl
pop
push
sub
jbe
sbb
addr16
jmp
sub
xor
movsl
sahf
in
dec
fimuls
lret
pop
dec
mov
dec
sbb
int
mov
rol
in
mov
inc
sahf
popa
pop
jbe
insl
xor
subb
movb
adc
or
mov
inc
mov
lea
bound
pop
pop
xor
dec
repz
inc
sub
pop
add
mov
aas
pop
jb
jo
jns
sbb
lock
mov
shlb
lds
push
push
orb
pop
stos
xor
sti
pop
xor
fnstenv
or
lea
ret
push
add
subps
add
andb
mov
xlat
lock
mov
mov
inc
aad
mov
clc
xchg
adc
inc
jecxz
scas
and
mov
scas
mov
test
sarb
mov
jno
inc
cs
fstps
dec
in
sbbb
mov
dec
std
das
mov
pop
mull
sti
cmpsl
rcrl
xor
mov
test
inc
out
mov
xchg
addr16
pusha
imull
movsb
cs
sub
in
scas
jbe
or
jle
mov
fldt
lcall
mov
int3
push
sub
cmc
cmp
sub
ss
pop
daa
jle
popa
rolb
adc
mov
jp
push
xor
inc
lahf
nop
bound
lds
cltd
or
jns
stos
sbb
lret
mov
scas
xchg
inc
fiadds
inc
arpl
jns
int3
shll
ljmp
xor
lock
dec
fldenv
and
add
cmp
stos
repnz
mov
inc
push
sbb
testb
inc
mov
pusha
enter
aad
sub
jb
fnstsw
jmp
adcb
inc
aam
or
cmp
sti
jp
mov
jp
mov
dec
xchg
in
cmpsb
iret
aad
out
fistpl
xor
sbb
adc
adc
inc
mov
xchg
sub
add
int3
jle
xchg
jl
iret
xchg
mov
movsl
ljmp
es
pop
add
or
mov
push
test
mov
dec
pop
jns
sbb
mov
sbb
rcr
adc
into
scas
ss
mov
test
fsubl
xor
cmp
or
es
xchg
push
sbb
mov
das
xorl
adc
jg
jns
ljmp
fldl
fstps
shll
push
rcr
test
jbe
out
dec
cmp
shll
or
lea
and
cwtl
and
fidivs
xchg
test
hlt
adc
cmp
adc
xchg
cmc
cmpsb
iret
frstor
insl
mov
mov
and
mov
out
pop
outsw
and
inc
leave
loopne
icebp
adc
cltd
test
xorl
xchg
and
add
xchg
jnp
dec
adc
xor
add
push
xor
mov
nop
push
adc
mov
in
inc
and
inc
or
insb
mov
call
jo
cmp
push
pushf
jns
movsl
xchg
rcrb
sbb
ja
jno
mov
filds
aaa
dec
xchg
insl
aad
xchg
jns
int
les
ss
xor
in
rcl
jne
jecxz
cwtl
in
fldl
jmp
int
mov
int
outsb
xchg
leave
ja
aaa
imul
aas
in
dec
mov
sub
and
sahf
rol
les
adc
push
xchg
adc
push
and
sbb
mov
aas
jb
cs
scas
or
test
adc
and
leave
outsb
pop
dec
add
cwtl
sbb
adc
lcall
push
sbb
jg
popa
cmp
fisttpl
inc
ror
xor
in
pushf
cmp
mov
iret
xchg
repnz
mov
clc
ja
inc
adc
and
iret
mov
cli
xor
sbb
bound
in
xchg
push
pop
adc
mov
cmp
dec
pusha
sub
or
out
rorl
es
pop
mov
mov
cld
pusha
outsb
sti
imul
cmpsb
sub
cmc
push
loop
mov
int3
scas
push
or
mov
push
fimull
pop
push
mov
sub
sub
xchg
adc
outsl
loop
rcll
mov
in
das
push
push
pop
dec
cmpsb
and
jl
rclb
in
xor
fistps
stc
and
xor
push
adc
clc
mov
popf
xor
and
addb
dec
dec
push
xor
test
mov
push
mov
cltd
js
jb
mov
mov
adc
fisubrl
pusha
push
jl
mov
lods
nop
lods
adc
inc
mov
repz
enter
inc
aam
mov
push
jae
jecxz
test
std
and
in
add
nop
fcoms
test
or
adc
out
jle,pt
mov
sub
arpl
inc
jg
cmp
xchg
pop
push
fdiv
mov
cmc
in
dec
xchg
insb
into
add
push
inc
dec
jne
jae
adc
sahf
bnd
adc
inc
xchg
push
and
testb
daa
shl
icebp
and
stos
jno
mov
inc
jno
push
adc
fisttpl
popa
lret
sub
ret
dec
and
mov
fwait
cwtl
and
sub
dec
cmp
xor
mov
xchg
sar
mov
stc
inc
xchg
out
pop
push
dec
mov
movsb
outsb
adc
mov
adc
scas
add
je
dec
jmp
loopne
pop
mov
or
ljmp
sbb
sbb
mov
or
pop
sbbl
pop
ljmp
int
and
sahf
dec
pop
cwtl
xchg
and
cwtl
fcmovnu
dec
or
add
sbb
lret
or
lock
cmp
adc
jecxz
jp
fnstenv
push
and
pop
mov
fcoms
push
lods
popa
mov
adc
inc
push
bound
dec
or
or
jp
mov
push
dec
cs
pop
popa
ret
arpl
js
push
mov
cli
and
dec
lods
add
icebp
iret
fistpl
lea
xor
xor
sbb
aas
push
push
mov
int
jns
in
dec
sub
lods
xlat
sbb
xor
xor
mov
dec
jb
es
mov
std
test
add
mov
lahf
xor
add
mov
mov
cmp
xchg
data16
aaa
inc
mov
add
fcmovnu
hlt
scas
aas
pop
pop
jnp
loop
jge,pt
mov
adc
cmpsl
push
adc
push
mov
ja
mov
mov
in
lods
and
xor
ljmp
sbb
pop
sahf
outsb
jb
scas
add
push
pop
xchg
xchg
loope
jae
xor
fcoml
mov
xchg
cmc
pushf
sub
js
xchg
jo
std
outsb
bound
ja
icebp
xchg
mov
aas
testb
pop
mov
pop
adc
lret
pushf
pop
pop
outsb
loop
das
jecxz
mov
cli
shrb
pop
int3
xchg
pop
dec
call
add
or
mov
popa
adc
das
test
pop
roll
stos
shll
jns
pop
sub
or
xchg
xor
imul
loope
jmp
mov
repnz
jmp
sbb
push
sub
cmp
iret
cmp
sahf
lcall
testl
jl
xchg
imul
hlt
push
imul
ret
lcall
mov
fwait
aam
add
pop
cmp
movsb
jmp
jnp
cmp
out
mov
mov
ds
rolb
push
xor
gs
loop
xor
fidivs
sarb
std
rcl
in
imul
pop
mov
enter
mov
xor
mov
xor
sub
in
mov
xor
and
rorb
push
in
insl
add
cmpsb
sbb
jge
sub
mov
addr16
inc
icebp
fadd
jl
jbe
enter
inc
das
dec
addr16
add
xor
in
lods
xor
iret
jo
and
rolb
aaa
cmpsl
cmp
pop
aad
cmpb
push
jge
lods
sahf
mov
lcall
xor
and
insb
cmp
ss
pushf
xchg
pop
sahf
rcrl
inc
mov
mov
bound
mov
jns
xchg
lods
fimuls
xor
fwait
mov
cmpsb
out
ja
cmp
or
bound
push
inc
ds
add
dec
dec
int
lcall
push
xor
jb
repz
pushf
pop
loopne
pop
movsb
dec
in
clc
dec
cmp
out
jecxz
sbb
ss
fcom
ret
repz
fwait
mov
add
push
and
push
data16
icebp
jo
mov
lods
jne
or
aad
push
mov
jge
repz
outsl
and
lcall
imul
dec
jns
xorl
push
xlat
push
shl
xlat
jno
out
out
mov
mov
mov
xchg
fildll
imul
add
stos
lock
lea
in
jbe
xor
hlt
cmc
sbb
nop
cwtl
pop
das
jg
pop
mov
out
test
sbb
or
fisttpl
adc
mov
je
jg
pop
xchg
and
push
lret
clc
push
sbb
or
repz
rol
in
test
push
jp
pop
clc
test
cmpsb
lock
fsubl
or
fidivl
pop
movsl
insl
push
in
dec
rclb
test
add
int
jnp
loope
outsb
or
stos
inc
sbb
xchg
ret
xchg
lea
in
and
add
add
sub
mov
sti
or
lods
and
dec
mov
xchg
adc
mov
mov
sbb
or
mov
sbbb
int
jg
sbb
in
scas
sbb
dec
call
cmp
movsl
in
mov
in
xor
lock
mov
rcrb
add
aam
xlat
sahf
push
mov
es
add
repnz
shrb
int3
cmpl
repnz
push
xor
jae
jge
out
push
rol
daa
xor
adc
push
outsb
mov
stc
fstl
hlt
xchg
push
add
into
jge
jno
movsb
pop
mov
xchg
add
pop
dec
daa
add
jne
and
inc
cmp
int
cmp
jle
mov
and
add
mov
push
jl
out
jno
sub
mov
aaa
adc
stos
icebp
inc
enter
xor
mov
dec
fisttps
aam
insb
outsl
push
pop
push
out
sbb
call
mov
sub
notl
pusha
fs
addr16
pop
add
cld
or
test
xor
outsb
push
loop
push
jnp
fs
jne
dec
xor
pop
lahf
jl
ret
push
cmpsl
int3
fsubrs
sahf
pop
push
dec
sbb
cmp
add
add
dec
movsl
xor
jbe,pn
jbe
fidivrl
inc
mov
and
sbb
and
pop
dec
aam
push
inc
jle
mov
pop
xchg
add
popf
in
andb
sbb
rcll
pop
stc
pop
or
and
dec
aaa
daa
arpl
xlat
and
push
mov
sub
pop
xchg
fldt
aam
jl
pop
std
push
and
les
sbb
fnstsw
ss
dec
push
xchg
scas
xchg
sbb
mov
sbb
xor
sbb
fistpl
mov
arpl
add
push
in
gs
jge
lahf
jno
sbb
enter
jo
xor
cmp
roll
mov
jno
gs
icebp
push
pop
add
imul
into
ja
sub
xorl
lahf
lret
adc
pop
mov
hlt
outsl
add
and
int3
push
mov
lret
mov
push
cmc
popa
loopne
ret
aam
mov
adc
fwait
sub
jnp
aaa
inc
dec
jecxz
inc
aam
test
xchg
nop
ljmp
jecxz
int
hlt
xor
and
mov
and
add
cmovge
lods
testb
sbb
add
mov
das
pop
cmpsl
lret
and
in
movsl
dec
mov
adc
test
mov
push
add
xchg
lods
js
ja
inc
adc
ljmp
pop
xchg
jb
sbb
push
and
cmp
lret
leave
pop
std
add
sub
mov
je
andb
sbb
adc
roll
cmpsb
jno
lds
xchg
mov
fwait
mov
push
or
and
or
std
adcl
xor
call
movsl
dec
icebp
daa
bound
mov
loop
outsb
or
aaa
imul
shrl
cltd
lahf
rcll
call
imul
pop
push
aam
mov
arpl
movsl
xchg
fisttps
mov
sbb
sub
sub
xorl
nop
sbbl
pop
out
scas
or
mov
sbb
pop
fs
xchg
cmp
jbe
cld
sarb
jl
inc
in
std
out
add
cmp
pop
push
icebp
push
and
mov
loope
push
cltd
add
mov
ja
jge
mov
and
popa
push
push
mov
dec
aam
fwait
xor
test
into
mov
and
sub
test
xchg
mov
cld
les
dec
dec
fidivl
sbbl
insb
pusha
pop
sti
sub
ret
sbb
fsubl
hlt
rol
lret
push
dec
sub
or
hlt
dec
ss
or
cld
loopne
divb
pop
loope
outsb
stos
jle
mov
dec
inc
cli
mov
shll
test
fnsave
movsl
xor
iret
pop
fs
sbb
cmpsb
daa
jbe
std
outsb
pop
pushf
add
insl
stos
add
scas
mov
xchg
xchg
xchg
addr16
dec
sbb
jae
jg
pop
je
ja
ret
cmp
scas
xchg
movsl
dec
fldt
xchg
jge
lds
jno
cwtl
fdiv
fcoms
lods
inc
cltd
mov
cmpl
sub
xchg
andb
sbb
push
and
movsb
aas
shr
cli
or
pushf
mov
mov
sbb
mov
nop
mov
mov
mov
pop
imul
jl
dec
sti
and
mov
das
xchg
push
mov
dec
jmp
sbb
pusha
and
loop
fsubrl
lret
push
imul
call
leave
lret
aad
pop
setp
jns
and
xchg
into
int
outsb
or
mov
or
xchg
insb
xchg
jecxz
out
rcll
adc
lods
cli
std
pop
mov
push
dec
sub
aaa
inc
mov
adc
cmp
cmp
adc
xor
add
or
dec
hlt
inc
pop
and
pop
into
xor
inc
iret
mov
les
pop
call
neg
call
or
push
iret
rcrl
iret
out
jne
or
leave
mov
pop
ds
in
push
mov
imul
sbb
shlb
pop
push
jecxz
cmpsb
add
es
or
sub
jge
fbld
mov
fwait
rorl
jp
sub
shlb
stc
jnp
gs
jo
push
testl
sub
dec
cmc
add
sbb
xchg
mov
add
mov
mov
js
pop
hlt
test
jg
push
iret
aaa
sti
pop
and
lds
jb
iret
mov
nop
in
fs
and
scas
clc
hlt
mov
jo
mov
pop
mov
mov
adc
pop
mov
les
xor
pop
lret
sub
out
daa
fstpl
fsubrl
movl
shrb
orl
sti
inc
outsl
xchg
addr16
cmp
lods
and
pop
cmpsl
test
movsl
or
and
sbb
adc
adc
cmpsb
stos
adc
add
into
xlat
jecxz
test
and
pushf
cltd
pop
scas
push
push
inc
out
test
mov
adc
call
mov
ss
or
movsl
cmp
sarb
or
inc
es
xor
dec
cmpsl
jge
ret
cld
and
mov
sbb
dec
cmp
mull
push
out
xchg
xchg
mov
mov
xor
pusha
fists
mov
int3
add
imul
cltd
inc
inc
test
aas
insb
inc
push
sahf
and
and
adc
mov
jne
int
push
cmp
in
sub
das
xchg
cmovbe
mov
addb
fstpl
ljmp
insb
lret
xor
imul
fidivl
push
lods
je
cmp
mov
push
mov
push
push
mov
dec
xor
outsl
movsl
cmpsl
mov
fwait
aaa
adc
sti
sarb
test
push
mov
outsb
mov
sarb
jno
out
mov
sarl
mov
addb
sbbl
inc
daa
and
dec
or
mov
sti
jns
dec
dec
or
jno
cmp
cltd
inc
xlat
lock
pop
pop
pusha
js
pop
cmpsl
sbb
cmp
xor
int
daa
loopne
fcomps
in
jns
testb
repnz
xchg
hlt
cwtl
loop,pn
jbe
push
push
pushf
jecxz
sub
inc
out
and
sub
test
pop
adc
loope
stc
mov
mov
add
das
popa
mov
outsl
test
inc
xchg
aam
push
imul
inc
stos
xchg
mov
stos
je
cmp
ror
stc
fwait
pop
push
fldenv
jne
aas
cmpsl
mov
mov
add
cmp
ds
fisubrl
stos
hlt
sub
adc
cmc
fwait
dec
sbbb
mov
pushw
lods
lds
pop
mov
sub
out
test
in
lds
fdiv
pop
fs
das
adc
mov
lret
jne
fcmovbe
xchg
fstps
aas
ret
pop
gs
push
in
sub
mov
push
outsl
cmc
loop
fdivl
jecxz
pop
mov
mov
je
xchg
mov
adc
mov
repnz
cmp
mov
addr16
and
xchg
les
lods
inc
pop
outsl
jns
std
addr16
ds
inc
aas
xchg
xor
sbb
push
jmp
shlb
mov
shll
add
movsb
ret
ss
sbb
cmp
imul
cmp
sub
stos
test
outsb
push
push
fldenv
pop
popf
ja
mov
lcall
mov
cmp
sbb
mov
mov
out
lds
stc
sub
pushf
lods
test
xor
cmp
dec
and
les
sbbb
ficomps
pop
inc
add
rcr
pop
dec
mov
sbb
call
scas
jns
popf
xchg
cmp
into
adc
jmp
dec
mov
pop
outsb
xchg
test
fdivr
sub
mov
cmpsl
rsm
lret
fstpt
popa
lods
mov
xchg
mov
mov
sbb
mov
movsl
int3
mov
subl
cmpb
jl
negl
push
pop
ret
jecxz
dec
icebp
and
xor
mov
iret
iret
daa
jge
cmc
popf
loop
dec
xchg
xor
add
es
ja
and
jmp
mul
mov
pop
dec
outsl
cmpb
pop
js
sbbl
adc
js
lcall
les
in
shrl
test
xor
mov
xchg
inc
cli
cli
mov
icebp
mov
lds
movsl
push
js
fcoms
add
ja
dec
mov
push
mov
and
add
pop
js
sub
adc
sub
push
adc
mov
dec
pop
dec
xor
das
test
cmp
jno
jmp
inc
ret
adc
shl
imul
sub
stc
into
imulb
inc
mov
cmc
xorl
les
iret
in
cs
aad
fs
xchg
push
adc
mov
jno
mov
sub
push
pop
push
sub
pop
test
bnd
std
decb
jl
stos
frstor
sub
pop
dec
mov
pop
sub
adc
pushf
pushf
xchg
loop
xor
or
scas
push
xor
rclb
movsl
jmp
adc
das
into
int
out
mov
mov
mov
lods
fiaddl
jp
repnz
push
mov
lods
xchg
roll
cwtl
push
orb
andl
sub
out
sbb
test
mov
mov
ret
adc
int3
test
rol
jbe
cwtl
call
fstl
or
cmp
sub
das
loopne
js
xchg
daa
popf
pop
inc
cmp
mov
fisttpll
insl
insb
push
xlat
idiv
fmul
mov
jo
shl
testl
sub
mov
gs
add
pop
ljmp
xor
mov
mov
aad
fcomps
sbb
xlat
sub
dec
fcmovnbe
mov
loope
popa
and
push
icebp
insb
inc
in
mov
or
jns
popf
rcrb
cmp
cmpsb
je
out
mov
rcrl
int
cmp
add
add
or
lcall
jae
in
jle
aas
es
inc
cmp
cli
pop
push
test
orl
or
mov
loope
popf
jp
and
sub
cwtl
aas
sarb
dec
xchg
sub
mov
xor
nop
jecxz
call
repz
add
cmp
jecxz
pop
fwait
or
mov
xlat
ret
and
xor
out
in
hlt
inc
rorb
cmpsl
cmc
sub
fistpl
jle
repnz
dec
aas
and
out
int
jae
cmp
xor
inc
pusha
cmp
int3
mov
out
rorb
jg
int
pop
mov
jmp
leave
cmp
mov
lcall
fisubrl
xchg
lods
repz
sub
mov
gs
cmpl
cmp
or
je
in
cltd
in
sub
mov
ljmp
sarl
cmpsl
jle
or
or
pusha
xchg
fsubrl
sub
xor
xchg
xchg
inc
pop
filds
dec
rcll
cmpsl
pop
cmpsl
inc
push
test
adcb
imul
pop
idivl
fldt
testb
mov
and
cmpsl
add
clc
lcall
jecxz
loope
imul
and
mov
mov
test
sub
and
hlt
sub
loop
mov
inc
shrl
sbb
xchg
cmpsl
aaa
dec
cmp
leave
pop
push
adc
test
mov
iret
sub
mov
outsb
jo
cs
xor
imul
out
das
mov
js
push
cmp
sub
insl
inc
or
orl
leave
xlat
cmp
sbb
pop
cmp
mov
fwait
and
dec
adc
xchg
aad
inc
aam
push
sbb
pop
fildll
mov
pop
sbb
sbb
out
aaa
cmpsb
fcompl
test
outsl
out
outsl
mov
ja
and
adc
jmp
sbb
xchg
push
mov
push
jnp
inc
jns
stos
outsb
dec
xchg
or
idiv
fld
xchg
push
push
bound
int
xchg
push
jecxz
inc
xchg
repnz
insl
push
xchg
inc
jecxz
sbbl
cmpsl
xchg
stos
mov
cltd
push
icebp
mov
sub
or
test
xchg
notrack
mov
xchg
sub
das
addr16
sbb
cmp
cmpsl
test
mov
xor
mov
enter
mov
adc
popf
jne
push
jne
cli
rcl
xor
mov
popa
packssdw
dec
push
sub
fs
mov
popf
dec
fstpl
pop
repz
inc
xchg
filds
cmpsb
outsb
jae
fcmovnb
ljmp
mov
leave
and
pop
dec
xor
or
jge
pusha
mov
dec
pop
lea
jb
les
push
nop
pop
add
fsubrl
orb
sahf
mov
jg
dec
ljmp
add
outsl
bound
outsb
pusha
jmp
inc
push
test
rcrl
movsb
movsb
jae
mov
mov
jne
xchg
jno
pop
fcompl
iret
rol
out
popf
stc
push
pop
xor
ror
adc
in
movsb
jmp
push
mov
negb
test
cmp
lea
mulb
cld
mov
mov
lahf
xchg
push
mov
es
es
cmp
mov
inc
pop
mov
out
xchg
push
fnstcw
fnstcw
cmp
dec
or
ss
cmp
dec
popf
sbb
fidivl
jge
adc
push
pop
mov
sub
gs
shll
xchg
push
fsts
cmc
daa
push
test
push
cs
jle
mov
jbe
repz
aad
push
test
jmp
shrl
ret
or
push
lods
add
push
or
mov
testl
xchg
and
xchg
cld
push
inc
loopne
aas
out
pop
pop
mov
xchg
cwtl
sub
push
and
rcrb
xchg
and
xorb
jmp
lods
imul
sub
jp
pop
dec
call
fiaddl
or
push
jl
xchg
xor
loope
rclb
add
adc
pop
sub
and
or
cmc
shlb
in
push
jg
sti
and
test
sbb
or
dec
sub
fildll
dec
pop
mov
xor
mov
push
xor
ds
daa
jmp
or
jmp
addr16
cmpsl
enter
test
adc
sbb
and
cmp
jae
push
sub
or
lods
das
out
stc
dec
xor
stos
fwait
mov
jb
push
aas
out
sub
ja
mov
or
enter
int
repnz
sub
push
movl
xorl
sbb
test
scas
mov
jp
test
loopne
data16
lds
dec
popf
ret
mov
mov
dec
aad
push
xorl
movsl
jmp
xchg
rcr
ja
push
leave
add
movsb
cmp
test
aas
outsb
and
clc
fs
mov
sahf
mov
jp,pn
hlt
lret
cwtl
mov
andb
rclb
dec
mov
in
inc
xchg
mov
add
pop
xor
pop
pop
sti
pop
xchg
sbb
sbb
scas
dec
push
popa
xor
add
xchg
sub
sbb
inc
xor
or
leave
cld
jae
mov
mov
sub
mov
cmc
aaa
add
xlat
add
rcr
mov
or
mov
out
jae
cmpsb
neg
xchg
repz
loop
xchg
ud1
xchg
mov
pop
rcpps
fdivrs
out
inc
jnp
cmpsb
cmp
cmp
add
or
cmp
cmpsl
mov
sbb
nop
aam
sbbb
nop
sbb
lcall
leave
pop
ds
jl
cmpsl
sub
push
dec
mov
imul
xor
shrb
mov
ret
lds
pusha
xlat
pop
pushf
imul
xchg
pop
and
std
loopne
es
xchg
adc
cs
pop
add
push
add
add
shll
mov
int
nop
ljmp
adc
push
mov
mov
adc
push
dec
int
les
bound
mov
repz
stc
subl
scas
pop
ja
pop
fisubrl
jns
cld
xchg
inc
mov
cmpb
shlb
mov
push
inc
scas
pop
das
fstpt
in
rcrl
insl
xlat
or
cld
fidivs
in
out
push
ds
dec
je
setl
cmp
xchg
mov
fstl
pop
mov
mov
shl
jno
mov
mov
aas
pop
imul
sbb
iret
lret
push
bound
inc
mov
jecxz
or
aam
jp
stos
add
cmp
xchg
fsubrl
leave
sbb
out
out
call
jnp
cmp
shrl
or
fidivrl
lret
fldt
xor
shl
push
movsl
push
scas
sub
sbb
fisubl
push
ja
mov
das
jae
cmp
cwtl
xor
dec
pop
mov
and
push
push
aad
pop
cwtl
in
js
and
push
mov
pop
stos
not
and
outsb
dec
subb
mov
push
sahf
lcall
in
shrl
mov
loop
lea
lock
jmp
mov
movsb
sub
mov
cmpsl
imul
pushf
mov
push
es
clc
movsb
jmp
subb
and
push
pop
xlat
and
idivb
clc
negl
push
ds
push
rclb
icebp
sbb
fwait
push
lock
jbe
mov
into
jbe
or
mov
imul
xchg
xor
jle
cld
xor
fsubrp
mov
jb
add
add
mov
fisubrs
or
pop
adc
out
pop
lahf
inc
mov
and
gs
and
imul
mov
inc
xchg
sub
fidivrs
cmpb
cwtl
jnp
push
lock
roll
or
dec
daa
les
mov
lcallw
jl
jp
pop
sub
cmp
inc
inc
insl
inc
lret
push
out
or
daa
xor
dec
sahf
fidivs
rclb
jo
loop
iret
xchg
test
mov
aas
sbb
xor
mov
fildll
fists
fwait
sub
in
xchg
dec
jo
sub
mov
jmp
cmp
jl
loope
push
orl
add
adc
mov
outsb
pop
xchg
sub
sub
outsl
xchg
push
inc
mov
mov
mov
adc
push
push
mov
and
cltd
push
ret
ljmpw
insl
gs
sub
adc
es
out
iret
adc
cmpsl
std
inc
push
je
rclb
test
pusha
xchg
in
mov
inc
xlat
aaa
push
scas
inc
dec
mov
jge
clc
dec
pop
out
cmp
add
jno
cmp
negb
loopne
dec
push
cltd
sbb
mov
stos
xchg
sub
add
pop
lods
mov
cmp
xor
or
pop
and
jo
sub
adc
arpl
in
test
imul
push
lock
loopne
jp
int3
push
mov
and
add
push
pop
or
in
daa
test
lcall
or
ffree
sub
cwtl
sti
cwtl
add
lcall
push
mov
cs
je
push
add
mov
int
mov
mov
mov
pop
imul
loopne
mov
and
cmpsl
pop
sub
mov
incb
sti
pushf
and
adc
lea
in
mov
fs
mov
xor
xchg
test
aaa
pushf
dec
add
cmovns
mov
mov
adc
or
or
outsb
push
push
cmc
popa
jae
and
pop
lods
mov
add
shll
in
ret
add
dec
push
jl
mov
push
stos
ljmp
loop
and
dec
mov
mov
jmp
aad
lods
lods
mov
mov
fs
mov
dec
inc
xchg
das
inc
mov
ja
stos
mov
xor
cmp
mov
test
and
lods
popf
loopne
jb
sub
movsl
pand
adc
out
mov
xchg
pop
pop
cmc
loop
mov
in
cmp
pop
mov
iretw
sub
add
or
dec
loope
rclb
lcall
mov
cld
adc
push
out
add
mov
mov
in
lds
sbb
mov
ja
cmpsl
jp
xchg
les
pop
add
insl
push
sub
pop
iret
sarl
ja
xor
add
mov
adc
shrb
lds
addl
cwtl
push
adc
fwait
xlat
sub
inc
enter
addl
sub
pop
ret
pop
arpl
cwtl
and
pop
mov
mov
mov
shrb
cmpl
ret
sub
loopne
sub
outsl
lds
pusha
mov
addl
scas
mov
mov
in
shlb
and
or
call
push
mov
shll
pop
mov
inc
cmp
test
test
dec
ret
int3
mov
xor
mov
stos
or
fldcw
xor
jnp
sbb
and
push
xlat
leave
xor
lahf
and
push
sbb
rorl
fsubl
rcpps
inc
imul
add
lods
xchg
sub
pop
mov
test
mov
mov
or
jg
inc
andl
cmp
jmp
sarl
pop
fcompl
lahf
cld
jae
arpl
ret
in
lods
sub
push
or
cmpsb
inc
adc
mov
adc
ret
push
into
pop
pop
add
cmpsb
fisttpl
mov
jnp
dec
push
xchg
inc
cmp
xlat
inc
fstl
push
cmp
inc
fwait
inc
pop
mov
les
sbb
rorb
movsl
add
adc
cli
fs
inc
repnz
push
dec
popf
cltd
jnp
adc
jl
xchg
aas
cmp
jp
outsb
push
test
enter
and
jnp
stos
punpckhbw
int
fstpt
inc
jnp
aad
mov
sub
arpl
int
and
or
add
xor
pop
out
adc
std
pop
ret
jbe
ret
js
aad
mov
add
fstps
and
nop
pop
dec
sub
into
lahf
lcall
je
out
test
push
inc
mov
push
sbb
out
aas
lods
popa
mov
sub
push
push
aad
ljmp
or
pop
sub
sbb
js
pop
jo
in
scas
das
cltd
xchg
inc
adc
xor
fiaddl
sti
imul
aaa
loopne
adc
js
mov
clc
mov
and
inc
lret
adc
insl
cwtl
lds
rcr
fs
cmp
cmp
mov
orb
aaa
add
inc
fmul
and
pop
push
outsl
mov
les
aas
test
inc
xchg
jb
cld
mov
negb
cwtl
lret
lods
lock
rolb
add
aad
cltd
sub
loope
imulb
test
jle
pop
jmp
addb
mov
into
add
cltd
cmc
mov
sub
cli
cs
sub
repz
add
ljmp
or
inc
cmpsl
sbb
pusha
lods
daa
mov
pop
mov
into
mov
or
fsubrs
leave
leave
cmp
outsl
sarl
ret
cmp
xchg
mov
imulb
sarb
shr
pop
inc
mov
in
out
push
sub
test
jno
xor
mov
jb
rorb
cmp
setne
rcrl
xchg
test
fmull
enter
inc
push
aad
ror
in
ret
xorb
sub
movsb
pop
enter
hlt
enter
mov
sti
push
mov
fcom
jmp
sub
sbb
sub
out
cmp
push
push
addr16
js
inc
lods
mov
sahf
inc
fstpt
fmulp
into
in
lds
push
out
push
dec
dec
fstl
push
fwait
ret
jp
lret
repnz
imul
jg
pusha
test
jle
push
pop
xchg
popa
add
sub
pop
xchg
into
ret
xchg
pop
sarb
cwtl
xchg
rolb
jnp
xchg
jne
xchg
lods
jnp
out
popa
data16
or
xchg
jg
repnz
aaa
inc
and
pop
pop
xchg
add
mov
xor
cmp
fldt
cmp
int
sub
popf
cmp
jno
sbb
addb
or
pop
daa
js
mov
jo
dec
cmpsb
sbb
cmp
mov
adc
out
push
test
popa
aad
push
lret
fsubs
ret
xchg
test
stos
push
inc
cmpsl
sub
js
xchg
lret
fimull
mov
push
dec
sbb
shrl
dec
sbb
stos
inc
int3
pusha
pusha
jnp
ja
movsl
popa
ret
call
jne
out
mov
mov
inc
sti
pop
mov
test
push
or
loopne
cmpsb
movsb
es
push
xor
fldenv
out
imul
fstpt
mov
dec
adc
sbb
icebp
or
das
ret
dec
add
dec
ficoms
sub
ficoml
sub
pushf
test
sub
scas
js
mov
stos
and
cmpsb
adc
rcrl
out
inc
dec
rcrl
jmp
mov
pop
mov
inc
xchg
mov
xor
push
fs
pop
sar
shrl
add
lods
cld
mov
mov
addb
imul
loopne
pop
adc
loopne
jle
dec
and
test
xchg
les
xchg
adc
jmp
adc
lret
gs
mov
popa
mov
mov
mov
push
mov
or
sbb
pop
mov
ja
cmp
cmp
imul
cld
in
xor
lods
mov
cmpsl
out
sub
sbb
lret
or
mov
add
mov
sub
popf
cmpsl
addr16
insl
inc
movb
mov
cmpsb
push
mov
pop
cmpsb
popf
in
push
cmpsl
bound
test
in
loope
or
xor
scas
outsl
ljmp
pop
pop
sbb
flds
test
push
arpl
jb
xchg
popa
inc
xor
and
adc
sbb
sti
or
out
ja
mov
mov
in
loope
or
dec
jg
mov
insl
popa
in
xchg
mov
outsb
push
pop
xchg
imul
subb
adc
popa
and
scas
push
sub
stos
push
push
int
aas
hlt
mov
jbe
xor
and
in
push
decb
bound
sub
xlat
ds
and
lahf
jns
cmpsb
jg
jp
lock
sahf
imul
fsubl
fisubrs
cmpsl
es
mov
outsb
adc
jge
adc
pop
mov
loop
xchg
int3
pop
adc
push
adc
sub
or
sbb
and
popw
jb
lods
jge
adc
arpl
lods
js
aaa
repnz
jae
ljmp
fimull
lods
leave
mov
cmc
cmpsl
cli
inc
lods
and
mov
imul
sub
cmp
jge
sub
enter
arpl
arpl
pop
and
inc
daa
lods
ja
outsl
pop
pop
lret
push
popa
test
jg
and
out
nop
cltd
adc
lods
mov
outsl
jmp
sbb
test
push
int
pop
pushf
sub
inc
or
and
xchg
jl
sub
sbb
repz
cmpsb
lock
imul
insb
sahf
push
ret
jmp
gs
mov
leave
aam
ret
fbstp
out
adc
mov
ror
popf
fucomip
pop
and
adc
ds
cltd
jo
dec
mov
push
dec
jnp
or
cltd
stc
mov
call
scas
aas
flds
out
loop
outsl
jge
int
in
jle
mov
inc
scas
dec
aam
mov
leave
or
ret
pop
cmpsb
outsb
insb
jle
xchg
mov
call
jge
mov
lcall
es
jmp
adc
dec
mov
aaa
cli
and
mov
adc
mov
movl
jns
nopl
jo
movb
ret
icebp
out
mov
ljmp
popa
and
cmp
xchg
dec
ss
inc
pop
negl
inc
cltd
cmpsl
push
ss
push
cltd
out
xor
fildl
sub
pusha
in
cmc
xor
in
mul
dec
lret
rorl
fiaddl
mov
cli
mov
in
cwtl
fcoml
lcall
lds
jns
jle
pop
loop
and
push
sbb
pop
nop
pop
lds
leave
dec
jecxz
popa
out
in
inc
ret
xor
mov
and
lahf
call
lret
push
cmpl
cltd
fdivs
mov
sti
inc
or
inc
cmp
sub
ja
jne
adc
jp
jmp
les
or
pop
xor
shrb
pop
and
mov
int3
lock
jmp
or
movsb
jo
cmp
iret
mov
jae
in
xchg
sbb
sbb
andb
sub
push
loopne
movsb
sub
xor
dec
xlat
pop
xor
push
fwait
push
or
mov
inc
inc
lret
gs
ljmp
aam
push
ret
jecxz
lods
xchg
iret
loopne
xlat
sahf
jle
pop
leave
xor
ds
loope
jns
sti
sub
pop
xor
jae
adc
outsl
popa
dec
shl
ds
lahf
fwait
adc
pop
xchg
test
mov
jae
test
mov
jbe
inc
pop
movntps
out
lcall
add
shl
roll
or
adc
xchg
mov
fimull
fwait
dec
in
subb
fnsave
je
test
arpl
dec
jmp
aad
imull
mov
xchg
dec
push
add
mov
dec
mov
fiaddl
ret
sub
push
dec
sbb
push
fisubs
pusha
jecxz
mov
jg
adc
mov
out
push
loope
movsl
insb
cld
cmp
imul
inc
jmp
subl
pop
lock
push
dec
jmp
insb
xor
mov
out
add
mov
adc
mov
mov
cli
popa
jae
mov
add
adc
cmp
bound
iret
fcomp
add
fwait
lock
pop
leave
fs
gs
jmp
sub
sub
xchg
mov
fucomip
int
mov
incb
pop
cmpsl
test
ret
loope
add
lds
sub
push
xor
jle
push
mov
iret
pop
jle
lahf
jmp
arpl
insb
scas
std
add
subl
cmpsb
stos
repz
pop
test
cmc
lret
jno
and
or
or
sti
inc
aam
and
dec
iret
rclb
mov
mov
jge
fildll
mov
push
popa
mov
stos
push
out
aas
dec
dec
mov
cmp
and
ds
aaa
jl
aad
mov
fidivrs
and
xor
rcll
sub
fcomp
enter
ret
pusha
adc
xorl
mov
lahf
xlat
mov
int
inc
div
sub
out
mov
lret
inc
sub
add
aas
inc
adc
ret
xor
mov
rcll
xchg
jo
jb
test
loopne
shlb
aas
mov
dec
fidivs
push
jbe
stos
jmp
or
cmp
pop
sub
data16
cmp
adc
dec
add
push
push
sbb
mov
xlat
push
dec
mov
inc
fmuls
scas
mov
mov
les
stos
mov
nop
sahf
pop
cmp
iret
dec
inc
xchg
aam
dec
dec
or
pop
and
mov
jg
out
jge
fidivs
xchg
push
push
jmp
push
ud0
stos
lods
sub
std
mov
push
sbb
bnd
add
mov
jnp
xchg
push
out
and
cwtl
cmp
fs
hlt
pushl
ds
scas
in
sarb
push
call
lods
sub
js
xchg
fisubs
fcmovnu
add
push
scas
xchg
pop
push
push
addb
inc
and
inc
test
xchg
cmovs
cwtl
cmp
mov
xchg
push
push
mov
mov
xchg
xchg
pop
pusha
push
call
insl
fldl
lds
lret
jbe
pop
shrb
mov
cmc
pop
jae
loopne
shrb
sub
mov
fyl2x
jl
mov
filds
inc
mov
subb
mov
iret
mov
xor
push
xchg
stos
adc
xor
leave
fwait
fmuls
sti
jne
sti
xor
out
mov
lret
mov
fs
cmp
subb
lret
sub
pop
pop
jb
loopne
frndint
cmp
jg
pusha
call
pusha
stc
mov
add
imulb
cmp
xor
ret
push
iret
aam
sbb
mov
add
loope
and
or
push
sbb
rorl
inc
aam
popa
xchg
jo
push
and
pop
inc
out
adc
adc
mov
inc
loopne
test
scas
repnz
cmp
jecxz
and
mov
adc
ljmp
dec
xlat
out
in
les
sub
jne
daa
xchg
mov
inc
pushf
push
enter
mov
xor
repz
xchg
loope
xor
push
insb
ja
xchg
jns
mov
sarb
aas
mov
cs
gs
or
hlt
repnz
and
inc
sub
addr16
data16
sub
xchg
outsl
pushf
pop
push
sbb
les
mov
inc
and
mov
mov
mov
push
dec
adc
dec
mov
jne
idivl
xor
movsb
and
cmp
xor
mov
cmpsl
xchg
xchg
movl
cmp
and
fs
ret
dec
push
adc
mov
xor
movsl
mov
inc
std
iret
sbb
mov
enter
xchg
insb
testl
cmp
sbb
inc
add
adc
fcoms
daa
fcomps
shlb
xor
orb
mov
test
mov
push
inc
mov
mov
lods
xchg
sub
push
ret
mov
xor
insb
lods
test
fdivl
jecxz
jb
in
sbb
pop
lods
dec
jnp
mov
int
test
testb
inc
mov
mov
jmp
pushf
popf
or
and
jg
pop
xchg
fdiv
xchg
repz
in
adc
cwtl
cli
aam
mov
mov
ret
xor
add
mov
hlt
subl
ret
orl
push
cmp
sbb
jo
pusha
lcall
mov
jns
cmpsb
mov
push
cld
sbb
cmpsb
aam
inc
ffree
mov
dec
cltd
fnstenv
sbb
sub
shrl
negb
call
jl
adc
je
add
xchg
add
mov
test
fdivs
cltd
into
jmp
in
xor
dec
and
sub
shll
mov
inc
cmp
loope
cwtl
add
cmc
or
inc
and
cmp
xchg
shrb
shll
stos
mov
repnz
in
repnz
sub
movsl
movsl
xchg
fstps
xchg
mov
outsb
add
negb
mov
lret
nop
jge
xchg
lods
lahf
fwait
jnp
dec
lds
out
mov
adc
mov
into
lret
lds
dec
lret
mov
ret
dec
outsb
cmpsb
jno
xor
ds
outsb
inc
and
addr16
push
es
das
jns
test
mov
mov
test
push
dec
add
inc
and
cmpsb
lcall
mov
xor
imul
fdivrp
stos
repnz
cltd
mov
jle
xor
or
fidivrs
add
mov
pop
in
or
bound
push
cmp
aad
mov
jno
mov
xor
push
add
jg
fildl
loop
rclb
cmp
inc
cli
subb
jo
adc
dec
test
sub
xlat
mov
addr16
enter
pop
adc
into
out
cmc
jg
test
or
xor
out
ror
or
inc
pop
jo
sbb
into
in
mov
inc
mov
cmpsl
dec
int
and
popa
push
push
int
les
push
cwtl
ja
mov
data16
and
scas
xor
jnp
in
xor
jmp
lret
rorb
add
fstl
ss
aad
pop
jg
testl
int3
lods
rcl
enter
mov
bound
pop
or
add
out
jmp
mov
dec
jge
jp
pop
cmpsl
jecxz
iret
jl
add
aaa
ljmp
push
jae
add
test
lods
cwtl
int3
std
cmc
add
ret
int
into
mov
insl
or
mov
mov
sbb
arpl
mov
mov
roll
imul
cmp
andl
in
sbb
lret
xorb
and
sub
mov
call
jle
lret
lods
jge
test
cli
call
insl
lahf
outsl
push
test
addb
test
js
out
popa
push
mov
mov
adc
mov
xor
enter
mov
jmp
inc
xchg
sbb
pushl
sub
xor
sub
mov
dec
or
jnp
sbb
mov
mov
sbb
xchg
mov
pushf
ret
fs
lret
sbb
mov
fdivrl
mov
push
mov
sbb
ret
xchg
and
test
dec
lds
xchg
mov
and
dec
lcall
aas
fs
pop
push
adc
jg
pop
jo
jl
jmp
arpl
sbb
dec
pop
add
add
adc
or
xchg
jmp
into
mov
jne
sub
lcall
mov
add
xor
stos
pop
das
mov
fnstcw
loopne
inc
imul
mov
pusha
stc
jp
push
in
in
xor
mov
aam
jno
jmp
addr16
sbb
loopne
mov
fidivl
mov
mov
jb
inc
xchg
fimuls
adc
jb
mov
repz
cmp
add
rcr
push
fcmovnbe
iret
jns
jb
xor
cmpl
clc
add
jb
popf
dec
push
jl
in
popf
in
or
in
mov
cld
xor
call
lods
loopne
pusha
rorl
insl
cmp
dec
add
pop
sarl
sti
adc
lret
jp
cmp
cmp
icebp
ja
sub
xchg
xchg
inc
cmp
cmp
addr16
leave
call
pop
ss
and
into
and
add
dec
in
jns
push
adc
call
lods
dec
movsb
push
lock
nopl
sub
imul
in
pop
adc
pop
mov
add
scas
mov
add
add
fiaddl
shrb
mov
jge
push
int
dec
repz
stc
clc
je
ds
xchg
cmp
mov
icebp
jl
shrl
subb
in
popa
into
pushf
scas
xor
jge
xchg
dec
mov
dec
leave
mov
push
lds
xchg
push
xchg
popa
jge
mov
fs
lcall
mov
addr16
add
adc
sbb
push
xchg
iret
in
stos
add
outsb
mov
test
mov
pop
adc
push
es
xor
imul
pusha
mov
arpl
xor
stc
push
xor
scas
push
outsl
sbb
movsl
outsl
cmp
and
arpl
inc
add
inc
pop
shll
and
cli
pop
sbb
push
and
xchg
into
lock
jmp
sub
pushf
mov
push
ret
push
sub
jnp
jno
test
push
fwait
mov
jmp
ret
pop
xchg
lret
ljmp
sbb
lock
jl
cmpsb
sub
dec
xor
loopne
cmp
push
and
outsb
mov
cltd
add
pop
sbb
daa
out
in
or
sti
push
and
pusha
cmp
das
or
adc
dec
sbb
add
out
push
or
xchg
cld
mov
jns
xor
xor
inc
in
lods
shlb
pushw
jae
add
sbb
cmpsb
jmp
inc
jle
decb
dec
inc
push
sahf
arpl
xor
ja
pop
mov
dec
cmp
dec
add
pop
cmp
daa
pop
xor
pusha
pop
mov
subb
sub
pop
mov
xor
divb
sbb
inc
out
pop
test
test
jmp
xchg
sbb
push
push
mov
cli
xor
jmp
mov
adc
pop
xchg
or
notl
mov
sbb
xchg
xlat
adc
push
jmp
cs
adc
or
les
dec
in
jae
lretw
jecxz
xchg
and
push
rcr
rcrl
mov
nop
cmpb
add
sbb
das
popf
xchg
loop
or
clc
lcall
scas
ficoms
mov
fldcw
cmp
push
cmp
rorb
jmp
dec
sbb
push
sar
mov
nop
xchg
cmp
and
mov
out
cmc
or
jns
out
lcall
sub
xchg
popf
mov
fldcw
call
push
mov
cmovg
dec
lods
cs
pop
imul
out
inc
aad
xchg
push
adc
int
cmpsb
popf
cmp
cwtl
pop
negb
add
ljmp
xchg
add
adc
int
jl
lock
pop
leave
mov
pop
lds
push
in
gs
iret
adc
and
mov
mov
into
sub
xchg
pushf
add
or
loope
jne
adc
xlat
popf
mov
sub
sti
addr16
push
aas
in
mov
adc
dec
push
xchg
popa
loope
mov
pop
or
fstpt
mov
push
pop
pusha
notl
in
push
or
int
das
iret
push
cmp
stc
ljmp
inc
arpl
mov
enter
pusha
add
repz
loopne
add
jb
mov
cwtl
pop
scas
inc
cmp
pusha
ret
pop
add
das
mov
shrl
xchg
add
push
pop
cmpl
xorl
pop
cwtl
and
je
jbe
mov
dec
int3
mov
mov
mov
mov
cmc
nop
pop
mov
into
pushl
data16
mov
fsubrs
sub
cmp
sbb
rcrl
sbb
fs
shll
cmc
inc
int
movsb
mov
mov
sbb
add
lods
repnz
mov
fsubrl
les
bound
frstor
mov
dec
loopne
sub
js
or
mov
movsl
test
int
lcall
lcall
jl
insl
pushf
stc
dec
push
add
and
aas
add
jbe
fcmovnbe
add
int3
fstpt
mov
outsl
adc
xchg
jmp
mov
inc
adc
fstpl
ja
movsb
les
mov
mov
jge
xor
pop
in
push
dec
adc
popf
sbb
ret
or
sbb
push
xchg
cmp
je
stos
pushf
in
shl
fcoms
in
mov
pop
inc
mov
push
stos
popf
jo
test
dec
adc
jg
mov
addb
pop
js
mov
aas
sub
mov
popa
mov
scas
push
mov
jge
lods
lcall
int3
sbb
sub
push
in
popa
pop
xchg
and
lods
push
aas
or
inc
or
mov
lods
pop
lods
scas
push
push
loopne
movsb
mov
sub
imul
stc
lods
js
xchg
xor
dec
mov
dec
es
dec
sti
xor
sbb
loope
cwtl
fdivs
pop
pop
pop
pop
lock
addb
sbb
jne
mov
inc
scas
push
pushf
mov
mov
leave
cmpsb
cld
jo
and
jecxz
mov
mov
testl
jmp
cli
and
pop
fistpll
jge
mov
fidivrl
cmpsb
mov
pusha
dec
jecxz
jbe
push
je
test
ret
dec
loope
mov
jb
push
sub
adc
mov
dec
pop
jg
add
or
jmp
mov
xor
es
sbb
test
pop
dec
xchg
aas
pop
add
fbld
repz
mov
ficoml
xchg
pop
and
mov
sbb
jg
inc
jge
push
and
aam
xor
imul
fisttpll
fiaddl
adc
out
icebp
cs
out
push
enter
cmpsb
adc
outsl
bswap
test
mov
fdivrs
xor
push
xlat
push
dec
and
fdivrs
or
inc
sbb
mov
adc
xor
jmp
sub
cs
mov
xlat
xor
scas
sub
pop
mov
mov
jnp
adc
mov
out
or
pop
adc
in
lahf
cmpl
mov
out
or
push
mov
das
mov
push
pusha
call
cmc
jmp
test
addr16
pop
movsb
xchg
mov
pop
adc
das
cli
and
inc
xchg
imul
mov
xlat
pusha
repz
stc
xchg
aas
gs
shrl
clc
ljmp
rep
pop
mov
sti
cmp
rep
xchg
sub
iret
adc
dec
pushf
sbb
jecxz
cmp
fsubr
aam
push
inc
insl
dec
dec
cmp
xchg
mov
aas
pusha
mov
push
push
insl
add
lea
cs
sub
xor
shlb
pushf
loopne
fmul
aaa
ds
stos
pop
in
repz
push
and
push
sub
sub
mov
incl
pop
mov
lahf
pop
fsub
in
mov
popf
pusha
out
inc
popa
sub
jnp
push
mov
xchg
xchg
fnstcw
inc
mov
ret
fldt
sub
cs
push
sub
aas
mov
cmp
jg
ret
jecxz
out
mov
je
mov
ljmp
mov
iret
and
js
mov
xor
mov
and
push
call
div
lock
mov
push
or
insl
divl
fwait
mov
inc
sar
push
sub
aaa
or
pop
jp
cmp
mov
mov
out
fistpll
fidivrl
cmp
ret
pop
pop
out
pop
es
sub
pop
arpl
pop
mov
push
faddl
or
add
fsts
outsl
xchg
sbb
push
subb
xor
test
orl
jns
jl
xor
outsb
cwtl
ret
pop
rcl
xchg
std
xchg
fnstsw
enter
mov
mov
xchg
popf
lods
mov
sbb
xor
shrb
push
scas
xlat
sub
mov
test
iret
or
fstl
call
and
push
and
int
dec
ret
inc
xchg
cmp
aas
out
shrb
imul
int
mov
push
pusha
mov
fistpll
jle
push
and
inc
add
jmp
and
sbb
mov
fstps
mov
push
cld
mov
xchg
pop
filds
xor
xor
ret
pusha
rcrb
adc
mov
sub
sbb
add
push
push
in
lret
lret
inc
sbb
mov
cmpsl
mov
jnp
cli
imul
jge
out
sub
mov
and
cmpb
jge
call
fs
cmp
daa
jmp
daa
mov
scas
das
xchg
sub
sub
or
push
and
cltd
arpl
lods
lret
cmc
test
cli
lret
scas
imul
inc
cmp
pop
out
jge
or
mov
mov
dec
pop
xor
mov
or
mov
fbld
sbb
shr
xor
push
adc
mov
cmpsb
jle
xor
sub
or
jno
add
push
addl
test
lods
andl
sbb
push
movsb
subl
cmp
jb
mov
cmc
sub
pop
nop
sbb
ljmp
xor
xchg
and
outsl
into
sbb
xchg
xchg
xchg
test
clc
rcll
fnstenv
sub
sbb
sti
and
fildl
lret
jecxz
outsb
test
fnstcw
lret
mov
mov
mov
jno
imul
inc
pop
fidivs
mov
push
dec
cld
lods
adc
mov
inc
imul
imul
lock
ja
mov
mov
and
push
jl
lahf
fsubrs
push
adc
fldl
jb
jne,pt
xor
repz
popa
or
lds
dec
insb
mov
pop
fs
mov
popf
lahf
cmp
jp
test
testb
lret
jecxz
xchg
mov
push
cmp
sub
and
clc
dec
test
xchg
dec
mov
or
add
data16
or
cmpsl
popf
pop
adc
jmp
dec
out
fdivrs
testb
mov
sbb
je
cmpb
sbbl
mov
jecxz
jne
mov
sub
pusha
rcr
into
movsl
jle
imul
and
jnp
ficompl
es
lea
daa
mov
es
xchg
cmpl
les
js
adc
or
sbbl
mov
add
jno
mov
fidivl
sbb
and
adc
mov
cmp
pushf
inc
rcl
mov
enter
lock
adc
mov
rcrb
rclb
ljmp
jae
mov
loop
je
cld
mov
mov
arpl
arpl
clc
xorl
and
mov
insb
sahf
sub
sahf
mov
mov
dec
arpl
sahf
movsl
push
test
adc
mov
fwait
in
lods
dec
out
jne
icebp
mov
test
push
imul
shrb
iret
je
xor
ljmp
syscall
daa
cmc
dec
jb
arpl
inc
addr16
arpl
inc
lea
pop
sub
sbb
gs
sub
scas
mov
jmp
adc
sti
xor
xchg
push
dec
cli
push
xlat
rorl
cmp
mov
popf
mov
xorl
dec
and
rcl
into
sbb
xchg
fstps
xor
jecxz
and
xor
mov
or
outsl
addr16
sti
js
push
inc
xorl
pop
repnz
ret
cmpb
cmc
mov
xchg
shlb
dec
push
or
pop
xchg
or
inc
in
mov
dec
sbb
dec
push
xor
fwait
aaa
test
aaa
sbb
inc
int
lcall
rorl
roll
jg
push
imul
lea
adc
lret
mov
push
jg
stos
sub
movsb
andb
mov
fmull
push
mov
ss
sahf
sar
add
movsl
sub
sarl
sbb
add
mov
and
into
ret
fimull
sub
loopne
scas
mov
ds
jg
shlb
mov
leave
lret
int
popa
push
repz
sub
scas
mov
in
jmp
orb
xchg
gs
xor
mov
int3
loop
cmpsl
push
xor
lahf
pop
cmp
mov
lret
jg
cmp
out
int
in
cmovo
in
repz
lds
repz
sbb
std
mov
int3
mov
xchg
imul
mov
mov
inc
dec
rcrb
dec
lds
insl
cld
cwtl
mov
std
incl
pop
stc
jmp
bound
adc
or
into
or
repz
dec
xchg
andb
jne
nop
push
or
mov
int3
dec
mov
fstl
sub
jb
xchg
pushf
and
cmp
in
dec
stos
jnp
rorb
jo
outsl
test
popa
add
movsb
cmpsb
rolb
nop
xchg
inc
xchg
mov
pop
dec
stos
imul
mov
in
vpaddw
andl
hlt
cmp
cs
std
mov
testb
hlt
add
lds
in
mov
popf
mov
cmovs
push
or
imul
test
cmp
ds
pop
cmp
push
and
lds
paddsb
jge
jbe
aas
adc
hlt
mov
cmpsb
das
out
ljmp
cmp
mov
in
sahf
test
andb
fsubrl
mov
pop
pop
scas
gs
adc
popf
lods
pop
mov
andb
sbb
jbe
in
aaa
lea
jp
cmp
pop
xchg
lcall
pop
cmpl
insl
xchg
or
out
lods
adc
xchg
fs
adc
dec
mov
std
lret
repnz
jb
ja
test
xchg
mov
add
loope
jnp
xor
cmp
mov
cmp
int3
cmpsb
or
pop
ret
inc
rolb
mov
hlt
mov
daa
xchg
dec
popf
imul
aas
data16
ss
jo
mov
cmp
out
into
and
rclb
in
mov
andl
xor
adc
cmp
outsb
loopne
and
inc
sbb
repnz
add
push
or
mov
jae
pop
xchg
and
inc
dec
test
inc
enter
ss
icebp
mov
sub
sahf
cmc
push
out
jge
gs
test
loop
xchg
push
mov
out
ret
arpl
pop
stos
testb
hlt
push
mov
sbb
mov
dec
out
pushf
add
sub
push
scas
inc
clc
scas
fwait
aas
jecxz
loope
pop
mov
lret
dec
scas
mov
loopne
int3
pop
dec
lret
mov
fbld
fistps
or
sbb
mov
sbbb
sbb
xor
stos
daa
sti
lahf
jnp
xor
lahf
mov
mov
aas
es
mov
ljmp
es
or
xchg
xlat
mov
mov
outsl
lahf
popa
sbb
scas
hlt
cwtl
rcll
testl
or
js
adc
mov
and
xlat
mov
add
lcall
mov
pop
icebp
sahf
nop
hlt
cmc
lcall
pushf
loop
shrl
cltd
mov
jnp
mov
lcall
loope
cmp
dec
sub
dec
pop
ret
and
sub
gs
mov
cmp
xchg
out
cmp
xchg
jbe
lcall
add
mov
mov
mov
mov
stos
mov
mov
pop
inc
rcll
rclb
mov
test
cmc
and
jae
and
divl
int3
ret
push
dec
xchg
xchg
mov
push
xor
sub
movsl
lcall
sbb
inc
push
add
call
cmp
push
push
jb
xor
and
sub
popa
inc
dec
jne
sub
and
mov
mov
gs
in
xor
sbb
xor
dec
add
insb
cmp
popf
cmp
lahf
std
aaa
and
ret
xchg
lea
jae
mov
add
roll
dec
aad
arpl
jl
fldl
sub
push
push
xlat
imulb
popf
mov
lret
push
sar
adc
sub
push
ja
sub
mov
sub
shlb
push
dec
shrb
cmp
xchg
sbb
das
or
fistl
repz
aaa
imul
cmpsb
repz
pop
clc
xor
adc
out
adc
dec
test
add
into
decl
test
inc
loopne
mov
ljmp
xor
jae
cmp
bound
sub
add
add
data16
je
outsl
push
jb
repz
and
mov
sbb
cs
mov
push
iret
push
lods
mov
bound
loope
pop
dec
fptan
dec
push
dec
sub
scas
dec
lods
std
mov
pop
mov
mov
scas
mov
cmp
inc
or
imul
xlat
mov
cld
add
adc
sahf
and
push
jbe
dec
sub
fwait
jg
add
push
inc
sub
test
sbb
sbb
push
inc
fwait
sbb
mov
jp
pop
lcall
int
gs
cmp
xor
sysret
add
rcll
adc
dec
add
gs
cld
mov
push
xor
jb,pt
ljmp
loop
enter
je
adc
lret
mov
mov
pop
ret
xchg
dec
push
sub
outsb
shl
in
pop
test
push
lea
shlb
jl
sub
sbb
sbb
inc
sbb
mov
push
fcmovb
lret
ror
lret
fsubrs
mov
xchg
fsubs
push
stos
xchg
fs
or
out
ds
testb
popa
popf
adc
jp
negb
sbb
mov
sar
jp
cmpsb
push
lea
add
js
icebp
jno
xchg
lahf
push
mov
aas
sub
xchg
jl
cmp
inc
cli
xchg
jno
and
jno
dec
pop
sub
jbe
pop
test
out
imul
es
dec
leave
ja
addr16
dec
push
mov
repz
xchg
mov
nop
jge
inc
and
fcmovnbe
add
test
xor
test
mov
xchg
and
out
cmpsb
mov
or
mov
cmp
outsl
cli
imul
cmc
mov
ljmp
ja
jg
mov
cwtl
shlb
stc
mov
mov
cltd
es
fsubrl
popw
jnp
inc
in
add
aad
mov
pop
pop
lock
insb
lods
xor
addb
mov
mov
shrb
jl
xchg
push
fwait
add
outsl
outsl
push
into
mov
xchg
hlt
xchg
pop
cmp
jbe
or
lret
cmpsl
push
into
arpl
mov
jmp
loope
mov
bound
loop
jge
mov
dec
sbb
and
test
shlb
gs
add
ja
cmp
cmp
and
mov
inc
imul
dec
mov
dec
push
je
adc
sub
fwait
adc
movsl
daa
aaa
mov
mov
cltd
rcl
shll
sbb
jmp
cltd
mov
jb
lods
sub
mov
mov
dec
cmp
fldenv
leave
out
pop
xchg
xor
jbe
adc
clc
xor
adc
loope
scas
popl
mov
in
jno
mull
mov
int
cld
push
jns
mov
stos
in
inc
add
sahf
hlt
xor
andb
or
insl
aas
movsb
lock
or
dec
sbb
xor
das
ja
iret
adc
stos
call
xor
jge
jnp
jo
jp
jge
sarl
sub
and
jp
xchg
add
hlt
cmp
out
mov
addl
repz
cmpsb
sbb
fcoms
or
sbb
mov
mov
push
mov
rol
adc
andb
cwtl
loopne
push
in
std
test
pop
out
and
fs
shl
xchg
dec
rorl
ficompl
pop
aad
jp
mov
inc
cli
std
mov
aas
loopne
lea
xorl
xor
mov
aad
mov
push
pop
mov
add
mov
push
sub
scas
add
adc
idivl
dec
ss
fisttpl
or
fs
aas
xchg
iret
cltd
lods
push
and
sbb
lea
lret
fucom
jne
test
sub
jae
incl
inc
jae
mov
shll
popa
ret
nop
jnp
dec
dec
or
add
adc
andl
test
mov
js
add
sub
xchg
fisubrs
out
lret
mov
mov
fists
pop
into
scas
out
mov
sbb
sub
out
pop
int
stc
mov
sbb
lock
mov
arpl
xor
aam
orb
push
xlat
popf
test
vsubss
push
outsl
adc
gs
scas
test
insl
xchg
adc
add
sbb
les
out
outsb
ret
aas
sarl
in
or
mov
test
addr16
gs
push
out
dec
mov
pop
and
mov
xchg
adc
sti
nop
and
sub
adc
add
nop
push
xor
outsl
sbb
or
xorps
aam
gs
adc
xlat
push
add
int3
mov
mov
cmpsl
inc
cmp
adc
clc
jb
enter
xor
mov
test
shr
sub
fbld
loopne
pop
notl
lock
int
fnstsw
in
sub
mov
in
cwtl
adc
scas
ret
cmp
lds
mov
pop
icebp
js
gs
addr16
out
aad
cmpb
arpl
shlb
aam
lret
movhps
mov
inc
xchg
stc
sbb
mov
push
repnz
je
sbb
or
test
dec
mov
pop
inc
out
mov
push
mov
mov
out
std
sbb
cld
addr16
scas
inc
or
xchg
sbb
jp
push
pusha
roll
cmc
shll
sub
jnp
test
mov
mov
pop
out
sub
push
sbb
mov
push
cli
data16
fwait
mov
jg
cltd
lret
mov
pop
popf
xchg
out
movsb
out
jbe
dec
mov
mov
loope
mov
idivb
and
shrb
xchg
mov
xchg
loope
loope
push
rorl
nop
xor
xorl
dec
das
aam
sysenter
dec
push
cmpl
inc
sahf
xchg
or
nop
push
xorl
cmp
sbb
mov
lods
pop
jne
sub
and
lods
loope
addr16
jno
ljmp
popf
ds
outsb
or
outsl
mov
std
ja
repz
ss
mov
popf
cmp
in
push
jmp
shll
mov
ss
lods
push
sbb
int3
frstor
sub
sti
dec
test
jecxz
sub
dec
out
es
call
mov
aad
jl
in
push
test
in
mov
cld
or
sub
aas
push
mov
loope
lsl
in
ja
pop
jne
cmpsb
scas
or
pop
loope
jno
xchg
cmp
jns
fcoms
dec
xor
adc
loopne
aas
mov
sub
addl
mov
sahf
scas
ret
push
mov
cmp
mov
into
rcll
push
insb
or
mov
idivb
repz
jmp
dec
xor
push
push
incl
sub
xor
sbb
hlt
xchg
sbb
add
or
jne
pop
or
xor
sub
sub
mov
pop
mov
pop
iret
adc
mov
aaa
out
jle
lds
jns
into
aas
add
neg
and
lret
and
jns
fmuls
pusha
lcall
xchg
sub
adc
ret
add
cwtl
xor
or
sbb
mov
lret
ja
fs
xor
mov
ss
cli
nop
xchg
into
fcomps
mov
dec
jb
xor
and
scas
fsubrl
imul
xchg
cmp
ja
dec
int3
mov
fadd
add
scas
pop
vpunpckhbw
dec
dec
push
pop
lock
cmp
rorl
mov
dec
mov
xchg
int
mov
fdivl
js
imul
mov
xchg
mov
mov
in
es
xchg
ja
or
xchg
fwait
or
ficoml
and
daa
out
sub
push
les
es
out
push
and
aam
inc
inc
mov
jo
js
mov
pop
sub
outsb
mov
shrl
icebp
xchg
jle
add
loope
mov
stos
jmp
inc
out
pop
out
in
cmpsb
push
sub
jno
sti
cmp
cli
and
in
push
or
stos
jns
adc
into
mov
push
pop
gs
sbb
cltd
fwait
add
data16
mov
sarl
clc
popa
jge
aas
lds
xchg
aam
dec
fisubs
ret
fistl
push
lcall
sti
lret
dec
aad
and
jno
fdivrp
and
jl
push
lahf
movb
rorb
xlat
or
adc
aad
ret
cwtl
mov
xor
repz
xchg
push
lret
cmpsl
iret
enter
sub
aam
mov
cmpsl
xchg
pop
mov
jo
and
or
sbb
sbb
sub
jecxz
and
sar
mov
jg
das
js
pop
subb
pop
xchg
sub
ljmp
ljmp
xbegin
ja
xchg
imul
ds
fstp
test
mov
fwait
movsl
cs
jge
enter
mov
fdivs
ljmp
xchg
pushf
cli
add
push
pop
adc
ret
fisttpll
mov
dec
pop
xor
cltd
xchg
adc
and
outsb
or
das
mov
dec
lahf
mov
push
pop
rolb
jle
pop
mov
cmp
je
repz
and
rcr
out
in
clc
sarb
pop
sbb
cmp
mov
mov
in
orb
sahf
in
f2xm1
in
je
repnz
jl
jns
xchg
jnp
xchg
stc
sub
cmp
mov
dec
sub
clc
jp
dec
adc
jns
sarb
cmc
les
jg
dec
icebp
xchg
scas
aas
pop
ret
setl
and
popf
sbb
jne
hlt
push
mov
xor
roll
fwait
inc
repnz
jno
sarl
jnp
test
inc
mov
push
dec
pop
nop
mov
xorl
jnp
out
call
inc
and
stos
jnp
or
in
popf
mov
out
sbb
adc
cltd
jl
mov
lret
data16
pop
inc
jnp
pop
and
in
dec
cs
popa
repz
mov
lea
push
adc
push
or
pop
sbb
iret
sahf
lds
mov
dec
andb
xchg
inc
icebp
in
jecxz
pop
pop
dec
lret
out
and
push
adc
pusha
dec
ljmp
ljmp
sbb
add
jp
fisubrs
fwait
lret
adc
mov
mov
cld
add
clc
sub
mov
sahf
mov
pop
gs
fcoml
sbb
lds
outsb
mov
jg
sbb
push
adc
push
out
adc
xchg
lock
mov
sub
ja
push
cld
or
dec
inc
inc
pop
repnz
xor
xchg
mov
dec
push
mov
data16
push
sbb
sbb
and
test
rcrl
lock
lods
cmpsl
push
mov
pop
cmpsb
push
jecxz
out
xor
sbb
and
ss
pop
outsb
cmp
sub
mov
ficoms
lcall
popa
es
mov
stos
das
mov
lcall
in
cmpsb
lcall
inc
scas
cmpsl
repnz
adc
imul
in
sbb
inc
es
pop
ficoms
clc
jns
insb
loope
xchg
out
add
xchg
fdivrl
sbb
adc
jns
call
ss
dec
xlat
push
rcr
out
lahf
stos
push
pop
sbb
sbb
icebp
clc
cmpsb
cmp
jmp
xor
test
test
sbb
ret
popa
out
fsubr
cmc
or
mov
xchg
jp
push
nop
and
mov
cmpsl
xchg
ficomps
or
jmp
stos
xor
xchg
adc
gs
add
stc
roll
mov
stc
ret
mov
loop
mov
mov
jb
cwtl
dec
sahf
add
xchg
adc
mov
or
xchg
xchg
lods
pop
jo
rcrl
sbb
hlt
push
cmp
pop
das
mov
lret
jne
cmpsl
dec
stos
shlb
mov
pop
fwait
push
and
cmp
dec
and
or
xor
mov
lahf
scas
inc
mov
rcr
imul
out
test
jno
jne
and
add
dec
inc
fcom
iret
dec
mov
dec
push
sbb
ret
mov
into
and
rcr
adc
xor
inc
cmc
dec
mov
fisttpll
xor
and
cwtl
mov
arpl
jae
xchg
cmpl
cmp
cmp
mov
insb
and
lods
pushl
push
xchg
popa
xchg
and
jp
fs
adc
add
movnti
mov
icebp
fs
int
xchg
sub
fisttps
mov
and
imul
jmp
es
stc
mov
cmp
mov
ret
add
shrb
lcall
inc
cmp
imul
mov
jecxz
icebp
sbbl
sbb
es
cmpsl
bound
shrb
mov
mov
fsts
jnp
and
mov
mov
lods
xor
lahf
in
orb
std
adc
push
adc
jp
loop
mov
add
loope
xorb
xchg
dec
ljmp
ss
xchg
sub
push
cmp
in
aas
xchg
jge
inc
dec
inc
hlt
pop
inc
testl
jo
xor
dec
cwtl
jl
cmp
fdivs
mov
les
movsb
aad
push
ljmp
nop
or
xor
sbb
add
cmpsb
rcr
push
push
lea
mov
popa
dec
test
in
and
call
add
mov
jmp
pop
and
popa
rcr
outsb
jno
mov
je
push
pop
popl
inc
mov
rcrl
test
add
add
xor
adc
xor
rolb
addr16
inc
insb
lret
frstor
sti
mov
sub
push
push
orl
es
insl
aaa
xor
stos
das
in
andb
push
sbbb
sbb
mov
and
imul
jns
xlat
mov
cmp
adc
js
ret
xchg
data16
je
xor
xor
mov
outsb
sub
sub
rcrb
dec
lods
mov
loopne
adc
mov
mov
push
mov
iret
add
inc
sbb
popa
and
sub
xchg
fs
popa
movsl
xchg
push
pop
pop
aad
push
sub
jo
cmp
aam
out
mov
lods
mov
lods
cs
adc
clc
sbb
movsl
adc
push
pop
das
shlb
fnstsw
mov
fwait
cmp
xor
stos
mov
ljmp
and
xchg
shll
pop
lret
lock
test
add
mov
outsl
adc
or
call
sbb
add
push
or
cmp
icebp
not
dec
fists
arpl
pushf
test
stc
or
push
stos
dec
xchg
ret
and
jge
sub
xor
mov
testb
fld1
sahf
aam
mov
imul
or
scas
xchg
or
das
jne
jecxz
out
mov
in
dec
lahf
inc
sbb
rclb
bnd
pop
push
in
mov
sub
sbb
pop
adc
mov
pop
sbb
xor
sub
adc
pop
sti
inc
xchg
ret
dec
fcomi
pushf
cmp
aas
push
pop
jbe
into
cmp
cltd
clc
jnp
sub
aam
ja
mov
inc
mov
add
and
jle
pushf
xor
insl
mov
push
sarl
jg
bound
bnd
mov
adc
mov
aaa
xor
repz
aam
mov
rclb
js
fstpt
xchg
and
or
or
xchg
gs
mov
cmc
ja
and
fmul
push
inc
js
jmp
sub
and
sub
test
dec
xor
out
cld
jge
cmc
jno
push
arpl
in
not
jbe
jns
mov
ss
in
out
enter
mov
fnstenv
sub
ret
cmp
fdivrs
pop
or
jno
div
outsl
jns
add
xchg
mov
xchg
cwtl
mov
xor
lods
movsl
dec
leave
pop
lods
rorl
dec
je
in
or
sub
pop
int3
jle
mov
pop
les
js,pt
fcmove
je
or
fwait
add
scas
push
jg
mov
jnp
push
push
adcl
pop
mov
pop
pop
call
push
push
mov
cmc
xchg
sbb
jmp
lds
sbbl
movsb
adc
int
lods
sbb
mov
xor
push
addr16
insl
xchg
pop
push
insl
xchg
or
lret
sarb
test
mov
xchg
cmp
ror
scas
pop
push
movsb
mov
or
stc
push
or
insb
sbb
cltd
push
out
add
daa
or
add
insb
rcr
xchg
daa
jecxz
sbb
sbb
cmp
fs
mov
fisubs
dec
xchg
add
pop
jne
data16
sbb
adc
fisttpll
sub
add
mov
add
cltd
arpl
inc
cmpsb
and
or
mov
test
jge
sahf
inc
cmp
pop
push
leave
push
add
outsb
adc
and
and
mov
stc
adc
pop
xchg
jle
mov
push
pop
add
add
and
lcall
jns
cmp
shlb
mov
das
mov
xchg
and
movsb
ljmp
outsb
and
addl
jbe
xchg
movsl
or
pop
stos
push
fnsetpm(287
adc
xchg
roll
lock
imul
lret
mov
sub
ret
xchg
mov
popf
sub
pop
in
loope
aaa
push
xor
xlat
stos
mov
pushf
or
cmpsb
push
push
out
xchg
int
test
jge
sbb
fwait
xchg
fadds
jl
andb
stos
pusha
xchg
enter
push
testl
rcrb
fsubr
inc
dec
adc
sub
stos
aaa
out
or
lahf
jg
adc
gs
dec
pop
fdivrl
mov
cmp
out
xchg
mov
cli
jns
bound
ja
inc
and
add
or
mov
and
cmp
add
sub
jle
cmp
push
pop
gs
jl
sbb
dec
add
out
mov
mov
mov
fidivrl
push
push
xor
pushf
loopne
pop
and
sbb
and
mov
daa
mov
xchg
adc
dec
shll
loope
movsb
and
pop
xor
fidivs
shlb
xchg
sbb
jns
xchg
push
dec
ja
das
xor
fsubrl
push
mov
push
cld
repnz
out
adc
or
add
mov
inc
or
mov
mov
out
out
add
movsl
in
fistpll
popf
inc
mov
rolb
jbe
adc
ljmp
or
mov
test
adc
sbbl
or
jae
push
push
shrb
outsl
mov
mov
fbstp
dec
aaa
mov
inc
cmp
xchg
sbb
mov
neg
movsb
loopne
sbb
fnstenv
test
aam
cmpsl
shl
inc
imul
pop
cmpsl
fwait
adc
or
jle
jge
rcl
mov
dec
mov
and
sbb
movsb
rolb
inc
stos
daa
outsl
fistpll
mov
scas
cmpsl
adc
sub
sbb
hlt
xlat
sarl
xchg
dec
push
xlat
in
test
mov
loope
pop
mov
out
pop
shrb
outsl
cld
dec
imul
arpl
loop
scas
repnz
popa
jle
dec
mov
jecxz
mov
dec
push
sbb
jp
xchg
push
shll
jle
mov
idiv
pop
das
fwait
push
outsb
divb
adc
test
cli
mov
shrl
es
inc
sub
repz
sbb
or
orb
mov
insl
inc
outsl
xor
shll
and
xor
xor
fists
enter
in
push
jnp
adc
mov
push
pop
movsb
test
movsl
cmp
out
jp
sbb
mov
pop
int
xor
inc
int3
lods
lret
xchg
sub
or
test
xchg
sub
pop
gs
add
inc
jl
stc
and
pop
xlat
in
jle
and
cmp
stos
into
pop
mov
ljmp
cmp
xor
jb
xchg
stos
jl
jecxz
scas
sti
xchg
clc
subl
jg
or
adc
mov
jmp
pop
sub
mov
pusha
inc
and
xchg
sub
pushf
add
imul
xchg
push
push
or
pop
les
jnp
in
and
test
sub
imulb
ficoms
add
or
push
stos
adc
dec
lahf
mov
add
loope
ss
mov
in
cmp
pop
push
addr16
testb
cmp
sbb
push
fmuls
outsb
inc
xchg
jbe
xchg
xchg
and
jp
loope
ficoml
and
in
sbb
adc
xchg
aam
jge
cltd
add
inc
xchg
pop
adc
ror
inc
ret
fistl
jle
cmc
push
movsl
mov
ja
aad
push
mov
pop
sbb
sub
stc
aam
bound
mov
jb
xor
push
fwait
sub
cld
repz
xlat
aas
stos
xchg
mov
mov
shlb
scas
dec
mov
bsf
bound
popa
lea
nop
sub
push
dec
fs
sbb
jns
stc
rcl
xlat
or
int
stc
les
add
das
cmc
cmpsl
pushf
dec
push
jge
xor
jo
std
xchg
mov
cwtl
jmp
sub
loopne
pop
dec
sahf
lds
in
jbe
fwait
adc
mov
adc
or
mov
jp
or
das
lea
inc
add
out
xchg
jns
enter
iret
or
imul
cmp
mov
jo
dec
mul
hlt
popf
sbb
add
mov
movsb
lahf
add
or
scas
xchg
bound
add
mov
cmp
adc
mov
outsl
jl
js
add
lcall
inc
and
mov
and
mov
pop
add
push
aad
mov
enter
sub
mov
outsb
cmpsb
rol
ds
popa
ljmp
sub
insl
xor
scas
in
pusha
and
mov
dec
mov
add
push
pop
imul
daa
pop
or
ja
or
xor
xchg
pop
dec
sub
and
mov
xchg
lds
test
xchg
mov
or
imul
add
xor
in
repz
ljmp
out
push
scas
pop
inc
pop
or
mov
cld
shlb
jge
scas
aaa
jns
rcll
mov
decl
mov
sbb
mov
mov
xchg
icebp
insb
jp
movl
add
arpl
adc
dec
mov
and
mov
and
and
out
sarb
sub
mul
xor
cmp
jl
dec
push
jo
push
and
pop
cmc
aad
cmpsl
movsb
or
adc
int
in
push
cltd
or
xchg
pop
pop
setns
pop
enter
pop
pop
js
test
add
pop
add
popf
cmp
pop
push
mov
aas
push
jmp
pop
in
ret
inc
xor
aas
jmp
inc
mov
mov
lock
dec
stc
push
xchg
stc
ficoms
jecxz
mov
push
mov
pop
fcmovbe
lret
add
dec
cmp
cld
xchg
adc
dec
mov
and
pop
out
repnz
push
add
push
pop
fsts
and
popf
mov
roll
daa
mov
sub
and
out
push
mov
rcrl
cmc
pop
daa
push
repnz
mov
mov
dec
scas
fmul
jbe
mov
outsb
pop
aaa
mov
bound
mov
mov
add
mov
and
into
imul
xchg
daa
jne
inc
mov
mov
daa
sbb
pusha
jecxz
aam
sar
or
jnp
push
mov
mov
add
or
and
cmp
cmpsl
mov
iret
loop
pop
aas
out
std
lds
jecxz
mov
ja
fcomps
jge
adc
add
stos
orl
cltd
movsb
sar
ds
add
or
mov
rolw
mov
and
dec
inc
sbb
sti
bound
push
fdivr
cmc
fisubrl
jbe
lret
incl
cmp
lods
movb
ja
cwtl
add
pusha
aad
arpl
loopne
movsb
and
and
or
sar
outsb
cmp
fildll
sbb
jo
sahf
lds
sbb
test
into
ret
ret
xchg
int3
mov
cmpsl
es
addl
inc
sub
out
notb
adc
loope
iret
test
jmp
mov
sub
push
insl
loop
dec
xchg
iret
je
or
xchg
ja
and
aaa
xor
jbe
popa
stos
stc
out
cltd
fdivs
lock
mov
push
sbb
adc
out
mov
jno
mov
mov
sub
adc
cwtl
into
sub
mov
pop
dec
lret
push
jle
jns
iret
mov
xor
pop
loope
pop
das
jb
mov
mov
test
jb
mov
pop
insl
or
loopne
pushf
cmpsb
xchg
and
aad
test
adc
add
mov
jne
push
mov
test
outsb
mov
pop
xchg
lea
adc
iret
loop
sub
mov
inc
jae
out
push
dec
and
iret
mov
mov
aad
aam
mov
push
xchg
rorl
aaa
data16
or
cli
lret
rorb
cs
mov
jg
push
fstpl
rcll
xlat
dec
fs
jecxz
lahf
mov
mov
js
es
cmpsl
and
lods
stos
std
cmpsl
ret
aam
pop
adc
adc
insl
dec
test
fwait
int3
push
add
xor
xchg
xor
dec
inc
xor
stos
inc
cmp
aam
xor
cld
mov
jl
push
pop
xlat
mov
xor
push
mov
mov
das
jp
rcr
loop
incb
decl
cmpsb
mov
inc
pop
or
sarl
push
decl
das
jne
jb
daa
and
aad
cwtl
int3
rcrl
inc
pop
iret
outsl
xor
popa
inc
fnsave
cltd
adc
inc
sub
testl
stos
xchg
xchg
mov
dec
jmp
push
sbb
loop
mov
inc
std
sahf
sbb
cs
cs
push
cmp
fmull
das
gs
xor
pop
fsubrl
dec
leave
jnp
stos
clc
jecxz
push
jo
jnp
test
mov
loopne
and
mov
aas
loope
mov
test
xchg
mov
push
ja
lods
dec
sbb
stos
mov
sbb
sti
jle
loopne
and
ret
mov
fidivl
fwait
dec
or
out
ljmp
cmp
inc
pop
orl
es
and
cmp
notl
sub
lret
lds
cld
shrl
fisubl
cmpsl
cmp
cmpsl
movsb
aam
inc
jbe
enter
fucomp
adc
dec
mov
jp
add
mov
sub
rorb
dec
outsb
inc
inc
sbb
subl
out
add
scas
stc
in
sub
dec
push
popa
xchg
movsb
repz
or
out
es
mov
enter
push
inc
outsb
movsb
xchg
inc
aaa
pop
gs
xchg
mov
sbb
inc
dec
dec
in
inc
push
arpl
inc
add
mov
cmpsb
adc
test
orb
idivb
mov
xor
sbb
inc
jecxz
adc
and
lock
xor
nop
movsl
cmp
jle
lds
mov
rorb
jnp
fcompl
cmp
out
xor
leave
popa
cltd
inc
push
pop
lahf
sbb
adc
cmpl
cmpsl
push
xchg
pop
push
mov
mov
ja
std
mov
les
jecxz
loopne
cmpsl
and
sub
push
pop
out
dec
add
inc
hlt
jno
sub
xchg
mov
loopne
cmc
add
jle
and
add
int3
xorl
adcl
gs
scas
mov
aam
pop
add
cmp
add
pop
or
popa
leave
push
daa
sub
jae
jl
mov
roll
inc
xchg
lods
push
rorl
pop
mov
data16
imul
push
gs
add
xor
jno
pop
push
pop
js
dec
ficoms
push
push
int3
sbb
jge
or
add
fwait
xchg
ja
adc
inc
pop
clc
mov
mov
add
or
xchg
jmp
jmp
xlat
pop
dec
cmc
in
mov
int3
adc
sar
sarl
jo
out
scas
or
add
dec
dec
sbbl
es
lcall
loop
xor
mov
dec
adc
or
call
ror
ss
icebp
in
xorl
ljmp
cmc
aas
mov
mov
sbb
pusha
fs
xor
in
mov
and
lret
mov
adcl
in
xchg
ss
adc
and
repz
insl
dec
arpl
mov
dec
or
mov
jl
int3
in
mov
jns
xchg
adc
fists
clc
and
pop
pop
test
xor
cld
fisttps
sbb
push
iret
jo
fisubrl
sub
xchg
jb
cli
insl
push
dec
fmull
scas
cmp
mov
push
insl
mov
popf
cmp
xchg
stc
push
mov
and
test
enter
popf
scas
lods
shll
jno
jmp
mov
nopl
movsb
ljmp
cmpsb
fs
test
sbb
in
popa
fmuls
pop
push
test
push
fldln2
sbb
push
mov
nop
xchg
mov
inc
fcmovnbe
loope
and
test
dec
cmpsl
hlt
xchg
and
add
imulb
jbe
cmp
mov
mov
push
xor
roll
test
loop
imul
fnstsw
out
xchg
lods
repnz
mov
dec
lahf
insb
inc
push
xchg
adc
stc
pop
test
sub
cmp
lock
imulb
cmp
addb
add
xchg
push
jg
das
aam
cmp
es
or
test
mov
decb
jp
cwtl
mov
sub
push
mov
cltd
inc
jnp
push
dec
arpl
rclb
shr
rol
xor
int
test
mov
out
dec
movsl
inc
fildll
jne
pop
jne
ljmp
mov
add
cltd
stc
xchg
cmp
jb
pop
push
fnstenv
insb
or
pop
sti
hlt
imul
shrb
mov
push
mov
mov
xchg
mov
xchg
push
mov
xchg
pop
mov
leave
daa
sub
pop
aaa
cmp
mov
popf
inc
inc
out
mov
and
scas
sbb
adc
dec
push
push
bound
mov
adc
into
fsub
xchg
loop
mull
das
mov
mov
add
ds
xor
push
inc
sub
stc
add
daa
into
gs
aaa
movsl
cmp
push
sbb
pop
lods
xchg
lods
mov
or
popa
xlat
jne
data16
pop
sbb
push
sub
cs
and
and
inc
dec
ret
stos
lahf
loop
mov
lods
jbe
in
xchg
xchg
jp
xorb
mov
xor
or
xchg
pop
jp
test
lret
aaa
xchg
addr16
cmc
pop
pop
rclb
fcoms
sbb
roll
jnp
mov
xchg
pop
mov
jno
cmp
pushw
lods
xchg
lods
xchg
aad
lret
fcompl
aaa
data16
ljmp
and
ljmp
shll
dec
or
lods
add
xchg
lea
xor
mov
iret
inc
mov
vcvttpd2dqy
mov
cmp
nop
xchg
mov
aas
call
test
rcl
and
outsb
fisubrl
lahf
dec
call
call
dec
sub
xchg
je
and
lock
mov
push
mov
inc
sbb
dec
jnp
xchg
jle
orl
mov
mov
decl
cli
sbb
pop
lahf
xlat
movsb
adc
mov
pusha
push
xchg
sbb
or
cs
pop
push
mov
mov
cmpl
stos
insl
rcrl
push
movsl
scas
lcall
or
and
push
adc
and
sahf
sub
pop
inc
imul
scas
xchg
adc
scas
jl
cmp
pop
mov
push
inc
stc
mov
insb
outsb
jmp
mov
sub
lret
ljmp
cmp
dec
arpl
xchg
pushf
xchg
push
out
lret
inc
lea
jl
popa
loopne
in
mov
mov
mov
xchg
push
mov
sarb
int3
scas
popf
stc
cmp
mov
rorb
in
add
sub
stos
add
and
mov
adc
popa
jno
fcompl
cli
pushf
int3
sub
xlat
cmpsb
cmp
xchg
pop
lods
mov
hlt
in
lea
xchg
jg
inc
fsubrp
hlt
mov
xchg
push
test
shr
std
pop
mov
lret
imul
jae
les
jecxz
sbb
push
adc
shl
or
push
in
js
ret
cmp
outsl
or
not
xor
inc
pop
and
jp
fnstcw
inc
sub
int
jno
xchg
mov
into
jnp
pusha
inc
lahf
xor
mov
jmp
jecxz
pop
sbb
push
mov
mov
push
in
int3
repnz
add
adc
push
scas
cmpsl
jnp
inc
xchg
in
imul
test
movsl
adc
adc
ja
cmp
les
xchg
mov
or
or
sub
and
cmp
cmp
dec
xchg
shrl
faddl
jae
cmp
ret
ja
jo
fnstsw
cmp
shll
imul
jp
adc
cld
mov
mov
test
push
pop
xchg
xchg
inc
pop
stc
sbb
out
push
add
xor
and
jg
sbb
adc
lret
adc
jmp
inc
dec
and
leave
mov
out
je
lret
fidivl
add
fwait
xchg
jle
fcmovnbe
out
inc
push
out
push
or
add
mov
addr16
push
mov
js
fsubp
jbe
out
loopne
ret
jb
std
out
cmp
bound
shrl
cmp
cmc
mov
inc
xlat
jae
push
xchg
lahf
lea
xlat
imul
sub
sub
cld
popf
pop
jl
push
and
sbb
outsl
dec
rcrl
or
and
mov
fmull
in
push
test
add
pop
cmp
jnp,pt
push
cmpl
xchg
ja
je
aad
fadds
imul
sbb
mov
mov
repz
mov
idivb
cmp
mov
jb
repz
cmc
inc
je
adc
mov
pop
adc
sbb
mov
adc
nop
in
push
ret
sbb
dec
leave
fildl
nop
arpl
dec
jae
out
shrl
ucomiss
data16
ljmp
cmp
fs
cmp
mov
pusha
jg
xor
ds
dec
xor
xor
sub
cmpsb
dec
jle
inc
int3
pusha
push
dec
push
cmp
or
cld
xchg
and
loopne
lds
js
mov
jb
xor
gs
inc
outsb
int
fwait
cmc
mov
add
or
lods
or
push
inc
add
add
mov
pop
cmpsl
inc
inc
in
mov
push
das
adc
in
ret
sub
lea
test
jnp
lea
das
movsb
adc
adcl
inc
inc
and
fadd
std
xchg
mov
lcall
push
out
bound
lahf
adc
std
push
pop
inc
lea
pop
mov
pop
int3
mov
fisubl
nop
cmp
das
push
push
or
cmc
in
daa
cmc
loop
das
lcall
cmpsb
stos
loopne
dec
shl
mov
dec
movsb
fisubl
icebp
sbb
xor
daa
mov
adc
out
das
xor
cmp
and
fldenv
xor
inc
mov
scas
das
dec
sbb
pop
sbb
and
movb
xor
sbb
jl
sub
mov
sub
xchg
iret
jmp
jo
pop
fldt
sub
mov
subb
lea
or
and
and
iret
cmp
or
daa
outsl
mov
test
fimuls
xor
imul
fstl
or
push
or
xchg
or
orl
push
icebp
push
adc
subl
mov
fcoms
fs
leave
mull
faddl
repnz
push
dec
iret
pop
shl
incl
inc
xchg
out
ljmp
call
leave
test
mov
mov
cmp
lds
fwait
int
push
pop
movsb
outsl
mov
xchg
mov
in
test
adcb
xor
leave
enter
adc
loop
ss
inc
std
inc
adc
dec
push
cmp
pop
inc
lret
addr16
stc
fwait
into
jecxz
adc
xor
push
adc
idiv
or
into
dec
adc
rorb
xor
push
test
xchg
mov
fiaddl
ss
stos
xor
push
dec
mov
mov
jge
js
jo
cmpsl
adc
add
testb
movsb
arpl
adc
les
imul
leave
cs
notb
repnz
sub
cwtl
mov
shrl
cvtps2pi
dec
aaa
sbb
mov
nop
data16
cwtl
push
sub
jmp
sub
stc
xor
ror
dec
pop
jecxz
ficoml
test
movb
pushf
pop
mov
mov
pop
hlt
add
sub
adc
dec
dec
lahf
roll
adc
mov
aas
mov
mov
les
push
cmpsb
ljmp
pop
addb
or
lds
push
rclb
divb
and
ds
out
and
pop
push
mov
mov
fcoms
insb
cmp
leave
xor
imul
pushf
inc
outsb
call
mull
dec
fldt
aad
fidivrs
cmp
rclb
cs
cmp
cwtl
inc
imul
js
adc
dec
je
cmp
ror
int3
inc
mov
out
hlt
adc
test
decb
dec
in
hlt
clc
pop
pop
stos
mov
in
jns
dec
xchg
stos
cmp
mov
mov
inc
fdivr
out
push
shll
mov
or
adc
fadds
cltd
inc
aam
faddl
in
int3
scas
arpl
dec
loopne
or
popa
dec
fdivrl
pop
sarl
xor
add
loopne
inc
jp
fwait
loope
nop
mov
insl
es
sub
fwait
or
out
popf
in
icebp
mov
push
pop
stos
pop
add
aas
dec
in
or
sbb
fcompl
imul
leave
ret
cmp
adc
nop
popf
mov
loope
dec
push
and
push
stos
add
shr
adc
pop
repz
mov
inc
std
mov
jne
add
cwtl
fstpl
mov
xchg
loop
sbb
sub
xchg
add
dec
add
or
pcmpgtb
lret
sub
stc
fs
mov
xchg
ljmp
lea
fwait
loopne
popa
movsl
mov
mov
shl
jno
adc
mov
adc
dec
xor
xchg
jae
popa
pop
stos
jge
andb
sahf
cmp
adc
repz
into
loop
jb
add
into
jecxz
cltd
cltd
mov
or
mov
sar
inc
pop
mov
sahf
lods
cmp
cwtl
mov
jp
or
push
loop
cs
jg
pandn
scas
mov
lds
lret
cmc
xchg
adc
xchg
jae
and
test
jl
sub
pop
sbb
jbe
adc
sahf
sub
mov
mov
xchg
dec
or
xchg
jne
dec
pusha
sti
sahf
jno
pop
fstpt
xor
push
adc
push
mov
jo
inc
mov
inc
lds
daa
sahf
adc
mov
sahf
sbb
mov
cmp
clc
and
scas
je
mov
xchg
sub
xor
imul
or
inc
sbb
dec
dec
test
ss
out
push
sbb
lret
dec
enter
outsl
test
lea
xor
int
nop
jb
add
sub
pop
sbb
push
lds
cmp
lret
movsb
mov
xchg
lods
cmc
jl
pop
test
and
xchg
dec
cld
ret
popf
cmpb
clc
jne
sub
dec
cltd
xor
mov
out
shrl
cmp
out
dec
lock
mov
int3
push
inc
sbb
shll
sbb
outsb
outsl
sbb
ret
gs
dec
mov
das
aam
lock
sub
icebp
fs
mov
adc
and
dec
daa
push
jo
mov
xor
pop
mov
add
sub
dec
fistps
inc
cltd
pop
lea
jo
sbb
xchg
xchg
push
adc
addr16
in
negb
js
dec
clc
mov
or
pop
popa
or
xchg
push
mov
cmc
fildll
jnp
fs
mov
into
imul
xchg
aas
lcall
insl
add
neg
lcall
mov
and
push
mov
add
adc
push
mov
addr16
insl
push
pop
sti
pop
pop
cmp
outsl
cmp
add
push
cmp
mov
cmp
push
out
or
lea
and
mov
sti
sbb
ret
xor
inc
mov
xchg
push
dec
leave
scas
ds
out
add
adc
and
lock
mov
inc
call
mov
daa
xchg
push
mov
test
cli
insb
mov
adc
std
imul
imul
repnz
lret
push
shl
sub
je
data16
loopne
loope
imul
in
xor
jne
js
icebp
adc
dec
inc
cwtl
lock
fdivl
imul
and
add
xchg
loope
pop
xchg
push
hlt
ret
mov
movsl
inc
dec
jmp
lock
xchg
or
clc
out
lahf
mov
mov
les
aaa
sahf
push
fdivs
daa
fldcw
inc
cltd
cs
sub
sbb
fnsave
push
loopne
pop
xchg
push
or
cld
sbb
in
mov
adc
inc
inc
addr16
mov
sarb
rolb
xchg
or
push
mov
inc
xchg
jno
in
mov
std
pop
xor
inc
mov
icebp
and
dec
sbb
clc
loope
cmp
mov
rcr
orl
dec
shr
adc
imul
rorb
jp
add
dec
out
popf
adc
hlt
lcall
in
push
stc
std
cmp
dec
jo
fstpt
ret
jg
xchg
out
in
cmp
and
push
dec
insb
mov
inc
sbb
push
frstor
add
mov
adc
lea
sbb
jmp
jne
inc
testl
test
jle
loope
popf
pop
pop
loopne
dec
cltd
fdivrp
icebp
xor
cmp
adcl
insb
xor
adc
jmp
add
into
int3
leave
loopne
fidivrs
loope
and
arpl
inc
sti
xlat
ljmp
cmp
in
xchg
push
lcall
movsb
jecxz
aas
hlt
movsb
sarl
adc
pop
mov
adc
mov
in
sbbl
sbb
jmp
insb
js
fdivrs
sub
stos
and
pop
rorl
sbb
add
mov
cwtl
repz
rclb
rclb
cmp
jae
add
pop
xchg
and
fcomip
stc
outsl
fistps
divb
pop
in
and
hlt
mov
into
stos
sub
pop
xchg
or
mov
inc
mov
pusha
push
and
cmpsl
pop
das
adc
inc
call
aas
push
aas
repz
xchg
lret
int3
vpinsrw
jp
mov
inc
push
xor
and
mov
in
leave
push
mov
or
aad
jge
xchg
ds
leave
ret
andb
ljmp
mov
inc
jnp
and
xchg
mov
sbb
stc
push
lahf
mov
loopne
in
test
pushf
pop
push
pop
in
mov
std
aam
xor
cmp
mov
push
fisubrs
inc
xchg
rorl
push
sarb
in
imul
xor
cs
and
popf
and
or
xchg
lret
cli
jl
bound
ss
and
push
decb
xchg
mov
xor
stos
addl
popf
jnp
cwtl
push
sbbl
sub
mov
fstps
jne
push
cmpb
adcb
nop
test
or
and
sbb
cmpsb
pushf
sub
insb
mov
mov
mov
mov
xor
jge
ds
inc
pop
adc
xlat
or
pop
lcall
in
icebp
mov
loop
out
xchg
xor
repnz
pop
sbb
adc
addb
imul
add
cmp
sub
xchg
mov
and
mov
xchg
mov
int
or
cmp
fbld
adc
add
mov
iret
bound
mov
dec
dec
add
jnp
testl
xor
pop
mov
pop
push
cmp
adc
pop
orb
mov
sub
mov
scas
adc
xor
adc
jae
daa
mov
mov
xor
pop
mov
frstor
xlat
das
subl
addb
fldcw
cmpsb
inc
adc
stos
or
in
int
mov
dec
ja
mov
incl
cmp
sahf
sbb
and
jle
cli
push
xchg
jle
jne
fcmovnu
xlat
andb
push
add
jnp
push
sarl
add
xlat
and
add
clc
mov
stos
fnstenv
add
xchg
mov
jle
push
or
in
fmuls
adc
addr16
inc
imul
xchg
adcb
xchg
push
mov
leave
daa
adc
enter
mov
and
out
add
fistl
inc
popa
hlt
jae
pop
sti
hlt
loope
jbe
mov
enter
ds
bound
shrl
cmc
mov
fcomps
dec
pop
sbb
js
xchg
loopne
arpl
adc
fldt
or
into
mov
fimuls
pop
rclb
adc
rcrb
sahf
or
push
ret
push
or
fsubrp
mov
adc
shrb
pop
xor
push
and
or
mov
lock
hlt
dec
insl
call
addl
and
and
ljmp
fsub
mov
repnz
xchg
xchg
and
mul
adc
mov
nop
js
faddp
push
and
outsl
pop
aaa
in
mov
gs
movzwl
das
or
data16
int
test
test
xchg
cmp
or
sub
rolb
scas
lods
cmp
stos
sbb
orb
fldcw
rclb
inc
sbb
inc
fsub
push
add
jle
arpl
pop
data16
push
add
sti
test
sub
mov
clc
dec
js
cwtl
xor
mov
lret
jns
xchg
call
in
js
test
and
in
hlt
enter
inc
jmp
cmp
jg
imul
dec
repz
xchg
ljmp
inc
xchg
pop
scas
push
scas
shrl
or
popf
in
aam
mov
xchg
in
jg
jp
add
sti
test
adc
push
push
jmp
int3
vcomiss
push
notb
jb
push
jmp
cmp
repnz
sub
lret
scas
and
shrb
mov
mov
push
pop
jp
lods
and
or
push
popa
into
jne
adc
hlt
jno
mov
out
fs
xor
or
or
ror
xchg
push
jp
sbb
shrl
js
dec
je
fmuls
out
test
mov
rol
push
pushf
add
dec
mov
lds
in
mov
shll
loop
xchg
xor
shll
scas
movsb
roll
pop
stc
cmc
xor
adc
mov
add
in
arpl
inc
or
fcoms
bnd
mov
cmp
and
scas
xchg
addr16
xchg
xor
bound
test
mov
lcall
and
sar
add
jg
gs
aas
cmpsl
inc
ja
ret
cmpsl
clc
repz
hlt
cmp
lcall
mov
imul
aas
movl
adc
shrb
int3
icebp
popa
lods
sarl
or
push
xlat
or
cltd
pop
mov
mov
lods
lahf
scas
mov
lcall
aam
cmpb
push
cltd
out
mov
aas
mov
mov
cld
jl
cld
nop
add
cmp
pop
and
iret
jo
mov
add
lahf
dec
mov
cli
aad
xlat
sbb
fwait
adc
jne
in
rclb
mov
cmp
jnp
pushf
mov
das
les
test
mov
jb
sub
mov
adc
and
hlt
loope
and
dec
out
frstor
shr
push
sbbl
xchg
mov
push
sti
push
sbb
inc
jae
xchg
xor
sbb
jmp
iret
cmpsl
fimull
xor
arpl
stos
ss
inc
std
mov
loopne
daa
push
and
lahf
sbb
xchg
idiv
dec
rolb
xor
mov
or
insb
sbb
leave
pop
mov
sbb
xor
sub
push
xchg
sub
imul
mov
mov
push
pop
pop
repz
jns
pop
and
push
mov
and
addr16
dec
dec
xor
in
mov
jae
inc
movsl
sbb
ficoml
and
or
xchg
int
mov
mov
lret
add
lea
jecxz
jo
std
leave
pop
jl
cmp
sbb
and
or
out
fidivs
out
push
repnz
mov
loop
push
pop
fwait
inc
adc
into
js
push
insb
push
iret
lds
loop
push
jno
neg
test
insl
pusha
sahf
insl
inc
mov
stos
jge
inc
jbe
add
jmp
pop
repz
popf
rcll
iret
imul
daa
and
cld
cmp
inc
loopne
out
add
add
mov
addr16
outsl
out
adc
mov
sub
mov
negl
mov
push
adcl
outsb
cmpsb
rcrl
es
icebp
mov
xchg
xchg
sbb
pop
jb
imulb
push
push
ja
adc
push
push
neg
movsl
bound
int
jl
add
lock
add
test
clc
xchg
scas
test
sbb
mov
xchg
mov
jle
adc
adc
and
sbb
or
in
mov
movsb
cmp
push
insb
mov
scas
cmpsb
filds
es
pop
popa
aad
cltd
xchg
jp
ficompl
popa
mov
jae
add
insl
mov
loope
or
iret
es
lds
sarb
mov
insl
mov
cmp
or
imul
sub
xor
dec
divb
pop
mov
das
jl
lret
ficoml
sti
xchg
cwtl
ret
loope
push
sbb
out
mov
lds
mov
incb
xchg
fcoml
popa
adc
imul
std
lea
out
xchg
cmpb
mov
xor
jae
mov
jecxz
jno
iret
adc
xor
pusha
ret
jo
and
mov
scas
push
outsb
adc
pop
aad
bound
lock
nop
and
sbb
mov
xor
pushf
mov
push
xor
out
cmp
xchg
pop
mov
pop
movsb
pop
mov
lock
dec
sbb
pop
lock
xor
ret
sarb
push
fs
adc
sbb
lcall
ret
lods
push
push
lcall
cmp
cmp
mov
lea
mov
sub
cli
jge
inc
mov
hlt
sub
test
ret
clc
cmp
movb
or
insb
inc
adc
fisubl
loopne
pushl
cmp
mov
fbstp
test
pop
pop
int
cmp
xchg
test
aaa
rorb
pop
sbb
call
xchg
sbb
push
xor
sahf
nop
sbb
mov
cmc
insb
pop
inc
fistl
cmc
rcrb
inc
inc
out
movsb
dec
sbb
pop
mov
cmc
dec
fmuls
dec
lods
jb
mov
enter
imul
test
mov
iret
mov
arpl
jae
jp
arpl
or
push
rorb
daa
push
xchg
ss
lahf
sub
pop
cltd
imulb
arpl
cmp
addl
and
leave
and
je
xchg
mov
mov
rcrb
mov
test
ret
in
push
pusha
bound
loop
maxps
mov
or
ret
insl
mov
es
cmp
sbb
mov
lock
inc
inc
xchg
jne
mov
test
cmp
loopne
fwait
push
jmp
mov
cmp
fidivrs
fs
mov
push
ja
pop
xchg
dec
shlb
movsb
mov
aaa
lea
popa
mov
mov
data16
and
stos
and
pop
lods
pop
jge
pop
lret
mov
cltd
mov
loop
mov
std
dec
aas
pop
arpl
jns
sahf
jge
loope
mov
jl
mov
and
dec
inc
cmp
xor
or
sahf
mov
xor
push
push
and
fwait
xor
xor
mov
and
xor
mov
or
test
adc
les
leave
pop
adc
gs
or
pop
and
jmp
adc
inc
push
into
mov
push
jp
push
pusha
out
out
pop
insb
lods
push
sbb
push
xor
mov
dec
outsl
lcall
jg,pt
jb
jne
cwtl
sub
fcompl
stc
or
sub
xchg
mov
push
sbb
fdivrl
xor
sti
jb
pop
mov
and
mov
add
arpl
push
dec
jl
push
push
rolb
push
and
pop
mov
push
xor
adc
mov
push
icebp
and
maskmovq
testl
enter
pop
dec
test
lahf
mov
inc
addr16
rcll
pushf
xchg
cmpsb
mov
das
call
cs
mov
test
rcll
push
or
mov
pop
lods
pushf
scas
mov
xor
sti
in
jg
mov
mov
add
pop
and
shlw
pop
jb
movsb
movsb
lock
xchg
xchg
push
jge
in
dec
jmp
xchg
fwait
mov
mov
loopne
push
test
inc
inc
lahf
jbe
imul
xchg
popf
pop
sti
dec
sub
xorb
testb
scas
push
xchg
xrstor
adc
aas
js
sub
xchg
push
jg
and
mov
ljmp
data16
shll
pop
mov
and
push
xchg
mov
sbb
lret
out
mov
jecxz
or
mov
fisubs
das
mov
punpcklbw
sub
cwtl
test
push
clc
and
adc
aad
stos
inc
mov
leave
mov
je
and
ss
lahf
jno
push
dec
nop
or
push
pop
inc
scas
cli
push
inc
in
xchg
fs
sub
inc
lock
pop
lcall
lahf
dec
fsubr
icebp
ja
jns
xor
push
in
ficompl
and
mov
sub
xchg
ds
outsb
fistl
pop
cmpsb
sub
and
lret
cmp
push
and
sbb
inc
push
aas
inc
lret
outsl
xor
jmp
inc
imul
stos
cmp
mov
js
and
pop
push
movsl
mov
adc
mov
cs
and
sbb
or
and
stos
movsb
jnp
stos
inc
pusha
lcall
dec
adc
push
xchg
mov
clc
fisttpll
rol
fs
enter
gs
outsb
test
dec
mov
add
jne
fildll
dec
cmp
xlat
cmpsl
fldenv
jecxz
inc
pop
negl
pushf
mov
mov
out
mov
imul
mov
xor
and
push
pusha
cld
jle
sbb
inc
and
mov
xchg
in
inc
or
and
psubw
and
in
inc
pop
lahf
push
fwait
imul
fldt
loope
sub
loopne
mov
mov
push
std
sbb
and
sbb
jae
sbb
sbb
xchg
jne
leave
cmp
sahf
scas
bound
jle
ds
stos
js
scas
mov
hlt
push
roll
adcb
sub
scas
and
jmp
cmp
cmc
mov
pop
and
into
loop
mov
jne
popa
fsubrl
pop
xchg
dec
adc
cltd
cld
jns
pop
icebp
lock
hlt
fcomip
fsubrs
mov
inc
aaa
mov
shrl
xchg
jns
sbb
xchg
scas
fisttpl
add
adcb
pusha
data16
cmpsb
cli
out
neg
cmp
mov
jp
dec
cmp
dec
pop
sub
pop
mov
jle
lock
hlt
rsqrtps
push
andl
cmp
ret
andb
fsubs
adc
cmp
shl
sub
sub
mov
aas
stos
and
inc
mov
mov
das
inc
jle
mov
or
adc
sub
xor
into
sbb
shll
mov
add
leave
mov
and
adc
cmp
jbe
out
ss
cmp
movsb
int3
dec
dec
test
adc
mov
gs
sbb
sbb
or
imul
cmp
pop
mov
jg
xchg
test
sbb
adc
jmp
lods
aaa
xor
ja
push
mov
roll
pop
mov
adc
loope
add
mov
jmp
push
sub
pusha
pop
movsl
sbb
out
xchg
xor
fisubrl
and
and
pop
std
jle
sub
mov
ret
stc
aam
mov
inc
xchg
xor
push
jmp
adc
cmp
dec
jnp
scas
out
inc
scas
mov
jne
adc
pop
inc
xlat
cld
fsubrl
push
or
fcmovu
in
test
adc
mov
push
fidivl
mov
add
pop
lods
cwtl
sbb
and
cmp
pop
outsb
adc
movb
out
lds
mov
dec
out
cmp
xchg
addr16
xchg
test
cmp
sahf
out
cmp
popf
xchg
js
inc
push
push
rcll
xchg
fidivs
mov
push
pop
rcl
stos
aam
pusha
mov
xchg
or
inc
jae
das
adcb
lret
push
ret
push
dec
fsubrl
push
and
pop
jo
push
insb
popa
or
dec
inc
bound
jbe
mov
sbb
add
push
add
sub
mov
cwtl
jno
push
pop
imul
adc
mov
ss
push
ffreep
es
popa
and
js
pushf
and
int
and
out
ljmp
hlt
orb
fidivs
jae
and
aam
xchg
xorb
mov
mov
xchg
xlat
sbb
dec
mov
enter
mov
stos
push
sbb
daa
in
mov
shll
sbb
mov
repz
mov
es
popa
adc
mov
outsl
icebp
and
int3
xchg
jecxz
push
out
pop
dec
add
add
xchg
push
or
mov
aam
insb
dec
movsl
jle
cmpsl
stos
adcl
imul
or
cmpsb
repnz
mov
icebp
test
and
mov
or
pop
sub
sbb
xchg
or
or
test
xor
sbb
cli
push
push
insl
in
in
sub
mov
inc
stc
sahf
js
cld
in
cmpsl
mov
mov
and
fcomps
daa
push
ss
pop
and
pop
xchg
xchg
sbb
mov
jecxz
gs
clc
dec
mov
jge
push
fdivrl
ficoml
inc
xor
and
enter
fists
pop
xchg
and
sbb
push
mov
in
jp
xor
int
inc
jmp
mov
sbb
sbb
popf
movsb
shll
es
mov
xchg
and
xor
lock
xlat
in
les
dec
xchg
fdivl
and
imul
or
ss
scas
pop
stc
pop
cmpsl
cmpsb
jmp
fnop
pop
in
je
roll
aad
arpl
inc
lock
loope
jb
mov
sbb
cli
fucomip
mov
jnp
int
jae
and
inc
ja
iret
xor
iret
cmp
sbb
cmpsl
dec
mov
add
jae
push
cmpsb
xor
dec
mov
sbb
dec
stos
aas
daa
aam
adc
xor
sbb
jo
orb
scas
mov
jmp
cwtl
jno
scas
fcompl
sbb
xchg
mov
into
cmp
add
push
adc
mov
and
mov
xor
dec
cmpsb
jb
jl
adc
mov
test
adc
dec
es
jg
lods
ds
in
dec
push
popf
sub
inc
aad
imul
fdivrl
lret
repz
stos
adc
ror
sub
sub
pop
add
insl
or
adc
mov
mov
mov
push
and
loope
fwait
mov
cmpsl
push
sub
jne
xor
or
add
fsts
movsl
jae
arpl
or
and
dec
icebp
xchg
imul
mov
adc
mov
mov
lcall
out
dec
out
cmc
in
and
arpl
test
test
ret
inc
bound
dec
popa
xlat
inc
lock
in
fidivrl
icebp
mov
ret
int
scas
inc
nop
repnz
clc
sbb
add
xchg
cmc
push
and
lock
lcall
sub
jne
scas
add
sub
fwait
popf
fwait
js
or
imul
cli
fnstsw
setns
sbb
bound
xchg
lahf
lahf
mov
dec
fldl2t
loopne
push
adc
mov
dec
fsubl
push
andl
xchg
mov
stc
or
scas
stos
inc
xchg
jg
pop
jge
pop
push
add
popf
cs
jb
fidivl
ds
sub
dec
adc
shlb
mov
lds
les
mov
push
jno
mov
cmp
push
mov
dec
mov
mov
dec
mov
xchg
dec
adc
orb
xchg
jmp
and
pop
addr16
jbe
xchg
movsb
mov
cmp
pop
aam
lock
dec
and
ljmp
xor
adc
fnstsw
adc
xlat
or
push
inc
loopne
mov
lcall
bound
fnstcw
dec
stos
xor
imul
jge
dec
outsb
loope
lcall
mov
rcr
mull
mov
xor
xchg
pushf
adc
push
jb
xchg
test
adcl
dec
lock
pop
push
cltd
gs
fisubrs
mov
cmc
sub
jecxz
push
dec
rcll
cmp
and
lret
add
xchg
jge
lret
xorl
aas
cwtl
pop
pop
rcrl
add
jne
mov
loop
addr16
repz
mov
test
repnz
xchg
inc
orb
sub
mov
xor
movsb
pushf
cmp
mov
push
lock
mov
outsl
enter
shlb
jns
into
lahf
enter
pushf
stc
aam
movb
out
pop
outsl
roll
pop
jecxz
cmp
mov
and
cmp
push
mov
xchg
rol
ja
pop
outsl
movsb
push
mov
add
sub
inc
pop
cltd
in
and
shlb
daa
into
popf
push
mov
pop
notb
cmpsl
lods
xchg
mov
mov
cwtl
rcr
clc
cmp
dec
mov
cli
or
xchg
sbb
aaa
pushf
addl
dec
inc
push
shll
push
sbb
xchg
insb
cmc
sti
add
clc
fmull
movsl
in
pop
and
mov
lret
mov
push
dec
or
inc
adcb
or
pop
or
je
xchg
outsl
adc
adcl
dec
xchg
push
dec
cmp
stc
inc
pusha
lds
iret
aad
xchg
hlt
sbb
jbe
mov
pop
adc
mov
rcrl
std
stc
inc
fstpl
divl
dec
in
dec
lds
aam
mov
and
fidivl
stc
pop
xlat
out
dec
or
jl
inc
std
psrlw
loopne
inc
scas
in
xchg
lahf
push
xchg
jle
pop
sbb
fmuls
stos
incl
mov
cmp
testb
adcl
and
movsl
aaa
cld
jp
ret
sub
out
loop
sbb
cwtl
idiv
mov
sbb
into
sbb
xor
es
add
or
jnp
mov
aad
imul
cmc
and
xchg
push
cmc
mov
mov
push
adc
setno
sti
or
xchg
addr16
inc
jne
fbstp
out
lret
dec
movsb
add
sub
mov
dec
push
adc
bound
scas
pop
mov
insl
stos
lea
cld
add
push
aas
lret
and
add
mov
pop
scas
jb
add
cmp
shlb
ret
addr16
xor
stc
faddp
sbb
out
cld
iret
pop
scas
dec
push
ljmp
adc
repz
push
fisubs
ja
jmp
pop
sgdtl
movsl
pop
insb
insb
inc
dec
mov
movsl
push
mov
dec
cmp
add
lock
ss
insl
adc
add
arpl
sbb
jmp
mov
jp
stos
mov
lds
jns
and
jno
sbb
dec
sbb
and
sub
mov
pop
in
fsubrs
outsl
ret
insb
push
dec
cmpsb
push
lods
lods
mov
and
adc
lret
in
and
je
cmp
mov
jbe
outsl
mov
inc
cwtl
push
mov
inc
pop
jle
lahf
or
pop
sub
sbb
cwtl
icebp
push
in
in
mov
fwait
push
test
push
paddd
loop
cs
jns
iret
movsb
imul
jl
push
addr16
out
in
test
or
push
xchg
and
cmpl
rorl
xor
inc
push
adc
cmpb
adc
into
inc
pop
push
movsb
arpl
scas
mov
sahf
loope
cwtl
mov
outsb
sbb
mov
ror
call
aas
add
lahf
repz
dec
sbb
out
xchg
mov
jns
adc
test
aam
mov
xlat
jae
test
movsb
inc
mov
adc
pop
int3
mov
sahf
sbb
sahf
dec
ss
fstps
rol
pusha
bnd
sub
xchg
pusha
out
testl
js
lock
test
inc
outsb
je
out
push
xchg
cli
sbb
pop
mov
push
pushl
mov
repz
in
dec
or
inc
jmp
mov
pop
sub
subb
jmp
loopne
jmp
sbb
clc
jge
and
into
pop
sub
push
test
mov
pop
pop
xor
rorb
sub
cmp
call
dec
popf
jge
fsub
aam
mov
or
cmp
adc
notl
jb
je
adc
push
push
mov
pop
lods
lahf
rolb
es
into
mov
jnp
dec
and
aam
or
pop
cmpsl
add
out
nop
cld
pop
icebp
push
int3
or
mov
add
inc
ss
pop
enter
or
jle
or
out
adc
mov
testl
mov
jns
jb
cmpb
loope
fisttpll
test
adc
adcl
cmp
lods
roll
test
adc
std
inc
adc
test
imul
push
sarb
jmp
pop
repz
mov
es
dec
xor
xchg
loopne
in
aam
insb
andl
xor
jo
cmp
xlat
ret
out
xchg
mov
xchg
mov
lcall
in
sbbb
inc
sbb
adc
movsl
sbb
divb
mov
mov
jnp
pop
or
mulb
adc
sub
mov
jae
xchg
mov
push
movsb
in
pop
xchg
outsl
sbb
clc
loopne
xchg
ss
cld
aad
jge
rclb
outsb
jbe
mov
sub
sub
int3
pop
inc
add
dec
mov
adc
in
movsl
jecxz
fiaddl
xchg
inc
xchg
mov
xchg
inc
fistl
out
jecxz
int3
or
adc
push
push
inc
inc
mov
jns
adc
cmp
jmpw
push
jle
repz
jae
inc
inc
shll
mov
add
or
xchg
jbe
mov
and
mov
mov
inc
popa
nop
cmp
shr
cmp
mov
stc
xor
sub
xchg
jne
imul
sub
inc
lea
pop
or
or
loope
xchg
movsl
hlt
movsb
adc
jo
inc
xchg
push
mov
push
int
push
adcl
or
add
xchg
ds
pop
decl
mov
movsb
cmpb
jo
popa
sbbl
or
or
nop
das
pusha
rcr
sbb
pop
aam
or
je
cld
jnp
sbb
mov
movl
rcr
cmpsl
imul
sbb
and
xchg
sbbb
repz
xorl
pop
cmp
mov
cmp
jl
std
and
movsl
pop
les
aas
inc
adc
loope
cmp
into
imulb
icebp
in
inc
std
lock
pop
repnz
pop
sub
repnz
loopne
mov
les
cld
jp
adc
in
push
das
push
arpl
lret
xorl
call
sub
insl
xchg
mov
aas
jge
jge
or
mov
ret
mov
inc
mov
or
jbe
aam
and
inc
bnd
mov
int
or
jle
ret
push
or
fnstcw
lods
push
dec
rcrb
stc
fldl
mov
xor
sub
or
ja
mov
fbld
mov
out
mov
or
push
inc
push
lock
pop
sub
insl
ficompl
in
fbld
lret
xchg
clc
js
cwtl
mov
mov
in
fimuls
xor
rclb
jo
dec
icebp
insl
push
hlt
mov
mov
and
pop
jmp
cmp
fcmovnu
adc
outsl
xor
sbbl
sahf
cld
mov
inc
enter
mov
cmc
fsubp
bound
jmp
aam
push
pop
pop
add
cmp
lods
dec
mov
adc
mov
mov
jp
xor
xor
shrl
into
bound
in
jbe
push
icebp
sti
and
jbe
mov
adc
xor
pushf
add
or
loop
or
pusha
ds
push
lcall
jp
aad
sbb
hlt
inc
mov
or
mov
and
xchg
jns
push
sbb
ss
jp
mov
mov
cmp
lret
jnp
and
fcomp
add
inc
mov
xor
sbb
push
jno
sbb
sbb
in
xchg
dec
or
push
aas
aaa
pop
push
pusha
xor
movb
or
popf
push
cmp
in
data16
pop
pop
pop
mov
jno
leave
mov
jno
cmp
or
add
out
adc
mov
inc
into
sahf
icebp
scas
popa
es
inc
push
and
jp
out
cmc
jmp
adc
cmpsb
xor
cmc
insl
and
leave
fistl
pop
push
call
adc
cmp
jne
cmp
ret
and
push
in
add
cs
andl
insb
mov
test
push
scas
pop
les
icebp
clc
jbe
push
jb
push
mov
adc
shl
inc
mov
jne
jae
aad
push
mov
rcrb
xchg
adc
sbb
les
jne
inc
data16
das
sub
cmp
pop
addb
dec
jg
insl
sbbl
sub
fiaddl
or
sub
faddl
int
cmpsl
mov
pop
inc
mov
enter
mov
mov
and
outsl
stos
loopne
mov
inc
js
stos
mov
xorl
xchg
cmp
movsl
popa
lock
add
mov
add
push
out
mov
cmpsb
pop
push
js
mov
jp
inc
shl
dec
push
stos
cltd
or
lods
insb
xlat
loop
sub
punpckhdq
das
push
addb
jmp
es
mov
pusha
ja
pop
test
and
mov
dec
insl
cmpl
icebp
lods
fwait
push
mov
mov
stos
or
adc
xchg
mov
jle
out
push
cmpsl
sbb
sahf
mov
test
cmpsl
lret
cmp
mov
sub
flds
mov
fs
int
add
inc
mov
jl
pushf
mov
inc
out
fistpll
mov
mov
xchg
xor
inc
push
xchg
and
scas
push
xor
stc
pushf
ljmp
cltd
es
mov
add
inc
test
sub
pop
shll
jp
leave
xchg
push
lret
stc
inc
or
popf
or
loopne
daa
hlt
mov
insb
dec
testl
adc
sub
jo
add
xlat
test
dec
or
loopne
rorb
popa
fcmovbe
push
and
cmp
add
addr16
mov
xlat
loopne
jl
leave
push
pop
push
rcll
leave
jns
cmpsb
sbb
aas
mov
and
xchg
and
rorb
test
dec
rcl
adc
inc
pop
lcall
mov
xor
dec
jns
pushf
xlat
popf
lds
movsl
push
cld
add
add
pop
pop
lahf
mov
jmp
fisttpl
int3
sbb
dec
outsl
out
mov
insl
dec
sub
jle
adc
xor
mov
push
aad
arpl
push
loopne
hlt
pop
adc
outsb
dec
pop
mov
add
mov
test
dec
jns
mov
popf
xorl
xor
jecxz
sub
jle
and
xor
xor
fs
mov
pop
int3
cmp
sub
sbb
sub
jle
jb
bnd
xor
pop
loop
xlat
xchg
aad
pop
stc
mov
xor
imul
jecxz
outsb
std
cmpsl
int
mov
dec
mov
xchg
or
sti
sub
ficoms
dec
out
pop
and
mov
adc
and
adc
xor
inc
out
xlat
xor
clc
xor
cmp
ja
pop
out
insl
sbb
mov
std
aas
sti
repz
in
mov
scas
pop
mov
loopne
pop
testb
cmp
pushf
sti
mov
mov
or
scas
or
pushf
std
ljmp
jbe
jg
jbe
sub
add
jecxz
push
out
dec
call
mov
setnp
cmp
push
ret
and
int3
rcrl
pop
stos
pop
mov
out
lret
shlb
in
adc
int3
cltd
rclb
fdivrs
adcb
mov
ret
flds
dec
add
mov
leave
aam
bound
push
fisubs
loopne
shrb
cld
test
lret
mov
sbb
int3
jmp
imul
lea
arpl
pop
mov
lock
mov
out
pop
adc
in
add
mov
pop
xacquire
nop
cwtl
dec
cld
addr16
sbb
cmp
cmp
int3
fnstcw
lea
xchg
sub
cmpsb
adc
stc
inc
mov
notb
nop
xchg
pop
test
bnd
sbb
jo
jbe
sbbl
ljmp
aam
pop
std
notl
xor
ljmp
dec
hlt
es
addr16
clc
ja
cwtl
fs
insl
pop
xchg
mov
mov
fdivr
and
ret
insl
cwtl
mov
imul
mov
dec
insb
cli
fimuls
bound
mov
push
movsb
xlat
dec
arpl
out
or
lods
cmp
into
repz
xor
cmp
adc
mov
test
push
or
dec
mov
notb
out
push
jne
add
add
mov
pop
sub
cli
mov
jle
imull
scas
cmp
nop
inc
jbe
addb
inc
add
jo
and
jnp
mov
or
imul
cmp
in
pop
jae
sbb
lds
lods
movsl
cmp
jb
sahf
mov
mov
push
lret
cld
or
sbb
aas
dec
pushf
fsubr
not
xchg
mov
test
mov
call
hlt
cmp
adc
mov
dec
dec
fcmovnu
dec
repz
xchg
push
mov
mov
sahf
out
push
cmp
xchg
fwait
mov
mov
mov
popf
movsl
mov
pop
pop
sub
and
in
ljmp
dec
int3
push
ret
cmp
jnp
sub
jge
push
int
or
xchg
sub
popf
inc
pushf
jmp
das
ret
fcomp
mov
stos
in
lcall
shrb
mov
lods
scas
inc
in
cmp
add
jo
xlat
scas
cwtl
xor
addl
xor
sub
sbb
das
add
cmp
cmp
inc
cmc
stos
cmp
aaa
inc
inc
shlb
mov
sti
add
stc
loop
push
mov
xor
xor
lcall
mov
xchg
shrl
inc
dec
test
and
ret
iret
or
and
test
sub
cmp
cld
jno
test
mov
ficomps
std
inc
sti
cmp
adc
ror
xor
jno
lods
mov
fsubl
jns
cwtl
repz
xor
jns
inc
icebp
lods
xor
sbb
adc
fmuls
jnp
dec
mov
scas
sarl
mov
and
jl
hlt
jmp
xchg
fcomi
iret
arpl
or
pop
add
test
push
push
or
adc
fisubs
sbb
pop
pop
adc
sub
pop
sub
in
test
lret
pop
xor
cmp
mov
pop
dec
jb
sbb
fdivr
jno
inc
je
stos
mov
sub
xchg
pop
or
jle
sbb
repnz
jnp
push
inc
dec
lods
cs
leave
adc
sub
aam
fisubl
dec
adc
lahf
out
cld
cmp
pop
mov
mov
pop
insb
cmp
ja
cwtl
fcmove
stos
adc
sub
lock
mov
outsb
daa
lock
in
fwait
inc
mov
lcall
xchg
popa
bound
mov
mov
fdiv
lahf
mov
rcl
xchg
xor
mov
xor
scas
xor
or
loop
mov
fcmovu
je
ficoml
out
pushf
add
fs
xchg
mov
jne
mov
jmp
lret
dec
push
ret
pop
inc
adcl
pop
adc
push
adc
rorl
jg
jmp
or
inc
mov
inc
dec
push
ret
popf
sbb
pop
shr
and
mov
mov
cmp
arpl
cmp
xchg
out
cmp
push
pop
mov
testl
lret
jge
mov
leave
testl
std
in
cli
mov
inc
dec
cs
js
dec
cwtl
or
imul
sbb
cmp
mov
fiadds
popfw
push
mov
xchg
xor
rorb
or
jl
push
jp
mov
stc
ja
add
sbb
cli
sub
cmp
cmp
loope,pn
pop
or
sbb
dec
mov
xchg
movsl
clc
mov
push
jp
test
fistl
pop
jg
push
test
outsl
into
in
cmc
lret
push
fnstsw
pop
sub
in
movsl
imulb
push
jns,pn
ret
js
xor
addl
neg
pop
int
add
dec
mov
test
inc
pusha
pop
mov
aaa
pop
mov
jne
ss
mov
mull
ljmp
mov
pop
sub
lret
inc
mov
int
inc
mov
int
lret
aas
dec
stc
aaa
sub
adc
push
inc
xor
sbb
ljmp
push
hlt
es
iret
fimull
jo
push
pop
in
fiadds
and
sub
scas
pop
jnp
dec
repnz
jo
and
repz
push
ja
aas
pop
cmp
pop
and
xchg
inc
pop
insb
push
je
push
adc
test
aam
sti
mov
popa
mov
xor
push
ret
and
jge
scas
fsubrl
int
cs
xchg
jp
stc
frstpm(287
insb
mov
mov
sub
cld
jg
mov
popf
mov
sbb
xchg
mov
xor
mov
dec
andb
in
mov
inc
xchg
or
js
leave
mov
mov
mov
mov
mov
xchg
pop
push
rolb
das
and
cld
push
push
mov
add
in
mov
lcall
xchg
jle
jmp
pop
jnp
fnstsw
xor
push
mov
icebp
aad
fwait
dec
and
fnsaves
jnp
cli
cwtl
adc
jnp
out
mov
sbb
insb
sahf
test
jge
sahf
cmpsl
dec
repz
test
mov
cld
cmp
test
mov
frstor
test
add
mov
jb
fnstcw
inc
mov
mov
mov
inc
mov
sti
imul
insl
enter
lods
ret
or
pop
push
push
adc
jnp
inc
icebp
stos
sbb
mov
or
jl
pop
scas
mov
lds
sbb
add
jle
mov
fcmovnu
xlat
es
inc
pop
mov
inc
add
jno
insb
aam
andl
adcl
shlb
out
mov
mov
sbb
jecxz
sbb
mov
jne
scas
loop
scas
cmp
test
fmull
sbb
push
insl
push
pop
mov
adc
ja
and
push
sub
sub
xchg
push
ds
mov
arpl
dec
std
popf
mov
loopne
push
jmp
cli
mov
jp
pop
bound
ret
mov
adc
or
out
lods
adc
pop
mov
xlat
dec
mov
in
ds
fiaddl
xchg
push
push
xor
jns
shlb
pusha
test
pusha
lret
jle
mov
or
mov
dec
cmp
iret
lock
ficompl
mov
jmp
push
int
add
movsb
dec
pop
notl
or
mov
jns
mov
ja
fs
inc
lods
mov
xchg
jns
gs
outsb
mov
test
ret
inc
jae
adc
hlt
jp
jle
or
add
lcall
hlt
mov
add
lea
mov
lret
popa
imul
outsl
je
and
sub
subl
mov
add
xor
pop
out
cli
jb
dec
pop
outsl
cmp
ljmp
mov
cmp
and
dec
icebp
dec
cmp
lret
sar
and
mov
and
inc
push
cmp
insl
push
data16
sub
xchg
dec
pop
enter
lahf
pop
pop
neg
rorl
sub
rclb
repz
aad
cmovge
mov
cmp
jmp
pop
sbb
or
xchg
push
jge
sub
sbb
jmp
std
add
cmpsb
test
pop
pop
cmp
sbb
fidivl
popf
jle
sbb
ljmp
mov
les
popl
movsl
inc
in
lea
sbb
aaa
ret
ret
jns
add
in
dec
and
xlat
aam
mov
imul
mov
pop
xchg
movsb
aad
int3
xchg
imul
and
les
lret
mov
xor
push
or
xchg
jecxz
aaa
mov
repnz
icebp
add
inc
mov
aam
into
xchg
push
movsl
inc
jl
test
les
sbb
add
daa
sbbb
dec
stos
sub
dec
adc
std
lods
movsb
lahf
inc
adc
sbb
nop
stc
nop
fisubs
scas
push
xor
shr
xchg
shrl
mov
sarb
out
je
fsubrs
sti
call
xor
stos
push
int
jns
bound
into
or
jns
int3
mov
jl
push
sbb
sar
jo
cs
jbe
mov
hlt
adc
inc
pop
mov
daa
andl
test
inc
call
mul
adcb
lret
repz
idivb
pusha
mov
cli
das
inc
fsubs
jecxz
bound
pop
ss
stc
fsts
mov
arpl
mov
mov
add
aad
adc
call
decb
jge
test
movsl
xchg
add
push
jbe
mov
mov
xor
lcall
mov
xchg
imul
xchg
bnd
push
pop
add
rcrl
ljmp
push
adc
mov
cwtl
mov
movsl
aas
xchg
add
shr
cmp
inc
leave
rcrb
scas
mov
mov
xchg
cmpsl
pop
icebp
adc
stos
cmp
pop
lods
repz
in
xor
adc
jmp
in
and
push
mov
lahf
or
add
cmpsb
or
sti
mov
cmpxchg
add
jge
cltd
push
outsb
push
into
ret
fnstenv
push
add
mov
jns
cmp
sub
push
popf
mov
sbb
jecxz
add
fisubrl
push
pop
xor
or
psubb
push
scas
filds
xchg
arpl
mull
ficomps
mov
sbb
bound
and
mov
out
sahf
add
mov
test
and
xchg
and
and
out
ss
out
sti
push
mov
or
mov
dec
shlb
lods
jne
sbb
or
sti
add
call
cmp
fimuls
mov
ljmp
aad
cwtl
daa
xor
pop
mov
inc
pop
adc
sub
xor
dec
or
jecxz
lds
aad
cmpsb
xchg
mov
sbb
cmp
mov
scas
mov
mov
pop
push
es
add
ljmp
cmp
jb
inc
cmp
mov
mov
adc
nop
xchg
imul
arpl
add
xchg
inc
sbb
out
push
mov
lret
dec
jno
push
filds
xchg
sub
aam
fwait
mov
enter
pop
xorl
mov
sbb
cmp
pop
cmp
jge
lock
outsb
jecxz
mov
ja
pand
sub
add
clc
test
lods
cmp
stc
std
and
stos
pusha
or
aaa
xchg
int
jg
jo
inc
ret
sbb
sti
loope
pop
xchg
cmp
xchg
lock
add
iret
mov
lods
inc
repz
xor
out
scas
rcrl
in
jecxz
repnz
xor
mov
loop
xchg
imul
sub
push
xlat
or
push
test
in
insl
sub
test
sbb
cmp
mov
mov
push
pop
pop
das
mov
ror
jb
pushf
pop
cli
push
sbb
pop
xor
pop
or
inc
inc
insb
dec
shrb
mov
sub
xchg
push
aas
mov
arpl
push
xor
mov
addr16
fsubl
mov
jmp
jge
inc
jnp
xchg
inc
nop
enter
dec
aad
pop
popf
xor
cmp
mov
mov
xor
insb
xchg
fistps
ret
mov
mov
add
cmp
addr16
leave
repz
mov
and
mov
lods
loop
inc
jno
add
mov
ret
pop
icebp
mov
jle
and
add
mov
daa
add
ret
xor
push
cmp
fidivrs
push
lods
cli
fcoml
mov
aas
sbb
xchg
aad
add
cmp
outsb
dec
sahf
mov
sti
push
add
aam
shll
ret
adc
inc
or
pop
test
cld
cmp
pop
jno
mov
add
dec
imul
jecxz
test
mov
mov
inc
inc
fmuls
push
rolb
jne
push
dec
mov
and
xorb
xor
inc
inc
test
in
fcmovbe
outsl
dec
hlt
xor
jl
inc
mov
ror
imul
je
insb
lcall
jnp
rol
frstor
or
dec
adc
fcoml
insb
iret
inc
imul
xor
and
xor
int
pop
in
or
sarl
cmp
inc
pop
adc
push
xchg
xchg
pop
scas
push
push
adc
and
jno
or
in
data16
or
std
scas
arpl
dec
adc
xor
lds
lock
enter
aad
sbb
sbb
xor
clc
pusha
cli
pop
adc
jae
movsb
lahf
mov
xchg
dec
outsb
ljmpw
popa
mov
jbe
aaa
dec
inc
pop
push
fs
in
imul
enter
iret
sbb
inc
outsl
mov
repnz
mov
mull
aas
mov
mov
call
mov
push
in
dec
stos
adc
mov
shrb
mov
mov
lods
call
inc
in
xchg
and
loopne
or
je
ss
aaa
push
add
adc
insb
das
int3
jl
or
test
push
mov
dec
ljmp
xchg
push
sub
pop
mov
stos
jae
mov
sub
mov
dec
pusha
aad
inc
cmc
mov
push
fxch
test
data16
mov
btc
mov
in
lcall
pop
push
cs
std
pop
pop
sub
mov
pop
pop
sbb
mov
pop
and
add
lcall
testb
je
add
mov
dec
or
scas
xchg
push
repz
or
addr16
pop
or
dec
mov
aam
shl
and
jge
lret
cmp
push
dec
push
mov
loop
mov
sbb
push
nop
push
jle
sub
inc
inc
aad
loope
int
xor
ss
mov
cmpsb
mov
mov
jae
push
aad
cmp
das
stos
sbb
jmp
movsl
jnp
inc
cmp
sbb
cltd
mov
push
pop
dec
pop
das
ret
jge
inc
xlat
sbb
aas
gs
or
fisubs
pop
dec
cmovo
in
lret
sub
test
xchg
sub
inc
adc
test
hlt
inc
mov
into
adc
idivb
shll
inc
stos
adc
sub
js
icebp
push
fwait
pusha
xor
xor
js
push
inc
les
pusha
int3
sbb
mov
cmp
dec
pop
add
fwait
cwtl
add
sbb
xchg
jecxz
mov
dec
add
sub
idivb
push
xor
imul
lea
pop
add
sub
xchg
fidivrs
mov
imul
push
mov
jp
js
shl
sub
jbe
mov
xchg
jne
xor
popf
push
imul
jno
mov
jno
out
pop
pop
dec
ret
push
jb
push
or
or
dec
mov
xchg
xchg
push
jns
add
hlt
push
cmpl
xchg
xor
pop
bound
add
dec
mov
aad
push
cli
out
push
sarb
push
les
xchg
push
cmp
jl
xor
push
pop
xorb
ret
cltd
push
in
out
gs
in
push
xchg
es
push
imull
dec
mov
sbb
popa
xchg
pop
shll
fistpl
insl
cltd
xor
mov
jnp
cwtl
xchg
cmpsl
mov
scas
xchg
cmpsl
mov
loop
cmp
fsub
cli
mov
mov
mov
aas
cmp
sbbb
cmp
cmp
pop
mov
inc
pop
push
inc
or
sub
testb
dec
adc
xchg
notl
pop
pop
xorb
add
mov
vmovaps
fisttpl
or
xchg
enter
iret
cs
adc
sbb
addb
pop
cmp
push
mov
xchg
lds
or
rorl
mull
movsb
shrb
adc
lcall
fwait
push
out
out
add
mov
out
mov
les
push
fiadds
xor
jbe
jo
sbb
lock
fsubrl
pop
mov
enter
mov
mov
pop
mov
fimull
vpsadbw
lcall
adc
push
shrl
adc
xor
dec
jle
pop
ss
push
push
mov
aas
out
push
scas
mov
add
test
cmp
insl
add
mov
sub
loope
push
adc
scas
xor
leave
in
andl
stos
mov
lahf
daa
pop
inc
aam
inc
adc
lock
xor
push
js
ficompl
cld
test
push
mov
nop
xchg
lock
push
sahf
lahf
push
testl
lahf
js
or
jle
stos
push
xor
add
outsb
jle
gs
dec
iret
leave
lock
fdivl
mov
orl
xorb
jnp
sub
pop
or
out
xor
jns
and
dec
jl
push
out
loopne
imul
jle
ret
adc
in
stos
inc
aas
or
test
cs
inc
mov
pushf
push
repnz
or
inc
sbb
es
aad
jp
daa
pusha
hlt
stos
and
mov
imul
xchg
or
xchg
fadd
mov
dec
or
loopne
sbb
or
pop
dec
out
adc
mov
cld
dec
inc
jle
stc
ljmp
jne
sbb
leave
mov
mov
adc
out
jb
mov
sub
or
push
lret
es
popa
jns
loopne
cltd
xchg
sub
push
insl
push
cmp
xor
rclb
jp
mov
or
dec
bound
dec
mov
dec
and
mov
push
es
or
ss
addr16
push
fdivl
movsb
push
clc
imul
test
les
push
dec
xchg
pop
push
mov
push
push
shrl
aad
cld
adc
out
sti
decb
dec
aam
adc
push
jns
add
mov
mov
xchg
add
xchg
pushf
mov
mov
push
jnp
cmp
push
clc
icebp
ret
push
rcl
out
sahf
mov
ja
scas
pusha
int
mov
sub
mov
sub
mov
jae,pn
pop
jl
fmull
xchg
xor
shlb
add
sub
mov
inc
fcoml
js
jo
dec
jp
scas
jne
dec
loopne
mov
stos
or
pop
pop
stos
stos
inc
mov
add
negb
test
fnstcw
cltd
imul
mov
xorb
inc
jae
sarb
dec
inc
push
and
ds
sahf
mov
inc
mov
xor
pop
hlt
cs
push
sti
out
jle
insl
inc
xlat
repnz
mov
ljmp
lods
lret
add
jmp
in
push
das
xor
leave
push
aad
fprem1
arpl
js
pop
xchg
pushf
and
sti
or
mov
ss
push
repnz
loopne
insb
js
hlt
mov
imul
sbb
bound
movsb
sub
in
sub
mov
mov
add
adc
vcvtsi2sdl
dec
shl
mov
jnp
and
lods
insb
movsl
pop
cld
shl
aam
xor
jnp
leave
jo
or
cmpsb
aam
inc
bswap
sub
dec
mov
icebp
mov
jmp
jns
addr16
cmpsl
jnp
imul
fdivs
mov
movsl
push
pushf
stc
sub
addr16
sub
mov
add
pop
movsl
insb
shl
jnp
push
jg
sub
mov
xor
dec
popf
outsl
push
and
mov
stos
cmp
inc
std
xor
mov
dec
popf
les
addr16
inc
mov
arpl
out
push
gs
pop
lahf
and
sahf
aas
lods
jne
mov
add
push
push
cmp
out
dec
mov
pusha
xchg
mov
das
sar
add
rcrb
sub
pop
add
sub
jns
decb
fiaddl
ret
test
fidivrl
or
or
scas
aam
jmp
sub
out
insb
cmpsl
pop
rcr
mov
lods
loope
pusha
jnp
and
mov
mov
in
pushw
ret
add
add
les
subl
xchg
add
in
push
xchg
add
mov
shll
jl
loop
dec
or
imul
jecxz
xchg
inc
xchg
es
stos
icebp
shr
mov
jmp
dec
add
and
xor
decl
call
ss
cmp
inc
push
xchg
dec
mov
dec
popf
daa
mov
mov
xor
mov
add
xchg
dec
cli
and
outsl
rcr
inc
outsl
mov
dec
std
in
xchg
fstpl
loopne
dec
mov
mov
daa
test
inc
mov
sub
xchg
sbb
outsb
inc
adc
push
fdivrs
rcl
xor
in
aam
mov
in
loopne
xchg
mov
data16
add
je
into
iret
xor
xchg
je
imul
test
push
es
andl
mov
jge
inc
fwait
add
xchg
in
and
addb
dec
mov
sbb
add
repz
xor
adc
or
cmp
sbb
mov
xlat
scas
push
dec
mov
mov
inc
adc
push
jl
mov
ficoml
xor
inc
stos
jecxz
push
fwait
dec
in
pop
gs
jp
leave
dec
pop
mov
fnstenv
mov
adc
add
jmp
ret
or
jae
add
je
jp
mov
mov
repnz
icebp
lds
out
push
push
js
cmp
push
or
sbb
xchg
mov
cmpsb
mov
mov
mov
pop
lds
push
aaa
adc
aaa
push
fcompl
cmp
enterw
lcall
cs
fildl
xchg
ret
in
negb
ret
dec
sarl
mov
mov
out
call
ret
pop
movsl
xor
adc
xchg
sti
movsb
cmp
test
sub
data16
daa
bound
ja
sahf
mov
dec
mov
mov
xchg
out
cmp
outsb
mov
pop
adcb
mov
inc
les
mov
loope
push
mov
lods
test
mov
inc
sbb
inc
sub
fs
jecxz
mov
sub
sahf
js
leave
out
cli
lret
cmpl
stos
push
cmp
test
add
mov
idivb
out
out
add
lock
ja
mov
out
insb
push
sub
sbb
xchg
or
push
jno
int
cs
sub
dec
nop
pop
dec
fldcw
add
mov
aaa
loope
mov
cmp
mull
xlat
push
fidivrl
cmpsb
scas
pop
ss
jecxz
je
cwtl
mov
push
imul
ja
xchg
sbb
pop
and
repnz
cmp
arpl
ret
cmpb
sub
fs
mov
leave
js
add
stos
ss
sub
add
sarl
notl
sub
jge
mov
cld
lods
in
in
add
rclb
or
push
insl
add
push
push
sti
pop
jb
mov
mov
and
mov
xor
mov
popf
leave
and
addr16
lods
sub
pop
add
sqrtps
testb
jno
jo
jnp
push
inc
outsl
cmc
dec
jo
adc
inc
jbe
or
mov
loope
in
xchg
test
ficomps
sub
fnsave
into
mov
mov
aaa
jno
add
and
pop
mov
jl
pop
sub
pop
jb
out
xlat
inc
jmp
sub
call
out
stc
jl
sbb
mov
cmpl
fisubrl
imul
gs
out
pop
call
movsl
sbb
inc
push
rcrl
aam
pop
outsl
in
mov
fiadds
test
xchg
push
mov
in
jecxz
outsl
test
and
sbb
mov
imul
outsl
addr16
push
daa
lds
fcmovnb
pop
add
xlat
popf
enter
push
mov
sbb
sarl
scas
sbb
adc
mov
lds
add
sbb
add
imul
cmp
js
ucomiss
mov
or
cli
sub
push
and
scas
insb
fnstcw
xlat
push
or
mov
addr16
out
movsl
xor
sbb
pusha
and
in
lds
sbb
orl
mov
loope
js
lods
pop
dec
mov
outsb
and
fisttps
cmp
or
imul
push
movsb
or
mov
or
fidivl
cs
aaa
arpl
jle
mov
repz
popf
je
pop
cli
inc
hlt
xor
jecxz
rol
repz
test
push
addb
xchg
push
mov
je
divl
stos
loope
mov
xlat
inc
subl
push
dec
or
inc
lods
pop
pop
test
sbb
mov
in
xchg
adc
or
mov
add
jl
inc
arpl
sahf
stos
je
xchg
in
adc
and
movl
shrl
std
daa
into
mov
popa
loope
leave
xor
nopl
dec
std
lods
aam
ja
sub
adc
or
movsb
push
add
pop
and
cmp
add
mov
xor
mov
repz
arpl
subl
add
mov
add
lea
xor
aaa
je
jo
mov
aaa
cmp
and
and
pop
cmpsl
xor
out
jg
out
cmpsl
xchg
sub
insl
jns
sahf
cmp
pop
xor
pop
mov
inc
add
cmp
and
fst
dec
mov
nop
test
aas
mov
sub
fwait
mov
jnp
mov
imulb
lods
mov
inc
sub
push
or
ret
arpl
data16
pop
ret
xchg
aaa
jge
push
mov
test
loopne
dec
mov
icebp
call
movsl
out
out
fadds
data16
ds
dec
mov
out
out
in
push
xor
js
jl
jp
pop
fcompp
lods
inc
dec
mov
sbb
adc
cmp
popa
cmc
and
inc
icebp
mov
std
xor
scas
scas
shlb
inc
push
std
ds
xchg
jo
jne
cmpl
cmp
adc
push
outsl
jno
jno
jge
cli
push
test
and
xchg
jne
into
stos
mov
add
fcoms
shrb
jle
les
loopne
xchg
and
aam
nop
arpl
dec
dec
lds
outsb
gs
test
lret
xchg
mov
xchg
add
mov
out
jno
and
test
xchg
pusha
xchg
cmc
int
push
sub
mov
es
sti
inc
adc
dec
ss
pop
add
enter
push
icebp
inc
mov
clc
xchg
pop
sub
fildll
scas
sbb
das
or
in
sbb
enter
sub
mov
loope
into
or
mov
adc
mov
push
fs
mov
cld
mov
cmp
or
xchg
mov
sub
xor
xor
jmp
aaa
jne
les
aaa
mov
out
dec
add
sbb
and
lods
arpl
dec
sub
daa
scas
dec
loop
or
xchg
lock
in
xor
dec
push
adc
dec
mov
insb
mov
popf
shr
adc
add
mov
popf
xor
pusha
loopne
xchg
sbb
push
sbbb
or
lods
jg
pushf
push
lcall
add
dec
aam
pop
adc
paddusb
xor
cli
xchg
and
or
xor
push
pop
pop
scas
into
decl
cmpsb
mov
aad
cld
cmp
in
mov
loop
dec
mov
ja
les
std
icebp
mull
aad
lfs
push
jno
lock
enter
bound
and
daa
push
jp
inc
push
mov
es
fcomp
jb
rorl
les
mov
clc
dec
push
adc
adc
ret
ret
xchg
xchg
cld
sti
or
mov
lahf
sbb
add
fisttpl
jge
xor
jmp
adcb
adc
scas
jns
mov
les
dec
pop
sub
adc
pushf
jb
rorl
push
stos
test
orb
and
pop
xchg
insb
mov
cmp
out
pop
fldl
imul
loopne
adc
in
addl
cmp
inc
repnz
mov
aad
ret
fstpl
mov
mov
dec
adcb
in
cmp
pop
fistl
push
das
in
inc
pop
test
test
das
mov
cmp
push
cmp
and
jecxz
push
inc
sub
mov
jo
pop
mov
push
mov
inc
lret
pop
sub
mov
cmp
push
bound
es
sarb
push
xchg
mov
test
mov
pop
sub
in
pop
pop
xor
shll
pop
aas
dec
inc
lock
adc
add
mov
adc
and
cmpsl
adc
mov
divps
enter
data16
dec
cmp
dec
dec
inc
jle
xchg
mov
jmp
mov
repnz
dec
and
mov
mov
data16
cmp
sbb
jbe
xchg
or
std
adc
pop
adc
inc
out
cltd
aas
lret
sub
dec
push
pop
sbb
mov
xorb
dec
loopne
dec
mov
inc
fistpl
scas
push
inc
fisubl
inc
insb
mov
sub
dec
mov
inc
add
movb
adc
outsb
inc
cmp
pop
fidivrs
inc
lea
jp
mov
data16
scas
dec
xchg
stc
dec
cltd
js
dec
xor
test
lret
out
add
loope
jns
add
cld
sbb
in
pop
mov
neg
shll
sti
xchg
out
mov
pop
fsubp
or
fbstp
jo
in
test
sarb
push
sbb
xlat
mov
mov
ja
pop
imul
and
or
dec
insb
iret
repz
daa
daa
insb
in
fildl
inc
js
cmc
dec
lcall
into
xchg
sbb
cmpl
push
js
bound
adc
rcr
mov
mov
lret
pop
popa
lods
sub
in
adc
inc
or
std
into
ds
sub
movsb
fstl
int3
mov
rcr
imul
inc
sbb
movsl
push
xchg
aas
je
loope
divl
mov
push
test
xchg
fucomi
sarb
es
insb
xlat
addb
cli
adc
call
movb
jbe
ljmp
mov
mov
lds
cmp
or
dec
sahf
fimull
lret
cltd
mov
loope
adc
ss
test
cld
xchg
pop
cmp
mov
sbb
sbb
xor
mov
pop
sub
fisttpl
jle
inc
jp
loope
je
cmc
dec
dec
std
stc
and
jns
pop
sahf
clc
pop
shll
pop
push
rep
and
fistpl
dec
pop
fiaddl
lea
and
jno
inc
dec
sub
cmp
addl
jle
mov
fwait
mov
outsl
push
mov
or
inc
shl
ret
dec
add
repnz
js
xchg
mov
inc
jmp
xor
xorb
stos
cmp
mov
add
pop
or
xchg
ja
xor
pop
dec
pusha
xchg
mov
mov
cwtl
dec
sbb
repnz
dec
insb
mov
mov
cli
arpl
jbe
cli
push
jecxz
shlb
pop
push
cmp
inc
xor
sahf
sbb
movsl
dec
push
mov
push
inc
mov
or
clc
fists
pop
addb
push
pushl
out
test
outsl
mov
mov
mov
insb
test
shrb
jbe
dec
sub
test
aad
int3
lahf
bound
lds
lret
jecxz
or
pop
pop
mov
sub
push
mov
inc
push
mov
add
xor
repnz
movb
mov
or
xchg
push
xchg
mov
cs
popf
mov
idiv
jae
mov
std
mov
cmpsb
mov
cmpsl
dec
inc
or
jp
fcmovne
in
outsl
dec
pop
or
sbb
outsl
and
sub
and
aas
mov
outsl
xchg
movsl
xchg
adc
jno
movsb
pop
into
jo
sahf
outsl
mov
stos
das
call
fs
dec
bound
lret
jae
mov
xor
fcoms
xor
ss
mov
dec
pop
push
push
shll
in
xchg
cld
push
or
cltd
loop
cmp
int3
mov
add
sub
mov
scas
xchg
cmp
fcomps
testl
pop
inc
inc
fidivrl
scas
adc
jmp
pop
out
xor
in
mov
int3
sub
rcrl
pop
xchg
js
jo
xor
xchg
jne
jbe
andb
shl
insl
pop
lods
stc
int
lods
cli
xor
mov
inc
std
mov
add
cltd
and
rorl
push
cmpl
push
push
out
cmp
sbb
bound
sbb
cmp
pop
mov
stos
xchg
ret
xchg
adc
in
push
je
sub
push
or
adc
sub
lret
cmc
xchg
cli
pop
rcl
repz
cmp
jns
mov
dec
mov
stc
sbb
movsb
push
add
xor
sbb
push
add
add
repz
dec
push
and
ret
aad
fnstsw
lods
or
lret
add
das
pop
xor
mov
add
sbb
fldt
jns
mov
inc
jp
jae
xor
roll
push
mov
cmc
lods
lods
gs
aad
sbb
adc
jl
andl
add
push
push
cmc
cmpb
sahf
sub
dec
daa
push
movsb
cwtl
lahf
pop
jge
out
cmp
stos
addb
shr
lods
pusha
das
in
aas
gs
lret
in
idiv
adc
js
push
nop
xchg
repnz
add
push
xchg
es
push
and
add
loopne
imul
outsb
fs
imul
sub
pop
jnp
nop
add
out
aas
sbb
cmp
push
iret
push
je
shll
and
cmp
fcmovu
fnstcw
cld
cmpsb
pop
mov
addr16
iretw
cwtl
shrb
rcrl
and
outsb
cwtl
push
lcall
sbb
pop
pop
enter
and
sub
push
dec
out
into
inc
cli
jnp
jg
test
mov
fidivl
jno
jge
repz
sbb
insl
js
xchg
dec
jnp
pop
mov
lret
and
xor
adc
ds
xchg
jb
imul
inc
sbb
scas
sbb
test
out
sar
loopne
add
int3
xor
xchg
ficomps
outsb
int
or
xor
movb
sbb
fimull
inc
pop
push
and
enter
lods
movsl
popa
xchg
mov
add
fisubl
dec
lret
repnz
xlat
imul
mov
and
push
mov
xchg
and
les
outsb
adc
in
dec
xlat
push
lahf
mov
inc
popf
jl
imul
xrelease
push
push
enter
pop
mov
ljmp
scas
mov
pop
push
aas
rcrb
inc
iret
mov
jmp
mov
je
sti
mov
les
xchg
push
fsubp
enter
dec
xchg
movsb
int3
fistl
mov
cld
rorl
or
mov
icebp
adc
add
and
mov
xor
cmp
test
mov
insb
call
xchg
push
int3
xchg
and
sub
or
push
or
mov
pusha
sbb
movsl
out
ja
das
lret
mov
inc
mov
pop
int
cld
jbe
stos
fnstenv
fistpl
fadds
dec
jbe
push
shl
pop
mov
ljmp
jb
imul
fadds
cwtl
aad
add
pop
lcall
iret
inc
cmp
dec
and
shr
out
jmp
cmp
cltd
xor
xorb
mul
test
jge
dec
cmp
jg
push
js
sbb
movlhps
imul
cli
pop
pop
cmp
lods
iret
addb
out
mov
in
lret
dec
mov
inc
ficompl
dec
lret
xchg
xchg
jbe
or
aad
xlat
xor
mov
mov
loopne
mov
cmp
push
int
outsb
jp
jbe
je
jns
pop
out
nop
aas
xchg
std
lret
rcrb
shl
fiadds
jns
in
add
mov
add
inc
xchg
jno
jo
mov
popa
std
inc
jns
orb
xor
jb,pn
push
repz
out
cli
lret
jmp
call
cmpl
cmp
push
daa
xchg
inc
sub
mov
ss
mov
lock
mov
mov
std
fimuls
adc
jle
adc
shrb
jl
shlb
fwait
adcb
dec
mov
daa
mov
cmpsb
mov
clc
mov
fcomi
sarl
int3
lods
decl
xor
clc
or
xor
in
xor
mov
lds
dec
xor
xor
xorb
pop
dec
xchg
and
ret
imul
jl
add
stos
jge
mov
clc
jae
jmp
cmc
insb
inc
cmp
lret
pop
movsl
outsl
adc
roll
add
pop
std
aaa
inc
push
lds
ret
repz
arpl
dec
cmpsb
iret
cmp
pusha
push
jbe
js
popa
pushf
loopne
or
cmp
jnp
testl
loopne
mov
cmp
mov
fdivl
xchg
test
lahf
mov
and
lods
mov
sbb
scas
sbb
into
fwait
ret
add
xor
cmp
sub
call
inc
out
jecxz
aaa
es
cmp
outsb
test
in
aam
in
jmp
imul
adc
mov
mov
pop
shrb
inc
sbbb
mov
xchg
add
xlat
mov
cwtl
adc
call
inc
dec
push
shl
ret
cltd
push
jb
popf
push
mov
cmp
mov
jecxz
shrb
xor
cld
and
sbb
mov
cmpsl
fwait
and
out
inc
or
adc
dec
mov
aas
fldt
dec
lods
test
inc
sub
lods
outsb
or
mov
lock
sbb
rcll
jb
or
mov
mov
xchg
mov
cmp
cmp
cld
int
pop
dec
xor
addr16
mov
fisubs
aad
or
xchg
out
mov
add
and
sub
js
icebp
outsl
dec
bound
mov
add
out
cmp
inc
ds
nop
rclb
idiv
mov
lds
cs
fcos
or
les
addr16
push
popf
cmp
dec
ds
inc
rclb
aas
pushf
outsl
movsb
mov
dec
add
mov
rolb
dec
aaa
mov
icebp
or
inc
or
ret
push
jg
jno
testl
shrb
mov
jno
sub
movsb
shlb
jge
cmp
mov
or
in
stc
mov
loop
fmull
xchg
leave
push
lods
sub
pop
bound
pop
popf
mov
je
jmp
dec
push
lock
fwait
repz
mov
lock
int
psubw
cmp
ja
fwait
mov
and
xchg
addb
mov
jns
lods
xor
lods
in
pop
inc
xchg
sub
mov
mov
rorb
divb
ss
cmp
jge
mov
test
repz
je
in
std
out
adc
lcall
mov
sbb
mov
lods
sbb
idivl
stos
and
jae
aam
call
adc
dec
ret
enter
add
xchg
push
lcall
and
push
mov
fisttpl
jb
out
pushf
jle
repnz
pusha
add
aam
dec
push
sti
mov
mov
inc
mov
add
out
inc
dec
cld
adc
add
lods
add
add
pop
std
push
mov
adc
test
in
pop
orl
cwtl
or
push
mov
ror
imul
loope
ss
rcl
in
cmpl
jo
push
mov
dec
jge
mov
push
insl
jb
inc
data16
addr16
lods
aad
pusha
ret
repnz
hlt
sub
push
aam
and
cmp
les
jo
jo
push
push
js
lock
dec
sti
in
jne
xor
leave
jae
or
fs
loope
test
in
lret
ljmp
es
inc
or
lret
adc
cmp
clc
push
pop
mov
in
cmpb
outsl
ja
mov
mov
test
pop
sarl
loop
popf
fucomi
fistps
push
or
inc
jecxz
pop
movsb
int
std
pop
mov
or
xchg
push
out
pop
mov
mov
xlat
sbb
rcr
mov
jmp
dec
loope
stos
mov
xchg
xchg
in
lods
out
orb
lock
inc
cmp
or
lret
sbbl
cmp
mov
int
sahf
push
ljmp
cmp
sbb
iret
xchg
mov
js
dec
mov
lea
sarb
cmp
push
xchg
into
mov
or
pop
ficoms
repnz
sub
imul
sti
popf
mov
cmpsl
mov
pushf
xchg
into
movsl
aam
add
jg
or
pop
mov
jns
testl
pop
sbb
bound
mov
cmp
add
mov
lret
pop
push
repz
rol
ror
push
or
mov
mov
adc
fadd
push
shlb
lods
daa
cltd
ret
pushf
decb
shll
push
jb
jnp
mov
push
andb
and
xchg
sbb
sbb
xor
xchg
cltd
insl
pop
pop
dec
in
adc
out
and
int3
prefetch
or
and
out
adc
cmp
cmp
pop
mov
mov
in
jp
pop
test
xchg
lahf
cmc
aas
and
dec
push
pop
xor
call
dec
jle
inc
test
es
mov
pop
xor
out
ret
adc
out
xlat
outsl
add
aam
rcrl
or
ja
test
inc
cmp
test
adc
and
sub
repz
sahf
sub
cmpsl
and
mov
call
xchg
lods
xchg
inc
adc
jns
clc
ss
movsb
mov
or
or
push
orl
or
jg
ret
sahf
lods
add
test
jnp
test
sub
aas
inc
hlt
js
xor
dec
push
shrl
jae
daa
pushf
sbbb
sbb
push
pop
cltd
or
es
xchg
cld
mov
repz
sbb
sbb
push
or
dec
cmp
pusha
stc
enter
xchg
out
xchg
mov
push
cmp
das
sahf
ljmp
sub
sub
lret
jmp
pop
dec
fs
push
fisubrl
mov
mov
push
push
not
and
dec
xchg
std
add
push
mov
cmpsb
add
mov
stos
mov
mov
jecxz
push
lcall
sahf
ds
push
repz
cmp
pop
outsl
sti
stc
or
arpl
int3
and
mov
jp
sub
push
ljmp
fadd
cmc
pop
jmp
push
test
xchg
jbe
jbe
push
ret
lcall
adcl
or
xor
test
cs
dec
in
sub
xchg
dec
or
mov
int3
cmp
daa
inc
xchg
loope
sbb
sahf
mov
outsb
sub
shlb
stc
popf
adc
mov
sbb
out
mov
xor
test
mov
and
data16
inc
xchg
inc
and
mov
shrb
fs
fnstsw
loop
pop
cltd
aaa
dec
cmp
inc
sub
adc
mov
fnstcw
xlat
lcall
in
pop
call
fdivp
xor
aaa
dec
mov
jno
testb
xchg
pop
sub
cwtl
inc
sub
xchg
add
bound
mov
jp
dec
jne
loope
pop
out
inc
xor
pushf
inc
scas
pop
fldl
cltd
jle
nop
push
ljmp
push
jle
out
push
or
or
jno
cld
loop
mov
mov
pusha
mov
jbe
inc
push
mov
out
xchg
jge
cs
cld
xor
and
add
mov
shr
loop
mov
pop
inc
popa
mov
sbb
jle
mov
ljmp
stos
jno
insl
add
sub
fsubr
dec
push
into
sub
lds
test
pop
lret
mov
adc
aas
pop
mov
enter
pop
dec
adc
sbbl
pop
or
adc
daa
lcall
movsb
and
jno
movsl
mov
in
push
xor
cmpsb
add
inc
fs
mov
fucomp
fwait
out
in
or
cli
cld
aaa
out
mov
shlb
jecxz
jne
fsubrl
inc
mov
pop
arpl
push
xor
sub
push
add
adc
mov
xchg
mov
je
sahf
push
fwait
in
lods
adcl
mov
pusha
daa
xchg
jg
inc
jnp
and
sbb
lods
or
or
cmpsl
pop
dec
and
add
dec
ss
mov
pop
arpl
jnp
imul
cmp
push
movsl
cld
cwtl
sahf
aam
scas
add
jle
push
sub
push
lahf
sbb
adc
iret
cmp
and
mov
sub
int3
test
daa
sub
pop
jae
mov
jecxz
sub
imul
fldl
add
repnz
inc
xchg
icebp
inc
cld
rcr
jmp
lret
xor
insb
jno
xchg
std
add
lods
out
dec
add
stos
dec
clc
jnp
aam
cli
pop
wbinvd
xor
adc
fldl
fsubrl
dec
push
push
leave
andl
insl
sbb
jp
loop
add
xchg
sub
jb
mov
orb
push
or
dec
adc
sbb
mov
stos
lock
dec
xchg
fisubrs
jecxz
jns
dec
mov
push
pop
add
xor
mov
dec
leave
push
adc
xchg
and
shlb
xchg
push
ficompl
sbb
inc
insl
ret
ds
and
cwtl
leave
jae
inc
dec
popa
jns
scas
aam
push
xchg
rcrb
inc
dec
add
inc
je
outsl
jnp
addl
cmpsb
add
or
sbb
addb
pop
repz
sahf
ss
in
add
ret
mov
imul
fmuls
mov
jb
mov
push
out
adc
pusha
pop
out
out
sub
and
test
popf
shl
push
fcomps
mov
pop
frstor
cmp
icebp
in
cmp
push
enter
aam
xchg
xlat
fmull
shlb
shl
jecxz
aam
push
cmpsl
mov
or
daa
jnp
stc
add
dec
loop
xor
jmp
pop
adc
pop
xor
add
fmulp
gs
mov
mov
sbb
adc
in
lods
jae
xsha256
cmpsb
mov
xchg
int
inc
xchg
cmp
xor
fscale
lock
push
sub
cmp
aaa
cmp
stos
push
outsl
sub
std
cmp
popf
js
pop
imul
popl
pop
adc
test
sbb
dec
ret
adc
sbb
pusha
xor
push
sub
sub
arpl
std
mov
push
and
mov
mov
jmp
cwtl
push
push
xchg
add
push
xchg
push
cmp
arpl
movsb
rcrl
push
call
jge
sti
sub
rcll
imul
mov
ss
ja
sbb
inc
mov
std
dec
cmpl
out
mov
push
in
pushf
movb
push
dec
inc
pop
stc
into
adc
sub
jle
sub
mov
push
mov
mov
fnstsw
pop
adc
jl
add
loopne
ja
push
xchg
int
cmp
test
pop
loop
aaa
in
popa
pop
mov
rcl
icebp
mov
xor
xor
imul
popw
scas
and
cltd
mov
pusha
decl
rcrb
and
hlt
sbb
push
dec
and
pushf
jp
push
sbb
jge
lret
pop
push
sub
in
xchg
mov
scas
repz
stos
aam
cltd
sbb
loop
xor
jo
xor
sub
cmp
push
mov
std
mov
and
insb
mov
inc
loopne
shrd
inc
fadd
fildll
leave
pushf
sbb
std
enter
jae
inc
ds
out
dec
fs
jbe
out
fdivrs
bound
dec
mov
mov
int
or
adc
inc
adc
or
xchg
pause
insl
jne
push
mov
std
in
imul
test
mov
jl
jno
testb
sbb
jnp
inc
rcrl
mov
xchg
test
std
jmp
movsb
addr16
cmpsl
in
sbb
dec
push
outsb
adc
xchg
add
xchg
xor
inc
xchg
jne
push
call
push
stos
lods
dec
dec
sub
or
xor
xchg
rclb
cmp
inc
clc
adc
jbe
imul
jne
rcl
adc
cs
sbb
dec
or
pop
mov
adc
and
push
outsb
daa
jae
jae
cmp
loope
test
popa
mov
mov
mov
out
ds
or
xor
bound
lcall
out
das
cmp
leave
cmp
add
xchg
in
jns
dec
mov
faddp
sub
out
jae
inc
int3
es
add
cmp
sahf
adc
mov
popf
jbe
cmpsl
cld
dec
scas
mov
add
imul
pop
push
sbb
out
fmull
subl
or
test
movsb
push
add
mov
in
insb
jl
xor
call
or
jge
jo
adc
into
adc
xchg
inc
mov
pop
mov
xchg
rorl
ss
bound
add
fwait
pushf
and
cmp
adc
stc
sub
cmp
mov
cmp
loope
mov
or
mov
pop
sbb
xor
pusha
out
dec
push
ror
test
imul
rorb
data16
cmp
mov
mov
cmp
push
lret
pop
inc
or
sbb
dec
out
movsb
rcl
mov
cmp
mov
sub
fildll
lods
jp
fsubrp
xchg
pop
sbb
add
pop
push
push
inc
icebp
push
jge
dec
inc
mulb
fwait
ss
cmp
xchg
pop
inc
popf
lods
jle
shlb
mov
stc
fnstenv
jl
cwtl
movsb
cltd
jae
mov
push
xchg
aas
lahf
rclb
inc
mov
pop
mov
insl
test
inc
add
arpl
add
jae
mov
fsubl
jl
enter
cmpsl
mov
xor
and
push
mov
movsb
add
hlt
inc
inc
loopne
out
scas
inc
xor
adc
pop
push
popa
jb
test
ret
mov
sbb
mov
adc
gs
adc
sbb
mov
es
add
popa
push
dec
mov
sarl
inc
clc
std
pop
adc
test
pushf
decb
aam
mov
bound
inc
fs
aas
and
shrb
dec
jbe
je
mov
sub
mov
sub
mov
cmp
cmpsb
out
jecxz
cmpl
push
pop
jns
sahf
adc
stos
xchg
jno
sbb
dec
idivb
ss
xor
mov
dec
push
mov
adc
cwtl
lcall
push
xor
je
fimull
jecxz
mov
in
into
fiaddl
xor
out
add
add
push
dec
lods
push
je
and
je
stos
dec
mov
mov
sarl
lret
sahf
lods
push
mov
bound
hlt
cmpsl
insb
inc
adc
push
je
test
sub
or
pop
mov
push
repnz
pop
shlb
and
repnz
adc
add
xchg
sbb
test
bound
mov
adc
lds
out
cli
adc
fs
cwtl
and
lods
dec
xor
arpl
push
int
lret
or
mov
xchg
das
mov
popa
dec
or
mov
push
lcall
pop
ja
mov
in
arpl
out
sub
jb
or
das
test
pop
jae
cmp
in
add
pop
and
idiv
mov
loop
and
outsl
push
ret
das
loope
pop
push
sub
or
xchg
mov
in
mov
and
roll
pop
pop
imul
leave
xor
ja
sbb
xor
inc
out
sub
mov
inc
loop
mov
out
bnd
xor
adc
mov
xchg
fmuls
pop
pop
jg
clc
jae
ret
jp
cmp
shl
sahf
pop
cltd
push
mov
outsb
negb
xchg
adc
data16
sahf
scas
pop
xchg
pop
icebp
xchg
hlt
std
rcll
mov
jne
popf
mov
sub
cmp
jcxz
test
fs
jmp
mov
mov
xlat
in
cmpsb
aad
xor
inc
adcb
xlat
cmp
pop
xchg
testl
sub
mov
test
pop
lock
and
mov
out
sbb
fs
lods
dec
sbbb
repnz
loop
ja
incb
jb
fmull
lods
xchg
xchg
xor
lods
loop
adc
popf
fdivs
push
push
scas
lods
test
inc
pop
sub
adc
test
movsl
mov
ror
pop
aad
fidivs
rclb
hlt
cmpsb
popf
cwtl
xchg
jecxz
add
mov
aas
dec
inc
enter
push
add
rcrl
xchg
jns
testl
add
aam
dec
mov
fwait
in
add
dec
aam
fisubrl
scas
call
lahf
in
imul
mov
sbb
jmp
and
lret
push
jo
cmpsl
ljmp
mov
or
sarl
fwait
rorl
jecxz
nop
loopne
dec
add
into
pushl
test
add
lcall
mov
jg
notb
ja
pop
xor
adc
nop
nop
sub
dec
aam
mov
pop
xor
mov
pop
loope
or
jecxz
jle
lcall
dec
loop
clc
lcall
adc
popw
push
xor
scas
push
and
push
jp
gs
lods
add
or
jo
jne
push
shrl
scas
cmc
cltd
mov
outsl
cmp
rcll
sub
fiadds
xor
jp
inc
lret
clc
popa
in
adcb
sahf
rolb
loope
xchg
rorl
ror
mov
xchg
shl
iret
cmc
insl
iret
cmp
jbe
cmp
mov
lcall
lods
fs
cld
leave
lods
rol
push
pop
mov
insb
movsb
mov
jbe
add
ds
fcompl
iret
jl
push
or
mov
aaa
and
cmp
aaa
cld
lods
xor
sbb
xchg
jo
stc
in
cmc
pop
adc
xchg
xor
mov
mov
dec
pusha
aam
xor
pop
stos
cmp
jae
add
in
push
ljmp
push
xlat
cmp
insl
cwtl
push
popa
jle
jp
dec
outsb
pop
xchg
add
stos
dec
idivl
and
xchg
push
sub
fcoms
subb
pop
lock
adc
pop
gs
pop
jae
pop
jecxz
sbb
inc
pop
orl
push
and
add
sub
mov
in
stos
mov
mov
mov
mov
cld
out
mov
ds
xor
push
lea
test
popa
stos
xchg
jne
mov
leave
mov
cmc
adc
movsb
mov
clc
insb
sub
daa
stos
inc
jmp
jge
xchg
rolb
imul
inc
sbb
xor
cmp
xor
mov
pop
push
push
icebp
and
pop
repz
fimull
outsb
pushf
std
lods
scas
scas
ret
movsl
inc
cmc
or
addr16
ror
out
scas
sub
adc
ds
dec
iret
push
in
sbb
jmp
pop
sbb
fnsave
or
jl
clc
ja
je
pop
pop
and
scas
les
cmp
testb
loopne
pushf
or
add
xchg
mov
xor
jle
or
or
lret
xor
push
pop
push
dec
mov
add
inc
lods
lods
pop
cwtl
bnd
mov
test
fcoml
fimull
push
sbb
xchg
mull
adc
cmp
add
outsl
stos
adcb
aaa
lcall
xchg
and
std
movsl
mov
jmp
or
out
xchg
js
sub
stos
dec
add
or
adc
push
mov
xchg
jp
mov
imulb
push
lds
mov
sar
cli
mov
sub
outsb
mov
fstpl
mov
jnp
lock
insl
inc
sbbl
hlt
out
std
push
add
or
add
insl
arpl
rcll
mov
jne
int
mov
pushf
ret
add
mov
mov
insb
insb
adc
jmp
test
fs
mov
into
dec
lods
adc
jns
popa
xor
mov
adc
mov
lock
jl
sbb
mov
mov
divl
iret
data16
add
xor
push
mov
mov
out
add
mov
or
sbbb
lods
pop
int
movsb
test
push
xchg
and
cmp
jg
jae
int
push
jne,pn
fdivp
in
in
xchg
cmpsb
cmp
inc
repz
fldt
nop
outsl
xchg
loop
in
movsl
iret
cmp
les
mov
inc
jge
loopne
xchg
adc
daa
out
repnz
mov
iret
inc
scas
popf
xor
int
jo
dec
add
sub
jmp
in
insl
xchg
cmp
or
aam
ret
or
push
mov
xor
xor
add
rolb
sub
shl
icebp
faddl
xchg
pop
aam
xor
pop
mov
mov
cld
and
dec
sub
aas
jmp
push
in
loope
inc
adc
rorl
pop
add
notl
push
nop
sahf
mov
mov
mov
inc
xor
dec
ret
lock
daa
push
push
dec
or
rclb
and
shlb
xchg
add
cmc
jl
cmp
push
sub
jo
pop
in
mov
cmp
fnstcw
out
mov
arpl
mov
fwait
or
jg
push
mov
mov
adc
xor
movsb
sbb
xchg
mov
mov
mov
and
jne
int
add
movb
add
stos
mov
int3
sbb
insb
shr
call
jbe
cmp
aaa
pop
fs
add
pop
shrl
mov
pop
add
cld
jge
xchg
mov
daa
jne
mov
jb
inc
push
popf
add
xor
stos
shrb
daa
decb
dec
jbe
outsl
jge
sub
mov
jae
into
js
imul
popf
add
roll
mov
and
shlb
mov
aas
pop
mov
sbb
test
fldenv
pop
dec
addr16
inc
mov
adc
and
xchg
xchg
mov
daa
add
int3
mov
adc
jbe
cmp
pop
lret
or
push
sub
icebp
add
cld
sbb
cmp
hlt
xlat
shrb
sub
xorl
pop
sbb
dec
call
and
and
out
jg
jmp
push
mov
cmp
xchg
mov
out
mov
test
jmp
mov
mov
jmp
xorl
bound
push
mov
xchg
dec
push
cwtl
cmp
clc
mov
add
jae
jne
or
mov
add
fstl
xor
int3
stc
push
cli
xchg
loop
pop
pop
mov
fdivrs
xchg
cld
mov
rol
lahf
stos
cwtl
es
inc
inc
int3
xor
jecxz
aaa
add
adc
lret
pusha
mov
repnz
mov
jecxz
mov
repnz
in
and
cwtl
sub
test
mov
sbb
push
mov
icebp
cs
mov
in
and
mov
jg
ds
pop
imul
lds
ret
outsb
imul
dec
pop
xchg
mov
inc
xor
jbe
out
push
bound
mov
sahf
jle
pusha
in
inc
dec
insl
push
jecxz
daa
pop
adc
dec
mov
jmp
jae
dec
hlt
cmpsl
lods
push
std
gs
mov
gs
mov
pusha
pop
push
gs
rcll
lods
jp
inc
pushf
shr
pop
gs
popf
push
std
loopne
jmp
adc
cmp
aas
push
lods
push
in
sarl
inc
mov
out
mov
xchg
xchg
jg
inc
shlb
andb
test
pusha
and
pop
mov
fcomi
test
out
sub
out
shlb
iret
xor
lcall
aas
xor
mov
ss
mov
cli
sub
data16
adc
in
andl
movsl
bound
jmp
in
xchg
mov
and
in
cltd
insl
insl
xor
aaa
stos
bound
sub
rclb
pop
mov
hlt
push
fs
xchg
jmp
add
mov
testl
fsubl
in
fistl
mov
enter
bound
pop
movzbl
adc
hlt
jp
push
pop
jp
pop
aam
pushf
inc
pop
mov
push
call
fdivr
push
mov
push
cmc
jmp
rcr
xor
mov
cmp
test
cli
rclb
out
cli
mul
imul
dec
rcrb
outsb
adc
push
in
push
pop
or
and
out
sbb
or
sbbb
div
and
mov
pusha
push
push
cs
outsb
movsb
and
bswap
lcall
inc
pop
and
add
pop
insb
pop
dec
stos
dec
mov
es
cmpsl
bound
jle
xor
adc
xchg
fisttpll
mov
aaa
jns
jo
sub
js
stc
xchg
popf
imul
and
jecxz
push
push
aad
mov
mov
add
pop
fmuls
xorb
pop
pop
jle
push
pop
add
das
inc
xchg
test
lret
imul
imul
adc
addb
mov
sbb
adc
xchg
sti
sti
adc
frstor
sub
iret
or
push
sub
jb
std
daa
lahf
daa
mov
pop
dec
test
pop
jbe
sahf
and
sub
out
inc
add
xor
jno
pusha
pop
pushl
add
hlt
aam
xor
jbe
addb
or
test
and
cmc
lret
mov
and
cmp
dec
inc
add
clc
inc
stos
mov
fwait
adc
jns
pusha
ret
sbb
mov
push
jge
loopne
xor
es
sub
in
mov
mov
lds
lods
xor
jns
dec
mov
and
mov
in
outsb
arpl
std
dec
mul
fidivl
xor
loopne
orl
cmp
sbb
inc
mov
insl
fadds
cmp
jb
dec
xor
mov
sti
mov
mov
int
xchg
add
adc
push
inc
mov
out
loopne
mov
inc
popf
jmp
mov
pop
jle
test
in
les
dec
out
int3
push
insl
out
pop
ss
add
jns
scas
jb
or
loopne
cmpsb
and
mov
mov
mov
add
inc
or
pop
cmp
push
inc
xchg
fcoms
inc
jae
shrb
ds
push
lahf
out
push
adc
mov
adc
dec
mov
mov
or
mov
lret
lcall
cmc
outsb
loop
in
in
xor
outsl
jns
mov
pushf
iret
test
cmpb
lcall
ss
cli
mov
movb
jl
push
mov
unpcklps
inc
hlt
push
ficoml
lret
dec
insl
out
and
ficoms
push
cmp
shlb
popf
adc
test
sbb
clc
cmpsl
pop
inc
or
and
outsb
push
clc
xchg
sbb
dec
sbb
repnz
inc
out
push
sbb
pushf
into
clc
stos
jecxz
dec
popa
jne
dec
sub
stc
cmp
ret
jb
jmp
test
scas
idivb
xor
mov
add
inc
shr
xchg
testl
dec
lods
lcall
imul
ret
xchg
add
xchg
sarl
popf
sub
lea
sti
sub
cld
push
push
rorb
sbb
pop
dec
inc
mov
sbb
inc
pop
add
insl
gs
loopne
cs
dec
xor
inc
test
add
movsb
inc
fimuls
xor
loope
mov
jge
mov
xchg
loopne
icebp
enter
lret
push
mov
negl
adc
scas
les
cs
pop
dec
mov
sbbb
pushf
mov
sbb
pop
fldl
addr16
mov
or
cmpsb
mov
in
fbld
aaa
lret
gs
mov
ret
fidivl
insl
or
cwtl
addr16
dec
or
loop
add
xchg
rcll
xchg
push
sbb
push
cmpsb
cmp
negl
insb
mov
sub
loopne
shlb
xchg
jg
xchg
pop
xlat
mov
pop
xchg
popf
imul
in
pop
dec
pop
in
fwait
or
xchg
dec
cs
movsl
test
or
pop
sbb
ss
xchg
lahf
or
add
enter
sub
pop
mov
shll
fidivl
out
clc
testb
lea
or
xchg
mov
les
test
cld
mov
and
and
notl
scas
lods
inc
std
mov
jno,pn
mov
jnp
jp
jb
pop
cli
loopne
pop
mov
leave
add
clc
jl
in
pop
into
jmp
shl
icebp
loop
test
lret
dec
push
out
test
jecxz
iret
push
nop
cmp
cmpsb
hlt
mov
cmp
in
dec
push
call
push
loope
test
in
jle
jecxz
dec
inc
in
pop
sub
jnp
push
mov
and
xchg
adc
loop
in
out
jnp
je
mov
dec
clc
lret
cmp
mov
movsl
push
xchg
insl
xor
xor
test
inc
pop
mov
dec
add
addl
out
inc
leave
test
ret
inc
sub
dec
rclb
cld
lahf
inc
pop
push
xorl
pop
shll
lcall
and
mov
shl
jmp
dec
jg,pt
xor
scas
incb
adc
fcmovnu
and
mov
jbe,pt
stc
mov
loop
push
mov
into
push
mov
icebp
adc
cmpsb
test
fistpl
test
xchg
pop
dec
cmp
loopne
xchg
fwait
pop
and
ret
ds
les
adc
or
jmp
shrb
andl
ret
adc
dec
mov
pushf
insl
addr16
inc
cmp
push
je
outsb
push
push
inc
xor
imul
mov
jg
pop
insb
test
orl
adc
xor
and
cmp
ja
mov
cli
pusha
dec
xchg
xor
inc
push
jmp
pop
push
cld
xchg
mov
sub
int
in
lds
mov
xor
jecxz
sti
pop
sbb
xlat
nop
xor
fldt
dec
test
pop
mov
loope
jmp
ficoml
sbb
in
outsb
xchg
mov
ja
push
sti
rep
fisttpl
xchg
leave
lret
imul
out
je
ret
mov
adc
and
jecxz
pop
xor
dec
mov
scas
stc
sbb
das
in
mov
test
push
inc
jnp
test
xor
push
push
pop
test
fstl
lock
mov
push
xor
daa
cmp
cmpsl
dec
inc
pop
bound
pusha
push
ds
inc
das
sub
push
pusha
sub
popl
sbb
rclb
mov
jns
push
add
pop
sub
daa
addl
mov
and
subl
sub
cmpl
mov
lahf
pop
in
pop
pop
add
cltd
jne
ja
incl
push
loopne
shlb
pop
xor
repnz
and
repnz
fisubrl
or
push
arpl
icebp
jo
xor
je
jp
rcll
add
xor
push
movsl
or
push
push
rol
jno
rcrl
out
aaa
sahf
and
insl
dec
mov
sbb
cmp
enter
xchg
dec
in
les
adc
xchg
push
mov
aaa
mov
loope
js
mov
lret
sub
loop
sahf
dec
lahf
test
sahf
daa
mov
aas
loope
iret
cmpsl
shlb
add
dec
ljmp
repz
int3
push
and
out
sbb
jecxz
les
xchg
sbb
cmp
sbbl
jns
loopne
dec
stos
cmp
mov
dec
into
cmp
dec
push
mov
mov
jle
sti
cltd
xor
bound
ljmp
les
popl
das
sub
xchg
mov
int
sbb
pushf
jecxz
fldenv
arpl
xor
cs
inc
add
mov
mov
dec
int3
insl
cmp
sbb
mov
push
or
aaa
inc
loopne
es
jbe
cs
aaa
test
jbe
out
push
inc
loop
das
fidivs
mov
xchg
lods
icebp
adc
sub
call
data16
pushf
ss
imul
jb
xlat
pop
adc
fisubrl
sub
sbb
insl
mov
insl
lahf
fmull
mov
mov
cmp
mov
mov
icebp
push
xor
inc
push
lcall
cmp
daa
rclb
hlt
inc
insl
rorl
cmp
fs
xor
or
cwtl
add
mov
aam
fmuls
push
xchg
lahf
int
or
movsl
jbe
aad
xchg
filds
mov
push
test
out
cltd
mov
sbb
sub
xor
push
jmp
jg
inc
in
inc
imul
addr16
jae
aaa
push
inc
and
rcll
je
cmp
cmp
sub
out
push
pop
mov
stos
xchg
stos
nop
cld
sbbb
test
mov
inc
fcomps
icebp
fidivl
and
rol
push
xor
mov
bound
fs
fstps
cld
adc
cmpsl
flds
pop
pop
mov
mov
add
or
mov
or
xchg
push
inc
and
pop
push
out
cwtl
lods
or
cmp
xor
cli
jbe
xor
cmpsb
sub
adc
mov
shl
daa
cmp
cmpsb
std
dec
push
scas
jae
mov
lret
enter
mov
and
xchg
jl
jo
les
mov
lds
outsb
imulb
iret
test
mov
sub
cmp
stc
sub
lret
inc
sub
jns
stos
std
mov
sarl
aam
or
loop
dec
pop
pop
xchg
movsl
mov
int3
xor
xchg
in
stos
cli
pop
enter
xchg
lret
aaa
and
mov
adc
fistps
test
xchg
mov
dec
into
adc
mov
ret
and
adc
call
push
les
fisttpl
xchg
cltd
sbb
aam
mov
mov
cld
pop
sbb
and
std
test
or
inc
mov
mov
pop
loopne
mov
gs
jle
xchg
add
inc
loop
pop
add
je
cmp
jge
negb
xor
push
sbb
adc
pushf
xor
push
sub
sahf
into
int
test
fadds
jne
pop
hlt
inc
data16
ja
lds
push
mov
mov
nop
lret
aaa
sarl
insb
rclb
movsl
subb
lcall
adc
into
arpl
push
imul
push
imul
push
and
arpl
les
sarb
and
popa
lcall
invd
hlt
stc
mov
dec
cltd
xor
xor
addr16
sub
lods
xchg
and
insl
loopne
jecxz
jnp
in
daa
jmp
mov
cmp
cmc
mov
adc
sub
data16
mov
int
push
jl
dec
mov
fnstcw
scas
fstp
andl
lahf
popa
fldenv
push
mov
jnp
adc
dec
fstps
sbb
pop
icebp
xchg
in
adc
xchg
or
insl
mov
iret
insb
sbb
jecxz
insl
mov
in
add
and
movsb
and
and
sahf
or
outsb
out
or
outsb
inc
sbb
jns
sub
pop
sub
rorb
pop
mov
aaa
pop
push
lret
sti
aad
jle
inc
push
or
pop
orb
sarl
jle
fldenv
out
femms
bound
jno
or
xor
adc
jl
push
jecxz
sub
mov
jb
push
sbb
adc
lea
pop
lcall
jle
out
xor
mov
in
fisubrl
mov
cwtl
push
mov
xchg
dec
lods
dec
inc
mov
filds
les
lcall
test
into
inc
jle
scas
dec
jecxz
jmp
sti
int3
add
orl
loop
movsl
insl
jge
lret
xor
unpckhps
outsb
movsb
sbb
cmp
or
fldl
cwtl
push
cld
loop
add
mov
loopne
adc
cmp
js
popf
ja
movsb
xchg
jecxz
lea
das
push
jp
enter
lahf
les
inc
es
pop
cltd
sub
sub
push
bound
pop
decl
cmp
and
mov
dec
imul
push
hlt
and
add
hlt
lods
mov
lcall
fidivs
movsb
dec
cmp
ss
lea
mov
lret
inc
repnz
hlt
gs
test
test
add
push
xchg
insb
sub
push
in
les
mov
fmul
add
sti
mov
addb
lahf
jne
jnp
jbe
mov
aas
js
push
incb
adcl
out
push
dec
repnz
aam
pop
sbb
mov
pop
lea
mov
fdivr
xchg
ds
lods
in
cwtl
push
xchg
lea
add
inc
cmp
xchg
push
stos
arpl
and
xchg
pop
push
push
hlt
cmpsl
jmp
insl
xchg
jp
push
pop
dec
out
popa
idivb
testl
aad
imul
div
pop
jns,pn
cli
stc
scas
adc
test
pop
int3
jge
icebp
loope
into
pop
or
mov
inc
cmp
cwtl
rcr
sub
dec
dec
outsb
mov
cli
jns
ljmp
mov
call
std
mov
push
mov
add
jge
push
dec
sti
lcall
out
inc
inc
es
rcrl
inc
jbe
shlb
add
bound
cmpsl
or
xchg
sar
mov
push
jns
ret
sbb
add
lret
mov
inc
fcoml
dec
add
push
mov
subb
sahf
push
add
jbe
sub
inc
outsb
les
push
adc
sti
in
adcl
pop
ljmp
imul
sti
and
sbb
ds
inc
mov
stos
into
in
cli
lods
lods
imul
cli
sub
loopne
cltd
fwait
call
mov
and
test
into
xchg
pop
mov
cwtl
popl
inc
scas
fstps
xchg
push
fnstenv
xlat
sbb
adc
jb
call
loope
cwtl
cwtl
fstps
int
dec
fistps
jg
mov
and
dec
stos
jecxz
rcrb
push
cld
sub
out
lret
xor
out
mov
cli
mov
push
cmp
insb
jp
inc
mov
mov
mov
dec
mov
cmp
mov
jnp
and
pop
les
scas
pop
shl
xor
adc
xchg
insb
movsl
sbb
loope
in
ret
cmp
fidivl
ret
mov
adc
sbb
stos
adc
mov
push
pop
cli
imul
loopne
fstps
addr16
or
mov
sub
sbb
lods
frstor
out
out
int3
sbb
or
insb
mov
cmp
jl
jle
jo
or
or
jp
add
xchg
xchg
dec
and
cmp
data16
mov
ja
mov
popa
push
rorl
inc
pop
aaa
add
xor
loope
push
and
mov
inc
push
push
push
push
push
aaa
mov
arpl
roll
inc
fnsave
add
test
jmp
arpl
inc
ds
or
je
jl
mov
and
mov
gs
aam
loopne
pop
lods
pop
movsb
fwait
call
and
mov
inc
orb
gs
push
or
addl
bswap
jae
sbb
rcr
pop
mov
sub
sti
mov
imul
push
mov
push
test
lock
gs
add
daa
imulb
xchg
mov
sub
andl
shl
enter
cmp
xor
test
or
les
std
mov
dec
mov
fildll
out
mov
jmp
push
pop
mov
pop
jb
mov
xchg
outsl
stos
mov
decb
shl
jmp
scas
in
fisubrs
xchg
add
lds
inc
sahf
pop
lret
shll
test
push
int
aam
lret
cs
fs
add
mov
cmp
mov
inc
push
push
aad
aas
adc
shr
dec
clc
adc
fstl
and
push
push
cmp
das
and
pop
mov
inc
inc
jno
inc
shr
cmp
mov
and
sbb
iret
inc
ja
sahf
xor
inc
mov
mov
notl
push
push
lds
pause
push
nop
xchg
ja
out
nop
jno
jno
clc
push
push
push
mov
push
add
jne
stos
and
jnp
jno
push
mov
pop
cli
jnp
push
pop
iret
jne
rcrl
sahf
and
test
or
xor
psllq
inc
inc
dec
scas
add
mov
js
out
call
ljmp
inc
fcomps
mov
gs
sub
dec
or
hlt
ss
jg
adc
fwait
push
loopne
ss
ret
xchg
jbe
inc
push
pop
imul
mov
mov
stos
xchg
mov
gs
stos
out
cld
mov
sbb
push
mov
push
idiv
xor
lret
ficomps
and
pop
movsb
or
xchg
scas
fistl
push
cmp
cmpsb
fs
sti
adc
sbb
testl
dec
fcomip
ret
mov
jnp
lods
lcall
fstl
add
in
dec
aam
fnclex
sbb
xlat
imull
cmp
xor
and
sti
dec
pop
push
cmc
roll
cmp
mov
shrb
dec
pop
jecxz
cmp
pop
or
outsl
dec
ror
pop
pop
sub
dec
enter
testl
cmc
mov
cmpsb
fmul
test
adc
push
pop
rorb
in
adc
aaa
aaa
inc
mov
je
inc
fdiv
mov
popa
stos
std
push
cmp
mov
ret
push
mov
jbe
stos
or
int
hlt
pop
in
popf
mov
pop
pop
imul
adc
sub
adc
sub
lret
cmp
lcall
test
cwtl
divb
clc
out
mov
sub
add
push
div
xchg
or
mov
adc
rcll
inc
cmp
testl
ret
jbe
dec
ljmp
lret
jg
sbb
cmc
cmp
push
out
push
scas
sub
outsl
pshufw
mov
js
jge
mov
ljmp
testb
adc
outsb
clc
lcall
or
push
mov
stc
jg
je
in
cld
std
flds
pop
push
mov
adc
dec
mov
push
xlat
mov
enter
fnstsw
dec
fsub
cs
movsb
mov
inc
gs
push
adc
inc
sbb
jl
sbb
fstpt
add
or
inc
jecxz
lods
sti
jmp
dec
lds
lahf
pop
pop
cmp
outsl
movsb
hlt
inc
pushf
aam
xchg
cmp
andb
or
pop
inc
jle
nop
icebp
scas
divb
mov
aam
fdivrl
jge
imul
inc
out
jnp
inc
dec
sub
cwtl
cmp
mov
and
or
cmp
fldcw
or
movsl
rolb
jmp
loope
xchg
lret
xchg
decb
scas
pop
loopne
fimull
dec
lret
jbe
xor
test
nop
dec
adc
leave
pushf
shl
repz
or
push
mov
sub
out
fsubs
push
pop
or
rcl
mov
or
popf
adc
ficoms
div
imul
jmp
stos
in
fistpll
lret
sahf
push
xchg
xor
sbb
push
adc
ret
adc
pushl
in
adc
dec
dec
stc
and
push
dec
sbb
xor
mov
fildl
fcmovne
add
push
xchg
push
mov
shll
xchg
cmp
push
xlat
cmp
sbb
jbe
push
sub
pop
imul
and
xor
sbb
out
pop
jne
xchg
mov
pop
push
jp
insb
inc
sbb
or
test
or
cli
lret
js
dec
adc
sti
pop
in
cld
mov
arpl
mov
mov
in
jnp
cmp
sbbb
hlt
mov
add
mov
or
push
jns,pt
fucom
mov
or
jbe
push
out
or
inc
int3
rolb
insl
idiv
ds
cld
outsb
mov
repnz
push
out
sub
sbb
push
lock
int
sahf
jecxz
outsl
stos
xchg
es
dec
or
sbb
aaa
or
lea
mov
cmc
xor
insl
xchg
pop
test
fsubl
mov
push
pop
sti
jle
out
jmp
mov
nop
jo
and
scas
scas
lret
shl
ss
aaa
or
mov
or
xchg
fnstcw
mov
mov
test
sbb
adc
dec
cli
int
psubd
lahf
test
leave
scas
mov
les
sbb
out
je
bound
std
loopne
xor
xor
xchg
or
sub
sarl
lahf
in
fwait
sbb
inc
cmp
insl
es
and
pop
or
jae
inc
lods
mov
flds
aam
shlb
jne
loop
in
dec
sub
in
fadd
test
dec
rcrb
repnz
add
xchg
adc
call
nop
mov
lods
test
inc
xor
inc
dec
dec
mov
cmp
push
mov
lods
iret
push
aad
imul
xor
out
cmp
fdivrs
sub
sub
and
push
in
data16
mov
or
sub
push
lret
in
fildll
dec
in
or
jmp
push
outsb
ret
addr16
js
call
out
es
adc
shll
popf
mov
cmpsb
push
dec
nop
jo
push
mov
fimuls
sbb
pop
scas
les
es
test
jne
lds
lock
adc
inc
lea
lcall
xlat
pop
mov
cmpsb
push
inc
out
mov
jb
inc
bound
xchg
ja
cmpsb
call
lock
xchg
dec
daa
aad
sub
push
fists
xchg
dec
sahf
movl
mov
xchg
lcall
fiaddl
xchg
clc
mov
mov
sahf
lcall
repz
adc
scas
mov
dec
push
and
hlt
stos
inc
push
outsb
cs
mov
xchg
or
jbe
out
inc
push
je
out
xchg
mov
jmp
mov
and
xor
push
or
pop
mov
fsubrs
rcl
cmp
daa
xchg
inc
or
fs
std
mov
mov
aaa
inc
leave
mov
and
dec
push
aaa
and
loope
lea
hlt
nop
popf
fwait
jg
aad
mov
leave
or
inc
lea
xlat
cmp
adc
fs
fucom
mov
jmp
pop
loope
fiaddl
stos
xlat
dec
jne
or
mov
idivl
jns
fstp
pcmpeqw
fists
and
scas
loope
cmp
lret
in
sbb
add
int
inc
add
les
movhps
outsl
aam
js
loope
daa
shll
insb
push
enter
leave
dec
cmc
mov
sbb
jge
pop
sbb
xchg
cmp
cltd
xor
fistps
shlb
movsb
imul
cld
aad
repz
xor
sub
push
cmp
sub
das
andb
aad
mov
xlat
push
sub
xchg
sbb
lret
arpl
jle
push
sbb
xorb
sub
push
sub
xor
pop
push
aam
push
ret
inc
mov
out
xor
movsb
sahf
pop
push
stc
les
push
shll
arpl
pop
lahf
or
flds
jp
sub
pop
mov
fcmovne
add
test
sahf
ja
pop
push
push
jge
les
xchg
hlt
push
pop
jmp
mov
mov
scas
inc
gs
outsb
push
cmpb
jo
loopne
rcr
cmc
mov
push
pop
pop
dec
jb
cmpsl
or
popf
adc
mov
and
sbb
xchg
sbb
xor
push
mov
cld
or
inc
sub
add
xlat
inc
cli
je
shlb
loopne
sbb
mov
insb
repnz
jnp
lods
add
or
mov
les
std
pop
push
addr16
repz
inc
adc
out
stc
nop
add
int3
enter
and
int
gs
xor
negl
fcoml
add
btcl
lods
sbb
push
sbb
outsl
test
mov
or
lods
out
push
mov
cmp
mov
divl
xor
out
fdivrs
add
aaa
inc
call
cli
imul
repz
bound
rcl
xchg
cmpsl
add
mov
in
lret
aam
inc
mov
sub
mov
clc
in
nop
aad
fistpl
jae
or
and
and
outsl
jge
sbb
cmp
ja
popa
ficomps
ret
out
lods
daa
jne
out
sti
cld
mov
insb
mov
sbb
aad
sbb
mov
fs
in
sti
lock
inc
movsl
mov
in
xor
loop
adc
aam
sbb
aaa
pop
jl
xchg
das
push
fisubl
loopne
mov
or
es
cmpsb
mov
adc
ret
scas
xor
jo
xchg
jg
jl
ds
xchg
jo
sbb
add
pusha
std
int3
cmp
cli
rcrb
repz
and
and
ret
jg
iret
movsl
or
stos
daa
loop
jno
fwait
mov
lock
jbe
cli
push
scas
dec
jne
js
jmp
enter
lock
mov
mov
xchg
mov
jg
bound
leave
or
and
xor
insb
mov
mov
xchg
cld
xor
test
out
test
mov
push
popa
mov
mov
idivl
mov
inc
cmpsl
xchg
imul
pop
push
ss
testb
leave
test
cld
adc
stos
cmpsb
cmp
movsl
xchg
ficomps
xchg
stos
cmp
inc
out
dec
sahf
jecxz
cmp
lret
push
dec
cmp
xchg
cmpb
or
cmp
sahf
lods
stc
int
cmpsb
neg
insb
loope
fs
ljmp
inc
adc
push
insb
mov
hlt
push
addr16
dec
cmp
cmpsb
setnp
mov
roll
arpl
lcall
lds
xor
fsubs
shrl
in
loop
test
xchg
dec
dec
jnp
pop
out
mov
insb
xchg
add
pop
lret
in
loop
mov
mov
adc
out
xchg
adc
mov
jg
xchg
xchg
dec
fdiv
test
xlat
jno
pop
in
cmp
notb
call
rcr
mov
xchg
xlat
aam
fdivr
inc
or
mov
xor
test
out
jae
imul
arpl
xchg
jae
shrl
es
lods
test
dec
mov
pop
mov
xor
sbb
mov
mov
jo
jg
sub
jecxz
mov
fsubrs
mov
push
cwtl
adc
shrb
and
sar
jo
das
inc
jecxz
dec
push
jmp
ljmp
dec
jp
mov
jne
adc
outsl
fxch
lods
ret
std
outsl
jb
or
idivb
add
cmp
lcall
jne
cmp
jge
loop
mov
sahf
add
test
stos
jle
jnp
cmp
repz
lock
mov
pop
xchg
xor
and
and
fldt
gs
mov
js
ret
adc
bound
pop
fsubl
roll
inc
nop
loopne
jno
sbb
mov
push
push
sarl
mov
nop
push
mov
sub
add
outsl
lret
inc
subb
and
daa
pushf
imul
jne
dec
jo
mov
xor
popa
ret
pop
mov
inc
fadds
lods
cwtl
hlt
adc
adc
push
sbb
cltd
cmc
cmp
mov
stos
mov
inc
pop
setno
data16
cld
popa
jae
mov
movsb
cld
xor
hlt
frstor
mov
es
jle
mov
aam
incb
fcmovnb
mov
ja
adc
les
mov
in
cmpsb
scas
pop
ret
xorl
cmp
hlt
and
xor
mov
hlt
xchg
out
cmpsl
sar
mov
movsl
movsl
or
lcall
adc
xchg
rolb
pop
mov
jnp
sbbl
mov
mov
inc
cmp
js
imul
pop
cwtl
movsb
lret
mov
mov
pop
test
mov
sub
and
inc
dec
and
mov
cltd
sub
clc
cmp
dec
imul
xchg
mov
jecxz
push
xor
xor
sub
jae
in
ficompl
mov
sub
jg
inc
test
lret
shlb
cmp
mov
pop
and
movsl
jge
lock
fidivrl
popa
pop
iret
or
pop
jp
inc
movsb
inc
pop
jmp
mov
sbb
lret
fldcw
mov
adc
mov
mov
daa
pop
je
ds
lcall
xchg
test
pop
fisubs
pusha
fs
inc
mov
into
xor
adc
or
pusha
pop
lcall
xor
mov
add
xchg
dec
adc
stc
mov
sub
sub
pop
jle
inc
pop
rolb
call
xchg
insb
rcrb
aam
out
in
inc
and
add
adc
call
dec
sbb
in
or
clc
pop
insb
mov
loop
insl
adc
stos
xchg
dec
cli
les
insb
dec
cmp
jecxz
mov
pusha
lods
mov
mov
mov
andl
adc
sbbb
dec
push
or
add
xor
cmp
mov
icebp
fstl
lcall
inc
in
pop
mov
xor
push
jecxz
inc
shlb
mov
out
cmc
andb
cmp
ja
or
xchg
cmpsb
cmp
lods
xor
adc
mov
sub
sahf
shlb
mov
sub
out
movsl
lret
mov
fucom
push
insl
stc
repz
rolb
inc
lcall
or
dec
mov
icebp
sbb
mov
or
rcrb
sub
jmp
xlat
mov
les
fistpl
or
enter
mov
push
add
sbb
out
les
fstpt
lock
sahf
adc
loope
in
or
hlt
inc
pop
adc
jg,pt
cmp
dec
mov
clc
aad
mov
jae
cmpsb
not
mov
scas
shlb
cmp
mov
add
push
or
push
cmp
andl
xor
loop
testl
insb
mov
loopne
mov
dec
or
das
jmp
rcl
jae
leave
stos
leave
js
rorb
ja
mov
or
sbb
icebp
or
inc
sbb
mov
add
and
xchg
lcall
pop
mov
es
mov
jmp
out
and
shrb
shll
xchg
xor
pop
das
int
bound
jnp
lods
mov
cmc
rcll
pop
xchg
xchg
inc
pop
shrb
in
jl
ljmp
sub
mov
flds
add
dec
jle
add
negl
push
iret
dec
mov
pop
jmp
in
icebp
enter
pop
ja
jg
add
jb
inc
lcall
mov
mov
lds
pop
mov
inc
test
dec
icebp
rorl
cltd
inc
scas
jecxz
test
jne
es
lods
shrb
rcrl
fld1
mov
into
adc
inc
adc
or
pop
jns
iret
ja
lea
fisubrl
pop
mov
js
mov
adcb
mov
mov
es
cmc
mov
adc
xchg
pop
cmpl
sbb
into
mov
push
cmp
bound
or
ja
jl
test
test
jae
lods
pop
xor
mov
jae
mov
jmp
and
add
add
je
popa
xchg
ss
push
dec
fisttpl
inc
cmpsl
cmp
cmc
icebp
leave
rcl
push
repz
pop
aad
mov
fidivrs
vpshufb
std
or
push
push
xchg
xor
or
mov
cld
fnsave
or
jb
mov
push
mov
outsb
push
lret
adc
ret
aaa
jl
mov
mov
jbe
inc
filds
test
sub
test
push
cld
das
xchg
inc
loope
xorb
pop
out
mov
lods
jecxz
cld
jp
aas
out
push
aas
sarb
adc
dec
sub
push
adc
mov
in
enter
push
cmp
fs
push
cli
push
push
insb
jmp
dec
mov
nop
mov
pusha
leave
and
repnz
adc
leave
andl
roll
sub
sbb
int3
or
fdivs
fidivrl
ret
sub
xchg
push
mov
xor
jmp
scas
pop
jnp
int3
hlt
out
jne
cld
jne
fildll
add
sbb
xchg
push
dec
je
dec
into
scas
xor
mov
gs
pop
ficoml
dec
add
in
sti
addr16
xchg
sbb
hlt
mov
imul
fidivs
lea
inc
mov
push
push
stc
loopne
push
add
mov
loopne
mov
sbb
mov
lret
pop
xor
faddl
insl
inc
int
in
xchg
jl
arpl
inc
je
pop
ja
push
fstp
xor
push
pop
inc
js
mov
cmc
mov
xor
cmp
fiadds
cmp
adc
dec
test
mov
jnp
mov
pop
iret
notb
lahf
or
xor
mov
pop
cld
hlt
mov
jb
cmp
out
in
in
lret
lds
push
push
int3
or
fcmovu
jg
sub
mov
cmp
jae
bound
jns
xor
test
pop
or
jle
mov
mov
jle
or
js
daa
push
cmpsl
and
lea
or
imulb
jae
cwtl
shll
clc
stos
repz
cwtl
push
in
and
or
aas
jo
dec
push
lds
mov
dec
pop
stos
adc
fistpl
push
enter
cli
jo
fwait
ja
loop
hlt
push
mov
add
shlb
jl
ret
jecxz
cli
mov
and
pop
and
xchg
sbb
shlb
mov
inc
xlat
idiv
add
insb
mov
shrb
in
dec
push
push
push
fisttpll
outsb
jle
inc
dec
adc
push
pushf
dec
jge
cmpb
mov
sbb
out
mov
jbe
sub
inc
inc
pop
jne
lcall
sbb
sbb
lcall
je
jae
leave
cmp
push
adc
add
mov
popf
sbb
clc
ja
lods
shrl
xchg
insb
in
cmc
movsl
pop
ret
test
insb
shrb
lahf
js
pushf
and
paddw
flds
mov
pop
cmpl
and
scas
rcrb
in
loope
jl
push
fnsave
outsb
pop
xchg
cmovbe
mov
xor
loop
cli
stos
scas
mov
push
jge
and
iret
dec
mov
adc
mov
cs
out
add
ljmp
push
push
jns
frstor
adc
imul
lds
mov
jbe
into
pop
mull
mov
push
adc
rorl
xor
js
cmc
lret
adc
mov
out
sub
sysexit
xlat
fwait
cmp
inc
pop
sbb
mov
fcompl
adc
std
mov
imulb
movsb
aad
mov
lods
repnz
push
addr16
repz
dec
and
into
sub
mov
xor
inc
fidivs
jae
cmpsb
add
lock
sysret
or
cli
shl
test
mov
pop
sbb
nop
and
popa
sbb
dec
lock
and
sub
pop
icebp
ds
inc
dec
xchg
mov
pop
pop
mov
je
pop
push
int3
mov
sub
add
les
nop
ss
lret
fimuls
inc
out
mov
pmuludq
sub
movsl
push
or
jp
test
insb
addb
mov
pop
mov
cmp
adc
int
sbb
mov
jle
xchg
ja
xlat
or
dec
stc
imul
stos
jns
arpl
fisubl
fistpl
push
in
jge
push
sti
dec
ljmp
pop
pop
jns
or
in
pop
xchg
movsb
das
cmp
ds
cwtl
fiaddl
sub
sub
imul
push
loopne
mov
xchg
sbb
xchg
iret
add
fwait
push
ss
xorl
leave
lret
arpl
aaa
cmp
jmp
daa
pop
sbb
fistps
ss
cmp
add
sub
xor
xor
lds
dec
imul
popf
dec
and
popf
and
sbb
sarb
notl
dec
iret
repz
xor
shrb
and
repnz
scas
scas
aam
ss
jge
push
xchg
cmp
enter
pop
in
lds
mov
leave
ss
add
ret
xchg
lcall
imul
imul
xchg
insl
hlt
mov
sti
je
adc
scas
xor
inc
sub
push
xsha1
cmpsb
or
pop
fldcw
and
and
jl
ss
mov
jg
dec
sub
ret
pusha
push
jg
das
dec
dec
in
sidtl
hlt
jge
xchg
fstps
sub
test
dec
mov
mov
mov
xchg
out
data16
sbb
sbb
pop
dec
push
sub
dec
push
shll
movsl
jg
fnstsw
sbb
jb
mov
mov
int
push
clc
dec
shll
mov
enter
mov
jne
sbb
mov
pop
mov
mov
mov
push
dec
mov
stc
or
sbb
cmc
es
inc
gs
daa
jbe
int3
pop
and
cmp
mov
sbb
fstps
loope
mov
je
les
adc
push
stc
lds
sub
loope
test
or
xor
xchg
shl
test
test
dec
adc
les
std
into
push
ret
jno
fwait
mov
jb
jmp
dec
push
stos
and
data16
out
or
into
aam
adc
sub
jne
jb
arpl
fsubrp
mov
sbb
shrb
cld
xor
je
out
loopne
xchg
and
sbb
scas
call
xchg
mov
pop
pop
cmpsl
adc
outsb
cmp
nop
mov
cmc
and
inc
pop
dec
xchg
adc
hlt
shl
add
mov
mov
push
out
jb
cmp
push
jg
pop
xor
or
lret
jae
mov
cmp
inc
pop
enter
add
lods
push
andb
mov
push
outsl
mov
sahf
cmpsb
out
mov
cmp
inc
lea
lret
add
call
cmp
xchg
inc
in
dec
jno
lret
cltd
adc
or
stc
out
aaa
aas
dec
push
xchg
xlat
cmpsb
insl
shll
cmp
mov
dec
xchg
lret
add
mov
cmpsl
scas
and
stc
cmp
stos
clc
jns
js
imul
adc
and
in
inc
or
jno
pop
enter
mov
mov
int
in
movsb
loope
inc
mov
imul
cmpsb
mov
out
cmp
or
fldt
stos
mov
inc
ds
inc
subb
mov
and
out
jg
or
sub
je
fwait
out
dec
outsl
cltd
out
ljmp
jae
push
adc
push
outsl
int3
shlb
xor
jg
lcall
inc
cli
pop
mov
push
cwtl
mov
lods
cmp
mov
xchg
jnp
popf
leave
push
pushf
out
and
mov
sub
xchg
sub
mov
xchg
clc
xor
inc
andb
push
in
adc
arpl
sub
jg
test
jnp
and
adcb
mov
lods
ja
subb
or
push
lds
jb
js
pop
loopne
fwait
inc
xlat
push
dec
rorb
iret
dec
mov
cmp
mull
xor
sub
push
es
imull
insb
ss
jmp
cld
mov
sbb
lea
or
cmc
int3
sbb
sub
push
cmpsl
and
mov
daa
pop
cmc
mov
popa
and
mov
aad
sar
and
xlat
das
mov
dec
dec
jo
incl
mov
cmpsb
cmp
test
movsb
sbb
fs
sti
mov
lock
xor
or
fwait
push
and
aaa
jle
jb
mov
nop
mov
jecxz
insl
xor
sahf
cmp
mov
roll
shlb
in
or
lea
ljmp
sbb
mov
dec
cmp
mov
lcall
jno
test
lods
fdiv
test
xor
mov
loope
and
push
addb
xor
dec
sbb
aaa
cltd
je
repnz
lahf
xchg
lods
out
movsl
push
or
push
out
repnz
fdivrl
push
lahf
push
adc
sub
adc
sub
adc
ljmp
ds
lods
sbb
stos
cmp
fwait
xchg
jns
cs
loop
pop
insb
sub
jo
into
xor
enter
and
jge
push
fsubrs
pop
jno
lret
xchg
adc
jb
adc
mov
mov
add
mov
out
test
jno
mov
push
cmp
pop
movsl
repz
and
into
xchg
or
mov
ret
clc
test
je
dec
and
lahf
popa
out
cmp
cmp
fcoms
add
jne
movsb
jo
out
addr16
add
imul
jge
mov
fimuls
fistl
test
in
cs
push
jmp
xor
inc
sbb
loopne
add
push
add
and
clc
cmc
test
and
adc
insl
hlt
ds
push
pop
loope
aaa
xchg
push
out
lea
mov
ret
sub
sub
xchg
add
insb
icebp
or
inc
int3
dec
divb
or
daa
and
adc
repnz
pop
je
mov
inc
and
outsb
pop
out
call
fidivrl
in
test
ret
xchg
mov
sbb
ret
jle
vunpckhps
xor
push
mov
cld
push
cld
xchg
and
aad
bound
cs
jbe
cmpsb
sub
pop
icebp
negb
jecxz
cs
jmp
into
inc
cmpsb
and
xor
je
sti
bound
add
into
pop
mov
ficoms
in
push
fwait
xlat
roll
dec
testl
lahf
mov
push
inc
movsl
mov
rclb
icebp
jmp
and
xlat
xor
arpl
sbb
push
aad
loop
jge
xor
inc
les
rolb
icebp
pop
sub
test
lahf
adc
and
pop
adc
ljmp
cmp
sarb
cmp
dec
and
sarb
xor
sahf
jo
mov
popf
cmp
testb
fidivs
mov
sahf
stos
ficoms
psubsw
fs
jecxz
leave
pop
cmp
mov
fsubl
bnd
inc
sbb
cmp
loopne
or
sbb
bound
andb
mov
xor
rcll
cli
add
pop
jle
bound
push
push
fnsave
setle
mov
pop
jbe
or
lea
pop
sti
aam
sbb
xchg
pop
cmc
push
rcr
pop
dec
or
jp
cli
push
cmp
insl
and
jnp
and
leave
int
push
aad
das
mov
pop
adc
sub
jbe
data16
pop
lret
dec
push
movsl
mov
aaa
jo
out
pop
gs
dec
ss
orl
les
mov
cld
out
dec
mov
bound
mov
mov
test
fs
xchg
mov
mov
sbb
jb
lds
subl
mov
dec
sti
jg
sar
inc
adc
lods
sti
cmpb
mov
fiaddl
jmp
sti
popa
mov
cld
xchg
sub
inc
cmp
fmuls
insb
mov
rolb
push
js
insl
push
ljmp
repz
test
push
cmc
pop
cltd
fldenv
jg
mov
mov
mov
in
nop
inc
outsb
aam
adc
in
xlat
dec
or
subb
ss
cwtl
sbb
test
cltd
icebp
icebp
clc
andb
cmc
stos
push
iret
push
push
call
movsb
aad
or
loopne
xchg
or
je
mov
andl
lds
arpl
xchg
fsubl
pop
cld
sbb
lret
lds
insb
insb
inc
mov
lods
xor
push
push
cmp
ret
nop
adc
jno
mov
mov
std
shrb
into
hlt
jle
mov
jge
xchg
add
add
xchg
xchg
xchg
cmp
xor
or
add
dec
sbb
fwait
out
aad
cli
fcmovbe
mov
pop
ljmp
pushf
adc
pop
adc
rcrl
outsb
mov
sub
cs
cli
mov
hlt
aaa
sub
adc
add
movsb
pusha
mov
cltd
lcall
fwait
and
arpl
xchg
lret
test
xchg
mov
dec
cmp
push
push
sar
adc
stos
cwtl
sbb
mov
enter
lds
addb
cs
and
pop
jb
mov
inc
ja
mov
jb
cmpsl
ret
mov
int
sbb
pop
fnstcw
xlat
daa
mov
and
mov
popa
sbb
pop
inc
rclb
cmpb
movsb
fbstp
lret
jle
pop
mov
mov
loop
pop
dec
add
inc
push
cmp
aas
pop
or
jne
and
bound
push
mov
and
add
sub
js
xchg
sub
pop
mov
or
insb
jg
or
cmpsb
mov
lods
push
pop
jbe
dec
jecxz
cmp
fcmovbe
addr16
shll
gs
fnstenv
cwtl
outsb
add
call
cmp
pop
pop
xor
lret
out
fisubrs
mov
cs
mov
push
dec
sbb
inc
sbb
cmp
or
lods
mov
cltd
pop
push
movsl
int
outsb
xorl
sbb
push
lock
pop
push
mov
pusha
cmp
jg
lds
repz
js
jno
dec
mov
jns
adc
mov
cmp
jns
xchg
mov
popa
ret
into
clc
inc
imul
sbb
adc
lds
adc
xchg
add
lcall
test
in
cmp
and
lock
xchg
xchg
jg
push
js
dec
sub
xor
mov
test
and
out
rolb
or
pop
dec
add
dec
int
xlat
sub
hlt
sub
add
pop
xchg
clc
xlat
movsl
pop
mov
or
push
jg
std
sbb
lods
popf
mov
dec
or
mov
xor
mov
mov
dec
pop
mov
lret
and
ret
jge
test
xlat
movd
jmp
in
aas
add
fsubrp
addr16
jno
cld
loope
jle
jg
mov
out
inc
dec
adc
add
imul
enter
dec
jg
out
add
push
imul
mov
dec
mov
add
adc
mov
mov
aad
xorl
leave
or
daa
and
cmp
xchg
lods
imul
mov
jmp
mov
mov
insl
das
and
hlt
xchg
jecxz
xchg
add
aas
jne
xchg
dec
mov
xor
clc
in
into
shlb
cmp
leave
lods
jg
and
arpl
jg
fcmovnb
sub
add
repz
into
lret
test
lock
sub
roll
scas
loop
jno
add
inc
xor
lods
iret
clc
jle
aam
xchg
stos
mov
lods
pop
loop
ja
inc
xchg
sub
sbb
pop
xor
mov
jnp
add
dec
and
sub
imul
jae
mov
inc
xor
stos
cmpsl
mov
cmpsl
mov
in
push
cmpsl
test
pop
fdivl
dec
pop
movsb
out
add
mov
jnp
shrl
sbb
jb
xlat
xor
add
mov
loop
sub
cmpsl
sub
test
sbb
pop
push
jb
inc
cmp
adc
leave
fbstp
rcr
pop
sbb
stos
jne
insl
adc
in
dec
or
pop
out
cwtl
pop
add
mov
je
sbb
adcl
mov
icebp
nop
popf
insb
mov
add
mov
out
push
movsl
or
or
ja
mov
push
std
clc
xor
rolb
pushf
int3
and
jbe
jle
and
call
test
push
jae
push
mov
and
xor
or
loope
pop
andl
mov
addl
dec
icebp
cs
jno
adc
xor
mov
lcall
inc
add
movsl
or
sahf
add
dec
lods
push
aaa
repnz
lods
out
cmp
mov
loop
cmp
push
jmp
test
in
arpl
cs
xor
sarl
inc
out
mov
pop
mov
pop
inc
testb
sub
jbe
xor
mov
add
add
and
out
mov
sub
negb
les
aaa
outsb
sub
and
lods
mov
clc
mov
or
pop
sahf
movsb
dec
out
or
dec
pop
iret
xor
dec
cmp
test
pop
push
rcll
sub
dec
xlat
jae
mov
scas
fimull
out
or
in
add
sbb
add
scas
pop
dec
cmpsl
xor
insb
or
insb
pop
shrd
or
push
pop
xchg
mov
jbe
inc
movsl
mov
adc
or
xlat
or
or
jl
lds
jbe
sbb
and
and
dec
push
fisubrs
scas
push
or
xor
repz
sub
cmc
pushf
fistpl
es
icebp
xchg
add
mov
add
repnz
inc
insb
out
lods
push
mov
xchg
std
int
jo
aam
je
jae
inc
sar
addr16
insl
addr16
in
jb
jge
mov
hlt
cmp
sahf
ret
sub
sar
int
in
cltd
pop
cltd
inc
pop
xor
push
dec
imul
mov
add
stc
pop
xchg
push
int3
mov
aad
push
pop
imul
hlt
push
mov
cmpsb
jle
xchg
sti
movsl
sbb
lret
sub
jmp
sahf
scas
xor
les
cmpsb
jno
in
sub
jo
and
mov
push
add
icebp
pop
jecxz
mov
jecxz
fsts
outsb
sub
jno
xchg
hlt
jp
add
ror
xchg
sti
popf
lret
xchg
call
out
lahf
js
pushf
aam
jl
scas
sahf
mov
mov
push
shl
aas
aam
cmp
cli
pop
cmp
mov
sbb
ss
xchg
pop
jae
call
out
and
mov
out
jne
jbe
mov
sbb
lcall
add
lret
dec
in
cmpsb
push
test
in
orl
test
sub
push
lahf
mov
jo
sbb
lcall
xor
jno
arpl
push
pushf
cmp
fbstp
jno
jmp
sub
imul
mov
mov
mov
popf
lods
mov
js
mov
pop
js
daa
insb
aaa
cmp
mov
pop
xor
popa
aaa
out
fsubrp
rolb
aad
xor
cwtl
scas
pop
test
xchg
mov
test
std
push
add
insb
inc
dec
das
pushf
or
cwtl
fs
mov
sti
xor
outsb
fnstenv
mov
mov
or
lret
sahf
jge
rcrl
nop
out
in
lds
mov
shrb
out
into
stc
loopne
mov
xor
ss
add
dec
mov
and
sbb
add
xor
pop
pushf
iret
mov
xorl
test
pop
cmp
pop
sub
bound
inc
pushf
lahf
add
ds
mov
inc
inc
in
pop
xchg
std
cmpsb
mov
push
xchg
pusha
and
cmp
or
aas
movsb
cmp
outsb
mov
insb
pop
insl
sub
les
ljmp
xchg
or
adc
loopne
xor
jmp
divb
xor
mov
jmp
jb
add
or
pushf
pop
mov
and
mov
cmc
mov
pop
les
add
push
shll
addr16
lret
jnp
sbb
sub
fisubrs
fwait
jp
sbb
add
gs
sub
jb
daa
sbb
movsl
or
clc
mov
sub
jmp
push
icebp
jle
ds
test
test
pop
and
mov
lahf
adc
out
lods
faddl
mov
stos
fists
or
fimuls
in
dec
mov
xchg
js
arpl
into
or
in
inc
xor
pop
mov
rclb
sti
mov
lahf
mov
cmp
xlat
fstpt
pop
addr16
repnz
xchg
mov
push
unpckhps
dec
popf
push
ja
sbb
pushf
fistps
aam
cld
add
inc
lods
dec
mov
test
push
xchg
jmp
xor
and
cmp
aad
pop
pop
ror
stos
mov
mov
and
mov
adc
adc
xchg
mov
ficoms
and
jl
inc
jne
loop
lret
fldl
fmull
lock
mov
xchg
lret
and
mov
push
pop
mov
inc
push
insl
repnz
jmp
sti
dec
outsb
push
clc
rcrb
pop
jp
fnstsw
mov
push
xor
mov
dec
sub
jb
cmp
psubsb
cs
addr16
test
popf
mov
jns
jno
andb
and
mov
add
cs
mov
in
scas
enter
xor
fbstp
lret
out
test
cmc
arpl
rorb
lcall
mov
dec
jge
inc
movsl
mov
jnp
aas
cli
clc
ffree
pop
leave
outsl
adc
enter
push
dec
or
scas
pop
and
cmpsb
xor
mov
cmp
shll
adc
jne
fcmovne
dec
aaa
xor
pushf
xchg
daa
jae
adc
cmp
pop
scas
inc
xchg
pop
xchg
arpl
daa
or
ret
lock
fdivrs
stos
pushl
inc
adc
clc
outsb
push
into
cmp
ret
mov
or
inc
inc
iret
push
imul
sbb
jo
rclb
subl
shlb
adc
mov
leave
inc
mov
adc
int
pop
lock
in
into
mov
call
and
push
fidivl
adc
push
jp
adc
ljmp
or
xchg
movsb
inc
ds
loopne
and
dec
push
mov
sbb
scas
jl
out
xor
sub
push
xchg
xor
ficomps
mov
adc
and
cmp
mov
inc
mov
fst
sahf
jg
pop
aam
jmp
xchg
and
fs
or
int
mov
sarb
push
pop
adc
inc
push
mov
rclb
ss
xor
insl
insb
cmp
sahf
jmp
pop
or
movsb
xchg
adc
ljmp
lahf
test
sbb
idivb
out
pop
cmp
das
pop
xor
in
repz
rorl
push
ja
push
add
jb
ret
adc
mov
lods
aas
xor
jo
insb
add
es
xchg
iret
sub
dec
enter
cmpxchg
mov
int
loope
cmpsb
fsubs
cmp
dec
lahf
xchg
pushf
xor
pop
stos
fs
and
std
mov
iret
nop
addr16
push
inc
rol
ljmp
pop
inc
sbb
xorl
mov
ret
sbbb
jp
add
out
inc
sti
jbe
push
mov
and
fistps
and
mov
cld
inc
mov
and
btrl
xchg
cmp
cmovp
fisubs
adc
dec
pop
xor
test
in
push
mov
sbb
icebp
jg
xchg
or
xor
xor
add
add
mov
test
outsb
imul
dec
movsl
mov
sub
popf
dec
jecxz
ljmp
cmp
inc
mov
lcall
js
stos
cwtl
cmp
cld
xchg
mov
mov
ljmp
jecxz
fstpt
add
mov
mov
add
adc
adc
test
push
dec
pop
in
cmpsl
pop
shrb
sbb
dec
pop
adc
insl
sarb
sbb
cwtl
push
or
std
data16
mov
cs
daa
jl
sub
push
sub
add
jmp
mov
fstl
push
add
inc
pop
stos
sarl
aam
adc
lret
cmpsb
incb
dec
test
pop
push
out
cli
adc
push
addr16
movsl
enter
dec
xor
and
lods
and
mov
into
lock
inc
and
cmp
arpl
mov
push
lock
push
add
pop
mov
loop
mov
in
lret
bound
movsl
xor
jmp
mov
in
mov
divl
inc
unpcklps
stc
or
outsl
pop
jge
pop
int3
movsl
xchg
jecxz
es
mov
pop
inc
xor
mov
push
fbld
cmp
in
xor
mov
push
loope
mov
sub
lods
fsts
push
rcl
jnp
push
insb
jbe
clc
push
push
cmpsl
adc
cmp
fistps
fbld
pop
fwait
es
inc
out
push
pop
imul
xchg
jmp
loopne
mov
das
ljmp
popf
push
xchg
mov
adc
mov
loope
mov
mov
not
jp
cmp
ss
xchg
jp
inc
stos
dec
mov
mov
insb
icebp
fs
or
sbb
mov
test
sahf
dec
jmp
jl
repnz
das
sbb
sub
mov
cmp
mov
mov
xchg
iret
pop
inc
lock
pop
mov
mov
ficompl
xlat
dec
cmp
xor
fsts
sub
adc
jo
push
inc
ss
pushf
push
lods
pop
xor
fs
das
movb
cmp
cs
jmp
popf
push
sarl
pop
jnp
push
fdiv
push
pop
fbstp
sub
mov
adc
sub
add
into
pop
aas
rcl
xlat
jbe
hlt
popf
clc
ret
test
push
scas
sub
call
rdpmc
add
stc
xor
in
sub
test
xchg
push
fidivl
incb
sub
push
adc
xchg
dec
pop
dec
das
cmp
lcall
push
movsl
imul
scas
xor
cmp
in
xor
push
jmp
or
popa
mov
xchg
push
jp
mov
inc
in
jns
enter
or
sub
inc
ds
rcll
add
lods
and
sub
mov
pop
pusha
inc
xchg
sub
cwtl
add
orb
insl
pop
push
pop
push
fisttpll
lret
nop
or
adcb
aas
stos
notl
in
cltd
scas
push
in
daa
mov
push
aaa
jbe
out
cmp
sahf
and
pushf
sti
push
cmc
jp
mov
jecxz
fcomi
loop
es
in
popf
mov
and
sub
mov
sahf
sbb
outsb
mov
or
xor
aaa
or
sahf
cmp
or
into
aas
mov
or
mov
in
daa
and
xor
rorl
push
jb
orl
addl
push
mov
ljmp
jns
xor
sub
scas
mov
sbb
fcoml
sbb
sbbl
daa
mov
xlat
push
lret
mov
mov
cmp
pop
dec
push
push
jno
mov
or
add
add
cmp
mov
ret
test
and
movsl
xchg
xor
mov
sub
adc
cwtl
lods
inc
jne
sbb
gs
cmp
mov
aaa
je
rorb
push
sbb
jns
movsb
and
mov
daa
inc
or
adc
mov
testb
mov
add
push
subl
add
push
cltd
and
xor
push
int3
cli
mov
pop
push
mov
mov
adc
push
ds
iret
adc
sub
add
dec
mov
pop
test
sbb
pop
subl
pop
mov
pop
adc
xor
imul
scas
xor
lret
jmp
test
leave
push
dec
shl
xor
cmp
pop
cmc
inc
ss
xor
outsl
push
lock
inc
iret
ret
jbe
adc
ror
inc
xor
xchg
gs
xchg
shrl
dec
push
ret
ja
call
and
inc
mov
add
or
mov
xchg
pusha
loope
lret
mov
ljmp
jg
sub
and
dec
mov
aas
dec
dec
sahf
shrb
sti
nop
ficomps
addr16
inc
mov
loope
in
shll
push
jp
test
sarb
out
aad
dec
aad
out
inc
test
orb
mov
in
pop
stos
pushf
xor
outsb
xor
inc
mov
in
xor
popa
sbb
jmp
jle
or
xchg
clc
pop
dec
xor
outsb
sub
add
cmpsb
lods
mov
xchg
aam
mov
mov
push
inc
jl
cwtl
gs
fiaddl
sub
mov
jbe
lock
sbb
xchg
jne
push
sub
addr16
mov
cmpsl
jp
jns
shr
mov
add
cmp
push
dec
out
shrl
clc
les
dec
gs
das
jno
sti
je
pop
sbb
xor
mov
cmp
sbb
clc
aaa
ret
mov
push
mov
pop
or
jnp
push
lcall
mov
cmpsl
rolb
mov
inc
push
int3
jae
inc
testl
sbb
sbb
addl
arpl
inc
out
out
iret
js
ret
pop
push
ror
out
lcall
inc
insl
jl
and
loope
inc
mov
faddp
xchg
and
jg
push
jge
enter
sub
dec
xor
out
sahf
imul
popl
push
loop
cld
scas
mov
inc
cmp
and
inc
pop
int3
and
jno
inc
lahf
cmp
inc
mov
aaa
fbld
adc
dec
aaa
adc
mov
cs
mov
jp
sarl
xchg
xchg
scas
push
jp
lock
pop
sbb
xor
jns
adc
xchg
pusha
adc
pop
testb
mov
jmp
dec
and
int3
clc
inc
sbb
test
pop
test
mov
lds
bound
out
int3
sbb
cmp
xchg
mov
push
test
insl
xchg
lods
dec
dec
cld
sub
adc
mov
pop
inc
ficoms
cmp
mov
repnz
sti
in
int
adc
pop
pusha
jg
mov
js
pop
enter
or
sbb
mov
pop
sub
aam
aas
popa
in
jp
stc
mov
in
mov
jnp
cmp
mov
push
or
push
sub
xor
cmpsl
lahf
pop
xor
rolb
xchg
mov
popf
mov
jnp
fsubs
pop
rorb
insb
xchg
cmp
push
les
movsb
lcall
add
xor
loopne
sbb
imul
cmp
pop
add
jl
pop
jl
rolb
xor
mov
sub
ss
xor
add
xchg
cmp
push
daa
and
leave
mov
outsl
cli
ficomps
jecxz
and
cmpsb
mov
ss
push
add
insl
mov
insb
push
cmp
rol
ds
push
movl
xchg
cli
in
int3
push
ja
repz
mov
hlt
cpuid
dec
addl
sbb
mov
dec
enter
push
sbb
stos
stos
pusha
pop
pop
mov
adc
ret
outsl
std
stc
pop
mov
maxps
adc
mov
es
adc
jae
fucom
and
ljmp
cltd
mov
jmp
rcrb
arpl
insb
jmp
insb
call
cmc
and
push
xor
xchg
pop
es
into
aam
pop
cmpb
adc
cltd
and
add
or
push
data16
mov
inc
push
sub
stc
shl
dec
adc
ficoms
movsl
dec
sbb
jbe
mov
push
pushf
push
dec
or
in
sbb
sub
mov
cmp
adc
stos
popl
dec
stos
jp
sti
out
push
fcompl
movsb
cmp
push
jne
xchg
mov
fstps
cld
mov
in
jecxz
aam
bound
enter
adc
mov
push
jbe
fwait
cld
jne
aad
adcl
das
sub
mov
out
shll
test
int
jge
or
aas
cmp
cmp
push
pusha
sahf
push
mov
or
test
mov
sub
xchg
xor
dec
and
adc
push
dec
lret
adc
push
dec
jecxz
jp
lods
inc
sbbl
jge
clc
icebp
ljmp
into
mov
add
cli
xchg
cwtl
push
ret
jl
and
xchg
cmpsl
push
or
jp
sub
pushf
xor
pop
ficomps
clc
add
movsb
pop
xchg
mov
cmp
inc
sarb
jl
jnp
pop
pop
xor
aas
jns
in
sub
jns
push
add
test
call
movsb
xchg
push
dec
ds
fisttpll
jo
ds
and
mov
je
cmp
lahf
or
mov
jae
data16
shrd
adc
out
adc
rolb
lds
or
ret
dec
adc
pop
imul
outsl
cmp
call
mov
push
divl
shll
sub
sti
mov
cld
in
push
fmul
lldt
jb
les
into
inc
mov
adc
ds
loopne
in
or
cwtl
jge,pn
mov
test
nop
sahf
pop
int3
jns
vpor
mov
rorl
ret
les
in
cmp
daa
mov
push
cmp
or
stos
scas
cwtl
orl
lea
pushf
sub
gs
push
add
dec
jp
dec
fcomps
repnz
mov
jno
sbb
lcall
and
and
jnp
adcb
aad
std
js
jns
fldl
xlat
sub
out
jne
mov
jg
insb
dec
jno
mov
sahf
pop
loop
insl
jle
mov
or
jle
pop
jb
frstor
movsl
bswap
mov
in
lret
mov
icebp
gs
pop
mov
jl
mov
xor
sbb
nop
push
shl
mov
ret
mov
xor
addr16
iret
pop
dec
jl
fildll
mov
aam
ret
sbb
fstpl
xor
inc
out
cmc
cmpsl
fnstcw
repz
cmp
movsl
mov
jns
aad
sub
mov
dec
mov
fisttpl
push
jnp
adc
mov
lock
rcll
and
js
pusha
jp
xor
call
faddp
add
fildl
dec
test
add
jl
xchg
push
arpl
imul
lahf
add
fmull
in
mov
sub
inc
sbb
lds
aaa
mov
in
es
lcall
mov
outsb
out
push
pop
lahf
pop
xor
and
push
add
inc
aad
pusha
inc
mov
sbb
je
cmp
add
js
fnstenv
or
xchg
gs
cwtl
out
and
cwtl
shl
mov
mov
jle
xchg
test
mov
dec
ficoml
push
das
cs
xchg
sbb
outsb
mov
jg
or
push
stos
push
aas
fbstp
jg
inc
imul
jmp
sahf
lds
cmc
lcall
pop
mov
mov
push
mov
sbb
push
mov
xchg
and
lods
andl
insl
adc
jge
jecxz
push
cs
lret
clc
sahf
xor
xchg
les
push
pop
in
pop
add
lret
scas
sub
pop
jo
push
repnz
test
repnz
stos
cmp
addr16
xchg
adc
das
rolb
xchg
sbb
push
push
lods
mov
sub
in
pop
mov
add
xor
insb
mull
cmpsl
push
push
fcmove
xchg
nop
sub
xchg
push
sbb
pop
fbld
dec
incb
not
dec
repz
and
or
push
add
adc
and
mov
inc
in
or
jge
or
xchg
push
pop
repz
jbe
repz
gs
test
xor
fs
fmuls
int
jecxz
cmp
aaa
jae
popl
pushf
dec
fisubl
inc
gs
jbe
pop
mov
xchg
sub
call
andl
mov
or
in
jns
xchg
sub
fs
subl
out
cltd
subl
ret
lods
aam
sbb
test
xor
mov
pop
iret
inc
out
dec
sub
or
std
data16
mov
inc
add
inc
stc
sbb
dec
xchg
das
jmp
mov
out
icebp
cld
mov
and
add
mov
stos
lcall
filds
sahf
sahf
push
mov
test
push
cs
sub
dec
jne
jle
loop
and
ret
cltd
pop
cmp
xchg
adc
jg
lret
mov
dec
inc
lds
stos
xchg
aas
inc
imul
sbb
add
loop
adc
hlt
subps
fisttps
jle
mov
pop
sub
movsl
add
push
das
mov
call
leave
or
data16
mov
pop
imul
pop
inc
out
inc
cmpsl
ret
out
js
aaa
push
dec
inc
in
sbb
fcompl
lret
xor
lahf
call
inc
fidivrs
jl
stc
ss
rclb
out
ret
lret
inc
cltd
xchg
push
sti
lds
dec
jno
push
jg
jnp
test
pop
sub
inc
jb
ret
sbb
and
xchg
cmp
addr16
pusha
inc
adc
and
inc
xor
and
lds
adc
or
ret
xchg
pop
icebp
and
or
ret
push
daa
and
mov
sub
in
xor
add
shll
hlt
sbb
int3
jno
mov
and
cmp
fwait
aam
nop
mov
jb
pop
aaa
ficoms
fimuls
ret
adc
xlat
nop
popf
je
cmp
and
jne
shrl
pop
push
mov
bound
imull
pop
aad
add
and
pop
jecxz
inc
mov
jle
shl
test
mov
mov
mov
and
jg
mov
sub
xor
cltd
pop
fldl
les
lods
out
js
xor
loopne
rolb
and
pop
pop
leave
add
bound
add
push
jge
jbe
loop
inc
shrl
outsb
and
hlt
pop
into
mov
shl
leave
dec
jne
xchg
pop
xchg
clc
inc
dec
mov
mov
jg
call
mov
pusha
xlat
es
and
adc
adc
push
fnstenv
jge
arpl
or
xchg
jmp
dec
popf
sub
push
adc
pop
lret
lock
daa
jae
loop
loopne
add
lret
push
mov
push
loope
xor
mov
adc
fsubl
es
mov
lahf
in
movsl
jp
sub
aad
xchg
mov
jmp
add
fisubrl
push
stos
xlat
cmp
inc
out
movsb
pusha
movsb
jmp
insl
aad
cmp
mov
push
xchg
xchg
jnp
push
cmc
int
add
cmp
mov
stos
sti
jnp
jg
push
out
lods
push
jmp
fimuls
xlat
popa
or
aas
push
lds
mov
pop
and
push
xchg
fnstenv
and
rcll
ljmp
push
mov
shr
loope
sub
and
sub
push
incb
imul
xchg
push
xor
mov
jg
sarb
inc
call
daa
scas
cmp
xlat
xchg
cld
lock
fwait
jl
mov
rclb
jmp
mov
push
and
int
cmpsl
lods
fmuls
insl
xchg
push
nop
ljmp
inc
nop
pop
mov
jecxz
push
add
sbb
and
inc
xchg
jae
mov
xor
ffreep
test
repnz
sarl
inc
les
scas
out
popf
icebp
xchg
or
fsubr
stos
testb
ss
mov
xchg
fsubs
push
mov
xor
jp
sbb
jo
rclb
sbb
lods
xchg
jo
movb
mov
invd
aam
popf
fstl
sub
repnz
pop
dec
aaa
arpl
sbb
loop
jmp
dec
loope
cmp
push
test
lods
sbb
pop
lds
dec
imul
daa
lods
jbe
sbb
pop
sub
shr
shll
cs
mov
pop
imul
lds
jecxz
hlt
repz
mov
cld
xchg
inc
sti
fisubrl
cs
test
xchg
mov
and
stos
mov
dec
fcoml
cli
fwait
mov
sbbb
xor
stos
jae
lods
pop
push
and
sarb
pop
ds
fildll
into
scas
dec
mov
fwait
rorl
arpl
mov
dec
mov
test
push
test
jmp
shrd
popa
xchg
iret
xchg
adc
mov
pop
shrl
scas
or
sub
cmp
loop
add
xchg
popf
dec
and
leave
andb
or
xor
sub
sub
push
jl
sti
insl
adc
dec
mov
mov
cmp
mov
and
inc
inc
push
jbe
push
pop
pop
jle
mov
mov
dec
insb
gs
dec
push
xlat
rorb
pop
mov
xor
xor
and
sbb
ret
fldcw
lret
mov
dec
sbb
inc
or
jle
fstl
movsb
jp
jecxz
xchg
loop
mov
jns
rorl
cld
outsb
xchg
sub
into
inc
inc
and
test
jno
insl
xchg
sbb
movsb
mov
lea
mov
sbb
scas
mov
fs
jne
inc
into
ljmp
shll
dec
fcmovnbe
mov
daa
and
or
jg
int
pop
jp
or
mov
fisttpll
mov
mov
adc
mov
sub
bound
lds
mov
in
scas
cmp
in
jl
jmp
inc
mov
xchg
inc
fnstenv
fiaddl
xchg
fisttpl
pop
ds
push
adc
ja
ret
out
data16
jno
mov
lock
xor
in
xor
rcl
lods
popa
bnd
sub
aam
cmp
adcl
lea
pusha
jl
sub
movsb
lods
jbe
sub
xchg
scas
sbb
xchg
imul
mov
scas
movsl
gs
lods
test
sbb
mov
fstps
push
cmp
pop
iret
pushf
pop
data16
pop
test
int
or
adc
cltd
add
outsl
sbb
or
sbb
cmp
into
sbb
pop
loop
inc
sub
pop
adc
sub
outsb
inc
jmp
cmp
aaa
int
jle
faddl
test
jl
sub
mov
stos
jb
mov
sbb
test
xchg
hlt
das
outsl
jns
jmp
out
lods
fs
mov
jmp
add
mov
pop
cwtl
jl
add
data16
movzwl
insl
mov
rcrb
mov
cmpsl
popa
es
addr16
xor
std
dec
push
mov
fisttpll
pop
push
rorb
cmp
dec
and
sbb
mov
or
int
cmc
daa
out
xor
add
inc
or
bound
ljmp
mov
adc
pop
jmp
pop
and
mov
aad
dec
dec
sbb
cld
push
dec
mov
dec
mov
xchg
imul
jae
xor
aam
iret
pushf
filds
xor
pusha
push
test
fisttpl
push
fcmovnu
dec
rcll
test
xchg
lods
icebp
mov
mov
hlt
sbbb
fistl
inc
ljmp
mov
hlt
adc
fadds
inc
call
enter
jg
xchg
ficomps
mov
iret
cmp
xchg
movaps
orb
aam
mov
faddl
out
or
xor
or
les
xchg
inc
mov
ret
push
into
cmp
xor
sbb
dec
aad
lds
jl
loop
movsl
shll
jmp
and
xor
xchg
inc
adcl
jne
sub
cmp
out
into
mov
imulb
add
orl
mov
lcall
mov
cmp
loop
pop
in
push
cmpsb
repnz
aas
popa
and
lea
mov
push
add
xlat
xchg
push
orl
jnp
push
in
fadds
add
pusha
push
stc
cmpsb
in
and
mov
push
mov
je
daa
sbb
sub
cmpsb
test
pfrcpit2
jg
iret
fcmovbe
ja
js
imul
lds
xchg
mov
mov
xchg
pop
sarl
in
mov
rclb
lea
repz
jne
fsubr
mov
pop
and
push
sub
pop
mov
daa
js
push
sbb
mov
daa
daa
jb
popa
repz
sahf
jecxz
jecxz
rolb
ss
insb
leave
mov
inc
jl
leave
jmp
bound
notl
movsl
inc
jno
in
push
mov
adc
mov
pop
mov
sbb
inc
scas
es
nop
ret
js
icebp
inc
xchg
fcmovnu
inc
xor
fisttpl
xchg
adc
xlat
add
test
test
inc
sub
shll
cmc
mov
popa
adc
mov
enter
mov
sahf
dec
push
push
stc
daa
sub
decl
mov
pushf
mov
stos
js
fdivs
dec
arpl
mov
test
mov
push
add
loope
xor
push
les
dec
inc
cli
sar
and
data16
pop
int3
push
hlt
mov
jae
jmp
int3
out
insb
dec
rol
and
push
cmp
fwait
mov
sbb
xor
jne
mov
cmpl
or
mov
out
fbld
loop
rorl
add
xchg
push
sbb
icebp
in
add
movsb
mov
inc
mov
sbb
lret
es
int
pusha
insb
dec
das
insb
xchg
push
int3
into
jne
mov
mov
outsl
mov
mov
loop
repnz
pop
insb
inc
mov
mov
lea
xorb
arpl
ret
scas
test
push
stos
pop
lea
in
push
adc
movsl
xchg
test
jnp
insb
lret
and
xchg
and
push
lret
cmp
push
test
mov
jnp
inc
xlat
cmp
pop
test
iret
jle,pt
xchg
xor
pop
faddl
add
jmp
mov
iret
in
push
out
fs
dec
aad
mov
cmpl
xor
xor
add
mov
cs
sbb
xor
mov
push
std
push
cmc
es
sbb
in
push
jo
aaa
sbb
addb
sub
pop
and
xchg
dec
orl
daa
in
lret
pushf
mov
fdivrp
xchg
aam
cmpsl
rcrl
lahf
mov
lret
fisubs
lea
leave
mov
sbb
pop
or
jle
arpl
and
nop
daa
jnp
fcmovnu
jp
sahf
adc
inc
mov
mov
xchg
sarl
loopne
add
mov
and
movsl
mov
xor
scas
repz
repz
lds
add
cmpsb
fidivl
ds
add
dec
icebp
push
jnp
sbb
arpl
push
add
test
mov
fisubrl
in
adc
test
fsubl
xchg
test
pop
mov
pop
pop
fcoml
sbb
sti
clc
jb
jb
scas
dec
mov
dec
mov
sbbb
ficoms
jle
sti
pop
stc
fisubl
inc
into
inc
jne
scas
lret
sub
cs
rcr
jne
imul
mov
sbb
sbb
rcr
xor
sbb
adc
mov
jl
scas
xlat
cmp
loope
insl
xchg
adc
push
sbb
std
movsb
dec
jl
push
mov
cmp
mov
ljmp
rorb
in
dec
bound
pop
test
inc
or
xorl
mov
fxch
dec
jns
jns
add
cmp
mov
or
xchg
mov
test
push
mov
mov
push
and
xor
push
lret
fwait
lcall
push
imul
lods
push
jp
popa
cltd
xchg
and
psubw
gs
inc
bound
jae
cmp
insb
inc
and
lcall
or
pop
stc
xlat
xor
inc
xlat
mov
clc
jne
xor
cmp
lods
mov
sbb
mov
pop
push
loope
frstor
pop
hlt
addb
rcl
mov
hlt
xor
pop
sbb
push
jnp
dec
dec
lods
aad
push
rol
call
clc
push
lret
clc
xchg
jle
cmc
adc
addr16
pop
orl
pushl
pushf
jb
jns
cli
jo
idivb
cmp
enter
dec
arpl
fwait
jle
xor
mov
fwait
pusha
push
inc
out
push
cmp
jp
ret
dec
mov
dec
fsubrl
jno
mov
push
cmpb
mov
jle
icebp
jno
dec
mov
ret
cmpsl
jnp
and
lea
in
leave
imul
rorb
xchg
mov
js
scas
or
cmpsb
inc
loop
cmp
mov
xchg
call
lods
pop
cmp
cmc
xor
mov
icebp
clc
inc
mov
cmp
inc
jns
ja
push
into
mov
or
jae
scas
mov
cmp
or
mov
rcll
outsb
jo
or
mov
and
sub
xchg
popa
mov
pop
movsl
push
mov
int3
xchg
orl
cmp
xor
and
inc
push
mov
mov
pop
cmpnleps
xlat
mov
dec
adc
add
cmp
xorl
push
lret
and
jle
nop
out
cmp
cmc
fld
xchg
pop
mov
sarb
imul
cmp
sub
aad
out
test
dec
add
mov
stc
inc
jbe
into
dec
out
dec
xor
subl
int
pusha
aaa
inc
out
ja
lret
out
push
cli
frstor
stc
xor
inc
or
mov
into
push
clc
aaa
jb
xor
ljmp
lock
loope
mov
pop
xchg
pop
imul
aaa
cs
pushl
jecxz
ljmp
test
sub
adc
cwtl
xchg
fcomip
xchg
loope
push
fldl
sbb
sbb
sbb
movsl
inc
dec
sub
sub
jnp
dec
add
aam
jnp
repnz
ljmp
dec
mov
pusha
cld
sbb
mov
jno
je
pop
mov
cltd
in
add
or
push
inc
out
dec
stc
in
sub
pop
jb
push
test
mov
and
fisttpl
mov
mov
pusha
mov
pusha
push
test
mov
and
dec
add
push
sbb
xchg
pop
or
sub
jne
inc
outsl
outsl
ds
ret
xor
decb
jno
gs
mov
pop
inc
fadd
out
pop
ja
adc
aaa
xor
cmp
push
pushf
rcll
mov
xor
jge
mov
fcoml
add
out
fsub
jns
dec
in
mov
adc
arpl
cmp
mov
dec
fsubrs
fld
mov
sub
andb
jg
pop
mov
negb
jle
mov
hlt
add
fistps
loop
ljmp
in
in
or
sub
sbb
and
lret
jl
mov
shlb
fldl
sbb
sbb
pop
jge
aad
rcrl
aas
push
scas
xchg
pop
cld
jl
mov
lods
sbb
testl
addb
fldt
push
push
lods
sti
movsl
lods
cmp
rclb
scas
fwait
xchg
enter
repz
pop
shrb
add
lahf
jp
xor
in
and
aas
sub
lods
cld
insl
pop
aas
inc
ja
insl
out
unpckhps
mov
inc
arpl
in
mov
lea
enter
jl
lods
imul
out
stos
pop
test
mov
fsubrp
pop
push
xchg
mov
jecxz
xor
dec
dec
pop
jg
cli
and
add
aam
push
and
xchg
mov
outsl
add
pop
lahf
jo
test
cmp
xchg
mov
cmpsl
jbe
in
jae
pop
or
mov
ljmp
mov
jp
out
xor
and
or
lcall
mulb
arpl
scas
cld
std
cmp
lret
gs
cmc
and
or
outsb
push
aas
ficoms
jl
sti
lret
das
mov
push
cs
inc
push
loop
jmp
cs
inc
cmpsl
push
pushf
dec
jno
xchg
mov
pop
je
in
lods
cld
iret
ja
adc
js
shll
jecxz
xchg
mov
or
lret
andb
cltd
pop
mov
sbb
and
clc
cltd
shrb
std
std
adc
inc
mov
add
popa
pop
test
aas
negl
out
test
mov
int
mov
adc
les
aam
rorl
aaa
inc
mov
dec
cs
ss
add
sahf
testb
sub
out
dec
rclb
movsl
cli
add
incb
xor
fcoms
sbb
lahf
dec
pop
sbb
out
jbe
mov
ret
gs
mov
cld
pop
dec
mov
inc
pop
test
addr16
mov
pop
loopne
lock
scas
mov
gs
or
addr16
pop
adc
jae
out
scas
cmp
pushf
fildll
je
cltd
scas
jecxz
add
repz
insb
leave
rcll
xchg
push
sbb
mov
add
in
roll
jbe
mov
int
mov
adc
inc
shll
cmpsl
add
xor
dec
xchg
xor
jge
jne
jle
sbb
sbbb
in
lods
sbbb
repnz
dec
xor
jae
jae
xor
mov
dec
int
in
adc
pop
pusha
xor
sbb
mov
adc
and
xchg
lock
stos
cmp
adc
mov
nop
dec
aam
pop
insl
sub
mov
aad
mov
std
xor
and
ds
lahf
stc
dec
and
aaa
sbb
in
sbb
add
mov
cvttps2pi
imul
in
mov
mov
push
movsb
sub
adc
mov
push
ljmp
sub
mov
pop
sbb
sub
mov
icebp
dec
pop
fwait
in
xlat
xchg
rcll
fs
mov
mov
push
mov
in
adc
repnz
mov
out
push
jb
cmpsb
sbb
scas
mov
adc
add
and
out
aaa
std
dec
cwtl
xchg
xchg
push
lock
punpckhbw
push
orb
test
mov
or
iret
int
sbbl
call
xorb
cmp
lds
loop
pop
mov
lock
into
test
adc
and
leave
test
inc
mov
jmp
mov
jl
sbb
pop
sbb
out
mov
pop
cmp
test
push
and
xchg
repnz
pop
pop
pop
lds
sbb
cmp
add
jmp
push
and
inc
divl
sti
js
dec
neg
in
data16
lret
out
stos
lret
rcr
movsb
lods
shll
or
dec
jecxz
adcb
test
push
mov
adc
daa
das
mov
jns
ret
insb
sub
ljmp
bound
adc
cmp
mov
mov
push
pop
sub
subl
das
xchg
xchg
and
or
lcall
cmp
fwait
push
xor
fstpl
loop
frstor
in
jae
or
loopne
mov
jg
cmpsl
pushf
icebp
mov
jbe
jnp
test
jne
mov
in
lds
cmc
or
jp
sbb
adc
aam
push
sbb
in
pop
cmp
mov
push
jl
and
jmp
fstl
cmp
inc
mov
loope
mov
notb
jg
rcl
inc
dec
pusha
mov
add
adc
xor
add
jno
hlt
push
and
fldcw
fucomi
test
inc
cmp
fwait
dec
das
gs
dec
inc
outsb
push
and
jns
jle
xor
sti
pop
sub
scas
sbb
sbb
sbb
in
mov
aaa
sbb
xchg
lcall
clc
rcl
add
je
mov
xor
cmp
scas
lods
dec
mov
fwait
adc
dec
jbe
xchg
into
outsl
daa
or
jp
xor
sub
jns
insb
or
cmp
mov
out
dec
repnz
lret
jp
fldt
mov
inc
and
xchg
pop
test
sbb
sbb
lea
jno
icebp
call
fldenv
orl
push
js
jmp
add
dec
mov
jecxz
adc
pop
jmp
cmp
data16
cmc
loope
mov
das
ds
cmp
xor
loope
jecxz
push
es
dec
pop
mov
je
and
out
shlb
dec
inc
mov
ret
aam
or
dec
dec
cli
mov
jle
jnp
adc
or
fcmovnb
fimuls
stos
daa
or
add
mov
cmp
push
pop
popa
cmp
out
jmp
mov
xor
jne
xchg
movsb
mov
sahf
lcall
mov
dec
jge
mov
push
push
test
push
mov
stc
ds
int
pop
and
lret
jmp
ljmp
call
in
int
push
xchg
das
stos
mov
mov
fstpl
cld
rcll
xor
pop
test
call
scas
adc
mov
dec
rclb
adc
in
lahf
lret
inc
sti
fisttpl
sbbb
push
push
jo
xchg
pop
out
cmp
hlt
mov
stos
inc
adcb
repnz
inc
add
mov
and
add
std
push
int
in
jl
push
ffreep
ret
addr16
stos
adc
and
push
stc
mov
ficomps
pop
sub
or
sahf
dec
mov
push
iret
jle
lcall
jno
nop
push
cmp
sti
shll
int
push
jae
and
cld
jge
sub
or
stos
arpl
xchg
orl
mov
push
negl
out
dec
xchg
sub
pop
sub
or
imul
int
out
pop
cmp
or
and
inc
frstor
cmp
and
test
push
or
roll
movsl
jae
xchg
stos
sahf
hlt
and
or
pop
repz
out
mov
insl
mov
mov
incl
sarb
lock
ret
xlat
and
leave
jl
push
into
aam
xor
xchg
mov
dec
sti
push
repnz
xlat
loopne
aad
or
insl
arpl
mov
ds
pop
repnz
jno
shll
leave
mov
mov
test
nop
sub
lret
dec
out
cmp
sbb
scas
cmp
out
div
jl
dec
push
stc
push
hlt
cwtl
dec
dec
aas
repz
ret
nop
in
cmp
rorl
push
popa
jbe
mov
mov
and
pop
movsl
dec
xchg
jle
sbb
clc
add
jns
aam
rcll
fnsave
cltd
stc
sbb
fs
lahf
mov
mov
xorl
sub
cmp
aad
push
cli
repz
pusha
test
and
mov
rcrl
test
sbb
rolb
lret
xor
mov
jb
cld
jge
fidivl
and
es
jno
cmp
sub
negb
mov
mov
mov
stos
xchg
popf
fsubrs
jbe
int
aad
push
out
lds
rol
pop
test
cmp
push
cmc
lock
or
push
mov
je
stc
push
fst
mov
xchg
xchg
mov
lods
xchg
lcall
dec
ljmp
ds
and
xchg
das
imul
dec
inc
mov
decb
testb
int
dec
push
cltd
fs
mov
fs
pop
and
or
out
pop
loope
mov
repz
leave
mov
xchg
mov
lret
push
and
lcall
rcrl
out
cmp
loop
pop
or
rorb
insb
sub
clc
sub
sub
pop
sbb
mov
adc
dec
nop
sub
lds
pop
add
lods
outsb
scas
and
or
stos
sbb
lret
jne
in
adc
pushf
repnz
test
add
enter
lods
mov
add
or
popa
lods
mov
push
pop
mov
push
ds
lock
push
cld
rclb
daa
loop
push
add
and
ret
mov
nop
packssdw
stc
es
mov
inc
push
ret
out
std
inc
movsl
mov
imul
pop
fisubs
in
loopne
jae
outsb
pop
push
out
mov
pop
mov
inc
push
cltd
les
cli
mov
inc
mov
jmp
adc
xchg
int3
jge
sbb
push
mov
fsubl
mov
xor
and
loope
cmovbe
xchg
mov
jnp
xchg
or
cmp
mov
test
insb
and
testl
pop
out
test
fdivrl
adcb
shrl
xor
xor
lock
sbb
aas
out
jmp
repnz
aaa
mov
sub
pushf
js
mov
adc
cmp
jbe
cmp
inc
call
hlt
mov
movsl
cwtl
divb
cmpsl
imul
dec
test
and
shrb
test
add
repz
xchg
and
ja
leave
adc
inc
add
mov
pop
ret
ljmp
pushf
jle
outsb
iret
aas
xchg
out
flds
lret
sti
jge
ds
fsubrs
pusha
fucom
fstps
subb
adc
inc
fisubrs
and
or
or
mov
aas
sub
xor
pop
cmpsl
lock
cs
lock
div
movsb
push
jle
lahf
out
sub
xchg
cmp
push
arpl
test
testl
lahf
test
and
push
rol
mov
ret
xchg
xchg
jnp
mov
xlat
gs
je
lods
js
hlt
xchg
adcb
cmp
jo
in
les
jp
rcll
jbe
dec
add
dec
push
fsub
int
lock
mov
dec
add
adc
inc
cwtl
xor
jns
inc
xchg
subb
sar
mov
push
xchg
push
lret
leave
and
lds
test
dec
mov
inc
lahf
xchg
sbb
mov
ret
mov
data16
fbstp
rep
fwait
mov
jle
sti
lret
daa
jb
push
adc
pop
sahf
mov
pop
pop
dec
push
jl,pn
xor
mov
pop
sarl
push
add
dec
pop
shrl
jno
stos
jge
mov
ja
lret
outsb
xor
xchg
popa
int3
pop
inc
mov
mov
dec
mov
lret
stos
and
add
fdivrl
out
insb
jns
mov
pop
out
sahf
xor
inc
mov
fiaddl
xchg
aam
push
fiaddl
dec
shlb
rcrl
fnsetpm(287
loop
lcall
inc
enter
loop
pop
adc
movsl
sub
fs
in
and
jb
and
test
mov
xor
shll
inc
orl
pop
mov
xchg
xor
repz
xor
int
insl
add
pop
mov
push
push
jo
aad
xchg
imul
sbb
mov
in
cmp
xchg
adc
int
mov
jnp
into
mov
out
in
in
sub
inc
stc
repz
push
call
out
clc
dec
push
inc
xchg
fcmove
mov
jmp
sti
mov
pop
add
stos
jae
sbb
add
mov
push
cmp
aad
or
push
lcall
add
add
int3
imul
call
cli
sbbb
add
aam
push
out
mov
in
dec
loope
xlat
shlb
jmp
jb
dec
mov
stos
sub
outsl
aaa
adc
loopne
sbb
and
pop
cmp
adc
cmp
dec
and
inc
dec
pop
mov
xchg
scas
mov
and
push
inc
dec
mov
add
loope
or
movsb
dec
imulb
mov
in
pop
mulb
in
pop
out
cmp
or
int3
pop
ljmp
push
jo
jns
stos
and
adc
hlt
mov
iret
push
decl
pushf
jb
imul
add
ss
sub
addr16
add
or
stc
sahf
jns
lret
push
mov
aam
dec
enter
xor
mov
pop
mov
add
push
in
in
add
inc
cmp
adc
mov
andl
push
jp
ficompl
push
popf
arpl
jne
sub
push
xchg
movsb
mov
mov
pushf
ds
aas
data16
fistpll
mov
and
fs
je
orl
and
cmp
dec
out
into
aam
cs
xor
nop
aam
gs
dec
dec
rorb
inc
in
orb
pop
xchg
sar
ficomps
xchg
inc
adc
sbb
bound
jae
cmp
pop
jne
sahf
ds
xchg
add
inc
dec
ds
push
inc
aaa
push
mov
neg
movsb
dec
rorl
loop
inc
mov
add
sbb
cmp
sbb
jae
lahf
adc
xchg
or
faddl
inc
pop
mov
add
js
inc
and
std
test
xlat
mov
test
lret
repz
loopne
xchg
jo
in
mov
cmp
xchg
dec
mov
xchg
movsl
push
mov
in
pop
push
dec
and
pop
xchg
mov
in
cld
cmc
lock
cli
cwtl
inc
add
pusha
lock
fisubl
lds
nop
jecxz
out
aas
jbe
or
cltd
ret
out
mov
and
pop
iret
out
inc
sbb
mov
out
inc
adc
add
or
jns
inc
scas
sti
and
jno
loope
gs
es
sub
insb
clc
sub
sub
out
les
add
shll
cwtl
push
shl
add
test
pop
rorb
arpl
jg
int3
pushf
sub
repnz
daa
ja
nop
push
cs
jns
decl
fcmovnu
mov
sbb
lea
or
out
call
rorb
lods
aad
sub
daa
mov
ret
scas
jbe
lock
jg
pop
jecxz
xchg
es
add
sbb
adc
mov
rcrl
pop
sub
inc
jl
mov
pop
aas
ret
cmp
stc
add
enter
stos
cmpsb
insb
popa
sbb
lret
neg
push
cltd
push
movb
cmp
mov
pop
fnstcw
pop
or
mov
sub
push
cmp
sub
leave
cld
nop
subb
add
mov
ficoms
pop
test
mov
inc
mov
nop
push
sub
xchg
int3
into
mov
sahf
mov
aad
cmp
mov
repnz
push
std
inc
movq
sub
icebp
ficompl
rcrb
xchg
sbb
inc
out
jae
je
in
frstor
pop
aad
mov
mov
sbb
sbbb
mov
push
jnp
iret
sbb
push
fnstsw
adc
dec
notl
aas
jmp
addr16
mov
rcrb
daa
loopne
outsb
xchg
int3
push
adc
push
repz
mov
adc
iret
add
fidivrl
adc
insb
mov
mov
lea
out
adc
mov
in
push
aaa
mov
ljmp
dec
or
sub
sub
outsb
xchg
mov
mov
in
add
dec
movb
ficoms
mov
xchg
pop
aaa
repnz
movsb
ret
xor
cmp
daa
sbb
xchg
mov
ja
int3
cmp
fsts
fimuls
lock
xor
sbb
stos
insb
int
mov
lds
sub
mov
sub
dec
icebp
pop
sub
shl
dec
ret
je
scas
push
sub
iret
or
sub
adc
or
jne
sub
nop
fadds
int
mov
jns
sar
sahf
aaa
paddusw
xchg
cltd
pop
mov
movsb
dec
cmp
call
sbb
mov
addb
cli
repz
dec
pop
lcall
xor
push
adc
or
sub
rcll
aad
mov
std
pop
cld
rolb
dec
mov
pusha
push
pop
cmp
sbb
add
sahf
sbb
mov
jge
mov
scas
push
mov
mov
or
adc
lcall
mov
sahf
lea
adc
rorl
lret
mov
dec
in
mov
mov
pop
fidivl
push
cltd
cmp
adc
push
stc
jge
outsb
pushf
cmp
dec
cmc
popa
lds
lret
fimull
fmul
stos
xchg
cmp
aas
sub
int3
iret
rcl
mov
pop
lret
std
adc
addr16
adcb
enter
data16
fs
fidivs
mov
in
dec
jbe
lock
shll
nop
mov
xchg
sbb
scas
pop
mov
jge
adc
dec
popf
pop
push
pop
lea
inc
lods
lea
dec
jecxz
loop
dec
data16
adc
or
enter
in
xchg
and
mov
push
into
fcoms
cld
push
mov
mov
out
xchg
mov
jno
pusha
loopne
sbb
jo
cmp
dec
or
push
dec
into
adc
out
sbb
fbld
mov
pop
mulb
dec
ss
push
scas
stos
push
aaa
les
divl
std
outsb
aaa
sub
jp
and
out
jae
in
mov
mov
mov
lock
inc
andl
add
mov
mov
aaa
psubsb
les
push
cmpsb
dec
or
jne
into
push
xor
and
pushf
ficompl
repnz
gs
test
mov
push
and
fnstcw
sub
cld
xchg
ss
pushf
aas
cltd
fidivl
cmp
mov
addr16
push
inc
jg
and
mov
out
cltd
inc
dec
mov
push
push
add
inc
or
mov
faddl
gs
pop
sbb
pusha
push
push
push
repnz
rcrl
push
push
ljmp
cmc
mov
das
inc
add
in
xchg
pushf
push
sahf
mov
adc
bound
sbb
mov
cli
jne
icebp
adc
pop
popf
sub
pop
cmpsb
push
cmp
lock
imul
mov
mov
mov
sub
mov
xor
movsl
lcall
insb
mov
ret
mov
call
rcr
push
mov
sti
push
mov
mov
test
hlt
fs
or
cmp
or
out
test
cmc
sbb
dec
jne
stc
out
mov
add
sbb
bound
and
pop
imul
jbe
loopne
div
sbb
pop
roll
aad
pushf
pop
in
repnz
clc
pop
or
add
fwait
push
jno
sbb
jge
out
test
scas
ja
repz
ret
test
jl
sbb
jnp
jmp
inc
mov
and
test
xor
adc
pop
sti
push
and
cmpb
inc
dec
xchg
das
das
jno
add
jge
pusha
mov
sar
imul
stos
ss
adc
jge
pushf
dec
mov
loope
and
scas
xor
int
xchg
std
aaa
negl
test
push
inc
inc
insl
in
push
cmp
jl
int
push
jno
push
insl
pop
mov
pop
daa
rcrb
or
in
rcrb
dec
cmp
jg
lds
out
and
mov
jo
out
aad
ljmp
std
sbb
xor
arpl
out
lcall
inc
add
cmpsl
pop
add
pop
lret
push
mov
cmc
lahf
adcb
sahf
jge
jb
or
or
shlb
and
xchg
xchg
xchg
pop
or
ret
xor
stos
pop
mov
cmp
fmull
shrl
jnp
add
mov
and
rolb
rorl
push
cld
mov
and
adc
xchg
add
daa
xchg
sbb
mov
cmp
pop
mov
xor
rclb
jne
or
icebp
jnp
and
stc
out
jg
scas
or
mov
and
mov
outsl
add
push
cmp
pop
push
in
push
add
mov
mov
enter
pop
inc
or
mov
pop
iret
adc
cmc
mov
xlat
sbb
pop
xor
dec
or
lods
call
data16
out
push
mov
sbb
or
loope
lock
lahf
jo
or
cld
mov
rorl
mov
out
xchg
xor
dec
sarb
subl
mov
hlt
push
pusha
cmp
jo
dec
enter
test
mov
mov
std
clc
inc
inc
cs
cmp
push
and
pop
mov
mov
pop
jl
push
cmp
sub
jnp
sbb
sbb
push
pop
push
adc
push
adc
add
lret
add
test
jmp
popa
sahf
push
rorb
sub
adc
in
and
adc
aad
in
jo
out
mov
mov
js
pop
arpl
loop
add
in
arpl
icebp
jne
call
dec
lret
insl
cwtl
mov
push
repz
movsl
pop
js
dec
pop
testl
iret
in
push
arpl
fidivl
pusha
cmp
pop
push
push
call
fst
push
shl
sub
aam
and
mov
in
jmp
inc
incb
push
je
add
xchg
xchg
lret
push
sub
sbb
xchg
cltd
mov
pusha
mov
out
loop
cmp
sbb
cwtl
push
movsl
lods
outsb
rcll
lahf
push
out
rclb
test
pusha
lret
adc
push
mov
lret
dec
rcrb
out
xchg
jne
std
mov
fwait
sbbl
ret
sbb
mov
xchg
test
clc
aad
fldenv
loopne
or
bound
inc
jmp
jo
les
ss
imul
sti
xchg
mov
push
mov
adc
out
aas
adc
mov
mov
shrb
fidivl
and
xor
push
cmp
xchg
mov
mov
dec
fs
mov
and
push
scas
imul
xor
xor
inc
call
adc
std
std
sbb
pop
mov
aam
pop
inc
inc
adc
scas
inc
clc
test
ja
ficomps
mov
cmp
cs
push
testb
hlt
test
xchg
push
fcomi
fldcw
inc
inc
xchg
dec
pop
int
cs
mov
les
or
fdivrl
popf
and
jo
mov
pop
iret
or
sbb
jmp
clc
mov
movl
es
fmull
andb
xor
adc
xchg
mov
aas
or
mov
pop
stos
push
pushf
fcomps
jne
xchg
xor
pop
sbb
loop
int
cmpb
pop
adc
mov
lock
mov
arpl
pop
fcoml
popa
dec
and
aam
mov
movsl
fidivl
dec
int3
mov
daa
mov
push
pop
rcll
xlat
sbb
aam
subl
fucomi
lea
ffreep
pop
mov
inc
aad
dec
scas
iret
mov
ja
cs
fsts
es
loope
stos
ffreep
lea
js
cmp
orb
inc
mov
cmp
ffreep
popa
popf
lret
in
inc
aad
jle
popf
push
les
in
rcrb
call
pop
jl
push
xchg
pop
xchg
lds
cmp
push
cmpsb
mov
imul
pop
push
mov
lret
scas
xor
mov
pop
mov
test
iret
xchg
or
add
mov
std
sbb
jge
or
sub
out
push
fstl
es
adc
mov
cli
cmp
adc
jmp
call
ret
lcall
sbb
frstor
xchg
mov
and
jge
jg
adc
mov
jns
insl
jo
cmp
cmc
push
pop
sbb
test
shr
int
imul
xorb
arpl
jae
pop
xor
jl
mov
test
int
push
push
movsl
enter
push
sti
mov
mov
lods
andl
adc
xchg
icebp
mov
daa
aas
mov
hlt
pushf
sub
aas
fisttps
mov
mov
fs
fsts
mov
or
inc
sahf
pop
mov
cmp
iret
sti
lea
mov
and
call
cmc
mov
loopne
outsl
ret
fwait
outsl
test
outsb
push
repz
inc
popf
jle
dec
rolb
xor
in
fs
je
test
xchg
cld
aam
jmp
push
orl
adc
lret
mov
lds
fsubl
mov
mov
jbe
mov
int
xchg
faddl
mov
addb
xchg
nop
repnz
adc
dec
ret
sub
mov
dec
push
loopne
ffreep
mov
mov
xor
aam
adc
aam
dec
mov
jmp
divb
sbb
pop
add
add
sbb
test
mov
scas
push
int3
sbb
xorb
inc
in
pop
data16
sub
dec
jp
rcrl
jo
les
dec
clc
stos
pop
nop
mov
test
adc
mov
movsb
push
xor
push
fcompl
clc
fstpl
cld
sarb
ds
inc
or
pushf
icebp
push
push
into
pusha
int3
lea
arpl
dec
xchg
imul
sub
lcall
mov
adc
outsb
add
repz
outsl
mov
sbb
mov
or
and
or
add
shll
test
sbb
test
lods
js
bound
push
ficoml
adc
test
jle
adc
jle
sbb
dec
push
push
sub
bound
push
lods
dec
mov
ljmp
clc
out
push
inc
jecxz
movb
and
ljmp
sub
pop
lock
insb
inc
xlat
inc
outsb
in
and
mov
mov
adcl
out
lret
insb
push
mov
test
push
jns
add
xor
dec
add
xchg
push
pop
mov
out
movsb
add
inc
std
push
and
adc
ss
cmc
sar
fdivs
cld
xor
dec
sbb
jg
inc
sbb
mov
push
sub
xor
jo
add
aas
rorb
inc
mov
fidivrl
sbb
jp
mov
xlat
or
sub
jne
lret
cmpsb
cli
jne
push
adc
js
push
fsubrs
xchg
xor
push
pop
pop
ficoml
adc
aaa
adc
and
jnp
lcall
outsb
test
xlat
mov
adc
pop
xor
or
btc
add
je
fcmove
inc
add
icebp
adc
stc
sti
stos
cmp
mov
push
pop
sub
ljmp
jl
mov
in
aaa
hlt
inc
push
xor
leave
test
frstor
push
or
mov
push
scas
jle
ror
dec
cmp
cmp
stc
mov
mov
clc
in
push
pop
rcl
clc
jo
aas
sub
inc
push
lock
movsb
insl
sbb
movsb
xor
dec
dec
sbb
dec
nop
jns
jg
lcall
in
xor
loopne
es
sbb
add
mov
jle
lods
and
push
roll
pop
repz
xchg
test
ds
repnz
shll
imul
cltd
js
lret
mov
pop
pushf
mov
js
mov
clc
push
insb
dec
and
mov
mov
addr16
adc
loop
stc
insb
xchg
push
lea
adcl
out
ret
test
sub
adc
fs
push
jne
push
push
ret
dec
dec
or
jnp
mov
enter
inc
inc
js
mov
push
lea
push
and
mov
adc
outsb
hlt
add
dec
enter
mov
lock
in
stos
pop
daa
fisttpll
mov
cwtl
rolb
test
push
cmp
popa
pop
pusha
mov
insb
cltd
jo
ret
and
push
cmp
mov
movsb
cwtl
xchg
clc
pop
mov
or
mov
mov
lods
out
ret
jae
dec
xchg
out
scas
cmp
push
jbe
mov
fucom
xchg
sarb
jne
int3
cs
jmp
cmp
sub
adc
pop
dec
sarl
mov
dec
jae
pop
inc
test
in
lcall
adc
loop
mov
inc
dec
mov
addr16
ret
xchg
mov
sub
push
into
xchg
lock
in
ret
lods
cmp
inc
push
xchg
lods
push
mov
lods
aas
loopne
mov
jne
mov
xor
adcl
gs
xor
sbb
call
adc
loope
and
jnp
test
push
push
std
push
xchg
mov
dec
push
inc
jmp
pushf
mov
mov
jns
rcrl
cmp
pop
mov
mov
stos
test
xchg
jns
xchg
xchg
and
sbb
cmpsb
cmpsl
js
lods
cmc
jmp
adc
pop
xor
sbb
push
lahf
xlat
mov
xor
es
xchg
inc
pop
dec
aas
xchg
outsl
add
mov
add
xor
out
push
mov
jle
cmpsb
ror
dec
pop
push
adc
out
xchg
pop
mull
inc
sub
pop
or
jp
add
xor
cmp
bound
mov
inc
pop
lret
push
roll
pusha
or
fxch
lods
push
mov
popf
push
sbb
pop
add
push
cvtps2pi
out
mov
push
and
es
xchg
idivb
dec
cmp
scas
xchg
movsl
jnp
in
jns
and
mov
jne
sub
mov
dec
fstps
xchg
xor
xor
call
frstor
lock
ret
xchg
pushf
cs
jnp
lahf
sub
cwtl
push
insl
jp
orl
in
mov
aas
jne
dec
adc
ficoml
or
cmp
in
xor
cmp
sbb
mov
bound
sahf
roll
xchg
pop
cmp
cmp
mov
pop
rdmsr
sub
xchg
mov
jl
prefetch
mov
cs
flds
daa
xchg
push
out
pop
cmpsb
fdivrl
rcrl
decb
cmpb
mov
xor
in
rcrb
clc
movsb
dec
pushf
dec
jle
das
xchg
mov
int3
mov
or
cld
pop
mov
nop
jnp
addb
pop
inc
mov
enter
loop
inc
lret
jle
imul
cmpsl
mov
hlt
xor
sbb
xor
std
sub
cmp
sahf
push
xlat
ret
in
jmp
mov
pop
adc
jmp
imul
xor
or
outsl
rcll
data16
push
cmc
xchg
enter
stos
mov
mov
cwtl
add
jo
xchg
fidivrs
jo
adc
xchg
pop
push
dec
cmp
fistpl
mov
popf
pop
dec
call
mov
arpl
stos
xor
xchg
adc
imul
leave
jmp
pop
xlat
pop
jb
inc
stos
fadds
xchg
rcrl
cmp
and
pusha
in
mov
jmp
xor
movhps
adc
push
cli
repz
sti
into
xchg
fldl
testb
jb
ds
test
add
ja
cmpsb
cmp
sbb
pop
pop
movsl
loop
sub
pushf
nop
rclb
mov
dec
divl
mov
cmpsl
push
mov
jnp
sti
push
mov
in
movsb
fs
push
mov
int
out
aaa
rclb
notb
iret
rep
aam
and
lcall
dec
aas
popa
aas
pop
or
daa
rcll
int3
mov
mov
sub
or
rcrb
and
fstl
xor
rclb
cmp
dec
test
fwait
mov
dec
loopne
mov
jge
pop
mov
and
lcall
out
pusha
xchg
pop
cli
int3
gs
inc
jae
lock
fcomps
pop
cmp
mov
out
dec
sbb
xorl
xchg
pop
jg
push
cltd
xchg
in
jl
mov
aaa
jno
pushf
push
jmp
sub
cmc
push
jae
dec
xchg
addr16
and
lahf
jle
stos
jno
enter
push
mov
add
dec
js
sarb
inc
loopne
jle
test
mov
iret
dec
mov
and
loopne
dec
aas
jb
shl
pop
movsb
test
out
nop
sarb
addr16
mov
stc
inc
dec
pop
cli
aam
nop
mov
sti
pop
inc
cmc
mov
pop
insl
sub
addl
ljmp
xor
jp
sbb
mov
inc
add
rclb
clc
movsb
rcrl
fs
aaa
bound
and
sahf
xchg
out
daa
dec
sub
sbb
cld
clc
paddsw
pxor
pop
push
pop
imul
sub
adc
addb
lea
or
cwtl
mov
andl
mov
jb
int
pop
gs
in
or
lret
mov
fwait
imul
aas
es
push
cmp
adc
pop
sub
lock
iret
xchg
leave
cmp
jne
ss
or
xlat
xor
fcoms
je
sub
pop
cmp
in
gs
or
lds
inc
push
iret
add
stos
add
cwtl
mov
loop
mov
dec
cmp
mov
loopne
fstl
dec
std
rdtsc
adc
xor
adc
jl
test
inc
notb
test
mov
or
mov
xchg
pop
jl
push
in
mov
lea
or
pop
rcr
add
in
or
push
xchg
mov
push
cmp
cmp
daa
lock
lods
mov
mov
sub
ret
jnp
pop
or
mov
pop
jno
scas
cltd
sti
add
inc
test
fst
sbbb
scas
fisubs
pop
mov
adc
loopne
fnstsw
nop
mov
sub
gs
mov
adcb
dec
mov
lods
xchg
push
pop
or
adc
shl
clc
or
out
lods
mov
insb
cmpsb
js
pop
jle
sbbl
mov
in
push
call
jno
mov
stc
sub
add
add
jnp
insl
sbb
or
jbe
es
mov
pop
in
mov
mov
cmp
mov
sbb
dec
decb
xchg
lcall
push
push
xchg
lea
cmp
fwait
ret
mov
mov
imul
fsubr
or
mov
dec
test
testb
outsl
popf
aaa
repz
icebp
out
or
lret
lods
movsb
mov
or
fildl
aad
mov
push
mov
lods
jecxz
in
push
adc
mov
cs
dec
shl
jge
or
xor
daa
dec
pop
xchg
data16
clc
adc
or
cmpsb
add
dec
int
test
jo
rcll
lret
dec
out
movsb
movsl
inc
daa
add
sub
cli
and
in
add
cli
jb
cwtl
sub
dec
mov
popa
cwtl
rcll
jae
pop
ja
adcb
pusha
sub
xor
adc
in
or
and
adc
cli
enter
inc
aaa
fldcw
jle
or
or
inc
cmp
out
sbb
push
ljmp
icebp
adc
cmc
and
int3
repnz
adc
inc
out
push
sbb
iret
sub
jb
adc
jno
orl
insb
adc
mov
jbe
sub
pop
icebp
cmp
fstpl
adc
rclb
stos
xlat
adc
pop
mov
mov
repnz
ss
push
aas
outsb
inc
dec
and
jecxz
push
inc
in
in
in
inc
and
js
xor
jg
mov
imul
or
repnz
ss
mov
jo
sbb
neg
sahf
push
fdivrp
xchg
cmp
sub
push
lds
add
xchg
call
jnp
shrb
je
arpl
dec
mov
xchg
mov
dec
cmp
and
pop
int
xchg
xchg
pop
test
std
mov
push
mov
and
add
mov
sub
add
cwtl
lea
enter
pop
clc
xor
shll
sub
mov
cvtps2pi
push
sbb
and
cmpl
and
insb
stos
dec
push
shrl
jnp
popf
push
cmp
adc
sub
scas
xchg
mov
push
shll
sub
cmp
daa
mov
sbb
shrl
fs
decb
xor
jae
roll
fcoms
push
gs
add
rorl
or
scas
or
cmp
test
movsl
mov
jp
iret
xchg
sub
int3
mov
mov
push
imul
ds
and
mov
in
insl
sub
jl
lahf
jbe
add
std
mov
lock
jbe
adc
mov
dec
rcr
push
cmp
add
jnp
pop
aad
lods
fsubrs
xchg
push
mov
push
xor
dec
ja
mov
iret
or
cmc
xor
lcall
sbbl
mov
cmp
inc
fs
cmc
andl
xchg
mov
popa
sub
lcall
xchg
jae
or
std
adc
push
ljmp
push
out
test
in
rcl
adc
insb
fidivl
mov
fnstenv
test
or
movsl
add
mov
xchg
push
push
and
jecxz
jecxz
in
mov
cmp
loopne
xor
pop
jae
dec
push
jg
ds
cmp
out
adc
lds
mov
lea
test
ja
ja
adc
inc
mov
pop
out
or
add
mov
jne
jg
xchg
or
push
fsubrl
mov
jns
fsubrs
and
popf
stos
ss
popa
pop
stos
ss
out
xor
int
add
or
xchg
mov
mov
jmp
push
xchg
sbbl
mov
rcr
daa
pop
aam
adcl
cltd
add
loope
jg
xor
mov
add
nop
lods
outsl
into
sahf
fcoms
fs
cltd
jmp
scas
pop
cmc
jmp
lea
fs
fsubrs
rcrl
mov
pop
add
cmovb
js
fwait
loop
dec
jbe
jnp
inc
stos
stos
adc
lret
fstl
loope
xchg
insb
cmpl
fisubs
inc
in
sbb
mov
pop
decl
adc
test
pushf
push
mov
jno
push
mov
jnp
cltd
push
in
dec
lods
cmp
mov
shr
sbb
mov
jge
and
dec
das
lret
icebp
lahf
or
xchg
xor
mov
inc
add
inc
inc
in
loop
and
out
pop
sahf
outsb
pushf
test
sahf
sbb
or
test
fnsave
xchg
dec
fidivrs
sahf
popf
pushf
hlt
cltd
aaa
fidivl
fsubl
jo
cmp
pusha
add
or
xchg
lods
mov
cwtl
clc
pop
cli
push
movsl
or
adc
cmp
push
repnz
push
inc
mov
fwait
lret
jno
sbb
sub
mov
imul
mov
mov
pop
add
into
lods
enter
or
insl
pop
jns
sarl
hlt
lahf
and
push
mov
psubsw
fprem
adc
insl
jo
in
lods
sub
pushf
sbb
gs
cltd
mov
popf
hlt
stos
test
and
pop
decb
int
loope
mov
lret
fistps
dec
adc
test
push
fldenv
movhps
ss
popa
dec
sub
enter
mov
lea
or
sbb
xchg
lods
mov
fildl
jle
inc
jle
or
repnz
dec
out
loop
mov
test
gs
sbbl
push
rcr
jge
dec
rcrb
inc
xor
add
mov
orb
cmp
sub
nop
stos
arpl
add
xchg
les
cmp
test
sbb
adc
les
inc
mov
mov
add
and
cli
cld
sahf
or
inc
andb
xchg
fs
filds
clc
push
add
pop
lret
and
mov
or
inc
xchg
dec
inc
aas
icebp
dec
xchg
cmp
push
es
sub
sbb
inc
sub
les
jp
in
es
punpcklbw
in
les
jnp
cli
xor
push
push
push
push
aas
xchg
aad
xor
fcmovu
mov
dec
lret
sarb
mov
aas
dec
in
insb
cmp
or
stos
bound
out
lea
cvtps2pd
repnz
stos
jl
imul
xor
cmp
fucomip
sub
and
imul
inc
inc
jnp
mov
test
and
jno
imul
es
repnz
and
test
in
fwait
push
out
dec
inc
mov
cmp
test
mov
ret
mov
int3
dec
cmp
and
dec
out
cmpsl
lcall
sahf
sbb
test
jo
push
fstpl
or
push
mov
xchg
scas
ret
fdiv
push
jmp
adc
pop
mov
ret
sahf
mov
gs
clc
mov
mov
sub
aad
jns
push
fnstenv
xor
sub
or
popf
fistpll
add
xchg
add
inc
cmc
fsubrs
add
rorl
ds
adc
xor
push
std
dec
cmpsl
push
lods
lret
mov
sub
jns
mov
scas
test
jae
fwait
into
int3
adc
cmpsl
out
js
ja
mov
mov
fiadds
mov
and
xchg
sahf
nop
repz
ja
imul
sti
pop
cltd
mov
js
or
adc
mov
ret
mov
sbb
xlat
aad
mov
mov
shll
dec
adc
mov
push
xor
or
popf
repnz
adc
xor
cmc
out
mov
adc
push
scas
out
dec
fildll
push
mov
pop
mov
rcrl
push
dec
push
sahf
test
jns
sub
cmp
dec
cmp
pop
stos
pop
idivl
push
jp
sub
pop
fwait
jle
sbb
lret
dec
lods
fadd
rcrb
jb
in
mov
test
jge
mov
cltd
mov
push
jg
arpl
mov
hlt
orl
and
in
add
call
addr16
sub
and
jmp
adc
pop
out
pop
rcll
clc
mov
lret
sahf
repz
add
push
xor
fs
lret
xor
push
outsb
mov
dec
mov
aaa
loop
mov
les
ret
jg
xchg
test
and
sahf
push
test
or
pop
mov
mov
jns
mov
mov
daa
stos
int
lds
mull
xorl
mov
je
std
outsl
cmp
stos
and
pop
pushf
jmp
insb
nop
sbb
or
pop
leave
aaa
aad
mov
pop
mov
push
dec
push
sbb
mov
add
pop
mov
sbb
popf
notb
push
push
test
xor
data16
inc
addr16
popa
sub
fs
test
mov
rorb
sub
lods
mov
loopne
inc
jmp
pop
lock
addr16
sbb
mov
out
jns
lret
ds
dec
cmp
jnp
cmp
sbb
mov
bound
popf
jecxz
stc
pop
sub
sti
jne
outsb
pop
add
inc
sbb
outsl
cmc
clc
and
mov
mov
and
inc
xor
cmp
and
data16
cmc
inc
pushf
push
inc
ret
cmc
lahf
mov
pop
sub
or
iret
dec
mov
inc
pop
or
lods
sub
cmpsb
aad
push
mov
out
out
dec
add
jns
fisttps
jle
das
nop
inc
xchg
inc
scas
rcl
cmp
jmp
or
cmpsl
xor
les
pop
xchg
ss
shlb
notl
bnd
jne
addr16
filds
popf
lods
sub
sbb
lahf
cmp
cld
xor
popf
push
js
xchg
mov
xor
pop
xchg
rcrl
xchg
cmpb
mov
pusha
clc
pop
shll
sahf
push
fstpt
inc
cwtl
mov
stos
mov
shll
cltd
jecxz
int3
outsl
sbb
aas
mov
inc
fmull
adc
bound
in
mov
scas
lcall
icebp
outsb
in
cmp
jmp
dec
movsb
stos
sub
je
addr16
insl
xchg
sbb
xchg
and
push
cmc
add
sbb
mov
movsb
mov
and
movsl
jmp
xchg
rcr
nop
je
pop
pushf
ljmp
jl
scas
inc
push
ret
daa
cltd
jle
imul
add
xchg
mov
iret
xchg
jb
outsb
shl
dec
iret
outsb
xchg
push
test
lea
in
add
cmp
jae
adc
jnp
ja
lock
out
jecxz
xrelease
div
ret
dec
shrb
mov
pop
cli
xchg
popf
mov
cvttps2pi
sub
pushf
adc
fcompl
jecxz
mov
call
xor
or
inc
xlat
movsl
daa
aad
jg
movsb
cli
sarl
inc
inc
or
int3
jp
scas
cmp
mov
ds
or
leave
repz
ljmp
pop
test
and
loope
adc
sbb
adc
xchg
or
or
sbb
pop
push
pop
jnp
pop
cmp
jns
pop
jno
mov
xchg
shll
sub
inc
popf
add
pop
or
dec
fdivrp
mov
mov
in
imul
jne
test
daa
dec
pop
jecxz
xor
dec
jecxz
mov
jmp
sahf
add
jge
cmp
imul
fldl
mov
push
push
mov
and
fwait
loopne
sahf
test
hlt
and
das
dec
xlat
insb
fs
or
nop
int3
mov
outsl
push
call
lcall
mov
insb
inc
xchg
hlt
nop
mov
out
mov
popa
inc
dec
shlb
xor
pop
sbb
push
add
pop
jns
cmp
popf
in
leave
inc
mov
cmpsl
arpl
jno
pop
aas
cmc
adc
push
xchg
jbe
cmc
jg
orl
test
push
adc
stos
push
mov
arpl
pop
and
push
loope
push
cmp
gs
jle
mov
enter
jp
add
mov
pop
stos
mov
xchg
rcrl
mov
xlat
bound
and
std
adc
pop
push
adc
lret
xlat
and
add
and
fwait
je
aas
xor
test
int3
enter
mov
in
das
out
call
pop
jle
leave
movsl
xor
pop
lcall
mov
jg
jmp
enter
in
fs
mov
enter
fs
mov
inc
imulb
mov
mov
pop
popl
and
aad
pop
jb
push
testb
sub
loopne
sti
mov
in
add
popa
inc
jl
xor
pop
or
inc
inc
in
mov
and
fdivs
jnp
push
in
cmp
ret
sbb
adc
mul
jg
stos
jmp
scas
sub
adc
movsb
in
sahf
cs
jne
pop
adc
mov
iret
stc
push
mov
aas
mov
mov
outsb
mov
cmpsl
inc
les
mov
lret
xchg
js
loopne
cltd
in
xchg
xchg
mov
stos
cmp
cwtl
or
push
mov
add
xchg
and
test
ficompl
in
jp
mov
into
leave
out
mov
clc
mov
in
xchg
mov
in
in
xchg
inc
adcl
mov
cmp
xor
ret
aam
sbb
xchg
daa
cmp
in
repnz
and
jbe
test
lret
fildl
ja
xchg
daa
sbb
loopne
mov
jge
imul
cld
push
jecxz
sti
push
jne
inc
mov
jge
das
hlt
jae
lcall
test
jno
push
adc
dec
xchg
subb
or
cli
andb
push
mov
inc
fistps
out
data16
aad
fs
sub
aam
jae
and
mov
pop
and
or
xchg
ret
roll
push
or
test
in
cmp
or
iret
add
movsb
pop
data16
pop
test
cmp
das
push
mov
imul
sub
mov
xor
or
icebp
in
mov
mov
push
cwtl
pop
xchg
dec
dec
in
cmp
test
jne
adcl
arpl
inc
jae
adc
adc
fimuls
pop
sbb
aad
add
dec
xchg
clc
int3
lock
adc
pop
addl
xor
loopne
lods
nop
mov
scas
add
inc
mov
js
mov
cmp
in
ret
pop
xor
cld
ljmp
lea
in
outsl
out
xor
out
mov
lock
and
invlpg
rcrl
shlb
arpl
pop
mov
jecxz
sbb
jmp
sbb
pop
std
loope
insb
or
outsb
rcll
push
ret
js
inc
hlt
sub
and
jmp
push
mov
inc
fcompp
daa
int
or
call
jg
pop
fnstsw
test
out
push
mov
adc
ss
cmp
jecxz
mov
sbb
push
or
mov
fadds
sbb
fildll
jge
inc
adc
dec
cmp
lea
push
cmpsl
and
test
arpl
jo
jle
or
in
xchg
sbb
lock
fnstenv
negb
mov
popa
int3
ss
insl
jp
inc
jno
mov
aad
repnz
shlb
push
ds
xchg
mov
pushf
cltd
jae
mov
nop
js
out
cmp
shlb
mov
push
jmpw
adc
push
mov
mov
xchg
aad
push
loope
pop
insb
insl
int3
sbb
add
xchg
movsb
sbb
repz
xchg
jmp
pop
mov
movsb
inc
sub
scas
push
stos
test
or
mov
cmpsl
and
jnp
icebp
pop
shl
jae
sahf
xlat
adc
pop
rorl
outsb
cmc
test
shr
mov
lock
mov
xor
orb
mov
xchg
sbb
addr16
or
add
repz
in
mov
sub
xor
imulb
push
pop
pshufw
add
out
or
pop
movsl
adc
shlb
sbb
and
in
adc
icebp
mov
push
xchg
adc
mov
mov
int3
fwait
jns
movsb
xchg
outsb
push
mov
cmp
std
out
leave
iret
ret
icebp
jae
mov
inc
xor
dec
lret
jg
mov
sbb
cmpsb
xlat
cmc
sbb
add
test
int
jecxz
cs
mov
repz
lods
jmp
inc
adc
mov
es
stos
outsl
arpl
cmpl
adcb
xchg
or
ret
jle
out
imul
mov
dec
push
lods
outsl
lods
ljmp
mov
sahf
lcall
es
mov
fldt
jno
ljmp
push
push
mov
pop
in
shrb
pextrw
push
xor
sub
push
loope
imul
stos
ss
sub
lcall
pop
mov
outsb
cltd
cli
cltd
fstpl
aas
out
out
or
add
enter
inc
insl
in
movsl
in
jae
push
aaa
inc
das
imul
loopne
lods
repz
mov
xor
mov
sbb
outsb
das
or
call
or
cwtl
or
mov
push
xchg
subl
mov
push
or
add
fidivl
iret
ret
and
add
or
jo
xlat
addr16
mov
call
xchg
jo
pusha
add
cmpsl
fstl
movsl
dec
sbb
das
daa
mov
jp
cmpsl
inc
popa
sarl
jg
mov
std
subl
incl
pop
jns
dec
inc
xchg
orb
dec
fidivl
cmp
push
clc
in
int3
aad
and
add
fldenv
fists
cwtl
xor
and
ret
push
adc
xchg
rcrb
push
xor
or
fstpt
divb
lock
rcll
mov
sarl
adc
test
cmc
nop
cs
lods
sbb
adc
and
loopne
inc
std
add
pop
inc
xor
lcall
push
testl
stos
jnp
push
and
inc
stos
inc
scas
es
in
mov
out
hlt
jne
repnz
cmp
dec
inc
push
jl
fcmove
mov
adc
push
mov
add
xor
pop
test
or
std
push
lahf
xor
stos
out
or
inc
cmp
push
mov
mov
pop
lret
das
cmp
jnp
sbb
sub
xchg
jmp
cmp
les
adcl
inc
movsb
push
rclb
xor
mul
loope
adc
out
and
mov
xor
dec
lret
mov
in
dec
fs
dec
sti
mov
and
xor
mov
aam
lcall
lret
add
shl
gs
cmp
cld
scas
cmp
stos
push
repz
ret
jo
adc
lret
mov
addr16
sub
dec
cld
push
jb
jae
rcr
out
shll
cld
and
xchg
mov
pop
inc
mov
jne
addl
mov
mov
push
adc
popf
lods
mov
jmp
xor
add
cmp
test
test
jle
xchg
movl
test
mov
pop
push
dec
test
icebp
xor
add
iret
lret
push
mov
into
xchg
pop
xor
outsb
inc
jecxz
or
ds
out
inc
shrb
incb
sbb
sar
xchg
sub
dec
xchg
xor
xchg
inc
les
xor
daa
xor
arpl
and
mov
gs
movb
inc
push
pushf
lods
es
dec
inc
cmc
scas
pushf
inc
idiv
adc
and
shlb
rcll
pop
xorb
addr16
sbb
mov
push
in
adc
lea
fstpt
add
out
pushl
cmpsb
cld
pop
adc
inc
jle
xlat
bnd
xchg
test
cmc
in
push
xchg
fwait
orb
add
xor
hlt
xor
repz
ds
aam
aaa
fisubrl
xchg
sbb
and
pop
mov
fucomp
xchg
daa
aam
sub
cld
divl
fmulp
jl
scas
inc
mov
mov
dec
sbb
fidivl
sub
fwait
mov
mov
lods
pop
sbbb
das
out
inc
jle
mov
in
js
rorl
lods
and
es
mov
mov
enter
les
cwtl
dec
sbb
repnz
adc
lcall
add
movsl
xlat
popa
or
jne
and
xchg
or
mov
add
inc
inc
and
jae
shlb
dec
aas
pop
dec
lret
in
cli
outsl
adc
sub
adc
pop
addr16
aam
pusha
scas
mov
clc
inc
aam
into
test
lods
pop
pop
stc
and
cld
nop
pop
jb
dec
cmp
pop
fists
aad
jmp
pop
dec
fsubs
test
leave
push
sahf
addr16
or
jb
add
sbb
fld
pusha
insl
rolb
jbe
xchg
into
cmpl
mov
inc
loop
sbb
cmc
cmp
out
xchg
adc
xor
mov
icebp
mov
les
lcall
decl
out
mov
dec
cwtl
and
pop
dec
add
loope
sti
jge
inc
jae
mov
shrb
outsl
sarb
fdivrl
pusha
scas
push
adcb
in
adc
bound
mov
roll
shl
xchg
aas
es
inc
or
adc
add
call
test
add
and
aam
sub
in
mov
push
inc
mov
sub
mov
pop
push
push
mov
adc
jp
dec
jge
jge
dec
cmp
fwait
leave
push
jb
je
pushf
pop
jmp
jnp
in
mov
sub
mov
push
loope
adc
data16
cmp
xor
bound
jno
hlt
iret
sbb
adc
pop
mov
push
lds
sub
ss
xor
mov
inc
mov
mov
jl
test
jno
fisubrs
mov
inc
or
dec
repz
cmpsb
test
xorb
test
xorb
sub
jecxz
jno
pop
sbb
clc
aam
loope
pop
repnz
es
xchg
mov
push
clc
jecxz
int
sub
push
cmp
jbe
lret
bnd
shrl
inc
mov
sti
lcall
loope
pop
xchg
into
into
ljmp
xor
mov
mov
cld
in
jne
rcl
jle
jno
lret
mov
xchg
iret
mov
pop
movsb
lahf
stc
mov
lods
mov
fisubs
ret
popf
sub
add
cmpsb
xchg
in
jge
rorl
and
dec
jns
arpl
loope
clc
xchg
adc
mov
ret
add
ss
gs
push
xor
sbb
jecxz
pop
sbb
sub
mov
mov
popf
mov
pop
dec
arpl
out
add
add
movsb
testl
jnp
lret
dec
mov
lret
aas
xchg
cmp
mov
fldenv
insl
xchg
jns
mov
jle
mov
adc
jmp
rolb
and
cwtl
cmp
xor
mov
pop
pop
daa
out
mov
mov
sbb
xchg
mov
add
ret
aam
push
lods
push
in
aam
repnz
adc
lds
jae
jne
pushf
mov
add
fiaddl
out
cwtl
sarl
gs
fbld
xchg
mov
xor
cmp
xor
lods
pop
add
jns
xor
in
loop
mov
fdiv
mov
decb
cltd
clc
pop
inc
xor
pop
mov
mov
jmp
subps
test
push
jl
xor
inc
mov
ljmp
mov
adc
addr16
lea
or
xlat
mov
cmpsb
push
test
cmp
dec
fs
adc
loopne
jecxz
mov
sub
es
mov
and
jae
add
mov
xor
jmp
mov
adc
movsb
and
cmp
sarb
jmp
add
and
cmp
sbb
std
loop
xor
sbb
in
or
adc
mov
pop
pusha
mov
out
pop
filds
cmp
add
pop
mov
cmpsb
and
jg
fdivp
dec
mov
xlat
div
leave
mov
fpatan
mov
fidivrs
stc
pop
xchg
lret
stc
adc
mov
push
fwait
sub
mov
popf
cmpsl
lods
add
inc
add
pop
lock
push
fwait
push
or
aam
sub
mov
sub
mov
and
mov
leave
cmp
cmpl
or
rcrb
cmc
cltd
es
sub
mov
frstor
adc
xchg
inc
sbb
lds
icebp
push
jne
aad
icebp
xchg
orb
xchg
stos
into
and
and
sti
addr16
rolb
push
xchg
mov
xor
lahf
ret
repnz
call
pop
mov
popa
movsb
xchg
fsubp
call
jl
mov
scas
jae
jb
arpl
push
and
dec
xor
jmp
mov
sub
lock
out
and
jp
sahf
cmpl
jge
pop
jecxz
rcll
sub
push
stos
xchg
es
add
and
test
add
mov
in
int3
aam
test
loope
dec
sub
in
xchg
in
ss
dec
test
sbb
lods
inc
out
jmp
dec
or
loope
jne
jne
jmp
test
enter
jno
push
mov
xor
sub
inc
pop
mov
jo
stos
xor
push
push
sbb
jmp
cmp
movsl
pop
inc
bnd
mov
inc
dec
jae
or
adc
int
or
xchg
jecxz
aaa
mov
shl
adc
mov
sbb
add
pop
push
in
jge
inc
and
je
aam
ret
in
add
notl
in
pop
in
outsl
xchg
xchg
inc
call
fwait
scas
mov
movsb
xchg
and
ljmp
iret
mov
pop
sarl
ja
scas
js
cmc
dec
mov
jne
inc
pop
stos
jg
fstpl
mov
jno
insl
push
sahf
out
mov
xchg
movsl
dec
incl
fnstsw
ljmp
cmp
js
and
rorl
inc
mov
notb
pushl
jbe
repnz
sti
shrb
sbb
fwait
mov
pusha
lahf
inc
cmp
inc
cmp
xor
xor
mov
mov
jne
in
divb
stos
xor
xchg
fld1
xor
sbb
outsb
int
sbb
insb
cmpsb
call
and
arpl
cmpb
cs
and
jo
jg
sar
mov
rcr
ret
adc
sub
inc
pop
sub
cmp
mov
enter
pusha
cli
sub
sbb
or
js
ret
fisttpl
test
jecxz
cwtl
mul
pop
add
movsl
push
aam
sub
sbb
add
mov
stos
mov
pop
lea
mov
dec
pop
jbe
call
out
sub
imulb
fwait
add
movsb
sbb
xchg
outsb
imul
das
cs
push
and
daa
cmp
fcmove
das
shll
jg
push
adc
dec
push
or
das
mov
sub
pop
inc
and
jae
push
adc
fisubs
dec
mov
sub
pop
jne
scas
mov
popa
lcall
or
jp
inc
mov
pop
lea
sub
mov
or
mov
or
push
dec
addr16
daa
dec
loopne
mov
cltd
shlb
push
xchg
xor
mov
test
pop
repz
adc
addr16
stos
scas
push
jbe
iret
outsl
and
and
push
fs
add
insb
fadds
ret
jle
cmp
or
dec
testl
clc
xchg
sbb
cmp
sub
and
lds
jp
std
xchg
mov
xor
in
int
addr16
iret
cmp
push
in
je
sub
filds
adc
jg
xchg
fldl2e
xor
push
lods
mov
test
je
xchg
xchg
inc
push
push
mov
stos
jp
cmp
cwtl
pop
idivb
stc
cltd
inc
dec
jle
mov
das
inc
push
shrb
fdivs
loop
or
std
jbe
rolb
xor
movsl
xor
pop
dec
sahf
ret
fisubrl
mov
mov
jns
in
in
js
pop
daa
add
cmc
sbb
lods
inc
sbb
dec
cld
ss
rclb
rorl
mov
in
pusha
inc
int3
inc
fildll
xchg
andb
push
sbb
in
aas
dec
add
lret
push
xchg
mov
icebp
imul
inc
jp
jle
lret
in
adcb
push
scas
adc
sbb
sbb
jb
dec
repnz
ja
sbb
das
jle
sahf
fisttps
xchg
inc
mov
shlb
sbb
inc
icebp
xchg
int3
call
push
and
pushf
imul
pop
inc
push
and
rcll
push
data16
inc
xor
aad
mov
outsl
inc
add
daa
xor
lea
fnsave
shll
mov
ret
sbb
idiv
sub
test
push
jp
sbbl
in
xlat
clc
jo
leave
int
mov
popf
leave
xor
inc
dec
pop
icebp
mov
mov
xchg
and
mov
jecxz
or
idivl
mov
jb
cltd
ret
and
xor
jno
mov
sets
jl
rcll
subb
cltd
push
adc
hlt
das
cmp
inc
cmpsb
jmp
cmp
cmc
shrl
bound
mov
xorb
les
jge
mov
pushf
jle
clc
or
mov
icebp
addr16
or
fnstsw
xor
ljmp
push
push
ret
push
inc
mov
ss
je
insl
add
mov
xchg
arpl
mov
data16
out
push
jg
add
push
or
lods
push
jmp
in
loopne
jle
popa
in
sbb
mov
lea
mov
insb
sub
jo
pop
jg
fbstp
arpl
mov
call
pushf
jp
inc
pop
insl
ja
inc
pop
popa
cmp
out
sub
out
insl
push
mov
and
lods
lds
je
or
jnp
pop
and
inc
lcall
arpl
aad
loop
pusha
xchg
mov
adc
pop
in
pop
xor
fsubr
dec
adc
xchg
lret
loopne
add
mov
enter
cmc
insb
filds
mov
inc
fstpt
out
mov
sub
lods
cli
cmp
ror
sub
gs
jmp
xor
xchg
cld
mov
mov
inc
stos
and
push
ja
int3
sbb
mov
sbb
or
inc
into
sbb
loopne
sub
dec
and
je
cltd
int3
fsubs
mov
imul
cli
pop
xchg
sub
ret
fimuls
mov
imulb
cmp
dec
fucomp
inc
dec
nop
sbb
bound
lea
lret
and
mov
push
dec
in
cmp
sub
aas
frstor
into
pushf
mov
xchg
das
je
xlat
or
inc
hlt
xchg
test
mov
cmpl
jl
mov
scas
pop
adc
fildll
inc
xchg
inc
cli
mov
mov
lret
jg
xchg
lods
adc
push
jl
rcrl
mov
add
lret
sarl
push
imul
mov
pusha
sub
pop
sub
jg
jne
dec
adc
mov
sti
jnp
and
pushf
or
cmp
into
out
jne
inc
xchg
inc
scas
and
cmp
int3
lds
jns
insb
lret
test
jge
add
lods
lret
or
inc
inc
cmc
shll
mov
push
jl
ficoml
lock
sbb
xchg
add
mov
add
jb
jg
inc
jg
scas
les
les
add
addr16
int3
mov
icebp
ds
test
jg
xor
pushf
xor
out
push
xor
aaa
mov
push
rcr
stc
dec
fidivrl
cltd
adc
mov
aad
enter
stos
scas
imul
mov
jns
add
in
or
cwtl
cld
and
ljmp
out
mov
sbb
cmp
cmp
pop
xor
jo
insl
mov
push
mov
lcall
mov
adc
push
shll
hlt
imul
mov
mov
xchg
hlt
daa
shlb
push
cltd
movsb
jbe
pop
test
rcrb
or
das
loop
bound
iret
ljmp
add
xchg
sbb
fnstsw
jns
je
imul
and
loop
shl
call
mov
jg
bound
add
mov
enter
pop
jp
stos
mov
data16
clc
ret
sbb
jo
ret
sbb
or
int3
enter
frstor
test
add
pusha
std
and
cmc
xchg
mov
in
repz
fcmovbe
and
jo
mov
sahf
or
sbb
or
sub
jle
or
dec
lcall
adc
add
dec
sub
xchg
adc
loop
ljmp
fmull
cmp
fs
xor
mov
cmp
leave
out
add
cli
xchg
movl
rolb
clc
dec
out
push
loopne
dec
fwait
xor
adc
mov
ja
sbb
imul
andl
push
xchg
int3
sub
push
or
cmp
lds
out
mov
push
sub
pop
das
inc
push
arpl
and
stos
jg
jmp
or
push
fs
push
push
xor
push
mov
mov
adc
lret
cld
cmp
mov
jb
jmp
in
js
rcr
addr16
push
mov
arpl
outsl
daa
js
jmp
data16
mov
mov
cs
stos
pop
js,pn
xchg
inc
rorb
inc
pop
jae
shrb
push
rorb
mov
in
fistl
push
adc
repnz
mov
xchg
insb
add
fucomp
leave
jecxz
lea
aad
mov
call
aam
mov
or
scas
insb
call
nop
movsl
jbe
sbb
stos
hlt
xor
movsl
and
sbb
xchg
xor
xchg
xchg
mov
in
inc
test
add
xchg
rol
data16
jmp
mov
jg
mov
shlb
jb
cmpsl
inc
xor
fstps
push
jle
dec
dec
lret
shll
pop
dec
push
adc
movl
bound
mov
jmp
arpl
andb
pop
pop
xchg
cmp
push
out
loope
mov
loop
ja
mov
xchg
shlb
es
stos
pop
sub
ljmp
mov
pusha
xchg
gs
or
cmp
cmovp
lock
sbb
jle
fstp
das
dec
pop
cmpb
int3
or
popf
xchg
pop
out
jp
pop
testl
enter
sbb
dec
arpl
pop
les
incl
mov
xor
lea
xchg
mov
mov
pop
shlb
cld
and
mov
mov
sti
aas
push
xor
jl
xor
and
enter
dec
hlt
lods
adc
jae
aaa
out
int
imul
mov
pop
fucompp
adc
ljmp
cmp
lret
sti
mov
xchg
push
dec
sti
sbb
repnz
sete
inc
or
push
stos
add
aam
in
shr
xchg
sbb
cli
test
movsl
sbb
cmp
mov
jo
mov
in
cmp
push
notl
in
lods
fisubs
jno
push
inc
jg
nop
inc
add
int3
cmpsl
lahf
aaa
or
in
loop
mov
jmp
or
sub
dec
lea
pop
and
es
xor
inc
push
add
pop
add
cli
dec
mov
fmuls
insl
adc
adc
sbb
mov
and
push
mov
fadd
mov
lcall
add
sbb
shll
fdiv
add
repnz
push
xchg
addl
fs
mov
pop
adc
imul
mov
adc
notl
xor
cwtl
in
inc
cld
xchg
mov
std
sbb
pop
and
imul
lods
mov
shlb
insl
xor
mov
mov
aaa
pop
loopne
push
loope
fs
in
push
push
std
ret
xor
lcall
push
cli
jecxz
lds
lahf
je
call
add
lock
gs
in
roll
sub
push
and
cmp
cmp
xchg
jg
data16
jns
lock
add
and
sbb
adc
sbb
cltd
pop
xchg
inc
ret
xor
jo
fldln2
inc
rsqrtps
fbstp
mov
imul
or
jnp
dec
adc
inc
lret
je
sub
or
dec
cmpsl
jns
and
pop
fsubp
sub
adc
mov
rcrl
push
jb
mov
adc
adc
xor
and
pop
jb
push
je
adcl
mov
sub
inc
xchg
or
jmp
jae
push
cmpsb
int
push
add
into
lahf
dec
sub
stos
cmpsb
and
shrb
mov
cmc
push
mov
lea
pop
adc
xchg
xchg
jge
jno
call
scas
in
std
xchg
jmp
pushf
hlt
shlb
lcall
or
test
out
popa
xor
repnz
push
cmpl
sub
xor
ja
es
test
sbb
repnz
add
lods
or
mulb
es
mov
xorl
je
or
fwait
out
pop
out
fwait
out
lret
xchg
loop
pusha
inc
inc
mov
or
dec
mov
xchg
add
cmp
clc
iret
jae
in
fs
popa
shlb
pop
cwtl
iret
xor
cli
and
in
daa
adc
scas
push
dec
sub
xchg
fadds
and
out
push
or
mov
sub
xchg
in
movsb
sahf
push
dec
pop
dec
test
cltd
push
mov
add
push
out
scas
inc
rolb
xor
bound
test
xor
loop
push
sbb
loope
and
les
mov
jb
dec
jo
pop
mov
fidivrs
adc
mov
pop
push
xlat
jp
je
pushf
call
push
push
cmpl
xor
popa
push
add
fisttpll
mov
cmp
shlb
jmp
adc
and
or
xor
and
cmp
mov
test
popf
test
js
sub
out
inc
out
es
ja
or
mov
test
jb
fwait
mov
repz
pop
les
sub
call
jmp
je
scas
inc
lds
push
push
shlb
mov
std
xchg
loopne
xchg
add
aaa
fcmove
jecxz
and
push
mov
and
ljmp
xchg
icebp
outsl
push
jbe
int
inc
jp
std
popf
cmp
test
push
dec
add
pop
rep
inc
inc
enter
inc
es
lock
sub
or
push
mov
ljmp
sbb
ret
outsb
cmp
dec
loop
add
pop
cmp
inc
push
cli
pop
lcall
jb
pop
xorl
loop
cmp
inc
lods
int
lea
push
fmul
mov
xor
cmp
xchg
movl
xor
jle
xor
repz
and
xchg
stos
out
or
in
mov
pop
sub
dec
stc
ficoms
lods
mov
ret
insb
push
lods
stos
and
fwait
daa
popa
orl
add
ret
iret
enter
lods
loope
lret
shrl
xchg
clc
add
dec
xor
jne
pop
loop
adc
pop
xlat
orb
cli
je
push
insl
nop
stos
in
xchg
lods
xchg
cltd
popf
aam
aad
adc
scas
cmp
out
lret
or
mov
mov
xchg
popf
sbb
push
cmpl
jmp
fists
inc
adc
add
sbb
jp
cmp
into
fcmove
jae
aad
gs
mov
pop
pop
jno
popf
call
insl
xchg
and
arpl
mov
jge
add
push
popf
aaa
sbb
xor
test
xchg
mov
pop
push
xlat
aas
mov
ljmp
inc
into
sbb
push
les
xchg
fcomip
inc
leave
sub
fdivrs
xor
pop
sbb
add
sbb
shll
xchg
pop
pusha
add
out
jns
shr
stos
mov
loopne
insb
inc
xor
jb
loopne
mov
pop
dec
dec
pop
dec
cmpsl
sub
xor
inc
pop
and
jmp
negl
lcall
xor
inc
in
push
fs
bound
lret
cmc
jae
bound
stos
and
pop
pusha
cmp
dec
out
sarb
mov
xor
fisubrl
pop
adc
test
cmc
push
jo
aaa
or
add
pop
jecxz
adc
andb
push
inc
sub
xor
loope
fadds
mov
lods
sbb
fs
loopne
ja
or
inc
imul
pop
int3
stos
mov
or
out
ds
adc
arpl
insl
dec
leave
je
aad
sbb
jno
xchg
lret
ffree
xchg
pop
push
fxch
fs
ret
push
adc
adcl
adc
xchg
repnz
data16
cld
xor
pusha
push
fwait
dec
dec
mov
cmpsb
cltd
dec
popa
movsb
pcmpeqw
cmp
mov
xor
ret
stos
or
lods
aas
mov
mov
sahf
roll
pop
sbb
mov
in
cmc
cmp
ljmp
mov
cmpsb
addr16
or
or
jb
roll
gs
pop
xchg
push
sti
push
into
call
call
dec
mov
nop
or
in
inc
into
lods
mov
xchg
dec
xor
filds
cmpsl
mov
xor
cs
mov
imul
loop
int3
mov
mov
lcall
xor
pushw
mov
inc
fldt
iret
mov
or
sub
cs
das
dec
lahf
xchg
mov
in
shll
fwait
inc
jo
xchg
jno
les
movsl
mov
testl
addr16
lcall
mov
ljmp
std
jl
popf
push
xor
lods
pusha
sub
stos
jl
ss
or
pop
push
cltd
xor
pushf
pop
add
daa
xchg
jno
data16
popa
push
and
jnp
stos
jb
int3
dec
imul
push
xlat
clc
mov
mov
imul
stos
jo
fisttpl
aaa
std
sub
pop
push
mov
bound
push
pop
push
or
icebp
jno
mov
or
std
lds
mov
outsb
add
cmc
bsf
loopne
and
jb
pop
jg
push
fldl
or
jnp
push
mov
mov
rcr
pop
pop
mov
or
push
dec
mov
repz
call
jae
pop
repnz
push
aad
push
stos
jl
pusha
leave
dec
xor
pop
outsw
inc
push
stos
inc
jle
mov
in
imul
mov
mov
mov
jno
and
pop
add
add
aam
sbb
mov
call
or
xchg
mov
notb
addr16
punpckhdq
mov
data16
jge
lcall
pop
cmp
mov
andb
loopne
jmp
dec
mov
stos
sub
mov
aaa
shll
cltd
scas
shrb
into
imull
int3
arpl
lods
nop
and
ljmp
adc
dec
mov
lcall
shl
nop
fldcw
out
mov
cmp
ficoml
out
sub
xchg
jb
jno
insl
or
andl
cli
pop
cs
lcall
out
movsl
push
cmp
and
add
mov
inc
iret
inc
pop
push
mov
icebp
fldt
bound
sub
gs
push
stc
push
orl
inc
jno
testb
pop
push
pop
xchg
imul
jecxz
jno
xlat
enter
int3
jne
sub
lds
popa
mov
sbb
pop
mov
jo
in
sbb
ret
shlb
sarb
mov
in
fidivrl
mov
cld
xchg
push
adc
push
add
lret
lret
insl
add
mov
push
aaa
sahf
push
pop
lods
fnsetpm(287
xor
push
add
fbstp
add
enter
jp
ffree
sbb
stc
pop
sub
mov
pop
gs
mov
ja
sbb
sub
movb
and
xlat
shlb
xchg
sbb
cld
ss
lret
outsl
jl
lea
mov
pop
dec
lret
lds
daa
notb
xchg
fbstp
insb
mov
adc
xchg
dec
sub
mov
adc
push
jecxz
test
insb
cwtl
hlt
aad
ja
jbe
mov
cmp
xchg
jecxz
sub
and
dec
stc
cmpsb
gs
pushf
andb
push
inc
xor
mov
fdivrl
add
sti
mov
ret
addr16
jns
mov
popf
movsb
out
mov
mov
sbb
mov
mov
pop
adc
loopne
clc
push
jae
pop
dec
add
xchg
jmp
movsb
fisubrl
arpl
pop
sbb
lea
aaa
sub
cmpb
aam
pop
mov
scas
imul
jb
aaa
jmp
arpl
movaps
scas
mov
rolb
mov
push
mov
shrd
adc
in
dec
sbb
inc
frstor
or
fbld
fcompl
xchg
lea
jno
les
aad
cmp
icebp
inc
jp
out
add
jp
jecxz
jnp
addr16
xor
pushf
cwtl
lahf
scas
mov
mov
mov
popa
sbb
cmc
out
mov
pop
in
or
push
fidivrs
xor
mov
test
lcall
push
mov
mov
jle
out
in
lret
sub
inc
lods
test
addr16
iret
inc
or
and
add
stos
stos
insb
xchg
popf
mov
pop
cmc
idiv
insb
scas
je
lahf
dec
maskmovq
imull
imul
cmp
xor
fs
stos
dec
mov
mov
ljmp
idivl
in
cmp
push
in
in
insl
push
cmp
add
or
ss
jl
lret
mov
jns
lcall
mov
lret
mov
xor
std
cmc
testl
fwait
sti
aam
dec
dec
out
xchg
push
inc
cmp
mov
add
fiadds
push
lock
pusha
adc
push
cli
push
or
aam
je
ja
inc
rorl
push
test
cs
orb
cltd
popf
sbb
cmp
xor
add
adc
push
pushf
jnp
fmull
sbb
imul
jl
xor
int
icebp
inc
mov
fwait
mov
mov
inc
repnz
loop
sahf
pop
or
jo
lods
sahf
pop
xchg
xor
mov
mov
das
js
pop
hlt
pop
push
inc
into
ds
lahf
scas
shrl
imul
mov
jg
clc
fistpl
ljmp
dec
mov
add
pop
and
and
adc
pop
jne
rcl
jl
cmp
pop
pop
js
mov
stos
leave
cwtl
fists
jle
cmc
pusha
call
inc
cwtl
inc
sub
out
enter
out
outsb
fcoml
push
xchg
push
setae
outsb
or
inc
js
repz
addr16
mov
out
push
and
mov
xor
in
mov
adc
add
mov
daa
cld
cmp
or
adc
jmp
and
cmp
xor
adc
dec
xor
scas
into
aas
xchg
mov
cmp
imul
rolb
or
clc
scas
add
mov
push
js
gs
ljmp
shl
out
pop
stos
mov
jmp
dec
cmpsl
sub
cmp
lea
test
out
dec
adc
rolb
scas
or
fcompl
jp
push
enter
mov
negb
xor
push
xchg
leave
mov
in
popa
and
dec
ja
adc
push
add
mov
outsl
and
outsl
inc
pop
mov
push
xor
or
stc
in
fistpl
mov
imul
jno
and
jns
mov
dec
call
movsb
adc
dec
aas
jno
inc
sbb
aaa
jp
inc
mov
idiv
test
outsl
jb
add
adc
adc
std
pop
dec
cltd
mov
jno
inc
orb
and
stos
dec
ds
dec
add
jecxz
fisubrl
lods
dec
xchg
mov
inc
cmp
push
jbe
repnz
and
movsl
outsb
push
or
and
cmc
mov
sti
pop
jnp
mov
cmpl
dec
inc
add
ds
aam
mov
sub
jns
pusha
subb
in
inc
psrlq
pop
cmpsl
loop
xchg
nop
xchg
ret
push
sbb
sti
es
mov
add
push
sahf
xchg
push
fcomi
stc
movsl
lret
push
cmp
in
lret
sbb
inc
inc
je
dec
fisubrs
push
mov
push
or
jecxz
ja
pop
testb
mov
rclb
rolb
test
pop
push
push
je
xor
iret
mov
push
repnz
cmpsl
pop
std
outsb
mov
mov
or
jne
jmp
mov
lea
xchg
pop
fldl
mov
bound
dec
or
add
push
jg
dec
dec
dec
xchg
xchg
aam
test
pop
and
nop
nop
add
pusha
xchg
jle
and
sbb
and
aam
pushf
add
cmpsb
cmp
and
mov
gs
dec
inc
sbb
jae
int3
pop
rorl
rcr
xchg
pushf
cli
push
aas
lret
cmp
push
mov
push
stc
xchg
cmp
jns
adc
nop
shrl
mov
pop
mov
adc
push
out
subb
jo
pushf
frstor
push
cmp
adc
aam
mov
xchg
leave
cmpsb
lret
cmc
push
lock
loopne
xchg
push
push
adc
std
insl
sbb
dec
mov
pop
lods
lret
and
pushf
dec
mov
pop
sbb
xchg
add
repz
lods
loope
mov
scas
cs
jae
adc
and
cmp
xchg
mov
and
fucom
shrb
stos
test
hlt
xchg
xor
data16
sub
adc
mov
push
mov
push
shlb
jne
aam
call
mov
inc
pushf
cmp
in
or
xchg
or
add
or
or
test
pop
dec
test
stc
add
mov
nop
xor
sbb
les
out
movsl
test
jmp
xorl
adc
lock
andl
add
cmpsb
mov
pop
mov
jo
ss
nop
jle
out
jno
push
sarl
out
sbb
sbbl
jne
and
or
mov
mov
jno
mov
lods
mov
repz
jb
or
mov
jae
push
pop
scas
repz
or
sarb
mov
adc
jp
daa
mov
sub
inc
pop
js
xor
jmp
enter
lods
clc
mov
pop
pushf
jne
rclb
aam
jae
jmp
mov
fistl
scas
js
clc
dec
aaa
shl
pop
push
in
dec
loope,pt
je
adc
pop
sbb
cwtl
add
mov
mov
or
mov
jge
adc
mov
sbb
out
inc
push
test
jmp
pop
test
pop
inc
mov
call
push
idivl
pushf
daa
push
and
jo
mov
insb
push
mov
fcoml
repnz
daa
mov
mov
sbb
sub
mov
cmc
xor
int
icebp
icebp
inc
sbb
cmp
and
jmp
lcall
leave
adc
sbb
jae
lods
xor
fmull
sbb
and
or
sbb
mov
pop
add
sbb
les
pop
cwtl
stc
dec
lock
lea
and
sbb
scas
dec
loop
mov
out
stc
shlb
call
ss
outsl
aad
sbb
movsb
xor
inc
loope
jb
cmp
in
jmp
jae
add
push
jne
xchg
sbb
int
adc
mov
and
mov
and
subb
pushf
jo
inc
je
fs
xchg
lcall
movb
sbbb
movsl
inc
inc
adc
out
xchg
daa
cmpsb
fimuls
lea
jb
mov
pop
enter
sbb
or
std
addl
out
sarb
aas
out
movsb
lcall
out
imul
cmpsb
push
add
sub
add
dec
push
inc
pop
fistpll
mov
xor
jb
bound
fninit
outsb
xchg
repz
xchg
lret
push
push
pop
mov
scas
pushf
lds
stc
lcall
mov
jmp
pop
rcll
icebp
and
repz
fwait
jmp
movsb
loopne
jbe
dec
idivl
out
add
mov
dec
icebp
repnz
shrb
pop
xchg
inc
mov
mov
mov
mov
inc
pop
das
add
push
sub
mov
fnstsw
push
loop
stos
sahf
xor
dec
fimuls
daa
mov
jo
test
sub
cmpl
push
pop
cli
adc
in
xorb
push
jb
sahf
sub
mov
loopne
js
xor
inc
mov
dec
pop
inc
xchg
jge
inc
mov
push
mov
inc
add
pop
test
jbe
in
stos
pop
or
movsb
cmpsl
leave
pop
stc
mov
inc
aas
xchg
mov
insb
and
mov
enter
in
aaa
popf
nop
xchg
nop
adc
sbb
cld
adc
inc
les
test
repz
add
in
add
push
stc
inc
mov
xchg
push
pop
cmp
fidivrs
xchg
inc
push
das
push
mov
mov
gs
sbb
aaa
ds
call
pop
or
ljmp
lds
jp
icebp
jbe
push
inc
jecxz
call
repz
jge
or
shlb
cmpl
mov
xor
mov
les
jecxz
dec
lcall
rcrl
jnp
in
inc
jge
xchg
adc
pop
inc
lea
aam
push
xchg
test
scas
adcl
movsb
and
cmp
fidivs
scas
sub
int
and
jnp
mov
xor
inc
fcoms
jge
leave
jns
scas
xor
fsubl
cmp
js
mov
sub
jnp
push
mov
ror
pop
push
add
or
push
mov
rclb
mov
or
inc
stos
sbbb
adc
lock
outsl
adc
push
in
arpl
sbb
testb
inc
and
jg
sbb
insb
pop
and
and
inc
and
fsub
dec
js
aad
jbe
ds
add
adc
in
lock
repnz
xchg
movsl
daa
dec
pop
pushw
mov
add
in
dec
cmp
push
xchg
in
stos
lcall
nop
sbb
scas
in
movsl
add
mov
les
jmp
das
xchg
sbb
or
push
and
es
int
test
inc
aam
sbb
das
mov
in
or
pop
aaa
loope
fnstsw
lods
enter
stos
rorl
jmp
add
lcall
pop
fistpl
test
ret
aaa
divb
clc
sbb
xor
stos
in
mov
scas
or
or
loope
mov
push
sub
loopne
jo
icebp
dec
aas
jl
lods
xchg
cmp
push
imul
stos
and
in
out
std
xchg
lret
sarl
push
enter
pop
sbb
dec
jno
sub
ljmp
jnp
fmull
sub
mov
xchg
scas
outsb
jl
dec
push
xor
outsl
mov
out
nop
clc
sti
js
adc
jp
shl
cld
xor
test
stos
cmpsl
sub
inc
xlat
xchg
iret
and
mov
jl
ljmp
jno
shlb
lret
stc
out
jnp
nop
xchg
sub
jo
jle
loop
push
test
cmpl
dec
fbstp
icebp
aam
dec
or
addr16
push
fildl
dec
xchg
mov
fisubrs
mov
cmpb
pop
lahf
lods
and
ljmp
int
cmp
cld
sub
imul
ljmp
jae
push
clc
addl
inc
mov
mov
xor
and
bound
ss
jne
push
dec
test
push
add
push
lret
pop
dec
stc
movsb
lahf
add
or
aad
jecxz
xchg
loope
data16
gs
lock
mov
cmp
xor
outsl
or
and
enter
dec
int3
mov
out
sub
fwait
leave
pop
jb
jle
es
hlt
xchg
jno
shll
and
mov
cltd
call
stos
into
sbb
and
fcomps
sub
add
das
mov
dec
cltd
arpl
push
cmp
movsb
repz
and
jno
push
push
imul
callw
into
push
jns
sbb
mov
mov
aaa
or
testl
dec
xor
imul
xor
arpl
adc
push
movsb
mov
addb
pop
out
xchg
sti
dec
push
push
jge
or
push
sbb
dec
popa
cmpsb
jae
pandn
sti
test
xchg
movsb
shl
fldcw
mov
nop
mov
sbb
shl
dec
xchg
in
inc
pop
or
cmp
xchg
mov
xor
push
jmp
aas
out
arpl
movsb
mov
lea
nop
push
iret
dec
lcall
xchg
call
push
mov
jmp
inc
and
in
push
dec
clc
je
dec
dec
das
pop
and
or
jle
inc
mov
dec
xchg
insl
roll
jl
dec
mov
shrb
or
mov
push
ds
jnp
xlat
mov
cmp
mov
pusha
imul
mov
push
xchg
imul
fsts
mov
sub
scas
and
in
dec
inc
sarb
incl
lods
leave
mov
xchg
cmp
cmp
push
pop
inc
fsts
inc
lcall
mov
push
push
xchg
push
test
add
sar
ret
or
push
packuswb
adcb
lret
test
pop
jge
out
int3
mov
enter
out
shlb
xor
cs
es
jmp
mov
sti
inc
mov
dec
les
push
or
xchg
loopne
sub
sbb
inc
jmp
pop
mov
pop
aad
fdivrl
scas
wrmsr
and
jle
dec
imul
mov
cmc
push
punpckhdq
aad
jg
mov
sbb
negl
dec
mov
add
adc
xor
mov
xchg
gs
clc
sbb
fisubl
into
push
dec
lldt
lret
loopne
xchg
mov
aaa
aas
bound
leave
pusha
test
lahf
jb
insb
enter
fwait
mov
adc
push
ret
fwait
pop
pop
push
dec
pop
shll
cltd
cmp
jbe
adc
and
mov
ret
lret
mov
mulb
jg
fisubrs
dec
call
stos
mov
add
mov
mov
mov
mov
jge
dec
lods
mov
push
jg
dec
mov
imul
jnp
jne
adc
jb
imul
stos
fs
inc
faddl
outsb
pop
flds
xchg
inc
dec
pop
xchg
mov
add
mov
xor
testb
stc
add
sub
jb
push
popa
jp
leave
aaa
aad
inc
int3
jo
mov
jae
xchg
aad
jp
or
sahf
xor
pop
aaa
xor
inc
lds
jp
dec
push
or
ljmp
adc
sub
push
add
aaa
icebp
dec
cwtl
bound
mov
xor
iret
mov
sbb
repz
rol
adc
shrl
imul
pop
mov
stc
and
add
pop
cmp
cltd
mov
dec
or
xchg
cmp
xchg
std
mov
loopne
lret
cmp
inc
shrl
inc
mov
mov
push
mov
fildll
add
dec
cmc
data16
shlb
mov
lods
pop
stos
mov
jnp
das
cmpsl
shll
sahf
cmpsb
mov
ficomps
pextrw
adc
push
dec
enter
scas
mov
push
sbb
push
mov
jle
jae
jnp
rdpmc
mov
mov
push
sbb
lds
dec
fs
jae
fldcw
add
push
loopne
add
adc
adc
jns
push
pop
imul
and
adc
sahf
data16
sub
and
inc
fisubrs
notw
jg
fisttpll
icebp
sub
jmp
mov
xchg
inc
mov
std
lahf
shll
decl
xor
pop
cs
fwait
call
sbb
add
mov
push
mov
pop
and
push
icebp
pop
adc
jl
inc
incl
rorl
jns
push
xchg
mov
or
jo
sub
pop
shll
aaa
out
cmp
push
sub
iret
mov
push
mov
sub
dec
ss
mov
mov
mov
int
xor
pop
jb
adc
dec
dec
mov
jo
lahf
daa
xchg
scas
sbb
cmp
push
or
mov
mov
out
adc
or
push
dec
mov
lahf
outsl
shrl
jb
jne
xchg
push
imul
inc
cmp
jle
jecxz
repnz
loop
push
sbb
aaa
mov
sub
es
repz
cmpsb
out
orl
sbb
enter
aad
push
inc
arpl
dec
cld
bound
bound
sbb
fildll
pop
xor
aam
notl
imul
xchg
daa
or
stos
mov
xchg
inc
rcrl
ret
mov
shl
iret
arpl
cs
not
dec
xorb
dec
xchg
inc
cmp
jo
sbbb
shrb
dec
bound
jno
fisubrl
xor
xchg
inc
in
scas
in
or
dec
lock
mov
cmpb
xor
cld
pop
pop
pop
sub
dec
lods
inc
into
sahf
pop
mov
push
cmp
jne
xchg
or
or
and
lock
in
nop
ss
mov
loopne
sti
test
sub
cmpsl
and
pop
cltd
mov
cltd
push
fldt
lods
push
out
cmp
xorps
out
mov
xor
aam
test
adc
popf
into
mov
in
and
push
sbb
stc
ss
xor
ret
es
jl
leave
dec
ja
jecxz
adc
movsl
mov
and
mov
movsb
jae
sbb
mov
das
dec
sbb
push
aad
mov
pushf
sbb
cmp
insb
lahf
shl
ret
sbbb
xor
cmp
mov
mov
lods
sub
xor
jg
loop
stos
jmp
pop
fimull
cmp
cmp
mov
mov
mov
add
cli
mov
mov
out
leave
stos
adc
mov
mov
cmp
dec
xchg
cli
push
enter
fs
hlt
scas
outsl
ja
ja
adc
sub
push
or
xorb
cli
add
xchg
mov
add
inc
cld
sbb
add
into
cs
xchg
inc
out
mov
in
xor
call
aam
sbbl
jnp
ljmp
das
sbb
ret
xchg
cmpsb
or
mov
xchg
push
nop
mov
xor
pop
adc
jecxz
js
adc
in
movsb
in
in
jmp
idivl
stc
addr16
cmp
xchg
in
mov
push
ret
aaa
roll
ja
pop
enter
jno
jp
adc
push
inc
hlt
scas
inc
xor
jo
mov
scas
add
jg
ret
xchg
test
ret
cmpsb
jp
aad
cmp
dec
mov
adcl
and
sub
sahf
dec
xchg
jae
idivb
jp
and
sbbb
fcmovbe
and
sarb
cmp
cmp
inc
stc
das
push
xchg
rcl
xchg
pop
fdivl
adc
shl
adc
adc
dec
jmp
mov
cwtl
dec
scas
jge
xchg
imul
ficoms
xchg
jle
inc
sub
movsl
aaa
mov
leave
pop
sarl
scas
and
cmp
inc
arpl
xchg
xchg
mov
stos
jp
pushf
mov
or
dec
insb
sarl
lods
arpl
sbb
jge
cmp
fists
xchg
ja
dec
push
iret
ss
into
ret
call
out
addr16
pop
mov
sbb
mov
adc
mov
stos
out
fwait
icebp
inc
into
mov
hlt
adc
inc
ds
and
mov
nop
push
mov
jo
inc
xchg
popf
mov
cmpsl
mov
mov
and
or
pop
xor
or
call
cltd
lods
mov
push
mov
aas
cmp
cmp
fdivrl
ja
jge
mov
add
ds
nop
or
test
and
dec
lock
add
ret
out
sbb
cs
stos
pop
sbb
xchg
cmp
shl
dec
js
sahf
cmovo
mov
xor
xor
add
test
lahf
fcmovbe
mov
loope
cs
dec
sbbl
dec
cmpsl
fmull
add
icebp
sbb
jecxz
mov
rcr
popa
incl
mov
xlat
and
lock
stos
inc
mov
jae
jns
jle
mov
shrl
adc
insl
push
mov
ja
leave
shrb
push
xchg
sbbl
test
aaa
mov
in
bound
adc
pusha
rcrl
xchg
out
xchg
arpl
psrlq
test
xor
cld
ss
aaa
pop
xor
je
setns
cmpl
adc
jnp
lret
mov
out
cmpsl
or
scas
xor
push
mov
adc
xor
push
iret
or
testb
cmp
xchg
jg
push
addr16
mov
lods
inc
fsts
repz
and
inc
xor
jae
test
shrl
popa
es
sbb
test
inc
mov
call
cli
pushl
loop
mov
add
daa
outsl
mov
or
jbe
xor
loop
pop
sti
mov
xor
mov
inc
or
popf
cmp
add
pushf
mov
cwtl
add
mov
aas
xor
fistpll
repz
aas
push
xor
inc
repz
test
xor
sbb
xor
scas
and
inc
push
sbb
and
xor
popa
dec
in
nop
mov
hlt
test
ret
jecxz
imul
std
sbb
mov
les
mov
cmc
jns
or
enter
fidivrl
mov
sub
test
scas
pop
mov
push
pop
in
cmp
ret
xor
inc
inc
inc
mov
pop
mov
test
jg
lret
movsl
mov
jg
out
dec
iret
xor
test
mov
stc
movsb
mov
pop
repnz
adc
or
dec
arpl
mov
andb
aaa
cmp
push
cwtl
push
pop
push
add
push
ret
push
mov
and
xchg
gs
fcom
les
fildll
lock
sub
loope
lret
fisttpl
movsl
inc
es
ret
out
fs
push
xchg
cwtl
mov
stos
rol
add
cmp
sbb
adc
icebp
inc
stc
xchg
sub
test
push
imul
mov
repnz
cmpsl
fwait
aam
mov
jg
aam
pop
pusha
cltd
popa
lods
bound
mov
cmc
movsb
jl
xchg
mov
and
clc
cmpsb
movsb
ds
xchg
insb
aas
pop
sbb
xor
je
jg
js
sbb
sbb
inc
aad
push
xchg
sub
in
mov
movsl
mov
dec
pop
scas
lock
dec
lret
add
mov
or
push
pop
pop
aam
mov
cmp
push
xchg
mov
mov
adc
and
adc
cmpsb
cmpsb
inc
imul
jmp
xchg
dec
mov
add
bound
cmp
or
repnz
add
mov
add
add
sub
lret
out
dec
arpl
fs
adc
dec
and
inc
inc
ljmp
mov
jecxz
xor
aad
push
sub
mov
push
test
add
out
mov
pop
jbe
add
xchg
aad
iret
mov
or
cmp
daa
jb
call
xor
iret
sbb
xchg
sub
inc
adc
mov
dec
enter
daa
adc
idivl
ds
xchg
cld
mov
mov
xchg
sub
mov
cmp
cmpsl
xorl
aas
rsm
inc
push
pop
cltd
fs
fcomps
aam
enter
mov
jae
and
in
addl
jne
test
inc
call
push
and
cs
adc
fldt
pop
scas
imul
dec
add
loope
sub
in
into
les
mov
roll
cmp
jle
or
into
in
ret
mov
inc
test
cmpsl
jb
in
xchg
pop
out
xor
or
lret
cmp
jge
and
push
dec
mov
movsl
ja
ror
sbb
jmp
les
sarb
je
mov
jbe
sub
ret
ret
jmp
popw
or
nop
push
jmp
lcall
fwait
cmp
cli
mov
sbb
mov
xchg
mov
pop
mov
daa
pop
adc
push
ds
sbb
das
dec
mov
pop
or
xchg
xor
mov
jb
fcmovb
sbb
shrl
jb
mov
and
sbb
call
out
sbb
xchg
out
or
ds
push
fimull
or
sbb
ucomiss
and
lds
sub
inc
out
inc
adc
fsubrl
add
push
push
cmp
sti
cmp
add
mov
mov
insl
pop
and
popf
jbe
xor
es
pop
jecxz
fimull
sbb
adc
loope
lock
mov
je
jae
xchg
mov
xlat
pop
repz
add
lock
daa
jo
loope
sbb
std
xor
inc
movsb
sti
mov
idivl
dec
std
sti
cmp
xchg
or
inc
fwait
push
dec
xchg
jge
dec
in
dec
mov
add
xor
push
jae
sbb
and
fistpll
adc
out
and
in
xchg
push
jp
adc
rcl
mov
cld
push
movsl
mov
dec
sahf
adc
leave
xchg
dec
dec
loop
dec
cli
dec
test
push
call
dec
lret
pop
sub
jge
lods
or
stos
sub
outsl
cmp
lock
cmp
shlb
scas
sbb
mov
or
loope
imul
xchg
lret
fsub
add
pop
rclb
in
incb
xor
and
sub
add
jge
push
and
into
repnz
xchg
xor
mov
pop
and
adc
nop
sub
push
cmp
fs
push
imul
arpl
sub
bnd
dec
xchg
mov
jl
mov
pusha
aaa
push
das
push
out
push
movsb
insb
sub
xor
lcall
arpl
and
js
mov
fisubrl
sbb
mov
add
mov
arpl
and
xor
cmpsb
test
inc
add
jmp
lods
mov
shll
xchg
ljmp
cmp
insl
push
fildl
dec
or
es
or
push
pop
mov
adc
cs
adc
in
xchg
mov
hlt
fistpll
stos
jae
test
jmp
push
wrmsr
cmp
jp
daa
mov
jp
push
xor
xchg
idivl
in
repnz
repnz
sbb
cld
ds
icebp
mov
pop
mov
sar
push
add
repnz
fidivl
lods
or
or
jmp
stos
sbb
dec
sub
mov
les
aad
inc
xlat
mov
dec
pop
pushf
cltd
out
push
cmp
xchg
inc
and
call
ss
mov
inc
mov
jne
jo
or
sbbb
xchg
cmp
cwtl
icebp
dec
data16
scas
xchg
mov
xlat
push
fwait
xchg
fwait
or
movsl
mov
aad
xlat
adc
outsl
stos
dec
das
inc
mov
sahf
movsl
in
lcall
mov
xchg
adc
push
mov
pop
je
movsl
push
xchg
out
and
jae
scas
dec
push
out
frstor
jbe
cmovge
insb
cmpsb
sbb
femms
lock
xchg
pop
cld
cmp
in
dec
sbb
imul
or
xor
xchg
fbld
ss
mov
clc
sbb
sub
fbld
jns
and
icebp
pusha
or
adc
ret
and
loop
les
cmp
push
enter
jb
sbb
pop
cmp
nop
repz
stos
adc
xor
pop
js
sbb
cwtl
xor
in
add
mov
pop
insl
dec
cmp
push
pop
cmpsl
cmp
adc
cmc
test
inc
cmp
xor
add
fnstsw
icebp
testb
jge
addr16
and
and
je
in
mov
mov
in
add
pop
dec
lods
and
mov
pop
loopne,pn
clc
dec
mov
repz
add
dec
out
pop
ret
test
mov
pop
mov
out
scas
add
jl
cmp
jp
mov
aas
sub
cmpl
idivl
or
adc
aas
loop
insl
mov
adc
gs
popf
aas
mov
adc
jb
insl
lret
out
aam
ret
cltd
gs
jns
add
cwtl
jnp
fcmovne
aad
and
into
cmp
xchg
out
jecxz
push
xor
dec
addb
or
xchg
jmp
inc
pop
std
cmp
andb
jp
sbb
ret
movsl
dec
ljmp
xlat
in
mov
dec
ljmp
in
fsts
and
js
dec
mov
push
sub
dec
pushf
pop
jne,pt
or
test
movsb
mov
jp
scas
mov
push
stos
pop
into
imul
movsl
les
sbb
hlt
cmpsl
rorb
or
lret
jb
repz
dec
arpl
out
xor
enter
dec
inc
popf
cld
or
push
cmp
inc
aam
pop
mov
pop
add
xor
sub
enter
faddp
xor
and
push
xchg
sbb
les
add
stc
outsl
cmp
sbb
push
or
insl
daa
or
or
cld
pushf
std
cmp
inc
xor
je
std
repz
outsb
mov
xor
je
push
subb
sbb
add
cmpsb
ja
mov
push
and
mov
int3
xor
das
out
jmp
mov
jae
dec
push
mov
pop
inc
cs
xchg
out
pop
mov
adc
adc
sbb
stos
out
push
dec
sbb
add
cmp
les
sahf
mov
add
mov
push
inc
push
rorb
cmp
data16
jb
mov
xor
and
or
and
xor
mov
clc
add
pop
mov
std
or
mov
jp
and
int
sub
imul
jmp
add
ljmp
cltd
mov
imul
mov
cmp
pop
inc
mov
ljmp
jl
sahf
jae
inc
inc
or
lods
xor
mov
sarb
in
sbb
pop
clc
cs
jge
pusha
repz
cwtl
adc
icebp
dec
inc
mov
in
in
add
clc
ja
fists
add
mov
and
lock
stos
jbe
xor
xchg
in
push
sub
xchg
xchg
scas
dec
jb
out
cmp
fcomps
out
bound
dec
pop
orl
movsl
imul
cmpsb
je
jbe
stos
mov
lret
popa
jns
out
pop
pop
ds
pop
mov
mov
push
loopne
imul
pop
add
mov
call
scas
dec
bound
mov
je
cmp
adc
mov
jecxz
mov
push
nop
mov
jp
mov
sbb
clc
mov
xchg
sbb
insb
pop
lret
mov
jns
bound
and
adc
mov
dec
repnz
pop
imull
mov
ret
jmp
and
mov
jmp
movsl
sub
insb
stc
dec
adc
or
test
bound
int
xorl
sub
inc
pop
leave
inc
dec
dec
jp
push
jb
dec
es
in
cwtl
rcll
incl
and
jmp
fiadds
xlat
xorb
mov
fsubs
mov
sarb
sti
jp
sbb
mov
push
push
test
movsl
lea
sti
insl
leave
test
pop
iret
and
mov
dec
aaa
jbe
rcrb
xchg
xor
push
addr16
leave
adc
pop
fisubs
fnsetpm(287
fistl
sti
shlb
mov
stos
xchg
fs
out
xlat
mov
add
jbe
nop
cmp
push
lret
push
scas
inc
sub
loopne
in
mov
in
fs
or
mov
push
jo
xchg
dec
sbb
push
ficoml
sub
add
call
mov
push
jp
cmp
int
daa
jge
mov
imul
xchg
jb
mov
xor
cmp
and
pop
fldt
les
loope
sbb
sbb
mov
pop
sbb
imul
mov
mov
sub
mov
xchg
mov
mov
fdivrs
cltd
xor
scas
data16
jbe
inc
xorb
lret
cmp
mov
js
mov
pop
pushf
mov
daa
jno
adc
push
lret
lds
shrl
sbb
cmpsb
sub
gs
faddl
mov
test
pop
mov
pop
cli
movsb
push
int3
pop
leave
jge
xchg
jge
mov
xor
das
hlt
jp
adc
mov
lcall
imul
dec
mov
negl
movsb
sar
jno
xchg
push
inc
push
and
xor
or
in
clc
in
push
xchg
aaa
je
dec
mov
out
pop
std
xlat
inc
test
mov
pushf
push
inc
mov
xlat
or
das
aad
mov
sub
sub
sahf
stc
fs
mov
pop
ja
fcoml
pop
mov
fidivl
and
les
outsl
mov
add
jo
cli
sub
lods
pop
pop
mulps
lcall
xchg
dec
mov
jg
sahf
dec
cmpl
jae
data16
jae
and
test
mov
jg
xchg
mov
js
fsub
xchg
inc
push
mov
sbb
les
stos
sbb
and
or
fiaddl
and
jns
leave
lret
mov
dec
loop
cmp
movsb
jecxz
in
jo
jbe
lcall
and
cmp
jge
lcall
out
inc
test
push
pop
mov
aas
ds
data16
popf
shll
imulb
pop
xor
mov
cmp
dec
adc
mov
mov
mov
push
jnp
movsb
add
addr16
test
sahf
mov
mov
out
ret
lock
es
jbe
xchg
insb
lret
scas
sbb
mov
jne
push
mov
insl
loope
fs
push
lcall
cli
add
decb
mulb
icebp
mov
popf
fiadds
inc
push
xchg
imul
lods
adc
sbb
sti
xchg
lahf
addr16
push
xchg
in
gs
test
test
jnp
add
xchg
jecxz
and
icebp
mov
out
mov
sub
fdivrl
rol
daa
mov
loope
lds
loop
shll
push
mov
clc
jmp
xchg
add
lock
data16
cmpsl
xchg
shll
mov
mov
into
dec
dec
mov
sub
jae
mov
mov
mov
cli
iret
mov
push
fmuls
cmpsl
test
fisubs
dec
imul
mov
sub
fstl
jae
and
clc
xchg
mov
loop
subl
sub
adc
cmp
sbb
add
sahf
mov
mov
cli
xor
push
addr16
ret
mov
sti
xchg
test
pop
testl
insb
rcr
pop
aas
es
cmp
mov
rcr
test
mov
test
ficoml
call
xorl
testb
fistl
push
fxch
cmp
or
jnp
sahf
mov
lret
pop
xchg
mov
cli
mov
pop
lock
sarb
xlat
xlat
repz
std
mov
fistps
lret
movsb
repz
lcall
pop
xor
pop
rorl
adc
loop
mov
xchg
hlt
fmull
push
or
mov
xchg
sbb
mov
mov
sti
je
sbb
fcmovnbe
cld
dec
push
je
jmp
and
mov
enter
test
leave
std
mov
xchg
sti
mov
testb
sbb
dec
push
push
std
jb
and
call
insb
push
or
adc
add
cmpsb
jp
mov
xchg
mov
test
jbe
xchg
test
shll
mov
adc
lock
push
repz
dec
xchg
mov
lret
dec
cmpsb
bound
dec
imul
out
decl
and
sti
or
mov
dec
out
jmp
dec
jb
jmp
scas
test
in
xor
aaa
cmp
ljmp
jmp
in
push
inc
sbb
xchg
jp
loope
push
push
mov
jecxz
bound
sub
nop
fnstenv
mov
pop
js
and
lcall
jmp
or
push
and
or
dec
nop
cld
add
jecxz
popa
adc
out
lds
dec
inc
mov
add
add
pop
pop
xor
adc
sub
imul
repz
rcl
in
jmp
cmpsl
notb
jecxz
lock
xchg
pop
and
xchg
dec
gs
and
je
pop
cmpsl
out
sbb
mov
inc
pop
mov
ja
cmp
mov
sbb
inc
mov
rcrl
mov
jns
cli
jb
stc
jns
clc
push
adc
mov
xchg
xchg
mov
sbb
divl
add
js
mov
mov
call
test
dec
adc
push
test
fucomip
cltd
xor
xchg
xor
lods
iret
adc
xor
jnp
push
inc
fistps
or
repz
minps
inc
mov
aad
das
rcrb
pop
cmc
xchg
nop
lret
xlat
dec
les
cwtl
in
loopne
jg
jnp
in
xchg
add
xorb
adc
jp
or
jns
in
int3
roll
daa
or
and
mov
lcall
push
movsl
fwait
sub
ret
dec
into
aam
ret
out
mov
sub
iret
dec
repnz
leave
mov
shr
imul
frstor
jbe
cld
push
mov
outsl
sub
daa
lea
xor
notb
inc
sub
js
bswap
sbb
pop
jae
and
xlat
jae
fsubrs
mov
push
jo
adc
test
lods
arpl
add
jmp
adc
lahf
push
data16
mov
rcr
push
scas
or
sub
dec
lods
test
mov
stc
xchg
cmpsl
inc
pop
test
fwait
jle
mov
test
or
jg
test
and
push
rcrb
sbb
push
pushf
imul
ljmp
add
pusha
mov
std
and
cmpl
and
out
cltd
out
std
into
loope
dec
fsubrp
addb
jle
test
idivb
addr16
mov
gs
stc
push
iret
push
lea
mov
add
pop
out
aad
sub
push
dec
mov
cwtl
jle
inc
sbbb
inc
jge
xlat
cltd
shl
jge
cwtl
push
xchg
and
sub
push
sub
shrl
out
xor
sbb
sub
mov
sbb
jne
mov
xchg
in
divl
and
jnp
mov
stc
dec
cs
mov
shl
fsubr
inc
adc
add
jecxz
mov
or
mov
les
lret
mov
in
mov
mov
adc
lds
jbe
btr
shl
xor
cmpsl
lcall
jnp
je
sub
test
jge
jne
movsb
cmpsb
pop
mov
leave
mov
fcomps
es
aad
lods
ss
cmp
out
jmp
jmp
or
xchg
xchg
add
daa
inc
pop
clc
repz
lea
mov
mov
les
scas
je
jb
out
sbb
xor
xchg
out
aam
mov
dec
test
cmp
cmpsl
dec
mov
dec
mov
jg
stos
add
addb
in
cmp
inc
mov
xor
sub
mov
test
push
inc
test
iret
xor
mov
outsl
adc
fwait
or
inc
out
hlt
loopne
leave
pop
push
out
out
mov
sti
fxch
jns
testl
arpl
lcall
ljmp
pop
insl
into
dec
adc
data16
cli
test
fisubl
mov
pop
cs
int3
cmp
mov
and
fwait
sbb
jne
fcoms
shlb
jbe
and
cmp
std
sbb
aad
aad
and
popf
adc
push
sub
and
mov
flds
xchg
lcall
hlt
adc
fdivs
aad
movsb
xchg
mov
cli
fcoms
dec
push
xchg
jbe
ss
cmc
lock
push
mov
push
ret
mov
xor
mov
jmp
jmp
pop
inc
icebp
pushf
xchg
pop
cmpsl
scas
xchg
sub
pop
orb
add
es
mov
sub
push
pop
ss
push
add
xor
out
movsl
mov
cmp
lods
sti
rcrb
mov
sub
jp
xchg
inc
jge
push
sbb
mov
dec
mulb
adc
add
cmpsb
test
mov
enterw
repz
and
lock
sbb
dec
fildl
mov
icebp
lahf
mov
lods
mov
pop
xor
es
fwait
imul
fnstsw
cmp
sbb
add
mov
cmp
push
pop
xchg
int
xor
pop
movsl
pop
mov
mov
popa
inc
div
movsb
inc
sub
push
ljmp
mov
dec
iret
push
dec
pop
scas
sub
mov
imul
pop
ds
jb
sub
mov
add
cld
pop
cli
scas
jmp
xchg
jnp
leave
add
aas
loope
lret
das
mov
adc
test
cmp
push
stos
jg
dec
pushf
mov
sbb
mov
aaa
es
and
pushf
or
jae
loopne
fcmovnu
jbe
adc
add
or
jge
stos
ljmp
sbb
inc
fsubs
test
inc
and
je
sbb
add
in
mov
xor
gs
adc
mov
ljmp
dec
cmp
push
and
dec
sbb
inc
fs
cmp
mov
and
mov
clc
aas
stc
lds
cltd
das
pop
stos
pop
sbbl
aad
jno
les
add
jle
cmp
pop
in
xlat
idivl
fstpl
aaa
push
mov
push
cmc
jle
sbb
es
push
ret
mov
pop
mov
cwtl
sub
shlb
loopne
inc
mov
and
adc
mov
sub
adc
add
aad
test
fldcw
mov
pop
or
or
xchg
mov
dec
mov
adc
int
sbb
and
push
xchg
imul
lcall
dec
cmp
daa
or
mov
ljmp
dec
cmpsb
decb
dec
or
mov
inc
adc
addr16
xchg
cltd
insb
imul
sub
dec
loopne
adc
lahf
xor
xor
cwtl
iret
inc
pop
rorb
dec
nop
dec
addr16
fisttps
data16
dec
pop
and
and
mov
mov
test
push
mov
stos
and
ret
sub
pop
xchg
xlat
cmpb
ficompl
push
in
mov
or
loopne
cmp
jae
leave
test
call
inc
rcl
xchg
jbe
shll
pop
les
jns
cmp
fisttpl
push
cmpsl
dec
push
dec
push
push
lods
ljmp
dec
sbb
daa
in
and
sbb
sub
lret
cmp
test
negb
fwait
xor
call
call
leave
mov
int
fwait
push
lret
sbb
stos
dec
bound
push
lock
lret
cli
dec
dec
pusha
or
rcr
clc
call
aam
stos
xorl
xor
and
mov
inc
fcmovnb
mov
sbb
push
sti
or
and
xor
insl
shrl
push
idivl
mov
out
push
mov
inc
enter
mov
cmp
push
out
inc
xor
sub
adc
jno
push
mov
out
sub
mov
cmp
jp
leave
fbstp
fldt
cmp
and
je
mov
pop
sbb
push
daa
ljmp
jp
mov
ret
ret
iret
sub
daa
hlt
push
push
fisubl
push
ret
packssdw
lds
pop
xor
mov
push
fsts
sub
push
movsb
mov
sti
lret
adc
push
stos
mov
inc
ror
or
cs
mov
cmpsl
and
or
ljmp
mov
int3
ret
inc
pop
insl
sarb
inc
mov
gs
movsb
leave
jb
dec
push
cmp
arpl
bound
inc
fmuls
clc
repnz
add
lret
sahf
jne
sbbb
mov
push
inc
dec
in
js
jg
xchg
addl
xor
push
int
out
push
cmpsl
test
xchg
mov
push
adc
repz
sti
stos
test
ljmp
testb
out
jp
pushf
pop
xchg
mov
xor
xor
aas
fwait
xchg
add
outsb
rorb
push
les
shr
sbbl
jno
rep
xor
mov
xor
adc
bts
add
xchg
cmpb
jle
dec
lret
push
aaa
xchg
testl
pop
imul
and
pop
cmpsl
call
stc
dec
add
xchg
scas
in
cmp
sbb
lods
shll
push
mov
adc
mov
pop
clc
sbbl
das
repnz
cmp
mov
adc
dec
and
dec
adc
or
into
mov
mov
ja
rol
push
adc
cwtl
cs
pop
mov
cmp
mov
sahf
popf
fmulp
pop
mov
int3
stc
pop
jbe
ss
cmp
test
push
add
xor
pop
pop
stc
rcll
pop
into
stos
mov
sub
loopne
mov
jle
test
ficomps
aaa
dec
mov
dec
and
cmp
mov
shll
jae
inc
or
lods
dec
inc
jns
lahf
sub
push
sbbl
push
xchg
cmp
cmp
xchg
mov
sub
cmpsb
mov
mov
loopne
dec
and
mov
sbb
ljmp
pop
lock
loope
in
cmc
jne
mov
test
pop
scas
fwait
outsl
mov
adc
ret
pop
popa
dec
lret
lock
lods
mov
in
clc
and
jmp
dec
or
or
popf
jp
mov
mov
shr
je
int3
sub
gs
fwait
jmp
movsl
test
jle,pt
idivl
pop
sahf
ret
sub
rclb
out
sbb
add
insb
fcmove
fcompl
pusha
jbe
mov
imul
out
cmpsl
mov
pop
popf
add
mov
ret
adc
in
mov
jno
mov
jnp
jg
xchg
mov
fisubrs
mov
movsb
hlt
notb
hlt
mov
adc
mov
jle
jbe
sub
ficomps
cmp
out
aaa
into
shll
shrb
out
fisubrl
ret
cltd
cmpsb
outsl
cmp
movsl
addb
aas
push
or
movsl
sub
pop
lods
mov
mov
jb
mov
scas
cmp
push
out
push
and
jmp
mov
mov
xchg
dec
lea
push
pop
cmp
pop
es
ret
adc
loopne
es
xor
ss
repz
inc
dec
jae
mov
addr16
add
movsl
fnstcw
andb
inc
jbe
pop
dec
mov
les
das
scas
jle
dec
or
stos
pop
ds
mov
push
loop
and
test
iret
sub
arpl
in
cltd
movsl
lods
xor
or
int
aad
insb
cwtl
aam
or
mov
addr16
fdivrl
in
inc
jnp
bound
mov
dec
lods
addr16
jns
sbb
adc
mov
xchg
push
cmc
dec
mov
or
out
dec
xor
mov
mov
push
dec
dec
outsl
lea
mov
mov
mov
xchg
and
mov
scas
inc
adcb
out
push
lret
rorl
pop
repnz
xlat
push
sub
add
and
fdivrl
leave
push
lods
mov
dec
stos
or
xchg
rcrb
and
push
pusha
jns
jbe
pop
out
pop
addb
scas
pop
leave
mov
fs
xchg
cmp
push
cmp
testb
data16
addr16
cvtps2pi
pop
int
sbb
cli
inc
fnstcw
ds
inc
stc
movsb
aas
cmpsb
addl
add
icebp
call
push
lret
pop
shlb
push
mov
ret
shll
jb
push
test
mov
dec
test
aad
pextrw
jbe
inc
imul
test
cmpsb
lret
movsl
testb
and
sub
fisttpll
dec
js
aas
fucomp
in
cmp
xor
movsb
push
rcrb
and
mov
mov
xchg
xor
xor
xchg
lods
sti
sbb
xchg
std
cmpsl
xchg
mov
push
mov
dec
xchg
les
inc
scas
mov
push
add
sbb
cwtl
xor
mov
cltd
fsts
iret
js,pt
fidivs
test
mov
icebp
mov
fdivrp
jmp
popf
hlt
xchg
scas
pop
dec
jp
sbb
scas
inc
fs
outsb
pop
mov
rolb
fdivrs
stos
ja
or
push
push
mov
and
out
popf
dec
imull
cmp
mov
mov
jo
ja
aas
mov
mov
lcall
mov
test
mov
cli
shl
out
sub
or
scas
ljmp
add
in
push
aaa
fs
test
out
ret
sarb
stc
push
cmp
adc
shrb
xor
push
stc
outsl
gs
movsl
sti
mov
mov
xchg
add
xchg
out
pop
adc
arpl
or
pop
cmp
enter
fldt
ja
scas
xchg
rcr
fstps
push
jle
xor
adc
mov
adc
or
cmp
stos
ja
insb
fwait
popa
mov
or
add
sub
push
cmp
shrl
outsb
ja
sbb
lods
jbe
add
pushf
jns
mov
adc
aam
lds
mov
aaa
lods
loopne
jae
dec
leave
aaa
push
or
jns
lahf
ret
aam
dec
and
bound
mov
mov
int
nop
idiv
lahf
in
xchg
pop
and
stc
jl
outsb
mov
scas
add
mov
xor
fsubrp
lahf
lock
in
loop
or
mov
frstor
jle
cs
cmp
push
and
jmp
mov
push
push
fists
enter
jns
xchg
insb
push
repz
pop
xor
arpl
jae
negb
xchg
sub
lds
sub
xor
pushf
mov
fs
add
mov
std
sbb
lret
shr
cs
sti
push
sub
int3
xchg
cmp
arpl
inc
out
decl
pop
xchg
inc
dec
fisttpll
and
push
js
into
xor
scas
scas
ljmp
stos
movsl
dec
out
xchg
lds
das
pop
loope
pop
in
or
gs
inc
loope
mov
lret
pop
xchg
adc
and
movsb
lods
mov
ficoml
and
adc
test
loop
insb
mov
aam
icebp
js
xchg
add
dec
into
fisttpll
cld
pop
push
pop
test
add
in
fists
mov
dec
stc
adc
jge
push
dec
inc
pop
iret
cmp
js
loopne
leave
mov
sub
mov
lods
fbld
mov
push
icebp
jns
xchg
bound
mov
mov
hlt
xor
sub
shrl
cs
fcoml
leave
mov
sbb
jg
pop
mov
lock
add
std
xor
movsl
movsl
pop
jp
jo
cmp
bound
inc
push
pusha
mov
jae
xor
jmp
test
out
fisubrl
andl
es
shlb
xor
push
mov
clc
aam
outsb
dec
ja
or
adc
push
ret
sub
xchg
or
cli
ds
iret
and
dec
scas
pop
add
add
into
rolb
lds
outsb
lods
jbe
movsb
mov
or
mov
jg
jne
dec
fwait
add
in
pop
lret
pop
repz
fs
mov
push
negl
xchg
push
arpl
xchg
into
sub
jno
add
ret
mov
fnstcw
ljmp
mov
dec
adc
pop
mov
and
mov
out
mov
scas
xor
inc
fnstsw
in
pop
aas
outsb
xor
pop
xchg
std
loop
cmp
xchg
mul
sub
and
push
test
lods
daa
cli
leave
mov
jge
orb
pop
cmp
dec
pop
les
or
and
sbb
jno
mov
xchg
mov
sbb
clc
mov
inc
push
pop
mov
cmc
xor
add
ret
or
dec
nopw
out
in
int3
notb
outsl
ss
repz
sbb
cmp
insb
mov
loope
shrb
loope
outsb
stc
lcall
add
ficoms
push
xor
sbb
adc
dec
stos
jo
mov
movsb
shrl
es
gs
cltd
inc
out
fisubrl
in
xchg
imul
je
ret
ficoms
push
mov
push
jae
xor
std
dec
icebp
fdivrl
xchg
aad
inc
xorb
add
jle
mov
cmp
add
subl
ljmp
jmp
test
sti
test
adc
xor
lcall
mov
jl
pop
pop
test
inc
xor
notb
mov
mov
jae
fdivr
stc
test
or
add
repz
in
mov
ljmp
andb
out
mov
daa
and
push
repnz
cmc
adc
add
cmp
loopne
inc
mov
push
testl
loopne
mov
gs
ret
mov
or
js
xchg
loop
out
mov
in
and
ja
jge
xchg
xchg
int
cwtl
adc
ret
ficoms
pop
repz
stos
jecxz
jp
in
push
inc
cwtl
sub
sbb
aas
or
pop
jp
mov
mov
mov
jne
pop
add
xor
xchg
jae
xchg
xchg
lret
iret
sub
out
mov
and
mov
mov
in
pop
xor
pusha
into
movsb
int3
dec
xorb
pop
outsl
mov
xchg
dec
add
pop
out
xor
mov
pusha
dec
xchg
add
mov
pop
fsubs
dec
push
xchg
jae,pt
into
lahf
jb
jmp
sub
or
aas
push
lods
cmp
xchg
pushf
fdiv
xchg
fucomp
fildll
aad
int3
in
aaa
loop
std
ljmp
mov
add
test
ljmp
movsl
push
movsl
inc
testl
aas
call
mov
les
ja
sarl
sub
mov
or
jge
sub
push
jb
aad
pop
inc
sti
subl
or
test
in
es
mov
dec
scas
sbb
cmpsb
fidivrs
or
fnstcw
jne
cmp
popa
imul
cltd
or
enter
mov
dec
jl
jecxz
loope
loop
mov
dec
inc
in
clc
addr16
addb
inc
push
xor
mov
mov
jmp
int
ror
pop
rorb
in
add
jle
ret
addr16
dec
rorl
mov
imul
mov
and
inc
mov
xchg
mov
int3
jmp
mov
xor
hlt
cmp
jnp
xlat
sbb
jl
jl
xchg
icebp
adc
mov
das
add
push
push
and
mov
daa
cmp
jge
push
js
cs
xor
aaa
int3
fsubrl
pop
test
jmp
test
dec
icebp
or
cmp
xor
adc
jg
div
sub
test
cmp
mov
int3
push
lock
in
fnstcw
je
data16
iret
and
jecxz
cwtl
dec
mov
icebp
dec
fdivrs
push
push
jae
mov
sbbb
cmp
sub
shl
lcall
xchg
jno
mov
outsb
mov
adc
inc
inc
add
aas
push
hlt
and
fistpll
pop
sbb
test
push
sub
inc
imul
sbb
sub
fidivl
jo
pop
sub
gs
xor
inc
mov
jbe
sbb
adc
and
jno
pop
popa
popl
and
add
jle
xrelease
add
out
mov
xchg
push
cld
jbe
dec
lds
mov
test
stc
mov
lret
aas
dec
std
inc
cmpsl
xchg
lea
faddl
aad
enter
icebp
int3
mov
pop
pop
das
dec
lcall
call
fcoms
lds
jmp
adc
es
icebp
or
xchg
lret
test
xchg
mov
shr
mov
cmp
incl
push
xchg
cmpsb
sbb
lock
or
xor
cltd
in
cmp
out
fldl
dec
and
lret
lcall
ja
repz
mov
or
scas
stos
out
mov
pop
test
outsb
and
mov
mov
bound
push
inc
outsl
and
jns
dec
aad
fildll
sbb
xor
inc
sub
out
xlat
mov
xorl
adc
aas
loop
fwait
outsl
adc
stos
pop
out
adc
cmpsb
and
sub
mov
ljmp
add
loop
imul
out
dec
mov
pop
arpl
xchg
cmpsl
mov
es
mov
fwait
cwtl
test
inc
mov
xor
or
test
jbe
stc
mov
jo
movsb
clc
icebp
inc
addr16
inc
stos
imul
scas
push
rol
repnz
ja
ret
in
pop
dec
or
dec
mov
pop
mov
push
xchg
jno
sahf
fwait
clc
xor
mov
push
je
ss
xchg
or
dec
and
popa
lds
and
loope
dec
jecxz
pop
xor
rol
addl
ja
sub
aas
mov
pop
fmull
mov
in
inc
mov
cmc
add
rorb
xor
jp
mov
hlt
movsb
out
sahf
dec
aam
arpl
sbb
dec
in
mov
sbb
pop
scas
pop
xchg
movsl
aaa
mov
orb
lahf
scas
xor
jbe
jbe
add
scas
sub
stc
inc
jl
lahf
shl
jbe
int
cld
and
cmpsl
xor
inc
imul
mov
xor
insl
lds
mov
cmpsl
sbb
clc
sbb
gs
mov
mov
push
and
add
xor
repnz
mov
xchg
movsl
iret
sahf
adcl
lock
and
mov
push
jle
xchg
ret
sub
xchg
push
and
pop
mov
adc
and
dec
lods
arpl
dec
lret
adcb
test
jmp
sbb
rolb
insl
in
adc
or
test
jg
push
xchg
ja
pop
sbb
and
jnp
movsl
pusha
jne
or
adc
add
lods
push
pop
sub
inc
cltd
mov
xchg
pop
out
add
jb
int3
jl
push
notl
push
lret
push
inc
xchg
ret
subb
xor
leave
popa
add
clc
iret
sbb
js
xchg
mov
popf
inc
ficoml
cmp
jmp
sub
clc
pop
sbb
loopne
xchg
xchg
add
fs
inc
aam
rcll
pushf
cmp
lods
fcomps
out
mov
mov
fwait
and
pop
negb
loop
jbe
outsl
xor
xchg
adc
pop
shll
pop
mov
cmc
cmpsl
sbb
xchg
dec
and
das
rol
in
out
mov
push
inc
pushf
call
sahf
add
mov
jne
xor
mov
out
data16
or
lock
cmp
push
xchg
mov
test
xchg
pusha
jbe
out
sbb
sbb
rcl
rorl
ret
push
jmp
sub
cmc
push
pusha
jns
test
leave
cwtl
jne
lea
sahf
mov
adc
ja
inc
dec
push
fcompl
sub
pop
jl
scas
xor
xchg
xchg
fdivl
cmp
fidivrs
jns
jae
adc
push
push
mov
or
out
jmp
test
pop
mov
jmp
pop
in
adc
push
sahf
add
repnz
fsubr
shll
imul
lea
insb
push
push
inc
setbe
fwait
or
into
jbe
ret
mov
sub
and
vrsqrtss
popa
mov
repnz
or
push
movsl
pop
and
sub
sarl
add
insl
aaa
jnp
mov
js
scas
sbb
addl
jge
leave
jp
mov
fildll
aas
add
dec
dec
mov
lcall
pusha
pop
add
xlat
fistps
pop
cwtl
in
in
iret
or
mov
pop
push
jne
sbb
fdivrs
mov
cld
sub
mull
icebp
shlb
dec
cmpsl
jp
jno
pop
movsb
mov
in
fistpl
pause
jne
push
add
add
test
inc
dec
cmpsb
aad
shlb
cmc
cmp
or
dec
add
sahf
mov
fimull
test
cld
loop
dec
adc
sub
sub
lahf
sbb
fsubp
inc
mov
adc
sbb
dec
lret
jne,pt
and
cs
dec
lock
pop
xlat
pop
incb
outsb
sub
jnp
int3
out
xor
cmp
pop
add
or
pop
jmp
out
adc
lret
subl
repz
sbb
ss
lods
xchg
fdivrs
or
push
push
sub
and
flds
arpl
bound
hlt
inc
inc
jp
jp
rcr
pop
mov
xchg
pop
dec
aas
xchg
nop
repnz
imul
into
cwtl
mov
xchg
cmc
imul
aas
jno
out
mov
sub
mov
mov
iret
mov
por
dec
and
jae
cmp
xorl
sbb
aas
push
mov
scas
push
fbstp
or
mov
imul
jg
fmul
aad
and
xor
je
and
test
scas
andb
xor
test
repz
les
xchg
lods
pop
ret
or
aaa
shrb
pop
mov
pushl
nop
test
pop
mov
mov
cmp
push
mov
adcl
fcoml
out
pop
nop
andl
push
cmp
push
xchg
fsub
xchg
in
add
mov
push
pop
mov
gs
adc
xchg
and
jl
mov
mov
inc
sub
pop
jbe
ror
rcrb
es
push
inc
dec
add
mov
insl
jg
cmp
inc
negl
in
cmovge
add
rcll
je
xchg
rcll
mov
xchg
leave
addl
pop
inc
iret
cld
das
push
mov
das
and
int
and
xchg
push
mov
in
sub
inc
or
movsb
mov
and
lret
mov
daa
sub
in
dec
jl
xchg
test
mov
movsl
fnop
loope
xor
sbb
dec
sub
push
iret
pushf
push
xor
pusha
xchg
loop
lock
into
iret
stos
fisubrs
mov
pushf
mov
jno
in
cld
cmp
cli
movsl
sarb
mov
adc
decl
shll
push
mov
mov
push
out
add
mov
pushl
enter
dec
jl
adc
repnz
adc
mov
push
mov
dec
sub
mov
mov
sbb
test
sub
sub
pusha
jo
mov
xchg
ss
inc
das
pusha
add
push
shr
jne
repz
jo
rcll
fnstsw
out
or
shll
jmp
scas
int
or
std
push
push
arpl
jle
mov
test
enter
repz
jns
test
sbb
fstl
inc
and
xorl
lcall
ret
mov
js
decl
jbe
ljmp
mov
std
ljmp
jbe
jno
or
mov
mov
cmp
movb
xor
pop
mov
adc
mov
jae
adc
dec
adc
push
xchg
adc
sub
mov
not
test
in
mov
sbb
inc
divl
iret
in
lock
mov
push
inc
fwait
cmpsl
clc
ja
test
int
in
xchg
push
jo
stc
pop
mov
sti
xchg
jbe
das
scas
mov
push
movb
and
lret
iret
mov
sbb
xor
js
xor
outsl
loopne
or
dec
dec
scas
or
pop
sbb
or
sbbb
mov
adc
mov
push
xor
jne
add
adc
or
test
dec
or
aam
push
flds
or
loopne
adc
jmp
jecxz
dec
inc
jl
inc
add
je
mov
xchg
insl
sahf
lahf
icebp
jl
mov
pop
xor
push
testl
shlb
and
movsb
xchg
rcll
mov
outsb
push
inc
push
sbb
xor
sub
push
pop
fwait
lret
jl
insb
xor
xchg
outsl
mov
ljmp
mov
pop
pushf
sub
xor
mov
mov
scas
or
or
and
addb
mov
cmpsb
add
cmpsb
in
pop
adc
jb
or
pop
cmpsl
sbb
lret
subb
sub
aam
add
fisubrs
jae
xorb
sub
test
mov
dec
mov
lods
add
sub
jo
add
cli
repz
jb
jmp
cmovns
nop
outsb
xor
mov
hlt
cmp
lret
dec
mov
mov
push
jmp
sbb
jno
adc
inc
popa
inc
das
mov
nop
mov
jge
lds
cmp
fcmove
add
push
and
sbb
jo
dec
cwtl
comiss
xor
lds
lahf
and
es
inc
push
fsts
push
mov
pop
lea
cmp
sahf
ficoml
mov
ficomps
subl
jmp
roll
mov
shlb
xchg
adc
fbstp
hlt
dec
idivb
shrl
ds
in
inc
push
lret
dec
sbb
out
push
xor
test
and
lcall
jp
lret
sahf
shrl
inc
add
rclb
inc
push
pop
cmc
pop
add
cs
mov
enter
ds
sub
into
mov
sub
xchg
ucomiss
stos
fisttps
clc
cmp
into
xchg
add
fwait
jmp
lret
sub
addr16
cwtl
jns
out
xchg
and
push
inc
test
pop
ljmp
fsubrs
mov
rorl
aam
andb
add
cltd
add
mov
hlt
push
sbb
cmc
dec
add
cmpsb
stos
or
inc
lea
xor
push
clc
test
jne
or
pop
xchg
jne
xor
sti
test
ljmp
jns
mov
jns
or
outsb
out
sbb
fmull
nop
fists
push
cmp
lcall
mov
rorb
dec
andb
imul
popa
out
and
or
mov
arpl
arpl
ja
lods
pop
into
out
lods
lods
cwtl
test
mov
aam
pop
pop
dec
jb
shll
dec
pop
inc
inc
cs
aaa
lds
pop
out
inc
xor
push
mov
mov
mov
xor
and
sub
sub
fwait
fwait
ds
jo
add
push
int
scas
cmpsl
pop
dec
call
xchg
sahf
dec
aam
push
sarb
pop
fadd
jns
loope
ret
hlt
pcmpeqb
mov
adc
stos
jmp
dec
stc
fimuls
addr16
sbb
xchg
pop
pop
add
std
aad
ja
aas
jmp
sub
jg
push
sbb
push
decb
pop
xchg
js
xchg
add
inc
sahf
lret
sub
aas
xor
cmp
cs
or
inc
cmp
mov
rol
mov
cltd
add
adc
clc
cld
jg
pushaw
push
movsb
sub
sti
adc
pop
push
popa
js
sbb
gs
jle
imul
movsl
sub
mov
and
mov
out
lea
idivb
mov
add
cmp
push
xor
bound
imul
and
test
popf
xchg
adc
dec
inc
ja
out
inc
scas
loope
dec
sbb
push
xor
loope
or
loop
movsb
cld
jmp
sub
sub
adc
pop
std
je
xlat
dec
xchg
pushf
gs
add
dec
loop
push
test
icebp
add
fstp
mov
xchg
jge
jmp
rorb
push
out
xor
popa
dec
mov
push
rorl
sti
jmp
mov
std
repnz
and
repnz
outsl
xchg
fs
ss
fwait
sub
sub
mov
addr16
test
outsb
add
sti
fsubl
movsl
pop
xlat
dec
out
push
out
inc
leave
aaa
cwtl
ret
mov
mov
inc
ret
pushf
sub
sarl
sbb
xchg
jb
cmpsl
dec
clc
lock
adc
inc
mov
lods
xor
xchg
fsubl
addr16
aaa
xor
cmp
popa
movsb
jmp
cmpsb
mov
repz
adc
mov
jp
xchg
movsb
sub
pop
mov
mov
popa
mov
pop
int3
mov
lods
pop
test
sbb
xchg
sbb
inc
lahf
ret
xor
mov
repz
pop
icebp
test
lds
jmp
lock
mov
cmc
outsb
and
sub
pop
cld
jl
xchg
add
aad
mov
sbb
out
in
jae
adc
movsb
nop
jmp
mov
jmp
push
loop
inc
lock
subl
and
add
mov
mov
ss
dec
aam
outsb
cmp
cmp
pop
stc
cs
lods
pusha
mov
aam
leave
fiaddl
movsl
xchg
je
dec
arpl
pop
popf
jmp
xor
sbb
inc
pop
test
xchg
mov
aad
aam
add
pop
rorb
lock
mov
fsubs
inc
mov
jecxz
int
shl
imulb
sbb
stos
cmc
scas
and
lcall
xchg
aas
add
aas
jmp
lcall
mov
ja
xchg
or
mov
cmp
sahf
push
jge
inc
sub
xchg
sbb
stc
lods
push
outsb
pop
hlt
mov
jbe
out
rorl
jbe
pop
mov
cmp
pop
aaa
jnp
sbb
std
loopne
rcl
in
int
or
lret
data16
neg
and
jge
nop
iret
rcrl
call
scas
pop
xchg
daa
pop
in
sbb
sti
movsl
or
pop
mov
sbb
sub
pop
in
int3
dec
decb
jp
xor
std
jecxz
xor
sti
out
roll
mov
test
add
test
xchg
ds
xchg
cmp
add
mov
or
or
imul
jns
add
inc
xlat
loop
mov
shlb
xchg
push
out
push
pop
out
cmp
fstpt
mov
hlt
pop
daa
jl
xor
xchg
xchg
add
jo
rep
repz
xchg
lods
jae
sub
fsubr
ja
cmp
das
sbb
lock
inc
dec
push
sub
sbb
sarb
lret
out
push
dec
sub
shll
or
sbb
repnz
mov
mov
xor
cld
jmp
xchg
cs
dec
mov
mov
cmp
cli
mov
jb
adc
push
dec
dec
dec
pop
push
lea
xor
mov
into
cmp
mov
and
xor
sarb
jns
xor
aad
push
mov
sbb
pusha
pop
les
cmp
cli
cmp
outsl
add
sub
push
sbb
xor
sbb
xor
jl
add
dec
mov
fcompl
in
cmp
rclb
lahf
sbb
mov
cwtl
mov
mov
cmp
lock
cltd
mov
jp
movsb
jecxz
mov
fistpl
js
sbb
stos
sub
insb
bts
cmp
ret
dec
dec
xchg
bnd
adc
arpl
stc
xchg
sbb
insb
jns
xchg
lock
jmp
loope
call
xchg
addb
push
rcll
js
dec
in
je
sbb
inc
aaa
popf
ret
lds
lods
cmpsb
fisubrl
insl
bound
ja
mov
dec
pop
test
push
cmp
add
pop
jp
rorl
add
push
mull
jge
cmc
stc
xlat
jp
out
jno
subb
xchg
xchg
ja
addl
xor
in
xor
leave
dec
sub
sub
pop
push
xchg
mov
sub
gs
mov
js
or
xor
fsts
dec
cmp
jbe
dec
xchg
je
gs
mov
inc
repz
xchg
dec
roll
orb
call
rcrl
adc
es
pop
mov
aaa
std
ret
mov
jne
lods
data16
mov
out
xchg
mov
cmpb
add
mov
inc
and
dec
and
mov
inc
cltd
pop
std
xor
fmull
xor
cmp
fildll
pop
aad
sti
jno
adc
mov
stos
je
sub
sbb
push
jp
outsb
push
jl
push
mov
mov
push
xchg
pushf
daa
mov
loope
inc
mov
mov
test
in
add
dec
add
in
mov
cmp
in
dec
cmpsb
pop
mov
sbb
dec
ror
pop
mov
inc
push
add
rcrl
mov
mov
rorl
jae
inc
add
push
fldcw
push
mov
xor
adc
jne
bnd
and
nop
pop
lock
sub
dec
adc
push
iret
push
cmp
setl
loope
inc
xchg
in
pop
call
das
dec
pushl
and
je
add
dec
pop
test
ss
push
movsl
or
ret
addb
add
cmc
push
std
adc
xchg
push
jmp
jne
push
lock
or
shrb
mov
in
pop
and
imul
popf
stc
pop
dec
lock
rcr
pop
sahf
xchg
popa
fwait
sahf
movsb
mov
lods
arpl
dec
push
das
nop
insl
cmpsl
and
sbb
mov
cmp
xchg
ret
in
outsl
lods
inc
jg
out
sahf
fildl
outsb
inc
xor
andl
loop
dec
testl
adc
enter
dec
jb
inc
mov
xor
cld
loop
jns
xchg
imul
ss
loopne
movsb
popa
xchg
dec
aas
jns
adc
cmp
imul
jge
test
insb
arpl
jbe
add
jnp
mov
loope
out
les
add
adc
xor
testb
sub
fdivrs
fidivrs
jp
rolb
jnp
mov
cs
pop
pushf
cmp
movsb
les
pop
xchg
xchg
pop
rcrl
push
cwtl
add
jno
push
das
xor
mov
sbb
or
cs
fwait
in
mov
das
cld
fwait
lret
iret
jmp
jecxz
push
dec
xor
movsl
scas
rcll
scas
jmp
pushf
fyl2xp1
adc
lret
std
scas
xchg
addl
fimull
cltd
push
enter
jle
lods
mov
popf
cmp
dec
or
stc
jno
fcompl
jl
xchg
rorl
in
imul
outsl
jp
jmp
push
jbe
add
sbb
dec
cmc
jns
das
pop
pop
hlt
enter
stos
xor
jge
out
repz
jmp
pop
or
insl
cmp
adc
or
out
jmp
daa
lods
dec
sbb
cmp
mov
pop
sub
mov
and
and
inc
inc
iret
aaa
mov
cs
leave
scas
mov
out
lea
jnp
cmp
sbb
jle
jge
popa
cwtl
push
push
mov
inc
lcall
fistpl
xchg
bound
inc
lods
jno
jnp
fcmovb
xor
movb
pop
stos
jge
sbb
movsb
sub
fxch
mov
lret
lods
mov
xchg
sbb
cltd
and
into
jo
jno
lret
mov
out
js
nop
nop
mov
sti
aaa
xchg
ficoms
lea
movsl
ljmp
mov
into
fsincos
push
inc
out
push
and
and
in
imul
or
lods
xor
xor
sbb
repnz
adc
cmpsl
aad
popf
data16
das
fwait
push
fisttpl
decl
add
xlat
mov
pop
cld
cs
lahf
outsb
arpl
push
sti
sub
mov
add
test
mov
cld
shr
jle
loope
jle
test
mov
add
sti
xchg
pop
je
ja
pop
add
leave
sbb
fwait
mov
fwait
out
repz
or
cld
pop
dec
jns
aad
ret
sub
push
bound
cmp
fisttpl
xchg
push
cmp
aam
int3
mov
dec
push
cmp
daa
mov
cmc
xchg
insb
jmp
aas
test
sbb
repz
loope
xor
lods
sbbb
jnp
xchg
cld
mov
push
push
pop
stos
push
lcall
ds
into
mov
dec
das
inc
fwait
insb
rorl
aas
pushl
mov
cmp
pop
push
insb
insl
lea
or
sbb
sbb
cmp
add
and
rclb
pop
pop
sarl
sbb
inc
bound
sub
stos
inc
pop
jbe
pop
dec
fbstp
cs
pop
les
mov
hlt
mov
xchg
and
xchg
test
xlat
cltd
jge
xor
out
jle
pop
mov
add
adc
push
fsqrt
pusha
push
adc
mov
ds
dec
adc
sbb
outsl
cmp
imull
nop
pop
xchg
mov
shll
adc
mov
out
cmp
test
mov
mov
jp
popa
cmovl
pop
mov
jns
aam
in
xchg
and
add
sub
add
ds
cld
sub
inc
cmc
inc
inc
mov
sbb
cs
inc
fcomp
add
roll
pop
stc
sub
into
mov
xor
pop
pop
inc
sbb
pop
es
cmpsl
mov
repnz
jns
clc
or
inc
mov
and
dec
sahf
add
sub
sbb
inc
lret
bound
jmp
fdivrl
xchg
pop
mov
je
push
loope
cwtl
jo
loop
fst
inc
push
jp
insl
xor
xlat
fwait
pop
dec
stos
mov
jle
or
stc
rorb
push
lods
aad
adc
leave
ficoms
fldl
bound
stos
xchg
clc
mov
jl
js
push
inc
cmp
and
enter
xor
daa
pop
and
aaa
imul
dec
cmp
stos
sbb
xchg
ret
mov
dec
sub
add
outsb
movsb
mov
jge
sub
pushw
xchg
pop
push
jmp
jp
sbb
add
imul
pop
movsb
out
inc
cmp
imul
es
pop
adc
jae
test
loopne
cwtl
or
aam
add
stos
pop
mov
loopne
cwtl
inc
dec
call
push
xchg
out
xchg
adc
ret
xor
lahf
sbb
mov
pushf
mov
lds
pop
das
cld
bound
fistps
inc
ret
mov
fbstp
dec
out
adc
push
pop
dec
mov
push
icebp
adc
mov
cmp
pop
inc
push
test
jge
jmp
jl
call
incb
out
cs
adc
sub
popa
sbb
dec
jp
adc
cltd
incl
fisttps
adc
sbb
cmp
sub
pop
daa
add
inc
aas
leave
push
xchg
pop
add
push
fsubs
in
push
lret
cmp
push
rcrl
out
dec
fildl
and
sbb
adc
jae
and
hlt
xorb
jmp
cmp
test
jge
aam
aad
cmp
lods
clc
jo
fnstenv
fucomi
fistpl
xchg
js
push
ja
leave
popa
jge
scas
push
dec
jle
dec
xrelease
push
stos
mov
push
mov
icebp
mov
test
pop
cmp
mov
scas
dec
das
js
decb
xor
sar
sub
jecxz
imul
test
add
cmc
fwait
sbb
pop
sbb
int
stc
shlb
adc
mov
ljmp
push
jle
loop
pop
lret
cmp
jae
arpl
mov
clc
out
lar
pop
cmp
lods
inc
dec
pusha
xorl
popa
ret
push
out
xor
mov
lods
in
mov
scas
repz
cmp
addr16
mov
lahf
mov
inc
es
add
jp
xchg
pop
stos
push
mov
pop
ret
enter
xchg
or
aam
pop
adc
jb
iret
int
push
inc
repnz
jg
mov
sbb
push
cld
mov
xchg
sub
pushf
testl
scas
or
cmc
jns
nop
xor
push
and
leave
or
insl
inc
mov
inc
out
gs
xor
out
or
lds
lret
jns
test
mov
push
gs
or
call
sahf
dec
sub
push
jg
adc
cwtl
xchg
stos
pop
xor
cmp
mov
subl
add
push
rcll
jg
popa
sbb
adc
adc
scas
mov
dec
fistl
aas
inc
sub
push
ja
lret
sbb
mov
adc
aas
cmp
push
cmp
xor
and
imull
dec
ja
pop
and
loop
pop
push
aad
fldl
mov
push
gs
test
in
ret
sbb
enter
push
push
push
cli
sbb
or
and
fistps
jnp
pop
push
push
xchg
and
jae
mov
and
mov
adc
out
xor
fs
cmc
cli
xchg
test
scas
sub
add
or
gs
js
xchg
jnp
jne
xchg
je
inc
imul
cwtl
sbb
pop
ljmp
mov
push
mov
call
push
inc
shrl
imul
mov
movsb
jmp
in
divl
pop
jae
or
adc
shll
xor
sbb
inc
roll
out
jmp
adc
xlat
dec
jns
jmp
and
push
mov
pop
mov
call
es
inc
outsl
jge
mov
lcall
daa
add
and
out
jbe
push
aas
cwtl
mov
mov
or
sub
add
or
or
insl
stos
cwtl
lahf
push
xor
cltd
jae
addl
lea
inc
mov
in
inc
and
mov
jbe
and
rclb
xchg
int3
cli
sbb
test
mov
loope
rcrl
inc
dec
jbe
sub
insl
dec
dec
dec
mov
push
je
popf
fcmovnu
sub
sbb
push
inc
sub
adc
test
ret
xchg
jnp
push
xchg
cltd
scas
lret
andb
popf
xchg
into
and
xor
popf
leave
push
loop
xor
mov
outsl
jbe
sub
cld
pushl
jo
sti
scas
cmpsb
cltd
sahf
stos
sbbb
jp
addl
mov
addr16
pop
cmpsb
adc
loop
jg
push
dec
in
adc
rcrb
hlt
adc
nop
cmp
fcmovnbe
dec
mov
insb
mov
sub
jnp
push
cltd
inc
and
dec
push
arpl
jle
mov
popf
insl
pop
jmp
mov
xchg
sbb
imul
rcrl
xchg
push
pop
add
cmp
fdivrs
mov
out
push
or
dec
pop
dec
mov
and
lock
jmp
imul
jns
and
jnp
addb
dec
mov
in
lahf
out
push
in
int
loope
xor
repnz
insb
out
call
iret
sarl
divl
cmpsb
add
ds
sarl
sub
ss
or
and
push
mov
cmp
dec
sarb
or
sbb
mov
and
lret
int3
rol
scas
pop
lcall
add
adc
outsl
pushf
cmp
jmp
push
out
mov
gs
cmc
lret
push
iret
jno
lret
adc
mov
cmp
cli
mov
stc
arpl
jb
dec
jecxz
stos
sbb
ret
jmp
loop
daa
lods
adc
pop
les
out
es
scas
fdivs
outsb
dec
mov
push
inc
jbe
in
mull
mov
shrb
lea
scas
xchg
cmp
push
jne,pt
cld
aaa
lds
xchg
mov
mov
add
inc
stos
mov
pusha
and
int3
xor
cli
add
scas
int3
add
xor
inc
stos
push
fs
and
movsl
arpl
decb
les
imul
enter
in
pop
not
rorl
outsl
jnp
rolb
movsl
fwait
and
daa
mov
pop
xchg
dec
mov
into
mov
sub
adc
insb
rolb
sub
divb
fs
scas
scas
stc
fistpl
jae
inc
and
ss
inc
lret
popa
rcrl
mov
or
dec
js
add
xchg
in
jge
push
jnp
cmp
sub
lret
sbb
in
push
out
jne
iret
mov
cmpsl
sbb
add
jmp
addr16
les
imul
cmp
dec
aas
inc
bound
jl
pop
ficompl
movsl
jg
shrl
xchg
mov
sbb
lahf
adc
orl
add
inc
loopne
dec
lahf
pop
dec
mov
lahf
je
popa
jns
fs
rol
sbb
cltd
verr
mov
pop
and
pop
cmp
int
mulps
ljmp
subb
dec
out
sbb
pop
add
sub
out
push
and
sub
fidivrs
movsb
rcr
pop
lret
sbb
jmp
or
pop
xchg
test
jb
dec
and
mov
lret
int3
inc
jo,pn
push
fisubrs
inc
mov
adc
mov
rorl
outsl
leave
std
std
icebp
dec
xor
insl
mov
in
sub
sub
pusha
dec
mov
mov
xchg
dec
lods
idivl
adc
or
mov
lcall
popw
mov
jge
pop
insb
sub
and
out
test
aam
adc
stos
fidivl
cmp
or
cmp
push
mov
cli
push
testb
adc
jle
push
movsb
cltd
xchg
mov
sti
test
mov
push
ja
push
mov
mov
jae
mov
sti
add
shl
in
in
add
jecxz
xor
jle
cs
out
dec
cmp
sub
xchg
rclb
cltd
mov
inc
outsb
mov
mov
repnz
or
push
add
jno
adc
cmpsl
dec
sti
daa
xchg
aam
xor
cmc
cld
andb
xchg
js
pop
mov
ss
add
push
jne
lcall
or
out
insl
int
cmp
pop
sbb
pop
out
sbb
fdivrs
sub
lock
lods
mov
or
mov
out
cmp
add
add
inc
lods
sub
adc
data16
lret
imul
fadds
ljmp
add
inc
mov
pop
int
lcall
out
pop
jg
int
add
push
jg
lcall
loope
outsb
sbb
or
scas
lret
inc
mov
jb
mov
mov
dec
xchg
dec
fsub
arpl
dec
xchg
movsl
xor
bound
pop
sahf
js
xor
jno
jecxz
in
pop
testb
ja
or
dec
outsb
xchg
icebp
stos
sub
or
cmpsb
mov
push
outsb
jbe
les
jb
inc
lahf
idivb
mov
shll
outsb
inc
mov
and
dec
ljmp
outsb
in
fists
stos
mov
mov
stos
cmp
jmp
jecxz
movsb
ja
mov
pushf
lret
cmp
clc
sahf
scas
lods
sbb
adc
fstp
mov
push
sub
inc
lods
movsb
sbb
aam
push
mov
popf
or
adc
jb
and
jl
ret
cmp
insl
sti
push
jne
test
or
dec
push
pusha
call
inc
adc
inc
adcl
gs
jo
out
lods
rcrb
mov
jmp
adc
push
jae
mov
jns
xor
mov
outsl
fdivs
mov
mov
shll
and
pop
mov
sbbb
xlat
int
sbb
jae
xchg
mov
sahf
pop
pop
aad
imulb
mov
xor
pop
les
or
sbb
neg
xchg
sub
push
mov
imul
mov
cmpsb
xor
aad
xlat
push
mov
cmp
leave
leave
test
ficoml
mov
pop
pushf
jno
stos
sbbl
and
out
mov
dec
pop
bound
insb
mov
dec
sub
xor
jmp
mov
add
cwtl
lds
rcrb
pop
jp
fidivrl
mov
jns
dec
mov
mov
insb
sbb
jg
js
fildll
dec
aad
iret
xor
sub
push
mov
and
loope
xchg
lds
pmovmskb
xchg
push
push
dec
inc
add
xchg
or
sbb
fwait
adc
div
arpl
push
cwtl
jmp
pushl
mov
mov
std
mov
xchg
test
pop
xchg
pop
fistps
fnstenv
sub
push
sub
insl
ficoml
add
daa
sbb
movsb
jb
cmp
push
imul
aas
subb
mov
lahf
mov
insb
push
cld
arpl
filds
pop
mov
in
jno
in
inc
jge
jecxz
sets
out
test
inc
sbb
dec
int3
pop
push
sti
insl
xor
subb
jle
into
clc
pop
ljmp
loope
fdivs
adcb
adc
push
enter
xor
jle
sti
pop
xchg
or
jbe
sar
lret
ret
or
loop
cmp
jnp
int3
rcll
adc
sub
push
in
inc
out
push
int
stos
mov
outsb
out
inc
sub
aaa
jmp
int3
nop
inc
and
insl
test
push
xor
cmpsb
aas
aad
cli
sbb
repz
ja
sub
and
cmpsb
aas
out
cmp
scas
shll
int3
inc
in
mov
mov
enter
test
rorb
pop
push
xor
fistpl
mov
shll
add
cmpsb
and
lods
push
aas
gs
adc
es
in
dec
imul
outsl
and
mov
mov
dec
jbe
and
jmp
fs
fiaddl
push
cmpsb
rclb
lret
imul
ss
dec
or
mov
fst
xchg
pusha
fistpl
in
push
jnp
mov
push
inc
imul
xchg
pop
aaa
popf
sbb
add
adc
sub
lahf
push
adc
sti
xor
adc
rol
or
loopne
mov
dec
adc
test
fwait
mov
fidivl
cmp
dec
ss
rclb
adc
lea
jnp
ret
xchg
std
jnp
xchg
or
add
sbb
data16
loop
sub
clc
dec
sbb
ss
daa
lea
sub
xor
mov
or
fisubrl
ret
cld
aaa
xor
jb
std
xchg
add
jl
pop
loopne
add
sub
jmp
push
mov
rorb
cmpsb
int
xor
add
outsb
bound
in
push
adc
stc
in
cmp
out
lds
mov
cmp
aaa
sbb
sub
jae
xchg
xchg
mov
lock
jle
clc
ja
popf
adc
dec
repz
sub
loope
sub
mov
sar
shrb
leave
inc
mov
sbb
fstpt
or
movsl
mov
xchg
mov
mov
push
shlb
push
or
aam
xorl
mov
xchg
hlt
ds
push
pop
in
xor
rorl
int3
and
ret
push
jnp
ljmp
pushf
dec
xchg
scas
mov
fisubrs
daa
sub
out
in
inc
out
in
cmp
clc
test
test
mov
mov
push
inc
out
mov
sub
xor
add
subb
outsb
dec
xchg
xchg
push
cmpsb
lock
shll
repz
push
cli
out
xchg
loopne
sub
push
jp
shrb
out
es
cmp
inc
xchg
shl
add
ja
gs
or
mov
out
add
movsl
add
sub
mov
stc
mov
jns
ret
mov
addb
push
pop
adc
adc
add
rcl
add
or
int3
cmpsb
scas
mov
push
lds
in
dec
mul
push
or
scas
push
clc
xlat
jb
push
cmpl
mov
cmpsl
mov
push
cmp
cwtl
sbb
out
push
push
and
lahf
fnstenv
add
out
pushf
mov
shrb
out
stc
ret
sub
pop
aaa
and
dec
and
nop
xchg
aam
xor
test
lods
mov
call
ja
and
push
push
pushf
mov
movsb
js
es
rcl
pop
movsl
pop
adcb
and
and
clc
inc
jl
sbb
push
aad
sti
xchg
inc
cmp
push
jne
out
clc
lret
sahf
dec
iret
fnstsw
dec
je
xlat
sarl
pop
js
xchg
or
xor
sub
addr16
andb
je
xchg
in
sub
sub
ss
mov
enter
push
andl
dec
xchg
mov
mov
gs
vpshad
in
test
sub
xchg
or
push
dec
bound
mov
mov
shll
ret
faddp
jno
test
mov
aaa
sub
cltd
movsl
xor
ficoml
mov
add
push
cmc
notl
lret
or
pop
or
sbb
xchg
lods
mov
cs
sbb
inc
inc
rolb
mov
and
bound
or
out
mov
lret
mov
arpl
addr16
repnz
inc
pop
jl
es
push
ret
dec
leave
into
mov
xchg
dec
dec
fcmovb
or
xchg
mov
shrl
jae
inc
sub
jnp
push
or
imul
mov
add
sub
mov
ljmp
lds
inc
es
dec
mov
ljmp
and
mov
int
cmpsl
sbbl
xchg
icebp
push
rclb
je
sub
mov
mov
inc
xor
icebp
mov
add
xor
xchg
outsl
gs
or
popf
ss
pop
mov
adc
gs
loopne
sub
mov
adcb
jnp
outsb
push
xor
in
lahf
scas
cmp
mov
push
mov
push
aad
mov
into
or
push
sub
in
jne
xor
xchg
lret
out
jns
mov
sar
cli
sub
jbe
imulb
test
jl
pop
jae
cwtl
cmpb
outsb
pop
mov
or
fisubrl
xor
pop
fnstsw
vsubss
add
sub
sub
pop
shrb
int3
mov
scas
hlt
adc
test
js
mov
sarl
loope
sub
fwait
inc
mov
add
rorb
mov
dec
mov
adc
mov
pop
inc
sub
ljmp
les
int3
cmp
mov
andl
jg
inc
daa
testb
xchg
inc
adc
mov
sahf
lods
mov
std
imul
sbb
pop
or
bnd
lcall
or
scas
stos
push
mov
sbb
push
dec
loop
mov
push
and
jl
mov
movsl
mov
mov
fs
pop
jmp
jno
repnz
fnstenv
mov
sti
add
adc
es
lret
test
and
adc
lret
xor
dec
mov
clc
in
pop
iret
lret
movsl
ja
dec
jge
dec
mov
push
xchg
inc
jo
aam
push
faddl
imul
push
push
adc
pusha
xor
loopne,pn
dec
jb
mov
add
cwtl
jg
mov
or
loop
cmc
xor
xor
jns
add
popf
jne
loope
mov
mov
xchg
testb
mov
mov
push
sbb
std
add
mov
scas
dec
mov
inc
mov
nop
fnsave
rol
jns
inc
enter
in
add
je
into
aad
push
push
jp
stc
movsl
cmc
andl
pop
orl
insl
das
xchg
fnstenv
out
mov
push
mov
mov
out
jns
inc
or
and
push
fadds
aaa
mov
dec
test
cmpsl
jae
fidivrs
cli
jl
ss
lret
ds
and
pop
xor
outsl
aad
scas
repnz
std
fnsave
mov
xchg
mov
fcomip
mov
fcompl
and
stc
add
sarb
xor
sub
pushf
cmpsb
mov
inc
pop
inc
dec
in
aaa
mov
pop
notl
xchg
aam
push
xor
mov
addr16
es
pop
and
or
imul
lods
leave
test
xor
xor
cwtl
xchg
stos
mov
fldcw
push
lret
adc
xchg
xchg
push
into
roll
pusha
dec
xchg
je
sahf
xchg
imull
add
inc
fists
push
push
cmp
ret
sbbb
and
dec
icebp
scas
fsubr
loope
pop
pop
shr
lods
rorb
xlat
mov
pop
inc
mov
push
pop
arpl
fldenv
sub
mov
movsl
and
jb
test
out
lcall
popa
jmp
inc
add
jge
dec
das
sbb
push
dec
std
add
std
xor
call
loop
lds
bnd
stos
clc
sbb
jge
in
or
jg
fwait
inc
mov
mov
cmp
lea
adc
ret
xchg
insb
lods
jmp
movsl
jmp
jns
inc
stos
filds
inc
dec
add
movsb
push
add
stc
adc
cmp
pop
outsb
ljmp
adc
adc
dec
push
les
testb
call
dec
push
ficoml
dec
shll
ja
mov
orb
jne
mov
mov
in
inc
push
insl
outsb
mov
loopne
and
scas
lret
movsl
dec
mov
cmp
mov
mov
jb
leave
dec
cmp
cmp
lret
mov
mov
and
or
jnp
xchg
imul
xlat
pop
rolb
mov
scas
leave
lahf
scas
pop
ja
push
mov
inc
cmp
in
fnstenv
nop
pop
cld
pop
or
xchg
cmpl
push
js
and
sub
jle
mov
xchg
push
outsb
rolb
mov
popf
jb
icebp
lret
testb
fstl
popf
dec
inc
pop
sbb
jb
mov
sub
outsl
sbb
sarl
push
imul
dec
mull
adc
call
sub
sti
scas
jo
leave
test
in
popa
xchg
mov
mov
jae
jl
adc
xorb
add
incb
ljmp
xor
or
xchg
ljmp
push
das
pop
cs
dec
pop
cmpsb
repnz
inc
add
push
cmp
or
outsl
repz
sti
aam
or
mov
jnp
mov
mov
popf
jnp
ret
fldl
push
adc
cmpsl
jae
xchg
iret
mov
mov
iret
mov
xor
push
mov
cli
insl
ljmp
sbb
or
pop
jl
or
nop
data16
mov
ljmp
fcompl
mov
push
filds
jle
push
adc
int3
fcmove
fwait
add
std
shrl
les
cmp
subb
sbb
movsb
mov
fwait
std
push
je
push
flds
or
out
or
inc
cmp
int
mov
inc
sbb
loopne
cli
xchg
xor
popf
sbb
sub
mov
loop
mov
or
out
stc
xor
fadds
mov
hlt
inc
mov
mov
mov
pop
aaa
jmp
inc
sbb
add
orl
jle
xor
jno
inc
sub
ss
push
mov
lods
or
es
mov
cmp
pop
add
cmp
sbbb
push
pop
xlat
leave
clc
xchg
and
mov
push
test
cltd
rep
mov
jns
fadd
lret
mov
jle
adc
dec
test
dec
mov
js
push
sbb
sti
pop
ljmp
jge
lods
pop
mov
mov
rcrl
adcl
cs
pop
pop
adc
test
mov
jno
movsl
mov
jne
lds
sbb
enter
in
mov
sbb
int3
es
shl
inc
mov
adc
popa
mov
movsb
adc
mull
jmp
jmp
mov
fcompl
inc
mov
add
in
or
ret
cmc
loopne
cli
pop
cmc
inc
lcall
dec
loopne
mov
lock
sub
aam
mov
cld
xchg
push
pop
shrl
arpl
movsl
popf
int
xor
out
aam
xchg
rdmsr
pusha
xchg
aad
mov
out
mov
fnstcw
pop
in
sbb
mov
mov
inc
stos
push
pop
cwtl
test
arpl
mov
push
inc
or
mov
jle
int
bound
sub
xor
in
imul
setl
adc
lock
mov
push
imull
aaa
insl
out
or
mov
mov
fsts
aaa
add
ja
jle
mov
movsb
inc
in
mov
faddl
sub
add
mov
aad
sbb
test
incl
jmp
iret
lods
sbb
push
inc
pop
lods
std
in
cwtl
adc
sub
loop
push
xchg
mov
shl
dec
jbe
and
hlt
jg
xchg
jecxz
pop
and
dec
adcb
and
in
ljmp
sbb
shrb
inc
dec
dec
xor
jle
bound
in
sub
lret
fisubrl
pop
or
sub
ljmp
fiadds
out
and
lret
mov
daa
je
fnstsw
dec
repnz
outsl
fs
into
in
movsb
call
movlps
and
iret
inc
and
jmp
jl
dec
mov
cmp
cmpl
fldt
fsubr
pop
inc
rcrl
xor
mov
movsl
adc
pop
inc
aam
pop
dec
xchg
mov
data16
orb
sahf
push
sbb
mov
aas
adc
mov
sbb
and
and
sub
mov
ds
aaa
in
mov
pushf
xchg
mov
and
cs
lahf
outsb
pop
push
jae
in
push
adc
dec
fwait
sub
out
pop
int
pusha
push
mov
mov
sub
mov
mov
cmp
cltd
xlat
icebp
cmp
aad
fcompl
xchg
arpl
push
xchg
aas
mov
sbb
js
adcb
out
mov
sub
icebp
cli
pushf
inc
xchg
jbe
shr
int
jecxz
fwait
test
mov
inc
clc
jnp
loopne
jmp
stmxcsr
call
xchg
orb
imul
addr16
jo
iret
or
jecxz
xor
cmp
into
rorb
setp
insl
cltd
or
ljmp
lea
data16
notl
sub
mov
rcrb
inc
and
mov
sbb
add
xor
test
and
push
inc
in
jne
sub
push
adc
stc
mov
push
test
push
arpl
loope
repz
sbb
inc
es
inc
repz
lea
and
sbb
lret
insb
arpl
jae
popf
xor
pop
jne
mov
cmpsl
dec
andb
ljmp
cli
push
lcall
in
mov
push
sub
mov
cmpb
bound
int3
ljmp
in
and
cwtl
pop
lahf
jle
insb
ret
xor
arpl
xor
fstp
jae
loop
push
sbb
cwtl
ja
dec
sub
jae
mov
adc
add
inc
adc
add
sbb
lret
dec
lock
int
inc
idivl
imul
and
cmp
mov
sarl
testl
out
cmp
aad
adc
push
out
mov
or
jl
adc
fcoms
xor
xchg
or
aad
lret
ret
fldcw
movsl
and
movsl
clc
in
test
clc
jp
mov
xlat
lods
stc
imul
stos
movsb
push
loop
mov
outsb
rcl
push
into
xor
and
mov
ja
mov
imul
nop
aam
push
jno
aaa
sub
test
ss
sar
test
pop
add
idivb
push
sbb
popf
rcr
cli
dec
mov
jo
cmp
mov
dec
jmp
int3
sbb
or
test
rorl
loope
scas
push
inc
pop
fwait
rol
fstps
pop
or
mov
loopne
out
in
imul
shlb
dec
enter
or
pop
xor
fdivrl
ret
xor
andb
mov
aas
add
jo
cmp
icebp
sbb
outsl
pop
mov
jp
jae
adc
movb
and
enter
inc
pusha
mov
push
testl
pushf
jo
or
sub
push
aaa
cwtl
mov
pop
bnd
lcall
push
frstor
mov
mov
inc
pop
add
shrl
insl
jl
jg
xchg
imul
sbb
sub
mov
pusha
xchg
cmpsb
in
int3
mov
scas
rolb
test
mov
or
jns
mov
in
cmp
fcoml
test
in
jecxz
divl
and
jno
pushw
icebp
idivl
and
loop
mov
mov
or
push
scas
mov
cmp
or
and
mov
mov
push
ror
je
bound
bound
je
add
out
mov
lret
jne
xchg
pop
imul
push
xor
pop
mov
dec
je
pusha
lcall
and
insb
cmc
lods
or
mov
inc
loop
pusha
loop
clc
push
bound
mov
in
dec
testl
cmc
sub
stos
and
aas
stc
or
pop
jmp
fdivl
push
mov
mov
pop
mov
aas
ja
ret
dec
aas
cld
mov
adc
in
flds
stos
inc
sbb
fsubrs
cmp
fldenv
inc
mov
scas
sarb
push
jl
and
popf
xor
test
cmp
cmpsl
scas
pop
xor
pop
test
jmp
loope
dec
insl
stc
or
xor
jge
cmp
cmpsl
and
pop
adc
mov
jecxz
roll
inc
mov
inc
clc
ret
or
js
aad
mov
mov
ja
loop
adc
inc
xchg
push
lret
adc
or
pushf
or
and
xor
rorb
ljmp
pusha
xor
or
leave
inc
lret
clc
adc
jp
xchg
daa
pusha
adc
sub
mov
stos
mov
in
push
sbb
jnp
push
xchg
pop
push
je
test
add
out
scas
pusha
arpl
or
dec
jle
cld
movsl
cmp
scas
lret
sarl
nop
jg
pop
pop
cmpsb
adc
push
fisttpll
fldl
pop
jne
shrb
add
xor
xchg
loope
push
cmp
xchg
fists
scas
popf
das
or
lea
inc
pop
sbb
pop
mov
les
ret
into
xor
add
inc
je
frndint
mul
inc
cmp
shll
movsl
mov
mov
adc
test
mov
out
iret
push
out
pop
dec
inc
mov
cmp
xchg
test
dec
adc
xor
imul
dec
cmp
sbb
sbb
mov
in
sbbb
mov
cmp
ret
sbb
dec
icebp
icebp
xor
es
jae
lahf
add
bound
sbb
ja
sahf
xor
in
cmp
jb
jae
pusha
inc
sarb
jge
inc
cld
pop
cwtl
jge
inc
lahf
int3
scas
xchg
mov
mov
lea
aas
clc
inc
dec
xchg
and
jno
bound
push
popa
xor
mov
xchg
push
aam
or
into
sub
loopne
sub
jo
loop
xchg
andb
idivl
cltd
inc
cmp
mov
xchg
jp
cmpl
neg
fistl
xchg
xchg
push
xchg
fs
roll
jbe
std
jg
inc
sbb
mov
add
inc
xor
jb
xor
shl
lret
icebp
es
or
or
sarb
lret
mov
fisttps
pop
jmp
mov
scas
gs
in
lds
cld
jecxz
pop
pop
jl
inc
aas
into
jg
xor
lea
sarb
scas
cmpsb
dec
jecxz
pop
ficomps
in
and
in
in
jno
in
sahf
xor
aam
in
pop
jl
lahf
cltd
mov
ds
push
xchg
nop
pop
push
movsl
notl
in
mov
adc
inc
clc
es
daa
push
les
adc
ds
jbe
push
fcomps
dec
leave
fistpl
mov
shrb
fsub
call
xor
cmp
mov
push
push
adc
sub
fld
mov
mov
or
push
and
fwait
or
mov
mov
and
push
push
jecxz
nop
lcall
pop
fnstcw
stos
pop
out
inc
xor
in
adc
cmp
xchg
icebp
or
mov
jmp
sub
push
outsl
dec
lds
and
xchg
add
rcr
lods
imul
add
out
sub
cmpsb
push
movb
xchg
mov
sub
js
movsl
je
cmp
inc
je
movsb
mov
dec
mov
mov
imul
aaa
inc
mov
and
inc
mov
loop
add
das
cmpxchg
test
adc
movsl
lock
sub
sub
or
push
mov
mov
rolb
jo
pop
mov
roll
or
mov
inc
cmp
push
jg
mov
aad
icebp
jmp
and
add
xor
mov
pushf
repz
es
aaa
in
xor
scas
mov
popa
insb
or
pop
push
into
cmpsl
and
xchg
xor
filds
and
ret
mov
fmull
hlt
push
xor
xchg
lahf
mov
repnz
test
push
pop
sbb
jo
mov
jno
jg
sbb
fbld
sti
sbb
das
jle
dec
dec
mov
outsl
leave
dec
jmp
cmpl
xchg
data16
sbb
xchg
pop
imul
out
dec
and
pusha
ret
dec
jecxz
cmp
xor
mov
pop
imul
mov
popa
cmp
mov
push
dec
dec
stos
sahf
pushf
mov
push
cmpsb
jg
push
sbb
push
scas
cli
dec
mov
cld
jb
mov
cmp
sub
filds
in
shrb
push
push
jecxz
inc
cwtl
xor
sbb
xor
adc
testl
pop
xor
dec
imul
in
mov
xchg
lret
dec
sub
mov
movsl
jae
inc
and
pop
mov
jo,pn
sub
cli
das
and
int
out
mov
je
fnstsw
fcom
sbb
cs
sbb
aaa
mov
fnsave
adc
xor
sub
iret
jmp
rol
lods
arpl
or
aam
iret
push
jo
sbb
sti
mul
test
add
test
fsubs
inc
push
in
cmp
or
and
cmc
aam
xorl
mov
xorl
cmp
mov
es
xchg
jo
clc
adc
cmc
mov
mov
sbb
stos
in
cs
inc
cmp
adc
and
push
fdivrl
paddw
stos
xor
push
pusha
notl
push
fadds
imul
mov
lcall
sub
sub
js
insb
cltd
dec
fnstcw
iret
data16
pop
mov
inc
arpl
push
fstl
into
mov
enter
pop
cltd
jp
loope
cmc
shr
xor
push
xchg
pop
push
stos
lea
push
scas
fcomps
enter
fnstcw
mov
fs
dec
push
daa
xor
sub
jae
or
out
push
pop
icebp
mov
xchg
rcll
sbb
inc
lret
cmp
add
aaa
out
cmp
dec
test
imul
inc
jl
push
cld
mov
pop
cmpsb
pop
add
dec
cmp
pusha
sbb
idivb
das
ds
adc
jmp
das
fwait
int
enter
cmp
ds
xchg
pushf
xchg
add
cli
stos
fistl
inc
inc
inc
mov
mov
mov
xor
xchg
adc
outsl
sub
push
xor
mov
addr16
pop
rcl
fists
sbb
shl
xchg
enter
out
adc
jo
sarl
pop
dec
pop
push
mov
inc
xchg
xchg
adc
pop
aaa
dec
mov
pop
mov
pop
mov
insl
xchg
ja
push
pop
enter
pop
cmpsb
sbbb
and
push
mov
rcrb
divb
stc
sbb
adc
je
leave
nop
xchg
add
dec
pop
movsl
jmp
ret
imul
xor
ljmp
pusha
mov
cs
dec
lods
xor
inc
add
dec
xor
dec
mov
cmp
enter
mov
aas
insl
stos
add
stos
mov
jno
fadds
add
ret
jne
xlat
cmpsb
fbstp
cmp
dec
mov
inc
div
into
in
ret
sbb
ljmp
clc
mov
int
sbb
es
mov
push
mov
insl
xchg
mov
cmc
leave
scas
jae
je
cmp
outsb
mov
jnp
xchg
pop
cmp
or
or
loope
shl
aaa
mov
pop
jnp
inc
fsubs
jge
mov
pop
enter
fisubl
and
scas
clc
rclb
testl
or
cmp
pop
lods
fsts
xchg
fistps
outsl
add
adcl
cmp
frstor
dec
sub
mov
and
push
jbe
sbb
mov
push
xchg
add
add
xorb
jecxz,pn
shlb
pop
push
shll
jns
loopne
cmp
lret
and
add
std
mov
scas
ret
jnp
jns
cmp
movsb
pop
pop
repz
into
lea
wrmsr
dec
and
aad
scas
subb
mov
pop
mov
mov
jecxz,pt
call
sbb
divb
push
ja
lea
pusha
icebp
fisttps
xchg
jl
jae
dec
repnz
enter
test
dec
or
pop
or
xchg
in
or
stos
shll
mov
inc
rcrb
pop
pop
and
test
adc
fstpl
mov
jmp
push
xchg
or
jl
jns
leave
push
imul
jno
loopne
ss
cld
loopne
je
setbe
inc
inc
out
cmpsb
mov
dec
mov
xchg
jmp
stc
push
ss
movsl
xor
dec
pop
lea
int3
xchg
push
jmp
outsb
fidivrs
pop
jl
cmpsb
lds
sbb
in
add
call
enter
xor
repnz
gs
clc
aas
notl
push
xchg
jno
jno
cmc
mov
mov
xor
jno
mov
mov
lret
adc
mov
add
push
sbb
xchg
sti
push
add
xor
stos
lods
sub
mov
inc
and
sarb
xlat
mov
ud0
into
cmp
xor
popa
xchg
enter
cmpb
std
aas
push
mov
mov
cltd
out
sbb
dec
clc
add
mov
bound
inc
xor
das
jns
nop
pop
jno
xchg
clc
mov
mov
scas
mov
jp
cmp
fs
jb
sub
call
subps
inc
mov
pop
gs
dec
xchg
cmpsb
movsb
mov
push
xlat
test
lea
int3
sub
pushf
add
inc
and
inc
mov
lcall
sub
pusha
stc
pusha
jae
push
sub
call
push
jge
pop
mov
movsl
inc
fistps
addb
test
inc
push
mov
scas
shl
xchg
xchg
jmp
rorl
aad
lock
mov
pop
xor
insb
repz
int
jae
inc
mov
and
test
aam
mov
aaa
mov
clc
pushf
cmp
xchg
xchg
in
mov
cwtl
imul
and
sub
jne
inc
nop
cltd
int
push
dec
mov
sub
stos
dec
mov
shll
jecxz
sub
mov
je
pop
hlt
ds
xchg
and
inc
in
jbe
mov
mov
insb
nop
xchg
nop
imul
dec
scas
pusha
cmp
dec
lret
sahf
cmp
cmp
mov
push
push
mov
inc
stos
repz
mov
movsb
out
fistps
add
mov
fstpt
and
lds
and
dec
xchg
pop
subl
sub
hlt
out
sub
mov
push
inc
mov
xchg
out
enter
mov
add
sbb
sbb
sub
mov
add
andb
dec
push
push
or
insb
pop
sbb
loopne
and
fstl
inc
push
mov
or
hlt
cmpsb
call
sub
fidivl
loopne
dec
xchg
jmp
push
sbb
insb
jb
mov
pop
xchg
incl
and
sbb
push
ret
fldenv
sub
sbbl
jae
mov
shr
hlt
in
inc
jns
dec
sub
ds
cmpsb
jmp
ret
sub
shrl
xor
cmp
inc
cwtl
push
popf
cmpsl
add
adc
jmp
push
mov
out
in
cmp
stos
xchg
nop
shll
mov
daa
test
in
popf
pop
and
pop
sbb
loopne
jecxz
cltd
xor
sub
icebp
dec
daa
or
lock
fisttps
jnp
dec
lods
push
in
jae
out
stos
ljmp
dec
lcall
sub
gs
ljmp
sbb
lods
jno
mov
ja
jmp
mov
bound
jno
pop
cmp
or
pop
das
sub
pusha
insb
cmpsb
int
cmpsb
add
lcall
roll
ss
or
mov
add
outsl
cld
xor
mov
cmp
test
icebp
icebp
lcall
test
lea
jbe
fistl
xor
into
xor
fimuls
out
push
dec
popf
stc
push
add
xchg
addr16
or
fistpll
push
icebp
movsb
inc
nop
inc
arpl
loope
shl
cld
push
sbb
add
inc
lret
or
mov
xchg
xchg
out
sahf
push
jmp
clc
or
push
lea
sbbb
jge
shrb
cmp
fwait
icebp
ja
dec
sbb
mov
push
xor
lock
mov
orl
in
xchg
pop
std
ret
loope
jae
jo
icebp
test
jbe
enter
das
sbb
xchg
inc
loope
push
or
aad
cmp
imul
pushf
and
jmp
push
mov
aad
cmp
adc
enter
aas
dec
cmp
fwait
adc
dec
inc
loop
arpl
inc
pop
insl
jp
in
pop
ja
push
sbb
push
cmp
iret
adc
movsb
imul
push
negb
sub
pop
inc
push
cmp
mov
mov
adc
push
dec
sub
aam
cwtl
xor
push
in
or
adc
sbbb
jmp
xchg
test
push
in
in
movsl
es
incb
jmp
pop
xchg
jle
outsl
imul
in
rorl
repnz
int
xor
flds
loopne
push
mov
sbb
cmpsl
fmull
add
adc
dec
pop
pop
pop
and
xchg
bound
xor
sar
popf
add
inc
lcall
or
das
nop
test
xchg
mov
mov
add
out
inc
js
mov
je
push
gs
icebp
adc
xor
lea
sahf
notl
rcrb
dec
sbb
ja
imul
adc
jg
or
mull
in
xchg
cmp
or
jae
sub
mov
xor
mov
mov
cli
subl
sti
add
into
in
fdivrl
add
pop
mov
dec
addb
gs
pop
jae
out
ds
cmp
fs
and
adc
pop
adc
and
popa
sbb
push
jbe
lea
push
lahf
lret
mov
sbb
mul
mov
mulb
cwtl
mov
dec
adc
pop
or
lret
mov
and
xor
dec
xchg
mov
jnp
fidivrs
daa
adc
data16
inc
pushf
nop
hlt
out
xchg
fildll
movsb
xchg
rcrb
push
outsl
orb
sbb
ss
pop
fimuls
dec
loopne
inc
xor
pusha
cmc
adc
test
test
sahf
push
xor
ret
jl
data16
repz
sbb
add
xchg
jae
add
mov
or
out
lcall
out
mov
aad
outsl
pop
push
cwtl
fstpt
btc
inc
outsb
add
iret
push
lret
cmp
rcll
lods
inc
sar
xchg
insl
int
lds
shlb
push
jg
push
xchg
hlt
leave
mov
data16
pop
cwtl
clc
int3
jp
iret
repnz
and
jno
ror
xchg
loop
lock
inc
test
sbbb
out
sub
and
lods
pusha
push
xchg
sub
cmp
into
inc
imul
fstpl
fs
jne
aaa
dec
leave
repnz
pop
sbb
lock
lds
mov
mov
and
mov
dec
rol
sub
push
inc
std
int
pop
adc
shlb
lret
jno
pop
sub
cmpsb
mov
pop
subl
popa
add
fwait
jge
mov
addl
pop
jge
stos
enter
mov
cmp
cmp
pop
out
mov
clc
jmp
lock
rorb
or
xchg
ret
out
in
adc
stos
xchg
sbb
cmpsl
jge
sbb
test
fldl
or
sbb
and
jl
pop
outsb
pop
mov
int3
sti
sbb
in
fisubrl
jge
xchg
in
add
push
jae
fstps
call
testb
popa
jl
adc
in
jp
sbb
cli
or
lock
mov
out
int
test
test
adc
jmp
test
cmp
add
pushf
jnp
insb
push
test
jmp
jl
popf
add
andb
add
fnsetpm(287
or
mov
pop
cmp
jl
mov
sub
iret
mov
sahf
dec
movsl
jns
fisubrs
or
aaa
xchg
aad
cmp
jbe
int3
mov
pop
int3
xchg
sub
ds
xor
push
sub
data16
add
ds
pushf
xchg
sbb
decb
add
cli
fsubrs
mov
fs
out
push
int
push
dec
mov
gs
daa
or
sahf
push
les
in
push
xor
xor
push
push
outsl
mov
in
fisubrs
insl
ljmp
sbbl
push
pop
lret
mov
add
jge
stos
jp
or
mov
xchg
dec
mov
loopne
sub
fldl2t
mov
cmc
sub
xor
and
mov
mov
push
loopne
mov
icebp
loop
rol
add
std
sahf
or
jno
dec
aad
sub
aad
in
cmpsl
push
sti
ret
mov
and
cmp
aaa
in
fs
imul
imul
call
mov
lret
addr16
dec
call
push
or
add
push
add
push
addl
push
addr16
push
cmp
mov
test
jp
stos
adc
xchg
pusha
adc
repz
cmp
loop
xchg
and
add
mov
xlat
adc
pop
lgs
jmp
push
xchg
mov
test
sahf
inc
leave
push
jl
mov
ss
sub
inc
mov
jno
cmc
in
ret
outsb
scas
jno
lds
loopne
lock
mov
lods
sbb
rcrl
add
stos
mov
or
je
shl
mov
adc
into
push
push
shl
shlb
mov
mov
inc
push
push
sub
push
sbb
xor
fnsave
pop
lahf
cli
ljmp
repz
fs
add
ret
insb
std
sub
aas
lds
jmp
sbb
fptan
mov
xor
xor
dec
sbb
int3
scas
xor
insb
sbb
mov
mov
jae
leave
leave
aaa
adc
enter
cwtl
sbb
insb
outsb
inc
inc
fisubrs
adc
setae
ljmp
pop
out
cmpsb
std
into
pop
mov
daa
inc
call
pop
mov
push
mov
lret
fiadds
jp
xor
adc
xchg
xor
mov
nop
insb
stos
push
in
lcall
stos
dec
in
sahf
testl
enter
jnp
or
jp
lcall
sub
mov
xor
dec
ss
das
pushf
push
adc
mov
ficoms
dec
add
test
dec
divl
dec
jecxz
push
sbb
je
fdivl
insb
jbe
stos
test
adc
xor
sub
push
in
push
inc
or
sbbb
sub
sub
popf
pop
leave
lcall
and
cmpsb
pop
dec
pop
and
repz
clc
cli
sti
xor
imul
inc
or
pop
mul
mov
fidivrl
movsb
clc
fsts
adc
scas
outsb
dec
cmp
pop
mov
cld
jno
push
sbb
cltd
jne
jmp
and
or
clc
pop
roll
ret
cmp
pushf
and
mov
shrb
nop
sub
jmp
mov
decb
xor
pop
cld
enter
mov
add
ss
dec
and
testl
in
cwtl
cmp
mov
pushf
cmp
pop
mov
movsl
mov
fdivrp
dec
clc
and
mov
scas
pop
add
push
pop
imul
sub
test
mov
les
mov
stos
xchg
sub
sub
dec
mov
pop
dec
orl
outsl
test
adc
pop
jno
loope
sub
add
push
jb
in
icebp
cmp
sub
adc
mov
rcrl
jle
stos
fsubs
into
pushf
mov
call
xor
ds
jae
loope
aam
push
enter
div
stc
inc
in
mov
xlat
aas
out
push
filds
popf
xor
pusha
hlt
jl
es
stc
gs
xchg
das
inc
pop
push
cmpsl
rol
mov
fiadds
or
fwait
testb
test
sti
cwtl
adc
add
fsub
push
cmp
dec
cmp
in
rclb
adc
xor
jb
push
fs
pop
xor
push
ljmp
jns
dec
pop
xchg
or
xor
sub
pop
add
pop
cmc
jns
movsl
mov
scas
dec
jae
mov
xor
nop
test
add
aam
pop
xor
add
pusha
xchg
pop
xor
xchg
test
in
push
ss
cltd
pushl
mov
mov
rcr
jp
jae
lods
iret
add
ret
xchg
mov
arpl
pushf
pop
daa
cmpsl
loope
jae
shll
and
push
dec
or
mov
cmp
shrl
adc
addb
xchg
sbb
repnz
xor
lret
xchg
mov
mov
pop
fwait
sub
or
lea
data16
fcoms
sbb
inc
add
sub
imul
add
mov
mov
mov
xchg
dec
into
pusha
dec
dec
mov
mov
test
aas
dec
push
jnp
push
rolb
push
int3
mov
sbb
cmp
or
pop
outsl
mov
icebp
sbb
arpl
jp
imul
inc
dec
and
dec
mov
aad
inc
cmpl
in
inc
cmp
stos
fwait
sub
sbb
xor
jle
pop
push
clc
ljmp
push
xchg
lods
popf
jg
pop
daa
stos
mov
mov
and
ficoms
cmp
pop
cmp
repnz
and
fisubrs
loope
mov
loope
mov
dec
icebp
out
jmp
jno
popa
inc
movsb
int3
fcom
aam
jmp
jmp
out
push
mov
rorl
xor
sub
sbb
aam
pop
mov
out
outsl
inc
mov
pushf
jecxz
pop
sbbl
aaa
xor
ja
outsb
add
roll
addb
ljmp
push
jl
lock
pushf
jne
je
addr16
fbstp
jl
aas
ds
pop
mov
adc
movsl
addr16
jmp
xchg
sub
adc
test
shlb
push
pop
mov
rcrb
out
xchg
je
jbe
push
add
mov
push
imul
jl
leave
sub
and
popl
cmc
push
test
inc
mov
xor
es
pushf
lcall
jne
fidivs
dec
std
and
or
sub
lcall
cmp
pop
jnp
dec
pop
dec
mov
sub
loop
arpl
and
mov
arpl
repz
cld
mov
mov
pop
cwtl
push
mov
ss
outsl
mov
sar
arpl
push
sti
xchg
ljmp
mov
dec
and
and
lahf
sbb
leavew
jne
adc
fldl
jge
push
or
xor
lock
xor
jmp
push
push
and
or
enter
push
fadds
inc
aaa
add
mov
cli
add
enter
ret
adc
in
pop
mov
call
push
sti
imul
mov
outsl
sbb
scas
popa
jo
cmp
mov
push
add
mov
sub
popf
sub
and
outsb
in
dec
out
out
fsts
loopne
in
xchg
loop
fstl
inc
insb
sbb
inc
dec
mov
in
loop
cmpsb
lock
push
insl
pop
out
scas
mov
data16
sub
adc
jbe
in
mov
xchg
sub
mov
push
aas
add
and
or
jg
inc
or
fcompl
js
test
hlt
and
lret
sbb
inc
sbb
and
lods
orb
cmpsb
sub
sahf
inc
pop
adc
ror
arpl
test
xor
xchg
mov
fistl
xchg
pop
adc
mov
incl
adc
mov
ja
rol
outsl
push
mov
ret
rorb
xchg
push
fistps
jae
sti
push
sbb
push
mov
iret
aad
fbld
shlb
inc
push
call
mov
mulb
mov
test
rcrl
xlat
inc
call
add
arpl
mov
mov
mov
pop
ss
std
out
jg
push
cs
pop
mov
jne
adc
pop
mov
adc
aaa
in
xor
out
sub
aam
daa
push
aad
scas
cld
adc
punpckhwd
movsl
pop
out
inc
jo
sub
push
xchg
js
cmpsb
scas
inc
jge
pop
lcall
fwait
lods
inc
lock
push
cmovg
jns
pop
cmp
cmp
pop
xor
jnp
push
pop
push
jmp
sbb
mov
in
ds
mov
leave
clc
clc
je
out
filds
add
sbbb
and
std
flds
nop
mov
in
mov
fbstp
mov
fildll
sahf
scas
mov
cmpsb
aaa
mov
cmp
inc
dec
repnz
push
sbb
ret
stc
mov
or
adc
mov
adc
loope
je
mov
adc
push
dec
aam
mov
stos
test
pop
xor
imul
sub
out
and
mov
push
pop
push
pusha
ficomps
sbb
xor
andl
cmp
xor
rclb
bound
shll
cld
int
dec
xor
fdivs
push
jge
stos
cli
pop
rclb
xchg
dec
iret
xrelease
xchg
sar
xchg
and
dec
shrb
mov
test
add
mov
mov
sub
sbb
xchg
adc
jnp
cmp
add
add
hlt
lahf
dec
pop
and
pop
mov
jae
outsl
or
and
fsubl
loopne
jle
sub
xchg
int3
pop
xor
cmpb
inc
lods
aad
sbb
and
stos
mov
lods
sub
inc
dec
push
stc
cmp
adc
jae
xchg
sbb
mov
xchg
je
dec
incb
xor
sub
bound
sub
jne
dec
xor
pop
mov
aas
push
mov
call
cmp
push
fistpl
out
mov
rol
mov
dec
jge
push
in
inc
int3
xchg
sbb
pop
aaa
aam
xor
mov
dec
cld
mov
sbb
jmp
scas
and
imul
movsl
sub
sbb
mov
rcl
mov
pop
imul
outsb
out
in
inc
out
sub
int
call
xorb
scas
push
xor
cmp
sbb
clc
jnp
or
imul
orb
cmp
mov
repnz
sub
lret
jg
xor
cwtl
shll
out
mov
dec
fcompl
outsb
scas
inc
aam
sbbb
lods
dec
push
push
sbb
cmp
and
inc
push
movsb
mov
xor
mov
push
lock
addr16
cli
inc
fcomps
mov
inc
pop
cmp
aaa
lcall
xchg
mov
sub
push
xchg
cmp
add
repz
out
cmc
jge
inc
sub
inc
add
add
repnz
xchg
cmp
faddl
sbb
jmp
in
test
mov
pop
inc
inc
xchg
and
mov
push
jbe
cli
mov
mov
add
xor
int3
and
mov
das
pop
jo
cld
lea
jg
or
push
jmp
int3
add
or
movsb
fiaddl
test
sub
paddq
in
subl
rorl
sbb
in
test
sbb
jl
lods
fwait
daa
cmp
stc
inc
loopne
mov
push
cmp
sbb
jl
bound
pop
and
xchg
in
lock
or
pop
insb
fiaddl
mov
repnz
inc
pushf
rcl
imul
call
shll
jne
mov
jl
adc
lock
xchg
inc
mov
js
into
sarl
mov
outsl
in
shll
addb
cltd
push
mov
inc
hlt
mov
mov
fldt
xchg
xor
out
mov
lds
cmp
adc
push
inc
out
cwtl
insb
jmp
ret
push
rcr
cmp
ret
mov
jecxz
fwait
es
imul
ret
divl
push
pop
lret
pop
and
cwtl
mov
xor
mov
sbb
outsb
sbb
cld
out
mov
lcall
xchg
inc
pop
stos
and
xchg
lcall
shrb
xchg
cli
cmpsl
bound
cwtl
mov
and
push
mov
or
pop
les
pop
xchg
test
ror
leave
push
imul
pop
in
popf
and
adc
js
je
jbe
mov
loop
xchg
jnp
repz
leave
mov
lahf
cmp
push
xchg
aad
xchg
orl
cmp
or
adc
dec
mov
add
pop
stos
pushl
cltd
outsb
inc
rcr
xlat
and
lds
mov
inc
jns
nop
mov
jns
xchg
sbb
pushw
stos
adc
add
cltd
jle
outsl
fs
int
pop
inc
adc
mov
push
cmpsb
cmpsl
daa
mov
sbb
imul
outsb
push
xor
clc
call
lds
dec
out
loopne
pop
inc
sbb
mov
cmp
movsl
insb
je
sub
dec
pusha
shlb
inc
and
and
lods
pop
mov
bndldx
popa
sbb
mov
pop
insl
pop
mov
ret
push
jne
inc
xchg
fwait
push
int
and
inc
into
inc
das
push
cwtl
cmp
loop
mov
dec
inc
pop
aaa
cli
cwtl
popf
les
dec
psrlq
rcrl
lret
sub
imul
cmp
and
loope
fcoms
push
int3
pop
in
sub
and
and
or
mov
bound
cmp
xor
lahf
or
imul
inc
adc
dec
inc
pop
imul
inc
or
add
pop
inc
std
dec
fstpt
add
xlat
pop
pop
fistpl
jns
and
in
pop
dec
sbb
movsl
arpl
mov
xchg
adc
xchg
sbb
icebp
jle
cmp
xor
pusha
pop
and
sub
neg
insb
xlat
dec
arpl
lods
dec
arpl
ja
jle
fcomi
cmpsl
sub
lahf
pusha
add
mov
subl
mov
out
inc
ds
sti
add
or
xchg
ds
sub
mov
fbld
xchg
lahf
sbb
mov
push
and
sbb
adc
std
inc
fcmovnbe
jbe
sahf
and
jle
or
xchg
add
pop
mov
popa
mov
fmuls
sub
daa
add
out
in
cmpsl
xchg
ret
push
fcomps
repnz
stos
mov
pop
sbb
outsl
sbb
push
push
and
dec
xor
push
sti
or
cmovg
fsubs
add
aam
add
mov
jmp
mov
fldenv
xchg
adc
cli
jle
pop
cwtl
shrl
cmp
mov
icebp
push
xchg
ss
add
fisttps
jmp
repz
dec
push
cmp
hlt
pop
mov
cmp
out
ret
add
test
pop
mov
out
mov
fwait
int
in
mov
cmp
adc
xchg
inc
lahf
loope
sbb
loop
shl
cmp
scas
imul
dec
nop
fdivrl
movsl
push
xchg
dec
pusha
inc
and
int
test
add
inc
mulb
sbb
sar
popf
insl
in
sub
mov
cld
jl
bound
xchg
mov
sbb
mov
sub
cmp
adc
xchg
lret
and
push
xchg
pop
sbb
or
xchg
std
sti
mov
pop
out
sti
pushl
xor
psllq
push
dec
jb
ret
movb
lock
lcall
xor
bound
mov
pop
push
adc
pop
mov
or
cltd
fcoms
mov
movsb
mov
aas
sbb
repz
jb
bnd
into
aaa
sarl
popf
mov
cmp
fwait
mov
mov
mov
lcall
jne
lea
aam
repnz
mov
into
sbb
sahf
sbbl
mov
pop
mov
jmp
sub
jl
loope
aad
insb
pusha
movsb
xchg
jne
mov
cmp
test
filds
xchg
cmp
or
push
gs
xchg
xor
imul
in
dec
std
scas
adc
cmp
push
pop
sub
fldenv
dec
jo
rorl
cmp
sbb
mov
mov
arpl
jae
cltd
dec
xor
mov
mov
daa
xchg
lret
mov
pop
jns
testb
test
cmp
ljmp
sahf
pop
cmp
dec
mov
aad
movsb
cmc
adc
push
lods
pop
mov
cmp
gs
ljmp
inc
pop
call
jp
lahf
jle
and
inc
jg
cmp
dec
test
mov
inc
lods
cmp
sbb
into
xor
xchg
mov
out
xchg
js
mov
mov
fwait
sbb
mul
pop
mov
in
scas
pop
cld
das
and
push
clc
repnz
cwtl
jo
jle
iret
stos
in
aaa
jge
cmp
push
enter
mov
fsubl
dec
lock
xlat
je
call
fistps
sbb
outsb
je
int3
xchg
cmp
jecxz
imul
aam
mov
pop
sbb
jns
in
shrl
flds
sub
aas
data16
cs
dec
outsb
mov
mov
mov
cmp
push
xlat
mov
icebp
dec
inc
lock
cmc
testl
jnp
lcall
daa
inc
and
loop
cli
xorl
add
out
push
lods
mov
ret
daa
and
in
push
inc
stos
outsb
and
lods
stc
adc
sub
mov
sub
pop
leave
xorl
scas
inc
dec
adc
fisttps
test
add
mov
and
out
add
cmp
mov
shrb
aaa
mov
pushf
pop
or
mov
bound
repz
xor
sbb
aaa
insl
insb
xchg
mov
jne
xchg
and
and
sbb
ret
xchg
dec
ja
push
mov
and
inc
cmp
or
into
push
out
lret
test
aad
lods
mov
pop
ss
aad
ret
mov
xor
cmp
jge
jg
sub
fprem
push
sub
push
push
call
addr16
add
pop
adc
mov
cmp
or
jmp
out
ficoms
jno
jne
mov
les
mov
xor
lock
pop
jle
dec
sub
pop
sub
pushf
xchg
clc
test
andb
js
xor
cs
cmp
pushl
sbb
jl
or
or
pop
push
or
repz
sbbb
mov
inc
mov
xchg
mov
jle
xchg
dec
fidivrl
sub
mov
imul
loop
scas
dec
or
sbb
push
in
cmp
mov
inc
int3
inc
std
add
mov
daa
adc
xor
pop
pop
adc
mov
cmp
arpl
shr
es
cmpsb
mov
addb
out
sti
mov
shlb
test
cmpsb
mov
dec
aas
mov
scas
adc
add
fwait
dec
call
push
adc
shl
lods
or
sub
add
cltd
outsl
pop
fnstenv
lret
aad
stos
fisubl
or
or
movsl
cmp
fcmovb
lods
aas
icebp
shlb
and
cmpsb
int
movsb
xchg
frstor
pop
xchg
jge
les
lea
xchg
int
imul
jb
dec
inc
or
sbb
invd
mov
lea
ror
push
push
pop
int
mov
iret
stos
cmp
movsl
add
stos
xchg
adc
and
jg
jbe
inc
xor
mov
sub
fdivr
iret
pmaxub
movsb
idivb
cmpsb
fsub
jl
adc
mov
pop
dec
and
loop
mov
lea
xor
push
pop
les
inc
arpl
rcrl
pop
fsubrs
aas
insl
mov
mov
icebp
iret
xchg
mov
insl
mulb
fiadds
dec
dec
mov
dec
movsb
out
gs
xor
repnz
pop
mov
pop
sti
into
jne
adc
fcomp
add
dec
pop
mov
xchg
mov
icebp
pop
dec
pop
movsl
pusha
out
test
pop
cli
xchg
xchg
push
mov
or
mov
adc
jecxz
dec
dec
aam
pop
mov
movsl
pop
xchg
add
mov
or
mov
roll
lods
pop
mov
mov
movsb
shrl
popf
loopne
cli
cmp
insb
push
adc
lock
sti
ret
insl
adc
dec
sbb
fisubrl
mov
cmpsl
sbb
ljmp
jl
js
xor
or
cmc
pop
sub
int
fsubrl
or
push
clc
loope
mov
imulb
add
lret
imul
lods
jg
cs
push
mov
push
or
push
mov
test
stc
test
push
jg
out
cmp
pop
cld
pop
fldt
pushl
xchg
ss
pop
mov
lcall
cmp
ss
cs
add
cmp
ljmp
nop
xchg
jp
sarb
fisttps
push
push
icebp
pop
ret
or
jno
pop
les
fstps
divl
xchg
shrl
jb
mov
cmpsb
push
cmp
mov
or
sbbl
xor
inc
out
fsubs
sub
outsl
xor
fimull
mull
call
cmp
or
loope
xor
dec
xchg
pop
nop
sti
lahf
jne
cmpsb
push
xor
test
and
hlt
lcall
jmp
push
int
and
mov
ljmp
int
insl
inc
cmp
pop
inc
xor
add
mov
cltd
mov
jns
cli
fcos
es
push
fsubrs
mov
cmp
cmc
adc
fbstp
or
push
call
cs
or
gs
pusha
xchg
addr16
shlb
mov
xchg
and
push
xchg
test
push
push
andb
dec
call
sbb
dec
cmpsb
jg
cltd
push
loopne
stos
mov
aam
addb
subl
jnp
addr16
adc
cmp
test
sub
mov
mov
push
xor
fdivs
mov
push
xchg
repnz
ret
or
jb
pop
lds
movsb
push
xchg
int3
mov
call
ss
into
xor
sub
adc
pop
popf
adc
repnz
in
dec
inc
mov
mov
cmc
fnsave
mov
inc
mov
ret
sti
fs
sbb
adc
call
push
scas
ja
cmc
pop
js
mov
push
add
fidivrs
xor
in
cmpsl
mov
xchg
mov
sbb
mov
bound
iret
dec
push
jmp
xor
sub
scas
cmp
cmp
daa
lock
fcmovb
jecxz
lods
xor
inc
test
and
fiaddl
stos
cmpsl
cs
xchg
xchg
std
jle,pn
fiadds
add
outsl
add
ret
out
js
std
cmpl
jp
add
cld
adc
push
loop
insl
adc
sub
jmp
fyl2x
lods
mov
aaa
or
mov
xchg
gs
pop
into
loopne
arpl
ret
add
xor
xchg
inc
and
pop
dec
outsl
das
imul
or
inc
adc
add
pop
imul
jnp
inc
mov
mov
jle
adc
dec
ljmp
jnp
in
mov
jmp
cmpsl
xor
adc
push
or
repnz
and
addr16
add
sar
daa
inc
add
sbb
jp
mov
sar
in
cmp
movsb
dec
xor
lret
jl
adc
imul
std
xchg
jne
insl
lcall
mov
push
push
mov
mov
aas
stos
popl
filds
mov
je
xchg
imul
mov
cld
jo
sub
cli
jp
dec
stc
rcll
mov
hlt
fsub
cwtl
daa
pop
mov
push
icebp
pushf
mov
mov
test
repnz
loope
mov
xlat
jnp
mulb
loopne
add
gs
scas
divb
mov
fidivrs
and
dec
adc
jno
subb
cmp
test
subl
sbb
cs
scas
divb
pop
in
inc
push
out
xlat
call
out
leave
push
pop
fsubrl
mov
jle
xor
jmp
sti
jmp
mov
jecxz
pop
daa
repz
sub
rolb
push
or
sub
cmp
repnz
loopne
cmc
pushf
mov
or
mov
shr
test
mov
enter
stos
and
adc
sub
push
pop
xor
loopne
lahf
lahf
sarb
addr16
pop
xchg
mov
xor
rcll
pop
sbb
push
xor
mov
in
arpl
or
lds
sbb
callw
fsts
and
aas
sub
cmp
mov
and
dec
lods
jb
mov
pop
into
mov
xor
push
stos
sbb
xlat
arpl
repz
sbb
jne
mov
adc
cmp
pop
mov
pushf
rolb
push
imul
xor
sub
sbbb
addb
xchg
adc
add
cmp
mov
loopne
sub
inc
rcr
pop
outsl
insb
adc
dec
pop
jl
lds
ficoml
cs
test
cld
push
loope
in
arpl
mov
pop
enter
daa
stos
icebp
rcll
popf
sahf
xor
stos
pop
stc
jns
add
inc
fs
jno
sub
ret
mov
mov
lds
ja
cmpsl
fs
outsl
repnz
mov
sbb
jbe
inc
or
cmc
lret
mov
inc
push
out
sub
fstp
jno
dec
mov
add
mov
jo
xlat
into
mov
mov
loopne
mov
fists
leave
and
sub
or
in
divl
lds
lock
adc
pop
in
pop
xor
mov
aam
push
addr16
jae
test
fldenv
shll
push
incl
push
shr
xor
test
or
cmp
mov
mov
jne
xchg
xlat
insl
dec
jns
xchg
stc
pop
xlat
cmc
fstps
out
and
jecxz
add
ror
mov
fidivrl
xorb
xor
push
pop
fisubs
cmp
jb
call
pop
cmpl
mov
mov
cs
sahf
insl
mov
sbb
sub
aam
dec
ja
xor
mov
bound
scas
ret
cmpsl
xor
in
mov
call
push
dec
scas
pop
scas
mov
pop
shlb
inc
orb
test
shrl
and
adc
int3
dec
iret
jg
jmp
loopne
ror
loopne
enter
xchg
cmpsl
sbb
mov
shll
pushf
es
imul
dec
addr16
cmp
add
pop
cmpsb
inc
add
inc
lods
mov
jmp
mov
xchg
xor
xlat
dec
xchg
addl
loopne
movsb
or
add
sbb
lcall
push
cld
and
jg
mov
pop
mov
addr16
leave
mov
inc
sbb
and
cmp
adc
xor
addr16
push
jle
jb
cmp
sti
or
jp
cmp
movsl
mov
cltd
and
adc
or
jle
add
sahf
sbb
push
enter
cmpsl
add
sahf
mov
adc
xchg
mov
jmp
xor
inc
scas
aam
inc
adc
out
mov
cmc
pop
mov
mov
loope
xchg
jno
je
and
movsl
push
pop
jb
mov
roll
mov
sub
fwait
mov
inc
sti
mov
out
lret
addb
lds
sub
movsb
adc
mov
xor
clc
xchg
xorb
mov
les
dec
fisubrs
push
pop
mov
mov
mov
cmp
sbb
push
mov
sub
mov
sbb
sbb
inc
jmp
and
or
nop
sbb
pop
lret
mov
push
cmp
or
pop
add
pop
pushf
out
dec
inc
cmc
lahf
inc
xchg
mov
inc
fisubs
in
clc
mov
imul
outsb
sti
xchg
pop
adc
call
aas
inc
sbb
popa
adc
pop
sbb
xor
push
jne
fldt
mov
outsl
pushf
or
popa
sbb
std
add
pop
jnp
pop
xchg
xlat
push
mov
movsb
mov
test
add
push
push
push
test
leave
movsl
jb
mov
inc
into
sub
sbb
or
push
and
mov
mov
call
add
mov
mov
out
fcomp
mov
jl
incl
inc
stos
mov
push
fistpl
out
lods
mov
and
inc
or
dec
pop
ret
mov
mov
push
sub
in
and
rcrb
and
loop
sar
mov
fidivs
and
and
aas
mov
les
cmc
cmp
ds
or
loop
cmpsb
and
adc
sahf
inc
sub
dec
lret
xor
fldenv
jb
insb
add
xlat
es
test
ret
pop
out
mov
scas
jg
jb
ret
add
add
repnz
shl
cltd
inc
ss
cwtl
mov
push
dec
sub
xchg
loop
sub
outsb
inc
mov
test
mov
bound
wrmsr
das
es
dec
test
mov
push
lock
sahf
fwait
insl
jp
jle
outsl
inc
icebp
enter
mov
sub
mov
bound
mov
test
xchg
cmp
jo
ja
in
scas
iret
clc
adc
clc
cmp
fistpl
add
into
aas
adc
cmp
mov
dec
mov
pop
icebp
adc
sbb
cmpsb
inc
nop
mov
sbb
enter
mov
jl
nop
das
je
jg
inc
pop
cmp
je
push
pop
inc
mov
jmp
or
lret
xchg
es
fldcw
cltd
paddd
mov
dec
subl
pop
cli
in
push
jle
sub
mov
test
hlt
fnstenv
pusha
lds
sahf
add
adc
push
xchg
add
ja
push
add
xchg
pop
jmp
or
xlat
in
sbb
test
clc
inc
or
je
xchg
mov
ljmp
cmp
jmp
and
mov
mov
movsl
test
mov
inc
sbb
movsl
ds
loop
and
jmp
inc
mov
psllw
sub
mov
popf
cs
outsl
push
das
addr16
fistpll
inc
xchg
cmp
cmp
xor
cmp
pusha
inc
adc
repnz
mov
dec
out
movsb
jns
push
aaa
push
repz
cli
mov
call
jbe
insb
nop
movsl
aaa
jge
dec
movl
mov
sub
inc
jg
push
sti
lods
cltd
aad
mov
push
jle
jbe
or
rorb
xor
scas
cltd
into
xchg
xchg
mov
es
jp
movsl
adcb
ljmp
loop
xchg
repz
les
xor
cs
push
cmp
sub
je
xchg
inc
mov
push
lods
add
mov
negl
sub
jmp
pop
cmp
shll
mov
fcom
imul
dec
iret
mov
add
fbld
sti
pop
fbld
mov
sti
popa
popa
lahf
movsl
test
jno
pop
push
inc
push
or
dec
add
jg
adc
sub
push
jns
ds
inc
adc
and
lcall
jecxz
sub
mov
mov
enter
and
add
sahf
les
sub
jno
xor
movsl
daa
iret
faddp
lds
bound
pop
icebp
cmp
and
data16
push
pop
inc
bound
stos
lahf
adc
scas
cmpsb
or
jae
inc
repz
popf
xchg
es
mov
add
xchg
jg
add
pop
sbb
int
push
dec
aas
sub
sti
daa
leave
mov
jb
pop
mov
sbb
or
inc
adc
ljmp
mov
xor
mov
pop
push
pop
sar
mov
or
mov
scas
dec
imul
push
repnz
je
leave
mov
gs
xchg
andl
mov
jae
rcrb
push
scas
iret
jnp
mov
mov
mov
es
loop
test
rorl
jnp
int3
mov
mov
sub
or
sbb
lods
push
mov
sahf
adc
pop
push
cmp
mov
push
inc
mov
mov
sti
dec
mov
jmp
adc
xchg
cmpsl
insb
movsb
mov
mov
mov
test
push
cmc
push
aas
mov
mov
enter
loop
mov
cltd
ljmp
push
add
int
inc
sub
neg
insl
les
cmpsb
test
outsl
rcll
cmp
ljmp
imul
addr16
scas
call
xor
cmp
mov
out
mov
xchg
das
fdivl
or
jmp
cmp
lds
push
stos
nop
pop
mov
push
repnz
lahf
insl
jmp
leave
xchg
filds
je
mov
xchg
iret
cmp
pop
inc
mov
loope
or
sub
xchg
mov
ficoms
cld
in
in
cmpsb
inc
cltd
xchg
add
aaa
ret
ss
lea
test
lahf
adc
jg
nop
push
pop
aam
xor
ficomps
xchg
xchg
adc
push
or
es
adc
mov
fwait
jg
push
mov
or
mov
xchg
dec
aam
add
xchg
int3
ret
or
pop
add
jae
add
jnp
sub
shrl
sbb
jae
push
mov
xchg
arpl
and
inc
xchg
loopne
pushf
jg
mov
xlat
push
in
enter
dec
hlt
adc
enter
shlb
movsl
int
and
and
int3
stos
and
daa
ds
mov
push
sub
loope
push
cld
cli
std
cmpb
insb
xor
andl
cltd
add
movsb
and
pop
mov
je
mov
test
mov
cli
sub
mov
stos
sub
pop
fwait
dec
idivb
jge
jno
sbb
jne
dec
fucomp
pop
loopne
fdivr
out
js
xchg
negl
sub
inc
jle
and
mov
divl
enter
cmp
not
lcall
in
idivb
shll
dec
push
push
push
mul
cld
pop
push
out
movsl
jno
mov
imul
sahf
movsb
fidivrs
sahf
dec
movsb
pop
mov
es
or
adc
pop
cs
jmp
dec
ret
xchg
je
or
cmpsb
out
mov
loopne
pop
mov
add
popf
mov
out
imul
cld
rcl
mov
imul
aas
imul
sbb
cmp
dec
inc
fld
jb
jns
fwait
fs
add
in
mov
or
xchg
jge
xchg
js
movsb
test
mov
inc
mov
movsl
popf
cmp
int3
lcall
mov
inc
js
lods
mov
and
push
sbb
push
mov
xlat
loop
xor
mov
or
ds
daa
shlb
test
mov
and
xor
inc
stc
dec
pop
cs
xor
xchg
int3
cmp
fisubs
ret
mov
xor
mov
pop
mov
rcll
mov
dec
pop
ja
cmpsb
loope
cmp
mov
loop
hlt
retw
push
pop
pusha
int3
stc
mov
inc
test
cli
enter
into
adc
mov
ss
fists
sub
loop
adc
test
jns
cltd
sub
lret
inc
ffreep
sti
and
sub
aas
repnz
ljmp
xchg
cmc
mov
mov
sbb
into
aam
push
dec
mov
xor
std
xchg
xchg
rorl
xor
and
xchg
nop
pop
call
out
pop
jae
dec
xchg
jle
or
hlt
fadds
pop
jbe
pop
fisttpll
mov
in
ljmp
repnz
push
adc
cltd
and
lret
js
popa
cltd
scas
adc
mov
jl
dec
mov
lcall
adc
dec
push
shrb
xchg
add
mov
adc
gs
stos
or
fwait
push
mov
in
add
push
mov
cmpsb
cli
jns
jo
aam
out
jbe
pop
in
out
xchg
inc
sub
pop
out
out
dec
sbb
xor
dec
push
jno
sbb
cmc
dec
or
xor
mov
xor
mov
fs
pushf
sti
insl
rolb
dec
and
pusha
and
into
mov
lahf
pushf
dec
push
cmp
hlt
daa
or
mov
cmpsl
into
add
cmpsl
inc
mov
lret
xlat
sub
insb
arpl
repnz
ss
aaa
cmpb
dec
mov
and
xor
mov
lods
int
lock
and
ret
mov
jle
mov
das
iret
cs
aas
inc
cmc
xlat
cmp
fisubrl
push
add
test
mov
push
cmpsl
xchg
shlb
mov
jae
test
adc
xor
cli
cmp
or
aas
pop
sub
cmp
and
test
scas
xor
or
subl
sbb
inc
dec
add
pop
flds
xchg
xorb
sub
movsb
mull
sub
add
add
jmp
cpuid
add
aaa
add
inc
test
insl
mov
sbb
or
cmp
iret
sarl
and
mov
mov
inc
adc
lea
sti
push
xor
xlat
nop
insl
mov
and
mov
dec
loop
dec
pop
push
and
pushf
xor
test
punpckhbw
cmp
and
inc
add
and
shrl
xor
outsb
add
dec
push
dec
mov
nop
adc
push
or
mov
cltd
push
adc
or
std
movsb
push
inc
push
jns
or
xchg
cmp
jecxz
xchg
pushf
add
or
dec
mov
ljmp
arpl
xchg
int3
xor
into
add
into
jmp
loop
rorb
outsb
mov
cs
stos
lods
xchg
ret
inc
rcll
les
out
xchg
pop
mov
adc
push
roll
outsl
mov
inc
push
and
nop
xchg
stos
out
pushf
add
movsl
pop
mov
inc
subl
jp
test
gs
hlt
jp
sti
inc
inc
pop
ds
cmp
sub
mull
xchg
aad
dec
xchg
int
movsb
lea
jb
dec
cmpl
push
jg
loop
dec
sub
dec
outsb
pop
mov
test
push
inc
xchg
addb
hlt
inc
test
adc
sbb
xchg
test
mov
push
leave
pop
adc
and
dec
movsb
inc
add
cltd
ljmp
add
popa
mov
dec
ljmp
adc
dec
lods
pushf
hlt
les
cmpsl
add
in
test
add
mov
scas
push
jecxz
cmp
mov
inc
lret
sbb
sbb
and
rcr
je
addr16
stos
stc
loope
jbe
push
outsb
cmp
sahf
aas
mov
cwtl
popf
xlat
adc
pop
les
cmpsl
mov
repz
pop
call
es
inc
test
loope
add
addr16
ljmp
mov
push
push
repz
mov
lea
mov
lahf
xor
xchg
fcomps
call
mov
mov
pop
or
leave
fcmovnbe
xor
mov
ja
mov
mov
lds
push
std
ss
push
pop
fs
out
lret
or
fs
mov
jns
push
jae
pop
pop
sti
ret
jecxz
in
insb
cmp
lds
adc
loop
fisttpl
jbe
jmp
or
mov
movsl
push
xchg
mov
add
jnp
push
jnp
mov
int3
lods
out
sbbl
dec
je
shlb
daa
jb
push
xchg
outsb
lret
movsb
adc
fdiv
insl
sub
nop
shll
mov
fxch
pop
mov
rcr
or
inc
roll
lret
sarl
icebp
imull
pop
dec
int
jp
pop
or
sbb
sahf
jg
cmp
inc
into
jno
imul
in
cmp
test
std
sub
idivl
fstps
inc
sub
movsl
std
pop
aas
lahf
test
and
divl
fwait
in
inc
test
push
sub
push
sbb
xchg
or
mov
cmpsl
hlt
fldcw
lcall
sbb
pushf
adc
sbb
or
int3
and
lods
xor
push
pmaxsw
dec
add
aaa
jno
push
xor
cmpsl
in
inc
jge
daa
into
std
popa
repz
pop
cmpb
lahf
or
push
cmp
ret
lahf
push
lods
mov
out
ja
sub
leave
out
xlat
rorb
jb
jl
xchg
fldcw
rcll
jecxz
test
inc
sti
mov
xchg
jmp
xor
or
mov
int3
roll
jecxz
pop
add
and
repnz
cltd
sub
out
scas
mov
in
push
sub
add
or
jmp
mov
and
std
imul
sub
in
jecxz
lahf
movsb
shrb
xor
xchg
or
pop
inc
adc
xchg
popa
adc
jo
jno
sti
js
stos
repz
imull
pushf
shr
pop
mov
sub
test
test
jecxz
mov
xor
fs
leave
xchg
mov
or
jne
imul
push
imul
push
sub
mov
mov
xor
test
or
loope
mov
inc
hlt
inc
notb
sar
lahf
pop
mov
shll
dec
cmpsb
lahf
out
sbbb
xchg
lods
mov
push
pop
sub
pop
mov
mov
call
sub
repnz
xor
loopne
mov
xorl
std
scas
cmp
jg
or
les
xor
int3
sub
push
cwtl
in
repnz
pop
xor
adc
mov
ret
dec
imul
std
dec
roll
xchg
cmp
mov
mov
and
mov
popf
das
add
cltd
pop
jmp
popa
das
aad
insb
push
or
iret
adc
add
arpl
xchg
xor
addr16
adc
lods
mov
xor
stos
jge
cmp
mov
sbb
insb
shrl
aam
inc
sbb
jecxz
mov
sbb
cltd
xor
sbb
in
aad
mov
ss
inc
cld
rorb
mov
les
sbb
xlat
insb
int3
pushf
movsl
cmp
mov
js
jne
pop
jmp
xor
int3
orl
sbbb
scas
aas
or
std
adc
push
pusha
loop
inc
lock
pop
and
sbb
dec
outsl
iret
push
xchg
inc
mov
lds
pop
pop
into
sbb
jl
mov
data16
ror
inc
cli
in
push
mov
and
inc
push
jg
push
push
pop
push
mov
sub
adc
roll
xchg
sub
or
test
lret
sub
xchg
out
jmp
xlat
insb
cltd
sub
mov
inc
sub
loop
pop
cmpsb
fistpll
mov
pop
fdivl
push
cmpsb
adc
dec
mov
sub
leave
inc
gs
in
lret
dec
add
jge
lea
mov
cmp
jbe
and
xchg
jecxz
xor
inc
cltd
aaa
aas
inc
jl
rolb
mov
mov
ss
push
pop
inc
cmp
pop
sbb
xchg
or
xchg
movsb
sub
shl
hlt
lods
out
rcl
les
ljmp
adc
out
into
pcmpgtb
das
adc
sub
xor
push
iret
rcll
pop
shlb
jl
leave
jne
dec
mov
daa
cmpsl
nop
ljmp
call
lods
leave
xchg
in
mov
add
mov
leave
sub
leave
add
push
jnp
test
data16
jg
mov
xchg
adc
add
dec
dec
repz
add
rcl
lea
mov
inc
hlt
iret
push
cmp
adc
inc
inc
arpl
cmpsl
stos
aaa
mov
cmp
fdivrl
mov
flds
adc
push
push
pop
rolb
or
cmpsl
fst
or
rolb
aas
lahf
mov
xor
xsaveopt
and
dec
fs
dec
cmpl
fisubl
jne
mov
shll
adc
dec
mov
cli
repnz
pop
and
jmp
pop
inc
or
push
repz
aaa
xchg
cmp
movsl
lock
lcall
xchg
mov
inc
pop
cmc
mov
jle
pop
mov
movsb
sub
out
cmp
arpl
mov
loopne
lcall
sti
jle
or
mov
push
mov
jmp
sbb
aam
dec
lret
mov
lds
inc
mov
pop
test
pop
jle
mov
dec
and
inc
xor
je
jb
add
pop
clc
cli
sub
pushf
sbb
shrb
cmpsl
inc
pop
mov
cmc
dec
shll
cmpsb
pop
mov
lock
cld
fistl
in
mov
sbbb
push
divb
sbb
icebp
sub
adc
push
pop
ret
lods
shll
sub
and
xchg
mov
outsl
push
mov
frstpm(287
stc
jo
add
in
cmp
pusha
mov
clc
push
mov
sub
lods
bound
test
inc
push
xchg
shrl
sbb
adc
push
in
int
or
sti
cmp
pusha
cmpsb
aas
and
cmp
dec
or
xlat
xchg
or
out
fistps
push
out
pop
fcoml
out
jmp
imul
fstpt
daa
test
adc
insl
and
clc
stos
dec
fisubl
xor
push
aaa
cmc
addl
roll
sbb
jae
inc
or
data16
inc
hlt
out
push
inc
pop
xchg
imul
sbb
jmp
xchg
xchg
int3
pop
cli
sbb
add
sub
ret
pop
lcall
xchg
lcall
jno
cltd
cmp
loop
cmp
mov
dec
addr16
out
or
test
lcall
adc
mov
adc
inc
sbb
call
mov
loopne
loopne
add
mov
xor
cmp
lods
jae
es
dec
sbb
bound
daa
ds
scas
ljmp
sbb
dec
push
cmp
leave
or
cmc
test
xlat
mov
add
xchg
adc
push
in
andb
adc
and
push
xchg
pop
dec
pop
movsl
outsl
rcrb
fnstcw
and
xlat
mov
add
mov
xor
ret
xor
enter
xchg
jne
mov
js
sub
dec
fyl2xp1
popf
scas
mov
cli
xlat
and
das
int3
add
fstl
sub
ljmp
mov
and
sbb
mov
loopne
test
int3
push
data16
gs
mov
cmp
es
jns
jns
sbb
push
cmpsl
jg
cld
call
insl
mov
mov
xor
jne
out
inc
pop
jo
hlt
out
dec
fwait
mov
inc
pop
ret
pop
dec
inc
push
rorl
fisubl
mov
add
sub
daa
pushf
outsl
adcl
int3
outsb
rorb
movsb
pop
mov
push
mov
adc
test
mov
stc
xchg
test
mov
sarb
mov
add
jg
ds
stos
inc
nop
push
icebp
fists
ret
dec
aaa
mov
imul
lods
xorb
orl
pop
movsb
inc
cmp
mov
push
xor
jno
ret
gs
sahf
sysret
cmp
pop
or
inc
xlat
mov
data16
push
and
enter
pop
call
dec
pop
or
in
mov
outsl
pop
xor
mov
mov
out
cmpsl
nop
rcll
mov
fdivr
push
dec
shlb
and
push
stc
adc
test
clc
clc
push
in
pushl
xor
or
addr16
pop
pop
sbb
in
xor
and
int3
sub
leave
xor
dec
ror
je
test
jecxz
data16
ret
es
xchg
and
shll
test
xchg
mov
xor
in
mov
into
cld
ljmp
outsb
lods
jb
scas
jmp
mov
out
jg
repz
xorl
mov
jecxz
js
sub
jge
cmp
pop
jne
or
hlt
xlat
in
repnz
jl
ss
xchg
cmp
mov
movsb
arpl
and
add
jecxz
mov
cmp
ret
adc
ror
ret
cmpsb
cmp
push
fidivrl
dec
rol
sub
or
sbb
mov
dec
pop
ljmp
cmp
mov
mov
dec
jl
cmp
or
xchg
outsl
rol
ljmp
pop
add
fwait
scas
addl
aas
popf
add
xchg
imul
xlat
rcrb
mov
repz
or
mov
fbstp
repnz
xchg
jge
pop
int
sub
cld
mov
inc
mov
jle
hlt
and
or
insl
out
fisttpl
mov
sbb
add
xchg
xchg
inc
cmp
sub
loope
movl
mov
arpl
pop
pop
lahf
sbbl
push
out
and
cmpsb
out
push
out
dec
aaa
js
iret
jl
mov
cltd
jns
inc
jns
push
repnz
shll
xor
das
aas
mov
mov
push
sarl
xor
div
loop
mov
mov
fstpl
push
push
add
ljmp
sbb
pop
aad
stos
inc
mov
les
push
push
jns
popa
push
pop
xchg
jmp
sub
adc
cmp
test
mov
xor
or
dec
ja
or
pop
adc
stos
cwtl
cmpsb
mov
sub
test
dec
mov
insb
cmpsb
jns
les
mov
inc
pop
cltd
push
push
mov
cld
out
rcll
aas
push
pop
insb
cmp
sub
jno
add
cmpsl
adcl
jo
or
push
cmp
xor
add
adc
sub
mov
je
cmp
or
push
int
aaa
pusha
sarb
jl
push
push
mov
lahf
xor
out
mov
add
mulb
mov
dec
pop
adc
push
xchg
xor
fstpt
pushf
nop
cmp
dec
sub
hlt
push
adc
cwtl
xchg
jmp
ret
or
andb
sub
rcll
mov
repz
add
je
and
out
fistpl
and
dec
inc
push
or
inc
fistl
or
jno
aaa
push
pop
daa
mov
xchg
add
xchg
mov
xor
fimull
mov
mov
jecxz
dec
mov
dec
push
scas
sbb
int3
push
mov
xchg
imul
outsb
fsubrs
dec
insl
outsl
js
pushf
fstps
add
out
in
push
rcrb
mov
mov
in
sbb
mov
jno
push
sbb
jp
add
movsb
ds
insl
in
repz
inc
mov
clc
pop
out
idivl
push
in
jno
xchg
ljmp
sarb
jb
mov
inc
std
sbbb
lds
out
mov
arpl
iret
sets
jl
inc
lret
inc
inc
imul
push
inc
cli
imul
rorb
pop
loop
les
push
jle
daa
imul
ret
sub
ret
pushf
pop
ljmp
mov
add
mov
cmp
pop
faddl
les
pusha
inc
outsb
cmp
cmp
iret
icebp
idivl
mov
test
add
stos
sahf
jo
movsl
cmp
nop
mov
repz
xchg
popf
mov
ljmp
and
cmp
cmp
sbb
pushf
push
call
xor
mov
or
mov
push
lahf
xchg
xchg
dec
and
inc
insl
mov
aaa
fstpl
test
xchg
cmp
aas
sub
mov
jae
inc
xor
adc
add
jmp
icebp
inc
stos
lcall
xchg
mov
or
mov
lock
add
jns
movsb
loopne
xor
jp
pop
aaa
dec
aam
xor
mov
push
sub
into
or
test
iret
mov
fnsave
lock
hlt
mov
cmpsl
cmp
mov
lea
push
sarb
mov
scas
outsb
dec
push
pop
aad
mov
xchg
or
test
ret
mov
fisubs
cli
or
out
push
cmp
or
inc
out
out
in
je
pop
jns
cmp
jp
or
sub
dec
sub
int3
aaa
dec
inc
icebp
push
sbb
inc
cmp
push
mov
pop
popa
sub
ds
movsl
adc
clc
sbb
mov
loope
cmp
jnp
inc
fwait
cmp
outsl
mov
cmp
sub
rclb
fdivrs
inc
fwait
inc
jecxz
notb
call
lret
dec
jnp
xchg
lds
ja
xor
jge
fwait
or
mull
inc
add
or
lret
pop
stos
sbb
mov
adc
add
jecxz
or
in
add
repnz
push
push
or
stos
sbb
add
les
inc
stos
push
and
dec
mov
jge
pop
das
cwtl
mov
sbb
loop
mov
mov
jns
loope
or
mov
inc
cmpsb
pop
rorl
lret
pop
jmp
das
adc
insb
xor
popa
mov
jle
sub
inc
fwait
cli
and
xchg
add
jp
movsl
inc
lods
neg
or
jns
cmp
hlt
inc
push
dec
push
mov
fidivrl
mov
iret
std
rclb
mov
fidivl
sarl
mov
jns
outsl
bound
cmp
sub
mov
pop
push
xor
jle
xchg
add
pop
bound
push
sub
call
lock
jp
pop
daa
jne
jo
cld
orb
cmpsl
std
xchg
aas
loop
std
xchg
xchg
push
sbb
inc
sbb
popf
xor
sbbb
cmc
ljmp
les
imul
mov
stos
rorl
inc
insb
stc
xchg
insl
js
xchg
cmpl
mov
in
mov
rorb
xor
cmp
mov
jmp
mov
pop
out
cmp
lds
clc
mov
and
mov
daa
xchg
sarb
call
aad
mov
out
std
loopne
pop
in
inc
pop
insb
cmp
inc
cmp
popf
pop
addl
aam
notl
clc
in
push
dec
incl
xchg
test
adc
scas
sub
sti
insl
sahf
sbb
cld
andb
or
insl
cmpsb
js
jne
xlat
aas
sbb
dec
inc
jmp
inc
or
fdiv
push
sub
test
mov
xor
xchg
sarl
ret
jbe
inc
ja
enter
enter
push
cmc
ds
insb
pop
call
xchg
jecxz
bound
jae
roll
stos
push
inc
arpl
xor
jl
and
dec
push
add
shlb
hlt
rorl
imul
mov
les
ss
xchg
fists
ret
pushw
enter
xchg
cli
cld
test
cmc
cmp
fcoms
aad
testl
in
mov
dec
jge
outsl
sbb
loop
fnstsw
stc
rcr
sub
sbb
mov
jle
mov
cmp
int
xchg
pusha
dec
mov
fs
mov
mov
dec
outsb
xchg
xchg
cld
xchg
xor
cmc
inc
xlat
dec
sahf
push
lret
lcall
xchg
and
js
mov
mov
xor
push
add
je
adc
aas
push
test
jmp
imul
sub
cmp
pop
xchg
dec
addr16
mov
push
or
sub
fsubl
mov
bound
pop
mov
lds
in
mov
repz
imul
dec
int
pushf
xchg
inc
fsubl
ds
shrb
and
or
push
je
xor
stos
inc
cmp
notb
xor
sub
out
xor
push
test
inc
xchg
mov
iret
scas
int
mov
push
lahf
test
js
lods
mov
push
mov
pop
lods
push
in
mov
movsl
scas
scas
mov
and
add
mov
xchg
fs
out
dec
xchg
xlat
mov
movsl
push
pop
fsubrl
int
mov
inc
je
pop
sahf
lret
add
call
jo
cmc
or
outsl
aad
jns
or
es
mov
lods
xor
mov
addr16
subb
pop
sub
cmpsb
cli
inc
hlt
testb
mov
adc
fmull
dec
imul
je
and
sbb
outsb
outsl
scas
or
mov
and
rcrb
pop
ret
lret
test
jnp
jne
in
lahf
adc
lret
shll
xchg
mov
sbb
mov
loop
inc
adcl
inc
pusha
mov
lods
adc
mov
adc
mov
or
in
out
jae
test
stos
mov
jb
jle
scas
fsubl
les
jnp
fcmove
jp
fistps
xchg
jl
fwait
leave
iret
xchg
jg
in
cli
sbb
loope
idiv
push
adc
jecxz
add
popf
sahf
add
je
in
aas
pop
and
xchg
xlat
imul
add
cmpsb
mov
add
or
ss
sti
pop
iret
negb
add
push
mov
jns
push
arpl
int3
je
xor
fwait
pop
dec
arpl
lock
sarb
fistpl
ret
add
dec
adc
push
mov
nop
inc
inc
adc
rclb
rcr
or
adc
mov
dec
mov
xchg
mov
mov
or
cmp
ret
movsb
mov
jno
ss
repnz
inc
lahf
outsl
and
bound
adcw
enter
sbb
mov
vcvtss2si
jmp
jecxz
cmp
nop
les
fcmovbe
cmpsb
dec
dec
add
mov
in
cmp
sub
xchg
int3
out
push
adc
icebp
and
repnz
stc
jmp
rcrb
jg
int
xor
dec
mov
aam
push
push
repz
xchg
push
jbe
into
xor
add
jl
inc
imul
testl
out
add
dec
in
mov
jb
push
aaa
fcmovnbe
pop
xchg
subl
sbb
sub
fidivl
cmp
lods
sbb
xor
lret
jecxz
sbb
popf
sbb
divl
lahf
sub
jle
cmp
bound
ljmp
mov
fnsave
pusha
mov
fistl
cwtl
fiadds
jp
gs
fimull
insl
roll
pop
lret
popf
mov
or
aad
ljmp
xor
xchg
sahf
shlb
mov
inc
popf
neg
mov
inc
inc
jmp
ljmp
pop
push
adc
mov
pop
inc
inc
popf
daa
movsb
dec
fwait
sbb
cmp
cwtl
pop
ljmp
test
xor
pushf
or
stos
dec
lods
jne
mov
inc
imull
leave
loopne
jns
cmp
movl
rcr
sbb
ficoms
inc
cld
repz
jg
mov
adc
inc
jbe
cli
pusha
mov
dec
push
pop
lret
jns
xchg
cmp
inc
insl
sbb
ret
mov
sti
push
sub
sbb
es
icebp
push
rcl
std
fcomi
xchg
fwait
cmp
jecxz
fists
mov
leave
mov
mov
rcr
shlb
mov
fwait
jmp
jae
push
orl
or
inc
lret
xchg
push
in
loopne
mov
mov
ret
add
cmp
dec
popl
pusha
dec
add
sahf
push
xor
mov
fxch
jne
loop
mov
out
push
movsb
push
ljmp
es
sbb
scas
push
mov
mov
test
icebp
lcall
iret
test
xor
out
in
test
jmp
enter
or
ret
stos
sbb
es
or
stos
push
stos
pop
push
xlat
stc
jbe
in
push
out
movsb
scas
mov
imul
jb
das
les
dec
aas
push
ret
addr16
fstl
arpl
fxch
mov
push
dec
repz
sahf
xchg
int3
jne
repnz
jmp
jle
jo
jle
jns
gs
inc
es
movl
stos
push
jns
in
push
inc
mov
xchg
add
rolb
cmp
aaa
xor
ret
fstps
jecxz
pop
or
xchg
adc
test
cmovb
shl
add
loopne
mov
scas
dec
and
and
outsb
pop
inc
cltd
mov
cmp
cltd
mov
lods
imulb
insb
or
stos
out
lods
sbb
inc
inc
and
push
mov
add
mov
mov
mov
cwtl
scas
scas
aam
push
out
std
enter
push
hlt
mov
cmpsl
das
out
test
pop
xor
sub
imul
sub
xor
xor
cmp
add
lds
in
stos
add
jb
cmp
je
sbb
bound
clc
pop
repnz
shll
popf
pop
pop
add
xor
outsb
shl
sbb
mov
iret
out
add
pop
popa
test
pop
adc
add
or
mov
data16
lock
push
dec
arpl
repz
jo
pop
push
scas
popf
lcall
and
mov
sahf
adc
cmp
push
sub
cmp
pushf
dec
jp
dec
jbe
js
in
ljmp
or
into
lret
insb
adc
pusha
mov
add
shll
ljmp
cmp
pop
push
outsb
imull
pop
arpl
mov
shrl
stos
xchg
ds
jb
sbb
aam
dec
sub
jbe
fimuls
mov
arpl
cmp
icebp
outsl
mov
mov
in
mov
adc
cmpsl
jbe
lret
mov
adc
rolb
cwtl
pop
dec
cmp
pop
xor
aad
sbb
mov
mov
js
inc
cli
in
mov
leave
dec
ret
ret
mov
nop
call
sub
test
inc
jns
xor
jns
lods
pushf
pop
fadd
and
inc
push
or
xor
aam
int3
scas
imul
push
int
inc
sub
push
xor
cmp
das
outsl
or
push
cmpsl
arpl
inc
clc
fcomip
mov
loop
inc
es
mov
xchg
adc
xchg
mov
cmpl
pop
pop
jb
fs
cmp
mov
fsts
lcall
dec
dec
loop
sahf
cmp
repz
adc
push
xchg
daa
inc
adc
and
leave
out
pop
sbb
add
sub
xor
and
push
faddl
sbb
lcall
or
imul
data16
lock
sbb
sbb
inc
mov
aad
inc
mov
mov
bound
push
mov
andl
push
mov
cltd
mov
shll
lock
pop
jg
add
add
lahf
jo
push
lds
pop
add
xor
lret
test
lea
das
dec
repz
inc
clc
push
shll
pop
jnp
mov
xchg
fisubrl
xchg
adc
sbb
lret
notb
incb
fiadds
push
jl
sub
shll
mov
lret
or
cmp
push
jecxz
aad
xchg
xor
dec
insb
shlb
mov
in
mov
lock
insl
xchg
test
jb
fidivl
mov
int3
push
leave
popf
push
int
repz
movsl
cmpsl
lret
out
push
xlat
jmp
inc
xor
cmp
and
and
mov
cmp
add
jno
fnstenv
push
fadds
push
add
gs
mov
mov
push
inc
adc
sbb
dec
hlt
or
xor
add
sub
mov
loop
sub
or
or
lcall
sub
stos
fsub
xorb
ror
xchg
mov
inc
or
lret
cmp
sahf
jp
sub
mov
setne
add
push
arpl
cmp
jmp
dec
cmp
adc
divb
pop
inc
in
ss
xchg
jmp
jnp
pop
sub
shlb
mov
dec
add
xor
fidivrs
sti
xor
xorb
cld
cmc
xor
scas
adc
outsb
fcoml
adc
sbb
adc
ja
mulb
sub
mov
call
cmpsl
cwtl
push
imul
jg
or
inc
aad
into
lret
sub
in
test
xor
andb
ss
fldlg2
sub
js
xor
jns
jecxz
lock
push
mov
icebp
dec
sub
cmp
mov
mov
pop
addb
adc
xlat
mov
mov
out
movsl
xor
push
fadd
mov
xchg
jecxz
cltd
ffreep
and
stos
dec
imul
push
ss
push
out
popa
xor
and
inc
loopne
push
mov
mov
insl
pop
test
push
or
jmp
jg
cmc
jb
jns
xchg
mov
xchg
insb
cli
test
call
lds
bound
jge
cmp
scas
push
adc
pusha
mov
mov
lahf
pop
cwtl
jne
ljmp
stos
je
sbb
jl
mov
adc
lahf
aas
lock
daa
int
notb
mov
mov
repnz
cmc
mov
sbb
imul
pushf
xorb
je
arpl
pop
movsl
mov
dec
ljmp
js,pt
mov
adc
cwtl
movsb
cltd
in
fiaddl
jmp
cld
xchg
fwait
mov
xchg
pop
test
lahf
outsb
fwait
or
jecxz
icebp
shl
cmp
jb
rclb
sub
aam
ds
cmp
cmp
adc
jo
push
mov
pmulhw
sub
leave
or
xor
jmp
add
inc
lock
mov
movsl
push
and
outsb
in
inc
dec
scas
mov
lods
adc
out
popa
ret
sub
ljmp
mov
daa
jge
loope
adc
addr16
pop
lcall
and
and
cs
jne
inc
sub
or
sbb
bound
shlb
mov
sub
mov
sub
fs
xchg
sub
mov
sbb
cltd
icebp
adc
movsl
or
mov
pushf
push
pop
fisubl
divl
cmp
mov
in
push
push
outsl
rclb
test
shll
push
icebp
push
pop
aam
and
jne
in
pop
mov
pop
sbb
jo
sub
mov
jno
inc
mov
test
ja
cmpsl
push
out
arpl
xor
scas
push
icebp
call
lock
dec
mov
es
and
in
dec
adc
cmp
pop
bound
mov
in
and
dec
xchg
xlat
insb
cld
mov
lcall
xchg
pop
pop
out
ljmp
aad
mov
mov
aaa
or
push
mov
dec
imul
lods
mov
nop
repnz
cmpsb
dec
push
nop
adc
xchg
lea
in
fsts
cmp
push
and
pop
xchg
loopne
lret
cmpsl
jo
sbb
xchg
ds
cmp
es
inc
aaa
and
push
xchg
out
or
cmp
mov
lods
mov
pusha
ds
out
and
sub
shll
aam
push
inc
push
push
or
adc
mov
sbb
ss
sbb
pushf
outsb
andl
xlat
js
inc
aam
stos
cmp
xor
stos
outsl
and
pop
sub
fisubrl
mov
push
jns
mov
cmpb
xchg
xchg
xchg
cwtl
fbstp
lret
xchg
push
xchg
jnp
cwtl
mov
push
mov
jae
push
scas
push
fcoms
sub
stc
out
addr16
cmpsl
sbb
cs
out
rorb
mov
adc
pushl
adc
gs
mov
call
dec
imul
pop
mov
mov
xchg
sbb
test
mov
sub
inc
std
push
add
aad
push
xlat
and
inc
mov
cmp
popf
dec
push
lock
movsb
out
sub
rcrb
insb
cmp
sbb
push
icebp
mov
lods
xor
or
mov
dec
sub
inc
mov
pop
dec
sbb
pusha
inc
lahf
mov
mov
test
add
ret
loop
stos
jae
rolb
push
jno
mov
fsubl
pop
push
push
xchg
stos
dec
cmc
call
arpl
adc
lods
adc
out
pop
and
push
push
js
inc
inc
xchg
loopne
xor
test
pop
mulb
xor
push
sbb
insl
and
test
and
cld
int
mov
pop
fidivrs
mov
daa
xchg
cltd
jbe
xchg
test
imul
aas
ja
jae
xor
outsb
sub
xchg
decb
loope
sub
mov
mov
mov
push
and
pop
mov
push
push
xchg
dec
pop
jecxz
sub
cmp
out
sub
insl
or
sbb
stos
cs
pop
pop
mov
mov
mov
or
mov
dec
dec
iret
mov
mov
sbbb
push
test
jmp
inc
mov
adc
push
rcrl
xor
ficomps
xlat
push
loopne
mov
cmp
stos
jle
sub
dec
pop
stos
decb
rorb
mov
mov
mov
inc
push
add
stc
lcall
push
jns
cmp
addr16
filds
sub
fs
std
cli
jl
sti
jle
cmp
cmp
repz
jle
push
lods
test
std
inc
das
sahf
mov
lret
lret
pushw
dec
mov
aad
mov
add
sbb
pop
xor
pop
pop
sahf
sbb
and
in
xchg
mov
mov
out
inc
dec
adc
cmpsb
dec
xchg
rcll
jmp
imul
popa
lcall
les
inc
aam
push
in
in
popa
push
mov
stc
or
sbb
out
je
mov
scas
sti
lcall
dec
mov
adc
les
jnp
enter
xchg
rcrb
ret
and
lcall
je
test
fdivrl
rorl
aad
jb
xchg
pop
mov
clc
pop
inc
das
mov
sbb
xchg
loopne
mov
mov
jno
xchg
addr16
lods
jbe
cs
in
jmp
es
and
rorl
daa
cld
outsb
lds
push
add
mov
cs
push
or
lds
mov
inc
add
pop
fsubrl
bound
add
and
mov
inc
icebp
mov
out
cmp
push
lock
jo
xchg
xor
dec
aaa
mov
test
add
es
imul
or
test
mov
repz
int3
sub
jbe
test
adc
out
int3
pop
lods
sub
cmp
push
add
add
aas
xchg
jge
fs
leave
pop
outsb
fadds
mov
adc
daa
int
mov
push
inc
repnz
sbb
imull
push
loop
adc
or
dec
mov
and
test
ror
pusha
mov
push
mov
loopne
adc
mov
ds
fwait
popa
ret
inc
je
dec
jns
pop
popa
mov
xchg
xchg
sub
gs
dec
outsb
xor
call
sub
lcall
mov
jns
xchg
fxrstor
rolb
xchg
out
add
out
adc
imul
xlat
ja
insb
fcomps
mov
xchg
jmp
jno
mov
or
popf
cs
mov
jb
xor
lcall
sub
movsl
xorb
imul
mov
cmpsl
and
adc
jb
mov
mov
mov
push
imul
jb
inc
std
ja
pop
mov
xchg
addl
leave
xchg
mov
adc
loopne
xchg
and
mov
jb
cli
jg
jle
cmp
add
push
arpl
in
inc
stos
cmp
les
jb
push
dec
sahf
jnp
fwait
out
test
jle
test
mov
mov
enter
xchg
mov
or
fwait
sub
dec
fcoms
insb
out
mov
mov
pop
xor
xchg
call
fwait
test
mov
or
pop
push
sbb
jge
mov
test
stos
and
mov
nop
mov
pop
lock
in
lcall
dec
mov
sarb
mov
and
pop
clc
push
push
add
sub
lahf
outsb
mov
and
jg
movsb
cmp
hlt
das
adc
sahf
ljmp
test
lret
sbb
loop
sub
or
dec
je
add
and
iret
mov
mov
aam
xchg
push
adc
dec
ret
insb
mov
fwait
stos
xchg
xor
pop
testl
xchg
fildll
mov
xor
mov
add
or
fcmove
sbb
arpl
pop
adc
xor
adc
in
adc
iret
cld
out
out
push
or
call
test
dec
pop
add
enter
push
popa
testb
add
jae
push
xorl
add
and
inc
sbb
je
clc
sahf
fiadds
push
adc
pusha
mov
add
push
adc
int
sub
jg
pop
sarb
push
les
loope
subl
jae
jecxz
insl
std
sub
fmulp
jno
and
add
in
pop
addb
shlb
or
pop
adc
pop
rcll
xchg
inc
add
mov
cmp
cmp
sbb
mov
or
mov
xchg
in
push
mov
pop
push
xchg
enter
mov
cld
mov
stos
inc
mov
mov
adc
dec
mov
xlat
cwtl
inc
fmulp
pushf
adc
fdivrl
bound
or
out
orb
rcr
cmpsb
push
aad
repz
roll
addr16
pop
lock
pop
jae
cmp
fidivs
dec
mov
sbb
jecxz
pop
scas
xchg
dec
lret
in
jb
mov
xor
int3
cmp
int3
push
xor
lea
and
pop
inc
out
sub
mov
inc
xor
mulb
rcrb
cmp
jmp
lods
das
and
in
push
int3
xchg
pop
jnp
cltd
lock
fisubrl
ret
dec
inc
seto
inc
out
addr16
xor
push
sbb
ds
lods
sbb
sahf
cmp
fsts
rcrl
sbb
test
add
mov
xchg
inc
icebp
jecxz
mov
pop
scas
std
jecxz
lea
sub
loopne
jbe
push
hlt
pop
mov
push
jge
jmp
loope
enter
cwtl
inc
pop
rolb
flds
test
and
push
out
rcr
dec
add
mov
xchg
sbb
call
mov
pushl
inc
mov
add
adc
ret
jg
sbb
dec
sarl
outsl
adc
xchg
dec
mov
dec
jg
mov
lret
and
and
and
xchg
push
imul
rorb
addr16
push
sarb
mov
push
lds
cmpsl
cmpsb
inc
std
sub
pop
push
push
push
test
mov
aas
stos
es
and
mov
mov
pop
jg
xlat
shlb
stos
imul
repz
and
cmpsb
inc
xor
pop
sbb
jbe
cmp
insb
or
xor
call
lret
xchg
pop
cmpsl
lods
adc
fcmovnb
aaa
insb
hlt
fdivrs
inc
ret
clc
jp
pop
mov
ret
pop
pop
fcompl
xor
pop
shlb
mov
jae
inc
lods
cwtl
mov
addr16
adc
loop
jmp
in
sub
and
inc
stos
hlt
adc
int3
in
cmp
or
sbb
jns
add
sbb
dec
fwait
add
mov
xchg
add
js
es
inc
lcall
jbe
xor
lahf
xor
imul
sub
xchg
pop
divl
leave
inc
mov
cmpsl
loop
sbb
xor
jnp
addr16
pusha
xchg
cmovp
jo
cwtl
in
add
push
loope
js
mov
dec
loop
data16
and
sub
dec
jmp
add
in
ret
lods
scas
mov
dec
fcmovb
test
lahf
inc
stos
and
mov
sub
outsl
xchg
mov
mov
int3
sub
mov
mov
shll
repz
and
lds
xchg
pcmpeqd
cli
sub
test
data16
rolb
stos
xor
icebp
jne
adc
sti
cmp
jb
incl
and
ds
mov
inc
push
lea
popa
ja
sbb
adc
out
pusha
icebp
ss
and
cmp
or
addl
mov
xchg
add
mov
adc
in
push
scas
inc
or
ljmp
gs
xor
lods
std
jmp
movsl
fcomps
movb
cwtl
add
sbb
push
xchg
sub
fldcw
mov
jp
insl
fisubrs
dec
pushf
iret
lcall
sar
mov
lds
andb
mov
inc
fldcw
pop
nopl
lret
shlb
cmp
call
stos
xor
push
push
inc
push
push
or
mov
xchg
nop
adc
test
cmpsb
cmpsb
xchg
fs
testl
mov
jns
cli
sbb
add
repnz
pop
repz
addr16
int
icebp
push
mov
unpcklps
pop
cli
rolb
ficoml
and
shr
or
push
das
aam
mov
adc
xchg
lret
cmp
loop
and
dec
mov
in
popa
cli
repz
push
mov
test
in
shlb
adc
sub
and
cmp
jmp
xchg
dec
fdivs
add
jbe
bound
imul
xor
fcoms
add
jecxz
hlt
sub
jns
sbb
xor
imul
xchg
aas
pop
jp
jge
adc
adc
cmp
inc
cmp
cltd
iret
cwtl
in
mov
dec
rcll
pop
sub
push
jge
push
dec
jbe
dec
daa
jno
xor
xchg
adc
stc
andb
jmp
sub
push
sti
ljmp
je
movsl
loopne
sbb
shl
inc
xchg
xchg
mov
icebp
sub
jae
ss
or
ljmp
ret
iret
or
xor
sahf
daa
jae
call
enter
xchg
push
out
xor
xor
mov
adc
mov
pop
dec
add
movsb
jns
push
into
sbb
test
jg
or
push
jo
sub
mov
mov
in
out
lods
or
dec
outsl
in
add
jg
mul
sub
sarl
inc
mov
cmpsb
xchg
xchg
rcll
rorb
sub
data16
andl
sbb
xor
and
pop
ljmp
out
push
sbb
mov
fs
adc
out
aad
inc
cmc
mov
mov
lahf
iret
jo
aad
imul
mov
or
or
or
das
es
test
lods
inc
shrb
push
mov
in
pop
out
les
jmp
orl
mov
add
push
pop
add
mov
adc
into
or
or
xchg
mov
cmpsl
ror
mov
test
jmp
dec
mov
xchg
and
dec
inc
cld
push
test
ret
call
imul
cmp
mov
mov
insl
sbb
xchg
dec
sub
mov
adc
incb
jns
sbbb
cld
sbbb
ljmp
pop
inc
or
test
sub
scas
inc
out
stos
lds
jne
fdivl
cmpsl
scas
cmp
jae
mov
jne
push
pop
jae
lods
rep
sub
jne
xor
in
mov
mov
or
push
jae
push
repnz
push
aaa
lods
and
inc
push
push
arpl
leave
mov
pop
rcrb
test
jmp
cmp
push
roll
cmc
sbb
bound
xchg
mov
pop
mov
cmc
add
push
aas
iret
fisttps
jae
arpl
test
or
dec
orb
call
sti
cld
mov
rorb
sub
sub
test
jg
ficompl
ljmp
pop
les
int3
loope
mov
bound
xchg
mov
mov
adc
das
mov
mov
nop
push
test
push
in
pushf
and
cmp
les
or
push
add
cmp
jmp
cltd
lods
call
aaa
aad
imul
mov
into
jl
lods
stos
dec
shrb
mov
fisubrs
orl
add
fldt
jnp
push
icebp
sub
adc
xor
sbb
inc
lods
mov
add
fldcw
stos
add
push
mov
dec
addb
sbb
setae
and
sbb
push
int3
mov
push
flds
mov
stos
call
scas
loope
push
cld
cmp
dec
in
jge
pop
inc
add
sub
popf
mov
jl
sub
icebp
pop
or
stos
cmp
out
out
das
and
jmp
jmp
inc
ds
lret
push
mov
fsub
push
in
jnp
notb
iret
leave
sbb
add
sbb
cli
push
sub
enter
iret
pop
lret
popa
or
lods
or
cmp
ret
xchg
sbb
sub
cmp
dec
push
roll
sub
mov
add
in
arpl
maxps
dec
pusha
and
test
push
inc
mov
push
enter
pop
leave
insl
iret
push
adc
mov
xlat
sub
mov
and
mov
xor
inc
jne
jo
push
add
push
or
inc
js
insb
repz
sbbl
repnz
sub
aas
mov
pop
dec
sbb
mov
adc
adc
scas
loop
pushl
imul
jne
push
and
data16
inc
lahf
lods
adc
cmp
push
jb
add
pusha
pop
repz
add
sub
mov
std
negb
fs
jg
xchg
mov
hlt
pop
ss
xchg
pop
or
out
xchg
sub
repz
lea
lret
roll
loop
ds
sub
bound
sar
jle
or
stos
mov
lret
push
in
inc
push
xor
call
jb
dec
mov
xor
and
cltd
and
sbb
cld
lods
jl
push
mov
sub
pop
mov
xchg
mov
and
in
push
sti
jp
ficoml
test
mov
and
pop
inc
push
xchg
fidivl
and
movsb
push
pop
jl
xchg
les
jne
ficomps
sbb
jge
sub
cltd
loopne
lcall
push
or
push
push
arpl
hlt
cwtl
dec
inc
dec
xor
push
jecxz
dec
xchg
jmp
mov
pop
insb
and
jo
mov
xchg
xor
adc
pop
dec
and
ljmp
xor
inc
pop
outsb
push
icebp
and
mov
xchg
push
and
dec
sbb
dec
bound
inc
pop
inc
movsl
in
clc
outsl
std
xchg
scas
mov
mov
test
int
mov
sbb
dec
stos
call
movsb
in
mov
mov
aas
fisubs
filds
out
xor
push
mulb
xchg
sub
sbb
cmp
mov
sahf
in
out
push
push
dec
mov
dec
and
mov
xchg
jge
mov
je
mov
lcall
popf
arpl
mov
lret
adc
adc
pushf
xchg
push
xor
dec
push
inc
adc
mull
into
jno
fistps
in
xchg
insb
and
add
fnstsw
test
jge
xor
ffree
xchg
jno
xor
icebp
ja
and
fdivrs
insl
or
ret
pop
pushf
scas
push
pop
lahf
das
data16
rol
in
lret
mov
subb
call
aam
jmp
and
fmul
dec
aas
jb
lahf
add
jl
mov
cmpl
not
and
ds
dec
aaa
push
mov
std
stc
mov
jo
mov
js
nop
pushf
aas
push
fs
mov
dec
dec
testl
shll
ret
add
inc
jb
loop
pop
inc
ss
push
mov
jp
add
int
jle
insb
sbb
jbe
sub
mov
cli
cmpsl
mov
or
pinsrw
test
jg
sbb
jbe
add
dec
jle
mov
aam
xchg
aad
mov
add
push
ds
ja
cmpsb
arpl
divb
rclb
int
mov
dec
push
or
adc
adc
shrb
dec
jo
mov
push
dec
aas
sti
insl
and
add
lods
in
add
pop
xchg
pushf
sbb
les
hlt
jne
icebp
ljmp
sahf
negl
and
ja
dec
jae
mov
pop
dec
imul
js
xchg
stos
xchg
mov
loope
mov
xchg
js
jnp
jecxz
dec
lea
std
mov
push
jmp
rorl
lods
pop
inc
jnp
sti
fcom
cmp
mov
mov
insl
popa
sar
jle
inc
pop
mov
mov
mov
xor
xchg
mov
inc
ficoms
lods
mov
cmp
jg
and
push
add
jo
mov
or
xor
mov
mov
pop
jne
sbb
or
sub
add
ret
mov
cmpb
xor
fdivrs
xchg
andl
addb
imul
pop
jns
xchg
dec
fadds
lret
les
ret
clc
mov
push
loop
stc
dec
mov
hlt
sub
ja
and
and
out
and
cwtl
xchg
xchg
idivl
and
add
cmc
clc
cmpl
cs
ss
dec
jbe
xchg
movsb
mov
pop
jmp
test
add
sarb
or
ljmp
and
addl
jle
cmp
and
mov
or
mov
mov
rcrb
arpl
pushf
add
adc
push
outsl
out
pop
movsb
cmp
add
and
fidivrl
arpl
cld
pop
sahf
repz
jge
scas
jl
nop
xor
aaa
inc
iret
daa
in
data16
insb
rclb
cmpb
jne
out
and
fimull
pushf
lea
lret
fiadds
pop
push
out
push
loope
popf
ds
jo
inc
xor
ret
push
mov
fcmovnbe
jns
fcompl
nop
jae
jp
lcall
pop
movb
fisubrl
ret
cmp
ss
ficoms
inc
and
and
xorl
or
dec
test
into
mov
sub
sbb
inc
xchg
cli
push
ss
rcrb
mov
popa
in
jge
pop
shlb
icebp
stos
lock
cmp
pop
mov
and
dec
inc
fisttpl
jne
mov
ljmp
call
adc
pop
aad
scas
icebp
dec
xchg
cmc
cwtl
daa
fs
fcmovu
add
mov
lds
mov
xor
mov
pop
push
les
ficoms
shlb
inc
lret
stos
push
pop
pushf
nop
and
push
aam
in
stc
xor
gs
and
adc
cmc
xchg
addr16
addr16
in
fnsave
push
jecxz
in
outsl
jne
loop
dec
lods
filds
frstor
rolb
mov
xchg
dec
mov
inc
sbb
addr16
sbb
push
push
mov
inc
int3
out
cld
lcall
push
test
lods
lock
aad
fninit
ljmp
insb
pop
loop
mov
dec
in
loopne
fld
jmp
test
dec
dec
movsl
repnz
arpl
sbb
out
sbb
and
int3
dec
sbb
xchg
cmp
sahf
imul
or
cmp
ja
mov
pop
lret
adc
cmp
adc
jbe
sbb
iret
inc
out
sub
mov
pop
aaa
mov
adcl
inc
mov
cs
push
rol
dec
jae
add
lods
add
nop
mov
sbb
test
fstps
mov
jne
inc
or
mov
adc
in
sarb
mov
push
fsubp
cmpsb
mov
inc
or
inc
sbb
daa
lods
jnp
adc
fdivrs
pop
xor
lahf
jmp
lcall
push
push
jge
cmpsb
xor
cmp
and
push
xchg
push
test
jae
push
dec
add
mov
in
fwait
or
sbb
enter
push
lods
aaa
dec
jae
pop
pop
xchg
clc
cltd
mov
xchg
sub
mov
adc
jne
mov
xchg
adcl
test
mov
or
or
sub
pop
xor
push
insl
repz
lods
imul
fsubl
mov
push
sub
mov
adc
dec
and
push
repz
adc
sbb
pop
pop
jge
dec
leave
popf
jp
mov
fs
leave
push
or
dec
ja
dec
fwait
sbb
sbb
jb
aas
xor
jmp
fwait
popa
xor
sarb
push
dec
jbe
push
xor
int
mov
ljmp
lods
mov
mov
out
out
out
les
nop
xchg
nop
ret
arpl
xchg
pop
nop
aam
leave
sub
pusha
mov
xor
movsb
aam
mov
mov
mov
ljmp
mov
lods
adc
sbb
jnp
or
es
push
mov
outsl
xor
push
pushf
sub
imulb
lret
xchg
stos
sbb
dec
insl
ror
outsl
push
popf
inc
stc
xchg
repz
cmpsl
f2xm1
fisubl
out
movsb
outsl
sbb
sub
mov
cmp
dec
push
jg
fistpll
shl
daa
rcrl
push
xorl
push
ljmp
cmp
push
cmovl
into
loopne
jg
lock
and
xchg
inc
repnz
adc
ljmp
pop
shrl
push
stc
cmp
jmp
xchg
sbb
mov
xor
xlat
or
mov
dec
dec
mov
adc
aad
leave
in
lods
and
adc
repnz
scas
adc
inc
stc
stc
and
neg
cmp
xchg
dec
pop
inc
incb
aaa
stos
add
dec
fwait
cmpsl
outsl
push
adc
jae
push
dec
xlat
test
xchg
adc
cmp
std
aad
jg
popf
das
push
sub
sbb
and
push
in
jp
inc
cmp
jmp
cmp
aas
jge
mov
and
hlt
inc
mov
test
xchg
lret
test
jno
in
fwait
js
jb
pop
ja
add
loopne
cmp
mov
push
or
imul
nop
cld
movl
pusha
test
pop
addr16
cmp
cmp
stc
test
iret
or
testl
sbb
jno
mov
clc
mov
mov
cmp
sbb
cltd
int3
xchg
pop
jg
sbb
repz
das
dec
mov
sbb
mov
mov
test
adc
mov
cmp
dec
daa
or
pop
mov
mov
sahf
fidivrl
fistpl
cwtl
arpl
leave
icebp
push
push
inc
outsl
jp
repnz
nop
adc
fwait
movsb
imulb
repz
mov
jae
ds
or
je
push
sub
leave
mov
outsb
iret
jbe
fs
push
pusha
dec
xor
sub
es
mov
pop
push
movsl
test
imul
push
imul
fs
fs
add
xor
mov
pop
clc
push
add
gs
jecxz
push
dec
push
mov
sbb
mov
inc
fldcw
inc
sahf
dec
loopne
mov
cmp
test
dec
lock
leave
movsl
daa
aam
lock
push
cli
adc
dec
insl
mov
inc
test
push
jne
inc
dec
cmp
add
testb
mov
arpl
hlt
sub
stc
push
jl
fxch
into
stos
add
fldl
or
push
test
int3
jb
sahf
ret
sub
or
out
in
lods
mov
into
hlt
dec
sahf
std
cmp
and
fimuls
mov
fs
xchg
pushf
lret
lds
outsl
cmp
or
test
or
cmp
mov
popl
sbbb
sub
add
aam
ss
lds
adc
inc
shl
mov
sbb
adc
mov
cli
sbb
out
add
lock
push
inc
fcmove
inc
inc
lret
xor
dec
dec
pop
jmp
jecxz
out
sub
nop
mov
stc
pop
pop
test
dec
lahf
xor
fimuls
jle
imulb
es
stos
shl
lret
lea
adc
cltd
pop
xchg
fldt
cld
jl
xchg
and
shrl
mov
inc
clc
lods
dec
fldl
bound
shlb
or
push
roll
xor
pushf
mov
sahf
adc
movb
mov
cmp
add
insl
sbb
in
mov
pop
adc
leave
and
mov
sbb
mov
imul
lea
arpl
jmp
jg
xchg
jge
adc
jge
scas
setg
dec
ror
dec
push
or
imul
ja
xchg
insb
pop
cli
mov
mov
aaa
les
or
and
add
das
push
fisubrl
push
pop
mov
dec
jns
mov
movsb
cltd
jl
sahf
pop
cmpsb
mulb
dec
and
mov
fmul
jp
lock
shrb
daa
mov
lcall
fdivl
lcall
int
jmp
mov
mov
hlt
stos
lock
pop
xchg
push
stos
test
dec
in
inc
loope
lock
xor
scas
jb
cltd
inc
outsb
pop
pop
ljmp
lods
imul
mov
xchg
enter
loop
popf
push
pop
das
add
mov
dec
mov
sub
xor
pop
gs
sub
repz
bnd
mov
int
testl
setbe
mov
xor
mov
xchg
push
add
andb
shrb
mov
add
dec
sub
xor
pop
sub
sbb
jecxz
aad
mov
and
xchg
sbb
scas
iret
push
push
inc
js
add
jno
js
inc
jbe
sahf
ficoms
call
push
jb
sub
jmp
pop
stc
loopne
js
sahf
or
mov
push
arpl
pop
lcall
and
and
cmp
mov
jae
stos
cltd
or
pop
xchg
mov
mov
or
mov
inc
int
loop
mov
inc
js
pop
lahf
inc
lcall
push
scas
fsubl
testl
and
in
ljmp
cmc
xor
lcall
sub
fmul
cmp
shlb
adc
pop
gs
outsb
aad
jle
addr16
lock
mov
lock
mov
and
xor
shll
pop
jnp
fnsave
inc
xor
and
int
div
test
mov
jle
lods
scas
es
lret
out
sub
ss
scas
jg
xor
test
xor
or
ljmp
mov
cmp
lods
dec
cmp
cmp
daa
mov
push
cmp
sub
push
arpl
pushf
xchg
out
shll
jnp
cmp
popf
jns
mov
sbb
sbbl
ljmp
mov
mov
inc
cmp
sub
test
add
push
inc
mov
mov
jl
bound
pop
pop
cmpsl
cmp
cs
mov
lahf
fs
fsts
xor
shll
cmc
aas
ljmp
xchg
lods
xor
jbe
testl
out
push
into
dec
dec
sbb
cld
push
mov
fistps
pushf
adc
push
rolb
scas
outsl
sahf
clc
pop
arpl
subl
jg
stos
dec
adc
fwait
xchg
and
popa
mov
fldenv
sub
lret
cwtl
jbe
loop
adc
or
iret
and
xchg
loopne
push
jmp
fidivs
or
cmp
hlt
sarl
xchg
stos
sbb
push
or
aad
nop
and
gs
pop
push
test
jno
pop
or
rorb
lret
mov
insl
das
repnz
pop
jle
or
jno
push
mov
gs
cltd
icebp
test
sbb
mov
mov
clc
sbb
loopne
into
cmp
and
mov
mov
mov
push
sahf
push
shl
and
addr16
iret
stos
icebp
adc
cmp
push
add
mov
mov
lods
xor
enter
pushf
add
jle
sti
mov
jge
mov
add
sub
fidivs
mov
mov
and
jp
pop
shll
aam
push
mov
out
call
lea
enter
mov
rorl
les
pop
push
loopne
ja
and
mov
push
notb
outsb
mov
rcl
aam
pop
push
lahf
push
dec
mov
sub
loope
mov
inc
icebp
fdivs
in
xchg
pop
jo
xlat
nop
mov
lahf
stc
mov
xlat
call
or
push
lret
jge
icebp
sub
adc
cs
or
dec
sbb
adcl
pop
or
jo
or
sahf
into
xchg
jecxz
inc
xor
in
out
inc
neg
push
shll
bound
cmc
cmp
xchg
jns
fwait
jmp
cmp
xlat
add
andb
or
stos
jmp
add
adc
jmp
inc
add
mov
mov
std
xchg
add
je
rcll
and
pop
mov
jb
clc
mov
addps
mov
imul
inc
adc
add
sbb
cld
dec
sub
out
mov
mov
mov
mov
out
cmp
mov
dec
xchg
xor
mov
inc
push
leave
adc
sub
fidivs
int
xchg
testl
or
mov
mov
sub
aas
nop
mov
mov
inc
push
cmp
pop
imul
push
fadd
cmp
pushf
loopne,pt
dec
inc
dec
scas
pushf
lds
fwait
fadds
or
jns
xchg
xor
jno
cmp
mov
test
xor
das
lahf
fldlg2
gs
fists
outsl
stc
pusha
int
popa
mov
in
xchg
pop
pushf
jae
push
ror
aam
aas
lret
mov
fnstcw
sbb
mov
xchg
jg
daa
lods
inc
mov
repnz
pop
repz
popa
xor
lcall
pop
sti
js
data16
mov
nop
mov
pop
jno
cli
pop
dec
dec
sbb
pop
adc
lods
push
sbb
ficomps
addr16
mov
inc
jge
popf
pop
nop
jmp
dec
in
mov
push
push
shlb
jno
lock
out
mov
jb
mov
add
aad
pop
jecxz
ss
xchg
imul
mov
xchg
xchg
cmp
add
lock
sub
sar
push
frstor
shlb
adc
mov
add
or
jmp
movsl
test
mov
lds
rolb
pop
jge
and
ja
jo
cld
cs
gs
pop
cs
jo
jp
je
cmp
in
adc
sahf
enter
movsb
sbb
pop
popa
mov
nop
cmp
mov
loopne
stc
xchg
movups
adc
sarb
lods
sub
and
arpl
inc
push
jno
xor
cmp
inc
daa
dec
adc
cmp
sbb
cmpsl
mov
jge
sti
cmp
das
enter
and
push
cld
or
test
push
mov
pop
cs
lods
divb
xor
outsl
or
jae
in
repnz
mov
sub
jmp
idiv
outsl
aaa
mov
mov
fsts
pop
testb
push
pop
pop
shrb
sub
loop
cltd
inc
mov
mov
xor
xchg
pop
ret
outsb
sbb
shlb
gs
hlt
fmul
dec
cmpsl
repz
fcmovnb
insb
inc
pop
gs
pusha
sahf
enter
ss
shlb
gs
and
mov
pop
push
int3
gs
push
test
xchg
fstps
mov
jne
push
mov
fadds
fs
je
out
call
mov
sti
push
mov
sbb
fists
loopne
cmp
xlat
mov
sti
icebp
hlt
bound
push
ret
ljmp
aam
jle
lock
loop
jle
scas
loop
js
dec
cmpsb
xchg
rcl
mov
sbb
mov
inc
jp
fiaddl
pop
xchg
imul
mov
and
add
sbb
cs
mov
xchg
inc
imul
inc
insb
jge
dec
pop
lods
mov
adc
pop
jo
inc
xchg
inc
add
ret
pop
mov
ret
pop
mov
jp
xchg
ret
les
jmp
cwtl
cmp
icebp
pop
rcr
xchg
je
mov
pop
cmc
jge
stos
push
fs
push
movsl
cmp
mov
or
fwait
into
mov
out
mov
std
movsb
lods
xchg
ret
popa
adc
scas
adc
stos
cmp
je
iret
add
mov
adc
rcrb
insb
or
mov
pop
pop
fs
pop
mov
cmpsl
mov
fldl
out
push
ret
cmp
ja
mov
jbe
daa
nop
jns
xor
mov
pop
fwait
mov
cmp
dec
push
or
lds
lret
clc
insl
repnz
in
negl
movsb
mov
rcr
out
xchg
lock
aad
movsl
inc
hlt
mov
jmp
out
mov
rcrb
jnp
mov
push
mov
jmp
mov
movsl
add
sbb
jge
das
and
xchg
cmc
inc
and
ja
jp
inc
stc
push
xchg
xchg
mov
mov
out
add
push
pop
sub
adc
sbb
jg
adc
cli
dec
mov
clc
fldl
push
loop
jge
adc
xor
cs
mov
notl
mov
fnstsw
push
push
sbb
mov
xchg
movsb
xor
inc
mov
mov
lock
sbb
inc
aam
inc
xor
fisubl
stos
rorl
clc
push
adc
mov
adc
aas
sbb
out
pop
fsub
mov
xchg
ds
test
fsts
fwait
int
adc
push
cltd
mov
push
sub
jae
pop
out
in
pop
push
xchg
mov
and
or
clc
popa
dec
adc
lret
pop
mov
js
xchg
out
test
and
cmp
popf
test
repz
cmp
inc
push
in
minps
into
mov
mov
out
or
lcall
cmp
jmp
test
cmp
retw
push
stc
es
jae
sbb
and
adc
dec
push
ret
mov
and
jns
sahf
push
incl
jmp
insb
popa
aaa
mov
sbb
pushl
loopne
mov
sti
jbe
scas
mov
pop
aaa
mov
repnz
out
mov
movb
aaa
sbb
nop
dec
jnp,pn
mov
adc
mov
jne
mov
scas
jb
daa
mov
and
outsb
stos
pop
and
jns
adc
mov
gs
adc
mov
aam
push
fnstsw
call
jbe
cld
add
es
mov
cmp
test
dec
repz
mov
mov
mov
xchg
cmp
add
xchg
out
aam
loopne
push
dec
aas
add
inc
div
sahf
push
push
out
lahf
shlb
ds
inc
xor
call
in
jns
and
xor
rcrb
repz
pusha
je
inc
ret
ljmp
rolb
jae
jg
dec
insb
sub
movsb
or
cmp
daa
ljmp
push
push
out
mov
inc
ljmp
sub
addr16
jne
inc
dec
mov
xchg
add
or
test
lds
aas
scas
test
or
out
xor
mov
push
cmc
add
xchg
cmp
sarb
dec
pusha
in
test
filds
fstps
jg
push
clc
mov
sbb
icebp
push
and
repz
jle
imul
scas
das
test
adc
outsl
cmp
vroundps
out
lcall
pop
cmp
movsb
mov
dec
mov
stos
test
and
gs
push
aad
sbb
aam
push
pusha
ljmp
imul
into
mov
test
xchg
add
clc
xchg
mov
sbb
dec
enter
sub
pop
js
cs
cmpsb
lcall
stos
cmp
call
ret
fisubrs
sub
dec
add
rol
jnp,pn
cs
add
xchg
movsl
imul
lret
mov
add
negb
popf
add
data16
sti
xchg
push
mov
std
xchg
sbb
nop
pop
and
cmpsb
dec
movsl
xor
fwait
out
rorb
push
mov
into
mov
mov
xor
mov
and
push
stc
test
pop
jae
cmp
call
sub
gs
sub
outsl
aam
dec
adc
in
mov
bound
jle
push
pushl
insl
enter
sbb
or
repz
aam
in
pop
mov
imul
pushf
in
add
and
sub
mov
or
loop
cmpsb
lea
rcrl
aas
rcrb
daa
xchg
shlb
jb
push
sub
mov
cmpsb
mov
xor
fwait
mov
xchg
stos
flds
jmp
jbe
aas
lahf
jp
bound
in
or
ljmp
and
cld
add
fcomps
push
loope
sbb
mov
mov
xchg
push
sbb
ja
pop
stos
sub
adc
insl
sbb
mov
or
or
mov
mov
ds
cwtl
cmpxchg
dec
sahf
inc
stos
pop
punpckhbw
mov
pop
nop
and
push
mov
insb
data16
sbbl
mov
pushf
mov
inc
fdivs
sbb
sub
pop
push
ljmp
push
mov
outsl
mov
pop
fdiv
jle
in
sbb
mov
cmp
loope
mov
add
loope
jns
push
mov
fmul
rorl
ja
and
repz
sub
jno
jmp
insl
xchg
imul
lods
aas
xchg
jmp
arpl
cmpsb
mov
pop
outsl
add
pushf
cld
dec
iret
cmp
in
xor
jnp
jecxz
push
lret
outsl
and
xchg
sar
sub
lahf
cmp
or
sbb
mov
jno
pop
std
xchg
aas
pop
pusha
xor
bound
stos
imul
and
roll
notb
popf
loopne
fstpl
lds
xor
cmpsb
jne
aaa
adc
push
sbb
ret
inc
push
lcall
pop
cmp
or
shl
jb
sarl
xchg
icebp
jge
jecxz
xlat
jne
xchg
dec
mov
dec
and
xchg
pop
jle
ss
dec
sarl
cmpsl
cmpsb
lcall
fnstsw
cwtl
ljmp
adc
mov
faddl
jg
ror
mov
mov
jae
adc
mov
xor
mov
scas
jecxz
mov
and
mov
iret
dec
test
lock
xchg
pop
and
cmpsb
das
push
or
jb
bound
in
xchg
lret
pop
ljmp
push
inc
mov
popl
popa
decl
jno
inc
cmpsb
arpl
dec
in
stos
mov
xchg
or
ljmp
mov
or
icebp
mov
sbb
nop
xchg
dec
js
xor
xor
fwait
and
mulb
push
mov
or
adcb
pop
inc
test
fldenv
adc
outsb
lahf
pusha
jo
les
push
in
cmc
sahf
mov
push
jnp
adc
jb
shl
push
pop
lcall
xor
pop
stc
sbb
and
xchg
mov
enter
outsl
mov
jmp
jle
xor
ror
out
mov
insb
lret
test
or
push
mov
adc
dec
sbb
popa
sbb
and
je
lret
call
and
cmp
test
loope
repnz
sbb
hlt
dec
in
scas
xchg
pushf
xchg
ret
and
pop
mov
pusha
pop
add
add
lock
or
addb
sbb
push
je
cs
shlb
sti
dec
in
xchg
fdiv
adc
loope
out
sahf
xor
pushf
jno
mov
xor
loopne
ret
sub
in
sub
jl
int3
lahf
fld
daa
add
arpl
and
add
out
xchg
push
push
add
xor
insb
fisttpll
push
inc
dec
inc
xor
and
mov
xchg
fwait
xchg
jg
jb
stos
add
xor
mov
mov
sti
mov
mov
out
call
jae,pn
outsb
fidivrs
loope
fldt
fisttps
push
adc
push
jg
inc
adc
or
and
inc
fwait
sbb
push
pushf
out
icebp
xor
or
mov
xor
inc
fs
xor
es
push
int3
push
fimull
xchg
push
inc
arpl
sub
sti
ret
imul
dec
clc
and
mov
adc
cmc
daa
push
jmp
cmc
push
mov
arpl
jp
cmp
and
jp
sub
lds
stos
push
rcl
push
ret
fsubrp
adc
stos
pop
lods
lcall
and
negl
and
push
inc
mov
fidivl
pop
leave
scas
mov
fdivl
dec
mov
sbb
dec
lret
jne
or
cmpsb
adc
pop
push
rcr
pop
repz
aaa
push
push
cld
stos
sarl
cld
out
jge
pusha
push
fwait
jmp
ss
movsb
jge
jns
xor
xchg
add
cmpsw
int
sarl
mul
jb
xor
cld
rcr
jo
pop
iret
das
mov
test
push
mov
outsb
jnp
cmp
cmp
ljmp
sub
add
loop
mov
out
adc
pop
pop
insl
cmp
push
shl
cs
mov
lods
jae
xor
je
mov
mov
mov
pop
mov
sbb
push
sub
test
dec
ficompl
lea
ja
pop
addr16
cmp
imul
je
sub
dec
dec
notb
int
iret
sbb
jb
fstl
mov
jbe
xchg
out
pushf
cmc
in
std
stc
sbb
xchg
sub
pusha
xor
or
sub
out
enter
movsb
dec
inc
sub
fisttpl
stos
out
pop
add
jg
xchg
xor
jnp
ficomps
aam
or
shll
adc
mov
pop
arpl
ja
stos
test
in
or
push
jmp
mov
dec
or
mov
shll
mov
adcb
xorl
call
xchg
jmp
xorl
leave
sbb
pop
cld
push
test
decb
push
fistl
repnz
shll
sub
or
mov
jbe
push
imul
mov
mov
repnz
outsl
cmp
xchg
mov
sti
add
stc
and
pop
mov
pop
inc
adc
stc
ja
lock
int3
jp
or
iret
jg
pop
pop
sbb
adc
in
lock
push
imulb
sub
fisttpl
adc
add
add
pop
nop
mov
xor
mov
rcr
jo
push
data16
bound
arpl
or
adc
xchg
popf
cvtps2pd
icebp
fnstsw
movsl
jecxz
dec
jno
pop
mov
call
popf
fistps
mov
xlat
inc
adc
jmp
sub
and
push
ficoms
mov
mov
fbstp
rol
lods
adc
sub
mov
aaa
xchg
dec
ret
dec
icebp
bound
in
xchg
pop
popa
or
cmp
xchg
test
adc
stc
scas
mov
sti
sbb
lods
or
outsb
iret
jne
in
mov
mov
jae
mov
sbb
mov
xchg
rcll
dec
pop
mov
ret
out
fiadds
iret
and
or
pop
adcb
push
inc
or
call
xchg
adc
rclb
jbe
or
insl
jbe
cmp
jmp
leave
test
mov
lret
mov
fcompl
pop
dec
ret
sbb
in
inc
push
daa
xchg
sbb
jno
sub
and
adc
popa
xlat
mov
fisubrl
addl
cli
jbe
pushf
jl
addr16
adc
mov
adc
mov
test
mov
aaa
in
mov
dec
inc
cmpsl
lods
xchg
pop
mov
mov
mov
mov
push
in
outsl
push
mov
ss
xchg
cmp
sub
mov
cltd
lcall
in
dec
leave
mov
js
dec
xchg
inc
and
sub
repz
mov
xchg
xchg
adc
scas
adc
movsb
xlat
and
test
mov
sbb
inc
sbb
inc
add
or
xchg
jl
outsb
adc
push
outsb
repz
mov
xor
mov
pop
repz
ja
and
mov
test
mov
xor
daa
add
aam
mov
outsl
inc
jge
sub
aas
mov
jle
xchg
push
mov
and
es
loopne
mov
xchg
and
ret
mov
xchg
jle
xchg
stos
xorl
lret
inc
mov
data16
pop
enter
pop
lret
inc
mov
ficoml
push
push
lret
repnz
sbb
xchg
loopne
push
ja
inc
and
fsubs
in
fcomps
iret
jne
xor
mov
ljmp
add
loopne
xchg
add
push
add
sub
movsl
inc
xchg
imul
in
nop
dec
mov
pop
xchg
mov
push
dec
addr16
mov
lock
in
jno
int
xor
xor
jg
imul
iret
push
test
pop
dec
in
sub
testl
cmc
orl
scas
clc
imul
add
outsl
or
add
push
push
outsl
insl
lods
add
xchg
imul
xor
xlat
jge
sti
dec
jmp
xchg
jl
std
adcl
es
xchg
add
dec
push
sub
cmp
int
xchg
ficoms
sub
sub
lahf
jl
clc
rcll
or
inc
xchg
mov
fstl
mov
add
cmp
ja
in
or
sub
inc
es
or
fiadds
mov
xor
adc
in
xor
loope
hlt
pop
cmp
cmc
push
ficoms
jle
mov
dec
arpl
jno
fistpl
ret
sarl
add
daa
push
xor
pop
xor
gs
out
jne
stos
pop
sahf
daa
pop
push
iret
mov
pop
mov
mov
stc
pop
retw
insl
pop
scas
mov
bound
jb
shrl
loopne
divb
icebp
and
xchg
repnz
jmp
inc
repz
mov
jae
mov
out
inc
jmp
shlb
pop
cmp
push
out
cli
push
lods
push
adc
in
jns
mov
stos
push
mov
cmp
xlat
repnz
jecxz
ds
jbe
inc
sbb
repnz
stc
daa
mov
add
mov
enter
adc
push
pand
movsb
and
adc
jnp
in
sarl
or
and
xor
pop
in
and
faddp
sub
out
scas
jl
push
mov
push
lcall
cmc
stc
out
in
mov
arpl
js
in
int3
loop
cmpsl
stos
cmp
pusha
sbb
call
cmp
cmp
mov
cmp
lret
xor
adc
repz
imul
add
xor
xchg
mov
and
mov
and
mov
jge
push
ret
sub
pop
rcrb
les
das
mov
scas
pop
pop
pop
in
hlt
xchg
mov
inc
push
xchg
pusha
loop
andl
repz
sahf
sbb
out
rcrl
jns
repz
push
sub
mov
add
adc
icebp
inc
sub
dec
mov
mov
inc
xor
gs
sbb
dec
add
sbb
inc
lods
insb
xchg
jae
idivb
xchg
xchg
inc
subb
mov
fs
inc
cs
int3
pop
cmp
mov
pop
and
push
scas
mov
into
in
mov
mov
xchg
add
add
fidivs
mov
xchg
into
fsubl
mov
add
movsb
aam
push
push
lea
mov
inc
leave
aam
adc
mulb
ds
pop
lahf
mov
inc
scas
mov
xor
cmc
mov
sub
fstpl
push
jae
mov
pop
sub
and
lods
push
xor
push
loop
sbb
push
ret
sub
pop
jne
sbbb
js
sbb
cmp
dec
mov
mov
daa
int
sbb
or
imulb
or
mov
les
insl
adc
and
addr16
dec
inc
aam
jecxz
int
cmpsl
loope
inc
lods
push
mov
repnz
cmp
mov
popa
mov
sub
mov
adc
mov
lea
nop
fisubrs
mov
aaa
adc
pop
test
pop
mov
stc
popf
mov
mov
add
pop
mov
mov
jb
movb
push
movb
out
cwtl
jmp
adc
jo
jbe
mov
mov
xchg
dec
adc
loope
cmp
adc
and
test
pop
push
pop
pop
add
add
testl
mov
das
push
mov
das
push
pop
jg
bound
scas
enter
jb
push
andb
cmc
repz
iret
mov
xchg
shl
cmp
sub
lock
imul
rcl
push
fwait
in
and
testl
and
sarl
imul
mov
leave
vmovntps
add
stos
jge
je
sahf
movsl
in
xchg
adc
bswap
adc
repnz
cmpsb
orb
jb
or
out
mov
jbe
mov
and
xor
ss
std
xor
outsb
popa
xchg
fisttpl
pop
test
clc
movsb
dec
leave
test
adc
addr16
mov
out
js
mov
outsl
in
jbe
push
sahf
push
mov
xchg
xor
fwait
adc
scas
addb
adc
mov
jge
aad
pop
xor
mov
dec
jns
jo
jmp
cmp
scas
jg
cwtl
lds
pop
mov
sbb
mov
popf
jae
ret
notl
push
sti
es
and
fwait
push
lods
xor
fcomps
and
cmpsb
and
sub
clc
sahf
hlt
add
rcrl
push
popf
mov
jnp
xchg
aam
stc
fstpl
sbb
je
rol
adc
in
sahf
inc
std
movsb
push
jmp
xor
sub
addl
lret
in
pop
mov
cmp
mov
les
mov
mov
cmp
inc
aad
xchg
mov
and
adc
repz
ja
jae
jns
pop
sub
popf
inc
subb
mov
add
inc
lock
and
xor
popa
or
out
in
inc
xor
fidivrl
xor
and
mov
adc
mov
nop
push
mov
cmpsb
dec
addr16
fnstcw
leave
jae
push
lret
daa
push
xchg
aam
pop
int
cld
add
popf
inc
stc
or
shlb
out
mov
mov
icebp
leave
xchg
or
push
or
iret
in
insb
shll
xor
push
imul
sub
vpsubsw
cmpl
cmpsb
fnstsw
xor
aaa
mov
push
xor
enter
in
sbb
in
mov
pop
imul
mov
cmc
mov
cmc
daa
adc
lods
cwtl
mov
out
clc
mov
in
sarb
adc
add
lods
and
ficompl
aam
push
sub
fstpl
jbe
daa
pop
lea
xchg
jno
push
sub
mov
jl
xchg
ret
shll
sarb
cld
sub
popa
sub
or
mov
lret
mov
loope
sbb
inc
xchg
jge
mov
aas
test
fisubl
fucomi
nop
or
fdivrl
test
mov
ja
sub
imul
push
xchg
call
pop
xor
dec
lock
xlat
loopne
or
cltd
into
cmp
mov
int
rcrb
jle
mov
lods
enter
mov
jo
mov
sahf
push
push
das
sbb
mov
rolb
jmp
push
pop
ljmp
cmp
cmp
sarl
iret
lock
sub
dec
pop
stos
fwait
or
test
pop
cmpsb
xor
pop
lret
mov
sbb
and
imul
jg
push
pminub
xchg
lcall
cmp
and
pop
mov
xor
popa
cmp
push
xor
mov
pop
xchg
xchg
sub
data16
sbb
rcrb
fwait
bound
ljmp
inc
or
mov
adc
jno
dec
ja
push
jnp
out
cmpl
sub
xor
dec
pop
sbb
jp
test
push
xor
nop
mov
clc
dec
sub
xor
adc
clc
inc
arpl
jge
sub
stc
lods
sbb
jg
dec
mov
cmp
add
cmpsl
mov
pop
cmc
je
push
lret
outsb
and
mov
cmp
outsl
icebp
dec
inc
push
shrl
sub
mov
stos
cs
aas
xchg
mov
and
pushf
jecxz
enter
clc
int3
mov
mov
mov
outsl
cmp
pop
jno
fbld
sbb
add
and
int3
test
movsl
daa
or
pop
mov
dec
cltd
orl
cwtl
and
push
sub
repz
cmp
lret
in
push
adc
inc
loop
in
dec
mov
fisubs
push
push
repnz
adc
shrb
leave
arpl
pushf
jecxz
addb
dec
and
jge
gs
dec
jae
ficoml
or
loopne
sbb
jp
xlat
cmp
mov
push
cmc
xor
dec
icebp
xchg
mov
push
add
cmpsb
adc
test
ja
push
lds
pop
dec
push
movsl
dec
hlt
aad
fnstcw
jmp
push
xchg
sub
call
inc
addr16
pop
movsl
aam
sub
cmp
out
shll
mov
out
std
cmp
inc
xlat
and
jecxz
cmpsl
or
xchg
xchg
and
cmp
jmp
lahf
fidivrs
loop
cmp
sarb
fdivrl
je
pop
mov
roll
push
out
add
mov
inc
sub
jl
mov
fidivrl
or
repnz
out
loopne
inc
sbb
pop
int3
push
cltd
lcall
movsb
dec
pop
icebp
test
stos
pop
mov
push
inc
icebp
push
jbe
sbb
pop
test
rorl
add
jb
jmp
sbb
inc
pop
cmpsb
mov
jmp
dec
mov
enter
cltd
imul
nop
add
xlat
xchg
idivl
repnz
lea
jo
mov
cli
sbb
cs
xor
pop
sbb
cs
cmp
dec
sub
cs
decl
lcall
fildl
jle
mov
iret
mov
and
imul
jnp
decl
in
jp
pop
add
xor
in
push
bound
popf
jle
dec
cmp
xor
jg
aad
outsl
pop
push
in
shlw
xchg
divb
mov
mov
mov
insb
outsb
jmp
lea
jg
jbe
push
and
loop
loope
inc
mov
jp
jae
ljmp
fildll
pop
add
fcmovbe
pop
mov
cmp
xchg
dec
mov
out
rcll
cld
jno
pop
adc
push
mov
mov
enter
mov
sarl
inc
xchg
mov
aad
lahf
dec
sti
addr16
or
sub
lods
rcl
scas
test
mov
dec
sub
rcll
xor
dec
lret
cwtl
and
sarb
jb
cmc
or
out
mov
ja
or
dec
xchg
inc
scas
stos
into
cs
sub
inc
stos
or
cmp
mov
mov
test
and
mov
fnstsw
shrb
jbe
mov
inc
std
stos
pop
popa
lahf
push
xor
jl
add
and
mov
into
mov
int
js
aaa
ror
js
rol
dec
shll
popf
sbb
cmp
aam
shrb
or
xchg
dec
mov
dec
ffree
sub
and
push
jnp
dec
sahf
inc
mov
mov
pop
xchg
xlat
dec
pop
push
xlat
xchg
push
ja
and
mov
out
pop
mov
movsb
cmp
sbb
insb
xchg
out
ds
std
sub
xchg
and
movsbl
movsl
dec
pop
and
icebp
and
outsl
fsts
mov
add
pop
insb
loope
aaa
les
jg
mov
imul
movsb
test
das
add
xchg
jmp
mov
dec
lods
roll
adc
and
or
out
pop
xlat
iret
add
lahf
iret
iret
jmp
sbb
inc
cmpl
jp
add
adc
mov
std
mov
in
xor
pop
nop
push
rorl
cwtl
lds
into
bts
dec
test
fbstp
dec
xchg
inc
test
out
pop
bnd
out
dec
sbb
add
push
fcomps
cmp
loopne
jne
or
mov
mov
popf
in
aas
popf
lock
je
and
sbb
fisubs
inc
imul
push
sub
out
sbbl
lods
push
mov
iret
pop
jns
popa
in
cmpsl
ret
cmpsb
add
cmp
mov
outsl
cmp
xchg
shrb
sub
ljmp
add
lret
popf
sbb
and
jne
xor
pop
jno
addr16
sub
popa
push
add
xlat
clc
popa
dec
mov
clc
fwait
jno
stos
adc
insb
data16
nop
mov
test
call
insb
cmpsl
cmp
or
pop
sub
xor
xor
xchg
xor
test
inc
int3
pop
mov
mov
lea
test
inc
cs
dec
jle
inc
outsb
and
adc
inc
jg
mov
clc
ds
xchg
cmp
sbb
leave
mov
push
mov
sbb
arpl
mov
push
jb
lock
das
jnp
add
xchg
push
mov
cmp
sti
sub
push
testb
shrb
xor
arpl
hlt
mov
xchg
push
imull
imul
sti
add
jmp
imul
sbb
lret
ljmp
sti
loopne
mov
insl
imul
sub
cmp
shlb
add
stos
icebp
addr16
ret
xor
stos
in
sbb
insl
pop
pop
int
nop
dec
xor
cmc
insl
iret
inc
sbb
rcll
push
inc
inc
add
jle
xlat
sub
add
mov
in
adc
loopne
mov
xor
sbb
lea
mov
stos
sub
arpl
addr16
cli
mov
xlat
cs
mov
mov
mov
push
xorl
pop
push
clc
xchg
dec
loope
mov
dec
fbstp
sub
cltd
and
or
mov
jp
add
sbb
lret
add
xlat
pushl
xchg
inc
and
cwtl
cmovle
ds
lcall
dec
xchg
pop
mov
mov
test
pop
sbb
xchg
int
sub
and
cmp
mov
loope
loop
xlat
adc
aam
fidivrl
repz
or
pop
or
dec
stos
jle
in
sub
rcr
mov
cmpsb
mov
inc
dec
aad
sub
dec
and
sbb
pusha
xor
shld
mov
loopne
fistpl
mov
rorb
inc
mov
dec
ret
pop
push
repz
gs
pop
pop
cmp
push
sbb
stos
push
hlt
adc
dec
inc
cwtl
and
mov
in
mov
outsl
fs
push
cmp
je
or
daa
push
adc
int
mov
cmpl
jle
cmp
inc
adc
loope
fsubp
popf
sub
xor
mov
lock
loope
lock
arpl
iret
imul
xchg
cmc
aad
je
and
cmc
stos
jb
neg
xchg
dec
scas
out
mov
arpl
test
stos
cmp
push
rclb
cmpsb
xchg
lahf
sub
ja
push
mov
pop
loope
push
das
adc
mov
mov
cmc
mov
mov
std
pop
lods
push
je
das
jle
mov
mov
lret
es
shlb
push
sbb
pop
xchg
sarl
mov
aam
xlat
adc
or
mov
addl
dec
adc
pushw
stos
mov
mov
imul
in
and
inc
sub
iret
xor
push
xchg
adc
ror
packssdw
arpl
jo
aaa
or
sbb
cmp
sub
xor
mov
out
or
pop
mov
inc
repnz
xchg
sbb
cwtl
pusha
das
mov
sbb
mov
cwtl
fmuls
ds
addr16
jo
test
aas
rclb
pop
call
mov
mov
call
xchg
jne
and
gs
mov
xor
pop
movsl
inc
shrl
sub
mov
adcb
fmul
pop
mov
push
stc
or
cmp
xchg
popa
xchg
out
pop
imul
mov
mov
stos
mov
inc
ret
stos
pop
std
and
or
mov
clc
into
pop
stc
les
push
nop
daa
xchg
jne
xchg
push
movsl
test
outsl
or
cmc
leave
xor
jbe
mov
and
jb
lret
fnstsw
enter
mov
xor
movsl
jb
mov
or
xorb
scas
testb
arpl
clc
mov
cmp
movsl
loopne
push
pusha
cmp
sub
arpl
bound
pop
mov
add
mov
aaa
pop
pop
dec
call
pushf
push
mov
xchg
sub
rolb
xlat
ret
pushf
or
jle
mov
and
fwait
pushf
cmpsl
iret
cmpsl
xchg
cmp
ja
or
lret
xchg
inc
ljmp
jns
fcomps
testb
cli
jo
outsb
jmp
les
mov
lahf
fdivs
ror
mov
mov
sub
adc
dec
in
push
pop
imul
repz
or
push
cmp
das
je
xor
call
movsl
lret
jp
dec
push
push
in
inc
push
cmp
or
dec
rolb
and
negl
adc
dec
mov
add
push
out
adc
hlt
or
mov
loope
popa
inc
mov
dec
aam
cmpl
jb
push
in
sub
mov
dec
out
or
add
jo
xor
scas
push
call
add
add
jnp
call
std
cwtl
clc
or
inc
mov
rclb
std
mov
mov
push
mov
cmpl
mov
adc
xlat
addr16
mov
cmpl
lcall
pushf
xchg
mov
mov
fucom
mov
xchg
xor
jo
sbb
push
jg
test
jno
cmp
mov
dec
xchg
aam
mov
dec
adc
hlt
gs
cli
adc
adc
and
lock
movsl
sub
out
outsb
dec
imul
mov
push
insl
jmp
scas
or
pop
or
xlat
cmp
inc
fidivrl
jo
jnp
cwtl
cmc
imul
pop
mov
sbb
sbb
out
dec
cmc
outsb
insl
push
shlb
mov
aaa
in
inc
addr16
sub
ss
xor
push
dec
pop
popf
jo
push
das
pop
xchg
sahf
xor
sbb
outsl
mov
xlat
push
lds
xchg
inc
lds
inc
lock
sub
fidivs
insb
mov
cmpsl
sub
push
mov
inc
sub
in
pop
fcompl
adc
cmp
mov
mov
add
js
inc
daa
xor
sbb
xchg
scas
cmp
sub
andl
inc
adc
ljmp
addr16
jmp
rcl
mov
mov
xor
ficoms
pop
pop
or
push
mov
dec
mov
addl
xchg
mov
cmp
adc
xor
jecxz
hlt
mov
andl
inc
xchg
std
pop
mov
in
jae
insb
ds
loop
inc
inc
mov
xor
pop
mov
sti
and
cli
fwait
std
iret
test
or
icebp
fdivs
test
aam
jge
lcall
ret
pop
dec
sub
adc
int3
adc
sbb
adc
mov
mov
cmp
jp
adc
pop
xor
and
cltd
fnstenv
into
xor
push
stc
sahf
push
arpl
jae
and
rorl
sub
lea
repnz
push
data16
rorb
or
adc
test
push
sti
mov
xchg
insl
push
xchg
les
push
lret
sub
mov
push
or
pushf
stos
mov
movsb
mov
fldt
dec
adc
imul
mov
shll
imulb
dec
xor
dec
pop
scas
mov
push
orb
pop
lret
push
mov
lods
fistl
sub
inc
add
cmp
test
adc
jae
cld
daa
mov
adc
insl
subl
lret
in
je
fwait
lea
xchg
push
jle
fxch
mov
cmp
les
add
cmp
das
addps
shr
std
mov
loope
fnsave
jmp
add
cltd
rolb
insl
cmpsb
jno
pop
clc
andl
add
inc
cmpsb
testb
push
mov
pop
pusha
xor
mov
cmpsl
sbb
ret
aad
popa
xchg
jl
pushf
inc
lock
test
dec
xorb
adcl
pop
add
mov
add
sbb
adcb
mov
mov
test
rcrl
or
clc
dec
jbe
xor
mov
adc
add
xchg
jmp
jne
push
and
rcll
cmpsb
in
aas
cmp
mov
mov
ss
jle
jp
aam
aam
pop
xor
jl
icebp
inc
dec
sar
push
out
mov
rorb
add
mov
xchg
cmp
mov
out
adc
fistpll
popa
xor
adc
repnz
push
and
out
push
mov
loopne
jae
outsb
xchg
scas
add
push
fistl
les
jns
lcall
in
cmp
xchg
test
xchg
in
stc
or
mov
dec
movsb
outsb
fstps
push
and
dec
movsb
fnstcw
jge
repnz
sub
mov
mov
shrb
mov
dec
pushf
mov
call
jb
xchg
xlat
jno
mov
pusha
call
pop
bound
roll
push
enter
lret
sub
add
jb
mov
push
push
adc
or
jb
or
sub
in
push
push
jb
sub
adc
sbb
mov
mov
mov
idivb
dec
dec
push
dec
hlt
mov
sub
mov
mov
or
sbb
mov
xorl
stos
and
push
add
add
xor
das
inc
and
sahf
pop
inc
mov
lock
inc
loop
jle
ss
push
push
out
jne
add
mov
cli
push
stos
mov
xor
lods
divl
decb
cmp
add
rorl
and
in
imul
mov
mov
sahf
mov
adc
pop
mov
pop
test
fisubrl
int
adc
mov
enter
outsl
stos
add
mov
inc
sub
jmp
out
aam
aad
inc
cmp
in
out
dec
imul
push
cmc
cmpsb
dec
imul
mov
mov
pop
pop
sar
add
call
mov
aaa
jle
jno
outsl
pop
or
daa
mov
jb
ds
xor
sub
sbb
lret
push
call
xor
mov
xor
dec
test
jno
mov
add
sbb
jbe
pop
sub
push
test
adc
mov
jl
sbb
mov
out
jecxz
into
mov
xchg
mov
mov
out
out
aaa
and
test
ss
push
cltd
jnp
mov
gs
lods
sbb
in
cmp
mov
mov
jns
mov
mov
dec
ret
sbb
add
decl
cmp
fdivrp
mov
cmp
icebp
popa
lds
and
icebp
in
mov
fdivrl
dec
mov
outsl
push
shrl
nop
dec
dec
xlat
push
push
dec
mov
pop
mov
es
adc
into
jle
icebp
mov
out
out
das
loope
inc
aaa
out
test
movsl
mov
cmp
sbb
cmpsl
popf
jge
mov
ret
incl
dec
mov
jl
stos
push
dec
int3
inc
iret
xchg
or
push
sbb
data16
mov
int3
insb
or
lret
jg
in
jb
in
test
add
xchg
mov
popf
cltd
loop
sbb
jno
sub
incl
lahf
daa
mov
adc
mov
mov
sbb
push
cmc
leave
mov
cmp
and
popa
movsl
add
inc
add
stos
push
add
cmpsb
std
pop
sbb
pop
inc
xchg
cmpsb
push
cmp
icebp
cmpl
loope
sbb
push
jnp
lcall
ljmp
sub
xor
mov
mov
pop
mov
pop
fwait
ss
dec
iret
xchg
fwait
cwtl
les
ss
jae
lret
lret
cmpsb
adc
shrb
mov
icebp
ja
xor
xchg
sbb
xor
mov
test
jle
je
jo
sub
outsl
clc
negl
mov
inc
rcrl
sti
lcall
rol
idivb
cmp
add
jg
subb
aad
insb
stos
or
stc
push
hlt
fcmovnb
shl
push
sbb
int
aaa
shll
into
scas
or
jne
inc
in
aad
int
jecxz
dec
lret
popf
pushf
in
sub
jle
popa
mov
push
pushf
call
jle
add
and
xchg
dec
xor
fsub
cmpsl
dec
push
xor
mov
out
xchg
imul
scas
fcoms
pop
ret
mov
xchg
jno
lock
ss
insb
cmp
shlb
pop
mov
cmp
xchg
fcoml
xor
jmp
lret
sti
mov
xchg
sbb
pop
aas
jmp
ja
scas
mov
and
cwtl
push
push
int
int3
add
mov
bswap
sbb
mov
and
mov
mov
adc
cmp
cli
sbb
xlat
cmp
subb
and
xor
mov
fimull
jne
jmp
call
or
jecxz
or
add
pop
bound
xor
mov
add
push
and
jo
lahf
mov
jbe
outsb
and
inc
loop
jae
add
xor
lods
mov
lcall
xchg
push
sub
dec
jg
imul
dec
dec
jb
fsubl
push
add
inc
rcrb
inc
lret
cmp
in
jns
add
xlat
rol
imul
or
xchg
mov
outsb
jb
and
das
dec
sti
rclb
or
scas
mov
xchg
pop
or
jns
loopne
outsb
jns
addb
sub
aaa
cmp
sbb
mov
jbe
inc
mov
lcall
lahf
pop
lret
add
out
inc
in
call
cmpsb
jne
jb
shrl
dec
ljmp
hlt
jle
pop
es
loop
push
aad
enter
jecxz
notl
stos
or
ret
mov
gs
push
xchg
xchg
jp
or
lahf
mov
dec
punpcklwd
adc
enter
ffree
popf
icebp
mov
nop
shl
sub
lahf
pop
loope
mov
mov
adc
dec
adc
mov
jno
push
sbb
push
xor
sbb
cld
call
pusha
cmp
mov
pushf
cmpsb
push
push
pop
jns
adc
rcll
jge
jb
pop
jmp
loop
sbb
xchg
push
pop
lods
js
and
sub
jecxz
xor
out
lcall
into
cmp
int
fisubrl
std
pop
add
cld
cmp
ret
stos
out
or
jne
sub
stos
lret
pop
xchg
push
cmp
pop
cmpb
mov
or
mov
popa
test
add
arpl
push
adc
rcr
out
cld
shrl
movsl
ja
sub
lock
adc
cmpsb
ds
cmp
and
mov
mov
dec
sub
jo
call
push
and
pop
jb
out
or
mov
mov
or
imul
mov
dec
mov
xor
rorb
xor
cmpsl
inc
or
add
cwtl
and
jne
sub
and
dec
fiadds
pusha
arpl
fs
and
cld
mov
fiadds
sub
and
push
mov
jno
sub
mov
rcll
repnz
add
lock
dec
je
add
sub
fucomi
cmpsl
fsub
test
push
aam
out
lock
fidivl
mov
jecxz
pop
lods
mov
inc
adc
dec
lds
cltd
std
outsl
sbb
push
sar
and
loope
sahf
repz
mov
ficompl
push
cltd
stos
fwait
sbb
dec
loopne
sub
andb
ds
xchg
fnsave
mov
fadds
sti
jmp
ret
mov
int3
jmp
mov
pusha
mov
mov
or
rdtsc
fcoms
push
adc
cmp
in
jo
dec
stos
mov
pop
push
nop
sbb
push
pop
push
xchg
dec
rorl
pop
scas
pusha
cs
cli
pushf
sbb
xor
or
jns
cmp
in
jae
mov
ljmp
adc
les
nop
rclb
sbb
push
aam
lret
inc
adc
pusha
lret
jbe
ds
mov
add
lods
scas
fs
jmp
mov
xchg
push
ljmp
scas
cmp
imul
and
ret
pop
dec
mov
clc
iret
xchg
into
mov
dec
cmp
fldl
xor
pop
lret
xor
rcrl
cmc
mov
nop
pop
sti
inc
fwait
ss
mov
dec
adc
shl
cli
jae
add
int
es
and
rorb
sbb
ss
mov
push
or
call
or
push
push
mov
mov
lods
mov
jb
mov
fwait
sub
sarb
js
mov
xchg
and
and
insl
ss
fadds
fisubs
cs
test
sahf
shll
scas
out
jg
adc
push
add
xchg
dec
cmp
and
jns
sub
push
xor
mov
sub
sbb
cli
push
sub
hlt
test
lods
inc
mov
sub
xchg
test
into
dec
repz
mov
loopne
rcrb
enter
scas
jns
push
push
out
sbb
jo
in
xor
jg
xor
cmpsl
test
loope
orl
push
jo
aas
push
enter
sbb
and
data16
ja
sbb
rcl
mov
mov
mov
cmp
mov
bound
sbbl
mov
sub
loope
test
xor
sbb
mov
inc
xchg
cmc
sub
loope
sub
and
stos
add
cmp
xchg
negb
or
dec
dec
pop
loope
cld
jnp
cli
cmp
fisubrs
cmp
mov
filds
pop
pop
mov
xchg
sbb
cs
addb
icebp
xchg
xor
in
mov
or
push
add
xor
push
js
loope
insl
movsl
mov
push
lods
jno
mov
cld
ja
shl
bound
gs
out
add
adc
les
in
bound
les
xchg
les
imul
push
ret
fwait
rcll
ja
iret
mov
xchg
in
or
scas
pop
mov
iretw
fdivrl
test
stos
xchg
cmp
mov
arpl
mov
mov
test
cli
out
inc
int
add
in
add
cmp
push
cmpsl
xorb
xchg
push
stc
sbb
pusha
add
popl
xor
jge
pusha
add
repz
pop
and
jnp
mov
cld
mov
lcall
add
lds
gs
daa
adc
dec
pop
ljmp
dec
add
outsb
xor
jo
ljmp
fwait
and
xlat
clc
and
mov
repz
sub
mov
mov
lret
mov
leave
call
sub
add
push
jmp
leave
pop
add
repnz
jle
or
fdivl
pop
mov
pop
push
int3
repz
popa
mov
loopne
and
or
adc
hlt
pop
lret
push
ljmp
movsb
int3
mov
and
or
or
nop
and
sub
push
aas
inc
sbb
in
push
sub
ret
mov
or
movsb
cmp
add
shrb
and
jl
jno
iret
xchg
adc
notb
jmp
dec
repz
data16
xor
inc
push
cltd
add
fs
mov
std
xor
cwtl
in
into
movsb
insl
in
imul
xchg
inc
insl
jb
test
and
pop
mov
jmp
inc
adc
cmpsl
dec
int
cld
adc
jmp
add
addl
mov
repz
testb
add
repnz
fistps
mov
aam
add
pusha
mov
add
fisubrs
add
in
xchg
and
pusha
mov
enter
push
loope
mov
add
push
inc
int3
test
pushf
or
pop
ljmp
mov
icebp
test
mov
std
test
add
mov
scas
bound
mov
les
sub
gs
adc
scas
xor
mov
stos
ret
test
rorl
cmp
jne
push
xchg
hlt
push
in
std
outsl
lock
lahf
xor
je
mov
jns
dec
adc
cwtl
lahf
dec
mov
stos
rolb
cmp
adc
adc
push
lock
or
in
mov
in
dec
xchg
push
mov
push
in
aam
fbld
xlat
xchg
mov
mov
sub
nop
xor
mov
mov
adc
jne
int3
pop
cs
lea
sbb
popa
xchg
sbb
faddl
push
ds
pop
push
out
icebp
jge
or
dec
lret
inc
dec
and
sbb
bound
sbb
cmpsb
mov
mov
icebp
and
pop
mov
lcall
sbb
nop
inc
dec
cltd
mov
sbb
cmp
push
xchg
roll
push
dec
mov
fstl
std
inc
lock
sbb
int
enter
jl
nop
lcall
or
cwtl
addr16
jge
push
dec
and
jmp
jmp
adc
fdiv
aas
push
pushl
sbb
push
test
cmp
xchg
and
jne
lea
jg
fs
mov
mov
hlt
xchg
ja
mov
je
cs
xor
imul
test
mov
popf
push
mov
mov
insb
mov
push
addl
dec
aaa
daa
mov
mov
pop
cwtl
jl
ret
mov
out
pushf
movsl
aam
in
fnstenv
inc
and
in
lock
out
mov
mov
fadds
clc
sbb
sub
imul
flds
mov
xchg
and
sbb
rep
mov
add
imul
fwait
decl
testl
pop
jns
and
mov
xchg
arpl
and
dec
std
pmullw
jmp
sbb
xor
push
sarl
mov
cli
xor
lock
gs
xor
test
pop
ja
aaa
xchg
test
and
and
mov
cli
rorl
imul
mov
pusha
xor
adc
inc
ss
jle
pop
std
sub
mov
call
fmull
push
mov
push
cli
add
daa
push
aaa
popf
test
lret
add
scas
sbb
mov
fbstp
or
je
test
pusha
mov
jo
push
jae
xorb
dec
scas
loopne
cmp
insl
add
xchg
in
ret
into
or
mov
xor
dec
iret
loopne
or
cmp
cmp
dec
inc
push
inc
adc
inc
mov
jle
into
into
and
fwait
clc
mov
fcoml
add
pop
xchg
pusha
cs
cmpsb
cmpsl
fnsave
or
lret
pop
push
fwait
dec
movsb
inc
mov
mov
cmp
xchg
das
adcl
adc
push
adc
call
sti
push
aam
mov
sub
hlt
fs
loop
mov
stos
jle
sbb
adc
in
pop
xorb
jb
lahf
lods
lcall
push
push
jnp
mov
jb
or
sbb
xor
sahf
repz
mov
into
add
jbe
jb
adc
in
jae
int
cs
stos
jno
imul
push
test
repnz
pop
and
in
nop
fidivrs
ftst
in
out
rcrl
pop
outsb
inc
cmp
lock
stc
shr
mov
jmp
inc
fdivl
adc
repnz
mov
jecxz
fld
add
lret
jae
mov
lods
loop
or
jmp
xchg
into
pop
jbe
jne
mov
cmp
cmpl
add
lahf
shl
xchg
aas
sbb
jg
inc
push
pop
sub
loopne
sbb
stos
sbb
outsl
cli
lock
sti
js
stos
insb
inc
test
cmp
repz
adc
mov
add
jl
testl
push
xor
js
decb
les
xchg
dec
sbb
mov
push
mov
inc
rcrl
xor
xchg
pop
push
push
sub
shrl
cld
sbb
adc
lock
icebp
and
mov
mov
int3
pop
dec
stos
adc
mov
imul
inc
inc
inc
mov
adc
add
push
int
and
lods
popa
lock
dec
pop
pop
cli
dec
das
imul
jo
pop
mov
push
loope
in
adc
fiaddl
mov
das
jmp
out
flds
inc
sbb
sbb
jmp
mov
loope
xor
lock
pop
xor
or
sub
xchg
pop
lret
mov
dec
test
cs
and
and
mov
ds
popf
or
mov
mov
mov
cmpb
mov
cmp
dec
mov
xor
dec
and
movsb
sub
push
stc
lds
xor
lret
in
or
jle
add
push
or
and
test
adc
bound
mov
arpl
rorb
inc
mov
aaa
or
daa
into
fists
pop
daa
cli
sub
sub
rep
mov
lret
mov
mov
lret
daa
movsb
lea
push
cmp
outsl
jge
push
cli
dec
scas
imul
sti
dec
jns
dec
push
ret
lcall
sub
fld
inc
adc
push
mov
xlat
dec
sbb
stc
in
lret
outsl
in
push
mov
das
insl
dec
cmpsl
fdivrs
repnz
push
or
xor
or
cltd
or
addr16
outsb
add
inc
pop
fcom
sbb
repz
xchg
xor
or
icebp
add
inc
in
xor
rcr
cmp
clc
push
push
xor
mov
dec
dec
inc
lds
cmpsb
movsb
xchg
push
fsubrl
mov
mov
movb
inc
shll
les
cmp
daa
mov
sub
jo
push
sbb
pop
or
jo
push
cld
xchg
pop
mov
idivl
lret
pop
dec
add
inc
rcrb
jl
mov
popa
loope
adc
in
sbb
ret
data16
or
jnp
mov
int3
or
sbb
stc
cltd
and
out
hlt
mov
outsl
sahf
sti
stos
loop
rcrl
pop
daa
xor
adc
sub
adc
or
dec
fidivs
loop
or
sti
xor
xor
jl
ja
pushf
push
out
out
lcall
fnstcw
insb
jcxz
push
fwait
neg
add
addr16
ret
dec
mov
cmp
es
mov
fs
addb
add
test
mov
adc
pop
mul
jle
adc
outsl
in
gs
repz
dec
xchg
xchg
sbb
push
insb
fwait
sbb
popa
mov
mov
pop
cli
stos
push
sub
sub
imul
dec
mov
xchg
xor
sarl
push
inc
icebp
pop
lahf
cmp
out
adc
fldcw
fistl
xor
push
mov
inc
fldenv
push
ja
jg
jo
stos
rorb
insb
and
enter
cwtl
fisttps
in
xchg
cld
insb
and
jae
rolb
jp
les
pop
adc
sub
test
mov
xor
sahf
out
popa
xor
and
sbb
mov
daa
and
bound
in
fcmovbe
jo
inc
sbb
push
jns
aaa
cli
pop
aam
incl
clc
movsl
fs
roll
inc
sbb
rcrb
fstl
cmp
mov
faddl
fsubrl
loopne
pop
push
es
cmp
cmp
jg
push
jns
outsb
or
or
inc
cmc
xor
test
rcrl
dec
pop
loope
adc
fwait
cmc
fs
mov
jns
ljmp
push
adc
js
bound
or
or
push
lea
adc
lahf
add
pusha
popf
ds
cmp
pop
pop
daa
loop
nop
fistpl
lret
sub
fwait
imul
outsb
scas
or
cli
ret
pop
sbb
ret
inc
out
pop
imul
adc
xchg
fists
fwait
enter
xor
test
jno
mov
out
les
repnz
stos
es
test
mov
test
rcr
imul
mov
sahf
outsl
shl
bound
pop
jb
push
adc
mov
xchg
mov
mov
mov
lds
cmp
xor
lahf
stos
ljmp
cmp
sub
add
sub
dec
rcrl
cmc
push
sbb
daa
cmp
mov
jle
pop
cld
sar
shl
rep
in
movsb
out
sbb
ja
mov
out
mov
jb
pop
fstpl
pop
adc
popf
and
push
jo
repz
push
mov
pop
dec
fs
and
xor
iret
mov
icebp
in
lret
sub
sub
fisubl
jp
stc
ret
mov
outsl
xchg
lock
into
jp
pop
or
pop
jb
ja
fdiv
rolb
pop
aad
dec
inc
movsl
add
ret
repz
insb
stos
mov
xor
or
lret
out
fdivrs
jge
inc
js
dec
add
mov
add
test
out
add
repnz
popa
fnstcw
lcall
push
mov
adc
xor
push
loop
jg
mov
sbb
sub
adc
lret
jne
orb
cmpsb
mov
into
jb
in
mov
jmp
push
incl
xchg
popa
sub
ret
rclb
sti
cmp
out
or
roll
sahf
rol
push
sbb
jp
loop
pop
test
enter
xchg
xor
jno
ret
fwait
cli
xchg
stc
scas
arpl
rcr
je
jmp
fdivrl
push
icebp
and
pop
cmp
hlt
add
cs
dec
lret
add
in
shll
push
add
pop
jb
ret
inc
psrad
xlat
fs
loopne
pop
dec
cmpsb
test
dec
fidivrl
mov
jno
add
movntq
adc
inc
jg
dec
ljmp
fsts
iret
aad
lds
push
cld
lea
nop
sbb
lcall
add
daa
cli
pop
sbb
or
pop
inc
js
inc
pusha
stos
sbb
push
rcl
push
pop
pop
in
jmp
fistpl
insb
jo
call
sub
xchg
movsl
ds
iret
lahf
adc
cmp
push
rcl
pop
std
idivb
sbb
sbb
lahf
mov
dec
test
testl
push
inc
dec
out
aam
loop
pop
push
push
cmp
gs
xchg
es
sbbb
out
sarl
cwtl
cmp
ret
js
popf
dec
push
je
cmp
add
bound
movsl
vmread
lret
es
xchg
xchg
mov
sub
dec
inc
sbb
mov
jl
mov
pop
and
push
pop
jne
cmpb
mov
lcall
stos
pop
jo
stc
sub
push
inc
pop
cli
loope
push
mov
or
rolb
jge
int3
dec
cld
push
stos
xor
add
push
pop
xor
repz
movsl
mov
outsb
ret
inc
div
push
dec
test
outsl
es
push
cmpsb
fdivs
iret
push
je
out
jae
mov
in
out
or
push
movsl
mov
daa
and
cld
jge
iret
inc
inc
inc
jp
pop
mov
ljmp
iret
adc
jle
leave
out
lea
in
pusha
mov
mov
mov
push
pushf
in
scas
add
fisttpl
mov
ljmp
xor
rorl
mov
mov
mov
cmp
fdivrs
iret
sbb
jle
or
mov
sub
mov
pop
jg
mov
outsl
out
dec
lds
and
cltd
push
mov
push
xlat
inc
aas
sbb
mov
sbb
push
dec
pop
pop
push
lret
scas
fcmovbe
sarl
daa
pop
addr16
mov
xchg
push
cmp
imul
sub
in
xor
cmpsl
jle
adc
push
jle
pop
lds
sub
cmp
xlat
in
fldl
hlt
dec
xor
enter
and
mov
xor
cmp
xchg
rcrl
rcr
push
adc
in
xor
insb
daa
sub
jns
sub
push
scas
enter
inc
fsts
cld
es
mov
and
enter
mov
je
dec
add
dec
push
repz
sti
repnz
push
in
jo
cwtl
sar
lret
or
mov
ret
sub
clc
pop
xchg
sub
or
mov
xor
mov
cltd
lret
aam
adc
sbb
mov
inc
int
xchg
popf
rcrl
xor
pop
stos
mov
mov
insl
loopne
pusha
icebp
dec
mov
popf
jmp
sub
shll
adc
pop
inc
jae
or
jns
lret
jmp
push
inc
push
inc
inc
jno
pushf
push
outsb
pop
lret
mov
dec
pop
sbb
sub
cmp
int
nop
or
loopne
test
daa
add
jo
rorb
rol
xchg
ret
push
pop
jmp
push
jp
loop
xor
and
jno
dec
mov
bnd
roll
mov
popa
pop
pushf
mov
mov
leave
out
ds
or
lea
jl
les
aad
rolb
fs
adc
cld
sbb
repz
outsl
into
lcall
sahf
inc
add
mov
xor
into
cmp
gs
test
dec
inc
jge
pop
mov
xchg
inc
adc
mov
fs
addr16
xor
stos
repnz
add
cmpsb
scas
xor
hlt
or
stos
dec
mov
xlat
lret
sbb
imul
int
lret
test
mov
gs
dec
mov
lods
js
inc
mov
mov
cmp
lcall
pushf
jne
dec
xchg
fcoms
fists
fcoml
insb
lea
ja
mov
dec
scas
je
mov
xchg
jns
test
repz
add
daa
movl
adc
mov
lods
inc
shl
ja
jb
jo
mov
call
add
pop
ss
clc
cmpb
jo
mov
in
dec
shr
push
jle
ret
outsb
push
movsb
pop
jle
mov
adc
sbbb
int3
adc
ret
jmp
xor
loopne
test
jns
jp
inc
outsb
adc
push
mov
push
mov
call
or
lret
lahf
push
arpl
leave
rcrl
adc
xlat
inc
ljmp
inc
rcrb
jo
mov
fcmove
dec
add
mov
sbbb
push
out
in
test
mov
push
lahf
in
lret
popa
in
popf
mov
divl
hlt
out
cmp
mull
xchg
shll
pop
inc
push
punpckhwd
movsb
aaa
movsb
push
test
or
fwait
icebp
pop
outsl
sub
mov
cmc
push
cmpsb
jne
push
cmp
jecxz
mov
inc
or
stc
xchg
ret
jne
add
insl
add
jbe
pop
pop
mov
dec
lock
cwtl
mov
aaa
sbb
push
aas
imul
add
fwait
xchg
pop
mov
decb
pop
xchg
aas
mov
stos
into
in
in
shlb
mov
cwtl
cmp
data16
adc
mov
mov
inc
sbb
fists
jl
xlat
mov
adc
repnz
sub
xchg
mov
pop
pop
rorl
sub
cmp
popf
ret
xor
sahf
les
jp
in
jmp
clc
push
inc
and
cmc
inc
insl
fistl
cmp
mov
ss
pop
dec
jno
dec
cs
in
jge
mov
push
add
dec
or
xor
push
insl
inc
iret
xor
std
xchg
lcall
in
fbld
stos
rorl
inc
cs
stos
sbb
adc
jge
fsubrl
mov
stos
mov
add
arpl
pusha
cmpsb
pop
mov
test
or
sub
out
mov
add
cli
fisttpll
iret
in
repz
es
sbb
adc
push
movl
push
push
and
les
in
and
xchg
mov
stos
and
scas
xchg
and
sar
cmp
sbb
dec
les
push
mov
inc
fdivl
jne
add
lods
daa
and
push
add
mov
push
adc
xor
jle
insb
lods
lea
pop
mul
sti
fs
lcall
loopne
inc
iret
dec
stc
cmp
stos
and
mov
sbb
dec
frstor
inc
fmuls
popf
mov
dec
lret
call
outsl
fiaddl
les
add
mov
jge
sbb
lret
cmp
stos
stc
mov
mov
jmp
and
mov
sbb
popf
fidivs
sub
push
popf
rol
cmp
data16
xchg
cmp
mov
mov
lds
push
stc
mov
inc
pushf
mov
or
arpl
dec
pop
or
fimull
xchg
or
xor
ret
idiv
test
shl
stc
es
xor
loopne
lahf
pusha
cmpl
mov
test
push
scas
lret
sahf
cld
test
pop
scas
lock
insl
inc
roll
ficompl
mov
lcallw
scas
push
xor
pop
lds
push
or
pusha
orb
mov
or
ficompl
icebp
push
sbb
jmp
xor
ror
loop
insb
pop
popf
rorb
mov
scas
lods
push
and
cs
cld
push
fwait
icebp
loope
loopne,pn
sbb
lahf
dec
pop
sub
data16
inc
adc
inc
and
int3
es
sub
movl
xchg
mov
push
shr
popf
rcrl
pop
sbb
test
aas
push
sarl
cmpsl
out
out
mov
jp
lahf
mov
or
es
inc
pop
cmp
mov
imull
sub
dec
iret
jmp
lret
mov
jns
mov
sbbb
sbb
sub
mov
cli
and
xor
stc
cmp
lahf
popa
addr16
add
xor
or
jb
shll
jecxz
inc
and
mov
inc
dec
and
mov
adcb
jae
in
fcmovne
stos
insb
push
test
and
addr16
into
and
lods
jnp
jb
out
pinsrw
mov
imul
dec
std
popf
and
jnp
std
xchg
mov
push
fdivs
push
push
mov
cmpb
stos
fisttpll
shll
inc
inc
pop
inc
aad
fimuls
cmpsb
push
push
ljmp
pop
es
push
sub
rorb
sub
out
and
jge
mov
sahf
mov
test
mov
xchg
jnp
test
cmp
sub
clc
sub
mov
test
sub
in
mov
test
ror
jmp
sti
xchg
push
ret
sub
mov
mov
pop
sub
lret
aam
jnp
test
push
in
mov
shll
lods
lds
les
js
in
test
cltd
cmp
sbb
mov
loope
ja
mov
cmpsl
jl
jecxz
xchg
xchg
push
ja
in
jo
or
fsubp
addr16
adc
lret
int
loope
xchg
mov
cmp
mov
and
mov
mov
sbb
cmpsb
jp
arpl
cmp
cmp
inc
push
dec
into
mov
idiv
lods
inc
push
push
jp
cltd
daa
dec
pop
jle
sti
lea
sub
dec
into
insl
testb
xchg
jge
jo
ret
in
popf
and
popa
cmc
sahf
pop
test
sbb
lods
test
popl
push
ret
jo
insb
pop
jmp
rclb
enter
outsl
mov
sti
push
pop
xorl
jg,pt
sbb
movsb
das
stc
and
shrl
pop
iret
pop
loop
rolb
mulb
push
xchg
jle
pop
jns
and
bound
add
xor
clc
or
jbe
mov
push
dec
sub
jbe
or
jg
cli
aad
ret
scas
es
sbb
loopne
insl
dec
inc
inc
fnstenv
loope
inc
dec
dec
iret
mov
lods
popa
mov
jns
or
vpmullw
inc
inc
mov
jno
pop
sub
addb
pop
test
mov
sahf
jnp
mov
std
jp
xchg
outsl
fs
sbb
mov
mov
dec
mov
xor
mov
jp
das
xchg
mov
adcb
xchg
add
sarb
add
gs
int
out
add
inc
mov
mov
js
pop
sbb
add
imul
out
out
cmpsb
jne
cmc
xchg
sti
push
jnp
cmp
sbb
enter
mov
xchg
push
push
js
push
and
test
sbb
pushf
popf
push
into
shr
xchg
sbb
inc
xchg
inc
outsb
data16
ljmp
test
cmp
and
push
lods
mov
aas
xor
jmp
ret
mov
lret
xchg
or
push
dec
mov
sarb
std
fsubl
sub
and
add
sbb
jne
and
mov
and
mov
inc
mov
addr16
shll
in
shll
insb
sub
subb
repnz
jno,pn
sbb
arpl
dec
cmpsb
popf
out
adc
arpl
and
bound
int
fidivrs
addr16
in
jnp
and
lods
mov
cld
fimull
pop
or
xor
pushf
inc
arpl
inc
scas
psubb
and
in
or
mov
ret
repz
addl
mov
pushf
jb
sub
jmp
rclb
inc
dec
cmp
xor
sub
pusha
pop
cmp
stos
lret
fadds
call
movsl
out
mov
in
push
into
mov
testb
add
add
inc
out
nop
push
pop
leave
push
rcll
aaa
icebp
fs
add
scas
repnz
fistpl
outsl
and
mov
sub
cmp
sub
mov
xchg
fiadds
xchg
cmp
in
or
cld
mov
or
pop
clc
addr16
push
jg
lahf
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
push
add
cmp
insb
or
hlt
push
into
or
mov
xchg
add
frstor
ret
je
ds
sbb
sub
enter
add
scas
cmpsl
mov
mov
adc
xlat
add
out
xchg
or
ss
dec
loopne
cltd
fwait
cmp
je
addl
add
int
or
stos
inc
aas
sbb
nop
and
dec
scas
jg
sahf
cs
out
cmc
out
mov
inc
push
scas
je
test
mov
into
or
jl
ret
inc
sbb
pop
mov
push
outsl
pop
jmp
shll
dec
nop
push
sub
clc
enter
in
dec
xlat
scas
push
xor
lods
dec
or
lods
cmc
shrb
aad
insl
jecxz
test
jl
test
or
jo
jmp
les
shlb
out
stc
adc
push
adc
pop
nop
das
nop
fbld
stos
rol
push
xchg
lcall
adc
mov
sbbb
notl
sbb
cmpsb
arpl
dec
push
sti
mov
mov
repnz
mov
in
int
add
add
pusha
add
inc
xchg
movsl
in
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
outsb
add
